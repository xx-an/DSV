;-- section..plt:
;-- .plt:
0x000015a0      ff356a982000   push qword [0x0020ae10]                 ; [12] -r-x section size 848 named .plt
0x000015a6      ff256c982000   jmp qword [0x0020ae18]                  ; [0x20ae18:8]=0
0x000015ac      0f1f4000       nop dword [rax]
;-- imp.free:
0x000015b0      ff256a982000   jmp qword [reloc.free]                  ; [0x20ae20:8]=0x15b6
0x000015b6      6800000000     push 0
0x000015bb      e9e0ffffff     jmp sym..plt
;-- imp.abort:
0x000015c0      ff2562982000   jmp qword [reloc.abort]                 ; [0x20ae28:8]=0x15c6
0x000015c6      6801000000     push 1
0x000015cb      e9d0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x000015d0      ff255a982000   jmp qword [reloc.__errno_location]      ; [0x20ae30:8]=0x15d6
0x000015d6      6802000000     push 2
0x000015db      e9c0ffffff     jmp sym..plt
;-- imp.strncmp:
0x000015e0      ff2552982000   jmp qword [reloc.strncmp]               ; [0x20ae38:8]=0x15e6
0x000015e6      6803000000     push 3
0x000015eb      e9b0ffffff     jmp sym..plt
;-- imp._exit:
0x000015f0      ff254a982000   jmp qword [reloc._exit]                 ; [0x20ae40:8]=0x15f6
0x000015f6      6804000000     push 4
0x000015fb      e9a0ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001600      ff2542982000   jmp qword [reloc.__fpending]            ; [0x20ae48:8]=0x1606
0x00001606      6805000000     push 5
0x0000160b      e990ffffff     jmp sym..plt
;-- imp.fcntl:
0x00001610      ff253a982000   jmp qword [reloc.fcntl]                 ; [0x20ae50:8]=0x1616
0x00001616      6806000000     push 6
0x0000161b      e980ffffff     jmp sym..plt
;-- imp.fread_unlocked:
0x00001620      ff2532982000   jmp qword [reloc.fread_unlocked]        ; [0x20ae58:8]=0x1626 ; "&\x16"
0x00001626      6807000000     push 7
0x0000162b      e970ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001630      ff252a982000   jmp qword [reloc.textdomain]            ; [0x20ae60:8]=0x1636 ; "6\x16"
0x00001636      6808000000     push 8
0x0000163b      e960ffffff     jmp sym..plt
;-- imp.fclose:
0x00001640      ff2522982000   jmp qword [reloc.fclose]                ; [0x20ae68:8]=0x1646 ; "F\x16"
0x00001646      6809000000     push 9
0x0000164b      e950ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001650      ff251a982000   jmp qword [reloc.bindtextdomain]        ; [0x20ae70:8]=0x1656 ; "V\x16"
0x00001656      680a000000     push 0xa
0x0000165b      e940ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001660      ff2512982000   jmp qword [reloc.dcgettext]             ; [0x20ae78:8]=0x1666 ; "f\x16"
0x00001666      680b000000     push 0xb
0x0000166b      e930ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001670      ff250a982000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x20ae80:8]=0x1676 ; "v\x16"
0x00001676      680c000000     push 0xc
0x0000167b      e920ffffff     jmp sym..plt
;-- imp.strlen:
0x00001680      ff2502982000   jmp qword [reloc.strlen]                ; [0x20ae88:8]=0x1686
0x00001686      680d000000     push 0xd
0x0000168b      e910ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001690      ff25fa972000   jmp qword [reloc.__stack_chk_fail]      ; [0x20ae90:8]=0x1696
0x00001696      680e000000     push 0xe
0x0000169b      e900ffffff     jmp sym..plt
;-- imp.getopt_long:
0x000016a0      ff25f2972000   jmp qword [reloc.getopt_long]           ; [0x20ae98:8]=0x16a6
0x000016a6      680f000000     push 0xf
0x000016ab      e9f0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x000016b0      ff25ea972000   jmp qword [reloc.mbrtowc]               ; [0x20aea0:8]=0x16b6
0x000016b6      6810000000     push 0x10
0x000016bb      e9e0feffff     jmp sym..plt
;-- imp.strchr:
0x000016c0      ff25e2972000   jmp qword [reloc.strchr]                ; [0x20aea8:8]=0x16c6
0x000016c6      6811000000     push 0x11
0x000016cb      e9d0feffff     jmp sym..plt
;-- imp.__overflow:
0x000016d0      ff25da972000   jmp qword [reloc.__overflow]            ; [0x20aeb0:8]=0x16d6
0x000016d6      6812000000     push 0x12
0x000016db      e9c0feffff     jmp sym..plt
;-- imp.strrchr:
0x000016e0      ff25d2972000   jmp qword [reloc.strrchr]               ; [0x20aeb8:8]=0x16e6
0x000016e6      6813000000     push 0x13
0x000016eb      e9b0feffff     jmp sym..plt
;-- imp.lseek:
0x000016f0      ff25ca972000   jmp qword [reloc.lseek]                 ; [0x20aec0:8]=0x16f6
0x000016f6      6814000000     push 0x14
0x000016fb      e9a0feffff     jmp sym..plt
;-- imp.memset:
0x00001700      ff25c2972000   jmp qword [reloc.memset]                ; [0x20aec8:8]=0x1706
0x00001706      6815000000     push 0x15
0x0000170b      e990feffff     jmp sym..plt
;-- imp.close:
0x00001710      ff25ba972000   jmp qword [reloc.close]                 ; [0x20aed0:8]=0x1716
0x00001716      6816000000     push 0x16
0x0000171b      e980feffff     jmp sym..plt
;-- imp.posix_fadvise:
0x00001720      ff25b2972000   jmp qword [reloc.posix_fadvise]         ; [0x20aed8:8]=0x1726 ; "&\x17"
0x00001726      6817000000     push 0x17
0x0000172b      e970feffff     jmp sym..plt
;-- imp.memcmp:
0x00001730      ff25aa972000   jmp qword [reloc.memcmp]                ; [0x20aee0:8]=0x1736 ; "6\x17"
0x00001736      6818000000     push 0x18
0x0000173b      e960feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001740      ff25a2972000   jmp qword [reloc.fputs_unlocked]        ; [0x20aee8:8]=0x1746 ; "F\x17"
0x00001746      6819000000     push 0x19
0x0000174b      e950feffff     jmp sym..plt
;-- imp.calloc:
0x00001750      ff259a972000   jmp qword [reloc.calloc]                ; [0x20aef0:8]=0x1756 ; "V\x17"
0x00001756      681a000000     push 0x1a
0x0000175b      e940feffff     jmp sym..plt
;-- imp.__getdelim:
0x00001760      ff2592972000   jmp qword [reloc.__getdelim]            ; [0x20aef8:8]=0x1766 ; "f\x17"
0x00001766      681b000000     push 0x1b
0x0000176b      e930feffff     jmp sym..plt
;-- imp.memcpy:
0x00001770      ff258a972000   jmp qword [reloc.memcpy]                ; [0x20af00:8]=0x1776 ; "v\x17"
0x00001776      681c000000     push 0x1c
0x0000177b      e920feffff     jmp sym..plt
;-- imp.fileno:
0x00001780      ff2582972000   jmp qword [reloc.fileno]                ; [0x20af08:8]=0x1786
0x00001786      681d000000     push 0x1d
0x0000178b      e910feffff     jmp sym..plt
;-- imp.malloc:
0x00001790      ff257a972000   jmp qword [reloc.malloc]                ; [0x20af10:8]=0x1796
0x00001796      681e000000     push 0x1e
0x0000179b      e900feffff     jmp sym..plt
;-- imp.fflush:
0x000017a0      ff2572972000   jmp qword [reloc.fflush]                ; [0x20af18:8]=0x17a6
0x000017a6      681f000000     push 0x1f
0x000017ab      e9f0fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x000017b0      ff256a972000   jmp qword [reloc.nl_langinfo]           ; [0x20af20:8]=0x17b6
0x000017b6      6820000000     push 0x20                               ; "@"
0x000017bb      e9e0fdffff     jmp sym..plt
;-- imp.__freading:
0x000017c0      ff2562972000   jmp qword [reloc.__freading]            ; [0x20af28:8]=0x17c6
0x000017c6      6821000000     push 0x21                               ; '!'
0x000017cb      e9d0fdffff     jmp sym..plt
;-- imp.fwrite_unlocked:
0x000017d0      ff255a972000   jmp qword [reloc.fwrite_unlocked]       ; [0x20af30:8]=0x17d6
0x000017d6      6822000000     push 0x22                               ; '"'
0x000017db      e9c0fdffff     jmp sym..plt
;-- imp.realloc:
0x000017e0      ff2552972000   jmp qword [reloc.realloc]               ; [0x20af38:8]=0x17e6
0x000017e6      6823000000     push 0x23                               ; '#'
0x000017eb      e9b0fdffff     jmp sym..plt
;-- imp.fdopen:
0x000017f0      ff254a972000   jmp qword [reloc.fdopen]                ; [0x20af40:8]=0x17f6
0x000017f6      6824000000     push 0x24                               ; '$'
0x000017fb      e9a0fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001800      ff2542972000   jmp qword [reloc.setlocale]             ; [0x20af48:8]=0x1806
0x00001806      6825000000     push 0x25                               ; '%'
0x0000180b      e990fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001810      ff253a972000   jmp qword [reloc.__printf_chk]          ; [0x20af50:8]=0x1816
0x00001816      6826000000     push 0x26                               ; '&'
0x0000181b      e980fdffff     jmp sym..plt
;-- imp.setvbuf:
0x00001820      ff2532972000   jmp qword [reloc.setvbuf]               ; [0x20af58:8]=0x1826 ; "&\x18"
0x00001826      6827000000     push 0x27                               ; '''
0x0000182b      e970fdffff     jmp sym..plt
;-- imp.error:
0x00001830      ff252a972000   jmp qword [reloc.error]                 ; [0x20af60:8]=0x1836 ; "6\x18"
0x00001836      6828000000     push 0x28                               ; '('
0x0000183b      e960fdffff     jmp sym..plt
;-- imp.fseeko:
0x00001840      ff2522972000   jmp qword [reloc.fseeko]                ; [0x20af68:8]=0x1846 ; "F\x18"
0x00001846      6829000000     push 0x29                               ; ')'
0x0000184b      e950fdffff     jmp sym..plt
;-- imp.fopen:
0x00001850      ff251a972000   jmp qword [reloc.fopen]                 ; [0x20af70:8]=0x1856 ; "V\x18"
0x00001856      682a000000     push 0x2a                               ; '*'
0x0000185b      e940fdffff     jmp sym..plt
;-- imp.dcngettext:
0x00001860      ff2512972000   jmp qword [reloc.dcngettext]            ; [0x20af78:8]=0x1866 ; "f\x18"
0x00001866      682b000000     push 0x2b                               ; '+'
0x0000186b      e930fdffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001870      ff250a972000   jmp qword [reloc.__cxa_atexit]          ; [0x20af80:8]=0x1876 ; "v\x18"
0x00001876      682c000000     push 0x2c                               ; ','
0x0000187b      e920fdffff     jmp sym..plt
;-- imp.exit:
0x00001880      ff2502972000   jmp qword [reloc.exit]                  ; [0x20af88:8]=0x1886
0x00001886      682d000000     push 0x2d                               ; '-'
0x0000188b      e910fdffff     jmp sym..plt
;-- imp.fwrite:
0x00001890      ff25fa962000   jmp qword [reloc.fwrite]                ; [0x20af90:8]=0x1896
0x00001896      682e000000     push 0x2e                               ; '.'
0x0000189b      e900fdffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x000018a0      ff25f2962000   jmp qword [reloc.__fprintf_chk]         ; [0x20af98:8]=0x18a6
0x000018a6      682f000000     push 0x2f                               ; '/'
0x000018ab      e9f0fcffff     jmp sym..plt
;-- imp.mbsinit:
0x000018b0      ff25ea962000   jmp qword [reloc.mbsinit]               ; [0x20afa0:8]=0x18b6
0x000018b6      6830000000     push 0x30                               ; '0'
0x000018bb      e9e0fcffff     jmp sym..plt
;-- imp.iswprint:
0x000018c0      ff25e2962000   jmp qword [reloc.iswprint]              ; [0x20afa8:8]=0x18c6
0x000018c6      6831000000     push 0x31                               ; '1'
0x000018cb      e9d0fcffff     jmp sym..plt
;-- imp.__ctype_tolower_loc:
0x000018d0      ff25da962000   jmp qword [reloc.__ctype_tolower_loc]   ; [0x20afb0:8]=0x18d6
0x000018d6      6832000000     push 0x32                               ; '2'
0x000018db      e9c0fcffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x000018e0      ff25d2962000   jmp qword [reloc.__ctype_b_loc]         ; [0x20afb8:8]=0x18e6
0x000018e6      6833000000     push 0x33                               ; '3'
0x000018eb      e9b0fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x000018f0      .qword 0x9066002096ea25ff                              ; [13] -r-x section size 8 named .plt.got
0x000018f8      0000           add byte [rax], al
0x000018fa      0000           add byte [rax], al
0x000018fc      0000           add byte [rax], al
0x000018fe      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001900      4157           push r15                                ; [14] -r-x section size 24638 named .text
0x00001902      4156           push r14
0x00001904      4155           push r13
0x00001906      4154           push r12
0x00001908      4189fc         mov r12d, edi
0x0000190b      55             push rbp
0x0000190c      53             push rbx
0x0000190d      4889f3         mov rbx, rsi
0x00001910      bdffffffff     mov ebp, 0xffffffff                     ; -1
0x00001915      4881ece80000.  sub rsp, 0xe8
0x0000191c      488b3e         mov rdi, qword [rsi]
0x0000191f      64488b042528.  mov rax, qword fs:[0x28]
0x00001928      48898424d800.  mov qword [rsp + 0xd8], rax
0x00001930      31c0           xor eax, eax
0x00001932      e839340000     call sym.set_program_name
0x00001937      488d35c37100.  lea rsi, [0x00008b01]
0x0000193e      bf06000000     mov edi, 6
0x00001943      e8b8feffff     call sym.imp.setlocale
0x00001948      488d35d66000.  lea rsi, str.usr_local_share_locale     ; 0x7a25 ; "/usr/local/share/locale"
0x0000194f      488d3da66000.  lea rdi, [0x000079fc]                   ; "coreutils"
0x00001956      e8f5fcffff     call sym.imp.bindtextdomain
0x0000195b      488d3d9a6000.  lea rdi, [0x000079fc]                   ; "coreutils"
0x00001962      e8c9fcffff     call sym.imp.textdomain
0x00001967      488d3db21900.  lea rdi, sym.close_stdout               ; 0x3320 ; "USH\x83\xec\bH\x8b={} "
0x0000196e      e8bd5f0000     call sym.atexit
0x00001973      488b3d2e9720.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x0000197a      31c9           xor ecx, ecx
0x0000197c      ba01000000     mov edx, 1
0x00001981      31f6           xor esi, esi
0x00001983      e898feffff     call sym.imp.setvbuf
0x00001988      c644247800     mov byte [rsp + 0x78], 0
0x0000198d      c644242b00     mov byte [rsp + 0x2b], 0
0x00001992      660f1f440000   nop word [rax + rax]
0x00001998      488d0d819020.  lea rcx, obj.long_options               ; 0x20aa20
0x0000199f      488d15c06000.  lea rdx, str.bctwz                      ; 0x7a66 ; "bctwz"
0x000019a6      4531c0         xor r8d, r8d
0x000019a9      4889de         mov rsi, rbx
0x000019ac      4489e7         mov edi, r12d
0x000019af      e8ecfcffff     call sym.imp.getopt_long
0x000019b4      83f8ff         cmp eax, 0xffffffff
0x000019b7      0f847f010000   je 0x1b3c
0x000019bd      83f877         cmp eax, 0x77
0x000019c0      0f84da000000   je 0x1aa0
0x000019c6      7e38           jle 0x1a00
0x000019c8      3d81000000     cmp eax, 0x81
0x000019cd      0f841d010000   je 0x1af0
0x000019d3      7e53           jle 0x1a28
0x000019d5      3d83000000     cmp eax, 0x83
0x000019da      0f8400010000   je 0x1ae0
0x000019e0      0f8cda000000   jl 0x1ac0
0x000019e6      3d84000000     cmp eax, 0x84
0x000019eb      0f85df010000   jne 0x1bd0
0x000019f1      c644247801     mov byte [rsp + 0x78], 1
0x000019f6      bd01000000     mov ebp, 1
0x000019fb      eb9b           jmp 0x1998
0x000019fd      0f1f00         nop dword [rax]
0x00001a00      83f862         cmp eax, 0x62
0x00001a03      0f8417010000   je 0x1b20
0x00001a09      7e45           jle 0x1a50
0x00001a0b      83f863         cmp eax, 0x63
0x00001a0e      0f84fc000000   je 0x1b10
0x00001a14      83f874         cmp eax, 0x74
0x00001a17      0f85b3010000   jne 0x1bd0
0x00001a1d      31ed           xor ebp, ebp
0x00001a1f      e974ffffff     jmp 0x1998
0x00001a24      0f1f4000       nop dword [rax]
0x00001a28      83f87a         cmp eax, 0x7a
0x00001a2b      0f84ff000000   je 0x1b30
0x00001a31      83c080         add eax, 0xffffff80
0x00001a34      0f8596010000   jne 0x1bd0
0x00001a3a      c605b1962000.  mov byte [obj.ignore_missing], 1        ; [0x20b0f2:1]=0
0x00001a41      e952ffffff     jmp 0x1998
0x00001a46      662e0f1f8400.  nop word cs:[rax + rax]
0x00001a50      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00001a55      0f85760f0000   jne 0x29d1
0x00001a5b      488d05f75f00.  lea rax, str.David_Madore               ; 0x7a59 ; "David Madore"
0x00001a62      488b3d3f9620.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x00001a69      488b0da89520.  mov rcx, qword [obj.Version]            ; [0x20b018:8]=0x8520 ; " \x85"
0x00001a70      6a00           push 0
0x00001a72      4c8d0dc45f00.  lea r9, str.Scott_Miller                ; 0x7a3d ; "Scott Miller"
0x00001a79      4c8d05ca5f00.  lea r8, str.Ulrich_Drepper              ; 0x7a4a ; "Ulrich Drepper"
0x00001a80      50             push rax
0x00001a81      488d15705f00.  lea rdx, str.GNU_coreutils              ; 0x79f8 ; "GNU coreutils"
0x00001a88      488d35db5e00.  lea rsi, str.sha1sum                    ; 0x796a ; "sha1sum"
0x00001a8f      31c0           xor eax, eax
0x00001a91      e8da540000     call sym.version_etc
0x00001a96      31ff           xor edi, edi
0x00001a98      e8e3fdffff     call sym.imp.exit
0x00001a9d      0f1f00         nop dword [rax]
0x00001aa0      c6054d962000.  mov byte [obj.status_only], 0           ; [0x20b0f4:1]=0
0x00001aa7      c60545962000.  mov byte [obj.warn], 1                  ; [0x20b0f3:1]=0
0x00001aae      c6053c962000.  mov byte [obj.quiet], 0                 ; [0x20b0f1:1]=0
0x00001ab5      e9defeffff     jmp 0x1998
0x00001aba      660f1f440000   nop word [rax + rax]
0x00001ac0      c6052d962000.  mov byte [obj.status_only], 0           ; [0x20b0f4:1]=0
0x00001ac7      c60525962000.  mov byte [obj.warn], 0                  ; [0x20b0f3:1]=0
0x00001ace      c6051c962000.  mov byte [obj.quiet], 1                 ; [0x20b0f1:1]=0
0x00001ad5      e9befeffff     jmp 0x1998
0x00001ada      660f1f440000   nop word [rax + rax]
0x00001ae0      c60509962000.  mov byte [obj.strict], 1                ; [0x20b0f0:1]=0
0x00001ae7      e9acfeffff     jmp 0x1998
0x00001aec      0f1f4000       nop dword [rax]
0x00001af0      c605fd952000.  mov byte [obj.status_only], 1           ; [0x20b0f4:1]=0
0x00001af7      c605f5952000.  mov byte [obj.warn], 0                  ; [0x20b0f3:1]=0
0x00001afe      c605ec952000.  mov byte [obj.quiet], 0                 ; [0x20b0f1:1]=0
0x00001b05      e98efeffff     jmp 0x1998
0x00001b0a      660f1f440000   nop word [rax + rax]
0x00001b10      c644242b01     mov byte [rsp + 0x2b], 1
0x00001b15      e97efeffff     jmp 0x1998
0x00001b1a      660f1f440000   nop word [rax + rax]
0x00001b20      bd01000000     mov ebp, 1
0x00001b25      e96efeffff     jmp 0x1998
0x00001b2a      660f1f440000   nop word [rax + rax]
0x00001b30      c605d9942000.  mov byte [obj.delim], 0                 ; [0x20b010:1]=10 ; "\n"
0x00001b37      e95cfeffff     jmp 0x1998
0x00001b3c      85ed           test ebp, ebp
0x00001b3e      48c705b79520.  mov qword [obj.min_digest_line_length], 0x2a ; '*'
                                                                       ; [0x20b100:8]=0
0x00001b49      48c705a49520.  mov qword [obj.digest_hex_bytes], 0x28  ; '('
                                                                       ; [0x20b0f8:8]=0
0x00001b54      0f94c0         sete al
0x00001b57      84442478       test byte [rsp + 0x78], al
0x00001b5b      0f85ba0e0000   jne 0x2a1b
0x00001b61      803da8942000.  cmp byte [obj.delim], 0xa               ; [0x20b010:1]=10 ; "\n"
0x00001b68      7470           je 0x1bda
0x00001b6a      807c242b00     cmp byte [rsp + 0x2b], 0
0x00001b6f      ba05000000     mov edx, 5
0x00001b74      488d35f56500.  lea rsi, str.the___zero_option_is_not_supported_when_verifying_checksums ; 0x8170 ; "the --zero option is not supported when verifying checksums"
0x00001b7b      753e           jne 0x1bbb
0x00001b7d      803d6e952000.  cmp byte [obj.ignore_missing], 0        ; [0x20b0f2:1]=0
0x00001b84      0f85a20e0000   jne 0x2a2c
0x00001b8a      803d63952000.  cmp byte [obj.status_only], 0           ; [0x20b0f4:1]=0
0x00001b91      0f85690e0000   jne 0x2a00
0x00001b97      803d55952000.  cmp byte [obj.warn], 0                  ; [0x20b0f3:1]=0
0x00001b9e      0f8401030000   je 0x1ea5
0x00001ba4      807c242b00     cmp byte [rsp + 0x2b], 0
0x00001ba9      ba05000000     mov edx, 5
0x00001bae      488d35136700.  lea rsi, str.the___warn_option_is_meaningful_only_when_verifying_checksums ; 0x82c8 ; "the --warn option is meaningful only when verifying checksums"
0x00001bb5      0f8582000000   jne 0x1c3d
0x00001bbb      31ff           xor edi, edi
0x00001bbd      e89efaffff     call sym.imp.dcgettext
0x00001bc2      31f6           xor esi, esi
0x00001bc4      4889c2         mov rdx, rax
0x00001bc7      31ff           xor edi, edi
0x00001bc9      31c0           xor eax, eax
0x00001bcb      e860fcffff     call sym.imp.error
0x00001bd0      bf01000000     mov edi, 1
0x00001bd5      e8c6120000     call sym.usage
0x00001bda      807c242b00     cmp byte [rsp + 0x2b], 0
0x00001bdf      7413           je 0x1bf4
0x00001be1      807c247800     cmp byte [rsp + 0x78], 0
0x00001be6      ba05000000     mov edx, 5
0x00001beb      488d35be6500.  lea rsi, str.the___tag_option_is_meaningless_when_verifying_checksums ; 0x81b0 ; "the --tag option is meaningless when verifying checksums"
0x00001bf2      75c7           jne 0x1bbb
0x00001bf4      85ed           test ebp, ebp
0x00001bf6      7813           js 0x1c0b
0x00001bf8      807c242b00     cmp byte [rsp + 0x2b], 0
0x00001bfd      ba05000000     mov edx, 5
0x00001c02      488d35e76500.  lea rsi, str.the___binary_and___text_options_are_meaningless_when_verifying_checksums ; 0x81f0 ; "the --binary and --text options are meaningless when verifying checksums"
0x00001c09      75b0           jne 0x1bbb
0x00001c0b      803de0942000.  cmp byte [obj.ignore_missing], 0        ; [0x20b0f2:1]=0
0x00001c12      0f84d00d0000   je 0x29e8
0x00001c18      807c242b00     cmp byte [rsp + 0x2b], 0
0x00001c1d      0f84090e0000   je 0x2a2c
0x00001c23      803dca942000.  cmp byte [obj.status_only], 0           ; [0x20b0f4:1]=0
0x00001c2a      0f847d090000   je 0x25ad
0x00001c30      803dbc942000.  cmp byte [obj.warn], 0                  ; [0x20b0f3:1]=0
0x00001c37      0f8468020000   je 0x1ea5
0x00001c3d      83fdff         cmp ebp, 0xffffffff
0x00001c40      7502           jne 0x1c44
0x00001c42      31ed           xor ebp, ebp
0x00001c44      4963c4         movsxd rax, r12d
0x00001c47      488d04c3       lea rax, [rbx + rax*8]
0x00001c4b      4889442448     mov qword [rsp + 0x48], rax
0x00001c50      486305619420.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20b0b8:4]=0
0x00001c57      4439e0         cmp eax, r12d
0x00001c5a      7519           jne 0x1c75
0x00001c5c      488b7c2448     mov rdi, qword [rsp + 0x48]
0x00001c61      488d355a6900.  lea rsi, [0x000085c2]                   ; "-"
0x00001c68      4883c708       add rdi, 8
0x00001c6c      488977f8       mov qword [rdi - 8], rsi
0x00001c70      48897c2448     mov qword [rsp + 0x48], rdi
0x00001c75      488d04c3       lea rax, [rbx + rax*8]
0x00001c79      4839442448     cmp qword [rsp + 0x48], rax
0x00001c7e      4889442418     mov qword [rsp + 0x18], rax
0x00001c83      0f86ab0c0000   jbe 0x2934
0x00001c89      83fd01         cmp ebp, 1
0x00001c8c      4c8d357d6800.  lea r14, obj.bin2hex.7140               ; 0x8510 ; "0123456789abcdef8.31"
0x00001c93      c644247901     mov byte [rsp + 0x79], 1
0x00001c98      19c0           sbb eax, eax
0x00001c9a      83e0f6         and eax, 0xfffffff6                     ; 4294967286
0x00001c9d      83c02a         add eax, 0x2a
0x00001ca0      8944247c       mov dword [rsp + 0x7c], eax
0x00001ca4      8844247b       mov byte [rsp + 0x7b], al
0x00001ca8      0f1f84000000.  nop dword [rax + rax]
0x00001cb0      488b442418     mov rax, qword [rsp + 0x18]
0x00001cb5      807c242b00     cmp byte [rsp + 0x2b], 0
0x00001cba      488b30         mov rsi, qword [rax]
0x00001cbd      4889742420     mov qword [rsp + 0x20], rsi
0x00001cc2      0f8478060000   je 0x2340
0x00001cc8      488d3df36800.  lea rdi, [0x000085c2]                   ; "-"
0x00001ccf      b902000000     mov ecx, 2
0x00001cd4      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001cd6      0f97c0         seta al
0x00001cd9      1c00           sbb al, 0
0x00001cdb      0fbec0         movsx eax, al
0x00001cde      85c0           test eax, eax
0x00001ce0      8944242c       mov dword [rsp + 0x2c], eax
0x00001ce4      0f852b070000   jne 0x2415
0x00001cea      488d357b5d00.  lea rsi, str.standard_input             ; 0x7a6c ; "standard input"
0x00001cf1      ba05000000     mov edx, 5
0x00001cf6      31ff           xor edi, edi
0x00001cf8      c60509942000.  mov byte [obj.have_read_stdin], 1       ; [0x20b108:1]=0
0x00001cff      e85cf9ffff     call sym.imp.dcgettext
0x00001d04      4c8b25a59320.  mov r12, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20b0b0:8]=0
0x00001d0b      4889442420     mov qword [rsp + 0x20], rax
0x00001d10      488d84249800.  lea rax, [rsp + 0x98]
0x00001d18      48c784249000.  mov qword [rsp + 0x90], 0
0x00001d24      48c784249800.  mov qword [rsp + 0x98], 0
0x00001d30      c644247a00     mov byte [rsp + 0x7a], 0
0x00001d35      c644243000     mov byte [rsp + 0x30], 0
0x00001d3a      4531ed         xor r13d, r13d
0x00001d3d      4889442410     mov qword [rsp + 0x10], rax
0x00001d42      488d84249000.  lea rax, [rsp + 0x90]
0x00001d4a      48c744245800.  mov qword [rsp + 0x58], 0
0x00001d53      48c744245000.  mov qword [rsp + 0x50], 0
0x00001d5c      bd01000000     mov ebp, 1
0x00001d61      4889442408     mov qword [rsp + 8], rax
0x00001d66      488d84248f00.  lea rax, [rsp + 0x8f]
0x00001d6e      4889442440     mov qword [rsp + 0x40], rax
0x00001d73      488d8424c000.  lea rax, [rsp + 0xc0]
0x00001d7b      4889442438     mov qword [rsp + 0x38], rax
0x00001d80      488b742410     mov rsi, qword [rsp + 0x10]
0x00001d85      488b7c2408     mov rdi, qword [rsp + 8]
0x00001d8a      4c89e1         mov rcx, r12
0x00001d8d      ba0a000000     mov edx, 0xa
0x00001d92      e8c9f9ffff     call sym.imp.__getdelim
0x00001d97      4885c0         test rax, rax
0x00001d9a      0f8efc020000   jle 0x209c
0x00001da0      488b9c249000.  mov rbx, qword [rsp + 0x90]
0x00001da8      0fb60b         movzx ecx, byte [rbx]
0x00001dab      80f923         cmp cl, 0x23
0x00001dae      0f84a1000000   je 0x1e55
0x00001db4      807c03ff0a     cmp byte [rbx + rax - 1], 0xa
0x00001db9      4989c7         mov r15, rax
0x00001dbc      7514           jne 0x1dd2
0x00001dbe      4983ef01       sub r15, 1
0x00001dc2      42c6043b00     mov byte [rbx + r15], 0
0x00001dc7      488b9c249000.  mov rbx, qword [rsp + 0x90]
0x00001dcf      0fb60b         movzx ecx, byte [rbx]
0x00001dd2      80f909         cmp cl, 9
0x00001dd5      7407           je 0x1dde
0x00001dd7      31d2           xor edx, edx
0x00001dd9      80f920         cmp cl, 0x20                            ; "@"
0x00001ddc      7514           jne 0x1df2
0x00001dde      31d2           xor edx, edx
0x00001de0      4883c201       add rdx, 1
0x00001de4      0fb60c13       movzx ecx, byte [rbx + rdx]
0x00001de8      80f920         cmp cl, 0x20                            ; "@"
0x00001deb      74f3           je 0x1de0
0x00001ded      80f909         cmp cl, 9
0x00001df0      74ee           je 0x1de0
0x00001df2      4531c9         xor r9d, r9d
0x00001df5      80f95c         cmp cl, 0x5c
0x00001df8      750a           jne 0x1e04
0x00001dfa      440fb64c242b   movzx r9d, byte [rsp + 0x2b]
0x00001e00      4883c201       add rdx, 1
0x00001e04      4c8d0413       lea r8, [rbx + rdx]
0x00001e08      488d3d635b00.  lea rdi, str.SHA1                       ; 0x7972 ; "SHA1"
0x00001e0f      b904000000     mov ecx, 4
0x00001e14      4c89c6         mov rsi, r8
0x00001e17      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001e19      0f97c0         seta al
0x00001e1c      1c00           sbb al, 0
0x00001e1e      84c0           test al, al
0x00001e20      0f85ca000000   jne 0x1ef0
0x00001e26      0fb6441304     movzx eax, byte [rbx + rdx + 4]
0x00001e2b      488d4a04       lea rcx, [rdx + 4]
0x00001e2f      3c20           cmp al, 0x20                            ; "@"
0x00001e31      7509           jne 0x1e3c
0x00001e33      0fb6441305     movzx eax, byte [rbx + rdx + 5]
0x00001e38      488d4a05       lea rcx, [rdx + 5]
0x00001e3c      3c28           cmp al, 0x28
0x00001e3e      0f8480050000   je 0x23c4
0x00001e44      4983c501       add r13, 1
0x00001e48      803da4922000.  cmp byte [obj.warn], 0                  ; [0x20b0f3:1]=0
0x00001e4f      0f857b030000   jne 0x21d0
0x00001e55      41f6042430     test byte [r12], 0x30
0x00001e5a      0f853c020000   jne 0x209c
0x00001e60      4883c501       add rbp, 1
0x00001e64      0f8516ffffff   jne 0x1d80
0x00001e6a      488b542420     mov rdx, qword [rsp + 0x20]
0x00001e6f      be03000000     mov esi, 3
0x00001e74      31ff           xor edi, edi
0x00001e76      e8354a0000     call sym.quotearg_n_style_colon
0x00001e7b      488d35f95b00.  lea rsi, str.s:_too_many_checksum_lines ; 0x7a7b ; "%s: too many checksum lines"
0x00001e82      4889c3         mov rbx, rax
0x00001e85      ba05000000     mov edx, 5
0x00001e8a      31ff           xor edi, edi
0x00001e8c      e8cff7ffff     call sym.imp.dcgettext
0x00001e91      4889d9         mov rcx, rbx
0x00001e94      4889c2         mov rdx, rax
0x00001e97      31f6           xor esi, esi
0x00001e99      bf01000000     mov edi, 1
0x00001e9e      31c0           xor eax, eax
0x00001ea0      e88bf9ffff     call sym.imp.error
0x00001ea5      803d45922000.  cmp byte [obj.quiet], 1                 ; [0x20b0f1:1]=0
0x00001eac      7517           jne 0x1ec5
0x00001eae      807c242b00     cmp byte [rsp + 0x2b], 0
0x00001eb3      ba05000000     mov edx, 5
0x00001eb8      488d35496400.  lea rsi, str.the___quiet_option_is_meaningful_only_when_verifying_checksums ; 0x8308 ; "the --quiet option is meaningful only when verifying checksums"
0x00001ebf      0f84f6fcffff   je 0x1bbb
0x00001ec5      803d24922000.  cmp byte [obj.strict], 0                ; [0x20b0f0:1]=0
0x00001ecc      0f846bfdffff   je 0x1c3d
0x00001ed2      807c242b00     cmp byte [rsp + 0x2b], 0
0x00001ed7      ba05000000     mov edx, 5
0x00001edc      488d35656400.  lea rsi, str.the___strict_option_is_meaningful_only_when_verifying_checksums ; 0x8348 ; "the --strict option is meaningful only when verifying checksums"
0x00001ee3      0f8554fdffff   jne 0x1c3d
0x00001ee9      e9cdfcffff     jmp 0x1bbb
0x00001eee      6690           nop
0x00001ef0      4c89f9         mov rcx, r15
0x00001ef3      31c0           xor eax, eax
0x00001ef5      4829d1         sub rcx, rdx
0x00001ef8      4180385c       cmp byte [r8], 0x5c
0x00001efc      0f94c0         sete al
0x00001eff      480305fa9120.  add rax, qword [obj.min_digest_line_length] ; [0x20b100:8]=0
0x00001f06      4839c1         cmp rcx, rax
0x00001f09      0f8235ffffff   jb 0x1e44
0x00001f0f      480315e29120.  add rdx, qword [obj.digest_hex_bytes]   ; [0x20b0f8:8]=0
0x00001f16      488d0c13       lea rcx, [rbx + rdx]
0x00001f1a      0fb601         movzx eax, byte [rcx]
0x00001f1d      3c20           cmp al, 0x20                            ; "@"
0x00001f1f      7408           je 0x1f29
0x00001f21      3c09           cmp al, 9
0x00001f23      0f851bffffff   jne 0x1e44
0x00001f29      c60100         mov byte [rcx], 0
0x00001f2c      4c89c7         mov rdi, r8
0x00001f2f      4889542470     mov qword [rsp + 0x70], rdx
0x00001f34      44884c2468     mov byte [rsp + 0x68], r9b
0x00001f39      4c89442460     mov qword [rsp + 0x60], r8
0x00001f3e      e88d0c0000     call sym.hex_digits
0x00001f43      84c0           test al, al
0x00001f45      0f84f9feffff   je 0x1e44
0x00001f4b      488b542470     mov rdx, qword [rsp + 0x70]
0x00001f50      4c89f9         mov rcx, r15
0x00001f53      8b35bb902000   mov esi, dword [obj.bsd_reversed]       ; [0x20b014:4]=-1
0x00001f59      4c8b442460     mov r8, qword [rsp + 0x60]
0x00001f5e      440fb64c2468   movzx r9d, byte [rsp + 0x68]
0x00001f64      488d4201       lea rax, [rdx + 1]
0x00001f68      4829c1         sub rcx, rax
0x00001f6b      4883e901       sub rcx, 1
0x00001f6f      7417           je 0x1f88
0x00001f71      0fb64c1301     movzx ecx, byte [rbx + rdx + 1]
0x00001f76      80f920         cmp cl, 0x20                            ; "@"
0x00001f79      0f8465070000   je 0x26e4
0x00001f7f      80f92a         cmp cl, 0x2a
0x00001f82      0f845c070000   je 0x26e4
0x00001f88      85f6           test esi, esi
0x00001f8a      0f84b4feffff   je 0x1e44
0x00001f90      c7057a902000.  mov dword [obj.bsd_reversed], 1         ; [0x20b014:4]=-1
0x00001f9a      4801c3         add rbx, rax
0x00001f9d      4584c9         test r9b, r9b
0x00001fa0      0f859b070000   jne 0x2741
0x00001fa6      8b44242c       mov eax, dword [rsp + 0x2c]
0x00001faa      85c0           test eax, eax
0x00001fac      751e           jne 0x1fcc
0x00001fae      488d3d0d6600.  lea rdi, [0x000085c2]                   ; "-"
0x00001fb5      b902000000     mov ecx, 2
0x00001fba      4889de         mov rsi, rbx
0x00001fbd      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001fbf      0f97c0         seta al
0x00001fc2      1c00           sbb al, 0
0x00001fc4      84c0           test al, al
0x00001fc6      0f8478feffff   je 0x1e44
0x00001fcc      4531ff         xor r15d, r15d
0x00001fcf      803d1e912000.  cmp byte [obj.status_only], 0           ; [0x20b0f4:1]=0
0x00001fd6      7521           jne 0x1ff9
0x00001fd8      be0a000000     mov esi, 0xa
0x00001fdd      4889df         mov rdi, rbx
0x00001fe0      4c89442430     mov qword [rsp + 0x30], r8
0x00001fe5      e8d6f6ffff     call sym.imp.strchr
0x00001fea      4c8b442430     mov r8, qword [rsp + 0x30]
0x00001fef      4531ff         xor r15d, r15d
0x00001ff2      4885c0         test rax, rax
0x00001ff5      410f95c7       setne r15b
0x00001ff9      488b542440     mov rdx, qword [rsp + 0x40]
0x00001ffe      488b742438     mov rsi, qword [rsp + 0x38]
0x00002003      4889df         mov rdi, rbx
0x00002006      4c89442430     mov qword [rsp + 0x30], r8
0x0000200b      e8f00c0000     call sym.digest_file.isra.1
0x00002010      84c0           test al, al
0x00002012      4189c1         mov r9d, eax
0x00002015      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000201a      0f8500020000   jne 0x2220
0x00002020      488344245001   add qword [rsp + 0x50], 1
0x00002026      803dc7902000.  cmp byte [obj.status_only], 0           ; [0x20b0f4:1]=0
0x0000202d      7559           jne 0x2088
0x0000202f      4585ff         test r15d, r15d
0x00002032      7420           je 0x2054
0x00002034      488b3d6d9020.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x0000203b      488b4728       mov rax, qword [rdi + 0x28]
0x0000203f      483b4730       cmp rax, qword [rdi + 0x30]
0x00002043      0f831b090000   jae 0x2964
0x00002049      488d5001       lea rdx, [rax + 1]
0x0000204d      48895728       mov qword [rdi + 0x28], rdx
0x00002051      c6005c         mov byte [rax], 0x5c                    ; '\'
                                                                       ; [0x5c:1]=0
0x00002054      4489fe         mov esi, r15d
0x00002057      4889df         mov rdi, rbx
0x0000205a      e8d10b0000     call sym.print_filename
0x0000205f      488d35315a00.  lea rsi, str.FAILED_open_or_read        ; 0x7a97 ; "FAILED open or read"
0x00002066      ba05000000     mov edx, 5
0x0000206b      31ff           xor edi, edi
0x0000206d      e8eef5ffff     call sym.imp.dcgettext
0x00002072      488d35986a00.  lea rsi, [0x00008b11]                   ; ": %s\n"
0x00002079      4889c2         mov rdx, rax
0x0000207c      bf01000000     mov edi, 1
0x00002081      31c0           xor eax, eax
0x00002083      e888f7ffff     call sym.imp.__printf_chk
0x00002088      0fb644242b     movzx eax, byte [rsp + 0x2b]
0x0000208d      41f6042430     test byte [r12], 0x30
0x00002092      88442430       mov byte [rsp + 0x30], al
0x00002096      0f84c4fdffff   je 0x1e60
0x0000209c      488bbc249000.  mov rdi, qword [rsp + 0x90]
0x000020a4      e807f5ffff     call sym.imp.free
0x000020a9      418b1c24       mov ebx, dword [r12]
0x000020ad      83e320         and ebx, 0x20                           ; "@"
0x000020b0      0f85b8040000   jne 0x256e
0x000020b6      837c242c00     cmp dword [rsp + 0x2c], 0
0x000020bb      0f8567050000   jne 0x2628
0x000020c1      807c243000     cmp byte [rsp + 0x30], 0
0x000020c6      0f8479050000   je 0x2645
0x000020cc      803d21902000.  cmp byte [obj.status_only], 0           ; [0x20b0f4:1]=0
0x000020d3      0f8585040000   jne 0x255e
0x000020d9      4d85ed         test r13, r13
0x000020dc      742f           je 0x210d
0x000020de      488d150b6300.  lea rdx, str.WARNING:__lu_lines_are_improperly_formatted ; 0x83f0 ; "WARNING: %lu lines are improperly formatted"
0x000020e5      488d35346300.  lea rsi, str.WARNING:__lu_line_is_improperly_formatted ; 0x8420 ; "WARNING: %lu line is improperly formatted"
0x000020ec      4c89e9         mov rcx, r13
0x000020ef      31ff           xor edi, edi
0x000020f1      41b805000000   mov r8d, 5
0x000020f7      e864f7ffff     call sym.imp.dcngettext
0x000020fc      4c89e9         mov rcx, r13
0x000020ff      4889c2         mov rdx, rax
0x00002102      31f6           xor esi, esi
0x00002104      31ff           xor edi, edi
0x00002106      31c0           xor eax, eax
0x00002108      e823f7ffff     call sym.imp.error
0x0000210d      48837c245000   cmp qword [rsp + 0x50], 0
0x00002113      7434           je 0x2149
0x00002115      4c8b7c2450     mov r15, qword [rsp + 0x50]
0x0000211a      488d152f6300.  lea rdx, str.WARNING:__lu_listed_files_could_not_be_read ; 0x8450 ; "WARNING: %lu listed files could not be read"
0x00002121      488d35586300.  lea rsi, str.WARNING:__lu_listed_file_could_not_be_read ; 0x8480 ; "WARNING: %lu listed file could not be read"
0x00002128      31ff           xor edi, edi
0x0000212a      41b805000000   mov r8d, 5
0x00002130      4c89f9         mov rcx, r15
0x00002133      e828f7ffff     call sym.imp.dcngettext
0x00002138      4c89f9         mov rcx, r15
0x0000213b      4889c2         mov rdx, rax
0x0000213e      31f6           xor esi, esi
0x00002140      31ff           xor edi, edi
0x00002142      31c0           xor eax, eax
0x00002144      e8e7f6ffff     call sym.imp.error
0x00002149      48837c245800   cmp qword [rsp + 0x58], 0
0x0000214f      7434           je 0x2185
0x00002151      4c8b7c2458     mov r15, qword [rsp + 0x58]
0x00002156      488d15536300.  lea rdx, str.WARNING:__lu_computed_checksums_did_NOT_match ; 0x84b0 ; "WARNING: %lu computed checksums did NOT match"
0x0000215d      488d357c6300.  lea rsi, str.WARNING:__lu_computed_checksum_did_NOT_match ; 0x84e0 ; "WARNING: %lu computed checksum did NOT match"
0x00002164      31ff           xor edi, edi
0x00002166      41b805000000   mov r8d, 5
0x0000216c      4c89f9         mov rcx, r15
0x0000216f      e8ecf6ffff     call sym.imp.dcngettext
0x00002174      4c89f9         mov rcx, r15
0x00002177      4889c2         mov rdx, rax
0x0000217a      31f6           xor esi, esi
0x0000217c      31ff           xor edi, edi
0x0000217e      31c0           xor eax, eax
0x00002180      e8abf6ffff     call sym.imp.error
0x00002185      803d668f2000.  cmp byte [obj.ignore_missing], 0        ; [0x20b0f2:1]=0
0x0000218c      0f84cc030000   je 0x255e
0x00002192      807c247a00     cmp byte [rsp + 0x7a], 0
0x00002197      0f845a070000   je 0x28f7
0x0000219d      488b442450     mov rax, qword [rsp + 0x50]
0x000021a2      480b442458     or rax, qword [rsp + 0x58]
0x000021a7      7515           jne 0x21be
0x000021a9      0fb605408f20.  movzx eax, byte [obj.strict]            ; [0x20b0f0:1]=0
0x000021b0      83f001         xor eax, 1
0x000021b3      4d85ed         test r13, r13
0x000021b6      0f94c3         sete bl
0x000021b9      09d8           or eax, ebx
0x000021bb      0fb6d8         movzx ebx, al
0x000021be      89d8           mov eax, ebx
0x000021c0      83e001         and eax, 1
0x000021c3      20442479       and byte [rsp + 0x79], al
0x000021c7      e9a1010000     jmp 0x236d
0x000021cc      0f1f4000       nop dword [rax]
0x000021d0      488b542420     mov rdx, qword [rsp + 0x20]
0x000021d5      31ff           xor edi, edi
0x000021d7      be03000000     mov esi, 3
0x000021dc      e8cf460000     call sym.quotearg_n_style_colon
0x000021e1      488d35a06100.  lea rsi, str.s:__lu:_improperly_formatted__s_checksum_line ; 0x8388 ; "%s: %lu: improperly formatted %s checksum line"
0x000021e8      31ff           xor edi, edi
0x000021ea      ba05000000     mov edx, 5
0x000021ef      4889c3         mov rbx, rax
0x000021f2      e869f4ffff     call sym.imp.dcgettext
0x000021f7      4c8d0d745700.  lea r9, str.SHA1                        ; 0x7972 ; "SHA1"
0x000021fe      4889c2         mov rdx, rax
0x00002201      4989e8         mov r8, rbp
0x00002204      4889d9         mov rcx, rbx
0x00002207      31f6           xor esi, esi
0x00002209      31ff           xor edi, edi
0x0000220b      31c0           xor eax, eax
0x0000220d      e81ef6ffff     call sym.imp.error
0x00002212      e93efcffff     jmp 0x1e55
0x00002217      660f1f840000.  nop word [rax + rax]
0x00002220      803dcb8e2000.  cmp byte [obj.ignore_missing], 0        ; [0x20b0f2:1]=0
0x00002227      740e           je 0x2237
0x00002229      80bc248f0000.  cmp byte [rsp + 0x8f], 0
0x00002231      0f8551feffff   jne 0x2088
0x00002237      488b0dba8e20.  mov rcx, qword [obj.digest_hex_bytes]   ; [0x20b0f8:8]=0
0x0000223e      4c89442468     mov qword [rsp + 0x68], r8
0x00002243      48d1e9         shr rcx, 1
0x00002246      0f8473030000   je 0x25bf
0x0000224c      48894c2460     mov qword [rsp + 0x60], rcx
0x00002251      44884c2430     mov byte [rsp + 0x30], r9b
0x00002256      e875f6ffff     call sym.imp.__ctype_tolower_loc
0x0000225b      31d2           xor edx, edx
0x0000225d      488b38         mov rdi, qword [rax]
0x00002260      440fb64c2430   movzx r9d, byte [rsp + 0x30]
0x00002266      488b4c2460     mov rcx, qword [rsp + 0x60]
0x0000226b      4c8b442468     mov r8, qword [rsp + 0x68]
0x00002270      4c8b542438     mov r10, qword [rsp + 0x38]
0x00002275      eb29           jmp 0x22a0
0x00002277      660f1f840000.  nop word [rax + rax]
0x00002280      410fb6745001   movzx esi, byte [r8 + rdx*2 + 1]
0x00002286      83e00f         and eax, 0xf
0x00002289      410fbe0406     movsx eax, byte [r14 + rax]
0x0000228e      3904b7         cmp dword [rdi + rsi*4], eax
0x00002291      752b           jne 0x22be
0x00002293      4883c201       add rdx, 1
0x00002297      4839d1         cmp rcx, rdx
0x0000229a      0f849d030000   je 0x263d
0x000022a0      410fb60412     movzx eax, byte [r10 + rdx]
0x000022a5      450fb61c50     movzx r11d, byte [r8 + rdx*2]
0x000022aa      89c6           mov esi, eax
0x000022ac      40c0ee04       shr sil, 4
0x000022b0      83e60f         and esi, 0xf
0x000022b3      410fbe3436     movsx esi, byte [r14 + rsi]
0x000022b8      4239349f       cmp dword [rdi + r11*4], esi
0x000022bc      74c2           je 0x2280
0x000022be      4839d1         cmp rcx, rdx
0x000022c1      0f84fa020000   je 0x25c1
0x000022c7      488344245801   add qword [rsp + 0x58], 1
0x000022cd      803d208e2000.  cmp byte [obj.status_only], 0           ; [0x20b0f4:1]=0
0x000022d4      0f85aefdffff   jne 0x2088
0x000022da      4585ff         test r15d, r15d
0x000022dd      0f8405060000   je 0x28e8
0x000022e3      488b3dbe8d20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x000022ea      488b4728       mov rax, qword [rdi + 0x28]
0x000022ee      483b4730       cmp rax, qword [rdi + 0x30]
0x000022f2      0f83a7060000   jae 0x299f
0x000022f8      488d7001       lea rsi, [rax + 1]
0x000022fc      48897728       mov qword [rdi + 0x28], rsi
0x00002300      c6005c         mov byte [rax], 0x5c                    ; '\'
                                                                       ; [0x5c:1]=0
0x00002303      be01000000     mov esi, 1
0x00002308      4889df         mov rdi, rbx
0x0000230b      48894c2460     mov qword [rsp + 0x60], rcx
0x00002310      4889542430     mov qword [rsp + 0x30], rdx
0x00002315      e816090000     call sym.print_filename
0x0000231a      488b542430     mov rdx, qword [rsp + 0x30]
0x0000231f      488b4c2460     mov rcx, qword [rsp + 0x60]
0x00002324      4839ca         cmp rdx, rcx
0x00002327      0f84dd020000   je 0x260a
0x0000232d      ba05000000     mov edx, 5
0x00002332      488d35725700.  lea rsi, str.FAILED                     ; 0x7aab ; "FAILED"
0x00002339      e92dfdffff     jmp 0x206b
0x0000233e      6690           nop
0x00002340      488d84249800.  lea rax, [rsp + 0x98]
0x00002348      488d9c24a000.  lea rbx, [rsp + 0xa0]
0x00002350      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00002355      4889c2         mov rdx, rax
0x00002358      4889de         mov rsi, rbx
0x0000235b      e8a0090000     call sym.digest_file.isra.1
0x00002360      84c0           test al, al
0x00002362      0f85ff000000   jne 0x2467
0x00002368      c644247900     mov byte [rsp + 0x79], 0
0x0000236d      488344241808   add qword [rsp + 0x18], 8
0x00002373      488b442418     mov rax, qword [rsp + 0x18]
0x00002378      4839442448     cmp qword [rsp + 0x48], rax
0x0000237d      0f872df9ffff   ja 0x1cb0
0x00002383      803d7e8d2000.  cmp byte [obj.have_read_stdin], 0       ; [0x20b108:1]=0
0x0000238a      0f8570030000   jne 0x2700
0x00002390      0fb6442479     movzx eax, byte [rsp + 0x79]
0x00002395      83f001         xor eax, 1
0x00002398      488bbc24d800.  mov rdi, qword [rsp + 0xd8]
0x000023a0      6448333c2528.  xor rdi, qword fs:[0x28]
0x000023a9      0fb6c0         movzx eax, al
0x000023ac      0f8531060000   jne 0x29e3
0x000023b2      4881c4e80000.  add rsp, 0xe8
0x000023b9      5b             pop rbx
0x000023ba      5d             pop rbp
0x000023bb      415c           pop r12
0x000023bd      415d           pop r13
0x000023bf      415e           pop r14
0x000023c1      415f           pop r15
0x000023c3      c3             ret
0x000023c4      4883c101       add rcx, 1
0x000023c8      4929cf         sub r15, rcx
0x000023cb      0f8473faffff   je 0x1e44
0x000023d1      4d89fa         mov r10, r15
0x000023d4      4801cb         add rbx, rcx
0x000023d7      4983ea01       sub r10, 1
0x000023db      7424           je 0x2401
0x000023dd      42807c3bff29   cmp byte [rbx + r15 - 1], 0x29
0x000023e3      7516           jne 0x23fb
0x000023e5      e99f020000     jmp 0x2689
0x000023ea      660f1f440000   nop word [rax + rax]
0x000023f0      42803c1329     cmp byte [rbx + r10], 0x29
0x000023f5      0f848e020000   je 0x2689
0x000023fb      4983ea01       sub r10, 1
0x000023ff      75ef           jne 0x23f0
0x00002401      803b29         cmp byte [rbx], 0x29
0x00002404      0f853afaffff   jne 0x1e44
0x0000240a      4989db         mov r11, rbx
0x0000240d      4531d2         xor r10d, r10d
0x00002410      e978020000     jmp 0x268d
0x00002415      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000241a      488d35275600.  lea rsi, [0x00007a48]                   ; "r"
0x00002421      e8aa280000     call sym.fopen_safer
0x00002426      4885c0         test rax, rax
0x00002429      4989c4         mov r12, rax
0x0000242c      0f85def8ffff   jne 0x1d10
0x00002432      488b542420     mov rdx, qword [rsp + 0x20]
0x00002437      be03000000     mov esi, 3
0x0000243c      31ff           xor edi, edi
0x0000243e      e86d440000     call sym.quotearg_n_style_colon
0x00002443      4889c3         mov rbx, rax
0x00002446      e885f1ffff     call sym.imp.__errno_location
0x0000244b      8b30           mov esi, dword [rax]
0x0000244d      488d15e16000.  lea rdx, [0x00008535]                   ; "%s"
0x00002454      31c0           xor eax, eax
0x00002456      4889d9         mov rcx, rbx
0x00002459      31ff           xor edi, edi
0x0000245b      e8d0f3ffff     call sym.imp.error
0x00002460      31c0           xor eax, eax
0x00002462      e95cfdffff     jmp 0x21c3
0x00002467      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000246c      be5c000000     mov esi, 0x5c                           ; '\'
0x00002471      e84af2ffff     call sym.imp.strchr
0x00002476      4885c0         test rax, rax
0x00002479      0f84d2030000   je 0x2851
0x0000247f      803d8a8b2000.  cmp byte [obj.delim], 0xa               ; [0x20b010:1]=10 ; "\n"
0x00002486      0f84e0020000   je 0x276c
0x0000248c      807c247800     cmp byte [rsp + 0x78], 0
0x00002491      0f85d7030000   jne 0x286e
0x00002497      488b055a8c20.  mov rax, qword [obj.digest_hex_bytes]   ; [0x20b0f8:8]=0
0x0000249e      31ed           xor ebp, ebp
0x000024a0      48d1e8         shr rax, 1
0x000024a3      743d           je 0x24e2
0x000024a5      4531e4         xor r12d, r12d
0x000024a8      0f1f84000000.  nop dword [rax + rax]
0x000024b0      420fb61423     movzx edx, byte [rbx + r12]
0x000024b5      488d35215600.  lea rsi, str.02x                        ; 0x7add ; "%02x"
0x000024bc      31c0           xor eax, eax
0x000024be      bf01000000     mov edi, 1
0x000024c3      4983c401       add r12, 1
0x000024c7      e844f3ffff     call sym.imp.__printf_chk
0x000024cc      488b05258c20.  mov rax, qword [obj.digest_hex_bytes]   ; [0x20b0f8:8]=0
0x000024d3      48d1e8         shr rax, 1
0x000024d6      4c39e0         cmp rax, r12
0x000024d9      77d5           ja 0x24b0
0x000024db      807c247800     cmp byte [rsp + 0x78], 0
0x000024e0      7551           jne 0x2533
0x000024e2      488b3dbf8b20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x000024e9      488b4728       mov rax, qword [rdi + 0x28]
0x000024ed      48394730       cmp qword [rdi + 0x30], rax
0x000024f1      0f8699040000   jbe 0x2990
0x000024f7      488d5001       lea rdx, [rax + 1]
0x000024fb      48895728       mov qword [rdi + 0x28], rdx
0x000024ff      c60020         mov byte [rax], 0x20                    ; [0x20:1]=64 ; "@"
0x00002502      488b3d9f8b20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x00002509      488b4728       mov rax, qword [rdi + 0x28]
0x0000250d      483b4730       cmp rax, qword [rdi + 0x30]
0x00002511      0f836b040000   jae 0x2982
0x00002517      488d5001       lea rdx, [rax + 1]
0x0000251b      48895728       mov qword [rdi + 0x28], rdx
0x0000251f      0fb67c247b     movzx edi, byte [rsp + 0x7b]
0x00002524      408838         mov byte [rax], dil
0x00002527      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000252c      89ee           mov esi, ebp
0x0000252e      e8fd060000     call sym.print_filename
0x00002533      488b3d6e8b20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x0000253a      0fb615cf8a20.  movzx edx, byte [obj.delim]             ; [0x20b010:1]=10 ; "\n"
0x00002541      488b4728       mov rax, qword [rdi + 0x28]
0x00002545      483b4730       cmp rax, qword [rdi + 0x30]
0x00002549      0f8308040000   jae 0x2957
0x0000254f      488d4801       lea rcx, [rax + 1]
0x00002553      48894f28       mov qword [rdi + 0x28], rcx
0x00002557      8810           mov byte [rax], dl
0x00002559      e90ffeffff     jmp 0x236d
0x0000255e      807c247a00     cmp byte [rsp + 0x7a], 0
0x00002563      0f8534fcffff   jne 0x219d
0x00002569      e950fcffff     jmp 0x21be
0x0000256e      488b542420     mov rdx, qword [rsp + 0x20]
0x00002573      be03000000     mov esi, 3
0x00002578      31ff           xor edi, edi
0x0000257a      e831430000     call sym.quotearg_n_style_colon
0x0000257f      488d352f5500.  lea rsi, str.s:_read_error              ; 0x7ab5 ; "%s: read error"
0x00002586      4889c3         mov rbx, rax
0x00002589      ba05000000     mov edx, 5
0x0000258e      31ff           xor edi, edi
0x00002590      e8cbf0ffff     call sym.imp.dcgettext
0x00002595      4889d9         mov rcx, rbx
0x00002598      4889c2         mov rdx, rax
0x0000259b      31f6           xor esi, esi
0x0000259d      31c0           xor eax, eax
0x0000259f      31ff           xor edi, edi
0x000025a1      e88af2ffff     call sym.imp.error
0x000025a6      31c0           xor eax, eax
0x000025a8      e916fcffff     jmp 0x21c3
0x000025ad      803d3f8b2000.  cmp byte [obj.warn], 0                  ; [0x20b0f3:1]=0
0x000025b4      0f8583f6ffff   jne 0x1c3d
0x000025ba      e906f9ffff     jmp 0x1ec5
0x000025bf      31d2           xor edx, edx
0x000025c1      0fb6052c8b20.  movzx eax, byte [obj.status_only]       ; [0x20b0f4:1]=0
0x000025c8      84c0           test al, al
0x000025ca      8844247a       mov byte [rsp + 0x7a], al
0x000025ce      0f85b4faffff   jne 0x2088
0x000025d4      0fb605168b20.  movzx eax, byte [obj.quiet]             ; [0x20b0f1:1]=0
0x000025db      84c0           test al, al
0x000025dd      8844247a       mov byte [rsp + 0x7a], al
0x000025e1      0f85a1faffff   jne 0x2088
0x000025e7      4585ff         test r15d, r15d
0x000025ea      0f8521040000   jne 0x2a11
0x000025f0      31f6           xor esi, esi
0x000025f2      4889df         mov rdi, rbx
0x000025f5      44884c2430     mov byte [rsp + 0x30], r9b
0x000025fa      e831060000     call sym.print_filename
0x000025ff      440fb64c2430   movzx r9d, byte [rsp + 0x30]
0x00002605      44884c247a     mov byte [rsp + 0x7a], r9b
0x0000260a      803de08a2000.  cmp byte [obj.quiet], 0                 ; [0x20b0f1:1]=0
0x00002611      0f8571faffff   jne 0x2088
0x00002617      ba05000000     mov edx, 5
0x0000261c      488d358f5400.  lea rsi, [0x00007ab2]                   ; "OK"
0x00002623      e943faffff     jmp 0x206b
0x00002628      4c89e7         mov rdi, r12
0x0000262b      e8304d0000     call sym.rpl_fclose
0x00002630      85c0           test eax, eax
0x00002632      0f8489faffff   je 0x20c1
0x00002638      e9f5fdffff     jmp 0x2432
0x0000263d      4889ca         mov rdx, rcx
0x00002640      e97cffffff     jmp 0x25c1
0x00002645      488b542420     mov rdx, qword [rsp + 0x20]
0x0000264a      31ff           xor edi, edi
0x0000264c      be03000000     mov esi, 3
0x00002651      e85a420000     call sym.quotearg_n_style_colon
0x00002656      488d355b5d00.  lea rsi, str.s:_no_properly_formatted__s_checksum_lines_found ; 0x83b8 ; "%s: no properly formatted %s checksum lines found"
0x0000265d      31ff           xor edi, edi
0x0000265f      ba05000000     mov edx, 5
0x00002664      4889c5         mov rbp, rax
0x00002667      e8f4efffff     call sym.imp.dcgettext
0x0000266c      4c8d05ff5200.  lea r8, str.SHA1                        ; 0x7972 ; "SHA1"
0x00002673      4889c2         mov rdx, rax
0x00002676      4889e9         mov rcx, rbp
0x00002679      31f6           xor esi, esi
0x0000267b      31ff           xor edi, edi
0x0000267d      31c0           xor eax, eax
0x0000267f      e8acf1ffff     call sym.imp.error
0x00002684      e935fbffff     jmp 0x21be
0x00002689      4e8d1c13       lea r11, [rbx + r10]
0x0000268d      4584c9         test r9b, r9b
0x00002690      0f85a8020000   jne 0x293e
0x00002696      4983c201       add r10, 1
0x0000269a      41c60300       mov byte [r11], 0
0x0000269e      eb04           jmp 0x26a4
0x000026a0      4983c201       add r10, 1
0x000026a4      420fb60413     movzx eax, byte [rbx + r10]
0x000026a9      3c20           cmp al, 0x20                            ; "@"
0x000026ab      74f3           je 0x26a0
0x000026ad      3c09           cmp al, 9
0x000026af      74ef           je 0x26a0
0x000026b1      3c3d           cmp al, 0x3d
0x000026b3      0f858bf7ffff   jne 0x1e44
0x000026b9      4a8d541301     lea rdx, [rbx + r10 + 1]
0x000026be      0fb602         movzx eax, byte [rdx]
0x000026c1      4989d0         mov r8, rdx
0x000026c4      488d5201       lea rdx, [rdx + 1]
0x000026c8      3c20           cmp al, 0x20                            ; "@"
0x000026ca      74f2           je 0x26be
0x000026cc      3c09           cmp al, 9
0x000026ce      74ee           je 0x26be
0x000026d0      4c89c7         mov rdi, r8
0x000026d3      4c89442460     mov qword [rsp + 0x60], r8
0x000026d8      e8f3040000     call sym.hex_digits
0x000026dd      4c8b442460     mov r8, qword [rsp + 0x60]
0x000026e2      eb7b           jmp 0x275f
0x000026e4      83ee01         sub esi, 1
0x000026e7      0f84adf8ffff   je 0x1f9a
0x000026ed      c7051d892000.  mov dword [obj.bsd_reversed], 0         ; [0x20b014:4]=-1
0x000026f7      488d4202       lea rax, [rdx + 2]
0x000026fb      e99af8ffff     jmp 0x1f9a
0x00002700      488b3da98920.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20b0b0:8]=0
0x00002707      e8544c0000     call sym.rpl_fclose
0x0000270c      83c001         add eax, 1
0x0000270f      0f857bfcffff   jne 0x2390
0x00002715      488d35505300.  lea rsi, str.standard_input             ; 0x7a6c ; "standard input"
0x0000271c      ba05000000     mov edx, 5
0x00002721      31ff           xor edi, edi
0x00002723      e838efffff     call sym.imp.dcgettext
0x00002728      4889c3         mov rbx, rax
0x0000272b      e8a0eeffff     call sym.imp.__errno_location
0x00002730      8b30           mov esi, dword [rax]
0x00002732      4889da         mov rdx, rbx
0x00002735      bf01000000     mov edi, 1
0x0000273a      31c0           xor eax, eax
0x0000273c      e8eff0ffff     call sym.imp.error
0x00002741      4c89fe         mov rsi, r15
0x00002744      4889df         mov rdi, rbx
0x00002747      4c89442460     mov qword [rsp + 0x60], r8
0x0000274c      4829c6         sub rsi, rax
0x0000274f      e8fc030000     call sym.filename_unescape
0x00002754      4c8b442460     mov r8, qword [rsp + 0x60]
0x00002759      4885c0         test rax, rax
0x0000275c      0f95c0         setne al
0x0000275f      84c0           test al, al
0x00002761      0f853ff8ffff   jne 0x1fa6
0x00002767      e9d8f6ffff     jmp 0x1e44
0x0000276c      807c247800     cmp byte [rsp + 0x78], 0
0x00002771      0f84a0000000   je 0x2817
0x00002777      488b3d2a8920.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x0000277e      488b4728       mov rax, qword [rdi + 0x28]
0x00002782      483b4730       cmp rax, qword [rdi + 0x30]
0x00002786      0f8336020000   jae 0x29c2
0x0000278c      488d5001       lea rdx, [rax + 1]
0x00002790      48895728       mov qword [rdi + 0x28], rdx
0x00002794      c6005c         mov byte [rax], 0x5c                    ; '\'
                                                                       ; [0x5c:1]=0
0x00002797      488b0d0a8920.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x0000279e      488d3dcd5100.  lea rdi, str.SHA1                       ; 0x7972 ; "SHA1"
0x000027a5      ba04000000     mov edx, 4
0x000027aa      be01000000     mov esi, 1
0x000027af      e81cf0ffff     call sym.imp.fwrite_unlocked
0x000027b4      488b0ded8820.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x000027bb      488d3d205300.  lea rdi, [0x00007ae2]                   ; " ("
0x000027c2      ba02000000     mov edx, 2
0x000027c7      be01000000     mov esi, 1
0x000027cc      e8ffefffff     call sym.imp.fwrite_unlocked
0x000027d1      488b7c2420     mov rdi, qword [rsp + 0x20]
0x000027d6      be01000000     mov esi, 1
0x000027db      e850040000     call sym.print_filename
0x000027e0      488b0dc18820.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x000027e7      488d3df75200.  lea rdi, str.                           ; 0x7ae5 ; ") = "
0x000027ee      ba04000000     mov edx, 4
0x000027f3      be01000000     mov esi, 1
0x000027f8      e8d3efffff     call sym.imp.fwrite_unlocked
0x000027fd      488b05f48820.  mov rax, qword [obj.digest_hex_bytes]   ; [0x20b0f8:8]=0
0x00002804      bd01000000     mov ebp, 1
0x00002809      48d1e8         shr rax, 1
0x0000280c      0f8593fcffff   jne 0x24a5
0x00002812      e9c4fcffff     jmp 0x24db
0x00002817      488b3d8a8820.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x0000281e      488b4728       mov rax, qword [rdi + 0x28]
0x00002822      483b4730       cmp rax, qword [rdi + 0x30]
0x00002826      0f8347010000   jae 0x2973
0x0000282c      488d5001       lea rdx, [rax + 1]
0x00002830      bd01000000     mov ebp, 1
0x00002835      48895728       mov qword [rdi + 0x28], rdx
0x00002839      c6005c         mov byte [rax], 0x5c                    ; '\'
                                                                       ; [0x5c:1]=0
0x0000283c      488b05b58820.  mov rax, qword [obj.digest_hex_bytes]   ; [0x20b0f8:8]=0
0x00002843      48d1e8         shr rax, 1
0x00002846      0f8559fcffff   jne 0x24a5
0x0000284c      e991fcffff     jmp 0x24e2
0x00002851      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00002856      be0a000000     mov esi, 0xa
0x0000285b      e860eeffff     call sym.imp.strchr
0x00002860      4885c0         test rax, rax
0x00002863      0f8516fcffff   jne 0x247f
0x00002869      e91efcffff     jmp 0x248c
0x0000286e      488b0d338820.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x00002875      488d3df65000.  lea rdi, str.SHA1                       ; 0x7972 ; "SHA1"
0x0000287c      ba04000000     mov edx, 4
0x00002881      be01000000     mov esi, 1
0x00002886      31ed           xor ebp, ebp
0x00002888      e843efffff     call sym.imp.fwrite_unlocked
0x0000288d      488b0d148820.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x00002894      488d3d475200.  lea rdi, [0x00007ae2]                   ; " ("
0x0000289b      ba02000000     mov edx, 2
0x000028a0      be01000000     mov esi, 1
0x000028a5      e826efffff     call sym.imp.fwrite_unlocked
0x000028aa      488b7c2420     mov rdi, qword [rsp + 0x20]
0x000028af      31f6           xor esi, esi
0x000028b1      e87a030000     call sym.print_filename
0x000028b6      488b0deb8720.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x000028bd      488d3d215200.  lea rdi, str.                           ; 0x7ae5 ; ") = "
0x000028c4      ba04000000     mov edx, 4
0x000028c9      be01000000     mov esi, 1
0x000028ce      e8fdeeffff     call sym.imp.fwrite_unlocked
0x000028d3      488b051e8820.  mov rax, qword [obj.digest_hex_bytes]   ; [0x20b0f8:8]=0
0x000028da      48d1e8         shr rax, 1
0x000028dd      0f85c2fbffff   jne 0x24a5
0x000028e3      e94bfcffff     jmp 0x2533
0x000028e8      31f6           xor esi, esi
0x000028ea      4889df         mov rdi, rbx
0x000028ed      e83e030000     call sym.print_filename
0x000028f2      e936faffff     jmp 0x232d
0x000028f7      488b542420     mov rdx, qword [rsp + 0x20]
0x000028fc      31ff           xor edi, edi
0x000028fe      be03000000     mov esi, 3
0x00002903      e8a83f0000     call sym.quotearg_n_style_colon
0x00002908      488d35b55100.  lea rsi, str.s:_no_file_was_verified    ; 0x7ac4 ; "%s: no file was verified"
0x0000290f      4889c5         mov rbp, rax
0x00002912      31ff           xor edi, edi
0x00002914      ba05000000     mov edx, 5
0x00002919      e842edffff     call sym.imp.dcgettext
0x0000291e      4889e9         mov rcx, rbp
0x00002921      4889c2         mov rdx, rax
0x00002924      31f6           xor esi, esi
0x00002926      31ff           xor edi, edi
0x00002928      31c0           xor eax, eax
0x0000292a      e801efffff     call sym.imp.error
0x0000292f      e98af8ffff     jmp 0x21be
0x00002934      c644247901     mov byte [rsp + 0x79], 1
0x00002939      e945faffff     jmp 0x2383
0x0000293e      4c89d6         mov rsi, r10
0x00002941      4889df         mov rdi, rbx
0x00002944      e807020000     call sym.filename_unescape
0x00002949      4885c0         test rax, rax
0x0000294c      0f8544fdffff   jne 0x2696
0x00002952      e9edf4ffff     jmp 0x1e44
0x00002957      0fb6f2         movzx esi, dl
0x0000295a      e871edffff     call sym.imp.__overflow
0x0000295f      e909faffff     jmp 0x236d
0x00002964      be5c000000     mov esi, 0x5c                           ; '\'
0x00002969      e862edffff     call sym.imp.__overflow
0x0000296e      e9e1f6ffff     jmp 0x2054
0x00002973      be5c000000     mov esi, 0x5c                           ; '\'
0x00002978      e853edffff     call sym.imp.__overflow
0x0000297d      e97bfeffff     jmp 0x27fd
0x00002982      8b74247c       mov esi, dword [rsp + 0x7c]
0x00002986      e845edffff     call sym.imp.__overflow
0x0000298b      e997fbffff     jmp 0x2527
0x00002990      be20000000     mov esi, 0x20                           ; "@"
0x00002995      e836edffff     call sym.imp.__overflow
0x0000299a      e963fbffff     jmp 0x2502
0x0000299f      be5c000000     mov esi, 0x5c                           ; '\'
0x000029a4      48894c2460     mov qword [rsp + 0x60], rcx
0x000029a9      4889542430     mov qword [rsp + 0x30], rdx
0x000029ae      e81dedffff     call sym.imp.__overflow
0x000029b3      488b542430     mov rdx, qword [rsp + 0x30]
0x000029b8      488b4c2460     mov rcx, qword [rsp + 0x60]
0x000029bd      e941f9ffff     jmp 0x2303
0x000029c2      be5c000000     mov esi, 0x5c                           ; '\'
0x000029c7      e804edffff     call sym.imp.__overflow
0x000029cc      e9c6fdffff     jmp 0x2797
0x000029d1      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x000029d6      0f85f4f1ffff   jne 0x1bd0
0x000029dc      31ff           xor edi, edi
0x000029de      e8bd040000     call sym.usage
0x000029e3      e8a8ecffff     call sym.imp.__stack_chk_fail
0x000029e8      803d05872000.  cmp byte [obj.status_only], 0           ; [0x20b0f4:1]=0
0x000029ef      0f84a2f1ffff   je 0x1b97
0x000029f5      807c242b00     cmp byte [rsp + 0x2b], 0
0x000029fa      0f85adfbffff   jne 0x25ad
0x00002a00      ba05000000     mov edx, 5
0x00002a05      488d357c5800.  lea rsi, str.the___status_option_is_meaningful_only_when_verifying_checksums ; 0x8288 ; "the --status option is meaningful only when verifying checksums"
0x00002a0c      e9aaf1ffff     jmp 0x1bbb
0x00002a11      44884c247a     mov byte [rsp + 0x7a], r9b
0x00002a16      e9c8f8ffff     jmp 0x22e3
0x00002a1b      ba05000000     mov edx, 5
0x00002a20      488d35215700.  lea rsi, str.tag_does_not_support___text_mode ; 0x8148 ; "--tag does not support --text mode"
0x00002a27      e98ff1ffff     jmp 0x1bbb
0x00002a2c      ba05000000     mov edx, 5
0x00002a31      488d35085800.  lea rsi, str.the___ignore_missing_option_is_meaningful_only_when_verifying_checksums ; 0x8240 ; "the --ignore-missing option is meaningful only when verifying checksums"
0x00002a38      e97ef1ffff     jmp 0x1bbb
0x00002a3d      0f1f00         nop dword [rax]
;-- entry0:
;-- _start:
;-- rip:
0x00002a40      31ed           xor ebp, ebp
0x00002a42      4989d1         mov r9, rdx
0x00002a45      5e             pop rsi
0x00002a46      4889e2         mov rdx, rsp
0x00002a49      4883e4f0       and rsp, 0xfffffffffffffff0
0x00002a4d      50             push rax
0x00002a4e      54             push rsp
0x00002a4f      4c8d05ca4e00.  lea r8, sym.__libc_csu_fini             ; 0x7920
0x00002a56      488d0d534e00.  lea rcx, sym.__libc_csu_init            ; 0x78b0 ; "AWAVI\x89\xd7AUATL\x8d%N1 "
0x00002a5d      488d3d9ceeff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1900 ; "AWAVAUATA\x89\xfcUSH\x89\xf3\xbd\xff\xff\xff\xffH\x81\xec\xe8"
0x00002a64      ff155e852000   call qword [reloc.__libc_start_main]    ; [0x20afc8:8]=0
0x00002a6a      f4             hlt
0x00002a6b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00002a70      488d3d298620.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20b0a0
0x00002a77      55             push rbp
0x00002a78      488d05218620.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20b0a0
0x00002a7f      4839f8         cmp rax, rdi
0x00002a82      4889e5         mov rbp, rsp
0x00002a85      7419           je 0x2aa0
0x00002a87      488b05328520.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x20afc0:8]=0
0x00002a8e      4885c0         test rax, rax
0x00002a91      740d           je 0x2aa0
0x00002a93      5d             pop rbp
0x00002a94      ffe0           jmp rax
0x00002a96      662e0f1f8400.  nop word cs:[rax + rax]
0x00002aa0      5d             pop rbp
0x00002aa1      c3             ret
0x00002aa2      0f1f4000       nop dword [rax]
0x00002aa6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00002ab0      488d3de98520.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20b0a0
0x00002ab7      488d35e28520.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20b0a0
0x00002abe      55             push rbp
0x00002abf      4829fe         sub rsi, rdi
0x00002ac2      4889e5         mov rbp, rsp
0x00002ac5      48c1fe03       sar rsi, 3
0x00002ac9      4889f0         mov rax, rsi
0x00002acc      48c1e83f       shr rax, 0x3f
0x00002ad0      4801c6         add rsi, rax
0x00002ad3      48d1fe         sar rsi, 1
0x00002ad6      7418           je 0x2af0
0x00002ad8      488b05f98420.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x20afd8:8]=0
0x00002adf      4885c0         test rax, rax
0x00002ae2      740c           je 0x2af0
0x00002ae4      5d             pop rbp
0x00002ae5      ffe0           jmp rax
0x00002ae7      660f1f840000.  nop word [rax + rax]
0x00002af0      5d             pop rbp
0x00002af1      c3             ret
0x00002af2      0f1f4000       nop dword [rax]
0x00002af6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00002b00      803de1852000.  cmp byte [obj.completed.7697], 0        ; [0x20b0e8:1]=0
0x00002b07      752f           jne 0x2b38
0x00002b09      48833dcf8420.  cmp qword [reloc.__cxa_finalize], 0     ; [0x20afe0:8]=0
0x00002b11      55             push rbp
0x00002b12      4889e5         mov rbp, rsp
0x00002b15      740c           je 0x2b23
0x00002b17      488b3dea8420.  mov rdi, qword [obj.__dso_handle]       ; [0x20b008:8]=0x20b008 obj.__dso_handle
0x00002b1e      e8cdedffff     call sym..plt.got
0x00002b23      e848ffffff     call sym.deregister_tm_clones
0x00002b28      c605b9852000.  mov byte [obj.completed.7697], 1        ; [0x20b0e8:1]=0
0x00002b2f      5d             pop rbp
0x00002b30      c3             ret
0x00002b31      0f1f80000000.  nop dword [rax]
0x00002b38      f3c3           ret
0x00002b3a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00002b40      55             push rbp
0x00002b41      4889e5         mov rbp, rsp
0x00002b44      5d             pop rbp
0x00002b45      e966ffffff     jmp sym.register_tm_clones
0x00002b4a      660f1f440000   nop word [rax + rax]
;-- filename_unescape:
0x00002b50      31d2           xor edx, edx                            ; /src:310
0x00002b52      4885f6         test rsi, rsi
0x00002b55      488d4f01       lea rcx, [rdi + 1]
0x00002b59      4c8d46ff       lea r8, [rsi - 1]                       ; /src:318
0x00002b5d      7458           je 0x2bb7                               ; /src:313
0x00002b5f      0fb60417       movzx eax, byte [rdi + rdx]             ; /src:315
0x00002b63      84c0           test al, al
0x00002b65      7429           je 0x2b90
0x00002b67      3c5c           cmp al, 0x5c
0x00002b69      752d           jne 0x2b98
0x00002b6b      4939d0         cmp r8, rdx                             ; /src:318
0x00002b6e      7420           je 0x2b90
0x00002b70      4883c201       add rdx, 1                              ; /src:323
0x00002b74      0fb60417       movzx eax, byte [rdi + rdx]             ; /src:324
0x00002b78      3c5c           cmp al, 0x5c
0x00002b7a      7444           je 0x2bc0
0x00002b7c      3c6e           cmp al, 0x6e
0x00002b7e      7510           jne 0x2b90
0x00002b80      4989c9         mov r9, rcx                             ; /src:327
0x00002b83      c641ff0a       mov byte [rcx - 1], 0xa
0x00002b87      eb15           jmp 0x2b9e                              ; /src:328
0x00002b89      0f1f80000000.  nop dword [rax]
0x00002b90      31c0           xor eax, eax                            ; /src:340
0x00002b92      c3             ret                                     ; /src:351
0x00002b93      0f1f440000     nop dword [rax + rax]
0x00002b98      4989c9         mov r9, rcx                             ; /src:343
0x00002b9b      8841ff         mov byte [rcx - 1], al
0x00002b9e      4883c201       add rdx, 1                              ; /src:313
0x00002ba2      4883c101       add rcx, 1
0x00002ba6      4839d6         cmp rsi, rdx
0x00002ba9      77b4           ja 0x2b5f
0x00002bab      4801fe         add rsi, rdi                            ; /src:347
0x00002bae      4939f1         cmp r9, rsi
0x00002bb1      7304           jae 0x2bb7
0x00002bb3      41c60100       mov byte [r9], 0                        ; /src:348
0x00002bb7      4889f8         mov rax, rdi                            ; /src:350
0x00002bba      c3             ret
0x00002bbb      0f1f440000     nop dword [rax + rax]
0x00002bc0      4989c9         mov r9, rcx                             ; /src:330
0x00002bc3      c641ff5c       mov byte [rcx - 1], 0x5c                ; '\'
                                                                       ; [0x5c:1]=0
0x00002bc7      ebd5           jmp 0x2b9e                              ; /src:331
0x00002bc9      0f1f80000000.  nop dword [rax]
;-- hex_digits:
0x00002bd0      55             push rbp                                ; /src:357
0x00002bd1      53             push rbx
0x00002bd2      4883ec08       sub rsp, 8
0x00002bd6      488b2d1b8520.  mov rbp, qword [obj.digest_hex_bytes]   ; /src:358 ; [0x20b0f8:8]=0
0x00002bdd      4885ed         test rbp, rbp
0x00002be0      743e           je 0x2c20
0x00002be2      4889fb         mov rbx, rdi
0x00002be5      e8f6ecffff     call sym.imp.__ctype_b_loc              ; /src:360
0x00002bea      488b08         mov rcx, qword [rax]
0x00002bed      4889d8         mov rax, rbx
0x00002bf0      eb13           jmp 0x2c05
0x00002bf2      660f1f440000   nop word [rax + rax]
0x00002bf8      4883c001       add rax, 1                              ; /src:362
0x00002bfc      89c2           mov edx, eax                            ; /src:358
0x00002bfe      29da           sub edx, ebx
0x00002c00      4839ea         cmp rdx, rbp
0x00002c03      731e           jae 0x2c23
0x00002c05      0fb610         movzx edx, byte [rax]                   ; /src:360
0x00002c08      f644510110     test byte [rcx + rdx*2 + 1], 0x10
0x00002c0d      75e9           jne 0x2bf8
0x00002c0f      4883c408       add rsp, 8                              ; /src:365
0x00002c13      31c0           xor eax, eax                            ; /src:361
0x00002c15      5b             pop rbx                                 ; /src:365
0x00002c16      5d             pop rbp
0x00002c17      c3             ret
0x00002c18      0f1f84000000.  nop dword [rax + rax]
0x00002c20      4889f8         mov rax, rdi                            ; /src:358
0x00002c23      803800         cmp byte [rax], 0                       ; /src:364
0x00002c26      0f94c0         sete al
0x00002c29      4883c408       add rsp, 8                              ; /src:365
0x00002c2d      5b             pop rbx
0x00002c2e      5d             pop rbp
0x00002c2f      c3             ret
;-- print_filename:
0x00002c30      55             push rbp                                ; /src:551
0x00002c31      53             push rbx
0x00002c32      4889fb         mov rbx, rdi
0x00002c35      4883ec08       sub rsp, 8
0x00002c39      4084f6         test sil, sil                           ; /src:552
0x00002c3c      0f848e000000   je 0x2cd0
0x00002c42      0fb637         movzx esi, byte [rdi]                   ; /src:558
0x00002c45      488d2d184d00.  lea rbp, [0x00007964]                   ; /src:563 ; "\n"
0x00002c4c      4084f6         test sil, sil                           ; /src:558
0x00002c4f      7529           jne 0x2c7a
0x00002c51      eb5b           jmp 0x2cae
0x00002c53      0f1f440000     nop dword [rax + rax]
0x00002c58      488d3d084d00.  lea rdi, [0x00007967]                   ; /src:567 ; "\\"
0x00002c5f      ba02000000     mov edx, 2
0x00002c64      be01000000     mov esi, 1
0x00002c69      e862ebffff     call sym.imp.fwrite_unlocked
0x00002c6e      4883c301       add rbx, 1                              ; /src:574
0x00002c72      0fb633         movzx esi, byte [rbx]                   ; /src:558
0x00002c75      4084f6         test sil, sil
0x00002c78      7434           je 0x2cae
0x00002c7a      4080fe0a       cmp sil, 0xa                            ; /src:560
0x00002c7e      488b0d238420.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x00002c85      7431           je 0x2cb8
0x00002c87      4080fe5c       cmp sil, 0x5c
0x00002c8b      74cb           je 0x2c58
0x00002c8d      488b4128       mov rax, qword [rcx + 0x28]             ; /coreutils-8.31/lib:107
0x00002c91      483b4130       cmp rax, qword [rcx + 0x30]
0x00002c95      7351           jae 0x2ce8
0x00002c97      488d5001       lea rdx, [rax + 1]
0x00002c9b      4883c301       add rbx, 1                              ; /src:574
0x00002c9f      48895128       mov qword [rcx + 0x28], rdx             ; /coreutils-8.31/lib:107
0x00002ca3      408830         mov byte [rax], sil
0x00002ca6      0fb633         movzx esi, byte [rbx]                   ; /src:558
0x00002ca9      4084f6         test sil, sil
0x00002cac      75cc           jne 0x2c7a
0x00002cae      4883c408       add rsp, 8                              ; /src:576
0x00002cb2      5b             pop rbx
0x00002cb3      5d             pop rbp
0x00002cb4      c3             ret
0x00002cb5      0f1f00         nop dword [rax]
0x00002cb8      ba02000000     mov edx, 2                              ; /src:563
0x00002cbd      be01000000     mov esi, 1
0x00002cc2      4889ef         mov rdi, rbp
0x00002cc5      e806ebffff     call sym.imp.fwrite_unlocked
0x00002cca      eba2           jmp 0x2c6e
0x00002ccc      0f1f4000       nop dword [rax]
0x00002cd0      488b35d18320.  mov rsi, qword [obj.stdout]             ; /src:554 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x00002cd7      4883c408       add rsp, 8                              ; /src:576
0x00002cdb      5b             pop rbx
0x00002cdc      5d             pop rbp
0x00002cdd      e95eeaffff     jmp sym.imp.fputs_unlocked              ; /src:554
0x00002ce2      660f1f440000   nop word [rax + rax]
0x00002ce8      4889cf         mov rdi, rcx                            ; /coreutils-8.31/lib:107
0x00002ceb      e8e0e9ffff     call sym.imp.__overflow
0x00002cf0      e979ffffff     jmp 0x2c6e
0x00002cf5      90             nop
0x00002cf6      662e0f1f8400.  nop word cs:[rax + rax]
;-- digest_file.isra.1:
0x00002d00      4155           push r13                                ; /src:591
0x00002d02      4154           push r12
0x00002d04      b902000000     mov ecx, 2                              ; /src:596
0x00002d09      55             push rbp                                ; /src:591
0x00002d0a      53             push rbx
0x00002d0b      4889fd         mov rbp, rdi
0x00002d0e      488d3dad5800.  lea rdi, [0x000085c2]                   ; /src:596 ; "-"
0x00002d15      4989f4         mov r12, rsi                            ; /src:591
0x00002d18      4889ee         mov rsi, rbp                            ; /src:596
0x00002d1b      4883ec08       sub rsp, 8                              ; /src:591
0x00002d1f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]   ; /src:596
0x00002d21      c60200         mov byte [rdx], 0                       ; /src:598
0x00002d24      0f97c0         seta al                                 ; /src:596
0x00002d27      1c00           sbb al, 0
0x00002d29      84c0           test al, al                             ; /src:600
0x00002d2b      0f858f000000   jne 0x2dc0
0x00002d31      488b1d788320.  mov rbx, qword [obj.stdin]              ; /src:603 ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20b0b0:8]=0
0x00002d38      be02000000     mov esi, 2                              ; /src:627
0x00002d3d      c605c4832000.  mov byte [obj.have_read_stdin], 1       ; /src:602 ; [0x20b108:1]=0
0x00002d44      4889df         mov rdi, rbx                            ; /src:627
0x00002d47      e8541f0000     call sym.fadvise
0x00002d4c      4c89e6         mov rsi, r12                            ; /src:632
0x00002d4f      4889df         mov rdi, rbx
0x00002d52      e8e91d0000     call sym.sha1_stream
0x00002d57      85c0           test eax, eax                           ; /src:634
0x00002d59      7515           jne 0x2d70
0x00002d5b      41bc01000000   mov r12d, 1                             ; /src:648
0x00002d61      4883c408       add rsp, 8                              ; /src:649
0x00002d65      4489e0         mov eax, r12d
0x00002d68      5b             pop rbx
0x00002d69      5d             pop rbp
0x00002d6a      415c           pop r12
0x00002d6c      415d           pop r13
0x00002d6e      c3             ret
0x00002d6f      90             nop
0x00002d70      4889ea         mov rdx, rbp                            ; /src:636
0x00002d73      31ff           xor edi, edi
0x00002d75      be03000000     mov esi, 3
0x00002d7a      e8313b0000     call sym.quotearg_n_style_colon
0x00002d7f      4889c5         mov rbp, rax
0x00002d82      4531e4         xor r12d, r12d                          ; /src:639
0x00002d85      e846e8ffff     call sym.imp.__errno_location           ; /src:636
0x00002d8a      8b30           mov esi, dword [rax]
0x00002d8c      488d15a25700.  lea rdx, [0x00008535]                   ; "%s"
0x00002d93      31ff           xor edi, edi
0x00002d95      31c0           xor eax, eax
0x00002d97      4889e9         mov rcx, rbp
0x00002d9a      e891eaffff     call sym.imp.error
0x00002d9f      48391d0a8320.  cmp qword [obj.stdin], rbx              ; /src:637 ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20b0b0:8]=0
0x00002da6      74b9           je 0x2d61
0x00002da8      4889df         mov rdi, rbx                            ; /src:638
0x00002dab      e8b0450000     call sym.rpl_fclose
0x00002db0      4883c408       add rsp, 8                              ; /src:649
0x00002db4      4489e0         mov eax, r12d
0x00002db7      5b             pop rbx
0x00002db8      5d             pop rbp
0x00002db9      415c           pop r12
0x00002dbb      415d           pop r13
0x00002dbd      c3             ret
0x00002dbe      6690           nop
0x00002dc0      488d35814c00.  lea rsi, [0x00007a48]                   ; /src:614 ; "r"
0x00002dc7      4889ef         mov rdi, rbp
0x00002dca      4989d5         mov r13, rdx
0x00002dcd      e8fe1e0000     call sym.fopen_safer
0x00002dd2      4885c0         test rax, rax                           ; /src:615
0x00002dd5      4889c3         mov rbx, rax                            ; /src:614
0x00002dd8      7466           je 0x2e40                               ; /src:615
0x00002dda      4889c7         mov rdi, rax                            ; /src:627
0x00002ddd      be02000000     mov esi, 2
0x00002de2      e8b91e0000     call sym.fadvise
0x00002de7      4c89e6         mov rsi, r12                            ; /src:632
0x00002dea      4889df         mov rdi, rbx
0x00002ded      e84e1d0000     call sym.sha1_stream
0x00002df2      85c0           test eax, eax                           ; /src:634
0x00002df4      0f8576ffffff   jne 0x2d70
0x00002dfa      4889df         mov rdi, rbx                            ; /src:642
0x00002dfd      e85e450000     call sym.rpl_fclose
0x00002e02      85c0           test eax, eax
0x00002e04      0f8451ffffff   je 0x2d5b
0x00002e0a      4889ea         mov rdx, rbp                            ; /src:644
0x00002e0d      be03000000     mov esi, 3
0x00002e12      31ff           xor edi, edi
0x00002e14      e8973a0000     call sym.quotearg_n_style_colon
0x00002e19      4889c3         mov rbx, rax
0x00002e1c      4531e4         xor r12d, r12d                          ; /src:645
0x00002e1f      e8ace7ffff     call sym.imp.__errno_location           ; /src:644
0x00002e24      8b30           mov esi, dword [rax]
0x00002e26      488d15085700.  lea rdx, [0x00008535]                   ; "%s"
0x00002e2d      4889d9         mov rcx, rbx
0x00002e30      31ff           xor edi, edi
0x00002e32      31c0           xor eax, eax
0x00002e34      e8f7e9ffff     call sym.imp.error
0x00002e39      e923ffffff     jmp 0x2d61
0x00002e3e      6690           nop
0x00002e40      440fb625aa82.  movzx r12d, byte [obj.ignore_missing]   ; /src:617 ; [0x20b0f2:1]=0
0x00002e48      e883e7ffff     call sym.imp.__errno_location
0x00002e4d      4889c3         mov rbx, rax
0x00002e50      4584e4         test r12b, r12b
0x00002e53      7405           je 0x2e5a
0x00002e55      833802         cmp dword [rax], 2
0x00002e58      7436           je 0x2e90
0x00002e5a      4889ea         mov rdx, rbp                            ; /src:622
0x00002e5d      be03000000     mov esi, 3
0x00002e62      31ff           xor edi, edi
0x00002e64      e8473a0000     call sym.quotearg_n_style_colon
0x00002e69      8b33           mov esi, dword [rbx]
0x00002e6b      488d15c35600.  lea rdx, [0x00008535]                   ; "%s"
0x00002e72      4889c1         mov rcx, rax
0x00002e75      31ff           xor edi, edi
0x00002e77      31c0           xor eax, eax
0x00002e79      4531e4         xor r12d, r12d                          ; /src:623
0x00002e7c      e8afe9ffff     call sym.imp.error                      ; /src:622
0x00002e81      e9dbfeffff     jmp 0x2d61
0x00002e86      662e0f1f8400.  nop word cs:[rax + rax]
0x00002e90      41c6450001     mov byte [r13], 1                       ; /src:619
0x00002e95      e9c7feffff     jmp 0x2d61
0x00002e9a      660f1f440000   nop word [rax + rax]
;-- usage:
0x00002ea0      4155           push r13                                ; /src:224
0x00002ea2      4154           push r12
0x00002ea4      ba05000000     mov edx, 5                              ; /src:226
0x00002ea9      55             push rbp                                ; /src:224
0x00002eaa      53             push rbx
0x00002eab      89fd           mov ebp, edi
0x00002ead      4881ec880000.  sub rsp, 0x88
0x00002eb4      488b1d658220.  mov rbx, qword [obj.program_name]       ; [0x20b120:8]=0
0x00002ebb      64488b042528.  mov rax, qword fs:[0x28]
0x00002ec4      4889442478     mov qword [rsp + 0x78], rax
0x00002ec9      31c0           xor eax, eax
0x00002ecb      85ff           test edi, edi                           ; /src:225
0x00002ecd      742e           je 0x2efd
0x00002ecf      488d356a4c00.  lea rsi, str.Try___s___help__for_more_information. ; /src:226 ; 0x7b40 ; "Try '%s --help' for more information.\n"
0x00002ed6      31ff           xor edi, edi
0x00002ed8      e883e7ffff     call sym.imp.dcgettext
0x00002edd      488b3dfc8120.  mov rdi, qword [obj.stderr]             ; .//ib:97 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20b0e0:8]=0
0x00002ee4      4889c2         mov rdx, rax
0x00002ee7      4889d9         mov rcx, rbx
0x00002eea      be01000000     mov esi, 1
0x00002eef      31c0           xor eax, eax
0x00002ef1      e8aae9ffff     call sym.imp.__fprintf_chk
0x00002ef6      89ef           mov edi, ebp                            ; /src:295
0x00002ef8      e883e9ffff     call sym.imp.exit
0x00002efd      488d35644c00.  lea rsi, str.Usage:__s__OPTION_...__FILE_...__Print_or_check__s___d_bit__checksums. ; /src:229 ; 0x7b68 ; "Usage: %s [OPTION]... [FILE]...\nPrint or check %s (%d-bit) checksums.\n"
0x00002f04      31ff           xor edi, edi
0x00002f06      e855e7ffff     call sym.imp.dcgettext
0x00002f0b      488d0d604a00.  lea rcx, str.SHA1                       ; .//ib:104 ; 0x7972 ; "SHA1"
0x00002f12      41b8a0000000   mov r8d, 0xa0
0x00002f18      4889da         mov rdx, rbx
0x00002f1b      4889c6         mov rsi, rax
0x00002f1e      bf01000000     mov edi, 1
0x00002f23      31c0           xor eax, eax
0x00002f25      e8e6e8ffff     call sym.imp.__printf_chk
0x00002f2a      488b1d778120.  mov rbx, qword [obj.stdout]             ; ../coreutils-8.31/src/5sum.c:580 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x00002f31      488d35784c00.  lea rsi, str.With_no_FILE__or_when_FILE_is____read_standard_input. ; 0x7bb0 ; "\nWith no FILE, or when FILE is -, read standard input.\n"
0x00002f38      ba05000000     mov edx, 5
0x00002f3d      31ff           xor edi, edi
0x00002f3f      e81ce7ffff     call sym.imp.dcgettext
0x00002f44      4889de         mov rsi, rbx
0x00002f47      4889c7         mov rdi, rax
0x00002f4a      e8f1e7ffff     call sym.imp.fputs_unlocked
0x00002f4f      488b1d528120.  mov rbx, qword [obj.stdout]             ; /src:244 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x00002f56      488d358b4c00.  lea rsi, str.b____binary_________read_in_binary_mode ; 0x7be8 ; "\n  -b, --binary         read in binary mode\n"
0x00002f5d      ba05000000     mov edx, 5
0x00002f62      31ff           xor edi, edi
0x00002f64      e8f7e6ffff     call sym.imp.dcgettext
0x00002f69      4889de         mov rsi, rbx
0x00002f6c      4889c7         mov rdi, rax
0x00002f6f      e8cce7ffff     call sym.imp.fputs_unlocked
0x00002f74      488d359d4c00.  lea rsi, str.c____check__________read__s_sums_from_the_FILEs_and_check_them ; /src:249 ; 0x7c18 ; "  -c, --check          read %s sums from the FILEs and check them\n"
0x00002f7b      31ff           xor edi, edi
0x00002f7d      ba05000000     mov edx, 5
0x00002f82      e8d9e6ffff     call sym.imp.dcgettext
0x00002f87      488d15e44900.  lea rdx, str.SHA1                       ; .//ib:104 ; 0x7972 ; "SHA1"
0x00002f8e      4889c6         mov rsi, rax
0x00002f91      bf01000000     mov edi, 1
0x00002f96      31c0           xor eax, eax
0x00002f98      e873e8ffff     call sym.imp.__printf_chk
0x00002f9d      488b1d048120.  mov rbx, qword [obj.stdout]             ; /src:258 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x00002fa4      488d35b54c00.  lea rsi, str.tag____________create_a_BSD_style_checksum ; 0x7c60 ; "      --tag            create a BSD-style checksum\n"
0x00002fab      ba05000000     mov edx, 5
0x00002fb0      31ff           xor edi, edi
0x00002fb2      e8a9e6ffff     call sym.imp.dcgettext
0x00002fb7      4889de         mov rsi, rbx
0x00002fba      4889c7         mov rdi, rax
0x00002fbd      e87ee7ffff     call sym.imp.fputs_unlocked
0x00002fc2      488b1ddf8020.  mov rbx, qword [obj.stdout]             ; /src:266 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x00002fc9      488d35c84c00.  lea rsi, str.t____text___________read_in_text_mode__default ; 0x7c98 ; "  -t, --text           read in text mode (default)\n"
0x00002fd0      ba05000000     mov edx, 5
0x00002fd5      31ff           xor edi, edi
0x00002fd7      e884e6ffff     call sym.imp.dcgettext
0x00002fdc      4889de         mov rsi, rbx
0x00002fdf      4889c7         mov rdi, rax
0x00002fe2      e859e7ffff     call sym.imp.fputs_unlocked
0x00002fe7      488b1dba8020.  mov rbx, qword [obj.stdout]             ; /src:269 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x00002fee      488d35db4c00.  lea rsi, str.z____zero___________end_each_output_line_with_NUL__not_newline__________________________and_disable_file_name_escaping ; 0x7cd0 ; "  -z, --zero           end each output line with NUL, not newline,\n                       and disable file name escaping\n"
0x00002ff5      ba05000000     mov edx, 5
0x00002ffa      31ff           xor edi, edi
0x00002ffc      e85fe6ffff     call sym.imp.dcgettext
0x00003001      4889de         mov rsi, rbx
0x00003004      4889c7         mov rdi, rax
0x00003007      e834e7ffff     call sym.imp.fputs_unlocked
0x0000300c      488b1d958020.  mov rbx, qword [obj.stdout]             ; /src:273 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x00003013      488d35364d00.  lea rsi, str.The_following_five_options_are_useful_only_when_verifying_checksums:__________ignore_missing__don_t_fail_or_report_status_for_missing_files__________quiet__________don_t_print_OK_for_each_successfully_verified_file__________status_________don_t_output_anything__status_code_shows_success__________strict_________exit_non_zero_for_improperly_formatted_checksum_lines_____w____warn___________warn_about_improperly_formatted_checksum_lines ; 0x7d50 ; "\nThe following five options are useful only when verifying checksums:\n      --ignore-missing  don't fail or report status for missing files\n      --quiet          don't print OK for each successfully verified file\n      --status         don't output anything, status code shows success\n      --strict         exit non-zero for improperly formatted checksum lines\n  -w, --warn           warn about improperly formatted checksum lines\n\n"
0x0000301a      ba05000000     mov edx, 5
0x0000301f      31ff           xor edi, edi
0x00003021      e83ae6ffff     call sym.imp.dcgettext
0x00003026      4889de         mov rsi, rbx
0x00003029      4889c7         mov rdi, rax
0x0000302c      e80fe7ffff     call sym.imp.fputs_unlocked
0x00003031      488b1d708020.  mov rbx, qword [obj.stdout]             ; /src:283 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x00003038      488d35c94e00.  lea rsi, str.help_____display_this_help_and_exit ; 0x7f08 ; "      --help     display this help and exit\n"
0x0000303f      ba05000000     mov edx, 5
0x00003044      31ff           xor edi, edi
0x00003046      e815e6ffff     call sym.imp.dcgettext
0x0000304b      4889de         mov rsi, rbx
0x0000304e      4889c7         mov rdi, rax
0x00003051      e8eae6ffff     call sym.imp.fputs_unlocked
0x00003056      488b1d4b8020.  mov rbx, qword [obj.stdout]             ; /src:284 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x0000305d      488d35d44e00.  lea rsi, str.version__output_version_information_and_exit ; 0x7f38 ; "      --version  output version information and exit\n"
0x00003064      ba05000000     mov edx, 5
0x00003069      31ff           xor edi, edi
0x0000306b      e8f0e5ffff     call sym.imp.dcgettext
0x00003070      4889de         mov rsi, rbx
0x00003073      4889c7         mov rdi, rax
0x00003076      488d1ded4800.  lea rbx, str.sha1sum                    ; 0x796a ; "sha1sum"
0x0000307d      e8bee6ffff     call sym.imp.fputs_unlocked
0x00003082      488d35e74e00.  lea rsi, str.The_sums_are_computed_as_described_in__s.__When_checking__the_input__should_be_a_former_output_of_this_program.__The_default_mode_is_to_print_a__line_with_checksum__a_space__a_character_indicating_input_mode______for_binary_______for_text_or_where_binary_is_insignificant___and_name_for_each_FILE. ; /src:285 ; 0x7f70 ; "\nThe sums are computed as described in %s.  When checking, the input\nshould be a former output of this program.  The default mode is to print a\nline with checksum, a space, a character indicating input mode ('*' for binary,\n' ' for text or where binary is insignificant), and name for each FILE.\n"
0x00003089      31ff           xor edi, edi
0x0000308b      ba05000000     mov edx, 5
0x00003090      e8cbe5ffff     call sym.imp.dcgettext
0x00003095      488d15db4800.  lea rdx, str.FIPS_180_1                 ; .//ib:104 ; 0x7977 ; "FIPS-180-1"
0x0000309c      4889c6         mov rsi, rax
0x0000309f      bf01000000     mov edi, 1
0x000030a4      31c0           xor eax, eax
0x000030a6      e865e7ffff     call sym.imp.__printf_chk
0x000030ab      488d05d04800.  lea rax, [0x00007982]                   ; ../coreutils-8.31/src/5sum.c:633 ; "["
0x000030b2      488d0d0a4900.  lea rcx, str.sha256sum                  ; 0x79c3 ; "sha256sum"
0x000030b9      48c744246000.  mov qword [rsp + 0x60], 0
0x000030c2      48c744246800.  mov qword [rsp + 0x68], 0
0x000030cb      4889e2         mov rdx, rsp                            ; ../coreutils-8.31/src/5sum.c:644
0x000030ce      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/src/5sum.c:633
0x000030d2      488d05ab4800.  lea rax, str.test_invocation            ; 0x7984 ; "test invocation"
0x000030d9      48894c2430     mov qword [rsp + 0x30], rcx
0x000030de      488d0de84800.  lea rcx, str.sha384sum                  ; 0x79cd ; "sha384sum"
0x000030e5      4889442408     mov qword [rsp + 8], rax
0x000030ea      488d050b4900.  lea rax, [0x000079fc]                   ; "coreutils"
0x000030f1      48894c2440     mov qword [rsp + 0x40], rcx
0x000030f6      488d0dda4800.  lea rcx, str.sha512sum                  ; 0x79d7 ; "sha512sum"
0x000030fd      4889442410     mov qword [rsp + 0x10], rax
0x00003102      488d058b4800.  lea rax, str.Multi_call_invocation      ; 0x7994 ; "Multi-call invocation"
0x00003109      48894c2450     mov qword [rsp + 0x50], rcx
0x0000310e      4889442418     mov qword [rsp + 0x18], rax
0x00003113      488d05904800.  lea rax, str.sha224sum                  ; 0x79aa ; "sha224sum"
0x0000311a      4889442420     mov qword [rsp + 0x20], rax
0x0000311f      488d058e4800.  lea rax, str.sha2_utilities             ; 0x79b4 ; "sha2 utilities"
0x00003126      4889442428     mov qword [rsp + 0x28], rax
0x0000312b      4889442438     mov qword [rsp + 0x38], rax
0x00003130      4889442448     mov qword [rsp + 0x48], rax
0x00003135      4889442458     mov qword [rsp + 0x58], rax
0x0000313a      660f1f440000   nop word [rax + rax]
0x00003140      4883c210       add rdx, 0x10                           ; ../coreutils-8.31/src/5sum.c:647
0x00003144      488b3a         mov rdi, qword [rdx]                    ; ../coreutils-8.31/src/5sum.c:646
0x00003147      4885ff         test rdi, rdi
0x0000314a      7413           je 0x315f
0x0000314c      b908000000     mov ecx, 8
0x00003151      4889de         mov rsi, rbx
0x00003154      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00003156      0f97c0         seta al
0x00003159      1c00           sbb al, 0
0x0000315b      84c0           test al, al
0x0000315d      75e1           jne 0x3140
0x0000315f      4c8b6208       mov r12, qword [rdx + 8]                ; ../coreutils-8.31/src/5sum.c:649
0x00003163      31ff           xor edi, edi                            ; ../coreutils-8.31/src/5sum.c:652
0x00003165      ba05000000     mov edx, 5
0x0000316a      488d35704800.  lea rsi, str.s_online_help:___s         ; 0x79e1 ; "\n%s online help: <%s>\n"
0x00003171      4d85e4         test r12, r12                           ; ../coreutils-8.31/src/5sum.c:649
0x00003174      0f84c1000000   je 0x323b
0x0000317a      e8e1e4ffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/5sum.c:652
0x0000317f      488d0d1a4f00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; .//ib:104 ; 0x80a0 ; "https://www.gnu.org/software/coreutils/"
0x00003186      488d156b4800.  lea rdx, str.GNU_coreutils              ; 0x79f8 ; "GNU coreutils"
0x0000318d      4889c6         mov rsi, rax
0x00003190      bf01000000     mov edi, 1
0x00003195      31c0           xor eax, eax
0x00003197      e874e6ffff     call sym.imp.__printf_chk
0x0000319c      31f6           xor esi, esi                            ; ../coreutils-8.31/src/5sum.c:656
0x0000319e      bf05000000     mov edi, 5
0x000031a3      e858e6ffff     call sym.imp.setlocale
0x000031a8      4885c0         test rax, rax                           ; ../coreutils-8.31/src/5sum.c:657
0x000031ab      741c           je 0x31c9
0x000031ad      488d35524800.  lea rsi, [0x00007a06]                   ; "en_"
0x000031b4      ba03000000     mov edx, 3
0x000031b9      4889c7         mov rdi, rax
0x000031bc      e81fe4ffff     call sym.imp.strncmp
0x000031c1      85c0           test eax, eax
0x000031c3      0f8507010000   jne 0x32d0
0x000031c9      488d353a4800.  lea rsi, str.Full_documentation___s_s   ; ../coreutils-8.31/src/5sum.c:666 ; 0x7a0a ; "Full documentation <%s%s>\n"
0x000031d0      31ff           xor edi, edi
0x000031d2      ba05000000     mov edx, 5
0x000031d7      e884e4ffff     call sym.imp.dcgettext
0x000031dc      488d0d874700.  lea rcx, str.sha1sum                    ; .//ib:104 ; 0x796a ; "sha1sum"
0x000031e3      488d15b64e00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x80a0 ; "https://www.gnu.org/software/coreutils/"
0x000031ea      4889c6         mov rsi, rax
0x000031ed      bf01000000     mov edi, 1
0x000031f2      31c0           xor eax, eax
0x000031f4      e817e6ffff     call sym.imp.__printf_chk
0x000031f9      4939dc         cmp r12, rbx                            ; ../coreutils-8.31/src/5sum.c:668
0x000031fc      488d0d9b4700.  lea rcx, [0x0000799e]                   ; " invocation"
0x00003203      488d1df75800.  lea rbx, [0x00008b01]
0x0000320a      480f44d9       cmove rbx, rcx
0x0000320e      488d35fb4e00.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x8110 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00003215      31ff           xor edi, edi
0x00003217      ba05000000     mov edx, 5
0x0000321c      e83fe4ffff     call sym.imp.dcgettext
0x00003221      4889d9         mov rcx, rbx                            ; .//ib:104
0x00003224      4889c6         mov rsi, rax
0x00003227      4c89e2         mov rdx, r12
0x0000322a      bf01000000     mov edi, 1
0x0000322f      31c0           xor eax, eax
0x00003231      e8dae5ffff     call sym.imp.__printf_chk
0x00003236      e9bbfcffff     jmp 0x2ef6
0x0000323b      e820e4ffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/5sum.c:652
0x00003240      488d0d594e00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; .//ib:104 ; 0x80a0 ; "https://www.gnu.org/software/coreutils/"
0x00003247      488d15aa4700.  lea rdx, str.GNU_coreutils              ; 0x79f8 ; "GNU coreutils"
0x0000324e      4889c6         mov rsi, rax
0x00003251      bf01000000     mov edi, 1
0x00003256      31c0           xor eax, eax
0x00003258      e8b3e5ffff     call sym.imp.__printf_chk
0x0000325d      31f6           xor esi, esi                            ; ../coreutils-8.31/src/5sum.c:656
0x0000325f      bf05000000     mov edi, 5
0x00003264      e897e5ffff     call sym.imp.setlocale
0x00003269      4885c0         test rax, rax                           ; ../coreutils-8.31/src/5sum.c:657
0x0000326c      7418           je 0x3286
0x0000326e      488d35914700.  lea rsi, [0x00007a06]                   ; "en_"
0x00003275      ba03000000     mov edx, 3
0x0000327a      4889c7         mov rdi, rax
0x0000327d      e85ee3ffff     call sym.imp.strncmp
0x00003282      85c0           test eax, eax
0x00003284      7543           jne 0x32c9
0x00003286      488d357d4700.  lea rsi, str.Full_documentation___s_s   ; ../coreutils-8.31/src/5sum.c:666 ; 0x7a0a ; "Full documentation <%s%s>\n"
0x0000328d      ba05000000     mov edx, 5
0x00003292      31ff           xor edi, edi
0x00003294      4c8d25cf4600.  lea r12, str.sha1sum                    ; ../coreutils-8.31/src/5sum.c:643 ; 0x796a ; "sha1sum"
0x0000329b      488d1dfc4600.  lea rbx, [0x0000799e]                   ; ../coreutils-8.31/src/5sum.c:668 ; " invocation"
0x000032a2      e8b9e3ffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/5sum.c:666
0x000032a7      488d0dbc4600.  lea rcx, str.sha1sum                    ; .//ib:104 ; 0x796a ; "sha1sum"
0x000032ae      488d15eb4d00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x80a0 ; "https://www.gnu.org/software/coreutils/"
0x000032b5      4889c6         mov rsi, rax
0x000032b8      bf01000000     mov edi, 1
0x000032bd      31c0           xor eax, eax
0x000032bf      e84ce5ffff     call sym.imp.__printf_chk
0x000032c4      e945ffffff     jmp 0x320e
0x000032c9      4c8d259a4600.  lea r12, str.sha1sum                    ; ../coreutils-8.31/src/5sum.c:643 ; 0x796a ; "sha1sum"
0x000032d0      4c8b2dd17d20.  mov r13, qword [obj.stdout]             ; ../coreutils-8.31/src/5sum.c:663 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x000032d7      488d35ea4d00.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x80c8 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x000032de      31ff           xor edi, edi
0x000032e0      ba05000000     mov edx, 5
0x000032e5      e876e3ffff     call sym.imp.dcgettext
0x000032ea      4c89ee         mov rsi, r13
0x000032ed      4889c7         mov rdi, rax
0x000032f0      e84be4ffff     call sym.imp.fputs_unlocked
0x000032f5      e9cffeffff     jmp 0x31c9
0x000032fa      660f1f440000   nop word [rax + rax]
;-- close_stdout_set_file_name:
0x00003300      48893d117e20.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x20b118:8]=0
0x00003307      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00003308      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00003310      40883df97d20.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x20b110:1]=0
0x00003317      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00003318      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00003320      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00003321      53             push rbx
0x00003322      4883ec08       sub rsp, 8
0x00003326      488b3d7b7d20.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x0000332d      e85e440000     call sym.close_stream
0x00003332      85c0           test eax, eax
0x00003334      7416           je 0x334c
0x00003336      e895e2ffff     call sym.imp.__errno_location
0x0000333b      803dce7d2000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x20b110:1]=0
0x00003342      4889c3         mov rbx, rax
0x00003345      741c           je 0x3363
0x00003347      833820         cmp dword [rax], 0x20
0x0000334a      7517           jne 0x3363
0x0000334c      488b3d8d7d20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20b0e0:8]=0
0x00003353      e838440000     call sym.close_stream
0x00003358      85c0           test eax, eax
0x0000335a      7546           jne 0x33a2
0x0000335c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00003360      5b             pop rbx
0x00003361      5d             pop rbp
0x00003362      c3             ret
0x00003363      488d35bb5100.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x8525 ; "write error"
0x0000336a      31ff           xor edi, edi
0x0000336c      ba05000000     mov edx, 5
0x00003371      e8eae2ffff     call sym.imp.dcgettext
0x00003376      488b3d9b7d20.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x20b118:8]=0
0x0000337d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00003380      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00003383      7428           je 0x33ad
0x00003385      e8f6340000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x0000338a      8b33           mov esi, dword [rbx]
0x0000338c      488d159e5100.  lea rdx, str.s:__s                      ; 0x8531 ; "%s: %s"
0x00003393      4889c1         mov rcx, rax
0x00003396      4989e8         mov r8, rbp
0x00003399      31ff           xor edi, edi
0x0000339b      31c0           xor eax, eax
0x0000339d      e88ee4ffff     call sym.imp.error
0x000033a2      8b3d787c2000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x20b020:4]=1
0x000033a8      e843e2ffff     call sym.imp._exit
0x000033ad      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x000033af      488d157f5100.  lea rdx, [0x00008535]                   ; "%s"
0x000033b6      4889c1         mov rcx, rax
0x000033b9      31ff           xor edi, edi
0x000033bb      31c0           xor eax, eax
0x000033bd      e86ee4ffff     call sym.imp.error
0x000033c2      ebde           jmp 0x33a2
0x000033c4      662e0f1f8400.  nop word cs:[rax + rax]
0x000033ce      6690           nop
;-- sha1_init_ctx:
0x000033d0      48b801234567.  movabs rax, 0xefcdab8967452301          ; ../coreutils-8.31/lib/sha1.c:63
0x000033da      48c747180000.  mov qword [rdi + 0x18], 0               ; ../coreutils-8.31/lib/sha1.c:70
0x000033e2      488907         mov qword [rdi], rax                    ; ../coreutils-8.31/lib/sha1.c:64
0x000033e5      48b8fedcba98.  movabs rax, 0x1032547698badcfe          ; ../coreutils-8.31/lib/sha1.c:65
0x000033ef      48894708       mov qword [rdi + 8], rax
0x000033f3      b8f0e1d2c3     mov eax, 0xc3d2e1f0                     ; ../coreutils-8.31/lib/sha1.c:67
0x000033f8      48894710       mov qword [rdi + 0x10], rax
0x000033fc      c3             ret                                     ; ../coreutils-8.31/lib/sha1.c:72
0x000033fd      0f1f00         nop dword [rax]
;-- sha1_read_ctx:
0x00003400      8b17           mov edx, dword [rdi]                    ; ../coreutils-8.31/lib/sha1.c:87
0x00003402      4889f0         mov rax, rsi
0x00003405      0fca           bswap edx                               ; byteswap.h:47   return __builtin_bswap32 (__bsx);
0x00003407      8916           mov dword [rsi], edx                    ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00003409      8b5704         mov edx, dword [rdi + 4]                ; byteswap.h:47   return __builtin_bswap32 (__bsx);
0x0000340c      0fca           bswap edx
0x0000340e      895604         mov dword [rsi + 4], edx                ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00003411      8b5708         mov edx, dword [rdi + 8]                ; byteswap.h:47   return __builtin_bswap32 (__bsx);
0x00003414      0fca           bswap edx
0x00003416      895608         mov dword [rsi + 8], edx                ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00003419      8b570c         mov edx, dword [rdi + 0xc]              ; byteswap.h:47   return __builtin_bswap32 (__bsx);
0x0000341c      0fca           bswap edx
0x0000341e      89560c         mov dword [rsi + 0xc], edx              ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00003421      8b5710         mov edx, dword [rdi + 0x10]             ; byteswap.h:47   return __builtin_bswap32 (__bsx);
0x00003424      0fca           bswap edx
0x00003426      895610         mov dword [rsi + 0x10], edx             ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00003429      c3             ret                                     ; ../coreutils-8.31/lib/sha1.c:96
0x0000342a      660f1f440000   nop word [rax + rax]
;-- sha1_process_block:
0x00003430      4157           push r15                                ; ../coreutils-8.31/lib/sha1.c:318
0x00003432      4156           push r14
0x00003434      89f1           mov ecx, esi
0x00003436      4155           push r13
0x00003438      4154           push r12
0x0000343a      4531d2         xor r10d, r10d
0x0000343d      55             push rbp
0x0000343e      53             push rbx
0x0000343f      4889d3         mov rbx, rdx
0x00003442      4989ff         mov r15, rdi
0x00003445      4881ecc80000.  sub rsp, 0xc8
0x0000344c      448b4b08       mov r9d, dword [rbx + 8]                ; ../coreutils-8.31/lib/sha1.c:325
0x00003450      448b4310       mov r8d, dword [rbx + 0x10]             ; ../coreutils-8.31/lib/sha1.c:327
0x00003454      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/sha1.c:318
0x0000345d      48898424b800.  mov qword [rsp + 0xb8], rax
0x00003465      31c0           xor eax, eax
0x00003467      4889f0         mov rax, rsi                            ; ../coreutils-8.31/lib/sha1.c:321
0x0000346a      4889542460     mov qword [rsp + 0x60], rdx             ; ../coreutils-8.31/lib/sha1.c:318
0x0000346f      4883e0fc       and rax, 0xfffffffffffffffc             ; ../coreutils-8.31/lib/sha1.c:321
0x00003473      4801f8         add rax, rdi
0x00003476      034b14         add ecx, dword [rbx + 0x14]
0x00003479      8b7b0c         mov edi, dword [rbx + 0xc]              ; ../coreutils-8.31/lib/sha1.c:326
0x0000347c      4989c6         mov r14, rax                            ; ../coreutils-8.31/lib/sha1.c:321
0x0000347f      4889442458     mov qword [rsp + 0x58], rax
0x00003484      8b02           mov eax, dword [rdx]                    ; ../coreutils-8.31/lib/sha1.c:323
0x00003486      8b5204         mov edx, dword [rdx + 4]                ; ../coreutils-8.31/lib/sha1.c:324
0x00003489      894b14         mov dword [rbx + 0x14], ecx             ; ../coreutils-8.31/lib/sha1.c:333
0x0000348c      8b4b18         mov ecx, dword [rbx + 0x18]             ; ../coreutils-8.31/lib/sha1.c:334
0x0000348f      410f92c2       setb r10b
0x00003493      48c1ee20       shr rsi, 0x20
0x00003497      01f1           add ecx, esi
0x00003499      4401d1         add ecx, r10d
0x0000349c      4d39f7         cmp r15, r14                            ; ../coreutils-8.31/lib/sha1.c:349
0x0000349f      894b18         mov dword [rbx + 0x18], ecx             ; ../coreutils-8.31/lib/sha1.c:334
0x000034a2      0f83d5110000   jae 0x467d                              ; ../coreutils-8.31/lib/sha1.c:349
0x000034a8      488d4c2470     lea rcx, [rsp + 0x70]
0x000034ad      4489442450     mov dword [rsp + 0x50], r8d
0x000034b2      897c244c       mov dword [rsp + 0x4c], edi
0x000034b6      44894c2448     mov dword [rsp + 0x48], r9d
0x000034bb      89542444       mov dword [rsp + 0x44], edx
0x000034bf      4489ce         mov esi, r9d
0x000034c2      48894c2468     mov qword [rsp + 0x68], rcx
0x000034c7      89442454       mov dword [rsp + 0x54], eax
0x000034cb      4c89f9         mov rcx, r15
0x000034ce      6690           nop
0x000034d0      4c8b5c2468     mov r11, qword [rsp + 0x68]
0x000034d5      4531c9         xor r9d, r9d
0x000034d8      0f1f84000000.  nop dword [rax + rax]
0x000034e0      468b1409       mov r10d, dword [rcx + r9]              ; byteswap.h:47   return __builtin_bswap32 (__bsx);
0x000034e4      410fca         bswap r10d
0x000034e7      4789140b       mov dword [r11 + r9], r10d              ; ../coreutils-8.31/lib/sha1.c:355
0x000034eb      4983c104       add r9, 4
0x000034ef      4983f940       cmp r9, 0x40                            ; ../coreutils-8.31/lib/sha1.c:353 ; segment.PHDR
0x000034f3      75eb           jne 0x34e0
0x000034f5      448b5c2470     mov r11d, dword [rsp + 0x70]            ; ../coreutils-8.31/lib/sha1.c:359
0x000034fa      448b542474     mov r10d, dword [rsp + 0x74]            ; ../coreutils-8.31/lib/sha1.c:360
0x000034ff      4883c140       add rcx, 0x40                           ; segment.PHDR
0x00003503      8b5c2478       mov ebx, dword [rsp + 0x78]             ; ../coreutils-8.31/lib/sha1.c:361
0x00003507      8b6c247c       mov ebp, dword [rsp + 0x7c]             ; ../coreutils-8.31/lib/sha1.c:362
0x0000350b      448bac248000.  mov r13d, dword [rsp + 0x80]            ; ../coreutils-8.31/lib/sha1.c:363
0x00003513      448bb4248400.  mov r14d, dword [rsp + 0x84]            ; ../coreutils-8.31/lib/sha1.c:364
0x0000351b      478d8c039979.  lea r9d, [r11 + r8 + 0x5a827999]
0x00003523      4189c0         mov r8d, eax                            ; ../coreutils-8.31/lib/sha1.c:359
0x00003526      448bbc248800.  mov r15d, dword [rsp + 0x88]
0x0000352e      41c1c005       rol r8d, 5
0x00003532      4501c8         add r8d, r9d
0x00003535      4189f1         mov r9d, esi
0x00003538      4131f9         xor r9d, edi
0x0000353b      4121d1         and r9d, edx
0x0000353e      c1ca02         ror edx, 2
0x00003541      4131f9         xor r9d, edi
0x00003544      418dbc3a9979.  lea edi, [r10 + rdi + 0x5a827999]
0x0000354c      4501c1         add r9d, r8d
0x0000354f      4189d0         mov r8d, edx                            ; ../coreutils-8.31/lib/sha1.c:360
0x00003552      4131f0         xor r8d, esi
0x00003555      4121c0         and r8d, eax
0x00003558      c1c802         ror eax, 2
0x0000355b      4131f0         xor r8d, esi
0x0000355e      8db433997982.  lea esi, [rbx + rsi + 0x5a827999]
0x00003565      4101f8         add r8d, edi
0x00003568      4489cf         mov edi, r9d
0x0000356b      c1c705         rol edi, 5
0x0000356e      4101f8         add r8d, edi
0x00003571      89d7           mov edi, edx                            ; ../coreutils-8.31/lib/sha1.c:361
0x00003573      31c7           xor edi, eax
0x00003575      4421cf         and edi, r9d
0x00003578      41c1c902       ror r9d, 2
0x0000357c      31d7           xor edi, edx
0x0000357e      8d9415997982.  lea edx, [rbp + rdx + 0x5a827999]
0x00003585      01f7           add edi, esi
0x00003587      4489c6         mov esi, r8d
0x0000358a      c1c605         rol esi, 5
0x0000358d      01f7           add edi, esi
0x0000358f      89c6           mov esi, eax                            ; ../coreutils-8.31/lib/sha1.c:362
0x00003591      4431ce         xor esi, r9d
0x00003594      4421c6         and esi, r8d
0x00003597      41c1c802       ror r8d, 2
0x0000359b      31c6           xor esi, eax
0x0000359d      418d84059979.  lea eax, [r13 + rax + 0x5a827999]
0x000035a5      01d6           add esi, edx
0x000035a7      89fa           mov edx, edi
0x000035a9      c1c205         rol edx, 5
0x000035ac      01d6           add esi, edx
0x000035ae      4489ca         mov edx, r9d                            ; ../coreutils-8.31/lib/sha1.c:363
0x000035b1      4431c2         xor edx, r8d
0x000035b4      21fa           and edx, edi
0x000035b6      4431ca         xor edx, r9d
0x000035b9      478d8c0e9979.  lea r9d, [r14 + r9 + 0x5a827999]
0x000035c1      01c2           add edx, eax
0x000035c3      89f0           mov eax, esi
0x000035c5      c1cf02         ror edi, 2
0x000035c8      c1c005         rol eax, 5
0x000035cb      01c2           add edx, eax
0x000035cd      4489c0         mov eax, r8d                            ; ../coreutils-8.31/lib/sha1.c:364
0x000035d0      31f8           xor eax, edi
0x000035d2      21f0           and eax, esi
0x000035d4      c1ce02         ror esi, 2
0x000035d7      4431c0         xor eax, r8d
0x000035da      478d84079979.  lea r8d, [r15 + r8 + 0x5a827999]
0x000035e2      448bbc248c00.  mov r15d, dword [rsp + 0x8c]
0x000035ea      4401c8         add eax, r9d
0x000035ed      4189d1         mov r9d, edx
0x000035f0      41c1c105       rol r9d, 5
0x000035f4      4401c8         add eax, r9d
0x000035f7      4189f9         mov r9d, edi                            ; ../coreutils-8.31/lib/sha1.c:365
0x000035fa      4131f1         xor r9d, esi
0x000035fd      4121d1         and r9d, edx
0x00003600      c1ca02         ror edx, 2
0x00003603      4131f9         xor r9d, edi
0x00003606      418dbc3f9979.  lea edi, [r15 + rdi + 0x5a827999]
0x0000360e      448bbc249000.  mov r15d, dword [rsp + 0x90]
0x00003616      4501c1         add r9d, r8d
0x00003619      4189c0         mov r8d, eax
0x0000361c      41c1c005       rol r8d, 5
0x00003620      4501c1         add r9d, r8d
0x00003623      4189f0         mov r8d, esi                            ; ../coreutils-8.31/lib/sha1.c:366
0x00003626      4131d0         xor r8d, edx
0x00003629      4121c0         and r8d, eax
0x0000362c      c1c802         ror eax, 2
0x0000362f      4131f0         xor r8d, esi
0x00003632      418db4379979.  lea esi, [r15 + rsi + 0x5a827999]
0x0000363a      448bbc249400.  mov r15d, dword [rsp + 0x94]
0x00003642      4101f8         add r8d, edi
0x00003645      4489cf         mov edi, r9d
0x00003648      c1c705         rol edi, 5
0x0000364b      4101f8         add r8d, edi
0x0000364e      89d7           mov edi, edx                            ; ../coreutils-8.31/lib/sha1.c:367
0x00003650      31c7           xor edi, eax
0x00003652      4421cf         and edi, r9d
0x00003655      41c1c902       ror r9d, 2
0x00003659      31d7           xor edi, edx
0x0000365b      418d94179979.  lea edx, [r15 + rdx + 0x5a827999]
0x00003663      448bbc249800.  mov r15d, dword [rsp + 0x98]
0x0000366b      01f7           add edi, esi
0x0000366d      4489c6         mov esi, r8d
0x00003670      c1c605         rol esi, 5
0x00003673      01f7           add edi, esi
0x00003675      89c6           mov esi, eax                            ; ../coreutils-8.31/lib/sha1.c:368
0x00003677      4431ce         xor esi, r9d
0x0000367a      4421c6         and esi, r8d
0x0000367d      41c1c802       ror r8d, 2
0x00003681      31c6           xor esi, eax
0x00003683      418d84079979.  lea eax, [r15 + rax + 0x5a827999]
0x0000368b      448bbc249c00.  mov r15d, dword [rsp + 0x9c]
0x00003693      01d6           add esi, edx
0x00003695      89fa           mov edx, edi
0x00003697      c1c205         rol edx, 5
0x0000369a      01d6           add esi, edx
0x0000369c      4489ca         mov edx, r9d                            ; ../coreutils-8.31/lib/sha1.c:369
0x0000369f      4431c2         xor edx, r8d
0x000036a2      21fa           and edx, edi
0x000036a4      c1cf02         ror edi, 2
0x000036a7      4431ca         xor edx, r9d
0x000036aa      478d8c0f9979.  lea r9d, [r15 + r9 + 0x5a827999]
0x000036b2      448bbc24a000.  mov r15d, dword [rsp + 0xa0]
0x000036ba      01c2           add edx, eax
0x000036bc      89f0           mov eax, esi
0x000036be      c1c005         rol eax, 5
0x000036c1      01c2           add edx, eax
0x000036c3      4489c0         mov eax, r8d                            ; ../coreutils-8.31/lib/sha1.c:370
0x000036c6      31f8           xor eax, edi
0x000036c8      21f0           and eax, esi
0x000036ca      c1ce02         ror esi, 2
0x000036cd      4431c0         xor eax, r8d
0x000036d0      478d84079979.  lea r8d, [r15 + r8 + 0x5a827999]
0x000036d8      448bbc24a400.  mov r15d, dword [rsp + 0xa4]
0x000036e0      4401c8         add eax, r9d
0x000036e3      4189d1         mov r9d, edx
0x000036e6      41c1c105       rol r9d, 5
0x000036ea      4401c8         add eax, r9d
0x000036ed      4189f9         mov r9d, edi                            ; ../coreutils-8.31/lib/sha1.c:371
0x000036f0      4131f1         xor r9d, esi
0x000036f3      4121d1         and r9d, edx
0x000036f6      c1ca02         ror edx, 2
0x000036f9      4131f9         xor r9d, edi
0x000036fc      418dbc3f9979.  lea edi, [r15 + rdi + 0x5a827999]
0x00003704      448bbc24a800.  mov r15d, dword [rsp + 0xa8]
0x0000370c      4501c1         add r9d, r8d
0x0000370f      4189c0         mov r8d, eax
0x00003712      41c1c005       rol r8d, 5
0x00003716      4501c1         add r9d, r8d
0x00003719      4189f0         mov r8d, esi                            ; ../coreutils-8.31/lib/sha1.c:372
0x0000371c      4131d0         xor r8d, edx
0x0000371f      4121c0         and r8d, eax
0x00003722      4131f0         xor r8d, esi
0x00003725      418db4379979.  lea esi, [r15 + rsi + 0x5a827999]
0x0000372d      448bbc24ac00.  mov r15d, dword [rsp + 0xac]
0x00003735      4101f8         add r8d, edi
0x00003738      4489cf         mov edi, r9d
0x0000373b      c1c705         rol edi, 5
0x0000373e      c1c802         ror eax, 2
0x00003741      4131db         xor r11d, ebx                           ; ../coreutils-8.31/lib/sha1.c:375
0x00003744      4101f8         add r8d, edi                            ; ../coreutils-8.31/lib/sha1.c:372
0x00003747      89d7           mov edi, edx                            ; ../coreutils-8.31/lib/sha1.c:373
0x00003749      44339c249000.  xor r11d, dword [rsp + 0x90]            ; ../coreutils-8.31/lib/sha1.c:375
0x00003751      31c7           xor edi, eax                            ; ../coreutils-8.31/lib/sha1.c:373
0x00003753      44339c24a400.  xor r11d, dword [rsp + 0xa4]            ; ../coreutils-8.31/lib/sha1.c:375
0x0000375b      4131ea         xor r10d, ebp                           ; ../coreutils-8.31/lib/sha1.c:376
0x0000375e      4421cf         and edi, r9d                            ; ../coreutils-8.31/lib/sha1.c:373
0x00003761      41c1c902       ror r9d, 2
0x00003765      443394249400.  xor r10d, dword [rsp + 0x94]            ; ../coreutils-8.31/lib/sha1.c:376
0x0000376d      31d7           xor edi, edx                            ; ../coreutils-8.31/lib/sha1.c:373
0x0000376f      418d94179979.  lea edx, [r15 + rdx + 0x5a827999]
0x00003777      44339424a800.  xor r10d, dword [rsp + 0xa8]            ; ../coreutils-8.31/lib/sha1.c:376
0x0000377f      01f7           add edi, esi
0x00003781      4489c6         mov esi, r8d                            ; ../coreutils-8.31/lib/sha1.c:373
0x00003784      c1c605         rol esi, 5
0x00003787      41d1c3         rol r11d, 1                             ; ../coreutils-8.31/lib/sha1.c:375
0x0000378a      01f7           add edi, esi                            ; ../coreutils-8.31/lib/sha1.c:373
0x0000378c      89c6           mov esi, eax                            ; ../coreutils-8.31/lib/sha1.c:374
0x0000378e      4431ce         xor esi, r9d
0x00003791      41d1c2         rol r10d, 1                             ; ../coreutils-8.31/lib/sha1.c:376
0x00003794      4421c6         and esi, r8d                            ; ../coreutils-8.31/lib/sha1.c:374
0x00003797      41c1c802       ror r8d, 2
0x0000379b      31c6           xor esi, eax
0x0000379d      418d84039979.  lea eax, [r11 + rax + 0x5a827999]
0x000037a5      01d6           add esi, edx
0x000037a7      89fa           mov edx, edi
0x000037a9      c1c205         rol edx, 5
0x000037ac      01d6           add esi, edx
0x000037ae      4489ca         mov edx, r9d                            ; ../coreutils-8.31/lib/sha1.c:375
0x000037b1      4431c2         xor edx, r8d
0x000037b4      21fa           and edx, edi
0x000037b6      c1cf02         ror edi, 2
0x000037b9      4431ca         xor edx, r9d
0x000037bc      478d8c0a9979.  lea r9d, [r10 + r9 + 0x5a827999]
0x000037c4      4189fc         mov r12d, edi                           ; ../coreutils-8.31/lib/sha1.c:377
0x000037c7      01c2           add edx, eax
0x000037c9      89f0           mov eax, esi                            ; ../coreutils-8.31/lib/sha1.c:375
0x000037cb      c1c005         rol eax, 5
0x000037ce      01c2           add edx, eax
0x000037d0      4489c0         mov eax, r8d                            ; ../coreutils-8.31/lib/sha1.c:376
0x000037d3      31f8           xor eax, edi
0x000037d5      4431eb         xor ebx, r13d                           ; ../coreutils-8.31/lib/sha1.c:377
0x000037d8      21f0           and eax, esi                            ; ../coreutils-8.31/lib/sha1.c:376
0x000037da      c1ce02         ror esi, 2
0x000037dd      4431c0         xor eax, r8d
0x000037e0      4131f4         xor r12d, esi                           ; ../coreutils-8.31/lib/sha1.c:377
0x000037e3      4401c8         add eax, r9d
0x000037e6      4189d1         mov r9d, edx                            ; ../coreutils-8.31/lib/sha1.c:376
0x000037e9      4121d4         and r12d, edx                           ; ../coreutils-8.31/lib/sha1.c:377
0x000037ec      41c1c105       rol r9d, 5                              ; ../coreutils-8.31/lib/sha1.c:376
0x000037f0      4131fc         xor r12d, edi                           ; ../coreutils-8.31/lib/sha1.c:377
0x000037f3      c1ca02         ror edx, 2
0x000037f6      4401c8         add eax, r9d                            ; ../coreutils-8.31/lib/sha1.c:376
0x000037f9      448b8c249800.  mov r9d, dword [rsp + 0x98]             ; ../coreutils-8.31/lib/sha1.c:377
0x00003801      4131d9         xor r9d, ebx
0x00003804      89f3           mov ebx, esi                            ; ../coreutils-8.31/lib/sha1.c:378
0x00003806      4531f9         xor r9d, r15d                           ; ../coreutils-8.31/lib/sha1.c:377
0x00003809      31d3           xor ebx, edx                            ; ../coreutils-8.31/lib/sha1.c:378
0x0000380b      4189d7         mov r15d, edx                           ; ../coreutils-8.31/lib/sha1.c:379
0x0000380e      41d1c1         rol r9d, 1                              ; ../coreutils-8.31/lib/sha1.c:377
0x00003811      21c3           and ebx, eax                            ; ../coreutils-8.31/lib/sha1.c:378
0x00003813      478d84019979.  lea r8d, [r9 + r8 + 0x5a827999]
0x0000381b      31f3           xor ebx, esi
0x0000381d      4501c4         add r12d, r8d
0x00003820      4189c0         mov r8d, eax                            ; ../coreutils-8.31/lib/sha1.c:377
0x00003823      c1c802         ror eax, 2                              ; ../coreutils-8.31/lib/sha1.c:378
0x00003826      41c1c005       rol r8d, 5                              ; ../coreutils-8.31/lib/sha1.c:377
0x0000382a      4501c4         add r12d, r8d
0x0000382d      4189e8         mov r8d, ebp                            ; ../coreutils-8.31/lib/sha1.c:378
0x00003830      89c5           mov ebp, eax                            ; ../coreutils-8.31/lib/sha1.c:380
0x00003832      4531f0         xor r8d, r14d                           ; ../coreutils-8.31/lib/sha1.c:378
0x00003835      443384249c00.  xor r8d, dword [rsp + 0x9c]
0x0000383d      4531d8         xor r8d, r11d
0x00003840      41d1c0         rol r8d, 1
0x00003843      418dbc389979.  lea edi, [r8 + rdi + 0x5a827999]
0x0000384b      01fb           add ebx, edi
0x0000384d      4489e7         mov edi, r12d
0x00003850      c1c705         rol edi, 5
0x00003853      01fb           add ebx, edi
0x00003855      8bbc24880000.  mov edi, dword [rsp + 0x88]             ; ../coreutils-8.31/lib/sha1.c:379
0x0000385c      4431ef         xor edi, r13d
0x0000385f      33bc24a00000.  xor edi, dword [rsp + 0xa0]
0x00003866      4431d7         xor edi, r10d
0x00003869      d1c7           rol edi, 1
0x0000386b      4131c7         xor r15d, eax
0x0000386e      8db437a1ebd9.  lea esi, [rdi + rsi + 0x6ed9eba1]
0x00003875      4531e7         xor r15d, r12d
0x00003878      41c1cc02       ror r12d, 2
0x0000387c      4431e5         xor ebp, r12d                           ; ../coreutils-8.31/lib/sha1.c:380
0x0000387f      4401fe         add esi, r15d
0x00003882      4189df         mov r15d, ebx                           ; ../coreutils-8.31/lib/sha1.c:379
0x00003885      31dd           xor ebp, ebx                            ; ../coreutils-8.31/lib/sha1.c:380
0x00003887      41c1c705       rol r15d, 5                             ; ../coreutils-8.31/lib/sha1.c:379
0x0000388b      c1cb02         ror ebx, 2                              ; ../coreutils-8.31/lib/sha1.c:380
0x0000388e      4101f7         add r15d, esi                           ; ../coreutils-8.31/lib/sha1.c:379
0x00003891      8bb4248c0000.  mov esi, dword [rsp + 0x8c]             ; ../coreutils-8.31/lib/sha1.c:380
0x00003898      4189dd         mov r13d, ebx                           ; ../coreutils-8.31/lib/sha1.c:382
0x0000389b      4431f6         xor esi, r14d                           ; ../coreutils-8.31/lib/sha1.c:380
0x0000389e      33b424a40000.  xor esi, dword [rsp + 0xa4]
0x000038a5      4589e6         mov r14d, r12d                          ; ../coreutils-8.31/lib/sha1.c:381
0x000038a8      4131de         xor r14d, ebx
0x000038ab      4531fe         xor r14d, r15d
0x000038ae      4431ce         xor esi, r9d                            ; ../coreutils-8.31/lib/sha1.c:380
0x000038b1      d1c6           rol esi, 1
0x000038b3      8d9416a1ebd9.  lea edx, [rsi + rdx + 0x6ed9eba1]
0x000038ba      01ea           add edx, ebp
0x000038bc      4489fd         mov ebp, r15d
0x000038bf      41c1cf02       ror r15d, 2                             ; ../coreutils-8.31/lib/sha1.c:381
0x000038c3      c1c505         rol ebp, 5                              ; ../coreutils-8.31/lib/sha1.c:380
0x000038c6      4531fd         xor r13d, r15d                          ; ../coreutils-8.31/lib/sha1.c:382
0x000038c9      01d5           add ebp, edx                            ; ../coreutils-8.31/lib/sha1.c:380
0x000038cb      8b9424880000.  mov edx, dword [rsp + 0x88]             ; ../coreutils-8.31/lib/sha1.c:381
0x000038d2      339424900000.  xor edx, dword [rsp + 0x90]
0x000038d9      339424a80000.  xor edx, dword [rsp + 0xa8]
0x000038e0      4431c2         xor edx, r8d
0x000038e3      d1c2           rol edx, 1
0x000038e5      8d8402a1ebd9.  lea eax, [rdx + rax + 0x6ed9eba1]
0x000038ec      4401f0         add eax, r14d
0x000038ef      4189ee         mov r14d, ebp
0x000038f2      41c1c605       rol r14d, 5
0x000038f6      4101c6         add r14d, eax
0x000038f9      8b84248c0000.  mov eax, dword [rsp + 0x8c]             ; ../coreutils-8.31/lib/sha1.c:382
0x00003900      338424940000.  xor eax, dword [rsp + 0x94]
0x00003907      338424ac0000.  xor eax, dword [rsp + 0xac]
0x0000390e      31f8           xor eax, edi
0x00003910      d1c0           rol eax, 1
0x00003912      4131ed         xor r13d, ebp
0x00003915      c1cd02         ror ebp, 2
0x00003918      468da420a1eb.  lea r12d, [rax + r12 + 0x6ed9eba1]
0x00003920      4501ec         add r12d, r13d
0x00003923      4589f5         mov r13d, r14d
0x00003926      41c1c505       rol r13d, 5
0x0000392a      4501e5         add r13d, r12d
0x0000392d      448ba4249000.  mov r12d, dword [rsp + 0x90]            ; ../coreutils-8.31/lib/sha1.c:383
0x00003935      4433a4249800.  xor r12d, dword [rsp + 0x98]
0x0000393d      44895c241c     mov dword [rsp + 0x1c], r11d
0x00003942      4531dc         xor r12d, r11d
0x00003945      4131f4         xor r12d, esi
0x00003948      41d1c4         rol r12d, 1
0x0000394b      4589e3         mov r11d, r12d
0x0000394e      4589fc         mov r12d, r15d
0x00003951      4131ec         xor r12d, ebp
0x00003954      418d9c1ba1eb.  lea ebx, [r11 + rbx + 0x6ed9eba1]
0x0000395c      44895c2424     mov dword [rsp + 0x24], r11d
0x00003961      4531f4         xor r12d, r14d
0x00003964      41c1ce02       ror r14d, 2
0x00003968      4401e3         add ebx, r12d
0x0000396b      4589ec         mov r12d, r13d
0x0000396e      41c1c405       rol r12d, 5
0x00003972      4101dc         add r12d, ebx
0x00003975      8b9c24940000.  mov ebx, dword [rsp + 0x94]             ; ../coreutils-8.31/lib/sha1.c:384
0x0000397c      339c249c0000.  xor ebx, dword [rsp + 0x9c]
0x00003983      4431d3         xor ebx, r10d
0x00003986      31d3           xor ebx, edx
0x00003988      d1c3           rol ebx, 1
0x0000398a      4189db         mov r11d, ebx
0x0000398d      89eb           mov ebx, ebp
0x0000398f      4431f3         xor ebx, r14d
0x00003992      478dbc3ba1eb.  lea r15d, [r11 + r15 + 0x6ed9eba1]
0x0000399a      44895c2428     mov dword [rsp + 0x28], r11d
0x0000399f      4431eb         xor ebx, r13d
0x000039a2      41c1cd02       ror r13d, 2
0x000039a6      4401fb         add ebx, r15d
0x000039a9      4589e7         mov r15d, r12d
0x000039ac      41c1c705       rol r15d, 5
0x000039b0      4101df         add r15d, ebx
0x000039b3      8b9c24980000.  mov ebx, dword [rsp + 0x98]             ; ../coreutils-8.31/lib/sha1.c:385
0x000039ba      339c24a00000.  xor ebx, dword [rsp + 0xa0]
0x000039c1      4431cb         xor ebx, r9d
0x000039c4      31c3           xor ebx, eax
0x000039c6      d1c3           rol ebx, 1
0x000039c8      4189db         mov r11d, ebx
0x000039cb      4489f3         mov ebx, r14d
0x000039ce      4431eb         xor ebx, r13d
0x000039d1      418dac2ba1eb.  lea ebp, [r11 + rbp + 0x6ed9eba1]
0x000039d9      44895c242c     mov dword [rsp + 0x2c], r11d
0x000039de      4431e3         xor ebx, r12d
0x000039e1      01eb           add ebx, ebp
0x000039e3      4489fd         mov ebp, r15d
0x000039e6      c1c505         rol ebp, 5
0x000039e9      41c1cc02       ror r12d, 2
0x000039ed      01eb           add ebx, ebp
0x000039ef      8bac249c0000.  mov ebp, dword [rsp + 0x9c]             ; ../coreutils-8.31/lib/sha1.c:386
0x000039f6      33ac24a40000.  xor ebp, dword [rsp + 0xa4]
0x000039fd      4431c5         xor ebp, r8d
0x00003a00      336c2424       xor ebp, dword [rsp + 0x24]
0x00003a04      d1c5           rol ebp, 1
0x00003a06      4189eb         mov r11d, ebp
0x00003a09      4489ed         mov ebp, r13d
0x00003a0c      4431e5         xor ebp, r12d
0x00003a0f      478db433a1eb.  lea r14d, [r11 + r14 + 0x6ed9eba1]
0x00003a17      44895c240c     mov dword [rsp + 0xc], r11d
0x00003a1c      4431fd         xor ebp, r15d
0x00003a1f      41c1cf02       ror r15d, 2
0x00003a23      4401f5         add ebp, r14d
0x00003a26      4189de         mov r14d, ebx
0x00003a29      41c1c605       rol r14d, 5
0x00003a2d      4101ee         add r14d, ebp
0x00003a30      8bac24a00000.  mov ebp, dword [rsp + 0xa0]             ; ../coreutils-8.31/lib/sha1.c:387
0x00003a37      33ac24a80000.  xor ebp, dword [rsp + 0xa8]
0x00003a3e      31fd           xor ebp, edi
0x00003a40      336c2428       xor ebp, dword [rsp + 0x28]
0x00003a44      d1c5           rol ebp, 1
0x00003a46      4189eb         mov r11d, ebp
0x00003a49      4489e5         mov ebp, r12d
0x00003a4c      4431fd         xor ebp, r15d
0x00003a4f      478dac2ba1eb.  lea r13d, [r11 + r13 + 0x6ed9eba1]
0x00003a57      44895c2410     mov dword [rsp + 0x10], r11d
0x00003a5c      31dd           xor ebp, ebx
0x00003a5e      c1cb02         ror ebx, 2
0x00003a61      4401ed         add ebp, r13d
0x00003a64      4589f5         mov r13d, r14d
0x00003a67      41c1c505       rol r13d, 5
0x00003a6b      4101ed         add r13d, ebp
0x00003a6e      8bac24a40000.  mov ebp, dword [rsp + 0xa4]             ; ../coreutils-8.31/lib/sha1.c:388
0x00003a75      33ac24ac0000.  xor ebp, dword [rsp + 0xac]
0x00003a7c      31f5           xor ebp, esi
0x00003a7e      336c242c       xor ebp, dword [rsp + 0x2c]
0x00003a82      d1c5           rol ebp, 1
0x00003a84      4189eb         mov r11d, ebp
0x00003a87      4489fd         mov ebp, r15d
0x00003a8a      31dd           xor ebp, ebx
0x00003a8c      478da423a1eb.  lea r12d, [r11 + r12 + 0x6ed9eba1]
0x00003a94      44895c2434     mov dword [rsp + 0x34], r11d
0x00003a99      4431f5         xor ebp, r14d
0x00003a9c      4401e5         add ebp, r12d
0x00003a9f      4589ec         mov r12d, r13d
0x00003aa2      41c1c405       rol r12d, 5
0x00003aa6      4101ec         add r12d, ebp
0x00003aa9      41c1ce02       ror r14d, 2
0x00003aad      8b6c241c       mov ebp, dword [rsp + 0x1c]             ; ../coreutils-8.31/lib/sha1.c:389
0x00003ab1      33ac24a80000.  xor ebp, dword [rsp + 0xa8]
0x00003ab8      31d5           xor ebp, edx
0x00003aba      336c240c       xor ebp, dword [rsp + 0xc]
0x00003abe      d1c5           rol ebp, 1
0x00003ac0      4189eb         mov r11d, ebp
0x00003ac3      89dd           mov ebp, ebx
0x00003ac5      4431f5         xor ebp, r14d
0x00003ac8      478dbc3ba1eb.  lea r15d, [r11 + r15 + 0x6ed9eba1]
0x00003ad0      44895c2414     mov dword [rsp + 0x14], r11d
0x00003ad5      4431ed         xor ebp, r13d
0x00003ad8      41c1cd02       ror r13d, 2
0x00003adc      4401fd         add ebp, r15d
0x00003adf      4589e7         mov r15d, r12d
0x00003ae2      41c1c705       rol r15d, 5
0x00003ae6      4401fd         add ebp, r15d
0x00003ae9      448bbc24ac00.  mov r15d, dword [rsp + 0xac]            ; ../coreutils-8.31/lib/sha1.c:390
0x00003af1      4531d7         xor r15d, r10d
0x00003af4      4531c2         xor r10d, r8d                           ; ../coreutils-8.31/lib/sha1.c:392
0x00003af7      4131c7         xor r15d, eax                           ; ../coreutils-8.31/lib/sha1.c:390
0x00003afa      44337c2410     xor r15d, dword [rsp + 0x10]
0x00003aff      41d1c7         rol r15d, 1
0x00003b02      4589fb         mov r11d, r15d
0x00003b05      4589f7         mov r15d, r14d
0x00003b08      44895c2418     mov dword [rsp + 0x18], r11d
0x00003b0d      418d9c1ba1eb.  lea ebx, [r11 + rbx + 0x6ed9eba1]
0x00003b15      448b5c241c     mov r11d, dword [rsp + 0x1c]            ; ../coreutils-8.31/lib/sha1.c:391
0x00003b1a      4531ef         xor r15d, r13d                          ; ../coreutils-8.31/lib/sha1.c:390
0x00003b1d      4531e7         xor r15d, r12d
0x00003b20      41c1cc02       ror r12d, 2
0x00003b24      4531cb         xor r11d, r9d                           ; ../coreutils-8.31/lib/sha1.c:391
0x00003b27      44335c2424     xor r11d, dword [rsp + 0x24]
0x00003b2c      4401fb         add ebx, r15d
0x00003b2f      44335c2434     xor r11d, dword [rsp + 0x34]
0x00003b34      4189ef         mov r15d, ebp                           ; ../coreutils-8.31/lib/sha1.c:390
0x00003b37      41c1c705       rol r15d, 5
0x00003b3b      4401fb         add ebx, r15d
0x00003b3e      4589df         mov r15d, r11d                          ; ../coreutils-8.31/lib/sha1.c:391
0x00003b41      4589eb         mov r11d, r13d
0x00003b44      41d1c7         rol r15d, 1
0x00003b47      4531e3         xor r11d, r12d
0x00003b4a      478db437a1eb.  lea r14d, [r15 + r14 + 0x6ed9eba1]
0x00003b52      4131eb         xor r11d, ebp
0x00003b55      c1cd02         ror ebp, 2
0x00003b58      4501f3         add r11d, r14d
0x00003b5b      4189de         mov r14d, ebx
0x00003b5e      41c1c605       rol r14d, 5
0x00003b62      4501f3         add r11d, r14d
0x00003b65      4433542428     xor r10d, dword [rsp + 0x28]            ; ../coreutils-8.31/lib/sha1.c:392
0x00003b6a      4131f9         xor r9d, edi                            ; ../coreutils-8.31/lib/sha1.c:393
0x00003b6d      4433542414     xor r10d, dword [rsp + 0x14]            ; ../coreutils-8.31/lib/sha1.c:392
0x00003b72      44334c242c     xor r9d, dword [rsp + 0x2c]             ; ../coreutils-8.31/lib/sha1.c:393
0x00003b77      4131f0         xor r8d, esi                            ; ../coreutils-8.31/lib/sha1.c:394
0x00003b7a      44334c2418     xor r9d, dword [rsp + 0x18]             ; ../coreutils-8.31/lib/sha1.c:393
0x00003b7f      443344240c     xor r8d, dword [rsp + 0xc]              ; ../coreutils-8.31/lib/sha1.c:394
0x00003b84      31d7           xor edi, edx                            ; ../coreutils-8.31/lib/sha1.c:395
0x00003b86      337c2410       xor edi, dword [rsp + 0x10]
0x00003b8a      41d1c2         rol r10d, 1                             ; ../coreutils-8.31/lib/sha1.c:392
0x00003b8d      4589d6         mov r14d, r10d
0x00003b90      4589e2         mov r10d, r12d
0x00003b93      41d1c1         rol r9d, 1                              ; ../coreutils-8.31/lib/sha1.c:393
0x00003b96      4131ea         xor r10d, ebp                           ; ../coreutils-8.31/lib/sha1.c:392
0x00003b99      478dac2ea1eb.  lea r13d, [r14 + r13 + 0x6ed9eba1]
0x00003ba1      4531f8         xor r8d, r15d                           ; ../coreutils-8.31/lib/sha1.c:394
0x00003ba4      4131da         xor r10d, ebx                           ; ../coreutils-8.31/lib/sha1.c:392
0x00003ba7      c1cb02         ror ebx, 2
0x00003baa      41d1c0         rol r8d, 1                              ; ../coreutils-8.31/lib/sha1.c:394
0x00003bad      4501ea         add r10d, r13d
0x00003bb0      4589dd         mov r13d, r11d                          ; ../coreutils-8.31/lib/sha1.c:392
0x00003bb3      4431f7         xor edi, r14d                           ; ../coreutils-8.31/lib/sha1.c:395
0x00003bb6      41c1c505       rol r13d, 5                             ; ../coreutils-8.31/lib/sha1.c:392
0x00003bba      4501ea         add r10d, r13d
0x00003bbd      4589cd         mov r13d, r9d                           ; ../coreutils-8.31/lib/sha1.c:393
0x00003bc0      4189e9         mov r9d, ebp
0x00003bc3      4131d9         xor r9d, ebx
0x00003bc6      478da425a1eb.  lea r12d, [r13 + r12 + 0x6ed9eba1]
0x00003bce      4531d9         xor r9d, r11d
0x00003bd1      41c1cb02       ror r11d, 2
0x00003bd5      4501e1         add r9d, r12d
0x00003bd8      4589d4         mov r12d, r10d
0x00003bdb      41c1c405       rol r12d, 5
0x00003bdf      4501e1         add r9d, r12d
0x00003be2      4589c4         mov r12d, r8d                           ; ../coreutils-8.31/lib/sha1.c:394
0x00003be5      4189d8         mov r8d, ebx
0x00003be8      4531d8         xor r8d, r11d
0x00003beb      418dac2ca1eb.  lea ebp, [r12 + rbp + 0x6ed9eba1]
0x00003bf3      4531d0         xor r8d, r10d
0x00003bf6      41c1ca02       ror r10d, 2
0x00003bfa      4101e8         add r8d, ebp
0x00003bfd      4489cd         mov ebp, r9d
0x00003c00      c1c505         rol ebp, 5
0x00003c03      4101e8         add r8d, ebp
0x00003c06      d1c7           rol edi, 1                              ; ../coreutils-8.31/lib/sha1.c:395
0x00003c08      31c6           xor esi, eax                            ; ../coreutils-8.31/lib/sha1.c:396
0x00003c0a      33742434       xor esi, dword [rsp + 0x34]
0x00003c0e      89fd           mov ebp, edi                            ; ../coreutils-8.31/lib/sha1.c:395
0x00003c10      4489df         mov edi, r11d
0x00003c13      4431d7         xor edi, r10d
0x00003c16      8d9c1da1ebd9.  lea ebx, [rbp + rbx + 0x6ed9eba1]
0x00003c1d      896c241c       mov dword [rsp + 0x1c], ebp
0x00003c21      4431cf         xor edi, r9d
0x00003c24      41c1c902       ror r9d, 2
0x00003c28      01df           add edi, ebx
0x00003c2a      4489c3         mov ebx, r8d
0x00003c2d      4431ee         xor esi, r13d                           ; ../coreutils-8.31/lib/sha1.c:396
0x00003c30      c1c305         rol ebx, 5                              ; ../coreutils-8.31/lib/sha1.c:395
0x00003c33      d1c6           rol esi, 1                              ; ../coreutils-8.31/lib/sha1.c:396
0x00003c35      01df           add edi, ebx                            ; ../coreutils-8.31/lib/sha1.c:395
0x00003c37      89f3           mov ebx, esi                            ; ../coreutils-8.31/lib/sha1.c:396
0x00003c39      4489d6         mov esi, r10d
0x00003c3c      89fd           mov ebp, edi
0x00003c3e      895c2420       mov dword [rsp + 0x20], ebx
0x00003c42      468d9c1ba1eb.  lea r11d, [rbx + r11 + 0x6ed9eba1]
0x00003c4a      8b5c2424       mov ebx, dword [rsp + 0x24]             ; ../coreutils-8.31/lib/sha1.c:397
0x00003c4e      4431ce         xor esi, r9d                            ; ../coreutils-8.31/lib/sha1.c:396
0x00003c51      c1c505         rol ebp, 5
0x00003c54      4431c6         xor esi, r8d
0x00003c57      41c1c802       ror r8d, 2
0x00003c5b      31da           xor edx, ebx                            ; ../coreutils-8.31/lib/sha1.c:397
0x00003c5d      33542414       xor edx, dword [rsp + 0x14]
0x00003c61      4401de         add esi, r11d
0x00003c64      01ee           add esi, ebp                            ; ../coreutils-8.31/lib/sha1.c:396
0x00003c66      8b6c242c       mov ebp, dword [rsp + 0x2c]             ; ../coreutils-8.31/lib/sha1.c:399
0x00003c6a      4431e2         xor edx, r12d                           ; ../coreutils-8.31/lib/sha1.c:397
0x00003c6d      d1c2           rol edx, 1
0x00003c6f      4189d3         mov r11d, edx
0x00003c72      4489ca         mov edx, r9d
0x00003c75      44895c2424     mov dword [rsp + 0x24], r11d
0x00003c7a      478d9413a1eb.  lea r10d, [r11 + r10 + 0x6ed9eba1]
0x00003c82      448b5c2428     mov r11d, dword [rsp + 0x28]            ; ../coreutils-8.31/lib/sha1.c:398
0x00003c87      4431c2         xor edx, r8d                            ; ../coreutils-8.31/lib/sha1.c:397
0x00003c8a      31fa           xor edx, edi
0x00003c8c      c1cf02         ror edi, 2
0x00003c8f      4431d8         xor eax, r11d                           ; ../coreutils-8.31/lib/sha1.c:398
0x00003c92      33442418       xor eax, dword [rsp + 0x18]
0x00003c96      4401d2         add edx, r10d
0x00003c99      3344241c       xor eax, dword [rsp + 0x1c]
0x00003c9d      4189f2         mov r10d, esi                           ; ../coreutils-8.31/lib/sha1.c:397
0x00003ca0      41c1c205       rol r10d, 5
0x00003ca4      4401d2         add edx, r10d
0x00003ca7      d1c0           rol eax, 1                              ; ../coreutils-8.31/lib/sha1.c:398
0x00003ca9      4189c2         mov r10d, eax
0x00003cac      4489c0         mov eax, r8d
0x00003caf      478d8c0aa1eb.  lea r9d, [r10 + r9 + 0x6ed9eba1]
0x00003cb7      31f8           xor eax, edi
0x00003cb9      4489542428     mov dword [rsp + 0x28], r10d
0x00003cbe      31f0           xor eax, esi
0x00003cc0      c1ce02         ror esi, 2
0x00003cc3      4189d2         mov r10d, edx                           ; ../coreutils-8.31/lib/sha1.c:399
0x00003cc6      4401c8         add eax, r9d
0x00003cc9      4189d1         mov r9d, edx                            ; ../coreutils-8.31/lib/sha1.c:398
0x00003ccc      4121f2         and r10d, esi                           ; ../coreutils-8.31/lib/sha1.c:399
0x00003ccf      41c1c105       rol r9d, 5                              ; ../coreutils-8.31/lib/sha1.c:398
0x00003cd3      4101c1         add r9d, eax
0x00003cd6      89d8           mov eax, ebx                            ; ../coreutils-8.31/lib/sha1.c:399
0x00003cd8      8b5c240c       mov ebx, dword [rsp + 0xc]              ; ../coreutils-8.31/lib/sha1.c:400
0x00003cdc      31e8           xor eax, ebp                            ; ../coreutils-8.31/lib/sha1.c:399
0x00003cde      4431f8         xor eax, r15d
0x00003ce1      33442420       xor eax, dword [rsp + 0x20]
0x00003ce5      4431db         xor ebx, r11d                           ; ../coreutils-8.31/lib/sha1.c:400
0x00003ce8      4431f3         xor ebx, r14d
0x00003ceb      335c2424       xor ebx, dword [rsp + 0x24]
0x00003cef      d1c0           rol eax, 1                              ; ../coreutils-8.31/lib/sha1.c:399
0x00003cf1      8944242c       mov dword [rsp + 0x2c], eax
0x00003cf5      468d8400dcbc.  lea r8d, [rax + r8 - 0x70e44324]
0x00003cfd      4489c8         mov eax, r9d
0x00003d00      c1c005         rol eax, 5
0x00003d03      4189db         mov r11d, ebx                           ; ../coreutils-8.31/lib/sha1.c:400
0x00003d06      8b5c2410       mov ebx, dword [rsp + 0x10]             ; ../coreutils-8.31/lib/sha1.c:401
0x00003d0a      4101c0         add r8d, eax
0x00003d0d      89d0           mov eax, edx                            ; ../coreutils-8.31/lib/sha1.c:399
0x00003d0f      c1ca02         ror edx, 2
0x00003d12      09f0           or eax, esi
0x00003d14      41d1c3         rol r11d, 1                             ; ../coreutils-8.31/lib/sha1.c:400
0x00003d17      21f8           and eax, edi                            ; ../coreutils-8.31/lib/sha1.c:399
0x00003d19      31eb           xor ebx, ebp                            ; ../coreutils-8.31/lib/sha1.c:401
0x00003d1b      418dbc3bdcbc.  lea edi, [r11 + rdi - 0x70e44324]
0x00003d23      4409d0         or eax, r10d                            ; ../coreutils-8.31/lib/sha1.c:399
0x00003d26      4589ca         mov r10d, r9d                           ; ../coreutils-8.31/lib/sha1.c:400
0x00003d29      4431eb         xor ebx, r13d                           ; ../coreutils-8.31/lib/sha1.c:401
0x00003d2c      4101c0         add r8d, eax                            ; ../coreutils-8.31/lib/sha1.c:399
0x00003d2f      4109d2         or r10d, edx                            ; ../coreutils-8.31/lib/sha1.c:400
0x00003d32      4489c8         mov eax, r9d
0x00003d35      4121f2         and r10d, esi
0x00003d38      21d0           and eax, edx
0x00003d3a      335c2428       xor ebx, dword [rsp + 0x28]             ; ../coreutils-8.31/lib/sha1.c:401
0x00003d3e      4409d0         or eax, r10d                            ; ../coreutils-8.31/lib/sha1.c:400
0x00003d41      41c1c902       ror r9d, 2
0x00003d45      8b6c240c       mov ebp, dword [rsp + 0xc]              ; ../coreutils-8.31/lib/sha1.c:402
0x00003d49      01f8           add eax, edi
0x00003d4b      4489c7         mov edi, r8d                            ; ../coreutils-8.31/lib/sha1.c:400
0x00003d4e      4589c2         mov r10d, r8d                           ; ../coreutils-8.31/lib/sha1.c:401
0x00003d51      c1c705         rol edi, 5                              ; ../coreutils-8.31/lib/sha1.c:400
0x00003d54      01c7           add edi, eax
0x00003d56      d1c3           rol ebx, 1                              ; ../coreutils-8.31/lib/sha1.c:401
0x00003d58      4521ca         and r10d, r9d
0x00003d5b      895c2430       mov dword [rsp + 0x30], ebx
0x00003d5f      8db433dcbc1b.  lea esi, [rbx + rsi - 0x70e44324]
0x00003d66      8b5c2434       mov ebx, dword [rsp + 0x34]             ; ../coreutils-8.31/lib/sha1.c:402
0x00003d6a      89f8           mov eax, edi                            ; ../coreutils-8.31/lib/sha1.c:401
0x00003d6c      c1c005         rol eax, 5
0x00003d6f      31dd           xor ebp, ebx                            ; ../coreutils-8.31/lib/sha1.c:402
0x00003d71      01c6           add esi, eax
0x00003d73      4489c0         mov eax, r8d                            ; ../coreutils-8.31/lib/sha1.c:401
0x00003d76      4431e5         xor ebp, r12d                           ; ../coreutils-8.31/lib/sha1.c:402
0x00003d79      336c242c       xor ebp, dword [rsp + 0x2c]
0x00003d7d      4409c8         or eax, r9d                             ; ../coreutils-8.31/lib/sha1.c:401
0x00003d80      21d0           and eax, edx
0x00003d82      41c1c802       ror r8d, 2
0x00003d86      4409d0         or eax, r10d
0x00003d89      01c6           add esi, eax
0x00003d8b      89f8           mov eax, edi                            ; ../coreutils-8.31/lib/sha1.c:402
0x00003d8d      d1c5           rol ebp, 1
0x00003d8f      4409c0         or eax, r8d
0x00003d92      8d9415dcbc1b.  lea edx, [rbp + rdx - 0x70e44324]
0x00003d99      896c240c       mov dword [rsp + 0xc], ebp
0x00003d9d      8b6c2410       mov ebp, dword [rsp + 0x10]             ; ../coreutils-8.31/lib/sha1.c:403
0x00003da1      336c2414       xor ebp, dword [rsp + 0x14]
0x00003da5      4189c2         mov r10d, eax                           ; ../coreutils-8.31/lib/sha1.c:402
0x00003da8      89f8           mov eax, edi
0x00003daa      336c241c       xor ebp, dword [rsp + 0x1c]             ; ../coreutils-8.31/lib/sha1.c:403
0x00003dae      4521ca         and r10d, r9d                           ; ../coreutils-8.31/lib/sha1.c:402
0x00003db1      4421c0         and eax, r8d
0x00003db4      4409d0         or eax, r10d
0x00003db7      c1cf02         ror edi, 2
0x00003dba      01d0           add eax, edx
0x00003dbc      89f2           mov edx, esi
0x00003dbe      c1c205         rol edx, 5
0x00003dc1      4431dd         xor ebp, r11d                           ; ../coreutils-8.31/lib/sha1.c:403
0x00003dc4      01c2           add edx, eax                            ; ../coreutils-8.31/lib/sha1.c:402
0x00003dc6      d1c5           rol ebp, 1                              ; ../coreutils-8.31/lib/sha1.c:403
0x00003dc8      4189d2         mov r10d, edx
0x00003dcb      468d8c0ddcbc.  lea r9d, [rbp + r9 - 0x70e44324]
0x00003dd3      41c1c205       rol r10d, 5
0x00003dd7      896c2434       mov dword [rsp + 0x34], ebp
0x00003ddb      4501d1         add r9d, r10d
0x00003dde      4189f2         mov r10d, esi
0x00003de1      4109fa         or r10d, edi
0x00003de4      4489d0         mov eax, r10d
0x00003de7      4189f2         mov r10d, esi
0x00003dea      4121fa         and r10d, edi
0x00003ded      4421c0         and eax, r8d
0x00003df0      4409d0         or eax, r10d
0x00003df3      4189d2         mov r10d, edx                           ; ../coreutils-8.31/lib/sha1.c:404
0x00003df6      4101c1         add r9d, eax                            ; ../coreutils-8.31/lib/sha1.c:403
0x00003df9      c1ce02         ror esi, 2
0x00003dfc      335c2418       xor ebx, dword [rsp + 0x18]             ; ../coreutils-8.31/lib/sha1.c:404
0x00003e00      8b6c2420       mov ebp, dword [rsp + 0x20]
0x00003e04      4109f2         or r10d, esi
0x00003e07      89d0           mov eax, edx
0x00003e09      4121fa         and r10d, edi
0x00003e0c      21f0           and eax, esi
0x00003e0e      c1ca02         ror edx, 2
0x00003e11      4409d0         or eax, r10d
0x00003e14      4589ca         mov r10d, r9d                           ; ../coreutils-8.31/lib/sha1.c:405
0x00003e17      31dd           xor ebp, ebx                            ; ../coreutils-8.31/lib/sha1.c:404
0x00003e19      336c2430       xor ebp, dword [rsp + 0x30]
0x00003e1d      4121d2         and r10d, edx                           ; ../coreutils-8.31/lib/sha1.c:405
0x00003e20      89eb           mov ebx, ebp                            ; ../coreutils-8.31/lib/sha1.c:404
0x00003e22      8b6c2414       mov ebp, dword [rsp + 0x14]             ; ../coreutils-8.31/lib/sha1.c:405
0x00003e26      d1c3           rol ebx, 1                              ; ../coreutils-8.31/lib/sha1.c:404
0x00003e28      468d8403dcbc.  lea r8d, [rbx + r8 - 0x70e44324]
0x00003e30      895c2438       mov dword [rsp + 0x38], ebx
0x00003e34      4431fd         xor ebp, r15d                           ; ../coreutils-8.31/lib/sha1.c:405
0x00003e37      336c2424       xor ebp, dword [rsp + 0x24]
0x00003e3b      336c240c       xor ebp, dword [rsp + 0xc]
0x00003e3f      4401c0         add eax, r8d
0x00003e42      4589c8         mov r8d, r9d                            ; ../coreutils-8.31/lib/sha1.c:404
0x00003e45      41c1c005       rol r8d, 5
0x00003e49      4101c0         add r8d, eax
0x00003e4c      4489c0         mov eax, r8d                            ; ../coreutils-8.31/lib/sha1.c:405
0x00003e4f      d1c5           rol ebp, 1
0x00003e51      c1c005         rol eax, 5
0x00003e54      8dbc3ddcbc1b.  lea edi, [rbp + rdi - 0x70e44324]
0x00003e5b      01c7           add edi, eax
0x00003e5d      4489c8         mov eax, r9d
0x00003e60      41c1c902       ror r9d, 2
0x00003e64      09d0           or eax, edx
0x00003e66      21f0           and eax, esi
0x00003e68      4409d0         or eax, r10d
0x00003e6b      4589c2         mov r10d, r8d                           ; ../coreutils-8.31/lib/sha1.c:406
0x00003e6e      01c7           add edi, eax                            ; ../coreutils-8.31/lib/sha1.c:405
0x00003e70      8b442418       mov eax, dword [rsp + 0x18]             ; ../coreutils-8.31/lib/sha1.c:406
0x00003e74      4509ca         or r10d, r9d
0x00003e77      4121d2         and r10d, edx
0x00003e7a      4431f0         xor eax, r14d
0x00003e7d      33442428       xor eax, dword [rsp + 0x28]
0x00003e81      33442434       xor eax, dword [rsp + 0x34]
0x00003e85      d1c0           rol eax, 1
0x00003e87      89c3           mov ebx, eax
0x00003e89      4489c0         mov eax, r8d
0x00003e8c      4421c8         and eax, r9d
0x00003e8f      8db433dcbc1b.  lea esi, [rbx + rsi - 0x70e44324]
0x00003e96      895c243c       mov dword [rsp + 0x3c], ebx
0x00003e9a      4409d0         or eax, r10d
0x00003e9d      4531ef         xor r15d, r13d                          ; ../coreutils-8.31/lib/sha1.c:407
0x00003ea0      44337c242c     xor r15d, dword [rsp + 0x2c]
0x00003ea5      44337c2438     xor r15d, dword [rsp + 0x38]
0x00003eaa      01f0           add eax, esi
0x00003eac      89fe           mov esi, edi                            ; ../coreutils-8.31/lib/sha1.c:406
0x00003eae      c1c605         rol esi, 5
0x00003eb1      41c1c802       ror r8d, 2
0x00003eb5      4189fa         mov r10d, edi                           ; ../coreutils-8.31/lib/sha1.c:407
0x00003eb8      01c6           add esi, eax                            ; ../coreutils-8.31/lib/sha1.c:406
0x00003eba      4521c2         and r10d, r8d                           ; ../coreutils-8.31/lib/sha1.c:407
0x00003ebd      4531e6         xor r14d, r12d                          ; ../coreutils-8.31/lib/sha1.c:408
0x00003ec0      89f0           mov eax, esi                            ; ../coreutils-8.31/lib/sha1.c:407
0x00003ec2      41d1c7         rol r15d, 1
0x00003ec5      c1c005         rol eax, 5
0x00003ec8      418d9417dcbc.  lea edx, [r15 + rdx - 0x70e44324]
0x00003ed0      01c2           add edx, eax
0x00003ed2      89f8           mov eax, edi
0x00003ed4      c1cf02         ror edi, 2
0x00003ed7      4409c0         or eax, r8d
0x00003eda      4421c8         and eax, r9d
0x00003edd      4409d0         or eax, r10d
0x00003ee0      4589f2         mov r10d, r14d                          ; ../coreutils-8.31/lib/sha1.c:408
0x00003ee3      4531da         xor r10d, r11d
0x00003ee6      01c2           add edx, eax                            ; ../coreutils-8.31/lib/sha1.c:407
0x00003ee8      89f0           mov eax, esi                            ; ../coreutils-8.31/lib/sha1.c:408
0x00003eea      4131ea         xor r10d, ebp
0x00003eed      21f8           and eax, edi
0x00003eef      4589d6         mov r14d, r10d
0x00003ef2      4189f2         mov r10d, esi
0x00003ef5      c1ce02         ror esi, 2
0x00003ef8      41d1c6         rol r14d, 1
0x00003efb      4109fa         or r10d, edi
0x00003efe      4521c2         and r10d, r8d
0x00003f01      438d9c0edcbc.  lea ebx, [r14 + r9 - 0x70e44324]
0x00003f09      4189d1         mov r9d, edx
0x00003f0c      4409d0         or eax, r10d
0x00003f0f      41c1c105       rol r9d, 5
0x00003f13      01d8           add eax, ebx
0x00003f15      4489cb         mov ebx, r9d
0x00003f18      448b4c241c     mov r9d, dword [rsp + 0x1c]             ; ../coreutils-8.31/lib/sha1.c:409
0x00003f1d      01c3           add ebx, eax                            ; ../coreutils-8.31/lib/sha1.c:408
0x00003f1f      4531e9         xor r9d, r13d                           ; ../coreutils-8.31/lib/sha1.c:409
0x00003f22      44334c2430     xor r9d, dword [rsp + 0x30]
0x00003f27      44334c243c     xor r9d, dword [rsp + 0x3c]
0x00003f2c      41d1c1         rol r9d, 1
0x00003f2f      4589cd         mov r13d, r9d
0x00003f32      478d8401dcbc.  lea r8d, [r9 + r8 - 0x70e44324]
0x00003f3a      4189d9         mov r9d, ebx
0x00003f3d      41c1c105       rol r9d, 5
0x00003f41      4501c8         add r8d, r9d
0x00003f44      4189d1         mov r9d, edx
0x00003f47      4109f1         or r9d, esi
0x00003f4a      4489c8         mov eax, r9d
0x00003f4d      4189d1         mov r9d, edx
0x00003f50      c1ca02         ror edx, 2
0x00003f53      4121f1         and r9d, esi
0x00003f56      21f8           and eax, edi
0x00003f58      4409c8         or eax, r9d
0x00003f5b      468d0c00       lea r9d, [rax + r8]
0x00003f5f      448b442420     mov r8d, dword [rsp + 0x20]             ; ../coreutils-8.31/lib/sha1.c:410
0x00003f64      89d8           mov eax, ebx
0x00003f66      21d0           and eax, edx
0x00003f68      4531e0         xor r8d, r12d
0x00003f6b      443344240c     xor r8d, dword [rsp + 0xc]
0x00003f70      4531f8         xor r8d, r15d
0x00003f73      41d1c0         rol r8d, 1
0x00003f76      4589c4         mov r12d, r8d
0x00003f79      4189d8         mov r8d, ebx
0x00003f7c      c1cb02         ror ebx, 2
0x00003f7f      458d943cdcbc.  lea r10d, [r12 + rdi - 0x70e44324]
0x00003f87      8b7c241c       mov edi, dword [rsp + 0x1c]             ; ../coreutils-8.31/lib/sha1.c:411
0x00003f8b      337c2424       xor edi, dword [rsp + 0x24]
0x00003f8f      4109d0         or r8d, edx                             ; ../coreutils-8.31/lib/sha1.c:410
0x00003f92      337c2434       xor edi, dword [rsp + 0x34]             ; ../coreutils-8.31/lib/sha1.c:411
0x00003f96      4121f0         and r8d, esi                            ; ../coreutils-8.31/lib/sha1.c:410
0x00003f99      4409c0         or eax, r8d
0x00003f9c      4589c8         mov r8d, r9d
0x00003f9f      41c1c005       rol r8d, 5
0x00003fa3      4401d0         add eax, r10d
0x00003fa6      4431f7         xor edi, r14d                           ; ../coreutils-8.31/lib/sha1.c:411
0x00003fa9      4589c2         mov r10d, r8d                           ; ../coreutils-8.31/lib/sha1.c:410
0x00003fac      4101c2         add r10d, eax
0x00003faf      d1c7           rol edi, 1                              ; ../coreutils-8.31/lib/sha1.c:411
0x00003fb1      8db437dcbc1b.  lea esi, [rdi + rsi - 0x70e44324]
0x00003fb8      4589d0         mov r8d, r10d
0x00003fbb      897c2440       mov dword [rsp + 0x40], edi
0x00003fbf      41c1c005       rol r8d, 5
0x00003fc3      4401c6         add esi, r8d
0x00003fc6      4589c8         mov r8d, r9d
0x00003fc9      4109d8         or r8d, ebx
0x00003fcc      4489c0         mov eax, r8d
0x00003fcf      4589c8         mov r8d, r9d
0x00003fd2      41c1c902       ror r9d, 2
0x00003fd6      4121d8         and r8d, ebx
0x00003fd9      21d0           and eax, edx
0x00003fdb      4409c0         or eax, r8d
0x00003fde      8d3c30         lea edi, [rax + rsi]
0x00003fe1      8b742420       mov esi, dword [rsp + 0x20]             ; ../coreutils-8.31/lib/sha1.c:412
0x00003fe5      33742428       xor esi, dword [rsp + 0x28]
0x00003fe9      33742438       xor esi, dword [rsp + 0x38]
0x00003fed      4489d0         mov eax, r10d
0x00003ff0      4421c8         and eax, r9d
0x00003ff3      4431ee         xor esi, r13d
0x00003ff6      d1c6           rol esi, 1
0x00003ff8      4189f0         mov r8d, esi
0x00003ffb      4489d6         mov esi, r10d
0x00003ffe      41c1ca02       ror r10d, 2
0x00004002      4409ce         or esi, r9d
0x00004005      448944241c     mov dword [rsp + 0x1c], r8d
0x0000400a      458d8410dcbc.  lea r8d, [r8 + rdx - 0x70e44324]
0x00004012      21de           and esi, ebx
0x00004014      89fa           mov edx, edi
0x00004016      09f0           or eax, esi
0x00004018      c1c205         rol edx, 5
0x0000401b      89fe           mov esi, edi                            ; ../coreutils-8.31/lib/sha1.c:413
0x0000401d      4401c0         add eax, r8d
0x00004020      4189d0         mov r8d, edx                            ; ../coreutils-8.31/lib/sha1.c:412
0x00004023      8b542424       mov edx, dword [rsp + 0x24]             ; ../coreutils-8.31/lib/sha1.c:413
0x00004027      3354242c       xor edx, dword [rsp + 0x2c]
0x0000402b      4101c0         add r8d, eax                            ; ../coreutils-8.31/lib/sha1.c:412
0x0000402e      4421d6         and esi, r10d                           ; ../coreutils-8.31/lib/sha1.c:413
0x00004031      4489c0         mov eax, r8d
0x00004034      c1c005         rol eax, 5
0x00004037      31ea           xor edx, ebp
0x00004039      4431e2         xor edx, r12d
0x0000403c      d1c2           rol edx, 1
0x0000403e      89542424       mov dword [rsp + 0x24], edx
0x00004042      8d941adcbc1b.  lea edx, [rdx + rbx - 0x70e44324]
0x00004049      01c2           add edx, eax
0x0000404b      89f8           mov eax, edi
0x0000404d      c1cf02         ror edi, 2
0x00004050      4409d0         or eax, r10d
0x00004053      4421c8         and eax, r9d
0x00004056      09f0           or eax, esi
0x00004058      01c2           add edx, eax
0x0000405a      8b442428       mov eax, dword [rsp + 0x28]             ; ../coreutils-8.31/lib/sha1.c:414
0x0000405e      4431d8         xor eax, r11d
0x00004061      3344243c       xor eax, dword [rsp + 0x3c]
0x00004065      33442440       xor eax, dword [rsp + 0x40]
0x00004069      d1c0           rol eax, 1
0x0000406b      89c3           mov ebx, eax
0x0000406d      4489c0         mov eax, r8d
0x00004070      09f8           or eax, edi
0x00004072      468d8c0bdcbc.  lea r9d, [rbx + r9 - 0x70e44324]
0x0000407a      895c2428       mov dword [rsp + 0x28], ebx
0x0000407e      89c6           mov esi, eax
0x00004080      4489c0         mov eax, r8d
0x00004083      8b5c242c       mov ebx, dword [rsp + 0x2c]             ; ../coreutils-8.31/lib/sha1.c:415
0x00004087      4421d6         and esi, r10d                           ; ../coreutils-8.31/lib/sha1.c:414
0x0000408a      21f8           and eax, edi
0x0000408c      09f0           or eax, esi
0x0000408e      4401c8         add eax, r9d
0x00004091      4189d1         mov r9d, edx
0x00004094      41c1c105       rol r9d, 5
0x00004098      335c2430       xor ebx, dword [rsp + 0x30]             ; ../coreutils-8.31/lib/sha1.c:415
0x0000409c      44335c240c     xor r11d, dword [rsp + 0xc]             ; ../coreutils-8.31/lib/sha1.c:416
0x000040a1      4101c1         add r9d, eax                            ; ../coreutils-8.31/lib/sha1.c:414
0x000040a4      41c1c802       ror r8d, 2
0x000040a8      4431fb         xor ebx, r15d                           ; ../coreutils-8.31/lib/sha1.c:415
0x000040ab      335c241c       xor ebx, dword [rsp + 0x1c]
0x000040af      4531f3         xor r11d, r14d                          ; ../coreutils-8.31/lib/sha1.c:416
0x000040b2      44335c2424     xor r11d, dword [rsp + 0x24]
0x000040b7      89d8           mov eax, ebx                            ; ../coreutils-8.31/lib/sha1.c:415
0x000040b9      8b5c2430       mov ebx, dword [rsp + 0x30]             ; ../coreutils-8.31/lib/sha1.c:417
0x000040bd      d1c0           rol eax, 1                              ; ../coreutils-8.31/lib/sha1.c:415
0x000040bf      41d1c3         rol r11d, 1                             ; ../coreutils-8.31/lib/sha1.c:416
0x000040c2      428db410dcbc.  lea esi, [rax + r10 - 0x70e44324]
0x000040ca      4589ca         mov r10d, r9d                           ; ../coreutils-8.31/lib/sha1.c:415
0x000040cd      8944242c       mov dword [rsp + 0x2c], eax
0x000040d1      41c1c205       rol r10d, 5
0x000040d5      44895c2410     mov dword [rsp + 0x10], r11d
0x000040da      4401d6         add esi, r10d
0x000040dd      4189d2         mov r10d, edx
0x000040e0      4509c2         or r10d, r8d
0x000040e3      4489d0         mov eax, r10d
0x000040e6      4189d2         mov r10d, edx
0x000040e9      c1ca02         ror edx, 2
0x000040ec      4521c2         and r10d, r8d
0x000040ef      21f8           and eax, edi
0x000040f1      418dbc3bdcbc.  lea edi, [r11 + rdi - 0x70e44324]
0x000040f9      448b5c2434     mov r11d, dword [rsp + 0x34]            ; ../coreutils-8.31/lib/sha1.c:417
0x000040fe      4409d0         or eax, r10d                            ; ../coreutils-8.31/lib/sha1.c:415
0x00004101      448d1430       lea r10d, [rax + rsi]
0x00004105      4489ce         mov esi, r9d                            ; ../coreutils-8.31/lib/sha1.c:416
0x00004108      4489c8         mov eax, r9d
0x0000410b      09d6           or esi, edx
0x0000410d      21d0           and eax, edx
0x0000410f      41c1c902       ror r9d, 2
0x00004113      4431db         xor ebx, r11d                           ; ../coreutils-8.31/lib/sha1.c:417
0x00004116      4421c6         and esi, r8d                            ; ../coreutils-8.31/lib/sha1.c:416
0x00004119      4431eb         xor ebx, r13d                           ; ../coreutils-8.31/lib/sha1.c:417
0x0000411c      335c2428       xor ebx, dword [rsp + 0x28]
0x00004120      09f0           or eax, esi                             ; ../coreutils-8.31/lib/sha1.c:416
0x00004122      01f8           add eax, edi
0x00004124      4489d7         mov edi, r10d
0x00004127      c1c705         rol edi, 5
0x0000412a      01c7           add edi, eax
0x0000412c      d1c3           rol ebx, 1                              ; ../coreutils-8.31/lib/sha1.c:417
0x0000412e      428db403dcbc.  lea esi, [rbx + r8 - 0x70e44324]
0x00004136      4189f8         mov r8d, edi
0x00004139      895c2414       mov dword [rsp + 0x14], ebx
0x0000413d      41c1c005       rol r8d, 5
0x00004141      8b5c2438       mov ebx, dword [rsp + 0x38]             ; ../coreutils-8.31/lib/sha1.c:418
0x00004145      4401c6         add esi, r8d
0x00004148      4589d0         mov r8d, r10d                           ; ../coreutils-8.31/lib/sha1.c:417
0x0000414b      4509c8         or r8d, r9d
0x0000414e      4131eb         xor r11d, ebp                           ; ../coreutils-8.31/lib/sha1.c:419
0x00004151      44335c2440     xor r11d, dword [rsp + 0x40]
0x00004156      4489c0         mov eax, r8d                            ; ../coreutils-8.31/lib/sha1.c:417
0x00004159      4589d0         mov r8d, r10d
0x0000415c      41c1ca02       ror r10d, 2
0x00004160      4521c8         and r8d, r9d
0x00004163      21d0           and eax, edx
0x00004165      44335c2410     xor r11d, dword [rsp + 0x10]            ; ../coreutils-8.31/lib/sha1.c:419
0x0000416a      4409c0         or eax, r8d                             ; ../coreutils-8.31/lib/sha1.c:417
0x0000416d      448d0430       lea r8d, [rax + rsi]
0x00004171      8b44240c       mov eax, dword [rsp + 0xc]              ; ../coreutils-8.31/lib/sha1.c:418
0x00004175      41d1c3         rol r11d, 1                             ; ../coreutils-8.31/lib/sha1.c:419
0x00004178      31d8           xor eax, ebx                            ; ../coreutils-8.31/lib/sha1.c:418
0x0000417a      44895c2418     mov dword [rsp + 0x18], r11d
0x0000417f      4431e0         xor eax, r12d
0x00004182      3344242c       xor eax, dword [rsp + 0x2c]
0x00004186      d1c0           rol eax, 1
0x00004188      8944240c       mov dword [rsp + 0xc], eax
0x0000418c      89f8           mov eax, edi
0x0000418e      4409d0         or eax, r10d
0x00004191      89c6           mov esi, eax
0x00004193      89f8           mov eax, edi
0x00004195      c1cf02         ror edi, 2
0x00004198      4421ce         and esi, r9d
0x0000419b      4421d0         and eax, r10d
0x0000419e      478d8c0bd6c1.  lea r9d, [r11 + r9 - 0x359d3e2a]
0x000041a6      09f0           or eax, esi
0x000041a8      8b74240c       mov esi, dword [rsp + 0xc]
0x000041ac      448b5c241c     mov r11d, dword [rsp + 0x1c]            ; ../coreutils-8.31/lib/sha1.c:420
0x000041b1      8d9416dcbc1b.  lea edx, [rsi + rdx - 0x70e44324]
0x000041b8      01d0           add eax, edx
0x000041ba      4489c2         mov edx, r8d                            ; ../coreutils-8.31/lib/sha1.c:418
0x000041bd      c1c205         rol edx, 5
0x000041c0      01c2           add edx, eax
0x000041c2      4489d0         mov eax, r10d                           ; ../coreutils-8.31/lib/sha1.c:419
0x000041c5      31f8           xor eax, edi
0x000041c7      4431c0         xor eax, r8d
0x000041ca      41c1c802       ror r8d, 2
0x000041ce      4401c8         add eax, r9d
0x000041d1      4189d1         mov r9d, edx
0x000041d4      4489c6         mov esi, r8d
0x000041d7      41c1c105       rol r9d, 5
0x000041db      4101c1         add r9d, eax
0x000041de      89d8           mov eax, ebx                            ; ../coreutils-8.31/lib/sha1.c:420
0x000041e0      8b5c243c       mov ebx, dword [rsp + 0x3c]
0x000041e4      31d8           xor eax, ebx
0x000041e6      4431d8         xor eax, r11d
0x000041e9      33442414       xor eax, dword [rsp + 0x14]
0x000041ed      4189c0         mov r8d, eax
0x000041f0      41d1c0         rol r8d, 1
0x000041f3      4489c0         mov eax, r8d
0x000041f6      4189f8         mov r8d, edi
0x000041f9      4131f0         xor r8d, esi
0x000041fc      8944241c       mov dword [rsp + 0x1c], eax
0x00004200      428d8410d6c1.  lea eax, [rax + r10 - 0x359d3e2a]
0x00004208      4131d0         xor r8d, edx
0x0000420b      4431fd         xor ebp, r15d                           ; ../coreutils-8.31/lib/sha1.c:421
0x0000420e      336c2424       xor ebp, dword [rsp + 0x24]
0x00004212      336c240c       xor ebp, dword [rsp + 0xc]
0x00004216      4189d2         mov r10d, edx                           ; ../coreutils-8.31/lib/sha1.c:420
0x00004219      4401c0         add eax, r8d
0x0000421c      41c1ca02       ror r10d, 2
0x00004220      4589c8         mov r8d, r9d
0x00004223      89f2           mov edx, esi                            ; ../coreutils-8.31/lib/sha1.c:421
0x00004225      4431d2         xor edx, r10d
0x00004228      41c1c005       rol r8d, 5                              ; ../coreutils-8.31/lib/sha1.c:420
0x0000422c      4531ef         xor r15d, r13d                          ; ../coreutils-8.31/lib/sha1.c:423
0x0000422f      4101c0         add r8d, eax                            ; ../coreutils-8.31/lib/sha1.c:420
0x00004232      89d0           mov eax, edx                            ; ../coreutils-8.31/lib/sha1.c:421
0x00004234      44337c242c     xor r15d, dword [rsp + 0x2c]            ; ../coreutils-8.31/lib/sha1.c:423
0x00004239      d1c5           rol ebp, 1                              ; ../coreutils-8.31/lib/sha1.c:421
0x0000423b      4431c8         xor eax, r9d
0x0000423e      41c1c902       ror r9d, 2
0x00004242      8dbc3dd6c162.  lea edi, [rbp + rdi - 0x359d3e2a]
0x00004249      44337c241c     xor r15d, dword [rsp + 0x1c]            ; ../coreutils-8.31/lib/sha1.c:423
0x0000424e      896c2420       mov dword [rsp + 0x20], ebp
0x00004252      01f8           add eax, edi
0x00004254      4489c7         mov edi, r8d                            ; ../coreutils-8.31/lib/sha1.c:421
0x00004257      c1c705         rol edi, 5
0x0000425a      01c7           add edi, eax
0x0000425c      89d8           mov eax, ebx                            ; ../coreutils-8.31/lib/sha1.c:422
0x0000425e      41d1c7         rol r15d, 1                             ; ../coreutils-8.31/lib/sha1.c:423
0x00004261      4431f0         xor eax, r14d                           ; ../coreutils-8.31/lib/sha1.c:422
0x00004264      33442428       xor eax, dword [rsp + 0x28]
0x00004268      44897c2470     mov dword [rsp + 0x70], r15d            ; ../coreutils-8.31/lib/sha1.c:423
0x0000426d      33442418       xor eax, dword [rsp + 0x18]             ; ../coreutils-8.31/lib/sha1.c:422
0x00004271      4489fd         mov ebp, r15d                           ; ../coreutils-8.31/lib/sha1.c:423
0x00004274      89c2           mov edx, eax                            ; ../coreutils-8.31/lib/sha1.c:422
0x00004276      4489d0         mov eax, r10d
0x00004279      d1c2           rol edx, 1
0x0000427b      4431c8         xor eax, r9d
0x0000427e      8db432d6c162.  lea esi, [rdx + rsi - 0x359d3e2a]
0x00004285      4431c0         xor eax, r8d
0x00004288      41c1c802       ror r8d, 2
0x0000428c      89542430       mov dword [rsp + 0x30], edx
0x00004290      01f0           add eax, esi
0x00004292      89fe           mov esi, edi
0x00004294      c1c605         rol esi, 5
0x00004297      01c6           add esi, eax
0x00004299      4489c8         mov eax, r9d                            ; ../coreutils-8.31/lib/sha1.c:423
0x0000429c      4431c0         xor eax, r8d
0x0000429f      89c2           mov edx, eax
0x000042a1      438d8417d6c1.  lea eax, [r15 + r10 - 0x359d3e2a]
0x000042a9      4189f2         mov r10d, esi
0x000042ac      31fa           xor edx, edi
0x000042ae      4589c7         mov r15d, r8d                           ; ../coreutils-8.31/lib/sha1.c:424
0x000042b1      01d0           add eax, edx
0x000042b3      41c1c205       rol r10d, 5                             ; ../coreutils-8.31/lib/sha1.c:423
0x000042b7      c1cf02         ror edi, 2
0x000042ba      4489d2         mov edx, r10d
0x000042bd      4589f2         mov r10d, r14d                          ; ../coreutils-8.31/lib/sha1.c:424
0x000042c0      4131ff         xor r15d, edi
0x000042c3      4531e2         xor r10d, r12d
0x000042c6      4433542410     xor r10d, dword [rsp + 0x10]
0x000042cb      01c2           add edx, eax                            ; ../coreutils-8.31/lib/sha1.c:423
0x000042cd      4433542420     xor r10d, dword [rsp + 0x20]            ; ../coreutils-8.31/lib/sha1.c:424
0x000042d2      4489f8         mov eax, r15d
0x000042d5      8b5c2440       mov ebx, dword [rsp + 0x40]             ; ../coreutils-8.31/lib/sha1.c:425
0x000042d9      31f0           xor eax, esi                            ; ../coreutils-8.31/lib/sha1.c:424
0x000042db      c1ce02         ror esi, 2
0x000042de      4531dc         xor r12d, r11d                          ; ../coreutils-8.31/lib/sha1.c:426
0x000042e1      4589de         mov r14d, r11d
0x000042e4      4189f3         mov r11d, esi
0x000042e7      896c2438       mov dword [rsp + 0x38], ebp
0x000042eb      41d1c2         rol r10d, 1                             ; ../coreutils-8.31/lib/sha1.c:424
0x000042ee      478d8c0ad6c1.  lea r9d, [r10 + r9 - 0x359d3e2a]
0x000042f6      4489542434     mov dword [rsp + 0x34], r10d
0x000042fb      4489542474     mov dword [rsp + 0x74], r10d
0x00004300      4189fa         mov r10d, edi                           ; ../coreutils-8.31/lib/sha1.c:425
0x00004303      4401c8         add eax, r9d
0x00004306      4189d1         mov r9d, edx                            ; ../coreutils-8.31/lib/sha1.c:424
0x00004309      4131f2         xor r10d, esi                           ; ../coreutils-8.31/lib/sha1.c:425
0x0000430c      41c1c105       rol r9d, 5                              ; ../coreutils-8.31/lib/sha1.c:424
0x00004310      4131d2         xor r10d, edx                           ; ../coreutils-8.31/lib/sha1.c:425
0x00004313      c1ca02         ror edx, 2
0x00004316      4401c8         add eax, r9d                            ; ../coreutils-8.31/lib/sha1.c:424
0x00004319      4589e9         mov r9d, r13d                           ; ../coreutils-8.31/lib/sha1.c:425
0x0000431c      4131d3         xor r11d, edx                           ; ../coreutils-8.31/lib/sha1.c:426
0x0000431f      4131d9         xor r9d, ebx                            ; ../coreutils-8.31/lib/sha1.c:425
0x00004322      44334c2414     xor r9d, dword [rsp + 0x14]
0x00004327      4131c3         xor r11d, eax                           ; ../coreutils-8.31/lib/sha1.c:426
0x0000432a      44334c2430     xor r9d, dword [rsp + 0x30]             ; ../coreutils-8.31/lib/sha1.c:425
0x0000432f      4189d7         mov r15d, edx                           ; ../coreutils-8.31/lib/sha1.c:427
0x00004332      41d1c1         rol r9d, 1                              ; ../coreutils-8.31/lib/sha1.c:425
0x00004335      478d8401d6c1.  lea r8d, [r9 + r8 - 0x359d3e2a]
0x0000433d      44894c2478     mov dword [rsp + 0x78], r9d
0x00004342      4501d0         add r8d, r10d
0x00004345      4189c2         mov r10d, eax
0x00004348      41c1c205       rol r10d, 5
0x0000434c      4501c2         add r10d, r8d
0x0000434f      448b44240c     mov r8d, dword [rsp + 0xc]              ; ../coreutils-8.31/lib/sha1.c:426
0x00004354      4531e0         xor r8d, r12d
0x00004357      4131e8         xor r8d, ebp
0x0000435a      8b6c2424       mov ebp, dword [rsp + 0x24]             ; ../coreutils-8.31/lib/sha1.c:427
0x0000435e      41d1c0         rol r8d, 1                              ; ../coreutils-8.31/lib/sha1.c:426
0x00004361      418dbc38d6c1.  lea edi, [r8 + rdi - 0x359d3e2a]
0x00004369      448944247c     mov dword [rsp + 0x7c], r8d
0x0000436e      4401df         add edi, r11d
0x00004371      4589d3         mov r11d, r10d
0x00004374      41c1c305       rol r11d, 5
0x00004378      4101fb         add r11d, edi
0x0000437b      8b7c2418       mov edi, dword [rsp + 0x18]             ; ../coreutils-8.31/lib/sha1.c:427
0x0000437f      c1c802         ror eax, 2                              ; ../coreutils-8.31/lib/sha1.c:426
0x00004382      31eb           xor ebx, ebp                            ; ../coreutils-8.31/lib/sha1.c:427
0x00004384      4131c7         xor r15d, eax
0x00004387      4531d7         xor r15d, r10d
0x0000438a      41c1ca02       ror r10d, 2
0x0000438e      31df           xor edi, ebx
0x00004390      337c2434       xor edi, dword [rsp + 0x34]
0x00004394      8b5c2428       mov ebx, dword [rsp + 0x28]             ; ../coreutils-8.31/lib/sha1.c:428
0x00004398      4589d5         mov r13d, r10d                          ; ../coreutils-8.31/lib/sha1.c:429
0x0000439b      d1c7           rol edi, 1                              ; ../coreutils-8.31/lib/sha1.c:427
0x0000439d      8db437d6c162.  lea esi, [rdi + rsi - 0x359d3e2a]
0x000043a4      89bc24800000.  mov dword [rsp + 0x80], edi
0x000043ab      4401fe         add esi, r15d
0x000043ae      4589df         mov r15d, r11d
0x000043b1      41c1c705       rol r15d, 5
0x000043b5      4101f7         add r15d, esi
0x000043b8      4489f6         mov esi, r14d                           ; ../coreutils-8.31/lib/sha1.c:428
0x000043bb      4189c6         mov r14d, eax
0x000043be      31de           xor esi, ebx
0x000043c0      3374241c       xor esi, dword [rsp + 0x1c]
0x000043c4      4531d6         xor r14d, r10d
0x000043c7      4531de         xor r14d, r11d
0x000043ca      41c1cb02       ror r11d, 2
0x000043ce      4531dd         xor r13d, r11d                          ; ../coreutils-8.31/lib/sha1.c:429
0x000043d1      4589dc         mov r12d, r11d                          ; ../coreutils-8.31/lib/sha1.c:430
0x000043d4      4531fd         xor r13d, r15d                          ; ../coreutils-8.31/lib/sha1.c:429
0x000043d7      4431ce         xor esi, r9d                            ; ../coreutils-8.31/lib/sha1.c:428
0x000043da      d1c6           rol esi, 1
0x000043dc      8d9416d6c162.  lea edx, [rsi + rdx - 0x359d3e2a]
0x000043e3      89b424840000.  mov dword [rsp + 0x84], esi
0x000043ea      4401f2         add edx, r14d
0x000043ed      4589fe         mov r14d, r15d
0x000043f0      41c1cf02       ror r15d, 2                             ; ../coreutils-8.31/lib/sha1.c:429
0x000043f4      41c1c605       rol r14d, 5                             ; ../coreutils-8.31/lib/sha1.c:428
0x000043f8      4101d6         add r14d, edx
0x000043fb      89ea           mov edx, ebp                            ; ../coreutils-8.31/lib/sha1.c:429
0x000043fd      8b6c242c       mov ebp, dword [rsp + 0x2c]
0x00004401      31ea           xor edx, ebp
0x00004403      33542420       xor edx, dword [rsp + 0x20]
0x00004407      4431c2         xor edx, r8d
0x0000440a      d1c2           rol edx, 1
0x0000440c      8d8402d6c162.  lea eax, [rdx + rax - 0x359d3e2a]
0x00004413      899424880000.  mov dword [rsp + 0x88], edx
0x0000441a      4401e8         add eax, r13d
0x0000441d      4589f5         mov r13d, r14d
0x00004420      41c1c505       rol r13d, 5
0x00004424      4101c5         add r13d, eax
0x00004427      8b442410       mov eax, dword [rsp + 0x10]             ; ../coreutils-8.31/lib/sha1.c:430
0x0000442b      31d8           xor eax, ebx
0x0000442d      33442430       xor eax, dword [rsp + 0x30]
0x00004431      8b5c2414       mov ebx, dword [rsp + 0x14]             ; ../coreutils-8.31/lib/sha1.c:431
0x00004435      4531fc         xor r12d, r15d                          ; ../coreutils-8.31/lib/sha1.c:430
0x00004438      4531f4         xor r12d, r14d
0x0000443b      41c1ce02       ror r14d, 2
0x0000443f      31eb           xor ebx, ebp                            ; ../coreutils-8.31/lib/sha1.c:431
0x00004441      335c2438       xor ebx, dword [rsp + 0x38]
0x00004445      4489f5         mov ebp, r14d                           ; ../coreutils-8.31/lib/sha1.c:432
0x00004448      31f8           xor eax, edi                            ; ../coreutils-8.31/lib/sha1.c:430
0x0000444a      d1c0           rol eax, 1
0x0000444c      468d9410d6c1.  lea r10d, [rax + r10 - 0x359d3e2a]
0x00004454      8984248c0000.  mov dword [rsp + 0x8c], eax
0x0000445b      31f3           xor ebx, esi                            ; ../coreutils-8.31/lib/sha1.c:431
0x0000445d      4501e2         add r10d, r12d
0x00004460      4589ec         mov r12d, r13d                          ; ../coreutils-8.31/lib/sha1.c:430
0x00004463      d1c3           rol ebx, 1                              ; ../coreutils-8.31/lib/sha1.c:431
0x00004465      41c1c405       rol r12d, 5                             ; ../coreutils-8.31/lib/sha1.c:430
0x00004469      468d9c1bd6c1.  lea r11d, [rbx + r11 - 0x359d3e2a]
0x00004471      899c24900000.  mov dword [rsp + 0x90], ebx             ; ../coreutils-8.31/lib/sha1.c:431
0x00004478      4501d4         add r12d, r10d                          ; ../coreutils-8.31/lib/sha1.c:430
0x0000447b      4589fa         mov r10d, r15d                          ; ../coreutils-8.31/lib/sha1.c:431
0x0000447e      4531f2         xor r10d, r14d
0x00004481      4531ea         xor r10d, r13d
0x00004484      41c1cd02       ror r13d, 2
0x00004488      4501da         add r10d, r11d
0x0000448b      4589e3         mov r11d, r12d
0x0000448e      4431ed         xor ebp, r13d                           ; ../coreutils-8.31/lib/sha1.c:432
0x00004491      41c1c305       rol r11d, 5                             ; ../coreutils-8.31/lib/sha1.c:431
0x00004495      4431e5         xor ebp, r12d                           ; ../coreutils-8.31/lib/sha1.c:432
0x00004498      41c1cc02       ror r12d, 2
0x0000449c      4501da         add r10d, r11d                          ; ../coreutils-8.31/lib/sha1.c:431
0x0000449f      448b5c2410     mov r11d, dword [rsp + 0x10]            ; ../coreutils-8.31/lib/sha1.c:432
0x000044a4      44335c240c     xor r11d, dword [rsp + 0xc]
0x000044a9      44335c2434     xor r11d, dword [rsp + 0x34]
0x000044ae      4131d3         xor r11d, edx
0x000044b1      41d1c3         rol r11d, 1
0x000044b4      478dbc3bd6c1.  lea r15d, [r11 + r15 - 0x359d3e2a]
0x000044bc      44899c249400.  mov dword [rsp + 0x94], r11d
0x000044c4      4401fd         add ebp, r15d
0x000044c7      4589d7         mov r15d, r10d
0x000044ca      41c1c705       rol r15d, 5
0x000044ce      4401fd         add ebp, r15d
0x000044d1      448b7c2414     mov r15d, dword [rsp + 0x14]            ; ../coreutils-8.31/lib/sha1.c:433
0x000044d6      44337c2418     xor r15d, dword [rsp + 0x18]
0x000044db      4531f9         xor r9d, r15d
0x000044de      4589ef         mov r15d, r13d
0x000044e1      4131c1         xor r9d, eax
0x000044e4      41d1c1         rol r9d, 1
0x000044e7      4531e7         xor r15d, r12d
0x000044ea      478db431d6c1.  lea r14d, [r9 + r14 - 0x359d3e2a]
0x000044f2      4531d7         xor r15d, r10d
0x000044f5      44898c249800.  mov dword [rsp + 0x98], r9d
0x000044fd      4501fe         add r14d, r15d
0x00004500      4189ef         mov r15d, ebp
0x00004503      41c1c705       rol r15d, 5
0x00004507      4501fe         add r14d, r15d
0x0000450a      4589d7         mov r15d, r10d
0x0000450d      448b54240c     mov r10d, dword [rsp + 0xc]             ; ../coreutils-8.31/lib/sha1.c:434
0x00004512      443354241c     xor r10d, dword [rsp + 0x1c]
0x00004517      41c1cf02       ror r15d, 2                             ; ../coreutils-8.31/lib/sha1.c:433
0x0000451b      4531d0         xor r8d, r10d                           ; ../coreutils-8.31/lib/sha1.c:434
0x0000451e      4431c3         xor ebx, r8d
0x00004521      4589e0         mov r8d, r12d
0x00004524      d1c3           rol ebx, 1
0x00004526      4531f8         xor r8d, r15d
0x00004529      468d942bd6c1.  lea r10d, [rbx + r13 - 0x359d3e2a]
0x00004531      448b6c2418     mov r13d, dword [rsp + 0x18]            ; ../coreutils-8.31/lib/sha1.c:435
0x00004536      44336c2420     xor r13d, dword [rsp + 0x20]
0x0000453b      4131e8         xor r8d, ebp                            ; ../coreutils-8.31/lib/sha1.c:434
0x0000453e      c1cd02         ror ebp, 2
0x00004541      899c249c0000.  mov dword [rsp + 0x9c], ebx
0x00004548      4501d0         add r8d, r10d
0x0000454b      4589f2         mov r10d, r14d
0x0000454e      41c1c205       rol r10d, 5
0x00004552      4431ef         xor edi, r13d                           ; ../coreutils-8.31/lib/sha1.c:435
0x00004555      4501d0         add r8d, r10d                           ; ../coreutils-8.31/lib/sha1.c:434
0x00004558      448b6c2430     mov r13d, dword [rsp + 0x30]            ; ../coreutils-8.31/lib/sha1.c:436
0x0000455d      4131fb         xor r11d, edi                           ; ../coreutils-8.31/lib/sha1.c:435
0x00004560      4489ff         mov edi, r15d
0x00004563      41d1c3         rol r11d, 1
0x00004566      31ef           xor edi, ebp
0x00004568      478d9423d6c1.  lea r10d, [r11 + r12 - 0x359d3e2a]
0x00004570      4431f7         xor edi, r14d
0x00004573      41c1ce02       ror r14d, 2
0x00004577      44899c24a000.  mov dword [rsp + 0xa0], r11d
0x0000457f      4401d7         add edi, r10d
0x00004582      4589c2         mov r10d, r8d
0x00004585      41c1c205       rol r10d, 5
0x00004589      4401d7         add edi, r10d
0x0000458c      448b54241c     mov r10d, dword [rsp + 0x1c]            ; ../coreutils-8.31/lib/sha1.c:436
0x00004591      4531ea         xor r10d, r13d
0x00004594      4431d6         xor esi, r10d
0x00004597      4131f1         xor r9d, esi
0x0000459a      89ee           mov esi, ebp
0x0000459c      41d1c1         rol r9d, 1
0x0000459f      4431f6         xor esi, r14d
0x000045a2      44898c24a400.  mov dword [rsp + 0xa4], r9d
0x000045aa      478d8c39d6c1.  lea r9d, [r9 + r15 - 0x359d3e2a]
0x000045b2      4431c6         xor esi, r8d
0x000045b5      4189ff         mov r15d, edi
0x000045b8      41c1c802       ror r8d, 2
0x000045bc      4401ce         add esi, r9d
0x000045bf      448b4c2420     mov r9d, dword [rsp + 0x20]             ; ../coreutils-8.31/lib/sha1.c:437
0x000045c4      44334c2438     xor r9d, dword [rsp + 0x38]
0x000045c9      41c1c705       rol r15d, 5                             ; ../coreutils-8.31/lib/sha1.c:436
0x000045cd      4401fe         add esi, r15d
0x000045d0      4431ca         xor edx, r9d                            ; ../coreutils-8.31/lib/sha1.c:437
0x000045d3      31d3           xor ebx, edx
0x000045d5      4489f2         mov edx, r14d
0x000045d8      d1c3           rol ebx, 1
0x000045da      4431c2         xor edx, r8d
0x000045dd      448d8c2bd6c1.  lea r9d, [rbx + rbp - 0x359d3e2a]
0x000045e5      31fa           xor edx, edi
0x000045e7      899c24a80000.  mov dword [rsp + 0xa8], ebx
0x000045ee      8b5c2454       mov ebx, dword [rsp + 0x54]             ; ../coreutils-8.31/lib/sha1.c:440
0x000045f2      c1cf02         ror edi, 2                              ; ../coreutils-8.31/lib/sha1.c:437
0x000045f5      017c244c       add dword [rsp + 0x4c], edi             ; ../coreutils-8.31/lib/sha1.c:443
0x000045f9      4401ca         add edx, r9d
0x000045fc      4189f1         mov r9d, esi                            ; ../coreutils-8.31/lib/sha1.c:437
0x000045ff      41c1c105       rol r9d, 5
0x00004603      4401ca         add edx, r9d
0x00004606      448b4c2434     mov r9d, dword [rsp + 0x34]             ; ../coreutils-8.31/lib/sha1.c:438
0x0000460b      01542444       add dword [rsp + 0x44], edx             ; ../coreutils-8.31/lib/sha1.c:441
0x0000460f      4531e9         xor r9d, r13d                           ; ../coreutils-8.31/lib/sha1.c:438
0x00004612      4431c8         xor eax, r9d
0x00004615      4431d8         xor eax, r11d
0x00004618      d1c0           rol eax, 1
0x0000461a      898424ac0000.  mov dword [rsp + 0xac], eax
0x00004621      8d8403d6c162.  lea eax, [rbx + rax - 0x359d3e2a]       ; ../coreutils-8.31/lib/sha1.c:440
0x00004628      488b5c2460     mov rbx, qword [rsp + 0x60]
0x0000462d      4101c6         add r14d, eax
0x00004630      4489c0         mov eax, r8d                            ; ../coreutils-8.31/lib/sha1.c:438
0x00004633      31f8           xor eax, edi
0x00004635      8b7c244c       mov edi, dword [rsp + 0x4c]             ; ../coreutils-8.31/lib/sha1.c:443
0x00004639      31f0           xor eax, esi                            ; ../coreutils-8.31/lib/sha1.c:438
0x0000463b      c1ce02         ror esi, 2
0x0000463e      01742448       add dword [rsp + 0x48], esi             ; ../coreutils-8.31/lib/sha1.c:442
0x00004642      4101c6         add r14d, eax                           ; ../coreutils-8.31/lib/sha1.c:440
0x00004645      8b742448       mov esi, dword [rsp + 0x48]             ; ../coreutils-8.31/lib/sha1.c:442
0x00004649      89d0           mov eax, edx                            ; ../coreutils-8.31/lib/sha1.c:438
0x0000464b      8b542444       mov edx, dword [rsp + 0x44]             ; ../coreutils-8.31/lib/sha1.c:441
0x0000464f      c1c005         rol eax, 5                              ; ../coreutils-8.31/lib/sha1.c:438
0x00004652      897b0c         mov dword [rbx + 0xc], edi              ; ../coreutils-8.31/lib/sha1.c:443
0x00004655      4401f0         add eax, r14d                           ; ../coreutils-8.31/lib/sha1.c:440
0x00004658      89442454       mov dword [rsp + 0x54], eax
0x0000465c      8903           mov dword [rbx], eax
0x0000465e      895304         mov dword [rbx + 4], edx                ; ../coreutils-8.31/lib/sha1.c:441
0x00004661      897308         mov dword [rbx + 8], esi                ; ../coreutils-8.31/lib/sha1.c:442
0x00004664      4401442450     add dword [rsp + 0x50], r8d             ; ../coreutils-8.31/lib/sha1.c:444
0x00004669      48394c2458     cmp qword [rsp + 0x58], rcx             ; ../coreutils-8.31/lib/sha1.c:349
0x0000466e      448b442450     mov r8d, dword [rsp + 0x50]
0x00004673      44894310       mov dword [rbx + 0x10], r8d
0x00004677      0f8753eeffff   ja 0x34d0
0x0000467d      488b8424b800.  mov rax, qword [rsp + 0xb8]
0x00004685      644833042528.  xor rax, qword fs:[0x28]
0x0000468e      7512           jne 0x46a2
0x00004690      4881c4c80000.  add rsp, 0xc8
0x00004697      5b             pop rbx
0x00004698      5d             pop rbp
0x00004699      415c           pop r12
0x0000469b      415d           pop r13
0x0000469d      415e           pop r14
0x0000469f      415f           pop r15
0x000046a1      c3             ret
0x000046a2      e8e9cfffff     call sym.imp.__stack_chk_fail
0x000046a7      660f1f840000.  nop word [rax + rax]
;-- sha1_finish_ctx:
0x000046b0      55             push rbp
0x000046b1      53             push rbx
0x000046b2      4889f5         mov rbp, rsi
0x000046b5      4889fb         mov rbx, rdi
0x000046b8      4883ec08       sub rsp, 8
0x000046bc      8b471c         mov eax, dword [rdi + 0x1c]
0x000046bf      8b5318         mov edx, dword [rbx + 0x18]
0x000046c2      83f838         cmp eax, 0x38
0x000046c5      89c1           mov ecx, eax
0x000046c7      4d19c0         sbb r8, r8
0x000046ca      4983e0c0       and r8, 0xffffffffffffffc0
0x000046ce      4983e880       sub r8, 0xffffffffffffff80
0x000046d2      83f838         cmp eax, 0x38
0x000046d5      4819f6         sbb rsi, rsi
0x000046d8      4883e6f0       and rsi, 0xfffffffffffffff0
0x000046dc      4883c61f       add rsi, 0x1f
0x000046e0      83f838         cmp eax, 0x38
0x000046e3      4819ff         sbb rdi, rdi
0x000046e6      4531c9         xor r9d, r9d
0x000046e9      4883e7f0       and rdi, 0xfffffffffffffff0
0x000046ed      4883c71e       add rdi, 0x1e
0x000046f1      034b14         add ecx, dword [rbx + 0x14]
0x000046f4      410f92c1       setb r9b
0x000046f8      894b14         mov dword [rbx + 0x14], ecx             ; ../coreutils-8.31/lib/sha1.c:-16
0x000046fb      4585c9         test r9d, r9d                           ; ../coreutils-8.31/lib/sha1.c:-17
0x000046fe      7406           je 0x4706
0x00004700      83c201         add edx, 1
0x00004703      895318         mov dword [rbx + 0x18], edx             ; byteswap.h:-214
0x00004706      4189c9         mov r9d, ecx                            ; ../coreutils-8.31/lib/sha1.c:-278
0x00004709      c1e203         shl edx, 3
0x0000470c      c1e103         shl ecx, 3
0x0000470f      41c1e91d       shr r9d, 0x1d
0x00004713      0fc9           bswap ecx
0x00004715      4409ca         or edx, r9d                             ; ../coreutils-8.31/lib/sha1.c:-486
0x00004718      4c8d4b20       lea r9, [rbx + 0x20]
0x0000471c      0fca           bswap edx
0x0000471e      8954bb20       mov dword [rbx + rdi*4 + 0x20], edx
0x00004722      4c89c7         mov rdi, r8
0x00004725      894cb320       mov dword [rbx + rsi*4 + 0x20], ecx
0x00004729      4829c7         sub rdi, rax
0x0000472c      498d1401       lea rdx, [r9 + rax]
0x00004730      488d35093e00.  lea rsi, obj.fillbuf                    ; 0x8540
0x00004737      488d4ff8       lea rcx, [rdi - 8]
0x0000473b      4883f908       cmp rcx, 8
0x0000473f      7327           jae 0x4768
0x00004741      f6c104         test cl, 4
0x00004744      7572           jne 0x47b8
0x00004746      4885c9         test rcx, rcx
0x00004749      7449           je 0x4794
0x0000474b      0fb605ee3d00.  movzx eax, byte [obj.fillbuf]           ; [0x8540:1]=128
0x00004752      f6c102         test cl, 2
0x00004755      8802           mov byte [rdx], al
0x00004757      743b           je 0x4794
0x00004759      0fb7440efe     movzx eax, word [rsi + rcx - 2]
0x0000475e      6689440afe     mov word [rdx + rcx - 2], ax
0x00004763      eb2f           jmp 0x4794
0x00004765      0f1f00         nop dword [rax]
0x00004768      488b05d13d00.  mov rax, qword [obj.fillbuf]            ; ../coreutils-8.31/lib/sha1.c:-414 ; [0x8540:8]=128
0x0000476f      488d7a08       lea rdi, [rdx + 8]
0x00004773      4883e7f8       and rdi, 0xfffffffffffffff8             ; ../coreutils-8.31/lib/sha1.c:-389
0x00004777      488902         mov qword [rdx], rax
0x0000477a      488b440ef8     mov rax, qword [rsi + rcx - 8]
0x0000477f      4889440af8     mov qword [rdx + rcx - 8], rax
0x00004784      4829fa         sub rdx, rdi
0x00004787      4801d1         add rcx, rdx
0x0000478a      4829d6         sub rsi, rdx
0x0000478d      48c1e903       shr rcx, 3
0x00004791      f348a5         rep movsq qword [rdi], qword ptr [rsi]
0x00004794      4889da         mov rdx, rbx
0x00004797      4c89c6         mov rsi, r8
0x0000479a      4c89cf         mov rdi, r9
0x0000479d      e88eecffff     call sym.sha1_process_block
0x000047a2      4883c408       add rsp, 8
0x000047a6      4889ee         mov rsi, rbp
0x000047a9      4889df         mov rdi, rbx                            ; string_fortified.h:-614
0x000047ac      5b             pop rbx
0x000047ad      5d             pop rbp                                 ; ../coreutils-8.31/lib/sha1.c:-382
0x000047ae      e94decffff     jmp sym.sha1_read_ctx
0x000047b3      0f1f440000     nop dword [rax + rax]
0x000047b8      8b05823d0000   mov eax, dword [obj.fillbuf]            ; ../coreutils-8.31/lib/sha1.c:-381 ; [0x8540:4]=128
0x000047be      8902           mov dword [rdx], eax
0x000047c0      8b440efc       mov eax, dword [rsi + rcx - 4]
0x000047c4      89440afc       mov dword [rdx + rcx - 4], eax
0x000047c8      ebca           jmp 0x4794
0x000047ca      660f1f440000   nop word [rax + rax]
;-- sha1_process_bytes:
0x000047d0      4157           push r15
0x000047d2      4156           push r14
0x000047d4      4155           push r13
0x000047d6      4154           push r12
0x000047d8      4989d5         mov r13, rdx
0x000047db      55             push rbp                                ; ../coreutils-8.31/lib/sha1.c:-382
0x000047dc      53             push rbx
0x000047dd      4989f4         mov r12, rsi
0x000047e0      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/sha1.c:-384
0x000047e3      4883ec08       sub rsp, 8
0x000047e7      8b421c         mov eax, dword [rdx + 0x1c]
0x000047ea      85c0           test eax, eax
0x000047ec      0f852e010000   jne 0x4920
0x000047f2      4983fc3f       cmp r12, 0x3f
0x000047f6      0f8608010000   jbe 0x4904
0x000047fc      f6c303         test bl, 3                              ; ../coreutils-8.31/lib/sha1.c:-364
0x000047ff      0f84e3000000   je 0x48e8
0x00004805      4983fc40       cmp r12, 0x40                           ; segment.PHDR
0x00004809      498d6d20       lea rbp, [r13 + 0x20]
0x0000480d      7461           je 0x4870
0x0000480f      4d8d7c24bf     lea r15, [r12 - 0x41]
0x00004814      49c1ef06       shr r15, 6
0x00004818      4d8d7701       lea r14, [r15 + 1]
0x0000481c      49c1e606       shl r14, 6
0x00004820      4901de         add r14, rbx
0x00004823      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/sha1.c:-363
0x00004828      f30f6f03       movdqu xmm0, xmmword [rbx]
0x0000482c      4c89ea         mov rdx, r13                            ; ../coreutils-8.31/lib/sha1.c:-360
0x0000482f      be40000000     mov esi, 0x40                           ; segment.PHDR
0x00004834      4889ef         mov rdi, rbp
0x00004837      4883c340       add rbx, 0x40                           ; segment.PHDR
0x0000483b      0f114500       movups xmmword [rbp], xmm0
0x0000483f      f30f6f43d0     movdqu xmm0, xmmword [rbx - 0x30]
0x00004844      0f114510       movups xmmword [rbp + 0x10], xmm0
0x00004848      f30f6f43e0     movdqu xmm0, xmmword [rbx - 0x20]
0x0000484d      0f114520       movups xmmword [rbp + 0x20], xmm0
0x00004851      f30f6f43f0     movdqu xmm0, xmmword [rbx - 0x10]
0x00004856      0f114530       movups xmmword [rbp + 0x30], xmm0
0x0000485a      e8d1ebffff     call sym.sha1_process_block
0x0000485f      4c39f3         cmp rbx, r14
0x00004862      75c4           jne 0x4828
0x00004864      49f7df         neg r15
0x00004867      49c1e706       shl r15, 6
0x0000486b      4f8d643cc0     lea r12, [r12 + r15 - 0x40]
0x00004870      418b7d1c       mov edi, dword [r13 + 0x1c]
0x00004874      4183fc08       cmp r12d, 8
0x00004878      4489e0         mov eax, r12d
0x0000487b      488d4c3d00     lea rcx, [rbp + rdi]
0x00004880      0f83da000000   jae 0x4960                              ; ../coreutils-8.31/lib/sha1.c:-375
0x00004886      41f6c404       test r12b, 4
0x0000488a      0f85f1010000   jne 0x4a81
0x00004890      4585e4         test r12d, r12d
0x00004893      740d           je 0x48a2
0x00004895      0fb613         movzx edx, byte [rbx]
0x00004898      a802           test al, 2
0x0000489a      8811           mov byte [rcx], dl
0x0000489c      0f85f3010000   jne 0x4a95
0x000048a2      4901fc         add r12, rdi
0x000048a5      4983fc3f       cmp r12, 0x3f
0x000048a9      7623           jbe 0x48ce
0x000048ab      4c89ea         mov rdx, r13
0x000048ae      be40000000     mov esi, 0x40                           ; segment.PHDR
0x000048b3      4889ef         mov rdi, rbp
0x000048b6      e875ebffff     call sym.sha1_process_block             ; ../coreutils-8.31/lib/sha1.c:-411
0x000048bb      4983ec40       sub r12, 0x40                           ; segment.PHDR
0x000048bf      498d7560       lea rsi, [r13 + 0x60]
0x000048c3      4889ef         mov rdi, rbp
0x000048c6      4c89e2         mov rdx, r12
0x000048c9      e8a2ceffff     call sym.imp.memcpy
0x000048ce      4589651c       mov dword [r13 + 0x1c], r12d
0x000048d2      4883c408       add rsp, 8
0x000048d6      5b             pop rbx
0x000048d7      5d             pop rbp
0x000048d8      415c           pop r12                                 ; ../coreutils-8.31/lib/sha1.c:-393
0x000048da      415d           pop r13
0x000048dc      415e           pop r14
0x000048de      415f           pop r15
0x000048e0      c3             ret
0x000048e1      0f1f80000000.  nop dword [rax]                         ; string_fortified.h:-614
0x000048e8      4c89e5         mov rbp, r12
0x000048eb      4889df         mov rdi, rbx
0x000048ee      4c89ea         mov rdx, r13
0x000048f1      4883e5c0       and rbp, 0xffffffffffffffc0
0x000048f5      4183e43f       and r12d, 0x3f
0x000048f9      4889ee         mov rsi, rbp
0x000048fc      4801eb         add rbx, rbp
0x000048ff      e82cebffff     call sym.sha1_process_block
0x00004904      4d85e4         test r12, r12
0x00004907      0f856b010000   jne 0x4a78
0x0000490d      4883c408       add rsp, 8
0x00004911      5b             pop rbx
0x00004912      5d             pop rbp
0x00004913      415c           pop r12
0x00004915      415d           pop r13
0x00004917      415e           pop r14
0x00004919      415f           pop r15
0x0000491b      c3             ret
0x0000491c      0f1f4000       nop dword [rax]
0x00004920      89c5           mov ebp, eax
0x00004922      ba80000000     mov edx, 0x80
0x00004927      4d8d7d20       lea r15, [r13 + 0x20]
0x0000492b      4829ea         sub rdx, rbp
0x0000492e      4839f2         cmp rdx, rsi
0x00004931      498d3c2f       lea rdi, [r15 + rbp]                    ; ../coreutils-8.31/lib/sha1.c:-404
0x00004935      480f47d6       cmova rdx, rsi
0x00004939      4889de         mov rsi, rbx
0x0000493c      4989d6         mov r14, rdx
0x0000493f      e82cceffff     call sym.imp.memcpy                     ; ../coreutils-8.31/lib/sha1.c:-402
0x00004944      418b751c       mov esi, dword [r13 + 0x1c]
0x00004948      4401f6         add esi, r14d
0x0000494b      83fe40         cmp esi, 0x40                           ; segment.PHDR
0x0000494e      4189751c       mov dword [r13 + 0x1c], esi             ; ../coreutils-8.31/lib/sha1.c:-399
0x00004952      775c           ja 0x49b0
0x00004954      4c01f3         add rbx, r14                            ; string_fortified.h:-614
0x00004957      4d29f4         sub r12, r14                            ; ../coreutils-8.31/lib/sha1.c:-402
0x0000495a      e993feffff     jmp 0x47f2
0x0000495f      90             nop
0x00004960      488b03         mov rax, qword [rbx]
0x00004963      4489e2         mov edx, r12d
0x00004966      488901         mov qword [rcx], rax
0x00004969      488b4413f8     mov rax, qword [rbx + rdx - 8]
0x0000496e      48894411f8     mov qword [rcx + rdx - 8], rax
0x00004973      488d5108       lea rdx, [rcx + 8]
0x00004977      4889c8         mov rax, rcx
0x0000497a      4883e2f8       and rdx, 0xfffffffffffffff8
0x0000497e      4829d0         sub rax, rdx
0x00004981      4829c3         sub rbx, rax
0x00004984      4401e0         add eax, r12d
0x00004987      83e0f8         and eax, 0xfffffff8                     ; 4294967288
0x0000498a      83f808         cmp eax, 8
0x0000498d      0f820fffffff   jb 0x48a2
0x00004993      83e0f8         and eax, 0xfffffff8                     ; 4294967288
0x00004996      31c9           xor ecx, ecx
0x00004998      89ce           mov esi, ecx
0x0000499a      83c108         add ecx, 8
0x0000499d      4c8b0433       mov r8, qword [rbx + rsi]
0x000049a1      39c1           cmp ecx, eax
0x000049a3      4c890432       mov qword [rdx + rsi], r8
0x000049a7      72ef           jb 0x4998
0x000049a9      e9f4feffff     jmp 0x48a2
0x000049ae      6690           nop
0x000049b0      83e6c0         and esi, 0xffffffc0                     ; 4294967232
0x000049b3      4c89ea         mov rdx, r13
0x000049b6      4c89ff         mov rdi, r15
0x000049b9      e872eaffff     call sym.sha1_process_block
0x000049be      418b4d1c       mov ecx, dword [r13 + 0x1c]
0x000049c2      4a8d443500     lea rax, [rbp + r14]
0x000049c7      4883e0c0       and rax, 0xffffffffffffffc0
0x000049cb      89ca           mov edx, ecx
0x000049cd      4c01f8         add rax, r15
0x000049d0      83e23f         and edx, 0x3f
0x000049d3      83fa08         cmp edx, 8
0x000049d6      4189551c       mov dword [r13 + 0x1c], edx
0x000049da      7334           jae 0x4a10
0x000049dc      f6c104         test cl, 4
0x000049df      757e           jne 0x4a5f
0x000049e1      85d2           test edx, edx
0x000049e3      0f846bffffff   je 0x4954
0x000049e9      0fb630         movzx esi, byte [rax]
0x000049ec      83e102         and ecx, 2
0x000049ef      41887520       mov byte [r13 + 0x20], sil
0x000049f3      0f845bffffff   je 0x4954
0x000049f9      0fb74410fe     movzx eax, word [rax + rdx - 2]
0x000049fe      6641894417fe   mov word [r15 + rdx - 2], ax
0x00004a04      e94bffffff     jmp 0x4954
0x00004a09      0f1f80000000.  nop dword [rax]
0x00004a10      488b08         mov rcx, qword [rax]
0x00004a13      49894d20       mov qword [r13 + 0x20], rcx
0x00004a17      89d1           mov ecx, edx
0x00004a19      488b7408f8     mov rsi, qword [rax + rcx - 8]
0x00004a1e      4989740ff8     mov qword [r15 + rcx - 8], rsi
0x00004a23      498d4d28       lea rcx, [r13 + 0x28]
0x00004a27      4883e1f8       and rcx, 0xfffffffffffffff8
0x00004a2b      4929cf         sub r15, rcx
0x00004a2e      4c29f8         sub rax, r15
0x00004a31      4101d7         add r15d, edx                           ; ../coreutils-8.31/lib/sha1.c:-432
0x00004a34      4183e7f8       and r15d, 0xfffffff8                    ; 4294967288
0x00004a38      4183ff08       cmp r15d, 8
0x00004a3c      0f8212ffffff   jb 0x4954
0x00004a42      4183e7f8       and r15d, 0xfffffff8                    ; 4294967288
0x00004a46      31d2           xor edx, edx
0x00004a48      89d6           mov esi, edx
0x00004a4a      83c208         add edx, 8
0x00004a4d      488b3c30       mov rdi, qword [rax + rsi]
0x00004a51      4439fa         cmp edx, r15d
0x00004a54      48893c31       mov qword [rcx + rsi], rdi
0x00004a58      72ee           jb 0x4a48
0x00004a5a      e9f5feffff     jmp 0x4954                              ; ../coreutils-8.31/lib/sha1.c:-425
0x00004a5f      8b08           mov ecx, dword [rax]
0x00004a61      41894d20       mov dword [r13 + 0x20], ecx
0x00004a65      8b4410fc       mov eax, dword [rax + rdx - 4]
0x00004a69      41894417fc     mov dword [r15 + rdx - 4], eax
0x00004a6e      e9e1feffff     jmp 0x4954
0x00004a73      0f1f440000     nop dword [rax + rax]
0x00004a78      498d6d20       lea rbp, [r13 + 0x20]
0x00004a7c      e9effdffff     jmp 0x4870                              ; ../coreutils-8.31/lib/sha1.c:-581
0x00004a81      8b13           mov edx, dword [rbx]
0x00004a83      8911           mov dword [rcx], edx
0x00004a85      4489e2         mov edx, r12d
0x00004a88      8b4413fc       mov eax, dword [rbx + rdx - 4]
0x00004a8c      894411fc       mov dword [rcx + rdx - 4], eax
0x00004a90      e90dfeffff     jmp 0x48a2
0x00004a95      4489e2         mov edx, r12d
0x00004a98      0fb74413fe     movzx eax, word [rbx + rdx - 2]
0x00004a9d      66894411fe     mov word [rcx + rdx - 2], ax
0x00004aa2      e9fbfdffff     jmp 0x48a2
0x00004aa7      660f1f840000.  nop word [rax + rax]
;-- sha1_buffer:
0x00004ab0      55             push rbp
0x00004ab1      53             push rbx
0x00004ab2      4889d5         mov rbp, rdx
0x00004ab5      4881ecb80000.  sub rsp, 0xb8
0x00004abc      64488b042528.  mov rax, qword fs:[0x28]
0x00004ac5      48898424a800.  mov qword [rsp + 0xa8], rax
0x00004acd      31c0           xor eax, eax
0x00004acf      48b801234567.  movabs rax, 0xefcdab8967452301
0x00004ad9      4889e3         mov rbx, rsp
0x00004adc      48c744241800.  mov qword [rsp + 0x18], 0
0x00004ae5      48890424       mov qword [rsp], rax
0x00004ae9      48b8fedcba98.  movabs rax, 0x1032547698badcfe
0x00004af3      4889da         mov rdx, rbx
0x00004af6      4889442408     mov qword [rsp + 8], rax
0x00004afb      b8f0e1d2c3     mov eax, 0xc3d2e1f0
0x00004b00      4889442410     mov qword [rsp + 0x10], rax
0x00004b05      e8c6fcffff     call sym.sha1_process_bytes
0x00004b0a      4889ee         mov rsi, rbp
0x00004b0d      4889df         mov rdi, rbx
0x00004b10      e89bfbffff     call sym.sha1_finish_ctx                ; ../coreutils-8.31/lib/sha1.c:-578
0x00004b15      488b8c24a800.  mov rcx, qword [rsp + 0xa8]
0x00004b1d      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004b26      750a           jne 0x4b32
0x00004b28      4881c4b80000.  add rsp, 0xb8
0x00004b2f      5b             pop rbx                                 ; ../coreutils-8.31/lib/sha1.c:-609
0x00004b30      5d             pop rbp
0x00004b31      c3             ret
0x00004b32      e859cbffff     call sym.imp.__stack_chk_fail
0x00004b37      660f1f840000.  nop word [rax + rax]
;-- sha1_stream:
0x00004b40      4157           push r15
0x00004b42      4156           push r14
0x00004b44      4989f6         mov r14, rsi
0x00004b47      4155           push r13
0x00004b49      4154           push r12
0x00004b4b      55             push rbp                                ; stdio2.h:-436
0x00004b4c      53             push rbx
0x00004b4d      4889fd         mov rbp, rdi
0x00004b50      bf48800000     mov edi, 0x8048
0x00004b55      4881ecb80000.  sub rsp, 0xb8                           ; ../coreutils-8.31/lib/sha1.c:-644
0x00004b5c      64488b042528.  mov rax, qword fs:[0x28]
0x00004b65      48898424a800.  mov qword [rsp + 0xa8], rax
0x00004b6d      31c0           xor eax, eax
0x00004b6f      e81cccffff     call sym.imp.malloc
0x00004b74      4989c4         mov r12, rax                            ; ../coreutils-8.31/lib/sha1.c:-612
0x00004b77      b801000000     mov eax, 1
0x00004b7c      4d85e4         test r12, r12
0x00004b7f      0f848e000000   je 0x4c13                               ; ../coreutils-8.31/lib/sha1.c:-611
0x00004b85      48b801234567.  movabs rax, 0xefcdab8967452301
0x00004b8f      48c744241800.  mov qword [rsp + 0x18], 0
0x00004b98      41bd00800000   mov r13d, 0x8000
0x00004b9e      48890424       mov qword [rsp], rax
0x00004ba2      48b8fedcba98.  movabs rax, 0x1032547698badcfe
0x00004bac      4989e7         mov r15, rsp
0x00004baf      4889442408     mov qword [rsp + 8], rax
0x00004bb4      b8f0e1d2c3     mov eax, 0xc3d2e1f0
0x00004bb9      4889442410     mov qword [rsp + 0x10], rax
0x00004bbe      31db           xor ebx, ebx
0x00004bc0      eb2e           jmp 0x4bf0
0x00004bc2      660f1f440000   nop word [rax + rax]
0x00004bc8      498d3c1c       lea rdi, [r12 + rbx]
0x00004bcc      4c89ea         mov rdx, r13
0x00004bcf      4889e9         mov rcx, rbp
0x00004bd2      4829da         sub rdx, rbx
0x00004bd5      be01000000     mov esi, 1
0x00004bda      e841caffff     call sym.imp.fread_unlocked
0x00004bdf      4801c3         add rbx, rax
0x00004be2      4881fb008000.  cmp rbx, 0x8000
0x00004be9      7465           je 0x4c50
0x00004beb      4885c0         test rax, rax
0x00004bee      7478           je 0x4c68
0x00004bf0      f6450010       test byte [rbp], 0x10
0x00004bf4      74d2           je 0x4bc8
0x00004bf6      4885db         test rbx, rbx
0x00004bf9      4889e5         mov rbp, rsp
0x00004bfc      7542           jne 0x4c40
0x00004bfe      4c89f6         mov rsi, r14
0x00004c01      4889ef         mov rdi, rbp
0x00004c04      e8a7faffff     call sym.sha1_finish_ctx
0x00004c09      4c89e7         mov rdi, r12
0x00004c0c      e89fc9ffff     call sym.imp.free
0x00004c11      31c0           xor eax, eax
0x00004c13      488b8c24a800.  mov rcx, qword [rsp + 0xa8]
0x00004c1b      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004c24      7557           jne 0x4c7d
0x00004c26      4881c4b80000.  add rsp, 0xb8
0x00004c2d      5b             pop rbx
0x00004c2e      5d             pop rbp
0x00004c2f      415c           pop r12
0x00004c31      415d           pop r13
0x00004c33      415e           pop r14
0x00004c35      415f           pop r15
0x00004c37      c3             ret
0x00004c38      0f1f84000000.  nop dword [rax + rax]
0x00004c40      4889ea         mov rdx, rbp
0x00004c43      4889de         mov rsi, rbx
0x00004c46      4c89e7         mov rdi, r12
0x00004c49      e882fbffff     call sym.sha1_process_bytes
0x00004c4e      ebae           jmp 0x4bfe
0x00004c50      4c89fa         mov rdx, r15
0x00004c53      be00800000     mov esi, 0x8000
0x00004c58      4c89e7         mov rdi, r12
0x00004c5b      e8d0e7ffff     call sym.sha1_process_block
0x00004c60      e959ffffff     jmp 0x4bbe
0x00004c65      0f1f00         nop dword [rax]
0x00004c68      f6450020       test byte [rbp], 0x20
0x00004c6c      7488           je 0x4bf6
0x00004c6e      4c89e7         mov rdi, r12
0x00004c71      e83ac9ffff     call sym.imp.free
0x00004c76      b801000000     mov eax, 1
0x00004c7b      eb96           jmp 0x4c13
0x00004c7d      e80ecaffff     call sym.imp.__stack_chk_fail
0x00004c82      662e0f1f8400.  nop word cs:[rax + rax]
0x00004c8c      0f1f4000       nop dword [rax]
;-- fdadvise:
0x00004c90      e98bcaffff     jmp sym.imp.posix_fadvise               ; ../coreutils-8.31/lib/fadvise.c:32
0x00004c95      90             nop
0x00004c96      662e0f1f8400.  nop word cs:[rax + rax]
;-- fadvise:
0x00004ca0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fadvise.c:40
0x00004ca3      741b           je 0x4cc0
0x00004ca5      53             push rbx
0x00004ca6      89f3           mov ebx, esi
0x00004ca8      e8d3caffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fadvise.c:42
0x00004cad      89d9           mov ecx, ebx                            ; ../coreutils-8.31/lib/fadvise.c:34
0x00004caf      31d2           xor edx, edx
0x00004cb1      31f6           xor esi, esi
0x00004cb3      5b             pop rbx                                 ; ../coreutils-8.31/lib/fadvise.c:43
0x00004cb4      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fadvise.c:34
0x00004cb6      e965caffff     jmp sym.imp.posix_fadvise
0x00004cbb      0f1f440000     nop dword [rax + rax]
0x00004cc0      f3c3           ret
0x00004cc2      662e0f1f8400.  nop word cs:[rax + rax]
0x00004ccc      0f1f4000       nop dword [rax]
;-- fopen_safer:
0x00004cd0      4154           push r12                                ; ../coreutils-8.31/lib/fopen-safer.c:32
0x00004cd2      55             push rbp
0x00004cd3      4889f5         mov rbp, rsi
0x00004cd6      53             push rbx
0x00004cd7      e874cbffff     call sym.imp.fopen                      ; ../coreutils-8.31/lib/fopen-safer.c:33
0x00004cdc      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fopen-safer.c:35
0x00004cdf      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:33
0x00004ce2      740d           je 0x4cf1                               ; ../coreutils-8.31/lib/fopen-safer.c:35
0x00004ce4      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:37
0x00004ce7      e894caffff     call sym.imp.fileno
0x00004cec      83f802         cmp eax, 2                              ; ../coreutils-8.31/lib/fopen-safer.c:39
0x00004cef      760f           jbe 0x4d00
0x00004cf1      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:63
0x00004cf4      5b             pop rbx
0x00004cf5      5d             pop rbp
0x00004cf6      415c           pop r12
0x00004cf8      c3             ret
0x00004cf9      0f1f80000000.  nop dword [rax]
0x00004d00      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fopen-safer.c:41
0x00004d02      e8991d0000     call sym.dup_safer
0x00004d07      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:43
0x00004d09      4189c4         mov r12d, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:41
0x00004d0c      783a           js 0x4d48                               ; ../coreutils-8.31/lib/fopen-safer.c:43
0x00004d0e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:51
0x00004d11      e84a260000     call sym.rpl_fclose
0x00004d16      85c0           test eax, eax
0x00004d18      7513           jne 0x4d2d
0x00004d1a      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fopen-safer.c:52
0x00004d1d      4489e7         mov edi, r12d
0x00004d20      e8cbcaffff     call sym.imp.fdopen
0x00004d25      4885c0         test rax, rax
0x00004d28      4889c3         mov rbx, rax
0x00004d2b      75c4           jne 0x4cf1
0x00004d2d      e89ec8ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:54
0x00004d32      8b28           mov ebp, dword [rax]
0x00004d34      4889c3         mov rbx, rax
0x00004d37      4489e7         mov edi, r12d                           ; ../coreutils-8.31/lib/fopen-safer.c:55
0x00004d3a      e8d1c9ffff     call sym.imp.close
0x00004d3f      892b           mov dword [rbx], ebp                    ; ../coreutils-8.31/lib/fopen-safer.c:56
0x00004d41      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:57
0x00004d43      ebac           jmp 0x4cf1
0x00004d45      0f1f00         nop dword [rax]
0x00004d48      e883c8ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:45
0x00004d4d      448b20         mov r12d, dword [rax]
0x00004d50      4889c5         mov rbp, rax
0x00004d53      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:46
0x00004d56      e805260000     call sym.rpl_fclose
0x00004d5b      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:48
0x00004d5d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fopen-safer.c:47
0x00004d61      eb8e           jmp 0x4cf1                              ; ../coreutils-8.31/lib/fopen-safer.c:48
0x00004d63      662e0f1f8400.  nop word cs:[rax + rax]
0x00004d6d      0f1f00         nop dword [rax]
;-- set_program_name:
0x00004d70      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00004d73      53             push rbx
0x00004d74      7477           je 0x4ded                               ; ../coreutils-8.31/lib/progname.c:51
0x00004d76      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x00004d7b      4889fb         mov rbx, rdi
0x00004d7e      e85dc9ffff     call sym.imp.strrchr
0x00004d83      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00004d86      7455           je 0x4ddd
0x00004d88      4c8d4001       lea r8, [rax + 1]
0x00004d8c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x00004d8f      4829da         sub rdx, rbx
0x00004d92      4883fa06       cmp rdx, 6
0x00004d96      7e45           jle 0x4ddd
0x00004d98      488d70fa       lea rsi, [rax - 6]
0x00004d9c      488d3d153800.  lea rdi, str..libs                      ; 0x85b8 ; "/.libs/"
0x00004da3      b907000000     mov ecx, 7
0x00004da8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004daa      0f97c2         seta dl
0x00004dad      80da00         sbb dl, 0
0x00004db0      84d2           test dl, dl
0x00004db2      7529           jne 0x4ddd
0x00004db4      488d3d053800.  lea rdi, [0x000085c0]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x00004dbb      b903000000     mov ecx, 3
0x00004dc0      4c89c6         mov rsi, r8
0x00004dc3      4c89c3         mov rbx, r8
0x00004dc6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004dc8      0f97c2         seta dl
0x00004dcb      80da00         sbb dl, 0
0x00004dce      84d2           test dl, dl
0x00004dd0      750b           jne 0x4ddd
0x00004dd2      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00004dd6      48891dc36220.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x20b0a0:8]=0
0x00004ddd      48891d3c6320.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x20b120:8]=0
0x00004de4      48891dd56220.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x20b0c0:8]=0
0x00004deb      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x00004dec      c3             ret
0x00004ded      488b0dec6220.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20b0e0:8]=0
0x00004df4      488d3d853700.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x8580 ; "A NULL argv[0] was passed through an exec system call.\n"
0x00004dfb      ba37000000     mov edx, 0x37                           ; '7'
0x00004e00      be01000000     mov esi, 1
0x00004e05      e886caffff     call sym.imp.fwrite
0x00004e0a      e8b1c7ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x00004e0f      90             nop
;-- gettext_quote.part.1:
0x00004e10      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00004e11      53             push rbx
0x00004e12      4889fd         mov rbp, rdi
0x00004e15      89f3           mov ebx, esi
0x00004e17      4883ec08       sub rsp, 8
0x00004e1b      e8502a0000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00004e20      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00004e23      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00004e26      80fa55         cmp dl, 0x55
0x00004e29      7475           je 0x4ea0
0x00004e2b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x00004e2e      7420           je 0x4e50
0x00004e30      488d059c3700.  lea rax, str.l______l                   ; 0x85d3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004e37      488d15973700.  lea rdx, [0x000085d5]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004e3e      83fb09         cmp ebx, 9
0x00004e41      480f45c2       cmovne rax, rdx
0x00004e45      4883c408       add rsp, 8
0x00004e49      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x00004e4a      5d             pop rbp
0x00004e4b      c3             ret
0x00004e4c      0f1f4000       nop dword [rax]
0x00004e50      0fb65001       movzx edx, byte [rax + 1]
0x00004e54      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00004e57      80fa42         cmp dl, 0x42
0x00004e5a      75d4           jne 0x4e30
0x00004e5c      80780231       cmp byte [rax + 2], 0x31
0x00004e60      75ce           jne 0x4e30
0x00004e62      80780338       cmp byte [rax + 3], 0x38
0x00004e66      75c8           jne 0x4e30
0x00004e68      80780430       cmp byte [rax + 4], 0x30
0x00004e6c      75c2           jne 0x4e30
0x00004e6e      80780533       cmp byte [rax + 5], 0x33
0x00004e72      75bc           jne 0x4e30
0x00004e74      80780630       cmp byte [rax + 6], 0x30
0x00004e78      75b6           jne 0x4e30
0x00004e7a      80780700       cmp byte [rax + 7], 0
0x00004e7e      75b0           jne 0x4e30
0x00004e80      807d0060       cmp byte [rbp], 0x60
0x00004e84      488d05413700.  lea rax, [0x000085cc]
0x00004e8b      488d153e3700.  lea rdx, [0x000085d0]
0x00004e92      480f45c2       cmovne rax, rdx
0x00004e96      4883c408       add rsp, 8
0x00004e9a      5b             pop rbx
0x00004e9b      5d             pop rbp
0x00004e9c      c3             ret
0x00004e9d      0f1f00         nop dword [rax]
0x00004ea0      0fb65001       movzx edx, byte [rax + 1]
0x00004ea4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00004ea7      80fa54         cmp dl, 0x54
0x00004eaa      7584           jne 0x4e30
0x00004eac      0fb65002       movzx edx, byte [rax + 2]
0x00004eb0      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00004eb3      80fa46         cmp dl, 0x46
0x00004eb6      0f8574ffffff   jne 0x4e30
0x00004ebc      8078032d       cmp byte [rax + 3], 0x2d
0x00004ec0      0f856affffff   jne 0x4e30
0x00004ec6      80780438       cmp byte [rax + 4], 0x38
0x00004eca      0f8560ffffff   jne 0x4e30
0x00004ed0      80780500       cmp byte [rax + 5], 0
0x00004ed4      0f8556ffffff   jne 0x4e30
0x00004eda      807d0060       cmp byte [rbp], 0x60
0x00004ede      488d05df3600.  lea rax, [0x000085c4]                   ; "\u2018"
0x00004ee5      488d15dc3600.  lea rdx, [0x000085c8]                   ; "\u2019"
0x00004eec      480f45c2       cmovne rax, rdx
0x00004ef0      4883c408       add rsp, 8
0x00004ef4      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00004ef5      5d             pop rbp
0x00004ef6      c3             ret
0x00004ef7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00004f00      4157           push r15
0x00004f02      4156           push r14
0x00004f04      4589c7         mov r15d, r8d
0x00004f07      4155           push r13
0x00004f09      4154           push r12
0x00004f0b      4989fe         mov r14, rdi
0x00004f0e      55             push rbp
0x00004f0f      53             push rbx
0x00004f10      4489cb         mov ebx, r9d
0x00004f13      4989f5         mov r13, rsi
0x00004f16      4889cd         mov rbp, rcx
0x00004f19      83e302         and ebx, 2
0x00004f1c      4881ecb80000.  sub rsp, 0xb8
0x00004f23      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x00004f2b      4889542410     mov qword [rsp + 0x10], rdx
0x00004f30      4489442408     mov dword [rsp + 8], r8d
0x00004f35      44894c2478     mov dword [rsp + 0x78], r9d
0x00004f3a      4889442420     mov qword [rsp + 0x20], rax
0x00004f3f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00004f47      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x00004f4c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00004f54      4889442460     mov qword [rsp + 0x60], rax
0x00004f59      64488b042528.  mov rax, qword fs:[0x28]
0x00004f62      48898424a800.  mov qword [rsp + 0xa8], rax
0x00004f6a      31c0           xor eax, eax
0x00004f6c      e8ffc6ffff     call sym.imp.__ctype_get_mb_cur_max
0x00004f71      4183ff0a       cmp r15d, 0xa
0x00004f75      4889442458     mov qword [rsp + 0x58], rax
0x00004f7a      0f87af110000   ja 0x612f
0x00004f80      488d0db93600.  lea rcx, [0x00008640]
0x00004f87      4489fa         mov edx, r15d
0x00004f8a      48630491       movsxd rax, dword [rcx + rdx*4]
0x00004f8e      4801c8         add rax, rcx
0x00004f91      ffe0           jmp rax
0x00004f93      c644240e01     mov byte [rsp + 0xe], 1
0x00004f98      c644247c00     mov byte [rsp + 0x7c], 0
0x00004f9d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00004fa0      48c744245000.  mov qword [rsp + 0x50], 0
0x00004fa9      c644240f01     mov byte [rsp + 0xf], 1
0x00004fae      c644240d00     mov byte [rsp + 0xd], 0
0x00004fb3      488d051b3600.  lea rax, [0x000085d5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004fba      48c744241801.  mov qword [rsp + 0x18], 1
0x00004fc3      4531ff         xor r15d, r15d
0x00004fc6      c74424080200.  mov dword [rsp + 8], 2
0x00004fce      4889442448     mov qword [rsp + 0x48], rax
0x00004fd3      4531db         xor r11d, r11d
0x00004fd6      4889e8         mov rax, rbp
0x00004fd9      4589e0         mov r8d, r12d
0x00004fdc      4c89dd         mov rbp, r11
0x00004fdf      4989c3         mov r11, rax
0x00004fe2      660f1f440000   nop word [rax + rax]
0x00004fe8      4939eb         cmp r11, rbp
0x00004feb      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x00004fef      4983fbff       cmp r11, 0xffffffffffffffff
0x00004ff3      750d           jne 0x5002
0x00004ff5      488b442410     mov rax, qword [rsp + 0x10]
0x00004ffa      803c2800       cmp byte [rax + rbp], 0
0x00004ffe      410f95c4       setne r12b
0x00005002      4584e4         test r12b, r12b
0x00005005      0f8455060000   je 0x5660
0x0000500b      837c240802     cmp dword [rsp + 8], 2
0x00005010      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00005015      4c8d0c2f       lea r9, [rdi + rbp]
0x00005019      0f95c0         setne al
0x0000501c      2244240d       and al, byte [rsp + 0xd]
0x00005020      4189c2         mov r10d, eax
0x00005023      0f84a7000000   je 0x50d0
0x00005029      488b442418     mov rax, qword [rsp + 0x18]
0x0000502e      4885c0         test rax, rax
0x00005031      0f8429040000   je 0x5460
0x00005037      4983fbff       cmp r11, 0xffffffffffffffff
0x0000503b      488d5c0500     lea rbx, [rbp + rax]
0x00005040      752e           jne 0x5070
0x00005042      4883f801       cmp rax, 1
0x00005046      7628           jbe 0x5070
0x00005048      4488442438     mov byte [rsp + 0x38], r8b
0x0000504d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00005052      4c894c2428     mov qword [rsp + 0x28], r9
0x00005057      e824c6ffff     call sym.imp.strlen
0x0000505c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00005062      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00005068      4989c3         mov r11, rax
0x0000506b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00005070      4c39db         cmp rbx, r11
0x00005073      4488542428     mov byte [rsp + 0x28], r10b
0x00005078      0f87b2050000   ja 0x5630
0x0000507e      488b542418     mov rdx, qword [rsp + 0x18]
0x00005083      488b742448     mov rsi, qword [rsp + 0x48]
0x00005088      4c89cf         mov rdi, r9
0x0000508b      4c895c2440     mov qword [rsp + 0x40], r11
0x00005090      4488442438     mov byte [rsp + 0x38], r8b
0x00005095      4c894c2430     mov qword [rsp + 0x30], r9
0x0000509a      e891c6ffff     call sym.imp.memcmp
0x0000509f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x000050a1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000050a6      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x000050ac      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x000050b1      0f8579050000   jne 0x5630
0x000050b7      807c240f00     cmp byte [rsp + 0xf], 0
0x000050bc      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x000050c2      0f857d0f0000   jne 0x6045
0x000050c8      0f1f84000000.  nop dword [rax + rax]
0x000050d0      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x000050d4      80fb7e         cmp bl, 0x7e
0x000050d7      0f871b030000   ja 0x53f8
0x000050dd      488d0d883500.  lea rcx, [0x0000866c]
0x000050e4      0fb6d3         movzx edx, bl
0x000050e7      48630491       movsxd rax, dword [rcx + rdx*4]
0x000050eb      4801c8         add rax, rcx
0x000050ee      ffe0           jmp rax
0x000050f0      4531d2         xor r10d, r10d
0x000050f3      4983fb01       cmp r11, 1
0x000050f7      0f95c0         setne al
0x000050fa      4983fbff       cmp r11, 0xffffffffffffffff
0x000050fe      750c           jne 0x510c
0x00005100      488b442410     mov rax, qword [rsp + 0x10]
0x00005105      80780100       cmp byte [rax + 1], 0
0x00005109      0f95c0         setne al
0x0000510c      837c240802     cmp dword [rsp + 8], 2
0x00005111      0f94c2         sete dl
0x00005114      84c0           test al, al
0x00005116      0f844c020000   je 0x5368
0x0000511c      4531e4         xor r12d, r12d
0x0000511f      31c0           xor eax, eax
0x00005121      0f1f80000000.  nop dword [rax]
0x00005128      807c240d01     cmp byte [rsp + 0xd], 1
0x0000512d      0f850f010000   jne 0x5242
0x00005133      84d2           test dl, dl
0x00005135      0f8507010000   jne 0x5242
0x0000513b      488b742420     mov rsi, qword [rsp + 0x20]
0x00005140      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00005143      7414           je 0x5159
0x00005145      89da           mov edx, ebx
0x00005147      c0ea05         shr dl, 5
0x0000514a      0fb6d2         movzx edx, dl
0x0000514d      8b1496         mov edx, dword [rsi + rdx*4]
0x00005150      0fa3da         bt edx, ebx
0x00005153      0f824a010000   jb 0x52a3
0x00005159      4584d2         test r10b, r10b
0x0000515c      0f8541010000   jne 0x52a3
0x00005162      83f001         xor eax, 1
0x00005165      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00005169      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000516c      84c0           test al, al
0x0000516e      7420           je 0x5190                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00005170      4d39fd         cmp r13, r15
0x00005173      7605           jbe 0x517a
0x00005175      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000517a      498d4701       lea rax, [r15 + 1]
0x0000517e      4939c5         cmp r13, rax
0x00005181      7606           jbe 0x5189
0x00005183      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00005189      4983c702       add r15, 2
0x0000518d      4531c0         xor r8d, r8d
0x00005190      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00005193      7304           jae 0x5199                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00005195      43881c3e       mov byte [r14 + r15], bl
0x00005199      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x0000519e      4983c701       add r15, 1
0x000051a2      b800000000     mov eax, 0
0x000051a7      4584e4         test r12b, r12b
0x000051aa      0f44f8         cmove edi, eax
0x000051ad      40887c240e     mov byte [rsp + 0xe], dil
0x000051b2      e931feffff     jmp 0x4fe8
0x000051b7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x000051c0      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x000051c3      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x000051c7      83f802         cmp eax, 2
0x000051ca      0f84b8050000   je 0x5788
0x000051d0      83f805         cmp eax, 5
0x000051d3      0f846f050000   je 0x5748
0x000051d9      83f802         cmp eax, 2
0x000051dc      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000051e1      0f94c2         sete dl
0x000051e4      4531e4         xor r12d, r12d
0x000051e7      31c0           xor eax, eax
0x000051e9      e93affffff     jmp 0x5128
0x000051ee      6690           nop
0x000051f0      4531d2         xor r10d, r10d
0x000051f3      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x000051f8      0f8402050000   je 0x5700
0x000051fe      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00005203      31d2           xor edx, edx
0x00005205      31c0           xor eax, eax
0x00005207      bb27000000     mov ebx, 0x27                           ; '''
0x0000520c      e917ffffff     jmp 0x5128
0x00005211      0f1f80000000.  nop dword [rax]
0x00005218      ba09000000     mov edx, 9
0x0000521d      bb74000000     mov ebx, 0x74                           ; 't'
0x00005222      837c240802     cmp dword [rsp + 8], 2
0x00005227      0f94c0         sete al
0x0000522a      2244240f       and al, byte [rsp + 0xf]
0x0000522e      0f854a010000   jne 0x537e
0x00005234      807c240d00     cmp byte [rsp + 0xd], 0
0x00005239      7565           jne 0x52a0
0x0000523b      89d3           mov ebx, edx
0x0000523d      4531e4         xor r12d, r12d
0x00005240      31c0           xor eax, eax
0x00005242      807c240f00     cmp byte [rsp + 0xf], 0
0x00005247      0f85eefeffff   jne 0x513b
0x0000524d      e907ffffff     jmp 0x5159                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00005252      660f1f440000   nop word [rax + rax]
0x00005258      ba08000000     mov edx, 8
0x0000525d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00005262      ebd0           jmp 0x5234
0x00005264      0f1f4000       nop dword [rax]
0x00005268      837c240802     cmp dword [rsp + 8], 2
0x0000526d      0f84cd030000   je 0x5640
0x00005273      807c240d00     cmp byte [rsp + 0xd], 0
0x00005278      0f8412020000   je 0x5490
0x0000527e      807c240f00     cmp byte [rsp + 0xf], 0
0x00005283      0f8407020000   je 0x5490
0x00005289      48837c241800   cmp qword [rsp + 0x18], 0
0x0000528f      0f85b6030000   jne 0x564b
0x00005295      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000529a      660f1f440000   nop word [rax + rax]
0x000052a0      4531e4         xor r12d, r12d
0x000052a3      837c240802     cmp dword [rsp + 8], 2
0x000052a8      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x000052ab      807c240f00     cmp byte [rsp + 0xf], 0
0x000052b0      89d0           mov eax, edx
0x000052b2      0f8550080000   jne 0x5b08
0x000052b8      4489c0         mov eax, r8d
0x000052bb      83f001         xor eax, 1
0x000052be      20d0           and al, dl
0x000052c0      742f           je 0x52f1
0x000052c2      4d39fd         cmp r13, r15
0x000052c5      7605           jbe 0x52cc
0x000052c7      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000052cc      498d5701       lea rdx, [r15 + 1]
0x000052d0      4939d5         cmp r13, rdx
0x000052d3      7606           jbe 0x52db
0x000052d5      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000052db      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x000052df      4939d5         cmp r13, rdx
0x000052e2      7606           jbe 0x52ea
0x000052e4      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000052ea      4983c703       add r15, 3
0x000052ee      4189c0         mov r8d, eax
0x000052f1      4d39fd         cmp r13, r15
0x000052f4      7605           jbe 0x52fb
0x000052f6      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000052fb      4983c701       add r15, 1
0x000052ff      4883c501       add rbp, 1
0x00005303      e988feffff     jmp 0x5190
0x00005308      0f1f84000000.  nop dword [rax + rax]
0x00005310      807c240d00     cmp byte [rsp + 0xd], 0
0x00005315      0f85c8010000   jne 0x54e3
0x0000531b      31d2           xor edx, edx
0x0000531d      f644247801     test byte [rsp + 0x78], 1
0x00005322      0f8413ffffff   je 0x523b
0x00005328      4883c501       add rbp, 1
0x0000532c      e9b7fcffff     jmp 0x4fe8
0x00005331      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00005338      837c240802     cmp dword [rsp + 8], 2
0x0000533d      0f94c2         sete dl
0x00005340      31c0           xor eax, eax
0x00005342      e9e1fdffff     jmp 0x5128
0x00005347      660f1f840000.  nop word [rax + rax]
0x00005350      ba07000000     mov edx, 7
0x00005355      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000535a      e9d5feffff     jmp 0x5234
0x0000535f      90             nop
0x00005360      837c240802     cmp dword [rsp + 8], 2
0x00005365      0f94c2         sete dl
0x00005368      4885ed         test rbp, rbp
0x0000536b      0f85abfdffff   jne 0x511c
0x00005371      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00005376      20d0           and al, dl
0x00005378      0f84aafdffff   je 0x5128
0x0000537e      4c89dd         mov rbp, r11
0x00005381      c74424080200.  mov dword [rsp + 8], 2
0x00005389      e9fb060000     jmp 0x5a89
0x0000538e      6690           nop
0x00005390      837c240802     cmp dword [rsp + 8], 2
0x00005395      0f94c2         sete dl
0x00005398      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x0000539b      ebd4           jmp 0x5371
0x0000539d      0f1f00         nop dword [rax]
0x000053a0      837c240802     cmp dword [rsp + 8], 2
0x000053a5      bb20000000     mov ebx, 0x20                           ; "@"
0x000053aa      0f94c2         sete dl
0x000053ad      ebc2           jmp 0x5371
0x000053af      90             nop
0x000053b0      ba0d000000     mov edx, 0xd
0x000053b5      bb72000000     mov ebx, 0x72                           ; 'r'
0x000053ba      e963feffff     jmp 0x5222
0x000053bf      90             nop
0x000053c0      ba0c000000     mov edx, 0xc
0x000053c5      bb66000000     mov ebx, 0x66                           ; 'f'
0x000053ca      e965feffff     jmp 0x5234
0x000053cf      90             nop
0x000053d0      ba0b000000     mov edx, 0xb
0x000053d5      bb76000000     mov ebx, 0x76                           ; 'v'
0x000053da      e955feffff     jmp 0x5234
0x000053df      90             nop
0x000053e0      ba0a000000     mov edx, 0xa
0x000053e5      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x000053ea      e933feffff     jmp 0x5222
0x000053ef      90             nop
0x000053f0      4531d2         xor r10d, r10d
0x000053f3      0f1f440000     nop dword [rax + rax]
0x000053f8      48837c245801   cmp qword [rsp + 0x58], 1
0x000053fe      0f85a4030000   jne 0x57a8
0x00005404      4c895c2438     mov qword [rsp + 0x38], r11
0x00005409      4488442430     mov byte [rsp + 0x30], r8b
0x0000540e      4488542428     mov byte [rsp + 0x28], r10b
0x00005413      e8c8c4ffff     call sym.imp.__ctype_b_loc
0x00005418      488b08         mov rcx, qword [rax]
0x0000541b      0fb6d3         movzx edx, bl
0x0000541e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00005424      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x0000542a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000542f      bf01000000     mov edi, 1
0x00005434      0fb70451       movzx eax, word [rcx + rdx*2]
0x00005438      66250040       and ax, 0x4000
0x0000543c      410f95c4       setne r12b
0x00005440      0f94c0         sete al
0x00005443      2244240d       and al, byte [rsp + 0xd]
0x00005447      84c0           test al, al
0x00005449      0f8592090000   jne 0x5de1
0x0000544f      837c240802     cmp dword [rsp + 8], 2
0x00005454      0f94c2         sete dl
0x00005457      e9ccfcffff     jmp 0x5128
0x0000545c      0f1f4000       nop dword [rax]
0x00005460      410fb619       movzx ebx, byte [r9]
0x00005464      80fb7e         cmp bl, 0x7e
0x00005467      7787           ja 0x53f0
0x00005469      488d0df83300.  lea rcx, [0x00008868]
0x00005470      0fb6d3         movzx edx, bl
0x00005473      48630491       movsxd rax, dword [rcx + rdx*4]
0x00005477      4801c8         add rax, rcx
0x0000547a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000547c      0f1f4000       nop dword [rax]
0x00005480      4531d2         xor r10d, r10d
0x00005483      807c240d00     cmp byte [rsp + 0xd], 0
0x00005488      0f85f0fdffff   jne 0x527e
0x0000548e      6690           nop
0x00005490      ba5c000000     mov edx, 0x5c                           ; '\'
0x00005495      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000549a      e995fdffff     jmp 0x5234
0x0000549f      90             nop
0x000054a0      ba0c000000     mov edx, 0xc
0x000054a5      4531d2         xor r10d, r10d
0x000054a8      bb66000000     mov ebx, 0x66                           ; 'f'
0x000054ad      e982fdffff     jmp 0x5234
0x000054b2      660f1f440000   nop word [rax + rax]
0x000054b8      ba0a000000     mov edx, 0xa
0x000054bd      4531d2         xor r10d, r10d
0x000054c0      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x000054c5      e958fdffff     jmp 0x5222
0x000054ca      660f1f440000   nop word [rax + rax]
0x000054d0      bb61000000     mov ebx, 0x61                           ; 'a'
0x000054d5      e9c6fdffff     jmp 0x52a0
0x000054da      660f1f440000   nop word [rax + rax]
0x000054e0      4531d2         xor r10d, r10d
0x000054e3      837c240802     cmp dword [rsp + 8], 2
0x000054e8      0f94c2         sete dl
0x000054eb      807c240f00     cmp byte [rsp + 0xf], 0
0x000054f0      0f85940b0000   jne 0x608a
0x000054f6      4489c0         mov eax, r8d
0x000054f9      4c89f9         mov rcx, r15
0x000054fc      83f001         xor eax, 1
0x000054ff      20d0           and al, dl
0x00005501      742d           je 0x5530
0x00005503      4d39fd         cmp r13, r15
0x00005506      7605           jbe 0x550d
0x00005508      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000550d      498d4f01       lea rcx, [r15 + 1]
0x00005511      4939cd         cmp r13, rcx
0x00005514      7606           jbe 0x551c
0x00005516      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000551c      498d4f02       lea rcx, [r15 + 2]
0x00005520      4939cd         cmp r13, rcx
0x00005523      0f8730060000   ja 0x5b59
0x00005529      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000552d      4189c0         mov r8d, eax
0x00005530      4939cd         cmp r13, rcx
0x00005533      7605           jbe 0x553a
0x00005535      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000553a      837c240802     cmp dword [rsp + 8], 2
0x0000553f      4c8d7901       lea r15, [rcx + 1]
0x00005543      0f8400060000   je 0x5b49
0x00005549      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000554d      4c39d8         cmp rax, r11
0x00005550      7319           jae 0x556b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00005552      488b442410     mov rax, qword [rsp + 0x10]
0x00005557      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000555c      88442428       mov byte [rsp + 0x28], al
0x00005560      83e830         sub eax, 0x30
0x00005563      3c09           cmp al, 9
0x00005565      0f862e080000   jbe 0x5d99
0x0000556b      4489e0         mov eax, r12d
0x0000556e      bb30000000     mov ebx, 0x30                           ; '0'
0x00005573      4531e4         xor r12d, r12d
0x00005576      e9adfbffff     jmp 0x5128                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000557b      0f1f440000     nop dword [rax + rax]
0x00005580      837c240802     cmp dword [rsp + 8], 2
0x00005585      4589d4         mov r12d, r10d
0x00005588      0f94c2         sete dl
0x0000558b      4531d2         xor r10d, r10d
0x0000558e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00005590      e993fbffff     jmp 0x5128                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00005595      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00005598      837c240802     cmp dword [rsp + 8], 2
0x0000559d      0f94c2         sete dl
0x000055a0      4531d2         xor r10d, r10d
0x000055a3      e9c0fdffff     jmp 0x5368
0x000055a8      0f1f84000000.  nop dword [rax + rax]
0x000055b0      837c240802     cmp dword [rsp + 8], 2
0x000055b5      0f94c2         sete dl
0x000055b8      4531d2         xor r10d, r10d
0x000055bb      4531e4         xor r12d, r12d
0x000055be      e9aefdffff     jmp 0x5371
0x000055c3      0f1f440000     nop dword [rax + rax]
0x000055c8      837c240802     cmp dword [rsp + 8], 2
0x000055cd      4589d4         mov r12d, r10d
0x000055d0      bb20000000     mov ebx, 0x20                           ; "@"
0x000055d5      0f94c2         sete dl
0x000055d8      4531d2         xor r10d, r10d
0x000055db      e991fdffff     jmp 0x5371
0x000055e0      ba0d000000     mov edx, 0xd
0x000055e5      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x000055e8      bb72000000     mov ebx, 0x72                           ; 'r'
0x000055ed      e930fcffff     jmp 0x5222
0x000055f2      660f1f440000   nop word [rax + rax]
0x000055f8      bb76000000     mov ebx, 0x76                           ; 'v'
0x000055fd      e99efcffff     jmp 0x52a0
0x00005602      660f1f440000   nop word [rax + rax]
0x00005608      ba09000000     mov edx, 9
0x0000560d      4531d2         xor r10d, r10d
0x00005610      bb74000000     mov ebx, 0x74                           ; 't'
0x00005615      e908fcffff     jmp 0x5222
0x0000561a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00005620      bb62000000     mov ebx, 0x62                           ; 'b'
0x00005625      e976fcffff     jmp 0x52a0
0x0000562a      660f1f440000   nop word [rax + rax]
0x00005630      4531d2         xor r10d, r10d
0x00005633      e998faffff     jmp 0x50d0
0x00005638      0f1f84000000.  nop dword [rax + rax]
0x00005640      807c240f00     cmp byte [rsp + 0xf], 0
0x00005645      0f8565090000   jne 0x5fb0
0x0000564b      4883c501       add rbp, 1
0x0000564f      4489c0         mov eax, r8d
0x00005652      4531e4         xor r12d, r12d
0x00005655      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000565a      e90dfbffff     jmp 0x516c
0x0000565f      90             nop
0x00005660      837c240802     cmp dword [rsp + 8], 2
0x00005665      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000566a      4589c4         mov r12d, r8d
0x0000566d      4c89dd         mov rbp, r11
0x00005670      0f94c2         sete dl
0x00005673      89d8           mov eax, ebx
0x00005675      4d85ff         test r15, r15
0x00005678      0f94c1         sete cl
0x0000567b      21d0           and eax, edx
0x0000567d      20c8           and al, cl
0x0000567f      0f85610a0000   jne 0x60e6                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00005685      89d8           mov eax, ebx
0x00005687      83f001         xor eax, 1
0x0000568a      20c2           and dl, al
0x0000568c      0f846a090000   je 0x5ffc
0x00005692      807c247c00     cmp byte [rsp + 0x7c], 0
0x00005697      0f845d090000   je 0x5ffa
0x0000569d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x000056a2      0f85f5090000   jne 0x609d
0x000056a8      4d85ed         test r13, r13
0x000056ab      0f94c0         sete al
0x000056ae      48837c245000   cmp qword [rsp + 0x50], 0
0x000056b4      0f95c2         setne dl
0x000056b7      20d0           and al, dl
0x000056b9      0f841d0a0000   je 0x60dc
0x000056bf      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000056c4      488d1d0a2f00.  lea rbx, [0x000085d5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000056cb      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x000056cf      c74424080200.  mov dword [rsp + 8], 2
0x000056d7      41bf01000000   mov r15d, 1
0x000056dd      48c744241801.  mov qword [rsp + 0x18], 1
0x000056e6      c644240f00     mov byte [rsp + 0xf], 0
0x000056eb      48895c2448     mov qword [rsp + 0x48], rbx
0x000056f0      8844247c       mov byte [rsp + 0x7c], al
0x000056f4      e9daf8ffff     jmp 0x4fd3
0x000056f9      0f1f80000000.  nop dword [rax]
0x00005700      807c240f00     cmp byte [rsp + 0xf], 0
0x00005705      0f85a5080000   jne 0x5fb0
0x0000570b      4d85ed         test r13, r13
0x0000570e      0f84fc030000   je 0x5b10                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00005714      31d2           xor edx, edx
0x00005716      48837c245000   cmp qword [rsp + 0x50], 0
0x0000571c      0f85ee030000   jne 0x5b10                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00005722      4c896c2450     mov qword [rsp + 0x50], r13
0x00005727      4983c703       add r15, 3
0x0000572b      31c0           xor eax, eax
0x0000572d      448864247c     mov byte [rsp + 0x7c], r12b
0x00005732      4531c0         xor r8d, r8d
0x00005735      4989d5         mov r13, rdx
0x00005738      bb27000000     mov ebx, 0x27                           ; '''
0x0000573d      e917faffff     jmp 0x5159
0x00005742      660f1f440000   nop word [rax + rax]
0x00005748      f644247804     test byte [rsp + 0x78], 4
0x0000574d      7421           je 0x5770
0x0000574f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00005753      4c39d9         cmp rcx, r11
0x00005756      7318           jae 0x5770
0x00005758      488b442410     mov rax, qword [rsp + 0x10]
0x0000575d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00005762      0f848a070000   je 0x5ef2
0x00005768      0f1f84000000.  nop dword [rax + rax]
0x00005770      31d2           xor edx, edx
0x00005772      4531e4         xor r12d, r12d
0x00005775      31c0           xor eax, eax
0x00005777      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000577c      e9a7f9ffff     jmp 0x5128
0x00005781      0f1f80000000.  nop dword [rax]
0x00005788      807c240f00     cmp byte [rsp + 0xf], 0
0x0000578d      0f851d080000   jne 0x5fb0
0x00005793      4531e4         xor r12d, r12d
0x00005796      31c0           xor eax, eax
0x00005798      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000579d      e9b7f9ffff     jmp 0x5159                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x000057a2      660f1f440000   nop word [rax + rax]
0x000057a8      488d8424a000.  lea rax, [rsp + 0xa0]
0x000057b0      4983fbff       cmp r11, 0xffffffffffffffff
0x000057b4      48c78424a000.  mov qword [rsp + 0xa0], 0
0x000057c0      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x000057c5      752d           jne 0x57f4
0x000057c7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000057cc      4488442440     mov byte [rsp + 0x40], r8b
0x000057d1      4488542438     mov byte [rsp + 0x38], r10b
0x000057d6      4c894c2430     mov qword [rsp + 0x30], r9
0x000057db      e8a0beffff     call sym.imp.strlen
0x000057e0      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x000057e6      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x000057ec      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x000057ef      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000057f4      488d84249c00.  lea rax, [rsp + 0x9c]
0x000057fc      31c9           xor ecx, ecx
0x000057fe      885c247e       mov byte [rsp + 0x7e], bl
0x00005802      448844247d     mov byte [rsp + 0x7d], r8b
0x00005807      4889cb         mov rbx, rcx
0x0000580a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00005812      4889442438     mov qword [rsp + 0x38], rax
0x00005817      448854247f     mov byte [rsp + 0x7f], r10b
0x0000581c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00005824      4c89742440     mov qword [rsp + 0x40], r14
0x00005829      4c896c2470     mov qword [rsp + 0x70], r13
0x0000582e      4c895c2430     mov qword [rsp + 0x30], r11
0x00005833      488b442410     mov rax, qword [rsp + 0x10]
0x00005838      4c8d741d00     lea r14, [rbp + rbx]
0x0000583d      488b542430     mov rdx, qword [rsp + 0x30]
0x00005842      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00005847      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000584c      4e8d2c30       lea r13, [rax + r14]
0x00005850      4c29f2         sub rdx, r14
0x00005853      4c89ee         mov rsi, r13
0x00005856      e8a51e0000     call sym.rpl_mbrtowc
0x0000585b      4885c0         test rax, rax
0x0000585e      4989c7         mov r15, rax
0x00005861      744e           je 0x58b1
0x00005863      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005867      0f8418060000   je 0x5e85
0x0000586d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00005871      0f849a050000   je 0x5e11
0x00005877      837c240802     cmp dword [rsp + 8], 2
0x0000587c      0f94c0         sete al
0x0000587f      2244240f       and al, byte [rsp + 0xf]
0x00005883      0f8597010000   jne 0x5a20
0x00005889      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00005890      e82bc0ffff     call sym.imp.iswprint
0x00005895      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000589a      85c0           test eax, eax
0x0000589c      b800000000     mov eax, 0
0x000058a1      440f44e0       cmove r12d, eax
0x000058a5      4c01fb         add rbx, r15
0x000058a8      e803c0ffff     call sym.imp.mbsinit
0x000058ad      85c0           test eax, eax
0x000058af      7482           je 0x5833
0x000058b1      4489e2         mov edx, r12d
0x000058b4      4889df         mov rdi, rbx
0x000058b7      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000058bd      83f201         xor edx, 1
0x000058c0      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000058c5      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000058cb      2254240d       and dl, byte [rsp + 0xd]
0x000058cf      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000058d7      4c8b742440     mov r14, qword [rsp + 0x40]
0x000058dc      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000058e1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000058e6      4883ff01       cmp rdi, 1
0x000058ea      0f86fb050000   jbe 0x5eeb
0x000058f0      4889f9         mov rcx, rdi
0x000058f3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x000058f5      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x000058fb      4801e9         add rcx, rbp
0x000058fe      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00005903      e9b6000000     jmp 0x59be
0x00005908      0f1f84000000.  nop dword [rax + rax]
0x00005910      837c240802     cmp dword [rsp + 8], 2
0x00005915      0f94c0         sete al
0x00005918      4584c9         test r9b, r9b
0x0000591b      0f85af040000   jne 0x5dd0
0x00005921      4489c6         mov esi, r8d
0x00005924      83f601         xor esi, 1
0x00005927      4020f0         and al, sil
0x0000592a      742f           je 0x595b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x0000592c      4d39fd         cmp r13, r15
0x0000592f      7605           jbe 0x5936
0x00005931      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00005936      498d7701       lea rsi, [r15 + 1]
0x0000593a      4939f5         cmp r13, rsi
0x0000593d      7606           jbe 0x5945                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x0000593f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00005945      498d7702       lea rsi, [r15 + 2]
0x00005949      4939f5         cmp r13, rsi
0x0000594c      7606           jbe 0x5954
0x0000594e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00005954      4983c703       add r15, 3
0x00005958      4189c0         mov r8d, eax
0x0000595b      4d39fd         cmp r13, r15
0x0000595e      7605           jbe 0x5965
0x00005960      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00005965      498d4701       lea rax, [r15 + 1]
0x00005969      4939c5         cmp r13, rax
0x0000596c      760d           jbe 0x597b
0x0000596e      89d8           mov eax, ebx
0x00005970      c0e806         shr al, 6
0x00005973      83c030         add eax, 0x30
0x00005976      4388443e01     mov byte [r14 + r15 + 1], al
0x0000597b      498d4702       lea rax, [r15 + 2]
0x0000597f      4939c5         cmp r13, rax
0x00005982      7610           jbe 0x5994
0x00005984      89d8           mov eax, ebx
0x00005986      c0e803         shr al, 3
0x00005989      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x0000598c      83c030         add eax, 0x30
0x0000598f      4388443e02     mov byte [r14 + r15 + 2], al
0x00005994      83e307         and ebx, 7
0x00005997      4883c501       add rbp, 1
0x0000599b      4983c703       add r15, 3
0x0000599f      83c330         add ebx, 0x30
0x000059a2      4839cd         cmp rbp, rcx
0x000059a5      0f83e5f7ffff   jae 0x5190
0x000059ab      89d6           mov esi, edx
0x000059ad      4d39fd         cmp r13, r15
0x000059b0      7604           jbe 0x59b6
0x000059b2      43881c3e       mov byte [r14 + r15], bl
0x000059b6      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x000059ba      4983c701       add r15, 1
0x000059be      84d2           test dl, dl
0x000059c0      0f854affffff   jne 0x5910
0x000059c6      89f0           mov eax, esi
0x000059c8      83f001         xor eax, 1
0x000059cb      4421c0         and eax, r8d
0x000059ce      4584d2         test r10b, r10b
0x000059d1      740e           je 0x59e1
0x000059d3      4d39fd         cmp r13, r15
0x000059d6      7605           jbe 0x59dd
0x000059d8      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000059dd      4983c701       add r15, 1
0x000059e1      4883c501       add rbp, 1
0x000059e5      4839cd         cmp rbp, rcx
0x000059e8      0f837ef7ffff   jae 0x516c
0x000059ee      84c0           test al, al
0x000059f0      0f84f8030000   je 0x5dee
0x000059f6      4d39fd         cmp r13, r15
0x000059f9      7605           jbe 0x5a00
0x000059fb      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00005a00      498d4701       lea rax, [r15 + 1]
0x00005a04      4939c5         cmp r13, rax
0x00005a07      7606           jbe 0x5a0f
0x00005a09      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00005a0f      4983c702       add r15, 2
0x00005a13      4531d2         xor r10d, r10d
0x00005a16      4531c0         xor r8d, r8d
0x00005a19      eb92           jmp 0x59ad
0x00005a1b      0f1f440000     nop dword [rax + rax]
0x00005a20      4983ff01       cmp r15, 1
0x00005a24      0f845ffeffff   je 0x5889
0x00005a2a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00005a2f      4a8d0c3f       lea rcx, [rdi + r15]
0x00005a33      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00005a38      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00005a3c      eb0f           jmp 0x5a4d
0x00005a3e      6690           nop
0x00005a40      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00005a44      4939d0         cmp r8, rdx
0x00005a47      0f843cfeffff   je 0x5889
0x00005a4d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00005a50      83e95b         sub ecx, 0x5b
0x00005a53      80f921         cmp cl, 0x21
0x00005a56      77e8           ja 0x5a40                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00005a58      be01000000     mov esi, 1
0x00005a5d      48d3e6         shl rsi, cl
0x00005a60      4889f1         mov rcx, rsi
0x00005a63      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x00005a6d      4885f1         test rcx, rsi
0x00005a70      74ce           je 0x5a40
0x00005a72      4c8b742440     mov r14, qword [rsp + 0x40]
0x00005a77      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00005a7c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00005a81      c74424080200.  mov dword [rsp + 8], 2
0x00005a89      807c240d00     cmp byte [rsp + 0xd], 0
0x00005a8e      7410           je 0x5aa0
0x00005a90      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00005a92      b804000000     mov eax, 4
0x00005a97      0f44442408     cmove eax, dword [rsp + 8]
0x00005a9c      89442408       mov dword [rsp + 8], eax
0x00005aa0      4883ec08       sub rsp, 8
0x00005aa4      4889e9         mov rcx, rbp
0x00005aa7      4c89ee         mov rsi, r13
0x00005aaa      ff742468       push qword [rsp + 0x68]
0x00005aae      ff742478       push qword [rsp + 0x78]
0x00005ab2      4c89f7         mov rdi, r14
0x00005ab5      6a00           push 0
0x00005ab7      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00005abf      448b442428     mov r8d, dword [rsp + 0x28]
0x00005ac4      488b542430     mov rdx, qword [rsp + 0x30]
0x00005ac9      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x00005acd      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00005ad2      4883c420       add rsp, 0x20
0x00005ad6      4989c7         mov r15, rax
0x00005ad9      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00005ae1      6448331c2528.  xor rbx, qword fs:[0x28]
0x00005aea      4c89f8         mov rax, r15
0x00005aed      0f8500060000   jne 0x60f3
0x00005af3      4881c4b80000.  add rsp, 0xb8
0x00005afa      5b             pop rbx
0x00005afb      5d             pop rbp
0x00005afc      415c           pop r12
0x00005afe      415d           pop r13
0x00005b00      415e           pop r14
0x00005b02      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00005b04      c3             ret
0x00005b05      0f1f00         nop dword [rax]
0x00005b08      4c89dd         mov rbp, r11
0x00005b0b      e979ffffff     jmp 0x5a89
0x00005b10      4d39fd         cmp r13, r15
0x00005b13      7605           jbe 0x5b1a
0x00005b15      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00005b1a      498d4701       lea rax, [r15 + 1]
0x00005b1e      4939c5         cmp r13, rax
0x00005b21      7606           jbe 0x5b29
0x00005b23      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00005b29      498d4702       lea rax, [r15 + 2]
0x00005b2d      4939c5         cmp r13, rax
0x00005b30      0f86ec050000   jbe 0x6122
0x00005b36      4c89ea         mov rdx, r13
0x00005b39      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00005b3f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00005b44      e9d9fbffff     jmp 0x5722
0x00005b49      4489e0         mov eax, r12d
0x00005b4c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00005b51      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00005b54      e900f6ffff     jmp 0x5159                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00005b59      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00005b5f      e9c5f9ffff     jmp 0x5529
0x00005b64      85db           test ebx, ebx
0x00005b66      0f8527f4ffff   jne 0x4f93
0x00005b6c      c644240d01     mov byte [rsp + 0xd], 1
0x00005b71      4d85ed         test r13, r13
0x00005b74      0f8590050000   jne 0x610a
0x00005b7a      488d05542a00.  lea rax, [0x000085d5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005b81      48c744245000.  mov qword [rsp + 0x50], 0
0x00005b8a      c644240e01     mov byte [rsp + 0xe], 1
0x00005b8f      c644247c00     mov byte [rsp + 0x7c], 0
0x00005b94      4531e4         xor r12d, r12d
0x00005b97      c644240f00     mov byte [rsp + 0xf], 0
0x00005b9c      48c744241801.  mov qword [rsp + 0x18], 1
0x00005ba5      4889442448     mov qword [rsp + 0x48], rax
0x00005baa      41bf01000000   mov r15d, 1
0x00005bb0      c74424080200.  mov dword [rsp + 8], 2
0x00005bb8      e916f4ffff     jmp 0x4fd3                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x00005bbd      0f1f00         nop dword [rax]
0x00005bc0      85db           test ebx, ebx
0x00005bc2      0f85f5030000   jne 0x5fbd
0x00005bc8      4d85ed         test r13, r13
0x00005bcb      0f8425020000   je 0x5df6
0x00005bd1      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00005bd5      c644240e01     mov byte [rsp + 0xe], 1
0x00005bda      4531e4         xor r12d, r12d
0x00005bdd      c644247c00     mov byte [rsp + 0x7c], 0
0x00005be2      48c744245000.  mov qword [rsp + 0x50], 0
0x00005beb      488d05e12900.  lea rax, str.l______l                   ; 0x85d3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005bf2      c644240f00     mov byte [rsp + 0xf], 0
0x00005bf7      c644240d01     mov byte [rsp + 0xd], 1
0x00005bfc      48c744241801.  mov qword [rsp + 0x18], 1
0x00005c05      41bf01000000   mov r15d, 1
0x00005c0b      4889442448     mov qword [rsp + 0x48], rax
0x00005c10      e9bef3ffff     jmp 0x4fd3
0x00005c15      488d05b72900.  lea rax, str.l______l                   ; 0x85d3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005c1c      c644240e01     mov byte [rsp + 0xe], 1
0x00005c21      c644247c00     mov byte [rsp + 0x7c], 0
0x00005c26      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00005c29      48c744245000.  mov qword [rsp + 0x50], 0
0x00005c32      c644240f01     mov byte [rsp + 0xf], 1
0x00005c37      c644240d01     mov byte [rsp + 0xd], 1
0x00005c3c      48c744241801.  mov qword [rsp + 0x18], 1
0x00005c45      4531ff         xor r15d, r15d
0x00005c48      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x00005c4d      c74424080500.  mov dword [rsp + 8], 5
0x00005c55      e979f3ffff     jmp 0x4fd3
0x00005c5a      c644240e01     mov byte [rsp + 0xe], 1
0x00005c5f      c644247c00     mov byte [rsp + 0x7c], 0
0x00005c64      4531e4         xor r12d, r12d
0x00005c67      48c744245000.  mov qword [rsp + 0x50], 0
0x00005c70      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00005c75      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00005c78      c644240d01     mov byte [rsp + 0xd], 1
0x00005c7d      48c744241800.  mov qword [rsp + 0x18], 0
0x00005c86      48c744244800.  mov qword [rsp + 0x48], 0
0x00005c8f      e93ff3ffff     jmp 0x4fd3
0x00005c94      837c24080a     cmp dword [rsp + 8], 0xa
0x00005c99      7456           je 0x5cf1
0x00005c9b      488d35352900.  lea rsi, [0x000085d7]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00005ca2      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00005ca4      ba05000000     mov edx, 5
0x00005ca9      e8b2b9ffff     call sym.imp.dcgettext
0x00005cae      4889c1         mov rcx, rax
0x00005cb1      4889442468     mov qword [rsp + 0x68], rax
0x00005cb6      488d051a2900.  lea rax, [0x000085d7]                   ; "`"
0x00005cbd      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00005cc0      0f8498030000   je 0x605e
0x00005cc6      488d35082900.  lea rsi, [0x000085d5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005ccd      31ff           xor edi, edi
0x00005ccf      ba05000000     mov edx, 5
0x00005cd4      e887b9ffff     call sym.imp.dcgettext
0x00005cd9      4889c1         mov rcx, rax
0x00005cdc      4889442460     mov qword [rsp + 0x60], rax
0x00005ce1      488d05ed2800.  lea rax, [0x000085d5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005ce8      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x00005ceb      0f8483030000   je 0x6074
0x00005cf1      4531ff         xor r15d, r15d
0x00005cf4      85db           test ebx, ebx
0x00005cf6      0f84c1010000   je 0x5ebd
0x00005cfc      85db           test ebx, ebx
0x00005cfe      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00005d03      0f9544240f     setne byte [rsp + 0xf]
0x00005d08      4531e4         xor r12d, r12d
0x00005d0b      4889df         mov rdi, rbx
0x00005d0e      e86db9ffff     call sym.imp.strlen
0x00005d13      48895c2448     mov qword [rsp + 0x48], rbx
0x00005d18      4889442418     mov qword [rsp + 0x18], rax
0x00005d1d      c644240e01     mov byte [rsp + 0xe], 1
0x00005d22      c644247c00     mov byte [rsp + 0x7c], 0
0x00005d27      48c744245000.  mov qword [rsp + 0x50], 0
0x00005d30      c644240d01     mov byte [rsp + 0xd], 1
0x00005d35      e999f2ffff     jmp 0x4fd3
0x00005d3a      c644240e01     mov byte [rsp + 0xe], 1
0x00005d3f      c644247c00     mov byte [rsp + 0x7c], 0
0x00005d44      4531e4         xor r12d, r12d
0x00005d47      48c744245000.  mov qword [rsp + 0x50], 0
0x00005d50      c644240f00     mov byte [rsp + 0xf], 0
0x00005d55      4531ff         xor r15d, r15d
0x00005d58      c644240d00     mov byte [rsp + 0xd], 0
0x00005d5d      48c744241800.  mov qword [rsp + 0x18], 0
0x00005d66      48c744244800.  mov qword [rsp + 0x48], 0
0x00005d6f      e95ff2ffff     jmp 0x4fd3
0x00005d74      c644240e01     mov byte [rsp + 0xe], 1
0x00005d79      c644247c00     mov byte [rsp + 0x7c], 0
0x00005d7e      4531e4         xor r12d, r12d
0x00005d81      48c744245000.  mov qword [rsp + 0x50], 0
0x00005d8a      c644240f01     mov byte [rsp + 0xf], 1
0x00005d8f      c644240d01     mov byte [rsp + 0xd], 1
0x00005d94      e91af2ffff     jmp 0x4fb3
0x00005d99      4d39fd         cmp r13, r15
0x00005d9c      7605           jbe 0x5da3
0x00005d9e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00005da3      488d4102       lea rax, [rcx + 2]
0x00005da7      4939c5         cmp r13, rax
0x00005daa      7606           jbe 0x5db2
0x00005dac      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00005db2      4489e0         mov eax, r12d
0x00005db5      4c8d7903       lea r15, [rcx + 3]
0x00005db9      4531e4         xor r12d, r12d
0x00005dbc      bb30000000     mov ebx, 0x30                           ; '0'
0x00005dc1      e962f3ffff     jmp 0x5128
0x00005dc6      662e0f1f8400.  nop word cs:[rax + rax]
0x00005dd0      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00005dd5      4c89dd         mov rbp, r11
0x00005dd8      885c240d       mov byte [rsp + 0xd], bl
0x00005ddc      e9a8fcffff     jmp 0x5a89
0x00005de1      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00005de6      4531e4         xor r12d, r12d
0x00005de9      e902fbffff     jmp 0x58f0
0x00005dee      4531d2         xor r10d, r10d
0x00005df1      e9b7fbffff     jmp 0x59ad
0x00005df6      48c744245000.  mov qword [rsp + 0x50], 0
0x00005dff      c644240e01     mov byte [rsp + 0xe], 1
0x00005e04      4531e4         xor r12d, r12d
0x00005e07      c644247c00     mov byte [rsp + 0x7c], 0
0x00005e0c      e9dafdffff     jmp 0x5beb
0x00005e11      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00005e16      4c89f6         mov rsi, r14
0x00005e19      4c89e9         mov rcx, r13
0x00005e1c      4889d8         mov rax, rbx
0x00005e1f      4889df         mov rdi, rbx
0x00005e22      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00005e28      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00005e2d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00005e35      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00005e38      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00005e3e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00005e46      4c8b742440     mov r14, qword [rsp + 0x40]
0x00005e4b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00005e50      7326           jae 0x5e78
0x00005e52      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00005e55      7510           jne 0x5e67
0x00005e57      eb1f           jmp 0x5e78
0x00005e59      0f1f80000000.  nop dword [rax]
0x00005e60      41803c0100     cmp byte [r9 + rax], 0
0x00005e65      740e           je 0x5e75
0x00005e67      4883c001       add rax, 1
0x00005e6b      488d540500     lea rdx, [rbp + rax]
0x00005e70      4939d3         cmp r11, rdx
0x00005e73      77eb           ja 0x5e60
0x00005e75      4889c7         mov rdi, rax
0x00005e78      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00005e7d      4531e4         xor r12d, r12d
0x00005e80      e961faffff     jmp 0x58e6
0x00005e85      4889df         mov rdi, rbx
0x00005e88      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00005e8e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00005e93      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00005e99      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00005ea1      4531e4         xor r12d, r12d
0x00005ea4      4c8b742440     mov r14, qword [rsp + 0x40]
0x00005ea9      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00005eae      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00005eb3      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00005eb8      e929faffff     jmp 0x58e6
0x00005ebd      488b542468     mov rdx, qword [rsp + 0x68]
0x00005ec2      0fb602         movzx eax, byte [rdx]
0x00005ec5      84c0           test al, al
0x00005ec7      0f842ffeffff   je 0x5cfc
0x00005ecd      0f1f00         nop dword [rax]
0x00005ed0      4d39fd         cmp r13, r15
0x00005ed3      7604           jbe 0x5ed9
0x00005ed5      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00005ed9      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x00005edd      420fb6043a     movzx eax, byte [rdx + r15]
0x00005ee2      84c0           test al, al
0x00005ee4      75ea           jne 0x5ed0
0x00005ee6      e911feffff     jmp 0x5cfc
0x00005eeb      89d0           mov eax, edx
0x00005eed      e955f5ffff     jmp 0x5447
0x00005ef2      0fb61c08       movzx ebx, byte [rax + rcx]
0x00005ef6      80fb3e         cmp bl, 0x3e
0x00005ef9      0f8771f8ffff   ja 0x5770
0x00005eff      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00005f09      480fa3d8       bt rax, rbx
0x00005f0d      0f835df8ffff   jae 0x5770
0x00005f13      807c240f00     cmp byte [rsp + 0xf], 0
0x00005f18      0f85e4010000   jne 0x6102                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x00005f1e      4d39fd         cmp r13, r15
0x00005f21      7605           jbe 0x5f28
0x00005f23      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00005f28      498d4701       lea rax, [r15 + 1]
0x00005f2c      4939c5         cmp r13, rax
0x00005f2f      7606           jbe 0x5f37
0x00005f31      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00005f37      498d4702       lea rax, [r15 + 2]
0x00005f3b      4939c5         cmp r13, rax
0x00005f3e      7606           jbe 0x5f46
0x00005f40      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00005f46      498d4703       lea rax, [r15 + 3]
0x00005f4a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x00005f4d      7606           jbe 0x5f55
0x00005f4f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00005f55      4983c704       add r15, 4
0x00005f59      31d2           xor edx, edx
0x00005f5b      4531e4         xor r12d, r12d
0x00005f5e      31c0           xor eax, eax
0x00005f60      4889cd         mov rbp, rcx
0x00005f63      e9c0f1ffff     jmp 0x5128
0x00005f68      85db           test ebx, ebx
0x00005f6a      0f8488010000   je 0x60f8
0x00005f70      488d055e2600.  lea rax, [0x000085d5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005f77      c644240e01     mov byte [rsp + 0xe], 1
0x00005f7c      c644247c00     mov byte [rsp + 0x7c], 0
0x00005f81      4531e4         xor r12d, r12d
0x00005f84      48c744245000.  mov qword [rsp + 0x50], 0
0x00005f8d      c644240f01     mov byte [rsp + 0xf], 1
0x00005f92      c644240d00     mov byte [rsp + 0xd], 0
0x00005f97      48c744241801.  mov qword [rsp + 0x18], 1
0x00005fa0      4531ff         xor r15d, r15d
0x00005fa3      4889442448     mov qword [rsp + 0x48], rax
0x00005fa8      e926f0ffff     jmp 0x4fd3
0x00005fad      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00005fb0      4c89dd         mov rbp, r11
0x00005fb3      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00005fb8      e9ccfaffff     jmp 0x5a89
0x00005fbd      488d050f2600.  lea rax, str.l______l                   ; 0x85d3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005fc4      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00005fc9      c644247c00     mov byte [rsp + 0x7c], 0
0x00005fce      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00005fd1      48c744245000.  mov qword [rsp + 0x50], 0
0x00005fda      c644240f01     mov byte [rsp + 0xf], 1
0x00005fdf      c644240d01     mov byte [rsp + 0xd], 1
0x00005fe4      48c744241801.  mov qword [rsp + 0x18], 1
0x00005fed      4531ff         xor r15d, r15d
0x00005ff0      4889442448     mov qword [rsp + 0x48], rax
0x00005ff5      e9d9efffff     jmp 0x4fd3
0x00005ffa      89d0           mov eax, edx
0x00005ffc      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00006001      4885db         test rbx, rbx
0x00006004      742c           je 0x6032
0x00006006      84c0           test al, al
0x00006008      7428           je 0x6032
0x0000600a      0fb60b         movzx ecx, byte [rbx]
0x0000600d      4889d8         mov rax, rbx
0x00006010      84c9           test cl, cl
0x00006012      741e           je 0x6032
0x00006014      4c89fa         mov rdx, r15
0x00006017      4c29f8         sub rax, r15
0x0000601a      4939d5         cmp r13, rdx
0x0000601d      7604           jbe 0x6023
0x0000601f      41880c16       mov byte [r14 + rdx], cl
0x00006023      4883c201       add rdx, 1
0x00006027      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000602b      84c9           test cl, cl
0x0000602d      75eb           jne 0x601a
0x0000602f      4989d7         mov r15, rdx
0x00006032      4d39fd         cmp r13, r15
0x00006035      0f869efaffff   jbe 0x5ad9
0x0000603b      43c6043e00     mov byte [r14 + r15], 0
0x00006040      e994faffff     jmp 0x5ad9
0x00006045      837c240802     cmp dword [rsp + 8], 2
0x0000604a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000604f      4c89dd         mov rbp, r11
0x00006052      0f94c0         sete al
0x00006055      885c240d       mov byte [rsp + 0xd], bl
0x00006059      e92bfaffff     jmp 0x5a89
0x0000605e      8b742408       mov esi, dword [rsp + 8]
0x00006062      4889cf         mov rdi, rcx
0x00006065      e8a6edffff     call sym.gettext_quote.part.1
0x0000606a      4889442468     mov qword [rsp + 0x68], rax
0x0000606f      e952fcffff     jmp 0x5cc6
0x00006074      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00006078      4889cf         mov rdi, rcx
0x0000607b      e890edffff     call sym.gettext_quote.part.1
0x00006080      4889442460     mov qword [rsp + 0x60], rax
0x00006085      e967fcffff     jmp 0x5cf1
0x0000608a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000608f      4c89dd         mov rbp, r11
0x00006092      89d0           mov eax, edx
0x00006094      885c240d       mov byte [rsp + 0xd], bl
0x00006098      e9ecf9ffff     jmp 0x5a89
0x0000609d      4883ec08       sub rsp, 8
0x000060a1      41b805000000   mov r8d, 5
0x000060a7      4c89d9         mov rcx, r11
0x000060aa      ff742468       push qword [rsp + 0x68]
0x000060ae      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x000060b2      4c89f7         mov rdi, r14
0x000060b5      ff742438       push qword [rsp + 0x38]
0x000060b9      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000060c1      488b542430     mov rdx, qword [rsp + 0x30]
0x000060c6      488b742470     mov rsi, qword [rsp + 0x70]
0x000060cb      e830eeffff     call sym.quotearg_buffer_restyled
0x000060d0      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x000060d4      4989c7         mov r15, rax
0x000060d7      e9fdf9ffff     jmp 0x5ad9
0x000060dc      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x000060e1      e916ffffff     jmp 0x5ffc
0x000060e6      c74424080200.  mov dword [rsp + 8], 2
0x000060ee      e996f9ffff     jmp 0x5a89
0x000060f3      e898b5ffff     call sym.imp.__stack_chk_fail
0x000060f8      c644240d00     mov byte [rsp + 0xd], 0
0x000060fd      e96ffaffff     jmp 0x5b71
0x00006102      4c89dd         mov rbp, r11
0x00006105      e996f9ffff     jmp 0x5aa0
0x0000610a      c644240e01     mov byte [rsp + 0xe], 1
0x0000610f      31c0           xor eax, eax
0x00006111      4531e4         xor r12d, r12d
0x00006114      48c744245000.  mov qword [rsp + 0x50], 0
0x0000611d      e9a2f5ffff     jmp 0x56c4
0x00006122      4c89ea         mov rdx, r13
0x00006125      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000612a      e9f3f5ffff     jmp 0x5722
0x0000612f      e88cb4ffff     call sym.imp.abort
0x00006134      6690           nop
0x00006136      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00006140      4157           push r15
0x00006142      4156           push r14
0x00006144      4c63ff         movsxd r15, edi
0x00006147      4155           push r13
0x00006149      4154           push r12
0x0000614b      4989d6         mov r14, rdx
0x0000614e      55             push rbp
0x0000614f      53             push rbx
0x00006150      4889cd         mov rbp, rcx
0x00006153      4883ec28       sub rsp, 0x28
0x00006157      4889742408     mov qword [rsp + 8], rsi
0x0000615c      e86fb4ffff     call sym.imp.__errno_location
0x00006161      4989c5         mov r13, rax
0x00006164      8b00           mov eax, dword [rax]
0x00006166      4585ff         test r15d, r15d
0x00006169      488b1d104f20.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x20b080:8]=0x20b090 obj.slotvec0
0x00006170      89442418       mov dword [rsp + 0x18], eax
0x00006174      0f8867010000   js 0x62e1
0x0000617a      44393df74e20.  cmp dword [obj.nslots], r15d            ; [0x20b078:4]=1
0x00006181      7f62           jg 0x61e5
0x00006183      4181ffffffff.  cmp r15d, 0x7fffffff
0x0000618a      0f8456010000   je 0x62e6
0x00006190      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00006194      488d05f54e20.  lea rax, obj.slotvec0                   ; 0x20b090
0x0000619b      4963f4         movsxd rsi, r12d
0x0000619e      48c1e604       shl rsi, 4
0x000061a2      4839c3         cmp rbx, rax
0x000061a5      0f8415010000   je 0x62c0
0x000061ab      4889df         mov rdi, rbx
0x000061ae      e87d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x000061b3      4889c3         mov rbx, rax
0x000061b6      488905c34e20.  mov qword [obj.slotvec], rax            ; [0x20b080:8]=0x20b090 obj.slotvec0
0x000061bd      48633db44e20.  movsxd rdi, dword [obj.nslots]          ; [0x20b078:4]=1
0x000061c4      4489e2         mov edx, r12d
0x000061c7      31f6           xor esi, esi
0x000061c9      29fa           sub edx, edi
0x000061cb      48c1e704       shl rdi, 4
0x000061cf      4863d2         movsxd rdx, edx
0x000061d2      4801df         add rdi, rbx
0x000061d5      48c1e204       shl rdx, 4
0x000061d9      e822b5ffff     call sym.imp.memset
0x000061de      448925934e20.  mov dword [obj.nslots], r12d            ; [0x20b078:4]=1
0x000061e5      8b4504         mov eax, dword [rbp + 4]
0x000061e8      49c1e704       shl r15, 4
0x000061ec      4883ec08       sub rsp, 8
0x000061f0      4c01fb         add rbx, r15
0x000061f3      4c8d7d08       lea r15, [rbp + 8]
0x000061f7      448b4500       mov r8d, dword [rbp]
0x000061fb      4c8b1b         mov r11, qword [rbx]
0x000061fe      4c8b6308       mov r12, qword [rbx + 8]
0x00006202      4c89f1         mov rcx, r14
0x00006205      83c801         or eax, 1
0x00006208      89442424       mov dword [rsp + 0x24], eax
0x0000620c      ff7530         push qword [rbp + 0x30]
0x0000620f      4189c1         mov r9d, eax
0x00006212      ff7528         push qword [rbp + 0x28]
0x00006215      4157           push r15
0x00006217      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000621a      488b542428     mov rdx, qword [rsp + 0x28]
0x0000621f      4c89e7         mov rdi, r12
0x00006222      4c895c2430     mov qword [rsp + 0x30], r11
0x00006227      e8d4ecffff     call sym.quotearg_buffer_restyled
0x0000622c      4883c420       add rsp, 0x20
0x00006230      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00006235      4939c3         cmp r11, rax
0x00006238      7767           ja 0x62a1
0x0000623a      488d7001       lea rsi, [rax + 1]
0x0000623e      488d05fb4e20.  lea rax, obj.slot0                      ; 0x20b140
0x00006245      4939c4         cmp r12, rax
0x00006248      488933         mov qword [rbx], rsi
0x0000624b      7412           je 0x625f
0x0000624d      4c89e7         mov rdi, r12
0x00006250      4889742410     mov qword [rsp + 0x10], rsi
0x00006255      e856b3ffff     call sym.imp.free
0x0000625a      488b742410     mov rsi, qword [rsp + 0x10]
0x0000625f      4889f7         mov rdi, rsi
0x00006262      4889742410     mov qword [rsp + 0x10], rsi
0x00006267      e8640e0000     call sym.xmalloc
0x0000626c      4883ec08       sub rsp, 8
0x00006270      48894308       mov qword [rbx + 8], rax
0x00006274      448b4500       mov r8d, dword [rbp]
0x00006278      ff7530         push qword [rbp + 0x30]
0x0000627b      ff7528         push qword [rbp + 0x28]
0x0000627e      4c89f1         mov rcx, r14
0x00006281      4157           push r15
0x00006283      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00006288      4889c7         mov rdi, rax
0x0000628b      488b542428     mov rdx, qword [rsp + 0x28]
0x00006290      488b742430     mov rsi, qword [rsp + 0x30]
0x00006295      4989c4         mov r12, rax
0x00006298      e863ecffff     call sym.quotearg_buffer_restyled
0x0000629d      4883c420       add rsp, 0x20
0x000062a1      8b442418       mov eax, dword [rsp + 0x18]
0x000062a5      41894500       mov dword [r13], eax
0x000062a9      4883c428       add rsp, 0x28
0x000062ad      4c89e0         mov rax, r12
0x000062b0      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x000062b1      5d             pop rbp
0x000062b2      415c           pop r12
0x000062b4      415d           pop r13
0x000062b6      415e           pop r14
0x000062b8      415f           pop r15
0x000062ba      c3             ret
0x000062bb      0f1f440000     nop dword [rax + rax]
0x000062c0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x000062c2      e8690e0000     call sym.xrealloc
0x000062c7      660f6f05c14d.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x000062cf      4889c3         mov rbx, rax
0x000062d2      488905a74d20.  mov qword [obj.slotvec], rax            ; [0x20b080:8]=0x20b090 obj.slotvec0
0x000062d9      0f1100         movups xmmword [rax], xmm0
0x000062dc      e9dcfeffff     jmp 0x61bd
0x000062e1      e8dab2ffff     call sym.imp.abort
0x000062e6      e835100000     call sym.xalloc_die
0x000062eb      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x000062f0      4154           push r12
0x000062f2      55             push rbp
0x000062f3      53             push rbx
0x000062f4      4889fb         mov rbx, rdi
0x000062f7      e8d4b2ffff     call sym.imp.__errno_location
0x000062fc      448b20         mov r12d, dword [rax]
0x000062ff      4889c5         mov rbp, rax
0x00006302      488d05374f20.  lea rax, obj.default_quoting_options    ; 0x20b240
0x00006309      4885db         test rbx, rbx
0x0000630c      be38000000     mov esi, 0x38                           ; '8'
0x00006311      480f44d8       cmove rbx, rax
0x00006315      4889df         mov rdi, rbx
0x00006318      e8b30f0000     call sym.xmemdup
0x0000631d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00006321      5b             pop rbx
0x00006322      5d             pop rbp
0x00006323      415c           pop r12
0x00006325      c3             ret
0x00006326      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00006330      488d05094f20.  lea rax, obj.default_quoting_options    ; 0x20b240
0x00006337      4885ff         test rdi, rdi
0x0000633a      480f44f8       cmove rdi, rax
0x0000633e      8b07           mov eax, dword [rdi]
0x00006340      c3             ret
0x00006341      0f1f440000     nop dword [rax + rax]
0x00006346      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00006350      488d05e94e20.  lea rax, obj.default_quoting_options    ; 0x20b240
0x00006357      4885ff         test rdi, rdi
0x0000635a      480f44f8       cmove rdi, rax
0x0000635e      8937           mov dword [rdi], esi
0x00006360      c3             ret
0x00006361      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00006366      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00006370      488d05c94e20.  lea rax, obj.default_quoting_options    ; 0x20b240
0x00006377      4885ff         test rdi, rdi
0x0000637a      89f1           mov ecx, esi
0x0000637c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00006380      89f0           mov eax, esi
0x00006382      83e11f         and ecx, 0x1f
0x00006385      c0e805         shr al, 5
0x00006388      0fb6c0         movzx eax, al
0x0000638b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00006390      8b37           mov esi, dword [rdi]
0x00006392      89f0           mov eax, esi
0x00006394      d3e8           shr eax, cl
0x00006396      31c2           xor edx, eax
0x00006398      83e001         and eax, 1
0x0000639b      83e201         and edx, 1
0x0000639e      d3e2           shl edx, cl
0x000063a0      31f2           xor edx, esi
0x000063a2      8917           mov dword [rdi], edx
0x000063a4      c3             ret
0x000063a5      90             nop
0x000063a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x000063b0      488d05894e20.  lea rax, obj.default_quoting_options    ; 0x20b240
0x000063b7      4885ff         test rdi, rdi
0x000063ba      480f44f8       cmove rdi, rax
0x000063be      8b4704         mov eax, dword [rdi + 4]
0x000063c1      897704         mov dword [rdi + 4], esi
0x000063c4      c3             ret
0x000063c5      90             nop
0x000063c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x000063d0      488d05694e20.  lea rax, obj.default_quoting_options    ; 0x20b240
0x000063d7      4885ff         test rdi, rdi
0x000063da      480f44f8       cmove rdi, rax
0x000063de      4885f6         test rsi, rsi
0x000063e1      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x000063e7      740e           je 0x63f7
0x000063e9      4885d2         test rdx, rdx
0x000063ec      7409           je 0x63f7
0x000063ee      48897728       mov qword [rdi + 0x28], rsi
0x000063f2      48895730       mov qword [rdi + 0x30], rdx
0x000063f6      c3             ret
0x000063f7      4883ec08       sub rsp, 8
0x000063fb      e8c0b1ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00006400      4157           push r15
0x00006402      4156           push r14
0x00006404      488d05354e20.  lea rax, obj.default_quoting_options    ; 0x20b240
0x0000640b      4155           push r13
0x0000640d      4154           push r12
0x0000640f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00006412      55             push rbp
0x00006413      53             push rbx
0x00006414      4c89c3         mov rbx, r8
0x00006417      4989f6         mov r14, rsi
0x0000641a      4989d7         mov r15, rdx
0x0000641d      4883ec18       sub rsp, 0x18
0x00006421      4d85c0         test r8, r8
0x00006424      480f44d8       cmove rbx, rax
0x00006428      48894c2408     mov qword [rsp + 8], rcx
0x0000642d      e89eb1ffff     call sym.imp.__errno_location
0x00006432      448b20         mov r12d, dword [rax]
0x00006435      4889c5         mov rbp, rax
0x00006438      488d4308       lea rax, [rbx + 8]
0x0000643c      4883ec08       sub rsp, 8
0x00006440      448b4b04       mov r9d, dword [rbx + 4]
0x00006444      ff7330         push qword [rbx + 0x30]
0x00006447      448b03         mov r8d, dword [rbx]
0x0000644a      ff7328         push qword [rbx + 0x28]
0x0000644d      4c89fa         mov rdx, r15
0x00006450      50             push rax
0x00006451      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00006456      4c89f6         mov rsi, r14
0x00006459      4c89ef         mov rdi, r13
0x0000645c      e89feaffff     call sym.quotearg_buffer_restyled
0x00006461      44896500       mov dword [rbp], r12d
0x00006465      4883c438       add rsp, 0x38
0x00006469      5b             pop rbx
0x0000646a      5d             pop rbp
0x0000646b      415c           pop r12
0x0000646d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000646f      415e           pop r14
0x00006471      415f           pop r15
0x00006473      c3             ret
0x00006474      6690           nop
0x00006476      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00006480      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00006482      4156           push r14
0x00006484      488d05b54d20.  lea rax, obj.default_quoting_options    ; 0x20b240
0x0000648b      4155           push r13
0x0000648d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x0000648f      4989d4         mov r12, rdx
0x00006492      55             push rbp
0x00006493      53             push rbx
0x00006494      4889cb         mov rbx, rcx
0x00006497      4989fe         mov r14, rdi
0x0000649a      4989f7         mov r15, rsi
0x0000649d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x000064a1      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x000064a4      480f44d8       cmove rbx, rax
0x000064a8      31ed           xor ebp, ebp
0x000064aa      e821b1ffff     call sym.imp.__errno_location
0x000064af      4d85e4         test r12, r12
0x000064b2      4989c5         mov r13, rax
0x000064b5      8b00           mov eax, dword [rax]
0x000064b7      400f94c5       sete bpl
0x000064bb      0b6b04         or ebp, dword [rbx + 4]
0x000064be      4c8d5308       lea r10, [rbx + 8]
0x000064c2      4883ec08       sub rsp, 8
0x000064c6      448b03         mov r8d, dword [rbx]
0x000064c9      4c89f9         mov rcx, r15
0x000064cc      89442414       mov dword [rsp + 0x14], eax
0x000064d0      ff7330         push qword [rbx + 0x30]
0x000064d3      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x000064d6      ff7328         push qword [rbx + 0x28]
0x000064d9      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x000064db      31f6           xor esi, esi
0x000064dd      4189e9         mov r9d, ebp
0x000064e0      31ff           xor edi, edi
0x000064e2      4c89542440     mov qword [rsp + 0x40], r10
0x000064e7      e814eaffff     call sym.quotearg_buffer_restyled
0x000064ec      488d7001       lea rsi, [rax + 1]
0x000064f0      4889442448     mov qword [rsp + 0x48], rax
0x000064f5      4883c420       add rsp, 0x20
0x000064f9      4889f7         mov rdi, rsi
0x000064fc      4889742418     mov qword [rsp + 0x18], rsi
0x00006501      e8ca0b0000     call sym.xmalloc
0x00006506      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x0000650b      4883ec08       sub rsp, 8
0x0000650f      ff7330         push qword [rbx + 0x30]
0x00006512      ff7328         push qword [rbx + 0x28]
0x00006515      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000651a      4189e9         mov r9d, ebp
0x0000651d      448b03         mov r8d, dword [rbx]
0x00006520      4c89f9         mov rcx, r15
0x00006523      4c89f2         mov rdx, r14
0x00006526      4889c7         mov rdi, rax
0x00006529      4152           push r10
0x0000652b      488b742438     mov rsi, qword [rsp + 0x38]
0x00006530      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00006535      8b44242c       mov eax, dword [rsp + 0x2c]
0x00006539      4883c420       add rsp, 0x20
0x0000653d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00006540      41894500       mov dword [r13], eax
0x00006544      7409           je 0x654f
0x00006546      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000654b      4d891c24       mov qword [r12], r11
0x0000654f      488b442410     mov rax, qword [rsp + 0x10]
0x00006554      4883c438       add rsp, 0x38
0x00006558      5b             pop rbx
0x00006559      5d             pop rbp
0x0000655a      415c           pop r12
0x0000655c      415d           pop r13
0x0000655e      415e           pop r14
0x00006560      415f           pop r15
0x00006562      c3             ret
0x00006563      0f1f00         nop dword [rax]
0x00006566      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00006570      4889d1         mov rcx, rdx
0x00006573      31d2           xor edx, edx
0x00006575      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000657a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00006580      8b05f24a2000   mov eax, dword [obj.nslots]             ; [0x20b078:4]=1
0x00006586      4154           push r12
0x00006588      4c8b25f14a20.  mov r12, qword [obj.slotvec]            ; [0x20b080:8]=0x20b090 obj.slotvec0
0x0000658f      55             push rbp
0x00006590      53             push rbx
0x00006591      83f801         cmp eax, 1
0x00006594      7e2b           jle 0x65c1                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00006596      83e802         sub eax, 2
0x00006599      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000659e      48c1e004       shl rax, 4
0x000065a2      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x000065a7      660f1f840000.  nop word [rax + rax]
0x000065b0      488b3b         mov rdi, qword [rbx]
0x000065b3      4883c310       add rbx, 0x10
0x000065b7      e8f4afffff     call sym.imp.free
0x000065bc      4839eb         cmp rbx, rbp
0x000065bf      75ef           jne 0x65b0
0x000065c1      498b7c2408     mov rdi, qword [r12 + 8]
0x000065c6      488d1d734b20.  lea rbx, obj.slot0                      ; 0x20b140
0x000065cd      4839df         cmp rdi, rbx
0x000065d0      7417           je 0x65e9
0x000065d2      e8d9afffff     call sym.imp.free
0x000065d7      48c705ae4a20.  mov qword [obj.slotvec0], 0x100         ; [0x20b090:8]=256
0x000065e2      48891daf4a20.  mov qword [0x0020b098], rbx             ; [0x20b098:8]=0x20b140 obj.slot0
0x000065e9      488d1da04a20.  lea rbx, obj.slotvec0                   ; 0x20b090
0x000065f0      4939dc         cmp r12, rbx
0x000065f3      740f           je 0x6604
0x000065f5      4c89e7         mov rdi, r12
0x000065f8      e8b3afffff     call sym.imp.free
0x000065fd      48891d7c4a20.  mov qword [obj.slotvec], rbx            ; [0x20b080:8]=0x20b090 obj.slotvec0
0x00006604      5b             pop rbx
0x00006605      c705694a2000.  mov dword [obj.nslots], 1               ; [0x20b078:4]=1
0x0000660f      5d             pop rbp
0x00006610      415c           pop r12
0x00006612      c3             ret
0x00006613      0f1f00         nop dword [rax]
0x00006616      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00006620      488d0d194c20.  lea rcx, obj.default_quoting_options    ; 0x20b240
0x00006627      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000662e      e90dfbffff     jmp sym.quotearg_n_options
0x00006633      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00006636      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00006640      488d0df94b20.  lea rcx, obj.default_quoting_options    ; 0x20b240
0x00006647      e9f4faffff     jmp sym.quotearg_n_options
0x0000664c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00006650      488d0de94b20.  lea rcx, obj.default_quoting_options    ; 0x20b240
0x00006657      4889fe         mov rsi, rdi
0x0000665a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00006661      31ff           xor edi, edi
0x00006663      e9d8faffff     jmp sym.quotearg_n_options
0x00006668      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00006670      488d0dc94b20.  lea rcx, obj.default_quoting_options    ; 0x20b240
0x00006677      4889f2         mov rdx, rsi
0x0000667a      4889fe         mov rsi, rdi
0x0000667d      31ff           xor edi, edi
0x0000667f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00006684      6690           nop
0x00006686      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00006690      4883ec48       sub rsp, 0x48
0x00006694      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00006697      64488b142528.  mov rdx, qword fs:[0x28]
0x000066a0      4889542438     mov qword [rsp + 0x38], rdx
0x000066a5      31d2           xor edx, edx
0x000066a7      83fe0a         cmp esi, 0xa
0x000066aa      7468           je 0x6714
0x000066ac      893424         mov dword [rsp], esi
0x000066af      4889e1         mov rcx, rsp
0x000066b2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000066b9      4889c6         mov rsi, rax
0x000066bc      48c744240400.  mov qword [rsp + 4], 0
0x000066c5      48c744240c00.  mov qword [rsp + 0xc], 0
0x000066ce      48c744241400.  mov qword [rsp + 0x14], 0
0x000066d7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000066e0      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x000066e9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000066f2      c74424340000.  mov dword [rsp + 0x34], 0
0x000066fa      e841faffff     call sym.quotearg_n_options
0x000066ff      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00006704      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000670d      750a           jne 0x6719                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0000670f      4883c448       add rsp, 0x48
0x00006713      c3             ret
0x00006714      e8a7aeffff     call sym.imp.abort
0x00006719      e872afffff     call sym.imp.__stack_chk_fail
0x0000671e      6690           nop
;-- quotearg_n_style_mem:
0x00006720      4883ec48       sub rsp, 0x48
0x00006724      4889d0         mov rax, rdx
0x00006727      4889ca         mov rdx, rcx
0x0000672a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00006733      48894c2438     mov qword [rsp + 0x38], rcx
0x00006738      31c9           xor ecx, ecx
0x0000673a      83fe0a         cmp esi, 0xa
0x0000673d      7461           je 0x67a0
0x0000673f      893424         mov dword [rsp], esi
0x00006742      4889e1         mov rcx, rsp
0x00006745      4889c6         mov rsi, rax
0x00006748      48c744240400.  mov qword [rsp + 4], 0
0x00006751      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000675a      48c744241400.  mov qword [rsp + 0x14], 0
0x00006763      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000676c      48c744242400.  mov qword [rsp + 0x24], 0
0x00006775      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000677e      c74424340000.  mov dword [rsp + 0x34], 0
0x00006786      e8b5f9ffff     call sym.quotearg_n_options
0x0000678b      488b542438     mov rdx, qword [rsp + 0x38]
0x00006790      644833142528.  xor rdx, qword fs:[0x28]
0x00006799      750a           jne 0x67a5
0x0000679b      4883c448       add rsp, 0x48
0x0000679f      c3             ret
0x000067a0      e81baeffff     call sym.imp.abort
0x000067a5      e8e6aeffff     call sym.imp.__stack_chk_fail
0x000067aa      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x000067b0      4889f2         mov rdx, rsi
0x000067b3      89fe           mov esi, edi
0x000067b5      31ff           xor edi, edi
0x000067b7      e9d4feffff     jmp sym.quotearg_n_style
0x000067bc      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x000067c0      4889d1         mov rcx, rdx
0x000067c3      4889f2         mov rdx, rsi
0x000067c6      89fe           mov esi, edi
0x000067c8      31ff           xor edi, edi
0x000067ca      e951ffffff     jmp sym.quotearg_n_style_mem
0x000067cf      90             nop
;-- quotearg_char_mem:
0x000067d0      4883ec48       sub rsp, 0x48
0x000067d4      89d1           mov ecx, edx
0x000067d6      64488b042528.  mov rax, qword fs:[0x28]
0x000067df      4889442438     mov qword [rsp + 0x38], rax
0x000067e4      31c0           xor eax, eax
0x000067e6      488b05834a20.  mov rax, qword [0x0020b270]             ; [0x20b270:8]=0
0x000067ed      4989e0         mov r8, rsp
0x000067f0      83e11f         and ecx, 0x1f
0x000067f3      660f6f05454a.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x000067fb      4889442430     mov qword [rsp + 0x30], rax
0x00006800      89d0           mov eax, edx
0x00006802      0f290424       movaps xmmword [rsp], xmm0
0x00006806      c0e805         shr al, 5
0x00006809      0fb6c0         movzx eax, al
0x0000680c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00006811      660f6f05374a.  movdqa xmm0, xmmword [0x0020b250]
0x00006819      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000681e      660f6f053a4a.  movdqa xmm0, xmmword [0x0020b260]
0x00006826      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000682b      418b11         mov edx, dword [r9]
0x0000682e      89d0           mov eax, edx
0x00006830      d3e8           shr eax, cl
0x00006832      f7d0           not eax
0x00006834      83e001         and eax, 1
0x00006837      d3e0           shl eax, cl
0x00006839      4c89c1         mov rcx, r8
0x0000683c      31d0           xor eax, edx
0x0000683e      4889f2         mov rdx, rsi
0x00006841      4889fe         mov rsi, rdi
0x00006844      418901         mov dword [r9], eax
0x00006847      31ff           xor edi, edi
0x00006849      e8f2f8ffff     call sym.quotearg_n_options
0x0000684e      488b742438     mov rsi, qword [rsp + 0x38]
0x00006853      644833342528.  xor rsi, qword fs:[0x28]
0x0000685c      7505           jne 0x6863
0x0000685e      4883c448       add rsp, 0x48
0x00006862      c3             ret
0x00006863      e828aeffff     call sym.imp.__stack_chk_fail
0x00006868      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00006870      400fbed6       movsx edx, sil
0x00006874      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000687b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00006880      ba3a000000     mov edx, 0x3a                           ; ':'
0x00006885      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000688c      e93fffffff     jmp sym.quotearg_char_mem
0x00006891      0f1f440000     nop dword [rax + rax]
0x00006896      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x000068a0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000068a5      e926ffffff     jmp sym.quotearg_char_mem
0x000068aa      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x000068b0      4883ec48       sub rsp, 0x48
0x000068b4      4889d0         mov rax, rdx
0x000068b7      64488b142528.  mov rdx, qword fs:[0x28]
0x000068c0      4889542438     mov qword [rsp + 0x38], rdx
0x000068c5      31d2           xor edx, edx
0x000068c7      83fe0a         cmp esi, 0xa
0x000068ca      7468           je 0x6934
0x000068cc      893424         mov dword [rsp], esi
0x000068cf      4889e1         mov rcx, rsp
0x000068d2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000068d9      4889c6         mov rsi, rax
0x000068dc      48c744240400.  mov qword [rsp + 4], 0
0x000068e5      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x000068ee      48c744241400.  mov qword [rsp + 0x14], 0
0x000068f7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00006900      48c744242400.  mov qword [rsp + 0x24], 0
0x00006909      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00006912      c74424340000.  mov dword [rsp + 0x34], 0
0x0000691a      e821f8ffff     call sym.quotearg_n_options
0x0000691f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00006924      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000692d      750a           jne 0x6939
0x0000692f      4883c448       add rsp, 0x48
0x00006933      c3             ret
0x00006934      e887acffff     call sym.imp.abort
0x00006939      e852adffff     call sym.imp.__stack_chk_fail
0x0000693e      6690           nop
;-- quotearg_n_custom_mem:
0x00006940      4883ec48       sub rsp, 0x48
0x00006944      4989c9         mov r9, rcx
0x00006947      488b0d224920.  mov rcx, qword [0x0020b270]             ; [0x20b270:8]=0
0x0000694e      660f6f05ea48.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00006956      64488b042528.  mov rax, qword fs:[0x28]
0x0000695f      4889442438     mov qword [rsp + 0x38], rax
0x00006964      31c0           xor eax, eax
0x00006966      0f290424       movaps xmmword [rsp], xmm0
0x0000696a      4885f6         test rsi, rsi
0x0000696d      48894c2430     mov qword [rsp + 0x30], rcx
0x00006972      c704240a0000.  mov dword [rsp], 0xa
0x00006979      660f6f05cf48.  movdqa xmm0, xmmword [0x0020b250]
0x00006981      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00006986      660f6f05d248.  movdqa xmm0, xmmword [0x0020b260]
0x0000698e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00006993      7432           je 0x69c7
0x00006995      4885d2         test rdx, rdx
0x00006998      742d           je 0x69c7
0x0000699a      4889742428     mov qword [rsp + 0x28], rsi
0x0000699f      4889542430     mov qword [rsp + 0x30], rdx
0x000069a4      4889e1         mov rcx, rsp
0x000069a7      4c89c2         mov rdx, r8
0x000069aa      4c89ce         mov rsi, r9
0x000069ad      e88ef7ffff     call sym.quotearg_n_options
0x000069b2      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000069b7      6448333c2528.  xor rdi, qword fs:[0x28]
0x000069c0      750a           jne 0x69cc
0x000069c2      4883c448       add rsp, 0x48
0x000069c6      c3             ret
0x000069c7      e8f4abffff     call sym.imp.abort
0x000069cc      e8bfacffff     call sym.imp.__stack_chk_fail
0x000069d1      0f1f440000     nop dword [rax + rax]
0x000069d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x000069e0      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x000069e7      e954ffffff     jmp sym.quotearg_n_custom_mem
0x000069ec      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x000069f0      4889d1         mov rcx, rdx
0x000069f3      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x000069fa      4889f2         mov rdx, rsi
0x000069fd      4889fe         mov rsi, rdi
0x00006a00      31ff           xor edi, edi
0x00006a02      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00006a07      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00006a10      4989c8         mov r8, rcx
0x00006a13      4889d1         mov rcx, rdx
0x00006a16      4889f2         mov rdx, rsi
0x00006a19      4889fe         mov rsi, rdi
0x00006a1c      31ff           xor edi, edi
0x00006a1e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00006a23      0f1f00         nop dword [rax]
0x00006a26      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00006a30      488d0d094620.  lea rcx, obj.quote_quoting_options      ; 0x20b040
0x00006a37      e904f7ffff     jmp sym.quotearg_n_options
0x00006a3c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00006a40      488d0df94520.  lea rcx, obj.quote_quoting_options      ; 0x20b040
0x00006a47      4889f2         mov rdx, rsi
0x00006a4a      4889fe         mov rsi, rdi
0x00006a4d      31ff           xor edi, edi
0x00006a4f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00006a54      6690           nop
0x00006a56      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00006a60      488d0dd94520.  lea rcx, obj.quote_quoting_options      ; 0x20b040
0x00006a67      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00006a6e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00006a73      0f1f00         nop dword [rax]
0x00006a76      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00006a80      488d0db94520.  lea rcx, obj.quote_quoting_options      ; 0x20b040
0x00006a87      4889fe         mov rsi, rdi
0x00006a8a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00006a91      31ff           xor edi, edi
0x00006a93      e9a8f6ffff     jmp sym.quotearg_n_options
0x00006a98      0f1f84000000.  nop dword [rax + rax]
;-- dup_safer:
0x00006aa0      ba03000000     mov edx, 3                              ; ../coreutils-8.31/lib/dup-safer.c:32
0x00006aa5      31f6           xor esi, esi
0x00006aa7      31c0           xor eax, eax
0x00006aa9      e932090000     jmp sym.rpl_fcntl
0x00006aae      6690           nop                                     ; ../coreutils-8.31/lib/dup-safer.c:33
;-- version_etc_arn:
0x00006ab0      4157           push r15
0x00006ab2      4156           push r14
0x00006ab4      4155           push r13
0x00006ab6      4154           push r12
0x00006ab8      4d89cc         mov r12, r9
0x00006abb      55             push rbp
0x00006abc      53             push rbx
0x00006abd      4889fd         mov rbp, rdi
0x00006ac0      4c89c3         mov rbx, r8
0x00006ac3      4883ec28       sub rsp, 0x28
0x00006ac7      4885f6         test rsi, rsi
0x00006aca      0f8418010000   je 0x6be8
0x00006ad0      4989d0         mov r8, rdx
0x00006ad3      488d15ce1f00.  lea rdx, [0x00008aa8]                   ; "%s (%s) %s\n"
0x00006ada      4989c9         mov r9, rcx
0x00006add      31c0           xor eax, eax
0x00006adf      4889f1         mov rcx, rsi
0x00006ae2      be01000000     mov esi, 1
0x00006ae7      e8b4adffff     call sym.imp.__fprintf_chk
0x00006aec      488d35c81f00.  lea rsi, [0x00008abb]                   ; "(C)"
0x00006af3      31ff           xor edi, edi
0x00006af5      ba05000000     mov edx, 5
0x00006afa      e861abffff     call sym.imp.dcgettext
0x00006aff      488d15da2200.  lea rdx, obj.version_etc_copyright      ; 0x8de0 ; "Copyright %s %d Free Software Foundation, Inc."
0x00006b06      4889c1         mov rcx, rax
0x00006b09      41b8e3070000   mov r8d, 0x7e3
0x00006b0f      be01000000     mov esi, 1
0x00006b14      4889ef         mov rdi, rbp
0x00006b17      31c0           xor eax, eax
0x00006b19      e882adffff     call sym.imp.__fprintf_chk
0x00006b1e      488d35232000.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x8b48 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00006b25      31ff           xor edi, edi
0x00006b27      ba05000000     mov edx, 5
0x00006b2c      e82fabffff     call sym.imp.dcgettext
0x00006b31      4889ee         mov rsi, rbp
0x00006b34      4889c7         mov rdi, rax
0x00006b37      e804acffff     call sym.imp.fputs_unlocked
0x00006b3c      4983fc09       cmp r12, 9
0x00006b40      0f873a030000   ja 0x6e80
0x00006b46      488d155b2200.  lea rdx, [0x00008da8]
0x00006b4d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00006b51      4801d0         add rax, rdx
0x00006b54      ffe0           jmp rax
0x00006b56      662e0f1f8400.  nop word cs:[rax + rax]
0x00006b60      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00006b64      488b4310       mov rax, qword [rbx + 0x10]
0x00006b68      488d35492100.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x8cb8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x00006b6f      4c8b4308       mov r8, qword [rbx + 8]
0x00006b73      ba05000000     mov edx, 5
0x00006b78      31ff           xor edi, edi
0x00006b7a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00006b7e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006b82      4c894c2410     mov qword [rsp + 0x10], r9
0x00006b87      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00006b8b      4c8b7318       mov r14, qword [rbx + 0x18]
0x00006b8f      48890424       mov qword [rsp], rax
0x00006b93      4c89442408     mov qword [rsp + 8], r8
0x00006b98      488b1b         mov rbx, qword [rbx]
0x00006b9b      e8c0aaffff     call sym.imp.dcgettext
0x00006ba0      4883ec08       sub rsp, 8
0x00006ba4      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00006ba9      4889c2         mov rdx, rax
0x00006bac      4889d9         mov rcx, rbx
0x00006baf      be01000000     mov esi, 1
0x00006bb4      4889ef         mov rdi, rbp
0x00006bb7      31c0           xor eax, eax
0x00006bb9      4151           push r9
0x00006bbb      4155           push r13
0x00006bbd      4154           push r12
0x00006bbf      4157           push r15
0x00006bc1      4156           push r14
0x00006bc3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00006bc8      4c8b442438     mov r8, qword [rsp + 0x38]
0x00006bcd      e8ceacffff     call sym.imp.__fprintf_chk
0x00006bd2      4883c430       add rsp, 0x30
0x00006bd6      4883c428       add rsp, 0x28
0x00006bda      5b             pop rbx
0x00006bdb      5d             pop rbp
0x00006bdc      415c           pop r12
0x00006bde      415d           pop r13
0x00006be0      415e           pop r14
0x00006be2      415f           pop r15
0x00006be4      c3             ret
0x00006be5      0f1f00         nop dword [rax]
0x00006be8      4989c8         mov r8, rcx
0x00006beb      4889d1         mov rcx, rdx
0x00006bee      488d15bf1e00.  lea rdx, str.s__s                       ; 0x8ab4 ; "%s %s\n"
0x00006bf5      be01000000     mov esi, 1
0x00006bfa      31c0           xor eax, eax
0x00006bfc      e89facffff     call sym.imp.__fprintf_chk
0x00006c01      e9e6feffff     jmp 0x6aec
0x00006c06      662e0f1f8400.  nop word cs:[rax + rax]
0x00006c10      4c8b5340       mov r10, qword [rbx + 0x40]
0x00006c14      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00006c18      488d35c92000.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x8ce8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x00006c1f      488b4310       mov rax, qword [rbx + 0x10]
0x00006c23      4c8b4308       mov r8, qword [rbx + 8]
0x00006c27      ba05000000     mov edx, 5
0x00006c2c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00006c30      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006c34      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00006c38      4c8b7318       mov r14, qword [rbx + 0x18]
0x00006c3c      488b1b         mov rbx, qword [rbx]
0x00006c3f      4c89542418     mov qword [rsp + 0x18], r10
0x00006c44      4c894c2410     mov qword [rsp + 0x10], r9
0x00006c49      48890424       mov qword [rsp], rax
0x00006c4d      4c89442408     mov qword [rsp + 8], r8
0x00006c52      31ff           xor edi, edi
0x00006c54      e807aaffff     call sym.imp.dcgettext
0x00006c59      4c8b542418     mov r10, qword [rsp + 0x18]
0x00006c5e      4152           push r10
0x00006c60      e93fffffff     jmp 0x6ba4
0x00006c65      0f1f00         nop dword [rax]
0x00006c68      488b1b         mov rbx, qword [rbx]
0x00006c6b      488d354d1e00.  lea rsi, str.Written_by__s.             ; 0x8abf ; "Written by %s.\n"
0x00006c72      ba05000000     mov edx, 5
0x00006c77      31ff           xor edi, edi
0x00006c79      e8e2a9ffff     call sym.imp.dcgettext
0x00006c7e      4883c428       add rsp, 0x28
0x00006c82      4889d9         mov rcx, rbx
0x00006c85      4889ef         mov rdi, rbp
0x00006c88      5b             pop rbx
0x00006c89      5d             pop rbp
0x00006c8a      415c           pop r12
0x00006c8c      415d           pop r13
0x00006c8e      415e           pop r14
0x00006c90      415f           pop r15
0x00006c92      4889c2         mov rdx, rax
0x00006c95      be01000000     mov esi, 1
0x00006c9a      31c0           xor eax, eax
0x00006c9c      e9ffabffff     jmp sym.imp.__fprintf_chk
0x00006ca1      0f1f80000000.  nop dword [rax]
0x00006ca8      4c8b6308       mov r12, qword [rbx + 8]
0x00006cac      488d351c1e00.  lea rsi, str.Written_by__s_and__s.      ; 0x8acf ; "Written by %s and %s.\n"
0x00006cb3      488b1b         mov rbx, qword [rbx]
0x00006cb6      ba05000000     mov edx, 5
0x00006cbb      31ff           xor edi, edi
0x00006cbd      e89ea9ffff     call sym.imp.dcgettext
0x00006cc2      4883c428       add rsp, 0x28
0x00006cc6      4d89e0         mov r8, r12
0x00006cc9      4889d9         mov rcx, rbx
0x00006ccc      4889ef         mov rdi, rbp
0x00006ccf      4889c2         mov rdx, rax
0x00006cd2      be01000000     mov esi, 1
0x00006cd7      5b             pop rbx
0x00006cd8      5d             pop rbp
0x00006cd9      415c           pop r12
0x00006cdb      415d           pop r13
0x00006cdd      415e           pop r14
0x00006cdf      415f           pop r15
0x00006ce1      31c0           xor eax, eax
0x00006ce3      e9b8abffff     jmp sym.imp.__fprintf_chk
0x00006ce8      0f1f84000000.  nop dword [rax + rax]
0x00006cf0      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00006cf4      4c8b6308       mov r12, qword [rbx + 8]
0x00006cf8      488d35e71d00.  lea rsi, str.Written_by__s___s__and__s. ; 0x8ae6 ; "Written by %s, %s, and %s.\n"
0x00006cff      488b1b         mov rbx, qword [rbx]
0x00006d02      ba05000000     mov edx, 5
0x00006d07      31ff           xor edi, edi
0x00006d09      e852a9ffff     call sym.imp.dcgettext
0x00006d0e      4883c428       add rsp, 0x28
0x00006d12      4d89e9         mov r9, r13
0x00006d15      4d89e0         mov r8, r12
0x00006d18      4889d9         mov rcx, rbx
0x00006d1b      4889ef         mov rdi, rbp
0x00006d1e      4889c2         mov rdx, rax
0x00006d21      5b             pop rbx
0x00006d22      5d             pop rbp
0x00006d23      415c           pop r12
0x00006d25      415d           pop r13
0x00006d27      415e           pop r14
0x00006d29      415f           pop r15
0x00006d2b      be01000000     mov esi, 1
0x00006d30      31c0           xor eax, eax
0x00006d32      e969abffff     jmp sym.imp.__fprintf_chk
0x00006d37      660f1f840000.  nop word [rax + rax]
0x00006d40      488d35d11e00.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x8c18 ; "Written by %s, %s, %s,\nand %s.\n"
0x00006d47      ba05000000     mov edx, 5
0x00006d4c      31ff           xor edi, edi
0x00006d4e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00006d52      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00006d56      4c8b6308       mov r12, qword [rbx + 8]
0x00006d5a      488b1b         mov rbx, qword [rbx]
0x00006d5d      e8fea8ffff     call sym.imp.dcgettext
0x00006d62      4883ec08       sub rsp, 8
0x00006d66      4156           push r14
0x00006d68      4889c2         mov rdx, rax
0x00006d6b      4d89e9         mov r9, r13
0x00006d6e      4d89e0         mov r8, r12
0x00006d71      4889d9         mov rcx, rbx
0x00006d74      4889ef         mov rdi, rbp
0x00006d77      be01000000     mov esi, 1
0x00006d7c      31c0           xor eax, eax
0x00006d7e      e81dabffff     call sym.imp.__fprintf_chk
0x00006d83      58             pop rax
0x00006d84      5a             pop rdx
0x00006d85      4883c428       add rsp, 0x28
0x00006d89      5b             pop rbx
0x00006d8a      5d             pop rbp
0x00006d8b      415c           pop r12
0x00006d8d      415d           pop r13
0x00006d8f      415e           pop r14
0x00006d91      415f           pop r15
0x00006d93      c3             ret
0x00006d94      0f1f4000       nop dword [rax]
0x00006d98      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00006d9c      488d35951e00.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x8c38 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00006da3      ba05000000     mov edx, 5
0x00006da8      31ff           xor edi, edi
0x00006daa      4c8b7318       mov r14, qword [rbx + 0x18]
0x00006dae      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00006db2      4c8b6308       mov r12, qword [rbx + 8]
0x00006db6      488b1b         mov rbx, qword [rbx]
0x00006db9      e8a2a8ffff     call sym.imp.dcgettext
0x00006dbe      4157           push r15
0x00006dc0      eba4           jmp 0x6d66
0x00006dc2      660f1f440000   nop word [rax + rax]
0x00006dc8      4c8b4308       mov r8, qword [rbx + 8]
0x00006dcc      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006dd0      488d35891e00.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x8c60 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00006dd7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00006ddb      4c8b7318       mov r14, qword [rbx + 0x18]
0x00006ddf      ba05000000     mov edx, 5
0x00006de4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00006de8      31ff           xor edi, edi
0x00006dea      488b1b         mov rbx, qword [rbx]
0x00006ded      4c890424       mov qword [rsp], r8
0x00006df1      e86aa8ffff     call sym.imp.dcgettext
0x00006df6      4883ec08       sub rsp, 8
0x00006dfa      4d89e9         mov r9, r13
0x00006dfd      4154           push r12
0x00006dff      4157           push r15
0x00006e01      4156           push r14
0x00006e03      4c8b442420     mov r8, qword [rsp + 0x20]
0x00006e08      4889d9         mov rcx, rbx
0x00006e0b      4889c2         mov rdx, rax
0x00006e0e      4889ef         mov rdi, rbp
0x00006e11      be01000000     mov esi, 1
0x00006e16      31c0           xor eax, eax
0x00006e18      e883aaffff     call sym.imp.__fprintf_chk
0x00006e1d      4883c420       add rsp, 0x20
0x00006e21      4883c428       add rsp, 0x28
0x00006e25      5b             pop rbx
0x00006e26      5d             pop rbp
0x00006e27      415c           pop r12
0x00006e29      415d           pop r13
0x00006e2b      415e           pop r14
0x00006e2d      415f           pop r15
0x00006e2f      c3             ret
0x00006e30      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00006e34      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00006e38      488d35491e00.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x8c88 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x00006e3f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006e43      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00006e47      ba05000000     mov edx, 5
0x00006e4c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00006e50      4c8b4308       mov r8, qword [rbx + 8]
0x00006e54      31ff           xor edi, edi
0x00006e56      4c894c2408     mov qword [rsp + 8], r9
0x00006e5b      488b1b         mov rbx, qword [rbx]
0x00006e5e      4c890424       mov qword [rsp], r8
0x00006e62      e8f9a7ffff     call sym.imp.dcgettext
0x00006e67      4155           push r13
0x00006e69      4154           push r12
0x00006e6b      4157           push r15
0x00006e6d      4156           push r14
0x00006e6f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00006e74      eb8d           jmp 0x6e03
0x00006e76      662e0f1f8400.  nop word cs:[rax + rax]
0x00006e80      4c8b5340       mov r10, qword [rbx + 0x40]
0x00006e84      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00006e88      ba05000000     mov edx, 5
0x00006e8d      488b4310       mov rax, qword [rbx + 0x10]
0x00006e91      4c8b4308       mov r8, qword [rbx + 8]
0x00006e95      488d35841e00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x8d20 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x00006e9c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00006ea0      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006ea4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00006ea8      4c8b7318       mov r14, qword [rbx + 0x18]
0x00006eac      4c89542418     mov qword [rsp + 0x18], r10
0x00006eb1      4c894c2410     mov qword [rsp + 0x10], r9
0x00006eb6      48890424       mov qword [rsp], rax
0x00006eba      4c89442408     mov qword [rsp + 8], r8
0x00006ebf      488b1b         mov rbx, qword [rbx]
0x00006ec2      e98bfdffff     jmp 0x6c52
0x00006ec7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00006ed0      4531c9         xor r9d, r9d
0x00006ed3      49833800       cmp qword [r8], 0
0x00006ed7      7412           je 0x6eeb
0x00006ed9      0f1f80000000.  nop dword [rax]
0x00006ee0      4983c101       add r9, 1
0x00006ee4      4b833cc800     cmp qword [r8 + r9*8], 0
0x00006ee9      75f5           jne 0x6ee0
0x00006eeb      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00006ef0      4883ec68       sub rsp, 0x68
0x00006ef4      4d89c2         mov r10, r8
0x00006ef7      4531c9         xor r9d, r9d
0x00006efa      64488b042528.  mov rax, qword fs:[0x28]
0x00006f03      4889442458     mov qword [rsp + 0x58], rax
0x00006f08      31c0           xor eax, eax
0x00006f0a      4989e0         mov r8, rsp
0x00006f0d      0f1f00         nop dword [rax]
0x00006f10      418b02         mov eax, dword [r10]
0x00006f13      83f82f         cmp eax, 0x2f
0x00006f16      7742           ja 0x6f5a
0x00006f18      4189c3         mov r11d, eax
0x00006f1b      4d035a10       add r11, qword [r10 + 0x10]
0x00006f1f      83c008         add eax, 8
0x00006f22      418902         mov dword [r10], eax
0x00006f25      498b03         mov rax, qword [r11]
0x00006f28      4885c0         test rax, rax
0x00006f2b      4b8904c8       mov qword [r8 + r9*8], rax
0x00006f2f      740a           je 0x6f3b
0x00006f31      4983c101       add r9, 1
0x00006f35      4983f90a       cmp r9, 0xa
0x00006f39      75d5           jne 0x6f10
0x00006f3b      e870fbffff     call sym.version_etc_arn
0x00006f40      488b442458     mov rax, qword [rsp + 0x58]
0x00006f45      644833042528.  xor rax, qword fs:[0x28]
0x00006f4e      7505           jne 0x6f55
0x00006f50      4883c468       add rsp, 0x68
0x00006f54      c3             ret
0x00006f55      e836a7ffff     call sym.imp.__stack_chk_fail
0x00006f5a      4d8b5a08       mov r11, qword [r10 + 8]
0x00006f5e      498d4308       lea rax, [r11 + 8]
0x00006f62      49894208       mov qword [r10 + 8], rax
0x00006f66      ebbd           jmp 0x6f25
0x00006f68      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00006f70      55             push rbp
0x00006f71      53             push rbx
0x00006f72      41ba20000000   mov r10d, 0x20                          ; "@"
0x00006f78      4531db         xor r11d, r11d
0x00006f7b      4881ecb80000.  sub rsp, 0xb8
0x00006f82      64488b042528.  mov rax, qword fs:[0x28]
0x00006f8b      4889442478     mov qword [rsp + 0x78], rax
0x00006f90      31c0           xor eax, eax
0x00006f92      488d8424d000.  lea rax, [rsp + 0xd0]
0x00006f9a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00006fa2      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x00006faa      4c8d442420     lea r8, [rsp + 0x20]
0x00006faf      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00006fb7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x00006fbf      4889442410     mov qword [rsp + 0x10], rax
0x00006fc4      488d84248000.  lea rax, [rsp + 0x80]
0x00006fcc      4531c9         xor r9d, r9d
0x00006fcf      4889442418     mov qword [rsp + 0x18], rax
0x00006fd4      4889c5         mov rbp, rax
0x00006fd7      660f1f840000.  nop word [rax + rax]
0x00006fe0      4183fa2f       cmp r10d, 0x2f
0x00006fe4      7756           ja 0x703c
0x00006fe6      4489d0         mov eax, r10d
0x00006fe9      41bb01000000   mov r11d, 1
0x00006fef      4183c208       add r10d, 8
0x00006ff3      4801e8         add rax, rbp
0x00006ff6      488b00         mov rax, qword [rax]
0x00006ff9      4885c0         test rax, rax
0x00006ffc      4b8904c8       mov qword [r8 + r9*8], rax
0x00007000      740a           je 0x700c
0x00007002      4983c101       add r9, 1
0x00007006      4983f90a       cmp r9, 0xa
0x0000700a      75d4           jne 0x6fe0
0x0000700c      4584db         test r11b, r11b
0x0000700f      7524           jne 0x7035
0x00007011      e89afaffff     call sym.version_etc_arn
0x00007016      488b442478     mov rax, qword [rsp + 0x78]
0x0000701b      644833042528.  xor rax, qword fs:[0x28]
0x00007024      750a           jne 0x7030
0x00007026      4881c4b80000.  add rsp, 0xb8
0x0000702d      5b             pop rbx
0x0000702e      5d             pop rbp
0x0000702f      c3             ret
0x00007030      e85ba6ffff     call sym.imp.__stack_chk_fail
0x00007035      4489542408     mov dword [rsp + 8], r10d
0x0000703a      ebd5           jmp 0x7011
0x0000703c      4889d8         mov rax, rbx
0x0000703f      4883c308       add rbx, 8
0x00007043      ebb1           jmp 0x6ff6
0x00007045      90             nop
0x00007046      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00007050      53             push rbx
0x00007051      488d35aa1a00.  lea rsi, str.Report_bugs_to:__s         ; 0x8b02 ; "\nReport bugs to: %s\n"
0x00007058      ba05000000     mov edx, 5
0x0000705d      31ff           xor edi, edi
0x0000705f      e8fca5ffff     call sym.imp.dcgettext
0x00007064      488d15ac1a00.  lea rdx, str.bug_coreutils_gnu.org      ; 0x8b17 ; "bug-coreutils@gnu.org"
0x0000706b      4889c6         mov rsi, rax
0x0000706e      bf01000000     mov edi, 1
0x00007073      31c0           xor eax, eax
0x00007075      e896a7ffff     call sym.imp.__printf_chk
0x0000707a      488d35ac1a00.  lea rsi, str.s_home_page:___s           ; 0x8b2d ; "%s home page: <%s>\n"
0x00007081      ba05000000     mov edx, 5
0x00007086      31ff           xor edi, edi
0x00007088      e8d3a5ffff     call sym.imp.dcgettext
0x0000708d      488d0d0c1000.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x80a0 ; "https://www.gnu.org/software/coreutils/"
0x00007094      488d155d0900.  lea rdx, str.GNU_coreutils              ; 0x79f8 ; "GNU coreutils"
0x0000709b      4889c6         mov rsi, rax
0x0000709e      bf01000000     mov edi, 1
0x000070a3      31c0           xor eax, eax
0x000070a5      e866a7ffff     call sym.imp.__printf_chk
0x000070aa      488b1df73f20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b0a8:8]=0
0x000070b1      488d35a81c00.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x8d60 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x000070b8      31ff           xor edi, edi
0x000070ba      ba05000000     mov edx, 5
0x000070bf      e89ca5ffff     call sym.imp.dcgettext
0x000070c4      4889de         mov rsi, rbx
0x000070c7      4889c7         mov rdi, rax
0x000070ca      5b             pop rbx
0x000070cb      e970a6ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x000070d0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x000070d1      4889fb         mov rbx, rdi
0x000070d4      e8b7a6ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x000070d9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x000070dc      7505           jne 0x70e3
0x000070de      4885db         test rbx, rbx
0x000070e1      7502           jne 0x70e5
0x000070e3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x000070e4      c3             ret
0x000070e5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x000070ea      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x000070f0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x000070f3      48f7e6         mul rsi
0x000070f6      4889c7         mov rdi, rax
0x000070f9      0f90c0         seto al
0x000070fc      4885ff         test rdi, rdi
0x000070ff      780a           js 0x710b
0x00007101      0fb6c0         movzx eax, al
0x00007104      4885c0         test rax, rax
0x00007107      7502           jne 0x710b
0x00007109      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x0000710b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x0000710f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00007114      6690           nop
0x00007116      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00007120      ebae           jmp sym.xmalloc
0x00007122      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00007126      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00007130      4885f6         test rsi, rsi
0x00007133      53             push rbx
0x00007134      4889f3         mov rbx, rsi
0x00007137      7505           jne 0x713e
0x00007139      4885ff         test rdi, rdi
0x0000713c      751a           jne 0x7158
0x0000713e      4889de         mov rsi, rbx
0x00007141      e89aa6ffff     call sym.imp.realloc
0x00007146      4885c0         test rax, rax
0x00007149      7505           jne 0x7150
0x0000714b      4885db         test rbx, rbx
0x0000714e      7511           jne 0x7161                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00007150      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00007151      c3             ret
0x00007152      660f1f440000   nop word [rax + rax]
0x00007158      e853a4ffff     call sym.imp.free
0x0000715d      31c0           xor eax, eax
0x0000715f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00007160      c3             ret
0x00007161      e8ba010000     call sym.xalloc_die
0x00007166      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00007170      4889f0         mov rax, rsi
0x00007173      48f7e2         mul rdx
0x00007176      4889c6         mov rsi, rax
0x00007179      0f90c0         seto al
0x0000717c      4885f6         test rsi, rsi
0x0000717f      780a           js 0x718b
0x00007181      0fb6c0         movzx eax, al
0x00007184      4885c0         test rax, rax
0x00007187      7502           jne 0x718b
0x00007189      eba5           jmp sym.xrealloc
0x0000718b      4883ec08       sub rsp, 8
0x0000718f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00007194      6690           nop
0x00007196      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x000071a0      4885ff         test rdi, rdi
0x000071a3      4989d1         mov r9, rdx
0x000071a6      488b0e         mov rcx, qword [rsi]
0x000071a9      7435           je 0x71e0
0x000071ab      31d2           xor edx, edx
0x000071ad      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x000071b7      49f7f1         div r9
0x000071ba      4839c8         cmp rax, rcx
0x000071bd      763c           jbe 0x71fb
0x000071bf      4889c8         mov rax, rcx
0x000071c2      48d1e8         shr rax, 1
0x000071c5      488d4c0801     lea rcx, [rax + rcx + 1]
0x000071ca      48890e         mov qword [rsi], rcx
0x000071cd      490fafc9       imul rcx, r9
0x000071d1      4889ce         mov rsi, rcx
0x000071d4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x000071d9      0f1f80000000.  nop dword [rax]
0x000071e0      4885c9         test rcx, rcx
0x000071e3      7423           je 0x7208
0x000071e5      4889c8         mov rax, rcx
0x000071e8      49f7e1         mul r9
0x000071eb      0f90c2         seto dl
0x000071ee      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x000071f1      0fb6d2         movzx edx, dl
0x000071f4      7805           js 0x71fb
0x000071f6      4885d2         test rdx, rdx
0x000071f9      74cf           je 0x71ca
0x000071fb      4883ec08       sub rsp, 8
0x000071ff      e81c010000     call sym.xalloc_die
0x00007204      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00007208      31d2           xor edx, edx
0x0000720a      b880000000     mov eax, 0x80
0x0000720f      4531c0         xor r8d, r8d
0x00007212      49f7f1         div r9
0x00007215      4885c0         test rax, rax
0x00007218      410f94c0       sete r8b
0x0000721c      498d0c00       lea rcx, [r8 + rax]
0x00007220      ebc3           jmp 0x71e5
0x00007222      0f1f4000       nop dword [rax]
0x00007226      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00007230      4885ff         test rdi, rdi
0x00007233      488b06         mov rax, qword [rsi]
0x00007236      7428           je 0x7260
0x00007238      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00007242      4839d0         cmp rax, rdx
0x00007245      772a           ja 0x7271
0x00007247      4889c2         mov rdx, rax
0x0000724a      48d1ea         shr rdx, 1
0x0000724d      488d440201     lea rax, [rdx + rax + 1]
0x00007252      488906         mov qword [rsi], rax
0x00007255      4889c6         mov rsi, rax
0x00007258      e9d3feffff     jmp sym.xrealloc
0x0000725d      0f1f00         nop dword [rax]
0x00007260      4885c0         test rax, rax
0x00007263      ba80000000     mov edx, 0x80
0x00007268      480f44c2       cmove rax, rdx
0x0000726c      4885c0         test rax, rax
0x0000726f      79e1           jns 0x7252
0x00007271      4883ec08       sub rsp, 8
0x00007275      e8a6000000     call sym.xalloc_die
0x0000727a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00007280      53             push rbx
0x00007281      4889fb         mov rbx, rdi
0x00007284      e847feffff     call sym.xmalloc
0x00007289      4889da         mov rdx, rbx
0x0000728c      31f6           xor esi, esi
0x0000728e      4889c7         mov rdi, rax
0x00007291      5b             pop rbx
0x00007292      e969a4ffff     jmp sym.imp.memset
0x00007297      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x000072a0      4889f8         mov rax, rdi
0x000072a3      4883ec08       sub rsp, 8
0x000072a7      48f7e6         mul rsi
0x000072aa      0f90c2         seto dl
0x000072ad      4885c0         test rax, rax
0x000072b0      7817           js 0x72c9
0x000072b2      0fb6d2         movzx edx, dl
0x000072b5      4885d2         test rdx, rdx
0x000072b8      750f           jne 0x72c9
0x000072ba      e891a4ffff     call sym.imp.calloc
0x000072bf      4885c0         test rax, rax
0x000072c2      7405           je 0x72c9
0x000072c4      4883c408       add rsp, 8
0x000072c8      c3             ret
0x000072c9      e852000000     call sym.xalloc_die
0x000072ce      6690           nop
;-- xmemdup:
0x000072d0      55             push rbp
0x000072d1      53             push rbx
0x000072d2      4889fd         mov rbp, rdi
0x000072d5      4889f7         mov rdi, rsi
0x000072d8      4889f3         mov rbx, rsi
0x000072db      4883ec08       sub rsp, 8
0x000072df      e8ecfdffff     call sym.xmalloc
0x000072e4      4883c408       add rsp, 8
0x000072e8      4889da         mov rdx, rbx
0x000072eb      4889ee         mov rsi, rbp
0x000072ee      5b             pop rbx
0x000072ef      5d             pop rbp
0x000072f0      4889c7         mov rdi, rax
0x000072f3      e978a4ffff     jmp sym.imp.memcpy
0x000072f8      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00007300      53             push rbx
0x00007301      4889fb         mov rbx, rdi
0x00007304      e877a3ffff     call sym.imp.strlen
0x00007309      4889df         mov rdi, rbx
0x0000730c      488d7001       lea rsi, [rax + 1]
0x00007310      5b             pop rbx
0x00007311      ebbd           jmp sym.xmemdup
0x00007313      662e0f1f8400.  nop word cs:[rax + rax]
0x0000731d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00007320      488d35e81a00.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x8e0f ; "memory exhausted"
0x00007327      4883ec08       sub rsp, 8
0x0000732b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00007330      31ff           xor edi, edi
0x00007332      e829a3ffff     call sym.imp.dcgettext
0x00007337      8b3de33c2000   mov edi, dword [obj.exit_failure]       ; [0x20b020:4]=1
0x0000733d      488d15f11100.  lea rdx, [0x00008535]                   ; "%s"
0x00007344      4889c1         mov rcx, rax
0x00007347      31f6           xor esi, esi
0x00007349      31c0           xor eax, eax
0x0000734b      e8e0a4ffff     call sym.imp.error
0x00007350      e86ba2ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00007355      662e0f1f8400.  nop word cs:[rax + rax]
0x0000735f      90             nop
;-- rpl_fclose:
0x00007360      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00007362      55             push rbp
0x00007363      53             push rbx
0x00007364      4889fb         mov rbx, rdi
0x00007367      e814a4ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0000736c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0000736e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00007371      7854           js 0x73c7                               ; ../coreutils-8.31/lib/fclose.c:66
0x00007373      e848a4ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00007378      85c0           test eax, eax
0x0000737a      752c           jne 0x73a8
0x0000737c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x0000737f      e8dc020000     call sym.rpl_fflush
0x00007384      85c0           test eax, eax
0x00007386      743c           je 0x73c4
0x00007388      e843a2ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x0000738d      448b20         mov r12d, dword [rax]
0x00007390      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00007393      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00007396      e8a5a2ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x0000739b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x0000739e      7530           jne 0x73d0
0x000073a0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x000073a1      5d             pop rbp
0x000073a2      415c           pop r12
0x000073a4      c3             ret
0x000073a5      0f1f00         nop dword [rax]
0x000073a8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x000073ab      e8d0a3ffff     call sym.imp.fileno
0x000073b0      31f6           xor esi, esi
0x000073b2      ba01000000     mov edx, 1
0x000073b7      89c7           mov edi, eax
0x000073b9      e832a3ffff     call sym.imp.lseek
0x000073be      4883f8ff       cmp rax, 0xffffffffffffffff
0x000073c2      75b8           jne 0x737c
0x000073c4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x000073c7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x000073c8      5d             pop rbp
0x000073c9      415c           pop r12
0x000073cb      e970a2ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x000073d0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x000073d4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x000073d9      ebc5           jmp 0x73a0
0x000073db      0f1f440000     nop dword [rax + rax]
;-- rpl_fcntl:
0x000073e0      4154           push r12                                ; ../coreutils-8.31/lib/fcntl.c:206
0x000073e2      55             push rbp
0x000073e3      89fd           mov ebp, edi
0x000073e5      53             push rbx
0x000073e6      4883ec50       sub rsp, 0x50
0x000073ea      64488b042528.  mov rax, qword fs:[0x28]
0x000073f3      4889442418     mov qword [rsp + 0x18], rax
0x000073f8      31c0           xor eax, eax
0x000073fa      488d442470     lea rax, [rsp + 0x70]                   ; ../coreutils-8.31/lib/fcntl.c:209
0x000073ff      85f6           test esi, esi                           ; ../coreutils-8.31/lib/fcntl.c:210
0x00007401      4889542430     mov qword [rsp + 0x30], rdx             ; ../coreutils-8.31/lib/fcntl.c:206
0x00007406      48894c2438     mov qword [rsp + 0x38], rcx
0x0000740b      4c89442440     mov qword [rsp + 0x40], r8
0x00007410      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/fcntl.c:209
0x00007415      488d442420     lea rax, [rsp + 0x20]
0x0000741a      4c894c2448     mov qword [rsp + 0x48], r9              ; ../coreutils-8.31/lib/fcntl.c:206
0x0000741f      c70424100000.  mov dword [rsp], 0x10                   ; ../coreutils-8.31/lib/fcntl.c:209 ; [0x10:4]=0x3e0003
0x00007426      4889442410     mov qword [rsp + 0x10], rax
0x0000742b      0f8401020000   je 0x7632                               ; ../coreutils-8.31/lib/fcntl.c:210
0x00007431      81fe06040000   cmp esi, 0x406
0x00007437      7547           jne 0x7480
0x00007439      488b442410     mov rax, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/fcntl.c:221
0x0000743e      833d333e2000.  cmp dword [obj.have_dupfd_cloexec.3326], 0 ; ../coreutils-8.31/lib/fcntl.c:507 ; [0x20b278:4]=0
0x00007445      c70424180000.  mov dword [rsp], 0x18                   ; ../coreutils-8.31/lib/fcntl.c:221 ; [0x18:4]=0x2a40 rip
0x0000744c      448b6010       mov r12d, dword [rax + 0x10]
0x00007450      4489e2         mov edx, r12d                           ; ../coreutils-8.31/lib/fcntl.c:509
0x00007453      0f882a010000   js 0x7583                               ; ../coreutils-8.31/lib/fcntl.c:507
0x00007459      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x0000745b      be06040000     mov esi, 0x406
0x00007460      e8aba1ffff     call sym.imp.fcntl
0x00007465      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fcntl.c:510
0x00007467      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x00007469      0f8889010000   js 0x75f8                               ; ../coreutils-8.31/lib/fcntl.c:510
0x0000746f      c705ff3d2000.  mov dword [obj.have_dupfd_cloexec.3326], 1 ; ../coreutils-8.31/lib/fcntl.c:512 ; [0x20b278:4]=0
0x00007479      eb45           jmp 0x74c0
0x0000747b      0f1f440000     nop dword [rax + rax]
0x00007480      83fe0b         cmp esi, 0xb                            ; ../coreutils-8.31/lib/fcntl.c:258
0x00007483      742b           je 0x74b0
0x00007485      7f59           jg 0x74e0
0x00007487      83fe04         cmp esi, 4
0x0000748a      0f84d0000000   je 0x7560
0x00007490      0f8fba000000   jg 0x7550
0x00007496      83fe02         cmp esi, 2
0x00007499      0f84c1000000   je 0x7560
0x0000749f      7f0f           jg 0x74b0
0x000074a1      83fe01         cmp esi, 1
0x000074a4      7562           jne 0x7508
0x000074a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000074b0      89ef           mov edi, ebp
0x000074b2      31c0           xor eax, eax
0x000074b4      e857a1ffff     call sym.imp.fcntl
0x000074b9      89c3           mov ebx, eax
0x000074bb      0f1f440000     nop dword [rax + rax]
0x000074c0      488b4c2418     mov rcx, qword [rsp + 0x18]
0x000074c5      6448330c2528.  xor rcx, qword fs:[0x28]
0x000074ce      89d8           mov eax, ebx
0x000074d0      0f8557010000   jne 0x762d                              ; ../coreutils-8.31/lib/fcntl.c:355
0x000074d6      4883c450       add rsp, 0x50
0x000074da      5b             pop rbx
0x000074db      5d             pop rbp
0x000074dc      415c           pop r12
0x000074de      c3             ret
0x000074df      90             nop
0x000074e0      81fe07040000   cmp esi, 0x407
0x000074e6      7f48           jg 0x7530
0x000074e8      81fe06040000   cmp esi, 0x406
0x000074ee      7d70           jge 0x7560
0x000074f0      81fe01040000   cmp esi, 0x401
0x000074f6      74b8           je 0x74b0
0x000074f8      81fe02040000   cmp esi, 0x402                          ; ../coreutils-8.31/lib/fcntl.c:183
0x000074fe      7460           je 0x7560
0x00007500      81fe00040000   cmp esi, 0x400
0x00007506      7458           je 0x7560
0x00007508      8b0424         mov eax, dword [rsp]
0x0000750b      83f82f         cmp eax, 0x2f
0x0000750e      0f8736010000   ja 0x764a
0x00007514      4803442410     add rax, qword [rsp + 0x10]
0x00007519      488b10         mov rdx, qword [rax]
0x0000751c      89ef           mov edi, ebp
0x0000751e      31c0           xor eax, eax
0x00007520      e8eba0ffff     call sym.imp.fcntl
0x00007525      89c3           mov ebx, eax
0x00007527      eb97           jmp 0x74c0
0x00007529      0f1f80000000.  nop dword [rax]
0x00007530      81fe09040000   cmp esi, 0x409
0x00007536      7428           je 0x7560
0x00007538      0f8c72ffffff   jl 0x74b0
0x0000753e      81fe0a040000   cmp esi, 0x40a
0x00007544      75c2           jne 0x7508
0x00007546      e965ffffff     jmp 0x74b0                              ; ../coreutils-8.31/lib/fcntl.c:350
0x0000754b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fcntl.c:406
0x00007550      83fe09         cmp esi, 9
0x00007553      0f8457ffffff   je 0x74b0
0x00007559      7f05           jg 0x7560
0x0000755b      83fe08         cmp esi, 8
0x0000755e      75a8           jne 0x7508
0x00007560      8b0424         mov eax, dword [rsp]
0x00007563      83f82f         cmp eax, 0x2f
0x00007566      0f87e8000000   ja 0x7654
0x0000756c      4803442410     add rax, qword [rsp + 0x10]
0x00007571      8b10           mov edx, dword [rax]
0x00007573      89ef           mov edi, ebp
0x00007575      31c0           xor eax, eax
0x00007577      e894a0ffff     call sym.imp.fcntl
0x0000757c      89c3           mov ebx, eax
0x0000757e      e93dffffff     jmp 0x74c0
0x00007583      31f6           xor esi, esi
0x00007585      31c0           xor eax, eax
0x00007587      e884a0ffff     call sym.imp.fcntl
0x0000758c      85c0           test eax, eax
0x0000758e      89c3           mov ebx, eax
0x00007590      0f882affffff   js 0x74c0
0x00007596      833ddb3c2000.  cmp dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x20b278:4]=0
0x0000759d      0f851dffffff   jne 0x74c0
0x000075a3      31c0           xor eax, eax
0x000075a5      be01000000     mov esi, 1
0x000075aa      89df           mov edi, ebx
0x000075ac      e85fa0ffff     call sym.imp.fcntl
0x000075b1      85c0           test eax, eax
0x000075b3      781c           js 0x75d1
0x000075b5      83c801         or eax, 1
0x000075b8      be02000000     mov esi, 2
0x000075bd      89df           mov edi, ebx
0x000075bf      89c2           mov edx, eax
0x000075c1      31c0           xor eax, eax
0x000075c3      e848a0ffff     call sym.imp.fcntl
0x000075c8      83f8ff         cmp eax, 0xffffffff
0x000075cb      0f85effeffff   jne 0x74c0
0x000075d1      e8fa9fffff     call sym.imp.__errno_location
0x000075d6      448b20         mov r12d, dword [rax]
0x000075d9      4889c5         mov rbp, rax
0x000075dc      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fcntl.c:446
0x000075de      e82da1ffff     call sym.imp.close                      ; ../coreutils-8.31/lib/fcntl.c:406
0x000075e3      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x000075e8      44896500       mov dword [rbp], r12d
0x000075ec      e9cffeffff     jmp 0x74c0
0x000075f1      0f1f80000000.  nop dword [rax]
0x000075f8      e8d39fffff     call sym.imp.__errno_location
0x000075fd      833816         cmp dword [rax], 0x16
0x00007600      0f8569feffff   jne 0x746f
0x00007606      31f6           xor esi, esi
0x00007608      31c0           xor eax, eax
0x0000760a      4489e2         mov edx, r12d
0x0000760d      89ef           mov edi, ebp                            ; ../coreutils-8.31/lib/fcntl.c:141
0x0000760f      e8fc9fffff     call sym.imp.fcntl
0x00007614      85c0           test eax, eax
0x00007616      89c3           mov ebx, eax
0x00007618      0f88a2feffff   js 0x74c0
0x0000761e      c705503c2000.  mov dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x20b278:4]=0
0x00007628      e976ffffff     jmp 0x75a3
0x0000762d      e85ea0ffff     call sym.imp.__stack_chk_fail
0x00007632      488b442410     mov rax, qword [rsp + 0x10]
0x00007637      31f6           xor esi, esi
0x00007639      8b5010         mov edx, dword [rax + 0x10]
0x0000763c      31c0           xor eax, eax
0x0000763e      e8cd9fffff     call sym.imp.fcntl
0x00007643      89c3           mov ebx, eax
0x00007645      e976feffff     jmp 0x74c0
0x0000764a      488b442408     mov rax, qword [rsp + 8]
0x0000764f      e9c5feffff     jmp 0x7519
0x00007654      488b442408     mov rax, qword [rsp + 8]
0x00007659      e913ffffff     jmp 0x7571
0x0000765e      6690           nop
;-- rpl_fflush:
0x00007660      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00007663      53             push rbx
0x00007664      4889fb         mov rbx, rdi
0x00007667      7411           je 0x767a                               ; ../coreutils-8.31/lib/fflush.c:150
0x00007669      e852a1ffff     call sym.imp.__freading
0x0000766e      85c0           test eax, eax
0x00007670      7408           je 0x767a
0x00007672      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00007678      750e           jne 0x7688
0x0000767a      4889df         mov rdi, rbx
0x0000767d      5b             pop rbx
0x0000767e      e91da1ffff     jmp sym.imp.fflush
0x00007683      0f1f440000     nop dword [rax + rax]
0x00007688      4889df         mov rdi, rbx
0x0000768b      ba01000000     mov edx, 1
0x00007690      31f6           xor esi, esi
0x00007692      e809000000     call sym.rpl_fseeko
0x00007697      4889df         mov rdi, rbx
0x0000769a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x0000769b      e900a1ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x000076a0      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x000076a4      48394710       cmp qword [rdi + 0x10], rax
0x000076a8      7406           je 0x76b0                               ; ../coreutils-8.31/lib/fseeko.c:32
0x000076aa      e991a1ffff     jmp sym.imp.fseeko
0x000076af      90             nop
0x000076b0      488b4720       mov rax, qword [rdi + 0x20]
0x000076b4      48394728       cmp qword [rdi + 0x28], rax
0x000076b8      75f0           jne 0x76aa                              ; ../coreutils-8.31/lib/fseeko.c:33
0x000076ba      48837f4800     cmp qword [rdi + 0x48], 0
0x000076bf      75e9           jne 0x76aa                              ; ../coreutils-8.31/lib/fseeko.c:21
0x000076c1      4154           push r12
0x000076c3      55             push rbp
0x000076c4      4189d4         mov r12d, edx
0x000076c7      53             push rbx
0x000076c8      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x000076cb      4889fb         mov rbx, rdi
0x000076ce      e8ada0ffff     call sym.imp.fileno
0x000076d3      4489e2         mov edx, r12d
0x000076d6      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x000076d9      89c7           mov edi, eax
0x000076db      e810a0ffff     call sym.imp.lseek
0x000076e0      4883f8ff       cmp rax, 0xffffffffffffffff
0x000076e4      740c           je 0x76f2
0x000076e6      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x000076e9      488983900000.  mov qword [rbx + 0x90], rax
0x000076f0      31c0           xor eax, eax
0x000076f2      5b             pop rbx
0x000076f3      5d             pop rbp
0x000076f4      415c           pop r12
0x000076f6      c3             ret
0x000076f7      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x00007700      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00007702      4154           push r12
0x00007704      4989f5         mov r13, rsi
0x00007707      55             push rbp
0x00007708      53             push rbx
0x00007709      4889fb         mov rbx, rdi
0x0000770c      4989d4         mov r12, rdx
0x0000770f      4883ec18       sub rsp, 0x18
0x00007713      64488b042528.  mov rax, qword fs:[0x28]
0x0000771c      4889442408     mov qword [rsp + 8], rax
0x00007721      31c0           xor eax, eax
0x00007723      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00007728      4885ff         test rdi, rdi
0x0000772b      480f44d8       cmove rbx, rax
0x0000772f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00007732      e8799fffff     call sym.imp.mbrtowc
0x00007737      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0000773b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0000773e      7620           jbe 0x7760                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00007740      4d85e4         test r12, r12
0x00007743      741b           je 0x7760
0x00007745      31ff           xor edi, edi
0x00007747      e8c4000000     call sym.hard_locale
0x0000774c      84c0           test al, al
0x0000774e      7510           jne 0x7760
0x00007750      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00007755      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x0000775a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0000775c      0f1f4000       nop dword [rax]
0x00007760      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00007765      644833142528.  xor rdx, qword fs:[0x28]
0x0000776e      4889e8         mov rax, rbp
0x00007771      750b           jne 0x777e
0x00007773      4883c418       add rsp, 0x18
0x00007777      5b             pop rbx
0x00007778      5d             pop rbp
0x00007779      415c           pop r12
0x0000777b      415d           pop r13
0x0000777d      c3             ret
0x0000777e      e80d9fffff     call sym.imp.__stack_chk_fail
0x00007783      662e0f1f8400.  nop word cs:[rax + rax]
0x0000778d      0f1f00         nop dword [rax]
;-- close_stream:
0x00007790      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00007792      55             push rbp
0x00007793      4889fd         mov rbp, rdi
0x00007796      53             push rbx
0x00007797      e8649effff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x0000779c      8b5d00         mov ebx, dword [rbp]
0x0000779f      4889ef         mov rdi, rbp
0x000077a2      4989c4         mov r12, rax
0x000077a5      e8b6fbffff     call sym.rpl_fclose
0x000077aa      83e320         and ebx, 0x20                           ; "@"
0x000077ad      85db           test ebx, ebx
0x000077af      7517           jne 0x77c8
0x000077b1      85c0           test eax, eax
0x000077b3      740a           je 0x77bf                               ; stdio.h:-186
0x000077b5      4d85e4         test r12, r12                           ; stdio.h:-178
0x000077b8      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000077bd      7439           je 0x77f8
0x000077bf      5b             pop rbx
0x000077c0      5d             pop rbp
0x000077c1      415c           pop r12
0x000077c3      c3             ret
0x000077c4      0f1f4000       nop dword [rax]
0x000077c8      85c0           test eax, eax
0x000077ca      751c           jne 0x77e8
0x000077cc      e8ff9dffff     call sym.imp.__errno_location
0x000077d1      c70000000000   mov dword [rax], 0
0x000077d7      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000077dc      5b             pop rbx
0x000077dd      5d             pop rbp
0x000077de      415c           pop r12
0x000077e0      c3             ret
0x000077e1      0f1f80000000.  nop dword [rax]
0x000077e8      5b             pop rbx
0x000077e9      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000077ee      5d             pop rbp                                 ; stdio.h:-186
0x000077ef      415c           pop r12
0x000077f1      c3             ret
0x000077f2      660f1f440000   nop word [rax + rax]
0x000077f8      e8d39dffff     call sym.imp.__errno_location
0x000077fd      833809         cmp dword [rax], 9
0x00007800      5b             pop rbx
0x00007801      5d             pop rbp
0x00007802      415c           pop r12                                 ; stdio.h:-178
0x00007804      0f95c0         setne al
0x00007807      0fb6c0         movzx eax, al
0x0000780a      f7d8           neg eax
0x0000780c      c3             ret
0x0000780d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00007810      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00007814      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00007816      e8e59fffff     call sym.imp.setlocale
0x0000781b      4889c2         mov rdx, rax
0x0000781e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00007823      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00007826      741d           je 0x7845
0x00007828      488d3df11500.  lea rdi, [0x00008e20]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x0000782f      b902000000     mov ecx, 2
0x00007834      4889d6         mov rsi, rdx
0x00007837      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00007839      0f97c1         seta cl
0x0000783c      80d900         sbb cl, 0
0x0000783f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00007841      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00007843      750b           jne 0x7850
0x00007845      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00007849      c3             ret
0x0000784a      660f1f440000   nop word [rax + rax]
0x00007850      488d3dcb1500.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x8e22 ; "POSIX"
0x00007857      b906000000     mov ecx, 6
0x0000785c      4889d6         mov rsi, rdx
0x0000785f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00007861      0f97c0         seta al
0x00007864      1c00           sbb al, 0
0x00007866      84c0           test al, al
0x00007868      0f95c0         setne al
0x0000786b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000786f      c3             ret
;-- locale_charset:
0x00007870      4883ec08       sub rsp, 8
0x00007874      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00007879      e8329fffff     call sym.imp.nl_langinfo
0x0000787e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00007881      741d           je 0x78a0
0x00007883      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00007886      488d159b1500.  lea rdx, str.ASCII                      ; 0x8e28 ; "ASCII"
0x0000788d      480f44c2       cmove rax, rdx
0x00007891      4883c408       add rsp, 8
0x00007895      c3             ret
0x00007896      662e0f1f8400.  nop word cs:[rax + rax]
0x000078a0      488d05811500.  lea rax, str.ASCII                      ; 0x8e28 ; "ASCII"
0x000078a7      4883c408       add rsp, 8
0x000078ab      c3             ret
0x000078ac      0f1f4000       nop dword [rax]
;-- __libc_csu_init:
0x000078b0      4157           push r15
0x000078b2      4156           push r14
0x000078b4      4989d7         mov r15, rdx
0x000078b7      4155           push r13
0x000078b9      4154           push r12
0x000078bb      4c8d254e3120.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x20aa10 ; "@+"
0x000078c2      55             push rbp
0x000078c3      488d2d4e3120.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x20aa18
0x000078ca      53             push rbx
0x000078cb      4189fd         mov r13d, edi
0x000078ce      4989f6         mov r14, rsi
0x000078d1      4c29e5         sub rbp, r12
0x000078d4      4883ec08       sub rsp, 8
0x000078d8      48c1fd03       sar rbp, 3
0x000078dc      e89f9cffff     call sym._init
0x000078e1      4885ed         test rbp, rbp
0x000078e4      7420           je 0x7906
0x000078e6      31db           xor ebx, ebx
0x000078e8      0f1f84000000.  nop dword [rax + rax]
0x000078f0      4c89fa         mov rdx, r15
0x000078f3      4c89f6         mov rsi, r14
0x000078f6      4489ef         mov edi, r13d
0x000078f9      41ff14dc       call qword [r12 + rbx*8]
0x000078fd      4883c301       add rbx, 1
0x00007901      4839dd         cmp rbp, rbx
0x00007904      75ea           jne 0x78f0
0x00007906      4883c408       add rsp, 8
0x0000790a      5b             pop rbx
0x0000790b      5d             pop rbp
0x0000790c      415c           pop r12
0x0000790e      415d           pop r13
0x00007910      415e           pop r14
0x00007912      415f           pop r15
0x00007914      c3             ret
0x00007915      90             nop
0x00007916      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00007920      f3c3           ret
0x00007922      662e0f1f8400.  nop word cs:[rax + rax]
0x0000792c      0f1f4000       nop dword [rax]
;-- atexit:
0x00007930      488b15d13620.  mov rdx, qword [obj.__dso_handle]       ; [0x20b008:8]=0x20b008 obj.__dso_handle
0x00007937      31f6           xor esi, esi
0x00007939      e9329fffff     jmp sym.imp.__cxa_atexit
0x0000793e      0000           add byte [rax], al
