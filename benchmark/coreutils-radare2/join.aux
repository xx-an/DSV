0x1620: push qword ptr [rip+0x2097ea]
0x1626: jmp qword ptr [rip+0x2097ec]
0x162c: nop dword ptr [rax]
0x1630: jmp qword ptr [rip+0x2097ea]
0x1636: push 0x0
0x163b: jmp 0x1620
0x1640: jmp qword ptr [rip+0x2097e2]
0x1646: push 0x1
0x164b: jmp 0x1620
0x1656: push 0x2
0x165b: jmp 0x1620
0x1666: push 0x3
0x166b: jmp 0x1620
0x1676: push 0x4
0x167b: jmp 0x1620
0x1686: push 0x5
0x168b: jmp 0x1620
0x1690: jmp qword ptr [rip+0x2097ba]
0x1696: push 0x6
0x169b: jmp 0x1620
0x16a0: jmp qword ptr [rip+0x2097b2]
0x16a6: push 0x7
0x16ab: jmp 0x1620
0x16b6: push 0x8
0x16bb: jmp 0x1620
0x16c6: push 0x9
0x16cb: jmp 0x1620
0x16d6: push 0xa
0x16db: jmp 0x1620
0x16e6: push 0xb
0x16eb: jmp 0x1620
0x16f6: push 0xc
0x16fb: jmp 0x1620
0x1706: push 0xd
0x170b: jmp 0x1620
0x1716: push 0xe
0x171b: jmp 0x1620
0x1720: jmp qword ptr [rip+0x209772]
0x1726: push 0xf
0x172b: jmp 0x1620
0x1736: push 0x10
0x173b: jmp 0x1620
0x1746: push 0x11
0x174b: jmp 0x1620
0x1756: push 0x12
0x175b: jmp 0x1620
0x1760: jmp qword ptr [rip+0x209752]
0x1766: push 0x13
0x176b: jmp 0x1620
0x1776: push 0x14
0x177b: jmp 0x1620
0x1786: push 0x15
0x178b: jmp 0x1620
0x1790: jmp qword ptr [rip+0x20973a]
0x1796: push 0x16
0x179b: jmp 0x1620
0x17a6: push 0x17
0x17ab: jmp 0x1620
0x17b6: push 0x18
0x17bb: jmp 0x1620
0x17c0: jmp qword ptr [rip+0x209722]
0x17c6: push 0x19
0x17cb: jmp 0x1620
0x17d0: jmp qword ptr [rip+0x20971a]
0x17d6: push 0x1a
0x17db: jmp 0x1620
0x17e6: push 0x1b
0x17eb: jmp 0x1620
0x17f6: push 0x1c
0x17fb: jmp 0x1620
0x1800: jmp qword ptr [rip+0x209702]
0x1806: push 0x1d
0x180b: jmp 0x1620
0x1816: push 0x1e
0x181b: jmp 0x1620
0x1820: jmp qword ptr [rip+0x2096f2]
0x1826: push 0x1f
0x182b: jmp 0x1620
0x1836: push 0x20
0x183b: jmp 0x1620
0x1846: push 0x21
0x184b: jmp 0x1620
0x1856: push 0x22
0x185b: jmp 0x1620
0x1866: push 0x23
0x186b: jmp 0x1620
0x1870: jmp qword ptr [rip+0x2096ca]
0x1876: push 0x24
0x187b: jmp 0x1620
0x1886: push 0x25
0x188b: jmp 0x1620
0x1896: push 0x26
0x189b: jmp 0x1620
0x18a0: jmp qword ptr [rip+0x2096b2]
0x18a6: push 0x27
0x18ab: jmp 0x1620
0x18b6: push 0x28
0x18bb: jmp 0x1620
0x18c6: push 0x29
0x18cb: jmp 0x1620
0x18d6: push 0x2a
0x18db: jmp 0x1620
0x18e6: push 0x2b
0x18eb: jmp 0x1620
0x18f6: push 0x2c
0x18fb: jmp 0x1620
0x1906: push 0x2d
0x190b: jmp 0x1620
0x1916: push 0x2e
0x191b: jmp 0x1620
0x1926: push 0x2f
0x192b: jmp 0x1620
0x1936: push 0x30
0x193b: jmp 0x1620
0x1946: push 0x31
0x194b: jmp 0x1620
0x1956: push 0x32
0x195b: jmp 0x1620
0x1966: push 0x33
0x196b: jmp 0x1620
0x1976: push 0x34
0x197b: jmp 0x1620
0x1986: push 0x35
0x198b: jmp 0x1620
0x1996: push 0x36
0x199b: jmp 0x1620 0x000019a0 .qword 0x90660020965225ff
0x19a8: add byte ptr [rax],al
0x19aa: add byte ptr [rax],al
0x19ac: add byte ptr [rax],al
0x19ae: add byte ptr [rax],al
0x1a97: nop word ptr [rax+rax]
0x1b4b: nop dword ptr [rax+rax]
0x1b74: nop dword ptr [rax]
0x1c43: nop dword ptr [rax+rax]
0x1c9d: nop dword ptr [rax]
0x1cd4: nop dword ptr [rax]
0x1d12: nop word ptr [rax+rax]
0x1d49: nop dword ptr [rax]
0x1d67: nop word ptr [rax+rax]
0x1d81: nop dword ptr [rax]
0x1de4: nop dword ptr [rax]
0x1df6: nop word ptr cs:[rax+rax]
0x1f70: mov esi,0x2
0x1f75: mov rdi,r12
0x1f78: lea r14,[rsp+0x40]
0x1f7d: call 0x3d80
0x1f82: lea r13,[rsp+0x60]
0x1f87: mov esi,0x2
0x1f8c: mov rdi,rbx
0x1f8f: call 0x3d80
0x1f94: mov edx,0x1
0x1f99: mov rsi,r14
0x1f9c: mov rdi,r12
0x1f9f: mov qword ptr [rsp+0x40],0x0
0x1fa8: mov qword ptr [rsp+0x48],0x0
0x1fb1: mov qword ptr [rsp+0x50],0x0
0x1fba: call 0x35e0
0x1fbf: mov edx,0x2
0x1fc4: mov rsi,r13
0x1fc7: mov rdi,rbx
0x1fca: mov qword ptr [rsp+0x60],0x0
0x1fd3: mov qword ptr [rsp+0x68],0x0
0x1fdc: mov qword ptr [rsp+0x70],0x0
0x1fe5: call 0x35e0
0x1fea: cmp byte ptr [rip+0x209197],0x0
0x1ff1: je 0x202d
0x1ff3: mov rax,qword ptr [rsp+0x40]
0x1ff8: test rax,rax
0x1ffb: je 0x2009
0x1ffd: mov rax,qword ptr [rsp+0x50]
0x2002: mov rax,qword ptr [rax]
0x2005: mov rax,qword ptr [rax+0x18]
0x2009: mov qword ptr [rip+0x209170],rax
0x2010: mov rax,qword ptr [rsp+0x60]
0x2015: test rax,rax
0x2018: je 0x2026
0x201a: mov rax,qword ptr [rsp+0x70]
0x201f: mov rax,qword ptr [rax]
0x2022: mov rax,qword ptr [rax+0x18]
0x2026: mov qword ptr [rip+0x20914b],rax
0x202d: cmp byte ptr [rip+0x2090cc],0x0
0x2034: je 0x2264
0x203a: cmp qword ptr [rsp+0x40],0x0
0x2040: mov rax,qword ptr [rsp+0x60]
0x2045: jne 0x25dd
0x204b: test rax,rax
0x204e: jne 0x2657
0x2054: xor eax,eax
0x2056: cmp dword ptr [rip+0x2090f3],0x2
0x205d: mov qword ptr [rsp+0x38],0x0
0x2066: je 0x2082
0x2068: cmp byte ptr [rip+0x209129],0x0
0x206f: je 0x239c
0x2075: cmp byte ptr [rip+0x20911d],0x0
0x207c: je 0x239c
0x2082: cmp byte ptr [rip+0x209114],0x0
0x2089: jne 0x26dd
0x208f: movzx eax,byte ptr [rip+0x209106]
0x2096: test al,al
0x2098: jne 0x2547
0x209e: mov rdi,qword ptr [rsp+0x38]
0x20a3: call 0x1650
0x20a8: lea rsi,[r14+0x10]
0x20ac: lea rdi,[r14+8]
0x20b0: call 0x2cf0
0x20b5: lea rsi,[r13+0x10]
0x20b9: lea rdi,[r13+8]
0x20bd: call 0x2cf0
0x20c2: mov rdi,r12
0x20c5: call 0x6bb0
0x20ca: test eax,eax
0x20cc: jne 0x27d6
0x20d2: mov rdi,rbx
0x20d5: call 0x6bb0
0x20da: test eax,eax
0x20dc: jne 0x2777
0x20e2: cmp byte ptr [rip+0x2090af],0x0
0x20e9: jne 0x2753
0x20ef: cmp byte ptr [rip+0x2090a3],0x0
0x20f6: jne 0x2753
0x20fc: xor eax,eax
0x20fe: mov rbx,qword ptr [rsp+0x88]
0x2106: xor rbx,qword ptr fs:[0x28]
0x210f: jne 0x2809
0x2115: add rsp,0x98
0x211c: pop rbx
0x211d: pop rbp
0x211e: pop r12
0x2120: pop r13
0x2122: pop r14
0x2124: pop r15
0x2126: ret 
0x2127: nop word ptr [rax+rax]
0x2130: mov rax,qword ptr [rsp+0x70]
0x2135: mov rcx,qword ptr [rsp+0x40]
0x213a: mov r9,qword ptr [rip+0x208ed7]
0x2141: mov r8,qword ptr [rip+0x208ed8]
0x2148: mov rdx,qword ptr [rax]
0x214b: mov rax,qword ptr [rsp+0x50]
0x2150: mov rax,qword ptr [rax+rcx*8-8]
0x2155: lea rcx,[rdx+0x28]
0x2159: mov rdx,qword ptr [rdx+0x18]
0x215d: mov rdi,qword ptr [rax+0x18]
0x2161: lea rsi,[rax+0x28]
0x2165: call 0x2d40
0x216a: test eax,eax
0x216c: jne 0x249f
0x2172: mov edx,0x1
0x2177: mov rsi,r14
0x217a: mov rdi,r12
0x217d: call 0x35e0
0x2182: test al,al
0x2184: jne 0x2130
0x2186: add qword ptr [rsp+0x40],0x1
0x218c: mov byte ptr [rsp+0x10],0x1
0x2191: jmp 0x21da
0x2193: nop dword ptr [rax+rax]
0x2198: mov rax,qword ptr [rsp+0x70]
0x219d: mov rdx,qword ptr [rsp+0x60]
0x21a2: mov r9,qword ptr [rip+0x208e6f]
0x21a9: mov r8,qword ptr [rip+0x208e70]
0x21b0: mov rdx,qword ptr [rax+rdx*8-8]
0x21b5: mov rax,qword ptr [rsp+0x50]
0x21ba: mov rax,qword ptr [rax]
0x21bd: lea rcx,[rdx+0x28]
0x21c1: mov rdx,qword ptr [rdx+0x18]
0x21c5: mov rdi,qword ptr [rax+0x18]
0x21c9: lea rsi,[rax+0x28]
0x21cd: call 0x2d40
0x21d2: test eax,eax
0x21d4: jne 0x2495
0x21da: mov edx,0x2
0x21df: mov rsi,r13
0x21e2: mov rdi,rbx
0x21e5: call 0x35e0
0x21ea: test al,al
0x21ec: jne 0x2198
0x21ee: add qword ptr [rsp+0x60],0x1
0x21f4: mov byte ptr [rsp+0x1f],0x1
0x21f9: cmp byte ptr [rip+0x208f9b],0x0
0x2200: jne 0x24a9
0x2206: cmp byte ptr [rsp+0x10],0x0
0x220b: jne 0x2479
0x2211: mov rax,qword ptr [rsp+0x50]
0x2216: mov rdx,qword ptr [rsp+0x40]
0x221b: lea rdx,[rax+rdx*8-8]
0x2220: mov rcx,qword ptr [rax]
0x2223: mov rsi,qword ptr [rdx]
0x2226: mov qword ptr [rax],rsi
0x2229: mov qword ptr [rdx],rcx
0x222c: mov qword ptr [rsp+0x40],0x1
0x2235: cmp byte ptr [rsp+0x1f],0x0
0x223a: jne 0x2487
0x2240: mov rax,qword ptr [rsp+0x70]
0x2245: mov rdx,qword ptr [rsp+0x60]
0x224a: lea rdx,[rax+rdx*8-8]
0x224f: mov rcx,qword ptr [rax]
0x2252: mov rsi,qword ptr [rdx]
0x2255: mov qword ptr [rax],rsi
0x2258: mov qword ptr [rdx],rcx
0x225b: mov qword ptr [rsp+0x60],0x1
0x2264: mov rax,qword ptr [rsp+0x40]
0x2269: test rax,rax
0x226c: je 0x2054
0x2272: cmp qword ptr [rsp+0x60],0x0
0x2278: je 0x2056
0x227e: mov rax,qword ptr [rsp+0x70]
0x2283: mov r9,qword ptr [rip+0x208d8e]
0x228a: mov r8,qword ptr [rip+0x208d8f]
0x2291: mov rdx,qword ptr [rax]
0x2294: mov rax,qword ptr [rsp+0x50]
0x2299: mov rax,qword ptr [rax]
0x229c: lea rcx,[rdx+0x28]
0x22a0: mov rdx,qword ptr [rdx+0x18]
0x22a4: mov rdi,qword ptr [rax+0x18]
0x22a8: lea rsi,[rax+0x28]
0x22ac: call 0x2d40
0x22b1: test eax,eax
0x22b3: js 0x242e
0x22b9: je 0x2172
0x22bf: cmp byte ptr [rip+0x208ed6],0x0
0x22c6: jne 0x2460
0x22cc: mov edx,0x2
0x22d1: mov rsi,r13
0x22d4: mov rdi,rbx
0x22d7: mov qword ptr [rsp+0x60],0x0
0x22e0: call 0x35e0
0x22e5: mov rax,qword ptr [rsp+0x40]
0x22ea: mov byte ptr [rip+0x208ea9],0x1
0x22f1: test rax,rax
0x22f4: jne 0x2272
0x22fa: jmp 0x2054
0x239c: test rax,rax
0x239f: je 0x2540
0x23a5: movzx r15d,byte ptr [rip+0x208df0]
0x23ad: test r15b,r15b
0x23b0: jne 0x268d
0x23b6: mov r15d,0x1
0x23bc: cmp qword ptr [rsp+0x60],0x0
0x23c2: je 0x23cb
0x23c4: mov byte ptr [rip+0x208dcf],0x1
0x23cb: lea rbp,[rsp+0x38]
0x23d0: mov edx,0x1
0x23d5: mov rsi,rbp
0x23d8: mov rdi,r12
0x23db: call 0x31f0
0x23e0: test al,al
0x23e2: je 0x23fa
0x23e4: cmp byte ptr [rip+0x208db2],0x0
0x23eb: jne 0x26a6
0x23f1: cmp byte ptr [rip+0x208da0],0x0
0x23f8: je 0x23d0
0x23fa: movzx eax,byte ptr [rip+0x208d9b]
0x2401: test al,al
0x2403: jne 0x240a
0x2405: test r15b,r15b
0x2408: je 0x2416
0x240a: cmp qword ptr [rsp+0x60],0x0
0x2410: jne 0x2553
0x2416: mov rdi,qword ptr [rsp+0x38]
0x241b: test rdi,rdi
0x241e: je 0x20a3
0x2424: call 0x2c70
0x2429: jmp 0x209e
0x242e: cmp byte ptr [rip+0x208d68],0x0
0x2435: jne 0x2527
0x243b: mov edx,0x1
0x2440: mov rsi,r14
0x2443: mov rdi,r12
0x2446: mov qword ptr [rsp+0x40],0x0
0x244f: call 0x35e0
0x2454: mov byte ptr [rip+0x208d3f],0x1
0x245b: jmp 0x2264
0x2460: mov rax,qword ptr [rsp+0x70]
0x2465: lea rdi,[rip+0x208cb4]
0x246c: mov rsi,qword ptr [rax]
0x246f: call 0x2fd0
0x2474: jmp 0x22cc
0x2479: mov qword ptr [rsp+0x40],0x0
0x2482: jmp 0x2235
0x2487: mov qword ptr [rsp+0x60],0x0
0x2490: jmp 0x2264
0x2495: mov byte ptr [rsp+0x1f],0x0
0x249a: jmp 0x21f9
0x249f: mov byte ptr [rsp+0x10],0x0
0x24a4: jmp 0x21da
0x24a9: cmp qword ptr [rsp+0x40],0x1
0x24af: mov qword ptr [rsp+8],0x0
0x24b8: je 0x2206
0x24be: nop 
0x24c0: xor r15d,r15d
0x24c3: cmp qword ptr [rsp+0x60],0x1
0x24c9: mov rax,qword ptr [rsp+8]
0x24ce: lea rbp,[rax*8]
0x24d6: je 0x2509
0x24d8: nop dword ptr [rax+rax]
0x24e0: mov rdx,qword ptr [rsp+0x70]
0x24e5: mov rsi,qword ptr [rdx+r15*8]
0x24e9: mov rdx,qword ptr [rsp+0x50]
0x24ee: add r15,0x1
0x24f2: mov rdi,qword ptr [rdx+rbp]
0x24f6: call 0x2fd0
0x24fb: mov rax,qword ptr [rsp+0x60]
0x2500: lea rdx,[rax-1]
0x2504: cmp r15,rdx
0x2507: jb 0x24e0
0x2509: add qword ptr [rsp+8],0x1
0x250f: mov rax,qword ptr [rsp+0x40]
0x2514: mov rcx,qword ptr [rsp+8]
0x2519: sub rax,0x1
0x251d: cmp rcx,rax
0x2520: jb 0x24c0
0x2522: jmp 0x2206
0x2527: mov rax,qword ptr [rsp+0x50]
0x252c: lea rsi,[rip+0x208bed]
0x2533: mov rdi,qword ptr [rax]
0x2536: call 0x2fd0
0x253b: jmp 0x243b
0x2540: movzx eax,byte ptr [rip+0x208c55]
0x2547: cmp qword ptr [rsp+0x60],0x0
0x254d: je 0x209e
0x2553: test al,al
0x2555: jne 0x2674
0x255b: cmp qword ptr [rsp+0x40],0x0
0x2561: jne 0x2668
0x2567: lea rbp,[rsp+0x38]
0x256c: lea r15,[rip+0x208bad]
0x2573: mov edx,0x2
0x2578: mov rsi,rbp
0x257b: mov rdi,rbx
0x257e: call 0x31f0
0x2583: test al,al
0x2585: je 0x2416
0x258b: cmp byte ptr [rip+0x208c0a],0x0
0x2592: jne 0x25a2
0x2594: cmp byte ptr [rip+0x208bfe],0x0
0x259b: je 0x2573
0x259d: jmp 0x2416
0x25a2: mov rsi,qword ptr [rsp+0x38]
0x25a7: mov rdi,r15
0x25aa: call 0x2fd0
0x25af: cmp byte ptr [rip+0x208be3],0x0
0x25b6: je 0x2573
0x25b8: cmp byte ptr [rip+0x208bdd],0x0
0x25bf: jne 0x2573
0x25c1: jmp 0x2416
0x25dd: mov rdx,qword ptr [rsp+0x50]
0x25e2: test rax,rax
0x25e5: lea rsi,[rip+0x208b34]
0x25ec: mov rdi,qword ptr [rdx]
0x25ef: jne 0x265e
0x25f1: call 0x2fd0
0x25f6: cmp qword ptr [rsp+0x40],0x0
0x25fc: mov qword ptr [rip+0x208bc9],0x0
0x2607: mov qword ptr [rip+0x208bc6],0x0
0x2612: je 0x262d
0x2614: mov edx,0x1
0x2619: mov rsi,r14
0x261c: mov rdi,r12
0x261f: mov qword ptr [rsp+0x40],0x0
0x2628: call 0x35e0
0x262d: cmp qword ptr [rsp+0x60],0x0
0x2633: je 0x2264
0x2639: mov edx,0x2
0x263e: mov rsi,r13
0x2641: mov rdi,rbx
0x2644: mov qword ptr [rsp+0x60],0x0
0x264d: call 0x35e0
0x2652: jmp 0x2264
0x2657: lea rdi,[rip+0x208ac2]
0x265e: mov rax,qword ptr [rsp+0x70]
0x2663: mov rsi,qword ptr [rax]
0x2666: jmp 0x25f1
0x2668: mov byte ptr [rip+0x208b2b],0x1
0x266f: jmp 0x2567
0x2674: mov rax,qword ptr [rsp+0x70]
0x2679: lea rdi,[rip+0x208aa0]
0x2680: mov rsi,qword ptr [rax]
0x2683: call 0x2fd0
0x2688: jmp 0x255b
0x268d: mov rax,qword ptr [rsp+0x50]
0x2692: lea rsi,[rip+0x208a87]
0x2699: mov rdi,qword ptr [rax]
0x269c: call 0x2fd0
0x26a1: jmp 0x23bc
0x26a6: mov rdi,qword ptr [rsp+0x38]
0x26ab: lea rsi,[rip+0x208a6e]
0x26b2: call 0x2fd0
0x26b7: cmp byte ptr [rip+0x208ada],0x0
0x26be: je 0x23d0
0x26c4: cmp byte ptr [rip+0x208ad2],0x0
0x26cb: jne 0x23d0
0x26d1: jmp 0x23fa
0x26dd: xor r15d,r15d
0x26e0: test rax,rax
0x26e3: jne 0x268d
0x26e5: movzx eax,byte ptr [rip+0x208ab0]
0x26ec: test al,al
0x26ee: je 0x209e
0x26f4: jmp 0x240a
0x2753: lea rsi,[rip+0x578e]
0x275a: mov edx,0x5
0x275f: xor edi,edi
0x2761: call 0x16f0
0x2766: xor esi,esi
0x2768: mov rdx,rax
0x276b: mov edi,0x1
0x2770: xor eax,eax
0x2772: call 0x18f0
0x2777: mov rdx,qword ptr [rip+0x208a3a]
0x277e: mov esi,0x3
0x2783: xor edi,edi
0x2785: call 0x5b80
0x278a: mov rbx,rax
0x278d: call 0x1670
0x2792: mov esi,dword ptr [rax]
0x2794: lea rdx,[rip+0x55b7]
0x279b: mov rcx,rbx
0x279e: mov edi,0x1
0x27a3: xor eax,eax
0x27a5: call 0x18f0
0x27d6: mov rdx,qword ptr [rip+0x2089d3]
0x27dd: mov esi,0x3
0x27e2: xor edi,edi
0x27e4: call 0x5b80
0x27e9: mov rbx,rax
0x27ec: call 0x1670
0x27f1: mov esi,dword ptr [rax]
0x27f3: lea rdx,[rip+0x5558]
0x27fa: mov rcx,rbx
0x27fd: mov edi,0x1
0x2802: xor eax,eax
0x2804: call 0x18f0
0x2809: call 0x1720
0x28cb: jmp 0x1b41
0x2925: jmp 0x1b41
0x292a: nop word ptr [rax+rax]
0x295a: hlt 
0x295b: nop dword ptr [rax+rax]
0x2960: lea rdi,[rip+0x208739]
0x2967: push rbp
0x2968: lea rax,[rip+0x208731]
0x296f: cmp rax,rdi
0x2972: mov rbp,rsp
0x2975: je 0x2990
0x2977: mov rax,qword ptr [rip+0x20865a]
0x297e: test rax,rax
0x2981: je 0x2990
0x2983: pop rbp
0x2984: jmp rax
0x2986: nop word ptr cs:[rax+rax]
0x2990: pop rbp
0x2991: ret 
0x2992: nop dword ptr [rax]
0x2996: nop word ptr cs:[rax+rax]
0x29a0: lea rdi,[rip+0x2086f9]
0x29a7: lea rsi,[rip+0x2086f2]
0x29ae: push rbp
0x29af: sub rsi,rdi
0x29b2: mov rbp,rsp
0x29b5: sar rsi,0x3
0x29b9: mov rax,rsi
0x29bc: shr rax,0x3f
0x29c0: add rsi,rax
0x29c3: sar rsi,0x1
0x29c6: je 0x29e0
0x29c8: mov rax,qword ptr [rip+0x208621]
0x29cf: test rax,rax
0x29d2: je 0x29e0
0x29d4: pop rbp
0x29d5: jmp rax
0x29d7: nop word ptr [rax+rax]
0x29e0: pop rbp
0x29e1: ret 
0x29e2: nop dword ptr [rax]
0x29e6: nop word ptr cs:[rax+rax]
0x29f0: cmp byte ptr [rip+0x2086f1],0x0
0x29f7: jne 0x2a28
0x29f9: cmp qword ptr [rip+0x2085f7],0x0
0x2a01: push rbp
0x2a02: mov rbp,rsp
0x2a05: je 0x2a13
0x2a07: mov rdi,qword ptr [rip+0x2085fa]
0x2a0e: call 0x19a0
0x2a13: call 0x2960
0x2a18: mov byte ptr [rip+0x2086c9],0x1
0x2a1f: pop rbp
0x2a20: ret 
0x2a21: nop dword ptr [rax]
0x2a28: ret 
0x2a2a: nop word ptr [rax+rax]
0x2a30: push rbp
0x2a31: mov rbp,rsp
0x2a34: pop rbp
0x2a35: jmp 0x29a0
0x2a3a: nop word ptr [rax+rax]
0x2a8d: nop dword ptr [rax]
0x2aea: nop word ptr [rax+rax]
0x2b2b: call 0x1720
0x2b39: nop dword ptr [rax]
0x2bcb: nop dword ptr [rax+rax]
0x2c6b: nop dword ptr [rax+rax]
0x2c70: push rbx
0x2c71: mov rbx,rdi
0x2c74: mov rdi,qword ptr [rdi+0x28]
0x2c78: call 0x1650
0x2c7d: mov rdi,qword ptr [rbx+0x10]
0x2c81: mov qword ptr [rbx+0x28],0x0
0x2c89: call 0x1650
0x2c8e: mov qword ptr [rbx+0x10],0x0
0x2c96: pop rbx
0x2c97: ret 
0x2c98: nop dword ptr [rax+rax]
0x2ca0: push rbx
0x2ca1: mov rbx,qword ptr [rip+0x2084f8]
0x2ca8: test rbx,rbx
0x2cab: je 0x2cbd
0x2cad: mov rdi,rbx
0x2cb0: call 0x2c70
0x2cb5: mov rdi,rbx
0x2cb8: call 0x1650
0x2cbd: mov rbx,qword ptr [rip+0x2084e4]
0x2cc4: test rbx,rbx
0x2cc7: je 0x2ce0
0x2cc9: mov rdi,rbx
0x2ccc: call 0x2c70
0x2cd1: mov rdi,rbx
0x2cd4: pop rbx
0x2cd5: jmp 0x1650
0x2cda: nop word ptr [rax+rax]
0x2ce0: pop rbx
0x2ce1: ret 
0x2ce2: nop dword ptr [rax]
0x2ce6: nop word ptr cs:[rax+rax]
0x2cf0: push r12
0x2cf2: push rbp
0x2cf3: mov rbp,rsi
0x2cf6: push rbx
0x2cf7: cmp qword ptr [rdi],0x0
0x2cfb: je 0x2d31
0x2cfd: mov r12,rdi
0x2d00: xor ebx,ebx
0x2d02: nop word ptr [rax+rax]
0x2d08: mov rax,qword ptr [rbp]
0x2d0c: mov rdi,qword ptr [rax+rbx*8]
0x2d10: test rdi,rdi
0x2d13: je 0x2d22
0x2d15: call 0x2c70
0x2d1a: mov rax,qword ptr [rbp]
0x2d1e: mov rdi,qword ptr [rax+rbx*8]
0x2d22: call 0x1650
0x2d27: add rbx,0x1
0x2d2b: cmp rbx,qword ptr [r12]
0x2d2f: jb 0x2d08
0x2d31: pop rbx
0x2d32: mov rdi,qword ptr [rbp]
0x2d36: pop rbp
0x2d37: pop r12
0x2d39: jmp 0x1650
0x2d3e: nop 
0x2d40: push rbp
0x2d41: push rbx
0x2d42: sub rsp,0x8
0x2d46: cmp r8,rdi
0x2d49: jae 0x2dc8
0x2d4b: shl r8,0x4
0x2d4f: add r8,qword ptr [rsi]
0x2d52: cmp r9,rdx
0x2d55: mov rbp,qword ptr [r8+8]
0x2d59: jae 0x2e00
0x2d5f: shl r9,0x4
0x2d63: add r9,qword ptr [rcx]
0x2d66: test rbp,rbp
0x2d69: mov rsi,qword ptr [r9]
0x2d6c: mov rbx,qword ptr [r9+8]
0x2d70: je 0x2dd8
0x2d72: test rbx,rbx
0x2d75: je 0x2e43
0x2d7b: cmp byte ptr [rip+0x20837f],0x0
0x2d82: mov rdi,qword ptr [r8]
0x2d85: jne 0x2e10
0x2d8b: cmp byte ptr [rip+0x20840c],0x0
0x2d92: jne 0x2e28
0x2d98: cmp rbp,rbx
0x2d9b: mov rdx,rbx
0x2d9e: cmovbe rdx,rbp
0x2da2: call 0x17e0
0x2da7: test eax,eax
0x2da9: jne 0x2df2
0x2dab: cmp rbp,rbx
0x2dae: jb 0x2e3c
0x2db4: setne al
0x2db7: add rsp,0x8
0x2dbb: movzx eax,al
0x2dbe: pop rbx
0x2dbf: pop rbp
0x2dc0: ret 
0x2dc1: nop dword ptr [rax]
0x2dc8: cmp r9,rdx
0x2dcb: jae 0x2df0
0x2dcd: shl r9,0x4
0x2dd1: add r9,qword ptr [rcx]
0x2dd4: mov rbx,qword ptr [r9+8]
0x2dd8: xor eax,eax
0x2dda: test rbx,rbx
0x2ddd: setne al
0x2de0: add rsp,0x8
0x2de4: neg eax
0x2de6: pop rbx
0x2de7: pop rbp
0x2de8: ret 
0x2de9: nop dword ptr [rax]
0x2df0: xor eax,eax
0x2df2: add rsp,0x8
0x2df6: pop rbx
0x2df7: pop rbp
0x2df8: ret 
0x2df9: nop dword ptr [rax]
0x2e00: xor eax,eax
0x2e02: test rbp,rbp
0x2e05: setne al
0x2e08: add rsp,0x8
0x2e0c: pop rbx
0x2e0d: pop rbp
0x2e0e: ret 
0x2e0f: nop 
0x2e10: cmp rbp,rbx
0x2e13: mov rdx,rbx
0x2e16: cmovbe rdx,rbp
0x2e1a: call 0x3ff0
0x2e1f: jmp 0x2da7
0x2e21: nop dword ptr [rax]
0x2e28: add rsp,0x8
0x2e2c: mov rcx,rbx
0x2e2f: mov rdx,rsi
0x2e32: pop rbx
0x2e33: mov rsi,rbp
0x2e36: pop rbp
0x2e37: jmp 0x66f0
0x2e3c: mov eax,0xffffffff
0x2e41: jmp 0x2df2
0x2e43: mov eax,0x1
0x2e48: jmp 0x2df2
0x2e4a: nop word ptr [rax+rax]
0x2e50: cmp rdi,rsi
0x2e53: jae 0x2e80
0x2e55: shl rdi,0x4
0x2e59: add rdi,qword ptr [rdx]
0x2e5c: mov rdx,qword ptr [rdi+8]
0x2e60: test rdx,rdx
0x2e63: je 0x2e80
0x2e65: mov rcx,qword ptr [rip+0x20823c]
0x2e6c: mov rdi,qword ptr [rdi]
0x2e6f: mov esi,0x1
0x2e74: jmp 0x18a0
0x2e79: nop dword ptr [rax]
0x2e80: mov rdi,qword ptr [rip+0x208309]
0x2e87: test rdi,rdi
0x2e8a: je 0x2ea0
0x2e8c: mov rsi,qword ptr [rip+0x208215]
0x2e93: jmp 0x17f0
0x2e98: nop dword ptr [rax+rax]
0x2ea0: ret 
0x2ea2: nop dword ptr [rax]
0x2ea6: nop word ptr cs:[rax+rax]
0x2eb0: push r15
0x2eb2: push r14
0x2eb4: mov r15,rdi
0x2eb7: push r13
0x2eb9: push r12
0x2ebb: mov r12,rdx
0x2ebe: push rbp
0x2ebf: push rbx
0x2ec0: sub rsp,0x18
0x2ec4: cmp byte ptr [rip+0x2082bd],0x0
0x2ecb: mov qword ptr [rsp+8],rsi
0x2ed0: jne 0x2ed6
0x2ed2: mov r12,qword ptr [rdi+0x18]
0x2ed6: mov r14d,dword ptr [rip+0x208137]
0x2edd: mov eax,0x20
0x2ee2: test r14d,r14d
0x2ee5: cmovs r14d,eax
0x2ee9: mov rax,qword ptr [rsp+8]
0x2eee: mov ebp,r14d
0x2ef1: cmp r12,rax
0x2ef4: mov r13,rax
0x2ef7: cmovbe r13,r12
0x2efb: test r13,r13
0x2efe: je 0x2f49
0x2f00: lea rax,[r15+0x28]
0x2f04: xor ebx,ebx
0x2f06: movzx r14d,r14b
0x2f0a: mov qword ptr [rsp],rax
0x2f0e: nop 
0x2f10: mov rdi,qword ptr [rip+0x208191]
0x2f17: mov rax,qword ptr [rdi+0x28]
0x2f1b: cmp rax,qword ptr [rdi+0x30]
0x2f1f: jae 0x2fa8
0x2f25: lea rdx,[rax+1]
0x2f29: mov qword ptr [rdi+0x28],rdx
0x2f2d: mov byte ptr [rax],bpl
0x2f30: mov rsi,qword ptr [r15+0x18]
0x2f34: mov rdx,qword ptr [rsp]
0x2f38: mov rdi,rbx
0x2f3b: add rbx,0x1
0x2f3f: call 0x2e50
0x2f44: cmp rbx,r13
0x2f47: jne 0x2f10
0x2f49: mov rbx,qword ptr [rsp+8]
0x2f4e: add rbx,0x1
0x2f52: cmp r12,rbx
0x2f55: jbe 0x2f94
0x2f57: lea r13,[r15+0x28]
0x2f5b: movzx r14d,bpl
0x2f5f: nop 
0x2f60: mov rdi,qword ptr [rip+0x208141]
0x2f67: mov rax,qword ptr [rdi+0x28]
0x2f6b: cmp rax,qword ptr [rdi+0x30]
0x2f6f: jae 0x2fb8
0x2f71: lea rdx,[rax+1]
0x2f75: mov qword ptr [rdi+0x28],rdx
0x2f79: mov byte ptr [rax],bpl
0x2f7c: mov rsi,qword ptr [r15+0x18]
0x2f80: mov rdi,rbx
0x2f83: mov rdx,r13
0x2f86: add rbx,0x1
0x2f8a: call 0x2e50
0x2f8f: cmp r12,rbx
0x2f92: jne 0x2f60
0x2f94: add rsp,0x18
0x2f98: pop rbx
0x2f99: pop rbp
0x2f9a: pop r12
0x2f9c: pop r13
0x2f9e: pop r14
0x2fa0: pop r15
0x2fa2: ret 
0x2fa3: nop dword ptr [rax+rax]
0x2fa8: mov esi,r14d
0x2fab: call 0x1760
0x2fb0: jmp 0x2f30
0x2fb5: nop dword ptr [rax]
0x2fb8: mov esi,r14d
0x2fbb: call 0x1760
0x2fc0: jmp 0x2f7c
0x2fc2: nop dword ptr [rax]
0x2fc6: nop word ptr cs:[rax+rax]
0x2fd0: push r14
0x2fd2: push r13
0x2fd4: mov eax,0x20
0x2fd9: push r12
0x2fdb: mov r12d,dword ptr [rip+0x208032]
0x2fe2: mov r13,rsi
0x2fe5: push rbp
0x2fe6: push rbx
0x2fe7: mov rbp,rdi
0x2fea: mov rbx,qword ptr [rip+0x20817f]
0x2ff1: lea r14,[rip+0x208128]
0x2ff8: test r12d,r12d
0x2ffb: cmovs r12d,eax
0x2fff: test rbx,rbx
0x3002: je 0x3070
0x3004: mov eax,dword ptr [rbx]
0x3006: test eax,eax
0x3008: jne 0x305d
0x300a: cmp rbp,r14
0x300d: je 0x30f0
0x3013: mov rdi,qword ptr [rip+0x208006]
0x301a: mov rax,rbp
0x301d: mov rsi,qword ptr [rax+0x18]
0x3021: lea rdx,[rax+0x28]
0x3025: call 0x2e50
0x302a: mov rbx,qword ptr [rbx+0x10]
0x302e: test rbx,rbx
0x3031: je 0x30c3
0x3037: mov rdi,qword ptr [rip+0x20806a]
0x303e: mov rax,qword ptr [rdi+0x28]
0x3042: cmp rax,qword ptr [rdi+0x30]
0x3046: jae 0x3100
0x304c: lea rdx,[rax+1]
0x3050: mov qword ptr [rdi+0x28],rdx
0x3054: mov byte ptr [rax],r12b
0x3057: mov eax,dword ptr [rbx]
0x3059: test eax,eax
0x305b: je 0x300a
0x305d: cmp eax,0x1
0x3060: mov rax,rbp
0x3063: mov rdi,qword ptr [rbx+8]
0x3067: cmovne rax,r13
0x306b: jmp 0x301d
0x306d: nop dword ptr [rax]
0x3070: lea rax,[rip+0x2080a9]
0x3077: cmp rdi,rax
0x307a: je 0x3120
0x3080: mov rdi,qword ptr [rip+0x207f99]
0x3087: mov rax,rbp
0x308a: mov rsi,qword ptr [rax+0x18]
0x308e: lea rdx,[rax+0x28]
0x3092: call 0x2e50
0x3097: mov rdx,qword ptr [rip+0x2080e2]
0x309e: mov rsi,qword ptr [rip+0x207f7b]
0x30a5: mov rdi,rbp
0x30a8: call 0x2eb0
0x30ad: mov rdx,qword ptr [rip+0x2080c4]
0x30b4: mov rsi,qword ptr [rip+0x207f5d]
0x30bb: mov rdi,r13
0x30be: call 0x2eb0
0x30c3: mov rdi,qword ptr [rip+0x207fde]
0x30ca: movzx edx,byte ptr [rip+0x207f3f]
0x30d1: mov rax,qword ptr [rdi+0x28]
0x30d5: cmp rax,qword ptr [rdi+0x30]
0x30d9: jae 0x3110
0x30db: lea rcx,[rax+1]
0x30df: mov qword ptr [rdi+0x28],rcx
0x30e3: mov byte ptr [rax],dl
0x30e5: pop rbx
0x30e6: pop rbp
0x30e7: pop r12
0x30e9: pop r13
0x30eb: pop r14
0x30ed: ret 
0x30ee: nop 
0x30f0: mov rdi,qword ptr [rip+0x207f21]
0x30f7: mov rax,r13
0x30fa: jmp 0x301d
0x30ff: nop 
0x3100: movzx esi,r12b
0x3104: call 0x1760
0x3109: jmp 0x3004
0x310e: nop 
0x3110: pop rbx
0x3111: pop rbp
0x3112: pop r12
0x3114: pop r13
0x3116: pop r14
0x3118: movzx esi,dl
0x311b: jmp 0x1760
0x3120: mov rdi,qword ptr [rip+0x207ef1]
0x3127: mov rax,rsi
0x312a: jmp 0x308a
0x312f: nop 
0x3130: push r12
0x3132: mov r12,rsi
0x3135: push rbp
0x3136: push rbx
0x3137: mov rax,qword ptr [rdi+0x18]
0x313b: mov rbx,rdi
0x313e: mov rsi,qword ptr [rdi+0x20]
0x3142: mov rbp,rdx
0x3145: mov rdi,qword ptr [rdi+0x28]
0x3149: cmp rax,rsi
0x314c: jae 0x3170
0x314e: mov rdx,rax
0x3151: add rax,0x1
0x3155: shl rdx,0x4
0x3159: add rdi,rdx
0x315c: mov qword ptr [rdi],r12
0x315f: mov qword ptr [rdi+8],rbp
0x3163: mov qword ptr [rbx+0x18],rax
0x3167: pop rbx
0x3168: pop rbp
0x3169: pop r12
0x316b: ret 
0x316c: nop dword ptr [rax]
0x3170: test rdi,rdi
0x3173: je 0x31b0
0x3175: movabs rax,0x555555555555554
0x317f: cmp rsi,rax
0x3182: ja 0x31d5
0x3184: mov rax,rsi
0x3187: shr rax,0x1
0x318a: lea rsi,[rsi+rax+1]
0x318f: mov qword ptr [rbx+0x20],rsi
0x3193: shl rsi,0x4
0x3197: call 0x6400
0x319c: mov rdi,rax
0x319f: mov qword ptr [rbx+0x28],rax
0x31a3: mov rax,qword ptr [rbx+0x18]
0x31a7: jmp 0x314e
0x31a9: nop dword ptr [rax]
0x31b0: test rsi,rsi
0x31b3: mov eax,0x8
0x31b8: mov edx,0x10
0x31bd: cmove rsi,rax
0x31c1: mov rax,rdx
0x31c4: xor ecx,ecx
0x31c6: mul rsi
0x31c9: jo 0x31da
0x31cb: test rax,rax
0x31ce: js 0x31d5
0x31d0: test rcx,rcx
0x31d3: je 0x318f
0x31d5: call 0x65f0
0x31da: mov ecx,0x1
0x31df: jmp 0x31cb
0x31e1: nop dword ptr [rax+rax]
0x31e6: nop word ptr cs:[rax+rax]
0x31f0: push r15
0x31f2: push r14
0x31f4: mov r14,rdi
0x31f7: push r13
0x31f9: push r12
0x31fb: lea r12,[rip+0x207fce]
0x3202: push rbp
0x3203: push rbx
0x3204: lea ebx,[rdx-1]
0x3207: mov rbp,rsi
0x320a: movsxd rbx,ebx
0x320d: sub rsp,0x18
0x3211: mov r13,qword ptr [rsi]
0x3214: cmp qword ptr [r12+rbx*8],r13
0x3218: mov dword ptr [rsp+0xc],edx
0x321c: je 0x3500
0x3222: test r13,r13
0x3225: je 0x351e
0x322b: mov qword ptr [r13+0x18],0x0
0x3233: movsx edx,byte ptr [rip+0x207dd6]
0x323a: mov rsi,r14
0x323d: mov rdi,r13
0x3240: call 0x3ec0
0x3245: test rax,rax
0x3248: je 0x34d0
0x324e: lea rax,[rip+0x207f6b]
0x3255: mov r14,qword ptr [r13+0x10]
0x3259: add qword ptr [rax+rbx*8],0x1
0x325e: mov rax,qword ptr [r13+8]
0x3262: lea r15,[rax-1]
0x3266: lea rbp,[r14+r15]
0x326a: cmp r14,rbp
0x326d: je 0x3351
0x3273: mov esi,dword ptr [rip+0x207d9b]
0x3279: test esi,esi
0x327b: js 0x3286
0x327d: cmp esi,0xa
0x3280: jne 0x34a3
0x3286: test esi,esi
0x3288: jns 0x3343
0x328e: call 0x1990
0x3293: mov rdx,qword ptr [rax]
0x3296: mov r15,rax
0x3299: nop dword ptr [rax]
0x32a0: movzx edi,byte ptr [r14]
0x32a4: lea rax,[r14+1]
0x32a8: test byte ptr [rdx+rdi*2],0x1
0x32ac: jne 0x3560
0x32b2: cmp dil,0xa
0x32b6: je 0x3560
0x32bc: cmp rbp,rax
0x32bf: je 0x3578
0x32c5: movzx edi,byte ptr [r14+1]
0x32ca: test byte ptr [rdx+rdi*2],0x1
0x32ce: mov rsi,rdi
0x32d1: jne 0x32f8
0x32d3: cmp sil,0xa
0x32d7: je 0x32f8
0x32d9: add rax,0x1
0x32dd: cmp rbp,rax
0x32e0: je 0x3578
0x32e6: movzx edi,byte ptr [rax]
0x32e9: test byte ptr [rdx+rdi*2],0x1
0x32ed: mov rsi,rdi
0x32f0: je 0x32d3
0x32f2: nop word ptr [rax+rax]
0x32f8: mov rdx,rax
0x32fb: mov rsi,r14
0x32fe: mov rdi,r13
0x3301: sub rdx,r14
0x3304: mov qword ptr [rsp],rax
0x3308: call 0x3130
0x330d: mov rax,qword ptr [rsp]
0x3311: lea r14,[rax+1]
0x3315: cmp rbp,r14
0x3318: je 0x3340
0x331a: movzx esi,byte ptr [rax+1]
0x331e: mov rdx,qword ptr [r15]
0x3321: test byte ptr [rdx+rsi*2],0x1
0x3325: mov rax,rsi
0x3328: jne 0x3540
0x332e: cmp al,0xa
0x3330: je 0x3540
0x3336: lea rax,[r14+1]
0x333a: jmp 0x32bc
0x333c: nop dword ptr [rax]
0x3340: xor r15d,r15d
0x3343: mov rdx,r15
0x3346: mov rsi,r14
0x3349: mov rdi,r13
0x334c: call 0x3130
0x3351: mov rax,qword ptr [r12+rbx*8]
0x3355: test rax,rax
0x3358: je 0x3460
0x335e: mov edx,dword ptr [rip+0x207dec]
0x3364: cmp edx,0x2
0x3367: je 0x3460
0x336d: cmp edx,0x1
0x3370: je 0x337f
0x3372: cmp byte ptr [rip+0x207e21],0x0
0x3379: je 0x3460
0x337f: lea rbp,[rip+0x207e12]
0x3386: cmp byte ptr [rbp+rbx],0x0
0x338b: jne 0x3460
0x3391: cmp dword ptr [rsp+0xc],0x1
0x3396: mov r8,qword ptr [rip+0x207c83]
0x339d: lea rcx,[r13+0x28]
0x33a1: cmovne r8,qword ptr [rip+0x207c6f]
0x33a9: mov rdx,qword ptr [r13+0x18]
0x33ad: lea rsi,[rax+0x28]
0x33b1: mov rdi,qword ptr [rax+0x18]
0x33b5: mov r9,r8
0x33b8: call 0x2d40
0x33bd: test eax,eax
0x33bf: jle 0x3460
0x33c5: mov rax,qword ptr [r13+8]
0x33c9: xor r9d,r9d
0x33cc: mov r14,qword ptr [r13+0x10]
0x33d0: test rax,rax
0x33d3: je 0x33f7
0x33d5: cmp byte ptr [r14+rax-1],0xa
0x33db: lea rdx,[rax-1]
0x33df: je 0x358e
0x33e5: cmp rax,0x7fffffff
0x33eb: mov edx,0x7fffffff
0x33f0: cmovbe rdx,rax
0x33f4: mov r9,rdx
0x33f7: lea rax,[rip+0x207dc2]
0x33fe: lea rsi,[rip+0x497b]
0x3405: xor edi,edi
0x3407: mov edx,0x5
0x340c: mov dword ptr [rsp+0xc],r9d
0x3411: mov r15,qword ptr [rax+rbx*8]
0x3415: lea rax,[rip+0x207d94]
0x341c: mov rcx,qword ptr [rax+rbx*8]
0x3420: mov qword ptr [rsp],rcx
0x3424: call 0x16f0
0x3429: xor edi,edi
0x342b: cmp dword ptr [rip+0x207d1e],0x1
0x3432: mov rdx,rax
0x3435: mov r8,r15
0x3438: sete dil
0x343c: sub rsp,0x8
0x3440: xor eax,eax
0x3442: push r14
0x3444: mov r9d,dword ptr [rsp+0x1c]
0x3449: xor esi,esi
0x344b: mov rcx,qword ptr [rsp+0x10]
0x3450: call 0x18f0
0x3455: mov byte ptr [rbp+rbx],0x1
0x345a: pop rax
0x345b: pop rdx
0x345c: nop dword ptr [rax]
0x3460: mov qword ptr [r12+rbx*8],r13
0x3464: mov eax,0x1
0x3469: add rsp,0x18
0x346d: pop rbx
0x346e: pop rbp
0x346f: pop r12
0x3471: pop r13
0x3473: pop r14
0x3475: pop r15
0x3477: ret 
0x3478: nop dword ptr [rax+rax]
0x3480: mov rdx,rax
0x3483: mov rsi,r14
0x3486: mov rdi,r13
0x3489: sub rdx,r14
0x348c: mov qword ptr [rsp],rax
0x3490: call 0x3130
0x3495: mov rax,qword ptr [rsp]
0x3499: mov esi,dword ptr [rip+0x207b75]
0x349f: lea r14,[rax+1]
0x34a3: mov r15,rbp
0x34a6: mov rdi,r14
0x34a9: sub r15,r14
0x34ac: mov rdx,r15
0x34af: call 0x17d0
0x34b4: test rax,rax
0x34b7: jne 0x3480
0x34b9: mov rdx,r15
0x34bc: mov rsi,r14
0x34bf: mov rdi,r13
0x34c2: call 0x3130
0x34c7: jmp 0x3351
0x34cc: nop dword ptr [rax]
0x34d0: test byte ptr [r14],0x20
0x34d4: jne 0x35a6
0x34da: xor eax,eax
0x34dc: test r13,r13
0x34df: je 0x3469
0x34e1: mov rdi,r13
0x34e4: mov byte ptr [rsp],al
0x34e7: call 0x2c70
0x34ec: movzx eax,byte ptr [rsp]
0x34f0: add rsp,0x18
0x34f4: pop rbx
0x34f5: pop rbp
0x34f6: pop r12
0x34f8: pop r13
0x34fa: pop r14
0x34fc: pop r15
0x34fe: ret 
0x34ff: nop 
0x3500: lea rdx,[rip+0x207c99]
0x3507: mov rax,qword ptr [rdx+rbx*8]
0x350b: mov qword ptr [rdx+rbx*8],r13
0x350f: mov r13,rax
0x3512: mov qword ptr [rsi],rax
0x3515: test r13,r13
0x3518: jne 0x322b
0x351e: mov esi,0x30
0x3523: mov edi,0x1
0x3528: call 0x6570
0x352d: mov r13,rax
0x3530: mov qword ptr [rbp],rax
0x3534: jmp 0x3233
0x3539: nop dword ptr [rax]
0x3540: add r14,0x1
0x3544: cmp rbp,r14
0x3547: je 0x3340
0x354d: movzx esi,byte ptr [r14]
0x3551: test byte ptr [rdx+rsi*2],0x1
0x3555: mov rax,rsi
0x3558: je 0x332e
0x355e: jmp 0x3540
0x3560: cmp rbp,rax
0x3563: mov r14,rax
0x3566: jne 0x32a0
0x356c: jmp 0x3351
0x3571: nop dword ptr [rax]
0x3578: sub rax,r14
0x357b: mov rsi,r14
0x357e: mov rdi,r13
0x3581: mov rdx,rax
0x3584: call 0x3130
0x3589: jmp 0x3351
0x358e: cmp rdx,0x7fffffff
0x3595: mov eax,0x7fffffff
0x359a: cmovbe rax,rdx
0x359e: mov r9,rax
0x35a1: jmp 0x33f7
0x35a6: lea rsi,[rip+0x47c8]
0x35ad: mov edx,0x5
0x35b2: xor edi,edi
0x35b4: call 0x16f0
0x35b9: mov rbx,rax
0x35bc: call 0x1670
0x35c1: mov esi,dword ptr [rax]
0x35c3: mov rdx,rbx
0x35c6: mov edi,0x1
0x35cb: xor eax,eax
0x35cd: call 0x18f0
0x35d2: nop dword ptr [rax]
0x35d6: nop word ptr cs:[rax+rax]
0x35e0: push r12
0x35e2: push rbp
0x35e3: mov r12d,edx
0x35e6: push rbx
0x35e7: mov rbx,rsi
0x35ea: mov rsi,qword ptr [rsi]
0x35ed: cmp rsi,qword ptr [rbx+8]
0x35f1: mov rbp,rdi
0x35f4: mov rdi,qword ptr [rbx+0x10]
0x35f8: je 0x3620
0x35fa: lea rsi,[rdi+rsi*8]
0x35fe: mov edx,r12d
0x3601: mov rdi,rbp
0x3604: call 0x31f0
0x3609: test al,al
0x360b: je 0x3611
0x360d: add qword ptr [rbx],0x1
0x3611: pop rbx
0x3612: pop rbp
0x3613: pop r12
0x3615: ret 
0x3616: nop word ptr cs:[rax+rax]
0x3620: test rdi,rdi
0x3623: je 0x3688
0x3625: movabs rax,0xaaaaaaaaaaaaaa9
0x362f: cmp rsi,rax
0x3632: ja 0x36ad
0x3634: mov rax,rsi
0x3637: shr rax,0x1
0x363a: lea rsi,[rsi+rax+1]
0x363f: mov qword ptr [rbx+8],rsi
0x3643: shl rsi,0x3
0x3647: call 0x6400
0x364c: mov rsi,qword ptr [rbx]
0x364f: mov rdx,qword ptr [rbx+8]
0x3653: mov rdi,rax
0x3656: mov qword ptr [rbx+0x10],rax
0x365a: cmp rsi,rdx
0x365d: jae 0x35fa
0x365f: lea rax,[rax+rsi*8]
0x3663: lea rdx,[rdi+rdx*8]
0x3667: nop word ptr [rax+rax]
0x3670: mov qword ptr [rax],0x0
0x3677: add rax,0x8
0x367b: cmp rax,rdx
0x367e: jne 0x3670
0x3680: jmp 0x35fa
0x3685: nop dword ptr [rax]
0x3688: test rsi,rsi
0x368b: mov eax,0x10
0x3690: mov edx,0x8
0x3695: cmove rsi,rax
0x3699: mov rax,rdx
0x369c: xor ecx,ecx
0x369e: mul rsi
0x36a1: jo 0x36b2
0x36a3: test rax,rax
0x36a6: js 0x36ad
0x36a8: test rcx,rcx
0x36ab: je 0x363f
0x36ad: call 0x65f0
0x36b2: mov ecx,0x1
0x36b7: jmp 0x36a3
0x36b9: nop dword ptr [rax]
0x3ada: nop word ptr [rax+rax]
0x3b39: nop dword ptr [rax]
0x3bbd: nop dword ptr [rax]
0x3bf8: nop dword ptr [rax+rax]
0x3c0f: nop 
0x3c4a: nop word ptr [rax+rax]
0x3c8c: mov edi,0x1
0x3c91: call 0x36c0
0x3c96: nop word ptr cs:[rax+rax]
0x3ca0: mov qword ptr [rip+0x207541],rdi
0x3ca7: ret 
0x3ca8: nop dword ptr [rax+rax]
0x3cb0: mov byte ptr [rip+0x207529],dil
0x3cb7: ret 
0x3cb8: nop dword ptr [rax+rax]
0x3cc0: push rbp
0x3cc1: push rbx
0x3cc2: sub rsp,0x8
0x3cc6: mov rdi,qword ptr [rip+0x2073db]
0x3ccd: call 0x6fe0
0x3cd2: test eax,eax
0x3cd4: je 0x3cec
0x3cd6: call 0x1670
0x3cdb: cmp byte ptr [rip+0x2074fe],0x0
0x3ce2: mov rbx,rax
0x3ce5: je 0x3d03
0x3ce7: cmp dword ptr [rax],0x20
0x3cea: jne 0x3d03
0x3cec: mov rdi,qword ptr [rip+0x2073ed]
0x3cf3: call 0x6fe0
0x3cf8: test eax,eax
0x3cfa: jne 0x3d42
0x3cfc: add rsp,0x8
0x3d00: pop rbx
0x3d01: pop rbp
0x3d02: ret 
0x3d03: lea rsi,[rip+0x423e]
0x3d0a: xor edi,edi
0x3d0c: mov edx,0x5
0x3d11: call 0x16f0
0x3d16: mov rdi,qword ptr [rip+0x2074cb]
0x3d1d: mov rbp,rax
0x3d20: test rdi,rdi
0x3d23: je 0x3d4d
0x3d25: call 0x5b50
0x3d2a: mov esi,dword ptr [rbx]
0x3d2c: lea rdx,[rip+0x4221]
0x3d33: mov rcx,rax
0x3d36: mov r8,rbp
0x3d39: xor edi,edi
0x3d3b: xor eax,eax
0x3d3d: call 0x18f0
0x3d42: mov edi,dword ptr [rip+0x2072f0]
0x3d48: call 0x1690
0x3d4d: mov esi,dword ptr [rbx]
0x3d4f: lea rdx,[rip+0x3ffc]
0x3d56: mov rcx,rax
0x3d59: xor edi,edi
0x3d5b: xor eax,eax
0x3d5d: call 0x18f0
0x3d62: jmp 0x3d42
0x3d64: nop word ptr cs:[rax+rax]
0x3d6e: nop 
0x3d70: jmp 0x17c0
0x3d75: nop 
0x3d76: nop word ptr cs:[rax+rax]
0x3d80: test rdi,rdi
0x3d83: je 0x3da0
0x3d85: push rbx
0x3d86: mov ebx,esi
0x3d88: call 0x1830
0x3d8d: mov ecx,ebx
0x3d8f: xor edx,edx
0x3d91: xor esi,esi
0x3d93: pop rbx
0x3d94: mov edi,eax
0x3d96: jmp 0x17c0
0x3d9b: nop dword ptr [rax+rax]
0x3da0: ret 
0x3da2: nop word ptr cs:[rax+rax]
0x3dac: nop dword ptr [rax]
0x3dd9: nop dword ptr [rax]
0x3e25: nop dword ptr [rax]
0x3e43: nop word ptr cs:[rax+rax]
0x3e4d: nop dword ptr [rax]
0x3e8a: nop word ptr [rax+rax]
0x3eb0: pxor xmm0,xmm0
0x3eb4: mov qword ptr [rdi+0x10],0x0
0x3ebc: movups xmmword ptr [rdi],xmm0
0x3ebf: ret 
0x3ec0: push r15
0x3ec2: push r14
0x3ec4: push r13
0x3ec6: push r12
0x3ec8: push rbp
0x3ec9: push rbx
0x3eca: sub rsp,0x18
0x3ece: mov r13,qword ptr [rdi+0x10]
0x3ed2: mov r8,qword ptr [rdi]
0x3ed5: add r8,r13
0x3ed8: test byte ptr [rsi],0x10
0x3edb: jne 0x3fb0
0x3ee1: mov r14,rdi
0x3ee4: mov rbp,rsi
0x3ee7: mov rbx,r13
0x3eea: movsx r15d,dl
0x3eee: jmp 0x3efb
0x3ef0: cmp r12d,r15d
0x3ef3: lea rbx,[rsi+1]
0x3ef7: mov byte ptr [rsi],cl
0x3ef9: je 0x3f56
0x3efb: mov rcx,qword ptr [rbp+8]
0x3eff: cmp rcx,qword ptr [rbp+0x10]
0x3f03: jae 0x3f70
0x3f05: lea rax,[rcx+1]
0x3f09: mov qword ptr [rbp+8],rax
0x3f0d: movzx r12d,byte ptr [rcx]
0x3f11: mov ecx,r12d
0x3f14: cmp rbx,r8
0x3f17: mov rsi,rbx
0x3f1a: jne 0x3ef0
0x3f1c: mov rbx,qword ptr [r14]
0x3f1f: mov rsi,r14
0x3f22: mov rdi,r13
0x3f25: mov byte ptr [rsp+0xf],dl
0x3f29: mov byte ptr [rsp],cl
0x3f2c: call 0x6500
0x3f31: mov r8,qword ptr [r14]
0x3f34: movzx ecx,byte ptr [rsp]
0x3f38: lea rsi,[rax+rbx]
0x3f3c: mov qword ptr [r14+0x10],rax
0x3f40: mov r13,rax
0x3f43: movzx edx,byte ptr [rsp+0xf]
0x3f48: lea rbx,[rsi+1]
0x3f4c: add r8,rax
0x3f4f: cmp r12d,r15d
0x3f52: mov byte ptr [rsi],cl
0x3f54: jne 0x3efb
0x3f56: sub rbx,r13
0x3f59: mov rax,r14
0x3f5c: mov qword ptr [r14+8],rbx
0x3f60: add rsp,0x18
0x3f64: pop rbx
0x3f65: pop rbp
0x3f66: pop r12
0x3f68: pop r13
0x3f6a: pop r14
0x3f6c: pop r15
0x3f6e: ret 
0x3f6f: nop 
0x3f70: mov rdi,rbp
0x3f73: mov byte ptr [rsp+0xf],dl
0x3f77: mov qword ptr [rsp],r8
0x3f7b: call 0x1640
0x3f80: cmp eax,0xffffffff
0x3f83: mov r12d,eax
0x3f86: mov r8,qword ptr [rsp]
0x3f8a: movzx edx,byte ptr [rsp+0xf]
0x3f8f: jne 0x3fc1
0x3f91: cmp r13,rbx
0x3f94: je 0x3fb0
0x3f96: test byte ptr [rbp],0x20
0x3f9a: jne 0x3fb0
0x3f9c: cmp byte ptr [rbx-1],dl
0x3f9f: je 0x3f56
0x3fa1: mov r12d,r15d
0x3fa4: mov ecx,edx
0x3fa6: jmp 0x3f14
0x3fab: nop dword ptr [rax+rax]
0x3fb0: add rsp,0x18
0x3fb4: xor eax,eax
0x3fb6: pop rbx
0x3fb7: pop rbp
0x3fb8: pop r12
0x3fba: pop r13
0x3fbc: pop r14
0x3fbe: pop r15
0x3fc0: ret 
0x3fc1: mov ecx,eax
0x3fc3: jmp 0x3f14
0x3fc8: nop dword ptr [rax+rax]
0x3fd0: mov edx,0xa
0x3fd5: jmp 0x3ec0
0x3fda: nop word ptr [rax+rax]
0x3fe0: mov rdi,qword ptr [rdi+0x10]
0x3fe4: jmp 0x1650
0x3fe9: nop dword ptr [rax]
0x3ff0: test rdx,rdx
0x3ff3: je 0x4038
0x3ff5: push r12
0x3ff7: push rbp
0x3ff8: mov r12,rsi
0x3ffb: push rbx
0x3ffc: mov rbp,rdi
0x3fff: mov rbx,rdx
0x4002: call 0x1630
0x4007: xor ecx,ecx
0x4009: mov r8,qword ptr [rax]
0x400c: jmp 0x4019
0x400e: nop 
0x4010: add rcx,0x1
0x4014: cmp rcx,rbx
0x4017: je 0x402d
0x4019: movzx eax,byte ptr [rbp+rcx]
0x401e: movzx r9d,byte ptr [r12+rcx]
0x4023: mov eax,dword ptr [r8+rax*4]
0x4027: sub eax,dword ptr [r8+r9*4]
0x402b: je 0x4010
0x402d: pop rbx
0x402e: pop rbp
0x402f: pop r12
0x4031: ret 
0x4032: nop word ptr [rax+rax]
0x4038: xor eax,eax
0x403a: ret 
0x403b: nop dword ptr [rax+rax]
0x40df: nop 
0x411c: nop dword ptr [rax]
0x416d: nop dword ptr [rax]
0x41c7: nop word ptr [rax+rax]
0x4487: nop word ptr [rax+rax]
0x44be: nop 
0x44e1: nop dword ptr [rax]
0x4522: nop word ptr [rax+rax]
0x4534: nop dword ptr [rax]
0x45d8: nop dword ptr [rax+rax]
0x4601: nop dword ptr [rax]
0x4617: nop word ptr [rax+rax]
0x462f: nop 
0x465e: nop 
0x466d: nop dword ptr [rax]
0x467f: nop 
0x468f: nop 
0x469f: nop 
0x46af: nop 
0x46bf: nop 
0x472c: nop dword ptr [rax]
0x474c: nop dword ptr [rax]
0x476f: nop 
0x4782: nop word ptr [rax+rax]
0x479a: nop word ptr [rax+rax]
0x47aa: nop word ptr [rax+rax]
0x484b: nop dword ptr [rax+rax]
0x4865: nop dword ptr [rax]
0x4878: nop dword ptr [rax+rax]
0x4893: nop dword ptr [rax+rax]
0x48c2: nop word ptr [rax+rax]
0x48d2: nop word ptr [rax+rax]
0x48ea: nop word ptr [rax+rax]
0x48fa: nop word ptr [rax+rax]
0x4908: nop dword ptr [rax+rax]
0x492f: nop 
0x49c9: nop dword ptr [rax]
0x4a12: nop word ptr [rax+rax]
0x4a51: nop dword ptr [rax]
0x4a72: nop word ptr [rax+rax]
0x4bd8: nop dword ptr [rax+rax]
0x4ceb: nop dword ptr [rax+rax]
0x4d0e: nop 
0x4dd5: nop dword ptr [rax]
0x4e8d: nop dword ptr [rax]
0x5096: nop word ptr cs:[rax+rax]
0x5129: nop dword ptr [rax]
0x527d: nop dword ptr [rax]
0x53c3: call 0x1720
0x5404: nop 
0x5406: nop word ptr cs:[rax+rax]
0x558b: nop dword ptr [rax+rax]
0x55b1: call 0x1660
0x55b6: call 0x65f0
0x55bb: nop dword ptr [rax+rax]
0x55c0: push r12
0x55c2: push rbp
0x55c3: push rbx
0x55c4: mov rbx,rdi
0x55c7: call 0x1670
0x55cc: mov r12d,dword ptr [rax]
0x55cf: mov rbp,rax
0x55d2: lea rax,[rip+0x205d27]
0x55d9: test rbx,rbx
0x55dc: mov esi,0x38
0x55e1: cmove rbx,rax
0x55e5: mov rdi,rbx
0x55e8: call 0x65a0
0x55ed: mov dword ptr [rbp],r12d
0x55f1: pop rbx
0x55f2: pop rbp
0x55f3: pop r12
0x55f5: ret 
0x55f6: nop word ptr cs:[rax+rax]
0x5600: lea rax,[rip+0x205cf9]
0x5607: test rdi,rdi
0x560a: cmove rdi,rax
0x560e: mov eax,dword ptr [rdi]
0x5610: ret 
0x5611: nop dword ptr [rax+rax]
0x5616: nop word ptr cs:[rax+rax]
0x5620: lea rax,[rip+0x205cd9]
0x5627: test rdi,rdi
0x562a: cmove rdi,rax
0x562e: mov dword ptr [rdi],esi
0x5630: ret 
0x5631: nop dword ptr [rax+rax]
0x5636: nop word ptr cs:[rax+rax]
0x5640: lea rax,[rip+0x205cb9]
0x5647: test rdi,rdi
0x564a: mov ecx,esi
0x564c: cmove rdi,rax
0x5650: mov eax,esi
0x5652: and ecx,0x1f
0x5655: shr al,0x5
0x5658: movzx eax,al
0x565b: lea rdi,[rdi+rax*4+8]
0x5660: mov esi,dword ptr [rdi]
0x5662: mov eax,esi
0x5664: shr eax,cl
0x5666: xor edx,eax
0x5668: and eax,0x1
0x566b: and edx,0x1
0x566e: shl edx,cl
0x5670: xor edx,esi
0x5672: mov dword ptr [rdi],edx
0x5674: ret 
0x5675: nop 
0x5676: nop word ptr cs:[rax+rax]
0x5680: lea rax,[rip+0x205c79]
0x5687: test rdi,rdi
0x568a: cmove rdi,rax
0x568e: mov eax,dword ptr [rdi+4]
0x5691: mov dword ptr [rdi+4],esi
0x5694: ret 
0x5695: nop 
0x5696: nop word ptr cs:[rax+rax]
0x56a0: lea rax,[rip+0x205c59]
0x56a7: test rdi,rdi
0x56aa: cmove rdi,rax
0x56ae: test rsi,rsi
0x56b1: mov dword ptr [rdi],0xa
0x56b7: je 0x56c7
0x56b9: test rdx,rdx
0x56bc: je 0x56c7
0x56be: mov qword ptr [rdi+0x28],rsi
0x56c2: mov qword ptr [rdi+0x30],rdx
0x56c6: ret 
0x56c7: sub rsp,0x8
0x56cb: call 0x1660
0x56d0: push r15
0x56d2: push r14
0x56d4: lea rax,[rip+0x205c25]
0x56db: push r13
0x56dd: push r12
0x56df: mov r13,rdi
0x56e2: push rbp
0x56e3: push rbx
0x56e4: mov rbx,r8
0x56e7: mov r14,rsi
0x56ea: mov r15,rdx
0x56ed: sub rsp,0x18
0x56f1: test r8,r8
0x56f4: cmove rbx,rax
0x56f8: mov qword ptr [rsp+8],rcx
0x56fd: call 0x1670
0x5702: mov r12d,dword ptr [rax]
0x5705: mov rbp,rax
0x5708: lea rax,[rbx+8]
0x570c: sub rsp,0x8
0x5710: mov r9d,dword ptr [rbx+4]
0x5714: push qword ptr [rbx+0x30]
0x5717: mov r8d,dword ptr [rbx]
0x571a: push qword ptr [rbx+0x28]
0x571d: mov rdx,r15
0x5720: push rax
0x5721: mov rcx,qword ptr [rsp+0x28]
0x5726: mov rsi,r14
0x5729: mov rdi,r13
0x572c: call 0x41d0
0x5731: mov dword ptr [rbp],r12d
0x5735: add rsp,0x38
0x5739: pop rbx
0x573a: pop rbp
0x573b: pop r12
0x573d: pop r13
0x573f: pop r14
0x5741: pop r15
0x5743: ret 
0x5744: nop 
0x5746: nop word ptr cs:[rax+rax]
0x5750: push r15
0x5752: push r14
0x5754: lea rax,[rip+0x205ba5]
0x575b: push r13
0x575d: push r12
0x575f: mov r12,rdx
0x5762: push rbp
0x5763: push rbx
0x5764: mov rbx,rcx
0x5767: mov r14,rdi
0x576a: mov r15,rsi
0x576d: sub rsp,0x38
0x5771: test rcx,rcx
0x5774: cmove rbx,rax
0x5778: xor ebp,ebp
0x577a: call 0x1670
0x577f: test r12,r12
0x5782: mov r13,rax
0x5785: mov eax,dword ptr [rax]
0x5787: sete bpl
0x578b: or ebp,dword ptr [rbx+4]
0x578e: lea r10,[rbx+8]
0x5792: sub rsp,0x8
0x5796: mov r8d,dword ptr [rbx]
0x5799: mov rcx,r15
0x579c: mov dword ptr [rsp+0x14],eax
0x57a0: push qword ptr [rbx+0x30]
0x57a3: mov rdx,r14
0x57a6: push qword ptr [rbx+0x28]
0x57a9: push r10
0x57ab: xor esi,esi
0x57ad: mov r9d,ebp
0x57b0: xor edi,edi
0x57b2: mov qword ptr [rsp+0x40],r10
0x57b7: call 0x41d0
0x57bc: lea rsi,[rax+1]
0x57c0: mov qword ptr [rsp+0x48],rax
0x57c5: add rsp,0x20
0x57c9: mov rdi,rsi
0x57cc: mov qword ptr [rsp+0x18],rsi
0x57d1: call 0x63a0
0x57d6: mov qword ptr [rsp+0x10],rax
0x57db: sub rsp,0x8
0x57df: push qword ptr [rbx+0x30]
0x57e2: push qword ptr [rbx+0x28]
0x57e5: mov r10,qword ptr [rsp+0x38]
0x57ea: mov r9d,ebp
0x57ed: mov r8d,dword ptr [rbx]
0x57f0: mov rcx,r15
0x57f3: mov rdx,r14
0x57f6: mov rdi,rax
0x57f9: push r10
0x57fb: mov rsi,qword ptr [rsp+0x38]
0x5800: call 0x41d0
0x5805: mov eax,dword ptr [rsp+0x2c]
0x5809: add rsp,0x20
0x580d: test r12,r12
0x5810: mov dword ptr [r13],eax
0x5814: je 0x581f
0x5816: mov r11,qword ptr [rsp+0x28]
0x581b: mov qword ptr [r12],r11
0x581f: mov rax,qword ptr [rsp+0x10]
0x5824: add rsp,0x38
0x5828: pop rbx
0x5829: pop rbp
0x582a: pop r12
0x582c: pop r13
0x582e: pop r14
0x5830: pop r15
0x5832: ret 
0x5833: nop dword ptr [rax]
0x5836: nop word ptr cs:[rax+rax]
0x5840: mov rcx,rdx
0x5843: xor edx,edx
0x5845: jmp 0x5750
0x584a: nop word ptr [rax+rax]
0x5850: mov eax,dword ptr [rip+0x205822]
0x5856: push r12
0x5858: mov r12,qword ptr [rip+0x205821]
0x585f: push rbp
0x5860: push rbx
0x5861: cmp eax,0x1
0x5864: jle 0x5891
0x5866: sub eax,0x2
0x5869: lea rbx,[r12+0x18]
0x586e: shl rax,0x4
0x5872: lea rbp,[r12+rax+0x28]
0x5877: nop word ptr [rax+rax]
0x5880: mov rdi,qword ptr [rbx]
0x5883: add rbx,0x10
0x5887: call 0x1650
0x588c: cmp rbx,rbp
0x588f: jne 0x5880
0x5891: mov rdi,qword ptr [r12+8]
0x5896: lea rbx,[rip+0x205963]
0x589d: cmp rdi,rbx
0x58a0: je 0x58b9
0x58a2: call 0x1650
0x58a7: mov qword ptr [rip+0x2057de],0x100
0x58b2: mov qword ptr [rip+0x2057df],rbx
0x58b9: lea rbx,[rip+0x2057d0]
0x58c0: cmp r12,rbx
0x58c3: je 0x58d4
0x58c5: mov rdi,r12
0x58c8: call 0x1650
0x58cd: mov qword ptr [rip+0x2057ac],rbx
0x58d4: pop rbx
0x58d5: mov dword ptr [rip+0x205799],0x1
0x58df: pop rbp
0x58e0: pop r12
0x58e2: ret 
0x58e3: nop dword ptr [rax]
0x58e6: nop word ptr cs:[rax+rax]
0x58f0: lea rcx,[rip+0x205a09]
0x58f7: mov rdx,0xffffffffffffffff
0x58fe: jmp 0x5410
0x5903: nop dword ptr [rax]
0x5906: nop word ptr cs:[rax+rax]
0x5910: lea rcx,[rip+0x2059e9]
0x5917: jmp 0x5410
0x591c: nop dword ptr [rax]
0x5920: lea rcx,[rip+0x2059d9]
0x5927: mov rsi,rdi
0x592a: mov rdx,0xffffffffffffffff
0x5931: xor edi,edi
0x5933: jmp 0x5410
0x5938: nop dword ptr [rax+rax]
0x5940: lea rcx,[rip+0x2059b9]
0x5947: mov rdx,rsi
0x594a: mov rsi,rdi
0x594d: xor edi,edi
0x594f: jmp 0x5410
0x5954: nop 
0x5956: nop word ptr cs:[rax+rax]
0x59e4: call 0x1660
0x59e9: call 0x1720
0x59ee: nop 
0x59f0: sub rsp,0x48
0x59f4: mov rax,rdx
0x59f7: mov rdx,rcx
0x59fa: mov rcx,qword ptr fs:[0x28]
0x5a03: mov qword ptr [rsp+0x38],rcx
0x5a08: xor ecx,ecx
0x5a0a: cmp esi,0xa
0x5a0d: je 0x5a70
0x5a0f: mov dword ptr [rsp],esi
0x5a12: mov rcx,rsp
0x5a15: mov rsi,rax
0x5a18: mov qword ptr [rsp+4],0x0
0x5a21: mov qword ptr [rsp+0xc],0x0
0x5a2a: mov qword ptr [rsp+0x14],0x0
0x5a33: mov qword ptr [rsp+0x1c],0x0
0x5a3c: mov qword ptr [rsp+0x24],0x0
0x5a45: mov qword ptr [rsp+0x2c],0x0
0x5a4e: mov dword ptr [rsp+0x34],0x0
0x5a56: call 0x5410
0x5a5b: mov rdx,qword ptr [rsp+0x38]
0x5a60: xor rdx,qword ptr fs:[0x28]
0x5a69: jne 0x5a75
0x5a6b: add rsp,0x48
0x5a6f: ret 
0x5a70: call 0x1660
0x5a75: call 0x1720
0x5a7a: nop word ptr [rax+rax]
0x5a8c: nop dword ptr [rax]
0x5a90: mov rcx,rdx
0x5a93: mov rdx,rsi
0x5a96: mov esi,edi
0x5a98: xor edi,edi
0x5a9a: jmp 0x59f0
0x5a9f: nop 
0x5aa0: sub rsp,0x48
0x5aa4: mov ecx,edx
0x5aa6: mov rax,qword ptr fs:[0x28]
0x5aaf: mov qword ptr [rsp+0x38],rax
0x5ab4: xor eax,eax
0x5ab6: mov rax,qword ptr [rip+0x205873]
0x5abd: mov r8,rsp
0x5ac0: and ecx,0x1f
0x5ac3: movdqa xmm0,[rip+0x205835]
0x5acb: mov qword ptr [rsp+0x30],rax
0x5ad0: mov eax,edx
0x5ad2: movaps xmmword ptr [rsp],xmm0
0x5ad6: shr al,0x5
0x5ad9: movzx eax,al
0x5adc: lea r9,[r8+rax*4+8]
0x5ae1: movdqa xmm0,[rip+0x205827]
0x5ae9: movaps xmmword ptr [rsp+0x10],xmm0
0x5aee: movdqa xmm0,[rip+0x20582a]
0x5af6: movaps xmmword ptr [rsp+0x20],xmm0
0x5afb: mov edx,dword ptr [r9]
0x5afe: mov eax,edx
0x5b00: shr eax,cl
0x5b02: not eax
0x5b04: and eax,0x1
0x5b07: shl eax,cl
0x5b09: mov rcx,r8
0x5b0c: xor eax,edx
0x5b0e: mov rdx,rsi
0x5b11: mov rsi,rdi
0x5b14: mov dword ptr [r9],eax
0x5b17: xor edi,edi
0x5b19: call 0x5410
0x5b1e: mov rsi,qword ptr [rsp+0x38]
0x5b23: xor rsi,qword ptr fs:[0x28]
0x5b2c: jne 0x5b33
0x5b2e: add rsp,0x48
0x5b32: ret 
0x5b33: call 0x1720
0x5b38: nop dword ptr [rax+rax]
0x5b40: movsx edx,sil
0x5b44: mov rsi,0xffffffffffffffff
0x5b4b: jmp 0x5aa0
0x5b50: mov edx,0x3a
0x5b55: mov rsi,0xffffffffffffffff
0x5b5c: jmp 0x5aa0
0x5b61: nop dword ptr [rax+rax]
0x5b66: nop word ptr cs:[rax+rax]
0x5b70: mov edx,0x3a
0x5b75: jmp 0x5aa0
0x5b7a: nop word ptr [rax+rax]
0x5c04: call 0x1660
0x5c09: call 0x1720
0x5c0e: nop 
0x5c10: sub rsp,0x48
0x5c14: mov r9,rcx
0x5c17: mov rcx,qword ptr [rip+0x205712]
0x5c1e: movdqa xmm0,[rip+0x2056da]
0x5c26: mov rax,qword ptr fs:[0x28]
0x5c2f: mov qword ptr [rsp+0x38],rax
0x5c34: xor eax,eax
0x5c36: movaps xmmword ptr [rsp],xmm0
0x5c3a: test rsi,rsi
0x5c3d: mov qword ptr [rsp+0x30],rcx
0x5c42: mov dword ptr [rsp],0xa
0x5c49: movdqa xmm0,[rip+0x2056bf]
0x5c51: movaps xmmword ptr [rsp+0x10],xmm0
0x5c56: movdqa xmm0,[rip+0x2056c2]
0x5c5e: movaps xmmword ptr [rsp+0x20],xmm0
0x5c63: je 0x5c97
0x5c65: test rdx,rdx
0x5c68: je 0x5c97
0x5c6a: mov qword ptr [rsp+0x28],rsi
0x5c6f: mov qword ptr [rsp+0x30],rdx
0x5c74: mov rcx,rsp
0x5c77: mov rdx,r8
0x5c7a: mov rsi,r9
0x5c7d: call 0x5410
0x5c82: mov rdi,qword ptr [rsp+0x38]
0x5c87: xor rdi,qword ptr fs:[0x28]
0x5c90: jne 0x5c9c
0x5c92: add rsp,0x48
0x5c96: ret 
0x5c97: call 0x1660
0x5c9c: call 0x1720
0x5ca1: nop dword ptr [rax+rax]
0x5ca6: nop word ptr cs:[rax+rax]
0x5cb0: mov r8,0xffffffffffffffff
0x5cb7: jmp 0x5c10
0x5cbc: nop dword ptr [rax]
0x5cc0: mov rcx,rdx
0x5cc3: mov r8,0xffffffffffffffff
0x5cca: mov rdx,rsi
0x5ccd: mov rsi,rdi
0x5cd0: xor edi,edi
0x5cd2: jmp 0x5c10
0x5cd7: nop word ptr [rax+rax]
0x5ce0: mov r8,rcx
0x5ce3: mov rcx,rdx
0x5ce6: mov rdx,rsi
0x5ce9: mov rsi,rdi
0x5cec: xor edi,edi
0x5cee: jmp 0x5c10
0x5cf3: nop dword ptr [rax]
0x5cf6: nop word ptr cs:[rax+rax]
0x5d00: lea rcx,[rip+0x205339]
0x5d07: jmp 0x5410
0x5d0c: nop dword ptr [rax]
0x5d10: lea rcx,[rip+0x205329]
0x5d17: mov rdx,rsi
0x5d1a: mov rsi,rdi
0x5d1d: xor edi,edi
0x5d1f: jmp 0x5410
0x5d24: nop 
0x5d26: nop word ptr cs:[rax+rax]
0x5d30: lea rcx,[rip+0x205309]
0x5d37: mov rdx,0xffffffffffffffff
0x5d3e: jmp 0x5410
0x5d43: nop dword ptr [rax]
0x5d46: nop word ptr cs:[rax+rax]
0x5d68: nop dword ptr [rax+rax]
0x5d7e: nop 
0x5e26: nop word ptr cs:[rax+rax]
0x5eb5: nop dword ptr [rax]
0x5eb8: mov r8,rcx
0x5ebb: mov rcx,rdx
0x5ebe: lea rdx,[rip+0x25cf]
0x5ec5: mov esi,0x1
0x5eca: xor eax,eax
0x5ecc: call 0x1960
0x5ed1: jmp 0x5dbc
0x5ed6: nop word ptr cs:[rax+rax]
0x5f35: nop dword ptr [rax]
0x5f71: nop dword ptr [rax]
0x5fb8: nop dword ptr [rax+rax]
0x6007: nop word ptr [rax+rax]
0x6064: nop dword ptr [rax]
0x6092: nop word ptr [rax+rax]
0x6146: nop word ptr cs:[rax+rax]
0x6197: nop word ptr [rax+rax]
0x61a0: xor r9d,r9d
0x61a3: cmp qword ptr [r8],0x0
0x61a7: je 0x61bb
0x61a9: nop dword ptr [rax]
0x61b0: add r9,0x1
0x61b4: cmp qword ptr [r8+r9*8],0x0
0x61b9: jne 0x61b0
0x61bb: jmp 0x5d80
0x61c0: sub rsp,0x68
0x61c4: mov r10,r8
0x61c7: xor r9d,r9d
0x61ca: mov rax,qword ptr fs:[0x28]
0x61d3: mov qword ptr [rsp+0x58],rax
0x61d8: xor eax,eax
0x61da: mov r8,rsp
0x61dd: nop dword ptr [rax]
0x61e0: mov eax,dword ptr [r10]
0x61e3: cmp eax,0x2f
0x61e6: ja 0x622a
0x61e8: mov r11d,eax
0x61eb: add r11,qword ptr [r10+0x10]
0x61ef: add eax,0x8
0x61f2: mov dword ptr [r10],eax
0x61f5: mov rax,qword ptr [r11]
0x61f8: test rax,rax
0x61fb: mov qword ptr [r8+r9*8],rax
0x61ff: je 0x620b
0x6201: add r9,0x1
0x6205: cmp r9,0xa
0x6209: jne 0x61e0
0x620b: call 0x5d80
0x6210: mov rax,qword ptr [rsp+0x58]
0x6215: xor rax,qword ptr fs:[0x28]
0x621e: jne 0x6225
0x6220: add rsp,0x68
0x6224: ret 
0x6225: call 0x1720
0x622a: mov r11,qword ptr [r10+8]
0x622e: lea rax,[r11+8]
0x6232: mov qword ptr [r10+8],rax
0x6236: jmp 0x61f5
0x6238: nop dword ptr [rax+rax]
0x6300: call 0x1720
0x630c: mov rax,rbx
0x630f: add rbx,0x8
0x6313: jmp 0x62c6
0x6315: nop 
0x6316: nop word ptr cs:[rax+rax]
0x6320: push rbx
0x6321: lea rsi,[rip+0x21ba]
0x6328: mov edx,0x5
0x632d: xor edi,edi
0x632f: call 0x16f0
0x6334: lea rdx,[rip+0x21bc]
0x633b: mov rsi,rax
0x633e: mov edi,0x1
0x6343: xor eax,eax
0x6345: call 0x18e0
0x634a: lea rsi,[rip+0x21bc]
0x6351: mov edx,0x5
0x6356: xor edi,edi
0x6358: call 0x16f0
0x635d: lea rcx,[rip+0x18dc]
0x6364: lea rdx,[rip+0x1aac]
0x636b: mov rsi,rax
0x636e: mov edi,0x1
0x6373: xor eax,eax
0x6375: call 0x18e0
0x637a: mov rbx,qword ptr [rip+0x204d27]
0x6381: lea rsi,[rip+0x23b8]
0x6388: xor edi,edi
0x638a: mov edx,0x5
0x638f: call 0x16f0
0x6394: mov rsi,rbx
0x6397: mov rdi,rax
0x639a: pop rbx
0x639b: jmp 0x17f0
0x63ba: nop word ptr [rax+rax]
0x63c0: mov rax,rdi
0x63c3: mul rsi
0x63c6: mov rdi,rax
0x63c9: seto al
0x63cc: test rdi,rdi
0x63cf: js 0x63db
0x63d1: movzx eax,al
0x63d4: test rax,rax
0x63d7: jne 0x63db
0x63d9: jmp 0x63a0
0x63db: sub rsp,0x8
0x63df: call 0x65f0
0x63e4: nop 
0x63e6: nop word ptr cs:[rax+rax]
0x63f0: jmp 0x63a0
0x63f2: nop dword ptr [rax]
0x63f6: nop word ptr cs:[rax+rax]
0x6409: test rdi,rdi
0x640c: jne 0x6428
0x6422: nop word ptr [rax+rax]
0x6428: call 0x1650
0x642d: xor eax,eax
0x642f: pop rbx
0x6430: ret 
0x6436: nop word ptr cs:[rax+rax]
0x6440: mov rax,rsi
0x6443: mul rdx
0x6446: mov rsi,rax
0x6449: seto al
0x644c: test rsi,rsi
0x644f: js 0x645b
0x6451: movzx eax,al
0x6454: test rax,rax
0x6457: jne 0x645b
0x6459: jmp 0x6400
0x645b: sub rsp,0x8
0x645f: call 0x65f0
0x6464: nop 
0x6466: nop word ptr cs:[rax+rax]
0x6470: test rdi,rdi
0x6473: mov r9,rdx
0x6476: mov rcx,qword ptr [rsi]
0x6479: je 0x64b0
0x647b: xor edx,edx
0x647d: movabs rax,0x5555555555555554
0x6487: div r9
0x648a: cmp rax,rcx
0x648d: jbe 0x64cb
0x648f: mov rax,rcx
0x6492: shr rax,0x1
0x6495: lea rcx,[rax+rcx+1]
0x649a: mov qword ptr [rsi],rcx
0x649d: imul rcx,r9
0x64a1: mov rsi,rcx
0x64a4: jmp 0x6400
0x64a9: nop dword ptr [rax]
0x64b0: test rcx,rcx
0x64b3: je 0x64d8
0x64b5: mov rax,rcx
0x64b8: mul r9
0x64bb: seto dl
0x64be: test rax,rax
0x64c1: movzx edx,dl
0x64c4: js 0x64cb
0x64c6: test rdx,rdx
0x64c9: je 0x649a
0x64cb: sub rsp,0x8
0x64cf: call 0x65f0
0x64d4: nop dword ptr [rax]
0x64d8: xor edx,edx
0x64da: mov eax,0x80
0x64df: xor r8d,r8d
0x64e2: div r9
0x64e5: test rax,rax
0x64e8: sete r8b
0x64ec: lea rcx,[r8+rax]
0x64f0: jmp 0x64b5
0x64f2: nop dword ptr [rax]
0x64f6: nop word ptr cs:[rax+rax]
0x6500: test rdi,rdi
0x6503: mov rax,qword ptr [rsi]
0x6506: je 0x6530
0x6508: movabs rdx,0x5555555555555553
0x6512: cmp rax,rdx
0x6515: ja 0x6541
0x6517: mov rdx,rax
0x651a: shr rdx,0x1
0x651d: lea rax,[rdx+rax+1]
0x6522: mov qword ptr [rsi],rax
0x6525: mov rsi,rax
0x6528: jmp 0x6400
0x652d: nop dword ptr [rax]
0x6530: test rax,rax
0x6533: mov edx,0x80
0x6538: cmove rax,rdx
0x653c: test rax,rax
0x653f: jns 0x6522
0x6541: sub rsp,0x8
0x6545: call 0x65f0
0x654a: nop word ptr [rax+rax]
0x6550: push rbx
0x6551: mov rbx,rdi
0x6554: call 0x63a0
0x6559: mov rdx,rbx
0x655c: xor esi,esi
0x655e: mov rdi,rax
0x6561: pop rbx
0x6562: jmp 0x17a0
0x6567: nop word ptr [rax+rax]
0x6570: mov rax,rdi
0x6573: sub rsp,0x8
0x6577: mul rsi
0x657a: seto dl
0x657d: test rax,rax
0x6580: js 0x6599
0x6582: movzx edx,dl
0x6585: test rdx,rdx
0x6588: jne 0x6599
0x658a: call 0x1800
0x658f: test rax,rax
0x6592: je 0x6599
0x6594: add rsp,0x8
0x6598: ret 
0x6599: call 0x65f0
0x659e: nop 
0x65a0: push rbp
0x65a1: push rbx
0x65a2: mov rbp,rdi
0x65a5: mov rdi,rsi
0x65a8: mov rbx,rsi
0x65ab: sub rsp,0x8
0x65af: call 0x63a0
0x65b4: add rsp,0x8
0x65b8: mov rdx,rbx
0x65bb: mov rsi,rbp
0x65be: pop rbx
0x65bf: pop rbp
0x65c0: mov rdi,rax
0x65c3: jmp 0x1820
0x65c8: nop dword ptr [rax+rax]
0x65d0: push rbx
0x65d1: mov rbx,rdi
0x65d4: call 0x1710
0x65d9: mov rdi,rbx
0x65dc: lea rsi,[rax+1]
0x65e0: pop rbx
0x65e1: jmp 0x65a0
0x65e3: nop word ptr cs:[rax+rax]
0x65ed: nop dword ptr [rax]
0x6620: call 0x1660
0x6625: nop word ptr cs:[rax+rax]
0x662f: nop 
0x6630: push r14
0x6632: push r13
0x6634: mov r14d,edi
0x6637: push r12
0x6639: push rbp
0x663a: mov r12,rdx
0x663d: push rbx
0x663e: mov rbx,rsi
0x6641: lea rsi,[rip+0x21b8]
0x6648: mov edx,0x5
0x664d: xor edi,edi
0x664f: mov r13,r8
0x6652: mov rbp,rcx
0x6655: call 0x16f0
0x665a: mov esi,r14d
0x665d: mov rdx,rax
0x6660: xor edi,edi
0x6662: xor eax,eax
0x6664: call 0x18f0
0x6669: lea rsi,[rip+0x21b0]
0x6670: mov edx,0x5
0x6675: xor edi,edi
0x6677: call 0x16f0
0x667c: xor esi,esi
0x667e: mov rdx,rax
0x6681: xor edi,edi
0x6683: xor eax,eax
0x6685: call 0x18f0
0x668a: mov rcx,r13
0x668d: mov rdx,rbp
0x6690: mov esi,0x8
0x6695: mov edi,0x1
0x669a: call 0x59f0
0x669f: mov rcx,r12
0x66a2: mov rdx,rbx
0x66a5: mov esi,0x8
0x66aa: xor edi,edi
0x66ac: mov rbp,rax
0x66af: call 0x59f0
0x66b4: lea rsi,[rip+0x2195]
0x66bb: mov rbx,rax
0x66be: mov edx,0x5
0x66c3: xor edi,edi
0x66c5: call 0x16f0
0x66ca: mov r8,rbp
0x66cd: mov rcx,rbx
0x66d0: mov edi,dword ptr [rip+0x204962]
0x66d6: pop rbx
0x66d7: pop rbp
0x66d8: pop r12
0x66da: pop r13
0x66dc: pop r14
0x66de: mov rdx,rax
0x66e1: xor esi,esi
0x66e3: xor eax,eax
0x66e5: jmp 0x18f0
0x66ea: nop word ptr [rax+rax]
0x66f0: push r14
0x66f2: push r13
0x66f4: mov r13,rcx
0x66f7: push r12
0x66f9: push rbp
0x66fa: mov r12,rdx
0x66fd: push rbx
0x66fe: mov rbp,rsi
0x6701: mov rbx,rdi
0x6704: call 0x7160
0x6709: mov r14d,eax
0x670c: call 0x1670
0x6711: mov edi,dword ptr [rax]
0x6713: test edi,edi
0x6715: je 0x6728
0x6717: mov r8,r13
0x671a: mov rcx,r12
0x671d: mov rdx,rbp
0x6720: mov rsi,rbx
0x6723: call 0x6630
0x6728: pop rbx
0x6729: mov eax,r14d
0x672c: pop rbp
0x672d: pop r12
0x672f: pop r13
0x6731: pop r14
0x6733: ret 
0x6734: nop 
0x6736: nop word ptr cs:[rax+rax]
0x6740: push r14
0x6742: push r13
0x6744: mov r14,rcx
0x6747: push r12
0x6749: push rbp
0x674a: mov r12,rdx
0x674d: push rbx
0x674e: mov rbp,rdi
0x6751: mov rbx,rsi
0x6754: call 0x7210
0x6759: mov r13d,eax
0x675c: call 0x1670
0x6761: mov edi,dword ptr [rax]
0x6763: test edi,edi
0x6765: je 0x677a
0x6767: lea rdx,[rbx-1]
0x676b: lea r8,[r14-1]
0x676f: mov rcx,r12
0x6772: mov rsi,rbp
0x6775: call 0x6630
0x677a: pop rbx
0x677b: mov eax,r13d
0x677e: pop rbp
0x677f: pop r12
0x6781: pop r13
0x6783: pop r14
0x6785: ret 
0x6786: nop word ptr cs:[rax+rax]
0x67f6: nop word ptr cs:[rax+rax]
0x6834: cmp eax,0x22
0x6837: mov ebp,0x1
0x683c: jne 0x6868
0x6851: nop dword ptr [rax]
0x6862: nop word ptr [rax+rax]
0x6892: nop word ptr [rax+rax]
0x689c: nop dword ptr [rax]
0x693b: nop dword ptr [rax+rax]
0x6a6c: nop dword ptr [rax]
0x6af3: nop dword ptr [rax+rax]
0x6b10: call 0x1720
0x6b15: lea rcx,[rip+0x1e7c]
0x6b1c: lea rsi,[rip+0x1d55]
0x6b23: lea rdi,[rip+0x1d6e]
0x6b2a: mov edx,0x54
0x6b2f: call 0x1790
0x6bac: nop dword ptr [rax]
0x6bf5: nop dword ptr [rax]
0x6c2b: nop dword ptr [rax+rax]
0x6c81: cmp esi,0x406
0x6c87: jne 0x6cd0
0x6c89: mov rax,qword ptr [rsp+0x10]
0x6c8e: cmp dword ptr [rip+0x2046a3],0x0
0x6c95: mov dword ptr [rsp],0x18
0x6c9c: mov r12d,dword ptr [rax+0x10]
0x6ca0: mov edx,r12d
0x6ca3: js 0x6dd3
0x6ca9: xor eax,eax
0x6cab: mov esi,0x406
0x6cb0: call 0x16b0
0x6cb5: test eax,eax
0x6cb7: mov ebx,eax
0x6cb9: js 0x6e48
0x6cbf: mov dword ptr [rip+0x20466f],0x1
0x6cc9: jmp 0x6d10
0x6ccb: nop dword ptr [rax+rax]
0x6cd0: cmp esi,0xb
0x6cd3: je 0x6d00
0x6cd5: jg 0x6d30
0x6cd7: cmp esi,0x4
0x6cda: je 0x6db0
0x6ce0: jg 0x6da0
0x6ce6: cmp esi,0x2
0x6ce9: je 0x6db0
0x6cef: jg 0x6d00
0x6cf1: cmp esi,0x1
0x6cf4: jne 0x6d58
0x6cf6: nop word ptr cs:[rax+rax]
0x6d00: mov edi,ebp
0x6d02: xor eax,eax
0x6d04: call 0x16b0
0x6d09: mov ebx,eax
0x6d0b: nop dword ptr [rax+rax]
0x6d2f: nop 
0x6d30: cmp esi,0x407
0x6d36: jg 0x6d80
0x6d38: cmp esi,0x406
0x6d3e: jge 0x6db0
0x6d40: cmp esi,0x401
0x6d46: je 0x6d00
0x6d48: cmp esi,0x402
0x6d4e: je 0x6db0
0x6d50: cmp esi,0x400
0x6d56: je 0x6db0
0x6d58: mov eax,dword ptr [rsp]
0x6d5b: cmp eax,0x2f
0x6d5e: ja 0x6e9a
0x6d64: add rax,qword ptr [rsp+0x10]
0x6d69: mov rdx,qword ptr [rax]
0x6d6c: mov edi,ebp
0x6d6e: xor eax,eax
0x6d70: call 0x16b0
0x6d75: mov ebx,eax
0x6d77: jmp 0x6d10
0x6d79: nop dword ptr [rax]
0x6d80: cmp esi,0x409
0x6d86: je 0x6db0
0x6d88: jl 0x6d00
0x6d8e: cmp esi,0x40a
0x6d94: jne 0x6d58
0x6d96: jmp 0x6d00
0x6d9b: nop dword ptr [rax+rax]
0x6da0: cmp esi,0x9
0x6da3: je 0x6d00
0x6da9: jg 0x6db0
0x6dab: cmp esi,0x8
0x6dae: jne 0x6d58
0x6db0: mov eax,dword ptr [rsp]
0x6db3: cmp eax,0x2f
0x6db6: ja 0x6ea4
0x6dbc: add rax,qword ptr [rsp+0x10]
0x6dc1: mov edx,dword ptr [rax]
0x6dc3: mov edi,ebp
0x6dc5: xor eax,eax
0x6dc7: call 0x16b0
0x6dcc: mov ebx,eax
0x6dce: jmp 0x6d10
0x6dd3: xor esi,esi
0x6dd5: xor eax,eax
0x6dd7: call 0x16b0
0x6ddc: test eax,eax
0x6dde: mov ebx,eax
0x6de0: js 0x6d10
0x6de6: cmp dword ptr [rip+0x20454b],0xffffffff
0x6ded: jne 0x6d10
0x6df3: xor eax,eax
0x6df5: mov esi,0x1
0x6dfa: mov edi,ebx
0x6dfc: call 0x16b0
0x6e01: test eax,eax
0x6e03: js 0x6e21
0x6e05: or eax,0x1
0x6e08: mov esi,0x2
0x6e0d: mov edi,ebx
0x6e0f: mov edx,eax
0x6e11: xor eax,eax
0x6e13: call 0x16b0
0x6e18: cmp eax,0xffffffff
0x6e1b: jne 0x6d10
0x6e21: call 0x1670
0x6e26: mov r12d,dword ptr [rax]
0x6e29: mov rbp,rax
0x6e2c: mov edi,ebx
0x6e2e: call 0x17b0
0x6e33: mov ebx,0xffffffff
0x6e38: mov dword ptr [rbp],r12d
0x6e3c: jmp 0x6d10
0x6e41: nop dword ptr [rax]
0x6e48: call 0x1670
0x6e4d: cmp dword ptr [rax],0x16
0x6e50: jne 0x6cbf
0x6e56: xor esi,esi
0x6e58: xor eax,eax
0x6e5a: mov edx,r12d
0x6e5d: mov edi,ebp
0x6e5f: call 0x16b0
0x6e64: test eax,eax
0x6e66: mov ebx,eax
0x6e68: js 0x6d10
0x6e6e: mov dword ptr [rip+0x2044c0],0xffffffff
0x6e78: jmp 0x6df3
0x6e7d: call 0x1720
0x6e9a: mov rax,qword ptr [rsp+8]
0x6e9f: jmp 0x6d69
0x6ea4: mov rax,qword ptr [rsp+8]
0x6ea9: jmp 0x6dc1
0x6eae: nop 
0x6ed3: nop dword ptr [rax+rax]
0x6eff: nop 
0x6f47: nop word ptr [rax+rax]
0x6fce: call 0x1720
0x6fd3: nop word ptr cs:[rax+rax]
0x6fdd: nop dword ptr [rax]
0x6fe0: push r12
0x6fe2: push rbp
0x6fe3: mov rbp,rdi
0x6fe6: push rbx
0x6fe7: call 0x16a0
0x6fec: mov ebx,dword ptr [rbp]
0x6fef: mov rdi,rbp
0x6ff2: mov r12,rax
0x6ff5: call 0x6bb0
0x6ffa: and ebx,0x20
0x6ffd: test ebx,ebx
0x6fff: jne 0x7018
0x7001: test eax,eax
0x7003: je 0x700f
0x7005: test r12,r12
0x7008: mov eax,0xffffffff
0x700d: je 0x7048
0x700f: pop rbx
0x7010: pop rbp
0x7011: pop r12
0x7013: ret 
0x7014: nop dword ptr [rax]
0x7018: test eax,eax
0x701a: jne 0x7038
0x701c: call 0x1670
0x7021: mov dword ptr [rax],0x0
0x7027: mov eax,0xffffffff
0x702c: pop rbx
0x702d: pop rbp
0x702e: pop r12
0x7030: ret 
0x7031: nop dword ptr [rax]
0x7038: pop rbx
0x7039: mov eax,0xffffffff
0x703e: pop rbp
0x703f: pop r12
0x7041: ret 
0x7042: nop word ptr [rax+rax]
0x7048: call 0x1670
0x704d: cmp dword ptr [rax],0x9
0x7050: pop rbx
0x7051: pop rbp
0x7052: pop r12
0x7054: setne al
0x7057: movzx eax,al
0x705a: neg eax
0x705c: ret 
0x705d: nop dword ptr [rax]
0x7086: nop word ptr cs:[rax+rax]
0x709c: nop dword ptr [rax]
0x70a0: push r15
0x70a2: push r14
0x70a4: mov r14,rcx
0x70a7: push r13
0x70a9: push r12
0x70ab: mov r13,rsi
0x70ae: push rbp
0x70af: push rbx
0x70b0: mov r12,rdi
0x70b3: mov rbp,rdx
0x70b6: sub rsp,0x8
0x70ba: call 0x1670
0x70bf: mov r15,rax
0x70c2: jmp 0x70f3
0x70c4: nop dword ptr [rax]
0x70c8: mov rdi,r12
0x70cb: call 0x1710
0x70d0: mov rdi,rbp
0x70d3: lea rbx,[rax+1]
0x70d7: call 0x1710
0x70dc: add rax,0x1
0x70e0: add r12,rbx
0x70e3: add rbp,rax
0x70e6: sub r14,rax
0x70e9: sub r13,rbx
0x70ec: je 0x7120
0x70ee: test r14,r14
0x70f1: je 0x7140
0x70f3: mov dword ptr [r15],0x0
0x70fa: mov rsi,rbp
0x70fd: mov rdi,r12
0x7100: call 0x1870
0x7105: test eax,eax
0x7107: je 0x70c8
0x7109: add rsp,0x8
0x710d: pop rbx
0x710e: pop rbp
0x710f: pop r12
0x7111: pop r13
0x7113: pop r14
0x7115: pop r15
0x7117: ret 
0x7118: nop dword ptr [rax+rax]
0x7120: xor eax,eax
0x7122: test r14,r14
0x7125: setne al
0x7128: add rsp,0x8
0x712c: pop rbx
0x712d: neg eax
0x712f: pop rbp
0x7130: pop r12
0x7132: pop r13
0x7134: pop r14
0x7136: pop r15
0x7138: ret 
0x7139: nop dword ptr [rax]
0x7140: add rsp,0x8
0x7144: mov eax,0x1
0x7149: pop rbx
0x714a: pop rbp
0x714b: pop r12
0x714d: pop r13
0x714f: pop r14
0x7151: pop r15
0x7153: ret 
0x7154: nop 
0x7156: nop word ptr cs:[rax+rax]
0x7160: push r15
0x7162: push r14
0x7164: mov r15,rdx
0x7167: push r13
0x7169: push r12
0x716b: mov r14,rdi
0x716e: push rbp
0x716f: push rbx
0x7170: mov rbp,rcx
0x7173: mov rbx,rsi
0x7176: sub rsp,0x18
0x717a: cmp rsi,rcx
0x717d: jne 0x7192
0x717f: mov rdx,rsi
0x7182: mov rsi,r15
0x7185: call 0x17e0
0x718a: test eax,eax
0x718c: mov dword ptr [rsp+8],eax
0x7190: je 0x71f8
0x7192: lea r13,[r14+rbx]
0x7196: lea r12,[r15+rbp]
0x719a: lea rcx,[rbp+1]
0x719e: lea rsi,[rbx+1]
0x71a2: mov rdx,r15
0x71a5: mov rdi,r14
0x71a8: movzx r9d,byte ptr [r13]
0x71ad: movzx r8d,byte ptr [r12]
0x71b2: mov byte ptr [r13],0x0
0x71b7: mov byte ptr [r12],0x0
0x71bc: mov byte ptr [rsp+0xf],r9b
0x71c1: mov byte ptr [rsp+8],r8b
0x71c6: call 0x70a0
0x71cb: movzx r9d,byte ptr [rsp+0xf]
0x71d1: movzx r8d,byte ptr [rsp+8]
0x71d7: mov edx,eax
0x71d9: mov byte ptr [r13],r9b
0x71dd: mov byte ptr [r12],r8b
0x71e1: add rsp,0x18
0x71e5: mov eax,edx
0x71e7: pop rbx
0x71e8: pop rbp
0x71e9: pop r12
0x71eb: pop r13
0x71ed: pop r14
0x71ef: pop r15
0x71f1: ret 
0x71f2: nop word ptr [rax+rax]
0x71f8: call 0x1670
0x71fd: mov edx,dword ptr [rsp+8]
0x7201: mov dword ptr [rax],0x0
0x7207: jmp 0x71e1
0x7209: nop dword ptr [rax]
0x7210: push r12
0x7212: push rbp
0x7213: mov r12,rdx
0x7216: push rbx
0x7217: mov rbp,rdi
0x721a: mov rbx,rsi
0x721d: sub rsp,0x10
0x7221: cmp rsi,rcx
0x7224: jne 0x723f
0x7226: mov rdx,rsi
0x7229: mov rsi,r12
0x722c: mov qword ptr [rsp+8],rcx
0x7231: call 0x17e0
0x7236: test eax,eax
0x7238: mov rcx,qword ptr [rsp+8]
0x723d: je 0x7258
0x723f: add rsp,0x10
0x7243: mov rdx,r12
0x7246: mov rsi,rbx
0x7249: mov rdi,rbp
0x724c: pop rbx
0x724d: pop rbp
0x724e: pop r12
0x7250: jmp 0x70a0
0x7255: nop dword ptr [rax]
0x7258: call 0x1670
0x725d: mov dword ptr [rax],0x0
0x7263: add rsp,0x10
0x7267: xor eax,eax
0x7269: pop rbx
0x726a: pop rbp
0x726b: pop r12
0x726d: ret 
0x726e: nop 
0x7270: push r15
0x7272: push r14
0x7274: mov r15,rdx
0x7277: push r13
0x7279: push r12
0x727b: lea r12,[rip+0x20382e]
0x7282: push rbp
0x7283: lea rbp,[rip+0x20382e]
0x728a: push rbx
0x728b: mov r13d,edi
0x728e: mov r14,rsi
0x7291: sub rbp,r12
0x7294: sub rsp,0x8
0x7298: sar rbp,0x3
0x729c: call 0x1600
0x72a1: test rbp,rbp
0x72a4: je 0x72c6
0x72a6: xor ebx,ebx
0x72a8: nop dword ptr [rax+rax]
0x72b0: mov rdx,r15
0x72b3: mov rsi,r14
0x72b6: mov edi,r13d
0x72b9: call qword ptr [r12+rbx*8]
0x72bd: add rbx,0x1
0x72c1: cmp rbp,rbx
0x72c4: jne 0x72b0
0x72c6: add rsp,0x8
0x72ca: pop rbx
0x72cb: pop rbp
0x72cc: pop r12
0x72ce: pop r13
0x72d0: pop r14
0x72d2: pop r15
0x72d4: ret 
0x72d5: nop 
0x72d6: nop word ptr cs:[rax+rax]
0x72e0: ret 
0x72e2: nop word ptr cs:[rax+rax]
0x72ec: nop dword ptr [rax]
0x72fe: add byte ptr [rax],al
