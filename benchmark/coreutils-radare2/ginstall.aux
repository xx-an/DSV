0x28e0: push qword ptr [rip+0x21a2ea]
0x28e6: jmp qword ptr [rip+0x21a2ec]
0x28ec: nop dword ptr [rax]
0x28f6: push 0x0
0x28fb: jmp 0x28e0
0x2906: push 0x1
0x290b: jmp 0x28e0
0x2910: jmp qword ptr [rip+0x21a2da]
0x2916: push 0x2
0x291b: jmp 0x28e0
0x2926: push 0x3
0x292b: jmp 0x28e0
0x2936: push 0x4
0x293b: jmp 0x28e0
0x2946: push 0x5
0x294b: jmp 0x28e0
0x2956: push 0x6
0x295b: jmp 0x28e0
0x2966: push 0x7
0x296b: jmp 0x28e0
0x2976: push 0x8
0x297b: jmp 0x28e0
0x2986: push 0x9
0x298b: jmp 0x28e0
0x2996: push 0xa
0x299b: jmp 0x28e0
0x29a0: jmp qword ptr [rip+0x21a292]
0x29a6: push 0xb
0x29ab: jmp 0x28e0
0x29b0: jmp qword ptr [rip+0x21a28a]
0x29b6: push 0xc
0x29bb: jmp 0x28e0
0x29c6: push 0xd
0x29cb: jmp 0x28e0
0x29d0: jmp qword ptr [rip+0x21a27a]
0x29d6: push 0xe
0x29db: jmp 0x28e0
0x29e0: jmp qword ptr [rip+0x21a272]
0x29e6: push 0xf
0x29eb: jmp 0x28e0
0x29f0: jmp qword ptr [rip+0x21a26a]
0x29f6: push 0x10
0x29fb: jmp 0x28e0
0x2a06: push 0x11
0x2a0b: jmp 0x28e0
0x2a16: push 0x12
0x2a1b: jmp 0x28e0
0x2a26: push 0x13
0x2a2b: jmp 0x28e0
0x2a30: jmp qword ptr [rip+0x21a24a]
0x2a36: push 0x14
0x2a3b: jmp 0x28e0
0x2a40: jmp qword ptr [rip+0x21a242]
0x2a46: push 0x15
0x2a4b: jmp 0x28e0
0x2a56: push 0x16
0x2a5b: jmp 0x28e0
0x2a66: push 0x17
0x2a6b: jmp 0x28e0
0x2a76: push 0x18
0x2a7b: jmp 0x28e0
0x2a80: jmp qword ptr [rip+0x21a222]
0x2a86: push 0x19
0x2a8b: jmp 0x28e0
0x2a90: jmp qword ptr [rip+0x21a21a]
0x2a96: push 0x1a
0x2a9b: jmp 0x28e0
0x2aa6: push 0x1b
0x2aab: jmp 0x28e0
0x2ab0: jmp qword ptr [rip+0x21a20a]
0x2ab6: push 0x1c
0x2abb: jmp 0x28e0
0x2ac0: jmp qword ptr [rip+0x21a202]
0x2ac6: push 0x1d
0x2acb: jmp 0x28e0
0x2ad6: push 0x1e
0x2adb: jmp 0x28e0
0x2ae6: push 0x1f
0x2aeb: jmp 0x28e0
0x2af6: push 0x20
0x2afb: jmp 0x28e0
0x2b06: push 0x21
0x2b0b: jmp 0x28e0
0x2b16: push 0x22
0x2b1b: jmp 0x28e0
0x2b26: push 0x23
0x2b2b: jmp 0x28e0
0x2b36: push 0x24
0x2b3b: jmp 0x28e0
0x2b46: push 0x25
0x2b4b: jmp 0x28e0
0x2b56: push 0x26
0x2b5b: jmp 0x28e0
0x2b66: push 0x27
0x2b6b: jmp 0x28e0
0x2b70: jmp qword ptr [rip+0x21a1aa]
0x2b76: push 0x28
0x2b7b: jmp 0x28e0
0x2b86: push 0x29
0x2b8b: jmp 0x28e0
0x2b96: push 0x2a
0x2b9b: jmp 0x28e0
0x2ba6: push 0x2b
0x2bab: jmp 0x28e0
0x2bb6: push 0x2c
0x2bbb: jmp 0x28e0
0x2bc6: push 0x2d
0x2bcb: jmp 0x28e0
0x2bd0: jmp qword ptr [rip+0x21a17a]
0x2bd6: push 0x2e
0x2bdb: jmp 0x28e0
0x2be6: push 0x2f
0x2beb: jmp 0x28e0
0x2bf6: push 0x30
0x2bfb: jmp 0x28e0
0x2c06: push 0x31
0x2c0b: jmp 0x28e0
0x2c16: push 0x32
0x2c1b: jmp 0x28e0
0x2c20: jmp qword ptr [rip+0x21a152]
0x2c26: push 0x33
0x2c2b: jmp 0x28e0
0x2c36: push 0x34
0x2c3b: jmp 0x28e0
0x2c46: push 0x35
0x2c4b: jmp 0x28e0
0x2c50: jmp qword ptr [rip+0x21a13a]
0x2c56: push 0x36
0x2c5b: jmp 0x28e0
0x2c66: push 0x37
0x2c6b: jmp 0x28e0
0x2c76: push 0x38
0x2c7b: jmp 0x28e0
0x2c86: push 0x39
0x2c8b: jmp 0x28e0
0x2c96: push 0x3a
0x2c9b: jmp 0x28e0
0x2ca6: push 0x3b
0x2cab: jmp 0x28e0
0x2cb6: push 0x3c
0x2cbb: jmp 0x28e0
0x2cc6: push 0x3d
0x2ccb: jmp 0x28e0
0x2cd6: push 0x3e
0x2cdb: jmp 0x28e0
0x2ce0: jmp qword ptr [rip+0x21a0f2]
0x2ce6: push 0x3f
0x2ceb: jmp 0x28e0
0x2cf6: push 0x40
0x2cfb: jmp 0x28e0
0x2d06: push 0x41
0x2d0b: jmp 0x28e0
0x2d10: jmp qword ptr [rip+0x21a0da]
0x2d16: push 0x42
0x2d1b: jmp 0x28e0
0x2d26: push 0x43
0x2d2b: jmp 0x28e0
0x2d36: push 0x44
0x2d3b: jmp 0x28e0
0x2d40: jmp qword ptr [rip+0x21a0c2]
0x2d46: push 0x45
0x2d4b: jmp 0x28e0
0x2d56: push 0x46
0x2d5b: jmp 0x28e0
0x2d60: jmp qword ptr [rip+0x21a0b2]
0x2d66: push 0x47
0x2d6b: jmp 0x28e0
0x2d76: push 0x48
0x2d7b: jmp 0x28e0
0x2d86: push 0x49
0x2d8b: jmp 0x28e0
0x2d96: push 0x4a
0x2d9b: jmp 0x28e0
0x2da0: jmp qword ptr [rip+0x21a092]
0x2da6: push 0x4b
0x2dab: jmp 0x28e0
0x2db0: jmp qword ptr [rip+0x21a08a]
0x2db6: push 0x4c
0x2dbb: jmp 0x28e0
0x2dc6: push 0x4d
0x2dcb: jmp 0x28e0
0x2dd6: push 0x4e
0x2ddb: jmp 0x28e0
0x2de6: push 0x4f
0x2deb: jmp 0x28e0
0x2df6: push 0x50
0x2dfb: jmp 0x28e0
0x2e00: jmp qword ptr [rip+0x21a062]
0x2e06: push 0x51
0x2e0b: jmp 0x28e0
0x2e16: push 0x52
0x2e1b: jmp 0x28e0
0x2e26: push 0x53
0x2e2b: jmp 0x28e0
0x2e36: push 0x54
0x2e3b: jmp 0x28e0
0x2e46: push 0x55
0x2e4b: jmp 0x28e0
0x2e50: jmp qword ptr [rip+0x21a03a]
0x2e56: push 0x56
0x2e5b: jmp 0x28e0
0x2e66: push 0x57
0x2e6b: jmp 0x28e0
0x2e76: push 0x58
0x2e7b: jmp 0x28e0
0x2e86: push 0x59
0x2e8b: jmp 0x28e0
0x2e96: push 0x5a
0x2e9b: jmp 0x28e0
0x2ea0: jmp qword ptr [rip+0x21a012]
0x2ea6: push 0x5b
0x2eab: jmp 0x28e0
0x2eb0: jmp qword ptr [rip+0x21a00a]
0x2eb6: push 0x5c
0x2ebb: jmp 0x28e0
0x2ec0: jmp qword ptr [rip+0x21a002]
0x2ec6: push 0x5d
0x2ecb: jmp 0x28e0
0x2ed6: push 0x5e
0x2edb: jmp 0x28e0
0x2ee6: push 0x5f
0x2eeb: jmp 0x28e0
0x2ef6: push 0x60
0x2efb: jmp 0x28e0
0x2f00: jmp qword ptr [rip+0x219fe2]
0x2f06: push 0x61
0x2f0b: jmp 0x28e0
0x2f16: push 0x62
0x2f1b: jmp 0x28e0
0x2f26: push 0x63
0x2f2b: jmp 0x28e0
0x2f36: push 0x64
0x2f3b: jmp 0x28e0
0x2f46: push 0x65
0x2f4b: jmp 0x28e0
0x2f50: jmp qword ptr [rip+0x219fba]
0x2f56: push 0x66
0x2f5b: jmp 0x28e0
0x2f66: push 0x67
0x2f6b: jmp 0x28e0
0x2f70: jmp qword ptr [rip+0x219faa]
0x2f76: push 0x68
0x2f7b: jmp 0x28e0
0x2f86: push 0x69
0x2f8b: jmp 0x28e0
0x2f90: jmp qword ptr [rip+0x219f9a]
0x2f96: push 0x6a
0x2f9b: jmp 0x28e0
0x2fa6: push 0x6b
0x2fab: jmp 0x28e0
0x2fb6: push 0x6c
0x2fbb: jmp 0x28e0
0x2fc6: push 0x6d
0x2fcb: jmp 0x28e0
0x2fd0: jmp qword ptr [rip+0x219f7a]
0x2fd6: push 0x6e
0x2fdb: jmp 0x28e0
0x2fe6: push 0x6f
0x2feb: jmp 0x28e0
0x2ff6: push 0x70
0x2ffb: jmp 0x28e0
0x3006: push 0x71
0x300b: jmp 0x28e0
0x3016: push 0x72
0x301b: jmp 0x28e0
0x3020: jmp qword ptr [rip+0x219f52]
0x3026: push 0x73
0x302b: jmp 0x28e0
0x3036: push 0x74
0x303b: jmp 0x28e0
0x3046: push 0x75
0x304b: jmp 0x28e0
0x3056: push 0x76
0x305b: jmp 0x28e0
0x3066: push 0x77
0x306b: jmp 0x28e0
0x3070: jmp qword ptr [rip+0x219f2a]
0x3076: push 0x78
0x307b: jmp 0x28e0
0x3086: push 0x79
0x308b: jmp 0x28e0
0x3096: push 0x7a
0x309b: jmp 0x28e0
0x30a6: push 0x7b
0x30ab: jmp 0x28e0
0x30b6: push 0x7c
0x30bb: jmp 0x28e0
0x30c6: push 0x7d
0x30cb: jmp 0x28e0 0x000030d0 .qword 0x906600219efa25ff
0x3129: nop dword ptr [rax]
0x334a: nop word ptr [rax+rax]
0x3386: nop word ptr cs:[rax+rax]
0x33ce: nop 
0x343b: test rax,rax
0x343e: mov byte ptr [rip+0x219bdb],0x0
0x3445: je 0x3a4a
0x344b: mov qword ptr [rsp+0x28],rax
0x3450: jmp 0x32f0
0x351e: mov byte ptr [rsp+0x65],0x1
0x3523: mov byte ptr [rip+0x219af6],0x0
0x352a: jmp 0x32f0
0x358f: jmp 0x32f0
0x3609: cmp byte ptr [rsp+0x61],0x0
0x360e: jne 0x3d1a
0x3614: cmp qword ptr [rsp+0x28],0x0
0x361a: jne 0x3d1a
0x38c6: call 0x2950
0x38cb: mov rdi,qword ptr [rsp+0x28]
0x38d0: mov dword ptr [rax],0x5f
0x38d6: mov rbx,rax
0x38d9: call 0xf6c0
0x38de: lea rsi,[rip+0x13beb]
0x38e5: mov edx,0x5
0x38ea: xor edi,edi
0x38ec: mov rbp,rax
0x38ef: call 0x2ad0
0x38f4: mov esi,dword ptr [rbx]
0x38f6: mov rdx,rax
0x38f9: mov rcx,rbp
0x38fc: mov edi,0x1
0x3901: xor eax,eax
0x3903: call 0x2f30
0x3a4a: mov byte ptr [rsp+0x61],0x1
0x3a4f: jmp 0x32f0
0x3a75: jmp 0x36dc
0x3a9b: jmp 0x3719
0x3d15: jmp 0x337c
0x3d1a: lea rsi,[rip+0x1377f]
0x3d21: mov edx,0x5
0x3d26: xor edi,edi
0x3d28: call 0x2ad0
0x3d2d: xor esi,esi
0x3d2f: mov rdx,rax
0x3d32: mov edi,0x1
0x3d37: xor eax,eax
0x3d39: call 0x2f30
0x3d96: jmp 0x337c
0x3e04: call 0x2b30
0x3e2d: nop dword ptr [rax]
0x3e5a: hlt 
0x3e5b: nop dword ptr [rax+rax]
0x3e60: lea rdi,[rip+0x219261]
0x3e67: push rbp
0x3e68: lea rax,[rip+0x219259]
0x3e6f: cmp rax,rdi
0x3e72: mov rbp,rsp
0x3e75: je 0x3e90
0x3e77: mov rax,qword ptr [rip+0x21915a]
0x3e7e: test rax,rax
0x3e81: je 0x3e90
0x3e83: pop rbp
0x3e84: jmp rax
0x3e86: nop word ptr cs:[rax+rax]
0x3e90: pop rbp
0x3e91: ret 
0x3e92: nop dword ptr [rax]
0x3e96: nop word ptr cs:[rax+rax]
0x3ea0: lea rdi,[rip+0x219221]
0x3ea7: lea rsi,[rip+0x21921a]
0x3eae: push rbp
0x3eaf: sub rsi,rdi
0x3eb2: mov rbp,rsp
0x3eb5: sar rsi,0x3
0x3eb9: mov rax,rsi
0x3ebc: shr rax,0x3f
0x3ec0: add rsi,rax
0x3ec3: sar rsi,0x1
0x3ec6: je 0x3ee0
0x3ec8: mov rax,qword ptr [rip+0x219121]
0x3ecf: test rax,rax
0x3ed2: je 0x3ee0
0x3ed4: pop rbp
0x3ed5: jmp rax
0x3ed7: nop word ptr [rax+rax]
0x3ee0: pop rbp
0x3ee1: ret 
0x3ee2: nop dword ptr [rax]
0x3ee6: nop word ptr cs:[rax+rax]
0x3ef0: cmp byte ptr [rip+0x219231],0x0
0x3ef7: jne 0x3f28
0x3ef9: cmp qword ptr [rip+0x2190f7],0x0
0x3f01: push rbp
0x3f02: mov rbp,rsp
0x3f05: je 0x3f13
0x3f07: mov rdi,qword ptr [rip+0x2190fa]
0x3f0e: call 0x30d8
0x3f13: call 0x3e60
0x3f18: mov byte ptr [rip+0x219209],0x1
0x3f1f: pop rbp
0x3f20: ret 
0x3f21: nop dword ptr [rax]
0x3f28: ret 
0x3f2a: nop word ptr [rax+rax]
0x3f30: push rbp
0x3f31: mov rbp,rsp
0x3f34: pop rbp
0x3f35: jmp 0x3ea0
0x3f3a: nop word ptr [rax+rax]
0x3fd2: mov esi,0x1
0x3fd7: mov rdi,rbp
0x3fda: call 0x102f0
0x3fdf: mov rdi,rbp
0x3fe2: call 0x10450
0x3fe7: xor eax,eax
0x4008: nop dword ptr [rax+rax]
0x40c3: xor eax,eax
0x40c5: jmp 0x3fe9
0x40ca: call 0x2b30
0x410b: xor eax,eax
0x410d: jmp 0x3fe9
0x4112: nop dword ptr [rax]
0x4116: nop word ptr cs:[rax+rax]
0x4171: call 0x2950
0x4176: mov dword ptr [rax],0x5f
0x4185: nop 
0x4186: nop word ptr cs:[rax+rax]
0x41c9: nop dword ptr [rax]
0x41d8: nop dword ptr [rax+rax]
0x41e2: nop dword ptr [rax]
0x41e6: nop word ptr cs:[rax+rax]
0x4207: call 0x2950
0x420c: mov dword ptr [rax],0x5f
0x4232: nop word ptr [rax+rax]
0x4244: mov eax,dword ptr [rsp+0xc]
0x4248: add rsp,0x10
0x424c: pop rbx
0x424d: pop rbp
0x424e: pop r12
0x4250: ret 
0x4251: nop dword ptr [rax+rax]
0x4256: nop word ptr cs:[rax+rax]
0x42e2: test al,al
0x42e4: jne 0x4323
0x42e6: xor ebx,ebx
0x43d5: jmp 0x42e6
0x43da: nop word ptr [rax+rax]
0x443b: lea rdx,[rsp+0x140]
0x4443: mov rsi,rbp
0x4446: mov edi,0x1
0x444b: call 0x2b00
0x4450: test eax,eax
0x4452: jne 0x42e8
0x4458: cmp byte ptr [rip+0x218bb1],0x0
0x445f: je 0x446b
0x4461: cmp byte ptr [rbp],0x2f
0x4465: je 0x47d1
0x446b: mov byte ptr [rip+0x218b9e],0x0
0x4472: call 0x2950
0x4477: mov dword ptr [rax],0x5f
0x447d: jmp 0x42e8
0x4482: nop word ptr [rax+rax]
0x4575: cmp byte ptr [rbx+0x25],0x0
0x4579: jne 0x490a
0x461e: nop 
0x4641: nop dword ptr [rax]
0x4686: cmp byte ptr [rip+0x218993],0x0
0x468d: je 0x42e8
0x4693: jmp 0x442e
0x4698: nop dword ptr [rax+rax]
0x46be: nop 
0x471a: jmp 0x4749
0x471c: nop dword ptr [rax]
0x4749: mov rdi,rbp
0x474c: call 0x2960
0x4751: test eax,eax
0x4753: je 0x42e6
0x4759: mov rsi,rbp
0x475c: mov edi,0x4
0x4761: call 0xf3f0
0x4766: lea rsi,[rip+0x11ccf]
0x476d: mov edx,0x5
0x4772: xor edi,edi
0x4774: mov rbp,rax
0x4777: call 0x2ad0
0x477c: mov rbx,rax
0x477f: call 0x2950
0x4784: mov esi,dword ptr [rax]
0x4786: mov rcx,rbp
0x4789: mov rdx,rbx
0x478c: mov edi,0x1
0x4791: xor eax,eax
0x4793: call 0x2f30
0x4798: nop dword ptr [rax+rax]
0x47bc: nop dword ptr [rax]
0x47d1: movzx edx,byte ptr [rbp+1]
0x47d5: lea rax,[rbp+1]
0x47d9: cmp dl,0x2f
0x47dc: jne 0x47ec
0x47de: nop 
0x47e0: add rax,0x1
0x47e4: movzx edx,byte ptr [rax]
0x47e7: cmp dl,0x2f
0x47ea: je 0x47e0
0x47ec: test dl,dl
0x47ee: je 0x446b
0x47f4: mov rdx,rax
0x47f7: jmp 0x47fe
0x47f9: cmp cl,0x2f
0x47fc: je 0x4809
0x47fe: add rdx,0x1
0x4802: movzx ecx,byte ptr [rdx]
0x4805: test cl,cl
0x4807: jne 0x47f9
0x4809: lea rbp,[rax-1]
0x480d: sub rdx,rbp
0x4810: lea rdi,[rdx+2]
0x4814: mov r12,rdx
0x4817: call 0x2df0
0x481c: test rax,rax
0x481f: mov r13,rax
0x4822: je 0x446b
0x4828: mov rdx,r12
0x482b: mov rsi,rbp
0x482e: mov rdi,rax
0x4831: call 0x2ea0
0x4836: mov rdi,r13
0x4839: mov word ptr [rax],0x2f
0x483e: call 0x30d0
0x4843: jmp 0x446b
0x4848: call 0x2b30
0x48cc: jmp 0x42ca
0x4905: jmp 0x42ca
0x490a: call 0x2950
0x490f: mov dword ptr [rax],0x5f
0x4915: jmp 0x42ca
0x491a: nop word ptr [rax+rax]
0x4d6a: nop word ptr [rax+rax]
0x4d97: movaps xmmword ptr [rsp+0x50],xmm0
0x4d9c: movaps xmmword ptr [rsp+0x60],xmm1
0x4da1: movaps xmmword ptr [rsp+0x70],xmm2
0x4da6: movaps xmmword ptr [rsp+0x80],xmm3
0x4dae: movaps xmmword ptr [rsp+0x90],xmm4
0x4db6: movaps xmmword ptr [rsp+0xa0],xmm5
0x4dbe: movaps xmmword ptr [rsp+0xb0],xmm6
0x4dc6: movaps xmmword ptr [rsp+0xc0],xmm7
0x4e3a: mov rax,qword ptr [rbx+0x28]
0x4e3e: cmp rax,qword ptr [rbx+0x30]
0x4e42: jae 0x4e70
0x4e44: lea rdx,[rax+1]
0x4e48: mov qword ptr [rbx+0x28],rdx
0x4e4c: mov byte ptr [rax],0xa
0x4e4f: mov rax,qword ptr [rsp+0x18]
0x4e54: xor rax,qword ptr fs:[0x28]
0x4e5d: jne 0x4e7f
0x4e5f: add rsp,0xd8
0x4e66: pop rbx
0x4e67: pop rbp
0x4e68: ret 
0x4e69: nop dword ptr [rax]
0x4e70: mov esi,0xa
0x4e75: mov rdi,rbx
0x4e78: call 0x2b90
0x4e7d: jmp 0x4e4f
0x4e7f: call 0x2b30
0x4e84: nop word ptr cs:[rax+rax]
0x4e8e: nop 
0x4e90: and esi,0xf000
0x4e96: cmp esi,0xa000
0x4e9c: je 0x4eb8
0x4e9e: push rbx
0x4e9f: mov rbx,rdi
0x4ea2: call 0x11fd0
0x4ea7: test al,al
0x4ea9: je 0x4ec0
0x4eab: mov eax,0x1
0x4eb0: pop rbx
0x4eb1: ret 
0x4eb2: nop word ptr [rax+rax]
0x4eb8: mov eax,0x1
0x4ebd: ret 
0x4ebe: nop 
0x4ec0: mov rdi,rbx
0x4ec3: mov esi,0x2
0x4ec8: call 0x2fd0
0x4ecd: test eax,eax
0x4ecf: sete al
0x4ed2: pop rbx
0x4ed3: ret 
0x4ed4: nop 
0x4ed6: nop word ptr cs:[rax+rax]
0x4efb: nop dword ptr [rax+rax]
0x4f00: sub rbx,rax
0x4f03: je 0x4f38
0x4f05: cmp qword ptr [rip+0x21812c],rbx
0x4f0c: mov rbp,rbx
0x4f0f: mov rsi,qword ptr [rip+0x21a66a]
0x4f16: cmovbe rbp,qword ptr [rip+0x21811a]
0x4f1e: mov edi,r12d
0x4f21: mov rdx,rbp
0x4f24: call 0xb930
0x4f29: cmp rax,rbp
0x4f2c: je 0x4f00
0x4f2e: pop rbx
0x4f2f: xor eax,eax
0x4f31: pop rbp
0x4f32: pop r12
0x4f34: ret 
0x4f35: nop dword ptr [rax]
0x4f42: nop word ptr [rax+rax]
0x4f85: nop 
0x4f86: nop word ptr cs:[rax+rax]
0x4fab: nop dword ptr [rax+rax]
0x4fc7: nop word ptr [rax+rax]
0x5072: nop word ptr [rax+rax]
0x5086: nop word ptr cs:[rax+rax]
0x5090: push r13
0x5092: push r12
0x5094: movzx r9d,dl
0x5098: push rbp
0x5099: push rbx
0x509a: mov edx,0xffffff9c
0x509f: mov r13,rdi
0x50a2: mov r12,rsi
0x50a5: mov ebp,ecx
0x50a7: sub rsp,0x10
0x50ab: test r8b,r8b
0x50ae: mov rcx,rsi
0x50b1: setne r8b
0x50b5: push 0xffffffffffffffff
0x50b7: mov rsi,rdi
0x50ba: movzx r8d,r8b
0x50be: mov edi,edx
0x50c0: shl r8d,0xa
0x50c4: call 0xa470
0x50c9: test eax,eax
0x50cb: mov ebx,eax
0x50cd: pop rdx
0x50ce: pop rcx
0x50cf: jg 0x5138
0x50d1: shr ebx,0x1f
0x50d4: and bl,bpl
0x50d7: jne 0x50f0
0x50d9: add rsp,0x8
0x50dd: mov ebx,0x1
0x50e2: mov eax,ebx
0x50e4: pop rbx
0x50e5: pop rbp
0x50e6: pop r12
0x50e8: pop r13
0x50ea: ret 
0x50eb: nop dword ptr [rax+rax]
0x50f0: mov rsi,r12
0x50f3: mov edi,0x4
0x50f8: call 0xf3f0
0x50fd: lea rsi,[rip+0x12c0c]
0x5104: mov rbp,rax
0x5107: mov edx,0x5
0x510c: xor edi,edi
0x510e: call 0x2ad0
0x5113: mov rdx,rbp
0x5116: mov rsi,rax
0x5119: mov edi,0x1
0x511e: xor eax,eax
0x5120: call 0x2ee0
0x5125: add rsp,0x8
0x5129: mov eax,ebx
0x512b: pop rbx
0x512c: pop rbp
0x512d: pop r12
0x512f: pop r13
0x5131: ret 
0x5132: nop word ptr [rax+rax]
0x5138: mov rdx,r13
0x513b: mov esi,0x4
0x5140: mov edi,0x1
0x5145: call 0xf2d0
0x514a: mov rdx,r12
0x514d: mov esi,0x4
0x5152: xor edi,edi
0x5154: mov r13,rax
0x5157: call 0xf2d0
0x515c: lea rsi,[rip+0x12585]
0x5163: mov rbp,rax
0x5166: mov edx,0x5
0x516b: xor edi,edi
0x516d: call 0x2ad0
0x5172: mov r8,r13
0x5175: mov rcx,rbp
0x5178: mov rdx,rax
0x517b: mov esi,ebx
0x517d: xor eax,eax
0x517f: xor edi,edi
0x5181: call 0x2f30
0x5186: xor ebx,ebx
0x5188: add rsp,0x8
0x518c: mov eax,ebx
0x518e: pop rbx
0x518f: pop rbp
0x5190: pop r12
0x5192: pop r13
0x5194: ret 
0x5195: nop 
0x5196: nop word ptr cs:[rax+rax]
0x51a0: push r14
0x51a2: push r13
0x51a4: mov r13,rdi
0x51a7: push r12
0x51a9: push rbp
0x51aa: mov rbp,rdx
0x51ad: push rbx
0x51ae: mov rbx,rsi
0x51b1: mov rdi,rbx
0x51b4: sub rsp,0x20
0x51b8: mov esi,dword ptr [rdx]
0x51ba: mov rax,qword ptr fs:[0x28]
0x51c3: mov qword ptr [rsp+0x18],rax
0x51c8: xor eax,eax
0x51ca: call 0x4e90
0x51cf: test al,al
0x51d1: jne 0x5268
0x51d7: mov edi,dword ptr [rbp]
0x51da: lea r12,[rsp+0xc]
0x51df: mov rsi,r12
0x51e2: call 0xb5f0
0x51e7: mov ebp,dword ptr [rbp]
0x51ea: mov rsi,rbx
0x51ed: mov edi,0x4
0x51f2: mov byte ptr [rsp+0x16],0x0
0x51f7: call 0xf3f0
0x51fc: and ebp,0xfff
0x5202: cmp byte ptr [r13+0x18],0x0
0x5207: mov r14,rax
0x520a: mov rbx,qword ptr [rip+0x21a3af]
0x5211: mov edx,0x5
0x5216: jne 0x5226
0x5218: test dword ptr [r13+0x14],0xffff00
0x5220: je 0x52d0
0x5226: lea rsi,[rip+0x124e3]
0x522d: xor edi,edi
0x522f: call 0x2ad0
0x5234: mov rdx,rax
0x5237: sub rsp,0x8
0x523b: add r12,0x1
0x523f: mov rdi,qword ptr [rip+0x217eda]
0x5246: push r12
0x5248: mov r9,rbp
0x524b: mov r8,r14
0x524e: mov rcx,rbx
0x5251: mov esi,0x1
0x5256: xor eax,eax
0x5258: call 0x3050
0x525d: pop rax
0x525e: pop rdx
0x525f: jmp 0x52ae
0x5261: nop dword ptr [rax]
0x5268: mov rsi,rbx
0x526b: mov edi,0x4
0x5270: call 0xf3f0
0x5275: lea rsi,[rip+0x12aa0]
0x527c: mov rbx,qword ptr [rip+0x21a33d]
0x5283: mov edx,0x5
0x5288: xor edi,edi
0x528a: mov rbp,rax
0x528d: call 0x2ad0
0x5292: mov rdi,qword ptr [rip+0x217e87]
0x5299: mov rdx,rax
0x529c: mov r8,rbp
0x529f: mov rcx,rbx
0x52a2: mov esi,0x1
0x52a7: xor eax,eax
0x52a9: call 0x3050
0x52ae: call 0x126c0
0x52b3: mov rcx,qword ptr [rsp+0x18]
0x52b8: xor rcx,qword ptr fs:[0x28]
0x52c1: jne 0x52e6
0x52c3: add rsp,0x20
0x52c7: pop rbx
0x52c8: pop rbp
0x52c9: pop r12
0x52cb: pop r13
0x52cd: pop r14
0x52cf: ret 
0x52d0: lea rsi,[rip+0x12469]
0x52d7: xor edi,edi
0x52d9: call 0x2ad0
0x52de: mov rdx,rax
0x52e1: jmp 0x5237
0x52e6: call 0x2b30
0x52eb: nop dword ptr [rax+rax]
0x532c: nop dword ptr [rax]
0x5380: add rsp,0x8
0x5384: xor eax,eax
0x5386: pop rbx
0x5387: pop rbp
0x5388: pop r12
0x538a: pop r13
0x538c: ret 
0x538d: nop dword ptr [rax]
0x53ae: nop 
0x54c7: nop word ptr [rax+rax]
0x562c: nop dword ptr [rax]
0x5683: nop dword ptr [rax+rax]
0x56c4: nop dword ptr [rax]
0x56e5: nop dword ptr [rax]
0x56f6: nop word ptr cs:[rax+rax]
0x5719: nop dword ptr [rax]
0x5759: jmp 0x54b5
0x575e: nop 
0x57ae: jmp 0x54b5
0x57be: nop 
0x57d4: mov r13,rdi
0x57d7: call 0x2950
0x57dc: cmp byte ptr [rbp+0x23],0x0
0x57e0: mov r12,rax
0x57e3: jne 0x5860
0x57e5: mov rsi,r13
0x57e8: mov edi,0x4
0x57ed: mov dword ptr [r12],0x5f
0x57f5: call 0xf3f0
0x57fa: lea rsi,[rip+0x11f77]
0x5801: mov edx,0x5
0x5806: xor edi,edi
0x5808: mov rbx,rax
0x580b: call 0x2ad0
0x5810: mov esi,dword ptr [r12]
0x5814: mov rcx,rbx
0x5817: mov rdx,rax
0x581a: xor edi,edi
0x581c: xor eax,eax
0x581e: call 0x2f30
0x5823: movzx ebx,byte ptr [rbp+0x26]
0x5827: add rsp,0x8
0x582b: xor ebx,0x1
0x582e: mov eax,ebx
0x5830: pop rbx
0x5831: pop rbp
0x5832: pop r12
0x5834: pop r13
0x5836: ret 
0x5837: nop word ptr [rax+rax]
0x585a: nop word ptr [rax+rax]
0x5860: movzx ebx,byte ptr [rbp+0x26]
0x5864: test bl,bl
0x5866: jne 0x57e5
0x586c: mov dword ptr [rax],0x5f
0x5872: jmp 0x5827
0x5874: nop dword ptr [rax]
0x5878: call 0x2950
0x587d: mov dword ptr [rax],0x5f
0x5883: add rsp,0x8
0x5887: mov eax,ebx
0x5889: pop rbx
0x588a: pop rbp
0x588b: pop r12
0x588d: pop r13
0x588f: ret 
0x58ea: pop rbx
0x58eb: xor eax,eax
0x58ed: pop rbp
0x58ee: pop r12
0x58f0: ret 
0x58f1: nop dword ptr [rax]
0x5905: nop 
0x5906: nop word ptr cs:[rax+rax]
0x593b: nop dword ptr [rax+rax]
0x5940: lea r8,[rip+0x73f9]
0x5947: lea rcx,[rip+0x7382]
0x594e: xor esi,esi
0x5950: lea rdx,[rip+0x7369]
0x5957: push rbx
0x5958: mov rbx,rdi
0x595b: mov edi,0x3d
0x5960: call 0xc220
0x5965: mov qword ptr [rbx+0x48],rax
0x5969: pop rbx
0x596a: ret 
0x596b: nop dword ptr [rax+rax]
0x59a4: nop 
0x59a6: nop word ptr cs:[rax+rax]
0x59d4: nop 
0x59d6: nop word ptr cs:[rax+rax]
0x5a8d: nop dword ptr [rax]
0x5ac6: nop word ptr cs:[rax+rax]
0x5b6a: jmp 0x5bac
0x5b6c: nop dword ptr [rax]
0x5bc1: nop dword ptr [rax]
0x5bdf: nop 
0x5bec: nop dword ptr [rax]
0x5c1a: nop word ptr [rax+rax]
0x5ca2: test r15d,r15d
0x5ca5: js 0x5f40
0x5cab: mov rax,qword ptr [rbp-0x320]
0x5cb2: test r15d,r15d
0x5cb5: sete r14b
0x5cb9: test rax,rax
0x5cbc: je 0x5cc1
0x5cbe: mov byte ptr [rax],r14b
0x5d7c: cmp eax,0x3
0x5d7f: sete al
0x5d82: movzx eax,al
0x5d85: and eax,r13d
0x5d88: mov dword ptr [rbp-0x328],eax
0x5e35: cmp dword ptr [rbx+4],0x2
0x5e39: je 0x71b0
0x5e49: mov eax,dword ptr [rbp-0x314]
0x5e4f: and eax,0xf000
0x5e54: cmp eax,0x4000
0x5e59: je 0x7280
0x5e5f: xor ecx,ecx
0x5e61: cmp byte ptr [rbx+0x1f],0x0
0x5e65: je 0x5e85
0x5e67: cmp byte ptr [rbx+0x18],0x0
0x5e6b: mov ecx,0x1
0x5e70: je 0x5e85
0x5e72: xor ecx,ecx
0x5e74: mov rax,qword ptr [rbp-0x280]
0x5e7b: cmp qword ptr [rbp-0x1f0],rax
0x5e82: setne cl
0x5e85: lea r10,[rbp-0x280]
0x5e8c: mov rdi,qword ptr [rbp-0x308]
0x5e93: lea rsi,[rbp-0x1f0]
0x5e9a: mov byte ptr [rbp-0x358],r9b
0x5ea1: mov byte ptr [rbp-0x350],r8b
0x5ea8: mov rdx,r10
0x5eab: call 0x11120
0x5eb0: test eax,eax
0x5eb2: movzx r8d,byte ptr [rbp-0x350]
0x5eba: movzx r9d,byte ptr [rbp-0x358]
0x5ec2: js 0x6e10
0x5ec8: mov rax,qword ptr [rbp-0x320]
0x5ecf: test rax,rax
0x5ed2: je 0x5ed7
0x5ed4: mov byte ptr [rax],0x1
0x5ed7: mov rdx,qword ptr [rbp-0x280]
0x5ede: mov rsi,qword ptr [rbp-0x278]
0x5ee5: mov rdi,qword ptr [rbp-0x308]
0x5eec: call 0x9fc0
0x5ef1: test rax,rax
0x5ef4: je 0x6460
0x5efa: movzx ecx,byte ptr [rbx+0x2e]
0x5efe: mov r8d,dword ptr [rbp-0x328]
0x5f05: mov edx,0x1
0x5f0a: mov rsi,qword ptr [rbp-0x308]
0x5f11: mov rdi,rax
0x5f14: call 0x5090
0x5f19: test al,al
0x5f1b: jne 0x6460
0x5f21: cmp byte ptr [rbx+0x25],0x0
0x5f25: jne 0x6d30
0x5f2b: nop dword ptr [rax+rax]
0x5f38: nop dword ptr [rax+rax]
0x5f40: mov edx,0xffffff9c
0x5f45: mov rcx,rsi
0x5f48: mov r8d,0x1
0x5f4e: mov rsi,rdi
0x5f51: mov edi,edx
0x5f53: call 0xf6e0
0x5f58: test eax,eax
0x5f5a: jne 0x6ad0
0x5f60: mov rax,qword ptr [rbp-0x320]
0x5f67: mov r14d,r12d
0x5f6a: test rax,rax
0x5f6d: je 0x5f78
0x5f6f: mov byte ptr [rax],0x1
0x5f72: nop word ptr [rax+rax]
0x5f78: cmp byte ptr [rbx+0x31],0x0
0x5f7c: jne 0x5f90
0x5f7e: mov r12,qword ptr [rbp-0x308]
0x5f85: xor r15d,r15d
0x5f88: jmp 0x5cdb
0x5f8d: nop dword ptr [rax]
0x5f90: xor r15d,r15d
0x5f93: jmp 0x5d28
0x5f98: nop dword ptr [rax+rax]
0x6063: jmp 0x6466
0x6068: nop dword ptr [rax+rax]
0x608f: mov eax,dword ptr [rbp-0x314]
0x6095: and eax,0xf000
0x609a: cmp eax,0x4000
0x609f: je 0x6c70
0x6164: cmp byte ptr [rbx+0x16],0x0
0x6168: mov edx,0x1
0x616d: jne 0x6178
0x616f: xor edx,edx
0x6171: cmp dword ptr [rbx+8],0x3
0x6175: sete dl
0x6178: mov r8d,dword ptr [rbp-0x328]
0x617f: mov rsi,qword ptr [rbp-0x308]
0x6186: xor ecx,ecx
0x6188: mov rdi,qword ptr [rbp-0x310]
0x618f: call 0x5090
0x6194: test al,al
0x6196: je 0x6bb0
0x619c: xor r8d,r8d
0x62ea: cmp byte ptr [rbx+0x24],0x0
0x62ee: jne 0x5f30
0x62f4: nop dword ptr [rax]
0x6416: nop word ptr cs:[rax+rax]
0x642a: cmp byte ptr [rbx+0x2e],0x0
0x642e: jne 0x6fb0
0x6434: cmp byte ptr [rbx+0x21],0x0
0x6438: jne 0x6f90
0x643e: mov rax,qword ptr [rbp-0x320]
0x6445: test rax,rax
0x6448: je 0x644d
0x644a: mov byte ptr [rax],0x1
0x644d: test r13b,r13b
0x6450: je 0x6460
0x6452: cmp byte ptr [rbx+0x31],0x0
0x6456: je 0x6ec8
0x645c: nop dword ptr [rax]
0x648b: nop dword ptr [rax+rax]
0x64d2: nop word ptr [rax+rax]
0x64d8: cmp dword ptr [rbx+8],0x2
0x64dc: je 0x5d28
0x64e2: jmp 0x5cdb
0x64e7: nop word ptr [rax+rax]
0x64f0: call 0x2b00
0x64f5: test eax,eax
0x64f7: mov rsi,r12
0x64fa: setne al
0x64fd: test al,al
0x64ff: je 0x5d0c
0x6541: jmp 0x6466
0x6546: nop word ptr cs:[rax+rax]
0x6550: cmp qword ptr [rbp-0x270],0x1
0x6558: je 0x7588
0x655e: cmp byte ptr [rbx+0x22],0x0
0x6562: mov qword ptr [rbp-0x358],0x0
0x656d: je 0x6579
0x656f: cmp byte ptr [rbx+0x17],0x0
0x6573: je 0x6d38
0x6579: cmp r15d,0x11
0x657d: jne 0x65ab
0x657f: mov rsi,qword ptr [rbp-0x308]
0x6586: mov rdi,qword ptr [rbp-0x310]
0x658d: call 0x2fa0
0x6592: test eax,eax
0x6594: je 0x642a
0x659a: call 0x2950
0x659f: mov r15d,dword ptr [rax]
0x65a2: test r15d,r15d
0x65a5: je 0x642a
0x65ab: cmp r15d,0x16
0x65af: je 0x75d0
0x65b5: cmp r15d,0x12
0x65b9: jne 0x6d88
0x65bf: mov r12d,dword ptr [rbp-0x314]
0x65c6: mov rdi,qword ptr [rbp-0x308]
0x65cd: and r12d,0xf000
0x65d4: cmp r12d,0x4000
0x65db: je 0x7640
0x65e1: call 0x2960
0x65e6: test eax,eax
0x65e8: je 0x65fb
0x65ea: call 0x2950
0x65ef: cmp dword ptr [rax],0x2
0x65f2: mov r14,rax
0x65f5: jne 0x765e
0x65fb: cmp r12d,0x4000
0x6602: setne dl
0x6605: and dl,byte ptr [rbx+0x2e]
0x6608: mov r14d,edx
0x660b: jne 0x7f50
0x6611: mov dword ptr [rbp-0x320],0x1
0x661b: mov r14d,0x1
0x6621: jmp 0x60d0
0x6626: nop word ptr cs:[rax+rax]
0x6665: nop dword ptr [rax]
0x6699: nop dword ptr [rax]
0x66fa: nop word ptr [rax+rax]
0x670a: xor r8d,r8d
0x670d: xor r9d,r9d
0x6710: jmp 0x5e3f
0x6715: nop dword ptr [rax]
0x6718: mov ecx,dword ptr [rbp-0x320]
0x671e: mov edx,dword ptr [rbp-0x314]
0x6724: mov r8,rbx
0x6727: mov rsi,qword ptr [rbp-0x308]
0x672e: mov rdi,qword ptr [rbp-0x310]
0x6735: call 0x57c0
0x673a: test al,al
0x673c: je 0x5f30
0x6742: mov r15d,dword ptr [rbp-0x314]
0x6749: mov eax,r12d
0x674c: and eax,0x3f
0x674f: mov dword ptr [rbp-0x35c],eax
0x6755: and r15d,0xf000
0x675c: cmp r15d,0x4000
0x6763: jne 0x6148
0x6769: mov rax,qword ptr [rbp-0x330]
0x6770: mov rdx,qword ptr [rbp-0x278]
0x6777: mov rcx,qword ptr [rbp-0x280]
0x677e: test rax,rax
0x6781: jne 0x679c
0x6783: jmp 0x7080
0x6788: nop dword ptr [rax+rax]
0x6790: mov rax,qword ptr [rax]
0x6793: test rax,rax
0x6796: je 0x7080
0x679c: cmp qword ptr [rax+8],rdx
0x67a0: jne 0x6790
0x67a2: cmp qword ptr [rax+0x10],rcx
0x67a6: jne 0x6790
0x67a8: mov rsi,qword ptr [rbp-0x310]
0x67af: mov edi,0x4
0x67b4: call 0xf3f0
0x67b9: lea rsi,[rip+0x113c8]
0x67c0: mov r12,rax
0x67c3: mov edx,0x5
0x67c8: xor edi,edi
0x67ca: call 0x2ad0
0x67cf: mov rcx,r12
0x67d2: mov rdx,rax
0x67d5: xor esi,esi
0x67d7: xor edi,edi
0x67d9: xor eax,eax
0x67db: call 0x2f30
0x67e0: jmp 0x6bb0
0x67e5: nop dword ptr [rax]
0x6819: lea rsi,[rip+0x10fd8]
0x6820: xor edi,edi
0x6822: call 0x2ad0
0x6827: mov rdx,rax
0x6838: jmp 0x6466
0x683d: nop dword ptr [rax]
0x686d: mov rsi,qword ptr [rbp-0x308]
0x6874: lea rdx,[rbp-0x1d8]
0x687b: mov rdi,rbx
0x687e: mov byte ptr [rbp-0x358],r9b
0x6885: mov byte ptr [rbp-0x350],r8b
0x688c: call 0x51a0
0x6891: test al,al
0x6893: movzx r8d,byte ptr [rbp-0x350]
0x689b: movzx r9d,byte ptr [rbp-0x358]
0x68a3: je 0x6460
0x68a9: nop dword ptr [rax]
0x6a6e: nop 
0x6ac4: jmp 0x6466
0x6ac9: nop dword ptr [rax]
0x6ad0: call 0x2950
0x6ad5: mov r15d,dword ptr [rax]
0x6ad8: jmp 0x5cab
0x6add: nop dword ptr [rax]
0x6ae0: mov rax,qword ptr [rbp-0x310]
0x6ae7: cmp byte ptr [rax],0x2f
0x6aea: je 0x6b24
0x6aec: mov rdi,qword ptr [rbp-0x308]
0x6af3: call 0xb2c0
0x6af8: lea r8,[rip+0x11364]
0x6aff: mov rdi,rax
0x6b02: mov ecx,0x2
0x6b07: mov r12,rax
0x6b0a: mov rsi,r8
0x6b0d: repe cmpsb byte ptr [rsi],byte ptr ptr [rdi]
0x6b0f: seta al
0x6b12: sbb al,0x0
0x6b14: test al,al
0x6b16: jne 0x7df8
0x6b1c: mov rdi,r12
0x6b1f: call 0x30d0
0x6b24: movzx ecx,byte ptr [rbx+0x16]
0x6b28: mov rdx,qword ptr [rbp-0x308]
0x6b2f: mov r8d,0xffffffff
0x6b35: mov rdi,qword ptr [rbp-0x310]
0x6b3c: mov esi,0xffffff9c
0x6b41: call 0xa5e0
0x6b46: xor r8d,r8d
0x6b49: test eax,eax
0x6b4b: mov r12d,eax
0x6b4e: jle 0x619f
0x6b54: mov rdx,qword ptr [rbp-0x310]
0x6b5b: mov esi,0x4
0x6b60: mov edi,0x1
0x6b65: call 0xf2d0
0x6b6a: mov rdx,qword ptr [rbp-0x308]
0x6b71: mov esi,0x4
0x6b76: xor edi,edi
0x6b78: mov r13,rax
0x6b7b: call 0xf2d0
0x6b80: lea rsi,[rip+0x10f59]
0x6b87: mov r14,rax
0x6b8a: mov edx,0x5
0x6b8f: xor edi,edi
0x6b91: call 0x2ad0
0x6b96: mov r8,r13
0x6b99: mov rdx,rax
0x6b9c: mov rcx,r14
0x6b9f: mov esi,r12d
0x6ba2: xor edi,edi
0x6ba4: xor eax,eax
0x6ba6: call 0x2f30
0x6bab: nop dword ptr [rax+rax]
0x6c55: nop dword ptr [rax]
0x6c70: test r13b,r13b
0x6c73: mov rdx,qword ptr [rbp-0x280]
0x6c7a: mov rdi,qword ptr [rbp-0x278]
0x6c81: je 0x7530
0x6c87: mov rsi,rdi
0x6c8a: mov rdi,qword ptr [rbp-0x308]
0x6c91: call 0x9fc0
0x6c96: mov qword ptr [rbp-0x358],rax
0x6c9d: cmp qword ptr [rbp-0x358],0x0
0x6ca5: je 0x71a0
0x6cab: mov rsi,qword ptr [rbp-0x358]
0x6cb2: mov rdi,qword ptr [rbp-0x310]
0x6cb9: call 0xfbe0
0x6cbe: test al,al
0x6cc0: je 0x7c00
0x6cc6: mov rdx,qword ptr [rip+0x2188bb]
0x6ccd: mov esi,0x4
0x6cd2: mov edi,0x1
0x6cd7: call 0xf2d0
0x6cdc: mov rdx,qword ptr [rip+0x2188ad]
0x6ce3: mov esi,0x4
0x6ce8: xor edi,edi
0x6cea: mov r13,rax
0x6ced: call 0xf2d0
0x6cf2: lea rsi,[rip+0x10cdf]
0x6cf9: mov r12,rax
0x6cfc: mov edx,0x5
0x6d01: xor edi,edi
0x6d03: call 0x2ad0
0x6d08: mov r8,r13
0x6d0b: mov rdx,rax
0x6d0e: mov rcx,r12
0x6d11: xor eax,eax
0x6d13: xor esi,esi
0x6d15: xor edi,edi
0x6d17: call 0x2f30
0x6d1c: mov rax,qword ptr [rbp-0x340]
0x6d23: mov byte ptr [rax],0x1
0x6d26: cmp byte ptr [rbx+0x25],0x0
0x6d2a: je 0x6bc8
0x6d35: nop dword ptr [rax]
0x6d38: cmp qword ptr [rbp-0x270],0x1
0x6d40: ja 0x7128
0x6d46: test r13b,r13b
0x6d49: mov edx,dword ptr [rbx+4]
0x6d4c: je 0x6d57
0x6d4e: cmp edx,0x3
0x6d51: je 0x7128
0x6d57: cmp edx,0x4
0x6d5a: mov qword ptr [rbp-0x358],0x0
0x6d65: je 0x7128
0x6d6b: test al,al
0x6d6d: jne 0x6579
0x6d73: movzx eax,r14b
0x6d77: mov dword ptr [rbp-0x320],eax
0x6d7d: jmp 0x60d0
0x6d82: nop word ptr [rax+rax]
0x6d88: mov rdx,qword ptr [rbp-0x308]
0x6d8f: mov esi,0x4
0x6d94: mov edi,0x1
0x6d99: call 0xf2d0
0x6d9e: mov rdx,qword ptr [rbp-0x310]
0x6da5: mov esi,0x4
0x6daa: xor edi,edi
0x6dac: mov r12,rax
0x6daf: call 0xf2d0
0x6db4: lea rsi,[rip+0x11049]
0x6dbb: mov rbx,rax
0x6dbe: mov edx,0x5
0x6dc3: xor edi,edi
0x6dc5: call 0x2ad0
0x6dca: mov r8,r12
0x6dcd: mov rcx,rbx
0x6dd0: mov rdx,rax
0x6dd3: mov esi,r15d
0x6dd6: xor edi,edi
0x6dd8: xor eax,eax
0x6dda: call 0x2f30
0x6ddf: mov rsi,qword ptr [rbp-0x280]
0x6de6: mov rdi,qword ptr [rbp-0x278]
0x6ded: call 0x9ef0
0x6df2: jmp 0x5f30
0x6df7: nop word ptr [rax+rax]
0x6e00: xor r8d,r8d
0x6e03: jmp 0x64b2
0x6e08: nop dword ptr [rax+rax]
0x6e10: cmp byte ptr [rbx+0x18],0x0
0x6e14: je 0x685c
0x6e1a: nop word ptr [rax+rax]
0x6e20: mov eax,dword ptr [rbx+8]
0x6e23: cmp eax,0x2
0x6e26: je 0x6ea4
0x6e28: cmp eax,0x3
0x6e2b: je 0x6e78
0x6e2d: cmp eax,0x4
0x6e30: jne 0x68b0
0x6e36: cmp byte ptr [rbx+0x2f],0x0
0x6e3a: je 0x68b0
0x6e40: mov esi,dword ptr [rbp-0x1d8]
0x6e46: mov rdi,qword ptr [rbp-0x308]
0x6e4d: mov byte ptr [rbp-0x358],r9b
0x6e54: mov byte ptr [rbp-0x350],r8b
0x6e5b: call 0x4e90
0x6e60: test al,al
0x6e62: movzx r8d,byte ptr [rbp-0x350]
0x6e6a: movzx r9d,byte ptr [rbp-0x358]
0x6e72: jne 0x68b0
0x6e78: mov rsi,qword ptr [rbp-0x308]
0x6e7f: lea rdx,[rbp-0x1d8]
0x6e86: mov rdi,rbx
0x6e89: mov byte ptr [rbp-0x358],r9b
0x6e90: mov byte ptr [rbp-0x350],r8b
0x6e97: call 0x51a0
0x6e9c: test al,al
0x6e9e: jne 0x82b0
0x6ea4: cmp qword ptr [rbp-0x320],0x0
0x6eac: je 0x6460
0x6eb2: mov rax,qword ptr [rbp-0x320]
0x6eb9: mov byte ptr [rax],0x1
0x6ebc: jmp 0x6460
0x6ec1: nop dword ptr [rax]
0x6ec8: mov rdi,qword ptr [rbx+0x40]
0x6ecc: mov rsi,qword ptr [rbp-0x308]
0x6ed3: lea rdx,[rbp-0x280]
0x6eda: mov r12d,r13d
0x6edd: call 0xb500
0x6ee2: jmp 0x6466
0x6ee7: nop word ptr [rax+rax]
0x6f03: mov r15d,dword ptr [rbx]
0x6f06: test r15d,r15d
0x6f09: jne 0x7ba7
0x6f4a: jmp 0x6466
0x6f4f: nop 
0x6f50: mov ecx,dword ptr [rbp-0x320]
0x6f56: mov edx,dword ptr [rbp-0x314]
0x6f5c: mov r8,rbx
0x6f5f: mov rsi,qword ptr [rbp-0x308]
0x6f66: mov rdi,qword ptr [rbp-0x310]
0x6f6d: call 0x57c0
0x6f72: test al,al
0x6f74: je 0x5f30
0x6f7a: mov eax,r12d
0x6f7d: and eax,0x12
0x6f80: mov dword ptr [rbp-0x35c],eax
0x6f86: jmp 0x6769
0x6f8b: nop dword ptr [rax+rax]
0x6f90: mov rdi,qword ptr [rbp-0x308]
0x6f97: mov rcx,rbx
0x6f9a: mov edx,0x1
0x6f9f: xor esi,esi
0x6fa1: call 0x5890
0x6fa6: jmp 0x643e
0x6fab: nop dword ptr [rax+rax]
0x6fb0: lea rsi,[rip+0x10e44]
0x6fb7: mov edx,0x5
0x6fbc: xor edi,edi
0x6fbe: call 0x2ad0
0x6fc3: mov edi,0x1
0x6fc8: mov rsi,rax
0x6fcb: xor eax,eax
0x6fcd: call 0x2ee0
0x6fd2: mov rdx,qword ptr [rbp-0x350]
0x6fd9: mov rsi,qword ptr [rbp-0x308]
0x6fe0: mov rdi,qword ptr [rbp-0x310]
0x6fe7: call 0x4fd0
0x6fec: jmp 0x6434
0x6ff1: nop dword ptr [rax]
0x7076: nop word ptr cs:[rax+rax]
0x7080: sub rsp,0x30
0x7084: mov rsi,qword ptr [rbp-0x330]
0x708b: lea rax,[rsp+0xf]
0x7090: and rax,0xfffffffffffffff0
0x7094: test r14b,r14b
0x7097: mov qword ptr [rbp-0x328],rax
0x709e: mov qword ptr [rax],rsi
0x70a1: mov qword ptr [rax+8],rdx
0x70a5: mov qword ptr [rax+0x10],rcx
0x70a9: jne 0x70c1
0x70ab: mov eax,dword ptr [rbp-0x1d8]
0x70b1: and eax,0xf000
0x70b6: cmp eax,0x4000
0x70bb: je 0x8118
0x70c1: mov esi,dword ptr [rbp-0x35c]
0x70c7: mov r15,qword ptr [rbp-0x308]
0x70ce: not esi
0x70d0: mov rdi,r15
0x70d3: and esi,r12d
0x70d6: call 0x29c0
0x70db: test eax,eax
0x70dd: je 0x78a0
0x70e3: mov rsi,r15
0x70e6: mov edi,0x4
0x70eb: call 0xf3f0
0x70f0: lea rsi,[rip+0xf2cd]
0x70f7: mov r13,rax
0x70fa: mov edx,0x5
0x711f: jmp 0x6bb0
0x7124: nop dword ptr [rax]
0x7128: mov rdx,qword ptr [rbp-0x280]
0x712f: mov rsi,qword ptr [rbp-0x278]
0x7136: mov rdi,qword ptr [rbp-0x308]
0x713d: call 0x9fc0
0x7142: mov qword ptr [rbp-0x358],rax
0x7149: cmp qword ptr [rbp-0x358],0x0
0x7151: je 0x71a0
0x7153: mov eax,dword ptr [rbp-0x314]
0x7159: and eax,0xf000
0x715e: cmp eax,0x4000
0x7163: je 0x6cab
0x7169: movzx ecx,byte ptr [rbx+0x2e]
0x716d: mov r8d,dword ptr [rbp-0x328]
0x7174: mov edx,0x1
0x7179: mov rsi,qword ptr [rbp-0x308]
0x7180: mov rdi,qword ptr [rbp-0x358]
0x7187: call 0x5090
0x718c: test al,al
0x718e: je 0x6d26
0x7194: jmp 0x6460
0x7199: nop dword ptr [rax]
0x71a0: movzx eax,byte ptr [rbx+0x18]
0x71a4: jmp 0x6d6b
0x71a9: nop dword ptr [rax]
0x71b0: xor ecx,ecx
0x71b2: xor r15d,r15d
0x71b5: mov eax,dword ptr [rbp-0x268]
0x71bb: lea rdx,[rbp-0x280]
0x71c2: and eax,0xf000
0x71c7: cmp eax,0xa000
0x71cc: je 0x7e73
0x71e4: cmp byte ptr [rbx+0x18],0x0
0x71e8: jne 0x706e
0x71ee: cmp dword ptr [rbx+4],0x2
0x71f2: je 0x706e
0x71f8: mov eax,dword ptr [rdx+0x18]
0x71fb: and eax,0xf000
0x7200: cmp eax,0xa000
0x7205: jne 0x706e
0x720b: mov eax,dword ptr [r12+0x18]
0x7210: and eax,0xf000
0x7215: cmp eax,0xa000
0x721a: je 0x706e
0x7276: jmp 0x5f30
0x727b: nop dword ptr [rax+rax]
0x7280: cmp byte ptr [rbx+0x18],0x0
0x7284: je 0x68b0
0x728a: jmp 0x6e20
0x728f: nop 
0x72f9: mov eax,dword ptr [rbp-0x268]
0x72ff: and eax,0xf000
0x7304: cmp eax,0xa000
0x7309: jne 0x76e2
0x730f: cmp qword ptr [r12+0x10],0x1
0x7315: jbe 0x76e2
0x731b: mov rdi,qword ptr [rbp-0x310]
0x7322: mov byte ptr [rbp-0x35c],r9b
0x7329: mov byte ptr [rbp-0x358],r8b
0x7330: mov qword ptr [rbp-0x350],rdx
0x7337: call 0x2c20
0x733c: test rax,rax
0x733f: mov r15,rax
0x7342: mov rdx,qword ptr [rbp-0x350]
0x7349: movzx r8d,byte ptr [rbp-0x358]
0x7351: movzx r9d,byte ptr [rbp-0x35c]
0x7359: je 0x76e2
0x735f: mov rsi,qword ptr [rbp-0x308]
0x7366: mov rdi,rax
0x7369: mov byte ptr [rbp-0x358],r9b
0x7370: mov byte ptr [rbp-0x350],r8b
0x7377: call 0xfbe0
0x737c: mov rdi,r15
0x737f: xor eax,0x1
0x7382: mov r12d,eax
0x7385: call 0x30d0
0x738a: movzx r8d,byte ptr [rbp-0x350]
0x7392: movzx r9d,byte ptr [rbp-0x358]
0x739a: xor eax,eax
0x7478: nop dword ptr [rax+rax]
0x74a5: nop dword ptr [rax]
0x74ca: cmp r15d,0x1000
0x74d1: je 0x8592
0x74d7: mov eax,r15d
0x74da: and ah,0xbf
0x74dd: cmp eax,0x2000
0x74e2: je 0x81cc
0x74e8: cmp r15d,0xc000
0x74ef: je 0x81cc
0x74f5: cmp r15d,0xa000
0x74fc: je 0x8880
0x7502: mov rsi,qword ptr [rbp-0x310]
0x7509: mov edi,0x4
0x750e: call 0xf3f0
0x7513: mov edx,0x5
0x7518: mov r12,rax
0x751b: lea rsi,[rip+0x10a66]
0x7522: jmp 0x67c8
0x7527: nop word ptr [rax+rax]
0x7530: mov rsi,rdx
0x7533: call 0x9f60
0x7538: mov qword ptr [rbp-0x358],rax
0x753f: jmp 0x6c9d
0x7544: nop dword ptr [rax]
0x7580: jmp 0x6466
0x7585: nop dword ptr [rax]
0x7588: mov rsi,qword ptr [rbp-0x280]
0x758f: mov rdi,qword ptr [rbp-0x278]
0x7596: call 0x9f60
0x759b: mov qword ptr [rbp-0x358],rax
0x75a2: jmp 0x7149
0x75a7: nop word ptr [rax+rax]
0x75c6: nop word ptr cs:[rax+rax]
0x75d0: mov rdx,qword ptr [rip+0x217fb1]
0x75d7: mov esi,0x4
0x75dc: mov edi,0x1
0x75e1: call 0xf2d0
0x75e6: mov rdx,qword ptr [rip+0x217fa3]
0x75ed: mov esi,0x4
0x75f2: xor edi,edi
0x75f4: mov r12,rax
0x75f7: call 0xf2d0
0x75fc: lea rsi,[rip+0x1046d]
0x7603: mov rbx,rax
0x7606: mov edx,0x5
0x760b: xor edi,edi
0x760d: call 0x2ad0
0x7612: mov r8,r12
0x7615: mov rdx,rax
0x7618: mov rcx,rbx
0x761b: xor eax,eax
0x761d: xor esi,esi
0x761f: xor edi,edi
0x7621: call 0x2f30
0x7626: mov rax,qword ptr [rbp-0x340]
0x762d: mov r12d,0x1
0x7633: mov byte ptr [rax],0x1
0x7636: jmp 0x6466
0x763b: nop dword ptr [rax+rax]
0x7640: call 0x2ac0
0x7645: test eax,eax
0x7647: je 0x6611
0x764d: call 0x2950
0x7652: cmp dword ptr [rax],0x2
0x7655: mov r14,rax
0x7658: je 0x6611
0x765e: mov rdx,qword ptr [rbp-0x308]
0x7665: mov esi,0x4
0x766a: mov edi,0x1
0x766f: call 0xf2d0
0x7674: mov rdx,qword ptr [rbp-0x310]
0x767b: mov esi,0x4
0x7680: xor edi,edi
0x7682: mov r12,rax
0x7685: call 0xf2d0
0x768a: lea rsi,[rip+0x1040f]
0x7691: mov rbx,rax
0x7694: mov edx,0x5
0x7699: xor edi,edi
0x769b: call 0x2ad0
0x76a0: mov r8,r12
0x76a3: mov rcx,rbx
0x76a6: mov rdx,rax
0x76a9: mov esi,dword ptr [r14]
0x76ac: jmp 0x6dd6
0x76b1: nop dword ptr [rax]
0x76cf: mov eax,dword ptr [rdx+0x18]
0x76d2: and eax,0xf000
0x76d7: cmp eax,0xa000
0x76dc: jne 0x86c5
0x76e8: mov eax,dword ptr [r12+0x18]
0x76ed: and eax,0xf000
0x76f2: cmp eax,0xa000
0x76f7: je 0x5e3f
0x7707: mov eax,dword ptr [rdx+0x18]
0x770a: and eax,0xf000
0x770f: cmp eax,0xa000
0x7714: je 0x918c
0x771a: movdqa xmm0,xmmword ptr [rdx]
0x771e: movaps xmmword ptr [rbp-0xd0],xmm0
0x7725: movdqa xmm0,xmmword ptr [rdx+0x10]
0x772a: movaps xmmword ptr [rbp-0xc0],xmm0
0x7731: movdqa xmm0,xmmword ptr [rdx+0x20]
0x7736: movaps xmmword ptr [rbp-0xb0],xmm0
0x773d: movdqa xmm0,xmmword ptr [rdx+0x30]
0x7742: movaps xmmword ptr [rbp-0xa0],xmm0
0x7749: movdqa xmm0,xmmword ptr [rdx+0x40]
0x774e: movaps xmmword ptr [rbp-0x90],xmm0
0x7755: movdqa xmm0,xmmword ptr [rdx+0x50]
0x775a: movaps xmmword ptr [rbp-0x80],xmm0
0x775e: movdqa xmm0,xmmword ptr [rdx+0x60]
0x7763: movaps xmmword ptr [rbp-0x70],xmm0
0x7767: movdqa xmm0,xmmword ptr [rdx+0x70]
0x776c: movaps xmmword ptr [rbp-0x60],xmm0
0x7770: movdqa xmm0,xmmword ptr [rdx+0x80]
0x7778: movaps xmmword ptr [rbp-0x50],xmm0
0x777c: mov eax,dword ptr [r12+0x18]
0x7781: and eax,0xf000
0x7786: cmp eax,0xa000
0x778b: je 0x9149
0x7791: movdqa xmm0,xmmword ptr [r12]
0x7797: movaps xmmword ptr [rbp-0x160],xmm0
0x779e: movdqa xmm0,xmmword ptr [r12+0x10]
0x77a5: movaps xmmword ptr [rbp-0x150],xmm0
0x77ac: movdqa xmm0,xmmword ptr [r12+0x20]
0x77b3: movaps xmmword ptr [rbp-0x140],xmm0
0x77ba: movdqa xmm0,xmmword ptr [r12+0x30]
0x77c1: movaps xmmword ptr [rbp-0x130],xmm0
0x77c8: movdqa xmm0,xmmword ptr [r12+0x40]
0x77cf: movaps xmmword ptr [rbp-0x120],xmm0
0x77d6: movdqa xmm0,xmmword ptr [r12+0x50]
0x77dd: movaps xmmword ptr [rbp-0x110],xmm0
0x77e4: movdqa xmm0,xmmword ptr [r12+0x60]
0x77eb: movaps xmmword ptr [rbp-0x100],xmm0
0x77f2: movdqa xmm0,xmmword ptr [r12+0x70]
0x77f9: movaps xmmword ptr [rbp-0xf0],xmm0
0x7800: movdqa xmm0,xmmword ptr [r12+0x80]
0x780a: movaps xmmword ptr [rbp-0xe0],xmm0
0x7811: mov rax,qword ptr [rbp-0x158]
0x7818: cmp qword ptr [rbp-0xc8],rax
0x781f: jne 0x5e3f
0x7825: mov rax,qword ptr [rbp-0x160]
0x782c: cmp qword ptr [rbp-0xd0],rax
0x7833: jne 0x5e3f
0x7839: cmp byte ptr [rbx+0x17],0x0
0x783d: je 0x7220
0x7843: mov eax,dword ptr [r12+0x18]
0x7848: and eax,0xf000
0x784d: cmp eax,0xa000
0x7852: setne r14b
0x7856: jmp 0x5e3f
0x785b: nop dword ptr [rax+rax]
0x7899: nop dword ptr [rax]
0x78a0: mov rsi,qword ptr [rbp-0x308]
0x78a7: lea rdx,[rbp-0x1f0]
0x78ae: mov edi,0x1
0x78b3: call 0x2b00
0x78b8: test eax,eax
0x78ba: jne 0x82c5
0x78c0: mov r12d,dword ptr [rbp-0x1d8]
0x78c7: mov byte ptr [rbp-0x330],0x0
0x78ce: mov eax,r12d
0x78d1: and eax,0x1c0
0x78d6: cmp eax,0x1c0
0x78db: je 0x7908
0x78dd: mov rdi,qword ptr [rbp-0x308]
0x78e4: mov esi,r12d
0x78e7: or esi,0x1c0
0x78ed: call 0x2f10
0x78f2: test eax,eax
0x78f4: mov dword ptr [rbp-0x38c],r12d
0x78fb: mov byte ptr [rbp-0x330],0x1
0x7902: jne 0x8923
0x7908: mov rax,qword ptr [rbp-0x338]
0x790f: cmp byte ptr [rax],0x0
0x7912: je 0x870c
0x7918: cmp byte ptr [rbx+0x2e],0x0
0x791c: je 0x7968
0x791e: cmp byte ptr [rbx+0x18],0x0
0x7922: je 0x87cd
0x7928: mov rsi,qword ptr [rbp-0x308]
0x792f: mov edi,0x4
0x7934: call 0xf3f0
0x7939: lea rsi,[rip+0x104fc]
0x7940: mov r12,rax
0x7943: mov edx,0x5
0x7948: xor edi,edi
0x794a: call 0x2ad0
0x794f: mov rdx,r12
0x7952: mov rsi,rax
0x7955: mov edi,0x1
0x795a: xor eax,eax
0x795c: call 0x2ee0
0x7961: nop dword ptr [rax]
0x7968: mov rax,qword ptr [rbp-0x348]
0x796f: test rax,rax
0x7972: setne r12b
0x7976: and r12b,byte ptr [rbx+0x1c]
0x797a: jne 0x815b
0x7980: movdqu xmm0,xmmword ptr [rbx]
0x7984: mov esi,0x2
0x7989: mov rdi,qword ptr [rbp-0x310]
0x7990: movaps xmmword ptr [rbp-0x2f0],xmm0
0x7997: movdqu xmm0,xmmword ptr [rbx+0x10]
0x799c: movaps xmmword ptr [rbp-0x2e0],xmm0
0x79a3: movdqu xmm0,xmmword ptr [rbx+0x20]
0x79a8: movaps xmmword ptr [rbp-0x2d0],xmm0
0x79af: movdqu xmm0,xmmword ptr [rbx+0x30]
0x79b4: movaps xmmword ptr [rbp-0x2c0],xmm0
0x79bb: movdqu xmm0,xmmword ptr [rbx+0x40]
0x79c0: movaps xmmword ptr [rbp-0x2b0],xmm0
0x79c7: call 0xffb0
0x79cc: test rax,rax
0x79cf: mov qword ptr [rbp-0x368],rax
0x79d6: je 0x8838
0x79dc: cmp dword ptr [rbx+4],0x3
0x79e0: jne 0x79ec
0x79e2: mov dword ptr [rbp-0x2ec],0x2
0x79ec: mov rax,qword ptr [rbp-0x368]
0x79f3: cmp byte ptr [rax],0x0
0x79f6: je 0x8f35
0x79fc: lea rax,[rbp-0x2f0]
0x7a03: lea r10,[rbp-0x280]
0x7a0a: mov dword ptr [rbp-0x380],r13d
0x7a11: mov r15,qword ptr [rbp-0x368]
0x7a18: mov r13,qword ptr [rbp-0x340]
0x7a1f: mov r12d,0x1
0x7a25: mov qword ptr [rbp-0x348],rax
0x7a2c: lea rax,[rbp-0x2f9]
0x7a33: mov byte ptr [rbp-0x315],0x0
0x7a3a: mov byte ptr [rbp-0x370],r14b
0x7a41: mov qword ptr [rbp-0x378],rbx
0x7a48: mov qword ptr [rbp-0x350],rax
0x7a4f: lea rax,[rbp-0x2f8]
0x7a56: mov qword ptr [rbp-0x340],r10
0x7a5d: mov qword ptr [rbp-0x358],rax
0x7a64: jmp 0x7a94
0x7a66: nop word ptr cs:[rax+rax]
0x7a70: movzx eax,byte ptr [rbp-0x2f8]
0x7a77: mov rdi,r15
0x7a7a: or byte ptr [rbp-0x315],al
0x7a80: call 0x2af0
0x7a85: lea r15,[r15+rax+1]
0x7a8a: cmp byte ptr [r15],0x0
0x7a8e: je 0x7b31
0x7a94: mov rdi,qword ptr [rbp-0x310]
0x7a9b: xor edx,edx
0x7a9d: mov rsi,r15
0x7aa0: call 0xb790
0x7aa5: mov rdi,qword ptr [rbp-0x308]
0x7aac: xor edx,edx
0x7aae: mov rsi,r15
0x7ab1: mov rbx,rax
0x7ab4: call 0xb790
0x7ab9: mov r14,rax
0x7abc: mov rax,qword ptr [rbp-0x338]
0x7ac3: mov r9,qword ptr [rbp-0x348]
0x7aca: mov r8,qword ptr [rbp-0x328]
0x7ad1: mov rcx,qword ptr [rbp-0x340]
0x7ad8: mov rsi,r14
0x7adb: mov edx,dword ptr [rbp-0x320]
0x7ae1: mov rdi,rbx
0x7ae4: movzx eax,byte ptr [rax]
0x7ae7: push 0x0
0x7ae9: push qword ptr [rbp-0x350]
0x7aef: push qword ptr [rbp-0x358]
0x7af5: push 0x0
0x7af7: mov byte ptr [rbp-0x2f8],al
0x7afd: call 0x5c20
0x7b02: and r12d,eax
0x7b05: movzx eax,byte ptr [rbp-0x2f9]
0x7b0c: add rsp,0x20
0x7b10: or byte ptr [r13],al
0x7b14: mov rdi,r14
0x7b17: call 0x30d0
0x7b1c: mov rdi,rbx
0x7b1f: call 0x30d0
0x7b24: cmp byte ptr [rbp-0x2f9],0x0
0x7b2b: je 0x7a70
0x7b31: movzx r14d,byte ptr [rbp-0x370]
0x7b39: mov rbx,qword ptr [rbp-0x378]
0x7b40: mov r13d,dword ptr [rbp-0x380]
0x7b47: mov rdi,qword ptr [rbp-0x368]
0x7b4e: call 0x30d0
0x7b53: movzx ecx,byte ptr [rbp-0x315]
0x7b5a: mov rax,qword ptr [rbp-0x338]
0x7b61: mov byte ptr [rax],cl
0x7b63: test r13b,r13b
0x7b66: jne 0x8142
0x7b6c: movzx eax,byte ptr [rbp-0x330]
0x7b73: mov byte ptr [rbp-0x320],0x0
0x7b7a: mov byte ptr [rbp-0x315],al
0x7b80: jmp 0x623a
0x7b85: nop dword ptr [rax]
0x7b92: mov r15d,dword ptr [rbx]
0x7b95: test r15d,r15d
0x7b98: je 0x7f9b
0x7b9e: test r13b,r13b
0x7ba1: jne 0x68fa
0x7ba7: mov edx,dword ptr [rbp-0x268]
0x7bad: and edx,0xf000
0x7bb3: cmp edx,0x4000
0x7bb9: je 0x8176
0x7bbf: mov rdi,qword ptr [rbp-0x310]
0x7bc6: mov byte ptr [rbp-0x358],r9b
0x7bcd: mov byte ptr [rbp-0x350],r8b
0x7bd4: call 0xb3a0
0x7bd9: cmp byte ptr [rax],0x2e
0x7bdc: mov r14,rax
0x7bdf: movzx r8d,byte ptr [rbp-0x350]
0x7be7: movzx r9d,byte ptr [rbp-0x358]
0x7bef: jne 0x697d
0x7bf5: mov eax,0x1
0x7bfa: jmp 0x6942
0x7bff: nop 
0x7c00: mov rsi,qword ptr [rbp-0x358]
0x7c07: mov rdi,qword ptr [rbp-0x308]
0x7c0e: call 0xfbe0
0x7c13: test al,al
0x7c15: jne 0x82ea
0x7c1b: mov eax,dword ptr [rbx+4]
0x7c1e: cmp eax,0x4
0x7c21: je 0x71a0
0x7c27: cmp eax,0x3
0x7c2a: jne 0x7c35
0x7c2c: test r13b,r13b
0x7c2f: jne 0x71a0
0x7c35: mov rdx,qword ptr [rbp-0x358]
0x7c3c: mov esi,0x4
0x7c41: mov edi,0x1
0x7c46: call 0xf2d0
0x7c4b: mov rdx,qword ptr [rbp-0x308]
0x7c52: xor edi,edi
0x7c54: mov esi,0x4
0x7c59: mov r13,rax
0x7c5c: call 0xf2d0
0x7c61: lea rsi,[rip+0xfdd8]
0x7c68: mov r12,rax
0x7c6b: xor edi,edi
0x7c6d: mov edx,0x5
0x7c72: call 0x2ad0
0x7c77: mov r8,r13
0x7c7a: mov rdx,rax
0x7c7d: mov rcx,r12
0x7c80: xor esi,esi
0x7c82: xor edi,edi
0x7c84: xor eax,eax
0x7c86: call 0x2f30
0x7c8b: jmp 0x6d26
0x7c90: cmp byte ptr [rbx+0x17],0x0
0x7c94: je 0x6d38
0x7c9a: mov qword ptr [rbp-0x358],0x0
0x7ca5: jmp 0x6d73
0x7caa: nop word ptr [rax+rax]
0x7d32: mov rsi,qword ptr [rbp-0x310]
0x7d39: mov edi,0x4
0x7d3e: call 0xf3f0
0x7d43: lea rsi,[rip+0xfdbe]
0x7d4a: mov r12,rax
0x7d4d: mov edx,0x5
0x7d52: xor edi,edi
0x7d54: call 0x2ad0
0x7d59: mov rcx,r12
0x7d5c: mov rdx,rax
0x7d5f: xor esi,esi
0x7d6a: xor r8d,r8d
0x7d6d: mov qword ptr [rbp-0x330],0x0
0x7dca: nop word ptr [rax+rax]
0x7dd0: mov eax,dword ptr [rbp-0x268]
0x7dd6: and eax,0xf000
0x7ddb: cmp eax,0x4000
0x7de0: je 0x8170
0x7de6: test r15d,r15d
0x7de9: je 0x7447
0x7def: jmp 0x7bbf
0x7df4: nop dword ptr [rax]
0x7df8: lea rdx,[rbp-0x160]
0x7dff: mov rsi,r8
0x7e02: mov edi,0x1
0x7e07: call 0x2dd0
0x7e0c: test eax,eax
0x7e0e: jne 0x6b1c
0x7e14: lea rdx,[rbp-0xd0]
0x7e1b: mov rsi,r12
0x7e1e: mov edi,0x1
0x7e23: call 0x2dd0
0x7e28: test eax,eax
0x7e2a: jne 0x6b1c
0x7e30: mov rax,qword ptr [rbp-0xc8]
0x7e37: cmp qword ptr [rbp-0x158],rax
0x7e3e: je 0x8f47
0x7e44: mov rdi,r12
0x7e47: call 0x30d0
0x7e4c: mov rdx,qword ptr [rbp-0x308]
0x7e53: mov esi,0x3
0x7e58: xor edi,edi
0x7e5a: call 0xf4f0
0x7e5f: mov edx,0x5
0x7e64: mov r12,rax
0x7e67: lea rsi,[rip+0xfd42]
0x7e6e: jmp 0x67c8
0x7e73: mov eax,dword ptr [rbp-0x1d8]
0x7e79: lea rdx,[rbp-0x280]
0x7e80: and eax,0xf000
0x7e85: cmp eax,0xa000
0x7e8a: jne 0x71d2
0x7e90: mov rsi,qword ptr [rbp-0x308]
0x7e97: mov rdi,qword ptr [rbp-0x310]
0x7e9e: mov byte ptr [rbp-0x358],r9b
0x7ea5: mov byte ptr [rbp-0x350],r8b
0x7eac: call 0xfbe0
0x7eb1: test al,al
0x7eb3: jne 0x7220
0x7eb9: mov edi,dword ptr [rbx]
0x7ebb: movzx r8d,byte ptr [rbp-0x350]
0x7ec3: movzx r9d,byte ptr [rbp-0x358]
0x7ecb: test edi,edi
0x7ecd: jne 0x706e
0x7ed3: test r15d,r15d
0x7ed6: je 0x706e
0x7edc: movzx r12d,byte ptr [rbx+0x18]
0x7ee1: mov eax,0x1
0x7ee6: xor r12d,0x1
0x7eea: jmp 0x739c
0x7eef: nop 
0x7f4c: nop dword ptr [rax]
0x7f50: lea rsi,[rip+0xfec2]
0x7f57: mov edx,0x5
0x7f5c: xor edi,edi
0x7f5e: call 0x2ad0
0x7f63: mov edi,0x1
0x7f68: mov rsi,rax
0x7f6b: xor eax,eax
0x7f6d: call 0x2ee0
0x7f72: mov rdx,qword ptr [rbp-0x350]
0x7f79: mov rsi,qword ptr [rbp-0x308]
0x7f80: mov rdi,qword ptr [rbp-0x310]
0x7f87: call 0x4fd0
0x7f8c: mov dword ptr [rbp-0x320],0x1
0x7f96: jmp 0x60d0
0x7fe1: cmp byte ptr [rbx+0x22],0x0
0x7fe5: je 0x83c6
0x7feb: cmp qword ptr [rbp-0x1e0],0x1
0x7ff3: jbe 0x83c6
0x806d: jmp 0x6466
0x8111: nop dword ptr [rax]
0x8118: movabs rax,0xff000000ff00
0x8122: test qword ptr [rbx+0x20],rax
0x8126: jne 0x86e0
0x812c: mov byte ptr [rbp-0x330],0x0
0x8133: mov dword ptr [rbp-0x35c],0x0
0x813d: jmp 0x7968
0x8142: mov byte ptr [rbp-0x315],r12b
0x8149: xor r15d,r15d
0x814c: xor r8d,r8d
0x814f: mov byte ptr [rbp-0x320],0x0
0x8156: jmp 0x61d4
0x815b: mov rcx,qword ptr [rbp-0x280]
0x8162: cmp qword ptr [rax],rcx
0x8165: jne 0x7b63
0x816b: jmp 0x7980
0x8170: mov eax,dword ptr [rbp-0x1d8]
0x8176: and eax,0xf000
0x817b: cmp eax,0x4000
0x8180: je 0x7de6
0x8186: test r15d,r15d
0x8189: jne 0x7bbf
0x818f: mov rdx,qword ptr [rbp-0x308]
0x8196: mov esi,0x3
0x819b: xor edi,edi
0x819d: call 0xf4f0
0x81a2: mov rdx,qword ptr [rbp-0x310]
0x81a9: mov esi,0x3
0x81ae: xor edi,edi
0x81b0: mov r12,rax
0x81b3: call 0xf4f0
0x81b8: mov edx,0x5
0x81bd: mov rbx,rax
0x81c0: lea rsi,[rip+0xf731]
0x81c7: jmp 0x725b
0x81cc: mov edx,dword ptr [rbp-0x35c]
0x81d2: mov rax,qword ptr [rbp-0x258]
0x81d9: lea rcx,[rbp-0x2f0]
0x81e0: mov rsi,qword ptr [rbp-0x308]
0x81e7: xor edi,edi
0x81e9: mov byte ptr [rbp-0x328],r8b
0x81f0: not edx
0x81f2: and edx,dword ptr [rbp-0x314]
0x81f8: mov qword ptr [rbp-0x2f0],rax
0x81ff: call 0x2da0
0x8204: test eax,eax
0x8206: mov byte ptr [rbp-0x320],0x0
0x820d: movzx r8d,byte ptr [rbp-0x328]
0x8215: je 0x619f
0x821b: mov rsi,qword ptr [rbp-0x308]
0x8222: mov edi,0x4
0x8227: call 0xf3f0
0x822c: mov edx,0x5
0x8231: mov r13,rax
0x8234: lea rsi,[rip+0xfd12]
0x823b: jmp 0x70ff
0x82b0: movzx r8d,byte ptr [rbp-0x350]
0x82b8: movzx r9d,byte ptr [rbp-0x358]
0x82c0: jmp 0x68b0
0x82c5: mov rsi,qword ptr [rbp-0x308]
0x82cc: mov edi,0x4
0x82d1: call 0xf3f0
0x82d6: mov edx,0x5
0x82db: mov r13,rax
0x82de: lea rsi,[rip+0xe110]
0x82e5: jmp 0x70ff
0x82ea: mov rsi,qword ptr [rip+0x21729f]
0x82f1: mov edi,0x4
0x82f6: call 0xf3f0
0x82fb: lea rsi,[rip+0xf706]
0x8302: xor edi,edi
0x8304: mov r12,rax
0x8307: mov edx,0x5
0x830c: call 0x2ad0
0x8311: xor esi,esi
0x8313: mov rdx,rax
0x8316: xor edi,edi
0x8318: xor eax,eax
0x831a: mov rcx,r12
0x831d: call 0x2f30
0x8322: cmp byte ptr [rbx+0x18],0x0
0x8326: jne 0x6ea4
0x832c: jmp 0x6460
0x838e: jmp 0x6466
0x83c6: cmp dword ptr [rbx+4],0x2
0x83ca: jne 0x7447
0x83d0: mov eax,dword ptr [rbp-0x268]
0x83d6: and eax,0xf000
0x83db: cmp eax,0x8000
0x83e0: jne 0x7ff9
0x83e6: jmp 0x7447
0x8534: lea rsi,[rip+0xf3f5]
0x853b: mov edx,0x5
0x8540: xor edi,edi
0x8542: call 0x2ad0
0x8547: mov rbx,rax
0x858a: xor r12d,r12d
0x858d: jmp 0x6466
0x8592: mov r12d,dword ptr [rbp-0x35c]
0x8599: mov rsi,qword ptr [rbp-0x308]
0x85a0: lea rcx,[rbp-0x2f8]
0x85a7: xor edi,edi
0x85a9: mov byte ptr [rbp-0x320],r8b
0x85b0: mov qword ptr [rbp-0x2f8],0x0
0x85bb: not r12d
0x85be: and r12d,dword ptr [rbp-0x314]
0x85c5: mov edx,r12d
0x85c8: call 0x2da0
0x85cd: test eax,eax
0x85cf: movzx r8d,byte ptr [rbp-0x320]
0x85d7: je 0x619f
0x85dd: mov rdi,qword ptr [rbp-0x308]
0x85e4: mov esi,r12d
0x85e7: and esi,0xffffefff
0x85ed: call 0x2d60
0x85f2: test eax,eax
0x85f4: movzx r8d,byte ptr [rbp-0x320]
0x85fc: je 0x619f
0x8602: mov rsi,qword ptr [rbp-0x308]
0x8609: mov edi,0x4
0x860e: call 0xf3f0
0x8613: mov edx,0x5
0x8618: mov r13,rax
0x861b: lea rsi,[rip+0xf915]
0x8622: jmp 0x70ff
0x866b: mov rsi,qword ptr [rbp-0x308]
0x8672: mov rdi,qword ptr [rbp-0x310]
0x8679: mov byte ptr [rbp-0x35c],r9b
0x8680: mov byte ptr [rbp-0x358],r8b
0x8687: mov qword ptr [rbp-0x350],rdx
0x868e: call 0xfbe0
0x8693: test al,al
0x8695: mov rdx,qword ptr [rbp-0x350]
0x869c: movzx r8d,byte ptr [rbp-0x358]
0x86a4: movzx r9d,byte ptr [rbp-0x35c]
0x86ac: je 0x8f27
0x86b2: mov eax,dword ptr [rdx+0x18]
0x86b5: and eax,0xf000
0x86ba: cmp eax,0xa000
0x86bf: je 0x72ec
0x86c5: mov eax,dword ptr [r12+0x18]
0x86ca: and eax,0xf000
0x86cf: cmp eax,0xa000
0x86d4: je 0x72ec
0x86da: jmp 0x72c4
0x86df: nop 
0x86e0: movzx esi,byte ptr [rbx+0x25]
0x86e4: mov rdi,qword ptr [rbp-0x308]
0x86eb: xor edx,edx
0x86ed: mov rcx,rbx
0x86f0: call 0x5890
0x86f5: test al,al
0x86f7: jne 0x812c
0x86fd: cmp byte ptr [rbx+0x26],0x0
0x8701: jne 0x6bb0
0x8707: jmp 0x812c
0x870c: mov rdx,qword ptr [rbp-0x1f0]
0x8713: mov rsi,qword ptr [rbp-0x1e8]
0x871a: mov rdi,qword ptr [rbp-0x308]
0x8721: call 0x9fc0
0x8726: mov rax,qword ptr [rbp-0x338]
0x872d: mov byte ptr [rax],0x1
0x8730: jmp 0x7918
0x87cd: mov rsi,qword ptr [rbp-0x308]
0x87d4: mov rdi,qword ptr [rbp-0x310]
0x87db: xor edx,edx
0x87dd: call 0x4fd0
0x87e2: jmp 0x7968
0x8827: mov rdi,qword ptr [rbp-0x330]
0x882e: call 0x30d0
0x8833: jmp 0x6bb0
0x8838: mov rsi,qword ptr [rbp-0x310]
0x883f: mov edi,0x4
0x8844: call 0xf3f0
0x8849: lea rsi,[rip+0xf602]
0x8850: mov edx,0x5
0x8855: xor edi,edi
0x8857: mov r12,rax
0x885a: call 0x2ad0
0x885f: mov r15,rax
0x8862: call 0x2950
0x8867: mov esi,dword ptr [rax]
0x8869: mov rcx,r12
0x886c: mov rdx,r15
0x886f: xor edi,edi
0x8871: xor eax,eax
0x8873: xor r12d,r12d
0x8876: call 0x2f30
0x887b: jmp 0x7b63
0x8880: mov rsi,qword ptr [rbp-0x250]
0x8887: mov rdi,qword ptr [rbp-0x310]
0x888e: call 0xa820
0x8893: test rax,rax
0x8896: mov r12,rax
0x8899: je 0x90e3
0x889f: movzx ecx,byte ptr [rbx+0x16]
0x88a3: mov rdx,qword ptr [rbp-0x308]
0x88aa: mov r8d,0xffffffff
0x88b0: mov esi,0xffffff9c
0x88b5: mov rdi,rax
0x88b8: call 0xa5e0
0x88bd: test eax,eax
0x88bf: mov dword ptr [rbp-0x320],eax
0x88c5: jle 0x9108
0x88cb: cmp byte ptr [rbx+0x2d],0x1
0x88cf: jne 0x88da
0x88d1: test r14b,r14b
0x88d4: je 0x94b9
0x88da: mov rdi,r12
0x88dd: call 0x30d0
0x88e2: mov rsi,qword ptr [rbp-0x308]
0x88e9: mov edi,0x4
0x88ee: call 0xf3f0
0x88f3: lea rsi,[rip+0xf2f6]
0x88fa: xor edi,edi
0x88fc: mov edx,0x5
0x8901: mov r12,rax
0x8904: call 0x2ad0
0x8909: mov esi,dword ptr [rbp-0x320]
0x890f: mov rdx,rax
0x8912: mov rcx,r12
0x8915: xor edi,edi
0x8917: xor eax,eax
0x8919: call 0x2f30
0x891e: jmp 0x6bb0
0x8923: mov rsi,qword ptr [rbp-0x308]
0x892a: mov edi,0x4
0x892f: call 0xf3f0
0x8934: mov edx,0x5
0x8939: mov r13,rax
0x893c: lea rsi,[rip+0xf4de]
0x8943: jmp 0x70ff
0x8d35: nop dword ptr [rax]
0x8dd3: lea eax,[r13+1]
0x8dd7: cmp rax,qword ptr [rbp-0x2d8]
0x8dde: mov rcx,r12
0x8de1: mov rdx,rbx
0x8de4: mov r13,rax
0x8de7: jae 0x97ee
0x8f1f: xor r8d,r8d
0x8f22: jmp 0x7d78
0x8f27: movzx r12d,byte ptr [rbx+0x18]
0x8f2c: xor r12d,0x1
0x8f30: jmp 0x739c
0x8f35: mov byte ptr [rbp-0x315],0x0
0x8f3c: mov r12d,0x1
0x8f42: jmp 0x7b47
0x8f47: mov rax,qword ptr [rbp-0xd0]
0x8f4e: cmp qword ptr [rbp-0x160],rax
0x8f55: jne 0x7e44
0x8f5b: jmp 0x6b1c
0x8f60: mov rdi,qword ptr [rbp-0x308]
0x8f67: call 0x2960
0x8f6c: test eax,eax
0x8f6e: jne 0x9ba6
0x8f74: cmp byte ptr [rbx+0x2e],0x0
0x8f78: je 0x8fb3
0x8f7a: mov rsi,qword ptr [rbp-0x308]
0x8f81: mov edi,0x4
0x8f86: call 0xf3f0
0x8f8b: lea rsi,[rip+0xed7e]
0x8f92: mov r12,rax
0x8f95: mov edx,0x5
0x8f9a: xor edi,edi
0x8f9c: call 0x2ad0
0x8fa1: mov rdx,r12
0x8fa4: mov rsi,rax
0x8fa7: mov edi,0x1
0x8fac: xor eax,eax
0x8fae: call 0x2ee0
0x8fb3: movzx r14d,byte ptr [rbx+0x21]
0x8fb8: mov eax,dword ptr [rbp-0x35c]
0x8fbe: mov dword ptr [rbp-0x378],eax
0x8fc4: test r14b,r14b
0x8fc7: je 0x900c
0x8fc9: mov edx,dword ptr [rbp-0x3a4]
0x8fcf: mov rsi,qword ptr [rbp-0x308]
0x8fd6: mov r8,rbx
0x8fd9: mov rdi,qword ptr [rbp-0x310]
0x8fe0: mov ecx,0x1
0x8fe5: call 0x57c0
0x8fea: test al,al
0x8fec: mov r8d,eax
0x8fef: mov qword ptr [rbp-0x330],0x0
0x8ffa: je 0x7d78
0x90c5: movzx r9d,byte ptr [rbp-0x330]
0x90cd: xor r8d,r8d
0x90d0: mov qword ptr [rbp-0x330],0x0
0x90db: mov r14d,r9d
0x90de: jmp 0x7d78
0x90e3: mov rsi,qword ptr [rbp-0x310]
0x90ea: mov edi,0x4
0x90ef: call 0xf3f0
0x90f4: mov edx,0x5
0x90f9: mov r13,rax
0x90fc: lea rsi,[rip+0xee68]
0x9103: jmp 0x70ff
0x9108: mov rdi,r12
0x910b: call 0x30d0
0x9110: movzx r8d,byte ptr [rbx+0x25]
0x9115: test r8b,r8b
0x9118: jne 0x6d30
0x911e: movzx eax,byte ptr [rbx+0x1d]
0x9122: test al,al
0x9124: mov byte ptr [rbp-0x320],al
0x912a: jne 0x93a3
0x9130: movzx r8d,byte ptr [rbp-0x320]
0x9138: mov byte ptr [rbp-0x320],0x1
0x913f: jmp 0x619f
0x9149: mov rsi,qword ptr [rbp-0x308]
0x9150: lea rdx,[rbp-0x160]
0x9157: mov edi,0x1
0x915c: mov byte ptr [rbp-0x358],r9b
0x9163: mov byte ptr [rbp-0x350],r8b
0x916a: call 0x2dd0
0x916f: test eax,eax
0x9171: movzx r8d,byte ptr [rbp-0x350]
0x9179: movzx r9d,byte ptr [rbp-0x358]
0x9181: je 0x7811
0x9187: jmp 0x5e3f
0x918c: mov rsi,qword ptr [rbp-0x310]
0x9193: lea rdx,[rbp-0xd0]
0x919a: mov edi,0x1
0x919f: mov byte ptr [rbp-0x358],r9b
0x91a6: mov byte ptr [rbp-0x350],r8b
0x91ad: call 0x2dd0
0x91b2: test eax,eax
0x91b4: movzx r8d,byte ptr [rbp-0x350]
0x91bc: movzx r9d,byte ptr [rbp-0x358]
0x91c4: je 0x777c
0x91ca: jmp 0x5e3f
0x9206: mov r9,qword ptr [rbp-0x368]
0x920d: mov edx,dword ptr [rbp-0x328]
0x9213: lea rcx,[rbp-0x280]
0x921a: mov rsi,qword ptr [rbp-0x308]
0x9221: movzx r8d,r14b
0x9225: mov rdi,rbx
0x9228: call 0x59e0
0x922d: cmp eax,0xffffffff
0x9230: je 0x8eb2
0x9236: test eax,eax
0x9238: jne 0x9244
0x923a: and dword ptr [rbp-0x340],0xfffff1ff
0x93a3: mov edx,dword ptr [rbp-0x260]
0x93a9: mov esi,dword ptr [rbp-0x264]
0x93af: mov rdi,qword ptr [rbp-0x308]
0x93b6: mov byte ptr [rbp-0x328],r8b
0x93bd: call 0x2e40
0x93c2: test eax,eax
0x93c4: movzx r8d,byte ptr [rbp-0x328]
0x93cc: je 0x619f
0x93d2: mov rdi,rbx
0x93d5: call 0x59b0
0x93da: test al,al
0x93dc: movzx r8d,byte ptr [rbp-0x328]
0x93e4: je 0x9be4
0x93ea: mov byte ptr [rbp-0x320],al
0x93f0: jmp 0x619f
0x9431: movzx r8d,byte ptr [rbx+0x30]
0x9436: test r8b,r8b
0x9439: je 0x9c27
0x943f: mov edx,dword ptr [rbp-0x330]
0x9445: mov rdi,qword ptr [rbp-0x308]
0x944c: mov esi,0x41
0x9451: xor eax,eax
0x9453: call 0xb490
0x9458: mov r8d,dword ptr [r12]
0x945c: mov dword ptr [rbp-0x328],eax
0x94b9: mov eax,dword ptr [rbp-0x1d8]
0x94bf: and eax,0xf000
0x94c4: cmp eax,0xa000
0x94c9: jne 0x88da
0x94cf: or rcx,0xffffffffffffffff
0x94d3: mov eax,r14d
0x94d6: mov rdi,r12
0x94d9: repne scasb al,byte ptr [rdi]
0x94db: mov rsi,qword ptr [rbp-0x1c0]
0x94e2: not rcx
0x94e5: lea rax,[rcx-1]
0x94e9: cmp rsi,rax
0x94ec: jne 0x88da
0x94f2: mov rdi,qword ptr [rbp-0x308]
0x94f9: call 0xa820
0x94fe: test rax,rax
0x9501: je 0x88da
0x9507: mov rdi,rax
0x950a: mov rsi,r12
0x950d: mov qword ptr [rbp-0x328],rax
0x9514: call 0x2cf0
0x9519: mov rdx,qword ptr [rbp-0x328]
0x9520: test eax,eax
0x9522: mov rdi,rdx
0x9525: jne 0x9d22
0x952b: call 0x30d0
0x9530: mov rdi,r12
0x9533: call 0x30d0
0x9538: jmp 0x9110
0x95c8: mov edi,dword ptr [rbp-0x328]
0x95ce: mov rsi,rcx
0x95d1: call 0x4ee0
0x95d6: test al,al
0x95d8: je 0x9af3
0x95de: xor r8d,r8d
0x95e1: jmp 0x8d4d
0x9687: cmp byte ptr [rbx+0x24],0x0
0x968b: je 0x91e4
0x9691: jmp 0x8eb2
0x96de: xor r8d,r8d
0x96e1: mov qword ptr [rbp-0x330],0x0
0x96ec: jmp 0x8eb5
0x97e2: jmp 0x8eb2
0x9901: add rax,0x1
0x9905: mov qword ptr [rbp-0x370],rax
0x990c: jmp 0x8c23
0x992c: cmp byte ptr [rbp-0x2d0],0x0
0x9933: je 0x9b50
0x9939: xor r9d,r9d
0x993c: cmp dword ptr [rbx+0xc],0x3
0x9940: mov eax,0x0
0x9945: sete r9b
0x9949: cmp byte ptr [rbp-0x3a5],0x0
0x9950: cmovne rax,qword ptr [rbp-0x398]
0x9958: mov qword ptr [rbp-0x398],rax
0x995f: jmp 0x9721
0x9964: mov edx,dword ptr [rbp-0x320]
0x996a: mov edi,dword ptr [rbp-0x328]
0x9970: xor eax,eax
0x9972: mov esi,0x40049409
0x9977: call 0x2c10
0x997c: test eax,eax
0x997e: je 0x91cf
0x9984: cmp dword ptr [rbx+0x38],0x2
0x9988: jne 0x8b0c
0x998e: mov rdx,qword ptr [rbp-0x310]
0x9995: mov esi,0x4
0x999a: mov edi,0x1
0x999f: call 0xf2d0
0x99a4: mov rdx,qword ptr [rbp-0x308]
0x99ab: mov esi,0x4
0x99b0: xor edi,edi
0x99b2: mov r12,rax
0x99b5: call 0xf2d0
0x99ba: lea rsi,[rip+0xe4ed]
0x99c1: mov edx,0x5
0x99c6: xor edi,edi
0x99c8: mov qword ptr [rbp-0x338],rax
0x99cf: call 0x2ad0
0x99d4: mov qword ptr [rbp-0x330],rax
0x99db: call 0x2950
0x99e0: mov rcx,qword ptr [rbp-0x338]
0x99e7: mov esi,dword ptr [rax]
0x99e9: mov r8,r12
0x99ec: mov rdx,qword ptr [rbp-0x330]
0x99f3: xor edi,edi
0x99f5: xor eax,eax
0x99f7: call 0x2f30
0x99fc: xor r8d,r8d
0x99ff: mov qword ptr [rbp-0x330],0x0
0x9a0a: jmp 0x8eb5
0x9a9e: mov rax,qword ptr [rbp-0x370]
0x9aa5: lea rdi,[r12+rax]
0x9aa9: call 0x12010
0x9aae: lea rcx,[rax+r12-1]
0x9ab3: xor edx,edx
0x9ab5: mov qword ptr [rbp-0x330],rax
0x9abc: mov rax,rcx
0x9abf: div r12
0x9ac2: sub rcx,rdx
0x9ac5: cmp dword ptr [rbp-0x348],0x0
0x9acc: mov qword ptr [rbp-0x3b0],rcx
0x9ad3: jne 0x9a5f
0x9ad5: xor r9d,r9d
0x9ad8: cmp dword ptr [rbx+0xc],0x3
0x9adc: lea rax,[rbp-0x2f0]
0x9ae3: mov qword ptr [rbp-0x348],rax
0x9aea: sete r9b
0x9aee: jmp 0x9721
0x9af3: mov rdx,qword ptr [rbp-0x308]
0x9afa: mov esi,0x3
0x9aff: xor edi,edi
0x9b01: mov rbx,qword ptr [rbp-0x388]
0x9b08: mov r13d,dword ptr [rbp-0x360]
0x9b0f: call 0xf4f0
0x9b14: lea rsi,[rip+0xe3ae]
0x9b1b: mov r12,rax
0x9b1e: mov edx,0x5
0x9b4b: jmp 0x8ea6
0x9b50: mov rdx,qword ptr [rbp-0x310]
0x9b57: mov esi,0x3
0x9b5c: xor edi,edi
0x9b5e: call 0xf4f0
0x9b63: mov edx,0x5
0x9b68: mov r12,rax
0x9b6b: lea rsi,[rip+0xdff6]
0x9b72: jmp 0x97ba
0x9ba6: mov rsi,qword ptr [rbp-0x308]
0x9bad: mov edi,0x4
0x9bb2: call 0xf3f0
0x9bb7: lea rsi,[rip+0xe22c]
0x9bbe: mov edx,0x5
0x9bc3: xor edi,edi
0x9bc5: mov qword ptr [rbp-0x328],rax
0x9bcc: call 0x2ad0
0x9bd1: mov rcx,qword ptr [rbp-0x328]
0x9bd8: mov rdx,rax
0x9bdb: mov esi,dword ptr [r12]
0x9bdf: jmp 0x7d61
0x9be4: lea rsi,[rip+0xdbe5]
0x9beb: xor edi,edi
0x9bed: mov edx,0x5
0x9bf2: call 0x2ad0
0x9bf7: mov r12,rax
0x9bfa: call 0x2950
0x9bff: mov rcx,qword ptr [rbp-0x308]
0x9c06: mov esi,dword ptr [rax]
0x9c08: xor edi,edi
0x9c0a: xor eax,eax
0x9c0c: mov rdx,r12
0x9c0f: call 0x2f30
0x9c14: movzx r8d,byte ptr [rbx+0x24]
0x9c19: test r8b,r8b
0x9c1c: jne 0x6bb0
0x9c22: jmp 0x619f
0x9c27: mov rsi,qword ptr [rbp-0x308]
0x9c2e: mov edi,0x4
0x9c33: mov byte ptr [rbp-0x328],r8b
0x9c3a: call 0xf3f0
0x9c3f: lea rsi,[rip+0xdefa]
0x9c46: mov r12,rax
0x9c49: mov edx,0x5
0x9c4e: xor edi,edi
0x9c50: call 0x2ad0
0x9c55: mov rcx,r12
0x9c58: mov rdx,rax
0x9c5b: xor esi,esi
0x9c5d: xor edi,edi
0x9c5f: xor eax,eax
0x9c61: call 0x2f30
0x9c66: mov qword ptr [rbp-0x330],0x0
0x9c71: movzx r8d,byte ptr [rbp-0x328]
0x9c79: jmp 0x7d78
0x9d22: call 0x30d0
0x9d27: jmp 0x88da
0x9d2c: nop dword ptr [rax]
0x9d80: cmp r10d,0x2
0x9d84: je 0x9df5
0x9db5: add rsp,0x20
0x9db9: mov rsi,qword ptr [rsp+8]
0x9dbe: xor rsi,qword ptr fs:[0x28]
0x9dc7: jne 0x9e14
0x9dc9: add rsp,0x18
0x9dcd: ret 
0x9dce: nop 
0x9dd0: cmp byte ptr [rcx+0x2c],0x0
0x9dd4: je 0x9d7b
0x9dd6: lea rcx,[rip+0xe21b]
0x9ddd: lea rsi,[rip+0xe1e6]
0x9de4: lea rdi,[rip+0xde9d]
0x9deb: mov edx,0xb8a
0x9df0: call 0x2be0
0x9df5: lea rcx,[rip+0xe1fc]
0x9dfc: lea rsi,[rip+0xe1c7]
0x9e03: lea rdi,[rip+0xdea6]
0x9e0a: mov edx,0xb8d
0x9e0f: call 0x2be0
0x9e14: call 0x2b30
0x9e19: lea rcx,[rip+0xe1d8]
0x9e20: lea rsi,[rip+0xe1a3]
0x9e27: lea rdi,[rip+0xde32]
0x9e2e: mov edx,0xb89
0x9e33: call 0x2be0
0x9e38: lea rcx,[rip+0xe1b9]
0x9e3f: lea rsi,[rip+0xe184]
0x9e46: lea rdi,[rip+0xddeb]
0x9e4d: mov edx,0xb88
0x9e52: call 0x2be0
0x9e76: lea rcx,[rip+0xe17b]
0x9e7d: lea rsi,[rip+0xe146]
0x9e84: lea rdi,[rip+0xe15c]
0x9e8b: mov edx,0xb86
0x9e90: call 0x2be0
0x9e95: nop word ptr cs:[rax+rax]
0x9e9f: nop 
0x9eac: nop dword ptr [rax]
0x9ebc: nop dword ptr [rax]
0x9ecc: nop dword ptr [rax]
0x9ed0: push rbx
0x9ed1: mov rbx,rdi
0x9ed4: mov rdi,qword ptr [rdi+0x10]
0x9ed8: call 0x30d0
0x9edd: mov rdi,rbx
0x9ee0: pop rbx
0x9ee1: jmp 0x30d0
0x9ee6: nop word ptr cs:[rax+rax]
0x9f55: call 0x2b30
0x9f5a: nop word ptr [rax+rax]
0x9f60: sub rsp,0x28
0x9f64: mov qword ptr [rsp],rdi
0x9f68: mov rdi,qword ptr [rip+0x215629]
0x9f6f: mov qword ptr [rsp+8],rsi
0x9f74: mov rsi,rsp
0x9f77: mov rax,qword ptr fs:[0x28]
0x9f80: mov qword ptr [rsp+0x18],rax
0x9f85: xor eax,eax
0x9f87: call 0xbfb0
0x9f8c: test rax,rax
0x9f8f: je 0x9fb0
0x9f91: mov rax,qword ptr [rax+0x10]
0x9f95: mov rdx,qword ptr [rsp+0x18]
0x9f9a: xor rdx,qword ptr fs:[0x28]
0x9fa3: jne 0x9fb4
0x9fa5: add rsp,0x28
0x9fa9: ret 
0x9faa: nop word ptr [rax+rax]
0x9fb0: xor eax,eax
0x9fb2: jmp 0x9f95
0x9fb4: call 0x2b30
0x9fb9: nop dword ptr [rax]
0x9fc0: push r13
0x9fc2: push r12
0x9fc4: mov r13,rdi
0x9fc7: push rbp
0x9fc8: push rbx
0x9fc9: mov edi,0x18
0x9fce: mov r12,rsi
0x9fd1: mov rbp,rdx
0x9fd4: sub rsp,0x8
0x9fd8: call 0x12010
0x9fdd: mov rdi,r13
0x9fe0: mov rbx,rax
0x9fe3: call 0x12240
0x9fe8: mov rdi,qword ptr [rip+0x2155a9]
0x9fef: mov rsi,rbx
0x9ff2: mov qword ptr [rbx+0x10],rax
0x9ff6: mov qword ptr [rbx],r12
0x9ff9: mov qword ptr [rbx+8],rbp
0x9ffd: call 0xca20
0xa002: test rax,rax
0xa005: je 0xa034
0xa007: cmp rbx,rax
0xa00a: mov rbp,rax
0xa00d: je 0xa030
0xa00f: mov rdi,qword ptr [rbx+0x10]
0xa013: call 0x30d0
0xa018: mov rdi,rbx
0xa01b: call 0x30d0
0xa020: mov rax,qword ptr [rbp+0x10]
0xa024: add rsp,0x8
0xa028: pop rbx
0xa029: pop rbp
0xa02a: pop r12
0xa02c: pop r13
0xa02e: ret 
0xa02f: nop 
0xa030: xor eax,eax
0xa032: jmp 0xa024
0xa034: call 0x12260
0xa039: nop dword ptr [rax]
0xa07b: nop dword ptr [rax+rax]
0xa080: mov rdi,qword ptr [rip+0x215511]
0xa087: jmp 0xc470
0xa08c: nop dword ptr [rax]
0xa0ba: nop word ptr [rax+rax]
0xa249: nop dword ptr [rax]
0xa2c9: nop dword ptr [rax]
0xa325: nop dword ptr [rax]
0xa33a: nop word ptr [rax+rax]
0xa356: nop word ptr cs:[rax+rax]
0xa382: nop word ptr [rax+rax]
0xa3c8: call 0x2b30
0xa3cd: nop dword ptr [rax]
0xa3d0: mov rax,rsi
0xa3d3: mov rcx,rdi
0xa3d6: mov edx,dword ptr [rsi+0x10]
0xa3d9: mov r8d,dword ptr [rax+0x14]
0xa3dd: mov rsi,qword ptr [rsi+8]
0xa3e1: mov edi,dword ptr [rax]
0xa3e3: jmp 0x2ec0
0xa3e8: nop dword ptr [rax+rax]
0xa3f0: push r12
0xa3f2: push rbp
0xa3f3: mov rbp,rdi
0xa3f6: push rbx
0xa3f7: mov r12,rsi
0xa3fa: call 0xb3a0
0xa3ff: sub rax,rbp
0xa402: lea rdi,[rax+9]
0xa406: mov rbx,rax
0xa409: cmp rdi,0x100
0xa410: jbe 0xa421
0xa412: call 0x2df0
0xa417: mov r12,rax
0xa41a: xor eax,eax
0xa41c: test r12,r12
0xa41f: je 0xa443
0xa421: mov rdx,rbx
0xa424: mov rsi,rbp
0xa427: mov rdi,r12
0xa42a: call 0x2f20
0xa42f: movabs rcx,0x5858585858587543
0xa439: mov byte ptr [rax+8],0x0
0xa43d: mov qword ptr [rax],rcx
0xa440: mov rax,r12
0xa443: pop rbx
0xa444: pop rbp
0xa445: pop r12
0xa447: ret 
0xa448: nop dword ptr [rax+rax]
0xa450: mov rax,rsi
0xa453: mov rdx,rdi
0xa456: mov esi,dword ptr [rsi+8]
0xa459: mov rdi,qword ptr [rax]
0xa45c: jmp 0x3070
0xa461: nop dword ptr [rax+rax]
0xa466: nop word ptr cs:[rax+rax]
0xa470: push r15
0xa472: push r14
0xa474: mov r14d,edi
0xa477: push r13
0xa479: push r12
0xa47b: mov r13,rsi
0xa47e: push rbp
0xa47f: push rbx
0xa480: mov rbx,rcx
0xa483: mov ebp,edx
0xa485: mov r12d,r8d
0xa488: sub rsp,0x148
0xa48f: mov ecx,dword ptr [rsp+0x180]
0xa496: mov rax,qword ptr fs:[0x28]
0xa49f: mov qword ptr [rsp+0x138],rax
0xa4a7: xor eax,eax
0xa4a9: test ecx,ecx
0xa4ab: js 0xa560
0xa4b1: cmp r9b,0x1
0xa4b5: jne 0xa530
0xa4b7: cmp ecx,0x11
0xa4ba: jne 0xa530
0xa4bc: lea rax,[rsp+0x30]
0xa4c1: mov rdi,rbx
0xa4c4: mov rsi,rax
0xa4c7: mov qword ptr [rsp],rax
0xa4cb: call 0xa3f0
0xa4d0: test rax,rax
0xa4d3: mov r15,rax
0xa4d6: je 0xa5c0
0xa4dc: lea rdx,[rsp+0x10]
0xa4e1: lea rcx,[rip+0xfffffffffffffee8]
0xa4e8: xor esi,esi
0xa4ea: mov r8d,0x6
0xa4f0: mov rdi,rax
0xa4f3: mov dword ptr [rsp+0x10],r14d
0xa4f8: mov qword ptr [rsp+0x18],r13
0xa4fd: mov dword ptr [rsp+0x20],ebp
0xa501: mov dword ptr [rsp+0x24],r12d
0xa506: call 0x10710
0xa50b: test eax,eax
0xa50d: je 0xa588
0xa50f: call 0x2950
0xa514: mov ecx,dword ptr [rax]
0xa516: cmp r15,qword ptr [rsp]
0xa51a: je 0xa530
0xa51c: mov rdi,r15
0xa51f: mov dword ptr [rsp],ecx
0xa522: call 0x30d0
0xa527: mov ecx,dword ptr [rsp]
0xa52a: nop word ptr [rax+rax]
0xa530: mov rbx,qword ptr [rsp+0x138]
0xa538: xor rbx,qword ptr fs:[0x28]
0xa541: mov eax,ecx
0xa543: jne 0xa5cc
0xa549: add rsp,0x148
0xa550: pop rbx
0xa551: pop rbp
0xa552: pop r12
0xa554: pop r13
0xa556: pop r14
0xa558: pop r15
0xa55a: ret 
0xa55b: nop dword ptr [rax+rax]
0xa560: mov rcx,rbx
0xa563: mov dword ptr [rsp],r9d
0xa567: call 0x2ec0
0xa56c: test eax,eax
0xa56e: mov ecx,eax
0xa570: je 0xa530
0xa572: call 0x2950
0xa577: mov r9d,dword ptr [rsp]
0xa57b: mov ecx,dword ptr [rax]
0xa57d: jmp 0xa4b1
0xa582: nop word ptr [rax+rax]
0xa588: mov rcx,rbx
0xa58b: mov edx,ebp
0xa58d: mov rsi,r15
0xa590: mov edi,ebp
0xa592: call 0x3000
0xa597: test eax,eax
0xa599: mov ecx,0xffffffff
0xa59e: je 0xa5a7
0xa5a0: call 0x2950
0xa5a5: mov ecx,dword ptr [rax]
0xa5a7: xor edx,edx
0xa5a9: mov rsi,r15
0xa5ac: mov edi,ebp
0xa5ae: mov dword ptr [rsp+0xc],ecx
0xa5b2: call 0x29d0
0xa5b7: mov ecx,dword ptr [rsp+0xc]
0xa5bb: jmp 0xa516
0xa5c0: call 0x2950
0xa5c5: mov ecx,dword ptr [rax]
0xa5c7: jmp 0xa530
0xa5cc: call 0x2b30
0xa5d1: nop dword ptr [rax+rax]
0xa5d6: nop word ptr cs:[rax+rax]
0xa5e0: push r14
0xa5e2: push r13
0xa5e4: push r12
0xa5e6: push rbp
0xa5e7: mov r12,rdi
0xa5ea: push rbx
0xa5eb: mov ebp,esi
0xa5ed: mov rbx,rdx
0xa5f0: sub rsp,0x130
0xa5f7: mov rax,qword ptr fs:[0x28]
0xa600: mov qword ptr [rsp+0x128],rax
0xa608: xor eax,eax
0xa60a: test r8d,r8d
0xa60d: js 0xa6b8
0xa613: cmp cl,0x1
0xa616: jne 0xa688
0xa618: cmp r8d,0x11
0xa61c: jne 0xa688
0xa61e: lea r14,[rsp+0x20]
0xa623: mov rdi,rbx
0xa626: mov rsi,r14
0xa629: call 0xa3f0
0xa62e: test rax,rax
0xa631: mov r13,rax
0xa634: je 0xa720
0xa63a: lea rdx,[rsp+0x10]
0xa63f: lea rcx,[rip+0xfffffffffffffe0a]
0xa646: xor esi,esi
0xa648: mov r8d,0x6
0xa64e: mov rdi,rax
0xa651: mov qword ptr [rsp+0x10],r12
0xa656: mov dword ptr [rsp+0x18],ebp
0xa65a: call 0x10710
0xa65f: test eax,eax
0xa661: je 0xa6e0
0xa663: call 0x2950
0xa668: mov r8d,dword ptr [rax]
0xa66b: cmp r13,r14
0xa66e: je 0xa688
0xa670: mov rdi,r13
0xa673: mov dword ptr [rsp+0xc],r8d
0xa678: call 0x30d0
0xa67d: mov r8d,dword ptr [rsp+0xc]
0xa682: nop word ptr [rax+rax]
0xa688: mov rbx,qword ptr [rsp+0x128]
0xa690: xor rbx,qword ptr fs:[0x28]
0xa699: mov eax,r8d
0xa69c: jne 0xa72d
0xa6a2: add rsp,0x130
0xa6a9: pop rbx
0xa6aa: pop rbp
0xa6ab: pop r12
0xa6ad: pop r13
0xa6af: pop r14
0xa6b1: ret 
0xa6b2: nop word ptr [rax+rax]
0xa6b8: mov dword ptr [rsp+0xc],ecx
0xa6bc: call 0x3070
0xa6c1: test eax,eax
0xa6c3: mov r8d,eax
0xa6c6: je 0xa688
0xa6c8: call 0x2950
0xa6cd: mov ecx,dword ptr [rsp+0xc]
0xa6d1: mov r8d,dword ptr [rax]
0xa6d4: jmp 0xa613
0xa6d9: nop dword ptr [rax]
0xa6e0: mov rcx,rbx
0xa6e3: mov edx,ebp
0xa6e5: mov rsi,r13
0xa6e8: mov edi,ebp
0xa6ea: call 0x3000
0xa6ef: test eax,eax
0xa6f1: mov r8d,0xffffffff
0xa6f7: je 0xa66b
0xa6fd: call 0x2950
0xa702: mov r8d,dword ptr [rax]
0xa705: xor edx,edx
0xa707: mov rsi,r13
0xa70a: mov edi,ebp
0xa70c: mov dword ptr [rsp+0xc],r8d
0xa711: call 0x29d0
0xa716: mov r8d,dword ptr [rsp+0xc]
0xa71b: jmp 0xa66b
0xa720: call 0x2950
0xa725: mov r8d,dword ptr [rax]
0xa728: jmp 0xa688
0xa72d: call 0x2b30
0xa732: nop word ptr cs:[rax+rax]
0xa73c: nop dword ptr [rax]
0xa799: nop dword ptr [rax]
0xa7c5: mov eax,ebx
0xa7c7: pop rbx
0xa7c8: pop rbp
0xa7c9: pop r12
0xa7cb: ret 
0xa7cc: nop dword ptr [rax]
0xa820: push r15
0xa822: push r14
0xa824: mov eax,0x401
0xa829: push r13
0xa82b: push r12
0xa82d: mov r13,rdi
0xa830: push rbp
0xa831: push rbx
0xa832: lea rbx,[rsi+1]
0xa836: movabs r14,0x3fffffffffffffff
0xa840: movabs r15,0x7ffffffffffffffe
0xa84a: sub rsp,0x8
0xa84e: cmp rsi,0x401
0xa855: cmovae rbx,rax
0xa859: nop dword ptr [rax]
0xa860: mov rdi,rbx
0xa863: call 0x2df0
0xa868: test rax,rax
0xa86b: mov rbp,rax
0xa86e: je 0xa8ab
0xa870: mov rdx,rbx
0xa873: mov rsi,rax
0xa876: mov rdi,r13
0xa879: call 0x29f0
0xa87e: test rax,rax
0xa881: mov r12,rax
0xa884: js 0xa8d8
0xa886: cmp rbx,r12
0xa889: ja 0xa8f0
0xa88b: mov rdi,rbp
0xa88e: call 0x30d0
0xa893: cmp rbx,r14
0xa896: ja 0xa8c0
0xa898: add rbx,rbx
0xa89b: mov rdi,rbx
0xa89e: call 0x2df0
0xa8a3: test rax,rax
0xa8a6: mov rbp,rax
0xa8a9: jne 0xa870
0xa8ab: add rsp,0x8
0xa8af: mov rax,rbp
0xa8b2: pop rbx
0xa8b3: pop rbp
0xa8b4: pop r12
0xa8b6: pop r13
0xa8b8: pop r14
0xa8ba: pop r15
0xa8bc: ret 
0xa8bd: nop dword ptr [rax]
0xa8c0: cmp rbx,r15
0xa8c3: ja 0xa900
0xa8c5: movabs rbx,0x7fffffffffffffff
0xa8cf: jmp 0xa860
0xa8d1: nop dword ptr [rax]
0xa8d8: call 0x2950
0xa8dd: cmp dword ptr [rax],0x22
0xa8e0: je 0xa886
0xa8e2: mov rdi,rbp
0xa8e5: xor ebp,ebp
0xa8e7: call 0x30d0
0xa8ec: jmp 0xa8ab
0xa8ee: nop 
0xa8f0: mov byte ptr [rbp+r12],0x0
0xa8f6: jmp 0xa8ab
0xa8f8: nop dword ptr [rax+rax]
0xa900: call 0x2950
0xa905: xor ebp,ebp
0xa907: mov dword ptr [rax],0xc
0xa90d: jmp 0xa8ab
0xa90f: nop 
0xa92e: nop 
0xa93f: nop 
0xa956: nop word ptr cs:[rax+rax]
0xad19: nop dword ptr [rax]
0xad3f: nop 
0xadfc: nop dword ptr [rax]
0xae46: nop word ptr cs:[rax+rax]
0xae5a: nop word ptr [rax+rax]
0xae7b: nop dword ptr [rax+rax]
0xaeb4: nop dword ptr [rax]
0xaf6d: call 0x2b30
0xaf72: nop word ptr cs:[rax+rax]
0xaf7c: nop dword ptr [rax]
0xaf8a: nop word ptr [rax+rax]
0xafc3: nop dword ptr [rax]
0xafc6: nop word ptr cs:[rax+rax]
0xafd0: sub rsp,0x8
0xafd4: xor ecx,ecx
0xafd6: call 0xa960
0xafdb: test rax,rax
0xafde: je 0xafe5
0xafe0: add rsp,0x8
0xafe4: ret 
0xafe5: call 0x12260
0xafea: nop word ptr [rax+rax]
0xaff0: test rsi,rsi
0xaff3: je 0xb000
0xaff5: cmp byte ptr [rsi],0x0
0xaff8: je 0xb000
0xaffa: jmp 0xaf90
0xaffc: nop dword ptr [rax]
0xb000: mov eax,0x2
0xb005: ret 
0xb006: nop word ptr cs:[rax+rax]
0xb047: nop word ptr [rax+rax]
0xb05a: nop word ptr [rax+rax]
0xb082: nop word ptr [rax+rax]
0xb0c3: nop dword ptr [rax+rax]
0xb0d0: mov qword ptr [rip+0x2144d1],rdi
0xb0d7: ret 
0xb0d8: nop dword ptr [rax+rax]
0xb0e0: push r12
0xb0e2: push rbp
0xb0e3: push rbx
0xb0e4: mov rbx,qword ptr [rip+0x212005]
0xb0eb: mov rdi,rbx
0xb0ee: call 0x127a0
0xb0f3: test rax,rax
0xb0f6: jne 0xb198
0xb0fc: mov rdi,rbx
0xb0ff: call 0x12dc0
0xb104: test eax,eax
0xb106: jne 0xb138
0xb108: pop rbx
0xb109: pop rbp
0xb10a: pop r12
0xb10c: jmp 0xb210
0xb111: nop dword ptr [rax]
0xb118: call 0x12760
0xb11d: test eax,eax
0xb11f: mov rdi,qword ptr [rip+0x211fca]
0xb126: je 0xb1b6
0xb12c: call 0x12dc0
0xb131: nop dword ptr [rax]
0xb138: lea rsi,[rip+0xd001]
0xb13f: xor edi,edi
0xb141: mov edx,0x5
0xb146: call 0x2ad0
0xb14b: mov rbx,qword ptr [rip+0x214456]
0xb152: mov r12,rax
0xb155: call 0x2950
0xb15a: mov rbp,rax
0xb15d: test rbx,rbx
0xb160: je 0xb1d0
0xb162: mov rdi,rbx
0xb165: call 0xf4c0
0xb16a: mov esi,dword ptr [rbp]
0xb16d: lea rdx,[rip+0xcfdf]
0xb174: mov rcx,rax
0xb177: mov r8,r12
0xb17a: xor edi,edi
0xb17c: xor eax,eax
0xb17e: call 0x2f30
0xb183: call 0xb210
0xb188: mov edi,dword ptr [rip+0x211eba]
0xb18e: call 0x2980
0xb193: nop dword ptr [rax+rax]
0xb198: xor esi,esi
0xb19a: mov rdi,rbx
0xb19d: mov edx,0x1
0xb1a2: call 0x127d0
0xb1a7: test eax,eax
0xb1a9: mov rdi,qword ptr [rip+0x211f40]
0xb1b0: je 0xb118
0xb1b6: call 0x12dc0
0xb1bb: test eax,eax
0xb1bd: jne 0xb138
0xb1c3: pop rbx
0xb1c4: pop rbp
0xb1c5: pop r12
0xb1c7: jmp 0xb210
0xb1cc: nop dword ptr [rax]
0xb1d0: mov esi,dword ptr [rax]
0xb1d2: lea rdx,[rip+0xdc87]
0xb1d9: mov rcx,r12
0xb1dc: xor edi,edi
0xb1de: xor eax,eax
0xb1e0: call 0x2f30
0xb1e5: jmp 0xb183
0xb1e7: nop word ptr [rax+rax]
0xb1f0: mov qword ptr [rip+0x2143c1],rdi
0xb1f7: ret 
0xb1f8: nop dword ptr [rax+rax]
0xb200: mov byte ptr [rip+0x2143a9],dil
0xb207: ret 
0xb208: nop dword ptr [rax+rax]
0xb210: push rbp
0xb211: push rbx
0xb212: sub rsp,0x8
0xb216: mov rdi,qword ptr [rip+0x211ecb]
0xb21d: call 0x12dc0
0xb222: test eax,eax
0xb224: je 0xb23c
0xb226: call 0x2950
0xb22b: cmp byte ptr [rip+0x21437e],0x0
0xb232: mov rbx,rax
0xb235: je 0xb253
0xb237: cmp dword ptr [rax],0x20
0xb23a: jne 0xb253
0xb23c: mov rdi,qword ptr [rip+0x211edd]
0xb243: call 0x12dc0
0xb248: test eax,eax
0xb24a: jne 0xb292
0xb24c: add rsp,0x8
0xb250: pop rbx
0xb251: pop rbp
0xb252: ret 
0xb253: lea rsi,[rip+0xcf00]
0xb25a: xor edi,edi
0xb25c: mov edx,0x5
0xb261: call 0x2ad0
0xb266: mov rdi,qword ptr [rip+0x21434b]
0xb26d: mov rbp,rax
0xb270: test rdi,rdi
0xb273: je 0xb29d
0xb275: call 0xf4c0
0xb27a: mov esi,dword ptr [rbx]
0xb27c: lea rdx,[rip+0xced0]
0xb283: mov rcx,rax
0xb286: mov r8,rbp
0xb289: xor edi,edi
0xb28b: xor eax,eax
0xb28d: call 0x2f30
0xb292: mov edi,dword ptr [rip+0x211db0]
0xb298: call 0x2980
0xb29d: mov esi,dword ptr [rbx]
0xb29f: lea rdx,[rip+0xdbba]
0xb2a6: mov rcx,rax
0xb2a9: xor edi,edi
0xb2ab: xor eax,eax
0xb2ad: call 0x2f30
0xb2b2: jmp 0xb292
0xb2b4: nop word ptr cs:[rax+rax]
0xb2be: nop 
0xb2d8: nop dword ptr [rax+rax]
0xb30e: nop 
0xb32d: nop dword ptr [rax]
0xb33d: nop dword ptr [rax]
0xb39a: nop word ptr [rax+rax]
0xb3c7: nop word ptr [rax+rax]
0xb3fc: nop dword ptr [rax]
0xb41c: nop dword ptr [rax]
0xb43e: nop 
0xb447: nop word ptr [rax+rax]
0xb455: nop 
0xb456: nop word ptr cs:[rax+rax]
0xb460: test rdi,rdi
0xb463: je 0xb480
0xb465: push rbx
0xb466: mov ebx,esi
0xb468: call 0x2db0
0xb46d: mov ecx,ebx
0xb46f: xor edx,edx
0xb471: xor esi,esi
0xb473: pop rbx
0xb474: mov edi,eax
0xb476: jmp 0x2c70
0xb47b: nop dword ptr [rax+rax]
0xb480: ret 
0xb482: nop word ptr cs:[rax+rax]
0xb48c: nop dword ptr [rax]
0xb4d4: nop dword ptr [rax]
0xb4f9: call 0x2b30
0xb4fe: nop 
0xb567: nop word ptr [rax+rax]
0xb57b: nop dword ptr [rax+rax]
0xb587: nop word ptr [rax+rax]
0xb5e1: call 0x2b30
0xb5e6: nop word ptr cs:[rax+rax]
0xb5f0: mov edx,edi
0xb5f2: mov eax,0x2d
0xb5f7: and edx,0xf000
0xb5fd: cmp edx,0x8000
0xb603: je 0xb660
0xb605: cmp edx,0x4000
0xb60b: mov eax,0x64
0xb610: je 0xb660
0xb612: cmp edx,0x6000
0xb618: mov eax,0x62
0xb61d: je 0xb660
0xb61f: cmp edx,0x2000
0xb625: mov eax,0x63
0xb62a: je 0xb660
0xb62c: cmp edx,0xa000
0xb632: mov eax,0x6c
0xb637: je 0xb660
0xb639: cmp edx,0x1000
0xb63f: mov eax,0x70
0xb644: je 0xb660
0xb646: cmp edx,0xc000
0xb64c: mov eax,0x73
0xb651: mov edx,0x3f
0xb656: cmovne eax,edx
0xb659: nop dword ptr [rax]
0xb660: mov byte ptr [rsi],al
0xb662: mov eax,edi
0xb664: and eax,0x100
0xb669: cmp eax,0x1
0xb66c: sbb eax,eax
0xb66e: and eax,0xffffffbb
0xb671: add eax,0x72
0xb674: mov byte ptr [rsi+1],al
0xb677: mov eax,edi
0xb679: and eax,0x80
0xb67e: cmp eax,0x1
0xb681: sbb eax,eax
0xb683: and eax,0xffffffb6
0xb686: add eax,0x77
0xb689: mov byte ptr [rsi+2],al
0xb68c: mov eax,edi
0xb68e: and eax,0x40
0xb691: cmp eax,0x1
0xb694: sbb eax,eax
0xb696: test edi,0x800
0xb69c: je 0xb740
0xb6a2: and eax,0xffffffe0
0xb6a5: add eax,0x73
0xb6a8: mov byte ptr [rsi+3],al
0xb6ab: mov eax,edi
0xb6ad: and eax,0x20
0xb6b0: cmp eax,0x1
0xb6b3: sbb eax,eax
0xb6b5: and eax,0xffffffbb
0xb6b8: add eax,0x72
0xb6bb: mov byte ptr [rsi+4],al
0xb6be: mov eax,edi
0xb6c0: and eax,0x10
0xb6c3: cmp eax,0x1
0xb6c6: sbb eax,eax
0xb6c8: and eax,0xffffffb6
0xb6cb: add eax,0x77
0xb6ce: mov byte ptr [rsi+5],al
0xb6d1: mov eax,edi
0xb6d3: and eax,0x8
0xb6d6: cmp eax,0x1
0xb6d9: sbb eax,eax
0xb6db: test edi,0x400
0xb6e1: je 0xb768
0xb6e7: and eax,0xffffffe0
0xb6ea: add eax,0x73
0xb6ed: mov byte ptr [rsi+6],al
0xb6f0: mov eax,edi
0xb6f2: and eax,0x4
0xb6f5: cmp eax,0x1
0xb6f8: sbb eax,eax
0xb6fa: and eax,0xffffffbb
0xb6fd: add eax,0x72
0xb700: mov byte ptr [rsi+7],al
0xb703: mov eax,edi
0xb705: and eax,0x2
0xb708: cmp eax,0x1
0xb70b: sbb eax,eax
0xb70d: and eax,0xffffffb6
0xb710: add eax,0x77
0xb713: mov byte ptr [rsi+8],al
0xb716: mov eax,edi
0xb718: and eax,0x1
0xb71b: cmp eax,0x1
0xb71e: sbb eax,eax
0xb720: and edi,0x200
0xb726: je 0xb750
0xb728: and eax,0xffffffe0
0xb72b: add eax,0x74
0xb72e: mov byte ptr [rsi+9],al
0xb731: mov eax,0x20
0xb736: mov word ptr [rsi+0xa],ax
0xb73a: ret 
0xb73b: nop dword ptr [rax+rax]
0xb740: and eax,0xffffffb5
0xb743: add eax,0x78
0xb746: jmp 0xb6a8
0xb74b: nop dword ptr [rax+rax]
0xb750: and eax,0xffffffb5
0xb753: add eax,0x78
0xb756: mov byte ptr [rsi+9],al
0xb759: mov eax,0x20
0xb75e: mov word ptr [rsi+0xa],ax
0xb762: ret 
0xb763: nop dword ptr [rax+rax]
0xb768: and eax,0xffffffb5
0xb76b: add eax,0x78
0xb76e: jmp 0xb6ed
0xb773: nop dword ptr [rax]
0xb776: nop word ptr cs:[rax+rax]
0xb780: mov edi,dword ptr [rdi+0x18]
0xb783: jmp 0xb5f0
0xb788: nop dword ptr [rax+rax]
0xb7a8: nop dword ptr [rax+rax]
0xb81c: nop dword ptr [rax]
0xb898: nop dword ptr [rax+rax]
0xb8af: nop 
0xb8cd: nop dword ptr [rax]
0xb902: nop word ptr [rax+rax]
0xb921: xor r12d,r12d
0xb924: jmp 0xb8f4
0xb926: nop word ptr cs:[rax+rax]
0xb94d: nop dword ptr [rax]
0xb982: nop word ptr [rax+rax]
0xb9a6: nop word ptr cs:[rax+rax]
0xba0e: nop 
0xba43: nop dword ptr [rax]
0xba46: nop word ptr cs:[rax+rax]
0xba50: mov rax,rdi
0xba53: xor edx,edx
0xba55: ror rax,0x3
0xba59: div rsi
0xba5c: mov rax,rdx
0xba5f: ret 
0xba60: cmp rdi,rsi
0xba63: sete al
0xba66: ret 
0xba67: nop word ptr [rax+rax]
0xba92: nop dword ptr [rax]
0xba96: nop word ptr cs:[rax+rax]
0xbafb: nop dword ptr [rax+rax]
0xbb5a: nop word ptr [rax+rax]
0xbb99: nop dword ptr [rax]
0xbba9: nop dword ptr [rax]
0xbbbe: nop 
0xbc37: nop word ptr [rax+rax]
0xbc81: nop dword ptr [rax]
0xbd4c: nop dword ptr [rax]
0xbd5a: nop word ptr [rax+rax]
0xbd80: mov rax,qword ptr [rdi+0x10]
0xbd84: ret 
0xbd85: nop 
0xbd86: nop word ptr cs:[rax+rax]
0xbd90: mov rax,qword ptr [rdi+0x18]
0xbd94: ret 
0xbd95: nop 
0xbd96: nop word ptr cs:[rax+rax]
0xbda0: mov rax,qword ptr [rdi+0x20]
0xbda4: ret 
0xbda5: nop 
0xbda6: nop word ptr cs:[rax+rax]
0xbdb0: mov rsi,qword ptr [rdi]
0xbdb3: mov rdi,qword ptr [rdi+8]
0xbdb7: xor eax,eax
0xbdb9: cmp rsi,rdi
0xbdbc: jae 0xbdf7
0xbdbe: nop 
0xbdc0: cmp qword ptr [rsi],0x0
0xbdc4: je 0xbdec
0xbdc6: mov rdx,qword ptr [rsi+8]
0xbdca: mov ecx,0x1
0xbdcf: test rdx,rdx
0xbdd2: je 0xbde5
0xbdd4: nop dword ptr [rax]
0xbdd8: mov rdx,qword ptr [rdx+8]
0xbddc: add rcx,0x1
0xbde0: test rdx,rdx
0xbde3: jne 0xbdd8
0xbde5: cmp rax,rcx
0xbde8: cmovb rax,rcx
0xbdec: add rsi,0x10
0xbdf0: cmp rsi,rdi
0xbdf3: jb 0xbdc0
0xbdf5: ret 
0xbdf7: ret 
0xbdf9: nop dword ptr [rax]
0xbe00: mov rcx,qword ptr [rdi]
0xbe03: mov r8,qword ptr [rdi+8]
0xbe07: xor edx,edx
0xbe09: xor esi,esi
0xbe0b: cmp rcx,r8
0xbe0e: jae 0xbe46
0xbe10: cmp qword ptr [rcx],0x0
0xbe14: je 0xbe3d
0xbe16: mov rax,qword ptr [rcx+8]
0xbe1a: add rsi,0x1
0xbe1e: add rdx,0x1
0xbe22: test rax,rax
0xbe25: je 0xbe3d
0xbe27: nop word ptr [rax+rax]
0xbe30: mov rax,qword ptr [rax+8]
0xbe34: add rdx,0x1
0xbe38: test rax,rax
0xbe3b: jne 0xbe30
0xbe3d: add rcx,0x10
0xbe41: cmp rcx,r8
0xbe44: jb 0xbe10
0xbe46: xor eax,eax
0xbe48: cmp qword ptr [rdi+0x18],rsi
0xbe4c: je 0xbe50
0xbe4e: ret 
0xbe50: cmp qword ptr [rdi+0x20],rdx
0xbe54: sete al
0xbe57: ret 
0xbe58: nop dword ptr [rax+rax]
0xbe60: push r13
0xbe62: push r12
0xbe64: mov r12,rsi
0xbe67: push rbp
0xbe68: push rbx
0xbe69: xor ebx,ebx
0xbe6b: sub rsp,0x8
0xbe6f: mov rsi,qword ptr [rdi]
0xbe72: mov rcx,qword ptr [rdi+0x20]
0xbe76: mov rbp,qword ptr [rdi+0x10]
0xbe7a: mov r13,qword ptr [rdi+0x18]
0xbe7e: mov rdi,qword ptr [rdi+8]
0xbe82: cmp rsi,rdi
0xbe85: jae 0xbec5
0xbe87: nop word ptr [rax+rax]
0xbe90: cmp qword ptr [rsi],0x0
0xbe94: je 0xbebc
0xbe96: mov rax,qword ptr [rsi+8]
0xbe9a: mov edx,0x1
0xbe9f: test rax,rax
0xbea2: je 0xbeb5
0xbea4: nop dword ptr [rax]
0xbea8: mov rax,qword ptr [rax+8]
0xbeac: add rdx,0x1
0xbeb0: test rax,rax
0xbeb3: jne 0xbea8
0xbeb5: cmp rbx,rdx
0xbeb8: cmovb rbx,rdx
0xbebc: add rsi,0x10
0xbec0: cmp rsi,rdi
0xbec3: jb 0xbe90
0xbec5: lea rdx,[rip+0xc29a]
0xbecc: mov esi,0x1
0xbed1: mov rdi,r12
0xbed4: xor eax,eax
0xbed6: call 0x3050
0xbedb: lea rdx,[rip+0xc29c]
0xbee2: xor eax,eax
0xbee4: mov rcx,rbp
0xbee7: mov esi,0x1
0xbeec: mov rdi,r12
0xbeef: call 0x3050
0xbef4: test r13,r13
0xbef7: js 0xbf60
0xbef9: pxor xmm0,xmm0
0xbefd: test rbp,rbp
0xbf00: cvtsi2sd xmm0,r13
0xbf05: mulsd xmm0,qword ptr [rip+0xc30b]
0xbf0d: js 0xbf89
0xbf0f: pxor xmm1,xmm1
0xbf13: cvtsi2sd xmm1,rbp
0xbf18: divsd xmm0,xmm1
0xbf1c: lea rdx,[rip+0xc28d]
0xbf23: mov rcx,r13
0xbf26: mov rdi,r12
0xbf29: mov esi,0x1
0xbf2e: mov eax,0x1
0xbf33: call 0x3050
0xbf38: add rsp,0x8
0xbf3c: mov rcx,rbx
0xbf3f: mov rdi,r12
0xbf42: pop rbx
0xbf43: pop rbp
0xbf44: pop r12
0xbf46: pop r13
0xbf48: lea rdx,[rip+0xc247]
0xbf4f: mov esi,0x1
0xbf54: xor eax,eax
0xbf56: jmp 0x3050
0xbf5b: nop dword ptr [rax+rax]
0xbf60: mov rax,r13
0xbf63: mov rdx,r13
0xbf66: pxor xmm0,xmm0
0xbf6a: shr rax,0x1
0xbf6d: and edx,0x1
0xbf70: or rax,rdx
0xbf73: test rbp,rbp
0xbf76: cvtsi2sd xmm0,rax
0xbf7b: addsd xmm0,xmm0
0xbf7f: mulsd xmm0,qword ptr [rip+0xc291]
0xbf87: jns 0xbf0f
0xbf89: mov rax,rbp
0xbf8c: pxor xmm1,xmm1
0xbf90: shr rax,0x1
0xbf93: and ebp,0x1
0xbf96: or rax,rbp
0xbf99: cvtsi2sd xmm1,rax
0xbf9e: addsd xmm1,xmm1
0xbfa2: jmp 0xbf18
0xbfa7: nop word ptr [rax+rax]
0xbfcc: nop dword ptr [rax]
0xbfd0: mov rsi,qword ptr [rbx]
0xbfe0: test al,al
0xbfe2: jne 0xc000
0xbfe4: mov rbx,qword ptr [rbx+8]
0xbfe8: test rbx,rbx
0xbfeb: jne 0xbfd0
0xbff7: nop word ptr [rax+rax]
0xc000: mov rsi,qword ptr [rbx]
0xc003: pop rbx
0xc004: pop rbp
0xc005: mov rax,rsi
0xc008: pop r12
0xc00a: ret 
0xc00b: nop dword ptr [rax+rax]
0xc010: cmp qword ptr [rdi+0x20],0x0
0xc015: je 0xc043
0xc017: mov rdx,qword ptr [rdi]
0xc01a: mov rcx,qword ptr [rdi+8]
0xc01e: cmp rdx,rcx
0xc021: jae 0xc048
0xc023: mov rax,qword ptr [rdx]
0xc026: test rax,rax
0xc029: jne 0xc046
0xc02b: nop dword ptr [rax+rax]
0xc030: add rdx,0x10
0xc034: cmp rdx,rcx
0xc037: jae 0xc048
0xc039: mov rax,qword ptr [rdx]
0xc03c: test rax,rax
0xc03f: je 0xc030
0xc041: ret 
0xc043: xor eax,eax
0xc045: ret 
0xc046: ret 
0xc048: sub rsp,0x8
0xc04c: call 0x2940
0xc051: nop dword ptr [rax+rax]
0xc056: nop word ptr cs:[rax+rax]
0xc060: push rbp
0xc061: push rbx
0xc062: mov rbp,rdi
0xc065: mov rbx,rsi
0xc068: sub rsp,0x8
0xc06c: call 0xba70
0xc071: mov rdx,rax
0xc074: mov rcx,rax
0xc077: mov rax,qword ptr [rdx]
0xc07a: mov rdx,qword ptr [rdx+8]
0xc07e: cmp rax,rbx
0xc081: je 0xc099
0xc083: nop dword ptr [rax+rax]
0xc088: test rdx,rdx
0xc08b: je 0xc09e
0xc08d: mov rax,qword ptr [rdx]
0xc090: mov rdx,qword ptr [rdx+8]
0xc094: cmp rax,rbx
0xc097: jne 0xc088
0xc099: test rdx,rdx
0xc09c: jne 0xc0c8
0xc09e: mov rdx,qword ptr [rbp+8]
0xc0a2: jmp 0xc0b0
0xc0a4: nop dword ptr [rax]
0xc0a8: mov rax,qword ptr [rcx]
0xc0ab: test rax,rax
0xc0ae: jne 0xc0bb
0xc0b0: add rcx,0x10
0xc0b4: cmp rdx,rcx
0xc0b7: ja 0xc0a8
0xc0b9: xor eax,eax
0xc0bb: add rsp,0x8
0xc0bf: pop rbx
0xc0c0: pop rbp
0xc0c1: ret 
0xc0c2: nop word ptr [rax+rax]
0xc0c8: mov rax,qword ptr [rdx]
0xc0cb: add rsp,0x8
0xc0cf: pop rbx
0xc0d0: pop rbp
0xc0d1: ret 
0xc0d2: nop dword ptr [rax]
0xc0d6: nop word ptr cs:[rax+rax]
0xc0e0: mov r9,qword ptr [rdi]
0xc0e3: cmp qword ptr [rdi+8],r9
0xc0e7: jbe 0xc142
0xc0e9: xor r8d,r8d
0xc0ec: mov rcx,qword ptr [r9]
0xc0ef: test rcx,rcx
0xc0f2: je 0xc12d
0xc0f4: cmp rdx,r8
0xc0f7: jbe 0xc137
0xc0f9: mov qword ptr [rsi+r8*8],rcx
0xc0fd: mov rcx,qword ptr [r9+8]
0xc101: lea rax,[r8+1]
0xc105: test rcx,rcx
0xc108: je 0xc12a
0xc10a: nop word ptr [rax+rax]
0xc110: cmp rdx,rax
0xc113: je 0xc140
0xc115: mov r8,qword ptr [rcx]
0xc118: add rax,0x1
0xc11c: mov qword ptr [rsi+rax*8-8],r8
0xc121: mov rcx,qword ptr [rcx+8]
0xc125: test rcx,rcx
0xc128: jne 0xc110
0xc12a: mov r8,rax
0xc12d: add r9,0x10
0xc131: cmp qword ptr [rdi+8],r9
0xc135: ja 0xc0ec
0xc137: mov rax,r8
0xc13a: ret 
0xc13b: nop dword ptr [rax+rax]
0xc140: ret 
0xc142: xor eax,eax
0xc144: ret 
0xc145: nop 
0xc146: nop word ptr cs:[rax+rax]
0xc150: push r15
0xc152: push r14
0xc154: push r13
0xc156: push r12
0xc158: push rbp
0xc159: push rbx
0xc15a: sub rsp,0x8
0xc15e: mov r14,qword ptr [rdi]
0xc161: cmp qword ptr [rdi+8],r14
0xc165: jbe 0xc1b6
0xc167: mov r13,rdx
0xc16a: mov r12,rsi
0xc16d: mov r15,rdi
0xc170: xor ebp,ebp
0xc172: mov rdi,qword ptr [r14]
0xc175: test rdi,rdi
0xc178: je 0xc19a
0xc17a: mov rbx,r14
0xc17d: jmp 0xc183
0xc17f: nop 
0xc180: mov rdi,qword ptr [rbx]
0xc183: mov rsi,r13
0xc186: call r12
0xc189: test al,al
0xc18b: je 0xc1a4
0xc18d: mov rbx,qword ptr [rbx+8]
0xc191: add rbp,0x1
0xc195: test rbx,rbx
0xc198: jne 0xc180
0xc19a: add r14,0x10
0xc19e: cmp qword ptr [r15+8],r14
0xc1a2: ja 0xc172
0xc1a4: add rsp,0x8
0xc1a8: mov rax,rbp
0xc1ab: pop rbx
0xc1ac: pop rbp
0xc1ad: pop r12
0xc1af: pop r13
0xc1b1: pop r14
0xc1b3: pop r15
0xc1b5: ret 
0xc1b6: xor ebp,ebp
0xc1b8: jmp 0xc1a4
0xc1ba: nop word ptr [rax+rax]
0xc1c0: movzx ecx,byte ptr [rdi]
0xc1c3: xor edx,edx
0xc1c5: test cl,cl
0xc1c7: je 0xc1ed
0xc1c9: nop dword ptr [rax]
0xc1d0: mov rax,rdx
0xc1d3: add rdi,0x1
0xc1d7: shl rax,0x5
0xc1db: sub rax,rdx
0xc1de: xor edx,edx
0xc1e0: add rax,rcx
0xc1e3: movzx ecx,byte ptr [rdi]
0xc1e6: div rsi
0xc1e9: test cl,cl
0xc1eb: jne 0xc1d0
0xc1ed: mov rax,rdx
0xc1f0: ret 
0xc1f1: nop dword ptr [rax+rax]
0xc1f6: nop word ptr cs:[rax+rax]
0xc200: movabs rax,0x3f80000000000000
0xc20a: mov byte ptr [rdi+0x10],0x0
0xc20e: mov qword ptr [rdi],rax
0xc211: movabs rax,0x3fb4fdf43f4ccccd
0xc21b: mov qword ptr [rdi+8],rax
0xc21f: ret 
0xc27c: mov qword ptr [rax+0x28],r15
0xc280: call 0xbbc0
0xc285: test al,al
0xc287: je 0xc310
0xc28d: cmp byte ptr [r15+0x10],0x0
0xc292: je 0xc390
0xc30f: nop 
0xc32c: nop dword ptr [rax]
0xc38f: nop 
0xc390: test rbp,rbp
0xc393: movss xmm1,dword ptr [r15+8]
0xc399: jns 0xc351
0xc3b6: nop word ptr cs:[rax+rax]
0xc3d4: nop 
0xc3d6: nop word ptr cs:[rax+rax]
0xc3e0: push r12
0xc3e2: push rbp
0xc3e3: mov rbp,rdi
0xc3e6: push rbx
0xc3e7: mov r12,qword ptr [rdi]
0xc3ea: cmp r12,qword ptr [rdi+8]
0xc3ee: jae 0xc45b
0xc3f0: cmp qword ptr [r12],0x0
0xc3f5: je 0xc451
0xc3f7: mov rbx,qword ptr [r12+8]
0xc3fc: mov rax,qword ptr [rbp+0x40]
0xc400: test rbx,rbx
0xc403: je 0xc435
0xc405: nop dword ptr [rax]
0xc408: test rax,rax
0xc40b: je 0xc416
0xc40d: mov rdi,qword ptr [rbx]
0xc410: call rax
0xc412: mov rax,qword ptr [rbp+0x40]
0xc416: mov rdx,qword ptr [rbx+8]
0xc41a: mov rcx,qword ptr [rbp+0x48]
0xc41e: mov qword ptr [rbx],0x0
0xc425: test rdx,rdx
0xc428: mov qword ptr [rbx+8],rcx
0xc42c: mov qword ptr [rbp+0x48],rbx
0xc430: mov rbx,rdx
0xc433: jne 0xc408
0xc435: test rax,rax
0xc438: je 0xc440
0xc43a: mov rdi,qword ptr [r12]
0xc43e: call rax
0xc440: mov qword ptr [r12],0x0
0xc448: mov qword ptr [r12+8],0x0
0xc451: add r12,0x10
0xc455: cmp qword ptr [rbp+8],r12
0xc459: ja 0xc3f0
0xc45b: mov qword ptr [rbp+0x18],0x0
0xc463: mov qword ptr [rbp+0x20],0x0
0xc46b: pop rbx
0xc46c: pop rbp
0xc46d: pop r12
0xc46f: ret 
0xc470: push r12
0xc472: push rbp
0xc473: mov r12,rdi
0xc476: push rbx
0xc477: cmp qword ptr [rdi+0x40],0x0
0xc47c: mov rbp,qword ptr [rdi]
0xc47f: mov rax,qword ptr [rdi+8]
0xc483: je 0xc4d3
0xc485: cmp qword ptr [rdi+0x20],0x0
0xc48a: je 0xc4d3
0xc48c: cmp rbp,rax
0xc48f: jae 0xc50c
0xc491: nop dword ptr [rax]
0xc498: mov rdi,qword ptr [rbp]
0xc49c: test rdi,rdi
0xc49f: je 0xc4c6
0xc4a1: mov rbx,rbp
0xc4a4: jmp 0xc4b3
0xc4a6: nop word ptr cs:[rax+rax]
0xc4b0: mov rdi,qword ptr [rbx]
0xc4b3: call qword ptr [r12+0x40]
0xc4b8: mov rbx,qword ptr [rbx+8]
0xc4bc: test rbx,rbx
0xc4bf: jne 0xc4b0
0xc4c1: mov rax,qword ptr [r12+8]
0xc4c6: add rbp,0x10
0xc4ca: cmp rax,rbp
0xc4cd: ja 0xc498
0xc4cf: mov rbp,qword ptr [r12]
0xc4d3: cmp rbp,rax
0xc4d6: jae 0xc50c
0xc4d8: nop dword ptr [rax+rax]
0xc4e0: mov rdi,qword ptr [rbp+8]
0xc4e4: test rdi,rdi
0xc4e7: je 0xc501
0xc4e9: nop dword ptr [rax]
0xc4f0: mov rbx,qword ptr [rdi+8]
0xc4f4: call 0x30d0
0xc4f9: test rbx,rbx
0xc4fc: mov rdi,rbx
0xc4ff: jne 0xc4f0
0xc501: add rbp,0x10
0xc505: cmp qword ptr [r12+8],rbp
0xc50a: ja 0xc4e0
0xc50c: mov rdi,qword ptr [r12+0x48]
0xc511: test rdi,rdi
0xc514: je 0xc531
0xc516: nop word ptr cs:[rax+rax]
0xc520: mov rbx,qword ptr [rdi+8]
0xc524: call 0x30d0
0xc529: test rbx,rbx
0xc52c: mov rdi,rbx
0xc52f: jne 0xc520
0xc531: mov rdi,qword ptr [r12]
0xc535: call 0x30d0
0xc53a: pop rbx
0xc53b: mov rdi,r12
0xc53e: pop rbp
0xc53f: pop r12
0xc541: jmp 0x30d0
0xc546: nop word ptr cs:[rax+rax]
0xc6cf: nop 
0xc6f1: nop dword ptr [rax]
0xc716: nop word ptr cs:[rax+rax]
0xc72a: nop word ptr [rax+rax]
0xc737: nop word ptr [rax+rax]
0xc77a: call 0x2b30
0xc78e: nop 
0xc7fb: nop dword ptr [rax+rax]
0xc87e: nop 
0xc8c8: nop dword ptr [rax+rax]
0xc972: nop word ptr [rax+rax]
0xc9ad: nop dword ptr [rax]
0xc9ce: nop 
0xc9ee: nop 
0xca0f: call 0x2b30
0xca14: nop 
0xca16: nop word ptr cs:[rax+rax]
0xca66: nop word ptr cs:[rax+rax]
0xca74: call 0x2b30
0xca79: nop dword ptr [rax]
0xcadf: nop 
0xcbc6: nop word ptr cs:[rax+rax]
0xcbee: nop 
0xcc0e: nop 
0xcc2f: nop 
0xcc3a: nop word ptr [rax+rax]
0xcc5e: nop 
0xcc7e: call 0x2b30
0xcc83: nop word ptr cs:[rax+rax]
0xcc8d: nop dword ptr [rax]
0xcc90: push rbp
0xcc91: push rbx
0xcc92: mov rbp,rdi
0xcc95: mov rbx,rsi
0xcc98: sub rsp,0x8
0xcc9c: mov rdi,qword ptr [rdi]
0xcc9f: call 0x12fa0
0xcca4: xor rax,qword ptr [rbp+8]
0xcca8: xor edx,edx
0xccaa: add rsp,0x8
0xccae: div rbx
0xccb1: pop rbx
0xccb2: pop rbp
0xccb3: mov rax,rdx
0xccb6: ret 
0xccb7: nop word ptr [rax+rax]
0xccc0: mov rax,qword ptr [rdi+8]
0xccc4: xor edx,edx
0xccc6: div rsi
0xccc9: mov rax,rdx
0xcccc: ret 
0xcccd: nop dword ptr [rax]
0xccd0: xor eax,eax
0xccd2: mov rdx,qword ptr [rsi+8]
0xccd6: cmp qword ptr [rdi+8],rdx
0xccda: je 0xcce0
0xccdc: ret 
0xccde: nop 
0xcce0: mov rcx,qword ptr [rsi+0x10]
0xcce4: cmp qword ptr [rdi+0x10],rcx
0xcce8: jne 0xccdc
0xccea: sub rsp,0x8
0xccee: mov rsi,qword ptr [rsi]
0xccf1: mov rdi,qword ptr [rdi]
0xccf4: call 0xfbe0
0xccf9: add rsp,0x8
0xccfd: ret 
0xccfe: nop 
0xcd00: xor eax,eax
0xcd02: mov rdx,qword ptr [rsi+8]
0xcd06: cmp qword ptr [rdi+8],rdx
0xcd0a: je 0xcd10
0xcd0c: ret 
0xcd0e: nop 
0xcd10: mov rcx,qword ptr [rsi+0x10]
0xcd14: cmp qword ptr [rdi+0x10],rcx
0xcd18: jne 0xcd0c
0xcd1a: sub rsp,0x8
0xcd1e: mov rsi,qword ptr [rsi]
0xcd21: mov rdi,qword ptr [rdi]
0xcd24: call 0x2cf0
0xcd29: test eax,eax
0xcd2b: sete al
0xcd2e: add rsp,0x8
0xcd32: ret 
0xcd33: nop dword ptr [rax]
0xcd36: nop word ptr cs:[rax+rax]
0xcd55: nop word ptr cs:[rax+rax]
0xcd5f: nop 
0xce4d: nop dword ptr [rax]
0xce5c: nop dword ptr [rax]
0xce84: nop dword ptr [rax]
0xcec8: nop dword ptr [rax+rax]
0xd047: jmp 0xd09d
0xd049: nop dword ptr [rax]
0xd050: mov qword ptr [rsp],rbx
0xd054: jmp 0xcf50
0xd059: nop dword ptr [rax]
0xd0c9: nop dword ptr [rax]
0xd127: nop word ptr [rax+rax]
0xd13f: nop 
0xd21b: jmp 0xd09d
0xd236: nop word ptr cs:[rax+rax]
0xd259: nop dword ptr [rax]
0xd272: nop word ptr [rax+rax]
0xd285: call 0x2b30
0xd299: nop dword ptr [rax]
0xd364: nop dword ptr [rax]
0xd36f: nop 
0xd398: nop dword ptr [rax+rax]
0xd3bf: nop 
0xd4aa: nop word ptr [rax+rax]
0xd4d7: nop word ptr [rax+rax]
0xd512: nop word ptr [rax+rax]
0xd51e: nop 
0xd526: nop word ptr cs:[rax+rax]
0xd539: nop dword ptr [rax]
0xd549: nop dword ptr [rax]
0xd559: nop dword ptr [rax]
0xd56b: nop dword ptr [rax+rax]
0xd57f: nop 
0xd58f: nop 
0xd599: nop dword ptr [rax]
0xd5a9: nop dword ptr [rax]
0xd5b9: nop dword ptr [rax]
0xd61e: nop 
0xd649: nop dword ptr [rax]
0xd650: push rbx
0xd651: mov rsi,rdi
0xd654: mov edi,0x1
0xd659: sub rsp,0xa0
0xd660: mov rdx,rsp
0xd663: mov rax,qword ptr fs:[0x28]
0xd66c: mov qword ptr [rsp+0x98],rax
0xd674: xor eax,eax
0xd676: call 0x2dd0
0xd67b: test eax,eax
0xd67d: jne 0xd6d0
0xd67f: mov ebx,dword ptr [rsp+0x18]
0xd683: mov edi,0x20
0xd688: call 0x12010
0xd68d: mov edx,0x13d
0xd692: mov dword ptr [rax+4],0xfff
0xd699: mov dword ptr [rax+0xc],0xfff
0xd6a0: mov word ptr [rax],dx
0xd6a3: mov dword ptr [rax+8],ebx
0xd6a6: mov byte ptr [rax+0x11],0x0
0xd6aa: mov rcx,qword ptr [rsp+0x98]
0xd6b2: xor rcx,qword ptr fs:[0x28]
0xd6bb: jne 0xd6d4
0xd6bd: add rsp,0xa0
0xd6c4: pop rbx
0xd6c5: ret 
0xd6c6: nop word ptr cs:[rax+rax]
0xd6d0: xor eax,eax
0xd6d2: jmp 0xd6aa
0xd6d4: call 0x2b30
0xd6d9: nop dword ptr [rax]
0xd809: nop dword ptr [rax]
0xd827: nop word ptr [rax+rax]
0xd83c: nop dword ptr [rax]
0xd84d: nop dword ptr [rax]
0xd891: nop dword ptr [rax]
0xd8bc: nop dword ptr [rax]
0xd96f: nop 
0xd9d5: nop dword ptr [rax]
0xd9d8: mov ebp,0xfffffffe
0xd9dd: jmp 0xd9ba
0xd9df: call 0x2b30
0xd9e4: nop word ptr cs:[rax+rax]
0xd9ee: nop 
0xda3f: call 0x2b30
0xda44: nop word ptr cs:[rax+rax]
0xda4e: nop 
0xda8c: nop dword ptr [rax]
0xdadd: nop dword ptr [rax]
0xdb37: nop word ptr [rax+rax]
0xddf7: nop word ptr [rax+rax]
0xde2e: nop 
0xde51: nop dword ptr [rax]
0xde7b: mov ebx,edx
0xde7d: xor r12d,r12d
0xde80: xor eax,eax
0xde92: nop word ptr [rax+rax]
0xdea4: nop dword ptr [rax]
0xdf48: nop dword ptr [rax+rax]
0xdf71: nop dword ptr [rax]
0xdf87: nop word ptr [rax+rax]
0xdf9f: nop 
0xdfce: nop 
0xdfdd: nop dword ptr [rax]
0xdfef: nop 
0xdfff: nop 
0xe00f: nop 
0xe01f: nop 
0xe02f: nop 
0xe09c: nop dword ptr [rax]
0xe0bc: nop dword ptr [rax]
0xe0df: nop 
0xe0f2: nop word ptr [rax+rax]
0xe10a: nop word ptr [rax+rax]
0xe11a: nop word ptr [rax+rax]
0xe1bb: nop dword ptr [rax+rax]
0xe1d5: nop dword ptr [rax]
0xe1e8: nop dword ptr [rax+rax]
0xe203: nop dword ptr [rax+rax]
0xe232: nop word ptr [rax+rax]
0xe242: nop word ptr [rax+rax]
0xe25a: nop word ptr [rax+rax]
0xe26a: nop word ptr [rax+rax]
0xe278: nop dword ptr [rax+rax]
0xe29f: nop 
0xe339: nop dword ptr [rax]
0xe382: nop word ptr [rax+rax]
0xe3c1: nop dword ptr [rax]
0xe3e2: nop word ptr [rax+rax]
0xe548: nop dword ptr [rax+rax]
0xe65b: nop dword ptr [rax+rax]
0xe67e: nop 
0xe745: nop dword ptr [rax]
0xe7fd: nop dword ptr [rax]
0xea06: nop word ptr cs:[rax+rax]
0xea99: nop dword ptr [rax]
0xebed: nop dword ptr [rax]
0xed33: call 0x2b30
0xed74: nop 
0xed76: nop word ptr cs:[rax+rax]
0xeefb: nop dword ptr [rax+rax]
0xef2b: nop dword ptr [rax+rax]
0xef30: push r12
0xef32: push rbp
0xef33: push rbx
0xef34: mov rbx,rdi
0xef37: call 0x2950
0xef3c: mov r12d,dword ptr [rax]
0xef3f: mov rbp,rax
0xef42: lea rax,[rip+0x210797]
0xef49: test rbx,rbx
0xef4c: mov esi,0x38
0xef51: cmove rbx,rax
0xef55: mov rdi,rbx
0xef58: call 0x12210
0xef5d: mov dword ptr [rbp],r12d
0xef61: pop rbx
0xef62: pop rbp
0xef63: pop r12
0xef65: ret 
0xef66: nop word ptr cs:[rax+rax]
0xef70: lea rax,[rip+0x210769]
0xef77: test rdi,rdi
0xef7a: cmove rdi,rax
0xef7e: mov eax,dword ptr [rdi]
0xef80: ret 
0xef81: nop dword ptr [rax+rax]
0xef86: nop word ptr cs:[rax+rax]
0xef90: lea rax,[rip+0x210749]
0xef97: test rdi,rdi
0xef9a: cmove rdi,rax
0xef9e: mov dword ptr [rdi],esi
0xefa0: ret 
0xefa1: nop dword ptr [rax+rax]
0xefa6: nop word ptr cs:[rax+rax]
0xefb0: lea rax,[rip+0x210729]
0xefb7: test rdi,rdi
0xefba: mov ecx,esi
0xefbc: cmove rdi,rax
0xefc0: mov eax,esi
0xefc2: and ecx,0x1f
0xefc5: shr al,0x5
0xefc8: movzx eax,al
0xefcb: lea rdi,[rdi+rax*4+8]
0xefd0: mov esi,dword ptr [rdi]
0xefd2: mov eax,esi
0xefd4: shr eax,cl
0xefd6: xor edx,eax
0xefd8: and eax,0x1
0xefdb: and edx,0x1
0xefde: shl edx,cl
0xefe0: xor edx,esi
0xefe2: mov dword ptr [rdi],edx
0xefe4: ret 
0xefe5: nop 
0xefe6: nop word ptr cs:[rax+rax]
0xeff0: lea rax,[rip+0x2106e9]
0xeff7: test rdi,rdi
0xeffa: cmove rdi,rax
0xeffe: mov eax,dword ptr [rdi+4]
0xf001: mov dword ptr [rdi+4],esi
0xf004: ret 
0xf005: nop 
0xf006: nop word ptr cs:[rax+rax]
0xf010: lea rax,[rip+0x2106c9]
0xf017: test rdi,rdi
0xf01a: cmove rdi,rax
0xf01e: test rsi,rsi
0xf021: mov dword ptr [rdi],0xa
0xf027: je 0xf037
0xf029: test rdx,rdx
0xf02c: je 0xf037
0xf02e: mov qword ptr [rdi+0x28],rsi
0xf032: mov qword ptr [rdi+0x30],rdx
0xf036: ret 
0xf037: sub rsp,0x8
0xf03b: call 0x2940
0xf040: push r15
0xf042: push r14
0xf044: lea rax,[rip+0x210695]
0xf04b: push r13
0xf04d: push r12
0xf04f: mov r13,rdi
0xf052: push rbp
0xf053: push rbx
0xf054: mov rbx,r8
0xf057: mov r14,rsi
0xf05a: mov r15,rdx
0xf05d: sub rsp,0x18
0xf061: test r8,r8
0xf064: cmove rbx,rax
0xf068: mov qword ptr [rsp+8],rcx
0xf06d: call 0x2950
0xf072: mov r12d,dword ptr [rax]
0xf075: mov rbp,rax
0xf078: lea rax,[rbx+8]
0xf07c: sub rsp,0x8
0xf080: mov r9d,dword ptr [rbx+4]
0xf084: push qword ptr [rbx+0x30]
0xf087: mov r8d,dword ptr [rbx]
0xf08a: push qword ptr [rbx+0x28]
0xf08d: mov rdx,r15
0xf090: push rax
0xf091: mov rcx,qword ptr [rsp+0x28]
0xf096: mov rsi,r14
0xf099: mov rdi,r13
0xf09c: call 0xdb40
0xf0a1: mov dword ptr [rbp],r12d
0xf0a5: add rsp,0x38
0xf0a9: pop rbx
0xf0aa: pop rbp
0xf0ab: pop r12
0xf0ad: pop r13
0xf0af: pop r14
0xf0b1: pop r15
0xf0b3: ret 
0xf0b4: nop 
0xf0b6: nop word ptr cs:[rax+rax]
0xf0c0: push r15
0xf0c2: push r14
0xf0c4: lea rax,[rip+0x210615]
0xf0cb: push r13
0xf0cd: push r12
0xf0cf: mov r12,rdx
0xf0d2: push rbp
0xf0d3: push rbx
0xf0d4: mov rbx,rcx
0xf0d7: mov r14,rdi
0xf0da: mov r15,rsi
0xf0dd: sub rsp,0x38
0xf0e1: test rcx,rcx
0xf0e4: cmove rbx,rax
0xf0e8: xor ebp,ebp
0xf0ea: call 0x2950
0xf0ef: test r12,r12
0xf0f2: mov r13,rax
0xf0f5: mov eax,dword ptr [rax]
0xf0f7: sete bpl
0xf0fb: or ebp,dword ptr [rbx+4]
0xf0fe: lea r10,[rbx+8]
0xf102: sub rsp,0x8
0xf106: mov r8d,dword ptr [rbx]
0xf109: mov rcx,r15
0xf10c: mov dword ptr [rsp+0x14],eax
0xf110: push qword ptr [rbx+0x30]
0xf113: mov rdx,r14
0xf116: push qword ptr [rbx+0x28]
0xf119: push r10
0xf11b: xor esi,esi
0xf11d: mov r9d,ebp
0xf120: xor edi,edi
0xf122: mov qword ptr [rsp+0x40],r10
0xf127: call 0xdb40
0xf12c: lea rsi,[rax+1]
0xf130: mov qword ptr [rsp+0x48],rax
0xf135: add rsp,0x20
0xf139: mov rdi,rsi
0xf13c: mov qword ptr [rsp+0x18],rsi
0xf141: call 0x12010
0xf146: mov qword ptr [rsp+0x10],rax
0xf14b: sub rsp,0x8
0xf14f: push qword ptr [rbx+0x30]
0xf152: push qword ptr [rbx+0x28]
0xf155: mov r10,qword ptr [rsp+0x38]
0xf15a: mov r9d,ebp
0xf15d: mov r8d,dword ptr [rbx]
0xf160: mov rcx,r15
0xf163: mov rdx,r14
0xf166: mov rdi,rax
0xf169: push r10
0xf16b: mov rsi,qword ptr [rsp+0x38]
0xf170: call 0xdb40
0xf175: mov eax,dword ptr [rsp+0x2c]
0xf179: add rsp,0x20
0xf17d: test r12,r12
0xf180: mov dword ptr [r13],eax
0xf184: je 0xf18f
0xf186: mov r11,qword ptr [rsp+0x28]
0xf18b: mov qword ptr [r12],r11
0xf18f: mov rax,qword ptr [rsp+0x10]
0xf194: add rsp,0x38
0xf198: pop rbx
0xf199: pop rbp
0xf19a: pop r12
0xf19c: pop r13
0xf19e: pop r14
0xf1a0: pop r15
0xf1a2: ret 
0xf1a3: nop dword ptr [rax]
0xf1a6: nop word ptr cs:[rax+rax]
0xf1b0: mov rcx,rdx
0xf1b3: xor edx,edx
0xf1b5: jmp 0xf0c0
0xf1ba: nop word ptr [rax+rax]
0xf1c0: mov eax,dword ptr [rip+0x20ded2]
0xf1c6: push r12
0xf1c8: mov r12,qword ptr [rip+0x20ded1]
0xf1cf: push rbp
0xf1d0: push rbx
0xf1d1: cmp eax,0x1
0xf1d4: jle 0xf201
0xf1d6: sub eax,0x2
0xf1d9: lea rbx,[r12+0x18]
0xf1de: shl rax,0x4
0xf1e2: lea rbp,[r12+rax+0x28]
0xf1e7: nop word ptr [rax+rax]
0xf1f0: mov rdi,qword ptr [rbx]
0xf1f3: add rbx,0x10
0xf1f7: call 0x30d0
0xf1fc: cmp rbx,rbp
0xf1ff: jne 0xf1f0
0xf201: mov rdi,qword ptr [r12+8]
0xf206: lea rbx,[rip+0x2103d3]
0xf20d: cmp rdi,rbx
0xf210: je 0xf229
0xf212: call 0x30d0
0xf217: mov qword ptr [rip+0x20de8e],0x100
0xf222: mov qword ptr [rip+0x20de8f],rbx
0xf229: lea rbx,[rip+0x20de80]
0xf230: cmp r12,rbx
0xf233: je 0xf244
0xf235: mov rdi,r12
0xf238: call 0x30d0
0xf23d: mov qword ptr [rip+0x20de5c],rbx
0xf244: pop rbx
0xf245: mov dword ptr [rip+0x20de49],0x1
0xf24f: pop rbp
0xf250: pop r12
0xf252: ret 
0xf253: nop dword ptr [rax]
0xf256: nop word ptr cs:[rax+rax]
0xf260: lea rcx,[rip+0x210479]
0xf267: mov rdx,0xffffffffffffffff
0xf26e: jmp 0xed80
0xf273: nop dword ptr [rax]
0xf276: nop word ptr cs:[rax+rax]
0xf280: lea rcx,[rip+0x210459]
0xf287: jmp 0xed80
0xf28c: nop dword ptr [rax]
0xf290: lea rcx,[rip+0x210449]
0xf297: mov rsi,rdi
0xf29a: mov rdx,0xffffffffffffffff
0xf2a1: xor edi,edi
0xf2a3: jmp 0xed80
0xf2a8: nop dword ptr [rax+rax]
0xf2b0: lea rcx,[rip+0x210429]
0xf2b7: mov rdx,rsi
0xf2ba: mov rsi,rdi
0xf2bd: xor edi,edi
0xf2bf: jmp 0xed80
0xf2c4: nop 
0xf2c6: nop word ptr cs:[rax+rax]
0xf359: call 0x2b30
0xf35e: nop 
0xf360: sub rsp,0x48
0xf364: mov rax,rdx
0xf367: mov rdx,rcx
0xf36a: mov rcx,qword ptr fs:[0x28]
0xf373: mov qword ptr [rsp+0x38],rcx
0xf378: xor ecx,ecx
0xf37a: cmp esi,0xa
0xf37d: je 0xf3e0
0xf37f: mov dword ptr [rsp],esi
0xf382: mov rcx,rsp
0xf385: mov rsi,rax
0xf388: mov qword ptr [rsp+4],0x0
0xf391: mov qword ptr [rsp+0xc],0x0
0xf39a: mov qword ptr [rsp+0x14],0x0
0xf3a3: mov qword ptr [rsp+0x1c],0x0
0xf3ac: mov qword ptr [rsp+0x24],0x0
0xf3b5: mov qword ptr [rsp+0x2c],0x0
0xf3be: mov dword ptr [rsp+0x34],0x0
0xf3c6: call 0xed80
0xf3cb: mov rdx,qword ptr [rsp+0x38]
0xf3d0: xor rdx,qword ptr fs:[0x28]
0xf3d9: jne 0xf3e5
0xf3db: add rsp,0x48
0xf3df: ret 
0xf3e0: call 0x2940
0xf3e5: call 0x2b30
0xf3ea: nop word ptr [rax+rax]
0xf3fc: nop dword ptr [rax]
0xf400: mov rcx,rdx
0xf403: mov rdx,rsi
0xf406: mov esi,edi
0xf408: xor edi,edi
0xf40a: jmp 0xf360
0xf40f: nop 
0xf410: sub rsp,0x48
0xf414: mov ecx,edx
0xf416: mov rax,qword ptr fs:[0x28]
0xf41f: mov qword ptr [rsp+0x38],rax
0xf424: xor eax,eax
0xf426: mov rax,qword ptr [rip+0x2102e3]
0xf42d: mov r8,rsp
0xf430: and ecx,0x1f
0xf433: movdqa xmm0,[rip+0x2102a5]
0xf43b: mov qword ptr [rsp+0x30],rax
0xf440: mov eax,edx
0xf442: movaps xmmword ptr [rsp],xmm0
0xf446: shr al,0x5
0xf449: movzx eax,al
0xf44c: lea r9,[r8+rax*4+8]
0xf451: movdqa xmm0,[rip+0x210297]
0xf459: movaps xmmword ptr [rsp+0x10],xmm0
0xf45e: movdqa xmm0,[rip+0x21029a]
0xf466: movaps xmmword ptr [rsp+0x20],xmm0
0xf46b: mov edx,dword ptr [r9]
0xf46e: mov eax,edx
0xf470: shr eax,cl
0xf472: not eax
0xf474: and eax,0x1
0xf477: shl eax,cl
0xf479: mov rcx,r8
0xf47c: xor eax,edx
0xf47e: mov rdx,rsi
0xf481: mov rsi,rdi
0xf484: mov dword ptr [r9],eax
0xf487: xor edi,edi
0xf489: call 0xed80
0xf48e: mov rsi,qword ptr [rsp+0x38]
0xf493: xor rsi,qword ptr fs:[0x28]
0xf49c: jne 0xf4a3
0xf49e: add rsp,0x48
0xf4a2: ret 
0xf4a3: call 0x2b30
0xf4a8: nop dword ptr [rax+rax]
0xf4b0: movsx edx,sil
0xf4b4: mov rsi,0xffffffffffffffff
0xf4bb: jmp 0xf410
0xf4c0: mov edx,0x3a
0xf4c5: mov rsi,0xffffffffffffffff
0xf4cc: jmp 0xf410
0xf4d1: nop dword ptr [rax+rax]
0xf4d6: nop word ptr cs:[rax+rax]
0xf4e0: mov edx,0x3a
0xf4e5: jmp 0xf410
0xf4ea: nop word ptr [rax+rax]
0xf4f0: sub rsp,0x48
0xf4f4: mov rax,rdx
0xf4f7: mov rdx,qword ptr fs:[0x28]
0xf500: mov qword ptr [rsp+0x38],rdx
0xf505: xor edx,edx
0xf507: cmp esi,0xa
0xf50a: je 0xf574
0xf50c: mov dword ptr [rsp],esi
0xf50f: mov rcx,rsp
0xf512: mov rdx,0xffffffffffffffff
0xf519: mov rsi,rax
0xf51c: mov qword ptr [rsp+4],0x0
0xf525: mov qword ptr [rsp+0xc],0x4000000
0xf52e: mov qword ptr [rsp+0x14],0x0
0xf537: mov qword ptr [rsp+0x1c],0x0
0xf540: mov qword ptr [rsp+0x24],0x0
0xf549: mov qword ptr [rsp+0x2c],0x0
0xf552: mov dword ptr [rsp+0x34],0x0
0xf55a: call 0xed80
0xf55f: mov rcx,qword ptr [rsp+0x38]
0xf564: xor rcx,qword ptr fs:[0x28]
0xf56d: jne 0xf579
0xf56f: add rsp,0x48
0xf573: ret 
0xf574: call 0x2940
0xf579: call 0x2b30
0xf57e: nop 
0xf580: sub rsp,0x48
0xf584: mov r9,rcx
0xf587: mov rcx,qword ptr [rip+0x210182]
0xf58e: movdqa xmm0,[rip+0x21014a]
0xf596: mov rax,qword ptr fs:[0x28]
0xf59f: mov qword ptr [rsp+0x38],rax
0xf5a4: xor eax,eax
0xf5a6: movaps xmmword ptr [rsp],xmm0
0xf5aa: test rsi,rsi
0xf5ad: mov qword ptr [rsp+0x30],rcx
0xf5b2: mov dword ptr [rsp],0xa
0xf5b9: movdqa xmm0,[rip+0x21012f]
0xf5c1: movaps xmmword ptr [rsp+0x10],xmm0
0xf5c6: movdqa xmm0,[rip+0x210132]
0xf5ce: movaps xmmword ptr [rsp+0x20],xmm0
0xf5d3: je 0xf607
0xf5d5: test rdx,rdx
0xf5d8: je 0xf607
0xf5da: mov qword ptr [rsp+0x28],rsi
0xf5df: mov qword ptr [rsp+0x30],rdx
0xf5e4: mov rcx,rsp
0xf5e7: mov rdx,r8
0xf5ea: mov rsi,r9
0xf5ed: call 0xed80
0xf5f2: mov rdi,qword ptr [rsp+0x38]
0xf5f7: xor rdi,qword ptr fs:[0x28]
0xf600: jne 0xf60c
0xf602: add rsp,0x48
0xf606: ret 
0xf607: call 0x2940
0xf60c: call 0x2b30
0xf611: nop dword ptr [rax+rax]
0xf616: nop word ptr cs:[rax+rax]
0xf620: mov r8,0xffffffffffffffff
0xf627: jmp 0xf580
0xf62c: nop dword ptr [rax]
0xf630: mov rcx,rdx
0xf633: mov r8,0xffffffffffffffff
0xf63a: mov rdx,rsi
0xf63d: mov rsi,rdi
0xf640: xor edi,edi
0xf642: jmp 0xf580
0xf647: nop word ptr [rax+rax]
0xf650: mov r8,rcx
0xf653: mov rcx,rdx
0xf656: mov rdx,rsi
0xf659: mov rsi,rdi
0xf65c: xor edi,edi
0xf65e: jmp 0xf580
0xf663: nop dword ptr [rax]
0xf666: nop word ptr cs:[rax+rax]
0xf670: lea rcx,[rip+0x20d9e9]
0xf677: jmp 0xed80
0xf67c: nop dword ptr [rax]
0xf680: lea rcx,[rip+0x20d9d9]
0xf687: mov rdx,rsi
0xf68a: mov rsi,rdi
0xf68d: xor edi,edi
0xf68f: jmp 0xed80
0xf694: nop 
0xf696: nop word ptr cs:[rax+rax]
0xf6b3: nop dword ptr [rax]
0xf6b6: nop word ptr cs:[rax+rax]
0xf6d8: nop dword ptr [rax+rax]
0xf766: nop word ptr cs:[rax+rax]
0xf7dd: nop dword ptr [rax]
0xf7f7: nop word ptr [rax+rax]
0xf894: nop dword ptr [rax]
0xf8f1: nop dword ptr [rax]
0xf945: call 0x2b30
0xf94a: nop word ptr [rax+rax]
0xf99f: nop 
0xf9ae: nop 
0xf9ff: nop 
0xfa0e: nop 
0xfae4: nop dword ptr [rax]
0xfb05: jmp 0xfa98
0xfb07: nop word ptr [rax+rax]
0xfb2d: jmp 0xfa64
0xfb32: call 0x2b30
0xfb37: nop word ptr [rax+rax]
0xfb9a: nop word ptr [rax+rax]
0xfbd2: nop dword ptr [rax]
0xfbd6: nop word ptr cs:[rax+rax]
0xfbf2: nop word ptr cs:[rax+rax]
0xfbfc: nop dword ptr [rax]
0xfc00: mov rax,qword ptr [rsi+8]
0xfc04: cmp qword ptr [rdi+8],rax
0xfc08: jb 0xfc18
0xfc0a: seta al
0xfc0d: movzx eax,al
0xfc10: ret 
0xfc11: nop dword ptr [rax]
0xfc18: mov eax,0xffffffff
0xfc1d: ret 
0xfc1e: nop 
0xfc20: mov rsi,qword ptr [rsi]
0xfc23: mov rdi,qword ptr [rdi]
0xfc26: jmp 0x2cf0
0xfc2b: nop dword ptr [rax+rax]
0xfc30: push r15
0xfc32: lea rax,[rip+0x20cd87]
0xfc39: push r14
0xfc3b: push r13
0xfc3d: push r12
0xfc3f: mov esi,esi
0xfc41: push rbp
0xfc42: push rbx
0xfc43: sub rsp,0x48
0xfc47: mov rax,qword ptr [rax+rsi*8]
0xfc4b: test rdi,rdi
0xfc4e: mov qword ptr [rsp+8],rax
0xfc53: je 0xff5d
0xfc59: mov rbx,rdi
0xfc5c: xor r14d,r14d
0xfc5f: xor r12d,r12d
0xfc62: call 0x2950
0xfc67: xor r13d,r13d
0xfc6a: mov rbp,rax
0xfc6d: mov qword ptr [rsp+0x28],0x0
0xfc76: mov qword ptr [rsp+0x10],0x0
0xfc7f: mov qword ptr [rsp+0x20],0x0
0xfc88: jmp 0xfc94
0xfc8a: nop word ptr [rax+rax]
0xfc90: test al,al
0xfc92: jne 0xfcc9
0xfc94: mov dword ptr [rbp],0x0
0xfc9b: mov rdi,rbx
0xfc9e: call 0x2de0
0xfca3: test rax,rax
0xfca6: mov rcx,rax
0xfca9: je 0xfd50
0xfcaf: lea r15,[rax+0x13]
0xfcb3: movzx eax,byte ptr [rax+0x13]
0xfcb7: cmp al,0x2e
0xfcb9: jne 0xfc90
0xfcbb: cmp byte ptr [rcx+0x14],0x2e
0xfcbf: je 0xfd40
0xfcc1: movzx eax,byte ptr [rcx+0x14]
0xfcc5: test al,al
0xfcc7: je 0xfc94
0xfcc9: mov rdi,r15
0xfccc: mov qword ptr [rsp+0x30],rcx
0xfcd1: call 0x2af0
0xfcd6: add rax,0x1
0xfcda: cmp qword ptr [rsp+8],0x0
0xfce0: mov qword ptr [rsp+0x18],rax
0xfce5: je 0xfe28
0xfceb: cmp r12,qword ptr [rsp+0x28]
0xfcf0: lea rax,[r12+1]
0xfcf5: mov rcx,qword ptr [rsp+0x30]
0xfcfa: mov qword ptr [rsp+0x38],rax
0xfcff: je 0xfeb1
0xfd05: shl r12,0x4
0xfd09: mov rdi,r15
0xfd0c: add r12,qword ptr [rsp+0x10]
0xfd11: mov qword ptr [rsp+0x30],rcx
0xfd16: call 0x12240
0xfd1b: mov rcx,qword ptr [rsp+0x30]
0xfd20: add r14,qword ptr [rsp+0x18]
0xfd25: mov qword ptr [r12],rax
0xfd29: mov rax,qword ptr [rcx]
0xfd2c: mov qword ptr [r12+8],rax
0xfd31: mov r12,qword ptr [rsp+0x38]
0xfd36: jmp 0xfc94
0xfd3b: nop dword ptr [rax+rax]
0xfd40: movzx eax,byte ptr [rcx+0x15]
0xfd44: jmp 0xfc90
0xfd49: nop dword ptr [rax]
0xfd50: mov ebx,dword ptr [rbp]
0xfd53: test ebx,ebx
0xfd55: jne 0xff40
0xfd5b: cmp qword ptr [rsp+8],0x0
0xfd61: je 0xfe10
0xfd67: test r12,r12
0xfd6a: lea rbx,[r14+1]
0xfd6e: jne 0xfda0
0xfd70: mov rdi,rbx
0xfd73: call 0x12010
0xfd78: mov r13,rax
0xfd7b: mov rbx,rax
0xfd7e: mov rdi,qword ptr [rsp+0x10]
0xfd83: call 0x30d0
0xfd88: mov byte ptr [rbx],0x0
0xfd8b: add rsp,0x48
0xfd8f: mov rax,r13
0xfd92: pop rbx
0xfd93: pop rbp
0xfd94: pop r12
0xfd96: pop r13
0xfd98: pop r14
0xfd9a: pop r15
0xfd9c: ret 
0xfd9d: nop dword ptr [rax]
0xfda0: mov r15,qword ptr [rsp+0x10]
0xfda5: mov rcx,qword ptr [rsp+8]
0xfdaa: mov rsi,r12
0xfdad: mov edx,0x10
0xfdb2: shl r12,0x4
0xfdb6: mov rdi,r15
0xfdb9: mov rbp,r15
0xfdbc: add r12,r15
0xfdbf: call 0x29e0
0xfdc4: mov rdi,rbx
0xfdc7: xor ebx,ebx
0xfdc9: call 0x12010
0xfdce: mov r13,rax
0xfdd1: nop dword ptr [rax]
0xfdd8: mov rsi,qword ptr [rbp]
0xfddc: lea r14,[r13+rbx]
0xfde1: add rbp,0x10
0xfde5: mov rdi,r14
0xfde8: call 0x2ab0
0xfded: mov rdi,qword ptr [rbp-0x10]
0xfdf1: sub rax,r14
0xfdf4: lea rbx,[rbx+rax+1]
0xfdf9: call 0x30d0
0xfdfe: cmp r12,rbp
0xfe01: jne 0xfdd8
0xfe03: add rbx,r13
0xfe06: jmp 0xfd7e
0xfe0b: nop dword ptr [rax+rax]
0xfe10: cmp qword ptr [rsp+0x20],r14
0xfe15: je 0xff03
0xfe1b: lea rbx,[r13+r14]
0xfe20: jmp 0xfd88
0xfe25: nop dword ptr [rax]
0xfe28: mov rsi,qword ptr [rsp+0x18]
0xfe2d: mov rax,qword ptr [rsp+0x20]
0xfe32: mov rdx,rsi
0xfe35: sub rax,r14
0xfe38: add rdx,r14
0xfe3b: mov qword ptr [rsp+0x30],rdx
0xfe40: setb dl
0xfe43: cmp rax,rsi
0xfe46: movzx edx,dl
0xfe49: ja 0xfe95
0xfe4b: test rdx,rdx
0xfe4e: jne 0xff39
0xfe54: test r13,r13
0xfe57: mov rdx,qword ptr [rsp+0x30]
0xfe5c: je 0xff1f
0xfe62: movabs rax,0x5555555555555553
0xfe6c: cmp rdx,rax
0xfe6f: ja 0xff39
0xfe75: mov rax,rdx
0xfe78: shr rax,0x1
0xfe7b: lea rax,[rdx+rax+1]
0xfe80: mov qword ptr [rsp+0x20],rax
0xfe85: mov rsi,qword ptr [rsp+0x20]
0xfe8a: mov rdi,r13
0xfe8d: call 0x12070
0xfe92: mov r13,rax
0xfe95: mov rdx,qword ptr [rsp+0x18]
0xfe9a: lea rdi,[r13+r14]
0xfe9f: mov rsi,r15
0xfea2: call 0x2d80
0xfea7: mov r14,qword ptr [rsp+0x30]
0xfeac: jmp 0xfc94
0xfeb1: cmp qword ptr [rsp+0x10],0x0
0xfeb7: je 0xff65
0xfebd: movabs rax,0x555555555555554
0xfec7: cmp r12,rax
0xfeca: ja 0xff39
0xfecc: mov rax,r12
0xfecf: shr rax,0x1
0xfed2: add rax,qword ptr [rsp+0x38]
0xfed7: mov qword ptr [rsp+0x28],rax
0xfedc: mov rsi,qword ptr [rsp+0x28]
0xfee1: mov rdi,qword ptr [rsp+0x10]
0xfee6: mov qword ptr [rsp+0x30],rcx
0xfeeb: shl rsi,0x4
0xfeef: call 0x12070
0xfef4: mov rcx,qword ptr [rsp+0x30]
0xfef9: mov qword ptr [rsp+0x10],rax
0xfefe: jmp 0xfd05
0xff03: mov rbx,qword ptr [rsp+0x20]
0xff08: mov rdi,r13
0xff0b: lea rsi,[rbx+1]
0xff0f: call 0x12070
0xff14: mov r13,rax
0xff17: add rbx,rax
0xff1a: jmp 0xfd88
0xff1f: test rdx,rdx
0xff22: mov eax,0x80
0xff27: cmovne rax,rdx
0xff2b: test rax,rax
0xff2e: mov qword ptr [rsp+0x20],rax
0xff33: jns 0xfe85
0xff39: call 0x12260
0xff3e: nop 
0xff40: mov rdi,qword ptr [rsp+0x10]
0xff45: call 0x30d0
0xff4a: mov rdi,r13
0xff4d: xor r13d,r13d
0xff50: call 0x30d0
0xff55: mov dword ptr [rbp],ebx
0xff58: jmp 0xfd8b
0xff5d: xor r13d,r13d
0xff60: jmp 0xfd8b
0xff65: test r12,r12
0xff68: mov eax,0x8
0xff6d: mov edx,0x10
0xff72: cmovne rax,r12
0xff76: xor esi,esi
0xff78: mov rdi,rax
0xff7b: mov qword ptr [rsp+0x28],rax
0xff80: mov rax,rdx
0xff83: mul rdi
0xff86: jo 0xffa1
0xff88: test rax,rax
0xff8b: js 0xff39
0xff8d: test rsi,rsi
0xff90: jne 0xff39
0xff92: lea rax,[r12+1]
0xff97: mov qword ptr [rsp+0x38],rax
0xff9c: jmp 0xfedc
0xffa1: mov esi,0x1
0xffa6: jmp 0xff88
0xffa8: nop dword ptr [rax+rax]
0xffb0: push r12
0xffb2: push rbp
0xffb3: mov ebp,esi
0xffb5: push rbx
0xffb6: call 0x12e40
0xffbb: test rax,rax
0xffbe: je 0xffe8
0xffc0: mov esi,ebp
0xffc2: mov rbx,rax
0xffc5: mov rdi,rax
0xffc8: call 0xfc30
0xffcd: mov rdi,rbx
0xffd0: mov rbp,rax
0xffd3: call 0x2c60
0xffd8: test eax,eax
0xffda: jne 0xfff0
0xffdc: mov rax,rbp
0xffdf: pop rbx
0xffe0: pop rbp
0xffe1: pop r12
0xffe3: ret 
0xffe4: nop dword ptr [rax]
0xffe8: xor ebp,ebp
0xffea: jmp 0xffdc
0xffec: nop dword ptr [rax]
0xfff0: call 0x2950
0xfff5: mov r12d,dword ptr [rax]
0xfff8: mov rbx,rax
0xfffb: mov rdi,rbp
0xfffe: call 0x30d0
0x10003: xor ebp,ebp
0x10005: mov dword ptr [rbx],r12d
0x10008: jmp 0xffdc
0x1000a: nop word ptr [rax+rax]
0x10010: mov dword ptr [rdi],0x0
0x10016: ret 
0x10017: nop word ptr [rax+rax]
0x10020: xor eax,eax
0x10022: cmp dword ptr [rdi],0x4
0x10025: je 0x10030
0x10027: ret 
0x10029: nop dword ptr [rax]
0x10030: mov eax,dword ptr [rdi+4]
0x10033: ret 
0x10034: nop 
0x10036: nop word ptr cs:[rax+rax]
0x100c2: nop word ptr [rax+rax]
0x10155: nop dword ptr [rax]
0x10173: nop dword ptr [rax+rax]
0x101a6: nop word ptr cs:[rax+rax]
0x101bb: nop dword ptr [rax+rax]
0x101d7: nop word ptr [rax+rax]
0x101ed: nop dword ptr [rax]
0x1021c: nop dword ptr [rax]
0x10243: nop dword ptr [rax+rax]
0x10296: nop word ptr cs:[rax+rax]
0x102e9: nop dword ptr [rax]
0x10326: nop word ptr cs:[rax+rax]
0x10362: nop word ptr [rax+rax]
0x1037f: nop 
0x103b1: mov eax,dword ptr [rsp+4]
0x103ba: nop word ptr [rax+rax]
0x10418: call 0x2b30
0x10443: nop dword ptr [rax]
0x10446: nop word ptr cs:[rax+rax]
0x1046b: nop dword ptr [rax+rax]
0x104c5: nop 
0x104c6: nop word ptr cs:[rax+rax]
0x10533: nop dword ptr [rax+rax]
0x105d1: nop dword ptr [rax]
0x10603: nop dword ptr [rax+rax]
0x10657: call 0x2b30
0x1065c: nop dword ptr [rax]
0x10660: push rbx
0x10661: mov rsi,rdi
0x10664: mov edi,0x1
0x10669: sub rsp,0xa0
0x10670: mov rdx,rsp
0x10673: mov rax,qword ptr fs:[0x28]
0x1067c: mov qword ptr [rsp+0x98],rax
0x10684: xor eax,eax
0x10686: call 0x2b00
0x1068b: mov ebx,eax
0x1068d: call 0x2950
0x10692: test ebx,ebx
0x10694: je 0x106b0
0x10696: mov edx,dword ptr [rax]
0x10698: cmp edx,0x4b
0x1069b: je 0x106b0
0x1069d: xor eax,eax
0x1069f: cmp edx,0x2
0x106a2: setne al
0x106a5: neg eax
0x106a7: jmp 0x106bb
0x106a9: nop dword ptr [rax]
0x106b0: mov dword ptr [rax],0x11
0x106b6: mov eax,0xffffffff
0x106bb: mov rcx,qword ptr [rsp+0x98]
0x106c3: xor rcx,qword ptr fs:[0x28]
0x106cc: jne 0x106d7
0x106ce: add rsp,0xa0
0x106d5: pop rbx
0x106d6: ret 
0x106d7: call 0x2b30
0x106dc: nop dword ptr [rax]
0x106e0: mov esi,0x1c0
0x106e5: jmp 0x29c0
0x106ea: nop word ptr [rax+rax]
0x106f0: mov esi,dword ptr [rsi]
0x106f2: mov edx,0x180
0x106f7: xor eax,eax
0x106f9: and sil,0x3c
0x106fd: or sil,0xc2
0x10701: jmp 0x2f60
0x10706: nop word ptr cs:[rax+rax]
0x10710: push r15
0x10712: push r14
0x10714: mov r15,rdi
0x10717: push r13
0x10719: push r12
0x1071b: mov r14,r8
0x1071e: push rbp
0x1071f: push rbx
0x10720: mov ebp,esi
0x10722: sub rsp,0x38
0x10726: mov qword ptr [rsp+0x18],rdx
0x1072b: mov qword ptr [rsp],rdi
0x1072f: mov qword ptr [rsp+0x20],rcx
0x10734: call 0x2950
0x10739: mov qword ptr [rsp+8],rax
0x1073e: mov eax,dword ptr [rax]
0x10740: mov rdi,r15
0x10743: mov dword ptr [rsp+0x2c],eax
0x10747: call 0x2af0
0x1074c: movsxd rsi,ebp
0x1074f: lea rdx,[rsi+r14]
0x10753: cmp rdx,rax
0x10756: ja 0x1086b
0x1075c: sub rax,r14
0x1075f: mov rbx,rax
0x10762: sub rbx,rsi
0x10765: lea rsi,[rip+0x796f]
0x1076c: lea rax,[r15+rbx]
0x10770: mov rdi,rax
0x10773: mov qword ptr [rsp+0x10],rax
0x10778: call 0x2c50
0x1077d: cmp r14,rax
0x10780: ja 0x1086b
0x10786: xor edi,edi
0x10788: mov rsi,r14
0x1078b: call 0x132e0
0x10790: test rax,rax
0x10793: mov rbp,rax
0x10796: je 0x1087d
0x1079c: mov rax,qword ptr [rsp]
0x107a0: lea r12,[rip+0x8199]
0x107a7: mov r13d,0x3a2f8
0x107ad: add rax,r14
0x107b0: add rbx,rax
0x107b3: nop dword ptr [rax+rax]
0x107b8: test r14,r14
0x107bb: mov r15,qword ptr [rsp+0x10]
0x107c0: je 0x107e7
0x107c2: nop word ptr [rax+rax]
0x107c8: mov esi,0x3d
0x107cd: mov rdi,rbp
0x107d0: add r15,0x1
0x107d4: call 0x13330
0x107d9: movzx eax,byte ptr [r12+rax]
0x107de: mov byte ptr [r15-1],al
0x107e2: cmp r15,rbx
0x107e5: jne 0x107c8
0x107e7: mov rsi,qword ptr [rsp+0x18]
0x107ec: mov rdi,qword ptr [rsp]
0x107f0: mov rax,qword ptr [rsp+0x20]
0x107f5: call rax
0x107f7: test eax,eax
0x107f9: mov edx,eax
0x107fb: jns 0x10829
0x107fd: mov rax,qword ptr [rsp+8]
0x10802: mov ecx,dword ptr [rax]
0x10804: cmp ecx,0x11
0x10807: jne 0x10864
0x10809: sub r13d,0x1
0x1080d: jne 0x107b8
0x1080f: mov rdi,rbp
0x10812: call 0x13470
0x10817: mov rax,qword ptr [rsp+8]
0x1081c: mov edx,0xffffffff
0x10821: mov dword ptr [rax],0x11
0x10827: jmp 0x10853
0x10829: mov rcx,qword ptr [rsp+8]
0x1082e: mov eax,dword ptr [rsp+0x2c]
0x10832: mov dword ptr [rcx],eax
0x10834: mov ecx,eax
0x10836: mov rdi,rbp
0x10839: mov dword ptr [rsp+0x10],edx
0x1083d: mov dword ptr [rsp],ecx
0x10840: call 0x13470
0x10845: mov rax,qword ptr [rsp+8]
0x1084a: mov ecx,dword ptr [rsp]
0x1084d: mov edx,dword ptr [rsp+0x10]
0x10851: mov dword ptr [rax],ecx
0x10853: add rsp,0x38
0x10857: mov eax,edx
0x10859: pop rbx
0x1085a: pop rbp
0x1085b: pop r12
0x1085d: pop r13
0x1085f: pop r14
0x10861: pop r15
0x10863: ret 
0x10864: mov edx,0xffffffff
0x10869: jmp 0x10836
0x1086b: mov rax,qword ptr [rsp+8]
0x10870: mov edx,0xffffffff
0x10875: mov dword ptr [rax],0x16
0x1087b: jmp 0x10853
0x1087d: mov edx,0xffffffff
0x10882: jmp 0x10853
0x10884: nop 
0x10886: nop word ptr cs:[rax+rax]
0x10890: sub rsp,0x18
0x10894: cmp ecx,0x1
0x10897: mov dword ptr [rsp+0xc],edx
0x1089b: je 0x10900
0x1089d: cmp ecx,0x2
0x108a0: je 0x108c8
0x108a2: test ecx,ecx
0x108a4: je 0x108e0
0x108a6: lea rcx,[rip+0x8073]
0x108ad: lea rsi,[rip+0x801c]
0x108b4: lea rdi,[rip+0x803d]
0x108bb: mov edx,0x147
0x108c0: call 0x2be0
0x108c5: nop dword ptr [rax]
0x108c8: lea rdx,[rsp+0xc]
0x108cd: lea rcx,[rip+0xfffffffffffffd8c]
0x108d4: call 0x10710
0x108d9: add rsp,0x18
0x108dd: ret 
0x108de: nop 
0x108e0: lea rdx,[rsp+0xc]
0x108e5: lea rcx,[rip+0xfffffffffffffe04]
0x108ec: call 0x10710
0x108f1: add rsp,0x18
0x108f5: ret 
0x108f6: nop word ptr cs:[rax+rax]
0x10900: lea rdx,[rsp+0xc]
0x10905: lea rcx,[rip+0xfffffffffffffdd4]
0x1090c: call 0x10710
0x10911: add rsp,0x18
0x10915: ret 
0x10916: nop word ptr cs:[rax+rax]
0x10920: mov r8d,0x6
0x10926: jmp 0x10890
0x1092b: nop dword ptr [rax+rax]
0x10930: mov r8d,0x6
0x10936: jmp 0x10710
0x1093b: nop dword ptr [rax+rax]
0x1097f: nop 
0x10980: mov rax,qword ptr [rdi]
0x10983: xor edx,edx
0x10985: div rsi
0x10988: mov rax,rdx
0x1098b: ret 
0x1098c: nop dword ptr [rax]
0x10990: mov rax,qword ptr [rsi]
0x10993: cmp qword ptr [rdi],rax
0x10996: sete al
0x10999: ret 
0x1099a: nop word ptr [rax+rax]
0x109a0: push r15
0x109a2: push r14
0x109a4: push r13
0x109a6: push r12
0x109a8: push rbp
0x109a9: push rbx
0x109aa: mov ebx,r8d
0x109ad: and ebx,0x1
0x109b0: sub rsp,0x128
0x109b7: mov r13,qword ptr [rcx+0x60]
0x109bb: mov r14,qword ptr [rdx+0x58]
0x109bf: mov rax,qword ptr fs:[0x28]
0x109c8: mov qword ptr [rsp+0x118],rax
0x109d0: xor eax,eax
0x109d2: test ebx,ebx
0x109d4: mov r12,qword ptr [rcx+0x58]
0x109d8: mov r15,qword ptr [rdx+0x60]
0x109dc: mov r9d,r13d
0x109df: je 0x10ac8
0x109e5: cmp r14,r12
0x109e8: mov r10d,edi
0x109eb: sete byte ptr [rsp+0x38]
0x109f0: movzx edi,byte ptr [rsp+0x38]
0x109f5: cmp r15d,r13d
0x109f8: sete al
0x109fb: and al,dil
0x109fe: mov byte ptr [rsp+8],al
0x10a02: jne 0x10b10
0x10a08: lea rax,[r12-1]
0x10a0d: cmp rax,r14
0x10a10: jg 0x10b18
0x10a16: lea rax,[r14-1]
0x10a1a: cmp rax,r12
0x10a1d: jg 0x10adf
0x10a23: mov rbp,rdx
0x10a26: mov rdx,qword ptr [rip+0x20ecf3]
0x10a2d: mov r11,rsi
0x10a30: test rdx,rdx
0x10a33: je 0x10fd0
0x10a39: mov rsi,qword ptr [rip+0x20ecd8]
0x10a40: test rsi,rsi
0x10a43: je 0x10b20
0x10a49: mov rax,qword ptr [rbp]
0x10a4d: mov rdi,rdx
0x10a50: mov qword ptr [rsp+0x28],r11
0x10a55: mov dword ptr [rsp+0x20],r10d
0x10a5a: mov dword ptr [rsp+0x18],r9d
0x10a5f: mov qword ptr [rsi],rax
0x10a62: call 0xca20
0x10a67: test rax,rax
0x10a6a: mov qword ptr [rsp+0x10],rax
0x10a6f: mov r9d,dword ptr [rsp+0x18]
0x10a74: mov r10d,dword ptr [rsp+0x20]
0x10a79: mov r11,qword ptr [rsp+0x28]
0x10a7e: je 0x10b78
0x10a84: cmp qword ptr [rip+0x20ec8d],rax
0x10a8b: je 0x11030
0x10a91: mov rax,qword ptr [rsp+0x10]
0x10a96: cmp byte ptr [rax+0xc],0x0
0x10a9a: mov esi,dword ptr [rax+8]
0x10a9d: mov dword ptr [rsp+0x18],esi
0x10aa1: je 0x10bfa
0x10aa7: xor eax,eax
0x10aa9: cmp esi,0x77359400
0x10aaf: sete al
0x10ab2: not eax
0x10ab4: cdqe 
0x10ab6: and r12,rax
0x10ab9: mov eax,r9d
0x10abc: mov r9d,r13d
0x10abf: cdq 
0x10ac0: idiv esi
0x10ac2: sub r9d,edx
0x10ac5: nop dword ptr [rax]
0x10ac8: cmp r12,r14
0x10acb: jg 0x10b18
0x10acd: mov ebx,0x1
0x10ad2: jl 0x10adf
0x10ad4: cmp r9d,r15d
0x10ad7: jg 0x10b18
0x10ad9: setl bl
0x10adc: movzx ebx,bl
0x10adf: mov rsi,qword ptr [rsp+0x118]
0x10ae7: xor rsi,qword ptr fs:[0x28]
0x10af0: mov eax,ebx
0x10af2: jne 0x110c8
0x10af8: add rsp,0x128
0x10aff: pop rbx
0x10b00: pop rbp
0x10b01: pop r12
0x10b03: pop r13
0x10b05: pop r14
0x10b07: pop r15
0x10b09: ret 
0x10b0a: nop word ptr [rax+rax]
0x10b10: xor ebx,ebx
0x10b12: jmp 0x10adf
0x10b14: nop dword ptr [rax]
0x10b18: mov ebx,0xffffffff
0x10b1d: jmp 0x10adf
0x10b1f: nop 
0x10b20: mov edi,0x10
0x10b25: mov qword ptr [rsp+0x28],r11
0x10b2a: mov dword ptr [rsp+0x20],r10d
0x10b2f: mov dword ptr [rsp+0x18],r9d
0x10b34: mov qword ptr [rsp+0x10],rdx
0x10b39: call 0x2df0
0x10b3e: test rax,rax
0x10b41: mov rsi,rax
0x10b44: mov qword ptr [rip+0x20ebcd],rax
0x10b4b: mov rdx,qword ptr [rsp+0x10]
0x10b50: mov r9d,dword ptr [rsp+0x18]
0x10b55: mov r10d,dword ptr [rsp+0x20]
0x10b5a: mov r11,qword ptr [rsp+0x28]
0x10b5f: je 0x10b88
0x10b61: mov dword ptr [rax+8],0x77359400
0x10b68: mov byte ptr [rax+0xc],0x0
0x10b6c: jmp 0x10a49
0x10b71: nop dword ptr [rax]
0x10b78: mov rdx,qword ptr [rip+0x20eba1]
0x10b7f: test rdx,rdx
0x10b82: je 0x11022
0x10b88: lea rcx,[rsp+0x50]
0x10b8d: mov rax,qword ptr [rbp]
0x10b91: mov rdi,rdx
0x10b94: mov qword ptr [rsp+0x30],r11
0x10b99: mov dword ptr [rsp+0x28],r10d
0x10b9e: mov rsi,rcx
0x10ba1: mov dword ptr [rsp+0x20],r9d
0x10ba6: mov qword ptr [rsp+0x18],rcx
0x10bab: mov qword ptr [rsp+0x50],rax
0x10bb0: call 0xbfb0
0x10bb5: test rax,rax
0x10bb8: mov qword ptr [rsp+0x10],rax
0x10bbd: mov rcx,qword ptr [rsp+0x18]
0x10bc2: mov r9d,dword ptr [rsp+0x20]
0x10bc7: mov r10d,dword ptr [rsp+0x28]
0x10bcc: mov r11,qword ptr [rsp+0x30]
0x10bd1: jne 0x10a91
0x10bd7: nop word ptr [rax+rax]
0x10be0: mov dword ptr [rsp+0x58],0x77359400
0x10be8: mov byte ptr [rsp+0x5c],0x0
0x10bed: mov dword ptr [rsp+0x18],0x77359400
0x10bf5: mov qword ptr [rsp+0x10],rcx
0x10bfa: mov rcx,qword ptr [rbp+0x50]
0x10bfe: mov eax,0x66666667
0x10c03: mov rsi,qword ptr [rbp+0x70]
0x10c07: imul ecx
0x10c09: mov eax,ecx
0x10c0b: mov qword ptr [rsp+0x28],rcx
0x10c10: sar eax,0x1f
0x10c13: sar edx,0x2
0x10c16: sub edx,eax
0x10c18: lea eax,[rdx+rdx*4]
0x10c1b: mov dword ptr [rsp+0x20],edx
0x10c1f: add eax,eax
0x10c21: sub ecx,eax
0x10c23: mov eax,0x66666667
0x10c28: imul esi
0x10c2a: mov eax,esi
0x10c2c: sar eax,0x1f
0x10c2f: sar edx,0x2
0x10c32: mov edi,edx
0x10c34: sub edi,eax
0x10c36: lea eax,[rdi+rdi*4]
0x10c39: add eax,eax
0x10c3b: sub esi,eax
0x10c3d: mov eax,0x66666667
0x10c42: imul r15d
0x10c45: mov eax,r15d
0x10c48: or ecx,esi
0x10c4a: sar eax,0x1f
0x10c4d: mov esi,r15d
0x10c50: sar edx,0x2
0x10c53: mov r8d,edx
0x10c56: sub r8d,eax
0x10c59: lea eax,[r8+r8*4]
0x10c5d: add eax,eax
0x10c5f: sub esi,eax
0x10c61: or ecx,esi
0x10c63: jne 0x10fb8
0x10c69: cmp dword ptr [rsp+0x18],0xa
0x10c6e: mov rax,qword ptr [rbp+0x48]
0x10c72: mov ecx,edi
0x10c74: mov edx,dword ptr [rsp+0x20]
0x10c78: mov esi,r8d
0x10c7b: mov qword ptr [rsp+0x48],rax
0x10c80: mov dword ptr [rsp+0x30],edx
0x10c84: jle 0x11098
0x10c8a: mov eax,0x66666667
0x10c8f: imul edi
0x10c91: mov eax,edi
0x10c93: sar eax,0x1f
0x10c96: sar edx,0x2
0x10c99: sub edx,eax
0x10c9b: lea eax,[rdx+rdx*4]
0x10c9e: add eax,eax
0x10ca0: sub edi,eax
0x10ca2: mov eax,0x66666667
0x10ca7: imul dword ptr [rsp+0x20]
0x10cab: mov eax,dword ptr [rsp+0x20]
0x10caf: sar eax,0x1f
0x10cb2: sar edx,0x2
0x10cb5: sub edx,eax
0x10cb7: lea eax,[rdx+rdx*4]
0x10cba: mov edx,dword ptr [rsp+0x20]
0x10cbe: mov dword ptr [rsp+0x20],0xa
0x10cc6: add eax,eax
0x10cc8: sub edx,eax
0x10cca: mov eax,0x66666667
0x10ccf: or edi,edx
0x10cd1: imul r8d
0x10cd4: mov eax,r8d
0x10cd7: mov dword ptr [rsp+0x3c],edi
0x10cdb: sar eax,0x1f
0x10cde: mov edi,0x66666667
0x10ce3: sar edx,0x2
0x10ce6: sub edx,eax
0x10ce8: lea eax,[rdx+rdx*4]
0x10ceb: mov edx,0x8
0x10cf0: add eax,eax
0x10cf2: sub r8d,eax
0x10cf5: mov eax,dword ptr [rsp+0x3c]
0x10cf9: or eax,r8d
0x10cfc: jne 0x110b4
0x10d02: mov dword ptr [rsp+0x3c],r9d
0x10d07: mov qword ptr [rsp+0x40],r14
0x10d0c: mov r9d,0xa
0x10d12: mov r8d,dword ptr [rsp+0x30]
0x10d17: mov qword ptr [rsp+0x20],r12
0x10d1c: mov r14d,edx
0x10d1f: mov qword ptr [rsp+0x30],rbp
0x10d24: mov eax,r8d
0x10d27: sar r8d,0x1f
0x10d2b: lea ebp,[r9+r9*4]
0x10d2f: imul edi
0x10d31: mov eax,ecx
0x10d33: sar ecx,0x1f
0x10d36: add ebp,ebp
0x10d38: mov r9d,ebp
0x10d3b: sar edx,0x2
0x10d3e: sub edx,r8d
0x10d41: mov r8d,edx
0x10d44: imul edi
0x10d46: mov eax,esi
0x10d48: sar esi,0x1f
0x10d4b: sar edx,0x2
0x10d4e: sub edx,ecx
0x10d50: mov ecx,edx
0x10d52: imul edi
0x10d54: sar edx,0x2
0x10d57: sub edx,esi
0x10d59: cmp ebp,dword ptr [rsp+0x18]
0x10d5d: mov esi,edx
0x10d5f: jge 0x11040
0x10d65: mov eax,r8d
0x10d68: mov r12d,r8d
0x10d6b: imul edi
0x10d6d: mov eax,r8d
0x10d70: sar eax,0x1f
0x10d73: sar edx,0x2
0x10d76: sub edx,eax
0x10d78: lea eax,[rdx+rdx*4]
0x10d7b: add eax,eax
0x10d7d: sub r12d,eax
0x10d80: mov eax,ecx
0x10d82: imul edi
0x10d84: mov eax,ecx
0x10d86: sar eax,0x1f
0x10d89: sar edx,0x2
0x10d8c: sub edx,eax
0x10d8e: lea eax,[rdx+rdx*4]
0x10d91: mov edx,ecx
0x10d93: add eax,eax
0x10d95: sub edx,eax
0x10d97: mov eax,esi
0x10d99: or r12d,edx
0x10d9c: imul edi
0x10d9e: mov eax,esi
0x10da0: sar eax,0x1f
0x10da3: sar edx,0x2
0x10da6: sub edx,eax
0x10da8: lea eax,[rdx+rdx*4]
0x10dab: mov edx,esi
0x10dad: add eax,eax
0x10daf: sub edx,eax
0x10db1: or r12d,edx
0x10db4: jne 0x11040
0x10dba: sub r14d,0x1
0x10dbe: jne 0x10d24
0x10dc4: mov r14,qword ptr [rsp+0x40]
0x10dc9: mov rbp,qword ptr [rsp+0x30]
0x10dce: mov rax,qword ptr [rsp+0x48]
0x10dd3: mov r12,qword ptr [rsp+0x20]
0x10dd8: mov r9d,dword ptr [rsp+0x3c]
0x10ddd: or rax,r14
0x10de0: or rax,qword ptr [rbp+0x68]
0x10de4: test al,0x1
0x10de6: mov rax,qword ptr [rsp+0x10]
0x10deb: je 0x11078
0x10df1: mov dword ptr [rax+8],0x3b9aca00
0x10df8: mov dword ptr [rsp+0x20],0x3b9aca00
0x10e00: mov rax,r12
0x10e03: cmp r14,r12
0x10e06: jg 0x10adf
0x10e0c: cmp r15d,r13d
0x10e0f: jl 0x10e1c
0x10e11: cmp byte ptr [rsp+0x38],0x0
0x10e16: jne 0x10adf
0x10e1c: cmp r14,rax
0x10e1f: jl 0x10b18
0x10e25: jne 0x10e3d
0x10e27: mov eax,r9d
0x10e2a: cdq 
0x10e2b: idiv dword ptr [rsp+0x20]
0x10e2f: mov eax,r13d
0x10e32: sub eax,edx
0x10e34: cmp eax,r15d
0x10e37: jg 0x10b18
0x10e3d: mov rax,qword ptr [rsp+0x48]
0x10e42: mov edx,0x38e38e39
0x10e47: lea rbp,[rsp+0x60]
0x10e4c: mov rsi,r11
0x10e4f: mov edi,r10d
0x10e52: mov ecx,0x100
0x10e57: mov dword ptr [rsp+0x18],r9d
0x10e5c: mov dword ptr [rsp+0x38],r10d
0x10e61: mov qword ptr [rsp+0x60],rax
0x10e66: movsxd rax,dword ptr [rsp+0x28]
0x10e6b: mov qword ptr [rsp+0x68],rax
0x10e70: movzx eax,byte ptr [rsp+8]
0x10e75: mov qword ptr [rsp+8],r11
0x10e7a: or rax,r14
0x10e7d: mov qword ptr [rsp+0x70],rax
0x10e82: mov eax,dword ptr [rsp+0x20]
0x10e86: mul edx
0x10e88: mov eax,edx
0x10e8a: mov rdx,rbp
0x10e8d: shr eax,0x1
0x10e8f: add eax,r15d
0x10e92: cdqe 
0x10e94: mov qword ptr [rsp+0x78],rax
0x10e99: call 0x2930
0x10e9e: test eax,eax
0x10ea0: mov r10d,dword ptr [rsp+0x38]
0x10ea5: mov r11,qword ptr [rsp+8]
0x10eaa: mov r9d,dword ptr [rsp+0x18]
0x10eaf: je 0x10ebb
0x10eb1: mov ebx,0xfffffffe
0x10eb6: jmp 0x10adf
0x10ebb: lea rcx,[rsp+0x80]
0x10ec3: mov rdx,r11
0x10ec6: mov r8d,0x100
0x10ecc: mov esi,r10d
0x10ecf: mov edi,0x1
0x10ed4: mov dword ptr [rsp+0x18],r9d
0x10ed9: mov qword ptr [rsp+8],r11
0x10ede: mov dword ptr [rsp+0x38],r10d
0x10ee3: call 0x2b80
0x10ee8: mov rcx,qword ptr [rsp+0xe0]
0x10ef0: mov r8d,eax
0x10ef3: mov rax,qword ptr [rsp+0xd8]
0x10efb: movsxd rdx,r15d
0x10efe: mov r10d,dword ptr [rsp+0x38]
0x10f03: mov r11,qword ptr [rsp+8]
0x10f08: mov r9d,dword ptr [rsp+0x18]
0x10f0d: xor rcx,rdx
0x10f10: xor rax,r14
0x10f13: or rax,rcx
0x10f16: movsxd rcx,r8d
0x10f19: or rax,rcx
0x10f1c: jne 0x110cd
0x10f22: mov ecx,dword ptr [rsp+0xd8]
0x10f29: mov esi,0xa
0x10f2e: and ecx,0x1
0x10f31: imul ecx,ecx,0x3b9aca00
0x10f37: add ecx,dword ptr [rsp+0xe0]
0x10f3e: mov eax,ecx
0x10f40: cdq 
0x10f41: idiv esi
0x10f43: test edx,edx
0x10f45: jne 0x11115
0x10f4b: cmp dword ptr [rsp+0x20],0xa
0x10f50: je 0x10f8d
0x10f52: mov r8d,0x9
0x10f58: mov esi,0xa
0x10f5d: mov edi,0xa
0x10f62: jmp 0x10f6d
0x10f64: imul esi,esi,0xa
0x10f67: cmp esi,dword ptr [rsp+0x20]
0x10f6b: je 0x10f8d
0x10f6d: mov eax,ecx
0x10f6f: cdq 
0x10f70: idiv edi
0x10f72: cdq 
0x10f73: mov ecx,eax
0x10f75: idiv edi
0x10f77: test edx,edx
0x10f79: jne 0x1110c
0x10f7f: sub r8d,0x1
0x10f83: jne 0x10f64
0x10f85: mov dword ptr [rsp+0x20],0x77359400
0x10f8d: mov esi,dword ptr [rsp+0x20]
0x10f91: xor eax,eax
0x10f93: cmp esi,0x77359400
0x10f99: mov ebx,esi
0x10f9b: sete al
0x10f9e: not eax
0x10fa0: cdqe 
0x10fa2: and r12,rax
0x10fa5: mov eax,r9d
0x10fa8: mov r9d,r13d
0x10fab: cdq 
0x10fac: idiv esi
0x10fae: sub r9d,edx
0x10fb1: nop dword ptr [rax]
0x10fb8: mov rax,qword ptr [rsp+0x10]
0x10fbd: mov dword ptr [rax+8],ebx
0x10fc0: mov byte ptr [rax+0xc],0x1
0x10fc4: jmp 0x10ac8
0x10fc9: nop dword ptr [rax]
0x10fd0: mov r8,qword ptr [rip+0x20bff9]
0x10fd7: lea rdx,[rip+0xfffffffffffff9a2]
0x10fde: lea rcx,[rip+0xfffffffffffff9ab]
0x10fe5: mov qword ptr [rsp+0x20],rsi
0x10fea: mov edi,0x10
0x10fef: xor esi,esi
0x10ff1: mov dword ptr [rsp+0x18],r10d
0x10ff6: mov dword ptr [rsp+0x10],r13d
0x10ffb: call 0xc220
0x11000: test rax,rax
0x11003: mov rdx,rax
0x11006: mov qword ptr [rip+0x20e713],rax
0x1100d: mov r9d,dword ptr [rsp+0x10]
0x11012: mov r10d,dword ptr [rsp+0x18]
0x11017: mov r11,qword ptr [rsp+0x20]
0x1101c: jne 0x10a39
0x11022: lea rcx,[rsp+0x50]
0x11027: jmp 0x10be0
0x1102c: nop dword ptr [rax]
0x11030: mov qword ptr [rip+0x20e6dd],0x0
0x1103b: jmp 0x10a91
0x11040: cmp ebp,0x77359400
0x11046: mov r12,qword ptr [rsp+0x20]
0x1104b: mov rsi,qword ptr [rsp+0x10]
0x11050: sete byte ptr [rsp+8]
0x11055: movzx eax,byte ptr [rsp+8]
0x1105a: mov dword ptr [rsp+0x20],r9d
0x1105f: mov r14,qword ptr [rsp+0x40]
0x11064: mov r9d,dword ptr [rsp+0x3c]
0x11069: mov dword ptr [rsi+8],ebp
0x1106c: not eax
0x1106e: cdqe 
0x11070: and rax,r12
0x11073: jmp 0x10e03
0x11078: mov dword ptr [rax+8],0x77359400
0x1107f: mov rax,r12
0x11082: mov byte ptr [rsp+8],0x1
0x11087: and rax,0xfffffffffffffffe
0x1108b: mov dword ptr [rsp+0x20],0x77359400
0x11093: jmp 0x10e03
0x11098: mov rax,qword ptr [rsp+0x10]
0x1109d: mov dword ptr [rsp+0x20],0xa
0x110a5: mov dword ptr [rax+8],0xa
0x110ac: mov rax,r12
0x110af: jmp 0x10e03
0x110b4: mov rax,qword ptr [rsp+0x10]
0x110b9: mov dword ptr [rax+8],0xa
0x110c0: mov rax,r12
0x110c3: jmp 0x10e03
0x110c8: call 0x2b30
0x110cd: mov qword ptr [rsp+0x78],rdx
0x110d2: mov ecx,0x100
0x110d7: mov rdx,rbp
0x110da: mov rsi,r11
0x110dd: mov edi,r10d
0x110e0: mov dword ptr [rsp+8],r8d
0x110e5: mov dword ptr [rsp+0x38],r9d
0x110ea: mov qword ptr [rsp+0x70],r14
0x110ef: call 0x2930
0x110f4: mov r8d,dword ptr [rsp+8]
0x110f9: mov r9d,dword ptr [rsp+0x38]
0x110fe: test r8d,r8d
0x11101: jne 0x10eb1
0x11107: jmp 0x10f22
0x1110c: mov dword ptr [rsp+0x20],esi
0x11110: jmp 0x10f8d
0x11115: mov dword ptr [rsp+0x20],ebx
0x11119: jmp 0x10f8d
0x1111e: nop 
0x11120: mov r8d,ecx
0x11123: mov rcx,rdx
0x11126: mov rdx,rsi
0x11129: mov rsi,rdi
0x1112c: mov edi,0xffffff9c
0x11131: jmp 0x109a0
0x11136: nop word ptr cs:[rax+rax]
0x1117f: nop 
0x111b7: nop word ptr [rax+rax]
0x11201: nop dword ptr [rax]
0x11216: nop word ptr cs:[rax+rax]
0x112a7: nop word ptr [rax+rax]
0x112c9: nop dword ptr [rax]
0x112d0: mov ecx,0x100
0x112d5: jmp 0x2930
0x112da: nop word ptr [rax+rax]
0x114ca: test r14b,r14b
0x114cd: mov qword ptr [rsp+0x58],0x0
0x114d6: je 0x114e7
0x114d8: cmp qword ptr [rsp+0xd0],0x0
0x114e1: je 0x11718
0x114fc: nop dword ptr [rax]
0x11556: nop word ptr cs:[rax+rax]
0x115ca: nop word ptr [rax+rax]
0x115d0: mov qword ptr [rsp+8],0x0
0x115d9: xor r13d,r13d
0x115dc: jmp 0x1133d
0x115e1: nop dword ptr [rax]
0x11639: nop dword ptr [rax]
0x11640: xor r13d,r13d
0x11643: jmp 0x1140a
0x11648: nop dword ptr [rax+rax]
0x11667: nop word ptr [rax+rax]
0x11687: nop word ptr [rax+rax]
0x116be: nop 
0x116e2: nop word ptr [rax+rax]
0x116fd: nop dword ptr [rax]
0x11726: call 0x2b30
0x1173e: nop 
0x1186d: nop dword ptr [rax]
0x11870: mov ecx,dword ptr [rip+0x20deb2]
0x11876: xor edx,edx
0x11878: xor ebx,ebx
0x1187a: mov qword ptr [rsp+8],0x0
0x11883: test ecx,ecx
0x11885: jns 0x117be
0x1188b: mov dword ptr [rip+0x20de93],0xffffffff
0x118b7: nop word ptr [rax+rax]
0x118df: nop 
0x11935: nop dword ptr [rax]
0x1195e: jmp 0x11820
0x11963: nop dword ptr [rax+rax]
0x11996: call 0x2b30
0x119ae: nop 
0x11a56: nop word ptr cs:[rax+rax]
0x11ae5: nop dword ptr [rax]
0x11ae8: mov r8,rcx
0x11aeb: mov rcx,rdx
0x11aee: lea rdx,[rip+0x6e96]
0x11af5: mov esi,0x1
0x11afa: xor eax,eax
0x11afc: call 0x3050
0x11b01: jmp 0x119ec
0x11b06: nop word ptr cs:[rax+rax]
0x11b65: nop dword ptr [rax]
0x11ba1: nop dword ptr [rax]
0x11be8: nop dword ptr [rax+rax]
0x11c37: nop word ptr [rax+rax]
0x11c94: nop dword ptr [rax]
0x11cc2: nop word ptr [rax+rax]
0x11d76: nop word ptr cs:[rax+rax]
0x11dc7: nop word ptr [rax+rax]
0x11dd0: xor r9d,r9d
0x11dd3: cmp qword ptr [r8],0x0
0x11dd7: je 0x11deb
0x11dd9: nop dword ptr [rax]
0x11de0: add r9,0x1
0x11de4: cmp qword ptr [r8+r9*8],0x0
0x11de9: jne 0x11de0
0x11deb: jmp 0x119b0
0x11df0: sub rsp,0x68
0x11df4: mov r10,r8
0x11df7: xor r9d,r9d
0x11dfa: mov rax,qword ptr fs:[0x28]
0x11e03: mov qword ptr [rsp+0x58],rax
0x11e08: xor eax,eax
0x11e0a: mov r8,rsp
0x11e0d: nop dword ptr [rax]
0x11e10: mov eax,dword ptr [r10]
0x11e13: cmp eax,0x2f
0x11e16: ja 0x11e5a
0x11e18: mov r11d,eax
0x11e1b: add r11,qword ptr [r10+0x10]
0x11e1f: add eax,0x8
0x11e22: mov dword ptr [r10],eax
0x11e25: mov rax,qword ptr [r11]
0x11e28: test rax,rax
0x11e2b: mov qword ptr [r8+r9*8],rax
0x11e2f: je 0x11e3b
0x11e31: add r9,0x1
0x11e35: cmp r9,0xa
0x11e39: jne 0x11e10
0x11e3b: call 0x119b0
0x11e40: mov rax,qword ptr [rsp+0x58]
0x11e45: xor rax,qword ptr fs:[0x28]
0x11e4e: jne 0x11e55
0x11e50: add rsp,0x68
0x11e54: ret 
0x11e55: call 0x2b30
0x11e5a: mov r11,qword ptr [r10+8]
0x11e5e: lea rax,[r11+8]
0x11e62: mov qword ptr [r10+8],rax
0x11e66: jmp 0x11e25
0x11e68: nop dword ptr [rax+rax]
0x11f30: call 0x2b30
0x11f3c: mov rax,rbx
0x11f3f: add rbx,0x8
0x11f43: jmp 0x11ef6
0x11f45: nop 
0x11f46: nop word ptr cs:[rax+rax]
0x11f50: push rbx
0x11f51: lea rsi,[rip+0x6a81]
0x11f58: mov edx,0x5
0x11f5d: xor edi,edi
0x11f5f: call 0x2ad0
0x11f64: lea rdx,[rip+0x6a83]
0x11f6b: mov rsi,rax
0x11f6e: mov edi,0x1
0x11f73: xor eax,eax
0x11f75: call 0x2ee0
0x11f7a: lea rsi,[rip+0x6a83]
0x11f81: mov edx,0x5
0x11f86: xor edi,edi
0x11f88: call 0x2ad0
0x11f8d: lea rcx,[rip+0x5324]
0x11f94: lea rdx,[rip+0x456b]
0x11f9b: mov rsi,rax
0x11f9e: mov edi,0x1
0x11fa3: xor eax,eax
0x11fa5: call 0x2ee0
0x11faa: mov rbx,qword ptr [rip+0x20b137]
0x11fb1: lea rsi,[rip+0x6c78]
0x11fb8: xor edi,edi
0x11fba: mov edx,0x5
0x11fbf: call 0x2ad0
0x11fc4: mov rsi,rbx
0x11fc7: mov rdi,rax
0x11fca: pop rbx
0x11fcb: jmp 0x2cb0
0x11fd0: cmp byte ptr [rip+0x20d75a],0x0
0x11fd7: je 0x11fe8
0x11fd9: movzx eax,byte ptr [rip+0x20d750]
0x11fe0: ret 
0x11fe1: nop dword ptr [rax]
0x11fe8: sub rsp,0x8
0x11fec: call 0x2c00
0x11ff1: test eax,eax
0x11ff3: mov byte ptr [rip+0x20d737],0x1
0x11ffa: sete al
0x11ffd: mov byte ptr [rip+0x20d72d],al
0x12003: add rsp,0x8
0x12007: ret 
0x12008: nop dword ptr [rax+rax]
0x1202a: nop word ptr [rax+rax]
0x12030: mov rax,rdi
0x12033: mul rsi
0x12036: mov rdi,rax
0x12039: seto al
0x1203c: test rdi,rdi
0x1203f: js 0x1204b
0x12041: movzx eax,al
0x12044: test rax,rax
0x12047: jne 0x1204b
0x12049: jmp 0x12010
0x1204b: sub rsp,0x8
0x1204f: call 0x12260
0x12054: nop 
0x12056: nop word ptr cs:[rax+rax]
0x12060: jmp 0x12010
0x12062: nop dword ptr [rax]
0x12066: nop word ptr cs:[rax+rax]
0x12092: nop word ptr [rax+rax]
0x120a6: nop word ptr cs:[rax+rax]
0x120b0: mov rax,rsi
0x120b3: mul rdx
0x120b6: mov rsi,rax
0x120b9: seto al
0x120bc: test rsi,rsi
0x120bf: js 0x120cb
0x120c1: movzx eax,al
0x120c4: test rax,rax
0x120c7: jne 0x120cb
0x120c9: jmp 0x12070
0x120cb: sub rsp,0x8
0x120cf: call 0x12260
0x120d4: nop 
0x120d6: nop word ptr cs:[rax+rax]
0x120e0: test rdi,rdi
0x120e3: mov r9,rdx
0x120e6: mov rcx,qword ptr [rsi]
0x120e9: je 0x12120
0x120eb: xor edx,edx
0x120ed: movabs rax,0x5555555555555554
0x120f7: div r9
0x120fa: cmp rax,rcx
0x120fd: jbe 0x1213b
0x120ff: mov rax,rcx
0x12102: shr rax,0x1
0x12105: lea rcx,[rax+rcx+1]
0x1210a: mov qword ptr [rsi],rcx
0x1210d: imul rcx,r9
0x12111: mov rsi,rcx
0x12114: jmp 0x12070
0x12119: nop dword ptr [rax]
0x12120: test rcx,rcx
0x12123: je 0x12148
0x12125: mov rax,rcx
0x12128: mul r9
0x1212b: seto dl
0x1212e: test rax,rax
0x12131: movzx edx,dl
0x12134: js 0x1213b
0x12136: test rdx,rdx
0x12139: je 0x1210a
0x1213b: sub rsp,0x8
0x1213f: call 0x12260
0x12144: nop dword ptr [rax]
0x12148: xor edx,edx
0x1214a: mov eax,0x80
0x1214f: xor r8d,r8d
0x12152: div r9
0x12155: test rax,rax
0x12158: sete r8b
0x1215c: lea rcx,[r8+rax]
0x12160: jmp 0x12125
0x12162: nop dword ptr [rax]
0x12166: nop word ptr cs:[rax+rax]
0x12170: test rdi,rdi
0x12173: mov rax,qword ptr [rsi]
0x12176: je 0x121a0
0x12178: movabs rdx,0x5555555555555553
0x12182: cmp rax,rdx
0x12185: ja 0x121b1
0x12187: mov rdx,rax
0x1218a: shr rdx,0x1
0x1218d: lea rax,[rdx+rax+1]
0x12192: mov qword ptr [rsi],rax
0x12195: mov rsi,rax
0x12198: jmp 0x12070
0x1219d: nop dword ptr [rax]
0x121a0: test rax,rax
0x121a3: mov edx,0x80
0x121a8: cmove rax,rdx
0x121ac: test rax,rax
0x121af: jns 0x12192
0x121b1: sub rsp,0x8
0x121b5: call 0x12260
0x121ba: nop word ptr [rax+rax]
0x121c0: push rbx
0x121c1: mov rbx,rdi
0x121c4: call 0x12010
0x121c9: mov rdx,rbx
0x121cc: xor esi,esi
0x121ce: mov rdi,rax
0x121d1: pop rbx
0x121d2: jmp 0x2bf0
0x121d7: nop word ptr [rax+rax]
0x121e0: mov rax,rdi
0x121e3: sub rsp,0x8
0x121e7: mul rsi
0x121ea: seto dl
0x121ed: test rax,rax
0x121f0: js 0x12209
0x121f2: movzx edx,dl
0x121f5: test rdx,rdx
0x121f8: jne 0x12209
0x121fa: call 0x2cd0
0x121ff: test rax,rax
0x12202: je 0x12209
0x12204: add rsp,0x8
0x12208: ret 
0x12209: call 0x12260
0x1220e: nop 
0x12238: nop dword ptr [rax+rax]
0x12253: nop word ptr cs:[rax+rax]
0x1225d: nop dword ptr [rax]
0x12290: call 0x2940
0x12295: nop word ptr cs:[rax+rax]
0x1229f: nop 
0x12306: nop word ptr cs:[rax+rax]
0x12344: cmp eax,0x22
0x12347: mov ebp,0x1
0x1234c: jne 0x12378
0x12353: movzx r12d,byte ptr [rcx]
0x12357: test r12b,r12b
0x1235a: jne 0x123d7
0x12361: nop dword ptr [rax]
0x123a2: nop word ptr [rax+rax]
0x123ac: nop dword ptr [rax]
0x123b0: movzx r12d,byte ptr [rbp]
0x123b5: test r12b,r12b
0x123b8: je 0x12378
0x123ba: movsx esi,r12b
0x123be: mov rdi,r13
0x123c1: xor ebp,ebp
0x123c3: call 0x2b70
0x123c8: test rax,rax
0x123cb: mov ebx,0x1
0x123d0: mov rcx,qword ptr [rsp+8]
0x123d5: je 0x12378
0x123d7: movsx esi,r12b
0x123db: mov rdi,r13
0x123de: mov qword ptr [rsp+8],rcx
0x123e3: call 0x2b70
0x123e8: test rax,rax
0x123eb: mov rcx,qword ptr [rsp+8]
0x123f0: je 0x124bc
0x123f6: lea eax,[r12-0x45]
0x123fb: cmp al,0x2f
0x123fd: ja 0x12450
0x123ff: movabs rdx,0x814400308945
0x12409: bt rdx,rax
0x1240d: jae 0x12450
0x1240f: mov esi,0x30
0x12414: mov rdi,r13
0x12417: mov qword ptr [rsp+8],rcx
0x1241c: call 0x2b70
0x12421: test rax,rax
0x12424: mov rcx,qword ptr [rsp+8]
0x12429: je 0x12450
0x1242b: movzx eax,byte ptr [rcx+1]
0x1242f: cmp al,0x44
0x12431: je 0x1243f
0x12433: cmp al,0x69
0x12435: je 0x12608
0x1243b: cmp al,0x42
0x1243d: jne 0x12450
0x1243f: mov edi,0x2
0x12444: mov esi,0x3e8
0x12449: jmp 0x1245a
0x1244b: nop dword ptr [rax+rax]
0x12450: mov edi,0x1
0x12455: mov esi,0x400
0x1245a: sub r12d,0x42
0x1245e: cmp r12b,0x35
0x12462: ja 0x124bc
0x12464: lea rdx,[rip+0x68bd]
0x1246b: movzx r12d,r12b
0x1246f: movsxd rax,dword ptr [rdx+r12*4]
0x12473: add rax,rdx
0x12476: jmp rax
0x12478: mov rax,rbx
0x1247b: mul rsi
0x1247e: jo 0x12671
0x12484: xor r8d,r8d
0x12487: mul rsi
0x1248a: jo 0x12662
0x12490: mov rbx,rax
0x12493: or ebp,r8d
0x12496: nop word ptr cs:[rax+rax]
0x124a0: movsxd rdi,edi
0x124a3: mov eax,ebp
0x124a5: add rcx,rdi
0x124a8: or eax,0x2
0x124ab: mov qword ptr [r15],rcx
0x124ae: cmp byte ptr [rcx],0x0
0x124b1: mov qword ptr [r14],rbx
0x124b4: cmovne ebp,eax
0x124b7: jmp 0x1237d
0x124bc: mov qword ptr [r14],rbx
0x124bf: or ebp,0x2
0x124c2: jmp 0x1237d
0x124c7: mov edx,0x2
0x124cc: mov rax,rdx
0x124cf: mul rbx
0x124d2: jo 0x1256e
0x124d8: add rbx,rbx
0x124db: jmp 0x124a0
0x124dd: mov edx,0x200
0x124e2: mov rax,rdx
0x124e5: mul rbx
0x124e8: jo 0x1256e
0x124ee: shl rbx,0x9
0x124f2: jmp 0x124a0
0x124f4: mov r8d,0x7
0x124fa: xor r9d,r9d
0x124fd: nop dword ptr [rax]
0x12500: mov rax,rbx
0x12503: mul rsi
0x12506: mov rbx,rax
0x12509: jo 0x1269e
0x1250f: sub r8d,0x1
0x12513: jne 0x12500
0x12515: or ebp,r9d
0x12518: jmp 0x124a0
0x1251a: mov r8d,0x8
0x12520: xor r9d,r9d
0x12523: nop dword ptr [rax+rax]
0x12528: mov rax,rbx
0x1252b: mul rsi
0x1252e: mov rbx,rax
0x12531: jo 0x12680
0x12537: sub r8d,0x1
0x1253b: jne 0x12528
0x1253d: jmp 0x12515
0x1253f: mov r8d,0x4
0x12545: xor r9d,r9d
0x12548: mov rax,rbx
0x1254b: mul rsi
0x1254e: mov rbx,rax
0x12551: jo 0x12653
0x12557: sub r8d,0x1
0x1255b: jne 0x12548
0x1255d: jmp 0x12515
0x1255f: mov rax,rbx
0x12562: mul rsi
0x12565: mov rbx,rax
0x12568: jno 0x124a0
0x1256e: mov ebp,0x1
0x12573: or rbx,0xffffffffffffffff
0x12577: jmp 0x124a0
0x1257c: nop dword ptr [rax]
0x12580: mov r8d,0x5
0x12586: xor r9d,r9d
0x12589: mov rax,rbx
0x1258c: mul rsi
0x1258f: mov rbx,rax
0x12592: jo 0x1268f
0x12598: sub r8d,0x1
0x1259c: jne 0x12589
0x1259e: jmp 0x12515
0x125a3: mov r8d,0x6
0x125a9: xor r9d,r9d
0x125ac: mov rax,rbx
0x125af: mul rsi
0x125b2: mov rbx,rax
0x125b5: jo 0x12644
0x125bb: sub r8d,0x1
0x125bf: jne 0x125ac
0x125c1: jmp 0x12515
0x125c6: mov edx,0x400
0x125cb: mov rax,rdx
0x125ce: mul rbx
0x125d1: jo 0x1256e
0x125d3: shl rbx,0xa
0x125d7: jmp 0x124a0
0x125dc: mov rax,rbx
0x125df: mul rsi
0x125e2: jo 0x126ad
0x125e8: xor r8d,r8d
0x125eb: mul rsi
0x125ee: jno 0x12487
0x125f4: mov r8d,0x1
0x125fa: or rax,0xffffffffffffffff
0x125fe: jmp 0x12487
0x12603: nop dword ptr [rax+rax]
0x12608: xor edi,edi
0x1260a: cmp byte ptr [rcx+2],0x42
0x1260e: mov esi,0x400
0x12613: sete dil
0x12617: lea edi,[rdi+rdi+1]
0x1261b: jmp 0x1245a
0x12620: call 0x2b30
0x12625: lea rcx,[rip+0x67d4]
0x1262c: lea rsi,[rip+0x66ad]
0x12633: lea rdi,[rip+0x66c6]
0x1263a: mov edx,0x54
0x1263f: call 0x2be0
0x12644: mov r9d,0x1
0x1264a: or rbx,0xffffffffffffffff
0x1264e: jmp 0x125bb
0x12653: mov r9d,0x1
0x12659: or rbx,0xffffffffffffffff
0x1265d: jmp 0x12557
0x12662: mov r8d,0x1
0x12668: or rbx,0xffffffffffffffff
0x1266c: jmp 0x12493
0x12671: or rax,0xffffffffffffffff
0x12675: mov r8d,0x1
0x1267b: jmp 0x12487
0x12680: mov r9d,0x1
0x12686: or rbx,0xffffffffffffffff
0x1268a: jmp 0x12537
0x1268f: mov r9d,0x1
0x12695: or rbx,0xffffffffffffffff
0x12699: jmp 0x12598
0x1269e: mov r9d,0x1
0x126a4: or rbx,0xffffffffffffffff
0x126a8: jmp 0x1250f
0x126ad: mov r8d,0x1
0x126b3: or rax,0xffffffffffffffff
0x126b7: jmp 0x125eb
0x126bc: nop dword ptr [rax]
0x126c0: push rbx
0x126c1: mov edx,0xa
0x126c6: xor ebx,ebx
0x126c8: sub rsp,0x20
0x126cc: mov rcx,qword ptr [rip+0x20aa1d]
0x126d3: lea rsi,[rsp+0x10]
0x126d8: lea rdi,[rsp+8]
0x126dd: mov qword ptr [rsp+8],0x0
0x126e6: mov rax,qword ptr fs:[0x28]
0x126ef: mov qword ptr [rsp+0x18],rax
0x126f4: xor eax,eax
0x126f6: mov qword ptr [rsp+0x10],0x0
0x126ff: call 0x2ce0
0x12704: test rax,rax
0x12707: jle 0x12722
0x12709: mov rdi,qword ptr [rsp+8]
0x1270e: lea rax,[rdi+rax-1]
0x12713: cmp byte ptr [rax],0xa
0x12716: je 0x12748
0x12718: call 0x2d40
0x1271d: test eax,eax
0x1271f: setg bl
0x12722: mov rdi,qword ptr [rsp+8]
0x12727: call 0x30d0
0x1272c: mov rdx,qword ptr [rsp+0x18]
0x12731: xor rdx,qword ptr fs:[0x28]
0x1273a: mov eax,ebx
0x1273c: jne 0x12752
0x1273e: add rsp,0x20
0x12742: pop rbx
0x12743: ret 
0x12744: nop dword ptr [rax]
0x12748: mov byte ptr [rax],0x0
0x1274b: mov rdi,qword ptr [rsp+8]
0x12750: jmp 0x12718
0x12752: call 0x2b30
0x12757: nop word ptr [rax+rax]
0x12760: test rdi,rdi
0x12763: push rbx
0x12764: mov rbx,rdi
0x12767: je 0x1277a
0x12769: call 0x2e50
0x1276e: test eax,eax
0x12770: je 0x1277a
0x12772: test dword ptr [rbx],0x100
0x12778: jne 0x12788
0x1277a: mov rdi,rbx
0x1277d: pop rbx
0x1277e: jmp 0x2e00
0x12783: nop dword ptr [rax+rax]
0x12788: mov rdi,rbx
0x1278b: mov edx,0x1
0x12790: xor esi,esi
0x12792: call 0x127d0
0x12797: mov rdi,rbx
0x1279a: pop rbx
0x1279b: jmp 0x2e00
0x127a0: xor eax,eax
0x127a2: mov rcx,qword ptr [rdi+0x20]
0x127a6: cmp qword ptr [rdi+0x28],rcx
0x127aa: ja 0x127c7
0x127ac: mov rax,qword ptr [rdi+0x10]
0x127b0: sub rax,qword ptr [rdi+8]
0x127b4: test dword ptr [rdi],0x100
0x127ba: je 0x127c7
0x127bc: mov rdx,qword ptr [rdi+0x58]
0x127c0: sub rdx,qword ptr [rdi+0x48]
0x127c4: add rax,rdx
0x127c7: ret 
0x127c9: nop dword ptr [rax]
0x127d0: mov rax,qword ptr [rdi+8]
0x127d4: cmp qword ptr [rdi+0x10],rax
0x127d8: je 0x127e0
0x127da: jmp 0x2f70
0x127df: nop 
0x127e0: mov rax,qword ptr [rdi+0x20]
0x127e4: cmp qword ptr [rdi+0x28],rax
0x127e8: jne 0x127da
0x127ea: cmp qword ptr [rdi+0x48],0x0
0x127ef: jne 0x127da
0x127f1: push r12
0x127f3: push rbp
0x127f4: mov r12d,edx
0x127f7: push rbx
0x127f8: mov rbp,rsi
0x127fb: mov rbx,rdi
0x127fe: call 0x2db0
0x12803: mov edx,r12d
0x12806: mov rsi,rbp
0x12809: mov edi,eax
0x1280b: call 0x2bc0
0x12810: cmp rax,0xffffffffffffffff
0x12814: je 0x12822
0x12816: and dword ptr [rbx],0xffffffef
0x12819: mov qword ptr [rbx+0x90],rax
0x12820: xor eax,eax
0x12822: pop rbx
0x12823: pop rbp
0x12824: pop r12
0x12826: ret 
0x12827: nop word ptr [rax+rax]
0x128ae: call 0x2b30
0x128b3: nop word ptr cs:[rax+rax]
0x128bd: nop dword ptr [rax]
0x12907: test rax,rax
0x1290a: mov rbx,qword ptr [rsp+8]
0x1290f: je 0x1299e
0x12915: mov rcx,r13
0x12918: mov rdx,rbx
0x1291b: mov esi,0x1
0x12920: mov rdi,rax
0x12923: mov rbp,rax
0x12926: call 0x3040
0x1292b: cmp rax,rbx
0x1292e: jb 0x12970
0x12930: cmp rbp,r12
0x12933: je 0x1293d
0x12935: mov rdi,rbp
0x12938: call 0x30d0
0x1293d: cmp rbx,0x7fffffff
0x12944: ja 0x12993
0x12946: mov rcx,qword ptr [rsp+0x7e8]
0x1294e: xor rcx,qword ptr fs:[0x28]
0x12957: mov eax,ebx
0x12959: jne 0x129ad
0x1295b: add rsp,0x7f8
0x12962: pop rbx
0x12963: pop rbp
0x12964: pop r12
0x12966: pop r13
0x12968: ret 
0x12969: nop dword ptr [rax]
0x12970: cmp rbp,r12
0x12973: mov ebx,0xffffffff
0x12978: je 0x12946
0x1297a: call 0x2950
0x1297f: mov r13d,dword ptr [rax]
0x12982: mov r12,rax
0x12985: mov rdi,rbp
0x12988: call 0x30d0
0x1298d: mov dword ptr [r12],r13d
0x12991: jmp 0x12946
0x12993: call 0x2950
0x12998: mov dword ptr [rax],0x4b
0x1299e: mov rdi,r13
0x129a1: mov ebx,0xffffffff
0x129a6: call 0x14250
0x129ab: jmp 0x12946
0x129ad: call 0x2b30
0x129b2: nop word ptr cs:[rax+rax]
0x129bc: nop dword ptr [rax]
0x129c2: nop word ptr cs:[rax+rax]
0x129cc: nop dword ptr [rax]
0x129d5: nop word ptr cs:[rax+rax]
0x129df: nop 
0x129f5: nop 
0x129f6: nop word ptr cs:[rax+rax]
0x12a22: nop word ptr cs:[rax+rax]
0x12a2c: nop dword ptr [rax]
0x12a30: mov edi,0x1
0x12a35: jmp 0x4920
0x12a3a: nop word ptr [rax+rax]
0x12a86: nop word ptr cs:[rax+rax]
0x12b40: mov byte ptr [rsp+0x17],0x1
0x12b45: jmp 0x12ac7
0x12b47: nop word ptr [rax+rax]
0x12b56: nop word ptr cs:[rax+rax]
0x12bbd: nop dword ptr [rax]
0x12bd3: nop dword ptr [rax]
0x12bd6: nop word ptr cs:[rax+rax]
0x12be0: push r15
0x12be2: push r14
0x12be4: mov r14,rdi
0x12be7: push r13
0x12be9: push r12
0x12beb: xor edi,edi
0x12bed: push rbp
0x12bee: push rbx
0x12bef: mov rbp,rsi
0x12bf2: lea rsi,[rip+0x6248]
0x12bf9: mov r12,rdx
0x12bfc: mov edx,0x5
0x12c01: sub rsp,0x8
0x12c05: mov rbx,qword ptr [rip+0x20a514]
0x12c0c: call 0x2ad0
0x12c11: mov rdi,rax
0x12c14: mov rsi,rbx
0x12c17: call 0x2cb0
0x12c1c: mov r15,qword ptr [r14]
0x12c1f: test r15,r15
0x12c22: je 0x12cb8
0x12c28: xor r13d,r13d
0x12c2b: xor ebx,ebx
0x12c2d: jmp 0x12c68
0x12c2f: nop 
0x12c30: mov rdi,r15
0x12c33: add rbx,0x1
0x12c37: mov r13,rbp
0x12c3a: call 0xf6c0
0x12c3f: mov rdi,qword ptr [rip+0x20a4da]
0x12c46: lea rdx,[rip+0x6209]
0x12c4d: mov rcx,rax
0x12c50: mov esi,0x1
0x12c55: xor eax,eax
0x12c57: add rbp,r12
0x12c5a: call 0x3050
0x12c5f: mov r15,qword ptr [r14+rbx*8]
0x12c63: test r15,r15
0x12c66: je 0x12cb8
0x12c68: test rbx,rbx
0x12c6b: je 0x12c30
0x12c6d: mov rdx,r12
0x12c70: mov rsi,rbp
0x12c73: mov rdi,r13
0x12c76: call 0x2c90
0x12c7b: test eax,eax
0x12c7d: jne 0x12c30
0x12c7f: mov rdi,r15
0x12c82: add rbx,0x1
0x12c86: add rbp,r12
0x12c89: call 0xf6c0
0x12c8e: mov rdi,qword ptr [rip+0x20a48b]
0x12c95: lea rdx,[rip+0x61c2]
0x12c9c: mov rcx,rax
0x12c9f: mov esi,0x1
0x12ca4: xor eax,eax
0x12ca6: call 0x3050
0x12cab: mov r15,qword ptr [r14+rbx*8]
0x12caf: test r15,r15
0x12cb2: jne 0x12c68
0x12cb4: nop dword ptr [rax]
0x12cb8: mov rdi,qword ptr [rip+0x20a461]
0x12cbf: mov rax,qword ptr [rdi+0x28]
0x12cc3: cmp rax,qword ptr [rdi+0x30]
0x12cc7: jae 0x12ce8
0x12cc9: lea rdx,[rax+1]
0x12ccd: mov qword ptr [rdi+0x28],rdx
0x12cd1: mov byte ptr [rax],0xa
0x12cd4: add rsp,0x8
0x12cd8: pop rbx
0x12cd9: pop rbp
0x12cda: pop r12
0x12cdc: pop r13
0x12cde: pop r14
0x12ce0: pop r15
0x12ce2: ret 
0x12ce3: nop dword ptr [rax+rax]
0x12ce8: add rsp,0x8
0x12cec: mov esi,0xa
0x12cf1: pop rbx
0x12cf2: pop rbp
0x12cf3: pop r12
0x12cf5: pop r13
0x12cf7: pop r14
0x12cf9: pop r15
0x12cfb: jmp 0x2b90
0x12d53: mov rdx,r15
0x12d56: mov rsi,rbp
0x12d59: mov rdi,rbx
0x12d5c: call 0x12be0
0x12d61: call r13
0x12d64: mov rax,0xffffffffffffffff
0x12d6b: jmp 0x12d36
0x12d6d: nop dword ptr [rax]
0x12d70: push r14
0x12d72: push r13
0x12d74: push r12
0x12d76: push rbp
0x12d77: push rbx
0x12d78: mov r14,qword ptr [rsi]
0x12d7b: test r14,r14
0x12d7e: je 0x12db1
0x12d80: mov r12,rcx
0x12d83: mov r13,rdi
0x12d86: mov rbp,rdx
0x12d89: lea rbx,[rsi+8]
0x12d8d: jmp 0x12d9f
0x12d8f: nop 
0x12d90: mov r14,qword ptr [rbx]
0x12d93: add rbp,r12
0x12d96: add rbx,0x8
0x12d9a: test r14,r14
0x12d9d: je 0x12db1
0x12d9f: mov rdx,r12
0x12da2: mov rsi,rbp
0x12da5: mov rdi,r13
0x12da8: call 0x2c90
0x12dad: test eax,eax
0x12daf: jne 0x12d90
0x12db1: pop rbx
0x12db2: mov rax,r14
0x12db5: pop rbp
0x12db6: pop r12
0x12db8: pop r13
0x12dba: pop r14
0x12dbc: ret 
0x12dbd: nop dword ptr [rax]
0x12dc0: push r12
0x12dc2: push rbp
0x12dc3: mov rbp,rdi
0x12dc6: push rbx
0x12dc7: call 0x29a0
0x12dcc: mov ebx,dword ptr [rbp]
0x12dcf: mov rdi,rbp
0x12dd2: mov r12,rax
0x12dd5: call 0x13f50
0x12dda: and ebx,0x20
0x12ddd: test ebx,ebx
0x12ddf: jne 0x12df8
0x12de1: test eax,eax
0x12de3: je 0x12def
0x12de5: test r12,r12
0x12de8: mov eax,0xffffffff
0x12ded: je 0x12e28
0x12def: pop rbx
0x12df0: pop rbp
0x12df1: pop r12
0x12df3: ret 
0x12df4: nop dword ptr [rax]
0x12df8: test eax,eax
0x12dfa: jne 0x12e18
0x12dfc: call 0x2950
0x12e01: mov dword ptr [rax],0x0
0x12e07: mov eax,0xffffffff
0x12e0c: pop rbx
0x12e0d: pop rbp
0x12e0e: pop r12
0x12e10: ret 
0x12e11: nop dword ptr [rax]
0x12e18: pop rbx
0x12e19: mov eax,0xffffffff
0x12e1e: pop rbp
0x12e1f: pop r12
0x12e21: ret 
0x12e22: nop word ptr [rax+rax]
0x12e28: call 0x2950
0x12e2d: cmp dword ptr [rax],0x9
0x12e30: pop rbx
0x12e31: pop rbp
0x12e32: pop r12
0x12e34: setne al
0x12e37: movzx eax,al
0x12e3a: neg eax
0x12e3c: ret 
0x12e3d: nop dword ptr [rax]
0x12e40: push r14
0x12e42: push r13
0x12e44: push r12
0x12e46: push rbp
0x12e47: push rbx
0x12e48: call 0x2a90
0x12e4d: test rax,rax
0x12e50: mov rbx,rax
0x12e53: je 0x12e62
0x12e55: mov rdi,rax
0x12e58: call 0x2d10
0x12e5d: cmp eax,0x2
0x12e60: jbe 0x12e70
0x12e62: mov rax,rbx
0x12e65: pop rbx
0x12e66: pop rbp
0x12e67: pop r12
0x12e69: pop r13
0x12e6b: pop r14
0x12e6d: ret 
0x12e6e: nop 
0x12e70: mov edi,eax
0x12e72: mov edx,0x3
0x12e77: mov esi,0x406
0x12e7c: xor eax,eax
0x12e7e: call 0x13fd0
0x12e83: mov r12d,eax
0x12e86: call 0x2950
0x12e8b: test r12d,r12d
0x12e8e: mov rbp,rax
0x12e91: jns 0x12eb8
0x12e93: mov r14d,dword ptr [rax]
0x12e96: xor r13d,r13d
0x12e99: mov rdi,rbx
0x12e9c: mov rbx,r13
0x12e9f: call 0x2c60
0x12ea4: mov dword ptr [rbp],r14d
0x12ea8: mov rax,rbx
0x12eab: pop rbx
0x12eac: pop rbp
0x12ead: pop r12
0x12eaf: pop r13
0x12eb1: pop r14
0x12eb3: ret 
0x12eb4: nop dword ptr [rax]
0x12eb8: mov edi,r12d
0x12ebb: call 0x2fb0
0x12ec0: test rax,rax
0x12ec3: mov r13,rax
0x12ec6: mov r14d,dword ptr [rbp]
0x12eca: jne 0x12e99
0x12ecc: mov edi,r12d
0x12ecf: call 0x2c30
0x12ed4: jmp 0x12e99
0x12ed6: nop word ptr cs:[rax+rax]
0x12eea: nop word ptr [rax+rax]
0x12ef0: sub rsp,0x28
0x12ef4: xor edi,edi
0x12ef6: mov rsi,rsp
0x12ef9: mov rax,qword ptr fs:[0x28]
0x12f02: mov qword ptr [rsp+0x18],rax
0x12f07: xor eax,eax
0x12f09: call 0x2a10
0x12f0e: mov rcx,qword ptr [rsp+0x18]
0x12f13: xor rcx,qword ptr fs:[0x28]
0x12f1c: mov rax,qword ptr [rsp]
0x12f20: mov rdx,qword ptr [rsp+8]
0x12f25: jne 0x12f2c
0x12f27: add rsp,0x28
0x12f2b: ret 
0x12f2c: call 0x2b30
0x12f31: nop word ptr cs:[rax+rax]
0x12f3b: nop dword ptr [rax+rax]
0x12f7a: nop word ptr [rax+rax]
0x12fa0: movsx rcx,byte ptr [rdi]
0x12fa4: test cl,cl
0x12fa6: je 0x12fd0
0x12fa8: xor eax,eax
0x12faa: nop word ptr [rax+rax]
0x12fb0: rol rax,0x9
0x12fb4: add rdi,0x1
0x12fb8: add rax,rcx
0x12fbb: movsx rcx,byte ptr [rdi]
0x12fbf: test cl,cl
0x12fc1: jne 0x12fb0
0x12fc3: xor edx,edx
0x12fc5: div rsi
0x12fc8: mov rax,rdx
0x12fcb: ret 
0x12fcc: nop dword ptr [rax]
0x12fd0: xor edx,edx
0x12fd2: mov rax,rdx
0x12fd5: ret 
0x12fd6: nop word ptr cs:[rax+rax]
0x13006: nop word ptr cs:[rax+rax]
0x1301c: nop dword ptr [rax]
0x130d9: nop dword ptr [rax]
0x1312f: nop 
0x1316b: nop dword ptr [rax+rax]
0x131ba: nop word ptr [rax+rax]
0x131fe: nop 
0x13230: call 0x2b30
0x13235: nop word ptr cs:[rax+rax]
0x1323f: nop 
0x13283: nop dword ptr [rax+rax]
0x13288: lea rax,[rsp+0x60]
0x1328d: mov dword ptr [rsp],0x18
0x13294: mov ecx,dword ptr [rsp+0x38]
0x13298: mov qword ptr [rsp+8],rax
0x1329d: lea rax,[rsp+0x20]
0x132a2: mov qword ptr [rsp+0x10],rax
0x132a7: jmp 0x13260
0x132a9: call 0x2b30
0x132ae: nop 
0x132b0: push rbx
0x132b1: mov rbx,rdi
0x132b4: mov edi,0x18
0x132b9: call 0x12010
0x132be: mov qword ptr [rax],rbx
0x132c1: mov qword ptr [rax+0x10],0x0
0x132c9: mov qword ptr [rax+8],0x0
0x132d1: pop rbx
0x132d2: ret 
0x132d3: nop dword ptr [rax]
0x132d6: nop word ptr cs:[rax+rax]
0x132e0: push rbx
0x132e1: call 0x13530
0x132e6: test rax,rax
0x132e9: je 0x13310
0x132eb: mov rbx,rax
0x132ee: mov edi,0x18
0x132f3: call 0x12010
0x132f8: mov qword ptr [rax],rbx
0x132fb: mov qword ptr [rax+0x10],0x0
0x13303: mov qword ptr [rax+8],0x0
0x1330b: pop rbx
0x1330c: ret 
0x1330d: nop dword ptr [rax]
0x13310: xor eax,eax
0x13312: pop rbx
0x13313: ret 
0x13314: nop 
0x13316: nop word ptr cs:[rax+rax]
0x13320: mov rax,qword ptr [rdi]
0x13323: ret 
0x13324: nop 
0x13326: nop word ptr cs:[rax+rax]
0x13330: push r15
0x13332: push r14
0x13334: lea r15,[rsi+1]
0x13338: push r13
0x1333a: push r12
0x1333c: mov r13,rdi
0x1333f: push rbp
0x13340: push rbx
0x13341: mov r14,rsi
0x13344: sub rsp,0x28
0x13348: mov rbp,qword ptr [rdi+8]
0x1334c: mov rbx,qword ptr [rdi+0x10]
0x13350: mov rax,qword ptr fs:[0x28]
0x13359: mov qword ptr [rsp+0x18],rax
0x1335e: xor eax,eax
0x13360: mov rax,qword ptr [rdi]
0x13363: lea r12,[rsp+0x10]
0x13368: mov qword ptr [rsp+8],rax
0x1336d: jmp 0x133a5
0x1336f: nop 
0x13370: cmp rbx,r14
0x13373: je 0x133ff
0x13379: mov rax,rbx
0x1337c: xor edx,edx
0x1337e: sub rax,r14
0x13381: div r15
0x13384: sub rbx,rdx
0x13387: mov rdi,rdx
0x1338a: mov rsi,rax
0x1338d: xor edx,edx
0x1338f: mov rax,rbp
0x13392: div r15
0x13395: cmp rbp,rbx
0x13398: jbe 0x13438
0x1339e: lea rbx,[rdi-1]
0x133a2: mov rbp,rdx
0x133a5: cmp rbx,r14
0x133a8: jae 0x13370
0x133aa: mov rax,rbx
0x133ad: xor edx,edx
0x133af: nop 
0x133b0: shl rax,0x8
0x133b4: add rdx,0x1
0x133b8: add rax,0xff
0x133be: cmp r14,rax
0x133c1: ja 0x133b0
0x133c3: mov rdi,qword ptr [rsp+8]
0x133c8: mov rsi,r12
0x133cb: call 0x13880
0x133d0: mov rax,r12
0x133d3: nop dword ptr [rax+rax]
0x133d8: movzx edx,byte ptr [rax]
0x133db: shl rbx,0x8
0x133df: shl rbp,0x8
0x133e3: add rbx,0xff
0x133ea: add rax,0x1
0x133ee: add rbp,rdx
0x133f1: cmp r14,rbx
0x133f4: ja 0x133d8
0x133f6: cmp rbx,r14
0x133f9: jne 0x13379
0x133ff: mov qword ptr [r13+0x10],0x0
0x13407: mov qword ptr [r13+8],0x0
0x1340f: mov rcx,qword ptr [rsp+0x18]
0x13414: xor rcx,qword ptr fs:[0x28]
0x1341d: mov rax,rbp
0x13420: jne 0x13445
0x13422: add rsp,0x28
0x13426: pop rbx
0x13427: pop rbp
0x13428: pop r12
0x1342a: pop r13
0x1342c: pop r14
0x1342e: pop r15
0x13430: ret 
0x13431: nop dword ptr [rax]
0x13438: mov qword ptr [r13+8],rax
0x1343c: mov qword ptr [r13+0x10],rsi
0x13440: mov rbp,rdx
0x13443: jmp 0x1340f
0x13445: call 0x2b30
0x1344a: nop word ptr [rax+rax]
0x13450: push rbx
0x13451: mov rdx,0xffffffffffffffff
0x13458: mov rbx,rdi
0x1345b: mov esi,0x18
0x13460: call 0x2f50
0x13465: mov rdi,rbx
0x13468: pop rbx
0x13469: jmp 0x30d0
0x1346e: nop 
0x13470: push r13
0x13472: push r12
0x13474: push rbp
0x13475: push rbx
0x13476: mov rbx,rdi
0x13479: sub rsp,0x8
0x1347d: mov rdi,qword ptr [rdi]
0x13480: call 0x13a20
0x13485: mov r12d,eax
0x13488: call 0x2950
0x1348d: mov r13d,dword ptr [rax]
0x13490: mov rdi,rbx
0x13493: mov rdx,0xffffffffffffffff
0x1349a: mov esi,0x18
0x1349f: mov rbp,rax
0x134a2: call 0x2f50
0x134a7: mov rdi,rbx
0x134aa: call 0x30d0
0x134af: mov dword ptr [rbp],r13d
0x134b3: add rsp,0x8
0x134b7: mov eax,r12d
0x134ba: pop rbx
0x134bb: pop rbp
0x134bc: pop r12
0x134be: pop r13
0x134c0: ret 
0x134c1: nop word ptr cs:[rax+rax]
0x134cb: nop dword ptr [rax+rax]
0x134d0: push rbp
0x134d1: push rbx
0x134d2: sub rsp,0x8
0x134d6: test rdi,rdi
0x134d9: je 0x13518
0x134db: call 0xf6c0
0x134e0: mov rbp,rax
0x134e3: call 0x2950
0x134e8: cmp dword ptr [rax],0x0
0x134eb: mov rbx,rax
0x134ee: mov edx,0x5
0x134f3: je 0x1351d
0x134f5: lea rsi,[rip+0x5985]
0x134fc: xor edi,edi
0x134fe: call 0x2ad0
0x13503: mov edi,dword ptr [rip+0x209b3f]
0x13509: mov esi,dword ptr [rbx]
0x1350b: mov rdx,rax
0x1350e: mov rcx,rbp
0x13511: xor eax,eax
0x13513: call 0x2f30
0x13518: call 0x2940
0x1351d: lea rsi,[rip+0x594d]
0x13524: xor edi,edi
0x13526: call 0x2ad0
0x1352b: jmp 0x13503
0x1352d: nop dword ptr [rax]
0x13530: push r15
0x13532: push r14
0x13534: push r13
0x13536: push r12
0x13538: push rbp
0x13539: push rbx
0x1353a: sub rsp,0x38
0x1353e: mov rax,qword ptr fs:[0x28]
0x13547: mov qword ptr [rsp+0x28],rax
0x1354c: xor eax,eax
0x1354e: test rsi,rsi
0x13551: je 0x13678
0x13557: test rdi,rdi
0x1355a: mov r12,rdi
0x1355d: mov rbp,rsi
0x13560: je 0x135e0
0x13562: lea rsi,[rip+0x5934]
0x13569: call 0x15380
0x1356e: test rax,rax
0x13571: mov r13,rax
0x13574: je 0x13778
0x1357a: mov edi,0x1038
0x1357f: call 0x12010
0x13584: mov rbx,rax
0x13587: mov qword ptr [rax],r13
0x1358a: lea rax,[rip+0xffffffffffffff3f]
0x13591: cmp rbp,0x1000
0x13598: mov ecx,0x1000
0x1359d: lea rsi,[rbx+0x18]
0x135a1: cmovbe rcx,rbp
0x135a5: mov qword ptr [rbx+8],rax
0x135a9: mov qword ptr [rbx+0x10],r12
0x135ad: xor edx,edx
0x135af: mov rdi,r13
0x135b2: call 0x2f00
0x135b7: mov rdx,qword ptr [rsp+0x28]
0x135bc: xor rdx,qword ptr fs:[0x28]
0x135c5: mov rax,rbx
0x135c8: jne 0x1377f
0x135ce: add rsp,0x38
0x135d2: pop rbx
0x135d3: pop rbp
0x135d4: pop r12
0x135d6: pop r13
0x135d8: pop r14
0x135da: pop r15
0x135dc: ret 
0x135dd: nop dword ptr [rax]
0x135e0: mov edi,0x1038
0x135e5: call 0x12010
0x135ea: mov rbx,rax
0x135ed: mov qword ptr [rax],0x0
0x135f4: lea rax,[rip+0xfffffffffffffed5]
0x135fb: lea rdi,[rip+0x588e]
0x13602: xor esi,esi
0x13604: mov qword ptr [rbx+0x10],0x0
0x1360c: mov qword ptr [rbx+8],rax
0x13610: mov qword ptr [rbx+0x18],0x0
0x13618: xor eax,eax
0x1361a: call 0x2f60
0x1361f: test eax,eax
0x13621: lea r13,[rbx+0x20]
0x13625: mov r15d,eax
0x13628: js 0x136a8
0x1362a: cmp rbp,0x800
0x13631: mov rdx,rbp
0x13634: mov r14d,0x800
0x1363a: cmova rdx,r14
0x1363e: mov ecx,0x1018
0x13643: mov rsi,r13
0x13646: mov edi,eax
0x13648: call 0x29b0
0x1364d: mov edi,r15d
0x13650: mov rbp,rax
0x13653: call 0x2c30
0x13658: cmp rbp,0x7ff
0x1365f: jle 0x13784
0x13665: mov rdi,r13
0x13668: call 0x13d00
0x1366d: jmp 0x135b7
0x13672: nop word ptr [rax+rax]
0x13678: mov edi,0x1038
0x1367d: call 0x12010
0x13682: mov rbx,rax
0x13685: mov qword ptr [rax],0x0
0x1368c: lea rax,[rip+0xfffffffffffffe3d]
0x13693: mov qword ptr [rbx+0x10],0x0
0x1369b: mov qword ptr [rbx+8],rax
0x1369f: jmp 0x135b7
0x136a4: nop dword ptr [rax]
0x136a8: lea r12,[rsp+0x10]
0x136ad: xor esi,esi
0x136af: mov r14d,0x18
0x136b5: mov rdi,r12
0x136b8: call 0x2bd0
0x136bd: movdqa xmm0,xmmword ptr [rsp+0x10]
0x136c3: movups xmmword ptr [rbx+0x20],xmm0
0x136c7: call 0x2a30
0x136cc: mov dword ptr [rbx+0x30],eax
0x136cf: mov dword ptr [rsp+0x10],eax
0x136d3: call 0x3020
0x136d8: mov dword ptr [rsp+0x10],eax
0x136dc: mov dword ptr [rbx+0x34],eax
0x136df: mov ebp,0x800
0x136e4: mov eax,0x4
0x136e9: sub rbp,r14
0x136ec: cmp rbp,0x4
0x136f0: cmova rbp,rax
0x136f4: call 0x2b40
0x136f9: test ebp,ebp
0x136fb: mov dword ptr [rsp+0x10],eax
0x136ff: lea rcx,[r13+r14]
0x13704: mov esi,ebp
0x13706: je 0x1371c
0x13708: xor eax,eax
0x1370a: mov edx,eax
0x1370c: add eax,0x1
0x1370f: movzx edi,byte ptr [r12+rdx]
0x13714: cmp eax,esi
0x13716: mov byte ptr [rcx+rdx],dil
0x1371a: jb 0x1370a
0x1371c: add rbp,r14
0x1371f: cmp rbp,0x7ff
0x13726: ja 0x13665
0x1372c: call 0x2dc0
0x13731: mov dword ptr [rsp+0x10],eax
0x13735: mov eax,0x800
0x1373a: mov edx,0x4
0x1373f: sub rax,rbp
0x13742: lea rcx,[r13+rbp]
0x13747: cmp rax,0x4
0x1374b: cmova rax,rdx
0x1374f: test eax,eax
0x13751: mov esi,eax
0x13753: je 0x13665
0x13759: xor eax,eax
0x1375b: mov edx,eax
0x1375d: add eax,0x1
0x13760: movzx edi,byte ptr [r12+rdx]
0x13765: cmp eax,esi
0x13767: mov byte ptr [rcx+rdx],dil
0x1376b: jb 0x1375b
0x1376d: jmp 0x13665
0x13772: nop word ptr [rax+rax]
0x13778: xor ebx,ebx
0x1377a: jmp 0x135b7
0x1377f: call 0x2b30
0x13784: test rbp,rbp
0x13787: mov r15,r14
0x1378a: mov eax,0x10
0x1378f: cmovs rbp,r12
0x13793: lea r12,[rsp+0x10]
0x13798: sub r15,rbp
0x1379b: cmp r15,0x10
0x1379f: mov rdi,r12
0x137a2: cmova r15,rax
0x137a6: xor esi,esi
0x137a8: call 0x2bd0
0x137ad: lea rax,[r13+rbp]
0x137b2: add rbp,r15
0x137b5: mov ecx,r15d
0x137b8: cmp rbp,0x7ff
0x137bf: mov rsi,r12
0x137c2: mov rdi,rax
0x137c5: rep movsb byte ptr [rdi],byte ptr ptr [rsi]
0x137c7: ja 0x13665
0x137cd: mov r15,r14
0x137d0: mov r8d,0x4
0x137d6: sub r15,rbp
0x137d9: mov qword ptr [rsp+8],r8
0x137de: cmp r15,0x4
0x137e2: cmova r15,r8
0x137e6: lea rdx,[rbp+r15]
0x137eb: add rbp,r13
0x137ee: mov qword ptr [rsp],rdx
0x137f2: call 0x2a30
0x137f7: mov rdx,qword ptr [rsp]
0x137fb: mov dword ptr [rsp+0x10],eax
0x137ff: mov ecx,r15d
0x13802: mov rdi,rbp
0x13805: mov rsi,r12
0x13808: mov r8,qword ptr [rsp+8]
0x1380d: rep movsb byte ptr [rdi],byte ptr ptr [rsi]
0x1380f: cmp rdx,0x7ff
0x13816: jg 0x13665
0x1381c: sub r14,rdx
0x1381f: cmp r14,0x4
0x13823: cmova r14,r8
0x13827: call 0x3020
0x1382c: mov rdx,qword ptr [rsp]
0x13830: mov dword ptr [rsp+0x10],eax
0x13834: mov ecx,r14d
0x13837: mov rsi,r12
0x1383a: lea rax,[r13+rdx]
0x1383f: add r14,rdx
0x13842: cmp r14,0x7ff
0x13849: mov rdi,rax
0x1384c: rep movsb byte ptr [rdi],byte ptr ptr [rsi]
0x1384e: ja 0x13665
0x13854: jmp 0x136df
0x13859: nop dword ptr [rax]
0x13860: mov qword ptr [rdi+8],rsi
0x13864: ret 
0x13865: nop 
0x13866: nop word ptr cs:[rax+rax]
0x13870: mov qword ptr [rdi+0x10],rsi
0x13874: ret 
0x13875: nop 
0x13876: nop word ptr cs:[rax+rax]
0x13880: push r15
0x13882: push r14
0x13884: push r13
0x13886: push r12
0x13888: mov r12,rdi
0x1388b: push rbp
0x1388c: push rbx
0x1388d: mov rbp,rdx
0x13890: mov rbx,rsi
0x13893: sub rsp,0x18
0x13897: mov rcx,qword ptr [rdi]
0x1389a: test rcx,rcx
0x1389d: mov qword ptr [rsp+8],rcx
0x138a2: je 0x13908
0x138a4: call 0x2950
0x138a9: mov rcx,qword ptr [rsp+8]
0x138ae: mov r13,rax
0x138b1: jmp 0x138d6
0x138b3: nop dword ptr [rax+rax]
0x138b8: mov rax,qword ptr [r12]
0x138bc: mov rdi,qword ptr [r12+0x10]
0x138c1: mov eax,dword ptr [rax]
0x138c3: and eax,0x20
0x138c6: cmovne eax,edx
0x138c9: mov dword ptr [r13],eax
0x138cd: call qword ptr [r12+8]
0x138d2: mov rcx,qword ptr [r12]
0x138d6: mov rdx,rbp
0x138d9: mov rdi,rbx
0x138dc: mov esi,0x1
0x138e1: call 0x2a40
0x138e6: add rbx,rax
0x138e9: sub rbp,rax
0x138ec: mov edx,dword ptr [r13]
0x138f0: jne 0x138b8
0x138f2: add rsp,0x18
0x138f6: pop rbx
0x138f7: pop rbp
0x138f8: pop r12
0x138fa: pop r13
0x138fc: pop r14
0x138fe: pop r15
0x13900: ret 
0x13901: nop dword ptr [rax]
0x13908: mov r14,qword ptr [rdi+0x18]
0x1390c: lea rax,[rdi+0x838]
0x13913: lea r13,[rdi+0x20]
0x13917: mov qword ptr [rsp+8],rax
0x1391c: cmp rdx,r14
0x1391f: jbe 0x13a02
0x13925: mov esi,0x800
0x1392a: mov rdi,rbx
0x1392d: mov rdx,r14
0x13930: sub rsi,r14
0x13933: add rsi,qword ptr [rsp+8]
0x13938: add rbx,r14
0x1393b: sub rbp,r14
0x1393e: call 0x2d80
0x13943: test bl,0x7
0x13946: jne 0x139b0
0x13948: cmp rbp,0x7ff
0x1394f: jbe 0x139f3
0x13955: lea r15,[rbp-0x800]
0x1395c: mov r14,r15
0x1395f: and r14d,0x7ff
0x13966: jmp 0x1397c
0x13968: nop dword ptr [rax+rax]
0x13970: cmp r15,r14
0x13973: je 0x139b0
0x13975: sub r15,0x800
0x1397c: mov rsi,rbx
0x1397f: mov rdi,r13
0x13982: add rbx,0x800
0x13989: call 0x13a70
0x1398e: test r15,r15
0x13991: mov rbp,r15
0x13994: jne 0x13970
0x13996: mov qword ptr [r12+0x18],0x0
0x1399f: add rsp,0x18
0x139a3: pop rbx
0x139a4: pop rbp
0x139a5: pop r12
0x139a7: pop r13
0x139a9: pop r14
0x139ab: pop r15
0x139ad: ret 
0x139ae: nop 
0x139b0: mov rsi,qword ptr [rsp+8]
0x139b5: mov rdi,r13
0x139b8: mov r14d,0x800
0x139be: call 0x13a70
0x139c3: cmp rbp,0x800
0x139ca: ja 0x13925
0x139d0: mov r14d,0x800
0x139d6: mov rsi,qword ptr [rsp+8]
0x139db: mov rdx,rbp
0x139de: mov rdi,rbx
0x139e1: sub r14,rbp
0x139e4: call 0x2d80
0x139e9: mov qword ptr [r12+0x18],r14
0x139ee: jmp 0x138f2
0x139f3: mov rsi,qword ptr [rsp+8]
0x139f8: mov rdi,r13
0x139fb: call 0x13a70
0x13a00: jmp 0x139d0
0x13a02: mov r15,rax
0x13a05: sub r15,r14
0x13a08: lea rax,[r15+0x800]
0x13a0f: mov qword ptr [rsp+8],rax
0x13a14: jmp 0x139d6
0x13a16: nop word ptr cs:[rax+rax]
0x13a20: push rbp
0x13a21: push rbx
0x13a22: mov rdx,0xffffffffffffffff
0x13a29: mov rbx,rdi
0x13a2c: mov esi,0x1038
0x13a31: sub rsp,0x8
0x13a35: mov rbp,qword ptr [rdi]
0x13a38: call 0x2f50
0x13a3d: mov rdi,rbx
0x13a40: call 0x30d0
0x13a45: test rbp,rbp
0x13a48: je 0x13a60
0x13a4a: add rsp,0x8
0x13a4e: mov rdi,rbp
0x13a51: pop rbx
0x13a52: pop rbp
0x13a53: jmp 0x13f50
0x13a58: nop dword ptr [rax+rax]
0x13a60: add rsp,0x8
0x13a64: xor eax,eax
0x13a66: pop rbx
0x13a67: pop rbp
0x13a68: ret 
0x13a69: nop dword ptr [rax]
0x13a70: mov rax,qword ptr [rdi+0x810]
0x13a77: mov rdx,qword ptr [rdi+0x800]
0x13a7e: lea r9,[rdi+0x400]
0x13a85: lea rcx,[rax+1]
0x13a89: mov rax,rdi
0x13a8c: mov qword ptr [rdi+0x810],rcx
0x13a93: add rcx,qword ptr [rdi+0x808]
0x13a9a: nop word ptr [rax+rax]
0x13aa0: mov r8,rdx
0x13aa3: shl r8,0x15
0x13aa7: xor rdx,r8
0x13aaa: mov r8,qword ptr [rax]
0x13aad: not rdx
0x13ab0: add rdx,qword ptr [rax+0x400]
0x13ab7: mov r10,r8
0x13aba: and r10d,0x7f8
0x13ac1: mov r11,qword ptr [rdi+r10]
0x13ac5: mov r10,rdx
0x13ac8: shr r10,0x5
0x13acc: add r11,rdx
0x13acf: xor rdx,r10
0x13ad2: add rcx,r11
0x13ad5: mov qword ptr [rax],rcx
0x13ad8: shr rcx,0x8
0x13adc: and ecx,0x7f8
0x13ae2: mov r11,qword ptr [rdi+rcx]
0x13ae6: add r11,r8
0x13ae9: mov qword ptr [rsi],r11
0x13aec: add rdx,qword ptr [rax+0x408]
0x13af3: mov rcx,qword ptr [rax+8]
0x13af7: mov r10,rdx
0x13afa: mov rdx,rcx
0x13afd: and edx,0x7f8
0x13b03: mov r8,qword ptr [rdi+rdx]
0x13b07: mov rdx,r10
0x13b0a: shl rdx,0xc
0x13b0e: xor rdx,r10
0x13b11: add r8,r10
0x13b14: add r8,r11
0x13b17: mov qword ptr [rax+8],r8
0x13b1b: shr r8,0x8
0x13b1f: and r8d,0x7f8
0x13b26: add rcx,qword ptr [rdi+r8]
0x13b2a: mov qword ptr [rsi+8],rcx
0x13b2e: mov r8,qword ptr [rax+0x10]
0x13b32: mov r11,rcx
0x13b35: add rdx,qword ptr [rax+0x410]
0x13b3c: mov rcx,r8
0x13b3f: and ecx,0x7f8
0x13b45: mov r10,qword ptr [rdi+rcx]
0x13b49: add r10,rdx
0x13b4c: mov rcx,r10
0x13b4f: add rcx,r11
0x13b52: mov qword ptr [rax+0x10],rcx
0x13b56: shr rcx,0x8
0x13b5a: and ecx,0x7f8
0x13b60: mov r10,qword ptr [rdi+rcx]
0x13b64: mov rcx,rdx
0x13b67: shr rcx,0x21
0x13b6b: xor rdx,rcx
0x13b6e: add r10,r8
0x13b71: mov qword ptr [rsi+0x10],r10
0x13b75: mov rcx,qword ptr [rax+0x18]
0x13b79: add rdx,qword ptr [rax+0x418]
0x13b80: mov r8,rcx
0x13b83: and r8d,0x7f8
0x13b8a: mov r11,qword ptr [rdi+r8]
0x13b8e: add r11,rdx
0x13b91: mov r8,r11
0x13b94: add r8,r10
0x13b97: add rax,0x20
0x13b9b: add rsi,0x20
0x13b9f: mov qword ptr [rax-8],r8
0x13ba3: shr r8,0x8
0x13ba7: and r8d,0x7f8
0x13bae: add rcx,qword ptr [rdi+r8]
0x13bb2: mov qword ptr [rsi-8],rcx
0x13bb6: cmp rax,r9
0x13bb9: jb 0x13aa0
0x13bbf: lea r9,[rdi+0x800]
0x13bc6: nop word ptr cs:[rax+rax]
0x13bd0: mov r8,rdx
0x13bd3: shl r8,0x15
0x13bd7: xor rdx,r8
0x13bda: mov r8,qword ptr [rax]
0x13bdd: not rdx
0x13be0: add rdx,qword ptr [rax-0x400]
0x13be7: mov r10,r8
0x13bea: and r10d,0x7f8
0x13bf1: mov r11,qword ptr [rdi+r10]
0x13bf5: mov r10,rdx
0x13bf8: shr r10,0x5
0x13bfc: add r11,rdx
0x13bff: xor rdx,r10
0x13c02: add rcx,r11
0x13c05: mov qword ptr [rax],rcx
0x13c08: shr rcx,0x8
0x13c0c: and ecx,0x7f8
0x13c12: mov r11,qword ptr [rdi+rcx]
0x13c16: add r11,r8
0x13c19: mov qword ptr [rsi],r11
0x13c1c: add rdx,qword ptr [rax-0x3f8]
0x13c23: mov rcx,qword ptr [rax+8]
0x13c27: mov r10,rdx
0x13c2a: mov rdx,rcx
0x13c2d: and edx,0x7f8
0x13c33: mov r8,qword ptr [rdi+rdx]
0x13c37: mov rdx,r10
0x13c3a: shl rdx,0xc
0x13c3e: xor rdx,r10
0x13c41: add r8,r10
0x13c44: add r8,r11
0x13c47: mov qword ptr [rax+8],r8
0x13c4b: shr r8,0x8
0x13c4f: and r8d,0x7f8
0x13c56: add rcx,qword ptr [rdi+r8]
0x13c5a: mov qword ptr [rsi+8],rcx
0x13c5e: mov r8,qword ptr [rax+0x10]
0x13c62: mov r11,rcx
0x13c65: add rdx,qword ptr [rax-0x3f0]
0x13c6c: mov rcx,r8
0x13c6f: and ecx,0x7f8
0x13c75: mov r10,qword ptr [rdi+rcx]
0x13c79: add r10,rdx
0x13c7c: mov rcx,r10
0x13c7f: add rcx,r11
0x13c82: mov qword ptr [rax+0x10],rcx
0x13c86: shr rcx,0x8
0x13c8a: and ecx,0x7f8
0x13c90: mov r10,qword ptr [rdi+rcx]
0x13c94: mov rcx,rdx
0x13c97: shr rcx,0x21
0x13c9b: xor rdx,rcx
0x13c9e: add r10,r8
0x13ca1: mov qword ptr [rsi+0x10],r10
0x13ca5: mov rcx,qword ptr [rax+0x18]
0x13ca9: add rdx,qword ptr [rax-0x3e8]
0x13cb0: mov r8,rcx
0x13cb3: and r8d,0x7f8
0x13cba: mov r11,qword ptr [rdi+r8]
0x13cbe: add r11,rdx
0x13cc1: mov r8,r11
0x13cc4: add r8,r10
0x13cc7: add rax,0x20
0x13ccb: add rsi,0x20
0x13ccf: mov qword ptr [rax-8],r8
0x13cd3: shr r8,0x8
0x13cd7: and r8d,0x7f8
0x13cde: add rcx,qword ptr [rdi+r8]
0x13ce2: mov qword ptr [rsi-8],rcx
0x13ce6: cmp rax,r9
0x13ce9: jb 0x13bd0
0x13cef: mov qword ptr [rdi+0x800],rdx
0x13cf6: mov qword ptr [rdi+0x808],rcx
0x13cfd: ret 
0x13cfe: nop 
0x13d00: push r13
0x13d02: push r12
0x13d04: lea r12,[rdi+0x800]
0x13d0b: push rbp
0x13d0c: mov rdx,rdi
0x13d0f: push rbx
0x13d10: mov rax,rdi
0x13d13: movabs rcx,0x98f5704f6c44c0ab
0x13d1d: movabs r10,0xae985bf2cbfc89ed
0x13d27: movabs rbp,0x48fe4a0fa5a09315
0x13d31: movabs rsi,0x82f053db8355e0ce
0x13d3b: movabs r8,0xb29b2e824a595524
0x13d45: movabs rbx,0x8c0ea5053d4712a0
0x13d4f: movabs r11,0xb9f8b322c73ac862
0x13d59: movabs r9,0x647c4677a2884b7c
0x13d63: nop dword ptr [rax+rax]
0x13d68: add rsi,qword ptr [rax+0x20]
0x13d6c: add rcx,qword ptr [rax+0x38]
0x13d70: mov r13,qword ptr [rax]
0x13d73: add rbp,qword ptr [rax+0x28]
0x13d77: add r10,qword ptr [rax+0x30]
0x13d7b: sub r13,rsi
0x13d7e: add r9,r13
0x13d81: mov r13,rcx
0x13d84: shr r13,0x9
0x13d88: add rcx,r9
0x13d8b: xor rbp,r13
0x13d8e: mov r13,qword ptr [rax+8]
0x13d92: sub r13,rbp
0x13d95: add r11,r13
0x13d98: mov r13,r9
0x13d9b: shl r13,0x9
0x13d9f: add r9,r11
0x13da2: xor r10,r13
0x13da5: mov r13,qword ptr [rax+0x10]
0x13da9: sub r13,r10
0x13dac: add rbx,r13
0x13daf: mov r13,r11
0x13db2: shr r13,0x17
0x13db6: add r11,rbx
0x13db9: xor rcx,r13
0x13dbc: mov r13,qword ptr [rax+0x18]
0x13dc0: sub r13,rcx
0x13dc3: add r8,r13
0x13dc6: mov r13,rbx
0x13dc9: shl r13,0xf
0x13dcd: add rbx,r8
0x13dd0: xor r9,r13
0x13dd3: mov r13,r8
0x13dd6: sub rsi,r9
0x13dd9: shr r13,0xe
0x13ddd: mov qword ptr [rax],r9
0x13de0: xor r11,r13
0x13de3: mov r13,rsi
0x13de6: add r8,rsi
0x13de9: sub rbp,r11
0x13dec: shl r13,0x14
0x13df0: mov qword ptr [rax+8],r11
0x13df4: xor rbx,r13
0x13df7: lea r13,[rsi+rbp]
0x13dfb: mov rsi,rbp
0x13dfe: sub r10,rbx
0x13e01: shr rsi,0x11
0x13e05: mov qword ptr [rax+0x10],rbx
0x13e09: xor r8,rsi
0x13e0c: mov rsi,r10
0x13e0f: add rbp,r10
0x13e12: sub rcx,r8
0x13e15: shl rsi,0xe
0x13e19: mov qword ptr [rax+0x18],r8
0x13e1d: xor rsi,r13
0x13e20: add r10,rcx
0x13e23: mov qword ptr [rax+0x28],rbp
0x13e27: mov qword ptr [rax+0x20],rsi
0x13e2b: mov qword ptr [rax+0x30],r10
0x13e2f: add rax,0x40
0x13e33: mov qword ptr [rax-8],rcx
0x13e37: cmp r12,rax
0x13e3a: jne 0x13d68
0x13e40: add rsi,qword ptr [rdx+0x20]
0x13e44: add rcx,qword ptr [rdx+0x38]
0x13e48: mov r12,qword ptr [rdx]
0x13e4b: add rbp,qword ptr [rdx+0x28]
0x13e4f: add r10,qword ptr [rdx+0x30]
0x13e53: sub r12,rsi
0x13e56: add r9,r12
0x13e59: mov r12,rcx
0x13e5c: shr r12,0x9
0x13e60: add rcx,r9
0x13e63: xor rbp,r12
0x13e66: mov r12,qword ptr [rdx+8]
0x13e6a: sub r12,rbp
0x13e6d: add r11,r12
0x13e70: mov r12,r9
0x13e73: shl r12,0x9
0x13e77: add r9,r11
0x13e7a: xor r10,r12
0x13e7d: mov r12,qword ptr [rdx+0x10]
0x13e81: sub r12,r10
0x13e84: add rbx,r12
0x13e87: mov r12,r11
0x13e8a: shr r12,0x17
0x13e8e: add r11,rbx
0x13e91: xor rcx,r12
0x13e94: mov r12,qword ptr [rdx+0x18]
0x13e98: sub r12,rcx
0x13e9b: add r8,r12
0x13e9e: mov r12,rbx
0x13ea1: shl r12,0xf
0x13ea5: add rbx,r8
0x13ea8: xor r9,r12
0x13eab: mov r12,r8
0x13eae: sub rsi,r9
0x13eb1: shr r12,0xe
0x13eb5: mov qword ptr [rdx],r9
0x13eb8: xor r11,r12
0x13ebb: mov r12,rsi
0x13ebe: add r8,rsi
0x13ec1: sub rbp,r11
0x13ec4: shl r12,0x14
0x13ec8: mov qword ptr [rdx+8],r11
0x13ecc: xor rbx,r12
0x13ecf: lea r12,[rsi+rbp]
0x13ed3: mov rsi,rbp
0x13ed6: sub r10,rbx
0x13ed9: shr rsi,0x11
0x13edd: mov qword ptr [rdx+0x10],rbx
0x13ee1: xor r8,rsi
0x13ee4: mov rsi,r10
0x13ee7: add rbp,r10
0x13eea: sub rcx,r8
0x13eed: shl rsi,0xe
0x13ef1: mov qword ptr [rdx+0x18],r8
0x13ef5: xor rsi,r12
0x13ef8: add r10,rcx
0x13efb: mov qword ptr [rdx+0x28],rbp
0x13eff: mov qword ptr [rdx+0x20],rsi
0x13f03: mov qword ptr [rdx+0x30],r10
0x13f07: add rdx,0x40
0x13f0b: mov qword ptr [rdx-8],rcx
0x13f0f: cmp rax,rdx
0x13f12: jne 0x13e40
0x13f18: pop rbx
0x13f19: mov qword ptr [rdi+0x810],0x0
0x13f24: mov qword ptr [rdi+0x808],0x0
0x13f2f: pop rbp
0x13f30: mov qword ptr [rdi+0x800],0x0
0x13f3b: pop r12
0x13f3d: pop r13
0x13f3f: ret 
0x13f4e: nop 
0x13f50: push r12
0x13f52: push rbp
0x13f53: push rbx
0x13f54: mov rbx,rdi
0x13f57: call 0x2db0
0x13f5c: test eax,eax
0x13f5e: mov rdi,rbx
0x13f61: js 0x13fb7
0x13f63: call 0x2e50
0x13f68: test eax,eax
0x13f6a: jne 0x13f98
0x13f6c: mov rdi,rbx
0x13f6f: call 0x12760
0x13f74: test eax,eax
0x13f76: je 0x13fb4
0x13f78: call 0x2950
0x13f7d: mov r12d,dword ptr [rax]
0x13f80: mov rdi,rbx
0x13f83: mov rbp,rax
0x13f86: call 0x2a80
0x13f8b: test r12d,r12d
0x13f8e: jne 0x13fc0
0x13f90: pop rbx
0x13f91: pop rbp
0x13f92: pop r12
0x13f94: ret 
0x13f95: nop dword ptr [rax]
0x13f98: mov rdi,rbx
0x13f9b: call 0x2db0
0x13fa0: xor esi,esi
0x13fa2: mov edx,0x1
0x13fa7: mov edi,eax
0x13fa9: call 0x2bc0
0x13fae: cmp rax,0xffffffffffffffff
0x13fb2: jne 0x13f6c
0x13fb4: mov rdi,rbx
0x13fb7: pop rbx
0x13fb8: pop rbp
0x13fb9: pop r12
0x13fbb: jmp 0x2a80
0x13fc0: mov dword ptr [rbp],r12d
0x13fc4: mov eax,0xffffffff
0x13fc9: jmp 0x13f90
0x13fcb: nop dword ptr [rax+rax]
0x14021: cmp esi,0x406
0x14027: jne 0x14070
0x14029: mov rax,qword ptr [rsp+0x10]
0x1402e: cmp dword ptr [rip+0x20b6ff],0x0
0x14035: mov dword ptr [rsp],0x18
0x1403c: mov r12d,dword ptr [rax+0x10]
0x14040: mov edx,r12d
0x14043: js 0x14173
0x14049: xor eax,eax
0x1404b: mov esi,0x406
0x14050: call 0x2a00
0x14055: test eax,eax
0x14057: mov ebx,eax
0x14059: js 0x141e8
0x1405f: mov dword ptr [rip+0x20b6cb],0x1
0x14069: jmp 0x140b0
0x1406b: nop dword ptr [rax+rax]
0x14070: cmp esi,0xb
0x14073: je 0x140a0
0x14075: jg 0x140d0
0x14077: cmp esi,0x4
0x1407a: je 0x14150
0x14080: jg 0x14140
0x14086: cmp esi,0x2
0x14089: je 0x14150
0x1408f: jg 0x140a0
0x14091: cmp esi,0x1
0x14094: jne 0x140f8
0x14096: nop word ptr cs:[rax+rax]
0x140a0: mov edi,ebp
0x140a2: xor eax,eax
0x140a4: call 0x2a00
0x140a9: mov ebx,eax
0x140ab: nop dword ptr [rax+rax]
0x140cf: nop 
0x140d0: cmp esi,0x407
0x140d6: jg 0x14120
0x140d8: cmp esi,0x406
0x140de: jge 0x14150
0x140e0: cmp esi,0x401
0x140e6: je 0x140a0
0x140e8: cmp esi,0x402
0x140ee: je 0x14150
0x140f0: cmp esi,0x400
0x140f6: je 0x14150
0x140f8: mov eax,dword ptr [rsp]
0x140fb: cmp eax,0x2f
0x140fe: ja 0x1423a
0x14104: add rax,qword ptr [rsp+0x10]
0x14109: mov rdx,qword ptr [rax]
0x1410c: mov edi,ebp
0x1410e: xor eax,eax
0x14110: call 0x2a00
0x14115: mov ebx,eax
0x14117: jmp 0x140b0
0x14119: nop dword ptr [rax]
0x14120: cmp esi,0x409
0x14126: je 0x14150
0x14128: jl 0x140a0
0x1412e: cmp esi,0x40a
0x14134: jne 0x140f8
0x14136: jmp 0x140a0
0x1413b: nop dword ptr [rax+rax]
0x14140: cmp esi,0x9
0x14143: je 0x140a0
0x14149: jg 0x14150
0x1414b: cmp esi,0x8
0x1414e: jne 0x140f8
0x14150: mov eax,dword ptr [rsp]
0x14153: cmp eax,0x2f
0x14156: ja 0x14244
0x1415c: add rax,qword ptr [rsp+0x10]
0x14161: mov edx,dword ptr [rax]
0x14163: mov edi,ebp
0x14165: xor eax,eax
0x14167: call 0x2a00
0x1416c: mov ebx,eax
0x1416e: jmp 0x140b0
0x14173: xor esi,esi
0x14175: xor eax,eax
0x14177: call 0x2a00
0x1417c: test eax,eax
0x1417e: mov ebx,eax
0x14180: js 0x140b0
0x14186: cmp dword ptr [rip+0x20b5a7],0xffffffff
0x1418d: jne 0x140b0
0x14193: xor eax,eax
0x14195: mov esi,0x1
0x1419a: mov edi,ebx
0x1419c: call 0x2a00
0x141a1: test eax,eax
0x141a3: js 0x141c1
0x141a5: or eax,0x1
0x141a8: mov esi,0x2
0x141ad: mov edi,ebx
0x141af: mov edx,eax
0x141b1: xor eax,eax
0x141b3: call 0x2a00
0x141b8: cmp eax,0xffffffff
0x141bb: jne 0x140b0
0x141c1: call 0x2950
0x141c6: mov r12d,dword ptr [rax]
0x141c9: mov rbp,rax
0x141cc: mov edi,ebx
0x141ce: call 0x2c30
0x141d3: mov ebx,0xffffffff
0x141d8: mov dword ptr [rbp],r12d
0x141dc: jmp 0x140b0
0x141e1: nop dword ptr [rax]
0x141e8: call 0x2950
0x141ed: cmp dword ptr [rax],0x16
0x141f0: jne 0x1405f
0x141f6: xor esi,esi
0x141f8: xor eax,eax
0x141fa: mov edx,r12d
0x141fd: mov edi,ebp
0x141ff: call 0x2a00
0x14204: test eax,eax
0x14206: mov ebx,eax
0x14208: js 0x140b0
0x1420e: mov dword ptr [rip+0x20b51c],0xffffffff
0x14218: jmp 0x14193
0x1421d: call 0x2b30
0x1423a: mov rax,qword ptr [rsp+8]
0x1423f: jmp 0x14109
0x14244: mov rax,qword ptr [rsp+8]
0x14249: jmp 0x14161
0x1424e: nop 
0x14250: or dword ptr [rdi],0x20
0x14253: ret 
0x14254: nop word ptr cs:[rax+rax]
0x1425e: nop 
0x14464: nop dword ptr [rax]
0x14493: nop dword ptr [rax+rax]
0x14527: movzx edx,byte ptr [r13+0x48]
0x1452c: mov rax,qword ptr [r13+0x50]
0x14530: cmp dl,0x25
0x14533: je 0x14cc8
0x14539: cmp rax,0xffffffffffffffff
0x1453d: je 0x15186
0x14543: mov r8,qword ptr [rbp-0x3a8]
0x1454a: shl rax,0x5
0x1454e: add rax,r8
0x14551: cmp dl,0x6e
0x14554: mov edi,dword ptr [rax]
0x14556: mov dword ptr [rbp-0x3d0],edi
0x1455c: je 0x14d40
0x14562: mov eax,dword ptr [r13+0x10]
0x14566: mov rdi,qword ptr [rbp-0x3d8]
0x1456d: test al,0x1
0x1456f: mov byte ptr [rdi],0x25
0x14572: lea rbx,[rdi+1]
0x14576: je 0x14587
0x14578: mov rdi,qword ptr [rbp-0x3d8]
0x1457f: lea rbx,[rdi+2]
0x14583: mov byte ptr [rdi+1],0x27
0x14587: test al,0x2
0x14589: je 0x14592
0x1458b: mov byte ptr [rbx],0x2d
0x1458e: add rbx,0x1
0x14592: test al,0x4
0x14594: je 0x1459d
0x14596: mov byte ptr [rbx],0x2b
0x14599: add rbx,0x1
0x1459d: test al,0x8
0x1459f: je 0x145a8
0x145a1: mov byte ptr [rbx],0x20
0x145a4: add rbx,0x1
0x145a8: test al,0x10
0x145aa: je 0x145b3
0x145ac: mov byte ptr [rbx],0x23
0x145af: add rbx,0x1
0x145b3: test al,0x40
0x145b5: je 0x145be
0x145b7: mov byte ptr [rbx],0x49
0x145ba: add rbx,0x1
0x145be: test al,0x20
0x145c0: je 0x145c9
0x145c2: mov byte ptr [rbx],0x30
0x145c5: add rbx,0x1
0x145c9: mov rsi,qword ptr [r13+0x18]
0x145cd: mov rdx,qword ptr [r13+0x20]
0x145d1: cmp rsi,rdx
0x145d4: je 0x14606
0x145d6: mov rcx,rdx
0x145d9: mov rdi,rbx
0x145dc: mov qword ptr [rbp-0x3e0],r8
0x145e3: sub rcx,rsi
0x145e6: mov rdx,rcx
0x145e9: mov qword ptr [rbp-0x3c8],rcx
0x145f0: call 0x2d80
0x145f5: mov rcx,qword ptr [rbp-0x3c8]
0x145fc: mov r8,qword ptr [rbp-0x3e0]
0x14603: add rbx,rcx
0x14606: mov rsi,qword ptr [r13+0x30]
0x1460a: mov rdx,qword ptr [r13+0x38]
0x1460e: cmp rsi,rdx
0x14611: je 0x14643
0x14613: mov rcx,rdx
0x14616: mov rdi,rbx
0x14619: mov qword ptr [rbp-0x3e0],r8
0x14620: sub rcx,rsi
0x14623: mov rdx,rcx
0x14626: mov qword ptr [rbp-0x3c8],rcx
0x1462d: call 0x2d80
0x14632: mov rcx,qword ptr [rbp-0x3c8]
0x14639: mov r8,qword ptr [rbp-0x3e0]
0x14640: add rbx,rcx
0x14643: mov edi,dword ptr [rbp-0x3d0]
0x14649: cmp edi,0x10
0x1464c: ja 0x1467b
0x1464e: mov eax,0x1
0x14653: mov ecx,edi
0x14655: shl rax,cl
0x14658: test eax,0x14180
0x1465d: jne 0x14674
0x1465f: test ah,0x10
0x14662: jne 0x14fc0
0x14668: test ah,0x6
0x1466b: je 0x1467b
0x1466d: mov byte ptr [rbx],0x6c
0x14670: add rbx,0x1
0x14674: mov byte ptr [rbx],0x6c
0x14677: add rbx,0x1
0x1467b: movzx eax,byte ptr [r13+0x48]
0x14680: mov byte ptr [rbx+1],0x0
0x14684: mov byte ptr [rbx],al
0x14686: mov rax,qword ptr [r13+0x28]
0x1468a: cmp rax,0xffffffffffffffff
0x1468e: je 0x14dc0
0x14694: shl rax,0x5
0x14698: add rax,r8
0x1469b: cmp dword ptr [rax],0x5
0x1469e: jne 0x15186
0x146a4: mov eax,dword ptr [rax+0x10]
0x146a7: mov dword ptr [rbp-0x3e0],0x1
0x146b1: mov dword ptr [rbp-0x3b8],eax
0x146b7: mov rax,qword ptr [r13+0x40]
0x146bb: cmp rax,0xffffffffffffffff
0x146bf: je 0x146ec
0x146c1: shl rax,0x5
0x146c5: add r8,rax
0x146c8: cmp dword ptr [r8],0x5
0x146cc: jne 0x15186
0x146d2: mov eax,dword ptr [rbp-0x3e0]
0x146d8: mov edx,dword ptr [r8+0x10]
0x146dc: mov dword ptr [rbp+rax*4-0x3b8],edx
0x146e3: lea eax,[rax+1]
0x146e6: mov dword ptr [rbp-0x3e0],eax
0x146ec: mov rax,r14
0x146ef: xor edx,edx
0x146f1: add rax,0x2
0x146f5: jb 0x1535c
0x146fb: cmp r12,rax
0x146fe: jae 0x1474b
0x14700: test r12,r12
0x14703: jne 0x14f28
0x14709: cmp rax,0xc
0x1470d: ja 0x14f40
0x14713: mov r12d,0xc
0x14719: cmp r15,qword ptr [rbp-0x3e8]
0x14720: sete dl
0x14723: test r15,r15
0x14726: je 0x14f70
0x1472c: test dl,dl
0x1472e: jne 0x14f70
0x14734: mov rsi,r12
0x14737: mov rdi,r15
0x1473a: call 0x2e90
0x1473f: test rax,rax
0x14742: je 0x143c5
0x14748: mov r15,rax
0x1474b: mov byte ptr [r15+r14],0x0
0x14750: call 0x2950
0x14755: mov qword ptr [rbp-0x3c8],rax
0x1475c: mov eax,dword ptr [rax]
0x1475e: mov qword ptr [rbp-0x3f8],rbx
0x14765: mov dword ptr [rbp-0x424],eax
0x1476b: nop dword ptr [rax+rax]
0x14770: mov rax,qword ptr [rbp-0x3c8]
0x14777: mov rbx,r12
0x1477a: mov r10d,0x7fffffff
0x14780: sub rbx,r14
0x14783: mov dword ptr [rbp-0x3bc],0xffffffff
0x1478d: cmp rbx,0x7fffffff
0x14794: mov dword ptr [rax],0x0
0x1479a: mov eax,dword ptr [rbp-0x3d0]
0x147a0: cmovbe r10,rbx
0x147a4: cmp eax,0x11
0x147a7: ja 0x15186
0x147ad: lea rsi,[rip+0x46ec]
0x147b4: movsxd rax,dword ptr [rsi+rax*4]
0x147b8: add rax,rsi
0x147bb: jmp rax
0x147bd: nop dword ptr [rax]
0x147c0: mov rax,qword ptr [r13+0x50]
0x147c4: lea rdi,[r15+r14]
0x147c8: shl rax,0x5
0x147cc: add rax,qword ptr [rbp-0x3a8]
0x147d3: mov r9,qword ptr [rax+0x10]
0x147d7: mov eax,dword ptr [rbp-0x3e0]
0x147dd: cmp eax,0x1
0x147e0: je 0x14ca8
0x147e6: cmp eax,0x2
0x147e9: je 0x14c90
0x147ef: sub rsp,0x8
0x147f3: push qword ptr [rbp-0x3f0]
0x147f9: mov r8,qword ptr [rbp-0x3d8]
0x14800: mov rsi,r10
0x14803: mov rcx,0xffffffffffffffff
0x1480a: mov edx,0x1
0x1480f: xor eax,eax
0x14811: mov qword ptr [rbp-0x430],r10
0x14818: call 0x2910
0x1481d: pop rsi
0x1481e: pop rdi
0x1481f: mov r10,qword ptr [rbp-0x430]
0x14826: mov ecx,dword ptr [rbp-0x3bc]
0x1482c: test ecx,ecx
0x1482e: js 0x1496c
0x14834: movsxd rdx,ecx
0x14837: cmp rdx,r10
0x1483a: jae 0x1484a
0x1483c: add rdx,r15
0x1483f: cmp byte ptr [rdx+r14],0x0
0x14844: jne 0x15186
0x1484a: cmp ecx,eax
0x1484c: jge 0x14856
0x1484e: mov dword ptr [rbp-0x3bc],eax
0x14854: mov ecx,eax
0x14856: lea eax,[rcx+1]
0x14859: cmp rax,r10
0x1485c: jb 0x15090
0x14862: cmp rbx,0x7ffffffe
0x14869: ja 0x150b0
0x1486f: lea rsi,[r12+r12]
0x14873: lea edx,[rcx+2]
0x14876: test r12,r12
0x14879: mov rax,0xffffffffffffffff
0x14880: cmovns rax,rsi
0x14884: add rdx,r14
0x14887: jb 0x15348
0x1488d: cmp rax,rdx
0x14890: cmovb rax,rdx
0x14894: cmp r12,rax
0x14897: jae 0x14770
0x1489d: test r12,r12
0x148a0: js 0x143d1
0x148a6: cmp rsi,rax
0x148a9: mov r12,rsi
0x148ac: jae 0x148bb
0x148ae: cmp rax,0xffffffffffffffff
0x148b2: je 0x143d1
0x148b8: mov r12,rax
0x148bb: cmp r15,qword ptr [rbp-0x3e8]
0x148c2: sete bl
0x148c5: test r15,r15
0x148c8: je 0x14c50
0x148ce: test bl,bl
0x148d0: jne 0x14c50
0x148d6: mov rsi,r12
0x148d9: mov rdi,r15
0x148dc: call 0x2e90
0x148e1: test rax,rax
0x148e4: je 0x143d1
0x148ea: mov r15,rax
0x148ed: jmp 0x14770
0x148f2: nop word ptr [rax+rax]
0x148f8: mov rax,qword ptr [r13+0x50]
0x148fc: lea rdi,[r15+r14]
0x14900: shl rax,0x5
0x14904: add rax,qword ptr [rbp-0x3a8]
0x1490b: mov r9d,dword ptr [rax+0x10]
0x1490f: mov eax,dword ptr [rbp-0x3e0]
0x14915: cmp eax,0x1
0x14918: je 0x14b50
0x1491e: cmp eax,0x2
0x14921: je 0x14b98
0x14927: sub rsp,0x8
0x1492b: push qword ptr [rbp-0x3f0]
0x14931: mov r8,qword ptr [rbp-0x3d8]
0x14938: mov rcx,0xffffffffffffffff
0x1493f: mov edx,0x1
0x14944: mov rsi,r10
0x14947: xor eax,eax
0x14949: mov qword ptr [rbp-0x430],r10
0x14950: call 0x2910
0x14955: pop rdx
0x14956: pop rcx
0x14957: mov ecx,dword ptr [rbp-0x3bc]
0x1495d: mov r10,qword ptr [rbp-0x430]
0x14964: test ecx,ecx
0x14966: jns 0x14834
0x1496c: mov rdi,qword ptr [rbp-0x3f8]
0x14973: cmp byte ptr [rdi+1],0x0
0x14977: jne 0x14cb8
0x1497d: test eax,eax
0x1497f: jns 0x1484e
0x14985: mov rax,qword ptr [rbp-0x3c8]
0x1498c: mov ebx,dword ptr [rax]
0x1498e: test ebx,ebx
0x14990: jne 0x149b0
0x14992: movzx eax,byte ptr [r13+0x48]
0x14997: mov ebx,0x16
0x1499c: and eax,0xffffffef
0x1499f: cmp al,0x63
0x149a1: mov eax,0x54
0x149a6: cmove ebx,eax
0x149a9: nop dword ptr [rax]
0x149b0: cmp r15,qword ptr [rbp-0x3e8]
0x149b7: je 0x149c2
0x149b9: test r15,r15
0x149bc: jne 0x1516c
0x149c2: mov rax,qword ptr [rbp-0x420]
0x149c9: test rax,rax
0x149cc: je 0x149d6
0x149ce: mov rdi,rax
0x149d1: call 0x30d0
0x149d6: mov rax,qword ptr [rbp-0x408]
0x149dd: mov rdi,qword ptr [rbp-0x2b8]
0x149e4: add rax,0x20
0x149e8: cmp rdi,rax
0x149eb: je 0x149f2
0x149ed: call 0x30d0
0x149f2: mov rax,qword ptr [rbp-0x410]
0x149f9: mov rdi,qword ptr [rbp-0x3a8]
0x14a00: add rax,0x10
0x14a04: cmp rdi,rax
0x14a07: je 0x14a0e
0x14a09: call 0x30d0
0x14a0e: mov rax,qword ptr [rbp-0x3c8]
0x14a15: xor r15d,r15d
0x14a18: mov dword ptr [rax],ebx
0x14a1a: jmp 0x1443f
0x14a1f: nop 
0x14a20: mov rax,qword ptr [r13+0x50]
0x14a24: lea rdi,[r15+r14]
0x14a28: shl rax,0x5
0x14a2c: add rax,qword ptr [rbp-0x3a8]
0x14a33: fld xword ptr [rax+0x10]
0x14a36: mov eax,dword ptr [rbp-0x3e0]
0x14a3c: cmp eax,0x1
0x14a3f: je 0x15070
0x14a45: cmp eax,0x2
0x14a48: jne 0x14f10
0x14a4e: mov eax,dword ptr [rbp-0x3b4]
0x14a54: sub rsp,0x8
0x14a58: push qword ptr [rbp-0x3f0]
0x14a5e: mov r9d,dword ptr [rbp-0x3b8]
0x14a65: mov r8,qword ptr [rbp-0x3d8]
0x14a6c: mov rsi,r10
0x14a6f: sub rsp,0x18
0x14a73: mov rcx,0xffffffffffffffff
0x14a7a: mov edx,0x1
0x14a7f: fstp xword ptr [rsp+8]
0x14a83: push rax
0x14a84: xor eax,eax
0x14a86: mov qword ptr [rbp-0x430],r10
0x14a8d: call 0x2910
0x14a92: add rsp,0x30
0x14a96: mov r10,qword ptr [rbp-0x430]
0x14a9d: jmp 0x14826
0x14aa2: nop word ptr [rax+rax]
0x14aa8: mov rax,qword ptr [r13+0x50]
0x14aac: lea rdi,[r15+r14]
0x14ab0: shl rax,0x5
0x14ab4: add rax,qword ptr [rbp-0x3a8]
0x14abb: movsd xmm0,qword ptr [rax+0x10]
0x14ac0: mov eax,dword ptr [rbp-0x3e0]
0x14ac6: cmp eax,0x1
0x14ac9: je 0x15060
0x14acf: cmp eax,0x2
0x14ad2: jne 0x14ed0
0x14ad8: mov eax,dword ptr [rbp-0x3b4]
0x14ade: push qword ptr [rbp-0x3f0]
0x14ae4: push rax
0x14ae5: mov r9d,dword ptr [rbp-0x3b8]
0x14aec: mov r8,qword ptr [rbp-0x3d8]
0x14af3: mov rsi,r10
0x14af6: mov rcx,0xffffffffffffffff
0x14afd: mov edx,0x1
0x14b02: mov eax,0x1
0x14b07: mov qword ptr [rbp-0x430],r10
0x14b0e: call 0x2910
0x14b13: pop r8
0x14b15: mov r10,qword ptr [rbp-0x430]
0x14b1c: pop r9
0x14b1e: jmp 0x14826
0x14b23: nop dword ptr [rax+rax]
0x14b28: mov rax,qword ptr [r13+0x50]
0x14b2c: lea rdi,[r15+r14]
0x14b30: shl rax,0x5
0x14b34: add rax,qword ptr [rbp-0x3a8]
0x14b3b: movzx r9d,word ptr [rax+0x10]
0x14b40: mov eax,dword ptr [rbp-0x3e0]
0x14b46: cmp eax,0x1
0x14b49: jne 0x1491e
0x14b4f: nop 
0x14b50: push qword ptr [rbp-0x3f0]
0x14b56: push r9
0x14b58: mov r9d,dword ptr [rbp-0x3b8]
0x14b5f: jmp 0x14931
0x14b64: nop dword ptr [rax]
0x14b68: mov rax,qword ptr [r13+0x50]
0x14b6c: lea rdi,[r15+r14]
0x14b70: shl rax,0x5
0x14b74: add rax,qword ptr [rbp-0x3a8]
0x14b7b: movsx r9d,word ptr [rax+0x10]
0x14b80: mov eax,dword ptr [rbp-0x3e0]
0x14b86: cmp eax,0x1
0x14b89: je 0x14b50
0x14b8b: cmp eax,0x2
0x14b8e: jne 0x14927
0x14b94: nop dword ptr [rax]
0x14b98: sub rsp,0x8
0x14b9c: push qword ptr [rbp-0x3f0]
0x14ba2: push r9
0x14ba4: mov eax,dword ptr [rbp-0x3b4]
0x14baa: push rax
0x14bab: mov r9d,dword ptr [rbp-0x3b8]
0x14bb2: mov r8,qword ptr [rbp-0x3d8]
0x14bb9: mov rsi,r10
0x14bbc: mov rcx,0xffffffffffffffff
0x14bc3: mov edx,0x1
0x14bc8: xor eax,eax
0x14bca: mov qword ptr [rbp-0x430],r10
0x14bd1: call 0x2910
0x14bd6: add rsp,0x20
0x14bda: mov r10,qword ptr [rbp-0x430]
0x14be1: jmp 0x14826
0x14be6: nop word ptr cs:[rax+rax]
0x14bf0: mov rax,qword ptr [r13+0x50]
0x14bf4: lea rdi,[r15+r14]
0x14bf8: shl rax,0x5
0x14bfc: add rax,qword ptr [rbp-0x3a8]
0x14c03: movzx r9d,byte ptr [rax+0x10]
0x14c08: mov eax,dword ptr [rbp-0x3e0]
0x14c0e: cmp eax,0x1
0x14c11: jne 0x1491e
0x14c17: jmp 0x14b50
0x14c1c: nop dword ptr [rax]
0x14c20: mov rax,qword ptr [r13+0x50]
0x14c24: lea rdi,[r15+r14]
0x14c28: shl rax,0x5
0x14c2c: add rax,qword ptr [rbp-0x3a8]
0x14c33: movsx r9d,byte ptr [rax+0x10]
0x14c38: mov eax,dword ptr [rbp-0x3e0]
0x14c3e: cmp eax,0x1
0x14c41: jne 0x1491e
0x14c47: jmp 0x14b50
0x14c4c: nop dword ptr [rax]
0x14c50: mov rdi,r12
0x14c53: call 0x2df0
0x14c58: test rax,rax
0x14c5b: mov rcx,rax
0x14c5e: je 0x143d1
0x14c64: test r14,r14
0x14c67: je 0x14d20
0x14c6d: test bl,bl
0x14c6f: je 0x14d20
0x14c75: mov rsi,r15
0x14c78: mov rdx,r14
0x14c7b: mov rdi,rax
0x14c7e: call 0x2d80
0x14c83: mov r15,rax
0x14c86: jmp 0x14770
0x14c8b: nop dword ptr [rax+rax]
0x14c90: sub rsp,0x8
0x14c94: push qword ptr [rbp-0x3f0]
0x14c9a: push r9
0x14c9c: jmp 0x14ba4
0x14ca1: nop dword ptr [rax]
0x14ca8: push qword ptr [rbp-0x3f0]
0x14cae: push r9
0x14cb0: jmp 0x14b58
0x14cb5: nop dword ptr [rax]
0x14cb8: mov byte ptr [rdi+1],0x0
0x14cbc: jmp 0x14770
0x14cc1: nop dword ptr [rax]
0x14cc8: cmp rax,0xffffffffffffffff
0x14ccc: jne 0x15186
0x14cd2: mov rax,r14
0x14cd5: add rax,0x1
0x14cd9: mov rbx,rax
0x14cdc: jae 0x14d68
0x14ce2: cmp r12,0xffffffffffffffff
0x14ce6: jne 0x143c5
0x14cec: mov rbx,r12
0x14cef: mov byte ptr [r15+r14],0x25
0x14cf4: mov r8,qword ptr [r13+8]
0x14cf8: add r13,0x58
0x14cfc: mov rcx,qword ptr [r13]
0x14d00: add qword ptr [rbp-0x400],0x1
0x14d08: cmp rcx,r8
0x14d0b: jne 0x143a9
0x14d19: nop dword ptr [rax]
0x14d20: mov r15,rcx
0x14d23: jmp 0x14770
0x14d39: nop dword ptr [rax]
0x14d40: mov edx,edi
0x14d42: sub edx,0x12
0x14d45: cmp edx,0x4
0x14d48: ja 0x15186
0x14d4e: lea rdi,[rip+0x4193]
0x14d55: mov rax,qword ptr [rax+0x10]
0x14d59: movsxd rdx,dword ptr [rdi+rdx*4]
0x14d5d: add rdx,rdi
0x14d60: jmp rdx
0x14d62: nop word ptr [rax+rax]
0x14d68: cmp r12,rax
0x14d6b: jae 0x14cef
0x14d6d: test r12,r12
0x14d70: jne 0x15140
0x14d76: cmp rax,0xc
0x14d7a: ja 0x15152
0x14d80: mov r12d,0xc
0x14d86: cmp r15,qword ptr [rbp-0x3e8]
0x14d8d: sete dl
0x14d90: test r15,r15
0x14d93: je 0x15000
0x14d99: test dl,dl
0x14d9b: jne 0x15000
0x14da1: mov rsi,r12
0x14da4: mov rdi,r15
0x14da7: call 0x2e90
0x14dac: test rax,rax
0x14daf: je 0x14eab
0x14db5: mov r15,rax
0x14db8: jmp 0x14cef
0x14dbd: nop dword ptr [rax]
0x14dc0: mov dword ptr [rbp-0x3e0],0x0
0x14dca: jmp 0x146b7
0x14dcf: nop 
0x14e88: nop dword ptr [rax+rax]
0x14e98: nop dword ptr [rax+rax]
0x14ea0: mov qword ptr [rax],r14
0x14ea3: mov rbx,r14
0x14ea6: jmp 0x14cf4
0x14ecd: nop dword ptr [rax]
0x14ed0: mov r9,qword ptr [rbp-0x3f0]
0x14ed7: mov r8,qword ptr [rbp-0x3d8]
0x14ede: mov rsi,r10
0x14ee1: mov rcx,0xffffffffffffffff
0x14ee8: mov edx,0x1
0x14eed: mov eax,0x1
0x14ef2: mov qword ptr [rbp-0x430],r10
0x14ef9: call 0x2910
0x14efe: mov r10,qword ptr [rbp-0x430]
0x14f05: jmp 0x14826
0x14f0a: nop word ptr [rax+rax]
0x14f10: sub rsp,0x10
0x14f14: mov r9,qword ptr [rbp-0x3f0]
0x14f1b: fstp xword ptr [rsp]
0x14f1e: jmp 0x147f9
0x14f23: nop dword ptr [rax+rax]
0x14f28: js 0x143c5
0x14f2e: add r12,r12
0x14f31: cmp r12,rax
0x14f34: jae 0x14719
0x14f3a: nop word ptr [rax+rax]
0x14f40: test rdx,rdx
0x14f43: jne 0x143c5
0x14f49: cmp rax,0xffffffffffffffff
0x14f4d: je 0x143c5
0x14f53: cmp r15,qword ptr [rbp-0x3e8]
0x14f5a: mov r12,rax
0x14f5d: sete dl
0x14f60: test r15,r15
0x14f63: jne 0x1472c
0x14f69: nop dword ptr [rax]
0x14f70: mov rdi,r12
0x14f73: mov byte ptr [rbp-0x3c8],dl
0x14f79: call 0x2df0
0x14f7e: test rax,rax
0x14f81: mov rcx,rax
0x14f84: movzx edx,byte ptr [rbp-0x3c8]
0x14f8b: je 0x143c5
0x14f91: test r14,r14
0x14f94: je 0x15130
0x14f9a: test dl,dl
0x14f9c: je 0x15130
0x14fa2: mov rsi,r15
0x14fa5: mov rdx,r14
0x14fa8: mov rdi,rax
0x14fab: call 0x2d80
0x14fb0: mov r15,rax
0x14fb3: jmp 0x1474b
0x14fb8: nop dword ptr [rax+rax]
0x14fc0: mov byte ptr [rbx],0x4c
0x14fc3: add rbx,0x1
0x14fc7: jmp 0x1467b
0x14fcc: nop dword ptr [rax]
0x14fd0: mov byte ptr [rax],r14b
0x14fd3: mov rbx,r14
0x14fd6: jmp 0x14cf4
0x14fdb: nop dword ptr [rax+rax]
0x14fe0: mov dword ptr [rax],r14d
0x14fe3: mov rbx,r14
0x14fe6: jmp 0x14cf4
0x14feb: nop dword ptr [rax+rax]
0x14ff0: mov word ptr [rax],r14w
0x14ff4: mov rbx,r14
0x14ff7: jmp 0x14cf4
0x14ffc: nop dword ptr [rax]
0x15000: mov rdi,r12
0x15003: mov byte ptr [rbp-0x3c8],dl
0x15009: call 0x2df0
0x1500e: test rax,rax
0x15011: mov rcx,rax
0x15014: movzx edx,byte ptr [rbp-0x3c8]
0x1501b: je 0x143c5
0x15021: test r14,r14
0x15024: je 0x15164
0x1502a: test dl,dl
0x1502c: je 0x15164
0x15032: mov rsi,r15
0x15035: mov rdx,r14
0x15038: mov rdi,rax
0x1503b: call 0x2d80
0x15040: mov r15,rax
0x15043: jmp 0x14cef
0x15048: nop dword ptr [rax+rax]
0x15058: nop dword ptr [rax+rax]
0x15060: sub rsp,0x8
0x15064: push qword ptr [rbp-0x3f0]
0x1506a: jmp 0x14ae5
0x1506f: nop 
0x15070: sub rsp,0x8
0x15074: push qword ptr [rbp-0x3f0]
0x1507a: sub rsp,0x10
0x1507e: fstp xword ptr [rsp]
0x15081: jmp 0x14bab
0x15086: nop word ptr cs:[rax+rax]
0x15090: mov rax,qword ptr [rbp-0x3c8]
0x15097: mov edi,dword ptr [rbp-0x424]
0x1509d: movsxd rbx,ecx
0x150a0: add rbx,r14
0x150a3: mov dword ptr [rax],edi
0x150a5: jmp 0x14cf4
0x150aa: nop word ptr [rax+rax]
0x150b0: cmp r15,qword ptr [rbp-0x3e8]
0x150b7: je 0x150c2
0x150b9: test r15,r15
0x150bc: jne 0x15179
0x150c2: mov rax,qword ptr [rbp-0x420]
0x150c9: test rax,rax
0x150cc: je 0x150d6
0x150ce: mov rdi,rax
0x150d1: call 0x30d0
0x150d6: mov rax,qword ptr [rbp-0x408]
0x150dd: mov rdi,qword ptr [rbp-0x2b8]
0x150e4: add rax,0x20
0x150e8: cmp rdi,rax
0x150eb: je 0x150f2
0x150ed: call 0x30d0
0x150f2: mov rax,qword ptr [rbp-0x410]
0x150f9: mov rdi,qword ptr [rbp-0x3a8]
0x15100: add rax,0x10
0x15104: cmp rdi,rax
0x15107: je 0x1510e
0x15109: call 0x30d0
0x1510e: mov rax,qword ptr [rbp-0x3c8]
0x15115: xor r15d,r15d
0x15118: mov dword ptr [rax],0x4b
0x1511e: jmp 0x1443f
0x15123: nop dword ptr [rax+rax]
0x15130: mov r15,rcx
0x15133: jmp 0x1474b
0x15138: nop dword ptr [rax+rax]
0x15140: js 0x143c5
0x15146: add r12,r12
0x15149: cmp r12,rax
0x1514c: jae 0x14d86
0x15152: cmp rax,0xffffffffffffffff
0x15156: je 0x143c5
0x1515c: mov r12,rax
0x1515f: jmp 0x14d86
0x15164: mov r15,rcx
0x15167: jmp 0x14cef
0x1516c: mov rdi,r15
0x1516f: call 0x30d0
0x15174: jmp 0x149c2
0x15179: mov rdi,r15
0x1517c: call 0x30d0
0x15181: jmp 0x150c2
0x15186: call 0x2940
0x1518b: nop dword ptr [rax+rax]
0x1533d: nop dword ptr [rax]
0x15348: cmp r12,0xffffffffffffffff
0x1534c: je 0x14770
0x15352: jmp 0x143d1
0x1535c: cmp r12,0xffffffffffffffff
0x15360: mov edx,0x1
0x15365: je 0x1474b
0x1536b: test r12,r12
0x1536e: je 0x143c5
0x15374: jns 0x14f40
0x1537a: jmp 0x143c5
0x1537f: nop 
0x15380: push r12
0x15382: push rbp
0x15383: mov rbp,rsi
0x15386: push rbx
0x15387: call 0x2f90
0x1538c: test rax,rax
0x1538f: mov rbx,rax
0x15392: je 0x153a1
0x15394: mov rdi,rax
0x15397: call 0x2db0
0x1539c: cmp eax,0x2
0x1539f: jbe 0x153b0
0x153a1: mov rax,rbx
0x153a4: pop rbx
0x153a5: pop rbp
0x153a6: pop r12
0x153a8: ret 
0x153a9: nop dword ptr [rax]
0x153b0: mov edi,eax
0x153b2: call 0x13f40
0x153b7: test eax,eax
0x153b9: mov r12d,eax
0x153bc: js 0x153f8
0x153be: mov rdi,rbx
0x153c1: call 0x13f50
0x153c6: test eax,eax
0x153c8: jne 0x153dd
0x153ca: mov rsi,rbp
0x153cd: mov edi,r12d
0x153d0: call 0x2eb0
0x153d5: test rax,rax
0x153d8: mov rbx,rax
0x153db: jne 0x153a1
0x153dd: call 0x2950
0x153e2: mov ebp,dword ptr [rax]
0x153e4: mov rbx,rax
0x153e7: mov edi,r12d
0x153ea: call 0x2c30
0x153ef: mov dword ptr [rbx],ebp
0x153f1: xor ebx,ebx
0x153f3: jmp 0x153a1
0x153f5: nop dword ptr [rax]
0x153f8: call 0x2950
0x153fd: mov r12d,dword ptr [rax]
0x15400: mov rbp,rax
0x15403: mov rdi,rbx
0x15406: call 0x13f50
0x1540b: xor ebx,ebx
0x1540d: mov dword ptr [rbp],r12d
0x15411: jmp 0x153a1
0x15413: nop word ptr cs:[rax+rax]
0x1541d: nop dword ptr [rax]
0x15458: nop dword ptr [rax+rax]
0x1561e: nop 
0x1568e: nop 
0x156d1: nop dword ptr [rax]
0x15737: nop word ptr [rax+rax]
0x15782: nop word ptr [rax+rax]
0x15798: nop dword ptr [rax+rax]
0x157a8: nop dword ptr [rax+rax]
0x157b8: nop dword ptr [rax+rax]
0x157c8: nop dword ptr [rax+rax]
0x157f7: nop word ptr [rax+rax]
0x1583d: nop dword ptr [rax]
0x15845: nop dword ptr [rax]
0x15c0d: nop dword ptr [rax]
0x15d62: nop word ptr [rax+rax]
0x15dc5: nop dword ptr [rax]
0x15e56: nop word ptr cs:[rax+rax]
0x15eae: nop 
0x162bb: nop dword ptr [rax+rax]
0x1630c: nop dword ptr [rax]
0x16310: push r15
0x16312: push r14
0x16314: mov r15,rdx
0x16317: push r13
0x16319: push r12
0x1631b: lea r12,[rip+0x20638e]
0x16322: push rbp
0x16323: lea rbp,[rip+0x20638e]
0x1632a: push rbx
0x1632b: mov r13d,edi
0x1632e: mov r14,rsi
0x16331: sub rbp,r12
0x16334: sub rsp,0x8
0x16338: sar rbp,0x3
0x1633c: call 0x28c0
0x16341: test rbp,rbp
0x16344: je 0x16366
0x16346: xor ebx,ebx
0x16348: nop dword ptr [rax+rax]
0x16350: mov rdx,r15
0x16353: mov rsi,r14
0x16356: mov edi,r13d
0x16359: call qword ptr [r12+rbx*8]
0x1635d: add rbx,0x1
0x16361: cmp rbp,rbx
0x16364: jne 0x16350
0x16366: add rsp,0x8
0x1636a: pop rbx
0x1636b: pop rbp
0x1636c: pop r12
0x1636e: pop r13
0x16370: pop r14
0x16372: pop r15
0x16374: ret 
0x16375: nop 
0x16376: nop word ptr cs:[rax+rax]
0x16380: ret 
0x16382: nop word ptr cs:[rax+rax]
0x1638c: nop dword ptr [rax]
0x1639e: add byte ptr [rax],al
