;-- section..plt:
;-- .plt:
0x00002aa0      ff357a712100   push qword [0x00219c20]                 ; [12] -r-x section size 1824 named .plt
0x00002aa6      ff257c712100   jmp qword [0x00219c28]                  ; [0x219c28:8]=0
0x00002aac      0f1f4000       nop dword [rax]
;-- imp.__ctype_toupper_loc:
0x00002ab0      ff257a712100   jmp qword [reloc.__ctype_toupper_loc]   ; [0x219c30:8]=0x2ab6
0x00002ab6      6800000000     push 0
0x00002abb      e9e0ffffff     jmp sym..plt
;-- imp.getenv:
0x00002ac0      ff2572712100   jmp qword [reloc.getenv]                ; [0x219c38:8]=0x2ac6
0x00002ac6      6801000000     push 1                                  ; "ELF\x02\x01\x01"
0x00002acb      e9d0ffffff     jmp sym..plt
;-- imp.raise:
0x00002ad0      ff256a712100   jmp qword [reloc.raise]                 ; [0x219c40:8]=0x2ad6
0x00002ad6      6802000000     push 2                                  ; "LF\x02\x01\x01"
0x00002adb      e9c0ffffff     jmp sym..plt
;-- imp.pthread_create:
0x00002ae0      ff2562712100   jmp qword [reloc.pthread_create]        ; [0x219c48:8]=0x2ae6
0x00002ae6      6803000000     push 3                                  ; "F\x02\x01\x01"
0x00002aeb      e9b0ffffff     jmp sym..plt
;-- imp.pthread_sigmask:
0x00002af0      ff255a712100   jmp qword [reloc.pthread_sigmask]       ; [0x219c50:8]=0x2af6
0x00002af6      6804000000     push 4
0x00002afb      e9a0ffffff     jmp sym..plt
;-- imp.abort:
0x00002b00      ff2552712100   jmp qword [reloc.abort]                 ; [0x219c58:8]=0x2b06
0x00002b06      6805000000     push 5
0x00002b0b      e990ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00002b10      ff254a712100   jmp qword [reloc.__errno_location]      ; [0x219c60:8]=0x2b16
0x00002b16      6806000000     push 6
0x00002b1b      e980ffffff     jmp sym..plt
;-- imp.unlink:
0x00002b20      ff2542712100   jmp qword [reloc.unlink]                ; [0x219c68:8]=0x2b26 ; "&+"
0x00002b26      6807000000     push 7
0x00002b2b      e970ffffff     jmp sym..plt
;-- imp.strncmp:
0x00002b30      ff253a712100   jmp qword [reloc.strncmp]               ; [0x219c70:8]=0x2b36 ; "6+"
0x00002b36      6808000000     push 8
0x00002b3b      e960ffffff     jmp sym..plt
;-- imp._exit:
0x00002b40      ff2532712100   jmp qword [reloc._exit]                 ; [0x219c78:8]=0x2b46 ; "F+"
0x00002b46      6809000000     push 9
0x00002b4b      e950ffffff     jmp sym..plt
;-- imp.strcpy:
0x00002b50      ff252a712100   jmp qword [reloc.strcpy]                ; [0x219c80:8]=0x2b56 ; "V+"
0x00002b56      680a000000     push 0xa
0x00002b5b      e940ffffff     jmp sym..plt
;-- imp.__fpending:
0x00002b60      ff2522712100   jmp qword [reloc.__fpending]            ; [0x219c88:8]=0x2b66 ; "f+"
0x00002b66      680b000000     push 0xb
0x00002b6b      e930ffffff     jmp sym..plt
;-- imp.__read_chk:
0x00002b70      ff251a712100   jmp qword [reloc.__read_chk]            ; [0x219c90:8]=0x2b76 ; "v+"
0x00002b76      680c000000     push 0xc
0x00002b7b      e920ffffff     jmp sym..plt
;-- imp.ferror:
0x00002b80      ff2512712100   jmp qword [reloc.ferror]                ; [0x219c98:8]=0x2b86
0x00002b86      680d000000     push 0xd
0x00002b8b      e910ffffff     jmp sym..plt
;-- imp.qsort:
0x00002b90      ff250a712100   jmp qword [reloc.qsort]                 ; [0x219ca0:8]=0x2b96
0x00002b96      680e000000     push 0xe
0x00002b9b      e900ffffff     jmp sym..plt
;-- imp.sigaction:
0x00002ba0      ff2502712100   jmp qword [reloc.sigaction]             ; [0x219ca8:8]=0x2ba6
0x00002ba6      680f000000     push 0xf
0x00002bab      e9f0feffff     jmp sym..plt
;-- imp.iswcntrl:
0x00002bb0      ff25fa702100   jmp qword [reloc.iswcntrl]              ; [0x219cb0:8]=0x2bb6
0x00002bb6      6810000000     push 0x10
0x00002bbb      e9e0feffff     jmp sym..plt
;-- imp.localeconv:
0x00002bc0      ff25f2702100   jmp qword [reloc.localeconv]            ; [0x219cb8:8]=0x2bc6
0x00002bc6      6811000000     push 0x11
0x00002bcb      e9d0feffff     jmp sym..plt
;-- imp.fcntl:
0x00002bd0      ff25ea702100   jmp qword [reloc.fcntl]                 ; [0x219cc0:8]=0x2bd6
0x00002bd6      6812000000     push 0x12                               ; u">\x01"
0x00002bdb      e9c0feffff     jmp sym..plt
;-- imp.clearerr_unlocked:
0x00002be0      ff25e2702100   jmp qword [reloc.clearerr_unlocked]     ; [0x219cc8:8]=0x2be6
0x00002be6      6813000000     push 0x13
0x00002beb      e9b0feffff     jmp sym..plt
;-- imp.write:
0x00002bf0      ff25da702100   jmp qword [reloc.write]                 ; [0x219cd0:8]=0x2bf6
0x00002bf6      6814000000     push 0x14
0x00002bfb      e9a0feffff     jmp sym..plt
;-- imp.getpid:
0x00002c00      ff25d2702100   jmp qword [reloc.getpid]                ; [0x219cd8:8]=0x2c06
0x00002c06      6815000000     push 0x15
0x00002c0b      e990feffff     jmp sym..plt
;-- imp.fread_unlocked:
0x00002c10      ff25ca702100   jmp qword [reloc.fread_unlocked]        ; [0x219ce0:8]=0x2c16
0x00002c16      6816000000     push 0x16
0x00002c1b      e980feffff     jmp sym..plt
;-- imp.textdomain:
0x00002c20      ff25c2702100   jmp qword [reloc.textdomain]            ; [0x219ce8:8]=0x2c26 ; "&,"
0x00002c26      6817000000     push 0x17
0x00002c2b      e970feffff     jmp sym..plt
;-- imp.pthread_cond_wait:
0x00002c30      ff25ba702100   jmp qword [reloc.pthread_cond_wait]     ; [0x219cf0:8]=0x2c36 ; "6,"
0x00002c36      6818000000     push 0x18                               ; "P]"
0x00002c3b      e960feffff     jmp sym..plt
;-- imp.fclose:
0x00002c40      ff25b2702100   jmp qword [reloc.fclose]                ; [0x219cf8:8]=0x2c46 ; "F,"
0x00002c46      6819000000     push 0x19                               ; "]"
0x00002c4b      e950feffff     jmp sym..plt
;-- imp.__sched_cpucount:
0x00002c50      ff25aa702100   jmp qword [reloc.__sched_cpucount]      ; [0x219d00:8]=0x2c56 ; "V,"
0x00002c56      681a000000     push 0x1a
0x00002c5b      e940feffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00002c60      ff25a2702100   jmp qword [reloc.bindtextdomain]        ; [0x219d08:8]=0x2c66 ; "f,"
0x00002c66      681b000000     push 0x1b
0x00002c6b      e930feffff     jmp sym..plt
;-- imp.dcgettext:
0x00002c70      ff259a702100   jmp qword [reloc.dcgettext]             ; [0x219d10:8]=0x2c76 ; "v,"
0x00002c76      681c000000     push 0x1c
0x00002c7b      e920feffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00002c80      ff2592702100   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x219d18:8]=0x2c86
0x00002c86      681d000000     push 0x1d
0x00002c8b      e910feffff     jmp sym..plt
;-- imp.strlen:
0x00002c90      ff258a702100   jmp qword [reloc.strlen]                ; [0x219d20:8]=0x2c96
0x00002c96      681e000000     push 0x1e
0x00002c9b      e900feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00002ca0      ff2582702100   jmp qword [reloc.__stack_chk_fail]      ; [0x219d28:8]=0x2ca6
0x00002ca6      681f000000     push 0x1f
0x00002cab      e9f0fdffff     jmp sym..plt
;-- imp.getuid:
0x00002cb0      ff257a702100   jmp qword [reloc.getuid]                ; [0x219d30:8]=0x2cb6
0x00002cb6      6820000000     push 0x20                               ; "@"
0x00002cbb      e9e0fdffff     jmp sym..plt
;-- imp.getopt_long:
0x00002cc0      ff2572702100   jmp qword [reloc.getopt_long]           ; [0x219d38:8]=0x2cc6
0x00002cc6      6821000000     push 0x21                               ; '!'
0x00002ccb      e9d0fdffff     jmp sym..plt
;-- imp.mbrtowc:
0x00002cd0      ff256a702100   jmp qword [reloc.mbrtowc]               ; [0x219d40:8]=0x2cd6
0x00002cd6      6822000000     push 0x22                               ; '"'
0x00002cdb      e9c0fdffff     jmp sym..plt
;-- imp.dup2:
0x00002ce0      ff2562702100   jmp qword [reloc.dup2]                  ; [0x219d48:8]=0x2ce6
0x00002ce6      6823000000     push 0x23                               ; '#'
0x00002ceb      e9b0fdffff     jmp sym..plt
;-- imp.strchr:
0x00002cf0      ff255a702100   jmp qword [reloc.strchr]                ; [0x219d50:8]=0x2cf6
0x00002cf6      6824000000     push 0x24                               ; '$'
0x00002cfb      e9a0fdffff     jmp sym..plt
;-- imp.nanosleep:
0x00002d00      ff2552702100   jmp qword [reloc.nanosleep]             ; [0x219d58:8]=0x2d06
0x00002d06      6825000000     push 0x25                               ; '%'
0x00002d0b      e990fdffff     jmp sym..plt
;-- imp.__overflow:
0x00002d10      ff254a702100   jmp qword [reloc.__overflow]            ; [0x219d60:8]=0x2d16
0x00002d16      6826000000     push 0x26                               ; '&'
0x00002d1b      e980fdffff     jmp sym..plt
;-- imp.strrchr:
0x00002d20      ff2542702100   jmp qword [reloc.strrchr]               ; [0x219d68:8]=0x2d26 ; "&-"
0x00002d26      6827000000     push 0x27                               ; '''
0x00002d2b      e970fdffff     jmp sym..plt
;-- imp.ftruncate:
0x00002d30      ff253a702100   jmp qword [reloc.ftruncate]             ; [0x219d70:8]=0x2d36 ; "6-"
0x00002d36      6828000000     push 0x28                               ; '(' ; "X8\b"
0x00002d3b      e960fdffff     jmp sym..plt
;-- imp.mkostemp:
0x00002d40      ff2532702100   jmp qword [reloc.mkostemp]              ; [0x219d78:8]=0x2d46 ; "F-"
0x00002d46      6829000000     push 0x29                               ; ')' ; "8\b"
0x00002d4b      e950fdffff     jmp sym..plt
;-- imp.lseek:
0x00002d50      ff252a702100   jmp qword [reloc.lseek]                 ; [0x219d80:8]=0x2d56 ; "V-"
0x00002d56      682a000000     push 0x2a                               ; '*'
0x00002d5b      e940fdffff     jmp sym..plt
;-- imp.gettimeofday:
0x00002d60      ff2522702100   jmp qword [reloc.gettimeofday]          ; [0x219d88:8]=0x2d66 ; "f-"
0x00002d66      682b000000     push 0x2b                               ; '+'
0x00002d6b      e930fdffff     jmp sym..plt
;-- imp.__assert_fail:
0x00002d70      ff251a702100   jmp qword [reloc.__assert_fail]         ; [0x219d90:8]=0x2d76 ; "v-"
0x00002d76      682c000000     push 0x2c                               ; ','
0x00002d7b      e920fdffff     jmp sym..plt
;-- imp.__strtoul_internal:
0x00002d80      ff2512702100   jmp qword [reloc.__strtoul_internal]    ; [0x219d98:8]=0x2d86
0x00002d86      682d000000     push 0x2d                               ; '-'
0x00002d8b      e910fdffff     jmp sym..plt
;-- imp.memset:
0x00002d90      ff250a702100   jmp qword [reloc.memset]                ; [0x219da0:8]=0x2d96
0x00002d96      682e000000     push 0x2e                               ; '.'
0x00002d9b      e900fdffff     jmp sym..plt
;-- imp.fgetc:
0x00002da0      ff2502702100   jmp qword [reloc.fgetc]                 ; [0x219da8:8]=0x2da6
0x00002da6      682f000000     push 0x2f                               ; '/'
0x00002dab      e9f0fcffff     jmp sym..plt
;-- imp.close:
0x00002db0      ff25fa6f2100   jmp qword [reloc.close]                 ; [0x219db0:8]=0x2db6
0x00002db6      6830000000     push 0x30                               ; '0'
0x00002dbb      e9e0fcffff     jmp sym..plt
;-- imp.pipe:
0x00002dc0      ff25f26f2100   jmp qword [reloc.pipe]                  ; [0x219db8:8]=0x2dc6
0x00002dc6      6831000000     push 0x31                               ; '1'
0x00002dcb      e9d0fcffff     jmp sym..plt
;-- imp.posix_fadvise:
0x00002dd0      ff25ea6f2100   jmp qword [reloc.posix_fadvise]         ; [0x219dc0:8]=0x2dd6
0x00002dd6      6832000000     push 0x32                               ; '2'
0x00002ddb      e9c0fcffff     jmp sym..plt
;-- imp.memchr:
0x00002de0      ff25e26f2100   jmp qword [reloc.memchr]                ; [0x219dc8:8]=0x2de6
0x00002de6      6833000000     push 0x33                               ; '3'
0x00002deb      e9b0fcffff     jmp sym..plt
;-- imp.memcmp:
0x00002df0      ff25da6f2100   jmp qword [reloc.memcmp]                ; [0x219dd0:8]=0x2df6
0x00002df6      6834000000     push 0x34                               ; '4' ; u"@8\t@%$\x06"
0x00002dfb      e9a0fcffff     jmp sym..plt
;-- imp.pthread_cond_signal:
0x00002e00      ff25d26f2100   jmp qword [reloc.pthread_cond_signal]   ; [0x219dd8:8]=0x2e06
0x00002e06      6835000000     push 0x35                               ; '5'
0x00002e0b      e990fcffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00002e10      ff25ca6f2100   jmp qword [reloc.fputs_unlocked]        ; [0x219de0:8]=0x2e16
0x00002e16      6836000000     push 0x36                               ; '6' ; u"8\t@%$\x06"
0x00002e1b      e980fcffff     jmp sym..plt
;-- imp.calloc:
0x00002e20      ff25c26f2100   jmp qword [reloc.calloc]                ; [0x219de8:8]=0x2e26 ; "&."
0x00002e26      6837000000     push 0x37                               ; '7'
0x00002e2b      e970fcffff     jmp sym..plt
;-- imp.strxfrm:
0x00002e30      ff25ba6f2100   jmp qword [reloc.strxfrm]               ; [0x219df0:8]=0x2e36 ; "6."
0x00002e36      6838000000     push 0x38                               ; '8' ; u"\t@%$\x06"
0x00002e3b      e960fcffff     jmp sym..plt
;-- imp.strcmp:
0x00002e40      ff25b26f2100   jmp qword [reloc.strcmp]                ; [0x219df8:8]=0x2e46 ; "F."
0x00002e46      6839000000     push 0x39                               ; '9'
0x00002e4b      e950fcffff     jmp sym..plt
;-- imp.signal:
0x00002e50      ff25aa6f2100   jmp qword [reloc.signal]                ; [0x219e00:8]=0x2e56 ; "V."
0x00002e56      683a000000     push 0x3a                               ; ':' ; u"@%$\x06"
0x00002e5b      e940fcffff     jmp sym..plt
;-- imp.sigemptyset:
0x00002e60      ff25a26f2100   jmp qword [reloc.sigemptyset]           ; [0x219e08:8]=0x2e66 ; "f."
0x00002e66      683b000000     push 0x3b                               ; ';'
0x00002e6b      e930fcffff     jmp sym..plt
;-- imp.strtol:
0x00002e70      ff259a6f2100   jmp qword [reloc.strtol]                ; [0x219e10:8]=0x2e76 ; "v."
0x00002e76      683c000000     push 0x3c                               ; '<' ; u"%$\x06"
0x00002e7b      e920fcffff     jmp sym..plt
;-- imp.memcpy:
0x00002e80      ff25926f2100   jmp qword [reloc.memcpy]                ; [0x219e18:8]=0x2e86
0x00002e86      683d000000     push 0x3d                               ; '='
0x00002e8b      e910fcffff     jmp sym..plt
;-- imp.fileno:
0x00002e90      ff258a6f2100   jmp qword [reloc.fileno]                ; [0x219e20:8]=0x2e96
0x00002e96      683e000000     push 0x3e                               ; '>' ; u"$\x06"
0x00002e9b      e900fcffff     jmp sym..plt
;-- imp.__stpcpy_chk:
0x00002ea0      ff25826f2100   jmp qword [reloc.__stpcpy_chk]          ; [0x219e28:8]=0x2ea6
0x00002ea6      683f000000     push 0x3f                               ; '?'
0x00002eab      e9f0fbffff     jmp sym..plt
;-- imp.getgid:
0x00002eb0      ff257a6f2100   jmp qword [reloc.getgid]                ; [0x219e30:8]=0x2eb6
0x00002eb6      6840000000     push 0x40                               ; segment.PHDR
0x00002ebb      e9e0fbffff     jmp sym..plt
;-- imp.__xstat:
0x00002ec0      ff25726f2100   jmp qword [reloc.__xstat]               ; [0x219e38:8]=0x2ec6
0x00002ec6      6841000000     push 0x41                               ; 'A'
0x00002ecb      e9d0fbffff     jmp sym..plt
;-- imp.pthread_cond_init:
0x00002ed0      ff256a6f2100   jmp qword [reloc.pthread_cond_init]     ; [0x219e40:8]=0x2ed6
0x00002ed6      6842000000     push 0x42                               ; 'B'
0x00002edb      e9c0fbffff     jmp sym..plt
;-- imp.wcwidth:
0x00002ee0      ff25626f2100   jmp qword [reloc.wcwidth]               ; [0x219e48:8]=0x2ee6
0x00002ee6      6843000000     push 0x43                               ; 'C'
0x00002eeb      e9b0fbffff     jmp sym..plt
;-- imp.pthread_mutex_unlock:
0x00002ef0      ff255a6f2100   jmp qword [reloc.pthread_mutex_unlock]  ; [0x219e50:8]=0x2ef6
0x00002ef6      6844000000     push 0x44                               ; 'D'
0x00002efb      e9a0fbffff     jmp sym..plt
;-- imp.fflush:
0x00002f00      ff25526f2100   jmp qword [reloc.fflush]                ; [0x219e58:8]=0x2f06
0x00002f06      6845000000     push 0x45                               ; 'E'
0x00002f0b      e990fbffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00002f10      ff254a6f2100   jmp qword [reloc.nl_langinfo]           ; [0x219e60:8]=0x2f16
0x00002f16      6846000000     push 0x46                               ; 'F'
0x00002f1b      e980fbffff     jmp sym..plt
;-- imp.__fxstat:
0x00002f20      ff25426f2100   jmp qword [reloc.__fxstat]              ; [0x219e68:8]=0x2f26 ; "&/"
0x00002f26      6847000000     push 0x47                               ; 'G'
0x00002f2b      e970fbffff     jmp sym..plt
;-- imp.strcoll:
0x00002f30      ff253a6f2100   jmp qword [reloc.strcoll]               ; [0x219e70:8]=0x2f36 ; "6/"
0x00002f36      6848000000     push 0x48                               ; 'H' ; "@"
0x00002f3b      e960fbffff     jmp sym..plt
;-- imp.mkstemp:
0x00002f40      ff25326f2100   jmp qword [reloc.mkstemp]               ; [0x219e78:8]=0x2f46 ; "F/"
0x00002f46      6849000000     push 0x49                               ; 'I'
0x00002f4b      e950fbffff     jmp sym..plt
;-- imp.__freading:
0x00002f50      ff252a6f2100   jmp qword [reloc.__freading]            ; [0x219e80:8]=0x2f56 ; "V/"
0x00002f56      684a000000     push 0x4a                               ; 'J'
0x00002f5b      e940fbffff     jmp sym..plt
;-- imp.fwrite_unlocked:
0x00002f60      ff25226f2100   jmp qword [reloc.fwrite_unlocked]       ; [0x219e88:8]=0x2f66 ; "f/"
0x00002f66      684b000000     push 0x4b                               ; 'K'
0x00002f6b      e930fbffff     jmp sym..plt
;-- imp.realloc:
0x00002f70      ff251a6f2100   jmp qword [reloc.realloc]               ; [0x219e90:8]=0x2f76 ; "v/"
0x00002f76      684c000000     push 0x4c                               ; 'L'
0x00002f7b      e920fbffff     jmp sym..plt
;-- imp.fdopen:
0x00002f80      ff25126f2100   jmp qword [reloc.fdopen]                ; [0x219e98:8]=0x2f86
0x00002f86      684d000000     push 0x4d                               ; 'M'
0x00002f8b      e910fbffff     jmp sym..plt
;-- imp.setlocale:
0x00002f90      ff250a6f2100   jmp qword [reloc.setlocale]             ; [0x219ea0:8]=0x2f96
0x00002f96      684e000000     push 0x4e                               ; 'N'
0x00002f9b      e900fbffff     jmp sym..plt
;-- imp.__printf_chk:
0x00002fa0      ff25026f2100   jmp qword [reloc.__printf_chk]          ; [0x219ea8:8]=0x2fa6
0x00002fa6      684f000000     push 0x4f                               ; 'O'
0x00002fab      e9f0faffff     jmp sym..plt
;-- imp.setvbuf:
0x00002fb0      ff25fa6e2100   jmp qword [reloc.setvbuf]               ; [0x219eb0:8]=0x2fb6
0x00002fb6      6850000000     push 0x50                               ; 'P' ; "@"
0x00002fbb      e9e0faffff     jmp sym..plt
;-- imp.memmove:
0x00002fc0      ff25f26e2100   jmp qword [reloc.memmove]               ; [0x219eb8:8]=0x2fc6
0x00002fc6      6851000000     push 0x51                               ; 'Q'
0x00002fcb      e9d0faffff     jmp sym..plt
;-- imp.strtold:
0x00002fd0      ff25ea6e2100   jmp qword [reloc.strtold]               ; [0x219ec0:8]=0x2fd6
0x00002fd6      6852000000     push 0x52                               ; 'R'
0x00002fdb      e9c0faffff     jmp sym..plt
;-- imp.error:
0x00002fe0      ff25e26e2100   jmp qword [reloc.error]                 ; [0x219ec8:8]=0x2fe6
0x00002fe6      6853000000     push 0x53                               ; 'S'
0x00002feb      e9b0faffff     jmp sym..plt
;-- imp.waitpid:
0x00002ff0      ff25da6e2100   jmp qword [reloc.waitpid]               ; [0x219ed0:8]=0x2ff6
0x00002ff6      6854000000     push 0x54                               ; 'T'
0x00002ffb      e9a0faffff     jmp sym..plt
;-- imp.__explicit_bzero_chk:
0x00003000      ff25d26e2100   jmp qword [reloc.__explicit_bzero_chk]  ; [0x219ed8:8]=0x3006
0x00003006      6855000000     push 0x55                               ; 'U'
0x0000300b      e990faffff     jmp sym..plt
;-- imp.open:
0x00003010      ff25ca6e2100   jmp qword [reloc.open]                  ; [0x219ee0:8]=0x3016
0x00003016      6856000000     push 0x56                               ; 'V'
0x0000301b      e980faffff     jmp sym..plt
;-- imp.fseeko:
0x00003020      ff25c26e2100   jmp qword [reloc.fseeko]                ; [0x219ee8:8]=0x3026 ; "&0"
0x00003026      6857000000     push 0x57                               ; 'W'
0x0000302b      e970faffff     jmp sym..plt
;-- imp.fopen:
0x00003030      ff25ba6e2100   jmp qword [reloc.fopen]                 ; [0x219ef0:8]=0x3036 ; "60"
0x00003036      6858000000     push 0x58                               ; 'X' ; "@"
0x0000303b      e960faffff     jmp sym..plt
;-- imp.dcngettext:
0x00003040      ff25b26e2100   jmp qword [reloc.dcngettext]            ; [0x219ef8:8]=0x3046 ; "F0"
0x00003046      6859000000     push 0x59                               ; 'Y'
0x0000304b      e950faffff     jmp sym..plt
;-- imp.sysconf:
0x00003050      ff25aa6e2100   jmp qword [reloc.sysconf]               ; [0x219f00:8]=0x3056 ; "V0"
0x00003056      685a000000     push 0x5a                               ; 'Z'
0x0000305b      e940faffff     jmp sym..plt
;-- imp.pthread_join:
0x00003060      ff25a26e2100   jmp qword [reloc.pthread_join]          ; [0x219f08:8]=0x3066 ; "f0"
0x00003066      685b000000     push 0x5b                               ; '['
0x0000306b      e930faffff     jmp sym..plt
;-- imp.euidaccess:
0x00003070      ff259a6e2100   jmp qword [reloc.euidaccess]            ; [0x219f10:8]=0x3076 ; "v0"
0x00003076      685c000000     push 0x5c                               ; '\'
0x0000307b      e920faffff     jmp sym..plt
;-- imp.strtoul:
0x00003080      ff25926e2100   jmp qword [reloc.strtoul]               ; [0x219f18:8]=0x3086
0x00003086      685d000000     push 0x5d                               ; ']'
0x0000308b      e910faffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00003090      ff258a6e2100   jmp qword [reloc.__cxa_atexit]          ; [0x219f20:8]=0x3096
0x00003096      685e000000     push 0x5e                               ; '^'
0x0000309b      e900faffff     jmp sym..plt
;-- imp.sysinfo:
0x000030a0      ff25826e2100   jmp qword [reloc.sysinfo]               ; [0x219f28:8]=0x30a6
0x000030a6      685f000000     push 0x5f                               ; '_'
0x000030ab      e9f0f9ffff     jmp sym..plt
;-- imp.pipe2:
0x000030b0      ff257a6e2100   jmp qword [reloc.pipe2]                 ; [0x219f30:8]=0x30b6
0x000030b6      6860000000     push 0x60                               ; '`'
0x000030bb      e9e0f9ffff     jmp sym..plt
;-- imp.getppid:
0x000030c0      ff25726e2100   jmp qword [reloc.getppid]               ; [0x219f38:8]=0x30c6
0x000030c6      6861000000     push 0x61                               ; 'a'
0x000030cb      e9d0f9ffff     jmp sym..plt
;-- imp.sigismember:
0x000030d0      ff256a6e2100   jmp qword [reloc.sigismember]           ; [0x219f40:8]=0x30d6
0x000030d6      6862000000     push 0x62                               ; 'b'
0x000030db      e9c0f9ffff     jmp sym..plt
;-- imp.exit:
0x000030e0      ff25626e2100   jmp qword [reloc.exit]                  ; [0x219f48:8]=0x30e6
0x000030e6      6863000000     push 0x63                               ; 'c'
0x000030eb      e9b0f9ffff     jmp sym..plt
;-- imp.fwrite:
0x000030f0      ff255a6e2100   jmp qword [reloc.fwrite]                ; [0x219f50:8]=0x30f6
0x000030f6      6864000000     push 0x64                               ; 'd'
0x000030fb      e9a0f9ffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00003100      ff25526e2100   jmp qword [reloc.__fprintf_chk]         ; [0x219f58:8]=0x3106
0x00003106      6865000000     push 0x65                               ; 'e'
0x0000310b      e990f9ffff     jmp sym..plt
;-- imp.getrlimit:
0x00003110      ff254a6e2100   jmp qword [reloc.getrlimit]             ; [0x219f60:8]=0x3116
0x00003116      6866000000     push 0x66                               ; 'f'
0x0000311b      e980f9ffff     jmp sym..plt
;-- imp.sched_getaffinity:
0x00003120      ff25426e2100   jmp qword [reloc.sched_getaffinity]     ; [0x219f68:8]=0x3126 ; "&1"
0x00003126      6867000000     push 0x67                               ; 'g'
0x0000312b      e970f9ffff     jmp sym..plt
;-- imp.fflush_unlocked:
0x00003130      ff253a6e2100   jmp qword [reloc.fflush_unlocked]       ; [0x219f70:8]=0x3136 ; "61"
0x00003136      6868000000     push 0x68                               ; 'h'
0x0000313b      e960f9ffff     jmp sym..plt
;-- imp.mbsinit:
0x00003140      ff25326e2100   jmp qword [reloc.mbsinit]               ; [0x219f78:8]=0x3146 ; "F1"
0x00003146      6869000000     push 0x69                               ; 'i'
0x0000314b      e950f9ffff     jmp sym..plt
;-- imp.execlp:
0x00003150      ff252a6e2100   jmp qword [reloc.execlp]                ; [0x219f80:8]=0x3156 ; "V1"
0x00003156      686a000000     push 0x6a                               ; 'j'
0x0000315b      e940f9ffff     jmp sym..plt
;-- imp.iswprint:
0x00003160      ff25226e2100   jmp qword [reloc.iswprint]              ; [0x219f88:8]=0x3166 ; "f1"
0x00003166      686b000000     push 0x6b                               ; 'k'
0x0000316b      e930f9ffff     jmp sym..plt
;-- imp.pthread_mutex_init:
0x00003170      ff251a6e2100   jmp qword [reloc.pthread_mutex_init]    ; [0x219f90:8]=0x3176 ; "v1"
0x00003176      686c000000     push 0x6c                               ; 'l'
0x0000317b      e920f9ffff     jmp sym..plt
;-- imp.sigaddset:
0x00003180      ff25126e2100   jmp qword [reloc.sigaddset]             ; [0x219f98:8]=0x3186
0x00003186      686d000000     push 0x6d                               ; 'm'
0x0000318b      e910f9ffff     jmp sym..plt
;-- imp.fork:
0x00003190      ff250a6e2100   jmp qword [reloc.fork]                  ; [0x219fa0:8]=0x3196
0x00003196      686e000000     push 0x6e                               ; 'n'
0x0000319b      e900f9ffff     jmp sym..plt
;-- imp.pthread_mutex_lock:
0x000031a0      ff25026e2100   jmp qword [reloc.pthread_mutex_lock]    ; [0x219fa8:8]=0x31a6
0x000031a6      686f000000     push 0x6f                               ; 'o'
0x000031ab      e9f0f8ffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x000031b0      ff25fa6d2100   jmp qword [reloc.__ctype_b_loc]         ; [0x219fb0:8]=0x31b6
0x000031b6      6870000000     push 0x70                               ; 'p'
0x000031bb      e9e0f8ffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x000031c0      .qword 0x906600216df225ff                              ; [13] -r-x section size 24 named .plt.got
0x000031c8      .qword 0x906600216e0a25ff
0x000031d0      .qword 0x906600216e1225ff
0x000031d8      0000           add byte [rax], al
0x000031da      0000           add byte [rax], al
0x000031dc      0000           add byte [rax], al
0x000031de      0000           add byte [rax], al
;-- section..text:
;-- .text:
;-- badfieldspec:
0x000031e0      55             push rbp                                ; [14] -r-x section size 67182 named .text
0x000031e1      53             push rbx
0x000031e2      4889f3         mov rbx, rsi
0x000031e5      4883ec08       sub rsp, 8
0x000031e9      e8a2d10000     call sym.quote
0x000031ee      4889de         mov rsi, rbx
0x000031f1      ba05000000     mov edx, 5
0x000031f6      31ff           xor edi, edi
0x000031f8      4889c5         mov rbp, rax
0x000031fb      e870faffff     call sym.imp.dcgettext
0x00003200      488d35090d01.  lea rsi, str.s:_invalid_field_specification__s ; 0x13f10 ; "%s: invalid field specification %s"
0x00003207      4889c3         mov rbx, rax
0x0000320a      ba05000000     mov edx, 5
0x0000320f      31ff           xor edi, edi
0x00003211      e85afaffff     call sym.imp.dcgettext
0x00003216      4989e8         mov r8, rbp
0x00003219      4889c2         mov rdx, rax
0x0000321c      4889d9         mov rcx, rbx
0x0000321f      31f6           xor esi, esi
0x00003221      bf02000000     mov edi, 2
0x00003226      31c0           xor eax, eax
0x00003228      e8b3fdffff     call sym.imp.error
;-- async_safe_die:
0x0000322d      4154           push r12
0x0000322f      55             push rbp
0x00003230      4983ccff       or r12, 0xffffffffffffffff
0x00003234      53             push rbx
0x00003235      31db           xor ebx, ebx
0x00003237      89fd           mov ebp, edi
0x00003239      4c89e1         mov rcx, r12
0x0000323c      4889f7         mov rdi, rsi
0x0000323f      4883ec20       sub rsp, 0x20
0x00003243      64488b042528.  mov rax, qword fs:[0x28]
0x0000324c      4889442418     mov qword [rsp + 0x18], rax
0x00003251      31c0           xor eax, eax
0x00003253      88d8           mov al, bl
0x00003255      f2ae           repne scasb al, byte [rdi]
0x00003257      bf02000000     mov edi, 2
0x0000325c      48f7d1         not rcx
0x0000325f      4a8d1421       lea rdx, [rcx + r12]
0x00003263      e888f9ffff     call sym.imp.write
0x00003268      85ed           test ebp, ebp
0x0000326a      7443           je 0x32af
0x0000326c      488d74240c     lea rsi, [rsp + 0xc]
0x00003271      89ef           mov edi, ebp
0x00003273      e898a90000     call sym.inttostr
0x00003278      488d35ca2101.  lea rsi, str.:_errno                    ; 0x15449 ; ": errno "
0x0000327f      4889c5         mov rbp, rax
0x00003282      ba08000000     mov edx, 8
0x00003287      bf02000000     mov edi, 2
0x0000328c      e85ff9ffff     call sym.imp.write
0x00003291      4889ef         mov rdi, rbp
0x00003294      4c89e1         mov rcx, r12
0x00003297      88d8           mov al, bl
0x00003299      f2ae           repne scasb al, byte [rdi]
0x0000329b      4889ee         mov rsi, rbp
0x0000329e      bf02000000     mov edi, 2
0x000032a3      48f7d1         not rcx
0x000032a6      4a8d1421       lea rdx, [rcx + r12]
0x000032aa      e841f9ffff     call sym.imp.write
0x000032af      488d35542201.  lea rsi, [0x0001550a]                   ; "\n"
0x000032b6      bf02000000     mov edi, 2
0x000032bb      ba01000000     mov edx, 1
0x000032c0      e82bf9ffff     call sym.imp.write
0x000032c5      bf02000000     mov edi, 2
0x000032ca      e871f8ffff     call sym.imp._exit
;-- xfopen.part.7:
0x000032cf      53             push rbx
0x000032d0      488d35c82101.  lea rsi, str.open_failed                ; 0x1549f ; "open failed"
0x000032d7      4889fb         mov rbx, rdi
0x000032da      ba05000000     mov edx, 5
0x000032df      31ff           xor edi, edi
0x000032e1      e88af9ffff     call sym.imp.dcgettext
0x000032e6      4889de         mov rsi, rbx
0x000032e9      4889c7         mov rdi, rax
0x000032ec      e82f300000     call sym.sort_die
0x000032f1      662e0f1f8400.  nop word cs:[rax + rax]
0x000032fb      0f1f440000     nop dword [rax + rax]
;-- main:
0x00003300      4157           push r15
0x00003302      4156           push r14
0x00003304      4155           push r13
0x00003306      4154           push r12
0x00003308      55             push rbp
0x00003309      53             push rbx
0x0000330a      89fb           mov ebx, edi
0x0000330c      488d3db22201.  lea rdi, str.POSIXLY_CORRECT            ; 0x155c5 ; "POSIXLY_CORRECT"
0x00003313      4889f5         mov rbp, rsi
0x00003316      4881ecf80300.  sub rsp, 0x3f8
0x0000331d      64488b042528.  mov rax, qword fs:[0x28]
0x00003326      48898424e803.  mov qword [rsp + 0x3e8], rax
0x0000332e      31c0           xor eax, eax
0x00003330      e88bf7ffff     call sym.imp.getenv
0x00003335      4885c0         test rax, rax
0x00003338      4889442468     mov qword [rsp + 0x68], rax
0x0000333d      0f95442408     setne byte [rsp + 8]
0x00003342      e8a9b20000     call sym.posix2_version
0x00003347      488b7d00       mov rdi, qword [rbp]
0x0000334b      2db00d0300     sub eax, 0x30db0
0x00003350      3db8020000     cmp eax, 0x2b8
0x00003355      0f97442410     seta byte [rsp + 0x10]
0x0000335a      e821b30000     call sym.set_program_name
0x0000335f      488d35a52101.  lea rsi, [0x0001550b]
0x00003366      bf06000000     mov edi, 6
0x0000336b      e820fcffff     call sym.imp.setlocale
0x00003370      488d355e2201.  lea rsi, str.usr_local_share_locale     ; 0x155d5 ; "/usr/local/share/locale"
0x00003377      488d3d1e2201.  lea rdi, [0x0001559c]                   ; "coreutils"
0x0000337e      4889442450     mov qword [rsp + 0x50], rax
0x00003383      e8d8f8ffff     call sym.imp.bindtextdomain
0x00003388      488d3d0d2201.  lea rdi, [0x0001559c]                   ; "coreutils"
0x0000338f      e88cf8ffff     call sym.imp.textdomain
0x00003394      bf03000000     mov edi, 3
0x00003399      c7058d6d2100.  mov dword [obj.exit_failure], 2         ; [0x21a130:4]=1
0x000033a3      e838920000     call sym.hard_locale
0x000033a8      bf02000000     mov edi, 2
0x000033ad      8805ce742100   mov byte [obj.hard_LC_COLLATE], al      ; [0x21a881:1]=0
0x000033b3      e828920000     call sym.hard_locale
0x000033b8      4189c6         mov r14d, eax
0x000033bb      8805bf742100   mov byte [obj.hard_LC_TIME], al         ; [0x21a880:1]=0
0x000033c1      e8faf7ffff     call sym.imp.localeconv
0x000033c6      488b08         mov rcx, qword [rax]
0x000033c9      0fb631         movzx esi, byte [rcx]
0x000033cc      4084f6         test sil, sil
0x000033cf      8935b3742100   mov dword [obj.decimal_point], esi      ; [0x21a888:4]=0
0x000033d5      0f84e2000000   je 0x34bd
0x000033db      80790100       cmp byte [rcx + 1], 0
0x000033df      0f85d8000000   jne 0x34bd
0x000033e5      488b5008       mov rdx, qword [rax + 8]
0x000033e9      0fb60a         movzx ecx, byte [rdx]
0x000033ec      84c9           test cl, cl
0x000033ee      890d90742100   mov dword [obj.thousands_sep], ecx      ; [0x21a884:4]=0
0x000033f4      0f84b4000000   je 0x34ae
0x000033fa      807a0100       cmp byte [rdx + 1], 0
0x000033fe      0f85aa000000   jne 0x34ae
0x00003404      c6052d702100.  mov byte [obj.have_read_stdin], 0       ; [0x21a438:1]=0
0x0000340b      4c8d254e7021.  lea r12, obj.fold_toupper               ; 0x21a460
0x00003412      e899fdffff     call sym.imp.__ctype_b_loc
0x00003417      4989c5         mov r13, rax
0x0000341a      e891f6ffff     call sym.imp.__ctype_toupper_loc
0x0000341f      31d2           xor edx, edx
0x00003421      4c8d15387321.  lea r10, obj.blanks                     ; 0x21a760
0x00003428      4c8d0d317221.  lea r9, obj.nonprinting                 ; 0x21a660
0x0000342f      4c8d052a7121.  lea r8, obj.nondictionary               ; 0x21a560
0x00003436      eb3d           jmp 0x3475
0x00003438      0f1f84000000.  nop dword [rax + rax]
0x00003440      6685ff         test di, di
0x00003443      7552           jne 0x3497
0x00003445      6685c9         test cx, cx
0x00003448      41c6041200     mov byte [r10 + rdx], 0
0x0000344d      41883411       mov byte [r9 + rdx], sil
0x00003451      7557           jne 0x34aa
0x00003453      4883fa0a       cmp rdx, 0xa
0x00003457      0f95c1         setne cl
0x0000345a      41880c10       mov byte [r8 + rdx], cl
0x0000345e      488b08         mov rcx, qword [rax]
0x00003461      8b0c91         mov ecx, dword [rcx + rdx*4]
0x00003464      41880c14       mov byte [r12 + rdx], cl
0x00003468      4883c201       add rdx, 1
0x0000346c      4881fa000100.  cmp rdx, 0x100
0x00003473      745b           je 0x34d0
0x00003475      498b4d00       mov rcx, qword [r13]
0x00003479      0fb70c51       movzx ecx, word [rcx + rdx*2]
0x0000347d      89ce           mov esi, ecx
0x0000347f      89cf           mov edi, ecx
0x00003481      83e108         and ecx, 8
0x00003484      66c1ee0e       shr si, 0xe
0x00003488      83e701         and edi, 1
0x0000348b      83f601         xor esi, 1
0x0000348e      83e601         and esi, 1
0x00003491      4883fa0a       cmp rdx, 0xa
0x00003495      75a9           jne 0x3440
0x00003497      6685c9         test cx, cx
0x0000349a      41c6041201     mov byte [r10 + rdx], 1
0x0000349f      41883411       mov byte [r9 + rdx], sil
0x000034a3      7505           jne 0x34aa
0x000034a5      6685ff         test di, di
0x000034a8      74a9           je 0x3453
0x000034aa      31c9           xor ecx, ecx
0x000034ac      ebac           jmp 0x345a
0x000034ae      c705cc732100.  mov dword [obj.thousands_sep], 0xffffffff ; [0x21a884:4]=0
0x000034b8      e947ffffff     jmp 0x3404
0x000034bd      c705c1732100.  mov dword [obj.decimal_point], 0x2e     ; '.'
                                                                       ; [0x21a888:4]=0
0x000034c7      e919ffffff     jmp 0x33e5
0x000034cc      0f1f4000       nop dword [rax]
0x000034d0      4584f6         test r14b, r14b
0x000034d3      0f84c3000000   je 0x359c
0x000034d9      4c8d3d806b21.  lea r15, obj.monthtab                   ; 0x21a060
0x000034e0      41be01000000   mov r14d, 1
0x000034e6      895c2418       mov dword [rsp + 0x18], ebx
0x000034ea      48896c2420     mov qword [rsp + 0x20], rbp
0x000034ef      90             nop
0x000034f0      418dbe0d0002.  lea edi, [r14 + 0x2000d]
0x000034f7      e814faffff     call sym.imp.nl_langinfo
0x000034fc      4889c7         mov rdi, rax
0x000034ff      4889c5         mov rbp, rax
0x00003502      e889f7ffff     call sym.imp.strlen
0x00003507      488d7801       lea rdi, [rax + 1]
0x0000350b      4889c3         mov rbx, rax
0x0000350e      e8cde80000     call sym.xmalloc
0x00003513      4885db         test rbx, rbx
0x00003516      498907         mov qword [r15], rax
0x00003519      45897708       mov dword [r15 + 8], r14d
0x0000351d      0f846d0a0000   je 0x3f90
0x00003523      4d8b5500       mov r10, qword [r13]
0x00003527      4c8d441d00     lea r8, [rbp + rbx]
0x0000352c      4889ef         mov rdi, rbp
0x0000352f      4531c9         xor r9d, r9d
0x00003532      4889c1         mov rcx, rax
0x00003535      0f1f00         nop dword [rax]
0x00003538      0fb637         movzx esi, byte [rdi]
0x0000353b      4989cb         mov r11, rcx
0x0000353e      41f6047201     test byte [r10 + rsi*2], 1
0x00003543      7512           jne 0x3557
0x00003545      410fb61434     movzx edx, byte [r12 + rsi]
0x0000354a      4983c101       add r9, 1
0x0000354e      8811           mov byte [rcx], dl
0x00003550      4a8d0c08       lea rcx, [rax + r9]
0x00003554      4989cb         mov r11, rcx
0x00003557      4883c701       add rdi, 1
0x0000355b      4939f8         cmp r8, rdi
0x0000355e      75d8           jne 0x3538
0x00003560      4983c601       add r14, 1
0x00003564      4983c710       add r15, 0x10
0x00003568      41c60300       mov byte [r11], 0
0x0000356c      4983fe0d       cmp r14, 0xd
0x00003570      0f857affffff   jne 0x34f0
0x00003576      488d0d132d00.  lea rcx, sym.struct_month_cmp           ; 0x6290 ; "H\x8b6H\x8b?\xe9\xa5\xcb\xff\xff\x0f\x1fD"
0x0000357d      488d3ddc6a21.  lea rdi, obj.monthtab                   ; 0x21a060
0x00003584      ba10000000     mov edx, 0x10
0x00003589      be0c000000     mov esi, 0xc
0x0000358e      8b5c2418       mov ebx, dword [rsp + 0x18]
0x00003592      488b6c2420     mov rbp, qword [rsp + 0x20]
0x00003597      e8f4f5ffff     call sym.imp.qsort
0x0000359c      488d3dfd6d21.  lea rdi, obj.caught_signals             ; 0x21a3a0
0x000035a3      4c8d2dda0701.  lea r13, [0x00013d84]
0x000035aa      41bf0e000000   mov r15d, 0xe
0x000035b0      e8abf8ffff     call sym.imp.sigemptyset
0x000035b5      488d8424c002.  lea rax, [rsp + 0x2c0]
0x000035bd      895c2418       mov dword [rsp + 0x18], ebx
0x000035c1      4d8d7528       lea r14, [r13 + 0x28]
0x000035c5      4489fb         mov ebx, r15d
0x000035c8      4d89ec         mov r12, r13
0x000035cb      4889442420     mov qword [rsp + 0x20], rax
0x000035d0      4989c7         mov r15, rax
0x000035d3      eb0b           jmp 0x35e0
0x000035d5      0f1f00         nop dword [rax]
0x000035d8      418b1c24       mov ebx, dword [r12]
0x000035dc      4983c404       add r12, 4
0x000035e0      31f6           xor esi, esi
0x000035e2      4c89fa         mov rdx, r15
0x000035e5      89df           mov edi, ebx
0x000035e7      e8b4f5ffff     call sym.imp.sigaction
0x000035ec      4883bc24c002.  cmp qword [rsp + 0x2c0], 1
0x000035f5      740e           je 0x3605
0x000035f7      488d3da26d21.  lea rdi, obj.caught_signals             ; 0x21a3a0
0x000035fe      89de           mov esi, ebx
0x00003600      e87bfbffff     call sym.imp.sigaddset
0x00003605      4d39e6         cmp r14, r12
0x00003608      75ce           jne 0x35d8
0x0000360a      660f6f058e6d.  movdqa xmm0, xmmword [obj.caught_signals]
0x00003612      488d05b72c00.  lea rax, sym.sighandler                 ; 0x62d0 ; "US\x89\xfdH\x83\xec\bH\x8b\x1d\xa9@!"
0x00003619      8b5c2418       mov ebx, dword [rsp + 0x18]
0x0000361d      c78424480300.  mov dword [rsp + 0x348], 0
0x00003628      41be0e000000   mov r14d, 0xe
0x0000362e      0f118424c802.  movups xmmword [rsp + 0x2c8], xmm0
0x00003636      48898424c002.  mov qword [rsp + 0x2c0], rax
0x0000363e      4c8d3d5b6d21.  lea r15, obj.caught_signals             ; 0x21a3a0
0x00003645      660f6f05636d.  movdqa xmm0, xmmword [0x0021a3b0]
0x0000364d      0f118424d802.  movups xmmword [rsp + 0x2d8], xmm0
0x00003655      660f6f05636d.  movdqa xmm0, xmmword [0x0021a3c0]
0x0000365d      0f118424e802.  movups xmmword [rsp + 0x2e8], xmm0
0x00003665      660f6f05636d.  movdqa xmm0, xmmword [0x0021a3d0]
0x0000366d      0f118424f802.  movups xmmword [rsp + 0x2f8], xmm0
0x00003675      660f6f05636d.  movdqa xmm0, xmmword [0x0021a3e0]
0x0000367d      0f1184240803.  movups xmmword [rsp + sym..dynsym], xmm0
0x00003685      660f6f05636d.  movdqa xmm0, xmmword [0x0021a3f0]
0x0000368d      0f1184241803.  movups xmmword [rsp + 0x318], xmm0
0x00003695      660f6f05636d.  movdqa xmm0, xmmword [0x0021a400]
0x0000369d      0f1184242803.  movups xmmword [rsp + 0x328], xmm0
0x000036a5      660f6f05636d.  movdqa xmm0, xmmword [0x0021a410]
0x000036ad      0f1184243803.  movups xmmword [rsp + 0x338], xmm0
0x000036b5      eb16           jmp 0x36cd
0x000036b7      660f1f840000.  nop word [rax + rax]
0x000036c0      4d39ec         cmp r12, r13
0x000036c3      742b           je 0x36f0
0x000036c5      458b7500       mov r14d, dword [r13]
0x000036c9      4983c504       add r13, 4
0x000036cd      4489f6         mov esi, r14d
0x000036d0      4c89ff         mov rdi, r15
0x000036d3      e8f8f9ffff     call sym.imp.sigismember
0x000036d8      85c0           test eax, eax
0x000036da      74e4           je 0x36c0
0x000036dc      488b742420     mov rsi, qword [rsp + 0x20]
0x000036e1      31d2           xor edx, edx
0x000036e3      4489f7         mov edi, r14d
0x000036e6      e8b5f4ffff     call sym.imp.sigaction
0x000036eb      4d39ec         cmp r12, r13
0x000036ee      75d5           jne 0x36c5
0x000036f0      31f6           xor esi, esi
0x000036f2      bf11000000     mov edi, 0x11
0x000036f7      e854f7ffff     call sym.imp.signal
0x000036fc      488d3dbd3400.  lea rdi, sym.exit_cleanup               ; 0x6bc0 ; "USH\x81\xec\x98"
0x00003703      e838010100     call sym.atexit
0x00003708      660fefc0       pxor xmm0, xmm0
0x0000370c      488d84240001.  lea rax, [rsp + 0x100]
0x00003714      ba08000000     mov edx, 8
0x00003719      4863cb         movsxd rcx, ebx
0x0000371c      31f6           xor esi, esi
0x0000371e      4889442438     mov qword [rsp + 0x38], rax
0x00003723      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x0000372a      0f1184240801.  movups xmmword [rsp + 0x108], xmm0
0x00003732      488984240001.  mov qword [rsp + 0x100], rax
0x0000373a      488984241001.  mov qword [rsp + 0x110], rax
0x00003742      4889d0         mov rax, rdx
0x00003745      48f7e1         mul rcx
0x00003748      0f1184241801.  movups xmmword [rsp + 0x118], xmm0
0x00003750      0f1184242801.  movups xmmword [rsp + 0x128], xmm0
0x00003758      0f1184243801.  movups xmmword [rsp + 0x138], xmm0
0x00003760      0f8099230000   jo 0x5aff
0x00003766      4885c0         test rax, rax
0x00003769      0f888b230000   js 0x5afa
0x0000376f      4885f6         test rsi, rsi
0x00003772      0f8582230000   jne 0x5afa
0x00003778      488d3ccd0000.  lea rdi, [rcx*8]
0x00003780      4531ff         xor r15d, r15d
0x00003783      4531e4         xor r12d, r12d
0x00003786      4c8d2d9f0101.  lea r13, [0x0001392c]
0x0000378d      e84ee60000     call sym.xmalloc
0x00003792      4989c6         mov r14, rax
0x00003795      488d8424b000.  lea rax, [rsp + 0xb0]
0x0000379d      48c744242800.  mov qword [rsp + 0x28], 0
0x000037a6      48c744241800.  mov qword [rsp + 0x18], 0
0x000037af      48c744245800.  mov qword [rsp + 0x58], 0
0x000037b8      4531c9         xor r9d, r9d
0x000037bb      4889442430     mov qword [rsp + 0x30], rax
0x000037c0      488d8424c000.  lea rax, [rsp + 0xc0]
0x000037c8      48c744244000.  mov qword [rsp + 0x40], 0
0x000037d1      c644244800     mov byte [rsp + 0x48], 0
0x000037d6      4889442460     mov qword [rsp + 0x60], rax
0x000037db      eb61           jmp 0x383e
0x000037dd      0f1f00         nop dword [rax]
0x000037e0      4d85ff         test r15, r15
0x000037e3      0f848f000000   je 0x3878
0x000037e9      807c240800     cmp byte [rsp + 8], 0
0x000037ee      0f8484000000   je 0x3878
0x000037f4      807c241001     cmp byte [rsp + 0x10], 1
0x000037f9      486305d86921.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x21a1d8:4]=0
0x00003800      751e           jne 0x3820
0x00003802      4584e4         test r12b, r12b
0x00003805      7519           jne 0x3820
0x00003807      39c3           cmp ebx, eax
0x00003809      0f8481010000   je 0x3990
0x0000380f      4863d0         movsxd rdx, eax
0x00003812      488b54d500     mov rdx, qword [rbp + rdx*8]
0x00003817      803a2d         cmp byte [rdx], 0x2d
0x0000381a      7444           je 0x3860
0x0000381c      0f1f4000       nop dword [rax]
0x00003820      39c3           cmp ebx, eax
0x00003822      0f8e6b010000   jle 0x3993
0x00003828      8d5001         lea edx, [rax + 1]
0x0000382b      488b44c500     mov rax, qword [rbp + rax*8]
0x00003830      8915a2692100   mov dword [obj.optind], edx             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x21a1d8:4]=0
0x00003836      4b8904fe       mov qword [r14 + r15*8], rax
0x0000383a      4983c701       add r15, 1
0x0000383e      4183f9ff       cmp r9d, 0xffffffff
0x00003842      c78424900000.  mov dword [rsp + 0x90], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x0000384d      7591           jne 0x37e0
0x0000384f      486305826921.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x21a1d8:4]=0
0x00003856      ebc8           jmp 0x3820
0x00003858      0f1f84000000.  nop dword [rax + rax]
0x00003860      807a016f       cmp byte [rdx + 1], 0x6f
0x00003864      75ba           jne 0x3820
0x00003866      807a0200       cmp byte [rdx + 2], 0
0x0000386a      750c           jne 0x3878
0x0000386c      8d5001         lea edx, [rax + 1]
0x0000386f      39da           cmp edx, ebx
0x00003871      74ad           je 0x3820
0x00003873      0f1f440000     nop dword [rax + rax]
0x00003878      4c8d84249000.  lea r8, [rsp + 0x90]
0x00003880      488d0d595d21.  lea rcx, obj.long_options               ; 0x2195e0 ; "WX\x01"
0x00003887      488d15420601.  lea rdx, obj.short_options              ; 0x13ed0 ; "-bcCdfghik:mMno:rRsS:t:T:uVy:z"
0x0000388e      4889ee         mov rsi, rbp
0x00003891      89df           mov edi, ebx
0x00003893      e828f4ffff     call sym.imp.getopt_long
0x00003898      83f8ff         cmp eax, 0xffffffff
0x0000389b      4189c1         mov r9d, eax
0x0000389e      74af           je 0x384f
0x000038a0      8d8083000000   lea eax, [rax + 0x83]
0x000038a6      3d0a010000     cmp eax, 0x10a
0x000038ab      0f873f220000   ja 0x5af0
0x000038b1      4963448500     movsxd rax, dword [r13 + rax*4]
0x000038b6      4c01e8         add rax, r13
0x000038b9      ffe0           jmp rax
0x000038bb      4c8b0d666821.  mov r9, qword [obj.argmatch_die]        ; [0x21a128:8]=0xaeb0 sym.__argmatch_die
0x000038c2      488b35176921.  mov rsi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21a1e0:8]=0
0x000038c9      488d15b05c21.  lea rdx, obj.sort_args                  ; 0x219580
0x000038d0      488d0de90501.  lea rcx, obj.sort_types                 ; 0x13ec0 ; "ghMnRVCCc"
0x000038d7      488d3d5f1d01.  lea rdi, str.sort                       ; 0x1563d ; "--sort"
0x000038de      41b801000000   mov r8d, 1
0x000038e4      e897780000     call sym.__xargmatch_internal
0x000038e9      488d15d00501.  lea rdx, obj.sort_types                 ; 0x13ec0 ; "ghMnRVCCc"
0x000038f0      440fbe0c02     movsx r9d, byte [rdx + rax]
0x000038f5      488b742438     mov rsi, qword [rsp + 0x38]
0x000038fa      488dbc24b003.  lea rdi, [rsp + 0x3b0]
0x00003902      ba02000000     mov edx, 2
0x00003907      44888c24b003.  mov byte [rsp + 0x3b0], r9b
0x0000390f      44894c2470     mov dword [rsp + 0x70], r9d
0x00003914      c68424b10300.  mov byte [rsp + 0x3b1], 0
0x0000391c      e85f280000     call sym.set_ordering
0x00003921      448b4c2470     mov r9d, dword [rsp + 0x70]
0x00003926      e913ffffff     jmp 0x383e
0x0000392b      488b35ae6821.  mov rsi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21a1e0:8]=0
0x00003932      41b963000000   mov r9d, 0x63                           ; 'c'
0x00003938      4885f6         test rsi, rsi
0x0000393b      7433           je 0x3970
0x0000393d      4c8b0de46721.  mov r9, qword [obj.argmatch_die]        ; [0x21a128:8]=0xaeb0 sym.__argmatch_die
0x00003944      488d15755c21.  lea rdx, obj.check_args                 ; 0x2195c0 ; ";X\x01"
0x0000394b      488d0d740501.  lea rcx, obj.check_types                ; 0x13ec6 ; "CCc"
0x00003952      488d3deb1c01.  lea rdi, str.check                      ; 0x15644 ; "--check"
0x00003959      41b801000000   mov r8d, 1
0x0000395f      e81c780000     call sym.__xargmatch_internal
0x00003964      488d155b0501.  lea rdx, obj.check_types                ; 0x13ec6 ; "CCc"
0x0000396b      440fbe0c02     movsx r9d, byte [rdx + rax]
0x00003970      4584e4         test r12b, r12b
0x00003973      7409           je 0x397e
0x00003975      4539cc         cmp r12d, r9d
0x00003978      0f850f230000   jne 0x5c8d
0x0000397e      450fbee1       movsx r12d, r9b
0x00003982      e9b7feffff     jmp 0x383e
0x00003987      660f1f840000.  nop word [rax + rax]
0x00003990      4531e4         xor r12d, r12d
0x00003993      48837c241800   cmp qword [rsp + 0x18], 0
0x00003999      0f84b1000000   je 0x3a50
0x0000399f      4d85ff         test r15, r15
0x000039a2      0f85e4200000   jne 0x5a8c
0x000039a8      488b7c2418     mov rdi, qword [rsp + 0x18]
0x000039ad      488d35df1e01.  lea rsi, [0x00015893]                   ; "r"
0x000039b4      e8f7360000     call sym.stream_open
0x000039b9      4885c0         test rax, rax
0x000039bc      4889c3         mov rbx, rax
0x000039bf      0f8441230000   je 0x5d06
0x000039c5      488dac24a001.  lea rbp, [rsp + 0x1a0]
0x000039cd      4889ef         mov rdi, rbp
0x000039d0      e83bd50000     call sym.readtokens0_init
0x000039d5      4889ee         mov rsi, rbp
0x000039d8      4889df         mov rdi, rbx
0x000039db      e8d0d50000     call sym.readtokens0
0x000039e0      84c0           test al, al
0x000039e2      488b742418     mov rsi, qword [rsp + 0x18]
0x000039e7      0f8460210000   je 0x5b4d
0x000039ed      4889df         mov rdi, rbx
0x000039f0      e8fb370000     call sym.xfclose
0x000039f5      488bac24a001.  mov rbp, qword [rsp + 0x1a0]
0x000039fd      4885ed         test rbp, rbp
0x00003a00      0f847b210000   je 0x5b81
0x00003a06      4c89f7         mov rdi, r14
0x00003a09      488d1d2a2c01.  lea rbx, [0x0001663a]                   ; "-"
0x00003a10      e8abf7ffff     call sym..plt.got
0x00003a15      4c8bb424a801.  mov r14, qword [rsp + 0x1a8]
0x00003a1d      0f1f00         nop dword [rax]
0x00003a20      4b8b14fe       mov rdx, qword [r14 + r15*8]
0x00003a24      b902000000     mov ecx, 2
0x00003a29      4889df         mov rdi, rbx
0x00003a2c      4889d6         mov rsi, rdx
0x00003a2f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00003a31      0f97c0         seta al
0x00003a34      1c00           sbb al, 0
0x00003a36      84c0           test al, al
0x00003a38      0f847c210000   je 0x5bba
0x00003a3e      4983c701       add r15, 1
0x00003a42      803a00         cmp byte [rdx], 0
0x00003a45      0f84a6210000   je 0x5bf1
0x00003a4b      4c39fd         cmp rbp, r15
0x00003a4e      75d0           jne 0x3a20
0x00003a50      488b35d96921.  mov rsi, qword [obj.keylist]            ; [0x21a430:8]=0
0x00003a57      4885f6         test rsi, rsi
0x00003a5a      4889f1         mov rcx, rsi
0x00003a5d      0f84a6140000   je 0x4f09
0x00003a63      4531ed         xor r13d, r13d
0x00003a66      e996000000     jmp 0x3b01
0x00003a6b      0f1f440000     nop dword [rax + rax]
0x00003a70      80793700       cmp byte [rcx + 0x37], 0
0x00003a74      0f8597000000   jne 0x3b11
0x00003a7a      488b84242001.  mov rax, qword [rsp + 0x120]
0x00003a82      0fb694243701.  movzx edx, byte [rsp + 0x137]
0x00003a8a      48894120       mov qword [rcx + 0x20], rax
0x00003a8e      488b84242801.  mov rax, qword [rsp + 0x128]
0x00003a96      48894128       mov qword [rcx + 0x28], rax
0x00003a9a      0fb684243001.  movzx eax, byte [rsp + 0x130]
0x00003aa2      884130         mov byte [rcx + 0x30], al
0x00003aa5      0fb684243101.  movzx eax, byte [rsp + 0x131]
0x00003aad      884131         mov byte [rcx + 0x31], al
0x00003ab0      0fb684243601.  movzx eax, byte [rsp + 0x136]
0x00003ab8      884136         mov byte [rcx + 0x36], al
0x00003abb      0fb684243201.  movzx eax, byte [rsp + 0x132]
0x00003ac3      884132         mov byte [rcx + 0x32], al
0x00003ac6      0fb684243401.  movzx eax, byte [rsp + 0x134]
0x00003ace      884134         mov byte [rcx + 0x34], al
0x00003ad1      0fb684243501.  movzx eax, byte [rsp + 0x135]
0x00003ad9      884135         mov byte [rcx + 0x35], al
0x00003adc      0fb684243801.  movzx eax, byte [rsp + 0x138]
0x00003ae4      885137         mov byte [rcx + 0x37], dl
0x00003ae7      884138         mov byte [rcx + 0x38], al
0x00003aea      0fb684243301.  movzx eax, byte [rsp + 0x133]
0x00003af2      884133         mov byte [rcx + 0x33], al
0x00003af5      488b4940       mov rcx, qword [rcx + 0x40]
0x00003af9      4109c5         or r13d, eax
0x00003afc      4885c9         test rcx, rcx
0x00003aff      7420           je 0x3b21
0x00003b01      4889cf         mov rdi, rcx
0x00003b04      e867250000     call sym.default_key_compare
0x00003b09      84c0           test al, al
0x00003b0b      0f855fffffff   jne 0x3a70
0x00003b11      0fb64133       movzx eax, byte [rcx + 0x33]
0x00003b15      488b4940       mov rcx, qword [rcx + 0x40]
0x00003b19      4109c5         or r13d, eax
0x00003b1c      4885c9         test rcx, rcx
0x00003b1f      75e0           jne 0x3b01
0x00003b21      4889f7         mov rdi, rsi
0x00003b24      c644241000     mov byte [rsp + 0x10], 0
0x00003b29      0fb65734       movzx edx, byte [rdi + 0x34]
0x00003b2d      0fb64732       movzx eax, byte [rdi + 0x32]
0x00003b31      01d0           add eax, edx
0x00003b33      0fb65735       movzx edx, byte [rdi + 0x35]
0x00003b37      01d0           add eax, edx
0x00003b39      0fb65736       movzx edx, byte [rdi + 0x36]
0x00003b3d      01d0           add eax, edx
0x00003b3f      0fb65738       movzx edx, byte [rdi + 0x38]
0x00003b43      0a5733         or dl, byte [rdi + 0x33]
0x00003b46      48837f2000     cmp qword [rdi + 0x20], 0
0x00003b4b      0f95c1         setne cl
0x00003b4e      09ca           or edx, ecx
0x00003b50      0fb6d2         movzx edx, dl
0x00003b53      01d0           add eax, edx
0x00003b55      83e801         sub eax, 1
0x00003b58      7e3b           jle 0x3b95
0x00003b5a      e9091f0000     jmp 0x5a68
0x00003b5f      90             nop
0x00003b60      0fb65734       movzx edx, byte [rdi + 0x34]
0x00003b64      0fb64732       movzx eax, byte [rdi + 0x32]
0x00003b68      01d0           add eax, edx
0x00003b6a      0fb65735       movzx edx, byte [rdi + 0x35]
0x00003b6e      01d0           add eax, edx
0x00003b70      0fb65736       movzx edx, byte [rdi + 0x36]
0x00003b74      01c2           add edx, eax
0x00003b76      0fb64738       movzx eax, byte [rdi + 0x38]
0x00003b7a      0a4733         or al, byte [rdi + 0x33]
0x00003b7d      48837f2000     cmp qword [rdi + 0x20], 0
0x00003b82      0f95c1         setne cl
0x00003b85      09c8           or eax, ecx
0x00003b87      0fb6c0         movzx eax, al
0x00003b8a      01d0           add eax, edx
0x00003b8c      83f801         cmp eax, 1
0x00003b8f      0f8fd31e0000   jg 0x5a68
0x00003b95      488b7f40       mov rdi, qword [rdi + 0x40]
0x00003b99      4885ff         test rdi, rdi
0x00003b9c      75c2           jne 0x3b60
0x00003b9e      803d7b682100.  cmp byte [obj.debug], 0                 ; [0x21a420:1]=0
0x00003ba5      0f843e0a0000   je 0x45e9
0x00003bab      4584e4         test r12b, r12b
0x00003bae      0f95c2         setne dl
0x00003bb1      48837c242800   cmp qword [rsp + 0x28], 0
0x00003bb7      0f95c0         setne al
0x00003bba      08c2           or dl, al
0x00003bbc      0f85d7200000   jne 0x5c99
0x00003bc2      48837c245000   cmp qword [rsp + 0x50], 0
0x00003bc8      0f84710d0000   je 0x493f
0x00003bce      488d35361901.  lea rsi, [0x0001550b]
0x00003bd5      bf03000000     mov edi, 3
0x00003bda      e8b1f3ffff     call sym.imp.setlocale
0x00003bdf      4885c0         test rax, rax
0x00003be2      0f84570d0000   je 0x493f
0x00003be8      803d926c2100.  cmp byte [obj.hard_LC_COLLATE], 0       ; [0x21a881:1]=0
0x00003bef      0f8440130000   je 0x4f35
0x00003bf5      31f6           xor esi, esi
0x00003bf7      bf03000000     mov edi, 3
0x00003bfc      e88ff3ffff     call sym.imp.setlocale
0x00003c01      4889c7         mov rdi, rax
0x00003c04      e887c70000     call sym.quote
0x00003c09      488d35381601.  lea rsi, str.text_ordering_performed_using__s_sorting_rules ; 0x15248 ; "text ordering performed using %s sorting rules"
0x00003c10      4889c3         mov rbx, rax
0x00003c13      ba05000000     mov edx, 5
0x00003c18      31ff           xor edi, edi
0x00003c1a      e851f0ffff     call sym.imp.dcgettext
0x00003c1f      4889d9         mov rcx, rbx
0x00003c22      4889c2         mov rdx, rax
0x00003c25      31f6           xor esi, esi
0x00003c27      31ff           xor edi, edi
0x00003c29      31c0           xor eax, eax
0x00003c2b      e8b0f3ffff     call sym.imp.error
0x00003c30      488b2df96721.  mov rbp, qword [obj.keylist]            ; [0x21a430:8]=0
0x00003c37      488dbc245001.  lea rdi, [rsp + 0x150]
0x00003c3f      b912000000     mov ecx, 0x12
0x00003c44      488b742438     mov rsi, qword [rsp + 0x38]
0x00003c49      48897c2408     mov qword [rsp + 8], rdi
0x00003c4e      4885ed         test rbp, rbp
0x00003c51      f3a5           rep movsd dword [rdi], dword ptr [rsi]
0x00003c53      0f84c50e0000   je 0x4b1e
0x00003c59      488d84248003.  lea rax, [rsp + 0x380]
0x00003c61      488dbc246003.  lea rdi, [rsp + 0x360]
0x00003c69      44886c2450     mov byte [rsp + 0x50], r13b
0x00003c6e      4488642460     mov byte [rsp + 0x60], r12b
0x00003c73      4c89742470     mov qword [rsp + 0x70], r14
0x00003c78      bb01000000     mov ebx, 1
0x00003c7d      4889442430     mov qword [rsp + 0x30], rax
0x00003c82      488d84248103.  lea rax, [rsp + 0x381]
0x00003c8a      440fb6642410   movzx r12d, byte [rsp + 0x10]
0x00003c90      4c897c2468     mov qword [rsp + 0x68], r15
0x00003c95      4989ee         mov r14, rbp
0x00003c98      4989fd         mov r13, rdi
0x00003c9b      4889442438     mov qword [rsp + 0x38], rax
0x00003ca0      e911010000     jmp 0x3db6
0x00003ca5      49837e1800     cmp qword [r14 + 0x18], 0
0x00003caa      0f8485020000   je 0x3f35
0x00003cb0      84c0           test al, al
0x00003cb2      0f85200e0000   jne 0x4ad8
0x00003cb8      48b80000ff00.  movabs rax, 0xffff00ff0000
0x00003cc2      49854630       test qword [r14 + 0x30], rax
0x00003cc6      7428           je 0x3cf0
0x00003cc8      498b4610       mov rax, qword [r14 + 0x10]
0x00003ccc      488d5001       lea rdx, [rax + 1]
0x00003cd0      498b06         mov rax, qword [r14]
0x00003cd3      4883c001       add rax, 1
0x00003cd7      7505           jne 0x3cde
0x00003cd9      b801000000     mov eax, 1
0x00003cde      4885d2         test rdx, rdx
0x00003ce1      0f847b120000   je 0x4f62
0x00003ce7      4839c2         cmp rdx, rax
0x00003cea      0f8772120000   ja 0x4f62
0x00003cf0      488b84247001.  mov rax, qword [rsp + 0x170]
0x00003cf8      4885c0         test rax, rax
0x00003cfb      740a           je 0x3d07
0x00003cfd      493b4620       cmp rax, qword [r14 + 0x20]
0x00003d01      0f84f00d0000   je 0x4af7
0x00003d07      488b84247801.  mov rax, qword [rsp + 0x178]
0x00003d0f      4885c0         test rax, rax
0x00003d12      740a           je 0x3d1e
0x00003d14      493b4628       cmp rax, qword [r14 + 0x28]
0x00003d18      0f84c80d0000   je 0x4ae6
0x00003d1e      410fb64630     movzx eax, byte [r14 + 0x30]
0x00003d23      4883c301       add rbx, 1
0x00003d27      83f001         xor eax, 1
0x00003d2a      208424800100.  and byte [rsp + 0x180], al
0x00003d31      410fb64631     movzx eax, byte [r14 + 0x31]
0x00003d36      83f001         xor eax, 1
0x00003d39      208424810100.  and byte [rsp + 0x181], al
0x00003d40      410fb64636     movzx eax, byte [r14 + 0x36]
0x00003d45      83f001         xor eax, 1
0x00003d48      208424860100.  and byte [rsp + 0x186], al
0x00003d4f      410fb64632     movzx eax, byte [r14 + 0x32]
0x00003d54      83f001         xor eax, 1
0x00003d57      208424820100.  and byte [rsp + 0x182], al
0x00003d5e      410fb64634     movzx eax, byte [r14 + 0x34]
0x00003d63      83f001         xor eax, 1
0x00003d66      208424840100.  and byte [rsp + 0x184], al
0x00003d6d      410fb64635     movzx eax, byte [r14 + 0x35]
0x00003d72      83f001         xor eax, 1
0x00003d75      208424850100.  and byte [rsp + 0x185], al
0x00003d7c      410fb64633     movzx eax, byte [r14 + 0x33]
0x00003d81      83f001         xor eax, 1
0x00003d84      208424830100.  and byte [rsp + 0x183], al
0x00003d8b      410fb64638     movzx eax, byte [r14 + 0x38]
0x00003d90      83f001         xor eax, 1
0x00003d93      208424880100.  and byte [rsp + 0x188], al
0x00003d9a      410fb64637     movzx eax, byte [r14 + 0x37]
0x00003d9f      4d8b7640       mov r14, qword [r14 + 0x40]
0x00003da3      83f001         xor eax, 1
0x00003da6      208424870100.  and byte [rsp + 0x187], al
0x00003dad      4d85f6         test r14, r14
0x00003db0      0f84520d0000   je 0x4b08
0x00003db6      41807e3900     cmp byte [r14 + 0x39], 0
0x00003dbb      4d8b3e         mov r15, qword [r14]
0x00003dbe      498b6e10       mov rbp, qword [r14 + 0x10]
0x00003dc2      0f840f010000   je 0x3ed7
0x00003dc8      4983ffff       cmp r15, 0xffffffffffffffff
0x00003dcc      b800000000     mov eax, 0
0x00003dd1      4c89ee         mov rsi, r13
0x00003dd4      4c0f44f8       cmove r15, rax
0x00003dd8      4c89ff         mov rdi, r15
0x00003ddb      e8f09e0000     call sym.umaxtostr
0x00003de0      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00003de5      ba2d000000     mov edx, 0x2d                           ; '-'
0x00003dea      4889c6         mov rsi, rax
0x00003ded      c68424800300.  mov byte [rsp + 0x380], 0x2b            ; '+'
                                                                       ; [0x2b:1]=0
0x00003df5      e8a6f0ffff     call sym.imp.__stpcpy_chk
0x00003dfa      498d7f01       lea rdi, [r15 + 1]
0x00003dfe      4c8dbc24b003.  lea r15, [rsp + 0x3b0]
0x00003e06      4c89ee         mov rsi, r13
0x00003e09      4889442410     mov qword [rsp + 0x10], rax
0x00003e0e      e8bd9e0000     call sym.umaxtostr
0x00003e13      498d7f03       lea rdi, [r15 + 3]
0x00003e17      ba2c000000     mov edx, 0x2c                           ; ','
0x00003e1c      4889c6         mov rsi, rax
0x00003e1f      c78424b00300.  mov dword [rsp + 0x3b0], 0x206b2d       ; '-k '
                                                                       ; [0x206b2d:4]=-1
0x00003e2a      e871f0ffff     call sym.imp.__stpcpy_chk
0x00003e2f      49837e10ff     cmp qword [r14 + 0x10], 0xffffffffffffffff
0x00003e34      4889442418     mov qword [rsp + 0x18], rax
0x00003e39      744f           je 0x3e8a
0x00003e3b      4883c501       add rbp, 1
0x00003e3f      4c89ee         mov rsi, r13
0x00003e42      4889ef         mov rdi, rbp
0x00003e45      e8869e0000     call sym.umaxtostr
0x00003e4a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003e4f      4889c6         mov rsi, rax
0x00003e52      66c707202d     mov word [rdi], sym.imp.strrchr         ; [0x2d20:2]=0x25ff
0x00003e57      4883c702       add rdi, 2
0x00003e5b      e8f0ecffff     call sym.imp.strcpy
0x00003e60      31ff           xor edi, edi
0x00003e62      49837e18ff     cmp qword [r14 + 0x18], 0xffffffffffffffff
0x00003e67      4c89ee         mov rsi, r13
0x00003e6a      400f94c7       sete dil
0x00003e6e      4801ef         add rdi, rbp
0x00003e71      e85a9e0000     call sym.umaxtostr
0x00003e76      488b542418     mov rdx, qword [rsp + 0x18]
0x00003e7b      4889c6         mov rsi, rax
0x00003e7e      488d7a01       lea rdi, [rdx + 1]
0x00003e82      c6022c         mov byte [rdx], 0x2c                    ; ','
                                                                       ; [0x2c:1]=0
0x00003e85      e8c6ecffff     call sym.imp.strcpy
0x00003e8a      4c89fe         mov rsi, r15
0x00003e8d      bf01000000     mov edi, 1
0x00003e92      e8d9c40000     call sym.quote_n
0x00003e97      488b742430     mov rsi, qword [rsp + 0x30]
0x00003e9c      31ff           xor edi, edi
0x00003e9e      4889c5         mov rbp, rax
0x00003ea1      e8cac40000     call sym.quote_n
0x00003ea6      488d35031401.  lea rsi, str.obsolescent_key__s_used__consider__s_instead ; 0x152b0 ; "obsolescent key %s used; consider %s instead"
0x00003ead      4989c7         mov r15, rax
0x00003eb0      ba05000000     mov edx, 5
0x00003eb5      31ff           xor edi, edi
0x00003eb7      e8b4edffff     call sym.imp.dcgettext
0x00003ebc      4989e8         mov r8, rbp
0x00003ebf      4c89f9         mov rcx, r15
0x00003ec2      4889c2         mov rdx, rax
0x00003ec5      31f6           xor esi, esi
0x00003ec7      31ff           xor edi, edi
0x00003ec9      31c0           xor eax, eax
0x00003ecb      e810f1ffff     call sym.imp.error
0x00003ed0      4d8b3e         mov r15, qword [r14]
0x00003ed3      498b6e10       mov rbp, qword [r14 + 0x10]
0x00003ed7      31c0           xor eax, eax
0x00003ed9      4983ffff       cmp r15, 0xffffffffffffffff
0x00003edd      742e           je 0x3f0d
0x00003edf      4939ef         cmp r15, rbp
0x00003ee2      7629           jbe 0x3f0d
0x00003ee4      488d35cd1401.  lea rsi, str.key__lu_has_zero_width_and_will_be_ignored ; 0x153b8 ; "key %lu has zero width and will be ignored"
0x00003eeb      ba05000000     mov edx, 5
0x00003ef0      31ff           xor edi, edi
0x00003ef2      e879edffff     call sym.imp.dcgettext
0x00003ef7      4889d9         mov rcx, rbx
0x00003efa      4889c2         mov rdx, rax
0x00003efd      31f6           xor esi, esi
0x00003eff      31c0           xor eax, eax
0x00003f01      31ff           xor edi, edi
0x00003f03      e8d8f0ffff     call sym.imp.error
0x00003f08      b801000000     mov eax, 1
0x00003f0d      48bf0000ff00.  movabs rdi, 0xffff00ff0000
0x00003f17      49857e30       test qword [r14 + 0x30], rdi
0x00003f1b      ba01000000     mov edx, 1
0x00003f20      7505           jne 0x3f27
0x00003f22      410fb65636     movzx edx, byte [r14 + 0x36]
0x00003f27      4409e0         or eax, r12d
0x00003f2a      49837e1000     cmp qword [r14 + 0x10], 0
0x00003f2f      0f8470fdffff   je 0x3ca5
0x00003f35      84c0           test al, al
0x00003f37      0f859b0b0000   jne 0x4ad8
0x00003f3d      813de1602100.  cmp dword [obj.tab], 0x80               ; [0x21a028:4]=128
0x00003f47      0f856bfdffff   jne 0x3cb8
0x00003f4d      41807e3000     cmp byte [r14 + 0x30], 0
0x00003f52      0f85d1100000   jne 0x5029
0x00003f58      85d2           test edx, edx
0x00003f5a      0f85be100000   jne 0x501e
0x00003f60      488d35791301.  lea rsi, str.leading_blanks_are_significant_in_key__lu__consider_also_specifying__b ; 0x152e0 ; "leading blanks are significant in key %lu; consider also specifying 'b'"
0x00003f67      31ff           xor edi, edi
0x00003f69      ba05000000     mov edx, 5
0x00003f6e      e8fdecffff     call sym.imp.dcgettext
0x00003f73      4889d9         mov rcx, rbx
0x00003f76      4889c2         mov rdx, rax
0x00003f79      31f6           xor esi, esi
0x00003f7b      31ff           xor edi, edi
0x00003f7d      31c0           xor eax, eax
0x00003f7f      e85cf0ffff     call sym.imp.error
0x00003f84      e92ffdffff     jmp 0x3cb8
0x00003f89      0f1f80000000.  nop dword [rax]
0x00003f90      4989c3         mov r11, rax
0x00003f93      e9c8f5ffff     jmp 0x3560
0x00003f98      4c8b15416221.  mov r10, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21a1e0:8]=0
0x00003f9f      8b8424900000.  mov eax, dword [rsp + 0x90]
0x00003fa6      488d8c24a001.  lea rcx, [rsp + 0x1a0]
0x00003fae      4c8d05561501.  lea r8, [0x0001550b]
0x00003fb5      31f6           xor esi, esi
0x00003fb7      ba0a000000     mov edx, 0xa
0x00003fbc      44894c2470     mov dword [rsp + 0x70], r9d
0x00003fc1      4c89d7         mov rdi, r10
0x00003fc4      89442478       mov dword [rsp + 0x78], eax
0x00003fc8      4c89542458     mov qword [rsp + 0x58], r10
0x00003fcd      e87ee20000     call sym.xstrtoul
0x00003fd2      83f801         cmp eax, 1
0x00003fd5      448b4c2470     mov r9d, dword [rsp + 0x70]
0x00003fda      0f8486150000   je 0x5566
0x00003fe0      85c0           test eax, eax
0x00003fe2      4c8b542458     mov r10, qword [rsp + 0x58]
0x00003fe7      0f85861c0000   jne 0x5c73
0x00003fed      488b8424a001.  mov rax, qword [rsp + 0x1a0]
0x00003ff5      4885c0         test rax, rax
0x00003ff8      4889442458     mov qword [rsp + 0x58], rax
0x00003ffd      0f853bf8ffff   jne 0x383e
0x00004003      488d35561101.  lea rsi, str.number_in_parallel_must_be_nonzero ; 0x15160 ; "number in parallel must be nonzero"
0x0000400a      ba05000000     mov edx, 5
0x0000400f      31ff           xor edi, edi
0x00004011      e85aecffff     call sym.imp.dcgettext
0x00004016      31f6           xor esi, esi
0x00004018      4889c2         mov rdx, rax
0x0000401b      bf02000000     mov edi, 2
0x00004020      31c0           xor eax, eax
0x00004022      e8b9efffff     call sym.imp.error
0x00004027      488b7c2440     mov rdi, qword [rsp + 0x40]
0x0000402c      488b15ad6121.  mov rdx, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21a1e0:8]=0
0x00004033      4885ff         test rdi, rdi
0x00004036      7424           je 0x405c
0x00004038      4889d6         mov rsi, rdx
0x0000403b      44894c2470     mov dword [rsp + 0x70], r9d
0x00004040      4889542440     mov qword [rsp + 0x40], rdx
0x00004045      e8f6edffff     call sym.imp.strcmp
0x0000404a      85c0           test eax, eax
0x0000404c      488b542440     mov rdx, qword [rsp + 0x40]
0x00004051      448b4c2470     mov r9d, dword [rsp + 0x70]
0x00004056      0f85a5180000   jne 0x5901
0x0000405c      4889542440     mov qword [rsp + 0x40], rdx
0x00004061      e9d8f7ffff     jmp 0x383e
0x00004066      4c8b1d736121.  mov r11, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21a1e0:8]=0
0x0000406d      8b8424900000.  mov eax, dword [rsp + 0x90]
0x00004074      488d8c245001.  lea rcx, [rsp + 0x150]
0x0000407c      4531c0         xor r8d, r8d
0x0000407f      31f6           xor esi, esi
0x00004081      ba0a000000     mov edx, 0xa
0x00004086      44898c248c00.  mov dword [rsp + 0x8c], r9d
0x0000408e      4c89df         mov rdi, r11
0x00004091      4c899c248000.  mov qword [rsp + 0x80], r11
0x00004099      89442470       mov dword [rsp + 0x70], eax
0x0000409d      e87ee60000     call sym.xstrtoumax
0x000040a2      488db424a001.  lea rsi, [rsp + 0x1a0]
0x000040aa      bf07000000     mov edi, 7
0x000040af      89442478       mov dword [rsp + 0x78], eax
0x000040b3      e858f0ffff     call sym.imp.getrlimit
0x000040b8      85c0           test eax, eax
0x000040ba      41ba11000000   mov r10d, 0x11
0x000040c0      4c8b9c248000.  mov r11, qword [rsp + 0x80]
0x000040c8      448b8c248c00.  mov r9d, dword [rsp + 0x8c]
0x000040d0      750b           jne 0x40dd
0x000040d2      8b8424a00100.  mov eax, dword [rsp + 0x1a0]
0x000040d9      448d50fd       lea r10d, [rax - 3]
0x000040dd      837c247800     cmp dword [rsp + 0x78], 0
0x000040e2      0f85a4080000   jne 0x498c
0x000040e8      488b84245001.  mov rax, qword [rsp + 0x150]
0x000040f0      89c2           mov edx, eax
0x000040f2      89052c5f2100   mov dword [obj.nmerge], eax             ; [0x21a024:4]=16
0x000040f8      4839d0         cmp rax, rdx
0x000040fb      7512           jne 0x410f
0x000040fd      83f801         cmp eax, 1
0x00004100      0f8686180000   jbe 0x598c
0x00004106      4439d0         cmp eax, r10d
0x00004109      0f862ff7ffff   jbe 0x383e
0x0000410f      4c89df         mov rdi, r11
0x00004112      4489542408     mov dword [rsp + 8], r10d
0x00004117      e874c20000     call sym.quote
0x0000411c      4889c5         mov rbp, rax
0x0000411f      4863442470     movsxd rax, dword [rsp + 0x70]
0x00004124      488d15b55421.  lea rdx, obj.long_options               ; 0x2195e0 ; "WX\x01"
0x0000412b      488d35821501.  lea rsi, str.s_argument__s_too_large    ; 0x156b4 ; "--%s argument %s too large"
0x00004132      31ff           xor edi, edi
0x00004134      48c1e005       shl rax, 5
0x00004138      488b1c02       mov rbx, qword [rdx + rax]
0x0000413c      ba05000000     mov edx, 5
0x00004141      e82aebffff     call sym.imp.dcgettext
0x00004146      4989e8         mov r8, rbp
0x00004149      4889c2         mov rdx, rax
0x0000414c      31f6           xor esi, esi
0x0000414e      4889d9         mov rcx, rbx
0x00004151      31ff           xor edi, edi
0x00004153      31c0           xor eax, eax
0x00004155      e886eeffff     call sym.imp.error
0x0000415a      448b542408     mov r10d, dword [rsp + 8]
0x0000415f      488db424b003.  lea rsi, [rsp + 0x3b0]
0x00004167      4489d7         mov edi, r10d
0x0000416a      e8219b0000     call sym.uinttostr
0x0000416f      488d35720f01.  lea rsi, str.maximum____s_argument_with_current_rlimit_is__s ; 0x150e8 ; "maximum --%s argument with current rlimit is %s"
0x00004176      4889c5         mov rbp, rax
0x00004179      ba05000000     mov edx, 5
0x0000417e      31ff           xor edi, edi
0x00004180      e8ebeaffff     call sym.imp.dcgettext
0x00004185      4989e8         mov r8, rbp
0x00004188      4889c2         mov rdx, rax
0x0000418b      4889d9         mov rcx, rbx
0x0000418e      31f6           xor esi, esi
0x00004190      bf02000000     mov edi, 2
0x00004195      31c0           xor eax, eax
0x00004197      e844eeffff     call sym.imp.error
0x0000419c      488b053d6021.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21a1e0:8]=0
0x000041a3      4889442418     mov qword [rsp + 0x18], rax
0x000041a8      e991f6ffff     jmp 0x383e
0x000041ad      488b3d746221.  mov rdi, qword [obj.compress_program]   ; [0x21a428:8]=0
0x000041b4      488b15256021.  mov rdx, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21a1e0:8]=0
0x000041bb      4885ff         test rdi, rdi
0x000041be      7424           je 0x41e4
0x000041c0      4889d6         mov rsi, rdx
0x000041c3      44894c2478     mov dword [rsp + 0x78], r9d
0x000041c8      4889542470     mov qword [rsp + 0x70], rdx
0x000041cd      e86eecffff     call sym.imp.strcmp
0x000041d2      85c0           test eax, eax
0x000041d4      488b542470     mov rdx, qword [rsp + 0x70]
0x000041d9      448b4c2478     mov r9d, dword [rsp + 0x78]
0x000041de      0f8541170000   jne 0x5925
0x000041e4      4889153d6221.  mov qword [obj.compress_program], rdx   ; [0x21a428:8]=0
0x000041eb      e94ef6ffff     jmp 0x383e
0x000041f0      c60529622100.  mov byte [obj.debug], 1                 ; [0x21a420:1]=0
0x000041f7      e942f6ffff     jmp 0x383e
0x000041fc      c605355e2100.  mov byte [obj.eolchar], 0               ; [0x21a038:1]=10 ; "\n"
0x00004203      e936f6ffff     jmp 0x383e
0x00004208      486315c95f21.  movsxd rdx, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x21a1d8:4]=0
0x0000420f      4889d0         mov rax, rdx
0x00004212      488b54d5f8     mov rdx, qword [rbp + rdx*8 - 8]
0x00004217      483b15c25f21.  cmp rdx, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21a1e0:8]=0
0x0000421e      0f851af6ffff   jne 0x383e
0x00004224      0fbe0a         movsx ecx, byte [rdx]
0x00004227      89ce           mov esi, ecx
0x00004229      83e930         sub ecx, 0x30
0x0000422c      83f909         cmp ecx, 9
0x0000422f      0f862f140000   jbe 0x5664
0x00004235      31d2           xor edx, edx
0x00004237      4084f6         test sil, sil
0x0000423a      0f95c2         setne dl
0x0000423d      29d0           sub eax, edx
0x0000423f      8905935f2100   mov dword [obj.optind], eax             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x21a1d8:4]=0
0x00004245      e9f4f5ffff     jmp 0x383e
0x0000424a      c605e8612100.  mov byte [obj.unique], 1                ; [0x21a439:1]=0
0x00004251      e9e8f5ffff     jmp 0x383e
0x00004256      488b15835f21.  mov rdx, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21a1e0:8]=0
0x0000425d      0fbe02         movsx eax, byte [rdx]
0x00004260      84c0           test al, al
0x00004262      0f84c1180000   je 0x5b29
0x00004268      807a0100       cmp byte [rdx + 1], 0
0x0000426c      742d           je 0x429b
0x0000426e      488d35a81401.  lea rsi, [0x0001571d]                   ; "\0"
0x00004275      4889d7         mov rdi, rdx
0x00004278      44894c2478     mov dword [rsp + 0x78], r9d
0x0000427d      4889542470     mov qword [rsp + 0x70], rdx
0x00004282      e8b9ebffff     call sym.imp.strcmp
0x00004287      85c0           test eax, eax
0x00004289      488b542470     mov rdx, qword [rsp + 0x70]
0x0000428e      448b4c2478     mov r9d, dword [rsp + 0x78]
0x00004293      0f8572170000   jne 0x5a0b
0x00004299      31c0           xor eax, eax
0x0000429b      8b15875d2100   mov edx, dword [obj.tab]                ; [0x21a028:4]=128
0x000042a1      81fa80000000   cmp edx, 0x80
0x000042a7      7408           je 0x42b1
0x000042a9      39c2           cmp edx, eax
0x000042ab      0f858c170000   jne 0x5a3d
0x000042b1      8905715d2100   mov dword [obj.tab], eax                ; [0x21a028:4]=128
0x000042b7      e982f5ffff     jmp 0x383e
0x000042bc      c60577612100.  mov byte [obj.stable], 1                ; [0x21a43a:1]=0
0x000042c3      e976f5ffff     jmp 0x383e
0x000042c8      488b3d115f21.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21a1e0:8]=0
0x000042cf      44894c2470     mov dword [rsp + 0x70], r9d
0x000042d4      e817210000     call sym.add_temp_dir
0x000042d9      448b4c2470     mov r9d, dword [rsp + 0x70]
0x000042de      e95bf5ffff     jmp 0x383e
0x000042e3      488b3df65e21.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21a1e0:8]=0
0x000042ea      8b8424900000.  mov eax, dword [rsp + 0x90]
0x000042f1      488d8c245001.  lea rcx, [rsp + 0x150]
0x000042f9      488db424a001.  lea rsi, [rsp + 0x1a0]
0x00004301      4c8d05fe1301.  lea r8, str.EgGkKmMPtTYZ                ; 0x15706 ; "EgGkKmMPtTYZ"
0x00004308      ba0a000000     mov edx, 0xa
0x0000430d      44894c2470     mov dword [rsp + 0x70], r9d
0x00004312      48897c2478     mov qword [rsp + 0x78], rdi
0x00004317      898424800000.  mov dword [rsp + 0x80], eax
0x0000431e      e8fde30000     call sym.xstrtoumax
0x00004323      85c0           test eax, eax
0x00004325      448b4c2470     mov r9d, dword [rsp + 0x70]
0x0000432a      0f8583060000   jne 0x49b3
0x00004330      488b8424a001.  mov rax, qword [rsp + 0x1a0]
0x00004338      0fbe40ff       movsx eax, byte [rax - 1]
0x0000433c      83e830         sub eax, 0x30
0x0000433f      83f809         cmp eax, 9
0x00004342      7727           ja 0x436b
0x00004344      488b84245001.  mov rax, qword [rsp + 0x150]
0x0000434c      48baffffffff.  movabs rdx, 0x3fffffffffffff            ; 18014398509481983
0x00004356      4839d0         cmp rax, rdx
0x00004359      0f875c120000   ja 0x55bb
0x0000435f      48c1e00a       shl rax, 0xa
0x00004363      488984245001.  mov qword [rsp + 0x150], rax
0x0000436b      488b94245001.  mov rdx, qword [rsp + 0x150]
0x00004373      483b15de6021.  cmp rdx, qword [obj.sort_size]          ; [0x21a458:8]=0
0x0000437a      0f82bef4ffff   jb 0x383e
0x00004380      8b059e5c2100   mov eax, dword [obj.nmerge]             ; [0x21a024:4]=16
0x00004386      486bc022       imul rax, rax, 0x22
0x0000438a      4839d0         cmp rax, rdx
0x0000438d      480f42c2       cmovb rax, rdx
0x00004391      488905c06021.  mov qword [obj.sort_size], rax          ; [0x21a458:8]=0
0x00004398      e9a1f4ffff     jmp 0x383e
0x0000439d      488b153c5e21.  mov rdx, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21a1e0:8]=0
0x000043a4      803a2b         cmp byte [rdx], 0x2b
0x000043a7      0f8448060000   je 0x49f5
0x000043ad      4b8914fe       mov qword [r14 + r15*8], rdx
0x000043b1      4983c701       add r15, 1
0x000043b5      e984f4ffff     jmp 0x383e
0x000043ba      4883ec08       sub rsp, 8
0x000043be      488b3d035e21.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a1c8:8]=0
0x000043c5      488b0d545d21.  mov rcx, qword [obj.Version]            ; [0x21a120:8]=0x159f8
0x000043cc      6a00           push 0
0x000043ce      4c8d0d741301.  lea r9, str.Paul_Eggert                 ; 0x15749 ; "Paul Eggert"
0x000043d5      4c8d05791301.  lea r8, str.Mike_Haertel                ; 0x15755 ; "Mike Haertel"
0x000043dc      488d15b51101.  lea rdx, str.GNU_coreutils              ; 0x15598 ; "GNU coreutils"
0x000043e3      488d35551201.  lea rsi, [0x0001563f]                   ; "sort"
0x000043ea      31c0           xor eax, eax
0x000043ec      e88fd80000     call sym.version_etc
0x000043f1      31ff           xor edi, edi
0x000043f3      e8e8ecffff     call sym.imp.exit
0x000043f8      488b7c2430     mov rdi, qword [rsp + 0x30]
0x000043fd      31c0           xor eax, eax
0x000043ff      b912000000     mov ecx, 0x12
0x00004404      488b742430     mov rsi, qword [rsp + 0x30]
0x00004409      488d153f1201.  lea rdx, str.invalid_number_at_field_start ; 0x1564f ; "invalid number at field start"
0x00004410      44894c2470     mov dword [rsp + 0x70], r9d
0x00004415      f3ab           rep stosd dword [rdi], eax
0x00004417      488b3dc25d21.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21a1e0:8]=0
0x0000441e      48c78424c000.  mov qword [rsp + 0xc0], 0xffffffffffffffff
0x0000442a      e8912b0000     call sym.parse_field_count
0x0000442f      488b9424b000.  mov rdx, qword [rsp + 0xb0]
0x00004437      448b4c2470     mov r9d, dword [rsp + 0x70]
0x0000443c      488d4aff       lea rcx, [rdx - 1]
0x00004440      4885d2         test rdx, rdx
0x00004443      48898c24b000.  mov qword [rsp + 0xb0], rcx
0x0000444b      0f84da180000   je 0x5d2b
0x00004451      80382e         cmp byte [rax], 0x2e
0x00004454      0f8453100000   je 0x54ad
0x0000445a      4883bc24b000.  cmp qword [rsp + 0xb0], 0
0x00004463      0f8403050000   je 0x496c
0x00004469      488b742430     mov rsi, qword [rsp + 0x30]
0x0000446e      31d2           xor edx, edx
0x00004470      4889c7         mov rdi, rax
0x00004473      44894c2470     mov dword [rsp + 0x70], r9d
0x00004478      e8031d0000     call sym.set_ordering
0x0000447d      80382c         cmp byte [rax], 0x2c
0x00004480      448b4c2470     mov r9d, dword [rsp + 0x70]
0x00004485      0f8475100000   je 0x5500
0x0000448b      48c78424c000.  mov qword [rsp + 0xc0], 0xffffffffffffffff
0x00004497      48c78424c800.  mov qword [rsp + 0xc8], 0
0x000044a3      803800         cmp byte [rax], 0
0x000044a6      0f856c180000   jne 0x5d18
0x000044ac      488b7c2430     mov rdi, qword [rsp + 0x30]
0x000044b1      be48000000     mov esi, 0x48                           ; 'H'
0x000044b6      44894c2470     mov dword [rsp + 0x70], r9d
0x000044bb      e820db0000     call sym.xmemdup
0x000044c0      488b15695f21.  mov rdx, qword [obj.keylist]            ; [0x21a430:8]=0
0x000044c7      448b4c2470     mov r9d, dword [rsp + 0x70]
0x000044cc      488d0d5d5f21.  lea rcx, obj.keylist                    ; 0x21a430
0x000044d3      4885d2         test rdx, rdx
0x000044d6      0f8493030000   je 0x486f
0x000044dc      488d4a40       lea rcx, [rdx + 0x40]
0x000044e0      488b5240       mov rdx, qword [rdx + 0x40]
0x000044e4      ebed           jmp 0x44d3
0x000044e6      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000044eb      488b15ee5c21.  mov rdx, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21a1e0:8]=0
0x000044f2      4885ff         test rdi, rdi
0x000044f5      7424           je 0x451b
0x000044f7      4889d6         mov rsi, rdx
0x000044fa      44894c2470     mov dword [rsp + 0x70], r9d
0x000044ff      4889542428     mov qword [rsp + 0x28], rdx
0x00004504      e837e9ffff     call sym.imp.strcmp
0x00004509      85c0           test eax, eax
0x0000450b      488b542428     mov rdx, qword [rsp + 0x28]
0x00004510      448b4c2470     mov r9d, dword [rsp + 0x70]
0x00004515      0f852e140000   jne 0x5949
0x0000451b      4889542428     mov qword [rsp + 0x28], rdx
0x00004520      e919f3ffff     jmp 0x383e
0x00004525      c644244801     mov byte [rsp + 0x48], 1
0x0000452a      e90ff3ffff     jmp 0x383e
0x0000452f      803d045f2100.  cmp byte [obj.stable], 0                ; [0x21a43a:1]=0
0x00004536      7511           jne 0x4549
0x00004538      803dfa5e2100.  cmp byte [obj.unique], 0                ; [0x21a439:1]=0
0x0000453f      7508           jne 0x4549
0x00004541      c68424870100.  mov byte [rsp + 0x187], 0
0x00004549      488d9c24b003.  lea rbx, [rsp + 0x3b0]
0x00004551      488b7c2408     mov rdi, qword [rsp + 8]
0x00004556      4889de         mov rsi, rbx
0x00004559      e8721b0000     call sym.key_to_opts
0x0000455e      31c0           xor eax, eax
0x00004560      4883c9ff       or rcx, 0xffffffffffffffff
0x00004564      4889df         mov rdi, rbx
0x00004567      f2ae           repne scasb al, byte [rdi]
0x00004569      488d15291201.  lea rdx, str.options____s__are_ignored  ; 0x15799 ; "options '-%s' are ignored"
0x00004570      488d353c1201.  lea rsi, str.option____s__is_ignored    ; 0x157b3 ; "option '-%s' is ignored"
0x00004577      31ff           xor edi, edi
0x00004579      4889c8         mov rax, rcx
0x0000457c      41b805000000   mov r8d, 5
0x00004582      48f7d0         not rax
0x00004585      488d48ff       lea rcx, [rax - 1]
0x00004589      e8b2eaffff     call sym.imp.dcngettext
0x0000458e      31f6           xor esi, esi
0x00004590      4889c2         mov rdx, rax
0x00004593      31ff           xor edi, edi
0x00004595      31c0           xor eax, eax
0x00004597      4889d9         mov rcx, rbx
0x0000459a      e841eaffff     call sym.imp.error
0x0000459f      4084ed         test bpl, bpl
0x000045a2      4088ac248701.  mov byte [rsp + 0x187], bpl
0x000045aa      743d           je 0x45e9
0x000045ac      803d875e2100.  cmp byte [obj.stable], 0                ; [0x21a43a:1]=0
0x000045b3      7534           jne 0x45e9
0x000045b5      803d7d5e2100.  cmp byte [obj.unique], 0                ; [0x21a439:1]=0
0x000045bc      752b           jne 0x45e9
0x000045be      48833d6a5e21.  cmp qword [obj.keylist], 0              ; [0x21a430:8]=0
0x000045c6      7421           je 0x45e9
0x000045c8      488d35890d01.  lea rsi, str.option___r__only_applies_to_last_resort_comparison ; 0x15358 ; "option '-r' only applies to last-resort comparison"
0x000045cf      ba05000000     mov edx, 5
0x000045d4      31ff           xor edi, edi
0x000045d6      e895e6ffff     call sym.imp.dcgettext
0x000045db      31f6           xor esi, esi
0x000045dd      4889c2         mov rdx, rax
0x000045e0      31ff           xor edi, edi
0x000045e2      31c0           xor eax, eax
0x000045e4      e8f7e9ffff     call sym.imp.error
0x000045e9      0fb684243701.  movzx eax, byte [rsp + 0x137]
0x000045f1      4584ed         test r13b, r13b
0x000045f4      8805415e2100   mov byte [obj.reverse], al              ; [0x21a43b:1]=0
0x000045fa      0f85cb020000   jne 0x48cb
0x00004600      48833d405e21.  cmp qword [obj.temp_dir_count], 0       ; [0x21a448:8]=0
0x00004608      0f849b020000   je 0x48a9
0x0000460e      4d85ff         test r15, r15
0x00004611      0f8468020000   je 0x487f
0x00004617      488b153a5e21.  mov rdx, qword [obj.sort_size]          ; [0x21a458:8]=0
0x0000461e      4885d2         test rdx, rdx
0x00004621      7418           je 0x463b
0x00004623      8b05fb592100   mov eax, dword [obj.nmerge]             ; [0x21a024:4]=16
0x00004629      486bc022       imul rax, rax, 0x22
0x0000462d      4839d0         cmp rax, rdx
0x00004630      480f42c2       cmovb rax, rdx
0x00004634      4889051d5e21.  mov qword [obj.sort_size], rax          ; [0x21a458:8]=0
0x0000463b      4584e4         test r12b, r12b
0x0000463e      0f841d050000   je 0x4b61
0x00004644      4983ff01       cmp r15, 1
0x00004648      0f8769160000   ja 0x5cb7
0x0000464e      48837c242800   cmp qword [rsp + 0x28], 0
0x00004654      0f8599160000   jne 0x5cf3
0x0000465a      4d8b2e         mov r13, qword [r14]
0x0000465d      488d352f1201.  lea rsi, [0x00015893]                   ; "r"
0x00004664      4c89ef         mov rdi, r13
0x00004667      e8442a0000     call sym.stream_open
0x0000466c      4885c0         test rax, rax
0x0000466f      4889442410     mov qword [rsp + 0x10], rax
0x00004674      0f8496160000   je 0x5d10
0x0000467a      0fb61db85d21.  movzx ebx, byte [obj.unique]            ; [0x21a439:1]=0
0x00004681      488b05a85d21.  mov rax, qword [obj.keylist]            ; [0x21a430:8]=0
0x00004688      be20000000     mov esi, 0x20                           ; "@"
0x0000468d      4889442420     mov qword [rsp + 0x20], rax
0x00004692      488b05975921.  mov rax, qword [obj.merge_buffer_size]  ; [0x21a030:8]=0x40000
0x00004699      83f301         xor ebx, 1
0x0000469c      483905b55d21.  cmp qword [obj.sort_size], rax          ; [0x21a458:8]=0
0x000046a3      480f4305ad5d.  cmovae rax, qword [obj.sort_size]
0x000046ab      0fb6db         movzx ebx, bl
0x000046ae      4531f6         xor r14d, r14d
0x000046b1      4889c2         mov rdx, rax
0x000046b4      488d84245001.  lea rax, [rsp + 0x150]
0x000046bc      4889c7         mov rdi, rax
0x000046bf      4889442408     mov qword [rsp + 8], rax
0x000046c4      e8d71d0000     call sym.initbuf
0x000046c9      488d84249000.  lea rax, [rsp + 0x90]
0x000046d1      48c784249000.  mov qword [rsp + 0x90], 0
0x000046dd      48c744241800.  mov qword [rsp + 0x18], 0
0x000046e6      4889442428     mov qword [rsp + 0x28], rax
0x000046eb      488b742410     mov rsi, qword [rsp + 0x10]
0x000046f0      488b7c2408     mov rdi, qword [rsp + 8]
0x000046f5      4c89ea         mov rdx, r13
0x000046f8      e813500000     call sym.fillbuf
0x000046fd      84c0           test al, al
0x000046ff      0f84220f0000   je 0x5627
0x00004705      488bbc246801.  mov rdi, qword [rsp + 0x168]
0x0000470d      4803bc245001.  add rdi, qword [rsp + 0x150]
0x00004715      488b84246001.  mov rax, qword [rsp + 0x160]
0x0000471d      4889fd         mov rbp, rdi
0x00004720      48c1e005       shl rax, 5
0x00004724      4c8d7fe0       lea r15, [rdi - 0x20]
0x00004728      4829c5         sub rbp, rax
0x0000472b      4d85f6         test r14, r14
0x0000472e      741c           je 0x474c
0x00004730      e9c1000000     jmp 0x47f6
0x00004735      0f1f00         nop dword [rax]
0x00004738      4983ef20       sub r15, 0x20                           ; "@"
0x0000473c      4c89fe         mov rsi, r15
0x0000473f      e89c3f0000     call sym.compare
0x00004744      39c3           cmp ebx, eax
0x00004746      0f8ebf000000   jle 0x480b
0x0000474c      4c39fd         cmp rbp, r15
0x0000474f      4c89ff         mov rdi, r15
0x00004752      72e4           jb 0x4738
0x00004754      498b5708       mov rdx, qword [r15 + 8]
0x00004758      488bbc246001.  mov rdi, qword [rsp + 0x160]
0x00004760      48017c2418     add qword [rsp + 0x18], rdi
0x00004765      4939d6         cmp r14, rdx
0x00004768      725e           jb 0x47c8
0x0000476a      498b37         mov rsi, qword [r15]
0x0000476d      488bbc249000.  mov rdi, qword [rsp + 0x90]
0x00004775      e806e7ffff     call sym.imp.memcpy
0x0000477a      48837c242000   cmp qword [rsp + 0x20], 0
0x00004780      498b4708       mov rax, qword [r15 + 8]
0x00004784      488984249800.  mov qword [rsp + 0x98], rax
0x0000478c      0f8459ffffff   je 0x46eb
0x00004792      498b5710       mov rdx, qword [r15 + 0x10]
0x00004796      488b84249000.  mov rax, qword [rsp + 0x90]
0x0000479e      498b0f         mov rcx, qword [r15]
0x000047a1      4801c2         add rdx, rax
0x000047a4      49034718       add rax, qword [r15 + 0x18]
0x000047a8      4829ca         sub rdx, rcx
0x000047ab      48899424a000.  mov qword [rsp + 0xa0], rdx
0x000047b3      4829c8         sub rax, rcx
0x000047b6      48898424a800.  mov qword [rsp + 0xa8], rax
0x000047be      e928ffffff     jmp 0x46eb
0x000047c3      4c39f2         cmp rdx, r14
0x000047c6      7608           jbe 0x47d0
0x000047c8      4d01f6         add r14, r14
0x000047cb      75f6           jne 0x47c3
0x000047cd      4989d6         mov r14, rdx
0x000047d0      488bbc249000.  mov rdi, qword [rsp + 0x90]
0x000047d8      e8e3e9ffff     call sym..plt.got
0x000047dd      4c89f7         mov rdi, r14
0x000047e0      e8fbd50000     call sym.xmalloc
0x000047e5      498b5708       mov rdx, qword [r15 + 8]
0x000047e9      488984249000.  mov qword [rsp + 0x90], rax
0x000047f1      e974ffffff     jmp 0x476a
0x000047f6      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000047fb      4c89fe         mov rsi, r15
0x000047fe      e8dd3e0000     call sym.compare
0x00004803      39c3           cmp ebx, eax
0x00004805      0f8f41ffffff   jg 0x474c
0x0000480b      31db           xor ebx, ebx
0x0000480d      4180fc63       cmp r12b, 0x63
0x00004811      0f849a0b0000   je 0x53b1
0x00004817      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000481c      4c89ee         mov rsi, r13
0x0000481f      e8cc290000     call sym.xfclose
0x00004824      488bbc245001.  mov rdi, qword [rsp + 0x150]
0x0000482c      e88fe9ffff     call sym..plt.got
0x00004831      488bbc249000.  mov rdi, qword [rsp + 0x90]
0x00004839      e882e9ffff     call sym..plt.got
0x0000483e      89d8           mov eax, ebx
0x00004840      83f001         xor eax, 1
0x00004843      0fb6c0         movzx eax, al
0x00004846      488b9c24e803.  mov rbx, qword [rsp + 0x3e8]
0x0000484e      6448331c2528.  xor rbx, qword fs:[0x28]
0x00004857      0f85e1140000   jne 0x5d3e
0x0000485d      4881c4f80300.  add rsp, 0x3f8
0x00004864      5b             pop rbx
0x00004865      5d             pop rbp
0x00004866      415c           pop r12
0x00004868      415d           pop r13
0x0000486a      415e           pop r14
0x0000486c      415f           pop r15
0x0000486e      c3             ret
0x0000486f      488901         mov qword [rcx], rax
0x00004872      48c740400000.  mov qword [rax + 0x40], 0
0x0000487a      e9bfefffff     jmp 0x383e
0x0000487f      4c89f7         mov rdi, r14
0x00004882      41bf01000000   mov r15d, 1
0x00004888      e833e9ffff     call sym..plt.got
0x0000488d      bf08000000     mov edi, 8
0x00004892      e849d50000     call sym.xmalloc
0x00004897      4989c6         mov r14, rax
0x0000489a      488d05991d01.  lea rax, [0x0001663a]                   ; "-"
0x000048a1      498906         mov qword [r14], rax
0x000048a4      e96efdffff     jmp 0x4617
0x000048a9      488d3d1b0f01.  lea rdi, str.TMPDIR                     ; 0x157cb ; "TMPDIR"
0x000048b0      e80be2ffff     call sym.imp.getenv
0x000048b5      4885c0         test rax, rax
0x000048b8      0f8408020000   je 0x4ac6
0x000048be      4889c7         mov rdi, rax
0x000048c1      e82a1b0000     call sym.add_temp_dir
0x000048c6      e943fdffff     jmp 0x460e
0x000048cb      488b7c2440     mov rdi, qword [rsp + 0x40]
0x000048d0      be10000000     mov esi, 0x10
0x000048d5      e836bb0000     call sym.randread_new
0x000048da      4885c0         test rax, rax
0x000048dd      4889c5         mov rbp, rax
0x000048e0      ba05000000     mov edx, 5
0x000048e5      488d35b30b01.  lea rsi, str.open_failed                ; 0x1549f ; "open failed"
0x000048ec      0f8423120000   je 0x5b15
0x000048f2      488d9c24b003.  lea rbx, [rsp + 0x3b0]
0x000048fa      4889c7         mov rdi, rax
0x000048fd      ba10000000     mov edx, 0x10
0x00004902      4889de         mov rsi, rbx
0x00004905      e856be0000     call sym.randread
0x0000490a      4889ef         mov rdi, rbp
0x0000490d      e8eebf0000     call sym.randread_free
0x00004912      85c0           test eax, eax
0x00004914      0f85ef110000   jne 0x5b09
0x0000491a      488d3dbf5921.  lea rdi, obj.random_md5_state           ; 0x21a2e0
0x00004921      e8ea690000     call sym.md5_init_ctx
0x00004926      488d15b35921.  lea rdx, obj.random_md5_state           ; 0x21a2e0
0x0000492d      be10000000     mov esi, 0x10
0x00004932      4889df         mov rdi, rbx
0x00004935      e8b6720000     call sym.md5_process_bytes
0x0000493a      e9c1fcffff     jmp 0x4600
0x0000493f      488d353e0e01.  lea rsi, str.failed_to_set_locale       ; 0x15784 ; "failed to set locale"
0x00004946      31ff           xor edi, edi
0x00004948      ba05000000     mov edx, 5
0x0000494d      e81ee3ffff     call sym.imp.dcgettext
0x00004952      488d15fb1001.  lea rdx, [0x00015a54]                   ; "%s"
0x00004959      4889c1         mov rcx, rax
0x0000495c      31f6           xor esi, esi
0x0000495e      31ff           xor edi, edi
0x00004960      31c0           xor eax, eax
0x00004962      e879e6ffff     call sym.imp.error
0x00004967      e97cf2ffff     jmp 0x3be8
0x0000496c      4883bc24b800.  cmp qword [rsp + 0xb8], 0
0x00004975      0f85eefaffff   jne 0x4469
0x0000497b      48c78424b000.  mov qword [rsp + 0xb0], 0xffffffffffffffff
0x00004987      e9ddfaffff     jmp 0x4469
0x0000498c      8b442478       mov eax, dword [rsp + 0x78]
0x00004990      83f801         cmp eax, 1
0x00004993      0f8476f7ffff   je 0x410f
0x00004999      8b742470       mov esi, dword [rsp + 0x70]
0x0000499d      488d0d3c4c21.  lea rcx, obj.long_options               ; 0x2195e0 ; "WX\x01"
0x000049a4      4d89d8         mov r8, r11
0x000049a7      ba84ffffff     mov edx, 0xffffff84                     ; 4294967172
0x000049ac      89c7           mov edi, eax
0x000049ae      e8bddc0000     call sym.xstrtol_fatal
0x000049b3      83f802         cmp eax, 2
0x000049b6      751e           jne 0x49d6
0x000049b8      488b9424a001.  mov rdx, qword [rsp + 0x1a0]
0x000049c0      0fbe4aff       movsx ecx, byte [rdx - 1]
0x000049c4      83e930         sub ecx, 0x30
0x000049c7      83f909         cmp ecx, 9
0x000049ca      770a           ja 0x49d6
0x000049cc      807a0100       cmp byte [rdx + 1], 0
0x000049d0      0f84b90d0000   je 0x578f
0x000049d6      4c8b442478     mov r8, qword [rsp + 0x78]
0x000049db      8bb424800000.  mov esi, dword [rsp + 0x80]
0x000049e2      488d0df74b21.  lea rcx, obj.long_options               ; 0x2195e0 ; "WX\x01"
0x000049e9      ba53000000     mov edx, 0x53                           ; 'S'
0x000049ee      89c7           mov edi, eax
0x000049f0      e87bdc0000     call sym.xstrtol_fatal
0x000049f5      486305dc5721.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x21a1d8:4]=0
0x000049fc      39d8           cmp eax, ebx
0x000049fe      0f84370c0000   je 0x563b
0x00004a04      488b44c500     mov rax, qword [rbp + rax*8]
0x00004a09      c74424700000.  mov dword [rsp + 0x70], 0
0x00004a11      80382d         cmp byte [rax], 0x2d
0x00004a14      0f84ab0b0000   je 0x55c5
0x00004a1a      48837c246800   cmp qword [rsp + 0x68], 0
0x00004a20      0f94c0         sete al
0x00004a23      23442470       and eax, dword [rsp + 0x70]
0x00004a27      08442410       or byte [rsp + 0x10], al
0x00004a2b      0f847cf9ffff   je 0x43ad
0x00004a31      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00004a36      31c0           xor eax, eax
0x00004a38      b912000000     mov ecx, 0x12
0x00004a3d      488b742430     mov rsi, qword [rsp + 0x30]
0x00004a42      44898c248000.  mov dword [rsp + 0x80], r9d
0x00004a4a      f3ab           rep stosd dword [rdi], eax
0x00004a4c      488d7a01       lea rdi, [rdx + 1]
0x00004a50      4883c9ff       or rcx, 0xffffffffffffffff
0x00004a54      31d2           xor edx, edx
0x00004a56      48898c24c000.  mov qword [rsp + 0xc0], rcx
0x00004a5e      48894c2478     mov qword [rsp + 0x78], rcx
0x00004a63      e858250000     call sym.parse_field_count
0x00004a68      4885c0         test rax, rax
0x00004a6b      488b4c2478     mov rcx, qword [rsp + 0x78]
0x00004a70      448b8c248000.  mov r9d, dword [rsp + 0x80]
0x00004a78      0f84270d0000   je 0x57a5
0x00004a7e      80382e         cmp byte [rax], 0x2e
0x00004a81      0f84f20d0000   je 0x5879
0x00004a87      4883bc24b000.  cmp qword [rsp + 0xb0], 0
0x00004a90      0f85d70b0000   jne 0x566d
0x00004a96      4883bc24b800.  cmp qword [rsp + 0xb8], 0
0x00004a9f      0f85c80b0000   jne 0x566d
0x00004aa5      48c78424b000.  mov qword [rsp + 0xb0], 0xffffffffffffffff
0x00004ab1      4885c0         test rax, rax
0x00004ab4      0f85b30b0000   jne 0x566d
0x00004aba      488b151f5721.  mov rdx, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21a1e0:8]=0
0x00004ac1      e9e7f8ffff     jmp 0x43ad
0x00004ac6      488d05500a01.  lea rax, str.tmp                        ; 0x1551d ; "/tmp"
0x00004acd      e9ecfdffff     jmp 0x48be
0x00004ad2      660f1f440000   nop word [rax + rax]
0x00004ad8      4584e4         test r12b, r12b
0x00004adb      0f850ff2ffff   jne 0x3cf0
0x00004ae1      e9d2f1ffff     jmp 0x3cb8
0x00004ae6      48c784247801.  mov qword [rsp + 0x178], 0
0x00004af2      e927f2ffff     jmp 0x3d1e
0x00004af7      48c784247001.  mov qword [rsp + 0x170], 0
0x00004b03      e9fff1ffff     jmp 0x3d07
0x00004b08      440fb66c2450   movzx r13d, byte [rsp + 0x50]
0x00004b0e      440fb6642460   movzx r12d, byte [rsp + 0x60]
0x00004b14      4c8b7c2468     mov r15, qword [rsp + 0x68]
0x00004b19      4c8b742470     mov r14, qword [rsp + 0x70]
0x00004b1e      488b7c2408     mov rdi, qword [rsp + 8]
0x00004b23      e848150000     call sym.default_key_compare
0x00004b28      84c0           test al, al
0x00004b2a      0fb6ac248701.  movzx ebp, byte [rsp + 0x187]
0x00004b32      0f84f7f9ffff   je 0x452f
0x00004b38      4084ed         test bpl, bpl
0x00004b3b      0f84a8faffff   je 0x45e9
0x00004b41      803df2582100.  cmp byte [obj.stable], 0                ; [0x21a43a:1]=0
0x00004b48      0f845b0a0000   je 0x55a9
0x00004b4e      48833dda5821.  cmp qword [obj.keylist], 0              ; [0x21a430:8]=0
0x00004b56      0f85edf9ffff   jne 0x4549
0x00004b5c      e94bfaffff     jmp 0x45ac
0x00004b61      488d1dd21a01.  lea rbx, [0x0001663a]                   ; "-"
0x00004b68      4c89f5         mov rbp, r14
0x00004b6b      4531e4         xor r12d, r12d
0x00004b6e      6690           nop
0x00004b70      488b5500       mov rdx, qword [rbp]
0x00004b74      b902000000     mov ecx, 2
0x00004b79      4889df         mov rdi, rbx
0x00004b7c      4889d6         mov rsi, rdx
0x00004b7f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004b81      0f97c0         seta al
0x00004b84      1c00           sbb al, 0
0x00004b86      84c0           test al, al
0x00004b88      7415           je 0x4b9f
0x00004b8a      be04000000     mov esi, 4
0x00004b8f      4889d7         mov rdi, rdx
0x00004b92      e8d9e4ffff     call sym.imp.euidaccess
0x00004b97      85c0           test eax, eax
0x00004b99      0f851b0d0000   jne 0x58ba
0x00004b9f      4983c401       add r12, 1
0x00004ba3      4883c508       add rbp, 8
0x00004ba7      4d39e7         cmp r15, r12
0x00004baa      75c4           jne 0x4b70
0x00004bac      488b442428     mov rax, qword [rsp + 0x28]
0x00004bb1      4885c0         test rax, rax
0x00004bb4      742d           je 0x4be3
0x00004bb6      4889c7         mov rdi, rax
0x00004bb9      bab6010000     mov edx, 0x1b6
0x00004bbe      31c0           xor eax, eax
0x00004bc0      be41000800     mov esi, 0x80041                        ; 'A'
0x00004bc5      e846e4ffff     call sym.imp.open
0x00004bca      85c0           test eax, eax
0x00004bcc      0f8877100000   js 0x5c49
0x00004bd2      83f801         cmp eax, 1
0x00004bd5      740c           je 0x4be3
0x00004bd7      be01000000     mov esi, 1
0x00004bdc      89c7           mov edi, eax
0x00004bde      e87d3e0000     call sym.move_fd.part.11
0x00004be3      807c244800     cmp byte [rsp + 0x48], 0
0x00004be8      0f8585070000   jne 0x5373
0x00004bee      48837c245800   cmp qword [rsp + 0x58], 0
0x00004bf4      0f840c0a0000   je 0x5606
0x00004bfa      488b5c2458     mov rbx, qword [rsp + 0x58]
0x00004bff      48b8ffffffff.  movabs rax, 0xffffffffffffff            ; 72057594037927935
0x00004c09      4c89742468     mov qword [rsp + 0x68], r14
0x00004c0e      4c8b742420     mov r14, qword [rsp + 0x20]
0x00004c13      48c784246801.  mov qword [rsp + 0x168], 0
0x00004c1f      4c897c2438     mov qword [rsp + 0x38], r15
0x00004c24      4839c3         cmp rbx, rax
0x00004c27      480f46c3       cmovbe rax, rbx
0x00004c2b      4531ed         xor r13d, r13d
0x00004c2e      4889c3         mov rbx, rax
0x00004c31      4889442440     mov qword [rsp + 0x40], rax
0x00004c36      4801c3         add rbx, rax
0x00004c39      48c1e008       shl rax, 8
0x00004c3d      48895c2450     mov qword [rsp + 0x50], rbx
0x00004c42      4889442448     mov qword [rsp + 0x48], rax
0x00004c47      488b442468     mov rax, qword [rsp + 0x68]
0x00004c4c      488d35400c01.  lea rsi, [0x00015893]                   ; "r"
0x00004c53      488b00         mov rax, qword [rax]
0x00004c56      4889c7         mov rdi, rax
0x00004c59      4889442410     mov qword [rsp + 0x10], rax
0x00004c5e      e84d240000     call sym.stream_open
0x00004c63      4885c0         test rax, rax
0x00004c66      4889442408     mov qword [rsp + 8], rax
0x00004c6b      0f84860c0000   je 0x58f7
0x00004c71      48837c245801   cmp qword [rsp + 0x58], 1
0x00004c77      48c744246030.  mov qword [rsp + 0x60], 0x30            ; '0'
                                                                       ; [0x30:8]=0x38004000000000
0x00004c80      7624           jbe 0x4ca6
0x00004c82      488b4c2440     mov rcx, qword [rsp + 0x40]
0x00004c87      ba01000000     mov edx, 1
0x00004c8c      b801000000     mov eax, 1
0x00004c91      4801c0         add rax, rax
0x00004c94      4883c201       add rdx, 1
0x00004c98      4839c1         cmp rcx, rax
0x00004c9b      77f4           ja 0x4c91
0x00004c9d      48c1e205       shl rdx, 5
0x00004ca1      4889542460     mov qword [rsp + 0x60], rdx
0x00004ca6      488bac246801.  mov rbp, qword [rsp + 0x168]
0x00004cae      488d84245001.  lea rax, [rsp + 0x150]
0x00004cb6      4889442420     mov qword [rsp + 0x20], rax
0x00004cbb      4885ed         test rbp, rbp
0x00004cbe      0f8480030000   je 0x5044
0x00004cc4      488d84249000.  lea rax, [rsp + 0x90]
0x00004ccc      c68424800100.  mov byte [rsp + 0x180], 0
0x00004cd4      48836c243801   sub qword [rsp + 0x38], 1
0x00004cda      4889442430     mov qword [rsp + 0x30], rax
0x00004cdf      e90a010000     jmp 0x4dee
0x00004ce4      0f1f4000       nop dword [rax]
0x00004ce8      488b742450     mov rsi, qword [rsp + 0x50]
0x00004ced      488d3d8c1e00.  lea rdi, sym.compare_nodes              ; 0x6b80
0x00004cf4      e8378c0000     call sym.heap_alloc
0x00004cf9      498d7e08       lea rdi, [r14 + 8]
0x00004cfd      31f6           xor esi, esi
0x00004cff      48898424c002.  mov qword [rsp + 0x2c0], rax
0x00004d07      e864e4ffff     call sym.imp.pthread_mutex_init
0x00004d0c      498d7e30       lea rdi, [r14 + 0x30]
0x00004d10      31f6           xor esi, esi
0x00004d12      e8b9e1ffff     call sym.imp.pthread_cond_init
0x00004d17      488b7c2448     mov rdi, qword [rsp + 0x48]
0x00004d1c      4c8bbc246001.  mov r15, qword [rsp + 0x160]
0x00004d24      e8b7d00000     call sym.xmalloc
0x00004d29      488d7858       lea rdi, [rax + 0x58]
0x00004d2d      4c897830       mov qword [rax + 0x30], r15
0x00004d31      4c897828       mov qword [rax + 0x28], r15
0x00004d35      31f6           xor esi, esi
0x00004d37      48c740180000.  mov qword [rax + 0x18], 0
0x00004d3f      48c740100000.  mov qword [rax + 0x10], 0
0x00004d47      48c740080000.  mov qword [rax + 8], 0
0x00004d4f      48c700000000.  mov qword [rax], 0
0x00004d56      48c740200000.  mov qword [rax + 0x20], 0
0x00004d5e      48c740380000.  mov qword [rax + 0x38], 0
0x00004d66      c74050000000.  mov dword [rax + 0x50], 0
0x00004d6d      c6405400       mov byte [rax + 0x54], 0
0x00004d71      4889442418     mov qword [rsp + 0x18], rax
0x00004d76      e8f5e3ffff     call sym.imp.pthread_mutex_init
0x00004d7b      4c8b542418     mov r10, qword [rsp + 0x18]
0x00004d80      4d89f8         mov r8, r15
0x00004d83      4c8b7c2440     mov r15, qword [rsp + 0x40]
0x00004d88      4531c9         xor r9d, r9d
0x00004d8b      4889da         mov rdx, rbx
0x00004d8e      4d8d9a800000.  lea r11, [r10 + 0x80]
0x00004d95      4c89d7         mov rdi, r10
0x00004d98      4c89f9         mov rcx, r15
0x00004d9b      4c89de         mov rsi, r11
0x00004d9e      4c895c2418     mov qword [rsp + 0x18], r11
0x00004da3      e8581a0000     call sym.init_node
0x00004da8      4883ec08       sub rsp, 8
0x00004dac      4d89f0         mov r8, r14
0x00004daf      4c89fe         mov rsi, r15
0x00004db2      55             push rbp
0x00004db3      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x00004db8      4889df         mov rdi, rbx
0x00004dbb      4c8b8c24a000.  mov r9, qword [rsp + 0xa0]
0x00004dc3      488b94247001.  mov rdx, qword [rsp + 0x170]
0x00004dcb      4c89d9         mov rcx, r11
0x00004dce      e81d420000     call sym.sortlines
0x00004dd3      5a             pop rdx
0x00004dd4      59             pop rcx
0x00004dd5      488bbc249000.  mov rdi, qword [rsp + 0x90]
0x00004ddd      4889ee         mov rsi, rbp
0x00004de0      e80b240000     call sym.xfclose
0x00004de5      4584e4         test r12b, r12b
0x00004de8      0f85c3010000   jne 0x4fb1
0x00004dee      488b542410     mov rdx, qword [rsp + 0x10]
0x00004df3      488b742408     mov rsi, qword [rsp + 8]
0x00004df8      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00004dfd      e80e490000     call sym.fillbuf
0x00004e02      84c0           test al, al
0x00004e04      0f8481010000   je 0x4f8b
0x00004e0a      440fb6a42480.  movzx r12d, byte [rsp + 0x180]
0x00004e13      488b9c246801.  mov rbx, qword [rsp + 0x168]
0x00004e1b      4584e4         test r12b, r12b
0x00004e1e      7434           je 0x4e54
0x00004e20      48837c243800   cmp qword [rsp + 0x38], 0
0x00004e26      747e           je 0x4ea6
0x00004e28      488b7c2460     mov rdi, qword [rsp + 0x60]
0x00004e2d      488b94245801.  mov rdx, qword [rsp + 0x158]
0x00004e35      4889d8         mov rax, rbx
0x00004e38      488d4f01       lea rcx, [rdi + 1]
0x00004e3c      4829d0         sub rax, rdx
0x00004e3f      480fafbc2460.  imul rdi, qword [rsp + 0x160]
0x00004e48      4829f8         sub rax, rdi
0x00004e4b      4839c1         cmp rcx, rax
0x00004e4e      0f82f4070000   jb 0x5648
0x00004e54      48039c245001.  add rbx, qword [rsp + 0x150]
0x00004e5c      48c705f95921.  mov qword [obj.saved_line], 0           ; [0x21a860:8]=0
0x00004e67      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00004e6c      31f6           xor esi, esi
0x00004e6e      4983c501       add r13, 1
0x00004e72      4531e4         xor r12d, r12d
0x00004e75      e8863e0000     call sym.maybe_create_temp
0x00004e7a      488d680d       lea rbp, [rax + 0xd]
0x00004e7e      4883bc246001.  cmp qword [rsp + 0x160], 1
0x00004e87      0f875bfeffff   ja 0x4ce8
0x00004e8d      488bb4249000.  mov rsi, qword [rsp + 0x90]
0x00004e95      488d7be0       lea rdi, [rbx - 0x20]
0x00004e99      4889ea         mov rdx, rbp
0x00004e9c      e84f3b0000     call sym.write_unique
0x00004ea1      e92fffffff     jmp 0x4dd5
0x00004ea6      48039c245001.  add rbx, qword [rsp + 0x150]
0x00004eae      4d85ed         test r13, r13
0x00004eb1      48c705a45921.  mov qword [obj.saved_line], 0           ; [0x21a860:8]=0
0x00004ebc      75a9           jne 0x4e67
0x00004ebe      4883bc247001.  cmp qword [rsp + 0x170], 0
0x00004ec7      759e           jne 0x4e67
0x00004ec9      488b742410     mov rsi, qword [rsp + 0x10]
0x00004ece      488b7c2408     mov rdi, qword [rsp + 8]
0x00004ed3      e818230000     call sym.xfclose
0x00004ed8      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00004edd      488d35060601.  lea rsi, [0x000154ea]                   ; "w"
0x00004ee4      e8c7210000     call sym.stream_open
0x00004ee9      4885c0         test rax, rax
0x00004eec      0f84fb090000   je 0x58ed
0x00004ef2      488984249000.  mov qword [rsp + 0x90], rax
0x00004efa      488b6c2428     mov rbp, qword [rsp + 0x28]
0x00004eff      4c8b6c2438     mov r13, qword [rsp + 0x38]
0x00004f04      e975ffffff     jmp 0x4e7e
0x00004f09      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00004f0e      e85d110000     call sym.default_key_compare
0x00004f13      84c0           test al, al
0x00004f15      0f8438050000   je 0x5453
0x00004f1b      803dfe542100.  cmp byte [obj.debug], 0                 ; [0x21a420:1]=0
0x00004f22      0f8418050000   je 0x5440
0x00004f28      c644241000     mov byte [rsp + 0x10], 0
0x00004f2d      4531ed         xor r13d, r13d
0x00004f30      e976ecffff     jmp 0x3bab
0x00004f35      488d353c0301.  lea rsi, str.text_ordering_performed_using_simple_byte_comparison ; 0x15278 ; "text ordering performed using simple byte comparison"
0x00004f3c      31ff           xor edi, edi
0x00004f3e      ba05000000     mov edx, 5
0x00004f43      e828ddffff     call sym.imp.dcgettext
0x00004f48      488d15050b01.  lea rdx, [0x00015a54]                   ; "%s"
0x00004f4f      4889c1         mov rcx, rax
0x00004f52      31f6           xor esi, esi
0x00004f54      31ff           xor edi, edi
0x00004f56      31c0           xor eax, eax
0x00004f58      e883e0ffff     call sym.imp.error
0x00004f5d      e9ceecffff     jmp 0x3c30
0x00004f62      488d35bf0301.  lea rsi, str.key__lu_is_numeric_and_spans_multiple_fields ; 0x15328 ; "key %lu is numeric and spans multiple fields"
0x00004f69      31ff           xor edi, edi
0x00004f6b      ba05000000     mov edx, 5
0x00004f70      e8fbdcffff     call sym.imp.dcgettext
0x00004f75      4889d9         mov rcx, rbx
0x00004f78      4889c2         mov rdx, rax
0x00004f7b      31f6           xor esi, esi
0x00004f7d      31ff           xor edi, edi
0x00004f7f      31c0           xor eax, eax
0x00004f81      e85ae0ffff     call sym.imp.error
0x00004f86      e965edffff     jmp 0x3cf0
0x00004f8b      488b742410     mov rsi, qword [rsp + 0x10]
0x00004f90      488b7c2408     mov rdi, qword [rsp + 8]
0x00004f95      e856220000     call sym.xfclose
0x00004f9a      48837c243800   cmp qword [rsp + 0x38], 0
0x00004fa0      0f8448030000   je 0x52ee
0x00004fa6      488344246808   add qword [rsp + 0x68], 8
0x00004fac      e996fcffff     jmp 0x4c47
0x00004fb1      488bbc245001.  mov rdi, qword [rsp + 0x150]
0x00004fb9      e802e2ffff     call sym..plt.got
0x00004fbe      83cbff         or ebx, 0xffffffff                      ; -1
0x00004fc1      833db4532100.  cmp dword [obj.nprocs], 0               ; [0x21a37c:4]=0
0x00004fc8      7e11           jle 0x4fdb
0x00004fca      89df           mov edi, ebx
0x00004fcc      e84f160000     call sym.reap
0x00004fd1      8b05a5532100   mov eax, dword [obj.nprocs]             ; [0x21a37c:4]=0
0x00004fd7      85c0           test eax, eax
0x00004fd9      7fef           jg 0x4fca
0x00004fdb      803d56542100.  cmp byte [obj.have_read_stdin], 0       ; [0x21a438:1]=0
0x00004fe2      7507           jne 0x4feb
0x00004fe4      31c0           xor eax, eax
0x00004fe6      e95bf8ffff     jmp 0x4846
0x00004feb      488b3dde5121.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x21a1d0:8]=0
0x00004ff2      e849db0000     call sym.rpl_fclose
0x00004ff7      83c001         add eax, 1
0x00004ffa      75e8           jne 0x4fe4
0x00004ffc      488d35b60401.  lea rsi, str.close_failed               ; 0x154b9 ; "close failed"
0x00005003      31ff           xor edi, edi
0x00005005      ba05000000     mov edx, 5
0x0000500a      e861dcffff     call sym.imp.dcgettext
0x0000500f      488d35241601.  lea rsi, [0x0001663a]                   ; "-"
0x00005016      4889c7         mov rdi, rax
0x00005019      e802130000     call sym.sort_die
0x0000501e      49837e0800     cmp qword [r14 + 8], 0
0x00005023      0f8537efffff   jne 0x3f60
0x00005029      41807e3100     cmp byte [r14 + 0x31], 0
0x0000502e      0f8584ecffff   jne 0x3cb8
0x00005034      49837e1800     cmp qword [r14 + 0x18], 0
0x00005039      0f8479ecffff   je 0x3cb8
0x0000503f      e91cefffff     jmp 0x3f60
0x00005044      488b442460     mov rax, qword [rsp + 0x60]
0x00005049      4c896c2418     mov qword [rsp + 0x18], r13
0x0000504e      4989ed         mov r13, rbp
0x00005051      488d5801       lea rbx, [rax + 1]
0x00005055      4c8d6002       lea r12, [rax + 2]
0x00005059      e997000000     jmp 0x50f5
0x0000505e      31f6           xor esi, esi
0x00005060      bf01000000     mov edi, 1
0x00005065      e8b6deffff     call sym.imp.__fxstat
0x0000506a      85c0           test eax, eax
0x0000506c      0f95c0         setne al
0x0000506f      84c0           test al, al
0x00005071      0f85b80b0000   jne 0x5c2f
0x00005077      8b8424d80200.  mov eax, dword [rsp + 0x2d8]
0x0000507e      2500f00000     and eax, 0xf000
0x00005083      3d00800000     cmp eax, 0x8000
0x00005088      0f84aa000000   je 0x5138
0x0000508e      488b35c35321.  mov rsi, qword [obj.sort_size]          ; [0x21a458:8]=0
0x00005095      4885f6         test rsi, rsi
0x00005098      0f8526020000   jne 0x52c4
0x0000509e      48833d7a5121.  cmp qword [obj.size_bound.8633], 0      ; [0x21a220:8]=0
0x000050a6      bd00000200     mov ebp, 0x20000
0x000050ab      0f84b4000000   je 0x5165
0x000050b1      4889d9         mov rcx, rbx
0x000050b4      31d2           xor edx, edx
0x000050b6      488b35635121.  mov rsi, qword [obj.size_bound.8633]    ; [0x21a220:8]=0
0x000050bd      480fafcd       imul rcx, rbp
0x000050c1      4883c101       add rcx, 1
0x000050c5      4889c8         mov rax, rcx
0x000050c8      48f7f3         div rbx
0x000050cb      4839c5         cmp rbp, rax
0x000050ce      0f85f0010000   jne 0x52c4
0x000050d4      4889f0         mov rax, rsi
0x000050d7      4c29e0         sub rax, r12
0x000050da      4839c1         cmp rcx, rax
0x000050dd      0f83e1010000   jae 0x52c4
0x000050e3      4901cc         add r12, rcx
0x000050e6      4983c501       add r13, 1
0x000050ea      4c3b6c2438     cmp r13, qword [rsp + 0x38]
0x000050ef      0f833c050000   jae 0x5631
0x000050f5      4d85ed         test r13, r13
0x000050f8      0f84a3010000   je 0x52a1
0x000050fe      488b442468     mov rax, qword [rsp + 0x68]
0x00005103      488d35301501.  lea rsi, [0x0001663a]                   ; "-"
0x0000510a      4a8b2ce8       mov rbp, qword [rax + r13*8]
0x0000510e      4889ef         mov rdi, rbp
0x00005111      e82addffff     call sym.imp.strcmp
0x00005116      85c0           test eax, eax
0x00005118      4c89f2         mov rdx, r14
0x0000511b      0f843dffffff   je 0x505e
0x00005121      4889ee         mov rsi, rbp
0x00005124      bf01000000     mov edi, 1
0x00005129      e892ddffff     call sym.imp.__xstat
0x0000512e      85c0           test eax, eax
0x00005130      0f95c0         setne al
0x00005133      e937ffffff     jmp 0x506f
0x00005138      48833de05021.  cmp qword [obj.size_bound.8633], 0      ; [0x21a220:8]=0
0x00005140      488bac24f002.  mov rbp, qword [rsp + 0x2f0]
0x00005148      0f8563ffffff   jne 0x50b1
0x0000514e      488b05035321.  mov rax, qword [obj.sort_size]          ; [0x21a458:8]=0
0x00005155      4885c0         test rax, rax
0x00005158      488905c15021.  mov qword [obj.size_bound.8633], rax    ; [0x21a220:8]=0
0x0000515f      0f854cffffff   jne 0x50b1
0x00005165      488db4249000.  lea rsi, [rsp + 0x90]
0x0000516d      bf02000000     mov edi, 2
0x00005172      4983cfff       or r15, 0xffffffffffffffff
0x00005176      4889742420     mov qword [rsp + 0x20], rsi
0x0000517b      e890dfffff     call sym.imp.getrlimit
0x00005180      85c0           test eax, eax
0x00005182      7508           jne 0x518c
0x00005184      4c8bbc249000.  mov r15, qword [rsp + 0x90]
0x0000518c      488b742420     mov rsi, qword [rsp + 0x20]
0x00005191      bf09000000     mov edi, 9
0x00005196      e875dfffff     call sym.imp.getrlimit
0x0000519b      85c0           test eax, eax
0x0000519d      750f           jne 0x51ae
0x0000519f      488b84249000.  mov rax, qword [rsp + 0x90]
0x000051a7      4939c7         cmp r15, rax
0x000051aa      4c0f47f8       cmova r15, rax
0x000051ae      488b742420     mov rsi, qword [rsp + 0x20]
0x000051b3      bf05000000     mov edi, 5
0x000051b8      49d1ef         shr r15, 1
0x000051bb      e850dfffff     call sym.imp.getrlimit
0x000051c0      85c0           test eax, eax
0x000051c2      7517           jne 0x51db
0x000051c4      488b84249000.  mov rax, qword [rsp + 0x90]
0x000051cc      48c1e804       shr rax, 4
0x000051d0      486bc00f       imul rax, rax, 0xf
0x000051d4      4939c7         cmp r15, rax
0x000051d7      4c0f47f8       cmova r15, rax
0x000051db      e8f0900000     call sym.physmem_available
0x000051e0      f20f11442420   movsd qword [rsp + 0x20], xmm0
0x000051e6      e805900000     call sym.physmem_total
0x000051eb      f20f100df507.  movsd xmm1, qword [0x000159e8]          ; [0x159e8:8]=0x3fc0000000000000
0x000051f3      f20f10542420   movsd xmm2, qword [rsp + 0x20]
0x000051f9      f20f59c8       mulsd xmm1, xmm0
0x000051fd      f20f5905eb07.  mulsd xmm0, qword [0x000159f0]
0x00005205      f20f5fd1       maxsd xmm2, xmm1
0x00005209      660f28ca       movapd xmm1, xmm2
0x0000520d      660fefd2       pxor xmm2, xmm2
0x00005211      f2490f2ad7     cvtsi2sd xmm2, r15
0x00005216      660f2ed0       ucomisd xmm2, xmm0
0x0000521a      7628           jbe 0x5244
0x0000521c      f20f1015bc07.  movsd xmm2, qword [0x000159e0]          ; [0x159e0:8]=0x43e0000000000000
0x00005224      660f2ec2       ucomisd xmm0, xmm2
0x00005228      0f8271030000   jb 0x559f
0x0000522e      f20f5cc2       subsd xmm0, xmm2
0x00005232      48b800000000.  movabs rax, 0x8000000000000000
0x0000523c      f24c0f2cf8     cvttsd2si r15, xmm0
0x00005241      4931c7         xor r15, rax
0x00005244      4d85ff         test r15, r15
0x00005247      0f8827030000   js 0x5574
0x0000524d      660fefc0       pxor xmm0, xmm0
0x00005251      f2490f2ac7     cvtsi2sd xmm0, r15
0x00005256      660f2ec1       ucomisd xmm0, xmm1
0x0000525a      7628           jbe 0x5284
0x0000525c      660f2e0d7c07.  ucomisd xmm1, qword [0x000159e0]
0x00005264      0f822b030000   jb 0x5595
0x0000526a      f20f5c0d6e07.  subsd xmm1, qword [0x000159e0]
0x00005272      48b800000000.  movabs rax, 0x8000000000000000
0x0000527c      f24c0f2cf9     cvttsd2si r15, xmm1
0x00005281      4931c7         xor r15, rax
0x00005284      8b059a4d2100   mov eax, dword [obj.nmerge]             ; [0x21a024:4]=16
0x0000528a      486bc022       imul rax, rax, 0x22
0x0000528e      4c39f8         cmp rax, r15
0x00005291      490f42c7       cmovb rax, r15
0x00005295      488905844f21.  mov qword [obj.size_bound.8633], rax    ; [0x21a220:8]=0
0x0000529c      e910feffff     jmp 0x50b1
0x000052a1      488b7c2408     mov rdi, qword [rsp + 8]
0x000052a6      e8e5dbffff     call sym.imp.fileno
0x000052ab      4c89f2         mov rdx, r14
0x000052ae      89c6           mov esi, eax
0x000052b0      bf01000000     mov edi, 1
0x000052b5      e866dcffff     call sym.imp.__fxstat
0x000052ba      85c0           test eax, eax
0x000052bc      0f95c0         setne al
0x000052bf      e9abfdffff     jmp 0x506f
0x000052c4      4c8b6c2418     mov r13, qword [rsp + 0x18]
0x000052c9      4989f4         mov r12, rsi
0x000052cc      488d84245001.  lea rax, [rsp + 0x150]
0x000052d4      488b742460     mov rsi, qword [rsp + 0x60]
0x000052d9      4c89e2         mov rdx, r12
0x000052dc      4889c7         mov rdi, rax
0x000052df      4889442420     mov qword [rsp + 0x20], rax
0x000052e4      e8b7110000     call sym.initbuf
0x000052e9      e9d6f9ffff     jmp 0x4cc4
0x000052ee      488bbc245001.  mov rdi, qword [rsp + 0x150]
0x000052f6      e8c5deffff     call sym..plt.got
0x000052fb      ba10000000     mov edx, 0x10
0x00005300      31c9           xor ecx, ecx
0x00005302      488b1d7f5021.  mov rbx, qword [obj.temphead]           ; [0x21a388:8]=0
0x00005309      4889d0         mov rax, rdx
0x0000530c      49f7e5         mul r13
0x0000530f      0f8054090000   jo 0x5c69
0x00005315      4885c0         test rax, rax
0x00005318      0f88dc070000   js 0x5afa
0x0000531e      4885c9         test rcx, rcx
0x00005321      0f85d3070000   jne 0x5afa
0x00005327      4c89ef         mov rdi, r13
0x0000532a      48c1e704       shl rdi, 4
0x0000532e      e8adca0000     call sym.xmalloc
0x00005333      4889c5         mov rbp, rax
0x00005336      4889c2         mov rdx, rax
0x00005339      eb13           jmp 0x534e
0x0000533b      488d430d       lea rax, [rbx + 0xd]
0x0000533f      48895a08       mov qword [rdx + 8], rbx
0x00005343      488b1b         mov rbx, qword [rbx]
0x00005346      4883c210       add rdx, 0x10
0x0000534a      488942f0       mov qword [rdx - 0x10], rax
0x0000534e      4885db         test rbx, rbx
0x00005351      75e8           jne 0x533b
0x00005353      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00005358      4889ef         mov rdi, rbp
0x0000535b      4c89ea         mov rdx, r13
0x0000535e      4c89ee         mov rsi, r13
0x00005361      e83a500000     call sym.merge
0x00005366      4889ef         mov rdi, rbp
0x00005369      e852deffff     call sym..plt.got
0x0000536e      e94bfcffff     jmp 0x4fbe
0x00005373      be10000000     mov esi, 0x10
0x00005378      4c89ff         mov rdi, r15
0x0000537b      e830cc0000     call sym.xcalloc
0x00005380      31d2           xor edx, edx
0x00005382      498b34d6       mov rsi, qword [r14 + rdx*8]
0x00005386      4889d1         mov rcx, rdx
0x00005389      4883c201       add rdx, 1
0x0000538d      48c1e104       shl rcx, 4
0x00005391      4939d7         cmp r15, rdx
0x00005394      48893408       mov qword [rax + rcx], rsi
0x00005398      77e8           ja 0x5382
0x0000539a      488b4c2428     mov rcx, qword [rsp + 0x28]
0x0000539f      4c89fa         mov rdx, r15
0x000053a2      31f6           xor esi, esi
0x000053a4      4889c7         mov rdi, rax
0x000053a7      e8f44f0000     call sym.merge
0x000053ac      e92afcffff     jmp 0x4fdb
0x000053b1      488bbc246801.  mov rdi, qword [rsp + 0x168]
0x000053b9      4803bc245001.  add rdi, qword [rsp + 0x150]
0x000053c1      488db424b003.  lea rsi, [rsp + 0x3b0]
0x000053c9      4c29ff         sub rdi, r15
0x000053cc      48c1ff05       sar rdi, 5
0x000053d0      48037c2418     add rdi, qword [rsp + 0x18]
0x000053d5      e8f6880000     call sym.umaxtostr
0x000053da      488d35f10301.  lea rsi, str.s:__s:_s:_disorder:        ; 0x157d2 ; "%s: %s:%s: disorder: "
0x000053e1      488b2dc05421.  mov rbp, qword [obj.program_name]       ; [0x21a8a8:8]=0
0x000053e8      31ff           xor edi, edi
0x000053ea      ba05000000     mov edx, 5
0x000053ef      4989c4         mov r12, rax
0x000053f2      e879d8ffff     call sym.imp.dcgettext
0x000053f7      488b3d024e21.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21a200:8]=0
0x000053fe      4d89e1         mov r9, r12
0x00005401      4d89e8         mov r8, r13
0x00005404      4889e9         mov rcx, rbp
0x00005407      4889c2         mov rdx, rax
0x0000540a      be01000000     mov esi, 1
0x0000540f      31c0           xor eax, eax
0x00005411      e8eadcffff     call sym.imp.__fprintf_chk
0x00005416      488d35cb0301.  lea rsi, str.standard_error             ; 0x157e8 ; "standard error"
0x0000541d      31ff           xor edi, edi
0x0000541f      ba05000000     mov edx, 5
0x00005424      e847d8ffff     call sym.imp.dcgettext
0x00005429      488b35d04d21.  mov rsi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21a200:8]=0
0x00005430      4889c2         mov rdx, rax
0x00005433      4c89ff         mov rdi, r15
0x00005436      e8451e0000     call sym.write_line
0x0000543b      e9d7f3ffff     jmp 0x4817
0x00005440      0fb684243701.  movzx eax, byte [rsp + 0x137]
0x00005448      8805ed4f2100   mov byte [obj.reverse], al              ; [0x21a43b:1]=0
0x0000544e      e9adf1ffff     jmp 0x4600
0x00005453      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00005458      be48000000     mov esi, 0x48                           ; 'H'
0x0000545d      e87ecb0000     call sym.xmemdup
0x00005462      488b15c74f21.  mov rdx, qword [obj.keylist]            ; [0x21a430:8]=0
0x00005469      488d0dc04f21.  lea rcx, obj.keylist                    ; 0x21a430
0x00005470      4885d2         test rdx, rdx
0x00005473      740a           je 0x547f
0x00005475      488d4a40       lea rcx, [rdx + 0x40]
0x00005479      488b5240       mov rdx, qword [rdx + 0x40]
0x0000547d      ebf1           jmp 0x5470
0x0000547f      488901         mov qword [rcx], rax
0x00005482      488b3da74f21.  mov rdi, qword [obj.keylist]            ; [0x21a430:8]=0
0x00005489      48c740400000.  mov qword [rax + 0x40], 0
0x00005491      440fb6ac2433.  movzx r13d, byte [rsp + 0x133]
0x0000549a      c644241001     mov byte [rsp + 0x10], 1
0x0000549f      4885ff         test rdi, rdi
0x000054a2      0f8581e6ffff   jne 0x3b29
0x000054a8      e9f1e6ffff     jmp 0x3b9e
0x000054ad      488d7801       lea rdi, [rax + 1]
0x000054b1      488b442430     mov rax, qword [rsp + 0x30]
0x000054b6      488d15490101.  lea rdx, str.invalid_number_after__.    ; 0x15606 ; "invalid number after '.'"
0x000054bd      44894c2470     mov dword [rsp + 0x70], r9d
0x000054c2      488d7008       lea rsi, [rax + 8]
0x000054c6      e8f51a0000     call sym.parse_field_count
0x000054cb      488b9424b800.  mov rdx, qword [rsp + 0xb8]
0x000054d3      448b4c2470     mov r9d, dword [rsp + 0x70]
0x000054d8      488d4aff       lea rcx, [rdx - 1]
0x000054dc      4885d2         test rdx, rdx
0x000054df      48898c24b800.  mov qword [rsp + 0xb8], rcx
0x000054e7      0f856defffff   jne 0x445a
0x000054ed      488b3dec4c21.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21a1e0:8]=0
0x000054f4      488d35870101.  lea rsi, str.character_offset_is_zero   ; 0x15682 ; "character offset is zero"
0x000054fb      e8e0dcffff     call sym.badfieldspec
0x00005500      488b742460     mov rsi, qword [rsp + 0x60]
0x00005505      488d158f0101.  lea rdx, str.invalid_number_after       ; 0x1569b ; "invalid number after ','"
0x0000550c      488d7801       lea rdi, [rax + 1]
0x00005510      44894c2470     mov dword [rsp + 0x70], r9d
0x00005515      e8a61a0000     call sym.parse_field_count
0x0000551a      488b9424c000.  mov rdx, qword [rsp + 0xc0]
0x00005522      448b4c2470     mov r9d, dword [rsp + 0x70]
0x00005527      488d4aff       lea rcx, [rdx - 1]
0x0000552b      4885d2         test rdx, rdx
0x0000552e      48898c24c000.  mov qword [rsp + 0xc0], rcx
0x00005536      0f84ef070000   je 0x5d2b
0x0000553c      80382e         cmp byte [rax], 0x2e
0x0000553f      0f8499000000   je 0x55de
0x00005545      488b742430     mov rsi, qword [rsp + 0x30]
0x0000554a      ba01000000     mov edx, 1
0x0000554f      4889c7         mov rdi, rax
0x00005552      44894c2470     mov dword [rsp + 0x70], r9d
0x00005557      e8240c0000     call sym.set_ordering
0x0000555c      448b4c2470     mov r9d, dword [rsp + 0x70]
0x00005561      e93defffff     jmp 0x44a3
0x00005566      48c7442458ff.  mov qword [rsp + 0x58], 0xffffffffffffffff
0x0000556f      e9cae2ffff     jmp 0x383e
0x00005574      4c89f8         mov rax, r15
0x00005577      4c89f9         mov rcx, r15
0x0000557a      660fefc0       pxor xmm0, xmm0
0x0000557e      48d1e8         shr rax, 1
0x00005581      83e101         and ecx, 1
0x00005584      4809c8         or rax, rcx
0x00005587      f2480f2ac0     cvtsi2sd xmm0, rax
0x0000558c      f20f58c0       addsd xmm0, xmm0
0x00005590      e9c1fcffff     jmp 0x5256
0x00005595      f24c0f2cf9     cvttsd2si r15, xmm1
0x0000559a      e9e5fcffff     jmp 0x5284
0x0000559f      f24c0f2cf8     cvttsd2si r15, xmm0
0x000055a4      e99bfcffff     jmp 0x5244
0x000055a9      803d894e2100.  cmp byte [obj.unique], 0                ; [0x21a439:1]=0
0x000055b0      0f8598f5ffff   jne 0x4b4e
0x000055b6      e9faefffff     jmp 0x45b5
0x000055bb      b801000000     mov eax, 1
0x000055c0      e911f4ffff     jmp 0x49d6
0x000055c5      0fbe4001       movsx eax, byte [rax + 1]
0x000055c9      83e830         sub eax, 0x30
0x000055cc      83f809         cmp eax, 9
0x000055cf      0f96c0         setbe al
0x000055d2      0fb6c0         movzx eax, al
0x000055d5      89442470       mov dword [rsp + 0x70], eax
0x000055d9      e93cf4ffff     jmp 0x4a1a
0x000055de      488d7801       lea rdi, [rax + 1]
0x000055e2      488b442430     mov rax, qword [rsp + 0x30]
0x000055e7      488d15180001.  lea rdx, str.invalid_number_after__.    ; 0x15606 ; "invalid number after '.'"
0x000055ee      44894c2470     mov dword [rsp + 0x70], r9d
0x000055f3      488d7018       lea rsi, [rax + 0x18]
0x000055f7      e8c4190000     call sym.parse_field_count
0x000055fc      448b4c2470     mov r9d, dword [rsp + 0x70]
0x00005601      e93fffffff     jmp 0x5545
0x00005606      bf02000000     mov edi, 2
0x0000560b      e8908a0000     call sym.num_processors
0x00005610      ba08000000     mov edx, 8
0x00005615      4883f808       cmp rax, 8
0x00005619      480f46d0       cmovbe rdx, rax
0x0000561d      4889542458     mov qword [rsp + 0x58], rdx
0x00005622      e9d3f5ffff     jmp 0x4bfa
0x00005627      bb01000000     mov ebx, 1
0x0000562c      e9e6f1ffff     jmp 0x4817
0x00005631      4c8b6c2418     mov r13, qword [rsp + 0x18]
0x00005636      e991fcffff     jmp 0x52cc
0x0000563b      c74424700000.  mov dword [rsp + 0x70], 0
0x00005643      e9d2f3ffff     jmp 0x4a1a
0x00005648      488b742410     mov rsi, qword [rsp + 0x10]
0x0000564d      488b7c2408     mov rdi, qword [rsp + 8]
0x00005652      488994247001.  mov qword [rsp + 0x170], rdx
0x0000565a      e8911b0000     call sym.xfclose
0x0000565f      e942f9ffff     jmp 0x4fa6
0x00005664      4883c201       add rdx, 1
0x00005668      e9b7ebffff     jmp 0x4224
0x0000566d      488b742430     mov rsi, qword [rsp + 0x30]
0x00005672      31d2           xor edx, edx
0x00005674      4889c7         mov rdi, rax
0x00005677      44894c2478     mov dword [rsp + 0x78], r9d
0x0000567c      e8ff0a0000     call sym.set_ordering
0x00005681      803800         cmp byte [rax], 0
0x00005684      448b4c2478     mov r9d, dword [rsp + 0x78]
0x00005689      0f852bf4ffff   jne 0x4aba
0x0000568f      837c247000     cmp dword [rsp + 0x70], 0
0x00005694      0f84b3000000   je 0x574d
0x0000569a      486305374b21.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x21a1d8:4]=0
0x000056a1      488b742460     mov rsi, qword [rsp + 0x60]
0x000056a6      44894c2478     mov dword [rsp + 0x78], r9d
0x000056ab      8d5001         lea edx, [rax + 1]
0x000056ae      488b44c500     mov rax, qword [rbp + rax*8]
0x000056b3      89151f4b2100   mov dword [obj.optind], edx             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x21a1d8:4]=0
0x000056b9      488d152dff00.  lea rdx, [0x000155ed]                   ; "invalid number after '-'"
0x000056c0      488d7801       lea rdi, [rax + 1]
0x000056c4      4889442470     mov qword [rsp + 0x70], rax
0x000056c9      e8f2180000     call sym.parse_field_count
0x000056ce      4885c0         test rax, rax
0x000056d1      448b4c2478     mov r9d, dword [rsp + 0x78]
0x000056d6      0f8491020000   je 0x596d
0x000056dc      80382e         cmp byte [rax], 0x2e
0x000056df      7523           jne 0x5704
0x000056e1      488d7801       lea rdi, [rax + 1]
0x000056e5      488b442430     mov rax, qword [rsp + 0x30]
0x000056ea      488d1515ff00.  lea rdx, str.invalid_number_after__.    ; 0x15606 ; "invalid number after '.'"
0x000056f1      44894c2478     mov dword [rsp + 0x78], r9d
0x000056f6      488d7018       lea rsi, [rax + 0x18]
0x000056fa      e8c1180000     call sym.parse_field_count
0x000056ff      448b4c2478     mov r9d, dword [rsp + 0x78]
0x00005704      4883bc24c800.  cmp qword [rsp + 0xc8], 0
0x0000570d      7519           jne 0x5728
0x0000570f      488b9424c000.  mov rdx, qword [rsp + 0xc0]
0x00005717      4885d2         test rdx, rdx
0x0000571a      740c           je 0x5728
0x0000571c      4883ea01       sub rdx, 1
0x00005720      48899424c000.  mov qword [rsp + 0xc0], rdx
0x00005728      488b742430     mov rsi, qword [rsp + 0x30]
0x0000572d      ba01000000     mov edx, 1
0x00005732      4889c7         mov rdi, rax
0x00005735      44894c2478     mov dword [rsp + 0x78], r9d
0x0000573a      e8410a0000     call sym.set_ordering
0x0000573f      803800         cmp byte [rax], 0
0x00005742      448b4c2478     mov r9d, dword [rsp + 0x78]
0x00005747      0f858f010000   jne 0x58dc
0x0000574d      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00005752      be48000000     mov esi, 0x48                           ; 'H'
0x00005757      44894c2470     mov dword [rsp + 0x70], r9d
0x0000575c      c68424e90000.  mov byte [rsp + 0xe9], 1
0x00005764      e877c80000     call sym.xmemdup
0x00005769      488b15c04c21.  mov rdx, qword [obj.keylist]            ; [0x21a430:8]=0
0x00005770      448b4c2470     mov r9d, dword [rsp + 0x70]
0x00005775      488d0db44c21.  lea rcx, obj.keylist                    ; 0x21a430
0x0000577c      4885d2         test rdx, rdx
0x0000577f      0f84eaf0ffff   je 0x486f
0x00005785      488d4a40       lea rcx, [rdx + 0x40]
0x00005789      488b5240       mov rdx, qword [rdx + 0x40]
0x0000578d      ebed           jmp 0x577c
0x0000578f      0fb612         movzx edx, byte [rdx]
0x00005792      80fa25         cmp dl, 0x25
0x00005795      7439           je 0x57d0
0x00005797      80fa62         cmp dl, 0x62
0x0000579a      0f84cbebffff   je 0x436b
0x000057a0      e931f2ffff     jmp 0x49d6
0x000057a5      4883bc24b000.  cmp qword [rsp + 0xb0], 0
0x000057ae      0f8506f3ffff   jne 0x4aba
0x000057b4      4883bc24b800.  cmp qword [rsp + 0xb8], 0
0x000057bd      0f85f7f2ffff   jne 0x4aba
0x000057c3      48898c24b000.  mov qword [rsp + 0xb0], rcx
0x000057cb      e9eaf2ffff     jmp 0x4aba
0x000057d0      44894c2470     mov dword [rsp + 0x70], r9d
0x000057d5      e8168a0000     call sym.physmem_total
0x000057da      488b84245001.  mov rax, qword [rsp + 0x150]
0x000057e2      448b4c2470     mov r9d, dword [rsp + 0x70]
0x000057e7      4885c0         test rax, rax
0x000057ea      786f           js 0x585b
0x000057ec      660fefc9       pxor xmm1, xmm1
0x000057f0      f2480f2ac8     cvtsi2sd xmm1, rax
0x000057f5      f20f59c1       mulsd xmm0, xmm1
0x000057f9      f20f100dd701.  movsd xmm1, qword [0x000159d8]          ; [0x159d8:8]=0x43f0000000000000
0x00005801      f20f5e05c701.  divsd xmm0, qword [0x000159d0]
0x00005809      660f2ec8       ucomisd xmm1, xmm0
0x0000580d      0f86a8fdffff   jbe 0x55bb
0x00005813      f20f100dc501.  movsd xmm1, qword [0x000159e0]          ; [0x159e0:8]=0x43e0000000000000
0x0000581b      660f2ec1       ucomisd xmm0, xmm1
0x0000581f      7312           jae 0x5833
0x00005821      f2480f2cc0     cvttsd2si rax, xmm0
0x00005826      488984245001.  mov qword [rsp + 0x150], rax
0x0000582e      e938ebffff     jmp 0x436b
0x00005833      f20f5cc1       subsd xmm0, xmm1
0x00005837      f2480f2cc0     cvttsd2si rax, xmm0
0x0000583c      488984245001.  mov qword [rsp + 0x150], rax
0x00005844      48b800000000.  movabs rax, 0x8000000000000000
0x0000584e      483184245001.  xor qword [rsp + 0x150], rax
0x00005856      e910ebffff     jmp 0x436b
0x0000585b      4889c2         mov rdx, rax
0x0000585e      660fefc9       pxor xmm1, xmm1
0x00005862      48d1ea         shr rdx, 1
0x00005865      83e001         and eax, 1
0x00005868      4809c2         or rdx, rax
0x0000586b      f2480f2aca     cvtsi2sd xmm1, rdx
0x00005870      f20f58c9       addsd xmm1, xmm1
0x00005874      e97cffffff     jmp 0x57f5
0x00005879      488d7801       lea rdi, [rax + 1]
0x0000587d      488b442430     mov rax, qword [rsp + 0x30]
0x00005882      31d2           xor edx, edx
0x00005884      44894c2478     mov dword [rsp + 0x78], r9d
0x00005889      488d7008       lea rsi, [rax + 8]
0x0000588d      e82e170000     call sym.parse_field_count
0x00005892      4883bc24b000.  cmp qword [rsp + 0xb0], 0
0x0000589b      448b4c2478     mov r9d, dword [rsp + 0x78]
0x000058a0      0f850bf2ffff   jne 0x4ab1
0x000058a6      4883bc24b800.  cmp qword [rsp + 0xb8], 0
0x000058af      0f85fcf1ffff   jne 0x4ab1
0x000058b5      e9ebf1ffff     jmp 0x4aa5
0x000058ba      488b5d00       mov rbx, qword [rbp]
0x000058be      488d3532ff00.  lea rsi, str.cannot_read                ; 0x157f7 ; "cannot read"
0x000058c5      ba05000000     mov edx, 5
0x000058ca      31ff           xor edi, edi
0x000058cc      e89fd3ffff     call sym.imp.dcgettext
0x000058d1      4889de         mov rsi, rbx
0x000058d4      4889c7         mov rdi, rax
0x000058d7      e8440a0000     call sym.sort_die
0x000058dc      488b7c2470     mov rdi, qword [rsp + 0x70]
0x000058e1      488d3537fd00.  lea rsi, str.stray_character_in_field_spec ; 0x1561f ; "stray character in field spec"
0x000058e8      e8f3d8ffff     call sym.badfieldspec
0x000058ed      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000058f2      e8d8d9ffff     call sym.xfopen.part.7
0x000058f7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000058fc      e8ced9ffff     call sym.xfopen.part.7
0x00005901      488d3530f800.  lea rsi, str.multiple_random_sources_specified ; 0x15138 ; "multiple random sources specified"
0x00005908      ba05000000     mov edx, 5
0x0000590d      31ff           xor edi, edi
0x0000590f      e85cd3ffff     call sym.imp.dcgettext
0x00005914      31f6           xor esi, esi
0x00005916      4889c2         mov rdx, rax
0x00005919      bf02000000     mov edi, 2
0x0000591e      31c0           xor eax, eax
0x00005920      e8bbd6ffff     call sym.imp.error
0x00005925      488d3594f700.  lea rsi, str.multiple_compress_programs_specified ; 0x150c0 ; "multiple compress programs specified"
0x0000592c      ba05000000     mov edx, 5
0x00005931      31ff           xor edi, edi
0x00005933      e838d3ffff     call sym.imp.dcgettext
0x00005938      31f6           xor esi, esi
0x0000593a      4889c2         mov rdx, rax
0x0000593d      bf02000000     mov edi, 2
0x00005942      31c0           xor eax, eax
0x00005944      e897d6ffff     call sym.imp.error
0x00005949      488d35c8f700.  lea rsi, str.multiple_output_files_specified ; 0x15118 ; "multiple output files specified"
0x00005950      ba05000000     mov edx, 5
0x00005955      31ff           xor edi, edi
0x00005957      e814d3ffff     call sym.imp.dcgettext
0x0000595c      31f6           xor esi, esi
0x0000595e      4889c2         mov rdx, rax
0x00005961      bf02000000     mov edi, 2
0x00005966      31c0           xor eax, eax
0x00005968      e873d6ffff     call sym.imp.error
0x0000596d      488d0df0e300.  lea rcx, obj.__PRETTY_FUNCTION__.9508   ; 0x13d64 ; "main"
0x00005974      488d3507fb00.  lea rsi, str..._coreutils_8.31_src_sort.c ; 0x15482 ; "../coreutils-8.31/src/sort.c"
0x0000597b      488d3dd30001.  lea rdi, [0x00015a55]                   ; "s"
0x00005982      ba12110000     mov edx, 0x1112
0x00005987      e8e4d3ffff     call sym.imp.__assert_fail
0x0000598c      4c89df         mov rdi, r11
0x0000598f      e8fca90000     call sym.quote
0x00005994      4889c5         mov rbp, rax
0x00005997      4863442470     movsxd rax, dword [rsp + 0x70]
0x0000599c      488d153d3c21.  lea rdx, obj.long_options               ; 0x2195e0 ; "WX\x01"
0x000059a3      488d3525fd00.  lea rsi, str.invalid____s_argument__s   ; 0x156cf ; "invalid --%s argument %s"
0x000059aa      31ff           xor edi, edi
0x000059ac      48c1e005       shl rax, 5
0x000059b0      488b1c02       mov rbx, qword [rdx + rax]
0x000059b4      ba05000000     mov edx, 5
0x000059b9      e8b2d2ffff     call sym.imp.dcgettext
0x000059be      4989e8         mov r8, rbp
0x000059c1      4889c2         mov rdx, rax
0x000059c4      31f6           xor esi, esi
0x000059c6      4889d9         mov rcx, rbx
0x000059c9      31ff           xor edi, edi
0x000059cb      31c0           xor eax, eax
0x000059cd      e80ed6ffff     call sym.imp.error
0x000059d2      488d3d0ffd00.  lea rdi, [0x000156e8]                   ; "2"
0x000059d9      e8b2a90000     call sym.quote
0x000059de      488d3505fd00.  lea rsi, str.minimum____s_argument_is__s ; 0x156ea ; "minimum --%s argument is %s"
0x000059e5      4889c5         mov rbp, rax
0x000059e8      ba05000000     mov edx, 5
0x000059ed      31ff           xor edi, edi
0x000059ef      e87cd2ffff     call sym.imp.dcgettext
0x000059f4      4989e8         mov r8, rbp
0x000059f7      4889c2         mov rdx, rax
0x000059fa      4889d9         mov rcx, rbx
0x000059fd      31f6           xor esi, esi
0x000059ff      bf02000000     mov edi, 2
0x00005a04      31c0           xor eax, eax
0x00005a06      e8d5d5ffff     call sym.imp.error
0x00005a0b      4889d7         mov rdi, rdx
0x00005a0e      e87da90000     call sym.quote
0x00005a13      488d3506fd00.  lea rsi, str.multi_character_tab__s     ; 0x15720 ; "multi-character tab %s"
0x00005a1a      4889c3         mov rbx, rax
0x00005a1d      ba05000000     mov edx, 5
0x00005a22      31ff           xor edi, edi
0x00005a24      e847d2ffff     call sym.imp.dcgettext
0x00005a29      4889d9         mov rcx, rbx
0x00005a2c      4889c2         mov rdx, rax
0x00005a2f      31f6           xor esi, esi
0x00005a31      bf02000000     mov edi, 2
0x00005a36      31c0           xor eax, eax
0x00005a38      e8a3d5ffff     call sym.imp.error
0x00005a3d      488d35f3fc00.  lea rsi, str.incompatible_tabs          ; 0x15737 ; "incompatible tabs"
0x00005a44      ba05000000     mov edx, 5
0x00005a49      31ff           xor edi, edi
0x00005a4b      e820d2ffff     call sym.imp.dcgettext
0x00005a50      31f6           xor esi, esi
0x00005a52      4889c2         mov rdx, rax
0x00005a55      bf02000000     mov edi, 2
0x00005a5a      31c0           xor eax, eax
0x00005a5c      e87fd5ffff     call sym.imp.error
0x00005a61      31ff           xor edi, edi
0x00005a63      e8584e0000     call sym.usage
0x00005a68      488d8c24b003.  lea rcx, [rsp + 0x3b0]
0x00005a70      c6473700       mov byte [rdi + 0x37], 0
0x00005a74      c6473100       mov byte [rdi + 0x31], 0
0x00005a78      c6473000       mov byte [rdi + 0x30], 0
0x00005a7c      4889ce         mov rsi, rcx
0x00005a7f      e84c060000     call sym.key_to_opts
0x00005a84      4889cf         mov rdi, rcx
0x00005a87      e814080000     call sym.incompatible_options
0x00005a8c      498b36         mov rsi, qword [r14]
0x00005a8f      bf04000000     mov edi, 4
0x00005a94      e827a60000     call sym.quotearg_style
0x00005a99      488d35c2fc00.  lea rsi, str.extra_operand__s           ; 0x15762 ; "extra operand %s"
0x00005aa0      4889c3         mov rbx, rax
0x00005aa3      ba05000000     mov edx, 5
0x00005aa8      31ff           xor edi, edi
0x00005aaa      e8c1d1ffff     call sym.imp.dcgettext
0x00005aaf      4889d9         mov rcx, rbx
0x00005ab2      4889c2         mov rdx, rax
0x00005ab5      31f6           xor esi, esi
0x00005ab7      31ff           xor edi, edi
0x00005ab9      31c0           xor eax, eax
0x00005abb      e820d5ffff     call sym.imp.error
0x00005ac0      488d35c1f600.  lea rsi, str.file_operands_cannot_be_combined_with___files0_from ; 0x15188 ; "file operands cannot be combined with --files0-from"
0x00005ac7      ba05000000     mov edx, 5
0x00005acc      31ff           xor edi, edi
0x00005ace      e89dd1ffff     call sym.imp.dcgettext
0x00005ad3      488b3d264721.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21a200:8]=0
0x00005ada      488d151e0601.  lea rdx, [0x000160ff]                   ; "%s\n"
0x00005ae1      4889c1         mov rcx, rax
0x00005ae4      be01000000     mov esi, 1
0x00005ae9      31c0           xor eax, eax
0x00005aeb      e810d6ffff     call sym.imp.__fprintf_chk
0x00005af0      bf02000000     mov edi, 2
0x00005af5      e8c64d0000     call sym.usage
0x00005afa      e831c50000     call sym.xalloc_die
0x00005aff      be01000000     mov esi, 1
0x00005b04      e95ddcffff     jmp 0x3766
0x00005b09      488d35a9f900.  lea rsi, str.close_failed               ; 0x154b9 ; "close failed"
0x00005b10      ba05000000     mov edx, 5
0x00005b15      31ff           xor edi, edi
0x00005b17      e854d1ffff     call sym.imp.dcgettext
0x00005b1c      488b742440     mov rsi, qword [rsp + 0x40]
0x00005b21      4889c7         mov rdi, rax
0x00005b24      e8f7070000     call sym.sort_die
0x00005b29      488d35e3fb00.  lea rsi, str.empty_tab                  ; 0x15713 ; "empty tab"
0x00005b30      ba05000000     mov edx, 5
0x00005b35      31ff           xor edi, edi
0x00005b37      e834d1ffff     call sym.imp.dcgettext
0x00005b3c      31f6           xor esi, esi
0x00005b3e      4889c2         mov rdx, rax
0x00005b41      bf02000000     mov edi, 2
0x00005b46      31c0           xor eax, eax
0x00005b48      e893d4ffff     call sym.imp.error
0x00005b4d      bf04000000     mov edi, 4
0x00005b52      e869a50000     call sym.quotearg_style
0x00005b57      488d3562f600.  lea rsi, str.cannot_read_file_names_from__s ; 0x151c0 ; "cannot read file names from %s"
0x00005b5e      4889c3         mov rbx, rax
0x00005b61      ba05000000     mov edx, 5
0x00005b66      31ff           xor edi, edi
0x00005b68      e803d1ffff     call sym.imp.dcgettext
0x00005b6d      4889d9         mov rcx, rbx
0x00005b70      4889c2         mov rdx, rax
0x00005b73      31f6           xor esi, esi
0x00005b75      bf02000000     mov edi, 2
0x00005b7a      31c0           xor eax, eax
0x00005b7c      e85fd4ffff     call sym.imp.error
0x00005b81      488b742418     mov rsi, qword [rsp + 0x18]
0x00005b86      bf04000000     mov edi, 4
0x00005b8b      e830a50000     call sym.quotearg_style
0x00005b90      488d35dcfb00.  lea rsi, str.no_input_from__s           ; 0x15773 ; "no input from %s"
0x00005b97      4889c3         mov rbx, rax
0x00005b9a      ba05000000     mov edx, 5
0x00005b9f      31ff           xor edi, edi
0x00005ba1      e8cad0ffff     call sym.imp.dcgettext
0x00005ba6      4889d9         mov rcx, rbx
0x00005ba9      4889c2         mov rdx, rax
0x00005bac      31f6           xor esi, esi
0x00005bae      bf02000000     mov edi, 2
0x00005bb3      31c0           xor eax, eax
0x00005bb5      e826d4ffff     call sym.imp.error
0x00005bba      4889d6         mov rsi, rdx
0x00005bbd      bf04000000     mov edi, 4
0x00005bc2      e8f9a40000     call sym.quotearg_style
0x00005bc7      488d3512f600.  lea rsi, str.when_reading_file_names_from_stdin__no_file_name_of__s_allowed ; 0x151e0 ; "when reading file names from stdin, no file name of %s allowed"
0x00005bce      4889c3         mov rbx, rax
0x00005bd1      ba05000000     mov edx, 5
0x00005bd6      31ff           xor edi, edi
0x00005bd8      e893d0ffff     call sym.imp.dcgettext
0x00005bdd      4889d9         mov rcx, rbx
0x00005be0      4889c2         mov rdx, rax
0x00005be3      31f6           xor esi, esi
0x00005be5      bf02000000     mov edi, 2
0x00005bea      31c0           xor eax, eax
0x00005bec      e8efd3ffff     call sym.imp.error
0x00005bf1      488b542418     mov rdx, qword [rsp + 0x18]
0x00005bf6      be03000000     mov esi, 3
0x00005bfb      31ff           xor edi, edi
0x00005bfd      e8bea50000     call sym.quotearg_n_style_colon
0x00005c02      488d3517f600.  lea rsi, str.s:_lu:_invalid_zero_length_file_name ; 0x15220 ; "%s:%lu: invalid zero-length file name"
0x00005c09      4889c3         mov rbx, rax
0x00005c0c      ba05000000     mov edx, 5
0x00005c11      31ff           xor edi, edi
0x00005c13      e858d0ffff     call sym.imp.dcgettext
0x00005c18      4d89f8         mov r8, r15
0x00005c1b      4889c2         mov rdx, rax
0x00005c1e      4889d9         mov rcx, rbx
0x00005c21      31f6           xor esi, esi
0x00005c23      bf02000000     mov edi, 2
0x00005c28      31c0           xor eax, eax
0x00005c2a      e8b1d3ffff     call sym.imp.error
0x00005c2f      4c8b742468     mov r14, qword [rsp + 0x68]
0x00005c34      ba05000000     mov edx, 5
0x00005c39      488d35c3fb00.  lea rsi, str.stat_failed                ; 0x15803 ; "stat failed"
0x00005c40      4b8b1cee       mov rbx, qword [r14 + r13*8]
0x00005c44      e981fcffff     jmp 0x58ca
0x00005c49      488d354ff800.  lea rsi, str.open_failed                ; 0x1549f ; "open failed"
0x00005c50      31ff           xor edi, edi
0x00005c52      ba05000000     mov edx, 5
0x00005c57      e814d0ffff     call sym.imp.dcgettext
0x00005c5c      488b742428     mov rsi, qword [rsp + 0x28]
0x00005c61      4889c7         mov rdi, rax
0x00005c64      e8b7060000     call sym.sort_die
0x00005c69      b901000000     mov ecx, 1
0x00005c6e      e9a2f6ffff     jmp 0x5315
0x00005c73      8b742478       mov esi, dword [rsp + 0x78]
0x00005c77      488d0d623921.  lea rcx, obj.long_options               ; 0x2195e0 ; "WX\x01"
0x00005c7e      4d89d0         mov r8, r10
0x00005c81      ba87ffffff     mov edx, 0xffffff87                     ; 4294967175
0x00005c86      89c7           mov edi, eax
0x00005c88      e8e3c90000     call sym.xstrtol_fatal
0x00005c8d      488d3db8f900.  lea rdi, [0x0001564c]                   ; "cC"
0x00005c94      e807060000     call sym.incompatible_options
0x00005c99      4584e4         test r12b, r12b
0x00005c9c      7506           jne 0x5ca4
0x00005c9e      41bc6f000000   mov r12d, 0x6f                          ; 'o'
0x00005ca4      488d3d6d4321.  lea rdi, obj.opts.9581                  ; 0x21a018 ; "X --debug"
0x00005cab      448825664321.  mov byte [obj.opts.9581], r12b          ; [0x21a018:1]=88 ; "X --debug"
0x00005cb2      e8e9050000     call sym.incompatible_options
0x00005cb7      498b7608       mov rsi, qword [r14 + 8]
0x00005cbb      bf04000000     mov edi, 4
0x00005cc0      e8fba30000     call sym.quotearg_style
0x00005cc5      488d35c4f600.  lea rsi, str.extra_operand__s_not_allowed_with___c ; 0x15390 ; "extra operand %s not allowed with -%c"
0x00005ccc      4889c3         mov rbx, rax
0x00005ccf      ba05000000     mov edx, 5
0x00005cd4      31ff           xor edi, edi
0x00005cd6      e895cfffff     call sym.imp.dcgettext
0x00005cdb      450fbec4       movsx r8d, r12b
0x00005cdf      4889c2         mov rdx, rax
0x00005ce2      4889d9         mov rcx, rbx
0x00005ce5      31f6           xor esi, esi
0x00005ce7      bf02000000     mov edi, 2
0x00005cec      31c0           xor eax, eax
0x00005cee      e8edd2ffff     call sym.imp.error
0x00005cf3      488d3d164321.  lea rdi, obj.opts.9585                  ; 0x21a010
0x00005cfa      4488250f4321.  mov byte [obj.opts.9585], r12b          ; [0x21a010:1]=0
0x00005d01      e89a050000     call sym.incompatible_options
0x00005d06      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00005d0b      e8bfd5ffff     call sym.xfopen.part.7
0x00005d10      4c89ef         mov rdi, r13
0x00005d13      e8b7d5ffff     call sym.xfopen.part.7
0x00005d18      488b3dc14421.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21a1e0:8]=0
0x00005d1f      488d35f9f800.  lea rsi, str.stray_character_in_field_spec ; 0x1561f ; "stray character in field spec"
0x00005d26      e8b5d4ffff     call sym.badfieldspec
0x00005d2b      488b3dae4421.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x21a1e0:8]=0
0x00005d32      488d3534f900.  lea rsi, str.field_number_is_zero       ; 0x1566d ; "field number is zero"
0x00005d39      e8a2d4ffff     call sym.badfieldspec
0x00005d3e      e85dcfffff     call sym.imp.__stack_chk_fail
0x00005d43      662e0f1f8400.  nop word cs:[rax + rax]
0x00005d4d      0f1f00         nop dword [rax]
;-- entry0:
;-- _start:
;-- rip:
0x00005d50      31ed           xor ebp, ebp
0x00005d52      4989d1         mov r9, rdx
0x00005d55      5e             pop rsi
0x00005d56      4889e2         mov rdx, rsp
0x00005d59      4883e4f0       and rsp, 0xfffffffffffffff0
0x00005d5d      50             push rax
0x00005d5e      54             push rsp
0x00005d5f      4c8d05cada00.  lea r8, sym.__libc_csu_fini             ; 0x13830
0x00005d66      488d0d53da00.  lea rcx, sym.__libc_csu_init            ; 0x137c0 ; "AWAVI\x89\xd7AUATL\x8d%\x9e] "
0x00005d6d      488d3d8cd5ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x3300 ; "AWAVAUATUS\x89\xfbH\x8d=\xb2\"\x01"
0x00005d74      ff154e422100   call qword [reloc.__libc_start_main]    ; [0x219fc8:8]=0
0x00005d7a      f4             hlt
0x00005d7b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00005d80      488d3d214421.  lea rdi, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x21a1a8
0x00005d87      55             push rbp
0x00005d88      488d05194421.  lea rax, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x21a1a8
0x00005d8f      4839f8         cmp rax, rdi
0x00005d92      4889e5         mov rbp, rsp
0x00005d95      7419           je 0x5db0
0x00005d97      488b05224221.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x219fc0:8]=0
0x00005d9e      4885c0         test rax, rax
0x00005da1      740d           je 0x5db0
0x00005da3      5d             pop rbp
0x00005da4      ffe0           jmp rax
0x00005da6      662e0f1f8400.  nop word cs:[rax + rax]
0x00005db0      5d             pop rbp
0x00005db1      c3             ret
0x00005db2      0f1f4000       nop dword [rax]
0x00005db6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00005dc0      488d3de14321.  lea rdi, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x21a1a8
0x00005dc7      488d35da4321.  lea rsi, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x21a1a8
0x00005dce      55             push rbp
0x00005dcf      4829fe         sub rsi, rdi
0x00005dd2      4889e5         mov rbp, rsp
0x00005dd5      48c1fe03       sar rsi, 3
0x00005dd9      4889f0         mov rax, rsi
0x00005ddc      48c1e83f       shr rax, 0x3f
0x00005de0      4801c6         add rsi, rax
0x00005de3      48d1fe         sar rsi, 1
0x00005de6      7418           je 0x5e00
0x00005de8      488b05f14121.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x219fe0:8]=0
0x00005def      4885c0         test rax, rax
0x00005df2      740c           je 0x5e00
0x00005df4      5d             pop rbp
0x00005df5      ffe0           jmp rax
0x00005df7      660f1f840000.  nop word [rax + rax]
0x00005e00      5d             pop rbp
0x00005e01      c3             ret
0x00005e02      0f1f4000       nop dword [rax]
0x00005e06      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00005e10      803df1432100.  cmp byte [obj.completed.7697], 0        ; [0x21a208:1]=0
0x00005e17      752f           jne 0x5e48
0x00005e19      48833dc74121.  cmp qword [reloc.__cxa_finalize], 0     ; [0x219fe8:8]=0
0x00005e21      55             push rbp
0x00005e22      4889e5         mov rbp, rsp
0x00005e25      740c           je 0x5e33
0x00005e27      488b3dda4121.  mov rdi, qword [obj.__dso_handle]       ; [0x21a008:8]=0x21a008 obj.__dso_handle
0x00005e2e      e89dd3ffff     call 0x31d0
0x00005e33      e848ffffff     call sym.deregister_tm_clones
0x00005e38      c605c9432100.  mov byte [obj.completed.7697], 1        ; [0x21a208:1]=0
0x00005e3f      5d             pop rbp
0x00005e40      c3             ret
0x00005e41      0f1f80000000.  nop dword [rax]
0x00005e48      f3c3           ret
0x00005e4a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00005e50      55             push rbp
0x00005e51      4889e5         mov rbp, rsp
0x00005e54      5d             pop rbp
0x00005e55      e966ffffff     jmp sym.register_tm_clones
0x00005e5a      660f1f440000   nop word [rax + rax]
;-- proctab_hasher:
0x00005e60      48634708       movsxd rax, dword [rdi + 8]             ; .//src:688
0x00005e64      31d2           xor edx, edx
0x00005e66      48f7f6         div rsi
0x00005e69      4889d0         mov rax, rdx                            ; .//src:691
0x00005e6c      c3             ret
0x00005e6d      0f1f00         nop dword [rax]
;-- proctab_comparator:
0x00005e70      8b4608         mov eax, dword [rsi + 8]                ; .//src:695
0x00005e73      394708         cmp dword [rdi + 8], eax
0x00005e76      0f94c0         sete al
0x00005e79      c3             ret                                     ; .//src:699
0x00005e7a      660f1f440000   nop word [rax + rax]
;-- traverse_raw_number:
0x00005e80      488b0f         mov rcx, qword [rdi]                    ; .//src:1912
0x00005e83      448b1dfa4921.  mov r11d, dword [obj.thousands_sep]     ; .//src:1932 ; [0x21a884:4]=0
0x00005e8a      4531d2         xor r10d, r10d                          ; .//src:1916
0x00005e8d      31c0           xor eax, eax                            ; .//src:1915
0x00005e8f      0fb611         movzx edx, byte [rcx]
0x00005e92      eb2a           jmp 0x5ebe                              ; .//src:1924
0x00005e94      0f1f4000       nop dword [rax]
0x00005e98      440fbe4101     movsx r8d, byte [rcx + 1]               ; .//src:1932
0x00005e9d      38d0           cmp al, dl
0x00005e9f      0f42c2         cmovb eax, edx
0x00005ea2      4531d2         xor r10d, r10d
0x00005ea5      4539d8         cmp r8d, r11d                           ; .//src:1933
0x00005ea8      4489c2         mov edx, r8d                            ; .//src:1932
0x00005eab      750e           jne 0x5ebb                              ; .//src:1933
0x00005ead      0fb65102       movzx edx, byte [rcx + 2]
0x00005eb1      488d7102       lea rsi, [rcx + 2]                      ; .//src:1934
0x00005eb5      41ba01000000   mov r10d, 1
0x00005ebb      4889f1         mov rcx, rsi
0x00005ebe      440fb6c2       movzx r8d, dl                           ; .//src:1924
0x00005ec2      488d7101       lea rsi, [rcx + 1]
0x00005ec6      458d48d0       lea r9d, [r8 - 0x30]
0x00005eca      4183f909       cmp r9d, 9
0x00005ece      76c8           jbe 0x5e98
0x00005ed0      4584d2         test r10b, r10b                         ; .//src:1937
0x00005ed3      751b           jne 0x5ef0
0x00005ed5      443b05ac4921.  cmp r8d, dword [obj.decimal_point]      ; .//src:1944 ; [0x21a888:4]=0
0x00005edc      7422           je 0x5f00
0x00005ede      4883ee01       sub rsi, 1                              ; .//src:1949
0x00005ee2      488937         mov qword [rdi], rsi
0x00005ee5      c3             ret                                     ; .//src:1951
0x00005ee6      662e0f1f8400.  nop word cs:[rax + rax]
0x00005ef0      4883e901       sub rcx, 1                              ; .//src:1940
0x00005ef4      48890f         mov qword [rdi], rcx
0x00005ef7      c3             ret                                     ; .//src:1941
0x00005ef8      0f1f84000000.  nop dword [rax + rax]
0x00005f00      488d7102       lea rsi, [rcx + 2]                      ; .//src:1945
0x00005f04      0fb64901       movzx ecx, byte [rcx + 1]
0x00005f08      89ca           mov edx, ecx
0x00005f0a      83e930         sub ecx, 0x30
0x00005f0d      83f909         cmp ecx, 9
0x00005f10      77cc           ja 0x5ede
0x00005f12      660f1f440000   nop word [rax + rax]
0x00005f18      38d0           cmp al, dl
0x00005f1a      0f42c2         cmovb eax, edx
0x00005f1d      4883c601       add rsi, 1
0x00005f21      0fb64eff       movzx ecx, byte [rsi - 1]
0x00005f25      89ca           mov edx, ecx
0x00005f27      83e930         sub ecx, 0x30
0x00005f2a      83f909         cmp ecx, 9
0x00005f2d      76e9           jbe 0x5f18
0x00005f2f      4883ee01       sub rsi, 1                              ; .//src:1949
0x00005f33      488937         mov qword [rdi], rsi
0x00005f36      c3             ret                                     ; .//src:1951
0x00005f37      660f1f840000.  nop word [rax + rax]
;-- find_unit_order:
0x00005f40      53             push rbx                                ; .//src:1960
0x00005f41      4883ec10       sub rsp, 0x10
0x00005f45      0fb61f         movzx ebx, byte [rdi]                   ; .//src:1961
0x00005f48      64488b042528.  mov rax, qword fs:[0x28]                ; .//src:1960
0x00005f51      4889442408     mov qword [rsp + 8], rax
0x00005f56      31c0           xor eax, eax
0x00005f58      31c0           xor eax, eax                            ; .//src:1961
0x00005f5a      80fb2d         cmp bl, 0x2d
0x00005f5d      0f94c0         sete al
0x00005f60      4801c7         add rdi, rax                            ; .//src:1962
0x00005f63      48893c24       mov qword [rsp], rdi
0x00005f67      4889e7         mov rdi, rsp                            ; .//src:1963
0x00005f6a      e811ffffff     call sym.traverse_raw_number
0x00005f6f      31d2           xor edx, edx
0x00005f71      3c30           cmp al, 0x30                            ; .//src:1964
0x00005f73      761c           jbe 0x5f91
0x00005f75      488b0424       mov rax, qword [rsp]                    ; .//src:1967
0x00005f79      488d1540de00.  lea rdx, obj.unit_order                 ; 0x13dc0
0x00005f80      0fb600         movzx eax, byte [rax]
0x00005f83      0fbe1402       movsx edx, byte [rdx + rax]
0x00005f87      89d0           mov eax, edx                            ; .//src:1968
0x00005f89      f7d8           neg eax
0x00005f8b      80fb2d         cmp bl, 0x2d
0x00005f8e      0f44d0         cmove edx, eax
0x00005f91      488b4c2408     mov rcx, qword [rsp + 8]                ; .//src:1972
0x00005f96      6448330c2528.  xor rcx, qword fs:[0x28]
0x00005f9f      89d0           mov eax, edx
0x00005fa1      7506           jne 0x5fa9
0x00005fa3      4883c410       add rsp, 0x10
0x00005fa7      5b             pop rbx
0x00005fa8      c3             ret
0x00005fa9      e8f2ccffff     call sym.imp.__stack_chk_fail           ; .//src:1932
0x00005fae      6690           nop
;-- getmonth:
0x00005fb0      0fb607         movzx eax, byte [rdi]
0x00005fb3      488d15a64721.  lea rdx, obj.blanks                     ; 0x21a760
0x00005fba      55             push rbp
0x00005fbb      53             push rbx
0x00005fbc      803c0200       cmp byte [rdx + rax], 0
0x00005fc0      7413           je 0x5fd5
0x00005fc2      660f1f440000   nop word [rax + rax]
0x00005fc8      4883c701       add rdi, 1
0x00005fcc      0fb607         movzx eax, byte [rdi]                   ; .//src:1936
0x00005fcf      803c0200       cmp byte [rdx + rax], 0
0x00005fd3      75f3           jne 0x5fc8                              ; .//src:1938
0x00005fd5      488d2d844021.  lea rbp, obj.monthtab                   ; 0x21a060
0x00005fdc      4c8d0d7d4421.  lea r9, obj.fold_toupper                ; 0x21a460
0x00005fe3      41bb0c000000   mov r11d, 0xc
0x00005fe9      31db           xor ebx, ebx
0x00005feb      4e8d141b       lea r10, [rbx + r11]
0x00005fef      49d1ea         shr r10, 1                              ; .//src:1953
0x00005ff2      4c89d0         mov rax, r10
0x00005ff5      48c1e004       shl rax, 4
0x00005ff9      488b440500     mov rax, qword [rbp + rax]              ; .//src:1948
0x00005ffe      0fb610         movzx edx, byte [rax]
0x00006001      84d2           test dl, dl
0x00006003      7461           je 0x6066                               ; .//src:1953
0x00006005      0fb60f         movzx ecx, byte [rdi]                   ; .//src:1940
0x00006008      41381409       cmp byte [r9 + rcx], dl
0x0000600c      7242           jb 0x6050
0x0000600e      7750           ja 0x6060
0x00006010      4889fa         mov rdx, rdi                            ; .//src:1942
0x00006013      eb0f           jmp 0x6024
0x00006015      0f1f00         nop dword [rax]
0x00006018      440fb602       movzx r8d, byte [rdx]
0x0000601c      43380c01       cmp byte [r9 + r8], cl                  ; .//src:1946
0x00006020      722e           jb 0x6050
0x00006022      773c           ja 0x6060
0x00006024      4883c001       add rax, 1
0x00006028      0fb608         movzx ecx, byte [rax]
0x0000602b      4883c201       add rdx, 1
0x0000602f      84c9           test cl, cl
0x00006031      75e5           jne 0x6018                              ; .//src:1936
0x00006033      4885f6         test rsi, rsi
0x00006036      7403           je 0x603b
0x00006038      488916         mov qword [rsi], rdx
0x0000603b      49c1e204       shl r10, 4                              ; .//src:1963
0x0000603f      428b441508     mov eax, dword [rbp + r10 + 8]
0x00006044      5b             pop rbx
0x00006045      5d             pop rbp                                 ; .//src:1956
0x00006046      c3             ret
0x00006047      660f1f840000.  nop word [rax + rax]                    ; .//src:1942
0x00006050      4d89d3         mov r11, r10
0x00006053      4c39db         cmp rbx, r11                            ; .//src:2254
0x00006056      7293           jb 0x5feb
0x00006058      31c0           xor eax, eax
0x0000605a      5b             pop rbx                                 ; .//src:2264
0x0000605b      5d             pop rbp
0x0000605c      c3             ret
0x0000605d      0f1f00         nop dword [rax]
0x00006060      498d5a01       lea rbx, [r10 + 1]
0x00006064      ebed           jmp 0x6053
0x00006066      4889fa         mov rdx, rdi
0x00006069      ebc8           jmp 0x6033
0x0000606b      0f1f440000     nop dword [rax + rax]
;-- default_key_compare:
0x00006070      31c0           xor eax, eax                            ; .//src:2257
0x00006072      48837f2000     cmp qword [rdi + 0x20], 0
0x00006077      7407           je 0x6080
0x00006079      f3c3           ret
0x0000607b      0f1f440000     nop dword [rax + rax]
0x00006080      48837f2800     cmp qword [rdi + 0x28], 0
0x00006085      75f2           jne 0x6079
0x00006087      0fb64730       movzx eax, byte [rdi + 0x30]
0x0000608b      84c0           test al, al
0x0000608d      7531           jne 0x60c0
0x0000608f      807f3100       cmp byte [rdi + 0x31], 0
0x00006093      75e4           jne 0x6079
0x00006095      48ba0000ff00.  movabs rdx, 0xffff00ff0000
0x0000609f      48855730       test qword [rdi + 0x30], rdx
0x000060a3      75d4           jne 0x6079                              ; .//src:2264
0x000060a5      0fb64736       movzx eax, byte [rdi + 0x36]
0x000060a9      84c0           test al, al
0x000060ab      7513           jne 0x60c0
0x000060ad      807f3800       cmp byte [rdi + 0x38], 0
0x000060b1      75c6           jne 0x6079                              ; .//src:2270
0x000060b3      0fb64733       movzx eax, byte [rdi + 0x33]
0x000060b7      83f001         xor eax, 1
0x000060ba      c3             ret
0x000060bb      0f1f440000     nop dword [rax + rax]
0x000060c0      31c0           xor eax, eax
0x000060c2      c3             ret
0x000060c3      0f1f00         nop dword [rax]
0x000060c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- key_to_opts:
0x000060d0      66837f3000     cmp word [rdi + 0x30], 0
0x000060d5      7407           je 0x60de
0x000060d7      c60662         mov byte [rsi], 0x62                    ; 'b'
                                                                       ; [0x62:1]=0
0x000060da      4883c601       add rsi, 1
0x000060de      488d057b4421.  lea rax, obj.nondictionary              ; 0x21a560
0x000060e5      48394720       cmp qword [rdi + 0x20], rax
0x000060e9      747d           je 0x6168
0x000060eb      48837f2800     cmp qword [rdi + 0x28], 0
0x000060f0      4889f0         mov rax, rsi                            ; .//src:2280
0x000060f3      7407           je 0x60fc
0x000060f5      4883c001       add rax, 1
0x000060f9      c60666         mov byte [rsi], 0x66                    ; 'f'
                                                                       ; [0x66:1]=0
0x000060fc      807f3400       cmp byte [rdi + 0x34], 0
0x00006100      7407           je 0x6109
0x00006102      c60067         mov byte [rax], 0x67                    ; 'g'
                                                                       ; [0x67:1]=0
0x00006105      4883c001       add rax, 1
0x00006109      807f3500       cmp byte [rdi + 0x35], 0
0x0000610d      7407           je 0x6116
0x0000610f      c60068         mov byte [rax], 0x68                    ; 'h'
                                                                       ; [0x68:1]=248
0x00006112      4883c001       add rax, 1
0x00006116      488d15434521.  lea rdx, obj.nonprinting                ; 0x21a660
0x0000611d      48395720       cmp qword [rdi + 0x20], rdx
0x00006121      7451           je 0x6174
0x00006123      807f3600       cmp byte [rdi + 0x36], 0
0x00006127      7407           je 0x6130
0x00006129      c6004d         mov byte [rax], 0x4d                    ; 'M'
                                                                       ; [0x4d:1]=0
0x0000612c      4883c001       add rax, 1
0x00006130      807f3200       cmp byte [rdi + 0x32], 0
0x00006134      7407           je 0x613d
0x00006136      c6006e         mov byte [rax], 0x6e                    ; 'n'
                                                                       ; [0x6e:1]=0
0x00006139      4883c001       add rax, 1
0x0000613d      807f3300       cmp byte [rdi + 0x33], 0
0x00006141      7407           je 0x614a
0x00006143      c60052         mov byte [rax], 0x52                    ; 'R'
                                                                       ; [0x52:1]=0
0x00006146      4883c001       add rax, 1
0x0000614a      807f3700       cmp byte [rdi + 0x37], 0
0x0000614e      7407           je 0x6157
0x00006150      c60072         mov byte [rax], 0x72                    ; 'r'
                                                                       ; [0x72:1]=0
0x00006153      4883c001       add rax, 1
0x00006157      807f3800       cmp byte [rdi + 0x38], 0
0x0000615b      7407           je 0x6164
0x0000615d      c60056         mov byte [rax], 0x56                    ; 'V'
                                                                       ; [0x56:1]=0
0x00006160      4883c001       add rax, 1
0x00006164      c60000         mov byte [rax], 0                       ; .//src:4008
0x00006167      c3             ret                                     ; .//src:4009
0x00006168      c60664         mov byte [rsi], 0x64                    ; 'd'
                                                                       ; [0x64:1]=0
0x0000616b      4883c601       add rsi, 1                              ; .//src:4014
0x0000616f      e977ffffff     jmp 0x60eb
0x00006174      c60069         mov byte [rax], 0x69                    ; 'i'
                                                                       ; [0x69:1]=1
0x00006177      4883c001       add rax, 1
0x0000617b      eba6           jmp 0x6123
0x0000617d      0f1f00         nop dword [rax]
;-- set_ordering:
0x00006180      0fb60f         movzx ecx, byte [rdi]
0x00006183      4889f8         mov rax, rdi                            ; .//src:4020
0x00006186      84c9           test cl, cl
0x00006188      7451           je 0x61db
0x0000618a      4189d0         mov r8d, edx                            ; .//src:4014
0x0000618d      488d3decd600.  lea rdi, [0x00013880]
0x00006194      4c8d1dc54421.  lea r11, obj.nonprinting                ; 0x21a660
0x0000619b      4c8d15be4221.  lea r10, obj.fold_toupper               ; 0x21a460
0x000061a2      4c8d0db74321.  lea r9, obj.nondictionary               ; 0x21a560
0x000061a9      4183e0fd       and r8d, 0xfffffffd                     ; .//src:4047 ; 4294967293
0x000061ad      83ea01         sub edx, 1
0x000061b0      83e94d         sub ecx, 0x4d
0x000061b3      80f925         cmp cl, 0x25
0x000061b6      7723           ja 0x61db
0x000061b8      0fb6c9         movzx ecx, cl
0x000061bb      48630c8f       movsxd rcx, dword [rdi + rcx*4]
0x000061bf      4801f9         add rcx, rdi
0x000061c2      ffe1           jmp rcx
0x000061c4      0f1f4000       nop dword [rax]
0x000061c8      c6463701       mov byte [rsi + 0x37], 1
0x000061cc      0f1f4000       nop dword [rax]
0x000061d0      4883c001       add rax, 1
0x000061d4      0fb608         movzx ecx, byte [rax]
0x000061d7      84c9           test cl, cl
0x000061d9      75d5           jne 0x61b0
0x000061db      f3c3           ret
0x000061dd      0f1f00         nop dword [rax]
0x000061e0      c6463201       mov byte [rsi + 0x32], 1
0x000061e4      ebea           jmp 0x61d0
0x000061e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000061f0      48837e2000     cmp qword [rsi + 0x20], 0
0x000061f5      75d9           jne 0x61d0                              ; .//src:4027
0x000061f7      4c895e20       mov qword [rsi + 0x20], r11
0x000061fb      ebd3           jmp 0x61d0
0x000061fd      0f1f00         nop dword [rax]
0x00006200      c6463501       mov byte [rsi + 0x35], 1
0x00006204      ebca           jmp 0x61d0
0x00006206      662e0f1f8400.  nop word cs:[rax + rax]
0x00006210      c6463401       mov byte [rsi + 0x34], 1
0x00006214      ebba           jmp 0x61d0
0x00006216      662e0f1f8400.  nop word cs:[rax + rax]
0x00006220      4c895628       mov qword [rsi + 0x28], r10
0x00006224      ebaa           jmp 0x61d0
0x00006226      662e0f1f8400.  nop word cs:[rax + rax]                 ; .//src:4015
0x00006230      4c894e20       mov qword [rsi + 0x20], r9
0x00006234      eb9a           jmp 0x61d0
0x00006236      662e0f1f8400.  nop word cs:[rax + rax]
0x00006240      4585c0         test r8d, r8d
0x00006243      7504           jne 0x6249
0x00006245      c6463001       mov byte [rsi + 0x30], 1                ; .//src:4051
0x00006249      83fa01         cmp edx, 1
0x0000624c      7782           ja 0x61d0
0x0000624e      c6463101       mov byte [rsi + 0x31], 1
0x00006252      e979ffffff     jmp 0x61d0
0x00006257      660f1f840000.  nop word [rax + rax]
0x00006260      c6463801       mov byte [rsi + 0x38], 1
0x00006264      e967ffffff     jmp 0x61d0
0x00006269      0f1f80000000.  nop dword [rax]
0x00006270      c6463601       mov byte [rsi + 0x36], 1
0x00006274      e957ffffff     jmp 0x61d0
0x00006279      0f1f80000000.  nop dword [rax]
0x00006280      c6463301       mov byte [rsi + 0x33], 1
0x00006284      e947ffffff     jmp 0x61d0
0x00006289      0f1f80000000.  nop dword [rax]                         ; .//src:3928
;-- struct_month_cmp:
0x00006290      488b36         mov rsi, qword [rsi]
0x00006293      488b3f         mov rdi, qword [rdi]
0x00006296      e9a5cbffff     jmp sym.imp.strcmp
0x0000629b      0f1f440000     nop dword [rax + rax]
;-- incompatible_options:
0x000062a0      53             push rbx
0x000062a1      488d3548dc00.  lea rsi, str.options____s__are_incompatible ; 0x13ef0 ; "options '-%s' are incompatible"
0x000062a8      4889fb         mov rbx, rdi
0x000062ab      ba05000000     mov edx, 5
0x000062b0      31ff           xor edi, edi
0x000062b2      e8b9c9ffff     call sym.imp.dcgettext
0x000062b7      4889d9         mov rcx, rbx
0x000062ba      4889c2         mov rdx, rax
0x000062bd      31f6           xor esi, esi
0x000062bf      bf02000000     mov edi, 2
0x000062c4      31c0           xor eax, eax
0x000062c6      e815cdffff     call sym.imp.error
0x000062cb      0f1f440000     nop dword [rax + rax]
;-- sighandler:
0x000062d0      55             push rbp
0x000062d1      53             push rbx
0x000062d2      89fd           mov ebp, edi                            ; .//src:688
0x000062d4      4883ec08       sub rsp, 8
0x000062d8      488b1da94021.  mov rbx, qword [obj.temphead]           ; [0x21a388:8]=0
0x000062df      4885db         test rbx, rbx
0x000062e2      7415           je 0x62f9
0x000062e4      0f1f4000       nop dword [rax]
0x000062e8      488d7b0d       lea rdi, [rbx + 0xd]
0x000062ec      e82fc8ffff     call sym.imp.unlink
0x000062f1      488b1b         mov rbx, qword [rbx]
0x000062f4      4885db         test rbx, rbx                           ; .//src:3999
0x000062f7      75ef           jne 0x62e8
0x000062f9      89ef           mov edi, ebp
0x000062fb      31f6           xor esi, esi
0x000062fd      48c705804021.  mov qword [obj.temphead], 0             ; [0x21a388:8]=0
0x00006308      e843cbffff     call sym.imp.signal
0x0000630d      4883c408       add rsp, 8                              ; .//src:280
0x00006311      89ef           mov edi, ebp
0x00006313      5b             pop rbx
0x00006314      5d             pop rbp
0x00006315      e9b6c7ffff     jmp sym.imp.raise
0x0000631a      660f1f440000   nop word [rax + rax]
;-- sort_die:
0x00006320      55             push rbp
0x00006321      53             push rbx
0x00006322      4889f2         mov rdx, rsi
0x00006325      4889fb         mov rbx, rdi
0x00006328      4883ec08       sub rsp, 8
0x0000632c      4885f6         test rsi, rsi
0x0000632f      742f           je 0x6360
0x00006331      be03000000     mov esi, 3
0x00006336      31ff           xor edi, edi
0x00006338      e8839e0000     call sym.quotearg_n_style_colon
0x0000633d      4889c5         mov rbp, rax
0x00006340      e8cbc7ffff     call sym.imp.__errno_location
0x00006345      8b30           mov esi, dword [rax]
0x00006347      488d15a5f000.  lea rdx, str.s:__s                      ; 0x153f3 ; "%s: %s"
0x0000634e      4989e8         mov r8, rbp
0x00006351      4889d9         mov rcx, rbx
0x00006354      bf02000000     mov edi, 2
0x00006359      31c0           xor eax, eax
0x0000635b      e880ccffff     call sym.imp.error
0x00006360      488d357cf000.  lea rsi, str.standard_output            ; 0x153e3 ; "standard output"
0x00006367      ba05000000     mov edx, 5
0x0000636c      31ff           xor edi, edi
0x0000636e      e8fdc8ffff     call sym.imp.dcgettext
0x00006373      4889c2         mov rdx, rax
0x00006376      ebb9           jmp 0x6331
0x00006378      0f1f84000000.  nop dword [rax + rax]
;-- get_outstatus:
0x00006380      4883ec08       sub rsp, 8
0x00006384      8b05463f2100   mov eax, dword [obj.outstat_errno.8472] ; [0x21a2d0:4]=0
0x0000638a      85c0           test eax, eax
0x0000638c      741a           je 0x63a8
0x0000638e      85c0           test eax, eax
0x00006390      488d05a93e21.  lea rax, obj.outstat.8473               ; 0x21a240
0x00006397      ba00000000     mov edx, 0
0x0000639c      480f49c2       cmovns rax, rdx
0x000063a0      4883c408       add rsp, 8
0x000063a4      c3             ret
0x000063a5      0f1f00         nop dword [rax]
0x000063a8      488d15913e21.  lea rdx, obj.outstat.8473               ; 0x21a240
0x000063af      be01000000     mov esi, 1
0x000063b4      bf01000000     mov edi, 1
0x000063b9      e862cbffff     call sym.imp.__fxstat                   ; .//src:770
0x000063be      85c0           test eax, eax
0x000063c0      7416           je 0x63d8
0x000063c2      e849c7ffff     call sym.imp.__errno_location
0x000063c7      8b00           mov eax, dword [rax]
0x000063c9      8905013f2100   mov dword [obj.outstat_errno.8472], eax ; [0x21a2d0:4]=0
0x000063cf      ebbd           jmp 0x638e
0x000063d1      0f1f80000000.  nop dword [rax]                         ; .//src:1109
0x000063d8      c705ee3e2100.  mov dword [obj.outstat_errno.8472], 0xffffffff ; [0x21a2d0:4]=0
0x000063e2      488d05573e21.  lea rax, obj.outstat.8473               ; 0x21a240
0x000063e9      4883c408       add rsp, 8
0x000063ed      c3             ret
0x000063ee      6690           nop
;-- add_temp_dir:
0x000063f0      488b35514021.  mov rsi, qword [obj.temp_dir_count]     ; [0x21a448:8]=0
0x000063f7      483b35424021.  cmp rsi, qword [obj.temp_dir_alloc]     ; [0x21a440:8]=0
0x000063fe      53             push rbx
0x000063ff      4889fb         mov rbx, rdi
0x00006402      488b3d474021.  mov rdi, qword [obj.temp_dirs]          ; [0x21a450:8]=0
0x00006409      7415           je 0x6420
0x0000640b      488d4601       lea rax, [rsi + 1]
0x0000640f      48891cf7       mov qword [rdi + rsi*8], rbx
0x00006413      5b             pop rbx
0x00006414      4889052d4021.  mov qword [obj.temp_dir_count], rax     ; [0x21a448:8]=0
0x0000641b      c3             ret
0x0000641c      0f1f4000       nop dword [rax]
0x00006420      4885ff         test rdi, rdi                           ; stat.h:78 typedef __uid_t uid_t;
0x00006423      7443           je 0x6468
0x00006425      48b8a9aaaaaa.  movabs rax, 0xaaaaaaaaaaaaaa9
0x0000642f      4839c6         cmp rsi, rax
0x00006432      7759           ja 0x648d
0x00006434      4889f0         mov rax, rsi
0x00006437      48d1e8         shr rax, 1
0x0000643a      488d740601     lea rsi, [rsi + rax + 1]                ; .//src:1111
0x0000643f      488935fa3f21.  mov qword [obj.temp_dir_alloc], rsi     ; [0x21a440:8]=0
0x00006446      48c1e603       shl rsi, 3
0x0000644a      e8f1b90000     call sym.xrealloc
0x0000644f      488b35f23f21.  mov rsi, qword [obj.temp_dir_count]     ; [0x21a448:8]=0
0x00006456      4889c7         mov rdi, rax                            ; stat.h:61 # endif
0x00006459      488905f03f21.  mov qword [obj.temp_dirs], rax          ; [0x21a450:8]=0
0x00006460      eba9           jmp 0x640b
0x00006462      660f1f440000   nop word [rax + rax]
0x00006468      4885f6         test rsi, rsi
0x0000646b      b810000000     mov eax, 0x10
0x00006470      ba08000000     mov edx, 8
0x00006475      480f44f0       cmove rsi, rax
0x00006479      4889d0         mov rax, rdx
0x0000647c      31c9           xor ecx, ecx
0x0000647e      48f7e6         mul rsi
0x00006481      700f           jo 0x6492                               ; .//src:1454
0x00006483      4885c0         test rax, rax
0x00006486      7805           js 0x648d
0x00006488      4885c9         test rcx, rcx
0x0000648b      74b2           je 0x643f
0x0000648d      e89ebb0000     call sym.xalloc_die
0x00006492      b901000000     mov ecx, 1
0x00006497      ebea           jmp 0x6483
0x00006499      0f1f80000000.  nop dword [rax]
;-- initbuf:
0x000064a0      4155           push r13
0x000064a2      4154           push r12
0x000064a4      4989f5         mov r13, rsi                            ; .//src:1466
0x000064a7      55             push rbp
0x000064a8      53             push rbx
0x000064a9      4889fd         mov rbp, rdi                            ; .//src:1461
0x000064ac      4889d3         mov rbx, rdx
0x000064af      4c8d6601       lea r12, [rsi + 1]
0x000064b3      4883ec08       sub rsp, 8
0x000064b7      eb0f           jmp 0x64c8
0x000064b9      0f1f80000000.  nop dword [rax]                         ; .//src:1463
0x000064c0      48d1eb         shr rbx, 1
0x000064c3      4939dc         cmp r12, rbx
0x000064c6      7348           jae 0x6510                              ; .//src:1471
0x000064c8      4883e3e0       and rbx, 0xffffffffffffffe0
0x000064cc      4883c320       add rbx, 0x20                           ; "@"
0x000064d0      4889df         mov rdi, rbx
0x000064d3      e8f0ccffff     call 0x31c8
0x000064d8      4885c0         test rax, rax
0x000064db      48894500       mov qword [rbp], rax
0x000064df      74df           je 0x64c0
0x000064e1      4c896d28       mov qword [rbp + 0x28], r13
0x000064e5      48895d18       mov qword [rbp + 0x18], rbx
0x000064e9      48c745100000.  mov qword [rbp + 0x10], 0
0x000064f1      48c745200000.  mov qword [rbp + 0x20], 0               ; .//src:1467
0x000064f9      48c745080000.  mov qword [rbp + 8], 0
0x00006501      c6453000       mov byte [rbp + 0x30], 0                ; .//src:2143
0x00006505      4883c408       add rsp, 8
0x00006509      5b             pop rbx                                 ; .//src:2144
0x0000650a      5d             pop rbp
0x0000650b      415c           pop r12
0x0000650d      415d           pop r13
0x0000650f      c3             ret
0x00006510      e81bbb0000     call sym.xalloc_die
0x00006515      90             nop
0x00006516      662e0f1f8400.  nop word cs:[rax + rax]
;-- debug_width:
0x00006520      55             push rbp
0x00006521      53             push rbx                                ; .//src:2146
0x00006522      4889f5         mov rbp, rsi
0x00006525      4889fb         mov rbx, rdi
0x00006528      4829fe         sub rsi, rdi
0x0000652b      31d2           xor edx, edx
0x0000652d      4883ec08       sub rsp, 8
0x00006531      e8ea770000     call sym.mbsnwidth                      ; .//src:2145
0x00006536      4839dd         cmp rbp, rbx                            ; .//src:2148
0x00006539      4898           cdqe
0x0000653b      7618           jbe 0x6555
0x0000653d      0f1f00         nop dword [rax]
0x00006540      4883c301       add rbx, 1
0x00006544      31d2           xor edx, edx
0x00006546      807bff09       cmp byte [rbx - 1], 9
0x0000654a      0f94c2         sete dl
0x0000654d      4801d0         add rax, rdx
0x00006550      4839dd         cmp rbp, rbx
0x00006553      75eb           jne 0x6540
0x00006555      4883c408       add rsp, 8
0x00006559      5b             pop rbx                                 ; .//src:1990
0x0000655a      5d             pop rbp
0x0000655b      c3             ret
0x0000655c      0f1f4000       nop dword [rax]                         ; .//src:1989
;-- xstrxfrm:
0x00006560      4155           push r13
0x00006562      4154           push r12
0x00006564      4989d5         mov r13, rdx
0x00006567      55             push rbp
0x00006568      53             push rbx
0x00006569      4989fc         mov r12, rdi
0x0000656c      4889f5         mov rbp, rsi
0x0000656f      4883ec08       sub rsp, 8
0x00006573      e898c5ffff     call sym.imp.__errno_location
0x00006578      4c89ea         mov rdx, r13
0x0000657b      4889c3         mov rbx, rax
0x0000657e      c70000000000   mov dword [rax], 0
0x00006584      4889ee         mov rsi, rbp
0x00006587      4c89e7         mov rdi, r12
0x0000658a      e8a1c8ffff     call sym.imp.strxfrm
0x0000658f      8b13           mov edx, dword [rbx]
0x00006591      85d2           test edx, edx
0x00006593      750b           jne 0x65a0
0x00006595      4883c408       add rsp, 8
0x00006599      5b             pop rbx
0x0000659a      5d             pop rbp
0x0000659b      415c           pop r12
0x0000659d      415d           pop r13
0x0000659f      c3             ret
0x000065a0      488d3553ee00.  lea rsi, str.string_transformation_failed ; 0x153fa ; "string transformation failed"
0x000065a7      ba05000000     mov edx, 5
0x000065ac      31ff           xor edi, edi
0x000065ae      e8bdc6ffff     call sym.imp.dcgettext
0x000065b3      8b33           mov esi, dword [rbx]
0x000065b5      4889c2         mov rdx, rax
0x000065b8      31ff           xor edi, edi
0x000065ba      31c0           xor eax, eax
0x000065bc      e81fcaffff     call sym.imp.error
0x000065c1      488d3570d900.  lea rsi, str.set_LC_ALL__C__to_work_around_the_problem ; 0x13f38 ; "set LC_ALL='C' to work around the problem"
0x000065c8      ba05000000     mov edx, 5
0x000065cd      31ff           xor edi, edi
0x000065cf      e89cc6ffff     call sym.imp.dcgettext
0x000065d4      31f6           xor esi, esi
0x000065d6      4889c2         mov rdx, rax
0x000065d9      31ff           xor edi, edi
0x000065db      31c0           xor eax, eax
0x000065dd      e8fec9ffff     call sym.imp.error
0x000065e2      4889ea         mov rdx, rbp
0x000065e5      be08000000     mov esi, 8
0x000065ea      31ff           xor edi, edi
0x000065ec      e8af990000     call sym.quotearg_n_style
0x000065f1      488d3570d900.  lea rsi, str.the_untransformed_string_was__s ; 0x13f68 ; "the untransformed string was %s"
0x000065f8      4889c3         mov rbx, rax
0x000065fb      ba05000000     mov edx, 5
0x00006600      31ff           xor edi, edi
0x00006602      e869c6ffff     call sym.imp.dcgettext
0x00006607      4889d9         mov rcx, rbx
0x0000660a      4889c2         mov rdx, rax
0x0000660d      31f6           xor esi, esi
0x0000660f      bf02000000     mov edi, 2
0x00006614      31c0           xor eax, eax
0x00006616      e8c5c9ffff     call sym.imp.error
0x0000661b      0f1f440000     nop dword [rax + rax]                   ; .//src:589
;-- reap:
0x00006620      55             push rbp
0x00006621      53             push rbx
0x00006622      31d2           xor edx, edx
0x00006624      89fb           mov ebx, edi
0x00006626      4883ec38       sub rsp, 0x38
0x0000662a      64488b042528.  mov rax, qword fs:[0x28]
0x00006633      4889442428     mov qword [rsp + 0x28], rax
0x00006638      31c0           xor eax, eax
0x0000663a      488d74240c     lea rsi, [rsp + 0xc]
0x0000663f      85ff           test edi, edi
0x00006641      bfffffffff     mov edi, 0xffffffff                     ; -1
0x00006646      0f94c2         sete dl
0x00006649      0f45fb         cmovne edi, ebx
0x0000664c      e89fc9ffff     call sym.imp.waitpid
0x00006651      85c0           test eax, eax
0x00006653      0f889a000000   js 0x66f3
0x00006659      89c5           mov ebp, eax
0x0000665b      7418           je 0x6675
0x0000665d      85db           test ebx, ebx
0x0000665f      7e37           jle 0x6698
0x00006661      8b44240c       mov eax, dword [rsp + 0xc]
0x00006665      a87f           test al, 0x7f
0x00006667      754f           jne 0x66b8
0x00006669      f6c4ff         test ah, 0xff
0x0000666c      754a           jne 0x66b8
0x0000666e      832d073d2100.  sub dword [obj.nprocs], 1               ; [0x21a37c:4]=0
0x00006675      488b4c2428     mov rcx, qword [rsp + 0x28]
0x0000667a      6448330c2528.  xor rcx, qword fs:[0x28]
0x00006683      89e8           mov eax, ebp
0x00006685      0f85ab000000   jne 0x6736                              ; .//src:635
0x0000668b      4883c438       add rsp, 0x38
0x0000668f      5b             pop rbx
0x00006690      5d             pop rbp
0x00006691      c3             ret
0x00006692      660f1f440000   nop word [rax + rax]
0x00006698      488b3de13c21.  mov rdi, qword [obj.proctab]            ; [0x21a380:8]=0
0x0000669f      488d742410     lea rsi, [rsp + 0x10]
0x000066a4      89442418       mov dword [rsp + 0x18], eax
0x000066a8      e863700000     call sym.hash_delete
0x000066ad      4885c0         test rax, rax
0x000066b0      74c3           je 0x6675
0x000066b2      c6400c02       mov byte [rax + 0xc], 2
0x000066b6      eba9           jmp 0x6661
0x000066b8      488b35693d21.  mov rsi, qword [obj.compress_program]   ; [0x21a428:8]=0
0x000066bf      bf04000000     mov edi, 4
0x000066c4      e8f7990000     call sym.quotearg_style
0x000066c9      488d355bed00.  lea rsi, str.s___d__terminated_abnormally ; 0x1542b ; "%s [-d] terminated abnormally"
0x000066d0      4889c3         mov rbx, rax
0x000066d3      ba05000000     mov edx, 5
0x000066d8      31ff           xor edi, edi
0x000066da      e891c5ffff     call sym.imp.dcgettext
0x000066df      4889d9         mov rcx, rbx
0x000066e2      4889c2         mov rdx, rax
0x000066e5      31f6           xor esi, esi
0x000066e7      bf02000000     mov edi, 2
0x000066ec      31c0           xor eax, eax
0x000066ee      e8edc8ffff     call sym.imp.error
0x000066f3      488b352e3d21.  mov rsi, qword [obj.compress_program]   ; [0x21a428:8]=0
0x000066fa      bf04000000     mov edi, 4
0x000066ff      e8bc990000     call sym.quotearg_style
0x00006704      488d350ced00.  lea rsi, str.waiting_for__s___d         ; 0x15417 ; "waiting for %s [-d]"
0x0000670b      ba05000000     mov edx, 5
0x00006710      31ff           xor edi, edi
0x00006712      4889c5         mov rbp, rax
0x00006715      e856c5ffff     call sym.imp.dcgettext
0x0000671a      4889c3         mov rbx, rax
0x0000671d      e8eec3ffff     call sym.imp.__errno_location
0x00006722      8b30           mov esi, dword [rax]
0x00006724      4889e9         mov rcx, rbp
0x00006727      4889da         mov rdx, rbx
0x0000672a      bf02000000     mov edi, 2
0x0000672f      31c0           xor eax, eax
0x00006731      e8aac8ffff     call sym.imp.error
0x00006736      e865c5ffff     call sym.imp.__stack_chk_fail           ; .//src:648
0x0000673b      0f1f440000     nop dword [rax + rax]
;-- wait_proc:
0x00006740      53             push rbx
0x00006741      89fb           mov ebx, edi
0x00006743      4883ec20       sub rsp, 0x20
0x00006747      897c2408       mov dword [rsp + 8], edi
0x0000674b      488b3d2e3c21.  mov rdi, qword [obj.proctab]            ; .//src:637 ; [0x21a380:8]=0
0x00006752      4889e6         mov rsi, rsp
0x00006755      64488b042528.  mov rax, qword fs:[0x28]
0x0000675e      4889442418     mov qword [rsp + 0x18], rax
0x00006763      31c0           xor eax, eax
0x00006765      e8a66f0000     call sym.hash_delete
0x0000676a      4885c0         test rax, rax
0x0000676d      740b           je 0x677a
0x0000676f      c6400c02       mov byte [rax + 0xc], 2
0x00006773      89df           mov edi, ebx
0x00006775      e8a6feffff     call sym.reap
0x0000677a      488b442418     mov rax, qword [rsp + 0x18]
0x0000677f      644833042528.  xor rax, qword fs:[0x28]
0x00006788      7506           jne 0x6790
0x0000678a      4883c420       add rsp, 0x20
0x0000678e      5b             pop rbx
0x0000678f      c3             ret
0x00006790      e80bc5ffff     call sym.imp.__stack_chk_fail
0x00006795      90             nop                                     ; .//src:623
0x00006796      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_proc:
0x000067a0      53             push rbx
0x000067a1      4889fb         mov rbx, rdi
0x000067a4      488b3dd53b21.  mov rdi, qword [obj.proctab]            ; [0x21a380:8]=0
0x000067ab      4885ff         test rdi, rdi
0x000067ae      7418           je 0x67c8
0x000067b0      c6430c01       mov byte [rbx + 0xc], 1
0x000067b4      4889de         mov rsi, rbx
0x000067b7      e8f46e0000     call sym.hash_insert
0x000067bc      4885c0         test rax, rax
0x000067bf      7433           je 0x67f4
0x000067c1      5b             pop rbx
0x000067c2      c3             ret
0x000067c3      0f1f440000     nop dword [rax + rax]
0x000067c8      488d0da1f6ff.  lea rcx, sym.proctab_comparator         ; 0x5e70
0x000067cf      488d158af6ff.  lea rdx, sym.proctab_hasher             ; 0x5e60 ; "HcG\b1\xd2H\xf7\xf6H\x89\xd0\xc3\x0f\x1f"
0x000067d6      4531c0         xor r8d, r8d
0x000067d9      31f6           xor esi, esi
0x000067db      bf2f000000     mov edi, 0x2f                           ; '/'
0x000067e0      e8cb660000     call sym.hash_initialize
0x000067e5      4885c0         test rax, rax
0x000067e8      4889c7         mov rdi, rax
0x000067eb      4889058e3b21.  mov qword [obj.proctab], rax            ; [0x21a380:8]=0
0x000067f2      75bc           jne 0x67b0
0x000067f4      e837b80000     call sym.xalloc_die
0x000067f9      0f1f80000000.  nop dword [rax]
;-- init_node:
0x00006800      4157           push r15
0x00006802      4c89c0         mov rax, r8                             ; .//src:3176
0x00006805      4156           push r14
0x00006807      4155           push r13
0x00006809      4154           push r12
0x0000680b      48c1e005       shl rax, 5
0x0000680f      55             push rbp
0x00006810      53             push rbx
0x00006811      4829c2         sub rdx, rax
0x00006814      4889f3         mov rbx, rsi
0x00006817      4989cf         mov r15, rcx
0x0000681a      4d89c4         mov r12, r8
0x0000681d      4883ec08       sub rsp, 8
0x00006821      4584c9         test r9b, r9b                           ; .//src:3180
0x00006824      4889d5         mov rbp, rdx
0x00006827      0f848b000000   je 0x68b8
0x0000682d      488b4728       mov rax, qword [rdi + 0x28]
0x00006831      4989ee         mov r14, rbp
0x00006834      4889c2         mov rdx, rax
0x00006837      48d1ea         shr rdx, 1
0x0000683a      4889d1         mov rcx, rdx
0x0000683d      4829d0         sub rax, rdx                            ; .//src:3184
0x00006840      48c1e105       shl rcx, 5
0x00006844      4929ce         sub r14, rcx                            ; .//src:3185
0x00006847      488d4f10       lea rcx, [rdi + 0x10]
0x0000684b      48894330       mov qword [rbx + 0x30], rax
0x0000684f      8b4750         mov eax, dword [rdi + 0x50]             ; .//src:3190
0x00006852      31f6           xor esi, esi                            ; .//src:3185
0x00006854      48897b38       mov qword [rbx + 0x38], rdi
0x00006858      488d7b58       lea rdi, [rbx + 0x58]
0x0000685c      48896b10       mov qword [rbx + 0x10], rbp
0x00006860      48892b         mov qword [rbx], rbp
0x00006863      4c897318       mov qword [rbx + 0x18], r14
0x00006867      4c8dab800000.  lea r13, [rbx + 0x80]
0x0000686e      83c001         add eax, 1
0x00006871      4c897308       mov qword [rbx + 8], r14
0x00006875      48894b20       mov qword [rbx + 0x20], rcx
0x00006879      48895328       mov qword [rbx + 0x28], rdx
0x0000687d      894350         mov dword [rbx + 0x50], eax
0x00006880      c6435400       mov byte [rbx + 0x54], 0                ; .//src:3211
0x00006884      e8e7c8ffff     call sym.imp.pthread_mutex_init
0x00006889      4983ff01       cmp r15, 1
0x0000688d      7751           ja 0x68e0
0x0000688f      48c743400000.  mov qword [rbx + 0x40], 0
0x00006897      48c743480000.  mov qword [rbx + 0x48], 0
0x0000689f      4883c408       add rsp, 8
0x000068a3      5b             pop rbx
0x000068a4      4c89e8         mov rax, r13
0x000068a7      5d             pop rbp
0x000068a8      415c           pop r12
0x000068aa      415d           pop r13
0x000068ac      415e           pop r14                                 ; .//src:3180
0x000068ae      415f           pop r15
0x000068b0      c3             ret
0x000068b1      0f1f80000000.  nop dword [rax]
0x000068b8      488b4730       mov rax, qword [rdi + 0x30]
0x000068bc      4989ee         mov r14, rbp
0x000068bf      4889c2         mov rdx, rax
0x000068c2      48d1ea         shr rdx, 1
0x000068c5      4889d1         mov rcx, rdx
0x000068c8      4829d0         sub rax, rdx                            ; .//src:3199
0x000068cb      48c1e105       shl rcx, 5                              ; .//src:3196
0x000068cf      4929ce         sub r14, rcx
0x000068d2      488d4f18       lea rcx, [rdi + 0x18]
0x000068d6      e970ffffff     jmp 0x684b
0x000068db      0f1f440000     nop dword [rax + rax]
0x000068e0      4c89f9         mov rcx, r15                            ; .//src:3199
0x000068e3      4c896b40       mov qword [rbx + 0x40], r13
0x000068e7      4d89e0         mov r8, r12
0x000068ea      48d1e9         shr rcx, 1
0x000068ed      4889ea         mov rdx, rbp                            ; .//src:3202
0x000068f0      4c89ee         mov rsi, r13
0x000068f3      4889df         mov rdi, rbx
0x000068f6      41b901000000   mov r9d, 1
0x000068fc      4929cf         sub r15, rcx
0x000068ff      e8fcfeffff     call sym.init_node
0x00006904      48894348       mov qword [rbx + 0x48], rax             ; .//src:3143
0x00006908      4883c408       add rsp, 8
0x0000690c      4d89e0         mov r8, r12
0x0000690f      4c89f9         mov rcx, r15
0x00006912      4c89f2         mov rdx, r14                            ; .//src:3145
0x00006915      4889df         mov rdi, rbx
0x00006918      5b             pop rbx
0x00006919      5d             pop rbp
0x0000691a      415c           pop r12
0x0000691c      415d           pop r13
0x0000691e      415e           pop r14
0x00006920      415f           pop r15
0x00006922      4531c9         xor r9d, r9d
0x00006925      4889c6         mov rsi, rax
0x00006928      e9d3feffff     jmp sym.init_node
0x0000692d      0f1f00         nop dword [rax]                         ; .//src:3148
;-- queue_insert:
0x00006930      4154           push r12                                ; .//src:3149
0x00006932      55             push rbp
0x00006933      488d6f08       lea rbp, [rdi + 8]                      ; .//src:3148
0x00006937      53             push rbx
0x00006938      4889fb         mov rbx, rdi
0x0000693b      4989f4         mov r12, rsi
0x0000693e      4889ef         mov rdi, rbp
0x00006941      e85ac8ffff     call sym.imp.pthread_mutex_lock         ; .//src:1370
0x00006946      488b3b         mov rdi, qword [rbx]
0x00006949      4c89e6         mov rsi, r12
0x0000694c      e88f700000     call sym.heap_insert
0x00006951      488d7b30       lea rdi, [rbx + 0x30]
0x00006955      41c644245401   mov byte [r12 + 0x54], 1
0x0000695b      e8a0c4ffff     call sym.imp.pthread_cond_signal
0x00006960      5b             pop rbx
0x00006961      4889ef         mov rdi, rbp
0x00006964      5d             pop rbp
0x00006965      415c           pop r12
0x00006967      e984c5ffff     jmp sym.imp.pthread_mutex_unlock
0x0000696c      0f1f4000       nop dword [rax]                         ; .//src:1374
;-- begfield.isra.1:
0x00006970      488d4437ff     lea rax, [rdi + rsi - 1]                ; .//src:1373
0x00006975      8b35ad362100   mov esi, dword [obj.tab]                ; [0x21a028:4]=128
0x0000697b      4c8b12         mov r10, qword [rdx]
0x0000697e      4c8b4a08       mov r9, qword [rdx + 8]
0x00006982      81fe80000000   cmp esi, 0x80
0x00006988      746e           je 0x69f8
0x0000698a      4839f8         cmp rax, rdi
0x0000698d      765b           jbe 0x69ea
0x0000698f      4d85d2         test r10, r10                           ; .//src:1389
0x00006992      4d8d42ff       lea r8, [r10 - 1]
0x00006996      7511           jne 0x69a9
0x00006998      eb29           jmp 0x69c3
0x0000699a      660f1f440000   nop word [rax + rax]
0x000069a0      4883c701       add rdi, 1
0x000069a4      4839f8         cmp rax, rdi                            ; .//src:1391
0x000069a7      7441           je 0x69ea
0x000069a9      0fbe0f         movsx ecx, byte [rdi]
0x000069ac      39ce           cmp esi, ecx
0x000069ae      75f0           jne 0x69a0
0x000069b0      4883c701       add rdi, 1
0x000069b4      4839f8         cmp rax, rdi
0x000069b7      7631           jbe 0x69ea
0x000069b9      4983e801       sub r8, 1
0x000069bd      4983f8ff       cmp r8, 0xffffffffffffffff
0x000069c1      75e6           jne 0x69a9
0x000069c3      807a3000       cmp byte [rdx + 0x30], 0
0x000069c7      488d0d923d21.  lea rcx, obj.blanks                     ; 0x21a760
0x000069ce      7511           jne 0x69e1
0x000069d0      eb18           jmp 0x69ea
0x000069d2      660f1f440000   nop word [rax + rax]
0x000069d8      4883c701       add rdi, 1
0x000069dc      4839f8         cmp rax, rdi                            ; .//src:1382
0x000069df      7609           jbe 0x69ea
0x000069e1      0fb617         movzx edx, byte [rdi]
0x000069e4      803c1100       cmp byte [rcx + rdx], 0
0x000069e8      75ee           jne 0x69d8
0x000069ea      4c01cf         add rdi, r9
0x000069ed      4839f8         cmp rax, rdi
0x000069f0      480f47c7       cmova rax, rdi
0x000069f4      c3             ret
0x000069f5      0f1f00         nop dword [rax]
0x000069f8      4839f8         cmp rax, rdi
0x000069fb      76ed           jbe 0x69ea
0x000069fd      4d85d2         test r10, r10
0x00006a00      4d8d42ff       lea r8, [r10 - 1]
0x00006a04      488d0d553d21.  lea rcx, obj.blanks                     ; .//src:1384 ; 0x21a760
0x00006a0b      750c           jne 0x6a19
0x00006a0d      ebb4           jmp 0x69c3
0x00006a0f      90             nop
0x00006a10      4883c701       add rdi, 1
0x00006a14      4839f8         cmp rax, rdi
0x00006a17      74d1           je 0x69ea
0x00006a19      0fb637         movzx esi, byte [rdi]
0x00006a1c      803c3100       cmp byte [rcx + rsi], 0
0x00006a20      75ee           jne 0x6a10
0x00006a22      4883c701       add rdi, 1
0x00006a26      4839f8         cmp rax, rdi
0x00006a29      76bf           jbe 0x69ea
0x00006a2b      0fb637         movzx esi, byte [rdi]
0x00006a2e      803c3100       cmp byte [rcx + rsi], 0
0x00006a32      7516           jne 0x6a4a
0x00006a34      0f1f4000       nop dword [rax]
0x00006a38      4883c701       add rdi, 1                              ; .//src:1406
0x00006a3c      4839f8         cmp rax, rdi                            ; .//src:1418
0x00006a3f      76a9           jbe 0x69ea
0x00006a41      0fb637         movzx esi, byte [rdi]
0x00006a44      803c3100       cmp byte [rcx + rsi], 0
0x00006a48      74ee           je 0x6a38
0x00006a4a      4983e801       sub r8, 1
0x00006a4e      4983f8ff       cmp r8, 0xffffffffffffffff
0x00006a52      75c5           jne 0x6a19
0x00006a54      e96affffff     jmp 0x69c3
0x00006a59      0f1f80000000.  nop dword [rax]
;-- limfield.isra.2:
0x00006a60      4c8b4a18       mov r9, qword [rdx + 0x18]
0x00006a64      4889f8         mov rax, rdi
0x00006a67      488d4c37ff     lea rcx, [rdi + rsi - 1]
0x00006a6c      4c8b5210       mov r10, qword [rdx + 0x10]             ; .//src:1422
0x00006a70      8b3db2352100   mov edi, dword [obj.tab]                ; .//src:1421 ; [0x21a028:4]=128
0x00006a76      4983f901       cmp r9, 1
0x00006a7a      4983d200       adc r10, 0
0x00006a7e      81ff80000000   cmp edi, 0x80
0x00006a84      0f848e000000   je 0x6b18
0x00006a8a      4839c1         cmp rcx, rax
0x00006a8d      7649           jbe 0x6ad8
0x00006a8f      4d85d2         test r10, r10
0x00006a92      4d8d42ff       lea r8, [r10 - 1]
0x00006a96      7511           jne 0x6aa9
0x00006a98      eb3e           jmp 0x6ad8
0x00006a9a      660f1f440000   nop word [rax + rax]
0x00006aa0      4883c001       add rax, 1
0x00006aa4      4839c1         cmp rcx, rax
0x00006aa7      742f           je 0x6ad8
0x00006aa9      0fbe30         movsx esi, byte [rax]
0x00006aac      39f7           cmp edi, esi
0x00006aae      75f0           jne 0x6aa0
0x00006ab0      4c89ce         mov rsi, r9                             ; .//src:1364
0x00006ab3      4c09c6         or rsi, r8
0x00006ab6      7508           jne 0x6ac0
0x00006ab8      f3c3           ret
0x00006aba      660f1f440000   nop word [rax + rax]
0x00006ac0      4883c001       add rax, 1
0x00006ac4      4839c1         cmp rcx, rax
0x00006ac7      760f           jbe 0x6ad8
0x00006ac9      4983e801       sub r8, 1
0x00006acd      4983f8ff       cmp r8, 0xffffffffffffffff
0x00006ad1      75d6           jne 0x6aa9
0x00006ad3      0f1f440000     nop dword [rax + rax]
0x00006ad8      4d85c9         test r9, r9
0x00006adb      0f849c000000   je 0x6b7d
0x00006ae1      807a3100       cmp byte [rdx + 0x31], 0
0x00006ae5      7423           je 0x6b0a
0x00006ae7      4839c1         cmp rcx, rax
0x00006aea      761e           jbe 0x6b0a
0x00006aec      488d356d3c21.  lea rsi, obj.blanks                     ; .//src:1301 ; 0x21a760
0x00006af3      eb0c           jmp 0x6b01
0x00006af5      0f1f00         nop dword [rax]
0x00006af8      4883c001       add rax, 1
0x00006afc      4839c1         cmp rcx, rax
0x00006aff      7409           je 0x6b0a
0x00006b01      0fb610         movzx edx, byte [rax]
0x00006b04      803c1600       cmp byte [rsi + rdx], 0
0x00006b08      75ee           jne 0x6af8
0x00006b0a      4c01c8         add rax, r9
0x00006b0d      4839c1         cmp rcx, rax
0x00006b10      480f46c1       cmovbe rax, rcx                         ; .//src:1304
0x00006b14      c3             ret                                     ; .//src:1303
0x00006b15      0f1f00         nop dword [rax]
0x00006b18      4839c1         cmp rcx, rax
0x00006b1b      76bb           jbe 0x6ad8
0x00006b1d      4d85d2         test r10, r10
0x00006b20      4d8d42ff       lea r8, [r10 - 1]
0x00006b24      488d35353c21.  lea rsi, obj.blanks                     ; 0x21a760
0x00006b2b      750c           jne 0x6b39
0x00006b2d      eba9           jmp 0x6ad8
0x00006b2f      90             nop
0x00006b30      4883c001       add rax, 1
0x00006b34      4839c1         cmp rcx, rax                            ; .//src:1249
0x00006b37      749f           je 0x6ad8
0x00006b39      0fb638         movzx edi, byte [rax]
0x00006b3c      803c3e00       cmp byte [rsi + rdi], 0
0x00006b40      75ee           jne 0x6b30
0x00006b42      4883c001       add rax, 1
0x00006b46      4839c1         cmp rcx, rax
0x00006b49      768d           jbe 0x6ad8
0x00006b4b      0fb638         movzx edi, byte [rax]
0x00006b4e      803c3e00       cmp byte [rsi + rdi], 0
0x00006b52      751a           jne 0x6b6e
0x00006b54      0f1f4000       nop dword [rax]
0x00006b58      4883c001       add rax, 1
0x00006b5c      4839c1         cmp rcx, rax
0x00006b5f      0f8673ffffff   jbe 0x6ad8
0x00006b65      0fb638         movzx edi, byte [rax]
0x00006b68      803c3e00       cmp byte [rsi + rdi], 0
0x00006b6c      74ea           je 0x6b58
0x00006b6e      4983e801       sub r8, 1
0x00006b72      4983f8ff       cmp r8, 0xffffffffffffffff
0x00006b76      75c1           jne 0x6b39
0x00006b78      e95bffffff     jmp 0x6ad8
0x00006b7d      c3             ret
0x00006b7e      6690           nop
;-- compare_nodes:
0x00006b80      8b4650         mov eax, dword [rsi + 0x50]
0x00006b83      394750         cmp dword [rdi + 0x50], eax
0x00006b86      7408           je 0x6b90
0x00006b88      0f92c0         setb al
0x00006b8b      0fb6c0         movzx eax, al
0x00006b8e      c3             ret                                     ; .//src:-1463
0x00006b8f      90             nop
0x00006b90      488b5730       mov rdx, qword [rdi + 0x30]
0x00006b94      488b4630       mov rax, qword [rsi + 0x30]
0x00006b98      48035728       add rdx, qword [rdi + 0x28]
0x00006b9c      48034628       add rax, qword [rsi + 0x28]
0x00006ba0      4839c2         cmp rdx, rax
0x00006ba3      0f92c0         setb al                                 ; .//src:-1287
0x00006ba6      0fb6c0         movzx eax, al
0x00006ba9      c3             ret
0x00006baa      660f1f440000   nop word [rax + rax]                    ; .//src:-1462
;-- cs_leave.part.4:
0x00006bb0      488d7708       lea rsi, [rdi + 8]
0x00006bb4      31d2           xor edx, edx
0x00006bb6      bf02000000     mov edi, 2
0x00006bbb      e930bfffff     jmp sym.imp.pthread_sigmask
;-- exit_cleanup:
0x00006bc0      55             push rbp
0x00006bc1      53             push rbx
0x00006bc2      4881ec980000.  sub rsp, 0x98
0x00006bc9      64488b042528.  mov rax, qword fs:[0x28]
0x00006bd2      488984248800.  mov qword [rsp + 0x88], rax
0x00006bda      31c0           xor eax, eax
0x00006bdc      488b05a53721.  mov rax, qword [obj.temphead]           ; [0x21a388:8]=0
0x00006be3      4885c0         test rax, rax
0x00006be6      7454           je 0x6c3c
0x00006be8      4889e5         mov rbp, rsp
0x00006beb      488d35ae3721.  lea rsi, obj.caught_signals             ; 0x21a3a0
0x00006bf2      31ff           xor edi, edi
0x00006bf4      488d5508       lea rdx, [rbp + 8]
0x00006bf8      e8f3beffff     call sym.imp.pthread_sigmask
0x00006bfd      488b1d843721.  mov rbx, qword [obj.temphead]           ; [0x21a388:8]=0
0x00006c04      85c0           test eax, eax
0x00006c06      0f94c0         sete al
0x00006c09      880424         mov byte [rsp], al
0x00006c0c      4885db         test rbx, rbx
0x00006c0f      741c           je 0x6c2d
0x00006c11      0f1f80000000.  nop dword [rax]
0x00006c18      488d7b0d       lea rdi, [rbx + 0xd]
0x00006c1c      e8ffbeffff     call sym.imp.unlink
0x00006c21      488b1b         mov rbx, qword [rbx]
0x00006c24      4885db         test rbx, rbx
0x00006c27      75ef           jne 0x6c18
0x00006c29      0fb60424       movzx eax, byte [rsp]
0x00006c2d      84c0           test al, al
0x00006c2f      48c7054e3721.  mov qword [obj.temphead], 0             ; [0x21a388:8]=0
0x00006c3a      7524           jne 0x6c60
0x00006c3c      e81f460000     call sym.close_stdout
0x00006c41      488b84248800.  mov rax, qword [rsp + 0x88]
0x00006c49      644833042528.  xor rax, qword fs:[0x28]
0x00006c52      7516           jne 0x6c6a
0x00006c54      4881c4980000.  add rsp, 0x98
0x00006c5b      5b             pop rbx
0x00006c5c      5d             pop rbp
0x00006c5d      c3             ret
0x00006c5e      6690           nop
0x00006c60      4889ef         mov rdi, rbp
0x00006c63      e848ffffff     call sym.cs_leave.part.4
0x00006c68      ebd2           jmp 0x6c3c
0x00006c6a      e831c0ffff     call sym.imp.__stack_chk_fail
0x00006c6f      90             nop
;-- zaptemp:
0x00006c70      4157           push r15
0x00006c72      4156           push r14
0x00006c74      4155           push r13
0x00006c76      4154           push r12
0x00006c78      4c8d2d093721.  lea r13, obj.temphead                   ; 0x21a388
0x00006c7f      55             push rbp                                ; .//src:-1463
0x00006c80      53             push rbx
0x00006c81      4889fd         mov rbp, rdi
0x00006c84      4881eca80000.  sub rsp, 0xa8
0x00006c8b      64488b042528.  mov rax, qword fs:[0x28]
0x00006c94      488984249800.  mov qword [rsp + 0x98], rax
0x00006c9c      31c0           xor eax, eax
0x00006c9e      488b1de33621.  mov rbx, qword [obj.temphead]           ; [0x21a388:8]=0
0x00006ca5      488d430d       lea rax, [rbx + 0xd]
0x00006ca9      4839c7         cmp rdi, rax
0x00006cac      7421           je 0x6ccf                               ; .//src:-837
0x00006cae      488b03         mov rax, qword [rbx]
0x00006cb1      488d500d       lea rdx, [rax + 0xd]                    ; .//src:-1455
0x00006cb5      4839ea         cmp rdx, rbp
0x00006cb8      740f           je 0x6cc9                               ; .//src:-836
0x00006cba      4889c3         mov rbx, rax
0x00006cbd      488b03         mov rax, qword [rbx]
0x00006cc0      488d500d       lea rdx, [rax + 0xd]                    ; .//src:-1455
0x00006cc4      4839ea         cmp rdx, rbp
0x00006cc7      75f1           jne 0x6cba
0x00006cc9      4989dd         mov r13, rbx
0x00006ccc      4889c3         mov rbx, rax
0x00006ccf      807b0c01       cmp byte [rbx + 0xc], 1
0x00006cd3      0f84d7000000   je 0x6db0
0x00006cd9      488d542418     lea rdx, [rsp + 0x18]
0x00006cde      488d35bb3621.  lea rsi, obj.caught_signals             ; 0x21a3a0
0x00006ce5      31ff           xor edi, edi
0x00006ce7      4c8b23         mov r12, qword [rbx]
0x00006cea      4c8d7c2410     lea r15, [rsp + 0x10]
0x00006cef      e8fcbdffff     call sym.imp.pthread_sigmask
0x00006cf4      4889ef         mov rdi, rbp
0x00006cf7      85c0           test eax, eax
0x00006cf9      0f94442410     sete byte [rsp + 0x10]
0x00006cfe      e81dbeffff     call sym.imp.unlink
0x00006d03      4189c6         mov r14d, eax
0x00006d06      e805beffff     call sym.imp.__errno_location           ; .//src:-832
0x00006d0b      807c241000     cmp byte [rsp + 0x10], 0
0x00006d10      8b00           mov eax, dword [rax]
0x00006d12      4d896500       mov qword [r13], r12
0x00006d16      8944240c       mov dword [rsp + 0xc], eax
0x00006d1a      0f8580000000   jne 0x6da0
0x00006d20      4585f6         test r14d, r14d
0x00006d23      753b           jne 0x6d60
0x00006d25      4d85e4         test r12, r12
0x00006d28      7507           jne 0x6d31
0x00006d2a      4c892d0f3321.  mov qword [obj.temptail], r13           ; [0x21a040:8]=0x21a388 obj.temphead
0x00006d31      4889df         mov rdi, rbx
0x00006d34      e887c4ffff     call sym..plt.got
0x00006d39      488b84249800.  mov rax, qword [rsp + 0x98]
0x00006d41      644833042528.  xor rax, qword fs:[0x28]
0x00006d4a      7571           jne 0x6dbd
0x00006d4c      4881c4a80000.  add rsp, 0xa8
0x00006d53      5b             pop rbx
0x00006d54      5d             pop rbp
0x00006d55      415c           pop r12
0x00006d57      415d           pop r13
0x00006d59      415e           pop r14
0x00006d5b      415f           pop r15
0x00006d5d      c3             ret
0x00006d5e      6690           nop
0x00006d60      4889ea         mov rdx, rbp
0x00006d63      31ff           xor edi, edi                            ; .//src:-828
0x00006d65      be03000000     mov esi, 3
0x00006d6a      e851940000     call sym.quotearg_n_style_colon
0x00006d6f      488d35dce600.  lea rsi, str.warning:_cannot_remove:__s ; 0x15452 ; "warning: cannot remove: %s"
0x00006d76      31ff           xor edi, edi                            ; .//src:-1058
0x00006d78      ba05000000     mov edx, 5
0x00006d7d      4889c5         mov rbp, rax
0x00006d80      e8ebbeffff     call sym.imp.dcgettext
0x00006d85      8b74240c       mov esi, dword [rsp + 0xc]
0x00006d89      4889c2         mov rdx, rax
0x00006d8c      4889e9         mov rcx, rbp
0x00006d8f      31ff           xor edi, edi
0x00006d91      31c0           xor eax, eax
0x00006d93      e848c2ffff     call sym.imp.error
0x00006d98      eb8b           jmp 0x6d25
0x00006d9a      660f1f440000   nop word [rax + rax]
0x00006da0      4c89ff         mov rdi, r15
0x00006da3      e808feffff     call sym.cs_leave.part.4
0x00006da8      e973ffffff     jmp 0x6d20
0x00006dad      0f1f00         nop dword [rax]
0x00006db0      8b7b08         mov edi, dword [rbx + 8]
0x00006db3      e888f9ffff     call sym.wait_proc
0x00006db8      e91cffffff     jmp 0x6cd9
0x00006dbd      e8debeffff     call sym.imp.__stack_chk_fail
0x00006dc2      0f1f4000       nop dword [rax]
0x00006dc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- pipe_fork:
0x00006dd0      4157           push r15
0x00006dd2      4156           push r14
0x00006dd4      4155           push r13
0x00006dd6      4154           push r12                                ; .//src:-1463
0x00006dd8      55             push rbp
0x00006dd9      53             push rbx
0x00006dda      4889f3         mov rbx, rsi
0x00006ddd      be00000800     mov esi, 0x80000
0x00006de2      4881ecb80000.  sub rsp, 0xb8
0x00006de9      64488b042528.  mov rax, qword fs:[0x28]
0x00006df2      48898424a800.  mov qword [rsp + 0xa8], rax
0x00006dfa      31c0           xor eax, eax
0x00006dfc      48897c2418     mov qword [rsp + 0x18], rdi
0x00006e01      e8ea750000     call sym.rpl_pipe2
0x00006e06      85c0           test eax, eax                           ; .//src:-1032
0x00006e08      0f88a3010000   js 0x6fb1
0x00006e0e      8b0510322100   mov eax, dword [obj.nmerge]             ; [0x21a024:4]=16
0x00006e14      83c001         add eax, 1
0x00006e17      3b055f352100   cmp eax, dword [obj.nprocs]             ; [0x21a37c:4]=0
0x00006e1d      0f8265010000   jb 0x6f88                               ; .//src:-1029
0x00006e23      e8e8bcffff     call sym.imp.__errno_location
0x00006e28      f20f101d98eb.  movsd xmm3, qword [0x000159c8]          ; [0x159c8:8]=0x3fd0000000000000
0x00006e30      4c8d6c2420     lea r13, [rsp + 0x20]                   ; .//src:-1455
0x00006e35      4989c4         mov r12, rax                            ; .//src:-1026
0x00006e38      f20f115c2408   movsd qword [rsp + 8], xmm3
0x00006e3e      4883eb01       sub rbx, 1
0x00006e42      4883fbff       cmp rbx, 0xffffffffffffffff             ; .//src:-1021
0x00006e46      0f84a8000000   je 0x6ef4
0x00006e4c      498d5508       lea rdx, [r13 + 8]
0x00006e50      488d35493521.  lea rsi, obj.caught_signals             ; 0x21a3a0
0x00006e57      31ff           xor edi, edi
0x00006e59      e892bcffff     call sym.imp.pthread_sigmask
0x00006e5e      85c0           test eax, eax
0x00006e60      4c8b35213521.  mov r14, qword [obj.temphead]           ; [0x21a388:8]=0
0x00006e67      48c705163521.  mov qword [obj.temphead], 0             ; [0x21a388:8]=0
0x00006e72      0f94442420     sete byte [rsp + 0x20]
0x00006e77      e814c3ffff     call sym.imp.fork
0x00006e7c      85c0           test eax, eax
0x00006e7e      89c5           mov ebp, eax
0x00006e80      458b3c24       mov r15d, dword [r12]
0x00006e84      0f84b6000000   je 0x6f40
0x00006e8a      807c242000     cmp byte [rsp + 0x20], 0
0x00006e8f      4c8935f23421.  mov qword [obj.temphead], r14           ; [0x21a388:8]=0
0x00006e96      0f85ab000000   jne 0x6f47
0x00006e9c      85c0           test eax, eax
0x00006e9e      45893c24       mov dword [r12], r15d                   ; .//src:-1008
0x00006ea2      0f89b4000000   jns 0x6f5c
0x00006ea8      4183ff0b       cmp r15d, 0xb
0x00006eac      754a           jne 0x6ef8
0x00006eae      f20f10442408   movsd xmm0, qword [rsp + 8]
0x00006eb4      e817b30000     call sym.xnanosleep
0x00006eb9      f20f10542408   movsd xmm2, qword [rsp + 8]
0x00006ebf      660f28ca       movapd xmm1, xmm2
0x00006ec3      f20f58ca       addsd xmm1, xmm2
0x00006ec7      f20f114c2408   movsd qword [rsp + 8], xmm1
0x00006ecd      8b05a9342100   mov eax, dword [obj.nprocs]             ; [0x21a37c:4]=0
0x00006ed3      85c0           test eax, eax
0x00006ed5      0f8e63ffffff   jle 0x6e3e
0x00006edb      31ff           xor edi, edi
0x00006edd      e83ef7ffff     call sym.reap
0x00006ee2      85c0           test eax, eax
0x00006ee4      75e7           jne 0x6ecd
0x00006ee6      4883eb01       sub rbx, 1                              ; .//src:-1455
0x00006eea      4883fbff       cmp rbx, 0xffffffffffffffff
0x00006eee      0f8558ffffff   jne 0x6e4c
0x00006ef4      458b3c24       mov r15d, dword [r12]
0x00006ef8      488b5c2418     mov rbx, qword [rsp + 0x18]
0x00006efd      8b3b           mov edi, dword [rbx]
0x00006eff      e8acbeffff     call sym.imp.close
0x00006f04      8b7b04         mov edi, dword [rbx + 4]                ; .//src:-998
0x00006f07      e8a4beffff     call sym.imp.close
0x00006f0c      45893c24       mov dword [r12], r15d
0x00006f10      488b8c24a800.  mov rcx, qword [rsp + 0xa8]
0x00006f18      6448330c2528.  xor rcx, qword fs:[0x28]
0x00006f21      89e8           mov eax, ebp
0x00006f23      0f8592000000   jne 0x6fbb
0x00006f29      4881c4b80000.  add rsp, 0xb8
0x00006f30      5b             pop rbx
0x00006f31      5d             pop rbp
0x00006f32      415c           pop r12
0x00006f34      415d           pop r13
0x00006f36      415e           pop r14
0x00006f38      415f           pop r15                                 ; .//src:-1316
0x00006f3a      c3             ret
0x00006f3b      0f1f440000     nop dword [rax + rax]
0x00006f40      807c242000     cmp byte [rsp + 0x20], 0
0x00006f45      7429           je 0x6f70
0x00006f47      4c89ef         mov rdi, r13
0x00006f4a      89442414       mov dword [rsp + 0x14], eax
0x00006f4e      e85dfcffff     call sym.cs_leave.part.4
0x00006f53      8b442414       mov eax, dword [rsp + 0x14]
0x00006f57      e940ffffff     jmp 0x6e9c                              ; .//src:-1049
0x00006f5c      7412           je 0x6f70
0x00006f5e      830517342100.  add dword [obj.nprocs], 1               ; [0x21a37c:4]=0
0x00006f65      eba9           jmp 0x6f10
0x00006f67      660f1f840000.  nop word [rax + rax]
0x00006f70      31ff           xor edi, edi                            ; .//src:1985
0x00006f72      31ed           xor ebp, ebp
0x00006f74      e837beffff     call sym.imp.close
0x00006f79      bf01000000     mov edi, 1
0x00006f7e      e82dbeffff     call sym.imp.close
0x00006f83      eb8b           jmp 0x6f10                              ; .//src:1989
0x00006f85      0f1f00         nop dword [rax]
0x00006f88      bfffffffff     mov edi, 0xffffffff                     ; -1
0x00006f8d      e88ef6ffff     call sym.reap                           ; .//src:1985
0x00006f92      8b15e4332100   mov edx, dword [obj.nprocs]             ; [0x21a37c:4]=0
0x00006f98      85d2           test edx, edx
0x00006f9a      0f8e83feffff   jle 0x6e23
0x00006fa0      31ff           xor edi, edi
0x00006fa2      e879f6ffff     call sym.reap
0x00006fa7      85c0           test eax, eax
0x00006fa9      0f8474feffff   je 0x6e23
0x00006faf      ebe1           jmp 0x6f92
0x00006fb1      bdffffffff     mov ebp, 0xffffffff                     ; -1
0x00006fb6      e955ffffff     jmp 0x6f10
0x00006fbb      e8e0bcffff     call sym.imp.__stack_chk_fail
;-- parse_field_count:
0x00006fc0      4154           push r12
0x00006fc2      55             push rbp
0x00006fc3      4c8d0541e500.  lea r8, [0x0001550b]
0x00006fca      53             push rbx
0x00006fcb      4889f5         mov rbp, rsi
0x00006fce      4989d4         mov r12, rdx
0x00006fd1      ba0a000000     mov edx, 0xa
0x00006fd6      4889fb         mov rbx, rdi
0x00006fd9      4883ec20       sub rsp, 0x20
0x00006fdd      488d4c2410     lea rcx, [rsp + 0x10]
0x00006fe2      488d742408     lea rsi, [rsp + 8]
0x00006fe7      64488b042528.  mov rax, qword fs:[0x28]
0x00006ff0      4889442418     mov qword [rsp + 0x18], rax
0x00006ff5      31c0           xor eax, eax
0x00006ff7      e824b70000     call sym.xstrtoumax
0x00006ffc      83f804         cmp eax, 4
0x00006fff      7720           ja 0x7021                               ; .//src:2010
0x00007001      488d1510c900.  lea rdx, [0x00013918]
0x00007008      89c0           mov eax, eax
0x0000700a      48630482       movsxd rax, dword [rdx + rax*4]
0x0000700e      4801d0         add rax, rdx
0x00007011      ffe0           jmp rax
0x00007013      0f1f440000     nop dword [rax + rax]
0x00007018      488b442410     mov rax, qword [rsp + 0x10]
0x0000701d      48894500       mov qword [rbp], rax
0x00007021      488b442408     mov rax, qword [rsp + 8]
0x00007026      488b5c2418     mov rbx, qword [rsp + 0x18]
0x0000702b      6448331c2528.  xor rbx, qword fs:[0x28]
0x00007034      7523           jne 0x7059
0x00007036      4883c420       add rsp, 0x20
0x0000703a      5b             pop rbx
0x0000703b      5d             pop rbp
0x0000703c      415c           pop r12
0x0000703e      c3             ret
0x0000703f      90             nop
0x00007040      48c74500ffff.  mov qword [rbp], 0xffffffffffffffff
0x00007048      ebd7           jmp 0x7021
0x0000704a      660f1f440000   nop word [rax + rax]
0x00007050      4d85e4         test r12, r12
0x00007053      7509           jne 0x705e
0x00007055      31c0           xor eax, eax
0x00007057      ebcd           jmp 0x7026
0x00007059      e842bcffff     call sym.imp.__stack_chk_fail
0x0000705e      4889df         mov rdi, rbx
0x00007061      e82a930000     call sym.quote
0x00007066      ba05000000     mov edx, 5                              ; .//src:-1134
0x0000706b      4c89e6         mov rsi, r12
0x0000706e      31ff           xor edi, edi                            ; .//src:-1132
0x00007070      4889c5         mov rbp, rax
0x00007073      e8f8bbffff     call sym.imp.dcgettext
0x00007078      488d3509cf00.  lea rsi, str.s:_invalid_count_at_start_of__s ; 0x13f88 ; "%s: invalid count at start of %s"
0x0000707f      4889c3         mov rbx, rax
0x00007082      ba05000000     mov edx, 5
0x00007087      31ff           xor edi, edi
0x00007089      e8e2bbffff     call sym.imp.dcgettext
0x0000708e      4989e8         mov r8, rbp
0x00007091      4889c2         mov rdx, rax
0x00007094      4889d9         mov rcx, rbx
0x00007097      31f6           xor esi, esi
0x00007099      bf02000000     mov edi, 2
0x0000709e      31c0           xor eax, eax
0x000070a0      e83bbfffff     call sym.imp.error
0x000070a5      90             nop
0x000070a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- stream_open:
0x000070b0      55             push rbp
0x000070b1      53             push rbx
0x000070b2      4889fb         mov rbx, rdi
0x000070b5      4883ec18       sub rsp, 0x18
0x000070b9      0fb606         movzx eax, byte [rsi]
0x000070bc      3c72           cmp al, 0x72
0x000070be      7430           je 0x70f0                               ; .//src:-1144
0x000070c0      3c77           cmp al, 0x77
0x000070c2      0f8500010000   jne 0x71c8
0x000070c8      4885ff         test rdi, rdi
0x000070cb      7410           je 0x70dd
0x000070cd      31f6           xor esi, esi
0x000070cf      bf01000000     mov edi, 1
0x000070d4      e857bcffff     call sym.imp.ftruncate
0x000070d9      85c0           test eax, eax
0x000070db      7563           jne 0x7140
0x000070dd      488b05e43021.  mov rax, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a1c8:8]=0
0x000070e4      4883c418       add rsp, 0x18
0x000070e8      5b             pop rbx
0x000070e9      5d             pop rbp
0x000070ea      c3             ret
0x000070eb      0f1f440000     nop dword [rax + rax]
0x000070f0      488d3d43f500.  lea rdi, [0x0001663a]                   ; "-"
0x000070f7      4889f5         mov rbp, rsi
0x000070fa      b902000000     mov ecx, 2
0x000070ff      4889de         mov rsi, rbx
0x00007102      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00007104      0f97c0         seta al
0x00007107      1c00           sbb al, 0
0x00007109      84c0           test al, al
0x0000710b      0f858f000000   jne 0x71a0
0x00007111      488b05b83021.  mov rax, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x21a1d0:8]=0
0x00007118      c60519332100.  mov byte [obj.have_read_stdin], 1       ; [0x21a438:1]=0
0x0000711f      4889c7         mov rdi, rax
0x00007122      be02000000     mov esi, 2
0x00007127      4889442408     mov qword [rsp + 8], rax
0x0000712c      e87f4f0000     call sym.fadvise
0x00007131      488b442408     mov rax, qword [rsp + 8]
0x00007136      4883c418       add rsp, 0x18
0x0000713a      5b             pop rbx
0x0000713b      5d             pop rbp
0x0000713c      c3             ret
0x0000713d      0f1f00         nop dword [rax]
0x00007140      e8cbb9ffff     call sym.imp.__errno_location
0x00007145      8b28           mov ebp, dword [rax]
0x00007147      e834f2ffff     call sym.get_outstatus
0x0000714c      4885c0         test rax, rax
0x0000714f      7413           je 0x7164
0x00007151      8b4018         mov eax, dword [rax + 0x18]
0x00007154      2500f00000     and eax, 0xf000
0x00007159      3d00800000     cmp eax, 0x8000
0x0000715e      0f8579ffffff   jne 0x70dd
0x00007164      4889da         mov rdx, rbx
0x00007167      be03000000     mov esi, 3
0x0000716c      31ff           xor edi, edi
0x0000716e      e84d900000     call sym.quotearg_n_style_colon         ; .//src:-1121
0x00007173      488d35f3e200.  lea rsi, str.s:_error_truncating        ; 0x1546d ; "%s: error truncating"
0x0000717a      4889c3         mov rbx, rax
0x0000717d      ba05000000     mov edx, 5
0x00007182      31ff           xor edi, edi
0x00007184      e8e7baffff     call sym.imp.dcgettext
0x00007189      4889d9         mov rcx, rbx
0x0000718c      4889c2         mov rdx, rax
0x0000718f      89ee           mov esi, ebp
0x00007191      bf02000000     mov edi, 2
0x00007196      31c0           xor eax, eax                            ; .//src:-1100
0x00007198      e843beffff     call sym.imp.error
0x0000719d      0f1f00         nop dword [rax]
0x000071a0      4889df         mov rdi, rbx
0x000071a3      31c0           xor eax, eax
0x000071a5      be00000800     mov esi, 0x80000
0x000071aa      e861beffff     call sym.imp.open
0x000071af      89c7           mov edi, eax
0x000071b1      31c0           xor eax, eax
0x000071b3      85ff           test edi, edi
0x000071b5      0f8864ffffff   js 0x711f
0x000071bb      4889ee         mov rsi, rbp
0x000071be      e8bdbdffff     call sym.imp.fdopen
0x000071c3      e957ffffff     jmp 0x711f
0x000071c8      488d0d89cb00.  lea rcx, obj.__PRETTY_FUNCTION__.8484   ; 0x13d58 ; "stream_open"
0x000071cf      488d35ace200.  lea rsi, str..._coreutils_8.31_src_sort.c ; 0x15482 ; "../coreutils-8.31/src/sort.c"
0x000071d6      488d3dd3cd00.  lea rdi, str.unexpected_mode_passed_to_stream_open ; 0x13fb0 ; "!\"unexpected mode passed to stream_open\""
0x000071dd      bad6030000     mov edx, 0x3d6
0x000071e2      e889bbffff     call sym.imp.__assert_fail
0x000071e7      660f1f840000.  nop word [rax + rax]
;-- xfclose:
0x000071f0      55             push rbp
0x000071f1      53             push rbx
0x000071f2      4889f5         mov rbp, rsi
0x000071f5      4889fb         mov rbx, rdi
0x000071f8      4883ec08       sub rsp, 8
0x000071fc      e88fbcffff     call sym.imp.fileno
0x00007201      85c0           test eax, eax
0x00007203      744b           je 0x7250
0x00007205      83f801         cmp eax, 1
0x00007208      7416           je 0x7220
0x0000720a      4889df         mov rdi, rbx
0x0000720d      e82eb90000     call sym.rpl_fclose
0x00007212      85c0           test eax, eax
0x00007214      754d           jne 0x7263
0x00007216      4883c408       add rsp, 8
0x0000721a      5b             pop rbx
0x0000721b      5d             pop rbp
0x0000721c      c3             ret
0x0000721d      0f1f00         nop dword [rax]
0x00007220      4889df         mov rdi, rbx
0x00007223      e808bfffff     call sym.imp.fflush_unlocked
0x00007228      85c0           test eax, eax
0x0000722a      74ea           je 0x7216
0x0000722c      488d3578e200.  lea rsi, str.fflush_failed              ; 0x154ab ; "fflush failed"
0x00007233      ba05000000     mov edx, 5
0x00007238      31ff           xor edi, edi
0x0000723a      e831baffff     call sym.imp.dcgettext                  ; .//src:681
0x0000723f      4889ee         mov rsi, rbp
0x00007242      4889c7         mov rdi, rax
0x00007245      e8d6f0ffff     call sym.sort_die
0x0000724a      660f1f440000   nop word [rax + rax]
0x00007250      f60310         test byte [rbx], 0x10
0x00007253      74c1           je 0x7216
0x00007255      4883c408       add rsp, 8
0x00007259      4889df         mov rdi, rbx
0x0000725c      5b             pop rbx
0x0000725d      5d             pop rbp
0x0000725e      e97db9ffff     jmp sym.imp.clearerr_unlocked
0x00007263      ba05000000     mov edx, 5
0x00007268      488d354ae200.  lea rsi, str.close_failed               ; 0x154b9 ; "close failed"
0x0000726f      ebc7           jmp 0x7238                              ; .//src:706
0x00007271      0f1f440000     nop dword [rax + rax]
0x00007276      662e0f1f8400.  nop word cs:[rax + rax]
;-- write_line:
0x00007280      4157           push r15
0x00007282      4156           push r14
0x00007284      4889f1         mov rcx, rsi
0x00007287      4155           push r13
0x00007289      4154           push r12
0x0000728b      55             push rbp
0x0000728c      53             push rbx
0x0000728d      4889d5         mov rbp, rdx
0x00007290      4883ec38       sub rsp, 0x38
0x00007294      4c8b3f         mov r15, qword [rdi]
0x00007297      4c8b6f08       mov r13, qword [rdi + 8]
0x0000729b      64488b042528.  mov rax, qword fs:[0x28]
0x000072a4      4889442428     mov qword [rsp + 0x28], rax
0x000072a9      31c0           xor eax, eax
0x000072ab      4885d2         test rdx, rdx
0x000072ae      4b8d1c2f       lea rbx, [r15 + r13]
0x000072b2      744c           je 0x7300
0x000072b4      0fb6057d2d21.  movzx eax, byte [obj.eolchar]           ; [0x21a038:1]=10 ; "\n"
0x000072bb      4c89ea         mov rdx, r13
0x000072be      be01000000     mov esi, 1
0x000072c3      4c89ff         mov rdi, r15
0x000072c6      8843ff         mov byte [rbx - 1], al                  ; .//src:695
0x000072c9      e892bcffff     call sym.imp.fwrite_unlocked
0x000072ce      4939c5         cmp r13, rax                            ; fcntl2.h:-2013
0x000072d1      0f8527040000   jne 0x76fe
0x000072d7      c643ff00       mov byte [rbx - 1], 0
0x000072db      488b442428     mov rax, qword [rsp + 0x28]
0x000072e0      644833042528.  xor rax, qword fs:[0x28]
0x000072e9      0f850a040000   jne 0x76f9
0x000072ef      4883c438       add rsp, 0x38
0x000072f3      5b             pop rbx
0x000072f4      5d             pop rbp
0x000072f5      415c           pop r12
0x000072f7      415d           pop r13
0x000072f9      415e           pop r14
0x000072fb      415f           pop r15
0x000072fd      c3             ret
0x000072fe      6690           nop
0x00007300      803d19312100.  cmp byte [obj.debug], 0                 ; [0x21a420:1]=0
0x00007307      74ab           je 0x72b4
0x00007309      4939df         cmp r15, rbx
0x0000730c      4989fc         mov r12, rdi
0x0000730f      7230           jb 0x7341
0x00007311      e9a3000000     jmp 0x73b9
0x00007316      662e0f1f8400.  nop word cs:[rax + rax]
0x00007320      4c39fb         cmp rbx, r15
0x00007323      0fbef0         movsx esi, al
0x00007326      7478           je 0x73a0
0x00007328      488b5128       mov rdx, qword [rcx + 0x28]
0x0000732c      48395130       cmp qword [rcx + 0x30], rdx
0x00007330      7630           jbe 0x7362
0x00007332      488d7201       lea rsi, [rdx + 1]
0x00007336      48897128       mov qword [rcx + 0x28], rsi
0x0000733a      8802           mov byte [rdx], al
0x0000733c      4c39fb         cmp rbx, r15
0x0000733f      746f           je 0x73b0
0x00007341      4983c701       add r15, 1
0x00007345      410fb647ff     movzx eax, byte [r15 - 1]
0x0000734a      3c09           cmp al, 9
0x0000734c      75d2           jne 0x7320
0x0000734e      488b5128       mov rdx, qword [rcx + 0x28]
0x00007352      48395130       cmp qword [rcx + 0x30], rdx
0x00007356      be3e000000     mov esi, 0x3e                           ; '>'
0x0000735b      b83e000000     mov eax, 0x3e                           ; '>'
0x00007360      77d0           ja 0x7332
0x00007362      4889cf         mov rdi, rcx
0x00007365      400fb6f6       movzx esi, sil
0x00007369      48890c24       mov qword [rsp], rcx
0x0000736d      e89eb9ffff     call sym.imp.__overflow                 ; .//src:212
0x00007372      83f8ff         cmp eax, 0xffffffff                     ; .//src:214
0x00007375      488b0c24       mov rcx, qword [rsp]
0x00007379      75c1           jne 0x733c
0x0000737b      488d3544e100.  lea rsi, str.write_failed               ; 0x154c6 ; "write failed"
0x00007382      31ff           xor edi, edi
0x00007384      ba05000000     mov edx, 5
0x00007389      e8e2b8ffff     call sym.imp.dcgettext
0x0000738e      31f6           xor esi, esi
0x00007390      4889c7         mov rdi, rax
0x00007393      e888efffff     call sym.sort_die
0x00007398      0f1f84000000.  nop dword [rax + rax]
0x000073a0      be0a000000     mov esi, 0xa
0x000073a5      b80a000000     mov eax, 0xa
0x000073aa      e979ffffff     jmp 0x7328
0x000073af      90             nop
0x000073b0      4d8b3c24       mov r15, qword [r12]
0x000073b4      4d8b6c2408     mov r13, qword [r12 + 8]
0x000073b9      4c8b35703021.  mov r14, qword [obj.keylist]            ; [0x21a430:8]=0
0x000073c0      488d2d993321.  lea rbp, obj.blanks                     ; 0x21a760
0x000073c7      4f8d4c2fff     lea r9, [r15 + r13 - 1]
0x000073cc      4d85f6         test r14, r14
0x000073cf      0f84fa010000   je 0x75cf
0x000073d5      0f1f00         nop dword [rax]
0x000073d8      4d8b1e         mov r11, qword [r14]
0x000073db      4d8b5610       mov r10, qword [r14 + 0x10]
0x000073df      4983fbff       cmp r11, 0xffffffffffffffff
0x000073e3      0f8487020000   je 0x7670
0x000073e9      4c89f2         mov rdx, r14
0x000073ec      4c89ee         mov rsi, r13
0x000073ef      4c89ff         mov rdi, r15
0x000073f2      4c89542408     mov qword [rsp + 8], r10
0x000073f7      4c890c24       mov qword [rsp], r9
0x000073fb      e870f5ffff     call sym.begfield.isra.1
0x00007400      4c8b542408     mov r10, qword [rsp + 8]
0x00007405      4889c3         mov rbx, rax
0x00007408      4c8b0c24       mov r9, qword [rsp]
0x0000740c      4983faff       cmp r10, 0xffffffffffffffff
0x00007410      741e           je 0x7430
0x00007412      4c89f2         mov rdx, r14
0x00007415      4c89ee         mov rsi, r13
0x00007418      4c89ff         mov rdi, r15
0x0000741b      e840f6ffff     call sym.limfield.isra.2
0x00007420      4989c1         mov r9, rax
0x00007423      41807e3000     cmp byte [r14 + 0x30], 0
0x00007428      7406           je 0x7430
0x0000742a      4983fbff       cmp r11, 0xffffffffffffffff
0x0000742e      741b           je 0x744b
0x00007430      41807e3600     cmp byte [r14 + 0x36], 0
0x00007435      7514           jne 0x744b
0x00007437      48b80000ff00.  movabs rax, 0xffff00ff0000
0x00007441      49854630       test qword [r14 + 0x30], rax
0x00007445      0f84ad000000   je 0x74f8
0x0000744b      450fb629       movzx r13d, byte [r9]
0x0000744f      41c60100       mov byte [r9], 0
0x00007453      0fb603         movzx eax, byte [rbx]
0x00007456      807c050000     cmp byte [rbp + rax], 0
0x0000745b      7411           je 0x746e
0x0000745d      0f1f00         nop dword [rax]
0x00007460      4883c301       add rbx, 1
0x00007464      0fb603         movzx eax, byte [rbx]
0x00007467      807c050000     cmp byte [rbp + rax], 0
0x0000746c      75f2           jne 0x7460
0x0000746e      4939d9         cmp r9, rbx
0x00007471      48895c2418     mov qword [rsp + 0x18], rbx
0x00007476      0f8284010000   jb 0x7600
0x0000747c      41807e3600     cmp byte [r14 + 0x36], 0
0x00007481      0f8501020000   jne 0x7688
0x00007487      41807e3400     cmp byte [r14 + 0x34], 0
0x0000748c      0f852e020000   jne 0x76c0
0x00007492      48b80000ff00.  movabs rax, 0xff0000ff0000
0x0000749c      49854630       test qword [r14 + 0x30], rax
0x000074a0      0f845a010000   je 0x7600
0x000074a6      4939d9         cmp r9, rbx
0x000074a9      4889d8         mov rax, rbx
0x000074ac      760b           jbe 0x74b9
0x000074ae      31c0           xor eax, eax
0x000074b0      803b2d         cmp byte [rbx], 0x2d
0x000074b3      0f94c0         sete al                                 ; .//src:52
0x000074b6      4801d8         add rax, rbx
0x000074b9      488d7c2420     lea rdi, [rsp + 0x20]
0x000074be      4c890c24       mov qword [rsp], r9
0x000074c2      4889442420     mov qword [rsp + 0x20], rax
0x000074c7      e8b4e9ffff     call sym.traverse_raw_number
0x000074cc      3c2f           cmp al, 0x2f
0x000074ce      4c8b0c24       mov r9, qword [rsp]
0x000074d2      761c           jbe 0x74f0
0x000074d4      41807e3500     cmp byte [r14 + 0x35], 0
0x000074d9      488b442420     mov rax, qword [rsp + 0x20]
0x000074de      0f85f8010000   jne 0x76dc                              ; fcntl2.h:-2125
0x000074e4      4889442418     mov qword [rsp + 0x18], rax
0x000074e9      0f1f80000000.  nop dword [rax]
0x000074f0      458829         mov byte [r9], r13b
0x000074f3      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x000074f8      4c8d2dd4df00.  lea r13, str.no_match_for_key           ; 0x154d3 ; "^ no match for key\n"
0x000074ff      4889de         mov rsi, rbx
0x00007502      4c89ff         mov rdi, r15
0x00007505      4c890c24       mov qword [rsp], r9
0x00007509      e812f0ffff     call sym.debug_width
0x0000750e      4c8b0c24       mov r9, qword [rsp]
0x00007512      4889df         mov rdi, rbx
0x00007515      4989c7         mov r15, rax
0x00007518      4c89ce         mov rsi, r9
0x0000751b      e800f0ffff     call sym.debug_width
0x00007520      4889c3         mov rbx, rax
0x00007523      4983ef01       sub r15, 1
0x00007527      4983ffff       cmp r15, 0xffffffffffffffff
0x0000752b      742a           je 0x7557
0x0000752d      488b3d942c21.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a1c8:8]=0
0x00007534      488b4728       mov rax, qword [rdi + 0x28]
0x00007538      483b4730       cmp rax, qword [rdi + 0x30]
0x0000753c      0f839e000000   jae 0x75e0
0x00007542      488d7001       lea rsi, [rax + 1]
0x00007546      4983ef01       sub r15, 1
0x0000754a      4983ffff       cmp r15, 0xffffffffffffffff
0x0000754e      48897728       mov qword [rdi + 0x28], rsi
0x00007552      c60020         mov byte [rax], 0x20                    ; [0x20:1]=64 ; "@"
0x00007555      75d6           jne 0x752d
0x00007557      4885db         test rbx, rbx
0x0000755a      0f84b0000000   je 0x7610
0x00007560      488b3d612c21.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a1c8:8]=0
0x00007567      488b4728       mov rax, qword [rdi + 0x28]
0x0000756b      483b4730       cmp rax, qword [rdi + 0x30]
0x0000756f      737f           jae 0x75f0
0x00007571      488d5001       lea rdx, [rax + 1]
0x00007575      48895728       mov qword [rdi + 0x28], rdx
0x00007579      c6005f         mov byte [rax], 0x5f                    ; '_'
                                                                       ; [0x5f:1]=0
0x0000757c      4883eb01       sub rbx, 1
0x00007580      75de           jne 0x7560
0x00007582      488b3d3f2c21.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a1c8:8]=0
0x00007589      488b4728       mov rax, qword [rdi + 0x28]
0x0000758d      483b4730       cmp rax, qword [rdi + 0x30]
0x00007591      0f8311010000   jae 0x76a8
0x00007597      488d5001       lea rdx, [rax + 1]
0x0000759b      48895728       mov qword [rdi + 0x28], rdx
0x0000759f      c6000a         mov byte [rax], 0xa
0x000075a2      4d85f6         test r14, r14
0x000075a5      0f8430fdffff   je 0x72db
0x000075ab      4d8b7640       mov r14, qword [r14 + 0x40]
0x000075af      4d85f6         test r14, r14                           ; stdio.h:-2128
0x000075b2      0f8480000000   je 0x7638
0x000075b8      4d8b3c24       mov r15, qword [r12]
0x000075bc      4d8b6c2408     mov r13, qword [r12 + 8]
0x000075c1      4d85f6         test r14, r14
0x000075c4      4f8d4c2fff     lea r9, [r15 + r13 - 1]
0x000075c9      0f8509feffff   jne 0x73d8
0x000075cf      4c89fb         mov rbx, r15
0x000075d2      e921ffffff     jmp 0x74f8
0x000075d7      660f1f840000.  nop word [rax + rax]
0x000075e0      be20000000     mov esi, 0x20                           ; "@"
0x000075e5      e826b7ffff     call sym.imp.__overflow
0x000075ea      e934ffffff     jmp 0x7523
0x000075ef      90             nop
0x000075f0      be5f000000     mov esi, 0x5f                           ; '_'
0x000075f5      e816b7ffff     call sym.imp.__overflow
0x000075fa      eb80           jmp 0x757c
0x000075fc      0f1f4000       nop dword [rax]
0x00007600      4c894c2418     mov qword [rsp + 0x18], r9              ; .//src:89
0x00007605      e9e6feffff     jmp 0x74f0
0x0000760a      660f1f440000   nop word [rax + rax]
0x00007610      4c89ee         mov rsi, r13
0x00007613      31ff           xor edi, edi
0x00007615      ba05000000     mov edx, 5
0x0000761a      e851b6ffff     call sym.imp.dcgettext
0x0000761f      bf01000000     mov edi, 1
0x00007624      4889c6         mov rsi, rax
0x00007627      31c0           xor eax, eax
0x00007629      e872b9ffff     call sym.imp.__printf_chk
0x0000762e      e96fffffff     jmp 0x75a2
0x00007633      0f1f440000     nop dword [rax + rax]
0x00007638      803dfa2d2100.  cmp byte [obj.unique], 0                ; fcntl2.h:-2125 ; [0x21a439:1]=0
0x0000763f      0f8596fcffff   jne 0x72db
0x00007645      803dee2d2100.  cmp byte [obj.stable], 0                ; [0x21a43a:1]=0
0x0000764c      0f8589fcffff   jne 0x72db
0x00007652      498b1c24       mov rbx, qword [r12]
0x00007656      498b442408     mov rax, qword [r12 + 8]
0x0000765b      4989df         mov r15, rbx
0x0000765e      4c8d4c03ff     lea r9, [rbx + rax - 1]
0x00007663      e997feffff     jmp 0x74ff
0x00007668      0f1f84000000.  nop dword [rax + rax]
0x00007670      4983faff       cmp r10, 0xffffffffffffffff
0x00007674      4c89fb         mov rbx, r15
0x00007677      0f8595fdffff   jne 0x7412
0x0000767d      e9a1fdffff     jmp 0x7423
0x00007682      660f1f440000   nop word [rax + rax]
0x00007688      488d742418     lea rsi, [rsp + 0x18]
0x0000768d      4889df         mov rdi, rbx
0x00007690      4c890c24       mov qword [rsp], r9
0x00007694      e817e9ffff     call sym.getmonth
0x00007699      4c8b0c24       mov r9, qword [rsp]
0x0000769d      e94efeffff     jmp 0x74f0
0x000076a2      660f1f440000   nop word [rax + rax]
0x000076a8      be0a000000     mov esi, 0xa
0x000076ad      e85eb6ffff     call sym.imp.__overflow
0x000076b2      e9ebfeffff     jmp 0x75a2
0x000076b7      660f1f840000.  nop word [rax + rax]
0x000076c0      488d742418     lea rsi, [rsp + 0x18]
0x000076c5      4889df         mov rdi, rbx
0x000076c8      4c890c24       mov qword [rsp], r9                     ; .//src:310
0x000076cc      e8ffb8ffff     call sym.imp.strtold                    ; .//src:308
0x000076d1      ddd8           fstp st(0)
0x000076d3      4c8b0c24       mov r9, qword [rsp]
0x000076d7      e914feffff     jmp 0x74f0
0x000076dc      0fb610         movzx edx, byte [rax]                   ; .//src:304
0x000076df      488d0ddac600.  lea rcx, obj.unit_order                 ; 0x13dc0
0x000076e6      803c1100       cmp byte [rcx + rdx], 0
0x000076ea      0f84f4fdffff   je 0x74e4
0x000076f0      4883c001       add rax, 1
0x000076f4      e9ebfdffff     jmp 0x74e4
0x000076f9      e8a2b5ffff     call sym.imp.__stack_chk_fail           ; .//src:-252
0x000076fe      488d35c1dd00.  lea rsi, str.write_failed               ; 0x154c6 ; "write failed"
0x00007705      31ff           xor edi, edi
0x00007707      ba05000000     mov edx, 5
0x0000770c      e85fb5ffff     call sym.imp.dcgettext
0x00007711      4889ee         mov rsi, rbp
0x00007714      4889c7         mov rdi, rax                            ; .//src:12
0x00007717      e804ecffff     call sym.sort_die
0x0000771c      0f1f4000       nop dword [rax]                         ; .//src:-252
;-- keycompare:
0x00007720      4157           push r15
0x00007722      4156           push r14
0x00007724      4c8d35353021.  lea r14, obj.blanks                     ; 0x21a760
0x0000772b      4155           push r13
0x0000772d      4154           push r12
0x0000772f      55             push rbp
0x00007730      53             push rbx
0x00007731      4881eca82100.  sub rsp, 0x21a8                         ; .//src:321
0x00007738      488b6f18       mov rbp, qword [rdi + 0x18]             ; .//src:317
0x0000773c      4c8b4710       mov r8, qword [rdi + 0x10]              ; .//src:322
0x00007740      488d84241001.  lea rax, [rsp + 0x110]                  ; .//src:325
0x00007748      488b4e18       mov rcx, qword [rsi + 0x18]
0x0000774c      4c8b3ddd2c21.  mov r15, qword [obj.keylist]            ; [0x21a430:8]=0
0x00007753      488b5e10       mov rbx, qword [rsi + 0x10]
0x00007757      48897c2438     mov qword [rsp + 0x38], rdi
0x0000775c      4889442478     mov qword [rsp + 0x78], rax
0x00007761      488d8424ac01.  lea rax, [rsp + 0x1ac]
0x00007769      4989eb         mov r11, rbp
0x0000776c      64488b142528.  mov rdx, qword fs:[0x28]
0x00007775      488994249821.  mov qword [rsp + 0x2198], rdx
0x0000777d      31d2           xor edx, edx
0x0000777f      4889742440     mov qword [rsp + 0x40], rsi
0x00007784      488984248000.  mov qword [rsp + 0x80], rax
0x0000778c      4d89c4         mov r12, r8
0x0000778f      4889cd         mov rbp, rcx                            ; .//src:377
0x00007792      660f1f440000   nop word [rax + rax]
0x00007798      4d39dc         cmp r12, r11
0x0000779b      4c89d9         mov rcx, r11
0x0000779e      4889e8         mov rax, rbp
0x000077a1      490f43cc       cmovae rcx, r12
0x000077a5      4839eb         cmp rbx, rbp
0x000077a8      498b5728       mov rdx, qword [r15 + 0x28]             ; .//src:382
0x000077ac      480f43c3       cmovae rax, rbx
0x000077b0      4889cd         mov rbp, rcx
0x000077b3      4d8b6f20       mov r13, qword [r15 + 0x20]             ; .//src:384
0x000077b7      4989c1         mov r9, rax
0x000077ba      4c29e5         sub rbp, r12
0x000077bd      4929d9         sub r9, rbx
0x000077c0      803dba302100.  cmp byte [obj.hard_LC_COLLATE], 0       ; [0x21a881:1]=0
0x000077c7      7514           jne 0x77dd
0x000077c9      48be0000ffff.  movabs rsi, 0xffffffffff0000            ; .//src:388
0x000077d3      49857730       test qword [r15 + 0x30], rsi
0x000077d7      0f84a3040000   je 0x7c80
0x000077dd      4d85ed         test r13, r13
0x000077e0      400f95c7       setne dil
0x000077e4      4885d2         test rdx, rdx
0x000077e7      400f95c6       setne sil
0x000077eb      4008f7         or dil, sil
0x000077ee      40887c2408     mov byte [rsp + 8], dil
0x000077f3      0f8547010000   jne 0x7940
0x000077f9      0fb611         movzx edx, byte [rcx]
0x000077fc      c60100         mov byte [rcx], 0
0x000077ff      0fb608         movzx ecx, byte [rax]
0x00007802      c60000         mov byte [rax], 0
0x00007805      41807f3200     cmp byte [r15 + 0x32], 0
0x0000780a      88542436       mov byte [rsp + 0x36], dl
0x0000780e      884c2437       mov byte [rsp + 0x37], cl
0x00007812      0f85f5010000   jne 0x7a0d
0x00007818      41807f3400     cmp byte [r15 + 0x34], 0                ; .//src:404
0x0000781d      0f8525030000   jne 0x7b48
0x00007823      41807f3500     cmp byte [r15 + 0x35], 0                ; .//src:408
0x00007828      0f85b2030000   jne 0x7be0
0x0000782e      41807f3600     cmp byte [r15 + 0x36], 0
0x00007833      0f85bf050000   jne 0x7df8
0x00007839      41807f3300     cmp byte [r15 + 0x33], 0
0x0000783e      0f8504060000   jne 0x7e48                              ; .//src:470
0x00007844      41807f3800     cmp byte [r15 + 0x38], 0
0x00007849      0f84d9050000   je 0x7e28
0x0000784f      4889de         mov rsi, rbx
0x00007852      4c89e7         mov rdi, r12
0x00007855      4c894c2410     mov qword [rsp + 0x10], r9
0x0000785a      e851490000     call sym.filevercmp
0x0000785f      4c8b4c2410     mov r9, qword [rsp + 0x10]
0x00007864      4189c0         mov r8d, eax
0x00007867      eb1f           jmp 0x7888
0x00007869      0f1f80000000.  nop dword [rax]
0x00007870      ddd8           fstp st(0)
0x00007872      ddd8           fstp st(0)
0x00007874      eb12           jmp 0x7888
0x00007876      662e0f1f8400.  nop word cs:[rax + rax]
0x00007880      ddd8           fstp st(0)
0x00007882      ddd8           fstp st(0)
0x00007884      0f1f4000       nop dword [rax]
0x00007888      807c240800     cmp byte [rsp + 8], 0
0x0000788d      0f85e4010000   jne 0x7a77
0x00007893      0fb6442436     movzx eax, byte [rsp + 0x36]
0x00007898      4188042c       mov byte [r12 + rbp], al
0x0000789c      0fb6442437     movzx eax, byte [rsp + 0x37]
0x000078a1      4288040b       mov byte [rbx + r9], al
0x000078a5      4585c0         test r8d, r8d
0x000078a8      0f85ea010000   jne 0x7a98
0x000078ae      4d8b7f40       mov r15, qword [r15 + 0x40]
0x000078b2      4d85ff         test r15, r15
0x000078b5      0f84a50c0000   je 0x8560
0x000078bb      488b442438     mov rax, qword [rsp + 0x38]
0x000078c0      49837f10ff     cmp qword [r15 + 0x10], 0xffffffffffffffff
0x000078c5      4c8b20         mov r12, qword [rax]
0x000078c8      4c8b6808       mov r13, qword [rax + 8]
0x000078cc      488b442440     mov rax, qword [rsp + 0x40]
0x000078d1      488b6808       mov rbp, qword [rax + 8]
0x000078d5      488b18         mov rbx, qword [rax]                    ; .//src:351
0x000078d8      48896c2408     mov qword [rsp + 8], rbp
0x000078dd      0f844d020000   je 0x7b30
0x000078e3      4c89fa         mov rdx, r15
0x000078e6      4c89ee         mov rsi, r13
0x000078e9      4c89e7         mov rdi, r12
0x000078ec      e86ff1ffff     call sym.limfield.isra.2
0x000078f1      4889ee         mov rsi, rbp
0x000078f4      4c89fa         mov rdx, r15
0x000078f7      4889df         mov rdi, rbx
0x000078fa      4989c3         mov r11, rax
0x000078fd      e85ef1ffff     call sym.limfield.isra.2
0x00007902      4889c5         mov rbp, rax
0x00007905      49833fff       cmp qword [r15], 0xffffffffffffffff
0x00007909      0f84c1010000   je 0x7ad0
0x0000790f      4c89e7         mov rdi, r12
0x00007912      4c89fa         mov rdx, r15
0x00007915      4c89ee         mov rsi, r13
0x00007918      e853f0ffff     call sym.begfield.isra.1
0x0000791d      488b742408     mov rsi, qword [rsp + 8]
0x00007922      4889df         mov rdi, rbx
0x00007925      4c89fa         mov rdx, r15                            ; .//src:361
0x00007928      4989c4         mov r12, rax
0x0000792b      e840f0ffff     call sym.begfield.isra.1
0x00007930      4889c3         mov rbx, rax
0x00007933      e960feffff     jmp 0x7798
0x00007938      0f1f84000000.  nop dword [rax + rax]
0x00007940      4a8d7c0d02     lea rdi, [rbp + r9 + 2]
0x00007945      4881ffa00f00.  cmp rdi, 0xfa0                          ; .//src:364
0x0000794c      0f872e040000   ja 0x7d80
0x00007952      488db4245002.  lea rsi, [rsp + 0x250]
0x0000795a      4885ed         test rbp, rbp
0x0000795d      48c744245800.  mov qword [rsp + 0x58], 0
0x00007966      488d7c2e01     lea rdi, [rsi + rbp + 1]
0x0000796b      0f843e040000   je 0x7daf                               ; .//src:368
0x00007971      4d8d142c       lea r10, [r12 + rbp]
0x00007975      31ed           xor ebp, ebp
0x00007977      660f1f840000.  nop word [rax + rax]
0x00007980      4d85ed         test r13, r13                           ; .//src:366
0x00007983      410fb60424     movzx eax, byte [r12]
0x00007988      740b           je 0x7995
0x0000798a      0fb6c8         movzx ecx, al
0x0000798d      41807c0d0000   cmp byte [r13 + rcx], 0
0x00007993      7510           jne 0x79a5
0x00007995      4885d2         test rdx, rdx
0x00007998      7404           je 0x799e
0x0000799a      0fb60402       movzx eax, byte [rdx + rax]
0x0000799e      88042e         mov byte [rsi + rbp], al
0x000079a1      4883c501       add rbp, 1
0x000079a5      4983c401       add r12, 1
0x000079a9      4d39e2         cmp r10, r12
0x000079ac      75d2           jne 0x7980
0x000079ae      488d042e       lea rax, [rsi + rbp]
0x000079b2      4d85c9         test r9, r9
0x000079b5      c60000         mov byte [rax], 0
0x000079b8      0f8402040000   je 0x7dc0
0x000079be      4e8d140b       lea r10, [rbx + r9]                     ; .//src:-234
0x000079c2      4531c9         xor r9d, r9d
0x000079c5      0f1f00         nop dword [rax]
0x000079c8      4d85ed         test r13, r13
0x000079cb      0fb603         movzx eax, byte [rbx]
0x000079ce      740b           je 0x79db
0x000079d0      0fb6c8         movzx ecx, al                           ; .//src:-233
0x000079d3      41807c0d0000   cmp byte [r13 + rcx], 0
0x000079d9      7511           jne 0x79ec
0x000079db      4885d2         test rdx, rdx
0x000079de      7404           je 0x79e4                               ; .//src:-231
0x000079e0      0fb60402       movzx eax, byte [rdx + rax]
0x000079e4      4288040f       mov byte [rdi + r9], al
0x000079e8      4983c101       add r9, 1
0x000079ec      4883c301       add rbx, 1
0x000079f0      4939da         cmp r10, rbx
0x000079f3      75d3           jne 0x79c8
0x000079f5      4a8d040f       lea rax, [rdi + r9]
0x000079f9      c60000         mov byte [rax], 0
0x000079fc      41807f3200     cmp byte [r15 + 0x32], 0
0x00007a01      4889fb         mov rbx, rdi                            ; .//src:404
0x00007a04      4989f4         mov r12, rsi
0x00007a07      0f840bfeffff   je 0x7818                               ; .//src:405
0x00007a0d      410fb60424     movzx eax, byte [r12]
0x00007a12      4c89e7         mov rdi, r12
0x00007a15      41803c0600     cmp byte [r14 + rax], 0
0x00007a1a      7412           je 0x7a2e
0x00007a1c      0f1f4000       nop dword [rax]
0x00007a20      4883c701       add rdi, 1
0x00007a24      0fb607         movzx eax, byte [rdi]
0x00007a27      41803c0600     cmp byte [r14 + rax], 0
0x00007a2c      75f2           jne 0x7a20
0x00007a2e      0fb603         movzx eax, byte [rbx]
0x00007a31      4889de         mov rsi, rbx
0x00007a34      41803c0600     cmp byte [r14 + rax], 0                 ; .//src:501
0x00007a39      7413           je 0x7a4e
0x00007a3b      0f1f440000     nop dword [rax + rax]
0x00007a40      4883c601       add rsi, 1
0x00007a44      0fb606         movzx eax, byte [rsi]
0x00007a47      41803c0600     cmp byte [r14 + rax], 0
0x00007a4c      75f2           jne 0x7a40
0x00007a4e      8b0d302e2100   mov ecx, dword [obj.thousands_sep]      ; [0x21a884:4]=0
0x00007a54      8b152e2e2100   mov edx, dword [obj.decimal_point]      ; [0x21a888:4]=0
0x00007a5a      4c894c2410     mov qword [rsp + 0x10], r9
0x00007a5f      e89c970000     call sym.strnumcmp
0x00007a64      807c240800     cmp byte [rsp + 8], 0
0x00007a69      4189c0         mov r8d, eax
0x00007a6c      4c8b4c2410     mov r9, qword [rsp + 0x10]
0x00007a71      0f841cfeffff   je 0x7893
0x00007a77      488b7c2458     mov rdi, qword [rsp + 0x58]
0x00007a7c      4489442408     mov dword [rsp + 8], r8d                ; .//src:487
0x00007a81      e83ab7ffff     call sym..plt.got
0x00007a86      448b442408     mov r8d, dword [rsp + 8]
0x00007a8b      4585c0         test r8d, r8d
0x00007a8e      0f841afeffff   je 0x78ae
0x00007a94      0f1f4000       nop dword [rax]
0x00007a98      4489c5         mov ebp, r8d
0x00007a9b      41807f3700     cmp byte [r15 + 0x37], 0
0x00007aa0      7402           je 0x7aa4                               ; .//src:489
0x00007aa2      f7dd           neg ebp
0x00007aa4      488b8c249821.  mov rcx, qword [rsp + 0x2198]
0x00007aac      6448330c2528.  xor rcx, qword fs:[0x28]
0x00007ab5      89e8           mov eax, ebp
0x00007ab7      0f851c0c0000   jne 0x86d9
0x00007abd      4881c4a82100.  add rsp, 0x21a8
0x00007ac4      5b             pop rbx
0x00007ac5      5d             pop rbp
0x00007ac6      415c           pop r12
0x00007ac8      415d           pop r13
0x00007aca      415e           pop r14
0x00007acc      415f           pop r15
0x00007ace      c3             ret
0x00007acf      90             nop
0x00007ad0      41807f3000     cmp byte [r15 + 0x30], 0
0x00007ad5      0f84bdfcffff   je 0x7798
0x00007adb      4d39e3         cmp r11, r12
0x00007ade      7715           ja 0x7af5
0x00007ae0      eb1f           jmp 0x7b01
0x00007ae2      660f1f440000   nop word [rax + rax]
0x00007ae8      4983c401       add r12, 1
0x00007aec      4d39e3         cmp r11, r12
0x00007aef      0f843b070000   je 0x8230
0x00007af5      410fb60424     movzx eax, byte [r12]
0x00007afa      41803c0600     cmp byte [r14 + rax], 0
0x00007aff      75e7           jne 0x7ae8
0x00007b01      4839dd         cmp rbp, rbx                            ; .//src:-198
0x00007b04      0f868efcffff   jbe 0x7798
0x00007b0a      660f1f440000   nop word [rax + rax]
0x00007b10      0fb603         movzx eax, byte [rbx]
0x00007b13      41803c0600     cmp byte [r14 + rax], 0
0x00007b18      0f847afcffff   je 0x7798                               ; .//src:-196
0x00007b1e      4883c301       add rbx, 1
0x00007b22      4839dd         cmp rbp, rbx
0x00007b25      75e9           jne 0x7b10
0x00007b27      4889eb         mov rbx, rbp
0x00007b2a      e969fcffff     jmp 0x7798
0x00007b2f      90             nop
0x00007b30      488b442408     mov rax, qword [rsp + 8]
0x00007b35      4f8d5c2cff     lea r11, [r12 + r13 - 1]
0x00007b3a      488d6c03ff     lea rbp, [rbx + rax - 1]
0x00007b3f      e9c1fdffff     jmp 0x7905
0x00007b44      0f1f4000       nop dword [rax]
0x00007b48      488db424c000.  lea rsi, [rsp + 0xc0]
0x00007b50      4c89e7         mov rdi, r12                            ; .//src:-186
0x00007b53      4c894c2420     mov qword [rsp + 0x20], r9
0x00007b58      e873b4ffff     call sym.imp.strtold
0x00007b5d      db7c2410       fstp xword [rsp + 0x10]
0x00007b61      488db424c800.  lea rsi, [rsp + 0xc8]
0x00007b69      4889df         mov rdi, rbx
0x00007b6c      e85fb4ffff     call sym.imp.strtold
0x00007b71      4c3ba424c000.  cmp r12, qword [rsp + 0xc0]
0x00007b79      4c8b4c2420     mov r9, qword [rsp + 0x20]
0x00007b7e      db6c2410       fld xword [rsp + 0x10]
0x00007b82      0f8488060000   je 0x8210
0x00007b88      483b9c24c800.  cmp rbx, qword [rsp + 0xc8]
0x00007b90      41b801000000   mov r8d, 1                              ; .//src:-250
0x00007b96      0f84d4fcffff   je 0x7870
0x00007b9c      d9c9           fxch st(1)
0x00007b9e      dbe9           fucomi st(1)
0x00007ba0      772a           ja 0x7bcc                               ; .//src:-249
0x00007ba2      d9c9           fxch st(1)
0x00007ba4      dbe9           fucomi st(1)                            ; .//src:-250
0x00007ba6      0f87d4fcffff   ja 0x7880
0x00007bac      7a0a           jp 0x7bb8
0x00007bae      0f84dc070000   je 0x8390                               ; .//src:-247
0x00007bb4      d9c9           fxch st(1)
0x00007bb6      eb08           jmp 0x7bc0
0x00007bb8      d9c9           fxch st(1)
0x00007bba      660f1f440000   nop word [rax + rax]
0x00007bc0      dfe8           fucomip st(0)
0x00007bc2      0f8a33090000   jp 0x84fb
0x00007bc8      ddd8           fstp st(0)
0x00007bca      eb04           jmp 0x7bd0
0x00007bcc      ddd8           fstp st(0)
0x00007bce      ddd8           fstp st(0)
0x00007bd0      41b8ffffffff   mov r8d, 0xffffffff                     ; -1
0x00007bd6      e9adfcffff     jmp 0x7888
0x00007bdb      0f1f440000     nop dword [rax + rax]
0x00007be0      410fb60424     movzx eax, byte [r12]
0x00007be5      4d89e5         mov r13, r12
0x00007be8      41803c0600     cmp byte [r14 + rax], 0
0x00007bed      7411           je 0x7c00
0x00007bef      90             nop
0x00007bf0      4983c501       add r13, 1
0x00007bf4      410fb64500     movzx eax, byte [r13]
0x00007bf9      41803c0600     cmp byte [r14 + rax], 0
0x00007bfe      75f0           jne 0x7bf0
0x00007c00      0fb603         movzx eax, byte [rbx]
0x00007c03      4889de         mov rsi, rbx
0x00007c06      41803c0600     cmp byte [r14 + rax], 0
0x00007c0b      7411           je 0x7c1e
0x00007c0d      0f1f00         nop dword [rax]
0x00007c10      4883c601       add rsi, 1                              ; .//src:329
0x00007c14      0fb606         movzx eax, byte [rsi]
0x00007c17      41803c0600     cmp byte [r14 + rax], 0
0x00007c1c      75f2           jne 0x7c10
0x00007c1e      4c89ef         mov rdi, r13
0x00007c21      4c894c2448     mov qword [rsp + 0x48], r9
0x00007c26      4889742420     mov qword [rsp + 0x20], rsi
0x00007c2b      e810e3ffff     call sym.find_unit_order
0x00007c30      488b742420     mov rsi, qword [rsp + 0x20]
0x00007c35      89442410       mov dword [rsp + 0x10], eax             ; .//src:285
0x00007c39      4889f7         mov rdi, rsi
0x00007c3c      e8ffe2ffff     call sym.find_unit_order
0x00007c41      448b442410     mov r8d, dword [rsp + 0x10]
0x00007c46      488b742420     mov rsi, qword [rsp + 0x20]
0x00007c4b      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x00007c50      4129c0         sub r8d, eax
0x00007c53      0f852ffcffff   jne 0x7888
0x00007c59      8b0d252c2100   mov ecx, dword [obj.thousands_sep]      ; [0x21a884:4]=0
0x00007c5f      8b15232c2100   mov edx, dword [obj.decimal_point]      ; [0x21a888:4]=0
0x00007c65      4c89ef         mov rdi, r13
0x00007c68      4c894c2410     mov qword [rsp + 0x10], r9
0x00007c6d      e88e950000     call sym.strnumcmp
0x00007c72      4c8b4c2410     mov r9, qword [rsp + 0x10]
0x00007c77      4189c0         mov r8d, eax
0x00007c7a      e909fcffff     jmp 0x7888
0x00007c7f      90             nop
0x00007c80      41807f3800     cmp byte [r15 + 0x38], 0
0x00007c85      0f8552fbffff   jne 0x77dd
0x00007c8b      4d85ed         test r13, r13
0x00007c8e      0f84dc080000   je 0x8570
0x00007c94      4885d2         test rdx, rdx
0x00007c97      4c89e7         mov rdi, r12
0x00007c9a      0f849b000000   je 0x7d3b
0x00007ca0      4839cf         cmp rdi, rcx
0x00007ca3      730b           jae 0x7cb0
0x00007ca5      0fb637         movzx esi, byte [rdi]
0x00007ca8      41807c350000   cmp byte [r13 + rsi], 0
0x00007cae      7556           jne 0x7d06
0x00007cb0      4839c3         cmp rbx, rax
0x00007cb3      7218           jb 0x7ccd
0x00007cb5      e919010000     jmp 0x7dd3
0x00007cba      660f1f440000   nop word [rax + rax]
0x00007cc0      4883c301       add rbx, 1                              ; .//src:288
0x00007cc4      4839d8         cmp rax, rbx
0x00007cc7      0f8403010000   je 0x7dd0
0x00007ccd      0fb633         movzx esi, byte [rbx]
0x00007cd0      41807c350000   cmp byte [r13 + rsi], 0
0x00007cd6      75e8           jne 0x7cc0
0x00007cd8      4839f9         cmp rcx, rdi
0x00007cdb      0f86f2000000   jbe 0x7dd3
0x00007ce1      4839d8         cmp rax, rbx
0x00007ce4      0f86e9000000   jbe 0x7dd3
0x00007cea      0fb637         movzx esi, byte [rdi]
0x00007ced      440fb60432     movzx r8d, byte [rdx + rsi]
0x00007cf2      0fb633         movzx esi, byte [rbx]
0x00007cf5      0fb63432       movzx esi, byte [rdx + rsi]
0x00007cf9      4129f0         sub r8d, esi
0x00007cfc      0f8596fdffff   jne 0x7a98
0x00007d02      4883c301       add rbx, 1
0x00007d06      4883c701       add rdi, 1
0x00007d0a      eb94           jmp 0x7ca0
0x00007d0c      0f1f4000       nop dword [rax]
0x00007d10      4c39e1         cmp rcx, r12
0x00007d13      0f862a050000   jbe 0x8243
0x00007d19      4839d8         cmp rax, rbx
0x00007d1c      0f8621050000   jbe 0x8243
0x00007d22      450fb60424     movzx r8d, byte [r12]
0x00007d27      0fb613         movzx edx, byte [rbx]
0x00007d2a      4129d0         sub r8d, edx
0x00007d2d      0f8565fdffff   jne 0x7a98
0x00007d33      4883c301       add rbx, 1
0x00007d37      4983c401       add r12, 1                              ; .//src:214
0x00007d3b      4939cc         cmp r12, rcx
0x00007d3e      730d           jae 0x7d4d
0x00007d40      410fb61424     movzx edx, byte [r12]                   ; .//src:160
0x00007d45      41807c150000   cmp byte [r13 + rdx], 0
0x00007d4b      75ea           jne 0x7d37
0x00007d4d      4839c3         cmp rbx, rax
0x00007d50      721b           jb 0x7d6d
0x00007d52      e9ec040000     jmp 0x8243
0x00007d57      660f1f840000.  nop word [rax + rax]
0x00007d60      4883c301       add rbx, 1
0x00007d64      4839d8         cmp rax, rbx
0x00007d67      0f84d3040000   je 0x8240
0x00007d6d      0fb613         movzx edx, byte [rbx]
0x00007d70      41807c150000   cmp byte [r13 + rdx], 0
0x00007d76      75e8           jne 0x7d60
0x00007d78      eb96           jmp 0x7d10
0x00007d7a      660f1f440000   nop word [rax + rax]
0x00007d80      4889542420     mov qword [rsp + 0x20], rdx
0x00007d85      4c894c2410     mov qword [rsp + 0x10], r9
0x00007d8a      e851a00000     call sym.xmalloc
0x00007d8f      4885ed         test rbp, rbp
0x00007d92      4889c6         mov rsi, rax                            ; .//src:116
0x00007d95      4889442458     mov qword [rsp + 0x58], rax
0x00007d9a      4c8b4c2410     mov r9, qword [rsp + 0x10]
0x00007d9f      488b542420     mov rdx, qword [rsp + 0x20]
0x00007da4      488d7c2e01     lea rdi, [rsi + rbp + 1]
0x00007da9      0f85c2fbffff   jne 0x7971
0x00007daf      4889f0         mov rax, rsi
0x00007db2      4d85c9         test r9, r9                             ; .//src:-360
0x00007db5      c60000         mov byte [rax], 0
0x00007db8      0f8500fcffff   jne 0x79be
0x00007dbe      6690           nop
0x00007dc0      4889f8         mov rax, rdi
0x00007dc3      e931fcffff     jmp 0x79f9
0x00007dc8      0f1f84000000.  nop dword [rax + rax]
0x00007dd0      4889c3         mov rbx, rax
0x00007dd3      4839cf         cmp rdi, rcx
0x00007dd6      400f92c5       setb bpl
0x00007dda      4839d8         cmp rax, rbx
0x00007ddd      0f97c0         seta al
0x00007de0      400fb6ed       movzx ebp, bpl
0x00007de4      0fb6c0         movzx eax, al
0x00007de7      4189e8         mov r8d, ebp
0x00007dea      4129c0         sub r8d, eax
0x00007ded      e9b3faffff     jmp 0x78a5
0x00007df2      660f1f440000   nop word [rax + rax]
0x00007df8      31f6           xor esi, esi
0x00007dfa      4c89e7         mov rdi, r12
0x00007dfd      4c894c2410     mov qword [rsp + 0x10], r9
0x00007e02      e8a9e1ffff     call sym.getmonth
0x00007e07      31f6           xor esi, esi
0x00007e09      4189c5         mov r13d, eax
0x00007e0c      4889df         mov rdi, rbx
0x00007e0f      e89ce1ffff     call sym.getmonth
0x00007e14      4589e8         mov r8d, r13d
0x00007e17      4c8b4c2410     mov r9, qword [rsp + 0x10]
0x00007e1c      4129c0         sub r8d, eax
0x00007e1f      e964faffff     jmp 0x7888
0x00007e24      0f1f4000       nop dword [rax]
0x00007e28      4885ed         test rbp, rbp
0x00007e2b      0f851f040000   jne 0x8250
0x00007e31      31c0           xor eax, eax
0x00007e33      4d85c9         test r9, r9
0x00007e36      0f95c0         setne al
0x00007e39      f7d8           neg eax
0x00007e3b      4189c0         mov r8d, eax
0x00007e3e      e945faffff     jmp 0x7888
0x00007e43      0f1f440000     nop dword [rax + rax]
0x00007e48      488b15212521.  mov rdx, qword [0x0021a370]             ; [0x21a370:8]=0
0x00007e4f      8b0523252100   mov eax, dword [0x0021a378]             ; [0x21a378:4]=0
0x00007e55      66440f6f0582.  movdqa xmm8, xmmword [obj.random_md5_state]
0x00007e5e      660f6f3d8a24.  movdqa xmm7, xmmword [0x0021a2f0]
0x00007e66      488994243c02.  mov qword [rsp + 0x23c], rdx
0x00007e6e      898424440200.  mov dword [rsp + 0x244], eax
0x00007e75      660f6f358324.  movdqa xmm6, xmmword [0x0021a300]
0x00007e7d      48899424a001.  mov qword [rsp + 0x1a0], rdx
0x00007e85      660f6f2d8324.  movdqa xmm5, xmmword [0x0021a310]
0x00007e8d      660f6f258b24.  movdqa xmm4, xmmword [0x0021a320]
0x00007e95      660f6f1d9324.  movdqa xmm3, xmmword [0x0021a330]
0x00007e9d      660f6f159b24.  movdqa xmm2, xmmword [0x0021a340]
0x00007ea5      660f6f0da324.  movdqa xmm1, xmmword [0x0021a350]
0x00007ead      660f6f05ab24.  movdqa xmm0, xmmword [0x0021a360]
0x00007eb5      440f118424ac.  movups xmmword [rsp + 0x1ac], xmm8
0x00007ebe      0f11bc24bc01.  movups xmmword [rsp + 0x1bc], xmm7
0x00007ec6      0f11b424cc01.  movups xmmword [rsp + 0x1cc], xmm6
0x00007ece      0f11ac24dc01.  movups xmmword [rsp + 0x1dc], xmm5
0x00007ed6      0f11a424ec01.  movups xmmword [rsp + 0x1ec], xmm4
0x00007ede      0f119c24fc01.  movups xmmword [rsp + 0x1fc], xmm3
0x00007ee6      0f1194240c02.  movups xmmword [rsp + 0x20c], xmm2
0x00007eee      0f118c241c02.  movups xmmword [rsp + 0x21c], xmm1      ; .//src:-364
0x00007ef6      0f1184242c02.  movups xmmword [rsp + 0x22c], xmm0
0x00007efe      440f29842410.  movaps xmmword [rsp + 0x110], xmm8
0x00007f07      0f29bc242001.  movaps xmmword [rsp + 0x120], xmm7      ; .//src:-355
0x00007f0f      0f29b4243001.  movaps xmmword [rsp + 0x130], xmm6
0x00007f17      0f29ac244001.  movaps xmmword [rsp + 0x140], xmm5
0x00007f1f      0f29a4245001.  movaps xmmword [rsp + 0x150], xmm4
0x00007f27      0f299c246001.  movaps xmmword [rsp + 0x160], xmm3
0x00007f2f      0f2994247001.  movaps xmmword [rsp + 0x170], xmm2
0x00007f37      0f298c248001.  movaps xmmword [rsp + 0x180], xmm1
0x00007f3f      0f2984249001.  movaps xmmword [rsp + 0x190], xmm0
0x00007f47      898424a80100.  mov dword [rsp + 0x1a8], eax
0x00007f4e      803d2c292100.  cmp byte [obj.hard_LC_COLLATE], 0       ; [0x21a881:1]=0
0x00007f55      0f842d030000   je 0x8288
0x00007f5b      498d042c       lea rax, [r12 + rbp]
0x00007f5f      4531c0         xor r8d, r8d
0x00007f62      4c89bc249000.  mov qword [rsp + 0x90], r15
0x00007f6a      48895c2420     mov qword [rsp + 0x20], rbx
0x00007f6f      48c744246800.  mov qword [rsp + 0x68], 0
0x00007f78      4589c7         mov r15d, r8d
0x00007f7b      4889442450     mov qword [rsp + 0x50], rax
0x00007f80      4a8d040b       lea rax, [rbx + r9]
0x00007f84      48c7442448a0.  mov qword [rsp + 0x48], 0xfa0           ; [0xfa0:8]=0x21a1d8 obj.optind__GLIBC_2.2.5
0x00007f8d      4c89a4249800.  mov qword [rsp + 0x98], r12
0x00007f95      48899c24a000.  mov qword [rsp + 0xa0], rbx             ; .//src:-294
0x00007f9d      4889442460     mov qword [rsp + 0x60], rax
0x00007fa2      4a8d440d00     lea rax, [rbp + r9]
0x00007fa7      4889ac24a800.  mov qword [rsp + 0xa8], rbp
0x00007faf      4c898c24b000.  mov qword [rsp + 0xb0], r9
0x00007fb7      488d444002     lea rax, [rax + rax*2 + 2]
0x00007fbc      488984248800.  mov qword [rsp + 0x88], rax
0x00007fc4      488d8424f011.  lea rax, [rsp + 0x11f0]
0x00007fcc      48898424b800.  mov qword [rsp + 0xb8], rax
0x00007fd4      4889442410     mov qword [rsp + 0x10], rax
0x00007fd9      0f1f80000000.  nop dword [rax]
0x00007fe0      488b4c2448     mov rcx, qword [rsp + 0x48]
0x00007fe5      48398c248800.  cmp qword [rsp + 0x88], rcx
0x00007fed      0f87f8000000   ja 0x80eb
0x00007ff3      4c39642450     cmp qword [rsp + 0x50], r12
0x00007ff8      0f873b010000   ja 0x8139
0x00007ffe      488b542420     mov rdx, qword [rsp + 0x20]
0x00008003      4839542460     cmp qword [rsp + 0x60], rdx
0x00008008      0f878a040000   ja 0x8498
0x0000800e      31db           xor ebx, ebx
0x00008010      4531ed         xor r13d, r13d
0x00008013      488b442410     mov rax, qword [rsp + 0x10]
0x00008018      4c01e8         add rax, r13
0x0000801b      4c39642450     cmp qword [rsp + 0x50], r12
0x00008020      4889442470     mov qword [rsp + 0x70], rax
0x00008025      0f87e5040000   ja 0x8510
0x0000802b      488b4c2420     mov rcx, qword [rsp + 0x20]             ; .//src:-277
0x00008030      48394c2460     cmp qword [rsp + 0x60], rcx
0x00008035      488b6c2448     mov rbp, qword [rsp + 0x48]
0x0000803a      0f867a030000   jbe 0x83ba                              ; .//src:-335
0x00008040      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00008045      e846acffff     call sym.imp.strlen
0x0000804a      488b4c2420     mov rcx, qword [rsp + 0x20]
0x0000804f      48896c2448     mov qword [rsp + 0x48], rbp
0x00008054      488d440101     lea rax, [rcx + rax + 1]
0x00008059      4889442420     mov qword [rsp + 0x20], rax
0x0000805e      4c39642450     cmp qword [rsp + 0x50], r12
0x00008063      7710           ja 0x8075
0x00008065      488b4c2420     mov rcx, qword [rsp + 0x20]
0x0000806a      48394c2460     cmp qword [rsp + 0x60], rcx
0x0000806f      0f8645030000   jbe 0x83ba
0x00008075      488b542478     mov rdx, qword [rsp + 0x78]
0x0000807a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000807f      4c89ee         mov rsi, r13
0x00008082      e8693b0000     call sym.md5_process_bytes
0x00008087      488b6c2470     mov rbp, qword [rsp + 0x70]
0x0000808c      488b94248000.  mov rdx, qword [rsp + 0x80]
0x00008094      4889de         mov rsi, rbx
0x00008097      4889ef         mov rdi, rbp
0x0000809a      e8513b0000     call sym.md5_process_bytes
0x0000809f      4585ff         test r15d, r15d
0x000080a2      0f8538ffffff   jne 0x7fe0
0x000080a8      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000080ad      4939dd         cmp r13, rbx
0x000080b0      4889da         mov rdx, rbx                            ; .//src:-315
0x000080b3      490f46d5       cmovbe rdx, r13
0x000080b7      4889ee         mov rsi, rbp
0x000080ba      e831adffff     call sym.imp.memcmp
0x000080bf      85c0           test eax, eax
0x000080c1      4189c7         mov r15d, eax
0x000080c4      0f8516ffffff   jne 0x7fe0                              ; .//src:-322
0x000080ca      4531ff         xor r15d, r15d                          ; .//src:-318
0x000080cd      4939dd         cmp r13, rbx
0x000080d0      488b4c2448     mov rcx, qword [rsp + 0x48]
0x000080d5      410f97c7       seta r15b
0x000080d9      4183df00       sbb r15d, 0
0x000080dd      48398c248800.  cmp qword [rsp + 0x88], rcx
0x000080e5      0f8608ffffff   jbe 0x7ff3                              ; .//src:-313
0x000080eb      488b94248800.  mov rdx, qword [rsp + 0x88]
0x000080f3      488d0449       lea rax, [rcx + rcx*2]
0x000080f7      488b7c2468     mov rdi, qword [rsp + 0x68]
0x000080fc      48d1e8         shr rax, 1
0x000080ff      4839c2         cmp rdx, rax
0x00008102      480f43c2       cmovae rax, rdx
0x00008106      4889c3         mov rbx, rax
0x00008109      4889442448     mov qword [rsp + 0x48], rax
0x0000810e      e8adb0ffff     call sym..plt.got
0x00008113      4889df         mov rdi, rbx
0x00008116      e8adb0ffff     call 0x31c8
0x0000811b      4885c0         test rax, rax
0x0000811e      4889442468     mov qword [rsp + 0x68], rax
0x00008123      0f8417040000   je 0x8540
0x00008129      4c39642450     cmp qword [rsp + 0x50], r12
0x0000812e      4889442410     mov qword [rsp + 0x10], rax
0x00008133      0f86c5feffff   jbe 0x7ffe
0x00008139      488b6c2448     mov rbp, qword [rsp + 0x48]
0x0000813e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00008143      4c89e6         mov rsi, r12
0x00008146      31db           xor ebx, ebx
0x00008148      4889ea         mov rdx, rbp
0x0000814b      e810e4ffff     call sym.xstrxfrm
0x00008150      488b542420     mov rdx, qword [rsp + 0x20]
0x00008155      4839542460     cmp qword [rsp + 0x60], rdx             ; .//src:-295
0x0000815a      4c8d6801       lea r13, [rax + 1]
0x0000815e      761b           jbe 0x817b
0x00008160      4c39ed         cmp rbp, r13
0x00008163      0f835a050000   jae 0x86c3
0x00008169      31d2           xor edx, edx
0x0000816b      31ff           xor edi, edi
0x0000816d      488b742420     mov rsi, qword [rsp + 0x20]
0x00008172      e8e9e3ffff     call sym.xstrxfrm
0x00008177      488d5801       lea rbx, [rax + 1]
0x0000817b      4c396c2448     cmp qword [rsp + 0x48], r13
0x00008180      4a8d2c2b       lea rbp, [rbx + r13]
0x00008184      0f833d040000   jae 0x85c7
0x0000818a      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00008194      4839c5         cmp rbp, rax
0x00008197      7708           ja 0x81a1
0x00008199      488d6c6d00     lea rbp, [rbp + rbp*2]
0x0000819e      48d1ed         shr rbp, 1
0x000081a1      488b7c2468     mov rdi, qword [rsp + 0x68]
0x000081a6      e815b0ffff     call sym..plt.got
0x000081ab      4889ef         mov rdi, rbp
0x000081ae      e82d9c0000     call sym.xmalloc
0x000081b3      4c39642450     cmp qword [rsp + 0x50], r12
0x000081b8      4889442410     mov qword [rsp + 0x10], rax
0x000081bd      0f8725030000   ja 0x84e8                               ; .//src:119
0x000081c3      488b442410     mov rax, qword [rsp + 0x10]             ; .//src:118
0x000081c8      488b4c2420     mov rcx, qword [rsp + 0x20]
0x000081cd      4c01e8         add rax, r13
0x000081d0      48394c2460     cmp qword [rsp + 0x60], rcx
0x000081d5      4889442470     mov qword [rsp + 0x70], rax
0x000081da      0f87d0020000   ja 0x84b0
0x000081e0      4c39642450     cmp qword [rsp + 0x50], r12
0x000081e5      0f86b5010000   jbe 0x83a0
0x000081eb      4c89e7         mov rdi, r12
0x000081ee      e89daaffff     call sym.imp.strlen
0x000081f3      4d8d640401     lea r12, [r12 + rax + 1]
0x000081f8      488b442410     mov rax, qword [rsp + 0x10]
0x000081fd      48896c2448     mov qword [rsp + 0x48], rbp
0x00008202      4889442468     mov qword [rsp + 0x68], rax
0x00008207      e952feffff     jmp 0x805e
0x0000820c      0f1f4000       nop dword [rax]
0x00008210      ddd8           fstp st(0)
0x00008212      ddd8           fstp st(0)
0x00008214      31c0           xor eax, eax
0x00008216      48399c24c800.  cmp qword [rsp + 0xc8], rbx
0x0000821e      0f95c0         setne al
0x00008221      f7d8           neg eax
0x00008223      4189c0         mov r8d, eax
0x00008226      e95df6ffff     jmp 0x7888
0x0000822b      0f1f440000     nop dword [rax + rax]
0x00008230      4d89dc         mov r12, r11
0x00008233      e9c9f8ffff     jmp 0x7b01
0x00008238      0f1f84000000.  nop dword [rax + rax]
0x00008240      4889c3         mov rbx, rax
0x00008243      4939cc         cmp r12, rcx
0x00008246      e98bfbffff     jmp 0x7dd6
0x0000824b      0f1f440000     nop dword [rax + rax]
0x00008250      4d85c9         test r9, r9
0x00008253      41b801000000   mov r8d, 1
0x00008259      0f8429f6ffff   je 0x7888
0x0000825f      498d4901       lea rcx, [r9 + 1]
0x00008263      488d7501       lea rsi, [rbp + 1]
0x00008267      4889da         mov rdx, rbx                            ; .//src:-264
0x0000826a      4c89e7         mov rdi, r12
0x0000826d      4c894c2410     mov qword [rsp + 0x10], r9
0x00008272      e8099f0000     call sym.xmemcoll0
0x00008277      4c8b4c2410     mov r9, qword [rsp + 0x10]
0x0000827c      4189c0         mov r8d, eax
0x0000827f      e904f6ffff     jmp 0x7888
0x00008284      0f1f4000       nop dword [rax]
0x00008288      488b542478     mov rdx, qword [rsp + 0x78]
0x0000828d      4889ee         mov rsi, rbp
0x00008290      4c89e7         mov rdi, r12
0x00008293      4c894c2410     mov qword [rsp + 0x10], r9
0x00008298      4c8dac24f000.  lea r13, [rsp + 0xf0]
0x000082a0      e84b390000     call sym.md5_process_bytes
0x000082a5      488b7c2478     mov rdi, qword [rsp + 0x78]
0x000082aa      4c89ee         mov rsi, r13
0x000082ad      e81e380000     call sym.md5_finish_ctx
0x000082b2      4c8b4c2410     mov r9, qword [rsp + 0x10]
0x000082b7      488b94248000.  mov rdx, qword [rsp + 0x80]
0x000082bf      4889df         mov rdi, rbx
0x000082c2      4c89ce         mov rsi, r9
0x000082c5      4c894c2420     mov qword [rsp + 0x20], r9
0x000082ca      e821390000     call sym.md5_process_bytes
0x000082cf      498d4d10       lea rcx, [r13 + 0x10]
0x000082d3      488bbc248000.  mov rdi, qword [rsp + 0x80]
0x000082db      4889ce         mov rsi, rcx
0x000082de      48894c2410     mov qword [rsp + 0x10], rcx             ; .//src:-422
0x000082e3      e8e8370000     call sym.md5_finish_ctx
0x000082e8      488b4c2410     mov rcx, qword [rsp + 0x10]             ; .//src:-435
0x000082ed      ba10000000     mov edx, 0x10
0x000082f2      4c89ef         mov rdi, r13                            ; .//src:-422
0x000082f5      4889ce         mov rsi, rcx
0x000082f8      e8f3aaffff     call sym.imp.memcmp
0x000082fd      85c0           test eax, eax
0x000082ff      4189c0         mov r8d, eax
0x00008302      4c8b4c2420     mov r9, qword [rsp + 0x20]
0x00008307      0f85ca020000   jne 0x85d7
0x0000830d      4c894c2420     mov qword [rsp + 0x20], r9
0x00008312      48895c2470     mov qword [rsp + 0x70], rbx
0x00008317      4989ed         mov r13, rbp
0x0000831a      4c89642410     mov qword [rsp + 0x10], r12
0x0000831f      48c744246800.  mov qword [rsp + 0x68], 0
0x00008328      488b4c2420     mov rcx, qword [rsp + 0x20]
0x0000832d      488b742470     mov rsi, qword [rsp + 0x70]
0x00008332      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00008337      4c894c2448     mov qword [rsp + 0x48], r9
0x0000833c      4939cd         cmp r13, rcx
0x0000833f      4889ca         mov rdx, rcx
0x00008342      490f46d5       cmovbe rdx, r13
0x00008346      e8a5aaffff     call sym.imp.memcmp
0x0000834b      85c0           test eax, eax
0x0000834d      4189c0         mov r8d, eax
0x00008350      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x00008355      7513           jne 0x836a
0x00008357      488b4c2420     mov rcx, qword [rsp + 0x20]
0x0000835c      31c0           xor eax, eax
0x0000835e      4939cd         cmp r13, rcx
0x00008361      0f97c0         seta al                                 ; .//src:-396
0x00008364      83d800         sbb eax, 0
0x00008367      4189c0         mov r8d, eax
0x0000836a      488b7c2468     mov rdi, qword [rsp + 0x68]
0x0000836f      4489442420     mov dword [rsp + 0x20], r8d
0x00008374      4c894c2410     mov qword [rsp + 0x10], r9
0x00008379      e842aeffff     call sym..plt.got
0x0000837e      4c8b4c2410     mov r9, qword [rsp + 0x10]
0x00008383      448b442420     mov r8d, dword [rsp + 0x20]
0x00008388      e9fbf4ffff     jmp 0x7888
0x0000838d      0f1f00         nop dword [rax]
0x00008390      ddd8           fstp st(0)
0x00008392      ddd8           fstp st(0)
0x00008394      4531c0         xor r8d, r8d
0x00008397      e9ecf4ffff     jmp 0x7888
0x0000839c      0f1f4000       nop dword [rax]
0x000083a0      488b4c2420     mov rcx, qword [rsp + 0x20]
0x000083a5      48394c2460     cmp qword [rsp + 0x60], rcx
0x000083aa      488b442410     mov rax, qword [rsp + 0x10]
0x000083af      4889442468     mov qword [rsp + 0x68], rax
0x000083b4      0f8786fcffff   ja 0x8040
0x000083ba      4c8b8c24b000.  mov r9, qword [rsp + 0xb0]
0x000083c2      488b542478     mov rdx, qword [rsp + 0x78]             ; .//src:-390
0x000083c7      4589f8         mov r8d, r15d
0x000083ca      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000083cf      4c89ee         mov rsi, r13
0x000083d2      448984248800.  mov dword [rsp + 0x88], r8d
0x000083da      48895c2420     mov qword [rsp + 0x20], rbx
0x000083df      4c8ba4249800.  mov r12, qword [rsp + 0x98]
0x000083e7      4c894c2460     mov qword [rsp + 0x60], r9
0x000083ec      488bac24a800.  mov rbp, qword [rsp + 0xa8]
0x000083f4      488b9c24a000.  mov rbx, qword [rsp + 0xa0]
0x000083fc      4c8bbc249000.  mov r15, qword [rsp + 0x90]             ; .//src:-424
0x00008404      e8e7370000     call sym.md5_process_bytes
0x00008409      488d8424f000.  lea rax, [rsp + 0xf0]
0x00008411      488b7c2478     mov rdi, qword [rsp + 0x78]
0x00008416      4889c6         mov rsi, rax
0x00008419      4889442448     mov qword [rsp + 0x48], rax
0x0000841e      e8ad360000     call sym.md5_finish_ctx
0x00008423      488b94248000.  mov rdx, qword [rsp + 0x80]
0x0000842b      488b742420     mov rsi, qword [rsp + 0x20]
0x00008430      488b7c2470     mov rdi, qword [rsp + 0x70]
0x00008435      e8b6370000     call sym.md5_process_bytes
0x0000843a      488b442448     mov rax, qword [rsp + 0x48]
0x0000843f      488bbc248000.  mov rdi, qword [rsp + 0x80]
0x00008447      488d4810       lea rcx, [rax + 0x10]
0x0000844b      4889ce         mov rsi, rcx
0x0000844e      48894c2450     mov qword [rsp + 0x50], rcx             ; .//src:-423
0x00008453      e878360000     call sym.md5_finish_ctx
0x00008458      488b4c2450     mov rcx, qword [rsp + 0x50]
0x0000845d      488b7c2448     mov rdi, qword [rsp + 0x48]
0x00008462      ba10000000     mov edx, 0x10
0x00008467      4889ce         mov rsi, rcx
0x0000846a      e881a9ffff     call sym.imp.memcmp
0x0000846f      85c0           test eax, eax
0x00008471      4c8b4c2460     mov r9, qword [rsp + 0x60]
0x00008476      448b84248800.  mov r8d, dword [rsp + 0x88]
0x0000847e      0f85e3feffff   jne 0x8367                              ; .//src:-455
0x00008484      4585c0         test r8d, r8d
0x00008487      0f85ddfeffff   jne 0x836a                              ; .//src:-456
0x0000848d      e996feffff     jmp 0x8328
0x00008492      660f1f440000   nop word [rax + rax]
0x00008498      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000849d      488b542448     mov rdx, qword [rsp + 0x48]
0x000084a2      4531ed         xor r13d, r13d
0x000084a5      e9c3fcffff     jmp 0x816d
0x000084aa      660f1f440000   nop word [rax + rax]
0x000084b0      4889da         mov rdx, rbx
0x000084b3      4889ce         mov rsi, rcx                            ; .//src:36
0x000084b6      4889c7         mov rdi, rax
0x000084b9      e872a9ffff     call sym.imp.strxfrm
0x000084be      4c39642450     cmp qword [rsp + 0x50], r12
0x000084c3      0f86d7feffff   jbe 0x83a0
0x000084c9      4c89e7         mov rdi, r12
0x000084cc      e8bfa7ffff     call sym.imp.strlen
0x000084d1      4d8d640401     lea r12, [r12 + rax + 1]
0x000084d6      488b442410     mov rax, qword [rsp + 0x10]
0x000084db      4889442468     mov qword [rsp + 0x68], rax
0x000084e0      e95bfbffff     jmp 0x8040                              ; .//src:44
0x000084e5      0f1f00         nop dword [rax]
0x000084e8      4c89ea         mov rdx, r13
0x000084eb      4c89e6         mov rsi, r12
0x000084ee      4889c7         mov rdi, rax
0x000084f1      e83aa9ffff     call sym.imp.strxfrm
0x000084f6      e9c8fcffff     jmp 0x81c3
0x000084fb      dfe8           fucomip st(0)                           ; .//src:46
0x000084fd      0f8af6000000   jp 0x85f9
0x00008503      41b801000000   mov r8d, 1
0x00008509      e97af3ffff     jmp 0x7888
0x0000850e      6690           nop
0x00008510      4c89e7         mov rdi, r12
0x00008513      e878a7ffff     call sym.imp.strlen
0x00008518      488b4c2420     mov rcx, qword [rsp + 0x20]
0x0000851d      48394c2460     cmp qword [rsp + 0x60], rcx
0x00008522      4d8d640401     lea r12, [r12 + rax + 1]
0x00008527      0f8631fbffff   jbe 0x805e
0x0000852d      488b6c2448     mov rbp, qword [rsp + 0x48]
0x00008532      e909fbffff     jmp 0x8040
0x00008537      660f1f840000.  nop word [rax + rax]                    ; stdio2.h:-2569
0x00008540      48c7442448a0.  mov qword [rsp + 0x48], 0xfa0           ; [0xfa0:8]=0x21a1d8 obj.optind__GLIBC_2.2.5
0x00008549      488b8424b800.  mov rax, qword [rsp + 0xb8]
0x00008551      e9d3fbffff     jmp 0x8129
0x00008556      662e0f1f8400.  nop word cs:[rax + rax]
0x00008560      4489c5         mov ebp, r8d
0x00008563      e93cf5ffff     jmp 0x7aa4
0x00008568      0f1f84000000.  nop dword [rax + rax]
0x00008570      4885ed         test rbp, rbp
0x00008573      7470           je 0x85e5
0x00008575      4d85c9         test r9, r9
0x00008578      0f843b010000   je 0x86b9
0x0000857e      4885d2         test rdx, rdx
0x00008581      0f84ec000000   je 0x8673
0x00008587      660f1f840000.  nop word [rax + rax]
0x00008590      4939cc         cmp r12, rcx
0x00008593      0f8304010000   jae 0x869d                              ; .//src:-623
0x00008599      4839c3         cmp rbx, rax
0x0000859c      0f83fb000000   jae 0x869d
0x000085a2      4983c401       add r12, 1
0x000085a6      410fb67424ff   movzx esi, byte [r12 - 1]
0x000085ac      4883c301       add rbx, 1
0x000085b0      440fb60432     movzx r8d, byte [rdx + rsi]
0x000085b5      0fb673ff       movzx esi, byte [rbx - 1]
0x000085b9      0fb63432       movzx esi, byte [rdx + rsi]
0x000085bd      4129f0         sub r8d, esi
0x000085c0      74ce           je 0x8590
0x000085c2      e9d1f4ffff     jmp 0x7a98
0x000085c7      48396c2448     cmp qword [rsp + 0x48], rbp
0x000085cc      0f82b8fbffff   jb 0x818a
0x000085d2      e93cfaffff     jmp 0x8013
0x000085d7      48c744246800.  mov qword [rsp + 0x68], 0
0x000085e0      e985fdffff     jmp 0x836a                              ; .//src:56
0x000085e5      31ed           xor ebp, ebp
0x000085e7      4d85c9         test r9, r9
0x000085ea      400f95c5       setne bpl
0x000085ee      4189e8         mov r8d, ebp
0x000085f1      41f7d8         neg r8d
0x000085f4      e9acf2ffff     jmp 0x78a5
0x000085f9      660fefc0       pxor xmm0, xmm0
0x000085fd      31f6           xor esi, esi
0x000085ff      4c89e7         mov rdi, r12
0x00008602      4c894c2448     mov qword [rsp + 0x48], r9
0x00008607      4c8dac24d000.  lea r13, [rsp + 0xd0]
0x0000860f      0f298424d000.  movaps xmmword [rsp + 0xd0], xmm0
0x00008617      0f29442420     movaps xmmword [rsp + 0x20], xmm0       ; .//src:93
0x0000861c      e8afa9ffff     call sym.imp.strtold
0x00008621      dbbc24d00000.  fstp xword [rsp + 0xd0]
0x00008628      488d8424e000.  lea rax, [rsp + 0xe0]
0x00008630      31f6           xor esi, esi
0x00008632      4889df         mov rdi, rbx
0x00008635      4889442410     mov qword [rsp + 0x10], rax
0x0000863a      660f6f442420   movdqa xmm0, xmmword [rsp + 0x20]
0x00008640      0f298424e000.  movaps xmmword [rsp + 0xe0], xmm0
0x00008648      e883a9ffff     call sym.imp.strtold
0x0000864d      ba10000000     mov edx, 0x10
0x00008652      4c89ef         mov rdi, r13
0x00008655      dbbc24e00000.  fstp xword [rsp + 0xe0]
0x0000865c      488b742410     mov rsi, qword [rsp + 0x10]
0x00008661      e88aa7ffff     call sym.imp.memcmp                     ; .//src:116
0x00008666      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x0000866b      4189c0         mov r8d, eax                            ; .//src:119
0x0000866e      e915f2ffff     jmp 0x7888
0x00008673      4c39cd         cmp rbp, r9
0x00008676      4c89ca         mov rdx, r9
0x00008679      4889de         mov rsi, rbx
0x0000867c      480f46d5       cmovbe rdx, rbp
0x00008680      4c89e7         mov rdi, r12                            ; .//src:134
0x00008683      4c894c2408     mov qword [rsp + 8], r9
0x00008688      e863a7ffff     call sym.imp.memcmp
0x0000868d      85c0           test eax, eax
0x0000868f      4189c0         mov r8d, eax
0x00008692      0f8500f4ffff   jne 0x7a98
0x00008698      4c8b4c2408     mov r9, qword [rsp + 8]                 ; .//src:122
0x0000869d      4c39cd         cmp rbp, r9
0x000086a0      720d           jb 0x86af
0x000086a2      410f95c0       setne r8b
0x000086a6      450fb6c0       movzx r8d, r8b
0x000086aa      e9f6f1ffff     jmp 0x78a5
0x000086af      bdffffffff     mov ebp, 0xffffffff                     ; -1
0x000086b4      e9e2f3ffff     jmp 0x7a9b
0x000086b9      bd01000000     mov ebp, 1
0x000086be      e9d8f3ffff     jmp 0x7a9b
0x000086c3      488b542448     mov rdx, qword [rsp + 0x48]
0x000086c8      488b442410     mov rax, qword [rsp + 0x10]
0x000086cd      4c29ea         sub rdx, r13
0x000086d0      4a8d3c28       lea rdi, [rax + r13]
0x000086d4      e994faffff     jmp 0x816d
0x000086d9      e8c2a5ffff     call sym.imp.__stack_chk_fail
0x000086de      6690           nop                                     ; .//src:562
;-- compare:
0x000086e0      4155           push r13
0x000086e2      4154           push r12
0x000086e4      55             push rbp
0x000086e5      53             push rbx
0x000086e6      4889f5         mov rbp, rsi
0x000086e9      4889fb         mov rbx, rdi
0x000086ec      4883ec08       sub rsp, 8
0x000086f0      48833d381d21.  cmp qword [obj.keylist], 0              ; [0x21a430:8]=0
0x000086f8      741e           je 0x8718
0x000086fa      e821f0ffff     call sym.keycompare
0x000086ff      85c0           test eax, eax
0x00008701      753f           jne 0x8742
0x00008703      803d2f1d2100.  cmp byte [obj.unique], 0                ; [0x21a439:1]=0
0x0000870a      7536           jne 0x8742                              ; .//src:586
0x0000870c      803d271d2100.  cmp byte [obj.stable], 0                ; [0x21a43a:1]=0
0x00008713      752d           jne 0x8742
0x00008715      0f1f00         nop dword [rax]
0x00008718      4c8b4308       mov r8, qword [rbx + 8]
0x0000871c      488b4d08       mov rcx, qword [rbp + 8]                ; .//src:588
0x00008720      4d89c5         mov r13, r8
0x00008723      4c8d61ff       lea r12, [rcx - 1]
0x00008727      4983ed01       sub r13, 1
0x0000872b      7523           jne 0x8750
0x0000872d      31c0           xor eax, eax
0x0000872f      4d85e4         test r12, r12
0x00008732      0f95c0         setne al
0x00008735      f7d8           neg eax
0x00008737      803dfd1c2100.  cmp byte [obj.reverse], 0               ; [0x21a43b:1]=0
0x0000873e      7402           je 0x8742
0x00008740      f7d8           neg eax
0x00008742      4883c408       add rsp, 8
0x00008746      5b             pop rbx
0x00008747      5d             pop rbp
0x00008748      415c           pop r12
0x0000874a      415d           pop r13
0x0000874c      c3             ret
0x0000874d      0f1f00         nop dword [rax]
0x00008750      4d85e4         test r12, r12
0x00008753      b801000000     mov eax, 1
0x00008758      74dd           je 0x8737
0x0000875a      803d20212100.  cmp byte [obj.hard_LC_COLLATE], 0       ; [0x21a881:1]=0
0x00008761      488b7500       mov rsi, qword [rbp]
0x00008765      488b3b         mov rdi, qword [rbx]
0x00008768      7526           jne 0x8790
0x0000876a      4d39e5         cmp r13, r12
0x0000876d      4c89e2         mov rdx, r12
0x00008770      490f46d5       cmovbe rdx, r13
0x00008774      e877a6ffff     call sym.imp.memcmp
0x00008779      85c0           test eax, eax
0x0000877b      75ba           jne 0x8737
0x0000877d      31c0           xor eax, eax                            ; .//src:533
0x0000877f      4d39e5         cmp r13, r12
0x00008782      baffffffff     mov edx, 0xffffffff                     ; -1
0x00008787      0f95c0         setne al
0x0000878a      0f42c2         cmovb eax, edx
0x0000878d      eba8           jmp 0x8737
0x0000878f      90             nop
0x00008790      4889f2         mov rdx, rsi
0x00008793      4c89c6         mov rsi, r8
0x00008796      e8e5990000     call sym.xmemcoll0                      ; .//src:534
0x0000879b      eb9a           jmp 0x8737
0x0000879d      0f1f00         nop dword [rax]
;-- sequential_sort:
0x000087a0      4157           push r15
0x000087a2      4156           push r14
0x000087a4      4155           push r13
0x000087a6      4154           push r12
0x000087a8      4989fd         mov r13, rdi
0x000087ab      55             push rbp
0x000087ac      53             push rbx
0x000087ad      89cd           mov ebp, ecx
0x000087af      4889d3         mov rbx, rdx
0x000087b2      4883ec18       sub rsp, 0x18
0x000087b6      4883fe02       cmp rsi, 2
0x000087ba      0f8448010000   je 0x8908
0x000087c0      4989f7         mov r15, rsi
0x000087c3      49d1ef         shr r15, 1                              ; .//src:538
0x000087c6      4d89fe         mov r14, r15
0x000087c9      4c29fe         sub rsi, r15
0x000087cc      49c1e605       shl r14, 5
0x000087d0      4889742408     mov qword [rsp + 8], rsi
0x000087d5      49f7de         neg r14
0x000087d8      84c9           test cl, cl
0x000087da      4e8d2437       lea r12, [rdi + r14]
0x000087de      0f85bc000000   jne 0x88a0
0x000087e4      488b742408     mov rsi, qword [rsp + 8]
0x000087e9      31c9           xor ecx, ecx
0x000087eb      4c89e7         mov rdi, r12
0x000087ee      e8adffffff     call sym.sequential_sort
0x000087f3      4983ff01       cmp r15, 1
0x000087f7      0f87c2010000   ja 0x89bf
0x000087fd      f3410f6f45e0   movdqu xmm0, xmmword [r13 - 0x20]
0x00008803      4889d8         mov rax, rbx
0x00008806      4d89e6         mov r14, r12
0x00008809      0f1143e0       movups xmmword [rbx - 0x20], xmm0
0x0000880d      f3410f6f45f0   movdqu xmm0, xmmword [r13 - 0x10]
0x00008813      0f1143f0       movups xmmword [rbx - 0x10], xmm0
0x00008817      4c89eb         mov rbx, r13
0x0000881a      4989c5         mov r13, rax
0x0000881d      498d6de0       lea rbp, [r13 - 0x20]
0x00008821      4d8d66e0       lea r12, [r14 - 0x20]                   ; .//src:-1921
0x00008825      0f1f00         nop dword [rax]
0x00008828      4c89e6         mov rsi, r12                            ; .//src:-1918
0x0000882b      4889ef         mov rdi, rbp
0x0000882e      4883eb20       sub rbx, 0x20                           ; .//src:-44 ; "@"
0x00008832      e8a9feffff     call sym.compare
0x00008837      85c0           test eax, eax
0x00008839      0f8ea1000000   jle 0x88e0
0x0000883f      f3410f6f46e0   movdqu xmm0, xmmword [r14 - 0x20]
0x00008845      48836c240801   sub qword [rsp + 8], 1
0x0000884b      0f1103         movups xmmword [rbx], xmm0
0x0000884e      f3410f6f46f0   movdqu xmm0, xmmword [r14 - 0x10]
0x00008854      0f114310       movups xmmword [rbx + 0x10], xmm0
0x00008858      7412           je 0x886c
0x0000885a      4d89e6         mov r14, r12                            ; stat.h:-2853
0x0000885d      4983ec20       sub r12, 0x20                           ; "@"
0x00008861      ebc5           jmp 0x8828
0x00008863      0f1f440000     nop dword [rax + rax]
0x00008868      4883ed20       sub rbp, 0x20                           ; "@"
0x0000886c      f30f6f4500     movdqu xmm0, xmmword [rbp]
0x00008871      4883eb20       sub rbx, 0x20                           ; "@"
0x00008875      4983ef01       sub r15, 1
0x00008879      0f1103         movups xmmword [rbx], xmm0
0x0000887c      f30f6f4510     movdqu xmm0, xmmword [rbp + 0x10]
0x00008881      0f114310       movups xmmword [rbx + 0x10], xmm0
0x00008885      75e1           jne 0x8868
0x00008887      4883c418       add rsp, 0x18                           ; .//src:-43
0x0000888b      5b             pop rbx
0x0000888c      5d             pop rbp
0x0000888d      415c           pop r12
0x0000888f      415d           pop r13                                 ; stat.h:-2851
0x00008891      415e           pop r14
0x00008893      415f           pop r15
0x00008895      c3             ret
0x00008896      662e0f1f8400.  nop word cs:[rax + rax]
0x000088a0      488b742408     mov rsi, qword [rsp + 8]
0x000088a5      4901d6         add r14, rdx
0x000088a8      b901000000     mov ecx, 1
0x000088ad      4c89f2         mov rdx, r14
0x000088b0      4c89e7         mov rdi, r12
0x000088b3      e8e8feffff     call sym.sequential_sort
0x000088b8      4983ff01       cmp r15, 1
0x000088bc      0f865bffffff   jbe 0x881d
0x000088c2      31c9           xor ecx, ecx
0x000088c4      4889da         mov rdx, rbx
0x000088c7      4c89fe         mov rsi, r15
0x000088ca      4c89ef         mov rdi, r13
0x000088cd      e8cefeffff     call sym.sequential_sort
0x000088d2      e946ffffff     jmp 0x881d
0x000088d7      660f1f840000.  nop word [rax + rax]
0x000088e0      f3410f6f45e0   movdqu xmm0, xmmword [r13 - 0x20]
0x000088e6      4983ef01       sub r15, 1                              ; .//src:-37
0x000088ea      0f1103         movups xmmword [rbx], xmm0
0x000088ed      f3410f6f45f0   movdqu xmm0, xmmword [r13 - 0x10]
0x000088f3      0f114310       movups xmmword [rbx + 0x10], xmm0
0x000088f7      748e           je 0x8887                               ; .//src:-1766
0x000088f9      4989ed         mov r13, rbp
0x000088fc      4883ed20       sub rbp, 0x20                           ; "@"
0x00008900      e923ffffff     jmp 0x8828
0x00008905      0f1f00         nop dword [rax]
0x00008908      488d77c0       lea rsi, [rdi - 0x40]
0x0000890c      488d7fe0       lea rdi, [rdi - 0x20]
0x00008910      e8cbfdffff     call sym.compare
0x00008915      4084ed         test bpl, bpl
0x00008918      754e           jne 0x8968
0x0000891a      85c0           test eax, eax
0x0000891c      0f8e65ffffff   jle 0x8887
0x00008922      f3410f6f55c0   movdqu xmm2, xmmword [r13 - 0x40]
0x00008928      f3410f6f4de0   movdqu xmm1, xmmword [r13 - 0x20]
0x0000892e      f3410f6f45f0   movdqu xmm0, xmmword [r13 - 0x10]
0x00008934      410f1155e0     movups xmmword [r13 - 0x20], xmm2
0x00008939      0f114be0       movups xmmword [rbx - 0x20], xmm1
0x0000893d      0f1143f0       movups xmmword [rbx - 0x10], xmm0
0x00008941      410f114dc0     movups xmmword [r13 - 0x40], xmm1
0x00008946      f3410f6f55d0   movdqu xmm2, xmmword [r13 - 0x30]
0x0000894c      410f1145d0     movups xmmword [r13 - 0x30], xmm0
0x00008951      410f1155f0     movups xmmword [r13 - 0x10], xmm2       ; .//src:-1733
0x00008956      4883c418       add rsp, 0x18
0x0000895a      5b             pop rbx
0x0000895b      5d             pop rbp
0x0000895c      415c           pop r12
0x0000895e      415d           pop r13
0x00008960      415e           pop r14
0x00008962      415f           pop r15
0x00008964      c3             ret
0x00008965      0f1f00         nop dword [rax]
0x00008968      85c0           test eax, eax
0x0000896a      0f9fc0         setg al                                 ; .//src:-37
0x0000896d      0fb6c0         movzx eax, al
0x00008970      89c2           mov edx, eax
0x00008972      83e802         sub eax, 2
0x00008975      f7d2           not edx
0x00008977      4898           cdqe                                    ; .//src:-39
0x00008979      4863d2         movsxd rdx, edx
0x0000897c      48c1e005       shl rax, 5
0x00008980      48c1e205       shl rdx, 5
0x00008984      4d8d440500     lea r8, [r13 + rax]
0x00008989      4c01ea         add rdx, r13
0x0000898c      f30f6f02       movdqu xmm0, xmmword [rdx]
0x00008990      0f1143e0       movups xmmword [rbx - 0x20], xmm0
0x00008994      f30f6f4210     movdqu xmm0, xmmword [rdx + 0x10]
0x00008999      0f1143f0       movups xmmword [rbx - 0x10], xmm0
0x0000899d      f3410f6f00     movdqu xmm0, xmmword [r8]
0x000089a2      0f1143c0       movups xmmword [rbx - 0x40], xmm0
0x000089a6      f3410f6f4010   movdqu xmm0, xmmword [r8 + 0x10]
0x000089ac      0f1143d0       movups xmmword [rbx - 0x30], xmm0
0x000089b0      4883c418       add rsp, 0x18
0x000089b4      5b             pop rbx
0x000089b5      5d             pop rbp
0x000089b6      415c           pop r12
0x000089b8      415d           pop r13
0x000089ba      415e           pop r14
0x000089bc      415f           pop r15
0x000089be      c3             ret
0x000089bf      4889da         mov rdx, rbx                            ; .//src:-1754
0x000089c2      4c89ef         mov rdi, r13
0x000089c5      b901000000     mov ecx, 1
0x000089ca      4c89fe         mov rsi, r15
0x000089cd      4d89e6         mov r14, r12
0x000089d0      e8cbfdffff     call sym.sequential_sort
0x000089d5      4889d8         mov rax, rbx
0x000089d8      4c89eb         mov rbx, r13
0x000089db      4989c5         mov r13, rax
0x000089de      e93afeffff     jmp 0x881d                              ; .//src:-1768
0x000089e3      0f1f00         nop dword [rax]
0x000089e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- write_unique:
0x000089f0      55             push rbp
0x000089f1      53             push rbx                                ; .//src:-1729
0x000089f2      4889f5         mov rbp, rsi
0x000089f5      4889fb         mov rbx, rdi                            ; .//src:-1730
0x000089f8      4883ec18       sub rsp, 0x18
0x000089fc      803d361a2100.  cmp byte [obj.unique], 0                ; [0x21a439:1]=0
0x00008a03      743b           je 0x8a40
0x00008a05      48833d531e21.  cmp qword [obj.saved_line], 0           ; [0x21a860:8]=0
0x00008a0d      741a           je 0x8a29
0x00008a0f      488d354a1e21.  lea rsi, obj.saved_line                 ; 0x21a860
0x00008a16      4889542408     mov qword [rsp + 8], rdx
0x00008a1b      e8c0fcffff     call sym.compare
0x00008a20      85c0           test eax, eax
0x00008a22      488b542408     mov rdx, qword [rsp + 8]                ; .//src:-1924
0x00008a27      742f           je 0x8a58
0x00008a29      f30f6f03       movdqu xmm0, xmmword [rbx]
0x00008a2d      0f29052c1e21.  movaps xmmword [obj.saved_line], xmm0   ; [0x21a860:16]=-1
0x00008a34      f30f6f4310     movdqu xmm0, xmmword [rbx + 0x10]
0x00008a39      0f2905301e21.  movaps xmmword [0x0021a870], xmm0       ; [0x21a870:16]=-1
0x00008a40      4883c418       add rsp, 0x18
0x00008a44      4889ee         mov rsi, rbp
0x00008a47      4889df         mov rdi, rbx
0x00008a4a      5b             pop rbx
0x00008a4b      5d             pop rbp                                 ; .//src:-1741
0x00008a4c      e92fe8ffff     jmp sym.write_line
0x00008a51      0f1f80000000.  nop dword [rax]
0x00008a58      4883c418       add rsp, 0x18
0x00008a5c      5b             pop rbx
0x00008a5d      5d             pop rbp
0x00008a5e      c3             ret                                     ; stat.h:-2852
0x00008a5f      90             nop
;-- move_fd.part.11:
0x00008a60      53             push rbx
0x00008a61      89fb           mov ebx, edi
0x00008a63      e878a2ffff     call sym.imp.dup2                       ; stat.h:-2853
0x00008a68      89df           mov edi, ebx
0x00008a6a      5b             pop rbx
0x00008a6b      e940a3ffff     jmp sym.imp.close
;-- open_input_files:
0x00008a70      4157           push r15
0x00008a72      4156           push r14
0x00008a74      4155           push r13
0x00008a76      4154           push r12
0x00008a78      4989f4         mov r12, rsi
0x00008a7b      55             push rbp
0x00008a7c      53             push rbx
0x00008a7d      4889d3         mov rbx, rdx
0x00008a80      ba08000000     mov edx, 8
0x00008a85      4889fd         mov rbp, rdi
0x00008a88      4883ec28       sub rsp, 0x28
0x00008a8c      64488b042528.  mov rax, qword fs:[0x28]
0x00008a95      4889442418     mov qword [rsp + 0x18], rax
0x00008a9a      31c0           xor eax, eax
0x00008a9c      4889d0         mov rax, rdx
0x00008a9f      48f7e6         mul rsi
0x00008aa2      0f80fd010000   jo 0x8ca5
0x00008aa8      31c9           xor ecx, ecx
0x00008aaa      4885c0         test rax, rax
0x00008aad      0f88ed010000   js 0x8ca0
0x00008ab3      4885c9         test rcx, rcx
0x00008ab6      0f85e4010000   jne 0x8ca0
0x00008abc      4a8d3ce50000.  lea rdi, [r12*8]
0x00008ac4      e817930000     call sym.xmalloc
0x00008ac9      488903         mov qword [rbx], rax
0x00008acc      31db           xor ebx, ebx
0x00008ace      4d85e4         test r12, r12
0x00008ad1      4989c5         mov r13, rax
0x00008ad4      0f84ee000000   je 0x8bc8
0x00008ada      488d442410     lea rax, [rsp + 0x10]
0x00008adf      4889442408     mov qword [rsp + 8], rax
0x00008ae4      eb39           jmp 0x8b1f
0x00008ae6      662e0f1f8400.  nop word cs:[rax + rax]
0x00008af0      488b7d00       mov rdi, qword [rbp]                    ; .//src:-1832
0x00008af4      488d3598cd00.  lea rsi, [0x00015893]                   ; "r"
0x00008afb      e8b0e5ffff     call sym.stream_open
0x00008b00      4885c0         test rax, rax
0x00008b03      498944dd00     mov qword [r13 + rbx*8], rax
0x00008b08      0f84ba000000   je 0x8bc8                               ; .//src:-2101
0x00008b0e      4883c301       add rbx, 1
0x00008b12      4883c510       add rbp, 0x10
0x00008b16      4939dc         cmp r12, rbx
0x00008b19      0f84a9000000   je 0x8bc8
0x00008b1f      4c8b7d08       mov r15, qword [rbp + 8]
0x00008b23      4d85ff         test r15, r15
0x00008b26      74c8           je 0x8af0
0x00008b28      410fb6470c     movzx eax, byte [r15 + 0xc]
0x00008b2d      84c0           test al, al
0x00008b2f      74bf           je 0x8af0
0x00008b31      3c01           cmp al, 1
0x00008b33      0f84e7000000   je 0x8c20
0x00008b39      498d7f0d       lea rdi, [r15 + 0xd]
0x00008b3d      31f6           xor esi, esi
0x00008b3f      31c0           xor eax, eax                            ; stdio2.h:-2920
0x00008b41      e8caa4ffff     call sym.imp.open
0x00008b46      85c0           test eax, eax
0x00008b48      4189c6         mov r14d, eax                           ; .//src:-2093
0x00008b4b      0f88bf000000   js 0x8c10
0x00008b51      488b7c2408     mov rdi, qword [rsp + 8]
0x00008b56      be09000000     mov esi, 9
0x00008b5b      e870e2ffff     call sym.pipe_fork
0x00008b60      83f8ff         cmp eax, 0xffffffff
0x00008b63      0f8487000000   je 0x8bf0                               ; .//src:-2091
0x00008b69      85c0           test eax, eax
0x00008b6b      0f84e1000000   je 0x8c52
0x00008b71      41894708       mov dword [r15 + 8], eax
0x00008b75      4c89ff         mov rdi, r15
0x00008b78      e823dcffff     call sym.register_proc
0x00008b7d      4489f7         mov edi, r14d
0x00008b80      4d8d74dd00     lea r14, [r13 + rbx*8]
0x00008b85      e826a2ffff     call sym.imp.close                      ; .//src:-2087
0x00008b8a      8b7c2414       mov edi, dword [rsp + 0x14]             ; .//src:-2313
0x00008b8e      e81da2ffff     call sym.imp.close
0x00008b93      8b7c2410       mov edi, dword [rsp + 0x10]
0x00008b97      488d35f5cc00.  lea rsi, [0x00015893]                   ; "r"
0x00008b9e      e8dda3ffff     call sym.imp.fdopen
0x00008ba3      4885c0         test rax, rax
0x00008ba6      0f8482000000   je 0x8c2e
0x00008bac      498944dd00     mov qword [r13 + rbx*8], rax
0x00008bb1      4883c301       add rbx, 1
0x00008bb5      4883c510       add rbp, 0x10
0x00008bb9      4939dc         cmp r12, rbx                            ; .//src:-2083
0x00008bbc      0f855dffffff   jne 0x8b1f
0x00008bc2      660f1f440000   nop word [rax + rax]
0x00008bc8      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00008bcd      6448330c2528.  xor rcx, qword fs:[0x28]
0x00008bd6      4889d8         mov rax, rbx
0x00008bd9      0f85d0000000   jne 0x8caf
0x00008bdf      4883c428       add rsp, 0x28                           ; .//src:-1824
0x00008be3      5b             pop rbx
0x00008be4      5d             pop rbp
0x00008be5      415c           pop r12
0x00008be7      415d           pop r13
0x00008be9      415e           pop r14
0x00008beb      415f           pop r15
0x00008bed      c3             ret
0x00008bee      6690           nop                                     ; .//src:-1819
0x00008bf0      e81b9fffff     call sym.imp.__errno_location
0x00008bf5      833818         cmp dword [rax], 0x18
0x00008bf8      4889c5         mov rbp, rax
0x00008bfb      0f85bf000000   jne 0x8cc0
0x00008c01      4489f7         mov edi, r14d
0x00008c04      e8a7a1ffff     call sym.imp.close
0x00008c09      c74500180000.  mov dword [rbp], 0x18
0x00008c10      49c744dd0000.  mov qword [r13 + rbx*8], 0
0x00008c19      ebad           jmp 0x8bc8
0x00008c1b      0f1f440000     nop dword [rax + rax]                   ; .//src:-1792
0x00008c20      418b7f08       mov edi, dword [r15 + 8]
0x00008c24      e817dbffff     call sym.wait_proc
0x00008c29      e90bffffff     jmp 0x8b39
0x00008c2e      e8dd9effff     call sym.imp.__errno_location
0x00008c33      8b7c2410       mov edi, dword [rsp + 0x10]
0x00008c37      448b20         mov r12d, dword [rax]
0x00008c3a      4889c5         mov rbp, rax
0x00008c3d      e86ea1ffff     call sym.imp.close
0x00008c42      44896500       mov dword [rbp], r12d
0x00008c46      49c706000000.  mov qword [r14], 0
0x00008c4d      e976ffffff     jmp 0x8bc8
0x00008c52      8b7c2410       mov edi, dword [rsp + 0x10]
0x00008c56      e855a1ffff     call sym.imp.close                      ; .//src:-1816
0x00008c5b      4585f6         test r14d, r14d
0x00008c5e      7554           jne 0x8cb4
0x00008c60      8b7c2414       mov edi, dword [rsp + 0x14]
0x00008c64      83ff01         cmp edi, 1
0x00008c67      740a           je 0x8c73                               ; .//src:-1813
0x00008c69      be01000000     mov esi, 1
0x00008c6e      e8edfdffff     call sym.move_fd.part.11                ; .//src:-2306
0x00008c73      488b3dae1721.  mov rdi, qword [obj.compress_program]   ; .//src:-2081 ; [0x21a428:8]=0
0x00008c7a      488d1566c800.  lea rdx, [0x000154e7]                   ; "-d"
0x00008c81      31c9           xor ecx, ecx
0x00008c83      31c0           xor eax, eax
0x00008c85      4889fe         mov rsi, rdi
0x00008c88      e8c3a4ffff     call sym.imp.execlp
0x00008c8d      e87e9effff     call sym.imp.__errno_location
0x00008c92      8b38           mov edi, dword [rax]
0x00008c94      488d356db300.  lea rsi, str.couldn_t_execute_compress_program__with__d ; 0x14008 ; "couldn't execute compress program (with -d)"
0x00008c9b      e88da5ffff     call sym.async_safe_die
0x00008ca0      e88b930000     call sym.xalloc_die                     ; .//src:-2052
0x00008ca5      b901000000     mov ecx, 1
0x00008caa      e9fbfdffff     jmp 0x8aaa
0x00008caf      e8ec9fffff     call sym.imp.__stack_chk_fail
0x00008cb4      31f6           xor esi, esi
0x00008cb6      4489f7         mov edi, r14d                           ; .//src:-2051
0x00008cb9      e8a2fdffff     call sym.move_fd.part.11
0x00008cbe      eba0           jmp 0x8c60
0x00008cc0      488b35611721.  mov rsi, qword [obj.compress_program]   ; [0x21a428:8]=0
0x00008cc7      bf04000000     mov edi, 4
0x00008ccc      e8ef730000     call sym.quotearg_style
0x00008cd1      488d3508b300.  lea rsi, str.couldn_t_create_process_for__s__d ; 0x13fe0 ; "couldn't create process for %s -d"
0x00008cd8      ba05000000     mov edx, 5
0x00008cdd      31ff           xor edi, edi
0x00008cdf      4889c3         mov rbx, rax
0x00008ce2      e8899fffff     call sym.imp.dcgettext
0x00008ce7      8b7500         mov esi, dword [rbp]
0x00008cea      4889c2         mov rdx, rax
0x00008ced      4889d9         mov rcx, rbx
0x00008cf0      bf02000000     mov edi, 2
0x00008cf5      31c0           xor eax, eax
0x00008cf7      e8e4a2ffff     call sym.imp.error
0x00008cfc      0f1f4000       nop dword [rax]
;-- maybe_create_temp:
0x00008d00      4157           push r15
0x00008d02      4156           push r14
0x00008d04      4155           push r13
0x00008d06      4154           push r12
0x00008d08      55             push rbp
0x00008d09      53             push rbx
0x00008d0a      4881eca80000.  sub rsp, 0xa8
0x00008d11      488b15101521.  mov rdx, qword [obj.temp_dir_index.8459] ; [0x21a228:8]=0
0x00008d18      64488b042528.  mov rax, qword fs:[0x28]
0x00008d21      488984249800.  mov qword [rsp + 0x98], rax
0x00008d29      31c0           xor eax, eax
0x00008d2b      488b051e1721.  mov rax, qword [obj.temp_dirs]          ; [0x21a450:8]=0
0x00008d32      48893c24       mov qword [rsp], rdi
0x00008d36      8974240c       mov dword [rsp + 0xc], esi              ; .//src:308
0x00008d3a      4c8b24d0       mov r12, qword [rax + rdx*8]
0x00008d3e      4c89e7         mov rdi, r12
0x00008d41      e84a9fffff     call sym.imp.strlen
0x00008d46      488d7820       lea rdi, [rax + 0x20]
0x00008d4a      4989c7         mov r15, rax
0x00008d4d      4883e7f8       and rdi, 0xfffffffffffffff8
0x00008d51      e88a900000     call sym.xmalloc
0x00008d56      488d680d       lea rbp, [rax + 0xd]                    ; .//src:314
0x00008d5a      4c89fa         mov rdx, r15
0x00008d5d      4c89e6         mov rsi, r12                            ; .//src:317
0x00008d60      4889c3         mov rbx, rax
0x00008d63      4889ef         mov rdi, rbp
0x00008d66      e815a1ffff     call sym.imp.memcpy                     ; .//src:314
0x00008d6b      48b82f736f72.  movabs rax, 0x58585874726f732f          ; '/sortXXX'
0x00008d75      4a89443b0d     mov qword [rbx + r15 + 0xd], rax
0x00008d7a      488b05a71421.  mov rax, qword [obj.temp_dir_index.8459] ; [0x21a228:8]=0
0x00008d81      42c7443d0858.  mov dword [rbp + r15 + 8], 0x585858     ; 'XXX'
0x00008d8a      48c703000000.  mov qword [rbx], 0
0x00008d91      4883c001       add rax, 1
0x00008d95      483b05ac1621.  cmp rax, qword [obj.temp_dir_count]     ; [0x21a448:8]=0
0x00008d9c      488905851421.  mov qword [obj.temp_dir_index.8459], rax ; [0x21a228:8]=0
0x00008da3      750b           jne 0x8db0
0x00008da5      48c705781421.  mov qword [obj.temp_dir_index.8459], 0  ; [0x21a228:8]=0
0x00008db0      4c8d6c2410     lea r13, [rsp + 0x10]
0x00008db5      488d35e41521.  lea rsi, obj.caught_signals             ; 0x21a3a0
0x00008dbc      31ff           xor edi, edi
0x00008dbe      498d5508       lea rdx, [r13 + 8]
0x00008dc2      e8299dffff     call sym.imp.pthread_sigmask
0x00008dc7      be00000800     mov esi, 0x80000
0x00008dcc      85c0           test eax, eax
0x00008dce      4889ef         mov rdi, rbp
0x00008dd1      0f94442410     sete byte [rsp + 0x10]
0x00008dd6      e805840000     call sym.mkostemp_safer                 ; .//src:313
0x00008ddb      4189c7         mov r15d, eax                           ; .//src:320
0x00008dde      e82d9dffff     call sym.imp.__errno_location
0x00008de3      4585ff         test r15d, r15d
0x00008de6      4989c6         mov r14, rax
0x00008de9      0f88c1000000   js 0x8eb0
0x00008def      807c241000     cmp byte [rsp + 0x10], 0
0x00008df4      488b05451221.  mov rax, qword [obj.temptail]           ; [0x21a040:8]=0x21a388 obj.temphead
0x00008dfb      48891d3e1221.  mov qword [obj.temptail], rbx           ; [0x21a040:8]=0x21a388 obj.temphead
0x00008e02      488918         mov qword [rax], rbx
0x00008e05      740e           je 0x8e15
0x00008e07      458b26         mov r12d, dword [r14]
0x00008e0a      4c89ef         mov rdi, r13
0x00008e0d      e89eddffff     call sym.cs_leave.part.4
0x00008e12      458926         mov dword [r14], r12d
0x00008e15      48833d0b1621.  cmp qword [obj.compress_program], 0     ; [0x21a428:8]=0
0x00008e1d      c6430c00       mov byte [rbx + 0xc], 0
0x00008e21      741b           je 0x8e3e
0x00008e23      be04000000     mov esi, 4
0x00008e28      4c89ef         mov rdi, r13
0x00008e2b      e8a0dfffff     call sym.pipe_fork
0x00008e30      83f800         cmp eax, 0                              ; .//src:338
0x00008e33      894308         mov dword [rbx + 8], eax
0x00008e36      7f58           jg 0x8e90
0x00008e38      0f8497000000   je 0x8ed5
0x00008e3e      488d35a5c600.  lea rsi, [0x000154ea]                   ; "w"
0x00008e45      4489ff         mov edi, r15d
0x00008e48      e833a1ffff     call sym.imp.fdopen
0x00008e4d      488b0c24       mov rcx, qword [rsp]
0x00008e51      4885c0         test rax, rax
0x00008e54      488901         mov qword [rcx], rax
0x00008e57      0f84c3000000   je 0x8f20
0x00008e5d      488b8c249800.  mov rcx, qword [rsp + 0x98]
0x00008e65      6448330c2528.  xor rcx, qword fs:[0x28]
0x00008e6e      4889d8         mov rax, rbx
0x00008e71      0f85a4000000   jne 0x8f1b
0x00008e77      4881c4a80000.  add rsp, 0xa8
0x00008e7e      5b             pop rbx
0x00008e7f      5d             pop rbp
0x00008e80      415c           pop r12
0x00008e82      415d           pop r13
0x00008e84      415e           pop r14                                 ; .//src:346
0x00008e86      415f           pop r15
0x00008e88      c3             ret
0x00008e89      0f1f80000000.  nop dword [rax]
0x00008e90      4489ff         mov edi, r15d
0x00008e93      e8189fffff     call sym.imp.close
0x00008e98      8b7c2410       mov edi, dword [rsp + 0x10]
0x00008e9c      e80f9fffff     call sym.imp.close                      ; .//src:348
0x00008ea1      4889df         mov rdi, rbx
0x00008ea4      448b7c2414     mov r15d, dword [rsp + 0x14]
0x00008ea9      e8f2d8ffff     call sym.register_proc
0x00008eae      eb8e           jmp 0x8e3e
0x00008eb0      807c241000     cmp byte [rsp + 0x10], 0
0x00008eb5      8b28           mov ebp, dword [rax]
0x00008eb7      0f85c5000000   jne 0x8f82
0x00008ebd      83fd18         cmp ebp, 0x18
0x00008ec0      757c           jne 0x8f3e
0x00008ec2      807c240c01     cmp byte [rsp + 0xc], 1
0x00008ec7      7575           jne 0x8f3e
0x00008ec9      4889df         mov rdi, rbx
0x00008ecc      31db           xor ebx, ebx
0x00008ece      e8eda2ffff     call sym..plt.got
0x00008ed3      eb88           jmp 0x8e5d
0x00008ed5      8b7c2414       mov edi, dword [rsp + 0x14]             ; .//src:76
0x00008ed9      e8d29effff     call sym.imp.close
0x00008ede      4183ff01       cmp r15d, 1
0x00008ee2      740d           je 0x8ef1
0x00008ee4      be01000000     mov esi, 1
0x00008ee9      4489ff         mov edi, r15d
0x00008eec      e86ffbffff     call sym.move_fd.part.11
0x00008ef1      8b7c2410       mov edi, dword [rsp + 0x10]
0x00008ef5      85ff           test edi, edi
0x00008ef7      757d           jne 0x8f76
0x00008ef9      488b3d281521.  mov rdi, qword [obj.compress_program]   ; [0x21a428:8]=0
0x00008f00      31d2           xor edx, edx
0x00008f02      31c0           xor eax, eax                            ; .//src:80
0x00008f04      4889fe         mov rsi, rdi
0x00008f07      e844a2ffff     call sym.imp.execlp
0x00008f0c      418b3e         mov edi, dword [r14]
0x00008f0f      488d354ab100.  lea rsi, str.couldn_t_execute_compress_program ; 0x14060 ; "couldn't execute compress program"
0x00008f16      e812a3ffff     call sym.async_safe_die                 ; .//src:117
0x00008f1b      e8809dffff     call sym.imp.__stack_chk_fail
0x00008f20      488d3561b100.  lea rsi, str.couldn_t_create_temporary_file ; 0x14088 ; "couldn't create temporary file"
0x00008f27      31ff           xor edi, edi
0x00008f29      ba05000000     mov edx, 5                              ; .//src:116
0x00008f2e      e83d9dffff     call sym.imp.dcgettext                  ; .//src:117
0x00008f33      4889ee         mov rsi, rbp
0x00008f36      4889c7         mov rdi, rax
0x00008f39      e8e2d3ffff     call sym.sort_die
0x00008f3e      4c89e6         mov rsi, r12
0x00008f41      bf04000000     mov edi, 4
0x00008f46      e875710000     call sym.quotearg_style
0x00008f4b      488d35e6b000.  lea rsi, str.cannot_create_temporary_file_in__s ; 0x14038 ; "cannot create temporary file in %s"
0x00008f52      ba05000000     mov edx, 5
0x00008f57      31ff           xor edi, edi
0x00008f59      4889c3         mov rbx, rax
0x00008f5c      e80f9dffff     call sym.imp.dcgettext
0x00008f61      418b36         mov esi, dword [r14]
0x00008f64      4889c2         mov rdx, rax
0x00008f67      4889d9         mov rcx, rbx
0x00008f6a      bf02000000     mov edi, 2
0x00008f6f      31c0           xor eax, eax
0x00008f71      e86aa0ffff     call sym.imp.error
0x00008f76      31f6           xor esi, esi
0x00008f78      e8e3faffff     call sym.move_fd.part.11
0x00008f7d      e977ffffff     jmp 0x8ef9
0x00008f82      4c89ef         mov rdi, r13
0x00008f85      e826dcffff     call sym.cs_leave.part.4
0x00008f8a      41892e         mov dword [r14], ebp
0x00008f8d      e92bffffff     jmp 0x8ebd
0x00008f92      0f1f4000       nop dword [rax]
0x00008f96      662e0f1f8400.  nop word cs:[rax + rax]
;-- queue_check_insert.part.12:
0x00008fa0      488b4e10       mov rcx, qword [rsi + 0x10]
0x00008fa4      48390e         cmp qword [rsi], rcx
0x00008fa7      488b5608       mov rdx, qword [rsi + 8]
0x00008fab      488b4618       mov rax, qword [rsi + 0x18]
0x00008faf      741f           je 0x8fd0
0x00008fb1      4839c2         cmp rdx, rax
0x00008fb4      740a           je 0x8fc0
0x00008fb6      e975d9ffff     jmp sym.queue_insert
0x00008fbb      0f1f440000     nop dword [rax + rax]
0x00008fc0      48837e3000     cmp qword [rsi + 0x30], 0
0x00008fc5      74ef           je 0x8fb6
0x00008fc7      f3c3           ret
0x00008fc9      0f1f80000000.  nop dword [rax]                         ; .//src:132
0x00008fd0      4839c2         cmp rdx, rax
0x00008fd3      74f2           je 0x8fc7                               ; .//src:134
0x00008fd5      48837e2800     cmp qword [rsi + 0x28], 0
0x00008fda      75eb           jne 0x8fc7
0x00008fdc      e94fd9ffff     jmp sym.queue_insert
0x00008fe1      0f1f440000     nop dword [rax + rax]                   ; .//src:132
0x00008fe6      662e0f1f8400.  nop word cs:[rax + rax]
;-- sortlines:
0x00008ff0      4157           push r15
0x00008ff2      4156           push r14
0x00008ff4      4155           push r13
0x00008ff6      4154           push r12
0x00008ff8      4d89c4         mov r12, r8
0x00008ffb      55             push rbp
0x00008ffc      53             push rbx
0x00008ffd      4889cb         mov rbx, rcx
0x00009000      4989f0         mov r8, rsi
0x00009003      4889fd         mov rbp, rdi
0x00009006      4881ec980000.  sub rsp, 0x98
0x0000900d      4c8b7b28       mov r15, qword [rbx + 0x28]
0x00009011      4c8b7330       mov r14, qword [rbx + 0x30]
0x00009015      64488b042528.  mov rax, qword fs:[0x28]
0x0000901e      488984248800.  mov qword [rsp + 0x88], rax
0x00009026      31c0           xor eax, eax
0x00009028      488b4340       mov rax, qword [rbx + 0x40]
0x0000902c      488b8c24d000.  mov rcx, qword [rsp + 0xd0]
0x00009034      49d1e8         shr r8, 1
0x00009037      4889542420     mov qword [rsp + 0x20], rdx
0x0000903c      4c894c2428     mov qword [rsp + 0x28], r9
0x00009041      48897c2450     mov qword [rsp + 0x50], rdi
0x00009046      4c89442458     mov qword [rsp + 0x58], r8
0x0000904b      4889442468     mov qword [rsp + 0x68], rax
0x00009050      4b8d0437       lea rax, [r15 + r14]
0x00009054      48894c2430     mov qword [rsp + 0x30], rcx
0x00009059      4c89442408     mov qword [rsp + 8], r8
0x0000905e      4889542460     mov qword [rsp + 0x60], rdx
0x00009063      483dffff0100   cmp rax, 0x1ffff                        ; .//src:182
0x00009069      4c89642470     mov qword [rsp + 0x70], r12
0x0000906e      4c894c2478     mov qword [rsp + 0x78], r9
0x00009073      48898c248000.  mov qword [rsp + 0x80], rcx
0x0000907b      760d           jbe 0x908a
0x0000907d      4883fe01       cmp rsi, 1
0x00009081      4989f5         mov r13, rsi
0x00009084      0f87ca050000   ja 0x9654
0x0000908a      488b442420     mov rax, qword [rsp + 0x20]
0x0000908f      4d89fd         mov r13, r15
0x00009092      4989e8         mov r8, rbp
0x00009095      49c1e505       shl r13, 5                              ; .//src:-7
0x00009099      49f7dd         neg r13
0x0000909c      48c1e005       shl rax, 5
0x000090a0      4929c0         sub r8, rax
0x000090a3      4983fe01       cmp r14, 1
0x000090a7      4a8d442d00     lea rax, [rbp + r13]
0x000090ac      7634           jbe 0x90e2
0x000090ae      4c89fa         mov rdx, r15
0x000090b1      4c89c1         mov rcx, r8
0x000090b4      4889c7         mov rdi, rax
0x000090b7      48d1ea         shr rdx, 1
0x000090ba      4c89f6         mov rsi, r14
0x000090bd      4c89442410     mov qword [rsp + 0x10], r8
0x000090c2      48c1e205       shl rdx, 5
0x000090c6      4889442408     mov qword [rsp + 8], rax
0x000090cb      4829d1         sub rcx, rdx
0x000090ce      4889ca         mov rdx, rcx
0x000090d1      31c9           xor ecx, ecx
0x000090d3      e8c8f6ffff     call sym.sequential_sort
0x000090d8      4c8b442410     mov r8, qword [rsp + 0x10]              ; .//src:-10
0x000090dd      488b442408     mov rax, qword [rsp + 8]
0x000090e2      4983ff01       cmp r15, 1
0x000090e6      761a           jbe 0x9102
0x000090e8      31c9           xor ecx, ecx
0x000090ea      4c89c2         mov rdx, r8
0x000090ed      4c89fe         mov rsi, r15
0x000090f0      4889ef         mov rdi, rbp
0x000090f3      4889442408     mov qword [rsp + 8], rax
0x000090f8      e8a3f6ffff     call sym.sequential_sort
0x000090fd      488b442408     mov rax, qword [rsp + 8]
0x00009102      4c89f6         mov rsi, r14
0x00009105      48892b         mov qword [rbx], rbp
0x00009108      48894308       mov qword [rbx + 8], rax
0x0000910c      48c1e605       shl rsi, 5
0x00009110      48894310       mov qword [rbx + 0x10], rax
0x00009114      4c89e7         mov rdi, r12
0x00009117      4929f5         sub r13, rsi
0x0000911a      4889de         mov rsi, rbx
0x0000911d      4c01ed         add rbp, r13
0x00009120      4d8d6c2408     lea r13, [r12 + 8]
0x00009125      48896b18       mov qword [rbx + 0x18], rbp             ; .//src:-22
0x00009129      498d6c2430     lea rbp, [r12 + 0x30]
0x0000912e      e8fdd7ffff     call sym.queue_insert
0x00009133      0f1f440000     nop dword [rax + rax]
0x00009138      4c89ef         mov rdi, r13
0x0000913b      e860a0ffff     call sym.imp.pthread_mutex_lock
0x00009140      eb11           jmp 0x9153
0x00009142      660f1f440000   nop word [rax + rax]
0x00009148      4c89ee         mov rsi, r13
0x0000914b      4889ef         mov rdi, rbp
0x0000914e      e8dd9affff     call sym.imp.pthread_cond_wait
0x00009153      498b3c24       mov rdi, qword [r12]
0x00009157      e8a4490000     call sym.heap_remove_top
0x0000915c      4885c0         test rax, rax
0x0000915f      74e7           je 0x9148
0x00009161      4889c3         mov rbx, rax                            ; .//src:-21
0x00009164      4c89ef         mov rdi, r13
0x00009167      e8849dffff     call sym.imp.pthread_mutex_unlock
0x0000916c      488d4358       lea rax, [rbx + 0x58]
0x00009170      4889c7         mov rdi, rax
0x00009173      4889442418     mov qword [rsp + 0x18], rax
0x00009178      e823a0ffff     call sym.imp.pthread_mutex_lock
0x0000917d      8b4350         mov eax, dword [rbx + 0x50]
0x00009180      c6435400       mov byte [rbx + 0x54], 0
0x00009184      85c0           test eax, eax
0x00009186      0f8494020000   je 0x9420
0x0000918c      488b542420     mov rdx, qword [rsp + 0x20]
0x00009191      488b3b         mov rdi, qword [rbx]
0x00009194      8d4c0002       lea ecx, [rax + rax + 2]
0x00009198      488b7308       mov rsi, qword [rbx + 8]
0x0000919c      48d3ea         shr rdx, cl
0x0000919f      83f801         cmp eax, 1                              ; .//src:72
0x000091a2      48897c2408     mov qword [rsp + 8], rdi
0x000091a7      4889742410     mov qword [rsp + 0x10], rsi             ; .//src:62
0x000091ac      4c8d7a01       lea r15, [rdx + 1]
0x000091b0      0f864a010000   jbe 0x9300
0x000091b6      488b4320       mov rax, qword [rbx + 0x20]
0x000091ba      4c8b30         mov r14, qword [rax]
0x000091bd      eb27           jmp 0x91e6
0x000091bf      90             nop
0x000091c0      488b4308       mov rax, qword [rbx + 8]
0x000091c4      488b3b         mov rdi, qword [rbx]
0x000091c7      f30f6f40e0     movdqu xmm0, xmmword [rax - 0x20]
0x000091cc      488d70e0       lea rsi, [rax - 0x20]
0x000091d0      48897308       mov qword [rbx + 8], rsi
0x000091d4      410f1106       movups xmmword [r14], xmm0
0x000091d8      f30f6f40f0     movdqu xmm0, xmmword [rax - 0x10]
0x000091dd      410f114610     movups xmmword [r14 + 0x10], xmm0
0x000091e2      4983ef01       sub r15, 1
0x000091e6      488b4310       mov rax, qword [rbx + 0x10]
0x000091ea      4839f8         cmp rax, rdi
0x000091ed      0f84ad010000   je 0x93a0
0x000091f3      48397318       cmp qword [rbx + 0x18], rsi
0x000091f7      744e           je 0x9247
0x000091f9      4d85ff         test r15, r15
0x000091fc      7442           je 0x9240
0x000091fe      4883ee20       sub rsi, 0x20                           ; "@"
0x00009202      4883ef20       sub rdi, 0x20                           ; "@"
0x00009206      4983ee20       sub r14, 0x20                           ; "@"
0x0000920a      e8d1f4ffff     call sym.compare
0x0000920f      85c0           test eax, eax
0x00009211      7fad           jg 0x91c0
0x00009213      488b03         mov rax, qword [rbx]
0x00009216      488b7308       mov rsi, qword [rbx + 8]
0x0000921a      f30f6f40e0     movdqu xmm0, xmmword [rax - 0x20]
0x0000921f      488d78e0       lea rdi, [rax - 0x20]
0x00009223      48893b         mov qword [rbx], rdi
0x00009226      410f1106       movups xmmword [r14], xmm0
0x0000922a      f30f6f40f0     movdqu xmm0, xmmword [rax - 0x10]
0x0000922f      410f114610     movups xmmword [r14 + 0x10], xmm0
0x00009234      ebac           jmp 0x91e2
0x00009236      662e0f1f8400.  nop word cs:[rax + rax]
0x00009240      49c7c7ffffff.  mov r15, 0xffffffffffffffff
0x00009247      4c8b442410     mov r8, qword [rsp + 0x10]
0x0000924c      4c8b5c2408     mov r11, qword [rsp + 8]
0x00009251      4c8b4b30       mov r9, qword [rbx + 0x30]
0x00009255      4c8b5328       mov r10, qword [rbx + 0x28]
0x00009259      4929f0         sub r8, rsi
0x0000925c      4929fb         sub r11, rdi
0x0000925f      49c1f805       sar r8, 5
0x00009263      49c1fb05       sar r11, 5
0x00009267      4d39c8         cmp r8, r9
0x0000926a      4c89d9         mov rcx, r11
0x0000926d      0f843d010000   je 0x93b0
0x00009273      4d39d3         cmp r11, r10
0x00009276      0f84e4010000   je 0x9460
0x0000927c      488b4320       mov rax, qword [rbx + 0x20]
0x00009280      4c8930         mov qword [rax], r14
0x00009283      4929ca         sub r10, rcx
0x00009286      4d29c1         sub r9, r8
0x00009289      807b5400       cmp byte [rbx + 0x54], 0
0x0000928d      4c895328       mov qword [rbx + 0x28], r10
0x00009291      4c894b30       mov qword [rbx + 0x30], r9
0x00009295      0f84f5000000   je 0x9390
0x0000929b      837b5001       cmp dword [rbx + 0x50], 1
0x0000929f      772f           ja 0x92d0
0x000092a1      488b4330       mov rax, qword [rbx + 0x30]
0x000092a5      48034328       add rax, qword [rbx + 0x28]
0x000092a9      7515           jne 0x92c0
0x000092ab      488b7338       mov rsi, qword [rbx + 0x38]
0x000092af      4c89e7         mov rdi, r12
0x000092b2      e879d6ffff     call sym.queue_insert
0x000092b7      660f1f840000.  nop word [rax + rax]
0x000092c0      488b7c2418     mov rdi, qword [rsp + 0x18]
0x000092c5      e8269cffff     call sym.imp.pthread_mutex_unlock
0x000092ca      e969feffff     jmp 0x9138
0x000092cf      90             nop                                     ; .//src:87
0x000092d0      488b4338       mov rax, qword [rbx + 0x38]
0x000092d4      488d7858       lea rdi, [rax + 0x58]
0x000092d8      e8c39effff     call sym.imp.pthread_mutex_lock
0x000092dd      488b7338       mov rsi, qword [rbx + 0x38]
0x000092e1      807e5400       cmp byte [rsi + 0x54], 0
0x000092e5      750c           jne 0x92f3
0x000092e7      4c89e7         mov rdi, r12
0x000092ea      e8b1fcffff     call sym.queue_check_insert.part.12
0x000092ef      488b7338       mov rsi, qword [rbx + 0x38]
0x000092f3      488d7e58       lea rdi, [rsi + 0x58]
0x000092f7      e8f49bffff     call sym.imp.pthread_mutex_unlock
0x000092fc      ebc2           jmp 0x92c0
0x000092fe      6690           nop
0x00009300      48896c2438     mov qword [rsp + 0x38], rbp
0x00009305      488b7c2408     mov rdi, qword [rsp + 8]
0x0000930a      4889dd         mov rbp, rbx
0x0000930d      488b742410     mov rsi, qword [rsp + 0x10]
0x00009312      4c8b742428     mov r14, qword [rsp + 0x28]             ; .//src:82
0x00009317      488b5c2430     mov rbx, qword [rsp + 0x30]
0x0000931c      eb25           jmp 0x9343
0x0000931e      6690           nop
0x00009320      488b4508       mov rax, qword [rbp + 8]
0x00009324      4889da         mov rdx, rbx
0x00009327      4c89f6         mov rsi, r14
0x0000932a      488d78e0       lea rdi, [rax - 0x20]
0x0000932e      48897d08       mov qword [rbp + 8], rdi
0x00009332      e8b9f6ffff     call sym.write_unique
0x00009337      488b7508       mov rsi, qword [rbp + 8]
0x0000933b      488b7d00       mov rdi, qword [rbp]
0x0000933f      4983ef01       sub r15, 1
0x00009343      488b4510       mov rax, qword [rbp + 0x10]
0x00009347      4839f8         cmp rax, rdi
0x0000934a      0f8480010000   je 0x94d0
0x00009350      48397518       cmp qword [rbp + 0x18], rsi
0x00009354      0f84d6020000   je 0x9630
0x0000935a      4d85ff         test r15, r15
0x0000935d      0f84dd020000   je 0x9640
0x00009363      4883ee20       sub rsi, 0x20                           ; "@"
0x00009367      4883ef20       sub rdi, 0x20                           ; "@"
0x0000936b      e870f3ffff     call sym.compare
0x00009370      85c0           test eax, eax
0x00009372      7fac           jg 0x9320
0x00009374      488b4500       mov rax, qword [rbp]
0x00009378      4889da         mov rdx, rbx
0x0000937b      4c89f6         mov rsi, r14
0x0000937e      488d78e0       lea rdi, [rax - 0x20]
0x00009382      48897d00       mov qword [rbp], rdi
0x00009386      e865f6ffff     call sym.write_unique
0x0000938b      ebaa           jmp 0x9337
0x0000938d      0f1f00         nop dword [rax]
0x00009390      4889de         mov rsi, rbx
0x00009393      4c89e7         mov rdi, r12
0x00009396      e805fcffff     call sym.queue_check_insert.part.12
0x0000939b      e9fbfeffff     jmp 0x929b
0x000093a0      4889f8         mov rax, rdi
0x000093a3      e99ffeffff     jmp 0x9247
0x000093a8      0f1f84000000.  nop dword [rax + rax]
0x000093b0      4839c7         cmp rdi, rax
0x000093b3      0f84c3feffff   je 0x927c
0x000093b9      4d85ff         test r15, r15
0x000093bc      498d77ff       lea rsi, [r15 - 1]
0x000093c0      0f84b6feffff   je 0x927c
0x000093c6      4883ef20       sub rdi, 0x20                           ; .//src:248 ; "@"
0x000093ca      eb15           jmp 0x93e1
0x000093cc      0f1f4000       nop dword [rax]
0x000093d0      4883ee01       sub rsi, 1
0x000093d4      488d57e0       lea rdx, [rdi - 0x20]
0x000093d8      4883feff       cmp rsi, 0xffffffffffffffff
0x000093dc      7421           je 0x93ff
0x000093de      4889d7         mov rdi, rdx
0x000093e1      f30f6f07       movdqu xmm0, xmmword [rdi]
0x000093e5      4983ee20       sub r14, 0x20                           ; "@"
0x000093e9      4839c7         cmp rdi, rax
0x000093ec      48893b         mov qword [rbx], rdi
0x000093ef      410f1106       movups xmmword [r14], xmm0
0x000093f3      f30f6f4710     movdqu xmm0, xmmword [rdi + 0x10]
0x000093f8      410f114610     movups xmmword [r14 + 0x10], xmm0       ; .//src:82
0x000093fd      75d1           jne 0x93d0
0x000093ff      488b442408     mov rax, qword [rsp + 8]
0x00009404      4d89c8         mov r8, r9
0x00009407      4829f8         sub rax, rdi
0x0000940a      48c1f805       sar rax, 5
0x0000940e      4889c1         mov rcx, rax
0x00009411      e966feffff     jmp 0x927c
0x00009416      662e0f1f8400.  nop word cs:[rax + rax]
0x00009420      488b7c2418     mov rdi, qword [rsp + 0x18]             ; .//src:250
0x00009425      e8c69affff     call sym.imp.pthread_mutex_unlock
0x0000942a      4889de         mov rsi, rbx
0x0000942d      4c89e7         mov rdi, r12
0x00009430      e8fbd4ffff     call sym.queue_insert
0x00009435      488b84248800.  mov rax, qword [rsp + 0x88]
0x0000943d      644833042528.  xor rax, qword fs:[0x28]
0x00009446      0f858f020000   jne 0x96db
0x0000944c      4881c4980000.  add rsp, 0x98
0x00009453      5b             pop rbx
0x00009454      5d             pop rbp
0x00009455      415c           pop r12
0x00009457      415d           pop r13
0x00009459      415e           pop r14
0x0000945b      415f           pop r15
0x0000945d      c3             ret
0x0000945e      6690           nop
0x00009460      488b7b18       mov rdi, qword [rbx + 0x18]
0x00009464      4839f7         cmp rdi, rsi
0x00009467      0f840ffeffff   je 0x927c
0x0000946d      4d85ff         test r15, r15
0x00009470      498d47ff       lea rax, [r15 - 1]
0x00009474      0f8402feffff   je 0x927c
0x0000947a      4883ee20       sub rsi, 0x20                           ; "@"
0x0000947e      eb11           jmp 0x9491
0x00009480      4883e801       sub rax, 1
0x00009484      488d56e0       lea rdx, [rsi - 0x20]
0x00009488      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000948c      7422           je 0x94b0                               ; .//src:-1649
0x0000948e      4889d6         mov rsi, rdx
0x00009491      f30f6f06       movdqu xmm0, xmmword [rsi]
0x00009495      4983ee20       sub r14, 0x20                           ; "@"
0x00009499      4839fe         cmp rsi, rdi
0x0000949c      48897308       mov qword [rbx + 8], rsi
0x000094a0      410f1106       movups xmmword [r14], xmm0
0x000094a4      f30f6f4610     movdqu xmm0, xmmword [rsi + 0x10]       ; .//src:-1645
0x000094a9      410f114610     movups xmmword [r14 + 0x10], xmm0
0x000094ae      75d0           jne 0x9480
0x000094b0      4c8b7c2410     mov r15, qword [rsp + 0x10]             ; .//src:-1647
0x000094b5      4c89d1         mov rcx, r10
0x000094b8      4929f7         sub r15, rsi
0x000094bb      4d89f8         mov r8, r15
0x000094be      49c1f805       sar r8, 5
0x000094c2      e9b5fdffff     jmp 0x927c
0x000094c7      660f1f840000.  nop word [rax + rax]
0x000094d0      4889eb         mov rbx, rbp
0x000094d3      488b6c2438     mov rbp, qword [rsp + 0x38]
0x000094d8      4889f8         mov rax, rdi
0x000094db      488b542408     mov rdx, qword [rsp + 8]
0x000094e0      4c8b442410     mov r8, qword [rsp + 0x10]
0x000094e5      4c8b4b30       mov r9, qword [rbx + 0x30]
0x000094e9      4829fa         sub rdx, rdi
0x000094ec      4929f0         sub r8, rsi
0x000094ef      4889d1         mov rcx, rdx                            ; .//src:-1645
0x000094f2      49c1f805       sar r8, 5
0x000094f6      48c1f905       sar rcx, 5
0x000094fa      4d39c8         cmp r8, r9
0x000094fd      0f849d000000   je 0x95a0
0x00009503      4c8b5328       mov r10, qword [rbx + 0x28]
0x00009507      4c39d1         cmp rcx, r10
0x0000950a      0f8573fdffff   jne 0x9283
0x00009510      48397318       cmp qword [rbx + 0x18], rsi
0x00009514      0f8474010000   je 0x968e
0x0000951a      4d85ff         test r15, r15
0x0000951d      498d47ff       lea rax, [r15 - 1]
0x00009521      0f8467010000   je 0x968e
0x00009527      48896c2438     mov qword [rsp + 0x38], rbp
0x0000952c      4c8b742428     mov r14, qword [rsp + 0x28]
0x00009531      4889c5         mov rbp, rax
0x00009534      4c8b7c2430     mov r15, qword [rsp + 0x30]
0x00009539      eb0f           jmp 0x954a
0x0000953b      0f1f440000     nop dword [rax + rax]
0x00009540      4883ed01       sub rbp, 1
0x00009544      4883fdff       cmp rbp, 0xffffffffffffffff
0x00009548      741d           je 0x9567
0x0000954a      488d7ee0       lea rdi, [rsi - 0x20]
0x0000954e      4c89fa         mov rdx, r15
0x00009551      4c89f6         mov rsi, r14
0x00009554      48897b08       mov qword [rbx + 8], rdi
0x00009558      e893f4ffff     call sym.write_unique
0x0000955d      488b7308       mov rsi, qword [rbx + 8]                ; .//src:-1618
0x00009561      483b7318       cmp rsi, qword [rbx + 0x18]
0x00009565      75d9           jne 0x9540
0x00009567      4c8b742408     mov r14, qword [rsp + 8]
0x0000956c      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x00009571      4c2b33         sub r14, qword [rbx]
0x00009574      488b6c2438     mov rbp, qword [rsp + 0x38]
0x00009579      4c8b5328       mov r10, qword [rbx + 0x28]
0x0000957d      4c8b4b30       mov r9, qword [rbx + 0x30]
0x00009581      4929f7         sub r15, rsi
0x00009584      4d89f8         mov r8, r15
0x00009587      4c89f1         mov rcx, r14
0x0000958a      49c1f805       sar r8, 5
0x0000958e      48c1f905       sar rcx, 5
0x00009592      e9ecfcffff     jmp 0x9283
0x00009597      660f1f840000.  nop word [rax + rax]
0x000095a0      4839f8         cmp rax, rdi
0x000095a3      0f84d9000000   je 0x9682
0x000095a9      4d85ff         test r15, r15
0x000095ac      498d47ff       lea rax, [r15 - 1]
0x000095b0      0f84cc000000   je 0x9682                               ; .//src:-1605
0x000095b6      48896c2438     mov qword [rsp + 0x38], rbp
0x000095bb      4c8b742428     mov r14, qword [rsp + 0x28]
0x000095c0      4889c5         mov rbp, rax
0x000095c3      4c8b7c2430     mov r15, qword [rsp + 0x30]
0x000095c8      eb10           jmp 0x95da
0x000095ca      660f1f440000   nop word [rax + rax]
0x000095d0      4883ed01       sub rbp, 1
0x000095d4      4883fdff       cmp rbp, 0xffffffffffffffff             ; .//src:-1602
0x000095d8      741b           je 0x95f5
0x000095da      4883ef20       sub rdi, 0x20                           ; "@"
0x000095de      4c89fa         mov rdx, r15
0x000095e1      4c89f6         mov rsi, r14
0x000095e4      48893b         mov qword [rbx], rdi
0x000095e7      e804f4ffff     call sym.write_unique
0x000095ec      488b3b         mov rdi, qword [rbx]
0x000095ef      483b7b10       cmp rdi, qword [rbx + 0x10]
0x000095f3      75db           jne 0x95d0
0x000095f5      4c8b742408     mov r14, qword [rsp + 8]
0x000095fa      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x000095ff      4c2b7b08       sub r15, qword [rbx + 8]
0x00009603      488b6c2438     mov rbp, qword [rsp + 0x38]
0x00009608      4c8b5328       mov r10, qword [rbx + 0x28]
0x0000960c      4c8b4b30       mov r9, qword [rbx + 0x30]
0x00009610      4929fe         sub r14, rdi
0x00009613      4c89f1         mov rcx, r14
0x00009616      4d89f8         mov r8, r15
0x00009619      48c1f905       sar rcx, 5
0x0000961d      49c1f805       sar r8, 5
0x00009621      e95dfcffff     jmp 0x9283
0x00009626      662e0f1f8400.  nop word cs:[rax + rax]
0x00009630      4889eb         mov rbx, rbp
0x00009633      488b6c2438     mov rbp, qword [rsp + 0x38]
0x00009638      e99efeffff     jmp 0x94db
0x0000963d      0f1f00         nop dword [rax]
0x00009640      4889eb         mov rbx, rbp
0x00009643      49c7c7ffffff.  mov r15, 0xffffffffffffffff
0x0000964a      488b6c2438     mov rbp, qword [rsp + 0x38]
0x0000964f      e987feffff     jmp 0x94db
0x00009654      488d4c2450     lea rcx, [rsp + 0x50]
0x00009659      488d7c2448     lea rdi, [rsp + 0x48]
0x0000965e      488d157b0000.  lea rdx, sym.sortlines_thread           ; 0x96e0 ; "H\x83\xec\x10H\x8bO\x18H\x8bW\x10H\x8bw\bL\x8bO(\xffw0L\x8bG H\x8b?\xe8\xed\xf8\xff\xff1\xc0H\x83\xc4\x18\xc3f\x0f\x1fD"
0x00009665      31f6           xor esi, esi                            ; .//src:-1580
0x00009667      e87494ffff     call sym.imp.pthread_create
0x0000966c      85c0           test eax, eax
0x0000966e      4c8b442408     mov r8, qword [rsp + 8]
0x00009673      7421           je 0x9696
0x00009675      4c8b7b28       mov r15, qword [rbx + 0x28]             ; .//src:-1569
0x00009679      4c8b7330       mov r14, qword [rbx + 0x30]
0x0000967d      e908faffff     jmp 0x908a
0x00009682      4c8b5328       mov r10, qword [rbx + 0x28]
0x00009686      4d89c1         mov r9, r8
0x00009689      e9f5fbffff     jmp 0x9283
0x0000968e      4989ca         mov r10, rcx
0x00009691      e9edfbffff     jmp 0x9283
0x00009696      488b4328       mov rax, qword [rbx + 0x28]
0x0000969a      4883ec08       sub rsp, 8
0x0000969e      488b4b48       mov rcx, qword [rbx + 0x48]             ; .//src:-1637
0x000096a2      ff742438       push qword [rsp + 0x38]                 ; .//src:-1636
0x000096a6      4c8b4c2438     mov r9, qword [rsp + 0x38]
0x000096ab      4c89ee         mov rsi, r13
0x000096ae      488b542430     mov rdx, qword [rsp + 0x30]
0x000096b3      4889ef         mov rdi, rbp
0x000096b6      4c29c6         sub rsi, r8
0x000096b9      48c1e005       shl rax, 5
0x000096bd      4d89e0         mov r8, r12
0x000096c0      4829c7         sub rdi, rax                            ; .//src:-1685
0x000096c3      e828f9ffff     call sym.sortlines
0x000096c8      488b7c2458     mov rdi, qword [rsp + 0x58]
0x000096cd      31f6           xor esi, esi
0x000096cf      e88c99ffff     call sym.imp.pthread_join
0x000096d4      58             pop rax
0x000096d5      5a             pop rdx                                 ; .//src:-1684
0x000096d6      e95afdffff     jmp 0x9435
0x000096db      e8c095ffff     call sym.imp.__stack_chk_fail
;-- sortlines_thread:
0x000096e0      4883ec10       sub rsp, 0x10
0x000096e4      488b4f18       mov rcx, qword [rdi + 0x18]
0x000096e8      488b5710       mov rdx, qword [rdi + 0x10]
0x000096ec      488b7708       mov rsi, qword [rdi + 8]
0x000096f0      4c8b4f28       mov r9, qword [rdi + 0x28]
0x000096f4      ff7730         push qword [rdi + 0x30]
0x000096f7      4c8b4720       mov r8, qword [rdi + 0x20]
0x000096fb      488b3f         mov rdi, qword [rdi]
0x000096fe      e8edf8ffff     call sym.sortlines
0x00009703      31c0           xor eax, eax
0x00009705      4883c418       add rsp, 0x18
0x00009709      c3             ret
0x0000970a      660f1f440000   nop word [rax + rax]
;-- fillbuf:
0x00009710      807f3000       cmp byte [rdi + 0x30], 0
0x00009714      0f8567030000   jne 0x9a81
0x0000971a      4157           push r15                                ; .//src:-1671
0x0000971c      4156           push r14
0x0000971e      4889f8         mov rax, rdi
0x00009721      4155           push r13
0x00009723      4154           push r12
0x00009725      55             push rbp
0x00009726      53             push rbx
0x00009727      4883ec48       sub rsp, 0x48
0x0000972b      488b1dfe0c21.  mov rbx, qword [obj.keylist]            ; [0x21a430:8]=0
0x00009732      488b2df70821.  mov rbp, qword [obj.merge_buffer_size]  ; [0x21a030:8]=0x40000
0x00009739      48897c2428     mov qword [rsp + 0x28], rdi             ; .//src:-1699
0x0000973e      0fb63df30821.  movzx edi, byte [obj.eolchar]           ; [0x21a038:1]=10 ; "\n"
0x00009745      4889542438     mov qword [rsp + 0x38], rdx
0x0000974a      4889742420     mov qword [rsp + 0x20], rsi
0x0000974f      40887c2437     mov byte [rsp + 0x37], dil
0x00009754      488b7828       mov rdi, qword [rax + 0x28]
0x00009758      48897c2408     mov qword [rsp + 8], rdi
0x0000975d      4889c7         mov rdi, rax
0x00009760      488b4008       mov rax, qword [rax + 8]
0x00009764      488b5720       mov rdx, qword [rdi + 0x20]
0x00009768      4c8b3f         mov r15, qword [rdi]
0x0000976b      4839d0         cmp rax, rdx
0x0000976e      0f8595010000   jne 0x9909
0x00009774      488b4710       mov rax, qword [rdi + 0x10]             ; .//src:-1753
0x00009778      488b7c2408     mov rdi, qword [rsp + 8]
0x0000977d      4883ed22       sub rbp, 0x22
0x00009781      4883c701       add rdi, 1
0x00009785      48897c2410     mov qword [rsp + 0x10], rdi
0x0000978a      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000978f      4c8b6718       mov r12, qword [rdi + 0x18]
0x00009793      0fbe7c2437     movsx edi, byte [rsp + 0x37]
0x00009798      897c2430       mov dword [rsp + 0x30], edi
0x0000979c      0f1f4000       nop dword [rax]
0x000097a0      4d01fc         add r12, r15
0x000097a3      4d8d2c17       lea r13, [r15 + rdx]                    ; stat.h:-3351
0x000097a7      4889c2         mov rdx, rax
0x000097aa      48c1e205       shl rdx, 5
0x000097ae      4d89e6         mov r14, r12
0x000097b1      4929d6         sub r14, rdx
0x000097b4      488b542408     mov rdx, qword [rsp + 8]
0x000097b9      480fafd0       imul rdx, rax
0x000097bd      4929d4         sub r12, rdx
0x000097c0      4d29ec         sub r12, r13
0x000097c3      4885c0         test rax, rax
0x000097c6      0f844f020000   je 0x9a1b
0x000097cc      4d8b4e08       mov r9, qword [r14 + 8]
0x000097d0      4d030e         add r9, qword [r14]
0x000097d3      4d89ef         mov r15, r13                            ; .//src:-1808
0x000097d6      4d89cd         mov r13, r9
0x000097d9      0f1f80000000.  nop dword [rax]
0x000097e0      4c3b642410     cmp r12, qword [rsp + 0x10]
0x000097e5      0f8644020000   jbe 0x9a2f                              ; .//src:-1795
0x000097eb      498d4424ff     lea rax, [r12 - 1]
0x000097f0      31d2           xor edx, edx
0x000097f2      488b4c2420     mov rcx, qword [rsp + 0x20]
0x000097f7      4c89ff         mov rdi, r15
0x000097fa      be01000000     mov esi, 1
0x000097ff      48f7742410     div qword [rsp + 0x10]
0x00009804      4889c2         mov rdx, rax
0x00009807      4889442418     mov qword [rsp + 0x18], rax
0x0000980c      e8ff93ffff     call sym.imp.fread_unlocked
0x00009811      4c8b5c2418     mov r11, qword [rsp + 0x18]
0x00009816      498d3c07       lea rdi, [r15 + rax]
0x0000981a      4929c4         sub r12, rax
0x0000981d      48893c24       mov qword [rsp], rdi
0x00009821      4939c3         cmp r11, rax
0x00009824      744a           je 0x9870
0x00009826      488b442420     mov rax, qword [rsp + 0x20]
0x0000982b      8b00           mov eax, dword [rax]
0x0000982d      a820           test al, 0x20                           ; "@"
0x0000982f      0f857a020000   jne 0x9aaf
0x00009835      a810           test al, 0x10                           ; stat.h:-3569
0x00009837      7437           je 0x9870
0x00009839      488b442428     mov rax, qword [rsp + 0x28]
0x0000983e      4889c6         mov rsi, rax
0x00009841      c6403001       mov byte [rax + 0x30], 1
0x00009845      488b0424       mov rax, qword [rsp]
0x00009849      483906         cmp qword [rsi], rax
0x0000984c      0f841e020000   je 0x9a70
0x00009852      4939c5         cmp r13, rax
0x00009855      7419           je 0x9870
0x00009857      0fb6742437     movzx esi, byte [rsp + 0x37]
0x0000985c      403870ff       cmp byte [rax - 1], sil
0x00009860      740e           je 0x9870
0x00009862      408830         mov byte [rax], sil
0x00009865      4883c001       add rax, 1
0x00009869      48890424       mov qword [rsp], rax
0x0000986d      0f1f00         nop dword [rax]
0x00009870      488b0424       mov rax, qword [rsp]
0x00009874      4d89fb         mov r11, r15
0x00009877      4889442418     mov qword [rsp + 0x18], rax
0x0000987c      eb17           jmp 0x9895
0x0000987e      6690           nop
0x00009880      4889da         mov rdx, rbx
0x00009883      4c89fe         mov rsi, r15
0x00009886      4c89ef         mov rdi, r13
0x00009889      e8e2d0ffff     call sym.begfield.isra.1
0x0000988e      49894610       mov qword [r14 + 0x10], rax
0x00009892      4d89dd         mov r13, r11
0x00009895      488b1424       mov rdx, qword [rsp]
0x00009899      8b742430       mov esi, dword [rsp + 0x30]
0x0000989d      4c89df         mov rdi, r11
0x000098a0      4c29da         sub rdx, r11
0x000098a3      e83895ffff     call sym.imp.memchr
0x000098a8      4885c0         test rax, rax                           ; stat.h:-3567
0x000098ab      0f848f000000   je 0x9940
0x000098b1      4c8d5801       lea r11, [rax + 1]
0x000098b5      4983ee20       sub r14, 0x20                           ; "@"
0x000098b9      c60000         mov byte [rax], 0
0x000098bc      4d892e         mov qword [r14], r13
0x000098bf      4d89df         mov r15, r11
0x000098c2      4d29ef         sub r15, r13
0x000098c5      4c39fd         cmp rbp, r15
0x000098c8      4d897e08       mov qword [r14 + 8], r15
0x000098cc      490f42ef       cmovb rbp, r15
0x000098d0      4c2b642408     sub r12, qword [rsp + 8]
0x000098d5      4885db         test rbx, rbx                           ; .//src:-710
0x000098d8      74b8           je 0x9892                               ; stat.h:-3567
0x000098da      48837b10ff     cmp qword [rbx + 0x10], 0xffffffffffffffff
0x000098df      740e           je 0x98ef
0x000098e1      4889da         mov rdx, rbx
0x000098e4      4c89fe         mov rsi, r15
0x000098e7      4c89ef         mov rdi, r13
0x000098ea      e871d1ffff     call sym.limfield.isra.2
0x000098ef      48833bff       cmp qword [rbx], 0xffffffffffffffff
0x000098f3      49894618       mov qword [r14 + 0x18], rax
0x000098f7      7587           jne 0x9880
0x000098f9      807b3000       cmp byte [rbx + 0x30], 0
0x000098fd      0f85dd000000   jne 0x99e0
0x00009903      4d896e10       mov qword [r14 + 0x10], r13
0x00009907      eb89           jmp 0x9892
0x00009909      4829d0         sub rax, rdx
0x0000990c      4c89ff         mov rdi, r15
0x0000990f      498d3407       lea rsi, [r15 + rax]
0x00009913      e8a896ffff     call sym.imp.memmove
0x00009918      488b442428     mov rax, qword [rsp + 0x28]
0x0000991d      488b5020       mov rdx, qword [rax + 0x20]
0x00009921      48c740100000.  mov qword [rax + 0x10], 0
0x00009929      4c8b38         mov r15, qword [rax]
0x0000992c      48895008       mov qword [rax + 8], rdx
0x00009930      31c0           xor eax, eax
0x00009932      e941feffff     jmp 0x9778
0x00009937      660f1f840000.  nop word [rax + rax]
0x00009940      488b442428     mov rax, qword [rsp + 0x28]
0x00009945      4c8b3c24       mov r15, qword [rsp]
0x00009949      80783000       cmp byte [rax + 0x30], 0                ; .//src:-708
0x0000994d      0f848dfeffff   je 0x97e0
0x00009953      4d89ef         mov r15, r13
0x00009956      488b742428     mov rsi, qword [rsp + 0x28]
0x0000995b      488b442418     mov rax, qword [rsp + 0x18]
0x00009960      488b3e         mov rdi, qword [rsi]
0x00009963      488b5618       mov rdx, qword [rsi + 0x18]
0x00009967      4829f8         sub rax, rdi
0x0000996a      48894608       mov qword [rsi + 8], rax
0x0000996e      488d0417       lea rax, [rdi + rdx]
0x00009972      4c29f0         sub rax, r14
0x00009975      48c1f805       sar rax, 5
0x00009979      4885c0         test rax, rax
0x0000997c      48894610       mov qword [rsi + 0x10], rax
0x00009980      0f85fe000000   jne 0x9a84
0x00009986      4889d6         mov rsi, rdx
0x00009989      48c1ee05       shr rsi, 5
0x0000998d      4885ff         test rdi, rdi
0x00009990      0f84ac000000   je 0x9a42
0x00009996      48b8a9aaaaaa.  movabs rax, 0x2aaaaaaaaaaaaa9
0x000099a0      4839c6         cmp rsi, rax
0x000099a3      0f87c2000000   ja 0x9a6b
0x000099a9      48c1ea06       shr rdx, 6                              ; .//src:-2061
0x000099ad      488d741601     lea rsi, [rsi + rdx + 1]
0x000099b2      48c1e605       shl rsi, 5
0x000099b6      4989f4         mov r12, rsi
0x000099b9      e882840000     call sym.xrealloc
0x000099be      4989c7         mov r15, rax
0x000099c1      488b442428     mov rax, qword [rsp + 0x28]
0x000099c6      4c8938         mov qword [rax], r15
0x000099c9      4c896018       mov qword [rax + 0x18], r12
0x000099cd      488b5008       mov rdx, qword [rax + 8]
0x000099d1      488b4010       mov rax, qword [rax + 0x10]
0x000099d5      e9c6fdffff     jmp 0x97a0
0x000099da      660f1f440000   nop word [rax + rax]
0x000099e0      410fb64500     movzx eax, byte [r13]
0x000099e5      488d3d740d21.  lea rdi, obj.blanks                     ; 0x21a760
0x000099ec      803c0700       cmp byte [rdi + rax], 0
0x000099f0      0f840dffffff   je 0x9903
0x000099f6      662e0f1f8400.  nop word cs:[rax + rax]
0x00009a00      4983c501       add r13, 1
0x00009a04      410fb64500     movzx eax, byte [r13]
0x00009a09      488d0d500d21.  lea rcx, obj.blanks                     ; 0x21a760
0x00009a10      803c0100       cmp byte [rcx + rax], 0
0x00009a14      75ea           jne 0x9a00
0x00009a16      e9e8feffff     jmp 0x9903
0x00009a1b      4c3b642410     cmp r12, qword [rsp + 0x10]
0x00009a20      4c89f8         mov rax, r15
0x00009a23      4d89ef         mov r15, r13
0x00009a26      4989c5         mov r13, rax
0x00009a29      0f87bcfdffff   ja 0x97eb
0x00009a2f      4c89e8         mov rax, r13
0x00009a32      4d89fd         mov r13, r15
0x00009a35      4c896c2418     mov qword [rsp + 0x18], r13
0x00009a3a      4989c7         mov r15, rax
0x00009a3d      e914ffffff     jmp 0x9956
0x00009a42      4885f6         test rsi, rsi
0x00009a45      b804000000     mov eax, 4
0x00009a4a      ba20000000     mov edx, 0x20                           ; "@"
0x00009a4f      480f44f0       cmove rsi, rax
0x00009a53      4889d0         mov rax, rdx
0x00009a56      31c9           xor ecx, ecx
0x00009a58      48f7e6         mul rsi
0x00009a5b      7072           jo 0x9acf
0x00009a5d      4885c0         test rax, rax                           ; .//src:-673
0x00009a60      7809           js 0x9a6b
0x00009a62      4885c9         test rcx, rcx
0x00009a65      0f8447ffffff   je 0x99b2
0x00009a6b      e8c0850000     call sym.xalloc_die
0x00009a70      4883c448       add rsp, 0x48
0x00009a74      31c0           xor eax, eax
0x00009a76      5b             pop rbx
0x00009a77      5d             pop rbp
0x00009a78      415c           pop r12
0x00009a7a      415d           pop r13
0x00009a7c      415e           pop r14
0x00009a7e      415f           pop r15
0x00009a80      c3             ret
0x00009a81      31c0           xor eax, eax
0x00009a83      c3             ret                                     ; .//src:-726
0x00009a84      488b442418     mov rax, qword [rsp + 0x18]
0x00009a89      4883c522       add rbp, 0x22
0x00009a8d      48892d9c0521.  mov qword [obj.merge_buffer_size], rbp  ; [0x21a030:8]=0x40000
0x00009a94      4c29f8         sub rax, r15
0x00009a97      48894620       mov qword [rsi + 0x20], rax
0x00009a9b      4883c448       add rsp, 0x48
0x00009a9f      b801000000     mov eax, 1
0x00009aa4      5b             pop rbx                                 ; .//src:-783
0x00009aa5      5d             pop rbp
0x00009aa6      415c           pop r12
0x00009aa8      415d           pop r13
0x00009aaa      415e           pop r14
0x00009aac      415f           pop r15
0x00009aae      c3             ret
0x00009aaf      488d3536ba00.  lea rsi, [0x000154ec]                   ; "read failed"
0x00009ab6      31ff           xor edi, edi
0x00009ab8      ba05000000     mov edx, 5
0x00009abd      e8ae91ffff     call sym.imp.dcgettext
0x00009ac2      488b742438     mov rsi, qword [rsp + 0x38]
0x00009ac7      4889c7         mov rdi, rax
0x00009aca      e851c8ffff     call sym.sort_die
0x00009acf      b901000000     mov ecx, 1
0x00009ad4      eb87           jmp 0x9a5d                              ; .//src:-781
0x00009ad6      662e0f1f8400.  nop word cs:[rax + rax]
;-- mergefps:
0x00009ae0      4157           push r15
0x00009ae2      4156           push r14
0x00009ae4      4989d7         mov r15, rdx
0x00009ae7      4155           push r13                                ; .//src:-745
0x00009ae9      4154           push r12
0x00009aeb      ba38000000     mov edx, 0x38                           ; '8'
0x00009af0      55             push rbp
0x00009af1      53             push rbx
0x00009af2      4881ecb80000.  sub rsp, 0xb8
0x00009af9      64488b042528.  mov rax, qword fs:[0x28]                ; .//src:-744
0x00009b02      48898424a800.  mov qword [rsp + 0xa8], rax
0x00009b0a      31c0           xor eax, eax
0x00009b0c      4889d0         mov rax, rdx
0x00009b0f      48897c2430     mov qword [rsp + 0x30], rdi
0x00009b14      4889742460     mov qword [rsp + 0x60], rsi             ; .//src:-702
0x00009b19      49f7e7         mul r15
0x00009b1c      48894c2450     mov qword [rsp + 0x50], rcx
0x00009b21      4c89442458     mov qword [rsp + 0x58], r8
0x00009b26      4c894c2418     mov qword [rsp + 0x18], r9
0x00009b2b      0f80a5070000   jo 0xa2d6
0x00009b31      31c9           xor ecx, ecx
0x00009b33      4885c0         test rax, rax
0x00009b36      0f8890070000   js 0xa2cc
0x00009b3c      4885c9         test rcx, rcx
0x00009b3f      0f8587070000   jne 0xa2cc
0x00009b45      4a8d3cfd0000.  lea rdi, [r15*8]
0x00009b4d      4c29ff         sub rdi, r15
0x00009b50      48c1e703       shl rdi, 3
0x00009b54      e887820000     call sym.xmalloc                        ; .//src:-694
0x00009b59      ba08000000     mov edx, 8
0x00009b5e      4889442428     mov qword [rsp + 0x28], rax
0x00009b63      31c9           xor ecx, ecx
0x00009b65      4889d0         mov rax, rdx
0x00009b68      49f7e7         mul r15
0x00009b6b      0f806f070000   jo 0xa2e0
0x00009b71      4885c0         test rax, rax
0x00009b74      0f8852070000   js 0xa2cc
0x00009b7a      4885c9         test rcx, rcx
0x00009b7d      0f8549070000   jne 0xa2cc
0x00009b83      4a8d1cfd0000.  lea rbx, [r15*8]
0x00009b8b      4531f6         xor r14d, r14d
0x00009b8e      4889df         mov rdi, rbx
0x00009b91      e84a820000     call sym.xmalloc
0x00009b96      4889df         mov rdi, rbx
0x00009b99      4889c5         mov rbp, rax
0x00009b9c      e83f820000     call sym.xmalloc
0x00009ba1      4889df         mov rdi, rbx                            ; .//src:-684
0x00009ba4      4889442410     mov qword [rsp + 0x10], rax
0x00009ba9      e832820000     call sym.xmalloc
0x00009bae      4889c3         mov rbx, rax
0x00009bb1      488b05780821.  mov rax, qword [obj.keylist]            ; [0x21a430:8]=0
0x00009bb8      48c784248000.  mov qword [rsp + 0x80], 0
0x00009bc4      4889442478     mov qword [rsp + 0x78], rax
0x00009bc9      488b442430     mov rax, qword [rsp + 0x30]
0x00009bce      4883e810       sub rax, 0x10
0x00009bd2      4d85ff         test r15, r15
0x00009bd5      4889442408     mov qword [rsp + 8], rax
0x00009bda      0f847b040000   je 0xa05b
0x00009be0      48895c2420     mov qword [rsp + 0x20], rbx
0x00009be5      48892c24       mov qword [rsp], rbp
0x00009be9      4c89fb         mov rbx, r15
0x00009bec      0f1f4000       nop dword [rax]
0x00009bf0      4e8d2cf50000.  lea r13, [r14*8]
0x00009bf8      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00009bfd      31d2           xor edx, edx
0x00009bff      be20000000     mov esi, 0x20                           ; "@"
0x00009c04      4c89e8         mov rax, r13
0x00009c07      4c29f0         sub rax, r14
0x00009c0a      4c8d3cc1       lea r15, [rcx + rax*8]
0x00009c0e      488b05430821.  mov rax, qword [obj.sort_size]          ; [0x21a458:8]=0
0x00009c15      4c89ff         mov rdi, r15
0x00009c18      48f7f3         div rbx
0x00009c1b      488b150e0421.  mov rdx, qword [obj.merge_buffer_size]  ; [0x21a030:8]=0x40000
0x00009c22      4839d0         cmp rax, rdx
0x00009c25      480f43d0       cmovae rdx, rax
0x00009c29      e872c8ffff     call sym.initbuf
0x00009c2e      488b7c2430     mov rdi, qword [rsp + 0x30]             ; .//src:-737
0x00009c33      4c89f0         mov rax, r14
0x00009c36      48c1e004       shl rax, 4
0x00009c3a      4c8d2407       lea r12, [rdi + rax]
0x00009c3e      488b442418     mov rax, qword [rsp + 0x18]
0x00009c43      4c89ff         mov rdi, r15
0x00009c46      498b1424       mov rdx, qword [r12]                    ; .//src:-683
0x00009c4a      4a8d2c28       lea rbp, [rax + r13]                    ; .//src:-696
0x00009c4e      488b7500       mov rsi, qword [rbp]
0x00009c52      e8b9faffff     call sym.fillbuf
0x00009c57      84c0           test al, al
0x00009c59      0f8459030000   je 0x9fb8                               ; .//src:-748
0x00009c5f      498b4718       mov rax, qword [r15 + 0x18]
0x00009c63      490307         add rax, qword [r15]
0x00009c66      488b0c24       mov rcx, qword [rsp]
0x00009c6a      488d50e0       lea rdx, [rax - 0x20]
0x00009c6e      4a8914f1       mov qword [rcx + r14*8], rdx
0x00009c72      498b5710       mov rdx, qword [r15 + 0x10]
0x00009c76      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00009c7b      48c1e205       shl rdx, 5
0x00009c7f      4829d0         sub rax, rdx
0x00009c82      4a8904f1       mov qword [rcx + r14*8], rax
0x00009c86      4983c601       add r14, 1
0x00009c8a      4939de         cmp r14, rbx
0x00009c8d      0f825dffffff   jb 0x9bf0
0x00009c93      4989df         mov r15, rbx
0x00009c96      488b2c24       mov rbp, qword [rsp]
0x00009c9a      488b5c2420     mov rbx, qword [rsp + 0x20]
0x00009c9f      4d85ff         test r15, r15                           ; .//src:-760
0x00009ca2      0f84b3030000   je 0xa05b
0x00009ca8      31c0           xor eax, eax
0x00009caa      660f1f440000   nop word [rax + rax]
0x00009cb0      488904c3       mov qword [rbx + rax*8], rax
0x00009cb4      4883c001       add rax, 1
0x00009cb8      4c39f8         cmp rax, r15
0x00009cbb      75f3           jne 0x9cb0
0x00009cbd      4883f801       cmp rax, 1
0x00009cc1      4889442420     mov qword [rsp + 0x20], rax
0x00009cc6      41bc01000000   mov r12d, 1
0x00009ccc      7463           je 0x9d31
0x00009cce      4889ea         mov rdx, rbp
0x00009cd1      4889dd         mov rbp, rbx
0x00009cd4      0f1f4000       nop dword [rax]                         ; .//src:-753
0x00009cd8      4a8d04e50000.  lea rax, [r12*8]                        ; .//src:-755
0x00009ce0      48891424       mov qword [rsp], rdx
0x00009ce4      4c8d6c0500     lea r13, [rbp + rax]
0x00009ce9      4c8d7c05f8     lea r15, [rbp + rax - 8]
0x00009cee      498b5d00       mov rbx, qword [r13]
0x00009cf2      4d8b37         mov r14, qword [r15]
0x00009cf5      488b34da       mov rsi, qword [rdx + rbx*8]
0x00009cf9      4a8b3cf2       mov rdi, qword [rdx + r14*8]            ; .//src:-815
0x00009cfd      e8dee9ffff     call sym.compare
0x00009d02      85c0           test eax, eax
0x00009d04      488b1424       mov rdx, qword [rsp]
0x00009d08      7e16           jle 0x9d20
0x00009d0a      49891f         mov qword [r15], rbx
0x00009d0d      41bc01000000   mov r12d, 1
0x00009d13      4d897500       mov qword [r13], r14
0x00009d17      ebbf           jmp 0x9cd8
0x00009d19      0f1f80000000.  nop dword [rax]                         ; .//src:-808
0x00009d20      4983c401       add r12, 1
0x00009d24      4c3b642420     cmp r12, qword [rsp + 0x20]
0x00009d29      72ad           jb 0x9cd8
0x00009d2b      4889eb         mov rbx, rbp
0x00009d2e      4889d5         mov rbp, rdx
0x00009d31      488d84248000.  lea rax, [rsp + 0x80]
0x00009d39      48c744246800.  mov qword [rsp + 0x68], 0
0x00009d42      48c744243800.  mov qword [rsp + 0x38], 0
0x00009d4b      4889442470     mov qword [rsp + 0x70], rax
0x00009d50      488d43f8       lea rax, [rbx - 8]
0x00009d54      4889442440     mov qword [rsp + 0x40], rax
0x00009d59      0f1f80000000.  nop dword [rax]
0x00009d60      488b03         mov rax, qword [rbx]
0x00009d63      803dcf062100.  cmp byte [obj.unique], 0                ; [0x21a439:1]=0
0x00009d6a      4c8d3cc50000.  lea r15, [rax*8]
0x00009d72      48890424       mov qword [rsp], rax
0x00009d76      4e8d6c3d00     lea r13, [rbp + r15]
0x00009d7b      4d8b7500       mov r14, qword [r13]
0x00009d7f      0f8493010000   je 0x9f18
0x00009d85      488b442438     mov rax, qword [rsp + 0x38]
0x00009d8a      4885c0         test rax, rax
0x00009d8d      0f84b1010000   je 0x9f44
0x00009d93      4c89f6         mov rsi, r14
0x00009d96      4889c7         mov rdi, rax
0x00009d99      e842e9ffff     call sym.compare
0x00009d9e      85c0           test eax, eax
0x00009da0      0f858a010000   jne 0x9f30
0x00009da6      488b442410     mov rax, qword [rsp + 0x10]
0x00009dab      4e8d1438       lea r10, [rax + r15]                    ; .//src:-672
0x00009daf      4d3932         cmp qword [r10], r14
0x00009db2      0f83c8000000   jae 0x9e80
0x00009db8      4983ee20       sub r14, 0x20                           ; "@"
0x00009dbc      4d897500       mov qword [r13], r14
0x00009dc0      4c8b742420     mov r14, qword [rsp + 0x20]
0x00009dc5      4983fe01       cmp r14, 1
0x00009dc9      0f8436010000   je 0x9f05
0x00009dcf      498b4500       mov rax, qword [r13]
0x00009dd3      41bf01000000   mov r15d, 1
0x00009dd9      41bd01000000   mov r13d, 1
0x00009ddf      4889442408     mov qword [rsp + 8], rax
0x00009de4      4889e8         mov rax, rbp
0x00009de7      4c89fd         mov rbp, r15
0x00009dea      4d89f7         mov r15, r14
0x00009ded      4989c6         mov r14, rax
0x00009df0      eb21           jmp 0x9e13
0x00009df2      660f1f440000   nop word [rax + rax]                    ; .//src:-667
0x00009df8      4c392424       cmp qword [rsp], r12
0x00009dfc      7304           jae 0x9e02                              ; .//src:-668
0x00009dfe      85c0           test eax, eax
0x00009e00      7427           je 0x9e29
0x00009e02      498d6d01       lea rbp, [r13 + 1]
0x00009e06      4e8d6c3d00     lea r13, [rbp + r15]
0x00009e0b      49d1ed         shr r13, 1
0x00009e0e      4c39fd         cmp rbp, r15
0x00009e11      7326           jae 0x9e39
0x00009e13      4e8b24eb       mov r12, qword [rbx + r13*8]
0x00009e17      488b7c2408     mov rdi, qword [rsp + 8]
0x00009e1c      4b8b34e6       mov rsi, qword [r14 + r12*8]
0x00009e20      e8bbe8ffff     call sym.compare
0x00009e25      85c0           test eax, eax
0x00009e27      79cf           jns 0x9df8
0x00009e29      4d89ef         mov r15, r13                            ; .//src:-730
0x00009e2c      4e8d6c3d00     lea r13, [rbp + r15]
0x00009e31      49d1ed         shr r13, 1
0x00009e34      4c39fd         cmp rbp, r15
0x00009e37      72da           jb 0x9e13                               ; .//src:-732
0x00009e39      4989ef         mov r15, rbp
0x00009e3c      4c89f5         mov rbp, r14
0x00009e3f      498d47ff       lea rax, [r15 - 1]
0x00009e43      4885c0         test rax, rax
0x00009e46      488d34c3       lea rsi, [rbx + rax*8]
0x00009e4a      7425           je 0x9e71
0x00009e4c      488b7c2440     mov rdi, qword [rsp + 0x40]
0x00009e51      4889d8         mov rax, rbx
0x00009e54      4a8d0cff       lea rcx, [rdi + r15*8]
0x00009e58      0f1f84000000.  nop dword [rax + rax]
0x00009e60      488b5008       mov rdx, qword [rax + 8]
0x00009e64      4883c008       add rax, 8
0x00009e68      488950f8       mov qword [rax - 8], rdx                ; .//src:-729
0x00009e6c      4839c8         cmp rax, rcx
0x00009e6f      75ef           jne 0x9e60
0x00009e71      488b0424       mov rax, qword [rsp]
0x00009e75      488906         mov qword [rsi], rax
0x00009e78      e9e3feffff     jmp 0x9d60
0x00009e7d      0f1f00         nop dword [rax]
0x00009e80      488b0424       mov rax, qword [rsp]
0x00009e84      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00009e89      4c89542448     mov qword [rsp + 0x48], r10
0x00009e8e      4889c7         mov rdi, rax
0x00009e91      4989c6         mov r14, rax
0x00009e94      488d04c50000.  lea rax, [rax*8]
0x00009e9c      49c1e604       shl r14, 4
0x00009ea0      4c03742430     add r14, qword [rsp + 0x30]
0x00009ea5      4c01f9         add rcx, r15
0x00009ea8      4829f8         sub rax, rdi
0x00009eab      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00009eb0      488b31         mov rsi, qword [rcx]
0x00009eb3      48894c2408     mov qword [rsp + 8], rcx
0x00009eb8      4c8d3cc7       lea r15, [rdi + rax*8]
0x00009ebc      498b16         mov rdx, qword [r14]
0x00009ebf      4c89ff         mov rdi, r15
0x00009ec2      e849f8ffff     call sym.fillbuf
0x00009ec7      84c0           test al, al
0x00009ec9      488b4c2408     mov rcx, qword [rsp + 8]
0x00009ece      4c8b542448     mov r10, qword [rsp + 0x48]
0x00009ed3      0f84e7010000   je 0xa0c0
0x00009ed9      498b4718       mov rax, qword [r15 + 0x18]
0x00009edd      490307         add rax, qword [r15]
0x00009ee0      4c8b742420     mov r14, qword [rsp + 0x20]
0x00009ee5      488d50e0       lea rdx, [rax - 0x20]
0x00009ee9      49895500       mov qword [r13], rdx                    ; .//src:-718
0x00009eed      498b5710       mov rdx, qword [r15 + 0x10]
0x00009ef1      48c1e205       shl rdx, 5
0x00009ef5      4829d0         sub rax, rdx
0x00009ef8      4983fe01       cmp r14, 1
0x00009efc      498902         mov qword [r10], rax                    ; .//src:-717
0x00009eff      0f85cafeffff   jne 0x9dcf
0x00009f05      488b0424       mov rax, qword [rsp]
0x00009f09      4889de         mov rsi, rbx                            ; .//src:-716
0x00009f0c      488906         mov qword [rsi], rax
0x00009f0f      e94cfeffff     jmp 0x9d60
0x00009f14      0f1f4000       nop dword [rax]
0x00009f18      488b542458     mov rdx, qword [rsp + 0x58]
0x00009f1d      488b742450     mov rsi, qword [rsp + 0x50]
0x00009f22      4c89f7         mov rdi, r14
0x00009f25      e856d3ffff     call sym.write_line
0x00009f2a      e977feffff     jmp 0x9da6
0x00009f2f      90             nop
0x00009f30      488b542458     mov rdx, qword [rsp + 0x58]
0x00009f35      488b742450     mov rsi, qword [rsp + 0x50]
0x00009f3a      488b7c2470     mov rdi, qword [rsp + 0x70]
0x00009f3f      e83cd3ffff     call sym.write_line
0x00009f44      498b5608       mov rdx, qword [r14 + 8]
0x00009f48      483b542468     cmp rdx, qword [rsp + 0x68]
0x00009f4d      488bbc248000.  mov rdi, qword [rsp + 0x80]
0x00009f55      0f87d5020000   ja 0xa230
0x00009f5b      498b36         mov rsi, qword [r14]
0x00009f5e      488994248800.  mov qword [rsp + 0x88], rdx
0x00009f66      e8158fffff     call sym.imp.memcpy
0x00009f6b      48837c247800   cmp qword [rsp + 0x78], 0
0x00009f71      488b4c2470     mov rcx, qword [rsp + 0x70]             ; .//src:-770
0x00009f76      48894c2438     mov qword [rsp + 0x38], rcx
0x00009f7b      0f8425feffff   je 0x9da6                               ; .//src:-765
0x00009f81      498b5610       mov rdx, qword [r14 + 0x10]
0x00009f85      488b84248000.  mov rax, qword [rsp + 0x80]
0x00009f8d      498b36         mov rsi, qword [r14]
0x00009f90      4801c2         add rdx, rax
0x00009f93      49034618       add rax, qword [r14 + 0x18]             ; .//src:-762
0x00009f97      4829f2         sub rdx, rsi
0x00009f9a      488994249000.  mov qword [rsp + 0x90], rdx
0x00009fa2      4829f0         sub rax, rsi
0x00009fa5      488984249800.  mov qword [rsp + 0x98], rax
0x00009fad      e9f4fdffff     jmp 0x9da6
0x00009fb2      660f1f440000   nop word [rax + rax]
0x00009fb8      498b3424       mov rsi, qword [r12]
0x00009fbc      488b7d00       mov rdi, qword [rbp]
0x00009fc0      e82bd2ffff     call sym.xfclose
0x00009fc5      4c39742460     cmp qword [rsp + 0x60], r14
0x00009fca      0f87c0020000   ja 0xa290
0x00009fd0      498b3f         mov rdi, qword [r15]
0x00009fd3      e8e891ffff     call sym..plt.got
0x00009fd8      488d73ff       lea rsi, [rbx - 1]
0x00009fdc      4c39f6         cmp rsi, r14
0x00009fdf      0f86d6020000   jbe 0xa2bb
0x00009fe5      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00009fea      488b4c2408     mov rcx, qword [rsp + 8]
0x00009fef      48c1e304       shl rbx, 4
0x00009ff3      4c89e0         mov rax, r12
0x00009ff6      4a8d542f08     lea rdx, [rdi + r13 + 8]                ; stat.h:-3815
0x00009ffb      4801d9         add rcx, rbx                            ; .//src:-796
0x00009ffe      6690           nop
0x0000a000      f30f6f4010     movdqu xmm0, xmmword [rax + 0x10]       ; stat.h:-3816
0x0000a005      4883c010       add rax, 0x10
0x0000a009      4883c208       add rdx, 8
0x0000a00d      488b7af8       mov rdi, qword [rdx - 8]
0x0000a011      0f1140f0       movups xmmword [rax - 0x10], xmm0
0x0000a015      48897af0       mov qword [rdx - 0x10], rdi
0x0000a019      4839c1         cmp rcx, rax
0x0000a01c      75e2           jne 0xa000
0x0000a01e      4889f3         mov rbx, rsi
0x0000a021      e9cafbffff     jmp 0x9bf0
0x0000a026      48837c243800   cmp qword [rsp + 0x38], 0
0x0000a02c      742d           je 0xa05b
0x0000a02e      803d04042100.  cmp byte [obj.unique], 0                ; [0x21a439:1]=0
0x0000a035      7424           je 0xa05b
0x0000a037      488b542458     mov rdx, qword [rsp + 0x58]
0x0000a03c      488b742450     mov rsi, qword [rsp + 0x50]
0x0000a041      488dbc248000.  lea rdi, [rsp + 0x80]
0x0000a049      e832d2ffff     call sym.write_line
0x0000a04e      488bbc248000.  mov rdi, qword [rsp + 0x80]
0x0000a056      e86591ffff     call sym..plt.got
0x0000a05b      488b742458     mov rsi, qword [rsp + 0x58]
0x0000a060      488b7c2450     mov rdi, qword [rsp + 0x50]             ; .//src:-775
0x0000a065      e886d1ffff     call sym.xfclose
0x0000a06a      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000a06f      e84c91ffff     call sym..plt.got
0x0000a074      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000a079      e84291ffff     call sym..plt.got
0x0000a07e      4889df         mov rdi, rbx
0x0000a081      e83a91ffff     call sym..plt.got
0x0000a086      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000a08b      e83091ffff     call sym..plt.got
0x0000a090      488b8424a800.  mov rax, qword [rsp + 0xa8]
0x0000a098      644833042528.  xor rax, qword fs:[0x28]
0x0000a0a1      0f852a020000   jne 0xa2d1
0x0000a0a7      4881c4b80000.  add rsp, 0xb8
0x0000a0ae      4889ef         mov rdi, rbp
0x0000a0b1      5b             pop rbx
0x0000a0b2      5d             pop rbp
0x0000a0b3      415c           pop r12
0x0000a0b5      415d           pop r13
0x0000a0b7      415e           pop r14
0x0000a0b9      415f           pop r15
0x0000a0bb      e90091ffff     jmp sym..plt.got
0x0000a0c0      48837c242001   cmp qword [rsp + 0x20], 1
0x0000a0c6      745f           je 0xa127
0x0000a0c8      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000a0cd      488b3424       mov rsi, qword [rsp]
0x0000a0d1      488d4308       lea rax, [rbx + 8]
0x0000a0d5      488d0cfb       lea rcx, [rbx + rdi*8]
0x0000a0d9      0f1f80000000.  nop dword [rax]
0x0000a0e0      488b10         mov rdx, qword [rax]
0x0000a0e3      4839f2         cmp rdx, rsi
0x0000a0e6      760a           jbe 0xa0f2                              ; .//src:-119
0x0000a0e8      4883ea01       sub rdx, 1
0x0000a0ec      488910         mov qword [rax], rdx                    ; .//src:-120
0x0000a0ef      488b33         mov rsi, qword [rbx]
0x0000a0f2      4883c008       add rax, 8
0x0000a0f6      4839c1         cmp rcx, rax
0x0000a0f9      75e5           jne 0xa0e0
0x0000a0fb      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0000a100      488d04f50000.  lea rax, [rsi*8]
0x0000a108      4989f6         mov r14, rsi
0x0000a10b      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000a110      49c1e604       shl r14, 4
0x0000a114      4c03742430     add r14, qword [rsp + 0x30]
0x0000a119      48893424       mov qword [rsp], rsi
0x0000a11d      4801c1         add rcx, rax
0x0000a120      4829f0         sub rax, rsi
0x0000a123      4c8d3cc7       lea r15, [rdi + rax*8]
0x0000a127      488b442420     mov rax, qword [rsp + 0x20]
0x0000a12c      488b39         mov rdi, qword [rcx]
0x0000a12f      498b36         mov rsi, qword [r14]
0x0000a132      4c8d68ff       lea r13, [rax - 1]
0x0000a136      e8b5d0ffff     call sym.xfclose                        ; .//src:-97
0x0000a13b      488b3c24       mov rdi, qword [rsp]
0x0000a13f      48397c2460     cmp qword [rsp + 0x60], rdi
0x0000a144      0f875e010000   ja 0xa2a8
0x0000a14a      498b3f         mov rdi, qword [r15]
0x0000a14d      e86e90ffff     call sym..plt.got
0x0000a152      488b0c24       mov rcx, qword [rsp]
0x0000a156      4939cd         cmp r13, rcx
0x0000a159      0f8696000000   jbe 0xa1f5
0x0000a15f      488d04cd0000.  lea rax, [rcx*8]
0x0000a167      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000a16c      4c8b442418     mov r8, qword [rsp + 0x18]
0x0000a171      4829c8         sub rax, rcx
0x0000a174      488d14c7       lea rdx, [rdi + rax*8]
0x0000a178      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000a17d      488d04cd0800.  lea rax, [rcx*8 + 8]
0x0000a185      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0000a18a      488d34fd0000.  lea rsi, [rdi*8]
0x0000a192      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000a197      660f1f840000.  nop word [rax + rax]
0x0000a1a0      4d8b0c00       mov r9, qword [r8 + rax]
0x0000a1a4      4883c238       add rdx, 0x38
0x0000a1a8      f30f6f0447     movdqu xmm0, xmmword [rdi + rax*2]
0x0000a1ad      4d894c00f8     mov qword [r8 + rax - 8], r9
0x0000a1b2      4c8b4a30       mov r9, qword [rdx + 0x30]
0x0000a1b6      0f114447f0     movups xmmword [rdi + rax*2 - 0x10], xmm0
0x0000a1bb      4c894af8       mov qword [rdx - 8], r9
0x0000a1bf      4c8b4c0500     mov r9, qword [rbp + rax]
0x0000a1c4      f30f6f02       movdqu xmm0, xmmword [rdx]
0x0000a1c8      4c894c05f8     mov qword [rbp + rax - 8], r9
0x0000a1cd      4c8b0c01       mov r9, qword [rcx + rax]
0x0000a1d1      0f1142c8       movups xmmword [rdx - 0x38], xmm0
0x0000a1d5      f30f6f4210     movdqu xmm0, xmmword [rdx + 0x10]
0x0000a1da      4c894c01f8     mov qword [rcx + rax - 8], r9
0x0000a1df      4883c008       add rax, 8
0x0000a1e3      0f1142d8       movups xmmword [rdx - 0x28], xmm0
0x0000a1e7      f30f6f4220     movdqu xmm0, xmmword [rdx + 0x20]
0x0000a1ec      0f1142e8       movups xmmword [rdx - 0x18], xmm0
0x0000a1f0      4839c6         cmp rsi, rax
0x0000a1f3      75ab           jne 0xa1a0                              ; .//src:-78
0x0000a1f5      4d85ed         test r13, r13
0x0000a1f8      0f8428feffff   je 0xa026
0x0000a1fe      488b7c2440     mov rdi, qword [rsp + 0x40]
0x0000a203      488b4c2420     mov rcx, qword [rsp + 0x20]
0x0000a208      4889d8         mov rax, rbx
0x0000a20b      488d0ccf       lea rcx, [rdi + rcx*8]
0x0000a20f      90             nop
0x0000a210      488b5008       mov rdx, qword [rax + 8]
0x0000a214      4883c008       add rax, 8
0x0000a218      488950f8       mov qword [rax - 8], rdx
0x0000a21c      4839c1         cmp rcx, rax                            ; .//src:-76
0x0000a21f      75ef           jne 0xa210
0x0000a221      4c896c2420     mov qword [rsp + 0x20], r13
0x0000a226      e935fbffff     jmp 0x9d60                              ; .//src:-74
0x0000a22b      0f1f440000     nop dword [rax + rax]
0x0000a230      488b442468     mov rax, qword [rsp + 0x68]
0x0000a235      4885c0         test rax, rax
0x0000a238      740e           je 0xa248
0x0000a23a      4889c6         mov rsi, rax
0x0000a23d      4801f6         add rsi, rsi
0x0000a240      4839f2         cmp rdx, rsi
0x0000a243      7743           ja 0xa288
0x0000a245      4889f2         mov rdx, rsi
0x0000a248      4889542408     mov qword [rsp + 8], rdx
0x0000a24d      e86e8fffff     call sym..plt.got
0x0000a252      488b542408     mov rdx, qword [rsp + 8]
0x0000a257      4889d7         mov rdi, rdx
0x0000a25a      e8817b0000     call sym.xmalloc
0x0000a25f      488b542408     mov rdx, qword [rsp + 8]                ; .//src:-66
0x0000a264      4889c7         mov rdi, rax
0x0000a267      488984248000.  mov qword [rsp + 0x80], rax
0x0000a26f      4889542468     mov qword [rsp + 0x68], rdx
0x0000a274      498b5608       mov rdx, qword [r14 + 8]
0x0000a278      e9defcffff     jmp 0x9f5b
0x0000a27d      0f1f00         nop dword [rax]
0x0000a280      4801f6         add rsi, rsi
0x0000a283      4839f2         cmp rdx, rsi
0x0000a286      76bd           jbe 0xa245
0x0000a288      4885f6         test rsi, rsi
0x0000a28b      75f3           jne 0xa280
0x0000a28d      ebb9           jmp 0xa248
0x0000a28f      90             nop
0x0000a290      498b3c24       mov rdi, qword [r12]
0x0000a294      48836c246001   sub qword [rsp + 0x60], 1
0x0000a29a      e8d1c9ffff     call sym.zaptemp
0x0000a29f      e92cfdffff     jmp 0x9fd0
0x0000a2a4      0f1f4000       nop dword [rax]
0x0000a2a8      498b3e         mov rdi, qword [r14]
0x0000a2ab      48836c246001   sub qword [rsp + 0x60], 1
0x0000a2b1      e8bac9ffff     call sym.zaptemp
0x0000a2b6      e98ffeffff     jmp 0xa14a
0x0000a2bb      488b5c2420     mov rbx, qword [rsp + 0x20]
0x0000a2c0      488b2c24       mov rbp, qword [rsp]
0x0000a2c4      4989f7         mov r15, rsi
0x0000a2c7      e9d3f9ffff     jmp 0x9c9f
0x0000a2cc      e85f7d0000     call sym.xalloc_die
0x0000a2d1      e8ca89ffff     call sym.imp.__stack_chk_fail
0x0000a2d6      b901000000     mov ecx, 1
0x0000a2db      e953f8ffff     jmp 0x9b33
0x0000a2e0      b901000000     mov ecx, 1                              ; .//src:-192
0x0000a2e5      e987f8ffff     jmp 0x9b71
0x0000a2ea      660f1f440000   nop word [rax + rax]
;-- mergefiles:
0x0000a2f0      4157           push r15
0x0000a2f2      4156           push r14
0x0000a2f4      4d89c7         mov r15, r8
0x0000a2f7      4155           push r13                                ; .//src:-185
0x0000a2f9      4154           push r12
0x0000a2fb      4989d4         mov r12, rdx
0x0000a2fe      55             push rbp
0x0000a2ff      53             push rbx
0x0000a300      4989f5         mov r13, rsi
0x0000a303      4c89e6         mov rsi, r12
0x0000a306      4889fd         mov rbp, rdi
0x0000a309      4989ce         mov r14, rcx
0x0000a30c      4883ec18       sub rsp, 0x18
0x0000a310      4889e2         mov rdx, rsp
0x0000a313      64488b042528.  mov rax, qword fs:[0x28]
0x0000a31c      4889442408     mov qword [rsp + 8], rax
0x0000a321      31c0           xor eax, eax
0x0000a323      e848e7ffff     call sym.open_input_files
0x0000a328      4939c4         cmp r12, rax
0x0000a32b      4889c3         mov rbx, rax
0x0000a32e      7606           jbe 0xa336
0x0000a330      4883f801       cmp rax, 1
0x0000a334      763a           jbe 0xa370
0x0000a336      4c8b0c24       mov r9, qword [rsp]                     ; .//src:-201
0x0000a33a      4c89f1         mov rcx, r14
0x0000a33d      4d89f8         mov r8, r15
0x0000a340      4889da         mov rdx, rbx
0x0000a343      4c89ee         mov rsi, r13
0x0000a346      4889ef         mov rdi, rbp
0x0000a349      e892f7ffff     call sym.mergefps
0x0000a34e      488b4c2408     mov rcx, qword [rsp + 8]
0x0000a353      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000a35c      4889d8         mov rax, rbx
0x0000a35f      7536           jne 0xa397
0x0000a361      4883c418       add rsp, 0x18
0x0000a365      5b             pop rbx
0x0000a366      5d             pop rbp
0x0000a367      415c           pop r12
0x0000a369      415d           pop r13
0x0000a36b      415e           pop r14
0x0000a36d      415f           pop r15                                 ; .//src:-186
0x0000a36f      c3             ret
0x0000a370      48c1e304       shl rbx, 4
0x0000a374      488d3524b100.  lea rsi, str.open_failed                ; 0x1549f ; "open failed"
0x0000a37b      31ff           xor edi, edi
0x0000a37d      488b5c1d00     mov rbx, qword [rbp + rbx]
0x0000a382      ba05000000     mov edx, 5
0x0000a387      e8e488ffff     call sym.imp.dcgettext
0x0000a38c      4889c7         mov rdi, rax
0x0000a38f      4889de         mov rsi, rbx
0x0000a392      e889bfffff     call sym.sort_die
0x0000a397      e80489ffff     call sym.imp.__stack_chk_fail
0x0000a39c      0f1f4000       nop dword [rax]
;-- merge:
0x0000a3a0      4157           push r15
0x0000a3a2      4156           push r14                                ; .//src:-203
0x0000a3a4      4989fe         mov r14, rdi
0x0000a3a7      4155           push r13
0x0000a3a9      4154           push r12
0x0000a3ab      55             push rbp
0x0000a3ac      53             push rbx
0x0000a3ad      4889f5         mov rbp, rsi
0x0000a3b0      4881ecf80000.  sub rsp, 0xf8
0x0000a3b7      48894c2430     mov qword [rsp + 0x30], rcx
0x0000a3bc      8b0d62fc2000   mov ecx, dword [obj.nmerge]             ; [0x21a024:4]=16
0x0000a3c2      64488b042528.  mov rax, qword fs:[0x28]
0x0000a3cb      48898424e800.  mov qword [rsp + 0xe8], rax
0x0000a3d3      31c0           xor eax, eax
0x0000a3d5      488d442448     lea rax, [rsp + 0x48]
0x0000a3da      4889542408     mov qword [rsp + 8], rdx
0x0000a3df      4839ca         cmp rdx, rcx
0x0000a3e2      4889442410     mov qword [rsp + 0x10], rax
0x0000a3e7      0f866b010000   jbe 0xa558
0x0000a3ed      4531e4         xor r12d, r12d
0x0000a3f0      31db           xor ebx, ebx
0x0000a3f2      48394c2408     cmp qword [rsp + 8], rcx
0x0000a3f7      0f824a040000   jb 0xa847
0x0000a3fd      0f1f00         nop dword [rax]
0x0000a400      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000a405      31f6           xor esi, esi
0x0000a407      e8f4e8ffff     call sym.maybe_create_temp
0x0000a40c      8b1512fc2000   mov edx, dword [obj.nmerge]             ; [0x21a024:4]=16
0x0000a412      4c8d680d       lea r13, [rax + 0xd]
0x0000a416      4889ee         mov rsi, rbp
0x0000a419      4889df         mov rdi, rbx
0x0000a41c      488b4c2448     mov rcx, qword [rsp + 0x48]
0x0000a421      4989c7         mov r15, rax
0x0000a424      4d89e8         mov r8, r13
0x0000a427      4839ea         cmp rdx, rbp                            ; .//src:-27
0x0000a42a      480f46f2       cmovbe rsi, rdx
0x0000a42e      48c1e704       shl rdi, 4
0x0000a432      4c01f7         add rdi, r14
0x0000a435      e8b6feffff     call sym.mergefiles
0x0000a43a      8b0de4fb2000   mov ecx, dword [obj.nmerge]             ; [0x21a024:4]=16
0x0000a440      488b742408     mov rsi, qword [rsp + 8]
0x0000a445      4839e8         cmp rax, rbp
0x0000a448      4889ea         mov rdx, rbp
0x0000a44b      480f46d0       cmovbe rdx, rax
0x0000a44f      4801c3         add rbx, rax
0x0000a452      4829d5         sub rbp, rdx                            ; .//src:-21
0x0000a455      4829de         sub rsi, rbx
0x0000a458      4c89e2         mov rdx, r12
0x0000a45b      48c1e204       shl rdx, 4
0x0000a45f      4983c401       add r12, 1
0x0000a463      4839f1         cmp rcx, rsi
0x0000a466      4d892c16       mov qword [r14 + rdx], r13
0x0000a46a      4d897c1608     mov qword [r14 + rdx + 8], r15
0x0000a46f      768f           jbe 0xa400
0x0000a471      4c89e0         mov rax, r12
0x0000a474      31d2           xor edx, edx
0x0000a476      4d89e1         mov r9, r12
0x0000a479      48f7f1         div rcx
0x0000a47c      4989da         mov r10, rbx
0x0000a47f      49c1e104       shl r9, 4
0x0000a483      49c1e204       shl r10, 4
0x0000a487      4d01f1         add r9, r14
0x0000a48a      4d01f2         add r10, r14
0x0000a48d      4829d1         sub rcx, rdx
0x0000a490      4839f1         cmp rcx, rsi
0x0000a493      0f8388000000   jae 0xa521
0x0000a499      488d5601       lea rdx, [rsi + 1]                      ; .//src:-15
0x0000a49d      488b7c2410     mov rdi, qword [rsp + 0x10]             ; .//src:-17
0x0000a4a2      31f6           xor esi, esi                            ; stdio2.h:-3877
0x0000a4a4      4c894c2438     mov qword [rsp + 0x38], r9
0x0000a4a9      4c89542428     mov qword [rsp + 0x28], r10
0x0000a4ae      4829ca         sub rdx, rcx                            ; .//src:-17
0x0000a4b1      4889542420     mov qword [rsp + 0x20], rdx
0x0000a4b6      e845e8ffff     call sym.maybe_create_temp              ; stdio2.h:-3877
0x0000a4bb      488b542420     mov rdx, qword [rsp + 0x20]             ; .//src:-14
0x0000a4c0      4c8b542428     mov r10, qword [rsp + 0x28]
0x0000a4c5      4c8d780d       lea r15, [rax + 0xd]
0x0000a4c9      488b4c2448     mov rcx, qword [rsp + 0x48]
0x0000a4ce      4889ee         mov rsi, rbp
0x0000a4d1      4889442418     mov qword [rsp + 0x18], rax
0x0000a4d6      4d89f8         mov r8, r15
0x0000a4d9      4839ea         cmp rdx, rbp
0x0000a4dc      4c89d7         mov rdi, r10
0x0000a4df      480f46f2       cmovbe rsi, rdx
0x0000a4e3      e808feffff     call sym.mergefiles
0x0000a4e8      4c8b4c2438     mov r9, qword [rsp + 0x38]
0x0000a4ed      4c8b5c2418     mov r11, qword [rsp + 0x18]
0x0000a4f2      4839e8         cmp rax, rbp
0x0000a4f5      4889ea         mov rdx, rbp
0x0000a4f8      480f46d0       cmovbe rdx, rax
0x0000a4fc      4983c401       add r12, 1
0x0000a500      4801c3         add rbx, rax
0x0000a503      4d8939         mov qword [r9], r15
0x0000a506      4d895908       mov qword [r9 + 8], r11                 ; .//src:-42
0x0000a50a      4989da         mov r10, rbx
0x0000a50d      4d89e1         mov r9, r12
0x0000a510      49c1e204       shl r10, 4
0x0000a514      4829d5         sub rbp, rdx
0x0000a517      49c1e104       shl r9, 4
0x0000a51b      4d01f2         add r10, r14
0x0000a51e      4d01f1         add r9, r14
0x0000a521      4c8b7c2408     mov r15, qword [rsp + 8]
0x0000a526      4c89d6         mov rsi, r10
0x0000a529      4c89cf         mov rdi, r9
0x0000a52c      4c01e5         add rbp, r12
0x0000a52f      4929dc         sub r12, rbx                            ; .//src:-46
0x0000a532      4c89fa         mov rdx, r15
0x0000a535      4d01e7         add r15, r12
0x0000a538      4829da         sub rdx, rbx
0x0000a53b      48c1e204       shl rdx, 4
0x0000a53f      e87c8affff     call sym.imp.memmove
0x0000a544      8b0ddafa2000   mov ecx, dword [obj.nmerge]             ; [0x21a024:4]=16
0x0000a54a      4c897c2408     mov qword [rsp + 8], r15
0x0000a54f      4c39f9         cmp rcx, r15
0x0000a552      0f8295feffff   jb 0xa3ed
0x0000a558      488b442408     mov rax, qword [rsp + 8]
0x0000a55d      4839e8         cmp rax, rbp
0x0000a560      0f8627010000   jbe 0xa68d
0x0000a566      4829e8         sub rax, rbp
0x0000a569      4889eb         mov rbx, rbp
0x0000a56c      4531ed         xor r13d, r13d
0x0000a56f      4889442410     mov qword [rsp + 0x10], rax
0x0000a574      488d442450     lea rax, [rsp + 0x50]
0x0000a579      48c1e304       shl rbx, 4
0x0000a57d      4c01f3         add rbx, r14
0x0000a580      4531ff         xor r15d, r15d
0x0000a583      4c89742420     mov qword [rsp + 0x20], r14             ; .//src:-2746
0x0000a588      4889442418     mov qword [rsp + 0x18], rax
0x0000a58d      488d442448     lea rax, [rsp + 0x48]
0x0000a592      48896c2428     mov qword [rsp + 0x28], rbp
0x0000a597      4c8b642430     mov r12, qword [rsp + 0x30]
0x0000a59c      4889442438     mov qword [rsp + 0x38], rax
0x0000a5a1      eb4c           jmp 0xa5ef
0x0000a5a3      85ed           test ebp, ebp
0x0000a5a5      0f85b1000000   jne 0xa65c                              ; .//src:-176
0x0000a5ab      e8d0bdffff     call sym.get_outstatus
0x0000a5b0      4885c0         test rax, rax
0x0000a5b3      4989c6         mov r14, rax
0x0000a5b6      0f84c7000000   je 0xa683
0x0000a5bc      488b542418     mov rdx, qword [rsp + 0x18]
0x0000a5c1      31f6           xor esi, esi
0x0000a5c3      bf01000000     mov edi, 1
0x0000a5c8      e85389ffff     call sym.imp.__fxstat
0x0000a5cd      85c0           test eax, eax
0x0000a5cf      750b           jne 0xa5dc
0x0000a5d1      498b4608       mov rax, qword [r14 + 8]
0x0000a5d5      4839442458     cmp qword [rsp + 0x58], rax
0x0000a5da      7476           je 0xa652
0x0000a5dc      4983c501       add r13, 1
0x0000a5e0      4883c310       add rbx, 0x10
0x0000a5e4      4c396c2410     cmp qword [rsp + 0x10], r13
0x0000a5e9      0f8494000000   je 0xa683
0x0000a5ef      488b03         mov rax, qword [rbx]
0x0000a5f2      488d3d41c000.  lea rdi, [0x0001663a]                   ; "-"
0x0000a5f9      b902000000     mov ecx, 2
0x0000a5fe      4889c6         mov rsi, rax
0x0000a601      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000a603      0f97c2         seta dl
0x0000a606      80da00         sbb dl, 0
0x0000a609      4d85e4         test r12, r12
0x0000a60c      0fbeea         movsx ebp, dl
0x0000a60f      740f           je 0xa620
0x0000a611      4889c6         mov rsi, rax
0x0000a614      4c89e7         mov rdi, r12
0x0000a617      e82488ffff     call sym.imp.strcmp
0x0000a61c      85c0           test eax, eax
0x0000a61e      7483           je 0xa5a3
0x0000a620      e85bbdffff     call sym.get_outstatus
0x0000a625      4885c0         test rax, rax
0x0000a628      4989c6         mov r14, rax
0x0000a62b      7456           je 0xa683
0x0000a62d      85ed           test ebp, ebp
0x0000a62f      748b           je 0xa5bc
0x0000a631      488b542418     mov rdx, qword [rsp + 0x18]
0x0000a636      488b33         mov rsi, qword [rbx]
0x0000a639      bf01000000     mov edi, 1
0x0000a63e      e87d88ffff     call sym.imp.__xstat
0x0000a643      85c0           test eax, eax
0x0000a645      7595           jne 0xa5dc
0x0000a647      498b4608       mov rax, qword [r14 + 8]                ; .//src:-3498
0x0000a64b      4839442458     cmp qword [rsp + 0x58], rax
0x0000a650      758a           jne 0xa5dc
0x0000a652      498b06         mov rax, qword [r14]
0x0000a655      4839442450     cmp qword [rsp + 0x50], rax             ; stdio.h:-3813
0x0000a65a      7580           jne 0xa5dc
0x0000a65c      4d85ff         test r15, r15
0x0000a65f      4d8d770d       lea r14, [r15 + 0xd]
0x0000a663      0f84f0010000   je 0xa859
0x0000a669      4c8933         mov qword [rbx], r14
0x0000a66c      4c897b08       mov qword [rbx + 8], r15
0x0000a670      4983c501       add r13, 1
0x0000a674      4883c310       add rbx, 0x10
0x0000a678      4c396c2410     cmp qword [rsp + 0x10], r13
0x0000a67d      0f856cffffff   jne 0xa5ef
0x0000a683      4c8b742420     mov r14, qword [rsp + 0x20]
0x0000a688      488b6c2428     mov rbp, qword [rsp + 0x28]
0x0000a68d      488d442440     lea rax, [rsp + 0x40]
0x0000a692      4c8d7c2448     lea r15, [rsp + 0x48]
0x0000a697      48896c2410     mov qword [rsp + 0x10], rbp
0x0000a69c      4889442428     mov qword [rsp + 0x28], rax
0x0000a6a1      0f1f80000000.  nop dword [rax]
0x0000a6a8      488b6c2408     mov rbp, qword [rsp + 8]
0x0000a6ad      488b542428     mov rdx, qword [rsp + 0x28]
0x0000a6b2      4c89f7         mov rdi, r14
0x0000a6b5      4889ee         mov rsi, rbp
0x0000a6b8      e8b3e3ffff     call sym.open_input_files
0x0000a6bd      4889c3         mov rbx, rax
0x0000a6c0      4839dd         cmp rbp, rbx
0x0000a6c3      0f84e7000000   je 0xa7b0
0x0000a6c9      4883fb02       cmp rbx, 2
0x0000a6cd      0f86b5010000   jbe 0xa888
0x0000a6d3      4889d8         mov rax, rbx
0x0000a6d6      4c8d2cddf8ff.  lea r13, [rbx*8 - 8]
0x0000a6de      48c1e004       shl rax, 4
0x0000a6e2      498d6c06f0     lea rbp, [r14 + rax - 0x10]
0x0000a6e7      660f1f840000.  nop word [rax + rax]
0x0000a6f0      488b442440     mov rax, qword [rsp + 0x40]
0x0000a6f5      488b7500       mov rsi, qword [rbp]
0x0000a6f9      4883eb01       sub rbx, 1
0x0000a6fd      4989ec         mov r12, rbp
0x0000a700      4a8b3c28       mov rdi, qword [rax + r13]
0x0000a704      e8e7caffff     call sym.xfclose
0x0000a709      31f6           xor esi, esi
0x0000a70b      4883fb02       cmp rbx, 2
0x0000a70f      4c89ff         mov rdi, r15
0x0000a712      400f97c6       seta sil
0x0000a716      4883ed10       sub rbp, 0x10
0x0000a71a      4983ed08       sub r13, 8
0x0000a71e      e8dde5ffff     call sym.maybe_create_temp
0x0000a723      4885c0         test rax, rax                           ; .//src:-3476
0x0000a726      74c8           je 0xa6f0
0x0000a728      488b6c2410     mov rbp, qword [rsp + 0x10]
0x0000a72d      4c8d580d       lea r11, [rax + 0xd]
0x0000a731      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0000a736      488b4c2448     mov rcx, qword [rsp + 0x48]
0x0000a73b      4889da         mov rdx, rbx
0x0000a73e      4c89f7         mov rdi, r14
0x0000a741      4d89d8         mov r8, r11
0x0000a744      4889442420     mov qword [rsp + 0x20], rax
0x0000a749      4c895c2418     mov qword [rsp + 0x18], r11
0x0000a74e      4839dd         cmp rbp, rbx
0x0000a751      4989ea         mov r10, rbp
0x0000a754      4c0f47d3       cmova r10, rbx
0x0000a758      4c89d6         mov rsi, r10
0x0000a75b      4c89542410     mov qword [rsp + 0x10], r10
0x0000a760      e87bf3ffff     call sym.mergefps
0x0000a765      4c8b6c2408     mov r13, qword [rsp + 8]
0x0000a76a      4c8b5c2418     mov r11, qword [rsp + 0x18]
0x0000a76f      498d7e10       lea rdi, [r14 + 0x10]
0x0000a773      488b442420     mov rax, qword [rsp + 0x20]
0x0000a778      4c89e6         mov rsi, r12
0x0000a77b      4929dd         sub r13, rbx
0x0000a77e      4d891e         mov qword [r14], r11
0x0000a781      4c89ea         mov rdx, r13
0x0000a784      49894608       mov qword [r14 + 8], rax
0x0000a788      48c1e204       shl rdx, 4
0x0000a78c      e82f88ffff     call sym.imp.memmove
0x0000a791      4c8b542410     mov r10, qword [rsp + 0x10]
0x0000a796      4c29d5         sub rbp, r10
0x0000a799      488d4501       lea rax, [rbp + 1]
0x0000a79d      4889442410     mov qword [rsp + 0x10], rax
0x0000a7a2      498d4501       lea rax, [r13 + 1]
0x0000a7a6      4889442408     mov qword [rsp + 8], rax
0x0000a7ab      e9f8feffff     jmp 0xa6a8
0x0000a7b0      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000a7b5      488d352ead00.  lea rsi, [0x000154ea]                   ; "w"
0x0000a7bc      e8efc8ffff     call sym.stream_open
0x0000a7c1      4885c0         test rax, rax
0x0000a7c4      753a           jne 0xa800
0x0000a7c6      e84583ffff     call sym.imp.__errno_location
0x0000a7cb      833818         cmp dword [rax], 0x18
0x0000a7ce      750c           jne 0xa7dc
0x0000a7d0      48837c240802   cmp qword [rsp + 8], 2
0x0000a7d6      0f87f7feffff   ja 0xa6d3
0x0000a7dc      488d35bcac00.  lea rsi, str.open_failed                ; .//src:-3450 ; 0x1549f ; "open failed"
0x0000a7e3      31ff           xor edi, edi
0x0000a7e5      ba05000000     mov edx, 5
0x0000a7ea      e88184ffff     call sym.imp.dcgettext
0x0000a7ef      488b742430     mov rsi, qword [rsp + 0x30]
0x0000a7f4      4889c7         mov rdi, rax
0x0000a7f7      e824bbffff     call sym.sort_die
0x0000a7fc      0f1f4000       nop dword [rax]
0x0000a800      488b6c2410     mov rbp, qword [rsp + 0x10]
0x0000a805      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0000a80a      4889c1         mov rcx, rax
0x0000a80d      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000a812      488b542408     mov rdx, qword [rsp + 8]
0x0000a817      4c89f7         mov rdi, r14
0x0000a81a      4889ee         mov rsi, rbp
0x0000a81d      e8bef2ffff     call sym.mergefps
0x0000a822      488b8424e800.  mov rax, qword [rsp + 0xe8]
0x0000a82a      644833042528.  xor rax, qword fs:[0x28]
0x0000a833      7579           jne 0xa8ae
0x0000a835      4881c4f80000.  add rsp, 0xf8
0x0000a83c      5b             pop rbx
0x0000a83d      5d             pop rbp
0x0000a83e      415c           pop r12
0x0000a840      415d           pop r13
0x0000a842      415e           pop r14
0x0000a844      415f           pop r15
0x0000a846      c3             ret
0x0000a847      4d89f1         mov r9, r14
0x0000a84a      4d89f2         mov r10, r14
0x0000a84d      488b742408     mov rsi, qword [rsp + 8]
0x0000a852      31d2           xor edx, edx
0x0000a854      e934fcffff     jmp 0xa48d
0x0000a859      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000a85e      31f6           xor esi, esi
0x0000a860      e89be4ffff     call sym.maybe_create_temp
0x0000a865      488b4c2448     mov rcx, qword [rsp + 0x48]
0x0000a86a      4c8d700d       lea r14, [rax + 0xd]
0x0000a86e      ba01000000     mov edx, 1
0x0000a873      31f6           xor esi, esi
0x0000a875      4889df         mov rdi, rbx
0x0000a878      4989c7         mov r15, rax
0x0000a87b      4d89f0         mov r8, r14
0x0000a87e      e86dfaffff     call sym.mergefiles
0x0000a883      e9e1fdffff     jmp 0xa669
0x0000a888      48c1e304       shl rbx, 4
0x0000a88c      488d350cac00.  lea rsi, str.open_failed                ; 0x1549f ; "open failed"
0x0000a893      31ff           xor edi, edi
0x0000a895      498b1c1e       mov rbx, qword [r14 + rbx]              ; .//src:-3422
0x0000a899      ba05000000     mov edx, 5
0x0000a89e      e8cd83ffff     call sym.imp.dcgettext
0x0000a8a3      4889c7         mov rdi, rax
0x0000a8a6      4889de         mov rsi, rbx
0x0000a8a9      e872baffff     call sym.sort_die
0x0000a8ae      e8ed83ffff     call sym.imp.__stack_chk_fail
0x0000a8b3      0f1f00         nop dword [rax]
0x0000a8b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- usage:
0x0000a8c0      4155           push r13
0x0000a8c2      4154           push r12
0x0000a8c4      ba05000000     mov edx, 5
0x0000a8c9      55             push rbp
0x0000a8ca      53             push rbx
0x0000a8cb      89fd           mov ebp, edi
0x0000a8cd      4881ec880000.  sub rsp, 0x88
0x0000a8d4      488b1dcdff20.  mov rbx, qword [obj.program_name]       ; [0x21a8a8:8]=0
0x0000a8db      64488b042528.  mov rax, qword fs:[0x28]
0x0000a8e4      4889442478     mov qword [rsp + 0x78], rax
0x0000a8e9      31c0           xor eax, eax
0x0000a8eb      85ff           test edi, edi
0x0000a8ed      742e           je 0xa91d
0x0000a8ef      488d35b29700.  lea rsi, str.Try___s___help__for_more_information. ; 0x140a8 ; "Try '%s --help' for more information.\n"
0x0000a8f6      31ff           xor edi, edi
0x0000a8f8      e87383ffff     call sym.imp.dcgettext
0x0000a8fd      488b3dfcf820.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21a200:8]=0
0x0000a904      4889c2         mov rdx, rax
0x0000a907      4889d9         mov rcx, rbx
0x0000a90a      be01000000     mov esi, 1
0x0000a90f      31c0           xor eax, eax
0x0000a911      e8ea87ffff     call sym.imp.__fprintf_chk
0x0000a916      89ef           mov edi, ebp
0x0000a918      e8c387ffff     call sym.imp.exit
0x0000a91d      488d35ac9700.  lea rsi, str.Usage:__s__OPTION_...__FILE_...____or:___s__OPTION_...___files0_from_F ; 0x140d0 ; "Usage: %s [OPTION]... [FILE]...\n  or:  %s [OPTION]... --files0-from=F\n"
0x0000a924      31ff           xor edi, edi
0x0000a926      e84583ffff     call sym.imp.dcgettext
0x0000a92b      4889d9         mov rcx, rbx
0x0000a92e      4889da         mov rdx, rbx
0x0000a931      4889c6         mov rsi, rax
0x0000a934      bf01000000     mov edi, 1
0x0000a939      31c0           xor eax, eax
0x0000a93b      e86086ffff     call sym.imp.__printf_chk
0x0000a940      488b1d81f820.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a1c8:8]=0
0x0000a947      488d35ca9700.  lea rsi, str.Write_sorted_concatenation_of_all_FILE_s__to_standard_output. ; 0x14118 ; "Write sorted concatenation of all FILE(s) to standard output.\n"
0x0000a94e      ba05000000     mov edx, 5
0x0000a953      31ff           xor edi, edi
0x0000a955      e81683ffff     call sym.imp.dcgettext
0x0000a95a      4889de         mov rsi, rbx
0x0000a95d      4889c7         mov rdi, rax
0x0000a960      e8ab84ffff     call sym.imp.fputs_unlocked
0x0000a965      488b1d5cf820.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a1c8:8]=0
0x0000a96c      488d35e59700.  lea rsi, str.With_no_FILE__or_when_FILE_is____read_standard_input. ; 0x14158 ; "\nWith no FILE, or when FILE is -, read standard input.\n"
0x0000a973      ba05000000     mov edx, 5
0x0000a978      31ff           xor edi, edi
0x0000a97a      e8f182ffff     call sym.imp.dcgettext
0x0000a97f      4889de         mov rsi, rbx
0x0000a982      4889c7         mov rdi, rax
0x0000a985      e88684ffff     call sym.imp.fputs_unlocked
0x0000a98a      488b1d37f820.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a1c8:8]=0
0x0000a991      488d35f89700.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0x14190 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x0000a998      ba05000000     mov edx, 5
0x0000a99d      31ff           xor edi, edi
0x0000a99f      e8cc82ffff     call sym.imp.dcgettext
0x0000a9a4      4889de         mov rsi, rbx
0x0000a9a7      4889c7         mov rdi, rax
0x0000a9aa      e86184ffff     call sym.imp.fputs_unlocked
0x0000a9af      488b1d12f820.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a1c8:8]=0
0x0000a9b6      488d353bab00.  lea rsi, [0x000154f8]                   ; "Ordering options:\n\n"
0x0000a9bd      ba05000000     mov edx, 5
0x0000a9c2      31ff           xor edi, edi
0x0000a9c4      e8a782ffff     call sym.imp.dcgettext
0x0000a9c9      4889de         mov rsi, rbx
0x0000a9cc      4889c7         mov rdi, rax
0x0000a9cf      e83c84ffff     call sym.imp.fputs_unlocked
0x0000a9d4      488b1dedf720.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a1c8:8]=0
0x0000a9db      488d35fe9700.  lea rsi, str.b____ignore_leading_blanks__ignore_leading_blanks_____d____dictionary_order______consider_only_blanks_and_alphanumeric_characters_____f____ignore_case___________fold_lower_case_to_upper_case_characters ; 0x141e0 ; "  -b, --ignore-leading-blanks  ignore leading blanks\n  -d, --dictionary-order      consider only blanks and alphanumeric characters\n  -f, --ignore-case           fold lower case to upper case characters\n"
0x0000a9e2      ba05000000     mov edx, 5
0x0000a9e7      31ff           xor edi, edi
0x0000a9e9      e88282ffff     call sym.imp.dcgettext
0x0000a9ee      4889de         mov rsi, rbx
0x0000a9f1      4889c7         mov rdi, rax
0x0000a9f4      e81784ffff     call sym.imp.fputs_unlocked
0x0000a9f9      488b1dc8f720.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a1c8:8]=0
0x0000aa00      488d35a99800.  lea rsi, str.g____general_numeric_sort__compare_according_to_general_numerical_value_____i____ignore_nonprinting____consider_only_printable_characters_____M____month_sort____________compare__unknown_____JAN____...____DEC ; 0x142b0 ; "  -g, --general-numeric-sort  compare according to general numerical value\n  -i, --ignore-nonprinting    consider only printable characters\n  -M, --month-sort            compare (unknown) < 'JAN' < ... < 'DEC'\n"
0x0000aa07      ba05000000     mov edx, 5
0x0000aa0c      31ff           xor edi, edi
0x0000aa0e      e85d82ffff     call sym.imp.dcgettext
0x0000aa13      4889de         mov rsi, rbx
0x0000aa16      4889c7         mov rdi, rax
0x0000aa19      e8f283ffff     call sym.imp.fputs_unlocked
0x0000aa1e      488b1da3f720.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a1c8:8]=0
0x0000aa25      488d355c9900.  lea rsi, str.h____human_numeric_sort____compare_human_readable_numbers__e.g.__2K_1G ; stdio.h:-3941 ; 0x14388 ; "  -h, --human-numeric-sort    compare human readable numbers (e.g., 2K 1G)\n"
0x0000aa2c      ba05000000     mov edx, 5
0x0000aa31      31ff           xor edi, edi
0x0000aa33      e83882ffff     call sym.imp.dcgettext
0x0000aa38      4889de         mov rsi, rbx
0x0000aa3b      4889c7         mov rdi, rax
0x0000aa3e      e8cd83ffff     call sym.imp.fputs_unlocked
0x0000aa43      488b1d7ef720.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a1c8:8]=0
0x0000aa4a      488d35879900.  lea rsi, str.n____numeric_sort__________compare_according_to_string_numerical_value_____R____random_sort___________shuffle__but_group_identical_keys.__See_shuf_1___________random_source_FILE____get_random_bytes_from_FILE_____r____reverse_______________reverse_the_result_of_comparisons ; 0x143d8 ; "  -n, --numeric-sort          compare according to string numerical value\n  -R, --random-sort           shuffle, but group identical keys.  See shuf(1)\n      --random-source=FILE    get random bytes from FILE\n  -r, --reverse               reverse the result of comparisons\n"
0x0000aa51      ba05000000     mov edx, 5
0x0000aa56      31ff           xor edi, edi
0x0000aa58      e81382ffff     call sym.imp.dcgettext
0x0000aa5d      4889de         mov rsi, rbx
0x0000aa60      4889c7         mov rdi, rax
0x0000aa63      e8a883ffff     call sym.imp.fputs_unlocked
0x0000aa68      488b1d59f720.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a1c8:8]=0
0x0000aa6f      488d357a9a00.  lea rsi, str.sort_WORD_____________sort_according_to_WORD:__________________________________general_numeric__g__human_numeric__h__month__M___________________________________numeric__n__random__R__version__V_____V____version_sort__________natural_sort_of__version__numbers_within_text ; string_fortified.h:-3379 ; 0x144f0 ; "      --sort=WORD             sort according to WORD:\n                                general-numeric -g, human-numeric -h, month -M,\n                                numeric -n, random -R, version -V\n  -V, --version-sort          natural sort of (version) numbers within text\n\n"
0x0000aa76      ba05000000     mov edx, 5
0x0000aa7b      31ff           xor edi, edi
0x0000aa7d      e8ee81ffff     call sym.imp.dcgettext
0x0000aa82      4889de         mov rsi, rbx                            ; stdio.h:-3941
0x0000aa85      4889c7         mov rdi, rax
0x0000aa88      e88383ffff     call sym.imp.fputs_unlocked
0x0000aa8d      488b1d34f720.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a1c8:8]=0
0x0000aa94      488d3571aa00.  lea rsi, str.Other_options:             ; 0x1550c ; "Other options:\n\n"
0x0000aa9b      ba05000000     mov edx, 5
0x0000aaa0      31ff           xor edi, edi
0x0000aaa2      e8c981ffff     call sym.imp.dcgettext
0x0000aaa7      4889de         mov rsi, rbx
0x0000aaaa      4889c7         mov rdi, rax
0x0000aaad      e85e83ffff     call sym.imp.fputs_unlocked
0x0000aab2      488b1d0ff720.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a1c8:8]=0
0x0000aab9      488d35489b00.  lea rsi, str.batch_size_NMERGE___merge_at_most_NMERGE_inputs_at_once_______________________________for_more_use_temp_files ; 0x14608 ; "      --batch-size=NMERGE   merge at most NMERGE inputs at once;\n                            for more use temp files\n"
0x0000aac0      ba05000000     mov edx, 5
0x0000aac5      31ff           xor edi, edi
0x0000aac7      e8a481ffff     call sym.imp.dcgettext
0x0000aacc      4889de         mov rsi, rbx
0x0000aacf      4889c7         mov rdi, rax
0x0000aad2      e83983ffff     call sym.imp.fputs_unlocked
0x0000aad7      488b1deaf620.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a1c8:8]=0
0x0000aade      488d359b9b00.  lea rsi, str.c____check____check_diagnose_first__check_for_sorted_input__do_not_sort_____C____check_quiet____check_silent__like__c__but_do_not_report_first_bad_line__________compress_program_PROG__compress_temporaries_with_PROG_________________________________decompress_them_with_PROG__d ; 0x14680 ; "  -c, --check, --check=diagnose-first  check for sorted input; do not sort\n  -C, --check=quiet, --check=silent  like -c, but do not report first bad line\n      --compress-program=PROG  compress temporaries with PROG;\n                              decompress them with PROG -d\n"
0x0000aae5      ba05000000     mov edx, 5
0x0000aaea      31ff           xor edi, edi
0x0000aaec      e87f81ffff     call sym.imp.dcgettext
0x0000aaf1      4889de         mov rsi, rbx
0x0000aaf4      4889c7         mov rdi, rax
0x0000aaf7      e81483ffff     call sym.imp.fputs_unlocked
0x0000aafc      488b1dc5f620.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a1c8:8]=0
0x0000ab03      488d358e9c00.  lea rsi, str.debug_______________annotate_the_part_of_the_line_used_to_sort_________________________________and_warn_about_questionable_usage_to_stderr__________files0_from_F_______read_input_from_the_files_specified_by______________________________NUL_terminated_names_in_file_F_______________________________If_F_is___then_read_names_from_standard_input ; string_fortified.h:-3389 ; 0x14798 ; "      --debug               annotate the part of the line used to sort,\n                              and warn about questionable usage to stderr\n      --files0-from=F       read input from the files specified by\n                            NUL-terminated names in file F;\n                            If F is - then read names from standard input\n"
0x0000ab0a      ba05000000     mov edx, 5
0x0000ab0f      31ff           xor edi, edi                            ; string_fortified.h:-3388
0x0000ab11      e85a81ffff     call sym.imp.dcgettext
0x0000ab16      4889de         mov rsi, rbx
0x0000ab19      4889c7         mov rdi, rax
0x0000ab1c      e8ef82ffff     call sym.imp.fputs_unlocked
0x0000ab21      488b1da0f620.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a1c8:8]=0
0x0000ab28      488d35c99d00.  lea rsi, str.k____key_KEYDEF__________sort_via_a_key__KEYDEF_gives_location_and_type_____m____merge_______________merge_already_sorted_files__do_not_sort ; 0x148f8 ; "  -k, --key=KEYDEF          sort via a key; KEYDEF gives location and type\n  -m, --merge               merge already sorted files; do not sort\n"
0x0000ab2f      ba05000000     mov edx, 5
0x0000ab34      31ff           xor edi, edi
0x0000ab36      e83581ffff     call sym.imp.dcgettext
0x0000ab3b      4889de         mov rsi, rbx
0x0000ab3e      4889c7         mov rdi, rax
0x0000ab41      e8ca82ffff     call sym.imp.fputs_unlocked             ; string_fortified.h:-3377
0x0000ab46      488b1d7bf620.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a1c8:8]=0
0x0000ab4d      488d35349e00.  lea rsi, str.o____output_FILE_________write_result_to_FILE_instead_of_standard_output_____s____stable______________stabilize_sort_by_disabling_last_resort_comparison_____S____buffer_size_SIZE____use_SIZE_for_main_memory_buffer ; stdio.h:-3941 ; 0x14988 ; "  -o, --output=FILE         write result to FILE instead of standard output\n  -s, --stable              stabilize sort by disabling last-resort comparison\n  -S, --buffer-size=SIZE    use SIZE for main memory buffer\n"
0x0000ab54      ba05000000     mov edx, 5
0x0000ab59      31ff           xor edi, edi
0x0000ab5b      e81081ffff     call sym.imp.dcgettext
0x0000ab60      4889de         mov rsi, rbx
0x0000ab63      4889c7         mov rdi, rax
0x0000ab66      e8a582ffff     call sym.imp.fputs_unlocked
0x0000ab6b      488d35ee9e00.  lea rsi, str.t____field_separator_SEP__use_SEP_instead_of_non_blank_to_blank_transition_____T____temporary_directory_DIR__use_DIR_for_temporaries__not__TMPDIR_or__s_________________________________multiple_options_specify_multiple_directories__________parallel_N__________change_the_number_of_sorts_run_concurrently_to_N_____u____unique______________with__c__check_for_strict_ordering_________________________________without__c__output_only_the_first_of_an_equal_run ; 0x14a60 ; "  -t, --field-separator=SEP  use SEP instead of non-blank to blank transition\n  -T, --temporary-directory=DIR  use DIR for temporaries, not $TMPDIR or %s;\n                              multiple options specify multiple directories\n      --parallel=N          change the number of sorts run concurrently to N\n  -u, --unique              with -c, check for strict ordering;\n                              without -c, output only the first of an equal run\n"
0x0000ab72      31ff           xor edi, edi
0x0000ab74      ba05000000     mov edx, 5
0x0000ab79      e8f280ffff     call sym.imp.dcgettext
0x0000ab7e      488d1598a900.  lea rdx, str.tmp                        ; 0x1551d ; "/tmp"
0x0000ab85      4889c6         mov rsi, rax
0x0000ab88      bf01000000     mov edi, 1
0x0000ab8d      31c0           xor eax, eax
0x0000ab8f      e80c84ffff     call sym.imp.__printf_chk
0x0000ab94      488b1d2df620.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a1c8:8]=0
0x0000ab9b      488d3586a000.  lea rsi, str.z____zero_terminated_____line_delimiter_is_NUL__not_newline ; 0x14c28 ; "  -z, --zero-terminated     line delimiter is NUL, not newline\n"
0x0000aba2      ba05000000     mov edx, 5
0x0000aba7      31ff           xor edi, edi
0x0000aba9      e8c280ffff     call sym.imp.dcgettext
0x0000abae      4889de         mov rsi, rbx
0x0000abb1      4889c7         mov rdi, rax
0x0000abb4      e85782ffff     call sym.imp.fputs_unlocked
0x0000abb9      488b1d08f620.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a1c8:8]=0
0x0000abc0      488d35a1a000.  lea rsi, str.help_____display_this_help_and_exit ; 0x14c68 ; "      --help     display this help and exit\n"
0x0000abc7      ba05000000     mov edx, 5
0x0000abcc      31ff           xor edi, edi
0x0000abce      e89d80ffff     call sym.imp.dcgettext
0x0000abd3      4889de         mov rsi, rbx
0x0000abd6      4889c7         mov rdi, rax
0x0000abd9      e83282ffff     call sym.imp.fputs_unlocked
0x0000abde      488b1de3f520.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a1c8:8]=0
0x0000abe5      488d35aca000.  lea rsi, str.version__output_version_information_and_exit ; 0x14c98 ; "      --version  output version information and exit\n"
0x0000abec      ba05000000     mov edx, 5
0x0000abf1      31ff           xor edi, edi
0x0000abf3      e87880ffff     call sym.imp.dcgettext
0x0000abf8      4889de         mov rsi, rbx
0x0000abfb      4889c7         mov rdi, rax
0x0000abfe      e80d82ffff     call sym.imp.fputs_unlocked
0x0000ac03      488b1dbef520.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a1c8:8]=0
0x0000ac0a      488d35bfa000.  lea rsi, str.KEYDEF_is_F_.C__OPTS___F_.C__OPTS___for_start_and_stop_position__where_F_is_a__field_number_and_C_a_character_position_in_the_field__both_are_origin_1__and__the_stop_position_defaults_to_the_line_s_end.__If_neither__t_nor__b_is_in__effect__characters_in_a_field_are_counted_from_the_beginning_of_the_preceding__whitespace.__OPTS_is_one_or_more_single_letter_ordering_options__bdfgiMhnRrV____which_override_global_ordering_options_for_that_key.__If_no_key_is_given__use__the_entire_line_as_the_key.__Use___debug_to_diagnose_incorrect_key_usage.____SIZE_may_be_followed_by_the_following_multiplicative_suffixes: ; 0x14cd0 ; "\nKEYDEF is F[.C][OPTS][,F[.C][OPTS]] for start and stop position, where F is a\nfield number and C a character position in the field; both are origin 1, and\nthe stop position defaults to the line's end.  If neither -t nor -b is in\neffect, characters in a field are counted from the beginning of the preceding\nwhitespace.  OPTS is one or more single-letter ordering options [bdfgiMhnRrV],\nwhich override global ordering options for that key.  If no key is given, use\nthe entire line as the key.  Use --debug to diagnose incorrect key usage.\n\nSIZE may be followed by the following multiplicative suffixes:\n"
0x0000ac11      ba05000000     mov edx, 5
0x0000ac16      31ff           xor edi, edi
0x0000ac18      e85380ffff     call sym.imp.dcgettext
0x0000ac1d      4889de         mov rsi, rbx
0x0000ac20      4889c7         mov rdi, rax
0x0000ac23      e8e881ffff     call sym.imp.fputs_unlocked
0x0000ac28      488b1d99f520.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a1c8:8]=0
0x0000ac2f      488d35faa200.  lea rsi, str.1__of_memory__b_1__K_1024__default___and_so_on_for_M__G__T__P__E__Z__Y.________WARNING______The_locale_specified_by_the_environment_affects_sort_order.__Set_LC_ALL_C_to_get_the_traditional_sort_order_that_uses__native_byte_values. ; 0x14f30 ; "% 1% of memory, b 1, K 1024 (default), and so on for M, G, T, P, E, Z, Y.\n\n*** WARNING ***\nThe locale specified by the environment affects sort order.\nSet LC_ALL=C to get the traditional sort order that uses\nnative byte values.\n"
0x0000ac36      ba05000000     mov edx, 5
0x0000ac3b      31ff           xor edi, edi
0x0000ac3d      e82e80ffff     call sym.imp.dcgettext
0x0000ac42      4889de         mov rsi, rbx
0x0000ac45      4889c7         mov rdi, rax
0x0000ac48      488d1df0a900.  lea rbx, [0x0001563f]                   ; "sort"
0x0000ac4f      e8bc81ffff     call sym.imp.fputs_unlocked
0x0000ac54      488d05c7a800.  lea rax, [0x00015522]                   ; "["
0x0000ac5b      488d0d01a900.  lea rcx, str.sha256sum                  ; 0x15563 ; "sha256sum"
0x0000ac62      48c744246000.  mov qword [rsp + 0x60], 0
0x0000ac6b      48c744246800.  mov qword [rsp + 0x68], 0
0x0000ac74      4889e2         mov rdx, rsp
0x0000ac77      48890424       mov qword [rsp], rax
0x0000ac7b      488d05a2a800.  lea rax, str.test_invocation            ; 0x15524 ; "test invocation"
0x0000ac82      48894c2430     mov qword [rsp + 0x30], rcx
0x0000ac87      488d0ddfa800.  lea rcx, str.sha384sum                  ; 0x1556d ; "sha384sum"
0x0000ac8e      4889442408     mov qword [rsp + 8], rax
0x0000ac93      488d0502a900.  lea rax, [0x0001559c]                   ; "coreutils"
0x0000ac9a      48894c2440     mov qword [rsp + 0x40], rcx
0x0000ac9f      488d0dd1a800.  lea rcx, str.sha512sum                  ; 0x15577 ; "sha512sum"
0x0000aca6      4889442410     mov qword [rsp + 0x10], rax
0x0000acab      488d0582a800.  lea rax, str.Multi_call_invocation      ; 0x15534 ; "Multi-call invocation"
0x0000acb2      48894c2450     mov qword [rsp + 0x50], rcx
0x0000acb7      4889442418     mov qword [rsp + 0x18], rax
0x0000acbc      488d0587a800.  lea rax, str.sha224sum                  ; 0x1554a ; "sha224sum"
0x0000acc3      4889442420     mov qword [rsp + 0x20], rax
0x0000acc8      488d0585a800.  lea rax, str.sha2_utilities             ; 0x15554 ; "sha2 utilities"
0x0000accf      4889442428     mov qword [rsp + 0x28], rax
0x0000acd4      4889442438     mov qword [rsp + 0x38], rax
0x0000acd9      4889442448     mov qword [rsp + 0x48], rax
0x0000acde      4889442458     mov qword [rsp + 0x58], rax
0x0000ace3      0f1f440000     nop dword [rax + rax]
0x0000ace8      4883c210       add rdx, 0x10
0x0000acec      488b3a         mov rdi, qword [rdx]
0x0000acef      4885ff         test rdi, rdi
0x0000acf2      7413           je 0xad07
0x0000acf4      b905000000     mov ecx, 5
0x0000acf9      4889de         mov rsi, rbx
0x0000acfc      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000acfe      0f97c0         seta al
0x0000ad01      1c00           sbb al, 0
0x0000ad03      84c0           test al, al
0x0000ad05      75e1           jne 0xace8
0x0000ad07      4c8b6208       mov r12, qword [rdx + 8]
0x0000ad0b      31ff           xor edi, edi
0x0000ad0d      ba05000000     mov edx, 5
0x0000ad12      488d3568a800.  lea rsi, str.s_online_help:___s         ; 0x15581 ; "\n%s online help: <%s>\n"
0x0000ad19      4d85e4         test r12, r12
0x0000ad1c      0f84c1000000   je 0xade3
0x0000ad22      e8497fffff     call sym.imp.dcgettext
0x0000ad27      488d0deaa200.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x15018 ; "https://www.gnu.org/software/coreutils/"
0x0000ad2e      488d1563a800.  lea rdx, str.GNU_coreutils              ; 0x15598 ; "GNU coreutils"
0x0000ad35      4889c6         mov rsi, rax
0x0000ad38      bf01000000     mov edi, 1
0x0000ad3d      31c0           xor eax, eax
0x0000ad3f      e85c82ffff     call sym.imp.__printf_chk
0x0000ad44      31f6           xor esi, esi
0x0000ad46      bf05000000     mov edi, 5
0x0000ad4b      e84082ffff     call sym.imp.setlocale
0x0000ad50      4885c0         test rax, rax
0x0000ad53      741c           je 0xad71
0x0000ad55      488d354aa800.  lea rsi, [0x000155a6]                   ; "en_"
0x0000ad5c      ba03000000     mov edx, 3
0x0000ad61      4889c7         mov rdi, rax
0x0000ad64      e8c77dffff     call sym.imp.strncmp
0x0000ad69      85c0           test eax, eax
0x0000ad6b      0f8507010000   jne 0xae78
0x0000ad71      488d3532a800.  lea rsi, str.Full_documentation___s_s   ; 0x155aa ; "Full documentation <%s%s>\n"
0x0000ad78      31ff           xor edi, edi
0x0000ad7a      ba05000000     mov edx, 5
0x0000ad7f      e8ec7effff     call sym.imp.dcgettext
0x0000ad84      488d0db4a800.  lea rcx, [0x0001563f]                   ; "sort"
0x0000ad8b      488d1586a200.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x15018 ; "https://www.gnu.org/software/coreutils/"
0x0000ad92      4889c6         mov rsi, rax
0x0000ad95      bf01000000     mov edi, 1
0x0000ad9a      31c0           xor eax, eax
0x0000ad9c      e8ff81ffff     call sym.imp.__printf_chk
0x0000ada1      4939dc         cmp r12, rbx
0x0000ada4      488d0d93a700.  lea rcx, [0x0001553e]                   ; " invocation"
0x0000adab      488d1d59a700.  lea rbx, [0x0001550b]
0x0000adb2      480f44d9       cmove rbx, rcx
0x0000adb6      488d35cba200.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x15088 ; "or available locally via: info '(coreutils) %s%s'\n"
0x0000adbd      31ff           xor edi, edi
0x0000adbf      ba05000000     mov edx, 5
0x0000adc4      e8a77effff     call sym.imp.dcgettext
0x0000adc9      4889d9         mov rcx, rbx
0x0000adcc      4889c6         mov rsi, rax
0x0000adcf      4c89e2         mov rdx, r12
0x0000add2      bf01000000     mov edi, 1
0x0000add7      31c0           xor eax, eax
0x0000add9      e8c281ffff     call sym.imp.__printf_chk
0x0000adde      e933fbffff     jmp 0xa916
0x0000ade3      e8887effff     call sym.imp.dcgettext
0x0000ade8      488d0d29a200.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x15018 ; "https://www.gnu.org/software/coreutils/"
0x0000adef      488d15a2a700.  lea rdx, str.GNU_coreutils              ; 0x15598 ; "GNU coreutils"
0x0000adf6      4889c6         mov rsi, rax
0x0000adf9      bf01000000     mov edi, 1
0x0000adfe      31c0           xor eax, eax
0x0000ae00      e89b81ffff     call sym.imp.__printf_chk
0x0000ae05      31f6           xor esi, esi
0x0000ae07      bf05000000     mov edi, 5
0x0000ae0c      e87f81ffff     call sym.imp.setlocale
0x0000ae11      4885c0         test rax, rax
0x0000ae14      7418           je 0xae2e
0x0000ae16      488d3589a700.  lea rsi, [0x000155a6]                   ; "en_"
0x0000ae1d      ba03000000     mov edx, 3
0x0000ae22      4889c7         mov rdi, rax
0x0000ae25      e8067dffff     call sym.imp.strncmp
0x0000ae2a      85c0           test eax, eax
0x0000ae2c      7543           jne 0xae71
0x0000ae2e      488d3575a700.  lea rsi, str.Full_documentation___s_s   ; 0x155aa ; "Full documentation <%s%s>\n"
0x0000ae35      ba05000000     mov edx, 5
0x0000ae3a      31ff           xor edi, edi
0x0000ae3c      4c8d25fca700.  lea r12, [0x0001563f]                   ; "sort"
0x0000ae43      488d1df4a600.  lea rbx, [0x0001553e]                   ; " invocation"
0x0000ae4a      e8217effff     call sym.imp.dcgettext
0x0000ae4f      488d0de9a700.  lea rcx, [0x0001563f]                   ; "sort"
0x0000ae56      488d15bba100.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x15018 ; "https://www.gnu.org/software/coreutils/"
0x0000ae5d      4889c6         mov rsi, rax
0x0000ae60      bf01000000     mov edi, 1
0x0000ae65      31c0           xor eax, eax
0x0000ae67      e83481ffff     call sym.imp.__printf_chk
0x0000ae6c      e945ffffff     jmp 0xadb6
0x0000ae71      4c8d25c7a700.  lea r12, [0x0001563f]                   ; "sort"
0x0000ae78      4c8b2d49f320.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a1c8:8]=0
0x0000ae7f      488d35baa100.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x15040 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x0000ae86      31ff           xor edi, edi
0x0000ae88      ba05000000     mov edx, 5
0x0000ae8d      e8de7dffff     call sym.imp.dcgettext
0x0000ae92      4c89ee         mov rsi, r13
0x0000ae95      4889c7         mov rdi, rax
0x0000ae98      e8737fffff     call sym.imp.fputs_unlocked
0x0000ae9d      e9cffeffff     jmp 0xad71
0x0000aea2      662e0f1f8400.  nop word cs:[rax + rax]
0x0000aeac      0f1f4000       nop dword [rax]
;-- __argmatch_die:
0x0000aeb0      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/argmatch.c:63
0x0000aeb5      e906faffff     jmp sym.usage
0x0000aeba      660f1f440000   nop word [rax + rax]
;-- argmatch:
0x0000aec0      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:86
0x0000aec2      4156           push r14
0x0000aec4      4989f7         mov r15, rsi
0x0000aec7      4155           push r13
0x0000aec9      4154           push r12
0x0000aecb      4989cd         mov r13, rcx
0x0000aece      55             push rbp
0x0000aecf      53             push rbx
0x0000aed0      4889d5         mov rbp, rdx
0x0000aed3      4883ec28       sub rsp, 0x28
0x0000aed7      48897c2408     mov qword [rsp + 8], rdi
0x0000aedc      4889542418     mov qword [rsp + 0x18], rdx
0x0000aee1      e8aa7dffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/argmatch.c:92
0x0000aee6      4d8b37         mov r14, qword [r15]                    ; ../coreutils-8.31/lib/argmatch.c:95
0x0000aee9      48c70424ffff.  mov qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:89
0x0000aef1      4d85f6         test r14, r14                           ; ../coreutils-8.31/lib/argmatch.c:95
0x0000aef4      0f84b3000000   je 0xafad
0x0000aefa      4989c4         mov r12, rax
0x0000aefd      c644241700     mov byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:90
0x0000af02      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:95
0x0000af04      eb51           jmp 0xaf57
0x0000af06      662e0f1f8400.  nop word cs:[rax + rax]
0x0000af10      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/argmatch.c:108
0x0000af15      4885c0         test rax, rax
0x0000af18      0f84a2000000   je 0xafc0
0x0000af1e      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:109
0x0000af22      4c89ea         mov rdx, r13
0x0000af25      4889ee         mov rsi, rbp
0x0000af28      490faffd       imul rdi, r13
0x0000af2c      4801c7         add rdi, rax
0x0000af2f      e8bc7effff     call sym.imp.memcmp
0x0000af34      85c0           test eax, eax                           ; ../coreutils-8.31/lib/argmatch.c:114
0x0000af36      0fb6442417     movzx eax, byte [rsp + 0x17]
0x0000af3b      b901000000     mov ecx, 1
0x0000af40      0f45c1         cmovne eax, ecx
0x0000af43      88442417       mov byte [rsp + 0x17], al
0x0000af47      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x0000af4b      4c01ed         add rbp, r13
0x0000af4e      4d8b34df       mov r14, qword [r15 + rbx*8]
0x0000af52      4d85f6         test r14, r14
0x0000af55      7441           je 0xaf98
0x0000af57      488b742408     mov rsi, qword [rsp + 8]                ; ../coreutils-8.31/lib/argmatch.c:97
0x0000af5c      4c89e2         mov rdx, r12
0x0000af5f      4c89f7         mov rdi, r14
0x0000af62      e8c97bffff     call sym.imp.strncmp
0x0000af67      85c0           test eax, eax
0x0000af69      75dc           jne 0xaf47
0x0000af6b      4c89f7         mov rdi, r14                            ; ../coreutils-8.31/lib/argmatch.c:99
0x0000af6e      e81d7dffff     call sym.imp.strlen
0x0000af73      4c39e0         cmp rax, r12
0x0000af76      7458           je 0xafd0
0x0000af78      48833c24ff     cmp qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:102
0x0000af7d      7591           jne 0xaf10
0x0000af7f      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:104
0x0000af83      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x0000af87      4c01ed         add rbp, r13
0x0000af8a      4d8b34df       mov r14, qword [r15 + rbx*8]
0x0000af8e      4d85f6         test r14, r14
0x0000af91      75c4           jne 0xaf57
0x0000af93      0f1f440000     nop dword [rax + rax]
0x0000af98      807c241700     cmp byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:120
0x0000af9d      48c7c0feffff.  mov rax, 0xfffffffffffffffe
0x0000afa4      480f440424     cmove rax, qword [rsp]
0x0000afa9      48890424       mov qword [rsp], rax
0x0000afad      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:123
0x0000afb1      4883c428       add rsp, 0x28
0x0000afb5      5b             pop rbx
0x0000afb6      5d             pop rbp
0x0000afb7      415c           pop r12
0x0000afb9      415d           pop r13
0x0000afbb      415e           pop r14
0x0000afbd      415f           pop r15
0x0000afbf      c3             ret
0x0000afc0      c644241701     mov byte [rsp + 0x17], 1                ; ../coreutils-8.31/lib/argmatch.c:114
0x0000afc5      eb80           jmp 0xaf47
0x0000afc7      660f1f840000.  nop word [rax + rax]
0x0000afd0      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:101
0x0000afd4      ebd7           jmp 0xafad
0x0000afd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_invalid:
0x0000afe0      4883faff       cmp rdx, 0xffffffffffffffff             ; ../coreutils-8.31/lib/argmatch.c:132
0x0000afe4      4154           push r12
0x0000afe6      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:133
0x0000afeb      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:132
0x0000afec      4989f4         mov r12, rsi
0x0000afef      53             push rbx
0x0000aff0      4889fd         mov rbp, rdi
0x0000aff3      744b           je 0xb040                               ; ../coreutils-8.31/lib/argmatch.c:133
0x0000aff5      488d351caa00.  lea rsi, str.ambiguous_argument__s_for__s ; 0x15a18 ; "ambiguous argument %s for %s"
0x0000affc      31ff           xor edi, edi
0x0000affe      e86d7cffff     call sym.imp.dcgettext
0x0000b003      4889c3         mov rbx, rax
0x0000b006      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/argmatch.c:137
0x0000b009      bf01000000     mov edi, 1
0x0000b00e      e85d530000     call sym.quote_n
0x0000b013      4c89e2         mov rdx, r12
0x0000b016      4889c5         mov rbp, rax
0x0000b019      be08000000     mov esi, 8
0x0000b01e      31ff           xor edi, edi
0x0000b020      e87b4f0000     call sym.quotearg_n_style
0x0000b025      4989e8         mov r8, rbp
0x0000b028      4889da         mov rdx, rbx
0x0000b02b      4889c1         mov rcx, rax
0x0000b02e      5b             pop rbx                                 ; ../coreutils-8.31/lib/argmatch.c:139
0x0000b02f      5d             pop rbp
0x0000b030      415c           pop r12
0x0000b032      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/argmatch.c:137
0x0000b034      31ff           xor edi, edi
0x0000b036      31c0           xor eax, eax
0x0000b038      e9a37fffff     jmp sym.imp.error
0x0000b03d      0f1f00         nop dword [rax]
0x0000b040      488d35b6a900.  lea rsi, str.invalid_argument__s_for__s ; ../coreutils-8.31/lib/argmatch.c:133 ; 0x159fd ; "invalid argument %s for %s"
0x0000b047      31ff           xor edi, edi
0x0000b049      e8227cffff     call sym.imp.dcgettext
0x0000b04e      4889c3         mov rbx, rax
0x0000b051      ebb3           jmp 0xb006
0x0000b053      0f1f00         nop dword [rax]
0x0000b056      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_valid:
0x0000b060      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:148
0x0000b062      4156           push r14
0x0000b064      4989fe         mov r14, rdi
0x0000b067      4155           push r13
0x0000b069      4154           push r12
0x0000b06b      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/argmatch.c:154
0x0000b06d      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:148
0x0000b06e      53             push rbx
0x0000b06f      4889f5         mov rbp, rsi
0x0000b072      488d35bca900.  lea rsi, str.Valid_arguments_are:       ; ../coreutils-8.31/lib/argmatch.c:154 ; 0x15a35 ; "Valid arguments are:"
0x0000b079      4989d4         mov r12, rdx                            ; ../coreutils-8.31/lib/argmatch.c:148
0x0000b07c      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:154
0x0000b081      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/argmatch.c:148
0x0000b085      488b1d74f120.  mov rbx, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:154 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21a200:8]=0
0x0000b08c      e8df7bffff     call sym.imp.dcgettext
0x0000b091      4889c7         mov rdi, rax
0x0000b094      4889de         mov rsi, rbx
0x0000b097      e8747dffff     call sym.imp.fputs_unlocked
0x0000b09c      4d8b3e         mov r15, qword [r14]                    ; ../coreutils-8.31/lib/argmatch.c:155
0x0000b09f      4d85ff         test r15, r15
0x0000b0a2      0f8490000000   je 0xb138
0x0000b0a8      4531ed         xor r13d, r13d                          ; ../coreutils-8.31/lib/argmatch.c:150
0x0000b0ab      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:155
0x0000b0ad      eb39           jmp 0xb0e8
0x0000b0af      90             nop
0x0000b0b0      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:159
0x0000b0b3      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x0000b0b7      4989ed         mov r13, rbp                            ; ../coreutils-8.31/lib/argmatch.c:160
0x0000b0ba      e8d1520000     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:159
0x0000b0bf      488b3d3af120.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21a200:8]=0
0x0000b0c6      488d157da900.  lea rdx, [0x00015a4a]                   ; "\n  - %s"
0x0000b0cd      4889c1         mov rcx, rax
0x0000b0d0      be01000000     mov esi, 1
0x0000b0d5      31c0           xor eax, eax
0x0000b0d7      4c01e5         add rbp, r12
0x0000b0da      e82180ffff     call sym.imp.__fprintf_chk
0x0000b0df      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x0000b0e3      4d85ff         test r15, r15
0x0000b0e6      7450           je 0xb138
0x0000b0e8      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/argmatch.c:156
0x0000b0eb      74c3           je 0xb0b0
0x0000b0ed      4c89e2         mov rdx, r12                            ; ../coreutils-8.31/lib/argmatch.c:157
0x0000b0f0      4889ee         mov rsi, rbp
0x0000b0f3      4c89ef         mov rdi, r13
0x0000b0f6      e8f57cffff     call sym.imp.memcmp
0x0000b0fb      85c0           test eax, eax
0x0000b0fd      75b1           jne 0xb0b0
0x0000b0ff      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:164
0x0000b102      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x0000b106      4c01e5         add rbp, r12
0x0000b109      e882520000     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:164
0x0000b10e      488b3debf020.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21a200:8]=0
0x0000b115      488d1536a900.  lea rdx, str.s                          ; 0x15a52 ; ", %s"
0x0000b11c      4889c1         mov rcx, rax
0x0000b11f      be01000000     mov esi, 1
0x0000b124      31c0           xor eax, eax
0x0000b126      e8d57fffff     call sym.imp.__fprintf_chk
0x0000b12b      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x0000b12f      4d85ff         test r15, r15
0x0000b132      75b4           jne 0xb0e8
0x0000b134      0f1f4000       nop dword [rax]
0x0000b138      488b3dc1f020.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:166 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21a200:8]=0
0x0000b13f      488b4728       mov rax, qword [rdi + 0x28]             ; stdio.h:100   return _IO_putc_unlocked (__c, __stream);
0x0000b143      483b4730       cmp rax, qword [rdi + 0x30]
0x0000b147      731f           jae 0xb168
0x0000b149      488d5001       lea rdx, [rax + 1]
0x0000b14d      48895728       mov qword [rdi + 0x28], rdx
0x0000b151      c6000a         mov byte [rax], 0xa
0x0000b154      4883c408       add rsp, 8
0x0000b158      5b             pop rbx
0x0000b159      5d             pop rbp
0x0000b15a      415c           pop r12
0x0000b15c      415d           pop r13
0x0000b15e      415e           pop r14
0x0000b160      415f           pop r15
0x0000b162      c3             ret
0x0000b163      0f1f440000     nop dword [rax + rax]
0x0000b168      4883c408       add rsp, 8
0x0000b16c      be0a000000     mov esi, 0xa                            ; ../coreutils-8.31/lib/argmatch.c:-204
0x0000b171      5b             pop rbx
0x0000b172      5d             pop rbp
0x0000b173      415c           pop r12
0x0000b175      415d           pop r13
0x0000b177      415e           pop r14
0x0000b179      415f           pop r15
0x0000b17b      e9907bffff     jmp sym.imp.__overflow
;-- __xargmatch_internal:
0x0000b180      4157           push r15
0x0000b182      4156           push r14
0x0000b184      4989fe         mov r14, rdi
0x0000b187      4155           push r13
0x0000b189      4154           push r12
0x0000b18b      4989f4         mov r12, rsi
0x0000b18e      55             push rbp
0x0000b18f      53             push rbx
0x0000b190      4889cd         mov rbp, rcx
0x0000b193      4889d3         mov rbx, rdx
0x0000b196      4c89c1         mov rcx, r8
0x0000b199      4889ea         mov rdx, rbp
0x0000b19c      4883ec08       sub rsp, 8
0x0000b1a0      4889de         mov rsi, rbx
0x0000b1a3      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-196
0x0000b1a6      4d89c7         mov r15, r8
0x0000b1a9      4d89cd         mov r13, r9
0x0000b1ac      e80ffdffff     call sym.argmatch
0x0000b1b1      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/argmatch.c:-195
0x0000b1b4      780f           js 0xb1c5                               ; ../coreutils-8.31/lib/argmatch.c:-193
0x0000b1b6      4883c408       add rsp, 8
0x0000b1ba      5b             pop rbx
0x0000b1bb      5d             pop rbp
0x0000b1bc      415c           pop r12
0x0000b1be      415d           pop r13
0x0000b1c0      415e           pop r14                                 ; ../coreutils-8.31/lib/argmatch.c:-184
0x0000b1c2      415f           pop r15
0x0000b1c4      c3             ret
0x0000b1c5      4889c2         mov rdx, rax
0x0000b1c8      4c89e6         mov rsi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-181
0x0000b1cb      4c89f7         mov rdi, r14
0x0000b1ce      e80dfeffff     call sym.argmatch_invalid
0x0000b1d3      4c89fa         mov rdx, r15
0x0000b1d6      4889ee         mov rsi, rbp
0x0000b1d9      4889df         mov rdi, rbx
0x0000b1dc      e87ffeffff     call sym.argmatch_valid
0x0000b1e1      41ffd5         call r13
0x0000b1e4      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x0000b1eb      ebc9           jmp 0xb1b6
0x0000b1ed      0f1f00         nop dword [rax]
;-- argmatch_to_argument:
0x0000b1f0      4156           push r14
0x0000b1f2      4155           push r13
0x0000b1f4      4154           push r12
0x0000b1f6      55             push rbp
0x0000b1f7      53             push rbx
0x0000b1f8      4c8b36         mov r14, qword [rsi]
0x0000b1fb      4d85f6         test r14, r14
0x0000b1fe      7431           je 0xb231
0x0000b200      4989cc         mov r12, rcx
0x0000b203      4989fd         mov r13, rdi
0x0000b206      4889d5         mov rbp, rdx
0x0000b209      488d5e08       lea rbx, [rsi + 8]
0x0000b20d      eb10           jmp 0xb21f                              ; ../coreutils-8.31/lib/argmatch.c:-177
0x0000b20f      90             nop
0x0000b210      4c8b33         mov r14, qword [rbx]
0x0000b213      4c01e5         add rbp, r12
0x0000b216      4883c308       add rbx, 8
0x0000b21a      4d85f6         test r14, r14
0x0000b21d      7412           je 0xb231
0x0000b21f      4c89e2         mov rdx, r12
0x0000b222      4889ee         mov rsi, rbp
0x0000b225      4c89ef         mov rdi, r13
0x0000b228      e8c37bffff     call sym.imp.memcmp
0x0000b22d      85c0           test eax, eax
0x0000b22f      75df           jne 0xb210
0x0000b231      5b             pop rbx
0x0000b232      4c89f0         mov rax, r14
0x0000b235      5d             pop rbp
0x0000b236      415c           pop r12
0x0000b238      415d           pop r13
0x0000b23a      415e           pop r14
0x0000b23c      c3             ret
0x0000b23d      0f1f00         nop dword [rax]
;-- close_stdout_set_file_name:
0x0000b240      48893d51f620.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x21a898:8]=0
0x0000b247      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x0000b248      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x0000b250      40883d39f620.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x21a890:1]=0
0x0000b257      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x0000b258      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x0000b260      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x0000b261      53             push rbx
0x0000b262      4883ec08       sub rsp, 8
0x0000b266      488b3d5bef20.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a1c8:8]=0
0x0000b26d      e8ee800000     call sym.close_stream
0x0000b272      85c0           test eax, eax
0x0000b274      7416           je 0xb28c
0x0000b276      e89578ffff     call sym.imp.__errno_location
0x0000b27b      803d0ef62000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x21a890:1]=0
0x0000b282      4889c3         mov rbx, rax
0x0000b285      741c           je 0xb2a3
0x0000b287      833820         cmp dword [rax], 0x20
0x0000b28a      7517           jne 0xb2a3
0x0000b28c      488b3d6def20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21a200:8]=0
0x0000b293      e8c8800000     call sym.close_stream
0x0000b298      85c0           test eax, eax
0x0000b29a      7546           jne 0xb2e2
0x0000b29c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x0000b2a0      5b             pop rbx
0x0000b2a1      5d             pop rbp
0x0000b2a2      c3             ret
0x0000b2a3      488d35ada700.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x15a57 ; "write error"
0x0000b2aa      31ff           xor edi, edi
0x0000b2ac      ba05000000     mov edx, 5
0x0000b2b1      e8ba79ffff     call sym.imp.dcgettext
0x0000b2b6      488b3ddbf520.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x21a898:8]=0
0x0000b2bd      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x0000b2c0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x0000b2c3      7428           je 0xb2ed
0x0000b2c5      e8c64e0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x0000b2ca      8b33           mov esi, dword [rbx]
0x0000b2cc      488d1520a100.  lea rdx, str.s:__s                      ; 0x153f3 ; "%s: %s"
0x0000b2d3      4889c1         mov rcx, rax
0x0000b2d6      4989e8         mov r8, rbp
0x0000b2d9      31ff           xor edi, edi
0x0000b2db      31c0           xor eax, eax
0x0000b2dd      e8fe7cffff     call sym.imp.error
0x0000b2e2      8b3d48ee2000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x21a130:4]=1
0x0000b2e8      e85378ffff     call sym.imp._exit
0x0000b2ed      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x0000b2ef      488d155ea700.  lea rdx, [0x00015a54]                   ; "%s"
0x0000b2f6      4889c1         mov rcx, rax
0x0000b2f9      31ff           xor edi, edi
0x0000b2fb      31c0           xor eax, eax
0x0000b2fd      e8de7cffff     call sym.imp.error
0x0000b302      ebde           jmp 0xb2e2
0x0000b304      662e0f1f8400.  nop word cs:[rax + rax]
0x0000b30e      6690           nop
;-- md5_init_ctx:
0x0000b310      48b801234567.  movabs rax, 0xefcdab8967452301
0x0000b31a      48c747100000.  mov qword [rdi + 0x10], 0
0x0000b322      c74718000000.  mov dword [rdi + 0x18], 0
0x0000b329      488907         mov qword [rdi], rax
0x0000b32c      48b8fedcba98.  movabs rax, 0x1032547698badcfe
0x0000b336      48894708       mov qword [rdi + 8], rax
0x0000b33a      c3             ret
0x0000b33b      0f1f440000     nop dword [rax + rax]
;-- md5_read_ctx:
0x0000b340      8b17           mov edx, dword [rdi]
0x0000b342      4889f0         mov rax, rsi
0x0000b345      8916           mov dword [rsi], edx
0x0000b347      8b5704         mov edx, dword [rdi + 4]
0x0000b34a      895604         mov dword [rsi + 4], edx
0x0000b34d      8b5708         mov edx, dword [rdi + 8]
0x0000b350      895608         mov dword [rsi + 8], edx
0x0000b353      8b570c         mov edx, dword [rdi + 0xc]
0x0000b356      89560c         mov dword [rsi + 0xc], edx
0x0000b359      c3             ret
0x0000b35a      660f1f440000   nop word [rax + rax]
;-- md5_process_block:
0x0000b360      4889f0         mov rax, rsi
0x0000b363      4157           push r15
0x0000b365      4156           push r14
0x0000b367      4883e0fc       and rax, 0xfffffffffffffffc
0x0000b36b      4155           push r13
0x0000b36d      4154           push r12
0x0000b36f      55             push rbp
0x0000b370      53             push rbx
0x0000b371      4889fb         mov rbx, rdi
0x0000b374      488d0c03       lea rcx, [rbx + rax]
0x0000b378      8b02           mov eax, dword [rdx]
0x0000b37a      4889d7         mov rdi, rdx
0x0000b37d      448b5a04       mov r11d, dword [rdx + 4]
0x0000b381      448b5208       mov r10d, dword [rdx + 8]
0x0000b385      48895424f8     mov qword [rsp - 8], rdx
0x0000b38a      48894c24f0     mov qword [rsp - 0x10], rcx
0x0000b38f      894424e8       mov dword [rsp - 0x18], eax
0x0000b393      8b420c         mov eax, dword [rdx + 0xc]
0x0000b396      89f2           mov edx, esi
0x0000b398      894424e0       mov dword [rsp - 0x20], eax
0x0000b39c      31c0           xor eax, eax
0x0000b39e      035710         add edx, dword [rdi + 0x10]
0x0000b3a1      0f92c0         setb al
0x0000b3a4      48c1ee20       shr rsi, 0x20
0x0000b3a8      037714         add esi, dword [rdi + 0x14]
0x0000b3ab      895710         mov dword [rdi + 0x10], edx
0x0000b3ae      01c6           add esi, eax
0x0000b3b0      4839cb         cmp rbx, rcx
0x0000b3b3      897714         mov dword [rdi + 0x14], esi
0x0000b3b6      0f83ee060000   jae 0xbaaa
0x0000b3bc      4589d7         mov r15d, r10d
0x0000b3bf      90             nop
0x0000b3c0      448b33         mov r14d, dword [rbx]
0x0000b3c3      8b7c24e0       mov edi, dword [rsp - 0x20]
0x0000b3c7      8b4424e8       mov eax, dword [rsp - 0x18]
0x0000b3cb      8b7304         mov esi, dword [rbx + 4]
0x0000b3ce      448b430c       mov r8d, dword [rbx + 0xc]
0x0000b3d2      448b5314       mov r10d, dword [rbx + 0x14]
0x0000b3d6      8b6b18         mov ebp, dword [rbx + 0x18]
0x0000b3d9      448b6b1c       mov r13d, dword [rbx + 0x1c]
0x0000b3dd      418d940678a4.  lea edx, [r14 + rax - 0x28955b88]
0x0000b3e5      89f8           mov eax, edi
0x0000b3e7      8d8c3e56b7c7.  lea ecx, [rsi + rdi - 0x173848aa]
0x0000b3ee      4431f8         xor eax, r15d
0x0000b3f1      897424bc       mov dword [rsp - 0x44], esi
0x0000b3f5      44895424cc     mov dword [rsp - 0x34], r10d
0x0000b3fa      4421d8         and eax, r11d
0x0000b3fd      448b6324       mov r12d, dword [rbx + 0x24]
0x0000b401      44894424c4     mov dword [rsp - 0x3c], r8d
0x0000b406      31f8           xor eax, edi
0x0000b408      438dbc18eece.  lea edi, [r8 + r11 - 0x3e423112]
0x0000b410      448b432c       mov r8d, dword [rbx + 0x2c]
0x0000b414      01d0           add eax, edx
0x0000b416      4489da         mov edx, r11d
0x0000b419      c1c007         rol eax, 7
0x0000b41c      4431fa         xor edx, r15d
0x0000b41f      44896424d4     mov dword [rsp - 0x2c], r12d
0x0000b424      4401d8         add eax, r11d
0x0000b427      44894424dc     mov dword [rsp - 0x24], r8d
0x0000b42c      21c2           and edx, eax
0x0000b42e      4189c1         mov r9d, eax
0x0000b431      4431fa         xor edx, r15d
0x0000b434      4531d9         xor r9d, r11d
0x0000b437      01ca           add edx, ecx
0x0000b439      8b4b08         mov ecx, dword [rbx + 8]
0x0000b43c      c1c20c         rol edx, 0xc
0x0000b43f      01c2           add edx, eax
0x0000b441      428db439db70.  lea esi, [rcx + r15 + 0x242070db]
0x0000b449      894c24c0       mov dword [rsp - 0x40], ecx
0x0000b44d      4489c9         mov ecx, r9d
0x0000b450      21d1           and ecx, edx
0x0000b452      4189c1         mov r9d, eax
0x0000b455      4431d9         xor ecx, r11d
0x0000b458      4131d1         xor r9d, edx
0x0000b45b      01f1           add ecx, esi
0x0000b45d      4489ce         mov esi, r9d
0x0000b460      448b4b10       mov r9d, dword [rbx + 0x10]
0x0000b464      c1c90f         ror ecx, 0xf
0x0000b467      01d1           add ecx, edx
0x0000b469      21ce           and esi, ecx
0x0000b46b      44894c24c8     mov dword [rsp - 0x38], r9d
0x0000b470      31c6           xor esi, eax
0x0000b472      01fe           add esi, edi
0x0000b474      418dbc01af0f.  lea edi, [r9 + rax - 0xa83f051]
0x0000b47c      89d0           mov eax, edx
0x0000b47e      c1ce0a         ror esi, 0xa
0x0000b481      31c8           xor eax, ecx
0x0000b483      448b4b3c       mov r9d, dword [rbx + 0x3c]
0x0000b487      01ce           add esi, ecx
0x0000b489      21f0           and eax, esi
0x0000b48b      31d0           xor eax, edx
0x0000b48d      01f8           add eax, edi
0x0000b48f      418dbc122ac6.  lea edi, [r10 + rdx + 0x4787c62a]
0x0000b497      89ca           mov edx, ecx
0x0000b499      c1c007         rol eax, 7
0x0000b49c      31f2           xor edx, esi
0x0000b49e      4189ea         mov r10d, ebp
0x0000b4a1      01f0           add eax, esi
0x0000b4a3      44895424e4     mov dword [rsp - 0x1c], r10d
0x0000b4a8      21c2           and edx, eax
0x0000b4aa      31ca           xor edx, ecx
0x0000b4ac      01fa           add edx, edi
0x0000b4ae      8dbc0d134630.  lea edi, [rbp + rcx - 0x57cfb9ed]
0x0000b4b5      89f5           mov ebp, esi
0x0000b4b7      31c5           xor ebp, eax
0x0000b4b9      c1c20c         rol edx, 0xc
0x0000b4bc      01c2           add edx, eax
0x0000b4be      89e9           mov ecx, ebp
0x0000b4c0      89c5           mov ebp, eax
0x0000b4c2      21d1           and ecx, edx
0x0000b4c4      31d5           xor ebp, edx
0x0000b4c6      31f1           xor ecx, esi
0x0000b4c8      01f9           add ecx, edi
0x0000b4ca      418dbc350195.  lea edi, [r13 + rsi - 0x2b96aff]
0x0000b4d2      89ee           mov esi, ebp
0x0000b4d4      c1c90f         ror ecx, 0xf
0x0000b4d7      8b6b20         mov ebp, dword [rbx + 0x20]
0x0000b4da      01d1           add ecx, edx
0x0000b4dc      21ce           and esi, ecx
0x0000b4de      31c6           xor esi, eax
0x0000b4e0      896c24d0       mov dword [rsp - 0x30], ebp
0x0000b4e4      01fe           add esi, edi
0x0000b4e6      8dbc05d89880.  lea edi, [rbp + rax + 0x698098d8]
0x0000b4ed      89d0           mov eax, edx
0x0000b4ef      c1ce0a         ror esi, 0xa
0x0000b4f2      31c8           xor eax, ecx
0x0000b4f4      8b6b30         mov ebp, dword [rbx + 0x30]
0x0000b4f7      01ce           add esi, ecx
0x0000b4f9      21f0           and eax, esi
0x0000b4fb      31d0           xor eax, edx
0x0000b4fd      01f8           add eax, edi
0x0000b4ff      418dbc14aff7.  lea edi, [r12 + rdx - 0x74bb0851]
0x0000b507      89ca           mov edx, ecx
0x0000b509      c1c007         rol eax, 7
0x0000b50c      31f2           xor edx, esi
0x0000b50e      448b6338       mov r12d, dword [rbx + 0x38]
0x0000b512      01f0           add eax, esi
0x0000b514      21c2           and edx, eax
0x0000b516      31ca           xor edx, ecx
0x0000b518      01fa           add edx, edi
0x0000b51a      8b7b28         mov edi, dword [rbx + 0x28]
0x0000b51d      c1c20c         rol edx, 0xc
0x0000b520      01c2           add edx, eax
0x0000b522      897c24d8       mov dword [rsp - 0x28], edi
0x0000b526      8dbc0fb15bff.  lea edi, [rdi + rcx - 0xa44f]
0x0000b52d      89f1           mov ecx, esi
0x0000b52f      31c1           xor ecx, eax
0x0000b531      21d1           and ecx, edx
0x0000b533      31f1           xor ecx, esi
0x0000b535      01f9           add ecx, edi
0x0000b537      418dbc30bed7.  lea edi, [r8 + rsi - 0x76a32842]
0x0000b53f      89c6           mov esi, eax
0x0000b541      c1c90f         ror ecx, 0xf
0x0000b544      31d6           xor esi, edx
0x0000b546      448b4334       mov r8d, dword [rbx + 0x34]
0x0000b54a      01d1           add ecx, edx
0x0000b54c      4883c340       add rbx, 0x40                           ; segment.PHDR
0x0000b550      21ce           and esi, ecx
0x0000b552      31c6           xor esi, eax
0x0000b554      01fe           add esi, edi
0x0000b556      8dbc05221190.  lea edi, [rbp + rax + 0x6b901122]
0x0000b55d      89d0           mov eax, edx
0x0000b55f      c1ce0a         ror esi, 0xa
0x0000b562      31c8           xor eax, ecx
0x0000b564      01ce           add esi, ecx
0x0000b566      21f0           and eax, esi
0x0000b568      31d0           xor eax, edx
0x0000b56a      01f8           add eax, edi
0x0000b56c      418dbc109371.  lea edi, [r8 + rdx - 0x2678e6d]
0x0000b574      89ca           mov edx, ecx
0x0000b576      c1c007         rol eax, 7
0x0000b579      31f2           xor edx, esi
0x0000b57b      01f0           add eax, esi
0x0000b57d      21c2           and edx, eax
0x0000b57f      31ca           xor edx, ecx
0x0000b581      01fa           add edx, edi
0x0000b583      418dbc0c8e43.  lea edi, [r12 + rcx - 0x5986bc72]
0x0000b58b      89f1           mov ecx, esi
0x0000b58d      c1c20c         rol edx, 0xc
0x0000b590      31c1           xor ecx, eax
0x0000b592      01c2           add edx, eax
0x0000b594      21d1           and ecx, edx
0x0000b596      31f1           xor ecx, esi
0x0000b598      01f9           add ecx, edi
0x0000b59a      418dbc312108.  lea edi, [r9 + rsi + 0x49b40821]
0x0000b5a2      89c6           mov esi, eax
0x0000b5a4      c1c90f         ror ecx, 0xf
0x0000b5a7      31d6           xor esi, edx
0x0000b5a9      01d1           add ecx, edx
0x0000b5ab      21ce           and esi, ecx
0x0000b5ad      31c6           xor esi, eax
0x0000b5af      01fe           add esi, edi
0x0000b5b1      8b7c24bc       mov edi, dword [rsp - 0x44]
0x0000b5b5      c1ce0a         ror esi, 0xa
0x0000b5b8      01ce           add esi, ecx
0x0000b5ba      8dbc0762251e.  lea edi, [rdi + rax - 0x9e1da9e]
0x0000b5c1      89c8           mov eax, ecx
0x0000b5c3      31f0           xor eax, esi
0x0000b5c5      21d0           and eax, edx
0x0000b5c7      31c8           xor eax, ecx
0x0000b5c9      01f8           add eax, edi
0x0000b5cb      418dbc1240b3.  lea edi, [r10 + rdx - 0x3fbf4cc0]
0x0000b5d3      89f2           mov edx, esi
0x0000b5d5      c1c005         rol eax, 5
0x0000b5d8      01f0           add eax, esi
0x0000b5da      31c2           xor edx, eax
0x0000b5dc      21ca           and edx, ecx
0x0000b5de      31f2           xor edx, esi
0x0000b5e0      01fa           add edx, edi
0x0000b5e2      8b7c24dc       mov edi, dword [rsp - 0x24]
0x0000b5e6      c1c209         rol edx, 9
0x0000b5e9      01c2           add edx, eax
0x0000b5eb      8dbc0f515a5e.  lea edi, [rdi + rcx + 0x265e5a51]
0x0000b5f2      89c1           mov ecx, eax
0x0000b5f4      31d1           xor ecx, edx
0x0000b5f6      21f1           and ecx, esi
0x0000b5f8      31c1           xor ecx, eax
0x0000b5fa      01f9           add ecx, edi
0x0000b5fc      418dbc36aac7.  lea edi, [r14 + rsi - 0x16493856]
0x0000b604      89d6           mov esi, edx
0x0000b606      c1c10e         rol ecx, 0xe
0x0000b609      01d1           add ecx, edx
0x0000b60b      31ce           xor esi, ecx
0x0000b60d      21c6           and esi, eax
0x0000b60f      31d6           xor esi, edx
0x0000b611      01fe           add esi, edi
0x0000b613      8b7c24cc       mov edi, dword [rsp - 0x34]
0x0000b617      c1ce0c         ror esi, 0xc
0x0000b61a      01ce           add esi, ecx
0x0000b61c      8dbc075d102f.  lea edi, [rdi + rax - 0x29d0efa3]
0x0000b623      89c8           mov eax, ecx
0x0000b625      31f0           xor eax, esi
0x0000b627      21d0           and eax, edx
0x0000b629      31c8           xor eax, ecx
0x0000b62b      01f8           add eax, edi
0x0000b62d      8b7c24d8       mov edi, dword [rsp - 0x28]
0x0000b631      c1c005         rol eax, 5
0x0000b634      01f0           add eax, esi
0x0000b636      8dbc17531444.  lea edi, [rdi + rdx + 0x2441453]
0x0000b63d      89f2           mov edx, esi
0x0000b63f      31c2           xor edx, eax
0x0000b641      21ca           and edx, ecx
0x0000b643      31f2           xor edx, esi
0x0000b645      01fa           add edx, edi
0x0000b647      418dbc0981e6.  lea edi, [r9 + rcx - 0x275e197f]
0x0000b64f      89c1           mov ecx, eax
0x0000b651      c1c209         rol edx, 9
0x0000b654      01c2           add edx, eax
0x0000b656      31d1           xor ecx, edx
0x0000b658      21f1           and ecx, esi
0x0000b65a      31c1           xor ecx, eax
0x0000b65c      01f9           add ecx, edi
0x0000b65e      8b7c24c8       mov edi, dword [rsp - 0x38]
0x0000b662      448b5424d4     mov r10d, dword [rsp - 0x2c]
0x0000b667      c1c10e         rol ecx, 0xe
0x0000b66a      01d1           add ecx, edx
0x0000b66c      8dbc37c8fbd3.  lea edi, [rdi + rsi - 0x182c0438]
0x0000b673      89d6           mov esi, edx
0x0000b675      31ce           xor esi, ecx
0x0000b677      21c6           and esi, eax
0x0000b679      31d6           xor esi, edx
0x0000b67b      01fe           add esi, edi
0x0000b67d      418dbc02e6cd.  lea edi, [r10 + rax + 0x21e1cde6]
0x0000b685      89c8           mov eax, ecx
0x0000b687      c1ce0c         ror esi, 0xc
0x0000b68a      448b5424d0     mov r10d, dword [rsp - 0x30]
0x0000b68f      01ce           add esi, ecx
0x0000b691      31f0           xor eax, esi
0x0000b693      21d0           and eax, edx
0x0000b695      31c8           xor eax, ecx
0x0000b697      01f8           add eax, edi
0x0000b699      418dbc14d607.  lea edi, [r12 + rdx - 0x3cc8f82a]
0x0000b6a1      89f2           mov edx, esi
0x0000b6a3      c1c005         rol eax, 5
0x0000b6a6      01f0           add eax, esi
0x0000b6a8      31c2           xor edx, eax
0x0000b6aa      21ca           and edx, ecx
0x0000b6ac      31f2           xor edx, esi
0x0000b6ae      01fa           add edx, edi
0x0000b6b0      8b7c24c4       mov edi, dword [rsp - 0x3c]
0x0000b6b4      c1c209         rol edx, 9
0x0000b6b7      01c2           add edx, eax
0x0000b6b9      8dbc0f870dd5.  lea edi, [rdi + rcx - 0xb2af279]
0x0000b6c0      89c1           mov ecx, eax
0x0000b6c2      31d1           xor ecx, edx
0x0000b6c4      21f1           and ecx, esi
0x0000b6c6      418db432ed14.  lea esi, [r10 + rsi + 0x455a14ed]
0x0000b6ce      4189d2         mov r10d, edx
0x0000b6d1      31c1           xor ecx, eax
0x0000b6d3      01f9           add ecx, edi
0x0000b6d5      c1c10e         rol ecx, 0xe
0x0000b6d8      01d1           add ecx, edx
0x0000b6da      4131ca         xor r10d, ecx
0x0000b6dd      4489d7         mov edi, r10d
0x0000b6e0      21c7           and edi, eax
0x0000b6e2      31d7           xor edi, edx
0x0000b6e4      01f7           add edi, esi
0x0000b6e6      418db40005e9.  lea esi, [r8 + rax - 0x561c16fb]
0x0000b6ee      89c8           mov eax, ecx
0x0000b6f0      c1cf0c         ror edi, 0xc
0x0000b6f3      01cf           add edi, ecx
0x0000b6f5      31f8           xor eax, edi
0x0000b6f7      448d943d8a4c.  lea r10d, [rbp + rdi - 0x72d5b376]
0x0000b6ff      21d0           and eax, edx
0x0000b701      31c8           xor eax, ecx
0x0000b703      44895424ec     mov dword [rsp - 0x14], r10d
0x0000b708      01f0           add eax, esi
0x0000b70a      8b7424c0       mov esi, dword [rsp - 0x40]
0x0000b70e      c1c005         rol eax, 5
0x0000b711      01f8           add eax, edi
0x0000b713      8db416f8a3ef.  lea esi, [rsi + rdx - 0x3105c08]
0x0000b71a      89fa           mov edx, edi
0x0000b71c      31c2           xor edx, eax
0x0000b71e      21ca           and edx, ecx
0x0000b720      418d8c0dd902.  lea ecx, [r13 + rcx + 0x676f02d9]
0x0000b728      31fa           xor edx, edi
0x0000b72a      01f2           add edx, esi
0x0000b72c      89c6           mov esi, eax
0x0000b72e      c1c209         rol edx, 9
0x0000b731      01c2           add edx, eax
0x0000b733      31d6           xor esi, edx
0x0000b735      21fe           and esi, edi
0x0000b737      31c6           xor esi, eax
0x0000b739      01ce           add esi, ecx
0x0000b73b      89d1           mov ecx, edx
0x0000b73d      c1c60e         rol esi, 0xe
0x0000b740      01d6           add esi, edx
0x0000b742      31f1           xor ecx, esi
0x0000b744      4189ca         mov r10d, ecx
0x0000b747      4121c2         and r10d, eax
0x0000b74a      4489d7         mov edi, r10d
0x0000b74d      448b5424cc     mov r10d, dword [rsp - 0x34]
0x0000b752      31d7           xor edi, edx
0x0000b754      037c24ec       add edi, dword [rsp - 0x14]
0x0000b758      418d84024239.  lea eax, [r10 + rax - 0x5c6be]
0x0000b760      c1cf0c         ror edi, 0xc
0x0000b763      01f7           add edi, esi
0x0000b765      31f9           xor ecx, edi
0x0000b767      01c1           add ecx, eax
0x0000b769      8b4424d0       mov eax, dword [rsp - 0x30]
0x0000b76d      c1c104         rol ecx, 4
0x0000b770      01f9           add ecx, edi
0x0000b772      8d841081f671.  lea eax, [rax + rdx - 0x788e097f]
0x0000b779      89f2           mov edx, esi
0x0000b77b      31fa           xor edx, edi
0x0000b77d      31ca           xor edx, ecx
0x0000b77f      01c2           add edx, eax
0x0000b781      8b4424dc       mov eax, dword [rsp - 0x24]
0x0000b785      c1c20b         rol edx, 0xb
0x0000b788      01ca           add edx, ecx
0x0000b78a      8d843022619d.  lea eax, [rax + rsi + 0x6d9d6122]
0x0000b791      89fe           mov esi, edi
0x0000b793      418dbc3c0c38.  lea edi, [r12 + rdi - 0x21ac7f4]
0x0000b79b      31ce           xor esi, ecx
0x0000b79d      31d6           xor esi, edx
0x0000b79f      01c6           add esi, eax
0x0000b7a1      89c8           mov eax, ecx
0x0000b7a3      c1c610         rol esi, 0x10
0x0000b7a6      31d0           xor eax, edx
0x0000b7a8      01d6           add esi, edx
0x0000b7aa      31f0           xor eax, esi
0x0000b7ac      4189f2         mov r10d, esi
0x0000b7af      01f8           add eax, edi
0x0000b7b1      8b7c24bc       mov edi, dword [rsp - 0x44]
0x0000b7b5      c1c809         ror eax, 9
0x0000b7b8      01f0           add eax, esi
0x0000b7ba      8dbc0f44eabe.  lea edi, [rdi + rcx - 0x5b4115bc]
0x0000b7c1      89d1           mov ecx, edx
0x0000b7c3      4131c2         xor r10d, eax
0x0000b7c6      31f1           xor ecx, esi
0x0000b7c8      418db435604b.  lea esi, [r13 + rsi - 0x944b4a0]
0x0000b7d0      31c1           xor ecx, eax
0x0000b7d2      01f9           add ecx, edi
0x0000b7d4      8b7c24c8       mov edi, dword [rsp - 0x38]
0x0000b7d8      c1c104         rol ecx, 4
0x0000b7db      01c1           add ecx, eax
0x0000b7dd      8d9417a9cfde.  lea edx, [rdi + rdx + 0x4bdecfa9]
0x0000b7e4      4489d7         mov edi, r10d
0x0000b7e7      31cf           xor edi, ecx
0x0000b7e9      01d7           add edi, edx
0x0000b7eb      89c2           mov edx, eax
0x0000b7ed      c1c70b         rol edi, 0xb
0x0000b7f0      31ca           xor edx, ecx
0x0000b7f2      01cf           add edi, ecx
0x0000b7f4      31fa           xor edx, edi
0x0000b7f6      01f2           add edx, esi
0x0000b7f8      8b7424d8       mov esi, dword [rsp - 0x28]
0x0000b7fc      c1c210         rol edx, 0x10
0x0000b7ff      01fa           add edx, edi
0x0000b801      8d840670bcbf.  lea eax, [rsi + rax - 0x41404390]
0x0000b808      89ce           mov esi, ecx
0x0000b80a      31fe           xor esi, edi
0x0000b80c      31d6           xor esi, edx
0x0000b80e      01c6           add esi, eax
0x0000b810      418d8408c67e.  lea eax, [r8 + rcx + 0x289b7ec6]
0x0000b818      89f9           mov ecx, edi
0x0000b81a      c1ce09         ror esi, 9
0x0000b81d      31d1           xor ecx, edx
0x0000b81f      418dbc3efa27.  lea edi, [r14 + rdi - 0x155ed806]
0x0000b827      01d6           add esi, edx
0x0000b829      31f1           xor ecx, esi
0x0000b82b      4189f2         mov r10d, esi
0x0000b82e      01c1           add ecx, eax
0x0000b830      89d0           mov eax, edx
0x0000b832      c1c104         rol ecx, 4
0x0000b835      31f0           xor eax, esi
0x0000b837      01f1           add ecx, esi
0x0000b839      31c8           xor eax, ecx
0x0000b83b      4131ca         xor r10d, ecx
0x0000b83e      01f8           add eax, edi
0x0000b840      8b7c24c4       mov edi, dword [rsp - 0x3c]
0x0000b844      c1c00b         rol eax, 0xb
0x0000b847      01c8           add eax, ecx
0x0000b849      8d94178530ef.  lea edx, [rdi + rdx - 0x2b10cf7b]
0x0000b850      4489d7         mov edi, r10d
0x0000b853      31c7           xor edi, eax
0x0000b855      01d7           add edi, edx
0x0000b857      8b5424e4       mov edx, dword [rsp - 0x1c]
0x0000b85b      c1c710         rol edi, 0x10
0x0000b85e      01c7           add edi, eax
0x0000b860      8d9432051d88.  lea edx, [rdx + rsi + 0x4881d05]
0x0000b867      89ce           mov esi, ecx
0x0000b869      31c6           xor esi, eax
0x0000b86b      31fe           xor esi, edi
0x0000b86d      01d6           add esi, edx
0x0000b86f      8b5424d4       mov edx, dword [rsp - 0x2c]
0x0000b873      c1ce09         ror esi, 9
0x0000b876      01fe           add esi, edi
0x0000b878      8d8c0a39d0d4.  lea ecx, [rdx + rcx - 0x262b2fc7]
0x0000b87f      89c2           mov edx, eax
0x0000b881      8d8405e599db.  lea eax, [rbp + rax - 0x1924661b]
0x0000b888      31fa           xor edx, edi
0x0000b88a      4189f2         mov r10d, esi
0x0000b88d      31f2           xor edx, esi
0x0000b88f      01ca           add edx, ecx
0x0000b891      89f9           mov ecx, edi
0x0000b893      c1c204         rol edx, 4
0x0000b896      01f2           add edx, esi
0x0000b898      31f1           xor ecx, esi
0x0000b89a      31d1           xor ecx, edx
0x0000b89c      4131d2         xor r10d, edx
0x0000b89f      01c1           add ecx, eax
0x0000b8a1      418d8439f87c.  lea eax, [r9 + rdi + 0x1fa27cf8]
0x0000b8a9      4489d7         mov edi, r10d
0x0000b8ac      c1c10b         rol ecx, 0xb
0x0000b8af      448b5424cc     mov r10d, dword [rsp - 0x34]
0x0000b8b4      01d1           add ecx, edx
0x0000b8b6      31cf           xor edi, ecx
0x0000b8b8      01c7           add edi, eax
0x0000b8ba      8b4424c0       mov eax, dword [rsp - 0x40]
0x0000b8be      c1c710         rol edi, 0x10
0x0000b8c1      01cf           add edi, ecx
0x0000b8c3      8db4306556ac.  lea esi, [rax + rsi - 0x3b53a99b]
0x0000b8ca      89d0           mov eax, edx
0x0000b8cc      31c8           xor eax, ecx
0x0000b8ce      31f8           xor eax, edi
0x0000b8d0      01f0           add eax, esi
0x0000b8d2      418db4164422.  lea esi, [r14 + rdx - 0xbd6ddbc]
0x0000b8da      89ca           mov edx, ecx
0x0000b8dc      c1c809         ror eax, 9
0x0000b8df      f7d2           not edx
0x0000b8e1      448b7424bc     mov r14d, dword [rsp - 0x44]
0x0000b8e6      01f8           add eax, edi
0x0000b8e8      09c2           or edx, eax
0x0000b8ea      31fa           xor edx, edi
0x0000b8ec      01f2           add edx, esi
0x0000b8ee      418db40d97ff.  lea esi, [r13 + rcx + 0x432aff97]
0x0000b8f6      4189fd         mov r13d, edi
0x0000b8f9      c1c206         rol edx, 6
0x0000b8fc      41f7d5         not r13d
0x0000b8ff      418dbc3ca723.  lea edi, [r12 + rdi - 0x546bdc59]
0x0000b907      01c2           add edx, eax
0x0000b909      4489e9         mov ecx, r13d
0x0000b90c      09d1           or ecx, edx
0x0000b90e      4189d5         mov r13d, edx
0x0000b911      31c1           xor ecx, eax
0x0000b913      41f7d5         not r13d
0x0000b916      01f1           add ecx, esi
0x0000b918      89c6           mov esi, eax
0x0000b91a      c1c10a         rol ecx, 0xa
0x0000b91d      f7d6           not esi
0x0000b91f      01d1           add ecx, edx
0x0000b921      09ce           or esi, ecx
0x0000b923      4189cc         mov r12d, ecx
0x0000b926      31d6           xor esi, edx
0x0000b928      41f7d4         not r12d
0x0000b92b      01fe           add esi, edi
0x0000b92d      418dbc0239a0.  lea edi, [r10 + rax - 0x36c5fc7]
0x0000b935      4489e8         mov eax, r13d
0x0000b938      c1c60f         rol esi, 0xf
0x0000b93b      448b5424e4     mov r10d, dword [rsp - 0x1c]
0x0000b940      01ce           add esi, ecx
0x0000b942      09f0           or eax, esi
0x0000b944      31c8           xor eax, ecx
0x0000b946      01f8           add eax, edi
0x0000b948      8dbc15c3595b.  lea edi, [rbp + rdx + 0x655b59c3]
0x0000b94f      8b6c24c4       mov ebp, dword [rsp - 0x3c]
0x0000b953      c1c80b         ror eax, 0xb
0x0000b956      4489e2         mov edx, r12d
0x0000b959      01f0           add eax, esi
0x0000b95b      09c2           or edx, eax
0x0000b95d      31f2           xor edx, esi
0x0000b95f      01fa           add edx, edi
0x0000b961      8dbc0d92cc0c.  lea edi, [rbp + rcx - 0x70f3336e]
0x0000b968      89f5           mov ebp, esi
0x0000b96a      c1c206         rol edx, 6
0x0000b96d      f7d5           not ebp
0x0000b96f      01c2           add edx, eax
0x0000b971      89e9           mov ecx, ebp
0x0000b973      09d1           or ecx, edx
0x0000b975      89d5           mov ebp, edx
0x0000b977      31c1           xor ecx, eax
0x0000b979      f7d5           not ebp
0x0000b97b      01f9           add ecx, edi
0x0000b97d      8b7c24d8       mov edi, dword [rsp - 0x28]
0x0000b981      c1c10a         rol ecx, 0xa
0x0000b984      01d1           add ecx, edx
0x0000b986      8dbc377df4ef.  lea edi, [rdi + rsi - 0x100b83]
0x0000b98d      89c6           mov esi, eax
0x0000b98f      f7d6           not esi
0x0000b991      09ce           or esi, ecx
0x0000b993      31d6           xor esi, edx
0x0000b995      01fe           add esi, edi
0x0000b997      418dbc06d15d.  lea edi, [r14 + rax - 0x7a7ba22f]
0x0000b99f      89e8           mov eax, ebp
0x0000b9a1      c1c60f         rol esi, 0xf
0x0000b9a4      448b7424d0     mov r14d, dword [rsp - 0x30]
0x0000b9a9      89cd           mov ebp, ecx
0x0000b9ab      01ce           add esi, ecx
0x0000b9ad      f7d5           not ebp
0x0000b9af      09f0           or eax, esi
0x0000b9b1      31c8           xor eax, ecx
0x0000b9b3      01f8           add eax, edi
0x0000b9b5      418dbc164f7e.  lea edi, [r14 + rdx + 0x6fa87e4f]
0x0000b9bd      89ea           mov edx, ebp
0x0000b9bf      c1c80b         ror eax, 0xb
0x0000b9c2      89f5           mov ebp, esi
0x0000b9c4      448b7424dc     mov r14d, dword [rsp - 0x24]
0x0000b9c9      01f0           add eax, esi
0x0000b9cb      f7d5           not ebp
0x0000b9cd      09c2           or edx, eax
0x0000b9cf      31f2           xor edx, esi
0x0000b9d1      01fa           add edx, edi
0x0000b9d3      418dbc09e0e6.  lea edi, [r9 + rcx - 0x1d31920]
0x0000b9db      89e9           mov ecx, ebp
0x0000b9dd      c1c206         rol edx, 6
0x0000b9e0      448b4c24c8     mov r9d, dword [rsp - 0x38]
0x0000b9e5      01c2           add edx, eax
0x0000b9e7      09d1           or ecx, edx
0x0000b9e9      31c1           xor ecx, eax
0x0000b9eb      01f9           add ecx, edi
0x0000b9ed      418dbc321443.  lea edi, [r10 + rsi - 0x5cfebcec]
0x0000b9f5      89c6           mov esi, eax
0x0000b9f7      c1c10a         rol ecx, 0xa
0x0000b9fa      f7d6           not esi
0x0000b9fc      418d8400a111.  lea eax, [r8 + rax + 0x4e0811a1]
0x0000ba04      01d1           add ecx, edx
0x0000ba06      4189d0         mov r8d, edx
0x0000ba09      448b5424d4     mov r10d, dword [rsp - 0x2c]
0x0000ba0e      09ce           or esi, ecx
0x0000ba10      41f7d0         not r8d
0x0000ba13      31d6           xor esi, edx
0x0000ba15      418d9411827e.  lea edx, [r9 + rdx - 0x8ac817e]
0x0000ba1d      4189c9         mov r9d, ecx
0x0000ba20      01fe           add esi, edi
0x0000ba22      4489c7         mov edi, r8d
0x0000ba25      41f7d1         not r9d
0x0000ba28      c1c60f         rol esi, 0xf
0x0000ba2b      01ce           add esi, ecx
0x0000ba2d      09f7           or edi, esi
0x0000ba2f      31cf           xor edi, ecx
0x0000ba31      418d8c0e35f2.  lea ecx, [r14 + rcx - 0x42c50dcb]
0x0000ba39      01c7           add edi, eax
0x0000ba3b      4489c8         mov eax, r9d
0x0000ba3e      c1cf0b         ror edi, 0xb
0x0000ba41      01f7           add edi, esi
0x0000ba43      09f8           or eax, edi
0x0000ba45      31f0           xor eax, esi
0x0000ba47      01d0           add eax, edx
0x0000ba49      89f2           mov edx, esi
0x0000ba4b      c1c006         rol eax, 6
0x0000ba4e      f7d2           not edx
0x0000ba50      01f8           add eax, edi
0x0000ba52      09c2           or edx, eax
0x0000ba54      31fa           xor edx, edi
0x0000ba56      01ca           add edx, ecx
0x0000ba58      8b4c24c0       mov ecx, dword [rsp - 0x40]
0x0000ba5c      c1c20a         rol edx, 0xa
0x0000ba5f      01c2           add edx, eax
0x0000ba61      8db431bbd2d7.  lea esi, [rcx + rsi + 0x2ad7d2bb]
0x0000ba68      89f9           mov ecx, edi
0x0000ba6a      418dbc3a91d3.  lea edi, [r10 + rdi - 0x14792c6f]
0x0000ba72      f7d1           not ecx
0x0000ba74      09d1           or ecx, edx
0x0000ba76      31c1           xor ecx, eax
0x0000ba78      01f1           add ecx, esi
0x0000ba7a      89c6           mov esi, eax
0x0000ba7c      c1c10f         rol ecx, 0xf
0x0000ba7f      f7d6           not esi
0x0000ba81      01d1           add ecx, edx
0x0000ba83      09ce           or esi, ecx
0x0000ba85      31d6           xor esi, edx
0x0000ba87      01fe           add esi, edi
0x0000ba89      c1ce0b         ror esi, 0xb
0x0000ba8c      01ce           add esi, ecx
0x0000ba8e      014424e8       add dword [rsp - 0x18], eax
0x0000ba92      4101cf         add r15d, ecx
0x0000ba95      4101f3         add r11d, esi
0x0000ba98      015424e0       add dword [rsp - 0x20], edx
0x0000ba9c      48395c24f0     cmp qword [rsp - 0x10], rbx
0x0000baa1      0f8719f9ffff   ja 0xb3c0
0x0000baa7      4589fa         mov r10d, r15d
0x0000baaa      488b4424f8     mov rax, qword [rsp - 8]
0x0000baaf      8b5c24e8       mov ebx, dword [rsp - 0x18]
0x0000bab3      8918           mov dword [rax], ebx
0x0000bab5      8b5c24e0       mov ebx, dword [rsp - 0x20]
0x0000bab9      44895804       mov dword [rax + 4], r11d
0x0000babd      44895008       mov dword [rax + 8], r10d
0x0000bac1      89580c         mov dword [rax + 0xc], ebx
0x0000bac4      5b             pop rbx
0x0000bac5      5d             pop rbp
0x0000bac6      415c           pop r12
0x0000bac8      415d           pop r13
0x0000baca      415e           pop r14
0x0000bacc      415f           pop r15
0x0000bace      c3             ret
0x0000bacf      90             nop
;-- md5_finish_ctx:
0x0000bad0      55             push rbp
0x0000bad1      53             push rbx
0x0000bad2      4889fb         mov rbx, rdi
0x0000bad5      8b4718         mov eax, dword [rdi + 0x18]
0x0000bad8      4889f5         mov rbp, rsi
0x0000badb      8b5314         mov edx, dword [rbx + 0x14]
0x0000bade      83f838         cmp eax, 0x38
0x0000bae1      89c6           mov esi, eax
0x0000bae3      4d19c0         sbb r8, r8
0x0000bae6      4983e0c0       and r8, 0xffffffffffffffc0
0x0000baea      4983e880       sub r8, 0xffffffffffffff80
0x0000baee      83f838         cmp eax, 0x38
0x0000baf1      4819c9         sbb rcx, rcx
0x0000baf4      4883e1f0       and rcx, 0xfffffffffffffff0
0x0000baf8      4883c11f       add rcx, 0x1f
0x0000bafc      83f838         cmp eax, 0x38
0x0000baff      4819ff         sbb rdi, rdi
0x0000bb02      4531c9         xor r9d, r9d
0x0000bb05      4883e7f0       and rdi, 0xfffffffffffffff0
0x0000bb09      4883c71e       add rdi, 0x1e
0x0000bb0d      037310         add esi, dword [rbx + 0x10]
0x0000bb10      410f92c1       setb r9b
0x0000bb14      897310         mov dword [rbx + 0x10], esi
0x0000bb17      4585c9         test r9d, r9d
0x0000bb1a      7406           je 0xbb22
0x0000bb1c      83c201         add edx, 1
0x0000bb1f      895314         mov dword [rbx + 0x14], edx
0x0000bb22      448d0cf50000.  lea r9d, [rsi*8]
0x0000bb2a      c1e203         shl edx, 3
0x0000bb2d      c1ee1d         shr esi, 0x1d
0x0000bb30      09f2           or edx, esi
0x0000bb32      488d35479f00.  lea rsi, obj.fillbuf_1                  ; 0x15a80
0x0000bb39      44894cbb1c     mov dword [rbx + rdi*4 + 0x1c], r9d
0x0000bb3e      4c89c7         mov rdi, r8
0x0000bb41      89548b1c       mov dword [rbx + rcx*4 + 0x1c], edx
0x0000bb45      4829c7         sub rdi, rax
0x0000bb48      4c8d4b1c       lea r9, [rbx + 0x1c]
0x0000bb4c      488d4ff8       lea rcx, [rdi - 8]
0x0000bb50      498d1401       lea rdx, [r9 + rax]
0x0000bb54      4883f908       cmp rcx, 8
0x0000bb58      7326           jae 0xbb80
0x0000bb5a      f6c104         test cl, 4
0x0000bb5d      7571           jne 0xbbd0
0x0000bb5f      4885c9         test rcx, rcx
0x0000bb62      7448           je 0xbbac
0x0000bb64      0fb605159f00.  movzx eax, byte [obj.fillbuf_1]         ; [0x15a80:1]=128
0x0000bb6b      f6c102         test cl, 2
0x0000bb6e      8802           mov byte [rdx], al
0x0000bb70      743a           je 0xbbac
0x0000bb72      0fb7440efe     movzx eax, word [rsi + rcx - 2]
0x0000bb77      6689440afe     mov word [rdx + rcx - 2], ax
0x0000bb7c      eb2e           jmp 0xbbac
0x0000bb7e      6690           nop
0x0000bb80      488b05f99e00.  mov rax, qword [obj.fillbuf_1]          ; [0x15a80:8]=128
0x0000bb87      488d7a08       lea rdi, [rdx + 8]
0x0000bb8b      4883e7f8       and rdi, 0xfffffffffffffff8
0x0000bb8f      488902         mov qword [rdx], rax
0x0000bb92      488b440ef8     mov rax, qword [rsi + rcx - 8]
0x0000bb97      4889440af8     mov qword [rdx + rcx - 8], rax
0x0000bb9c      4829fa         sub rdx, rdi
0x0000bb9f      4801d1         add rcx, rdx
0x0000bba2      4829d6         sub rsi, rdx
0x0000bba5      48c1e903       shr rcx, 3
0x0000bba9      f348a5         rep movsq qword [rdi], qword ptr [rsi]
0x0000bbac      4889da         mov rdx, rbx
0x0000bbaf      4c89c6         mov rsi, r8
0x0000bbb2      4c89cf         mov rdi, r9
0x0000bbb5      e8a6f7ffff     call sym.md5_process_block
0x0000bbba      4889ee         mov rsi, rbp
0x0000bbbd      4889df         mov rdi, rbx
0x0000bbc0      5b             pop rbx
0x0000bbc1      5d             pop rbp
0x0000bbc2      e979f7ffff     jmp sym.md5_read_ctx
0x0000bbc7      660f1f840000.  nop word [rax + rax]
0x0000bbd0      8b05aa9e0000   mov eax, dword [obj.fillbuf_1]          ; [0x15a80:4]=128
0x0000bbd6      8902           mov dword [rdx], eax
0x0000bbd8      8b440efc       mov eax, dword [rsi + rcx - 4]
0x0000bbdc      89440afc       mov dword [rdx + rcx - 4], eax
0x0000bbe0      ebca           jmp 0xbbac
0x0000bbe2      0f1f4000       nop dword [rax]
0x0000bbe6      662e0f1f8400.  nop word cs:[rax + rax]
;-- md5_process_bytes:
0x0000bbf0      4157           push r15
0x0000bbf2      4156           push r14
0x0000bbf4      4155           push r13
0x0000bbf6      4154           push r12
0x0000bbf8      4989d5         mov r13, rdx
0x0000bbfb      55             push rbp
0x0000bbfc      53             push rbx
0x0000bbfd      4989f4         mov r12, rsi
0x0000bc00      4889fb         mov rbx, rdi
0x0000bc03      4883ec08       sub rsp, 8
0x0000bc07      8b4218         mov eax, dword [rdx + 0x18]
0x0000bc0a      85c0           test eax, eax
0x0000bc0c      0f852e010000   jne 0xbd40
0x0000bc12      4983fc3f       cmp r12, 0x3f
0x0000bc16      0f8608010000   jbe 0xbd24
0x0000bc1c      f6c303         test bl, 3
0x0000bc1f      0f84e3000000   je 0xbd08
0x0000bc25      4983fc40       cmp r12, 0x40                           ; segment.PHDR
0x0000bc29      498d6d1c       lea rbp, [r13 + 0x1c]
0x0000bc2d      7461           je 0xbc90
0x0000bc2f      4d8d7c24bf     lea r15, [r12 - 0x41]
0x0000bc34      49c1ef06       shr r15, 6
0x0000bc38      4d8d7701       lea r14, [r15 + 1]
0x0000bc3c      49c1e606       shl r14, 6
0x0000bc40      4901de         add r14, rbx
0x0000bc43      0f1f440000     nop dword [rax + rax]
0x0000bc48      f30f6f03       movdqu xmm0, xmmword [rbx]
0x0000bc4c      4c89ea         mov rdx, r13
0x0000bc4f      be40000000     mov esi, 0x40                           ; segment.PHDR
0x0000bc54      4889ef         mov rdi, rbp
0x0000bc57      4883c340       add rbx, 0x40                           ; segment.PHDR
0x0000bc5b      0f114500       movups xmmword [rbp], xmm0
0x0000bc5f      f30f6f43d0     movdqu xmm0, xmmword [rbx - 0x30]
0x0000bc64      0f114510       movups xmmword [rbp + 0x10], xmm0
0x0000bc68      f30f6f43e0     movdqu xmm0, xmmword [rbx - 0x20]
0x0000bc6d      0f114520       movups xmmword [rbp + 0x20], xmm0
0x0000bc71      f30f6f43f0     movdqu xmm0, xmmword [rbx - 0x10]
0x0000bc76      0f114530       movups xmmword [rbp + 0x30], xmm0
0x0000bc7a      e8e1f6ffff     call sym.md5_process_block
0x0000bc7f      4c39f3         cmp rbx, r14
0x0000bc82      75c4           jne 0xbc48
0x0000bc84      49f7df         neg r15
0x0000bc87      49c1e706       shl r15, 6
0x0000bc8b      4f8d643cc0     lea r12, [r12 + r15 - 0x40]
0x0000bc90      418b7d18       mov edi, dword [r13 + 0x18]
0x0000bc94      4183fc08       cmp r12d, 8
0x0000bc98      4489e0         mov eax, r12d
0x0000bc9b      488d4c3d00     lea rcx, [rbp + rdi]
0x0000bca0      0f83da000000   jae 0xbd80
0x0000bca6      41f6c404       test r12b, 4
0x0000bcaa      0f85f1010000   jne 0xbea1
0x0000bcb0      4585e4         test r12d, r12d
0x0000bcb3      740d           je 0xbcc2
0x0000bcb5      0fb613         movzx edx, byte [rbx]
0x0000bcb8      a802           test al, 2
0x0000bcba      8811           mov byte [rcx], dl
0x0000bcbc      0f85f3010000   jne 0xbeb5
0x0000bcc2      4901fc         add r12, rdi
0x0000bcc5      4983fc3f       cmp r12, 0x3f
0x0000bcc9      7623           jbe 0xbcee
0x0000bccb      4c89ea         mov rdx, r13
0x0000bcce      be40000000     mov esi, 0x40                           ; segment.PHDR
0x0000bcd3      4889ef         mov rdi, rbp
0x0000bcd6      e885f6ffff     call sym.md5_process_block
0x0000bcdb      4983ec40       sub r12, 0x40                           ; segment.PHDR
0x0000bcdf      498d755c       lea rsi, [r13 + 0x5c]
0x0000bce3      4889ef         mov rdi, rbp
0x0000bce6      4c89e2         mov rdx, r12
0x0000bce9      e89271ffff     call sym.imp.memcpy
0x0000bcee      45896518       mov dword [r13 + 0x18], r12d
0x0000bcf2      4883c408       add rsp, 8
0x0000bcf6      5b             pop rbx
0x0000bcf7      5d             pop rbp
0x0000bcf8      415c           pop r12
0x0000bcfa      415d           pop r13
0x0000bcfc      415e           pop r14
0x0000bcfe      415f           pop r15
0x0000bd00      c3             ret
0x0000bd01      0f1f80000000.  nop dword [rax]
0x0000bd08      4c89e5         mov rbp, r12
0x0000bd0b      4889df         mov rdi, rbx
0x0000bd0e      4c89ea         mov rdx, r13
0x0000bd11      4883e5c0       and rbp, 0xffffffffffffffc0
0x0000bd15      4183e43f       and r12d, 0x3f
0x0000bd19      4889ee         mov rsi, rbp
0x0000bd1c      4801eb         add rbx, rbp
0x0000bd1f      e83cf6ffff     call sym.md5_process_block
0x0000bd24      4d85e4         test r12, r12
0x0000bd27      0f856b010000   jne 0xbe98
0x0000bd2d      4883c408       add rsp, 8
0x0000bd31      5b             pop rbx
0x0000bd32      5d             pop rbp
0x0000bd33      415c           pop r12
0x0000bd35      415d           pop r13
0x0000bd37      415e           pop r14
0x0000bd39      415f           pop r15
0x0000bd3b      c3             ret
0x0000bd3c      0f1f4000       nop dword [rax]
0x0000bd40      89c5           mov ebp, eax
0x0000bd42      ba80000000     mov edx, 0x80
0x0000bd47      4d8d7d1c       lea r15, [r13 + 0x1c]
0x0000bd4b      4829ea         sub rdx, rbp
0x0000bd4e      4839f2         cmp rdx, rsi
0x0000bd51      498d3c2f       lea rdi, [r15 + rbp]
0x0000bd55      480f47d6       cmova rdx, rsi
0x0000bd59      4889de         mov rsi, rbx
0x0000bd5c      4989d6         mov r14, rdx
0x0000bd5f      e81c71ffff     call sym.imp.memcpy
0x0000bd64      418b7518       mov esi, dword [r13 + 0x18]
0x0000bd68      4401f6         add esi, r14d
0x0000bd6b      83fe40         cmp esi, 0x40                           ; segment.PHDR
0x0000bd6e      41897518       mov dword [r13 + 0x18], esi
0x0000bd72      775c           ja 0xbdd0
0x0000bd74      4c01f3         add rbx, r14
0x0000bd77      4d29f4         sub r12, r14
0x0000bd7a      e993feffff     jmp 0xbc12
0x0000bd7f      90             nop
0x0000bd80      488b03         mov rax, qword [rbx]
0x0000bd83      4489e2         mov edx, r12d
0x0000bd86      488901         mov qword [rcx], rax
0x0000bd89      488b4413f8     mov rax, qword [rbx + rdx - 8]
0x0000bd8e      48894411f8     mov qword [rcx + rdx - 8], rax
0x0000bd93      488d5108       lea rdx, [rcx + 8]
0x0000bd97      4889c8         mov rax, rcx
0x0000bd9a      4883e2f8       and rdx, 0xfffffffffffffff8
0x0000bd9e      4829d0         sub rax, rdx
0x0000bda1      4829c3         sub rbx, rax
0x0000bda4      4401e0         add eax, r12d
0x0000bda7      83e0f8         and eax, 0xfffffff8                     ; 4294967288
0x0000bdaa      83f808         cmp eax, 8
0x0000bdad      0f820fffffff   jb 0xbcc2
0x0000bdb3      83e0f8         and eax, 0xfffffff8                     ; 4294967288
0x0000bdb6      31c9           xor ecx, ecx
0x0000bdb8      89ce           mov esi, ecx
0x0000bdba      83c108         add ecx, 8
0x0000bdbd      4c8b0433       mov r8, qword [rbx + rsi]
0x0000bdc1      39c1           cmp ecx, eax
0x0000bdc3      4c890432       mov qword [rdx + rsi], r8
0x0000bdc7      72ef           jb 0xbdb8
0x0000bdc9      e9f4feffff     jmp 0xbcc2
0x0000bdce      6690           nop
0x0000bdd0      83e6c0         and esi, 0xffffffc0                     ; 4294967232
0x0000bdd3      4c89ea         mov rdx, r13
0x0000bdd6      4c89ff         mov rdi, r15
0x0000bdd9      e882f5ffff     call sym.md5_process_block
0x0000bdde      418b4d18       mov ecx, dword [r13 + 0x18]
0x0000bde2      4a8d443500     lea rax, [rbp + r14]
0x0000bde7      4883e0c0       and rax, 0xffffffffffffffc0
0x0000bdeb      89ca           mov edx, ecx
0x0000bded      4c01f8         add rax, r15
0x0000bdf0      83e23f         and edx, 0x3f
0x0000bdf3      83fa08         cmp edx, 8
0x0000bdf6      41895518       mov dword [r13 + 0x18], edx
0x0000bdfa      7334           jae 0xbe30
0x0000bdfc      f6c104         test cl, 4
0x0000bdff      757e           jne 0xbe7f
0x0000be01      85d2           test edx, edx
0x0000be03      0f846bffffff   je 0xbd74
0x0000be09      0fb630         movzx esi, byte [rax]
0x0000be0c      83e102         and ecx, 2
0x0000be0f      4188751c       mov byte [r13 + 0x1c], sil
0x0000be13      0f845bffffff   je 0xbd74
0x0000be19      0fb74410fe     movzx eax, word [rax + rdx - 2]
0x0000be1e      6641894417fe   mov word [r15 + rdx - 2], ax
0x0000be24      e94bffffff     jmp 0xbd74
0x0000be29      0f1f80000000.  nop dword [rax]
0x0000be30      488b08         mov rcx, qword [rax]
0x0000be33      49894d1c       mov qword [r13 + 0x1c], rcx
0x0000be37      89d1           mov ecx, edx
0x0000be39      488b7408f8     mov rsi, qword [rax + rcx - 8]
0x0000be3e      4989740ff8     mov qword [r15 + rcx - 8], rsi
0x0000be43      498d4d24       lea rcx, [r13 + 0x24]
0x0000be47      4883e1f8       and rcx, 0xfffffffffffffff8
0x0000be4b      4929cf         sub r15, rcx
0x0000be4e      4c29f8         sub rax, r15
0x0000be51      4101d7         add r15d, edx
0x0000be54      4183e7f8       and r15d, 0xfffffff8                    ; 4294967288
0x0000be58      4183ff08       cmp r15d, 8
0x0000be5c      0f8212ffffff   jb 0xbd74
0x0000be62      4183e7f8       and r15d, 0xfffffff8                    ; 4294967288
0x0000be66      31d2           xor edx, edx
0x0000be68      89d6           mov esi, edx
0x0000be6a      83c208         add edx, 8
0x0000be6d      488b3c30       mov rdi, qword [rax + rsi]
0x0000be71      4439fa         cmp edx, r15d
0x0000be74      48893c31       mov qword [rcx + rsi], rdi
0x0000be78      72ee           jb 0xbe68
0x0000be7a      e9f5feffff     jmp 0xbd74
0x0000be7f      8b08           mov ecx, dword [rax]
0x0000be81      41894d1c       mov dword [r13 + 0x1c], ecx
0x0000be85      8b4410fc       mov eax, dword [rax + rdx - 4]
0x0000be89      41894417fc     mov dword [r15 + rdx - 4], eax
0x0000be8e      e9e1feffff     jmp 0xbd74
0x0000be93      0f1f440000     nop dword [rax + rax]
0x0000be98      498d6d1c       lea rbp, [r13 + 0x1c]
0x0000be9c      e9effdffff     jmp 0xbc90
0x0000bea1      8b13           mov edx, dword [rbx]
0x0000bea3      8911           mov dword [rcx], edx
0x0000bea5      4489e2         mov edx, r12d
0x0000bea8      8b4413fc       mov eax, dword [rbx + rdx - 4]
0x0000beac      894411fc       mov dword [rcx + rdx - 4], eax
0x0000beb0      e90dfeffff     jmp 0xbcc2
0x0000beb5      4489e2         mov edx, r12d
0x0000beb8      0fb74413fe     movzx eax, word [rbx + rdx - 2]
0x0000bebd      66894411fe     mov word [rcx + rdx - 2], ax
0x0000bec2      e9fbfdffff     jmp 0xbcc2
0x0000bec7      660f1f840000.  nop word [rax + rax]
;-- md5_buffer:
0x0000bed0      55             push rbp
0x0000bed1      53             push rbx
0x0000bed2      4889d5         mov rbp, rdx
0x0000bed5      4881ecb80000.  sub rsp, 0xb8
0x0000bedc      64488b042528.  mov rax, qword fs:[0x28]
0x0000bee5      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000beed      31c0           xor eax, eax
0x0000beef      4889e3         mov rbx, rsp
0x0000bef2      48b801234567.  movabs rax, 0xefcdab8967452301
0x0000befc      48c744241000.  mov qword [rsp + 0x10], 0
0x0000bf05      48890424       mov qword [rsp], rax
0x0000bf09      4889da         mov rdx, rbx
0x0000bf0c      48b8fedcba98.  movabs rax, 0x1032547698badcfe
0x0000bf16      4889442408     mov qword [rsp + 8], rax
0x0000bf1b      c74424180000.  mov dword [rsp + 0x18], 0
0x0000bf23      e8c8fcffff     call sym.md5_process_bytes
0x0000bf28      4889ee         mov rsi, rbp
0x0000bf2b      4889df         mov rdi, rbx
0x0000bf2e      e89dfbffff     call sym.md5_finish_ctx
0x0000bf33      488b8c24a800.  mov rcx, qword [rsp + 0xa8]
0x0000bf3b      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000bf44      750a           jne 0xbf50
0x0000bf46      4881c4b80000.  add rsp, 0xb8
0x0000bf4d      5b             pop rbx
0x0000bf4e      5d             pop rbp
0x0000bf4f      c3             ret
0x0000bf50      e84b6dffff     call sym.imp.__stack_chk_fail
0x0000bf55      90             nop
0x0000bf56      662e0f1f8400.  nop word cs:[rax + rax]
;-- md5_stream:
0x0000bf60      4157           push r15
0x0000bf62      4156           push r14
0x0000bf64      4989f6         mov r14, rsi
0x0000bf67      4155           push r13
0x0000bf69      4154           push r12
0x0000bf6b      55             push rbp
0x0000bf6c      53             push rbx
0x0000bf6d      4889fd         mov rbp, rdi
0x0000bf70      bf48800000     mov edi, 0x8048
0x0000bf75      4881ecb80000.  sub rsp, 0xb8
0x0000bf7c      64488b042528.  mov rax, qword fs:[0x28]
0x0000bf85      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000bf8d      31c0           xor eax, eax
0x0000bf8f      e83472ffff     call 0x31c8
0x0000bf94      4989c4         mov r12, rax
0x0000bf97      b801000000     mov eax, 1
0x0000bf9c      4d85e4         test r12, r12
0x0000bf9f      0f8486000000   je 0xc02b
0x0000bfa5      48b801234567.  movabs rax, 0xefcdab8967452301
0x0000bfaf      48c744241000.  mov qword [rsp + 0x10], 0
0x0000bfb8      c74424180000.  mov dword [rsp + 0x18], 0
0x0000bfc0      48890424       mov qword [rsp], rax
0x0000bfc4      48b8fedcba98.  movabs rax, 0x1032547698badcfe
0x0000bfce      41bd00800000   mov r13d, 0x8000
0x0000bfd4      4889442408     mov qword [rsp + 8], rax
0x0000bfd9      4989e7         mov r15, rsp
0x0000bfdc      31db           xor ebx, ebx
0x0000bfde      eb28           jmp 0xc008
0x0000bfe0      498d3c1c       lea rdi, [r12 + rbx]
0x0000bfe4      4c89ea         mov rdx, r13
0x0000bfe7      4889e9         mov rcx, rbp
0x0000bfea      4829da         sub rdx, rbx
0x0000bfed      be01000000     mov esi, 1
0x0000bff2      e8196cffff     call sym.imp.fread_unlocked
0x0000bff7      4801c3         add rbx, rax
0x0000bffa      4881fb008000.  cmp rbx, 0x8000
0x0000c001      745d           je 0xc060
0x0000c003      4885c0         test rax, rax
0x0000c006      7470           je 0xc078
0x0000c008      f6450010       test byte [rbp], 0x10
0x0000c00c      74d2           je 0xbfe0
0x0000c00e      4885db         test rbx, rbx
0x0000c011      4889e5         mov rbp, rsp
0x0000c014      753a           jne 0xc050
0x0000c016      4c89f6         mov rsi, r14
0x0000c019      4889ef         mov rdi, rbp
0x0000c01c      e8affaffff     call sym.md5_finish_ctx
0x0000c021      4c89e7         mov rdi, r12
0x0000c024      e89771ffff     call sym..plt.got
0x0000c029      31c0           xor eax, eax
0x0000c02b      488b8c24a800.  mov rcx, qword [rsp + 0xa8]
0x0000c033      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000c03c      754f           jne 0xc08d
0x0000c03e      4881c4b80000.  add rsp, 0xb8
0x0000c045      5b             pop rbx
0x0000c046      5d             pop rbp
0x0000c047      415c           pop r12
0x0000c049      415d           pop r13
0x0000c04b      415e           pop r14
0x0000c04d      415f           pop r15
0x0000c04f      c3             ret
0x0000c050      4889ea         mov rdx, rbp
0x0000c053      4889de         mov rsi, rbx
0x0000c056      4c89e7         mov rdi, r12
0x0000c059      e892fbffff     call sym.md5_process_bytes
0x0000c05e      ebb6           jmp 0xc016
0x0000c060      4c89fa         mov rdx, r15
0x0000c063      be00800000     mov esi, 0x8000
0x0000c068      4c89e7         mov rdi, r12
0x0000c06b      e8f0f2ffff     call sym.md5_process_block
0x0000c070      e967ffffff     jmp 0xbfdc
0x0000c075      0f1f00         nop dword [rax]
0x0000c078      f6450020       test byte [rbp], 0x20
0x0000c07c      7490           je 0xc00e
0x0000c07e      4c89e7         mov rdi, r12
0x0000c081      e83a71ffff     call sym..plt.got
0x0000c086      b801000000     mov eax, 1
0x0000c08b      eb9e           jmp 0xc02b
0x0000c08d      e80e6cffff     call sym.imp.__stack_chk_fail
0x0000c092      662e0f1f8400.  nop word cs:[rax + rax]
0x0000c09c      0f1f4000       nop dword [rax]
;-- fdadvise:
0x0000c0a0      e92b6dffff     jmp sym.imp.posix_fadvise               ; ../coreutils-8.31/lib/fadvise.c:32
0x0000c0a5      90             nop
0x0000c0a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- fadvise:
0x0000c0b0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fadvise.c:40
0x0000c0b3      741b           je 0xc0d0
0x0000c0b5      53             push rbx
0x0000c0b6      89f3           mov ebx, esi
0x0000c0b8      e8d36dffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fadvise.c:42
0x0000c0bd      89d9           mov ecx, ebx                            ; ../coreutils-8.31/lib/fadvise.c:34
0x0000c0bf      31d2           xor edx, edx
0x0000c0c1      31f6           xor esi, esi
0x0000c0c3      5b             pop rbx                                 ; ../coreutils-8.31/lib/fadvise.c:43
0x0000c0c4      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fadvise.c:34
0x0000c0c6      e9056dffff     jmp sym.imp.posix_fadvise
0x0000c0cb      0f1f440000     nop dword [rax + rax]
0x0000c0d0      f3c3           ret
0x0000c0d2      662e0f1f8400.  nop word cs:[rax + rax]
0x0000c0dc      0f1f4000       nop dword [rax]
;-- match_suffix:
0x0000c0e0      488b37         mov rsi, qword [rdi]                    ; ../coreutils-8.31/lib/filevercmp.c:35
0x0000c0e3      0fb616         movzx edx, byte [rsi]
0x0000c0e6      84d2           test dl, dl
0x0000c0e8      0f84b2000000   je 0xc1a0
0x0000c0ee      31c9           xor ecx, ecx                            ; ../coreutils-8.31/lib/filevercmp.c:37
0x0000c0f0      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/filevercmp.c:36
0x0000c0f2      4531c0         xor r8d, r8d                            ; ../coreutils-8.31/lib/filevercmp.c:44
0x0000c0f5      41bb01000000   mov r11d, 1
0x0000c0fb      49baffffff03.  movabs r10, 0x3ffffff03ffffff
0x0000c105      eb38           jmp 0xc13f
0x0000c107      660f1f840000.  nop word [rax + rax]
0x0000c110      0fbeca         movsx ecx, dl
0x0000c113      83e941         sub ecx, 0x41
0x0000c116      83f939         cmp ecx, 0x39
0x0000c119      770d           ja 0xc128
0x0000c11b      4d89d9         mov r9, r11
0x0000c11e      49d3e1         shl r9, cl
0x0000c121      31c9           xor ecx, ecx                            ; ../coreutils-8.31/lib/filevercmp.c:42
0x0000c123      4d85d1         test r9, r10
0x0000c126      7509           jne 0xc131
0x0000c128      31c9           xor ecx, ecx
0x0000c12a      80fa7e         cmp dl, 0x7e
0x0000c12d      490f45c0       cmovne rax, r8
0x0000c131      4883c601       add rsi, 1                              ; ../coreutils-8.31/lib/filevercmp.c:54
0x0000c135      488937         mov qword [rdi], rsi
0x0000c138      0fb616         movzx edx, byte [rsi]                   ; ../coreutils-8.31/lib/filevercmp.c:38
0x0000c13b      84d2           test dl, dl
0x0000c13d      7432           je 0xc171
0x0000c13f      84c9           test cl, cl                             ; ../coreutils-8.31/lib/filevercmp.c:40
0x0000c141      75cd           jne 0xc110
0x0000c143      80fa2e         cmp dl, 0x2e                            ; ../coreutils-8.31/lib/filevercmp.c:46
0x0000c146      7430           je 0xc178
0x0000c148      80fa5a         cmp dl, 0x5a
0x0000c14b      7f43           jg 0xc190
0x0000c14d      80fa41         cmp dl, 0x41
0x0000c150      7ddf           jge 0xc131
0x0000c152      448d4ad0       lea r9d, [rdx - 0x30]
0x0000c156      4180f909       cmp r9b, 9
0x0000c15a      76d5           jbe 0xc131
0x0000c15c      80fa7e         cmp dl, 0x7e
0x0000c15f      490f45c0       cmovne rax, r8
0x0000c163      4883c601       add rsi, 1
0x0000c167      488937         mov qword [rdi], rsi
0x0000c16a      0fb616         movzx edx, byte [rsi]
0x0000c16d      84d2           test dl, dl
0x0000c16f      75ce           jne 0xc13f
0x0000c171      f3c3           ret
0x0000c173      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/c-ctype.h:-79
0x0000c178      4885c0         test rax, rax
0x0000c17b      b901000000     mov ecx, 1
0x0000c180      480f44c6       cmove rax, rsi
0x0000c184      ebab           jmp 0xc131
0x0000c186      662e0f1f8400.  nop word cs:[rax + rax]
0x0000c190      448d4a9f       lea r9d, [rdx - 0x61]
0x0000c194      4180f919       cmp r9b, 0x19
0x0000c198      77c2           ja 0xc15c
0x0000c19a      eb95           jmp 0xc131
0x0000c19c      0f1f4000       nop dword [rax]
0x0000c1a0      31c0           xor eax, eax
0x0000c1a2      c3             ret                                     ; ../coreutils-8.31/lib/c-ctype.h:-249
0x0000c1a3      0f1f00         nop dword [rax]
0x0000c1a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- filevercmp:
0x0000c1b0      4157           push r15
0x0000c1b2      4156           push r14
0x0000c1b4      4155           push r13
0x0000c1b6      4154           push r12
0x0000c1b8      55             push rbp                                ; ../coreutils-8.31/lib/c-ctype.h:-243
0x0000c1b9      53             push rbx
0x0000c1ba      4889f5         mov rbp, rsi
0x0000c1bd      4889fb         mov rbx, rdi
0x0000c1c0      4883ec38       sub rsp, 0x38
0x0000c1c4      64488b042528.  mov rax, qword fs:[0x28]
0x0000c1cd      4889442428     mov qword [rsp + 0x28], rax
0x0000c1d2      31c0           xor eax, eax
0x0000c1d4      e8676cffff     call sym.imp.strcmp
0x0000c1d9      85c0           test eax, eax
0x0000c1db      4189c4         mov r12d, eax
0x0000c1de      0f8444020000   je 0xc428
0x0000c1e4      0fb603         movzx eax, byte [rbx]
0x0000c1e7      84c0           test al, al
0x0000c1e9      0f8479030000   je 0xc568
0x0000c1ef      440fb64500     movzx r8d, byte [rbp]
0x0000c1f4      4584c0         test r8b, r8b
0x0000c1f7      0f8453020000   je 0xc450
0x0000c1fd      4c8d0dbd9800.  lea r9, [0x00015ac1]                    ; "."
0x0000c204      b902000000     mov ecx, 2
0x0000c209      4889df         mov rdi, rbx
0x0000c20c      4c89ce         mov rsi, r9
0x0000c20f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c211      0f97c2         seta dl
0x0000c214      80da00         sbb dl, 0
0x0000c217      84d2           test dl, dl
0x0000c219      0f8449030000   je 0xc568
0x0000c21f      b902000000     mov ecx, 2
0x0000c224      4c89ce         mov rsi, r9
0x0000c227      4889ef         mov rdi, rbp
0x0000c22a      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c22c      0f97c2         seta dl
0x0000c22f      80da00         sbb dl, 0
0x0000c232      84d2           test dl, dl
0x0000c234      0f8416020000   je 0xc450
0x0000c23a      4c8d0d7f9800.  lea r9, [0x00015ac0]                    ; ".."
0x0000c241      b903000000     mov ecx, 3
0x0000c246      4889df         mov rdi, rbx
0x0000c249      4c89ce         mov rsi, r9
0x0000c24c      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c24e      0f97c2         seta dl
0x0000c251      80da00         sbb dl, 0
0x0000c254      84d2           test dl, dl
0x0000c256      0f840c030000   je 0xc568
0x0000c25c      b903000000     mov ecx, 3                              ; ../coreutils-8.31/lib/c-ctype.h:-219
0x0000c261      4c89ce         mov rsi, r9                             ; ../coreutils-8.31/lib/c-ctype.h:-218
0x0000c264      4889ef         mov rdi, rbp
0x0000c267      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c269      0f97c2         seta dl
0x0000c26c      80da00         sbb dl, 0
0x0000c26f      84d2           test dl, dl
0x0000c271      0f84d9010000   je 0xc450
0x0000c277      3c2e           cmp al, 0x2e
0x0000c279      0f84d1020000   je 0xc550
0x0000c27f      4180f82e       cmp r8b, 0x2e                           ; ../coreutils-8.31/lib/c-ctype.h:-215
0x0000c283      0f84c7010000   je 0xc450
0x0000c289      488d7c2418     lea rdi, [rsp + 0x18]
0x0000c28e      48895c2418     mov qword [rsp + 0x18], rbx             ; ../coreutils-8.31/lib/c-ctype.h:-212
0x0000c293      48896c2420     mov qword [rsp + 0x20], rbp
0x0000c298      e843feffff     call sym.match_suffix
0x0000c29d      488d7c2420     lea rdi, [rsp + 0x20]
0x0000c2a2      4989c5         mov r13, rax
0x0000c2a5      e836feffff     call sym.match_suffix
0x0000c2aa      4d85ed         test r13, r13
0x0000c2ad      0f840d020000   je 0xc4c0
0x0000c2b3      4929dd         sub r13, rbx
0x0000c2b6      4885c0         test rax, rax
0x0000c2b9      0f8414030000   je 0xc5d3
0x0000c2bf      4829e8         sub rax, rbp
0x0000c2c2      4989c6         mov r14, rax
0x0000c2c5      4d39f5         cmp r13, r14
0x0000c2c8      0f84d2020000   je 0xc5a0
0x0000c2ce      31f6           xor esi, esi
0x0000c2d0      31d2           xor edx, edx
0x0000c2d2      41ba01000000   mov r10d, 1
0x0000c2d8      49bfffffff03.  movabs r15, 0x3ffffff03ffffff
0x0000c2e2      4939d5         cmp r13, rdx
0x0000c2e5      7709           ja 0xc2f0
0x0000c2e7      4939f6         cmp r14, rsi
0x0000c2ea      0f8638010000   jbe 0xc428
0x0000c2f0      4989f3         mov r11, rsi
0x0000c2f3      48892c24       mov qword [rsp], rbp
0x0000c2f7      4929d3         sub r11, rdx                            ; ../coreutils-8.31/lib/c-ctype.h:-149
0x0000c2fa      4b8d441d00     lea rax, [r13 + r11]
0x0000c2ff      4e8d4c1d00     lea r9, [rbp + r11]
0x0000c304      4889442408     mov qword [rsp + 8], rax
0x0000c309      0f1f80000000.  nop dword [rax]
0x0000c310      4939d5         cmp r13, rdx
0x0000c313      760b           jbe 0xc320
0x0000c315      0fb60413       movzx eax, byte [rbx + rdx]
0x0000c319      83e830         sub eax, 0x30
0x0000c31c      3c09           cmp al, 9                               ; ../coreutils-8.31/lib/filevercmp.c:-290
0x0000c31e      771a           ja 0xc33a
0x0000c320      4939f6         cmp r14, rsi
0x0000c323      410fbe0411     movsx eax, byte [r9 + rdx]
0x0000c328      0f86c2010000   jbe 0xc4f0
0x0000c32e      8d48d0         lea ecx, [rax - 0x30]
0x0000c331      80f909         cmp cl, 9
0x0000c334      0f86b6010000   jbe 0xc4f0                              ; ../coreutils-8.31/lib/filevercmp.c:-314
0x0000c33a      4939d5         cmp r13, rdx
0x0000c33d      0f8430020000   je 0xc573
0x0000c343      0fb60413       movzx eax, byte [rbx + rdx]             ; ../coreutils-8.31/lib/filevercmp.c:-289
0x0000c347      8d48d0         lea ecx, [rax - 0x30]
0x0000c34a      80f909         cmp cl, 9
0x0000c34d      0f868d010000   jbe 0xc4e0                              ; ../coreutils-8.31/lib/c-ctype.h:-149
0x0000c353      440fb6c0       movzx r8d, al
0x0000c357      418d48bf       lea ecx, [r8 - 0x41]
0x0000c35b      83f939         cmp ecx, 0x39                           ; ../coreutils-8.31/lib/filevercmp.c:-288
0x0000c35e      770b           ja 0xc36b
0x0000c360      4c89d7         mov rdi, r10
0x0000c363      48d3e7         shl rdi, cl
0x0000c366      4c85ff         test rdi, r15
0x0000c369      750f           jne 0xc37a
0x0000c36b      4181c0000100.  add r8d, 0x100
0x0000c372      3c7e           cmp al, 0x7e
0x0000c374      0f84e6000000   je 0xc460
0x0000c37a      4939f6         cmp r14, rsi
0x0000c37d      7411           je 0xc390                               ; ../coreutils-8.31/lib/filevercmp.c:-281
0x0000c37f      410fb60411     movzx eax, byte [r9 + rdx]
0x0000c384      8d48d0         lea ecx, [rax - 0x30]
0x0000c387      80f909         cmp cl, 9
0x0000c38a      0f87f8000000   ja 0xc488
0x0000c390      31ff           xor edi, edi
0x0000c392      4439c7         cmp edi, r8d
0x0000c395      0f858d010000   jne 0xc528
0x0000c39b      4883c201       add rdx, 1
0x0000c39f      4883c601       add rsi, 1
0x0000c3a3      e968ffffff     jmp 0xc310
0x0000c3a8      0f1f84000000.  nop dword [rax + rax]
0x0000c3b0      4883c601       add rsi, 1
0x0000c3b4      0fbe443500     movsx eax, byte [rbp + rsi]
0x0000c3b9      3c30           cmp al, 0x30
0x0000c3bb      74f3           je 0xc3b0
0x0000c3bd      4829d6         sub rsi, rdx
0x0000c3c0      4531c0         xor r8d, r8d
0x0000c3c3      4989f1         mov r9, rsi
0x0000c3c6      4c8d5c3500     lea r11, [rbp + rsi]
0x0000c3cb      eb29           jmp 0xc3f6
0x0000c3cd      0f1f00         nop dword [rax]
0x0000c3d0      8d70d0         lea esi, [rax - 0x30]
0x0000c3d3      4080fe09       cmp sil, 9
0x0000c3d7      0f8763010000   ja 0xc540
0x0000c3dd      4585c0         test r8d, r8d
0x0000c3e0      7507           jne 0xc3e9
0x0000c3e2      440fbec1       movsx r8d, cl
0x0000c3e6      4129c0         sub r8d, eax
0x0000c3e9      4883c201       add rdx, 1
0x0000c3ed      0fb60c13       movzx ecx, byte [rbx + rdx]
0x0000c3f1      410fbe0413     movsx eax, byte [r11 + rdx]
0x0000c3f6      8d79d0         lea edi, [rcx - 0x30]
0x0000c3f9      4a8d340a       lea rsi, [rdx + r9]
0x0000c3fd      4080ff09       cmp dil, 9
0x0000c401      76cd           jbe 0xc3d0
0x0000c403      83e830         sub eax, 0x30
0x0000c406      3c09           cmp al, 9
0x0000c408      0f86b5010000   jbe 0xc5c3
0x0000c40e      4585c0         test r8d, r8d
0x0000c411      0f84cbfeffff   je 0xc2e2
0x0000c417      660f1f840000.  nop word [rax + rax]
0x0000c420      4589c4         mov r12d, r8d                           ; ../coreutils-8.31/lib/filevercmp.c:-572
0x0000c423      0f1f440000     nop dword [rax + rax]
0x0000c428      488b5c2428     mov rbx, qword [rsp + 0x28]
0x0000c42d      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000c436      4489e0         mov eax, r12d
0x0000c439      0f858f010000   jne 0xc5ce
0x0000c43f      4883c438       add rsp, 0x38
0x0000c443      5b             pop rbx
0x0000c444      5d             pop rbp                                 ; ../coreutils-8.31/lib/filevercmp.c:-570
0x0000c445      415c           pop r12
0x0000c447      415d           pop r13
0x0000c449      415e           pop r14
0x0000c44b      415f           pop r15
0x0000c44d      c3             ret
0x0000c44e      6690           nop
0x0000c450      41bc01000000   mov r12d, 1
0x0000c456      ebd0           jmp 0xc428
0x0000c458      0f1f84000000.  nop dword [rax + rax]
0x0000c460      498d0413       lea rax, [r11 + rdx]
0x0000c464      4939c6         cmp r14, rax                            ; ../coreutils-8.31/lib/filevercmp.c:-704
0x0000c467      0f84b3000000   je 0xc520
0x0000c46d      410fb60411     movzx eax, byte [r9 + rdx]
0x0000c472      8d48d0         lea ecx, [rax - 0x30]
0x0000c475      80f909         cmp cl, 9
0x0000c478      0f86a2000000   jbe 0xc520
0x0000c47e      41b8ffffffff   mov r8d, 0xffffffff                     ; -1
0x0000c484      0f1f4000       nop dword [rax]
0x0000c488      0fb6f8         movzx edi, al
0x0000c48b      8d4fbf         lea ecx, [rdi - 0x41]
0x0000c48e      83f939         cmp ecx, 0x39
0x0000c491      770f           ja 0xc4a2
0x0000c493      4c89d5         mov rbp, r10
0x0000c496      48d3e5         shl rbp, cl
0x0000c499      4c85fd         test rbp, r15
0x0000c49c      0f85f0feffff   jne 0xc392
0x0000c4a2      81c700010000   add edi, 0x100
0x0000c4a8      3c7e           cmp al, 0x7e
0x0000c4aa      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000c4af      0f44f8         cmove edi, eax
0x0000c4b2      e9dbfeffff     jmp 0xc392
0x0000c4b7      660f1f840000.  nop word [rax + rax]
0x0000c4c0      4c8b6c2418     mov r13, qword [rsp + 0x18]
0x0000c4c5      4929dd         sub r13, rbx
0x0000c4c8      4885c0         test rax, rax
0x0000c4cb      0f85eefdffff   jne 0xc2bf
0x0000c4d1      4c8b742420     mov r14, qword [rsp + 0x20]
0x0000c4d6      4929ee         sub r14, rbp
0x0000c4d9      e9f0fdffff     jmp 0xc2ce                              ; ../coreutils-8.31/lib/filevercmp.c:-734
0x0000c4de      6690           nop
0x0000c4e0      4531c0         xor r8d, r8d
0x0000c4e3      e992feffff     jmp 0xc37a
0x0000c4e8      0f1f84000000.  nop dword [rax + rax]
0x0000c4f0      0fb60c13       movzx ecx, byte [rbx + rdx]
0x0000c4f4      488b2c24       mov rbp, qword [rsp]
0x0000c4f8      80f930         cmp cl, 0x30
0x0000c4fb      0f85b8feffff   jne 0xc3b9
0x0000c501      0f1f80000000.  nop dword [rax]
0x0000c508      4883c201       add rdx, 1
0x0000c50c      0fb60c13       movzx ecx, byte [rbx + rdx]
0x0000c510      80f930         cmp cl, 0x30
0x0000c513      74f3           je 0xc508
0x0000c515      e99ffeffff     jmp 0xc3b9
0x0000c51a      660f1f440000   nop word [rax + rax]
0x0000c520      31ff           xor edi, edi
0x0000c522      41b8ffffffff   mov r8d, 0xffffffff                     ; -1
0x0000c528      4129f8         sub r8d, edi
0x0000c52b      0f85effeffff   jne 0xc420
0x0000c531      e9f2feffff     jmp 0xc428
0x0000c536      662e0f1f8400.  nop word cs:[rax + rax]
0x0000c540      41b801000000   mov r8d, 1
0x0000c546      e9d5feffff     jmp 0xc420
0x0000c54b      0f1f440000     nop dword [rax + rax]
0x0000c550      4883c301       add rbx, 1
0x0000c554      4883c501       add rbp, 1
0x0000c558      4180f82e       cmp r8b, 0x2e
0x0000c55c      0f8427fdffff   je 0xc289
0x0000c562      660f1f440000   nop word [rax + rax]
0x0000c568      41bcffffffff   mov r12d, 0xffffffff                    ; -1
0x0000c56e      e9b5feffff     jmp 0xc428
0x0000c573      4c3b742408     cmp r14, qword [rsp + 8]
0x0000c578      0f841dfeffff   je 0xc39b
0x0000c57e      430fb60429     movzx eax, byte [r9 + r13]
0x0000c583      8d48d0         lea ecx, [rax - 0x30]
0x0000c586      80f909         cmp cl, 9
0x0000c589      0f860cfeffff   jbe 0xc39b
0x0000c58f      4531c0         xor r8d, r8d
0x0000c592      e9f1feffff     jmp 0xc488
0x0000c597      660f1f840000.  nop word [rax + rax]
0x0000c5a0      4c89ea         mov rdx, r13
0x0000c5a3      4889ee         mov rsi, rbp
0x0000c5a6      4889df         mov rdi, rbx
0x0000c5a9      e88265ffff     call sym.imp.strncmp
0x0000c5ae      85c0           test eax, eax
0x0000c5b0      0f8518fdffff   jne 0xc2ce
0x0000c5b6      4c8b6c2418     mov r13, qword [rsp + 0x18]
0x0000c5bb      4929dd         sub r13, rbx
0x0000c5be      e90effffff     jmp 0xc4d1
0x0000c5c3      41b8ffffffff   mov r8d, 0xffffffff                     ; -1
0x0000c5c9      e952feffff     jmp 0xc420
0x0000c5ce      e8cd66ffff     call sym.imp.__stack_chk_fail
0x0000c5d3      4c8b742420     mov r14, qword [rsp + 0x20]
0x0000c5d8      4929ee         sub r14, rbp
0x0000c5db      e9e5fcffff     jmp 0xc2c5
;-- hard_locale:
0x0000c5e0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x0000c5e4      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x0000c5e6      e8a569ffff     call sym.imp.setlocale
0x0000c5eb      4889c2         mov rdx, rax
0x0000c5ee      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x0000c5f3      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x0000c5f6      741d           je 0xc615
0x0000c5f8      488d3d9e9300.  lea rdi, [0x0001599d]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x0000c5ff      b902000000     mov ecx, 2
0x0000c604      4889d6         mov rsi, rdx
0x0000c607      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c609      0f97c1         seta cl
0x0000c60c      80d900         sbb cl, 0
0x0000c60f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x0000c611      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x0000c613      750b           jne 0xc620
0x0000c615      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000c619      c3             ret
0x0000c61a      660f1f440000   nop word [rax + rax]
0x0000c620      488d3d9c9400.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x15ac3 ; "POSIX"
0x0000c627      b906000000     mov ecx, 6
0x0000c62c      4889d6         mov rsi, rdx
0x0000c62f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c631      0f97c0         seta al
0x0000c634      1c00           sbb al, 0
0x0000c636      84c0           test al, al
0x0000c638      0f95c0         setne al
0x0000c63b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000c63f      c3             ret
;-- next_prime:
0x0000c640      4883ff0a       cmp rdi, 0xa
0x0000c644      b80a000000     mov eax, 0xa
0x0000c649      49b9abaaaaaa.  movabs r9, 0xaaaaaaaaaaaaaaab
0x0000c653      480f42f8       cmovb rdi, rax
0x0000c657      4883cf01       or rdi, 1                               ; ../coreutils-8.31/lib/hash.c:470
0x0000c65b      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/hash.c:472
0x0000c65f      746e           je 0xc6cf
0x0000c661      0f1f80000000.  nop dword [rax]
0x0000c668      4889f8         mov rax, rdi
0x0000c66b      4889f9         mov rcx, rdi
0x0000c66e      49f7e1         mul r9
0x0000c671      4889d0         mov rax, rdx
0x0000c674      48d1e8         shr rax, 1
0x0000c677      488d0440       lea rax, [rax + rax*2]
0x0000c67b      4829c1         sub rcx, rax
0x0000c67e      4883ff09       cmp rdi, 9                              ; ../coreutils-8.31/lib/hash.c:449
0x0000c682      4889c8         mov rax, rcx
0x0000c685      7639           jbe 0xc6c0
0x0000c687      4885c9         test rcx, rcx
0x0000c68a      7439           je 0xc6c5
0x0000c68c      41b810000000   mov r8d, 0x10
0x0000c692      be09000000     mov esi, 9                              ; ../coreutils-8.31/lib/hash.c:447
0x0000c697      b903000000     mov ecx, 3                              ; ../coreutils-8.31/lib/hash.c:446
0x0000c69c      eb0b           jmp 0xc6a9
0x0000c69e      6690           nop
0x0000c6a0      4983c008       add r8, 8
0x0000c6a4      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:449
0x0000c6a7      741c           je 0xc6c5
0x0000c6a9      4883c102       add rcx, 2                              ; ../coreutils-8.31/lib/hash.c:453
0x0000c6ad      31d2           xor edx, edx
0x0000c6af      4889f8         mov rax, rdi
0x0000c6b2      48f7f1         div rcx
0x0000c6b5      4c01c6         add rsi, r8                             ; ../coreutils-8.31/lib/hash.c:452
0x0000c6b8      4839fe         cmp rsi, rdi                            ; ../coreutils-8.31/lib/hash.c:449
0x0000c6bb      4889d0         mov rax, rdx
0x0000c6be      72e0           jb 0xc6a0
0x0000c6c0      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:472
0x0000c6c3      750a           jne 0xc6cf
0x0000c6c5      4883c702       add rdi, 2                              ; ../coreutils-8.31/lib/hash.c:473
0x0000c6c9      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/hash.c:472
0x0000c6cd      7599           jne 0xc668
0x0000c6cf      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/hash.c:476
0x0000c6d2      c3             ret
0x0000c6d3      0f1f00         nop dword [rax]
0x0000c6d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- raw_hasher:
0x0000c6e0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/hash.c:487
0x0000c6e3      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/hash.c:494
0x0000c6e5      48c1c803       ror rax, 3                              ; ../coreutils-8.31/lib/bitrotate.h:87
0x0000c6e9      48f7f6         div rsi                                 ; ../coreutils-8.31/lib/hash.c:494
0x0000c6ec      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash.c:495
0x0000c6ef      c3             ret
;-- raw_comparator:
0x0000c6f0      4839f7         cmp rdi, rsi                            ; ../coreutils-8.31/lib/hash.c:500
0x0000c6f3      0f94c0         sete al
0x0000c6f6      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:502
0x0000c6f7      660f1f840000.  nop word [rax + rax]
;-- safe_hasher:
0x0000c700      53             push rbx                                ; ../coreutils-8.31/lib/hash.c:250
0x0000c701      4889fb         mov rbx, rdi
0x0000c704      4889f7         mov rdi, rsi
0x0000c707      488b7310       mov rsi, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/hash.c:251
0x0000c70b      ff5330         call qword [rbx + 0x30]
0x0000c70e      48394310       cmp qword [rbx + 0x10], rax             ; ../coreutils-8.31/lib/hash.c:252
0x0000c712      7609           jbe 0xc71d
0x0000c714      48c1e004       shl rax, 4                              ; ../coreutils-8.31/lib/hash.c:254
0x0000c718      480303         add rax, qword [rbx]
0x0000c71b      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash.c:255
0x0000c71c      c3             ret
0x0000c71d      e8de63ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/hash.c:253
0x0000c722      0f1f4000       nop dword [rax]
0x0000c726      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_find_entry:
0x0000c730      4156           push r14                                ; ../coreutils-8.31/lib/hash.c:792
0x0000c732      4155           push r13
0x0000c734      4989d6         mov r14, rdx
0x0000c737      4154           push r12
0x0000c739      55             push rbp
0x0000c73a      4989fc         mov r12, rdi
0x0000c73d      53             push rbx
0x0000c73e      4889f5         mov rbp, rsi
0x0000c741      4189cd         mov r13d, ecx
0x0000c744      e8b7ffffff     call sym.safe_hasher                    ; ../coreutils-8.31/lib/hash.c:793
0x0000c749      498906         mov qword [r14], rax                    ; ../coreutils-8.31/lib/hash.c:796
0x0000c74c      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:799
0x0000c74f      4885f6         test rsi, rsi
0x0000c752      0f84e8000000   je 0xc840
0x0000c758      4839ee         cmp rsi, rbp                            ; ../coreutils-8.31/lib/hash.c:803
0x0000c75b      4889c3         mov rbx, rax
0x0000c75e      0f848f000000   je 0xc7f3
0x0000c764      4889ef         mov rdi, rbp
0x0000c767      41ff542438     call qword [r12 + 0x38]
0x0000c76c      84c0           test al, al
0x0000c76e      0f857c000000   jne 0xc7f0
0x0000c774      488b4308       mov rax, qword [rbx + 8]                ; ../coreutils-8.31/lib/hash.c:828
0x0000c778      4885c0         test rax, rax
0x0000c77b      0f84bf000000   je 0xc840
0x0000c781      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:830
0x0000c784      4839f5         cmp rbp, rsi
0x0000c787      7520           jne 0xc7a9
0x0000c789      eb31           jmp 0xc7bc
0x0000c78b      0f1f440000     nop dword [rax + rax]
0x0000c790      488b5b08       mov rbx, qword [rbx + 8]                ; ../coreutils-8.31/lib/hash.c:828
0x0000c794      488b4308       mov rax, qword [rbx + 8]
0x0000c798      4885c0         test rax, rax
0x0000c79b      0f849f000000   je 0xc840
0x0000c7a1      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:830
0x0000c7a4      4839ee         cmp rsi, rbp
0x0000c7a7      7413           je 0xc7bc
0x0000c7a9      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/hash.c:831
0x0000c7ac      41ff542438     call qword [r12 + 0x38]
0x0000c7b1      84c0           test al, al
0x0000c7b3      74db           je 0xc790
0x0000c7b5      488b4308       mov rax, qword [rbx + 8]
0x0000c7b9      488b30         mov rsi, qword [rax]
0x0000c7bc      4584ed         test r13b, r13b                         ; ../coreutils-8.31/lib/hash.c:835
0x0000c7bf      741d           je 0xc7de
0x0000c7c1      488b5008       mov rdx, qword [rax + 8]                ; ../coreutils-8.31/lib/hash.c:841
0x0000c7c5      48895308       mov qword [rbx + 8], rdx
0x0000c7c9      48c700000000.  mov qword [rax], 0                      ; ../coreutils-8.31/lib/hash.c:778
0x0000c7d0      498b542448     mov rdx, qword [r12 + 0x48]             ; ../coreutils-8.31/lib/hash.c:779
0x0000c7d5      48895008       mov qword [rax + 8], rdx
0x0000c7d9      4989442448     mov qword [r12 + 0x48], rax             ; ../coreutils-8.31/lib/hash.c:780
0x0000c7de      5b             pop rbx
0x0000c7df      4889f0         mov rax, rsi
0x0000c7e2      5d             pop rbp
0x0000c7e3      415c           pop r12
0x0000c7e5      415d           pop r13
0x0000c7e7      415e           pop r14
0x0000c7e9      c3             ret
0x0000c7ea      660f1f440000   nop word [rax + rax]
0x0000c7f0      488b33         mov rsi, qword [rbx]
0x0000c7f3      4584ed         test r13b, r13b
0x0000c7f6      74e6           je 0xc7de
0x0000c7f8      488b4308       mov rax, qword [rbx + 8]
0x0000c7fc      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:672
0x0000c7ff      742f           je 0xc830
0x0000c801      f30f6f00       movdqu xmm0, xmmword [rax]
0x0000c805      0f1103         movups xmmword [rbx], xmm0
0x0000c808      48c700000000.  mov qword [rax], 0
0x0000c80f      498b542448     mov rdx, qword [r12 + 0x48]             ; ../coreutils-8.31/lib/hash.c:388
0x0000c814      48895008       mov qword [rax + 8], rdx
0x0000c818      4989442448     mov qword [r12 + 0x48], rax
0x0000c81d      4889f0         mov rax, rsi
0x0000c820      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash.c:398
0x0000c821      5d             pop rbp
0x0000c822      415c           pop r12
0x0000c824      415d           pop r13
0x0000c826      415e           pop r14
0x0000c828      c3             ret
0x0000c829      0f1f80000000.  nop dword [rax]
0x0000c830      48c703000000.  mov qword [rbx], 0
0x0000c837      eba5           jmp 0xc7de
0x0000c839      0f1f80000000.  nop dword [rax]
0x0000c840      31f6           xor esi, esi
0x0000c842      5b             pop rbx
0x0000c843      4889f0         mov rax, rsi
0x0000c846      5d             pop rbp
0x0000c847      415c           pop r12
0x0000c849      415d           pop r13                                 ; ../coreutils-8.31/lib/hash.c:401
0x0000c84b      415e           pop r14
0x0000c84d      c3             ret
0x0000c84e      6690           nop
;-- check_tuning.isra.0:
0x0000c850      488b17         mov rdx, qword [rdi]
0x0000c853      488d0de69200.  lea rcx, obj.default_tuning             ; 0x15b40
0x0000c85a      b801000000     mov eax, 1
0x0000c85f      4839ca         cmp rdx, rcx
0x0000c862      7461           je 0xc8c5
0x0000c864      f30f104208     movss xmm0, dword [rdx + 8]
0x0000c869      0f2e05e49200.  ucomiss xmm0, dword [0x00015b54]
0x0000c870      764e           jbe 0xc8c0
0x0000c872      f30f100dde92.  movss xmm1, dword [0x00015b58]          ; [0x15b58:4]=0x3f666666
0x0000c87a      0f2ec8         ucomiss xmm1, xmm0
0x0000c87d      7641           jbe 0xc8c0
0x0000c87f      f30f104a0c     movss xmm1, dword [rdx + 0xc]           ; ../coreutils-8.31/lib/hash.c:408
0x0000c884      0f2e0dd19200.  ucomiss xmm1, dword [0x00015b5c]
0x0000c88b      7633           jbe 0xc8c0
0x0000c88d      f30f100a       movss xmm1, dword [rdx]
0x0000c891      0f2e0dc89200.  ucomiss xmm1, dword [0x00015b60]
0x0000c898      7226           jb 0xc8c0
0x0000c89a      f30f580db292.  addss xmm1, dword [0x00015b54]          ; ../coreutils-8.31/lib/hash.c:737
0x0000c8a2      f30f105204     movss xmm2, dword [rdx + 4]
0x0000c8a7      0f2ed1         ucomiss xmm2, xmm1
0x0000c8aa      7614           jbe 0xc8c0
0x0000c8ac      f30f101db092.  movss xmm3, dword [0x00015b64]          ; [0x15b64:4]=0x3f800000
0x0000c8b4      0f2eda         ucomiss xmm3, xmm2                      ; ../coreutils-8.31/lib/hash.c:738
0x0000c8b7      7207           jb 0xc8c0
0x0000c8b9      0f2ec1         ucomiss xmm0, xmm1
0x0000c8bc      7707           ja 0xc8c5
0x0000c8be      6690           nop
0x0000c8c0      48890f         mov qword [rdi], rcx
0x0000c8c3      31c0           xor eax, eax
0x0000c8c5      f3c3           ret
0x0000c8c7      660f1f840000.  nop word [rax + rax]
;-- transfer_entries:
0x0000c8d0      4157           push r15
0x0000c8d2      4156           push r14
0x0000c8d4      4155           push r13                                ; ../coreutils-8.31/lib/hash.c:760
0x0000c8d6      4154           push r12
0x0000c8d8      55             push rbp                                ; ../coreutils-8.31/lib/hash.c:749
0x0000c8d9      53             push rbx
0x0000c8da      4883ec08       sub rsp, 8
0x0000c8de      4c8b26         mov r12, qword [rsi]
0x0000c8e1      4c3b6608       cmp r12, qword [rsi + 8]
0x0000c8e5      0f83dd000000   jae 0xc9c8
0x0000c8eb      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/hash.c:752
0x0000c8ee      4989f5         mov r13, rsi
0x0000c8f1      4189d6         mov r14d, edx
0x0000c8f4      0f1f4000       nop dword [rax]
0x0000c8f8      4d8b3c24       mov r15, qword [r12]
0x0000c8fc      4d85ff         test r15, r15
0x0000c8ff      0f84b5000000   je 0xc9ba
0x0000c905      498b5c2408     mov rbx, qword [r12 + 8]
0x0000c90a      4885db         test rbx, rbx
0x0000c90d      751d           jne 0xc92c
0x0000c90f      eb5a           jmp 0xc96b
0x0000c911      0f1f80000000.  nop dword [rax]
0x0000c918      488b4808       mov rcx, qword [rax + 8]
0x0000c91c      4885d2         test rdx, rdx
0x0000c91f      48894b08       mov qword [rbx + 8], rcx                ; ../coreutils-8.31/lib/bitrotate.h:557
0x0000c923      48895808       mov qword [rax + 8], rbx
0x0000c927      4889d3         mov rbx, rdx
0x0000c92a      743b           je 0xc967
0x0000c92c      4c8b3b         mov r15, qword [rbx]
0x0000c92f      4889ef         mov rdi, rbp
0x0000c932      4c89fe         mov rsi, r15
0x0000c935      e8c6fdffff     call sym.safe_hasher
0x0000c93a      48833800       cmp qword [rax], 0
0x0000c93e      488b5308       mov rdx, qword [rbx + 8]                ; ../coreutils-8.31/lib/bitrotate.h:329
0x0000c942      75d4           jne 0xc918
0x0000c944      4c8938         mov qword [rax], r15
0x0000c947      4883451801     add qword [rbp + 0x18], 1
0x0000c94c      4885d2         test rdx, rdx
0x0000c94f      48c703000000.  mov qword [rbx], 0
0x0000c956      488b4548       mov rax, qword [rbp + 0x48]
0x0000c95a      48894308       mov qword [rbx + 8], rax
0x0000c95e      48895d48       mov qword [rbp + 0x48], rbx             ; ../coreutils-8.31/lib/bitrotate.h:-285
0x0000c962      4889d3         mov rbx, rdx                            ; ../coreutils-8.31/lib/bitrotate.h:-283
0x0000c965      75c5           jne 0xc92c
0x0000c967      4d8b3c24       mov r15, qword [r12]
0x0000c96b      4584f6         test r14b, r14b
0x0000c96e      49c744240800.  mov qword [r12 + 8], 0                  ; ../coreutils-8.31/lib/bitrotate.h:-277
0x0000c977      7541           jne 0xc9ba
0x0000c979      4c89fe         mov rsi, r15
0x0000c97c      4889ef         mov rdi, rbp
0x0000c97f      e87cfdffff     call sym.safe_hasher
0x0000c984      48833800       cmp qword [rax], 0
0x0000c988      4889c3         mov rbx, rax
0x0000c98b      7453           je 0xc9e0
0x0000c98d      488b4548       mov rax, qword [rbp + 0x48]
0x0000c991      4885c0         test rax, rax
0x0000c994      745a           je 0xc9f0
0x0000c996      488b5008       mov rdx, qword [rax + 8]
0x0000c99a      48895548       mov qword [rbp + 0x48], rdx
0x0000c99e      488b5308       mov rdx, qword [rbx + 8]                ; ../coreutils-8.31/lib/bitrotate.h:-255
0x0000c9a2      4c8938         mov qword [rax], r15
0x0000c9a5      48895008       mov qword [rax + 8], rdx
0x0000c9a9      48894308       mov qword [rbx + 8], rax
0x0000c9ad      49c704240000.  mov qword [r12], 0                      ; ../coreutils-8.31/lib/bitrotate.h:-250
0x0000c9b5      49836d1801     sub qword [r13 + 0x18], 1
0x0000c9ba      4983c410       add r12, 0x10                           ; ../coreutils-8.31/lib/bitrotate.h:-249
0x0000c9be      4d396508       cmp qword [r13 + 8], r12                ; ../coreutils-8.31/lib/bitrotate.h:-250
0x0000c9c2      0f8730ffffff   ja 0xc8f8
0x0000c9c8      4883c408       add rsp, 8
0x0000c9cc      b801000000     mov eax, 1
0x0000c9d1      5b             pop rbx
0x0000c9d2      5d             pop rbp
0x0000c9d3      415c           pop r12
0x0000c9d5      415d           pop r13                                 ; ../coreutils-8.31/lib/bitrotate.h:-241
0x0000c9d7      415e           pop r14
0x0000c9d9      415f           pop r15
0x0000c9db      c3             ret
0x0000c9dc      0f1f4000       nop dword [rax]
0x0000c9e0      4c8938         mov qword [rax], r15
0x0000c9e3      4883451801     add qword [rbp + 0x18], 1
0x0000c9e8      ebc3           jmp 0xc9ad
0x0000c9ea      660f1f440000   nop word [rax + rax]
0x0000c9f0      bf10000000     mov edi, 0x10
0x0000c9f5      e8ce67ffff     call 0x31c8
0x0000c9fa      4885c0         test rax, rax
0x0000c9fd      759f           jne 0xc99e
0x0000c9ff      4883c408       add rsp, 8
0x0000ca03      31c0           xor eax, eax
0x0000ca05      5b             pop rbx
0x0000ca06      5d             pop rbp
0x0000ca07      415c           pop r12
0x0000ca09      415d           pop r13
0x0000ca0b      415e           pop r14
0x0000ca0d      415f           pop r15
0x0000ca0f      c3             ret
;-- hash_get_n_buckets:
0x0000ca10      488b4710       mov rax, qword [rdi + 0x10]
0x0000ca14      c3             ret
0x0000ca15      90             nop
0x0000ca16      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/bitrotate.h:-218
;-- hash_get_n_buckets_used:
0x0000ca20      488b4718       mov rax, qword [rdi + 0x18]
0x0000ca24      c3             ret                                     ; ../coreutils-8.31/lib/bitrotate.h:-210
0x0000ca25      90             nop
0x0000ca26      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/bitrotate.h:-213
;-- hash_get_n_entries:
0x0000ca30      488b4720       mov rax, qword [rdi + 0x20]
0x0000ca34      c3             ret
0x0000ca35      90             nop                                     ; ../coreutils-8.31/lib/bitrotate.h:-209
0x0000ca36      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_max_bucket_length:
0x0000ca40      488b37         mov rsi, qword [rdi]
0x0000ca43      488b7f08       mov rdi, qword [rdi + 8]
0x0000ca47      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/bitrotate.h:-259
0x0000ca49      4839fe         cmp rsi, rdi                            ; ../coreutils-8.31/lib/bitrotate.h:-205
0x0000ca4c      7339           jae 0xca87
0x0000ca4e      6690           nop
0x0000ca50      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/bitrotate.h:-268
0x0000ca54      7426           je 0xca7c                               ; ../coreutils-8.31/lib/bitrotate.h:-284
0x0000ca56      488b5608       mov rdx, qword [rsi + 8]
0x0000ca5a      b901000000     mov ecx, 1
0x0000ca5f      4885d2         test rdx, rdx
0x0000ca62      7411           je 0xca75
0x0000ca64      0f1f4000       nop dword [rax]
0x0000ca68      488b5208       mov rdx, qword [rdx + 8]
0x0000ca6c      4883c101       add rcx, 1
0x0000ca70      4885d2         test rdx, rdx
0x0000ca73      75f3           jne 0xca68
0x0000ca75      4839c8         cmp rax, rcx
0x0000ca78      480f42c1       cmovb rax, rcx                          ; ../coreutils-8.31/lib/bitrotate.h:-252
0x0000ca7c      4883c610       add rsi, 0x10
0x0000ca80      4839fe         cmp rsi, rdi
0x0000ca83      72cb           jb 0xca50
0x0000ca85      f3c3           ret
0x0000ca87      f3c3           ret
0x0000ca89      0f1f80000000.  nop dword [rax]
;-- hash_table_ok:
0x0000ca90      488b0f         mov rcx, qword [rdi]
0x0000ca93      4c8b4708       mov r8, qword [rdi + 8]
0x0000ca97      31d2           xor edx, edx
0x0000ca99      31f6           xor esi, esi
0x0000ca9b      4c39c1         cmp rcx, r8
0x0000ca9e      7336           jae 0xcad6
0x0000caa0      48833900       cmp qword [rcx], 0
0x0000caa4      7427           je 0xcacd
0x0000caa6      488b4108       mov rax, qword [rcx + 8]
0x0000caaa      4883c601       add rsi, 1
0x0000caae      4883c201       add rdx, 1
0x0000cab2      4885c0         test rax, rax
0x0000cab5      7416           je 0xcacd
0x0000cab7      660f1f840000.  nop word [rax + rax]
0x0000cac0      488b4008       mov rax, qword [rax + 8]
0x0000cac4      4883c201       add rdx, 1
0x0000cac8      4885c0         test rax, rax
0x0000cacb      75f3           jne 0xcac0
0x0000cacd      4883c110       add rcx, 0x10
0x0000cad1      4c39c1         cmp rcx, r8
0x0000cad4      72ca           jb 0xcaa0
0x0000cad6      31c0           xor eax, eax
0x0000cad8      48397718       cmp qword [rdi + 0x18], rsi
0x0000cadc      7402           je 0xcae0
0x0000cade      f3c3           ret                                     ; ../coreutils-8.31/lib/hash.c:-195
0x0000cae0      48395720       cmp qword [rdi + 0x20], rdx
0x0000cae4      0f94c0         sete al
0x0000cae7      c3             ret
0x0000cae8      0f1f84000000.  nop dword [rax + rax]
;-- hash_print_statistics:
0x0000caf0      4155           push r13
0x0000caf2      4154           push r12
0x0000caf4      4989f4         mov r12, rsi
0x0000caf7      55             push rbp
0x0000caf8      53             push rbx
0x0000caf9      31db           xor ebx, ebx
0x0000cafb      4883ec08       sub rsp, 8
0x0000caff      488b37         mov rsi, qword [rdi]
0x0000cb02      488b4f20       mov rcx, qword [rdi + 0x20]
0x0000cb06      488b6f10       mov rbp, qword [rdi + 0x10]
0x0000cb0a      4c8b6f18       mov r13, qword [rdi + 0x18]
0x0000cb0e      488b7f08       mov rdi, qword [rdi + 8]
0x0000cb12      4839fe         cmp rsi, rdi
0x0000cb15      733e           jae 0xcb55
0x0000cb17      660f1f840000.  nop word [rax + rax]
0x0000cb20      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/hash.c:-192
0x0000cb24      7426           je 0xcb4c
0x0000cb26      488b4608       mov rax, qword [rsi + 8]                ; stdio2.h:-339
0x0000cb2a      ba01000000     mov edx, 1
0x0000cb2f      4885c0         test rax, rax
0x0000cb32      7411           je 0xcb45
0x0000cb34      0f1f4000       nop dword [rax]
0x0000cb38      488b4008       mov rax, qword [rax + 8]
0x0000cb3c      4883c201       add rdx, 1
0x0000cb40      4885c0         test rax, rax
0x0000cb43      75f3           jne 0xcb38
0x0000cb45      4839d3         cmp rbx, rdx
0x0000cb48      480f42da       cmovb rbx, rdx
0x0000cb4c      4883c610       add rsi, 0x10
0x0000cb50      4839fe         cmp rsi, rdi
0x0000cb53      72cb           jb 0xcb20
0x0000cb55      488d156d8f00.  lea rdx, str.entries:__________lu       ; 0x15ac9 ; "# entries:         %lu\n"
0x0000cb5c      be01000000     mov esi, 1
0x0000cb61      4c89e7         mov rdi, r12
0x0000cb64      31c0           xor eax, eax
0x0000cb66      e89565ffff     call sym.imp.__fprintf_chk
0x0000cb6b      488d156f8f00.  lea rdx, str.buckets:__________lu       ; 0x15ae1 ; "# buckets:         %lu\n"
0x0000cb72      31c0           xor eax, eax
0x0000cb74      4889e9         mov rcx, rbp
0x0000cb77      be01000000     mov esi, 1
0x0000cb7c      4c89e7         mov rdi, r12
0x0000cb7f      e87c65ffff     call sym.imp.__fprintf_chk
0x0000cb84      4d85ed         test r13, r13
0x0000cb87      7867           js 0xcbf0
0x0000cb89      660fefc0       pxor xmm0, xmm0
0x0000cb8d      4885ed         test rbp, rbp
0x0000cb90      f2490f2ac5     cvtsi2sd xmm0, r13
0x0000cb95      f20f5905338e.  mulsd xmm0, qword [0x000159d0]          ; ../coreutils-8.31/lib/hash.c:-174
0x0000cb9d      787a           js 0xcc19                               ; ../coreutils-8.31/lib/hash.c:-170
0x0000cb9f      660fefc9       pxor xmm1, xmm1
0x0000cba3      f2480f2acd     cvtsi2sd xmm1, rbp
0x0000cba8      f20f5ec1       divsd xmm0, xmm1
0x0000cbac      488d15658f00.  lea rdx, str.buckets_used:_____lu___.2f ; 0x15b18 ; "# buckets used:    %lu (%.2f%%)\n"
0x0000cbb3      4c89e9         mov rcx, r13
0x0000cbb6      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/hash.c:-166
0x0000cbb9      be01000000     mov esi, 1
0x0000cbbe      b801000000     mov eax, 1
0x0000cbc3      e83865ffff     call sym.imp.__fprintf_chk
0x0000cbc8      4883c408       add rsp, 8
0x0000cbcc      4889d9         mov rcx, rbx
0x0000cbcf      4c89e7         mov rdi, r12
0x0000cbd2      5b             pop rbx
0x0000cbd3      5d             pop rbp
0x0000cbd4      415c           pop r12
0x0000cbd6      415d           pop r13
0x0000cbd8      488d151a8f00.  lea rdx, str.max_bucket_length:__lu     ; 0x15af9 ; "max bucket length: %lu\n"
0x0000cbdf      be01000000     mov esi, 1
0x0000cbe4      31c0           xor eax, eax
0x0000cbe6      e91565ffff     jmp sym.imp.__fprintf_chk
0x0000cbeb      0f1f440000     nop dword [rax + rax]
0x0000cbf0      4c89e8         mov rax, r13
0x0000cbf3      4c89ea         mov rdx, r13
0x0000cbf6      660fefc0       pxor xmm0, xmm0
0x0000cbfa      48d1e8         shr rax, 1
0x0000cbfd      83e201         and edx, 1
0x0000cc00      4809d0         or rax, rdx
0x0000cc03      4885ed         test rbp, rbp
0x0000cc06      f2480f2ac0     cvtsi2sd xmm0, rax
0x0000cc0b      f20f58c0       addsd xmm0, xmm0
0x0000cc0f      f20f5905b98d.  mulsd xmm0, qword [0x000159d0]
0x0000cc17      7986           jns 0xcb9f                              ; ../coreutils-8.31/lib/hash.c:-138
0x0000cc19      4889e8         mov rax, rbp
0x0000cc1c      660fefc9       pxor xmm1, xmm1
0x0000cc20      48d1e8         shr rax, 1
0x0000cc23      83e501         and ebp, 1                              ; ../coreutils-8.31/lib/hash.c:-136
0x0000cc26      4809e8         or rax, rbp                             ; ../coreutils-8.31/lib/hash.c:-147
0x0000cc29      f2480f2ac8     cvtsi2sd xmm1, rax
0x0000cc2e      f20f58c9       addsd xmm1, xmm1
0x0000cc32      e971ffffff     jmp 0xcba8
0x0000cc37      660f1f840000.  nop word [rax + rax]
;-- hash_lookup:
0x0000cc40      4154           push r12
0x0000cc42      55             push rbp
0x0000cc43      4989fc         mov r12, rdi
0x0000cc46      53             push rbx
0x0000cc47      4889f5         mov rbp, rsi
0x0000cc4a      e8b1faffff     call sym.safe_hasher                    ; ../coreutils-8.31/lib/hash.c:-127
0x0000cc4f      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:-123
0x0000cc52      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/hash.c:-127
0x0000cc55      7426           je 0xcc7d                               ; ../coreutils-8.31/lib/hash.c:-120
0x0000cc57      4889c3         mov rbx, rax
0x0000cc5a      eb07           jmp 0xcc63
0x0000cc5c      0f1f4000       nop dword [rax]
0x0000cc60      488b33         mov rsi, qword [rbx]
0x0000cc63      4839ee         cmp rsi, rbp
0x0000cc66      7417           je 0xcc7f                               ; ../coreutils-8.31/lib/hash.c:-116
0x0000cc68      4889ef         mov rdi, rbp
0x0000cc6b      41ff542438     call qword [r12 + 0x38]                 ; ../coreutils-8.31/lib/hash.c:-120
0x0000cc70      84c0           test al, al
0x0000cc72      751c           jne 0xcc90
0x0000cc74      488b5b08       mov rbx, qword [rbx + 8]
0x0000cc78      4885db         test rbx, rbx
0x0000cc7b      75e3           jne 0xcc60
0x0000cc7d      31f6           xor esi, esi
0x0000cc7f      5b             pop rbx
0x0000cc80      4889f0         mov rax, rsi
0x0000cc83      5d             pop rbp
0x0000cc84      415c           pop r12
0x0000cc86      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:-112
0x0000cc87      660f1f840000.  nop word [rax + rax]
0x0000cc90      488b33         mov rsi, qword [rbx]
0x0000cc93      5b             pop rbx
0x0000cc94      5d             pop rbp
0x0000cc95      4889f0         mov rax, rsi
0x0000cc98      415c           pop r12
0x0000cc9a      c3             ret
0x0000cc9b      0f1f440000     nop dword [rax + rax]
;-- hash_get_first:
0x0000cca0      48837f2000     cmp qword [rdi + 0x20], 0
0x0000cca5      742c           je 0xccd3
0x0000cca7      488b17         mov rdx, qword [rdi]
0x0000ccaa      488b4f08       mov rcx, qword [rdi + 8]
0x0000ccae      4839ca         cmp rdx, rcx
0x0000ccb1      7325           jae 0xccd8
0x0000ccb3      488b02         mov rax, qword [rdx]
0x0000ccb6      4885c0         test rax, rax
0x0000ccb9      751b           jne 0xccd6
0x0000ccbb      0f1f440000     nop dword [rax + rax]
0x0000ccc0      4883c210       add rdx, 0x10
0x0000ccc4      4839ca         cmp rdx, rcx
0x0000ccc7      730f           jae 0xccd8                              ; ../coreutils-8.31/lib/hash.c:-97
0x0000ccc9      488b02         mov rax, qword [rdx]
0x0000cccc      4885c0         test rax, rax
0x0000cccf      74ef           je 0xccc0
0x0000ccd1      f3c3           ret
0x0000ccd3      31c0           xor eax, eax
0x0000ccd5      c3             ret
0x0000ccd6      f3c3           ret
0x0000ccd8      4883ec08       sub rsp, 8
0x0000ccdc      e81f5effff     call sym.imp.abort
0x0000cce1      0f1f440000     nop dword [rax + rax]
0x0000cce6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_next:
0x0000ccf0      55             push rbp
0x0000ccf1      53             push rbx
0x0000ccf2      4889fd         mov rbp, rdi
0x0000ccf5      4889f3         mov rbx, rsi
0x0000ccf8      4883ec08       sub rsp, 8
0x0000ccfc      e8fff9ffff     call sym.safe_hasher
0x0000cd01      4889c2         mov rdx, rax
0x0000cd04      4889c1         mov rcx, rax
0x0000cd07      488b02         mov rax, qword [rdx]
0x0000cd0a      488b5208       mov rdx, qword [rdx + 8]
0x0000cd0e      4839d8         cmp rax, rbx
0x0000cd11      7416           je 0xcd29
0x0000cd13      0f1f440000     nop dword [rax + rax]
0x0000cd18      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:-79
0x0000cd1b      7411           je 0xcd2e
0x0000cd1d      488b02         mov rax, qword [rdx]
0x0000cd20      488b5208       mov rdx, qword [rdx + 8]                ; ../coreutils-8.31/lib/hash.c:-97
0x0000cd24      4839d8         cmp rax, rbx
0x0000cd27      75ef           jne 0xcd18
0x0000cd29      4885d2         test rdx, rdx
0x0000cd2c      752a           jne 0xcd58
0x0000cd2e      488b5508       mov rdx, qword [rbp + 8]                ; ../coreutils-8.31/lib/hash.c:-66
0x0000cd32      eb0c           jmp 0xcd40
0x0000cd34      0f1f4000       nop dword [rax]
0x0000cd38      488b01         mov rax, qword [rcx]
0x0000cd3b      4885c0         test rax, rax
0x0000cd3e      750b           jne 0xcd4b
0x0000cd40      4883c110       add rcx, 0x10
0x0000cd44      4839ca         cmp rdx, rcx
0x0000cd47      77ef           ja 0xcd38
0x0000cd49      31c0           xor eax, eax
0x0000cd4b      4883c408       add rsp, 8
0x0000cd4f      5b             pop rbx
0x0000cd50      5d             pop rbp                                 ; ../coreutils-8.31/lib/hash.c:-59
0x0000cd51      c3             ret
0x0000cd52      660f1f440000   nop word [rax + rax]
0x0000cd58      488b02         mov rax, qword [rdx]
0x0000cd5b      4883c408       add rsp, 8
0x0000cd5f      5b             pop rbx
0x0000cd60      5d             pop rbp
0x0000cd61      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:-55
0x0000cd62      0f1f4000       nop dword [rax]
0x0000cd66      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_entries:
0x0000cd70      4c8b0f         mov r9, qword [rdi]
0x0000cd73      4c394f08       cmp qword [rdi + 8], r9                 ; ../coreutils-8.31/lib/hash.c:-57
0x0000cd77      7659           jbe 0xcdd2
0x0000cd79      4531c0         xor r8d, r8d
0x0000cd7c      498b09         mov rcx, qword [r9]
0x0000cd7f      4885c9         test rcx, rcx
0x0000cd82      7439           je 0xcdbd                               ; ../coreutils-8.31/lib/hash.c:-47
0x0000cd84      4c39c2         cmp rdx, r8
0x0000cd87      763e           jbe 0xcdc7
0x0000cd89      4a890cc6       mov qword [rsi + r8*8], rcx
0x0000cd8d      498b4908       mov rcx, qword [r9 + 8]
0x0000cd91      498d4001       lea rax, [r8 + 1]
0x0000cd95      4885c9         test rcx, rcx
0x0000cd98      7420           je 0xcdba
0x0000cd9a      660f1f440000   nop word [rax + rax]
0x0000cda0      4839c2         cmp rdx, rax
0x0000cda3      742b           je 0xcdd0                               ; ../coreutils-8.31/lib/hash.c:-3
0x0000cda5      4c8b01         mov r8, qword [rcx]
0x0000cda8      4883c001       add rax, 1
0x0000cdac      4c8944c6f8     mov qword [rsi + rax*8 - 8], r8
0x0000cdb1      488b4908       mov rcx, qword [rcx + 8]
0x0000cdb5      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/hash.c:-2
0x0000cdb8      75e6           jne 0xcda0
0x0000cdba      4989c0         mov r8, rax
0x0000cdbd      4983c110       add r9, 0x10
0x0000cdc1      4c394f08       cmp qword [rdi + 8], r9                 ; ../coreutils-8.31/lib/hash.c:-3
0x0000cdc5      77b5           ja 0xcd7c
0x0000cdc7      4c89c0         mov rax, r8
0x0000cdca      c3             ret
0x0000cdcb      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/hash.c:0
0x0000cdd0      f3c3           ret
0x0000cdd2      31c0           xor eax, eax
0x0000cdd4      c3             ret
0x0000cdd5      90             nop
0x0000cdd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_do_for_each:
0x0000cde0      4157           push r15
0x0000cde2      4156           push r14
0x0000cde4      4155           push r13
0x0000cde6      4154           push r12
0x0000cde8      55             push rbp
0x0000cde9      53             push rbx
0x0000cdea      4883ec08       sub rsp, 8
0x0000cdee      4c8b37         mov r14, qword [rdi]
0x0000cdf1      4c397708       cmp qword [rdi + 8], r14
0x0000cdf5      764f           jbe 0xce46
0x0000cdf7      4989d5         mov r13, rdx
0x0000cdfa      4989f4         mov r12, rsi
0x0000cdfd      4989ff         mov r15, rdi                            ; ../coreutils-8.31/lib/hash.c:46
0x0000ce00      31ed           xor ebp, ebp
0x0000ce02      498b3e         mov rdi, qword [r14]
0x0000ce05      4885ff         test rdi, rdi
0x0000ce08      7420           je 0xce2a
0x0000ce0a      4c89f3         mov rbx, r14
0x0000ce0d      eb04           jmp 0xce13
0x0000ce0f      90             nop
0x0000ce10      488b3b         mov rdi, qword [rbx]
0x0000ce13      4c89ee         mov rsi, r13                            ; ../coreutils-8.31/lib/hash.c:37
0x0000ce16      41ffd4         call r12
0x0000ce19      84c0           test al, al
0x0000ce1b      7417           je 0xce34
0x0000ce1d      488b5b08       mov rbx, qword [rbx + 8]
0x0000ce21      4883c501       add rbp, 1
0x0000ce25      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/hash.c:33
0x0000ce28      75e6           jne 0xce10
0x0000ce2a      4983c610       add r14, 0x10
0x0000ce2e      4d397708       cmp qword [r15 + 8], r14
0x0000ce32      77ce           ja 0xce02
0x0000ce34      4883c408       add rsp, 8
0x0000ce38      4889e8         mov rax, rbp
0x0000ce3b      5b             pop rbx
0x0000ce3c      5d             pop rbp                                 ; ../coreutils-8.31/lib/hash.c:38
0x0000ce3d      415c           pop r12
0x0000ce3f      415d           pop r13                                 ; ../coreutils-8.31/lib/hash.c:37
0x0000ce41      415e           pop r14
0x0000ce43      415f           pop r15
0x0000ce45      c3             ret
0x0000ce46      31ed           xor ebp, ebp
0x0000ce48      ebea           jmp 0xce34                              ; ../coreutils-8.31/lib/hash.c:41
0x0000ce4a      660f1f440000   nop word [rax + rax]
;-- hash_string:
0x0000ce50      0fb60f         movzx ecx, byte [rdi]
0x0000ce53      31d2           xor edx, edx
0x0000ce55      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hash.c:43
0x0000ce57      7424           je 0xce7d
0x0000ce59      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/hash.c:44
0x0000ce60      4889d0         mov rax, rdx
0x0000ce63      4883c701       add rdi, 1
0x0000ce67      48c1e005       shl rax, 5
0x0000ce6b      4829d0         sub rax, rdx
0x0000ce6e      31d2           xor edx, edx
0x0000ce70      4801c8         add rax, rcx
0x0000ce73      0fb60f         movzx ecx, byte [rdi]
0x0000ce76      48f7f6         div rsi
0x0000ce79      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hash.c:-14
0x0000ce7b      75e3           jne 0xce60
0x0000ce7d      4889d0         mov rax, rdx
0x0000ce80      c3             ret
0x0000ce81      0f1f440000     nop dword [rax + rax]
0x0000ce86      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_reset_tuning:
0x0000ce90      48b800000000.  movabs rax, 0x3f80000000000000          ; 4575657221408423936
0x0000ce9a      c6471000       mov byte [rdi + 0x10], 0                ; ../coreutils-8.31/lib/hash.c:-70
0x0000ce9e      488907         mov qword [rdi], rax
0x0000cea1      48b8cdcc4c3f.  movabs rax, 0x3fb4fdf43f4ccccd
0x0000ceab      48894708       mov qword [rdi + 8], rax                ; ../coreutils-8.31/lib/hash.c:-65
0x0000ceaf      c3             ret
;-- hash_initialize:
0x0000ceb0      4157           push r15
0x0000ceb2      4156           push r14
0x0000ceb4      488d0525f8ff.  lea rax, sym.raw_hasher                 ; 0xc6e0 ; "H\x89\xf81\xd2H\xc1\xc8\x03H\xf7\xf6H\x89\xd0\xc3H9\xf7\x0f\x94\xc0\xc3f\x0f\x1f\x84"
0x0000cebb      4155           push r13
0x0000cebd      4154           push r12
0x0000cebf      4989d4         mov r12, rdx
0x0000cec2      55             push rbp                                ; ../coreutils-8.31/lib/hash.c:-61
0x0000cec3      53             push rbx
0x0000cec4      4989cd         mov r13, rcx
0x0000cec7      4889fd         mov rbp, rdi
0x0000ceca      bf50000000     mov edi, 0x50                           ; 'P'
0x0000cecf      4989f7         mov r15, rsi
0x0000ced2      4883ec08       sub rsp, 8
0x0000ced6      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:-52
0x0000ced9      4d89c6         mov r14, r8
0x0000cedc      4c0f44e0       cmove r12, rax
0x0000cee0      488d0509f8ff.  lea rax, sym.raw_comparator             ; 0xc6f0 ; "H9\xf7\x0f\x94\xc0\xc3f\x0f\x1f\x84"
0x0000cee7      4885c9         test rcx, rcx
0x0000ceea      4c0f44e8       cmove r13, rax
0x0000ceee      e8d562ffff     call 0x31c8
0x0000cef3      4885c0         test rax, rax
0x0000cef6      4889c3         mov rbx, rax
0x0000cef9      0f84ab000000   je 0xcfaa
0x0000ceff      4d85ff         test r15, r15
0x0000cf02      488d7828       lea rdi, [rax + 0x28]
0x0000cf06      0f84b4000000   je 0xcfc0
0x0000cf0c      4c897828       mov qword [rax + 0x28], r15
0x0000cf10      e83bf9ffff     call sym.check_tuning.isra.0
0x0000cf15      84c0           test al, al
0x0000cf17      0f8483000000   je 0xcfa0
0x0000cf1d      41807f1000     cmp byte [r15 + 0x10], 0
0x0000cf22      0f84f8000000   je 0xd020
0x0000cf28      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/hash.c:-145
0x0000cf2b      e810f7ffff     call sym.next_prime
0x0000cf30      ba08000000     mov edx, 8
0x0000cf35      4889c5         mov rbp, rax
0x0000cf38      31c9           xor ecx, ecx
0x0000cf3a      4889d0         mov rax, rdx
0x0000cf3d      48f7e5         mul rbp
0x0000cf40      0f8014010000   jo 0xd05a
0x0000cf46      4885c0         test rax, rax
0x0000cf49      7855           js 0xcfa0
0x0000cf4b      4885c9         test rcx, rcx
0x0000cf4e      7550           jne 0xcfa0
0x0000cf50      4885ed         test rbp, rbp
0x0000cf53      48896b10       mov qword [rbx + 0x10], rbp
0x0000cf57      7447           je 0xcfa0
0x0000cf59      be10000000     mov esi, 0x10
0x0000cf5e      4889ef         mov rdi, rbp
0x0000cf61      e8ba5effff     call sym.imp.calloc
0x0000cf66      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:-197
0x0000cf69      488903         mov qword [rbx], rax
0x0000cf6c      7432           je 0xcfa0
0x0000cf6e      48c1e504       shl rbp, 4
0x0000cf72      48c743180000.  mov qword [rbx + 0x18], 0
0x0000cf7a      48c743200000.  mov qword [rbx + 0x20], 0
0x0000cf82      4801c5         add rbp, rax
0x0000cf85      4c896330       mov qword [rbx + 0x30], r12
0x0000cf89      4c896b38       mov qword [rbx + 0x38], r13
0x0000cf8d      48896b08       mov qword [rbx + 8], rbp
0x0000cf91      4c897340       mov qword [rbx + 0x40], r14
0x0000cf95      48c743480000.  mov qword [rbx + 0x48], 0
0x0000cf9d      eb0b           jmp 0xcfaa
0x0000cf9f      90             nop
0x0000cfa0      4889df         mov rdi, rbx
0x0000cfa3      31db           xor ebx, ebx
0x0000cfa5      e81662ffff     call sym..plt.got
0x0000cfaa      4883c408       add rsp, 8
0x0000cfae      4889d8         mov rax, rbx
0x0000cfb1      5b             pop rbx
0x0000cfb2      5d             pop rbp
0x0000cfb3      415c           pop r12
0x0000cfb5      415d           pop r13
0x0000cfb7      415e           pop r14
0x0000cfb9      415f           pop r15
0x0000cfbb      c3             ret
0x0000cfbc      0f1f4000       nop dword [rax]
0x0000cfc0      488d05798b00.  lea rax, obj.default_tuning             ; 0x15b40
0x0000cfc7      48894328       mov qword [rbx + 0x28], rax             ; ../coreutils-8.31/lib/hash.c:-199
0x0000cfcb      e880f8ffff     call sym.check_tuning.isra.0
0x0000cfd0      84c0           test al, al
0x0000cfd2      f30f100d8e8b.  movss xmm1, dword [0x00015b68]          ; [0x15b68:4]=0x3f4ccccd
0x0000cfda      74c4           je 0xcfa0
0x0000cfdc      4885ed         test rbp, rbp
0x0000cfdf      784a           js 0xd02b
0x0000cfe1      660fefc0       pxor xmm0, xmm0                         ; ../coreutils-8.31/lib/hash.c:-168
0x0000cfe5      f3480f2ac5     cvtsi2ss xmm0, rbp
0x0000cfea      f30f5ec1       divss xmm0, xmm1
0x0000cfee      0f2e05778b00.  ucomiss xmm0, dword [0x00015b6c]
0x0000cff5      73a9           jae 0xcfa0
0x0000cff7      0f2e05728b00.  ucomiss xmm0, dword [0x00015b70]
0x0000cffe      7250           jb 0xd050
0x0000d000      f30f5c05688b.  subss xmm0, dword [0x00015b70]
0x0000d008      48b800000000.  movabs rax, 0x8000000000000000
0x0000d012      f3480f2ce8     cvttss2si rbp, xmm0
0x0000d017      4831c5         xor rbp, rax
0x0000d01a      e909ffffff     jmp 0xcf28
0x0000d01f      90             nop
0x0000d020      4885ed         test rbp, rbp
0x0000d023      f3410f104f08   movss xmm1, dword [r15 + 8]
0x0000d029      79b6           jns 0xcfe1                              ; ../coreutils-8.31/lib/hash.c:-146
0x0000d02b      4889e8         mov rax, rbp
0x0000d02e      660fefc0       pxor xmm0, xmm0                         ; ../coreutils-8.31/lib/hash.c:-147
0x0000d032      48d1e8         shr rax, 1
0x0000d035      83e501         and ebp, 1
0x0000d038      4809e8         or rax, rbp
0x0000d03b      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000d040      f30f58c0       addss xmm0, xmm0
0x0000d044      eba4           jmp 0xcfea
0x0000d046      662e0f1f8400.  nop word cs:[rax + rax]
0x0000d050      f3480f2ce8     cvttss2si rbp, xmm0
0x0000d055      e9cefeffff     jmp 0xcf28
0x0000d05a      b901000000     mov ecx, 1
0x0000d05f      e9e2feffff     jmp 0xcf46
0x0000d064      6690           nop
0x0000d066      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/hash.c:-130
;-- hash_clear:
0x0000d070      4154           push r12
0x0000d072      55             push rbp
0x0000d073      4889fd         mov rbp, rdi
0x0000d076      53             push rbx
0x0000d077      4c8b27         mov r12, qword [rdi]                    ; ../coreutils-8.31/lib/hash.c:-134
0x0000d07a      4c3b6708       cmp r12, qword [rdi + 8]
0x0000d07e      736b           jae 0xd0eb
0x0000d080      49833c2400     cmp qword [r12], 0
0x0000d085      745a           je 0xd0e1
0x0000d087      498b5c2408     mov rbx, qword [r12 + 8]
0x0000d08c      488b4540       mov rax, qword [rbp + 0x40]
0x0000d090      4885db         test rbx, rbx
0x0000d093      7430           je 0xd0c5
0x0000d095      0f1f00         nop dword [rax]
0x0000d098      4885c0         test rax, rax
0x0000d09b      7409           je 0xd0a6
0x0000d09d      488b3b         mov rdi, qword [rbx]
0x0000d0a0      ffd0           call rax
0x0000d0a2      488b4540       mov rax, qword [rbp + 0x40]
0x0000d0a6      488b5308       mov rdx, qword [rbx + 8]
0x0000d0aa      488b4d48       mov rcx, qword [rbp + 0x48]
0x0000d0ae      48c703000000.  mov qword [rbx], 0
0x0000d0b5      4885d2         test rdx, rdx
0x0000d0b8      48894b08       mov qword [rbx + 8], rcx
0x0000d0bc      48895d48       mov qword [rbp + 0x48], rbx
0x0000d0c0      4889d3         mov rbx, rdx
0x0000d0c3      75d3           jne 0xd098
0x0000d0c5      4885c0         test rax, rax
0x0000d0c8      7406           je 0xd0d0
0x0000d0ca      498b3c24       mov rdi, qword [r12]
0x0000d0ce      ffd0           call rax
0x0000d0d0      49c704240000.  mov qword [r12], 0
0x0000d0d8      49c744240800.  mov qword [r12 + 8], 0
0x0000d0e1      4983c410       add r12, 0x10
0x0000d0e5      4c396508       cmp qword [rbp + 8], r12                ; ../coreutils-8.31/lib/hash.c:-310
0x0000d0e9      7795           ja 0xd080
0x0000d0eb      48c745180000.  mov qword [rbp + 0x18], 0
0x0000d0f3      48c745200000.  mov qword [rbp + 0x20], 0
0x0000d0fb      5b             pop rbx
0x0000d0fc      5d             pop rbp
0x0000d0fd      415c           pop r12
0x0000d0ff      c3             ret
;-- hash_free:
0x0000d100      4154           push r12
0x0000d102      55             push rbp
0x0000d103      4989fc         mov r12, rdi
0x0000d106      53             push rbx                                ; ../coreutils-8.31/lib/hash.c:-307
0x0000d107      48837f4000     cmp qword [rdi + 0x40], 0
0x0000d10c      488b2f         mov rbp, qword [rdi]
0x0000d10f      488b4708       mov rax, qword [rdi + 8]
0x0000d113      744e           je 0xd163                               ; ../coreutils-8.31/lib/hash.c:-305
0x0000d115      48837f2000     cmp qword [rdi + 0x20], 0
0x0000d11a      7447           je 0xd163
0x0000d11c      4839c5         cmp rbp, rax
0x0000d11f      737b           jae 0xd19c
0x0000d121      0f1f80000000.  nop dword [rax]
0x0000d128      488b7d00       mov rdi, qword [rbp]
0x0000d12c      4885ff         test rdi, rdi
0x0000d12f      7425           je 0xd156
0x0000d131      4889eb         mov rbx, rbp
0x0000d134      eb0d           jmp 0xd143
0x0000d136      662e0f1f8400.  nop word cs:[rax + rax]
0x0000d140      488b3b         mov rdi, qword [rbx]
0x0000d143      41ff542440     call qword [r12 + 0x40]                 ; segment.PHDR
0x0000d148      488b5b08       mov rbx, qword [rbx + 8]
0x0000d14c      4885db         test rbx, rbx
0x0000d14f      75ef           jne 0xd140
0x0000d151      498b442408     mov rax, qword [r12 + 8]
0x0000d156      4883c510       add rbp, 0x10
0x0000d15a      4839e8         cmp rax, rbp
0x0000d15d      77c9           ja 0xd128
0x0000d15f      498b2c24       mov rbp, qword [r12]
0x0000d163      4839c5         cmp rbp, rax
0x0000d166      7334           jae 0xd19c
0x0000d168      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/hash.c:93
0x0000d170      488b7d08       mov rdi, qword [rbp + 8]
0x0000d174      4885ff         test rdi, rdi
0x0000d177      7418           je 0xd191
0x0000d179      0f1f80000000.  nop dword [rax]
0x0000d180      488b5f08       mov rbx, qword [rdi + 8]
0x0000d184      e83760ffff     call sym..plt.got                       ; ../coreutils-8.31/lib/hash.c:98
0x0000d189      4885db         test rbx, rbx
0x0000d18c      4889df         mov rdi, rbx
0x0000d18f      75ef           jne 0xd180
0x0000d191      4883c510       add rbp, 0x10                           ; ../coreutils-8.31/lib/hash.c:99
0x0000d195      49396c2408     cmp qword [r12 + 8], rbp
0x0000d19a      77d4           ja 0xd170
0x0000d19c      498b7c2448     mov rdi, qword [r12 + 0x48]
0x0000d1a1      4885ff         test rdi, rdi
0x0000d1a4      741b           je 0xd1c1
0x0000d1a6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000d1b0      488b5f08       mov rbx, qword [rdi + 8]
0x0000d1b4      e80760ffff     call sym..plt.got
0x0000d1b9      4885db         test rbx, rbx
0x0000d1bc      4889df         mov rdi, rbx
0x0000d1bf      75ef           jne 0xd1b0
0x0000d1c1      498b3c24       mov rdi, qword [r12]
0x0000d1c5      e8f65fffff     call sym..plt.got
0x0000d1ca      5b             pop rbx
0x0000d1cb      4c89e7         mov rdi, r12
0x0000d1ce      5d             pop rbp
0x0000d1cf      415c           pop r12
0x0000d1d1      e9ea5fffff     jmp sym..plt.got                        ; ../coreutils-8.31/lib/hash.c:107
0x0000d1d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_rehash:
0x0000d1e0      4154           push r12
0x0000d1e2      55             push rbp
0x0000d1e3      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/hash.c:108
0x0000d1e6      53             push rbx
0x0000d1e7      4883ec60       sub rsp, 0x60
0x0000d1eb      4c8b6728       mov r12, qword [rdi + 0x28]
0x0000d1ef      64488b042528.  mov rax, qword fs:[0x28]
0x0000d1f8      4889442458     mov qword [rsp + 0x58], rax
0x0000d1fd      31c0           xor eax, eax
0x0000d1ff      41807c241000   cmp byte [r12 + 0x10], 0
0x0000d205      7551           jne 0xd258
0x0000d207      4885f6         test rsi, rsi
0x0000d20a      0f8878010000   js 0xd388
0x0000d210      660fefc0       pxor xmm0, xmm0
0x0000d214      f3480f2ac6     cvtsi2ss xmm0, rsi                      ; ../coreutils-8.31/lib/hash.c:156
0x0000d219      f3410f5e4424.  divss xmm0, dword [r12 + 8]
0x0000d220      0f2e05458900.  ucomiss xmm0, dword [0x00015b6c]
0x0000d227      0f8333010000   jae 0xd360
0x0000d22d      0f2e053c8900.  ucomiss xmm0, dword [0x00015b70]
0x0000d234      0f8276010000   jb 0xd3b0
0x0000d23a      f30f5c052e89.  subss xmm0, dword [0x00015b70]          ; ../coreutils-8.31/lib/hash.c:161
0x0000d242      48b800000000.  movabs rax, 0x8000000000000000
0x0000d24c      f3480f2cf0     cvttss2si rsi, xmm0
0x0000d251      4831c6         xor rsi, rax                            ; ../coreutils-8.31/lib/bitrotate.h:35
0x0000d254      0f1f4000       nop dword [rax]
0x0000d258      4889f7         mov rdi, rsi
0x0000d25b      e8e0f3ffff     call sym.next_prime
0x0000d260      ba08000000     mov edx, 8
0x0000d265      4889c3         mov rbx, rax
0x0000d268      31c9           xor ecx, ecx
0x0000d26a      4889d0         mov rax, rdx
0x0000d26d      48f7e3         mul rbx
0x0000d270      0f8099010000   jo 0xd40f
0x0000d276      4885c0         test rax, rax
0x0000d279      b801000000     mov eax, 1
0x0000d27e      480f48c8       cmovs rcx, rax
0x0000d282      4885db         test rbx, rbx
0x0000d285      0f84d5000000   je 0xd360
0x0000d28b      83e101         and ecx, 1
0x0000d28e      0f85cc000000   jne 0xd360
0x0000d294      48395d10       cmp qword [rbp + 0x10], rbx
0x0000d298      0f8422010000   je 0xd3c0
0x0000d29e      be10000000     mov esi, 0x10
0x0000d2a3      4889df         mov rdi, rbx
0x0000d2a6      e8755bffff     call sym.imp.calloc
0x0000d2ab      4885c0         test rax, rax
0x0000d2ae      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/lib/bitrotate.h:-72
0x0000d2b2      0f84a8000000   je 0xd360
0x0000d2b8      48895c2410     mov qword [rsp + 0x10], rbx
0x0000d2bd      48c1e304       shl rbx, 4
0x0000d2c1      4c89642428     mov qword [rsp + 0x28], r12
0x0000d2c6      4801c3         add rbx, rax
0x0000d2c9      488b4530       mov rax, qword [rbp + 0x30]
0x0000d2cd      4989e4         mov r12, rsp
0x0000d2d0      31d2           xor edx, edx
0x0000d2d2      4889ee         mov rsi, rbp
0x0000d2d5      4c89e7         mov rdi, r12
0x0000d2d8      48895c2408     mov qword [rsp + 8], rbx
0x0000d2dd      48c744241800.  mov qword [rsp + 0x18], 0
0x0000d2e6      4889442430     mov qword [rsp + 0x30], rax
0x0000d2eb      488b4538       mov rax, qword [rbp + 0x38]
0x0000d2ef      48c744242000.  mov qword [rsp + 0x20], 0
0x0000d2f8      4889442438     mov qword [rsp + 0x38], rax
0x0000d2fd      488b4540       mov rax, qword [rbp + 0x40]
0x0000d301      4889442440     mov qword [rsp + 0x40], rax
0x0000d306      488b4548       mov rax, qword [rbp + 0x48]
0x0000d30a      4889442448     mov qword [rsp + 0x48], rax
0x0000d30f      e8bcf5ffff     call sym.transfer_entries
0x0000d314      84c0           test al, al
0x0000d316      89c3           mov ebx, eax
0x0000d318      0f85b2000000   jne 0xd3d0
0x0000d31e      488b442448     mov rax, qword [rsp + 0x48]
0x0000d323      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/bitrotate.h:-53
0x0000d328      4c89e6         mov rsi, r12
0x0000d32b      4889ef         mov rdi, rbp
0x0000d32e      48894548       mov qword [rbp + 0x48], rax
0x0000d332      e899f5ffff     call sym.transfer_entries
0x0000d337      84c0           test al, al
0x0000d339      0f84da000000   je 0xd419
0x0000d33f      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/bitrotate.h:-43
0x0000d341      4c89e6         mov rsi, r12
0x0000d344      4889ef         mov rdi, rbp
0x0000d347      e884f5ffff     call sym.transfer_entries
0x0000d34c      84c0           test al, al
0x0000d34e      0f84c5000000   je 0xd419
0x0000d354      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/bitrotate.h:-38
0x0000d358      e8635effff     call sym..plt.got
0x0000d35d      eb03           jmp 0xd362
0x0000d35f      90             nop
0x0000d360      31db           xor ebx, ebx
0x0000d362      488b4c2458     mov rcx, qword [rsp + 0x58]
0x0000d367      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000d370      89d8           mov eax, ebx
0x0000d372      0f8592000000   jne 0xd40a
0x0000d378      4883c460       add rsp, 0x60
0x0000d37c      5b             pop rbx
0x0000d37d      5d             pop rbp
0x0000d37e      415c           pop r12
0x0000d380      c3             ret
0x0000d381      0f1f80000000.  nop dword [rax]
0x0000d388      4889f0         mov rax, rsi                            ; ../coreutils-8.31/lib/bitrotate.h:-37
0x0000d38b      660fefc0       pxor xmm0, xmm0
0x0000d38f      48d1e8         shr rax, 1
0x0000d392      83e601         and esi, 1
0x0000d395      4809f0         or rax, rsi
0x0000d398      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000d39d      f30f58c0       addss xmm0, xmm0
0x0000d3a1      e973feffff     jmp 0xd219
0x0000d3a6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000d3b0      f3480f2cf0     cvttss2si rsi, xmm0
0x0000d3b5      e99efeffff     jmp 0xd258
0x0000d3ba      660f1f440000   nop word [rax + rax]
0x0000d3c0      bb01000000     mov ebx, 1
0x0000d3c5      eb9b           jmp 0xd362
0x0000d3c7      660f1f840000.  nop word [rax + rax]
0x0000d3d0      488b7d00       mov rdi, qword [rbp]
0x0000d3d4      e8e75dffff     call sym..plt.got
0x0000d3d9      488b0424       mov rax, qword [rsp]
0x0000d3dd      48894500       mov qword [rbp], rax
0x0000d3e1      488b442408     mov rax, qword [rsp + 8]
0x0000d3e6      48894508       mov qword [rbp + 8], rax
0x0000d3ea      488b442410     mov rax, qword [rsp + 0x10]
0x0000d3ef      48894510       mov qword [rbp + 0x10], rax
0x0000d3f3      488b442418     mov rax, qword [rsp + 0x18]
0x0000d3f8      48894518       mov qword [rbp + 0x18], rax
0x0000d3fc      488b442448     mov rax, qword [rsp + 0x48]             ; ../coreutils-8.31/lib/bitrotate.h:-12
0x0000d401      48894548       mov qword [rbp + 0x48], rax
0x0000d405      e958ffffff     jmp 0xd362
0x0000d40a      e89158ffff     call sym.imp.__stack_chk_fail
0x0000d40f      b901000000     mov ecx, 1
0x0000d414      e95dfeffff     jmp 0xd276
0x0000d419      e8e256ffff     call sym.imp.abort
0x0000d41e      6690           nop
;-- hash_insert_if_absent:
0x0000d420      4155           push r13
0x0000d422      4154           push r12
0x0000d424      55             push rbp
0x0000d425      53             push rbx
0x0000d426      4883ec18       sub rsp, 0x18
0x0000d42a      64488b042528.  mov rax, qword fs:[0x28]
0x0000d433      4889442408     mov qword [rsp + 8], rax
0x0000d438      31c0           xor eax, eax
0x0000d43a      4885f6         test rsi, rsi
0x0000d43d      0f84ba010000   je 0xd5fd
0x0000d443      4989e4         mov r12, rsp
0x0000d446      31c9           xor ecx, ecx
0x0000d448      4989d5         mov r13, rdx
0x0000d44b      4c89e2         mov rdx, r12
0x0000d44e      4889fb         mov rbx, rdi
0x0000d451      4889f5         mov rbp, rsi
0x0000d454      e8d7f2ffff     call sym.hash_find_entry
0x0000d459      4885c0         test rax, rax
0x0000d45c      4889c2         mov rdx, rax
0x0000d45f      742f           je 0xd490
0x0000d461      31c0           xor eax, eax
0x0000d463      4d85ed         test r13, r13
0x0000d466      7404           je 0xd46c
0x0000d468      49895500       mov qword [r13], rdx
0x0000d46c      488b4c2408     mov rcx, qword [rsp + 8]
0x0000d471      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000d47a      0f851f020000   jne 0xd69f
0x0000d480      4883c418       add rsp, 0x18
0x0000d484      5b             pop rbx
0x0000d485      5d             pop rbp
0x0000d486      415c           pop r12
0x0000d488      415d           pop r13
0x0000d48a      c3             ret
0x0000d48b      0f1f440000     nop dword [rax + rax]
0x0000d490      488b4318       mov rax, qword [rbx + 0x18]
0x0000d494      4885c0         test rax, rax
0x0000d497      7877           js 0xd510
0x0000d499      660fefc9       pxor xmm1, xmm1
0x0000d49d      488b5328       mov rdx, qword [rbx + 0x28]
0x0000d4a1      f3480f2ac8     cvtsi2ss xmm1, rax
0x0000d4a6      488b4310       mov rax, qword [rbx + 0x10]
0x0000d4aa      4885c0         test rax, rax
0x0000d4ad      0f8887000000   js 0xd53a
0x0000d4b3      660fefc0       pxor xmm0, xmm0
0x0000d4b7      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000d4bc      f30f594208     mulss xmm0, dword [rdx + 8]             ; ../coreutils-8.31/lib/bitrotate.h:15
0x0000d4c1      0f2ec8         ucomiss xmm1, xmm0
0x0000d4c4      0f8796000000   ja 0xd560
0x0000d4ca      4c8b2424       mov r12, qword [rsp]
0x0000d4ce      49833c2400     cmp qword [r12], 0
0x0000d4d3      0f842f010000   je 0xd608
0x0000d4d9      488b4348       mov rax, qword [rbx + 0x48]
0x0000d4dd      4885c0         test rax, rax
0x0000d4e0      0f843a010000   je 0xd620
0x0000d4e6      488b5008       mov rdx, qword [rax + 8]
0x0000d4ea      48895348       mov qword [rbx + 0x48], rdx
0x0000d4ee      498b542408     mov rdx, qword [r12 + 8]
0x0000d4f3      488928         mov qword [rax], rbp
0x0000d4f6      48895008       mov qword [rax + 8], rdx
0x0000d4fa      4989442408     mov qword [r12 + 8], rax
0x0000d4ff      b801000000     mov eax, 1
0x0000d504      4883432001     add qword [rbx + 0x20], 1
0x0000d509      e95effffff     jmp 0xd46c
0x0000d50e      6690           nop
0x0000d510      4889c2         mov rdx, rax
0x0000d513      660fefc9       pxor xmm1, xmm1
0x0000d517      83e001         and eax, 1
0x0000d51a      48d1ea         shr rdx, 1
0x0000d51d      4809c2         or rdx, rax
0x0000d520      488b4310       mov rax, qword [rbx + 0x10]
0x0000d524      f3480f2aca     cvtsi2ss xmm1, rdx                      ; ../coreutils-8.31/lib/bitrotate.h:-3
0x0000d529      488b5328       mov rdx, qword [rbx + 0x28]
0x0000d52d      4885c0         test rax, rax
0x0000d530      f30f58c9       addss xmm1, xmm1
0x0000d534      0f8979ffffff   jns 0xd4b3
0x0000d53a      4889c1         mov rcx, rax
0x0000d53d      660fefc0       pxor xmm0, xmm0
0x0000d541      48d1e9         shr rcx, 1
0x0000d544      83e001         and eax, 1                              ; ../coreutils-8.31/lib/bitrotate.h:1
0x0000d547      4809c1         or rcx, rax
0x0000d54a      f3480f2ac1     cvtsi2ss xmm0, rcx
0x0000d54f      f30f58c0       addss xmm0, xmm0
0x0000d553      e964ffffff     jmp 0xd4bc
0x0000d558      0f1f84000000.  nop dword [rax + rax]
0x0000d560      488d7b28       lea rdi, [rbx + 0x28]
0x0000d564      e8e7f2ffff     call sym.check_tuning.isra.0
0x0000d569      488b4310       mov rax, qword [rbx + 0x10]
0x0000d56d      488b5328       mov rdx, qword [rbx + 0x28]
0x0000d571      4885c0         test rax, rax
0x0000d574      f30f105208     movss xmm2, dword [rdx + 8]
0x0000d579      0f88c1000000   js 0xd640
0x0000d57f      660fefc0       pxor xmm0, xmm0
0x0000d583      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000d588      488b4318       mov rax, qword [rbx + 0x18]
0x0000d58c      4885c0         test rax, rax
0x0000d58f      0f88cb000000   js 0xd660
0x0000d595      660fefc9       pxor xmm1, xmm1
0x0000d599      f3480f2ac8     cvtsi2ss xmm1, rax
0x0000d59e      0f28da         movaps xmm3, xmm2
0x0000d5a1      f30f59d8       mulss xmm3, xmm0
0x0000d5a5      0f2ecb         ucomiss xmm1, xmm3
0x0000d5a8      0f861cffffff   jbe 0xd4ca
0x0000d5ae      807a1000       cmp byte [rdx + 0x10], 0
0x0000d5b2      f30f59420c     mulss xmm0, dword [rdx + 0xc]
0x0000d5b7      7504           jne 0xd5bd
0x0000d5b9      f30f59c2       mulss xmm0, xmm2
0x0000d5bd      0f2e05a88500.  ucomiss xmm0, dword [0x00015b6c]
0x0000d5c4      736d           jae 0xd633
0x0000d5c6      0f2e05a38500.  ucomiss xmm0, dword [0x00015b70]
0x0000d5cd      0f83ad000000   jae 0xd680
0x0000d5d3      f3480f2cf0     cvttss2si rsi, xmm0
0x0000d5d8      4889df         mov rdi, rbx
0x0000d5db      e800fcffff     call sym.hash_rehash
0x0000d5e0      84c0           test al, al
0x0000d5e2      744f           je 0xd633
0x0000d5e4      31c9           xor ecx, ecx
0x0000d5e6      4c89e2         mov rdx, r12
0x0000d5e9      4889ee         mov rsi, rbp
0x0000d5ec      4889df         mov rdi, rbx
0x0000d5ef      e83cf1ffff     call sym.hash_find_entry
0x0000d5f4      4885c0         test rax, rax
0x0000d5f7      0f84cdfeffff   je 0xd4ca
0x0000d5fd      e8fe54ffff     call sym.imp.abort
0x0000d602      660f1f440000   nop word [rax + rax]
0x0000d608      49892c24       mov qword [r12], rbp
0x0000d60c      b801000000     mov eax, 1
0x0000d611      4883432001     add qword [rbx + 0x20], 1
0x0000d616      4883431801     add qword [rbx + 0x18], 1
0x0000d61b      e94cfeffff     jmp 0xd46c
0x0000d620      bf10000000     mov edi, 0x10
0x0000d625      e89e5bffff     call 0x31c8
0x0000d62a      4885c0         test rax, rax
0x0000d62d      0f85bbfeffff   jne 0xd4ee
0x0000d633      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000d638      e92ffeffff     jmp 0xd46c
0x0000d63d      0f1f00         nop dword [rax]
0x0000d640      4889c1         mov rcx, rax
0x0000d643      660fefc0       pxor xmm0, xmm0
0x0000d647      48d1e9         shr rcx, 1
0x0000d64a      83e001         and eax, 1
0x0000d64d      4809c1         or rcx, rax
0x0000d650      f3480f2ac1     cvtsi2ss xmm0, rcx
0x0000d655      f30f58c0       addss xmm0, xmm0
0x0000d659      e92affffff     jmp 0xd588
0x0000d65e      6690           nop
0x0000d660      4889c1         mov rcx, rax
0x0000d663      660fefc9       pxor xmm1, xmm1
0x0000d667      48d1e9         shr rcx, 1
0x0000d66a      83e001         and eax, 1
0x0000d66d      4809c1         or rcx, rax
0x0000d670      f3480f2ac9     cvtsi2ss xmm1, rcx
0x0000d675      f30f58c9       addss xmm1, xmm1
0x0000d679      e920ffffff     jmp 0xd59e
0x0000d67e      6690           nop
0x0000d680      f30f5c05e884.  subss xmm0, dword [0x00015b70]
0x0000d688      48b800000000.  movabs rax, 0x8000000000000000
0x0000d692      f3480f2cf0     cvttss2si rsi, xmm0
0x0000d697      4831c6         xor rsi, rax
0x0000d69a      e939ffffff     jmp 0xd5d8
0x0000d69f      e8fc55ffff     call sym.imp.__stack_chk_fail
0x0000d6a4      6690           nop
0x0000d6a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_insert:
0x0000d6b0      53             push rbx
0x0000d6b1      4889f3         mov rbx, rsi
0x0000d6b4      4883ec10       sub rsp, 0x10
0x0000d6b8      4889e2         mov rdx, rsp
0x0000d6bb      64488b042528.  mov rax, qword fs:[0x28]
0x0000d6c4      4889442408     mov qword [rsp + 8], rax
0x0000d6c9      31c0           xor eax, eax
0x0000d6cb      e850fdffff     call sym.hash_insert_if_absent
0x0000d6d0      83f8ff         cmp eax, 0xffffffff
0x0000d6d3      742b           je 0xd700
0x0000d6d5      85c0           test eax, eax
0x0000d6d7      7504           jne 0xd6dd
0x0000d6d9      488b1c24       mov rbx, qword [rsp]
0x0000d6dd      488b4c2408     mov rcx, qword [rsp + 8]
0x0000d6e2      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000d6eb      4889d8         mov rax, rbx
0x0000d6ee      7514           jne 0xd704
0x0000d6f0      4883c410       add rsp, 0x10
0x0000d6f4      5b             pop rbx
0x0000d6f5      c3             ret
0x0000d6f6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000d700      31db           xor ebx, ebx
0x0000d702      ebd9           jmp 0xd6dd
0x0000d704      e89755ffff     call sym.imp.__stack_chk_fail
0x0000d709      0f1f80000000.  nop dword [rax]
;-- hash_delete:
0x0000d710      4154           push r12
0x0000d712      55             push rbp
0x0000d713      b901000000     mov ecx, 1
0x0000d718      53             push rbx
0x0000d719      4889fb         mov rbx, rdi
0x0000d71c      4883ec10       sub rsp, 0x10
0x0000d720      4889e2         mov rdx, rsp
0x0000d723      64488b042528.  mov rax, qword fs:[0x28]
0x0000d72c      4889442408     mov qword [rsp + 8], rax
0x0000d731      31c0           xor eax, eax
0x0000d733      e8f8efffff     call sym.hash_find_entry
0x0000d738      4885c0         test rax, rax
0x0000d73b      4889c5         mov rbp, rax
0x0000d73e      740f           je 0xd74f
0x0000d740      488b0424       mov rax, qword [rsp]
0x0000d744      48836b2001     sub qword [rbx + 0x20], 1
0x0000d749      48833800       cmp qword [rax], 0
0x0000d74d      7421           je 0xd770
0x0000d74f      488b4c2408     mov rcx, qword [rsp + 8]
0x0000d754      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000d75d      4889e8         mov rax, rbp
0x0000d760      0f85a8010000   jne 0xd90e
0x0000d766      4883c410       add rsp, 0x10
0x0000d76a      5b             pop rbx
0x0000d76b      5d             pop rbp
0x0000d76c      415c           pop r12
0x0000d76e      c3             ret
0x0000d76f      90             nop
0x0000d770      488b4318       mov rax, qword [rbx + 0x18]
0x0000d774      4883e801       sub rax, 1
0x0000d778      4885c0         test rax, rax
0x0000d77b      48894318       mov qword [rbx + 0x18], rax
0x0000d77f      0f88fb000000   js 0xd880
0x0000d785      660fefc0       pxor xmm0, xmm0
0x0000d789      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000d78e      488b4310       mov rax, qword [rbx + 0x10]
0x0000d792      488b5328       mov rdx, qword [rbx + 0x28]
0x0000d796      4885c0         test rax, rax
0x0000d799      0f88c1000000   js 0xd860
0x0000d79f      660fefc9       pxor xmm1, xmm1
0x0000d7a3      f3480f2ac8     cvtsi2ss xmm1, rax
0x0000d7a8      f30f590a       mulss xmm1, dword [rdx]
0x0000d7ac      0f2ec8         ucomiss xmm1, xmm0
0x0000d7af      769e           jbe 0xd74f
0x0000d7b1      488d7b28       lea rdi, [rbx + 0x28]
0x0000d7b5      e896f0ffff     call sym.check_tuning.isra.0
0x0000d7ba      488b4310       mov rax, qword [rbx + 0x10]
0x0000d7be      488b5328       mov rdx, qword [rbx + 0x28]
0x0000d7c2      4885c0         test rax, rax
0x0000d7c5      0f8825010000   js 0xd8f0
0x0000d7cb      660fefc0       pxor xmm0, xmm0
0x0000d7cf      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000d7d4      488b4318       mov rax, qword [rbx + 0x18]
0x0000d7d8      4885c0         test rax, rax
0x0000d7db      0f88ef000000   js 0xd8d0
0x0000d7e1      660fefc9       pxor xmm1, xmm1
0x0000d7e5      f3480f2ac8     cvtsi2ss xmm1, rax
0x0000d7ea      f30f1012       movss xmm2, dword [rdx]
0x0000d7ee      f30f59d0       mulss xmm2, xmm0
0x0000d7f2      0f2ed1         ucomiss xmm2, xmm1
0x0000d7f5      0f8654ffffff   jbe 0xd74f
0x0000d7fb      807a1000       cmp byte [rdx + 0x10], 0
0x0000d7ff      f30f594204     mulss xmm0, dword [rdx + 4]
0x0000d804      0f84b6000000   je 0xd8c0
0x0000d80a      0f2e055f8300.  ucomiss xmm0, dword [0x00015b70]
0x0000d811      0f8389000000   jae 0xd8a0
0x0000d817      f3480f2cf0     cvttss2si rsi, xmm0
0x0000d81c      4889df         mov rdi, rbx
0x0000d81f      e8bcf9ffff     call sym.hash_rehash
0x0000d824      84c0           test al, al
0x0000d826      0f8523ffffff   jne 0xd74f
0x0000d82c      488b7b48       mov rdi, qword [rbx + 0x48]
0x0000d830      4885ff         test rdi, rdi
0x0000d833      7414           je 0xd849
0x0000d835      0f1f00         nop dword [rax]
0x0000d838      4c8b6708       mov r12, qword [rdi + 8]
0x0000d83c      e87f59ffff     call sym..plt.got
0x0000d841      4d85e4         test r12, r12
0x0000d844      4c89e7         mov rdi, r12
0x0000d847      75ef           jne 0xd838
0x0000d849      48c743480000.  mov qword [rbx + 0x48], 0
0x0000d851      e9f9feffff     jmp 0xd74f
0x0000d856      662e0f1f8400.  nop word cs:[rax + rax]
0x0000d860      4889c1         mov rcx, rax
0x0000d863      660fefc9       pxor xmm1, xmm1
0x0000d867      48d1e9         shr rcx, 1
0x0000d86a      83e001         and eax, 1
0x0000d86d      4809c1         or rcx, rax
0x0000d870      f3480f2ac9     cvtsi2ss xmm1, rcx
0x0000d875      f30f58c9       addss xmm1, xmm1
0x0000d879      e92affffff     jmp 0xd7a8
0x0000d87e      6690           nop
0x0000d880      4889c2         mov rdx, rax
0x0000d883      660fefc0       pxor xmm0, xmm0
0x0000d887      48d1ea         shr rdx, 1
0x0000d88a      83e001         and eax, 1
0x0000d88d      4809c2         or rdx, rax
0x0000d890      f3480f2ac2     cvtsi2ss xmm0, rdx
0x0000d895      f30f58c0       addss xmm0, xmm0
0x0000d899      e9f0feffff     jmp 0xd78e
0x0000d89e      6690           nop
0x0000d8a0      f30f5c05c882.  subss xmm0, dword [0x00015b70]
0x0000d8a8      48b800000000.  movabs rax, 0x8000000000000000
0x0000d8b2      f3480f2cf0     cvttss2si rsi, xmm0
0x0000d8b7      4831c6         xor rsi, rax
0x0000d8ba      e95dffffff     jmp 0xd81c
0x0000d8bf      90             nop
0x0000d8c0      f30f594208     mulss xmm0, dword [rdx + 8]
0x0000d8c5      e940ffffff     jmp 0xd80a
0x0000d8ca      660f1f440000   nop word [rax + rax]
0x0000d8d0      4889c1         mov rcx, rax
0x0000d8d3      660fefc9       pxor xmm1, xmm1
0x0000d8d7      48d1e9         shr rcx, 1
0x0000d8da      83e001         and eax, 1
0x0000d8dd      4809c1         or rcx, rax
0x0000d8e0      f3480f2ac9     cvtsi2ss xmm1, rcx
0x0000d8e5      f30f58c9       addss xmm1, xmm1
0x0000d8e9      e9fcfeffff     jmp 0xd7ea
0x0000d8ee      6690           nop
0x0000d8f0      4889c1         mov rcx, rax
0x0000d8f3      660fefc0       pxor xmm0, xmm0
0x0000d8f7      48d1e9         shr rcx, 1
0x0000d8fa      83e001         and eax, 1
0x0000d8fd      4809c1         or rcx, rax
0x0000d900      f3480f2ac1     cvtsi2ss xmm0, rcx
0x0000d905      f30f58c0       addss xmm0, xmm0
0x0000d909      e9c6feffff     jmp 0xd7d4
0x0000d90e      e88d53ffff     call sym.imp.__stack_chk_fail
0x0000d913      662e0f1f8400.  nop word cs:[rax + rax]
0x0000d91d      0f1f00         nop dword [rax]
;-- heap_default_compare:
0x0000d920      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/heap.c:64
0x0000d922      c3             ret
0x0000d923      0f1f00         nop dword [rax]
0x0000d926      662e0f1f8400.  nop word cs:[rax + rax]
;-- heap_alloc:
0x0000d930      4154           push r12                                ; ../coreutils-8.31/lib/heap.c:45
0x0000d932      55             push rbp
0x0000d933      4989fc         mov r12, rdi
0x0000d936      53             push rbx
0x0000d937      bf20000000     mov edi, 0x20                           ; ../coreutils-8.31/lib/heap.c:46 ; "@"
0x0000d93c      4889f3         mov rbx, rsi                            ; ../coreutils-8.31/lib/heap.c:45
0x0000d93f      e89c440000     call sym.xmalloc                        ; ../coreutils-8.31/lib/heap.c:46
0x0000d944      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/heap.c:49
0x0000d947      ba08000000     mov edx, 8                              ; ../coreutils-8.31/lib/xalloc.h:101
0x0000d94c      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/heap.c:46
0x0000d94f      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/heap.c:49
0x0000d954      480f44d8       cmove rbx, rax
0x0000d958      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/xalloc.h:101
0x0000d95b      48f7e3         mul rbx
0x0000d95e      704a           jo 0xd9aa
0x0000d960      31c9           xor ecx, ecx
0x0000d962      4885c0         test rax, rax
0x0000d965      784a           js 0xd9b1
0x0000d967      4885c9         test rcx, rcx
0x0000d96a      7545           jne 0xd9b1
0x0000d96c      488d3cdd0000.  lea rdi, [rbx*8]                        ; ../coreutils-8.31/lib/xalloc.h:103
0x0000d974      e867440000     call sym.xmalloc
0x0000d979      48894500       mov qword [rbp], rax                    ; ../coreutils-8.31/lib/heap.c:51
0x0000d97d      48c700000000.  mov qword [rax], 0                      ; ../coreutils-8.31/lib/heap.c:53
0x0000d984      488d0595ffff.  lea rax, sym.heap_default_compare       ; ../coreutils-8.31/lib/heap.c:56 ; 0xd920 ; "1\xc0\xc3\x0f\x1f"
0x0000d98b      4d85e4         test r12, r12
0x0000d98e      48895d08       mov qword [rbp + 8], rbx                ; ../coreutils-8.31/lib/heap.c:54
0x0000d992      48c745100000.  mov qword [rbp + 0x10], 0               ; ../coreutils-8.31/lib/heap.c:55
0x0000d99a      4c0f44e0       cmove r12, rax                          ; ../coreutils-8.31/lib/heap.c:56
0x0000d99e      4889e8         mov rax, rbp                            ; ../coreutils-8.31/lib/heap.c:59
0x0000d9a1      4c896518       mov qword [rbp + 0x18], r12             ; ../coreutils-8.31/lib/heap.c:56
0x0000d9a5      5b             pop rbx                                 ; ../coreutils-8.31/lib/heap.c:59
0x0000d9a6      5d             pop rbp
0x0000d9a7      415c           pop r12
0x0000d9a9      c3             ret
0x0000d9aa      b901000000     mov ecx, 1                              ; ../coreutils-8.31/lib/xalloc.h:101
0x0000d9af      ebb1           jmp 0xd962
0x0000d9b1      e87a460000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x0000d9b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- heap_free:
0x0000d9c0      53             push rbx                                ; ../coreutils-8.31/lib/heap.c:71
0x0000d9c1      4889fb         mov rbx, rdi
0x0000d9c4      488b3f         mov rdi, qword [rdi]                    ; ../coreutils-8.31/lib/heap.c:72
0x0000d9c7      e8f457ffff     call sym..plt.got
0x0000d9cc      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/heap.c:73
0x0000d9cf      5b             pop rbx                                 ; ../coreutils-8.31/lib/heap.c:74
0x0000d9d0      e9eb57ffff     jmp sym..plt.got                        ; ../coreutils-8.31/lib/heap.c:73
0x0000d9d5      90             nop
0x0000d9d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- heap_insert:
0x0000d9e0      4157           push r15                                ; ../coreutils-8.31/lib/heap.c:80
0x0000d9e2      4156           push r14
0x0000d9e4      4155           push r13
0x0000d9e6      4154           push r12
0x0000d9e8      4989f4         mov r12, rsi
0x0000d9eb      55             push rbp
0x0000d9ec      53             push rbx
0x0000d9ed      4889fd         mov rbp, rdi
0x0000d9f0      4883ec08       sub rsp, 8
0x0000d9f4      488b7708       mov rsi, qword [rdi + 8]                ; ../coreutils-8.31/lib/heap.c:81
0x0000d9f8      488b5f10       mov rbx, qword [rdi + 0x10]
0x0000d9fc      488b3f         mov rdi, qword [rdi]
0x0000d9ff      488d46ff       lea rax, [rsi - 1]
0x0000da03      4839d8         cmp rax, rbx
0x0000da06      7678           jbe 0xda80
0x0000da08      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/heap.c:85
0x0000da0c      48895d10       mov qword [rbp + 0x10], rbx
0x0000da10      4c8924df       mov qword [rdi + rbx*8], r12
0x0000da14      4883fb01       cmp rbx, 1                              ; ../coreutils-8.31/lib/heap.c:144
0x0000da18      4c8b6d00       mov r13, qword [rbp]                    ; ../coreutils-8.31/lib/heap.c:86
0x0000da1c      4c8b7d18       mov r15, qword [rbp + 0x18]
0x0000da20      4d8b74dd00     mov r14, qword [r13 + rbx*8]            ; ../coreutils-8.31/lib/heap.c:142
0x0000da25      7519           jne 0xda40                              ; ../coreutils-8.31/lib/heap.c:144
0x0000da27      eb4f           jmp 0xda78
0x0000da29      0f1f80000000.  nop dword [rax]
0x0000da30      488b4500       mov rax, qword [rbp]                    ; ../coreutils-8.31/lib/heap.c:146
0x0000da34      4983fc01       cmp r12, 1                              ; ../coreutils-8.31/lib/heap.c:144
0x0000da38      4c89e3         mov rbx, r12
0x0000da3b      488902         mov qword [rdx], rax                    ; ../coreutils-8.31/lib/heap.c:146
0x0000da3e      7438           je 0xda78                               ; ../coreutils-8.31/lib/heap.c:144
0x0000da40      4989dc         mov r12, rbx
0x0000da43      4c89f6         mov rsi, r14
0x0000da46      49d1ec         shr r12, 1
0x0000da49      4b8d6ce500     lea rbp, [r13 + r12*8]
0x0000da4e      488b7d00       mov rdi, qword [rbp]
0x0000da52      41ffd7         call r15
0x0000da55      85c0           test eax, eax
0x0000da57      498d54dd00     lea rdx, [r13 + rbx*8]
0x0000da5c      7ed2           jle 0xda30
0x0000da5e      4c8932         mov qword [rdx], r14                    ; ../coreutils-8.31/lib/heap.c:150
0x0000da61      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/heap.c:89
0x0000da65      31c0           xor eax, eax
0x0000da67      5b             pop rbx
0x0000da68      5d             pop rbp
0x0000da69      415c           pop r12
0x0000da6b      415d           pop r13
0x0000da6d      415e           pop r14
0x0000da6f      415f           pop r15
0x0000da71      c3             ret
0x0000da72      660f1f440000   nop word [rax + rax]
0x0000da78      498d5508       lea rdx, [r13 + 8]
0x0000da7c      ebe0           jmp 0xda5e
0x0000da7e      6690           nop
0x0000da80      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/xalloc.h:78
0x0000da83      743b           je 0xdac0
0x0000da85      48b8a9aaaaaa.  movabs rax, 0xaaaaaaaaaaaaaa9
0x0000da8f      4839c6         cmp rsi, rax
0x0000da92      7751           ja 0xdae5
0x0000da94      4889f0         mov rax, rsi                            ; ../coreutils-8.31/lib/heap.c:-46
0x0000da97      48d1e8         shr rax, 1
0x0000da9a      488d740601     lea rsi, [rsi + rax + 1]
0x0000da9f      48897508       mov qword [rbp + 8], rsi
0x0000daa3      48c1e603       shl rsi, 3
0x0000daa7      e894430000     call sym.xrealloc
0x0000daac      488b5d10       mov rbx, qword [rbp + 0x10]
0x0000dab0      4889c7         mov rdi, rax
0x0000dab3      48894500       mov qword [rbp], rax
0x0000dab7      e94cffffff     jmp 0xda08
0x0000dabc      0f1f4000       nop dword [rax]
0x0000dac0      4885f6         test rsi, rsi
0x0000dac3      b810000000     mov eax, 0x10                           ; ../coreutils-8.31/lib/heap.c:-163
0x0000dac8      ba08000000     mov edx, 8
0x0000dacd      480f44f0       cmove rsi, rax
0x0000dad1      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/heap.c:-160
0x0000dad4      31c9           xor ecx, ecx
0x0000dad6      48f7e6         mul rsi
0x0000dad9      700f           jo 0xdaea
0x0000dadb      4885c0         test rax, rax
0x0000dade      7805           js 0xdae5                               ; ../coreutils-8.31/lib/heap.c:-157
0x0000dae0      4885c9         test rcx, rcx
0x0000dae3      74ba           je 0xda9f
0x0000dae5      e846450000     call sym.xalloc_die
0x0000daea      b901000000     mov ecx, 1
0x0000daef      ebea           jmp 0xdadb
0x0000daf1      0f1f440000     nop dword [rax + rax]
0x0000daf6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/heap.c:-141
;-- heap_remove_top:
0x0000db00      4157           push r15
0x0000db02      4156           push r14                                ; ../coreutils-8.31/lib/heap.c:-155
0x0000db04      4155           push r13
0x0000db06      4154           push r12
0x0000db08      55             push rbp
0x0000db09      53             push rbx
0x0000db0a      4883ec38       sub rsp, 0x38
0x0000db0e      488b4710       mov rax, qword [rdi + 0x10]             ; ../coreutils-8.31/lib/heap.c:-144
0x0000db12      4885c0         test rax, rax
0x0000db15      0f84e5000000   je 0xdc00
0x0000db1b      488b17         mov rdx, qword [rdi]
0x0000db1e      488d70ff       lea rsi, [rax - 1]
0x0000db22      4889742418     mov qword [rsp + 0x18], rsi
0x0000db27      488b04c2       mov rax, qword [rdx + rax*8]
0x0000db2b      488b4a08       mov rcx, qword [rdx + 8]
0x0000db2f      48897710       mov qword [rdi + 0x10], rsi
0x0000db33      48d1ee         shr rsi, 1
0x0000db36      4889742420     mov qword [rsp + 0x20], rsi
0x0000db3b      48894208       mov qword [rdx + 8], rax
0x0000db3f      488b2f         mov rbp, qword [rdi]
0x0000db42      48894c2428     mov qword [rsp + 0x28], rcx
0x0000db47      4c8b6718       mov r12, qword [rdi + 0x18]
0x0000db4b      488b4508       mov rax, qword [rbp + 8]
0x0000db4f      4889442410     mov qword [rsp + 0x10], rax
0x0000db54      747a           je 0xdbd0
0x0000db56      41be01000000   mov r14d, 1
0x0000db5c      eb26           jmp 0xdb84
0x0000db5e      6690           nop
0x0000db60      498b3f         mov rdi, qword [r15]
0x0000db63      488b742410     mov rsi, qword [rsp + 0x10]
0x0000db68      41ffd4         call r12
0x0000db6b      85c0           test eax, eax
0x0000db6d      4a8d4cf500     lea rcx, [rbp + r14*8]
0x0000db72      7e64           jle 0xdbd8
0x0000db74      483b5c2420     cmp rbx, qword [rsp + 0x20]
0x0000db79      498b07         mov rax, qword [r15]
0x0000db7c      4989de         mov r14, rbx
0x0000db7f      488901         mov qword [rcx], rax
0x0000db82      7774           ja 0xdbf8
0x0000db84      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/heap.c:-136
0x0000db87      4b8d1c36       lea rbx, [r14 + r14]
0x0000db8b      48c1e204       shl rdx, 4
0x0000db8f      48395c2418     cmp qword [rsp + 0x18], rbx
0x0000db94      4c8d7c1500     lea r15, [rbp + rdx]
0x0000db99      498b3f         mov rdi, qword [r15]
0x0000db9c      76c5           jbe 0xdb63
0x0000db9e      4c8d6b01       lea r13, [rbx + 1]
0x0000dba2      4e8d44ed00     lea r8, [rbp + r13*8]
0x0000dba7      498b30         mov rsi, qword [r8]
0x0000dbaa      4c89442408     mov qword [rsp + 8], r8
0x0000dbaf      41ffd4         call r12
0x0000dbb2      85c0           test eax, eax
0x0000dbb4      4c8b442408     mov r8, qword [rsp + 8]
0x0000dbb9      79a5           jns 0xdb60
0x0000dbbb      498b38         mov rdi, qword [r8]                     ; ../coreutils-8.31/lib/heap.c:-141
0x0000dbbe      4d89c7         mov r15, r8
0x0000dbc1      4c89eb         mov rbx, r13
0x0000dbc4      eb9d           jmp 0xdb63
0x0000dbc6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000dbd0      488d4d08       lea rcx, [rbp + 8]
0x0000dbd4      0f1f4000       nop dword [rax]
0x0000dbd8      488b442410     mov rax, qword [rsp + 0x10]
0x0000dbdd      488901         mov qword [rcx], rax
0x0000dbe0      488b442428     mov rax, qword [rsp + 0x28]
0x0000dbe5      4883c438       add rsp, 0x38
0x0000dbe9      5b             pop rbx
0x0000dbea      5d             pop rbp
0x0000dbeb      415c           pop r12
0x0000dbed      415d           pop r13
0x0000dbef      415e           pop r14
0x0000dbf1      415f           pop r15
0x0000dbf3      c3             ret
0x0000dbf4      0f1f4000       nop dword [rax]
0x0000dbf8      4c89f9         mov rcx, r15
0x0000dbfb      ebdb           jmp 0xdbd8
0x0000dbfd      0f1f00         nop dword [rax]
0x0000dc00      48c744242800.  mov qword [rsp + 0x28], 0
0x0000dc09      ebd5           jmp 0xdbe0
0x0000dc0b      0f1f440000     nop dword [rax + rax]
;-- inttostr:
0x0000dc10      85ff           test edi, edi                           ; ../coreutils-8.31/lib/anytostr.c:37
0x0000dc12      488d4e0b       lea rcx, [rsi + 0xb]                    ; ../coreutils-8.31/lib/anytostr.c:38
0x0000dc16      c6460b00       mov byte [rsi + 0xb], 0                 ; ../coreutils-8.31/lib/anytostr.c:39
0x0000dc1a      41b967666666   mov r9d, 0x66666667                     ; ../coreutils-8.31/lib/anytostr.c:44 ; 'gfff'
0x0000dc20      becdcccccc     mov esi, 0xcccccccd                     ; ../coreutils-8.31/lib/anytostr.c:52
0x0000dc25      41b830000000   mov r8d, 0x30                           ; ../coreutils-8.31/lib/anytostr.c:44 ; '0'
0x0000dc2b      782e           js 0xdc5b                               ; ../coreutils-8.31/lib/anytostr.c:41
0x0000dc2d      0f1f00         nop dword [rax]
0x0000dc30      89f8           mov eax, edi                            ; ../coreutils-8.31/lib/anytostr.c:52
0x0000dc32      4883e901       sub rcx, 1
0x0000dc36      f7e6           mul esi
0x0000dc38      c1ea03         shr edx, 3
0x0000dc3b      8d0492         lea eax, [rdx + rdx*4]
0x0000dc3e      01c0           add eax, eax
0x0000dc40      29c7           sub edi, eax
0x0000dc42      83c730         add edi, 0x30
0x0000dc45      85d2           test edx, edx                           ; ../coreutils-8.31/lib/anytostr.c:53
0x0000dc47      408839         mov byte [rcx], dil                     ; ../coreutils-8.31/lib/anytostr.c:52
0x0000dc4a      89d7           mov edi, edx                            ; ../coreutils-8.31/lib/anytostr.c:53
0x0000dc4c      75e2           jne 0xdc30
0x0000dc4e      4889c8         mov rax, rcx                            ; ../coreutils-8.31/lib/anytostr.c:57
0x0000dc51      c3             ret
0x0000dc52      660f1f440000   nop word [rax + rax]
0x0000dc58      4889f1         mov rcx, rsi
0x0000dc5b      89f8           mov eax, edi                            ; ../coreutils-8.31/lib/anytostr.c:44
0x0000dc5d      488d71ff       lea rsi, [rcx - 1]
0x0000dc61      41f7e9         imul r9d
0x0000dc64      89f8           mov eax, edi
0x0000dc66      c1f81f         sar eax, 0x1f
0x0000dc69      c1fa02         sar edx, 2
0x0000dc6c      29c2           sub edx, eax
0x0000dc6e      8d0492         lea eax, [rdx + rdx*4]
0x0000dc71      418d0440       lea eax, [r8 + rax*2]
0x0000dc75      29f8           sub eax, edi
0x0000dc77      85d2           test edx, edx                           ; ../coreutils-8.31/lib/anytostr.c:45
0x0000dc79      89d7           mov edi, edx
0x0000dc7b      8841ff         mov byte [rcx - 1], al                  ; ../coreutils-8.31/lib/anytostr.c:44
0x0000dc7e      75d8           jne 0xdc58                              ; ../coreutils-8.31/lib/anytostr.c:45
0x0000dc80      4883e902       sub rcx, 2                              ; ../coreutils-8.31/lib/anytostr.c:47
0x0000dc84      c646ff2d       mov byte [rsi - 1], 0x2d                ; '-'
                                                                       ; [0x2d:1]=0
0x0000dc88      4889c8         mov rax, rcx                            ; ../coreutils-8.31/lib/anytostr.c:57
0x0000dc8b      c3             ret
0x0000dc8c      0f1f4000       nop dword [rax]
;-- uinttostr:
0x0000dc90      488d4e0a       lea rcx, [rsi + 0xa]                    ; ../coreutils-8.31/lib/anytostr.c:37
0x0000dc94      c6460a00       mov byte [rsi + 0xa], 0                 ; ../coreutils-8.31/lib/anytostr.c:39
0x0000dc98      becdcccccc     mov esi, 0xcccccccd                     ; ../coreutils-8.31/lib/anytostr.c:52
0x0000dc9d      0f1f00         nop dword [rax]
0x0000dca0      89f8           mov eax, edi
0x0000dca2      4883e901       sub rcx, 1
0x0000dca6      f7e6           mul esi
0x0000dca8      c1ea03         shr edx, 3
0x0000dcab      8d0492         lea eax, [rdx + rdx*4]
0x0000dcae      01c0           add eax, eax
0x0000dcb0      29c7           sub edi, eax
0x0000dcb2      83c730         add edi, 0x30
0x0000dcb5      85d2           test edx, edx                           ; ../coreutils-8.31/lib/anytostr.c:53
0x0000dcb7      408839         mov byte [rcx], dil                     ; ../coreutils-8.31/lib/anytostr.c:52
0x0000dcba      89d7           mov edi, edx                            ; ../coreutils-8.31/lib/anytostr.c:53
0x0000dcbc      75e2           jne 0xdca0
0x0000dcbe      4889c8         mov rax, rcx                            ; ../coreutils-8.31/lib/anytostr.c:57
0x0000dcc1      c3             ret
0x0000dcc2      662e0f1f8400.  nop word cs:[rax + rax]
0x0000dccc      0f1f4000       nop dword [rax]
;-- umaxtostr:
0x0000dcd0      488d4e14       lea rcx, [rsi + 0x14]                   ; ../coreutils-8.31/lib/anytostr.c:37
0x0000dcd4      c6461400       mov byte [rsi + 0x14], 0                ; ../coreutils-8.31/lib/anytostr.c:39
0x0000dcd8      48becdcccccc.  movabs rsi, 0xcccccccccccccccd          ; ../coreutils-8.31/lib/anytostr.c:52
0x0000dce2      660f1f440000   nop word [rax + rax]
0x0000dce8      4889f8         mov rax, rdi
0x0000dceb      4883e901       sub rcx, 1
0x0000dcef      48f7e6         mul rsi
0x0000dcf2      48c1ea03       shr rdx, 3
0x0000dcf6      488d0492       lea rax, [rdx + rdx*4]
0x0000dcfa      4801c0         add rax, rax
0x0000dcfd      4829c7         sub rdi, rax
0x0000dd00      83c730         add edi, 0x30
0x0000dd03      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/anytostr.c:53
0x0000dd06      408839         mov byte [rcx], dil                     ; ../coreutils-8.31/lib/anytostr.c:52
0x0000dd09      4889d7         mov rdi, rdx                            ; ../coreutils-8.31/lib/anytostr.c:53
0x0000dd0c      75da           jne 0xdce8
0x0000dd0e      4889c8         mov rax, rcx                            ; ../coreutils-8.31/lib/anytostr.c:57
0x0000dd11      c3             ret
0x0000dd12      662e0f1f8400.  nop word cs:[rax + rax]
0x0000dd1c      0f1f4000       nop dword [rax]
;-- mbsnwidth:
0x0000dd20      4157           push r15                                ; ../coreutils-8.31/lib/mbswidth.c:58
0x0000dd22      4156           push r14
0x0000dd24      4155           push r13
0x0000dd26      4154           push r12
0x0000dd28      4c8d2c37       lea r13, [rdi + rsi]                    ; ../coreutils-8.31/lib/mbswidth.c:60
0x0000dd2c      55             push rbp                                ; ../coreutils-8.31/lib/mbswidth.c:58
0x0000dd2d      53             push rbx
0x0000dd2e      4889fb         mov rbx, rdi
0x0000dd31      4883ec38       sub rsp, 0x38
0x0000dd35      64488b042528.  mov rax, qword fs:[0x28]
0x0000dd3e      4889442428     mov qword [rsp + 0x28], rax
0x0000dd43      31c0           xor eax, eax
0x0000dd45      8954240c       mov dword [rsp + 0xc], edx
0x0000dd49      e8324fffff     call sym.imp.__ctype_get_mb_cur_max     ; ../coreutils-8.31/lib/mbswidth.c:64
0x0000dd4e      4883f801       cmp rax, 1
0x0000dd52      0f8630010000   jbe 0xde88
0x0000dd58      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/mbswidth.c:63
0x0000dd5a      4c39eb         cmp rbx, r13                            ; ../coreutils-8.31/lib/mbswidth.c:66
0x0000dd5d      0f83ea000000   jae 0xde4d
0x0000dd63      4c8d642420     lea r12, [rsp + 0x20]                   ; string_fortified.h:71   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
0x0000dd68      4c8d74241c     lea r14, [rsp + 0x1c]
0x0000dd6d      eb1c           jmp 0xdd8b
0x0000dd6f      90             nop
0x0000dd70      3c25           cmp al, 0x25                            ; ../coreutils-8.31/lib/mbswidth.c:67
0x0000dd72      7d07           jge 0xdd7b
0x0000dd74      83e820         sub eax, 0x20                           ; "@"
0x0000dd77      3c03           cmp al, 3
0x0000dd79      7726           ja 0xdda1
0x0000dd7b      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/mbswidth.c:111
0x0000dd7f      83c501         add ebp, 1                              ; ../coreutils-8.31/lib/mbswidth.c:112
0x0000dd82      4c39eb         cmp rbx, r13                            ; ../coreutils-8.31/lib/mbswidth.c:66
0x0000dd85      0f83c2000000   jae 0xde4d
0x0000dd8b      0fb603         movzx eax, byte [rbx]                   ; ../coreutils-8.31/lib/mbswidth.c:67
0x0000dd8e      3c3f           cmp al, 0x3f
0x0000dd90      7ede           jle 0xdd70
0x0000dd92      3c41           cmp al, 0x41
0x0000dd94      7c0b           jl 0xdda1
0x0000dd96      3c5f           cmp al, 0x5f
0x0000dd98      7ee1           jle 0xdd7b
0x0000dd9a      83e861         sub eax, 0x61
0x0000dd9d      3c1d           cmp al, 0x1d
0x0000dd9f      76da           jbe 0xdd7b
0x0000dda1      49c704240000.  mov qword [r12], 0                      ; string_fortified.h:71   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
0x0000dda9      eb25           jmp 0xddd0
0x0000ddab      0f1f440000     nop dword [rax + rax]
0x0000ddb0      b9ffffff7f     mov ecx, 0x7fffffff
0x0000ddb5      29e9           sub ecx, ebp
0x0000ddb7      39c1           cmp ecx, eax
0x0000ddb9      0f8c11010000   jl 0xded0
0x0000ddbf      01c5           add ebp, eax
0x0000ddc1      4c89e7         mov rdi, r12
0x0000ddc4      4c01fb         add rbx, r15
0x0000ddc7      e87453ffff     call sym.imp.mbsinit
0x0000ddcc      85c0           test eax, eax
0x0000ddce      75b2           jne 0xdd82                              ; ../coreutils-8.31/lib/mbswidth.c:-26
0x0000ddd0      4c89ea         mov rdx, r13
0x0000ddd3      4c89e1         mov rcx, r12                            ; ../coreutils-8.31/lib/mbswidth.c:-11
0x0000ddd6      4889de         mov rsi, rbx
0x0000ddd9      4829da         sub rdx, rbx                            ; ../coreutils-8.31/lib/mbswidth.c:6
0x0000dddc      4c89f7         mov rdi, r14
0x0000dddf      e8fc500000     call sym.rpl_mbrtowc
0x0000dde4      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000dde8      4989c7         mov r15, rax
0x0000ddeb      744b           je 0xde38
0x0000dded      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0000ddf1      747d           je 0xde70
0x0000ddf3      8b7c241c       mov edi, dword [rsp + 0x1c]
0x0000ddf7      4885c0         test rax, rax
0x0000ddfa      b801000000     mov eax, 1
0x0000ddff      4c0f44f8       cmove r15, rax
0x0000de03      e8d850ffff     call sym.imp.wcwidth
0x0000de08      85c0           test eax, eax
0x0000de0a      79a4           jns 0xddb0
0x0000de0c      f644240c02     test byte [rsp + 0xc], 2
0x0000de11      7535           jne 0xde48
0x0000de13      8b7c241c       mov edi, dword [rsp + 0x1c]
0x0000de17      e8944dffff     call sym.imp.iswcntrl
0x0000de1c      85c0           test eax, eax
0x0000de1e      75a1           jne 0xddc1                              ; ../coreutils-8.31/lib/mbswidth.c:-21
0x0000de20      81fdffffff7f   cmp ebp, 0x7fffffff
0x0000de26      0f84a4000000   je 0xded0
0x0000de2c      83c501         add ebp, 1                              ; ../coreutils-8.31/lib/mbswidth.c:-67
0x0000de2f      eb90           jmp 0xddc1                              ; ../coreutils-8.31/lib/mbswidth.c:-175
0x0000de31      0f1f80000000.  nop dword [rax]
0x0000de38      f644240c01     test byte [rsp + 0xc], 1
0x0000de3d      0f8438ffffff   je 0xdd7b
0x0000de43      0f1f440000     nop dword [rax + rax]
0x0000de48      bdffffffff     mov ebp, 0xffffffff                     ; -1
0x0000de4d      488b742428     mov rsi, qword [rsp + 0x28]
0x0000de52      644833342528.  xor rsi, qword fs:[0x28]
0x0000de5b      89e8           mov eax, ebp
0x0000de5d      757b           jne 0xdeda
0x0000de5f      4883c438       add rsp, 0x38
0x0000de63      5b             pop rbx
0x0000de64      5d             pop rbp
0x0000de65      415c           pop r12
0x0000de67      415d           pop r13
0x0000de69      415e           pop r14
0x0000de6b      415f           pop r15
0x0000de6d      c3             ret
0x0000de6e      6690           nop
0x0000de70      f644240c01     test byte [rsp + 0xc], 1
0x0000de75      75d1           jne 0xde48
0x0000de77      83c501         add ebp, 1
0x0000de7a      4c89eb         mov rbx, r13
0x0000de7d      e900ffffff     jmp 0xdd82
0x0000de82      660f1f440000   nop word [rax + rax]
0x0000de88      31ed           xor ebp, ebp
0x0000de8a      4c39eb         cmp rbx, r13
0x0000de8d      73be           jae 0xde4d
0x0000de8f      e81c53ffff     call sym.imp.__ctype_b_loc
0x0000de94      8b54240c       mov edx, dword [rsp + 0xc]
0x0000de98      488b08         mov rcx, qword [rax]
0x0000de9b      31ed           xor ebp, ebp
0x0000de9d      83e202         and edx, 2
0x0000dea0      4883c301       add rbx, 1
0x0000dea4      0fb643ff       movzx eax, byte [rbx - 1]
0x0000dea8      0fb70441       movzx eax, word [rcx + rax*2]
0x0000deac      f6c440         test ah, 0x40                           ; segment.PHDR
0x0000deaf      7508           jne 0xdeb9
0x0000deb1      85d2           test edx, edx
0x0000deb3      7593           jne 0xde48
0x0000deb5      a802           test al, 2
0x0000deb7      750b           jne 0xdec4
0x0000deb9      81fdffffff7f   cmp ebp, 0x7fffffff
0x0000debf      748c           je 0xde4d
0x0000dec1      83c501         add ebp, 1
0x0000dec4      4939dd         cmp r13, rbx
0x0000dec7      75d7           jne 0xdea0
0x0000dec9      eb82           jmp 0xde4d
0x0000decb      0f1f440000     nop dword [rax + rax]
0x0000ded0      bdffffff7f     mov ebp, 0x7fffffff
0x0000ded5      e973ffffff     jmp 0xde4d
0x0000deda      e8c14dffff     call sym.imp.__stack_chk_fail
0x0000dedf      90             nop
;-- gnu_mbswidth:
0x0000dee0      55             push rbp
0x0000dee1      53             push rbx
0x0000dee2      89f5           mov ebp, esi
0x0000dee4      4889fb         mov rbx, rdi
0x0000dee7      4883ec08       sub rsp, 8
0x0000deeb      e8a04dffff     call sym.imp.strlen
0x0000def0      4883c408       add rsp, 8
0x0000def4      89ea           mov edx, ebp
0x0000def6      4889df         mov rdi, rbx
0x0000def9      5b             pop rbx
0x0000defa      5d             pop rbp
0x0000defb      4889c6         mov rsi, rax
0x0000defe      e91dfeffff     jmp sym.mbsnwidth
0x0000df03      662e0f1f8400.  nop word cs:[rax + rax]
0x0000df0d      0f1f00         nop dword [rax]
;-- num_processors_via_affinity_mask:
0x0000df10      53             push rbx
0x0000df11      31ff           xor edi, edi
0x0000df13      be80000000     mov esi, 0x80
0x0000df18      4881ec900000.  sub rsp, 0x90
0x0000df1f      4889e3         mov rbx, rsp
0x0000df22      4889da         mov rdx, rbx
0x0000df25      64488b042528.  mov rax, qword fs:[0x28]
0x0000df2e      488984248800.  mov qword [rsp + 0x88], rax
0x0000df36      31c0           xor eax, eax
0x0000df38      e8e351ffff     call sym.imp.sched_getaffinity
0x0000df3d      85c0           test eax, eax
0x0000df3f      741f           je 0xdf60
0x0000df41      31c0           xor eax, eax
0x0000df43      488b8c248800.  mov rcx, qword [rsp + 0x88]
0x0000df4b      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000df54      7520           jne 0xdf76
0x0000df56      4881c4900000.  add rsp, 0x90
0x0000df5d      5b             pop rbx
0x0000df5e      c3             ret
0x0000df5f      90             nop
0x0000df60      4889de         mov rsi, rbx
0x0000df63      bf80000000     mov edi, 0x80
0x0000df68      e8e34cffff     call sym.imp.__sched_cpucount
0x0000df6d      4898           cdqe
0x0000df6f      4885c0         test rax, rax
0x0000df72      74cd           je 0xdf41
0x0000df74      ebcd           jmp 0xdf43
0x0000df76      e8254dffff     call sym.imp.__stack_chk_fail
0x0000df7b      0f1f440000     nop dword [rax + rax]
;-- parse_omp_threads.part.0:
0x0000df80      4883ec18       sub rsp, 0x18
0x0000df84      0fb60f         movzx ecx, byte [rdi]
0x0000df87      64488b042528.  mov rax, qword fs:[0x28]
0x0000df90      4889442408     mov qword [rsp + 8], rax
0x0000df95      31c0           xor eax, eax
0x0000df97      84c9           test cl, cl
0x0000df99      7443           je 0xdfde
0x0000df9b      0fbec1         movsx eax, cl
0x0000df9e      83f820         cmp eax, 0x20                           ; "@"
0x0000dfa1      775d           ja 0xe000
0x0000dfa3      48b8003e0000.  movabs rax, 0x100003e00
0x0000dfad      be01000000     mov esi, 1
0x0000dfb2      480fa3c8       bt rax, rcx
0x0000dfb6      4889c2         mov rdx, rax
0x0000dfb9      7218           jb 0xdfd3
0x0000dfbb      eb43           jmp 0xe000
0x0000dfbd      0f1f00         nop dword [rax]
0x0000dfc0      0fbec1         movsx eax, cl
0x0000dfc3      83f820         cmp eax, 0x20                           ; "@"
0x0000dfc6      7738           ja 0xe000
0x0000dfc8      4889f0         mov rax, rsi
0x0000dfcb      48d3e0         shl rax, cl
0x0000dfce      4885d0         test rax, rdx
0x0000dfd1      742d           je 0xe000
0x0000dfd3      4883c701       add rdi, 1
0x0000dfd7      0fb60f         movzx ecx, byte [rdi]
0x0000dfda      84c9           test cl, cl
0x0000dfdc      75e2           jne 0xdfc0
0x0000dfde      31c0           xor eax, eax
0x0000dfe0      488b542408     mov rdx, qword [rsp + 8]
0x0000dfe5      644833142528.  xor rdx, qword fs:[0x28]
0x0000dfee      0f8598000000   jne 0xe08c
0x0000dff4      4883c418       add rsp, 0x18
0x0000dff8      c3             ret
0x0000dff9      0f1f80000000.  nop dword [rax]
0x0000e000      83e930         sub ecx, 0x30
0x0000e003      31c0           xor eax, eax
0x0000e005      80f909         cmp cl, 9
0x0000e008      77d6           ja 0xdfe0
0x0000e00a      ba0a000000     mov edx, 0xa
0x0000e00f      4889e6         mov rsi, rsp
0x0000e012      48c704240000.  mov qword [rsp], 0
0x0000e01a      e86150ffff     call sym.imp.strtoul
0x0000e01f      488b1424       mov rdx, qword [rsp]
0x0000e023      4885d2         test rdx, rdx
0x0000e026      74b6           je 0xdfde
0x0000e028      0fb60a         movzx ecx, byte [rdx]
0x0000e02b      84c9           test cl, cl
0x0000e02d      74b1           je 0xdfe0
0x0000e02f      0fbef1         movsx esi, cl
0x0000e032      83fe20         cmp esi, 0x20                           ; "@"
0x0000e035      7747           ja 0xe07e
0x0000e037      48bf003e0000.  movabs rdi, 0x100003e00
0x0000e041      480fa3cf       bt rdi, rcx
0x0000e045      7337           jae 0xe07e
0x0000e047      4883c201       add rdx, 1
0x0000e04b      41b801000000   mov r8d, 1
0x0000e051      eb14           jmp 0xe067
0x0000e053      0f1f440000     nop dword [rax + rax]
0x0000e058      4c89c6         mov rsi, r8
0x0000e05b      4883c201       add rdx, 1
0x0000e05f      48d3e6         shl rsi, cl
0x0000e062      4885fe         test rsi, rdi
0x0000e065      7417           je 0xe07e
0x0000e067      48891424       mov qword [rsp], rdx
0x0000e06b      0fb60a         movzx ecx, byte [rdx]
0x0000e06e      84c9           test cl, cl
0x0000e070      0f846affffff   je 0xdfe0
0x0000e076      0fbef1         movsx esi, cl
0x0000e079      83fe20         cmp esi, 0x20                           ; "@"
0x0000e07c      76da           jbe 0xe058
0x0000e07e      80f92c         cmp cl, 0x2c
0x0000e081      0f8557ffffff   jne 0xdfde
0x0000e087      e954ffffff     jmp 0xdfe0
0x0000e08c      e80f4cffff     call sym.imp.__stack_chk_fail
0x0000e091      0f1f440000     nop dword [rax + rax]
0x0000e096      662e0f1f8400.  nop word cs:[rax + rax]
;-- num_processors:
0x0000e0a0      55             push rbp
0x0000e0a1      53             push rbx
0x0000e0a2      4883ec08       sub rsp, 8
0x0000e0a6      83ff02         cmp edi, 2
0x0000e0a9      7435           je 0xe0e0
0x0000e0ab      83ff01         cmp edi, 1
0x0000e0ae      0f84fc000000   je 0xe1b0
0x0000e0b4      bf53000000     mov edi, 0x53                           ; 'S'
0x0000e0b9      e8924fffff     call sym.imp.sysconf
0x0000e0be      4883f801       cmp rax, 1
0x0000e0c2      0f84c0000000   je 0xe188
0x0000e0c8      4885c0         test rax, rax
0x0000e0cb      ba01000000     mov edx, 1
0x0000e0d0      480f4ec2       cmovle rax, rdx
0x0000e0d4      4883c408       add rsp, 8
0x0000e0d8      5b             pop rbx
0x0000e0d9      5d             pop rbp
0x0000e0da      c3             ret
0x0000e0db      0f1f440000     nop dword [rax + rax]
0x0000e0e0      488d3d8d7a00.  lea rdi, [0x00015b74]                   ; "OMP_NUM_THREADS"
0x0000e0e7      e8d449ffff     call sym.imp.getenv
0x0000e0ec      4885c0         test rax, rax
0x0000e0ef      7457           je 0xe148
0x0000e0f1      4889c7         mov rdi, rax
0x0000e0f4      48c7c5ffffff.  mov rbp, 0xffffffffffffffff
0x0000e0fb      e880feffff     call sym.parse_omp_threads.part.0
0x0000e100      488d3d7d7a00.  lea rdi, str.OMP_THREAD_LIMIT           ; 0x15b84 ; "OMP_THREAD_LIMIT"
0x0000e107      4889c3         mov rbx, rax
0x0000e10a      e8b149ffff     call sym.imp.getenv
0x0000e10f      4885c0         test rax, rax
0x0000e112      7419           je 0xe12d
0x0000e114      4889c7         mov rdi, rax
0x0000e117      e864feffff     call sym.parse_omp_threads.part.0
0x0000e11c      4889c5         mov rbp, rax
0x0000e11f      4885c0         test rax, rax
0x0000e122      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x0000e129      480f44e8       cmove rbp, rax
0x0000e12d      4885db         test rbx, rbx
0x0000e130      7437           je 0xe169
0x0000e132      4839dd         cmp rbp, rbx
0x0000e135      4889d8         mov rax, rbx
0x0000e138      480f46c5       cmovbe rax, rbp
0x0000e13c      4883c408       add rsp, 8
0x0000e140      5b             pop rbx
0x0000e141      5d             pop rbp
0x0000e142      c3             ret
0x0000e143      0f1f440000     nop dword [rax + rax]
0x0000e148      488d3d357a00.  lea rdi, str.OMP_THREAD_LIMIT           ; 0x15b84 ; "OMP_THREAD_LIMIT"
0x0000e14f      e86c49ffff     call sym.imp.getenv
0x0000e154      4885c0         test rax, rax
0x0000e157      7457           je 0xe1b0
0x0000e159      4889c7         mov rdi, rax
0x0000e15c      e81ffeffff     call sym.parse_omp_threads.part.0
0x0000e161      4885c0         test rax, rax
0x0000e164      4889c5         mov rbp, rax
0x0000e167      7447           je 0xe1b0
0x0000e169      e8a2fdffff     call sym.num_processors_via_affinity_mask
0x0000e16e      4885c0         test rax, rax
0x0000e171      744e           je 0xe1c1
0x0000e173      4839e8         cmp rax, rbp
0x0000e176      480f47c5       cmova rax, rbp
0x0000e17a      4883c408       add rsp, 8
0x0000e17e      5b             pop rbx
0x0000e17f      5d             pop rbp
0x0000e180      c3             ret
0x0000e181      0f1f80000000.  nop dword [rax]
0x0000e188      e883fdffff     call sym.num_processors_via_affinity_mask
0x0000e18d      4889c2         mov rdx, rax
0x0000e190      b801000000     mov eax, 1
0x0000e195      4885d2         test rdx, rdx
0x0000e198      0f8436ffffff   je 0xe0d4
0x0000e19e      4889d0         mov rax, rdx
0x0000e1a1      e922ffffff     jmp 0xe0c8
0x0000e1a6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000e1b0      e85bfdffff     call sym.num_processors_via_affinity_mask
0x0000e1b5      4885c0         test rax, rax
0x0000e1b8      48c7c5ffffff.  mov rbp, 0xffffffffffffffff
0x0000e1bf      75b2           jne 0xe173
0x0000e1c1      bf54000000     mov edi, 0x54                           ; 'T'
0x0000e1c6      e8854effff     call sym.imp.sysconf
0x0000e1cb      4889c2         mov rdx, rax
0x0000e1ce      b801000000     mov eax, 1
0x0000e1d3      4885d2         test rdx, rdx
0x0000e1d6      0f8ef8feffff   jle 0xe0d4
0x0000e1dc      4839ea         cmp rdx, rbp
0x0000e1df      4889e8         mov rax, rbp
0x0000e1e2      480f46c2       cmovbe rax, rdx
0x0000e1e6      e9e9feffff     jmp 0xe0d4
0x0000e1eb      0f1f440000     nop dword [rax + rax]
;-- physmem_total:
0x0000e1f0      4881ec980000.  sub rsp, 0x98
0x0000e1f7      bf55000000     mov edi, 0x55                           ; 'U'
0x0000e1fc      64488b042528.  mov rax, qword fs:[0x28]
0x0000e205      488984248800.  mov qword [rsp + 0x88], rax
0x0000e20d      31c0           xor eax, eax
0x0000e20f      e83c4effff     call sym.imp.sysconf
0x0000e214      660fefc0       pxor xmm0, xmm0
0x0000e218      bf1e000000     mov edi, 0x1e
0x0000e21d      f2480f2ac0     cvtsi2sd xmm0, rax
0x0000e222      f20f11442408   movsd qword [rsp + 8], xmm0
0x0000e228      e8234effff     call sym.imp.sysconf
0x0000e22d      660fefd2       pxor xmm2, xmm2
0x0000e231      f20f10442408   movsd xmm0, qword [rsp + 8]
0x0000e237      660f2ec2       ucomisd xmm0, xmm2
0x0000e23b      7233           jb 0xe270
0x0000e23d      660fefc9       pxor xmm1, xmm1
0x0000e241      f2480f2ac8     cvtsi2sd xmm1, rax
0x0000e246      660f2eca       ucomisd xmm1, xmm2
0x0000e24a      7224           jb 0xe270
0x0000e24c      f20f59c1       mulsd xmm0, xmm1
0x0000e250      488b84248800.  mov rax, qword [rsp + 0x88]
0x0000e258      644833042528.  xor rax, qword fs:[0x28]
0x0000e261      7568           jne 0xe2cb
0x0000e263      4881c4980000.  add rsp, 0x98
0x0000e26a      c3             ret
0x0000e26b      0f1f440000     nop dword [rax + rax]
0x0000e270      488d7c2410     lea rdi, [rsp + 0x10]
0x0000e275      e8264effff     call sym.imp.sysinfo
0x0000e27a      85c0           test eax, eax
0x0000e27c      f20f10051479.  movsd xmm0, qword [0x00015b98]          ; [0x15b98:8]=0x4190000000000000
0x0000e284      75ca           jne 0xe250
0x0000e286      488b442430     mov rax, qword [rsp + 0x30]
0x0000e28b      4885c0         test rax, rax
0x0000e28e      7820           js 0xe2b0
0x0000e290      660fefc0       pxor xmm0, xmm0
0x0000e294      f2480f2ac0     cvtsi2sd xmm0, rax
0x0000e299      8b442478       mov eax, dword [rsp + 0x78]
0x0000e29d      660fefc9       pxor xmm1, xmm1
0x0000e2a1      f2480f2ac8     cvtsi2sd xmm1, rax
0x0000e2a6      eba4           jmp 0xe24c
0x0000e2a8      0f1f84000000.  nop dword [rax + rax]
0x0000e2b0      4889c2         mov rdx, rax
0x0000e2b3      660fefc0       pxor xmm0, xmm0
0x0000e2b7      48d1ea         shr rdx, 1
0x0000e2ba      83e001         and eax, 1
0x0000e2bd      4809c2         or rdx, rax
0x0000e2c0      f2480f2ac2     cvtsi2sd xmm0, rdx
0x0000e2c5      f20f58c0       addsd xmm0, xmm0
0x0000e2c9      ebce           jmp 0xe299
0x0000e2cb      e8d049ffff     call sym.imp.__stack_chk_fail
;-- physmem_available:
0x0000e2d0      4881ec980000.  sub rsp, 0x98
0x0000e2d7      bf56000000     mov edi, 0x56                           ; 'V'
0x0000e2dc      64488b042528.  mov rax, qword fs:[0x28]
0x0000e2e5      488984248800.  mov qword [rsp + 0x88], rax
0x0000e2ed      31c0           xor eax, eax
0x0000e2ef      e85c4dffff     call sym.imp.sysconf
0x0000e2f4      660fefc0       pxor xmm0, xmm0
0x0000e2f8      bf1e000000     mov edi, 0x1e
0x0000e2fd      f2480f2ac0     cvtsi2sd xmm0, rax
0x0000e302      f20f11442408   movsd qword [rsp + 8], xmm0
0x0000e308      e8434dffff     call sym.imp.sysconf
0x0000e30d      660fefd2       pxor xmm2, xmm2
0x0000e311      f20f10442408   movsd xmm0, qword [rsp + 8]
0x0000e317      660f2ec2       ucomisd xmm0, xmm2
0x0000e31b      7233           jb 0xe350
0x0000e31d      660fefc9       pxor xmm1, xmm1
0x0000e321      f2480f2ac8     cvtsi2sd xmm1, rax
0x0000e326      660f2eca       ucomisd xmm1, xmm2
0x0000e32a      7224           jb 0xe350
0x0000e32c      f20f59c1       mulsd xmm0, xmm1
0x0000e330      488b84248800.  mov rax, qword [rsp + 0x88]
0x0000e338      644833042528.  xor rax, qword fs:[0x28]
0x0000e341      0f85a4000000   jne 0xe3eb
0x0000e347      4881c4980000.  add rsp, 0x98
0x0000e34e      c3             ret
0x0000e34f      90             nop
0x0000e350      488d7c2410     lea rdi, [rsp + 0x10]
0x0000e355      e8464dffff     call sym.imp.sysinfo
0x0000e35a      85c0           test eax, eax
0x0000e35c      7542           jne 0xe3a0
0x0000e35e      488b442438     mov rax, qword [rsp + 0x38]
0x0000e363      4885c0         test rax, rax
0x0000e366      7868           js 0xe3d0
0x0000e368      660fefc0       pxor xmm0, xmm0
0x0000e36c      f2480f2ac0     cvtsi2sd xmm0, rax
0x0000e371      488b442448     mov rax, qword [rsp + 0x48]
0x0000e376      4885c0         test rax, rax
0x0000e379      7835           js 0xe3b0
0x0000e37b      660fefc9       pxor xmm1, xmm1
0x0000e37f      f2480f2ac8     cvtsi2sd xmm1, rax
0x0000e384      8b442478       mov eax, dword [rsp + 0x78]
0x0000e388      f20f58c1       addsd xmm0, xmm1
0x0000e38c      660fefc9       pxor xmm1, xmm1
0x0000e390      f2480f2ac8     cvtsi2sd xmm1, rax
0x0000e395      eb95           jmp 0xe32c
0x0000e397      660f1f840000.  nop word [rax + rax]
0x0000e3a0      e84bfeffff     call sym.physmem_total
0x0000e3a5      f20f59051b76.  mulsd xmm0, qword [0x000159c8]
0x0000e3ad      eb81           jmp 0xe330
0x0000e3af      90             nop
0x0000e3b0      4889c2         mov rdx, rax
0x0000e3b3      660fefc9       pxor xmm1, xmm1
0x0000e3b7      48d1ea         shr rdx, 1
0x0000e3ba      83e001         and eax, 1
0x0000e3bd      4809c2         or rdx, rax
0x0000e3c0      f2480f2aca     cvtsi2sd xmm1, rdx
0x0000e3c5      f20f58c9       addsd xmm1, xmm1
0x0000e3c9      ebb9           jmp 0xe384
0x0000e3cb      0f1f440000     nop dword [rax + rax]
0x0000e3d0      4889c2         mov rdx, rax
0x0000e3d3      660fefc0       pxor xmm0, xmm0
0x0000e3d7      48d1ea         shr rdx, 1
0x0000e3da      83e001         and eax, 1
0x0000e3dd      4809c2         or rdx, rax
0x0000e3e0      f2480f2ac2     cvtsi2sd xmm0, rdx
0x0000e3e5      f20f58c0       addsd xmm0, xmm0
0x0000e3e9      eb86           jmp 0xe371
0x0000e3eb      e8b048ffff     call sym.imp.__stack_chk_fail
;-- rpl_pipe2:
0x0000e3f0      8b05aac42000   mov eax, dword [obj.have_pipe2_really.4102] ; ../coreutils-8.31/lib/pipe2.c:41 ; [0x21a8a0:4]=0
0x0000e3f6      4156           push r14
0x0000e3f8      4155           push r13
0x0000e3fa      4154           push r12
0x0000e3fc      55             push rbp
0x0000e3fd      89f5           mov ebp, esi
0x0000e3ff      53             push rbx
0x0000e400      85c0           test eax, eax                           ; ../coreutils-8.31/lib/pipe2.c:56
0x0000e402      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/pipe2.c:41
0x0000e405      448b2f         mov r13d, dword [rdi]                   ; ../coreutils-8.31/lib/pipe2.c:46
0x0000e408      448b7704       mov r14d, dword [rdi + 4]               ; ../coreutils-8.31/lib/pipe2.c:47
0x0000e40c      0f89de000000   jns 0xe4f0                              ; ../coreutils-8.31/lib/pipe2.c:56
0x0000e412      4189ec         mov r12d, ebp                           ; ../coreutils-8.31/lib/pipe2.c:70
0x0000e415      4181e4fff7f7.  and r12d, 0xfff7f7ff
0x0000e41c      0f859e010000   jne 0xe5c0
0x0000e422      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/pipe2.c:107
0x0000e425      e89649ffff     call sym.imp.pipe
0x0000e42a      85c0           test eax, eax
0x0000e42c      0f88a4010000   js 0xe5d6
0x0000e432      f7c500080000   test ebp, 0x800                         ; ../coreutils-8.31/lib/pipe2.c:116
0x0000e438      0f85e2000000   jne 0xe520
0x0000e43e      81e500000800   and ebp, 0x80000                        ; ../coreutils-8.31/lib/pipe2.c:127
0x0000e444      7512           jne 0xe458
0x0000e446      5b             pop rbx                                 ; ../coreutils-8.31/lib/pipe2.c:167
0x0000e447      4489e0         mov eax, r12d
0x0000e44a      5d             pop rbp
0x0000e44b      415c           pop r12
0x0000e44d      415d           pop r13
0x0000e44f      415e           pop r14
0x0000e451      c3             ret
0x0000e452      660f1f440000   nop word [rax + rax]
0x0000e458      8b7b04         mov edi, dword [rbx + 4]                ; ../coreutils-8.31/lib/pipe2.c:131
0x0000e45b      31d2           xor edx, edx
0x0000e45d      31c0           xor eax, eax
0x0000e45f      be01000000     mov esi, 1
0x0000e464      e857470000     call sym.rpl_fcntl
0x0000e469      85c0           test eax, eax
0x0000e46b      784b           js 0xe4b8
0x0000e46d      8b7b04         mov edi, dword [rbx + 4]                ; ../coreutils-8.31/lib/pipe2.c:132
0x0000e470      83c801         or eax, 1
0x0000e473      be02000000     mov esi, 2
0x0000e478      89c2           mov edx, eax
0x0000e47a      31c0           xor eax, eax
0x0000e47c      e83f470000     call sym.rpl_fcntl
0x0000e481      83f8ff         cmp eax, 0xffffffff
0x0000e484      7432           je 0xe4b8
0x0000e486      8b3b           mov edi, dword [rbx]                    ; ../coreutils-8.31/lib/pipe2.c:133
0x0000e488      31d2           xor edx, edx
0x0000e48a      31c0           xor eax, eax
0x0000e48c      be01000000     mov esi, 1
0x0000e491      e82a470000     call sym.rpl_fcntl
0x0000e496      85c0           test eax, eax
0x0000e498      781e           js 0xe4b8
0x0000e49a      8b3b           mov edi, dword [rbx]                    ; ../coreutils-8.31/lib/pipe2.c:134
0x0000e49c      83c801         or eax, 1
0x0000e49f      be02000000     mov esi, 2
0x0000e4a4      89c2           mov edx, eax
0x0000e4a6      31c0           xor eax, eax
0x0000e4a8      e813470000     call sym.rpl_fcntl
0x0000e4ad      83f8ff         cmp eax, 0xffffffff
0x0000e4b0      7594           jne 0xe446
0x0000e4b2      660f1f440000   nop word [rax + rax]
0x0000e4b8      e85346ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/pipe2.c:158
0x0000e4bd      8b3b           mov edi, dword [rbx]                    ; ../coreutils-8.31/lib/pipe2.c:159
0x0000e4bf      448b20         mov r12d, dword [rax]                   ; ../coreutils-8.31/lib/pipe2.c:158
0x0000e4c2      4889c5         mov rbp, rax
0x0000e4c5      e8e648ffff     call sym.imp.close                      ; ../coreutils-8.31/lib/pipe2.c:159
0x0000e4ca      8b7b04         mov edi, dword [rbx + 4]                ; ../coreutils-8.31/lib/pipe2.c:160
0x0000e4cd      e8de48ffff     call sym.imp.close
0x0000e4d2      44892b         mov dword [rbx], r13d                   ; ../coreutils-8.31/lib/pipe2.c:161
0x0000e4d5      44897304       mov dword [rbx + 4], r14d               ; ../coreutils-8.31/lib/pipe2.c:162
0x0000e4d9      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/pipe2.c:163
0x0000e4dd      41bcffffffff   mov r12d, 0xffffffff                    ; ../coreutils-8.31/lib/pipe2.c:164 ; -1
0x0000e4e3      e95effffff     jmp 0xe446
0x0000e4e8      0f1f84000000.  nop dword [rax + rax]
0x0000e4f0      e8bb4bffff     call sym.imp.pipe2                      ; ../coreutils-8.31/lib/pipe2.c:58
0x0000e4f5      85c0           test eax, eax                           ; ../coreutils-8.31/lib/pipe2.c:59
0x0000e4f7      4189c4         mov r12d, eax                           ; ../coreutils-8.31/lib/pipe2.c:58
0x0000e4fa      0f88a0000000   js 0xe5a0                               ; ../coreutils-8.31/lib/pipe2.c:59
0x0000e500      5b             pop rbx
0x0000e501      4489e0         mov eax, r12d
0x0000e504      c70592c32000.  mov dword [obj.have_pipe2_really.4102], 1 ; [0x21a8a0:4]=0
0x0000e50e      5d             pop rbp
0x0000e50f      415c           pop r12
0x0000e511      415d           pop r13
0x0000e513      415e           pop r14
0x0000e515      c3             ret
0x0000e516      662e0f1f8400.  nop word cs:[rax + rax]
0x0000e520      8b7b04         mov edi, dword [rbx + 4]
0x0000e523      31d2           xor edx, edx
0x0000e525      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/pipe2.c:47
0x0000e527      be03000000     mov esi, 3
0x0000e52c      e88f460000     call sym.rpl_fcntl
0x0000e531      85c0           test eax, eax
0x0000e533      7883           js 0xe4b8
0x0000e535      8b7b04         mov edi, dword [rbx + 4]
0x0000e538      80cc08         or ah, 8
0x0000e53b      be04000000     mov esi, 4
0x0000e540      89c2           mov edx, eax
0x0000e542      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/pipe2.c:48
0x0000e544      e877460000     call sym.rpl_fcntl
0x0000e549      83f8ff         cmp eax, 0xffffffff
0x0000e54c      0f8466ffffff   je 0xe4b8
0x0000e552      8b3b           mov edi, dword [rbx]
0x0000e554      31d2           xor edx, edx
0x0000e556      31c0           xor eax, eax
0x0000e558      be03000000     mov esi, 3
0x0000e55d      e85e460000     call sym.rpl_fcntl
0x0000e562      85c0           test eax, eax
0x0000e564      0f884effffff   js 0xe4b8
0x0000e56a      8b3b           mov edi, dword [rbx]
0x0000e56c      80cc08         or ah, 8
0x0000e56f      be04000000     mov esi, 4
0x0000e574      89c2           mov edx, eax
0x0000e576      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/pipe2.c:53
0x0000e578      e843460000     call sym.rpl_fcntl
0x0000e57d      83f8ff         cmp eax, 0xffffffff
0x0000e580      0f8432ffffff   je 0xe4b8
0x0000e586      81e500000800   and ebp, 0x80000
0x0000e58c      0f84b4feffff   je 0xe446
0x0000e592      e9c1feffff     jmp 0xe458
0x0000e597      660f1f840000.  nop word [rax + rax]
0x0000e5a0      e86b45ffff     call sym.imp.__errno_location
0x0000e5a5      833826         cmp dword [rax], 0x26
0x0000e5a8      0f8552ffffff   jne 0xe500
0x0000e5ae      c705e8c22000.  mov dword [obj.have_pipe2_really.4102], 0xffffffff ; [0x21a8a0:4]=0
0x0000e5b8      e955feffff     jmp 0xe412
0x0000e5bd      0f1f00         nop dword [rax]
0x0000e5c0      e84b45ffff     call sym.imp.__errno_location
0x0000e5c5      41bcffffffff   mov r12d, 0xffffffff                    ; -1
0x0000e5cb      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x5d500000
0x0000e5d1      e970feffff     jmp 0xe446                              ; ../coreutils-8.31/lib/pipe2.c:34
0x0000e5d6      41bcffffffff   mov r12d, 0xffffffff                    ; -1
0x0000e5dc      e965feffff     jmp 0xe446
0x0000e5e1      662e0f1f8400.  nop word cs:[rax + rax]
0x0000e5eb      0f1f440000     nop dword [rax + rax]
;-- posix2_version:
0x0000e5f0      53             push rbx                                ; ../coreutils-8.31/lib/posixver.c:41
0x0000e5f1      488d3da87500.  lea rdi, [0x00015ba0]                   ; ../coreutils-8.31/lib/posixver.c:43 ; "_POSIX2_VERSION"
0x0000e5f8      bb69100300     mov ebx, 0x31069
0x0000e5fd      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/posixver.c:41
0x0000e601      64488b042528.  mov rax, qword fs:[0x28]
0x0000e60a      4889442408     mov qword [rsp + 8], rax
0x0000e60f      31c0           xor eax, eax
0x0000e611      e8aa44ffff     call sym.imp.getenv                     ; ../coreutils-8.31/lib/posixver.c:43
0x0000e616      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/posixver.c:45
0x0000e619      7405           je 0xe620
0x0000e61b      803800         cmp byte [rax], 0
0x0000e61e      7520           jne 0xe640
0x0000e620      488b4c2408     mov rcx, qword [rsp + 8]                ; ../coreutils-8.31/lib/posixver.c:54
0x0000e625      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000e62e      89d8           mov eax, ebx
0x0000e630      7547           jne 0xe679
0x0000e632      4883c410       add rsp, 0x10
0x0000e636      5b             pop rbx
0x0000e637      c3             ret
0x0000e638      0f1f84000000.  nop dword [rax + rax]
0x0000e640      ba0a000000     mov edx, 0xa                            ; ../coreutils-8.31/lib/posixver.c:48
0x0000e645      4889e6         mov rsi, rsp
0x0000e648      4889c7         mov rdi, rax
0x0000e64b      e82048ffff     call sym.imp.strtol
0x0000e650      488b1424       mov rdx, qword [rsp]                    ; ../coreutils-8.31/lib/posixver.c:49
0x0000e654      803a00         cmp byte [rdx], 0
0x0000e657      75c7           jne 0xe620
0x0000e659      483d00000080   cmp rax, 0xffffffff80000000             ; ../coreutils-8.31/lib/posixver.c:53
0x0000e65f      7c11           jl 0xe672
0x0000e661      483dffffff7f   cmp rax, 0x7fffffff
0x0000e667      bbffffff7f     mov ebx, 0x7fffffff
0x0000e66c      480f4ed8       cmovle rbx, rax
0x0000e670      ebae           jmp 0xe620
0x0000e672      bb00000080     mov ebx, 0x80000000
0x0000e677      eba7           jmp 0xe620
0x0000e679      e82246ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/posixver.c:54
0x0000e67e      6690           nop
;-- set_program_name:
0x0000e680      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x0000e683      53             push rbx
0x0000e684      7477           je 0xe6fd                               ; ../coreutils-8.31/lib/progname.c:51
0x0000e686      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000e68b      4889fb         mov rbx, rdi
0x0000e68e      e88d46ffff     call sym.imp.strrchr
0x0000e693      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x0000e696      7455           je 0xe6ed
0x0000e698      4c8d4001       lea r8, [rax + 1]
0x0000e69c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000e69f      4829da         sub rdx, rbx
0x0000e6a2      4883fa06       cmp rdx, 6
0x0000e6a6      7e45           jle 0xe6ed
0x0000e6a8      488d70fa       lea rsi, [rax - 6]
0x0000e6ac      488d3d357500.  lea rdi, str..libs                      ; 0x15be8 ; "/.libs/"
0x0000e6b3      b907000000     mov ecx, 7
0x0000e6b8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000e6ba      0f97c2         seta dl
0x0000e6bd      80da00         sbb dl, 0
0x0000e6c0      84d2           test dl, dl
0x0000e6c2      7529           jne 0xe6ed
0x0000e6c4      488d3d257500.  lea rdi, [0x00015bf0]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x0000e6cb      b903000000     mov ecx, 3
0x0000e6d0      4c89c6         mov rsi, r8
0x0000e6d3      4c89c3         mov rbx, r8
0x0000e6d6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000e6d8      0f97c2         seta dl
0x0000e6db      80da00         sbb dl, 0
0x0000e6de      84d2           test dl, dl
0x0000e6e0      750b           jne 0xe6ed
0x0000e6e2      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x0000e6e6      48891dd3ba20.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x21a1c0:8]=0
0x0000e6ed      48891db4c120.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x21a8a8:8]=0
0x0000e6f4      48891dedba20.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x21a1e8:8]=0
0x0000e6fb      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x0000e6fc      c3             ret
0x0000e6fd      488b0dfcba20.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21a200:8]=0
0x0000e704      488d3da57400.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x15bb0 ; "A NULL argv[0] was passed through an exec system call.\n"
0x0000e70b      ba37000000     mov edx, 0x37                           ; '7'
0x0000e710      be01000000     mov esi, 1
0x0000e715      e8d649ffff     call sym.imp.fwrite
0x0000e71a      e8e143ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x0000e71f      90             nop
;-- gettext_quote.part.1:
0x0000e720      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x0000e721      53             push rbx
0x0000e722      4889fd         mov rbp, rdi
0x0000e725      89f3           mov ebx, esi
0x0000e727      4883ec08       sub rsp, 8
0x0000e72b      e8704e0000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x0000e730      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x0000e733      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x0000e736      80fa55         cmp dl, 0x55
0x0000e739      7475           je 0xe7b0
0x0000e73b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x0000e73e      7420           je 0xe760
0x0000e740      488d05bc7400.  lea rax, str.l______l                   ; 0x15c03 ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000e747      488d15646f00.  lea rdx, [0x000156b2]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; "'"
0x0000e74e      83fb09         cmp ebx, 9
0x0000e751      480f45c2       cmovne rax, rdx
0x0000e755      4883c408       add rsp, 8
0x0000e759      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000e75a      5d             pop rbp
0x0000e75b      c3             ret
0x0000e75c      0f1f4000       nop dword [rax]
0x0000e760      0fb65001       movzx edx, byte [rax + 1]
0x0000e764      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x0000e767      80fa42         cmp dl, 0x42
0x0000e76a      75d4           jne 0xe740
0x0000e76c      80780231       cmp byte [rax + 2], 0x31
0x0000e770      75ce           jne 0xe740
0x0000e772      80780338       cmp byte [rax + 3], 0x38
0x0000e776      75c8           jne 0xe740
0x0000e778      80780430       cmp byte [rax + 4], 0x30
0x0000e77c      75c2           jne 0xe740
0x0000e77e      80780533       cmp byte [rax + 5], 0x33
0x0000e782      75bc           jne 0xe740
0x0000e784      80780630       cmp byte [rax + 6], 0x30
0x0000e788      75b6           jne 0xe740
0x0000e78a      80780700       cmp byte [rax + 7], 0
0x0000e78e      75b0           jne 0xe740
0x0000e790      807d0060       cmp byte [rbp], 0x60
0x0000e794      488d05617400.  lea rax, [0x00015bfc]
0x0000e79b      488d155e7400.  lea rdx, [0x00015c00]
0x0000e7a2      480f45c2       cmovne rax, rdx
0x0000e7a6      4883c408       add rsp, 8
0x0000e7aa      5b             pop rbx
0x0000e7ab      5d             pop rbp
0x0000e7ac      c3             ret
0x0000e7ad      0f1f00         nop dword [rax]
0x0000e7b0      0fb65001       movzx edx, byte [rax + 1]
0x0000e7b4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x0000e7b7      80fa54         cmp dl, 0x54
0x0000e7ba      7584           jne 0xe740
0x0000e7bc      0fb65002       movzx edx, byte [rax + 2]
0x0000e7c0      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x0000e7c3      80fa46         cmp dl, 0x46
0x0000e7c6      0f8574ffffff   jne 0xe740
0x0000e7cc      8078032d       cmp byte [rax + 3], 0x2d
0x0000e7d0      0f856affffff   jne 0xe740
0x0000e7d6      80780438       cmp byte [rax + 4], 0x38
0x0000e7da      0f8560ffffff   jne 0xe740
0x0000e7e0      80780500       cmp byte [rax + 5], 0
0x0000e7e4      0f8556ffffff   jne 0xe740
0x0000e7ea      807d0060       cmp byte [rbp], 0x60
0x0000e7ee      488d05ff7300.  lea rax, [0x00015bf4]                   ; "\u2018"
0x0000e7f5      488d15fc7300.  lea rdx, [0x00015bf8]                   ; "\u2019"
0x0000e7fc      480f45c2       cmovne rax, rdx
0x0000e800      4883c408       add rsp, 8
0x0000e804      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x0000e805      5d             pop rbp
0x0000e806      c3             ret
0x0000e807      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x0000e810      4157           push r15
0x0000e812      4156           push r14
0x0000e814      4589c7         mov r15d, r8d
0x0000e817      4155           push r13
0x0000e819      4154           push r12
0x0000e81b      4989fe         mov r14, rdi
0x0000e81e      55             push rbp
0x0000e81f      53             push rbx
0x0000e820      4489cb         mov ebx, r9d
0x0000e823      4989f5         mov r13, rsi
0x0000e826      4889cd         mov rbp, rcx
0x0000e829      83e302         and ebx, 2
0x0000e82c      4881ecb80000.  sub rsp, 0xb8
0x0000e833      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x0000e83b      4889542410     mov qword [rsp + 0x10], rdx
0x0000e840      4489442408     mov dword [rsp + 8], r8d
0x0000e845      44894c2478     mov dword [rsp + 0x78], r9d
0x0000e84a      4889442420     mov qword [rsp + 0x20], rax
0x0000e84f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x0000e857      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000e85c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x0000e864      4889442460     mov qword [rsp + 0x60], rax
0x0000e869      64488b042528.  mov rax, qword fs:[0x28]
0x0000e872      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000e87a      31c0           xor eax, eax
0x0000e87c      e8ff43ffff     call sym.imp.__ctype_get_mb_cur_max
0x0000e881      4183ff0a       cmp r15d, 0xa
0x0000e885      4889442458     mov qword [rsp + 0x58], rax
0x0000e88a      0f87af110000   ja 0xfa3f
0x0000e890      488d0dc97300.  lea rcx, [0x00015c60]
0x0000e897      4489fa         mov edx, r15d
0x0000e89a      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000e89e      4801c8         add rax, rcx
0x0000e8a1      ffe0           jmp rax
0x0000e8a3      c644240e01     mov byte [rsp + 0xe], 1
0x0000e8a8      c644247c00     mov byte [rsp + 0x7c], 0
0x0000e8ad      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x0000e8b0      48c744245000.  mov qword [rsp + 0x50], 0
0x0000e8b9      c644240f01     mov byte [rsp + 0xf], 1
0x0000e8be      c644240d00     mov byte [rsp + 0xd], 0
0x0000e8c3      488d05e86d00.  lea rax, [0x000156b2]                   ; "'"
0x0000e8ca      48c744241801.  mov qword [rsp + 0x18], 1
0x0000e8d3      4531ff         xor r15d, r15d
0x0000e8d6      c74424080200.  mov dword [rsp + 8], 2
0x0000e8de      4889442448     mov qword [rsp + 0x48], rax
0x0000e8e3      4531db         xor r11d, r11d
0x0000e8e6      4889e8         mov rax, rbp
0x0000e8e9      4589e0         mov r8d, r12d
0x0000e8ec      4c89dd         mov rbp, r11
0x0000e8ef      4989c3         mov r11, rax
0x0000e8f2      660f1f440000   nop word [rax + rax]
0x0000e8f8      4939eb         cmp r11, rbp
0x0000e8fb      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x0000e8ff      4983fbff       cmp r11, 0xffffffffffffffff
0x0000e903      750d           jne 0xe912
0x0000e905      488b442410     mov rax, qword [rsp + 0x10]
0x0000e90a      803c2800       cmp byte [rax + rbp], 0
0x0000e90e      410f95c4       setne r12b
0x0000e912      4584e4         test r12b, r12b
0x0000e915      0f8455060000   je 0xef70
0x0000e91b      837c240802     cmp dword [rsp + 8], 2
0x0000e920      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000e925      4c8d0c2f       lea r9, [rdi + rbp]
0x0000e929      0f95c0         setne al
0x0000e92c      2244240d       and al, byte [rsp + 0xd]
0x0000e930      4189c2         mov r10d, eax
0x0000e933      0f84a7000000   je 0xe9e0
0x0000e939      488b442418     mov rax, qword [rsp + 0x18]
0x0000e93e      4885c0         test rax, rax
0x0000e941      0f8429040000   je 0xed70
0x0000e947      4983fbff       cmp r11, 0xffffffffffffffff
0x0000e94b      488d5c0500     lea rbx, [rbp + rax]
0x0000e950      752e           jne 0xe980
0x0000e952      4883f801       cmp rax, 1
0x0000e956      7628           jbe 0xe980
0x0000e958      4488442438     mov byte [rsp + 0x38], r8b
0x0000e95d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x0000e962      4c894c2428     mov qword [rsp + 0x28], r9
0x0000e967      e82443ffff     call sym.imp.strlen
0x0000e96c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000e972      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x0000e978      4989c3         mov r11, rax
0x0000e97b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x0000e980      4c39db         cmp rbx, r11
0x0000e983      4488542428     mov byte [rsp + 0x28], r10b
0x0000e988      0f87b2050000   ja 0xef40
0x0000e98e      488b542418     mov rdx, qword [rsp + 0x18]
0x0000e993      488b742448     mov rsi, qword [rsp + 0x48]
0x0000e998      4c89cf         mov rdi, r9
0x0000e99b      4c895c2440     mov qword [rsp + 0x40], r11
0x0000e9a0      4488442438     mov byte [rsp + 0x38], r8b
0x0000e9a5      4c894c2430     mov qword [rsp + 0x30], r9
0x0000e9aa      e84144ffff     call sym.imp.memcmp
0x0000e9af      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x0000e9b1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x0000e9b6      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000e9bc      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x0000e9c1      0f8579050000   jne 0xef40
0x0000e9c7      807c240f00     cmp byte [rsp + 0xf], 0
0x0000e9cc      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x0000e9d2      0f857d0f0000   jne 0xf955
0x0000e9d8      0f1f84000000.  nop dword [rax + rax]
0x0000e9e0      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x0000e9e4      80fb7e         cmp bl, 0x7e
0x0000e9e7      0f871b030000   ja 0xed08
0x0000e9ed      488d0d987200.  lea rcx, [0x00015c8c]
0x0000e9f4      0fb6d3         movzx edx, bl
0x0000e9f7      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000e9fb      4801c8         add rax, rcx
0x0000e9fe      ffe0           jmp rax
0x0000ea00      4531d2         xor r10d, r10d
0x0000ea03      4983fb01       cmp r11, 1
0x0000ea07      0f95c0         setne al
0x0000ea0a      4983fbff       cmp r11, 0xffffffffffffffff
0x0000ea0e      750c           jne 0xea1c
0x0000ea10      488b442410     mov rax, qword [rsp + 0x10]
0x0000ea15      80780100       cmp byte [rax + 1], 0
0x0000ea19      0f95c0         setne al
0x0000ea1c      837c240802     cmp dword [rsp + 8], 2
0x0000ea21      0f94c2         sete dl
0x0000ea24      84c0           test al, al
0x0000ea26      0f844c020000   je 0xec78
0x0000ea2c      4531e4         xor r12d, r12d
0x0000ea2f      31c0           xor eax, eax
0x0000ea31      0f1f80000000.  nop dword [rax]
0x0000ea38      807c240d01     cmp byte [rsp + 0xd], 1
0x0000ea3d      0f850f010000   jne 0xeb52
0x0000ea43      84d2           test dl, dl
0x0000ea45      0f8507010000   jne 0xeb52
0x0000ea4b      488b742420     mov rsi, qword [rsp + 0x20]
0x0000ea50      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x0000ea53      7414           je 0xea69
0x0000ea55      89da           mov edx, ebx
0x0000ea57      c0ea05         shr dl, 5
0x0000ea5a      0fb6d2         movzx edx, dl
0x0000ea5d      8b1496         mov edx, dword [rsi + rdx*4]
0x0000ea60      0fa3da         bt edx, ebx
0x0000ea63      0f824a010000   jb 0xebb3
0x0000ea69      4584d2         test r10b, r10b
0x0000ea6c      0f8541010000   jne 0xebb3
0x0000ea72      83f001         xor eax, 1
0x0000ea75      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x0000ea79      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000ea7c      84c0           test al, al
0x0000ea7e      7420           je 0xeaa0                               ; ../coreutils-8.31/lib/quotearg.c:338
0x0000ea80      4d39fd         cmp r13, r15
0x0000ea83      7605           jbe 0xea8a
0x0000ea85      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000ea8a      498d4701       lea rax, [r15 + 1]
0x0000ea8e      4939c5         cmp r13, rax
0x0000ea91      7606           jbe 0xea99
0x0000ea93      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000ea99      4983c702       add r15, 2
0x0000ea9d      4531c0         xor r8d, r8d
0x0000eaa0      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x0000eaa3      7304           jae 0xeaa9                              ; ../coreutils-8.31/lib/quotearg.c:68
0x0000eaa5      43881c3e       mov byte [r14 + r15], bl
0x0000eaa9      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x0000eaae      4983c701       add r15, 1
0x0000eab2      b800000000     mov eax, 0
0x0000eab7      4584e4         test r12b, r12b
0x0000eaba      0f44f8         cmove edi, eax
0x0000eabd      40887c240e     mov byte [rsp + 0xe], dil
0x0000eac2      e931feffff     jmp 0xe8f8
0x0000eac7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x0000ead0      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x0000ead3      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x0000ead7      83f802         cmp eax, 2
0x0000eada      0f84b8050000   je 0xf098
0x0000eae0      83f805         cmp eax, 5
0x0000eae3      0f846f050000   je 0xf058
0x0000eae9      83f802         cmp eax, 2
0x0000eaec      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000eaf1      0f94c2         sete dl
0x0000eaf4      4531e4         xor r12d, r12d
0x0000eaf7      31c0           xor eax, eax
0x0000eaf9      e93affffff     jmp 0xea38
0x0000eafe      6690           nop
0x0000eb00      4531d2         xor r10d, r10d
0x0000eb03      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x0000eb08      0f8402050000   je 0xf010
0x0000eb0e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x0000eb13      31d2           xor edx, edx
0x0000eb15      31c0           xor eax, eax
0x0000eb17      bb27000000     mov ebx, 0x27                           ; '''
0x0000eb1c      e917ffffff     jmp 0xea38
0x0000eb21      0f1f80000000.  nop dword [rax]
0x0000eb28      ba09000000     mov edx, 9
0x0000eb2d      bb74000000     mov ebx, 0x74                           ; 't'
0x0000eb32      837c240802     cmp dword [rsp + 8], 2
0x0000eb37      0f94c0         sete al
0x0000eb3a      2244240f       and al, byte [rsp + 0xf]
0x0000eb3e      0f854a010000   jne 0xec8e
0x0000eb44      807c240d00     cmp byte [rsp + 0xd], 0
0x0000eb49      7565           jne 0xebb0
0x0000eb4b      89d3           mov ebx, edx
0x0000eb4d      4531e4         xor r12d, r12d
0x0000eb50      31c0           xor eax, eax
0x0000eb52      807c240f00     cmp byte [rsp + 0xf], 0
0x0000eb57      0f85eefeffff   jne 0xea4b
0x0000eb5d      e907ffffff     jmp 0xea69                              ; ../coreutils-8.31/lib/quotearg.c:210
0x0000eb62      660f1f440000   nop word [rax + rax]
0x0000eb68      ba08000000     mov edx, 8
0x0000eb6d      bb62000000     mov ebx, 0x62                           ; 'b'
0x0000eb72      ebd0           jmp 0xeb44
0x0000eb74      0f1f4000       nop dword [rax]
0x0000eb78      837c240802     cmp dword [rsp + 8], 2
0x0000eb7d      0f84cd030000   je 0xef50
0x0000eb83      807c240d00     cmp byte [rsp + 0xd], 0
0x0000eb88      0f8412020000   je 0xeda0
0x0000eb8e      807c240f00     cmp byte [rsp + 0xf], 0
0x0000eb93      0f8407020000   je 0xeda0
0x0000eb99      48837c241800   cmp qword [rsp + 0x18], 0
0x0000eb9f      0f85b6030000   jne 0xef5b
0x0000eba5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000ebaa      660f1f440000   nop word [rax + rax]
0x0000ebb0      4531e4         xor r12d, r12d
0x0000ebb3      837c240802     cmp dword [rsp + 8], 2
0x0000ebb8      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x0000ebbb      807c240f00     cmp byte [rsp + 0xf], 0
0x0000ebc0      89d0           mov eax, edx
0x0000ebc2      0f8550080000   jne 0xf418
0x0000ebc8      4489c0         mov eax, r8d
0x0000ebcb      83f001         xor eax, 1
0x0000ebce      20d0           and al, dl
0x0000ebd0      742f           je 0xec01
0x0000ebd2      4d39fd         cmp r13, r15
0x0000ebd5      7605           jbe 0xebdc
0x0000ebd7      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000ebdc      498d5701       lea rdx, [r15 + 1]
0x0000ebe0      4939d5         cmp r13, rdx
0x0000ebe3      7606           jbe 0xebeb
0x0000ebe5      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000ebeb      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x0000ebef      4939d5         cmp r13, rdx
0x0000ebf2      7606           jbe 0xebfa
0x0000ebf4      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000ebfa      4983c703       add r15, 3
0x0000ebfe      4189c0         mov r8d, eax
0x0000ec01      4d39fd         cmp r13, r15
0x0000ec04      7605           jbe 0xec0b
0x0000ec06      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000ec0b      4983c701       add r15, 1
0x0000ec0f      4883c501       add rbp, 1
0x0000ec13      e988feffff     jmp 0xeaa0
0x0000ec18      0f1f84000000.  nop dword [rax + rax]
0x0000ec20      807c240d00     cmp byte [rsp + 0xd], 0
0x0000ec25      0f85c8010000   jne 0xedf3
0x0000ec2b      31d2           xor edx, edx
0x0000ec2d      f644247801     test byte [rsp + 0x78], 1
0x0000ec32      0f8413ffffff   je 0xeb4b
0x0000ec38      4883c501       add rbp, 1
0x0000ec3c      e9b7fcffff     jmp 0xe8f8
0x0000ec41      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x0000ec48      837c240802     cmp dword [rsp + 8], 2
0x0000ec4d      0f94c2         sete dl
0x0000ec50      31c0           xor eax, eax
0x0000ec52      e9e1fdffff     jmp 0xea38
0x0000ec57      660f1f840000.  nop word [rax + rax]
0x0000ec60      ba07000000     mov edx, 7
0x0000ec65      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000ec6a      e9d5feffff     jmp 0xeb44
0x0000ec6f      90             nop
0x0000ec70      837c240802     cmp dword [rsp + 8], 2
0x0000ec75      0f94c2         sete dl
0x0000ec78      4885ed         test rbp, rbp
0x0000ec7b      0f85abfdffff   jne 0xea2c
0x0000ec81      0fb644240f     movzx eax, byte [rsp + 0xf]
0x0000ec86      20d0           and al, dl
0x0000ec88      0f84aafdffff   je 0xea38
0x0000ec8e      4c89dd         mov rbp, r11
0x0000ec91      c74424080200.  mov dword [rsp + 8], 2
0x0000ec99      e9fb060000     jmp 0xf399
0x0000ec9e      6690           nop
0x0000eca0      837c240802     cmp dword [rsp + 8], 2
0x0000eca5      0f94c2         sete dl
0x0000eca8      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x0000ecab      ebd4           jmp 0xec81
0x0000ecad      0f1f00         nop dword [rax]
0x0000ecb0      837c240802     cmp dword [rsp + 8], 2
0x0000ecb5      bb20000000     mov ebx, 0x20                           ; "@"
0x0000ecba      0f94c2         sete dl
0x0000ecbd      ebc2           jmp 0xec81
0x0000ecbf      90             nop
0x0000ecc0      ba0d000000     mov edx, 0xd
0x0000ecc5      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000ecca      e963feffff     jmp 0xeb32
0x0000eccf      90             nop
0x0000ecd0      ba0c000000     mov edx, 0xc
0x0000ecd5      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000ecda      e965feffff     jmp 0xeb44
0x0000ecdf      90             nop
0x0000ece0      ba0b000000     mov edx, 0xb
0x0000ece5      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000ecea      e955feffff     jmp 0xeb44
0x0000ecef      90             nop
0x0000ecf0      ba0a000000     mov edx, 0xa
0x0000ecf5      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x0000ecfa      e933feffff     jmp 0xeb32
0x0000ecff      90             nop
0x0000ed00      4531d2         xor r10d, r10d
0x0000ed03      0f1f440000     nop dword [rax + rax]
0x0000ed08      48837c245801   cmp qword [rsp + 0x58], 1
0x0000ed0e      0f85a4030000   jne 0xf0b8
0x0000ed14      4c895c2438     mov qword [rsp + 0x38], r11
0x0000ed19      4488442430     mov byte [rsp + 0x30], r8b
0x0000ed1e      4488542428     mov byte [rsp + 0x28], r10b
0x0000ed23      e88844ffff     call sym.imp.__ctype_b_loc
0x0000ed28      488b08         mov rcx, qword [rax]
0x0000ed2b      0fb6d3         movzx edx, bl
0x0000ed2e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x0000ed34      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x0000ed3a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000ed3f      bf01000000     mov edi, 1
0x0000ed44      0fb70451       movzx eax, word [rcx + rdx*2]
0x0000ed48      66250040       and ax, 0x4000
0x0000ed4c      410f95c4       setne r12b
0x0000ed50      0f94c0         sete al
0x0000ed53      2244240d       and al, byte [rsp + 0xd]
0x0000ed57      84c0           test al, al
0x0000ed59      0f8592090000   jne 0xf6f1
0x0000ed5f      837c240802     cmp dword [rsp + 8], 2
0x0000ed64      0f94c2         sete dl
0x0000ed67      e9ccfcffff     jmp 0xea38
0x0000ed6c      0f1f4000       nop dword [rax]
0x0000ed70      410fb619       movzx ebx, byte [r9]
0x0000ed74      80fb7e         cmp bl, 0x7e
0x0000ed77      7787           ja 0xed00
0x0000ed79      488d0d087100.  lea rcx, [0x00015e88]
0x0000ed80      0fb6d3         movzx edx, bl
0x0000ed83      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000ed87      4801c8         add rax, rcx
0x0000ed8a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000ed8c      0f1f4000       nop dword [rax]
0x0000ed90      4531d2         xor r10d, r10d
0x0000ed93      807c240d00     cmp byte [rsp + 0xd], 0
0x0000ed98      0f85f0fdffff   jne 0xeb8e
0x0000ed9e      6690           nop
0x0000eda0      ba5c000000     mov edx, 0x5c                           ; '\'
0x0000eda5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000edaa      e995fdffff     jmp 0xeb44
0x0000edaf      90             nop
0x0000edb0      ba0c000000     mov edx, 0xc
0x0000edb5      4531d2         xor r10d, r10d
0x0000edb8      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000edbd      e982fdffff     jmp 0xeb44
0x0000edc2      660f1f440000   nop word [rax + rax]
0x0000edc8      ba0a000000     mov edx, 0xa
0x0000edcd      4531d2         xor r10d, r10d
0x0000edd0      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x0000edd5      e958fdffff     jmp 0xeb32
0x0000edda      660f1f440000   nop word [rax + rax]
0x0000ede0      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000ede5      e9c6fdffff     jmp 0xebb0
0x0000edea      660f1f440000   nop word [rax + rax]
0x0000edf0      4531d2         xor r10d, r10d
0x0000edf3      837c240802     cmp dword [rsp + 8], 2
0x0000edf8      0f94c2         sete dl
0x0000edfb      807c240f00     cmp byte [rsp + 0xf], 0
0x0000ee00      0f85940b0000   jne 0xf99a
0x0000ee06      4489c0         mov eax, r8d
0x0000ee09      4c89f9         mov rcx, r15
0x0000ee0c      83f001         xor eax, 1
0x0000ee0f      20d0           and al, dl
0x0000ee11      742d           je 0xee40
0x0000ee13      4d39fd         cmp r13, r15
0x0000ee16      7605           jbe 0xee1d
0x0000ee18      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000ee1d      498d4f01       lea rcx, [r15 + 1]
0x0000ee21      4939cd         cmp r13, rcx
0x0000ee24      7606           jbe 0xee2c
0x0000ee26      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000ee2c      498d4f02       lea rcx, [r15 + 2]
0x0000ee30      4939cd         cmp r13, rcx
0x0000ee33      0f8730060000   ja 0xf469
0x0000ee39      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000ee3d      4189c0         mov r8d, eax
0x0000ee40      4939cd         cmp r13, rcx
0x0000ee43      7605           jbe 0xee4a
0x0000ee45      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000ee4a      837c240802     cmp dword [rsp + 8], 2
0x0000ee4f      4c8d7901       lea r15, [rcx + 1]
0x0000ee53      0f8400060000   je 0xf459
0x0000ee59      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000ee5d      4c39d8         cmp rax, r11
0x0000ee60      7319           jae 0xee7b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x0000ee62      488b442410     mov rax, qword [rsp + 0x10]
0x0000ee67      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000ee6c      88442428       mov byte [rsp + 0x28], al
0x0000ee70      83e830         sub eax, 0x30
0x0000ee73      3c09           cmp al, 9
0x0000ee75      0f862e080000   jbe 0xf6a9
0x0000ee7b      4489e0         mov eax, r12d
0x0000ee7e      bb30000000     mov ebx, 0x30                           ; '0'
0x0000ee83      4531e4         xor r12d, r12d
0x0000ee86      e9adfbffff     jmp 0xea38                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000ee8b      0f1f440000     nop dword [rax + rax]
0x0000ee90      837c240802     cmp dword [rsp + 8], 2
0x0000ee95      4589d4         mov r12d, r10d
0x0000ee98      0f94c2         sete dl
0x0000ee9b      4531d2         xor r10d, r10d
0x0000ee9e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x0000eea0      e993fbffff     jmp 0xea38                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x0000eea5      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x0000eea8      837c240802     cmp dword [rsp + 8], 2
0x0000eead      0f94c2         sete dl
0x0000eeb0      4531d2         xor r10d, r10d
0x0000eeb3      e9c0fdffff     jmp 0xec78
0x0000eeb8      0f1f84000000.  nop dword [rax + rax]
0x0000eec0      837c240802     cmp dword [rsp + 8], 2
0x0000eec5      0f94c2         sete dl
0x0000eec8      4531d2         xor r10d, r10d
0x0000eecb      4531e4         xor r12d, r12d
0x0000eece      e9aefdffff     jmp 0xec81
0x0000eed3      0f1f440000     nop dword [rax + rax]
0x0000eed8      837c240802     cmp dword [rsp + 8], 2
0x0000eedd      4589d4         mov r12d, r10d
0x0000eee0      bb20000000     mov ebx, 0x20                           ; "@"
0x0000eee5      0f94c2         sete dl
0x0000eee8      4531d2         xor r10d, r10d
0x0000eeeb      e991fdffff     jmp 0xec81
0x0000eef0      ba0d000000     mov edx, 0xd
0x0000eef5      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x0000eef8      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000eefd      e930fcffff     jmp 0xeb32
0x0000ef02      660f1f440000   nop word [rax + rax]
0x0000ef08      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000ef0d      e99efcffff     jmp 0xebb0
0x0000ef12      660f1f440000   nop word [rax + rax]
0x0000ef18      ba09000000     mov edx, 9
0x0000ef1d      4531d2         xor r10d, r10d
0x0000ef20      bb74000000     mov ebx, 0x74                           ; 't'
0x0000ef25      e908fcffff     jmp 0xeb32
0x0000ef2a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x0000ef30      bb62000000     mov ebx, 0x62                           ; 'b'
0x0000ef35      e976fcffff     jmp 0xebb0
0x0000ef3a      660f1f440000   nop word [rax + rax]
0x0000ef40      4531d2         xor r10d, r10d
0x0000ef43      e998faffff     jmp 0xe9e0
0x0000ef48      0f1f84000000.  nop dword [rax + rax]
0x0000ef50      807c240f00     cmp byte [rsp + 0xf], 0
0x0000ef55      0f8565090000   jne 0xf8c0
0x0000ef5b      4883c501       add rbp, 1
0x0000ef5f      4489c0         mov eax, r8d
0x0000ef62      4531e4         xor r12d, r12d
0x0000ef65      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000ef6a      e90dfbffff     jmp 0xea7c
0x0000ef6f      90             nop
0x0000ef70      837c240802     cmp dword [rsp + 8], 2
0x0000ef75      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000ef7a      4589c4         mov r12d, r8d
0x0000ef7d      4c89dd         mov rbp, r11
0x0000ef80      0f94c2         sete dl
0x0000ef83      89d8           mov eax, ebx
0x0000ef85      4d85ff         test r15, r15
0x0000ef88      0f94c1         sete cl
0x0000ef8b      21d0           and eax, edx
0x0000ef8d      20c8           and al, cl
0x0000ef8f      0f85610a0000   jne 0xf9f6                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x0000ef95      89d8           mov eax, ebx
0x0000ef97      83f001         xor eax, 1
0x0000ef9a      20c2           and dl, al
0x0000ef9c      0f846a090000   je 0xf90c
0x0000efa2      807c247c00     cmp byte [rsp + 0x7c], 0
0x0000efa7      0f845d090000   je 0xf90a
0x0000efad      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x0000efb2      0f85f5090000   jne 0xf9ad
0x0000efb8      4d85ed         test r13, r13
0x0000efbb      0f94c0         sete al
0x0000efbe      48837c245000   cmp qword [rsp + 0x50], 0
0x0000efc4      0f95c2         setne dl
0x0000efc7      20d0           and al, dl
0x0000efc9      0f841d0a0000   je 0xf9ec
0x0000efcf      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000efd4      488d1dd76600.  lea rbx, [0x000156b2]                   ; "'"
0x0000efdb      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x0000efdf      c74424080200.  mov dword [rsp + 8], 2
0x0000efe7      41bf01000000   mov r15d, 1
0x0000efed      48c744241801.  mov qword [rsp + 0x18], 1
0x0000eff6      c644240f00     mov byte [rsp + 0xf], 0
0x0000effb      48895c2448     mov qword [rsp + 0x48], rbx
0x0000f000      8844247c       mov byte [rsp + 0x7c], al
0x0000f004      e9daf8ffff     jmp 0xe8e3
0x0000f009      0f1f80000000.  nop dword [rax]
0x0000f010      807c240f00     cmp byte [rsp + 0xf], 0
0x0000f015      0f85a5080000   jne 0xf8c0
0x0000f01b      4d85ed         test r13, r13
0x0000f01e      0f84fc030000   je 0xf420                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x0000f024      31d2           xor edx, edx
0x0000f026      48837c245000   cmp qword [rsp + 0x50], 0
0x0000f02c      0f85ee030000   jne 0xf420                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000f032      4c896c2450     mov qword [rsp + 0x50], r13
0x0000f037      4983c703       add r15, 3
0x0000f03b      31c0           xor eax, eax
0x0000f03d      448864247c     mov byte [rsp + 0x7c], r12b
0x0000f042      4531c0         xor r8d, r8d
0x0000f045      4989d5         mov r13, rdx
0x0000f048      bb27000000     mov ebx, 0x27                           ; '''
0x0000f04d      e917faffff     jmp 0xea69
0x0000f052      660f1f440000   nop word [rax + rax]
0x0000f058      f644247804     test byte [rsp + 0x78], 4
0x0000f05d      7421           je 0xf080
0x0000f05f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x0000f063      4c39d9         cmp rcx, r11
0x0000f066      7318           jae 0xf080
0x0000f068      488b442410     mov rax, qword [rsp + 0x10]
0x0000f06d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x0000f072      0f848a070000   je 0xf802
0x0000f078      0f1f84000000.  nop dword [rax + rax]
0x0000f080      31d2           xor edx, edx
0x0000f082      4531e4         xor r12d, r12d
0x0000f085      31c0           xor eax, eax
0x0000f087      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000f08c      e9a7f9ffff     jmp 0xea38
0x0000f091      0f1f80000000.  nop dword [rax]
0x0000f098      807c240f00     cmp byte [rsp + 0xf], 0
0x0000f09d      0f851d080000   jne 0xf8c0
0x0000f0a3      4531e4         xor r12d, r12d
0x0000f0a6      31c0           xor eax, eax
0x0000f0a8      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000f0ad      e9b7f9ffff     jmp 0xea69                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x0000f0b2      660f1f440000   nop word [rax + rax]
0x0000f0b8      488d8424a000.  lea rax, [rsp + 0xa0]
0x0000f0c0      4983fbff       cmp r11, 0xffffffffffffffff
0x0000f0c4      48c78424a000.  mov qword [rsp + 0xa0], 0
0x0000f0d0      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x0000f0d5      752d           jne 0xf104
0x0000f0d7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000f0dc      4488442440     mov byte [rsp + 0x40], r8b
0x0000f0e1      4488542438     mov byte [rsp + 0x38], r10b
0x0000f0e6      4c894c2430     mov qword [rsp + 0x30], r9
0x0000f0eb      e8a03bffff     call sym.imp.strlen
0x0000f0f0      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x0000f0f6      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x0000f0fc      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x0000f0ff      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x0000f104      488d84249c00.  lea rax, [rsp + 0x9c]
0x0000f10c      31c9           xor ecx, ecx
0x0000f10e      885c247e       mov byte [rsp + 0x7e], bl
0x0000f112      448844247d     mov byte [rsp + 0x7d], r8b
0x0000f117      4889cb         mov rbx, rcx
0x0000f11a      4c898c248800.  mov qword [rsp + 0x88], r9
0x0000f122      4889442438     mov qword [rsp + 0x38], rax
0x0000f127      448854247f     mov byte [rsp + 0x7f], r10b
0x0000f12c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x0000f134      4c89742440     mov qword [rsp + 0x40], r14
0x0000f139      4c896c2470     mov qword [rsp + 0x70], r13
0x0000f13e      4c895c2430     mov qword [rsp + 0x30], r11
0x0000f143      488b442410     mov rax, qword [rsp + 0x10]
0x0000f148      4c8d741d00     lea r14, [rbp + rbx]
0x0000f14d      488b542430     mov rdx, qword [rsp + 0x30]
0x0000f152      488b4c2428     mov rcx, qword [rsp + 0x28]
0x0000f157      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000f15c      4e8d2c30       lea r13, [rax + r14]
0x0000f160      4c29f2         sub rdx, r14
0x0000f163      4c89ee         mov rsi, r13
0x0000f166      e8753d0000     call sym.rpl_mbrtowc
0x0000f16b      4885c0         test rax, rax
0x0000f16e      4989c7         mov r15, rax
0x0000f171      744e           je 0xf1c1
0x0000f173      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000f177      0f8418060000   je 0xf795
0x0000f17d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0000f181      0f849a050000   je 0xf721
0x0000f187      837c240802     cmp dword [rsp + 8], 2
0x0000f18c      0f94c0         sete al
0x0000f18f      2244240f       and al, byte [rsp + 0xf]
0x0000f193      0f8597010000   jne 0xf330
0x0000f199      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x0000f1a0      e8bb3fffff     call sym.imp.iswprint
0x0000f1a5      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000f1aa      85c0           test eax, eax
0x0000f1ac      b800000000     mov eax, 0
0x0000f1b1      440f44e0       cmove r12d, eax
0x0000f1b5      4c01fb         add rbx, r15
0x0000f1b8      e8833fffff     call sym.imp.mbsinit
0x0000f1bd      85c0           test eax, eax
0x0000f1bf      7482           je 0xf143
0x0000f1c1      4489e2         mov edx, r12d
0x0000f1c4      4889df         mov rdi, rbx
0x0000f1c7      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000f1cd      83f201         xor edx, 1
0x0000f1d0      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000f1d5      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000f1db      2254240d       and dl, byte [rsp + 0xd]
0x0000f1df      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x0000f1e7      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000f1ec      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000f1f1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x0000f1f6      4883ff01       cmp rdi, 1
0x0000f1fa      0f86fb050000   jbe 0xf7fb
0x0000f200      4889f9         mov rcx, rdi
0x0000f203      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x0000f205      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x0000f20b      4801e9         add rcx, rbp
0x0000f20e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000f213      e9b6000000     jmp 0xf2ce
0x0000f218      0f1f84000000.  nop dword [rax + rax]
0x0000f220      837c240802     cmp dword [rsp + 8], 2
0x0000f225      0f94c0         sete al
0x0000f228      4584c9         test r9b, r9b
0x0000f22b      0f85af040000   jne 0xf6e0
0x0000f231      4489c6         mov esi, r8d
0x0000f234      83f601         xor esi, 1
0x0000f237      4020f0         and al, sil
0x0000f23a      742f           je 0xf26b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x0000f23c      4d39fd         cmp r13, r15
0x0000f23f      7605           jbe 0xf246
0x0000f241      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000f246      498d7701       lea rsi, [r15 + 1]
0x0000f24a      4939f5         cmp r13, rsi
0x0000f24d      7606           jbe 0xf255                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x0000f24f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000f255      498d7702       lea rsi, [r15 + 2]
0x0000f259      4939f5         cmp r13, rsi
0x0000f25c      7606           jbe 0xf264
0x0000f25e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000f264      4983c703       add r15, 3
0x0000f268      4189c0         mov r8d, eax
0x0000f26b      4d39fd         cmp r13, r15
0x0000f26e      7605           jbe 0xf275
0x0000f270      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000f275      498d4701       lea rax, [r15 + 1]
0x0000f279      4939c5         cmp r13, rax
0x0000f27c      760d           jbe 0xf28b
0x0000f27e      89d8           mov eax, ebx
0x0000f280      c0e806         shr al, 6
0x0000f283      83c030         add eax, 0x30
0x0000f286      4388443e01     mov byte [r14 + r15 + 1], al
0x0000f28b      498d4702       lea rax, [r15 + 2]
0x0000f28f      4939c5         cmp r13, rax
0x0000f292      7610           jbe 0xf2a4
0x0000f294      89d8           mov eax, ebx
0x0000f296      c0e803         shr al, 3
0x0000f299      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x0000f29c      83c030         add eax, 0x30
0x0000f29f      4388443e02     mov byte [r14 + r15 + 2], al
0x0000f2a4      83e307         and ebx, 7
0x0000f2a7      4883c501       add rbp, 1
0x0000f2ab      4983c703       add r15, 3
0x0000f2af      83c330         add ebx, 0x30
0x0000f2b2      4839cd         cmp rbp, rcx
0x0000f2b5      0f83e5f7ffff   jae 0xeaa0
0x0000f2bb      89d6           mov esi, edx
0x0000f2bd      4d39fd         cmp r13, r15
0x0000f2c0      7604           jbe 0xf2c6
0x0000f2c2      43881c3e       mov byte [r14 + r15], bl
0x0000f2c6      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000f2ca      4983c701       add r15, 1
0x0000f2ce      84d2           test dl, dl
0x0000f2d0      0f854affffff   jne 0xf220
0x0000f2d6      89f0           mov eax, esi
0x0000f2d8      83f001         xor eax, 1
0x0000f2db      4421c0         and eax, r8d
0x0000f2de      4584d2         test r10b, r10b
0x0000f2e1      740e           je 0xf2f1
0x0000f2e3      4d39fd         cmp r13, r15
0x0000f2e6      7605           jbe 0xf2ed
0x0000f2e8      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000f2ed      4983c701       add r15, 1
0x0000f2f1      4883c501       add rbp, 1
0x0000f2f5      4839cd         cmp rbp, rcx
0x0000f2f8      0f837ef7ffff   jae 0xea7c
0x0000f2fe      84c0           test al, al
0x0000f300      0f84f8030000   je 0xf6fe
0x0000f306      4d39fd         cmp r13, r15
0x0000f309      7605           jbe 0xf310
0x0000f30b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000f310      498d4701       lea rax, [r15 + 1]
0x0000f314      4939c5         cmp r13, rax
0x0000f317      7606           jbe 0xf31f
0x0000f319      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000f31f      4983c702       add r15, 2
0x0000f323      4531d2         xor r10d, r10d
0x0000f326      4531c0         xor r8d, r8d
0x0000f329      eb92           jmp 0xf2bd
0x0000f32b      0f1f440000     nop dword [rax + rax]
0x0000f330      4983ff01       cmp r15, 1
0x0000f334      0f845ffeffff   je 0xf199
0x0000f33a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000f33f      4a8d0c3f       lea rcx, [rdi + r15]
0x0000f343      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x0000f348      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000f34c      eb0f           jmp 0xf35d
0x0000f34e      6690           nop
0x0000f350      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x0000f354      4939d0         cmp r8, rdx
0x0000f357      0f843cfeffff   je 0xf199
0x0000f35d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x0000f360      83e95b         sub ecx, 0x5b
0x0000f363      80f921         cmp cl, 0x21
0x0000f366      77e8           ja 0xf350                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x0000f368      be01000000     mov esi, 1
0x0000f36d      48d3e6         shl rsi, cl
0x0000f370      4889f1         mov rcx, rsi
0x0000f373      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x0000f37d      4885f1         test rcx, rsi
0x0000f380      74ce           je 0xf350
0x0000f382      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000f387      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000f38c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x0000f391      c74424080200.  mov dword [rsp + 8], 2
0x0000f399      807c240d00     cmp byte [rsp + 0xd], 0
0x0000f39e      7410           je 0xf3b0
0x0000f3a0      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x0000f3a2      b804000000     mov eax, 4
0x0000f3a7      0f44442408     cmove eax, dword [rsp + 8]
0x0000f3ac      89442408       mov dword [rsp + 8], eax
0x0000f3b0      4883ec08       sub rsp, 8
0x0000f3b4      4889e9         mov rcx, rbp
0x0000f3b7      4c89ee         mov rsi, r13
0x0000f3ba      ff742468       push qword [rsp + 0x68]
0x0000f3be      ff742478       push qword [rsp + 0x78]
0x0000f3c2      4c89f7         mov rdi, r14
0x0000f3c5      6a00           push 0
0x0000f3c7      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x0000f3cf      448b442428     mov r8d, dword [rsp + 0x28]
0x0000f3d4      488b542430     mov rdx, qword [rsp + 0x30]
0x0000f3d9      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x0000f3dd      e82ef4ffff     call sym.quotearg_buffer_restyled
0x0000f3e2      4883c420       add rsp, 0x20
0x0000f3e6      4989c7         mov r15, rax
0x0000f3e9      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x0000f3f1      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000f3fa      4c89f8         mov rax, r15
0x0000f3fd      0f8500060000   jne 0xfa03
0x0000f403      4881c4b80000.  add rsp, 0xb8
0x0000f40a      5b             pop rbx
0x0000f40b      5d             pop rbp
0x0000f40c      415c           pop r12
0x0000f40e      415d           pop r13
0x0000f410      415e           pop r14
0x0000f412      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x0000f414      c3             ret
0x0000f415      0f1f00         nop dword [rax]
0x0000f418      4c89dd         mov rbp, r11
0x0000f41b      e979ffffff     jmp 0xf399
0x0000f420      4d39fd         cmp r13, r15
0x0000f423      7605           jbe 0xf42a
0x0000f425      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000f42a      498d4701       lea rax, [r15 + 1]
0x0000f42e      4939c5         cmp r13, rax
0x0000f431      7606           jbe 0xf439
0x0000f433      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x0000f439      498d4702       lea rax, [r15 + 2]
0x0000f43d      4939c5         cmp r13, rax
0x0000f440      0f86ec050000   jbe 0xfa32
0x0000f446      4c89ea         mov rdx, r13
0x0000f449      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000f44f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000f454      e9d9fbffff     jmp 0xf032
0x0000f459      4489e0         mov eax, r12d
0x0000f45c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x0000f461      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x0000f464      e900f6ffff     jmp 0xea69                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x0000f469      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000f46f      e9c5f9ffff     jmp 0xee39
0x0000f474      85db           test ebx, ebx
0x0000f476      0f8527f4ffff   jne 0xe8a3
0x0000f47c      c644240d01     mov byte [rsp + 0xd], 1
0x0000f481      4d85ed         test r13, r13
0x0000f484      0f8590050000   jne 0xfa1a
0x0000f48a      488d05216200.  lea rax, [0x000156b2]                   ; "'"
0x0000f491      48c744245000.  mov qword [rsp + 0x50], 0
0x0000f49a      c644240e01     mov byte [rsp + 0xe], 1
0x0000f49f      c644247c00     mov byte [rsp + 0x7c], 0
0x0000f4a4      4531e4         xor r12d, r12d
0x0000f4a7      c644240f00     mov byte [rsp + 0xf], 0
0x0000f4ac      48c744241801.  mov qword [rsp + 0x18], 1
0x0000f4b5      4889442448     mov qword [rsp + 0x48], rax
0x0000f4ba      41bf01000000   mov r15d, 1
0x0000f4c0      c74424080200.  mov dword [rsp + 8], 2
0x0000f4c8      e916f4ffff     jmp 0xe8e3                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x0000f4cd      0f1f00         nop dword [rax]
0x0000f4d0      85db           test ebx, ebx
0x0000f4d2      0f85f5030000   jne 0xf8cd
0x0000f4d8      4d85ed         test r13, r13
0x0000f4db      0f8425020000   je 0xf706
0x0000f4e1      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x0000f4e5      c644240e01     mov byte [rsp + 0xe], 1
0x0000f4ea      4531e4         xor r12d, r12d
0x0000f4ed      c644247c00     mov byte [rsp + 0x7c], 0
0x0000f4f2      48c744245000.  mov qword [rsp + 0x50], 0
0x0000f4fb      488d05016700.  lea rax, str.l______l                   ; 0x15c03 ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000f502      c644240f00     mov byte [rsp + 0xf], 0
0x0000f507      c644240d01     mov byte [rsp + 0xd], 1
0x0000f50c      48c744241801.  mov qword [rsp + 0x18], 1
0x0000f515      41bf01000000   mov r15d, 1
0x0000f51b      4889442448     mov qword [rsp + 0x48], rax
0x0000f520      e9bef3ffff     jmp 0xe8e3
0x0000f525      488d05d76600.  lea rax, str.l______l                   ; 0x15c03 ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000f52c      c644240e01     mov byte [rsp + 0xe], 1
0x0000f531      c644247c00     mov byte [rsp + 0x7c], 0
0x0000f536      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x0000f539      48c744245000.  mov qword [rsp + 0x50], 0
0x0000f542      c644240f01     mov byte [rsp + 0xf], 1
0x0000f547      c644240d01     mov byte [rsp + 0xd], 1
0x0000f54c      48c744241801.  mov qword [rsp + 0x18], 1
0x0000f555      4531ff         xor r15d, r15d
0x0000f558      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000f55d      c74424080500.  mov dword [rsp + 8], 5
0x0000f565      e979f3ffff     jmp 0xe8e3
0x0000f56a      c644240e01     mov byte [rsp + 0xe], 1
0x0000f56f      c644247c00     mov byte [rsp + 0x7c], 0
0x0000f574      4531e4         xor r12d, r12d
0x0000f577      48c744245000.  mov qword [rsp + 0x50], 0
0x0000f580      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x0000f585      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x0000f588      c644240d01     mov byte [rsp + 0xd], 1
0x0000f58d      48c744241800.  mov qword [rsp + 0x18], 0
0x0000f596      48c744244800.  mov qword [rsp + 0x48], 0
0x0000f59f      e93ff3ffff     jmp 0xe8e3
0x0000f5a4      837c24080a     cmp dword [rsp + 8], 0xa
0x0000f5a9      7456           je 0xf601
0x0000f5ab      488d35536600.  lea rsi, [0x00015c05]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x0000f5b2      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x0000f5b4      ba05000000     mov edx, 5
0x0000f5b9      e8b236ffff     call sym.imp.dcgettext
0x0000f5be      4889c1         mov rcx, rax
0x0000f5c1      4889442468     mov qword [rsp + 0x68], rax
0x0000f5c6      488d05386600.  lea rax, [0x00015c05]                   ; "`"
0x0000f5cd      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x0000f5d0      0f8498030000   je 0xf96e
0x0000f5d6      488d35d56000.  lea rsi, [0x000156b2]                   ; "'"
0x0000f5dd      31ff           xor edi, edi
0x0000f5df      ba05000000     mov edx, 5
0x0000f5e4      e88736ffff     call sym.imp.dcgettext
0x0000f5e9      4889c1         mov rcx, rax
0x0000f5ec      4889442460     mov qword [rsp + 0x60], rax
0x0000f5f1      488d05ba6000.  lea rax, [0x000156b2]                   ; "'"
0x0000f5f8      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x0000f5fb      0f8483030000   je 0xf984
0x0000f601      4531ff         xor r15d, r15d
0x0000f604      85db           test ebx, ebx
0x0000f606      0f84c1010000   je 0xf7cd
0x0000f60c      85db           test ebx, ebx
0x0000f60e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x0000f613      0f9544240f     setne byte [rsp + 0xf]
0x0000f618      4531e4         xor r12d, r12d
0x0000f61b      4889df         mov rdi, rbx
0x0000f61e      e86d36ffff     call sym.imp.strlen
0x0000f623      48895c2448     mov qword [rsp + 0x48], rbx
0x0000f628      4889442418     mov qword [rsp + 0x18], rax
0x0000f62d      c644240e01     mov byte [rsp + 0xe], 1
0x0000f632      c644247c00     mov byte [rsp + 0x7c], 0
0x0000f637      48c744245000.  mov qword [rsp + 0x50], 0
0x0000f640      c644240d01     mov byte [rsp + 0xd], 1
0x0000f645      e999f2ffff     jmp 0xe8e3
0x0000f64a      c644240e01     mov byte [rsp + 0xe], 1
0x0000f64f      c644247c00     mov byte [rsp + 0x7c], 0
0x0000f654      4531e4         xor r12d, r12d
0x0000f657      48c744245000.  mov qword [rsp + 0x50], 0
0x0000f660      c644240f00     mov byte [rsp + 0xf], 0
0x0000f665      4531ff         xor r15d, r15d
0x0000f668      c644240d00     mov byte [rsp + 0xd], 0
0x0000f66d      48c744241800.  mov qword [rsp + 0x18], 0
0x0000f676      48c744244800.  mov qword [rsp + 0x48], 0
0x0000f67f      e95ff2ffff     jmp 0xe8e3
0x0000f684      c644240e01     mov byte [rsp + 0xe], 1
0x0000f689      c644247c00     mov byte [rsp + 0x7c], 0
0x0000f68e      4531e4         xor r12d, r12d
0x0000f691      48c744245000.  mov qword [rsp + 0x50], 0
0x0000f69a      c644240f01     mov byte [rsp + 0xf], 1
0x0000f69f      c644240d01     mov byte [rsp + 0xd], 1
0x0000f6a4      e91af2ffff     jmp 0xe8c3
0x0000f6a9      4d39fd         cmp r13, r15
0x0000f6ac      7605           jbe 0xf6b3
0x0000f6ae      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x0000f6b3      488d4102       lea rax, [rcx + 2]
0x0000f6b7      4939c5         cmp r13, rax
0x0000f6ba      7606           jbe 0xf6c2
0x0000f6bc      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x0000f6c2      4489e0         mov eax, r12d
0x0000f6c5      4c8d7903       lea r15, [rcx + 3]
0x0000f6c9      4531e4         xor r12d, r12d
0x0000f6cc      bb30000000     mov ebx, 0x30                           ; '0'
0x0000f6d1      e962f3ffff     jmp 0xea38
0x0000f6d6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000f6e0      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000f6e5      4c89dd         mov rbp, r11
0x0000f6e8      885c240d       mov byte [rsp + 0xd], bl
0x0000f6ec      e9a8fcffff     jmp 0xf399
0x0000f6f1      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000f6f6      4531e4         xor r12d, r12d
0x0000f6f9      e902fbffff     jmp 0xf200
0x0000f6fe      4531d2         xor r10d, r10d
0x0000f701      e9b7fbffff     jmp 0xf2bd
0x0000f706      48c744245000.  mov qword [rsp + 0x50], 0
0x0000f70f      c644240e01     mov byte [rsp + 0xe], 1
0x0000f714      4531e4         xor r12d, r12d
0x0000f717      c644247c00     mov byte [rsp + 0x7c], 0
0x0000f71c      e9dafdffff     jmp 0xf4fb
0x0000f721      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x0000f726      4c89f6         mov rsi, r14
0x0000f729      4c89e9         mov rcx, r13
0x0000f72c      4889d8         mov rax, rbx
0x0000f72f      4889df         mov rdi, rbx
0x0000f732      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000f738      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000f73d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x0000f745      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x0000f748      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000f74e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x0000f756      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000f75b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000f760      7326           jae 0xf788
0x0000f762      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000f765      7510           jne 0xf777
0x0000f767      eb1f           jmp 0xf788
0x0000f769      0f1f80000000.  nop dword [rax]
0x0000f770      41803c0100     cmp byte [r9 + rax], 0
0x0000f775      740e           je 0xf785
0x0000f777      4883c001       add rax, 1
0x0000f77b      488d540500     lea rdx, [rbp + rax]
0x0000f780      4939d3         cmp r11, rdx
0x0000f783      77eb           ja 0xf770
0x0000f785      4889c7         mov rdi, rax
0x0000f788      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000f78d      4531e4         xor r12d, r12d
0x0000f790      e961faffff     jmp 0xf1f6
0x0000f795      4889df         mov rdi, rbx
0x0000f798      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000f79e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000f7a3      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000f7a9      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x0000f7b1      4531e4         xor r12d, r12d
0x0000f7b4      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000f7b9      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000f7be      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x0000f7c3      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000f7c8      e929faffff     jmp 0xf1f6
0x0000f7cd      488b542468     mov rdx, qword [rsp + 0x68]
0x0000f7d2      0fb602         movzx eax, byte [rdx]
0x0000f7d5      84c0           test al, al
0x0000f7d7      0f842ffeffff   je 0xf60c
0x0000f7dd      0f1f00         nop dword [rax]
0x0000f7e0      4d39fd         cmp r13, r15
0x0000f7e3      7604           jbe 0xf7e9
0x0000f7e5      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x0000f7e9      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x0000f7ed      420fb6043a     movzx eax, byte [rdx + r15]
0x0000f7f2      84c0           test al, al
0x0000f7f4      75ea           jne 0xf7e0
0x0000f7f6      e911feffff     jmp 0xf60c
0x0000f7fb      89d0           mov eax, edx
0x0000f7fd      e955f5ffff     jmp 0xed57
0x0000f802      0fb61c08       movzx ebx, byte [rax + rcx]
0x0000f806      80fb3e         cmp bl, 0x3e
0x0000f809      0f8771f8ffff   ja 0xf080
0x0000f80f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x0000f819      480fa3d8       bt rax, rbx
0x0000f81d      0f835df8ffff   jae 0xf080
0x0000f823      807c240f00     cmp byte [rsp + 0xf], 0
0x0000f828      0f85e4010000   jne 0xfa12                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x0000f82e      4d39fd         cmp r13, r15
0x0000f831      7605           jbe 0xf838
0x0000f833      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x0000f838      498d4701       lea rax, [r15 + 1]
0x0000f83c      4939c5         cmp r13, rax
0x0000f83f      7606           jbe 0xf847
0x0000f841      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x0000f847      498d4702       lea rax, [r15 + 2]
0x0000f84b      4939c5         cmp r13, rax
0x0000f84e      7606           jbe 0xf856
0x0000f850      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x0000f856      498d4703       lea rax, [r15 + 3]
0x0000f85a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000f85d      7606           jbe 0xf865
0x0000f85f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x0000f865      4983c704       add r15, 4
0x0000f869      31d2           xor edx, edx
0x0000f86b      4531e4         xor r12d, r12d
0x0000f86e      31c0           xor eax, eax
0x0000f870      4889cd         mov rbp, rcx
0x0000f873      e9c0f1ffff     jmp 0xea38
0x0000f878      85db           test ebx, ebx
0x0000f87a      0f8488010000   je 0xfa08
0x0000f880      488d052b5e00.  lea rax, [0x000156b2]                   ; "'"
0x0000f887      c644240e01     mov byte [rsp + 0xe], 1
0x0000f88c      c644247c00     mov byte [rsp + 0x7c], 0
0x0000f891      4531e4         xor r12d, r12d
0x0000f894      48c744245000.  mov qword [rsp + 0x50], 0
0x0000f89d      c644240f01     mov byte [rsp + 0xf], 1
0x0000f8a2      c644240d00     mov byte [rsp + 0xd], 0
0x0000f8a7      48c744241801.  mov qword [rsp + 0x18], 1
0x0000f8b0      4531ff         xor r15d, r15d
0x0000f8b3      4889442448     mov qword [rsp + 0x48], rax
0x0000f8b8      e926f0ffff     jmp 0xe8e3
0x0000f8bd      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x0000f8c0      4c89dd         mov rbp, r11
0x0000f8c3      0fb644240f     movzx eax, byte [rsp + 0xf]
0x0000f8c8      e9ccfaffff     jmp 0xf399
0x0000f8cd      488d052f6300.  lea rax, str.l______l                   ; 0x15c03 ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000f8d4      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x0000f8d9      c644247c00     mov byte [rsp + 0x7c], 0
0x0000f8de      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x0000f8e1      48c744245000.  mov qword [rsp + 0x50], 0
0x0000f8ea      c644240f01     mov byte [rsp + 0xf], 1
0x0000f8ef      c644240d01     mov byte [rsp + 0xd], 1
0x0000f8f4      48c744241801.  mov qword [rsp + 0x18], 1
0x0000f8fd      4531ff         xor r15d, r15d
0x0000f900      4889442448     mov qword [rsp + 0x48], rax
0x0000f905      e9d9efffff     jmp 0xe8e3
0x0000f90a      89d0           mov eax, edx
0x0000f90c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x0000f911      4885db         test rbx, rbx
0x0000f914      742c           je 0xf942
0x0000f916      84c0           test al, al
0x0000f918      7428           je 0xf942
0x0000f91a      0fb60b         movzx ecx, byte [rbx]
0x0000f91d      4889d8         mov rax, rbx
0x0000f920      84c9           test cl, cl
0x0000f922      741e           je 0xf942
0x0000f924      4c89fa         mov rdx, r15
0x0000f927      4c29f8         sub rax, r15
0x0000f92a      4939d5         cmp r13, rdx
0x0000f92d      7604           jbe 0xf933
0x0000f92f      41880c16       mov byte [r14 + rdx], cl
0x0000f933      4883c201       add rdx, 1
0x0000f937      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000f93b      84c9           test cl, cl
0x0000f93d      75eb           jne 0xf92a
0x0000f93f      4989d7         mov r15, rdx
0x0000f942      4d39fd         cmp r13, r15
0x0000f945      0f869efaffff   jbe 0xf3e9
0x0000f94b      43c6043e00     mov byte [r14 + r15], 0
0x0000f950      e994faffff     jmp 0xf3e9
0x0000f955      837c240802     cmp dword [rsp + 8], 2
0x0000f95a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000f95f      4c89dd         mov rbp, r11
0x0000f962      0f94c0         sete al
0x0000f965      885c240d       mov byte [rsp + 0xd], bl
0x0000f969      e92bfaffff     jmp 0xf399
0x0000f96e      8b742408       mov esi, dword [rsp + 8]
0x0000f972      4889cf         mov rdi, rcx
0x0000f975      e8a6edffff     call sym.gettext_quote.part.1
0x0000f97a      4889442468     mov qword [rsp + 0x68], rax
0x0000f97f      e952fcffff     jmp 0xf5d6
0x0000f984      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x0000f988      4889cf         mov rdi, rcx
0x0000f98b      e890edffff     call sym.gettext_quote.part.1
0x0000f990      4889442460     mov qword [rsp + 0x60], rax
0x0000f995      e967fcffff     jmp 0xf601
0x0000f99a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000f99f      4c89dd         mov rbp, r11
0x0000f9a2      89d0           mov eax, edx
0x0000f9a4      885c240d       mov byte [rsp + 0xd], bl
0x0000f9a8      e9ecf9ffff     jmp 0xf399
0x0000f9ad      4883ec08       sub rsp, 8
0x0000f9b1      41b805000000   mov r8d, 5
0x0000f9b7      4c89d9         mov rcx, r11
0x0000f9ba      ff742468       push qword [rsp + 0x68]
0x0000f9be      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x0000f9c2      4c89f7         mov rdi, r14
0x0000f9c5      ff742438       push qword [rsp + 0x38]
0x0000f9c9      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x0000f9d1      488b542430     mov rdx, qword [rsp + 0x30]
0x0000f9d6      488b742470     mov rsi, qword [rsp + 0x70]
0x0000f9db      e830eeffff     call sym.quotearg_buffer_restyled
0x0000f9e0      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x0000f9e4      4989c7         mov r15, rax
0x0000f9e7      e9fdf9ffff     jmp 0xf3e9
0x0000f9ec      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x0000f9f1      e916ffffff     jmp 0xf90c
0x0000f9f6      c74424080200.  mov dword [rsp + 8], 2
0x0000f9fe      e996f9ffff     jmp 0xf399
0x0000fa03      e89832ffff     call sym.imp.__stack_chk_fail
0x0000fa08      c644240d00     mov byte [rsp + 0xd], 0
0x0000fa0d      e96ffaffff     jmp 0xf481
0x0000fa12      4c89dd         mov rbp, r11
0x0000fa15      e996f9ffff     jmp 0xf3b0
0x0000fa1a      c644240e01     mov byte [rsp + 0xe], 1
0x0000fa1f      31c0           xor eax, eax
0x0000fa21      4531e4         xor r12d, r12d
0x0000fa24      48c744245000.  mov qword [rsp + 0x50], 0
0x0000fa2d      e9a2f5ffff     jmp 0xefd4
0x0000fa32      4c89ea         mov rdx, r13
0x0000fa35      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000fa3a      e9f3f5ffff     jmp 0xf032
0x0000fa3f      e8bc30ffff     call sym.imp.abort
0x0000fa44      6690           nop
0x0000fa46      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x0000fa50      4157           push r15
0x0000fa52      4156           push r14
0x0000fa54      4c63ff         movsxd r15, edi
0x0000fa57      4155           push r13
0x0000fa59      4154           push r12
0x0000fa5b      4989d6         mov r14, rdx
0x0000fa5e      55             push rbp
0x0000fa5f      53             push rbx
0x0000fa60      4889cd         mov rbp, rcx
0x0000fa63      4883ec28       sub rsp, 0x28
0x0000fa67      4889742408     mov qword [rsp + 8], rsi
0x0000fa6c      e89f30ffff     call sym.imp.__errno_location
0x0000fa71      4989c5         mov r13, rax
0x0000fa74      8b00           mov eax, dword [rax]
0x0000fa76      4585ff         test r15d, r15d
0x0000fa79      488b1d00a720.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x21a180:8]=0x21a190 obj.slotvec0
0x0000fa80      89442418       mov dword [rsp + 0x18], eax
0x0000fa84      0f8867010000   js 0xfbf1
0x0000fa8a      44393de7a620.  cmp dword [obj.nslots], r15d            ; [0x21a178:4]=1
0x0000fa91      7f62           jg 0xfaf5
0x0000fa93      4181ffffffff.  cmp r15d, 0x7fffffff
0x0000fa9a      0f8456010000   je 0xfbf6
0x0000faa0      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x0000faa4      488d05e5a620.  lea rax, obj.slotvec0                   ; 0x21a190
0x0000faab      4963f4         movsxd rsi, r12d
0x0000faae      48c1e604       shl rsi, 4
0x0000fab2      4839c3         cmp rbx, rax
0x0000fab5      0f8415010000   je 0xfbd0
0x0000fabb      4889df         mov rdi, rbx
0x0000fabe      e87d230000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x0000fac3      4889c3         mov rbx, rax
0x0000fac6      488905b3a620.  mov qword [obj.slotvec], rax            ; [0x21a180:8]=0x21a190 obj.slotvec0
0x0000facd      48633da4a620.  movsxd rdi, dword [obj.nslots]          ; [0x21a178:4]=1
0x0000fad4      4489e2         mov edx, r12d
0x0000fad7      31f6           xor esi, esi
0x0000fad9      29fa           sub edx, edi
0x0000fadb      48c1e704       shl rdi, 4
0x0000fadf      4863d2         movsxd rdx, edx
0x0000fae2      4801df         add rdi, rbx
0x0000fae5      48c1e204       shl rdx, 4
0x0000fae9      e8a232ffff     call sym.imp.memset
0x0000faee      44892583a620.  mov dword [obj.nslots], r12d            ; [0x21a178:4]=1
0x0000faf5      8b4504         mov eax, dword [rbp + 4]
0x0000faf8      49c1e704       shl r15, 4
0x0000fafc      4883ec08       sub rsp, 8
0x0000fb00      4c01fb         add rbx, r15
0x0000fb03      4c8d7d08       lea r15, [rbp + 8]
0x0000fb07      448b4500       mov r8d, dword [rbp]
0x0000fb0b      4c8b1b         mov r11, qword [rbx]
0x0000fb0e      4c8b6308       mov r12, qword [rbx + 8]
0x0000fb12      4c89f1         mov rcx, r14
0x0000fb15      83c801         or eax, 1
0x0000fb18      89442424       mov dword [rsp + 0x24], eax
0x0000fb1c      ff7530         push qword [rbp + 0x30]
0x0000fb1f      4189c1         mov r9d, eax
0x0000fb22      ff7528         push qword [rbp + 0x28]
0x0000fb25      4157           push r15
0x0000fb27      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000fb2a      488b542428     mov rdx, qword [rsp + 0x28]
0x0000fb2f      4c89e7         mov rdi, r12
0x0000fb32      4c895c2430     mov qword [rsp + 0x30], r11
0x0000fb37      e8d4ecffff     call sym.quotearg_buffer_restyled
0x0000fb3c      4883c420       add rsp, 0x20
0x0000fb40      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x0000fb45      4939c3         cmp r11, rax
0x0000fb48      7767           ja 0xfbb1
0x0000fb4a      488d7001       lea rsi, [rax + 1]
0x0000fb4e      488d056bad20.  lea rax, obj.slot0                      ; 0x21a8c0
0x0000fb55      4939c4         cmp r12, rax
0x0000fb58      488933         mov qword [rbx], rsi
0x0000fb5b      7412           je 0xfb6f
0x0000fb5d      4c89e7         mov rdi, r12
0x0000fb60      4889742410     mov qword [rsp + 0x10], rsi
0x0000fb65      e85636ffff     call sym..plt.got
0x0000fb6a      488b742410     mov rsi, qword [rsp + 0x10]
0x0000fb6f      4889f7         mov rdi, rsi
0x0000fb72      4889742410     mov qword [rsp + 0x10], rsi
0x0000fb77      e864220000     call sym.xmalloc
0x0000fb7c      4883ec08       sub rsp, 8
0x0000fb80      48894308       mov qword [rbx + 8], rax
0x0000fb84      448b4500       mov r8d, dword [rbp]
0x0000fb88      ff7530         push qword [rbp + 0x30]
0x0000fb8b      ff7528         push qword [rbp + 0x28]
0x0000fb8e      4c89f1         mov rcx, r14
0x0000fb91      4157           push r15
0x0000fb93      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x0000fb98      4889c7         mov rdi, rax
0x0000fb9b      488b542428     mov rdx, qword [rsp + 0x28]
0x0000fba0      488b742430     mov rsi, qword [rsp + 0x30]
0x0000fba5      4989c4         mov r12, rax
0x0000fba8      e863ecffff     call sym.quotearg_buffer_restyled
0x0000fbad      4883c420       add rsp, 0x20
0x0000fbb1      8b442418       mov eax, dword [rsp + 0x18]
0x0000fbb5      41894500       mov dword [r13], eax
0x0000fbb9      4883c428       add rsp, 0x28
0x0000fbbd      4c89e0         mov rax, r12
0x0000fbc0      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x0000fbc1      5d             pop rbp
0x0000fbc2      415c           pop r12
0x0000fbc4      415d           pop r13
0x0000fbc6      415e           pop r14
0x0000fbc8      415f           pop r15
0x0000fbca      c3             ret
0x0000fbcb      0f1f440000     nop dword [rax + rax]
0x0000fbd0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x0000fbd2      e869220000     call sym.xrealloc
0x0000fbd7      660f6f05b1a5.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x0000fbdf      4889c3         mov rbx, rax
0x0000fbe2      48890597a520.  mov qword [obj.slotvec], rax            ; [0x21a180:8]=0x21a190 obj.slotvec0
0x0000fbe9      0f1100         movups xmmword [rax], xmm0
0x0000fbec      e9dcfeffff     jmp 0xfacd
0x0000fbf1      e80a2fffff     call sym.imp.abort
0x0000fbf6      e835240000     call sym.xalloc_die
0x0000fbfb      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x0000fc00      4154           push r12
0x0000fc02      55             push rbp
0x0000fc03      53             push rbx
0x0000fc04      4889fb         mov rbx, rdi
0x0000fc07      e8042fffff     call sym.imp.__errno_location
0x0000fc0c      448b20         mov r12d, dword [rax]
0x0000fc0f      4889c5         mov rbp, rax
0x0000fc12      488d05a7ad20.  lea rax, obj.default_quoting_options    ; 0x21a9c0
0x0000fc19      4885db         test rbx, rbx
0x0000fc1c      be38000000     mov esi, 0x38                           ; '8'
0x0000fc21      480f44d8       cmove rbx, rax
0x0000fc25      4889df         mov rdi, rbx
0x0000fc28      e8b3230000     call sym.xmemdup
0x0000fc2d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x0000fc31      5b             pop rbx
0x0000fc32      5d             pop rbp
0x0000fc33      415c           pop r12
0x0000fc35      c3             ret
0x0000fc36      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x0000fc40      488d0579ad20.  lea rax, obj.default_quoting_options    ; 0x21a9c0
0x0000fc47      4885ff         test rdi, rdi
0x0000fc4a      480f44f8       cmove rdi, rax
0x0000fc4e      8b07           mov eax, dword [rdi]
0x0000fc50      c3             ret
0x0000fc51      0f1f440000     nop dword [rax + rax]
0x0000fc56      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x0000fc60      488d0559ad20.  lea rax, obj.default_quoting_options    ; 0x21a9c0
0x0000fc67      4885ff         test rdi, rdi
0x0000fc6a      480f44f8       cmove rdi, rax
0x0000fc6e      8937           mov dword [rdi], esi
0x0000fc70      c3             ret
0x0000fc71      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000fc76      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x0000fc80      488d0539ad20.  lea rax, obj.default_quoting_options    ; 0x21a9c0
0x0000fc87      4885ff         test rdi, rdi
0x0000fc8a      89f1           mov ecx, esi
0x0000fc8c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x0000fc90      89f0           mov eax, esi
0x0000fc92      83e11f         and ecx, 0x1f
0x0000fc95      c0e805         shr al, 5
0x0000fc98      0fb6c0         movzx eax, al
0x0000fc9b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x0000fca0      8b37           mov esi, dword [rdi]
0x0000fca2      89f0           mov eax, esi
0x0000fca4      d3e8           shr eax, cl
0x0000fca6      31c2           xor edx, eax
0x0000fca8      83e001         and eax, 1
0x0000fcab      83e201         and edx, 1
0x0000fcae      d3e2           shl edx, cl
0x0000fcb0      31f2           xor edx, esi
0x0000fcb2      8917           mov dword [rdi], edx
0x0000fcb4      c3             ret
0x0000fcb5      90             nop
0x0000fcb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x0000fcc0      488d05f9ac20.  lea rax, obj.default_quoting_options    ; 0x21a9c0
0x0000fcc7      4885ff         test rdi, rdi
0x0000fcca      480f44f8       cmove rdi, rax
0x0000fcce      8b4704         mov eax, dword [rdi + 4]
0x0000fcd1      897704         mov dword [rdi + 4], esi
0x0000fcd4      c3             ret
0x0000fcd5      90             nop
0x0000fcd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x0000fce0      488d05d9ac20.  lea rax, obj.default_quoting_options    ; 0x21a9c0
0x0000fce7      4885ff         test rdi, rdi
0x0000fcea      480f44f8       cmove rdi, rax
0x0000fcee      4885f6         test rsi, rsi
0x0000fcf1      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000fcf7      740e           je 0xfd07
0x0000fcf9      4885d2         test rdx, rdx
0x0000fcfc      7409           je 0xfd07
0x0000fcfe      48897728       mov qword [rdi + 0x28], rsi
0x0000fd02      48895730       mov qword [rdi + 0x30], rdx
0x0000fd06      c3             ret
0x0000fd07      4883ec08       sub rsp, 8
0x0000fd0b      e8f02dffff     call sym.imp.abort
;-- quotearg_buffer:
0x0000fd10      4157           push r15
0x0000fd12      4156           push r14
0x0000fd14      488d05a5ac20.  lea rax, obj.default_quoting_options    ; 0x21a9c0
0x0000fd1b      4155           push r13
0x0000fd1d      4154           push r12
0x0000fd1f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x0000fd22      55             push rbp
0x0000fd23      53             push rbx
0x0000fd24      4c89c3         mov rbx, r8
0x0000fd27      4989f6         mov r14, rsi
0x0000fd2a      4989d7         mov r15, rdx
0x0000fd2d      4883ec18       sub rsp, 0x18
0x0000fd31      4d85c0         test r8, r8
0x0000fd34      480f44d8       cmove rbx, rax
0x0000fd38      48894c2408     mov qword [rsp + 8], rcx
0x0000fd3d      e8ce2dffff     call sym.imp.__errno_location
0x0000fd42      448b20         mov r12d, dword [rax]
0x0000fd45      4889c5         mov rbp, rax
0x0000fd48      488d4308       lea rax, [rbx + 8]
0x0000fd4c      4883ec08       sub rsp, 8
0x0000fd50      448b4b04       mov r9d, dword [rbx + 4]
0x0000fd54      ff7330         push qword [rbx + 0x30]
0x0000fd57      448b03         mov r8d, dword [rbx]
0x0000fd5a      ff7328         push qword [rbx + 0x28]
0x0000fd5d      4c89fa         mov rdx, r15
0x0000fd60      50             push rax
0x0000fd61      488b4c2428     mov rcx, qword [rsp + 0x28]
0x0000fd66      4c89f6         mov rsi, r14
0x0000fd69      4c89ef         mov rdi, r13
0x0000fd6c      e89feaffff     call sym.quotearg_buffer_restyled
0x0000fd71      44896500       mov dword [rbp], r12d
0x0000fd75      4883c438       add rsp, 0x38
0x0000fd79      5b             pop rbx
0x0000fd7a      5d             pop rbp
0x0000fd7b      415c           pop r12
0x0000fd7d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000fd7f      415e           pop r14
0x0000fd81      415f           pop r15
0x0000fd83      c3             ret
0x0000fd84      6690           nop
0x0000fd86      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x0000fd90      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x0000fd92      4156           push r14
0x0000fd94      488d0525ac20.  lea rax, obj.default_quoting_options    ; 0x21a9c0
0x0000fd9b      4155           push r13
0x0000fd9d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x0000fd9f      4989d4         mov r12, rdx
0x0000fda2      55             push rbp
0x0000fda3      53             push rbx
0x0000fda4      4889cb         mov rbx, rcx
0x0000fda7      4989fe         mov r14, rdi
0x0000fdaa      4989f7         mov r15, rsi
0x0000fdad      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x0000fdb1      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x0000fdb4      480f44d8       cmove rbx, rax
0x0000fdb8      31ed           xor ebp, ebp
0x0000fdba      e8512dffff     call sym.imp.__errno_location
0x0000fdbf      4d85e4         test r12, r12
0x0000fdc2      4989c5         mov r13, rax
0x0000fdc5      8b00           mov eax, dword [rax]
0x0000fdc7      400f94c5       sete bpl
0x0000fdcb      0b6b04         or ebp, dword [rbx + 4]
0x0000fdce      4c8d5308       lea r10, [rbx + 8]
0x0000fdd2      4883ec08       sub rsp, 8
0x0000fdd6      448b03         mov r8d, dword [rbx]
0x0000fdd9      4c89f9         mov rcx, r15
0x0000fddc      89442414       mov dword [rsp + 0x14], eax
0x0000fde0      ff7330         push qword [rbx + 0x30]
0x0000fde3      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x0000fde6      ff7328         push qword [rbx + 0x28]
0x0000fde9      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x0000fdeb      31f6           xor esi, esi
0x0000fded      4189e9         mov r9d, ebp
0x0000fdf0      31ff           xor edi, edi
0x0000fdf2      4c89542440     mov qword [rsp + 0x40], r10
0x0000fdf7      e814eaffff     call sym.quotearg_buffer_restyled
0x0000fdfc      488d7001       lea rsi, [rax + 1]
0x0000fe00      4889442448     mov qword [rsp + 0x48], rax
0x0000fe05      4883c420       add rsp, 0x20
0x0000fe09      4889f7         mov rdi, rsi
0x0000fe0c      4889742418     mov qword [rsp + 0x18], rsi
0x0000fe11      e8ca1f0000     call sym.xmalloc
0x0000fe16      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x0000fe1b      4883ec08       sub rsp, 8
0x0000fe1f      ff7330         push qword [rbx + 0x30]
0x0000fe22      ff7328         push qword [rbx + 0x28]
0x0000fe25      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000fe2a      4189e9         mov r9d, ebp
0x0000fe2d      448b03         mov r8d, dword [rbx]
0x0000fe30      4c89f9         mov rcx, r15
0x0000fe33      4c89f2         mov rdx, r14
0x0000fe36      4889c7         mov rdi, rax
0x0000fe39      4152           push r10
0x0000fe3b      488b742438     mov rsi, qword [rsp + 0x38]
0x0000fe40      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x0000fe45      8b44242c       mov eax, dword [rsp + 0x2c]
0x0000fe49      4883c420       add rsp, 0x20
0x0000fe4d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x0000fe50      41894500       mov dword [r13], eax
0x0000fe54      7409           je 0xfe5f
0x0000fe56      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000fe5b      4d891c24       mov qword [r12], r11
0x0000fe5f      488b442410     mov rax, qword [rsp + 0x10]
0x0000fe64      4883c438       add rsp, 0x38
0x0000fe68      5b             pop rbx
0x0000fe69      5d             pop rbp
0x0000fe6a      415c           pop r12
0x0000fe6c      415d           pop r13
0x0000fe6e      415e           pop r14
0x0000fe70      415f           pop r15
0x0000fe72      c3             ret
0x0000fe73      0f1f00         nop dword [rax]
0x0000fe76      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x0000fe80      4889d1         mov rcx, rdx
0x0000fe83      31d2           xor edx, edx
0x0000fe85      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000fe8a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x0000fe90      8b05e2a22000   mov eax, dword [obj.nslots]             ; [0x21a178:4]=1
0x0000fe96      4154           push r12
0x0000fe98      4c8b25e1a220.  mov r12, qword [obj.slotvec]            ; [0x21a180:8]=0x21a190 obj.slotvec0
0x0000fe9f      55             push rbp
0x0000fea0      53             push rbx
0x0000fea1      83f801         cmp eax, 1
0x0000fea4      7e2b           jle 0xfed1                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x0000fea6      83e802         sub eax, 2
0x0000fea9      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000feae      48c1e004       shl rax, 4
0x0000feb2      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x0000feb7      660f1f840000.  nop word [rax + rax]
0x0000fec0      488b3b         mov rdi, qword [rbx]
0x0000fec3      4883c310       add rbx, 0x10
0x0000fec7      e8f432ffff     call sym..plt.got
0x0000fecc      4839eb         cmp rbx, rbp
0x0000fecf      75ef           jne 0xfec0
0x0000fed1      498b7c2408     mov rdi, qword [r12 + 8]
0x0000fed6      488d1de3a920.  lea rbx, obj.slot0                      ; 0x21a8c0
0x0000fedd      4839df         cmp rdi, rbx
0x0000fee0      7417           je 0xfef9
0x0000fee2      e8d932ffff     call sym..plt.got
0x0000fee7      48c7059ea220.  mov qword [obj.slotvec0], 0x100         ; [0x21a190:8]=256
0x0000fef2      48891d9fa220.  mov qword [0x0021a198], rbx             ; [0x21a198:8]=0x21a8c0 obj.slot0
0x0000fef9      488d1d90a220.  lea rbx, obj.slotvec0                   ; 0x21a190
0x0000ff00      4939dc         cmp r12, rbx
0x0000ff03      740f           je 0xff14
0x0000ff05      4c89e7         mov rdi, r12
0x0000ff08      e8b332ffff     call sym..plt.got
0x0000ff0d      48891d6ca220.  mov qword [obj.slotvec], rbx            ; [0x21a180:8]=0x21a190 obj.slotvec0
0x0000ff14      5b             pop rbx
0x0000ff15      c70559a22000.  mov dword [obj.nslots], 1               ; [0x21a178:4]=1
0x0000ff1f      5d             pop rbp
0x0000ff20      415c           pop r12
0x0000ff22      c3             ret
0x0000ff23      0f1f00         nop dword [rax]
0x0000ff26      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x0000ff30      488d0d89aa20.  lea rcx, obj.default_quoting_options    ; 0x21a9c0
0x0000ff37      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000ff3e      e90dfbffff     jmp sym.quotearg_n_options
0x0000ff43      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x0000ff46      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x0000ff50      488d0d69aa20.  lea rcx, obj.default_quoting_options    ; 0x21a9c0
0x0000ff57      e9f4faffff     jmp sym.quotearg_n_options
0x0000ff5c      0f1f4000       nop dword [rax]
;-- quotearg:
0x0000ff60      488d0d59aa20.  lea rcx, obj.default_quoting_options    ; 0x21a9c0
0x0000ff67      4889fe         mov rsi, rdi
0x0000ff6a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000ff71      31ff           xor edi, edi
0x0000ff73      e9d8faffff     jmp sym.quotearg_n_options
0x0000ff78      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x0000ff80      488d0d39aa20.  lea rcx, obj.default_quoting_options    ; 0x21a9c0
0x0000ff87      4889f2         mov rdx, rsi
0x0000ff8a      4889fe         mov rsi, rdi
0x0000ff8d      31ff           xor edi, edi
0x0000ff8f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x0000ff94      6690           nop
0x0000ff96      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x0000ffa0      4883ec48       sub rsp, 0x48
0x0000ffa4      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x0000ffa7      64488b142528.  mov rdx, qword fs:[0x28]
0x0000ffb0      4889542438     mov qword [rsp + 0x38], rdx
0x0000ffb5      31d2           xor edx, edx
0x0000ffb7      83fe0a         cmp esi, 0xa
0x0000ffba      7468           je 0x10024
0x0000ffbc      893424         mov dword [rsp], esi
0x0000ffbf      4889e1         mov rcx, rsp
0x0000ffc2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000ffc9      4889c6         mov rsi, rax
0x0000ffcc      48c744240400.  mov qword [rsp + 4], 0
0x0000ffd5      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000ffde      48c744241400.  mov qword [rsp + 0x14], 0
0x0000ffe7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000fff0      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x0000fff9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00010002      c74424340000.  mov dword [rsp + 0x34], 0
0x0001000a      e841faffff     call sym.quotearg_n_options
0x0001000f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00010014      6448330c2528.  xor rcx, qword fs:[0x28]
0x0001001d      750a           jne 0x10029                             ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0001001f      4883c448       add rsp, 0x48
0x00010023      c3             ret
0x00010024      e8d72affff     call sym.imp.abort
0x00010029      e8722cffff     call sym.imp.__stack_chk_fail
0x0001002e      6690           nop
;-- quotearg_n_style_mem:
0x00010030      4883ec48       sub rsp, 0x48
0x00010034      4889d0         mov rax, rdx
0x00010037      4889ca         mov rdx, rcx
0x0001003a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00010043      48894c2438     mov qword [rsp + 0x38], rcx
0x00010048      31c9           xor ecx, ecx
0x0001004a      83fe0a         cmp esi, 0xa
0x0001004d      7461           je 0x100b0
0x0001004f      893424         mov dword [rsp], esi
0x00010052      4889e1         mov rcx, rsp
0x00010055      4889c6         mov rsi, rax
0x00010058      48c744240400.  mov qword [rsp + 4], 0
0x00010061      48c744240c00.  mov qword [rsp + 0xc], 0
0x0001006a      48c744241400.  mov qword [rsp + 0x14], 0
0x00010073      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0001007c      48c744242400.  mov qword [rsp + 0x24], 0
0x00010085      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0001008e      c74424340000.  mov dword [rsp + 0x34], 0
0x00010096      e8b5f9ffff     call sym.quotearg_n_options
0x0001009b      488b542438     mov rdx, qword [rsp + 0x38]
0x000100a0      644833142528.  xor rdx, qword fs:[0x28]
0x000100a9      750a           jne 0x100b5
0x000100ab      4883c448       add rsp, 0x48
0x000100af      c3             ret
0x000100b0      e84b2affff     call sym.imp.abort
0x000100b5      e8e62bffff     call sym.imp.__stack_chk_fail
0x000100ba      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x000100c0      4889f2         mov rdx, rsi
0x000100c3      89fe           mov esi, edi
0x000100c5      31ff           xor edi, edi
0x000100c7      e9d4feffff     jmp sym.quotearg_n_style
0x000100cc      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x000100d0      4889d1         mov rcx, rdx
0x000100d3      4889f2         mov rdx, rsi
0x000100d6      89fe           mov esi, edi
0x000100d8      31ff           xor edi, edi
0x000100da      e951ffffff     jmp sym.quotearg_n_style_mem
0x000100df      90             nop
;-- quotearg_char_mem:
0x000100e0      4883ec48       sub rsp, 0x48
0x000100e4      89d1           mov ecx, edx
0x000100e6      64488b042528.  mov rax, qword fs:[0x28]
0x000100ef      4889442438     mov qword [rsp + 0x38], rax
0x000100f4      31c0           xor eax, eax
0x000100f6      488b05f3a820.  mov rax, qword [0x0021a9f0]             ; [0x21a9f0:8]=0
0x000100fd      4989e0         mov r8, rsp
0x00010100      83e11f         and ecx, 0x1f
0x00010103      660f6f05b5a8.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0001010b      4889442430     mov qword [rsp + 0x30], rax
0x00010110      89d0           mov eax, edx
0x00010112      0f290424       movaps xmmword [rsp], xmm0
0x00010116      c0e805         shr al, 5
0x00010119      0fb6c0         movzx eax, al
0x0001011c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00010121      660f6f05a7a8.  movdqa xmm0, xmmword [0x0021a9d0]
0x00010129      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0001012e      660f6f05aaa8.  movdqa xmm0, xmmword [0x0021a9e0]
0x00010136      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0001013b      418b11         mov edx, dword [r9]
0x0001013e      89d0           mov eax, edx
0x00010140      d3e8           shr eax, cl
0x00010142      f7d0           not eax
0x00010144      83e001         and eax, 1
0x00010147      d3e0           shl eax, cl
0x00010149      4c89c1         mov rcx, r8
0x0001014c      31d0           xor eax, edx
0x0001014e      4889f2         mov rdx, rsi
0x00010151      4889fe         mov rsi, rdi
0x00010154      418901         mov dword [r9], eax
0x00010157      31ff           xor edi, edi
0x00010159      e8f2f8ffff     call sym.quotearg_n_options
0x0001015e      488b742438     mov rsi, qword [rsp + 0x38]
0x00010163      644833342528.  xor rsi, qword fs:[0x28]
0x0001016c      7505           jne 0x10173
0x0001016e      4883c448       add rsp, 0x48
0x00010172      c3             ret
0x00010173      e8282bffff     call sym.imp.__stack_chk_fail
0x00010178      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00010180      400fbed6       movsx edx, sil
0x00010184      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0001018b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00010190      ba3a000000     mov edx, 0x3a                           ; ':'
0x00010195      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0001019c      e93fffffff     jmp sym.quotearg_char_mem
0x000101a1      0f1f440000     nop dword [rax + rax]
0x000101a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x000101b0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000101b5      e926ffffff     jmp sym.quotearg_char_mem
0x000101ba      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x000101c0      4883ec48       sub rsp, 0x48
0x000101c4      4889d0         mov rax, rdx
0x000101c7      64488b142528.  mov rdx, qword fs:[0x28]
0x000101d0      4889542438     mov qword [rsp + 0x38], rdx
0x000101d5      31d2           xor edx, edx
0x000101d7      83fe0a         cmp esi, 0xa
0x000101da      7468           je 0x10244
0x000101dc      893424         mov dword [rsp], esi
0x000101df      4889e1         mov rcx, rsp
0x000101e2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000101e9      4889c6         mov rsi, rax
0x000101ec      48c744240400.  mov qword [rsp + 4], 0
0x000101f5      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x000101fe      48c744241400.  mov qword [rsp + 0x14], 0
0x00010207      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00010210      48c744242400.  mov qword [rsp + 0x24], 0
0x00010219      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00010222      c74424340000.  mov dword [rsp + 0x34], 0
0x0001022a      e821f8ffff     call sym.quotearg_n_options
0x0001022f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00010234      6448330c2528.  xor rcx, qword fs:[0x28]
0x0001023d      750a           jne 0x10249
0x0001023f      4883c448       add rsp, 0x48
0x00010243      c3             ret
0x00010244      e8b728ffff     call sym.imp.abort
0x00010249      e8522affff     call sym.imp.__stack_chk_fail
0x0001024e      6690           nop
;-- quotearg_n_custom_mem:
0x00010250      4883ec48       sub rsp, 0x48
0x00010254      4989c9         mov r9, rcx
0x00010257      488b0d92a720.  mov rcx, qword [0x0021a9f0]             ; [0x21a9f0:8]=0
0x0001025e      660f6f055aa7.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00010266      64488b042528.  mov rax, qword fs:[0x28]
0x0001026f      4889442438     mov qword [rsp + 0x38], rax
0x00010274      31c0           xor eax, eax
0x00010276      0f290424       movaps xmmword [rsp], xmm0
0x0001027a      4885f6         test rsi, rsi
0x0001027d      48894c2430     mov qword [rsp + 0x30], rcx
0x00010282      c704240a0000.  mov dword [rsp], 0xa
0x00010289      660f6f053fa7.  movdqa xmm0, xmmword [0x0021a9d0]
0x00010291      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00010296      660f6f0542a7.  movdqa xmm0, xmmword [0x0021a9e0]
0x0001029e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x000102a3      7432           je 0x102d7
0x000102a5      4885d2         test rdx, rdx
0x000102a8      742d           je 0x102d7
0x000102aa      4889742428     mov qword [rsp + 0x28], rsi
0x000102af      4889542430     mov qword [rsp + 0x30], rdx
0x000102b4      4889e1         mov rcx, rsp
0x000102b7      4c89c2         mov rdx, r8
0x000102ba      4c89ce         mov rsi, r9
0x000102bd      e88ef7ffff     call sym.quotearg_n_options
0x000102c2      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000102c7      6448333c2528.  xor rdi, qword fs:[0x28]
0x000102d0      750a           jne 0x102dc
0x000102d2      4883c448       add rsp, 0x48
0x000102d6      c3             ret
0x000102d7      e82428ffff     call sym.imp.abort
0x000102dc      e8bf29ffff     call sym.imp.__stack_chk_fail
0x000102e1      0f1f440000     nop dword [rax + rax]
0x000102e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x000102f0      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x000102f7      e954ffffff     jmp sym.quotearg_n_custom_mem
0x000102fc      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00010300      4889d1         mov rcx, rdx
0x00010303      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0001030a      4889f2         mov rdx, rsi
0x0001030d      4889fe         mov rsi, rdi
0x00010310      31ff           xor edi, edi
0x00010312      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00010317      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00010320      4989c8         mov r8, rcx
0x00010323      4889d1         mov rcx, rdx
0x00010326      4889f2         mov rdx, rsi
0x00010329      4889fe         mov rsi, rdi
0x0001032c      31ff           xor edi, edi
0x0001032e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00010333      0f1f00         nop dword [rax]
0x00010336      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00010340      488d0df99d20.  lea rcx, obj.quote_quoting_options      ; 0x21a140
0x00010347      e904f7ffff     jmp sym.quotearg_n_options
0x0001034c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00010350      488d0de99d20.  lea rcx, obj.quote_quoting_options      ; 0x21a140
0x00010357      4889f2         mov rdx, rsi
0x0001035a      4889fe         mov rsi, rdi
0x0001035d      31ff           xor edi, edi
0x0001035f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00010364      6690           nop
0x00010366      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00010370      488d0dc99d20.  lea rcx, obj.quote_quoting_options      ; 0x21a140
0x00010377      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0001037e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00010383      0f1f00         nop dword [rax]
0x00010386      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00010390      488d0da99d20.  lea rcx, obj.quote_quoting_options      ; 0x21a140
0x00010397      4889fe         mov rsi, rdi
0x0001039a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000103a1      31ff           xor edi, edi
0x000103a3      e9a8f6ffff     jmp sym.quotearg_n_options
0x000103a8      0f1f84000000.  nop dword [rax + rax]
;-- randread_error:
0x000103b0      55             push rbp
0x000103b1      53             push rbx
0x000103b2      4883ec08       sub rsp, 8
0x000103b6      4885ff         test rdi, rdi
0x000103b9      743d           je 0x103f8
0x000103bb      e8d0ffffff     call sym.quote
0x000103c0      4889c5         mov rbp, rax
0x000103c3      e84827ffff     call sym.imp.__errno_location
0x000103c8      833800         cmp dword [rax], 0
0x000103cb      4889c3         mov rbx, rax
0x000103ce      ba05000000     mov edx, 5
0x000103d3      7428           je 0x103fd
0x000103d5      488d35fc5c00.  lea rsi, str.s:_read_error              ; 0x160d8 ; "%s: read error"
0x000103dc      31ff           xor edi, edi
0x000103de      e88d28ffff     call sym.imp.dcgettext
0x000103e3      8b3d479d2000   mov edi, dword [obj.exit_failure]       ; [0x21a130:4]=1
0x000103e9      8b33           mov esi, dword [rbx]
0x000103eb      4889c2         mov rdx, rax
0x000103ee      4889e9         mov rcx, rbp
0x000103f1      31c0           xor eax, eax
0x000103f3      e8e82bffff     call sym.imp.error
0x000103f8      e80327ffff     call sym.imp.abort
0x000103fd      488d35c45c00.  lea rsi, [0x000160c8]                   ; "%s: end of file"
0x00010404      31ff           xor edi, edi
0x00010406      e86528ffff     call sym.imp.dcgettext
0x0001040b      ebd6           jmp 0x103e3
0x0001040d      0f1f00         nop dword [rax]
;-- randread_new:
0x00010410      4157           push r15
0x00010412      4156           push r14
0x00010414      4155           push r13
0x00010416      4154           push r12
0x00010418      55             push rbp
0x00010419      53             push rbx
0x0001041a      4883ec38       sub rsp, 0x38
0x0001041e      64488b042528.  mov rax, qword fs:[0x28]
0x00010427      4889442428     mov qword [rsp + 0x28], rax
0x0001042c      31c0           xor eax, eax
0x0001042e      4885f6         test rsi, rsi
0x00010431      0f8421010000   je 0x10558
0x00010437      4885ff         test rdi, rdi
0x0001043a      4989fc         mov r12, rdi
0x0001043d      4889f5         mov rbp, rsi
0x00010440      747e           je 0x104c0
0x00010442      488d35ab5c00.  lea rsi, [0x000160f4]                   ; "rb"
0x00010449      e8b2300000     call sym.fopen_safer
0x0001044e      4885c0         test rax, rax
0x00010451      4989c5         mov r13, rax
0x00010454      0f84fe010000   je 0x10658
0x0001045a      bf38100000     mov edi, 0x1038
0x0001045f      e87c190000     call sym.xmalloc
0x00010464      4889c3         mov rbx, rax
0x00010467      4c8928         mov qword [rax], r13
0x0001046a      488d053fffff.  lea rax, sym.randread_error             ; 0x103b0 ; "USH\x83\xec\bH\x85\xfft=\xe8\xd0\xff\xff\xffH\x89\xc5\xe8H'\xff\xff\x838"
0x00010471      4881fd001000.  cmp rbp, 0x1000
0x00010478      b900100000     mov ecx, 0x1000
0x0001047d      488d7318       lea rsi, [rbx + 0x18]
0x00010481      480f46cd       cmovbe rcx, rbp
0x00010485      48894308       mov qword [rbx + 8], rax
0x00010489      4c896310       mov qword [rbx + 0x10], r12
0x0001048d      31d2           xor edx, edx
0x0001048f      4c89ef         mov rdi, r13
0x00010492      e8192bffff     call sym.imp.setvbuf
0x00010497      488b542428     mov rdx, qword [rsp + 0x28]
0x0001049c      644833142528.  xor rdx, qword fs:[0x28]
0x000104a5      4889d8         mov rax, rbx
0x000104a8      0f85b1010000   jne 0x1065f
0x000104ae      4883c438       add rsp, 0x38
0x000104b2      5b             pop rbx
0x000104b3      5d             pop rbp
0x000104b4      415c           pop r12
0x000104b6      415d           pop r13
0x000104b8      415e           pop r14
0x000104ba      415f           pop r15
0x000104bc      c3             ret
0x000104bd      0f1f00         nop dword [rax]
0x000104c0      bf38100000     mov edi, 0x1038
0x000104c5      e816190000     call sym.xmalloc
0x000104ca      4889c3         mov rbx, rax
0x000104cd      48c700000000.  mov qword [rax], 0
0x000104d4      488d05d5feff.  lea rax, sym.randread_error             ; 0x103b0 ; "USH\x83\xec\bH\x85\xfft=\xe8\xd0\xff\xff\xffH\x89\xc5\xe8H'\xff\xff\x838"
0x000104db      488d3d055c00.  lea rdi, str.dev_urandom                ; 0x160e7 ; "/dev/urandom"
0x000104e2      31f6           xor esi, esi
0x000104e4      48c743100000.  mov qword [rbx + 0x10], 0
0x000104ec      48894308       mov qword [rbx + 8], rax
0x000104f0      48c743180000.  mov qword [rbx + 0x18], 0
0x000104f8      31c0           xor eax, eax
0x000104fa      e8112bffff     call sym.imp.open
0x000104ff      85c0           test eax, eax
0x00010501      4c8d6b20       lea r13, [rbx + 0x20]
0x00010505      4189c7         mov r15d, eax
0x00010508      787e           js 0x10588
0x0001050a      4881fd000800.  cmp rbp, 0x800
0x00010511      4889ea         mov rdx, rbp
0x00010514      41be00080000   mov r14d, 0x800
0x0001051a      490f47d6       cmova rdx, r14
0x0001051e      b918100000     mov ecx, 0x1018
0x00010523      4c89ee         mov rsi, r13
0x00010526      89c7           mov edi, eax
0x00010528      e84326ffff     call sym.imp.__read_chk
0x0001052d      4489ff         mov edi, r15d
0x00010530      4889c5         mov rbp, rax
0x00010533      e87828ffff     call sym.imp.close
0x00010538      4881fdff0700.  cmp rbp, 0x7ff
0x0001053f      0f8e1f010000   jle 0x10664
0x00010545      4c89ef         mov rdi, r13
0x00010548      e893060000     call sym.isaac_seed
0x0001054d      e945ffffff     jmp 0x10497
0x00010552      660f1f440000   nop word [rax + rax]
0x00010558      bf38100000     mov edi, 0x1038
0x0001055d      e87e180000     call sym.xmalloc
0x00010562      4889c3         mov rbx, rax
0x00010565      48c700000000.  mov qword [rax], 0
0x0001056c      488d053dfeff.  lea rax, sym.randread_error             ; 0x103b0 ; "USH\x83\xec\bH\x85\xfft=\xe8\xd0\xff\xff\xffH\x89\xc5\xe8H'\xff\xff\x838"
0x00010573      48c743100000.  mov qword [rbx + 0x10], 0
0x0001057b      48894308       mov qword [rbx + 8], rax
0x0001057f      e913ffffff     jmp 0x10497
0x00010584      0f1f4000       nop dword [rax]
0x00010588      4c8d642410     lea r12, [rsp + 0x10]
0x0001058d      31f6           xor esi, esi
0x0001058f      41be18000000   mov r14d, 0x18
0x00010595      4c89e7         mov rdi, r12
0x00010598      e8c327ffff     call sym.imp.gettimeofday
0x0001059d      660f6f442410   movdqa xmm0, xmmword [rsp + 0x10]
0x000105a3      0f114320       movups xmmword [rbx + 0x20], xmm0
0x000105a7      e85426ffff     call sym.imp.getpid
0x000105ac      894330         mov dword [rbx + 0x30], eax
0x000105af      89442410       mov dword [rsp + 0x10], eax
0x000105b3      e8082bffff     call sym.imp.getppid
0x000105b8      89442410       mov dword [rsp + 0x10], eax
0x000105bc      894334         mov dword [rbx + 0x34], eax
0x000105bf      bd00080000     mov ebp, 0x800
0x000105c4      b804000000     mov eax, 4
0x000105c9      4c29f5         sub rbp, r14
0x000105cc      4883fd04       cmp rbp, 4
0x000105d0      480f47e8       cmova rbp, rax
0x000105d4      e8d726ffff     call sym.imp.getuid
0x000105d9      85ed           test ebp, ebp
0x000105db      89442410       mov dword [rsp + 0x10], eax
0x000105df      4b8d4c3500     lea rcx, [r13 + r14]
0x000105e4      89ee           mov esi, ebp
0x000105e6      7414           je 0x105fc
0x000105e8      31c0           xor eax, eax
0x000105ea      89c2           mov edx, eax
0x000105ec      83c001         add eax, 1
0x000105ef      410fb63c14     movzx edi, byte [r12 + rdx]
0x000105f4      39f0           cmp eax, esi
0x000105f6      40883c11       mov byte [rcx + rdx], dil
0x000105fa      72ee           jb 0x105ea
0x000105fc      4c01f5         add rbp, r14
0x000105ff      4881fdff0700.  cmp rbp, 0x7ff
0x00010606      0f8739ffffff   ja 0x10545
0x0001060c      e89f28ffff     call sym.imp.getgid
0x00010611      89442410       mov dword [rsp + 0x10], eax
0x00010615      b800080000     mov eax, 0x800
0x0001061a      ba04000000     mov edx, 4
0x0001061f      4829e8         sub rax, rbp
0x00010622      498d4c2d00     lea rcx, [r13 + rbp]
0x00010627      4883f804       cmp rax, 4
0x0001062b      480f47c2       cmova rax, rdx
0x0001062f      85c0           test eax, eax
0x00010631      89c6           mov esi, eax
0x00010633      0f840cffffff   je 0x10545
0x00010639      31c0           xor eax, eax
0x0001063b      89c2           mov edx, eax
0x0001063d      83c001         add eax, 1
0x00010640      410fb63c14     movzx edi, byte [r12 + rdx]
0x00010645      39f0           cmp eax, esi
0x00010647      40883c11       mov byte [rcx + rdx], dil
0x0001064b      72ee           jb 0x1063b
0x0001064d      e9f3feffff     jmp 0x10545
0x00010652      660f1f440000   nop word [rax + rax]
0x00010658      31db           xor ebx, ebx
0x0001065a      e938feffff     jmp 0x10497
0x0001065f      e83c26ffff     call sym.imp.__stack_chk_fail
0x00010664      4885ed         test rbp, rbp
0x00010667      4d89f7         mov r15, r14
0x0001066a      b810000000     mov eax, 0x10
0x0001066f      490f48ec       cmovs rbp, r12
0x00010673      4c8d642410     lea r12, [rsp + 0x10]
0x00010678      4929ef         sub r15, rbp
0x0001067b      4983ff10       cmp r15, 0x10
0x0001067f      4c89e7         mov rdi, r12
0x00010682      4c0f47f8       cmova r15, rax
0x00010686      31f6           xor esi, esi
0x00010688      e8d326ffff     call sym.imp.gettimeofday
0x0001068d      498d442d00     lea rax, [r13 + rbp]
0x00010692      4c01fd         add rbp, r15
0x00010695      4489f9         mov ecx, r15d
0x00010698      4881fdff0700.  cmp rbp, 0x7ff
0x0001069f      4c89e6         mov rsi, r12
0x000106a2      4889c7         mov rdi, rax
0x000106a5      f3a4           rep movsb byte [rdi], byte ptr [rsi]
0x000106a7      0f8798feffff   ja 0x10545
0x000106ad      4d89f7         mov r15, r14
0x000106b0      41b804000000   mov r8d, 4
0x000106b6      4929ef         sub r15, rbp
0x000106b9      4c89442408     mov qword [rsp + 8], r8
0x000106be      4983ff04       cmp r15, 4
0x000106c2      4d0f47f8       cmova r15, r8
0x000106c6      4a8d543d00     lea rdx, [rbp + r15]
0x000106cb      4c01ed         add rbp, r13
0x000106ce      48891424       mov qword [rsp], rdx
0x000106d2      e82925ffff     call sym.imp.getpid
0x000106d7      488b1424       mov rdx, qword [rsp]
0x000106db      89442410       mov dword [rsp + 0x10], eax
0x000106df      4489f9         mov ecx, r15d
0x000106e2      4889ef         mov rdi, rbp
0x000106e5      4c89e6         mov rsi, r12
0x000106e8      4c8b442408     mov r8, qword [rsp + 8]
0x000106ed      f3a4           rep movsb byte [rdi], byte ptr [rsi]
0x000106ef      4881faff0700.  cmp rdx, 0x7ff
0x000106f6      0f8f49feffff   jg 0x10545
0x000106fc      4929d6         sub r14, rdx
0x000106ff      4983fe04       cmp r14, 4
0x00010703      4d0f47f0       cmova r14, r8
0x00010707      e8b429ffff     call sym.imp.getppid
0x0001070c      488b1424       mov rdx, qword [rsp]
0x00010710      89442410       mov dword [rsp + 0x10], eax
0x00010714      4489f1         mov ecx, r14d
0x00010717      4c89e6         mov rsi, r12
0x0001071a      498d441500     lea rax, [r13 + rdx]
0x0001071f      4901d6         add r14, rdx
0x00010722      4981feff0700.  cmp r14, 0x7ff
0x00010729      4889c7         mov rdi, rax
0x0001072c      f3a4           rep movsb byte [rdi], byte ptr [rsi]
0x0001072e      0f8711feffff   ja 0x10545
0x00010734      e986feffff     jmp 0x105bf
0x00010739      0f1f80000000.  nop dword [rax]
;-- randread_set_handler:
0x00010740      48897708       mov qword [rdi + 8], rsi
0x00010744      c3             ret
0x00010745      90             nop
0x00010746      662e0f1f8400.  nop word cs:[rax + rax]
;-- randread_set_handler_arg:
0x00010750      48897710       mov qword [rdi + 0x10], rsi
0x00010754      c3             ret
0x00010755      90             nop
0x00010756      662e0f1f8400.  nop word cs:[rax + rax]
;-- randread:
0x00010760      4157           push r15
0x00010762      4156           push r14
0x00010764      4155           push r13
0x00010766      4154           push r12
0x00010768      4989fc         mov r12, rdi
0x0001076b      55             push rbp
0x0001076c      53             push rbx
0x0001076d      4889d5         mov rbp, rdx
0x00010770      4889f3         mov rbx, rsi
0x00010773      4883ec18       sub rsp, 0x18
0x00010777      488b0f         mov rcx, qword [rdi]
0x0001077a      4885c9         test rcx, rcx
0x0001077d      48894c2408     mov qword [rsp + 8], rcx
0x00010782      7464           je 0x107e8
0x00010784      e88723ffff     call sym.imp.__errno_location
0x00010789      488b4c2408     mov rcx, qword [rsp + 8]
0x0001078e      4989c5         mov r13, rax
0x00010791      eb23           jmp 0x107b6
0x00010793      0f1f440000     nop dword [rax + rax]
0x00010798      498b0424       mov rax, qword [r12]
0x0001079c      498b7c2410     mov rdi, qword [r12 + 0x10]
0x000107a1      8b00           mov eax, dword [rax]
0x000107a3      83e020         and eax, 0x20                           ; "@"
0x000107a6      0f45c2         cmovne eax, edx
0x000107a9      41894500       mov dword [r13], eax
0x000107ad      41ff542408     call qword [r12 + 8]
0x000107b2      498b0c24       mov rcx, qword [r12]
0x000107b6      4889ea         mov rdx, rbp
0x000107b9      4889df         mov rdi, rbx
0x000107bc      be01000000     mov esi, 1
0x000107c1      e84a24ffff     call sym.imp.fread_unlocked
0x000107c6      4801c3         add rbx, rax
0x000107c9      4829c5         sub rbp, rax
0x000107cc      418b5500       mov edx, dword [r13]
0x000107d0      75c6           jne 0x10798
0x000107d2      4883c418       add rsp, 0x18
0x000107d6      5b             pop rbx
0x000107d7      5d             pop rbp
0x000107d8      415c           pop r12
0x000107da      415d           pop r13
0x000107dc      415e           pop r14
0x000107de      415f           pop r15
0x000107e0      c3             ret
0x000107e1      0f1f80000000.  nop dword [rax]
0x000107e8      4c8b7718       mov r14, qword [rdi + 0x18]
0x000107ec      488d87380800.  lea rax, [rdi + 0x838]
0x000107f3      4c8d6f20       lea r13, [rdi + 0x20]
0x000107f7      4889442408     mov qword [rsp + 8], rax
0x000107fc      4c39f2         cmp rdx, r14
0x000107ff      0f86dd000000   jbe 0x108e2
0x00010805      be00080000     mov esi, 0x800
0x0001080a      4889df         mov rdi, rbx
0x0001080d      4c89f2         mov rdx, r14
0x00010810      4c29f6         sub rsi, r14
0x00010813      4803742408     add rsi, qword [rsp + 8]
0x00010818      4c01f3         add rbx, r14
0x0001081b      4c29f5         sub rbp, r14
0x0001081e      e85d26ffff     call sym.imp.memcpy
0x00010823      f6c307         test bl, 7
0x00010826      7568           jne 0x10890
0x00010828      4881fdff0700.  cmp rbp, 0x7ff
0x0001082f      0f869e000000   jbe 0x108d3
0x00010835      4c8dbd00f8ff.  lea r15, [rbp - 0x800]
0x0001083c      4d89fe         mov r14, r15
0x0001083f      4181e6ff0700.  and r14d, 0x7ff
0x00010846      eb14           jmp 0x1085c
0x00010848      0f1f84000000.  nop dword [rax + rax]
0x00010850      4d39f7         cmp r15, r14
0x00010853      743b           je 0x10890
0x00010855      4981ef000800.  sub r15, 0x800
0x0001085c      4889de         mov rsi, rbx
0x0001085f      4c89ef         mov rdi, r13
0x00010862      4881c3000800.  add rbx, 0x800
0x00010869      e8e2000000     call sym.isaac_refill
0x0001086e      4d85ff         test r15, r15
0x00010871      4c89fd         mov rbp, r15
0x00010874      75da           jne 0x10850
0x00010876      49c744241800.  mov qword [r12 + 0x18], 0
0x0001087f      4883c418       add rsp, 0x18
0x00010883      5b             pop rbx
0x00010884      5d             pop rbp
0x00010885      415c           pop r12
0x00010887      415d           pop r13
0x00010889      415e           pop r14
0x0001088b      415f           pop r15
0x0001088d      c3             ret
0x0001088e      6690           nop
0x00010890      488b742408     mov rsi, qword [rsp + 8]
0x00010895      4c89ef         mov rdi, r13
0x00010898      41be00080000   mov r14d, 0x800
0x0001089e      e8ad000000     call sym.isaac_refill
0x000108a3      4881fd000800.  cmp rbp, 0x800
0x000108aa      0f8755ffffff   ja 0x10805
0x000108b0      41be00080000   mov r14d, 0x800
0x000108b6      488b742408     mov rsi, qword [rsp + 8]
0x000108bb      4889ea         mov rdx, rbp
0x000108be      4889df         mov rdi, rbx
0x000108c1      4929ee         sub r14, rbp
0x000108c4      e8b725ffff     call sym.imp.memcpy
0x000108c9      4d89742418     mov qword [r12 + 0x18], r14
0x000108ce      e9fffeffff     jmp 0x107d2
0x000108d3      488b742408     mov rsi, qword [rsp + 8]
0x000108d8      4c89ef         mov rdi, r13
0x000108db      e870000000     call sym.isaac_refill
0x000108e0      ebce           jmp 0x108b0
0x000108e2      4989c7         mov r15, rax
0x000108e5      4d29f7         sub r15, r14
0x000108e8      498d87000800.  lea rax, [r15 + 0x800]
0x000108ef      4889442408     mov qword [rsp + 8], rax
0x000108f4      ebc0           jmp 0x108b6
0x000108f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- randread_free:
0x00010900      55             push rbp
0x00010901      53             push rbx
0x00010902      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00010909      4889fb         mov rbx, rdi
0x0001090c      be38100000     mov esi, 0x1038
0x00010911      4883ec08       sub rsp, 8
0x00010915      488b2f         mov rbp, qword [rdi]
0x00010918      e8e326ffff     call sym.imp.__explicit_bzero_chk
0x0001091d      4889df         mov rdi, rbx
0x00010920      e89b28ffff     call sym..plt.got
0x00010925      4885ed         test rbp, rbp
0x00010928      7416           je 0x10940
0x0001092a      4883c408       add rsp, 8
0x0001092e      4889ef         mov rdi, rbp
0x00010931      5b             pop rbx
0x00010932      5d             pop rbp
0x00010933      e908220000     jmp sym.rpl_fclose
0x00010938      0f1f84000000.  nop dword [rax + rax]
0x00010940      4883c408       add rsp, 8
0x00010944      31c0           xor eax, eax
0x00010946      5b             pop rbx
0x00010947      5d             pop rbp
0x00010948      c3             ret
0x00010949      0f1f80000000.  nop dword [rax]
;-- isaac_refill:
0x00010950      488b87100800.  mov rax, qword [rdi + 0x810]
0x00010957      488b97000800.  mov rdx, qword [rdi + 0x800]
0x0001095e      4c8d8f000400.  lea r9, [rdi + 0x400]
0x00010965      488d4801       lea rcx, [rax + 1]
0x00010969      4889f8         mov rax, rdi
0x0001096c      48898f100800.  mov qword [rdi + 0x810], rcx
0x00010973      48038f080800.  add rcx, qword [rdi + 0x808]
0x0001097a      660f1f440000   nop word [rax + rax]
0x00010980      4989d0         mov r8, rdx
0x00010983      49c1e015       shl r8, 0x15
0x00010987      4c31c2         xor rdx, r8
0x0001098a      4c8b00         mov r8, qword [rax]
0x0001098d      48f7d2         not rdx
0x00010990      480390000400.  add rdx, qword [rax + 0x400]
0x00010997      4d89c2         mov r10, r8
0x0001099a      4181e2f80700.  and r10d, 0x7f8
0x000109a1      4e8b1c17       mov r11, qword [rdi + r10]
0x000109a5      4989d2         mov r10, rdx
0x000109a8      49c1ea05       shr r10, 5
0x000109ac      4901d3         add r11, rdx
0x000109af      4c31d2         xor rdx, r10
0x000109b2      4c01d9         add rcx, r11
0x000109b5      488908         mov qword [rax], rcx
0x000109b8      48c1e908       shr rcx, 8
0x000109bc      81e1f8070000   and ecx, 0x7f8
0x000109c2      4c8b1c0f       mov r11, qword [rdi + rcx]
0x000109c6      4d01c3         add r11, r8
0x000109c9      4c891e         mov qword [rsi], r11
0x000109cc      480390080400.  add rdx, qword [rax + 0x408]
0x000109d3      488b4808       mov rcx, qword [rax + 8]
0x000109d7      4989d2         mov r10, rdx
0x000109da      4889ca         mov rdx, rcx
0x000109dd      81e2f8070000   and edx, 0x7f8
0x000109e3      4c8b0417       mov r8, qword [rdi + rdx]
0x000109e7      4c89d2         mov rdx, r10
0x000109ea      48c1e20c       shl rdx, 0xc
0x000109ee      4c31d2         xor rdx, r10
0x000109f1      4d01d0         add r8, r10
0x000109f4      4d01d8         add r8, r11
0x000109f7      4c894008       mov qword [rax + 8], r8
0x000109fb      49c1e808       shr r8, 8
0x000109ff      4181e0f80700.  and r8d, 0x7f8
0x00010a06      4a030c07       add rcx, qword [rdi + r8]
0x00010a0a      48894e08       mov qword [rsi + 8], rcx
0x00010a0e      4c8b4010       mov r8, qword [rax + 0x10]
0x00010a12      4989cb         mov r11, rcx
0x00010a15      480390100400.  add rdx, qword [rax + 0x410]
0x00010a1c      4c89c1         mov rcx, r8
0x00010a1f      81e1f8070000   and ecx, 0x7f8
0x00010a25      4c8b140f       mov r10, qword [rdi + rcx]
0x00010a29      4901d2         add r10, rdx
0x00010a2c      4c89d1         mov rcx, r10
0x00010a2f      4c01d9         add rcx, r11
0x00010a32      48894810       mov qword [rax + 0x10], rcx
0x00010a36      48c1e908       shr rcx, 8
0x00010a3a      81e1f8070000   and ecx, 0x7f8
0x00010a40      4c8b140f       mov r10, qword [rdi + rcx]
0x00010a44      4889d1         mov rcx, rdx
0x00010a47      48c1e921       shr rcx, 0x21
0x00010a4b      4831ca         xor rdx, rcx
0x00010a4e      4d01c2         add r10, r8
0x00010a51      4c895610       mov qword [rsi + 0x10], r10
0x00010a55      488b4818       mov rcx, qword [rax + 0x18]
0x00010a59      480390180400.  add rdx, qword [rax + 0x418]
0x00010a60      4989c8         mov r8, rcx
0x00010a63      4181e0f80700.  and r8d, 0x7f8
0x00010a6a      4e8b1c07       mov r11, qword [rdi + r8]
0x00010a6e      4901d3         add r11, rdx
0x00010a71      4d89d8         mov r8, r11
0x00010a74      4d01d0         add r8, r10
0x00010a77      4883c020       add rax, 0x20                           ; "@"
0x00010a7b      4883c620       add rsi, 0x20                           ; "@"
0x00010a7f      4c8940f8       mov qword [rax - 8], r8
0x00010a83      49c1e808       shr r8, 8
0x00010a87      4181e0f80700.  and r8d, 0x7f8
0x00010a8e      4a030c07       add rcx, qword [rdi + r8]
0x00010a92      48894ef8       mov qword [rsi - 8], rcx
0x00010a96      4c39c8         cmp rax, r9
0x00010a99      0f82e1feffff   jb 0x10980
0x00010a9f      4c8d8f000800.  lea r9, [rdi + 0x800]
0x00010aa6      662e0f1f8400.  nop word cs:[rax + rax]
0x00010ab0      4989d0         mov r8, rdx
0x00010ab3      49c1e015       shl r8, 0x15
0x00010ab7      4c31c2         xor rdx, r8
0x00010aba      4c8b00         mov r8, qword [rax]
0x00010abd      48f7d2         not rdx
0x00010ac0      48039000fcff.  add rdx, qword [rax - 0x400]
0x00010ac7      4d89c2         mov r10, r8
0x00010aca      4181e2f80700.  and r10d, 0x7f8
0x00010ad1      4e8b1c17       mov r11, qword [rdi + r10]
0x00010ad5      4989d2         mov r10, rdx
0x00010ad8      49c1ea05       shr r10, 5
0x00010adc      4901d3         add r11, rdx
0x00010adf      4c31d2         xor rdx, r10
0x00010ae2      4c01d9         add rcx, r11
0x00010ae5      488908         mov qword [rax], rcx
0x00010ae8      48c1e908       shr rcx, 8
0x00010aec      81e1f8070000   and ecx, 0x7f8
0x00010af2      4c8b1c0f       mov r11, qword [rdi + rcx]
0x00010af6      4d01c3         add r11, r8
0x00010af9      4c891e         mov qword [rsi], r11
0x00010afc      48039008fcff.  add rdx, qword [rax - 0x3f8]
0x00010b03      488b4808       mov rcx, qword [rax + 8]
0x00010b07      4989d2         mov r10, rdx
0x00010b0a      4889ca         mov rdx, rcx
0x00010b0d      81e2f8070000   and edx, 0x7f8
0x00010b13      4c8b0417       mov r8, qword [rdi + rdx]
0x00010b17      4c89d2         mov rdx, r10
0x00010b1a      48c1e20c       shl rdx, 0xc
0x00010b1e      4c31d2         xor rdx, r10
0x00010b21      4d01d0         add r8, r10
0x00010b24      4d01d8         add r8, r11
0x00010b27      4c894008       mov qword [rax + 8], r8
0x00010b2b      49c1e808       shr r8, 8
0x00010b2f      4181e0f80700.  and r8d, 0x7f8
0x00010b36      4a030c07       add rcx, qword [rdi + r8]
0x00010b3a      48894e08       mov qword [rsi + 8], rcx
0x00010b3e      4c8b4010       mov r8, qword [rax + 0x10]
0x00010b42      4989cb         mov r11, rcx
0x00010b45      48039010fcff.  add rdx, qword [rax - 0x3f0]
0x00010b4c      4c89c1         mov rcx, r8
0x00010b4f      81e1f8070000   and ecx, 0x7f8
0x00010b55      4c8b140f       mov r10, qword [rdi + rcx]
0x00010b59      4901d2         add r10, rdx
0x00010b5c      4c89d1         mov rcx, r10
0x00010b5f      4c01d9         add rcx, r11
0x00010b62      48894810       mov qword [rax + 0x10], rcx
0x00010b66      48c1e908       shr rcx, 8
0x00010b6a      81e1f8070000   and ecx, 0x7f8
0x00010b70      4c8b140f       mov r10, qword [rdi + rcx]
0x00010b74      4889d1         mov rcx, rdx
0x00010b77      48c1e921       shr rcx, 0x21
0x00010b7b      4831ca         xor rdx, rcx
0x00010b7e      4d01c2         add r10, r8
0x00010b81      4c895610       mov qword [rsi + 0x10], r10
0x00010b85      488b4818       mov rcx, qword [rax + 0x18]
0x00010b89      48039018fcff.  add rdx, qword [rax - 0x3e8]
0x00010b90      4989c8         mov r8, rcx
0x00010b93      4181e0f80700.  and r8d, 0x7f8
0x00010b9a      4e8b1c07       mov r11, qword [rdi + r8]
0x00010b9e      4901d3         add r11, rdx
0x00010ba1      4d89d8         mov r8, r11
0x00010ba4      4d01d0         add r8, r10
0x00010ba7      4883c020       add rax, 0x20                           ; "@"
0x00010bab      4883c620       add rsi, 0x20                           ; "@"
0x00010baf      4c8940f8       mov qword [rax - 8], r8
0x00010bb3      49c1e808       shr r8, 8
0x00010bb7      4181e0f80700.  and r8d, 0x7f8
0x00010bbe      4a030c07       add rcx, qword [rdi + r8]
0x00010bc2      48894ef8       mov qword [rsi - 8], rcx
0x00010bc6      4c39c8         cmp rax, r9
0x00010bc9      0f82e1feffff   jb 0x10ab0
0x00010bcf      488997000800.  mov qword [rdi + 0x800], rdx
0x00010bd6      48898f080800.  mov qword [rdi + 0x808], rcx
0x00010bdd      c3             ret
0x00010bde      6690           nop
;-- isaac_seed:
0x00010be0      4155           push r13
0x00010be2      4154           push r12
0x00010be4      4c8da7000800.  lea r12, [rdi + 0x800]
0x00010beb      55             push rbp
0x00010bec      4889fa         mov rdx, rdi
0x00010bef      53             push rbx
0x00010bf0      4889f8         mov rax, rdi
0x00010bf3      48b9abc0446c.  movabs rcx, 0x98f5704f6c44c0ab
0x00010bfd      49baed89fccb.  movabs r10, 0xae985bf2cbfc89ed
0x00010c07      48bd1593a0a5.  movabs rbp, 0x48fe4a0fa5a09315
0x00010c11      48becee05583.  movabs rsi, 0x82f053db8355e0ce
0x00010c1b      49b82455594a.  movabs r8, 0xb29b2e824a595524
0x00010c25      48bba012473d.  movabs rbx, 0x8c0ea5053d4712a0
0x00010c2f      49bb62c83ac7.  movabs r11, 0xb9f8b322c73ac862
0x00010c39      49b97c4b88a2.  movabs r9, 0x647c4677a2884b7c
0x00010c43      0f1f440000     nop dword [rax + rax]
0x00010c48      48037020       add rsi, qword [rax + 0x20]
0x00010c4c      48034838       add rcx, qword [rax + 0x38]
0x00010c50      4c8b28         mov r13, qword [rax]
0x00010c53      48036828       add rbp, qword [rax + 0x28]
0x00010c57      4c035030       add r10, qword [rax + 0x30]
0x00010c5b      4929f5         sub r13, rsi
0x00010c5e      4d01e9         add r9, r13
0x00010c61      4989cd         mov r13, rcx
0x00010c64      49c1ed09       shr r13, 9
0x00010c68      4c01c9         add rcx, r9
0x00010c6b      4c31ed         xor rbp, r13
0x00010c6e      4c8b6808       mov r13, qword [rax + 8]
0x00010c72      4929ed         sub r13, rbp
0x00010c75      4d01eb         add r11, r13
0x00010c78      4d89cd         mov r13, r9
0x00010c7b      49c1e509       shl r13, 9
0x00010c7f      4d01d9         add r9, r11
0x00010c82      4d31ea         xor r10, r13
0x00010c85      4c8b6810       mov r13, qword [rax + 0x10]
0x00010c89      4d29d5         sub r13, r10
0x00010c8c      4c01eb         add rbx, r13
0x00010c8f      4d89dd         mov r13, r11
0x00010c92      49c1ed17       shr r13, 0x17
0x00010c96      4901db         add r11, rbx
0x00010c99      4c31e9         xor rcx, r13
0x00010c9c      4c8b6818       mov r13, qword [rax + 0x18]
0x00010ca0      4929cd         sub r13, rcx
0x00010ca3      4d01e8         add r8, r13
0x00010ca6      4989dd         mov r13, rbx
0x00010ca9      49c1e50f       shl r13, 0xf
0x00010cad      4c01c3         add rbx, r8
0x00010cb0      4d31e9         xor r9, r13
0x00010cb3      4d89c5         mov r13, r8
0x00010cb6      4c29ce         sub rsi, r9
0x00010cb9      49c1ed0e       shr r13, 0xe
0x00010cbd      4c8908         mov qword [rax], r9
0x00010cc0      4d31eb         xor r11, r13
0x00010cc3      4989f5         mov r13, rsi
0x00010cc6      4901f0         add r8, rsi
0x00010cc9      4c29dd         sub rbp, r11
0x00010ccc      49c1e514       shl r13, 0x14
0x00010cd0      4c895808       mov qword [rax + 8], r11
0x00010cd4      4c31eb         xor rbx, r13
0x00010cd7      4c8d2c2e       lea r13, [rsi + rbp]
0x00010cdb      4889ee         mov rsi, rbp
0x00010cde      4929da         sub r10, rbx
0x00010ce1      48c1ee11       shr rsi, 0x11
0x00010ce5      48895810       mov qword [rax + 0x10], rbx
0x00010ce9      4931f0         xor r8, rsi
0x00010cec      4c89d6         mov rsi, r10
0x00010cef      4c01d5         add rbp, r10
0x00010cf2      4c29c1         sub rcx, r8
0x00010cf5      48c1e60e       shl rsi, 0xe
0x00010cf9      4c894018       mov qword [rax + 0x18], r8
0x00010cfd      4c31ee         xor rsi, r13
0x00010d00      4901ca         add r10, rcx
0x00010d03      48896828       mov qword [rax + 0x28], rbp
0x00010d07      48897020       mov qword [rax + 0x20], rsi
0x00010d0b      4c895030       mov qword [rax + 0x30], r10
0x00010d0f      4883c040       add rax, 0x40                           ; segment.PHDR
0x00010d13      488948f8       mov qword [rax - 8], rcx
0x00010d17      4939c4         cmp r12, rax
0x00010d1a      0f8528ffffff   jne 0x10c48
0x00010d20      48037220       add rsi, qword [rdx + 0x20]
0x00010d24      48034a38       add rcx, qword [rdx + 0x38]
0x00010d28      4c8b22         mov r12, qword [rdx]
0x00010d2b      48036a28       add rbp, qword [rdx + 0x28]
0x00010d2f      4c035230       add r10, qword [rdx + 0x30]
0x00010d33      4929f4         sub r12, rsi
0x00010d36      4d01e1         add r9, r12
0x00010d39      4989cc         mov r12, rcx
0x00010d3c      49c1ec09       shr r12, 9
0x00010d40      4c01c9         add rcx, r9
0x00010d43      4c31e5         xor rbp, r12
0x00010d46      4c8b6208       mov r12, qword [rdx + 8]
0x00010d4a      4929ec         sub r12, rbp
0x00010d4d      4d01e3         add r11, r12
0x00010d50      4d89cc         mov r12, r9
0x00010d53      49c1e409       shl r12, 9
0x00010d57      4d01d9         add r9, r11
0x00010d5a      4d31e2         xor r10, r12
0x00010d5d      4c8b6210       mov r12, qword [rdx + 0x10]
0x00010d61      4d29d4         sub r12, r10
0x00010d64      4c01e3         add rbx, r12
0x00010d67      4d89dc         mov r12, r11
0x00010d6a      49c1ec17       shr r12, 0x17
0x00010d6e      4901db         add r11, rbx
0x00010d71      4c31e1         xor rcx, r12
0x00010d74      4c8b6218       mov r12, qword [rdx + 0x18]
0x00010d78      4929cc         sub r12, rcx
0x00010d7b      4d01e0         add r8, r12
0x00010d7e      4989dc         mov r12, rbx
0x00010d81      49c1e40f       shl r12, 0xf
0x00010d85      4c01c3         add rbx, r8
0x00010d88      4d31e1         xor r9, r12
0x00010d8b      4d89c4         mov r12, r8
0x00010d8e      4c29ce         sub rsi, r9
0x00010d91      49c1ec0e       shr r12, 0xe
0x00010d95      4c890a         mov qword [rdx], r9
0x00010d98      4d31e3         xor r11, r12
0x00010d9b      4989f4         mov r12, rsi
0x00010d9e      4901f0         add r8, rsi
0x00010da1      4c29dd         sub rbp, r11
0x00010da4      49c1e414       shl r12, 0x14
0x00010da8      4c895a08       mov qword [rdx + 8], r11
0x00010dac      4c31e3         xor rbx, r12
0x00010daf      4c8d242e       lea r12, [rsi + rbp]
0x00010db3      4889ee         mov rsi, rbp
0x00010db6      4929da         sub r10, rbx
0x00010db9      48c1ee11       shr rsi, 0x11
0x00010dbd      48895a10       mov qword [rdx + 0x10], rbx
0x00010dc1      4931f0         xor r8, rsi
0x00010dc4      4c89d6         mov rsi, r10
0x00010dc7      4c01d5         add rbp, r10
0x00010dca      4c29c1         sub rcx, r8
0x00010dcd      48c1e60e       shl rsi, 0xe
0x00010dd1      4c894218       mov qword [rdx + 0x18], r8
0x00010dd5      4c31e6         xor rsi, r12
0x00010dd8      4901ca         add r10, rcx
0x00010ddb      48896a28       mov qword [rdx + 0x28], rbp
0x00010ddf      48897220       mov qword [rdx + 0x20], rsi
0x00010de3      4c895230       mov qword [rdx + 0x30], r10
0x00010de7      4883c240       add rdx, 0x40                           ; segment.PHDR
0x00010deb      48894af8       mov qword [rdx - 8], rcx
0x00010def      4839d0         cmp rax, rdx
0x00010df2      0f8528ffffff   jne 0x10d20
0x00010df8      5b             pop rbx
0x00010df9      48c787100800.  mov qword [rdi + 0x810], 0
0x00010e04      48c787080800.  mov qword [rdi + 0x808], 0
0x00010e0f      5d             pop rbp
0x00010e10      48c787000800.  mov qword [rdi + 0x800], 0
0x00010e1b      415c           pop r12
0x00010e1d      415d           pop r13
0x00010e1f      c3             ret
;-- save_token:
0x00010e20      4154           push r12                                ; ../coreutils-8.31/lib/readtokens0.c:52
0x00010e22      55             push rbp
0x00010e23      53             push rbx
0x00010e24      488b5730       mov rdx, qword [rdi + 0x30]             ; ../coreutils-8.31/lib/readtokens0.c:54
0x00010e28      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/readtokens0.c:52
0x00010e2b      4c8b6728       mov r12, qword [rdi + 0x28]             ; ../coreutils-8.31/lib/readtokens0.c:54
0x00010e2f      4889d5         mov rbp, rdx
0x00010e32      4c29e5         sub rbp, r12
0x00010e35      4883ed01       sub rbp, 1
0x00010e39      4c39e2         cmp rdx, r12                            ; ../coreutils-8.31/lib/readtokens0.c:55
0x00010e3c      0f84be000000   je 0x10f00
0x00010e42      488b4b48       mov rcx, qword [rbx + 0x48]
0x00010e46      488d040a       lea rax, [rdx + rcx]
0x00010e4a      48f7d1         not rcx
0x00010e4d      488b5338       mov rdx, qword [rbx + 0x38]
0x00010e51      4821c8         and rax, rcx
0x00010e54      488b4b20       mov rcx, qword [rbx + 0x20]
0x00010e58      4889c6         mov rsi, rax
0x00010e5b      4889d7         mov rdi, rdx
0x00010e5e      48894330       mov qword [rbx + 0x30], rax
0x00010e62      4829ce         sub rsi, rcx
0x00010e65      4829cf         sub rdi, rcx
0x00010e68      4839fe         cmp rsi, rdi
0x00010e6b      7607           jbe 0x10e74
0x00010e6d      48895330       mov qword [rbx + 0x30], rdx
0x00010e71      4889d0         mov rax, rdx
0x00010e74      48894328       mov qword [rbx + 0x28], rax
0x00010e78      488b93880000.  mov rdx, qword [rbx + 0x88]             ; ../coreutils-8.31/lib/readtokens0.c:56
0x00010e7f      488b83900000.  mov rax, qword [rbx + 0x90]
0x00010e86      4829d0         sub rax, rdx
0x00010e89      4883f807       cmp rax, 7
0x00010e8d      7651           jbe 0x10ee0
0x00010e8f      4c8922         mov qword [rdx], r12
0x00010e92      488b93e00000.  mov rdx, qword [rbx + 0xe0]             ; ../coreutils-8.31/lib/readtokens0.c:57
0x00010e99      488b83e80000.  mov rax, qword [rbx + 0xe8]
0x00010ea0      488383880000.  add qword [rbx + 0x88], 8               ; ../coreutils-8.31/lib/readtokens0.c:56
0x00010ea8      4829d0         sub rax, rdx                            ; ../coreutils-8.31/lib/readtokens0.c:57
0x00010eab      4883f807       cmp rax, 7
0x00010eaf      7718           ja 0x10ec9
0x00010eb1      488dbbc80000.  lea rdi, [rbx + 0xc8]
0x00010eb8      be08000000     mov esi, 8
0x00010ebd      e8ce220000     call sym._obstack_newchunk
0x00010ec2      488b93e00000.  mov rdx, qword [rbx + 0xe0]
0x00010ec9      48892a         mov qword [rdx], rbp                    ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00010ecc      488383e00000.  add qword [rbx + 0xe0], 8               ; ../coreutils-8.31/lib/readtokens0.c:57
0x00010ed4      48830301       add qword [rbx], 1                      ; ../coreutils-8.31/lib/readtokens0.c:58
0x00010ed8      5b             pop rbx                                 ; ../coreutils-8.31/lib/readtokens0.c:59
0x00010ed9      5d             pop rbp
0x00010eda      415c           pop r12
0x00010edc      c3             ret
0x00010edd      0f1f00         nop dword [rax]
0x00010ee0      488d7b70       lea rdi, [rbx + 0x70]                   ; ../coreutils-8.31/lib/readtokens0.c:56
0x00010ee4      be08000000     mov esi, 8
0x00010ee9      e8a2220000     call sym._obstack_newchunk
0x00010eee      488b93880000.  mov rdx, qword [rbx + 0x88]
0x00010ef5      eb98           jmp 0x10e8f
0x00010ef7      660f1f840000.  nop word [rax + rax]
0x00010f00      804f6802       or byte [rdi + 0x68], 2                 ; ../coreutils-8.31/lib/readtokens0.c:55
0x00010f04      e939ffffff     jmp 0x10e42
0x00010f09      0f1f80000000.  nop dword [rax]
;-- readtokens0_init:
0x00010f10      4154           push r12                                ; ../coreutils-8.31/lib/readtokens0.c:31
0x00010f12      4c8b259f9020.  mov r12, qword [reloc.free]             ; ../coreutils-8.31/lib/readtokens0.c:35 ; [0x219fb8:8]=0
0x00010f19      31d2           xor edx, edx
0x00010f1b      55             push rbp                                ; ../coreutils-8.31/lib/readtokens0.c:31
0x00010f1c      488b2db59020.  mov rbp, qword [reloc.malloc]           ; ../coreutils-8.31/lib/readtokens0.c:35 ; [0x219fd8:8]=0
0x00010f23      31f6           xor esi, esi
0x00010f25      53             push rbx                                ; ../coreutils-8.31/lib/readtokens0.c:31
0x00010f26      4889fb         mov rbx, rdi
0x00010f29      48c707000000.  mov qword [rdi], 0                      ; ../coreutils-8.31/lib/readtokens0.c:32
0x00010f30      48c747080000.  mov qword [rdi + 8], 0                  ; ../coreutils-8.31/lib/readtokens0.c:33
0x00010f38      48c747100000.  mov qword [rdi + 0x10], 0               ; ../coreutils-8.31/lib/readtokens0.c:34
0x00010f40      488d7f18       lea rdi, [rdi + 0x18]                   ; ../coreutils-8.31/lib/readtokens0.c:35
0x00010f44      4d89e0         mov r8, r12
0x00010f47      4889e9         mov rcx, rbp
0x00010f4a      e801220000     call sym._obstack_begin
0x00010f4f      488d7b70       lea rdi, [rbx + 0x70]                   ; ../coreutils-8.31/lib/readtokens0.c:36
0x00010f53      4d89e0         mov r8, r12
0x00010f56      4889e9         mov rcx, rbp
0x00010f59      31d2           xor edx, edx
0x00010f5b      31f6           xor esi, esi
0x00010f5d      e8ee210000     call sym._obstack_begin
0x00010f62      488dbbc80000.  lea rdi, [rbx + 0xc8]                   ; ../coreutils-8.31/lib/readtokens0.c:37
0x00010f69      4d89e0         mov r8, r12
0x00010f6c      4889e9         mov rcx, rbp
0x00010f6f      5b             pop rbx                                 ; ../coreutils-8.31/lib/readtokens0.c:38
0x00010f70      5d             pop rbp
0x00010f71      415c           pop r12
0x00010f73      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/readtokens0.c:37
0x00010f75      31f6           xor esi, esi
0x00010f77      e9d4210000     jmp sym._obstack_begin
0x00010f7c      0f1f4000       nop dword [rax]
;-- readtokens0_free:
0x00010f80      53             push rbx                                ; ../coreutils-8.31/lib/readtokens0.c:42
0x00010f81      4889fb         mov rbx, rdi
0x00010f84      488d7f18       lea rdi, [rdi + 0x18]                   ; ../coreutils-8.31/lib/readtokens0.c:43
0x00010f88      31f6           xor esi, esi
0x00010f8a      e831230000     call sym._obstack_free
0x00010f8f      488d7b70       lea rdi, [rbx + 0x70]                   ; ../coreutils-8.31/lib/readtokens0.c:44
0x00010f93      31f6           xor esi, esi
0x00010f95      e826230000     call sym._obstack_free
0x00010f9a      488dbbc80000.  lea rdi, [rbx + 0xc8]                   ; ../coreutils-8.31/lib/readtokens0.c:45
0x00010fa1      31f6           xor esi, esi
0x00010fa3      5b             pop rbx                                 ; ../coreutils-8.31/lib/readtokens0.c:46
0x00010fa4      e917230000     jmp sym._obstack_free                   ; ../coreutils-8.31/lib/readtokens0.c:45
0x00010fa9      0f1f80000000.  nop dword [rax]
;-- readtokens0:
0x00010fb0      4154           push r12                                ; ../coreutils-8.31/lib/readtokens0.c:67
0x00010fb2      55             push rbp
0x00010fb3      4c8d6618       lea r12, [rsi + 0x18]                   ; ../coreutils-8.31/lib/readtokens0.c:87
0x00010fb7      53             push rbx                                ; ../coreutils-8.31/lib/readtokens0.c:67
0x00010fb8      4889fd         mov rbp, rdi
0x00010fbb      4889f3         mov rbx, rsi
0x00010fbe      4883ec10       sub rsp, 0x10
0x00010fc2      eb12           jmp 0x10fd6
0x00010fc4      0f1f4000       nop dword [rax]
0x00010fc8      488d4a01       lea rcx, [rdx + 1]                      ; ../coreutils-8.31/lib/readtokens0.c:87
0x00010fcc      85c0           test eax, eax                           ; ../coreutils-8.31/lib/readtokens0.c:88
0x00010fce      48894b30       mov qword [rbx + 0x30], rcx             ; ../coreutils-8.31/lib/readtokens0.c:87
0x00010fd2      8802           mov byte [rdx], al
0x00010fd4      743e           je 0x11014                              ; ../coreutils-8.31/lib/readtokens0.c:88
0x00010fd6      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/readtokens0.c:71
0x00010fd9      e8c21dffff     call sym.imp.fgetc
0x00010fde      83f8ff         cmp eax, 0xffffffff                     ; ../coreutils-8.31/lib/readtokens0.c:72
0x00010fe1      744d           je 0x11030
0x00010fe3      488b5330       mov rdx, qword [rbx + 0x30]             ; ../coreutils-8.31/lib/readtokens0.c:87
0x00010fe7      48395338       cmp qword [rbx + 0x38], rdx
0x00010feb      75db           jne 0x10fc8
0x00010fed      be01000000     mov esi, 1
0x00010ff2      4c89e7         mov rdi, r12
0x00010ff5      8944240c       mov dword [rsp + 0xc], eax
0x00010ff9      e892210000     call sym._obstack_newchunk
0x00010ffe      488b5330       mov rdx, qword [rbx + 0x30]
0x00011002      8b44240c       mov eax, dword [rsp + 0xc]
0x00011006      488d4a01       lea rcx, [rdx + 1]
0x0001100a      85c0           test eax, eax                           ; ../coreutils-8.31/lib/readtokens0.c:88
0x0001100c      48894b30       mov qword [rbx + 0x30], rcx             ; ../coreutils-8.31/lib/readtokens0.c:87
0x00011010      8802           mov byte [rdx], al
0x00011012      75c2           jne 0x10fd6                             ; ../coreutils-8.31/lib/readtokens0.c:88
0x00011014      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/readtokens0.c:89
0x00011017      e804feffff     call sym.save_token
0x0001101c      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/readtokens0.c:71
0x0001101f      e87c1dffff     call sym.imp.fgetc
0x00011024      83f8ff         cmp eax, 0xffffffff                     ; ../coreutils-8.31/lib/readtokens0.c:72
0x00011027      75ba           jne 0x10fe3
0x00011029      0f1f80000000.  nop dword [rax]
0x00011030      488b4330       mov rax, qword [rbx + 0x30]             ; ../coreutils-8.31/lib/readtokens0.c:74
0x00011034      48394328       cmp qword [rbx + 0x28], rax             ; ../coreutils-8.31/lib/readtokens0.c:78
0x00011038      741d           je 0x11057
0x0001103a      48394338       cmp qword [rbx + 0x38], rax             ; ../coreutils-8.31/lib/readtokens0.c:80
0x0001103e      0f845c010000   je 0x111a0
0x00011044      488d5001       lea rdx, [rax + 1]
0x00011048      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/readtokens0.c:81
0x0001104b      48895330       mov qword [rbx + 0x30], rdx             ; ../coreutils-8.31/lib/readtokens0.c:80
0x0001104f      c60000         mov byte [rax], 0
0x00011052      e8c9fdffff     call sym.save_token                     ; ../coreutils-8.31/lib/readtokens0.c:81
0x00011057      488b93880000.  mov rdx, qword [rbx + 0x88]             ; ../coreutils-8.31/lib/readtokens0.c:94
0x0001105e      488b83900000.  mov rax, qword [rbx + 0x90]
0x00011065      4829d0         sub rax, rdx
0x00011068      4883f807       cmp rax, 7
0x0001106c      0f86ee000000   jbe 0x11160
0x00011072      48c702000000.  mov qword [rdx], 0
0x00011079      488b83880000.  mov rax, qword [rbx + 0x88]
0x00011080      488bb3800000.  mov rsi, qword [rbx + 0x80]             ; ../coreutils-8.31/lib/readtokens0.c:96
0x00011087      488d5008       lea rdx, [rax + 8]                      ; ../coreutils-8.31/lib/readtokens0.c:94
0x0001108b      4839f2         cmp rdx, rsi                            ; ../coreutils-8.31/lib/readtokens0.c:96
0x0001108e      488993880000.  mov qword [rbx + 0x88], rdx             ; ../coreutils-8.31/lib/readtokens0.c:94
0x00011095      0f84f5000000   je 0x11190                              ; ../coreutils-8.31/lib/readtokens0.c:96
0x0001109b      488b8ba00000.  mov rcx, qword [rbx + 0xa0]
0x000110a2      488d040a       lea rax, [rdx + rcx]
0x000110a6      48f7d1         not rcx
0x000110a9      488b5378       mov rdx, qword [rbx + 0x78]
0x000110ad      4821c8         and rax, rcx
0x000110b0      488b8b900000.  mov rcx, qword [rbx + 0x90]
0x000110b7      4889c7         mov rdi, rax
0x000110ba      488983880000.  mov qword [rbx + 0x88], rax
0x000110c1      4829d7         sub rdi, rdx
0x000110c4      4989c8         mov r8, rcx
0x000110c7      4929d0         sub r8, rdx
0x000110ca      4c39c7         cmp rdi, r8
0x000110cd      760a           jbe 0x110d9
0x000110cf      48898b880000.  mov qword [rbx + 0x88], rcx
0x000110d6      4889c8         mov rax, rcx
0x000110d9      48897308       mov qword [rbx + 8], rsi
0x000110dd      488b93e00000.  mov rdx, qword [rbx + 0xe0]             ; ../coreutils-8.31/lib/readtokens0.c:97
0x000110e4      488bb3d80000.  mov rsi, qword [rbx + 0xd8]
0x000110eb      488983800000.  mov qword [rbx + 0x80], rax             ; ../coreutils-8.31/lib/readtokens0.c:96
0x000110f2      4839f2         cmp rdx, rsi                            ; ../coreutils-8.31/lib/readtokens0.c:97
0x000110f5      0f8485000000   je 0x11180
0x000110fb      488b8bf80000.  mov rcx, qword [rbx + 0xf8]
0x00011102      488d040a       lea rax, [rdx + rcx]
0x00011106      48f7d1         not rcx
0x00011109      488b93e80000.  mov rdx, qword [rbx + 0xe8]
0x00011110      4821c8         and rax, rcx
0x00011113      488b8bd00000.  mov rcx, qword [rbx + 0xd0]
0x0001111a      4889c7         mov rdi, rax
0x0001111d      4989d1         mov r9, rdx
0x00011120      488983e00000.  mov qword [rbx + 0xe0], rax
0x00011127      4829cf         sub rdi, rcx
0x0001112a      4929c9         sub r9, rcx
0x0001112d      4c39cf         cmp rdi, r9
0x00011130      760a           jbe 0x1113c
0x00011132      488993e00000.  mov qword [rbx + 0xe0], rdx
0x00011139      4889d0         mov rax, rdx
0x0001113c      488983d80000.  mov qword [rbx + 0xd8], rax
0x00011143      48897310       mov qword [rbx + 0x10], rsi
0x00011147      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/readtokens0.c:98
0x0001114a      e8311affff     call sym.imp.ferror
0x0001114f      85c0           test eax, eax
0x00011151      0f94c0         sete al
0x00011154      4883c410       add rsp, 0x10                           ; ../coreutils-8.31/lib/readtokens0.c:99
0x00011158      5b             pop rbx
0x00011159      5d             pop rbp
0x0001115a      415c           pop r12
0x0001115c      c3             ret
0x0001115d      0f1f00         nop dword [rax]
0x00011160      488d7b70       lea rdi, [rbx + 0x70]                   ; ../coreutils-8.31/lib/readtokens0.c:94
0x00011164      be08000000     mov esi, 8
0x00011169      e822200000     call sym._obstack_newchunk
0x0001116e      488b93880000.  mov rdx, qword [rbx + 0x88]
0x00011175      e9f8feffff     jmp 0x11072
0x0001117a      660f1f440000   nop word [rax + rax]
0x00011180      808b18010000.  or byte [rbx + 0x118], 2                ; ../coreutils-8.31/lib/readtokens0.c:97
0x00011187      e96fffffff     jmp 0x110fb
0x0001118c      0f1f4000       nop dword [rax]
0x00011190      808bc0000000.  or byte [rbx + 0xc0], 2                 ; ../coreutils-8.31/lib/readtokens0.c:96
0x00011197      e9fffeffff     jmp 0x1109b
0x0001119c      0f1f4000       nop dword [rax]
0x000111a0      488d7b18       lea rdi, [rbx + 0x18]                   ; ../coreutils-8.31/lib/readtokens0.c:80
0x000111a4      be01000000     mov esi, 1
0x000111a9      e8e21f0000     call sym._obstack_newchunk
0x000111ae      488b4330       mov rax, qword [rbx + 0x30]
0x000111b2      e98dfeffff     jmp 0x11044
0x000111b7      660f1f840000.  nop word [rax + rax]
;-- mkstemp_safer:
0x000111c0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/mkstemp-safer.c:32
0x000111c4      e8771dffff     call sym.imp.mkstemp                    ; ../coreutils-8.31/lib/mkstemp-safer.c:33
0x000111c9      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/mkstemp-safer.c:34
0x000111cd      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/mkstemp-safer.c:33
0x000111cf      e9ac050000     jmp sym.fd_safer
0x000111d4      6690           nop
0x000111d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- mkostemp_safer:
0x000111e0      53             push rbx                                ; ../coreutils-8.31/lib/mkstemp-safer.c:41
0x000111e1      89f3           mov ebx, esi
0x000111e3      e8581bffff     call sym.imp.mkostemp                   ; ../coreutils-8.31/lib/mkstemp-safer.c:42
0x000111e8      89de           mov esi, ebx
0x000111ea      89c7           mov edi, eax
0x000111ec      5b             pop rbx                                 ; ../coreutils-8.31/lib/mkstemp-safer.c:43
0x000111ed      e9ae220000     jmp sym.fd_safer_flag                   ; ../coreutils-8.31/lib/mkstemp-safer.c:42
0x000111f2      662e0f1f8400.  nop word cs:[rax + rax]
0x000111fc      0f1f4000       nop dword [rax]
;-- strnumcmp:
0x00011200      440fb617       movzx r10d, byte [rdi]                  ; ../coreutils-8.31/lib/strnumcmp.c:29
0x00011204      440fb60e       movzx r9d, byte [rsi]
0x00011208      4180fa2d       cmp r10b, 0x2d
0x0001120c      0f8456010000   je 0x11368
0x00011212      4180f92d       cmp r9b, 0x2d
0x00011216      7540           jne 0x11258
0x00011218      0f1f84000000.  nop dword [rax + rax]
0x00011220      4883c601       add rsi, 1
0x00011224      0fb606         movzx eax, byte [rsi]
0x00011227      3c30           cmp al, 0x30
0x00011229      74f5           je 0x11220
0x0001122b      39c1           cmp ecx, eax
0x0001122d      74f1           je 0x11220
0x0001122f      39c2           cmp edx, eax
0x00011231      0f84b9020000   je 0x114f0
0x00011237      8d70d0         lea esi, [rax - 0x30]
0x0001123a      b801000000     mov eax, 1
0x0001123f      83fe09         cmp esi, 9
0x00011242      0f87d0020000   ja 0x11518
0x00011248      f3c3           ret
0x0001124a      660f1f440000   nop word [rax + rax]
0x00011250      4883c701       add rdi, 1
0x00011254      440fb617       movzx r10d, byte [rdi]
0x00011258      4180fa30       cmp r10b, 0x30
0x0001125c      74f2           je 0x11250
0x0001125e      450fb6c2       movzx r8d, r10b
0x00011262      4439c1         cmp ecx, r8d
0x00011265      4489c0         mov eax, r8d
0x00011268      74e6           je 0x11250
0x0001126a      4180f930       cmp r9b, 0x30
0x0001126e      750e           jne 0x1127e
0x00011270      4883c601       add rsi, 1
0x00011274      440fb60e       movzx r9d, byte [rsi]
0x00011278      4180f930       cmp r9b, 0x30
0x0001127c      74f2           je 0x11270
0x0001127e      450fb6d9       movzx r11d, r9b
0x00011282      4439d9         cmp ecx, r11d
0x00011285      74e9           je 0x11270
0x00011287      4538ca         cmp r10b, r9b
0x0001128a      0f85d0020000   jne 0x11560
0x00011290      4183eb30       sub r11d, 0x30
0x00011294      4183fb09       cmp r11d, 9
0x00011298      0f8739040000   ja 0x116d7
0x0001129e      6690           nop
0x000112a0      4883c701       add rdi, 1
0x000112a4      440fb607       movzx r8d, byte [rdi]
0x000112a8      4439c1         cmp ecx, r8d
0x000112ab      4589c2         mov r10d, r8d
0x000112ae      4489c0         mov eax, r8d
0x000112b1      74ed           je 0x112a0
0x000112b3      0f1f440000     nop dword [rax + rax]
0x000112b8      4883c601       add rsi, 1
0x000112bc      440fb61e       movzx r11d, byte [rsi]
0x000112c0      4439d9         cmp ecx, r11d
0x000112c3      4589d9         mov r9d, r11d
0x000112c6      74f0           je 0x112b8
0x000112c8      4538da         cmp r10b, r11b
0x000112cb      0f858f020000   jne 0x11560
0x000112d1      4183eb30       sub r11d, 0x30
0x000112d5      4183fb09       cmp r11d, 9
0x000112d9      76c5           jbe 0x112a0
0x000112db      4439c2         cmp edx, r8d
0x000112de      0f84bc020000   je 0x115a0
0x000112e4      450fb6da       movzx r11d, r10b
0x000112e8      450fb6c1       movzx r8d, r9b
0x000112ec      4183e830       sub r8d, 0x30
0x000112f0      4439da         cmp edx, r11d
0x000112f3      0f84bc020000   je 0x115b5
0x000112f9      4429d8         sub eax, r11d
0x000112fc      4183eb30       sub r11d, 0x30
0x00011300      4183f809       cmp r8d, 9
0x00011304      0f87d6020000   ja 0x115e0
0x0001130a      4531c0         xor r8d, r8d
0x0001130d      0f1f00         nop dword [rax]
0x00011310      4883c701       add rdi, 1
0x00011314      0fb617         movzx edx, byte [rdi]
0x00011317      39d1           cmp ecx, edx
0x00011319      74f5           je 0x11310
0x0001131b      83ea30         sub edx, 0x30
0x0001131e      4983c001       add r8, 1
0x00011322      83fa09         cmp edx, 9
0x00011325      76e9           jbe 0x11310
0x00011327      4183fb09       cmp r11d, 9
0x0001132b      0f87bf020000   ja 0x115f0
0x00011331      31ff           xor edi, edi
0x00011333      0f1f440000     nop dword [rax + rax]
0x00011338      4883c601       add rsi, 1
0x0001133c      0fb616         movzx edx, byte [rsi]
0x0001133f      39d1           cmp ecx, edx
0x00011341      74f5           je 0x11338
0x00011343      83ea30         sub edx, 0x30
0x00011346      4883c701       add rdi, 1
0x0001134a      83fa09         cmp edx, 9
0x0001134d      76e9           jbe 0x11338
0x0001134f      4c39c7         cmp rdi, r8
0x00011352      0f843c020000   je 0x11594
0x00011358      4939f8         cmp r8, rdi
0x0001135b      19c0           sbb eax, eax
0x0001135d      83c801         or eax, 1
0x00011360      c3             ret
0x00011361      0f1f80000000.  nop dword [rax]
0x00011368      4883c701       add rdi, 1
0x0001136c      440fb607       movzx r8d, byte [rdi]
0x00011370      4180f830       cmp r8b, 0x30
0x00011374      74f2           je 0x11368
0x00011376      410fb6c0       movzx eax, r8b
0x0001137a      39c1           cmp ecx, eax
0x0001137c      4189c3         mov r11d, eax
0x0001137f      74e7           je 0x11368
0x00011381      4180f92d       cmp r9b, 0x2d
0x00011385      7449           je 0x113d0
0x00011387      39c2           cmp edx, eax
0x00011389      0f8441010000   je 0x114d0
0x0001138f      83e830         sub eax, 0x30
0x00011392      83f809         cmp eax, 9
0x00011395      7711           ja 0x113a8
0x00011397      e9bc030000     jmp 0x11758
0x0001139c      0f1f4000       nop dword [rax]
0x000113a0      4883c601       add rsi, 1
0x000113a4      440fb60e       movzx r9d, byte [rsi]
0x000113a8      4180f930       cmp r9b, 0x30
0x000113ac      74f2           je 0x113a0
0x000113ae      450fb6d9       movzx r11d, r9b
0x000113b2      4439d9         cmp ecx, r11d
0x000113b5      74e9           je 0x113a0
0x000113b7      4439da         cmp edx, r11d
0x000113ba      0f8480010000   je 0x11540
0x000113c0      4183eb30       sub r11d, 0x30
0x000113c4      31c0           xor eax, eax
0x000113c6      4183fb09       cmp r11d, 9
0x000113ca      0f96c0         setbe al
0x000113cd      f7d8           neg eax
0x000113cf      c3             ret
0x000113d0      4883c601       add rsi, 1
0x000113d4      440fb616       movzx r10d, byte [rsi]
0x000113d8      4180fa30       cmp r10b, 0x30
0x000113dc      74f2           je 0x113d0
0x000113de      450fb6ca       movzx r9d, r10b
0x000113e2      4439c9         cmp ecx, r9d
0x000113e5      74e9           je 0x113d0
0x000113e7      4538d0         cmp r8b, r10b
0x000113ea      0f85d6010000   jne 0x115c6
0x000113f0      4183e930       sub r9d, 0x30
0x000113f4      4183f909       cmp r9d, 9
0x000113f8      0f8752030000   ja 0x11750
0x000113fe      6690           nop
0x00011400      4883c701       add rdi, 1
0x00011404      0fb607         movzx eax, byte [rdi]
0x00011407      39c1           cmp ecx, eax
0x00011409      4189c0         mov r8d, eax
0x0001140c      4189c3         mov r11d, eax
0x0001140f      74ef           je 0x11400
0x00011411      0f1f80000000.  nop dword [rax]
0x00011418      4883c601       add rsi, 1
0x0001141c      440fb60e       movzx r9d, byte [rsi]
0x00011420      4439c9         cmp ecx, r9d
0x00011423      4589ca         mov r10d, r9d
0x00011426      74f0           je 0x11418
0x00011428      4538c8         cmp r8b, r9b
0x0001142b      0f8595010000   jne 0x115c6
0x00011431      4183e930       sub r9d, 0x30
0x00011435      4183f909       cmp r9d, 9
0x00011439      76c5           jbe 0x11400
0x0001143b      39c2           cmp edx, eax
0x0001143d      0f84de010000   je 0x11621
0x00011443      410fb6c2       movzx eax, r10b
0x00011447      450fb6c8       movzx r9d, r8b
0x0001144b      4439ca         cmp edx, r9d
0x0001144e      448d40d0       lea r8d, [rax - 0x30]
0x00011452      0f8468020000   je 0x116c0
0x00011458      4489c8         mov eax, r9d
0x0001145b      418d51d0       lea edx, [r9 - 0x30]
0x0001145f      4429d8         sub eax, r11d
0x00011462      4183f809       cmp r8d, 9
0x00011466      0f8773020000   ja 0x116df
0x0001146c      4531c9         xor r9d, r9d
0x0001146f      90             nop
0x00011470      4883c701       add rdi, 1
0x00011474      440fb607       movzx r8d, byte [rdi]
0x00011478      4439c1         cmp ecx, r8d
0x0001147b      74f3           je 0x11470
0x0001147d      4183e830       sub r8d, 0x30
0x00011481      4983c101       add r9, 1
0x00011485      4183f809       cmp r8d, 9
0x00011489      76e5           jbe 0x11470
0x0001148b      83fa09         cmp edx, 9
0x0001148e      0f87b1010000   ja 0x11645
0x00011494      31ff           xor edi, edi
0x00011496      662e0f1f8400.  nop word cs:[rax + rax]
0x000114a0      4883c601       add rsi, 1
0x000114a4      0fb616         movzx edx, byte [rsi]
0x000114a7      39d1           cmp ecx, edx
0x000114a9      74f5           je 0x114a0
0x000114ab      83ea30         sub edx, 0x30
0x000114ae      4883c701       add rdi, 1
0x000114b2      83fa09         cmp edx, 9
0x000114b5      76e9           jbe 0x114a0
0x000114b7      4c39cf         cmp rdi, r9
0x000114ba      0f84d4000000   je 0x11594
0x000114c0      4939f9         cmp r9, rdi
0x000114c3      19c0           sbb eax, eax
0x000114c5      83e002         and eax, 2
0x000114c8      83e801         sub eax, 1
0x000114cb      c3             ret
0x000114cc      0f1f4000       nop dword [rax]
0x000114d0      4883c701       add rdi, 1
0x000114d4      440fb607       movzx r8d, byte [rdi]
0x000114d8      4180f830       cmp r8b, 0x30
0x000114dc      74f2           je 0x114d0
0x000114de      410fb6c0       movzx eax, r8b
0x000114e2      e9a8feffff     jmp 0x1138f
0x000114e7      660f1f840000.  nop word [rax + rax]
0x000114f0      4883c601       add rsi, 1
0x000114f4      0fb606         movzx eax, byte [rsi]
0x000114f7      3c30           cmp al, 0x30
0x000114f9      0f8538fdffff   jne 0x11237
0x000114ff      4883c601       add rsi, 1
0x00011503      0fb606         movzx eax, byte [rsi]
0x00011506      3c30           cmp al, 0x30
0x00011508      74e6           je 0x114f0
0x0001150a      e928fdffff     jmp 0x11237
0x0001150f      90             nop
0x00011510      4883c701       add rdi, 1
0x00011514      440fb617       movzx r10d, byte [rdi]
0x00011518      4180fa30       cmp r10b, 0x30
0x0001151c      74f2           je 0x11510
0x0001151e      450fb6c2       movzx r8d, r10b
0x00011522      4439c1         cmp ecx, r8d
0x00011525      74e9           je 0x11510
0x00011527      4439c2         cmp edx, r8d
0x0001152a      7454           je 0x11580
0x0001152c      4183e830       sub r8d, 0x30
0x00011530      31c0           xor eax, eax
0x00011532      4183f809       cmp r8d, 9
0x00011536      0f96c0         setbe al
0x00011539      c3             ret
0x0001153a      660f1f440000   nop word [rax + rax]
0x00011540      4883c601       add rsi, 1
0x00011544      440fb60e       movzx r9d, byte [rsi]
0x00011548      4180f930       cmp r9b, 0x30
0x0001154c      74f2           je 0x11540
0x0001154e      450fb6d9       movzx r11d, r9b
0x00011552      e969feffff     jmp 0x113c0
0x00011557      660f1f840000.  nop word [rax + rax]
0x00011560      4439c2         cmp edx, r8d
0x00011563      0f8583fdffff   jne 0x112ec
0x00011569      418d43d0       lea eax, [r11 - 0x30]
0x0001156d      83f809         cmp eax, 9
0x00011570      772e           ja 0x115a0
0x00011572      89d0           mov eax, edx
0x00011574      e973fdffff     jmp 0x112ec
0x00011579      0f1f80000000.  nop dword [rax]
0x00011580      4883c701       add rdi, 1
0x00011584      440fb617       movzx r10d, byte [rdi]
0x00011588      4180fa30       cmp r10b, 0x30
0x0001158c      74f2           je 0x11580
0x0001158e      450fb6c2       movzx r8d, r10b
0x00011592      eb98           jmp 0x1152c
0x00011594      4885ff         test rdi, rdi
0x00011597      ba00000000     mov edx, 0
0x0001159c      0f44c2         cmove eax, edx
0x0001159f      c3             ret
0x000115a0      3a17           cmp dl, byte [rdi]
0x000115a2      440fb606       movzx r8d, byte [rsi]
0x000115a6      0f84a4000000   je 0x11650
0x000115ac      31c0           xor eax, eax
0x000115ae      4438c2         cmp dl, r8b
0x000115b1      7446           je 0x115f9
0x000115b3      f3c3           ret
0x000115b5      4183f809       cmp r8d, 9
0x000115b9      77e5           ja 0x115a0
0x000115bb      29d0           sub eax, edx
0x000115bd      448d5ad0       lea r11d, [rdx - 0x30]
0x000115c1      e944fdffff     jmp 0x1130a
0x000115c6      39c2           cmp edx, eax
0x000115c8      0f857dfeffff   jne 0x1144b
0x000115ce      458d41d0       lea r8d, [r9 - 0x30]
0x000115d2      4183f809       cmp r8d, 9
0x000115d6      7749           ja 0x11621
0x000115d8      4189d3         mov r11d, edx
0x000115db      e96bfeffff     jmp 0x1144b
0x000115e0      4531c0         xor r8d, r8d
0x000115e3      4183fb09       cmp r11d, 9
0x000115e7      0f8644fdffff   jbe 0x11331
0x000115ed      31c0           xor eax, eax
0x000115ef      c3             ret
0x000115f0      31c0           xor eax, eax
0x000115f2      4d85c0         test r8, r8
0x000115f5      0f95c0         setne al
0x000115f8      c3             ret
0x000115f9      488d4601       lea rax, [rsi + 1]
0x000115fd      0fb65601       movzx edx, byte [rsi + 1]
0x00011601      eb07           jmp 0x1160a
0x00011603      4883c001       add rax, 1
0x00011607      0fb610         movzx edx, byte [rax]
0x0001160a      80fa30         cmp dl, 0x30
0x0001160d      74f4           je 0x11603
0x0001160f      0fbec2         movsx eax, dl
0x00011612      83e830         sub eax, 0x30
0x00011615      83f809         cmp eax, 9
0x00011618      0f96c0         setbe al
0x0001161b      0fb6c0         movzx eax, al
0x0001161e      f7d8           neg eax
0x00011620      c3             ret
0x00011621      3a16           cmp dl, byte [rsi]
0x00011623      440fb607       movzx r8d, byte [rdi]
0x00011627      0f84c3000000   je 0x116f0
0x0001162d      31c0           xor eax, eax
0x0001162f      4438c2         cmp dl, r8b
0x00011632      0f857bffffff   jne 0x115b3
0x00011638      4883c701       add rdi, 1
0x0001163c      0fbe07         movsx eax, byte [rdi]
0x0001163f      3c30           cmp al, 0x30
0x00011641      74f5           je 0x11638
0x00011643      ebcd           jmp 0x11612
0x00011645      31c0           xor eax, eax
0x00011647      4d85c9         test r9, r9
0x0001164a      0f95c0         setne al
0x0001164d      f7d8           neg eax
0x0001164f      c3             ret
0x00011650      4438c2         cmp dl, r8b
0x00011653      0fb64f01       movzx ecx, byte [rdi + 1]
0x00011657      7431           je 0x1168a
0x00011659      4883c701       add rdi, 1
0x0001165d      eb08           jmp 0x11667
0x0001165f      90             nop
0x00011660      4883c701       add rdi, 1
0x00011664      0fb60f         movzx ecx, byte [rdi]
0x00011667      80f930         cmp cl, 0x30
0x0001166a      74f4           je 0x11660
0x0001166c      0fbec1         movsx eax, cl
0x0001166f      83e830         sub eax, 0x30
0x00011672      83f809         cmp eax, 9
0x00011675      0f96c0         setbe al
0x00011678      0fb6c0         movzx eax, al
0x0001167b      c3             ret
0x0001167c      4183f809       cmp r8d, 9
0x00011680      0f8767ffffff   ja 0x115ed
0x00011686      0fb64f01       movzx ecx, byte [rdi + 1]
0x0001168a      4883c601       add rsi, 1
0x0001168e      440fbe0e       movsx r9d, byte [rsi]
0x00011692      4883c701       add rdi, 1
0x00011696      4138c9         cmp r9b, cl
0x00011699      4489ca         mov edx, r9d
0x0001169c      458d41d0       lea r8d, [r9 - 0x30]
0x000116a0      74da           je 0x1167c
0x000116a2      0fbec1         movsx eax, cl
0x000116a5      448d50d0       lea r10d, [rax - 0x30]
0x000116a9      4183fa09       cmp r10d, 9
0x000116ad      0f87ab000000   ja 0x1175e
0x000116b3      4183f809       cmp r8d, 9
0x000116b7      77ae           ja 0x11667
0x000116b9      4429c8         sub eax, r9d
0x000116bc      c3             ret
0x000116bd      0f1f00         nop dword [rax]
0x000116c0      4183f809       cmp r8d, 9
0x000116c4      0f8757ffffff   ja 0x11621
0x000116ca      89d0           mov eax, edx
0x000116cc      83ea30         sub edx, 0x30
0x000116cf      4429d8         sub eax, r11d
0x000116d2      e995fdffff     jmp 0x1146c
0x000116d7      4589d1         mov r9d, r10d
0x000116da      e9fcfbffff     jmp 0x112db
0x000116df      4531c9         xor r9d, r9d
0x000116e2      83fa09         cmp edx, 9
0x000116e5      0f86a9fdffff   jbe 0x11494
0x000116eb      e9fdfeffff     jmp 0x115ed
0x000116f0      4438c2         cmp dl, r8b
0x000116f3      0fb64e01       movzx ecx, byte [rsi + 1]
0x000116f7      7424           je 0x1171d
0x000116f9      4883c601       add rsi, 1
0x000116fd      eb07           jmp 0x11706
0x000116ff      4883c601       add rsi, 1
0x00011703      0fb60e         movzx ecx, byte [rsi]
0x00011706      80f930         cmp cl, 0x30
0x00011709      74f4           je 0x116ff
0x0001170b      e95cffffff     jmp 0x1166c
0x00011710      83fa09         cmp edx, 9
0x00011713      0f87d4feffff   ja 0x115ed
0x00011719      0fb64e01       movzx ecx, byte [rsi + 1]
0x0001171d      4883c701       add rdi, 1
0x00011721      440fbe07       movsx r8d, byte [rdi]
0x00011725      4883c601       add rsi, 1
0x00011729      4138c8         cmp r8b, cl
0x0001172c      418d50d0       lea edx, [r8 - 0x30]
0x00011730      74de           je 0x11710
0x00011732      0fbec1         movsx eax, cl
0x00011735      448d48d0       lea r9d, [rax - 0x30]
0x00011739      4183f909       cmp r9d, 9
0x0001173d      7633           jbe 0x11772
0x0001173f      31c0           xor eax, eax
0x00011741      83fa09         cmp edx, 9
0x00011744      0f86f2feffff   jbe 0x1163c
0x0001174a      c3             ret
0x0001174b      0f1f440000     nop dword [rax + rax]
0x00011750      4589c2         mov r10d, r8d
0x00011753      e9e3fcffff     jmp 0x1143b
0x00011758      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0001175d      c3             ret
0x0001175e      31c0           xor eax, eax
0x00011760      4183f809       cmp r8d, 9
0x00011764      0f8749feffff   ja 0x115b3
0x0001176a      4889f0         mov rax, rsi
0x0001176d      e998feffff     jmp 0x1160a
0x00011772      83fa09         cmp edx, 9
0x00011775      778f           ja 0x11706
0x00011777      4429c0         sub eax, r8d
0x0001177a      c3             ret
0x0001177b      0f1f440000     nop dword [rax + rax]
;-- fd_safer:
0x00011780      4155           push r13                                ; ../coreutils-8.31/lib/fd-safer.c:38
0x00011782      4154           push r12
0x00011784      55             push rbp
0x00011785      53             push rbx
0x00011786      89fb           mov ebx, edi
0x00011788      4883ec08       sub rsp, 8
0x0001178c      83ff02         cmp edi, 2                              ; ../coreutils-8.31/lib/fd-safer.c:39
0x0001178f      7721           ja 0x117b2
0x00011791      e81a200000     call sym.dup_safer                      ; ../coreutils-8.31/lib/fd-safer.c:41
0x00011796      4189c4         mov r12d, eax
0x00011799      e87213ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fd-safer.c:42
0x0001179e      448b28         mov r13d, dword [rax]
0x000117a1      4889c5         mov rbp, rax
0x000117a4      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fd-safer.c:43
0x000117a6      e80516ffff     call sym.imp.close
0x000117ab      4489e3         mov ebx, r12d                           ; ../coreutils-8.31/lib/fd-safer.c:45
0x000117ae      44896d00       mov dword [rbp], r13d                   ; ../coreutils-8.31/lib/fd-safer.c:44
0x000117b2      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fd-safer.c:49
0x000117b6      89d8           mov eax, ebx
0x000117b8      5b             pop rbx
0x000117b9      5d             pop rbp
0x000117ba      415c           pop r12
0x000117bc      415d           pop r13
0x000117be      c3             ret
0x000117bf      90             nop
;-- version_etc_arn:
0x000117c0      4157           push r15
0x000117c2      4156           push r14
0x000117c4      4155           push r13
0x000117c6      4154           push r12
0x000117c8      4d89cc         mov r12, r9
0x000117cb      55             push rbp
0x000117cc      53             push rbx
0x000117cd      4889fd         mov rbp, rdi
0x000117d0      4c89c3         mov rbx, r8
0x000117d3      4883ec28       sub rsp, 0x28
0x000117d7      4885f6         test rsi, rsi
0x000117da      0f8418010000   je 0x118f8
0x000117e0      4989d0         mov r8, rdx
0x000117e3      488d150d4900.  lea rdx, str.s___s___s                  ; 0x160f7 ; "%s (%s) %s\n"
0x000117ea      4989c9         mov r9, rcx
0x000117ed      31c0           xor eax, eax
0x000117ef      4889f1         mov rcx, rsi
0x000117f2      be01000000     mov esi, 1
0x000117f7      e80419ffff     call sym.imp.__fprintf_chk
0x000117fc      488d35074900.  lea rsi, [0x0001610a]                   ; "(C)"
0x00011803      31ff           xor edi, edi
0x00011805      ba05000000     mov edx, 5
0x0001180a      e86114ffff     call sym.imp.dcgettext
0x0001180f      488d150a4c00.  lea rdx, obj.version_etc_copyright      ; 0x16420 ; "Copyright %s %d Free Software Foundation, Inc."
0x00011816      4889c1         mov rcx, rax
0x00011819      41b8e3070000   mov r8d, 0x7e3
0x0001181f      be01000000     mov esi, 1
0x00011824      4889ef         mov rdi, rbp
0x00011827      31c0           xor eax, eax
0x00011829      e8d218ffff     call sym.imp.__fprintf_chk
0x0001182e      488d355b4900.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x16190 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00011835      31ff           xor edi, edi
0x00011837      ba05000000     mov edx, 5
0x0001183c      e82f14ffff     call sym.imp.dcgettext
0x00011841      4889ee         mov rsi, rbp
0x00011844      4889c7         mov rdi, rax
0x00011847      e8c415ffff     call sym.imp.fputs_unlocked
0x0001184c      4983fc09       cmp r12, 9
0x00011850      0f873a030000   ja 0x11b90
0x00011856      488d158f4b00.  lea rdx, [0x000163ec]
0x0001185d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00011861      4801d0         add rax, rdx
0x00011864      ffe0           jmp rax
0x00011866      662e0f1f8400.  nop word cs:[rax + rax]
0x00011870      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00011874      488b4310       mov rax, qword [rbx + 0x10]
0x00011878      488d35814a00.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x16300 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x0001187f      4c8b4308       mov r8, qword [rbx + 8]
0x00011883      ba05000000     mov edx, 5
0x00011888      31ff           xor edi, edi
0x0001188a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0001188e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00011892      4c894c2410     mov qword [rsp + 0x10], r9
0x00011897      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0001189b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0001189f      48890424       mov qword [rsp], rax
0x000118a3      4c89442408     mov qword [rsp + 8], r8
0x000118a8      488b1b         mov rbx, qword [rbx]
0x000118ab      e8c013ffff     call sym.imp.dcgettext
0x000118b0      4883ec08       sub rsp, 8
0x000118b4      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x000118b9      4889c2         mov rdx, rax
0x000118bc      4889d9         mov rcx, rbx
0x000118bf      be01000000     mov esi, 1
0x000118c4      4889ef         mov rdi, rbp
0x000118c7      31c0           xor eax, eax
0x000118c9      4151           push r9
0x000118cb      4155           push r13
0x000118cd      4154           push r12
0x000118cf      4157           push r15
0x000118d1      4156           push r14
0x000118d3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000118d8      4c8b442438     mov r8, qword [rsp + 0x38]
0x000118dd      e81e18ffff     call sym.imp.__fprintf_chk
0x000118e2      4883c430       add rsp, 0x30
0x000118e6      4883c428       add rsp, 0x28
0x000118ea      5b             pop rbx
0x000118eb      5d             pop rbp
0x000118ec      415c           pop r12
0x000118ee      415d           pop r13
0x000118f0      415e           pop r14
0x000118f2      415f           pop r15
0x000118f4      c3             ret
0x000118f5      0f1f00         nop dword [rax]
0x000118f8      4989c8         mov r8, rcx
0x000118fb      4889d1         mov rcx, rdx
0x000118fe      488d15fe4700.  lea rdx, str.s__s                       ; 0x16103 ; "%s %s\n"
0x00011905      be01000000     mov esi, 1
0x0001190a      31c0           xor eax, eax
0x0001190c      e8ef17ffff     call sym.imp.__fprintf_chk
0x00011911      e9e6feffff     jmp 0x117fc
0x00011916      662e0f1f8400.  nop word cs:[rax + rax]
0x00011920      4c8b5340       mov r10, qword [rbx + 0x40]
0x00011924      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00011928      488d35014a00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x16330 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x0001192f      488b4310       mov rax, qword [rbx + 0x10]
0x00011933      4c8b4308       mov r8, qword [rbx + 8]
0x00011937      ba05000000     mov edx, 5
0x0001193c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00011940      4c8b6328       mov r12, qword [rbx + 0x28]
0x00011944      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00011948      4c8b7318       mov r14, qword [rbx + 0x18]
0x0001194c      488b1b         mov rbx, qword [rbx]
0x0001194f      4c89542418     mov qword [rsp + 0x18], r10
0x00011954      4c894c2410     mov qword [rsp + 0x10], r9
0x00011959      48890424       mov qword [rsp], rax
0x0001195d      4c89442408     mov qword [rsp + 8], r8
0x00011962      31ff           xor edi, edi
0x00011964      e80713ffff     call sym.imp.dcgettext
0x00011969      4c8b542418     mov r10, qword [rsp + 0x18]
0x0001196e      4152           push r10
0x00011970      e93fffffff     jmp 0x118b4
0x00011975      0f1f00         nop dword [rax]
0x00011978      488b1b         mov rbx, qword [rbx]
0x0001197b      488d358c4700.  lea rsi, str.Written_by__s.             ; 0x1610e ; "Written by %s.\n"
0x00011982      ba05000000     mov edx, 5
0x00011987      31ff           xor edi, edi
0x00011989      e8e212ffff     call sym.imp.dcgettext
0x0001198e      4883c428       add rsp, 0x28
0x00011992      4889d9         mov rcx, rbx
0x00011995      4889ef         mov rdi, rbp
0x00011998      5b             pop rbx
0x00011999      5d             pop rbp
0x0001199a      415c           pop r12
0x0001199c      415d           pop r13
0x0001199e      415e           pop r14
0x000119a0      415f           pop r15
0x000119a2      4889c2         mov rdx, rax
0x000119a5      be01000000     mov esi, 1
0x000119aa      31c0           xor eax, eax
0x000119ac      e94f17ffff     jmp sym.imp.__fprintf_chk
0x000119b1      0f1f80000000.  nop dword [rax]
0x000119b8      4c8b6308       mov r12, qword [rbx + 8]
0x000119bc      488d355b4700.  lea rsi, str.Written_by__s_and__s.      ; 0x1611e ; "Written by %s and %s.\n"
0x000119c3      488b1b         mov rbx, qword [rbx]
0x000119c6      ba05000000     mov edx, 5
0x000119cb      31ff           xor edi, edi
0x000119cd      e89e12ffff     call sym.imp.dcgettext
0x000119d2      4883c428       add rsp, 0x28
0x000119d6      4d89e0         mov r8, r12
0x000119d9      4889d9         mov rcx, rbx
0x000119dc      4889ef         mov rdi, rbp
0x000119df      4889c2         mov rdx, rax
0x000119e2      be01000000     mov esi, 1
0x000119e7      5b             pop rbx
0x000119e8      5d             pop rbp
0x000119e9      415c           pop r12
0x000119eb      415d           pop r13
0x000119ed      415e           pop r14
0x000119ef      415f           pop r15
0x000119f1      31c0           xor eax, eax
0x000119f3      e90817ffff     jmp sym.imp.__fprintf_chk
0x000119f8      0f1f84000000.  nop dword [rax + rax]
0x00011a00      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00011a04      4c8b6308       mov r12, qword [rbx + 8]
0x00011a08      488d35264700.  lea rsi, str.Written_by__s___s__and__s. ; 0x16135 ; "Written by %s, %s, and %s.\n"
0x00011a0f      488b1b         mov rbx, qword [rbx]
0x00011a12      ba05000000     mov edx, 5
0x00011a17      31ff           xor edi, edi
0x00011a19      e85212ffff     call sym.imp.dcgettext
0x00011a1e      4883c428       add rsp, 0x28
0x00011a22      4d89e9         mov r9, r13
0x00011a25      4d89e0         mov r8, r12
0x00011a28      4889d9         mov rcx, rbx
0x00011a2b      4889ef         mov rdi, rbp
0x00011a2e      4889c2         mov rdx, rax
0x00011a31      5b             pop rbx
0x00011a32      5d             pop rbp
0x00011a33      415c           pop r12
0x00011a35      415d           pop r13
0x00011a37      415e           pop r14
0x00011a39      415f           pop r15
0x00011a3b      be01000000     mov esi, 1
0x00011a40      31c0           xor eax, eax
0x00011a42      e9b916ffff     jmp sym.imp.__fprintf_chk
0x00011a47      660f1f840000.  nop word [rax + rax]
0x00011a50      488d35094800.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x16260 ; "Written by %s, %s, %s,\nand %s.\n"
0x00011a57      ba05000000     mov edx, 5
0x00011a5c      31ff           xor edi, edi
0x00011a5e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00011a62      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00011a66      4c8b6308       mov r12, qword [rbx + 8]
0x00011a6a      488b1b         mov rbx, qword [rbx]
0x00011a6d      e8fe11ffff     call sym.imp.dcgettext
0x00011a72      4883ec08       sub rsp, 8
0x00011a76      4156           push r14
0x00011a78      4889c2         mov rdx, rax
0x00011a7b      4d89e9         mov r9, r13
0x00011a7e      4d89e0         mov r8, r12
0x00011a81      4889d9         mov rcx, rbx
0x00011a84      4889ef         mov rdi, rbp
0x00011a87      be01000000     mov esi, 1
0x00011a8c      31c0           xor eax, eax
0x00011a8e      e86d16ffff     call sym.imp.__fprintf_chk
0x00011a93      58             pop rax
0x00011a94      5a             pop rdx
0x00011a95      4883c428       add rsp, 0x28
0x00011a99      5b             pop rbx
0x00011a9a      5d             pop rbp
0x00011a9b      415c           pop r12
0x00011a9d      415d           pop r13
0x00011a9f      415e           pop r14
0x00011aa1      415f           pop r15
0x00011aa3      c3             ret
0x00011aa4      0f1f4000       nop dword [rax]
0x00011aa8      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00011aac      488d35cd4700.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x16280 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00011ab3      ba05000000     mov edx, 5
0x00011ab8      31ff           xor edi, edi
0x00011aba      4c8b7318       mov r14, qword [rbx + 0x18]
0x00011abe      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00011ac2      4c8b6308       mov r12, qword [rbx + 8]
0x00011ac6      488b1b         mov rbx, qword [rbx]
0x00011ac9      e8a211ffff     call sym.imp.dcgettext
0x00011ace      4157           push r15
0x00011ad0      eba4           jmp 0x11a76
0x00011ad2      660f1f440000   nop word [rax + rax]
0x00011ad8      4c8b4308       mov r8, qword [rbx + 8]
0x00011adc      4c8b6328       mov r12, qword [rbx + 0x28]
0x00011ae0      488d35c14700.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x162a8 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00011ae7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00011aeb      4c8b7318       mov r14, qword [rbx + 0x18]
0x00011aef      ba05000000     mov edx, 5
0x00011af4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00011af8      31ff           xor edi, edi
0x00011afa      488b1b         mov rbx, qword [rbx]
0x00011afd      4c890424       mov qword [rsp], r8
0x00011b01      e86a11ffff     call sym.imp.dcgettext
0x00011b06      4883ec08       sub rsp, 8
0x00011b0a      4d89e9         mov r9, r13
0x00011b0d      4154           push r12
0x00011b0f      4157           push r15
0x00011b11      4156           push r14
0x00011b13      4c8b442420     mov r8, qword [rsp + 0x20]
0x00011b18      4889d9         mov rcx, rbx
0x00011b1b      4889c2         mov rdx, rax
0x00011b1e      4889ef         mov rdi, rbp
0x00011b21      be01000000     mov esi, 1
0x00011b26      31c0           xor eax, eax
0x00011b28      e8d315ffff     call sym.imp.__fprintf_chk
0x00011b2d      4883c420       add rsp, 0x20
0x00011b31      4883c428       add rsp, 0x28
0x00011b35      5b             pop rbx
0x00011b36      5d             pop rbp
0x00011b37      415c           pop r12
0x00011b39      415d           pop r13
0x00011b3b      415e           pop r14
0x00011b3d      415f           pop r15
0x00011b3f      c3             ret
0x00011b40      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00011b44      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00011b48      488d35814700.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x162d0 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x00011b4f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00011b53      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00011b57      ba05000000     mov edx, 5
0x00011b5c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00011b60      4c8b4308       mov r8, qword [rbx + 8]
0x00011b64      31ff           xor edi, edi
0x00011b66      4c894c2408     mov qword [rsp + 8], r9
0x00011b6b      488b1b         mov rbx, qword [rbx]
0x00011b6e      4c890424       mov qword [rsp], r8
0x00011b72      e8f910ffff     call sym.imp.dcgettext
0x00011b77      4155           push r13
0x00011b79      4154           push r12
0x00011b7b      4157           push r15
0x00011b7d      4156           push r14
0x00011b7f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00011b84      eb8d           jmp 0x11b13
0x00011b86      662e0f1f8400.  nop word cs:[rax + rax]
0x00011b90      4c8b5340       mov r10, qword [rbx + 0x40]
0x00011b94      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00011b98      ba05000000     mov edx, 5
0x00011b9d      488b4310       mov rax, qword [rbx + 0x10]
0x00011ba1      4c8b4308       mov r8, qword [rbx + 8]
0x00011ba5      488d35bc4700.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x16368 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x00011bac      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00011bb0      4c8b6328       mov r12, qword [rbx + 0x28]
0x00011bb4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00011bb8      4c8b7318       mov r14, qword [rbx + 0x18]
0x00011bbc      4c89542418     mov qword [rsp + 0x18], r10
0x00011bc1      4c894c2410     mov qword [rsp + 0x10], r9
0x00011bc6      48890424       mov qword [rsp], rax
0x00011bca      4c89442408     mov qword [rsp + 8], r8
0x00011bcf      488b1b         mov rbx, qword [rbx]
0x00011bd2      e98bfdffff     jmp 0x11962
0x00011bd7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00011be0      4531c9         xor r9d, r9d
0x00011be3      49833800       cmp qword [r8], 0
0x00011be7      7412           je 0x11bfb
0x00011be9      0f1f80000000.  nop dword [rax]
0x00011bf0      4983c101       add r9, 1
0x00011bf4      4b833cc800     cmp qword [r8 + r9*8], 0
0x00011bf9      75f5           jne 0x11bf0
0x00011bfb      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00011c00      4883ec68       sub rsp, 0x68
0x00011c04      4d89c2         mov r10, r8
0x00011c07      4531c9         xor r9d, r9d
0x00011c0a      64488b042528.  mov rax, qword fs:[0x28]
0x00011c13      4889442458     mov qword [rsp + 0x58], rax
0x00011c18      31c0           xor eax, eax
0x00011c1a      4989e0         mov r8, rsp
0x00011c1d      0f1f00         nop dword [rax]
0x00011c20      418b02         mov eax, dword [r10]
0x00011c23      83f82f         cmp eax, 0x2f
0x00011c26      7742           ja 0x11c6a
0x00011c28      4189c3         mov r11d, eax
0x00011c2b      4d035a10       add r11, qword [r10 + 0x10]
0x00011c2f      83c008         add eax, 8
0x00011c32      418902         mov dword [r10], eax
0x00011c35      498b03         mov rax, qword [r11]
0x00011c38      4885c0         test rax, rax
0x00011c3b      4b8904c8       mov qword [r8 + r9*8], rax
0x00011c3f      740a           je 0x11c4b
0x00011c41      4983c101       add r9, 1
0x00011c45      4983f90a       cmp r9, 0xa
0x00011c49      75d5           jne 0x11c20
0x00011c4b      e870fbffff     call sym.version_etc_arn
0x00011c50      488b442458     mov rax, qword [rsp + 0x58]
0x00011c55      644833042528.  xor rax, qword fs:[0x28]
0x00011c5e      7505           jne 0x11c65
0x00011c60      4883c468       add rsp, 0x68
0x00011c64      c3             ret
0x00011c65      e83610ffff     call sym.imp.__stack_chk_fail
0x00011c6a      4d8b5a08       mov r11, qword [r10 + 8]
0x00011c6e      498d4308       lea rax, [r11 + 8]
0x00011c72      49894208       mov qword [r10 + 8], rax
0x00011c76      ebbd           jmp 0x11c35
0x00011c78      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00011c80      55             push rbp
0x00011c81      53             push rbx
0x00011c82      41ba20000000   mov r10d, 0x20                          ; "@"
0x00011c88      4531db         xor r11d, r11d
0x00011c8b      4881ecb80000.  sub rsp, 0xb8
0x00011c92      64488b042528.  mov rax, qword fs:[0x28]
0x00011c9b      4889442478     mov qword [rsp + 0x78], rax
0x00011ca0      31c0           xor eax, eax
0x00011ca2      488d8424d000.  lea rax, [rsp + 0xd0]
0x00011caa      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00011cb2      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x00011cba      4c8d442420     lea r8, [rsp + 0x20]
0x00011cbf      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00011cc7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x00011ccf      4889442410     mov qword [rsp + 0x10], rax
0x00011cd4      488d84248000.  lea rax, [rsp + 0x80]
0x00011cdc      4531c9         xor r9d, r9d
0x00011cdf      4889442418     mov qword [rsp + 0x18], rax
0x00011ce4      4889c5         mov rbp, rax
0x00011ce7      660f1f840000.  nop word [rax + rax]
0x00011cf0      4183fa2f       cmp r10d, 0x2f
0x00011cf4      7756           ja 0x11d4c
0x00011cf6      4489d0         mov eax, r10d
0x00011cf9      41bb01000000   mov r11d, 1
0x00011cff      4183c208       add r10d, 8
0x00011d03      4801e8         add rax, rbp
0x00011d06      488b00         mov rax, qword [rax]
0x00011d09      4885c0         test rax, rax
0x00011d0c      4b8904c8       mov qword [r8 + r9*8], rax
0x00011d10      740a           je 0x11d1c
0x00011d12      4983c101       add r9, 1
0x00011d16      4983f90a       cmp r9, 0xa
0x00011d1a      75d4           jne 0x11cf0
0x00011d1c      4584db         test r11b, r11b
0x00011d1f      7524           jne 0x11d45
0x00011d21      e89afaffff     call sym.version_etc_arn
0x00011d26      488b442478     mov rax, qword [rsp + 0x78]
0x00011d2b      644833042528.  xor rax, qword fs:[0x28]
0x00011d34      750a           jne 0x11d40
0x00011d36      4881c4b80000.  add rsp, 0xb8
0x00011d3d      5b             pop rbx
0x00011d3e      5d             pop rbp
0x00011d3f      c3             ret
0x00011d40      e85b0fffff     call sym.imp.__stack_chk_fail
0x00011d45      4489542408     mov dword [rsp + 8], r10d
0x00011d4a      ebd5           jmp 0x11d21
0x00011d4c      4889d8         mov rax, rbx
0x00011d4f      4883c308       add rbx, 8
0x00011d53      ebb1           jmp 0x11d06
0x00011d55      90             nop
0x00011d56      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00011d60      53             push rbx
0x00011d61      488d35e94300.  lea rsi, str.Report_bugs_to:__s         ; 0x16151 ; "\nReport bugs to: %s\n"
0x00011d68      ba05000000     mov edx, 5
0x00011d6d      31ff           xor edi, edi
0x00011d6f      e8fc0effff     call sym.imp.dcgettext
0x00011d74      488d15eb4300.  lea rdx, str.bug_coreutils_gnu.org      ; 0x16166 ; "bug-coreutils@gnu.org"
0x00011d7b      4889c6         mov rsi, rax
0x00011d7e      bf01000000     mov edi, 1
0x00011d83      31c0           xor eax, eax
0x00011d85      e81612ffff     call sym.imp.__printf_chk
0x00011d8a      488d35eb4300.  lea rsi, str.s_home_page:___s           ; 0x1617c ; "%s home page: <%s>\n"
0x00011d91      ba05000000     mov edx, 5
0x00011d96      31ff           xor edi, edi
0x00011d98      e8d30effff     call sym.imp.dcgettext
0x00011d9d      488d0d743200.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x15018 ; "https://www.gnu.org/software/coreutils/"
0x00011da4      488d15ed3700.  lea rdx, str.GNU_coreutils              ; 0x15598 ; "GNU coreutils"
0x00011dab      4889c6         mov rsi, rax
0x00011dae      bf01000000     mov edi, 1
0x00011db3      31c0           xor eax, eax
0x00011db5      e8e611ffff     call sym.imp.__printf_chk
0x00011dba      488b1d078420.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x21a1c8:8]=0
0x00011dc1      488d35e04500.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x163a8 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00011dc8      31ff           xor edi, edi
0x00011dca      ba05000000     mov edx, 5
0x00011dcf      e89c0effff     call sym.imp.dcgettext
0x00011dd4      4889de         mov rsi, rbx
0x00011dd7      4889c7         mov rdi, rax
0x00011dda      5b             pop rbx
0x00011ddb      e93010ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00011de0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00011de1      4889fb         mov rbx, rdi
0x00011de4      e8df13ffff     call 0x31c8                             ; ../coreutils-8.31/lib/xmalloc.c:41
0x00011de9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x00011dec      7505           jne 0x11df3
0x00011dee      4885db         test rbx, rbx
0x00011df1      7502           jne 0x11df5
0x00011df3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00011df4      c3             ret
0x00011df5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x00011dfa      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00011e00      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00011e03      48f7e6         mul rsi
0x00011e06      4889c7         mov rdi, rax
0x00011e09      0f90c0         seto al
0x00011e0c      4885ff         test rdi, rdi
0x00011e0f      780a           js 0x11e1b
0x00011e11      0fb6c0         movzx eax, al
0x00011e14      4885c0         test rax, rax
0x00011e17      7502           jne 0x11e1b
0x00011e19      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x00011e1b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x00011e1f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00011e24      6690           nop
0x00011e26      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00011e30      ebae           jmp sym.xmalloc
0x00011e32      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00011e36      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00011e40      4885f6         test rsi, rsi
0x00011e43      53             push rbx
0x00011e44      4889f3         mov rbx, rsi
0x00011e47      7505           jne 0x11e4e
0x00011e49      4885ff         test rdi, rdi
0x00011e4c      751a           jne 0x11e68
0x00011e4e      4889de         mov rsi, rbx
0x00011e51      e81a11ffff     call sym.imp.realloc
0x00011e56      4885c0         test rax, rax
0x00011e59      7505           jne 0x11e60
0x00011e5b      4885db         test rbx, rbx
0x00011e5e      7511           jne 0x11e71                             ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00011e60      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00011e61      c3             ret
0x00011e62      660f1f440000   nop word [rax + rax]
0x00011e68      e85313ffff     call sym..plt.got
0x00011e6d      31c0           xor eax, eax
0x00011e6f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00011e70      c3             ret
0x00011e71      e8ba010000     call sym.xalloc_die
0x00011e76      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00011e80      4889f0         mov rax, rsi
0x00011e83      48f7e2         mul rdx
0x00011e86      4889c6         mov rsi, rax
0x00011e89      0f90c0         seto al
0x00011e8c      4885f6         test rsi, rsi
0x00011e8f      780a           js 0x11e9b
0x00011e91      0fb6c0         movzx eax, al
0x00011e94      4885c0         test rax, rax
0x00011e97      7502           jne 0x11e9b
0x00011e99      eba5           jmp sym.xrealloc
0x00011e9b      4883ec08       sub rsp, 8
0x00011e9f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00011ea4      6690           nop
0x00011ea6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00011eb0      4885ff         test rdi, rdi
0x00011eb3      4989d1         mov r9, rdx
0x00011eb6      488b0e         mov rcx, qword [rsi]
0x00011eb9      7435           je 0x11ef0
0x00011ebb      31d2           xor edx, edx
0x00011ebd      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00011ec7      49f7f1         div r9
0x00011eca      4839c8         cmp rax, rcx
0x00011ecd      763c           jbe 0x11f0b
0x00011ecf      4889c8         mov rax, rcx
0x00011ed2      48d1e8         shr rax, 1
0x00011ed5      488d4c0801     lea rcx, [rax + rcx + 1]
0x00011eda      48890e         mov qword [rsi], rcx
0x00011edd      490fafc9       imul rcx, r9
0x00011ee1      4889ce         mov rsi, rcx
0x00011ee4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00011ee9      0f1f80000000.  nop dword [rax]
0x00011ef0      4885c9         test rcx, rcx
0x00011ef3      7423           je 0x11f18
0x00011ef5      4889c8         mov rax, rcx
0x00011ef8      49f7e1         mul r9
0x00011efb      0f90c2         seto dl
0x00011efe      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00011f01      0fb6d2         movzx edx, dl
0x00011f04      7805           js 0x11f0b
0x00011f06      4885d2         test rdx, rdx
0x00011f09      74cf           je 0x11eda
0x00011f0b      4883ec08       sub rsp, 8
0x00011f0f      e81c010000     call sym.xalloc_die
0x00011f14      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00011f18      31d2           xor edx, edx
0x00011f1a      b880000000     mov eax, 0x80
0x00011f1f      4531c0         xor r8d, r8d
0x00011f22      49f7f1         div r9
0x00011f25      4885c0         test rax, rax
0x00011f28      410f94c0       sete r8b
0x00011f2c      498d0c00       lea rcx, [r8 + rax]
0x00011f30      ebc3           jmp 0x11ef5
0x00011f32      0f1f4000       nop dword [rax]
0x00011f36      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00011f40      4885ff         test rdi, rdi
0x00011f43      488b06         mov rax, qword [rsi]
0x00011f46      7428           je 0x11f70
0x00011f48      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00011f52      4839d0         cmp rax, rdx
0x00011f55      772a           ja 0x11f81
0x00011f57      4889c2         mov rdx, rax
0x00011f5a      48d1ea         shr rdx, 1
0x00011f5d      488d440201     lea rax, [rdx + rax + 1]
0x00011f62      488906         mov qword [rsi], rax
0x00011f65      4889c6         mov rsi, rax
0x00011f68      e9d3feffff     jmp sym.xrealloc
0x00011f6d      0f1f00         nop dword [rax]
0x00011f70      4885c0         test rax, rax
0x00011f73      ba80000000     mov edx, 0x80
0x00011f78      480f44c2       cmove rax, rdx
0x00011f7c      4885c0         test rax, rax
0x00011f7f      79e1           jns 0x11f62
0x00011f81      4883ec08       sub rsp, 8
0x00011f85      e8a6000000     call sym.xalloc_die
0x00011f8a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00011f90      53             push rbx
0x00011f91      4889fb         mov rbx, rdi
0x00011f94      e847feffff     call sym.xmalloc
0x00011f99      4889da         mov rdx, rbx
0x00011f9c      31f6           xor esi, esi
0x00011f9e      4889c7         mov rdi, rax
0x00011fa1      5b             pop rbx
0x00011fa2      e9e90dffff     jmp sym.imp.memset
0x00011fa7      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00011fb0      4889f8         mov rax, rdi
0x00011fb3      4883ec08       sub rsp, 8
0x00011fb7      48f7e6         mul rsi
0x00011fba      0f90c2         seto dl
0x00011fbd      4885c0         test rax, rax
0x00011fc0      7817           js 0x11fd9
0x00011fc2      0fb6d2         movzx edx, dl
0x00011fc5      4885d2         test rdx, rdx
0x00011fc8      750f           jne 0x11fd9
0x00011fca      e8510effff     call sym.imp.calloc
0x00011fcf      4885c0         test rax, rax
0x00011fd2      7405           je 0x11fd9
0x00011fd4      4883c408       add rsp, 8
0x00011fd8      c3             ret
0x00011fd9      e852000000     call sym.xalloc_die
0x00011fde      6690           nop
;-- xmemdup:
0x00011fe0      55             push rbp
0x00011fe1      53             push rbx
0x00011fe2      4889fd         mov rbp, rdi
0x00011fe5      4889f7         mov rdi, rsi
0x00011fe8      4889f3         mov rbx, rsi
0x00011feb      4883ec08       sub rsp, 8
0x00011fef      e8ecfdffff     call sym.xmalloc
0x00011ff4      4883c408       add rsp, 8
0x00011ff8      4889da         mov rdx, rbx
0x00011ffb      4889ee         mov rsi, rbp
0x00011ffe      5b             pop rbx
0x00011fff      5d             pop rbp
0x00012000      4889c7         mov rdi, rax
0x00012003      e9780effff     jmp sym.imp.memcpy
0x00012008      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00012010      53             push rbx
0x00012011      4889fb         mov rbx, rdi
0x00012014      e8770cffff     call sym.imp.strlen
0x00012019      4889df         mov rdi, rbx
0x0001201c      488d7001       lea rsi, [rax + 1]
0x00012020      5b             pop rbx
0x00012021      ebbd           jmp sym.xmemdup
0x00012023      662e0f1f8400.  nop word cs:[rax + rax]
0x0001202d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00012030      488d35184400.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x1644f ; "memory exhausted"
0x00012037      4883ec08       sub rsp, 8
0x0001203b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00012040      31ff           xor edi, edi
0x00012042      e8290cffff     call sym.imp.dcgettext
0x00012047      8b3de3802000   mov edi, dword [obj.exit_failure]       ; [0x21a130:4]=1
0x0001204d      488d15003a00.  lea rdx, [0x00015a54]                   ; "%s"
0x00012054      4889c1         mov rcx, rax
0x00012057      31f6           xor esi, esi
0x00012059      31c0           xor eax, eax
0x0001205b      e8800fffff     call sym.imp.error
0x00012060      e89b0affff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00012065      662e0f1f8400.  nop word cs:[rax + rax]
0x0001206f      90             nop
;-- collate_error:
0x00012070      4156           push r14                                ; ../coreutils-8.31/lib/xmemcoll.c:38
0x00012072      4155           push r13
0x00012074      4189fe         mov r14d, edi
0x00012077      4154           push r12
0x00012079      55             push rbp
0x0001207a      4989d4         mov r12, rdx
0x0001207d      53             push rbx
0x0001207e      4889f3         mov rbx, rsi
0x00012081      488d35d84300.  lea rsi, str.string_comparison_failed   ; ../coreutils-8.31/lib/xmemcoll.c:39 ; 0x16460 ; "string comparison failed"
0x00012088      ba05000000     mov edx, 5
0x0001208d      31ff           xor edi, edi
0x0001208f      4d89c5         mov r13, r8                             ; ../coreutils-8.31/lib/xmemcoll.c:38
0x00012092      4889cd         mov rbp, rcx
0x00012095      e8d60bffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/lib/xmemcoll.c:39
0x0001209a      4489f6         mov esi, r14d
0x0001209d      4889c2         mov rdx, rax
0x000120a0      31ff           xor edi, edi
0x000120a2      31c0           xor eax, eax
0x000120a4      e8370fffff     call sym.imp.error
0x000120a9      488d35d04300.  lea rsi, str.Set_LC_ALL__C__to_work_around_the_problem. ; ../coreutils-8.31/lib/xmemcoll.c:40 ; 0x16480 ; "Set LC_ALL='C' to work around the problem."
0x000120b0      ba05000000     mov edx, 5
0x000120b5      31ff           xor edi, edi
0x000120b7      e8b40bffff     call sym.imp.dcgettext
0x000120bc      31f6           xor esi, esi
0x000120be      4889c2         mov rdx, rax
0x000120c1      31ff           xor edi, edi
0x000120c3      31c0           xor eax, eax
0x000120c5      e8160fffff     call sym.imp.error
0x000120ca      4c89e9         mov rcx, r13                            ; ../coreutils-8.31/lib/xmemcoll.c:41
0x000120cd      4889ea         mov rdx, rbp
0x000120d0      be08000000     mov esi, 8
0x000120d5      bf01000000     mov edi, 1
0x000120da      e851dfffff     call sym.quotearg_n_style_mem
0x000120df      4c89e1         mov rcx, r12
0x000120e2      4889da         mov rdx, rbx
0x000120e5      be08000000     mov esi, 8
0x000120ea      31ff           xor edi, edi
0x000120ec      4889c5         mov rbp, rax
0x000120ef      e83cdfffff     call sym.quotearg_n_style_mem
0x000120f4      488d35b54300.  lea rsi, str.The_strings_compared_were__s_and__s. ; ../coreutils-8.31/lib/xmemcoll.c:42 ; 0x164b0 ; "The strings compared were %s and %s."
0x000120fb      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/xmemcoll.c:41
0x000120fe      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xmemcoll.c:42
0x00012103      31ff           xor edi, edi
0x00012105      e8660bffff     call sym.imp.dcgettext
0x0001210a      4989e8         mov r8, rbp                             ; ../coreutils-8.31/lib/xmemcoll.c:41
0x0001210d      4889d9         mov rcx, rbx
0x00012110      8b3d1a802000   mov edi, dword [obj.exit_failure]       ; [0x21a130:4]=1
0x00012116      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmemcoll.c:45
0x00012117      5d             pop rbp
0x00012118      415c           pop r12
0x0001211a      415d           pop r13
0x0001211c      415e           pop r14
0x0001211e      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/xmemcoll.c:41
0x00012121      31f6           xor esi, esi
0x00012123      31c0           xor eax, eax
0x00012125      e9b60effff     jmp sym.imp.error
0x0001212a      660f1f440000   nop word [rax + rax]
;-- xmemcoll:
0x00012130      4156           push r14                                ; ../coreutils-8.31/lib/xmemcoll.c:55
0x00012132      4155           push r13
0x00012134      4989cd         mov r13, rcx
0x00012137      4154           push r12
0x00012139      55             push rbp
0x0001213a      4989d4         mov r12, rdx
0x0001213d      53             push rbx
0x0001213e      4889f5         mov rbp, rsi
0x00012141      4889fb         mov rbx, rdi
0x00012144      e857150000     call sym.memcoll                        ; ../coreutils-8.31/lib/xmemcoll.c:56
0x00012149      4189c6         mov r14d, eax
0x0001214c      e8bf09ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xmemcoll.c:57
0x00012151      8b38           mov edi, dword [rax]
0x00012153      85ff           test edi, edi                           ; ../coreutils-8.31/lib/xmemcoll.c:58
0x00012155      7411           je 0x12168
0x00012157      4d89e8         mov r8, r13                             ; ../coreutils-8.31/lib/xmemcoll.c:59
0x0001215a      4c89e1         mov rcx, r12
0x0001215d      4889ea         mov rdx, rbp
0x00012160      4889de         mov rsi, rbx
0x00012163      e808ffffff     call sym.collate_error
0x00012168      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmemcoll.c:61
0x00012169      4489f0         mov eax, r14d
0x0001216c      5d             pop rbp
0x0001216d      415c           pop r12
0x0001216f      415d           pop r13
0x00012171      415e           pop r14
0x00012173      c3             ret
0x00012174      6690           nop
0x00012176      662e0f1f8400.  nop word cs:[rax + rax]
;-- xmemcoll0:
0x00012180      4156           push r14                                ; ../coreutils-8.31/lib/xmemcoll.c:70
0x00012182      4155           push r13
0x00012184      4989ce         mov r14, rcx
0x00012187      4154           push r12
0x00012189      55             push rbp
0x0001218a      4989d4         mov r12, rdx
0x0001218d      53             push rbx
0x0001218e      4889fd         mov rbp, rdi
0x00012191      4889f3         mov rbx, rsi
0x00012194      e8b7150000     call sym.memcoll0                       ; ../coreutils-8.31/lib/xmemcoll.c:71
0x00012199      4189c5         mov r13d, eax
0x0001219c      e86f09ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xmemcoll.c:72
0x000121a1      8b38           mov edi, dword [rax]
0x000121a3      85ff           test edi, edi                           ; ../coreutils-8.31/lib/xmemcoll.c:73
0x000121a5      7413           je 0x121ba
0x000121a7      488d53ff       lea rdx, [rbx - 1]                      ; ../coreutils-8.31/lib/xmemcoll.c:74
0x000121ab      4d8d46ff       lea r8, [r14 - 1]
0x000121af      4c89e1         mov rcx, r12
0x000121b2      4889ee         mov rsi, rbp
0x000121b5      e8b6feffff     call sym.collate_error
0x000121ba      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmemcoll.c:76
0x000121bb      4489e8         mov eax, r13d
0x000121be      5d             pop rbp
0x000121bf      415c           pop r12
0x000121c1      415d           pop r13
0x000121c3      415e           pop r14
0x000121c5      c3             ret
0x000121c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnanosleep:
0x000121d0      55             push rbp                                ; ../coreutils-8.31/lib/xnanosleep.c:39
0x000121d1      53             push rbx
0x000121d2      4883ec28       sub rsp, 0x28
0x000121d6      64488b042528.  mov rax, qword fs:[0x28]
0x000121df      4889442418     mov qword [rsp + 0x18], rax
0x000121e4      31c0           xor eax, eax
0x000121e6      4889e5         mov rbp, rsp
0x000121e9      e8f2110000     call sym.dtotimespec                    ; ../coreutils-8.31/lib/xnanosleep.c:40
0x000121ee      48890424       mov qword [rsp], rax
0x000121f2      4889542408     mov qword [rsp + 8], rdx
0x000121f7      e81409ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xnanosleep.c:50
0x000121fc      4889c3         mov rbx, rax
0x000121ff      eb0f           jmp 0x12210
0x00012201      0f1f80000000.  nop dword [rax]
0x00012208      f703fbffffff   test dword [rbx], 0xfffffffb            ; ../coreutils-8.31/lib/xnanosleep.c:53
0x0001220e      7530           jne 0x12240
0x00012210      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/xnanosleep.c:51
0x00012212      c70300000000   mov dword [rbx], 0                      ; ../coreutils-8.31/lib/xnanosleep.c:50
0x00012218      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/xnanosleep.c:51
0x0001221b      e8500d0000     call sym.rpl_nanosleep
0x00012220      85c0           test eax, eax
0x00012222      75e4           jne 0x12208
0x00012224      488b542418     mov rdx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/xnanosleep.c:58
0x00012229      644833142528.  xor rdx, qword fs:[0x28]
0x00012232      7513           jne 0x12247
0x00012234      4883c428       add rsp, 0x28
0x00012238      5b             pop rbx
0x00012239      5d             pop rbp
0x0001223a      c3             ret
0x0001223b      0f1f440000     nop dword [rax + rax]
0x00012240      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/xnanosleep.c:54 ; -1
0x00012245      ebdd           jmp 0x12224
0x00012247      e8540affff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/xnanosleep.c:58
0x0001224c      0f1f4000       nop dword [rax]
;-- xstrtoul:
0x00012250      4157           push r15
0x00012252      4156           push r14
0x00012254      4155           push r13
0x00012256      4154           push r12
0x00012258      55             push rbp
0x00012259      53             push rbx
0x0001225a      4883ec28       sub rsp, 0x28
0x0001225e      64488b042528.  mov rax, qword fs:[0x28]
0x00012267      4889442418     mov qword [rsp + 0x18], rax
0x0001226c      31c0           xor eax, eax
0x0001226e      83fa24         cmp edx, 0x24
0x00012271      0f875e030000   ja 0x125d5
0x00012277      488d442410     lea rax, [rsp + 0x10]
0x0001227c      4989f7         mov r15, rsi
0x0001227f      4885f6         test rsi, rsi
0x00012282      4889fd         mov rbp, rdi
0x00012285      89542408       mov dword [rsp + 8], edx
0x00012289      4989ce         mov r14, rcx
0x0001228c      4d89c5         mov r13, r8
0x0001228f      4c0f44f8       cmove r15, rax
0x00012293      e87808ffff     call sym.imp.__errno_location
0x00012298      c70000000000   mov dword [rax], 0
0x0001229e      4989c4         mov r12, rax
0x000122a1      0fb65d00       movzx ebx, byte [rbp]
0x000122a5      e8060fffff     call sym.imp.__ctype_b_loc
0x000122aa      8b542408       mov edx, dword [rsp + 8]
0x000122ae      488b30         mov rsi, qword [rax]
0x000122b1      4889e8         mov rax, rbp
0x000122b4      eb11           jmp 0x122c7
0x000122b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000122c0      4883c001       add rax, 1
0x000122c4      0fb618         movzx ebx, byte [rax]
0x000122c7      0fb6cb         movzx ecx, bl
0x000122ca      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x000122cf      75ef           jne 0x122c0
0x000122d1      80fb2d         cmp bl, 0x2d
0x000122d4      7452           je 0x12328
0x000122d6      4c89fe         mov rsi, r15
0x000122d9      4889ef         mov rdi, rbp
0x000122dc      e89f0dffff     call sym.imp.strtoul
0x000122e1      498b0f         mov rcx, qword [r15]
0x000122e4      4889c3         mov rbx, rax
0x000122e7      4839e9         cmp rcx, rbp
0x000122ea      742c           je 0x12318
0x000122ec      418b0424       mov eax, dword [r12]
0x000122f0      85c0           test eax, eax
0x000122f2      7464           je 0x12358
0x000122f4      83f822         cmp eax, 0x22
0x000122f7      bd01000000     mov ebp, 1
0x000122fc      752a           jne 0x12328
0x000122fe      4d85ed         test r13, r13
0x00012301      7409           je 0x1230c
0x00012303      440fb621       movzx r12d, byte [rcx]
0x00012307      4584e4         test r12b, r12b
0x0001230a      757b           jne 0x12387
0x0001230c      49891e         mov qword [r14], rbx
0x0001230f      eb1c           jmp 0x1232d
0x00012311      0f1f80000000.  nop dword [rax]
0x00012318      4d85ed         test r13, r13
0x0001231b      48894c2408     mov qword [rsp + 8], rcx
0x00012320      753e           jne 0x12360
0x00012322      660f1f440000   nop word [rax + rax]
0x00012328      bd04000000     mov ebp, 4
0x0001232d      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00012332      6448333c2528.  xor rdi, qword fs:[0x28]
0x0001233b      89e8           mov eax, ebp
0x0001233d      0f858d020000   jne 0x125d0
0x00012343      4883c428       add rsp, 0x28
0x00012347      5b             pop rbx
0x00012348      5d             pop rbp
0x00012349      415c           pop r12
0x0001234b      415d           pop r13
0x0001234d      415e           pop r14
0x0001234f      415f           pop r15
0x00012351      c3             ret
0x00012352      660f1f440000   nop word [rax + rax]
0x00012358      31ed           xor ebp, ebp
0x0001235a      eba2           jmp 0x122fe
0x0001235c      0f1f4000       nop dword [rax]
0x00012360      440fb66500     movzx r12d, byte [rbp]
0x00012365      4584e4         test r12b, r12b
0x00012368      74be           je 0x12328
0x0001236a      410fbef4       movsx esi, r12b
0x0001236e      4c89ef         mov rdi, r13
0x00012371      31ed           xor ebp, ebp
0x00012373      e87809ffff     call sym.imp.strchr
0x00012378      4885c0         test rax, rax
0x0001237b      bb01000000     mov ebx, 1
0x00012380      488b4c2408     mov rcx, qword [rsp + 8]
0x00012385      74a1           je 0x12328
0x00012387      410fbef4       movsx esi, r12b
0x0001238b      4c89ef         mov rdi, r13
0x0001238e      48894c2408     mov qword [rsp + 8], rcx
0x00012393      e85809ffff     call sym.imp.strchr
0x00012398      4885c0         test rax, rax
0x0001239b      488b4c2408     mov rcx, qword [rsp + 8]
0x000123a0      0f84c6000000   je 0x1246c
0x000123a6      418d4424bb     lea eax, [r12 - 0x45]
0x000123ab      3c2f           cmp al, 0x2f
0x000123ad      7751           ja 0x12400
0x000123af      48ba45893000.  movabs rdx, 0x814400308945
0x000123b9      480fa3c2       bt rdx, rax
0x000123bd      7341           jae 0x12400
0x000123bf      be30000000     mov esi, 0x30                           ; '0'
0x000123c4      4c89ef         mov rdi, r13
0x000123c7      48894c2408     mov qword [rsp + 8], rcx
0x000123cc      e81f09ffff     call sym.imp.strchr
0x000123d1      4885c0         test rax, rax
0x000123d4      488b4c2408     mov rcx, qword [rsp + 8]
0x000123d9      7425           je 0x12400
0x000123db      0fb64101       movzx eax, byte [rcx + 1]
0x000123df      3c44           cmp al, 0x44
0x000123e1      740c           je 0x123ef
0x000123e3      3c69           cmp al, 0x69
0x000123e5      0f84cd010000   je 0x125b8
0x000123eb      3c42           cmp al, 0x42
0x000123ed      7511           jne 0x12400
0x000123ef      bf02000000     mov edi, 2
0x000123f4      bee8030000     mov esi, 0x3e8
0x000123f9      eb0f           jmp 0x1240a
0x000123fb      0f1f440000     nop dword [rax + rax]
0x00012400      bf01000000     mov edi, 1
0x00012405      be00040000     mov esi, 0x400
0x0001240a      4183ec42       sub r12d, 0x42
0x0001240e      4180fc35       cmp r12b, 0x35
0x00012412      7758           ja 0x1246c
0x00012414      488d15054100.  lea rdx, [0x00016520]
0x0001241b      450fb6e4       movzx r12d, r12b
0x0001241f      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00012423      4801d0         add rax, rdx
0x00012426      ffe0           jmp rax
0x00012428      4889d8         mov rax, rbx
0x0001242b      48f7e6         mul rsi
0x0001242e      0f80ed010000   jo 0x12621
0x00012434      4531c0         xor r8d, r8d
0x00012437      48f7e6         mul rsi
0x0001243a      0f80d2010000   jo 0x12612
0x00012440      4889c3         mov rbx, rax
0x00012443      4409c5         or ebp, r8d
0x00012446      662e0f1f8400.  nop word cs:[rax + rax]
0x00012450      4863ff         movsxd rdi, edi
0x00012453      89e8           mov eax, ebp
0x00012455      4801f9         add rcx, rdi
0x00012458      83c802         or eax, 2
0x0001245b      49890f         mov qword [r15], rcx
0x0001245e      803900         cmp byte [rcx], 0
0x00012461      49891e         mov qword [r14], rbx
0x00012464      0f45e8         cmovne ebp, eax
0x00012467      e9c1feffff     jmp 0x1232d
0x0001246c      49891e         mov qword [r14], rbx
0x0001246f      83cd02         or ebp, 2
0x00012472      e9b6feffff     jmp 0x1232d
0x00012477      ba02000000     mov edx, 2
0x0001247c      4889d0         mov rax, rdx
0x0001247f      48f7e3         mul rbx
0x00012482      0f8096000000   jo 0x1251e
0x00012488      4801db         add rbx, rbx
0x0001248b      ebc3           jmp 0x12450
0x0001248d      ba00020000     mov edx, 0x200
0x00012492      4889d0         mov rax, rdx
0x00012495      48f7e3         mul rbx
0x00012498      0f8080000000   jo 0x1251e
0x0001249e      48c1e309       shl rbx, 9
0x000124a2      ebac           jmp 0x12450
0x000124a4      41b807000000   mov r8d, 7
0x000124aa      4531c9         xor r9d, r9d
0x000124ad      0f1f00         nop dword [rax]
0x000124b0      4889d8         mov rax, rbx
0x000124b3      48f7e6         mul rsi
0x000124b6      4889c3         mov rbx, rax
0x000124b9      0f808f010000   jo 0x1264e
0x000124bf      4183e801       sub r8d, 1
0x000124c3      75eb           jne 0x124b0
0x000124c5      4409cd         or ebp, r9d
0x000124c8      eb86           jmp 0x12450
0x000124ca      41b808000000   mov r8d, 8
0x000124d0      4531c9         xor r9d, r9d
0x000124d3      0f1f440000     nop dword [rax + rax]
0x000124d8      4889d8         mov rax, rbx
0x000124db      48f7e6         mul rsi
0x000124de      4889c3         mov rbx, rax
0x000124e1      0f8049010000   jo 0x12630
0x000124e7      4183e801       sub r8d, 1
0x000124eb      75eb           jne 0x124d8
0x000124ed      ebd6           jmp 0x124c5
0x000124ef      41b804000000   mov r8d, 4
0x000124f5      4531c9         xor r9d, r9d
0x000124f8      4889d8         mov rax, rbx
0x000124fb      48f7e6         mul rsi
0x000124fe      4889c3         mov rbx, rax
0x00012501      0f80fc000000   jo 0x12603
0x00012507      4183e801       sub r8d, 1
0x0001250b      75eb           jne 0x124f8
0x0001250d      ebb6           jmp 0x124c5
0x0001250f      4889d8         mov rax, rbx
0x00012512      48f7e6         mul rsi
0x00012515      4889c3         mov rbx, rax
0x00012518      0f8132ffffff   jno 0x12450
0x0001251e      bd01000000     mov ebp, 1
0x00012523      4883cbff       or rbx, 0xffffffffffffffff
0x00012527      e924ffffff     jmp 0x12450
0x0001252c      0f1f4000       nop dword [rax]
0x00012530      41b805000000   mov r8d, 5
0x00012536      4531c9         xor r9d, r9d
0x00012539      4889d8         mov rax, rbx
0x0001253c      48f7e6         mul rsi
0x0001253f      4889c3         mov rbx, rax
0x00012542      0f80f7000000   jo 0x1263f
0x00012548      4183e801       sub r8d, 1
0x0001254c      75eb           jne 0x12539
0x0001254e      e972ffffff     jmp 0x124c5
0x00012553      41b806000000   mov r8d, 6
0x00012559      4531c9         xor r9d, r9d
0x0001255c      4889d8         mov rax, rbx
0x0001255f      48f7e6         mul rsi
0x00012562      4889c3         mov rbx, rax
0x00012565      0f8089000000   jo 0x125f4
0x0001256b      4183e801       sub r8d, 1
0x0001256f      75eb           jne 0x1255c
0x00012571      e94fffffff     jmp 0x124c5
0x00012576      ba00040000     mov edx, 0x400
0x0001257b      4889d0         mov rax, rdx
0x0001257e      48f7e3         mul rbx
0x00012581      709b           jo 0x1251e
0x00012583      48c1e30a       shl rbx, 0xa
0x00012587      e9c4feffff     jmp 0x12450
0x0001258c      4889d8         mov rax, rbx
0x0001258f      48f7e6         mul rsi
0x00012592      0f80c5000000   jo 0x1265d
0x00012598      4531c0         xor r8d, r8d
0x0001259b      48f7e6         mul rsi
0x0001259e      0f8193feffff   jno 0x12437
0x000125a4      41b801000000   mov r8d, 1
0x000125aa      4883c8ff       or rax, 0xffffffffffffffff
0x000125ae      e984feffff     jmp 0x12437
0x000125b3      0f1f440000     nop dword [rax + rax]
0x000125b8      31ff           xor edi, edi
0x000125ba      80790242       cmp byte [rcx + 2], 0x42
0x000125be      be00040000     mov esi, 0x400
0x000125c3      400f94c7       sete dil
0x000125c7      8d7c3f01       lea edi, [rdi + rdi + 1]
0x000125cb      e93afeffff     jmp 0x1240a
0x000125d0      e8cb06ffff     call sym.imp.__stack_chk_fail
0x000125d5      488d0d1c4000.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0x165f8 ; "xstrtoul"
0x000125dc      488d35f53e00.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0x164d8 ; "../coreutils-8.31/lib/xstrtol.c"
0x000125e3      488d3d0e3f00.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0x164f8 ; "0 <= strtol_base && strtol_base <= 36"
0x000125ea      ba54000000     mov edx, 0x54                           ; 'T'
0x000125ef      e87c07ffff     call sym.imp.__assert_fail
0x000125f4      41b901000000   mov r9d, 1
0x000125fa      4883cbff       or rbx, 0xffffffffffffffff
0x000125fe      e968ffffff     jmp 0x1256b
0x00012603      41b901000000   mov r9d, 1
0x00012609      4883cbff       or rbx, 0xffffffffffffffff
0x0001260d      e9f5feffff     jmp 0x12507
0x00012612      41b801000000   mov r8d, 1
0x00012618      4883cbff       or rbx, 0xffffffffffffffff
0x0001261c      e922feffff     jmp 0x12443
0x00012621      4883c8ff       or rax, 0xffffffffffffffff
0x00012625      41b801000000   mov r8d, 1
0x0001262b      e907feffff     jmp 0x12437
0x00012630      41b901000000   mov r9d, 1
0x00012636      4883cbff       or rbx, 0xffffffffffffffff
0x0001263a      e9a8feffff     jmp 0x124e7
0x0001263f      41b901000000   mov r9d, 1
0x00012645      4883cbff       or rbx, 0xffffffffffffffff
0x00012649      e9fafeffff     jmp 0x12548
0x0001264e      41b901000000   mov r9d, 1
0x00012654      4883cbff       or rbx, 0xffffffffffffffff
0x00012658      e962feffff     jmp 0x124bf
0x0001265d      41b801000000   mov r8d, 1
0x00012663      4883c8ff       or rax, 0xffffffffffffffff
0x00012667      e92fffffff     jmp 0x1259b
0x0001266c      0f1f4000       nop dword [rax]
;-- xstrtol_fatal:
0x00012670      4155           push r13
0x00012672      4154           push r12
0x00012674      4189f2         mov r10d, esi
0x00012677      55             push rbp
0x00012678      53             push rbx
0x00012679      4d89c4         mov r12, r8
0x0001267c      4883ec18       sub rsp, 0x18
0x00012680      64488b042528.  mov rax, qword fs:[0x28]
0x00012689      4889442408     mov qword [rsp + 8], rax
0x0001268e      31c0           xor eax, eax
0x00012690      83ff03         cmp edi, 3
0x00012693      8b2d977a2000   mov ebp, dword [obj.exit_failure]       ; [0x21a130:4]=1
0x00012699      7759           ja 0x126f4
0x0001269b      83ff02         cmp edi, 2
0x0001269e      734b           jae 0x126eb
0x000126a0      83ef01         sub edi, 1
0x000126a3      488d35723f00.  lea rsi, str.s_s_argument___s__too_large ; 0x1661c ; "%s%s argument '%s' too large"
0x000126aa      753a           jne 0x126e6
0x000126ac      4585d2         test r10d, r10d
0x000126af      4963c2         movsxd rax, r10d
0x000126b2      784e           js 0x12702
0x000126b4      48c1e005       shl rax, 5
0x000126b8      488d1d7a3f00.  lea rbx, [0x00016639]                   ; "--"
0x000126bf      4c8b2c01       mov r13, qword [rcx + rax]
0x000126c3      ba05000000     mov edx, 5
0x000126c8      31ff           xor edi, edi
0x000126ca      e8a105ffff     call sym.imp.dcgettext
0x000126cf      4d89e1         mov r9, r12
0x000126d2      4889c2         mov rdx, rax
0x000126d5      4d89e8         mov r8, r13
0x000126d8      4889d9         mov rcx, rbx
0x000126db      31f6           xor esi, esi
0x000126dd      89ef           mov edi, ebp
0x000126df      31c0           xor eax, eax
0x000126e1      e8fa08ffff     call sym.imp.error
0x000126e6      e81504ffff     call sym.imp.abort
0x000126eb      488d354e3f00.  lea rsi, str.invalid_suffix_in__s_s_argument___s ; 0x16640 ; "invalid suffix in %s%s argument '%s'"
0x000126f2      ebb8           jmp 0x126ac
0x000126f4      83ff04         cmp edi, 4
0x000126f7      488d35033f00.  lea rsi, str.invalid__s_s_argument___s  ; 0x16601 ; "invalid %s%s argument '%s'"
0x000126fe      74ac           je 0x126ac
0x00012700      ebe4           jmp 0x126e6
0x00012702      488d1d303f00.  lea rbx, [0x00016639]                   ; "--"
0x00012709      88542406       mov byte [rsp + 6], dl
0x0001270d      c644240700     mov byte [rsp + 7], 0
0x00012712      4c8d6c2406     lea r13, [rsp + 6]
0x00012717      4829c3         sub rbx, rax
0x0001271a      eba7           jmp 0x126c3
0x0001271c      0f1f4000       nop dword [rax]
;-- xstrtoumax:
0x00012720      4157           push r15
0x00012722      4156           push r14
0x00012724      4155           push r13
0x00012726      4154           push r12
0x00012728      55             push rbp
0x00012729      53             push rbx
0x0001272a      4883ec28       sub rsp, 0x28
0x0001272e      64488b042528.  mov rax, qword fs:[0x28]
0x00012737      4889442418     mov qword [rsp + 0x18], rax
0x0001273c      31c0           xor eax, eax
0x0001273e      83fa24         cmp edx, 0x24
0x00012741      0f875e030000   ja 0x12aa5
0x00012747      488d442410     lea rax, [rsp + 0x10]
0x0001274c      4989f7         mov r15, rsi
0x0001274f      4885f6         test rsi, rsi
0x00012752      4889fd         mov rbp, rdi
0x00012755      89542408       mov dword [rsp + 8], edx
0x00012759      4989ce         mov r14, rcx
0x0001275c      4d89c5         mov r13, r8
0x0001275f      4c0f44f8       cmove r15, rax
0x00012763      e8a803ffff     call sym.imp.__errno_location
0x00012768      c70000000000   mov dword [rax], 0
0x0001276e      4989c4         mov r12, rax
0x00012771      0fb65d00       movzx ebx, byte [rbp]
0x00012775      e8360affff     call sym.imp.__ctype_b_loc
0x0001277a      8b542408       mov edx, dword [rsp + 8]
0x0001277e      488b30         mov rsi, qword [rax]
0x00012781      4889e8         mov rax, rbp
0x00012784      eb11           jmp 0x12797
0x00012786      662e0f1f8400.  nop word cs:[rax + rax]
0x00012790      4883c001       add rax, 1
0x00012794      0fb618         movzx ebx, byte [rax]
0x00012797      0fb6cb         movzx ecx, bl
0x0001279a      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x0001279f      75ef           jne 0x12790
0x000127a1      80fb2d         cmp bl, 0x2d
0x000127a4      7452           je 0x127f8
0x000127a6      31c9           xor ecx, ecx
0x000127a8      4c89fe         mov rsi, r15
0x000127ab      4889ef         mov rdi, rbp
0x000127ae      e8cd05ffff     call sym.imp.__strtoul_internal
0x000127b3      498b0f         mov rcx, qword [r15]
0x000127b6      4889c3         mov rbx, rax
0x000127b9      4839e9         cmp rcx, rbp
0x000127bc      742a           je 0x127e8
0x000127be      418b0424       mov eax, dword [r12]
0x000127c2      85c0           test eax, eax
0x000127c4      7462           je 0x12828
0x000127c6      83f822         cmp eax, 0x22
0x000127c9      bd01000000     mov ebp, 1
0x000127ce      7528           jne 0x127f8
0x000127d0      4d85ed         test r13, r13
0x000127d3      7409           je 0x127de
0x000127d5      440fb621       movzx r12d, byte [rcx]
0x000127d9      4584e4         test r12b, r12b
0x000127dc      7579           jne 0x12857
0x000127de      49891e         mov qword [r14], rbx
0x000127e1      eb1a           jmp 0x127fd
0x000127e3      0f1f440000     nop dword [rax + rax]
0x000127e8      4d85ed         test r13, r13
0x000127eb      48894c2408     mov qword [rsp + 8], rcx
0x000127f0      753e           jne 0x12830
0x000127f2      660f1f440000   nop word [rax + rax]
0x000127f8      bd04000000     mov ebp, 4
0x000127fd      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00012802      6448333c2528.  xor rdi, qword fs:[0x28]
0x0001280b      89e8           mov eax, ebp
0x0001280d      0f858d020000   jne 0x12aa0
0x00012813      4883c428       add rsp, 0x28
0x00012817      5b             pop rbx
0x00012818      5d             pop rbp
0x00012819      415c           pop r12
0x0001281b      415d           pop r13
0x0001281d      415e           pop r14
0x0001281f      415f           pop r15
0x00012821      c3             ret
0x00012822      660f1f440000   nop word [rax + rax]
0x00012828      31ed           xor ebp, ebp
0x0001282a      eba4           jmp 0x127d0
0x0001282c      0f1f4000       nop dword [rax]
0x00012830      440fb66500     movzx r12d, byte [rbp]
0x00012835      4584e4         test r12b, r12b
0x00012838      74be           je 0x127f8
0x0001283a      410fbef4       movsx esi, r12b
0x0001283e      4c89ef         mov rdi, r13
0x00012841      31ed           xor ebp, ebp
0x00012843      e8a804ffff     call sym.imp.strchr
0x00012848      4885c0         test rax, rax
0x0001284b      bb01000000     mov ebx, 1
0x00012850      488b4c2408     mov rcx, qword [rsp + 8]
0x00012855      74a1           je 0x127f8
0x00012857      410fbef4       movsx esi, r12b
0x0001285b      4c89ef         mov rdi, r13
0x0001285e      48894c2408     mov qword [rsp + 8], rcx
0x00012863      e88804ffff     call sym.imp.strchr
0x00012868      4885c0         test rax, rax
0x0001286b      488b4c2408     mov rcx, qword [rsp + 8]
0x00012870      0f84c6000000   je 0x1293c
0x00012876      418d4424bb     lea eax, [r12 - 0x45]
0x0001287b      3c2f           cmp al, 0x2f
0x0001287d      7751           ja 0x128d0
0x0001287f      48ba45893000.  movabs rdx, 0x814400308945
0x00012889      480fa3c2       bt rdx, rax
0x0001288d      7341           jae 0x128d0
0x0001288f      be30000000     mov esi, 0x30                           ; '0'
0x00012894      4c89ef         mov rdi, r13
0x00012897      48894c2408     mov qword [rsp + 8], rcx
0x0001289c      e84f04ffff     call sym.imp.strchr
0x000128a1      4885c0         test rax, rax
0x000128a4      488b4c2408     mov rcx, qword [rsp + 8]
0x000128a9      7425           je 0x128d0
0x000128ab      0fb64101       movzx eax, byte [rcx + 1]
0x000128af      3c44           cmp al, 0x44
0x000128b1      740c           je 0x128bf
0x000128b3      3c69           cmp al, 0x69
0x000128b5      0f84cd010000   je 0x12a88
0x000128bb      3c42           cmp al, 0x42
0x000128bd      7511           jne 0x128d0
0x000128bf      bf02000000     mov edi, 2
0x000128c4      bee8030000     mov esi, 0x3e8
0x000128c9      eb0f           jmp 0x128da
0x000128cb      0f1f440000     nop dword [rax + rax]
0x000128d0      bf01000000     mov edi, 1
0x000128d5      be00040000     mov esi, 0x400
0x000128da      4183ec42       sub r12d, 0x42
0x000128de      4180fc35       cmp r12b, 0x35
0x000128e2      7758           ja 0x1293c
0x000128e4      488d157d3d00.  lea rdx, [0x00016668]
0x000128eb      450fb6e4       movzx r12d, r12b
0x000128ef      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x000128f3      4801d0         add rax, rdx
0x000128f6      ffe0           jmp rax
0x000128f8      4889d8         mov rax, rbx
0x000128fb      48f7e6         mul rsi
0x000128fe      0f80ed010000   jo 0x12af1
0x00012904      4531c0         xor r8d, r8d
0x00012907      48f7e6         mul rsi
0x0001290a      0f80d2010000   jo 0x12ae2
0x00012910      4889c3         mov rbx, rax
0x00012913      4409c5         or ebp, r8d
0x00012916      662e0f1f8400.  nop word cs:[rax + rax]
0x00012920      4863ff         movsxd rdi, edi
0x00012923      89e8           mov eax, ebp
0x00012925      4801f9         add rcx, rdi
0x00012928      83c802         or eax, 2
0x0001292b      49890f         mov qword [r15], rcx
0x0001292e      803900         cmp byte [rcx], 0
0x00012931      49891e         mov qword [r14], rbx
0x00012934      0f45e8         cmovne ebp, eax
0x00012937      e9c1feffff     jmp 0x127fd
0x0001293c      49891e         mov qword [r14], rbx
0x0001293f      83cd02         or ebp, 2
0x00012942      e9b6feffff     jmp 0x127fd
0x00012947      ba02000000     mov edx, 2
0x0001294c      4889d0         mov rax, rdx
0x0001294f      48f7e3         mul rbx
0x00012952      0f8096000000   jo 0x129ee
0x00012958      4801db         add rbx, rbx
0x0001295b      ebc3           jmp 0x12920
0x0001295d      ba00020000     mov edx, 0x200
0x00012962      4889d0         mov rax, rdx
0x00012965      48f7e3         mul rbx
0x00012968      0f8080000000   jo 0x129ee
0x0001296e      48c1e309       shl rbx, 9
0x00012972      ebac           jmp 0x12920
0x00012974      41b807000000   mov r8d, 7
0x0001297a      4531c9         xor r9d, r9d
0x0001297d      0f1f00         nop dword [rax]
0x00012980      4889d8         mov rax, rbx
0x00012983      48f7e6         mul rsi
0x00012986      4889c3         mov rbx, rax
0x00012989      0f808f010000   jo 0x12b1e
0x0001298f      4183e801       sub r8d, 1
0x00012993      75eb           jne 0x12980
0x00012995      4409cd         or ebp, r9d
0x00012998      eb86           jmp 0x12920
0x0001299a      41b808000000   mov r8d, 8
0x000129a0      4531c9         xor r9d, r9d
0x000129a3      0f1f440000     nop dword [rax + rax]
0x000129a8      4889d8         mov rax, rbx
0x000129ab      48f7e6         mul rsi
0x000129ae      4889c3         mov rbx, rax
0x000129b1      0f8049010000   jo 0x12b00
0x000129b7      4183e801       sub r8d, 1
0x000129bb      75eb           jne 0x129a8
0x000129bd      ebd6           jmp 0x12995
0x000129bf      41b804000000   mov r8d, 4
0x000129c5      4531c9         xor r9d, r9d
0x000129c8      4889d8         mov rax, rbx
0x000129cb      48f7e6         mul rsi
0x000129ce      4889c3         mov rbx, rax
0x000129d1      0f80fc000000   jo 0x12ad3
0x000129d7      4183e801       sub r8d, 1
0x000129db      75eb           jne 0x129c8
0x000129dd      ebb6           jmp 0x12995
0x000129df      4889d8         mov rax, rbx
0x000129e2      48f7e6         mul rsi
0x000129e5      4889c3         mov rbx, rax
0x000129e8      0f8132ffffff   jno 0x12920
0x000129ee      bd01000000     mov ebp, 1
0x000129f3      4883cbff       or rbx, 0xffffffffffffffff
0x000129f7      e924ffffff     jmp 0x12920
0x000129fc      0f1f4000       nop dword [rax]
0x00012a00      41b805000000   mov r8d, 5
0x00012a06      4531c9         xor r9d, r9d
0x00012a09      4889d8         mov rax, rbx
0x00012a0c      48f7e6         mul rsi
0x00012a0f      4889c3         mov rbx, rax
0x00012a12      0f80f7000000   jo 0x12b0f
0x00012a18      4183e801       sub r8d, 1
0x00012a1c      75eb           jne 0x12a09
0x00012a1e      e972ffffff     jmp 0x12995
0x00012a23      41b806000000   mov r8d, 6
0x00012a29      4531c9         xor r9d, r9d
0x00012a2c      4889d8         mov rax, rbx
0x00012a2f      48f7e6         mul rsi
0x00012a32      4889c3         mov rbx, rax
0x00012a35      0f8089000000   jo 0x12ac4
0x00012a3b      4183e801       sub r8d, 1
0x00012a3f      75eb           jne 0x12a2c
0x00012a41      e94fffffff     jmp 0x12995
0x00012a46      ba00040000     mov edx, 0x400
0x00012a4b      4889d0         mov rax, rdx
0x00012a4e      48f7e3         mul rbx
0x00012a51      709b           jo 0x129ee
0x00012a53      48c1e30a       shl rbx, 0xa
0x00012a57      e9c4feffff     jmp 0x12920
0x00012a5c      4889d8         mov rax, rbx
0x00012a5f      48f7e6         mul rsi
0x00012a62      0f80c5000000   jo 0x12b2d
0x00012a68      4531c0         xor r8d, r8d
0x00012a6b      48f7e6         mul rsi
0x00012a6e      0f8193feffff   jno 0x12907
0x00012a74      41b801000000   mov r8d, 1
0x00012a7a      4883c8ff       or rax, 0xffffffffffffffff
0x00012a7e      e984feffff     jmp 0x12907
0x00012a83      0f1f440000     nop dword [rax + rax]
0x00012a88      31ff           xor edi, edi
0x00012a8a      80790242       cmp byte [rcx + 2], 0x42
0x00012a8e      be00040000     mov esi, 0x400
0x00012a93      400f94c7       sete dil
0x00012a97      8d7c3f01       lea edi, [rdi + rdi + 1]
0x00012a9b      e93afeffff     jmp 0x128da
0x00012aa0      e8fb01ffff     call sym.imp.__stack_chk_fail
0x00012aa5      488d0d943c00.  lea rcx, obj.__PRETTY_FUNCTION__.4162_1 ; 0x16740 ; "xstrtoumax"
0x00012aac      488d35253a00.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0x164d8 ; "../coreutils-8.31/lib/xstrtol.c"
0x00012ab3      488d3d3e3a00.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0x164f8 ; "0 <= strtol_base && strtol_base <= 36"
0x00012aba      ba54000000     mov edx, 0x54                           ; 'T'
0x00012abf      e8ac02ffff     call sym.imp.__assert_fail
0x00012ac4      41b901000000   mov r9d, 1
0x00012aca      4883cbff       or rbx, 0xffffffffffffffff
0x00012ace      e968ffffff     jmp 0x12a3b
0x00012ad3      41b901000000   mov r9d, 1
0x00012ad9      4883cbff       or rbx, 0xffffffffffffffff
0x00012add      e9f5feffff     jmp 0x129d7
0x00012ae2      41b801000000   mov r8d, 1
0x00012ae8      4883cbff       or rbx, 0xffffffffffffffff
0x00012aec      e922feffff     jmp 0x12913
0x00012af1      4883c8ff       or rax, 0xffffffffffffffff
0x00012af5      41b801000000   mov r8d, 1
0x00012afb      e907feffff     jmp 0x12907
0x00012b00      41b901000000   mov r9d, 1
0x00012b06      4883cbff       or rbx, 0xffffffffffffffff
0x00012b0a      e9a8feffff     jmp 0x129b7
0x00012b0f      41b901000000   mov r9d, 1
0x00012b15      4883cbff       or rbx, 0xffffffffffffffff
0x00012b19      e9fafeffff     jmp 0x12a18
0x00012b1e      41b901000000   mov r9d, 1
0x00012b24      4883cbff       or rbx, 0xffffffffffffffff
0x00012b28      e962feffff     jmp 0x1298f
0x00012b2d      41b801000000   mov r8d, 1
0x00012b33      4883c8ff       or rax, 0xffffffffffffffff
0x00012b37      e92fffffff     jmp 0x12a6b
0x00012b3c      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00012b40      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00012b42      55             push rbp
0x00012b43      53             push rbx
0x00012b44      4889fb         mov rbx, rdi
0x00012b47      e84403ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x00012b4c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x00012b4e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00012b51      7854           js 0x12ba7                              ; ../coreutils-8.31/lib/fclose.c:66
0x00012b53      e8f803ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00012b58      85c0           test eax, eax
0x00012b5a      752c           jne 0x12b88
0x00012b5c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x00012b5f      e8dc020000     call sym.rpl_fflush
0x00012b64      85c0           test eax, eax
0x00012b66      743c           je 0x12ba4
0x00012b68      e8a3fffeff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x00012b6d      448b20         mov r12d, dword [rax]
0x00012b70      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00012b73      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00012b76      e8c500ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x00012b7b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x00012b7e      7530           jne 0x12bb0
0x00012b80      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00012b81      5d             pop rbp
0x00012b82      415c           pop r12
0x00012b84      c3             ret
0x00012b85      0f1f00         nop dword [rax]
0x00012b88      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x00012b8b      e80003ffff     call sym.imp.fileno
0x00012b90      31f6           xor esi, esi
0x00012b92      ba01000000     mov edx, 1
0x00012b97      89c7           mov edi, eax
0x00012b99      e8b201ffff     call sym.imp.lseek
0x00012b9e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00012ba2      75b8           jne 0x12b5c
0x00012ba4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00012ba7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00012ba8      5d             pop rbp
0x00012ba9      415c           pop r12
0x00012bab      e99000ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00012bb0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00012bb4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00012bb9      ebc5           jmp 0x12b80
0x00012bbb      0f1f440000     nop dword [rax + rax]
;-- rpl_fcntl:
0x00012bc0      4154           push r12                                ; ../coreutils-8.31/lib/fcntl.c:206
0x00012bc2      55             push rbp
0x00012bc3      89fd           mov ebp, edi
0x00012bc5      53             push rbx
0x00012bc6      4883ec50       sub rsp, 0x50
0x00012bca      64488b042528.  mov rax, qword fs:[0x28]
0x00012bd3      4889442418     mov qword [rsp + 0x18], rax
0x00012bd8      31c0           xor eax, eax
0x00012bda      488d442470     lea rax, [rsp + 0x70]                   ; ../coreutils-8.31/lib/fcntl.c:209
0x00012bdf      85f6           test esi, esi                           ; ../coreutils-8.31/lib/fcntl.c:210
0x00012be1      4889542430     mov qword [rsp + 0x30], rdx             ; ../coreutils-8.31/lib/fcntl.c:206
0x00012be6      48894c2438     mov qword [rsp + 0x38], rcx
0x00012beb      4c89442440     mov qword [rsp + 0x40], r8
0x00012bf0      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/fcntl.c:209
0x00012bf5      488d442420     lea rax, [rsp + 0x20]
0x00012bfa      4c894c2448     mov qword [rsp + 0x48], r9              ; ../coreutils-8.31/lib/fcntl.c:206
0x00012bff      c70424100000.  mov dword [rsp], 0x10                   ; ../coreutils-8.31/lib/fcntl.c:209 ; [0x10:4]=0x3e0003
0x00012c06      4889442410     mov qword [rsp + 0x10], rax
0x00012c0b      0f8401020000   je 0x12e12                              ; ../coreutils-8.31/lib/fcntl.c:210
0x00012c11      81fe06040000   cmp esi, 0x406
0x00012c17      7547           jne 0x12c60
0x00012c19      488b442410     mov rax, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/fcntl.c:221
0x00012c1e      833dd37d2000.  cmp dword [obj.have_dupfd_cloexec.3326], 0 ; ../coreutils-8.31/lib/fcntl.c:507 ; [0x21a9f8:4]=0
0x00012c25      c70424180000.  mov dword [rsp], 0x18                   ; ../coreutils-8.31/lib/fcntl.c:221 ; [0x18:4]=0x5d50 rip
0x00012c2c      448b6010       mov r12d, dword [rax + 0x10]
0x00012c30      4489e2         mov edx, r12d                           ; ../coreutils-8.31/lib/fcntl.c:509
0x00012c33      0f882a010000   js 0x12d63                              ; ../coreutils-8.31/lib/fcntl.c:507
0x00012c39      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x00012c3b      be06040000     mov esi, 0x406
0x00012c40      e88bfffeff     call sym.imp.fcntl
0x00012c45      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fcntl.c:510
0x00012c47      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x00012c49      0f8889010000   js 0x12dd8                              ; ../coreutils-8.31/lib/fcntl.c:510
0x00012c4f      c7059f7d2000.  mov dword [obj.have_dupfd_cloexec.3326], 1 ; ../coreutils-8.31/lib/fcntl.c:512 ; [0x21a9f8:4]=0
0x00012c59      eb45           jmp 0x12ca0
0x00012c5b      0f1f440000     nop dword [rax + rax]
0x00012c60      83fe0b         cmp esi, 0xb                            ; ../coreutils-8.31/lib/fcntl.c:258
0x00012c63      742b           je 0x12c90
0x00012c65      7f59           jg 0x12cc0
0x00012c67      83fe04         cmp esi, 4
0x00012c6a      0f84d0000000   je 0x12d40
0x00012c70      0f8fba000000   jg 0x12d30
0x00012c76      83fe02         cmp esi, 2
0x00012c79      0f84c1000000   je 0x12d40
0x00012c7f      7f0f           jg 0x12c90
0x00012c81      83fe01         cmp esi, 1
0x00012c84      7562           jne 0x12ce8
0x00012c86      662e0f1f8400.  nop word cs:[rax + rax]
0x00012c90      89ef           mov edi, ebp
0x00012c92      31c0           xor eax, eax
0x00012c94      e837fffeff     call sym.imp.fcntl
0x00012c99      89c3           mov ebx, eax
0x00012c9b      0f1f440000     nop dword [rax + rax]
0x00012ca0      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00012ca5      6448330c2528.  xor rcx, qword fs:[0x28]
0x00012cae      89d8           mov eax, ebx
0x00012cb0      0f8557010000   jne 0x12e0d                             ; ../coreutils-8.31/lib/fcntl.c:355
0x00012cb6      4883c450       add rsp, 0x50
0x00012cba      5b             pop rbx
0x00012cbb      5d             pop rbp
0x00012cbc      415c           pop r12
0x00012cbe      c3             ret
0x00012cbf      90             nop
0x00012cc0      81fe07040000   cmp esi, 0x407
0x00012cc6      7f48           jg 0x12d10
0x00012cc8      81fe06040000   cmp esi, 0x406
0x00012cce      7d70           jge 0x12d40
0x00012cd0      81fe01040000   cmp esi, 0x401
0x00012cd6      74b8           je 0x12c90
0x00012cd8      81fe02040000   cmp esi, 0x402                          ; ../coreutils-8.31/lib/fcntl.c:183
0x00012cde      7460           je 0x12d40
0x00012ce0      81fe00040000   cmp esi, 0x400
0x00012ce6      7458           je 0x12d40
0x00012ce8      8b0424         mov eax, dword [rsp]
0x00012ceb      83f82f         cmp eax, 0x2f
0x00012cee      0f8736010000   ja 0x12e2a
0x00012cf4      4803442410     add rax, qword [rsp + 0x10]
0x00012cf9      488b10         mov rdx, qword [rax]
0x00012cfc      89ef           mov edi, ebp
0x00012cfe      31c0           xor eax, eax
0x00012d00      e8cbfefeff     call sym.imp.fcntl
0x00012d05      89c3           mov ebx, eax
0x00012d07      eb97           jmp 0x12ca0
0x00012d09      0f1f80000000.  nop dword [rax]
0x00012d10      81fe09040000   cmp esi, 0x409
0x00012d16      7428           je 0x12d40
0x00012d18      0f8c72ffffff   jl 0x12c90
0x00012d1e      81fe0a040000   cmp esi, 0x40a
0x00012d24      75c2           jne 0x12ce8
0x00012d26      e965ffffff     jmp 0x12c90                             ; ../coreutils-8.31/lib/fcntl.c:350
0x00012d2b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fcntl.c:406
0x00012d30      83fe09         cmp esi, 9
0x00012d33      0f8457ffffff   je 0x12c90
0x00012d39      7f05           jg 0x12d40
0x00012d3b      83fe08         cmp esi, 8
0x00012d3e      75a8           jne 0x12ce8
0x00012d40      8b0424         mov eax, dword [rsp]
0x00012d43      83f82f         cmp eax, 0x2f
0x00012d46      0f87e8000000   ja 0x12e34
0x00012d4c      4803442410     add rax, qword [rsp + 0x10]
0x00012d51      8b10           mov edx, dword [rax]
0x00012d53      89ef           mov edi, ebp
0x00012d55      31c0           xor eax, eax
0x00012d57      e874fefeff     call sym.imp.fcntl
0x00012d5c      89c3           mov ebx, eax
0x00012d5e      e93dffffff     jmp 0x12ca0
0x00012d63      31f6           xor esi, esi
0x00012d65      31c0           xor eax, eax
0x00012d67      e864fefeff     call sym.imp.fcntl
0x00012d6c      85c0           test eax, eax
0x00012d6e      89c3           mov ebx, eax
0x00012d70      0f882affffff   js 0x12ca0
0x00012d76      833d7b7c2000.  cmp dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x21a9f8:4]=0
0x00012d7d      0f851dffffff   jne 0x12ca0
0x00012d83      31c0           xor eax, eax
0x00012d85      be01000000     mov esi, 1
0x00012d8a      89df           mov edi, ebx
0x00012d8c      e83ffefeff     call sym.imp.fcntl
0x00012d91      85c0           test eax, eax
0x00012d93      781c           js 0x12db1
0x00012d95      83c801         or eax, 1
0x00012d98      be02000000     mov esi, 2
0x00012d9d      89df           mov edi, ebx
0x00012d9f      89c2           mov edx, eax
0x00012da1      31c0           xor eax, eax
0x00012da3      e828fefeff     call sym.imp.fcntl
0x00012da8      83f8ff         cmp eax, 0xffffffff
0x00012dab      0f85effeffff   jne 0x12ca0
0x00012db1      e85afdfeff     call sym.imp.__errno_location
0x00012db6      448b20         mov r12d, dword [rax]
0x00012db9      4889c5         mov rbp, rax
0x00012dbc      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fcntl.c:446
0x00012dbe      e8edfffeff     call sym.imp.close                      ; ../coreutils-8.31/lib/fcntl.c:406
0x00012dc3      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x00012dc8      44896500       mov dword [rbp], r12d
0x00012dcc      e9cffeffff     jmp 0x12ca0
0x00012dd1      0f1f80000000.  nop dword [rax]
0x00012dd8      e833fdfeff     call sym.imp.__errno_location
0x00012ddd      833816         cmp dword [rax], 0x16
0x00012de0      0f8569feffff   jne 0x12c4f
0x00012de6      31f6           xor esi, esi
0x00012de8      31c0           xor eax, eax
0x00012dea      4489e2         mov edx, r12d
0x00012ded      89ef           mov edi, ebp                            ; ../coreutils-8.31/lib/fcntl.c:141
0x00012def      e8dcfdfeff     call sym.imp.fcntl
0x00012df4      85c0           test eax, eax
0x00012df6      89c3           mov ebx, eax
0x00012df8      0f88a2feffff   js 0x12ca0
0x00012dfe      c705f07b2000.  mov dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x21a9f8:4]=0
0x00012e08      e976ffffff     jmp 0x12d83
0x00012e0d      e88efefeff     call sym.imp.__stack_chk_fail
0x00012e12      488b442410     mov rax, qword [rsp + 0x10]
0x00012e17      31f6           xor esi, esi
0x00012e19      8b5010         mov edx, dword [rax + 0x10]
0x00012e1c      31c0           xor eax, eax
0x00012e1e      e8adfdfeff     call sym.imp.fcntl
0x00012e23      89c3           mov ebx, eax
0x00012e25      e976feffff     jmp 0x12ca0
0x00012e2a      488b442408     mov rax, qword [rsp + 8]
0x00012e2f      e9c5feffff     jmp 0x12cf9
0x00012e34      488b442408     mov rax, qword [rsp + 8]
0x00012e39      e913ffffff     jmp 0x12d51
0x00012e3e      6690           nop
;-- rpl_fflush:
0x00012e40      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00012e43      53             push rbx
0x00012e44      4889fb         mov rbx, rdi
0x00012e47      7411           je 0x12e5a                              ; ../coreutils-8.31/lib/fflush.c:150
0x00012e49      e80201ffff     call sym.imp.__freading
0x00012e4e      85c0           test eax, eax
0x00012e50      7408           je 0x12e5a
0x00012e52      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00012e58      750e           jne 0x12e68
0x00012e5a      4889df         mov rdi, rbx
0x00012e5d      5b             pop rbx
0x00012e5e      e99d00ffff     jmp sym.imp.fflush
0x00012e63      0f1f440000     nop dword [rax + rax]
0x00012e68      4889df         mov rdi, rbx
0x00012e6b      ba01000000     mov edx, 1
0x00012e70      31f6           xor esi, esi
0x00012e72      e809000000     call sym.rpl_fseeko
0x00012e77      4889df         mov rdi, rbx
0x00012e7a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x00012e7b      e98000ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00012e80      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00012e84      48394710       cmp qword [rdi + 0x10], rax
0x00012e88      7406           je 0x12e90                              ; ../coreutils-8.31/lib/fseeko.c:32
0x00012e8a      e99101ffff     jmp sym.imp.fseeko
0x00012e8f      90             nop
0x00012e90      488b4720       mov rax, qword [rdi + 0x20]
0x00012e94      48394728       cmp qword [rdi + 0x28], rax
0x00012e98      75f0           jne 0x12e8a                             ; ../coreutils-8.31/lib/fseeko.c:33
0x00012e9a      48837f4800     cmp qword [rdi + 0x48], 0
0x00012e9f      75e9           jne 0x12e8a                             ; ../coreutils-8.31/lib/fseeko.c:21
0x00012ea1      4154           push r12
0x00012ea3      55             push rbp
0x00012ea4      4189d4         mov r12d, edx
0x00012ea7      53             push rbx
0x00012ea8      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x00012eab      4889fb         mov rbx, rdi
0x00012eae      e8ddfffeff     call sym.imp.fileno
0x00012eb3      4489e2         mov edx, r12d
0x00012eb6      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00012eb9      89c7           mov edi, eax
0x00012ebb      e890fefeff     call sym.imp.lseek
0x00012ec0      4883f8ff       cmp rax, 0xffffffffffffffff
0x00012ec4      740c           je 0x12ed2
0x00012ec6      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00012ec9      488983900000.  mov qword [rbx + 0x90], rax
0x00012ed0      31c0           xor eax, eax
0x00012ed2      5b             pop rbx
0x00012ed3      5d             pop rbp
0x00012ed4      415c           pop r12
0x00012ed6      c3             ret
0x00012ed7      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x00012ee0      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00012ee2      4154           push r12
0x00012ee4      4989f5         mov r13, rsi
0x00012ee7      55             push rbp
0x00012ee8      53             push rbx
0x00012ee9      4889fb         mov rbx, rdi
0x00012eec      4989d4         mov r12, rdx
0x00012eef      4883ec18       sub rsp, 0x18
0x00012ef3      64488b042528.  mov rax, qword fs:[0x28]
0x00012efc      4889442408     mov qword [rsp + 8], rax
0x00012f01      31c0           xor eax, eax
0x00012f03      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00012f08      4885ff         test rdi, rdi
0x00012f0b      480f44d8       cmove rbx, rax
0x00012f0f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00012f12      e8b9fdfeff     call sym.imp.mbrtowc
0x00012f17      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00012f1b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00012f1e      7620           jbe 0x12f40                             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00012f20      4d85e4         test r12, r12
0x00012f23      741b           je 0x12f40
0x00012f25      31ff           xor edi, edi
0x00012f27      e8b496ffff     call sym.hard_locale
0x00012f2c      84c0           test al, al
0x00012f2e      7510           jne 0x12f40
0x00012f30      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00012f35      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x00012f3a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00012f3c      0f1f4000       nop dword [rax]
0x00012f40      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00012f45      644833142528.  xor rdx, qword fs:[0x28]
0x00012f4e      4889e8         mov rax, rbp
0x00012f51      750b           jne 0x12f5e
0x00012f53      4883c418       add rsp, 0x18
0x00012f57      5b             pop rbx
0x00012f58      5d             pop rbp
0x00012f59      415c           pop r12
0x00012f5b      415d           pop r13
0x00012f5d      c3             ret
0x00012f5e      e83dfdfeff     call sym.imp.__stack_chk_fail
0x00012f63      662e0f1f8400.  nop word cs:[rax + rax]
0x00012f6d      0f1f00         nop dword [rax]
;-- rpl_nanosleep:
0x00012f70      4154           push r12                                ; ../coreutils-8.31/lib/nanosleep.c:49
0x00012f72      55             push rbp
0x00012f73      53             push rbx
0x00012f74      4883ec20       sub rsp, 0x20
0x00012f78      64488b042528.  mov rax, qword fs:[0x28]
0x00012f81      4889442418     mov qword [rsp + 0x18], rax
0x00012f86      31c0           xor eax, eax
0x00012f88      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/nanosleep.c:56
0x00012f8c      483dffc99a3b   cmp rax, 0x3b9ac9ff
0x00012f92      0f8788000000   ja 0x13020
0x00012f98      488b1f         mov rbx, qword [rdi]                    ; ../coreutils-8.31/lib/nanosleep.c:66
0x00012f9b      4889f5         mov rbp, rsi
0x00012f9e      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/nanosleep.c:68
0x00012fa3      4989e4         mov r12, rsp
0x00012fa6      4881fb00a41f.  cmp rbx, 0x1fa400                       ; ../coreutils-8.31/lib/nanosleep.c:70
0x00012fad      7f1b           jg 0x12fca
0x00012faf      eb47           jmp 0x12ff8
0x00012fb1      0f1f80000000.  nop dword [rax]
0x00012fb8      4881fb00a41f.  cmp rbx, 0x1fa400
0x00012fbf      48c744240800.  mov qword [rsp + 8], 0                  ; ../coreutils-8.31/lib/nanosleep.c:82
0x00012fc8      7e2e           jle 0x12ff8                             ; ../coreutils-8.31/lib/nanosleep.c:70
0x00012fca      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/nanosleep.c:74
0x00012fcd      4c89e7         mov rdi, r12
0x00012fd0      48c7042400a4.  mov qword [rsp], 0x1fa400               ; ../coreutils-8.31/lib/nanosleep.c:73 ; [0x1fa400:8]=-1
0x00012fd8      4881eb00a41f.  sub rbx, 0x1fa400                       ; ../coreutils-8.31/lib/nanosleep.c:75
0x00012fdf      e81cfdfeff     call sym.imp.nanosleep                  ; ../coreutils-8.31/lib/nanosleep.c:74
0x00012fe4      85c0           test eax, eax                           ; ../coreutils-8.31/lib/nanosleep.c:76
0x00012fe6      74d0           je 0x12fb8
0x00012fe8      4885ed         test rbp, rbp                           ; ../coreutils-8.31/lib/nanosleep.c:78
0x00012feb      741a           je 0x13007
0x00012fed      48015d00       add qword [rbp], rbx                    ; ../coreutils-8.31/lib/nanosleep.c:79
0x00012ff1      eb14           jmp 0x13007
0x00012ff3      0f1f440000     nop dword [rax + rax]
0x00012ff8      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/nanosleep.c:85
0x00012ffb      4c89e7         mov rdi, r12
0x00012ffe      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/nanosleep.c:84
0x00013002      e8f9fcfeff     call sym.imp.nanosleep                  ; ../coreutils-8.31/lib/nanosleep.c:85
0x00013007      488b542418     mov rdx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/nanosleep.c:87
0x0001300c      644833142528.  xor rdx, qword fs:[0x28]
0x00013015      751b           jne 0x13032
0x00013017      4883c420       add rsp, 0x20
0x0001301b      5b             pop rbx
0x0001301c      5d             pop rbp
0x0001301d      415c           pop r12
0x0001301f      c3             ret
0x00013020      e8ebfafeff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/nanosleep.c:58
0x00013025      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x5d500000
0x0001302b      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/nanosleep.c:59 ; -1
0x00013030      ebd5           jmp 0x13007
0x00013032      e869fcfeff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/nanosleep.c:87
0x00013037      660f1f840000.  nop word [rax + rax]
;-- print_and_abort:
0x00013040      488d35083400.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/obstack.c:331 ; 0x1644f ; "memory exhausted"
0x00013047      4883ec08       sub rsp, 8
0x0001304b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/obstack.c:340
0x00013050      31ff           xor edi, edi
0x00013052      e819fcfeff     call sym.imp.dcgettext
0x00013057      488b3da27120.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x21a200:8]=0
0x0001305e      488d159a3000.  lea rdx, [0x000160ff]                   ; "%s\n"
0x00013065      4889c1         mov rcx, rax
0x00013068      be01000000     mov esi, 1
0x0001306d      31c0           xor eax, eax
0x0001306f      e88c00ffff     call sym.imp.__fprintf_chk
0x00013074      8b3db6702000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/obstack.c:342 ; [0x21a130:4]=1
0x0001307a      e86100ffff     call sym.imp.exit
0x0001307f      90             nop
;-- call_chunkfun:
0x00013080      f6475001       test byte [rdi + 0x50], 1               ; ../coreutils-8.31/lib/obstack.c:85
0x00013084      488b4738       mov rax, qword [rdi + 0x38]
0x00013088      7506           jne 0x13090
0x0001308a      4889f7         mov rdi, rsi                            ; ../coreutils-8.31/lib/obstack.c:89
0x0001308d      ffe0           jmp rax
0x0001308f      90             nop
0x00013090      488b7f48       mov rdi, qword [rdi + 0x48]             ; ../coreutils-8.31/lib/obstack.c:87
0x00013094      ffe0           jmp rax
0x00013096      662e0f1f8400.  nop word cs:[rax + rax]
;-- call_freefun:
0x000130a0      f6475001       test byte [rdi + 0x50], 1               ; ../coreutils-8.31/lib/obstack.c:94
0x000130a4      488b4740       mov rax, qword [rdi + 0x40]
0x000130a8      7506           jne 0x130b0
0x000130aa      4889f7         mov rdi, rsi                            ; ../coreutils-8.31/lib/obstack.c:98
0x000130ad      ffe0           jmp rax
0x000130af      90             nop
0x000130b0      488b7f48       mov rdi, qword [rdi + 0x48]             ; ../coreutils-8.31/lib/obstack.c:96
0x000130b4      ffe0           jmp rax
0x000130b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- _obstack_begin_worker:
0x000130c0      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/obstack.c:111
0x000130c3      4154           push r12
0x000130c5      55             push rbp
0x000130c6      53             push rbx
0x000130c7      4889fb         mov rbx, rdi
0x000130ca      7464           je 0x13130                              ; ../coreutils-8.31/lib/obstack.c:114
0x000130cc      4c8d62ff       lea r12, [rdx - 1]
0x000130d0      4889d5         mov rbp, rdx
0x000130d3      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/obstack.c:130
0x000130d6      b8e00f0000     mov eax, sym..dynstr                    ; 0xfe0
0x000130db      4c896330       mov qword [rbx + 0x30], r12             ; ../coreutils-8.31/lib/obstack.c:134
0x000130df      480f44f0       cmove rsi, rax                          ; ../coreutils-8.31/lib/obstack.c:130
0x000130e3      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/obstack.c:136
0x000130e6      488933         mov qword [rbx], rsi                    ; ../coreutils-8.31/lib/obstack.c:133
0x000130e9      e892ffffff     call sym.call_chunkfun                  ; ../coreutils-8.31/lib/obstack.c:136
0x000130ee      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/obstack.c:137
0x000130f1      48894308       mov qword [rbx + 8], rax                ; ../coreutils-8.31/lib/obstack.c:136
0x000130f5      7446           je 0x1313d                              ; ../coreutils-8.31/lib/obstack.c:137
0x000130f7      4a8d542010     lea rdx, [rax + r12 + 0x10]             ; ../coreutils-8.31/lib/obstack.c:139
0x000130fc      48f7dd         neg rbp
0x000130ff      4821d5         and rbp, rdx
0x00013102      488b13         mov rdx, qword [rbx]                    ; ../coreutils-8.31/lib/obstack.c:141
0x00013105      48896b10       mov qword [rbx + 0x10], rbp             ; ../coreutils-8.31/lib/obstack.c:139
0x00013109      48896b18       mov qword [rbx + 0x18], rbp
0x0001310d      4801c2         add rdx, rax                            ; ../coreutils-8.31/lib/obstack.c:141
0x00013110      488910         mov qword [rax], rdx
0x00013113      48895320       mov qword [rbx + 0x20], rdx
0x00013117      48c740080000.  mov qword [rax + 8], 0                  ; ../coreutils-8.31/lib/obstack.c:142
0x0001311f      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/obstack.c:147
0x00013124      806350f9       and byte [rbx + 0x50], 0xf9             ; ../coreutils-8.31/lib/obstack.c:145 ; [0xf9:1]=149
0x00013128      5b             pop rbx                                 ; ../coreutils-8.31/lib/obstack.c:147
0x00013129      5d             pop rbp
0x0001312a      415c           pop r12
0x0001312c      c3             ret
0x0001312d      0f1f00         nop dword [rax]
0x00013130      41bc0f000000   mov r12d, 0xf
0x00013136      bd10000000     mov ebp, 0x10                           ; ../coreutils-8.31/lib/obstack.c:115
0x0001313b      eb96           jmp 0x130d3
0x0001313d      ff155d702000   call qword [obj.obstack_alloc_failed_handler] ; ../coreutils-8.31/lib/obstack.c:138 ; [0x21a1a0:8]=0x13040 sym.print_and_abort ; "@0\x01"
0x00013143      0f1f00         nop dword [rax]
0x00013146      662e0f1f8400.  nop word cs:[rax + rax]
;-- _obstack_begin:
0x00013150      806750fe       and byte [rdi + 0x50], 0xfe             ; ../coreutils-8.31/lib/obstack.c:154 ; [0xfe:1]=0
0x00013154      48894f38       mov qword [rdi + 0x38], rcx             ; ../coreutils-8.31/lib/obstack.c:155
0x00013158      4c894740       mov qword [rdi + 0x40], r8              ; ../coreutils-8.31/lib/obstack.c:156
0x0001315c      e95fffffff     jmp sym._obstack_begin_worker           ; ../coreutils-8.31/lib/obstack.c:158
0x00013161      0f1f440000     nop dword [rax + rax]
0x00013166      662e0f1f8400.  nop word cs:[rax + rax]
;-- _obstack_begin_1:
0x00013170      804f5001       or byte [rdi + 0x50], 1                 ; ../coreutils-8.31/lib/obstack.c:167
0x00013174      48894f38       mov qword [rdi + 0x38], rcx             ; ../coreutils-8.31/lib/obstack.c:168
0x00013178      4c894740       mov qword [rdi + 0x40], r8              ; ../coreutils-8.31/lib/obstack.c:169
0x0001317c      4c894f48       mov qword [rdi + 0x48], r9              ; ../coreutils-8.31/lib/obstack.c:170
0x00013180      e93bffffff     jmp sym._obstack_begin_worker           ; ../coreutils-8.31/lib/obstack.c:172
0x00013185      90             nop
0x00013186      662e0f1f8400.  nop word cs:[rax + rax]
;-- _obstack_newchunk:
0x00013190      4156           push r14                                ; ../coreutils-8.31/lib/obstack.c:183
0x00013192      4155           push r13
0x00013194      31d2           xor edx, edx
0x00013196      4154           push r12
0x00013198      55             push rbp
0x00013199      53             push rbx
0x0001319a      488b5f18       mov rbx, qword [rdi + 0x18]             ; ../coreutils-8.31/lib/obstack.c:186
0x0001319e      482b5f10       sub rbx, qword [rdi + 0x10]
0x000131a2      488b6f08       mov rbp, qword [rdi + 8]                ; ../coreutils-8.31/lib/obstack.c:184
0x000131a6      4801de         add rsi, rbx
0x000131a9      4889d9         mov rcx, rbx                            ; ../coreutils-8.31/lib/obstack.c:192
0x000131ac      0f92c2         setb dl
0x000131af      48037730       add rsi, qword [rdi + 0x30]
0x000131b3      0f92c0         setb al
0x000131b6      48c1e903       shr rcx, 3
0x000131ba      483937         cmp qword [rdi], rsi
0x000131bd      4c8d640e64     lea r12, [rsi + rcx + 0x64]
0x000131c2      480f4337       cmovae rsi, qword [rdi]
0x000131c6      4c39e6         cmp rsi, r12
0x000131c9      4c0f43e6       cmovae r12, rsi
0x000131cd      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/obstack.c:199
0x000131d0      0f859f000000   jne 0x13275
0x000131d6      0fb6c0         movzx eax, al
0x000131d9      4885c0         test rax, rax
0x000131dc      0f8593000000   jne 0x13275
0x000131e2      4c89e6         mov rsi, r12                            ; ../coreutils-8.31/lib/obstack.c:200
0x000131e5      4989fd         mov r13, rdi
0x000131e8      e893feffff     call sym.call_chunkfun
0x000131ed      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/obstack.c:201
0x000131f0      4989c6         mov r14, rax                            ; ../coreutils-8.31/lib/obstack.c:200
0x000131f3      0f847c000000   je 0x13275                              ; ../coreutils-8.31/lib/obstack.c:201
0x000131f9      4a8d3420       lea rsi, [rax + r12]                    ; ../coreutils-8.31/lib/obstack.c:205
0x000131fd      49894508       mov qword [r13 + 8], rax                ; ../coreutils-8.31/lib/obstack.c:203
0x00013201      48896808       mov qword [rax + 8], rbp                ; ../coreutils-8.31/lib/obstack.c:204
0x00013205      4889da         mov rdx, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00013208      49897520       mov qword [r13 + 0x20], rsi             ; ../coreutils-8.31/lib/obstack.c:205
0x0001320c      488930         mov qword [rax], rsi
0x0001320f      498b4530       mov rax, qword [r13 + 0x30]             ; ../coreutils-8.31/lib/obstack.c:209
0x00013213      498b7510       mov rsi, qword [r13 + 0x10]             ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00013217      4d8d640610     lea r12, [r14 + rax + 0x10]             ; ../coreutils-8.31/lib/obstack.c:209
0x0001321c      48f7d0         not rax
0x0001321f      4921c4         and r12, rax
0x00013222      4c89e7         mov rdi, r12                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00013225      e856fcfeff     call sym.imp.memcpy
0x0001322a      41f6455002     test byte [r13 + 0x50], 2               ; ../coreutils-8.31/lib/obstack.c:217
0x0001322f      7515           jne 0x13246
0x00013231      498b4530       mov rax, qword [r13 + 0x30]             ; ../coreutils-8.31/lib/obstack.c:219
0x00013235      488d540510     lea rdx, [rbp + rax + 0x10]
0x0001323a      48f7d0         not rax
0x0001323d      4821d0         and rax, rdx
0x00013240      49394510       cmp qword [r13 + 0x10], rax             ; ../coreutils-8.31/lib/obstack.c:218
0x00013244      741a           je 0x13260
0x00013246      41806550fd     and byte [r13 + 0x50], 0xfd             ; ../coreutils-8.31/lib/obstack.c:229 ; [0xfd:1]=0
0x0001324b      4c01e3         add rbx, r12                            ; ../coreutils-8.31/lib/obstack.c:227
0x0001324e      4d896510       mov qword [r13 + 0x10], r12             ; ../coreutils-8.31/lib/obstack.c:226
0x00013252      49895d18       mov qword [r13 + 0x18], rbx             ; ../coreutils-8.31/lib/obstack.c:227
0x00013256      5b             pop rbx                                 ; ../coreutils-8.31/lib/obstack.c:230
0x00013257      5d             pop rbp
0x00013258      415c           pop r12
0x0001325a      415d           pop r13
0x0001325c      415e           pop r14
0x0001325e      c3             ret
0x0001325f      90             nop
0x00013260      488b4508       mov rax, qword [rbp + 8]                ; ../coreutils-8.31/lib/obstack.c:222
0x00013264      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/obstack.c:223
0x00013267      4c89ef         mov rdi, r13
0x0001326a      49894608       mov qword [r14 + 8], rax                ; ../coreutils-8.31/lib/obstack.c:222
0x0001326e      e82dfeffff     call sym.call_freefun                   ; ../coreutils-8.31/lib/obstack.c:223
0x00013273      ebd1           jmp 0x13246
0x00013275      ff15256f2000   call qword [obj.obstack_alloc_failed_handler] ; ../coreutils-8.31/lib/obstack.c:202 ; [0x21a1a0:8]=0x13040 sym.print_and_abort ; "@0\x01"
0x0001327b      0f1f440000     nop dword [rax + rax]
;-- _obstack_allocated_p:
0x00013280      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/obstack.c:242
0x00013284      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/obstack.c:250
0x00013287      742d           je 0x132b6
0x00013289      0f1f80000000.  nop dword [rax]
0x00013290      4839c6         cmp rsi, rax
0x00013293      7605           jbe 0x1329a
0x00013295      483930         cmp qword [rax], rsi
0x00013298      7316           jae 0x132b0
0x0001329a      488b4008       mov rax, qword [rax + 8]                ; ../coreutils-8.31/lib/obstack.c:252
0x0001329e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/obstack.c:250
0x000132a1      75ed           jne 0x13290
0x000132a3      31c0           xor eax, eax
0x000132a5      c3             ret                                     ; ../coreutils-8.31/lib/obstack.c:256
0x000132a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000132b0      b801000000     mov eax, 1
0x000132b5      c3             ret
0x000132b6      f3c3           ret
0x000132b8      0f1f84000000.  nop dword [rax + rax]
;-- _obstack_free:
0x000132c0      4154           push r12                                ; ../coreutils-8.31/lib/obstack.c:263
0x000132c2      55             push rbp
0x000132c3      4889f5         mov rbp, rsi
0x000132c6      53             push rbx
0x000132c7      488b7708       mov rsi, qword [rdi + 8]                ; ../coreutils-8.31/lib/obstack.c:267
0x000132cb      4889fb         mov rbx, rdi
0x000132ce      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/obstack.c:271
0x000132d1      742a           je 0x132fd
0x000132d3      0f1f440000     nop dword [rax + rax]
0x000132d8      4839ee         cmp rsi, rbp
0x000132db      7308           jae 0x132e5
0x000132dd      488b06         mov rax, qword [rsi]
0x000132e0      4839e8         cmp rax, rbp
0x000132e3      732b           jae 0x13310
0x000132e5      4c8b6608       mov r12, qword [rsi + 8]                ; ../coreutils-8.31/lib/obstack.c:273
0x000132e9      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/obstack.c:274
0x000132ec      e8affdffff     call sym.call_freefun
0x000132f1      804b5002       or byte [rbx + 0x50], 2                 ; ../coreutils-8.31/lib/obstack.c:278
0x000132f5      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/obstack.c:271
0x000132f8      4c89e6         mov rsi, r12
0x000132fb      75db           jne 0x132d8
0x000132fd      4885ed         test rbp, rbp                           ; ../coreutils-8.31/lib/obstack.c:286
0x00013300      7523           jne 0x13325
0x00013302      5b             pop rbx                                 ; ../coreutils-8.31/lib/obstack.c:289
0x00013303      5d             pop rbp
0x00013304      415c           pop r12
0x00013306      c3             ret
0x00013307      660f1f840000.  nop word [rax + rax]
0x00013310      48896b18       mov qword [rbx + 0x18], rbp             ; ../coreutils-8.31/lib/obstack.c:282
0x00013314      48896b10       mov qword [rbx + 0x10], rbp
0x00013318      48894320       mov qword [rbx + 0x20], rax             ; ../coreutils-8.31/lib/obstack.c:283
0x0001331c      48897308       mov qword [rbx + 8], rsi                ; ../coreutils-8.31/lib/obstack.c:284
0x00013320      5b             pop rbx                                 ; ../coreutils-8.31/lib/obstack.c:289
0x00013321      5d             pop rbp
0x00013322      415c           pop r12
0x00013324      c3             ret
0x00013325      e8d6f7feff     call sym.imp.abort                      ; ../coreutils-8.31/lib/obstack.c:288
0x0001332a      660f1f440000   nop word [rax + rax]
;-- _obstack_memory_used:
0x00013330      488b5708       mov rdx, qword [rdi + 8]                ; ../coreutils-8.31/lib/obstack.c:293
0x00013334      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/obstack.c:295
0x00013336      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/obstack.c:297
0x00013339      741d           je 0x13358
0x0001333b      0f1f440000     nop dword [rax + rax]
0x00013340      488b0a         mov rcx, qword [rdx]                    ; ../coreutils-8.31/lib/obstack.c:299
0x00013343      4829d1         sub rcx, rdx
0x00013346      488b5208       mov rdx, qword [rdx + 8]                ; ../coreutils-8.31/lib/obstack.c:297
0x0001334a      4801c8         add rax, rcx                            ; ../coreutils-8.31/lib/obstack.c:299
0x0001334d      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/obstack.c:297
0x00013350      75ee           jne 0x13340
0x00013352      f3c3           ret
0x00013354      0f1f4000       nop dword [rax]
0x00013358      f3c3           ret                                     ; ../coreutils-8.31/lib/obstack.c:302
0x0001335a      660f1f440000   nop word [rax + rax]
;-- close_stream:
0x00013360      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00013362      55             push rbp
0x00013363      4889fd         mov rbp, rdi
0x00013366      53             push rbx
0x00013367      e8f4f7feff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x0001336c      8b5d00         mov ebx, dword [rbp]
0x0001336f      4889ef         mov rdi, rbp
0x00013372      4989c4         mov r12, rax
0x00013375      e8c6f7ffff     call sym.rpl_fclose
0x0001337a      83e320         and ebx, 0x20                           ; "@"
0x0001337d      85db           test ebx, ebx
0x0001337f      7517           jne 0x13398
0x00013381      85c0           test eax, eax
0x00013383      740a           je 0x1338f                              ; stdio.h:-186
0x00013385      4d85e4         test r12, r12                           ; stdio.h:-178
0x00013388      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0001338d      7439           je 0x133c8
0x0001338f      5b             pop rbx
0x00013390      5d             pop rbp
0x00013391      415c           pop r12
0x00013393      c3             ret
0x00013394      0f1f4000       nop dword [rax]
0x00013398      85c0           test eax, eax
0x0001339a      751c           jne 0x133b8
0x0001339c      e86ff7feff     call sym.imp.__errno_location
0x000133a1      c70000000000   mov dword [rax], 0
0x000133a7      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000133ac      5b             pop rbx
0x000133ad      5d             pop rbp
0x000133ae      415c           pop r12
0x000133b0      c3             ret
0x000133b1      0f1f80000000.  nop dword [rax]
0x000133b8      5b             pop rbx
0x000133b9      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000133be      5d             pop rbp                                 ; stdio.h:-186
0x000133bf      415c           pop r12
0x000133c1      c3             ret
0x000133c2      660f1f440000   nop word [rax + rax]
0x000133c8      e843f7feff     call sym.imp.__errno_location
0x000133cd      833809         cmp dword [rax], 9
0x000133d0      5b             pop rbx
0x000133d1      5d             pop rbp
0x000133d2      415c           pop r12                                 ; stdio.h:-178
0x000133d4      0f95c0         setne al
0x000133d7      0fb6c0         movzx eax, al
0x000133da      f7d8           neg eax
0x000133dc      c3             ret
0x000133dd      0f1f00         nop dword [rax]
;-- dtotimespec:
0x000133e0      660f2e056833.  ucomisd xmm0, qword [0x00016750]        ; ../coreutils-8.31/lib/dtotimespec.c:31
0x000133e8      0f8692000000   jbe 0x13480
0x000133ee      f20f100dea25.  movsd xmm1, qword [0x000159e0]          ; ../coreutils-8.31/lib/dtotimespec.c:34 ; [0x159e0:8]=0x43e0000000000000
0x000133f6      660f2ec8       ucomisd xmm1, xmm0
0x000133fa      766c           jbe 0x13468
0x000133fc      f2480f2cf0     cvttsd2si rsi, xmm0                     ; ../coreutils-8.31/lib/dtotimespec.c:38
0x00013401      660fefc9       pxor xmm1, xmm1                         ; ../coreutils-8.31/lib/dtotimespec.c:39
0x00013405      31c9           xor ecx, ecx                            ; ../coreutils-8.31/lib/dtotimespec.c:41
0x00013407      f2480f2ace     cvtsi2sd xmm1, rsi                      ; ../coreutils-8.31/lib/dtotimespec.c:39
0x0001340c      f20f5cc1       subsd xmm0, xmm1
0x00013410      660fefc9       pxor xmm1, xmm1                         ; ../coreutils-8.31/lib/dtotimespec.c:41
0x00013414      f20f59053c33.  mulsd xmm0, qword [0x00016758]          ; ../coreutils-8.31/lib/dtotimespec.c:39
0x0001341c      f2480f2cd0     cvttsd2si rdx, xmm0                     ; ../coreutils-8.31/lib/dtotimespec.c:40
0x00013421      f2480f2aca     cvtsi2sd xmm1, rdx                      ; ../coreutils-8.31/lib/dtotimespec.c:41
0x00013426      660f2ec1       ucomisd xmm0, xmm1
0x0001342a      0f97c1         seta cl
0x0001342d      4801d1         add rcx, rdx
0x00013430      48bab394d626.  movabs rdx, 0x112e0be826d694b3          ; ../coreutils-8.31/lib/dtotimespec.c:42
0x0001343a      4889c8         mov rax, rcx
0x0001343d      48f7ea         imul rdx
0x00013440      4889c8         mov rax, rcx
0x00013443      48c1f83f       sar rax, 0x3f
0x00013447      48c1fa1a       sar rdx, 0x1a
0x0001344b      4829c2         sub rdx, rax
0x0001344e      488d0432       lea rax, [rdx + rsi]
0x00013452      4869d200ca9a.  imul rdx, rdx, 0x3b9aca00               ; ../coreutils-8.31/lib/dtotimespec.c:43
0x00013459      4829d1         sub rcx, rdx                            ; ../coreutils-8.31/lib/dtotimespec.c:45
0x0001345c      4889ca         mov rdx, rcx
0x0001345f      782f           js 0x13490
0x00013461      f3c3           ret                                     ; ../coreutils-8.31/lib/dtotimespec.c:53
0x00013463      0f1f440000     nop dword [rax + rax]
0x00013468      48b8ffffffff.  movabs rax, 0x7fffffffffffffff          ; 9223372036854775807
0x00013472      baffc99a3b     mov edx, 0x3b9ac9ff
0x00013477      c3             ret
0x00013478      0f1f84000000.  nop dword [rax + rax]
0x00013480      48b800000000.  movabs rax, 0x8000000000000000
0x0001348a      31d2           xor edx, edx
0x0001348c      c3             ret
0x0001348d      0f1f00         nop dword [rax]
0x00013490      4883e801       sub rax, 1                              ; ../coreutils-8.31/lib/dtotimespec.c:47
0x00013494      4881c200ca9a.  add rdx, 0x3b9aca00                     ; ../coreutils-8.31/lib/dtotimespec.c:48
0x0001349b      c3             ret                                     ; ../coreutils-8.31/lib/dtotimespec.c:53
0x0001349c      0f1f4000       nop dword [rax]
;-- fd_safer_flag:
0x000134a0      4155           push r13                                ; ../coreutils-8.31/lib/fd-safer-flag.c:41
0x000134a2      4154           push r12
0x000134a4      55             push rbp
0x000134a5      53             push rbx
0x000134a6      89fb           mov ebx, edi
0x000134a8      4883ec08       sub rsp, 8
0x000134ac      83ff02         cmp edi, 2                              ; ../coreutils-8.31/lib/fd-safer-flag.c:42
0x000134af      7721           ja 0x134d2
0x000134b1      e82a000000     call sym.dup_safer_flag                 ; ../coreutils-8.31/lib/fd-safer-flag.c:44
0x000134b6      4189c4         mov r12d, eax
0x000134b9      e852f6feff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fd-safer-flag.c:45
0x000134be      448b28         mov r13d, dword [rax]
0x000134c1      4889c5         mov rbp, rax
0x000134c4      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fd-safer-flag.c:46
0x000134c6      e8e5f8feff     call sym.imp.close
0x000134cb      4489e3         mov ebx, r12d                           ; ../coreutils-8.31/lib/fd-safer-flag.c:48
0x000134ce      44896d00       mov dword [rbp], r13d                   ; ../coreutils-8.31/lib/fd-safer-flag.c:47
0x000134d2      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fd-safer-flag.c:52
0x000134d6      89d8           mov eax, ebx
0x000134d8      5b             pop rbx
0x000134d9      5d             pop rbp
0x000134da      415c           pop r12
0x000134dc      415d           pop r13
0x000134de      c3             ret
0x000134df      90             nop
;-- dup_safer_flag:
0x000134e0      81e600000800   and esi, 0x80000                        ; ../coreutils-8.31/lib/dup-safer-flag.c:35
0x000134e6      b806040000     mov eax, 0x406
0x000134eb      ba03000000     mov edx, 3
0x000134f0      0f45f0         cmovne esi, eax
0x000134f3      31c0           xor eax, eax
0x000134f5      e9c6f6ffff     jmp sym.rpl_fcntl
0x000134fa      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/dup-safer-flag.c:36
;-- fopen_safer:
0x00013500      4154           push r12                                ; ../coreutils-8.31/lib/fopen-safer.c:32
0x00013502      55             push rbp
0x00013503      4889f5         mov rbp, rsi
0x00013506      53             push rbx
0x00013507      e824fbfeff     call sym.imp.fopen                      ; ../coreutils-8.31/lib/fopen-safer.c:33
0x0001350c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fopen-safer.c:35
0x0001350f      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:33
0x00013512      740d           je 0x13521                              ; ../coreutils-8.31/lib/fopen-safer.c:35
0x00013514      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:37
0x00013517      e874f9feff     call sym.imp.fileno
0x0001351c      83f802         cmp eax, 2                              ; ../coreutils-8.31/lib/fopen-safer.c:39
0x0001351f      760f           jbe 0x13530
0x00013521      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:63
0x00013524      5b             pop rbx
0x00013525      5d             pop rbp
0x00013526      415c           pop r12
0x00013528      c3             ret
0x00013529      0f1f80000000.  nop dword [rax]
0x00013530      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fopen-safer.c:41
0x00013532      e879020000     call sym.dup_safer
0x00013537      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:43
0x00013539      4189c4         mov r12d, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:41
0x0001353c      783a           js 0x13578                              ; ../coreutils-8.31/lib/fopen-safer.c:43
0x0001353e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:51
0x00013541      e8faf5ffff     call sym.rpl_fclose
0x00013546      85c0           test eax, eax
0x00013548      7513           jne 0x1355d
0x0001354a      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fopen-safer.c:52
0x0001354d      4489e7         mov edi, r12d
0x00013550      e82bfafeff     call sym.imp.fdopen
0x00013555      4885c0         test rax, rax
0x00013558      4889c3         mov rbx, rax
0x0001355b      75c4           jne 0x13521
0x0001355d      e8aef5feff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:54
0x00013562      8b28           mov ebp, dword [rax]
0x00013564      4889c3         mov rbx, rax
0x00013567      4489e7         mov edi, r12d                           ; ../coreutils-8.31/lib/fopen-safer.c:55
0x0001356a      e841f8feff     call sym.imp.close
0x0001356f      892b           mov dword [rbx], ebp                    ; ../coreutils-8.31/lib/fopen-safer.c:56
0x00013571      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:57
0x00013573      ebac           jmp 0x13521
0x00013575      0f1f00         nop dword [rax]
0x00013578      e893f5feff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:45
0x0001357d      448b20         mov r12d, dword [rax]
0x00013580      4889c5         mov rbp, rax
0x00013583      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:46
0x00013586      e8b5f5ffff     call sym.rpl_fclose
0x0001358b      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:48
0x0001358d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fopen-safer.c:47
0x00013591      eb8e           jmp 0x13521                             ; ../coreutils-8.31/lib/fopen-safer.c:48
0x00013593      662e0f1f8400.  nop word cs:[rax + rax]
0x0001359d      0f1f00         nop dword [rax]
;-- locale_charset:
0x000135a0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/localcharset.c:688
0x000135a4      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x000135a9      e862f9feff     call sym.imp.nl_langinfo
0x000135ae      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x000135b1      741d           je 0x135d0
0x000135b3      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x000135b6      488d15a33100.  lea rdx, [0x00016760]                   ; "ASCII"
0x000135bd      480f44c2       cmove rax, rdx
0x000135c1      4883c408       add rsp, 8
0x000135c5      c3             ret
0x000135c6      662e0f1f8400.  nop word cs:[rax + rax]
0x000135d0      488d05893100.  lea rax, [0x00016760]                   ; "ASCII"
0x000135d7      4883c408       add rsp, 8
0x000135db      c3             ret
0x000135dc      0f1f4000       nop dword [rax]
;-- strcoll_loop:
0x000135e0      4157           push r15                                ; ../coreutils-8.31/lib/memcoll.c:36
0x000135e2      4156           push r14
0x000135e4      4989ce         mov r14, rcx
0x000135e7      4155           push r13
0x000135e9      4154           push r12
0x000135eb      4989f5         mov r13, rsi
0x000135ee      55             push rbp
0x000135ef      53             push rbx
0x000135f0      4989fc         mov r12, rdi
0x000135f3      4889d5         mov rbp, rdx
0x000135f6      4883ec08       sub rsp, 8
0x000135fa      e811f5feff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/memcoll.c:39
0x000135ff      4989c7         mov r15, rax
0x00013602      eb2f           jmp 0x13633
0x00013604      0f1f4000       nop dword [rax]
0x00013608      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/memcoll.c:44
0x0001360b      e880f6feff     call sym.imp.strlen
0x00013610      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/memcoll.c:45
0x00013613      488d5801       lea rbx, [rax + 1]                      ; ../coreutils-8.31/lib/memcoll.c:44
0x00013617      e874f6feff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/memcoll.c:45
0x0001361c      4883c001       add rax, 1
0x00013620      4901dc         add r12, rbx                            ; ../coreutils-8.31/lib/memcoll.c:46
0x00013623      4801c5         add rbp, rax                            ; ../coreutils-8.31/lib/memcoll.c:47
0x00013626      4929c6         sub r14, rax                            ; ../coreutils-8.31/lib/memcoll.c:49
0x00013629      4929dd         sub r13, rbx                            ; ../coreutils-8.31/lib/memcoll.c:51
0x0001362c      7432           je 0x13660
0x0001362e      4d85f6         test r14, r14                           ; ../coreutils-8.31/lib/memcoll.c:53
0x00013631      744d           je 0x13680
0x00013633      41c707000000.  mov dword [r15], 0                      ; ../coreutils-8.31/lib/memcoll.c:39
0x0001363a      4889ee         mov rsi, rbp
0x0001363d      4c89e7         mov rdi, r12
0x00013640      e8ebf8feff     call sym.imp.strcoll
0x00013645      85c0           test eax, eax
0x00013647      74bf           je 0x13608
0x00013649      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/memcoll.c:58
0x0001364d      5b             pop rbx
0x0001364e      5d             pop rbp
0x0001364f      415c           pop r12
0x00013651      415d           pop r13
0x00013653      415e           pop r14
0x00013655      415f           pop r15
0x00013657      c3             ret
0x00013658      0f1f84000000.  nop dword [rax + rax]
0x00013660      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/memcoll.c:52
0x00013662      4d85f6         test r14, r14
0x00013665      0f95c0         setne al
0x00013668      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/memcoll.c:58
0x0001366c      5b             pop rbx
0x0001366d      f7d8           neg eax                                 ; ../coreutils-8.31/lib/memcoll.c:52
0x0001366f      5d             pop rbp                                 ; ../coreutils-8.31/lib/memcoll.c:58
0x00013670      415c           pop r12
0x00013672      415d           pop r13
0x00013674      415e           pop r14
0x00013676      415f           pop r15
0x00013678      c3             ret
0x00013679      0f1f80000000.  nop dword [rax]
0x00013680      4883c408       add rsp, 8
0x00013684      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/memcoll.c:54
0x00013689      5b             pop rbx                                 ; ../coreutils-8.31/lib/memcoll.c:58
0x0001368a      5d             pop rbp
0x0001368b      415c           pop r12
0x0001368d      415d           pop r13
0x0001368f      415e           pop r14
0x00013691      415f           pop r15
0x00013693      c3             ret
0x00013694      6690           nop
0x00013696      662e0f1f8400.  nop word cs:[rax + rax]
;-- memcoll:
0x000136a0      4157           push r15                                ; ../coreutils-8.31/lib/memcoll.c:67
0x000136a2      4156           push r14
0x000136a4      4989d7         mov r15, rdx
0x000136a7      4155           push r13
0x000136a9      4154           push r12
0x000136ab      4989fe         mov r14, rdi
0x000136ae      55             push rbp
0x000136af      53             push rbx
0x000136b0      4889cd         mov rbp, rcx
0x000136b3      4889f3         mov rbx, rsi
0x000136b6      4883ec18       sub rsp, 0x18
0x000136ba      4839ce         cmp rsi, rcx                            ; ../coreutils-8.31/lib/memcoll.c:74
0x000136bd      7513           jne 0x136d2
0x000136bf      4889f2         mov rdx, rsi
0x000136c2      4c89fe         mov rsi, r15
0x000136c5      e826f7feff     call sym.imp.memcmp
0x000136ca      85c0           test eax, eax
0x000136cc      89442408       mov dword [rsp + 8], eax
0x000136d0      7466           je 0x13738
0x000136d2      4d8d2c1e       lea r13, [r14 + rbx]                    ; ../coreutils-8.31/lib/memcoll.c:81
0x000136d6      4d8d242f       lea r12, [r15 + rbp]                    ; ../coreutils-8.31/lib/memcoll.c:82
0x000136da      488d4d01       lea rcx, [rbp + 1]                      ; ../coreutils-8.31/lib/memcoll.c:87
0x000136de      488d7301       lea rsi, [rbx + 1]
0x000136e2      4c89fa         mov rdx, r15
0x000136e5      4c89f7         mov rdi, r14
0x000136e8      450fb64d00     movzx r9d, byte [r13]                   ; ../coreutils-8.31/lib/memcoll.c:81
0x000136ed      450fb60424     movzx r8d, byte [r12]                   ; ../coreutils-8.31/lib/memcoll.c:82
0x000136f2      41c6450000     mov byte [r13], 0                       ; ../coreutils-8.31/lib/memcoll.c:84
0x000136f7      41c6042400     mov byte [r12], 0                       ; ../coreutils-8.31/lib/memcoll.c:85
0x000136fc      44884c240f     mov byte [rsp + 0xf], r9b               ; ../coreutils-8.31/lib/memcoll.c:81
0x00013701      4488442408     mov byte [rsp + 8], r8b                 ; ../coreutils-8.31/lib/memcoll.c:82
0x00013706      e8d5feffff     call sym.strcoll_loop                   ; ../coreutils-8.31/lib/memcoll.c:87
0x0001370b      440fb64c240f   movzx r9d, byte [rsp + 0xf]             ; ../coreutils-8.31/lib/memcoll.c:89
0x00013711      440fb6442408   movzx r8d, byte [rsp + 8]               ; ../coreutils-8.31/lib/memcoll.c:90
0x00013717      89c2           mov edx, eax                            ; ../coreutils-8.31/lib/memcoll.c:87
0x00013719      45884d00       mov byte [r13], r9b                     ; ../coreutils-8.31/lib/memcoll.c:89
0x0001371d      45880424       mov byte [r12], r8b                     ; ../coreutils-8.31/lib/memcoll.c:90
0x00013721      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/memcoll.c:94
0x00013725      89d0           mov eax, edx
0x00013727      5b             pop rbx
0x00013728      5d             pop rbp
0x00013729      415c           pop r12
0x0001372b      415d           pop r13
0x0001372d      415e           pop r14
0x0001372f      415f           pop r15
0x00013731      c3             ret
0x00013732      660f1f440000   nop word [rax + rax]
0x00013738      e8d3f3feff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/memcoll.c:76
0x0001373d      8b542408       mov edx, dword [rsp + 8]                ; ../coreutils-8.31/lib/memcoll.c:77
0x00013741      c70000000000   mov dword [rax], 0                      ; ../coreutils-8.31/lib/memcoll.c:76
0x00013747      ebd8           jmp 0x13721                             ; ../coreutils-8.31/lib/memcoll.c:77
0x00013749      0f1f80000000.  nop dword [rax]
;-- memcoll0:
0x00013750      4154           push r12                                ; ../coreutils-8.31/lib/memcoll.c:103
0x00013752      55             push rbp
0x00013753      4989d4         mov r12, rdx
0x00013756      53             push rbx
0x00013757      4889fd         mov rbp, rdi
0x0001375a      4889f3         mov rbx, rsi
0x0001375d      4883ec10       sub rsp, 0x10
0x00013761      4839ce         cmp rsi, rcx                            ; ../coreutils-8.31/lib/memcoll.c:104
0x00013764      7519           jne 0x1377f
0x00013766      4889f2         mov rdx, rsi
0x00013769      4c89e6         mov rsi, r12
0x0001376c      48894c2408     mov qword [rsp + 8], rcx
0x00013771      e87af6feff     call sym.imp.memcmp
0x00013776      85c0           test eax, eax
0x00013778      488b4c2408     mov rcx, qword [rsp + 8]
0x0001377d      7419           je 0x13798
0x0001377f      4883c410       add rsp, 0x10                           ; ../coreutils-8.31/lib/memcoll.c:111
0x00013783      4c89e2         mov rdx, r12                            ; ../coreutils-8.31/lib/memcoll.c:110
0x00013786      4889de         mov rsi, rbx
0x00013789      4889ef         mov rdi, rbp
0x0001378c      5b             pop rbx                                 ; ../coreutils-8.31/lib/memcoll.c:111
0x0001378d      5d             pop rbp
0x0001378e      415c           pop r12
0x00013790      e94bfeffff     jmp sym.strcoll_loop                    ; ../coreutils-8.31/lib/memcoll.c:110
0x00013795      0f1f00         nop dword [rax]
0x00013798      e873f3feff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/memcoll.c:106
0x0001379d      c70000000000   mov dword [rax], 0
0x000137a3      4883c410       add rsp, 0x10                           ; ../coreutils-8.31/lib/memcoll.c:111
0x000137a7      31c0           xor eax, eax
0x000137a9      5b             pop rbx
0x000137aa      5d             pop rbp
0x000137ab      415c           pop r12
0x000137ad      c3             ret
0x000137ae      6690           nop
;-- dup_safer:
0x000137b0      ba03000000     mov edx, 3                              ; ../coreutils-8.31/lib/dup-safer.c:32
0x000137b5      31f6           xor esi, esi
0x000137b7      31c0           xor eax, eax
0x000137b9      e902f4ffff     jmp sym.rpl_fcntl
0x000137be      6690           nop                                     ; ../coreutils-8.31/lib/dup-safer.c:33
;-- __libc_csu_init:
0x000137c0      4157           push r15
0x000137c2      4156           push r14
0x000137c4      4989d7         mov r15, rdx
0x000137c7      4155           push r13
0x000137c9      4154           push r12
0x000137cb      4c8d259e5d20.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x219570 ; "P^"
0x000137d2      55             push rbp
0x000137d3      488d2d9e5d20.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x219578
0x000137da      53             push rbx
0x000137db      4189fd         mov r13d, edi
0x000137de      4989f6         mov r14, rsi
0x000137e1      4c29e5         sub rbp, r12
0x000137e4      4883ec08       sub rsp, 8
0x000137e8      48c1fd03       sar rbp, 3
0x000137ec      e897f2feff     call sym._init
0x000137f1      4885ed         test rbp, rbp
0x000137f4      7420           je 0x13816
0x000137f6      31db           xor ebx, ebx
0x000137f8      0f1f84000000.  nop dword [rax + rax]
0x00013800      4c89fa         mov rdx, r15
0x00013803      4c89f6         mov rsi, r14
0x00013806      4489ef         mov edi, r13d
0x00013809      41ff14dc       call qword [r12 + rbx*8]
0x0001380d      4883c301       add rbx, 1
0x00013811      4839dd         cmp rbp, rbx
0x00013814      75ea           jne 0x13800
0x00013816      4883c408       add rsp, 8
0x0001381a      5b             pop rbx
0x0001381b      5d             pop rbp
0x0001381c      415c           pop r12
0x0001381e      415d           pop r13
0x00013820      415e           pop r14
0x00013822      415f           pop r15
0x00013824      c3             ret
0x00013825      90             nop
0x00013826      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00013830      f3c3           ret
0x00013832      662e0f1f8400.  nop word cs:[rax + rax]
0x0001383c      0f1f4000       nop dword [rax]
;-- atexit:
0x00013840      488b15c16720.  mov rdx, qword [obj.__dso_handle]       ; [0x21a008:8]=0x21a008 obj.__dso_handle
0x00013847      31f6           xor esi, esi
0x00013849      e942f8feff     jmp sym.imp.__cxa_atexit
0x0001384e      0000           add byte [rax], al
