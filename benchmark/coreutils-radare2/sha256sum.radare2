;-- section..plt:
;-- .plt:
0x000015a0      ff356aa82000   push qword [0x0020be10]                 ; [12] -r-x section size 848 named .plt
0x000015a6      ff256ca82000   jmp qword [0x0020be18]                  ; [0x20be18:8]=0
0x000015ac      0f1f4000       nop dword [rax]
;-- imp.free:
0x000015b0      ff256aa82000   jmp qword [reloc.free]                  ; [0x20be20:8]=0x15b6
0x000015b6      6800000000     push 0
0x000015bb      e9e0ffffff     jmp sym..plt
;-- imp.abort:
0x000015c0      ff2562a82000   jmp qword [reloc.abort]                 ; [0x20be28:8]=0x15c6
0x000015c6      6801000000     push 1
0x000015cb      e9d0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x000015d0      ff255aa82000   jmp qword [reloc.__errno_location]      ; [0x20be30:8]=0x15d6
0x000015d6      6802000000     push 2
0x000015db      e9c0ffffff     jmp sym..plt
;-- imp.strncmp:
0x000015e0      ff2552a82000   jmp qword [reloc.strncmp]               ; [0x20be38:8]=0x15e6
0x000015e6      6803000000     push 3
0x000015eb      e9b0ffffff     jmp sym..plt
;-- imp._exit:
0x000015f0      ff254aa82000   jmp qword [reloc._exit]                 ; [0x20be40:8]=0x15f6
0x000015f6      6804000000     push 4
0x000015fb      e9a0ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001600      ff2542a82000   jmp qword [reloc.__fpending]            ; [0x20be48:8]=0x1606
0x00001606      6805000000     push 5
0x0000160b      e990ffffff     jmp sym..plt
;-- imp.fcntl:
0x00001610      ff253aa82000   jmp qword [reloc.fcntl]                 ; [0x20be50:8]=0x1616
0x00001616      6806000000     push 6
0x0000161b      e980ffffff     jmp sym..plt
;-- imp.fread_unlocked:
0x00001620      ff2532a82000   jmp qword [reloc.fread_unlocked]        ; [0x20be58:8]=0x1626 ; "&\x16"
0x00001626      6807000000     push 7
0x0000162b      e970ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001630      ff252aa82000   jmp qword [reloc.textdomain]            ; [0x20be60:8]=0x1636 ; "6\x16"
0x00001636      6808000000     push 8
0x0000163b      e960ffffff     jmp sym..plt
;-- imp.fclose:
0x00001640      ff2522a82000   jmp qword [reloc.fclose]                ; [0x20be68:8]=0x1646 ; "F\x16"
0x00001646      6809000000     push 9
0x0000164b      e950ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001650      ff251aa82000   jmp qword [reloc.bindtextdomain]        ; [0x20be70:8]=0x1656 ; "V\x16"
0x00001656      680a000000     push 0xa
0x0000165b      e940ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001660      ff2512a82000   jmp qword [reloc.dcgettext]             ; [0x20be78:8]=0x1666 ; "f\x16"
0x00001666      680b000000     push 0xb
0x0000166b      e930ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001670      ff250aa82000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x20be80:8]=0x1676 ; "v\x16"
0x00001676      680c000000     push 0xc
0x0000167b      e920ffffff     jmp sym..plt
;-- imp.strlen:
0x00001680      ff2502a82000   jmp qword [reloc.strlen]                ; [0x20be88:8]=0x1686
0x00001686      680d000000     push 0xd
0x0000168b      e910ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001690      ff25faa72000   jmp qword [reloc.__stack_chk_fail]      ; [0x20be90:8]=0x1696
0x00001696      680e000000     push 0xe
0x0000169b      e900ffffff     jmp sym..plt
;-- imp.getopt_long:
0x000016a0      ff25f2a72000   jmp qword [reloc.getopt_long]           ; [0x20be98:8]=0x16a6
0x000016a6      680f000000     push 0xf
0x000016ab      e9f0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x000016b0      ff25eaa72000   jmp qword [reloc.mbrtowc]               ; [0x20bea0:8]=0x16b6
0x000016b6      6810000000     push 0x10
0x000016bb      e9e0feffff     jmp sym..plt
;-- imp.strchr:
0x000016c0      ff25e2a72000   jmp qword [reloc.strchr]                ; [0x20bea8:8]=0x16c6
0x000016c6      6811000000     push 0x11
0x000016cb      e9d0feffff     jmp sym..plt
;-- imp.__overflow:
0x000016d0      ff25daa72000   jmp qword [reloc.__overflow]            ; [0x20beb0:8]=0x16d6
0x000016d6      6812000000     push 0x12
0x000016db      e9c0feffff     jmp sym..plt
;-- imp.strrchr:
0x000016e0      ff25d2a72000   jmp qword [reloc.strrchr]               ; [0x20beb8:8]=0x16e6
0x000016e6      6813000000     push 0x13
0x000016eb      e9b0feffff     jmp sym..plt
;-- imp.lseek:
0x000016f0      ff25caa72000   jmp qword [reloc.lseek]                 ; [0x20bec0:8]=0x16f6
0x000016f6      6814000000     push 0x14
0x000016fb      e9a0feffff     jmp sym..plt
;-- imp.memset:
0x00001700      ff25c2a72000   jmp qword [reloc.memset]                ; [0x20bec8:8]=0x1706
0x00001706      6815000000     push 0x15
0x0000170b      e990feffff     jmp sym..plt
;-- imp.close:
0x00001710      ff25baa72000   jmp qword [reloc.close]                 ; [0x20bed0:8]=0x1716
0x00001716      6816000000     push 0x16
0x0000171b      e980feffff     jmp sym..plt
;-- imp.posix_fadvise:
0x00001720      ff25b2a72000   jmp qword [reloc.posix_fadvise]         ; [0x20bed8:8]=0x1726 ; "&\x17"
0x00001726      6817000000     push 0x17
0x0000172b      e970feffff     jmp sym..plt
;-- imp.memcmp:
0x00001730      ff25aaa72000   jmp qword [reloc.memcmp]                ; [0x20bee0:8]=0x1736 ; "6\x17"
0x00001736      6818000000     push 0x18
0x0000173b      e960feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001740      ff25a2a72000   jmp qword [reloc.fputs_unlocked]        ; [0x20bee8:8]=0x1746 ; "F\x17"
0x00001746      6819000000     push 0x19
0x0000174b      e950feffff     jmp sym..plt
;-- imp.calloc:
0x00001750      ff259aa72000   jmp qword [reloc.calloc]                ; [0x20bef0:8]=0x1756 ; "V\x17"
0x00001756      681a000000     push 0x1a
0x0000175b      e940feffff     jmp sym..plt
;-- imp.__getdelim:
0x00001760      ff2592a72000   jmp qword [reloc.__getdelim]            ; [0x20bef8:8]=0x1766 ; "f\x17"
0x00001766      681b000000     push 0x1b
0x0000176b      e930feffff     jmp sym..plt
;-- imp.memcpy:
0x00001770      ff258aa72000   jmp qword [reloc.memcpy]                ; [0x20bf00:8]=0x1776 ; "v\x17"
0x00001776      681c000000     push 0x1c
0x0000177b      e920feffff     jmp sym..plt
;-- imp.fileno:
0x00001780      ff2582a72000   jmp qword [reloc.fileno]                ; [0x20bf08:8]=0x1786
0x00001786      681d000000     push 0x1d
0x0000178b      e910feffff     jmp sym..plt
;-- imp.malloc:
0x00001790      ff257aa72000   jmp qword [reloc.malloc]                ; [0x20bf10:8]=0x1796
0x00001796      681e000000     push 0x1e
0x0000179b      e900feffff     jmp sym..plt
;-- imp.fflush:
0x000017a0      ff2572a72000   jmp qword [reloc.fflush]                ; [0x20bf18:8]=0x17a6
0x000017a6      681f000000     push 0x1f
0x000017ab      e9f0fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x000017b0      ff256aa72000   jmp qword [reloc.nl_langinfo]           ; [0x20bf20:8]=0x17b6
0x000017b6      6820000000     push 0x20                               ; "@"
0x000017bb      e9e0fdffff     jmp sym..plt
;-- imp.__freading:
0x000017c0      ff2562a72000   jmp qword [reloc.__freading]            ; [0x20bf28:8]=0x17c6
0x000017c6      6821000000     push 0x21                               ; '!'
0x000017cb      e9d0fdffff     jmp sym..plt
;-- imp.fwrite_unlocked:
0x000017d0      ff255aa72000   jmp qword [reloc.fwrite_unlocked]       ; [0x20bf30:8]=0x17d6
0x000017d6      6822000000     push 0x22                               ; '"'
0x000017db      e9c0fdffff     jmp sym..plt
;-- imp.realloc:
0x000017e0      ff2552a72000   jmp qword [reloc.realloc]               ; [0x20bf38:8]=0x17e6
0x000017e6      6823000000     push 0x23                               ; '#'
0x000017eb      e9b0fdffff     jmp sym..plt
;-- imp.fdopen:
0x000017f0      ff254aa72000   jmp qword [reloc.fdopen]                ; [0x20bf40:8]=0x17f6
0x000017f6      6824000000     push 0x24                               ; '$'
0x000017fb      e9a0fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001800      ff2542a72000   jmp qword [reloc.setlocale]             ; [0x20bf48:8]=0x1806
0x00001806      6825000000     push 0x25                               ; '%'
0x0000180b      e990fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001810      ff253aa72000   jmp qword [reloc.__printf_chk]          ; [0x20bf50:8]=0x1816
0x00001816      6826000000     push 0x26                               ; '&'
0x0000181b      e980fdffff     jmp sym..plt
;-- imp.setvbuf:
0x00001820      ff2532a72000   jmp qword [reloc.setvbuf]               ; [0x20bf58:8]=0x1826 ; "&\x18"
0x00001826      6827000000     push 0x27                               ; '''
0x0000182b      e970fdffff     jmp sym..plt
;-- imp.error:
0x00001830      ff252aa72000   jmp qword [reloc.error]                 ; [0x20bf60:8]=0x1836 ; "6\x18"
0x00001836      6828000000     push 0x28                               ; '('
0x0000183b      e960fdffff     jmp sym..plt
;-- imp.fseeko:
0x00001840      ff2522a72000   jmp qword [reloc.fseeko]                ; [0x20bf68:8]=0x1846 ; "F\x18"
0x00001846      6829000000     push 0x29                               ; ')'
0x0000184b      e950fdffff     jmp sym..plt
;-- imp.fopen:
0x00001850      ff251aa72000   jmp qword [reloc.fopen]                 ; [0x20bf70:8]=0x1856 ; "V\x18"
0x00001856      682a000000     push 0x2a                               ; '*'
0x0000185b      e940fdffff     jmp sym..plt
;-- imp.dcngettext:
0x00001860      ff2512a72000   jmp qword [reloc.dcngettext]            ; [0x20bf78:8]=0x1866 ; "f\x18"
0x00001866      682b000000     push 0x2b                               ; '+'
0x0000186b      e930fdffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001870      ff250aa72000   jmp qword [reloc.__cxa_atexit]          ; [0x20bf80:8]=0x1876 ; "v\x18"
0x00001876      682c000000     push 0x2c                               ; ','
0x0000187b      e920fdffff     jmp sym..plt
;-- imp.exit:
0x00001880      ff2502a72000   jmp qword [reloc.exit]                  ; [0x20bf88:8]=0x1886
0x00001886      682d000000     push 0x2d                               ; '-'
0x0000188b      e910fdffff     jmp sym..plt
;-- imp.fwrite:
0x00001890      ff25faa62000   jmp qword [reloc.fwrite]                ; [0x20bf90:8]=0x1896
0x00001896      682e000000     push 0x2e                               ; '.'
0x0000189b      e900fdffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x000018a0      ff25f2a62000   jmp qword [reloc.__fprintf_chk]         ; [0x20bf98:8]=0x18a6
0x000018a6      682f000000     push 0x2f                               ; '/'
0x000018ab      e9f0fcffff     jmp sym..plt
;-- imp.mbsinit:
0x000018b0      ff25eaa62000   jmp qword [reloc.mbsinit]               ; [0x20bfa0:8]=0x18b6
0x000018b6      6830000000     push 0x30                               ; '0'
0x000018bb      e9e0fcffff     jmp sym..plt
;-- imp.iswprint:
0x000018c0      ff25e2a62000   jmp qword [reloc.iswprint]              ; [0x20bfa8:8]=0x18c6
0x000018c6      6831000000     push 0x31                               ; '1'
0x000018cb      e9d0fcffff     jmp sym..plt
;-- imp.__ctype_tolower_loc:
0x000018d0      ff25daa62000   jmp qword [reloc.__ctype_tolower_loc]   ; [0x20bfb0:8]=0x18d6
0x000018d6      6832000000     push 0x32                               ; '2'
0x000018db      e9c0fcffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x000018e0      ff25d2a62000   jmp qword [reloc.__ctype_b_loc]         ; [0x20bfb8:8]=0x18e6
0x000018e6      6833000000     push 0x33                               ; '3'
0x000018eb      e9b0fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x000018f0      .qword 0x90660020a6ea25ff                              ; [13] -r-x section size 8 named .plt.got
0x000018f8      0000           add byte [rax], al
0x000018fa      0000           add byte [rax], al
0x000018fc      0000           add byte [rax], al
0x000018fe      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001900      4157           push r15                                ; [14] -r-x section size 30862 named .text
0x00001902      4156           push r14
0x00001904      4155           push r13
0x00001906      4154           push r12
0x00001908      4189fc         mov r12d, edi
0x0000190b      55             push rbp
0x0000190c      53             push rbx
0x0000190d      4889f3         mov rbx, rsi
0x00001910      bdffffffff     mov ebp, 0xffffffff                     ; -1
0x00001915      4881ec080100.  sub rsp, 0x108
0x0000191c      488b3e         mov rdi, qword [rsi]
0x0000191f      64488b042528.  mov rax, qword fs:[0x28]
0x00001928      48898424f800.  mov qword [rsp + 0xf8], rax
0x00001930      31c0           xor eax, eax
0x00001932      e8894c0000     call sym.set_program_name
0x00001937      488d35038a00.  lea rsi, [0x0000a341]
0x0000193e      bf06000000     mov edi, 6
0x00001943      e8b8feffff     call sym.imp.setlocale
0x00001948      488d35107900.  lea rsi, str.usr_local_share_locale     ; 0x925f ; "/usr/local/share/locale"
0x0000194f      488d3de07800.  lea rdi, [0x00009236]                   ; "coreutils"
0x00001956      e8f5fcffff     call sym.imp.bindtextdomain
0x0000195b      488d3dd47800.  lea rdi, [0x00009236]                   ; "coreutils"
0x00001962      e8c9fcffff     call sym.imp.textdomain
0x00001967      488d3db21900.  lea rdi, sym.close_stdout               ; 0x3320 ; "USH\x83\xec\bH\x8b={\x8d "
0x0000196e      e80d780000     call sym.atexit
0x00001973      488b3d2ea720.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c0a8:8]=0
0x0000197a      31c9           xor ecx, ecx
0x0000197c      ba01000000     mov edx, 1
0x00001981      31f6           xor esi, esi
0x00001983      e898feffff     call sym.imp.setvbuf
0x00001988      c644247800     mov byte [rsp + 0x78], 0
0x0000198d      c644242b00     mov byte [rsp + 0x2b], 0
0x00001992      660f1f440000   nop word [rax + rax]
0x00001998      488d0d81a020.  lea rcx, obj.long_options               ; 0x20ba20 ; "$\x93"
0x0000199f      488d15fa7800.  lea rdx, str.bctwz                      ; 0x92a0 ; "bctwz"
0x000019a6      4531c0         xor r8d, r8d
0x000019a9      4889de         mov rsi, rbx
0x000019ac      4489e7         mov edi, r12d
0x000019af      e8ecfcffff     call sym.imp.getopt_long
0x000019b4      83f8ff         cmp eax, 0xffffffff
0x000019b7      0f847f010000   je 0x1b3c
0x000019bd      83f877         cmp eax, 0x77
0x000019c0      0f84da000000   je 0x1aa0
0x000019c6      7e38           jle 0x1a00
0x000019c8      3d81000000     cmp eax, 0x81
0x000019cd      0f841d010000   je 0x1af0
0x000019d3      7e53           jle 0x1a28
0x000019d5      3d83000000     cmp eax, 0x83
0x000019da      0f8400010000   je 0x1ae0
0x000019e0      0f8cda000000   jl 0x1ac0
0x000019e6      3d84000000     cmp eax, 0x84
0x000019eb      0f85df010000   jne 0x1bd0
0x000019f1      c644247801     mov byte [rsp + 0x78], 1
0x000019f6      bd01000000     mov ebp, 1
0x000019fb      eb9b           jmp 0x1998
0x000019fd      0f1f00         nop dword [rax]
0x00001a00      83f862         cmp eax, 0x62
0x00001a03      0f8417010000   je 0x1b20
0x00001a09      7e45           jle 0x1a50
0x00001a0b      83f863         cmp eax, 0x63
0x00001a0e      0f84fc000000   je 0x1b10
0x00001a14      83f874         cmp eax, 0x74
0x00001a17      0f85b3010000   jne 0x1bd0
0x00001a1d      31ed           xor ebp, ebp
0x00001a1f      e974ffffff     jmp 0x1998
0x00001a24      0f1f4000       nop dword [rax]
0x00001a28      83f87a         cmp eax, 0x7a
0x00001a2b      0f84ff000000   je 0x1b30
0x00001a31      83c080         add eax, 0xffffff80
0x00001a34      0f8596010000   jne 0x1bd0
0x00001a3a      c605b1a62000.  mov byte [obj.ignore_missing], 1        ; [0x20c0f2:1]=0
0x00001a41      e952ffffff     jmp 0x1998
0x00001a46      662e0f1f8400.  nop word cs:[rax + rax]
0x00001a50      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00001a55      0f85760f0000   jne 0x29d1
0x00001a5b      488d05317800.  lea rax, str.David_Madore               ; 0x9293 ; "David Madore"
0x00001a62      488b3d3fa620.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c0a8:8]=0
0x00001a69      488b0da8a520.  mov rcx, qword [obj.Version]            ; [0x20c018:8]=0x9d60 ; "`\x9d"
0x00001a70      6a00           push 0
0x00001a72      4c8d0dfe7700.  lea r9, str.Scott_Miller                ; 0x9277 ; "Scott Miller"
0x00001a79      4c8d05047800.  lea r8, str.Ulrich_Drepper              ; 0x9284 ; "Ulrich Drepper"
0x00001a80      50             push rax
0x00001a81      488d15aa7700.  lea rdx, str.GNU_coreutils              ; 0x9232 ; "GNU coreutils"
0x00001a88      488d351b7700.  lea rsi, str.sha256sum                  ; 0x91aa ; "sha256sum"
0x00001a8f      31c0           xor eax, eax
0x00001a91      e82a6d0000     call sym.version_etc
0x00001a96      31ff           xor edi, edi
0x00001a98      e8e3fdffff     call sym.imp.exit
0x00001a9d      0f1f00         nop dword [rax]
0x00001aa0      c6054da62000.  mov byte [obj.status_only], 0           ; [0x20c0f4:1]=0
0x00001aa7      c60545a62000.  mov byte [obj.warn], 1                  ; [0x20c0f3:1]=0
0x00001aae      c6053ca62000.  mov byte [obj.quiet], 0                 ; [0x20c0f1:1]=0
0x00001ab5      e9defeffff     jmp 0x1998
0x00001aba      660f1f440000   nop word [rax + rax]
0x00001ac0      c6052da62000.  mov byte [obj.status_only], 0           ; [0x20c0f4:1]=0
0x00001ac7      c60525a62000.  mov byte [obj.warn], 0                  ; [0x20c0f3:1]=0
0x00001ace      c6051ca62000.  mov byte [obj.quiet], 1                 ; [0x20c0f1:1]=0
0x00001ad5      e9befeffff     jmp 0x1998
0x00001ada      660f1f440000   nop word [rax + rax]
0x00001ae0      c60509a62000.  mov byte [obj.strict], 1                ; [0x20c0f0:1]=0
0x00001ae7      e9acfeffff     jmp 0x1998
0x00001aec      0f1f4000       nop dword [rax]
0x00001af0      c605fda52000.  mov byte [obj.status_only], 1           ; [0x20c0f4:1]=0
0x00001af7      c605f5a52000.  mov byte [obj.warn], 0                  ; [0x20c0f3:1]=0
0x00001afe      c605eca52000.  mov byte [obj.quiet], 0                 ; [0x20c0f1:1]=0
0x00001b05      e98efeffff     jmp 0x1998
0x00001b0a      660f1f440000   nop word [rax + rax]
0x00001b10      c644242b01     mov byte [rsp + 0x2b], 1
0x00001b15      e97efeffff     jmp 0x1998
0x00001b1a      660f1f440000   nop word [rax + rax]
0x00001b20      bd01000000     mov ebp, 1
0x00001b25      e96efeffff     jmp 0x1998
0x00001b2a      660f1f440000   nop word [rax + rax]
0x00001b30      c605d9a42000.  mov byte [obj.delim], 0                 ; [0x20c010:1]=10 ; "\n"
0x00001b37      e95cfeffff     jmp 0x1998
0x00001b3c      85ed           test ebp, ebp
0x00001b3e      48c705b7a520.  mov qword [obj.min_digest_line_length], 0x42 ; 'B'
                                                                       ; [0x20c100:8]=0
0x00001b49      48c705a4a520.  mov qword [obj.digest_hex_bytes], 0x40  ; [0x20c0f8:8]=0
0x00001b54      0f94c0         sete al
0x00001b57      84442478       test byte [rsp + 0x78], al
0x00001b5b      0f85ba0e0000   jne 0x2a1b
0x00001b61      803da8a42000.  cmp byte [obj.delim], 0xa               ; [0x20c010:1]=10 ; "\n"
0x00001b68      7470           je 0x1bda
0x00001b6a      807c242b00     cmp byte [rsp + 0x2b], 0
0x00001b6f      ba05000000     mov edx, 5
0x00001b74      488d352d7e00.  lea rsi, str.the___zero_option_is_not_supported_when_verifying_checksums ; 0x99a8 ; "the --zero option is not supported when verifying checksums"
0x00001b7b      753e           jne 0x1bbb
0x00001b7d      803d6ea52000.  cmp byte [obj.ignore_missing], 0        ; [0x20c0f2:1]=0
0x00001b84      0f85a20e0000   jne 0x2a2c
0x00001b8a      803d63a52000.  cmp byte [obj.status_only], 0           ; [0x20c0f4:1]=0
0x00001b91      0f85690e0000   jne 0x2a00
0x00001b97      803d55a52000.  cmp byte [obj.warn], 0                  ; [0x20c0f3:1]=0
0x00001b9e      0f8401030000   je 0x1ea5
0x00001ba4      807c242b00     cmp byte [rsp + 0x2b], 0
0x00001ba9      ba05000000     mov edx, 5
0x00001bae      488d354b7f00.  lea rsi, str.the___warn_option_is_meaningful_only_when_verifying_checksums ; 0x9b00 ; "the --warn option is meaningful only when verifying checksums"
0x00001bb5      0f8582000000   jne 0x1c3d
0x00001bbb      31ff           xor edi, edi
0x00001bbd      e89efaffff     call sym.imp.dcgettext
0x00001bc2      31f6           xor esi, esi
0x00001bc4      4889c2         mov rdx, rax
0x00001bc7      31ff           xor edi, edi
0x00001bc9      31c0           xor eax, eax
0x00001bcb      e860fcffff     call sym.imp.error
0x00001bd0      bf01000000     mov edi, 1
0x00001bd5      e8c6120000     call sym.usage
0x00001bda      807c242b00     cmp byte [rsp + 0x2b], 0
0x00001bdf      7413           je 0x1bf4
0x00001be1      807c247800     cmp byte [rsp + 0x78], 0
0x00001be6      ba05000000     mov edx, 5
0x00001beb      488d35f67d00.  lea rsi, str.the___tag_option_is_meaningless_when_verifying_checksums ; 0x99e8 ; "the --tag option is meaningless when verifying checksums"
0x00001bf2      75c7           jne 0x1bbb
0x00001bf4      85ed           test ebp, ebp
0x00001bf6      7813           js 0x1c0b
0x00001bf8      807c242b00     cmp byte [rsp + 0x2b], 0
0x00001bfd      ba05000000     mov edx, 5
0x00001c02      488d351f7e00.  lea rsi, str.the___binary_and___text_options_are_meaningless_when_verifying_checksums ; 0x9a28 ; "the --binary and --text options are meaningless when verifying checksums"
0x00001c09      75b0           jne 0x1bbb
0x00001c0b      803de0a42000.  cmp byte [obj.ignore_missing], 0        ; [0x20c0f2:1]=0
0x00001c12      0f84d00d0000   je 0x29e8
0x00001c18      807c242b00     cmp byte [rsp + 0x2b], 0
0x00001c1d      0f84090e0000   je 0x2a2c
0x00001c23      803dcaa42000.  cmp byte [obj.status_only], 0           ; [0x20c0f4:1]=0
0x00001c2a      0f847d090000   je 0x25ad
0x00001c30      803dbca42000.  cmp byte [obj.warn], 0                  ; [0x20c0f3:1]=0
0x00001c37      0f8468020000   je 0x1ea5
0x00001c3d      83fdff         cmp ebp, 0xffffffff
0x00001c40      7502           jne 0x1c44
0x00001c42      31ed           xor ebp, ebp
0x00001c44      4963c4         movsxd rax, r12d
0x00001c47      488d04c3       lea rax, [rbx + rax*8]
0x00001c4b      4889442448     mov qword [rsp + 0x48], rax
0x00001c50      48630561a420.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20c0b8:4]=0
0x00001c57      4439e0         cmp eax, r12d
0x00001c5a      7519           jne 0x1c75
0x00001c5c      488b7c2448     mov rdi, qword [rsp + 0x48]
0x00001c61      488d359a8100.  lea rsi, [0x00009e02]                   ; "-"
0x00001c68      4883c708       add rdi, 8
0x00001c6c      488977f8       mov qword [rdi - 8], rsi
0x00001c70      48897c2448     mov qword [rsp + 0x48], rdi
0x00001c75      488d04c3       lea rax, [rbx + rax*8]
0x00001c79      4839442448     cmp qword [rsp + 0x48], rax
0x00001c7e      4889442418     mov qword [rsp + 0x18], rax
0x00001c83      0f86ab0c0000   jbe 0x2934
0x00001c89      83fd01         cmp ebp, 1
0x00001c8c      4c8d35bd8000.  lea r14, obj.bin2hex.7155               ; 0x9d50 ; "0123456789abcdef8.31"
0x00001c93      c644247901     mov byte [rsp + 0x79], 1
0x00001c98      19c0           sbb eax, eax
0x00001c9a      83e0f6         and eax, 0xfffffff6                     ; 4294967286
0x00001c9d      83c02a         add eax, 0x2a
0x00001ca0      8944247c       mov dword [rsp + 0x7c], eax
0x00001ca4      8844247b       mov byte [rsp + 0x7b], al
0x00001ca8      0f1f84000000.  nop dword [rax + rax]
0x00001cb0      488b442418     mov rax, qword [rsp + 0x18]
0x00001cb5      807c242b00     cmp byte [rsp + 0x2b], 0
0x00001cba      488b30         mov rsi, qword [rax]
0x00001cbd      4889742420     mov qword [rsp + 0x20], rsi
0x00001cc2      0f8478060000   je 0x2340
0x00001cc8      488d3d338100.  lea rdi, [0x00009e02]                   ; "-"
0x00001ccf      b902000000     mov ecx, 2
0x00001cd4      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001cd6      0f97c0         seta al
0x00001cd9      1c00           sbb al, 0
0x00001cdb      0fbec0         movsx eax, al
0x00001cde      85c0           test eax, eax
0x00001ce0      8944242c       mov dword [rsp + 0x2c], eax
0x00001ce4      0f852b070000   jne 0x2415
0x00001cea      488d35b57500.  lea rsi, str.standard_input             ; 0x92a6 ; "standard input"
0x00001cf1      ba05000000     mov edx, 5
0x00001cf6      31ff           xor edi, edi
0x00001cf8      c60509a42000.  mov byte [obj.have_read_stdin], 1       ; [0x20c108:1]=0
0x00001cff      e85cf9ffff     call sym.imp.dcgettext
0x00001d04      4c8b25a5a320.  mov r12, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20c0b0:8]=0
0x00001d0b      4889442420     mov qword [rsp + 0x20], rax
0x00001d10      488d84249800.  lea rax, [rsp + 0x98]
0x00001d18      48c784249000.  mov qword [rsp + 0x90], 0
0x00001d24      48c784249800.  mov qword [rsp + 0x98], 0
0x00001d30      c644247a00     mov byte [rsp + 0x7a], 0
0x00001d35      c644243000     mov byte [rsp + 0x30], 0
0x00001d3a      4531ed         xor r13d, r13d
0x00001d3d      4889442410     mov qword [rsp + 0x10], rax
0x00001d42      488d84249000.  lea rax, [rsp + 0x90]
0x00001d4a      48c744245800.  mov qword [rsp + 0x58], 0
0x00001d53      48c744245000.  mov qword [rsp + 0x50], 0
0x00001d5c      bd01000000     mov ebp, 1
0x00001d61      4889442408     mov qword [rsp + 8], rax
0x00001d66      488d84248f00.  lea rax, [rsp + 0x8f]
0x00001d6e      4889442440     mov qword [rsp + 0x40], rax
0x00001d73      488d8424d000.  lea rax, [rsp + 0xd0]
0x00001d7b      4889442438     mov qword [rsp + 0x38], rax
0x00001d80      488b742410     mov rsi, qword [rsp + 0x10]
0x00001d85      488b7c2408     mov rdi, qword [rsp + 8]
0x00001d8a      4c89e1         mov rcx, r12
0x00001d8d      ba0a000000     mov edx, 0xa
0x00001d92      e8c9f9ffff     call sym.imp.__getdelim
0x00001d97      4885c0         test rax, rax
0x00001d9a      0f8efc020000   jle 0x209c
0x00001da0      488b9c249000.  mov rbx, qword [rsp + 0x90]
0x00001da8      0fb60b         movzx ecx, byte [rbx]
0x00001dab      80f923         cmp cl, 0x23
0x00001dae      0f84a1000000   je 0x1e55
0x00001db4      807c03ff0a     cmp byte [rbx + rax - 1], 0xa
0x00001db9      4989c7         mov r15, rax
0x00001dbc      7514           jne 0x1dd2
0x00001dbe      4983ef01       sub r15, 1
0x00001dc2      42c6043b00     mov byte [rbx + r15], 0
0x00001dc7      488b9c249000.  mov rbx, qword [rsp + 0x90]
0x00001dcf      0fb60b         movzx ecx, byte [rbx]
0x00001dd2      80f909         cmp cl, 9
0x00001dd5      7407           je 0x1dde
0x00001dd7      31d2           xor edx, edx
0x00001dd9      80f920         cmp cl, 0x20                            ; "@"
0x00001ddc      7514           jne 0x1df2
0x00001dde      31d2           xor edx, edx
0x00001de0      4883c201       add rdx, 1
0x00001de4      0fb60c13       movzx ecx, byte [rbx + rdx]
0x00001de8      80f920         cmp cl, 0x20                            ; "@"
0x00001deb      74f3           je 0x1de0
0x00001ded      80f909         cmp cl, 9
0x00001df0      74ee           je 0x1de0
0x00001df2      4531c9         xor r9d, r9d
0x00001df5      80f95c         cmp cl, 0x5c
0x00001df8      750a           jne 0x1e04
0x00001dfa      440fb64c242b   movzx r9d, byte [rsp + 0x2b]
0x00001e00      4883c201       add rdx, 1
0x00001e04      4c8d0413       lea r8, [rbx + rdx]
0x00001e08      488d3da57300.  lea rdi, str.SHA256                     ; 0x91b4 ; "SHA256"
0x00001e0f      b906000000     mov ecx, 6
0x00001e14      4c89c6         mov rsi, r8
0x00001e17      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001e19      0f97c0         seta al
0x00001e1c      1c00           sbb al, 0
0x00001e1e      84c0           test al, al
0x00001e20      0f85ca000000   jne 0x1ef0
0x00001e26      0fb6441306     movzx eax, byte [rbx + rdx + 6]
0x00001e2b      488d4a06       lea rcx, [rdx + 6]
0x00001e2f      3c20           cmp al, 0x20                            ; "@"
0x00001e31      7509           jne 0x1e3c
0x00001e33      0fb6441307     movzx eax, byte [rbx + rdx + 7]
0x00001e38      488d4a07       lea rcx, [rdx + 7]
0x00001e3c      3c28           cmp al, 0x28
0x00001e3e      0f8480050000   je 0x23c4
0x00001e44      4983c501       add r13, 1
0x00001e48      803da4a22000.  cmp byte [obj.warn], 0                  ; [0x20c0f3:1]=0
0x00001e4f      0f857b030000   jne 0x21d0
0x00001e55      41f6042430     test byte [r12], 0x30
0x00001e5a      0f853c020000   jne 0x209c
0x00001e60      4883c501       add rbp, 1
0x00001e64      0f8516ffffff   jne 0x1d80
0x00001e6a      488b542420     mov rdx, qword [rsp + 0x20]
0x00001e6f      be03000000     mov esi, 3
0x00001e74      31ff           xor edi, edi
0x00001e76      e885620000     call sym.quotearg_n_style_colon
0x00001e7b      488d35337400.  lea rsi, str.s:_too_many_checksum_lines ; 0x92b5 ; "%s: too many checksum lines"
0x00001e82      4889c3         mov rbx, rax
0x00001e85      ba05000000     mov edx, 5
0x00001e8a      31ff           xor edi, edi
0x00001e8c      e8cff7ffff     call sym.imp.dcgettext
0x00001e91      4889d9         mov rcx, rbx
0x00001e94      4889c2         mov rdx, rax
0x00001e97      31f6           xor esi, esi
0x00001e99      bf01000000     mov edi, 1
0x00001e9e      31c0           xor eax, eax
0x00001ea0      e88bf9ffff     call sym.imp.error
0x00001ea5      803d45a22000.  cmp byte [obj.quiet], 1                 ; [0x20c0f1:1]=0
0x00001eac      7517           jne 0x1ec5
0x00001eae      807c242b00     cmp byte [rsp + 0x2b], 0
0x00001eb3      ba05000000     mov edx, 5
0x00001eb8      488d35817c00.  lea rsi, str.the___quiet_option_is_meaningful_only_when_verifying_checksums ; 0x9b40 ; "the --quiet option is meaningful only when verifying checksums"
0x00001ebf      0f84f6fcffff   je 0x1bbb
0x00001ec5      803d24a22000.  cmp byte [obj.strict], 0                ; [0x20c0f0:1]=0
0x00001ecc      0f846bfdffff   je 0x1c3d
0x00001ed2      807c242b00     cmp byte [rsp + 0x2b], 0
0x00001ed7      ba05000000     mov edx, 5
0x00001edc      488d359d7c00.  lea rsi, str.the___strict_option_is_meaningful_only_when_verifying_checksums ; 0x9b80 ; "the --strict option is meaningful only when verifying checksums"
0x00001ee3      0f8554fdffff   jne 0x1c3d
0x00001ee9      e9cdfcffff     jmp 0x1bbb
0x00001eee      6690           nop
0x00001ef0      4c89f9         mov rcx, r15
0x00001ef3      31c0           xor eax, eax
0x00001ef5      4829d1         sub rcx, rdx
0x00001ef8      4180385c       cmp byte [r8], 0x5c
0x00001efc      0f94c0         sete al
0x00001eff      480305faa120.  add rax, qword [obj.min_digest_line_length] ; [0x20c100:8]=0
0x00001f06      4839c1         cmp rcx, rax
0x00001f09      0f8235ffffff   jb 0x1e44
0x00001f0f      480315e2a120.  add rdx, qword [obj.digest_hex_bytes]   ; [0x20c0f8:8]=0
0x00001f16      488d0c13       lea rcx, [rbx + rdx]
0x00001f1a      0fb601         movzx eax, byte [rcx]
0x00001f1d      3c20           cmp al, 0x20                            ; "@"
0x00001f1f      7408           je 0x1f29
0x00001f21      3c09           cmp al, 9
0x00001f23      0f851bffffff   jne 0x1e44
0x00001f29      c60100         mov byte [rcx], 0
0x00001f2c      4c89c7         mov rdi, r8
0x00001f2f      4889542470     mov qword [rsp + 0x70], rdx
0x00001f34      44884c2468     mov byte [rsp + 0x68], r9b
0x00001f39      4c89442460     mov qword [rsp + 0x60], r8
0x00001f3e      e88d0c0000     call sym.hex_digits
0x00001f43      84c0           test al, al
0x00001f45      0f84f9feffff   je 0x1e44
0x00001f4b      488b542470     mov rdx, qword [rsp + 0x70]
0x00001f50      4c89f9         mov rcx, r15
0x00001f53      8b35bba02000   mov esi, dword [obj.bsd_reversed]       ; [0x20c014:4]=-1
0x00001f59      4c8b442460     mov r8, qword [rsp + 0x60]
0x00001f5e      440fb64c2468   movzx r9d, byte [rsp + 0x68]
0x00001f64      488d4201       lea rax, [rdx + 1]
0x00001f68      4829c1         sub rcx, rax
0x00001f6b      4883e901       sub rcx, 1
0x00001f6f      7417           je 0x1f88
0x00001f71      0fb64c1301     movzx ecx, byte [rbx + rdx + 1]
0x00001f76      80f920         cmp cl, 0x20                            ; "@"
0x00001f79      0f8465070000   je 0x26e4
0x00001f7f      80f92a         cmp cl, 0x2a
0x00001f82      0f845c070000   je 0x26e4
0x00001f88      85f6           test esi, esi
0x00001f8a      0f84b4feffff   je 0x1e44
0x00001f90      c7057aa02000.  mov dword [obj.bsd_reversed], 1         ; [0x20c014:4]=-1
0x00001f9a      4801c3         add rbx, rax
0x00001f9d      4584c9         test r9b, r9b
0x00001fa0      0f859b070000   jne 0x2741
0x00001fa6      8b44242c       mov eax, dword [rsp + 0x2c]
0x00001faa      85c0           test eax, eax
0x00001fac      751e           jne 0x1fcc
0x00001fae      488d3d4d7e00.  lea rdi, [0x00009e02]                   ; "-"
0x00001fb5      b902000000     mov ecx, 2
0x00001fba      4889de         mov rsi, rbx
0x00001fbd      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001fbf      0f97c0         seta al
0x00001fc2      1c00           sbb al, 0
0x00001fc4      84c0           test al, al
0x00001fc6      0f8478feffff   je 0x1e44
0x00001fcc      4531ff         xor r15d, r15d
0x00001fcf      803d1ea12000.  cmp byte [obj.status_only], 0           ; [0x20c0f4:1]=0
0x00001fd6      7521           jne 0x1ff9
0x00001fd8      be0a000000     mov esi, 0xa
0x00001fdd      4889df         mov rdi, rbx
0x00001fe0      4c89442430     mov qword [rsp + 0x30], r8
0x00001fe5      e8d6f6ffff     call sym.imp.strchr
0x00001fea      4c8b442430     mov r8, qword [rsp + 0x30]
0x00001fef      4531ff         xor r15d, r15d
0x00001ff2      4885c0         test rax, rax
0x00001ff5      410f95c7       setne r15b
0x00001ff9      488b542440     mov rdx, qword [rsp + 0x40]
0x00001ffe      488b742438     mov rsi, qword [rsp + 0x38]
0x00002003      4889df         mov rdi, rbx
0x00002006      4c89442430     mov qword [rsp + 0x30], r8
0x0000200b      e8f00c0000     call sym.digest_file.isra.1
0x00002010      84c0           test al, al
0x00002012      4189c1         mov r9d, eax
0x00002015      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000201a      0f8500020000   jne 0x2220
0x00002020      488344245001   add qword [rsp + 0x50], 1
0x00002026      803dc7a02000.  cmp byte [obj.status_only], 0           ; [0x20c0f4:1]=0
0x0000202d      7559           jne 0x2088
0x0000202f      4585ff         test r15d, r15d
0x00002032      7420           je 0x2054
0x00002034      488b3d6da020.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c0a8:8]=0
0x0000203b      488b4728       mov rax, qword [rdi + 0x28]
0x0000203f      483b4730       cmp rax, qword [rdi + 0x30]
0x00002043      0f831b090000   jae 0x2964
0x00002049      488d5001       lea rdx, [rax + 1]
0x0000204d      48895728       mov qword [rdi + 0x28], rdx
0x00002051      c6005c         mov byte [rax], 0x5c                    ; '\'
                                                                       ; [0x5c:1]=0
0x00002054      4489fe         mov esi, r15d
0x00002057      4889df         mov rdi, rbx
0x0000205a      e8d10b0000     call sym.print_filename
0x0000205f      488d356b7200.  lea rsi, str.FAILED_open_or_read        ; 0x92d1 ; "FAILED open or read"
0x00002066      ba05000000     mov edx, 5
0x0000206b      31ff           xor edi, edi
0x0000206d      e8eef5ffff     call sym.imp.dcgettext
0x00002072      488d35d88200.  lea rsi, [0x0000a351]                   ; ": %s\n"
0x00002079      4889c2         mov rdx, rax
0x0000207c      bf01000000     mov edi, 1
0x00002081      31c0           xor eax, eax
0x00002083      e888f7ffff     call sym.imp.__printf_chk
0x00002088      0fb644242b     movzx eax, byte [rsp + 0x2b]
0x0000208d      41f6042430     test byte [r12], 0x30
0x00002092      88442430       mov byte [rsp + 0x30], al
0x00002096      0f84c4fdffff   je 0x1e60
0x0000209c      488bbc249000.  mov rdi, qword [rsp + 0x90]
0x000020a4      e807f5ffff     call sym.imp.free
0x000020a9      418b1c24       mov ebx, dword [r12]
0x000020ad      83e320         and ebx, 0x20                           ; "@"
0x000020b0      0f85b8040000   jne 0x256e
0x000020b6      837c242c00     cmp dword [rsp + 0x2c], 0
0x000020bb      0f8567050000   jne 0x2628
0x000020c1      807c243000     cmp byte [rsp + 0x30], 0
0x000020c6      0f8479050000   je 0x2645
0x000020cc      803d21a02000.  cmp byte [obj.status_only], 0           ; [0x20c0f4:1]=0
0x000020d3      0f8585040000   jne 0x255e
0x000020d9      4d85ed         test r13, r13
0x000020dc      742f           je 0x210d
0x000020de      488d15437b00.  lea rdx, str.WARNING:__lu_lines_are_improperly_formatted ; 0x9c28 ; "WARNING: %lu lines are improperly formatted"
0x000020e5      488d356c7b00.  lea rsi, str.WARNING:__lu_line_is_improperly_formatted ; 0x9c58 ; "WARNING: %lu line is improperly formatted"
0x000020ec      4c89e9         mov rcx, r13
0x000020ef      31ff           xor edi, edi
0x000020f1      41b805000000   mov r8d, 5
0x000020f7      e864f7ffff     call sym.imp.dcngettext
0x000020fc      4c89e9         mov rcx, r13
0x000020ff      4889c2         mov rdx, rax
0x00002102      31f6           xor esi, esi
0x00002104      31ff           xor edi, edi
0x00002106      31c0           xor eax, eax
0x00002108      e823f7ffff     call sym.imp.error
0x0000210d      48837c245000   cmp qword [rsp + 0x50], 0
0x00002113      7434           je 0x2149
0x00002115      4c8b7c2450     mov r15, qword [rsp + 0x50]
0x0000211a      488d15677b00.  lea rdx, str.WARNING:__lu_listed_files_could_not_be_read ; 0x9c88 ; "WARNING: %lu listed files could not be read"
0x00002121      488d35907b00.  lea rsi, str.WARNING:__lu_listed_file_could_not_be_read ; 0x9cb8 ; "WARNING: %lu listed file could not be read"
0x00002128      31ff           xor edi, edi
0x0000212a      41b805000000   mov r8d, 5
0x00002130      4c89f9         mov rcx, r15
0x00002133      e828f7ffff     call sym.imp.dcngettext
0x00002138      4c89f9         mov rcx, r15
0x0000213b      4889c2         mov rdx, rax
0x0000213e      31f6           xor esi, esi
0x00002140      31ff           xor edi, edi
0x00002142      31c0           xor eax, eax
0x00002144      e8e7f6ffff     call sym.imp.error
0x00002149      48837c245800   cmp qword [rsp + 0x58], 0
0x0000214f      7434           je 0x2185
0x00002151      4c8b7c2458     mov r15, qword [rsp + 0x58]
0x00002156      488d158b7b00.  lea rdx, str.WARNING:__lu_computed_checksums_did_NOT_match ; 0x9ce8 ; "WARNING: %lu computed checksums did NOT match"
0x0000215d      488d35b47b00.  lea rsi, str.WARNING:__lu_computed_checksum_did_NOT_match ; 0x9d18 ; "WARNING: %lu computed checksum did NOT match"
0x00002164      31ff           xor edi, edi
0x00002166      41b805000000   mov r8d, 5
0x0000216c      4c89f9         mov rcx, r15
0x0000216f      e8ecf6ffff     call sym.imp.dcngettext
0x00002174      4c89f9         mov rcx, r15
0x00002177      4889c2         mov rdx, rax
0x0000217a      31f6           xor esi, esi
0x0000217c      31ff           xor edi, edi
0x0000217e      31c0           xor eax, eax
0x00002180      e8abf6ffff     call sym.imp.error
0x00002185      803d669f2000.  cmp byte [obj.ignore_missing], 0        ; [0x20c0f2:1]=0
0x0000218c      0f84cc030000   je 0x255e
0x00002192      807c247a00     cmp byte [rsp + 0x7a], 0
0x00002197      0f845a070000   je 0x28f7
0x0000219d      488b442450     mov rax, qword [rsp + 0x50]
0x000021a2      480b442458     or rax, qword [rsp + 0x58]
0x000021a7      7515           jne 0x21be
0x000021a9      0fb605409f20.  movzx eax, byte [obj.strict]            ; [0x20c0f0:1]=0
0x000021b0      83f001         xor eax, 1
0x000021b3      4d85ed         test r13, r13
0x000021b6      0f94c3         sete bl
0x000021b9      09d8           or eax, ebx
0x000021bb      0fb6d8         movzx ebx, al
0x000021be      89d8           mov eax, ebx
0x000021c0      83e001         and eax, 1
0x000021c3      20442479       and byte [rsp + 0x79], al
0x000021c7      e9a1010000     jmp 0x236d
0x000021cc      0f1f4000       nop dword [rax]
0x000021d0      488b542420     mov rdx, qword [rsp + 0x20]
0x000021d5      31ff           xor edi, edi
0x000021d7      be03000000     mov esi, 3
0x000021dc      e81f5f0000     call sym.quotearg_n_style_colon
0x000021e1      488d35d87900.  lea rsi, str.s:__lu:_improperly_formatted__s_checksum_line ; 0x9bc0 ; "%s: %lu: improperly formatted %s checksum line"
0x000021e8      31ff           xor edi, edi
0x000021ea      ba05000000     mov edx, 5
0x000021ef      4889c3         mov rbx, rax
0x000021f2      e869f4ffff     call sym.imp.dcgettext
0x000021f7      4c8d0db66f00.  lea r9, str.SHA256                      ; 0x91b4 ; "SHA256"
0x000021fe      4889c2         mov rdx, rax
0x00002201      4989e8         mov r8, rbp
0x00002204      4889d9         mov rcx, rbx
0x00002207      31f6           xor esi, esi
0x00002209      31ff           xor edi, edi
0x0000220b      31c0           xor eax, eax
0x0000220d      e81ef6ffff     call sym.imp.error
0x00002212      e93efcffff     jmp 0x1e55
0x00002217      660f1f840000.  nop word [rax + rax]
0x00002220      803dcb9e2000.  cmp byte [obj.ignore_missing], 0        ; [0x20c0f2:1]=0
0x00002227      740e           je 0x2237
0x00002229      80bc248f0000.  cmp byte [rsp + 0x8f], 0
0x00002231      0f8551feffff   jne 0x2088
0x00002237      488b0dba9e20.  mov rcx, qword [obj.digest_hex_bytes]   ; [0x20c0f8:8]=0
0x0000223e      4c89442468     mov qword [rsp + 0x68], r8
0x00002243      48d1e9         shr rcx, 1
0x00002246      0f8473030000   je 0x25bf
0x0000224c      48894c2460     mov qword [rsp + 0x60], rcx
0x00002251      44884c2430     mov byte [rsp + 0x30], r9b
0x00002256      e875f6ffff     call sym.imp.__ctype_tolower_loc
0x0000225b      31d2           xor edx, edx
0x0000225d      488b38         mov rdi, qword [rax]
0x00002260      440fb64c2430   movzx r9d, byte [rsp + 0x30]
0x00002266      488b4c2460     mov rcx, qword [rsp + 0x60]
0x0000226b      4c8b442468     mov r8, qword [rsp + 0x68]
0x00002270      4c8b542438     mov r10, qword [rsp + 0x38]
0x00002275      eb29           jmp 0x22a0
0x00002277      660f1f840000.  nop word [rax + rax]
0x00002280      410fb6745001   movzx esi, byte [r8 + rdx*2 + 1]
0x00002286      83e00f         and eax, 0xf
0x00002289      410fbe0406     movsx eax, byte [r14 + rax]
0x0000228e      3904b7         cmp dword [rdi + rsi*4], eax
0x00002291      752b           jne 0x22be
0x00002293      4883c201       add rdx, 1
0x00002297      4839d1         cmp rcx, rdx
0x0000229a      0f849d030000   je 0x263d
0x000022a0      410fb60412     movzx eax, byte [r10 + rdx]
0x000022a5      450fb61c50     movzx r11d, byte [r8 + rdx*2]
0x000022aa      89c6           mov esi, eax
0x000022ac      40c0ee04       shr sil, 4
0x000022b0      83e60f         and esi, 0xf
0x000022b3      410fbe3436     movsx esi, byte [r14 + rsi]
0x000022b8      4239349f       cmp dword [rdi + r11*4], esi
0x000022bc      74c2           je 0x2280
0x000022be      4839d1         cmp rcx, rdx
0x000022c1      0f84fa020000   je 0x25c1
0x000022c7      488344245801   add qword [rsp + 0x58], 1
0x000022cd      803d209e2000.  cmp byte [obj.status_only], 0           ; [0x20c0f4:1]=0
0x000022d4      0f85aefdffff   jne 0x2088
0x000022da      4585ff         test r15d, r15d
0x000022dd      0f8405060000   je 0x28e8
0x000022e3      488b3dbe9d20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c0a8:8]=0
0x000022ea      488b4728       mov rax, qword [rdi + 0x28]
0x000022ee      483b4730       cmp rax, qword [rdi + 0x30]
0x000022f2      0f83a7060000   jae 0x299f
0x000022f8      488d7001       lea rsi, [rax + 1]
0x000022fc      48897728       mov qword [rdi + 0x28], rsi
0x00002300      c6005c         mov byte [rax], 0x5c                    ; '\'
                                                                       ; [0x5c:1]=0
0x00002303      be01000000     mov esi, 1
0x00002308      4889df         mov rdi, rbx
0x0000230b      48894c2460     mov qword [rsp + 0x60], rcx
0x00002310      4889542430     mov qword [rsp + 0x30], rdx
0x00002315      e816090000     call sym.print_filename
0x0000231a      488b542430     mov rdx, qword [rsp + 0x30]
0x0000231f      488b4c2460     mov rcx, qword [rsp + 0x60]
0x00002324      4839ca         cmp rdx, rcx
0x00002327      0f84dd020000   je 0x260a
0x0000232d      ba05000000     mov edx, 5
0x00002332      488d35ac6f00.  lea rsi, str.FAILED                     ; 0x92e5 ; "FAILED"
0x00002339      e92dfdffff     jmp 0x206b
0x0000233e      6690           nop
0x00002340      488d84249800.  lea rax, [rsp + 0x98]
0x00002348      488d9c24a000.  lea rbx, [rsp + 0xa0]
0x00002350      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00002355      4889c2         mov rdx, rax
0x00002358      4889de         mov rsi, rbx
0x0000235b      e8a0090000     call sym.digest_file.isra.1
0x00002360      84c0           test al, al
0x00002362      0f85ff000000   jne 0x2467
0x00002368      c644247900     mov byte [rsp + 0x79], 0
0x0000236d      488344241808   add qword [rsp + 0x18], 8
0x00002373      488b442418     mov rax, qword [rsp + 0x18]
0x00002378      4839442448     cmp qword [rsp + 0x48], rax
0x0000237d      0f872df9ffff   ja 0x1cb0
0x00002383      803d7e9d2000.  cmp byte [obj.have_read_stdin], 0       ; [0x20c108:1]=0
0x0000238a      0f8570030000   jne 0x2700
0x00002390      0fb6442479     movzx eax, byte [rsp + 0x79]
0x00002395      83f001         xor eax, 1
0x00002398      488bbc24f800.  mov rdi, qword [rsp + 0xf8]
0x000023a0      6448333c2528.  xor rdi, qword fs:[0x28]
0x000023a9      0fb6c0         movzx eax, al
0x000023ac      0f8531060000   jne 0x29e3
0x000023b2      4881c4080100.  add rsp, 0x108
0x000023b9      5b             pop rbx
0x000023ba      5d             pop rbp
0x000023bb      415c           pop r12
0x000023bd      415d           pop r13
0x000023bf      415e           pop r14
0x000023c1      415f           pop r15
0x000023c3      c3             ret
0x000023c4      4883c101       add rcx, 1
0x000023c8      4929cf         sub r15, rcx
0x000023cb      0f8473faffff   je 0x1e44
0x000023d1      4d89fa         mov r10, r15
0x000023d4      4801cb         add rbx, rcx
0x000023d7      4983ea01       sub r10, 1
0x000023db      7424           je 0x2401
0x000023dd      42807c3bff29   cmp byte [rbx + r15 - 1], 0x29
0x000023e3      7516           jne 0x23fb
0x000023e5      e99f020000     jmp 0x2689
0x000023ea      660f1f440000   nop word [rax + rax]
0x000023f0      42803c1329     cmp byte [rbx + r10], 0x29
0x000023f5      0f848e020000   je 0x2689
0x000023fb      4983ea01       sub r10, 1
0x000023ff      75ef           jne 0x23f0
0x00002401      803b29         cmp byte [rbx], 0x29
0x00002404      0f853afaffff   jne 0x1e44
0x0000240a      4989db         mov r11, rbx
0x0000240d      4531d2         xor r10d, r10d
0x00002410      e978020000     jmp 0x268d
0x00002415      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000241a      488d35616e00.  lea rsi, [0x00009282]                   ; "r"
0x00002421      e8fa400000     call sym.fopen_safer
0x00002426      4885c0         test rax, rax
0x00002429      4989c4         mov r12, rax
0x0000242c      0f85def8ffff   jne 0x1d10
0x00002432      488b542420     mov rdx, qword [rsp + 0x20]
0x00002437      be03000000     mov esi, 3
0x0000243c      31ff           xor edi, edi
0x0000243e      e8bd5c0000     call sym.quotearg_n_style_colon
0x00002443      4889c3         mov rbx, rax
0x00002446      e885f1ffff     call sym.imp.__errno_location
0x0000244b      8b30           mov esi, dword [rax]
0x0000244d      488d15217900.  lea rdx, [0x00009d75]                   ; "%s"
0x00002454      31c0           xor eax, eax
0x00002456      4889d9         mov rcx, rbx
0x00002459      31ff           xor edi, edi
0x0000245b      e8d0f3ffff     call sym.imp.error
0x00002460      31c0           xor eax, eax
0x00002462      e95cfdffff     jmp 0x21c3
0x00002467      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000246c      be5c000000     mov esi, 0x5c                           ; '\'
0x00002471      e84af2ffff     call sym.imp.strchr
0x00002476      4885c0         test rax, rax
0x00002479      0f84d2030000   je 0x2851
0x0000247f      803d8a9b2000.  cmp byte [obj.delim], 0xa               ; [0x20c010:1]=10 ; "\n"
0x00002486      0f84e0020000   je 0x276c
0x0000248c      807c247800     cmp byte [rsp + 0x78], 0
0x00002491      0f85d7030000   jne 0x286e
0x00002497      488b055a9c20.  mov rax, qword [obj.digest_hex_bytes]   ; [0x20c0f8:8]=0
0x0000249e      31ed           xor ebp, ebp
0x000024a0      48d1e8         shr rax, 1
0x000024a3      743d           je 0x24e2
0x000024a5      4531e4         xor r12d, r12d
0x000024a8      0f1f84000000.  nop dword [rax + rax]
0x000024b0      420fb61423     movzx edx, byte [rbx + r12]
0x000024b5      488d355b6e00.  lea rsi, str.02x                        ; 0x9317 ; "%02x"
0x000024bc      31c0           xor eax, eax
0x000024be      bf01000000     mov edi, 1
0x000024c3      4983c401       add r12, 1
0x000024c7      e844f3ffff     call sym.imp.__printf_chk
0x000024cc      488b05259c20.  mov rax, qword [obj.digest_hex_bytes]   ; [0x20c0f8:8]=0
0x000024d3      48d1e8         shr rax, 1
0x000024d6      4c39e0         cmp rax, r12
0x000024d9      77d5           ja 0x24b0
0x000024db      807c247800     cmp byte [rsp + 0x78], 0
0x000024e0      7551           jne 0x2533
0x000024e2      488b3dbf9b20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c0a8:8]=0
0x000024e9      488b4728       mov rax, qword [rdi + 0x28]
0x000024ed      48394730       cmp qword [rdi + 0x30], rax
0x000024f1      0f8699040000   jbe 0x2990
0x000024f7      488d5001       lea rdx, [rax + 1]
0x000024fb      48895728       mov qword [rdi + 0x28], rdx
0x000024ff      c60020         mov byte [rax], 0x20                    ; [0x20:1]=64 ; "@"
0x00002502      488b3d9f9b20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c0a8:8]=0
0x00002509      488b4728       mov rax, qword [rdi + 0x28]
0x0000250d      483b4730       cmp rax, qword [rdi + 0x30]
0x00002511      0f836b040000   jae 0x2982
0x00002517      488d5001       lea rdx, [rax + 1]
0x0000251b      48895728       mov qword [rdi + 0x28], rdx
0x0000251f      0fb67c247b     movzx edi, byte [rsp + 0x7b]
0x00002524      408838         mov byte [rax], dil
0x00002527      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000252c      89ee           mov esi, ebp
0x0000252e      e8fd060000     call sym.print_filename
0x00002533      488b3d6e9b20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c0a8:8]=0
0x0000253a      0fb615cf9a20.  movzx edx, byte [obj.delim]             ; [0x20c010:1]=10 ; "\n"
0x00002541      488b4728       mov rax, qword [rdi + 0x28]
0x00002545      483b4730       cmp rax, qword [rdi + 0x30]
0x00002549      0f8308040000   jae 0x2957
0x0000254f      488d4801       lea rcx, [rax + 1]
0x00002553      48894f28       mov qword [rdi + 0x28], rcx
0x00002557      8810           mov byte [rax], dl
0x00002559      e90ffeffff     jmp 0x236d
0x0000255e      807c247a00     cmp byte [rsp + 0x7a], 0
0x00002563      0f8534fcffff   jne 0x219d
0x00002569      e950fcffff     jmp 0x21be
0x0000256e      488b542420     mov rdx, qword [rsp + 0x20]
0x00002573      be03000000     mov esi, 3
0x00002578      31ff           xor edi, edi
0x0000257a      e8815b0000     call sym.quotearg_n_style_colon
0x0000257f      488d35696d00.  lea rsi, str.s:_read_error              ; 0x92ef ; "%s: read error"
0x00002586      4889c3         mov rbx, rax
0x00002589      ba05000000     mov edx, 5
0x0000258e      31ff           xor edi, edi
0x00002590      e8cbf0ffff     call sym.imp.dcgettext
0x00002595      4889d9         mov rcx, rbx
0x00002598      4889c2         mov rdx, rax
0x0000259b      31f6           xor esi, esi
0x0000259d      31c0           xor eax, eax
0x0000259f      31ff           xor edi, edi
0x000025a1      e88af2ffff     call sym.imp.error
0x000025a6      31c0           xor eax, eax
0x000025a8      e916fcffff     jmp 0x21c3
0x000025ad      803d3f9b2000.  cmp byte [obj.warn], 0                  ; [0x20c0f3:1]=0
0x000025b4      0f8583f6ffff   jne 0x1c3d
0x000025ba      e906f9ffff     jmp 0x1ec5
0x000025bf      31d2           xor edx, edx
0x000025c1      0fb6052c9b20.  movzx eax, byte [obj.status_only]       ; [0x20c0f4:1]=0
0x000025c8      84c0           test al, al
0x000025ca      8844247a       mov byte [rsp + 0x7a], al
0x000025ce      0f85b4faffff   jne 0x2088
0x000025d4      0fb605169b20.  movzx eax, byte [obj.quiet]             ; [0x20c0f1:1]=0
0x000025db      84c0           test al, al
0x000025dd      8844247a       mov byte [rsp + 0x7a], al
0x000025e1      0f85a1faffff   jne 0x2088
0x000025e7      4585ff         test r15d, r15d
0x000025ea      0f8521040000   jne 0x2a11
0x000025f0      31f6           xor esi, esi
0x000025f2      4889df         mov rdi, rbx
0x000025f5      44884c2430     mov byte [rsp + 0x30], r9b
0x000025fa      e831060000     call sym.print_filename
0x000025ff      440fb64c2430   movzx r9d, byte [rsp + 0x30]
0x00002605      44884c247a     mov byte [rsp + 0x7a], r9b
0x0000260a      803de09a2000.  cmp byte [obj.quiet], 0                 ; [0x20c0f1:1]=0
0x00002611      0f8571faffff   jne 0x2088
0x00002617      ba05000000     mov edx, 5
0x0000261c      488d35c96c00.  lea rsi, [0x000092ec]                   ; "OK"
0x00002623      e943faffff     jmp 0x206b
0x00002628      4c89e7         mov rdi, r12
0x0000262b      e880650000     call sym.rpl_fclose
0x00002630      85c0           test eax, eax
0x00002632      0f8489faffff   je 0x20c1
0x00002638      e9f5fdffff     jmp 0x2432
0x0000263d      4889ca         mov rdx, rcx
0x00002640      e97cffffff     jmp 0x25c1
0x00002645      488b542420     mov rdx, qword [rsp + 0x20]
0x0000264a      31ff           xor edi, edi
0x0000264c      be03000000     mov esi, 3
0x00002651      e8aa5a0000     call sym.quotearg_n_style_colon
0x00002656      488d35937500.  lea rsi, str.s:_no_properly_formatted__s_checksum_lines_found ; 0x9bf0 ; "%s: no properly formatted %s checksum lines found"
0x0000265d      31ff           xor edi, edi
0x0000265f      ba05000000     mov edx, 5
0x00002664      4889c5         mov rbp, rax
0x00002667      e8f4efffff     call sym.imp.dcgettext
0x0000266c      4c8d05416b00.  lea r8, str.SHA256                      ; 0x91b4 ; "SHA256"
0x00002673      4889c2         mov rdx, rax
0x00002676      4889e9         mov rcx, rbp
0x00002679      31f6           xor esi, esi
0x0000267b      31ff           xor edi, edi
0x0000267d      31c0           xor eax, eax
0x0000267f      e8acf1ffff     call sym.imp.error
0x00002684      e935fbffff     jmp 0x21be
0x00002689      4e8d1c13       lea r11, [rbx + r10]
0x0000268d      4584c9         test r9b, r9b
0x00002690      0f85a8020000   jne 0x293e
0x00002696      4983c201       add r10, 1
0x0000269a      41c60300       mov byte [r11], 0
0x0000269e      eb04           jmp 0x26a4
0x000026a0      4983c201       add r10, 1
0x000026a4      420fb60413     movzx eax, byte [rbx + r10]
0x000026a9      3c20           cmp al, 0x20                            ; "@"
0x000026ab      74f3           je 0x26a0
0x000026ad      3c09           cmp al, 9
0x000026af      74ef           je 0x26a0
0x000026b1      3c3d           cmp al, 0x3d
0x000026b3      0f858bf7ffff   jne 0x1e44
0x000026b9      4a8d541301     lea rdx, [rbx + r10 + 1]
0x000026be      0fb602         movzx eax, byte [rdx]
0x000026c1      4989d0         mov r8, rdx
0x000026c4      488d5201       lea rdx, [rdx + 1]
0x000026c8      3c20           cmp al, 0x20                            ; "@"
0x000026ca      74f2           je 0x26be
0x000026cc      3c09           cmp al, 9
0x000026ce      74ee           je 0x26be
0x000026d0      4c89c7         mov rdi, r8
0x000026d3      4c89442460     mov qword [rsp + 0x60], r8
0x000026d8      e8f3040000     call sym.hex_digits
0x000026dd      4c8b442460     mov r8, qword [rsp + 0x60]
0x000026e2      eb7b           jmp 0x275f
0x000026e4      83ee01         sub esi, 1
0x000026e7      0f84adf8ffff   je 0x1f9a
0x000026ed      c7051d992000.  mov dword [obj.bsd_reversed], 0         ; [0x20c014:4]=-1
0x000026f7      488d4202       lea rax, [rdx + 2]
0x000026fb      e99af8ffff     jmp 0x1f9a
0x00002700      488b3da99920.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20c0b0:8]=0
0x00002707      e8a4640000     call sym.rpl_fclose
0x0000270c      83c001         add eax, 1
0x0000270f      0f857bfcffff   jne 0x2390
0x00002715      488d358a6b00.  lea rsi, str.standard_input             ; 0x92a6 ; "standard input"
0x0000271c      ba05000000     mov edx, 5
0x00002721      31ff           xor edi, edi
0x00002723      e838efffff     call sym.imp.dcgettext
0x00002728      4889c3         mov rbx, rax
0x0000272b      e8a0eeffff     call sym.imp.__errno_location
0x00002730      8b30           mov esi, dword [rax]
0x00002732      4889da         mov rdx, rbx
0x00002735      bf01000000     mov edi, 1
0x0000273a      31c0           xor eax, eax
0x0000273c      e8eff0ffff     call sym.imp.error
0x00002741      4c89fe         mov rsi, r15
0x00002744      4889df         mov rdi, rbx
0x00002747      4c89442460     mov qword [rsp + 0x60], r8
0x0000274c      4829c6         sub rsi, rax
0x0000274f      e8fc030000     call sym.filename_unescape
0x00002754      4c8b442460     mov r8, qword [rsp + 0x60]
0x00002759      4885c0         test rax, rax
0x0000275c      0f95c0         setne al
0x0000275f      84c0           test al, al
0x00002761      0f853ff8ffff   jne 0x1fa6
0x00002767      e9d8f6ffff     jmp 0x1e44
0x0000276c      807c247800     cmp byte [rsp + 0x78], 0
0x00002771      0f84a0000000   je 0x2817
0x00002777      488b3d2a9920.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c0a8:8]=0
0x0000277e      488b4728       mov rax, qword [rdi + 0x28]
0x00002782      483b4730       cmp rax, qword [rdi + 0x30]
0x00002786      0f8336020000   jae 0x29c2
0x0000278c      488d5001       lea rdx, [rax + 1]
0x00002790      48895728       mov qword [rdi + 0x28], rdx
0x00002794      c6005c         mov byte [rax], 0x5c                    ; '\'
                                                                       ; [0x5c:1]=0
0x00002797      488b0d0a9920.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c0a8:8]=0
0x0000279e      488d3d0f6a00.  lea rdi, str.SHA256                     ; 0x91b4 ; "SHA256"
0x000027a5      ba06000000     mov edx, 6
0x000027aa      be01000000     mov esi, 1
0x000027af      e81cf0ffff     call sym.imp.fwrite_unlocked
0x000027b4      488b0ded9820.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c0a8:8]=0
0x000027bb      488d3d5a6b00.  lea rdi, [0x0000931c]                   ; " ("
0x000027c2      ba02000000     mov edx, 2
0x000027c7      be01000000     mov esi, 1
0x000027cc      e8ffefffff     call sym.imp.fwrite_unlocked
0x000027d1      488b7c2420     mov rdi, qword [rsp + 0x20]
0x000027d6      be01000000     mov esi, 1
0x000027db      e850040000     call sym.print_filename
0x000027e0      488b0dc19820.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c0a8:8]=0
0x000027e7      488d3d316b00.  lea rdi, str.                           ; 0x931f ; ") = "
0x000027ee      ba04000000     mov edx, 4
0x000027f3      be01000000     mov esi, 1
0x000027f8      e8d3efffff     call sym.imp.fwrite_unlocked
0x000027fd      488b05f49820.  mov rax, qword [obj.digest_hex_bytes]   ; [0x20c0f8:8]=0
0x00002804      bd01000000     mov ebp, 1
0x00002809      48d1e8         shr rax, 1
0x0000280c      0f8593fcffff   jne 0x24a5
0x00002812      e9c4fcffff     jmp 0x24db
0x00002817      488b3d8a9820.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c0a8:8]=0
0x0000281e      488b4728       mov rax, qword [rdi + 0x28]
0x00002822      483b4730       cmp rax, qword [rdi + 0x30]
0x00002826      0f8347010000   jae 0x2973
0x0000282c      488d5001       lea rdx, [rax + 1]
0x00002830      bd01000000     mov ebp, 1
0x00002835      48895728       mov qword [rdi + 0x28], rdx
0x00002839      c6005c         mov byte [rax], 0x5c                    ; '\'
                                                                       ; [0x5c:1]=0
0x0000283c      488b05b59820.  mov rax, qword [obj.digest_hex_bytes]   ; [0x20c0f8:8]=0
0x00002843      48d1e8         shr rax, 1
0x00002846      0f8559fcffff   jne 0x24a5
0x0000284c      e991fcffff     jmp 0x24e2
0x00002851      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00002856      be0a000000     mov esi, 0xa
0x0000285b      e860eeffff     call sym.imp.strchr
0x00002860      4885c0         test rax, rax
0x00002863      0f8516fcffff   jne 0x247f
0x00002869      e91efcffff     jmp 0x248c
0x0000286e      488b0d339820.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c0a8:8]=0
0x00002875      488d3d386900.  lea rdi, str.SHA256                     ; 0x91b4 ; "SHA256"
0x0000287c      ba06000000     mov edx, 6
0x00002881      be01000000     mov esi, 1
0x00002886      31ed           xor ebp, ebp
0x00002888      e843efffff     call sym.imp.fwrite_unlocked
0x0000288d      488b0d149820.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c0a8:8]=0
0x00002894      488d3d816a00.  lea rdi, [0x0000931c]                   ; " ("
0x0000289b      ba02000000     mov edx, 2
0x000028a0      be01000000     mov esi, 1
0x000028a5      e826efffff     call sym.imp.fwrite_unlocked
0x000028aa      488b7c2420     mov rdi, qword [rsp + 0x20]
0x000028af      31f6           xor esi, esi
0x000028b1      e87a030000     call sym.print_filename
0x000028b6      488b0deb9720.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c0a8:8]=0
0x000028bd      488d3d5b6a00.  lea rdi, str.                           ; 0x931f ; ") = "
0x000028c4      ba04000000     mov edx, 4
0x000028c9      be01000000     mov esi, 1
0x000028ce      e8fdeeffff     call sym.imp.fwrite_unlocked
0x000028d3      488b051e9820.  mov rax, qword [obj.digest_hex_bytes]   ; [0x20c0f8:8]=0
0x000028da      48d1e8         shr rax, 1
0x000028dd      0f85c2fbffff   jne 0x24a5
0x000028e3      e94bfcffff     jmp 0x2533
0x000028e8      31f6           xor esi, esi
0x000028ea      4889df         mov rdi, rbx
0x000028ed      e83e030000     call sym.print_filename
0x000028f2      e936faffff     jmp 0x232d
0x000028f7      488b542420     mov rdx, qword [rsp + 0x20]
0x000028fc      31ff           xor edi, edi
0x000028fe      be03000000     mov esi, 3
0x00002903      e8f8570000     call sym.quotearg_n_style_colon
0x00002908      488d35ef6900.  lea rsi, str.s:_no_file_was_verified    ; 0x92fe ; "%s: no file was verified"
0x0000290f      4889c5         mov rbp, rax
0x00002912      31ff           xor edi, edi
0x00002914      ba05000000     mov edx, 5
0x00002919      e842edffff     call sym.imp.dcgettext
0x0000291e      4889e9         mov rcx, rbp
0x00002921      4889c2         mov rdx, rax
0x00002924      31f6           xor esi, esi
0x00002926      31ff           xor edi, edi
0x00002928      31c0           xor eax, eax
0x0000292a      e801efffff     call sym.imp.error
0x0000292f      e98af8ffff     jmp 0x21be
0x00002934      c644247901     mov byte [rsp + 0x79], 1
0x00002939      e945faffff     jmp 0x2383
0x0000293e      4c89d6         mov rsi, r10
0x00002941      4889df         mov rdi, rbx
0x00002944      e807020000     call sym.filename_unescape
0x00002949      4885c0         test rax, rax
0x0000294c      0f8544fdffff   jne 0x2696
0x00002952      e9edf4ffff     jmp 0x1e44
0x00002957      0fb6f2         movzx esi, dl
0x0000295a      e871edffff     call sym.imp.__overflow
0x0000295f      e909faffff     jmp 0x236d
0x00002964      be5c000000     mov esi, 0x5c                           ; '\'
0x00002969      e862edffff     call sym.imp.__overflow
0x0000296e      e9e1f6ffff     jmp 0x2054
0x00002973      be5c000000     mov esi, 0x5c                           ; '\'
0x00002978      e853edffff     call sym.imp.__overflow
0x0000297d      e97bfeffff     jmp 0x27fd
0x00002982      8b74247c       mov esi, dword [rsp + 0x7c]
0x00002986      e845edffff     call sym.imp.__overflow
0x0000298b      e997fbffff     jmp 0x2527
0x00002990      be20000000     mov esi, 0x20                           ; "@"
0x00002995      e836edffff     call sym.imp.__overflow
0x0000299a      e963fbffff     jmp 0x2502
0x0000299f      be5c000000     mov esi, 0x5c                           ; '\'
0x000029a4      48894c2460     mov qword [rsp + 0x60], rcx
0x000029a9      4889542430     mov qword [rsp + 0x30], rdx
0x000029ae      e81dedffff     call sym.imp.__overflow
0x000029b3      488b542430     mov rdx, qword [rsp + 0x30]
0x000029b8      488b4c2460     mov rcx, qword [rsp + 0x60]
0x000029bd      e941f9ffff     jmp 0x2303
0x000029c2      be5c000000     mov esi, 0x5c                           ; '\'
0x000029c7      e804edffff     call sym.imp.__overflow
0x000029cc      e9c6fdffff     jmp 0x2797
0x000029d1      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x000029d6      0f85f4f1ffff   jne 0x1bd0
0x000029dc      31ff           xor edi, edi
0x000029de      e8bd040000     call sym.usage
0x000029e3      e8a8ecffff     call sym.imp.__stack_chk_fail
0x000029e8      803d05972000.  cmp byte [obj.status_only], 0           ; [0x20c0f4:1]=0
0x000029ef      0f84a2f1ffff   je 0x1b97
0x000029f5      807c242b00     cmp byte [rsp + 0x2b], 0
0x000029fa      0f85adfbffff   jne 0x25ad
0x00002a00      ba05000000     mov edx, 5
0x00002a05      488d35b47000.  lea rsi, str.the___status_option_is_meaningful_only_when_verifying_checksums ; 0x9ac0 ; "the --status option is meaningful only when verifying checksums"
0x00002a0c      e9aaf1ffff     jmp 0x1bbb
0x00002a11      44884c247a     mov byte [rsp + 0x7a], r9b
0x00002a16      e9c8f8ffff     jmp 0x22e3
0x00002a1b      ba05000000     mov edx, 5
0x00002a20      488d35596f00.  lea rsi, str.tag_does_not_support___text_mode ; 0x9980 ; "--tag does not support --text mode"
0x00002a27      e98ff1ffff     jmp 0x1bbb
0x00002a2c      ba05000000     mov edx, 5
0x00002a31      488d35407000.  lea rsi, str.the___ignore_missing_option_is_meaningful_only_when_verifying_checksums ; 0x9a78 ; "the --ignore-missing option is meaningful only when verifying checksums"
0x00002a38      e97ef1ffff     jmp 0x1bbb
0x00002a3d      0f1f00         nop dword [rax]
;-- entry0:
;-- _start:
;-- rip:
0x00002a40      31ed           xor ebp, ebp
0x00002a42      4989d1         mov r9, rdx
0x00002a45      5e             pop rsi
0x00002a46      4889e2         mov rdx, rsp
0x00002a49      4883e4f0       and rsp, 0xfffffffffffffff0
0x00002a4d      50             push rax
0x00002a4e      54             push rsp
0x00002a4f      4c8d051a6700.  lea r8, sym.__libc_csu_fini             ; 0x9170
0x00002a56      488d0da36600.  lea rcx, sym.__libc_csu_init            ; 0x9100 ; "AWAVI\x89\xd7AUATL\x8d%\xfe( "
0x00002a5d      488d3d9ceeff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1900 ; "AWAVAUATA\x89\xfcUSH\x89\xf3\xbd\xff\xff\xff\xffH\x81\xec\b\x01"
0x00002a64      ff155e952000   call qword [reloc.__libc_start_main]    ; [0x20bfc8:8]=0
0x00002a6a      f4             hlt
0x00002a6b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00002a70      488d3d299620.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20c0a0
0x00002a77      55             push rbp
0x00002a78      488d05219620.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20c0a0
0x00002a7f      4839f8         cmp rax, rdi
0x00002a82      4889e5         mov rbp, rsp
0x00002a85      7419           je 0x2aa0
0x00002a87      488b05329520.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x20bfc0:8]=0
0x00002a8e      4885c0         test rax, rax
0x00002a91      740d           je 0x2aa0
0x00002a93      5d             pop rbp
0x00002a94      ffe0           jmp rax
0x00002a96      662e0f1f8400.  nop word cs:[rax + rax]
0x00002aa0      5d             pop rbp
0x00002aa1      c3             ret
0x00002aa2      0f1f4000       nop dword [rax]
0x00002aa6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00002ab0      488d3de99520.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20c0a0
0x00002ab7      488d35e29520.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20c0a0
0x00002abe      55             push rbp
0x00002abf      4829fe         sub rsi, rdi
0x00002ac2      4889e5         mov rbp, rsp
0x00002ac5      48c1fe03       sar rsi, 3
0x00002ac9      4889f0         mov rax, rsi
0x00002acc      48c1e83f       shr rax, 0x3f
0x00002ad0      4801c6         add rsi, rax
0x00002ad3      48d1fe         sar rsi, 1
0x00002ad6      7418           je 0x2af0
0x00002ad8      488b05f99420.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x20bfd8:8]=0
0x00002adf      4885c0         test rax, rax
0x00002ae2      740c           je 0x2af0
0x00002ae4      5d             pop rbp
0x00002ae5      ffe0           jmp rax
0x00002ae7      660f1f840000.  nop word [rax + rax]
0x00002af0      5d             pop rbp
0x00002af1      c3             ret
0x00002af2      0f1f4000       nop dword [rax]
0x00002af6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00002b00      803de1952000.  cmp byte [obj.completed.7697], 0        ; [0x20c0e8:1]=0
0x00002b07      752f           jne 0x2b38
0x00002b09      48833dcf9420.  cmp qword [reloc.__cxa_finalize], 0     ; [0x20bfe0:8]=0
0x00002b11      55             push rbp
0x00002b12      4889e5         mov rbp, rsp
0x00002b15      740c           je 0x2b23
0x00002b17      488b3dea9420.  mov rdi, qword [obj.__dso_handle]       ; [0x20c008:8]=0x20c008 obj.__dso_handle
0x00002b1e      e8cdedffff     call sym..plt.got
0x00002b23      e848ffffff     call sym.deregister_tm_clones
0x00002b28      c605b9952000.  mov byte [obj.completed.7697], 1        ; [0x20c0e8:1]=0
0x00002b2f      5d             pop rbp
0x00002b30      c3             ret
0x00002b31      0f1f80000000.  nop dword [rax]
0x00002b38      f3c3           ret
0x00002b3a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00002b40      55             push rbp
0x00002b41      4889e5         mov rbp, rsp
0x00002b44      5d             pop rbp
0x00002b45      e966ffffff     jmp sym.register_tm_clones
0x00002b4a      660f1f440000   nop word [rax + rax]
;-- filename_unescape:
0x00002b50      31d2           xor edx, edx                            ; /src:310
0x00002b52      4885f6         test rsi, rsi
0x00002b55      488d4f01       lea rcx, [rdi + 1]
0x00002b59      4c8d46ff       lea r8, [rsi - 1]                       ; /src:318
0x00002b5d      7458           je 0x2bb7                               ; /src:313
0x00002b5f      0fb60417       movzx eax, byte [rdi + rdx]             ; /src:315
0x00002b63      84c0           test al, al
0x00002b65      7429           je 0x2b90
0x00002b67      3c5c           cmp al, 0x5c
0x00002b69      752d           jne 0x2b98
0x00002b6b      4939d0         cmp r8, rdx                             ; /src:318
0x00002b6e      7420           je 0x2b90
0x00002b70      4883c201       add rdx, 1                              ; /src:323
0x00002b74      0fb60417       movzx eax, byte [rdi + rdx]             ; /src:324
0x00002b78      3c5c           cmp al, 0x5c
0x00002b7a      7444           je 0x2bc0
0x00002b7c      3c6e           cmp al, 0x6e
0x00002b7e      7510           jne 0x2b90
0x00002b80      4989c9         mov r9, rcx                             ; /src:327
0x00002b83      c641ff0a       mov byte [rcx - 1], 0xa
0x00002b87      eb15           jmp 0x2b9e                              ; /src:328
0x00002b89      0f1f80000000.  nop dword [rax]
0x00002b90      31c0           xor eax, eax                            ; /src:340
0x00002b92      c3             ret                                     ; /src:351
0x00002b93      0f1f440000     nop dword [rax + rax]
0x00002b98      4989c9         mov r9, rcx                             ; /src:343
0x00002b9b      8841ff         mov byte [rcx - 1], al
0x00002b9e      4883c201       add rdx, 1                              ; /src:313
0x00002ba2      4883c101       add rcx, 1
0x00002ba6      4839d6         cmp rsi, rdx
0x00002ba9      77b4           ja 0x2b5f
0x00002bab      4801fe         add rsi, rdi                            ; /src:347
0x00002bae      4939f1         cmp r9, rsi
0x00002bb1      7304           jae 0x2bb7
0x00002bb3      41c60100       mov byte [r9], 0                        ; /src:348
0x00002bb7      4889f8         mov rax, rdi                            ; /src:350
0x00002bba      c3             ret
0x00002bbb      0f1f440000     nop dword [rax + rax]
0x00002bc0      4989c9         mov r9, rcx                             ; /src:330
0x00002bc3      c641ff5c       mov byte [rcx - 1], 0x5c                ; '\'
                                                                       ; [0x5c:1]=0
0x00002bc7      ebd5           jmp 0x2b9e                              ; /src:331
0x00002bc9      0f1f80000000.  nop dword [rax]
;-- hex_digits:
0x00002bd0      55             push rbp                                ; /src:357
0x00002bd1      53             push rbx
0x00002bd2      4883ec08       sub rsp, 8
0x00002bd6      488b2d1b9520.  mov rbp, qword [obj.digest_hex_bytes]   ; /src:358 ; [0x20c0f8:8]=0
0x00002bdd      4885ed         test rbp, rbp
0x00002be0      743e           je 0x2c20
0x00002be2      4889fb         mov rbx, rdi
0x00002be5      e8f6ecffff     call sym.imp.__ctype_b_loc              ; /src:360
0x00002bea      488b08         mov rcx, qword [rax]
0x00002bed      4889d8         mov rax, rbx
0x00002bf0      eb13           jmp 0x2c05
0x00002bf2      660f1f440000   nop word [rax + rax]
0x00002bf8      4883c001       add rax, 1                              ; /src:362
0x00002bfc      89c2           mov edx, eax                            ; /src:358
0x00002bfe      29da           sub edx, ebx
0x00002c00      4839ea         cmp rdx, rbp
0x00002c03      731e           jae 0x2c23
0x00002c05      0fb610         movzx edx, byte [rax]                   ; /src:360
0x00002c08      f644510110     test byte [rcx + rdx*2 + 1], 0x10
0x00002c0d      75e9           jne 0x2bf8
0x00002c0f      4883c408       add rsp, 8                              ; /src:365
0x00002c13      31c0           xor eax, eax                            ; /src:361
0x00002c15      5b             pop rbx                                 ; /src:365
0x00002c16      5d             pop rbp
0x00002c17      c3             ret
0x00002c18      0f1f84000000.  nop dword [rax + rax]
0x00002c20      4889f8         mov rax, rdi                            ; /src:358
0x00002c23      803800         cmp byte [rax], 0                       ; /src:364
0x00002c26      0f94c0         sete al
0x00002c29      4883c408       add rsp, 8                              ; /src:365
0x00002c2d      5b             pop rbx
0x00002c2e      5d             pop rbp
0x00002c2f      c3             ret
;-- print_filename:
0x00002c30      55             push rbp                                ; /src:551
0x00002c31      53             push rbx
0x00002c32      4889fb         mov rbx, rdi
0x00002c35      4883ec08       sub rsp, 8
0x00002c39      4084f6         test sil, sil                           ; /src:552
0x00002c3c      0f848e000000   je 0x2cd0
0x00002c42      0fb637         movzx esi, byte [rdi]                   ; /src:558
0x00002c45      488d2d586500.  lea rbp, [0x000091a4]                   ; /src:563 ; "\n"
0x00002c4c      4084f6         test sil, sil                           ; /src:558
0x00002c4f      7529           jne 0x2c7a
0x00002c51      eb5b           jmp 0x2cae
0x00002c53      0f1f440000     nop dword [rax + rax]
0x00002c58      488d3d486500.  lea rdi, [0x000091a7]                   ; /src:567 ; "\\"
0x00002c5f      ba02000000     mov edx, 2
0x00002c64      be01000000     mov esi, 1
0x00002c69      e862ebffff     call sym.imp.fwrite_unlocked
0x00002c6e      4883c301       add rbx, 1                              ; /src:574
0x00002c72      0fb633         movzx esi, byte [rbx]                   ; /src:558
0x00002c75      4084f6         test sil, sil
0x00002c78      7434           je 0x2cae
0x00002c7a      4080fe0a       cmp sil, 0xa                            ; /src:560
0x00002c7e      488b0d239420.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c0a8:8]=0
0x00002c85      7431           je 0x2cb8
0x00002c87      4080fe5c       cmp sil, 0x5c
0x00002c8b      74cb           je 0x2c58
0x00002c8d      488b4128       mov rax, qword [rcx + 0x28]             ; /coreutils-8.31/lib:107
0x00002c91      483b4130       cmp rax, qword [rcx + 0x30]
0x00002c95      7351           jae 0x2ce8
0x00002c97      488d5001       lea rdx, [rax + 1]
0x00002c9b      4883c301       add rbx, 1                              ; /src:574
0x00002c9f      48895128       mov qword [rcx + 0x28], rdx             ; /coreutils-8.31/lib:107
0x00002ca3      408830         mov byte [rax], sil
0x00002ca6      0fb633         movzx esi, byte [rbx]                   ; /src:558
0x00002ca9      4084f6         test sil, sil
0x00002cac      75cc           jne 0x2c7a
0x00002cae      4883c408       add rsp, 8                              ; /src:576
0x00002cb2      5b             pop rbx
0x00002cb3      5d             pop rbp
0x00002cb4      c3             ret
0x00002cb5      0f1f00         nop dword [rax]
0x00002cb8      ba02000000     mov edx, 2                              ; /src:563
0x00002cbd      be01000000     mov esi, 1
0x00002cc2      4889ef         mov rdi, rbp
0x00002cc5      e806ebffff     call sym.imp.fwrite_unlocked
0x00002cca      eba2           jmp 0x2c6e
0x00002ccc      0f1f4000       nop dword [rax]
0x00002cd0      488b35d19320.  mov rsi, qword [obj.stdout]             ; /src:554 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c0a8:8]=0
0x00002cd7      4883c408       add rsp, 8                              ; /src:576
0x00002cdb      5b             pop rbx
0x00002cdc      5d             pop rbp
0x00002cdd      e95eeaffff     jmp sym.imp.fputs_unlocked              ; /src:554
0x00002ce2      660f1f440000   nop word [rax + rax]
0x00002ce8      4889cf         mov rdi, rcx                            ; /coreutils-8.31/lib:107
0x00002ceb      e8e0e9ffff     call sym.imp.__overflow
0x00002cf0      e979ffffff     jmp 0x2c6e
0x00002cf5      90             nop
0x00002cf6      662e0f1f8400.  nop word cs:[rax + rax]
;-- digest_file.isra.1:
0x00002d00      4155           push r13                                ; /src:591
0x00002d02      4154           push r12
0x00002d04      b902000000     mov ecx, 2                              ; /src:596
0x00002d09      55             push rbp                                ; /src:591
0x00002d0a      53             push rbx
0x00002d0b      4889fd         mov rbp, rdi
0x00002d0e      488d3ded7000.  lea rdi, [0x00009e02]                   ; /src:596 ; "-"
0x00002d15      4989f4         mov r12, rsi                            ; /src:591
0x00002d18      4889ee         mov rsi, rbp                            ; /src:596
0x00002d1b      4883ec08       sub rsp, 8                              ; /src:591
0x00002d1f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]   ; /src:596
0x00002d21      c60200         mov byte [rdx], 0                       ; /src:598
0x00002d24      0f97c0         seta al                                 ; /src:596
0x00002d27      1c00           sbb al, 0
0x00002d29      84c0           test al, al                             ; /src:600
0x00002d2b      0f858f000000   jne 0x2dc0
0x00002d31      488b1d789320.  mov rbx, qword [obj.stdin]              ; /src:603 ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20c0b0:8]=0
0x00002d38      be02000000     mov esi, 2                              ; /src:627
0x00002d3d      c605c4932000.  mov byte [obj.have_read_stdin], 1       ; /src:602 ; [0x20c108:1]=0
0x00002d44      4889df         mov rdi, rbx                            ; /src:627
0x00002d47      e8a4370000     call sym.fadvise
0x00002d4c      4c89e6         mov rsi, r12                            ; /src:632
0x00002d4f      4889df         mov rdi, rbx
0x00002d52      e849370000     call sym.sha256_stream
0x00002d57      85c0           test eax, eax                           ; /src:634
0x00002d59      7515           jne 0x2d70
0x00002d5b      41bc01000000   mov r12d, 1                             ; /src:648
0x00002d61      4883c408       add rsp, 8                              ; /src:649
0x00002d65      4489e0         mov eax, r12d
0x00002d68      5b             pop rbx
0x00002d69      5d             pop rbp
0x00002d6a      415c           pop r12
0x00002d6c      415d           pop r13
0x00002d6e      c3             ret
0x00002d6f      90             nop
0x00002d70      4889ea         mov rdx, rbp                            ; /src:636
0x00002d73      31ff           xor edi, edi
0x00002d75      be03000000     mov esi, 3
0x00002d7a      e881530000     call sym.quotearg_n_style_colon
0x00002d7f      4889c5         mov rbp, rax
0x00002d82      4531e4         xor r12d, r12d                          ; /src:639
0x00002d85      e846e8ffff     call sym.imp.__errno_location           ; /src:636
0x00002d8a      8b30           mov esi, dword [rax]
0x00002d8c      488d15e26f00.  lea rdx, [0x00009d75]                   ; "%s"
0x00002d93      31ff           xor edi, edi
0x00002d95      31c0           xor eax, eax
0x00002d97      4889e9         mov rcx, rbp
0x00002d9a      e891eaffff     call sym.imp.error
0x00002d9f      48391d0a9320.  cmp qword [obj.stdin], rbx              ; /src:637 ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20c0b0:8]=0
0x00002da6      74b9           je 0x2d61
0x00002da8      4889df         mov rdi, rbx                            ; /src:638
0x00002dab      e8005e0000     call sym.rpl_fclose
0x00002db0      4883c408       add rsp, 8                              ; /src:649
0x00002db4      4489e0         mov eax, r12d
0x00002db7      5b             pop rbx
0x00002db8      5d             pop rbp
0x00002db9      415c           pop r12
0x00002dbb      415d           pop r13
0x00002dbd      c3             ret
0x00002dbe      6690           nop
0x00002dc0      488d35bb6400.  lea rsi, [0x00009282]                   ; /src:614 ; "r"
0x00002dc7      4889ef         mov rdi, rbp
0x00002dca      4989d5         mov r13, rdx
0x00002dcd      e84e370000     call sym.fopen_safer
0x00002dd2      4885c0         test rax, rax                           ; /src:615
0x00002dd5      4889c3         mov rbx, rax                            ; /src:614
0x00002dd8      7466           je 0x2e40                               ; /src:615
0x00002dda      4889c7         mov rdi, rax                            ; /src:627
0x00002ddd      be02000000     mov esi, 2
0x00002de2      e809370000     call sym.fadvise
0x00002de7      4c89e6         mov rsi, r12                            ; /src:632
0x00002dea      4889df         mov rdi, rbx
0x00002ded      e8ae360000     call sym.sha256_stream
0x00002df2      85c0           test eax, eax                           ; /src:634
0x00002df4      0f8576ffffff   jne 0x2d70
0x00002dfa      4889df         mov rdi, rbx                            ; /src:642
0x00002dfd      e8ae5d0000     call sym.rpl_fclose
0x00002e02      85c0           test eax, eax
0x00002e04      0f8451ffffff   je 0x2d5b
0x00002e0a      4889ea         mov rdx, rbp                            ; /src:644
0x00002e0d      be03000000     mov esi, 3
0x00002e12      31ff           xor edi, edi
0x00002e14      e8e7520000     call sym.quotearg_n_style_colon
0x00002e19      4889c3         mov rbx, rax
0x00002e1c      4531e4         xor r12d, r12d                          ; /src:645
0x00002e1f      e8ace7ffff     call sym.imp.__errno_location           ; /src:644
0x00002e24      8b30           mov esi, dword [rax]
0x00002e26      488d15486f00.  lea rdx, [0x00009d75]                   ; "%s"
0x00002e2d      4889d9         mov rcx, rbx
0x00002e30      31ff           xor edi, edi
0x00002e32      31c0           xor eax, eax
0x00002e34      e8f7e9ffff     call sym.imp.error
0x00002e39      e923ffffff     jmp 0x2d61
0x00002e3e      6690           nop
0x00002e40      440fb625aa92.  movzx r12d, byte [obj.ignore_missing]   ; /src:617 ; [0x20c0f2:1]=0
0x00002e48      e883e7ffff     call sym.imp.__errno_location
0x00002e4d      4889c3         mov rbx, rax
0x00002e50      4584e4         test r12b, r12b
0x00002e53      7405           je 0x2e5a
0x00002e55      833802         cmp dword [rax], 2
0x00002e58      7436           je 0x2e90
0x00002e5a      4889ea         mov rdx, rbp                            ; /src:622
0x00002e5d      be03000000     mov esi, 3
0x00002e62      31ff           xor edi, edi
0x00002e64      e897520000     call sym.quotearg_n_style_colon
0x00002e69      8b33           mov esi, dword [rbx]
0x00002e6b      488d15036f00.  lea rdx, [0x00009d75]                   ; "%s"
0x00002e72      4889c1         mov rcx, rax
0x00002e75      31ff           xor edi, edi
0x00002e77      31c0           xor eax, eax
0x00002e79      4531e4         xor r12d, r12d                          ; /src:623
0x00002e7c      e8afe9ffff     call sym.imp.error                      ; /src:622
0x00002e81      e9dbfeffff     jmp 0x2d61
0x00002e86      662e0f1f8400.  nop word cs:[rax + rax]
0x00002e90      41c6450001     mov byte [r13], 1                       ; /src:619
0x00002e95      e9c7feffff     jmp 0x2d61
0x00002e9a      660f1f440000   nop word [rax + rax]
;-- usage:
0x00002ea0      4155           push r13                                ; /src:224
0x00002ea2      4154           push r12
0x00002ea4      ba05000000     mov edx, 5                              ; /src:226
0x00002ea9      55             push rbp                                ; /src:224
0x00002eaa      53             push rbx
0x00002eab      89fd           mov ebp, edi
0x00002ead      4881ec880000.  sub rsp, 0x88
0x00002eb4      488b1d659220.  mov rbx, qword [obj.program_name]       ; [0x20c120:8]=0
0x00002ebb      64488b042528.  mov rax, qword fs:[0x28]
0x00002ec4      4889442478     mov qword [rsp + 0x78], rax
0x00002ec9      31c0           xor eax, eax
0x00002ecb      85ff           test edi, edi                           ; /src:225
0x00002ecd      742e           je 0x2efd
0x00002ecf      488d35a26400.  lea rsi, str.Try___s___help__for_more_information. ; /src:226 ; 0x9378 ; "Try '%s --help' for more information.\n"
0x00002ed6      31ff           xor edi, edi
0x00002ed8      e883e7ffff     call sym.imp.dcgettext
0x00002edd      488b3dfc9120.  mov rdi, qword [obj.stderr]             ; .//ib:97 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20c0e0:8]=0
0x00002ee4      4889c2         mov rdx, rax
0x00002ee7      4889d9         mov rcx, rbx
0x00002eea      be01000000     mov esi, 1
0x00002eef      31c0           xor eax, eax
0x00002ef1      e8aae9ffff     call sym.imp.__fprintf_chk
0x00002ef6      89ef           mov edi, ebp                            ; /src:295
0x00002ef8      e883e9ffff     call sym.imp.exit
0x00002efd      488d359c6400.  lea rsi, str.Usage:__s__OPTION_...__FILE_...__Print_or_check__s___d_bit__checksums. ; /src:229 ; 0x93a0 ; "Usage: %s [OPTION]... [FILE]...\nPrint or check %s (%d-bit) checksums.\n"
0x00002f04      31ff           xor edi, edi
0x00002f06      e855e7ffff     call sym.imp.dcgettext
0x00002f0b      488d0da26200.  lea rcx, str.SHA256                     ; .//ib:104 ; 0x91b4 ; "SHA256"
0x00002f12      41b800010000   mov r8d, 0x100
0x00002f18      4889da         mov rdx, rbx
0x00002f1b      4889c6         mov rsi, rax
0x00002f1e      bf01000000     mov edi, 1
0x00002f23      31c0           xor eax, eax
0x00002f25      e8e6e8ffff     call sym.imp.__printf_chk
0x00002f2a      488b1d779120.  mov rbx, qword [obj.stdout]             ; ../coreutils-8.31/src/5sum.c:580 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c0a8:8]=0
0x00002f31      488d35b06400.  lea rsi, str.With_no_FILE__or_when_FILE_is____read_standard_input. ; 0x93e8 ; "\nWith no FILE, or when FILE is -, read standard input.\n"
0x00002f38      ba05000000     mov edx, 5
0x00002f3d      31ff           xor edi, edi
0x00002f3f      e81ce7ffff     call sym.imp.dcgettext
0x00002f44      4889de         mov rsi, rbx
0x00002f47      4889c7         mov rdi, rax
0x00002f4a      e8f1e7ffff     call sym.imp.fputs_unlocked
0x00002f4f      488b1d529120.  mov rbx, qword [obj.stdout]             ; /src:244 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c0a8:8]=0
0x00002f56      488d35c36400.  lea rsi, str.b____binary_________read_in_binary_mode ; 0x9420 ; "\n  -b, --binary         read in binary mode\n"
0x00002f5d      ba05000000     mov edx, 5
0x00002f62      31ff           xor edi, edi
0x00002f64      e8f7e6ffff     call sym.imp.dcgettext
0x00002f69      4889de         mov rsi, rbx
0x00002f6c      4889c7         mov rdi, rax
0x00002f6f      e8cce7ffff     call sym.imp.fputs_unlocked
0x00002f74      488d35d56400.  lea rsi, str.c____check__________read__s_sums_from_the_FILEs_and_check_them ; /src:249 ; 0x9450 ; "  -c, --check          read %s sums from the FILEs and check them\n"
0x00002f7b      31ff           xor edi, edi
0x00002f7d      ba05000000     mov edx, 5
0x00002f82      e8d9e6ffff     call sym.imp.dcgettext
0x00002f87      488d15266200.  lea rdx, str.SHA256                     ; .//ib:104 ; 0x91b4 ; "SHA256"
0x00002f8e      4889c6         mov rsi, rax
0x00002f91      bf01000000     mov edi, 1
0x00002f96      31c0           xor eax, eax
0x00002f98      e873e8ffff     call sym.imp.__printf_chk
0x00002f9d      488b1d049120.  mov rbx, qword [obj.stdout]             ; /src:258 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c0a8:8]=0
0x00002fa4      488d35ed6400.  lea rsi, str.tag____________create_a_BSD_style_checksum ; 0x9498 ; "      --tag            create a BSD-style checksum\n"
0x00002fab      ba05000000     mov edx, 5
0x00002fb0      31ff           xor edi, edi
0x00002fb2      e8a9e6ffff     call sym.imp.dcgettext
0x00002fb7      4889de         mov rsi, rbx
0x00002fba      4889c7         mov rdi, rax
0x00002fbd      e87ee7ffff     call sym.imp.fputs_unlocked
0x00002fc2      488b1ddf9020.  mov rbx, qword [obj.stdout]             ; /src:266 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c0a8:8]=0
0x00002fc9      488d35006500.  lea rsi, str.t____text___________read_in_text_mode__default ; 0x94d0 ; "  -t, --text           read in text mode (default)\n"
0x00002fd0      ba05000000     mov edx, 5
0x00002fd5      31ff           xor edi, edi
0x00002fd7      e884e6ffff     call sym.imp.dcgettext
0x00002fdc      4889de         mov rsi, rbx
0x00002fdf      4889c7         mov rdi, rax
0x00002fe2      e859e7ffff     call sym.imp.fputs_unlocked
0x00002fe7      488b1dba9020.  mov rbx, qword [obj.stdout]             ; /src:269 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c0a8:8]=0
0x00002fee      488d35136500.  lea rsi, str.z____zero___________end_each_output_line_with_NUL__not_newline__________________________and_disable_file_name_escaping ; 0x9508 ; "  -z, --zero           end each output line with NUL, not newline,\n                       and disable file name escaping\n"
0x00002ff5      ba05000000     mov edx, 5
0x00002ffa      31ff           xor edi, edi
0x00002ffc      e85fe6ffff     call sym.imp.dcgettext
0x00003001      4889de         mov rsi, rbx
0x00003004      4889c7         mov rdi, rax
0x00003007      e834e7ffff     call sym.imp.fputs_unlocked
0x0000300c      488b1d959020.  mov rbx, qword [obj.stdout]             ; /src:273 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c0a8:8]=0
0x00003013      488d356e6500.  lea rsi, str.The_following_five_options_are_useful_only_when_verifying_checksums:__________ignore_missing__don_t_fail_or_report_status_for_missing_files__________quiet__________don_t_print_OK_for_each_successfully_verified_file__________status_________don_t_output_anything__status_code_shows_success__________strict_________exit_non_zero_for_improperly_formatted_checksum_lines_____w____warn___________warn_about_improperly_formatted_checksum_lines ; 0x9588 ; "\nThe following five options are useful only when verifying checksums:\n      --ignore-missing  don't fail or report status for missing files\n      --quiet          don't print OK for each successfully verified file\n      --status         don't output anything, status code shows success\n      --strict         exit non-zero for improperly formatted checksum lines\n  -w, --warn           warn about improperly formatted checksum lines\n\n"
0x0000301a      ba05000000     mov edx, 5
0x0000301f      31ff           xor edi, edi
0x00003021      e83ae6ffff     call sym.imp.dcgettext
0x00003026      4889de         mov rsi, rbx
0x00003029      4889c7         mov rdi, rax
0x0000302c      e80fe7ffff     call sym.imp.fputs_unlocked
0x00003031      488b1d709020.  mov rbx, qword [obj.stdout]             ; /src:283 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c0a8:8]=0
0x00003038      488d35016700.  lea rsi, str.help_____display_this_help_and_exit ; 0x9740 ; "      --help     display this help and exit\n"
0x0000303f      ba05000000     mov edx, 5
0x00003044      31ff           xor edi, edi
0x00003046      e815e6ffff     call sym.imp.dcgettext
0x0000304b      4889de         mov rsi, rbx
0x0000304e      4889c7         mov rdi, rax
0x00003051      e8eae6ffff     call sym.imp.fputs_unlocked
0x00003056      488b1d4b9020.  mov rbx, qword [obj.stdout]             ; /src:284 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c0a8:8]=0
0x0000305d      488d350c6700.  lea rsi, str.version__output_version_information_and_exit ; 0x9770 ; "      --version  output version information and exit\n"
0x00003064      ba05000000     mov edx, 5
0x00003069      31ff           xor edi, edi
0x0000306b      e8f0e5ffff     call sym.imp.dcgettext
0x00003070      4889de         mov rsi, rbx
0x00003073      4889c7         mov rdi, rax
0x00003076      488d1d2d6100.  lea rbx, str.sha256sum                  ; ../coreutils-8.31/src/5sum.c:633 ; 0x91aa ; "sha256sum"
0x0000307d      e8bee6ffff     call sym.imp.fputs_unlocked             ; /src:284
0x00003082      488d351f6700.  lea rsi, str.The_sums_are_computed_as_described_in__s.__When_checking__the_input__should_be_a_former_output_of_this_program.__The_default_mode_is_to_print_a__line_with_checksum__a_space__a_character_indicating_input_mode______for_binary_______for_text_or_where_binary_is_insignificant___and_name_for_each_FILE. ; /src:285 ; 0x97a8 ; "\nThe sums are computed as described in %s.  When checking, the input\nshould be a former output of this program.  The default mode is to print a\nline with checksum, a space, a character indicating input mode ('*' for binary,\n' ' for text or where binary is insignificant), and name for each FILE.\n"
0x00003089      31ff           xor edi, edi
0x0000308b      ba05000000     mov edx, 5
0x00003090      e8cbe5ffff     call sym.imp.dcgettext
0x00003095      488d151f6100.  lea rdx, str.FIPS_180_2                 ; .//ib:104 ; 0x91bb ; "FIPS-180-2"
0x0000309c      4889c6         mov rsi, rax
0x0000309f      bf01000000     mov edi, 1
0x000030a4      31c0           xor eax, eax
0x000030a6      e865e7ffff     call sym.imp.__printf_chk
0x000030ab      488d05146100.  lea rax, [0x000091c6]                   ; ../coreutils-8.31/src/5sum.c:633 ; "["
0x000030b2      488d0d4e6100.  lea rcx, str.sha384sum                  ; 0x9207 ; "sha384sum"
0x000030b9      48895c2430     mov qword [rsp + 0x30], rbx
0x000030be      48c744246000.  mov qword [rsp + 0x60], 0
0x000030c7      48c744246800.  mov qword [rsp + 0x68], 0
0x000030d0      4889e2         mov rdx, rsp                            ; ../coreutils-8.31/src/5sum.c:644
0x000030d3      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/src/5sum.c:633
0x000030d7      488d05ea6000.  lea rax, str.test_invocation            ; 0x91c8 ; "test invocation"
0x000030de      48894c2440     mov qword [rsp + 0x40], rcx
0x000030e3      488d0d276100.  lea rcx, str.sha512sum                  ; 0x9211 ; "sha512sum"
0x000030ea      4889442408     mov qword [rsp + 8], rax
0x000030ef      488d05406100.  lea rax, [0x00009236]                   ; "coreutils"
0x000030f6      48894c2450     mov qword [rsp + 0x50], rcx
0x000030fb      4889442410     mov qword [rsp + 0x10], rax
0x00003100      488d05d16000.  lea rax, str.Multi_call_invocation      ; 0x91d8 ; "Multi-call invocation"
0x00003107      4889442418     mov qword [rsp + 0x18], rax
0x0000310c      488d05db6000.  lea rax, str.sha224sum                  ; 0x91ee ; "sha224sum"
0x00003113      4889442420     mov qword [rsp + 0x20], rax
0x00003118      488d05d96000.  lea rax, str.sha2_utilities             ; 0x91f8 ; "sha2 utilities"
0x0000311f      4889442428     mov qword [rsp + 0x28], rax
0x00003124      4889442438     mov qword [rsp + 0x38], rax
0x00003129      4889442448     mov qword [rsp + 0x48], rax
0x0000312e      4889442458     mov qword [rsp + 0x58], rax
0x00003133      0f1f440000     nop dword [rax + rax]
0x00003138      4883c210       add rdx, 0x10                           ; ../coreutils-8.31/src/5sum.c:647
0x0000313c      488b3a         mov rdi, qword [rdx]                    ; ../coreutils-8.31/src/5sum.c:646
0x0000313f      4885ff         test rdi, rdi
0x00003142      7413           je 0x3157
0x00003144      b90a000000     mov ecx, 0xa
0x00003149      4889de         mov rsi, rbx
0x0000314c      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000314e      0f97c0         seta al
0x00003151      1c00           sbb al, 0
0x00003153      84c0           test al, al
0x00003155      75e1           jne 0x3138
0x00003157      4c8b6208       mov r12, qword [rdx + 8]                ; ../coreutils-8.31/src/5sum.c:649
0x0000315b      31ff           xor edi, edi                            ; ../coreutils-8.31/src/5sum.c:652
0x0000315d      ba05000000     mov edx, 5
0x00003162      488d35b26000.  lea rsi, str.s_online_help:___s         ; 0x921b ; "\n%s online help: <%s>\n"
0x00003169      4d85e4         test r12, r12                           ; ../coreutils-8.31/src/5sum.c:649
0x0000316c      0f84c1000000   je 0x3233
0x00003172      e8e9e4ffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/5sum.c:652
0x00003177      488d0d5a6700.  lea rcx, str.https:__www.gnu.org_software_coreutils ; .//ib:104 ; 0x98d8 ; "https://www.gnu.org/software/coreutils/"
0x0000317e      488d15ad6000.  lea rdx, str.GNU_coreutils              ; 0x9232 ; "GNU coreutils"
0x00003185      4889c6         mov rsi, rax
0x00003188      bf01000000     mov edi, 1
0x0000318d      31c0           xor eax, eax
0x0000318f      e87ce6ffff     call sym.imp.__printf_chk
0x00003194      31f6           xor esi, esi                            ; ../coreutils-8.31/src/5sum.c:656
0x00003196      bf05000000     mov edi, 5
0x0000319b      e860e6ffff     call sym.imp.setlocale
0x000031a0      4885c0         test rax, rax                           ; ../coreutils-8.31/src/5sum.c:657
0x000031a3      741c           je 0x31c1
0x000031a5      488d35946000.  lea rsi, [0x00009240]                   ; "en_"
0x000031ac      ba03000000     mov edx, 3
0x000031b1      4889c7         mov rdi, rax
0x000031b4      e827e4ffff     call sym.imp.strncmp
0x000031b9      85c0           test eax, eax
0x000031bb      0f8507010000   jne 0x32c8
0x000031c1      488d357c6000.  lea rsi, str.Full_documentation___s_s   ; ../coreutils-8.31/src/5sum.c:666 ; 0x9244 ; "Full documentation <%s%s>\n"
0x000031c8      31ff           xor edi, edi
0x000031ca      ba05000000     mov edx, 5
0x000031cf      e88ce4ffff     call sym.imp.dcgettext
0x000031d4      488d0dcf5f00.  lea rcx, str.sha256sum                  ; .//ib:104 ; 0x91aa ; "sha256sum"
0x000031db      488d15f66600.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x98d8 ; "https://www.gnu.org/software/coreutils/"
0x000031e2      4889c6         mov rsi, rax
0x000031e5      bf01000000     mov edi, 1
0x000031ea      31c0           xor eax, eax
0x000031ec      e81fe6ffff     call sym.imp.__printf_chk
0x000031f1      4939dc         cmp r12, rbx                            ; ../coreutils-8.31/src/5sum.c:668
0x000031f4      488d0de75f00.  lea rcx, [0x000091e2]                   ; " invocation"
0x000031fb      488d1d3f7100.  lea rbx, [0x0000a341]
0x00003202      480f44d9       cmove rbx, rcx
0x00003206      488d353b6700.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x9948 ; "or available locally via: info '(coreutils) %s%s'\n"
0x0000320d      31ff           xor edi, edi
0x0000320f      ba05000000     mov edx, 5
0x00003214      e847e4ffff     call sym.imp.dcgettext
0x00003219      4889d9         mov rcx, rbx                            ; .//ib:104
0x0000321c      4889c6         mov rsi, rax
0x0000321f      4c89e2         mov rdx, r12
0x00003222      bf01000000     mov edi, 1
0x00003227      31c0           xor eax, eax
0x00003229      e8e2e5ffff     call sym.imp.__printf_chk
0x0000322e      e9c3fcffff     jmp 0x2ef6
0x00003233      e828e4ffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/5sum.c:652
0x00003238      488d0d996600.  lea rcx, str.https:__www.gnu.org_software_coreutils ; .//ib:104 ; 0x98d8 ; "https://www.gnu.org/software/coreutils/"
0x0000323f      488d15ec5f00.  lea rdx, str.GNU_coreutils              ; 0x9232 ; "GNU coreutils"
0x00003246      4889c6         mov rsi, rax
0x00003249      bf01000000     mov edi, 1
0x0000324e      31c0           xor eax, eax
0x00003250      e8bbe5ffff     call sym.imp.__printf_chk
0x00003255      31f6           xor esi, esi                            ; ../coreutils-8.31/src/5sum.c:656
0x00003257      bf05000000     mov edi, 5
0x0000325c      e89fe5ffff     call sym.imp.setlocale
0x00003261      4885c0         test rax, rax                           ; ../coreutils-8.31/src/5sum.c:657
0x00003264      7418           je 0x327e
0x00003266      488d35d35f00.  lea rsi, [0x00009240]                   ; "en_"
0x0000326d      ba03000000     mov edx, 3
0x00003272      4889c7         mov rdi, rax
0x00003275      e866e3ffff     call sym.imp.strncmp
0x0000327a      85c0           test eax, eax
0x0000327c      7543           jne 0x32c1
0x0000327e      488d35bf5f00.  lea rsi, str.Full_documentation___s_s   ; ../coreutils-8.31/src/5sum.c:666 ; 0x9244 ; "Full documentation <%s%s>\n"
0x00003285      ba05000000     mov edx, 5
0x0000328a      31ff           xor edi, edi
0x0000328c      4c8d25175f00.  lea r12, str.sha256sum                  ; ../coreutils-8.31/src/5sum.c:643 ; 0x91aa ; "sha256sum"
0x00003293      488d1d485f00.  lea rbx, [0x000091e2]                   ; ../coreutils-8.31/src/5sum.c:668 ; " invocation"
0x0000329a      e8c1e3ffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/5sum.c:666
0x0000329f      488d0d045f00.  lea rcx, str.sha256sum                  ; .//ib:104 ; 0x91aa ; "sha256sum"
0x000032a6      488d152b6600.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x98d8 ; "https://www.gnu.org/software/coreutils/"
0x000032ad      4889c6         mov rsi, rax
0x000032b0      bf01000000     mov edi, 1
0x000032b5      31c0           xor eax, eax
0x000032b7      e854e5ffff     call sym.imp.__printf_chk
0x000032bc      e945ffffff     jmp 0x3206
0x000032c1      4c8d25e25e00.  lea r12, str.sha256sum                  ; ../coreutils-8.31/src/5sum.c:643 ; 0x91aa ; "sha256sum"
0x000032c8      4c8b2dd98d20.  mov r13, qword [obj.stdout]             ; ../coreutils-8.31/src/5sum.c:663 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c0a8:8]=0
0x000032cf      488d352a6600.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x9900 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x000032d6      31ff           xor edi, edi
0x000032d8      ba05000000     mov edx, 5
0x000032dd      e87ee3ffff     call sym.imp.dcgettext
0x000032e2      4c89ee         mov rsi, r13
0x000032e5      4889c7         mov rdi, rax
0x000032e8      e853e4ffff     call sym.imp.fputs_unlocked
0x000032ed      e9cffeffff     jmp 0x31c1
0x000032f2      662e0f1f8400.  nop word cs:[rax + rax]
0x000032fc      0f1f4000       nop dword [rax]
;-- close_stdout_set_file_name:
0x00003300      48893d118e20.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x20c118:8]=0
0x00003307      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00003308      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00003310      40883df98d20.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x20c110:1]=0
0x00003317      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00003318      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00003320      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00003321      53             push rbx
0x00003322      4883ec08       sub rsp, 8
0x00003326      488b3d7b8d20.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c0a8:8]=0
0x0000332d      e8ae5c0000     call sym.close_stream
0x00003332      85c0           test eax, eax
0x00003334      7416           je 0x334c
0x00003336      e895e2ffff     call sym.imp.__errno_location
0x0000333b      803dce8d2000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x20c110:1]=0
0x00003342      4889c3         mov rbx, rax
0x00003345      741c           je 0x3363
0x00003347      833820         cmp dword [rax], 0x20
0x0000334a      7517           jne 0x3363
0x0000334c      488b3d8d8d20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20c0e0:8]=0
0x00003353      e8885c0000     call sym.close_stream
0x00003358      85c0           test eax, eax
0x0000335a      7546           jne 0x33a2
0x0000335c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00003360      5b             pop rbx
0x00003361      5d             pop rbp
0x00003362      c3             ret
0x00003363      488d35fb6900.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x9d65 ; "write error"
0x0000336a      31ff           xor edi, edi
0x0000336c      ba05000000     mov edx, 5
0x00003371      e8eae2ffff     call sym.imp.dcgettext
0x00003376      488b3d9b8d20.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x20c118:8]=0
0x0000337d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00003380      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00003383      7428           je 0x33ad
0x00003385      e8464d0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x0000338a      8b33           mov esi, dword [rbx]
0x0000338c      488d15de6900.  lea rdx, str.s:__s                      ; 0x9d71 ; "%s: %s"
0x00003393      4889c1         mov rcx, rax
0x00003396      4989e8         mov r8, rbp
0x00003399      31ff           xor edi, edi
0x0000339b      31c0           xor eax, eax
0x0000339d      e88ee4ffff     call sym.imp.error
0x000033a2      8b3d788c2000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x20c020:4]=1
0x000033a8      e843e2ffff     call sym.imp._exit
0x000033ad      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x000033af      488d15bf6900.  lea rdx, [0x00009d75]                   ; "%s"
0x000033b6      4889c1         mov rcx, rax
0x000033b9      31ff           xor edi, edi
0x000033bb      31c0           xor eax, eax
0x000033bd      e86ee4ffff     call sym.imp.error
0x000033c2      ebde           jmp 0x33a2
0x000033c4      662e0f1f8400.  nop word cs:[rax + rax]
0x000033ce      6690           nop
;-- sha256_init_ctx:
0x000033d0      48b867e6096a.  movabs rax, 0xbb67ae856a09e667          ; ../coreutils-8.31/lib/sha256.c:64
0x000033da      48c747200000.  mov qword [rdi + 0x20], 0               ; ../coreutils-8.31/lib/sha256.c:72
0x000033e2      48c747280000.  mov qword [rdi + 0x28], 0               ; ../coreutils-8.31/lib/sha256.c:74
0x000033ea      488907         mov qword [rdi], rax                    ; ../coreutils-8.31/lib/sha256.c:65
0x000033ed      48b872f36e3c.  movabs rax, 0xa54ff53a3c6ef372          ; ../coreutils-8.31/lib/sha256.c:66
0x000033f7      48894708       mov qword [rdi + 8], rax
0x000033fb      48b87f520e51.  movabs rax, 0x9b05688c510e527f          ; ../coreutils-8.31/lib/sha256.c:68
0x00003405      48894710       mov qword [rdi + 0x10], rax
0x00003409      48b8abd9831f.  movabs rax, 0x5be0cd191f83d9ab          ; ../coreutils-8.31/lib/sha256.c:70
0x00003413      48894718       mov qword [rdi + 0x18], rax
0x00003417      c3             ret                                     ; ../coreutils-8.31/lib/sha256.c:76
0x00003418      0f1f84000000.  nop dword [rax + rax]
;-- sha224_init_ctx:
0x00003420      48b8d89e05c1.  movabs rax, 0x367cd507c1059ed8          ; ../coreutils-8.31/lib/sha256.c:80
0x0000342a      48c747200000.  mov qword [rdi + 0x20], 0               ; ../coreutils-8.31/lib/sha256.c:88
0x00003432      48c747280000.  mov qword [rdi + 0x28], 0               ; ../coreutils-8.31/lib/sha256.c:90
0x0000343a      488907         mov qword [rdi], rax                    ; ../coreutils-8.31/lib/sha256.c:81
0x0000343d      48b817dd7030.  movabs rax, 0xf70e59393070dd17          ; ../coreutils-8.31/lib/sha256.c:82
0x00003447      48894708       mov qword [rdi + 8], rax
0x0000344b      48b8310bc0ff.  movabs rax, 0x68581511ffc00b31          ; ../coreutils-8.31/lib/sha256.c:84
0x00003455      48894710       mov qword [rdi + 0x10], rax
0x00003459      48b8a78ff964.  movabs rax, 0xbefa4fa464f98fa7          ; ../coreutils-8.31/lib/sha256.c:86
0x00003463      48894718       mov qword [rdi + 0x18], rax
0x00003467      c3             ret                                     ; ../coreutils-8.31/lib/sha256.c:92
0x00003468      0f1f84000000.  nop dword [rax + rax]
;-- sha256_read_ctx:
0x00003470      4889f0         mov rax, rsi                            ; ../coreutils-8.31/lib/sha256.c:107
0x00003473      31d2           xor edx, edx
0x00003475      0f1f00         nop dword [rax]
0x00003478      8b0c17         mov ecx, dword [rdi + rdx]              ; byteswap.h:47   return __builtin_bswap32 (__bsx);
0x0000347b      0fc9           bswap ecx
0x0000347d      890c10         mov dword [rax + rdx], ecx              ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00003480      4883c204       add rdx, 4
0x00003484      4883fa20       cmp rdx, 0x20                           ; "@"
0x00003488      75ee           jne 0x3478
0x0000348a      f3c3           ret
0x0000348c      0f1f4000       nop dword [rax]
;-- sha224_read_ctx:
0x00003490      4889f0         mov rax, rsi                            ; string_fortified.h:-98
0x00003493      31d2           xor edx, edx
0x00003495      0f1f00         nop dword [rax]
0x00003498      8b0c17         mov ecx, dword [rdi + rdx]
0x0000349b      0fc9           bswap ecx
0x0000349d      890c10         mov dword [rax + rdx], ecx
0x000034a0      4883c204       add rdx, 4
0x000034a4      4883fa1c       cmp rdx, 0x1c
0x000034a8      75ee           jne 0x3498
0x000034aa      f3c3           ret
0x000034ac      0f1f4000       nop dword [rax]
;-- sha256_process_block:
0x000034b0      4157           push r15
0x000034b2      4156           push r14
0x000034b4      4989ff         mov r15, rdi
0x000034b7      4155           push r13
0x000034b9      4154           push r12
0x000034bb      55             push rbp
0x000034bc      53             push rbx
0x000034bd      4889d3         mov rbx, rdx
0x000034c0      4881ece80000.  sub rsp, 0xe8
0x000034c7      448b6304       mov r12d, dword [rbx + 4]
0x000034cb      448b6b08       mov r13d, dword [rbx + 8]               ; ../coreutils-8.31/lib/sha256.c:146
0x000034cf      64488b042528.  mov rax, qword fs:[0x28]
0x000034d8      48898424d800.  mov qword [rsp + 0xd8], rax             ; ../coreutils-8.31/lib/sha256.c:149
0x000034e0      31c0           xor eax, eax
0x000034e2      4889f0         mov rax, rsi
0x000034e5      48897c2440     mov qword [rsp + 0x40], rdi
0x000034ea      488994248000.  mov qword [rsp + 0x80], rdx
0x000034f2      4883e0fc       and rax, 0xfffffffffffffffc
0x000034f6      8b12           mov edx, dword [rdx]
0x000034f8      448b730c       mov r14d, dword [rbx + 0xc]             ; ../coreutils-8.31/lib/sha256.c:156
0x000034fc      4801f8         add rax, rdi                            ; ../coreutils-8.31/lib/sha256.c:157
0x000034ff      31ff           xor edi, edi
0x00003501      448b5310       mov r10d, dword [rbx + 0x10]
0x00003505      4989c3         mov r11, rax
0x00003508      4889442478     mov qword [rsp + 0x78], rax
0x0000350d      89f0           mov eax, esi
0x0000350f      034320         add eax, dword [rbx + 0x20]
0x00003512      448b4314       mov r8d, dword [rbx + 0x14]
0x00003516      448b4b18       mov r9d, dword [rbx + 0x18]
0x0000351a      8b4b1c         mov ecx, dword [rbx + 0x1c]
0x0000351d      894320         mov dword [rbx + 0x20], eax
0x00003520      8b4324         mov eax, dword [rbx + 0x24]
0x00003523      400f92c7       setb dil
0x00003527      48c1ee20       shr rsi, 0x20
0x0000352b      01f0           add eax, esi
0x0000352d      01f8           add eax, edi
0x0000352f      4d39df         cmp r15, r11
0x00003532      894324         mov dword [rbx + 0x24], eax
0x00003535      0f83d6280000   jae 0x5e11
0x0000353b      488d84249000.  lea rax, [rsp + 0x90]
0x00003543      894c2464       mov dword [rsp + 0x64], ecx
0x00003547      44894c2460     mov dword [rsp + 0x60], r9d
0x0000354c      448944245c     mov dword [rsp + 0x5c], r8d
0x00003551      4489542458     mov dword [rsp + 0x58], r10d
0x00003556      4489c3         mov ebx, r8d
0x00003559      4489742454     mov dword [rsp + 0x54], r14d
0x0000355e      44896c2450     mov dword [rsp + 0x50], r13d
0x00003563      4489e5         mov ebp, r12d
0x00003566      448964244c     mov dword [rsp + 0x4c], r12d
0x0000356b      89542474       mov dword [rsp + 0x74], edx
0x0000356f      488984248800.  mov qword [rsp + 0x88], rax
0x00003577      660f1f840000.  nop word [rax + rax]
0x00003580      488b7c2440     mov rdi, qword [rsp + 0x40]
0x00003585      4c8b84248800.  mov r8, qword [rsp + 0x88]
0x0000358d      31c0           xor eax, eax
0x0000358f      90             nop
0x00003590      8b3407         mov esi, dword [rdi + rax]
0x00003593      0fce           bswap esi
0x00003595      41893400       mov dword [r8 + rax], esi
0x00003599      4883c004       add rax, 4
0x0000359d      4883f840       cmp rax, 0x40                           ; segment.PHDR
0x000035a1      75ed           jne 0x3590
0x000035a3      4489d6         mov esi, r10d
0x000035a6      4489d7         mov edi, r10d
0x000035a9      4189d3         mov r11d, edx
0x000035ac      c1ce06         ror esi, 6
0x000035af      c1c707         rol edi, 7
0x000035b2      41c1c30a       rol r11d, 0xa                           ; ../coreutils-8.31/lib/sha256.c:197
0x000035b6      89f0           mov eax, esi
0x000035b8      4489d6         mov esi, r10d
0x000035bb      4189d0         mov r8d, edx
0x000035be      c1ce0b         ror esi, 0xb
0x000035c1      4121e8         and r8d, ebp
0x000035c4      448bbc249400.  mov r15d, dword [rsp + 0x94]
0x000035cc      31c6           xor esi, eax
0x000035ce      89f8           mov eax, edi
0x000035d0      89d7           mov edi, edx
0x000035d2      31f0           xor eax, esi
0x000035d4      8bb424900000.  mov esi, dword [rsp + 0x90]
0x000035db      c1cf02         ror edi, 2
0x000035de      488344244040   add qword [rsp + 0x40], 0x40            ; segment.PHDR
                                                                       ; [0x40:8]=0x400000006
0x000035e4      448ba4249800.  mov r12d, dword [rsp + 0x98]
0x000035ec      8d8c0e982f8a.  lea ecx, [rsi + rcx + 0x428a2f98]
0x000035f3      8d3408         lea esi, [rax + rcx]
0x000035f6      89f8           mov eax, edi
0x000035f8      89d7           mov edi, edx
0x000035fa      c1cf0d         ror edi, 0xd
0x000035fd      89d9           mov ecx, ebx
0x000035ff      31c7           xor edi, eax
0x00003601      4431c9         xor ecx, r9d
0x00003604      4431df         xor edi, r11d
0x00003607      4189d3         mov r11d, edx
0x0000360a      4421d1         and ecx, r10d                           ; ../coreutils-8.31/lib/sha256.c:198
0x0000360d      4109eb         or r11d, ebp
0x00003610      4431c9         xor ecx, r9d
0x00003613      4489d8         mov eax, r11d
0x00003616      01f1           add ecx, esi
0x00003618      4421e8         and eax, r13d
0x0000361b      428d3431       lea esi, [rcx + r14]
0x0000361f      4409c0         or eax, r8d
0x00003622      01f8           add eax, edi
0x00003624      4489d7         mov edi, r10d
0x00003627      4189f3         mov r11d, esi
0x0000362a      31df           xor edi, ebx
0x0000362c      01c8           add eax, ecx
0x0000362e      438d8c0f9144.  lea ecx, [r15 + r9 + 0x71374491]
0x00003636      21f7           and edi, esi
0x00003638      41c1cb0b       ror r11d, 0xb
0x0000363c      4189c0         mov r8d, eax
0x0000363f      31df           xor edi, ebx
0x00003641      01f9           add ecx, edi
0x00003643      89f7           mov edi, esi
0x00003645      c1cf06         ror edi, 6
0x00003648      4131fb         xor r11d, edi
0x0000364b      89f7           mov edi, esi
0x0000364d      c1c707         rol edi, 7
0x00003650      4431df         xor edi, r11d
0x00003653      4189c3         mov r11d, eax
0x00003656      01cf           add edi, ecx
0x00003658      89c1           mov ecx, eax
0x0000365a      41c1cb02       ror r11d, 2
0x0000365e      c1c90d         ror ecx, 0xd
0x00003661      4121d0         and r8d, edx
0x00003664      468d0c2f       lea r9d, [rdi + r13]
0x00003668      4431d9         xor ecx, r11d
0x0000366b      4189c3         mov r11d, eax
0x0000366e      41c1c30a       rol r11d, 0xa
0x00003672      4431d9         xor ecx, r11d
0x00003675      4189c3         mov r11d, eax                           ; ../coreutils-8.31/lib/sha256.c:199
0x00003678      4109d3         or r11d, edx                            ; ../coreutils-8.31/lib/sha256.c:198
0x0000367b      4121eb         and r11d, ebp                           ; ../coreutils-8.31/lib/sha256.c:199
0x0000367e      4509c3         or r11d, r8d
0x00003681      458d841ccffb.  lea r8d, [r12 + rbx - 0x4a3f0431]
0x00003689      4489cb         mov ebx, r9d
0x0000368c      4101cb         add r11d, ecx
0x0000368f      c1cb0b         ror ebx, 0xb
0x00003692      4101fb         add r11d, edi
0x00003695      89f7           mov edi, esi
0x00003697      4431d7         xor edi, r10d
0x0000369a      4421cf         and edi, r9d
0x0000369d      4431d7         xor edi, r10d
0x000036a0      4101f8         add r8d, edi
0x000036a3      4489cf         mov edi, r9d
0x000036a6      c1cf06         ror edi, 6
0x000036a9      31fb           xor ebx, edi
0x000036ab      4489cf         mov edi, r9d
0x000036ae      c1c707         rol edi, 7
0x000036b1      31df           xor edi, ebx
0x000036b3      4489db         mov ebx, r11d
0x000036b6      4401c7         add edi, r8d
0x000036b9      4589d8         mov r8d, r11d
0x000036bc      c1cb02         ror ebx, 2
0x000036bf      41c1c80d       ror r8d, 0xd
0x000036c3      8d0c2f         lea ecx, [rdi + rbp]
0x000036c6      89c5           mov ebp, eax                            ; ../coreutils-8.31/lib/sha256.c:200
0x000036c8      4131d8         xor r8d, ebx
0x000036cb      4489db         mov ebx, r11d
0x000036ce      4421dd         and ebp, r11d
0x000036d1      c1c30a         rol ebx, 0xa
0x000036d4      4131d8         xor r8d, ebx
0x000036d7      89c3           mov ebx, eax
0x000036d9      4409db         or ebx, r11d
0x000036dc      21d3           and ebx, edx
0x000036de      09eb           or ebx, ebp
0x000036e0      4489dd         mov ebp, r11d
0x000036e3      4401c3         add ebx, r8d
0x000036e6      4189f0         mov r8d, esi
0x000036e9      01fb           add ebx, edi
0x000036eb      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x000036f2      4531c8         xor r8d, r9d
0x000036f5      4121c8         and r8d, ecx
0x000036f8      21dd           and ebp, ebx
0x000036fa      4131f0         xor r8d, esi
0x000036fd      468d9417a5db.  lea r10d, [rdi + r10 - 0x164a245b]
0x00003705      89cf           mov edi, ecx
0x00003707      c1cf0b         ror edi, 0xb
0x0000370a      4501c2         add r10d, r8d
0x0000370d      4189c8         mov r8d, ecx
0x00003710      41c1c806       ror r8d, 6
0x00003714      4431c7         xor edi, r8d
0x00003717      4189c8         mov r8d, ecx
0x0000371a      41c1c007       rol r8d, 7
0x0000371e      4131f8         xor r8d, edi
0x00003721      89df           mov edi, ebx
0x00003723      4501d0         add r8d, r10d
0x00003726      4189da         mov r10d, ebx
0x00003729      c1cf02         ror edi, 2
0x0000372c      41c1ca0d       ror r10d, 0xd
0x00003730      4401c2         add edx, r8d
0x00003733      4131fa         xor r10d, edi
0x00003736      89df           mov edi, ebx
0x00003738      c1c70a         rol edi, 0xa                            ; ../coreutils-8.31/lib/sha256.c:201
0x0000373b      4131fa         xor r10d, edi
0x0000373e      4489df         mov edi, r11d
0x00003741      09df           or edi, ebx
0x00003743      21c7           and edi, eax
0x00003745      09ef           or edi, ebp
0x00003747      89dd           mov ebp, ebx
0x00003749      4401d7         add edi, r10d
0x0000374c      4589ca         mov r10d, r9d
0x0000374f      4401c7         add edi, r8d
0x00003752      448b8424a000.  mov r8d, dword [rsp + 0xa0]
0x0000375a      4131ca         xor r10d, ecx
0x0000375d      4121d2         and r10d, edx
0x00003760      4189fe         mov r14d, edi
0x00003763      4531ca         xor r10d, r9d
0x00003766      458d84305bc2.  lea r8d, [r8 + rsi + 0x3956c25b]
0x0000376e      89d6           mov esi, edx
0x00003770      c1ce0b         ror esi, 0xb
0x00003773      4501d0         add r8d, r10d
0x00003776      4189d2         mov r10d, edx
0x00003779      41c1ca06       ror r10d, 6
0x0000377d      4431d6         xor esi, r10d
0x00003780      4189d2         mov r10d, edx
0x00003783      41c1c207       rol r10d, 7
0x00003787      4131f2         xor r10d, esi
0x0000378a      89fe           mov esi, edi
0x0000378c      4501c2         add r10d, r8d
0x0000378f      c1ce02         ror esi, 2
0x00003792      41c1ce0d       ror r14d, 0xd
0x00003796      468d0410       lea r8d, [rax + r10]
0x0000379a      4489f0         mov eax, r14d                           ; ../coreutils-8.31/lib/sha256.c:202
0x0000379d      21fd           and ebp, edi
0x0000379f      31f0           xor eax, esi
0x000037a1      89fe           mov esi, edi
0x000037a3      448bb424a400.  mov r14d, dword [rsp + 0xa4]
0x000037ab      c1c60a         rol esi, 0xa
0x000037ae      31f0           xor eax, esi
0x000037b0      89de           mov esi, ebx                            ; ../coreutils-8.31/lib/sha256.c:201
0x000037b2      09fe           or esi, edi                             ; ../coreutils-8.31/lib/sha256.c:202
0x000037b4      478d8c0ef111.  lea r9d, [r14 + r9 + 0x59f111f1]
0x000037bc      4589c6         mov r14d, r8d
0x000037bf      4421de         and esi, r11d
0x000037c2      41c1ce0b       ror r14d, 0xb
0x000037c6      09ee           or esi, ebp
0x000037c8      89fd           mov ebp, edi
0x000037ca      01c6           add esi, eax
0x000037cc      4489f0         mov eax, r14d
0x000037cf      4401d6         add esi, r10d
0x000037d2      4189ca         mov r10d, ecx
0x000037d5      4131d2         xor r10d, edx
0x000037d8      4189f6         mov r14d, esi
0x000037db      21f5           and ebp, esi
0x000037dd      4521c2         and r10d, r8d
0x000037e0      41c1c60a       rol r14d, 0xa
0x000037e4      4131ca         xor r10d, ecx
0x000037e7      4501ca         add r10d, r9d
0x000037ea      4589c1         mov r9d, r8d
0x000037ed      41c1c906       ror r9d, 6
0x000037f1      4431c8         xor eax, r9d
0x000037f4      4589c1         mov r9d, r8d
0x000037f7      41c1c107       rol r9d, 7
0x000037fb      4131c1         xor r9d, eax
0x000037fe      4501d1         add r9d, r10d
0x00003801      4189f2         mov r10d, esi
0x00003804      41c1ca02       ror r10d, 2
0x00003808      4501cb         add r11d, r9d
0x0000380b      4489d0         mov eax, r10d
0x0000380e      4189f2         mov r10d, esi                           ; ../coreutils-8.31/lib/sha256.c:203
0x00003811      41c1ca0d       ror r10d, 0xd
0x00003815      4131c2         xor r10d, eax
0x00003818      4531f2         xor r10d, r14d
0x0000381b      4189fe         mov r14d, edi                           ; ../coreutils-8.31/lib/sha256.c:202
0x0000381e      4109f6         or r14d, esi                            ; ../coreutils-8.31/lib/sha256.c:203
0x00003821      4489f0         mov eax, r14d
0x00003824      21d8           and eax, ebx
0x00003826      09e8           or eax, ebp
0x00003828      89f5           mov ebp, esi
0x0000382a      4401d0         add eax, r10d
0x0000382d      448b9424a800.  mov r10d, dword [rsp + 0xa8]
0x00003835      4401c8         add eax, r9d
0x00003838      4189d1         mov r9d, edx
0x0000383b      4531c1         xor r9d, r8d
0x0000383e      21c5           and ebp, eax
0x00003840      4521d9         and r9d, r11d
0x00003843      458d940aa482.  lea r10d, [r10 + rcx - 0x6dc07d5c]
0x0000384b      4489d9         mov ecx, r11d
0x0000384e      4131d1         xor r9d, edx
0x00003851      c1c90b         ror ecx, 0xb
0x00003854      4501ca         add r10d, r9d
0x00003857      4589d9         mov r9d, r11d
0x0000385a      41c1c906       ror r9d, 6
0x0000385e      4431c9         xor ecx, r9d
0x00003861      4589d9         mov r9d, r11d
0x00003864      41c1c107       rol r9d, 7
0x00003868      4131c9         xor r9d, ecx
0x0000386b      89c1           mov ecx, eax
0x0000386d      4501d1         add r9d, r10d
0x00003870      4189c2         mov r10d, eax
0x00003873      c1c902         ror ecx, 2
0x00003876      41c1ca0d       ror r10d, 0xd                           ; ../coreutils-8.31/lib/sha256.c:204
0x0000387a      4401cb         add ebx, r9d
0x0000387d      4131ca         xor r10d, ecx
0x00003880      89c1           mov ecx, eax
0x00003882      c1c10a         rol ecx, 0xa
0x00003885      4131ca         xor r10d, ecx
0x00003888      89f1           mov ecx, esi
0x0000388a      09c1           or ecx, eax
0x0000388c      21f9           and ecx, edi
0x0000388e      09e9           or ecx, ebp
0x00003890      89c5           mov ebp, eax
0x00003892      4401d1         add ecx, r10d
0x00003895      448b9424ac00.  mov r10d, dword [rsp + 0xac]
0x0000389d      4401c9         add ecx, r9d
0x000038a0      4589c1         mov r9d, r8d
0x000038a3      4531d9         xor r9d, r11d
0x000038a6      4121d9         and r9d, ebx
0x000038a9      458d9412d55e.  lea r10d, [r10 + rdx - 0x54e3a12b]
0x000038b1      89da           mov edx, ebx
0x000038b3      4531c1         xor r9d, r8d
0x000038b6      c1ca0b         ror edx, 0xb
0x000038b9      4501ca         add r10d, r9d
0x000038bc      4189d9         mov r9d, ebx
0x000038bf      41c1c906       ror r9d, 6
0x000038c3      4431ca         xor edx, r9d
0x000038c6      4189d9         mov r9d, ebx
0x000038c9      41c1c107       rol r9d, 7
0x000038cd      4131d1         xor r9d, edx
0x000038d0      89ca           mov edx, ecx
0x000038d2      4501d1         add r9d, r10d
0x000038d5      4189ca         mov r10d, ecx
0x000038d8      4401cf         add edi, r9d
0x000038db      c1ca02         ror edx, 2
0x000038de      41c1ca0d       ror r10d, 0xd
0x000038e2      4131d2         xor r10d, edx                           ; ../coreutils-8.31/lib/sha256.c:205
0x000038e5      89ca           mov edx, ecx
0x000038e7      21cd           and ebp, ecx
0x000038e9      c1c20a         rol edx, 0xa
0x000038ec      4131d2         xor r10d, edx
0x000038ef      89c2           mov edx, eax
0x000038f1      09ca           or edx, ecx
0x000038f3      21f2           and edx, esi
0x000038f5      09ea           or edx, ebp
0x000038f7      89cd           mov ebp, ecx
0x000038f9      4401d2         add edx, r10d
0x000038fc      448b9424b000.  mov r10d, dword [rsp + 0xb0]
0x00003904      4401ca         add edx, r9d
0x00003907      4589d9         mov r9d, r11d
0x0000390a      4131d9         xor r9d, ebx
0x0000390d      21d5           and ebp, edx
0x0000390f      4121f9         and r9d, edi
0x00003912      478d840298aa.  lea r8d, [r10 + r8 - 0x27f85568]
0x0000391a      4189fa         mov r10d, edi
0x0000391d      4531d9         xor r9d, r11d
0x00003920      41c1ca0b       ror r10d, 0xb
0x00003924      4501c1         add r9d, r8d
0x00003927      4189f8         mov r8d, edi
0x0000392a      41c1c806       ror r8d, 6
0x0000392e      4531c2         xor r10d, r8d
0x00003931      4189f8         mov r8d, edi
0x00003934      41c1c007       rol r8d, 7
0x00003938      4531d0         xor r8d, r10d
0x0000393b      4189d2         mov r10d, edx
0x0000393e      4501c8         add r8d, r9d
0x00003941      4189d1         mov r9d, edx
0x00003944      41c1ca02       ror r10d, 2
0x00003948      41c1c90d       ror r9d, 0xd
0x0000394c      4401c6         add esi, r8d
0x0000394f      4531d1         xor r9d, r10d
0x00003952      4189d2         mov r10d, edx
0x00003955      41c1c20a       rol r10d, 0xa
0x00003959      4531d1         xor r9d, r10d
0x0000395c      4189ca         mov r10d, ecx
0x0000395f      4109d2         or r10d, edx
0x00003962      4121c2         and r10d, eax
0x00003965      4109ea         or r10d, ebp
0x00003968      89d5           mov ebp, edx
0x0000396a      4501ca         add r10d, r9d
0x0000396d      448b8c24b400.  mov r9d, dword [rsp + 0xb4]
0x00003975      4501c2         add r10d, r8d
0x00003978      4189d8         mov r8d, ebx
0x0000397b      4131f8         xor r8d, edi
0x0000397e      4421d5         and ebp, r10d
0x00003981      4121f0         and r8d, esi
0x00003984      478d9c19015b.  lea r11d, [r9 + r11 + 0x12835b01]
0x0000398c      4189f1         mov r9d, esi
0x0000398f      4131d8         xor r8d, ebx
0x00003992      41c1c90b       ror r9d, 0xb
0x00003996      4501c3         add r11d, r8d
0x00003999      4189f0         mov r8d, esi
0x0000399c      41c1c806       ror r8d, 6
0x000039a0      4531c1         xor r9d, r8d
0x000039a3      4189f0         mov r8d, esi
0x000039a6      41c1c007       rol r8d, 7
0x000039aa      4531c8         xor r8d, r9d
0x000039ad      4589d1         mov r9d, r10d
0x000039b0      4501d8         add r8d, r11d
0x000039b3      4589d3         mov r11d, r10d
0x000039b6      41c1c902       ror r9d, 2
0x000039ba      41c1cb0d       ror r11d, 0xd
0x000039be      4401c0         add eax, r8d
0x000039c1      4531cb         xor r11d, r9d
0x000039c4      4589d1         mov r9d, r10d
0x000039c7      41c1c10a       rol r9d, 0xa
0x000039cb      4531cb         xor r11d, r9d
0x000039ce      4189d1         mov r9d, edx
0x000039d1      4509d1         or r9d, r10d
0x000039d4      4121c9         and r9d, ecx
0x000039d7      4109e9         or r9d, ebp
0x000039da      4489d5         mov ebp, r10d
0x000039dd      4501d9         add r9d, r11d
0x000039e0      4189fb         mov r11d, edi
0x000039e3      4501c1         add r9d, r8d
0x000039e6      448b8424b800.  mov r8d, dword [rsp + 0xb8]
0x000039ee      4131f3         xor r11d, esi
0x000039f1      4121c3         and r11d, eax
0x000039f4      4131fb         xor r11d, edi
0x000039f7      418d9c18be85.  lea ebx, [r8 + rbx + 0x243185be]
0x000039ff      4189c0         mov r8d, eax
0x00003a02      41c1c80b       ror r8d, 0xb
0x00003a06      4401db         add ebx, r11d
0x00003a09      4189c3         mov r11d, eax
0x00003a0c      41c1cb06       ror r11d, 6
0x00003a10      4531d8         xor r8d, r11d
0x00003a13      4189c3         mov r11d, eax
0x00003a16      41c1c307       rol r11d, 7
0x00003a1a      4531c3         xor r11d, r8d
0x00003a1d      4589c8         mov r8d, r9d
0x00003a20      4421cd         and ebp, r9d
0x00003a23      4101db         add r11d, ebx
0x00003a26      4489cb         mov ebx, r9d
0x00003a29      41c1c802       ror r8d, 2
0x00003a2d      c1cb0d         ror ebx, 0xd
0x00003a30      4401d9         add ecx, r11d
0x00003a33      4431c3         xor ebx, r8d
0x00003a36      4589c8         mov r8d, r9d
0x00003a39      41c1c00a       rol r8d, 0xa
0x00003a3d      4431c3         xor ebx, r8d
0x00003a40      4589d0         mov r8d, r10d
0x00003a43      4509c8         or r8d, r9d
0x00003a46      4121d0         and r8d, edx
0x00003a49      4109e8         or r8d, ebp
0x00003a4c      4489cd         mov ebp, r9d
0x00003a4f      4101d8         add r8d, ebx
0x00003a52      8b9c24bc0000.  mov ebx, dword [rsp + 0xbc]
0x00003a59      4501d8         add r8d, r11d
0x00003a5c      4189f3         mov r11d, esi
0x00003a5f      4131c3         xor r11d, eax
0x00003a62      4121cb         and r11d, ecx
0x00003a65      8dbc3bc37d0c.  lea edi, [rbx + rdi + 0x550c7dc3]
0x00003a6c      89cb           mov ebx, ecx
0x00003a6e      4131f3         xor r11d, esi
0x00003a71      c1cb0b         ror ebx, 0xb
0x00003a74      4101fb         add r11d, edi
0x00003a77      89cf           mov edi, ecx
0x00003a79      c1cf06         ror edi, 6
0x00003a7c      31fb           xor ebx, edi
0x00003a7e      89cf           mov edi, ecx
0x00003a80      c1c707         rol edi, 7
0x00003a83      31df           xor edi, ebx
0x00003a85      4489c3         mov ebx, r8d
0x00003a88      4401df         add edi, r11d
0x00003a8b      4589c3         mov r11d, r8d
0x00003a8e      c1cb02         ror ebx, 2
0x00003a91      41c1cb0d       ror r11d, 0xd
0x00003a95      01fa           add edx, edi
0x00003a97      4131db         xor r11d, ebx                           ; ../coreutils-8.31/lib/sha256.c:209
0x00003a9a      4489c3         mov ebx, r8d                            ; ../coreutils-8.31/lib/sha256.c:208
0x00003a9d      c1c30a         rol ebx, 0xa                            ; ../coreutils-8.31/lib/sha256.c:209
0x00003aa0      4131db         xor r11d, ebx
0x00003aa3      4489cb         mov ebx, r9d
0x00003aa6      4409c3         or ebx, r8d
0x00003aa9      4421d3         and ebx, r10d
0x00003aac      4421c5         and ebp, r8d
0x00003aaf      09eb           or ebx, ebp
0x00003ab1      4489c5         mov ebp, r8d
0x00003ab4      4401db         add ebx, r11d
0x00003ab7      448b9c24c000.  mov r11d, dword [rsp + 0xc0]
0x00003abf      01fb           add ebx, edi
0x00003ac1      89c7           mov edi, eax
0x00003ac3      31cf           xor edi, ecx
0x00003ac5      21dd           and ebp, ebx
0x00003ac7      21d7           and edi, edx
0x00003ac9      458d9c33745d.  lea r11d, [r11 + rsi + 0x72be5d74]
0x00003ad1      89d6           mov esi, edx
0x00003ad3      31c7           xor edi, eax
0x00003ad5      c1ce0b         ror esi, 0xb
0x00003ad8      4101fb         add r11d, edi
0x00003adb      89d7           mov edi, edx
0x00003add      c1cf06         ror edi, 6
0x00003ae0      31fe           xor esi, edi
0x00003ae2      89d7           mov edi, edx
0x00003ae4      c1c707         rol edi, 7
0x00003ae7      31f7           xor edi, esi
0x00003ae9      89de           mov esi, ebx
0x00003aeb      4401df         add edi, r11d
0x00003aee      4189db         mov r11d, ebx
0x00003af1      c1ce02         ror esi, 2
0x00003af4      41c1cb0d       ror r11d, 0xd
0x00003af8      4101fa         add r10d, edi
0x00003afb      4131f3         xor r11d, esi
0x00003afe      89de           mov esi, ebx                            ; ../coreutils-8.31/lib/sha256.c:210
0x00003b00      4589d6         mov r14d, r10d
0x00003b03      c1c60a         rol esi, 0xa
0x00003b06      4131f3         xor r11d, esi
0x00003b09      4489c6         mov esi, r8d
0x00003b0c      09de           or esi, ebx
0x00003b0e      4421ce         and esi, r9d
0x00003b11      09ee           or esi, ebp
0x00003b13      89dd           mov ebp, ebx
0x00003b15      4401de         add esi, r11d
0x00003b18      4189cb         mov r11d, ecx
0x00003b1b      01fe           add esi, edi
0x00003b1d      8bbc24c40000.  mov edi, dword [rsp + 0xc4]
0x00003b24      4131d3         xor r11d, edx
0x00003b27      4521d3         and r11d, r10d
0x00003b2a      4131cb         xor r11d, ecx
0x00003b2d      8d8407feb1de.  lea eax, [rdi + rax - 0x7f214e02]
0x00003b34      4489d7         mov edi, r10d
0x00003b37      c1cf06         ror edi, 6
0x00003b3a      4101c3         add r11d, eax
0x00003b3d      89f8           mov eax, edi
0x00003b3f      4489d7         mov edi, r10d
0x00003b42      c1cf0b         ror edi, 0xb
0x00003b45      31c7           xor edi, eax
0x00003b47      41c1c607       rol r14d, 7
0x00003b4b      21f5           and ebp, esi
0x00003b4d      4489f0         mov eax, r14d
0x00003b50      31f8           xor eax, edi
0x00003b52      89f7           mov edi, esi
0x00003b54      4401d8         add eax, r11d
0x00003b57      4189f3         mov r11d, esi
0x00003b5a      c1cf02         ror edi, 2
0x00003b5d      41c1cb0d       ror r11d, 0xd
0x00003b61      4101c1         add r9d, eax
0x00003b64      4131fb         xor r11d, edi
0x00003b67      89f7           mov edi, esi
0x00003b69      4589ce         mov r14d, r9d
0x00003b6c      c1c70a         rol edi, 0xa
0x00003b6f      41c1ce0b       ror r14d, 0xb
0x00003b73      4131fb         xor r11d, edi
0x00003b76      89df           mov edi, ebx
0x00003b78      09f7           or edi, esi
0x00003b7a      4421c7         and edi, r8d
0x00003b7d      09ef           or edi, ebp
0x00003b7f      4401df         add edi, r11d
0x00003b82      4189d3         mov r11d, edx
0x00003b85      4531d3         xor r11d, r10d
0x00003b88      01c7           add edi, eax
0x00003b8a      4489d8         mov eax, r11d
0x00003b8d      448b9c24c800.  mov r11d, dword [rsp + 0xc8]
0x00003b95      4421c8         and eax, r9d
0x00003b98      31d0           xor eax, edx
0x00003b9a      418d8c0ba706.  lea ecx, [r11 + rcx - 0x6423f959]
0x00003ba2      4589cb         mov r11d, r9d
0x00003ba5      41c1cb06       ror r11d, 6
0x00003ba9      4531de         xor r14d, r11d
0x00003bac      4589cb         mov r11d, r9d
0x00003baf      01c1           add ecx, eax
0x00003bb1      41c1c307       rol r11d, 7
0x00003bb5      4489d8         mov eax, r11d
0x00003bb8      4189f3         mov r11d, esi
0x00003bbb      4431f0         xor eax, r14d
0x00003bbe      4189fe         mov r14d, edi
0x00003bc1      01c8           add eax, ecx
0x00003bc3      89f9           mov ecx, edi
0x00003bc5      41c1ce02       ror r14d, 2
0x00003bc9      c1c90d         ror ecx, 0xd
0x00003bcc      4101c0         add r8d, eax
0x00003bcf      4431f1         xor ecx, r14d
0x00003bd2      4189fe         mov r14d, edi
0x00003bd5      41c1c60a       rol r14d, 0xa
0x00003bd9      4431f1         xor ecx, r14d
0x00003bdc      4189f6         mov r14d, esi
0x00003bdf      4109fe         or r14d, edi
0x00003be2      4121fb         and r11d, edi
0x00003be5      4121de         and r14d, ebx
0x00003be8      4509de         or r14d, r11d
0x00003beb      4589c3         mov r11d, r8d
0x00003bee      4101ce         add r14d, ecx
0x00003bf1      4489d1         mov ecx, r10d
0x00003bf4      41c1c307       rol r11d, 7
0x00003bf8      4431c9         xor ecx, r9d
0x00003bfb      4101c6         add r14d, eax
0x00003bfe      89c8           mov eax, ecx
0x00003c00      8b8c24cc0000.  mov ecx, dword [rsp + 0xcc]
0x00003c07      4421c0         and eax, r8d
0x00003c0a      4431d0         xor eax, r10d
0x00003c0d      8d941174f19b.  lea edx, [rcx + rdx - 0x3e640e8c]
0x00003c14      4489c1         mov ecx, r8d
0x00003c17      c1c906         ror ecx, 6
0x00003c1a      01c2           add edx, eax
0x00003c1c      89c8           mov eax, ecx
0x00003c1e      4489c1         mov ecx, r8d
0x00003c21      c1c90b         ror ecx, 0xb
0x00003c24      31c1           xor ecx, eax
0x00003c26      4489d8         mov eax, r11d
0x00003c29      4189fb         mov r11d, edi
0x00003c2c      31c8           xor eax, ecx                            ; ../coreutils-8.31/lib/sha256.c:213
0x00003c2e      4489f1         mov ecx, r14d                           ; ../coreutils-8.31/lib/sha256.c:212
0x00003c31      4521f3         and r11d, r14d
0x00003c34      01d0           add eax, edx
0x00003c36      4489f2         mov edx, r14d
0x00003c39      c1c902         ror ecx, 2
0x00003c3c      c1ca0d         ror edx, 0xd
0x00003c3f      01c3           add ebx, eax
0x00003c41      31ca           xor edx, ecx
0x00003c43      4489f1         mov ecx, r14d
0x00003c46      89dd           mov ebp, ebx
0x00003c48      c1c10a         rol ecx, 0xa
0x00003c4b      31ca           xor edx, ecx
0x00003c4d      89f9           mov ecx, edi
0x00003c4f      4409f1         or ecx, r14d
0x00003c52      21f1           and ecx, esi
0x00003c54      4409d9         or ecx, r11d
0x00003c57      448b9c24c800.  mov r11d, dword [rsp + 0xc8]
0x00003c5f      01d1           add ecx, edx
0x00003c61      8b9424c80000.  mov edx, dword [rsp + 0xc8]
0x00003c68      01c1           add ecx, eax
0x00003c6a      41c1c30f       rol r11d, 0xf
0x00003c6e      c1c20d         rol edx, 0xd
0x00003c71      89d0           mov eax, edx
0x00003c73      8b9424900000.  mov edx, dword [rsp + 0x90]
0x00003c7a      4431d8         xor eax, r11d
0x00003c7d      448b9c24c800.  mov r11d, dword [rsp + 0xc8]
0x00003c85      41c1eb0a       shr r11d, 0xa
0x00003c89      4131c3         xor r11d, eax
0x00003c8c      039424b40000.  add edx, dword [rsp + 0xb4]
0x00003c93      c1c507         rol ebp, 7
0x00003c96      418d0413       lea eax, [r11 + rdx]
0x00003c9a      4489fa         mov edx, r15d
0x00003c9d      4589fb         mov r11d, r15d
0x00003ca0      c1ca07         ror edx, 7
0x00003ca3      41c1c30e       rol r11d, 0xe
0x00003ca7      4131d3         xor r11d, edx
0x00003caa      4489fa         mov edx, r15d
0x00003cad      c1ea03         shr edx, 3
0x00003cb0      4131d3         xor r11d, edx
0x00003cb3      4489ca         mov edx, r9d
0x00003cb6      4431c2         xor edx, r8d
0x00003cb9      4101c3         add r11d, eax
0x00003cbc      89d0           mov eax, edx
0x00003cbe      478d941ac169.  lea r10d, [r10 + r11 - 0x1b64963f]
0x00003cc6      89da           mov edx, ebx
0x00003cc8      21d8           and eax, ebx
0x00003cca      c1ca06         ror edx, 6
0x00003ccd      4431c8         xor eax, r9d
0x00003cd0      4101c2         add r10d, eax
0x00003cd3      89d0           mov eax, edx
0x00003cd5      89da           mov edx, ebx
0x00003cd7      c1ca0b         ror edx, 0xb
0x00003cda      31c2           xor edx, eax
0x00003cdc      89e8           mov eax, ebp
0x00003cde      4489f5         mov ebp, r14d
0x00003ce1      31d0           xor eax, edx                            ; ../coreutils-8.31/lib/sha256.c:214
0x00003ce3      89ca           mov edx, ecx
0x00003ce5      21cd           and ebp, ecx
0x00003ce7      4401d0         add eax, r10d
0x00003cea      4189ca         mov r10d, ecx
0x00003ced      c1ca02         ror edx, 2
0x00003cf0      41c1ca0d       ror r10d, 0xd
0x00003cf4      01c6           add esi, eax
0x00003cf6      4131d2         xor r10d, edx
0x00003cf9      89ca           mov edx, ecx
0x00003cfb      4189f5         mov r13d, esi
0x00003cfe      c1c20a         rol edx, 0xa
0x00003d01      4131d2         xor r10d, edx
0x00003d04      4489f2         mov edx, r14d
0x00003d07      09ca           or edx, ecx
0x00003d09      21fa           and edx, edi
0x00003d0b      09ea           or edx, ebp
0x00003d0d      8bac24cc0000.  mov ebp, dword [rsp + 0xcc]
0x00003d14      4401d2         add edx, r10d
0x00003d17      448b9424cc00.  mov r10d, dword [rsp + 0xcc]
0x00003d1f      01c2           add edx, eax
0x00003d21      c1c50d         rol ebp, 0xd
0x00003d24      41c1c20f       rol r10d, 0xf
0x00003d28      89e8           mov eax, ebp
0x00003d2a      4489e5         mov ebp, r12d
0x00003d2d      4431d0         xor eax, r10d
0x00003d30      448b9424cc00.  mov r10d, dword [rsp + 0xcc]
0x00003d38      4403bc24b800.  add r15d, dword [rsp + 0xb8]
0x00003d40      c1cd07         ror ebp, 7
0x00003d43      41c1cd0b       ror r13d, 0xb
0x00003d47      41c1ea0a       shr r10d, 0xa
0x00003d4b      4131c2         xor r10d, eax
0x00003d4e      438d043a       lea eax, [r10 + r15]
0x00003d52      4589e2         mov r10d, r12d
0x00003d55      4589c7         mov r15d, r8d
0x00003d58      41c1c20e       rol r10d, 0xe
0x00003d5c      4131df         xor r15d, ebx
0x00003d5f      4131ea         xor r10d, ebp
0x00003d62      4489e5         mov ebp, r12d
0x00003d65      c1ed03         shr ebp, 3
0x00003d68      4131ea         xor r10d, ebp
0x00003d6b      89cd           mov ebp, ecx
0x00003d6d      4101c2         add r10d, eax
0x00003d70      4489f8         mov eax, r15d
0x00003d73      4189f7         mov r15d, esi
0x00003d76      41c1cf06       ror r15d, 6
0x00003d7a      21f0           and eax, esi
0x00003d7c      478d8c118647.  lea r9d, [r9 + r10 - 0x1041b87a]
0x00003d84      4531fd         xor r13d, r15d
0x00003d87      4189f7         mov r15d, esi
0x00003d8a      4431c0         xor eax, r8d
0x00003d8d      41c1c707       rol r15d, 7
0x00003d91      4101c1         add r9d, eax
0x00003d94      21d5           and ebp, edx
0x00003d96      4489f8         mov eax, r15d
0x00003d99      448bbc249c00.  mov r15d, dword [rsp + 0x9c]
0x00003da1      4431e8         xor eax, r13d
0x00003da4      4189d5         mov r13d, edx
0x00003da7      4401c8         add eax, r9d
0x00003daa      4189d1         mov r9d, edx
0x00003dad      41c1cd02       ror r13d, 2
0x00003db1      41c1c90d       ror r9d, 0xd
0x00003db5      01c7           add edi, eax
0x00003db7      4531e9         xor r9d, r13d
0x00003dba      4189d5         mov r13d, edx
0x00003dbd      41c1c50a       rol r13d, 0xa
0x00003dc1      4531e9         xor r9d, r13d
0x00003dc4      4189cd         mov r13d, ecx
0x00003dc7      4109d5         or r13d, edx
0x00003dca      4521f5         and r13d, r14d
0x00003dcd      4109ed         or r13d, ebp
0x00003dd0      4489dd         mov ebp, r11d
0x00003dd3      4501cd         add r13d, r9d
0x00003dd6      4589d9         mov r9d, r11d
0x00003dd9      4101c5         add r13d, eax
0x00003ddc      c1c50f         rol ebp, 0xf
0x00003ddf      41c1c10d       rol r9d, 0xd
0x00003de3      4131e9         xor r9d, ebp
0x00003de6      4489dd         mov ebp, r11d
0x00003de9      41c1cf07       ror r15d, 7
0x00003ded      c1ed0a         shr ebp, 0xa
0x00003df0      4489f8         mov eax, r15d
0x00003df3      4403a424bc00.  add r12d, dword [rsp + 0xbc]
0x00003dfb      4431cd         xor ebp, r9d
0x00003dfe      448b8c249c00.  mov r9d, dword [rsp + 0x9c]
0x00003e06      4189df         mov r15d, ebx
0x00003e09      4131f7         xor r15d, esi
0x00003e0c      41c1c10e       rol r9d, 0xe
0x00003e10      4431c8         xor eax, r9d
0x00003e13      448b8c249c00.  mov r9d, dword [rsp + 0x9c]
0x00003e1b      41c1e903       shr r9d, 3
0x00003e1f      4131c1         xor r9d, eax
0x00003e22      4489f8         mov eax, r15d
0x00003e25      4189ff         mov r15d, edi
0x00003e28      4501e1         add r9d, r12d
0x00003e2b      4189fc         mov r12d, edi
0x00003e2e      41c1cf06       ror r15d, 6
0x00003e32      4101e9         add r9d, ebp
0x00003e35      41c1cc0b       ror r12d, 0xb
0x00003e39      21f8           and eax, edi
0x00003e3b      4531fc         xor r12d, r15d
0x00003e3e      478d8408c69d.  lea r8d, [r8 + r9 + 0xfc19dc6]
0x00003e46      4189ff         mov r15d, edi                           ; ../coreutils-8.31/lib/sha256.c:216
0x00003e49      31d8           xor eax, ebx
0x00003e4b      41c1c707       rol r15d, 7
0x00003e4f      89d5           mov ebp, edx
0x00003e51      4101c0         add r8d, eax
0x00003e54      4489f8         mov eax, r15d
0x00003e57      4421ed         and ebp, r13d
0x00003e5a      4431e0         xor eax, r12d
0x00003e5d      4589ec         mov r12d, r13d
0x00003e60      448bbc24a000.  mov r15d, dword [rsp + 0xa0]
0x00003e68      4401c0         add eax, r8d
0x00003e6b      4589e8         mov r8d, r13d
0x00003e6e      41c1cc02       ror r12d, 2
0x00003e72      41c1c80d       ror r8d, 0xd
0x00003e76      4101c6         add r14d, eax
0x00003e79      4531e0         xor r8d, r12d
0x00003e7c      4589ec         mov r12d, r13d
0x00003e7f      41c1c40a       rol r12d, 0xa                           ; ../coreutils-8.31/lib/sha256.c:215
0x00003e83      4531e0         xor r8d, r12d
0x00003e86      4189d4         mov r12d, edx
0x00003e89      4509ec         or r12d, r13d
0x00003e8c      4121cc         and r12d, ecx
0x00003e8f      4109ec         or r12d, ebp                            ; ../coreutils-8.31/lib/sha256.c:216
0x00003e92      4489d5         mov ebp, r10d
0x00003e95      41c1cf07       ror r15d, 7
0x00003e99      4501c4         add r12d, r8d
0x00003e9c      4589d0         mov r8d, r10d
0x00003e9f      c1c50f         rol ebp, 0xf
0x00003ea2      41c1c00d       rol r8d, 0xd
0x00003ea6      4101c4         add r12d, eax
0x00003ea9      4489f8         mov eax, r15d
0x00003eac      4131e8         xor r8d, ebp
0x00003eaf      4489d5         mov ebp, r10d
0x00003eb2      c1ed0a         shr ebp, 0xa
0x00003eb5      4431c5         xor ebp, r8d
0x00003eb8      448b8424a000.  mov r8d, dword [rsp + 0xa0]
0x00003ec0      448bbc249c00.  mov r15d, dword [rsp + 0x9c]
0x00003ec8      4403bc24c000.  add r15d, dword [rsp + 0xc0]
0x00003ed0      41c1c00e       rol r8d, 0xe
0x00003ed4      4431c0         xor eax, r8d
0x00003ed7      448b8424a000.  mov r8d, dword [rsp + 0xa0]
0x00003edf      41c1e803       shr r8d, 3
0x00003ee3      4131c0         xor r8d, eax
0x00003ee6      4501f8         add r8d, r15d
0x00003ee9      4189f7         mov r15d, esi
0x00003eec      4131ff         xor r15d, edi
0x00003eef      4101e8         add r8d, ebp
0x00003ef2      4489f5         mov ebp, r14d
0x00003ef5      4489f8         mov eax, r15d
0x00003ef8      4589f7         mov r15d, r14d
0x00003efb      c1cd0b         ror ebp, 0xb
0x00003efe      41c1cf06       ror r15d, 6
0x00003f02      4421f0         and eax, r14d
0x00003f05      428d9c03cca1.  lea ebx, [rbx + r8 + 0x240ca1cc]
0x00003f0d      4431fd         xor ebp, r15d
0x00003f10      4589f7         mov r15d, r14d
0x00003f13      31f0           xor eax, esi
0x00003f15      41c1c707       rol r15d, 7
0x00003f19      01c3           add ebx, eax
0x00003f1b      4489f8         mov eax, r15d
0x00003f1e      4589ef         mov r15d, r13d
0x00003f21      31e8           xor eax, ebp
0x00003f23      4489e5         mov ebp, r12d
0x00003f26      01d8           add eax, ebx
0x00003f28      4489e3         mov ebx, r12d
0x00003f2b      c1cd02         ror ebp, 2
0x00003f2e      c1cb0d         ror ebx, 0xd
0x00003f31      01c1           add ecx, eax                            ; ../coreutils-8.31/lib/sha256.c:217
0x00003f33      31eb           xor ebx, ebp
0x00003f35      4489e5         mov ebp, r12d
0x00003f38      c1c50a         rol ebp, 0xa
0x00003f3b      31eb           xor ebx, ebp
0x00003f3d      4489ed         mov ebp, r13d
0x00003f40      4409e5         or ebp, r12d                            ; ../coreutils-8.31/lib/sha256.c:216
0x00003f43      4521e7         and r15d, r12d
0x00003f46      21d5           and ebp, edx
0x00003f48      4409fd         or ebp, r15d
0x00003f4b      4589cf         mov r15d, r9d
0x00003f4e      01dd           add ebp, ebx
0x00003f50      4489cb         mov ebx, r9d
0x00003f53      41c1ef0a       shr r15d, 0xa
0x00003f57      c1c30f         rol ebx, 0xf
0x00003f5a      01c5           add ebp, eax
0x00003f5c      89d8           mov eax, ebx
0x00003f5e      4489cb         mov ebx, r9d
0x00003f61      c1c30d         rol ebx, 0xd
0x00003f64      31c3           xor ebx, eax
0x00003f66      4431fb         xor ebx, r15d
0x00003f69      448bbc24a400.  mov r15d, dword [rsp + 0xa4]
0x00003f71      41c1cf07       ror r15d, 7
0x00003f75      4489f8         mov eax, r15d
0x00003f78      448bbc24a400.  mov r15d, dword [rsp + 0xa4]
0x00003f80      41c1c70e       rol r15d, 0xe
0x00003f84      4431f8         xor eax, r15d
0x00003f87      448bbc24a400.  mov r15d, dword [rsp + 0xa4]
0x00003f8f      41c1ef03       shr r15d, 3
0x00003f93      4131c7         xor r15d, eax
0x00003f96      8b8424a00000.  mov eax, dword [rsp + 0xa0]
0x00003f9d      038424c40000.  add eax, dword [rsp + 0xc4]
0x00003fa4      4401f8         add eax, r15d
0x00003fa7      4189ff         mov r15d, edi
0x00003faa      4531f7         xor r15d, r14d
0x00003fad      01c3           add ebx, eax
0x00003faf      4489f8         mov eax, r15d
0x00003fb2      8db41e6f2ce9.  lea esi, [rsi + rbx + 0x2de92c6f]
0x00003fb9      895c2408       mov dword [rsp + 8], ebx
0x00003fbd      21c8           and eax, ecx
0x00003fbf      89cb           mov ebx, ecx
0x00003fc1      4589e7         mov r15d, r12d
0x00003fc4      31f8           xor eax, edi
0x00003fc6      c1cb0b         ror ebx, 0xb
0x00003fc9      01c6           add esi, eax
0x00003fcb      89c8           mov eax, ecx
0x00003fcd      c1c806         ror eax, 6
0x00003fd0      31c3           xor ebx, eax
0x00003fd2      89c8           mov eax, ecx
0x00003fd4      c1c007         rol eax, 7
0x00003fd7      31d8           xor eax, ebx
0x00003fd9      89eb           mov ebx, ebp
0x00003fdb      01f0           add eax, esi
0x00003fdd      89ee           mov esi, ebp
0x00003fdf      c1cb02         ror ebx, 2
0x00003fe2      c1ce0d         ror esi, 0xd
0x00003fe5      01c2           add edx, eax
0x00003fe7      31de           xor esi, ebx
0x00003fe9      89eb           mov ebx, ebp
0x00003feb      4121ef         and r15d, ebp
0x00003fee      c1c30a         rol ebx, 0xa                            ; ../coreutils-8.31/lib/sha256.c:218
0x00003ff1      31de           xor esi, ebx
0x00003ff3      4489e3         mov ebx, r12d
0x00003ff6      09eb           or ebx, ebp
0x00003ff8      4421eb         and ebx, r13d
0x00003ffb      4409fb         or ebx, r15d
0x00003ffe      448bbc24a800.  mov r15d, dword [rsp + 0xa8]
0x00004006      01f3           add ebx, esi
0x00004008      4489c6         mov esi, r8d
0x0000400b      c1c60f         rol esi, 0xf
0x0000400e      01c3           add ebx, eax
0x00004010      89f0           mov eax, esi
0x00004012      4489c6         mov esi, r8d
0x00004015      41c1c70e       rol r15d, 0xe
0x00004019      c1c60d         rol esi, 0xd
0x0000401c      31c6           xor esi, eax
0x0000401e      4489c0         mov eax, r8d
0x00004021      c1e80a         shr eax, 0xa
0x00004024      31c6           xor esi, eax
0x00004026      8b8424a80000.  mov eax, dword [rsp + 0xa8]
0x0000402d      c1c807         ror eax, 7
0x00004030      4431f8         xor eax, r15d
0x00004033      448bbc24a800.  mov r15d, dword [rsp + 0xa8]
0x0000403b      41c1ef03       shr r15d, 3
0x0000403f      4131c7         xor r15d, eax
0x00004042      8b8424a40000.  mov eax, dword [rsp + 0xa4]
0x00004049      038424c80000.  add eax, dword [rsp + 0xc8]
0x00004050      4401f8         add eax, r15d
0x00004053      4189d7         mov r15d, edx
0x00004056      01f0           add eax, esi
0x00004058      4489f6         mov esi, r14d
0x0000405b      41c1cf0b       ror r15d, 0xb
0x0000405f      31ce           xor esi, ecx
0x00004061      8dbc07aa8474.  lea edi, [rdi + rax + 0x4a7484aa]
0x00004068      8944240c       mov dword [rsp + 0xc], eax
0x0000406c      21d6           and esi, edx
0x0000406e      4489f8         mov eax, r15d
0x00004071      4189df         mov r15d, ebx
0x00004074      4431f6         xor esi, r14d
0x00004077      01f7           add edi, esi
0x00004079      89d6           mov esi, edx
0x0000407b      c1ce06         ror esi, 6
0x0000407e      31f0           xor eax, esi
0x00004080      89d6           mov esi, edx
0x00004082      c1c607         rol esi, 7
0x00004085      31c6           xor esi, eax
0x00004087      01fe           add esi, edi
0x00004089      89df           mov edi, ebx
0x0000408b      4101f5         add r13d, esi
0x0000408e      c1cf02         ror edi, 2
0x00004091      41c1c70a       rol r15d, 0xa
0x00004095      89f8           mov eax, edi
0x00004097      89df           mov edi, ebx
0x00004099      c1cf0d         ror edi, 0xd
0x0000409c      31c7           xor edi, eax                            ; ../coreutils-8.31/lib/sha256.c:219
0x0000409e      4431ff         xor edi, r15d
0x000040a1      4189ef         mov r15d, ebp                           ; ../coreutils-8.31/lib/sha256.c:218
0x000040a4      4109df         or r15d, ebx
0x000040a7      4489f8         mov eax, r15d
0x000040aa      4189ef         mov r15d, ebp
0x000040ad      4121df         and r15d, ebx
0x000040b0      4421e0         and eax, r12d
0x000040b3      4409f8         or eax, r15d
0x000040b6      448b7c2408     mov r15d, dword [rsp + 8]
0x000040bb      01f8           add eax, edi
0x000040bd      01f0           add eax, esi
0x000040bf      4489ff         mov edi, r15d
0x000040c2      4489fe         mov esi, r15d
0x000040c5      c1c60f         rol esi, 0xf
0x000040c8      c1c70d         rol edi, 0xd
0x000040cb      31f7           xor edi, esi
0x000040cd      4489fe         mov esi, r15d
0x000040d0      448bbc24ac00.  mov r15d, dword [rsp + 0xac]
0x000040d8      c1ee0a         shr esi, 0xa
0x000040db      31f7           xor edi, esi
0x000040dd      8bb424ac0000.  mov esi, dword [rsp + 0xac]
0x000040e4      41c1c70e       rol r15d, 0xe
0x000040e8      c1ce07         ror esi, 7
0x000040eb      4431fe         xor esi, r15d
0x000040ee      448bbc24ac00.  mov r15d, dword [rsp + 0xac]
0x000040f6      41c1ef03       shr r15d, 3
0x000040fa      4131f7         xor r15d, esi
0x000040fd      8bb424a80000.  mov esi, dword [rsp + 0xa8]
0x00004104      03b424cc0000.  add esi, dword [rsp + 0xcc]
0x0000410b      4401fe         add esi, r15d
0x0000410e      4189df         mov r15d, ebx
0x00004111      01f7           add edi, esi
0x00004113      89ce           mov esi, ecx
0x00004115      31d6           xor esi, edx
0x00004117      458db43edca9.  lea r14d, [r14 + rdi + 0x5cb0a9dc]
0x0000411f      897c2410       mov dword [rsp + 0x10], edi
0x00004123      4421ee         and esi, r13d
0x00004126      4489ef         mov edi, r13d
0x00004129      31ce           xor esi, ecx
0x0000412b      c1cf0b         ror edi, 0xb
0x0000412e      4101f6         add r14d, esi
0x00004131      4489ee         mov esi, r13d
0x00004134      c1ce06         ror esi, 6
0x00004137      31f7           xor edi, esi
0x00004139      4489ee         mov esi, r13d
0x0000413c      c1c607         rol esi, 7
0x0000413f      4121c7         and r15d, eax
0x00004142      31fe           xor esi, edi
0x00004144      89c7           mov edi, eax
0x00004146      4401f6         add esi, r14d
0x00004149      4189c6         mov r14d, eax
0x0000414c      c1cf02         ror edi, 2
0x0000414f      41c1ce0d       ror r14d, 0xd
0x00004153      4101f4         add r12d, esi
0x00004156      4131fe         xor r14d, edi
0x00004159      89c7           mov edi, eax
0x0000415b      c1c70a         rol edi, 0xa
0x0000415e      4131fe         xor r14d, edi
0x00004161      89df           mov edi, ebx
0x00004163      09c7           or edi, eax
0x00004165      21ef           and edi, ebp
0x00004167      4409ff         or edi, r15d
0x0000416a      448b7c240c     mov r15d, dword [rsp + 0xc]
0x0000416f      4401f7         add edi, r14d
0x00004172      01f7           add edi, esi
0x00004174      4589fe         mov r14d, r15d
0x00004177      4489fe         mov esi, r15d
0x0000417a      c1c60f         rol esi, 0xf
0x0000417d      41c1c60d       rol r14d, 0xd
0x00004181      4131f6         xor r14d, esi
0x00004184      4489fe         mov esi, r15d
0x00004187      c1ee0a         shr esi, 0xa
0x0000418a      4131f6         xor r14d, esi
0x0000418d      8bb424b00000.  mov esi, dword [rsp + 0xb0]
0x00004194      c1ce07         ror esi, 7
0x00004197      4189f7         mov r15d, esi
0x0000419a      8bb424b00000.  mov esi, dword [rsp + 0xb0]
0x000041a1      c1c60e         rol esi, 0xe
0x000041a4      4431fe         xor esi, r15d
0x000041a7      448bbc24b000.  mov r15d, dword [rsp + 0xb0]
0x000041af      41c1ef03       shr r15d, 3
0x000041b3      4431fe         xor esi, r15d
0x000041b6      03b424ac0000.  add esi, dword [rsp + 0xac]
0x000041bd      4189c7         mov r15d, eax
0x000041c0      4401de         add esi, r11d
0x000041c3      4401f6         add esi, r14d
0x000041c6      4189d6         mov r14d, edx
0x000041c9      4531ee         xor r14d, r13d
0x000041cc      8d8c31da88f9.  lea ecx, [rcx + rsi + 0x76f988da]
0x000041d3      89742418       mov dword [rsp + 0x18], esi
0x000041d7      4521e6         and r14d, r12d
0x000041da      4489e6         mov esi, r12d
0x000041dd      4131d6         xor r14d, edx
0x000041e0      4101ce         add r14d, ecx
0x000041e3      4489e1         mov ecx, r12d
0x000041e6      c1c906         ror ecx, 6
0x000041e9      c1ce0b         ror esi, 0xb
0x000041ec      4121ff         and r15d, edi
0x000041ef      31ce           xor esi, ecx
0x000041f1      4489e1         mov ecx, r12d
0x000041f4      c1c107         rol ecx, 7
0x000041f7      31f1           xor ecx, esi
0x000041f9      4401f1         add ecx, r14d
0x000041fc      4189fe         mov r14d, edi
0x000041ff      41c1ce02       ror r14d, 2
0x00004203      01cd           add ebp, ecx
0x00004205      4489f6         mov esi, r14d
0x00004208      4189fe         mov r14d, edi
0x0000420b      41c1ce0d       ror r14d, 0xd
0x0000420f      4131f6         xor r14d, esi
0x00004212      89fe           mov esi, edi
0x00004214      c1c60a         rol esi, 0xa
0x00004217      4131f6         xor r14d, esi
0x0000421a      89c6           mov esi, eax
0x0000421c      09fe           or esi, edi
0x0000421e      21de           and esi, ebx
0x00004220      4409fe         or esi, r15d
0x00004223      448b7c2410     mov r15d, dword [rsp + 0x10]
0x00004228      4401f6         add esi, r14d
0x0000422b      01ce           add esi, ecx
0x0000422d      4589fe         mov r14d, r15d
0x00004230      4489f9         mov ecx, r15d
0x00004233      c1c10f         rol ecx, 0xf
0x00004236      41c1c60d       rol r14d, 0xd
0x0000423a      4131ce         xor r14d, ecx
0x0000423d      4489f9         mov ecx, r15d
0x00004240      c1e90a         shr ecx, 0xa
0x00004243      4131ce         xor r14d, ecx
0x00004246      8b8c24b40000.  mov ecx, dword [rsp + 0xb4]
0x0000424d      c1c907         ror ecx, 7
0x00004250      4189cf         mov r15d, ecx
0x00004253      8b8c24b40000.  mov ecx, dword [rsp + 0xb4]
0x0000425a      c1c10e         rol ecx, 0xe
0x0000425d      4431f9         xor ecx, r15d
0x00004260      448bbc24b400.  mov r15d, dword [rsp + 0xb4]
0x00004268      41c1ef03       shr r15d, 3
0x0000426c      4431f9         xor ecx, r15d
0x0000426f      038c24b00000.  add ecx, dword [rsp + 0xb0]
0x00004276      4189ff         mov r15d, edi
0x00004279      4401d1         add ecx, r10d
0x0000427c      4401f1         add ecx, r14d
0x0000427f      4589ee         mov r14d, r13d
0x00004282      4531e6         xor r14d, r12d
0x00004285      8d940a52513e.  lea edx, [rdx + rcx - 0x67c1aeae]
0x0000428c      894c241c       mov dword [rsp + 0x1c], ecx
0x00004290      4121ee         and r14d, ebp
0x00004293      89e9           mov ecx, ebp
0x00004295      4121f7         and r15d, esi
0x00004298      4531ee         xor r14d, r13d
0x0000429b      c1c90b         ror ecx, 0xb
0x0000429e      4101d6         add r14d, edx
0x000042a1      89ea           mov edx, ebp
0x000042a3      c1ca06         ror edx, 6
0x000042a6      31d1           xor ecx, edx
0x000042a8      89ea           mov edx, ebp
0x000042aa      c1c207         rol edx, 7
0x000042ad      31ca           xor edx, ecx
0x000042af      89f1           mov ecx, esi
0x000042b1      4401f2         add edx, r14d
0x000042b4      4189f6         mov r14d, esi
0x000042b7      c1c902         ror ecx, 2
0x000042ba      41c1ce0d       ror r14d, 0xd                           ; ../coreutils-8.31/lib/sha256.c:222
0x000042be      01d3           add ebx, edx
0x000042c0      4131ce         xor r14d, ecx
0x000042c3      89f1           mov ecx, esi
0x000042c5      c1c10a         rol ecx, 0xa
0x000042c8      4131ce         xor r14d, ecx
0x000042cb      89f9           mov ecx, edi
0x000042cd      09f1           or ecx, esi
0x000042cf      21c1           and ecx, eax
0x000042d1      4409f9         or ecx, r15d
0x000042d4      448b7c2418     mov r15d, dword [rsp + 0x18]
0x000042d9      4401f1         add ecx, r14d
0x000042dc      01d1           add ecx, edx
0x000042de      4589fe         mov r14d, r15d
0x000042e1      4489fa         mov edx, r15d
0x000042e4      c1c20f         rol edx, 0xf
0x000042e7      41c1c60d       rol r14d, 0xd
0x000042eb      4131d6         xor r14d, edx
0x000042ee      4489fa         mov edx, r15d
0x000042f1      c1ea0a         shr edx, 0xa
0x000042f4      4131d6         xor r14d, edx
0x000042f7      8b9424b80000.  mov edx, dword [rsp + 0xb8]
0x000042fe      c1ca07         ror edx, 7
0x00004301      4189d7         mov r15d, edx
0x00004304      8b9424b80000.  mov edx, dword [rsp + 0xb8]
0x0000430b      c1c20e         rol edx, 0xe
0x0000430e      4431fa         xor edx, r15d
0x00004311      448bbc24b800.  mov r15d, dword [rsp + 0xb8]
0x00004319      41c1ef03       shr r15d, 3
0x0000431d      4431fa         xor edx, r15d
0x00004320      039424b40000.  add edx, dword [rsp + 0xb4]
0x00004327      4189f7         mov r15d, esi
0x0000432a      4401ca         add edx, r9d
0x0000432d      4121cf         and r15d, ecx
0x00004330      4401f2         add edx, r14d
0x00004333      4589e6         mov r14d, r12d
0x00004336      4131ee         xor r14d, ebp
0x00004339      458dac156dc6.  lea r13d, [r13 + rdx - 0x57ce3993]
0x00004341      89542420       mov dword [rsp + 0x20], edx
0x00004345      4121de         and r14d, ebx
0x00004348      89da           mov edx, ebx
0x0000434a      4531e6         xor r14d, r12d
0x0000434d      c1ca0b         ror edx, 0xb
0x00004350      4501f5         add r13d, r14d
0x00004353      4189de         mov r14d, ebx
0x00004356      41c1ce06       ror r14d, 6
0x0000435a      4431f2         xor edx, r14d
0x0000435d      4189de         mov r14d, ebx
0x00004360      41c1c607       rol r14d, 7
0x00004364      4131d6         xor r14d, edx
0x00004367      4501ee         add r14d, r13d
0x0000436a      468d2c30       lea r13d, [rax + r14]
0x0000436e      89c8           mov eax, ecx
0x00004370      c1c802         ror eax, 2
0x00004373      89c2           mov edx, eax
0x00004375      89c8           mov eax, ecx
0x00004377      c1c80d         ror eax, 0xd
0x0000437a      31d0           xor eax, edx
0x0000437c      89ca           mov edx, ecx                            ; ../coreutils-8.31/lib/sha256.c:223
0x0000437e      c1c20a         rol edx, 0xa
0x00004381      31d0           xor eax, edx
0x00004383      89f2           mov edx, esi
0x00004385      09ca           or edx, ecx
0x00004387      21fa           and edx, edi
0x00004389      4409fa         or edx, r15d
0x0000438c      448b7c241c     mov r15d, dword [rsp + 0x1c]
0x00004391      01c2           add edx, eax
0x00004393      4401f2         add edx, r14d
0x00004396      4489f8         mov eax, r15d
0x00004399      4589fe         mov r14d, r15d
0x0000439c      c1c00f         rol eax, 0xf
0x0000439f      41c1c60d       rol r14d, 0xd
0x000043a3      4131c6         xor r14d, eax
0x000043a6      4489f8         mov eax, r15d
0x000043a9      c1e80a         shr eax, 0xa
0x000043ac      4131c6         xor r14d, eax
0x000043af      8b8424bc0000.  mov eax, dword [rsp + 0xbc]
0x000043b6      c1c807         ror eax, 7
0x000043b9      4189c7         mov r15d, eax
0x000043bc      8b8424bc0000.  mov eax, dword [rsp + 0xbc]
0x000043c3      c1c00e         rol eax, 0xe
0x000043c6      4431f8         xor eax, r15d
0x000043c9      448bbc24bc00.  mov r15d, dword [rsp + 0xbc]
0x000043d1      41c1ef03       shr r15d, 3
0x000043d5      4431f8         xor eax, r15d
0x000043d8      038424b80000.  add eax, dword [rsp + 0xb8]
0x000043df      4189cf         mov r15d, ecx
0x000043e2      4121d7         and r15d, edx
0x000043e5      4401c0         add eax, r8d
0x000043e8      4401f0         add eax, r14d
0x000043eb      4189ee         mov r14d, ebp
0x000043ee      4131de         xor r14d, ebx
0x000043f1      458da404c827.  lea r12d, [r12 + rax - 0x4ffcd838]
0x000043f9      89442424       mov dword [rsp + 0x24], eax
0x000043fd      4521ee         and r14d, r13d
0x00004400      4489e8         mov eax, r13d
0x00004403      4131ee         xor r14d, ebp
0x00004406      c1c80b         ror eax, 0xb
0x00004409      4501f4         add r12d, r14d
0x0000440c      4589ee         mov r14d, r13d
0x0000440f      41c1ce06       ror r14d, 6
0x00004413      4431f0         xor eax, r14d
0x00004416      4589ee         mov r14d, r13d
0x00004419      41c1c607       rol r14d, 7
0x0000441d      4131c6         xor r14d, eax
0x00004420      4501e6         add r14d, r12d
0x00004423      468d2437       lea r12d, [rdi + r14]
0x00004427      89d7           mov edi, edx
0x00004429      c1cf02         ror edi, 2
0x0000442c      89f8           mov eax, edi
0x0000442e      89d7           mov edi, edx
0x00004430      c1cf0d         ror edi, 0xd
0x00004433      31c7           xor edi, eax
0x00004435      89d0           mov eax, edx                            ; ../coreutils-8.31/lib/sha256.c:224
0x00004437      c1c00a         rol eax, 0xa
0x0000443a      31c7           xor edi, eax
0x0000443c      89c8           mov eax, ecx
0x0000443e      09d0           or eax, edx
0x00004440      21f0           and eax, esi
0x00004442      4409f8         or eax, r15d
0x00004445      448b7c2420     mov r15d, dword [rsp + 0x20]
0x0000444a      01f8           add eax, edi
0x0000444c      4401f0         add eax, r14d
0x0000444f      4489ff         mov edi, r15d
0x00004452      4589fe         mov r14d, r15d
0x00004455      c1c70f         rol edi, 0xf
0x00004458      41c1c60d       rol r14d, 0xd
0x0000445c      4131fe         xor r14d, edi
0x0000445f      4489ff         mov edi, r15d
0x00004462      c1ef0a         shr edi, 0xa
0x00004465      4131fe         xor r14d, edi
0x00004468      8bbc24c00000.  mov edi, dword [rsp + 0xc0]
0x0000446f      c1cf07         ror edi, 7
0x00004472      4189ff         mov r15d, edi
0x00004475      8bbc24c00000.  mov edi, dword [rsp + 0xc0]
0x0000447c      c1c70e         rol edi, 0xe
0x0000447f      4431ff         xor edi, r15d
0x00004482      448bbc24c000.  mov r15d, dword [rsp + 0xc0]
0x0000448a      41c1ef03       shr r15d, 3
0x0000448e      4431ff         xor edi, r15d
0x00004491      03bc24bc0000.  add edi, dword [rsp + 0xbc]
0x00004498      4189d7         mov r15d, edx
0x0000449b      037c2408       add edi, dword [rsp + 8]
0x0000449f      4121c7         and r15d, eax
0x000044a2      4401f7         add edi, r14d
0x000044a5      4189de         mov r14d, ebx
0x000044a8      4531ee         xor r14d, r13d
0x000044ab      8dac3dc77f59.  lea ebp, [rbp + rdi - 0x40a68039]
0x000044b2      897c2428       mov dword [rsp + 0x28], edi
0x000044b6      4521e6         and r14d, r12d
0x000044b9      4489e7         mov edi, r12d
0x000044bc      4131de         xor r14d, ebx
0x000044bf      c1cf0b         ror edi, 0xb
0x000044c2      4401f5         add ebp, r14d
0x000044c5      4589e6         mov r14d, r12d
0x000044c8      41c1ce06       ror r14d, 6
0x000044cc      4431f7         xor edi, r14d
0x000044cf      4589e6         mov r14d, r12d
0x000044d2      41c1c607       rol r14d, 7
0x000044d6      4131fe         xor r14d, edi
0x000044d9      4101ee         add r14d, ebp
0x000044dc      428d2c36       lea ebp, [rsi + r14]
0x000044e0      89c6           mov esi, eax
0x000044e2      c1ce02         ror esi, 2
0x000044e5      89f7           mov edi, esi
0x000044e7      89c6           mov esi, eax
0x000044e9      c1ce0d         ror esi, 0xd
0x000044ec      31fe           xor esi, edi
0x000044ee      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/sha256.c:225
0x000044f0      c1c70a         rol edi, 0xa
0x000044f3      31fe           xor esi, edi
0x000044f5      89d7           mov edi, edx
0x000044f7      09c7           or edi, eax
0x000044f9      21cf           and edi, ecx
0x000044fb      4409ff         or edi, r15d
0x000044fe      448b7c2424     mov r15d, dword [rsp + 0x24]
0x00004503      01f7           add edi, esi
0x00004505      4401f7         add edi, r14d
0x00004508      4489fe         mov esi, r15d
0x0000450b      4589fe         mov r14d, r15d
0x0000450e      c1c60f         rol esi, 0xf
0x00004511      41c1c60d       rol r14d, 0xd
0x00004515      4131f6         xor r14d, esi
0x00004518      4489fe         mov esi, r15d
0x0000451b      c1ee0a         shr esi, 0xa
0x0000451e      4131f6         xor r14d, esi
0x00004521      8bb424c40000.  mov esi, dword [rsp + 0xc4]
0x00004528      c1ce07         ror esi, 7
0x0000452b      4189f7         mov r15d, esi
0x0000452e      8bb424c40000.  mov esi, dword [rsp + 0xc4]
0x00004535      c1c60e         rol esi, 0xe
0x00004538      4431fe         xor esi, r15d
0x0000453b      448bbc24c400.  mov r15d, dword [rsp + 0xc4]
0x00004543      41c1ef03       shr r15d, 3
0x00004547      4431fe         xor esi, r15d
0x0000454a      03b424c00000.  add esi, dword [rsp + 0xc0]
0x00004551      4189c7         mov r15d, eax
0x00004554      0374240c       add esi, dword [rsp + 0xc]
0x00004558      4121ff         and r15d, edi
0x0000455b      4401f6         add esi, r14d
0x0000455e      4589ee         mov r14d, r13d
0x00004561      4531e6         xor r14d, r12d
0x00004564      8d9c33f30be0.  lea ebx, [rbx + rsi - 0x391ff40d]
0x0000456b      8974242c       mov dword [rsp + 0x2c], esi
0x0000456f      4121ee         and r14d, ebp
0x00004572      89ee           mov esi, ebp
0x00004574      4531ee         xor r14d, r13d
0x00004577      c1ce0b         ror esi, 0xb
0x0000457a      4401f3         add ebx, r14d
0x0000457d      4189ee         mov r14d, ebp
0x00004580      41c1ce06       ror r14d, 6
0x00004584      4431f6         xor esi, r14d
0x00004587      4189ee         mov r14d, ebp
0x0000458a      41c1c607       rol r14d, 7
0x0000458e      4131f6         xor r14d, esi
0x00004591      4101de         add r14d, ebx
0x00004594      428d1c31       lea ebx, [rcx + r14]
0x00004598      89f9           mov ecx, edi
0x0000459a      c1c902         ror ecx, 2
0x0000459d      89ce           mov esi, ecx
0x0000459f      89f9           mov ecx, edi
0x000045a1      c1c90d         ror ecx, 0xd
0x000045a4      31f1           xor ecx, esi
0x000045a6      89fe           mov esi, edi                            ; ../coreutils-8.31/lib/sha256.c:226
0x000045a8      c1c60a         rol esi, 0xa
0x000045ab      31f1           xor ecx, esi
0x000045ad      89c6           mov esi, eax
0x000045af      09fe           or esi, edi
0x000045b1      21d6           and esi, edx
0x000045b3      4409fe         or esi, r15d
0x000045b6      448b7c2428     mov r15d, dword [rsp + 0x28]
0x000045bb      01ce           add esi, ecx
0x000045bd      4401f6         add esi, r14d
0x000045c0      4489f9         mov ecx, r15d
0x000045c3      4589fe         mov r14d, r15d
0x000045c6      c1c10f         rol ecx, 0xf
0x000045c9      41c1c60d       rol r14d, 0xd
0x000045cd      4131ce         xor r14d, ecx
0x000045d0      4489f9         mov ecx, r15d
0x000045d3      c1e90a         shr ecx, 0xa
0x000045d6      4131ce         xor r14d, ecx
0x000045d9      8b8c24c80000.  mov ecx, dword [rsp + 0xc8]
0x000045e0      c1c907         ror ecx, 7
0x000045e3      4189cf         mov r15d, ecx
0x000045e6      8b8c24c80000.  mov ecx, dword [rsp + 0xc8]
0x000045ed      c1c10e         rol ecx, 0xe
0x000045f0      4431f9         xor ecx, r15d
0x000045f3      448bbc24c800.  mov r15d, dword [rsp + 0xc8]
0x000045fb      41c1ef03       shr r15d, 3
0x000045ff      4431f9         xor ecx, r15d
0x00004602      038c24c40000.  add ecx, dword [rsp + 0xc4]
0x00004609      4189ff         mov r15d, edi
0x0000460c      034c2410       add ecx, dword [rsp + 0x10]
0x00004610      4121f7         and r15d, esi
0x00004613      4401f1         add ecx, r14d
0x00004616      4589e6         mov r14d, r12d
0x00004619      4131ee         xor r14d, ebp
0x0000461c      458dac0d4791.  lea r13d, [r13 + rcx - 0x2a586eb9]
0x00004624      894c2430       mov dword [rsp + 0x30], ecx
0x00004628      4121de         and r14d, ebx
0x0000462b      89d9           mov ecx, ebx
0x0000462d      4531e6         xor r14d, r12d
0x00004630      c1c90b         ror ecx, 0xb
0x00004633      4501f5         add r13d, r14d
0x00004636      4189de         mov r14d, ebx
0x00004639      41c1ce06       ror r14d, 6
0x0000463d      4431f1         xor ecx, r14d
0x00004640      4189de         mov r14d, ebx
0x00004643      41c1c607       rol r14d, 7
0x00004647      4131ce         xor r14d, ecx
0x0000464a      4501ee         add r14d, r13d
0x0000464d      468d2c32       lea r13d, [rdx + r14]
0x00004651      89f2           mov edx, esi
0x00004653      c1ca02         ror edx, 2
0x00004656      89d1           mov ecx, edx
0x00004658      89f2           mov edx, esi
0x0000465a      c1ca0d         ror edx, 0xd
0x0000465d      31ca           xor edx, ecx
0x0000465f      89f1           mov ecx, esi                            ; ../coreutils-8.31/lib/sha256.c:227
0x00004661      c1c10a         rol ecx, 0xa
0x00004664      31ca           xor edx, ecx
0x00004666      89f9           mov ecx, edi
0x00004668      09f1           or ecx, esi
0x0000466a      21c1           and ecx, eax
0x0000466c      4409f9         or ecx, r15d
0x0000466f      448b7c242c     mov r15d, dword [rsp + 0x2c]
0x00004674      01d1           add ecx, edx
0x00004676      4401f1         add ecx, r14d
0x00004679      4489fa         mov edx, r15d
0x0000467c      4589fe         mov r14d, r15d
0x0000467f      c1c20f         rol edx, 0xf
0x00004682      41c1c60d       rol r14d, 0xd
0x00004686      4131d6         xor r14d, edx
0x00004689      4489fa         mov edx, r15d
0x0000468c      c1ea0a         shr edx, 0xa
0x0000468f      4131d6         xor r14d, edx
0x00004692      8b9424cc0000.  mov edx, dword [rsp + 0xcc]
0x00004699      c1ca07         ror edx, 7
0x0000469c      4189d7         mov r15d, edx
0x0000469f      8b9424cc0000.  mov edx, dword [rsp + 0xcc]
0x000046a6      c1c20e         rol edx, 0xe
0x000046a9      4431fa         xor edx, r15d
0x000046ac      448bbc24cc00.  mov r15d, dword [rsp + 0xcc]
0x000046b4      41c1ef03       shr r15d, 3
0x000046b8      4431fa         xor edx, r15d
0x000046bb      039424c80000.  add edx, dword [rsp + 0xc8]
0x000046c2      4189f7         mov r15d, esi
0x000046c5      03542418       add edx, dword [rsp + 0x18]
0x000046c9      4121cf         and r15d, ecx
0x000046cc      4401f2         add edx, r14d
0x000046cf      4189ee         mov r14d, ebp
0x000046d2      4131de         xor r14d, ebx
0x000046d5      458da4145163.  lea r12d, [r12 + rdx + 0x6ca6351]
0x000046dd      89542434       mov dword [rsp + 0x34], edx
0x000046e1      4521ee         and r14d, r13d
0x000046e4      4489ea         mov edx, r13d
0x000046e7      4131ee         xor r14d, ebp
0x000046ea      c1ca0b         ror edx, 0xb
0x000046ed      4501e6         add r14d, r12d
0x000046f0      4589ec         mov r12d, r13d
0x000046f3      41c1cc06       ror r12d, 6
0x000046f7      4431e2         xor edx, r12d
0x000046fa      4589ec         mov r12d, r13d
0x000046fd      41c1c407       rol r12d, 7
0x00004701      4131d4         xor r12d, edx
0x00004704      89ca           mov edx, ecx
0x00004706      4501f4         add r12d, r14d
0x00004709      c1ca02         ror edx, 2
0x0000470c      468d3420       lea r14d, [rax + r12]
0x00004710      89c8           mov eax, ecx
0x00004712      c1c80d         ror eax, 0xd
0x00004715      31d0           xor eax, edx
0x00004717      89ca           mov edx, ecx                            ; ../coreutils-8.31/lib/sha256.c:228
0x00004719      c1c20a         rol edx, 0xa
0x0000471c      31d0           xor eax, edx
0x0000471e      89f2           mov edx, esi
0x00004720      09ca           or edx, ecx
0x00004722      21fa           and edx, edi
0x00004724      4409fa         or edx, r15d
0x00004727      448b7c2430     mov r15d, dword [rsp + 0x30]
0x0000472c      01c2           add edx, eax
0x0000472e      4401e2         add edx, r12d
0x00004731      4489f8         mov eax, r15d
0x00004734      4589fc         mov r12d, r15d
0x00004737      c1c00f         rol eax, 0xf
0x0000473a      41c1c40d       rol r12d, 0xd
0x0000473e      4131c4         xor r12d, eax
0x00004741      4489f8         mov eax, r15d
0x00004744      c1e80a         shr eax, 0xa
0x00004747      4131c4         xor r12d, eax
0x0000474a      4489d8         mov eax, r11d
0x0000474d      c1c807         ror eax, 7
0x00004750      4189c7         mov r15d, eax
0x00004753      4489d8         mov eax, r11d
0x00004756      c1c00e         rol eax, 0xe
0x00004759      4431f8         xor eax, r15d
0x0000475c      4589df         mov r15d, r11d
0x0000475f      41c1ef03       shr r15d, 3
0x00004763      4431f8         xor eax, r15d
0x00004766      038424cc0000.  add eax, dword [rsp + 0xcc]
0x0000476d      4189cf         mov r15d, ecx
0x00004770      0344241c       add eax, dword [rsp + 0x1c]
0x00004774      4401e0         add eax, r12d
0x00004777      4189dc         mov r12d, ebx
0x0000477a      4531ec         xor r12d, r13d
0x0000477d      8dac05672929.  lea ebp, [rbp + rax + 0x14292967]
0x00004784      89442438       mov dword [rsp + 0x38], eax
0x00004788      4521f4         and r12d, r14d
0x0000478b      4489f0         mov eax, r14d
0x0000478e      4131dc         xor r12d, ebx
0x00004791      c1c80b         ror eax, 0xb
0x00004794      4101ec         add r12d, ebp
0x00004797      4489f5         mov ebp, r14d
0x0000479a      c1cd06         ror ebp, 6
0x0000479d      31e8           xor eax, ebp
0x0000479f      4489f5         mov ebp, r14d
0x000047a2      c1c507         rol ebp, 7
0x000047a5      31c5           xor ebp, eax
0x000047a7      89d0           mov eax, edx
0x000047a9      4401e5         add ebp, r12d
0x000047ac      4189d4         mov r12d, edx
0x000047af      c1c802         ror eax, 2
0x000047b2      41c1cc0d       ror r12d, 0xd
0x000047b6      01ef           add edi, ebp
0x000047b8      4131c4         xor r12d, eax
0x000047bb      89d0           mov eax, edx
0x000047bd      c1c00a         rol eax, 0xa
0x000047c0      4131c4         xor r12d, eax
0x000047c3      89c8           mov eax, ecx
0x000047c5      09d0           or eax, edx
0x000047c7      21f0           and eax, esi
0x000047c9      4121d7         and r15d, edx
0x000047cc      4409f8         or eax, r15d
0x000047cf      448b7c2434     mov r15d, dword [rsp + 0x34]
0x000047d4      4401e0         add eax, r12d
0x000047d7      01e8           add eax, ebp
0x000047d9      4589fc         mov r12d, r15d
0x000047dc      4489fd         mov ebp, r15d
0x000047df      c1c50f         rol ebp, 0xf
0x000047e2      41c1c40d       rol r12d, 0xd
0x000047e6      4131ec         xor r12d, ebp
0x000047e9      4489fd         mov ebp, r15d
0x000047ec      c1ed0a         shr ebp, 0xa
0x000047ef      4131ec         xor r12d, ebp
0x000047f2      4489d5         mov ebp, r10d
0x000047f5      c1cd07         ror ebp, 7
0x000047f8      4189ef         mov r15d, ebp
0x000047fb      4489d5         mov ebp, r10d
0x000047fe      c1c50e         rol ebp, 0xe
0x00004801      4431fd         xor ebp, r15d
0x00004804      4589d7         mov r15d, r10d
0x00004807      41c1ef03       shr r15d, 3
0x0000480b      4431fd         xor ebp, r15d
0x0000480e      4101eb         add r11d, ebp
0x00004811      44035c2420     add r11d, dword [rsp + 0x20]
0x00004816      4489ed         mov ebp, r13d
0x00004819      4431f5         xor ebp, r14d
0x0000481c      21fd           and ebp, edi
0x0000481e      4431ed         xor ebp, r13d
0x00004821      4501e3         add r11d, r12d
0x00004824      4189d4         mov r12d, edx                           ; ../coreutils-8.31/lib/sha256.c:229
0x00004827      428d9c1b850a.  lea ebx, [rbx + r11 + 0x27b70a85]
0x0000482f      4589df         mov r15d, r11d
0x00004832      4189fb         mov r11d, edi
0x00004835      41c1cb0b       ror r11d, 0xb
0x00004839      44897c2468     mov dword [rsp + 0x68], r15d
0x0000483e      01dd           add ebp, ebx
0x00004840      89fb           mov ebx, edi
0x00004842      c1cb06         ror ebx, 6
0x00004845      4131db         xor r11d, ebx
0x00004848      89fb           mov ebx, edi
0x0000484a      c1c307         rol ebx, 7
0x0000484d      4431db         xor ebx, r11d
0x00004850      4189c3         mov r11d, eax
0x00004853      01eb           add ebx, ebp
0x00004855      89c5           mov ebp, eax
0x00004857      41c1cb02       ror r11d, 2
0x0000485b      c1cd0d         ror ebp, 0xd
0x0000485e      01de           add esi, ebx
0x00004860      4431dd         xor ebp, r11d
0x00004863      4189c3         mov r11d, eax
0x00004866      41c1c30a       rol r11d, 0xa
0x0000486a      4431dd         xor ebp, r11d
0x0000486d      4189d3         mov r11d, edx                           ; ../coreutils-8.31/lib/sha256.c:230
0x00004870      4121c4         and r12d, eax
0x00004873      4109c3         or r11d, eax
0x00004876      4121cb         and r11d, ecx
0x00004879      4509e3         or r11d, r12d
0x0000487c      448b642438     mov r12d, dword [rsp + 0x38]
0x00004881      4101eb         add r11d, ebp
0x00004884      4101db         add r11d, ebx
0x00004887      4489e5         mov ebp, r12d
0x0000488a      4489e3         mov ebx, r12d
0x0000488d      c1c30f         rol ebx, 0xf
0x00004890      c1c50d         rol ebp, 0xd
0x00004893      31dd           xor ebp, ebx
0x00004895      4489e3         mov ebx, r12d
0x00004898      c1eb0a         shr ebx, 0xa
0x0000489b      31dd           xor ebp, ebx
0x0000489d      4489cb         mov ebx, r9d
0x000048a0      c1cb07         ror ebx, 7
0x000048a3      4189dc         mov r12d, ebx
0x000048a6      4489cb         mov ebx, r9d
0x000048a9      c1c30e         rol ebx, 0xe
0x000048ac      4431e3         xor ebx, r12d
0x000048af      4589cc         mov r12d, r9d
0x000048b2      41c1ec03       shr r12d, 3
0x000048b6      4431e3         xor ebx, r12d
0x000048b9      4589fc         mov r12d, r15d
0x000048bc      4101da         add r10d, ebx
0x000048bf      4403542424     add r10d, dword [rsp + 0x24]
0x000048c4      4489f3         mov ebx, r14d
0x000048c7      31fb           xor ebx, edi
0x000048c9      21f3           and ebx, esi
0x000048cb      4431f3         xor ebx, r14d
0x000048ce      4101ea         add r10d, ebp
0x000048d1      438dac153821.  lea ebp, [r13 + r10 + 0x2e1b2138]
0x000048d9      4189f5         mov r13d, esi
0x000048dc      448954243c     mov dword [rsp + 0x3c], r10d
0x000048e1      41c1cd06       ror r13d, 6
0x000048e5      01dd           add ebp, ebx
0x000048e7      4489eb         mov ebx, r13d
0x000048ea      4189f5         mov r13d, esi
0x000048ed      41c1cd0b       ror r13d, 0xb
0x000048f1      4589ea         mov r10d, r13d
0x000048f4      4189f5         mov r13d, esi
0x000048f7      41c1c507       rol r13d, 7
0x000048fb      4131da         xor r10d, ebx
0x000048fe      4489eb         mov ebx, r13d
0x00004901      4589dd         mov r13d, r11d
0x00004904      4431d3         xor ebx, r10d
0x00004907      41c1cd02       ror r13d, 2
0x0000490b      01eb           add ebx, ebp
0x0000490d      4589ea         mov r10d, r13d
0x00004910      4589dd         mov r13d, r11d
0x00004913      01d9           add ecx, ebx
0x00004915      41c1cd0d       ror r13d, 0xd
0x00004919      41c1c40d       rol r12d, 0xd
0x0000491d      4489ed         mov ebp, r13d
0x00004920      4589dd         mov r13d, r11d
0x00004923      4431d5         xor ebp, r10d
0x00004926      41c1c50a       rol r13d, 0xa
0x0000492a      4431ed         xor ebp, r13d
0x0000492d      4189c5         mov r13d, eax
0x00004930      4509dd         or r13d, r11d
0x00004933      4589ea         mov r10d, r13d
0x00004936      4189c5         mov r13d, eax
0x00004939      4521dd         and r13d, r11d
0x0000493c      4121d2         and r10d, edx
0x0000493f      4509ea         or r10d, r13d
0x00004942      4589fd         mov r13d, r15d
0x00004945      4101ea         add r10d, ebp                           ; ../coreutils-8.31/lib/sha256.c:232
0x00004948      4489e5         mov ebp, r12d
0x0000494b      4589c4         mov r12d, r8d
0x0000494e      4101da         add r10d, ebx
0x00004951      4489fb         mov ebx, r15d
0x00004954      41c1cc07       ror r12d, 7
0x00004958      c1c30f         rol ebx, 0xf
0x0000495b      41c1ed0a       shr r13d, 0xa
0x0000495f      448b7c2408     mov r15d, dword [rsp + 8]
0x00004964      31dd           xor ebp, ebx
0x00004966      4489c3         mov ebx, r8d
0x00004969      c1c30e         rol ebx, 0xe
0x0000496c      4431ed         xor ebp, r13d
0x0000496f      4431e3         xor ebx, r12d
0x00004972      4589c4         mov r12d, r8d
0x00004975      41c1ec03       shr r12d, 3
0x00004979      4431e3         xor ebx, r12d
0x0000497c      4589dc         mov r12d, r11d
0x0000497f      4101d9         add r9d, ebx
0x00004982      44034c2428     add r9d, dword [rsp + 0x28]
0x00004987      89fb           mov ebx, edi
0x00004989      31f3           xor ebx, esi
0x0000498b      21cb           and ebx, ecx
0x0000498d      31fb           xor ebx, edi
0x0000498f      4101e9         add r9d, ebp
0x00004992      4589cd         mov r13d, r9d
0x00004995      438dac0efc6d.  lea ebp, [r14 + r9 + 0x4d2c6dfc]
0x0000499d      4189c9         mov r9d, ecx
0x000049a0      41c1c906       ror r9d, 6
0x000049a4      448b74240c     mov r14d, dword [rsp + 0xc]
0x000049a9      44896c246c     mov dword [rsp + 0x6c], r13d
0x000049ae      01dd           add ebp, ebx
0x000049b0      4489cb         mov ebx, r9d
0x000049b3      4189c9         mov r9d, ecx
0x000049b6      41c1c90b       ror r9d, 0xb
0x000049ba      4131d9         xor r9d, ebx
0x000049bd      89cb           mov ebx, ecx
0x000049bf      c1c307         rol ebx, 7
0x000049c2      4431cb         xor ebx, r9d
0x000049c5      4589d1         mov r9d, r10d
0x000049c8      01eb           add ebx, ebp
0x000049ca      41c1c902       ror r9d, 2
0x000049ce      4521d4         and r12d, r10d
0x000049d1      8d2c1a         lea ebp, [rdx + rbx]
0x000049d4      4489d2         mov edx, r10d
0x000049d7      c1ca0d         ror edx, 0xd
0x000049da      4431ca         xor edx, r9d
0x000049dd      4589d1         mov r9d, r10d
0x000049e0      41c1c10a       rol r9d, 0xa
0x000049e4      4431ca         xor edx, r9d
0x000049e7      4589d9         mov r9d, r11d
0x000049ea      4509d1         or r9d, r10d
0x000049ed      4121c1         and r9d, eax
0x000049f0      4509e1         or r9d, r12d
0x000049f3      448b64243c     mov r12d, dword [rsp + 0x3c]
0x000049f8      4101d1         add r9d, edx
0x000049fb      4101d9         add r9d, ebx
0x000049fe      4489e2         mov edx, r12d
0x00004a01      4489e3         mov ebx, r12d
0x00004a04      c1c30f         rol ebx, 0xf
0x00004a07      c1c20d         rol edx, 0xd
0x00004a0a      31da           xor edx, ebx
0x00004a0c      4489e3         mov ebx, r12d
0x00004a0f      4589fc         mov r12d, r15d
0x00004a12      c1eb0a         shr ebx, 0xa
0x00004a15      41c1cc07       ror r12d, 7
0x00004a19      31da           xor edx, ebx
0x00004a1b      4489fb         mov ebx, r15d
0x00004a1e      c1c30e         rol ebx, 0xe
0x00004a21      4431e3         xor ebx, r12d
0x00004a24      4589fc         mov r12d, r15d
0x00004a27      41c1ec03       shr r12d, 3
0x00004a2b      4431e3         xor ebx, r12d
0x00004a2e      4101d8         add r8d, ebx
0x00004a31      440344242c     add r8d, dword [rsp + 0x2c]
0x00004a36      4489d3         mov ebx, r10d                           ; ../coreutils-8.31/lib/sha256.c:234
0x00004a39      4101d0         add r8d, edx
0x00004a3c      89f2           mov edx, esi
0x00004a3e      31ca           xor edx, ecx
0x00004a40      428dbc07130d.  lea edi, [rdi + r8 + 0x53380d13]
0x00004a48      4589c4         mov r12d, r8d
0x00004a4b      21ea           and edx, ebp
0x00004a4d      4189e8         mov r8d, ebp
0x00004a50      4489642470     mov dword [rsp + 0x70], r12d
0x00004a55      31f2           xor edx, esi
0x00004a57      41c1c80b       ror r8d, 0xb
0x00004a5b      01d7           add edi, edx
0x00004a5d      89ea           mov edx, ebp
0x00004a5f      c1ca06         ror edx, 6
0x00004a62      4131d0         xor r8d, edx
0x00004a65      89ea           mov edx, ebp
0x00004a67      c1c207         rol edx, 7
0x00004a6a      4421cb         and ebx, r9d
0x00004a6d      4431c2         xor edx, r8d
0x00004a70      4589c8         mov r8d, r9d
0x00004a73      01fa           add edx, edi
0x00004a75      4489cf         mov edi, r9d
0x00004a78      41c1c802       ror r8d, 2
0x00004a7c      c1cf0d         ror edi, 0xd
0x00004a7f      01d0           add eax, edx
0x00004a81      4431c7         xor edi, r8d
0x00004a84      4589c8         mov r8d, r9d
0x00004a87      41c1c00a       rol r8d, 0xa
0x00004a8b      4431c7         xor edi, r8d
0x00004a8e      4589d0         mov r8d, r10d
0x00004a91      4509c8         or r8d, r9d
0x00004a94      4521d8         and r8d, r11d
0x00004a97      4109d8         or r8d, ebx
0x00004a9a      4489f3         mov ebx, r14d
0x00004a9d      4101f8         add r8d, edi
0x00004aa0      4489ef         mov edi, r13d
0x00004aa3      c1cb07         ror ebx, 7
0x00004aa6      4101d0         add r8d, edx
0x00004aa9      4489ea         mov edx, r13d
0x00004aac      c1c70d         rol edi, 0xd
0x00004aaf      c1c20f         rol edx, 0xf
0x00004ab2      31d7           xor edi, edx
0x00004ab4      4489ea         mov edx, r13d
0x00004ab7      c1ea0a         shr edx, 0xa
0x00004aba      31d7           xor edi, edx
0x00004abc      4489f2         mov edx, r14d
0x00004abf      c1c20e         rol edx, 0xe
0x00004ac2      31da           xor edx, ebx
0x00004ac4      4489f3         mov ebx, r14d
0x00004ac7      c1eb03         shr ebx, 3
0x00004aca      31da           xor edx, ebx
0x00004acc      4401fa         add edx, r15d
0x00004acf      03542430       add edx, dword [rsp + 0x30]
0x00004ad3      01d7           add edi, edx
0x00004ad5      89ca           mov edx, ecx
0x00004ad7      31ea           xor edx, ebp
0x00004ad9      8db43e54730a.  lea esi, [rsi + rdi + 0x650a7354]
0x00004ae0      4189fd         mov r13d, edi
0x00004ae3      21c2           and edx, eax
0x00004ae5      89c7           mov edi, eax
0x00004ae7      31ca           xor edx, ecx
0x00004ae9      01d6           add esi, edx
0x00004aeb      c1cf06         ror edi, 6
0x00004aee      89fa           mov edx, edi
0x00004af0      89c7           mov edi, eax
0x00004af2      c1cf0b         ror edi, 0xb
0x00004af5      89fb           mov ebx, edi
0x00004af7      89c7           mov edi, eax
0x00004af9      c1c707         rol edi, 7
0x00004afc      31d3           xor ebx, edx
0x00004afe      89fa           mov edx, edi
0x00004b00      4489c7         mov edi, r8d
0x00004b03      31da           xor edx, ebx
0x00004b05      c1c70a         rol edi, 0xa
0x00004b08      01f2           add edx, esi
0x00004b0a      4489c6         mov esi, r8d
0x00004b0d      c1ce02         ror esi, 2
0x00004b10      4101d3         add r11d, edx
0x00004b13      89f3           mov ebx, esi
0x00004b15      4489c6         mov esi, r8d
0x00004b18      c1ce0d         ror esi, 0xd
0x00004b1b      31de           xor esi, ebx                            ; ../coreutils-8.31/lib/sha256.c:233
0x00004b1d      31fe           xor esi, edi                            ; ../coreutils-8.31/lib/sha256.c:234
0x00004b1f      4489cf         mov edi, r9d
0x00004b22      4409c7         or edi, r8d
0x00004b25      89fb           mov ebx, edi
0x00004b27      4489cf         mov edi, r9d
0x00004b2a      4421c7         and edi, r8d
0x00004b2d      4421d3         and ebx, r10d
0x00004b30      09fb           or ebx, edi
0x00004b32      4489e7         mov edi, r12d
0x00004b35      01f3           add ebx, esi
0x00004b37      c1c70f         rol edi, 0xf
0x00004b3a      01d3           add ebx, edx
0x00004b3c      89fa           mov edx, edi
0x00004b3e      4489e7         mov edi, r12d
0x00004b41      c1c70d         rol edi, 0xd
0x00004b44      31d7           xor edi, edx
0x00004b46      4489e2         mov edx, r12d
0x00004b49      448b642410     mov r12d, dword [rsp + 0x10]
0x00004b4e      c1ea0a         shr edx, 0xa
0x00004b51      31d7           xor edi, edx
0x00004b53      4489e6         mov esi, r12d
0x00004b56      4489e2         mov edx, r12d
0x00004b59      c1ce07         ror esi, 7
0x00004b5c      c1c20e         rol edx, 0xe
0x00004b5f      31f2           xor edx, esi
0x00004b61      4489e6         mov esi, r12d
0x00004b64      c1ee03         shr esi, 3
0x00004b67      31f2           xor edx, esi
0x00004b69      4401f2         add edx, r14d
0x00004b6c      03542434       add edx, dword [rsp + 0x34]
0x00004b70      01d7           add edi, edx
0x00004b72      89ea           mov edx, ebp
0x00004b74      31c2           xor edx, eax
0x00004b76      8d8c39bb0a6a.  lea ecx, [rcx + rdi + 0x766a0abb]
0x00004b7d      897c2414       mov dword [rsp + 0x14], edi
0x00004b81      4421da         and edx, r11d
0x00004b84      4489df         mov edi, r11d
0x00004b87      44896c2448     mov dword [rsp + 0x48], r13d
0x00004b8c      31ea           xor edx, ebp
0x00004b8e      c1cf0b         ror edi, 0xb
0x00004b91      448b742418     mov r14d, dword [rsp + 0x18]
0x00004b96      01d1           add ecx, edx
0x00004b98      4489da         mov edx, r11d
0x00004b9b      4189ff         mov r15d, edi                           ; ../coreutils-8.31/lib/sha256.c:235
0x00004b9e      c1ca06         ror edx, 6                              ; ../coreutils-8.31/lib/sha256.c:234
0x00004ba1      89df           mov edi, ebx
0x00004ba3      4131d7         xor r15d, edx
0x00004ba6      4489da         mov edx, r11d
0x00004ba9      c1c70a         rol edi, 0xa
0x00004bac      c1c207         rol edx, 7
0x00004baf      4489f6         mov esi, r14d
0x00004bb2      4431fa         xor edx, r15d
0x00004bb5      c1c60e         rol esi, 0xe
0x00004bb8      01ca           add edx, ecx
0x00004bba      89d9           mov ecx, ebx
0x00004bbc      c1c902         ror ecx, 2
0x00004bbf      4101d2         add r10d, edx
0x00004bc2      4189cf         mov r15d, ecx
0x00004bc5      89d9           mov ecx, ebx
0x00004bc7      c1c90d         ror ecx, 0xd
0x00004bca      4431f9         xor ecx, r15d
0x00004bcd      31f9           xor ecx, edi
0x00004bcf      4489c7         mov edi, r8d
0x00004bd2      09df           or edi, ebx
0x00004bd4      4189ff         mov r15d, edi                           ; ../coreutils-8.31/lib/sha256.c:235
0x00004bd7      4489c7         mov edi, r8d
0x00004bda      21df           and edi, ebx
0x00004bdc      4521cf         and r15d, r9d
0x00004bdf      4109ff         or r15d, edi
0x00004be2      4489d7         mov edi, r10d
0x00004be5      4101cf         add r15d, ecx
0x00004be8      4489e9         mov ecx, r13d
0x00004beb      4101d7         add r15d, edx
0x00004bee      4489ea         mov edx, r13d
0x00004bf1      c1c10f         rol ecx, 0xf
0x00004bf4      c1c20d         rol edx, 0xd
0x00004bf7      31ca           xor edx, ecx
0x00004bf9      4489e9         mov ecx, r13d
0x00004bfc      c1e90a         shr ecx, 0xa
0x00004bff      31ca           xor edx, ecx
0x00004c01      4489f1         mov ecx, r14d
0x00004c04      c1c907         ror ecx, 7
0x00004c07      31ce           xor esi, ecx
0x00004c09      4489f1         mov ecx, r14d
0x00004c0c      c1e903         shr ecx, 3
0x00004c0f      31ce           xor esi, ecx
0x00004c11      4401e6         add esi, r12d
0x00004c14      03742438       add esi, dword [rsp + 0x38]
0x00004c18      c1cf0b         ror edi, 0xb
0x00004c1b      8d0c32         lea ecx, [rdx + rsi]
0x00004c1e      89c2           mov edx, eax
0x00004c20      89de           mov esi, ebx
0x00004c22      4431da         xor edx, r11d
0x00004c25      4421fe         and esi, r15d
0x00004c28      4189cc         mov r12d, ecx
0x00004c2b      4421d2         and edx, r10d
0x00004c2e      8d8c0d2ec9c2.  lea ecx, [rbp + rcx - 0x7e3d36d2]
0x00004c35      31c2           xor edx, eax
0x00004c37      8b6c241c       mov ebp, dword [rsp + 0x1c]
0x00004c3b      448964241c     mov dword [rsp + 0x1c], r12d
0x00004c40      01d1           add ecx, edx
0x00004c42      4489d2         mov edx, r10d
0x00004c45      c1ca06         ror edx, 6
0x00004c48      31d7           xor edi, edx
0x00004c4a      4489d2         mov edx, r10d
0x00004c4d      c1c207         rol edx, 7
0x00004c50      31fa           xor edx, edi
0x00004c52      4489ff         mov edi, r15d
0x00004c55      01ca           add edx, ecx
0x00004c57      4489f9         mov ecx, r15d
0x00004c5a      c1cf02         ror edi, 2
0x00004c5d      c1c90d         ror ecx, 0xd                            ; ../coreutils-8.31/lib/sha256.c:236
0x00004c60      4101d1         add r9d, edx
0x00004c63      31f9           xor ecx, edi
0x00004c65      4489ff         mov edi, r15d
0x00004c68      c1c70a         rol edi, 0xa
0x00004c6b      31f9           xor ecx, edi
0x00004c6d      89df           mov edi, ebx
0x00004c6f      4409ff         or edi, r15d
0x00004c72      4421c7         and edi, r8d
0x00004c75      09f7           or edi, esi
0x00004c77      8b742414       mov esi, dword [rsp + 0x14]
0x00004c7b      01cf           add edi, ecx
0x00004c7d      01d7           add edi, edx
0x00004c7f      89f1           mov ecx, esi
0x00004c81      89f2           mov edx, esi
0x00004c83      c1c10d         rol ecx, 0xd
0x00004c86      c1c20f         rol edx, 0xf
0x00004c89      4189cd         mov r13d, ecx
0x00004c8c      4131d5         xor r13d, edx
0x00004c8f      89f2           mov edx, esi
0x00004c91      89ee           mov esi, ebp
0x00004c93      c1ea0a         shr edx, 0xa
0x00004c96      c1c60e         rol esi, 0xe
0x00004c99      4131d5         xor r13d, edx
0x00004c9c      89ea           mov edx, ebp
0x00004c9e      c1ca07         ror edx, 7
0x00004ca1      31d6           xor esi, edx
0x00004ca3      89ea           mov edx, ebp
0x00004ca5      c1ea03         shr edx, 3
0x00004ca8      31d6           xor esi, edx
0x00004caa      4489da         mov edx, r11d
0x00004cad      4401f6         add esi, r14d
0x00004cb0      03742468       add esi, dword [rsp + 0x68]
0x00004cb4      4431d2         xor edx, r10d
0x00004cb7      4421ca         and edx, r9d
0x00004cba      448b742420     mov r14d, dword [rsp + 0x20]
0x00004cbf      4431da         xor edx, r11d
0x00004cc2      418d4c3500     lea ecx, [r13 + rsi]
0x00004cc7      4489ce         mov esi, r9d
0x00004cca      4589fd         mov r13d, r15d
0x00004ccd      c1ce0b         ror esi, 0xb
0x00004cd0      4121fd         and r13d, edi
0x00004cd3      8d8408852c72.  lea eax, [rax + rcx - 0x6d8dd37b]
0x00004cda      894c2408       mov dword [rsp + 8], ecx
0x00004cde      4489f1         mov ecx, r14d
0x00004ce1      c1c10e         rol ecx, 0xe
0x00004ce4      01c2           add edx, eax
0x00004ce6      4489c8         mov eax, r9d
0x00004ce9      c1c806         ror eax, 6
0x00004cec      31c6           xor esi, eax
0x00004cee      4489c8         mov eax, r9d
0x00004cf1      c1c007         rol eax, 7
0x00004cf4      31f0           xor eax, esi
0x00004cf6      89fe           mov esi, edi
0x00004cf8      01d0           add eax, edx
0x00004cfa      89fa           mov edx, edi
0x00004cfc      c1ce02         ror esi, 2
0x00004cff      c1ca0d         ror edx, 0xd
0x00004d02      4101c0         add r8d, eax
0x00004d05      31f2           xor edx, esi
0x00004d07      89fe           mov esi, edi
0x00004d09      c1c60a         rol esi, 0xa                            ; ../coreutils-8.31/lib/sha256.c:237
0x00004d0c      31f2           xor edx, esi
0x00004d0e      4489fe         mov esi, r15d
0x00004d11      09fe           or esi, edi
0x00004d13      21de           and esi, ebx
0x00004d15      4409ee         or esi, r13d
0x00004d18      4589e5         mov r13d, r12d
0x00004d1b      01d6           add esi, edx
0x00004d1d      41c1c50d       rol r13d, 0xd
0x00004d21      01c6           add esi, eax
0x00004d23      4489e0         mov eax, r12d
0x00004d26      c1c00f         rol eax, 0xf
0x00004d29      4131c5         xor r13d, eax
0x00004d2c      4489e0         mov eax, r12d
0x00004d2f      4589d4         mov r12d, r10d
0x00004d32      c1e80a         shr eax, 0xa
0x00004d35      4131c5         xor r13d, eax
0x00004d38      4489f0         mov eax, r14d
0x00004d3b      c1c807         ror eax, 7
0x00004d3e      31c1           xor ecx, eax
0x00004d40      4489f0         mov eax, r14d
0x00004d43      4531cc         xor r12d, r9d
0x00004d46      c1e803         shr eax, 3
0x00004d49      31c1           xor ecx, eax
0x00004d4b      4489e0         mov eax, r12d
0x00004d4e      4589c4         mov r12d, r8d                           ; ../coreutils-8.31/lib/sha256.c:238
0x00004d51      01e9           add ecx, ebp
0x00004d53      034c243c       add ecx, dword [rsp + 0x3c]
0x00004d57      4421c0         and eax, r8d
0x00004d5a      4431d0         xor eax, r10d
0x00004d5d      41c1c407       rol r12d, 7
0x00004d61      8b6c2408       mov ebp, dword [rsp + 8]
0x00004d65      4101cd         add r13d, ecx
0x00004d68      89f1           mov ecx, esi
0x00004d6a      438d942ba1e8.  lea edx, [r11 + r13 - 0x5d40175f]
0x00004d72      4589c3         mov r11d, r8d
0x00004d75      44896c2420     mov dword [rsp + 0x20], r13d
0x00004d7a      41c1cb06       ror r11d, 6
0x00004d7e      01c2           add edx, eax
0x00004d80      4489d8         mov eax, r11d
0x00004d83      4589c3         mov r11d, r8d
0x00004d86      41c1cb0b       ror r11d, 0xb
0x00004d8a      4131c3         xor r11d, eax
0x00004d8d      4489e0         mov eax, r12d
0x00004d90      4189fc         mov r12d, edi
0x00004d93      4431d8         xor eax, r11d
0x00004d96      4189f3         mov r11d, esi
0x00004d99      4121f4         and r12d, esi
0x00004d9c      01d0           add eax, edx
0x00004d9e      89f2           mov edx, esi
0x00004da0      41c1cb02       ror r11d, 2
0x00004da4      c1ca0d         ror edx, 0xd
0x00004da7      01c3           add ebx, eax
0x00004da9      4431da         xor edx, r11d
0x00004dac      4189f3         mov r11d, esi
0x00004daf      41c1c30a       rol r11d, 0xa
0x00004db3      4431da         xor edx, r11d
0x00004db6      4189fb         mov r11d, edi
0x00004db9      4109f3         or r11d, esi
0x00004dbc      4521fb         and r11d, r15d
0x00004dbf      4509e3         or r11d, r12d
0x00004dc2      4189ec         mov r12d, ebp
0x00004dc5      4101d3         add r11d, edx
0x00004dc8      41c1c40d       rol r12d, 0xd
0x00004dcc      4101c3         add r11d, eax
0x00004dcf      89e8           mov eax, ebp
0x00004dd1      c1c00f         rol eax, 0xf
0x00004dd4      4131c4         xor r12d, eax
0x00004dd7      89e8           mov eax, ebp
0x00004dd9      8b6c2424       mov ebp, dword [rsp + 0x24]
0x00004ddd      c1e80a         shr eax, 0xa
0x00004de0      4131c4         xor r12d, eax
0x00004de3      4421d9         and ecx, r11d
0x00004de6      89e8           mov eax, ebp                            ; ../coreutils-8.31/lib/sha256.c:239
0x00004de8      89ea           mov edx, ebp
0x00004dea      c1c807         ror eax, 7
0x00004ded      c1c20e         rol edx, 0xe
0x00004df0      31c2           xor edx, eax
0x00004df2      89e8           mov eax, ebp
0x00004df4      c1e803         shr eax, 3
0x00004df7      31c2           xor edx, eax
0x00004df9      4401f2         add edx, r14d
0x00004dfc      0354246c       add edx, dword [rsp + 0x6c]
0x00004e00      448b742428     mov r14d, dword [rsp + 0x28]
0x00004e05      4401e2         add edx, r12d
0x00004e08      4589cc         mov r12d, r9d
0x00004e0b      4531c4         xor r12d, r8d
0x00004e0e      8954240c       mov dword [rsp + 0xc], edx
0x00004e12      418d94124b66.  lea edx, [r10 + rdx - 0x57e599b5]
0x00004e1a      4489e0         mov eax, r12d
0x00004e1d      4189da         mov r10d, ebx
0x00004e20      4189dc         mov r12d, ebx
0x00004e23      21d8           and eax, ebx
0x00004e25      41c1ca06       ror r10d, 6
0x00004e29      41c1c407       rol r12d, 7
0x00004e2d      4431c8         xor eax, r9d
0x00004e30      01c2           add edx, eax
0x00004e32      4489d0         mov eax, r10d
0x00004e35      4189da         mov r10d, ebx
0x00004e38      41c1ca0b       ror r10d, 0xb
0x00004e3c      4131c2         xor r10d, eax
0x00004e3f      4489e0         mov eax, r12d
0x00004e42      4589dc         mov r12d, r11d
0x00004e45      4431d0         xor eax, r10d
0x00004e48      41c1cc0d       ror r12d, 0xd
0x00004e4c      4589da         mov r10d, r11d
0x00004e4f      01d0           add eax, edx
0x00004e51      41c1ca02       ror r10d, 2
0x00004e55      4489e2         mov edx, r12d
0x00004e58      4431d2         xor edx, r10d
0x00004e5b      4589da         mov r10d, r11d
0x00004e5e      4589ec         mov r12d, r13d
0x00004e61      41c1c20a       rol r10d, 0xa
0x00004e65      4101c7         add r15d, eax
0x00004e68      4431d2         xor edx, r10d
0x00004e6b      4189f2         mov r10d, esi
0x00004e6e      4509da         or r10d, r11d
0x00004e71      4121fa         and r10d, edi
0x00004e74      4109ca         or r10d, ecx
0x00004e77      4489d9         mov ecx, r11d
0x00004e7a      4101d2         add r10d, edx
0x00004e7d      4489ea         mov edx, r13d
0x00004e80      4101c2         add r10d, eax
0x00004e83      c1c20f         rol edx, 0xf
0x00004e86      41c1c40d       rol r12d, 0xd
0x00004e8a      4131d4         xor r12d, edx
0x00004e8d      4489ea         mov edx, r13d
0x00004e90      4489f0         mov eax, r14d
0x00004e93      c1ea0a         shr edx, 0xa
0x00004e96      c1c00e         rol eax, 0xe
0x00004e99      4421d1         and ecx, r10d
0x00004e9c      4131d4         xor r12d, edx
0x00004e9f      4489f2         mov edx, r14d
0x00004ea2      c1ca07         ror edx, 7
0x00004ea5      31d0           xor eax, edx
0x00004ea7      4489f2         mov edx, r14d
0x00004eaa      c1ea03         shr edx, 3
0x00004ead      31d0           xor eax, edx
0x00004eaf      01e8           add eax, ebp
0x00004eb1      03442470       add eax, dword [rsp + 0x70]
0x00004eb5      418d2c04       lea ebp, [r12 + rax]
0x00004eb9      4589c4         mov r12d, r8d
0x00004ebc      4131dc         xor r12d, ebx
0x00004ebf      4489e0         mov eax, r12d
0x00004ec2      418d9429708b.  lea edx, [r9 + rbp - 0x3db47490]
0x00004eca      4589f9         mov r9d, r15d
0x00004ecd      4421f8         and eax, r15d
0x00004ed0      41c1c906       ror r9d, 6
0x00004ed4      4189ed         mov r13d, ebp
0x00004ed7      4431c0         xor eax, r8d
0x00004eda      4489fd         mov ebp, r15d
0x00004edd      44896c2424     mov dword [rsp + 0x24], r13d
0x00004ee2      01c2           add edx, eax
0x00004ee4      4489c8         mov eax, r9d
0x00004ee7      4589f9         mov r9d, r15d
0x00004eea      c1c507         rol ebp, 7
0x00004eed      41c1c90b       ror r9d, 0xb
0x00004ef1      4131c1         xor r9d, eax
0x00004ef4      89e8           mov eax, ebp
0x00004ef6      4431c8         xor eax, r9d
0x00004ef9      4589d1         mov r9d, r10d
0x00004efc      01d0           add eax, edx
0x00004efe      41c1c902       ror r9d, 2
0x00004f02      8d2c07         lea ebp, [rdi + rax]
0x00004f05      4489d7         mov edi, r10d
0x00004f08      c1cf0d         ror edi, 0xd
0x00004f0b      89fa           mov edx, edi
0x00004f0d      8b7c240c       mov edi, dword [rsp + 0xc]
0x00004f11      4431ca         xor edx, r9d
0x00004f14      4589d1         mov r9d, r10d
0x00004f17      41c1c10a       rol r9d, 0xa
0x00004f1b      4431ca         xor edx, r9d
0x00004f1e      4589d9         mov r9d, r11d
0x00004f21      4189fc         mov r12d, edi
0x00004f24      4509d1         or r9d, r10d
0x00004f27      4121f1         and r9d, esi
0x00004f2a      4109c9         or r9d, ecx
0x00004f2d      89d9           mov ecx, ebx
0x00004f2f      4101d1         add r9d, edx
0x00004f32      89fa           mov edx, edi
0x00004f34      4101c1         add r9d, eax
0x00004f37      c1c20f         rol edx, 0xf
0x00004f3a      41c1c40d       rol r12d, 0xd
0x00004f3e      4489e0         mov eax, r12d
0x00004f41      448b64242c     mov r12d, dword [rsp + 0x2c]
0x00004f46      c1ef0a         shr edi, 0xa
0x00004f49      31d0           xor eax, edx
0x00004f4b      4431f9         xor ecx, r15d
0x00004f4e      31f8           xor eax, edi
0x00004f50      21e9           and ecx, ebp
0x00004f52      4489e2         mov edx, r12d
0x00004f55      4489e7         mov edi, r12d
0x00004f58      31d9           xor ecx, ebx
0x00004f5a      c1ca07         ror edx, 7
0x00004f5d      c1c70e         rol edi, 0xe
0x00004f60      31d7           xor edi, edx
0x00004f62      4489e2         mov edx, r12d
0x00004f65      c1ea03         shr edx, 3
0x00004f68      31d7           xor edi, edx
0x00004f6a      4401f7         add edi, r14d
0x00004f6d      037c2448       add edi, dword [rsp + 0x48]
0x00004f71      448d3438       lea r14d, [rax + rdi]
0x00004f75      4489ef         mov edi, r13d                           ; ../coreutils-8.31/lib/sha256.c:240
0x00004f78      438d8430a351.  lea eax, [r8 + r14 - 0x3893ae5d]
0x00004f80      4189e8         mov r8d, ebp
0x00004f83      4489742410     mov dword [rsp + 0x10], r14d
0x00004f88      41c1c806       ror r8d, 6
0x00004f8c      4589ee         mov r14d, r13d
0x00004f8f      01c8           add eax, ecx
0x00004f91      4489c1         mov ecx, r8d
0x00004f94      4189e8         mov r8d, ebp
0x00004f97      41c1c80b       ror r8d, 0xb
0x00004f9b      4489c2         mov edx, r8d
0x00004f9e      4189e8         mov r8d, ebp
0x00004fa1      41c1c007       rol r8d, 7
0x00004fa5      31ca           xor edx, ecx
0x00004fa7      4489c1         mov ecx, r8d
0x00004faa      4589c8         mov r8d, r9d
0x00004fad      41c1c802       ror r8d, 2
0x00004fb1      31d1           xor ecx, edx
0x00004fb3      4489c2         mov edx, r8d
0x00004fb6      4589c8         mov r8d, r9d
0x00004fb9      01c1           add ecx, eax
0x00004fbb      41c1c80d       ror r8d, 0xd
0x00004fbf      8d040e         lea eax, [rsi + rcx]
0x00004fc2      4489c6         mov esi, r8d
0x00004fc5      4589c8         mov r8d, r9d
0x00004fc8      31d6           xor esi, edx
0x00004fca      41c1c00a       rol r8d, 0xa
0x00004fce      4431c6         xor esi, r8d
0x00004fd1      4589d0         mov r8d, r10d
0x00004fd4      4509c8         or r8d, r9d
0x00004fd7      4489c2         mov edx, r8d
0x00004fda      4589d0         mov r8d, r10d
0x00004fdd      4521c8         and r8d, r9d
0x00004fe0      4421da         and edx, r11d
0x00004fe3      4409c2         or edx, r8d
0x00004fe6      4589e8         mov r8d, r13d
0x00004fe9      01f2           add edx, esi
0x00004feb      01ca           add edx, ecx
0x00004fed      41c1c60f       rol r14d, 0xf
0x00004ff1      c1c70d         rol edi, 0xd
0x00004ff4      4431f7         xor edi, r14d
0x00004ff7      448b742430     mov r14d, dword [rsp + 0x30]
0x00004ffc      41c1e80a       shr r8d, 0xa
0x00005000      4431c7         xor edi, r8d
0x00005003      4489f1         mov ecx, r14d
0x00005006      4489f6         mov esi, r14d
0x00005009      c1c907         ror ecx, 7
0x0000500c      c1c60e         rol esi, 0xe
0x0000500f      31ce           xor esi, ecx
0x00005011      4489f1         mov ecx, r14d
0x00005014      c1e903         shr ecx, 3
0x00005017      31ce           xor esi, ecx
0x00005019      89c1           mov ecx, eax
0x0000501b      4401e6         add esi, r12d
0x0000501e      03742414       add esi, dword [rsp + 0x14]
0x00005022      c1c90b         ror ecx, 0xb
0x00005025      448b642410     mov r12d, dword [rsp + 0x10]
0x0000502a      01fe           add esi, edi                            ; ../coreutils-8.31/lib/sha256.c:241
0x0000502c      89f7           mov edi, esi
0x0000502e      4489fe         mov esi, r15d
0x00005031      31ee           xor esi, ebp
0x00005033      897c2418       mov dword [rsp + 0x18], edi
0x00005037      8dbc3b19e892.  lea edi, [rbx + rdi - 0x2e6d17e7]
0x0000503e      21c6           and esi, eax
0x00005040      8b5c2434       mov ebx, dword [rsp + 0x34]
0x00005044      4431fe         xor esi, r15d
0x00005047      01f7           add edi, esi
0x00005049      89c6           mov esi, eax
0x0000504b      c1ce06         ror esi, 6
0x0000504e      31f1           xor ecx, esi
0x00005050      89c6           mov esi, eax
0x00005052      c1c607         rol esi, 7
0x00005055      31ce           xor esi, ecx
0x00005057      01fe           add esi, edi
0x00005059      458d0433       lea r8d, [r11 + rsi]
0x0000505d      4189d3         mov r11d, edx
0x00005060      41c1cb02       ror r11d, 2
0x00005064      4489d9         mov ecx, r11d
0x00005067      4189d3         mov r11d, edx
0x0000506a      41c1cb0d       ror r11d, 0xd
0x0000506e      4489df         mov edi, r11d
0x00005071      4189d3         mov r11d, edx
0x00005074      31cf           xor edi, ecx
0x00005076      41c1c30a       rol r11d, 0xa
0x0000507a      4431df         xor edi, r11d
0x0000507d      4589cb         mov r11d, r9d                           ; ../coreutils-8.31/lib/sha256.c:242
0x00005080      4109d3         or r11d, edx
0x00005083      4489d9         mov ecx, r11d
0x00005086      4589cb         mov r11d, r9d
0x00005089      4121d3         and r11d, edx
0x0000508c      4421d1         and ecx, r10d
0x0000508f      4409d9         or ecx, r11d
0x00005092      4189db         mov r11d, ebx
0x00005095      01f9           add ecx, edi
0x00005097      4489e7         mov edi, r12d
0x0000509a      41c1cb07       ror r11d, 7
0x0000509e      01f1           add ecx, esi
0x000050a0      4489e6         mov esi, r12d
0x000050a3      c1c70d         rol edi, 0xd
0x000050a6      c1c60f         rol esi, 0xf
0x000050a9      31f7           xor edi, esi
0x000050ab      4489e6         mov esi, r12d
0x000050ae      c1ee0a         shr esi, 0xa
0x000050b1      31f7           xor edi, esi
0x000050b3      89de           mov esi, ebx
0x000050b5      c1c60e         rol esi, 0xe
0x000050b8      4431de         xor esi, r11d
0x000050bb      4189db         mov r11d, ebx
0x000050be      41c1eb03       shr r11d, 3
0x000050c2      4431de         xor esi, r11d
0x000050c5      4401f6         add esi, r14d
0x000050c8      0374241c       add esi, dword [rsp + 0x1c]
0x000050cc      448d3437       lea r14d, [rdi + rsi]
0x000050d0      89ee           mov esi, ebp
0x000050d2      31c6           xor esi, eax
0x000050d4      4421c6         and esi, r8d
0x000050d7      438dbc372406.  lea edi, [r15 + r14 - 0x2966f9dc]
0x000050df      4589f4         mov r12d, r14d
0x000050e2      31ee           xor esi, ebp
0x000050e4      4589c6         mov r14d, r8d
0x000050e7      448b7c2438     mov r15d, dword [rsp + 0x38]
0x000050ec      01f7           add edi, esi
0x000050ee      41c1ce0b       ror r14d, 0xb
0x000050f2      4489c6         mov esi, r8d
0x000050f5      c1ce06         ror esi, 6
0x000050f8      4589f5         mov r13d, r14d
0x000050fb      4189ce         mov r14d, ecx
0x000050fe      4131f5         xor r13d, esi
0x00005101      4489c6         mov esi, r8d
0x00005104      41c1ce02       ror r14d, 2
0x00005108      c1c607         rol esi, 7
0x0000510b      4489642428     mov dword [rsp + 0x28], r12d
0x00005110      4431ee         xor esi, r13d
0x00005113      4589f5         mov r13d, r14d
0x00005116      4189ce         mov r14d, ecx
0x00005119      41c1ce0d       ror r14d, 0xd
0x0000511d      01fe           add esi, edi
0x0000511f      4489f7         mov edi, r14d
0x00005122      4189ce         mov r14d, ecx
0x00005125      458d1c32       lea r11d, [r10 + rsi]
0x00005129      4431ef         xor edi, r13d
0x0000512c      41c1c60a       rol r14d, 0xa
0x00005130      4189d2         mov r10d, edx
0x00005133      4431f7         xor edi, r14d
0x00005136      4189d6         mov r14d, edx
0x00005139      4109ce         or r14d, ecx                            ; ../coreutils-8.31/lib/sha256.c:243
0x0000513c      4589f5         mov r13d, r14d
0x0000513f      4521cd         and r13d, r9d
0x00005142      4121ca         and r10d, ecx
0x00005145      4509d5         or r13d, r10d
0x00005148      448b542418     mov r10d, dword [rsp + 0x18]
0x0000514d      4101fd         add r13d, edi
0x00005150      4101f5         add r13d, esi
0x00005153      4489d7         mov edi, r10d
0x00005156      4489d6         mov esi, r10d
0x00005159      c1c60f         rol esi, 0xf
0x0000515c      c1c70d         rol edi, 0xd
0x0000515f      31f7           xor edi, esi
0x00005161      4489d6         mov esi, r10d
0x00005164      4589fa         mov r10d, r15d
0x00005167      c1ee0a         shr esi, 0xa
0x0000516a      41c1ca07       ror r10d, 7
0x0000516e      31f7           xor edi, esi
0x00005170      4489fe         mov esi, r15d
0x00005173      c1c60e         rol esi, 0xe
0x00005176      4431d6         xor esi, r10d
0x00005179      4589fa         mov r10d, r15d
0x0000517c      41c1ea03       shr r10d, 3
0x00005180      4431d6         xor esi, r10d
0x00005183      01de           add esi, ebx
0x00005185      03742408       add esi, dword [rsp + 8]
0x00005189      448d3437       lea r14d, [rdi + rsi]
0x0000518d      89c7           mov edi, eax
0x0000518f      4431c7         xor edi, r8d
0x00005192      4421df         and edi, r11d
0x00005195      428db4358535.  lea esi, [rbp + r14 - 0xbf1ca7b]
0x0000519d      4489dd         mov ebp, r11d
0x000051a0      31c7           xor edi, eax
0x000051a2      c1cd06         ror ebp, 6
0x000051a5      448974242c     mov dword [rsp + 0x2c], r14d
0x000051aa      01fe           add esi, edi
0x000051ac      89ef           mov edi, ebp
0x000051ae      4489dd         mov ebp, r11d
0x000051b1      c1cd0b         ror ebp, 0xb
0x000051b4      8b5c2468       mov ebx, dword [rsp + 0x68]
0x000051b8      4189ee         mov r14d, ebp
0x000051bb      4489dd         mov ebp, r11d
0x000051be      c1c507         rol ebp, 7
0x000051c1      4131fe         xor r14d, edi
0x000051c4      89ef           mov edi, ebp
0x000051c6      4489ed         mov ebp, r13d
0x000051c9      4189da         mov r10d, ebx
0x000051cc      4431f7         xor edi, r14d
0x000051cf      c1cd02         ror ebp, 2
0x000051d2      01f7           add edi, esi
0x000051d4      418d3439       lea esi, [r9 + rdi]
0x000051d8      4589e9         mov r9d, r13d
0x000051db      41c1c90d       ror r9d, 0xd
0x000051df      4131e9         xor r9d, ebp
0x000051e2      4489ed         mov ebp, r13d
0x000051e5      c1c50a         rol ebp, 0xa
0x000051e8      4131e9         xor r9d, ebp                            ; ../coreutils-8.31/lib/sha256.c:244
0x000051eb      89cd           mov ebp, ecx                            ; ../coreutils-8.31/lib/sha256.c:243
0x000051ed      4409ed         or ebp, r13d
0x000051f0      4189ee         mov r14d, ebp
0x000051f3      89cd           mov ebp, ecx
0x000051f5      4121d6         and r14d, edx
0x000051f8      4421ed         and ebp, r13d
0x000051fb      41c1ca07       ror r10d, 7                             ; ../coreutils-8.31/lib/sha256.c:244
0x000051ff      4109ee         or r14d, ebp
0x00005202      4489e5         mov ebp, r12d
0x00005205      4501ce         add r14d, r9d
0x00005208      4589e1         mov r9d, r12d
0x0000520b      c1ed0a         shr ebp, 0xa
0x0000520e      41c1c10f       rol r9d, 0xf
0x00005212      4101fe         add r14d, edi
0x00005215      4489cf         mov edi, r9d
0x00005218      4589e1         mov r9d, r12d
0x0000521b      41c1c10d       rol r9d, 0xd
0x0000521f      4131f9         xor r9d, edi
0x00005222      89df           mov edi, ebx
0x00005224      c1c70e         rol edi, 0xe
0x00005227      4131e9         xor r9d, ebp
0x0000522a      4431d7         xor edi, r10d
0x0000522d      4189da         mov r10d, ebx
0x00005230      41c1ea03       shr r10d, 3
0x00005234      4431d7         xor edi, r10d
0x00005237      4189f2         mov r10d, esi
0x0000523a      4401ff         add edi, r15d
0x0000523d      037c2420       add edi, dword [rsp + 0x20]
0x00005241      41c1ca0b       ror r10d, 0xb
0x00005245      448b7c243c     mov r15d, dword [rsp + 0x3c]
0x0000524a      4101f9         add r9d, edi
0x0000524d      4489c7         mov edi, r8d
0x00005250      4431df         xor edi, r11d
0x00005253      4489cd         mov ebp, r9d
0x00005256      468d8c0870a0.  lea r9d, [rax + r9 + 0x106aa070]
0x0000525e      21f7           and edi, esi
0x00005260      4489d0         mov eax, r10d
0x00005263      4589f2         mov r10d, r14d
0x00005266      4431c7         xor edi, r8d
0x00005269      4189ec         mov r12d, ebp
0x0000526c      896c2434       mov dword [rsp + 0x34], ebp
0x00005270      4101f9         add r9d, edi
0x00005273      89f7           mov edi, esi
0x00005275      c1cf06         ror edi, 6
0x00005278      31f8           xor eax, edi
0x0000527a      89f7           mov edi, esi
0x0000527c      c1c707         rol edi, 7
0x0000527f      31c7           xor edi, eax
0x00005281      4401cf         add edi, r9d
0x00005284      4589f1         mov r9d, r14d
0x00005287      41c1c902       ror r9d, 2
0x0000528b      01fa           add edx, edi
0x0000528d      4489c8         mov eax, r9d
0x00005290      4589f1         mov r9d, r14d
0x00005293      41c1c90d       ror r9d, 0xd
0x00005297      4131c1         xor r9d, eax
0x0000529a      41c1c20a       rol r10d, 0xa
0x0000529e      4531d1         xor r9d, r10d
0x000052a1      4589ea         mov r10d, r13d
0x000052a4      4509f2         or r10d, r14d
0x000052a7      4489d0         mov eax, r10d
0x000052aa      4589ea         mov r10d, r13d
0x000052ad      4521f2         and r10d, r14d
0x000052b0      21c8           and eax, ecx
0x000052b2      4409d0         or eax, r10d
0x000052b5      448b54242c     mov r10d, dword [rsp + 0x2c]
0x000052ba      4401c8         add eax, r9d
0x000052bd      01f8           add eax, edi
0x000052bf      4589d1         mov r9d, r10d
0x000052c2      4489d7         mov edi, r10d
0x000052c5      c1c70f         rol edi, 0xf
0x000052c8      41c1c10d       rol r9d, 0xd
0x000052cc      4131f9         xor r9d, edi
0x000052cf      4489d7         mov edi, r10d
0x000052d2      4589fa         mov r10d, r15d
0x000052d5      c1ef0a         shr edi, 0xa
0x000052d8      41c1ca07       ror r10d, 7
0x000052dc      4131f9         xor r9d, edi
0x000052df      4489ff         mov edi, r15d
0x000052e2      c1c70e         rol edi, 0xe
0x000052e5      4431d7         xor edi, r10d
0x000052e8      4589fa         mov r10d, r15d
0x000052eb      41c1ea03       shr r10d, 3
0x000052ef      4431d7         xor edi, r10d
0x000052f2      01df           add edi, ebx
0x000052f4      037c240c       add edi, dword [rsp + 0xc]
0x000052f8      89d3           mov ebx, edx
0x000052fa      c1cb0b         ror ebx, 0xb
0x000052fd      4189da         mov r10d, ebx
0x00005300      89c3           mov ebx, eax
0x00005302      4101f9         add r9d, edi
0x00005305      4489df         mov edi, r11d
0x00005308      31f7           xor edi, esi
0x0000530a      478d840816c1.  lea r8d, [r8 + r9 + 0x19a4c116]
0x00005312      44894c2430     mov dword [rsp + 0x30], r9d
0x00005317      21d7           and edi, edx
0x00005319      44898c249000.  mov dword [rsp + 0x90], r9d
0x00005321      4589f1         mov r9d, r14d
0x00005324      4431df         xor edi, r11d
0x00005327      4101f8         add r8d, edi
0x0000532a      89d7           mov edi, edx
0x0000532c      c1cf06         ror edi, 6
0x0000532f      4131fa         xor r10d, edi
0x00005332      89d7           mov edi, edx
0x00005334      c1c707         rol edi, 7                              ; ../coreutils-8.31/lib/sha256.c:245
0x00005337      4431d7         xor edi, r10d
0x0000533a      4401c7         add edi, r8d
0x0000533d      01f9           add ecx, edi
0x0000533f      c1cb02         ror ebx, 2
0x00005342      4121c1         and r9d, eax
0x00005345      4189da         mov r10d, ebx
0x00005348      89c3           mov ebx, eax
0x0000534a      41c1c40d       rol r12d, 0xd
0x0000534e      c1cb0d         ror ebx, 0xd
0x00005351      4189d8         mov r8d, ebx
0x00005354      89c3           mov ebx, eax
0x00005356      4531d0         xor r8d, r10d
0x00005359      c1c30a         rol ebx, 0xa
0x0000535c      4131d8         xor r8d, ebx
0x0000535f      4489f3         mov ebx, r14d
0x00005362      09c3           or ebx, eax
0x00005364      4189da         mov r10d, ebx
0x00005367      8b5c246c       mov ebx, dword [rsp + 0x6c]             ; ../coreutils-8.31/lib/sha256.c:246
0x0000536b      4521ea         and r10d, r13d
0x0000536e      4509ca         or r10d, r9d
0x00005371      4189e9         mov r9d, ebp
0x00005374      4501c2         add r10d, r8d
0x00005377      4189d8         mov r8d, ebx
0x0000537a      41c1e90a       shr r9d, 0xa
0x0000537e      4101fa         add r10d, edi
0x00005381      89ef           mov edi, ebp
0x00005383      41c1c807       ror r8d, 7
0x00005387      c1c70f         rol edi, 0xf
0x0000538a      4131fc         xor r12d, edi
0x0000538d      89df           mov edi, ebx
0x0000538f      c1c70e         rol edi, 0xe                            ; ../coreutils-8.31/lib/sha256.c:247
0x00005392      4531cc         xor r12d, r9d
0x00005395      4431c7         xor edi, r8d
0x00005398      4189d8         mov r8d, ebx
0x0000539b      41c1e803       shr r8d, 3
0x0000539f      4431c7         xor edi, r8d
0x000053a2      4401ff         add edi, r15d
0x000053a5      037c2424       add edi, dword [rsp + 0x24]
0x000053a9      448b7c2470     mov r15d, dword [rsp + 0x70]
0x000053ae      4101fc         add r12d, edi
0x000053b1      89f7           mov edi, esi
0x000053b3      31d7           xor edi, edx
0x000053b5      478d8423086c.  lea r8d, [r11 + r12 + 0x1e376c08]
0x000053bd      4189cb         mov r11d, ecx
0x000053c0      21cf           and edi, ecx
0x000053c2      41c1cb0b       ror r11d, 0xb
0x000053c6      4489a4249400.  mov dword [rsp + 0x94], r12d
0x000053ce      31f7           xor edi, esi
0x000053d0      4589d9         mov r9d, r11d
0x000053d3      4589d3         mov r11d, r10d
0x000053d6      4101f8         add r8d, edi
0x000053d9      89cf           mov edi, ecx
0x000053db      c1cf06         ror edi, 6
0x000053de      4131f9         xor r9d, edi
0x000053e1      89cf           mov edi, ecx
0x000053e3      c1c707         rol edi, 7
0x000053e6      4431cf         xor edi, r9d
0x000053e9      41c1c30a       rol r11d, 0xa
0x000053ed      4401c7         add edi, r8d
0x000053f0      4589d0         mov r8d, r10d
0x000053f3      41c1c802       ror r8d, 2
0x000053f7      4101fd         add r13d, edi
0x000053fa      4589c1         mov r9d, r8d
0x000053fd      4589d0         mov r8d, r10d
0x00005400      41c1c80d       ror r8d, 0xd
0x00005404      4531c8         xor r8d, r9d
0x00005407      4531d8         xor r8d, r11d
0x0000540a      4189c3         mov r11d, eax                           ; ../coreutils-8.31/lib/sha256.c:246
0x0000540d      4509d3         or r11d, r10d
0x00005410      4589d9         mov r9d, r11d                           ; ../coreutils-8.31/lib/sha256.c:247
0x00005413      4189c3         mov r11d, eax
0x00005416      4521d3         and r11d, r10d
0x00005419      4521f1         and r9d, r14d
0x0000541c      4509d9         or r9d, r11d
0x0000541f      448b5c2430     mov r11d, dword [rsp + 0x30]
0x00005424      4501c1         add r9d, r8d
0x00005427      4101f9         add r9d, edi
0x0000542a      4589d8         mov r8d, r11d
0x0000542d      4489df         mov edi, r11d
0x00005430      41c1c00d       rol r8d, 0xd
0x00005434      c1c70f         rol edi, 0xf
0x00005437      4489c5         mov ebp, r8d
0x0000543a      4589f8         mov r8d, r15d
0x0000543d      31fd           xor ebp, edi
0x0000543f      4489df         mov edi, r11d
0x00005442      41c1c807       ror r8d, 7
0x00005446      c1ef0a         shr edi, 0xa
0x00005449      448b5c2448     mov r11d, dword [rsp + 0x48]
0x0000544e      31fd           xor ebp, edi
0x00005450      4489ff         mov edi, r15d
0x00005453      c1c70e         rol edi, 0xe
0x00005456      4431c7         xor edi, r8d
0x00005459      4589f8         mov r8d, r15d
0x0000545c      41c1e803       shr r8d, 3
0x00005460      4431c7         xor edi, r8d
0x00005463      01df           add edi, ebx
0x00005465      037c2410       add edi, dword [rsp + 0x10]
0x00005469      89d3           mov ebx, edx
0x0000546b      31cb           xor ebx, ecx
0x0000546d      01fd           add ebp, edi
0x0000546f      89df           mov edi, ebx
0x00005471      4489eb         mov ebx, r13d
0x00005474      4421ef         and edi, r13d
0x00005477      8db42e4c7748.  lea esi, [rsi + rbp + 0x2748774c]
0x0000547e      89ac24980000.  mov dword [rsp + 0x98], ebp
0x00005485      31d7           xor edi, edx
0x00005487      01f7           add edi, esi
0x00005489      4489ee         mov esi, r13d
0x0000548c      c1ce06         ror esi, 6
0x0000548f      c1cb0b         ror ebx, 0xb
0x00005492      4189d8         mov r8d, ebx
0x00005495      4489cb         mov ebx, r9d
0x00005498      4131f0         xor r8d, esi
0x0000549b      4489ee         mov esi, r13d
0x0000549e      c1cb02         ror ebx, 2
0x000054a1      c1c607         rol esi, 7
0x000054a4      4431c6         xor esi, r8d
0x000054a7      4189d8         mov r8d, ebx
0x000054aa      4489cb         mov ebx, r9d
0x000054ad      c1cb0d         ror ebx, 0xd
0x000054b0      01fe           add esi, edi
0x000054b2      89df           mov edi, ebx
0x000054b4      4489cb         mov ebx, r9d
0x000054b7      4101f6         add r14d, esi
0x000054ba      4431c7         xor edi, r8d
0x000054bd      c1c30a         rol ebx, 0xa                            ; ../coreutils-8.31/lib/sha256.c:248
0x000054c0      31df           xor edi, ebx                            ; ../coreutils-8.31/lib/sha256.c:247
0x000054c2      4489d3         mov ebx, r10d
0x000054c5      4409cb         or ebx, r9d
0x000054c8      4189d8         mov r8d, ebx
0x000054cb      4489d3         mov ebx, r10d
0x000054ce      4421cb         and ebx, r9d
0x000054d1      4121c0         and r8d, eax
0x000054d4      4109d8         or r8d, ebx
0x000054d7      4489e3         mov ebx, r12d
0x000054da      4101f8         add r8d, edi
0x000054dd      c1c30d         rol ebx, 0xd
0x000054e0      4489df         mov edi, r11d
0x000054e3      4101f0         add r8d, esi
0x000054e6      4489e6         mov esi, r12d
0x000054e9      c1cf07         ror edi, 7
0x000054ec      c1c60f         rol esi, 0xf
0x000054ef      31f3           xor ebx, esi
0x000054f1      4489e6         mov esi, r12d
0x000054f4      c1ee0a         shr esi, 0xa
0x000054f7      31f3           xor ebx, esi
0x000054f9      4489de         mov esi, r11d
0x000054fc      c1c60e         rol esi, 0xe
0x000054ff      31fe           xor esi, edi
0x00005501      4489df         mov edi, r11d
0x00005504      c1ef03         shr edi, 3
0x00005507      31fe           xor esi, edi
0x00005509      4401fe         add esi, r15d
0x0000550c      03742418       add esi, dword [rsp + 0x18]
0x00005510      4589f7         mov r15d, r14d
0x00005513      01f3           add ebx, esi
0x00005515      89ce           mov esi, ecx
0x00005517      4431ee         xor esi, r13d
0x0000551a      8d941ab5bcb0.  lea edx, [rdx + rbx + 0x34b0bcb5]
0x00005521      899c249c0000.  mov dword [rsp + 0x9c], ebx
0x00005528      4421f6         and esi, r14d
0x0000552b      31ce           xor esi, ecx
0x0000552d      41c1cf0b       ror r15d, 0xb
0x00005531      01d6           add esi, edx
0x00005533      4489f2         mov edx, r14d
0x00005536      4489ff         mov edi, r15d
0x00005539      c1ca06         ror edx, 6
0x0000553c      4589c7         mov r15d, r8d
0x0000553f      31d7           xor edi, edx
0x00005541      4489f2         mov edx, r14d
0x00005544      41c1c70a       rol r15d, 0xa
0x00005548      c1c207         rol edx, 7
0x0000554b      31fa           xor edx, edi
0x0000554d      01f2           add edx, esi
0x0000554f      4489c6         mov esi, r8d
0x00005552      c1ce02         ror esi, 2
0x00005555      01d0           add eax, edx
0x00005557      89f7           mov edi, esi
0x00005559      4489c6         mov esi, r8d
0x0000555c      c1ce0d         ror esi, 0xd
0x0000555f      31fe           xor esi, edi                            ; ../coreutils-8.31/lib/sha256.c:249
0x00005561      4431fe         xor esi, r15d
0x00005564      4589cf         mov r15d, r9d                           ; ../coreutils-8.31/lib/sha256.c:248
0x00005567      4509c7         or r15d, r8d
0x0000556a      4489ff         mov edi, r15d
0x0000556d      4589cf         mov r15d, r9d                           ; ../coreutils-8.31/lib/sha256.c:249
0x00005570      4521c7         and r15d, r8d
0x00005573      4421d7         and edi, r10d
0x00005576      4409ff         or edi, r15d
0x00005579      448b7c2414     mov r15d, dword [rsp + 0x14]
0x0000557e      01f7           add edi, esi
0x00005580      89ee           mov esi, ebp
0x00005582      c1c60f         rol esi, 0xf
0x00005585      01d7           add edi, edx
0x00005587      89f2           mov edx, esi
0x00005589      89ee           mov esi, ebp
0x0000558b      c1c60d         rol esi, 0xd
0x0000558e      4189f3         mov r11d, esi
0x00005591      89ee           mov esi, ebp
0x00005593      4131d3         xor r11d, edx
0x00005596      c1ee0a         shr esi, 0xa
0x00005599      4489fa         mov edx, r15d
0x0000559c      4131f3         xor r11d, esi
0x0000559f      4489fe         mov esi, r15d
0x000055a2      c1c20e         rol edx, 0xe
0x000055a5      c1ce07         ror esi, 7
0x000055a8      31f2           xor edx, esi
0x000055aa      4489fe         mov esi, r15d
0x000055ad      4589c7         mov r15d, r8d
0x000055b0      c1ee03         shr esi, 3
0x000055b3      31f2           xor edx, esi
0x000055b5      03542448       add edx, dword [rsp + 0x48]
0x000055b9      89c6           mov esi, eax
0x000055bb      03542428       add edx, dword [rsp + 0x28]
0x000055bf      4101d3         add r11d, edx
0x000055c2      4489ea         mov edx, r13d
0x000055c5      c1ce0b         ror esi, 0xb
0x000055c8      4431f2         xor edx, r14d
0x000055cb      428d8c19b30c.  lea ecx, [rcx + r11 + 0x391c0cb3]
0x000055d3      4121ff         and r15d, edi
0x000055d6      21c2           and edx, eax
0x000055d8      44899c24a000.  mov dword [rsp + 0xa0], r11d
0x000055e0      4431ea         xor edx, r13d
0x000055e3      01d1           add ecx, edx
0x000055e5      89c2           mov edx, eax
0x000055e7      c1ca06         ror edx, 6
0x000055ea      31d6           xor esi, edx
0x000055ec      89c2           mov edx, eax
0x000055ee      c1c207         rol edx, 7
0x000055f1      31f2           xor edx, esi
0x000055f3      01ca           add edx, ecx
0x000055f5      89f9           mov ecx, edi
0x000055f7      c1c902         ror ecx, 2
0x000055fa      4101d2         add r10d, edx
0x000055fd      89ce           mov esi, ecx
0x000055ff      89f9           mov ecx, edi
0x00005601      c1c90d         ror ecx, 0xd
0x00005604      31f1           xor ecx, esi
0x00005606      89fe           mov esi, edi
0x00005608      c1c60a         rol esi, 0xa
0x0000560b      31f1           xor ecx, esi
0x0000560d      4489c6         mov esi, r8d
0x00005610      09fe           or esi, edi
0x00005612      4421ce         and esi, r9d
0x00005615      4409fe         or esi, r15d
0x00005618      01ce           add esi, ecx
0x0000561a      89d9           mov ecx, ebx
0x0000561c      c1c10f         rol ecx, 0xf
0x0000561f      01d6           add esi, edx
0x00005621      89ca           mov edx, ecx
0x00005623      89d9           mov ecx, ebx
0x00005625      c1c10d         rol ecx, 0xd
0x00005628      31d1           xor ecx, edx
0x0000562a      89da           mov edx, ebx
0x0000562c      c1ea0a         shr edx, 0xa
0x0000562f      31d1           xor ecx, edx
0x00005631      8b54241c       mov edx, dword [rsp + 0x1c]
0x00005635      4189d7         mov r15d, edx
0x00005638      c1c20e         rol edx, 0xe
0x0000563b      41c1cf07       ror r15d, 7
0x0000563f      4431fa         xor edx, r15d
0x00005642      448b7c241c     mov r15d, dword [rsp + 0x1c]
0x00005647      41c1ef03       shr r15d, 3
0x0000564b      4431fa         xor edx, r15d
0x0000564e      03542414       add edx, dword [rsp + 0x14]
0x00005652      4189ff         mov r15d, edi
0x00005655      0354242c       add edx, dword [rsp + 0x2c]
0x00005659      4121f7         and r15d, esi
0x0000565c      01d1           add ecx, edx
0x0000565e      4489f2         mov edx, r14d
0x00005661      31c2           xor edx, eax
0x00005663      458dac0d4aaa.  lea r13d, [r13 + rcx + 0x4ed8aa4a]
0x0000566b      898c24a40000.  mov dword [rsp + 0xa4], ecx
0x00005672      4421d2         and edx, r10d
0x00005675      894c2414       mov dword [rsp + 0x14], ecx
0x00005679      4489d1         mov ecx, r10d
0x0000567c      4431f2         xor edx, r14d
0x0000567f      c1c90b         ror ecx, 0xb
0x00005682      4101d5         add r13d, edx
0x00005685      4489d2         mov edx, r10d
0x00005688      c1ca06         ror edx, 6
0x0000568b      31d1           xor ecx, edx
0x0000568d      4489d2         mov edx, r10d
0x00005690      c1c207         rol edx, 7
0x00005693      31ca           xor edx, ecx
0x00005695      89f1           mov ecx, esi
0x00005697      4401ea         add edx, r13d
0x0000569a      4189f5         mov r13d, esi
0x0000569d      c1c902         ror ecx, 2
0x000056a0      41c1cd0d       ror r13d, 0xd
0x000056a4      4101d1         add r9d, edx
0x000056a7      4131cd         xor r13d, ecx
0x000056aa      89f1           mov ecx, esi                            ; ../coreutils-8.31/lib/sha256.c:251
0x000056ac      c1c10a         rol ecx, 0xa
0x000056af      4131cd         xor r13d, ecx
0x000056b2      89f9           mov ecx, edi
0x000056b4      09f1           or ecx, esi
0x000056b6      4421c1         and ecx, r8d
0x000056b9      4409f9         or ecx, r15d
0x000056bc      4401e9         add ecx, r13d
0x000056bf      4589dd         mov r13d, r11d
0x000056c2      01d1           add ecx, edx
0x000056c4      4489da         mov edx, r11d
0x000056c7      41c1c50d       rol r13d, 0xd
0x000056cb      c1c20f         rol edx, 0xf
0x000056ce      4131d5         xor r13d, edx
0x000056d1      4489da         mov edx, r11d
0x000056d4      c1ea0a         shr edx, 0xa
0x000056d7      4131d5         xor r13d, edx
0x000056da      8b542408       mov edx, dword [rsp + 8]
0x000056de      4189d7         mov r15d, edx
0x000056e1      41c1cf07       ror r15d, 7
0x000056e5      c1c20e         rol edx, 0xe
0x000056e8      4431fa         xor edx, r15d
0x000056eb      448b7c2408     mov r15d, dword [rsp + 8]
0x000056f0      41c1ef03       shr r15d, 3
0x000056f4      4431fa         xor edx, r15d
0x000056f7      0354241c       add edx, dword [rsp + 0x1c]
0x000056fb      4189c7         mov r15d, eax
0x000056fe      03542434       add edx, dword [rsp + 0x34]
0x00005702      4531d7         xor r15d, r10d
0x00005705      4401ea         add edx, r13d
0x00005708      4589fd         mov r13d, r15d
0x0000570b      4589cf         mov r15d, r9d
0x0000570e      899424a80000.  mov dword [rsp + 0xa8], edx
0x00005715      4521cd         and r13d, r9d
0x00005718      8954241c       mov dword [rsp + 0x1c], edx
0x0000571c      458db4164fca.  lea r14d, [r14 + rdx + 0x5b9cca4f]
0x00005724      4489ca         mov edx, r9d
0x00005727      4131c5         xor r13d, eax
0x0000572a      c1ca06         ror edx, 6
0x0000572d      41c1c707       rol r15d, 7
0x00005731      4501ee         add r14d, r13d
0x00005734      4189d5         mov r13d, edx
0x00005737      4489ca         mov edx, r9d
0x0000573a      c1ca0b         ror edx, 0xb
0x0000573d      4431ea         xor edx, r13d
0x00005740      4589fd         mov r13d, r15d
0x00005743      4189f7         mov r15d, esi
0x00005746      4131d5         xor r13d, edx
0x00005749      89ca           mov edx, ecx
0x0000574b      4121cf         and r15d, ecx
0x0000574e      4501f5         add r13d, r14d
0x00005751      4189ce         mov r14d, ecx
0x00005754      c1ca02         ror edx, 2
0x00005757      41c1ce0d       ror r14d, 0xd
0x0000575b      4501e8         add r8d, r13d                           ; ../coreutils-8.31/lib/sha256.c:252
0x0000575e      4131d6         xor r14d, edx
0x00005761      89ca           mov edx, ecx
0x00005763      c1c20a         rol edx, 0xa
0x00005766      4131d6         xor r14d, edx
0x00005769      89f2           mov edx, esi
0x0000576b      09ca           or edx, ecx
0x0000576d      21fa           and edx, edi
0x0000576f      4409fa         or edx, r15d
0x00005772      4401f2         add edx, r14d
0x00005775      448b742414     mov r14d, dword [rsp + 0x14]
0x0000577a      4401ea         add edx, r13d
0x0000577d      4589f7         mov r15d, r14d
0x00005780      41c1c70f       rol r15d, 0xf
0x00005784      4589fd         mov r13d, r15d
0x00005787      4589f7         mov r15d, r14d
0x0000578a      41c1c60d       rol r14d, 0xd
0x0000578e      4531ee         xor r14d, r13d
0x00005791      4589fd         mov r13d, r15d
0x00005794      41c1ed0a       shr r13d, 0xa
0x00005798      4531ee         xor r14d, r13d
0x0000579b      448b6c2420     mov r13d, dword [rsp + 0x20]
0x000057a0      4589ef         mov r15d, r13d
0x000057a3      41c1c50e       rol r13d, 0xe
0x000057a7      41c1cf07       ror r15d, 7
0x000057ab      4531fd         xor r13d, r15d
0x000057ae      448b7c2420     mov r15d, dword [rsp + 0x20]
0x000057b3      41c1ef03       shr r15d, 3
0x000057b7      4531fd         xor r13d, r15d
0x000057ba      44036c2408     add r13d, dword [rsp + 8]
0x000057bf      4189d7         mov r15d, edx
0x000057c2      44036c2430     add r13d, dword [rsp + 0x30]
0x000057c7      41c1cf0d       ror r15d, 0xd
0x000057cb      4501ee         add r14d, r13d
0x000057ce      4589d5         mov r13d, r10d
0x000057d1      4531cd         xor r13d, r9d
0x000057d4      4489742408     mov dword [rsp + 8], r14d
0x000057d9      4489b424ac00.  mov dword [rsp + 0xac], r14d
0x000057e1      4521c5         and r13d, r8d
0x000057e4      468db430f36f.  lea r14d, [rax + r14 + 0x682e6ff3]
0x000057ec      4489c0         mov eax, r8d
0x000057ef      4531d5         xor r13d, r10d
0x000057f2      c1c806         ror eax, 6
0x000057f5      4501ee         add r14d, r13d
0x000057f8      4189c5         mov r13d, eax
0x000057fb      4489c0         mov eax, r8d
0x000057fe      c1c80b         ror eax, 0xb
0x00005801      4431e8         xor eax, r13d
0x00005804      4589c5         mov r13d, r8d
0x00005807      41c1c507       rol r13d, 7
0x0000580b      4131c5         xor r13d, eax
0x0000580e      89d0           mov eax, edx
0x00005810      4501f5         add r13d, r14d
0x00005813      c1c802         ror eax, 2
0x00005816      4589fe         mov r14d, r15d
0x00005819      4131c6         xor r14d, eax
0x0000581c      89d0           mov eax, edx                            ; ../coreutils-8.31/lib/sha256.c:253
0x0000581e      4189cf         mov r15d, ecx
0x00005821      c1c00a         rol eax, 0xa                            ; ../coreutils-8.31/lib/sha256.c:252
0x00005824      4121d7         and r15d, edx
0x00005827      4401ef         add edi, r13d                           ; ../coreutils-8.31/lib/sha256.c:253
0x0000582a      4131c6         xor r14d, eax
0x0000582d      89c8           mov eax, ecx
0x0000582f      09d0           or eax, edx
0x00005831      21f0           and eax, esi
0x00005833      4409f8         or eax, r15d
0x00005836      448b7c241c     mov r15d, dword [rsp + 0x1c]
0x0000583b      4401f0         add eax, r14d
0x0000583e      4401e8         add eax, r13d
0x00005841      4589fe         mov r14d, r15d
0x00005844      4589fd         mov r13d, r15d
0x00005847      41c1c50f       rol r13d, 0xf
0x0000584b      41c1c60d       rol r14d, 0xd
0x0000584f      4531ee         xor r14d, r13d
0x00005852      4589fd         mov r13d, r15d
0x00005855      41c1ed0a       shr r13d, 0xa
0x00005859      4531ee         xor r14d, r13d
0x0000585c      448b6c240c     mov r13d, dword [rsp + 0xc]
0x00005861      4589ef         mov r15d, r13d
0x00005864      41c1c50e       rol r13d, 0xe
0x00005868      41c1cf07       ror r15d, 7
0x0000586c      4531fd         xor r13d, r15d
0x0000586f      448b7c240c     mov r15d, dword [rsp + 0xc]
0x00005874      41c1ef03       shr r15d, 3
0x00005878      4531fd         xor r13d, r15d
0x0000587b      44036c2420     add r13d, dword [rsp + 0x20]
0x00005880      4501ec         add r12d, r13d
0x00005883      478d3c26       lea r15d, [r14 + r12]
0x00005887      4589cc         mov r12d, r9d
0x0000588a      4189d6         mov r14d, edx
0x0000588d      4531c4         xor r12d, r8d
0x00005890      4121c6         and r14d, eax
0x00005893      4121fc         and r12d, edi
0x00005896      478dac3aee82.  lea r13d, [r10 + r15 + 0x748f82ee]
0x0000589e      4189fa         mov r10d, edi
0x000058a1      4531cc         xor r12d, r9d
0x000058a4      41c1ca06       ror r10d, 6
0x000058a8      4489bc24b000.  mov dword [rsp + 0xb0], r15d
0x000058b0      4501e5         add r13d, r12d
0x000058b3      4589d4         mov r12d, r10d
0x000058b6      4189fa         mov r10d, edi
0x000058b9      41c1ca0b       ror r10d, 0xb
0x000058bd      4531e2         xor r10d, r12d
0x000058c0      4189fc         mov r12d, edi
0x000058c3      41c1c407       rol r12d, 7
0x000058c7      4531d4         xor r12d, r10d
0x000058ca      4189c2         mov r10d, eax
0x000058cd      4501ec         add r12d, r13d
0x000058d0      4189c5         mov r13d, eax
0x000058d3      41c1ca02       ror r10d, 2
0x000058d7      41c1cd0d       ror r13d, 0xd
0x000058db      4401e6         add esi, r12d
0x000058de      4531d5         xor r13d, r10d
0x000058e1      4189c2         mov r10d, eax
0x000058e4      41c1c20a       rol r10d, 0xa
0x000058e8      4531d5         xor r13d, r10d                          ; ../coreutils-8.31/lib/sha256.c:254
0x000058eb      4189d2         mov r10d, edx
0x000058ee      4109c2         or r10d, eax
0x000058f1      4121ca         and r10d, ecx
0x000058f4      4509f2         or r10d, r14d
0x000058f7      448b742408     mov r14d, dword [rsp + 8]
0x000058fc      4501ea         add r10d, r13d
0x000058ff      4501e2         add r10d, r12d
0x00005902      4589f5         mov r13d, r14d
0x00005905      4589f4         mov r12d, r14d
0x00005908      41c1c40f       rol r12d, 0xf
0x0000590c      41c1c50d       rol r13d, 0xd
0x00005910      4531e5         xor r13d, r12d
0x00005913      4589f4         mov r12d, r14d
0x00005916      41c1ec0a       shr r12d, 0xa
0x0000591a      4531e5         xor r13d, r12d
0x0000591d      448b642424     mov r12d, dword [rsp + 0x24]
0x00005922      4589e6         mov r14d, r12d
0x00005925      41c1c40e       rol r12d, 0xe
0x00005929      41c1ce07       ror r14d, 7
0x0000592d      4531f4         xor r12d, r14d
0x00005930      448b742424     mov r14d, dword [rsp + 0x24]
0x00005935      41c1ee03       shr r14d, 3
0x00005939      4531f4         xor r12d, r14d
0x0000593c      440364240c     add r12d, dword [rsp + 0xc]
0x00005941      4189c6         mov r14d, eax
0x00005944      4401e5         add ebp, r12d
0x00005947      4589c4         mov r12d, r8d
0x0000594a      4401ed         add ebp, r13d
0x0000594d      4131fc         xor r12d, edi
0x00005950      4121f4         and r12d, esi
0x00005953      458dac296f63.  lea r13d, [r9 + rbp + 0x78a5636f]
0x0000595b      4189f1         mov r9d, esi
0x0000595e      4531c4         xor r12d, r8d
0x00005961      41c1c906       ror r9d, 6
0x00005965      89ac24b40000.  mov dword [rsp + 0xb4], ebp
0x0000596c      4501e5         add r13d, r12d
0x0000596f      4589cc         mov r12d, r9d
0x00005972      4189f1         mov r9d, esi
0x00005975      41c1c90b       ror r9d, 0xb
0x00005979      4531e1         xor r9d, r12d
0x0000597c      4189f4         mov r12d, esi
0x0000597f      41c1c407       rol r12d, 7
0x00005983      4531cc         xor r12d, r9d
0x00005986      4589d1         mov r9d, r10d
0x00005989      4501ec         add r12d, r13d
0x0000598c      4589d5         mov r13d, r10d
0x0000598f      41c1c902       ror r9d, 2
0x00005993      41c1cd0d       ror r13d, 0xd
0x00005997      4401e1         add ecx, r12d
0x0000599a      4531cd         xor r13d, r9d
0x0000599d      4589d1         mov r9d, r10d
0x000059a0      41c1c10a       rol r9d, 0xa
0x000059a4      4531cd         xor r13d, r9d
0x000059a7      4189c1         mov r9d, eax
0x000059aa      4509d1         or r9d, r10d
0x000059ad      4121d1         and r9d, edx
0x000059b0      4521d6         and r14d, r10d
0x000059b3      4509f1         or r9d, r14d
0x000059b6      4501e9         add r9d, r13d
0x000059b9      4589fd         mov r13d, r15d
0x000059bc      4501e1         add r9d, r12d
0x000059bf      4589fc         mov r12d, r15d
0x000059c2      41c1c50d       rol r13d, 0xd
0x000059c6      41c1c40f       rol r12d, 0xf
0x000059ca      4531e5         xor r13d, r12d
0x000059cd      4589fc         mov r12d, r15d
0x000059d0      41c1ec0a       shr r12d, 0xa
0x000059d4      4531e5         xor r13d, r12d
0x000059d7      448b642410     mov r12d, dword [rsp + 0x10]
0x000059dc      4589e6         mov r14d, r12d
0x000059df      41c1c40e       rol r12d, 0xe
0x000059e3      41c1ce07       ror r14d, 7
0x000059e7      4531f4         xor r12d, r14d
0x000059ea      448b742410     mov r14d, dword [rsp + 0x10]
0x000059ef      41c1ee03       shr r14d, 3
0x000059f3      4531f4         xor r12d, r14d
0x000059f6      4403642424     add r12d, dword [rsp + 0x24]
0x000059fb      4589d6         mov r14d, r10d
0x000059fe      4401e3         add ebx, r12d
0x00005a01      4189fc         mov r12d, edi
0x00005a04      4401eb         add ebx, r13d
0x00005a07      4131f4         xor r12d, esi
0x00005a0a      4121cc         and r12d, ecx
0x00005a0d      458d84181478.  lea r8d, [r8 + rbx - 0x7b3787ec]
0x00005a15      899c24b80000.  mov dword [rsp + 0xb8], ebx
0x00005a1c      4131fc         xor r12d, edi
0x00005a1f      4501e0         add r8d, r12d
0x00005a22      4189cc         mov r12d, ecx
0x00005a25      41c1cc06       ror r12d, 6
0x00005a29      4589e5         mov r13d, r12d
0x00005a2c      4189cc         mov r12d, ecx
0x00005a2f      41c1cc0b       ror r12d, 0xb
0x00005a33      4531ec         xor r12d, r13d
0x00005a36      4189cd         mov r13d, ecx
0x00005a39      41c1c507       rol r13d, 7
0x00005a3d      4531ec         xor r12d, r13d
0x00005a40      4501c4         add r12d, r8d
0x00005a43      4589c8         mov r8d, r9d
0x00005a46      41c1c802       ror r8d, 2
0x00005a4a      4401e2         add edx, r12d
0x00005a4d      4589c5         mov r13d, r8d
0x00005a50      4589c8         mov r8d, r9d
0x00005a53      41c1c80d       ror r8d, 0xd
0x00005a57      4531e8         xor r8d, r13d
0x00005a5a      4589cd         mov r13d, r9d
0x00005a5d      41c1c50a       rol r13d, 0xa
0x00005a61      4521ce         and r14d, r9d                           ; ../coreutils-8.31/lib/sha256.c:256
0x00005a64      4531e8         xor r8d, r13d
0x00005a67      4589d5         mov r13d, r10d
0x00005a6a      4509cd         or r13d, r9d
0x00005a6d      4121c5         and r13d, eax
0x00005a70      4509f5         or r13d, r14d
0x00005a73      448b742418     mov r14d, dword [rsp + 0x18]
0x00005a78      4501c5         add r13d, r8d
0x00005a7b      4189e8         mov r8d, ebp
0x00005a7e      41c1c00f       rol r8d, 0xf
0x00005a82      4501ec         add r12d, r13d
0x00005a85      4589c5         mov r13d, r8d
0x00005a88      4189e8         mov r8d, ebp
0x00005a8b      c1ed0a         shr ebp, 0xa
0x00005a8e      41c1c00d       rol r8d, 0xd
0x00005a92      4531e8         xor r8d, r13d
0x00005a95      4589f5         mov r13d, r14d
0x00005a98      4431c5         xor ebp, r8d
0x00005a9b      4589f0         mov r8d, r14d
0x00005a9e      41c1cd07       ror r13d, 7
0x00005aa2      41c1c00e       rol r8d, 0xe
0x00005aa6      4531e8         xor r8d, r13d
0x00005aa9      4589f5         mov r13d, r14d
0x00005aac      41c1ed03       shr r13d, 3
0x00005ab0      4531e8         xor r8d, r13d
0x00005ab3      4403442410     add r8d, dword [rsp + 0x10]
0x00005ab8      4589cd         mov r13d, r9d
0x00005abb      4501c3         add r11d, r8d
0x00005abe      4189f0         mov r8d, esi
0x00005ac1      4101eb         add r11d, ebp
0x00005ac4      4131c8         xor r8d, ecx
0x00005ac7      4121d0         and r8d, edx
0x00005aca      428dbc1f0802.  lea edi, [rdi + r11 - 0x7338fdf8]
0x00005ad2      44899c24bc00.  mov dword [rsp + 0xbc], r11d
0x00005ada      4131f0         xor r8d, esi
0x00005add      4401c7         add edi, r8d
0x00005ae0      4189d0         mov r8d, edx
0x00005ae3      41c1c806       ror r8d, 6
0x00005ae7      4489c5         mov ebp, r8d
0x00005aea      4189d0         mov r8d, edx
0x00005aed      41c1c80b       ror r8d, 0xb
0x00005af1      4131e8         xor r8d, ebp
0x00005af4      89d5           mov ebp, edx
0x00005af6      c1c507         rol ebp, 7
0x00005af9      4131e8         xor r8d, ebp
0x00005afc      4101f8         add r8d, edi
0x00005aff      4489e7         mov edi, r12d
0x00005b02      4401c0         add eax, r8d
0x00005b05      c1cf02         ror edi, 2
0x00005b08      4521e5         and r13d, r12d
0x00005b0b      89fd           mov ebp, edi
0x00005b0d      4489e7         mov edi, r12d
0x00005b10      c1cf0d         ror edi, 0xd
0x00005b13      31ef           xor edi, ebp
0x00005b15      4489e5         mov ebp, r12d
0x00005b18      c1c50a         rol ebp, 0xa
0x00005b1b      31ef           xor edi, ebp
0x00005b1d      4489cd         mov ebp, r9d
0x00005b20      4409e5         or ebp, r12d
0x00005b23      4421d5         and ebp, r10d
0x00005b26      4409ed         or ebp, r13d
0x00005b29      448b6c2428     mov r13d, dword [rsp + 0x28]
0x00005b2e      01fd           add ebp, edi
0x00005b30      89df           mov edi, ebx
0x00005b32      c1c70f         rol edi, 0xf
0x00005b35      4101e8         add r8d, ebp
0x00005b38      89fd           mov ebp, edi
0x00005b3a      89df           mov edi, ebx
0x00005b3c      c1eb0a         shr ebx, 0xa
0x00005b3f      c1c70d         rol edi, 0xd
0x00005b42      31ef           xor edi, ebp
0x00005b44      4489ed         mov ebp, r13d
0x00005b47      31fb           xor ebx, edi
0x00005b49      4489ef         mov edi, r13d
0x00005b4c      c1c50e         rol ebp, 0xe
0x00005b4f      c1cf07         ror edi, 7
0x00005b52      31fd           xor ebp, edi
0x00005b54      4489ef         mov edi, r13d
0x00005b57      4589e5         mov r13d, r12d
0x00005b5a      c1ef03         shr edi, 3
0x00005b5d      31fd           xor ebp, edi
0x00005b5f      428d7c3500     lea edi, [rbp + r14]
0x00005b64      037c2414       add edi, dword [rsp + 0x14]
0x00005b68      89c5           mov ebp, eax
0x00005b6a      c1cd06         ror ebp, 6
0x00005b6d      448b74242c     mov r14d, dword [rsp + 0x2c]
0x00005b72      01df           add edi, ebx
0x00005b74      89cb           mov ebx, ecx
0x00005b76      31d3           xor ebx, edx
0x00005b78      8db43efaffbe.  lea esi, [rsi + rdi - 0x6f410006]
0x00005b7f      89bc24c00000.  mov dword [rsp + 0xc0], edi
0x00005b86      21c3           and ebx, eax
0x00005b88      31cb           xor ebx, ecx
0x00005b8a      01de           add esi, ebx
0x00005b8c      89c3           mov ebx, eax
0x00005b8e      c1cb0b         ror ebx, 0xb
0x00005b91      31eb           xor ebx, ebp
0x00005b93      89c5           mov ebp, eax
0x00005b95      c1c507         rol ebp, 7
0x00005b98      31eb           xor ebx, ebp
0x00005b9a      4489c5         mov ebp, r8d
0x00005b9d      01f3           add ebx, esi
0x00005b9f      4489c6         mov esi, r8d
0x00005ba2      c1cd02         ror ebp, 2
0x00005ba5      c1ce0d         ror esi, 0xd
0x00005ba8      4521c5         and r13d, r8d
0x00005bab      4101da         add r10d, ebx
0x00005bae      31ee           xor esi, ebp
0x00005bb0      4489c5         mov ebp, r8d
0x00005bb3      c1c50a         rol ebp, 0xa
0x00005bb6      31ee           xor esi, ebp                            ; ../coreutils-8.31/lib/sha256.c:258
0x00005bb8      4489e5         mov ebp, r12d
0x00005bbb      4409c5         or ebp, r8d
0x00005bbe      4421cd         and ebp, r9d
0x00005bc1      4409ed         or ebp, r13d
0x00005bc4      448b6c2428     mov r13d, dword [rsp + 0x28]
0x00005bc9      01f5           add ebp, esi
0x00005bcb      4489de         mov esi, r11d
0x00005bce      01eb           add ebx, ebp
0x00005bd0      4489dd         mov ebp, r11d
0x00005bd3      c1c60d         rol esi, 0xd
0x00005bd6      c1c50f         rol ebp, 0xf
0x00005bd9      41c1eb0a       shr r11d, 0xa
0x00005bdd      31ee           xor esi, ebp
0x00005bdf      4489f5         mov ebp, r14d
0x00005be2      4131f3         xor r11d, esi
0x00005be5      4489f6         mov esi, r14d
0x00005be8      c1c50e         rol ebp, 0xe
0x00005beb      c1ce07         ror esi, 7
0x00005bee      31f5           xor ebp, esi
0x00005bf0      4489f6         mov esi, r14d
0x00005bf3      c1ee03         shr esi, 3
0x00005bf6      31f5           xor ebp, esi
0x00005bf8      428d742d00     lea esi, [rbp + r13]
0x00005bfd      0374241c       add esi, dword [rsp + 0x1c]
0x00005c01      4489d5         mov ebp, r10d
0x00005c04      c1cd06         ror ebp, 6
0x00005c07      4589c5         mov r13d, r8d
0x00005c0a      4401de         add esi, r11d
0x00005c0d      4189d3         mov r11d, edx
0x00005c10      4131c3         xor r11d, eax
0x00005c13      8d8c31eb6c50.  lea ecx, [rcx + rsi - 0x5baf9315]
0x00005c1a      89b424c40000.  mov dword [rsp + 0xc4], esi
0x00005c21      4521d3         and r11d, r10d
0x00005c24      4131d3         xor r11d, edx
0x00005c27      4401d9         add ecx, r11d
0x00005c2a      4589d3         mov r11d, r10d
0x00005c2d      41c1cb0b       ror r11d, 0xb
0x00005c31      4131eb         xor r11d, ebp
0x00005c34      4489d5         mov ebp, r10d
0x00005c37      c1c507         rol ebp, 7
0x00005c3a      4121dd         and r13d, ebx
0x00005c3d      4131eb         xor r11d, ebp
0x00005c40      89dd           mov ebp, ebx
0x00005c42      4101cb         add r11d, ecx
0x00005c45      89d9           mov ecx, ebx
0x00005c47      c1cd02         ror ebp, 2
0x00005c4a      c1c90d         ror ecx, 0xd                            ; ../coreutils-8.31/lib/sha256.c:259
0x00005c4d      4501d9         add r9d, r11d
0x00005c50      31e9           xor ecx, ebp
0x00005c52      89dd           mov ebp, ebx
0x00005c54      c1c50a         rol ebp, 0xa
0x00005c57      31e9           xor ecx, ebp
0x00005c59      4489c5         mov ebp, r8d
0x00005c5c      09dd           or ebp, ebx
0x00005c5e      4421e5         and ebp, r12d
0x00005c61      4409ed         or ebp, r13d
0x00005c64      448b6c2434     mov r13d, dword [rsp + 0x34]
0x00005c69      01cd           add ebp, ecx
0x00005c6b      89f9           mov ecx, edi
0x00005c6d      4101eb         add r11d, ebp
0x00005c70      89fd           mov ebp, edi
0x00005c72      c1c10d         rol ecx, 0xd
0x00005c75      c1c50f         rol ebp, 0xf
0x00005c78      c1ef0a         shr edi, 0xa
0x00005c7b      31e9           xor ecx, ebp
0x00005c7d      4489ed         mov ebp, r13d
0x00005c80      31cf           xor edi, ecx
0x00005c82      4489e9         mov ecx, r13d
0x00005c85      c1cd07         ror ebp, 7
0x00005c88      c1c10e         rol ecx, 0xe
0x00005c8b      31e9           xor ecx, ebp
0x00005c8d      4489ed         mov ebp, r13d
0x00005c90      c1ed03         shr ebp, 3
0x00005c93      31e9           xor ecx, ebp
0x00005c95      89dd           mov ebp, ebx
0x00005c97      4401f1         add ecx, r14d
0x00005c9a      034c2408       add ecx, dword [rsp + 8]
0x00005c9e      448b742430     mov r14d, dword [rsp + 0x30]
0x00005ca3      01cf           add edi, ecx
0x00005ca5      89c1           mov ecx, eax
0x00005ca7      4431d1         xor ecx, r10d
0x00005caa      8d943af7a3f9.  lea edx, [rdx + rdi - 0x41065c09]
0x00005cb1      89bc24c80000.  mov dword [rsp + 0xc8], edi
0x00005cb8      4421c9         and ecx, r9d
0x00005cbb      4489cf         mov edi, r9d
0x00005cbe      31c1           xor ecx, eax
0x00005cc0      01ca           add edx, ecx
0x00005cc2      4489c9         mov ecx, r9d
0x00005cc5      c1cf06         ror edi, 6
0x00005cc8      c1c90b         ror ecx, 0xb
0x00005ccb      4421dd         and ebp, r11d
0x00005cce      31f9           xor ecx, edi
0x00005cd0      4489cf         mov edi, r9d
0x00005cd3      c1c707         rol edi, 7
0x00005cd6      31f9           xor ecx, edi
0x00005cd8      4489df         mov edi, r11d
0x00005cdb      01d1           add ecx, edx
0x00005cdd      4489da         mov edx, r11d
0x00005ce0      c1cf02         ror edi, 2
0x00005ce3      c1ca0d         ror edx, 0xd
0x00005ce6      4101cc         add r12d, ecx
0x00005ce9      31fa           xor edx, edi                            ; ../coreutils-8.31/lib/sha256.c:260
0x00005ceb      4489df         mov edi, r11d
0x00005cee      c1c70a         rol edi, 0xa
0x00005cf1      31fa           xor edx, edi
0x00005cf3      89df           mov edi, ebx
0x00005cf5      4409df         or edi, r11d
0x00005cf8      4421c7         and edi, r8d
0x00005cfb      09ef           or edi, ebp
0x00005cfd      01d7           add edi, edx
0x00005cff      89f2           mov edx, esi
0x00005d01      01f9           add ecx, edi
0x00005d03      89f7           mov edi, esi
0x00005d05      c1c20d         rol edx, 0xd
0x00005d08      c1c70f         rol edi, 0xf
0x00005d0b      c1ee0a         shr esi, 0xa
0x00005d0e      31fa           xor edx, edi
0x00005d10      4489f7         mov edi, r14d
0x00005d13      31d6           xor esi, edx
0x00005d15      4489f2         mov edx, r14d
0x00005d18      c1c70e         rol edi, 0xe
0x00005d1b      c1ca07         ror edx, 7
0x00005d1e      31d7           xor edi, edx
0x00005d20      4489f2         mov edx, r14d
0x00005d23      c1ea03         shr edx, 3
0x00005d26      31d7           xor edi, edx
0x00005d28      4489d2         mov edx, r10d
0x00005d2b      4401ef         add edi, r13d
0x00005d2e      4431ca         xor edx, r9d
0x00005d31      4401ff         add edi, r15d
0x00005d34      01fe           add esi, edi
0x00005d36      4421e2         and edx, r12d
0x00005d39      4489e7         mov edi, r12d                           ; ../coreutils-8.31/lib/sha256.c:263
0x00005d3c      8d8430f27871.  lea eax, [rax + rsi - 0x398e870e]
0x00005d43      4431d2         xor edx, r10d
0x00005d46      c1cf0b         ror edi, 0xb
0x00005d49      89b424cc0000.  mov dword [rsp + 0xcc], esi
0x00005d50      4489e6         mov esi, r12d
0x00005d53      014c244c       add dword [rsp + 0x4c], ecx
0x00005d57      01c2           add edx, eax
0x00005d59      c1ce06         ror esi, 6                              ; ../coreutils-8.31/lib/sha256.c:264
0x00005d5c      89f8           mov eax, edi
0x00005d5e      31f0           xor eax, esi                            ; ../coreutils-8.31/lib/sha256.c:260
0x00005d60      4489e6         mov esi, r12d
0x00005d63      4489df         mov edi, r11d
0x00005d66      c1c607         rol esi, 7
0x00005d69      21cf           and edi, ecx
0x00005d6b      015c2454       add dword [rsp + 0x54], ebx
0x00005d6f      31f0           xor eax, esi
0x00005d71      89ce           mov esi, ecx
0x00005d73      44015c2450     add dword [rsp + 0x50], r11d
0x00005d78      01d0           add eax, edx
0x00005d7a      89ca           mov edx, ecx
0x00005d7c      c1ce02         ror esi, 2
0x00005d7f      c1ca0d         ror edx, 0xd
0x00005d82      8b6c244c       mov ebp, dword [rsp + 0x4c]
0x00005d86      4101c0         add r8d, eax
0x00005d89      31f2           xor edx, esi
0x00005d8b      89ce           mov esi, ecx
0x00005d8d      c1c60a         rol esi, 0xa
0x00005d90      448b6c2450     mov r13d, dword [rsp + 0x50]
0x00005d95      31f2           xor edx, esi
0x00005d97      4489de         mov esi, r11d
0x00005d9a      448b742454     mov r14d, dword [rsp + 0x54]
0x00005d9f      09ce           or esi, ecx
0x00005da1      4401442458     add dword [rsp + 0x58], r8d
0x00005da6      440164245c     add dword [rsp + 0x5c], r12d
0x00005dab      21de           and esi, ebx
0x00005dad      8b5c245c       mov ebx, dword [rsp + 0x5c]
0x00005db1      09fe           or esi, edi                             ; ../coreutils-8.31/lib/sha256.c:262
0x00005db3      44014c2460     add dword [rsp + 0x60], r9d             ; ../coreutils-8.31/lib/sha256.c:263
0x00005db8      01f2           add edx, esi
0x00005dba      03542474       add edx, dword [rsp + 0x74]
0x00005dbe      488bb4248000.  mov rsi, qword [rsp + 0x80]
0x00005dc6      448b4c2460     mov r9d, dword [rsp + 0x60]             ; ../coreutils-8.31/lib/sha256.c:266
0x00005dcb      01c2           add edx, eax
0x00005dcd      4889f1         mov rcx, rsi                            ; ../coreutils-8.31/lib/sha256.c:262
0x00005dd0      896e04         mov dword [rsi + 4], ebp
0x00005dd3      8916           mov dword [rsi], edx
0x00005dd5      44896e08       mov dword [rsi + 8], r13d
0x00005dd9      4889c8         mov rax, rcx
0x00005ddc      4489760c       mov dword [rsi + 0xc], r14d
0x00005de0      8b742458       mov esi, dword [rsp + 0x58]             ; ../coreutils-8.31/lib/sha256.c:269
0x00005de4      895914         mov dword [rcx + 0x14], ebx
0x00005de7      89542474       mov dword [rsp + 0x74], edx             ; ../coreutils-8.31/lib/sha256.c:185
0x00005deb      897110         mov dword [rcx + 0x10], esi
0x00005dee      44894918       mov dword [rcx + 0x18], r9d             ; ../coreutils-8.31/lib/sha256.c:151
0x00005df2      4401542464     add dword [rsp + 0x64], r10d
0x00005df7      4189f2         mov r10d, esi
0x00005dfa      8b4c2464       mov ecx, dword [rsp + 0x64]
0x00005dfe      89481c         mov dword [rax + 0x1c], ecx
0x00005e01      488b442440     mov rax, qword [rsp + 0x40]
0x00005e06      4839442478     cmp qword [rsp + 0x78], rax
0x00005e0b      0f876fd7ffff   ja 0x3580
0x00005e11      488b8424d800.  mov rax, qword [rsp + 0xd8]
0x00005e19      644833042528.  xor rax, qword fs:[0x28]
0x00005e22      7512           jne 0x5e36
0x00005e24      4881c4e80000.  add rsp, 0xe8
0x00005e2b      5b             pop rbx
0x00005e2c      5d             pop rbp
0x00005e2d      415c           pop r12
0x00005e2f      415d           pop r13
0x00005e31      415e           pop r14
0x00005e33      415f           pop r15
0x00005e35      c3             ret
0x00005e36      e855b8ffff     call sym.imp.__stack_chk_fail
0x00005e3b      0f1f440000     nop dword [rax + rax]
;-- sha256_conclude_ctx:
0x00005e40      4154           push r12
0x00005e42      55             push rbp
0x00005e43      53             push rbx
0x00005e44      488b4f28       mov rcx, qword [rdi + 0x28]
0x00005e48      4889fb         mov rbx, rdi
0x00005e4b      8b5320         mov edx, dword [rbx + 0x20]
0x00005e4e      8b4324         mov eax, dword [rbx + 0x24]
0x00005e51      4883f938       cmp rcx, 0x38
0x00005e55      4819ed         sbb rbp, rbp                            ; ../coreutils-8.31/lib/sha256.c:154
0x00005e58      4883e5c0       and rbp, 0xffffffffffffffc0
0x00005e5c      4883ed80       sub rbp, 0xffffffffffffff80             ; ../coreutils-8.31/lib/sha256.c:157
0x00005e60      4883f938       cmp rcx, 0x38
0x00005e64      4819f6         sbb rsi, rsi
0x00005e67      4883e6f0       and rsi, 0xfffffffffffffff0
0x00005e6b      4883c61f       add rsi, 0x1f
0x00005e6f      4883f938       cmp rcx, 0x38
0x00005e73      4819ff         sbb rdi, rdi
0x00005e76      01ca           add edx, ecx
0x00005e78      4883e7f0       and rdi, 0xfffffffffffffff0             ; ../coreutils-8.31/lib/sha256.c:165
0x00005e7c      4189d0         mov r8d, edx                            ; ../coreutils-8.31/lib/sha256.c:166
0x00005e7f      895320         mov dword [rbx + 0x20], edx             ; ../coreutils-8.31/lib/sha256.c:164
0x00005e82      4883c71e       add rdi, 0x1e                           ; byteswap.h:65    __v; }))
0x00005e86      4939c8         cmp r8, rcx                             ; string_fortified.h:52
0x00005e89      7306           jae 0x5e91                              ; ../coreutils-8.31/lib/sha256.c:-76
0x00005e8b      83c001         add eax, 1
0x00005e8e      894324         mov dword [rbx + 0x24], eax
0x00005e91      4189d0         mov r8d, edx
0x00005e94      c1e003         shl eax, 3                              ; ../coreutils-8.31/lib/sha256.c:-332
0x00005e97      4c8d6330       lea r12, [rbx + 0x30]
0x00005e9b      41c1e81d       shr r8d, 0x1d
0x00005e9f      c1e203         shl edx, 3
0x00005ea2      4409c0         or eax, r8d
0x00005ea5      0fca           bswap edx
0x00005ea7      0fc8           bswap eax
0x00005ea9      8944bb30       mov dword [rbx + rdi*4 + 0x30], eax
0x00005ead      4889e8         mov rax, rbp
0x00005eb0      8954b330       mov dword [rbx + rsi*4 + 0x30], edx
0x00005eb4      4829c8         sub rax, rcx
0x00005eb7      498d3c0c       lea rdi, [r12 + rcx]
0x00005ebb      488d35be3e00.  lea rsi, obj.fillbuf                    ; ../coreutils-8.31/lib/sha256.c:-333 ; 0x9d80
0x00005ec2      488d50f8       lea rdx, [rax - 8]
0x00005ec6      e8a5b8ffff     call sym.imp.memcpy
0x00005ecb      4889da         mov rdx, rbx
0x00005ece      4889ee         mov rsi, rbp
0x00005ed1      4c89e7         mov rdi, r12
0x00005ed4      5b             pop rbx
0x00005ed5      5d             pop rbp
0x00005ed6      415c           pop r12
0x00005ed8      e9d3d5ffff     jmp sym.sha256_process_block
0x00005edd      0f1f00         nop dword [rax]
;-- sha256_finish_ctx:
0x00005ee0      55             push rbp
0x00005ee1      53             push rbx                                ; ../coreutils-8.31/lib/sha256.c:-326
0x00005ee2      4889f5         mov rbp, rsi
0x00005ee5      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/sha256.c:-327
0x00005ee8      4883ec08       sub rsp, 8
0x00005eec      e84fffffff     call sym.sha256_conclude_ctx
0x00005ef1      4883c408       add rsp, 8
0x00005ef5      4889ee         mov rsi, rbp
0x00005ef8      4889df         mov rdi, rbx
0x00005efb      5b             pop rbx
0x00005efc      5d             pop rbp
0x00005efd      e96ed5ffff     jmp sym.sha256_read_ctx
0x00005f02      0f1f4000       nop dword [rax]
0x00005f06      662e0f1f8400.  nop word cs:[rax + rax]
;-- sha224_finish_ctx:
0x00005f10      55             push rbp
0x00005f11      53             push rbx
0x00005f12      4889f5         mov rbp, rsi
0x00005f15      4889fb         mov rbx, rdi
0x00005f18      4883ec08       sub rsp, 8
0x00005f1c      e81fffffff     call sym.sha256_conclude_ctx
0x00005f21      4883c408       add rsp, 8
0x00005f25      4889ee         mov rsi, rbp
0x00005f28      4889df         mov rdi, rbx
0x00005f2b      5b             pop rbx
0x00005f2c      5d             pop rbp
0x00005f2d      e95ed5ffff     jmp sym.sha224_read_ctx
0x00005f32      0f1f4000       nop dword [rax]
0x00005f36      662e0f1f8400.  nop word cs:[rax + rax]
;-- sha256_process_bytes:
0x00005f40      4157           push r15
0x00005f42      4156           push r14
0x00005f44      4155           push r13
0x00005f46      4154           push r12
0x00005f48      4989d5         mov r13, rdx
0x00005f4b      55             push rbp
0x00005f4c      53             push rbx
0x00005f4d      4989f4         mov r12, rsi
0x00005f50      4889fb         mov rbx, rdi
0x00005f53      4883ec08       sub rsp, 8
0x00005f57      488b6a28       mov rbp, qword [rdx + 0x28]
0x00005f5b      4885ed         test rbp, rbp
0x00005f5e      0f852c010000   jne 0x6090
0x00005f64      4983fc3f       cmp r12, 0x3f
0x00005f68      0f8606010000   jbe 0x6074
0x00005f6e      f6c303         test bl, 3
0x00005f71      0f84e1000000   je 0x6058
0x00005f77      4983fc40       cmp r12, 0x40                           ; segment.PHDR
0x00005f7b      498d6d30       lea rbp, [r13 + 0x30]
0x00005f7f      745f           je 0x5fe0
0x00005f81      4d8d7c24bf     lea r15, [r12 - 0x41]
0x00005f86      49c1ef06       shr r15, 6
0x00005f8a      4d8d7701       lea r14, [r15 + 1]                      ; ../coreutils-8.31/lib/sha256.c:-150
0x00005f8e      49c1e606       shl r14, 6
0x00005f92      4901de         add r14, rbx
0x00005f95      0f1f00         nop dword [rax]
0x00005f98      f30f6f03       movdqu xmm0, xmmword [rbx]
0x00005f9c      4c89ea         mov rdx, r13
0x00005f9f      be40000000     mov esi, 0x40                           ; segment.PHDR
0x00005fa4      4889ef         mov rdi, rbp                            ; string_fortified.h:-461
0x00005fa7      4883c340       add rbx, 0x40                           ; segment.PHDR
0x00005fab      0f114500       movups xmmword [rbp], xmm0              ; ../coreutils-8.31/lib/sha256.c:-132
0x00005faf      f30f6f43d0     movdqu xmm0, xmmword [rbx - 0x30]
0x00005fb4      0f114510       movups xmmword [rbp + 0x10], xmm0
0x00005fb8      f30f6f43e0     movdqu xmm0, xmmword [rbx - 0x20]
0x00005fbd      0f114520       movups xmmword [rbp + 0x20], xmm0
0x00005fc1      f30f6f43f0     movdqu xmm0, xmmword [rbx - 0x10]
0x00005fc6      0f114530       movups xmmword [rbp + 0x30], xmm0
0x00005fca      e8e1d4ffff     call sym.sha256_process_block
0x00005fcf      4c39f3         cmp rbx, r14
0x00005fd2      75c4           jne 0x5f98                              ; ../coreutils-8.31/lib/sha256.c:-131
0x00005fd4      49f7df         neg r15
0x00005fd7      49c1e706       shl r15, 6
0x00005fdb      4f8d643cc0     lea r12, [r12 + r15 - 0x40]             ; ../coreutils-8.31/lib/sha256.c:-128
0x00005fe0      498b7d28       mov rdi, qword [r13 + 0x28]
0x00005fe4      4183fc08       cmp r12d, 8
0x00005fe8      4489e0         mov eax, r12d
0x00005feb      488d4c3d00     lea rcx, [rbp + rdi]                    ; ../coreutils-8.31/lib/sha256.c:-127
0x00005ff0      0f83da000000   jae 0x60d0
0x00005ff6      41f6c404       test r12b, 4
0x00005ffa      0f85f1010000   jne 0x61f1
0x00006000      4585e4         test r12d, r12d
0x00006003      740d           je 0x6012
0x00006005      0fb613         movzx edx, byte [rbx]
0x00006008      a802           test al, 2
0x0000600a      8811           mov byte [rcx], dl
0x0000600c      0f85f3010000   jne 0x6205
0x00006012      4901fc         add r12, rdi
0x00006015      4983fc3f       cmp r12, 0x3f
0x00006019      7623           jbe 0x603e
0x0000601b      4c89ea         mov rdx, r13
0x0000601e      be40000000     mov esi, 0x40                           ; segment.PHDR
0x00006023      4889ef         mov rdi, rbp
0x00006026      e885d4ffff     call sym.sha256_process_block
0x0000602b      4983ec40       sub r12, 0x40                           ; segment.PHDR
0x0000602f      498d7570       lea rsi, [r13 + 0x70]                   ; ../coreutils-8.31/lib/sha256.c:-143
0x00006033      4889ef         mov rdi, rbp
0x00006036      4c89e2         mov rdx, r12
0x00006039      e832b7ffff     call sym.imp.memcpy
0x0000603e      4d896528       mov qword [r13 + 0x28], r12
0x00006042      4883c408       add rsp, 8
0x00006046      5b             pop rbx
0x00006047      5d             pop rbp
0x00006048      415c           pop r12
0x0000604a      415d           pop r13
0x0000604c      415e           pop r14
0x0000604e      415f           pop r15
0x00006050      c3             ret                                     ; ../coreutils-8.31/lib/sha256.c:-179
0x00006051      0f1f80000000.  nop dword [rax]
0x00006058      4c89e5         mov rbp, r12
0x0000605b      4889df         mov rdi, rbx
0x0000605e      4c89ea         mov rdx, r13
0x00006061      4883e5c0       and rbp, 0xffffffffffffffc0
0x00006065      4183e43f       and r12d, 0x3f
0x00006069      4889ee         mov rsi, rbp
0x0000606c      4801eb         add rbx, rbp
0x0000606f      e83cd4ffff     call sym.sha256_process_block
0x00006074      4d85e4         test r12, r12
0x00006077      0f856b010000   jne 0x61e8
0x0000607d      4883c408       add rsp, 8
0x00006081      5b             pop rbx
0x00006082      5d             pop rbp                                 ; ../coreutils-8.31/lib/sha256.c:-174
0x00006083      415c           pop r12
0x00006085      415d           pop r13
0x00006087      415e           pop r14                                 ; ../coreutils-8.31/lib/sha256.c:-161
0x00006089      415f           pop r15
0x0000608b      c3             ret
0x0000608c      0f1f4000       nop dword [rax]
0x00006090      41be80000000   mov r14d, 0x80                          ; string_fortified.h:-461
0x00006096      4c8d7a30       lea r15, [rdx + 0x30]
0x0000609a      4929ee         sub r14, rbp
0x0000609d      4939f6         cmp r14, rsi
0x000060a0      498d3c2f       lea rdi, [r15 + rbp]
0x000060a4      4c0f47f6       cmova r14, rsi
0x000060a8      4889de         mov rsi, rbx
0x000060ab      4c89f2         mov rdx, r14
0x000060ae      e8bdb6ffff     call sym.imp.memcpy
0x000060b3      498b7528       mov rsi, qword [r13 + 0x28]
0x000060b7      4c01f6         add rsi, r14
0x000060ba      4883fe40       cmp rsi, 0x40                           ; segment.PHDR
0x000060be      49897528       mov qword [r13 + 0x28], rsi
0x000060c2      775c           ja 0x6120
0x000060c4      4c01f3         add rbx, r14
0x000060c7      4d29f4         sub r12, r14
0x000060ca      e995feffff     jmp 0x5f64
0x000060cf      90             nop
0x000060d0      488b03         mov rax, qword [rbx]
0x000060d3      4489e2         mov edx, r12d
0x000060d6      488901         mov qword [rcx], rax
0x000060d9      488b4413f8     mov rax, qword [rbx + rdx - 8]
0x000060de      48894411f8     mov qword [rcx + rdx - 8], rax
0x000060e3      488d5108       lea rdx, [rcx + 8]
0x000060e7      4889c8         mov rax, rcx
0x000060ea      4883e2f8       and rdx, 0xfffffffffffffff8
0x000060ee      4829d0         sub rax, rdx
0x000060f1      4829c3         sub rbx, rax
0x000060f4      4401e0         add eax, r12d
0x000060f7      83e0f8         and eax, 0xfffffff8                     ; 4294967288
0x000060fa      83f808         cmp eax, 8                              ; ../coreutils-8.31/lib/sha256.c:-167
0x000060fd      0f820fffffff   jb 0x6012
0x00006103      83e0f8         and eax, 0xfffffff8                     ; 4294967288
0x00006106      31c9           xor ecx, ecx
0x00006108      89ce           mov esi, ecx                            ; string_fortified.h:-461
0x0000610a      83c108         add ecx, 8
0x0000610d      4c8b0433       mov r8, qword [rbx + rsi]
0x00006111      39c1           cmp ecx, eax
0x00006113      4c890432       mov qword [rdx + rsi], r8
0x00006117      72ef           jb 0x6108
0x00006119      e9f4feffff     jmp 0x6012
0x0000611e      6690           nop
0x00006120      4883e6c0       and rsi, 0xffffffffffffffc0
0x00006124      4c89ea         mov rdx, r13
0x00006127      4c89ff         mov rdi, r15
0x0000612a      e881d3ffff     call sym.sha256_process_block
0x0000612f      498b5528       mov rdx, qword [r13 + 0x28]
0x00006133      4c01f5         add rbp, r14
0x00006136      4883e5c0       and rbp, 0xffffffffffffffc0
0x0000613a      498d042f       lea rax, [r15 + rbp]
0x0000613e      83e23f         and edx, 0x3f
0x00006141      83fa08         cmp edx, 8
0x00006144      49895528       mov qword [r13 + 0x28], rdx
0x00006148      7336           jae 0x6180
0x0000614a      f6c204         test dl, 4
0x0000614d      0f857c000000   jne 0x61cf
0x00006153      85d2           test edx, edx
0x00006155      0f8469ffffff   je 0x60c4
0x0000615b      0fb608         movzx ecx, byte [rax]
0x0000615e      f6c202         test dl, 2
0x00006161      41884d30       mov byte [r13 + 0x30], cl
0x00006165      0f8459ffffff   je 0x60c4
0x0000616b      89d2           mov edx, edx
0x0000616d      0fb74410fe     movzx eax, word [rax + rdx - 2]
0x00006172      6641894417fe   mov word [r15 + rdx - 2], ax
0x00006178      e947ffffff     jmp 0x60c4
0x0000617d      0f1f00         nop dword [rax]
0x00006180      488b08         mov rcx, qword [rax]
0x00006183      49894d30       mov qword [r13 + 0x30], rcx
0x00006187      89d1           mov ecx, edx
0x00006189      488b7408f8     mov rsi, qword [rax + rcx - 8]
0x0000618e      4989740ff8     mov qword [r15 + rcx - 8], rsi
0x00006193      498d4d38       lea rcx, [r13 + 0x38]
0x00006197      4883e1f8       and rcx, 0xfffffffffffffff8
0x0000619b      4929cf         sub r15, rcx
0x0000619e      4c29f8         sub rax, r15
0x000061a1      4101d7         add r15d, edx
0x000061a4      4183e7f8       and r15d, 0xfffffff8                    ; 4294967288
0x000061a8      4183ff08       cmp r15d, 8
0x000061ac      0f8212ffffff   jb 0x60c4
0x000061b2      4183e7f8       and r15d, 0xfffffff8                    ; 4294967288
0x000061b6      31d2           xor edx, edx
0x000061b8      89d6           mov esi, edx
0x000061ba      83c208         add edx, 8
0x000061bd      488b3c30       mov rdi, qword [rax + rsi]
0x000061c1      4439fa         cmp edx, r15d
0x000061c4      48893c31       mov qword [rcx + rsi], rdi
0x000061c8      72ee           jb 0x61b8
0x000061ca      e9f5feffff     jmp 0x60c4
0x000061cf      8b08           mov ecx, dword [rax]
0x000061d1      89d2           mov edx, edx
0x000061d3      41894d30       mov dword [r13 + 0x30], ecx
0x000061d7      8b4410fc       mov eax, dword [rax + rdx - 4]
0x000061db      41894417fc     mov dword [r15 + rdx - 4], eax
0x000061e0      e9dffeffff     jmp 0x60c4                              ; ../coreutils-8.31/lib/sha256.c:-215
0x000061e5      0f1f00         nop dword [rax]
0x000061e8      498d6d30       lea rbp, [r13 + 0x30]
0x000061ec      e9effdffff     jmp 0x5fe0
0x000061f1      8b13           mov edx, dword [rbx]
0x000061f3      8911           mov dword [rcx], edx
0x000061f5      4489e2         mov edx, r12d
0x000061f8      8b4413fc       mov eax, dword [rbx + rdx - 4]
0x000061fc      894411fc       mov dword [rcx + rdx - 4], eax
0x00006200      e90dfeffff     jmp 0x6012
0x00006205      4489e2         mov edx, r12d
0x00006208      0fb74413fe     movzx eax, word [rbx + rdx - 2]
0x0000620d      66894411fe     mov word [rcx + rdx - 2], ax
0x00006212      e9fbfdffff     jmp 0x6012
0x00006217      660f1f840000.  nop word [rax + rax]
;-- sha256_buffer:
0x00006220      55             push rbp
0x00006221      53             push rbx
0x00006222      4889d5         mov rbp, rdx
0x00006225      4881ecc80000.  sub rsp, 0xc8
0x0000622c      64488b042528.  mov rax, qword fs:[0x28]
0x00006235      48898424b800.  mov qword [rsp + 0xb8], rax             ; ../coreutils-8.31/lib/sha256.c:-421
0x0000623d      31c0           xor eax, eax
0x0000623f      48b867e6096a.  movabs rax, 0xbb67ae856a09e667
0x00006249      4889e3         mov rbx, rsp
0x0000624c      48c744242000.  mov qword [rsp + 0x20], 0
0x00006255      48890424       mov qword [rsp], rax
0x00006259      48b872f36e3c.  movabs rax, 0xa54ff53a3c6ef372
0x00006263      4889da         mov rdx, rbx
0x00006266      4889442408     mov qword [rsp + 8], rax
0x0000626b      48b87f520e51.  movabs rax, 0x9b05688c510e527f
0x00006275      48c744242800.  mov qword [rsp + 0x28], 0
0x0000627e      4889442410     mov qword [rsp + 0x10], rax
0x00006283      48b8abd9831f.  movabs rax, 0x5be0cd191f83d9ab
0x0000628d      4889442418     mov qword [rsp + 0x18], rax
0x00006292      e8a9fcffff     call sym.sha256_process_bytes
0x00006297      4889df         mov rdi, rbx
0x0000629a      e8a1fbffff     call sym.sha256_conclude_ctx
0x0000629f      4889ee         mov rsi, rbp
0x000062a2      4889df         mov rdi, rbx
0x000062a5      e8c6d1ffff     call sym.sha256_read_ctx
0x000062aa      488b8c24b800.  mov rcx, qword [rsp + 0xb8]
0x000062b2      6448330c2528.  xor rcx, qword fs:[0x28]
0x000062bb      750a           jne 0x62c7
0x000062bd      4881c4c80000.  add rsp, 0xc8
0x000062c4      5b             pop rbx
0x000062c5      5d             pop rbp                                 ; ../coreutils-8.31/lib/sha256.c:-414
0x000062c6      c3             ret
0x000062c7      e8c4b3ffff     call sym.imp.__stack_chk_fail
0x000062cc      0f1f4000       nop dword [rax]
;-- sha224_buffer:
0x000062d0      55             push rbp
0x000062d1      53             push rbx
0x000062d2      4889d5         mov rbp, rdx
0x000062d5      4881ecc80000.  sub rsp, 0xc8
0x000062dc      64488b042528.  mov rax, qword fs:[0x28]
0x000062e5      48898424b800.  mov qword [rsp + 0xb8], rax             ; ../coreutils-8.31/lib/sha256.c:-405
0x000062ed      31c0           xor eax, eax
0x000062ef      48b8d89e05c1.  movabs rax, 0x367cd507c1059ed8
0x000062f9      4889e3         mov rbx, rsp
0x000062fc      48c744242000.  mov qword [rsp + 0x20], 0
0x00006305      48890424       mov qword [rsp], rax
0x00006309      48b817dd7030.  movabs rax, 0xf70e59393070dd17
0x00006313      4889da         mov rdx, rbx
0x00006316      4889442408     mov qword [rsp + 8], rax
0x0000631b      48b8310bc0ff.  movabs rax, 0x68581511ffc00b31
0x00006325      48c744242800.  mov qword [rsp + 0x28], 0
0x0000632e      4889442410     mov qword [rsp + 0x10], rax
0x00006333      48b8a78ff964.  movabs rax, 0xbefa4fa464f98fa7
0x0000633d      4889442418     mov qword [rsp + 0x18], rax
0x00006342      e8f9fbffff     call sym.sha256_process_bytes
0x00006347      4889df         mov rdi, rbx
0x0000634a      e8f1faffff     call sym.sha256_conclude_ctx
0x0000634f      4889ee         mov rsi, rbp
0x00006352      4889df         mov rdi, rbx
0x00006355      e836d1ffff     call sym.sha224_read_ctx
0x0000635a      488b8c24b800.  mov rcx, qword [rsp + 0xb8]
0x00006362      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000636b      750a           jne 0x6377
0x0000636d      4881c4c80000.  add rsp, 0xc8
0x00006374      5b             pop rbx
0x00006375      5d             pop rbp
0x00006376      c3             ret
0x00006377      e814b3ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/sha256.c:-304
0x0000637c      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/sha256.c:-303
;-- shaxxx_stream.isra.1:
0x00006380      4157           push r15
0x00006382      4156           push r14
0x00006384      4989ce         mov r14, rcx
0x00006387      4155           push r13
0x00006389      4154           push r12
0x0000638b      4989d4         mov r12, rdx
0x0000638e      55             push rbp
0x0000638f      53             push rbx
0x00006390      4889fb         mov rbx, rdi
0x00006393      bf48800000     mov edi, 0x8048                         ; ../coreutils-8.31/lib/sha256.c:-276
0x00006398      4881ecd80000.  sub rsp, 0xd8
0x0000639f      64488b042528.  mov rax, qword fs:[0x28]
0x000063a8      48898424c800.  mov qword [rsp + 0xc8], rax             ; stdio2.h:-116
0x000063b0      31c0           xor eax, eax
0x000063b2      4889742408     mov qword [rsp + 8], rsi
0x000063b7      e8d4b3ffff     call sym.imp.malloc
0x000063bc      4885c0         test rax, rax
0x000063bf      0f84cb000000   je 0x6490
0x000063c5      4c8d6c2410     lea r13, [rsp + 0x10]
0x000063ca      4889c5         mov rbp, rax
0x000063cd      4c89ef         mov rdi, r13
0x000063d0      41ffd4         call r12
0x000063d3      41bc00800000   mov r12d, sym.quotearg_style            ; ../coreutils-8.31/lib/sha256.c:-242 ; 0x8000 ; "H\x89\xf2\x89\xfe1\xff\xe9\xd4\xfe\xff\xff\x0f\x1f@"
0x000063d9      4531ff         xor r15d, r15d
0x000063dc      eb2b           jmp 0x6409
0x000063de      6690           nop                                     ; ../coreutils-8.31/lib/sha256.c:-241
0x000063e0      4a8d7c3d00     lea rdi, [rbp + r15]
0x000063e5      4c89e2         mov rdx, r12
0x000063e8      4889d9         mov rcx, rbx                            ; ../coreutils-8.31/lib/sha256.c:-239
0x000063eb      4c29fa         sub rdx, r15
0x000063ee      be01000000     mov esi, 1
0x000063f3      e828b2ffff     call sym.imp.fread_unlocked
0x000063f8      4901c7         add r15, rax
0x000063fb      4981ff008000.  cmp r15, sym.quotearg_style             ; 0x8000 ; "H\x89\xf2\x89\xfe1\xff\xe9\xd4\xfe\xff\xff\x0f\x1f@"
0x00006402      744c           je 0x6450
0x00006404      4885c0         test rax, rax
0x00006407      745f           je 0x6468
0x00006409      f60310         test byte [rbx], 0x10
0x0000640c      74d2           je 0x63e0
0x0000640e      4d85ff         test r15, r15
0x00006411      756d           jne 0x6480
0x00006413      488b742408     mov rsi, qword [rsp + 8]
0x00006418      4c89ef         mov rdi, r13
0x0000641b      41ffd6         call r14
0x0000641e      4889ef         mov rdi, rbp
0x00006421      e88ab1ffff     call sym.imp.free
0x00006426      31c0           xor eax, eax
0x00006428      488b8c24c800.  mov rcx, qword [rsp + 0xc8]             ; ../coreutils-8.31/lib/sha256.c:-264
0x00006430      6448330c2528.  xor rcx, qword fs:[0x28]
0x00006439      755c           jne 0x6497
0x0000643b      4881c4d80000.  add rsp, 0xd8
0x00006442      5b             pop rbx
0x00006443      5d             pop rbp
0x00006444      415c           pop r12
0x00006446      415d           pop r13
0x00006448      415e           pop r14
0x0000644a      415f           pop r15
0x0000644c      c3             ret
0x0000644d      0f1f00         nop dword [rax]
0x00006450      4c89ea         mov rdx, r13                            ; ../coreutils-8.31/lib/sha256.c:-302
0x00006453      be00800000     mov esi, sym.quotearg_style             ; 0x8000 ; "H\x89\xf2\x89\xfe1\xff\xe9\xd4\xfe\xff\xff\x0f\x1f@"
0x00006458      4889ef         mov rdi, rbp
0x0000645b      e850d0ffff     call sym.sha256_process_block
0x00006460      e974ffffff     jmp 0x63d9                              ; ../coreutils-8.31/lib/sha256.c:-235
0x00006465      0f1f00         nop dword [rax]
0x00006468      f60320         test byte [rbx], 0x20
0x0000646b      74a1           je 0x640e
0x0000646d      4889ef         mov rdi, rbp
0x00006470      e83bb1ffff     call sym.imp.free
0x00006475      b801000000     mov eax, 1
0x0000647a      ebac           jmp 0x6428
0x0000647c      0f1f4000       nop dword [rax]
0x00006480      4c89ea         mov rdx, r13                            ; ../coreutils-8.31/lib/sha256.c:-228
0x00006483      4c89fe         mov rsi, r15
0x00006486      4889ef         mov rdi, rbp
0x00006489      e8b2faffff     call sym.sha256_process_bytes
0x0000648e      eb83           jmp 0x6413
0x00006490      b801000000     mov eax, 1
0x00006495      eb91           jmp 0x6428
0x00006497      e8f4b1ffff     call sym.imp.__stack_chk_fail
0x0000649c      0f1f4000       nop dword [rax]
;-- sha256_stream:
0x000064a0      488d0d39faff.  lea rcx, sym.sha256_finish_ctx          ; 0x5ee0 ; "USH\x89\xf5H\x89\xfbH\x83\xec\b\xe8O\xff\xff\xffH\x83\xc4\bH\x89\xeeH\x89\xdf[]\xe9n\xd5\xff\xff\x0f\x1f@"
0x000064a7      488d1522cfff.  lea rdx, sym.sha256_init_ctx            ; 0x33d0 ; "H\xb8g\xe6\tj\x85\xaeg\xbbH\xc7G "
0x000064ae      e9cdfeffff     jmp sym.shaxxx_stream.isra.1
0x000064b3      0f1f00         nop dword [rax]
0x000064b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- sha224_stream:
0x000064c0      488d0d49faff.  lea rcx, sym.sha224_finish_ctx          ; 0x5f10 ; "USH\x89\xf5H\x89\xfbH\x83\xec\b\xe8\x1f\xff\xff\xffH\x83\xc4\bH\x89\xeeH\x89\xdf[]\xe9^\xd5\xff\xff\x0f\x1f@"
0x000064c7      488d1552cfff.  lea rdx, sym.sha224_init_ctx            ; 0x3420 ; "H\xb8\u061e\x05\xc1\a\xd5|6H\xc7G "
0x000064ce      e9adfeffff     jmp sym.shaxxx_stream.isra.1
0x000064d3      662e0f1f8400.  nop word cs:[rax + rax]
0x000064dd      0f1f00         nop dword [rax]
;-- fdadvise:
0x000064e0      e93bb2ffff     jmp sym.imp.posix_fadvise               ; ../coreutils-8.31/lib/fadvise.c:32
0x000064e5      90             nop
0x000064e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- fadvise:
0x000064f0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fadvise.c:40
0x000064f3      741b           je 0x6510
0x000064f5      53             push rbx
0x000064f6      89f3           mov ebx, esi
0x000064f8      e883b2ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fadvise.c:42
0x000064fd      89d9           mov ecx, ebx                            ; ../coreutils-8.31/lib/fadvise.c:34
0x000064ff      31d2           xor edx, edx
0x00006501      31f6           xor esi, esi
0x00006503      5b             pop rbx                                 ; ../coreutils-8.31/lib/fadvise.c:43
0x00006504      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fadvise.c:34
0x00006506      e915b2ffff     jmp sym.imp.posix_fadvise
0x0000650b      0f1f440000     nop dword [rax + rax]
0x00006510      f3c3           ret
0x00006512      662e0f1f8400.  nop word cs:[rax + rax]
0x0000651c      0f1f4000       nop dword [rax]
;-- fopen_safer:
0x00006520      4154           push r12                                ; ../coreutils-8.31/lib/fopen-safer.c:32
0x00006522      55             push rbp
0x00006523      4889f5         mov rbp, rsi
0x00006526      53             push rbx
0x00006527      e824b3ffff     call sym.imp.fopen                      ; ../coreutils-8.31/lib/fopen-safer.c:33
0x0000652c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fopen-safer.c:35
0x0000652f      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:33
0x00006532      740d           je 0x6541                               ; ../coreutils-8.31/lib/fopen-safer.c:35
0x00006534      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:37
0x00006537      e844b2ffff     call sym.imp.fileno
0x0000653c      83f802         cmp eax, 2                              ; ../coreutils-8.31/lib/fopen-safer.c:39
0x0000653f      760f           jbe 0x6550
0x00006541      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:63
0x00006544      5b             pop rbx
0x00006545      5d             pop rbp
0x00006546      415c           pop r12
0x00006548      c3             ret
0x00006549      0f1f80000000.  nop dword [rax]
0x00006550      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fopen-safer.c:41
0x00006552      e8991d0000     call sym.dup_safer
0x00006557      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:43
0x00006559      4189c4         mov r12d, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:41
0x0000655c      783a           js 0x6598                               ; ../coreutils-8.31/lib/fopen-safer.c:43
0x0000655e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:51
0x00006561      e84a260000     call sym.rpl_fclose
0x00006566      85c0           test eax, eax
0x00006568      7513           jne 0x657d
0x0000656a      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fopen-safer.c:52
0x0000656d      4489e7         mov edi, r12d
0x00006570      e87bb2ffff     call sym.imp.fdopen
0x00006575      4885c0         test rax, rax
0x00006578      4889c3         mov rbx, rax
0x0000657b      75c4           jne 0x6541
0x0000657d      e84eb0ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:54
0x00006582      8b28           mov ebp, dword [rax]
0x00006584      4889c3         mov rbx, rax
0x00006587      4489e7         mov edi, r12d                           ; ../coreutils-8.31/lib/fopen-safer.c:55
0x0000658a      e881b1ffff     call sym.imp.close
0x0000658f      892b           mov dword [rbx], ebp                    ; ../coreutils-8.31/lib/fopen-safer.c:56
0x00006591      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:57
0x00006593      ebac           jmp 0x6541
0x00006595      0f1f00         nop dword [rax]
0x00006598      e833b0ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:45
0x0000659d      448b20         mov r12d, dword [rax]
0x000065a0      4889c5         mov rbp, rax
0x000065a3      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:46
0x000065a6      e805260000     call sym.rpl_fclose
0x000065ab      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:48
0x000065ad      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fopen-safer.c:47
0x000065b1      eb8e           jmp 0x6541                              ; ../coreutils-8.31/lib/fopen-safer.c:48
0x000065b3      662e0f1f8400.  nop word cs:[rax + rax]
0x000065bd      0f1f00         nop dword [rax]
;-- set_program_name:
0x000065c0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x000065c3      53             push rbx
0x000065c4      7477           je 0x663d                               ; ../coreutils-8.31/lib/progname.c:51
0x000065c6      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x000065cb      4889fb         mov rbx, rdi
0x000065ce      e80db1ffff     call sym.imp.strrchr
0x000065d3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x000065d6      7455           je 0x662d
0x000065d8      4c8d4001       lea r8, [rax + 1]
0x000065dc      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x000065df      4829da         sub rdx, rbx
0x000065e2      4883fa06       cmp rdx, 6
0x000065e6      7e45           jle 0x662d
0x000065e8      488d70fa       lea rsi, [rax - 6]
0x000065ec      488d3d053800.  lea rdi, str..libs                      ; 0x9df8 ; "/.libs/"
0x000065f3      b907000000     mov ecx, 7
0x000065f8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000065fa      0f97c2         seta dl
0x000065fd      80da00         sbb dl, 0
0x00006600      84d2           test dl, dl
0x00006602      7529           jne 0x662d
0x00006604      488d3df53700.  lea rdi, [0x00009e00]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x0000660b      b903000000     mov ecx, 3
0x00006610      4c89c6         mov rsi, r8
0x00006613      4c89c3         mov rbx, r8
0x00006616      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00006618      0f97c2         seta dl
0x0000661b      80da00         sbb dl, 0
0x0000661e      84d2           test dl, dl
0x00006620      750b           jne 0x662d
0x00006622      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00006626      48891d735a20.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x20c0a0:8]=0
0x0000662d      48891dec5a20.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x20c120:8]=0
0x00006634      48891d855a20.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x20c0c0:8]=0
0x0000663b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x0000663c      c3             ret
0x0000663d      488b0d9c5a20.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20c0e0:8]=0
0x00006644      488d3d753700.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x9dc0 ; "A NULL argv[0] was passed through an exec system call.\n"
0x0000664b      ba37000000     mov edx, 0x37                           ; '7'
0x00006650      be01000000     mov esi, 1
0x00006655      e836b2ffff     call sym.imp.fwrite
0x0000665a      e861afffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x0000665f      90             nop
;-- gettext_quote.part.1:
0x00006660      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00006661      53             push rbx
0x00006662      4889fd         mov rbp, rdi
0x00006665      89f3           mov ebx, esi
0x00006667      4883ec08       sub rsp, 8
0x0000666b      e8502a0000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00006670      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00006673      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00006676      80fa55         cmp dl, 0x55
0x00006679      7475           je 0x66f0
0x0000667b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x0000667e      7420           je 0x66a0
0x00006680      488d058c3700.  lea rax, str.l______l                   ; 0x9e13 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00006687      488d15873700.  lea rdx, [0x00009e15]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000668e      83fb09         cmp ebx, 9
0x00006691      480f45c2       cmovne rax, rdx
0x00006695      4883c408       add rsp, 8
0x00006699      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000669a      5d             pop rbp
0x0000669b      c3             ret
0x0000669c      0f1f4000       nop dword [rax]
0x000066a0      0fb65001       movzx edx, byte [rax + 1]
0x000066a4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000066a7      80fa42         cmp dl, 0x42
0x000066aa      75d4           jne 0x6680
0x000066ac      80780231       cmp byte [rax + 2], 0x31
0x000066b0      75ce           jne 0x6680
0x000066b2      80780338       cmp byte [rax + 3], 0x38
0x000066b6      75c8           jne 0x6680
0x000066b8      80780430       cmp byte [rax + 4], 0x30
0x000066bc      75c2           jne 0x6680
0x000066be      80780533       cmp byte [rax + 5], 0x33
0x000066c2      75bc           jne 0x6680
0x000066c4      80780630       cmp byte [rax + 6], 0x30
0x000066c8      75b6           jne 0x6680
0x000066ca      80780700       cmp byte [rax + 7], 0
0x000066ce      75b0           jne 0x6680
0x000066d0      807d0060       cmp byte [rbp], 0x60
0x000066d4      488d05313700.  lea rax, [0x00009e0c]
0x000066db      488d152e3700.  lea rdx, [0x00009e10]
0x000066e2      480f45c2       cmovne rax, rdx
0x000066e6      4883c408       add rsp, 8
0x000066ea      5b             pop rbx
0x000066eb      5d             pop rbp
0x000066ec      c3             ret
0x000066ed      0f1f00         nop dword [rax]
0x000066f0      0fb65001       movzx edx, byte [rax + 1]
0x000066f4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000066f7      80fa54         cmp dl, 0x54
0x000066fa      7584           jne 0x6680
0x000066fc      0fb65002       movzx edx, byte [rax + 2]
0x00006700      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00006703      80fa46         cmp dl, 0x46
0x00006706      0f8574ffffff   jne 0x6680
0x0000670c      8078032d       cmp byte [rax + 3], 0x2d
0x00006710      0f856affffff   jne 0x6680
0x00006716      80780438       cmp byte [rax + 4], 0x38
0x0000671a      0f8560ffffff   jne 0x6680
0x00006720      80780500       cmp byte [rax + 5], 0
0x00006724      0f8556ffffff   jne 0x6680
0x0000672a      807d0060       cmp byte [rbp], 0x60
0x0000672e      488d05cf3600.  lea rax, [0x00009e04]                   ; "\u2018"
0x00006735      488d15cc3600.  lea rdx, [0x00009e08]                   ; "\u2019"
0x0000673c      480f45c2       cmovne rax, rdx
0x00006740      4883c408       add rsp, 8
0x00006744      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00006745      5d             pop rbp
0x00006746      c3             ret
0x00006747      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00006750      4157           push r15
0x00006752      4156           push r14
0x00006754      4589c7         mov r15d, r8d
0x00006757      4155           push r13
0x00006759      4154           push r12
0x0000675b      4989fe         mov r14, rdi
0x0000675e      55             push rbp
0x0000675f      53             push rbx
0x00006760      4489cb         mov ebx, r9d
0x00006763      4989f5         mov r13, rsi
0x00006766      4889cd         mov rbp, rcx
0x00006769      83e302         and ebx, 2
0x0000676c      4881ecb80000.  sub rsp, 0xb8
0x00006773      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x0000677b      4889542410     mov qword [rsp + 0x10], rdx
0x00006780      4489442408     mov dword [rsp + 8], r8d
0x00006785      44894c2478     mov dword [rsp + 0x78], r9d
0x0000678a      4889442420     mov qword [rsp + 0x20], rax
0x0000678f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00006797      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000679c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x000067a4      4889442460     mov qword [rsp + 0x60], rax
0x000067a9      64488b042528.  mov rax, qword fs:[0x28]
0x000067b2      48898424a800.  mov qword [rsp + 0xa8], rax
0x000067ba      31c0           xor eax, eax
0x000067bc      e8afaeffff     call sym.imp.__ctype_get_mb_cur_max
0x000067c1      4183ff0a       cmp r15d, 0xa
0x000067c5      4889442458     mov qword [rsp + 0x58], rax
0x000067ca      0f87af110000   ja 0x797f
0x000067d0      488d0da93600.  lea rcx, [0x00009e80]
0x000067d7      4489fa         mov edx, r15d
0x000067da      48630491       movsxd rax, dword [rcx + rdx*4]
0x000067de      4801c8         add rax, rcx
0x000067e1      ffe0           jmp rax
0x000067e3      c644240e01     mov byte [rsp + 0xe], 1
0x000067e8      c644247c00     mov byte [rsp + 0x7c], 0
0x000067ed      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x000067f0      48c744245000.  mov qword [rsp + 0x50], 0
0x000067f9      c644240f01     mov byte [rsp + 0xf], 1
0x000067fe      c644240d00     mov byte [rsp + 0xd], 0
0x00006803      488d050b3600.  lea rax, [0x00009e15]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000680a      48c744241801.  mov qword [rsp + 0x18], 1
0x00006813      4531ff         xor r15d, r15d
0x00006816      c74424080200.  mov dword [rsp + 8], 2
0x0000681e      4889442448     mov qword [rsp + 0x48], rax
0x00006823      4531db         xor r11d, r11d
0x00006826      4889e8         mov rax, rbp
0x00006829      4589e0         mov r8d, r12d
0x0000682c      4c89dd         mov rbp, r11
0x0000682f      4989c3         mov r11, rax
0x00006832      660f1f440000   nop word [rax + rax]
0x00006838      4939eb         cmp r11, rbp
0x0000683b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x0000683f      4983fbff       cmp r11, 0xffffffffffffffff
0x00006843      750d           jne 0x6852
0x00006845      488b442410     mov rax, qword [rsp + 0x10]
0x0000684a      803c2800       cmp byte [rax + rbp], 0
0x0000684e      410f95c4       setne r12b
0x00006852      4584e4         test r12b, r12b
0x00006855      0f8455060000   je 0x6eb0
0x0000685b      837c240802     cmp dword [rsp + 8], 2
0x00006860      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00006865      4c8d0c2f       lea r9, [rdi + rbp]
0x00006869      0f95c0         setne al
0x0000686c      2244240d       and al, byte [rsp + 0xd]
0x00006870      4189c2         mov r10d, eax
0x00006873      0f84a7000000   je 0x6920
0x00006879      488b442418     mov rax, qword [rsp + 0x18]
0x0000687e      4885c0         test rax, rax
0x00006881      0f8429040000   je 0x6cb0
0x00006887      4983fbff       cmp r11, 0xffffffffffffffff
0x0000688b      488d5c0500     lea rbx, [rbp + rax]
0x00006890      752e           jne 0x68c0
0x00006892      4883f801       cmp rax, 1
0x00006896      7628           jbe 0x68c0
0x00006898      4488442438     mov byte [rsp + 0x38], r8b
0x0000689d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x000068a2      4c894c2428     mov qword [rsp + 0x28], r9
0x000068a7      e8d4adffff     call sym.imp.strlen
0x000068ac      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x000068b2      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x000068b8      4989c3         mov r11, rax
0x000068bb      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x000068c0      4c39db         cmp rbx, r11
0x000068c3      4488542428     mov byte [rsp + 0x28], r10b
0x000068c8      0f87b2050000   ja 0x6e80
0x000068ce      488b542418     mov rdx, qword [rsp + 0x18]
0x000068d3      488b742448     mov rsi, qword [rsp + 0x48]
0x000068d8      4c89cf         mov rdi, r9
0x000068db      4c895c2440     mov qword [rsp + 0x40], r11
0x000068e0      4488442438     mov byte [rsp + 0x38], r8b
0x000068e5      4c894c2430     mov qword [rsp + 0x30], r9
0x000068ea      e841aeffff     call sym.imp.memcmp
0x000068ef      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x000068f1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000068f6      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x000068fc      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00006901      0f8579050000   jne 0x6e80
0x00006907      807c240f00     cmp byte [rsp + 0xf], 0
0x0000690c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00006912      0f857d0f0000   jne 0x7895
0x00006918      0f1f84000000.  nop dword [rax + rax]
0x00006920      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00006924      80fb7e         cmp bl, 0x7e
0x00006927      0f871b030000   ja 0x6c48
0x0000692d      488d0d783500.  lea rcx, [0x00009eac]
0x00006934      0fb6d3         movzx edx, bl
0x00006937      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000693b      4801c8         add rax, rcx
0x0000693e      ffe0           jmp rax
0x00006940      4531d2         xor r10d, r10d
0x00006943      4983fb01       cmp r11, 1
0x00006947      0f95c0         setne al
0x0000694a      4983fbff       cmp r11, 0xffffffffffffffff
0x0000694e      750c           jne 0x695c
0x00006950      488b442410     mov rax, qword [rsp + 0x10]
0x00006955      80780100       cmp byte [rax + 1], 0
0x00006959      0f95c0         setne al
0x0000695c      837c240802     cmp dword [rsp + 8], 2
0x00006961      0f94c2         sete dl
0x00006964      84c0           test al, al
0x00006966      0f844c020000   je 0x6bb8
0x0000696c      4531e4         xor r12d, r12d
0x0000696f      31c0           xor eax, eax
0x00006971      0f1f80000000.  nop dword [rax]
0x00006978      807c240d01     cmp byte [rsp + 0xd], 1
0x0000697d      0f850f010000   jne 0x6a92
0x00006983      84d2           test dl, dl
0x00006985      0f8507010000   jne 0x6a92
0x0000698b      488b742420     mov rsi, qword [rsp + 0x20]
0x00006990      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00006993      7414           je 0x69a9
0x00006995      89da           mov edx, ebx
0x00006997      c0ea05         shr dl, 5
0x0000699a      0fb6d2         movzx edx, dl
0x0000699d      8b1496         mov edx, dword [rsi + rdx*4]
0x000069a0      0fa3da         bt edx, ebx
0x000069a3      0f824a010000   jb 0x6af3
0x000069a9      4584d2         test r10b, r10b
0x000069ac      0f8541010000   jne 0x6af3
0x000069b2      83f001         xor eax, 1
0x000069b5      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x000069b9      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x000069bc      84c0           test al, al
0x000069be      7420           je 0x69e0                               ; ../coreutils-8.31/lib/quotearg.c:338
0x000069c0      4d39fd         cmp r13, r15
0x000069c3      7605           jbe 0x69ca
0x000069c5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000069ca      498d4701       lea rax, [r15 + 1]
0x000069ce      4939c5         cmp r13, rax
0x000069d1      7606           jbe 0x69d9
0x000069d3      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000069d9      4983c702       add r15, 2
0x000069dd      4531c0         xor r8d, r8d
0x000069e0      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x000069e3      7304           jae 0x69e9                              ; ../coreutils-8.31/lib/quotearg.c:68
0x000069e5      43881c3e       mov byte [r14 + r15], bl
0x000069e9      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x000069ee      4983c701       add r15, 1
0x000069f2      b800000000     mov eax, 0
0x000069f7      4584e4         test r12b, r12b
0x000069fa      0f44f8         cmove edi, eax
0x000069fd      40887c240e     mov byte [rsp + 0xe], dil
0x00006a02      e931feffff     jmp 0x6838
0x00006a07      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00006a10      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00006a13      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00006a17      83f802         cmp eax, 2
0x00006a1a      0f84b8050000   je 0x6fd8
0x00006a20      83f805         cmp eax, 5
0x00006a23      0f846f050000   je 0x6f98
0x00006a29      83f802         cmp eax, 2
0x00006a2c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00006a31      0f94c2         sete dl
0x00006a34      4531e4         xor r12d, r12d
0x00006a37      31c0           xor eax, eax
0x00006a39      e93affffff     jmp 0x6978
0x00006a3e      6690           nop
0x00006a40      4531d2         xor r10d, r10d
0x00006a43      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00006a48      0f8402050000   je 0x6f50
0x00006a4e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00006a53      31d2           xor edx, edx
0x00006a55      31c0           xor eax, eax
0x00006a57      bb27000000     mov ebx, 0x27                           ; '''
0x00006a5c      e917ffffff     jmp 0x6978
0x00006a61      0f1f80000000.  nop dword [rax]
0x00006a68      ba09000000     mov edx, 9
0x00006a6d      bb74000000     mov ebx, 0x74                           ; 't'
0x00006a72      837c240802     cmp dword [rsp + 8], 2
0x00006a77      0f94c0         sete al
0x00006a7a      2244240f       and al, byte [rsp + 0xf]
0x00006a7e      0f854a010000   jne 0x6bce
0x00006a84      807c240d00     cmp byte [rsp + 0xd], 0
0x00006a89      7565           jne 0x6af0
0x00006a8b      89d3           mov ebx, edx
0x00006a8d      4531e4         xor r12d, r12d
0x00006a90      31c0           xor eax, eax
0x00006a92      807c240f00     cmp byte [rsp + 0xf], 0
0x00006a97      0f85eefeffff   jne 0x698b
0x00006a9d      e907ffffff     jmp 0x69a9                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00006aa2      660f1f440000   nop word [rax + rax]
0x00006aa8      ba08000000     mov edx, 8
0x00006aad      bb62000000     mov ebx, 0x62                           ; 'b'
0x00006ab2      ebd0           jmp 0x6a84
0x00006ab4      0f1f4000       nop dword [rax]
0x00006ab8      837c240802     cmp dword [rsp + 8], 2
0x00006abd      0f84cd030000   je 0x6e90
0x00006ac3      807c240d00     cmp byte [rsp + 0xd], 0
0x00006ac8      0f8412020000   je 0x6ce0
0x00006ace      807c240f00     cmp byte [rsp + 0xf], 0
0x00006ad3      0f8407020000   je 0x6ce0
0x00006ad9      48837c241800   cmp qword [rsp + 0x18], 0
0x00006adf      0f85b6030000   jne 0x6e9b
0x00006ae5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00006aea      660f1f440000   nop word [rax + rax]
0x00006af0      4531e4         xor r12d, r12d
0x00006af3      837c240802     cmp dword [rsp + 8], 2
0x00006af8      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x00006afb      807c240f00     cmp byte [rsp + 0xf], 0
0x00006b00      89d0           mov eax, edx
0x00006b02      0f8550080000   jne 0x7358
0x00006b08      4489c0         mov eax, r8d
0x00006b0b      83f001         xor eax, 1
0x00006b0e      20d0           and al, dl
0x00006b10      742f           je 0x6b41
0x00006b12      4d39fd         cmp r13, r15
0x00006b15      7605           jbe 0x6b1c
0x00006b17      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00006b1c      498d5701       lea rdx, [r15 + 1]
0x00006b20      4939d5         cmp r13, rdx
0x00006b23      7606           jbe 0x6b2b
0x00006b25      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00006b2b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x00006b2f      4939d5         cmp r13, rdx
0x00006b32      7606           jbe 0x6b3a
0x00006b34      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00006b3a      4983c703       add r15, 3
0x00006b3e      4189c0         mov r8d, eax
0x00006b41      4d39fd         cmp r13, r15
0x00006b44      7605           jbe 0x6b4b
0x00006b46      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00006b4b      4983c701       add r15, 1
0x00006b4f      4883c501       add rbp, 1
0x00006b53      e988feffff     jmp 0x69e0
0x00006b58      0f1f84000000.  nop dword [rax + rax]
0x00006b60      807c240d00     cmp byte [rsp + 0xd], 0
0x00006b65      0f85c8010000   jne 0x6d33
0x00006b6b      31d2           xor edx, edx
0x00006b6d      f644247801     test byte [rsp + 0x78], 1
0x00006b72      0f8413ffffff   je 0x6a8b
0x00006b78      4883c501       add rbp, 1
0x00006b7c      e9b7fcffff     jmp 0x6838
0x00006b81      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00006b88      837c240802     cmp dword [rsp + 8], 2
0x00006b8d      0f94c2         sete dl
0x00006b90      31c0           xor eax, eax
0x00006b92      e9e1fdffff     jmp 0x6978
0x00006b97      660f1f840000.  nop word [rax + rax]
0x00006ba0      ba07000000     mov edx, 7
0x00006ba5      bb61000000     mov ebx, 0x61                           ; 'a'
0x00006baa      e9d5feffff     jmp 0x6a84
0x00006baf      90             nop
0x00006bb0      837c240802     cmp dword [rsp + 8], 2
0x00006bb5      0f94c2         sete dl
0x00006bb8      4885ed         test rbp, rbp
0x00006bbb      0f85abfdffff   jne 0x696c
0x00006bc1      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00006bc6      20d0           and al, dl
0x00006bc8      0f84aafdffff   je 0x6978
0x00006bce      4c89dd         mov rbp, r11
0x00006bd1      c74424080200.  mov dword [rsp + 8], 2
0x00006bd9      e9fb060000     jmp 0x72d9
0x00006bde      6690           nop
0x00006be0      837c240802     cmp dword [rsp + 8], 2
0x00006be5      0f94c2         sete dl
0x00006be8      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x00006beb      ebd4           jmp 0x6bc1
0x00006bed      0f1f00         nop dword [rax]
0x00006bf0      837c240802     cmp dword [rsp + 8], 2
0x00006bf5      bb20000000     mov ebx, 0x20                           ; "@"
0x00006bfa      0f94c2         sete dl
0x00006bfd      ebc2           jmp 0x6bc1
0x00006bff      90             nop
0x00006c00      ba0d000000     mov edx, 0xd
0x00006c05      bb72000000     mov ebx, 0x72                           ; 'r'
0x00006c0a      e963feffff     jmp 0x6a72
0x00006c0f      90             nop
0x00006c10      ba0c000000     mov edx, 0xc
0x00006c15      bb66000000     mov ebx, 0x66                           ; 'f'
0x00006c1a      e965feffff     jmp 0x6a84
0x00006c1f      90             nop
0x00006c20      ba0b000000     mov edx, 0xb
0x00006c25      bb76000000     mov ebx, 0x76                           ; 'v'
0x00006c2a      e955feffff     jmp 0x6a84
0x00006c2f      90             nop
0x00006c30      ba0a000000     mov edx, 0xa
0x00006c35      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x00006c3a      e933feffff     jmp 0x6a72
0x00006c3f      90             nop
0x00006c40      4531d2         xor r10d, r10d
0x00006c43      0f1f440000     nop dword [rax + rax]
0x00006c48      48837c245801   cmp qword [rsp + 0x58], 1
0x00006c4e      0f85a4030000   jne 0x6ff8
0x00006c54      4c895c2438     mov qword [rsp + 0x38], r11
0x00006c59      4488442430     mov byte [rsp + 0x30], r8b
0x00006c5e      4488542428     mov byte [rsp + 0x28], r10b
0x00006c63      e878acffff     call sym.imp.__ctype_b_loc
0x00006c68      488b08         mov rcx, qword [rax]
0x00006c6b      0fb6d3         movzx edx, bl
0x00006c6e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00006c74      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x00006c7a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00006c7f      bf01000000     mov edi, 1
0x00006c84      0fb70451       movzx eax, word [rcx + rdx*2]
0x00006c88      66250040       and ax, 0x4000
0x00006c8c      410f95c4       setne r12b
0x00006c90      0f94c0         sete al
0x00006c93      2244240d       and al, byte [rsp + 0xd]
0x00006c97      84c0           test al, al
0x00006c99      0f8592090000   jne 0x7631
0x00006c9f      837c240802     cmp dword [rsp + 8], 2
0x00006ca4      0f94c2         sete dl
0x00006ca7      e9ccfcffff     jmp 0x6978
0x00006cac      0f1f4000       nop dword [rax]
0x00006cb0      410fb619       movzx ebx, byte [r9]
0x00006cb4      80fb7e         cmp bl, 0x7e
0x00006cb7      7787           ja 0x6c40
0x00006cb9      488d0de83300.  lea rcx, [0x0000a0a8]
0x00006cc0      0fb6d3         movzx edx, bl
0x00006cc3      48630491       movsxd rax, dword [rcx + rdx*4]
0x00006cc7      4801c8         add rax, rcx
0x00006cca      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x00006ccc      0f1f4000       nop dword [rax]
0x00006cd0      4531d2         xor r10d, r10d
0x00006cd3      807c240d00     cmp byte [rsp + 0xd], 0
0x00006cd8      0f85f0fdffff   jne 0x6ace
0x00006cde      6690           nop
0x00006ce0      ba5c000000     mov edx, 0x5c                           ; '\'
0x00006ce5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00006cea      e995fdffff     jmp 0x6a84
0x00006cef      90             nop
0x00006cf0      ba0c000000     mov edx, 0xc
0x00006cf5      4531d2         xor r10d, r10d
0x00006cf8      bb66000000     mov ebx, 0x66                           ; 'f'
0x00006cfd      e982fdffff     jmp 0x6a84
0x00006d02      660f1f440000   nop word [rax + rax]
0x00006d08      ba0a000000     mov edx, 0xa
0x00006d0d      4531d2         xor r10d, r10d
0x00006d10      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00006d15      e958fdffff     jmp 0x6a72
0x00006d1a      660f1f440000   nop word [rax + rax]
0x00006d20      bb61000000     mov ebx, 0x61                           ; 'a'
0x00006d25      e9c6fdffff     jmp 0x6af0
0x00006d2a      660f1f440000   nop word [rax + rax]
0x00006d30      4531d2         xor r10d, r10d
0x00006d33      837c240802     cmp dword [rsp + 8], 2
0x00006d38      0f94c2         sete dl
0x00006d3b      807c240f00     cmp byte [rsp + 0xf], 0
0x00006d40      0f85940b0000   jne 0x78da
0x00006d46      4489c0         mov eax, r8d
0x00006d49      4c89f9         mov rcx, r15
0x00006d4c      83f001         xor eax, 1
0x00006d4f      20d0           and al, dl
0x00006d51      742d           je 0x6d80
0x00006d53      4d39fd         cmp r13, r15
0x00006d56      7605           jbe 0x6d5d
0x00006d58      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00006d5d      498d4f01       lea rcx, [r15 + 1]
0x00006d61      4939cd         cmp r13, rcx
0x00006d64      7606           jbe 0x6d6c
0x00006d66      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00006d6c      498d4f02       lea rcx, [r15 + 2]
0x00006d70      4939cd         cmp r13, rcx
0x00006d73      0f8730060000   ja 0x73a9
0x00006d79      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x00006d7d      4189c0         mov r8d, eax
0x00006d80      4939cd         cmp r13, rcx
0x00006d83      7605           jbe 0x6d8a
0x00006d85      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00006d8a      837c240802     cmp dword [rsp + 8], 2
0x00006d8f      4c8d7901       lea r15, [rcx + 1]
0x00006d93      0f8400060000   je 0x7399
0x00006d99      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00006d9d      4c39d8         cmp rax, r11
0x00006da0      7319           jae 0x6dbb                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00006da2      488b442410     mov rax, qword [rsp + 0x10]
0x00006da7      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x00006dac      88442428       mov byte [rsp + 0x28], al
0x00006db0      83e830         sub eax, 0x30
0x00006db3      3c09           cmp al, 9
0x00006db5      0f862e080000   jbe 0x75e9
0x00006dbb      4489e0         mov eax, r12d
0x00006dbe      bb30000000     mov ebx, 0x30                           ; '0'
0x00006dc3      4531e4         xor r12d, r12d
0x00006dc6      e9adfbffff     jmp 0x6978                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x00006dcb      0f1f440000     nop dword [rax + rax]
0x00006dd0      837c240802     cmp dword [rsp + 8], 2
0x00006dd5      4589d4         mov r12d, r10d
0x00006dd8      0f94c2         sete dl
0x00006ddb      4531d2         xor r10d, r10d
0x00006dde      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00006de0      e993fbffff     jmp 0x6978                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00006de5      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00006de8      837c240802     cmp dword [rsp + 8], 2
0x00006ded      0f94c2         sete dl
0x00006df0      4531d2         xor r10d, r10d
0x00006df3      e9c0fdffff     jmp 0x6bb8
0x00006df8      0f1f84000000.  nop dword [rax + rax]
0x00006e00      837c240802     cmp dword [rsp + 8], 2
0x00006e05      0f94c2         sete dl
0x00006e08      4531d2         xor r10d, r10d
0x00006e0b      4531e4         xor r12d, r12d
0x00006e0e      e9aefdffff     jmp 0x6bc1
0x00006e13      0f1f440000     nop dword [rax + rax]
0x00006e18      837c240802     cmp dword [rsp + 8], 2
0x00006e1d      4589d4         mov r12d, r10d
0x00006e20      bb20000000     mov ebx, 0x20                           ; "@"
0x00006e25      0f94c2         sete dl
0x00006e28      4531d2         xor r10d, r10d
0x00006e2b      e991fdffff     jmp 0x6bc1
0x00006e30      ba0d000000     mov edx, 0xd
0x00006e35      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00006e38      bb72000000     mov ebx, 0x72                           ; 'r'
0x00006e3d      e930fcffff     jmp 0x6a72
0x00006e42      660f1f440000   nop word [rax + rax]
0x00006e48      bb76000000     mov ebx, 0x76                           ; 'v'
0x00006e4d      e99efcffff     jmp 0x6af0
0x00006e52      660f1f440000   nop word [rax + rax]
0x00006e58      ba09000000     mov edx, 9
0x00006e5d      4531d2         xor r10d, r10d
0x00006e60      bb74000000     mov ebx, 0x74                           ; 't'
0x00006e65      e908fcffff     jmp 0x6a72
0x00006e6a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00006e70      bb62000000     mov ebx, 0x62                           ; 'b'
0x00006e75      e976fcffff     jmp 0x6af0
0x00006e7a      660f1f440000   nop word [rax + rax]
0x00006e80      4531d2         xor r10d, r10d
0x00006e83      e998faffff     jmp 0x6920
0x00006e88      0f1f84000000.  nop dword [rax + rax]
0x00006e90      807c240f00     cmp byte [rsp + 0xf], 0
0x00006e95      0f8565090000   jne 0x7800
0x00006e9b      4883c501       add rbp, 1
0x00006e9f      4489c0         mov eax, r8d
0x00006ea2      4531e4         xor r12d, r12d
0x00006ea5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00006eaa      e90dfbffff     jmp 0x69bc
0x00006eaf      90             nop
0x00006eb0      837c240802     cmp dword [rsp + 8], 2
0x00006eb5      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00006eba      4589c4         mov r12d, r8d
0x00006ebd      4c89dd         mov rbp, r11
0x00006ec0      0f94c2         sete dl
0x00006ec3      89d8           mov eax, ebx
0x00006ec5      4d85ff         test r15, r15
0x00006ec8      0f94c1         sete cl
0x00006ecb      21d0           and eax, edx
0x00006ecd      20c8           and al, cl
0x00006ecf      0f85610a0000   jne 0x7936                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00006ed5      89d8           mov eax, ebx
0x00006ed7      83f001         xor eax, 1
0x00006eda      20c2           and dl, al
0x00006edc      0f846a090000   je 0x784c
0x00006ee2      807c247c00     cmp byte [rsp + 0x7c], 0
0x00006ee7      0f845d090000   je 0x784a
0x00006eed      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00006ef2      0f85f5090000   jne 0x78ed
0x00006ef8      4d85ed         test r13, r13
0x00006efb      0f94c0         sete al
0x00006efe      48837c245000   cmp qword [rsp + 0x50], 0
0x00006f04      0f95c2         setne dl
0x00006f07      20d0           and al, dl
0x00006f09      0f841d0a0000   je 0x792c
0x00006f0f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00006f14      488d1dfa2e00.  lea rbx, [0x00009e15]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00006f1b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x00006f1f      c74424080200.  mov dword [rsp + 8], 2
0x00006f27      41bf01000000   mov r15d, 1
0x00006f2d      48c744241801.  mov qword [rsp + 0x18], 1
0x00006f36      c644240f00     mov byte [rsp + 0xf], 0
0x00006f3b      48895c2448     mov qword [rsp + 0x48], rbx
0x00006f40      8844247c       mov byte [rsp + 0x7c], al
0x00006f44      e9daf8ffff     jmp 0x6823
0x00006f49      0f1f80000000.  nop dword [rax]
0x00006f50      807c240f00     cmp byte [rsp + 0xf], 0
0x00006f55      0f85a5080000   jne 0x7800
0x00006f5b      4d85ed         test r13, r13
0x00006f5e      0f84fc030000   je 0x7360                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00006f64      31d2           xor edx, edx
0x00006f66      48837c245000   cmp qword [rsp + 0x50], 0
0x00006f6c      0f85ee030000   jne 0x7360                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00006f72      4c896c2450     mov qword [rsp + 0x50], r13
0x00006f77      4983c703       add r15, 3
0x00006f7b      31c0           xor eax, eax
0x00006f7d      448864247c     mov byte [rsp + 0x7c], r12b
0x00006f82      4531c0         xor r8d, r8d
0x00006f85      4989d5         mov r13, rdx
0x00006f88      bb27000000     mov ebx, 0x27                           ; '''
0x00006f8d      e917faffff     jmp 0x69a9
0x00006f92      660f1f440000   nop word [rax + rax]
0x00006f98      f644247804     test byte [rsp + 0x78], 4
0x00006f9d      7421           je 0x6fc0
0x00006f9f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00006fa3      4c39d9         cmp rcx, r11
0x00006fa6      7318           jae 0x6fc0
0x00006fa8      488b442410     mov rax, qword [rsp + 0x10]
0x00006fad      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00006fb2      0f848a070000   je 0x7742
0x00006fb8      0f1f84000000.  nop dword [rax + rax]
0x00006fc0      31d2           xor edx, edx
0x00006fc2      4531e4         xor r12d, r12d
0x00006fc5      31c0           xor eax, eax
0x00006fc7      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00006fcc      e9a7f9ffff     jmp 0x6978
0x00006fd1      0f1f80000000.  nop dword [rax]
0x00006fd8      807c240f00     cmp byte [rsp + 0xf], 0
0x00006fdd      0f851d080000   jne 0x7800
0x00006fe3      4531e4         xor r12d, r12d
0x00006fe6      31c0           xor eax, eax
0x00006fe8      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00006fed      e9b7f9ffff     jmp 0x69a9                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00006ff2      660f1f440000   nop word [rax + rax]
0x00006ff8      488d8424a000.  lea rax, [rsp + 0xa0]
0x00007000      4983fbff       cmp r11, 0xffffffffffffffff
0x00007004      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00007010      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00007015      752d           jne 0x7044
0x00007017      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000701c      4488442440     mov byte [rsp + 0x40], r8b
0x00007021      4488542438     mov byte [rsp + 0x38], r10b
0x00007026      4c894c2430     mov qword [rsp + 0x30], r9
0x0000702b      e850a6ffff     call sym.imp.strlen
0x00007030      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00007036      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x0000703c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x0000703f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00007044      488d84249c00.  lea rax, [rsp + 0x9c]
0x0000704c      31c9           xor ecx, ecx
0x0000704e      885c247e       mov byte [rsp + 0x7e], bl
0x00007052      448844247d     mov byte [rsp + 0x7d], r8b
0x00007057      4889cb         mov rbx, rcx
0x0000705a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00007062      4889442438     mov qword [rsp + 0x38], rax
0x00007067      448854247f     mov byte [rsp + 0x7f], r10b
0x0000706c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00007074      4c89742440     mov qword [rsp + 0x40], r14
0x00007079      4c896c2470     mov qword [rsp + 0x70], r13
0x0000707e      4c895c2430     mov qword [rsp + 0x30], r11
0x00007083      488b442410     mov rax, qword [rsp + 0x10]
0x00007088      4c8d741d00     lea r14, [rbp + rbx]
0x0000708d      488b542430     mov rdx, qword [rsp + 0x30]
0x00007092      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00007097      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000709c      4e8d2c30       lea r13, [rax + r14]
0x000070a0      4c29f2         sub rdx, r14
0x000070a3      4c89ee         mov rsi, r13
0x000070a6      e8a51e0000     call sym.rpl_mbrtowc
0x000070ab      4885c0         test rax, rax
0x000070ae      4989c7         mov r15, rax
0x000070b1      744e           je 0x7101
0x000070b3      4883f8ff       cmp rax, 0xffffffffffffffff
0x000070b7      0f8418060000   je 0x76d5
0x000070bd      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000070c1      0f849a050000   je 0x7661
0x000070c7      837c240802     cmp dword [rsp + 8], 2
0x000070cc      0f94c0         sete al
0x000070cf      2244240f       and al, byte [rsp + 0xf]
0x000070d3      0f8597010000   jne 0x7270
0x000070d9      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x000070e0      e8dba7ffff     call sym.imp.iswprint
0x000070e5      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000070ea      85c0           test eax, eax
0x000070ec      b800000000     mov eax, 0
0x000070f1      440f44e0       cmove r12d, eax
0x000070f5      4c01fb         add rbx, r15
0x000070f8      e8b3a7ffff     call sym.imp.mbsinit
0x000070fd      85c0           test eax, eax
0x000070ff      7482           je 0x7083
0x00007101      4489e2         mov edx, r12d
0x00007104      4889df         mov rdi, rbx
0x00007107      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000710d      83f201         xor edx, 1
0x00007110      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00007115      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000711b      2254240d       and dl, byte [rsp + 0xd]
0x0000711f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00007127      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000712c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00007131      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00007136      4883ff01       cmp rdi, 1
0x0000713a      0f86fb050000   jbe 0x773b
0x00007140      4889f9         mov rcx, rdi
0x00007143      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00007145      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x0000714b      4801e9         add rcx, rbp
0x0000714e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00007153      e9b6000000     jmp 0x720e
0x00007158      0f1f84000000.  nop dword [rax + rax]
0x00007160      837c240802     cmp dword [rsp + 8], 2
0x00007165      0f94c0         sete al
0x00007168      4584c9         test r9b, r9b
0x0000716b      0f85af040000   jne 0x7620
0x00007171      4489c6         mov esi, r8d
0x00007174      83f601         xor esi, 1
0x00007177      4020f0         and al, sil
0x0000717a      742f           je 0x71ab                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x0000717c      4d39fd         cmp r13, r15
0x0000717f      7605           jbe 0x7186
0x00007181      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00007186      498d7701       lea rsi, [r15 + 1]
0x0000718a      4939f5         cmp r13, rsi
0x0000718d      7606           jbe 0x7195                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x0000718f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00007195      498d7702       lea rsi, [r15 + 2]
0x00007199      4939f5         cmp r13, rsi
0x0000719c      7606           jbe 0x71a4
0x0000719e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000071a4      4983c703       add r15, 3
0x000071a8      4189c0         mov r8d, eax
0x000071ab      4d39fd         cmp r13, r15
0x000071ae      7605           jbe 0x71b5
0x000071b0      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000071b5      498d4701       lea rax, [r15 + 1]
0x000071b9      4939c5         cmp r13, rax
0x000071bc      760d           jbe 0x71cb
0x000071be      89d8           mov eax, ebx
0x000071c0      c0e806         shr al, 6
0x000071c3      83c030         add eax, 0x30
0x000071c6      4388443e01     mov byte [r14 + r15 + 1], al
0x000071cb      498d4702       lea rax, [r15 + 2]
0x000071cf      4939c5         cmp r13, rax
0x000071d2      7610           jbe 0x71e4
0x000071d4      89d8           mov eax, ebx
0x000071d6      c0e803         shr al, 3
0x000071d9      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x000071dc      83c030         add eax, 0x30
0x000071df      4388443e02     mov byte [r14 + r15 + 2], al
0x000071e4      83e307         and ebx, 7
0x000071e7      4883c501       add rbp, 1
0x000071eb      4983c703       add r15, 3
0x000071ef      83c330         add ebx, 0x30
0x000071f2      4839cd         cmp rbp, rcx
0x000071f5      0f83e5f7ffff   jae 0x69e0
0x000071fb      89d6           mov esi, edx
0x000071fd      4d39fd         cmp r13, r15
0x00007200      7604           jbe 0x7206
0x00007202      43881c3e       mov byte [r14 + r15], bl
0x00007206      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000720a      4983c701       add r15, 1
0x0000720e      84d2           test dl, dl
0x00007210      0f854affffff   jne 0x7160
0x00007216      89f0           mov eax, esi
0x00007218      83f001         xor eax, 1
0x0000721b      4421c0         and eax, r8d
0x0000721e      4584d2         test r10b, r10b
0x00007221      740e           je 0x7231
0x00007223      4d39fd         cmp r13, r15
0x00007226      7605           jbe 0x722d
0x00007228      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000722d      4983c701       add r15, 1
0x00007231      4883c501       add rbp, 1
0x00007235      4839cd         cmp rbp, rcx
0x00007238      0f837ef7ffff   jae 0x69bc
0x0000723e      84c0           test al, al
0x00007240      0f84f8030000   je 0x763e
0x00007246      4d39fd         cmp r13, r15
0x00007249      7605           jbe 0x7250
0x0000724b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00007250      498d4701       lea rax, [r15 + 1]
0x00007254      4939c5         cmp r13, rax
0x00007257      7606           jbe 0x725f
0x00007259      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000725f      4983c702       add r15, 2
0x00007263      4531d2         xor r10d, r10d
0x00007266      4531c0         xor r8d, r8d
0x00007269      eb92           jmp 0x71fd
0x0000726b      0f1f440000     nop dword [rax + rax]
0x00007270      4983ff01       cmp r15, 1
0x00007274      0f845ffeffff   je 0x70d9
0x0000727a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000727f      4a8d0c3f       lea rcx, [rdi + r15]
0x00007283      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00007288      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000728c      eb0f           jmp 0x729d
0x0000728e      6690           nop
0x00007290      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00007294      4939d0         cmp r8, rdx
0x00007297      0f843cfeffff   je 0x70d9
0x0000729d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x000072a0      83e95b         sub ecx, 0x5b
0x000072a3      80f921         cmp cl, 0x21
0x000072a6      77e8           ja 0x7290                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x000072a8      be01000000     mov esi, 1
0x000072ad      48d3e6         shl rsi, cl
0x000072b0      4889f1         mov rcx, rsi
0x000072b3      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x000072bd      4885f1         test rcx, rsi
0x000072c0      74ce           je 0x7290
0x000072c2      4c8b742440     mov r14, qword [rsp + 0x40]
0x000072c7      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000072cc      488b6c2430     mov rbp, qword [rsp + 0x30]
0x000072d1      c74424080200.  mov dword [rsp + 8], 2
0x000072d9      807c240d00     cmp byte [rsp + 0xd], 0
0x000072de      7410           je 0x72f0
0x000072e0      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x000072e2      b804000000     mov eax, 4
0x000072e7      0f44442408     cmove eax, dword [rsp + 8]
0x000072ec      89442408       mov dword [rsp + 8], eax
0x000072f0      4883ec08       sub rsp, 8
0x000072f4      4889e9         mov rcx, rbp
0x000072f7      4c89ee         mov rsi, r13
0x000072fa      ff742468       push qword [rsp + 0x68]
0x000072fe      ff742478       push qword [rsp + 0x78]
0x00007302      4c89f7         mov rdi, r14
0x00007305      6a00           push 0
0x00007307      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x0000730f      448b442428     mov r8d, dword [rsp + 0x28]
0x00007314      488b542430     mov rdx, qword [rsp + 0x30]
0x00007319      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x0000731d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00007322      4883c420       add rsp, 0x20
0x00007326      4989c7         mov r15, rax
0x00007329      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00007331      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000733a      4c89f8         mov rax, r15
0x0000733d      0f8500060000   jne 0x7943
0x00007343      4881c4b80000.  add rsp, 0xb8
0x0000734a      5b             pop rbx
0x0000734b      5d             pop rbp
0x0000734c      415c           pop r12
0x0000734e      415d           pop r13
0x00007350      415e           pop r14
0x00007352      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00007354      c3             ret
0x00007355      0f1f00         nop dword [rax]
0x00007358      4c89dd         mov rbp, r11
0x0000735b      e979ffffff     jmp 0x72d9
0x00007360      4d39fd         cmp r13, r15
0x00007363      7605           jbe 0x736a
0x00007365      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000736a      498d4701       lea rax, [r15 + 1]
0x0000736e      4939c5         cmp r13, rax
0x00007371      7606           jbe 0x7379
0x00007373      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00007379      498d4702       lea rax, [r15 + 2]
0x0000737d      4939c5         cmp r13, rax
0x00007380      0f86ec050000   jbe 0x7972
0x00007386      4c89ea         mov rdx, r13
0x00007389      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000738f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00007394      e9d9fbffff     jmp 0x6f72
0x00007399      4489e0         mov eax, r12d
0x0000739c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x000073a1      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x000073a4      e900f6ffff     jmp 0x69a9                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x000073a9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000073af      e9c5f9ffff     jmp 0x6d79
0x000073b4      85db           test ebx, ebx
0x000073b6      0f8527f4ffff   jne 0x67e3
0x000073bc      c644240d01     mov byte [rsp + 0xd], 1
0x000073c1      4d85ed         test r13, r13
0x000073c4      0f8590050000   jne 0x795a
0x000073ca      488d05442a00.  lea rax, [0x00009e15]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000073d1      48c744245000.  mov qword [rsp + 0x50], 0
0x000073da      c644240e01     mov byte [rsp + 0xe], 1
0x000073df      c644247c00     mov byte [rsp + 0x7c], 0
0x000073e4      4531e4         xor r12d, r12d
0x000073e7      c644240f00     mov byte [rsp + 0xf], 0
0x000073ec      48c744241801.  mov qword [rsp + 0x18], 1
0x000073f5      4889442448     mov qword [rsp + 0x48], rax
0x000073fa      41bf01000000   mov r15d, 1
0x00007400      c74424080200.  mov dword [rsp + 8], 2
0x00007408      e916f4ffff     jmp 0x6823                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x0000740d      0f1f00         nop dword [rax]
0x00007410      85db           test ebx, ebx
0x00007412      0f85f5030000   jne 0x780d
0x00007418      4d85ed         test r13, r13
0x0000741b      0f8425020000   je 0x7646
0x00007421      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00007425      c644240e01     mov byte [rsp + 0xe], 1
0x0000742a      4531e4         xor r12d, r12d
0x0000742d      c644247c00     mov byte [rsp + 0x7c], 0
0x00007432      48c744245000.  mov qword [rsp + 0x50], 0
0x0000743b      488d05d12900.  lea rax, str.l______l                   ; 0x9e13 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00007442      c644240f00     mov byte [rsp + 0xf], 0
0x00007447      c644240d01     mov byte [rsp + 0xd], 1
0x0000744c      48c744241801.  mov qword [rsp + 0x18], 1
0x00007455      41bf01000000   mov r15d, 1
0x0000745b      4889442448     mov qword [rsp + 0x48], rax
0x00007460      e9bef3ffff     jmp 0x6823
0x00007465      488d05a72900.  lea rax, str.l______l                   ; 0x9e13 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000746c      c644240e01     mov byte [rsp + 0xe], 1
0x00007471      c644247c00     mov byte [rsp + 0x7c], 0
0x00007476      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00007479      48c744245000.  mov qword [rsp + 0x50], 0
0x00007482      c644240f01     mov byte [rsp + 0xf], 1
0x00007487      c644240d01     mov byte [rsp + 0xd], 1
0x0000748c      48c744241801.  mov qword [rsp + 0x18], 1
0x00007495      4531ff         xor r15d, r15d
0x00007498      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000749d      c74424080500.  mov dword [rsp + 8], 5
0x000074a5      e979f3ffff     jmp 0x6823
0x000074aa      c644240e01     mov byte [rsp + 0xe], 1
0x000074af      c644247c00     mov byte [rsp + 0x7c], 0
0x000074b4      4531e4         xor r12d, r12d
0x000074b7      48c744245000.  mov qword [rsp + 0x50], 0
0x000074c0      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x000074c5      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x000074c8      c644240d01     mov byte [rsp + 0xd], 1
0x000074cd      48c744241800.  mov qword [rsp + 0x18], 0
0x000074d6      48c744244800.  mov qword [rsp + 0x48], 0
0x000074df      e93ff3ffff     jmp 0x6823
0x000074e4      837c24080a     cmp dword [rsp + 8], 0xa
0x000074e9      7456           je 0x7541
0x000074eb      488d35252900.  lea rsi, [0x00009e17]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x000074f2      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x000074f4      ba05000000     mov edx, 5
0x000074f9      e862a1ffff     call sym.imp.dcgettext
0x000074fe      4889c1         mov rcx, rax
0x00007501      4889442468     mov qword [rsp + 0x68], rax
0x00007506      488d050a2900.  lea rax, [0x00009e17]                   ; "`"
0x0000750d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00007510      0f8498030000   je 0x78ae
0x00007516      488d35f82800.  lea rsi, [0x00009e15]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000751d      31ff           xor edi, edi
0x0000751f      ba05000000     mov edx, 5
0x00007524      e837a1ffff     call sym.imp.dcgettext
0x00007529      4889c1         mov rcx, rax
0x0000752c      4889442460     mov qword [rsp + 0x60], rax
0x00007531      488d05dd2800.  lea rax, [0x00009e15]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00007538      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x0000753b      0f8483030000   je 0x78c4
0x00007541      4531ff         xor r15d, r15d
0x00007544      85db           test ebx, ebx
0x00007546      0f84c1010000   je 0x770d
0x0000754c      85db           test ebx, ebx
0x0000754e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00007553      0f9544240f     setne byte [rsp + 0xf]
0x00007558      4531e4         xor r12d, r12d
0x0000755b      4889df         mov rdi, rbx
0x0000755e      e81da1ffff     call sym.imp.strlen
0x00007563      48895c2448     mov qword [rsp + 0x48], rbx
0x00007568      4889442418     mov qword [rsp + 0x18], rax
0x0000756d      c644240e01     mov byte [rsp + 0xe], 1
0x00007572      c644247c00     mov byte [rsp + 0x7c], 0
0x00007577      48c744245000.  mov qword [rsp + 0x50], 0
0x00007580      c644240d01     mov byte [rsp + 0xd], 1
0x00007585      e999f2ffff     jmp 0x6823
0x0000758a      c644240e01     mov byte [rsp + 0xe], 1
0x0000758f      c644247c00     mov byte [rsp + 0x7c], 0
0x00007594      4531e4         xor r12d, r12d
0x00007597      48c744245000.  mov qword [rsp + 0x50], 0
0x000075a0      c644240f00     mov byte [rsp + 0xf], 0
0x000075a5      4531ff         xor r15d, r15d
0x000075a8      c644240d00     mov byte [rsp + 0xd], 0
0x000075ad      48c744241800.  mov qword [rsp + 0x18], 0
0x000075b6      48c744244800.  mov qword [rsp + 0x48], 0
0x000075bf      e95ff2ffff     jmp 0x6823
0x000075c4      c644240e01     mov byte [rsp + 0xe], 1
0x000075c9      c644247c00     mov byte [rsp + 0x7c], 0
0x000075ce      4531e4         xor r12d, r12d
0x000075d1      48c744245000.  mov qword [rsp + 0x50], 0
0x000075da      c644240f01     mov byte [rsp + 0xf], 1
0x000075df      c644240d01     mov byte [rsp + 0xd], 1
0x000075e4      e91af2ffff     jmp 0x6803
0x000075e9      4d39fd         cmp r13, r15
0x000075ec      7605           jbe 0x75f3
0x000075ee      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x000075f3      488d4102       lea rax, [rcx + 2]
0x000075f7      4939c5         cmp r13, rax
0x000075fa      7606           jbe 0x7602
0x000075fc      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00007602      4489e0         mov eax, r12d
0x00007605      4c8d7903       lea r15, [rcx + 3]
0x00007609      4531e4         xor r12d, r12d
0x0000760c      bb30000000     mov ebx, 0x30                           ; '0'
0x00007611      e962f3ffff     jmp 0x6978
0x00007616      662e0f1f8400.  nop word cs:[rax + rax]
0x00007620      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00007625      4c89dd         mov rbp, r11
0x00007628      885c240d       mov byte [rsp + 0xd], bl
0x0000762c      e9a8fcffff     jmp 0x72d9
0x00007631      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00007636      4531e4         xor r12d, r12d
0x00007639      e902fbffff     jmp 0x7140
0x0000763e      4531d2         xor r10d, r10d
0x00007641      e9b7fbffff     jmp 0x71fd
0x00007646      48c744245000.  mov qword [rsp + 0x50], 0
0x0000764f      c644240e01     mov byte [rsp + 0xe], 1
0x00007654      4531e4         xor r12d, r12d
0x00007657      c644247c00     mov byte [rsp + 0x7c], 0
0x0000765c      e9dafdffff     jmp 0x743b
0x00007661      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00007666      4c89f6         mov rsi, r14
0x00007669      4c89e9         mov rcx, r13
0x0000766c      4889d8         mov rax, rbx
0x0000766f      4889df         mov rdi, rbx
0x00007672      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00007678      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000767d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00007685      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00007688      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000768e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00007696      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000769b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000076a0      7326           jae 0x76c8
0x000076a2      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x000076a5      7510           jne 0x76b7
0x000076a7      eb1f           jmp 0x76c8
0x000076a9      0f1f80000000.  nop dword [rax]
0x000076b0      41803c0100     cmp byte [r9 + rax], 0
0x000076b5      740e           je 0x76c5
0x000076b7      4883c001       add rax, 1
0x000076bb      488d540500     lea rdx, [rbp + rax]
0x000076c0      4939d3         cmp r11, rdx
0x000076c3      77eb           ja 0x76b0
0x000076c5      4889c7         mov rdi, rax
0x000076c8      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000076cd      4531e4         xor r12d, r12d
0x000076d0      e961faffff     jmp 0x7136
0x000076d5      4889df         mov rdi, rbx
0x000076d8      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000076de      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000076e3      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000076e9      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000076f1      4531e4         xor r12d, r12d
0x000076f4      4c8b742440     mov r14, qword [rsp + 0x40]
0x000076f9      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000076fe      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00007703      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00007708      e929faffff     jmp 0x7136
0x0000770d      488b542468     mov rdx, qword [rsp + 0x68]
0x00007712      0fb602         movzx eax, byte [rdx]
0x00007715      84c0           test al, al
0x00007717      0f842ffeffff   je 0x754c
0x0000771d      0f1f00         nop dword [rax]
0x00007720      4d39fd         cmp r13, r15
0x00007723      7604           jbe 0x7729
0x00007725      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00007729      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x0000772d      420fb6043a     movzx eax, byte [rdx + r15]
0x00007732      84c0           test al, al
0x00007734      75ea           jne 0x7720
0x00007736      e911feffff     jmp 0x754c
0x0000773b      89d0           mov eax, edx
0x0000773d      e955f5ffff     jmp 0x6c97
0x00007742      0fb61c08       movzx ebx, byte [rax + rcx]
0x00007746      80fb3e         cmp bl, 0x3e
0x00007749      0f8771f8ffff   ja 0x6fc0
0x0000774f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00007759      480fa3d8       bt rax, rbx
0x0000775d      0f835df8ffff   jae 0x6fc0
0x00007763      807c240f00     cmp byte [rsp + 0xf], 0
0x00007768      0f85e4010000   jne 0x7952                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x0000776e      4d39fd         cmp r13, r15
0x00007771      7605           jbe 0x7778
0x00007773      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00007778      498d4701       lea rax, [r15 + 1]
0x0000777c      4939c5         cmp r13, rax
0x0000777f      7606           jbe 0x7787
0x00007781      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00007787      498d4702       lea rax, [r15 + 2]
0x0000778b      4939c5         cmp r13, rax
0x0000778e      7606           jbe 0x7796
0x00007790      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00007796      498d4703       lea rax, [r15 + 3]
0x0000779a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000779d      7606           jbe 0x77a5
0x0000779f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x000077a5      4983c704       add r15, 4
0x000077a9      31d2           xor edx, edx
0x000077ab      4531e4         xor r12d, r12d
0x000077ae      31c0           xor eax, eax
0x000077b0      4889cd         mov rbp, rcx
0x000077b3      e9c0f1ffff     jmp 0x6978
0x000077b8      85db           test ebx, ebx
0x000077ba      0f8488010000   je 0x7948
0x000077c0      488d054e2600.  lea rax, [0x00009e15]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000077c7      c644240e01     mov byte [rsp + 0xe], 1
0x000077cc      c644247c00     mov byte [rsp + 0x7c], 0
0x000077d1      4531e4         xor r12d, r12d
0x000077d4      48c744245000.  mov qword [rsp + 0x50], 0
0x000077dd      c644240f01     mov byte [rsp + 0xf], 1
0x000077e2      c644240d00     mov byte [rsp + 0xd], 0
0x000077e7      48c744241801.  mov qword [rsp + 0x18], 1
0x000077f0      4531ff         xor r15d, r15d
0x000077f3      4889442448     mov qword [rsp + 0x48], rax
0x000077f8      e926f0ffff     jmp 0x6823
0x000077fd      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00007800      4c89dd         mov rbp, r11
0x00007803      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00007808      e9ccfaffff     jmp 0x72d9
0x0000780d      488d05ff2500.  lea rax, str.l______l                   ; 0x9e13 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00007814      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00007819      c644247c00     mov byte [rsp + 0x7c], 0
0x0000781e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00007821      48c744245000.  mov qword [rsp + 0x50], 0
0x0000782a      c644240f01     mov byte [rsp + 0xf], 1
0x0000782f      c644240d01     mov byte [rsp + 0xd], 1
0x00007834      48c744241801.  mov qword [rsp + 0x18], 1
0x0000783d      4531ff         xor r15d, r15d
0x00007840      4889442448     mov qword [rsp + 0x48], rax
0x00007845      e9d9efffff     jmp 0x6823
0x0000784a      89d0           mov eax, edx
0x0000784c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00007851      4885db         test rbx, rbx
0x00007854      742c           je 0x7882
0x00007856      84c0           test al, al
0x00007858      7428           je 0x7882
0x0000785a      0fb60b         movzx ecx, byte [rbx]
0x0000785d      4889d8         mov rax, rbx
0x00007860      84c9           test cl, cl
0x00007862      741e           je 0x7882
0x00007864      4c89fa         mov rdx, r15
0x00007867      4c29f8         sub rax, r15
0x0000786a      4939d5         cmp r13, rdx
0x0000786d      7604           jbe 0x7873
0x0000786f      41880c16       mov byte [r14 + rdx], cl
0x00007873      4883c201       add rdx, 1
0x00007877      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000787b      84c9           test cl, cl
0x0000787d      75eb           jne 0x786a
0x0000787f      4989d7         mov r15, rdx
0x00007882      4d39fd         cmp r13, r15
0x00007885      0f869efaffff   jbe 0x7329
0x0000788b      43c6043e00     mov byte [r14 + r15], 0
0x00007890      e994faffff     jmp 0x7329
0x00007895      837c240802     cmp dword [rsp + 8], 2
0x0000789a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000789f      4c89dd         mov rbp, r11
0x000078a2      0f94c0         sete al
0x000078a5      885c240d       mov byte [rsp + 0xd], bl
0x000078a9      e92bfaffff     jmp 0x72d9
0x000078ae      8b742408       mov esi, dword [rsp + 8]
0x000078b2      4889cf         mov rdi, rcx
0x000078b5      e8a6edffff     call sym.gettext_quote.part.1
0x000078ba      4889442468     mov qword [rsp + 0x68], rax
0x000078bf      e952fcffff     jmp 0x7516
0x000078c4      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x000078c8      4889cf         mov rdi, rcx
0x000078cb      e890edffff     call sym.gettext_quote.part.1
0x000078d0      4889442460     mov qword [rsp + 0x60], rax
0x000078d5      e967fcffff     jmp 0x7541
0x000078da      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000078df      4c89dd         mov rbp, r11
0x000078e2      89d0           mov eax, edx
0x000078e4      885c240d       mov byte [rsp + 0xd], bl
0x000078e8      e9ecf9ffff     jmp 0x72d9
0x000078ed      4883ec08       sub rsp, 8
0x000078f1      41b805000000   mov r8d, 5
0x000078f7      4c89d9         mov rcx, r11
0x000078fa      ff742468       push qword [rsp + 0x68]
0x000078fe      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00007902      4c89f7         mov rdi, r14
0x00007905      ff742438       push qword [rsp + 0x38]
0x00007909      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00007911      488b542430     mov rdx, qword [rsp + 0x30]
0x00007916      488b742470     mov rsi, qword [rsp + 0x70]
0x0000791b      e830eeffff     call sym.quotearg_buffer_restyled
0x00007920      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00007924      4989c7         mov r15, rax
0x00007927      e9fdf9ffff     jmp 0x7329
0x0000792c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00007931      e916ffffff     jmp 0x784c
0x00007936      c74424080200.  mov dword [rsp + 8], 2
0x0000793e      e996f9ffff     jmp 0x72d9
0x00007943      e8489dffff     call sym.imp.__stack_chk_fail
0x00007948      c644240d00     mov byte [rsp + 0xd], 0
0x0000794d      e96ffaffff     jmp 0x73c1
0x00007952      4c89dd         mov rbp, r11
0x00007955      e996f9ffff     jmp 0x72f0
0x0000795a      c644240e01     mov byte [rsp + 0xe], 1
0x0000795f      31c0           xor eax, eax
0x00007961      4531e4         xor r12d, r12d
0x00007964      48c744245000.  mov qword [rsp + 0x50], 0
0x0000796d      e9a2f5ffff     jmp 0x6f14
0x00007972      4c89ea         mov rdx, r13
0x00007975      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000797a      e9f3f5ffff     jmp 0x6f72
0x0000797f      e83c9cffff     call sym.imp.abort
0x00007984      6690           nop
0x00007986      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00007990      4157           push r15
0x00007992      4156           push r14
0x00007994      4c63ff         movsxd r15, edi
0x00007997      4155           push r13
0x00007999      4154           push r12
0x0000799b      4989d6         mov r14, rdx
0x0000799e      55             push rbp
0x0000799f      53             push rbx
0x000079a0      4889cd         mov rbp, rcx
0x000079a3      4883ec28       sub rsp, 0x28
0x000079a7      4889742408     mov qword [rsp + 8], rsi
0x000079ac      e81f9cffff     call sym.imp.__errno_location
0x000079b1      4989c5         mov r13, rax
0x000079b4      8b00           mov eax, dword [rax]
0x000079b6      4585ff         test r15d, r15d
0x000079b9      488b1dc04620.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x20c080:8]=0x20c090 obj.slotvec0
0x000079c0      89442418       mov dword [rsp + 0x18], eax
0x000079c4      0f8867010000   js 0x7b31
0x000079ca      44393da74620.  cmp dword [obj.nslots], r15d            ; [0x20c078:4]=1
0x000079d1      7f62           jg 0x7a35
0x000079d3      4181ffffffff.  cmp r15d, 0x7fffffff
0x000079da      0f8456010000   je 0x7b36
0x000079e0      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x000079e4      488d05a54620.  lea rax, obj.slotvec0                   ; 0x20c090
0x000079eb      4963f4         movsxd rsi, r12d
0x000079ee      48c1e604       shl rsi, 4
0x000079f2      4839c3         cmp rbx, rax
0x000079f5      0f8415010000   je 0x7b10
0x000079fb      4889df         mov rdi, rbx
0x000079fe      e87d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00007a03      4889c3         mov rbx, rax
0x00007a06      488905734620.  mov qword [obj.slotvec], rax            ; [0x20c080:8]=0x20c090 obj.slotvec0
0x00007a0d      48633d644620.  movsxd rdi, dword [obj.nslots]          ; [0x20c078:4]=1
0x00007a14      4489e2         mov edx, r12d
0x00007a17      31f6           xor esi, esi
0x00007a19      29fa           sub edx, edi
0x00007a1b      48c1e704       shl rdi, 4
0x00007a1f      4863d2         movsxd rdx, edx
0x00007a22      4801df         add rdi, rbx
0x00007a25      48c1e204       shl rdx, 4
0x00007a29      e8d29cffff     call sym.imp.memset
0x00007a2e      448925434620.  mov dword [obj.nslots], r12d            ; [0x20c078:4]=1
0x00007a35      8b4504         mov eax, dword [rbp + 4]
0x00007a38      49c1e704       shl r15, 4
0x00007a3c      4883ec08       sub rsp, 8
0x00007a40      4c01fb         add rbx, r15
0x00007a43      4c8d7d08       lea r15, [rbp + 8]
0x00007a47      448b4500       mov r8d, dword [rbp]
0x00007a4b      4c8b1b         mov r11, qword [rbx]
0x00007a4e      4c8b6308       mov r12, qword [rbx + 8]
0x00007a52      4c89f1         mov rcx, r14
0x00007a55      83c801         or eax, 1
0x00007a58      89442424       mov dword [rsp + 0x24], eax
0x00007a5c      ff7530         push qword [rbp + 0x30]
0x00007a5f      4189c1         mov r9d, eax
0x00007a62      ff7528         push qword [rbp + 0x28]
0x00007a65      4157           push r15
0x00007a67      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00007a6a      488b542428     mov rdx, qword [rsp + 0x28]
0x00007a6f      4c89e7         mov rdi, r12
0x00007a72      4c895c2430     mov qword [rsp + 0x30], r11
0x00007a77      e8d4ecffff     call sym.quotearg_buffer_restyled
0x00007a7c      4883c420       add rsp, 0x20
0x00007a80      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00007a85      4939c3         cmp r11, rax
0x00007a88      7767           ja 0x7af1
0x00007a8a      488d7001       lea rsi, [rax + 1]
0x00007a8e      488d05ab4620.  lea rax, obj.slot0                      ; 0x20c140
0x00007a95      4939c4         cmp r12, rax
0x00007a98      488933         mov qword [rbx], rsi
0x00007a9b      7412           je 0x7aaf
0x00007a9d      4c89e7         mov rdi, r12
0x00007aa0      4889742410     mov qword [rsp + 0x10], rsi
0x00007aa5      e8069bffff     call sym.imp.free
0x00007aaa      488b742410     mov rsi, qword [rsp + 0x10]
0x00007aaf      4889f7         mov rdi, rsi
0x00007ab2      4889742410     mov qword [rsp + 0x10], rsi
0x00007ab7      e8640e0000     call sym.xmalloc
0x00007abc      4883ec08       sub rsp, 8
0x00007ac0      48894308       mov qword [rbx + 8], rax
0x00007ac4      448b4500       mov r8d, dword [rbp]
0x00007ac8      ff7530         push qword [rbp + 0x30]
0x00007acb      ff7528         push qword [rbp + 0x28]
0x00007ace      4c89f1         mov rcx, r14
0x00007ad1      4157           push r15
0x00007ad3      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00007ad8      4889c7         mov rdi, rax
0x00007adb      488b542428     mov rdx, qword [rsp + 0x28]
0x00007ae0      488b742430     mov rsi, qword [rsp + 0x30]
0x00007ae5      4989c4         mov r12, rax
0x00007ae8      e863ecffff     call sym.quotearg_buffer_restyled
0x00007aed      4883c420       add rsp, 0x20
0x00007af1      8b442418       mov eax, dword [rsp + 0x18]
0x00007af5      41894500       mov dword [r13], eax
0x00007af9      4883c428       add rsp, 0x28
0x00007afd      4c89e0         mov rax, r12
0x00007b00      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00007b01      5d             pop rbp
0x00007b02      415c           pop r12
0x00007b04      415d           pop r13
0x00007b06      415e           pop r14
0x00007b08      415f           pop r15
0x00007b0a      c3             ret
0x00007b0b      0f1f440000     nop dword [rax + rax]
0x00007b10      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00007b12      e8690e0000     call sym.xrealloc
0x00007b17      660f6f057145.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x00007b1f      4889c3         mov rbx, rax
0x00007b22      488905574520.  mov qword [obj.slotvec], rax            ; [0x20c080:8]=0x20c090 obj.slotvec0
0x00007b29      0f1100         movups xmmword [rax], xmm0
0x00007b2c      e9dcfeffff     jmp 0x7a0d
0x00007b31      e88a9affff     call sym.imp.abort
0x00007b36      e835100000     call sym.xalloc_die
0x00007b3b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00007b40      4154           push r12
0x00007b42      55             push rbp
0x00007b43      53             push rbx
0x00007b44      4889fb         mov rbx, rdi
0x00007b47      e8849affff     call sym.imp.__errno_location
0x00007b4c      448b20         mov r12d, dword [rax]
0x00007b4f      4889c5         mov rbp, rax
0x00007b52      488d05e74620.  lea rax, obj.default_quoting_options    ; 0x20c240
0x00007b59      4885db         test rbx, rbx
0x00007b5c      be38000000     mov esi, 0x38                           ; '8'
0x00007b61      480f44d8       cmove rbx, rax
0x00007b65      4889df         mov rdi, rbx
0x00007b68      e8b30f0000     call sym.xmemdup
0x00007b6d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00007b71      5b             pop rbx
0x00007b72      5d             pop rbp
0x00007b73      415c           pop r12
0x00007b75      c3             ret
0x00007b76      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00007b80      488d05b94620.  lea rax, obj.default_quoting_options    ; 0x20c240
0x00007b87      4885ff         test rdi, rdi
0x00007b8a      480f44f8       cmove rdi, rax
0x00007b8e      8b07           mov eax, dword [rdi]
0x00007b90      c3             ret
0x00007b91      0f1f440000     nop dword [rax + rax]
0x00007b96      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00007ba0      488d05994620.  lea rax, obj.default_quoting_options    ; 0x20c240
0x00007ba7      4885ff         test rdi, rdi
0x00007baa      480f44f8       cmove rdi, rax
0x00007bae      8937           mov dword [rdi], esi
0x00007bb0      c3             ret
0x00007bb1      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00007bb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00007bc0      488d05794620.  lea rax, obj.default_quoting_options    ; 0x20c240
0x00007bc7      4885ff         test rdi, rdi
0x00007bca      89f1           mov ecx, esi
0x00007bcc      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00007bd0      89f0           mov eax, esi
0x00007bd2      83e11f         and ecx, 0x1f
0x00007bd5      c0e805         shr al, 5
0x00007bd8      0fb6c0         movzx eax, al
0x00007bdb      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00007be0      8b37           mov esi, dword [rdi]
0x00007be2      89f0           mov eax, esi
0x00007be4      d3e8           shr eax, cl
0x00007be6      31c2           xor edx, eax
0x00007be8      83e001         and eax, 1
0x00007beb      83e201         and edx, 1
0x00007bee      d3e2           shl edx, cl
0x00007bf0      31f2           xor edx, esi
0x00007bf2      8917           mov dword [rdi], edx
0x00007bf4      c3             ret
0x00007bf5      90             nop
0x00007bf6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00007c00      488d05394620.  lea rax, obj.default_quoting_options    ; 0x20c240
0x00007c07      4885ff         test rdi, rdi
0x00007c0a      480f44f8       cmove rdi, rax
0x00007c0e      8b4704         mov eax, dword [rdi + 4]
0x00007c11      897704         mov dword [rdi + 4], esi
0x00007c14      c3             ret
0x00007c15      90             nop
0x00007c16      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00007c20      488d05194620.  lea rax, obj.default_quoting_options    ; 0x20c240
0x00007c27      4885ff         test rdi, rdi
0x00007c2a      480f44f8       cmove rdi, rax
0x00007c2e      4885f6         test rsi, rsi
0x00007c31      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00007c37      740e           je 0x7c47
0x00007c39      4885d2         test rdx, rdx
0x00007c3c      7409           je 0x7c47
0x00007c3e      48897728       mov qword [rdi + 0x28], rsi
0x00007c42      48895730       mov qword [rdi + 0x30], rdx
0x00007c46      c3             ret
0x00007c47      4883ec08       sub rsp, 8
0x00007c4b      e87099ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00007c50      4157           push r15
0x00007c52      4156           push r14
0x00007c54      488d05e54520.  lea rax, obj.default_quoting_options    ; 0x20c240
0x00007c5b      4155           push r13
0x00007c5d      4154           push r12
0x00007c5f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00007c62      55             push rbp
0x00007c63      53             push rbx
0x00007c64      4c89c3         mov rbx, r8
0x00007c67      4989f6         mov r14, rsi
0x00007c6a      4989d7         mov r15, rdx
0x00007c6d      4883ec18       sub rsp, 0x18
0x00007c71      4d85c0         test r8, r8
0x00007c74      480f44d8       cmove rbx, rax
0x00007c78      48894c2408     mov qword [rsp + 8], rcx
0x00007c7d      e84e99ffff     call sym.imp.__errno_location
0x00007c82      448b20         mov r12d, dword [rax]
0x00007c85      4889c5         mov rbp, rax
0x00007c88      488d4308       lea rax, [rbx + 8]
0x00007c8c      4883ec08       sub rsp, 8
0x00007c90      448b4b04       mov r9d, dword [rbx + 4]
0x00007c94      ff7330         push qword [rbx + 0x30]
0x00007c97      448b03         mov r8d, dword [rbx]
0x00007c9a      ff7328         push qword [rbx + 0x28]
0x00007c9d      4c89fa         mov rdx, r15
0x00007ca0      50             push rax
0x00007ca1      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00007ca6      4c89f6         mov rsi, r14
0x00007ca9      4c89ef         mov rdi, r13
0x00007cac      e89feaffff     call sym.quotearg_buffer_restyled
0x00007cb1      44896500       mov dword [rbp], r12d
0x00007cb5      4883c438       add rsp, 0x38
0x00007cb9      5b             pop rbx
0x00007cba      5d             pop rbp
0x00007cbb      415c           pop r12
0x00007cbd      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00007cbf      415e           pop r14
0x00007cc1      415f           pop r15
0x00007cc3      c3             ret
0x00007cc4      6690           nop
0x00007cc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00007cd0      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00007cd2      4156           push r14
0x00007cd4      488d05654520.  lea rax, obj.default_quoting_options    ; 0x20c240
0x00007cdb      4155           push r13
0x00007cdd      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x00007cdf      4989d4         mov r12, rdx
0x00007ce2      55             push rbp
0x00007ce3      53             push rbx
0x00007ce4      4889cb         mov rbx, rcx
0x00007ce7      4989fe         mov r14, rdi
0x00007cea      4989f7         mov r15, rsi
0x00007ced      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00007cf1      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00007cf4      480f44d8       cmove rbx, rax
0x00007cf8      31ed           xor ebp, ebp
0x00007cfa      e8d198ffff     call sym.imp.__errno_location
0x00007cff      4d85e4         test r12, r12
0x00007d02      4989c5         mov r13, rax
0x00007d05      8b00           mov eax, dword [rax]
0x00007d07      400f94c5       sete bpl
0x00007d0b      0b6b04         or ebp, dword [rbx + 4]
0x00007d0e      4c8d5308       lea r10, [rbx + 8]
0x00007d12      4883ec08       sub rsp, 8
0x00007d16      448b03         mov r8d, dword [rbx]
0x00007d19      4c89f9         mov rcx, r15
0x00007d1c      89442414       mov dword [rsp + 0x14], eax
0x00007d20      ff7330         push qword [rbx + 0x30]
0x00007d23      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00007d26      ff7328         push qword [rbx + 0x28]
0x00007d29      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x00007d2b      31f6           xor esi, esi
0x00007d2d      4189e9         mov r9d, ebp
0x00007d30      31ff           xor edi, edi
0x00007d32      4c89542440     mov qword [rsp + 0x40], r10
0x00007d37      e814eaffff     call sym.quotearg_buffer_restyled
0x00007d3c      488d7001       lea rsi, [rax + 1]
0x00007d40      4889442448     mov qword [rsp + 0x48], rax
0x00007d45      4883c420       add rsp, 0x20
0x00007d49      4889f7         mov rdi, rsi
0x00007d4c      4889742418     mov qword [rsp + 0x18], rsi
0x00007d51      e8ca0b0000     call sym.xmalloc
0x00007d56      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x00007d5b      4883ec08       sub rsp, 8
0x00007d5f      ff7330         push qword [rbx + 0x30]
0x00007d62      ff7328         push qword [rbx + 0x28]
0x00007d65      4c8b542438     mov r10, qword [rsp + 0x38]
0x00007d6a      4189e9         mov r9d, ebp
0x00007d6d      448b03         mov r8d, dword [rbx]
0x00007d70      4c89f9         mov rcx, r15
0x00007d73      4c89f2         mov rdx, r14
0x00007d76      4889c7         mov rdi, rax
0x00007d79      4152           push r10
0x00007d7b      488b742438     mov rsi, qword [rsp + 0x38]
0x00007d80      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00007d85      8b44242c       mov eax, dword [rsp + 0x2c]
0x00007d89      4883c420       add rsp, 0x20
0x00007d8d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00007d90      41894500       mov dword [r13], eax
0x00007d94      7409           je 0x7d9f
0x00007d96      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x00007d9b      4d891c24       mov qword [r12], r11
0x00007d9f      488b442410     mov rax, qword [rsp + 0x10]
0x00007da4      4883c438       add rsp, 0x38
0x00007da8      5b             pop rbx
0x00007da9      5d             pop rbp
0x00007daa      415c           pop r12
0x00007dac      415d           pop r13
0x00007dae      415e           pop r14
0x00007db0      415f           pop r15
0x00007db2      c3             ret
0x00007db3      0f1f00         nop dword [rax]
0x00007db6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00007dc0      4889d1         mov rcx, rdx
0x00007dc3      31d2           xor edx, edx
0x00007dc5      e906ffffff     jmp sym.quotearg_alloc_mem
0x00007dca      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00007dd0      8b05a2422000   mov eax, dword [obj.nslots]             ; [0x20c078:4]=1
0x00007dd6      4154           push r12
0x00007dd8      4c8b25a14220.  mov r12, qword [obj.slotvec]            ; [0x20c080:8]=0x20c090 obj.slotvec0
0x00007ddf      55             push rbp
0x00007de0      53             push rbx
0x00007de1      83f801         cmp eax, 1
0x00007de4      7e2b           jle 0x7e11                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00007de6      83e802         sub eax, 2
0x00007de9      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00007dee      48c1e004       shl rax, 4
0x00007df2      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00007df7      660f1f840000.  nop word [rax + rax]
0x00007e00      488b3b         mov rdi, qword [rbx]
0x00007e03      4883c310       add rbx, 0x10
0x00007e07      e8a497ffff     call sym.imp.free
0x00007e0c      4839eb         cmp rbx, rbp
0x00007e0f      75ef           jne 0x7e00
0x00007e11      498b7c2408     mov rdi, qword [r12 + 8]
0x00007e16      488d1d234320.  lea rbx, obj.slot0                      ; 0x20c140
0x00007e1d      4839df         cmp rdi, rbx
0x00007e20      7417           je 0x7e39
0x00007e22      e88997ffff     call sym.imp.free
0x00007e27      48c7055e4220.  mov qword [obj.slotvec0], 0x100         ; [0x20c090:8]=256
0x00007e32      48891d5f4220.  mov qword [0x0020c098], rbx             ; [0x20c098:8]=0x20c140 obj.slot0
0x00007e39      488d1d504220.  lea rbx, obj.slotvec0                   ; 0x20c090
0x00007e40      4939dc         cmp r12, rbx
0x00007e43      740f           je 0x7e54
0x00007e45      4c89e7         mov rdi, r12
0x00007e48      e86397ffff     call sym.imp.free
0x00007e4d      48891d2c4220.  mov qword [obj.slotvec], rbx            ; [0x20c080:8]=0x20c090 obj.slotvec0
0x00007e54      5b             pop rbx
0x00007e55      c70519422000.  mov dword [obj.nslots], 1               ; [0x20c078:4]=1
0x00007e5f      5d             pop rbp
0x00007e60      415c           pop r12
0x00007e62      c3             ret
0x00007e63      0f1f00         nop dword [rax]
0x00007e66      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00007e70      488d0dc94320.  lea rcx, obj.default_quoting_options    ; 0x20c240
0x00007e77      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00007e7e      e90dfbffff     jmp sym.quotearg_n_options
0x00007e83      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00007e86      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00007e90      488d0da94320.  lea rcx, obj.default_quoting_options    ; 0x20c240
0x00007e97      e9f4faffff     jmp sym.quotearg_n_options
0x00007e9c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00007ea0      488d0d994320.  lea rcx, obj.default_quoting_options    ; 0x20c240
0x00007ea7      4889fe         mov rsi, rdi
0x00007eaa      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00007eb1      31ff           xor edi, edi
0x00007eb3      e9d8faffff     jmp sym.quotearg_n_options
0x00007eb8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00007ec0      488d0d794320.  lea rcx, obj.default_quoting_options    ; 0x20c240
0x00007ec7      4889f2         mov rdx, rsi
0x00007eca      4889fe         mov rsi, rdi
0x00007ecd      31ff           xor edi, edi
0x00007ecf      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00007ed4      6690           nop
0x00007ed6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00007ee0      4883ec48       sub rsp, 0x48
0x00007ee4      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00007ee7      64488b142528.  mov rdx, qword fs:[0x28]
0x00007ef0      4889542438     mov qword [rsp + 0x38], rdx
0x00007ef5      31d2           xor edx, edx
0x00007ef7      83fe0a         cmp esi, 0xa
0x00007efa      7468           je 0x7f64
0x00007efc      893424         mov dword [rsp], esi
0x00007eff      4889e1         mov rcx, rsp
0x00007f02      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00007f09      4889c6         mov rsi, rax
0x00007f0c      48c744240400.  mov qword [rsp + 4], 0
0x00007f15      48c744240c00.  mov qword [rsp + 0xc], 0
0x00007f1e      48c744241400.  mov qword [rsp + 0x14], 0
0x00007f27      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00007f30      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00007f39      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00007f42      c74424340000.  mov dword [rsp + 0x34], 0
0x00007f4a      e841faffff     call sym.quotearg_n_options
0x00007f4f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00007f54      6448330c2528.  xor rcx, qword fs:[0x28]
0x00007f5d      750a           jne 0x7f69                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x00007f5f      4883c448       add rsp, 0x48
0x00007f63      c3             ret
0x00007f64      e85796ffff     call sym.imp.abort
0x00007f69      e82297ffff     call sym.imp.__stack_chk_fail
0x00007f6e      6690           nop
;-- quotearg_n_style_mem:
0x00007f70      4883ec48       sub rsp, 0x48
0x00007f74      4889d0         mov rax, rdx
0x00007f77      4889ca         mov rdx, rcx
0x00007f7a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00007f83      48894c2438     mov qword [rsp + 0x38], rcx
0x00007f88      31c9           xor ecx, ecx
0x00007f8a      83fe0a         cmp esi, 0xa
0x00007f8d      7461           je 0x7ff0
0x00007f8f      893424         mov dword [rsp], esi
0x00007f92      4889e1         mov rcx, rsp
0x00007f95      4889c6         mov rsi, rax
0x00007f98      48c744240400.  mov qword [rsp + 4], 0
0x00007fa1      48c744240c00.  mov qword [rsp + 0xc], 0
0x00007faa      48c744241400.  mov qword [rsp + 0x14], 0
0x00007fb3      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00007fbc      48c744242400.  mov qword [rsp + 0x24], 0
0x00007fc5      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00007fce      c74424340000.  mov dword [rsp + 0x34], 0
0x00007fd6      e8b5f9ffff     call sym.quotearg_n_options
0x00007fdb      488b542438     mov rdx, qword [rsp + 0x38]
0x00007fe0      644833142528.  xor rdx, qword fs:[0x28]
0x00007fe9      750a           jne 0x7ff5
0x00007feb      4883c448       add rsp, 0x48
0x00007fef      c3             ret
0x00007ff0      e8cb95ffff     call sym.imp.abort
0x00007ff5      e89696ffff     call sym.imp.__stack_chk_fail
0x00007ffa      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00008000      4889f2         mov rdx, rsi
0x00008003      89fe           mov esi, edi
0x00008005      31ff           xor edi, edi
0x00008007      e9d4feffff     jmp sym.quotearg_n_style
0x0000800c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00008010      4889d1         mov rcx, rdx
0x00008013      4889f2         mov rdx, rsi
0x00008016      89fe           mov esi, edi
0x00008018      31ff           xor edi, edi
0x0000801a      e951ffffff     jmp sym.quotearg_n_style_mem
0x0000801f      90             nop
;-- quotearg_char_mem:
0x00008020      4883ec48       sub rsp, 0x48
0x00008024      89d1           mov ecx, edx
0x00008026      64488b042528.  mov rax, qword fs:[0x28]
0x0000802f      4889442438     mov qword [rsp + 0x38], rax
0x00008034      31c0           xor eax, eax
0x00008036      488b05334220.  mov rax, qword [0x0020c270]             ; [0x20c270:8]=0
0x0000803d      4989e0         mov r8, rsp
0x00008040      83e11f         and ecx, 0x1f
0x00008043      660f6f05f541.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000804b      4889442430     mov qword [rsp + 0x30], rax
0x00008050      89d0           mov eax, edx
0x00008052      0f290424       movaps xmmword [rsp], xmm0
0x00008056      c0e805         shr al, 5
0x00008059      0fb6c0         movzx eax, al
0x0000805c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00008061      660f6f05e741.  movdqa xmm0, xmmword [0x0020c250]
0x00008069      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000806e      660f6f05ea41.  movdqa xmm0, xmmword [0x0020c260]
0x00008076      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000807b      418b11         mov edx, dword [r9]
0x0000807e      89d0           mov eax, edx
0x00008080      d3e8           shr eax, cl
0x00008082      f7d0           not eax
0x00008084      83e001         and eax, 1
0x00008087      d3e0           shl eax, cl
0x00008089      4c89c1         mov rcx, r8
0x0000808c      31d0           xor eax, edx
0x0000808e      4889f2         mov rdx, rsi
0x00008091      4889fe         mov rsi, rdi
0x00008094      418901         mov dword [r9], eax
0x00008097      31ff           xor edi, edi
0x00008099      e8f2f8ffff     call sym.quotearg_n_options
0x0000809e      488b742438     mov rsi, qword [rsp + 0x38]
0x000080a3      644833342528.  xor rsi, qword fs:[0x28]
0x000080ac      7505           jne 0x80b3
0x000080ae      4883c448       add rsp, 0x48
0x000080b2      c3             ret
0x000080b3      e8d895ffff     call sym.imp.__stack_chk_fail
0x000080b8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x000080c0      400fbed6       movsx edx, sil
0x000080c4      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x000080cb      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x000080d0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000080d5      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x000080dc      e93fffffff     jmp sym.quotearg_char_mem
0x000080e1      0f1f440000     nop dword [rax + rax]
0x000080e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x000080f0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000080f5      e926ffffff     jmp sym.quotearg_char_mem
0x000080fa      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00008100      4883ec48       sub rsp, 0x48
0x00008104      4889d0         mov rax, rdx
0x00008107      64488b142528.  mov rdx, qword fs:[0x28]
0x00008110      4889542438     mov qword [rsp + 0x38], rdx
0x00008115      31d2           xor edx, edx
0x00008117      83fe0a         cmp esi, 0xa
0x0000811a      7468           je 0x8184
0x0000811c      893424         mov dword [rsp], esi
0x0000811f      4889e1         mov rcx, rsp
0x00008122      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00008129      4889c6         mov rsi, rax
0x0000812c      48c744240400.  mov qword [rsp + 4], 0
0x00008135      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x0000813e      48c744241400.  mov qword [rsp + 0x14], 0
0x00008147      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00008150      48c744242400.  mov qword [rsp + 0x24], 0
0x00008159      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00008162      c74424340000.  mov dword [rsp + 0x34], 0
0x0000816a      e821f8ffff     call sym.quotearg_n_options
0x0000816f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00008174      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000817d      750a           jne 0x8189
0x0000817f      4883c448       add rsp, 0x48
0x00008183      c3             ret
0x00008184      e83794ffff     call sym.imp.abort
0x00008189      e80295ffff     call sym.imp.__stack_chk_fail
0x0000818e      6690           nop
;-- quotearg_n_custom_mem:
0x00008190      4883ec48       sub rsp, 0x48
0x00008194      4989c9         mov r9, rcx
0x00008197      488b0dd24020.  mov rcx, qword [0x0020c270]             ; [0x20c270:8]=0
0x0000819e      660f6f059a40.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x000081a6      64488b042528.  mov rax, qword fs:[0x28]
0x000081af      4889442438     mov qword [rsp + 0x38], rax
0x000081b4      31c0           xor eax, eax
0x000081b6      0f290424       movaps xmmword [rsp], xmm0
0x000081ba      4885f6         test rsi, rsi
0x000081bd      48894c2430     mov qword [rsp + 0x30], rcx
0x000081c2      c704240a0000.  mov dword [rsp], 0xa
0x000081c9      660f6f057f40.  movdqa xmm0, xmmword [0x0020c250]
0x000081d1      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x000081d6      660f6f058240.  movdqa xmm0, xmmword [0x0020c260]
0x000081de      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x000081e3      7432           je 0x8217
0x000081e5      4885d2         test rdx, rdx
0x000081e8      742d           je 0x8217
0x000081ea      4889742428     mov qword [rsp + 0x28], rsi
0x000081ef      4889542430     mov qword [rsp + 0x30], rdx
0x000081f4      4889e1         mov rcx, rsp
0x000081f7      4c89c2         mov rdx, r8
0x000081fa      4c89ce         mov rsi, r9
0x000081fd      e88ef7ffff     call sym.quotearg_n_options
0x00008202      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00008207      6448333c2528.  xor rdi, qword fs:[0x28]
0x00008210      750a           jne 0x821c
0x00008212      4883c448       add rsp, 0x48
0x00008216      c3             ret
0x00008217      e8a493ffff     call sym.imp.abort
0x0000821c      e86f94ffff     call sym.imp.__stack_chk_fail
0x00008221      0f1f440000     nop dword [rax + rax]
0x00008226      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00008230      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00008237      e954ffffff     jmp sym.quotearg_n_custom_mem
0x0000823c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00008240      4889d1         mov rcx, rdx
0x00008243      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000824a      4889f2         mov rdx, rsi
0x0000824d      4889fe         mov rsi, rdi
0x00008250      31ff           xor edi, edi
0x00008252      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00008257      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00008260      4989c8         mov r8, rcx
0x00008263      4889d1         mov rcx, rdx
0x00008266      4889f2         mov rdx, rsi
0x00008269      4889fe         mov rsi, rdi
0x0000826c      31ff           xor edi, edi
0x0000826e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00008273      0f1f00         nop dword [rax]
0x00008276      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00008280      488d0db93d20.  lea rcx, obj.quote_quoting_options      ; 0x20c040
0x00008287      e904f7ffff     jmp sym.quotearg_n_options
0x0000828c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00008290      488d0da93d20.  lea rcx, obj.quote_quoting_options      ; 0x20c040
0x00008297      4889f2         mov rdx, rsi
0x0000829a      4889fe         mov rsi, rdi
0x0000829d      31ff           xor edi, edi
0x0000829f      e9ecf6ffff     jmp sym.quotearg_n_options
0x000082a4      6690           nop
0x000082a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x000082b0      488d0d893d20.  lea rcx, obj.quote_quoting_options      ; 0x20c040
0x000082b7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000082be      e9cdf6ffff     jmp sym.quotearg_n_options
0x000082c3      0f1f00         nop dword [rax]
0x000082c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x000082d0      488d0d693d20.  lea rcx, obj.quote_quoting_options      ; 0x20c040
0x000082d7      4889fe         mov rsi, rdi
0x000082da      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000082e1      31ff           xor edi, edi
0x000082e3      e9a8f6ffff     jmp sym.quotearg_n_options
0x000082e8      0f1f84000000.  nop dword [rax + rax]
;-- dup_safer:
0x000082f0      ba03000000     mov edx, 3                              ; ../coreutils-8.31/lib/dup-safer.c:32
0x000082f5      31f6           xor esi, esi
0x000082f7      31c0           xor eax, eax
0x000082f9      e932090000     jmp sym.rpl_fcntl
0x000082fe      6690           nop                                     ; ../coreutils-8.31/lib/dup-safer.c:33
;-- version_etc_arn:
0x00008300      4157           push r15
0x00008302      4156           push r14
0x00008304      4155           push r13
0x00008306      4154           push r12
0x00008308      4d89cc         mov r12, r9
0x0000830b      55             push rbp
0x0000830c      53             push rbx
0x0000830d      4889fd         mov rbp, rdi
0x00008310      4c89c3         mov rbx, r8
0x00008313      4883ec28       sub rsp, 0x28
0x00008317      4885f6         test rsi, rsi
0x0000831a      0f8418010000   je 0x8438
0x00008320      4989d0         mov r8, rdx
0x00008323      488d15be1f00.  lea rdx, [0x0000a2e8]                   ; "%s (%s) %s\n"
0x0000832a      4989c9         mov r9, rcx
0x0000832d      31c0           xor eax, eax
0x0000832f      4889f1         mov rcx, rsi
0x00008332      be01000000     mov esi, 1
0x00008337      e86495ffff     call sym.imp.__fprintf_chk
0x0000833c      488d35b81f00.  lea rsi, [0x0000a2fb]                   ; "(C)"
0x00008343      31ff           xor edi, edi
0x00008345      ba05000000     mov edx, 5
0x0000834a      e81193ffff     call sym.imp.dcgettext
0x0000834f      488d15ca2200.  lea rdx, obj.version_etc_copyright      ; 0xa620 ; "Copyright %s %d Free Software Foundation, Inc."
0x00008356      4889c1         mov rcx, rax
0x00008359      41b8e3070000   mov r8d, 0x7e3
0x0000835f      be01000000     mov esi, 1
0x00008364      4889ef         mov rdi, rbp
0x00008367      31c0           xor eax, eax
0x00008369      e83295ffff     call sym.imp.__fprintf_chk
0x0000836e      488d35132000.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0xa388 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00008375      31ff           xor edi, edi
0x00008377      ba05000000     mov edx, 5
0x0000837c      e8df92ffff     call sym.imp.dcgettext
0x00008381      4889ee         mov rsi, rbp
0x00008384      4889c7         mov rdi, rax
0x00008387      e8b493ffff     call sym.imp.fputs_unlocked
0x0000838c      4983fc09       cmp r12, 9
0x00008390      0f873a030000   ja 0x86d0
0x00008396      488d154b2200.  lea rdx, [0x0000a5e8]
0x0000839d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x000083a1      4801d0         add rax, rdx
0x000083a4      ffe0           jmp rax
0x000083a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000083b0      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000083b4      488b4310       mov rax, qword [rbx + 0x10]
0x000083b8      488d35392100.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0xa4f8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x000083bf      4c8b4308       mov r8, qword [rbx + 8]
0x000083c3      ba05000000     mov edx, 5
0x000083c8      31ff           xor edi, edi
0x000083ca      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000083ce      4c8b6328       mov r12, qword [rbx + 0x28]
0x000083d2      4c894c2410     mov qword [rsp + 0x10], r9
0x000083d7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000083db      4c8b7318       mov r14, qword [rbx + 0x18]
0x000083df      48890424       mov qword [rsp], rax
0x000083e3      4c89442408     mov qword [rsp + 8], r8
0x000083e8      488b1b         mov rbx, qword [rbx]
0x000083eb      e87092ffff     call sym.imp.dcgettext
0x000083f0      4883ec08       sub rsp, 8
0x000083f4      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x000083f9      4889c2         mov rdx, rax
0x000083fc      4889d9         mov rcx, rbx
0x000083ff      be01000000     mov esi, 1
0x00008404      4889ef         mov rdi, rbp
0x00008407      31c0           xor eax, eax
0x00008409      4151           push r9
0x0000840b      4155           push r13
0x0000840d      4154           push r12
0x0000840f      4157           push r15
0x00008411      4156           push r14
0x00008413      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00008418      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000841d      e87e94ffff     call sym.imp.__fprintf_chk
0x00008422      4883c430       add rsp, 0x30
0x00008426      4883c428       add rsp, 0x28
0x0000842a      5b             pop rbx
0x0000842b      5d             pop rbp
0x0000842c      415c           pop r12
0x0000842e      415d           pop r13
0x00008430      415e           pop r14
0x00008432      415f           pop r15
0x00008434      c3             ret
0x00008435      0f1f00         nop dword [rax]
0x00008438      4989c8         mov r8, rcx
0x0000843b      4889d1         mov rcx, rdx
0x0000843e      488d15af1e00.  lea rdx, str.s__s                       ; 0xa2f4 ; "%s %s\n"
0x00008445      be01000000     mov esi, 1
0x0000844a      31c0           xor eax, eax
0x0000844c      e84f94ffff     call sym.imp.__fprintf_chk
0x00008451      e9e6feffff     jmp 0x833c
0x00008456      662e0f1f8400.  nop word cs:[rax + rax]
0x00008460      4c8b5340       mov r10, qword [rbx + 0x40]
0x00008464      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00008468      488d35b92000.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0xa528 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x0000846f      488b4310       mov rax, qword [rbx + 0x10]
0x00008473      4c8b4308       mov r8, qword [rbx + 8]
0x00008477      ba05000000     mov edx, 5
0x0000847c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00008480      4c8b6328       mov r12, qword [rbx + 0x28]
0x00008484      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00008488      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000848c      488b1b         mov rbx, qword [rbx]
0x0000848f      4c89542418     mov qword [rsp + 0x18], r10
0x00008494      4c894c2410     mov qword [rsp + 0x10], r9
0x00008499      48890424       mov qword [rsp], rax
0x0000849d      4c89442408     mov qword [rsp + 8], r8
0x000084a2      31ff           xor edi, edi
0x000084a4      e8b791ffff     call sym.imp.dcgettext
0x000084a9      4c8b542418     mov r10, qword [rsp + 0x18]
0x000084ae      4152           push r10
0x000084b0      e93fffffff     jmp 0x83f4
0x000084b5      0f1f00         nop dword [rax]
0x000084b8      488b1b         mov rbx, qword [rbx]
0x000084bb      488d353d1e00.  lea rsi, str.Written_by__s.             ; 0xa2ff ; "Written by %s.\n"
0x000084c2      ba05000000     mov edx, 5
0x000084c7      31ff           xor edi, edi
0x000084c9      e89291ffff     call sym.imp.dcgettext
0x000084ce      4883c428       add rsp, 0x28
0x000084d2      4889d9         mov rcx, rbx
0x000084d5      4889ef         mov rdi, rbp
0x000084d8      5b             pop rbx
0x000084d9      5d             pop rbp
0x000084da      415c           pop r12
0x000084dc      415d           pop r13
0x000084de      415e           pop r14
0x000084e0      415f           pop r15
0x000084e2      4889c2         mov rdx, rax
0x000084e5      be01000000     mov esi, 1
0x000084ea      31c0           xor eax, eax
0x000084ec      e9af93ffff     jmp sym.imp.__fprintf_chk
0x000084f1      0f1f80000000.  nop dword [rax]
0x000084f8      4c8b6308       mov r12, qword [rbx + 8]
0x000084fc      488d350c1e00.  lea rsi, str.Written_by__s_and__s.      ; 0xa30f ; "Written by %s and %s.\n"
0x00008503      488b1b         mov rbx, qword [rbx]
0x00008506      ba05000000     mov edx, 5
0x0000850b      31ff           xor edi, edi
0x0000850d      e84e91ffff     call sym.imp.dcgettext
0x00008512      4883c428       add rsp, 0x28
0x00008516      4d89e0         mov r8, r12
0x00008519      4889d9         mov rcx, rbx
0x0000851c      4889ef         mov rdi, rbp
0x0000851f      4889c2         mov rdx, rax
0x00008522      be01000000     mov esi, 1
0x00008527      5b             pop rbx
0x00008528      5d             pop rbp
0x00008529      415c           pop r12
0x0000852b      415d           pop r13
0x0000852d      415e           pop r14
0x0000852f      415f           pop r15
0x00008531      31c0           xor eax, eax
0x00008533      e96893ffff     jmp sym.imp.__fprintf_chk
0x00008538      0f1f84000000.  nop dword [rax + rax]
0x00008540      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00008544      4c8b6308       mov r12, qword [rbx + 8]
0x00008548      488d35d71d00.  lea rsi, str.Written_by__s___s__and__s. ; 0xa326 ; "Written by %s, %s, and %s.\n"
0x0000854f      488b1b         mov rbx, qword [rbx]
0x00008552      ba05000000     mov edx, 5
0x00008557      31ff           xor edi, edi
0x00008559      e80291ffff     call sym.imp.dcgettext
0x0000855e      4883c428       add rsp, 0x28
0x00008562      4d89e9         mov r9, r13
0x00008565      4d89e0         mov r8, r12
0x00008568      4889d9         mov rcx, rbx
0x0000856b      4889ef         mov rdi, rbp
0x0000856e      4889c2         mov rdx, rax
0x00008571      5b             pop rbx
0x00008572      5d             pop rbp
0x00008573      415c           pop r12
0x00008575      415d           pop r13
0x00008577      415e           pop r14
0x00008579      415f           pop r15
0x0000857b      be01000000     mov esi, 1
0x00008580      31c0           xor eax, eax
0x00008582      e91993ffff     jmp sym.imp.__fprintf_chk
0x00008587      660f1f840000.  nop word [rax + rax]
0x00008590      488d35c11e00.  lea rsi, str.Written_by__s___s___s___and__s. ; 0xa458 ; "Written by %s, %s, %s,\nand %s.\n"
0x00008597      ba05000000     mov edx, 5
0x0000859c      31ff           xor edi, edi
0x0000859e      4c8b7318       mov r14, qword [rbx + 0x18]
0x000085a2      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000085a6      4c8b6308       mov r12, qword [rbx + 8]
0x000085aa      488b1b         mov rbx, qword [rbx]
0x000085ad      e8ae90ffff     call sym.imp.dcgettext
0x000085b2      4883ec08       sub rsp, 8
0x000085b6      4156           push r14
0x000085b8      4889c2         mov rdx, rax
0x000085bb      4d89e9         mov r9, r13
0x000085be      4d89e0         mov r8, r12
0x000085c1      4889d9         mov rcx, rbx
0x000085c4      4889ef         mov rdi, rbp
0x000085c7      be01000000     mov esi, 1
0x000085cc      31c0           xor eax, eax
0x000085ce      e8cd92ffff     call sym.imp.__fprintf_chk
0x000085d3      58             pop rax
0x000085d4      5a             pop rdx
0x000085d5      4883c428       add rsp, 0x28
0x000085d9      5b             pop rbx
0x000085da      5d             pop rbp
0x000085db      415c           pop r12
0x000085dd      415d           pop r13
0x000085df      415e           pop r14
0x000085e1      415f           pop r15
0x000085e3      c3             ret
0x000085e4      0f1f4000       nop dword [rax]
0x000085e8      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000085ec      488d35851e00.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0xa478 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x000085f3      ba05000000     mov edx, 5
0x000085f8      31ff           xor edi, edi
0x000085fa      4c8b7318       mov r14, qword [rbx + 0x18]
0x000085fe      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00008602      4c8b6308       mov r12, qword [rbx + 8]
0x00008606      488b1b         mov rbx, qword [rbx]
0x00008609      e85290ffff     call sym.imp.dcgettext
0x0000860e      4157           push r15
0x00008610      eba4           jmp 0x85b6
0x00008612      660f1f440000   nop word [rax + rax]
0x00008618      4c8b4308       mov r8, qword [rbx + 8]
0x0000861c      4c8b6328       mov r12, qword [rbx + 0x28]
0x00008620      488d35791e00.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0xa4a0 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00008627      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000862b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000862f      ba05000000     mov edx, 5
0x00008634      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00008638      31ff           xor edi, edi
0x0000863a      488b1b         mov rbx, qword [rbx]
0x0000863d      4c890424       mov qword [rsp], r8
0x00008641      e81a90ffff     call sym.imp.dcgettext
0x00008646      4883ec08       sub rsp, 8
0x0000864a      4d89e9         mov r9, r13
0x0000864d      4154           push r12
0x0000864f      4157           push r15
0x00008651      4156           push r14
0x00008653      4c8b442420     mov r8, qword [rsp + 0x20]
0x00008658      4889d9         mov rcx, rbx
0x0000865b      4889c2         mov rdx, rax
0x0000865e      4889ef         mov rdi, rbp
0x00008661      be01000000     mov esi, 1
0x00008666      31c0           xor eax, eax
0x00008668      e83392ffff     call sym.imp.__fprintf_chk
0x0000866d      4883c420       add rsp, 0x20
0x00008671      4883c428       add rsp, 0x28
0x00008675      5b             pop rbx
0x00008676      5d             pop rbp
0x00008677      415c           pop r12
0x00008679      415d           pop r13
0x0000867b      415e           pop r14
0x0000867d      415f           pop r15
0x0000867f      c3             ret
0x00008680      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00008684      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00008688      488d35391e00.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0xa4c8 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x0000868f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00008693      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00008697      ba05000000     mov edx, 5
0x0000869c      4c8b7318       mov r14, qword [rbx + 0x18]
0x000086a0      4c8b4308       mov r8, qword [rbx + 8]
0x000086a4      31ff           xor edi, edi
0x000086a6      4c894c2408     mov qword [rsp + 8], r9
0x000086ab      488b1b         mov rbx, qword [rbx]
0x000086ae      4c890424       mov qword [rsp], r8
0x000086b2      e8a98fffff     call sym.imp.dcgettext
0x000086b7      4155           push r13
0x000086b9      4154           push r12
0x000086bb      4157           push r15
0x000086bd      4156           push r14
0x000086bf      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x000086c4      eb8d           jmp 0x8653
0x000086c6      662e0f1f8400.  nop word cs:[rax + rax]
0x000086d0      4c8b5340       mov r10, qword [rbx + 0x40]
0x000086d4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000086d8      ba05000000     mov edx, 5
0x000086dd      488b4310       mov rax, qword [rbx + 0x10]
0x000086e1      4c8b4308       mov r8, qword [rbx + 8]
0x000086e5      488d35741e00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0xa560 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x000086ec      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000086f0      4c8b6328       mov r12, qword [rbx + 0x28]
0x000086f4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000086f8      4c8b7318       mov r14, qword [rbx + 0x18]
0x000086fc      4c89542418     mov qword [rsp + 0x18], r10
0x00008701      4c894c2410     mov qword [rsp + 0x10], r9
0x00008706      48890424       mov qword [rsp], rax
0x0000870a      4c89442408     mov qword [rsp + 8], r8
0x0000870f      488b1b         mov rbx, qword [rbx]
0x00008712      e98bfdffff     jmp 0x84a2
0x00008717      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00008720      4531c9         xor r9d, r9d
0x00008723      49833800       cmp qword [r8], 0
0x00008727      7412           je 0x873b
0x00008729      0f1f80000000.  nop dword [rax]
0x00008730      4983c101       add r9, 1
0x00008734      4b833cc800     cmp qword [r8 + r9*8], 0
0x00008739      75f5           jne 0x8730
0x0000873b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00008740      4883ec68       sub rsp, 0x68
0x00008744      4d89c2         mov r10, r8
0x00008747      4531c9         xor r9d, r9d
0x0000874a      64488b042528.  mov rax, qword fs:[0x28]
0x00008753      4889442458     mov qword [rsp + 0x58], rax
0x00008758      31c0           xor eax, eax
0x0000875a      4989e0         mov r8, rsp
0x0000875d      0f1f00         nop dword [rax]
0x00008760      418b02         mov eax, dword [r10]
0x00008763      83f82f         cmp eax, 0x2f
0x00008766      7742           ja 0x87aa
0x00008768      4189c3         mov r11d, eax
0x0000876b      4d035a10       add r11, qword [r10 + 0x10]
0x0000876f      83c008         add eax, 8
0x00008772      418902         mov dword [r10], eax
0x00008775      498b03         mov rax, qword [r11]
0x00008778      4885c0         test rax, rax
0x0000877b      4b8904c8       mov qword [r8 + r9*8], rax
0x0000877f      740a           je 0x878b
0x00008781      4983c101       add r9, 1
0x00008785      4983f90a       cmp r9, 0xa
0x00008789      75d5           jne 0x8760
0x0000878b      e870fbffff     call sym.version_etc_arn
0x00008790      488b442458     mov rax, qword [rsp + 0x58]
0x00008795      644833042528.  xor rax, qword fs:[0x28]
0x0000879e      7505           jne 0x87a5
0x000087a0      4883c468       add rsp, 0x68
0x000087a4      c3             ret
0x000087a5      e8e68effff     call sym.imp.__stack_chk_fail
0x000087aa      4d8b5a08       mov r11, qword [r10 + 8]
0x000087ae      498d4308       lea rax, [r11 + 8]
0x000087b2      49894208       mov qword [r10 + 8], rax
0x000087b6      ebbd           jmp 0x8775
0x000087b8      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x000087c0      55             push rbp
0x000087c1      53             push rbx
0x000087c2      41ba20000000   mov r10d, 0x20                          ; "@"
0x000087c8      4531db         xor r11d, r11d
0x000087cb      4881ecb80000.  sub rsp, 0xb8
0x000087d2      64488b042528.  mov rax, qword fs:[0x28]
0x000087db      4889442478     mov qword [rsp + 0x78], rax
0x000087e0      31c0           xor eax, eax
0x000087e2      488d8424d000.  lea rax, [rsp + 0xd0]
0x000087ea      4c898424a000.  mov qword [rsp + 0xa0], r8
0x000087f2      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x000087fa      4c8d442420     lea r8, [rsp + 0x20]
0x000087ff      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00008807      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x0000880f      4889442410     mov qword [rsp + 0x10], rax
0x00008814      488d84248000.  lea rax, [rsp + 0x80]
0x0000881c      4531c9         xor r9d, r9d
0x0000881f      4889442418     mov qword [rsp + 0x18], rax
0x00008824      4889c5         mov rbp, rax
0x00008827      660f1f840000.  nop word [rax + rax]
0x00008830      4183fa2f       cmp r10d, 0x2f
0x00008834      7756           ja 0x888c
0x00008836      4489d0         mov eax, r10d
0x00008839      41bb01000000   mov r11d, 1
0x0000883f      4183c208       add r10d, 8
0x00008843      4801e8         add rax, rbp
0x00008846      488b00         mov rax, qword [rax]
0x00008849      4885c0         test rax, rax
0x0000884c      4b8904c8       mov qword [r8 + r9*8], rax
0x00008850      740a           je 0x885c
0x00008852      4983c101       add r9, 1
0x00008856      4983f90a       cmp r9, 0xa
0x0000885a      75d4           jne 0x8830
0x0000885c      4584db         test r11b, r11b
0x0000885f      7524           jne 0x8885
0x00008861      e89afaffff     call sym.version_etc_arn
0x00008866      488b442478     mov rax, qword [rsp + 0x78]
0x0000886b      644833042528.  xor rax, qword fs:[0x28]
0x00008874      750a           jne 0x8880
0x00008876      4881c4b80000.  add rsp, 0xb8
0x0000887d      5b             pop rbx
0x0000887e      5d             pop rbp
0x0000887f      c3             ret
0x00008880      e80b8effff     call sym.imp.__stack_chk_fail
0x00008885      4489542408     mov dword [rsp + 8], r10d
0x0000888a      ebd5           jmp 0x8861
0x0000888c      4889d8         mov rax, rbx
0x0000888f      4883c308       add rbx, 8
0x00008893      ebb1           jmp 0x8846
0x00008895      90             nop
0x00008896      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x000088a0      53             push rbx
0x000088a1      488d359a1a00.  lea rsi, str.Report_bugs_to:__s         ; 0xa342 ; "\nReport bugs to: %s\n"
0x000088a8      ba05000000     mov edx, 5
0x000088ad      31ff           xor edi, edi
0x000088af      e8ac8dffff     call sym.imp.dcgettext
0x000088b4      488d159c1a00.  lea rdx, str.bug_coreutils_gnu.org      ; 0xa357 ; "bug-coreutils@gnu.org"
0x000088bb      4889c6         mov rsi, rax
0x000088be      bf01000000     mov edi, 1
0x000088c3      31c0           xor eax, eax
0x000088c5      e8468fffff     call sym.imp.__printf_chk
0x000088ca      488d359c1a00.  lea rsi, str.s_home_page:___s           ; 0xa36d ; "%s home page: <%s>\n"
0x000088d1      ba05000000     mov edx, 5
0x000088d6      31ff           xor edi, edi
0x000088d8      e8838dffff     call sym.imp.dcgettext
0x000088dd      488d0df40f00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x98d8 ; "https://www.gnu.org/software/coreutils/"
0x000088e4      488d15470900.  lea rdx, str.GNU_coreutils              ; 0x9232 ; "GNU coreutils"
0x000088eb      4889c6         mov rsi, rax
0x000088ee      bf01000000     mov edi, 1
0x000088f3      31c0           xor eax, eax
0x000088f5      e8168fffff     call sym.imp.__printf_chk
0x000088fa      488b1da73720.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c0a8:8]=0
0x00008901      488d35981c00.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0xa5a0 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00008908      31ff           xor edi, edi
0x0000890a      ba05000000     mov edx, 5
0x0000890f      e84c8dffff     call sym.imp.dcgettext
0x00008914      4889de         mov rsi, rbx
0x00008917      4889c7         mov rdi, rax
0x0000891a      5b             pop rbx
0x0000891b      e9208effff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00008920      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00008921      4889fb         mov rbx, rdi
0x00008924      e8678effff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00008929      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x0000892c      7505           jne 0x8933
0x0000892e      4885db         test rbx, rbx
0x00008931      7502           jne 0x8935
0x00008933      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00008934      c3             ret
0x00008935      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x0000893a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00008940      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00008943      48f7e6         mul rsi
0x00008946      4889c7         mov rdi, rax
0x00008949      0f90c0         seto al
0x0000894c      4885ff         test rdi, rdi
0x0000894f      780a           js 0x895b
0x00008951      0fb6c0         movzx eax, al
0x00008954      4885c0         test rax, rax
0x00008957      7502           jne 0x895b
0x00008959      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x0000895b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x0000895f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00008964      6690           nop
0x00008966      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00008970      ebae           jmp sym.xmalloc
0x00008972      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00008976      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00008980      4885f6         test rsi, rsi
0x00008983      53             push rbx
0x00008984      4889f3         mov rbx, rsi
0x00008987      7505           jne 0x898e
0x00008989      4885ff         test rdi, rdi
0x0000898c      751a           jne 0x89a8
0x0000898e      4889de         mov rsi, rbx
0x00008991      e84a8effff     call sym.imp.realloc
0x00008996      4885c0         test rax, rax
0x00008999      7505           jne 0x89a0
0x0000899b      4885db         test rbx, rbx
0x0000899e      7511           jne 0x89b1                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x000089a0      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x000089a1      c3             ret
0x000089a2      660f1f440000   nop word [rax + rax]
0x000089a8      e8038cffff     call sym.imp.free
0x000089ad      31c0           xor eax, eax
0x000089af      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x000089b0      c3             ret
0x000089b1      e8ba010000     call sym.xalloc_die
0x000089b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x000089c0      4889f0         mov rax, rsi
0x000089c3      48f7e2         mul rdx
0x000089c6      4889c6         mov rsi, rax
0x000089c9      0f90c0         seto al
0x000089cc      4885f6         test rsi, rsi
0x000089cf      780a           js 0x89db
0x000089d1      0fb6c0         movzx eax, al
0x000089d4      4885c0         test rax, rax
0x000089d7      7502           jne 0x89db
0x000089d9      eba5           jmp sym.xrealloc
0x000089db      4883ec08       sub rsp, 8
0x000089df      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x000089e4      6690           nop
0x000089e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x000089f0      4885ff         test rdi, rdi
0x000089f3      4989d1         mov r9, rdx
0x000089f6      488b0e         mov rcx, qword [rsi]
0x000089f9      7435           je 0x8a30
0x000089fb      31d2           xor edx, edx
0x000089fd      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00008a07      49f7f1         div r9
0x00008a0a      4839c8         cmp rax, rcx
0x00008a0d      763c           jbe 0x8a4b
0x00008a0f      4889c8         mov rax, rcx
0x00008a12      48d1e8         shr rax, 1
0x00008a15      488d4c0801     lea rcx, [rax + rcx + 1]
0x00008a1a      48890e         mov qword [rsi], rcx
0x00008a1d      490fafc9       imul rcx, r9
0x00008a21      4889ce         mov rsi, rcx
0x00008a24      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00008a29      0f1f80000000.  nop dword [rax]
0x00008a30      4885c9         test rcx, rcx
0x00008a33      7423           je 0x8a58
0x00008a35      4889c8         mov rax, rcx
0x00008a38      49f7e1         mul r9
0x00008a3b      0f90c2         seto dl
0x00008a3e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00008a41      0fb6d2         movzx edx, dl
0x00008a44      7805           js 0x8a4b
0x00008a46      4885d2         test rdx, rdx
0x00008a49      74cf           je 0x8a1a
0x00008a4b      4883ec08       sub rsp, 8
0x00008a4f      e81c010000     call sym.xalloc_die
0x00008a54      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00008a58      31d2           xor edx, edx
0x00008a5a      b880000000     mov eax, 0x80
0x00008a5f      4531c0         xor r8d, r8d
0x00008a62      49f7f1         div r9
0x00008a65      4885c0         test rax, rax
0x00008a68      410f94c0       sete r8b
0x00008a6c      498d0c00       lea rcx, [r8 + rax]
0x00008a70      ebc3           jmp 0x8a35
0x00008a72      0f1f4000       nop dword [rax]
0x00008a76      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00008a80      4885ff         test rdi, rdi
0x00008a83      488b06         mov rax, qword [rsi]
0x00008a86      7428           je 0x8ab0
0x00008a88      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00008a92      4839d0         cmp rax, rdx
0x00008a95      772a           ja 0x8ac1
0x00008a97      4889c2         mov rdx, rax
0x00008a9a      48d1ea         shr rdx, 1
0x00008a9d      488d440201     lea rax, [rdx + rax + 1]
0x00008aa2      488906         mov qword [rsi], rax
0x00008aa5      4889c6         mov rsi, rax
0x00008aa8      e9d3feffff     jmp sym.xrealloc
0x00008aad      0f1f00         nop dword [rax]
0x00008ab0      4885c0         test rax, rax
0x00008ab3      ba80000000     mov edx, 0x80
0x00008ab8      480f44c2       cmove rax, rdx
0x00008abc      4885c0         test rax, rax
0x00008abf      79e1           jns 0x8aa2
0x00008ac1      4883ec08       sub rsp, 8
0x00008ac5      e8a6000000     call sym.xalloc_die
0x00008aca      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00008ad0      53             push rbx
0x00008ad1      4889fb         mov rbx, rdi
0x00008ad4      e847feffff     call sym.xmalloc
0x00008ad9      4889da         mov rdx, rbx
0x00008adc      31f6           xor esi, esi
0x00008ade      4889c7         mov rdi, rax
0x00008ae1      5b             pop rbx
0x00008ae2      e9198cffff     jmp sym.imp.memset
0x00008ae7      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00008af0      4889f8         mov rax, rdi
0x00008af3      4883ec08       sub rsp, 8
0x00008af7      48f7e6         mul rsi
0x00008afa      0f90c2         seto dl
0x00008afd      4885c0         test rax, rax
0x00008b00      7817           js 0x8b19
0x00008b02      0fb6d2         movzx edx, dl
0x00008b05      4885d2         test rdx, rdx
0x00008b08      750f           jne 0x8b19
0x00008b0a      e8418cffff     call sym.imp.calloc
0x00008b0f      4885c0         test rax, rax
0x00008b12      7405           je 0x8b19
0x00008b14      4883c408       add rsp, 8
0x00008b18      c3             ret
0x00008b19      e852000000     call sym.xalloc_die
0x00008b1e      6690           nop
;-- xmemdup:
0x00008b20      55             push rbp
0x00008b21      53             push rbx
0x00008b22      4889fd         mov rbp, rdi
0x00008b25      4889f7         mov rdi, rsi
0x00008b28      4889f3         mov rbx, rsi
0x00008b2b      4883ec08       sub rsp, 8
0x00008b2f      e8ecfdffff     call sym.xmalloc
0x00008b34      4883c408       add rsp, 8
0x00008b38      4889da         mov rdx, rbx
0x00008b3b      4889ee         mov rsi, rbp
0x00008b3e      5b             pop rbx
0x00008b3f      5d             pop rbp
0x00008b40      4889c7         mov rdi, rax
0x00008b43      e9288cffff     jmp sym.imp.memcpy
0x00008b48      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00008b50      53             push rbx
0x00008b51      4889fb         mov rbx, rdi
0x00008b54      e8278bffff     call sym.imp.strlen
0x00008b59      4889df         mov rdi, rbx
0x00008b5c      488d7001       lea rsi, [rax + 1]
0x00008b60      5b             pop rbx
0x00008b61      ebbd           jmp sym.xmemdup
0x00008b63      662e0f1f8400.  nop word cs:[rax + rax]
0x00008b6d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00008b70      488d35d81a00.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0xa64f ; "memory exhausted"
0x00008b77      4883ec08       sub rsp, 8
0x00008b7b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00008b80      31ff           xor edi, edi
0x00008b82      e8d98affff     call sym.imp.dcgettext
0x00008b87      8b3d93342000   mov edi, dword [obj.exit_failure]       ; [0x20c020:4]=1
0x00008b8d      488d15e11100.  lea rdx, [0x00009d75]                   ; "%s"
0x00008b94      4889c1         mov rcx, rax
0x00008b97      31f6           xor esi, esi
0x00008b99      31c0           xor eax, eax
0x00008b9b      e8908cffff     call sym.imp.error
0x00008ba0      e81b8affff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00008ba5      662e0f1f8400.  nop word cs:[rax + rax]
0x00008baf      90             nop
;-- rpl_fclose:
0x00008bb0      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00008bb2      55             push rbp
0x00008bb3      53             push rbx
0x00008bb4      4889fb         mov rbx, rdi
0x00008bb7      e8c48bffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x00008bbc      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x00008bbe      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00008bc1      7854           js 0x8c17                               ; ../coreutils-8.31/lib/fclose.c:66
0x00008bc3      e8f88bffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00008bc8      85c0           test eax, eax
0x00008bca      752c           jne 0x8bf8
0x00008bcc      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x00008bcf      e8dc020000     call sym.rpl_fflush
0x00008bd4      85c0           test eax, eax
0x00008bd6      743c           je 0x8c14
0x00008bd8      e8f389ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x00008bdd      448b20         mov r12d, dword [rax]
0x00008be0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00008be3      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00008be6      e8558affff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x00008beb      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x00008bee      7530           jne 0x8c20
0x00008bf0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00008bf1      5d             pop rbp
0x00008bf2      415c           pop r12
0x00008bf4      c3             ret
0x00008bf5      0f1f00         nop dword [rax]
0x00008bf8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x00008bfb      e8808bffff     call sym.imp.fileno
0x00008c00      31f6           xor esi, esi
0x00008c02      ba01000000     mov edx, 1
0x00008c07      89c7           mov edi, eax
0x00008c09      e8e28affff     call sym.imp.lseek
0x00008c0e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00008c12      75b8           jne 0x8bcc
0x00008c14      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00008c17      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00008c18      5d             pop rbp
0x00008c19      415c           pop r12
0x00008c1b      e9208affff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00008c20      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00008c24      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00008c29      ebc5           jmp 0x8bf0
0x00008c2b      0f1f440000     nop dword [rax + rax]
;-- rpl_fcntl:
0x00008c30      4154           push r12                                ; ../coreutils-8.31/lib/fcntl.c:206
0x00008c32      55             push rbp
0x00008c33      89fd           mov ebp, edi
0x00008c35      53             push rbx
0x00008c36      4883ec50       sub rsp, 0x50
0x00008c3a      64488b042528.  mov rax, qword fs:[0x28]
0x00008c43      4889442418     mov qword [rsp + 0x18], rax
0x00008c48      31c0           xor eax, eax
0x00008c4a      488d442470     lea rax, [rsp + 0x70]                   ; ../coreutils-8.31/lib/fcntl.c:209
0x00008c4f      85f6           test esi, esi                           ; ../coreutils-8.31/lib/fcntl.c:210
0x00008c51      4889542430     mov qword [rsp + 0x30], rdx             ; ../coreutils-8.31/lib/fcntl.c:206
0x00008c56      48894c2438     mov qword [rsp + 0x38], rcx
0x00008c5b      4c89442440     mov qword [rsp + 0x40], r8
0x00008c60      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/fcntl.c:209
0x00008c65      488d442420     lea rax, [rsp + 0x20]
0x00008c6a      4c894c2448     mov qword [rsp + 0x48], r9              ; ../coreutils-8.31/lib/fcntl.c:206
0x00008c6f      c70424100000.  mov dword [rsp], 0x10                   ; ../coreutils-8.31/lib/fcntl.c:209 ; [0x10:4]=0x3e0003
0x00008c76      4889442410     mov qword [rsp + 0x10], rax
0x00008c7b      0f8401020000   je 0x8e82                               ; ../coreutils-8.31/lib/fcntl.c:210
0x00008c81      81fe06040000   cmp esi, 0x406
0x00008c87      7547           jne 0x8cd0
0x00008c89      488b442410     mov rax, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/fcntl.c:221
0x00008c8e      833de3352000.  cmp dword [obj.have_dupfd_cloexec.3326], 0 ; ../coreutils-8.31/lib/fcntl.c:507 ; [0x20c278:4]=0
0x00008c95      c70424180000.  mov dword [rsp], 0x18                   ; ../coreutils-8.31/lib/fcntl.c:221 ; [0x18:4]=0x2a40 rip
0x00008c9c      448b6010       mov r12d, dword [rax + 0x10]
0x00008ca0      4489e2         mov edx, r12d                           ; ../coreutils-8.31/lib/fcntl.c:509
0x00008ca3      0f882a010000   js 0x8dd3                               ; ../coreutils-8.31/lib/fcntl.c:507
0x00008ca9      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x00008cab      be06040000     mov esi, 0x406
0x00008cb0      e85b89ffff     call sym.imp.fcntl
0x00008cb5      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fcntl.c:510
0x00008cb7      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x00008cb9      0f8889010000   js 0x8e48                               ; ../coreutils-8.31/lib/fcntl.c:510
0x00008cbf      c705af352000.  mov dword [obj.have_dupfd_cloexec.3326], 1 ; ../coreutils-8.31/lib/fcntl.c:512 ; [0x20c278:4]=0
0x00008cc9      eb45           jmp 0x8d10
0x00008ccb      0f1f440000     nop dword [rax + rax]
0x00008cd0      83fe0b         cmp esi, 0xb                            ; ../coreutils-8.31/lib/fcntl.c:258
0x00008cd3      742b           je 0x8d00
0x00008cd5      7f59           jg 0x8d30
0x00008cd7      83fe04         cmp esi, 4
0x00008cda      0f84d0000000   je 0x8db0
0x00008ce0      0f8fba000000   jg 0x8da0
0x00008ce6      83fe02         cmp esi, 2
0x00008ce9      0f84c1000000   je 0x8db0
0x00008cef      7f0f           jg 0x8d00
0x00008cf1      83fe01         cmp esi, 1
0x00008cf4      7562           jne 0x8d58
0x00008cf6      662e0f1f8400.  nop word cs:[rax + rax]
0x00008d00      89ef           mov edi, ebp
0x00008d02      31c0           xor eax, eax
0x00008d04      e80789ffff     call sym.imp.fcntl
0x00008d09      89c3           mov ebx, eax
0x00008d0b      0f1f440000     nop dword [rax + rax]
0x00008d10      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00008d15      6448330c2528.  xor rcx, qword fs:[0x28]
0x00008d1e      89d8           mov eax, ebx
0x00008d20      0f8557010000   jne 0x8e7d                              ; ../coreutils-8.31/lib/fcntl.c:355
0x00008d26      4883c450       add rsp, 0x50
0x00008d2a      5b             pop rbx
0x00008d2b      5d             pop rbp
0x00008d2c      415c           pop r12
0x00008d2e      c3             ret
0x00008d2f      90             nop
0x00008d30      81fe07040000   cmp esi, 0x407
0x00008d36      7f48           jg 0x8d80
0x00008d38      81fe06040000   cmp esi, 0x406
0x00008d3e      7d70           jge 0x8db0
0x00008d40      81fe01040000   cmp esi, 0x401
0x00008d46      74b8           je 0x8d00
0x00008d48      81fe02040000   cmp esi, 0x402                          ; ../coreutils-8.31/lib/fcntl.c:183
0x00008d4e      7460           je 0x8db0
0x00008d50      81fe00040000   cmp esi, 0x400
0x00008d56      7458           je 0x8db0
0x00008d58      8b0424         mov eax, dword [rsp]
0x00008d5b      83f82f         cmp eax, 0x2f
0x00008d5e      0f8736010000   ja 0x8e9a
0x00008d64      4803442410     add rax, qword [rsp + 0x10]
0x00008d69      488b10         mov rdx, qword [rax]
0x00008d6c      89ef           mov edi, ebp
0x00008d6e      31c0           xor eax, eax
0x00008d70      e89b88ffff     call sym.imp.fcntl
0x00008d75      89c3           mov ebx, eax
0x00008d77      eb97           jmp 0x8d10
0x00008d79      0f1f80000000.  nop dword [rax]
0x00008d80      81fe09040000   cmp esi, 0x409
0x00008d86      7428           je 0x8db0
0x00008d88      0f8c72ffffff   jl 0x8d00
0x00008d8e      81fe0a040000   cmp esi, 0x40a
0x00008d94      75c2           jne 0x8d58
0x00008d96      e965ffffff     jmp 0x8d00                              ; ../coreutils-8.31/lib/fcntl.c:350
0x00008d9b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fcntl.c:406
0x00008da0      83fe09         cmp esi, 9
0x00008da3      0f8457ffffff   je 0x8d00
0x00008da9      7f05           jg 0x8db0
0x00008dab      83fe08         cmp esi, 8
0x00008dae      75a8           jne 0x8d58
0x00008db0      8b0424         mov eax, dword [rsp]
0x00008db3      83f82f         cmp eax, 0x2f
0x00008db6      0f87e8000000   ja 0x8ea4
0x00008dbc      4803442410     add rax, qword [rsp + 0x10]
0x00008dc1      8b10           mov edx, dword [rax]
0x00008dc3      89ef           mov edi, ebp
0x00008dc5      31c0           xor eax, eax
0x00008dc7      e84488ffff     call sym.imp.fcntl
0x00008dcc      89c3           mov ebx, eax
0x00008dce      e93dffffff     jmp 0x8d10
0x00008dd3      31f6           xor esi, esi
0x00008dd5      31c0           xor eax, eax
0x00008dd7      e83488ffff     call sym.imp.fcntl
0x00008ddc      85c0           test eax, eax
0x00008dde      89c3           mov ebx, eax
0x00008de0      0f882affffff   js 0x8d10
0x00008de6      833d8b342000.  cmp dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x20c278:4]=0
0x00008ded      0f851dffffff   jne 0x8d10
0x00008df3      31c0           xor eax, eax
0x00008df5      be01000000     mov esi, 1
0x00008dfa      89df           mov edi, ebx
0x00008dfc      e80f88ffff     call sym.imp.fcntl
0x00008e01      85c0           test eax, eax
0x00008e03      781c           js 0x8e21
0x00008e05      83c801         or eax, 1
0x00008e08      be02000000     mov esi, 2
0x00008e0d      89df           mov edi, ebx
0x00008e0f      89c2           mov edx, eax
0x00008e11      31c0           xor eax, eax
0x00008e13      e8f887ffff     call sym.imp.fcntl
0x00008e18      83f8ff         cmp eax, 0xffffffff
0x00008e1b      0f85effeffff   jne 0x8d10
0x00008e21      e8aa87ffff     call sym.imp.__errno_location
0x00008e26      448b20         mov r12d, dword [rax]
0x00008e29      4889c5         mov rbp, rax
0x00008e2c      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fcntl.c:446
0x00008e2e      e8dd88ffff     call sym.imp.close                      ; ../coreutils-8.31/lib/fcntl.c:406
0x00008e33      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x00008e38      44896500       mov dword [rbp], r12d
0x00008e3c      e9cffeffff     jmp 0x8d10
0x00008e41      0f1f80000000.  nop dword [rax]
0x00008e48      e88387ffff     call sym.imp.__errno_location
0x00008e4d      833816         cmp dword [rax], 0x16
0x00008e50      0f8569feffff   jne 0x8cbf
0x00008e56      31f6           xor esi, esi
0x00008e58      31c0           xor eax, eax
0x00008e5a      4489e2         mov edx, r12d
0x00008e5d      89ef           mov edi, ebp                            ; ../coreutils-8.31/lib/fcntl.c:141
0x00008e5f      e8ac87ffff     call sym.imp.fcntl
0x00008e64      85c0           test eax, eax
0x00008e66      89c3           mov ebx, eax
0x00008e68      0f88a2feffff   js 0x8d10
0x00008e6e      c70500342000.  mov dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x20c278:4]=0
0x00008e78      e976ffffff     jmp 0x8df3
0x00008e7d      e80e88ffff     call sym.imp.__stack_chk_fail
0x00008e82      488b442410     mov rax, qword [rsp + 0x10]
0x00008e87      31f6           xor esi, esi
0x00008e89      8b5010         mov edx, dword [rax + 0x10]
0x00008e8c      31c0           xor eax, eax
0x00008e8e      e87d87ffff     call sym.imp.fcntl
0x00008e93      89c3           mov ebx, eax
0x00008e95      e976feffff     jmp 0x8d10
0x00008e9a      488b442408     mov rax, qword [rsp + 8]
0x00008e9f      e9c5feffff     jmp 0x8d69
0x00008ea4      488b442408     mov rax, qword [rsp + 8]
0x00008ea9      e913ffffff     jmp 0x8dc1
0x00008eae      6690           nop
;-- rpl_fflush:
0x00008eb0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00008eb3      53             push rbx
0x00008eb4      4889fb         mov rbx, rdi
0x00008eb7      7411           je 0x8eca                               ; ../coreutils-8.31/lib/fflush.c:150
0x00008eb9      e80289ffff     call sym.imp.__freading
0x00008ebe      85c0           test eax, eax
0x00008ec0      7408           je 0x8eca
0x00008ec2      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00008ec8      750e           jne 0x8ed8
0x00008eca      4889df         mov rdi, rbx
0x00008ecd      5b             pop rbx
0x00008ece      e9cd88ffff     jmp sym.imp.fflush
0x00008ed3      0f1f440000     nop dword [rax + rax]
0x00008ed8      4889df         mov rdi, rbx
0x00008edb      ba01000000     mov edx, 1
0x00008ee0      31f6           xor esi, esi
0x00008ee2      e809000000     call sym.rpl_fseeko
0x00008ee7      4889df         mov rdi, rbx
0x00008eea      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x00008eeb      e9b088ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00008ef0      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00008ef4      48394710       cmp qword [rdi + 0x10], rax
0x00008ef8      7406           je 0x8f00                               ; ../coreutils-8.31/lib/fseeko.c:32
0x00008efa      e94189ffff     jmp sym.imp.fseeko
0x00008eff      90             nop
0x00008f00      488b4720       mov rax, qword [rdi + 0x20]
0x00008f04      48394728       cmp qword [rdi + 0x28], rax
0x00008f08      75f0           jne 0x8efa                              ; ../coreutils-8.31/lib/fseeko.c:33
0x00008f0a      48837f4800     cmp qword [rdi + 0x48], 0
0x00008f0f      75e9           jne 0x8efa                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00008f11      4154           push r12
0x00008f13      55             push rbp
0x00008f14      4189d4         mov r12d, edx
0x00008f17      53             push rbx
0x00008f18      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x00008f1b      4889fb         mov rbx, rdi
0x00008f1e      e85d88ffff     call sym.imp.fileno
0x00008f23      4489e2         mov edx, r12d
0x00008f26      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00008f29      89c7           mov edi, eax
0x00008f2b      e8c087ffff     call sym.imp.lseek
0x00008f30      4883f8ff       cmp rax, 0xffffffffffffffff
0x00008f34      740c           je 0x8f42
0x00008f36      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00008f39      488983900000.  mov qword [rbx + 0x90], rax
0x00008f40      31c0           xor eax, eax
0x00008f42      5b             pop rbx
0x00008f43      5d             pop rbp
0x00008f44      415c           pop r12
0x00008f46      c3             ret
0x00008f47      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x00008f50      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00008f52      4154           push r12
0x00008f54      4989f5         mov r13, rsi
0x00008f57      55             push rbp
0x00008f58      53             push rbx
0x00008f59      4889fb         mov rbx, rdi
0x00008f5c      4989d4         mov r12, rdx
0x00008f5f      4883ec18       sub rsp, 0x18
0x00008f63      64488b042528.  mov rax, qword fs:[0x28]
0x00008f6c      4889442408     mov qword [rsp + 8], rax
0x00008f71      31c0           xor eax, eax
0x00008f73      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00008f78      4885ff         test rdi, rdi
0x00008f7b      480f44d8       cmove rbx, rax
0x00008f7f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00008f82      e82987ffff     call sym.imp.mbrtowc
0x00008f87      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00008f8b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00008f8e      7620           jbe 0x8fb0                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00008f90      4d85e4         test r12, r12
0x00008f93      741b           je 0x8fb0
0x00008f95      31ff           xor edi, edi
0x00008f97      e8c4000000     call sym.hard_locale
0x00008f9c      84c0           test al, al
0x00008f9e      7510           jne 0x8fb0
0x00008fa0      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00008fa5      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x00008faa      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00008fac      0f1f4000       nop dword [rax]
0x00008fb0      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00008fb5      644833142528.  xor rdx, qword fs:[0x28]
0x00008fbe      4889e8         mov rax, rbp
0x00008fc1      750b           jne 0x8fce
0x00008fc3      4883c418       add rsp, 0x18
0x00008fc7      5b             pop rbx
0x00008fc8      5d             pop rbp
0x00008fc9      415c           pop r12
0x00008fcb      415d           pop r13
0x00008fcd      c3             ret
0x00008fce      e8bd86ffff     call sym.imp.__stack_chk_fail
0x00008fd3      662e0f1f8400.  nop word cs:[rax + rax]
0x00008fdd      0f1f00         nop dword [rax]
;-- close_stream:
0x00008fe0      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00008fe2      55             push rbp
0x00008fe3      4889fd         mov rbp, rdi
0x00008fe6      53             push rbx
0x00008fe7      e81486ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x00008fec      8b5d00         mov ebx, dword [rbp]
0x00008fef      4889ef         mov rdi, rbp
0x00008ff2      4989c4         mov r12, rax
0x00008ff5      e8b6fbffff     call sym.rpl_fclose
0x00008ffa      83e320         and ebx, 0x20                           ; "@"
0x00008ffd      85db           test ebx, ebx
0x00008fff      7517           jne 0x9018
0x00009001      85c0           test eax, eax
0x00009003      740a           je 0x900f                               ; stdio.h:-186
0x00009005      4d85e4         test r12, r12                           ; stdio.h:-178
0x00009008      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000900d      7439           je 0x9048
0x0000900f      5b             pop rbx
0x00009010      5d             pop rbp
0x00009011      415c           pop r12
0x00009013      c3             ret
0x00009014      0f1f4000       nop dword [rax]
0x00009018      85c0           test eax, eax
0x0000901a      751c           jne 0x9038
0x0000901c      e8af85ffff     call sym.imp.__errno_location
0x00009021      c70000000000   mov dword [rax], 0
0x00009027      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000902c      5b             pop rbx
0x0000902d      5d             pop rbp
0x0000902e      415c           pop r12
0x00009030      c3             ret
0x00009031      0f1f80000000.  nop dword [rax]
0x00009038      5b             pop rbx
0x00009039      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000903e      5d             pop rbp                                 ; stdio.h:-186
0x0000903f      415c           pop r12
0x00009041      c3             ret
0x00009042      660f1f440000   nop word [rax + rax]
0x00009048      e88385ffff     call sym.imp.__errno_location
0x0000904d      833809         cmp dword [rax], 9
0x00009050      5b             pop rbx
0x00009051      5d             pop rbp
0x00009052      415c           pop r12                                 ; stdio.h:-178
0x00009054      0f95c0         setne al
0x00009057      0fb6c0         movzx eax, al
0x0000905a      f7d8           neg eax
0x0000905c      c3             ret
0x0000905d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00009060      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00009064      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00009066      e89587ffff     call sym.imp.setlocale
0x0000906b      4889c2         mov rdx, rax
0x0000906e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00009073      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00009076      741d           je 0x9095
0x00009078      488d3de11500.  lea rdi, [0x0000a660]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x0000907f      b902000000     mov ecx, 2
0x00009084      4889d6         mov rsi, rdx
0x00009087      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00009089      0f97c1         seta cl
0x0000908c      80d900         sbb cl, 0
0x0000908f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00009091      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00009093      750b           jne 0x90a0
0x00009095      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00009099      c3             ret
0x0000909a      660f1f440000   nop word [rax + rax]
0x000090a0      488d3dbb1500.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0xa662 ; "POSIX"
0x000090a7      b906000000     mov ecx, 6
0x000090ac      4889d6         mov rsi, rdx
0x000090af      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000090b1      0f97c0         seta al
0x000090b4      1c00           sbb al, 0
0x000090b6      84c0           test al, al
0x000090b8      0f95c0         setne al
0x000090bb      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x000090bf      c3             ret
;-- locale_charset:
0x000090c0      4883ec08       sub rsp, 8
0x000090c4      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x000090c9      e8e286ffff     call sym.imp.nl_langinfo
0x000090ce      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x000090d1      741d           je 0x90f0
0x000090d3      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x000090d6      488d158b1500.  lea rdx, str.ASCII                      ; 0xa668 ; "ASCII"
0x000090dd      480f44c2       cmove rax, rdx
0x000090e1      4883c408       add rsp, 8
0x000090e5      c3             ret
0x000090e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000090f0      488d05711500.  lea rax, str.ASCII                      ; 0xa668 ; "ASCII"
0x000090f7      4883c408       add rsp, 8
0x000090fb      c3             ret
0x000090fc      0f1f4000       nop dword [rax]
;-- __libc_csu_init:
0x00009100      4157           push r15
0x00009102      4156           push r14
0x00009104      4989d7         mov r15, rdx
0x00009107      4155           push r13
0x00009109      4154           push r12
0x0000910b      4c8d25fe2820.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x20ba10 ; "@+"
0x00009112      55             push rbp
0x00009113      488d2dfe2820.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x20ba18
0x0000911a      53             push rbx
0x0000911b      4189fd         mov r13d, edi
0x0000911e      4989f6         mov r14, rsi
0x00009121      4c29e5         sub rbp, r12
0x00009124      4883ec08       sub rsp, 8
0x00009128      48c1fd03       sar rbp, 3
0x0000912c      e84f84ffff     call sym._init
0x00009131      4885ed         test rbp, rbp
0x00009134      7420           je 0x9156
0x00009136      31db           xor ebx, ebx
0x00009138      0f1f84000000.  nop dword [rax + rax]
0x00009140      4c89fa         mov rdx, r15
0x00009143      4c89f6         mov rsi, r14
0x00009146      4489ef         mov edi, r13d
0x00009149      41ff14dc       call qword [r12 + rbx*8]
0x0000914d      4883c301       add rbx, 1
0x00009151      4839dd         cmp rbp, rbx
0x00009154      75ea           jne 0x9140
0x00009156      4883c408       add rsp, 8
0x0000915a      5b             pop rbx
0x0000915b      5d             pop rbp
0x0000915c      415c           pop r12
0x0000915e      415d           pop r13
0x00009160      415e           pop r14
0x00009162      415f           pop r15
0x00009164      c3             ret
0x00009165      90             nop
0x00009166      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00009170      f3c3           ret
0x00009172      662e0f1f8400.  nop word cs:[rax + rax]
0x0000917c      0f1f4000       nop dword [rax]
;-- atexit:
0x00009180      488b15812e20.  mov rdx, qword [obj.__dso_handle]       ; [0x20c008:8]=0x20c008 obj.__dso_handle
0x00009187      31f6           xor esi, esi
0x00009189      e9e286ffff     jmp sym.imp.__cxa_atexit
0x0000918e      0000           add byte [rax], al
