0x16c0: push qword ptr [rip+0x20670a]
0x16c6: jmp qword ptr [rip+0x20670c]
0x16cc: nop dword ptr [rax]
0x16d6: push 0x0
0x16db: jmp 0x16c0
0x16e6: push 0x1
0x16eb: jmp 0x16c0
0x16f6: push 0x2
0x16fb: jmp 0x16c0
0x1706: push 0x3
0x170b: jmp 0x16c0
0x1716: push 0x4
0x171b: jmp 0x16c0
0x1726: push 0x5
0x172b: jmp 0x16c0
0x1730: jmp qword ptr [rip+0x2066da]
0x1736: push 0x6
0x173b: jmp 0x16c0
0x1746: push 0x7
0x174b: jmp 0x16c0
0x1750: jmp qword ptr [rip+0x2066ca]
0x1756: push 0x8
0x175b: jmp 0x16c0
0x1760: jmp qword ptr [rip+0x2066c2]
0x1766: push 0x9
0x176b: jmp 0x16c0
0x1776: push 0xa
0x177b: jmp 0x16c0
0x1786: push 0xb
0x178b: jmp 0x16c0
0x1796: push 0xc
0x179b: jmp 0x16c0
0x17a6: push 0xd
0x17ab: jmp 0x16c0
0x17b6: push 0xe
0x17bb: jmp 0x16c0
0x17c6: push 0xf
0x17cb: jmp 0x16c0
0x17d6: push 0x10
0x17db: jmp 0x16c0
0x17e0: jmp qword ptr [rip+0x206682]
0x17e6: push 0x11
0x17eb: jmp 0x16c0
0x17f6: push 0x12
0x17fb: jmp 0x16c0
0x1806: push 0x13
0x180b: jmp 0x16c0
0x1816: push 0x14
0x181b: jmp 0x16c0
0x1820: jmp qword ptr [rip+0x206662]
0x1826: push 0x15
0x182b: jmp 0x16c0
0x1836: push 0x16
0x183b: jmp 0x16c0
0x1840: jmp qword ptr [rip+0x206652]
0x1846: push 0x17
0x184b: jmp 0x16c0
0x1856: push 0x18
0x185b: jmp 0x16c0
0x1866: push 0x19
0x186b: jmp 0x16c0
0x1876: push 0x1a
0x187b: jmp 0x16c0
0x1880: jmp qword ptr [rip+0x206632]
0x1886: push 0x1b
0x188b: jmp 0x16c0
0x1890: jmp qword ptr [rip+0x20662a]
0x1896: push 0x1c
0x189b: jmp 0x16c0
0x18a6: push 0x1d
0x18ab: jmp 0x16c0
0x18b0: jmp qword ptr [rip+0x20661a]
0x18b6: push 0x1e
0x18bb: jmp 0x16c0
0x18c6: push 0x1f
0x18cb: jmp 0x16c0
0x18d6: push 0x20
0x18db: jmp 0x16c0
0x18e0: jmp qword ptr [rip+0x206602]
0x18e6: push 0x21
0x18eb: jmp 0x16c0
0x18f0: jmp qword ptr [rip+0x2065fa]
0x18f6: push 0x22
0x18fb: jmp 0x16c0
0x1906: push 0x23
0x190b: jmp 0x16c0
0x1916: push 0x24
0x191b: jmp 0x16c0
0x1926: push 0x25
0x192b: jmp 0x16c0
0x1936: push 0x26
0x193b: jmp 0x16c0
0x1946: push 0x27
0x194b: jmp 0x16c0
0x1950: jmp qword ptr [rip+0x2065ca]
0x1956: push 0x28
0x195b: jmp 0x16c0
0x1966: push 0x29
0x196b: jmp 0x16c0
0x1976: push 0x2a
0x197b: jmp 0x16c0
0x1986: push 0x2b
0x198b: jmp 0x16c0
0x1996: push 0x2c
0x199b: jmp 0x16c0
0x19a6: push 0x2d
0x19ab: jmp 0x16c0
0x19b6: push 0x2e
0x19bb: jmp 0x16c0
0x19c6: push 0x2f
0x19cb: jmp 0x16c0
0x19d6: push 0x30
0x19db: jmp 0x16c0
0x19e6: push 0x31
0x19eb: jmp 0x16c0
0x19f6: push 0x32
0x19fb: jmp 0x16c0
0x1a06: push 0x33
0x1a0b: jmp 0x16c0
0x1a16: push 0x34
0x1a1b: jmp 0x16c0
0x1a26: push 0x35
0x1a2b: jmp 0x16c0
0x1a36: push 0x36
0x1a3b: jmp 0x16c0
0x1a46: push 0x37
0x1a4b: jmp 0x16c0
0x1a56: push 0x38
0x1a5b: jmp 0x16c0
0x1a60: jmp qword ptr [rip+0x206542]
0x1a66: push 0x39
0x1a6b: jmp 0x16c0
0x1a70: jmp qword ptr [rip+0x20653a]
0x1a76: push 0x3a
0x1a7b: jmp 0x16c0
0x1a86: push 0x3b
0x1a8b: jmp 0x16c0
0x1a96: push 0x3c
0x1a9b: jmp 0x16c0
0x1aa6: push 0x3d
0x1aab: jmp 0x16c0 0x00001ab0 .qword 0x90660020653a25ff
0x1ab8: add byte ptr [rax],al
0x1aba: add byte ptr [rax],al
0x1abc: add byte ptr [rax],al
0x1abe: add byte ptr [rax],al
0x1b81: nop dword ptr [rax]
0x1bae: nop 
0x1bce: nop 
0x1c1d: nop dword ptr [rax]
0x1c33: nop dword ptr [rax+rax]
0x1c44: nop dword ptr [rax]
0x1c62: nop word ptr [rax+rax]
0x1c74: nop dword ptr [rax]
0x1c84: nop dword ptr [rax]
0x1f7d: jmp 0x1d71
0x1f87: lea rdx,[rip+0x3d7c]
0x1f8e: mov esi,0x3
0x1f93: xor edi,edi
0x1f95: call 0x4cb0
0x1f9a: mov rbx,rax
0x1f9d: call 0x1720
0x1fa2: mov esi,dword ptr [rax]
0x1fa4: lea rdx,[rip+0x4356]
0x1fab: mov rcx,rbx
0x1fae: mov edi,0x1
0x1fb3: xor eax,eax
0x1fb5: call 0x19d0
0x1fba: nop word ptr [rax+rax]
0x1fea: hlt 
0x1feb: nop dword ptr [rax+rax]
0x1ff0: lea rdi,[rip+0x2060a9]
0x1ff7: push rbp
0x1ff8: lea rax,[rip+0x2060a1]
0x1fff: cmp rax,rdi
0x2002: mov rbp,rsp
0x2005: je 0x2020
0x2007: mov rax,qword ptr [rip+0x205fc2]
0x200e: test rax,rax
0x2011: je 0x2020
0x2013: pop rbp
0x2014: jmp rax
0x2016: nop word ptr cs:[rax+rax]
0x2020: pop rbp
0x2021: ret 
0x2022: nop dword ptr [rax]
0x2026: nop word ptr cs:[rax+rax]
0x2030: lea rdi,[rip+0x206069]
0x2037: lea rsi,[rip+0x206062]
0x203e: push rbp
0x203f: sub rsi,rdi
0x2042: mov rbp,rsp
0x2045: sar rsi,0x3
0x2049: mov rax,rsi
0x204c: shr rax,0x3f
0x2050: add rsi,rax
0x2053: sar rsi,0x1
0x2056: je 0x2070
0x2058: mov rax,qword ptr [rip+0x205f89]
0x205f: test rax,rax
0x2062: je 0x2070
0x2064: pop rbp
0x2065: jmp rax
0x2067: nop word ptr [rax+rax]
0x2070: pop rbp
0x2071: ret 
0x2072: nop dword ptr [rax]
0x2076: nop word ptr cs:[rax+rax]
0x2080: cmp byte ptr [rip+0x206041],0x0
0x2087: jne 0x20b8
0x2089: cmp qword ptr [rip+0x205f5f],0x0
0x2091: push rbp
0x2092: mov rbp,rsp
0x2095: je 0x20a3
0x2097: mov rdi,qword ptr [rip+0x205f6a]
0x209e: call 0x1ab0
0x20a3: call 0x1ff0
0x20a8: mov byte ptr [rip+0x206019],0x1
0x20af: pop rbp
0x20b0: ret 
0x20b1: nop dword ptr [rax]
0x20b8: ret 
0x20ba: nop word ptr [rax+rax]
0x20c0: push rbp
0x20c1: mov rbp,rsp
0x20c4: pop rbp
0x20c5: jmp 0x2030
0x20ca: nop word ptr [rax+rax]
0x2164: nop dword ptr [rax]
0x21ee: nop 
0x21fe: nop 
0x235f: nop 
0x2474: nop dword ptr [rax]
0x2538: nop dword ptr [rax+rax]
0x2586: nop word ptr cs:[rax+rax]
0x25be: nop 
0x25ca: jmp 0x22f7
0x25cf: nop 
0x25da: jmp 0x233a
0x25df: nop 
0x25ea: jmp 0x2300
0x25f4: nop 
0x25f6: nop word ptr cs:[rax+rax]
0x264c: nop dword ptr [rax]
0x284b: nop dword ptr [rax+rax]
0x287e: nop 
0x2898: nop dword ptr [rax+rax]
0x291d: nop dword ptr [rax]
0x299a: nop word ptr [rax+rax]
0x29dc: nop dword ptr [rax]
0x29f9: nop dword ptr [rax]
0x2a2e: nop 
0x2a48: nop dword ptr [rax+rax]
0x2a7c: nop dword ptr [rax]
0x2a8a: jmp 0x2822
0x2a8f: nop 
0x2b3e: nop 
0x2eca: nop word ptr [rax+rax]
0x2f61: nop dword ptr [rax]
0x2f78: nop dword ptr [rax+rax]
0x2f8c: nop dword ptr [rax]
0x2f90: mov edi,dword ptr [rip+0x2051da]
0x2f96: jmp 0x1840
0x2f9b: nop dword ptr [rax+rax]
0x2fa0: mov qword ptr [rip+0x2051d9],rdi
0x2fa7: ret 
0x2fa8: nop dword ptr [rax+rax]
0x2fb0: mov byte ptr [rip+0x2051c1],dil
0x2fb7: ret 
0x2fb8: nop dword ptr [rax+rax]
0x2fc0: push rbp
0x2fc1: push rbx
0x2fc2: sub rsp,0x8
0x2fc6: mov rdi,qword ptr [rip+0x2050db]
0x2fcd: call 0x5af0
0x2fd2: test eax,eax
0x2fd4: je 0x2fec
0x2fd6: call 0x1720
0x2fdb: cmp byte ptr [rip+0x205196],0x0
0x2fe2: mov rbx,rax
0x2fe5: je 0x3003
0x2fe7: cmp dword ptr [rax],0x20
0x2fea: jne 0x3003
0x2fec: mov rdi,qword ptr [rip+0x2050cd]
0x2ff3: call 0x5af0
0x2ff8: test eax,eax
0x2ffa: jne 0x3042
0x2ffc: add rsp,0x8
0x3000: pop rbx
0x3001: pop rbp
0x3002: ret 
0x3003: lea rsi,[rip+0x32e7]
0x300a: xor edi,edi
0x300c: mov edx,0x5
0x3011: call 0x17d0
0x3016: mov rdi,qword ptr [rip+0x205163]
0x301d: mov rbp,rax
0x3020: test rdi,rdi
0x3023: je 0x304d
0x3025: call 0x4c80
0x302a: mov esi,dword ptr [rbx]
0x302c: lea rdx,[rip+0x32ca]
0x3033: mov rcx,rax
0x3036: mov r8,rbp
0x3039: xor edi,edi
0x303b: xor eax,eax
0x303d: call 0x19d0
0x3042: mov edi,dword ptr [rip+0x204fd8]
0x3048: call 0x1750
0x304d: mov esi,dword ptr [rbx]
0x304f: lea rdx,[rip+0x32ab]
0x3056: mov rcx,rax
0x3059: xor edi,edi
0x305b: xor eax,eax
0x305d: call 0x19d0
0x3062: jmp 0x3042
0x3064: nop word ptr cs:[rax+rax]
0x306e: nop 
0x30aa: nop word ptr [rax+rax]
0x312a: nop word ptr [rax+rax]
0x316c: nop dword ptr [rax]
0x320f: nop 
0x3210: push rbp
0x3211: push rbx
0x3212: mov rbp,rdi
0x3215: mov ebx,esi
0x3217: sub rsp,0x8
0x321b: call 0x5b70
0x3220: movzx edx,byte ptr [rax]
0x3223: and edx,0xffffffdf
0x3226: cmp dl,0x55
0x3229: je 0x32a0
0x322b: cmp dl,0x47
0x322e: je 0x3250
0x3230: lea rax,[rip+0x312c]
0x3237: lea rdx,[rip+0x3127]
0x323e: cmp ebx,0x9
0x3241: cmovne rax,rdx
0x3245: add rsp,0x8
0x3249: pop rbx
0x324a: pop rbp
0x324b: ret 
0x324c: nop dword ptr [rax]
0x3250: movzx edx,byte ptr [rax+1]
0x3254: and edx,0xffffffdf
0x3257: cmp dl,0x42
0x325a: jne 0x3230
0x325c: cmp byte ptr [rax+2],0x31
0x3260: jne 0x3230
0x3262: cmp byte ptr [rax+3],0x38
0x3266: jne 0x3230
0x3268: cmp byte ptr [rax+4],0x30
0x326c: jne 0x3230
0x326e: cmp byte ptr [rax+5],0x33
0x3272: jne 0x3230
0x3274: cmp byte ptr [rax+6],0x30
0x3278: jne 0x3230
0x327a: cmp byte ptr [rax+7],0x0
0x327e: jne 0x3230
0x3280: cmp byte ptr [rbp],0x60
0x3284: lea rax,[rip+0x30d1]
0x328b: lea rdx,[rip+0x30ce]
0x3292: cmovne rax,rdx
0x3296: add rsp,0x8
0x329a: pop rbx
0x329b: pop rbp
0x329c: ret 
0x329d: nop dword ptr [rax]
0x32a0: movzx edx,byte ptr [rax+1]
0x32a4: and edx,0xffffffdf
0x32a7: cmp dl,0x54
0x32aa: jne 0x3230
0x32ac: movzx edx,byte ptr [rax+2]
0x32b0: and edx,0xffffffdf
0x32b3: cmp dl,0x46
0x32b6: jne 0x3230
0x32bc: cmp byte ptr [rax+3],0x2d
0x32c0: jne 0x3230
0x32c6: cmp byte ptr [rax+4],0x38
0x32ca: jne 0x3230
0x32d0: cmp byte ptr [rax+5],0x0
0x32d4: jne 0x3230
0x32da: cmp byte ptr [rbp],0x60
0x32de: lea rax,[rip+0x306f]
0x32e5: lea rdx,[rip+0x306c]
0x32ec: cmovne rax,rdx
0x32f0: add rsp,0x8
0x32f4: pop rbx
0x32f5: pop rbp
0x32f6: ret 
0x32f7: nop word ptr [rax+rax]
0x3300: push r15
0x3302: push r14
0x3304: mov r15d,r8d
0x3307: push r13
0x3309: push r12
0x330b: mov r14,rdi
0x330e: push rbp
0x330f: push rbx
0x3310: mov ebx,r9d
0x3313: mov r13,rsi
0x3316: mov rbp,rcx
0x3319: and ebx,0x2
0x331c: sub rsp,0xb8
0x3323: mov rax,qword ptr [rsp+0xf0]
0x332b: mov qword ptr [rsp+0x10],rdx
0x3330: mov dword ptr [rsp+8],r8d
0x3335: mov dword ptr [rsp+0x78],r9d
0x333a: mov qword ptr [rsp+0x20],rax
0x333f: mov rax,qword ptr [rsp+0xf8]
0x3347: mov qword ptr [rsp+0x68],rax
0x334c: mov rax,qword ptr [rsp+0x100]
0x3354: mov qword ptr [rsp+0x60],rax
0x3359: mov rax,qword ptr fs:[0x28]
0x3362: mov qword ptr [rsp+0xa8],rax
0x336a: xor eax,eax
0x336c: call 0x17e0
0x3371: cmp r15d,0xa
0x3375: mov qword ptr [rsp+0x58],rax
0x337a: ja 0x452f
0x3380: lea rcx,[rip+0x3039]
0x3387: mov edx,r15d
0x338a: movsxd rax,dword ptr [rcx+rdx*4]
0x338e: add rax,rcx
0x3391: jmp rax
0x3393: mov byte ptr [rsp+0xe],0x1
0x3398: mov byte ptr [rsp+0x7c],0x0
0x339d: xor r12d,r12d
0x33a0: mov qword ptr [rsp+0x50],0x0
0x33a9: mov byte ptr [rsp+0xf],0x1
0x33ae: mov byte ptr [rsp+0xd],0x0
0x33b3: lea rax,[rip+0x2fab]
0x33ba: mov qword ptr [rsp+0x18],0x1
0x33c3: xor r15d,r15d
0x33c6: mov dword ptr [rsp+8],0x2
0x33ce: mov qword ptr [rsp+0x48],rax
0x33d3: xor r11d,r11d
0x33d6: mov rax,rbp
0x33d9: mov r8d,r12d
0x33dc: mov rbp,r11
0x33df: mov r11,rax
0x33e2: nop word ptr [rax+rax]
0x33e8: cmp r11,rbp
0x33eb: setne r12b
0x33ef: cmp r11,0xffffffffffffffff
0x33f3: jne 0x3402
0x33f5: mov rax,qword ptr [rsp+0x10]
0x33fa: cmp byte ptr [rax+rbp],0x0
0x33fe: setne r12b
0x3402: test r12b,r12b
0x3405: je 0x3a60
0x340b: cmp dword ptr [rsp+8],0x2
0x3410: mov rdi,qword ptr [rsp+0x10]
0x3415: lea r9,[rdi+rbp]
0x3419: setne al
0x341c: and al,byte ptr [rsp+0xd]
0x3420: mov r10d,eax
0x3423: je 0x34d0
0x3429: mov rax,qword ptr [rsp+0x18]
0x342e: test rax,rax
0x3431: je 0x3860
0x3437: cmp r11,0xffffffffffffffff
0x343b: lea rbx,[rbp+rax]
0x3440: jne 0x3470
0x3442: cmp rax,0x1
0x3446: jbe 0x3470
0x3448: mov byte ptr [rsp+0x38],r8b
0x344d: mov byte ptr [rsp+0x30],r10b
0x3452: mov qword ptr [rsp+0x28],r9
0x3457: call 0x17f0
0x345c: movzx r8d,byte ptr [rsp+0x38]
0x3462: movzx r10d,byte ptr [rsp+0x30]
0x3468: mov r11,rax
0x346b: mov r9,qword ptr [rsp+0x28]
0x3470: cmp rbx,r11
0x3473: mov byte ptr [rsp+0x28],r10b
0x3478: ja 0x3a30
0x347e: mov rdx,qword ptr [rsp+0x18]
0x3483: mov rsi,qword ptr [rsp+0x48]
0x3488: mov rdi,r9
0x348b: mov qword ptr [rsp+0x40],r11
0x3490: mov byte ptr [rsp+0x38],r8b
0x3495: mov qword ptr [rsp+0x30],r9
0x349a: call 0x1890
0x349f: test eax,eax
0x34a1: mov r9,qword ptr [rsp+0x30]
0x34a6: movzx r8d,byte ptr [rsp+0x38]
0x34ac: mov r11,qword ptr [rsp+0x40]
0x34b1: jne 0x3a30
0x34b7: cmp byte ptr [rsp+0xf],0x0
0x34bc: movzx r10d,byte ptr [rsp+0x28]
0x34c2: jne 0x4445
0x34c8: nop dword ptr [rax+rax]
0x34d0: movzx ebx,byte ptr [r9]
0x34d4: cmp bl,0x7e
0x34d7: ja 0x37f8
0x34dd: lea rcx,[rip+0x2f08]
0x34e4: movzx edx,bl
0x34e7: movsxd rax,dword ptr [rcx+rdx*4]
0x34eb: add rax,rcx
0x34ee: jmp rax
0x34f0: xor r10d,r10d
0x34f3: cmp r11,0x1
0x34f7: setne al
0x34fa: cmp r11,0xffffffffffffffff
0x34fe: jne 0x350c
0x3500: mov rax,qword ptr [rsp+0x10]
0x3505: cmp byte ptr [rax+1],0x0
0x3509: setne al
0x350c: cmp dword ptr [rsp+8],0x2
0x3511: sete dl
0x3514: test al,al
0x3516: je 0x3768
0x351c: xor r12d,r12d
0x351f: xor eax,eax
0x3521: nop dword ptr [rax]
0x3528: cmp byte ptr [rsp+0xd],0x1
0x352d: jne 0x3642
0x3533: test dl,dl
0x3535: jne 0x3642
0x353b: mov rsi,qword ptr [rsp+0x20]
0x3540: test rsi,rsi
0x3543: je 0x3559
0x3545: mov edx,ebx
0x3547: shr dl,0x5
0x354a: movzx edx,dl
0x354d: mov edx,dword ptr [rsi+rdx*4]
0x3550: bt edx,ebx
0x3553: jb 0x36a3
0x3559: test r10b,r10b
0x355c: jne 0x36a3
0x3562: xor eax,0x1
0x3565: add rbp,0x1
0x3569: and eax,r8d
0x356c: test al,al
0x356e: je 0x3590
0x3570: cmp r13,r15
0x3573: jbe 0x357a
0x3575: mov byte ptr [r14+r15],0x27
0x357a: lea rax,[r15+1]
0x357e: cmp r13,rax
0x3581: jbe 0x3589
0x3583: mov byte ptr [r14+r15+1],0x27
0x3589: add r15,0x2
0x358d: xor r8d,r8d
0x3590: cmp r15,r13
0x3593: jae 0x3599
0x3595: mov byte ptr [r14+r15],bl
0x3599: movzx edi,byte ptr [rsp+0xe]
0x359e: add r15,0x1
0x35a2: mov eax,0x0
0x35a7: test r12b,r12b
0x35aa: cmove edi,eax
0x35ad: mov byte ptr [rsp+0xe],dil
0x35b2: jmp 0x33e8
0x35b7: nop word ptr [rax+rax]
0x35c0: xor r10d,r10d
0x35c3: mov eax,dword ptr [rsp+8]
0x35c7: cmp eax,0x2
0x35ca: je 0x3b88
0x35d0: cmp eax,0x5
0x35d3: je 0x3b48
0x35d9: cmp eax,0x2
0x35dc: mov ebx,0x3f
0x35e1: sete dl
0x35e4: xor r12d,r12d
0x35e7: xor eax,eax
0x35e9: jmp 0x3528
0x35ee: nop 
0x35f0: xor r10d,r10d
0x35f3: cmp dword ptr [rsp+8],0x2
0x35f8: je 0x3b00
0x35fe: mov byte ptr [rsp+0x7c],r12b
0x3603: xor edx,edx
0x3605: xor eax,eax
0x3607: mov ebx,0x27
0x360c: jmp 0x3528
0x3611: nop dword ptr [rax]
0x3618: mov edx,0x9
0x361d: mov ebx,0x74
0x3622: cmp dword ptr [rsp+8],0x2
0x3627: sete al
0x362a: and al,byte ptr [rsp+0xf]
0x362e: jne 0x377e
0x3634: cmp byte ptr [rsp+0xd],0x0
0x3639: jne 0x36a0
0x363b: mov ebx,edx
0x363d: xor r12d,r12d
0x3640: xor eax,eax
0x3642: cmp byte ptr [rsp+0xf],0x0
0x3647: jne 0x353b
0x364d: jmp 0x3559
0x3652: nop word ptr [rax+rax]
0x3658: mov edx,0x8
0x365d: mov ebx,0x62
0x3662: jmp 0x3634
0x3664: nop dword ptr [rax]
0x3668: cmp dword ptr [rsp+8],0x2
0x366d: je 0x3a40
0x3673: cmp byte ptr [rsp+0xd],0x0
0x3678: je 0x3890
0x367e: cmp byte ptr [rsp+0xf],0x0
0x3683: je 0x3890
0x3689: cmp qword ptr [rsp+0x18],0x0
0x368f: jne 0x3a4b
0x3695: mov ebx,0x5c
0x369a: nop word ptr [rax+rax]
0x36a0: xor r12d,r12d
0x36a3: cmp dword ptr [rsp+8],0x2
0x36a8: sete dl
0x36ab: cmp byte ptr [rsp+0xf],0x0
0x36b0: mov eax,edx
0x36b2: jne 0x3f08
0x36b8: mov eax,r8d
0x36bb: xor eax,0x1
0x36be: and al,dl
0x36c0: je 0x36f1
0x36c2: cmp r13,r15
0x36c5: jbe 0x36cc
0x36c7: mov byte ptr [r14+r15],0x27
0x36cc: lea rdx,[r15+1]
0x36d0: cmp r13,rdx
0x36d3: jbe 0x36db
0x36d5: mov byte ptr [r14+r15+1],0x24
0x36db: lea rdx,[r15+2]
0x36df: cmp r13,rdx
0x36e2: jbe 0x36ea
0x36e4: mov byte ptr [r14+r15+2],0x27
0x36ea: add r15,0x3
0x36ee: mov r8d,eax
0x36f1: cmp r13,r15
0x36f4: jbe 0x36fb
0x36f6: mov byte ptr [r14+r15],0x5c
0x36fb: add r15,0x1
0x36ff: add rbp,0x1
0x3703: jmp 0x3590
0x3708: nop dword ptr [rax+rax]
0x3710: cmp byte ptr [rsp+0xd],0x0
0x3715: jne 0x38e3
0x371b: xor edx,edx
0x371d: test byte ptr [rsp+0x78],0x1
0x3722: je 0x363b
0x3728: add rbp,0x1
0x372c: jmp 0x33e8
0x3731: nop dword ptr [rax]
0x3738: cmp dword ptr [rsp+8],0x2
0x373d: sete dl
0x3740: xor eax,eax
0x3742: jmp 0x3528
0x3747: nop word ptr [rax+rax]
0x3750: mov edx,0x7
0x3755: mov ebx,0x61
0x375a: jmp 0x3634
0x375f: nop 
0x3760: cmp dword ptr [rsp+8],0x2
0x3765: sete dl
0x3768: test rbp,rbp
0x376b: jne 0x351c
0x3771: movzx eax,byte ptr [rsp+0xf]
0x3776: and al,dl
0x3778: je 0x3528
0x377e: mov rbp,r11
0x3781: mov dword ptr [rsp+8],0x2
0x3789: jmp 0x3e89
0x378e: nop 
0x3790: cmp dword ptr [rsp+8],0x2
0x3795: sete dl
0x3798: xor r12d,r12d
0x379b: jmp 0x3771
0x379d: nop dword ptr [rax]
0x37a0: cmp dword ptr [rsp+8],0x2
0x37a5: mov ebx,0x20
0x37aa: sete dl
0x37ad: jmp 0x3771
0x37af: nop 
0x37b0: mov edx,0xd
0x37b5: mov ebx,0x72
0x37ba: jmp 0x3622
0x37bf: nop 
0x37c0: mov edx,0xc
0x37c5: mov ebx,0x66
0x37ca: jmp 0x3634
0x37cf: nop 
0x37d0: mov edx,0xb
0x37d5: mov ebx,0x76
0x37da: jmp 0x3634
0x37df: nop 
0x37e0: mov edx,0xa
0x37e5: mov ebx,0x6e
0x37ea: jmp 0x3622
0x37ef: nop 
0x37f0: xor r10d,r10d
0x37f3: nop dword ptr [rax+rax]
0x37f8: cmp qword ptr [rsp+0x58],0x1
0x37fe: jne 0x3ba8
0x3804: mov qword ptr [rsp+0x38],r11
0x3809: mov byte ptr [rsp+0x30],r8b
0x380e: mov byte ptr [rsp+0x28],r10b
0x3813: call 0x1a80
0x3818: mov rcx,qword ptr [rax]
0x381b: movzx edx,bl
0x381e: movzx r10d,byte ptr [rsp+0x28]
0x3824: movzx r8d,byte ptr [rsp+0x30]
0x382a: mov r11,qword ptr [rsp+0x38]
0x382f: mov edi,0x1
0x3834: movzx eax,word ptr [rcx+rdx*2]
0x3838: and ax,0x4000
0x383c: setne r12b
0x3840: sete al
0x3843: and al,byte ptr [rsp+0xd]
0x3847: test al,al
0x3849: jne 0x41e1
0x384f: cmp dword ptr [rsp+8],0x2
0x3854: sete dl
0x3857: jmp 0x3528
0x385c: nop dword ptr [rax]
0x3860: movzx ebx,byte ptr [r9]
0x3864: cmp bl,0x7e
0x3867: ja 0x37f0
0x3869: lea rcx,[rip+0x2d78]
0x3870: movzx edx,bl
0x3873: movsxd rax,dword ptr [rcx+rdx*4]
0x3877: add rax,rcx
0x387a: jmp rax
0x387c: nop dword ptr [rax]
0x3880: xor r10d,r10d
0x3883: cmp byte ptr [rsp+0xd],0x0
0x3888: jne 0x367e
0x388e: nop 
0x3890: mov edx,0x5c
0x3895: mov ebx,0x5c
0x389a: jmp 0x3634
0x389f: nop 
0x38a0: mov edx,0xc
0x38a5: xor r10d,r10d
0x38a8: mov ebx,0x66
0x38ad: jmp 0x3634
0x38b2: nop word ptr [rax+rax]
0x38b8: mov edx,0xa
0x38bd: xor r10d,r10d
0x38c0: mov ebx,0x6e
0x38c5: jmp 0x3622
0x38ca: nop word ptr [rax+rax]
0x38d0: mov ebx,0x61
0x38d5: jmp 0x36a0
0x38da: nop word ptr [rax+rax]
0x38e0: xor r10d,r10d
0x38e3: cmp dword ptr [rsp+8],0x2
0x38e8: sete dl
0x38eb: cmp byte ptr [rsp+0xf],0x0
0x38f0: jne 0x448a
0x38f6: mov eax,r8d
0x38f9: mov rcx,r15
0x38fc: xor eax,0x1
0x38ff: and al,dl
0x3901: je 0x3930
0x3903: cmp r13,r15
0x3906: jbe 0x390d
0x3908: mov byte ptr [r14+r15],0x27
0x390d: lea rcx,[r15+1]
0x3911: cmp r13,rcx
0x3914: jbe 0x391c
0x3916: mov byte ptr [r14+r15+1],0x24
0x391c: lea rcx,[r15+2]
0x3920: cmp r13,rcx
0x3923: ja 0x3f59
0x3929: lea rcx,[r15+3]
0x392d: mov r8d,eax
0x3930: cmp r13,rcx
0x3933: jbe 0x393a
0x3935: mov byte ptr [r14+rcx],0x5c
0x393a: cmp dword ptr [rsp+8],0x2
0x393f: lea r15,[rcx+1]
0x3943: je 0x3f49
0x3949: lea rax,[rbp+1]
0x394d: cmp rax,r11
0x3950: jae 0x396b
0x3952: mov rax,qword ptr [rsp+0x10]
0x3957: movzx eax,byte ptr [rax+rbp+1]
0x395c: mov byte ptr [rsp+0x28],al
0x3960: sub eax,0x30
0x3963: cmp al,0x9
0x3965: jbe 0x4199
0x396b: mov eax,r12d
0x396e: mov ebx,0x30
0x3973: xor r12d,r12d
0x3976: jmp 0x3528
0x397b: nop dword ptr [rax+rax]
0x3980: cmp dword ptr [rsp+8],0x2
0x3985: mov r12d,r10d
0x3988: sete dl
0x398b: xor r10d,r10d
0x398e: xor eax,eax
0x3990: jmp 0x3528
0x3995: nop dword ptr [rax]
0x3998: cmp dword ptr [rsp+8],0x2
0x399d: sete dl
0x39a0: xor r10d,r10d
0x39a3: jmp 0x3768
0x39a8: nop dword ptr [rax+rax]
0x39b0: cmp dword ptr [rsp+8],0x2
0x39b5: sete dl
0x39b8: xor r10d,r10d
0x39bb: xor r12d,r12d
0x39be: jmp 0x3771
0x39c3: nop dword ptr [rax+rax]
0x39c8: cmp dword ptr [rsp+8],0x2
0x39cd: mov r12d,r10d
0x39d0: mov ebx,0x20
0x39d5: sete dl
0x39d8: xor r10d,r10d
0x39db: jmp 0x3771
0x39e0: mov edx,0xd
0x39e5: xor r10d,r10d
0x39e8: mov ebx,0x72
0x39ed: jmp 0x3622
0x39f2: nop word ptr [rax+rax]
0x39f8: mov ebx,0x76
0x39fd: jmp 0x36a0
0x3a02: nop word ptr [rax+rax]
0x3a08: mov edx,0x9
0x3a0d: xor r10d,r10d
0x3a10: mov ebx,0x74
0x3a15: jmp 0x3622
0x3a1a: nop word ptr [rax+rax]
0x3a20: mov ebx,0x62
0x3a25: jmp 0x36a0
0x3a2a: nop word ptr [rax+rax]
0x3a30: xor r10d,r10d
0x3a33: jmp 0x34d0
0x3a38: nop dword ptr [rax+rax]
0x3a40: cmp byte ptr [rsp+0xf],0x0
0x3a45: jne 0x43b0
0x3a4b: add rbp,0x1
0x3a4f: mov eax,r8d
0x3a52: xor r12d,r12d
0x3a55: mov ebx,0x5c
0x3a5a: jmp 0x356c
0x3a5f: nop 
0x3a60: cmp dword ptr [rsp+8],0x2
0x3a65: movzx ebx,byte ptr [rsp+0xf]
0x3a6a: mov r12d,r8d
0x3a6d: mov rbp,r11
0x3a70: sete dl
0x3a73: mov eax,ebx
0x3a75: test r15,r15
0x3a78: sete cl
0x3a7b: and eax,edx
0x3a7d: and al,cl
0x3a7f: jne 0x44e6
0x3a85: mov eax,ebx
0x3a87: xor eax,0x1
0x3a8a: and dl,al
0x3a8c: je 0x43fc
0x3a92: cmp byte ptr [rsp+0x7c],0x0
0x3a97: je 0x43fa
0x3a9d: cmp byte ptr [rsp+0xe],0x0
0x3aa2: jne 0x449d
0x3aa8: test r13,r13
0x3aab: sete al
0x3aae: cmp qword ptr [rsp+0x50],0x0
0x3ab4: setne dl
0x3ab7: and al,dl
0x3ab9: je 0x44dc
0x3abf: mov r13,qword ptr [rsp+0x50]
0x3ac4: lea rbx,[rip+0x289a]
0x3acb: mov byte ptr [r14],0x27
0x3acf: mov dword ptr [rsp+8],0x2
0x3ad7: mov r15d,0x1
0x3add: mov qword ptr [rsp+0x18],0x1
0x3ae6: mov byte ptr [rsp+0xf],0x0
0x3aeb: mov qword ptr [rsp+0x48],rbx
0x3af0: mov byte ptr [rsp+0x7c],al
0x3af4: jmp 0x33d3
0x3af9: nop dword ptr [rax]
0x3b00: cmp byte ptr [rsp+0xf],0x0
0x3b05: jne 0x43b0
0x3b0b: test r13,r13
0x3b0e: je 0x3f10
0x3b14: xor edx,edx
0x3b16: cmp qword ptr [rsp+0x50],0x0
0x3b1c: jne 0x3f10
0x3b22: mov qword ptr [rsp+0x50],r13
0x3b27: add r15,0x3
0x3b2b: xor eax,eax
0x3b2d: mov byte ptr [rsp+0x7c],r12b
0x3b32: xor r8d,r8d
0x3b35: mov r13,rdx
0x3b38: mov ebx,0x27
0x3b3d: jmp 0x3559
0x3b42: nop word ptr [rax+rax]
0x3b48: test byte ptr [rsp+0x78],0x4
0x3b4d: je 0x3b70
0x3b4f: lea rcx,[rbp+2]
0x3b53: cmp rcx,r11
0x3b56: jae 0x3b70
0x3b58: mov rax,qword ptr [rsp+0x10]
0x3b5d: cmp byte ptr [rax+rbp+1],0x3f
0x3b62: je 0x42f2
0x3b68: nop dword ptr [rax+rax]
0x3b70: xor edx,edx
0x3b72: xor r12d,r12d
0x3b75: xor eax,eax
0x3b77: mov ebx,0x3f
0x3b7c: jmp 0x3528
0x3b81: nop dword ptr [rax]
0x3b88: cmp byte ptr [rsp+0xf],0x0
0x3b8d: jne 0x43b0
0x3b93: xor r12d,r12d
0x3b96: xor eax,eax
0x3b98: mov ebx,0x3f
0x3b9d: jmp 0x3559
0x3ba2: nop word ptr [rax+rax]
0x3ba8: lea rax,[rsp+0xa0]
0x3bb0: cmp r11,0xffffffffffffffff
0x3bb4: mov qword ptr [rsp+0xa0],0x0
0x3bc0: mov qword ptr [rsp+0x28],rax
0x3bc5: jne 0x3bf4
0x3bc7: mov rdi,qword ptr [rsp+0x10]
0x3bcc: mov byte ptr [rsp+0x40],r8b
0x3bd1: mov byte ptr [rsp+0x38],r10b
0x3bd6: mov qword ptr [rsp+0x30],r9
0x3bdb: call 0x17f0
0x3be0: movzx r8d,byte ptr [rsp+0x40]
0x3be6: movzx r10d,byte ptr [rsp+0x38]
0x3bec: mov r11,rax
0x3bef: mov r9,qword ptr [rsp+0x30]
0x3bf4: lea rax,[rsp+0x9c]
0x3bfc: xor ecx,ecx
0x3bfe: mov byte ptr [rsp+0x7e],bl
0x3c02: mov byte ptr [rsp+0x7d],r8b
0x3c07: mov rbx,rcx
0x3c0a: mov qword ptr [rsp+0x88],r9
0x3c12: mov qword ptr [rsp+0x38],rax
0x3c17: mov byte ptr [rsp+0x7f],r10b
0x3c1c: mov qword ptr [rsp+0x80],r15
0x3c24: mov qword ptr [rsp+0x40],r14
0x3c29: mov qword ptr [rsp+0x70],r13
0x3c2e: mov qword ptr [rsp+0x30],r11
0x3c33: mov rax,qword ptr [rsp+0x10]
0x3c38: lea r14,[rbp+rbx]
0x3c3d: mov rdx,qword ptr [rsp+0x30]
0x3c42: mov rcx,qword ptr [rsp+0x28]
0x3c47: mov rdi,qword ptr [rsp+0x38]
0x3c4c: lea r13,[rax+r14]
0x3c50: sub rdx,r14
0x3c53: mov rsi,r13
0x3c56: call 0x5870
0x3c5b: test rax,rax
0x3c5e: mov r15,rax
0x3c61: je 0x3cb1
0x3c63: cmp rax,0xffffffffffffffff
0x3c67: je 0x4285
0x3c6d: cmp rax,0xfffffffffffffffe
0x3c71: je 0x4211
0x3c77: cmp dword ptr [rsp+8],0x2
0x3c7c: sete al
0x3c7f: and al,byte ptr [rsp+0xf]
0x3c83: jne 0x3e20
0x3c89: mov edi,dword ptr [rsp+0x9c]
0x3c90: call 0x1a70
0x3c95: mov rdi,qword ptr [rsp+0x28]
0x3c9a: test eax,eax
0x3c9c: mov eax,0x0
0x3ca1: cmove r12d,eax
0x3ca5: add rbx,r15
0x3ca8: call 0x1a60
0x3cad: test eax,eax
0x3caf: je 0x3c33
0x3cb1: mov edx,r12d
0x3cb4: mov rdi,rbx
0x3cb7: movzx r8d,byte ptr [rsp+0x7d]
0x3cbd: xor edx,0x1
0x3cc0: movzx ebx,byte ptr [rsp+0x7e]
0x3cc5: movzx r10d,byte ptr [rsp+0x7f]
0x3ccb: and dl,byte ptr [rsp+0xd]
0x3ccf: mov r15,qword ptr [rsp+0x80]
0x3cd7: mov r14,qword ptr [rsp+0x40]
0x3cdc: mov r13,qword ptr [rsp+0x70]
0x3ce1: mov r11,qword ptr [rsp+0x30]
0x3ce6: cmp rdi,0x1
0x3cea: jbe 0x42eb
0x3cf0: mov rcx,rdi
0x3cf3: xor esi,esi
0x3cf5: movzx r9d,byte ptr [rsp+0xf]
0x3cfb: add rcx,rbp
0x3cfe: mov rdi,qword ptr [rsp+0x10]
0x3d03: jmp 0x3dbe
0x3d08: nop dword ptr [rax+rax]
0x3d10: cmp dword ptr [rsp+8],0x2
0x3d15: sete al
0x3d18: test r9b,r9b
0x3d1b: jne 0x41d0
0x3d21: mov esi,r8d
0x3d24: xor esi,0x1
0x3d27: and al,sil
0x3d2a: je 0x3d5b
0x3d2c: cmp r13,r15
0x3d2f: jbe 0x3d36
0x3d31: mov byte ptr [r14+r15],0x27
0x3d36: lea rsi,[r15+1]
0x3d3a: cmp r13,rsi
0x3d3d: jbe 0x3d45
0x3d3f: mov byte ptr [r14+r15+1],0x24
0x3d45: lea rsi,[r15+2]
0x3d49: cmp r13,rsi
0x3d4c: jbe 0x3d54
0x3d4e: mov byte ptr [r14+r15+2],0x27
0x3d54: add r15,0x3
0x3d58: mov r8d,eax
0x3d5b: cmp r13,r15
0x3d5e: jbe 0x3d65
0x3d60: mov byte ptr [r14+r15],0x5c
0x3d65: lea rax,[r15+1]
0x3d69: cmp r13,rax
0x3d6c: jbe 0x3d7b
0x3d6e: mov eax,ebx
0x3d70: shr al,0x6
0x3d73: add eax,0x30
0x3d76: mov byte ptr [r14+r15+1],al
0x3d7b: lea rax,[r15+2]
0x3d7f: cmp r13,rax
0x3d82: jbe 0x3d94
0x3d84: mov eax,ebx
0x3d86: shr al,0x3
0x3d89: and eax,0x7
0x3d8c: add eax,0x30
0x3d8f: mov byte ptr [r14+r15+2],al
0x3d94: and ebx,0x7
0x3d97: add rbp,0x1
0x3d9b: add r15,0x3
0x3d9f: add ebx,0x30
0x3da2: cmp rbp,rcx
0x3da5: jae 0x3590
0x3dab: mov esi,edx
0x3dad: cmp r13,r15
0x3db0: jbe 0x3db6
0x3db2: mov byte ptr [r14+r15],bl
0x3db6: movzx ebx,byte ptr [rdi+rbp]
0x3dba: add r15,0x1
0x3dbe: test dl,dl
0x3dc0: jne 0x3d10
0x3dc6: mov eax,esi
0x3dc8: xor eax,0x1
0x3dcb: and eax,r8d
0x3dce: test r10b,r10b
0x3dd1: je 0x3de1
0x3dd3: cmp r13,r15
0x3dd6: jbe 0x3ddd
0x3dd8: mov byte ptr [r14+r15],0x5c
0x3ddd: add r15,0x1
0x3de1: add rbp,0x1
0x3de5: cmp rbp,rcx
0x3de8: jae 0x356c
0x3dee: test al,al
0x3df0: je 0x41ee
0x3df6: cmp r13,r15
0x3df9: jbe 0x3e00
0x3dfb: mov byte ptr [r14+r15],0x27
0x3e00: lea rax,[r15+1]
0x3e04: cmp r13,rax
0x3e07: jbe 0x3e0f
0x3e09: mov byte ptr [r14+r15+1],0x27
0x3e0f: add r15,0x2
0x3e13: xor r10d,r10d
0x3e16: xor r8d,r8d
0x3e19: jmp 0x3dad
0x3e1b: nop dword ptr [rax+rax]
0x3e20: cmp r15,0x1
0x3e24: je 0x3c89
0x3e2a: mov rdi,qword ptr [rsp+0x10]
0x3e2f: lea rcx,[rdi+r15]
0x3e33: lea rdx,[rdi+r14+1]
0x3e38: lea r8,[rcx+r14]
0x3e3c: jmp 0x3e4d
0x3e3e: nop 
0x3e40: add rdx,0x1
0x3e44: cmp r8,rdx
0x3e47: je 0x3c89
0x3e4d: movzx ecx,byte ptr [rdx]
0x3e50: sub ecx,0x5b
0x3e53: cmp cl,0x21
0x3e56: ja 0x3e40
0x3e58: mov esi,0x1
0x3e5d: shl rsi,cl
0x3e60: mov rcx,rsi
0x3e63: movabs rsi,0x20000002b
0x3e6d: test rcx,rsi
0x3e70: je 0x3e40
0x3e72: mov r14,qword ptr [rsp+0x40]
0x3e77: mov r13,qword ptr [rsp+0x70]
0x3e7c: mov rbp,qword ptr [rsp+0x30]
0x3e81: mov dword ptr [rsp+8],0x2
0x3e89: cmp byte ptr [rsp+0xd],0x0
0x3e8e: je 0x3ea0
0x3e90: test al,al
0x3e92: mov eax,0x4
0x3e97: cmove eax,dword ptr [rsp+8]
0x3e9c: mov dword ptr [rsp+8],eax
0x3ea0: sub rsp,0x8
0x3ea4: mov rcx,rbp
0x3ea7: mov rsi,r13
0x3eaa: push qword ptr [rsp+0x68]
0x3eae: push qword ptr [rsp+0x78]
0x3eb2: mov rdi,r14
0x3eb5: push 0x0
0x3eb7: mov r9d,dword ptr [rsp+0x98]
0x3ebf: mov r8d,dword ptr [rsp+0x28]
0x3ec4: mov rdx,qword ptr [rsp+0x30]
0x3ec9: and r9d,0xfffffffd
0x3ecd: call 0x3300
0x3ed2: add rsp,0x20
0x3ed6: mov r15,rax
0x3ed9: mov rbx,qword ptr [rsp+0xa8]
0x3ee1: xor rbx,qword ptr fs:[0x28]
0x3eea: mov rax,r15
0x3eed: jne 0x44f3
0x3ef3: add rsp,0xb8
0x3efa: pop rbx
0x3efb: pop rbp
0x3efc: pop r12
0x3efe: pop r13
0x3f00: pop r14
0x3f02: pop r15
0x3f04: ret 
0x3f05: nop dword ptr [rax]
0x3f08: mov rbp,r11
0x3f0b: jmp 0x3e89
0x3f10: cmp r13,r15
0x3f13: jbe 0x3f1a
0x3f15: mov byte ptr [r14+r15],0x27
0x3f1a: lea rax,[r15+1]
0x3f1e: cmp r13,rax
0x3f21: jbe 0x3f29
0x3f23: mov byte ptr [r14+r15+1],0x5c
0x3f29: lea rax,[r15+2]
0x3f2d: cmp r13,rax
0x3f30: jbe 0x4522
0x3f36: mov rdx,r13
0x3f39: mov byte ptr [r14+r15+2],0x27
0x3f3f: mov r13,qword ptr [rsp+0x50]
0x3f44: jmp 0x3b22
0x3f49: mov eax,r12d
0x3f4c: mov ebx,0x30
0x3f51: xor r12d,r12d
0x3f54: jmp 0x3559
0x3f59: mov byte ptr [r14+r15+2],0x27
0x3f5f: jmp 0x3929
0x3f64: test ebx,ebx
0x3f66: jne 0x3393
0x3f6c: mov byte ptr [rsp+0xd],0x1
0x3f71: test r13,r13
0x3f74: jne 0x450a
0x3f7a: lea rax,[rip+0x23e4]
0x3f81: mov qword ptr [rsp+0x50],0x0
0x3f8a: mov byte ptr [rsp+0xe],0x1
0x3f8f: mov byte ptr [rsp+0x7c],0x0
0x3f94: xor r12d,r12d
0x3f97: mov byte ptr [rsp+0xf],0x0
0x3f9c: mov qword ptr [rsp+0x18],0x1
0x3fa5: mov qword ptr [rsp+0x48],rax
0x3faa: mov r15d,0x1
0x3fb0: mov dword ptr [rsp+8],0x2
0x3fb8: jmp 0x33d3
0x3fbd: nop dword ptr [rax]
0x3fc0: test ebx,ebx
0x3fc2: jne 0x43bd
0x3fc8: test r13,r13
0x3fcb: je 0x41f6
0x3fd1: mov byte ptr [r14],0x22
0x3fd5: mov byte ptr [rsp+0xe],0x1
0x3fda: xor r12d,r12d
0x3fdd: mov byte ptr [rsp+0x7c],0x0
0x3fe2: mov qword ptr [rsp+0x50],0x0
0x3feb: lea rax,[rip+0x2371]
0x3ff2: mov byte ptr [rsp+0xf],0x0
0x3ff7: mov byte ptr [rsp+0xd],0x1
0x3ffc: mov qword ptr [rsp+0x18],0x1
0x4005: mov r15d,0x1
0x400b: mov qword ptr [rsp+0x48],rax
0x4010: jmp 0x33d3
0x4015: lea rax,[rip+0x2347]
0x401c: mov byte ptr [rsp+0xe],0x1
0x4021: mov byte ptr [rsp+0x7c],0x0
0x4026: xor r12d,r12d
0x4029: mov qword ptr [rsp+0x50],0x0
0x4032: mov byte ptr [rsp+0xf],0x1
0x4037: mov byte ptr [rsp+0xd],0x1
0x403c: mov qword ptr [rsp+0x18],0x1
0x4045: xor r15d,r15d
0x4048: mov qword ptr [rsp+0x48],rax
0x404d: mov dword ptr [rsp+8],0x5
0x4055: jmp 0x33d3
0x405a: mov byte ptr [rsp+0xe],0x1
0x405f: mov byte ptr [rsp+0x7c],0x0
0x4064: xor r12d,r12d
0x4067: mov qword ptr [rsp+0x50],0x0
0x4070: mov byte ptr [rsp+0xf],0x0
0x4075: xor r15d,r15d
0x4078: mov byte ptr [rsp+0xd],0x1
0x407d: mov qword ptr [rsp+0x18],0x0
0x4086: mov qword ptr [rsp+0x48],0x0
0x408f: jmp 0x33d3
0x4094: cmp dword ptr [rsp+8],0xa
0x4099: je 0x40f1
0x409b: lea rsi,[rip+0x22c5]
0x40a2: xor edi,edi
0x40a4: mov edx,0x5
0x40a9: call 0x17d0
0x40ae: mov rcx,rax
0x40b1: mov qword ptr [rsp+0x68],rax
0x40b6: lea rax,[rip+0x22aa]
0x40bd: cmp rcx,rax
0x40c0: je 0x445e
0x40c6: lea rsi,[rip+0x2298]
0x40cd: xor edi,edi
0x40cf: mov edx,0x5
0x40d4: call 0x17d0
0x40d9: mov rcx,rax
0x40dc: mov qword ptr [rsp+0x60],rax
0x40e1: lea rax,[rip+0x227d]
0x40e8: cmp rcx,rax
0x40eb: je 0x4474
0x40f1: xor r15d,r15d
0x40f4: test ebx,ebx
0x40f6: je 0x42bd
0x40fc: test ebx,ebx
0x40fe: mov rbx,qword ptr [rsp+0x60]
0x4103: setne byte ptr [rsp+0xf]
0x4108: xor r12d,r12d
0x410b: mov rdi,rbx
0x410e: call 0x17f0
0x4113: mov qword ptr [rsp+0x48],rbx
0x4118: mov qword ptr [rsp+0x18],rax
0x411d: mov byte ptr [rsp+0xe],0x1
0x4122: mov byte ptr [rsp+0x7c],0x0
0x4127: mov qword ptr [rsp+0x50],0x0
0x4130: mov byte ptr [rsp+0xd],0x1
0x4135: jmp 0x33d3
0x413a: mov byte ptr [rsp+0xe],0x1
0x413f: mov byte ptr [rsp+0x7c],0x0
0x4144: xor r12d,r12d
0x4147: mov qword ptr [rsp+0x50],0x0
0x4150: mov byte ptr [rsp+0xf],0x0
0x4155: xor r15d,r15d
0x4158: mov byte ptr [rsp+0xd],0x0
0x415d: mov qword ptr [rsp+0x18],0x0
0x4166: mov qword ptr [rsp+0x48],0x0
0x416f: jmp 0x33d3
0x4174: mov byte ptr [rsp+0xe],0x1
0x4179: mov byte ptr [rsp+0x7c],0x0
0x417e: xor r12d,r12d
0x4181: mov qword ptr [rsp+0x50],0x0
0x418a: mov byte ptr [rsp+0xf],0x1
0x418f: mov byte ptr [rsp+0xd],0x1
0x4194: jmp 0x33b3
0x4199: cmp r13,r15
0x419c: jbe 0x41a3
0x419e: mov byte ptr [r14+r15],0x30
0x41a3: lea rax,[rcx+2]
0x41a7: cmp r13,rax
0x41aa: jbe 0x41b2
0x41ac: mov byte ptr [r14+rcx+2],0x30
0x41b2: mov eax,r12d
0x41b5: lea r15,[rcx+3]
0x41b9: xor r12d,r12d
0x41bc: mov ebx,0x30
0x41c1: jmp 0x3528
0x41c6: nop word ptr cs:[rax+rax]
0x41d0: movzx ebx,byte ptr [rsp+0xf]
0x41d5: mov rbp,r11
0x41d8: mov byte ptr [rsp+0xd],bl
0x41dc: jmp 0x3e89
0x41e1: movzx edx,byte ptr [rsp+0xd]
0x41e6: xor r12d,r12d
0x41e9: jmp 0x3cf0
0x41ee: xor r10d,r10d
0x41f1: jmp 0x3dad
0x41f6: mov qword ptr [rsp+0x50],0x0
0x41ff: mov byte ptr [rsp+0xe],0x1
0x4204: xor r12d,r12d
0x4207: mov byte ptr [rsp+0x7c],0x0
0x420c: jmp 0x3feb
0x4211: mov r11,qword ptr [rsp+0x30]
0x4216: mov rsi,r14
0x4219: mov rcx,r13
0x421c: mov rax,rbx
0x421f: mov rdi,rbx
0x4222: movzx r8d,byte ptr [rsp+0x7d]
0x4228: movzx ebx,byte ptr [rsp+0x7e]
0x422d: mov r9,qword ptr [rsp+0x88]
0x4235: cmp rsi,r11
0x4238: movzx r10d,byte ptr [rsp+0x7f]
0x423e: mov r15,qword ptr [rsp+0x80]
0x4246: mov r14,qword ptr [rsp+0x40]
0x424b: mov r13,qword ptr [rsp+0x70]
0x4250: jae 0x4278
0x4252: cmp byte ptr [rcx],0x0
0x4255: jne 0x4267
0x4257: jmp 0x4278
0x4259: nop dword ptr [rax]
0x4260: cmp byte ptr [r9+rax],0x0
0x4265: je 0x4275
0x4267: add rax,0x1
0x426b: lea rdx,[rbp+rax]
0x4270: cmp r11,rdx
0x4273: ja 0x4260
0x4275: mov rdi,rax
0x4278: movzx edx,byte ptr [rsp+0xd]
0x427d: xor r12d,r12d
0x4280: jmp 0x3ce6
0x4285: mov rdi,rbx
0x4288: movzx r8d,byte ptr [rsp+0x7d]
0x428e: movzx ebx,byte ptr [rsp+0x7e]
0x4293: movzx r10d,byte ptr [rsp+0x7f]
0x4299: mov r15,qword ptr [rsp+0x80]
0x42a1: xor r12d,r12d
0x42a4: mov r14,qword ptr [rsp+0x40]
0x42a9: mov r13,qword ptr [rsp+0x70]
0x42ae: mov r11,qword ptr [rsp+0x30]
0x42b3: movzx edx,byte ptr [rsp+0xd]
0x42b8: jmp 0x3ce6
0x42bd: mov rdx,qword ptr [rsp+0x68]
0x42c2: movzx eax,byte ptr [rdx]
0x42c5: test al,al
0x42c7: je 0x40fc
0x42cd: nop dword ptr [rax]
0x42d0: cmp r13,r15
0x42d3: jbe 0x42d9
0x42d5: mov byte ptr [r14+r15],al
0x42d9: add r15,0x1
0x42dd: movzx eax,byte ptr [rdx+r15]
0x42e2: test al,al
0x42e4: jne 0x42d0
0x42e6: jmp 0x40fc
0x42eb: mov eax,edx
0x42ed: jmp 0x3847
0x42f2: movzx ebx,byte ptr [rax+rcx]
0x42f6: cmp bl,0x3e
0x42f9: ja 0x3b70
0x42ff: movabs rax,0x7000a38200000000
0x4309: bt rax,rbx
0x430d: jae 0x3b70
0x4313: cmp byte ptr [rsp+0xf],0x0
0x4318: jne 0x4502
0x431e: cmp r13,r15
0x4321: jbe 0x4328
0x4323: mov byte ptr [r14+r15],0x3f
0x4328: lea rax,[r15+1]
0x432c: cmp r13,rax
0x432f: jbe 0x4337
0x4331: mov byte ptr [r14+r15+1],0x22
0x4337: lea rax,[r15+2]
0x433b: cmp r13,rax
0x433e: jbe 0x4346
0x4340: mov byte ptr [r14+r15+2],0x22
0x4346: lea rax,[r15+3]
0x434a: cmp r13,rax
0x434d: jbe 0x4355
0x434f: mov byte ptr [r14+r15+3],0x3f
0x4355: add r15,0x4
0x4359: xor edx,edx
0x435b: xor r12d,r12d
0x435e: xor eax,eax
0x4360: mov rbp,rcx
0x4363: jmp 0x3528
0x4368: test ebx,ebx
0x436a: je 0x44f8
0x4370: lea rax,[rip+0x1fee]
0x4377: mov byte ptr [rsp+0xe],0x1
0x437c: mov byte ptr [rsp+0x7c],0x0
0x4381: xor r12d,r12d
0x4384: mov qword ptr [rsp+0x50],0x0
0x438d: mov byte ptr [rsp+0xf],0x1
0x4392: mov byte ptr [rsp+0xd],0x0
0x4397: mov qword ptr [rsp+0x18],0x1
0x43a0: xor r15d,r15d
0x43a3: mov qword ptr [rsp+0x48],rax
0x43a8: jmp 0x33d3
0x43ad: nop dword ptr [rax]
0x43b0: mov rbp,r11
0x43b3: movzx eax,byte ptr [rsp+0xf]
0x43b8: jmp 0x3e89
0x43bd: lea rax,[rip+0x1f9f]
0x43c4: mov byte ptr [rsp+0xe],0x1
0x43c9: mov byte ptr [rsp+0x7c],0x0
0x43ce: xor r12d,r12d
0x43d1: mov qword ptr [rsp+0x50],0x0
0x43da: mov byte ptr [rsp+0xf],0x1
0x43df: mov byte ptr [rsp+0xd],0x1
0x43e4: mov qword ptr [rsp+0x18],0x1
0x43ed: xor r15d,r15d
0x43f0: mov qword ptr [rsp+0x48],rax
0x43f5: jmp 0x33d3
0x43fa: mov eax,edx
0x43fc: mov rbx,qword ptr [rsp+0x48]
0x4401: test rbx,rbx
0x4404: je 0x4432
0x4406: test al,al
0x4408: je 0x4432
0x440a: movzx ecx,byte ptr [rbx]
0x440d: mov rax,rbx
0x4410: test cl,cl
0x4412: je 0x4432
0x4414: mov rdx,r15
0x4417: sub rax,r15
0x441a: cmp r13,rdx
0x441d: jbe 0x4423
0x441f: mov byte ptr [r14+rdx],cl
0x4423: add rdx,0x1
0x4427: movzx ecx,byte ptr [rax+rdx]
0x442b: test cl,cl
0x442d: jne 0x441a
0x442f: mov r15,rdx
0x4432: cmp r13,r15
0x4435: jbe 0x3ed9
0x443b: mov byte ptr [r14+r15],0x0
0x4440: jmp 0x3ed9
0x4445: cmp dword ptr [rsp+8],0x2
0x444a: movzx ebx,byte ptr [rsp+0xf]
0x444f: mov rbp,r11
0x4452: sete al
0x4455: mov byte ptr [rsp+0xd],bl
0x4459: jmp 0x3e89
0x445e: mov esi,dword ptr [rsp+8]
0x4462: mov rdi,rcx
0x4465: call 0x3210
0x446a: mov qword ptr [rsp+0x68],rax
0x446f: jmp 0x40c6
0x4474: mov esi,dword ptr [rsp+8]
0x4478: mov rdi,rcx
0x447b: call 0x3210
0x4480: mov qword ptr [rsp+0x60],rax
0x4485: jmp 0x40f1
0x448a: movzx ebx,byte ptr [rsp+0xf]
0x448f: mov rbp,r11
0x4492: mov eax,edx
0x4494: mov byte ptr [rsp+0xd],bl
0x4498: jmp 0x3e89
0x449d: sub rsp,0x8
0x44a1: mov r8d,0x5
0x44a7: mov rcx,r11
0x44aa: push qword ptr [rsp+0x68]
0x44ae: push qword ptr [rsp+0x78]
0x44b2: mov rdi,r14
0x44b5: push qword ptr [rsp+0x38]
0x44b9: mov r9d,dword ptr [rsp+0x98]
0x44c1: mov rdx,qword ptr [rsp+0x30]
0x44c6: mov rsi,qword ptr [rsp+0x70]
0x44cb: call 0x3300
0x44d0: add rsp,0x20
0x44d4: mov r15,rax
0x44d7: jmp 0x3ed9
0x44dc: movzx eax,byte ptr [rsp+0x7c]
0x44e1: jmp 0x43fc
0x44e6: mov dword ptr [rsp+8],0x2
0x44ee: jmp 0x3e89
0x44f3: call 0x1800
0x44f8: mov byte ptr [rsp+0xd],0x0
0x44fd: jmp 0x3f71
0x4502: mov rbp,r11
0x4505: jmp 0x3ea0
0x450a: mov byte ptr [rsp+0xe],0x1
0x450f: xor eax,eax
0x4511: xor r12d,r12d
0x4514: mov qword ptr [rsp+0x50],0x0
0x451d: jmp 0x3ac4
0x4522: mov rdx,r13
0x4525: mov r13,qword ptr [rsp+0x50]
0x452a: jmp 0x3b22
0x452f: call 0x1710
0x4534: nop 
0x4536: nop word ptr cs:[rax+rax]
0x4540: push r15
0x4542: push r14
0x4544: movsxd r15,edi
0x4547: push r13
0x4549: push r12
0x454b: mov r14,rdx
0x454e: push rbp
0x454f: push rbx
0x4550: mov rbp,rcx
0x4553: sub rsp,0x28
0x4557: mov qword ptr [rsp+8],rsi
0x455c: call 0x1720
0x4561: mov r13,rax
0x4564: mov eax,dword ptr [rax]
0x4566: test r15d,r15d
0x4569: mov rbx,qword ptr [rip+0x203b10]
0x4570: mov dword ptr [rsp+0x18],eax
0x4574: js 0x46e1
0x457a: cmp dword ptr [rip+0x203af7],r15d
0x4581: jg 0x45e5
0x4583: cmp r15d,0x7fffffff
0x458a: je 0x46e6
0x4590: lea r12d,[r15+1]
0x4594: lea rax,[rip+0x203af5]
0x459b: movsxd rsi,r12d
0x459e: shl rsi,0x4
0x45a2: cmp rbx,rax
0x45a5: je 0x46c0
0x45ab: mov rdi,rbx
0x45ae: call 0x5520
0x45b3: mov rbx,rax
0x45b6: mov qword ptr [rip+0x203ac3],rax
0x45bd: movsxd rdi,dword ptr [rip+0x203ab4]
0x45c4: mov edx,r12d
0x45c7: xor esi,esi
0x45c9: sub edx,edi
0x45cb: shl rdi,0x4
0x45cf: movsxd rdx,edx
0x45d2: add rdi,rbx
0x45d5: shl rdx,0x4
0x45d9: call 0x1880
0x45de: mov dword ptr [rip+0x203a93],r12d
0x45e5: mov eax,dword ptr [rbp+4]
0x45e8: shl r15,0x4
0x45ec: sub rsp,0x8
0x45f0: add rbx,r15
0x45f3: lea r15,[rbp+8]
0x45f7: mov r8d,dword ptr [rbp]
0x45fb: mov r11,qword ptr [rbx]
0x45fe: mov r12,qword ptr [rbx+8]
0x4602: mov rcx,r14
0x4605: or eax,0x1
0x4608: mov dword ptr [rsp+0x24],eax
0x460c: push qword ptr [rbp+0x30]
0x460f: mov r9d,eax
0x4612: push qword ptr [rbp+0x28]
0x4615: push r15
0x4617: mov rsi,r11
0x461a: mov rdx,qword ptr [rsp+0x28]
0x461f: mov rdi,r12
0x4622: mov qword ptr [rsp+0x30],r11
0x4627: call 0x3300
0x462c: add rsp,0x20
0x4630: mov r11,qword ptr [rsp+0x10]
0x4635: cmp r11,rax
0x4638: ja 0x46a1
0x463a: lea rsi,[rax+1]
0x463e: lea rax,[rip+0x203b5b]
0x4645: cmp r12,rax
0x4648: mov qword ptr [rbx],rsi
0x464b: je 0x465f
0x464d: mov rdi,r12
0x4650: mov qword ptr [rsp+0x10],rsi
0x4655: call 0x16f0
0x465a: mov rsi,qword ptr [rsp+0x10]
0x465f: mov rdi,rsi
0x4662: mov qword ptr [rsp+0x10],rsi
0x4667: call 0x54c0
0x466c: sub rsp,0x8
0x4670: mov qword ptr [rbx+8],rax
0x4674: mov r8d,dword ptr [rbp]
0x4678: push qword ptr [rbp+0x30]
0x467b: push qword ptr [rbp+0x28]
0x467e: mov rcx,r14
0x4681: push r15
0x4683: mov r9d,dword ptr [rsp+0x3c]
0x4688: mov rdi,rax
0x468b: mov rdx,qword ptr [rsp+0x28]
0x4690: mov rsi,qword ptr [rsp+0x30]
0x4695: mov r12,rax
0x4698: call 0x3300
0x469d: add rsp,0x20
0x46a1: mov eax,dword ptr [rsp+0x18]
0x46a5: mov dword ptr [r13],eax
0x46a9: add rsp,0x28
0x46ad: mov rax,r12
0x46b0: pop rbx
0x46b1: pop rbp
0x46b2: pop r12
0x46b4: pop r13
0x46b6: pop r14
0x46b8: pop r15
0x46ba: ret 
0x46bb: nop dword ptr [rax+rax]
0x46c0: xor edi,edi
0x46c2: call 0x5520
0x46c7: movdqa xmm0,xmmword ptr [rip+0x2039c1]
0x46cf: mov rbx,rax
0x46d2: mov qword ptr [rip+0x2039a7],rax
0x46d9: movups xmmword ptr [rax],xmm0
0x46dc: jmp 0x45bd
0x46e1: call 0x1710
0x46e6: call 0x5710
0x46eb: nop dword ptr [rax+rax]
0x46f0: push r12
0x46f2: push rbp
0x46f3: push rbx
0x46f4: mov rbx,rdi
0x46f7: call 0x1720
0x46fc: mov r12d,dword ptr [rax]
0x46ff: mov rbp,rax
0x4702: lea rax,[rip+0x203b97]
0x4709: test rbx,rbx
0x470c: mov esi,0x38
0x4711: cmove rbx,rax
0x4715: mov rdi,rbx
0x4718: call 0x56c0
0x471d: mov dword ptr [rbp],r12d
0x4721: pop rbx
0x4722: pop rbp
0x4723: pop r12
0x4725: ret 
0x4726: nop word ptr cs:[rax+rax]
0x4730: lea rax,[rip+0x203b69]
0x4737: test rdi,rdi
0x473a: cmove rdi,rax
0x473e: mov eax,dword ptr [rdi]
0x4740: ret 
0x4741: nop dword ptr [rax+rax]
0x4746: nop word ptr cs:[rax+rax]
0x4750: lea rax,[rip+0x203b49]
0x4757: test rdi,rdi
0x475a: cmove rdi,rax
0x475e: mov dword ptr [rdi],esi
0x4760: ret 
0x4761: nop dword ptr [rax+rax]
0x4766: nop word ptr cs:[rax+rax]
0x4770: lea rax,[rip+0x203b29]
0x4777: test rdi,rdi
0x477a: mov ecx,esi
0x477c: cmove rdi,rax
0x4780: mov eax,esi
0x4782: and ecx,0x1f
0x4785: shr al,0x5
0x4788: movzx eax,al
0x478b: lea rdi,[rdi+rax*4+8]
0x4790: mov esi,dword ptr [rdi]
0x4792: mov eax,esi
0x4794: shr eax,cl
0x4796: xor edx,eax
0x4798: and eax,0x1
0x479b: and edx,0x1
0x479e: shl edx,cl
0x47a0: xor edx,esi
0x47a2: mov dword ptr [rdi],edx
0x47a4: ret 
0x47a5: nop 
0x47a6: nop word ptr cs:[rax+rax]
0x47b0: lea rax,[rip+0x203ae9]
0x47b7: test rdi,rdi
0x47ba: cmove rdi,rax
0x47be: mov eax,dword ptr [rdi+4]
0x47c1: mov dword ptr [rdi+4],esi
0x47c4: ret 
0x47c5: nop 
0x47c6: nop word ptr cs:[rax+rax]
0x47d0: lea rax,[rip+0x203ac9]
0x47d7: test rdi,rdi
0x47da: cmove rdi,rax
0x47de: test rsi,rsi
0x47e1: mov dword ptr [rdi],0xa
0x47e7: je 0x47f7
0x47e9: test rdx,rdx
0x47ec: je 0x47f7
0x47ee: mov qword ptr [rdi+0x28],rsi
0x47f2: mov qword ptr [rdi+0x30],rdx
0x47f6: ret 
0x47f7: sub rsp,0x8
0x47fb: call 0x1710
0x4800: push r15
0x4802: push r14
0x4804: lea rax,[rip+0x203a95]
0x480b: push r13
0x480d: push r12
0x480f: mov r13,rdi
0x4812: push rbp
0x4813: push rbx
0x4814: mov rbx,r8
0x4817: mov r14,rsi
0x481a: mov r15,rdx
0x481d: sub rsp,0x18
0x4821: test r8,r8
0x4824: cmove rbx,rax
0x4828: mov qword ptr [rsp+8],rcx
0x482d: call 0x1720
0x4832: mov r12d,dword ptr [rax]
0x4835: mov rbp,rax
0x4838: lea rax,[rbx+8]
0x483c: sub rsp,0x8
0x4840: mov r9d,dword ptr [rbx+4]
0x4844: push qword ptr [rbx+0x30]
0x4847: mov r8d,dword ptr [rbx]
0x484a: push qword ptr [rbx+0x28]
0x484d: mov rdx,r15
0x4850: push rax
0x4851: mov rcx,qword ptr [rsp+0x28]
0x4856: mov rsi,r14
0x4859: mov rdi,r13
0x485c: call 0x3300
0x4861: mov dword ptr [rbp],r12d
0x4865: add rsp,0x38
0x4869: pop rbx
0x486a: pop rbp
0x486b: pop r12
0x486d: pop r13
0x486f: pop r14
0x4871: pop r15
0x4873: ret 
0x4874: nop 
0x4876: nop word ptr cs:[rax+rax]
0x4880: push r15
0x4882: push r14
0x4884: lea rax,[rip+0x203a15]
0x488b: push r13
0x488d: push r12
0x488f: mov r12,rdx
0x4892: push rbp
0x4893: push rbx
0x4894: mov rbx,rcx
0x4897: mov r14,rdi
0x489a: mov r15,rsi
0x489d: sub rsp,0x38
0x48a1: test rcx,rcx
0x48a4: cmove rbx,rax
0x48a8: xor ebp,ebp
0x48aa: call 0x1720
0x48af: test r12,r12
0x48b2: mov r13,rax
0x48b5: mov eax,dword ptr [rax]
0x48b7: sete bpl
0x48bb: or ebp,dword ptr [rbx+4]
0x48be: lea r10,[rbx+8]
0x48c2: sub rsp,0x8
0x48c6: mov r8d,dword ptr [rbx]
0x48c9: mov rcx,r15
0x48cc: mov dword ptr [rsp+0x14],eax
0x48d0: push qword ptr [rbx+0x30]
0x48d3: mov rdx,r14
0x48d6: push qword ptr [rbx+0x28]
0x48d9: push r10
0x48db: xor esi,esi
0x48dd: mov r9d,ebp
0x48e0: xor edi,edi
0x48e2: mov qword ptr [rsp+0x40],r10
0x48e7: call 0x3300
0x48ec: lea rsi,[rax+1]
0x48f0: mov qword ptr [rsp+0x48],rax
0x48f5: add rsp,0x20
0x48f9: mov rdi,rsi
0x48fc: mov qword ptr [rsp+0x18],rsi
0x4901: call 0x54c0
0x4906: mov qword ptr [rsp+0x10],rax
0x490b: sub rsp,0x8
0x490f: push qword ptr [rbx+0x30]
0x4912: push qword ptr [rbx+0x28]
0x4915: mov r10,qword ptr [rsp+0x38]
0x491a: mov r9d,ebp
0x491d: mov r8d,dword ptr [rbx]
0x4920: mov rcx,r15
0x4923: mov rdx,r14
0x4926: mov rdi,rax
0x4929: push r10
0x492b: mov rsi,qword ptr [rsp+0x38]
0x4930: call 0x3300
0x4935: mov eax,dword ptr [rsp+0x2c]
0x4939: add rsp,0x20
0x493d: test r12,r12
0x4940: mov dword ptr [r13],eax
0x4944: je 0x494f
0x4946: mov r11,qword ptr [rsp+0x28]
0x494b: mov qword ptr [r12],r11
0x494f: mov rax,qword ptr [rsp+0x10]
0x4954: add rsp,0x38
0x4958: pop rbx
0x4959: pop rbp
0x495a: pop r12
0x495c: pop r13
0x495e: pop r14
0x4960: pop r15
0x4962: ret 
0x4963: nop dword ptr [rax]
0x4966: nop word ptr cs:[rax+rax]
0x4970: mov rcx,rdx
0x4973: xor edx,edx
0x4975: jmp 0x4880
0x497a: nop word ptr [rax+rax]
0x4980: mov eax,dword ptr [rip+0x2036f2]
0x4986: push r12
0x4988: mov r12,qword ptr [rip+0x2036f1]
0x498f: push rbp
0x4990: push rbx
0x4991: cmp eax,0x1
0x4994: jle 0x49c1
0x4996: sub eax,0x2
0x4999: lea rbx,[r12+0x18]
0x499e: shl rax,0x4
0x49a2: lea rbp,[r12+rax+0x28]
0x49a7: nop word ptr [rax+rax]
0x49b0: mov rdi,qword ptr [rbx]
0x49b3: add rbx,0x10
0x49b7: call 0x16f0
0x49bc: cmp rbx,rbp
0x49bf: jne 0x49b0
0x49c1: mov rdi,qword ptr [r12+8]
0x49c6: lea rbx,[rip+0x2037d3]
0x49cd: cmp rdi,rbx
0x49d0: je 0x49e9
0x49d2: call 0x16f0
0x49d7: mov qword ptr [rip+0x2036ae],0x100
0x49e2: mov qword ptr [rip+0x2036af],rbx
0x49e9: lea rbx,[rip+0x2036a0]
0x49f0: cmp r12,rbx
0x49f3: je 0x4a04
0x49f5: mov rdi,r12
0x49f8: call 0x16f0
0x49fd: mov qword ptr [rip+0x20367c],rbx
0x4a04: pop rbx
0x4a05: mov dword ptr [rip+0x203669],0x1
0x4a0f: pop rbp
0x4a10: pop r12
0x4a12: ret 
0x4a13: nop dword ptr [rax]
0x4a16: nop word ptr cs:[rax+rax]
0x4a20: lea rcx,[rip+0x203879]
0x4a27: mov rdx,0xffffffffffffffff
0x4a2e: jmp 0x4540
0x4a33: nop dword ptr [rax]
0x4a36: nop word ptr cs:[rax+rax]
0x4a40: lea rcx,[rip+0x203859]
0x4a47: jmp 0x4540
0x4a4c: nop dword ptr [rax]
0x4a50: lea rcx,[rip+0x203849]
0x4a57: mov rsi,rdi
0x4a5a: mov rdx,0xffffffffffffffff
0x4a61: xor edi,edi
0x4a63: jmp 0x4540
0x4a68: nop dword ptr [rax+rax]
0x4a70: lea rcx,[rip+0x203829]
0x4a77: mov rdx,rsi
0x4a7a: mov rsi,rdi
0x4a7d: xor edi,edi
0x4a7f: jmp 0x4540
0x4a84: nop 
0x4a86: nop word ptr cs:[rax+rax]
0x4a90: sub rsp,0x48
0x4a94: mov rax,rdx
0x4a97: mov rdx,qword ptr fs:[0x28]
0x4aa0: mov qword ptr [rsp+0x38],rdx
0x4aa5: xor edx,edx
0x4aa7: cmp esi,0xa
0x4aaa: je 0x4b14
0x4aac: mov dword ptr [rsp],esi
0x4aaf: mov rcx,rsp
0x4ab2: mov rdx,0xffffffffffffffff
0x4ab9: mov rsi,rax
0x4abc: mov qword ptr [rsp+4],0x0
0x4ac5: mov qword ptr [rsp+0xc],0x0
0x4ace: mov qword ptr [rsp+0x14],0x0
0x4ad7: mov qword ptr [rsp+0x1c],0x0
0x4ae0: mov qword ptr [rsp+0x24],0x0
0x4ae9: mov qword ptr [rsp+0x2c],0x0
0x4af2: mov dword ptr [rsp+0x34],0x0
0x4afa: call 0x4540
0x4aff: mov rcx,qword ptr [rsp+0x38]
0x4b04: xor rcx,qword ptr fs:[0x28]
0x4b0d: jne 0x4b19
0x4b0f: add rsp,0x48
0x4b13: ret 
0x4b14: call 0x1710
0x4b19: call 0x1800
0x4b1e: nop 
0x4b20: sub rsp,0x48
0x4b24: mov rax,rdx
0x4b27: mov rdx,rcx
0x4b2a: mov rcx,qword ptr fs:[0x28]
0x4b33: mov qword ptr [rsp+0x38],rcx
0x4b38: xor ecx,ecx
0x4b3a: cmp esi,0xa
0x4b3d: je 0x4ba0
0x4b3f: mov dword ptr [rsp],esi
0x4b42: mov rcx,rsp
0x4b45: mov rsi,rax
0x4b48: mov qword ptr [rsp+4],0x0
0x4b51: mov qword ptr [rsp+0xc],0x0
0x4b5a: mov qword ptr [rsp+0x14],0x0
0x4b63: mov qword ptr [rsp+0x1c],0x0
0x4b6c: mov qword ptr [rsp+0x24],0x0
0x4b75: mov qword ptr [rsp+0x2c],0x0
0x4b7e: mov dword ptr [rsp+0x34],0x0
0x4b86: call 0x4540
0x4b8b: mov rdx,qword ptr [rsp+0x38]
0x4b90: xor rdx,qword ptr fs:[0x28]
0x4b99: jne 0x4ba5
0x4b9b: add rsp,0x48
0x4b9f: ret 
0x4ba0: call 0x1710
0x4ba5: call 0x1800
0x4baa: nop word ptr [rax+rax]
0x4bb0: mov rdx,rsi
0x4bb3: mov esi,edi
0x4bb5: xor edi,edi
0x4bb7: jmp 0x4a90
0x4bbc: nop dword ptr [rax]
0x4bc0: mov rcx,rdx
0x4bc3: mov rdx,rsi
0x4bc6: mov esi,edi
0x4bc8: xor edi,edi
0x4bca: jmp 0x4b20
0x4bcf: nop 
0x4bd0: sub rsp,0x48
0x4bd4: mov ecx,edx
0x4bd6: mov rax,qword ptr fs:[0x28]
0x4bdf: mov qword ptr [rsp+0x38],rax
0x4be4: xor eax,eax
0x4be6: mov rax,qword ptr [rip+0x2036e3]
0x4bed: mov r8,rsp
0x4bf0: and ecx,0x1f
0x4bf3: movdqa xmm0,xmmword ptr [rip+0x2036a5]
0x4bfb: mov qword ptr [rsp+0x30],rax
0x4c00: mov eax,edx
0x4c02: movaps xmmword ptr [rsp],xmm0
0x4c06: shr al,0x5
0x4c09: movzx eax,al
0x4c0c: lea r9,[r8+rax*4+8]
0x4c11: movdqa xmm0,xmmword ptr [rip+0x203697]
0x4c19: movaps xmmword ptr [rsp+0x10],xmm0
0x4c1e: movdqa xmm0,xmmword ptr [rip+0x20369a]
0x4c26: movaps xmmword ptr [rsp+0x20],xmm0
0x4c2b: mov edx,dword ptr [r9]
0x4c2e: mov eax,edx
0x4c30: shr eax,cl
0x4c32: not eax
0x4c34: and eax,0x1
0x4c37: shl eax,cl
0x4c39: mov rcx,r8
0x4c3c: xor eax,edx
0x4c3e: mov rdx,rsi
0x4c41: mov rsi,rdi
0x4c44: mov dword ptr [r9],eax
0x4c47: xor edi,edi
0x4c49: call 0x4540
0x4c4e: mov rsi,qword ptr [rsp+0x38]
0x4c53: xor rsi,qword ptr fs:[0x28]
0x4c5c: jne 0x4c63
0x4c5e: add rsp,0x48
0x4c62: ret 
0x4c63: call 0x1800
0x4c68: nop dword ptr [rax+rax]
0x4c70: movsx edx,sil
0x4c74: mov rsi,0xffffffffffffffff
0x4c7b: jmp 0x4bd0
0x4c80: mov edx,0x3a
0x4c85: mov rsi,0xffffffffffffffff
0x4c8c: jmp 0x4bd0
0x4c91: nop dword ptr [rax+rax]
0x4c96: nop word ptr cs:[rax+rax]
0x4ca0: mov edx,0x3a
0x4ca5: jmp 0x4bd0
0x4caa: nop word ptr [rax+rax]
0x4cb0: sub rsp,0x48
0x4cb4: mov rax,rdx
0x4cb7: mov rdx,qword ptr fs:[0x28]
0x4cc0: mov qword ptr [rsp+0x38],rdx
0x4cc5: xor edx,edx
0x4cc7: cmp esi,0xa
0x4cca: je 0x4d34
0x4ccc: mov dword ptr [rsp],esi
0x4ccf: mov rcx,rsp
0x4cd2: mov rdx,0xffffffffffffffff
0x4cd9: mov rsi,rax
0x4cdc: mov qword ptr [rsp+4],0x0
0x4ce5: mov qword ptr [rsp+0xc],0x4000000
0x4cee: mov qword ptr [rsp+0x14],0x0
0x4cf7: mov qword ptr [rsp+0x1c],0x0
0x4d00: mov qword ptr [rsp+0x24],0x0
0x4d09: mov qword ptr [rsp+0x2c],0x0
0x4d12: mov dword ptr [rsp+0x34],0x0
0x4d1a: call 0x4540
0x4d1f: mov rcx,qword ptr [rsp+0x38]
0x4d24: xor rcx,qword ptr fs:[0x28]
0x4d2d: jne 0x4d39
0x4d2f: add rsp,0x48
0x4d33: ret 
0x4d34: call 0x1710
0x4d39: call 0x1800
0x4d3e: nop 
0x4d40: sub rsp,0x48
0x4d44: mov r9,rcx
0x4d47: mov rcx,qword ptr [rip+0x203582]
0x4d4e: movdqa xmm0,xmmword ptr [rip+0x20354a]
0x4d56: mov rax,qword ptr fs:[0x28]
0x4d5f: mov qword ptr [rsp+0x38],rax
0x4d64: xor eax,eax
0x4d66: movaps xmmword ptr [rsp],xmm0
0x4d6a: test rsi,rsi
0x4d6d: mov qword ptr [rsp+0x30],rcx
0x4d72: mov dword ptr [rsp],0xa
0x4d79: movdqa xmm0,xmmword ptr [rip+0x20352f]
0x4d81: movaps xmmword ptr [rsp+0x10],xmm0
0x4d86: movdqa xmm0,xmmword ptr [rip+0x203532]
0x4d8e: movaps xmmword ptr [rsp+0x20],xmm0
0x4d93: je 0x4dc7
0x4d95: test rdx,rdx
0x4d98: je 0x4dc7
0x4d9a: mov qword ptr [rsp+0x28],rsi
0x4d9f: mov qword ptr [rsp+0x30],rdx
0x4da4: mov rcx,rsp
0x4da7: mov rdx,r8
0x4daa: mov rsi,r9
0x4dad: call 0x4540
0x4db2: mov rdi,qword ptr [rsp+0x38]
0x4db7: xor rdi,qword ptr fs:[0x28]
0x4dc0: jne 0x4dcc
0x4dc2: add rsp,0x48
0x4dc6: ret 
0x4dc7: call 0x1710
0x4dcc: call 0x1800
0x4dd1: nop dword ptr [rax+rax]
0x4dd6: nop word ptr cs:[rax+rax]
0x4de0: mov r8,0xffffffffffffffff
0x4de7: jmp 0x4d40
0x4dec: nop dword ptr [rax]
0x4df0: mov rcx,rdx
0x4df3: mov r8,0xffffffffffffffff
0x4dfa: mov rdx,rsi
0x4dfd: mov rsi,rdi
0x4e00: xor edi,edi
0x4e02: jmp 0x4d40
0x4e07: nop word ptr [rax+rax]
0x4e10: mov r8,rcx
0x4e13: mov rcx,rdx
0x4e16: mov rdx,rsi
0x4e19: mov rsi,rdi
0x4e1c: xor edi,edi
0x4e1e: jmp 0x4d40
0x4e23: nop dword ptr [rax]
0x4e26: nop word ptr cs:[rax+rax]
0x4e30: lea rcx,[rip+0x203209]
0x4e37: jmp 0x4540
0x4e3c: nop dword ptr [rax]
0x4e40: lea rcx,[rip+0x2031f9]
0x4e47: mov rdx,rsi
0x4e4a: mov rsi,rdi
0x4e4d: xor edi,edi
0x4e4f: jmp 0x4540
0x4e54: nop 
0x4e56: nop word ptr cs:[rax+rax]
0x4e60: lea rcx,[rip+0x2031d9]
0x4e67: mov rdx,0xffffffffffffffff
0x4e6e: jmp 0x4540
0x4e73: nop dword ptr [rax]
0x4e76: nop word ptr cs:[rax+rax]
0x4e80: lea rcx,[rip+0x2031b9]
0x4e87: mov rsi,rdi
0x4e8a: mov rdx,0xffffffffffffffff
0x4e91: xor edi,edi
0x4e93: jmp 0x4540
0x4e98: nop dword ptr [rax+rax]
0x4f46: nop word ptr cs:[rax+rax]
0x4fd5: nop dword ptr [rax]
0x4fd8: mov r8,rcx
0x4fdb: mov rcx,rdx
0x4fde: lea rdx,[rip+0x184f]
0x4fe5: mov esi,0x1
0x4fea: xor eax,eax
0x4fec: call 0x1a30
0x4ff1: jmp 0x4edc
0x4ff6: nop word ptr cs:[rax+rax]
0x5055: nop dword ptr [rax]
0x5091: nop dword ptr [rax]
0x50d8: nop dword ptr [rax+rax]
0x5127: nop word ptr [rax+rax]
0x5184: nop dword ptr [rax]
0x51b2: nop word ptr [rax+rax]
0x5266: nop word ptr cs:[rax+rax]
0x52b7: nop word ptr [rax+rax]
0x52c0: xor r9d,r9d
0x52c3: cmp qword ptr [r8],0x0
0x52c7: je 0x52db
0x52c9: nop dword ptr [rax]
0x52d0: add r9,0x1
0x52d4: cmp qword ptr [r8+r9*8],0x0
0x52d9: jne 0x52d0
0x52db: jmp 0x4ea0
0x52e0: sub rsp,0x68
0x52e4: mov r10,r8
0x52e7: xor r9d,r9d
0x52ea: mov rax,qword ptr fs:[0x28]
0x52f3: mov qword ptr [rsp+0x58],rax
0x52f8: xor eax,eax
0x52fa: mov r8,rsp
0x52fd: nop dword ptr [rax]
0x5300: mov eax,dword ptr [r10]
0x5303: cmp eax,0x2f
0x5306: ja 0x534a
0x5308: mov r11d,eax
0x530b: add r11,qword ptr [r10+0x10]
0x530f: add eax,0x8
0x5312: mov dword ptr [r10],eax
0x5315: mov rax,qword ptr [r11]
0x5318: test rax,rax
0x531b: mov qword ptr [r8+r9*8],rax
0x531f: je 0x532b
0x5321: add r9,0x1
0x5325: cmp r9,0xa
0x5329: jne 0x5300
0x532b: call 0x4ea0
0x5330: mov rax,qword ptr [rsp+0x58]
0x5335: xor rax,qword ptr fs:[0x28]
0x533e: jne 0x5345
0x5340: add rsp,0x68
0x5344: ret 
0x5345: call 0x1800
0x534a: mov r11,qword ptr [r10+8]
0x534e: lea rax,[r11+8]
0x5352: mov qword ptr [r10+8],rax
0x5356: jmp 0x5315
0x5358: nop dword ptr [rax+rax]
0x5435: nop 
0x5436: nop word ptr cs:[rax+rax]
0x5440: push rbx
0x5441: lea rsi,[rip+0x143a]
0x5448: mov edx,0x5
0x544d: xor edi,edi
0x544f: call 0x17d0
0x5454: lea rdx,[rip+0x143c]
0x545b: mov rsi,rax
0x545e: mov edi,0x1
0x5463: xor eax,eax
0x5465: call 0x19a0
0x546a: lea rsi,[rip+0x143c]
0x5471: mov edx,0x5
0x5476: xor edi,edi
0x5478: call 0x17d0
0x547d: lea rcx,[rip+0xd7c]
0x5484: lea rdx,[rip+0x903]
0x548b: mov rsi,rax
0x548e: mov edi,0x1
0x5493: xor eax,eax
0x5495: call 0x19a0
0x549a: mov rbx,qword ptr [rip+0x202c07]
0x54a1: lea rsi,[rip+0x1638]
0x54a8: xor edi,edi
0x54aa: mov edx,0x5
0x54af: call 0x17d0
0x54b4: mov rsi,rbx
0x54b7: mov rdi,rax
0x54ba: pop rbx
0x54bb: jmp 0x18a0
0x54ce: test rbx,rbx
0x54d1: jne 0x54d5
0x54d5: call 0x5710
0x54da: nop word ptr [rax+rax]
0x54e0: mov rax,rdi
0x54e3: mul rsi
0x54e6: mov rdi,rax
0x54e9: seto al
0x54ec: test rdi,rdi
0x54ef: js 0x54fb
0x54f1: movzx eax,al
0x54f4: test rax,rax
0x54f7: jne 0x54fb
0x54f9: jmp 0x54c0
0x54fb: sub rsp,0x8
0x54ff: call 0x5710
0x5504: nop 
0x5506: nop word ptr cs:[rax+rax]
0x5510: jmp 0x54c0
0x5512: nop dword ptr [rax]
0x5516: nop word ptr cs:[rax+rax]
0x553b: test rbx,rbx
0x553e: jne 0x5551
0x5542: nop word ptr [rax+rax]
0x5551: call 0x5710
0x5556: nop word ptr cs:[rax+rax]
0x5560: mov rax,rsi
0x5563: mul rdx
0x5566: mov rsi,rax
0x5569: seto al
0x556c: test rsi,rsi
0x556f: js 0x557b
0x5571: movzx eax,al
0x5574: test rax,rax
0x5577: jne 0x557b
0x5579: jmp 0x5520
0x557b: sub rsp,0x8
0x557f: call 0x5710
0x5584: nop 
0x5586: nop word ptr cs:[rax+rax]
0x5590: test rdi,rdi
0x5593: mov r9,rdx
0x5596: mov rcx,qword ptr [rsi]
0x5599: je 0x55d0
0x559b: xor edx,edx
0x559d: movabs rax,0x5555555555555554
0x55a7: div r9
0x55aa: cmp rax,rcx
0x55ad: jbe 0x55eb
0x55af: mov rax,rcx
0x55b2: shr rax,0x1
0x55b5: lea rcx,[rax+rcx+1]
0x55ba: mov qword ptr [rsi],rcx
0x55bd: imul rcx,r9
0x55c1: mov rsi,rcx
0x55c4: jmp 0x5520
0x55c9: nop dword ptr [rax]
0x55d0: test rcx,rcx
0x55d3: je 0x55f8
0x55d5: mov rax,rcx
0x55d8: mul r9
0x55db: seto dl
0x55de: test rax,rax
0x55e1: movzx edx,dl
0x55e4: js 0x55eb
0x55e6: test rdx,rdx
0x55e9: je 0x55ba
0x55eb: sub rsp,0x8
0x55ef: call 0x5710
0x55f4: nop dword ptr [rax]
0x55f8: xor edx,edx
0x55fa: mov eax,0x80
0x55ff: xor r8d,r8d
0x5602: div r9
0x5605: test rax,rax
0x5608: sete r8b
0x560c: lea rcx,[r8+rax]
0x5610: jmp 0x55d5
0x5612: nop dword ptr [rax]
0x5616: nop word ptr cs:[rax+rax]
0x5620: test rdi,rdi
0x5623: mov rax,qword ptr [rsi]
0x5626: je 0x5650
0x5628: movabs rdx,0x5555555555555553
0x5632: cmp rax,rdx
0x5635: ja 0x5661
0x5637: mov rdx,rax
0x563a: shr rdx,0x1
0x563d: lea rax,[rdx+rax+1]
0x5642: mov qword ptr [rsi],rax
0x5645: mov rsi,rax
0x5648: jmp 0x5520
0x564d: nop dword ptr [rax]
0x5650: test rax,rax
0x5653: mov edx,0x80
0x5658: cmove rax,rdx
0x565c: test rax,rax
0x565f: jns 0x5642
0x5661: sub rsp,0x8
0x5665: call 0x5710
0x566a: nop word ptr [rax+rax]
0x5670: push rbx
0x5671: mov rbx,rdi
0x5674: call 0x54c0
0x5679: mov rdx,rbx
0x567c: xor esi,esi
0x567e: mov rdi,rax
0x5681: pop rbx
0x5682: jmp 0x1880
0x5687: nop word ptr [rax+rax]
0x5690: mov rax,rdi
0x5693: sub rsp,0x8
0x5697: mul rsi
0x569a: seto dl
0x569d: test rax,rax
0x56a0: js 0x56b9
0x56a2: movzx edx,dl
0x56a5: test rdx,rdx
0x56a8: jne 0x56b9
0x56aa: call 0x18b0
0x56af: test rax,rax
0x56b2: je 0x56b9
0x56b4: add rsp,0x8
0x56b8: ret 
0x56b9: call 0x5710
0x56be: nop 
0x56c0: push rbp
0x56c1: push rbx
0x56c2: mov rbp,rdi
0x56c5: mov rdi,rsi
0x56c8: mov rbx,rsi
0x56cb: sub rsp,0x8
0x56cf: call 0x54c0
0x56d4: add rsp,0x8
0x56d8: mov rdx,rbx
0x56db: mov rsi,rbp
0x56de: pop rbx
0x56df: pop rbp
0x56e0: mov rdi,rax
0x56e3: jmp 0x18e0
0x56e8: nop dword ptr [rax+rax]
0x56f0: push rbx
0x56f1: mov rbx,rdi
0x56f4: call 0x17f0
0x56f9: mov rdi,rbx
0x56fc: lea rsi,[rax+1]
0x5700: pop rbx
0x5701: jmp 0x56c0
0x5703: nop word ptr cs:[rax+rax]
0x570d: nop dword ptr [rax]
0x5740: call 0x1710
0x5745: nop word ptr cs:[rax+rax]
0x574f: nop 
0x5795: nop dword ptr [rax]
0x57cb: nop dword ptr [rax+rax]
0x57f3: nop dword ptr [rax+rax]
0x581f: nop 
0x5867: nop word ptr [rax+rax]
0x5870: push r13
0x5872: push r12
0x5874: mov r13,rsi
0x5877: push rbp
0x5878: push rbx
0x5879: mov rbx,rdi
0x587c: mov r12,rdx
0x587f: sub rsp,0x18
0x5883: mov rax,qword ptr fs:[0x28]
0x588c: mov qword ptr [rsp+8],rax
0x5891: xor eax,eax
0x5893: lea rax,[rsp+4]
0x5898: test rdi,rdi
0x589b: cmove rbx,rax
0x589f: mov rdi,rbx
0x58a2: call 0x1820
0x58a7: cmp rax,0xfffffffffffffffd
0x58ab: mov rbp,rax
0x58ae: jbe 0x58d0
0x58b0: test r12,r12
0x58b3: je 0x58d0
0x58b5: xor edi,edi
0x58b7: call 0x3070
0x58bc: test al,al
0x58be: jne 0x58d0
0x58c0: movzx eax,byte ptr [r13]
0x58c5: mov ebp,0x1
0x58ca: mov dword ptr [rbx],eax
0x58cc: nop dword ptr [rax]
0x58d0: mov rdx,qword ptr [rsp+8]
0x58d5: xor rdx,qword ptr fs:[0x28]
0x58de: mov rax,rbp
0x58e1: jne 0x58ee
0x58e3: add rsp,0x18
0x58e7: pop rbx
0x58e8: pop rbp
0x58e9: pop r12
0x58eb: pop r13
0x58ed: ret 
0x58ee: call 0x1800
0x58f3: nop word ptr cs:[rax+rax]
0x58fd: nop dword ptr [rax]
0x5900: push rbp
0x5901: push rbx
0x5902: mov rbp,rdi
0x5905: mov edi,0x21
0x590a: sub rsp,0x8
0x590e: call 0x54c0
0x5913: lea rsi,[rbp+0x2c]
0x5917: mov rbx,rax
0x591a: mov edx,0x20
0x591f: mov rdi,rax
0x5922: call 0x1730
0x5927: mov rdi,rbx
0x592a: mov byte ptr [rbx+0x20],0x0
0x592e: call 0x17f0
0x5933: add rax,rbx
0x5936: cmp rbx,rax
0x5939: jae 0x5941
0x593b: cmp byte ptr [rax-1],0x20
0x593f: je 0x5950
0x5941: add rsp,0x8
0x5945: mov rax,rbx
0x5948: pop rbx
0x5949: pop rbp
0x594a: ret 
0x594b: nop dword ptr [rax+rax]
0x5950: sub rax,0x1
0x5954: mov byte ptr [rax],0x0
0x5957: cmp rbx,rax
0x595a: jne 0x593b
0x595c: jmp 0x5941
0x595e: nop 
0x5a36: nop word ptr cs:[rax+rax]
0x5a55: xor esi,esi
0x5a57: call 0x18f0
0x5a5c: test eax,eax
0x5a5e: jns 0x59ba
0x5a64: call 0x1720
0x5a69: cmp dword ptr [rax],0x3
0x5a6c: je 0x5996
0x5a72: cmp rbp,rbx
0x5a75: jne 0x59c3
0x5a7b: nop dword ptr [rax+rax]
0x5ae9: nop dword ptr [rax]
0x5af0: push r12
0x5af2: push rbp
0x5af3: mov rbp,rdi
0x5af6: push rbx
0x5af7: call 0x1760
0x5afc: mov ebx,dword ptr [rbp]
0x5aff: mov rdi,rbp
0x5b02: mov r12,rax
0x5b05: call 0x5750
0x5b0a: and ebx,0x20
0x5b0d: test ebx,ebx
0x5b0f: jne 0x5b28
0x5b11: test eax,eax
0x5b13: je 0x5b1f
0x5b15: test r12,r12
0x5b18: mov eax,0xffffffff
0x5b1d: je 0x5b58
0x5b1f: pop rbx
0x5b20: pop rbp
0x5b21: pop r12
0x5b23: ret 
0x5b24: nop dword ptr [rax]
0x5b28: test eax,eax
0x5b2a: jne 0x5b48
0x5b2c: call 0x1720
0x5b31: mov dword ptr [rax],0x0
0x5b37: mov eax,0xffffffff
0x5b3c: pop rbx
0x5b3d: pop rbp
0x5b3e: pop r12
0x5b40: ret 
0x5b41: nop dword ptr [rax]
0x5b48: pop rbx
0x5b49: mov eax,0xffffffff
0x5b4e: pop rbp
0x5b4f: pop r12
0x5b51: ret 
0x5b52: nop word ptr [rax+rax]
0x5b58: call 0x1720
0x5b5d: cmp dword ptr [rax],0x9
0x5b60: pop rbx
0x5b61: pop rbp
0x5b62: pop r12
0x5b64: setne al
0x5b67: movzx eax,al
0x5b6a: neg eax
0x5b6c: ret 
0x5b6d: nop dword ptr [rax]
0x5b70: sub rsp,0x8
0x5b74: mov edi,0xe
0x5b79: call 0x1950
0x5b7e: test rax,rax
0x5b81: je 0x5ba0
0x5b83: cmp byte ptr [rax],0x0
0x5b86: lea rdx,[rip+0x1013]
0x5b8d: cmove rax,rdx
0x5b91: add rsp,0x8
0x5b95: ret 
0x5b96: nop word ptr cs:[rax+rax]
0x5ba0: lea rax,[rip+0xff9]
0x5ba7: add rsp,0x8
0x5bab: ret 
0x5bac: nop dword ptr [rax]
0x5bb0: push r15
0x5bb2: push r14
0x5bb4: mov r15,rdx
0x5bb7: push r13
0x5bb9: push r12
0x5bbb: lea r12,[rip+0x201f4e]
0x5bc2: push rbp
0x5bc3: lea rbp,[rip+0x201f4e]
0x5bca: push rbx
0x5bcb: mov r13d,edi
0x5bce: mov r14,rsi
0x5bd1: sub rbp,r12
0x5bd4: sub rsp,0x8
0x5bd8: sar rbp,0x3
0x5bdc: call 0x16a0
0x5be1: test rbp,rbp
0x5be4: je 0x5c06
0x5be6: xor ebx,ebx
0x5be8: nop dword ptr [rax+rax]
0x5bf0: mov rdx,r15
0x5bf3: mov rsi,r14
0x5bf6: mov edi,r13d
0x5bf9: call qword ptr [r12+rbx*8]
0x5bfd: add rbx,0x1
0x5c01: cmp rbp,rbx
0x5c04: jne 0x5bf0
0x5c06: add rsp,0x8
0x5c0a: pop rbx
0x5c0b: pop rbp
0x5c0c: pop r12
0x5c0e: pop r13
0x5c10: pop r14
0x5c12: pop r15
0x5c14: ret 
0x5c15: nop 
0x5c16: nop word ptr cs:[rax+rax]
0x5c20: ret 
0x5c22: nop word ptr cs:[rax+rax]
0x5c2c: nop dword ptr [rax]
0x5c3e: add byte ptr [rax],al
