;-- section..plt:
;-- .plt:
0x00000750      ff35b2082000   push qword [0x00201008]                 ; [10] -r-x section size 144 named .plt
0x00000756      ff25b4082000   jmp qword [0x00201010]                  ; [0x201010:8]=0
0x0000075c      0f1f4000       nop dword [rax]
;-- imp.getenv:
0x00000760      ff25b2082000   jmp qword [reloc.getenv]                ; [0x201018:8]=0x766 ; "f\a"
0x00000766      6800000000     push 0
0x0000076b      e9e0ffffff     jmp sym..plt
;-- imp.free:
0x00000770      ff25aa082000   jmp qword [reloc.free]                  ; [0x201020:8]=0x776 ; "v\a"
0x00000776      6801000000     push 1
0x0000077b      e9d0ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00000780      ff25a2082000   jmp qword [reloc.dcgettext]             ; [0x201028:8]=0x786
0x00000786      6802000000     push 2
0x0000078b      e9c0ffffff     jmp sym..plt
;-- imp.fileno:
0x00000790      ff259a082000   jmp qword [reloc.fileno]                ; [0x201030:8]=0x796
0x00000796      6803000000     push 3
0x0000079b      e9b0ffffff     jmp sym..plt
;-- imp.malloc:
0x000007a0      ff2592082000   jmp qword [reloc.malloc]                ; [0x201038:8]=0x7a6
0x000007a6      6804000000     push 4
0x000007ab      e9a0ffffff     jmp sym..plt
;-- imp.setvbuf:
0x000007b0      ff258a082000   jmp qword [reloc.setvbuf]               ; [0x201040:8]=0x7b6
0x000007b6      6805000000     push 5
0x000007bb      e990ffffff     jmp sym..plt
;-- imp.strtoul:
0x000007c0      ff2582082000   jmp qword [reloc.strtoul]               ; [0x201048:8]=0x7c6
0x000007c6      6806000000     push 6
0x000007cb      e980ffffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x000007d0      ff257a082000   jmp qword [reloc.__fprintf_chk]         ; [0x201050:8]=0x7d6
0x000007d6      6807000000     push 7
0x000007db      e970ffffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x000007e0      .qword 0x90660020080a25ff                              ; [11] -r-x section size 8 named .plt.got
0x000007e8      0000           add byte [rax], al
0x000007ea      0000           add byte [rax], al
0x000007ec      0000           add byte [rax], al
0x000007ee      0000           add byte [rax], al
;-- entry0:
;-- section..text:
;-- .text:
;-- apply_mode:
;-- rip:
0x000007f0      4154           push r12                                ; .//:50 ; [12] -r-x section size 794 named .text
0x000007f2      55             push rbp                                ; .//:105
0x000007f3      4889fd         mov rbp, rdi
0x000007f6      53             push rbx
0x000007f7      4889f3         mov rbx, rsi
0x000007fa      4883ec10       sub rsp, 0x10
0x000007fe      0fb606         movzx eax, byte [rsi]
0x00000801      3c30           cmp al, 0x30
0x00000803      0f8420010000   je 0x929
0x00000809      3c4c           cmp al, 0x4c
0x0000080b      7526           jne 0x833
0x0000080d      31c9           xor ecx, ecx
0x0000080f      ba01000000     mov edx, 1
0x00000814      4531e4         xor r12d, r12d
0x00000817      4c89e6         mov rsi, r12
0x0000081a      4889ef         mov rdi, rbp
0x0000081d      e88effffff     call sym.imp.setvbuf
0x00000822      85c0           test eax, eax
0x00000824      0f858c000000   jne 0x8b6
0x0000082a      4883c410       add rsp, 0x10
0x0000082e      5b             pop rbx
0x0000082f      5d             pop rbp
0x00000830      415c           pop r12
0x00000832      c3             ret
0x00000833      31f6           xor esi, esi
0x00000835      ba0a000000     mov edx, 0xa
0x0000083a      4889df         mov rdi, rbx
0x0000083d      e87effffff     call sym.imp.strtoul
0x00000842      4885c0         test rax, rax
0x00000845      0f85ed000000   jne 0x938
0x0000084b      4889ef         mov rdi, rbp
0x0000084e      e83dffffff     call sym.imp.fileno
0x00000853      83f801         cmp eax, 1                              ; "ELF\x02\x01\x01"
0x00000856      0f8441010000   je 0x99d
0x0000085c      83f802         cmp eax, 2
0x0000085f      488d2dbf0200.  lea rbp, str.stderr                     ; 0xb25 ; "stderr"
0x00000866      7414           je 0x87c
0x00000868      488d2da90200.  lea rbp, str.stdin                      ; sym..rodata
                                                                       ; 0xb18 ; "stdin"
0x0000086f      4c8d05b60200.  lea r8, str.unknown                     ; 0xb2c ; "unknown"
0x00000876      85c0           test eax, eax
0x00000878      490f45e8       cmovne rbp, r8
0x0000087c      488d35050300.  lea rsi, str.invalid_buffering_mode__s_for__s ; 0xb88 ; "invalid buffering mode %s for %s\n"
0x00000883      ba05000000     mov edx, 5
0x00000888      31ff           xor edi, edi
0x0000088a      e8f1feffff     call sym.imp.dcgettext
0x0000088f      4889c2         mov rdx, rax
0x00000892      488b055f0720.  mov rax, qword [reloc.stderr]           ; [0x200ff8:8]=0
0x00000899      4989e8         mov r8, rbp
0x0000089c      4889d9         mov rcx, rbx
0x0000089f      be01000000     mov esi, 1
0x000008a4      488b38         mov rdi, qword [rax]
0x000008a7      4883c410       add rsp, 0x10
0x000008ab      31c0           xor eax, eax
0x000008ad      5b             pop rbx
0x000008ae      5d             pop rbp
0x000008af      415c           pop r12
0x000008b1      e91affffff     jmp sym.imp.__fprintf_chk
0x000008b6      4889ef         mov rdi, rbp
0x000008b9      e8d2feffff     call sym.imp.fileno
0x000008be      83f801         cmp eax, 1                              ; "ELF\x02\x01\x01"
0x000008c1      0f84ca000000   je 0x991
0x000008c7      83f802         cmp eax, 2
0x000008ca      488d2d540200.  lea rbp, str.stderr                     ; 0xb25 ; "stderr"
0x000008d1      7414           je 0x8e7
0x000008d3      488d2d3e0200.  lea rbp, str.stdin                      ; sym..rodata
                                                                       ; 0xb18 ; "stdin"
0x000008da      488d0d4b0200.  lea rcx, str.unknown                    ; 0xb2c ; "unknown"
0x000008e1      85c0           test eax, eax
0x000008e3      480f45e9       cmovne rbp, rcx
0x000008e7      488d35c20200.  lea rsi, str.could_not_set_buffering_of__s_to_mode__s ; 0xbb0 ; "could not set buffering of %s to mode %s\n"
0x000008ee      ba05000000     mov edx, 5
0x000008f3      31ff           xor edi, edi
0x000008f5      e886feffff     call sym.imp.dcgettext
0x000008fa      4889c2         mov rdx, rax
0x000008fd      488b05f40620.  mov rax, qword [reloc.stderr]           ; [0x200ff8:8]=0
0x00000904      4989d8         mov r8, rbx
0x00000907      4889e9         mov rcx, rbp
0x0000090a      be01000000     mov esi, 1
0x0000090f      488b38         mov rdi, qword [rax]
0x00000912      31c0           xor eax, eax
0x00000914      e8b7feffff     call sym.imp.__fprintf_chk
0x00000919      4883c410       add rsp, 0x10
0x0000091d      4c89e7         mov rdi, r12
0x00000920      5b             pop rbx
0x00000921      5d             pop rbp
0x00000922      415c           pop r12
0x00000924      e947feffff     jmp sym.imp.free
0x00000929      31c9           xor ecx, ecx
0x0000092b      ba02000000     mov edx, 2
0x00000930      4531e4         xor r12d, r12d
0x00000933      e9dffeffff     jmp 0x817
0x00000938      4889c7         mov rdi, rax
0x0000093b      4889442408     mov qword [rsp + 8], rax
0x00000940      e85bfeffff     call sym.imp.malloc
0x00000945      31d2           xor edx, edx
0x00000947      4885c0         test rax, rax
0x0000094a      4989c4         mov r12, rax
0x0000094d      488b4c2408     mov rcx, qword [rsp + 8]
0x00000952      0f85bffeffff   jne 0x817
0x00000958      488d35f90100.  lea rsi, str.failed_to_allocate_a__lu_byte_stdio_buffer ; 0xb58 ; "failed to allocate a %lu byte stdio buffer\n"
0x0000095f      ba05000000     mov edx, 5
0x00000964      31ff           xor edi, edi
0x00000966      e815feffff     call sym.imp.dcgettext
0x0000096b      4889c2         mov rdx, rax
0x0000096e      488b05830620.  mov rax, qword [reloc.stderr]           ; [0x200ff8:8]=0
0x00000975      488b4c2408     mov rcx, qword [rsp + 8]
0x0000097a      be01000000     mov esi, 1
0x0000097f      488b38         mov rdi, qword [rax]
0x00000982      4883c410       add rsp, 0x10
0x00000986      31c0           xor eax, eax
0x00000988      5b             pop rbx
0x00000989      5d             pop rbp
0x0000098a      415c           pop r12
0x0000098c      e93ffeffff     jmp sym.imp.__fprintf_chk
0x00000991      488d2d860100.  lea rbp, str.stdout                     ; 0xb1e ; "stdout"
0x00000998      e94affffff     jmp 0x8e7
0x0000099d      488d2d7a0100.  lea rbp, str.stdout                     ; 0xb1e ; "stdout"
0x000009a4      e9d3feffff     jmp 0x87c
0x000009a9      0f1f80000000.  nop dword [rax]
;-- entry.init1:
;-- stdbuf:
0x000009b0      4154           push r12
0x000009b2      488d3d7b0100.  lea rdi, str.STDBUF_E                   ; 0xb34 ; "_STDBUF_E"
0x000009b9      55             push rbp
0x000009ba      53             push rbx
0x000009bb      e8a0fdffff     call sym.imp.getenv
0x000009c0      488d3d770100.  lea rdi, str.STDBUF_I                   ; 0xb3e ; "_STDBUF_I"
0x000009c7      4989c4         mov r12, rax
0x000009ca      e891fdffff     call sym.imp.getenv
0x000009cf      488d3d720100.  lea rdi, str.STDBUF_O                   ; 0xb48 ; "_STDBUF_O"
0x000009d6      4889c5         mov rbp, rax
0x000009d9      e882fdffff     call sym.imp.getenv
0x000009de      4d85e4         test r12, r12
0x000009e1      4889c3         mov rbx, rax
0x000009e4      7412           je 0x9f8
0x000009e6      488b050b0620.  mov rax, qword [reloc.stderr]           ; [0x200ff8:8]=0
0x000009ed      4c89e6         mov rsi, r12
0x000009f0      488b38         mov rdi, qword [rax]
0x000009f3      e8f8fdffff     call entry0
0x000009f8      4885ed         test rbp, rbp
0x000009fb      7412           je 0xa0f
0x000009fd      488b05d40520.  mov rax, qword [reloc.stdin]            ; [0x200fd8:8]=0
0x00000a04      4889ee         mov rsi, rbp
0x00000a07      488b38         mov rdi, qword [rax]
0x00000a0a      e8e1fdffff     call entry0
0x00000a0f      4885db         test rbx, rbx
0x00000a12      7416           je 0xa2a
0x00000a14      488b05b50520.  mov rax, qword [reloc.stdout]           ; [0x200fd0:8]=0
0x00000a1b      4889de         mov rsi, rbx
0x00000a1e      5b             pop rbx
0x00000a1f      5d             pop rbp
0x00000a20      415c           pop r12
0x00000a22      488b38         mov rdi, qword [rax]
0x00000a25      e9c6fdffff     jmp entry0
0x00000a2a      5b             pop rbx
0x00000a2b      5d             pop rbp
0x00000a2c      415c           pop r12
0x00000a2e      c3             ret
0x00000a2f      90             nop
;-- deregister_tm_clones:
0x00000a30      488d3d290620.  lea rdi, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x201060
0x00000a37      55             push rbp
0x00000a38      488d05210620.  lea rax, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x201060
0x00000a3f      4839f8         cmp rax, rdi
0x00000a42      4889e5         mov rbp, rsp
0x00000a45      7419           je 0xa60
0x00000a47      488b057a0520.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; sym..got
                                                                       ; [0x200fc8:8]=0
0x00000a4e      4885c0         test rax, rax
0x00000a51      740d           je 0xa60
0x00000a53      5d             pop rbp
0x00000a54      ffe0           jmp rax
0x00000a56      662e0f1f8400.  nop word cs:[rax + rax]
0x00000a60      5d             pop rbp
0x00000a61      c3             ret
0x00000a62      0f1f4000       nop dword [rax]
0x00000a66      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00000a70      488d3de90520.  lea rdi, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x201060
0x00000a77      488d35e20520.  lea rsi, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x201060
0x00000a7e      55             push rbp
0x00000a7f      4829fe         sub rsi, rdi
0x00000a82      4889e5         mov rbp, rsp
0x00000a85      48c1fe03       sar rsi, 3
0x00000a89      4889f0         mov rax, rsi
0x00000a8c      48c1e83f       shr rax, 0x3f
0x00000a90      4801c6         add rsi, rax
0x00000a93      48d1fe         sar rsi, 1
0x00000a96      7418           je 0xab0
0x00000a98      488b05490520.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x200fe8:8]=0
0x00000a9f      4885c0         test rax, rax
0x00000aa2      740c           je 0xab0
0x00000aa4      5d             pop rbp
0x00000aa5      ffe0           jmp rax
0x00000aa7      660f1f840000.  nop word [rax + rax]
0x00000ab0      5d             pop rbp
0x00000ab1      c3             ret
0x00000ab2      0f1f4000       nop dword [rax]
0x00000ab6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00000ac0      803d99052000.  cmp byte [loc._edata], 0                ; obj.__TMC_END
                                                                       ; [0x201060:1]=0
0x00000ac7      752f           jne 0xaf8
0x00000ac9      48833d1f0520.  cmp qword [reloc.__cxa_finalize], 0     ; [0x200ff0:8]=0
0x00000ad1      55             push rbp
0x00000ad2      4889e5         mov rbp, rsp
0x00000ad5      740c           je 0xae3
0x00000ad7      488b3d7a0520.  mov rdi, qword [obj.__dso_handle]       ; [0x201058:8]=0x201058 obj.__dso_handle ; "X\x10 "
0x00000ade      e8fdfcffff     call sym..plt.got
0x00000ae3      e848ffffff     call sym.deregister_tm_clones
0x00000ae8      c60571052000.  mov byte [loc._edata], 1                ; obj.__TMC_END
                                                                       ; [0x201060:1]=0
0x00000aef      5d             pop rbp
0x00000af0      c3             ret
0x00000af1      0f1f80000000.  nop dword [rax]
0x00000af8      f3c3           ret
0x00000afa      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00000b00      55             push rbp
0x00000b01      4889e5         mov rbp, rsp
0x00000b04      5d             pop rbp
0x00000b05      e966ffffff     jmp sym.register_tm_clones
0x00000b0a      0000           add byte [rax], al
