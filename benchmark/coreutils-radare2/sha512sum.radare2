;-- section..plt:
;-- .plt:
0x000015a0      ff356ac82000   push qword [0x0020de10]                 ; [12] -r-x section size 848 named .plt
0x000015a6      ff256cc82000   jmp qword [0x0020de18]                  ; [0x20de18:8]=0
0x000015ac      0f1f4000       nop dword [rax]
;-- imp.free:
0x000015b0      ff256ac82000   jmp qword [reloc.free]                  ; [0x20de20:8]=0x15b6
0x000015b6      6800000000     push 0
0x000015bb      e9e0ffffff     jmp sym..plt
;-- imp.abort:
0x000015c0      ff2562c82000   jmp qword [reloc.abort]                 ; [0x20de28:8]=0x15c6
0x000015c6      6801000000     push 1
0x000015cb      e9d0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x000015d0      ff255ac82000   jmp qword [reloc.__errno_location]      ; [0x20de30:8]=0x15d6
0x000015d6      6802000000     push 2
0x000015db      e9c0ffffff     jmp sym..plt
;-- imp.strncmp:
0x000015e0      ff2552c82000   jmp qword [reloc.strncmp]               ; [0x20de38:8]=0x15e6
0x000015e6      6803000000     push 3
0x000015eb      e9b0ffffff     jmp sym..plt
;-- imp._exit:
0x000015f0      ff254ac82000   jmp qword [reloc._exit]                 ; [0x20de40:8]=0x15f6
0x000015f6      6804000000     push 4
0x000015fb      e9a0ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001600      ff2542c82000   jmp qword [reloc.__fpending]            ; [0x20de48:8]=0x1606
0x00001606      6805000000     push 5
0x0000160b      e990ffffff     jmp sym..plt
;-- imp.fcntl:
0x00001610      ff253ac82000   jmp qword [reloc.fcntl]                 ; [0x20de50:8]=0x1616
0x00001616      6806000000     push 6
0x0000161b      e980ffffff     jmp sym..plt
;-- imp.fread_unlocked:
0x00001620      ff2532c82000   jmp qword [reloc.fread_unlocked]        ; [0x20de58:8]=0x1626 ; "&\x16"
0x00001626      6807000000     push 7
0x0000162b      e970ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001630      ff252ac82000   jmp qword [reloc.textdomain]            ; [0x20de60:8]=0x1636 ; "6\x16"
0x00001636      6808000000     push 8
0x0000163b      e960ffffff     jmp sym..plt
;-- imp.fclose:
0x00001640      ff2522c82000   jmp qword [reloc.fclose]                ; [0x20de68:8]=0x1646 ; "F\x16"
0x00001646      6809000000     push 9
0x0000164b      e950ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001650      ff251ac82000   jmp qword [reloc.bindtextdomain]        ; [0x20de70:8]=0x1656 ; "V\x16"
0x00001656      680a000000     push 0xa
0x0000165b      e940ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001660      ff2512c82000   jmp qword [reloc.dcgettext]             ; [0x20de78:8]=0x1666 ; "f\x16"
0x00001666      680b000000     push 0xb
0x0000166b      e930ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001670      ff250ac82000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x20de80:8]=0x1676 ; "v\x16"
0x00001676      680c000000     push 0xc
0x0000167b      e920ffffff     jmp sym..plt
;-- imp.strlen:
0x00001680      ff2502c82000   jmp qword [reloc.strlen]                ; [0x20de88:8]=0x1686
0x00001686      680d000000     push 0xd
0x0000168b      e910ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001690      ff25fac72000   jmp qword [reloc.__stack_chk_fail]      ; [0x20de90:8]=0x1696
0x00001696      680e000000     push 0xe
0x0000169b      e900ffffff     jmp sym..plt
;-- imp.getopt_long:
0x000016a0      ff25f2c72000   jmp qword [reloc.getopt_long]           ; [0x20de98:8]=0x16a6
0x000016a6      680f000000     push 0xf
0x000016ab      e9f0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x000016b0      ff25eac72000   jmp qword [reloc.mbrtowc]               ; [0x20dea0:8]=0x16b6
0x000016b6      6810000000     push 0x10
0x000016bb      e9e0feffff     jmp sym..plt
;-- imp.strchr:
0x000016c0      ff25e2c72000   jmp qword [reloc.strchr]                ; [0x20dea8:8]=0x16c6
0x000016c6      6811000000     push 0x11
0x000016cb      e9d0feffff     jmp sym..plt
;-- imp.__overflow:
0x000016d0      ff25dac72000   jmp qword [reloc.__overflow]            ; [0x20deb0:8]=0x16d6
0x000016d6      6812000000     push 0x12
0x000016db      e9c0feffff     jmp sym..plt
;-- imp.strrchr:
0x000016e0      ff25d2c72000   jmp qword [reloc.strrchr]               ; [0x20deb8:8]=0x16e6
0x000016e6      6813000000     push 0x13
0x000016eb      e9b0feffff     jmp sym..plt
;-- imp.lseek:
0x000016f0      ff25cac72000   jmp qword [reloc.lseek]                 ; [0x20dec0:8]=0x16f6
0x000016f6      6814000000     push 0x14
0x000016fb      e9a0feffff     jmp sym..plt
;-- imp.memset:
0x00001700      ff25c2c72000   jmp qword [reloc.memset]                ; [0x20dec8:8]=0x1706
0x00001706      6815000000     push 0x15
0x0000170b      e990feffff     jmp sym..plt
;-- imp.close:
0x00001710      ff25bac72000   jmp qword [reloc.close]                 ; [0x20ded0:8]=0x1716
0x00001716      6816000000     push 0x16
0x0000171b      e980feffff     jmp sym..plt
;-- imp.posix_fadvise:
0x00001720      ff25b2c72000   jmp qword [reloc.posix_fadvise]         ; [0x20ded8:8]=0x1726 ; "&\x17"
0x00001726      6817000000     push 0x17
0x0000172b      e970feffff     jmp sym..plt
;-- imp.memcmp:
0x00001730      ff25aac72000   jmp qword [reloc.memcmp]                ; [0x20dee0:8]=0x1736 ; "6\x17"
0x00001736      6818000000     push 0x18
0x0000173b      e960feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001740      ff25a2c72000   jmp qword [reloc.fputs_unlocked]        ; [0x20dee8:8]=0x1746 ; "F\x17"
0x00001746      6819000000     push 0x19
0x0000174b      e950feffff     jmp sym..plt
;-- imp.calloc:
0x00001750      ff259ac72000   jmp qword [reloc.calloc]                ; [0x20def0:8]=0x1756 ; "V\x17"
0x00001756      681a000000     push 0x1a
0x0000175b      e940feffff     jmp sym..plt
;-- imp.__getdelim:
0x00001760      ff2592c72000   jmp qword [reloc.__getdelim]            ; [0x20def8:8]=0x1766 ; "f\x17"
0x00001766      681b000000     push 0x1b
0x0000176b      e930feffff     jmp sym..plt
;-- imp.memcpy:
0x00001770      ff258ac72000   jmp qword [reloc.memcpy]                ; [0x20df00:8]=0x1776 ; "v\x17"
0x00001776      681c000000     push 0x1c
0x0000177b      e920feffff     jmp sym..plt
;-- imp.fileno:
0x00001780      ff2582c72000   jmp qword [reloc.fileno]                ; [0x20df08:8]=0x1786
0x00001786      681d000000     push 0x1d
0x0000178b      e910feffff     jmp sym..plt
;-- imp.malloc:
0x00001790      ff257ac72000   jmp qword [reloc.malloc]                ; [0x20df10:8]=0x1796
0x00001796      681e000000     push 0x1e
0x0000179b      e900feffff     jmp sym..plt
;-- imp.fflush:
0x000017a0      ff2572c72000   jmp qword [reloc.fflush]                ; [0x20df18:8]=0x17a6
0x000017a6      681f000000     push 0x1f
0x000017ab      e9f0fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x000017b0      ff256ac72000   jmp qword [reloc.nl_langinfo]           ; [0x20df20:8]=0x17b6
0x000017b6      6820000000     push 0x20                               ; "@"
0x000017bb      e9e0fdffff     jmp sym..plt
;-- imp.__freading:
0x000017c0      ff2562c72000   jmp qword [reloc.__freading]            ; [0x20df28:8]=0x17c6
0x000017c6      6821000000     push 0x21                               ; '!'
0x000017cb      e9d0fdffff     jmp sym..plt
;-- imp.fwrite_unlocked:
0x000017d0      ff255ac72000   jmp qword [reloc.fwrite_unlocked]       ; [0x20df30:8]=0x17d6
0x000017d6      6822000000     push 0x22                               ; '"'
0x000017db      e9c0fdffff     jmp sym..plt
;-- imp.realloc:
0x000017e0      ff2552c72000   jmp qword [reloc.realloc]               ; [0x20df38:8]=0x17e6
0x000017e6      6823000000     push 0x23                               ; '#'
0x000017eb      e9b0fdffff     jmp sym..plt
;-- imp.fdopen:
0x000017f0      ff254ac72000   jmp qword [reloc.fdopen]                ; [0x20df40:8]=0x17f6
0x000017f6      6824000000     push 0x24                               ; '$'
0x000017fb      e9a0fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001800      ff2542c72000   jmp qword [reloc.setlocale]             ; [0x20df48:8]=0x1806
0x00001806      6825000000     push 0x25                               ; '%'
0x0000180b      e990fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001810      ff253ac72000   jmp qword [reloc.__printf_chk]          ; [0x20df50:8]=0x1816
0x00001816      6826000000     push 0x26                               ; '&'
0x0000181b      e980fdffff     jmp sym..plt
;-- imp.setvbuf:
0x00001820      ff2532c72000   jmp qword [reloc.setvbuf]               ; [0x20df58:8]=0x1826 ; "&\x18"
0x00001826      6827000000     push 0x27                               ; '''
0x0000182b      e970fdffff     jmp sym..plt
;-- imp.error:
0x00001830      ff252ac72000   jmp qword [reloc.error]                 ; [0x20df60:8]=0x1836 ; "6\x18"
0x00001836      6828000000     push 0x28                               ; '('
0x0000183b      e960fdffff     jmp sym..plt
;-- imp.fseeko:
0x00001840      ff2522c72000   jmp qword [reloc.fseeko]                ; [0x20df68:8]=0x1846 ; "F\x18"
0x00001846      6829000000     push 0x29                               ; ')'
0x0000184b      e950fdffff     jmp sym..plt
;-- imp.fopen:
0x00001850      ff251ac72000   jmp qword [reloc.fopen]                 ; [0x20df70:8]=0x1856 ; "V\x18"
0x00001856      682a000000     push 0x2a                               ; '*'
0x0000185b      e940fdffff     jmp sym..plt
;-- imp.dcngettext:
0x00001860      ff2512c72000   jmp qword [reloc.dcngettext]            ; [0x20df78:8]=0x1866 ; "f\x18"
0x00001866      682b000000     push 0x2b                               ; '+'
0x0000186b      e930fdffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001870      ff250ac72000   jmp qword [reloc.__cxa_atexit]          ; [0x20df80:8]=0x1876 ; "v\x18"
0x00001876      682c000000     push 0x2c                               ; ','
0x0000187b      e920fdffff     jmp sym..plt
;-- imp.exit:
0x00001880      ff2502c72000   jmp qword [reloc.exit]                  ; [0x20df88:8]=0x1886
0x00001886      682d000000     push 0x2d                               ; '-'
0x0000188b      e910fdffff     jmp sym..plt
;-- imp.fwrite:
0x00001890      ff25fac62000   jmp qword [reloc.fwrite]                ; [0x20df90:8]=0x1896
0x00001896      682e000000     push 0x2e                               ; '.'
0x0000189b      e900fdffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x000018a0      ff25f2c62000   jmp qword [reloc.__fprintf_chk]         ; [0x20df98:8]=0x18a6
0x000018a6      682f000000     push 0x2f                               ; '/'
0x000018ab      e9f0fcffff     jmp sym..plt
;-- imp.mbsinit:
0x000018b0      ff25eac62000   jmp qword [reloc.mbsinit]               ; [0x20dfa0:8]=0x18b6
0x000018b6      6830000000     push 0x30                               ; '0'
0x000018bb      e9e0fcffff     jmp sym..plt
;-- imp.iswprint:
0x000018c0      ff25e2c62000   jmp qword [reloc.iswprint]              ; [0x20dfa8:8]=0x18c6
0x000018c6      6831000000     push 0x31                               ; '1'
0x000018cb      e9d0fcffff     jmp sym..plt
;-- imp.__ctype_tolower_loc:
0x000018d0      ff25dac62000   jmp qword [reloc.__ctype_tolower_loc]   ; [0x20dfb0:8]=0x18d6
0x000018d6      6832000000     push 0x32                               ; '2'
0x000018db      e9c0fcffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x000018e0      ff25d2c62000   jmp qword [reloc.__ctype_b_loc]         ; [0x20dfb8:8]=0x18e6
0x000018e6      6833000000     push 0x33                               ; '3'
0x000018eb      e9b0fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x000018f0      .qword 0x90660020c6ea25ff                              ; [13] -r-x section size 8 named .plt.got
0x000018f8      0000           add byte [rax], al
0x000018fa      0000           add byte [rax], al
0x000018fc      0000           add byte [rax], al
0x000018fe      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001900      4157           push r15                                ; [14] -r-x section size 36190 named .text
0x00001902      4156           push r14
0x00001904      4155           push r13
0x00001906      4154           push r12
0x00001908      4189fc         mov r12d, edi
0x0000190b      55             push rbp
0x0000190c      53             push rbx
0x0000190d      4889f3         mov rbx, rsi
0x00001910      bdffffffff     mov ebp, 0xffffffff                     ; -1
0x00001915      4881ec480100.  sub rsp, 0x148
0x0000191c      488b3e         mov rdi, qword [rsi]
0x0000191f      64488b042528.  mov rax, qword fs:[0x28]
0x00001928      488984243801.  mov qword [rsp + 0x138], rax
0x00001930      31c0           xor eax, eax
0x00001932      e859610000     call sym.set_program_name
0x00001937      488d35239f00.  lea rsi, [0x0000b861]
0x0000193e      bf06000000     mov edi, 6
0x00001943      e8b8feffff     call sym.imp.setlocale
0x00001948      488d35f08d00.  lea rsi, str.usr_local_share_locale     ; 0xa73f ; "/usr/local/share/locale"
0x0000194f      488d3dc08d00.  lea rdi, [0x0000a716]                   ; "coreutils"
0x00001956      e8f5fcffff     call sym.imp.bindtextdomain
0x0000195b      488d3db48d00.  lea rdi, [0x0000a716]                   ; "coreutils"
0x00001962      e8c9fcffff     call sym.imp.textdomain
0x00001967      488d3db21900.  lea rdi, sym.close_stdout               ; 0x3320 ; "USH\x83\xec\bH\x8b={\xad "
0x0000196e      e8dd8c0000     call sym.atexit
0x00001973      488b3d2ec720.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x0000197a      31c9           xor ecx, ecx
0x0000197c      ba01000000     mov edx, 1
0x00001981      31f6           xor esi, esi
0x00001983      e898feffff     call sym.imp.setvbuf
0x00001988      c644247800     mov byte [rsp + 0x78], 0
0x0000198d      c644242b00     mov byte [rsp + 0x2b], 0
0x00001992      660f1f440000   nop word [rax + rax]
0x00001998      488d0d81c020.  lea rcx, obj.long_options               ; 0x20da20
0x0000199f      488d15da8d00.  lea rdx, str.bctwz                      ; 0xa780 ; "bctwz"
0x000019a6      4531c0         xor r8d, r8d
0x000019a9      4889de         mov rsi, rbx
0x000019ac      4489e7         mov edi, r12d
0x000019af      e8ecfcffff     call sym.imp.getopt_long
0x000019b4      83f8ff         cmp eax, 0xffffffff
0x000019b7      0f847f010000   je 0x1b3c
0x000019bd      83f877         cmp eax, 0x77
0x000019c0      0f84da000000   je 0x1aa0
0x000019c6      7e38           jle 0x1a00
0x000019c8      3d81000000     cmp eax, 0x81
0x000019cd      0f841d010000   je 0x1af0
0x000019d3      7e53           jle 0x1a28
0x000019d5      3d83000000     cmp eax, 0x83
0x000019da      0f8400010000   je 0x1ae0
0x000019e0      0f8cda000000   jl 0x1ac0
0x000019e6      3d84000000     cmp eax, 0x84
0x000019eb      0f85df010000   jne 0x1bd0
0x000019f1      c644247801     mov byte [rsp + 0x78], 1
0x000019f6      bd01000000     mov ebp, 1
0x000019fb      eb9b           jmp 0x1998
0x000019fd      0f1f00         nop dword [rax]
0x00001a00      83f862         cmp eax, 0x62
0x00001a03      0f8417010000   je 0x1b20
0x00001a09      7e45           jle 0x1a50
0x00001a0b      83f863         cmp eax, 0x63
0x00001a0e      0f84fc000000   je 0x1b10
0x00001a14      83f874         cmp eax, 0x74
0x00001a17      0f85b3010000   jne 0x1bd0
0x00001a1d      31ed           xor ebp, ebp
0x00001a1f      e974ffffff     jmp 0x1998
0x00001a24      0f1f4000       nop dword [rax]
0x00001a28      83f87a         cmp eax, 0x7a
0x00001a2b      0f84ff000000   je 0x1b30
0x00001a31      83c080         add eax, 0xffffff80
0x00001a34      0f8596010000   jne 0x1bd0
0x00001a3a      c605b1c62000.  mov byte [obj.ignore_missing], 1        ; [0x20e0f2:1]=0
0x00001a41      e952ffffff     jmp 0x1998
0x00001a46      662e0f1f8400.  nop word cs:[rax + rax]
0x00001a50      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00001a55      0f85760f0000   jne 0x29d1
0x00001a5b      488d05118d00.  lea rax, str.David_Madore               ; 0xa773 ; "David Madore"
0x00001a62      488b3d3fc620.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x00001a69      488b0da8c520.  mov rcx, qword [obj.Version]            ; [0x20e018:8]=0xb240 ; "@\xb2"
0x00001a70      6a00           push 0
0x00001a72      4c8d0dde8c00.  lea r9, str.Scott_Miller                ; 0xa757 ; "Scott Miller"
0x00001a79      4c8d05e48c00.  lea r8, str.Ulrich_Drepper              ; 0xa764 ; "Ulrich Drepper"
0x00001a80      50             push rax
0x00001a81      488d158a8c00.  lea rdx, str.GNU_coreutils              ; 0xa712 ; "GNU coreutils"
0x00001a88      488d35fb8b00.  lea rsi, str.sha512sum                  ; 0xa68a ; "sha512sum"
0x00001a8f      31c0           xor eax, eax
0x00001a91      e8fa810000     call sym.version_etc
0x00001a96      31ff           xor edi, edi
0x00001a98      e8e3fdffff     call sym.imp.exit
0x00001a9d      0f1f00         nop dword [rax]
0x00001aa0      c6054dc62000.  mov byte [obj.status_only], 0           ; [0x20e0f4:1]=0
0x00001aa7      c60545c62000.  mov byte [obj.warn], 1                  ; [0x20e0f3:1]=0
0x00001aae      c6053cc62000.  mov byte [obj.quiet], 0                 ; [0x20e0f1:1]=0
0x00001ab5      e9defeffff     jmp 0x1998
0x00001aba      660f1f440000   nop word [rax + rax]
0x00001ac0      c6052dc62000.  mov byte [obj.status_only], 0           ; [0x20e0f4:1]=0
0x00001ac7      c60525c62000.  mov byte [obj.warn], 0                  ; [0x20e0f3:1]=0
0x00001ace      c6051cc62000.  mov byte [obj.quiet], 1                 ; [0x20e0f1:1]=0
0x00001ad5      e9befeffff     jmp 0x1998
0x00001ada      660f1f440000   nop word [rax + rax]
0x00001ae0      c60509c62000.  mov byte [obj.strict], 1                ; [0x20e0f0:1]=0
0x00001ae7      e9acfeffff     jmp 0x1998
0x00001aec      0f1f4000       nop dword [rax]
0x00001af0      c605fdc52000.  mov byte [obj.status_only], 1           ; [0x20e0f4:1]=0
0x00001af7      c605f5c52000.  mov byte [obj.warn], 0                  ; [0x20e0f3:1]=0
0x00001afe      c605ecc52000.  mov byte [obj.quiet], 0                 ; [0x20e0f1:1]=0
0x00001b05      e98efeffff     jmp 0x1998
0x00001b0a      660f1f440000   nop word [rax + rax]
0x00001b10      c644242b01     mov byte [rsp + 0x2b], 1
0x00001b15      e97efeffff     jmp 0x1998
0x00001b1a      660f1f440000   nop word [rax + rax]
0x00001b20      bd01000000     mov ebp, 1
0x00001b25      e96efeffff     jmp 0x1998
0x00001b2a      660f1f440000   nop word [rax + rax]
0x00001b30      c605d9c42000.  mov byte [obj.delim], 0                 ; [0x20e010:1]=10 ; "\n"
0x00001b37      e95cfeffff     jmp 0x1998
0x00001b3c      85ed           test ebp, ebp
0x00001b3e      48c705b7c520.  mov qword [obj.min_digest_line_length], 0x82 ; [0x20e100:8]=0
0x00001b49      48c705a4c520.  mov qword [obj.digest_hex_bytes], 0x80  ; [0x20e0f8:8]=0
0x00001b54      0f94c0         sete al
0x00001b57      84442478       test byte [rsp + 0x78], al
0x00001b5b      0f85ba0e0000   jne 0x2a1b
0x00001b61      803da8c42000.  cmp byte [obj.delim], 0xa               ; [0x20e010:1]=10 ; "\n"
0x00001b68      7470           je 0x1bda
0x00001b6a      807c242b00     cmp byte [rsp + 0x2b], 0
0x00001b6f      ba05000000     mov edx, 5
0x00001b74      488d350d9300.  lea rsi, str.the___zero_option_is_not_supported_when_verifying_checksums ; 0xae88 ; "the --zero option is not supported when verifying checksums"
0x00001b7b      753e           jne 0x1bbb
0x00001b7d      803d6ec52000.  cmp byte [obj.ignore_missing], 0        ; [0x20e0f2:1]=0
0x00001b84      0f85a20e0000   jne 0x2a2c
0x00001b8a      803d63c52000.  cmp byte [obj.status_only], 0           ; [0x20e0f4:1]=0
0x00001b91      0f85690e0000   jne 0x2a00
0x00001b97      803d55c52000.  cmp byte [obj.warn], 0                  ; [0x20e0f3:1]=0
0x00001b9e      0f8401030000   je 0x1ea5
0x00001ba4      807c242b00     cmp byte [rsp + 0x2b], 0
0x00001ba9      ba05000000     mov edx, 5
0x00001bae      488d352b9400.  lea rsi, str.the___warn_option_is_meaningful_only_when_verifying_checksums ; 0xafe0 ; "the --warn option is meaningful only when verifying checksums"
0x00001bb5      0f8582000000   jne 0x1c3d
0x00001bbb      31ff           xor edi, edi
0x00001bbd      e89efaffff     call sym.imp.dcgettext
0x00001bc2      31f6           xor esi, esi
0x00001bc4      4889c2         mov rdx, rax
0x00001bc7      31ff           xor edi, edi
0x00001bc9      31c0           xor eax, eax
0x00001bcb      e860fcffff     call sym.imp.error
0x00001bd0      bf01000000     mov edi, 1
0x00001bd5      e8c6120000     call sym.usage
0x00001bda      807c242b00     cmp byte [rsp + 0x2b], 0
0x00001bdf      7413           je 0x1bf4
0x00001be1      807c247800     cmp byte [rsp + 0x78], 0
0x00001be6      ba05000000     mov edx, 5
0x00001beb      488d35d69200.  lea rsi, str.the___tag_option_is_meaningless_when_verifying_checksums ; 0xaec8 ; "the --tag option is meaningless when verifying checksums"
0x00001bf2      75c7           jne 0x1bbb
0x00001bf4      85ed           test ebp, ebp
0x00001bf6      7813           js 0x1c0b
0x00001bf8      807c242b00     cmp byte [rsp + 0x2b], 0
0x00001bfd      ba05000000     mov edx, 5
0x00001c02      488d35ff9200.  lea rsi, str.the___binary_and___text_options_are_meaningless_when_verifying_checksums ; 0xaf08 ; "the --binary and --text options are meaningless when verifying checksums"
0x00001c09      75b0           jne 0x1bbb
0x00001c0b      803de0c42000.  cmp byte [obj.ignore_missing], 0        ; [0x20e0f2:1]=0
0x00001c12      0f84d00d0000   je 0x29e8
0x00001c18      807c242b00     cmp byte [rsp + 0x2b], 0
0x00001c1d      0f84090e0000   je 0x2a2c
0x00001c23      803dcac42000.  cmp byte [obj.status_only], 0           ; [0x20e0f4:1]=0
0x00001c2a      0f847d090000   je 0x25ad
0x00001c30      803dbcc42000.  cmp byte [obj.warn], 0                  ; [0x20e0f3:1]=0
0x00001c37      0f8468020000   je 0x1ea5
0x00001c3d      83fdff         cmp ebp, 0xffffffff
0x00001c40      7502           jne 0x1c44
0x00001c42      31ed           xor ebp, ebp
0x00001c44      4963c4         movsxd rax, r12d
0x00001c47      488d04c3       lea rax, [rbx + rax*8]
0x00001c4b      4889442448     mov qword [rsp + 0x48], rax
0x00001c50      48630561c420.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20e0b8:4]=0
0x00001c57      4439e0         cmp eax, r12d
0x00001c5a      7519           jne 0x1c75
0x00001c5c      488b7c2448     mov rdi, qword [rsp + 0x48]
0x00001c61      488d35ba9600.  lea rsi, [0x0000b322]                   ; "-"
0x00001c68      4883c708       add rdi, 8
0x00001c6c      488977f8       mov qword [rdi - 8], rsi
0x00001c70      48897c2448     mov qword [rsp + 0x48], rdi
0x00001c75      488d04c3       lea rax, [rbx + rax*8]
0x00001c79      4839442448     cmp qword [rsp + 0x48], rax
0x00001c7e      4889442418     mov qword [rsp + 0x18], rax
0x00001c83      0f86ab0c0000   jbe 0x2934
0x00001c89      83fd01         cmp ebp, 1
0x00001c8c      4c8d359d9500.  lea r14, obj.bin2hex.7156               ; 0xb230 ; "0123456789abcdef8.31"
0x00001c93      c644247901     mov byte [rsp + 0x79], 1
0x00001c98      19c0           sbb eax, eax
0x00001c9a      83e0f6         and eax, 0xfffffff6                     ; 4294967286
0x00001c9d      83c02a         add eax, 0x2a
0x00001ca0      8944247c       mov dword [rsp + 0x7c], eax
0x00001ca4      8844247b       mov byte [rsp + 0x7b], al
0x00001ca8      0f1f84000000.  nop dword [rax + rax]
0x00001cb0      488b442418     mov rax, qword [rsp + 0x18]
0x00001cb5      807c242b00     cmp byte [rsp + 0x2b], 0
0x00001cba      488b30         mov rsi, qword [rax]
0x00001cbd      4889742420     mov qword [rsp + 0x20], rsi
0x00001cc2      0f8478060000   je 0x2340
0x00001cc8      488d3d539600.  lea rdi, [0x0000b322]                   ; "-"
0x00001ccf      b902000000     mov ecx, 2
0x00001cd4      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001cd6      0f97c0         seta al
0x00001cd9      1c00           sbb al, 0
0x00001cdb      0fbec0         movsx eax, al
0x00001cde      85c0           test eax, eax
0x00001ce0      8944242c       mov dword [rsp + 0x2c], eax
0x00001ce4      0f852b070000   jne 0x2415
0x00001cea      488d35958a00.  lea rsi, str.standard_input             ; 0xa786 ; "standard input"
0x00001cf1      ba05000000     mov edx, 5
0x00001cf6      31ff           xor edi, edi
0x00001cf8      c60509c42000.  mov byte [obj.have_read_stdin], 1       ; [0x20e108:1]=0
0x00001cff      e85cf9ffff     call sym.imp.dcgettext
0x00001d04      4c8b25a5c320.  mov r12, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20e0b0:8]=0
0x00001d0b      4889442420     mov qword [rsp + 0x20], rax
0x00001d10      488d84249800.  lea rax, [rsp + 0x98]
0x00001d18      48c784249000.  mov qword [rsp + 0x90], 0
0x00001d24      48c784249800.  mov qword [rsp + 0x98], 0
0x00001d30      c644247a00     mov byte [rsp + 0x7a], 0
0x00001d35      c644243000     mov byte [rsp + 0x30], 0
0x00001d3a      4531ed         xor r13d, r13d
0x00001d3d      4889442408     mov qword [rsp + 8], rax
0x00001d42      488d84249000.  lea rax, [rsp + 0x90]
0x00001d4a      48c744245800.  mov qword [rsp + 0x58], 0
0x00001d53      48c744245000.  mov qword [rsp + 0x50], 0
0x00001d5c      bd01000000     mov ebp, 1
0x00001d61      4889442410     mov qword [rsp + 0x10], rax
0x00001d66      488d84248f00.  lea rax, [rsp + 0x8f]
0x00001d6e      4889442440     mov qword [rsp + 0x40], rax
0x00001d73      488d8424f000.  lea rax, [rsp + 0xf0]
0x00001d7b      4889442438     mov qword [rsp + 0x38], rax
0x00001d80      488b742408     mov rsi, qword [rsp + 8]
0x00001d85      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00001d8a      4c89e1         mov rcx, r12
0x00001d8d      ba0a000000     mov edx, 0xa
0x00001d92      e8c9f9ffff     call sym.imp.__getdelim
0x00001d97      4885c0         test rax, rax
0x00001d9a      0f8efc020000   jle 0x209c
0x00001da0      488b9c249000.  mov rbx, qword [rsp + 0x90]
0x00001da8      0fb60b         movzx ecx, byte [rbx]
0x00001dab      80f923         cmp cl, 0x23
0x00001dae      0f84a1000000   je 0x1e55
0x00001db4      807c03ff0a     cmp byte [rbx + rax - 1], 0xa
0x00001db9      4989c7         mov r15, rax
0x00001dbc      7514           jne 0x1dd2
0x00001dbe      4983ef01       sub r15, 1
0x00001dc2      42c6043b00     mov byte [rbx + r15], 0
0x00001dc7      488b9c249000.  mov rbx, qword [rsp + 0x90]
0x00001dcf      0fb60b         movzx ecx, byte [rbx]
0x00001dd2      80f909         cmp cl, 9
0x00001dd5      7407           je 0x1dde
0x00001dd7      31d2           xor edx, edx
0x00001dd9      80f920         cmp cl, 0x20                            ; "@"
0x00001ddc      7514           jne 0x1df2
0x00001dde      31d2           xor edx, edx
0x00001de0      4883c201       add rdx, 1
0x00001de4      0fb60c13       movzx ecx, byte [rbx + rdx]
0x00001de8      80f920         cmp cl, 0x20                            ; "@"
0x00001deb      74f3           je 0x1de0
0x00001ded      80f909         cmp cl, 9
0x00001df0      74ee           je 0x1de0
0x00001df2      4531c9         xor r9d, r9d
0x00001df5      80f95c         cmp cl, 0x5c
0x00001df8      750a           jne 0x1e04
0x00001dfa      440fb64c242b   movzx r9d, byte [rsp + 0x2b]
0x00001e00      4883c201       add rdx, 1
0x00001e04      4c8d0413       lea r8, [rbx + rdx]
0x00001e08      488d3d858800.  lea rdi, str.SHA512                     ; 0xa694 ; "SHA512"
0x00001e0f      b906000000     mov ecx, 6
0x00001e14      4c89c6         mov rsi, r8
0x00001e17      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001e19      0f97c0         seta al
0x00001e1c      1c00           sbb al, 0
0x00001e1e      84c0           test al, al
0x00001e20      0f85ca000000   jne 0x1ef0
0x00001e26      0fb6441306     movzx eax, byte [rbx + rdx + 6]
0x00001e2b      488d4a06       lea rcx, [rdx + 6]
0x00001e2f      3c20           cmp al, 0x20                            ; "@"
0x00001e31      7509           jne 0x1e3c
0x00001e33      0fb6441307     movzx eax, byte [rbx + rdx + 7]
0x00001e38      488d4a07       lea rcx, [rdx + 7]
0x00001e3c      3c28           cmp al, 0x28
0x00001e3e      0f8480050000   je 0x23c4
0x00001e44      4983c501       add r13, 1
0x00001e48      803da4c22000.  cmp byte [obj.warn], 0                  ; [0x20e0f3:1]=0
0x00001e4f      0f857b030000   jne 0x21d0
0x00001e55      41f6042430     test byte [r12], 0x30
0x00001e5a      0f853c020000   jne 0x209c
0x00001e60      4883c501       add rbp, 1
0x00001e64      0f8516ffffff   jne 0x1d80
0x00001e6a      488b542420     mov rdx, qword [rsp + 0x20]
0x00001e6f      be03000000     mov esi, 3
0x00001e74      31ff           xor edi, edi
0x00001e76      e855770000     call sym.quotearg_n_style_colon
0x00001e7b      488d35138900.  lea rsi, str.s:_too_many_checksum_lines ; 0xa795 ; "%s: too many checksum lines"
0x00001e82      4889c3         mov rbx, rax
0x00001e85      ba05000000     mov edx, 5
0x00001e8a      31ff           xor edi, edi
0x00001e8c      e8cff7ffff     call sym.imp.dcgettext
0x00001e91      4889d9         mov rcx, rbx
0x00001e94      4889c2         mov rdx, rax
0x00001e97      31f6           xor esi, esi
0x00001e99      bf01000000     mov edi, 1
0x00001e9e      31c0           xor eax, eax
0x00001ea0      e88bf9ffff     call sym.imp.error
0x00001ea5      803d45c22000.  cmp byte [obj.quiet], 1                 ; [0x20e0f1:1]=0
0x00001eac      7517           jne 0x1ec5
0x00001eae      807c242b00     cmp byte [rsp + 0x2b], 0
0x00001eb3      ba05000000     mov edx, 5
0x00001eb8      488d35619100.  lea rsi, str.the___quiet_option_is_meaningful_only_when_verifying_checksums ; 0xb020 ; "the --quiet option is meaningful only when verifying checksums"
0x00001ebf      0f84f6fcffff   je 0x1bbb
0x00001ec5      803d24c22000.  cmp byte [obj.strict], 0                ; [0x20e0f0:1]=0
0x00001ecc      0f846bfdffff   je 0x1c3d
0x00001ed2      807c242b00     cmp byte [rsp + 0x2b], 0
0x00001ed7      ba05000000     mov edx, 5
0x00001edc      488d357d9100.  lea rsi, str.the___strict_option_is_meaningful_only_when_verifying_checksums ; 0xb060 ; "the --strict option is meaningful only when verifying checksums"
0x00001ee3      0f8554fdffff   jne 0x1c3d
0x00001ee9      e9cdfcffff     jmp 0x1bbb
0x00001eee      6690           nop
0x00001ef0      4c89f9         mov rcx, r15
0x00001ef3      31c0           xor eax, eax
0x00001ef5      4829d1         sub rcx, rdx
0x00001ef8      4180385c       cmp byte [r8], 0x5c
0x00001efc      0f94c0         sete al
0x00001eff      480305fac120.  add rax, qword [obj.min_digest_line_length] ; [0x20e100:8]=0
0x00001f06      4839c1         cmp rcx, rax
0x00001f09      0f8235ffffff   jb 0x1e44
0x00001f0f      480315e2c120.  add rdx, qword [obj.digest_hex_bytes]   ; [0x20e0f8:8]=0
0x00001f16      488d0c13       lea rcx, [rbx + rdx]
0x00001f1a      0fb601         movzx eax, byte [rcx]
0x00001f1d      3c20           cmp al, 0x20                            ; "@"
0x00001f1f      7408           je 0x1f29
0x00001f21      3c09           cmp al, 9
0x00001f23      0f851bffffff   jne 0x1e44
0x00001f29      c60100         mov byte [rcx], 0
0x00001f2c      4c89c7         mov rdi, r8
0x00001f2f      4889542470     mov qword [rsp + 0x70], rdx
0x00001f34      44884c2468     mov byte [rsp + 0x68], r9b
0x00001f39      4c89442460     mov qword [rsp + 0x60], r8
0x00001f3e      e88d0c0000     call sym.hex_digits
0x00001f43      84c0           test al, al
0x00001f45      0f84f9feffff   je 0x1e44
0x00001f4b      488b542470     mov rdx, qword [rsp + 0x70]
0x00001f50      4c89f9         mov rcx, r15
0x00001f53      8b35bbc02000   mov esi, dword [obj.bsd_reversed]       ; [0x20e014:4]=-1
0x00001f59      4c8b442460     mov r8, qword [rsp + 0x60]
0x00001f5e      440fb64c2468   movzx r9d, byte [rsp + 0x68]
0x00001f64      488d4201       lea rax, [rdx + 1]
0x00001f68      4829c1         sub rcx, rax
0x00001f6b      4883e901       sub rcx, 1
0x00001f6f      7417           je 0x1f88
0x00001f71      0fb64c1301     movzx ecx, byte [rbx + rdx + 1]
0x00001f76      80f920         cmp cl, 0x20                            ; "@"
0x00001f79      0f8465070000   je 0x26e4
0x00001f7f      80f92a         cmp cl, 0x2a
0x00001f82      0f845c070000   je 0x26e4
0x00001f88      85f6           test esi, esi
0x00001f8a      0f84b4feffff   je 0x1e44
0x00001f90      c7057ac02000.  mov dword [obj.bsd_reversed], 1         ; [0x20e014:4]=-1
0x00001f9a      4801c3         add rbx, rax
0x00001f9d      4584c9         test r9b, r9b
0x00001fa0      0f859b070000   jne 0x2741
0x00001fa6      8b44242c       mov eax, dword [rsp + 0x2c]
0x00001faa      85c0           test eax, eax
0x00001fac      751e           jne 0x1fcc
0x00001fae      488d3d6d9300.  lea rdi, [0x0000b322]                   ; "-"
0x00001fb5      b902000000     mov ecx, 2
0x00001fba      4889de         mov rsi, rbx
0x00001fbd      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001fbf      0f97c0         seta al
0x00001fc2      1c00           sbb al, 0
0x00001fc4      84c0           test al, al
0x00001fc6      0f8478feffff   je 0x1e44
0x00001fcc      4531ff         xor r15d, r15d
0x00001fcf      803d1ec12000.  cmp byte [obj.status_only], 0           ; [0x20e0f4:1]=0
0x00001fd6      7521           jne 0x1ff9
0x00001fd8      be0a000000     mov esi, 0xa
0x00001fdd      4889df         mov rdi, rbx
0x00001fe0      4c89442430     mov qword [rsp + 0x30], r8
0x00001fe5      e8d6f6ffff     call sym.imp.strchr
0x00001fea      4c8b442430     mov r8, qword [rsp + 0x30]
0x00001fef      4531ff         xor r15d, r15d
0x00001ff2      4885c0         test rax, rax
0x00001ff5      410f95c7       setne r15b
0x00001ff9      488b542440     mov rdx, qword [rsp + 0x40]
0x00001ffe      488b742438     mov rsi, qword [rsp + 0x38]
0x00002003      4889df         mov rdi, rbx
0x00002006      4c89442430     mov qword [rsp + 0x30], r8
0x0000200b      e8f00c0000     call sym.digest_file.isra.1
0x00002010      84c0           test al, al
0x00002012      4189c1         mov r9d, eax
0x00002015      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000201a      0f8500020000   jne 0x2220
0x00002020      488344245001   add qword [rsp + 0x50], 1
0x00002026      803dc7c02000.  cmp byte [obj.status_only], 0           ; [0x20e0f4:1]=0
0x0000202d      7559           jne 0x2088
0x0000202f      4585ff         test r15d, r15d
0x00002032      7420           je 0x2054
0x00002034      488b3d6dc020.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x0000203b      488b4728       mov rax, qword [rdi + 0x28]
0x0000203f      483b4730       cmp rax, qword [rdi + 0x30]
0x00002043      0f831b090000   jae 0x2964
0x00002049      488d5001       lea rdx, [rax + 1]
0x0000204d      48895728       mov qword [rdi + 0x28], rdx
0x00002051      c6005c         mov byte [rax], 0x5c                    ; '\'
                                                                       ; [0x5c:1]=0
0x00002054      4489fe         mov esi, r15d
0x00002057      4889df         mov rdi, rbx
0x0000205a      e8d10b0000     call sym.print_filename
0x0000205f      488d354b8700.  lea rsi, str.FAILED_open_or_read        ; 0xa7b1 ; "FAILED open or read"
0x00002066      ba05000000     mov edx, 5
0x0000206b      31ff           xor edi, edi
0x0000206d      e8eef5ffff     call sym.imp.dcgettext
0x00002072      488d35f89700.  lea rsi, [0x0000b871]                   ; ": %s\n"
0x00002079      4889c2         mov rdx, rax
0x0000207c      bf01000000     mov edi, 1
0x00002081      31c0           xor eax, eax
0x00002083      e888f7ffff     call sym.imp.__printf_chk
0x00002088      0fb644242b     movzx eax, byte [rsp + 0x2b]
0x0000208d      41f6042430     test byte [r12], 0x30
0x00002092      88442430       mov byte [rsp + 0x30], al
0x00002096      0f84c4fdffff   je 0x1e60
0x0000209c      488bbc249000.  mov rdi, qword [rsp + 0x90]
0x000020a4      e807f5ffff     call sym.imp.free
0x000020a9      418b1c24       mov ebx, dword [r12]
0x000020ad      83e320         and ebx, 0x20                           ; "@"
0x000020b0      0f85b8040000   jne 0x256e
0x000020b6      837c242c00     cmp dword [rsp + 0x2c], 0
0x000020bb      0f8567050000   jne 0x2628
0x000020c1      807c243000     cmp byte [rsp + 0x30], 0
0x000020c6      0f8479050000   je 0x2645
0x000020cc      803d21c02000.  cmp byte [obj.status_only], 0           ; [0x20e0f4:1]=0
0x000020d3      0f8585040000   jne 0x255e
0x000020d9      4d85ed         test r13, r13
0x000020dc      742f           je 0x210d
0x000020de      488d15239000.  lea rdx, str.WARNING:__lu_lines_are_improperly_formatted ; 0xb108 ; "WARNING: %lu lines are improperly formatted"
0x000020e5      488d354c9000.  lea rsi, str.WARNING:__lu_line_is_improperly_formatted ; 0xb138 ; "WARNING: %lu line is improperly formatted"
0x000020ec      4c89e9         mov rcx, r13
0x000020ef      31ff           xor edi, edi
0x000020f1      41b805000000   mov r8d, 5
0x000020f7      e864f7ffff     call sym.imp.dcngettext
0x000020fc      4c89e9         mov rcx, r13
0x000020ff      4889c2         mov rdx, rax
0x00002102      31f6           xor esi, esi
0x00002104      31ff           xor edi, edi
0x00002106      31c0           xor eax, eax
0x00002108      e823f7ffff     call sym.imp.error
0x0000210d      48837c245000   cmp qword [rsp + 0x50], 0
0x00002113      7434           je 0x2149
0x00002115      4c8b7c2450     mov r15, qword [rsp + 0x50]
0x0000211a      488d15479000.  lea rdx, str.WARNING:__lu_listed_files_could_not_be_read ; 0xb168 ; "WARNING: %lu listed files could not be read"
0x00002121      488d35709000.  lea rsi, str.WARNING:__lu_listed_file_could_not_be_read ; 0xb198 ; "WARNING: %lu listed file could not be read"
0x00002128      31ff           xor edi, edi
0x0000212a      41b805000000   mov r8d, 5
0x00002130      4c89f9         mov rcx, r15
0x00002133      e828f7ffff     call sym.imp.dcngettext
0x00002138      4c89f9         mov rcx, r15
0x0000213b      4889c2         mov rdx, rax
0x0000213e      31f6           xor esi, esi
0x00002140      31ff           xor edi, edi
0x00002142      31c0           xor eax, eax
0x00002144      e8e7f6ffff     call sym.imp.error
0x00002149      48837c245800   cmp qword [rsp + 0x58], 0
0x0000214f      7434           je 0x2185
0x00002151      4c8b7c2458     mov r15, qword [rsp + 0x58]
0x00002156      488d156b9000.  lea rdx, str.WARNING:__lu_computed_checksums_did_NOT_match ; 0xb1c8 ; "WARNING: %lu computed checksums did NOT match"
0x0000215d      488d35949000.  lea rsi, str.WARNING:__lu_computed_checksum_did_NOT_match ; 0xb1f8 ; "WARNING: %lu computed checksum did NOT match"
0x00002164      31ff           xor edi, edi
0x00002166      41b805000000   mov r8d, 5
0x0000216c      4c89f9         mov rcx, r15
0x0000216f      e8ecf6ffff     call sym.imp.dcngettext
0x00002174      4c89f9         mov rcx, r15
0x00002177      4889c2         mov rdx, rax
0x0000217a      31f6           xor esi, esi
0x0000217c      31ff           xor edi, edi
0x0000217e      31c0           xor eax, eax
0x00002180      e8abf6ffff     call sym.imp.error
0x00002185      803d66bf2000.  cmp byte [obj.ignore_missing], 0        ; [0x20e0f2:1]=0
0x0000218c      0f84cc030000   je 0x255e
0x00002192      807c247a00     cmp byte [rsp + 0x7a], 0
0x00002197      0f845a070000   je 0x28f7
0x0000219d      488b442450     mov rax, qword [rsp + 0x50]
0x000021a2      480b442458     or rax, qword [rsp + 0x58]
0x000021a7      7515           jne 0x21be
0x000021a9      0fb60540bf20.  movzx eax, byte [obj.strict]            ; [0x20e0f0:1]=0
0x000021b0      83f001         xor eax, 1
0x000021b3      4d85ed         test r13, r13
0x000021b6      0f94c3         sete bl
0x000021b9      09d8           or eax, ebx
0x000021bb      0fb6d8         movzx ebx, al
0x000021be      89d8           mov eax, ebx
0x000021c0      83e001         and eax, 1
0x000021c3      20442479       and byte [rsp + 0x79], al
0x000021c7      e9a1010000     jmp 0x236d
0x000021cc      0f1f4000       nop dword [rax]
0x000021d0      488b542420     mov rdx, qword [rsp + 0x20]
0x000021d5      31ff           xor edi, edi
0x000021d7      be03000000     mov esi, 3
0x000021dc      e8ef730000     call sym.quotearg_n_style_colon
0x000021e1      488d35b88e00.  lea rsi, str.s:__lu:_improperly_formatted__s_checksum_line ; 0xb0a0 ; "%s: %lu: improperly formatted %s checksum line"
0x000021e8      31ff           xor edi, edi
0x000021ea      ba05000000     mov edx, 5
0x000021ef      4889c3         mov rbx, rax
0x000021f2      e869f4ffff     call sym.imp.dcgettext
0x000021f7      4c8d0d968400.  lea r9, str.SHA512                      ; 0xa694 ; "SHA512"
0x000021fe      4889c2         mov rdx, rax
0x00002201      4989e8         mov r8, rbp
0x00002204      4889d9         mov rcx, rbx
0x00002207      31f6           xor esi, esi
0x00002209      31ff           xor edi, edi
0x0000220b      31c0           xor eax, eax
0x0000220d      e81ef6ffff     call sym.imp.error
0x00002212      e93efcffff     jmp 0x1e55
0x00002217      660f1f840000.  nop word [rax + rax]
0x00002220      803dcbbe2000.  cmp byte [obj.ignore_missing], 0        ; [0x20e0f2:1]=0
0x00002227      740e           je 0x2237
0x00002229      80bc248f0000.  cmp byte [rsp + 0x8f], 0
0x00002231      0f8551feffff   jne 0x2088
0x00002237      488b0dbabe20.  mov rcx, qword [obj.digest_hex_bytes]   ; [0x20e0f8:8]=0
0x0000223e      4c89442468     mov qword [rsp + 0x68], r8
0x00002243      48d1e9         shr rcx, 1
0x00002246      0f8473030000   je 0x25bf
0x0000224c      48894c2460     mov qword [rsp + 0x60], rcx
0x00002251      44884c2430     mov byte [rsp + 0x30], r9b
0x00002256      e875f6ffff     call sym.imp.__ctype_tolower_loc
0x0000225b      31d2           xor edx, edx
0x0000225d      488b38         mov rdi, qword [rax]
0x00002260      440fb64c2430   movzx r9d, byte [rsp + 0x30]
0x00002266      488b4c2460     mov rcx, qword [rsp + 0x60]
0x0000226b      4c8b442468     mov r8, qword [rsp + 0x68]
0x00002270      4c8b542438     mov r10, qword [rsp + 0x38]
0x00002275      eb29           jmp 0x22a0
0x00002277      660f1f840000.  nop word [rax + rax]
0x00002280      410fb6745001   movzx esi, byte [r8 + rdx*2 + 1]
0x00002286      83e00f         and eax, 0xf
0x00002289      410fbe0406     movsx eax, byte [r14 + rax]
0x0000228e      3904b7         cmp dword [rdi + rsi*4], eax
0x00002291      752b           jne 0x22be
0x00002293      4883c201       add rdx, 1
0x00002297      4839d1         cmp rcx, rdx
0x0000229a      0f849d030000   je 0x263d
0x000022a0      410fb60412     movzx eax, byte [r10 + rdx]
0x000022a5      450fb61c50     movzx r11d, byte [r8 + rdx*2]
0x000022aa      89c6           mov esi, eax
0x000022ac      40c0ee04       shr sil, 4
0x000022b0      83e60f         and esi, 0xf
0x000022b3      410fbe3436     movsx esi, byte [r14 + rsi]
0x000022b8      4239349f       cmp dword [rdi + r11*4], esi
0x000022bc      74c2           je 0x2280
0x000022be      4839d1         cmp rcx, rdx
0x000022c1      0f84fa020000   je 0x25c1
0x000022c7      488344245801   add qword [rsp + 0x58], 1
0x000022cd      803d20be2000.  cmp byte [obj.status_only], 0           ; [0x20e0f4:1]=0
0x000022d4      0f85aefdffff   jne 0x2088
0x000022da      4585ff         test r15d, r15d
0x000022dd      0f8405060000   je 0x28e8
0x000022e3      488b3dbebd20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x000022ea      488b4728       mov rax, qword [rdi + 0x28]
0x000022ee      483b4730       cmp rax, qword [rdi + 0x30]
0x000022f2      0f83a7060000   jae 0x299f
0x000022f8      488d7001       lea rsi, [rax + 1]
0x000022fc      48897728       mov qword [rdi + 0x28], rsi
0x00002300      c6005c         mov byte [rax], 0x5c                    ; '\'
                                                                       ; [0x5c:1]=0
0x00002303      be01000000     mov esi, 1
0x00002308      4889df         mov rdi, rbx
0x0000230b      48894c2460     mov qword [rsp + 0x60], rcx
0x00002310      4889542430     mov qword [rsp + 0x30], rdx
0x00002315      e816090000     call sym.print_filename
0x0000231a      488b542430     mov rdx, qword [rsp + 0x30]
0x0000231f      488b4c2460     mov rcx, qword [rsp + 0x60]
0x00002324      4839ca         cmp rdx, rcx
0x00002327      0f84dd020000   je 0x260a
0x0000232d      ba05000000     mov edx, 5
0x00002332      488d358c8400.  lea rsi, str.FAILED                     ; 0xa7c5 ; "FAILED"
0x00002339      e92dfdffff     jmp 0x206b
0x0000233e      6690           nop
0x00002340      488d84249800.  lea rax, [rsp + 0x98]
0x00002348      488d9c24a000.  lea rbx, [rsp + 0xa0]
0x00002350      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00002355      4889c2         mov rdx, rax
0x00002358      4889de         mov rsi, rbx
0x0000235b      e8a0090000     call sym.digest_file.isra.1
0x00002360      84c0           test al, al
0x00002362      0f85ff000000   jne 0x2467
0x00002368      c644247900     mov byte [rsp + 0x79], 0
0x0000236d      488344241808   add qword [rsp + 0x18], 8
0x00002373      488b442418     mov rax, qword [rsp + 0x18]
0x00002378      4839442448     cmp qword [rsp + 0x48], rax
0x0000237d      0f872df9ffff   ja 0x1cb0
0x00002383      803d7ebd2000.  cmp byte [obj.have_read_stdin], 0       ; [0x20e108:1]=0
0x0000238a      0f8570030000   jne 0x2700
0x00002390      0fb6442479     movzx eax, byte [rsp + 0x79]
0x00002395      83f001         xor eax, 1
0x00002398      488bbc243801.  mov rdi, qword [rsp + 0x138]
0x000023a0      6448333c2528.  xor rdi, qword fs:[0x28]
0x000023a9      0fb6c0         movzx eax, al
0x000023ac      0f8531060000   jne 0x29e3
0x000023b2      4881c4480100.  add rsp, 0x148
0x000023b9      5b             pop rbx
0x000023ba      5d             pop rbp
0x000023bb      415c           pop r12
0x000023bd      415d           pop r13
0x000023bf      415e           pop r14
0x000023c1      415f           pop r15
0x000023c3      c3             ret
0x000023c4      4883c101       add rcx, 1
0x000023c8      4929cf         sub r15, rcx
0x000023cb      0f8473faffff   je 0x1e44
0x000023d1      4d89fa         mov r10, r15
0x000023d4      4801cb         add rbx, rcx
0x000023d7      4983ea01       sub r10, 1
0x000023db      7424           je 0x2401
0x000023dd      42807c3bff29   cmp byte [rbx + r15 - 1], 0x29
0x000023e3      7516           jne 0x23fb
0x000023e5      e99f020000     jmp 0x2689
0x000023ea      660f1f440000   nop word [rax + rax]
0x000023f0      42803c1329     cmp byte [rbx + r10], 0x29
0x000023f5      0f848e020000   je 0x2689
0x000023fb      4983ea01       sub r10, 1
0x000023ff      75ef           jne 0x23f0
0x00002401      803b29         cmp byte [rbx], 0x29
0x00002404      0f853afaffff   jne 0x1e44
0x0000240a      4989db         mov r11, rbx
0x0000240d      4531d2         xor r10d, r10d
0x00002410      e978020000     jmp 0x268d
0x00002415      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000241a      488d35418300.  lea rsi, [0x0000a762]                   ; "r"
0x00002421      e8ca550000     call sym.fopen_safer
0x00002426      4885c0         test rax, rax
0x00002429      4989c4         mov r12, rax
0x0000242c      0f85def8ffff   jne 0x1d10
0x00002432      488b542420     mov rdx, qword [rsp + 0x20]
0x00002437      be03000000     mov esi, 3
0x0000243c      31ff           xor edi, edi
0x0000243e      e88d710000     call sym.quotearg_n_style_colon
0x00002443      4889c3         mov rbx, rax
0x00002446      e885f1ffff     call sym.imp.__errno_location
0x0000244b      8b30           mov esi, dword [rax]
0x0000244d      488d15018e00.  lea rdx, [0x0000b255]                   ; "%s"
0x00002454      31c0           xor eax, eax
0x00002456      4889d9         mov rcx, rbx
0x00002459      31ff           xor edi, edi
0x0000245b      e8d0f3ffff     call sym.imp.error
0x00002460      31c0           xor eax, eax
0x00002462      e95cfdffff     jmp 0x21c3
0x00002467      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000246c      be5c000000     mov esi, 0x5c                           ; '\'
0x00002471      e84af2ffff     call sym.imp.strchr
0x00002476      4885c0         test rax, rax
0x00002479      0f84d2030000   je 0x2851
0x0000247f      803d8abb2000.  cmp byte [obj.delim], 0xa               ; [0x20e010:1]=10 ; "\n"
0x00002486      0f84e0020000   je 0x276c
0x0000248c      807c247800     cmp byte [rsp + 0x78], 0
0x00002491      0f85d7030000   jne 0x286e
0x00002497      488b055abc20.  mov rax, qword [obj.digest_hex_bytes]   ; [0x20e0f8:8]=0
0x0000249e      31ed           xor ebp, ebp
0x000024a0      48d1e8         shr rax, 1
0x000024a3      743d           je 0x24e2
0x000024a5      4531e4         xor r12d, r12d
0x000024a8      0f1f84000000.  nop dword [rax + rax]
0x000024b0      420fb61423     movzx edx, byte [rbx + r12]
0x000024b5      488d353b8300.  lea rsi, str.02x                        ; 0xa7f7 ; "%02x"
0x000024bc      31c0           xor eax, eax
0x000024be      bf01000000     mov edi, 1
0x000024c3      4983c401       add r12, 1
0x000024c7      e844f3ffff     call sym.imp.__printf_chk
0x000024cc      488b0525bc20.  mov rax, qword [obj.digest_hex_bytes]   ; [0x20e0f8:8]=0
0x000024d3      48d1e8         shr rax, 1
0x000024d6      4c39e0         cmp rax, r12
0x000024d9      77d5           ja 0x24b0
0x000024db      807c247800     cmp byte [rsp + 0x78], 0
0x000024e0      7551           jne 0x2533
0x000024e2      488b3dbfbb20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x000024e9      488b4728       mov rax, qword [rdi + 0x28]
0x000024ed      48394730       cmp qword [rdi + 0x30], rax
0x000024f1      0f8699040000   jbe 0x2990
0x000024f7      488d5001       lea rdx, [rax + 1]
0x000024fb      48895728       mov qword [rdi + 0x28], rdx
0x000024ff      c60020         mov byte [rax], 0x20                    ; [0x20:1]=64 ; "@"
0x00002502      488b3d9fbb20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x00002509      488b4728       mov rax, qword [rdi + 0x28]
0x0000250d      483b4730       cmp rax, qword [rdi + 0x30]
0x00002511      0f836b040000   jae 0x2982
0x00002517      488d5001       lea rdx, [rax + 1]
0x0000251b      48895728       mov qword [rdi + 0x28], rdx
0x0000251f      0fb67c247b     movzx edi, byte [rsp + 0x7b]
0x00002524      408838         mov byte [rax], dil
0x00002527      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000252c      89ee           mov esi, ebp
0x0000252e      e8fd060000     call sym.print_filename
0x00002533      488b3d6ebb20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x0000253a      0fb615cfba20.  movzx edx, byte [obj.delim]             ; [0x20e010:1]=10 ; "\n"
0x00002541      488b4728       mov rax, qword [rdi + 0x28]
0x00002545      483b4730       cmp rax, qword [rdi + 0x30]
0x00002549      0f8308040000   jae 0x2957
0x0000254f      488d4801       lea rcx, [rax + 1]
0x00002553      48894f28       mov qword [rdi + 0x28], rcx
0x00002557      8810           mov byte [rax], dl
0x00002559      e90ffeffff     jmp 0x236d
0x0000255e      807c247a00     cmp byte [rsp + 0x7a], 0
0x00002563      0f8534fcffff   jne 0x219d
0x00002569      e950fcffff     jmp 0x21be
0x0000256e      488b542420     mov rdx, qword [rsp + 0x20]
0x00002573      be03000000     mov esi, 3
0x00002578      31ff           xor edi, edi
0x0000257a      e851700000     call sym.quotearg_n_style_colon
0x0000257f      488d35498200.  lea rsi, str.s:_read_error              ; 0xa7cf ; "%s: read error"
0x00002586      4889c3         mov rbx, rax
0x00002589      ba05000000     mov edx, 5
0x0000258e      31ff           xor edi, edi
0x00002590      e8cbf0ffff     call sym.imp.dcgettext
0x00002595      4889d9         mov rcx, rbx
0x00002598      4889c2         mov rdx, rax
0x0000259b      31f6           xor esi, esi
0x0000259d      31c0           xor eax, eax
0x0000259f      31ff           xor edi, edi
0x000025a1      e88af2ffff     call sym.imp.error
0x000025a6      31c0           xor eax, eax
0x000025a8      e916fcffff     jmp 0x21c3
0x000025ad      803d3fbb2000.  cmp byte [obj.warn], 0                  ; [0x20e0f3:1]=0
0x000025b4      0f8583f6ffff   jne 0x1c3d
0x000025ba      e906f9ffff     jmp 0x1ec5
0x000025bf      31d2           xor edx, edx
0x000025c1      0fb6052cbb20.  movzx eax, byte [obj.status_only]       ; [0x20e0f4:1]=0
0x000025c8      84c0           test al, al
0x000025ca      8844247a       mov byte [rsp + 0x7a], al
0x000025ce      0f85b4faffff   jne 0x2088
0x000025d4      0fb60516bb20.  movzx eax, byte [obj.quiet]             ; [0x20e0f1:1]=0
0x000025db      84c0           test al, al
0x000025dd      8844247a       mov byte [rsp + 0x7a], al
0x000025e1      0f85a1faffff   jne 0x2088
0x000025e7      4585ff         test r15d, r15d
0x000025ea      0f8521040000   jne 0x2a11
0x000025f0      31f6           xor esi, esi
0x000025f2      4889df         mov rdi, rbx
0x000025f5      44884c2430     mov byte [rsp + 0x30], r9b
0x000025fa      e831060000     call sym.print_filename
0x000025ff      440fb64c2430   movzx r9d, byte [rsp + 0x30]
0x00002605      44884c247a     mov byte [rsp + 0x7a], r9b
0x0000260a      803de0ba2000.  cmp byte [obj.quiet], 0                 ; [0x20e0f1:1]=0
0x00002611      0f8571faffff   jne 0x2088
0x00002617      ba05000000     mov edx, 5
0x0000261c      488d35a98100.  lea rsi, [0x0000a7cc]                   ; "OK"
0x00002623      e943faffff     jmp 0x206b
0x00002628      4c89e7         mov rdi, r12
0x0000262b      e8507a0000     call sym.rpl_fclose
0x00002630      85c0           test eax, eax
0x00002632      0f8489faffff   je 0x20c1
0x00002638      e9f5fdffff     jmp 0x2432
0x0000263d      4889ca         mov rdx, rcx
0x00002640      e97cffffff     jmp 0x25c1
0x00002645      488b542420     mov rdx, qword [rsp + 0x20]
0x0000264a      31ff           xor edi, edi
0x0000264c      be03000000     mov esi, 3
0x00002651      e87a6f0000     call sym.quotearg_n_style_colon
0x00002656      488d35738a00.  lea rsi, str.s:_no_properly_formatted__s_checksum_lines_found ; 0xb0d0 ; "%s: no properly formatted %s checksum lines found"
0x0000265d      31ff           xor edi, edi
0x0000265f      ba05000000     mov edx, 5
0x00002664      4889c5         mov rbp, rax
0x00002667      e8f4efffff     call sym.imp.dcgettext
0x0000266c      4c8d05218000.  lea r8, str.SHA512                      ; 0xa694 ; "SHA512"
0x00002673      4889c2         mov rdx, rax
0x00002676      4889e9         mov rcx, rbp
0x00002679      31f6           xor esi, esi
0x0000267b      31ff           xor edi, edi
0x0000267d      31c0           xor eax, eax
0x0000267f      e8acf1ffff     call sym.imp.error
0x00002684      e935fbffff     jmp 0x21be
0x00002689      4e8d1c13       lea r11, [rbx + r10]
0x0000268d      4584c9         test r9b, r9b
0x00002690      0f85a8020000   jne 0x293e
0x00002696      4983c201       add r10, 1
0x0000269a      41c60300       mov byte [r11], 0
0x0000269e      eb04           jmp 0x26a4
0x000026a0      4983c201       add r10, 1
0x000026a4      420fb60413     movzx eax, byte [rbx + r10]
0x000026a9      3c20           cmp al, 0x20                            ; "@"
0x000026ab      74f3           je 0x26a0
0x000026ad      3c09           cmp al, 9
0x000026af      74ef           je 0x26a0
0x000026b1      3c3d           cmp al, 0x3d
0x000026b3      0f858bf7ffff   jne 0x1e44
0x000026b9      4a8d541301     lea rdx, [rbx + r10 + 1]
0x000026be      0fb602         movzx eax, byte [rdx]
0x000026c1      4989d0         mov r8, rdx
0x000026c4      488d5201       lea rdx, [rdx + 1]
0x000026c8      3c20           cmp al, 0x20                            ; "@"
0x000026ca      74f2           je 0x26be
0x000026cc      3c09           cmp al, 9
0x000026ce      74ee           je 0x26be
0x000026d0      4c89c7         mov rdi, r8
0x000026d3      4c89442460     mov qword [rsp + 0x60], r8
0x000026d8      e8f3040000     call sym.hex_digits
0x000026dd      4c8b442460     mov r8, qword [rsp + 0x60]
0x000026e2      eb7b           jmp 0x275f
0x000026e4      83ee01         sub esi, 1
0x000026e7      0f84adf8ffff   je 0x1f9a
0x000026ed      c7051db92000.  mov dword [obj.bsd_reversed], 0         ; [0x20e014:4]=-1
0x000026f7      488d4202       lea rax, [rdx + 2]
0x000026fb      e99af8ffff     jmp 0x1f9a
0x00002700      488b3da9b920.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20e0b0:8]=0
0x00002707      e874790000     call sym.rpl_fclose
0x0000270c      83c001         add eax, 1
0x0000270f      0f857bfcffff   jne 0x2390
0x00002715      488d356a8000.  lea rsi, str.standard_input             ; 0xa786 ; "standard input"
0x0000271c      ba05000000     mov edx, 5
0x00002721      31ff           xor edi, edi
0x00002723      e838efffff     call sym.imp.dcgettext
0x00002728      4889c3         mov rbx, rax
0x0000272b      e8a0eeffff     call sym.imp.__errno_location
0x00002730      8b30           mov esi, dword [rax]
0x00002732      4889da         mov rdx, rbx
0x00002735      bf01000000     mov edi, 1
0x0000273a      31c0           xor eax, eax
0x0000273c      e8eff0ffff     call sym.imp.error
0x00002741      4c89fe         mov rsi, r15
0x00002744      4889df         mov rdi, rbx
0x00002747      4c89442460     mov qword [rsp + 0x60], r8
0x0000274c      4829c6         sub rsi, rax
0x0000274f      e8fc030000     call sym.filename_unescape
0x00002754      4c8b442460     mov r8, qword [rsp + 0x60]
0x00002759      4885c0         test rax, rax
0x0000275c      0f95c0         setne al
0x0000275f      84c0           test al, al
0x00002761      0f853ff8ffff   jne 0x1fa6
0x00002767      e9d8f6ffff     jmp 0x1e44
0x0000276c      807c247800     cmp byte [rsp + 0x78], 0
0x00002771      0f84a0000000   je 0x2817
0x00002777      488b3d2ab920.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x0000277e      488b4728       mov rax, qword [rdi + 0x28]
0x00002782      483b4730       cmp rax, qword [rdi + 0x30]
0x00002786      0f8336020000   jae 0x29c2
0x0000278c      488d5001       lea rdx, [rax + 1]
0x00002790      48895728       mov qword [rdi + 0x28], rdx
0x00002794      c6005c         mov byte [rax], 0x5c                    ; '\'
                                                                       ; [0x5c:1]=0
0x00002797      488b0d0ab920.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x0000279e      488d3def7e00.  lea rdi, str.SHA512                     ; 0xa694 ; "SHA512"
0x000027a5      ba06000000     mov edx, 6
0x000027aa      be01000000     mov esi, 1
0x000027af      e81cf0ffff     call sym.imp.fwrite_unlocked
0x000027b4      488b0dedb820.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x000027bb      488d3d3a8000.  lea rdi, [0x0000a7fc]                   ; " ("
0x000027c2      ba02000000     mov edx, 2
0x000027c7      be01000000     mov esi, 1
0x000027cc      e8ffefffff     call sym.imp.fwrite_unlocked
0x000027d1      488b7c2420     mov rdi, qword [rsp + 0x20]
0x000027d6      be01000000     mov esi, 1
0x000027db      e850040000     call sym.print_filename
0x000027e0      488b0dc1b820.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x000027e7      488d3d118000.  lea rdi, str.                           ; 0xa7ff ; ") = "
0x000027ee      ba04000000     mov edx, 4
0x000027f3      be01000000     mov esi, 1
0x000027f8      e8d3efffff     call sym.imp.fwrite_unlocked
0x000027fd      488b05f4b820.  mov rax, qword [obj.digest_hex_bytes]   ; [0x20e0f8:8]=0
0x00002804      bd01000000     mov ebp, 1
0x00002809      48d1e8         shr rax, 1
0x0000280c      0f8593fcffff   jne 0x24a5
0x00002812      e9c4fcffff     jmp 0x24db
0x00002817      488b3d8ab820.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x0000281e      488b4728       mov rax, qword [rdi + 0x28]
0x00002822      483b4730       cmp rax, qword [rdi + 0x30]
0x00002826      0f8347010000   jae 0x2973
0x0000282c      488d5001       lea rdx, [rax + 1]
0x00002830      bd01000000     mov ebp, 1
0x00002835      48895728       mov qword [rdi + 0x28], rdx
0x00002839      c6005c         mov byte [rax], 0x5c                    ; '\'
                                                                       ; [0x5c:1]=0
0x0000283c      488b05b5b820.  mov rax, qword [obj.digest_hex_bytes]   ; [0x20e0f8:8]=0
0x00002843      48d1e8         shr rax, 1
0x00002846      0f8559fcffff   jne 0x24a5
0x0000284c      e991fcffff     jmp 0x24e2
0x00002851      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00002856      be0a000000     mov esi, 0xa
0x0000285b      e860eeffff     call sym.imp.strchr
0x00002860      4885c0         test rax, rax
0x00002863      0f8516fcffff   jne 0x247f
0x00002869      e91efcffff     jmp 0x248c
0x0000286e      488b0d33b820.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x00002875      488d3d187e00.  lea rdi, str.SHA512                     ; 0xa694 ; "SHA512"
0x0000287c      ba06000000     mov edx, 6
0x00002881      be01000000     mov esi, 1
0x00002886      31ed           xor ebp, ebp
0x00002888      e843efffff     call sym.imp.fwrite_unlocked
0x0000288d      488b0d14b820.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x00002894      488d3d617f00.  lea rdi, [0x0000a7fc]                   ; " ("
0x0000289b      ba02000000     mov edx, 2
0x000028a0      be01000000     mov esi, 1
0x000028a5      e826efffff     call sym.imp.fwrite_unlocked
0x000028aa      488b7c2420     mov rdi, qword [rsp + 0x20]
0x000028af      31f6           xor esi, esi
0x000028b1      e87a030000     call sym.print_filename
0x000028b6      488b0debb720.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x000028bd      488d3d3b7f00.  lea rdi, str.                           ; 0xa7ff ; ") = "
0x000028c4      ba04000000     mov edx, 4
0x000028c9      be01000000     mov esi, 1
0x000028ce      e8fdeeffff     call sym.imp.fwrite_unlocked
0x000028d3      488b051eb820.  mov rax, qword [obj.digest_hex_bytes]   ; [0x20e0f8:8]=0
0x000028da      48d1e8         shr rax, 1
0x000028dd      0f85c2fbffff   jne 0x24a5
0x000028e3      e94bfcffff     jmp 0x2533
0x000028e8      31f6           xor esi, esi
0x000028ea      4889df         mov rdi, rbx
0x000028ed      e83e030000     call sym.print_filename
0x000028f2      e936faffff     jmp 0x232d
0x000028f7      488b542420     mov rdx, qword [rsp + 0x20]
0x000028fc      31ff           xor edi, edi
0x000028fe      be03000000     mov esi, 3
0x00002903      e8c86c0000     call sym.quotearg_n_style_colon
0x00002908      488d35cf7e00.  lea rsi, str.s:_no_file_was_verified    ; 0xa7de ; "%s: no file was verified"
0x0000290f      4889c5         mov rbp, rax
0x00002912      31ff           xor edi, edi
0x00002914      ba05000000     mov edx, 5
0x00002919      e842edffff     call sym.imp.dcgettext
0x0000291e      4889e9         mov rcx, rbp
0x00002921      4889c2         mov rdx, rax
0x00002924      31f6           xor esi, esi
0x00002926      31ff           xor edi, edi
0x00002928      31c0           xor eax, eax
0x0000292a      e801efffff     call sym.imp.error
0x0000292f      e98af8ffff     jmp 0x21be
0x00002934      c644247901     mov byte [rsp + 0x79], 1
0x00002939      e945faffff     jmp 0x2383
0x0000293e      4c89d6         mov rsi, r10
0x00002941      4889df         mov rdi, rbx
0x00002944      e807020000     call sym.filename_unescape
0x00002949      4885c0         test rax, rax
0x0000294c      0f8544fdffff   jne 0x2696
0x00002952      e9edf4ffff     jmp 0x1e44
0x00002957      0fb6f2         movzx esi, dl
0x0000295a      e871edffff     call sym.imp.__overflow
0x0000295f      e909faffff     jmp 0x236d
0x00002964      be5c000000     mov esi, 0x5c                           ; '\'
0x00002969      e862edffff     call sym.imp.__overflow
0x0000296e      e9e1f6ffff     jmp 0x2054
0x00002973      be5c000000     mov esi, 0x5c                           ; '\'
0x00002978      e853edffff     call sym.imp.__overflow
0x0000297d      e97bfeffff     jmp 0x27fd
0x00002982      8b74247c       mov esi, dword [rsp + 0x7c]
0x00002986      e845edffff     call sym.imp.__overflow
0x0000298b      e997fbffff     jmp 0x2527
0x00002990      be20000000     mov esi, 0x20                           ; "@"
0x00002995      e836edffff     call sym.imp.__overflow
0x0000299a      e963fbffff     jmp 0x2502
0x0000299f      be5c000000     mov esi, 0x5c                           ; '\'
0x000029a4      48894c2460     mov qword [rsp + 0x60], rcx
0x000029a9      4889542430     mov qword [rsp + 0x30], rdx
0x000029ae      e81dedffff     call sym.imp.__overflow
0x000029b3      488b542430     mov rdx, qword [rsp + 0x30]
0x000029b8      488b4c2460     mov rcx, qword [rsp + 0x60]
0x000029bd      e941f9ffff     jmp 0x2303
0x000029c2      be5c000000     mov esi, 0x5c                           ; '\'
0x000029c7      e804edffff     call sym.imp.__overflow
0x000029cc      e9c6fdffff     jmp 0x2797
0x000029d1      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x000029d6      0f85f4f1ffff   jne 0x1bd0
0x000029dc      31ff           xor edi, edi
0x000029de      e8bd040000     call sym.usage
0x000029e3      e8a8ecffff     call sym.imp.__stack_chk_fail
0x000029e8      803d05b72000.  cmp byte [obj.status_only], 0           ; [0x20e0f4:1]=0
0x000029ef      0f84a2f1ffff   je 0x1b97
0x000029f5      807c242b00     cmp byte [rsp + 0x2b], 0
0x000029fa      0f85adfbffff   jne 0x25ad
0x00002a00      ba05000000     mov edx, 5
0x00002a05      488d35948500.  lea rsi, str.the___status_option_is_meaningful_only_when_verifying_checksums ; 0xafa0 ; "the --status option is meaningful only when verifying checksums"
0x00002a0c      e9aaf1ffff     jmp 0x1bbb
0x00002a11      44884c247a     mov byte [rsp + 0x7a], r9b
0x00002a16      e9c8f8ffff     jmp 0x22e3
0x00002a1b      ba05000000     mov edx, 5
0x00002a20      488d35398400.  lea rsi, str.tag_does_not_support___text_mode ; 0xae60 ; "--tag does not support --text mode"
0x00002a27      e98ff1ffff     jmp 0x1bbb
0x00002a2c      ba05000000     mov edx, 5
0x00002a31      488d35208500.  lea rsi, str.the___ignore_missing_option_is_meaningful_only_when_verifying_checksums ; 0xaf58 ; "the --ignore-missing option is meaningful only when verifying checksums"
0x00002a38      e97ef1ffff     jmp 0x1bbb
0x00002a3d      0f1f00         nop dword [rax]
;-- entry0:
;-- _start:
;-- rip:
0x00002a40      31ed           xor ebp, ebp
0x00002a42      4989d1         mov r9, rdx
0x00002a45      5e             pop rsi
0x00002a46      4889e2         mov rdx, rsp
0x00002a49      4883e4f0       and rsp, 0xfffffffffffffff0
0x00002a4d      50             push rax
0x00002a4e      54             push rsp
0x00002a4f      4c8d05ea7b00.  lea r8, sym.__libc_csu_fini             ; 0xa640
0x00002a56      488d0d737b00.  lea rcx, sym.__libc_csu_init            ; 0xa5d0 ; "AWAVI\x89\xd7AUATL\x8d%.4 "
0x00002a5d      488d3d9ceeff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1900 ; "AWAVAUATA\x89\xfcUSH\x89\xf3\xbd\xff\xff\xff\xffH\x81\xecH\x01"
0x00002a64      ff155eb52000   call qword [reloc.__libc_start_main]    ; [0x20dfc8:8]=0
0x00002a6a      f4             hlt
0x00002a6b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00002a70      488d3d29b620.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20e0a0
0x00002a77      55             push rbp
0x00002a78      488d0521b620.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20e0a0
0x00002a7f      4839f8         cmp rax, rdi
0x00002a82      4889e5         mov rbp, rsp
0x00002a85      7419           je 0x2aa0
0x00002a87      488b0532b520.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x20dfc0:8]=0
0x00002a8e      4885c0         test rax, rax
0x00002a91      740d           je 0x2aa0
0x00002a93      5d             pop rbp
0x00002a94      ffe0           jmp rax
0x00002a96      662e0f1f8400.  nop word cs:[rax + rax]
0x00002aa0      5d             pop rbp
0x00002aa1      c3             ret
0x00002aa2      0f1f4000       nop dword [rax]
0x00002aa6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00002ab0      488d3de9b520.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20e0a0
0x00002ab7      488d35e2b520.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20e0a0
0x00002abe      55             push rbp
0x00002abf      4829fe         sub rsi, rdi
0x00002ac2      4889e5         mov rbp, rsp
0x00002ac5      48c1fe03       sar rsi, 3
0x00002ac9      4889f0         mov rax, rsi
0x00002acc      48c1e83f       shr rax, 0x3f
0x00002ad0      4801c6         add rsi, rax
0x00002ad3      48d1fe         sar rsi, 1
0x00002ad6      7418           je 0x2af0
0x00002ad8      488b05f9b420.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x20dfd8:8]=0
0x00002adf      4885c0         test rax, rax
0x00002ae2      740c           je 0x2af0
0x00002ae4      5d             pop rbp
0x00002ae5      ffe0           jmp rax
0x00002ae7      660f1f840000.  nop word [rax + rax]
0x00002af0      5d             pop rbp
0x00002af1      c3             ret
0x00002af2      0f1f4000       nop dword [rax]
0x00002af6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00002b00      803de1b52000.  cmp byte [obj.completed.7697], 0        ; [0x20e0e8:1]=0
0x00002b07      752f           jne 0x2b38
0x00002b09      48833dcfb420.  cmp qword [reloc.__cxa_finalize], 0     ; [0x20dfe0:8]=0
0x00002b11      55             push rbp
0x00002b12      4889e5         mov rbp, rsp
0x00002b15      740c           je 0x2b23
0x00002b17      488b3deab420.  mov rdi, qword [obj.__dso_handle]       ; [0x20e008:8]=0x20e008 obj.__dso_handle
0x00002b1e      e8cdedffff     call sym..plt.got
0x00002b23      e848ffffff     call sym.deregister_tm_clones
0x00002b28      c605b9b52000.  mov byte [obj.completed.7697], 1        ; [0x20e0e8:1]=0
0x00002b2f      5d             pop rbp
0x00002b30      c3             ret
0x00002b31      0f1f80000000.  nop dword [rax]
0x00002b38      f3c3           ret
0x00002b3a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00002b40      55             push rbp
0x00002b41      4889e5         mov rbp, rsp
0x00002b44      5d             pop rbp
0x00002b45      e966ffffff     jmp sym.register_tm_clones
0x00002b4a      660f1f440000   nop word [rax + rax]
;-- filename_unescape:
0x00002b50      31d2           xor edx, edx                            ; /src:310
0x00002b52      4885f6         test rsi, rsi
0x00002b55      488d4f01       lea rcx, [rdi + 1]
0x00002b59      4c8d46ff       lea r8, [rsi - 1]                       ; /src:318
0x00002b5d      7458           je 0x2bb7                               ; /src:313
0x00002b5f      0fb60417       movzx eax, byte [rdi + rdx]             ; /src:315
0x00002b63      84c0           test al, al
0x00002b65      7429           je 0x2b90
0x00002b67      3c5c           cmp al, 0x5c
0x00002b69      752d           jne 0x2b98
0x00002b6b      4939d0         cmp r8, rdx                             ; /src:318
0x00002b6e      7420           je 0x2b90
0x00002b70      4883c201       add rdx, 1                              ; /src:323
0x00002b74      0fb60417       movzx eax, byte [rdi + rdx]             ; /src:324
0x00002b78      3c5c           cmp al, 0x5c
0x00002b7a      7444           je 0x2bc0
0x00002b7c      3c6e           cmp al, 0x6e
0x00002b7e      7510           jne 0x2b90
0x00002b80      4989c9         mov r9, rcx                             ; /src:327
0x00002b83      c641ff0a       mov byte [rcx - 1], 0xa
0x00002b87      eb15           jmp 0x2b9e                              ; /src:328
0x00002b89      0f1f80000000.  nop dword [rax]
0x00002b90      31c0           xor eax, eax                            ; /src:340
0x00002b92      c3             ret                                     ; /src:351
0x00002b93      0f1f440000     nop dword [rax + rax]
0x00002b98      4989c9         mov r9, rcx                             ; /src:343
0x00002b9b      8841ff         mov byte [rcx - 1], al
0x00002b9e      4883c201       add rdx, 1                              ; /src:313
0x00002ba2      4883c101       add rcx, 1
0x00002ba6      4839d6         cmp rsi, rdx
0x00002ba9      77b4           ja 0x2b5f
0x00002bab      4801fe         add rsi, rdi                            ; /src:347
0x00002bae      4939f1         cmp r9, rsi
0x00002bb1      7304           jae 0x2bb7
0x00002bb3      41c60100       mov byte [r9], 0                        ; /src:348
0x00002bb7      4889f8         mov rax, rdi                            ; /src:350
0x00002bba      c3             ret
0x00002bbb      0f1f440000     nop dword [rax + rax]
0x00002bc0      4989c9         mov r9, rcx                             ; /src:330
0x00002bc3      c641ff5c       mov byte [rcx - 1], 0x5c                ; '\'
                                                                       ; [0x5c:1]=0
0x00002bc7      ebd5           jmp 0x2b9e                              ; /src:331
0x00002bc9      0f1f80000000.  nop dword [rax]
;-- hex_digits:
0x00002bd0      55             push rbp                                ; /src:357
0x00002bd1      53             push rbx
0x00002bd2      4883ec08       sub rsp, 8
0x00002bd6      488b2d1bb520.  mov rbp, qword [obj.digest_hex_bytes]   ; /src:358 ; [0x20e0f8:8]=0
0x00002bdd      4885ed         test rbp, rbp
0x00002be0      743e           je 0x2c20
0x00002be2      4889fb         mov rbx, rdi
0x00002be5      e8f6ecffff     call sym.imp.__ctype_b_loc              ; /src:360
0x00002bea      488b08         mov rcx, qword [rax]
0x00002bed      4889d8         mov rax, rbx
0x00002bf0      eb13           jmp 0x2c05
0x00002bf2      660f1f440000   nop word [rax + rax]
0x00002bf8      4883c001       add rax, 1                              ; /src:362
0x00002bfc      89c2           mov edx, eax                            ; /src:358
0x00002bfe      29da           sub edx, ebx
0x00002c00      4839ea         cmp rdx, rbp
0x00002c03      731e           jae 0x2c23
0x00002c05      0fb610         movzx edx, byte [rax]                   ; /src:360
0x00002c08      f644510110     test byte [rcx + rdx*2 + 1], 0x10
0x00002c0d      75e9           jne 0x2bf8
0x00002c0f      4883c408       add rsp, 8                              ; /src:365
0x00002c13      31c0           xor eax, eax                            ; /src:361
0x00002c15      5b             pop rbx                                 ; /src:365
0x00002c16      5d             pop rbp
0x00002c17      c3             ret
0x00002c18      0f1f84000000.  nop dword [rax + rax]
0x00002c20      4889f8         mov rax, rdi                            ; /src:358
0x00002c23      803800         cmp byte [rax], 0                       ; /src:364
0x00002c26      0f94c0         sete al
0x00002c29      4883c408       add rsp, 8                              ; /src:365
0x00002c2d      5b             pop rbx
0x00002c2e      5d             pop rbp
0x00002c2f      c3             ret
;-- print_filename:
0x00002c30      55             push rbp                                ; /src:551
0x00002c31      53             push rbx
0x00002c32      4889fb         mov rbx, rdi
0x00002c35      4883ec08       sub rsp, 8
0x00002c39      4084f6         test sil, sil                           ; /src:552
0x00002c3c      0f848e000000   je 0x2cd0
0x00002c42      0fb637         movzx esi, byte [rdi]                   ; /src:558
0x00002c45      488d2d387a00.  lea rbp, [0x0000a684]                   ; /src:563 ; "\n"
0x00002c4c      4084f6         test sil, sil                           ; /src:558
0x00002c4f      7529           jne 0x2c7a
0x00002c51      eb5b           jmp 0x2cae
0x00002c53      0f1f440000     nop dword [rax + rax]
0x00002c58      488d3d287a00.  lea rdi, [0x0000a687]                   ; /src:567 ; "\\"
0x00002c5f      ba02000000     mov edx, 2
0x00002c64      be01000000     mov esi, 1
0x00002c69      e862ebffff     call sym.imp.fwrite_unlocked
0x00002c6e      4883c301       add rbx, 1                              ; /src:574
0x00002c72      0fb633         movzx esi, byte [rbx]                   ; /src:558
0x00002c75      4084f6         test sil, sil
0x00002c78      7434           je 0x2cae
0x00002c7a      4080fe0a       cmp sil, 0xa                            ; /src:560
0x00002c7e      488b0d23b420.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x00002c85      7431           je 0x2cb8
0x00002c87      4080fe5c       cmp sil, 0x5c
0x00002c8b      74cb           je 0x2c58
0x00002c8d      488b4128       mov rax, qword [rcx + 0x28]             ; /coreutils-8.31/lib:107
0x00002c91      483b4130       cmp rax, qword [rcx + 0x30]
0x00002c95      7351           jae 0x2ce8
0x00002c97      488d5001       lea rdx, [rax + 1]
0x00002c9b      4883c301       add rbx, 1                              ; /src:574
0x00002c9f      48895128       mov qword [rcx + 0x28], rdx             ; /coreutils-8.31/lib:107
0x00002ca3      408830         mov byte [rax], sil
0x00002ca6      0fb633         movzx esi, byte [rbx]                   ; /src:558
0x00002ca9      4084f6         test sil, sil
0x00002cac      75cc           jne 0x2c7a
0x00002cae      4883c408       add rsp, 8                              ; /src:576
0x00002cb2      5b             pop rbx
0x00002cb3      5d             pop rbp
0x00002cb4      c3             ret
0x00002cb5      0f1f00         nop dword [rax]
0x00002cb8      ba02000000     mov edx, 2                              ; /src:563
0x00002cbd      be01000000     mov esi, 1
0x00002cc2      4889ef         mov rdi, rbp
0x00002cc5      e806ebffff     call sym.imp.fwrite_unlocked
0x00002cca      eba2           jmp 0x2c6e
0x00002ccc      0f1f4000       nop dword [rax]
0x00002cd0      488b35d1b320.  mov rsi, qword [obj.stdout]             ; /src:554 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x00002cd7      4883c408       add rsp, 8                              ; /src:576
0x00002cdb      5b             pop rbx
0x00002cdc      5d             pop rbp
0x00002cdd      e95eeaffff     jmp sym.imp.fputs_unlocked              ; /src:554
0x00002ce2      660f1f440000   nop word [rax + rax]
0x00002ce8      4889cf         mov rdi, rcx                            ; /coreutils-8.31/lib:107
0x00002ceb      e8e0e9ffff     call sym.imp.__overflow
0x00002cf0      e979ffffff     jmp 0x2c6e
0x00002cf5      90             nop
0x00002cf6      662e0f1f8400.  nop word cs:[rax + rax]
;-- digest_file.isra.1:
0x00002d00      4155           push r13                                ; /src:591
0x00002d02      4154           push r12
0x00002d04      b902000000     mov ecx, 2                              ; /src:596
0x00002d09      55             push rbp                                ; /src:591
0x00002d0a      53             push rbx
0x00002d0b      4889fd         mov rbp, rdi
0x00002d0e      488d3d0d8600.  lea rdi, [0x0000b322]                   ; /src:596 ; "-"
0x00002d15      4989f4         mov r12, rsi                            ; /src:591
0x00002d18      4889ee         mov rsi, rbp                            ; /src:596
0x00002d1b      4883ec08       sub rsp, 8                              ; /src:591
0x00002d1f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]   ; /src:596
0x00002d21      c60200         mov byte [rdx], 0                       ; /src:598
0x00002d24      0f97c0         seta al                                 ; /src:596
0x00002d27      1c00           sbb al, 0
0x00002d29      84c0           test al, al                             ; /src:600
0x00002d2b      0f858f000000   jne 0x2dc0
0x00002d31      488b1d78b320.  mov rbx, qword [obj.stdin]              ; /src:603 ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20e0b0:8]=0
0x00002d38      be02000000     mov esi, 2                              ; /src:627
0x00002d3d      c605c4b32000.  mov byte [obj.have_read_stdin], 1       ; /src:602 ; [0x20e108:1]=0
0x00002d44      4889df         mov rdi, rbx                            ; /src:627
0x00002d47      e8744c0000     call sym.fadvise
0x00002d4c      4c89e6         mov rsi, r12                            ; /src:632
0x00002d4f      4889df         mov rdi, rbx
0x00002d52      e8194c0000     call sym.sha512_stream
0x00002d57      85c0           test eax, eax                           ; /src:634
0x00002d59      7515           jne 0x2d70
0x00002d5b      41bc01000000   mov r12d, 1                             ; /src:648
0x00002d61      4883c408       add rsp, 8                              ; /src:649
0x00002d65      4489e0         mov eax, r12d
0x00002d68      5b             pop rbx
0x00002d69      5d             pop rbp
0x00002d6a      415c           pop r12
0x00002d6c      415d           pop r13
0x00002d6e      c3             ret
0x00002d6f      90             nop
0x00002d70      4889ea         mov rdx, rbp                            ; /src:636
0x00002d73      31ff           xor edi, edi
0x00002d75      be03000000     mov esi, 3
0x00002d7a      e851680000     call sym.quotearg_n_style_colon
0x00002d7f      4889c5         mov rbp, rax
0x00002d82      4531e4         xor r12d, r12d                          ; /src:639
0x00002d85      e846e8ffff     call sym.imp.__errno_location           ; /src:636
0x00002d8a      8b30           mov esi, dword [rax]
0x00002d8c      488d15c28400.  lea rdx, [0x0000b255]                   ; "%s"
0x00002d93      31ff           xor edi, edi
0x00002d95      31c0           xor eax, eax
0x00002d97      4889e9         mov rcx, rbp
0x00002d9a      e891eaffff     call sym.imp.error
0x00002d9f      48391d0ab320.  cmp qword [obj.stdin], rbx              ; /src:637 ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20e0b0:8]=0
0x00002da6      74b9           je 0x2d61
0x00002da8      4889df         mov rdi, rbx                            ; /src:638
0x00002dab      e8d0720000     call sym.rpl_fclose
0x00002db0      4883c408       add rsp, 8                              ; /src:649
0x00002db4      4489e0         mov eax, r12d
0x00002db7      5b             pop rbx
0x00002db8      5d             pop rbp
0x00002db9      415c           pop r12
0x00002dbb      415d           pop r13
0x00002dbd      c3             ret
0x00002dbe      6690           nop
0x00002dc0      488d359b7900.  lea rsi, [0x0000a762]                   ; /src:614 ; "r"
0x00002dc7      4889ef         mov rdi, rbp
0x00002dca      4989d5         mov r13, rdx
0x00002dcd      e81e4c0000     call sym.fopen_safer
0x00002dd2      4885c0         test rax, rax                           ; /src:615
0x00002dd5      4889c3         mov rbx, rax                            ; /src:614
0x00002dd8      7466           je 0x2e40                               ; /src:615
0x00002dda      4889c7         mov rdi, rax                            ; /src:627
0x00002ddd      be02000000     mov esi, 2
0x00002de2      e8d94b0000     call sym.fadvise
0x00002de7      4c89e6         mov rsi, r12                            ; /src:632
0x00002dea      4889df         mov rdi, rbx
0x00002ded      e87e4b0000     call sym.sha512_stream
0x00002df2      85c0           test eax, eax                           ; /src:634
0x00002df4      0f8576ffffff   jne 0x2d70
0x00002dfa      4889df         mov rdi, rbx                            ; /src:642
0x00002dfd      e87e720000     call sym.rpl_fclose
0x00002e02      85c0           test eax, eax
0x00002e04      0f8451ffffff   je 0x2d5b
0x00002e0a      4889ea         mov rdx, rbp                            ; /src:644
0x00002e0d      be03000000     mov esi, 3
0x00002e12      31ff           xor edi, edi
0x00002e14      e8b7670000     call sym.quotearg_n_style_colon
0x00002e19      4889c3         mov rbx, rax
0x00002e1c      4531e4         xor r12d, r12d                          ; /src:645
0x00002e1f      e8ace7ffff     call sym.imp.__errno_location           ; /src:644
0x00002e24      8b30           mov esi, dword [rax]
0x00002e26      488d15288400.  lea rdx, [0x0000b255]                   ; "%s"
0x00002e2d      4889d9         mov rcx, rbx
0x00002e30      31ff           xor edi, edi
0x00002e32      31c0           xor eax, eax
0x00002e34      e8f7e9ffff     call sym.imp.error
0x00002e39      e923ffffff     jmp 0x2d61
0x00002e3e      6690           nop
0x00002e40      440fb625aab2.  movzx r12d, byte [obj.ignore_missing]   ; /src:617 ; [0x20e0f2:1]=0
0x00002e48      e883e7ffff     call sym.imp.__errno_location
0x00002e4d      4889c3         mov rbx, rax
0x00002e50      4584e4         test r12b, r12b
0x00002e53      7405           je 0x2e5a
0x00002e55      833802         cmp dword [rax], 2
0x00002e58      7436           je 0x2e90
0x00002e5a      4889ea         mov rdx, rbp                            ; /src:622
0x00002e5d      be03000000     mov esi, 3
0x00002e62      31ff           xor edi, edi
0x00002e64      e867670000     call sym.quotearg_n_style_colon
0x00002e69      8b33           mov esi, dword [rbx]
0x00002e6b      488d15e38300.  lea rdx, [0x0000b255]                   ; "%s"
0x00002e72      4889c1         mov rcx, rax
0x00002e75      31ff           xor edi, edi
0x00002e77      31c0           xor eax, eax
0x00002e79      4531e4         xor r12d, r12d                          ; /src:623
0x00002e7c      e8afe9ffff     call sym.imp.error                      ; /src:622
0x00002e81      e9dbfeffff     jmp 0x2d61
0x00002e86      662e0f1f8400.  nop word cs:[rax + rax]
0x00002e90      41c6450001     mov byte [r13], 1                       ; /src:619
0x00002e95      e9c7feffff     jmp 0x2d61
0x00002e9a      660f1f440000   nop word [rax + rax]
;-- usage:
0x00002ea0      4155           push r13                                ; /src:224
0x00002ea2      4154           push r12
0x00002ea4      ba05000000     mov edx, 5                              ; /src:226
0x00002ea9      55             push rbp                                ; /src:224
0x00002eaa      53             push rbx
0x00002eab      89fd           mov ebp, edi
0x00002ead      4881ec880000.  sub rsp, 0x88
0x00002eb4      488b1d65b220.  mov rbx, qword [obj.program_name]       ; [0x20e120:8]=0
0x00002ebb      64488b042528.  mov rax, qword fs:[0x28]
0x00002ec4      4889442478     mov qword [rsp + 0x78], rax
0x00002ec9      31c0           xor eax, eax
0x00002ecb      85ff           test edi, edi                           ; /src:225
0x00002ecd      742e           je 0x2efd
0x00002ecf      488d35827900.  lea rsi, str.Try___s___help__for_more_information. ; /src:226 ; 0xa858 ; "Try '%s --help' for more information.\n"
0x00002ed6      31ff           xor edi, edi
0x00002ed8      e883e7ffff     call sym.imp.dcgettext
0x00002edd      488b3dfcb120.  mov rdi, qword [obj.stderr]             ; .//ib:97 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e0e0:8]=0
0x00002ee4      4889c2         mov rdx, rax
0x00002ee7      4889d9         mov rcx, rbx
0x00002eea      be01000000     mov esi, 1
0x00002eef      31c0           xor eax, eax
0x00002ef1      e8aae9ffff     call sym.imp.__fprintf_chk
0x00002ef6      89ef           mov edi, ebp                            ; /src:295
0x00002ef8      e883e9ffff     call sym.imp.exit
0x00002efd      488d357c7900.  lea rsi, str.Usage:__s__OPTION_...__FILE_...__Print_or_check__s___d_bit__checksums. ; /src:229 ; 0xa880 ; "Usage: %s [OPTION]... [FILE]...\nPrint or check %s (%d-bit) checksums.\n"
0x00002f04      31ff           xor edi, edi
0x00002f06      e855e7ffff     call sym.imp.dcgettext
0x00002f0b      488d0d827700.  lea rcx, str.SHA512                     ; .//ib:104 ; 0xa694 ; "SHA512"
0x00002f12      41b800020000   mov r8d, 0x200
0x00002f18      4889da         mov rdx, rbx
0x00002f1b      4889c6         mov rsi, rax
0x00002f1e      bf01000000     mov edi, 1
0x00002f23      31c0           xor eax, eax
0x00002f25      e8e6e8ffff     call sym.imp.__printf_chk
0x00002f2a      488b1d77b120.  mov rbx, qword [obj.stdout]             ; ../coreutils-8.31/src/5sum.c:580 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x00002f31      488d35907900.  lea rsi, str.With_no_FILE__or_when_FILE_is____read_standard_input. ; 0xa8c8 ; "\nWith no FILE, or when FILE is -, read standard input.\n"
0x00002f38      ba05000000     mov edx, 5
0x00002f3d      31ff           xor edi, edi
0x00002f3f      e81ce7ffff     call sym.imp.dcgettext
0x00002f44      4889de         mov rsi, rbx
0x00002f47      4889c7         mov rdi, rax
0x00002f4a      e8f1e7ffff     call sym.imp.fputs_unlocked
0x00002f4f      488b1d52b120.  mov rbx, qword [obj.stdout]             ; /src:244 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x00002f56      488d35a37900.  lea rsi, str.b____binary_________read_in_binary_mode ; 0xa900 ; "\n  -b, --binary         read in binary mode\n"
0x00002f5d      ba05000000     mov edx, 5
0x00002f62      31ff           xor edi, edi
0x00002f64      e8f7e6ffff     call sym.imp.dcgettext
0x00002f69      4889de         mov rsi, rbx
0x00002f6c      4889c7         mov rdi, rax
0x00002f6f      e8cce7ffff     call sym.imp.fputs_unlocked
0x00002f74      488d35b57900.  lea rsi, str.c____check__________read__s_sums_from_the_FILEs_and_check_them ; /src:249 ; 0xa930 ; "  -c, --check          read %s sums from the FILEs and check them\n"
0x00002f7b      31ff           xor edi, edi
0x00002f7d      ba05000000     mov edx, 5
0x00002f82      e8d9e6ffff     call sym.imp.dcgettext
0x00002f87      488d15067700.  lea rdx, str.SHA512                     ; .//ib:104 ; 0xa694 ; "SHA512"
0x00002f8e      4889c6         mov rsi, rax
0x00002f91      bf01000000     mov edi, 1
0x00002f96      31c0           xor eax, eax
0x00002f98      e873e8ffff     call sym.imp.__printf_chk
0x00002f9d      488b1d04b120.  mov rbx, qword [obj.stdout]             ; /src:258 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x00002fa4      488d35cd7900.  lea rsi, str.tag____________create_a_BSD_style_checksum ; 0xa978 ; "      --tag            create a BSD-style checksum\n"
0x00002fab      ba05000000     mov edx, 5
0x00002fb0      31ff           xor edi, edi
0x00002fb2      e8a9e6ffff     call sym.imp.dcgettext
0x00002fb7      4889de         mov rsi, rbx
0x00002fba      4889c7         mov rdi, rax
0x00002fbd      e87ee7ffff     call sym.imp.fputs_unlocked
0x00002fc2      488b1ddfb020.  mov rbx, qword [obj.stdout]             ; /src:266 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x00002fc9      488d35e07900.  lea rsi, str.t____text___________read_in_text_mode__default ; 0xa9b0 ; "  -t, --text           read in text mode (default)\n"
0x00002fd0      ba05000000     mov edx, 5
0x00002fd5      31ff           xor edi, edi
0x00002fd7      e884e6ffff     call sym.imp.dcgettext
0x00002fdc      4889de         mov rsi, rbx
0x00002fdf      4889c7         mov rdi, rax
0x00002fe2      e859e7ffff     call sym.imp.fputs_unlocked
0x00002fe7      488b1dbab020.  mov rbx, qword [obj.stdout]             ; /src:269 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x00002fee      488d35f37900.  lea rsi, str.z____zero___________end_each_output_line_with_NUL__not_newline__________________________and_disable_file_name_escaping ; 0xa9e8 ; "  -z, --zero           end each output line with NUL, not newline,\n                       and disable file name escaping\n"
0x00002ff5      ba05000000     mov edx, 5
0x00002ffa      31ff           xor edi, edi
0x00002ffc      e85fe6ffff     call sym.imp.dcgettext
0x00003001      4889de         mov rsi, rbx
0x00003004      4889c7         mov rdi, rax
0x00003007      e834e7ffff     call sym.imp.fputs_unlocked
0x0000300c      488b1d95b020.  mov rbx, qword [obj.stdout]             ; /src:273 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x00003013      488d354e7a00.  lea rsi, str.The_following_five_options_are_useful_only_when_verifying_checksums:__________ignore_missing__don_t_fail_or_report_status_for_missing_files__________quiet__________don_t_print_OK_for_each_successfully_verified_file__________status_________don_t_output_anything__status_code_shows_success__________strict_________exit_non_zero_for_improperly_formatted_checksum_lines_____w____warn___________warn_about_improperly_formatted_checksum_lines ; 0xaa68 ; "\nThe following five options are useful only when verifying checksums:\n      --ignore-missing  don't fail or report status for missing files\n      --quiet          don't print OK for each successfully verified file\n      --status         don't output anything, status code shows success\n      --strict         exit non-zero for improperly formatted checksum lines\n  -w, --warn           warn about improperly formatted checksum lines\n\n"
0x0000301a      ba05000000     mov edx, 5
0x0000301f      31ff           xor edi, edi
0x00003021      e83ae6ffff     call sym.imp.dcgettext
0x00003026      4889de         mov rsi, rbx
0x00003029      4889c7         mov rdi, rax
0x0000302c      e80fe7ffff     call sym.imp.fputs_unlocked
0x00003031      488b1d70b020.  mov rbx, qword [obj.stdout]             ; /src:283 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x00003038      488d35e17b00.  lea rsi, str.help_____display_this_help_and_exit ; 0xac20 ; "      --help     display this help and exit\n"
0x0000303f      ba05000000     mov edx, 5
0x00003044      31ff           xor edi, edi
0x00003046      e815e6ffff     call sym.imp.dcgettext
0x0000304b      4889de         mov rsi, rbx
0x0000304e      4889c7         mov rdi, rax
0x00003051      e8eae6ffff     call sym.imp.fputs_unlocked
0x00003056      488b1d4bb020.  mov rbx, qword [obj.stdout]             ; /src:284 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x0000305d      488d35ec7b00.  lea rsi, str.version__output_version_information_and_exit ; 0xac50 ; "      --version  output version information and exit\n"
0x00003064      ba05000000     mov edx, 5
0x00003069      31ff           xor edi, edi
0x0000306b      e8f0e5ffff     call sym.imp.dcgettext
0x00003070      4889de         mov rsi, rbx
0x00003073      4889c7         mov rdi, rax
0x00003076      488d1d0d7600.  lea rbx, str.sha512sum                  ; ../coreutils-8.31/src/5sum.c:633 ; 0xa68a ; "sha512sum"
0x0000307d      e8bee6ffff     call sym.imp.fputs_unlocked             ; /src:284
0x00003082      488d35ff7b00.  lea rsi, str.The_sums_are_computed_as_described_in__s.__When_checking__the_input__should_be_a_former_output_of_this_program.__The_default_mode_is_to_print_a__line_with_checksum__a_space__a_character_indicating_input_mode______for_binary_______for_text_or_where_binary_is_insignificant___and_name_for_each_FILE. ; /src:285 ; 0xac88 ; "\nThe sums are computed as described in %s.  When checking, the input\nshould be a former output of this program.  The default mode is to print a\nline with checksum, a space, a character indicating input mode ('*' for binary,\n' ' for text or where binary is insignificant), and name for each FILE.\n"
0x00003089      31ff           xor edi, edi
0x0000308b      ba05000000     mov edx, 5
0x00003090      e8cbe5ffff     call sym.imp.dcgettext
0x00003095      488d15ff7500.  lea rdx, str.FIPS_180_2                 ; .//ib:104 ; 0xa69b ; "FIPS-180-2"
0x0000309c      4889c6         mov rsi, rax
0x0000309f      bf01000000     mov edi, 1
0x000030a4      31c0           xor eax, eax
0x000030a6      e865e7ffff     call sym.imp.__printf_chk
0x000030ab      488d05f47500.  lea rax, [0x0000a6a6]                   ; ../coreutils-8.31/src/5sum.c:633 ; "["
0x000030b2      488d0d2e7600.  lea rcx, str.sha256sum                  ; 0xa6e7 ; "sha256sum"
0x000030b9      48895c2450     mov qword [rsp + 0x50], rbx
0x000030be      48c744246000.  mov qword [rsp + 0x60], 0
0x000030c7      48c744246800.  mov qword [rsp + 0x68], 0
0x000030d0      4889e2         mov rdx, rsp                            ; ../coreutils-8.31/src/5sum.c:644
0x000030d3      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/src/5sum.c:633
0x000030d7      488d05ca7500.  lea rax, str.test_invocation            ; 0xa6a8 ; "test invocation"
0x000030de      48894c2430     mov qword [rsp + 0x30], rcx
0x000030e3      488d0d077600.  lea rcx, str.sha384sum                  ; 0xa6f1 ; "sha384sum"
0x000030ea      4889442408     mov qword [rsp + 8], rax
0x000030ef      488d05207600.  lea rax, [0x0000a716]                   ; "coreutils"
0x000030f6      48894c2440     mov qword [rsp + 0x40], rcx
0x000030fb      4889442410     mov qword [rsp + 0x10], rax
0x00003100      488d05b17500.  lea rax, str.Multi_call_invocation      ; 0xa6b8 ; "Multi-call invocation"
0x00003107      4889442418     mov qword [rsp + 0x18], rax
0x0000310c      488d05bb7500.  lea rax, str.sha224sum                  ; 0xa6ce ; "sha224sum"
0x00003113      4889442420     mov qword [rsp + 0x20], rax
0x00003118      488d05b97500.  lea rax, str.sha2_utilities             ; 0xa6d8 ; "sha2 utilities"
0x0000311f      4889442428     mov qword [rsp + 0x28], rax
0x00003124      4889442438     mov qword [rsp + 0x38], rax
0x00003129      4889442448     mov qword [rsp + 0x48], rax
0x0000312e      4889442458     mov qword [rsp + 0x58], rax
0x00003133      0f1f440000     nop dword [rax + rax]
0x00003138      4883c210       add rdx, 0x10                           ; ../coreutils-8.31/src/5sum.c:647
0x0000313c      488b3a         mov rdi, qword [rdx]                    ; ../coreutils-8.31/src/5sum.c:646
0x0000313f      4885ff         test rdi, rdi
0x00003142      7413           je 0x3157
0x00003144      b90a000000     mov ecx, 0xa
0x00003149      4889de         mov rsi, rbx
0x0000314c      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000314e      0f97c0         seta al
0x00003151      1c00           sbb al, 0
0x00003153      84c0           test al, al
0x00003155      75e1           jne 0x3138
0x00003157      4c8b6208       mov r12, qword [rdx + 8]                ; ../coreutils-8.31/src/5sum.c:649
0x0000315b      31ff           xor edi, edi                            ; ../coreutils-8.31/src/5sum.c:652
0x0000315d      ba05000000     mov edx, 5
0x00003162      488d35927500.  lea rsi, str.s_online_help:___s         ; 0xa6fb ; "\n%s online help: <%s>\n"
0x00003169      4d85e4         test r12, r12                           ; ../coreutils-8.31/src/5sum.c:649
0x0000316c      0f84c1000000   je 0x3233
0x00003172      e8e9e4ffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/5sum.c:652
0x00003177      488d0d3a7c00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; .//ib:104 ; 0xadb8 ; "https://www.gnu.org/software/coreutils/"
0x0000317e      488d158d7500.  lea rdx, str.GNU_coreutils              ; 0xa712 ; "GNU coreutils"
0x00003185      4889c6         mov rsi, rax
0x00003188      bf01000000     mov edi, 1
0x0000318d      31c0           xor eax, eax
0x0000318f      e87ce6ffff     call sym.imp.__printf_chk
0x00003194      31f6           xor esi, esi                            ; ../coreutils-8.31/src/5sum.c:656
0x00003196      bf05000000     mov edi, 5
0x0000319b      e860e6ffff     call sym.imp.setlocale
0x000031a0      4885c0         test rax, rax                           ; ../coreutils-8.31/src/5sum.c:657
0x000031a3      741c           je 0x31c1
0x000031a5      488d35747500.  lea rsi, [0x0000a720]                   ; "en_"
0x000031ac      ba03000000     mov edx, 3
0x000031b1      4889c7         mov rdi, rax
0x000031b4      e827e4ffff     call sym.imp.strncmp
0x000031b9      85c0           test eax, eax
0x000031bb      0f8507010000   jne 0x32c8
0x000031c1      488d355c7500.  lea rsi, str.Full_documentation___s_s   ; ../coreutils-8.31/src/5sum.c:666 ; 0xa724 ; "Full documentation <%s%s>\n"
0x000031c8      31ff           xor edi, edi
0x000031ca      ba05000000     mov edx, 5
0x000031cf      e88ce4ffff     call sym.imp.dcgettext
0x000031d4      488d0daf7400.  lea rcx, str.sha512sum                  ; .//ib:104 ; 0xa68a ; "sha512sum"
0x000031db      488d15d67b00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0xadb8 ; "https://www.gnu.org/software/coreutils/"
0x000031e2      4889c6         mov rsi, rax
0x000031e5      bf01000000     mov edi, 1
0x000031ea      31c0           xor eax, eax
0x000031ec      e81fe6ffff     call sym.imp.__printf_chk
0x000031f1      4939dc         cmp r12, rbx                            ; ../coreutils-8.31/src/5sum.c:668
0x000031f4      488d0dc77400.  lea rcx, [0x0000a6c2]                   ; " invocation"
0x000031fb      488d1d5f8600.  lea rbx, [0x0000b861]
0x00003202      480f44d9       cmove rbx, rcx
0x00003206      488d351b7c00.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0xae28 ; "or available locally via: info '(coreutils) %s%s'\n"
0x0000320d      31ff           xor edi, edi
0x0000320f      ba05000000     mov edx, 5
0x00003214      e847e4ffff     call sym.imp.dcgettext
0x00003219      4889d9         mov rcx, rbx                            ; .//ib:104
0x0000321c      4889c6         mov rsi, rax
0x0000321f      4c89e2         mov rdx, r12
0x00003222      bf01000000     mov edi, 1
0x00003227      31c0           xor eax, eax
0x00003229      e8e2e5ffff     call sym.imp.__printf_chk
0x0000322e      e9c3fcffff     jmp 0x2ef6
0x00003233      e828e4ffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/5sum.c:652
0x00003238      488d0d797b00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; .//ib:104 ; 0xadb8 ; "https://www.gnu.org/software/coreutils/"
0x0000323f      488d15cc7400.  lea rdx, str.GNU_coreutils              ; 0xa712 ; "GNU coreutils"
0x00003246      4889c6         mov rsi, rax
0x00003249      bf01000000     mov edi, 1
0x0000324e      31c0           xor eax, eax
0x00003250      e8bbe5ffff     call sym.imp.__printf_chk
0x00003255      31f6           xor esi, esi                            ; ../coreutils-8.31/src/5sum.c:656
0x00003257      bf05000000     mov edi, 5
0x0000325c      e89fe5ffff     call sym.imp.setlocale
0x00003261      4885c0         test rax, rax                           ; ../coreutils-8.31/src/5sum.c:657
0x00003264      7418           je 0x327e
0x00003266      488d35b37400.  lea rsi, [0x0000a720]                   ; "en_"
0x0000326d      ba03000000     mov edx, 3
0x00003272      4889c7         mov rdi, rax
0x00003275      e866e3ffff     call sym.imp.strncmp
0x0000327a      85c0           test eax, eax
0x0000327c      7543           jne 0x32c1
0x0000327e      488d359f7400.  lea rsi, str.Full_documentation___s_s   ; ../coreutils-8.31/src/5sum.c:666 ; 0xa724 ; "Full documentation <%s%s>\n"
0x00003285      ba05000000     mov edx, 5
0x0000328a      31ff           xor edi, edi
0x0000328c      4c8d25f77300.  lea r12, str.sha512sum                  ; ../coreutils-8.31/src/5sum.c:643 ; 0xa68a ; "sha512sum"
0x00003293      488d1d287400.  lea rbx, [0x0000a6c2]                   ; ../coreutils-8.31/src/5sum.c:668 ; " invocation"
0x0000329a      e8c1e3ffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/5sum.c:666
0x0000329f      488d0de47300.  lea rcx, str.sha512sum                  ; .//ib:104 ; 0xa68a ; "sha512sum"
0x000032a6      488d150b7b00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0xadb8 ; "https://www.gnu.org/software/coreutils/"
0x000032ad      4889c6         mov rsi, rax
0x000032b0      bf01000000     mov edi, 1
0x000032b5      31c0           xor eax, eax
0x000032b7      e854e5ffff     call sym.imp.__printf_chk
0x000032bc      e945ffffff     jmp 0x3206
0x000032c1      4c8d25c27300.  lea r12, str.sha512sum                  ; ../coreutils-8.31/src/5sum.c:643 ; 0xa68a ; "sha512sum"
0x000032c8      4c8b2dd9ad20.  mov r13, qword [obj.stdout]             ; ../coreutils-8.31/src/5sum.c:663 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x000032cf      488d350a7b00.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0xade0 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x000032d6      31ff           xor edi, edi
0x000032d8      ba05000000     mov edx, 5
0x000032dd      e87ee3ffff     call sym.imp.dcgettext
0x000032e2      4c89ee         mov rsi, r13
0x000032e5      4889c7         mov rdi, rax
0x000032e8      e853e4ffff     call sym.imp.fputs_unlocked
0x000032ed      e9cffeffff     jmp 0x31c1
0x000032f2      662e0f1f8400.  nop word cs:[rax + rax]
0x000032fc      0f1f4000       nop dword [rax]
;-- close_stdout_set_file_name:
0x00003300      48893d11ae20.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x20e118:8]=0
0x00003307      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00003308      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00003310      40883df9ad20.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x20e110:1]=0
0x00003317      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00003318      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00003320      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00003321      53             push rbx
0x00003322      4883ec08       sub rsp, 8
0x00003326      488b3d7bad20.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x0000332d      e87e710000     call sym.close_stream
0x00003332      85c0           test eax, eax
0x00003334      7416           je 0x334c
0x00003336      e895e2ffff     call sym.imp.__errno_location
0x0000333b      803dcead2000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x20e110:1]=0
0x00003342      4889c3         mov rbx, rax
0x00003345      741c           je 0x3363
0x00003347      833820         cmp dword [rax], 0x20
0x0000334a      7517           jne 0x3363
0x0000334c      488b3d8dad20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e0e0:8]=0
0x00003353      e858710000     call sym.close_stream
0x00003358      85c0           test eax, eax
0x0000335a      7546           jne 0x33a2
0x0000335c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00003360      5b             pop rbx
0x00003361      5d             pop rbp
0x00003362      c3             ret
0x00003363      488d35db7e00.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0xb245 ; "write error"
0x0000336a      31ff           xor edi, edi
0x0000336c      ba05000000     mov edx, 5
0x00003371      e8eae2ffff     call sym.imp.dcgettext
0x00003376      488b3d9bad20.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x20e118:8]=0
0x0000337d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00003380      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00003383      7428           je 0x33ad
0x00003385      e816620000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x0000338a      8b33           mov esi, dword [rbx]
0x0000338c      488d15be7e00.  lea rdx, str.s:__s                      ; 0xb251 ; "%s: %s"
0x00003393      4889c1         mov rcx, rax
0x00003396      4989e8         mov r8, rbp
0x00003399      31ff           xor edi, edi
0x0000339b      31c0           xor eax, eax
0x0000339d      e88ee4ffff     call sym.imp.error
0x000033a2      8b3d78ac2000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x20e020:4]=1
0x000033a8      e843e2ffff     call sym.imp._exit
0x000033ad      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x000033af      488d159f7e00.  lea rdx, [0x0000b255]                   ; "%s"
0x000033b6      4889c1         mov rcx, rax
0x000033b9      31ff           xor edi, edi
0x000033bb      31c0           xor eax, eax
0x000033bd      e86ee4ffff     call sym.imp.error
0x000033c2      ebde           jmp 0x33a2
0x000033c4      662e0f1f8400.  nop word cs:[rax + rax]
0x000033ce      6690           nop
;-- sha512_init_ctx:
0x000033d0      48b808c9bcf3.  movabs rax, 0x6a09e667f3bcc908          ; ../coreutils-8.31/lib/sha512.c:64
0x000033da      48c747480000.  mov qword [rdi + 0x48], 0               ; ../coreutils-8.31/lib/sha512.c:74
0x000033e2      48c747400000.  mov qword [rdi + 0x40], 0
0x000033ea      488907         mov qword [rdi], rax                    ; ../coreutils-8.31/lib/sha512.c:65
0x000033ed      48b83ba7ca84.  movabs rax, 0xbb67ae8584caa73b          ; ../coreutils-8.31/lib/sha512.c:66
0x000033f7      48c747500000.  mov qword [rdi + 0x50], 0               ; ../coreutils-8.31/lib/sha512.c:75
0x000033ff      48894708       mov qword [rdi + 8], rax                ; ../coreutils-8.31/lib/sha512.c:66
0x00003403      48b82bf894fe.  movabs rax, 0x3c6ef372fe94f82b          ; ../coreutils-8.31/lib/sha512.c:67
0x0000340d      48894710       mov qword [rdi + 0x10], rax
0x00003411      48b8f1361d5f.  movabs rax, 0xa54ff53a5f1d36f1          ; ../coreutils-8.31/lib/sha512.c:68
0x0000341b      48894718       mov qword [rdi + 0x18], rax
0x0000341f      48b8d182e6ad.  movabs rax, 0x510e527fade682d1          ; ../coreutils-8.31/lib/sha512.c:69
0x00003429      48894720       mov qword [rdi + 0x20], rax
0x0000342d      48b81f6c3e2b.  movabs rax, 0x9b05688c2b3e6c1f          ; ../coreutils-8.31/lib/sha512.c:70
0x00003437      48894728       mov qword [rdi + 0x28], rax
0x0000343b      48b86bbd41fb.  movabs rax, 0x1f83d9abfb41bd6b          ; ../coreutils-8.31/lib/sha512.c:71
0x00003445      48894730       mov qword [rdi + 0x30], rax
0x00003449      48b879217e13.  movabs rax, 0x5be0cd19137e2179          ; ../coreutils-8.31/lib/sha512.c:72
0x00003453      48894738       mov qword [rdi + 0x38], rax
0x00003457      c3             ret                                     ; ../coreutils-8.31/lib/sha512.c:76
0x00003458      0f1f84000000.  nop dword [rax + rax]
;-- sha384_init_ctx:
0x00003460      48b8d89e05c1.  movabs rax, 0xcbbb9d5dc1059ed8          ; ../coreutils-8.31/lib/sha512.c:80
0x0000346a      48c747480000.  mov qword [rdi + 0x48], 0               ; ../coreutils-8.31/lib/sha512.c:90
0x00003472      48c747400000.  mov qword [rdi + 0x40], 0
0x0000347a      488907         mov qword [rdi], rax                    ; ../coreutils-8.31/lib/sha512.c:81
0x0000347d      48b807d57c36.  movabs rax, 0x629a292a367cd507          ; ../coreutils-8.31/lib/sha512.c:82
0x00003487      48c747500000.  mov qword [rdi + 0x50], 0               ; ../coreutils-8.31/lib/sha512.c:91
0x0000348f      48894708       mov qword [rdi + 8], rax                ; ../coreutils-8.31/lib/sha512.c:82
0x00003493      48b817dd7030.  movabs rax, 0x9159015a3070dd17          ; ../coreutils-8.31/lib/sha512.c:83
0x0000349d      48894710       mov qword [rdi + 0x10], rax
0x000034a1      48b839590ef7.  movabs rax, 0x152fecd8f70e5939          ; ../coreutils-8.31/lib/sha512.c:84
0x000034ab      48894718       mov qword [rdi + 0x18], rax
0x000034af      48b8310bc0ff.  movabs rax, 0x67332667ffc00b31          ; ../coreutils-8.31/lib/sha512.c:85
0x000034b9      48894720       mov qword [rdi + 0x20], rax
0x000034bd      48b811155868.  movabs rax, 0x8eb44a8768581511          ; ../coreutils-8.31/lib/sha512.c:86
0x000034c7      48894728       mov qword [rdi + 0x28], rax
0x000034cb      48b8a78ff964.  movabs rax, 0xdb0c2e0d64f98fa7          ; ../coreutils-8.31/lib/sha512.c:87
0x000034d5      48894730       mov qword [rdi + 0x30], rax
0x000034d9      48b8a44ffabe.  movabs rax, 0x47b5481dbefa4fa4          ; ../coreutils-8.31/lib/sha512.c:88
0x000034e3      48894738       mov qword [rdi + 0x38], rax
0x000034e7      c3             ret                                     ; ../coreutils-8.31/lib/sha512.c:92
0x000034e8      0f1f84000000.  nop dword [rax + rax]
;-- sha512_read_ctx:
0x000034f0      4889f0         mov rax, rsi                            ; ../coreutils-8.31/lib/sha512.c:107
0x000034f3      31d2           xor edx, edx
0x000034f5      0f1f00         nop dword [rax]
0x000034f8      488b0c17       mov rcx, qword [rdi + rdx]              ; byteswap.h:111   return __builtin_bswap64 (__bsx);
0x000034fc      480fc9         bswap rcx
0x000034ff      48890c10       mov qword [rax + rdx], rcx              ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00003503      4883c208       add rdx, 8
0x00003507      4883fa40       cmp rdx, 0x40                           ; byteswap.h:-25 ; segment.PHDR
0x0000350b      75eb           jne 0x34f8
0x0000350d      f3c3           ret
0x0000350f      90             nop
;-- sha384_read_ctx:
0x00003510      4889f0         mov rax, rsi
0x00003513      31d2           xor edx, edx
0x00003515      0f1f00         nop dword [rax]
0x00003518      488b0c17       mov rcx, qword [rdi + rdx]
0x0000351c      480fc9         bswap rcx
0x0000351f      48890c10       mov qword [rax + rdx], rcx
0x00003523      4883c208       add rdx, 8
0x00003527      4883fa30       cmp rdx, 0x30
0x0000352b      75eb           jne 0x3518
0x0000352d      f3c3           ret
0x0000352f      90             nop
;-- sha512_process_block:
0x00003530      4157           push r15
0x00003532      4156           push r14
0x00003534      4989ff         mov r15, rdi
0x00003537      4155           push r13
0x00003539      4154           push r12
0x0000353b      55             push rbp
0x0000353c      53             push rbx
0x0000353d      4889d3         mov rbx, rdx
0x00003540      4881ec880100.  sub rsp, 0x188
0x00003547      488b6a08       mov rbp, qword [rdx + 8]
0x0000354b      4c8b6a10       mov r13, qword [rdx + 0x10]
0x0000354f      64488b042528.  mov rax, qword fs:[0x28]
0x00003558      488984247801.  mov qword [rsp + 0x178], rax
0x00003560      31c0           xor eax, eax
0x00003562      4889f0         mov rax, rsi
0x00003565      4c8b4218       mov r8, qword [rdx + 0x18]
0x00003569      4c8b4a20       mov r9, qword [rdx + 0x20]
0x0000356d      4883e0f8       and rax, 0xfffffffffffffff8
0x00003571      4c8b6228       mov r12, qword [rdx + 0x28]
0x00003575      4c8b5238       mov r10, qword [rdx + 0x38]
0x00003579      4801f8         add rax, rdi
0x0000357c      48037240       add rsi, qword [rdx + 0x40]
0x00003580      4889bc248800.  mov qword [rsp + 0x88], rdi
0x00003588      4889c1         mov rcx, rax
0x0000358b      488b7a30       mov rdi, qword [rdx + 0x30]
0x0000358f      48899424e000.  mov qword [rsp + 0xe0], rdx
0x00003597      48898424d800.  mov qword [rsp + 0xd8], rax
0x0000359f      488b02         mov rax, qword [rdx]
0x000035a2      0f92c2         setb dl
0x000035a5      48897340       mov qword [rbx + 0x40], rsi
0x000035a9      0fb6d2         movzx edx, dl
0x000035ac      48015348       add qword [rbx + 0x48], rdx
0x000035b0      4939cf         cmp r15, rcx
0x000035b3      0f83603c0000   jae 0x7219
0x000035b9      488d9c24f000.  lea rbx, [rsp + 0xf0]                   ; ../coreutils-8.31/lib/sha512.c:-130
0x000035c1      4c899424c000.  mov qword [rsp + 0xc0], r10             ; ../coreutils-8.31/lib/sha512.c:-131
0x000035c9      4889bc24b800.  mov qword [rsp + 0xb8], rdi
0x000035d1      4c89a424b000.  mov qword [rsp + 0xb0], r12
0x000035d9      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x000035e1      4c898424a000.  mov qword [rsp + 0xa0], r8
0x000035e9      4c89ac249800.  mov qword [rsp + 0x98], r13
0x000035f1      4889ac249000.  mov qword [rsp + 0x90], rbp
0x000035f9      48898424d000.  mov qword [rsp + 0xd0], rax
0x00003601      48899c24e800.  mov qword [rsp + 0xe8], rbx
0x00003609      0f1f80000000.  nop dword [rax]
0x00003610      488bb4248800.  mov rsi, qword [rsp + 0x88]
0x00003618      4c8b9c24e800.  mov r11, qword [rsp + 0xe8]
0x00003620      31d2           xor edx, edx
0x00003622      660f1f440000   nop word [rax + rax]
0x00003628      488b0c16       mov rcx, qword [rsi + rdx]
0x0000362c      480fc9         bswap rcx                               ; ../coreutils-8.31/lib/sha512.c:-130
0x0000362f      49890c13       mov qword [r11 + rdx], rcx
0x00003633      4883c208       add rdx, 8
0x00003637      4881fa800000.  cmp rdx, 0x80
0x0000363e      75e8           jne 0x3628
0x00003640      4c89ca         mov rdx, r9
0x00003643      4c89c9         mov rcx, r9
0x00003646      4889c6         mov rsi, rax
0x00003649      48c1c912       ror rcx, 0x12
0x0000364d      48c1ca0e       ror rdx, 0xe
0x00003651      48c1c61e       rol rsi, 0x1e
0x00003655      4831ca         xor rdx, rcx
0x00003658      4c89c9         mov rcx, r9
0x0000365b      4c8bbc24f800.  mov r15, qword [rsp + 0xf8]
0x00003663      48c1c117       rol rcx, 0x17
0x00003667      4883ac248800.  sub qword [rsp + 0x88], 0xffffffffffffff80
0x00003670      4831d1         xor rcx, rdx
0x00003673      48ba22ae28d7.  movabs rdx, 0x428a2f98d728ae22
0x0000367d      48039424f000.  add rdx, qword [rsp + 0xf0]
0x00003685      4901d2         add r10, rdx
0x00003688      4c89e2         mov rdx, r12
0x0000368b      4831fa         xor rdx, rdi
0x0000368e      4901ca         add r10, rcx
0x00003691      4c21ca         and rdx, r9
0x00003694      4831fa         xor rdx, rdi
0x00003697      498d0c12       lea rcx, [r10 + rdx]
0x0000369b      4889c2         mov rdx, rax
0x0000369e      4989c2         mov r10, rax
0x000036a1      48c1ca1c       ror rdx, 0x1c
0x000036a5      4921ea         and r10, rbp                            ; ../coreutils-8.31/lib/sha512.c:-129
0x000036a8      4831d6         xor rsi, rdx
0x000036ab      4889c2         mov rdx, rax
0x000036ae      4901c8         add r8, rcx
0x000036b1      48c1c219       rol rdx, 0x19
0x000036b5      4d89c3         mov r11, r8
0x000036b8      4831d6         xor rsi, rdx
0x000036bb      4889c2         mov rdx, rax
0x000036be      49c1cb12       ror r11, 0x12
0x000036c2      4809ea         or rdx, rbp
0x000036c5      4c21ea         and rdx, r13
0x000036c8      4c09d2         or rdx, r10
0x000036cb      4801f2         add rdx, rsi
0x000036ce      48becd65ef23.  movabs rsi, 0x7137449123ef65cd
0x000036d8      4801ca         add rdx, rcx
0x000036db      4c89c9         mov rcx, r9
0x000036de      4c01fe         add rsi, r15
0x000036e1      4c31e1         xor rcx, r12
0x000036e4      4801fe         add rsi, rdi
0x000036e7      4989d2         mov r10, rdx
0x000036ea      4c21c1         and rcx, r8
0x000036ed      4c31e1         xor rcx, r12
0x000036f0      4801ce         add rsi, rcx
0x000036f3      4c89c1         mov rcx, r8
0x000036f6      48c1c90e       ror rcx, 0xe
0x000036fa      4931cb         xor r11, rcx
0x000036fd      4c89c1         mov rcx, r8
0x00003700      4921c2         and r10, rax
0x00003703      48c1c117       rol rcx, 0x17
0x00003707      4c31d9         xor rcx, r11
0x0000370a      4989d3         mov r11, rdx
0x0000370d      4801f1         add rcx, rsi
0x00003710      4889d6         mov rsi, rdx
0x00003713      49c1cb1c       ror r11, 0x1c
0x00003717      48c1c61e       rol rsi, 0x1e
0x0000371b      4a8d3c29       lea rdi, [rcx + r13]
0x0000371f      4c31de         xor rsi, r11
0x00003722      4989d3         mov r11, rdx
0x00003725      49c1c319       rol r11, 0x19
0x00003729      4c31de         xor rsi, r11
0x0000372c      4989d3         mov r11, rdx
0x0000372f      4909c3         or r11, rax
0x00003732      4921eb         and r11, rbp
0x00003735      4d09d3         or r11, r10
0x00003738      4d89c2         mov r10, r8
0x0000373b      4901f3         add r11, rsi
0x0000373e      4d31ca         xor r10, r9
0x00003741      4889fe         mov rsi, rdi
0x00003744      4901cb         add r11, rcx
0x00003747      48b92f3b4dec.  movabs rcx, 0xb5c0fbcfec4d3b2f
0x00003751      48038c240001.  add rcx, qword [rsp + 0x100]
0x00003759      4921fa         and r10, rdi
0x0000375c      48c1ce12       ror rsi, 0x12
0x00003760      4d89de         mov r14, r11
0x00003763      4d31ca         xor r10, r9
0x00003766      4889f3         mov rbx, rsi
0x00003769      49c1c619       rol r14, 0x19
0x0000376d      4c01e1         add rcx, r12
0x00003770      4c01d1         add rcx, r10
0x00003773      4989fa         mov r10, rdi
0x00003776      49c1ca0e       ror r10, 0xe
0x0000377a      4c31d3         xor rbx, r10
0x0000377d      4989fa         mov r10, rdi
0x00003780      49c1c217       rol r10, 0x17
0x00003784      4931da         xor r10, rbx
0x00003787      4901ca         add r10, rcx
0x0000378a      4c89d9         mov rcx, r11
0x0000378d      48c1c91c       ror rcx, 0x1c
0x00003791      498d342a       lea rsi, [r10 + rbp]                    ; ../coreutils-8.31/lib/sha512.c:-127
0x00003795      4889d5         mov rbp, rdx
0x00003798      4889cb         mov rbx, rcx
0x0000379b      4c89d9         mov rcx, r11
0x0000379e      48c1c11e       rol rcx, 0x1e
0x000037a2      4831d9         xor rcx, rbx
0x000037a5      4c31f1         xor rcx, r14
0x000037a8      4989d6         mov r14, rdx
0x000037ab      4d09de         or r14, r11
0x000037ae      4c21dd         and rbp, r11
0x000037b1      4c89f3         mov rbx, r14
0x000037b4      4821c3         and rbx, rax
0x000037b7      4809eb         or rbx, rbp
0x000037ba      4c89dd         mov rbp, r11
0x000037bd      4801cb         add rbx, rcx
0x000037c0      4c89c1         mov rcx, r8
0x000037c3      4c01d3         add rbx, r10
0x000037c6      49babcdb8981.  movabs r10, 0xe9b5dba58189dbbc
0x000037d0      4c0394240801.  add r10, qword [rsp + 0x108]
0x000037d8      4831f9         xor rcx, rdi
0x000037db      4821dd         and rbp, rbx
0x000037de      4821f1         and rcx, rsi
0x000037e1      4c31c1         xor rcx, r8
0x000037e4      4d01d1         add r9, r10
0x000037e7      4989f2         mov r10, rsi
0x000037ea      4c01c9         add rcx, r9
0x000037ed      4989f1         mov r9, rsi
0x000037f0      49c1ca12       ror r10, 0x12
0x000037f4      49c1c90e       ror r9, 0xe
0x000037f8      4d31ca         xor r10, r9
0x000037fb      4989f1         mov r9, rsi
0x000037fe      49c1c117       rol r9, 0x17
0x00003802      4d31d1         xor r9, r10
0x00003805      4989da         mov r10, rbx
0x00003808      4901c9         add r9, rcx
0x0000380b      49c1ca1c       ror r10, 0x1c
0x0000380f      498d0c01       lea rcx, [r9 + rax]                     ; ../coreutils-8.31/lib/sha512.c:-126
0x00003813      4889d8         mov rax, rbx
0x00003816      48c1c01e       rol rax, 0x1e
0x0000381a      4c31d0         xor rax, r10
0x0000381d      4989da         mov r10, rbx
0x00003820      49c1c219       rol r10, 0x19
0x00003824      4c31d0         xor rax, r10
0x00003827      4d89da         mov r10, r11
0x0000382a      4909da         or r10, rbx
0x0000382d      4921d2         and r10, rdx
0x00003830      4909ea         or r10, rbp
0x00003833      4889dd         mov rbp, rbx
0x00003836      4901c2         add r10, rax
0x00003839      4889f8         mov rax, rdi
0x0000383c      4831f0         xor rax, rsi
0x0000383f      4d01ca         add r10, r9
0x00003842      49b938b548f3.  movabs r9, 0x3956c25bf348b538
0x0000384c      4821c8         and rax, rcx
0x0000384f      4831f8         xor rax, rdi
0x00003852      4c038c241001.  add r9, qword [rsp + 0x110]
0x0000385a      4c21d5         and rbp, r10
0x0000385d      4d01c8         add r8, r9
0x00003860      4989c9         mov r9, rcx
0x00003863      4901c0         add r8, rax
0x00003866      4889c8         mov rax, rcx
0x00003869      49c1c912       ror r9, 0x12
0x0000386d      48c1c80e       ror rax, 0xe
0x00003871      4931c1         xor r9, rax
0x00003874      4889c8         mov rax, rcx
0x00003877      48c1c017       rol rax, 0x17
0x0000387b      4c31c8         xor rax, r9
0x0000387e      4d89d1         mov r9, r10
0x00003881      4c01c0         add rax, r8                             ; ../coreutils-8.31/lib/sha512.c:-125
0x00003884      4d89d0         mov r8, r10                             ; ../coreutils-8.31/lib/sha512.c:-126
0x00003887      49c1c91c       ror r9, 0x1c                            ; ../coreutils-8.31/lib/sha512.c:-125
0x0000388b      49c1c01e       rol r8, 0x1e
0x0000388f      4801c2         add rdx, rax
0x00003892      4d31c8         xor r8, r9
0x00003895      4d89d1         mov r9, r10
0x00003898      49c1c119       rol r9, 0x19
0x0000389c      4d31c8         xor r8, r9
0x0000389f      4989d9         mov r9, rbx
0x000038a2      4d09d1         or r9, r10
0x000038a5      4d21d9         and r9, r11
0x000038a8      4909e9         or r9, rbp
0x000038ab      4c89d5         mov rbp, r10
0x000038ae      4d01c1         add r9, r8
0x000038b1      4989f0         mov r8, rsi
0x000038b4      4901c1         add r9, rax
0x000038b7      48b819d005b6.  movabs rax, 0x59f111f1b605d019
0x000038c1      480384241801.  add rax, qword [rsp + 0x118]
0x000038c9      4931c8         xor r8, rcx
0x000038cc      4921d0         and r8, rdx
0x000038cf      4931f0         xor r8, rsi
0x000038d2      4801c7         add rdi, rax
0x000038d5      4889d0         mov rax, rdx
0x000038d8      4901f8         add r8, rdi
0x000038db      4889d7         mov rdi, rdx
0x000038de      48c1c812       ror rax, 0x12
0x000038e2      48c1cf0e       ror rdi, 0xe
0x000038e6      4831f8         xor rax, rdi
0x000038e9      4889d7         mov rdi, rdx
0x000038ec      48c1c717       rol rdi, 0x17
0x000038f0      4831c7         xor rdi, rax
0x000038f3      4c89c8         mov rax, r9
0x000038f6      4c01c7         add rdi, r8
0x000038f9      4d89c8         mov r8, r9                              ; ../coreutils-8.31/lib/sha512.c:-124
0x000038fc      48c1c81c       ror rax, 0x1c                           ; ../coreutils-8.31/lib/sha512.c:-125
0x00003900      49c1c01e       rol r8, 0x1e
0x00003904      4c21cd         and rbp, r9
0x00003907      4901fb         add r11, rdi
0x0000390a      4931c0         xor r8, rax
0x0000390d      4c89c8         mov rax, r9
0x00003910      48c1c019       rol rax, 0x19
0x00003914      4931c0         xor r8, rax                             ; ../coreutils-8.31/lib/sha512.c:-124
0x00003917      4c89d0         mov rax, r10
0x0000391a      4c09c8         or rax, r9
0x0000391d      4821d8         and rax, rbx
0x00003920      4809e8         or rax, rbp
0x00003923      4c89cd         mov rbp, r9
0x00003926      4c01c0         add rax, r8
0x00003929      49b89b4f19af.  movabs r8, 0x923f82a4af194f9b
0x00003933      4c0384242001.  add r8, qword [rsp + 0x120]
0x0000393b      4801f8         add rax, rdi
0x0000393e      4889cf         mov rdi, rcx
0x00003941      4831d7         xor rdi, rdx
0x00003944      4c21df         and rdi, r11
0x00003947      4c01c6         add rsi, r8
0x0000394a      4831cf         xor rdi, rcx
0x0000394d      4d89d8         mov r8, r11
0x00003950      4801f7         add rdi, rsi
0x00003953      4c89de         mov rsi, r11
0x00003956      49c1c812       ror r8, 0x12
0x0000395a      48c1ce0e       ror rsi, 0xe
0x0000395e      4931f0         xor r8, rsi
0x00003961      4c89de         mov rsi, r11
0x00003964      48c1c617       rol rsi, 0x17
0x00003968      4c31c6         xor rsi, r8
0x0000396b      4989c0         mov r8, rax
0x0000396e      4801fe         add rsi, rdi
0x00003971      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/sha512.c:-123
0x00003974      49c1c81c       ror r8, 0x1c                            ; ../coreutils-8.31/lib/sha512.c:-124
0x00003978      48c1c71e       rol rdi, 0x1e
0x0000397c      4801f3         add rbx, rsi
0x0000397f      4c31c7         xor rdi, r8
0x00003982      4989c0         mov r8, rax
0x00003985      49c1c019       rol r8, 0x19
0x00003989      4c31c7         xor rdi, r8
0x0000398c      4d89c8         mov r8, r9
0x0000398f      4909c0         or r8, rax
0x00003992      4d21d0         and r8, r10
0x00003995      4821c5         and rbp, rax
0x00003998      4909e8         or r8, rbp
0x0000399b      4889c5         mov rbp, rax
0x0000399e      4901f8         add r8, rdi
0x000039a1      48bf18816dda.  movabs rdi, 0xab1c5ed5da6d8118
0x000039ab      4803bc242801.  add rdi, qword [rsp + 0x128]
0x000039b3      4901f0         add r8, rsi
0x000039b6      4889d6         mov rsi, rdx
0x000039b9      4c31de         xor rsi, r11
0x000039bc      4c21c5         and rbp, r8
0x000039bf      4821de         and rsi, rbx
0x000039c2      4801f9         add rcx, rdi
0x000039c5      4831d6         xor rsi, rdx
0x000039c8      4889df         mov rdi, rbx
0x000039cb      4801ce         add rsi, rcx
0x000039ce      4889d9         mov rcx, rbx
0x000039d1      48c1cf12       ror rdi, 0x12
0x000039d5      48c1c90e       ror rcx, 0xe
0x000039d9      4831cf         xor rdi, rcx
0x000039dc      4889d9         mov rcx, rbx
0x000039df      48c1c117       rol rcx, 0x17
0x000039e3      4831f9         xor rcx, rdi
0x000039e6      4c89c7         mov rdi, r8
0x000039e9      4801f1         add rcx, rsi                            ; ../coreutils-8.31/lib/sha512.c:-122
0x000039ec      4c89c6         mov rsi, r8                             ; ../coreutils-8.31/lib/sha512.c:-123
0x000039ef      48c1cf1c       ror rdi, 0x1c                           ; ../coreutils-8.31/lib/sha512.c:-122
0x000039f3      48c1c61e       rol rsi, 0x1e
0x000039f7      4901ca         add r10, rcx
0x000039fa      4831fe         xor rsi, rdi
0x000039fd      4c89c7         mov rdi, r8
0x00003a00      48c1c719       rol rdi, 0x19
0x00003a04      4831fe         xor rsi, rdi
0x00003a07      4889c7         mov rdi, rax
0x00003a0a      4c09c7         or rdi, r8
0x00003a0d      4c21cf         and rdi, r9
0x00003a10      4809ef         or rdi, rbp
0x00003a13      4c89c5         mov rbp, r8
0x00003a16      4801f7         add rdi, rsi
0x00003a19      48be420203a3.  movabs rsi, 0xd807aa98a3030242
0x00003a23      4801cf         add rdi, rcx
0x00003a26      4c89d9         mov rcx, r11
0x00003a29      4831d9         xor rcx, rbx
0x00003a2c      4c21d1         and rcx, r10
0x00003a2f      4c31d9         xor rcx, r11
0x00003a32      4803b4243001.  add rsi, qword [rsp + 0x130]
0x00003a3a      4821fd         and rbp, rdi
0x00003a3d      4801f2         add rdx, rsi
0x00003a40      4c89d6         mov rsi, r10
0x00003a43      4801d1         add rcx, rdx
0x00003a46      4c89d2         mov rdx, r10
0x00003a49      48c1ce12       ror rsi, 0x12
0x00003a4d      48c1ca0e       ror rdx, 0xe
0x00003a51      4831d6         xor rsi, rdx
0x00003a54      4c89d2         mov rdx, r10
0x00003a57      48c1c217       rol rdx, 0x17
0x00003a5b      4831f2         xor rdx, rsi
0x00003a5e      4889fe         mov rsi, rdi
0x00003a61      4801ca         add rdx, rcx                            ; ../coreutils-8.31/lib/sha512.c:-121
0x00003a64      4889f9         mov rcx, rdi                            ; ../coreutils-8.31/lib/sha512.c:-122
0x00003a67      48c1ce1c       ror rsi, 0x1c                           ; ../coreutils-8.31/lib/sha512.c:-121
0x00003a6b      48c1c11e       rol rcx, 0x1e
0x00003a6f      4901d1         add r9, rdx
0x00003a72      4831f1         xor rcx, rsi
0x00003a75      4889fe         mov rsi, rdi
0x00003a78      48c1c619       rol rsi, 0x19
0x00003a7c      4831f1         xor rcx, rsi
0x00003a7f      4c89c6         mov rsi, r8
0x00003a82      4809fe         or rsi, rdi
0x00003a85      4821c6         and rsi, rax
0x00003a88      4809ee         or rsi, rbp
0x00003a8b      4889fd         mov rbp, rdi
0x00003a8e      4801ce         add rsi, rcx
0x00003a91      48b9be6f7045.  movabs rcx, 0x12835b0145706fbe
0x00003a9b      48038c243801.  add rcx, qword [rsp + 0x138]
0x00003aa3      4801d6         add rsi, rdx
0x00003aa6      4889da         mov rdx, rbx
0x00003aa9      4c31d2         xor rdx, r10
0x00003aac      4c21ca         and rdx, r9
0x00003aaf      4831da         xor rdx, rbx
0x00003ab2      4901cb         add r11, rcx
0x00003ab5      4c89c9         mov rcx, r9
0x00003ab8      4901d3         add r11, rdx
0x00003abb      4c89ca         mov rdx, r9
0x00003abe      48c1c912       ror rcx, 0x12
0x00003ac2      48c1ca0e       ror rdx, 0xe
0x00003ac6      4831d1         xor rcx, rdx
0x00003ac9      4c89ca         mov rdx, r9
0x00003acc      48c1c217       rol rdx, 0x17
0x00003ad0      4831ca         xor rdx, rcx
0x00003ad3      4889f1         mov rcx, rsi
0x00003ad6      4c01da         add rdx, r11
0x00003ad9      4989f3         mov r11, rsi
0x00003adc      48c1c91c       ror rcx, 0x1c
0x00003ae0      49c1c31e       rol r11, 0x1e
0x00003ae4      4821f5         and rbp, rsi
0x00003ae7      4801d0         add rax, rdx
0x00003aea      4931cb         xor r11, rcx
0x00003aed      4889f1         mov rcx, rsi
0x00003af0      48c1c119       rol rcx, 0x19
0x00003af4      4931cb         xor r11, rcx
0x00003af7      4889f9         mov rcx, rdi
0x00003afa      4809f1         or rcx, rsi
0x00003afd      4c21c1         and rcx, r8
0x00003b00      4809e9         or rcx, rbp
0x00003b03      4889f5         mov rbp, rsi
0x00003b06      4c01d9         add rcx, r11
0x00003b09      4d89d3         mov r11, r10
0x00003b0c      4801d1         add rcx, rdx
0x00003b0f      48ba8cb2e44e.  movabs rdx, 0x243185be4ee4b28c
0x00003b19      480394244001.  add rdx, qword [rsp + 0x140]
0x00003b21      4d31cb         xor r11, r9
0x00003b24      4989ce         mov r14, rcx
0x00003b27      4921c3         and r11, rax
0x00003b2a      49c1c61e       rol r14, 0x1e
0x00003b2e      4d31d3         xor r11, r10
0x00003b31      4801d3         add rbx, rdx
0x00003b34      4889c2         mov rdx, rax
0x00003b37      4c01db         add rbx, r11
0x00003b3a      4989c3         mov r11, rax
0x00003b3d      48c1ca12       ror rdx, 0x12
0x00003b41      49c1cb0e       ror r11, 0xe
0x00003b45      4c31da         xor rdx, r11
0x00003b48      4989c3         mov r11, rax
0x00003b4b      49c1c317       rol r11, 0x17
0x00003b4f      4931d3         xor r11, rdx
0x00003b52      4889ca         mov rdx, rcx
0x00003b55      4901db         add r11, rbx                            ; ../coreutils-8.31/lib/sha512.c:-119
0x00003b58      48c1ca1c       ror rdx, 0x1c                           ; ../coreutils-8.31/lib/sha512.c:-120
0x00003b5c      4c89f3         mov rbx, r14
0x00003b5f      4831d3         xor rbx, rdx
0x00003b62      4889ca         mov rdx, rcx
0x00003b65      4d01d8         add r8, r11
0x00003b68      48c1c219       rol rdx, 0x19
0x00003b6c      4d89c5         mov r13, r8
0x00003b6f      4989ce         mov r14, rcx
0x00003b72      4831d3         xor rbx, rdx
0x00003b75      4889f2         mov rdx, rsi
0x00003b78      4809ca         or rdx, rcx
0x00003b7b      4821fa         and rdx, rdi
0x00003b7e      4821cd         and rbp, rcx
0x00003b81      49c1cd12       ror r13, 0x12
0x00003b85      4809ea         or rdx, rbp
0x00003b88      4801da         add rdx, rbx
0x00003b8b      48bbe2b4ffd5.  movabs rbx, 0x550c7dc3d5ffb4e2
0x00003b95      48039c244801.  add rbx, qword [rsp + 0x148]
0x00003b9d      4c01da         add rdx, r11
0x00003ba0      4d89cb         mov r11, r9
0x00003ba3      4931c3         xor r11, rax
0x00003ba6      4921d6         and r14, rdx
0x00003ba9      4d21c3         and r11, r8
0x00003bac      4901da         add r10, rbx
0x00003baf      4d31cb         xor r11, r9
0x00003bb2      4f8d1c13       lea r11, [r11 + r10]
0x00003bb6      4d89c2         mov r10, r8
0x00003bb9      49c1ca0e       ror r10, 0xe
0x00003bbd      4d31d5         xor r13, r10
0x00003bc0      4d89c2         mov r10, r8
0x00003bc3      49c1c217       rol r10, 0x17
0x00003bc7      4d31ea         xor r10, r13
0x00003bca      4989d5         mov r13, rdx
0x00003bcd      4d01da         add r10, r11
0x00003bd0      4989d3         mov r11, rdx
0x00003bd3      49c1cd1c       ror r13, 0x1c
0x00003bd7      49c1c31e       rol r11, 0x1e
0x00003bdb      4c01d7         add rdi, r10
0x00003bde      4d31eb         xor r11, r13
0x00003be1      4989d5         mov r13, rdx
0x00003be4      49c1c519       rol r13, 0x19
0x00003be8      4d31eb         xor r11, r13
0x00003beb      4989cd         mov r13, rcx
0x00003bee      4909d5         or r13, rdx
0x00003bf1      4921f5         and r13, rsi
0x00003bf4      4d09f5         or r13, r14
0x00003bf7      4989fe         mov r14, rdi
0x00003bfa      4d01dd         add r13, r11
0x00003bfd      49bb6f897bf2.  movabs r11, 0x72be5d74f27b896f
0x00003c07      4c039c245001.  add r11, qword [rsp + 0x150]
0x00003c0f      4d01d5         add r13, r10
0x00003c12      4989c2         mov r10, rax
0x00003c15      4d31c2         xor r10, r8
0x00003c18      4921fa         and r10, rdi
0x00003c1b      4931c2         xor r10, rax
0x00003c1e      4d01d9         add r9, r11
0x00003c21      49c1ce12       ror r14, 0x12
0x00003c25      4f8d140a       lea r10, [r10 + r9]
0x00003c29      4989f9         mov r9, rdi
0x00003c2c      4989d3         mov r11, rdx
0x00003c2f      49c1c90e       ror r9, 0xe
0x00003c33      4d21eb         and r11, r13
0x00003c36      4d31ce         xor r14, r9
0x00003c39      4989f9         mov r9, rdi
0x00003c3c      49c1c117       rol r9, 0x17                            ; ../coreutils-8.31/lib/sha512.c:-117
0x00003c40      4d31f1         xor r9, r14
0x00003c43      4d89ee         mov r14, r13
0x00003c46      4d01d1         add r9, r10
0x00003c49      4d89ea         mov r10, r13
0x00003c4c      49c1ce1c       ror r14, 0x1c
0x00003c50      49c1c21e       rol r10, 0x1e
0x00003c54      4c01ce         add rsi, r9
0x00003c57      4d31f2         xor r10, r14
0x00003c5a      4d89ee         mov r14, r13
0x00003c5d      4989f4         mov r12, rsi
0x00003c60      49c1c619       rol r14, 0x19
0x00003c64      49c1cc12       ror r12, 0x12
0x00003c68      4d31f2         xor r10, r14
0x00003c6b      4989d6         mov r14, rdx
0x00003c6e      4d09ee         or r14, r13                             ; ../coreutils-8.31/lib/sha512.c:-118
0x00003c71      4921ce         and r14, rcx                            ; ../coreutils-8.31/lib/sha512.c:-117
0x00003c74      4d09de         or r14, r11
0x00003c77      4c8b9c246801.  mov r11, qword [rsp + 0x168]
0x00003c7f      4d01d6         add r14, r10
0x00003c82      49bab196163b.  movabs r10, 0x80deb1fe3b1696b1
0x00003c8c      4c0394245801.  add r10, qword [rsp + 0x158]
0x00003c94      4d01ce         add r14, r9
0x00003c97      4d89c1         mov r9, r8
0x00003c9a      4931f9         xor r9, rdi
0x00003c9d      4921f1         and r9, rsi
0x00003ca0      4c01d0         add rax, r10
0x00003ca3      4d31c1         xor r9, r8
0x00003ca6      4d89ea         mov r10, r13
0x00003ca9      4d8d0c01       lea r9, [r9 + rax]
0x00003cad      4889f0         mov rax, rsi
0x00003cb0      48c1c80e       ror rax, 0xe
0x00003cb4      4931c4         xor r12, rax
0x00003cb7      4889f0         mov rax, rsi
0x00003cba      48c1c017       rol rax, 0x17
0x00003cbe      4c31e0         xor rax, r12
0x00003cc1      4d89f4         mov r12, r14
0x00003cc4      4c01c8         add rax, r9
0x00003cc7      4d89f1         mov r9, r14
0x00003cca      49c1cc1c       ror r12, 0x1c                           ; ../coreutils-8.31/lib/sha512.c:-116
0x00003cce      4801c1         add rcx, rax
0x00003cd1      49c1c11e       rol r9, 0x1e
0x00003cd5      4d21f2         and r10, r14
0x00003cd8      4d31e1         xor r9, r12
0x00003cdb      4d89f4         mov r12, r14
0x00003cde      4889cd         mov rbp, rcx
0x00003ce1      49c1c419       rol r12, 0x19
0x00003ce5      48c1cd12       ror rbp, 0x12
0x00003ce9      4d31e1         xor r9, r12
0x00003cec      4d89ec         mov r12, r13
0x00003cef      4d09f4         or r12, r14
0x00003cf2      4921d4         and r12, rdx
0x00003cf5      4d09d4         or r12, r10
0x00003cf8      4d89fa         mov r10, r15
0x00003cfb      4d01cc         add r12, r9
0x00003cfe      49b93512c725.  movabs r9, 0x9bdc06a725c71235
0x00003d08      4c038c246001.  add r9, qword [rsp + 0x160]
0x00003d10      4901c4         add r12, rax
0x00003d13      4889f8         mov rax, rdi
0x00003d16      4831f0         xor rax, rsi
0x00003d19      4821c8         and rax, rcx
0x00003d1c      4831f8         xor rax, rdi
0x00003d1f      4d01c8         add r8, r9
0x00003d22      4d89f1         mov r9, r14
0x00003d25      4901c0         add r8, rax
0x00003d28      4889c8         mov rax, rcx
0x00003d2b      4d21e1         and r9, r12
0x00003d2e      48c1c80e       ror rax, 0xe
0x00003d32      4831c5         xor rbp, rax
0x00003d35      4889c8         mov rax, rcx
0x00003d38      48c1c017       rol rax, 0x17
0x00003d3c      4831e8         xor rax, rbp
0x00003d3f      4c89e5         mov rbp, r12
0x00003d42      4c01c0         add rax, r8                             ; ../coreutils-8.31/lib/sha512.c:-115
0x00003d45      4d89e0         mov r8, r12                             ; ../coreutils-8.31/lib/sha512.c:-116
0x00003d48      48c1cd1c       ror rbp, 0x1c                           ; ../coreutils-8.31/lib/sha512.c:-115
0x00003d4c      49c1c01e       rol r8, 0x1e
0x00003d50      4801c2         add rdx, rax                            ; ../coreutils-8.31/lib/sha512.c:-116
0x00003d53      4931e8         xor r8, rbp                             ; ../coreutils-8.31/lib/sha512.c:-115
0x00003d56      4c89e5         mov rbp, r12
0x00003d59      48c1c519       rol rbp, 0x19
0x00003d5d      4931e8         xor r8, rbp
0x00003d60      4c89f5         mov rbp, r14
0x00003d63      4c09e5         or rbp, r12
0x00003d66      4c21ed         and rbp, r13
0x00003d69      4c09cd         or rbp, r9
0x00003d6c      4d89e1         mov r9, r12
0x00003d6f      4c01c5         add rbp, r8
0x00003d72      49b8942669cf.  movabs r8, 0xc19bf174cf692694
0x00003d7c      4c0384246801.  add r8, qword [rsp + 0x168]
0x00003d84      4801c5         add rbp, rax
0x00003d87      4889f0         mov rax, rsi
0x00003d8a      4831c8         xor rax, rcx
0x00003d8d      4921e9         and r9, rbp
0x00003d90      4821d0         and rax, rdx
0x00003d93      4831f0         xor rax, rsi
0x00003d96      4c01c7         add rdi, r8
0x00003d99      4989d0         mov r8, rdx
0x00003d9c      4801c7         add rdi, rax
0x00003d9f      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/sha512.c:-114
0x00003da2      49c1c812       ror r8, 0x12
0x00003da6      48c1c80e       ror rax, 0xe
0x00003daa      4931c0         xor r8, rax
0x00003dad      4889d0         mov rax, rdx
0x00003db0      48c1c017       rol rax, 0x17
0x00003db4      4c31c0         xor rax, r8
0x00003db7      4989e8         mov r8, rbp
0x00003dba      4801f8         add rax, rdi
0x00003dbd      4889ef         mov rdi, rbp
0x00003dc0      49c1c81c       ror r8, 0x1c
0x00003dc4      48c1c71e       rol rdi, 0x1e
0x00003dc8      4901c5         add r13, rax
0x00003dcb      4c31c7         xor rdi, r8
0x00003dce      4989e8         mov r8, rbp
0x00003dd1      49c1c019       rol r8, 0x19
0x00003dd5      4c31c7         xor rdi, r8
0x00003dd8      4d89e0         mov r8, r12
0x00003ddb      4909e8         or r8, rbp
0x00003dde      4d21f0         and r8, r14
0x00003de1      4d09c8         or r8, r9
0x00003de4      4989e9         mov r9, rbp
0x00003de7      4901f8         add r8, rdi
0x00003dea      488bbc246001.  mov rdi, qword [rsp + 0x160]
0x00003df2      4901c0         add r8, rax
0x00003df5      488b84246001.  mov rax, qword [rsp + 0x160]
0x00003dfd      48c1ef06       shr rdi, 6
0x00003e01      48c1c813       ror rax, 0x13
0x00003e05      4889c3         mov rbx, rax
0x00003e08      488b84246001.  mov rax, qword [rsp + 0x160]
0x00003e10      48c1c003       rol rax, 3
0x00003e14      4831d8         xor rax, rbx
0x00003e17      4889fb         mov rbx, rdi
0x00003e1a      488bbc24f000.  mov rdi, qword [rsp + 0xf0]
0x00003e22      4803bc243801.  add rdi, qword [rsp + 0x138]
0x00003e2a      4831c3         xor rbx, rax
0x00003e2d      488d043b       lea rax, [rbx + rdi]
0x00003e31      4c89ff         mov rdi, r15
0x00003e34      48d1cf         ror rdi, 1
0x00003e37      49c1ca08       ror r10, 8
0x00003e3b      4d21c1         and r9, r8
0x00003e3e      4c89d3         mov rbx, r10
0x00003e41      49c1cb13       ror r11, 0x13
0x00003e45      4c8b94240801.  mov r10, qword [rsp + 0x108]
0x00003e4d      4831fb         xor rbx, rdi
0x00003e50      4c89ff         mov rdi, r15
0x00003e53      48c1ef07       shr rdi, 7
0x00003e57      4831fb         xor rbx, rdi
0x00003e5a      48bfd24af19e.  movabs rdi, 0xe49b69c19ef14ad2
0x00003e64      4801c3         add rbx, rax
0x00003e67      4889c8         mov rax, rcx
0x00003e6a      4831d0         xor rax, rdx
0x00003e6d      4801df         add rdi, rbx
0x00003e70      4c21e8         and rax, r13
0x00003e73      4801fe         add rsi, rdi
0x00003e76      4c89ef         mov rdi, r13
0x00003e79      4831c8         xor rax, rcx
0x00003e7c      48c1cf12       ror rdi, 0x12
0x00003e80      4801c6         add rsi, rax
0x00003e83      4c89e8         mov rax, r13
0x00003e86      48c1c80e       ror rax, 0xe
0x00003e8a      4831c7         xor rdi, rax
0x00003e8d      4c89e8         mov rax, r13
0x00003e90      48c1c017       rol rax, 0x17
0x00003e94      4831f8         xor rax, rdi
0x00003e97      4c89c7         mov rdi, r8
0x00003e9a      4801f0         add rax, rsi
0x00003e9d      4c89c6         mov rsi, r8
0x00003ea0      48c1cf1c       ror rdi, 0x1c
0x00003ea4      48c1c61e       rol rsi, 0x1e
0x00003ea8      4901c6         add r14, rax
0x00003eab      4831fe         xor rsi, rdi
0x00003eae      4c89c7         mov rdi, r8
0x00003eb1      48c1c719       rol rdi, 0x19
0x00003eb5      4831fe         xor rsi, rdi
0x00003eb8      4889ef         mov rdi, rbp
0x00003ebb      4c09c7         or rdi, r8
0x00003ebe      4c21e7         and rdi, r12
0x00003ec1      4c09cf         or rdi, r9
0x00003ec4      4d89c1         mov r9, r8
0x00003ec7      4801f7         add rdi, rsi
0x00003eca      488bb4244001.  mov rsi, qword [rsp + 0x140]
0x00003ed2      4801c7         add rdi, rax
0x00003ed5      488b84246801.  mov rax, qword [rsp + 0x168]
0x00003edd      48c1c003       rol rax, 3
0x00003ee1      4c31d8         xor rax, r11
0x00003ee4      4c8b9c246801.  mov r11, qword [rsp + 0x168]
0x00003eec      4c01fe         add rsi, r15
0x00003eef      4921f9         and r9, rdi
0x00003ef2      49c1eb06       shr r11, 6
0x00003ef6      4931c3         xor r11, rax
0x00003ef9      498d0433       lea rax, [r11 + rsi]
0x00003efd      488bb4240001.  mov rsi, qword [rsp + 0x100]
0x00003f05      4c8b9c240001.  mov r11, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/sha512.c:-113
0x00003f0d      48d1ce         ror rsi, 1
0x00003f10      49c1cb08       ror r11, 8
0x00003f14      4931f3         xor r11, rsi
0x00003f17      488bb4240001.  mov rsi, qword [rsp + 0x100]
0x00003f1f      48c1ee07       shr rsi, 7
0x00003f23      4931f3         xor r11, rsi
0x00003f26      48bee3254f38.  movabs rsi, 0xefbe4786384f25e3
0x00003f30      4901c3         add r11, rax
0x00003f33      4889d0         mov rax, rdx
0x00003f36      4c31e8         xor rax, r13
0x00003f39      4c01de         add rsi, r11
0x00003f3c      4c21f0         and rax, r14
0x00003f3f      4801f1         add rcx, rsi
0x00003f42      4c89f6         mov rsi, r14
0x00003f45      4831d0         xor rax, rdx
0x00003f48      48c1ce12       ror rsi, 0x12
0x00003f4c      4801c1         add rcx, rax
0x00003f4f      4c89f0         mov rax, r14
0x00003f52      48c1c80e       ror rax, 0xe
0x00003f56      4831c6         xor rsi, rax
0x00003f59      4c89f0         mov rax, r14
0x00003f5c      48c1c017       rol rax, 0x17
0x00003f60      4831f0         xor rax, rsi
0x00003f63      4889fe         mov rsi, rdi
0x00003f66      4801c8         add rax, rcx
0x00003f69      4889f9         mov rcx, rdi
0x00003f6c      48c1ce1c       ror rsi, 0x1c
0x00003f70      48c1c11e       rol rcx, 0x1e
0x00003f74      4901c4         add r12, rax
0x00003f77      4831f1         xor rcx, rsi
0x00003f7a      4889fe         mov rsi, rdi
0x00003f7d      48c1c619       rol rsi, 0x19
0x00003f81      4831f1         xor rcx, rsi
0x00003f84      4c89c6         mov rsi, r8
0x00003f87      4809fe         or rsi, rdi
0x00003f8a      4821ee         and rsi, rbp
0x00003f8d      4c09ce         or rsi, r9
0x00003f90      4989f9         mov r9, rdi
0x00003f93      4801ce         add rsi, rcx
0x00003f96      49d1ca         ror r10, 1
0x00003f99      4801c6         add rsi, rax
0x00003f9c      488b84240801.  mov rax, qword [rsp + 0x108]
0x00003fa4      4989f7         mov r15, rsi
0x00003fa7      48c1c808       ror rax, 8
0x00003fab      4c31d0         xor rax, r10
0x00003fae      4c8b94240801.  mov r10, qword [rsp + 0x108]
0x00003fb6      488b8c240001.  mov rcx, qword [rsp + 0x100]
0x00003fbe      48038c244801.  add rcx, qword [rsp + 0x148]
0x00003fc6      49c1ea07       shr r10, 7
0x00003fca      4931c2         xor r10, rax
0x00003fcd      498d040a       lea rax, [r10 + rcx]
0x00003fd1      4889d9         mov rcx, rbx
0x00003fd4      4989da         mov r10, rbx
0x00003fd7      48c1c913       ror rcx, 0x13
0x00003fdb      49c1c203       rol r10, 3
0x00003fdf      4931ca         xor r10, rcx
0x00003fe2      4889d9         mov rcx, rbx
0x00003fe5      48c1e906       shr rcx, 6
0x00003fe9      4931ca         xor r10, rcx
0x00003fec      48b9b5d58c8b.  movabs rcx, 0xfc19dc68b8cd5b5
0x00003ff6      4901c2         add r10, rax
0x00003ff9      4c89e8         mov rax, r13
0x00003ffc      4c31f0         xor rax, r14
0x00003fff      4c01d1         add rcx, r10
0x00004002      4c21e0         and rax, r12
0x00004005      4801ca         add rdx, rcx
0x00004008      4c89e1         mov rcx, r12
0x0000400b      4c31e8         xor rax, r13
0x0000400e      48c1c912       ror rcx, 0x12
0x00004012      4801c2         add rdx, rax
0x00004015      4c89e0         mov rax, r12
0x00004018      48c1c80e       ror rax, 0xe
0x0000401c      4831c1         xor rcx, rax
0x0000401f      4c89e0         mov rax, r12
0x00004022      48c1c017       rol rax, 0x17
0x00004026      4831c8         xor rax, rcx
0x00004029      4889f1         mov rcx, rsi
0x0000402c      4801d0         add rax, rdx
0x0000402f      4889f2         mov rdx, rsi
0x00004032      48c1c91c       ror rcx, 0x1c
0x00004036      48c1c21e       rol rdx, 0x1e
0x0000403a      4801c5         add rbp, rax
0x0000403d      4831ca         xor rdx, rcx
0x00004040      4889f1         mov rcx, rsi
0x00004043      48c1c119       rol rcx, 0x19
0x00004047      4831ca         xor rdx, rcx
0x0000404a      4889f9         mov rcx, rdi
0x0000404d      4809f1         or rcx, rsi
0x00004050      4921f1         and r9, rsi
0x00004053      4c21c1         and rcx, r8
0x00004056      4c09c9         or rcx, r9
0x00004059      4c8b8c241001.  mov r9, qword [rsp + 0x110]
0x00004061      4801d1         add rcx, rdx
0x00004064      488b94240801.  mov rdx, qword [rsp + 0x108]
0x0000406c      480394245001.  add rdx, qword [rsp + 0x150]
0x00004074      4801c1         add rcx, rax
0x00004077      488b84241001.  mov rax, qword [rsp + 0x110]
0x0000407f      49d1c9         ror r9, 1
0x00004082      48c1c808       ror rax, 8                              ; ../coreutils-8.31/lib/sha512.c:-111
0x00004086      4c31c8         xor rax, r9
0x00004089      4c8b8c241001.  mov r9, qword [rsp + 0x110]
0x00004091      49c1e907       shr r9, 7
0x00004095      4931c1         xor r9, rax
0x00004098      498d0411       lea rax, [r9 + rdx]
0x0000409c      4c89da         mov rdx, r11
0x0000409f      4d89d9         mov r9, r11
0x000040a2      48c1ca13       ror rdx, 0x13
0x000040a6      49c1c103       rol r9, 3
0x000040aa      4931d1         xor r9, rdx
0x000040ad      4c89da         mov rdx, r11
0x000040b0      48c1ea06       shr rdx, 6
0x000040b4      4931d1         xor r9, rdx
0x000040b7      4c89f2         mov rdx, r14
0x000040ba      4901c1         add r9, rax
0x000040bd      4c31e2         xor rdx, r12
0x000040c0      48b8659cac77.  movabs rax, 0x240ca1cc77ac9c65
0x000040ca      4c01c8         add rax, r9
0x000040cd      4821ea         and rdx, rbp
0x000040d0      4c31f2         xor rdx, r14
0x000040d3      4901c5         add r13, rax
0x000040d6      4889e8         mov rax, rbp
0x000040d9      4901d5         add r13, rdx
0x000040dc      4889ea         mov rdx, rbp
0x000040df      48c1c812       ror rax, 0x12
0x000040e3      48c1ca0e       ror rdx, 0xe
0x000040e7      4831d0         xor rax, rdx
0x000040ea      4889ea         mov rdx, rbp
0x000040ed      48c1c217       rol rdx, 0x17
0x000040f1      4831c2         xor rdx, rax
0x000040f4      4889c8         mov rax, rcx
0x000040f7      4c01ea         add rdx, r13
0x000040fa      4989cd         mov r13, rcx
0x000040fd      48c1c81c       ror rax, 0x1c
0x00004101      4901d0         add r8, rdx
0x00004104      49c1c51e       rol r13, 0x1e
0x00004108      4921cf         and r15, rcx
0x0000410b      4931c5         xor r13, rax
0x0000410e      4889c8         mov rax, rcx
0x00004111      48c1c019       rol rax, 0x19
0x00004115      4931c5         xor r13, rax
0x00004118      4889f0         mov rax, rsi
0x0000411b      4809c8         or rax, rcx
0x0000411e      4821f8         and rax, rdi
0x00004121      4c09f8         or rax, r15
0x00004124      4d89d7         mov r15, r10
0x00004127      4c01e8         add rax, r13
0x0000412a      4c8bac241801.  mov r13, qword [rsp + 0x118]
0x00004132      49c1cf13       ror r15, 0x13
0x00004136      4801d0         add rax, rdx
0x00004139      488b94241801.  mov rdx, qword [rsp + 0x118]
0x00004141      49c1cd08       ror r13, 8
0x00004145      48d1ca         ror rdx, 1
0x00004148      4c31ea         xor rdx, r13
0x0000414b      4c8bac241801.  mov r13, qword [rsp + 0x118]
0x00004153      49c1ed07       shr r13, 7
0x00004157      4931d5         xor r13, rdx
0x0000415a      488b94241001.  mov rdx, qword [rsp + 0x110]
0x00004162      480394245801.  add rdx, qword [rsp + 0x158]
0x0000416a      4901d5         add r13, rdx
0x0000416d      4c89d2         mov rdx, r10
0x00004170      48c1c203       rol rdx, 3
0x00004174      4c31fa         xor rdx, r15
0x00004177      4d89d7         mov r15, r10
0x0000417a      49c1ef06       shr r15, 6
0x0000417e      4c31fa         xor rdx, r15
0x00004181      4d8d7c1500     lea r15, [r13 + rdx]
0x00004186      4d89e5         mov r13, r12
0x00004189      48ba75022b59.  movabs rdx, 0x2de92c6f592b0275
0x00004193      4931ed         xor r13, rbp
0x00004196      4c01fa         add rdx, r15
0x00004199      4d21c5         and r13, r8
0x0000419c      4c897c2440     mov qword [rsp + 0x40], r15
0x000041a1      4d31e5         xor r13, r12
0x000041a4      4901d6         add r14, rdx
0x000041a7      4c89c2         mov rdx, r8
0x000041aa      4d01ee         add r14, r13
0x000041ad      4d89c5         mov r13, r8
0x000041b0      48c1ca12       ror rdx, 0x12
0x000041b4      49c1cd0e       ror r13, 0xe
0x000041b8      4989cf         mov r15, rcx
0x000041bb      4c31ea         xor rdx, r13
0x000041be      4d89c5         mov r13, r8
0x000041c1      49c1c517       rol r13, 0x17
0x000041c5      4931d5         xor r13, rdx
0x000041c8      4889c2         mov rdx, rax
0x000041cb      4921c7         and r15, rax
0x000041ce      4d01f5         add r13, r14
0x000041d1      4989c6         mov r14, rax
0x000041d4      48c1ca1c       ror rdx, 0x1c
0x000041d8      49c1c61e       rol r14, 0x1e
0x000041dc      4c01ef         add rdi, r13
0x000041df      4931d6         xor r14, rdx
0x000041e2      4889c2         mov rdx, rax
0x000041e5      48c1c219       rol rdx, 0x19
0x000041e9      4931d6         xor r14, rdx
0x000041ec      4889ca         mov rdx, rcx
0x000041ef      4809c2         or rdx, rax
0x000041f2      4821f2         and rdx, rsi
0x000041f5      4c09fa         or rdx, r15
0x000041f8      4c01f2         add rdx, r14
0x000041fb      4c8bb4242001.  mov r14, qword [rsp + 0x120]
0x00004203      4c01ea         add rdx, r13
0x00004206      4c8bac242001.  mov r13, qword [rsp + 0x120]
0x0000420e      49c1ce08       ror r14, 8
0x00004212      49d1cd         ror r13, 1
0x00004215      4d31f5         xor r13, r14
0x00004218      4c8bb4242001.  mov r14, qword [rsp + 0x120]
0x00004220      49c1ee07       shr r14, 7
0x00004224      4d31ee         xor r14, r13
0x00004227      4c8bac241801.  mov r13, qword [rsp + 0x118]
0x0000422f      4c03ac246001.  add r13, qword [rsp + 0x160]
0x00004237      4d01ee         add r14, r13
0x0000423a      4d89cd         mov r13, r9
0x0000423d      49c1cd13       ror r13, 0x13                           ; ../coreutils-8.31/lib/sha512.c:-110
0x00004241      4d89ef         mov r15, r13
0x00004244      4d89cd         mov r13, r9
0x00004247      49c1c503       rol r13, 3
0x0000424b      4d31fd         xor r13, r15
0x0000424e      4d89cf         mov r15, r9
0x00004251      49c1ef06       shr r15, 6
0x00004255      4d31fd         xor r13, r15
0x00004258      4989c7         mov r15, rax
0x0000425b      4d01ee         add r14, r13
0x0000425e      4989ed         mov r13, rbp
0x00004261      4c89742428     mov qword [rsp + 0x28], r14
0x00004266      49be83e4a66e.  movabs r14, 0x4a7484aa6ea6e483
0x00004270      4c03742428     add r14, qword [rsp + 0x28]
0x00004275      4d31c5         xor r13, r8
0x00004278      4921fd         and r13, rdi
0x0000427b      4931ed         xor r13, rbp
0x0000427e      4d01f4         add r12, r14
0x00004281      4989fe         mov r14, rdi
0x00004284      49c1ce0e       ror r14, 0xe
0x00004288      4f8d6c2500     lea r13, [r13 + r12]
0x0000428d      4921d7         and r15, rdx
0x00004290      4d89f4         mov r12, r14
0x00004293      4989fe         mov r14, rdi
0x00004296      49c1ce12       ror r14, 0x12
0x0000429a      4d31e6         xor r14, r12
0x0000429d      4989fc         mov r12, rdi
0x000042a0      49c1c417       rol r12, 0x17
0x000042a4      4d31f4         xor r12, r14
0x000042a7      4989d6         mov r14, rdx
0x000042aa      4d01ec         add r12, r13
0x000042ad      4989d5         mov r13, rdx
0x000042b0      49c1ce1c       ror r14, 0x1c
0x000042b4      49c1c51e       rol r13, 0x1e
0x000042b8      4c01e6         add rsi, r12
0x000042bb      4d31f5         xor r13, r14
0x000042be      4989d6         mov r14, rdx
0x000042c1      49c1c619       rol r14, 0x19
0x000042c5      4d31f5         xor r13, r14
0x000042c8      4989c6         mov r14, rax
0x000042cb      4909d6         or r14, rdx
0x000042ce      4921ce         and r14, rcx
0x000042d1      4d09fe         or r14, r15
0x000042d4      4d01ee         add r14, r13
0x000042d7      4c8bac242801.  mov r13, qword [rsp + 0x128]
0x000042df      4d01e6         add r14, r12
0x000042e2      49d1cd         ror r13, 1
0x000042e5      4d89ec         mov r12, r13
0x000042e8      4c8bac242801.  mov r13, qword [rsp + 0x128]
0x000042f0      49c1cd08       ror r13, 8
0x000042f4      4d31ec         xor r12, r13
0x000042f7      4c8bac242801.  mov r13, qword [rsp + 0x128]
0x000042ff      49c1ed07       shr r13, 7
0x00004303      4d31e5         xor r13, r12
0x00004306      4c8ba4242001.  mov r12, qword [rsp + 0x120]
0x0000430e      4c03a4246801.  add r12, qword [rsp + 0x168]
0x00004316      4d01e5         add r13, r12
0x00004319      4c8b642440     mov r12, qword [rsp + 0x40]             ; ../coreutils-8.31/lib/sha512.c:-108
0x0000431e      4d89e7         mov r15, r12
0x00004321      49c1c403       rol r12, 3                              ; ../coreutils-8.31/lib/sha512.c:-109
0x00004325      49c1cf13       ror r15, 0x13
0x00004329      4d31fc         xor r12, r15
0x0000432c      4c8b7c2440     mov r15, qword [rsp + 0x40]
0x00004331      49c1ef06       shr r15, 6
0x00004335      4d31fc         xor r12, r15
0x00004338      4f8d7c2500     lea r15, [r13 + r12]
0x0000433d      4d89c5         mov r13, r8
0x00004340      4931fd         xor r13, rdi
0x00004343      4d89ec         mov r12, r13
0x00004346      4c897c2430     mov qword [rsp + 0x30], r15
0x0000434b      49bdd4fb41bd.  movabs r13, 0x5cb0a9dcbd41fbd4
0x00004355      4921f4         and r12, rsi
0x00004358      4d89e7         mov r15, r12
0x0000435b      4d31c7         xor r15, r8
0x0000435e      4c036c2430     add r13, qword [rsp + 0x30]
0x00004363      4c01ed         add rbp, r13
0x00004366      4989f5         mov r13, rsi
0x00004369      4d8d242f       lea r12, [r15 + rbp]
0x0000436d      4889f5         mov rbp, rsi
0x00004370      49c1cd12       ror r13, 0x12
0x00004374      48c1cd0e       ror rbp, 0xe
0x00004378      4d89f7         mov r15, r14
0x0000437b      4931ed         xor r13, rbp
0x0000437e      4889f5         mov rbp, rsi
0x00004381      49c1c71e       rol r15, 0x1e
0x00004385      48c1c517       rol rbp, 0x17
0x00004389      4c31ed         xor rbp, r13
0x0000438c      4d89f5         mov r13, r14
0x0000438f      4c01e5         add rbp, r12
0x00004392      49c1cd1c       ror r13, 0x1c
0x00004396      4d89fc         mov r12, r15
0x00004399      4d31ec         xor r12, r13
0x0000439c      4d89f5         mov r13, r14
0x0000439f      4989d7         mov r15, rdx
0x000043a2      49c1c519       rol r13, 0x19
0x000043a6      4d21f7         and r15, r14
0x000043a9      4801e9         add rcx, rbp
0x000043ac      4d31ec         xor r12, r13
0x000043af      4989d5         mov r13, rdx
0x000043b2      4d09f5         or r13, r14
0x000043b5      4921c5         and r13, rax
0x000043b8      4d09fd         or r13, r15
0x000043bb      4c8bbc243001.  mov r15, qword [rsp + 0x130]
0x000043c3      4d01e5         add r13, r12
0x000043c6      4901ed         add r13, rbp
0x000043c9      488bac243001.  mov rbp, qword [rsp + 0x130]
0x000043d1      49d1cf         ror r15, 1
0x000043d4      48c1cd08       ror rbp, 8
0x000043d8      4c31fd         xor rbp, r15
0x000043db      4c8bbc243001.  mov r15, qword [rsp + 0x130]
0x000043e3      4c8b642428     mov r12, qword [rsp + 0x28]
0x000043e8      49c1ef07       shr r15, 7
0x000043ec      4c31fd         xor rbp, r15
0x000043ef      4d89e7         mov r15, r12
0x000043f2      49c1c403       rol r12, 3
0x000043f6      49c1cf13       ror r15, 0x13
0x000043fa      4803ac242801.  add rbp, qword [rsp + 0x128]
0x00004402      4d31fc         xor r12, r15
0x00004405      4c8b7c2428     mov r15, qword [rsp + 0x28]
0x0000440a      49c1ef06       shr r15, 6
0x0000440e      4801dd         add rbp, rbx
0x00004411      4d31fc         xor r12, r15
0x00004414      4c01e5         add rbp, r12
0x00004417      49bcb5531183.  movabs r12, 0x76f988da831153b5
0x00004421      48892c24       mov qword [rsp], rbp
0x00004425      4889fd         mov rbp, rdi
0x00004428      4c032424       add r12, qword [rsp]
0x0000442c      4831f5         xor rbp, rsi
0x0000442f      4821cd         and rbp, rcx
0x00004432      4989ef         mov r15, rbp
0x00004435      4931ff         xor r15, rdi
0x00004438      4d01e0         add r8, r12
0x0000443b      4b8d2c07       lea rbp, [r15 + r8]
0x0000443f      4989cf         mov r15, rcx
0x00004442      4989c8         mov r8, rcx
0x00004445      49c1cf12       ror r15, 0x12
0x00004449      49c1c80e       ror r8, 0xe
0x0000444d      4d89fc         mov r12, r15
0x00004450      4d89ef         mov r15, r13
0x00004453      4d31c4         xor r12, r8
0x00004456      4989c8         mov r8, rcx
0x00004459      49c1cf1c       ror r15, 0x1c
0x0000445d      49c1c017       rol r8, 0x17
0x00004461      4d31e0         xor r8, r12
0x00004464      4901e8         add r8, rbp
0x00004467      4c89ed         mov rbp, r13
0x0000446a      48c1c51e       rol rbp, 0x1e
0x0000446e      4c01c0         add rax, r8
0x00004471      4c31fd         xor rbp, r15
0x00004474      4d89ef         mov r15, r13
0x00004477      49c1c719       rol r15, 0x19
0x0000447b      4c31fd         xor rbp, r15
0x0000447e      4d89f7         mov r15, r14
0x00004481      4d09ef         or r15, r13
0x00004484      4d89fc         mov r12, r15
0x00004487      4d89f7         mov r15, r14
0x0000448a      4d21ef         and r15, r13
0x0000448d      4921d4         and r12, rdx
0x00004490      4d09fc         or r12, r15
0x00004493      4901ec         add r12, rbp
0x00004496      4d01c4         add r12, r8
0x00004499      4c8b84243801.  mov r8, qword [rsp + 0x138]
0x000044a1      49d1c8         ror r8, 1
0x000044a4      4c89c5         mov rbp, r8
0x000044a7      4c8b84243801.  mov r8, qword [rsp + 0x138]
0x000044af      49c1c808       ror r8, 8
0x000044b3      4931e8         xor r8, rbp
0x000044b6      488bac243801.  mov rbp, qword [rsp + 0x138]
0x000044be      48c1ed07       shr rbp, 7
0x000044c2      4931e8         xor r8, rbp
0x000044c5      488b6c2430     mov rbp, qword [rsp + 0x30]
0x000044ca      4c0384243001.  add r8, qword [rsp + 0x130]
0x000044d2      4989ef         mov r15, rbp
0x000044d5      4d01d8         add r8, r11
0x000044d8      49c1cf13       ror r15, 0x13
0x000044dc      48c1c503       rol rbp, 3
0x000044e0      4c31fd         xor rbp, r15
0x000044e3      4c8b7c2430     mov r15, qword [rsp + 0x30]
0x000044e8      49c1ef06       shr r15, 6
0x000044ec      4c31fd         xor rbp, r15
0x000044ef      4d89ef         mov r15, r13
0x000044f2      4901e8         add r8, rbp
0x000044f5      48bdabdf66ee.  movabs rbp, 0x983e5152ee66dfab
0x000044ff      4d21e7         and r15, r12
0x00004502      4c89442438     mov qword [rsp + 0x38], r8
0x00004507      48036c2438     add rbp, qword [rsp + 0x38]
0x0000450c      4989f0         mov r8, rsi
0x0000450f      4931c8         xor r8, rcx
0x00004512      4921c0         and r8, rax
0x00004515      4931f0         xor r8, rsi
0x00004518      4801ef         add rdi, rbp
0x0000451b      4889c5         mov rbp, rax
0x0000451e      4d8d0438       lea r8, [r8 + rdi]
0x00004522      4889c7         mov rdi, rax
0x00004525      48c1cd12       ror rbp, 0x12
0x00004529      48c1cf0e       ror rdi, 0xe
0x0000452d      4831fd         xor rbp, rdi
0x00004530      4889c7         mov rdi, rax
0x00004533      48c1c717       rol rdi, 0x17
0x00004537      4831ef         xor rdi, rbp
0x0000453a      4c89e5         mov rbp, r12
0x0000453d      4c01c7         add rdi, r8
0x00004540      4d89e0         mov r8, r12
0x00004543      48c1cd1c       ror rbp, 0x1c
0x00004547      49c1c01e       rol r8, 0x1e
0x0000454b      4801fa         add rdx, rdi
0x0000454e      4931e8         xor r8, rbp
0x00004551      4c89e5         mov rbp, r12
0x00004554      48c1c519       rol rbp, 0x19
0x00004558      4931e8         xor r8, rbp
0x0000455b      4c89ed         mov rbp, r13
0x0000455e      4c09e5         or rbp, r12
0x00004561      4c21f5         and rbp, r14
0x00004564      4c09fd         or rbp, r15
0x00004567      4c01c5         add rbp, r8
0x0000456a      4801fd         add rbp, rdi
0x0000456d      488bbc244001.  mov rdi, qword [rsp + 0x140]
0x00004575      48d1cf         ror rdi, 1
0x00004578      4989f8         mov r8, rdi
0x0000457b      488bbc244001.  mov rdi, qword [rsp + 0x140]
0x00004583      48c1cf08       ror rdi, 8
0x00004587      4c31c7         xor rdi, r8
0x0000458a      4c8b84244001.  mov r8, qword [rsp + 0x140]
0x00004592      49c1e807       shr r8, 7
0x00004596      4c31c7         xor rdi, r8
0x00004599      4c8b0424       mov r8, qword [rsp]
0x0000459d      4803bc243801.  add rdi, qword [rsp + 0x138]            ; ../coreutils-8.31/lib/sha512.c:-105
0x000045a5      4d89c7         mov r15, r8
0x000045a8      49c1c003       rol r8, 3
0x000045ac      49c1cf13       ror r15, 0x13
0x000045b0      4c01d7         add rdi, r10
0x000045b3      4d31f8         xor r8, r15
0x000045b6      4c8b3c24       mov r15, qword [rsp]
0x000045ba      49c1ef06       shr r15, 6
0x000045be      4d31f8         xor r8, r15
0x000045c1      4d89e7         mov r15, r12
0x000045c4      4c01c7         add rdi, r8
0x000045c7      49b81032b42d.  movabs r8, 0xa831c66d2db43210
0x000045d1      4921ef         and r15, rbp
0x000045d4      48897c2408     mov qword [rsp + 8], rdi
0x000045d9      4c03442408     add r8, qword [rsp + 8]
0x000045de      4889cf         mov rdi, rcx
0x000045e1      4831c7         xor rdi, rax
0x000045e4      4821d7         and rdi, rdx
0x000045e7      4831cf         xor rdi, rcx
0x000045ea      4c01c6         add rsi, r8
0x000045ed      4989d0         mov r8, rdx
0x000045f0      488d3c37       lea rdi, [rdi + rsi]
0x000045f4      4889d6         mov rsi, rdx
0x000045f7      49c1c812       ror r8, 0x12
0x000045fb      48c1ce0e       ror rsi, 0xe
0x000045ff      4931f0         xor r8, rsi
0x00004602      4889d6         mov rsi, rdx
0x00004605      48c1c617       rol rsi, 0x17
0x00004609      4c31c6         xor rsi, r8
0x0000460c      4989e8         mov r8, rbp
0x0000460f      4801fe         add rsi, rdi
0x00004612      4889ef         mov rdi, rbp
0x00004615      49c1c81c       ror r8, 0x1c
0x00004619      48c1c71e       rol rdi, 0x1e
0x0000461d      4901f6         add r14, rsi
0x00004620      4c31c7         xor rdi, r8
0x00004623      4989e8         mov r8, rbp
0x00004626      49c1c019       rol r8, 0x19
0x0000462a      4c31c7         xor rdi, r8
0x0000462d      4d89e0         mov r8, r12
0x00004630      4909e8         or r8, rbp
0x00004633      4d21e8         and r8, r13
0x00004636      4d09f8         or r8, r15
0x00004639      4901f8         add r8, rdi
0x0000463c      4901f0         add r8, rsi
0x0000463f      488bb4244801.  mov rsi, qword [rsp + 0x148]
0x00004647      48d1ce         ror rsi, 1
0x0000464a      4889f7         mov rdi, rsi
0x0000464d      488bb4244801.  mov rsi, qword [rsp + 0x148]
0x00004655      48c1ce08       ror rsi, 8
0x00004659      4831fe         xor rsi, rdi
0x0000465c      488bbc244801.  mov rdi, qword [rsp + 0x148]
0x00004664      48c1ef07       shr rdi, 7
0x00004668      4831fe         xor rsi, rdi
0x0000466b      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00004670      4803b4244001.  add rsi, qword [rsp + 0x140]
0x00004678      4989ff         mov r15, rdi
0x0000467b      48c1c703       rol rdi, 3
0x0000467f      49c1cf13       ror r15, 0x13
0x00004683      4c01ce         add rsi, r9
0x00004686      4c31ff         xor rdi, r15
0x00004689      4c8b7c2438     mov r15, qword [rsp + 0x38]
0x0000468e      49c1ef06       shr r15, 6
0x00004692      4c31ff         xor rdi, r15
0x00004695      4989ef         mov r15, rbp
0x00004698      4801fe         add rsi, rdi
0x0000469b      48bf3f21fb98.  movabs rdi, 0xb00327c898fb213f
0x000046a5      4889742410     mov qword [rsp + 0x10], rsi
0x000046aa      48037c2410     add rdi, qword [rsp + 0x10]
0x000046af      4889c6         mov rsi, rax
0x000046b2      4831d6         xor rsi, rdx
0x000046b5      4c21f6         and rsi, r14
0x000046b8      4831c6         xor rsi, rax
0x000046bb      4801f9         add rcx, rdi
0x000046be      4c89f7         mov rdi, r14
0x000046c1      488d340e       lea rsi, [rsi + rcx]
0x000046c5      4c89f1         mov rcx, r14
0x000046c8      48c1cf12       ror rdi, 0x12
0x000046cc      48c1c90e       ror rcx, 0xe
0x000046d0      4831cf         xor rdi, rcx
0x000046d3      4c89f1         mov rcx, r14
0x000046d6      48c1c117       rol rcx, 0x17
0x000046da      4831f9         xor rcx, rdi
0x000046dd      4c89c7         mov rdi, r8
0x000046e0      4801f1         add rcx, rsi
0x000046e3      4c89c6         mov rsi, r8
0x000046e6      48c1cf1c       ror rdi, 0x1c
0x000046ea      48c1c61e       rol rsi, 0x1e
0x000046ee      4901cd         add r13, rcx
0x000046f1      4831fe         xor rsi, rdi
0x000046f4      4c89c7         mov rdi, r8
0x000046f7      48c1c719       rol rdi, 0x19
0x000046fb      4831fe         xor rsi, rdi
0x000046fe      4889ef         mov rdi, rbp
0x00004701      4c09c7         or rdi, r8
0x00004704      4c21e7         and rdi, r12
0x00004707      4d21c7         and r15, r8
0x0000470a      4c09ff         or rdi, r15
0x0000470d      4801f7         add rdi, rsi
0x00004710      4801cf         add rdi, rcx
0x00004713      488b8c245001.  mov rcx, qword [rsp + 0x150]
0x0000471b      48d1c9         ror rcx, 1
0x0000471e      4889ce         mov rsi, rcx
0x00004721      488b8c245001.  mov rcx, qword [rsp + 0x150]
0x00004729      48c1c908       ror rcx, 8
0x0000472d      4831f1         xor rcx, rsi
0x00004730      488bb4245001.  mov rsi, qword [rsp + 0x150]
0x00004738      48c1ee07       shr rsi, 7
0x0000473c      4831f1         xor rcx, rsi
0x0000473f      488b742408     mov rsi, qword [rsp + 8]
0x00004744      48038c244801.  add rcx, qword [rsp + 0x148]
0x0000474c      48034c2440     add rcx, qword [rsp + 0x40]
0x00004751      4989f7         mov r15, rsi
0x00004754      48c1c603       rol rsi, 3
0x00004758      49c1cf13       ror r15, 0x13
0x0000475c      4c31fe         xor rsi, r15
0x0000475f      4c8b7c2408     mov r15, qword [rsp + 8]
0x00004764      49c1ef06       shr r15, 6
0x00004768      4c31fe         xor rsi, r15
0x0000476b      49bfe40eefbe.  movabs r15, 0xbf597fc7beef0ee4
0x00004775      4801f1         add rcx, rsi
0x00004778      4889ce         mov rsi, rcx
0x0000477b      4889d1         mov rcx, rdx
0x0000477e      4c31f1         xor rcx, r14
0x00004781      4901f7         add r15, rsi
0x00004784      4889742448     mov qword [rsp + 0x48], rsi
0x00004789      4c21e9         and rcx, r13
0x0000478c      4c01f8         add rax, r15
0x0000478f      4989ff         mov r15, rdi
0x00004792      4831d1         xor rcx, rdx
0x00004795      49c1c71e       rol r15, 0x1e
0x00004799      488d3401       lea rsi, [rcx + rax]
0x0000479d      4c89e8         mov rax, r13
0x000047a0      48c1c80e       ror rax, 0xe
0x000047a4      4889c1         mov rcx, rax
0x000047a7      4c89e8         mov rax, r13
0x000047aa      48c1c812       ror rax, 0x12
0x000047ae      4831c8         xor rax, rcx
0x000047b1      4c89e9         mov rcx, r13
0x000047b4      48c1c117       rol rcx, 0x17
0x000047b8      4831c1         xor rcx, rax
0x000047bb      4889f8         mov rax, rdi
0x000047be      4801f1         add rcx, rsi
0x000047c1      48c1c81c       ror rax, 0x1c
0x000047c5      4c89fe         mov rsi, r15
0x000047c8      4901cc         add r12, rcx
0x000047cb      4831c6         xor rsi, rax
0x000047ce      4889f8         mov rax, rdi
0x000047d1      48c1c019       rol rax, 0x19
0x000047d5      4d89c7         mov r15, r8
0x000047d8      4831c6         xor rsi, rax
0x000047db      4c89c0         mov rax, r8
0x000047de      4921ff         and r15, rdi
0x000047e1      4809f8         or rax, rdi
0x000047e4      4821e8         and rax, rbp
0x000047e7      4c09f8         or rax, r15
0x000047ea      4c8bbc245801.  mov r15, qword [rsp + 0x158]
0x000047f2      4801f0         add rax, rsi
0x000047f5      4801c8         add rax, rcx
0x000047f8      488b8c245801.  mov rcx, qword [rsp + 0x158]
0x00004800      49c1ef07       shr r15, 7
0x00004804      48d1c9         ror rcx, 1
0x00004807      4889ce         mov rsi, rcx
0x0000480a      488b8c245801.  mov rcx, qword [rsp + 0x158]
0x00004812      48c1c908       ror rcx, 8
0x00004816      4831f1         xor rcx, rsi
0x00004819      488b742410     mov rsi, qword [rsp + 0x10]
0x0000481e      4c31f9         xor rcx, r15
0x00004821      48038c245001.  add rcx, qword [rsp + 0x150]
0x00004829      48034c2428     add rcx, qword [rsp + 0x28]
0x0000482e      4989f7         mov r15, rsi
0x00004831      48c1c603       rol rsi, 3
0x00004835      49c1cf13       ror r15, 0x13
0x00004839      4c31fe         xor rsi, r15
0x0000483c      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x00004841      49c1ef06       shr r15, 6
0x00004845      4c31fe         xor rsi, r15
0x00004848      4989ff         mov r15, rdi
0x0000484b      4801f1         add rcx, rsi
0x0000484e      48bec28fa83d.  movabs rsi, 0xc6e00bf33da88fc2
0x00004858      48894c2418     mov qword [rsp + 0x18], rcx
0x0000485d      4803742418     add rsi, qword [rsp + 0x18]
0x00004862      4c89f1         mov rcx, r14
0x00004865      4c31e9         xor rcx, r13
0x00004868      4c21e1         and rcx, r12
0x0000486b      4c31f1         xor rcx, r14
0x0000486e      4801f2         add rdx, rsi
0x00004871      4c89e6         mov rsi, r12
0x00004874      488d0c11       lea rcx, [rcx + rdx]
0x00004878      4c89e2         mov rdx, r12
0x0000487b      48c1ce12       ror rsi, 0x12
0x0000487f      48c1ca0e       ror rdx, 0xe
0x00004883      4831d6         xor rsi, rdx
0x00004886      4c89e2         mov rdx, r12
0x00004889      48c1c217       rol rdx, 0x17
0x0000488d      4831f2         xor rdx, rsi
0x00004890      4801ca         add rdx, rcx
0x00004893      4889c1         mov rcx, rax
0x00004896      4921c7         and r15, rax
0x00004899      48c1c91c       ror rcx, 0x1c
0x0000489d      4801d5         add rbp, rdx
0x000048a0      4889ce         mov rsi, rcx
0x000048a3      4889c1         mov rcx, rax
0x000048a6      48c1c11e       rol rcx, 0x1e
0x000048aa      4831f1         xor rcx, rsi
0x000048ad      4889c6         mov rsi, rax
0x000048b0      48c1c619       rol rsi, 0x19
0x000048b4      4831f1         xor rcx, rsi
0x000048b7      4889fe         mov rsi, rdi
0x000048ba      4809c6         or rsi, rax
0x000048bd      4c21c6         and rsi, r8
0x000048c0      4c09fe         or rsi, r15
0x000048c3      4801ce         add rsi, rcx
0x000048c6      4801d6         add rsi, rdx
0x000048c9      488b94246001.  mov rdx, qword [rsp + 0x160]
0x000048d1      48d1ca         ror rdx, 1
0x000048d4      4889d1         mov rcx, rdx
0x000048d7      488b94246001.  mov rdx, qword [rsp + 0x160]
0x000048df      48c1ca08       ror rdx, 8
0x000048e3      4831ca         xor rdx, rcx
0x000048e6      488b8c246001.  mov rcx, qword [rsp + 0x160]
0x000048ee      48c1e907       shr rcx, 7
0x000048f2      4831ca         xor rdx, rcx
0x000048f5      488b4c2448     mov rcx, qword [rsp + 0x48]
0x000048fa      480394245801.  add rdx, qword [rsp + 0x158]
0x00004902      4803542430     add rdx, qword [rsp + 0x30]
0x00004907      4989cf         mov r15, rcx
0x0000490a      48c1c103       rol rcx, 3
0x0000490e      49c1cf13       ror r15, 0x13
0x00004912      4c31f9         xor rcx, r15
0x00004915      4c8b7c2448     mov r15, qword [rsp + 0x48]
0x0000491a      49c1ef06       shr r15, 6
0x0000491e      4c31f9         xor rcx, r15
0x00004921      4801ca         add rdx, rcx
0x00004924      48b925a70a93.  movabs rcx, 0xd5a79147930aa725
0x0000492e      4989d7         mov r15, rdx
0x00004931      4c89ea         mov rdx, r13
0x00004934      4c31e2         xor rdx, r12
0x00004937      4c01f9         add rcx, r15
0x0000493a      4c897c2420     mov qword [rsp + 0x20], r15
0x0000493f      4821ea         and rdx, rbp
0x00004942      4901ce         add r14, rcx
0x00004945      4889e9         mov rcx, rbp
0x00004948      4c31ea         xor rdx, r13
0x0000494b      4989c7         mov r15, rax
0x0000494e      4901d6         add r14, rdx
0x00004951      4889ea         mov rdx, rbp
0x00004954      48c1ca0e       ror rdx, 0xe
0x00004958      48c1c912       ror rcx, 0x12
0x0000495c      4921f7         and r15, rsi
0x0000495f      4831d1         xor rcx, rdx
0x00004962      4889ea         mov rdx, rbp
0x00004965      48c1c217       rol rdx, 0x17
0x00004969      4831ca         xor rdx, rcx
0x0000496c      4c01f2         add rdx, r14
0x0000496f      4989f6         mov r14, rsi
0x00004972      49c1ce1c       ror r14, 0x1c
0x00004976      4901d0         add r8, rdx
0x00004979      4c89f1         mov rcx, r14
0x0000497c      4989f6         mov r14, rsi
0x0000497f      49c1c61e       rol r14, 0x1e
0x00004983      4931ce         xor r14, rcx
0x00004986      4889f1         mov rcx, rsi
0x00004989      48c1c119       rol rcx, 0x19
0x0000498d      4931ce         xor r14, rcx
0x00004990      4889c1         mov rcx, rax
0x00004993      4809f1         or rcx, rsi
0x00004996      4821f9         and rcx, rdi
0x00004999      4c09f9         or rcx, r15
0x0000499c      4c01f1         add rcx, r14
0x0000499f      4801d1         add rcx, rdx
0x000049a2      488b94246801.  mov rdx, qword [rsp + 0x168]
0x000049aa      48d1ca         ror rdx, 1
0x000049ad      4989d6         mov r14, rdx
0x000049b0      488b94246801.  mov rdx, qword [rsp + 0x168]
0x000049b8      48c1ca08       ror rdx, 8
0x000049bc      4c31f2         xor rdx, r14
0x000049bf      4c8bb4246801.  mov r14, qword [rsp + 0x168]
0x000049c7      49c1ee07       shr r14, 7
0x000049cb      4c31f2         xor rdx, r14
0x000049ce      4c8b742418     mov r14, qword [rsp + 0x18]
0x000049d3      480394246001.  add rdx, qword [rsp + 0x160]
0x000049db      48031424       add rdx, qword [rsp]
0x000049df      4d89f7         mov r15, r14                            ; ../coreutils-8.31/lib/sha512.c:-101
0x000049e2      49c1c603       rol r14, 3                              ; ../coreutils-8.31/lib/sha512.c:-100
0x000049e6      49c1cf13       ror r15, 0x13
0x000049ea      4d31fe         xor r14, r15
0x000049ed      4c8b7c2418     mov r15, qword [rsp + 0x18]
0x000049f2      49c1ef06       shr r15, 6
0x000049f6      4d31fe         xor r14, r15
0x000049f9      4c01f2         add rdx, r14
0x000049fc      4989d7         mov r15, rdx
0x000049ff      4c89e2         mov rdx, r12
0x00004a02      4831ea         xor rdx, rbp
0x00004a05      4c897c2458     mov qword [rsp + 0x58], r15
0x00004a0a      4989d6         mov r14, rdx
0x00004a0d      48ba6f8203e0.  movabs rdx, 0x6ca6351e003826f
0x00004a17      4d21c6         and r14, r8
0x00004a1a      4c01fa         add rdx, r15
0x00004a1d      4989f7         mov r15, rsi
0x00004a20      4901d5         add r13, rdx
0x00004a23      4c89c2         mov rdx, r8
0x00004a26      4d31e6         xor r14, r12
0x00004a29      48c1ca0e       ror rdx, 0xe
0x00004a2d      4d01f5         add r13, r14
0x00004a30      4921cf         and r15, rcx
0x00004a33      4989d6         mov r14, rdx
0x00004a36      4c89c2         mov rdx, r8
0x00004a39      48c1ca12       ror rdx, 0x12
0x00004a3d      4c31f2         xor rdx, r14
0x00004a40      4d89c6         mov r14, r8
0x00004a43      49c1c617       rol r14, 0x17
0x00004a47      4931d6         xor r14, rdx
0x00004a4a      4889ca         mov rdx, rcx
0x00004a4d      4d01ee         add r14, r13
0x00004a50      48c1ca1c       ror rdx, 0x1c
0x00004a54      4e8d2c37       lea r13, [rdi + r14]
0x00004a58      4889cf         mov rdi, rcx
0x00004a5b      48c1c71e       rol rdi, 0x1e
0x00004a5f      4831d7         xor rdi, rdx
0x00004a62      4889ca         mov rdx, rcx
0x00004a65      48c1c219       rol rdx, 0x19
0x00004a69      4831d7         xor rdi, rdx
0x00004a6c      4889f2         mov rdx, rsi
0x00004a6f      4809ca         or rdx, rcx
0x00004a72      4821c2         and rdx, rax
0x00004a75      4c09fa         or rdx, r15
0x00004a78      4801fa         add rdx, rdi
0x00004a7b      4889df         mov rdi, rbx
0x00004a7e      48d1cf         ror rdi, 1
0x00004a81      4c01f2         add rdx, r14
0x00004a84      4989fe         mov r14, rdi
0x00004a87      4889df         mov rdi, rbx
0x00004a8a      48c1cf08       ror rdi, 8
0x00004a8e      4c31f7         xor rdi, r14
0x00004a91      4989de         mov r14, rbx
0x00004a94      49c1ee07       shr r14, 7
0x00004a98      4c31f7         xor rdi, r14
0x00004a9b      4803bc246801.  add rdi, qword [rsp + 0x168]
0x00004aa3      48037c2438     add rdi, qword [rsp + 0x38]
0x00004aa8      4c8b742420     mov r14, qword [rsp + 0x20]
0x00004aad      4d89f7         mov r15, r14
0x00004ab0      49c1c603       rol r14, 3
0x00004ab4      49c1cf13       ror r15, 0x13
0x00004ab8      4d31fe         xor r14, r15
0x00004abb      4c8b7c2420     mov r15, qword [rsp + 0x20]
0x00004ac0      49c1ef06       shr r15, 6
0x00004ac4      4d31fe         xor r14, r15
0x00004ac7      4989cf         mov r15, rcx
0x00004aca      4c01f7         add rdi, r14
0x00004acd      49be706e0e0a.  movabs r14, 0x142929670a0e6e70
0x00004ad7      4921d7         and r15, rdx
0x00004ada      48897c2450     mov qword [rsp + 0x50], rdi
0x00004adf      4c03742450     add r14, qword [rsp + 0x50]
0x00004ae4      4889ef         mov rdi, rbp
0x00004ae7      4c31c7         xor rdi, r8
0x00004aea      4c21ef         and rdi, r13
0x00004aed      4831ef         xor rdi, rbp
0x00004af0      4d01f4         add r12, r14
0x00004af3      4a8d3c27       lea rdi, [rdi + r12]
0x00004af7      4d89ec         mov r12, r13
0x00004afa      49c1cc0e       ror r12, 0xe
0x00004afe      4d89e6         mov r14, r12
0x00004b01      4d89ec         mov r12, r13
0x00004b04      49c1cc12       ror r12, 0x12
0x00004b08      4d31f4         xor r12, r14
0x00004b0b      4d89ee         mov r14, r13
0x00004b0e      49c1c617       rol r14, 0x17
0x00004b12      4d31f4         xor r12, r14
0x00004b15      4901fc         add r12, rdi
0x00004b18      4a8d3c20       lea rdi, [rax + r12]
0x00004b1c      4889d0         mov rax, rdx
0x00004b1f      48c1c81c       ror rax, 0x1c
0x00004b23      4989c6         mov r14, rax
0x00004b26      4889d0         mov rax, rdx
0x00004b29      48c1c01e       rol rax, 0x1e
0x00004b2d      4c31f0         xor rax, r14
0x00004b30      4989d6         mov r14, rdx
0x00004b33      49c1c619       rol r14, 0x19
0x00004b37      4c31f0         xor rax, r14
0x00004b3a      4989ce         mov r14, rcx
0x00004b3d      4909d6         or r14, rdx
0x00004b40      4921f6         and r14, rsi
0x00004b43      4d09fe         or r14, r15
0x00004b46      4c8b7c2458     mov r15, qword [rsp + 0x58]
0x00004b4b      4901c6         add r14, rax
0x00004b4e      4c89d8         mov rax, r11
0x00004b51      48d1c8         ror rax, 1
0x00004b54      4d01f4         add r12, r14
0x00004b57      4989c6         mov r14, rax
0x00004b5a      4c89d8         mov rax, r11
0x00004b5d      48c1c808       ror rax, 8
0x00004b61      4c31f0         xor rax, r14
0x00004b64      4d89de         mov r14, r11
0x00004b67      49c1ee07       shr r14, 7
0x00004b6b      4c31f0         xor rax, r14                            ; ../coreutils-8.31/lib/sha512.c:-99
0x00004b6e      4d89fe         mov r14, r15                            ; ../coreutils-8.31/lib/sha512.c:-98
0x00004b71      4801c3         add rbx, rax
0x00004b74      4c89f8         mov rax, r15
0x00004b77      48035c2408     add rbx, qword [rsp + 8]
0x00004b7c      49c1ce13       ror r14, 0x13
0x00004b80      48c1c003       rol rax, 3
0x00004b84      4c31f0         xor rax, r14
0x00004b87      4d89fe         mov r14, r15
0x00004b8a      49c1ee06       shr r14, 6
0x00004b8e      4c31f0         xor rax, r14
0x00004b91      4989d6         mov r14, rdx
0x00004b94      4c8d3c03       lea r15, [rbx + rax]
0x00004b98      4c89c0         mov rax, r8
0x00004b9b      48bbfc2fd246.  movabs rbx, 0x27b70a8546d22ffc
0x00004ba5      4c31e8         xor rax, r13
0x00004ba8      4d21e6         and r14, r12
0x00004bab      4c01fb         add rbx, r15
0x00004bae      4821f8         and rax, rdi
0x00004bb1      4c31c0         xor rax, r8
0x00004bb4      4801dd         add rbp, rbx
0x00004bb7      4889fb         mov rbx, rdi
0x00004bba      4801c5         add rbp, rax
0x00004bbd      4889f8         mov rax, rdi
0x00004bc0      48c1cb0e       ror rbx, 0xe
0x00004bc4      48c1c812       ror rax, 0x12
0x00004bc8      4831d8         xor rax, rbx
0x00004bcb      4889fb         mov rbx, rdi
0x00004bce      48c1c317       rol rbx, 0x17
0x00004bd2      4831d8         xor rax, rbx
0x00004bd5      4c89e3         mov rbx, r12
0x00004bd8      4801e8         add rax, rbp
0x00004bdb      4c89e5         mov rbp, r12
0x00004bde      48c1c31e       rol rbx, 0x1e
0x00004be2      48c1cd1c       ror rbp, 0x1c
0x00004be6      4801c6         add rsi, rax
0x00004be9      4831eb         xor rbx, rbp
0x00004bec      4c89e5         mov rbp, r12
0x00004bef      48c1c519       rol rbp, 0x19
0x00004bf3      4831eb         xor rbx, rbp
0x00004bf6      4889d5         mov rbp, rdx
0x00004bf9      4c09e5         or rbp, r12
0x00004bfc      4821cd         and rbp, rcx
0x00004bff      4c09f5         or rbp, r14
0x00004c02      4c8b742450     mov r14, qword [rsp + 0x50]
0x00004c07      4801eb         add rbx, rbp
0x00004c0a      4c89d5         mov rbp, r10
0x00004c0d      4801c3         add rbx, rax
0x00004c10      4c89d0         mov rax, r10
0x00004c13      48d1cd         ror rbp, 1
0x00004c16      48c1c808       ror rax, 8
0x00004c1a      4831e8         xor rax, rbp
0x00004c1d      4c89d5         mov rbp, r10
0x00004c20      48c1ed07       shr rbp, 7
0x00004c24      4831e8         xor rax, rbp
0x00004c27      4c89f5         mov rbp, r14
0x00004c2a      4901c3         add r11, rax
0x00004c2d      4c89f0         mov rax, r14
0x00004c30      4c035c2410     add r11, qword [rsp + 0x10]
0x00004c35      48c1cd13       ror rbp, 0x13
0x00004c39      48c1c003       rol rax, 3
0x00004c3d      4831e8         xor rax, rbp
0x00004c40      4c89f5         mov rbp, r14
0x00004c43      48c1ed06       shr rbp, 6
0x00004c47      4831e8         xor rax, rbp
0x00004c4a      4c89e5         mov rbp, r12
0x00004c4d      4d8d3403       lea r14, [r11 + rax]
0x00004c51      4c89e8         mov rax, r13
0x00004c54      49bb26c9265c.  movabs r11, 0x2e1b21385c26c926
0x00004c5e      4831f8         xor rax, rdi
0x00004c61      4821dd         and rbp, rbx
0x00004c64      4d01f3         add r11, r14
0x00004c67      4821f0         and rax, rsi
0x00004c6a      4c31e8         xor rax, r13
0x00004c6d      4d01d8         add r8, r11
0x00004c70      4989f3         mov r11, rsi
0x00004c73      4901c0         add r8, rax
0x00004c76      4889f0         mov rax, rsi
0x00004c79      49c1cb0e       ror r11, 0xe
0x00004c7d      48c1c812       ror rax, 0x12
0x00004c81      4c31d8         xor rax, r11
0x00004c84      4989f3         mov r11, rsi
0x00004c87      49c1c317       rol r11, 0x17
0x00004c8b      4c31d8         xor rax, r11
0x00004c8e      4989db         mov r11, rbx
0x00004c91      4c01c0         add rax, r8
0x00004c94      4989d8         mov r8, rbx
0x00004c97      49c1cb1c       ror r11, 0x1c
0x00004c9b      49c1c01e       rol r8, 0x1e
0x00004c9f      4801c1         add rcx, rax
0x00004ca2      4d31d8         xor r8, r11
0x00004ca5      4989db         mov r11, rbx
0x00004ca8      49c1c319       rol r11, 0x19
0x00004cac      4d31d8         xor r8, r11
0x00004caf      4d89e3         mov r11, r12
0x00004cb2      4909db         or r11, rbx                             ; ../coreutils-8.31/lib/sha512.c:-96
0x00004cb5      4921d3         and r11, rdx
0x00004cb8      4909eb         or r11, rbp
0x00004cbb      4d01d8         add r8, r11
0x00004cbe      4d89cb         mov r11, r9
0x00004cc1      4901c0         add r8, rax
0x00004cc4      4c89c8         mov rax, r9
0x00004cc7      49d1cb         ror r11, 1
0x00004cca      48c1c808       ror rax, 8
0x00004cce      4c89c5         mov rbp, r8
0x00004cd1      4c31d8         xor rax, r11
0x00004cd4      4d89cb         mov r11, r9
0x00004cd7      48c1c519       rol rbp, 0x19
0x00004cdb      49c1eb07       shr r11, 7
0x00004cdf      4c31d8         xor rax, r11
0x00004ce2      4d89fb         mov r11, r15                            ; ../coreutils-8.31/lib/sha512.c:-97
0x00004ce5      4901c2         add r10, rax                            ; ../coreutils-8.31/lib/sha512.c:-96
0x00004ce8      4c89f8         mov rax, r15
0x00004ceb      4c03542448     add r10, qword [rsp + 0x48]
0x00004cf0      49c1cb13       ror r11, 0x13
0x00004cf4      48c1c003       rol rax, 3
0x00004cf8      4c31d8         xor rax, r11
0x00004cfb      4d89fb         mov r11, r15
0x00004cfe      49c1eb06       shr r11, 6
0x00004d02      4c31d8         xor rax, r11
0x00004d05      4901c2         add r10, rax
0x00004d08      4889f8         mov rax, rdi
0x00004d0b      4d89d3         mov r11, r10
0x00004d0e      4831f0         xor rax, rsi
0x00004d11      49baed2ac45a.  movabs r10, 0x4d2c6dfc5ac42aed
0x00004d1b      4d01da         add r10, r11
0x00004d1e      4821c8         and rax, rcx
0x00004d21      4c895c2460     mov qword [rsp + 0x60], r11
0x00004d26      4831f8         xor rax, rdi
0x00004d29      4d01d5         add r13, r10
0x00004d2c      4989ca         mov r10, rcx
0x00004d2f      4901c5         add r13, rax
0x00004d32      4889c8         mov rax, rcx
0x00004d35      49c1ca0e       ror r10, 0xe
0x00004d39      48c1c812       ror rax, 0x12
0x00004d3d      4c31d0         xor rax, r10
0x00004d40      4989ca         mov r10, rcx
0x00004d43      49c1c217       rol r10, 0x17
0x00004d47      4c31d0         xor rax, r10
0x00004d4a      4d89c2         mov r10, r8
0x00004d4d      49c1ca1c       ror r10, 0x1c
0x00004d51      4c01e8         add rax, r13
0x00004d54      4c8b6c2440     mov r13, qword [rsp + 0x40]
0x00004d59      4d89d3         mov r11, r10
0x00004d5c      4d89c2         mov r10, r8
0x00004d5f      4801c2         add rdx, rax
0x00004d62      49c1c21e       rol r10, 0x1e
0x00004d66      4d31da         xor r10, r11
0x00004d69      4931ea         xor r10, rbp
0x00004d6c      4889dd         mov rbp, rbx
0x00004d6f      4c09c5         or rbp, r8
0x00004d72      4989eb         mov r11, rbp
0x00004d75      4889dd         mov rbp, rbx
0x00004d78      4c21c5         and rbp, r8
0x00004d7b      4d21e3         and r11, r12
0x00004d7e      4909eb         or r11, rbp                             ; ../coreutils-8.31/lib/sha512.c:-95
0x00004d81      4c89f5         mov rbp, r14
0x00004d84      4d01da         add r10, r11
0x00004d87      4d89eb         mov r11, r13
0x00004d8a      48c1ed06       shr rbp, 6
0x00004d8e      4901c2         add r10, rax
0x00004d91      4c89e8         mov rax, r13
0x00004d94      49d1cb         ror r11, 1
0x00004d97      48c1c808       ror rax, 8
0x00004d9b      4c31d8         xor rax, r11
0x00004d9e      4d89eb         mov r11, r13
0x00004da1      49c1eb07       shr r11, 7
0x00004da5      4c31d8         xor rax, r11
0x00004da8      4901c1         add r9, rax
0x00004dab      4c89f0         mov rax, r14
0x00004dae      4c034c2418     add r9, qword [rsp + 0x18]
0x00004db3      48c1c813       ror rax, 0x13
0x00004db7      4989c3         mov r11, rax
0x00004dba      4c89f0         mov rax, r14
0x00004dbd      48c1c003       rol rax, 3
0x00004dc1      4c31d8         xor rax, r11
0x00004dc4      4831e8         xor rax, rbp
0x00004dc7      4901c1         add r9, rax
0x00004dca      4c89cd         mov rbp, r9
0x00004dcd      4989f1         mov r9, rsi
0x00004dd0      4931c9         xor r9, rcx
0x00004dd3      48896c2440     mov qword [rsp + 0x40], rbp
0x00004dd8      4c89c8         mov rax, r9
0x00004ddb      49b9dfb3959d.  movabs r9, 0x53380d139d95b3df
0x00004de5      4901e9         add r9, rbp
0x00004de8      4821d0         and rax, rdx
0x00004deb      4c89c5         mov rbp, r8
0x00004dee      4831f0         xor rax, rsi
0x00004df1      4c01cf         add rdi, r9
0x00004df4      4989d1         mov r9, rdx
0x00004df7      4801c7         add rdi, rax
0x00004dfa      4889d0         mov rax, rdx
0x00004dfd      49c1c90e       ror r9, 0xe
0x00004e01      48c1c812       ror rax, 0x12
0x00004e05      4c31c8         xor rax, r9
0x00004e08      4989d1         mov r9, rdx
0x00004e0b      49c1c117       rol r9, 0x17
0x00004e0f      4c31c8         xor rax, r9
0x00004e12      4801f8         add rax, rdi
0x00004e15      4c89d7         mov rdi, r10
0x00004e18      48c1cf1c       ror rdi, 0x1c
0x00004e1c      4d8d0c04       lea r9, [r12 + rax]
0x00004e20      4c8b642428     mov r12, qword [rsp + 0x28]
0x00004e25      4989fb         mov r11, rdi
0x00004e28      4c89d7         mov rdi, r10
0x00004e2b      48c1c71e       rol rdi, 0x1e
0x00004e2f      4c21d5         and rbp, r10
0x00004e32      4c31df         xor rdi, r11
0x00004e35      4d89d3         mov r11, r10
0x00004e38      49c1c319       rol r11, 0x19
0x00004e3c      4c31df         xor rdi, r11
0x00004e3f      4d89c3         mov r11, r8
0x00004e42      4d09d3         or r11, r10
0x00004e45      4921db         and r11, rbx
0x00004e48      4909eb         or r11, rbp
0x00004e4b      4c01df         add rdi, r11
0x00004e4e      4d89e3         mov r11, r12
0x00004e51      4801c7         add rdi, rax
0x00004e54      4c89e0         mov rax, r12
0x00004e57      49d1cb         ror r11, 1
0x00004e5a      48c1c808       ror rax, 8
0x00004e5e      4c31d8         xor rax, r11
0x00004e61      4d89e3         mov r11, r12
0x00004e64      49c1eb07       shr r11, 7
0x00004e68      4c31d8         xor rax, r11
0x00004e6b      4c01e8         add rax, r13
0x00004e6e      4c8b6c2460     mov r13, qword [rsp + 0x60]
0x00004e73      4803442420     add rax, qword [rsp + 0x20]
0x00004e78      4c89ed         mov rbp, r13
0x00004e7b      4d89eb         mov r11, r13
0x00004e7e      48c1cd13       ror rbp, 0x13
0x00004e82      49c1c303       rol r11, 3
0x00004e86      4931eb         xor r11, rbp
0x00004e89      4c89ed         mov rbp, r13
0x00004e8c      48c1ed06       shr rbp, 6
0x00004e90      4931eb         xor r11, rbp
0x00004e93      4c89d5         mov rbp, r10
0x00004e96      4c01d8         add rax, r11
0x00004e99      49bbde63af8b.  movabs r11, 0x650a73548baf63de
0x00004ea3      4989c5         mov r13, rax
0x00004ea6      4889c8         mov rax, rcx
0x00004ea9      4831d0         xor rax, rdx
0x00004eac      4d01eb         add r11, r13
0x00004eaf      4c896c2428     mov qword [rsp + 0x28], r13
0x00004eb4      4c21c8         and rax, r9
0x00004eb7      4c01de         add rsi, r11
0x00004eba      4d89cb         mov r11, r9
0x00004ebd      4831c8         xor rax, rcx
0x00004ec0      49c1cb0e       ror r11, 0xe
0x00004ec4      4c8b6c2430     mov r13, qword [rsp + 0x30]
0x00004ec9      4801c6         add rsi, rax
0x00004ecc      4c89c8         mov rax, r9
0x00004ecf      48c1c812       ror rax, 0x12
0x00004ed3      4c31d8         xor rax, r11
0x00004ed6      4d89cb         mov r11, r9
0x00004ed9      49c1c317       rol r11, 0x17
0x00004edd      4821fd         and rbp, rdi
0x00004ee0      4c31d8         xor rax, r11
0x00004ee3      4989fb         mov r11, rdi
0x00004ee6      4801f0         add rax, rsi
0x00004ee9      4889fe         mov rsi, rdi
0x00004eec      49c1cb1c       ror r11, 0x1c
0x00004ef0      48c1c61e       rol rsi, 0x1e
0x00004ef4      4801c3         add rbx, rax
0x00004ef7      4c31de         xor rsi, r11
0x00004efa      4989fb         mov r11, rdi
0x00004efd      49c1c319       rol r11, 0x19
0x00004f01      4c31de         xor rsi, r11
0x00004f04      4d89d3         mov r11, r10
0x00004f07      4909fb         or r11, rdi
0x00004f0a      4d21c3         and r11, r8
0x00004f0d      4909eb         or r11, rbp
0x00004f10      4c01de         add rsi, r11
0x00004f13      4d89eb         mov r11, r13
0x00004f16      4801c6         add rsi, rax
0x00004f19      4c89e8         mov rax, r13
0x00004f1c      49d1cb         ror r11, 1
0x00004f1f      48c1c808       ror rax, 8
0x00004f23      4c31d8         xor rax, r11
0x00004f26      4d89eb         mov r11, r13
0x00004f29      49c1eb07       shr r11, 7
0x00004f2d      4c31d8         xor rax, r11
0x00004f30      4c01e0         add rax, r12
0x00004f33      4c8b642440     mov r12, qword [rsp + 0x40]
0x00004f38      4803442458     add rax, qword [rsp + 0x58]
0x00004f3d      4d89e3         mov r11, r12
0x00004f40      49c1cb13       ror r11, 0x13
0x00004f44      4c89dd         mov rbp, r11
0x00004f47      4d89e3         mov r11, r12
0x00004f4a      49c1ec06       shr r12, 6
0x00004f4e      49c1c303       rol r11, 3
0x00004f52      4931eb         xor r11, rbp
0x00004f55      4889fd         mov rbp, rdi
0x00004f58      4d31e3         xor r11, r12
0x00004f5b      4c01d8         add rax, r11
0x00004f5e      49bba8b2773c.  movabs r11, 0x766a0abb3c77b2a8
0x00004f68      4989c4         mov r12, rax
0x00004f6b      4889d0         mov rax, rdx
0x00004f6e      4c31c8         xor rax, r9
0x00004f71      4d01e3         add r11, r12
0x00004f74      4c89642430     mov qword [rsp + 0x30], r12
0x00004f79      4821d8         and rax, rbx
0x00004f7c      4831d0         xor rax, rdx
0x00004f7f      4c01d9         add rcx, r11
0x00004f82      4989db         mov r11, rbx
0x00004f85      4801c1         add rcx, rax
0x00004f88      4889d8         mov rax, rbx
0x00004f8b      49c1cb0e       ror r11, 0xe
0x00004f8f      48c1c812       ror rax, 0x12
0x00004f93      4821f5         and rbp, rsi
0x00004f96      4c31d8         xor rax, r11
0x00004f99      4989db         mov r11, rbx
0x00004f9c      49c1c317       rol r11, 0x17
0x00004fa0      4c31d8         xor rax, r11
0x00004fa3      4801c8         add rax, rcx
0x00004fa6      4889f1         mov rcx, rsi
0x00004fa9      48c1c91c       ror rcx, 0x1c
0x00004fad      4d8d1c00       lea r11, [r8 + rax]
0x00004fb1      4989c8         mov r8, rcx
0x00004fb4      4889f1         mov rcx, rsi
0x00004fb7      48c1c11e       rol rcx, 0x1e                           ; ../coreutils-8.31/lib/sha512.c:-92
0x00004fbb      4c31c1         xor rcx, r8
0x00004fbe      4989f0         mov r8, rsi
0x00004fc1      49c1c019       rol r8, 0x19
0x00004fc5      4c31c1         xor rcx, r8
0x00004fc8      4989f8         mov r8, rdi
0x00004fcb      4909f0         or r8, rsi
0x00004fce      4d21d0         and r8, r10
0x00004fd1      4909e8         or r8, rbp
0x00004fd4      488b6c2428     mov rbp, qword [rsp + 0x28]
0x00004fd9      4c01c1         add rcx, r8                             ; ../coreutils-8.31/lib/sha512.c:-93
0x00004fdc      4c8b0424       mov r8, qword [rsp]
0x00004fe0      4801c1         add rcx, rax
0x00004fe3      4d89c4         mov r12, r8
0x00004fe6      4c89c0         mov rax, r8
0x00004fe9      48d1c8         ror rax, 1
0x00004fec      49c1cc08       ror r12, 8
0x00004ff0      4931c4         xor r12, rax
0x00004ff3      4c89c0         mov rax, r8
0x00004ff6      4989e8         mov r8, rbp
0x00004ff9      48c1e807       shr rax, 7
0x00004ffd      49c1c813       ror r8, 0x13
0x00005001      4931c4         xor r12, rax
0x00005004      4889e8         mov rax, rbp
0x00005007      4d01ec         add r12, r13
0x0000500a      48c1c003       rol rax, 3
0x0000500e      4c03642450     add r12, qword [rsp + 0x50]
0x00005013      4c31c0         xor rax, r8
0x00005016      4989e8         mov r8, rbp
0x00005019      4889f5         mov rbp, rsi
0x0000501c      49c1e806       shr r8, 6
0x00005020      4c31c0         xor rax, r8
0x00005023      49b8e6aeed47.  movabs r8, 0x81c2c92e47edaee6
0x0000502d      4d8d2c04       lea r13, [r12 + rax]
0x00005031      4c89c8         mov rax, r9
0x00005034      4831d8         xor rax, rbx
0x00005037      4c21d8         and rax, r11
0x0000503a      4d01e8         add r8, r13
0x0000503d      4c896c2468     mov qword [rsp + 0x68], r13
0x00005042      4c31c8         xor rax, r9
0x00005045      4c01c2         add rdx, r8
0x00005048      4d89d8         mov r8, r11
0x0000504b      4801c2         add rdx, rax
0x0000504e      4c89d8         mov rax, r11
0x00005051      49c1c80e       ror r8, 0xe
0x00005055      48c1c812       ror rax, 0x12
0x00005059      4c8b6c2438     mov r13, qword [rsp + 0x38]
0x0000505e      4821cd         and rbp, rcx
0x00005061      4c31c0         xor rax, r8
0x00005064      4d89d8         mov r8, r11
0x00005067      49c1c017       rol r8, 0x17
0x0000506b      4c31c0         xor rax, r8
0x0000506e      4d89ec         mov r12, r13
0x00005071      4801d0         add rax, rdx
0x00005074      4889ca         mov rdx, rcx
0x00005077      49c1cc08       ror r12, 8
0x0000507b      48c1ca1c       ror rdx, 0x1c
0x0000507f      4901c2         add r10, rax
0x00005082      4989d0         mov r8, rdx
0x00005085      4889ca         mov rdx, rcx
0x00005088      48c1c21e       rol rdx, 0x1e
0x0000508c      4c31c2         xor rdx, r8
0x0000508f      4989c8         mov r8, rcx
0x00005092      49c1c019       rol r8, 0x19
0x00005096      4c31c2         xor rdx, r8
0x00005099      4989f0         mov r8, rsi
0x0000509c      4909c8         or r8, rcx
0x0000509f      4921f8         and r8, rdi
0x000050a2      4909e8         or r8, rbp
0x000050a5      4c89ed         mov rbp, r13
0x000050a8      48d1cd         ror rbp, 1
0x000050ab      4c01c2         add rdx, r8
0x000050ae      4931ec         xor r12, rbp
0x000050b1      4c89ed         mov rbp, r13
0x000050b4      4801c2         add rdx, rax
0x000050b7      48c1ed07       shr rbp, 7
0x000050bb      4931ec         xor r12, rbp
0x000050be      488b6c2430     mov rbp, qword [rsp + 0x30]
0x000050c3      4c032424       add r12, qword [rsp]
0x000050c7      4989e8         mov r8, rbp
0x000050ca      4889e8         mov rax, rbp
0x000050cd      49c1c813       ror r8, 0x13
0x000050d1      48c1c003       rol rax, 3
0x000050d5      4d01fc         add r12, r15
0x000050d8      4c31c0         xor rax, r8
0x000050db      4989e8         mov r8, rbp
0x000050de      49c1e806       shr r8, 6
0x000050e2      4c31c0         xor rax, r8
0x000050e5      4c01e0         add rax, r12
0x000050e8      49bc3b358214.  movabs r12, 0x92722c851482353b
0x000050f2      4989c0         mov r8, rax
0x000050f5      4889d8         mov rax, rbx
0x000050f8      4c31d8         xor rax, r11
0x000050fb      4d01c4         add r12, r8
0x000050fe      4c89442438     mov qword [rsp + 0x38], r8
0x00005103      4c21d0         and rax, r10
0x00005106      4d01e1         add r9, r12
0x00005109      4d89d4         mov r12, r10
0x0000510c      4831d8         xor rax, rbx
0x0000510f      49c1c417       rol r12, 0x17
0x00005113      4901c1         add r9, rax
0x00005116      4c89d0         mov rax, r10
0x00005119      48c1c80e       ror rax, 0xe
0x0000511d      4989c0         mov r8, rax
0x00005120      4c89d0         mov rax, r10
0x00005123      48c1c812       ror rax, 0x12
0x00005127      4c31c0         xor rax, r8
0x0000512a      4c31e0         xor rax, r12
0x0000512d      4989d4         mov r12, rdx
0x00005130      4c01c8         add rax, r9
0x00005133      49c1c41e       rol r12, 0x1e
0x00005137      4c8d0c07       lea r9, [rdi + rax]
0x0000513b      4889d7         mov rdi, rdx
0x0000513e      4d89e0         mov r8, r12
0x00005141      48c1cf1c       ror rdi, 0x1c
0x00005145      4989cc         mov r12, rcx
0x00005148      4931f8         xor r8, rdi
0x0000514b      4889d7         mov rdi, rdx
0x0000514e      4921d4         and r12, rdx
0x00005151      48c1c719       rol rdi, 0x19
0x00005155      4931f8         xor r8, rdi
0x00005158      4889cf         mov rdi, rcx
0x0000515b      4809d7         or rdi, rdx
0x0000515e      4821f7         and rdi, rsi
0x00005161      4c09e7         or rdi, r12
0x00005164      4c01c7         add rdi, r8
0x00005167      4c8d2407       lea r12, [rdi + rax]
0x0000516b      488b7c2408     mov rdi, qword [rsp + 8]
0x00005170      4889f8         mov rax, rdi
0x00005173      4889fd         mov rbp, rdi
0x00005176      48d1c8         ror rax, 1
0x00005179      48c1cd08       ror rbp, 8
0x0000517d      4831c5         xor rbp, rax
0x00005180      4889f8         mov rax, rdi
0x00005183      48c1e807       shr rax, 7
0x00005187      4831c5         xor rbp, rax
0x0000518a      4c01ed         add rbp, r13
0x0000518d      4c8b6c2468     mov r13, qword [rsp + 0x68]             ; ../coreutils-8.31/lib/sha512.c:-91
0x00005192      4c01f5         add rbp, r14
0x00005195      4c89ef         mov rdi, r13
0x00005198      4c89e8         mov rax, r13
0x0000519b      48c1cf13       ror rdi, 0x13
0x0000519f      48c1c003       rol rax, 3
0x000051a3      4831f8         xor rax, rdi
0x000051a6      4c89ef         mov rdi, r13
0x000051a9      48c1ef06       shr rdi, 6
0x000051ad      4831f8         xor rax, rdi
0x000051b0      48bf6403f14c.  movabs rdi, 0xa2bfe8a14cf10364
0x000051ba      4c8d6c0500     lea r13, [rbp + rax]
0x000051bf      4c89d8         mov rax, r11
0x000051c2      4c31d0         xor rax, r10
0x000051c5      4c01ef         add rdi, r13
0x000051c8      4c21c8         and rax, r9
0x000051cb      4c892c24       mov qword [rsp], r13
0x000051cf      4c31d8         xor rax, r11
0x000051d2      4801fb         add rbx, rdi
0x000051d5      4c89cf         mov rdi, r9
0x000051d8      4801c3         add rbx, rax
0x000051db      4c89c8         mov rax, r9
0x000051de      48c1cf0e       ror rdi, 0xe
0x000051e2      48c1c812       ror rax, 0x12
0x000051e6      4989d5         mov r13, rdx
0x000051e9      4831f8         xor rax, rdi
0x000051ec      4c89cf         mov rdi, r9
0x000051ef      4d21e5         and r13, r12
0x000051f2      48c1c717       rol rdi, 0x17
0x000051f6      4831f8         xor rax, rdi
0x000051f9      4c89e7         mov rdi, r12
0x000051fc      4801d8         add rax, rbx
0x000051ff      48c1c71e       rol rdi, 0x1e
0x00005203      488d1c06       lea rbx, [rsi + rax]
0x00005207      4c89e6         mov rsi, r12
0x0000520a      48c1ce1c       ror rsi, 0x1c
0x0000520e      4831f7         xor rdi, rsi
0x00005211      4c89e6         mov rsi, r12
0x00005214      48c1c619       rol rsi, 0x19
0x00005218      4831f7         xor rdi, rsi
0x0000521b      4889d6         mov rsi, rdx
0x0000521e      4c09e6         or rsi, r12
0x00005221      4821ce         and rsi, rcx
0x00005224      4c09ee         or rsi, r13
0x00005227      4801fe         add rsi, rdi
0x0000522a      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000522f      488d2c06       lea rbp, [rsi + rax]
0x00005233      488b742410     mov rsi, qword [rsp + 0x10]
0x00005238      4989f0         mov r8, rsi
0x0000523b      4989f5         mov r13, rsi
0x0000523e      49d1c8         ror r8, 1
0x00005241      49c1ed07       shr r13, 7
0x00005245      4c89c0         mov rax, r8
0x00005248      4989f0         mov r8, rsi
0x0000524b      4889fe         mov rsi, rdi
0x0000524e      49c1c808       ror r8, 8
0x00005252      4931c0         xor r8, rax
0x00005255      4889f8         mov rax, rdi
0x00005258      4d31e8         xor r8, r13
0x0000525b      4c03442408     add r8, qword [rsp + 8]
0x00005260      48c1ce13       ror rsi, 0x13                           ; ../coreutils-8.31/lib/sha512.c:-89
0x00005264      4c03442460     add r8, qword [rsp + 0x60]
0x00005269      48c1c003       rol rax, 3
0x0000526d      4831f0         xor rax, rsi
0x00005270      4889fe         mov rsi, rdi
0x00005273      48c1ee06       shr rsi, 6
0x00005277      4831f0         xor rax, rsi
0x0000527a      48be013042bc.  movabs rsi, 0xa81a664bbc423001
0x00005284      4c01c0         add rax, r8
0x00005287      4889c7         mov rdi, rax
0x0000528a      4c89d0         mov rax, r10
0x0000528d      4801fe         add rsi, rdi
0x00005290      4c31c8         xor rax, r9
0x00005293      48897c2470     mov qword [rsp + 0x70], rdi
0x00005298      4821d8         and rax, rbx
0x0000529b      4e8d041e       lea r8, [rsi + r11]
0x0000529f      4c89e7         mov rdi, r12
0x000052a2      4c31d0         xor rax, r10
0x000052a5      4821ef         and rdi, rbp
0x000052a8      4901c0         add r8, rax
0x000052ab      4889d8         mov rax, rbx
0x000052ae      48c1c80e       ror rax, 0xe
0x000052b2      4889c6         mov rsi, rax
0x000052b5      4889d8         mov rax, rbx
0x000052b8      48c1c812       ror rax, 0x12
0x000052bc      4831f0         xor rax, rsi
0x000052bf      4889de         mov rsi, rbx
0x000052c2      48c1c617       rol rsi, 0x17
0x000052c6      4831f0         xor rax, rsi
0x000052c9      4889ee         mov rsi, rbp
0x000052cc      4c01c0         add rax, r8
0x000052cf      48c1c61e       rol rsi, 0x1e
0x000052d3      4c8b442448     mov r8, qword [rsp + 0x48]
0x000052d8      4c8d1c01       lea r11, [rcx + rax]
0x000052dc      4889e9         mov rcx, rbp
0x000052df      48c1c91c       ror rcx, 0x1c
0x000052e3      4831ce         xor rsi, rcx
0x000052e6      4889e9         mov rcx, rbp
0x000052e9      48c1c119       rol rcx, 0x19
0x000052ed      4831ce         xor rsi, rcx
0x000052f0      4c89e1         mov rcx, r12
0x000052f3      4809e9         or rcx, rbp
0x000052f6      4821d1         and rcx, rdx
0x000052f9      4809f9         or rcx, rdi
0x000052fc      4c89c7         mov rdi, r8
0x000052ff      4801f1         add rcx, rsi
0x00005302      48c1cf08       ror rdi, 8
0x00005306      488b3424       mov rsi, qword [rsp]
0x0000530a      4c8d2c01       lea r13, [rcx + rax]
0x0000530e      4c89c0         mov rax, r8
0x00005311      48d1c8         ror rax, 1
0x00005314      4831c7         xor rdi, rax
0x00005317      4c89c0         mov rax, r8
0x0000531a      4889f1         mov rcx, rsi
0x0000531d      48c1e807       shr rax, 7
0x00005321      48c1c913       ror rcx, 0x13
0x00005325      4831c7         xor rdi, rax
0x00005328      4889f0         mov rax, rsi
0x0000532b      48037c2410     add rdi, qword [rsp + 0x10]
0x00005330      48037c2440     add rdi, qword [rsp + 0x40]
0x00005335      48c1c003       rol rax, 3
0x00005339      4831c8         xor rax, rcx
0x0000533c      4889f1         mov rcx, rsi
0x0000533f      48c1e906       shr rcx, 6
0x00005343      4831c8         xor rax, rcx
0x00005346      48b99197f8d0.  movabs rcx, 0xc24b8b70d0f89791
0x00005350      4801f8         add rax, rdi
0x00005353      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00005358      4889c6         mov rsi, rax
0x0000535b      4c89c8         mov rax, r9
0x0000535e      4831d8         xor rax, rbx
0x00005361      4801f1         add rcx, rsi
0x00005364      4889742410     mov qword [rsp + 0x10], rsi
0x00005369      4c21d8         and rax, r11
0x0000536c      4901ca         add r10, rcx
0x0000536f      4c31c8         xor rax, r9
0x00005372      4901c2         add r10, rax
0x00005375      4c89d8         mov rax, r11
0x00005378      48c1c80e       ror rax, 0xe
0x0000537c      4889c1         mov rcx, rax
0x0000537f      4c89d8         mov rax, r11
0x00005382      48c1c812       ror rax, 0x12
0x00005386      4831c8         xor rax, rcx
0x00005389      4c89d9         mov rcx, r11
0x0000538c      48c1c117       rol rcx, 0x17
0x00005390      4831c8         xor rax, rcx
0x00005393      4c01d0         add rax, r10
0x00005396      4d89ea         mov r10, r13
0x00005399      49c1ca1c       ror r10, 0x1c
0x0000539d      4801c2         add rdx, rax
0x000053a0      4c89d6         mov rsi, r10
0x000053a3      4d89ea         mov r10, r13
0x000053a6      49c1c21e       rol r10, 0x1e
0x000053aa      4c89d1         mov rcx, r10
0x000053ad      4d89ea         mov r10, r13
0x000053b0      4831f1         xor rcx, rsi
0x000053b3      49c1c219       rol r10, 0x19
0x000053b7      4c31d1         xor rcx, r10
0x000053ba      4989ea         mov r10, rbp
0x000053bd      4d09ea         or r10, r13
0x000053c0      4c89d6         mov rsi, r10
0x000053c3      4989ea         mov r10, rbp
0x000053c6      4d21ea         and r10, r13
0x000053c9      4c21e6         and rsi, r12
0x000053cc      4c09d6         or rsi, r10
0x000053cf      4801ce         add rsi, rcx
0x000053d2      4c8d1406       lea r10, [rsi + rax]
0x000053d6      4889f8         mov rax, rdi
0x000053d9      4889fe         mov rsi, rdi
0x000053dc      48d1c8         ror rax, 1
0x000053df      48c1ce08       ror rsi, 8
0x000053e3      4831c6         xor rsi, rax
0x000053e6      4889f8         mov rax, rdi
0x000053e9      48c1e807       shr rax, 7
0x000053ed      4831c6         xor rsi, rax
0x000053f0      4c01c6         add rsi, r8
0x000053f3      4c8b442470     mov r8, qword [rsp + 0x70]
0x000053f8      4803742428     add rsi, qword [rsp + 0x28]
0x000053fd      4c89c1         mov rcx, r8
0x00005400      4c89c0         mov rax, r8
0x00005403      48c1c913       ror rcx, 0x13
0x00005407      48c1c003       rol rax, 3
0x0000540b      4831c8         xor rax, rcx
0x0000540e      4c89c1         mov rcx, r8
0x00005411      48c1e906       shr rcx, 6
0x00005415      4831c8         xor rax, rcx
0x00005418      48b930be5406.  movabs rcx, 0xc76c51a30654be30
0x00005422      4801f0         add rax, rsi
0x00005425      4989c0         mov r8, rax
0x00005428      4889d8         mov rax, rbx
0x0000542b      4c01c1         add rcx, r8
0x0000542e      4c31d8         xor rax, r11
0x00005431      4c89442448     mov qword [rsp + 0x48], r8
0x00005436      4a8d3c09       lea rdi, [rcx + r9]
0x0000543a      4989d1         mov r9, rdx
0x0000543d      4821d0         and rax, rdx
0x00005440      49c1c90e       ror r9, 0xe
0x00005444      4831d8         xor rax, rbx
0x00005447      4c89c9         mov rcx, r9
0x0000544a      4989d1         mov r9, rdx
0x0000544d      4801c7         add rdi, rax
0x00005450      49c1c912       ror r9, 0x12
0x00005454      4c89c8         mov rax, r9
0x00005457      4989d1         mov r9, rdx
0x0000545a      4831c8         xor rax, rcx
0x0000545d      49c1c117       rol r9, 0x17
0x00005461      4c31c8         xor rax, r9
0x00005464      4d89d1         mov r9, r10
0x00005467      49c1c91c       ror r9, 0x1c
0x0000546b      4801f8         add rax, rdi
0x0000546e      4c89c9         mov rcx, r9
0x00005471      4d89d1         mov r9, r10
0x00005474      4901c4         add r12, rax
0x00005477      49c1c11e       rol r9, 0x1e
0x0000547b      4c89ce         mov rsi, r9
0x0000547e      4d89d1         mov r9, r10
0x00005481      4831ce         xor rsi, rcx
0x00005484      49c1c119       rol r9, 0x19
0x00005488      4c31ce         xor rsi, r9
0x0000548b      4d89e9         mov r9, r13
0x0000548e      4d09d1         or r9, r10
0x00005491      4c89c9         mov rcx, r9
0x00005494      4d89e9         mov r9, r13
0x00005497      4d21d1         and r9, r10
0x0000549a      4821e9         and rcx, rbp
0x0000549d      4c09c9         or rcx, r9
0x000054a0      4801f1         add rcx, rsi
0x000054a3      4c8d0401       lea r8, [rcx + rax]
0x000054a7      488b4c2420     mov rcx, qword [rsp + 0x20]
0x000054ac      4889ce         mov rsi, rcx
0x000054af      4989c9         mov r9, rcx
0x000054b2      48d1ce         ror rsi, 1
0x000054b5      49c1e907       shr r9, 7
0x000054b9      4889f0         mov rax, rsi
0x000054bc      4889ce         mov rsi, rcx
0x000054bf      48c1ce08       ror rsi, 8
0x000054c3      4831c6         xor rsi, rax
0x000054c6      4c31ce         xor rsi, r9
0x000054c9      4c8b4c2410     mov r9, qword [rsp + 0x10]
0x000054ce      4803742418     add rsi, qword [rsp + 0x18]
0x000054d3      4803742430     add rsi, qword [rsp + 0x30]
0x000054d8      4c89c8         mov rax, r9
0x000054db      48c1c813       ror rax, 0x13
0x000054df      4889c1         mov rcx, rax
0x000054e2      4c89c8         mov rax, r9                             ; ../coreutils-8.31/lib/sha512.c:-87
0x000054e5      49c1e906       shr r9, 6
0x000054e9      48c1c003       rol rax, 3
0x000054ed      4831c8         xor rax, rcx
0x000054f0      48b91852efd6.  movabs rcx, 0xd192e819d6ef5218
0x000054fa      4c31c8         xor rax, r9
0x000054fd      4d89d1         mov r9, r10
0x00005500      488d3c06       lea rdi, [rsi + rax]
0x00005504      4c89d8         mov rax, r11
0x00005507      4831d0         xor rax, rdx
0x0000550a      4801f9         add rcx, rdi
0x0000550d      4c21e0         and rax, r12
0x00005510      48897c2478     mov qword [rsp + 0x78], rdi
0x00005515      488d3419       lea rsi, [rcx + rbx]
0x00005519      4c31d8         xor rax, r11
0x0000551c      488b5c2458     mov rbx, qword [rsp + 0x58]
0x00005521      4801c6         add rsi, rax
0x00005524      4c89e0         mov rax, r12
0x00005527      48c1c80e       ror rax, 0xe
0x0000552b      4889df         mov rdi, rbx
0x0000552e      4889c1         mov rcx, rax
0x00005531      4c89e0         mov rax, r12
0x00005534      48c1c812       ror rax, 0x12
0x00005538      4831c8         xor rax, rcx
0x0000553b      4c89e1         mov rcx, r12
0x0000553e      48c1c117       rol rcx, 0x17
0x00005542      4831c8         xor rax, rcx
0x00005545      4c89c1         mov rcx, r8
0x00005548      4801f0         add rax, rsi
0x0000554b      4c89c6         mov rsi, r8
0x0000554e      48c1c11e       rol rcx, 0x1e
0x00005552      48c1ce1c       ror rsi, 0x1c
0x00005556      4801c5         add rbp, rax
0x00005559      4831f1         xor rcx, rsi
0x0000555c      4c89c6         mov rsi, r8
0x0000555f      48c1c619       rol rsi, 0x19
0x00005563      4d21c1         and r9, r8
0x00005566      48c1cf08       ror rdi, 8
0x0000556a      4831f1         xor rcx, rsi
0x0000556d      4c89d6         mov rsi, r10
0x00005570      4c09c6         or rsi, r8
0x00005573      4c21ee         and rsi, r13
0x00005576      4c09ce         or rsi, r9
0x00005579      4801ce         add rsi, rcx
0x0000557c      4889f9         mov rcx, rdi
0x0000557f      488b7c2448     mov rdi, qword [rsp + 0x48]
0x00005584      4c8d0c06       lea r9, [rsi + rax]
0x00005588      4889d8         mov rax, rbx
0x0000558b      48d1c8         ror rax, 1
0x0000558e      4831c1         xor rcx, rax
0x00005591      4889d8         mov rax, rbx
0x00005594      4889fe         mov rsi, rdi
0x00005597      48c1e807       shr rax, 7
0x0000559b      48c1ce13       ror rsi, 0x13
0x0000559f      4831c1         xor rcx, rax
0x000055a2      4889f8         mov rax, rdi
0x000055a5      48034c2420     add rcx, qword [rsp + 0x20]
0x000055aa      48034c2468     add rcx, qword [rsp + 0x68]
0x000055af      48c1c003       rol rax, 3
0x000055b3      4831f0         xor rax, rsi
0x000055b6      4889fe         mov rsi, rdi
0x000055b9      48c1ee06       shr rsi, 6
0x000055bd      4831f0         xor rax, rsi
0x000055c0      4801c8         add rax, rcx
0x000055c3      48b910a96555.  movabs rcx, 0xd69906245565a910
0x000055cd      4889c6         mov rsi, rax
0x000055d0      4889d0         mov rax, rdx
0x000055d3      4c31e0         xor rax, r12
0x000055d6      4801f1         add rcx, rsi
0x000055d9      4889742458     mov qword [rsp + 0x58], rsi
0x000055de      4821e8         and rax, rbp
0x000055e1      4c01d9         add rcx, r11
0x000055e4      4989eb         mov r11, rbp
0x000055e7      4831d0         xor rax, rdx
0x000055ea      49c1c317       rol r11, 0x17
0x000055ee      4801c1         add rcx, rax
0x000055f1      4889e8         mov rax, rbp
0x000055f4      48c1c80e       ror rax, 0xe
0x000055f8      4889c6         mov rsi, rax
0x000055fb      4889e8         mov rax, rbp
0x000055fe      48c1c812       ror rax, 0x12
0x00005602      4831f0         xor rax, rsi                            ; ../coreutils-8.31/lib/sha512.c:-83
0x00005605      4c31d8         xor rax, r11
0x00005608      4d89cb         mov r11, r9
0x0000560b      4801c8         add rax, rcx
0x0000560e      4c89c9         mov rcx, r9
0x00005611      4901c5         add r13, rax
0x00005614      49c1c31e       rol r11, 0x1e
0x00005618      48c1c91c       ror rcx, 0x1c
0x0000561c      4c89df         mov rdi, r11
0x0000561f      4d89c3         mov r11, r8
0x00005622      4831cf         xor rdi, rcx
0x00005625      4c89c9         mov rcx, r9
0x00005628      4d21cb         and r11, r9
0x0000562b      48c1c119       rol rcx, 0x19
0x0000562f      4831cf         xor rdi, rcx
0x00005632      4c89c1         mov rcx, r8
0x00005635      4c09c9         or rcx, r9
0x00005638      4c21d1         and rcx, r10
0x0000563b      4c09d9         or rcx, r11
0x0000563e      4c8b5c2450     mov r11, qword [rsp + 0x50]
0x00005643      4801cf         add rdi, rcx
0x00005646      4801c7         add rdi, rax
0x00005649      4c89d9         mov rcx, r11
0x0000564c      4c89d8         mov rax, r11
0x0000564f      48d1c9         ror rcx, 1
0x00005652      48c1c808       ror rax, 8
0x00005656      4831c8         xor rax, rcx
0x00005659      4c89d9         mov rcx, r11
0x0000565c      48c1e907       shr rcx, 7
0x00005660      4831c8         xor rax, rcx
0x00005663      4801d8         add rax, rbx
0x00005666      488b5c2478     mov rbx, qword [rsp + 0x78]
0x0000566b      4803442438     add rax, qword [rsp + 0x38]
0x00005670      4889de         mov rsi, rbx
0x00005673      4889d9         mov rcx, rbx
0x00005676      48c1eb06       shr rbx, 6
0x0000567a      48c1ce13       ror rsi, 0x13
0x0000567e      48c1c103       rol rcx, 3
0x00005682      4831f1         xor rcx, rsi
0x00005685      4c89ce         mov rsi, r9
0x00005688      4831d9         xor rcx, rbx
0x0000568b      4801c8         add rax, rcx
0x0000568e      48b92a207157.  movabs rcx, 0xf40e35855771202a
0x00005698      4889c3         mov rbx, rax
0x0000569b      4c89e0         mov rax, r12
0x0000569e      4831e8         xor rax, rbp
0x000056a1      4801d9         add rcx, rbx
0x000056a4      48899c24c800.  mov qword [rsp + 0xc8], rbx
0x000056ac      4c21e8         and rax, r13
0x000056af      4801ca         add rdx, rcx
0x000056b2      4c31e0         xor rax, r12
0x000056b5      4801c2         add rdx, rax
0x000056b8      4c89e8         mov rax, r13
0x000056bb      48c1c80e       ror rax, 0xe
0x000056bf      4889c1         mov rcx, rax
0x000056c2      4c89e8         mov rax, r13
0x000056c5      48c1c812       ror rax, 0x12
0x000056c9      4821fe         and rsi, rdi
0x000056cc      4831c8         xor rax, rcx
0x000056cf      4c89e9         mov rcx, r13
0x000056d2      48c1c117       rol rcx, 0x17
0x000056d6      4831c8         xor rax, rcx
0x000056d9      4801d0         add rax, rdx
0x000056dc      4889fa         mov rdx, rdi
0x000056df      48c1ca1c       ror rdx, 0x1c
0x000056e3      4901c2         add r10, rax
0x000056e6      4889d1         mov rcx, rdx
0x000056e9      4889fa         mov rdx, rdi
0x000056ec      48c1c21e       rol rdx, 0x1e
0x000056f0      4831ca         xor rdx, rcx
0x000056f3      4889f9         mov rcx, rdi
0x000056f6      48c1c119       rol rcx, 0x19
0x000056fa      4831ca         xor rdx, rcx
0x000056fd      4c89c9         mov rcx, r9
0x00005700      4809f9         or rcx, rdi
0x00005703      4c21c1         and rcx, r8
0x00005706      4809f1         or rcx, rsi
0x00005709      4801ca         add rdx, rcx
0x0000570c      4801c2         add rdx, rax
0x0000570f      4c89f8         mov rax, r15
0x00005712      48d1c8         ror rax, 1
0x00005715      4889c1         mov rcx, rax
0x00005718      4c89f8         mov rax, r15
0x0000571b      48c1c808       ror rax, 8
0x0000571f      4831c8         xor rax, rcx
0x00005722      4c89f9         mov rcx, r15
0x00005725      48c1e907       shr rcx, 7
0x00005729      4831c8         xor rax, rcx
0x0000572c      4c01d8         add rax, r11
0x0000572f      4c8b5c2458     mov r11, qword [rsp + 0x58]             ; ../coreutils-8.31/lib/sha512.c:-84
0x00005734      48030424       add rax, qword [rsp]
0x00005738      4c89d9         mov rcx, r11
0x0000573b      48c1c913       ror rcx, 0x13
0x0000573f      4889ce         mov rsi, rcx
0x00005742      4c89d9         mov rcx, r11
0x00005745      49c1eb06       shr r11, 6
0x00005749      48c1c103       rol rcx, 3
0x0000574d      4831f1         xor rcx, rsi
0x00005750      4c31d9         xor rcx, r11
0x00005753      4801c8         add rax, rcx
0x00005756      48b9b8d1bb32.  movabs rcx, 0x106aa07032bbd1b8
0x00005760      4989c3         mov r11, rax
0x00005763      4889e8         mov rax, rbp
0x00005766      4c31e8         xor rax, r13
0x00005769      4c895c2450     mov qword [rsp + 0x50], r11
0x0000576e      4c21d0         and rax, r10
0x00005771      4831e8         xor rax, rbp
0x00005774      4c01d9         add rcx, r11
0x00005777      4989fb         mov r11, rdi
0x0000577a      4901cc         add r12, rcx
0x0000577d      4c89d1         mov rcx, r10
0x00005780      4921d3         and r11, rdx
0x00005783      4901c4         add r12, rax
0x00005786      4c89d0         mov rax, r10
0x00005789      48c1c90e       ror rcx, 0xe
0x0000578d      48c1c812       ror rax, 0x12
0x00005791      4831c8         xor rax, rcx
0x00005794      4c89d1         mov rcx, r10
0x00005797      48c1c117       rol rcx, 0x17
0x0000579b      4831c8         xor rax, rcx
0x0000579e      4889d1         mov rcx, rdx
0x000057a1      48c1c91c       ror rcx, 0x1c
0x000057a5      4c01e0         add rax, r12
0x000057a8      4889ce         mov rsi, rcx
0x000057ab      4889d1         mov rcx, rdx
0x000057ae      4901c0         add r8, rax
0x000057b1      48c1c11e       rol rcx, 0x1e
0x000057b5      4831f1         xor rcx, rsi
0x000057b8      4889d6         mov rsi, rdx
0x000057bb      48c1c619       rol rsi, 0x19
0x000057bf      4831f1         xor rcx, rsi
0x000057c2      4889fe         mov rsi, rdi
0x000057c5      4809d6         or rsi, rdx
0x000057c8      4c21ce         and rsi, r9
0x000057cb      4c09de         or rsi, r11
0x000057ce      4989db         mov r11, rbx
0x000057d1      4801f1         add rcx, rsi
0x000057d4      49c1cb13       ror r11, 0x13
0x000057d8      4801c1         add rcx, rax
0x000057db      4c89f0         mov rax, r14
0x000057de      48d1c8         ror rax, 1
0x000057e1      4889c6         mov rsi, rax
0x000057e4      4c89f0         mov rax, r14
0x000057e7      48c1c808       ror rax, 8
0x000057eb      4831f0         xor rax, rsi
0x000057ee      4c89f6         mov rsi, r14
0x000057f1      48c1ee07       shr rsi, 7                              ; ../coreutils-8.31/lib/sha512.c:-82
0x000057f5      4831f0         xor rax, rsi
0x000057f8      4889de         mov rsi, rbx
0x000057fb      4c01f8         add rax, r15
0x000057fe      48c1c603       rol rsi, 3
0x00005802      4803442470     add rax, qword [rsp + 0x70]
0x00005807      4c31de         xor rsi, r11
0x0000580a      4989db         mov r11, rbx
0x0000580d      4c8b642460     mov r12, qword [rsp + 0x60]
0x00005812      49c1eb06       shr r11, 6
0x00005816      4c31de         xor rsi, r11
0x00005819      4c8d3c30       lea r15, [rax + rsi]
0x0000581d      4c89e8         mov rax, r13
0x00005820      48bec8d0d2b8.  movabs rsi, 0x19a4c116b8d2d0c8
0x0000582a      4c31d0         xor rax, r10
0x0000582d      4c01fe         add rsi, r15
0x00005830      4c21c0         and rax, r8
0x00005833      4c31e8         xor rax, r13
0x00005836      4801f5         add rbp, rsi
0x00005839      4801c5         add rbp, rax
0x0000583c      4c89c0         mov rax, r8
0x0000583f      48c1c80e       ror rax, 0xe
0x00005843      4889c6         mov rsi, rax
0x00005846      4c89c0         mov rax, r8
0x00005849      48c1c812       ror rax, 0x12
0x0000584d      4831f0         xor rax, rsi
0x00005850      4c89c6         mov rsi, r8
0x00005853      48c1c617       rol rsi, 0x17
0x00005857      4831f0         xor rax, rsi
0x0000585a      4889ce         mov rsi, rcx
0x0000585d      48c1ce1c       ror rsi, 0x1c
0x00005861      4801e8         add rax, rbp
0x00005864      4889cd         mov rbp, rcx
0x00005867      4989f3         mov r11, rsi
0x0000586a      4889ce         mov rsi, rcx
0x0000586d      48c1c519       rol rbp, 0x19
0x00005871      48c1c61e       rol rsi, 0x1e
0x00005875      4901c1         add r9, rax
0x00005878      4c31de         xor rsi, r11
0x0000587b      4831ee         xor rsi, rbp
0x0000587e      4889d5         mov rbp, rdx
0x00005881      4809cd         or rbp, rcx
0x00005884      4989eb         mov r11, rbp
0x00005887      4889d5         mov rbp, rdx
0x0000588a      4821cd         and rbp, rcx
0x0000588d      4921fb         and r11, rdi
0x00005890      4909eb         or r11, rbp
0x00005893      488b6c2450     mov rbp, qword [rsp + 0x50]
0x00005898      4c01de         add rsi, r11
0x0000589b      4d89e3         mov r11, r12
0x0000589e      4801c6         add rsi, rax
0x000058a1      4c89e0         mov rax, r12
0x000058a4      49d1cb         ror r11, 1
0x000058a7      48c1c808       ror rax, 8
0x000058ab      4889eb         mov rbx, rbp
0x000058ae      4c31d8         xor rax, r11
0x000058b1      4d89e3         mov r11, r12
0x000058b4      49c1eb07       shr r11, 7
0x000058b8      4c31d8         xor rax, r11
0x000058bb      4989eb         mov r11, rbp
0x000058be      4c01f0         add rax, r14
0x000058c1      4803442410     add rax, qword [rsp + 0x10]
0x000058c6      48c1cb13       ror rbx, 0x13
0x000058ca      49c1c303       rol r11, 3
0x000058ce      4c8b742440     mov r14, qword [rsp + 0x40]
0x000058d3      4931db         xor r11, rbx
0x000058d6      4889eb         mov rbx, rbp
0x000058d9      48c1eb06       shr rbx, 6
0x000058dd      4931db         xor r11, rbx
0x000058e0      4c01d8         add rax, r11
0x000058e3      49bb53ab4151.  movabs r11, 0x1e376c085141ab53
0x000058ed      4889c3         mov rbx, rax
0x000058f0      4c89d0         mov rax, r10
0x000058f3      4c31c0         xor rax, r8
0x000058f6      4901db         add r11, rbx
0x000058f9      48895c2460     mov qword [rsp + 0x60], rbx
0x000058fe      4c21c8         and rax, r9
0x00005901      4d01dd         add r13, r11
0x00005904      4c31d0         xor rax, r10
0x00005907      4901c5         add r13, rax
0x0000590a      4c89c8         mov rax, r9                             ; ../coreutils-8.31/lib/sha512.c:-81
0x0000590d      48c1c80e       ror rax, 0xe
0x00005911      4989c3         mov r11, rax
0x00005914      4c89c8         mov rax, r9
0x00005917      48c1c812       ror rax, 0x12
0x0000591b      4c31d8         xor rax, r11
0x0000591e      4d89cb         mov r11, r9
0x00005921      49c1c317       rol r11, 0x17
0x00005925      4c31d8         xor rax, r11
0x00005928      4989f3         mov r11, rsi
0x0000592b      4c01e8         add rax, r13
0x0000592e      4989f5         mov r13, rsi
0x00005931      49c1c31e       rol r11, 0x1e                           ; ../coreutils-8.31/lib/sha512.c:-80
0x00005935      49c1cd1c       ror r13, 0x1c
0x00005939      4801c7         add rdi, rax
0x0000593c      4d31eb         xor r11, r13
0x0000593f      4989f5         mov r13, rsi
0x00005942      49c1c519       rol r13, 0x19
0x00005946      4d31eb         xor r11, r13
0x00005949      4989cd         mov r13, rcx
0x0000594c      4909f5         or r13, rsi
0x0000594f      4c89eb         mov rbx, r13
0x00005952      4989cd         mov r13, rcx
0x00005955      4921f5         and r13, rsi
0x00005958      4821d3         and rbx, rdx
0x0000595b      4c09eb         or rbx, r13
0x0000595e      4d89fd         mov r13, r15
0x00005961      4c01db         add rbx, r11
0x00005964      4d89f3         mov r11, r14
0x00005967      4801c3         add rbx, rax
0x0000596a      4c89f0         mov rax, r14
0x0000596d      49d1cb         ror r11, 1
0x00005970      48c1c808       ror rax, 8
0x00005974      49c1cd13       ror r13, 0x13
0x00005978      4c31d8         xor rax, r11
0x0000597b      4d89f3         mov r11, r14
0x0000597e      4c89ed         mov rbp, r13
0x00005981      49c1eb07       shr r11, 7
0x00005985      4d89fd         mov r13, r15
0x00005988      4c31d8         xor rax, r11
0x0000598b      49c1c503       rol r13, 3
0x0000598f      4c01e0         add rax, r12
0x00005992      4803442448     add rax, qword [rsp + 0x48]
0x00005997      4d89eb         mov r11, r13
0x0000599a      4d89fd         mov r13, r15                            ; ../coreutils-8.31/lib/sha512.c:-81
0x0000599d      4931eb         xor r11, rbp                            ; ../coreutils-8.31/lib/sha512.c:-80
0x000059a0      4889f5         mov rbp, rsi
0x000059a3      49c1ed06       shr r13, 6
0x000059a7      4c8b642428     mov r12, qword [rsp + 0x28]
0x000059ac      4d31eb         xor r11, r13
0x000059af      4c01d8         add rax, r11
0x000059b2      49bb99eb8edf.  movabs r11, 0x2748774cdf8eeb99
0x000059bc      4989c5         mov r13, rax
0x000059bf      4c89c0         mov rax, r8
0x000059c2      4c31c8         xor rax, r9
0x000059c5      4d01eb         add r11, r13
0x000059c8      4c896c2440     mov qword [rsp + 0x40], r13
0x000059cd      4821f8         and rax, rdi
0x000059d0      4d01da         add r10, r11
0x000059d3      4c8b6c2460     mov r13, qword [rsp + 0x60]
0x000059d8      4c31c0         xor rax, r8
0x000059db      4901c2         add r10, rax
0x000059de      4889f8         mov rax, rdi
0x000059e1      48c1c80e       ror rax, 0xe
0x000059e5      4989c3         mov r11, rax
0x000059e8      4889f8         mov rax, rdi
0x000059eb      48c1c812       ror rax, 0x12
0x000059ef      4c31d8         xor rax, r11
0x000059f2      4989fb         mov r11, rdi
0x000059f5      49c1c317       rol r11, 0x17
0x000059f9      4c31d8         xor rax, r11
0x000059fc      4c01d0         add rax, r10
0x000059ff      4989da         mov r10, rbx
0x00005a02      49c1ca1c       ror r10, 0x1c
0x00005a06      4801c2         add rdx, rax
0x00005a09      4d89d3         mov r11, r10
0x00005a0c      4989da         mov r10, rbx
0x00005a0f      49c1c21e       rol r10, 0x1e
0x00005a13      4d31da         xor r10, r11
0x00005a16      4989db         mov r11, rbx
0x00005a19      49c1c319       rol r11, 0x19
0x00005a1d      4d31da         xor r10, r11
0x00005a20      4989f3         mov r11, rsi
0x00005a23      4909db         or r11, rbx
0x00005a26      4921cb         and r11, rcx
0x00005a29      4821dd         and rbp, rbx
0x00005a2c      4909eb         or r11, rbp
0x00005a2f      4c89ed         mov rbp, r13
0x00005a32      4d01da         add r10, r11
0x00005a35      4d89e3         mov r11, r12
0x00005a38      48c1cd13       ror rbp, 0x13
0x00005a3c      4901c2         add r10, rax
0x00005a3f      4c89e0         mov rax, r12
0x00005a42      49d1cb         ror r11, 1
0x00005a45      48c1c808       ror rax, 8
0x00005a49      4c31d8         xor rax, r11
0x00005a4c      4d89e3         mov r11, r12
0x00005a4f      49c1eb07       shr r11, 7
0x00005a53      4c31d8         xor rax, r11
0x00005a56      4d89eb         mov r11, r13
0x00005a59      4c01f0         add rax, r14
0x00005a5c      49c1c303       rol r11, 3
0x00005a60      4803442478     add rax, qword [rsp + 0x78]
0x00005a65      4931eb         xor r11, rbp
0x00005a68      4c89ed         mov rbp, r13
0x00005a6b      4c8b742430     mov r14, qword [rsp + 0x30]
0x00005a70      48c1ed06       shr rbp, 6
0x00005a74      4931eb         xor r11, rbp
0x00005a77      4889dd         mov rbp, rbx
0x00005a7a      4c01d8         add rax, r11
0x00005a7d      49bba8489be1.  movabs r11, 0x34b0bcb5e19b48a8
0x00005a87      4989c5         mov r13, rax
0x00005a8a      4c89c8         mov rax, r9
0x00005a8d      4831f8         xor rax, rdi
0x00005a90      4d01eb         add r11, r13
0x00005a93      4821d0         and rax, rdx
0x00005a96      4d01d8         add r8, r11
0x00005a99      4c31c8         xor rax, r9
0x00005a9c      4901c0         add r8, rax
0x00005a9f      4889d0         mov rax, rdx
0x00005aa2      48c1c80e       ror rax, 0xe
0x00005aa6      4989c3         mov r11, rax
0x00005aa9      4889d0         mov rax, rdx
0x00005aac      48c1c812       ror rax, 0x12
0x00005ab0      4c31d8         xor rax, r11
0x00005ab3      4989d3         mov r11, rdx
0x00005ab6      49c1c317       rol r11, 0x17
0x00005aba      4c31d8         xor rax, r11
0x00005abd      4c01c0         add rax, r8
0x00005ac0      4d89d0         mov r8, r10                             ; ../coreutils-8.31/lib/sha512.c:-78
0x00005ac3      49c1c81c       ror r8, 0x1c
0x00005ac7      4801c1         add rcx, rax
0x00005aca      4d89c3         mov r11, r8
0x00005acd      4d89d0         mov r8, r10
0x00005ad0      49c1c01e       rol r8, 0x1e
0x00005ad4      4d31d8         xor r8, r11
0x00005ad7      4d89d3         mov r11, r10
0x00005ada      4c21d5         and rbp, r10
0x00005add      49c1c319       rol r11, 0x19
0x00005ae1      4d31d8         xor r8, r11
0x00005ae4      4989db         mov r11, rbx
0x00005ae7      4d09d3         or r11, r10
0x00005aea      4921f3         and r11, rsi
0x00005aed      4909eb         or r11, rbp
0x00005af0      4d01d8         add r8, r11
0x00005af3      4d89f3         mov r11, r14
0x00005af6      4901c0         add r8, rax
0x00005af9      4c89f0         mov rax, r14
0x00005afc      49c1cb08       ror r11, 8
0x00005b00      48d1c8         ror rax, 1
0x00005b03      4931c3         xor r11, rax
0x00005b06      4c89f0         mov rax, r14
0x00005b09      48c1e807       shr rax, 7
0x00005b0d      4931c3         xor r11, rax
0x00005b10      488b442440     mov rax, qword [rsp + 0x40]
0x00005b15      4d01e3         add r11, r12
0x00005b18      4c035c2458     add r11, qword [rsp + 0x58]
0x00005b1d      4989c4         mov r12, rax
0x00005b20      49c1cc13       ror r12, 0x13
0x00005b24      4c89e5         mov rbp, r12
0x00005b27      4989c4         mov r12, rax
0x00005b2a      48c1c003       rol rax, 3
0x00005b2e      4831e8         xor rax, rbp
0x00005b31      49c1ec06       shr r12, 6
0x00005b35      4c89d5         mov rbp, r10
0x00005b38      4c31e0         xor rax, r12
0x00005b3b      4c01d8         add rax, r11
0x00005b3e      49bb635ac9c5.  movabs r11, 0x391c0cb3c5c95a63
0x00005b48      4989c4         mov r12, rax
0x00005b4b      4889f8         mov rax, rdi
0x00005b4e      4831d0         xor rax, rdx
0x00005b51      4d01e3         add r11, r12
0x00005b54      4c89a4248000.  mov qword [rsp + 0x80], r12
0x00005b5c      4821c8         and rax, rcx
0x00005b5f      4d01d9         add r9, r11
0x00005b62      4c8b642468     mov r12, qword [rsp + 0x68]
0x00005b67      4831f8         xor rax, rdi
0x00005b6a      4901c1         add r9, rax
0x00005b6d      4889c8         mov rax, rcx
0x00005b70      48c1c80e       ror rax, 0xe
0x00005b74      4989c3         mov r11, rax
0x00005b77      4889c8         mov rax, rcx
0x00005b7a      48c1c812       ror rax, 0x12
0x00005b7e      4c31d8         xor rax, r11
0x00005b81      4989cb         mov r11, rcx
0x00005b84      49c1c317       rol r11, 0x17
0x00005b88      4c31d8         xor rax, r11
0x00005b8b      4c21c5         and rbp, r8
0x00005b8e      4c01c8         add rax, r9
0x00005b91      4d89c1         mov r9, r8
0x00005b94      49c1c91c       ror r9, 0x1c
0x00005b98      4801c6         add rsi, rax
0x00005b9b      4d89cb         mov r11, r9
0x00005b9e      4d89c1         mov r9, r8
0x00005ba1      49c1c11e       rol r9, 0x1e
0x00005ba5      4d31d9         xor r9, r11
0x00005ba8      4d89c3         mov r11, r8
0x00005bab      49c1c319       rol r11, 0x19
0x00005baf      4d31d9         xor r9, r11
0x00005bb2      4d89d3         mov r11, r10
0x00005bb5      4d09c3         or r11, r8
0x00005bb8      4921db         and r11, rbx
0x00005bbb      4909eb         or r11, rbp
0x00005bbe      4d01d9         add r9, r11
0x00005bc1      4d89e3         mov r11, r12
0x00005bc4      4901c1         add r9, rax
0x00005bc7      4c89e0         mov rax, r12
0x00005bca      49c1cb08       ror r11, 8
0x00005bce      48d1c8         ror rax, 1
0x00005bd1      4931c3         xor r11, rax
0x00005bd4      4c89e0         mov rax, r12
0x00005bd7      48c1e807       shr rax, 7
0x00005bdb      4931c3         xor r11, rax
0x00005bde      4c89e8         mov rax, r13
0x00005be1      49c1cd13       ror r13, 0x13
0x00005be5      4d01f3         add r11, r14
0x00005be8      4c039c24c800.  add r11, qword [rsp + 0xc8]             ; ../coreutils-8.31/lib/sha512.c:-77
0x00005bf0      4c89ed         mov rbp, r13
0x00005bf3      4989c5         mov r13, rax
0x00005bf6      48c1c003       rol rax, 3
0x00005bfa      4c8b742438     mov r14, qword [rsp + 0x38]
0x00005bff      4831e8         xor rax, rbp
0x00005c02      4c896c2468     mov qword [rsp + 0x68], r13
0x00005c07      49c1ed06       shr r13, 6
0x00005c0b      4c31e8         xor rax, r13
0x00005c0e      4c89c5         mov rbp, r8
0x00005c11      4c01d8         add rax, r11
0x00005c14      49bbcb8a41e3.  movabs r11, 0x4ed8aa4ae3418acb
0x00005c1e      4989c5         mov r13, rax
0x00005c21      4889d0         mov rax, rdx
0x00005c24      4831c8         xor rax, rcx
0x00005c27      4d01eb         add r11, r13
0x00005c2a      4821f0         and rax, rsi
0x00005c2d      4c01df         add rdi, r11
0x00005c30      4831d0         xor rax, rdx
0x00005c33      4801c7         add rdi, rax
0x00005c36      4889f0         mov rax, rsi
0x00005c39      4c21cd         and rbp, r9
0x00005c3c      48c1c80e       ror rax, 0xe
0x00005c40      4989c3         mov r11, rax
0x00005c43      4889f0         mov rax, rsi
0x00005c46      48c1c812       ror rax, 0x12
0x00005c4a      4c31d8         xor rax, r11
0x00005c4d      4989f3         mov r11, rsi
0x00005c50      49c1c317       rol r11, 0x17
0x00005c54      4c31d8         xor rax, r11
0x00005c57      4801f8         add rax, rdi
0x00005c5a      4c89cf         mov rdi, r9
0x00005c5d      48c1cf1c       ror rdi, 0x1c
0x00005c61      4801c3         add rbx, rax
0x00005c64      4989fb         mov r11, rdi
0x00005c67      4c89cf         mov rdi, r9
0x00005c6a      48c1c71e       rol rdi, 0x1e                           ; ../coreutils-8.31/lib/sha512.c:-76
0x00005c6e      4c31df         xor rdi, r11                            ; ../coreutils-8.31/lib/sha512.c:-77
0x00005c71      4d89cb         mov r11, r9
0x00005c74      49c1c319       rol r11, 0x19
0x00005c78      4c31df         xor rdi, r11
0x00005c7b      4d89c3         mov r11, r8
0x00005c7e      4d09cb         or r11, r9
0x00005c81      4d21d3         and r11, r10
0x00005c84      4909eb         or r11, rbp
0x00005c87      4c01df         add rdi, r11
0x00005c8a      4d89f3         mov r11, r14
0x00005c8d      4801c7         add rdi, rax
0x00005c90      4c89f0         mov rax, r14
0x00005c93      49d1cb         ror r11, 1
0x00005c96      48c1c808       ror rax, 8
0x00005c9a      4c31d8         xor rax, r11
0x00005c9d      4d89f3         mov r11, r14
0x00005ca0      49c1eb07       shr r11, 7
0x00005ca4      4c31d8         xor rax, r11
0x00005ca7      4c8b9c248000.  mov r11, qword [rsp + 0x80]
0x00005caf      4c01e0         add rax, r12
0x00005cb2      4803442450     add rax, qword [rsp + 0x50]             ; ../coreutils-8.31/lib/sha512.c:-76
0x00005cb7      4d89dc         mov r12, r11
0x00005cba      49c1cc13       ror r12, 0x13
0x00005cbe      4c89e5         mov rbp, r12
0x00005cc1      4d89dc         mov r12, r11
0x00005cc4      49c1c303       rol r11, 3
0x00005cc8      4931eb         xor r11, rbp                            ; ../coreutils-8.31/lib/sha512.c:-75
0x00005ccb      49c1ec06       shr r12, 6
0x00005ccf      4d31e3         xor r11, r12
0x00005cd2      4d89cc         mov r12, r9
0x00005cd5      4c01d8         add rax, r11
0x00005cd8      49bb73e36377.  movabs r11, 0x5b9cca4f7763e373
0x00005ce2      4889c5         mov rbp, rax
0x00005ce5      4889c8         mov rax, rcx
0x00005ce8      4831f0         xor rax, rsi
0x00005ceb      4901eb         add r11, rbp
0x00005cee      4921fc         and r12, rdi
0x00005cf1      4821d8         and rax, rbx
0x00005cf4      4c01da         add rdx, r11
0x00005cf7      4989db         mov r11, rbx
0x00005cfa      4831c8         xor rax, rcx
0x00005cfd      49c1cb0e       ror r11, 0xe
0x00005d01      48896c2408     mov qword [rsp + 8], rbp
0x00005d06      4801c2         add rdx, rax
0x00005d09      4889d8         mov rax, rbx
0x00005d0c      488b2c24       mov rbp, qword [rsp]
0x00005d10      48c1c812       ror rax, 0x12
0x00005d14      4c31d8         xor rax, r11
0x00005d17      4989db         mov r11, rbx
0x00005d1a      49c1c317       rol r11, 0x17
0x00005d1e      4c31d8         xor rax, r11
0x00005d21      4801d0         add rax, rdx
0x00005d24      4889fa         mov rdx, rdi
0x00005d27      48c1ca1c       ror rdx, 0x1c
0x00005d2b      4901c2         add r10, rax
0x00005d2e      4989d3         mov r11, rdx
0x00005d31      4889fa         mov rdx, rdi
0x00005d34      48c1c21e       rol rdx, 0x1e
0x00005d38      4c31da         xor rdx, r11
0x00005d3b      4989fb         mov r11, rdi
0x00005d3e      49c1c319       rol r11, 0x19
0x00005d42      4c31da         xor rdx, r11
0x00005d45      4d89cb         mov r11, r9
0x00005d48      4909fb         or r11, rdi
0x00005d4b      4d21c3         and r11, r8
0x00005d4e      4d09e3         or r11, r12
0x00005d51      4c01da         add rdx, r11
0x00005d54      4989eb         mov r11, rbp
0x00005d57      4801c2         add rdx, rax
0x00005d5a      4889e8         mov rax, rbp
0x00005d5d      49d1cb         ror r11, 1
0x00005d60      48c1c808       ror rax, 8
0x00005d64      4c31d8         xor rax, r11
0x00005d67      4989eb         mov r11, rbp
0x00005d6a      488b6c2408     mov rbp, qword [rsp + 8]
0x00005d6f      49c1eb07       shr r11, 7
0x00005d73      4c31d8         xor rax, r11
0x00005d76      4d89eb         mov r11, r13
0x00005d79      4c01f0         add rax, r14
0x00005d7c      49c1cb13       ror r11, 0x13
0x00005d80      4d89ee         mov r14, r13
0x00005d83      4c01f8         add rax, r15
0x00005d86      49c1c503       rol r13, 3
0x00005d8a      4c89742438     mov qword [rsp + 0x38], r14
0x00005d8f      4d31dd         xor r13, r11
0x00005d92      4d89f3         mov r11, r14
0x00005d95      4989fe         mov r14, rdi
0x00005d98      49c1eb06       shr r11, 6
0x00005d9c      4921d6         and r14, rdx
0x00005d9f      4d31dd         xor r13, r11
0x00005da2      49bba3b8b2d6.  movabs r11, 0x682e6ff3d6b2b8a3
0x00005dac      4c01e8         add rax, r13
0x00005daf      4989c5         mov r13, rax
0x00005db2      4889f0         mov rax, rsi
0x00005db5      4831d8         xor rax, rbx
0x00005db8      4d01eb         add r11, r13
0x00005dbb      4c21d0         and rax, r10
0x00005dbe      4c01d9         add rcx, r11                            ; ../coreutils-8.31/lib/sha512.c:-74
0x00005dc1      4831f0         xor rax, rsi
0x00005dc4      4801c1         add rcx, rax
0x00005dc7      4c89d0         mov rax, r10
0x00005dca      48c1c80e       ror rax, 0xe
0x00005dce      4989c3         mov r11, rax
0x00005dd1      4c89d0         mov rax, r10
0x00005dd4      48c1c812       ror rax, 0x12
0x00005dd8      4c31d8         xor rax, r11
0x00005ddb      4d89d3         mov r11, r10
0x00005dde      49c1c317       rol r11, 0x17
0x00005de2      4c31d8         xor rax, r11
0x00005de5      4801c8         add rax, rcx
0x00005de8      4889d1         mov rcx, rdx
0x00005deb      48c1c91c       ror rcx, 0x1c
0x00005def      4901c0         add r8, rax
0x00005df2      4989cb         mov r11, rcx
0x00005df5      4889d1         mov rcx, rdx
0x00005df8      48c1c11e       rol rcx, 0x1e
0x00005dfc      4c31d9         xor rcx, r11
0x00005dff      4989d3         mov r11, rdx
0x00005e02      49c1c319       rol r11, 0x19
0x00005e06      4c31d9         xor rcx, r11
0x00005e09      4989fb         mov r11, rdi
0x00005e0c      4909d3         or r11, rdx
0x00005e0f      4d21cb         and r11, r9
0x00005e12      4d09f3         or r11, r14
0x00005e15      4c8b742470     mov r14, qword [rsp + 0x70]
0x00005e1a      4c896c2470     mov qword [rsp + 0x70], r13
0x00005e1f      4901cb         add r11, rcx
0x00005e22      4d8d2403       lea r12, [r11 + rax]
0x00005e26      4989eb         mov r11, rbp
0x00005e29      4c89f1         mov rcx, r14
0x00005e2c      4c89f0         mov rax, r14
0x00005e2f      48d1c9         ror rcx, 1
0x00005e32      48c1c808       ror rax, 8
0x00005e36      4831c8         xor rax, rcx
0x00005e39      4c89f1         mov rcx, r14
0x00005e3c      48c1e907       shr rcx, 7
0x00005e40      4831c8         xor rax, rcx
0x00005e43      48030424       add rax, qword [rsp]
0x00005e47      488b4c2460     mov rcx, qword [rsp + 0x60]             ; ../coreutils-8.31/lib/sha512.c:-75
0x00005e4c      49c1cb13       ror r11, 0x13
0x00005e50      4801c1         add rcx, rax                            ; ../coreutils-8.31/lib/sha512.c:-74
0x00005e53      4889e8         mov rax, rbp
0x00005e56      48c1c003       rol rax, 3
0x00005e5a      4c31d8         xor rax, r11
0x00005e5d      4989eb         mov r11, rbp
0x00005e60      488b6c2410     mov rbp, qword [rsp + 0x10]
0x00005e65      49c1eb06       shr r11, 6
0x00005e69      4c31d8         xor rax, r11
0x00005e6c      4801c8         add rax, rcx
0x00005e6f      48b9fcb2ef5d.  movabs rcx, 0x748f82ee5defb2fc
0x00005e79      4989c3         mov r11, rax
0x00005e7c      4889d8         mov rax, rbx
0x00005e7f      4c31d0         xor rax, r10
0x00005e82      4c01d9         add rcx, r11
0x00005e85      4c891c24       mov qword [rsp], r11
0x00005e89      4c21c0         and rax, r8
0x00005e8c      4801ce         add rsi, rcx
0x00005e8f      4c89c1         mov rcx, r8
0x00005e92      4831d8         xor rax, rbx
0x00005e95      48c1c912       ror rcx, 0x12
0x00005e99      4989d3         mov r11, rdx
0x00005e9c      4801c6         add rsi, rax
0x00005e9f      4c89c0         mov rax, r8
0x00005ea2      4d21e3         and r11, r12
0x00005ea5      48c1c80e       ror rax, 0xe
0x00005ea9      4831c1         xor rcx, rax
0x00005eac      4c89c0         mov rax, r8
0x00005eaf      48c1c017       rol rax, 0x17
0x00005eb3      4831c8         xor rax, rcx
0x00005eb6      4801f0         add rax, rsi
0x00005eb9      4c89e6         mov rsi, r12
0x00005ebc      48c1ce1c       ror rsi, 0x1c
0x00005ec0      4901c1         add r9, rax
0x00005ec3      4889f1         mov rcx, rsi
0x00005ec6      4c89e6         mov rsi, r12
0x00005ec9      48c1c61e       rol rsi, 0x1e
0x00005ecd      4831ce         xor rsi, rcx
0x00005ed0      4c89e1         mov rcx, r12
0x00005ed3      48c1c119       rol rcx, 0x19
0x00005ed7      4831ce         xor rsi, rcx
0x00005eda      4889d1         mov rcx, rdx
0x00005edd      4c09e1         or rcx, r12
0x00005ee0      4821f9         and rcx, rdi
0x00005ee3      4c09d9         or rcx, r11
0x00005ee6      4d89eb         mov r11, r13
0x00005ee9      4801f1         add rcx, rsi
0x00005eec      4889ee         mov rsi, rbp
0x00005eef      4801c1         add rcx, rax
0x00005ef2      4889e8         mov rax, rbp
0x00005ef5      48d1ce         ror rsi, 1
0x00005ef8      48c1c808       ror rax, 8
0x00005efc      49c1cb13       ror r11, 0x13
0x00005f00      4831f0         xor rax, rsi
0x00005f03      4889ee         mov rsi, rbp
0x00005f06      48c1ee07       shr rsi, 7
0x00005f0a      4831f0         xor rax, rsi
0x00005f0d      488b742440     mov rsi, qword [rsp + 0x40]
0x00005f12      4c01f0         add rax, r14
0x00005f15      4989ce         mov r14, rcx
0x00005f18      49c1c619       rol r14, 0x19
0x00005f1c      4801c6         add rsi, rax
0x00005f1f      4c89e8         mov rax, r13
0x00005f22      48c1c003       rol rax, 3
0x00005f26      4c31d8         xor rax, r11
0x00005f29      4d89eb         mov r11, r13
0x00005f2c      49c1eb06       shr r11, 6
0x00005f30      4c31d8         xor rax, r11
0x00005f33      4801c6         add rsi, rax
0x00005f36      4989f5         mov r13, rsi
0x00005f39      4c89d6         mov rsi, r10
0x00005f3c      4c31c6         xor rsi, r8
0x00005f3f      4c896c2410     mov qword [rsp + 0x10], r13
0x00005f44      4889f0         mov rax, rsi
0x00005f47      48be602f1743.  movabs rsi, 0x78a5636f43172f60
0x00005f51      4c01ee         add rsi, r13
0x00005f54      4c21c8         and rax, r9
0x00005f57      4801f3         add rbx, rsi
0x00005f5a      4c89ce         mov rsi, r9
0x00005f5d      4c31d0         xor rax, r10
0x00005f60      48c1ce0e       ror rsi, 0xe
0x00005f64      4801c3         add rbx, rax
0x00005f67      4889f0         mov rax, rsi
0x00005f6a      4c89ce         mov rsi, r9
0x00005f6d      48c1ce12       ror rsi, 0x12
0x00005f71      4989f3         mov r11, rsi
0x00005f74      4c89ce         mov rsi, r9
0x00005f77      48c1c617       rol rsi, 0x17
0x00005f7b      4931c3         xor r11, rax
0x00005f7e      4889f0         mov rax, rsi
0x00005f81      4889ce         mov rsi, rcx
0x00005f84      48c1ce1c       ror rsi, 0x1c
0x00005f88      4c31d8         xor rax, r11
0x00005f8b      4989f3         mov r11, rsi
0x00005f8e      4889ce         mov rsi, rcx
0x00005f91      4801d8         add rax, rbx
0x00005f94      48c1c61e       rol rsi, 0x1e
0x00005f98      4801c7         add rdi, rax
0x00005f9b      4c89e3         mov rbx, r12
0x00005f9e      4c31de         xor rsi, r11
0x00005fa1      4c31f6         xor rsi, r14
0x00005fa4      4d89e6         mov r14, r12
0x00005fa7      4909ce         or r14, rcx
0x00005faa      4821cb         and rbx, rcx
0x00005fad      4d89f3         mov r11, r14
0x00005fb0      4c8b742448     mov r14, qword [rsp + 0x48]
0x00005fb5      4c8b6c2478     mov r13, qword [rsp + 0x78]
0x00005fba      4921d3         and r11, rdx
0x00005fbd      4909db         or r11, rbx
0x00005fc0      4901f3         add r11, rsi
0x00005fc3      4c89f6         mov rsi, r14
0x00005fc6      4901c3         add r11, rax
0x00005fc9      4c89f0         mov rax, r14
0x00005fcc      48d1ce         ror rsi, 1
0x00005fcf      48c1c808       ror rax, 8
0x00005fd3      4831f0         xor rax, rsi
0x00005fd6      4c89f6         mov rsi, r14
0x00005fd9      48c1ee07       shr rsi, 7
0x00005fdd      4831f0         xor rax, rsi
0x00005fe0      488b742468     mov rsi, qword [rsp + 0x68]
0x00005fe5      4801e8         add rax, rbp
0x00005fe8      488b2c24       mov rbp, qword [rsp]
0x00005fec      4801c6         add rsi, rax
0x00005fef      4889eb         mov rbx, rbp
0x00005ff2      4889e8         mov rax, rbp
0x00005ff5      48c1cb13       ror rbx, 0x13
0x00005ff9      48c1c003       rol rax, 3
0x00005ffd      4831d8         xor rax, rbx
0x00006000      4889eb         mov rbx, rbp
0x00006003      4889cd         mov rbp, rcx
0x00006006      48c1eb06       shr rbx, 6
0x0000600a      4831d8         xor rax, rbx
0x0000600d      48bb72abf0a1.  movabs rbx, 0x84c87814a1f0ab72
0x00006017      4801c6         add rsi, rax
0x0000601a      4c89c0         mov rax, r8
0x0000601d      4c31c8         xor rax, r9
0x00006020      4801f3         add rbx, rsi
0x00006023      4889742418     mov qword [rsp + 0x18], rsi
0x00006028      4821f8         and rax, rdi                            ; ../coreutils-8.31/lib/sha512.c:-71
0x0000602b      4901da         add r10, rbx
0x0000602e      4c31c0         xor rax, r8
0x00006031      4a8d3410       lea rsi, [rax + r10]
0x00006035      4989fa         mov r10, rdi
0x00006038      49c1ca0e       ror r10, 0xe
0x0000603c      4c89d0         mov rax, r10
0x0000603f      4989fa         mov r10, rdi
0x00006042      49c1ca12       ror r10, 0x12
0x00006046      4931c2         xor r10, rax
0x00006049      4889f8         mov rax, rdi
0x0000604c      48c1c017       rol rax, 0x17
0x00006050      4c31d0         xor rax, r10
0x00006053      4d89da         mov r10, r11
0x00006056      4801f0         add rax, rsi
0x00006059      4c89de         mov rsi, r11
0x0000605c      49c1ca1c       ror r10, 0x1c
0x00006060      4801c2         add rdx, rax
0x00006063      48c1c61e       rol rsi, 0x1e
0x00006067      4c21dd         and rbp, r11
0x0000606a      4c31d6         xor rsi, r10
0x0000606d      4d89da         mov r10, r11
0x00006070      49c1c219       rol r10, 0x19
0x00006074      4c31d6         xor rsi, r10
0x00006077      4989ca         mov r10, rcx
0x0000607a      4d09da         or r10, r11
0x0000607d      4d21e2         and r10, r12
0x00006080      4909ea         or r10, rbp
0x00006083      4901f2         add r10, rsi
0x00006086      4c89ee         mov rsi, r13
0x00006089      4901c2         add r10, rax
0x0000608c      4c89e8         mov rax, r13
0x0000608f      48d1ce         ror rsi, 1
0x00006092      48c1c808       ror rax, 8
0x00006096      4831f0         xor rax, rsi
0x00006099      4c89ee         mov rsi, r13
0x0000609c      48c1ee07       shr rsi, 7
0x000060a0      4831f0         xor rax, rsi
0x000060a3      488bb4248000.  mov rsi, qword [rsp + 0x80]
0x000060ab      4c01f0         add rax, r14
0x000060ae      4c8b742410     mov r14, qword [rsp + 0x10]
0x000060b3      4801c6         add rsi, rax
0x000060b6      4c89f3         mov rbx, r14
0x000060b9      4c89f0         mov rax, r14
0x000060bc      48c1cb13       ror rbx, 0x13
0x000060c0      48c1c003       rol rax, 3
0x000060c4      4831d8         xor rax, rbx                            ; ../coreutils-8.31/lib/sha512.c:-72
0x000060c7      4c89f3         mov rbx, r14
0x000060ca      4c8b742458     mov r14, qword [rsp + 0x58]
0x000060cf      48c1eb06       shr rbx, 6
0x000060d3      4831d8         xor rax, rbx
0x000060d6      4801f0         add rax, rsi
0x000060d9      4889c5         mov rbp, rax
0x000060dc      4c89c8         mov rax, r9
0x000060df      4831f8         xor rax, rdi
0x000060e2      48896c2420     mov qword [rsp + 0x20], rbp
0x000060e7      4889c6         mov rsi, rax
0x000060ea      48b8ec39641a.  movabs rax, 0x8cc702081a6439ec
0x000060f4      4801e8         add rax, rbp
0x000060f7      4821d6         and rsi, rdx
0x000060fa      4901c0         add r8, rax
0x000060fd      4889d0         mov rax, rdx
0x00006100      4c31ce         xor rsi, r9
0x00006103      48c1c80e       ror rax, 0xe
0x00006107      4901f0         add r8, rsi
0x0000610a      4889c6         mov rsi, rax                            ; ../coreutils-8.31/lib/sha512.c:-70
0x0000610d      4889d0         mov rax, rdx
0x00006110      48c1c812       ror rax, 0x12
0x00006114      4889c3         mov rbx, rax
0x00006117      4889d0         mov rax, rdx
0x0000611a      4831f3         xor rbx, rsi
0x0000611d      48c1c017       rol rax, 0x17
0x00006121      4889c6         mov rsi, rax
0x00006124      4c89d0         mov rax, r10
0x00006127      48c1c81c       ror rax, 0x1c
0x0000612b      4831de         xor rsi, rbx
0x0000612e      4889c3         mov rbx, rax
0x00006131      4c89d0         mov rax, r10
0x00006134      4c01c6         add rsi, r8
0x00006137      48c1c01e       rol rax, 0x1e
0x0000613b      4d8d0434       lea r8, [r12 + rsi]
0x0000613f      4d89dc         mov r12, r11
0x00006142      4889c5         mov rbp, rax
0x00006145      4c89d0         mov rax, r10
0x00006148      4d21d4         and r12, r10
0x0000614b      4831dd         xor rbp, rbx
0x0000614e      48c1c019       rol rax, 0x19
0x00006152      4831c5         xor rbp, rax
0x00006155      4c89d8         mov rax, r11
0x00006158      4c09d0         or rax, r10
0x0000615b      4821c8         and rax, rcx
0x0000615e      4c09e0         or rax, r12
0x00006161      4c8b642450     mov r12, qword [rsp + 0x50]
0x00006166      4801e8         add rax, rbp
0x00006169      488d1c30       lea rbx, [rax + rsi]
0x0000616d      4c89f6         mov rsi, r14
0x00006170      4c89f0         mov rax, r14
0x00006173      48d1ce         ror rsi, 1
0x00006176      48c1c808       ror rax, 8
0x0000617a      4831f0         xor rax, rsi
0x0000617d      4c89f6         mov rsi, r14
0x00006180      48c1ee07       shr rsi, 7
0x00006184      4831f0         xor rax, rsi
0x00006187      4c01e8         add rax, r13
0x0000618a      4c8b6c2418     mov r13, qword [rsp + 0x18]
0x0000618f      4803442438     add rax, qword [rsp + 0x38]
0x00006194      4c89ee         mov rsi, r13
0x00006197      48c1ce13       ror rsi, 0x13
0x0000619b      4889f5         mov rbp, rsi
0x0000619e      4c89ee         mov rsi, r13
0x000061a1      49c1ed06       shr r13, 6
0x000061a5      48c1c603       rol rsi, 3
0x000061a9      4831ee         xor rsi, rbp
0x000061ac      488bac24c800.  mov rbp, qword [rsp + 0xc8]
0x000061b4      4c31ee         xor rsi, r13
0x000061b7      4801f0         add rax, rsi
0x000061ba      48be281e6323.  movabs rsi, 0x90befffa23631e28
0x000061c4      4989c5         mov r13, rax
0x000061c7      4889f8         mov rax, rdi
0x000061ca      4831d0         xor rax, rdx
0x000061cd      4c01ee         add rsi, r13
0x000061d0      4c896c2448     mov qword [rsp + 0x48], r13
0x000061d5      4c21c0         and rax, r8
0x000061d8      4901f1         add r9, rsi
0x000061db      4c89c6         mov rsi, r8
0x000061de      4831f8         xor rax, rdi
0x000061e1      4901c1         add r9, rax
0x000061e4      4c89c0         mov rax, r8
0x000061e7      48c1c80e       ror rax, 0xe
0x000061eb      48c1ce12       ror rsi, 0x12
0x000061ef      4989f5         mov r13, rsi
0x000061f2      4931c5         xor r13, rax
0x000061f5      4c89c0         mov rax, r8
0x000061f8      48c1c017       rol rax, 0x17
0x000061fc      4c31e8         xor rax, r13
0x000061ff      4c01c8         add rax, r9
0x00006202      4989d9         mov r9, rbx
0x00006205      49c1c91c       ror r9, 0x1c
0x00006209      4801c1         add rcx, rax
0x0000620c      4d89cd         mov r13, r9
0x0000620f      4989d9         mov r9, rbx
0x00006212      49c1c11e       rol r9, 0x1e
0x00006216      4c89ce         mov rsi, r9
0x00006219      4989d9         mov r9, rbx
0x0000621c      4c31ee         xor rsi, r13
0x0000621f      49c1c119       rol r9, 0x19
0x00006223      4c31ce         xor rsi, r9
0x00006226      4d89d1         mov r9, r10
0x00006229      4909d9         or r9, rbx
0x0000622c      4d89cd         mov r13, r9
0x0000622f      4d89d1         mov r9, r10
0x00006232      4921d9         and r9, rbx
0x00006235      4d21dd         and r13, r11
0x00006238      4d09cd         or r13, r9
0x0000623b      4901f5         add r13, rsi
0x0000623e      4889ee         mov rsi, rbp
0x00006241      4901c5         add r13, rax
0x00006244      4889e8         mov rax, rbp
0x00006247      48d1ce         ror rsi, 1
0x0000624a      48c1c808       ror rax, 8
0x0000624e      4831f0         xor rax, rsi
0x00006251      4889ee         mov rsi, rbp
0x00006254      48c1ee07       shr rsi, 7
0x00006258      4831f0         xor rax, rsi
0x0000625b      4c01f0         add rax, r14
0x0000625e      4c8b742420     mov r14, qword [rsp + 0x20]
0x00006263      4803442408     add rax, qword [rsp + 8]
0x00006268      4d89f1         mov r9, r14                             ; ../coreutils-8.31/lib/sha512.c:-69
0x0000626b      4c89f6         mov rsi, r14                            ; ../coreutils-8.31/lib/sha512.c:-70
0x0000626e      49c1c913       ror r9, 0x13                            ; ../coreutils-8.31/lib/sha512.c:-69
0x00006272      48c1c603       rol rsi, 3
0x00006276      4c31ce         xor rsi, r9
0x00006279      4d89f1         mov r9, r14
0x0000627c      49c1e906       shr r9, 6
0x00006280      4c31ce         xor rsi, r9
0x00006283      4801f0         add rax, rsi
0x00006286      48bee9bd82de.  movabs rsi, 0xa4506cebde82bde9
0x00006290      4989c1         mov r9, rax
0x00006293      4889d0         mov rax, rdx
0x00006296      4c31c0         xor rax, r8
0x00006299      4c894c2428     mov qword [rsp + 0x28], r9
0x0000629e      4821c8         and rax, rcx
0x000062a1      4c01ce         add rsi, r9
0x000062a4      4831d0         xor rax, rdx
0x000062a7      4801f7         add rdi, rsi
0x000062aa      4889ce         mov rsi, rcx
0x000062ad      4801c7         add rdi, rax
0x000062b0      48c1ce12       ror rsi, 0x12
0x000062b4      4889c8         mov rax, rcx
0x000062b7      48c1c80e       ror rax, 0xe
0x000062bb      4989f6         mov r14, rsi
0x000062be      4931c6         xor r14, rax
0x000062c1      4889c8         mov rax, rcx
0x000062c4      48c1c017       rol rax, 0x17
0x000062c8      4c31f0         xor rax, r14
0x000062cb      4801f8         add rax, rdi
0x000062ce      4c89ef         mov rdi, r13
0x000062d1      48c1cf1c       ror rdi, 0x1c
0x000062d5      4901c3         add r11, rax
0x000062d8      4989fe         mov r14, rdi
0x000062db      4c89ef         mov rdi, r13
0x000062de      48c1c71e       rol rdi, 0x1e
0x000062e2      4889fe         mov rsi, rdi
0x000062e5      4c89ef         mov rdi, r13
0x000062e8      4c31f6         xor rsi, r14
0x000062eb      48c1c719       rol rdi, 0x19
0x000062ef      4831fe         xor rsi, rdi
0x000062f2      4889df         mov rdi, rbx
0x000062f5      4c09ef         or rdi, r13
0x000062f8      4989fe         mov r14, rdi
0x000062fb      4889df         mov rdi, rbx
0x000062fe      4c21ef         and rdi, r13
0x00006301      4d21d6         and r14, r10
0x00006304      4909fe         or r14, rdi
0x00006307      4901f6         add r14, rsi
0x0000630a      4c89e6         mov rsi, r12
0x0000630d      4901c6         add r14, rax
0x00006310      4c89e0         mov rax, r12
0x00006313      48d1ce         ror rsi, 1
0x00006316      48c1c808       ror rax, 8
0x0000631a      4831f0         xor rax, rsi
0x0000631d      4c89e6         mov rsi, r12
0x00006320      48c1ee07       shr rsi, 7
0x00006324      4831f0         xor rax, rsi
0x00006327      4801e8         add rax, rbp                            ; ../coreutils-8.31/lib/sha512.c:-68
0x0000632a      488b6c2448     mov rbp, qword [rsp + 0x48]
0x0000632f      4803442470     add rax, qword [rsp + 0x70]
0x00006334      4889ef         mov rdi, rbp
0x00006337      4889ee         mov rsi, rbp
0x0000633a      48c1cf13       ror rdi, 0x13
0x0000633e      48c1c603       rol rsi, 3
0x00006342      4831fe         xor rsi, rdi
0x00006345      4889ef         mov rdi, rbp
0x00006348      48c1ef06       shr rdi, 6
0x0000634c      4831fe         xor rsi, rdi
0x0000634f      48bf1579c6b2.  movabs rdi, 0xbef9a3f7b2c67915
0x00006359      4801f0         add rax, rsi
0x0000635c      4889c5         mov rbp, rax
0x0000635f      4c89c0         mov rax, r8
0x00006362      4831c8         xor rax, rcx
0x00006365      4801ef         add rdi, rbp
0x00006368      48896c2450     mov qword [rsp + 0x50], rbp
0x0000636d      4c21d8         and rax, r11
0x00006370      4801fa         add rdx, rdi
0x00006373      4c89f7         mov rdi, r14
0x00006376      4c31c0         xor rax, r8
0x00006379      48c1c71e       rol rdi, 0x1e
0x0000637d      488d3410       lea rsi, [rax + rdx]
0x00006381      4c89d8         mov rax, r11
0x00006384      4c89da         mov rdx, r11
0x00006387      48c1c80e       ror rax, 0xe
0x0000638b      48c1ca12       ror rdx, 0x12
0x0000638f      4831c2         xor rdx, rax
0x00006392      4c89d8         mov rax, r11
0x00006395      48c1c017       rol rax, 0x17
0x00006399      4831d0         xor rax, rdx
0x0000639c      4c89f2         mov rdx, r14
0x0000639f      48c1ca1c       ror rdx, 0x1c
0x000063a3      4801f0         add rax, rsi
0x000063a6      4831d7         xor rdi, rdx
0x000063a9      4c89f2         mov rdx, r14
0x000063ac      498d3402       lea rsi, [r10 + rax]
0x000063b0      48c1c219       rol rdx, 0x19
0x000063b4      4d89ea         mov r10, r13
0x000063b7      4831d7         xor rdi, rdx
0x000063ba      4c89ea         mov rdx, r13
0x000063bd      4d21f2         and r10, r14
0x000063c0      4c09f2         or rdx, r14
0x000063c3      4821da         and rdx, rbx
0x000063c6      4c09d2         or rdx, r10
0x000063c9      4c8b542428     mov r10, qword [rsp + 0x28]
0x000063ce      4801fa         add rdx, rdi
0x000063d1      4801c2         add rdx, rax
0x000063d4      4c89f8         mov rax, r15
0x000063d7      48d1c8         ror rax, 1
0x000063da      4d89d1         mov r9, r10
0x000063dd      4889c7         mov rdi, rax
0x000063e0      4c89f8         mov rax, r15
0x000063e3      48c1c808       ror rax, 8
0x000063e7      4831f8         xor rax, rdi
0x000063ea      4c89ff         mov rdi, r15
0x000063ed      48c1ef07       shr rdi, 7
0x000063f1      4831f8         xor rax, rdi
0x000063f4      4c89d7         mov rdi, r10
0x000063f7      4c01e0         add rax, r12
0x000063fa      48030424       add rax, qword [rsp]
0x000063fe      49c1c913       ror r9, 0x13
0x00006402      48c1c703       rol rdi, 3
0x00006406      4c31cf         xor rdi, r9
0x00006409      4d89d1         mov r9, r10
0x0000640c      49c1e906       shr r9, 6
0x00006410      4c31cf         xor rdi, r9
0x00006413      4801f8         add rax, rdi
0x00006416      48bf2b5372e3.  movabs rdi, 0xc67178f2e372532b
0x00006420      4989c2         mov r10, rax
0x00006423      4889c8         mov rax, rcx
0x00006426      4c31d8         xor rax, r11
0x00006429      4c01d7         add rdi, r10
0x0000642c      4c89542430     mov qword [rsp + 0x30], r10
0x00006431      4821f0         and rax, rsi
0x00006434      4901f8         add r8, rdi
0x00006437      4889f7         mov rdi, rsi
0x0000643a      4831c8         xor rax, rcx
0x0000643d      48c1cf12       ror rdi, 0x12
0x00006441      4d89f2         mov r10, r14
0x00006444      4989c1         mov r9, rax
0x00006447      4921d2         and r10, rdx
0x0000644a      4b8d0401       lea rax, [r9 + r8]
0x0000644e      4989f0         mov r8, rsi
0x00006451      4989d1         mov r9, rdx
0x00006454      49c1c80e       ror r8, 0xe
0x00006458      49c1c11e       rol r9, 0x1e
0x0000645c      4c31c7         xor rdi, r8
0x0000645f      4989f0         mov r8, rsi
0x00006462      49c1c017       rol r8, 0x17
0x00006466      4931f8         xor r8, rdi
0x00006469      4889d7         mov rdi, rdx
0x0000646c      48c1cf1c       ror rdi, 0x1c
0x00006470      4901c0         add r8, rax                             ; ../coreutils-8.31/lib/sha512.c:-66
0x00006473      4931f9         xor r9, rdi                             ; ../coreutils-8.31/lib/sha512.c:-67
0x00006476      4889d7         mov rdi, rdx
0x00006479      4a8d0403       lea rax, [rbx + r8]
0x0000647d      48c1c719       rol rdi, 0x19
0x00006481      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00006486      4931f9         xor r9, rdi
0x00006489      4c89f7         mov rdi, r14
0x0000648c      4809d7         or rdi, rdx
0x0000648f      4c21ef         and rdi, r13
0x00006492      4c09d7         or rdi, r10
0x00006495      4c01cf         add rdi, r9
0x00006498      4989d9         mov r9, rbx
0x0000649b      4c01c7         add rdi, r8
0x0000649e      4989d8         mov r8, rbx
0x000064a1      49d1c9         ror r9, 1
0x000064a4      49c1c808       ror r8, 8
0x000064a8      4d31c8         xor r8, r9
0x000064ab      4989d9         mov r9, rbx
0x000064ae      49c1e907       shr r9, 7
0x000064b2      4d31c8         xor r8, r9
0x000064b5      4d01c7         add r15, r8
0x000064b8      4989e8         mov r8, rbp
0x000064bb      4c037c2410     add r15, qword [rsp + 0x10]
0x000064c0      49c1c813       ror r8, 0x13
0x000064c4      4d89c1         mov r9, r8
0x000064c7      4989e8         mov r8, rbp
0x000064ca      48c1ed06       shr rbp, 6
0x000064ce      49c1c003       rol r8, 3
0x000064d2      4d31c8         xor r8, r9
0x000064d5      49b99c6126ea.  movabs r9, 0xca273eceea26619c
0x000064df      4931e8         xor r8, rbp
0x000064e2      4d01f8         add r8, r15
0x000064e5      4c8b7c2440     mov r15, qword [rsp + 0x40]
0x000064ea      4d89c4         mov r12, r8
0x000064ed      4c898424f000.  mov qword [rsp + 0xf0], r8
0x000064f5      4d89d8         mov r8, r11
0x000064f8      4931f0         xor r8, rsi
0x000064fb      4d01e1         add r9, r12
0x000064fe      4c89642458     mov qword [rsp + 0x58], r12
0x00006503      4921c0         and r8, rax
0x00006506      4c01c9         add rcx, r9
0x00006509      4989d1         mov r9, rdx
0x0000650c      4d31d8         xor r8, r11                             ; ../coreutils-8.31/lib/sha512.c:-66
0x0000650f      4921f9         and r9, rdi
0x00006512      4d89fc         mov r12, r15
0x00006515      4d89c2         mov r10, r8
0x00006518      4d8d040a       lea r8, [r10 + rcx]
0x0000651c      4889c1         mov rcx, rax
0x0000651f      4989c2         mov r10, rax
0x00006522      48c1c90e       ror rcx, 0xe
0x00006526      49c1ca12       ror r10, 0x12
0x0000652a      4931ca         xor r10, rcx
0x0000652d      4889c1         mov rcx, rax
0x00006530      48c1c117       rol rcx, 0x17
0x00006534      4c31d1         xor rcx, r10
0x00006537      4989fa         mov r10, rdi
0x0000653a      4c01c1         add rcx, r8
0x0000653d      4989f8         mov r8, rdi
0x00006540      49c1ca1c       ror r10, 0x1c
0x00006544      49c1c01e       rol r8, 0x1e
0x00006548      4901cd         add r13, rcx
0x0000654b      4d31d0         xor r8, r10
0x0000654e      4989fa         mov r10, rdi
0x00006551      49c1c219       rol r10, 0x19
0x00006555      4d31d0         xor r8, r10
0x00006558      4989d2         mov r10, rdx
0x0000655b      4909fa         or r10, rdi
0x0000655e      4d21f2         and r10, r14
0x00006561      4d09ca         or r10, r9
0x00006564      4d89e9         mov r9, r13
0x00006567      4d01c2         add r10, r8
0x0000656a      4901ca         add r10, rcx
0x0000656d      4c89f9         mov rcx, r15
0x00006570      49d1cc         ror r12, 1
0x00006573      48c1c908       ror rcx, 8
0x00006577      49c1c912       ror r9, 0x12
0x0000657b      4c31e1         xor rcx, r12
0x0000657e      4d89fc         mov r12, r15
0x00006581      49c1ec07       shr r12, 7                              ; ../coreutils-8.31/lib/sha512.c:-65
0x00006585      4c31e1         xor rcx, r12
0x00006588      4801d9         add rcx, rbx
0x0000658b      488b5c2430     mov rbx, qword [rsp + 0x30]
0x00006590      48034c2418     add rcx, qword [rsp + 0x18]
0x00006595      4989d8         mov r8, rbx
0x00006598      4989dc         mov r12, rbx
0x0000659b      49c1c813       ror r8, 0x13
0x0000659f      49c1c403       rol r12, 3
0x000065a3      4d31c4         xor r12, r8                             ; ../coreutils-8.31/lib/sha512.c:-66
0x000065a6      4989d8         mov r8, rbx                             ; ../coreutils-8.31/lib/sha512.c:-65
0x000065a9      488b5c2468     mov rbx, qword [rsp + 0x68]
0x000065ae      49c1e806       shr r8, 6
0x000065b2      4d31c4         xor r12, r8
0x000065b5      49b807c2c021.  movabs r8, 0xd186b8c721c0c207
0x000065bf      4901cc         add r12, rcx
0x000065c2      4889f1         mov rcx, rsi
0x000065c5      4889dd         mov rbp, rbx
0x000065c8      4831c1         xor rcx, rax
0x000065cb      4d01e0         add r8, r12
0x000065ce      4c89a424f800.  mov qword [rsp + 0xf8], r12
0x000065d6      4c21e9         and rcx, r13
0x000065d9      4d01c3         add r11, r8
0x000065dc      4831f1         xor rcx, rsi
0x000065df      4901cb         add r11, rcx
0x000065e2      4c89e9         mov rcx, r13
0x000065e5      48c1c90e       ror rcx, 0xe
0x000065e9      4931c9         xor r9, rcx
0x000065ec      4c89e9         mov rcx, r13
0x000065ef      48c1c117       rol rcx, 0x17
0x000065f3      4c31c9         xor rcx, r9
0x000065f6      4c01d9         add rcx, r11
0x000065f9      4d89d3         mov r11, r10
0x000065fc      49c1cb1c       ror r11, 0x1c
0x00006600      4901ce         add r14, rcx
0x00006603      4d89d9         mov r9, r11
0x00006606      4d89d3         mov r11, r10
0x00006609      49c1c31e       rol r11, 0x1e
0x0000660d      4d89d8         mov r8, r11
0x00006610      4d89d3         mov r11, r10
0x00006613      4d31c8         xor r8, r9
0x00006616      49c1c319       rol r11, 0x19
0x0000661a      4d31d8         xor r8, r11
0x0000661d      4989fb         mov r11, rdi
0x00006620      4d09d3         or r11, r10
0x00006623      48d1cd         ror rbp, 1
0x00006626      4d89d9         mov r9, r11
0x00006629      4989fb         mov r11, rdi
0x0000662c      4d21d3         and r11, r10
0x0000662f      4921d1         and r9, rdx
0x00006632      4d09d9         or r9, r11
0x00006635      4989db         mov r11, rbx
0x00006638      49c1cb08       ror r11, 8
0x0000663c      4d01c1         add r9, r8
0x0000663f      4931eb         xor r11, rbp
0x00006642      4889dd         mov rbp, rbx
0x00006645      4901c9         add r9, rcx
0x00006648      48c1ed07       shr rbp, 7
0x0000664c      4931eb         xor r11, rbp
0x0000664f      4d01fb         add r11, r15
0x00006652      4c035c2420     add r11, qword [rsp + 0x20]
0x00006657      4c8b442458     mov r8, qword [rsp + 0x58]
0x0000665c      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00006664      4c89c3         mov rbx, r8                             ; ../coreutils-8.31/lib/sha512.c:-64
0x00006667      4c89c1         mov rcx, r8                             ; ../coreutils-8.31/lib/sha512.c:-65
0x0000666a      48c1c303       rol rbx, 3                              ; ../coreutils-8.31/lib/sha512.c:-64
0x0000666e      48c1c913       ror rcx, 0x13
0x00006672      4889dd         mov rbp, rbx
0x00006675      4831cd         xor rbp, rcx
0x00006678      4c89c1         mov rcx, r8
0x0000667b      49b81eebe0cd.  movabs r8, 0xeada7dd6cde0eb1e
0x00006685      48c1e906       shr rcx, 6
0x00006689      4831cd         xor rbp, rcx
0x0000668c      4889c1         mov rcx, rax
0x0000668f      4c01dd         add rbp, r11
0x00006692      4c31e9         xor rcx, r13
0x00006695      4d89f3         mov r11, r14
0x00006698      4901e8         add r8, rbp
0x0000669b      4c21f1         and rcx, r14
0x0000669e      49c1cb12       ror r11, 0x12
0x000066a2      4831c1         xor rcx, rax
0x000066a5      4c01c6         add rsi, r8
0x000066a8      4d89d8         mov r8, r11
0x000066ab      4801ce         add rsi, rcx
0x000066ae      4c89f1         mov rcx, r14
0x000066b1      4d89cb         mov r11, r9
0x000066b4      48c1c90e       ror rcx, 0xe
0x000066b8      4889ac240001.  mov qword [rsp + 0x100], rbp
0x000066c0      4931c8         xor r8, rcx
0x000066c3      4c89f1         mov rcx, r14
0x000066c6      48c1c117       rol rcx, 0x17
0x000066ca      4c31c1         xor rcx, r8
0x000066cd      4801f1         add rcx, rsi
0x000066d0      4801ca         add rdx, rcx
0x000066d3      49c1cb1c       ror r11, 0x1c
0x000066d7      4d89d8         mov r8, r11
0x000066da      4d89cb         mov r11, r9
0x000066dd      49c1c31e       rol r11, 0x1e
0x000066e1      4c89de         mov rsi, r11
0x000066e4      4d89cb         mov r11, r9
0x000066e7      4c31c6         xor rsi, r8
0x000066ea      49c1c319       rol r11, 0x19
0x000066ee      4c31de         xor rsi, r11
0x000066f1      4d89d3         mov r11, r10
0x000066f4      4d09cb         or r11, r9
0x000066f7      4d89d8         mov r8, r11
0x000066fa      4d89d3         mov r11, r10
0x000066fd      4d21cb         and r11, r9
0x00006700      4921f8         and r8, rdi
0x00006703      4d09d8         or r8, r11
0x00006706      4d89fb         mov r11, r15
0x00006709      4901f0         add r8, rsi
0x0000670c      4c89fe         mov rsi, r15
0x0000670f      49c1cb08       ror r11, 8
0x00006713      48d1ce         ror rsi, 1
0x00006716      4901c8         add r8, rcx
0x00006719      4c89e1         mov rcx, r12
0x0000671c      4931f3         xor r11, rsi
0x0000671f      4c89fe         mov rsi, r15
0x00006722      48c1c913       ror rcx, 0x13
0x00006726      48c1ee07       shr rsi, 7
0x0000672a      4931f3         xor r11, rsi
0x0000672d      4c89e6         mov rsi, r12
0x00006730      4c035c2468     add r11, qword [rsp + 0x68]
0x00006735      48c1c603       rol rsi, 3
0x00006739      4c035c2448     add r11, qword [rsp + 0x48]
0x0000673e      4889f3         mov rbx, rsi
0x00006741      4831cb         xor rbx, rcx
0x00006744      4c89e1         mov rcx, r12
0x00006747      48c1e906       shr rcx, 6
0x0000674b      4831cb         xor rbx, rcx
0x0000674e      4c89e9         mov rcx, r13
0x00006751      4c01db         add rbx, r11
0x00006754      4c31f1         xor rcx, r14
0x00006757      49bb78d16eee.  movabs r11, 0xf57d4f7fee6ed178
0x00006761      4901db         add r11, rbx
0x00006764      4821d1         and rcx, rdx
0x00006767      48899c240801.  mov qword [rsp + 0x108], rbx
0x0000676f      4c31e9         xor rcx, r13
0x00006772      4c01d8         add rax, r11
0x00006775      4989d3         mov r11, rdx
0x00006778      488d3401       lea rsi, [rcx + rax]
0x0000677c      49c1cb12       ror r11, 0x12
0x00006780      4889d1         mov rcx, rdx
0x00006783      48c1c90e       ror rcx, 0xe
0x00006787      4c89d8         mov rax, r11
0x0000678a      4d89c3         mov r11, r8
0x0000678d      4831c8         xor rax, rcx
0x00006790      4889d1         mov rcx, rdx
0x00006793      48c1c117       rol rcx, 0x17
0x00006797      49c1cb1c       ror r11, 0x1c
0x0000679b      4831c1         xor rcx, rax
0x0000679e      4c89d8         mov rax, r11
0x000067a1      4d89c3         mov r11, r8
0x000067a4      49c1c31e       rol r11, 0x1e
0x000067a8      4801f1         add rcx, rsi
0x000067ab      4c89de         mov rsi, r11
0x000067ae      4d89c3         mov r11, r8
0x000067b1      4801cf         add rdi, rcx
0x000067b4      4831c6         xor rsi, rax
0x000067b7      49c1c319       rol r11, 0x19
0x000067bb      4c31de         xor rsi, r11
0x000067be      4d89cb         mov r11, r9
0x000067c1      4d09c3         or r11, r8
0x000067c4      4c89d8         mov rax, r11
0x000067c7      4d89cb         mov r11, r9
0x000067ca      4d21c3         and r11, r8
0x000067cd      4c21d0         and rax, r10
0x000067d0      4c09d8         or rax, r11
0x000067d3      4801f0         add rax, rsi
0x000067d6      488b742438     mov rsi, qword [rsp + 0x38]
0x000067db      4801c8         add rax, rcx
0x000067de      4989f3         mov r11, rsi
0x000067e1      4889f1         mov rcx, rsi
0x000067e4      49d1cb         ror r11, 1
0x000067e7      48c1c908       ror rcx, 8
0x000067eb      4c31d9         xor rcx, r11
0x000067ee      4989f3         mov r11, rsi
0x000067f1      4889ee         mov rsi, rbp
0x000067f4      49c1eb07       shr r11, 7
0x000067f8      48c1ce13       ror rsi, 0x13
0x000067fc      4c31d9         xor rcx, r11
0x000067ff      4e8d1c39       lea r11, [rcx + r15]
0x00006803      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00006808      4d89c7         mov r15, r8
0x0000680b      4c01d9         add rcx, r11
0x0000680e      4989eb         mov r11, rbp
0x00006811      49c1c303       rol r11, 3
0x00006815      4931f3         xor r11, rsi
0x00006818      4889ee         mov rsi, rbp
0x0000681b      48c1ee06       shr rsi, 6
0x0000681f      4931f3         xor r11, rsi
0x00006822      4c89f6         mov rsi, r14
0x00006825      4831d6         xor rsi, rdx
0x00006828      4901cb         add r11, rcx
0x0000682b      4889f1         mov rcx, rsi
0x0000682e      48beba6f1772.  movabs rsi, 0x6f067aa72176fba
0x00006838      4c899c241001.  mov qword [rsp + 0x110], r11
0x00006840      4c01de         add rsi, r11
0x00006843      4821f9         and rcx, rdi
0x00006846      4c31f1         xor rcx, r14
0x00006849      4901f5         add r13, rsi
0x0000684c      4889fe         mov rsi, rdi
0x0000684f      4901cd         add r13, rcx
0x00006852      48c1ce0e       ror rsi, 0xe
0x00006856      4921c7         and r15, rax
0x00006859      4889f1         mov rcx, rsi
0x0000685c      4889fe         mov rsi, rdi
0x0000685f      48c1ce12       ror rsi, 0x12
0x00006863      4831ce         xor rsi, rcx
0x00006866      4889f9         mov rcx, rdi
0x00006869      48c1c117       rol rcx, 0x17
0x0000686d      4831f1         xor rcx, rsi
0x00006870      4889c6         mov rsi, rax
0x00006873      4c01e9         add rcx, r13
0x00006876      4989c5         mov r13, rax
0x00006879      48c1ce1c       ror rsi, 0x1c
0x0000687d      49c1c51e       rol r13, 0x1e
0x00006881      4901ca         add r10, rcx
0x00006884      4931f5         xor r13, rsi
0x00006887      4889c6         mov rsi, rax
0x0000688a      48c1c619       rol rsi, 0x19
0x0000688e      4931f5         xor r13, rsi
0x00006891      4c89c6         mov rsi, r8
0x00006894      4809c6         or rsi, rax
0x00006897      4c21ce         and rsi, r9
0x0000689a      4c09fe         or rsi, r15
0x0000689d      4c8b7c2408     mov r15, qword [rsp + 8]
0x000068a2      4c01ee         add rsi, r13
0x000068a5      4801ce         add rsi, rcx
0x000068a8      4d89fd         mov r13, r15
0x000068ab      4c89f9         mov rcx, r15
0x000068ae      49d1cd         ror r13, 1
0x000068b1      48c1c908       ror rcx, 8
0x000068b5      4c31e9         xor rcx, r13
0x000068b8      4d89fd         mov r13, r15
0x000068bb      4989df         mov r15, rbx
0x000068be      49c1ed07       shr r13, 7
0x000068c2      49c1cf13       ror r15, 0x13
0x000068c6      4c31e9         xor rcx, r13
0x000068c9      4989dd         mov r13, rbx                            ; ../coreutils-8.31/lib/sha512.c:-61
0x000068cc      48034c2438     add rcx, qword [rsp + 0x38]
0x000068d1      48034c2450     add rcx, qword [rsp + 0x50]
0x000068d6      49c1c503       rol r13, 3
0x000068da      4d31fd         xor r13, r15
0x000068dd      4989df         mov r15, rbx
0x000068e0      49c1ef06       shr r15, 6
0x000068e4      4d31fd         xor r13, r15
0x000068e7      4e8d3c29       lea r15, [rcx + r13]
0x000068eb      4889d1         mov rcx, rdx
0x000068ee      4831f9         xor rcx, rdi
0x000068f1      4989cd         mov r13, rcx
0x000068f4      48b9a698c8a2.  movabs rcx, 0xa637dc5a2c898a6
0x000068fe      4c897c2438     mov qword [rsp + 0x38], r15
0x00006903      4d21d5         and r13, r10
0x00006906      4c01f9         add rcx, r15
0x00006909      4c89bc241801.  mov qword [rsp + 0x118], r15
0x00006911      4901ce         add r14, rcx
0x00006914      4c89d1         mov rcx, r10
0x00006917      4931d5         xor r13, rdx
0x0000691a      48c1c90e       ror rcx, 0xe
0x0000691e      4d01ee         add r14, r13
0x00006921      4989c7         mov r15, rax
0x00006924      4989cd         mov r13, rcx
0x00006927      4c89d1         mov rcx, r10
0x0000692a      4921f7         and r15, rsi
0x0000692d      48c1c912       ror rcx, 0x12
0x00006931      4c31e9         xor rcx, r13
0x00006934      4d89d5         mov r13, r10
0x00006937      49c1c517       rol r13, 0x17
0x0000693b      4931cd         xor r13, rcx
0x0000693e      4889f1         mov rcx, rsi
0x00006941      4d01f5         add r13, r14
0x00006944      4989f6         mov r14, rsi
0x00006947      48c1c91c       ror rcx, 0x1c
0x0000694b      49c1c61e       rol r14, 0x1e
0x0000694f      4d01e9         add r9, r13
0x00006952      4931ce         xor r14, rcx
0x00006955      4889f1         mov rcx, rsi
0x00006958      48c1c119       rol rcx, 0x19
0x0000695c      4931ce         xor r14, rcx
0x0000695f      4889c1         mov rcx, rax
0x00006962      4809f1         or rcx, rsi
0x00006965      4c21c1         and rcx, r8
0x00006968      4c09f9         or rcx, r15
0x0000696b      4c8b7c2470     mov r15, qword [rsp + 0x70]
0x00006970      4c01f1         add rcx, r14
0x00006973      4c01e9         add rcx, r13
0x00006976      4d89fe         mov r14, r15
0x00006979      4d89fd         mov r13, r15
0x0000697c      49d1ce         ror r14, 1
0x0000697f      49c1cd08       ror r13, 8
0x00006983      4d31f5         xor r13, r14
0x00006986      4d89fe         mov r14, r15
0x00006989      4d89df         mov r15, r11
0x0000698c      49c1ee07       shr r14, 7
0x00006990      49c1cf13       ror r15, 0x13
0x00006994      4d31f5         xor r13, r14
0x00006997      4d89de         mov r14, r11
0x0000699a      4c036c2408     add r13, qword [rsp + 8]
0x0000699f      4c036c2430     add r13, qword [rsp + 0x30]
0x000069a4      49c1c603       rol r14, 3
0x000069a8      4d31fe         xor r14, r15
0x000069ab      4d89df         mov r15, r11
0x000069ae      49c1ef06       shr r15, 6
0x000069b2      4d31fe         xor r14, r15
0x000069b5      49bfae0df9be.  movabs r15, 0x113f9804bef90dae
0x000069bf      4d01f5         add r13, r14
0x000069c2      4d89ee         mov r14, r13
0x000069c5      4c89ac242001.  mov qword [rsp + 0x120], r13
0x000069cd      4989fd         mov r13, rdi
0x000069d0      4d31d5         xor r13, r10
0x000069d3      4d01f7         add r15, r14
0x000069d6      4c89742408     mov qword [rsp + 8], r14
0x000069db      4d21cd         and r13, r9
0x000069de      4c01fa         add rdx, r15
0x000069e1      4989cf         mov r15, rcx
0x000069e4      4931fd         xor r13, rdi
0x000069e7      49c1c71e       rol r15, 0x1e
0x000069eb      4d8d741500     lea r14, [r13 + rdx]
0x000069f0      4c89ca         mov rdx, r9
0x000069f3      48c1ca0e       ror rdx, 0xe
0x000069f7      4989d5         mov r13, rdx
0x000069fa      4c89ca         mov rdx, r9
0x000069fd      48c1ca12       ror rdx, 0x12
0x00006a01      4c31ea         xor rdx, r13
0x00006a04      4d89cd         mov r13, r9
0x00006a07      49c1c517       rol r13, 0x17
0x00006a0b      4931d5         xor r13, rdx
0x00006a0e      4889ca         mov rdx, rcx
0x00006a11      4d01f5         add r13, r14
0x00006a14      48c1ca1c       ror rdx, 0x1c
0x00006a18      4d89fe         mov r14, r15
0x00006a1b      4931d6         xor r14, rdx
0x00006a1e      4889ca         mov rdx, rcx
0x00006a21      4989f7         mov r15, rsi
0x00006a24      48c1c219       rol rdx, 0x19
0x00006a28      4921cf         and r15, rcx
0x00006a2b      4d01e8         add r8, r13
0x00006a2e      4931d6         xor r14, rdx
0x00006a31      4889f2         mov rdx, rsi
0x00006a34      4809ca         or rdx, rcx
0x00006a37      4821c2         and rdx, rax
0x00006a3a      4c09fa         or rdx, r15
0x00006a3d      4c8b3c24       mov r15, qword [rsp]
0x00006a41      4c01f2         add rdx, r14
0x00006a44      4c01ea         add rdx, r13
0x00006a47      4d89fe         mov r14, r15
0x00006a4a      4d89fd         mov r13, r15
0x00006a4d      49d1ce         ror r14, 1
0x00006a50      49c1cd08       ror r13, 8
0x00006a54      4d31f5         xor r13, r14
0x00006a57      4d89fe         mov r14, r15
0x00006a5a      49c1ee07       shr r14, 7
0x00006a5e      4d31f5         xor r13, r14
0x00006a61      4c8b742438     mov r14, qword [rsp + 0x38]
0x00006a66      4c036c2470     add r13, qword [rsp + 0x70]
0x00006a6b      4c036c2458     add r13, qword [rsp + 0x58]
0x00006a70      4d89f7         mov r15, r14
0x00006a73      49c1c603       rol r14, 3
0x00006a77      49c1cf13       ror r15, 0x13                           ; ../coreutils-8.31/lib/sha512.c:-60
0x00006a7b      4d31fe         xor r14, r15
0x00006a7e      4c8b7c2438     mov r15, qword [rsp + 0x38]
0x00006a83      49c1ef06       shr r15, 6
0x00006a87      4d31fe         xor r14, r15
0x00006a8a      4d01f5         add r13, r14
0x00006a8d      49be1b471c13.  movabs r14, 0x1b710b35131c471b
0x00006a97      4d89ef         mov r15, r13
0x00006a9a      4c89ac242801.  mov qword [rsp + 0x128], r13
0x00006aa2      4d89d5         mov r13, r10
0x00006aa5      4d31cd         xor r13, r9
0x00006aa8      4d01fe         add r14, r15
0x00006aab      4c897c2440     mov qword [rsp + 0x40], r15
0x00006ab0      4d21c5         and r13, r8
0x00006ab3      4c01f7         add rdi, r14
0x00006ab6      4d89c7         mov r15, r8
0x00006ab9      4d31d5         xor r13, r10
0x00006abc      49c1c717       rol r15, 0x17
0x00006ac0      4c01ef         add rdi, r13
0x00006ac3      4d89c5         mov r13, r8
0x00006ac6      49c1cd0e       ror r13, 0xe
0x00006aca      4d89ee         mov r14, r13
0x00006acd      4d89c5         mov r13, r8
0x00006ad0      49c1cd12       ror r13, 0x12
0x00006ad4      4d31f5         xor r13, r14
0x00006ad7      4d31fd         xor r13, r15
0x00006ada      4989d7         mov r15, rdx
0x00006add      4901fd         add r13, rdi
0x00006ae0      49c1c719       rol r15, 0x19
0x00006ae4      4a8d3c28       lea rdi, [rax + r13]
0x00006ae8      4889d0         mov rax, rdx
0x00006aeb      48c1c81c       ror rax, 0x1c
0x00006aef      4989c6         mov r14, rax
0x00006af2      4889d0         mov rax, rdx
0x00006af5      48c1c01e       rol rax, 0x1e
0x00006af9      4c31f0         xor rax, r14
0x00006afc      4c31f8         xor rax, r15
0x00006aff      4989cf         mov r15, rcx
0x00006b02      4909d7         or r15, rdx
0x00006b05      4d89fe         mov r14, r15
0x00006b08      4989cf         mov r15, rcx
0x00006b0b      4921d7         and r15, rdx
0x00006b0e      4921f6         and r14, rsi
0x00006b11      4d09fe         or r14, r15
0x00006b14      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x00006b19      4901c6         add r14, rax
0x00006b1c      4d01f5         add r13, r14
0x00006b1f      4c89f8         mov rax, r15
0x00006b22      4d89fe         mov r14, r15
0x00006b25      49d1ce         ror r14, 1
0x00006b28      48c1c808       ror rax, 8
0x00006b2c      4c31f0         xor rax, r14
0x00006b2f      4d89fe         mov r14, r15
0x00006b32      49c1ee07       shr r14, 7
0x00006b36      4c31f0         xor rax, r14
0x00006b39      48030424       add rax, qword [rsp]
0x00006b3d      4901c4         add r12, rax
0x00006b40      488b442408     mov rax, qword [rsp + 8]
0x00006b45      4989c7         mov r15, rax
0x00006b48      49c1cf13       ror r15, 0x13
0x00006b4c      4d89fe         mov r14, r15
0x00006b4f      4989c7         mov r15, rax
0x00006b52      48c1c003       rol rax, 3
0x00006b56      4c31f0         xor rax, r14
0x00006b59      49c1ef06       shr r15, 6
0x00006b5d      49be847d0423.  movabs r14, 0x28db77f523047d84
0x00006b67      4c31f8         xor rax, r15
0x00006b6a      4d8d3c04       lea r15, [r12 + rax]
0x00006b6e      4d89cc         mov r12, r9
0x00006b71      4d31c4         xor r12, r8
0x00006b74      4c89e0         mov rax, r12
0x00006b77      4d01fe         add r14, r15
0x00006b7a      4c89bc243001.  mov qword [rsp + 0x130], r15
0x00006b82      4821f8         and rax, rdi
0x00006b85      4d01f2         add r10, r14
0x00006b88      4989d6         mov r14, rdx
0x00006b8b      4c31c8         xor rax, r9
0x00006b8e      4d21ee         and r14, r13
0x00006b91      4e8d2410       lea r12, [rax + r10]
0x00006b95      4989fa         mov r10, rdi
0x00006b98      49c1ca0e       ror r10, 0xe
0x00006b9c      4c89d0         mov rax, r10
0x00006b9f      4989fa         mov r10, rdi
0x00006ba2      49c1ca12       ror r10, 0x12
0x00006ba6      4931c2         xor r10, rax
0x00006ba9      4889f8         mov rax, rdi
0x00006bac      48c1c017       rol rax, 0x17
0x00006bb0      4c31d0         xor rax, r10
0x00006bb3      4d89ea         mov r10, r13
0x00006bb6      4c01e0         add rax, r12
0x00006bb9      4d89ec         mov r12, r13
0x00006bbc      49c1ca1c       ror r10, 0x1c
0x00006bc0      49c1c41e       rol r12, 0x1e
0x00006bc4      4801c6         add rsi, rax
0x00006bc7      4d31d4         xor r12, r10
0x00006bca      4d89ea         mov r10, r13
0x00006bcd      49c1c219       rol r10, 0x19
0x00006bd1      4d31d4         xor r12, r10
0x00006bd4      4989d2         mov r10, rdx
0x00006bd7      4d09ea         or r10, r13
0x00006bda      4921ca         and r10, rcx
0x00006bdd      4d09f2         or r10, r14
0x00006be0      4c8b742418     mov r14, qword [rsp + 0x18]
0x00006be5      4d01e2         add r10, r12
0x00006be8      4901c2         add r10, rax
0x00006beb      4d89f4         mov r12, r14
0x00006bee      4c89f0         mov rax, r14
0x00006bf1      49d1cc         ror r12, 1
0x00006bf4      48c1c808       ror rax, 8
0x00006bf8      4c31e0         xor rax, r12
0x00006bfb      4d89f4         mov r12, r14
0x00006bfe      49c1ec07       shr r12, 7
0x00006c02      4c31e0         xor rax, r12
0x00006c05      4803442410     add rax, qword [rsp + 0x10]
0x00006c0a      4c8b742440     mov r14, qword [rsp + 0x40]
0x00006c0f      4d89f4         mov r12, r14
0x00006c12      4801e8         add rax, rbp                            ; ../coreutils-8.31/lib/sha512.c:-57
0x00006c15      4c89f5         mov rbp, r14
0x00006c18      49c1cc13       ror r12, 0x13
0x00006c1c      48c1c503       rol rbp, 3
0x00006c20      4c31e5         xor rbp, r12
0x00006c23      4d89f4         mov r12, r14
0x00006c26      49be9324c740.  movabs r14, 0x32caab7b40c72493
0x00006c30      49c1ec06       shr r12, 6
0x00006c34      4c31e5         xor rbp, r12
0x00006c37      4801c5         add rbp, rax
0x00006c3a      4c89c0         mov rax, r8
0x00006c3d      4831f8         xor rax, rdi
0x00006c40      4901ee         add r14, rbp
0x00006c43      4889ac243801.  mov qword [rsp + 0x138], rbp
0x00006c4b      4821f0         and rax, rsi
0x00006c4e      4d01f1         add r9, r14
0x00006c51      4d89ee         mov r14, r13
0x00006c54      4c31c0         xor rax, r8
0x00006c57      4e8d2408       lea r12, [rax + r9]
0x00006c5b      4989f1         mov r9, rsi
0x00006c5e      49c1c90e       ror r9, 0xe
0x00006c62      4c89c8         mov rax, r9
0x00006c65      4989f1         mov r9, rsi
0x00006c68      49c1c912       ror r9, 0x12
0x00006c6c      4931c1         xor r9, rax
0x00006c6f      4889f0         mov rax, rsi
0x00006c72      48c1c017       rol rax, 0x17
0x00006c76      4c31c8         xor rax, r9
0x00006c79      4d89d1         mov r9, r10
0x00006c7c      4c01e0         add rax, r12
0x00006c7f      4d89d4         mov r12, r10
0x00006c82      49c1c91c       ror r9, 0x1c
0x00006c86      49c1c41e       rol r12, 0x1e
0x00006c8a      4801c1         add rcx, rax
0x00006c8d      4d31cc         xor r12, r9
0x00006c90      4d89d1         mov r9, r10
0x00006c93      49c1c119       rol r9, 0x19
0x00006c97      4d31cc         xor r12, r9
0x00006c9a      4d89e9         mov r9, r13
0x00006c9d      4d09d1         or r9, r10
0x00006ca0      4d21d6         and r14, r10
0x00006ca3      4921d1         and r9, rdx
0x00006ca6      4d09f1         or r9, r14
0x00006ca9      4c8b742420     mov r14, qword [rsp + 0x20]
0x00006cae      4d01e1         add r9, r12
0x00006cb1      4901c1         add r9, rax
0x00006cb4      4d89f4         mov r12, r14
0x00006cb7      4c89f0         mov rax, r14
0x00006cba      49d1cc         ror r12, 1
0x00006cbd      48c1c808       ror rax, 8
0x00006cc1      4c31e0         xor rax, r12
0x00006cc4      4d89f4         mov r12, r14
0x00006cc7      4d89d6         mov r14, r10
0x00006cca      49c1ec07       shr r12, 7
0x00006cce      4c31e0         xor rax, r12                            ; ../coreutils-8.31/lib/sha512.c:-56
0x00006cd1      4803442418     add rax, qword [rsp + 0x18]
0x00006cd6      4d89fc         mov r12, r15
0x00006cd9      49c1cc13       ror r12, 0x13
0x00006cdd      4801d8         add rax, rbx
0x00006ce0      4c89fb         mov rbx, r15
0x00006ce3      48c1c303       rol rbx, 3
0x00006ce7      4c31e3         xor rbx, r12
0x00006cea      4d89fc         mov r12, r15
0x00006ced      49c1ec06       shr r12, 6
0x00006cf1      4c31e3         xor rbx, r12
0x00006cf4      49bcbcbec915.  movabs r12, 0x3c9ebe0a15c9bebc
0x00006cfe      4801c3         add rbx, rax
0x00006d01      4889f8         mov rax, rdi
0x00006d04      4831f0         xor rax, rsi
0x00006d07      4901dc         add r12, rbx
0x00006d0a      48899c244001.  mov qword [rsp + 0x140], rbx
0x00006d12      4821c8         and rax, rcx
0x00006d15      4d01e0         add r8, r12
0x00006d18      4831f8         xor rax, rdi
0x00006d1b      4a8d0400       lea rax, [rax + r8]
0x00006d1f      4989c8         mov r8, rcx
0x00006d22      49c1c80e       ror r8, 0xe
0x00006d26      4d89c4         mov r12, r8
0x00006d29      4989c8         mov r8, rcx
0x00006d2c      49c1c812       ror r8, 0x12
0x00006d30      4d31e0         xor r8, r12
0x00006d33      4989cc         mov r12, rcx
0x00006d36      49c1c417       rol r12, 0x17
0x00006d3a      4d31e0         xor r8, r12
0x00006d3d      4901c0         add r8, rax
0x00006d40      4c89c8         mov rax, r9
0x00006d43      48c1c81c       ror rax, 0x1c
0x00006d47      4c01c2         add rdx, r8
0x00006d4a      4989c4         mov r12, rax
0x00006d4d      4c89c8         mov rax, r9
0x00006d50      48c1c01e       rol rax, 0x1e
0x00006d54      4d21ce         and r14, r9
0x00006d57      4c31e0         xor rax, r12
0x00006d5a      4d89cc         mov r12, r9
0x00006d5d      49c1c419       rol r12, 0x19
0x00006d61      4c31e0         xor rax, r12
0x00006d64      4d89d4         mov r12, r10
0x00006d67      4d09cc         or r12, r9
0x00006d6a      4d21ec         and r12, r13
0x00006d6d      4d09f4         or r12, r14
0x00006d70      4c8b742448     mov r14, qword [rsp + 0x48]
0x00006d75      4901c4         add r12, rax
0x00006d78      4d01e0         add r8, r12
0x00006d7b      4c89f0         mov rax, r14
0x00006d7e      4d89f4         mov r12, r14
0x00006d81      49d1cc         ror r12, 1
0x00006d84      48c1c808       ror rax, 8
0x00006d88      4c31e0         xor rax, r12
0x00006d8b      4d89f4         mov r12, r14
0x00006d8e      49c1ec07       shr r12, 7
0x00006d92      4c31e0         xor rax, r12
0x00006d95      4803442420     add rax, qword [rsp + 0x20]
0x00006d9a      4c01d8         add rax, r11
0x00006d9d      4989eb         mov r11, rbp
0x00006da0      49c1cb13       ror r11, 0x13
0x00006da4      4d89dc         mov r12, r11
0x00006da7      4989eb         mov r11, rbp
0x00006daa      48c1ed06       shr rbp, 6
0x00006dae      49c1c303       rol r11, 3
0x00006db2      4d31e3         xor r11, r12
0x00006db5      4d89cc         mov r12, r9
0x00006db8      4931eb         xor r11, rbp
0x00006dbb      48bd4c0d109c.  movabs rbp, 0x431d67c49c100d4c
0x00006dc5      4901c3         add r11, rax
0x00006dc8      4889f0         mov rax, rsi
0x00006dcb      4831c8         xor rax, rcx
0x00006dce      4c01dd         add rbp, r11
0x00006dd1      4c899c244801.  mov qword [rsp + 0x148], r11
0x00006dd9      4821d0         and rax, rdx
0x00006ddc      4801ef         add rdi, rbp
0x00006ddf      4831f0         xor rax, rsi
0x00006de2      4801c7         add rdi, rax
0x00006de5      4889d0         mov rax, rdx
0x00006de8      48c1c80e       ror rax, 0xe
0x00006dec      4889c5         mov rbp, rax
0x00006def      4889d0         mov rax, rdx
0x00006df2      48c1c812       ror rax, 0x12
0x00006df6      4831e8         xor rax, rbp
0x00006df9      4889d5         mov rbp, rdx
0x00006dfc      48c1c517       rol rbp, 0x17
0x00006e00      4d21c4         and r12, r8
0x00006e03      4831e8         xor rax, rbp
0x00006e06      4801f8         add rax, rdi
0x00006e09      4c89c7         mov rdi, r8
0x00006e0c      48c1cf1c       ror rdi, 0x1c
0x00006e10      4901c5         add r13, rax
0x00006e13      4889fd         mov rbp, rdi
0x00006e16      4c89c7         mov rdi, r8
0x00006e19      48c1c71e       rol rdi, 0x1e
0x00006e1d      4831ef         xor rdi, rbp
0x00006e20      4c89c5         mov rbp, r8
0x00006e23      48c1c519       rol rbp, 0x19
0x00006e27      4831ef         xor rdi, rbp
0x00006e2a      4c89cd         mov rbp, r9
0x00006e2d      4c09c5         or rbp, r8
0x00006e30      4c21d5         and rbp, r10
0x00006e33      4c09e5         or rbp, r12
0x00006e36      4c8b642428     mov r12, qword [rsp + 0x28]
0x00006e3b      4801fd         add rbp, rdi
0x00006e3e      4801e8         add rax, rbp
0x00006e41      4c89e7         mov rdi, r12
0x00006e44      4c89e5         mov rbp, r12
0x00006e47      48d1cd         ror rbp, 1
0x00006e4a      48c1cf08       ror rdi, 8
0x00006e4e      4831ef         xor rdi, rbp
0x00006e51      4c89e5         mov rbp, r12
0x00006e54      48c1ed07       shr rbp, 7
0x00006e58      4831ef         xor rdi, rbp
0x00006e5b      4c01f7         add rdi, r14
0x00006e5e      4c8b742438     mov r14, qword [rsp + 0x38]             ; ../coreutils-8.31/lib/sha512.c:-54
0x00006e63      4a8d2c37       lea rbp, [rdi + r14]                    ; ../coreutils-8.31/lib/sha512.c:-55
0x00006e67      4889df         mov rdi, rbx
0x00006e6a      48c1cf13       ror rdi, 0x13
0x00006e6e      4989fc         mov r12, rdi
0x00006e71      4889df         mov rdi, rbx
0x00006e74      48c1eb06       shr rbx, 6
0x00006e78      48c1c703       rol rdi, 3
0x00006e7c      4c31e7         xor rdi, r12
0x00006e7f      4d89c4         mov r12, r8
0x00006e82      4831df         xor rdi, rbx
0x00006e85      4889cb         mov rbx, rcx
0x00006e88      4801ef         add rdi, rbp                            ; ../coreutils-8.31/lib/sha512.c:-54
0x00006e8b      4831d3         xor rbx, rdx
0x00006e8e      48bdb6423ecb.  movabs rbp, 0x4cc5d4becb3e42b6
0x00006e98      4801fd         add rbp, rdi
0x00006e9b      4c21eb         and rbx, r13
0x00006e9e      4889bc245001.  mov qword [rsp + 0x150], rdi
0x00006ea6      4831cb         xor rbx, rcx
0x00006ea9      4801ee         add rsi, rbp
0x00006eac      4801de         add rsi, rbx
0x00006eaf      4c89eb         mov rbx, r13
0x00006eb2      4921c4         and r12, rax
0x00006eb5      48c1cb0e       ror rbx, 0xe
0x00006eb9      4889dd         mov rbp, rbx
0x00006ebc      4c89eb         mov rbx, r13
0x00006ebf      48c1cb12       ror rbx, 0x12
0x00006ec3      4831eb         xor rbx, rbp
0x00006ec6      4c89ed         mov rbp, r13
0x00006ec9      48c1c517       rol rbp, 0x17
0x00006ecd      4831eb         xor rbx, rbp
0x00006ed0      4801f3         add rbx, rsi
0x00006ed3      4889c6         mov rsi, rax
0x00006ed6      48c1ce1c       ror rsi, 0x1c
0x00006eda      4901da         add r10, rbx
0x00006edd      4889f5         mov rbp, rsi
0x00006ee0      4889c6         mov rsi, rax
0x00006ee3      48c1c61e       rol rsi, 0x1e
0x00006ee7      4831ee         xor rsi, rbp
0x00006eea      4889c5         mov rbp, rax
0x00006eed      48c1c519       rol rbp, 0x19
0x00006ef1      4831ee         xor rsi, rbp
0x00006ef4      4c89c5         mov rbp, r8
0x00006ef7      4809c5         or rbp, rax
0x00006efa      4c21cd         and rbp, r9
0x00006efd      4c09e5         or rbp, r12
0x00006f00      4c8b642450     mov r12, qword [rsp + 0x50]
0x00006f05      4801f5         add rbp, rsi
0x00006f08      4801eb         add rbx, rbp
0x00006f0b      4c89dd         mov rbp, r11
0x00006f0e      4c89e6         mov rsi, r12
0x00006f11      4d89e6         mov r14, r12
0x00006f14      48c1cd13       ror rbp, 0x13
0x00006f18      48d1ce         ror rsi, 1
0x00006f1b      49c1ce08       ror r14, 8
0x00006f1f      4931f6         xor r14, rsi
0x00006f22      4c89e6         mov rsi, r12                            ; ../coreutils-8.31/lib/sha512.c:-53
0x00006f25      4c8b642458     mov r12, qword [rsp + 0x58]
0x00006f2a      48c1ee07       shr rsi, 7
0x00006f2e      4931f6         xor r14, rsi
0x00006f31      4c03742428     add r14, qword [rsp + 0x28]
0x00006f36      4c89de         mov rsi, r11
0x00006f39      4c03742408     add r14, qword [rsp + 8]
0x00006f3e      48c1c603       rol rsi, 3
0x00006f42      49c1eb06       shr r11, 6
0x00006f46      4831ee         xor rsi, rbp
0x00006f49      48bd2a7e65fc.  movabs rbp, 0x597f299cfc657e2a
0x00006f53      4931f3         xor r11, rsi
0x00006f56      4889d6         mov rsi, rdx
0x00006f59      4d01f3         add r11, r14
0x00006f5c      4c31ee         xor rsi, r13
0x00006f5f      4989c6         mov r14, rax
0x00006f62      4c01dd         add rbp, r11
0x00006f65      4c21d6         and rsi, r10
0x00006f68      4921de         and r14, rbx
0x00006f6b      4831d6         xor rsi, rdx
0x00006f6e      4801e9         add rcx, rbp
0x00006f71      4c89d5         mov rbp, r10
0x00006f74      4801f1         add rcx, rsi
0x00006f77      4c89d6         mov rsi, r10
0x00006f7a      48c1cd0e       ror rbp, 0xe
0x00006f7e      48c1ce12       ror rsi, 0x12
0x00006f82      4c899c245801.  mov qword [rsp + 0x158], r11
0x00006f8a      4831ee         xor rsi, rbp
0x00006f8d      4c89d5         mov rbp, r10
0x00006f90      48c1c517       rol rbp, 0x17
0x00006f94      4831ee         xor rsi, rbp
0x00006f97      4889dd         mov rbp, rbx
0x00006f9a      4801ce         add rsi, rcx
0x00006f9d      4889d9         mov rcx, rbx
0x00006fa0      48c1cd1c       ror rbp, 0x1c
0x00006fa4      48c1c11e       rol rcx, 0x1e
0x00006fa8      4901f1         add r9, rsi
0x00006fab      4831e9         xor rcx, rbp
0x00006fae      4889dd         mov rbp, rbx
0x00006fb1      48c1c519       rol rbp, 0x19
0x00006fb5      4831e9         xor rcx, rbp
0x00006fb8      4889c5         mov rbp, rax
0x00006fbb      4809dd         or rbp, rbx
0x00006fbe      4c21c5         and rbp, r8
0x00006fc1      4c09f5         or rbp, r14
0x00006fc4      4c8b742430     mov r14, qword [rsp + 0x30]
0x00006fc9      4801cd         add rbp, rcx
0x00006fcc      4801ee         add rsi, rbp
0x00006fcf      4c89f1         mov rcx, r14
0x00006fd2      4c89f5         mov rbp, r14
0x00006fd5      48d1cd         ror rbp, 1
0x00006fd8      48c1c908       ror rcx, 8
0x00006fdc      4831e9         xor rcx, rbp
0x00006fdf      4c89f5         mov rbp, r14
0x00006fe2      48c1ed07       shr rbp, 7
0x00006fe6      4831e9         xor rcx, rbp
0x00006fe9      48034c2450     add rcx, qword [rsp + 0x50]
0x00006fee      488b6c2440     mov rbp, qword [rsp + 0x40]             ; ../coreutils-8.31/lib/sha512.c:-52
0x00006ff3      4c8d3429       lea r14, [rcx + rbp]
0x00006ff7      4889f9         mov rcx, rdi
0x00006ffa      48c1c913       ror rcx, 0x13
0x00006ffe      4889cd         mov rbp, rcx
0x00007001      4889f9         mov rcx, rdi
0x00007004      48c1c103       rol rcx, 3
0x00007008      4831e9         xor rcx, rbp
0x0000700b      48c1ef06       shr rdi, 6
0x0000700f      4889dd         mov rbp, rbx
0x00007012      4831f9         xor rcx, rdi
0x00007015      48bfecfad63a.  movabs rdi, 0x5fcb6fab3ad6faec
0x0000701f      4821f5         and rbp, rsi
0x00007022      4901ce         add r14, rcx
0x00007025      4c89e9         mov rcx, r13
0x00007028      4c31d1         xor rcx, r10
0x0000702b      4c89b4246001.  mov qword [rsp + 0x160], r14
0x00007033      4901fe         add r14, rdi
0x00007036      4c21c9         and rcx, r9
0x00007039      4c01f2         add rdx, r14
0x0000703c      4c89cf         mov rdi, r9
0x0000703f      4c31e9         xor rcx, r13
0x00007042      48c1cf0e       ror rdi, 0xe
0x00007046      4801d1         add rcx, rdx
0x00007049      4c89ca         mov rdx, r9
0x0000704c      48c1ca12       ror rdx, 0x12
0x00007050      4831fa         xor rdx, rdi
0x00007053      4c89cf         mov rdi, r9
0x00007056      48c1c717       rol rdi, 0x17
0x0000705a      4831fa         xor rdx, rdi
0x0000705d      4889f7         mov rdi, rsi
0x00007060      4801ca         add rdx, rcx
0x00007063      4889f1         mov rcx, rsi
0x00007066      48c1cf1c       ror rdi, 0x1c
0x0000706a      48c1c11e       rol rcx, 0x1e
0x0000706e      4901d0         add r8, rdx
0x00007071      4831f9         xor rcx, rdi
0x00007074      4889f7         mov rdi, rsi
0x00007077      48c1c719       rol rdi, 0x19
0x0000707b      4831f9         xor rcx, rdi
0x0000707e      4889df         mov rdi, rbx
0x00007081      4809f7         or rdi, rsi
0x00007084      4821c7         and rdi, rax
0x00007087      4809ef         or rdi, rbp
0x0000708a      4889f5         mov rbp, rsi
0x0000708d      4801cf         add rdi, rcx
0x00007090      4c89e1         mov rcx, r12
0x00007093      4801fa         add rdx, rdi
0x00007096      4c89e7         mov rdi, r12
0x00007099      48d1c9         ror rcx, 1
0x0000709c      48c1cf08       ror rdi, 8
0x000070a0      4831cf         xor rdi, rcx
0x000070a3      4c89e1         mov rcx, r12
0x000070a6      48c1e907       shr rcx, 7                              ; ../coreutils-8.31/lib/sha512.c:-49
0x000070aa      4831cf         xor rdi, rcx
0x000070ad      48037c2430     add rdi, qword [rsp + 0x30]
0x000070b2      4c89d9         mov rcx, r11
0x000070b5      48c1c103       rol rcx, 3
0x000070b9      4821d5         and rbp, rdx
0x000070bc      480194249000.  add qword [rsp + 0x90], rdx
0x000070c4      4e8d243f       lea r12, [rdi + r15]
0x000070c8      4d89df         mov r15, r11
0x000070cb      49c1eb06       shr r11, 6
0x000070cf      49c1cf13       ror r15, 0x13
0x000070d3      48bf1758474a.  movabs rdi, 0x6c44198c4a475817
0x000070dd      4c31f9         xor rcx, r15
0x000070e0      4c31d9         xor rcx, r11
0x000070e3      4989d3         mov r11, rdx
0x000070e6      4901cc         add r12, rcx
0x000070e9      4c89d1         mov rcx, r10
0x000070ec      49c1cb1c       ror r11, 0x1c
0x000070f0      4c31c9         xor rcx, r9
0x000070f3      4c89a4246801.  mov qword [rsp + 0x168], r12
0x000070fb      4901fc         add r12, rdi
0x000070fe      4c21c1         and rcx, r8
0x00007101      4d01e5         add r13, r12
0x00007104      4c89c7         mov rdi, r8                             ; ../coreutils-8.31/lib/sha512.c:-47
0x00007107      4c31d1         xor rcx, r10
0x0000710a      48c1cf0e       ror rdi, 0xe
0x0000710e      4901cd         add r13, rcx
0x00007111      4c89c1         mov rcx, r8
0x00007114      48c1c912       ror rcx, 0x12                           ; ../coreutils-8.31/lib/sha512.c:-44
0x00007118      4831f9         xor rcx, rdi
0x0000711b      4c89c7         mov rdi, r8
0x0000711e      48c1c717       rol rdi, 0x17
0x00007122      4831f9         xor rcx, rdi
0x00007125      4889d7         mov rdi, rdx
0x00007128      48c1c71e       rol rdi, 0x1e
0x0000712c      4c01e9         add rcx, r13                            ; ../coreutils-8.31/lib/sha512.c:-43
0x0000712f      4c31df         xor rdi, r11
0x00007132      4989d3         mov r11, rdx
0x00007135      49c1c319       rol r11, 0x19
0x00007139      4c31df         xor rdi, r11
0x0000713c      4989f3         mov r11, rsi
0x0000713f      4909d3         or r11, rdx
0x00007142      4921db         and r11, rbx
0x00007145      4909eb         or r11, rbp
0x00007148      488bac249000.  mov rbp, qword [rsp + 0x90]
0x00007150      4c01df         add rdi, r11
0x00007153      4803bc24d000.  add rdi, qword [rsp + 0xd0]
0x0000715b      4c8d3c0f       lea r15, [rdi + rcx]
0x0000715f      488bbc24e000.  mov rdi, qword [rsp + 0xe0]
0x00007167      4c89bc24d000.  mov qword [rsp + 0xd0], r15
0x0000716f      4c893f         mov qword [rdi], r15
0x00007172      48896f08       mov qword [rdi + 8], rbp
0x00007176      4889fa         mov rdx, rdi
0x00007179      4801b4249800.  add qword [rsp + 0x98], rsi
0x00007181      4c8bac249800.  mov r13, qword [rsp + 0x98]
0x00007189      4801c8         add rax, rcx
0x0000718c      48019c24a000.  add qword [rsp + 0xa0], rbx
0x00007194      4889d3         mov rbx, rdx
0x00007197      48018424a800.  add qword [rsp + 0xa8], rax
0x0000719f      4c89f8         mov rax, r15
0x000071a2      4c896f10       mov qword [rdi + 0x10], r13
0x000071a6      488bbc24a000.  mov rdi, qword [rsp + 0xa0]
0x000071ae      4c018424b000.  add qword [rsp + 0xb0], r8
0x000071b6      4c018c24b800.  add qword [rsp + 0xb8], r9
0x000071be      488bb424a800.  mov rsi, qword [rsp + 0xa8]
0x000071c6      4c8ba424b000.  mov r12, qword [rsp + 0xb0]
0x000071ce      4c019424c000.  add qword [rsp + 0xc0], r10
0x000071d6      4889fa         mov rdx, rdi
0x000071d9      48897b18       mov qword [rbx + 0x18], rdi
0x000071dd      4989d0         mov r8, rdx
0x000071e0      4989f1         mov r9, rsi
0x000071e3      488bbc24b800.  mov rdi, qword [rsp + 0xb8]
0x000071eb      4c8b9424c000.  mov r10, qword [rsp + 0xc0]
0x000071f3      48897320       mov qword [rbx + 0x20], rsi
0x000071f7      4c896328       mov qword [rbx + 0x28], r12
0x000071fb      48897b30       mov qword [rbx + 0x30], rdi
0x000071ff      4c895338       mov qword [rbx + 0x38], r10
0x00007203      488b9c248800.  mov rbx, qword [rsp + 0x88]
0x0000720b      48399c24d800.  cmp qword [rsp + 0xd8], rbx
0x00007213      0f87f7c3ffff   ja 0x3610
0x00007219      488b84247801.  mov rax, qword [rsp + 0x178]
0x00007221      644833042528.  xor rax, qword fs:[0x28]
0x0000722a      7512           jne 0x723e
0x0000722c      4881c4880100.  add rsp, 0x188
0x00007233      5b             pop rbx
0x00007234      5d             pop rbp
0x00007235      415c           pop r12
0x00007237      415d           pop r13
0x00007239      415e           pop r14
0x0000723b      415f           pop r15
0x0000723d      c3             ret
0x0000723e      e84da4ffff     call sym.imp.__stack_chk_fail
0x00007243      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/sha512.c:-846
0x00007246      662e0f1f8400.  nop word cs:[rax + rax]
;-- sha512_conclude_ctx:
0x00007250      4154           push r12
0x00007252      55             push rbp
0x00007253      53             push rbx
0x00007254      488b5750       mov rdx, qword [rdi + 0x50]
0x00007258      4889fb         mov rbx, rdi
0x0000725b      488b4348       mov rax, qword [rbx + 0x48]
0x0000725f      4883fa70       cmp rdx, 0x70
0x00007263      4889d1         mov rcx, rdx
0x00007266      4819ed         sbb rbp, rbp
0x00007269      4883e580       and rbp, 0xffffffffffffff80
0x0000726d      4881c5000100.  add rbp, 0x100
0x00007274      4883fa70       cmp rdx, 0x70
0x00007278      4819f6         sbb rsi, rsi
0x0000727b      4883e6f0       and rsi, 0xfffffffffffffff0             ; ../coreutils-8.31/lib/sha512.c:-839
0x0000727f      4883c61f       add rsi, 0x1f
0x00007283      4883fa70       cmp rdx, 0x70
0x00007287      4819ff         sbb rdi, rdi
0x0000728a      4531c0         xor r8d, r8d
0x0000728d      4883e7f0       and rdi, 0xfffffffffffffff0
0x00007291      4883c71e       add rdi, 0x1e
0x00007295      48034b40       add rcx, qword [rbx + 0x40]
0x00007299      410f92c0       setb r8b
0x0000729d      48894b40       mov qword [rbx + 0x40], rcx
0x000072a1      4d85c0         test r8, r8
0x000072a4      7408           je 0x72ae
0x000072a6      4883c001       add rax, 1
0x000072aa      48894348       mov qword [rbx + 0x48], rax
0x000072ae      4989c8         mov r8, rcx
0x000072b1      48c1e003       shl rax, 3
0x000072b5      4c8d6358       lea r12, [rbx + 0x58]
0x000072b9      49c1e83d       shr r8, 0x3d
0x000072bd      48c1e103       shl rcx, 3
0x000072c1      4c09c0         or rax, r8
0x000072c4      480fc9         bswap rcx
0x000072c7      480fc8         bswap rax
0x000072ca      488944fb58     mov qword [rbx + rdi*8 + 0x58], rax
0x000072cf      4889e8         mov rax, rbp
0x000072d2      498d3c14       lea rdi, [r12 + rdx]
0x000072d6      4829d0         sub rax, rdx
0x000072d9      48894cf358     mov qword [rbx + rsi*8 + 0x58], rcx
0x000072de      488d357b3f00.  lea rsi, obj.fillbuf                    ; 0xb260
0x000072e5      488d50f0       lea rdx, [rax - 0x10]
0x000072e9      e882a4ffff     call sym.imp.memcpy
0x000072ee      4889da         mov rdx, rbx                            ; string_fortified.h:-974
0x000072f1      4889ee         mov rsi, rbp
0x000072f4      4c89e7         mov rdi, r12
0x000072f7      5b             pop rbx
0x000072f8      5d             pop rbp
0x000072f9      415c           pop r12
0x000072fb      e930c2ffff     jmp sym.sha512_process_block
;-- sha512_finish_ctx:
0x00007300      55             push rbp
0x00007301      53             push rbx
0x00007302      4889f5         mov rbp, rsi
0x00007305      4889fb         mov rbx, rdi
0x00007308      4883ec08       sub rsp, 8
0x0000730c      e83fffffff     call sym.sha512_conclude_ctx
0x00007311      4883c408       add rsp, 8
0x00007315      4889ee         mov rsi, rbp
0x00007318      4889df         mov rdi, rbx
0x0000731b      5b             pop rbx
0x0000731c      5d             pop rbp
0x0000731d      e9cec1ffff     jmp sym.sha512_read_ctx
0x00007322      0f1f4000       nop dword [rax]
0x00007326      662e0f1f8400.  nop word cs:[rax + rax]
;-- sha384_finish_ctx:
0x00007330      55             push rbp
0x00007331      53             push rbx
0x00007332      4889f5         mov rbp, rsi
0x00007335      4889fb         mov rbx, rdi
0x00007338      4883ec08       sub rsp, 8
0x0000733c      e80fffffff     call sym.sha512_conclude_ctx
0x00007341      4883c408       add rsp, 8
0x00007345      4889ee         mov rsi, rbp
0x00007348      4889df         mov rdi, rbx
0x0000734b      5b             pop rbx
0x0000734c      5d             pop rbp
0x0000734d      e9bec1ffff     jmp sym.sha384_read_ctx
0x00007352      0f1f4000       nop dword [rax]
0x00007356      662e0f1f8400.  nop word cs:[rax + rax]
;-- sha512_process_bytes:
0x00007360      4157           push r15
0x00007362      4156           push r14                                ; ../coreutils-8.31/lib/sha512.c:-644
0x00007364      4155           push r13
0x00007366      4154           push r12
0x00007368      4989d5         mov r13, rdx
0x0000736b      55             push rbp
0x0000736c      53             push rbx
0x0000736d      4989f4         mov r12, rsi
0x00007370      4889fb         mov rbx, rdi
0x00007373      4883ec08       sub rsp, 8
0x00007377      488b6a50       mov rbp, qword [rdx + 0x50]
0x0000737b      4885ed         test rbp, rbp
0x0000737e      0f8534010000   jne 0x74b8
0x00007384      4983fc7f       cmp r12, 0x7f
0x00007388      0f860e010000   jbe 0x749c
0x0000738e      f6c307         test bl, 7                              ; ../coreutils-8.31/lib/sha512.c:-642
0x00007391      0f84e9000000   je 0x7480
0x00007397      4981fc800000.  cmp r12, 0x80
0x0000739e      498d6d58       lea rbp, [r13 + 0x58]
0x000073a2      0f8484000000   je 0x742c
0x000073a8      4d8dbc247fff.  lea r15, [r12 - 0x81]
0x000073b0      49c1ef07       shr r15, 7
0x000073b4      4d8d7701       lea r14, [r15 + 1]
0x000073b8      49c1e607       shl r14, 7
0x000073bc      4901de         add r14, rbx
0x000073bf      90             nop                                     ; ../coreutils-8.31/lib/sha512.c:-655
0x000073c0      f30f6f03       movdqu xmm0, xmmword [rbx]
0x000073c4      4c89ea         mov rdx, r13
0x000073c7      be80000000     mov esi, 0x80
0x000073cc      4889ef         mov rdi, rbp
0x000073cf      4883eb80       sub rbx, 0xffffffffffffff80
0x000073d3      0f114500       movups xmmword [rbp], xmm0              ; ../coreutils-8.31/lib/sha512.c:-632
0x000073d7      f30f6f4390     movdqu xmm0, xmmword [rbx - 0x70]
0x000073dc      0f114510       movups xmmword [rbp + 0x10], xmm0
0x000073e0      f30f6f43a0     movdqu xmm0, xmmword [rbx - 0x60]
0x000073e5      0f114520       movups xmmword [rbp + 0x20], xmm0
0x000073e9      f30f6f43b0     movdqu xmm0, xmmword [rbx - 0x50]
0x000073ee      0f114530       movups xmmword [rbp + 0x30], xmm0
0x000073f2      f30f6f43c0     movdqu xmm0, xmmword [rbx - 0x40]
0x000073f7      0f114540       movups xmmword [rbp + 0x40], xmm0
0x000073fb      f30f6f43d0     movdqu xmm0, xmmword [rbx - 0x30]
0x00007400      0f114550       movups xmmword [rbp + 0x50], xmm0
0x00007404      f30f6f43e0     movdqu xmm0, xmmword [rbx - 0x20]
0x00007409      0f114560       movups xmmword [rbp + 0x60], xmm0       ; ../coreutils-8.31/lib/sha512.c:-688
0x0000740d      f30f6f43f0     movdqu xmm0, xmmword [rbx - 0x10]
0x00007412      0f114570       movups xmmword [rbp + 0x70], xmm0
0x00007416      e815c1ffff     call sym.sha512_process_block
0x0000741b      4c39f3         cmp rbx, r14                            ; ../coreutils-8.31/lib/sha512.c:-686
0x0000741e      75a0           jne 0x73c0
0x00007420      49f7df         neg r15
0x00007423      49c1e707       shl r15, 7
0x00007427      4f8d643c80     lea r12, [r12 + r15 - 0x80]
0x0000742c      498b5550       mov rdx, qword [r13 + 0x50]
0x00007430      4183fc08       cmp r12d, 8
0x00007434      488d741500     lea rsi, [rbp + rdx]
0x00007439      0f83c1000000   jae 0x7500
0x0000743f      41f6c404       test r12b, 4
0x00007443      0f85e0010000   jne 0x7629
0x00007449      4585e4         test r12d, r12d
0x0000744c      740f           je 0x745d
0x0000744e      0fb603         movzx eax, byte [rbx]
0x00007451      41f6c402       test r12b, 2
0x00007455      8806           mov byte [rsi], al
0x00007457      0f85e0010000   jne 0x763d
0x0000745d      4901d4         add r12, rdx
0x00007460      4983fc7f       cmp r12, 0x7f
0x00007464      0f87d3000000   ja 0x753d
0x0000746a      4d896550       mov qword [r13 + 0x50], r12
0x0000746e      4883c408       add rsp, 8
0x00007472      5b             pop rbx
0x00007473      5d             pop rbp
0x00007474      415c           pop r12
0x00007476      415d           pop r13
0x00007478      415e           pop r14
0x0000747a      415f           pop r15
0x0000747c      c3             ret
0x0000747d      0f1f00         nop dword [rax]
0x00007480      4c89e5         mov rbp, r12
0x00007483      4889df         mov rdi, rbx
0x00007486      4c89ea         mov rdx, r13
0x00007489      4883e580       and rbp, 0xffffffffffffff80
0x0000748d      4183e47f       and r12d, 0x7f
0x00007491      4889ee         mov rsi, rbp
0x00007494      4801eb         add rbx, rbp
0x00007497      e894c0ffff     call sym.sha512_process_block
0x0000749c      4d85e4         test r12, r12
0x0000749f      0f857b010000   jne 0x7620
0x000074a5      4883c408       add rsp, 8
0x000074a9      5b             pop rbx
0x000074aa      5d             pop rbp
0x000074ab      415c           pop r12
0x000074ad      415d           pop r13                                 ; ../coreutils-8.31/lib/sha512.c:-682
0x000074af      415e           pop r14
0x000074b1      415f           pop r15                                 ; ../coreutils-8.31/lib/sha512.c:-678
0x000074b3      c3             ret
0x000074b4      0f1f4000       nop dword [rax]
0x000074b8      41be00010000   mov r14d, 0x100                         ; ../coreutils-8.31/lib/sha512.c:-679
0x000074be      4c8d7a58       lea r15, [rdx + 0x58]
0x000074c2      4929ee         sub r14, rbp                            ; ../coreutils-8.31/lib/sha512.c:-682
0x000074c5      4939f6         cmp r14, rsi
0x000074c8      498d3c2f       lea rdi, [r15 + rbp]
0x000074cc      4c0f47f6       cmova r14, rsi
0x000074d0      4889de         mov rsi, rbx
0x000074d3      4c89f2         mov rdx, r14
0x000074d6      e895a2ffff     call sym.imp.memcpy
0x000074db      498b7550       mov rsi, qword [r13 + 0x50]
0x000074df      4c01f6         add rsi, r14
0x000074e2      4881fe800000.  cmp rsi, 0x80
0x000074e9      49897550       mov qword [r13 + 0x50], rsi
0x000074ed      0f877d000000   ja 0x7570
0x000074f3      4c01f3         add rbx, r14
0x000074f6      4d29f4         sub r12, r14
0x000074f9      e986feffff     jmp 0x7384
0x000074fe      6690           nop
0x00007500      488b03         mov rax, qword [rbx]
0x00007503      488d7e08       lea rdi, [rsi + 8]
0x00007507      4883e7f8       and rdi, 0xfffffffffffffff8
0x0000750b      488906         mov qword [rsi], rax
0x0000750e      4489e0         mov eax, r12d
0x00007511      488b4c03f8     mov rcx, qword [rbx + rax - 8]
0x00007516      48894c06f8     mov qword [rsi + rax - 8], rcx
0x0000751b      4889f1         mov rcx, rsi
0x0000751e      4889de         mov rsi, rbx
0x00007521      4829f9         sub rcx, rdi
0x00007524      4829ce         sub rsi, rcx
0x00007527      4401e1         add ecx, r12d
0x0000752a      4901d4         add r12, rdx
0x0000752d      c1e903         shr ecx, 3
0x00007530      4983fc7f       cmp r12, 0x7f
0x00007534      f348a5         rep movsq qword [rdi], qword ptr [rsi]
0x00007537      0f862dffffff   jbe 0x746a
0x0000753d      4c89ea         mov rdx, r13
0x00007540      4889ef         mov rdi, rbp
0x00007543      be80000000     mov esi, 0x80
0x00007548      e8e3bfffff     call sym.sha512_process_block
0x0000754d      4983c480       add r12, 0xffffffffffffff80
0x00007551      498db5d80000.  lea rsi, [r13 + 0xd8]
0x00007558      4889ef         mov rdi, rbp
0x0000755b      4c89e2         mov rdx, r12
0x0000755e      e80da2ffff     call sym.imp.memcpy
0x00007563      e902ffffff     jmp 0x746a
0x00007568      0f1f84000000.  nop dword [rax + rax]
0x00007570      4883e680       and rsi, 0xffffffffffffff80
0x00007574      4c89ea         mov rdx, r13
0x00007577      4c89ff         mov rdi, r15
0x0000757a      e8b1bfffff     call sym.sha512_process_block
0x0000757f      498b4d50       mov rcx, qword [r13 + 0x50]
0x00007583      4c01f5         add rbp, r14
0x00007586      4883e580       and rbp, 0xffffffffffffff80
0x0000758a      498d342f       lea rsi, [r15 + rbp]                    ; ../coreutils-8.31/lib/sha512.c:-727
0x0000758e      83e17f         and ecx, 0x7f
0x00007591      83f908         cmp ecx, 8
0x00007594      49894d50       mov qword [r13 + 0x50], rcx
0x00007598      7336           jae 0x75d0
0x0000759a      f6c104         test cl, 4
0x0000759d      7566           jne 0x7605                              ; ../coreutils-8.31/lib/sha512.c:-943
0x0000759f      85c9           test ecx, ecx
0x000075a1      0f844cffffff   je 0x74f3
0x000075a7      0fb606         movzx eax, byte [rsi]                   ; ../coreutils-8.31/lib/sha512.c:-720
0x000075aa      f6c102         test cl, 2                              ; ../coreutils-8.31/lib/sha512.c:-934
0x000075ad      41884558       mov byte [r13 + 0x58], al
0x000075b1      0f843cffffff   je 0x74f3
0x000075b7      89c9           mov ecx, ecx                            ; ../coreutils-8.31/lib/sha512.c:-942
0x000075b9      0fb7440efe     movzx eax, word [rsi + rcx - 2]
0x000075be      664189440ffe   mov word [r15 + rcx - 2], ax
0x000075c4      e92affffff     jmp 0x74f3
0x000075c9      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/sha512.c:-941
0x000075d0      488b06         mov rax, qword [rsi]
0x000075d3      498d7d60       lea rdi, [r13 + 0x60]                   ; ../coreutils-8.31/lib/sha512.c:-934
0x000075d7      4883e7f8       and rdi, 0xfffffffffffffff8
0x000075db      49894558       mov qword [r13 + 0x58], rax
0x000075df      89c8           mov eax, ecx
0x000075e1      488b5406f8     mov rdx, qword [rsi + rax - 8]          ; ../coreutils-8.31/lib/sha512.c:-940
0x000075e6      49895407f8     mov qword [r15 + rax - 8], rdx
0x000075eb      4c89f8         mov rax, r15                            ; ../coreutils-8.31/lib/sha512.c:-933
0x000075ee      4829f8         sub rax, rdi
0x000075f1      01c1           add ecx, eax
0x000075f3      4829c6         sub rsi, rax
0x000075f6      89c8           mov eax, ecx
0x000075f8      c1e803         shr eax, 3
0x000075fb      89c1           mov ecx, eax
0x000075fd      f348a5         rep movsq qword [rdi], qword ptr [rsi]
0x00007600      e9eefeffff     jmp 0x74f3
0x00007605      8b06           mov eax, dword [rsi]
0x00007607      89c9           mov ecx, ecx
0x00007609      41894558       mov dword [r13 + 0x58], eax
0x0000760d      8b440efc       mov eax, dword [rsi + rcx - 4]
0x00007611      4189440ffc     mov dword [r15 + rcx - 4], eax
0x00007616      e9d8feffff     jmp 0x74f3
0x0000761b      0f1f440000     nop dword [rax + rax]
0x00007620      498d6d58       lea rbp, [r13 + 0x58]
0x00007624      e903feffff     jmp 0x742c
0x00007629      8b03           mov eax, dword [rbx]
0x0000762b      8906           mov dword [rsi], eax
0x0000762d      4489e0         mov eax, r12d
0x00007630      8b4c03fc       mov ecx, dword [rbx + rax - 4]
0x00007634      894c06fc       mov dword [rsi + rax - 4], ecx
0x00007638      e920feffff     jmp 0x745d
0x0000763d      4489e0         mov eax, r12d
0x00007640      0fb74c03fe     movzx ecx, word [rbx + rax - 2]
0x00007645      66894c06fe     mov word [rsi + rax - 2], cx
0x0000764a      e90efeffff     jmp 0x745d
0x0000764f      90             nop
;-- sha512_buffer:
0x00007650      55             push rbp
0x00007651      53             push rbx
0x00007652      4889d5         mov rbp, rdx
0x00007655      4881ec680100.  sub rsp, 0x168
0x0000765c      64488b042528.  mov rax, qword fs:[0x28]
0x00007665      488984245801.  mov qword [rsp + 0x158], rax
0x0000766d      31c0           xor eax, eax
0x0000766f      48b808c9bcf3.  movabs rax, 0x6a09e667f3bcc908
0x00007679      4889e3         mov rbx, rsp
0x0000767c      48c744244800.  mov qword [rsp + 0x48], 0
0x00007685      48890424       mov qword [rsp], rax
0x00007689      48b83ba7ca84.  movabs rax, 0xbb67ae8584caa73b
0x00007693      4889da         mov rdx, rbx
0x00007696      4889442408     mov qword [rsp + 8], rax
0x0000769b      48b82bf894fe.  movabs rax, 0x3c6ef372fe94f82b
0x000076a5      48c744244000.  mov qword [rsp + 0x40], 0
0x000076ae      4889442410     mov qword [rsp + 0x10], rax
0x000076b3      48b8f1361d5f.  movabs rax, 0xa54ff53a5f1d36f1          ; ../coreutils-8.31/lib/sha512.c:-927
0x000076bd      48c744245000.  mov qword [rsp + 0x50], 0
0x000076c6      4889442418     mov qword [rsp + 0x18], rax
0x000076cb      48b8d182e6ad.  movabs rax, 0x510e527fade682d1
0x000076d5      4889442420     mov qword [rsp + 0x20], rax
0x000076da      48b81f6c3e2b.  movabs rax, 0x9b05688c2b3e6c1f
0x000076e4      4889442428     mov qword [rsp + 0x28], rax
0x000076e9      48b86bbd41fb.  movabs rax, 0x1f83d9abfb41bd6b
0x000076f3      4889442430     mov qword [rsp + 0x30], rax
0x000076f8      48b879217e13.  movabs rax, 0x5be0cd19137e2179
0x00007702      4889442438     mov qword [rsp + 0x38], rax
0x00007707      e854fcffff     call sym.sha512_process_bytes
0x0000770c      4889df         mov rdi, rbx
0x0000770f      e83cfbffff     call sym.sha512_conclude_ctx
0x00007714      4889ee         mov rsi, rbp
0x00007717      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/sha512.c:-921
0x0000771a      e8d1bdffff     call sym.sha512_read_ctx
0x0000771f      488b8c245801.  mov rcx, qword [rsp + 0x158]
0x00007727      6448330c2528.  xor rcx, qword fs:[0x28]
0x00007730      750a           jne 0x773c
0x00007732      4881c4680100.  add rsp, 0x168
0x00007739      5b             pop rbx
0x0000773a      5d             pop rbp                                 ; ../coreutils-8.31/lib/sha512.c:-840
0x0000773b      c3             ret
0x0000773c      e84f9fffff     call sym.imp.__stack_chk_fail
0x00007741      0f1f440000     nop dword [rax + rax]
0x00007746      662e0f1f8400.  nop word cs:[rax + rax]
;-- sha384_buffer:
0x00007750      55             push rbp
0x00007751      53             push rbx
0x00007752      4889d5         mov rbp, rdx
0x00007755      4881ec680100.  sub rsp, 0x168
0x0000775c      64488b042528.  mov rax, qword fs:[0x28]
0x00007765      488984245801.  mov qword [rsp + 0x158], rax
0x0000776d      31c0           xor eax, eax
0x0000776f      48b8d89e05c1.  movabs rax, 0xcbbb9d5dc1059ed8
0x00007779      4889e3         mov rbx, rsp
0x0000777c      48c744244800.  mov qword [rsp + 0x48], 0
0x00007785      48890424       mov qword [rsp], rax
0x00007789      48b807d57c36.  movabs rax, 0x629a292a367cd507
0x00007793      4889da         mov rdx, rbx
0x00007796      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/sha512.c:-826
0x0000779b      48b817dd7030.  movabs rax, 0x9159015a3070dd17
0x000077a5      48c744244000.  mov qword [rsp + 0x40], 0
0x000077ae      4889442410     mov qword [rsp + 0x10], rax
0x000077b3      48b839590ef7.  movabs rax, 0x152fecd8f70e5939
0x000077bd      48c744245000.  mov qword [rsp + 0x50], 0
0x000077c6      4889442418     mov qword [rsp + 0x18], rax
0x000077cb      48b8310bc0ff.  movabs rax, 0x67332667ffc00b31
0x000077d5      4889442420     mov qword [rsp + 0x20], rax
0x000077da      48b811155868.  movabs rax, 0x8eb44a8768581511
0x000077e4      4889442428     mov qword [rsp + 0x28], rax
0x000077e9      48b8a78ff964.  movabs rax, 0xdb0c2e0d64f98fa7          ; ../coreutils-8.31/lib/sha512.c:-788
0x000077f3      4889442430     mov qword [rsp + 0x30], rax
0x000077f8      48b8a44ffabe.  movabs rax, 0x47b5481dbefa4fa4
0x00007802      4889442438     mov qword [rsp + 0x38], rax             ; ../coreutils-8.31/lib/sha512.c:-781
0x00007807      e854fbffff     call sym.sha512_process_bytes           ; ../coreutils-8.31/lib/sha512.c:-791
0x0000780c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/sha512.c:-758
0x0000780f      e83cfaffff     call sym.sha512_conclude_ctx
0x00007814      4889ee         mov rsi, rbp
0x00007817      4889df         mov rdi, rbx
0x0000781a      e8f1bcffff     call sym.sha384_read_ctx
0x0000781f      488b8c245801.  mov rcx, qword [rsp + 0x158]
0x00007827      6448330c2528.  xor rcx, qword fs:[0x28]
0x00007830      750a           jne 0x783c
0x00007832      4881c4680100.  add rsp, 0x168
0x00007839      5b             pop rbx
0x0000783a      5d             pop rbp
0x0000783b      c3             ret
0x0000783c      e84f9effff     call sym.imp.__stack_chk_fail
0x00007841      0f1f440000     nop dword [rax + rax]
0x00007846      662e0f1f8400.  nop word cs:[rax + rax]
;-- shaxxx_stream.isra.1:
0x00007850      4157           push r15
0x00007852      4156           push r14
0x00007854      4989ce         mov r14, rcx
0x00007857      4155           push r13
0x00007859      4154           push r12
0x0000785b      4989d4         mov r12, rdx
0x0000785e      55             push rbp
0x0000785f      53             push rbx
0x00007860      4889fb         mov rbx, rdi
0x00007863      bf48800000     mov edi, 0x8048
0x00007868      4881ec780100.  sub rsp, 0x178
0x0000786f      64488b042528.  mov rax, qword fs:[0x28]
0x00007878      488984246801.  mov qword [rsp + 0x168], rax
0x00007880      31c0           xor eax, eax
0x00007882      4889742408     mov qword [rsp + 8], rsi
0x00007887      e8049fffff     call sym.imp.malloc
0x0000788c      4885c0         test rax, rax
0x0000788f      0f84cb000000   je 0x7960
0x00007895      4c8d6c2410     lea r13, [rsp + 0x10]                   ; ../coreutils-8.31/lib/sha512.c:-751
0x0000789a      4889c5         mov rbp, rax
0x0000789d      4c89ef         mov rdi, r13
0x000078a0      41ffd4         call r12
0x000078a3      41bc00800000   mov r12d, 0x8000
0x000078a9      4531ff         xor r15d, r15d
0x000078ac      eb2b           jmp 0x78d9
0x000078ae      6690           nop
0x000078b0      4a8d7c3d00     lea rdi, [rbp + r15]
0x000078b5      4c89e2         mov rdx, r12
0x000078b8      4889d9         mov rcx, rbx
0x000078bb      4c29fa         sub rdx, r15
0x000078be      be01000000     mov esi, 1                              ; ../coreutils-8.31/lib/sha512.c:-740
0x000078c3      e8589dffff     call sym.imp.fread_unlocked
0x000078c8      4901c7         add r15, rax
0x000078cb      4981ff008000.  cmp r15, 0x8000
0x000078d2      744c           je 0x7920
0x000078d4      4885c0         test rax, rax
0x000078d7      745f           je 0x7938
0x000078d9      f60310         test byte [rbx], 0x10
0x000078dc      74d2           je 0x78b0
0x000078de      4d85ff         test r15, r15
0x000078e1      756d           jne 0x7950
0x000078e3      488b742408     mov rsi, qword [rsp + 8]
0x000078e8      4c89ef         mov rdi, r13
0x000078eb      41ffd6         call r14
0x000078ee      4889ef         mov rdi, rbp
0x000078f1      e8ba9cffff     call sym.imp.free
0x000078f6      31c0           xor eax, eax
0x000078f8      488b8c246801.  mov rcx, qword [rsp + 0x168]
0x00007900      6448330c2528.  xor rcx, qword fs:[0x28]
0x00007909      755c           jne 0x7967
0x0000790b      4881c4780100.  add rsp, 0x178
0x00007912      5b             pop rbx
0x00007913      5d             pop rbp
0x00007914      415c           pop r12
0x00007916      415d           pop r13
0x00007918      415e           pop r14
0x0000791a      415f           pop r15
0x0000791c      c3             ret
0x0000791d      0f1f00         nop dword [rax]
0x00007920      4c89ea         mov rdx, r13
0x00007923      be00800000     mov esi, 0x8000
0x00007928      4889ef         mov rdi, rbp
0x0000792b      e800bcffff     call sym.sha512_process_block
0x00007930      e974ffffff     jmp 0x78a9
0x00007935      0f1f00         nop dword [rax]
0x00007938      f60320         test byte [rbx], 0x20
0x0000793b      74a1           je 0x78de
0x0000793d      4889ef         mov rdi, rbp
0x00007940      e86b9cffff     call sym.imp.free
0x00007945      b801000000     mov eax, 1
0x0000794a      ebac           jmp 0x78f8
0x0000794c      0f1f4000       nop dword [rax]
0x00007950      4c89ea         mov rdx, r13
0x00007953      4c89fe         mov rsi, r15
0x00007956      4889ef         mov rdi, rbp
0x00007959      e802faffff     call sym.sha512_process_bytes
0x0000795e      eb83           jmp 0x78e3
0x00007960      b801000000     mov eax, 1
0x00007965      eb91           jmp 0x78f8
0x00007967      e8249dffff     call sym.imp.__stack_chk_fail
0x0000796c      0f1f4000       nop dword [rax]
;-- sha512_stream:
0x00007970      488d0d89f9ff.  lea rcx, sym.sha512_finish_ctx          ; 0x7300 ; "USH\x89\xf5H\x89\xfbH\x83\xec\b\xe8?\xff\xff\xffH\x83\xc4\bH\x89\xeeH\x89\xdf[]\xe9\xce\xc1\xff\xff\x0f\x1f@"
0x00007977      488d1552baff.  lea rdx, sym.sha512_init_ctx            ; 0x33d0 ; "H\xb8\b\u027c\xf3g\xe6\tjH\xc7GH"
0x0000797e      e9cdfeffff     jmp sym.shaxxx_stream.isra.1
0x00007983      0f1f00         nop dword [rax]
0x00007986      662e0f1f8400.  nop word cs:[rax + rax]
;-- sha384_stream:
0x00007990      488d0d99f9ff.  lea rcx, sym.sha384_finish_ctx          ; 0x7330 ; "USH\x89\xf5H\x89\xfbH\x83\xec\b\xe8\x0f\xff\xff\xffH\x83\xc4\bH\x89\xeeH\x89\xdf[]\xe9\xbe\xc1\xff\xff\x0f\x1f@"
0x00007997      488d15c2baff.  lea rdx, sym.sha384_init_ctx            ; 0x3460 ; "H\xb8\u061e\x05\xc1]\x9d\xbb\xcbH\xc7GH"
0x0000799e      e9adfeffff     jmp sym.shaxxx_stream.isra.1
0x000079a3      662e0f1f8400.  nop word cs:[rax + rax]
0x000079ad      0f1f00         nop dword [rax]
;-- fdadvise:
0x000079b0      e96b9dffff     jmp sym.imp.posix_fadvise               ; ../coreutils-8.31/lib/fadvise.c:32
0x000079b5      90             nop
0x000079b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- fadvise:
0x000079c0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fadvise.c:40
0x000079c3      741b           je 0x79e0
0x000079c5      53             push rbx
0x000079c6      89f3           mov ebx, esi
0x000079c8      e8b39dffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fadvise.c:42
0x000079cd      89d9           mov ecx, ebx                            ; ../coreutils-8.31/lib/fadvise.c:34
0x000079cf      31d2           xor edx, edx
0x000079d1      31f6           xor esi, esi
0x000079d3      5b             pop rbx                                 ; ../coreutils-8.31/lib/fadvise.c:43
0x000079d4      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fadvise.c:34
0x000079d6      e9459dffff     jmp sym.imp.posix_fadvise
0x000079db      0f1f440000     nop dword [rax + rax]
0x000079e0      f3c3           ret
0x000079e2      662e0f1f8400.  nop word cs:[rax + rax]
0x000079ec      0f1f4000       nop dword [rax]
;-- fopen_safer:
0x000079f0      4154           push r12                                ; ../coreutils-8.31/lib/fopen-safer.c:32
0x000079f2      55             push rbp
0x000079f3      4889f5         mov rbp, rsi
0x000079f6      53             push rbx
0x000079f7      e8549effff     call sym.imp.fopen                      ; ../coreutils-8.31/lib/fopen-safer.c:33
0x000079fc      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fopen-safer.c:35
0x000079ff      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:33
0x00007a02      740d           je 0x7a11                               ; ../coreutils-8.31/lib/fopen-safer.c:35
0x00007a04      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:37
0x00007a07      e8749dffff     call sym.imp.fileno
0x00007a0c      83f802         cmp eax, 2                              ; ../coreutils-8.31/lib/fopen-safer.c:39
0x00007a0f      760f           jbe 0x7a20
0x00007a11      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:63
0x00007a14      5b             pop rbx
0x00007a15      5d             pop rbp
0x00007a16      415c           pop r12
0x00007a18      c3             ret
0x00007a19      0f1f80000000.  nop dword [rax]
0x00007a20      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fopen-safer.c:41
0x00007a22      e8991d0000     call sym.dup_safer
0x00007a27      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:43
0x00007a29      4189c4         mov r12d, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:41
0x00007a2c      783a           js 0x7a68                               ; ../coreutils-8.31/lib/fopen-safer.c:43
0x00007a2e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:51
0x00007a31      e84a260000     call sym.rpl_fclose
0x00007a36      85c0           test eax, eax
0x00007a38      7513           jne 0x7a4d
0x00007a3a      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fopen-safer.c:52
0x00007a3d      4489e7         mov edi, r12d
0x00007a40      e8ab9dffff     call sym.imp.fdopen
0x00007a45      4885c0         test rax, rax
0x00007a48      4889c3         mov rbx, rax
0x00007a4b      75c4           jne 0x7a11
0x00007a4d      e87e9bffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:54
0x00007a52      8b28           mov ebp, dword [rax]
0x00007a54      4889c3         mov rbx, rax
0x00007a57      4489e7         mov edi, r12d                           ; ../coreutils-8.31/lib/fopen-safer.c:55
0x00007a5a      e8b19cffff     call sym.imp.close
0x00007a5f      892b           mov dword [rbx], ebp                    ; ../coreutils-8.31/lib/fopen-safer.c:56
0x00007a61      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:57
0x00007a63      ebac           jmp 0x7a11
0x00007a65      0f1f00         nop dword [rax]
0x00007a68      e8639bffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:45
0x00007a6d      448b20         mov r12d, dword [rax]
0x00007a70      4889c5         mov rbp, rax
0x00007a73      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:46
0x00007a76      e805260000     call sym.rpl_fclose
0x00007a7b      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:48
0x00007a7d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fopen-safer.c:47
0x00007a81      eb8e           jmp 0x7a11                              ; ../coreutils-8.31/lib/fopen-safer.c:48
0x00007a83      662e0f1f8400.  nop word cs:[rax + rax]
0x00007a8d      0f1f00         nop dword [rax]
;-- set_program_name:
0x00007a90      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00007a93      53             push rbx
0x00007a94      7477           je 0x7b0d                               ; ../coreutils-8.31/lib/progname.c:51
0x00007a96      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x00007a9b      4889fb         mov rbx, rdi
0x00007a9e      e83d9cffff     call sym.imp.strrchr
0x00007aa3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00007aa6      7455           je 0x7afd
0x00007aa8      4c8d4001       lea r8, [rax + 1]
0x00007aac      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x00007aaf      4829da         sub rdx, rbx
0x00007ab2      4883fa06       cmp rdx, 6
0x00007ab6      7e45           jle 0x7afd
0x00007ab8      488d70fa       lea rsi, [rax - 6]
0x00007abc      488d3d553800.  lea rdi, str..libs                      ; 0xb318 ; "/.libs/"
0x00007ac3      b907000000     mov ecx, 7
0x00007ac8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00007aca      0f97c2         seta dl
0x00007acd      80da00         sbb dl, 0
0x00007ad0      84d2           test dl, dl
0x00007ad2      7529           jne 0x7afd
0x00007ad4      488d3d453800.  lea rdi, [0x0000b320]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x00007adb      b903000000     mov ecx, 3
0x00007ae0      4c89c6         mov rsi, r8
0x00007ae3      4c89c3         mov rbx, r8
0x00007ae6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00007ae8      0f97c2         seta dl
0x00007aeb      80da00         sbb dl, 0
0x00007aee      84d2           test dl, dl
0x00007af0      750b           jne 0x7afd
0x00007af2      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00007af6      48891da36520.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x20e0a0:8]=0
0x00007afd      48891d1c6620.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x20e120:8]=0
0x00007b04      48891db56520.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x20e0c0:8]=0
0x00007b0b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x00007b0c      c3             ret
0x00007b0d      488b0dcc6520.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e0e0:8]=0
0x00007b14      488d3dc53700.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0xb2e0 ; "A NULL argv[0] was passed through an exec system call.\n"
0x00007b1b      ba37000000     mov edx, 0x37                           ; '7'
0x00007b20      be01000000     mov esi, 1
0x00007b25      e8669dffff     call sym.imp.fwrite
0x00007b2a      e8919affff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x00007b2f      90             nop
;-- gettext_quote.part.1:
0x00007b30      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00007b31      53             push rbx
0x00007b32      4889fd         mov rbp, rdi
0x00007b35      89f3           mov ebx, esi
0x00007b37      4883ec08       sub rsp, 8
0x00007b3b      e8502a0000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00007b40      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00007b43      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00007b46      80fa55         cmp dl, 0x55
0x00007b49      7475           je 0x7bc0
0x00007b4b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x00007b4e      7420           je 0x7b70
0x00007b50      488d05dc3700.  lea rax, str.l______l                   ; 0xb333 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00007b57      488d15d73700.  lea rdx, [0x0000b335]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00007b5e      83fb09         cmp ebx, 9
0x00007b61      480f45c2       cmovne rax, rdx
0x00007b65      4883c408       add rsp, 8
0x00007b69      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x00007b6a      5d             pop rbp
0x00007b6b      c3             ret
0x00007b6c      0f1f4000       nop dword [rax]
0x00007b70      0fb65001       movzx edx, byte [rax + 1]
0x00007b74      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00007b77      80fa42         cmp dl, 0x42
0x00007b7a      75d4           jne 0x7b50
0x00007b7c      80780231       cmp byte [rax + 2], 0x31
0x00007b80      75ce           jne 0x7b50
0x00007b82      80780338       cmp byte [rax + 3], 0x38
0x00007b86      75c8           jne 0x7b50
0x00007b88      80780430       cmp byte [rax + 4], 0x30
0x00007b8c      75c2           jne 0x7b50
0x00007b8e      80780533       cmp byte [rax + 5], 0x33
0x00007b92      75bc           jne 0x7b50
0x00007b94      80780630       cmp byte [rax + 6], 0x30
0x00007b98      75b6           jne 0x7b50
0x00007b9a      80780700       cmp byte [rax + 7], 0
0x00007b9e      75b0           jne 0x7b50
0x00007ba0      807d0060       cmp byte [rbp], 0x60
0x00007ba4      488d05813700.  lea rax, [0x0000b32c]
0x00007bab      488d157e3700.  lea rdx, [0x0000b330]
0x00007bb2      480f45c2       cmovne rax, rdx
0x00007bb6      4883c408       add rsp, 8
0x00007bba      5b             pop rbx
0x00007bbb      5d             pop rbp
0x00007bbc      c3             ret
0x00007bbd      0f1f00         nop dword [rax]
0x00007bc0      0fb65001       movzx edx, byte [rax + 1]
0x00007bc4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00007bc7      80fa54         cmp dl, 0x54
0x00007bca      7584           jne 0x7b50
0x00007bcc      0fb65002       movzx edx, byte [rax + 2]
0x00007bd0      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00007bd3      80fa46         cmp dl, 0x46
0x00007bd6      0f8574ffffff   jne 0x7b50
0x00007bdc      8078032d       cmp byte [rax + 3], 0x2d
0x00007be0      0f856affffff   jne 0x7b50
0x00007be6      80780438       cmp byte [rax + 4], 0x38
0x00007bea      0f8560ffffff   jne 0x7b50
0x00007bf0      80780500       cmp byte [rax + 5], 0
0x00007bf4      0f8556ffffff   jne 0x7b50
0x00007bfa      807d0060       cmp byte [rbp], 0x60
0x00007bfe      488d051f3700.  lea rax, [0x0000b324]                   ; "\u2018"
0x00007c05      488d151c3700.  lea rdx, [0x0000b328]                   ; "\u2019"
0x00007c0c      480f45c2       cmovne rax, rdx
0x00007c10      4883c408       add rsp, 8
0x00007c14      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00007c15      5d             pop rbp
0x00007c16      c3             ret
0x00007c17      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00007c20      4157           push r15
0x00007c22      4156           push r14
0x00007c24      4589c7         mov r15d, r8d
0x00007c27      4155           push r13
0x00007c29      4154           push r12
0x00007c2b      4989fe         mov r14, rdi
0x00007c2e      55             push rbp
0x00007c2f      53             push rbx
0x00007c30      4489cb         mov ebx, r9d
0x00007c33      4989f5         mov r13, rsi
0x00007c36      4889cd         mov rbp, rcx
0x00007c39      83e302         and ebx, 2
0x00007c3c      4881ecb80000.  sub rsp, 0xb8
0x00007c43      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x00007c4b      4889542410     mov qword [rsp + 0x10], rdx
0x00007c50      4489442408     mov dword [rsp + 8], r8d
0x00007c55      44894c2478     mov dword [rsp + 0x78], r9d
0x00007c5a      4889442420     mov qword [rsp + 0x20], rax
0x00007c5f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00007c67      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x00007c6c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00007c74      4889442460     mov qword [rsp + 0x60], rax
0x00007c79      64488b042528.  mov rax, qword fs:[0x28]
0x00007c82      48898424a800.  mov qword [rsp + 0xa8], rax
0x00007c8a      31c0           xor eax, eax
0x00007c8c      e8df99ffff     call sym.imp.__ctype_get_mb_cur_max
0x00007c91      4183ff0a       cmp r15d, 0xa
0x00007c95      4889442458     mov qword [rsp + 0x58], rax
0x00007c9a      0f87af110000   ja 0x8e4f
0x00007ca0      488d0df93600.  lea rcx, [0x0000b3a0]
0x00007ca7      4489fa         mov edx, r15d
0x00007caa      48630491       movsxd rax, dword [rcx + rdx*4]
0x00007cae      4801c8         add rax, rcx
0x00007cb1      ffe0           jmp rax
0x00007cb3      c644240e01     mov byte [rsp + 0xe], 1
0x00007cb8      c644247c00     mov byte [rsp + 0x7c], 0
0x00007cbd      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00007cc0      48c744245000.  mov qword [rsp + 0x50], 0
0x00007cc9      c644240f01     mov byte [rsp + 0xf], 1
0x00007cce      c644240d00     mov byte [rsp + 0xd], 0
0x00007cd3      488d055b3600.  lea rax, [0x0000b335]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00007cda      48c744241801.  mov qword [rsp + 0x18], 1
0x00007ce3      4531ff         xor r15d, r15d
0x00007ce6      c74424080200.  mov dword [rsp + 8], 2
0x00007cee      4889442448     mov qword [rsp + 0x48], rax
0x00007cf3      4531db         xor r11d, r11d
0x00007cf6      4889e8         mov rax, rbp
0x00007cf9      4589e0         mov r8d, r12d
0x00007cfc      4c89dd         mov rbp, r11
0x00007cff      4989c3         mov r11, rax
0x00007d02      660f1f440000   nop word [rax + rax]
0x00007d08      4939eb         cmp r11, rbp
0x00007d0b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x00007d0f      4983fbff       cmp r11, 0xffffffffffffffff
0x00007d13      750d           jne 0x7d22
0x00007d15      488b442410     mov rax, qword [rsp + 0x10]
0x00007d1a      803c2800       cmp byte [rax + rbp], 0
0x00007d1e      410f95c4       setne r12b
0x00007d22      4584e4         test r12b, r12b
0x00007d25      0f8455060000   je 0x8380
0x00007d2b      837c240802     cmp dword [rsp + 8], 2
0x00007d30      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00007d35      4c8d0c2f       lea r9, [rdi + rbp]
0x00007d39      0f95c0         setne al
0x00007d3c      2244240d       and al, byte [rsp + 0xd]
0x00007d40      4189c2         mov r10d, eax
0x00007d43      0f84a7000000   je 0x7df0
0x00007d49      488b442418     mov rax, qword [rsp + 0x18]
0x00007d4e      4885c0         test rax, rax
0x00007d51      0f8429040000   je 0x8180
0x00007d57      4983fbff       cmp r11, 0xffffffffffffffff
0x00007d5b      488d5c0500     lea rbx, [rbp + rax]
0x00007d60      752e           jne 0x7d90
0x00007d62      4883f801       cmp rax, 1
0x00007d66      7628           jbe 0x7d90
0x00007d68      4488442438     mov byte [rsp + 0x38], r8b
0x00007d6d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00007d72      4c894c2428     mov qword [rsp + 0x28], r9
0x00007d77      e80499ffff     call sym.imp.strlen
0x00007d7c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00007d82      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00007d88      4989c3         mov r11, rax
0x00007d8b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00007d90      4c39db         cmp rbx, r11
0x00007d93      4488542428     mov byte [rsp + 0x28], r10b
0x00007d98      0f87b2050000   ja 0x8350
0x00007d9e      488b542418     mov rdx, qword [rsp + 0x18]
0x00007da3      488b742448     mov rsi, qword [rsp + 0x48]
0x00007da8      4c89cf         mov rdi, r9
0x00007dab      4c895c2440     mov qword [rsp + 0x40], r11
0x00007db0      4488442438     mov byte [rsp + 0x38], r8b
0x00007db5      4c894c2430     mov qword [rsp + 0x30], r9
0x00007dba      e87199ffff     call sym.imp.memcmp
0x00007dbf      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00007dc1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00007dc6      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00007dcc      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00007dd1      0f8579050000   jne 0x8350
0x00007dd7      807c240f00     cmp byte [rsp + 0xf], 0
0x00007ddc      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00007de2      0f857d0f0000   jne 0x8d65
0x00007de8      0f1f84000000.  nop dword [rax + rax]
0x00007df0      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00007df4      80fb7e         cmp bl, 0x7e
0x00007df7      0f871b030000   ja 0x8118
0x00007dfd      488d0dc83500.  lea rcx, [0x0000b3cc]
0x00007e04      0fb6d3         movzx edx, bl
0x00007e07      48630491       movsxd rax, dword [rcx + rdx*4]
0x00007e0b      4801c8         add rax, rcx
0x00007e0e      ffe0           jmp rax
0x00007e10      4531d2         xor r10d, r10d
0x00007e13      4983fb01       cmp r11, 1
0x00007e17      0f95c0         setne al
0x00007e1a      4983fbff       cmp r11, 0xffffffffffffffff
0x00007e1e      750c           jne 0x7e2c
0x00007e20      488b442410     mov rax, qword [rsp + 0x10]
0x00007e25      80780100       cmp byte [rax + 1], 0
0x00007e29      0f95c0         setne al
0x00007e2c      837c240802     cmp dword [rsp + 8], 2
0x00007e31      0f94c2         sete dl
0x00007e34      84c0           test al, al
0x00007e36      0f844c020000   je 0x8088
0x00007e3c      4531e4         xor r12d, r12d
0x00007e3f      31c0           xor eax, eax
0x00007e41      0f1f80000000.  nop dword [rax]
0x00007e48      807c240d01     cmp byte [rsp + 0xd], 1
0x00007e4d      0f850f010000   jne 0x7f62
0x00007e53      84d2           test dl, dl
0x00007e55      0f8507010000   jne 0x7f62
0x00007e5b      488b742420     mov rsi, qword [rsp + 0x20]
0x00007e60      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00007e63      7414           je 0x7e79
0x00007e65      89da           mov edx, ebx
0x00007e67      c0ea05         shr dl, 5
0x00007e6a      0fb6d2         movzx edx, dl
0x00007e6d      8b1496         mov edx, dword [rsi + rdx*4]
0x00007e70      0fa3da         bt edx, ebx
0x00007e73      0f824a010000   jb 0x7fc3
0x00007e79      4584d2         test r10b, r10b
0x00007e7c      0f8541010000   jne 0x7fc3
0x00007e82      83f001         xor eax, 1
0x00007e85      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00007e89      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x00007e8c      84c0           test al, al
0x00007e8e      7420           je 0x7eb0                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00007e90      4d39fd         cmp r13, r15
0x00007e93      7605           jbe 0x7e9a
0x00007e95      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00007e9a      498d4701       lea rax, [r15 + 1]
0x00007e9e      4939c5         cmp r13, rax
0x00007ea1      7606           jbe 0x7ea9
0x00007ea3      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00007ea9      4983c702       add r15, 2
0x00007ead      4531c0         xor r8d, r8d
0x00007eb0      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00007eb3      7304           jae 0x7eb9                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00007eb5      43881c3e       mov byte [r14 + r15], bl
0x00007eb9      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x00007ebe      4983c701       add r15, 1
0x00007ec2      b800000000     mov eax, 0
0x00007ec7      4584e4         test r12b, r12b
0x00007eca      0f44f8         cmove edi, eax
0x00007ecd      40887c240e     mov byte [rsp + 0xe], dil
0x00007ed2      e931feffff     jmp 0x7d08
0x00007ed7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00007ee0      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00007ee3      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00007ee7      83f802         cmp eax, 2
0x00007eea      0f84b8050000   je 0x84a8
0x00007ef0      83f805         cmp eax, 5
0x00007ef3      0f846f050000   je 0x8468
0x00007ef9      83f802         cmp eax, 2
0x00007efc      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00007f01      0f94c2         sete dl
0x00007f04      4531e4         xor r12d, r12d
0x00007f07      31c0           xor eax, eax
0x00007f09      e93affffff     jmp 0x7e48
0x00007f0e      6690           nop
0x00007f10      4531d2         xor r10d, r10d
0x00007f13      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00007f18      0f8402050000   je 0x8420
0x00007f1e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00007f23      31d2           xor edx, edx
0x00007f25      31c0           xor eax, eax
0x00007f27      bb27000000     mov ebx, 0x27                           ; '''
0x00007f2c      e917ffffff     jmp 0x7e48
0x00007f31      0f1f80000000.  nop dword [rax]
0x00007f38      ba09000000     mov edx, 9
0x00007f3d      bb74000000     mov ebx, 0x74                           ; 't'
0x00007f42      837c240802     cmp dword [rsp + 8], 2
0x00007f47      0f94c0         sete al
0x00007f4a      2244240f       and al, byte [rsp + 0xf]
0x00007f4e      0f854a010000   jne 0x809e
0x00007f54      807c240d00     cmp byte [rsp + 0xd], 0
0x00007f59      7565           jne 0x7fc0
0x00007f5b      89d3           mov ebx, edx
0x00007f5d      4531e4         xor r12d, r12d
0x00007f60      31c0           xor eax, eax
0x00007f62      807c240f00     cmp byte [rsp + 0xf], 0
0x00007f67      0f85eefeffff   jne 0x7e5b
0x00007f6d      e907ffffff     jmp 0x7e79                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00007f72      660f1f440000   nop word [rax + rax]
0x00007f78      ba08000000     mov edx, 8
0x00007f7d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00007f82      ebd0           jmp 0x7f54
0x00007f84      0f1f4000       nop dword [rax]
0x00007f88      837c240802     cmp dword [rsp + 8], 2
0x00007f8d      0f84cd030000   je 0x8360
0x00007f93      807c240d00     cmp byte [rsp + 0xd], 0
0x00007f98      0f8412020000   je 0x81b0
0x00007f9e      807c240f00     cmp byte [rsp + 0xf], 0
0x00007fa3      0f8407020000   je 0x81b0
0x00007fa9      48837c241800   cmp qword [rsp + 0x18], 0
0x00007faf      0f85b6030000   jne 0x836b
0x00007fb5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00007fba      660f1f440000   nop word [rax + rax]
0x00007fc0      4531e4         xor r12d, r12d
0x00007fc3      837c240802     cmp dword [rsp + 8], 2
0x00007fc8      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x00007fcb      807c240f00     cmp byte [rsp + 0xf], 0
0x00007fd0      89d0           mov eax, edx
0x00007fd2      0f8550080000   jne 0x8828
0x00007fd8      4489c0         mov eax, r8d
0x00007fdb      83f001         xor eax, 1
0x00007fde      20d0           and al, dl
0x00007fe0      742f           je 0x8011
0x00007fe2      4d39fd         cmp r13, r15
0x00007fe5      7605           jbe 0x7fec
0x00007fe7      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00007fec      498d5701       lea rdx, [r15 + 1]
0x00007ff0      4939d5         cmp r13, rdx
0x00007ff3      7606           jbe 0x7ffb
0x00007ff5      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00007ffb      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x00007fff      4939d5         cmp r13, rdx
0x00008002      7606           jbe 0x800a
0x00008004      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000800a      4983c703       add r15, 3
0x0000800e      4189c0         mov r8d, eax
0x00008011      4d39fd         cmp r13, r15
0x00008014      7605           jbe 0x801b
0x00008016      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000801b      4983c701       add r15, 1
0x0000801f      4883c501       add rbp, 1
0x00008023      e988feffff     jmp 0x7eb0
0x00008028      0f1f84000000.  nop dword [rax + rax]
0x00008030      807c240d00     cmp byte [rsp + 0xd], 0
0x00008035      0f85c8010000   jne 0x8203
0x0000803b      31d2           xor edx, edx
0x0000803d      f644247801     test byte [rsp + 0x78], 1
0x00008042      0f8413ffffff   je 0x7f5b
0x00008048      4883c501       add rbp, 1
0x0000804c      e9b7fcffff     jmp 0x7d08
0x00008051      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00008058      837c240802     cmp dword [rsp + 8], 2
0x0000805d      0f94c2         sete dl
0x00008060      31c0           xor eax, eax
0x00008062      e9e1fdffff     jmp 0x7e48
0x00008067      660f1f840000.  nop word [rax + rax]
0x00008070      ba07000000     mov edx, 7
0x00008075      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000807a      e9d5feffff     jmp 0x7f54
0x0000807f      90             nop
0x00008080      837c240802     cmp dword [rsp + 8], 2
0x00008085      0f94c2         sete dl
0x00008088      4885ed         test rbp, rbp
0x0000808b      0f85abfdffff   jne 0x7e3c
0x00008091      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00008096      20d0           and al, dl
0x00008098      0f84aafdffff   je 0x7e48
0x0000809e      4c89dd         mov rbp, r11
0x000080a1      c74424080200.  mov dword [rsp + 8], 2
0x000080a9      e9fb060000     jmp 0x87a9
0x000080ae      6690           nop
0x000080b0      837c240802     cmp dword [rsp + 8], 2
0x000080b5      0f94c2         sete dl
0x000080b8      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x000080bb      ebd4           jmp 0x8091
0x000080bd      0f1f00         nop dword [rax]
0x000080c0      837c240802     cmp dword [rsp + 8], 2
0x000080c5      bb20000000     mov ebx, 0x20                           ; "@"
0x000080ca      0f94c2         sete dl
0x000080cd      ebc2           jmp 0x8091
0x000080cf      90             nop
0x000080d0      ba0d000000     mov edx, 0xd
0x000080d5      bb72000000     mov ebx, 0x72                           ; 'r'
0x000080da      e963feffff     jmp 0x7f42
0x000080df      90             nop
0x000080e0      ba0c000000     mov edx, 0xc
0x000080e5      bb66000000     mov ebx, 0x66                           ; 'f'
0x000080ea      e965feffff     jmp 0x7f54
0x000080ef      90             nop
0x000080f0      ba0b000000     mov edx, 0xb
0x000080f5      bb76000000     mov ebx, 0x76                           ; 'v'
0x000080fa      e955feffff     jmp 0x7f54
0x000080ff      90             nop
0x00008100      ba0a000000     mov edx, 0xa
0x00008105      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x0000810a      e933feffff     jmp 0x7f42
0x0000810f      90             nop
0x00008110      4531d2         xor r10d, r10d
0x00008113      0f1f440000     nop dword [rax + rax]
0x00008118      48837c245801   cmp qword [rsp + 0x58], 1
0x0000811e      0f85a4030000   jne 0x84c8
0x00008124      4c895c2438     mov qword [rsp + 0x38], r11
0x00008129      4488442430     mov byte [rsp + 0x30], r8b
0x0000812e      4488542428     mov byte [rsp + 0x28], r10b
0x00008133      e8a897ffff     call sym.imp.__ctype_b_loc
0x00008138      488b08         mov rcx, qword [rax]
0x0000813b      0fb6d3         movzx edx, bl
0x0000813e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00008144      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x0000814a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000814f      bf01000000     mov edi, 1
0x00008154      0fb70451       movzx eax, word [rcx + rdx*2]
0x00008158      66250040       and ax, 0x4000
0x0000815c      410f95c4       setne r12b
0x00008160      0f94c0         sete al
0x00008163      2244240d       and al, byte [rsp + 0xd]
0x00008167      84c0           test al, al
0x00008169      0f8592090000   jne 0x8b01
0x0000816f      837c240802     cmp dword [rsp + 8], 2
0x00008174      0f94c2         sete dl
0x00008177      e9ccfcffff     jmp 0x7e48
0x0000817c      0f1f4000       nop dword [rax]
0x00008180      410fb619       movzx ebx, byte [r9]
0x00008184      80fb7e         cmp bl, 0x7e
0x00008187      7787           ja 0x8110
0x00008189      488d0d383400.  lea rcx, [0x0000b5c8]
0x00008190      0fb6d3         movzx edx, bl
0x00008193      48630491       movsxd rax, dword [rcx + rdx*4]
0x00008197      4801c8         add rax, rcx
0x0000819a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000819c      0f1f4000       nop dword [rax]
0x000081a0      4531d2         xor r10d, r10d
0x000081a3      807c240d00     cmp byte [rsp + 0xd], 0
0x000081a8      0f85f0fdffff   jne 0x7f9e
0x000081ae      6690           nop
0x000081b0      ba5c000000     mov edx, 0x5c                           ; '\'
0x000081b5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000081ba      e995fdffff     jmp 0x7f54
0x000081bf      90             nop
0x000081c0      ba0c000000     mov edx, 0xc
0x000081c5      4531d2         xor r10d, r10d
0x000081c8      bb66000000     mov ebx, 0x66                           ; 'f'
0x000081cd      e982fdffff     jmp 0x7f54
0x000081d2      660f1f440000   nop word [rax + rax]
0x000081d8      ba0a000000     mov edx, 0xa
0x000081dd      4531d2         xor r10d, r10d
0x000081e0      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x000081e5      e958fdffff     jmp 0x7f42
0x000081ea      660f1f440000   nop word [rax + rax]
0x000081f0      bb61000000     mov ebx, 0x61                           ; 'a'
0x000081f5      e9c6fdffff     jmp 0x7fc0
0x000081fa      660f1f440000   nop word [rax + rax]
0x00008200      4531d2         xor r10d, r10d
0x00008203      837c240802     cmp dword [rsp + 8], 2
0x00008208      0f94c2         sete dl
0x0000820b      807c240f00     cmp byte [rsp + 0xf], 0
0x00008210      0f85940b0000   jne 0x8daa
0x00008216      4489c0         mov eax, r8d
0x00008219      4c89f9         mov rcx, r15
0x0000821c      83f001         xor eax, 1
0x0000821f      20d0           and al, dl
0x00008221      742d           je 0x8250
0x00008223      4d39fd         cmp r13, r15
0x00008226      7605           jbe 0x822d
0x00008228      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000822d      498d4f01       lea rcx, [r15 + 1]
0x00008231      4939cd         cmp r13, rcx
0x00008234      7606           jbe 0x823c
0x00008236      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000823c      498d4f02       lea rcx, [r15 + 2]
0x00008240      4939cd         cmp r13, rcx
0x00008243      0f8730060000   ja 0x8879
0x00008249      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000824d      4189c0         mov r8d, eax
0x00008250      4939cd         cmp r13, rcx
0x00008253      7605           jbe 0x825a
0x00008255      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000825a      837c240802     cmp dword [rsp + 8], 2
0x0000825f      4c8d7901       lea r15, [rcx + 1]
0x00008263      0f8400060000   je 0x8869
0x00008269      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000826d      4c39d8         cmp rax, r11
0x00008270      7319           jae 0x828b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00008272      488b442410     mov rax, qword [rsp + 0x10]
0x00008277      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000827c      88442428       mov byte [rsp + 0x28], al
0x00008280      83e830         sub eax, 0x30
0x00008283      3c09           cmp al, 9
0x00008285      0f862e080000   jbe 0x8ab9
0x0000828b      4489e0         mov eax, r12d
0x0000828e      bb30000000     mov ebx, 0x30                           ; '0'
0x00008293      4531e4         xor r12d, r12d
0x00008296      e9adfbffff     jmp 0x7e48                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000829b      0f1f440000     nop dword [rax + rax]
0x000082a0      837c240802     cmp dword [rsp + 8], 2
0x000082a5      4589d4         mov r12d, r10d
0x000082a8      0f94c2         sete dl
0x000082ab      4531d2         xor r10d, r10d
0x000082ae      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x000082b0      e993fbffff     jmp 0x7e48                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x000082b5      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x000082b8      837c240802     cmp dword [rsp + 8], 2
0x000082bd      0f94c2         sete dl
0x000082c0      4531d2         xor r10d, r10d
0x000082c3      e9c0fdffff     jmp 0x8088
0x000082c8      0f1f84000000.  nop dword [rax + rax]
0x000082d0      837c240802     cmp dword [rsp + 8], 2
0x000082d5      0f94c2         sete dl
0x000082d8      4531d2         xor r10d, r10d
0x000082db      4531e4         xor r12d, r12d
0x000082de      e9aefdffff     jmp 0x8091
0x000082e3      0f1f440000     nop dword [rax + rax]
0x000082e8      837c240802     cmp dword [rsp + 8], 2
0x000082ed      4589d4         mov r12d, r10d
0x000082f0      bb20000000     mov ebx, 0x20                           ; "@"
0x000082f5      0f94c2         sete dl
0x000082f8      4531d2         xor r10d, r10d
0x000082fb      e991fdffff     jmp 0x8091
0x00008300      ba0d000000     mov edx, 0xd
0x00008305      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00008308      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000830d      e930fcffff     jmp 0x7f42
0x00008312      660f1f440000   nop word [rax + rax]
0x00008318      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000831d      e99efcffff     jmp 0x7fc0
0x00008322      660f1f440000   nop word [rax + rax]
0x00008328      ba09000000     mov edx, 9
0x0000832d      4531d2         xor r10d, r10d
0x00008330      bb74000000     mov ebx, 0x74                           ; 't'
0x00008335      e908fcffff     jmp 0x7f42
0x0000833a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00008340      bb62000000     mov ebx, 0x62                           ; 'b'
0x00008345      e976fcffff     jmp 0x7fc0
0x0000834a      660f1f440000   nop word [rax + rax]
0x00008350      4531d2         xor r10d, r10d
0x00008353      e998faffff     jmp 0x7df0
0x00008358      0f1f84000000.  nop dword [rax + rax]
0x00008360      807c240f00     cmp byte [rsp + 0xf], 0
0x00008365      0f8565090000   jne 0x8cd0
0x0000836b      4883c501       add rbp, 1
0x0000836f      4489c0         mov eax, r8d
0x00008372      4531e4         xor r12d, r12d
0x00008375      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000837a      e90dfbffff     jmp 0x7e8c
0x0000837f      90             nop
0x00008380      837c240802     cmp dword [rsp + 8], 2
0x00008385      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000838a      4589c4         mov r12d, r8d
0x0000838d      4c89dd         mov rbp, r11
0x00008390      0f94c2         sete dl
0x00008393      89d8           mov eax, ebx
0x00008395      4d85ff         test r15, r15
0x00008398      0f94c1         sete cl
0x0000839b      21d0           and eax, edx
0x0000839d      20c8           and al, cl
0x0000839f      0f85610a0000   jne 0x8e06                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x000083a5      89d8           mov eax, ebx
0x000083a7      83f001         xor eax, 1
0x000083aa      20c2           and dl, al
0x000083ac      0f846a090000   je 0x8d1c
0x000083b2      807c247c00     cmp byte [rsp + 0x7c], 0
0x000083b7      0f845d090000   je 0x8d1a
0x000083bd      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x000083c2      0f85f5090000   jne 0x8dbd
0x000083c8      4d85ed         test r13, r13
0x000083cb      0f94c0         sete al
0x000083ce      48837c245000   cmp qword [rsp + 0x50], 0
0x000083d4      0f95c2         setne dl
0x000083d7      20d0           and al, dl
0x000083d9      0f841d0a0000   je 0x8dfc
0x000083df      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000083e4      488d1d4a2f00.  lea rbx, [0x0000b335]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000083eb      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x000083ef      c74424080200.  mov dword [rsp + 8], 2
0x000083f7      41bf01000000   mov r15d, 1
0x000083fd      48c744241801.  mov qword [rsp + 0x18], 1
0x00008406      c644240f00     mov byte [rsp + 0xf], 0
0x0000840b      48895c2448     mov qword [rsp + 0x48], rbx
0x00008410      8844247c       mov byte [rsp + 0x7c], al
0x00008414      e9daf8ffff     jmp 0x7cf3
0x00008419      0f1f80000000.  nop dword [rax]
0x00008420      807c240f00     cmp byte [rsp + 0xf], 0
0x00008425      0f85a5080000   jne 0x8cd0
0x0000842b      4d85ed         test r13, r13
0x0000842e      0f84fc030000   je 0x8830                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00008434      31d2           xor edx, edx
0x00008436      48837c245000   cmp qword [rsp + 0x50], 0
0x0000843c      0f85ee030000   jne 0x8830                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00008442      4c896c2450     mov qword [rsp + 0x50], r13
0x00008447      4983c703       add r15, 3
0x0000844b      31c0           xor eax, eax
0x0000844d      448864247c     mov byte [rsp + 0x7c], r12b
0x00008452      4531c0         xor r8d, r8d
0x00008455      4989d5         mov r13, rdx
0x00008458      bb27000000     mov ebx, 0x27                           ; '''
0x0000845d      e917faffff     jmp 0x7e79
0x00008462      660f1f440000   nop word [rax + rax]
0x00008468      f644247804     test byte [rsp + 0x78], 4
0x0000846d      7421           je 0x8490
0x0000846f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00008473      4c39d9         cmp rcx, r11
0x00008476      7318           jae 0x8490
0x00008478      488b442410     mov rax, qword [rsp + 0x10]
0x0000847d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00008482      0f848a070000   je 0x8c12
0x00008488      0f1f84000000.  nop dword [rax + rax]
0x00008490      31d2           xor edx, edx
0x00008492      4531e4         xor r12d, r12d
0x00008495      31c0           xor eax, eax
0x00008497      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000849c      e9a7f9ffff     jmp 0x7e48
0x000084a1      0f1f80000000.  nop dword [rax]
0x000084a8      807c240f00     cmp byte [rsp + 0xf], 0
0x000084ad      0f851d080000   jne 0x8cd0
0x000084b3      4531e4         xor r12d, r12d
0x000084b6      31c0           xor eax, eax
0x000084b8      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000084bd      e9b7f9ffff     jmp 0x7e79                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x000084c2      660f1f440000   nop word [rax + rax]
0x000084c8      488d8424a000.  lea rax, [rsp + 0xa0]
0x000084d0      4983fbff       cmp r11, 0xffffffffffffffff
0x000084d4      48c78424a000.  mov qword [rsp + 0xa0], 0
0x000084e0      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x000084e5      752d           jne 0x8514
0x000084e7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000084ec      4488442440     mov byte [rsp + 0x40], r8b
0x000084f1      4488542438     mov byte [rsp + 0x38], r10b
0x000084f6      4c894c2430     mov qword [rsp + 0x30], r9
0x000084fb      e88091ffff     call sym.imp.strlen
0x00008500      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00008506      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x0000850c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x0000850f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00008514      488d84249c00.  lea rax, [rsp + 0x9c]
0x0000851c      31c9           xor ecx, ecx
0x0000851e      885c247e       mov byte [rsp + 0x7e], bl
0x00008522      448844247d     mov byte [rsp + 0x7d], r8b
0x00008527      4889cb         mov rbx, rcx
0x0000852a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00008532      4889442438     mov qword [rsp + 0x38], rax
0x00008537      448854247f     mov byte [rsp + 0x7f], r10b
0x0000853c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00008544      4c89742440     mov qword [rsp + 0x40], r14
0x00008549      4c896c2470     mov qword [rsp + 0x70], r13
0x0000854e      4c895c2430     mov qword [rsp + 0x30], r11
0x00008553      488b442410     mov rax, qword [rsp + 0x10]
0x00008558      4c8d741d00     lea r14, [rbp + rbx]
0x0000855d      488b542430     mov rdx, qword [rsp + 0x30]
0x00008562      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00008567      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000856c      4e8d2c30       lea r13, [rax + r14]
0x00008570      4c29f2         sub rdx, r14
0x00008573      4c89ee         mov rsi, r13
0x00008576      e8a51e0000     call sym.rpl_mbrtowc
0x0000857b      4885c0         test rax, rax
0x0000857e      4989c7         mov r15, rax
0x00008581      744e           je 0x85d1
0x00008583      4883f8ff       cmp rax, 0xffffffffffffffff
0x00008587      0f8418060000   je 0x8ba5
0x0000858d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00008591      0f849a050000   je 0x8b31
0x00008597      837c240802     cmp dword [rsp + 8], 2
0x0000859c      0f94c0         sete al
0x0000859f      2244240f       and al, byte [rsp + 0xf]
0x000085a3      0f8597010000   jne 0x8740
0x000085a9      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x000085b0      e80b93ffff     call sym.imp.iswprint
0x000085b5      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000085ba      85c0           test eax, eax
0x000085bc      b800000000     mov eax, 0
0x000085c1      440f44e0       cmove r12d, eax
0x000085c5      4c01fb         add rbx, r15
0x000085c8      e8e392ffff     call sym.imp.mbsinit
0x000085cd      85c0           test eax, eax
0x000085cf      7482           je 0x8553
0x000085d1      4489e2         mov edx, r12d
0x000085d4      4889df         mov rdi, rbx
0x000085d7      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000085dd      83f201         xor edx, 1
0x000085e0      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000085e5      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000085eb      2254240d       and dl, byte [rsp + 0xd]
0x000085ef      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000085f7      4c8b742440     mov r14, qword [rsp + 0x40]
0x000085fc      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00008601      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00008606      4883ff01       cmp rdi, 1
0x0000860a      0f86fb050000   jbe 0x8c0b
0x00008610      4889f9         mov rcx, rdi
0x00008613      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00008615      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x0000861b      4801e9         add rcx, rbp
0x0000861e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00008623      e9b6000000     jmp 0x86de
0x00008628      0f1f84000000.  nop dword [rax + rax]
0x00008630      837c240802     cmp dword [rsp + 8], 2
0x00008635      0f94c0         sete al
0x00008638      4584c9         test r9b, r9b
0x0000863b      0f85af040000   jne 0x8af0
0x00008641      4489c6         mov esi, r8d
0x00008644      83f601         xor esi, 1
0x00008647      4020f0         and al, sil
0x0000864a      742f           je 0x867b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x0000864c      4d39fd         cmp r13, r15
0x0000864f      7605           jbe 0x8656
0x00008651      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00008656      498d7701       lea rsi, [r15 + 1]
0x0000865a      4939f5         cmp r13, rsi
0x0000865d      7606           jbe 0x8665                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x0000865f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00008665      498d7702       lea rsi, [r15 + 2]
0x00008669      4939f5         cmp r13, rsi
0x0000866c      7606           jbe 0x8674
0x0000866e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00008674      4983c703       add r15, 3
0x00008678      4189c0         mov r8d, eax
0x0000867b      4d39fd         cmp r13, r15
0x0000867e      7605           jbe 0x8685
0x00008680      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00008685      498d4701       lea rax, [r15 + 1]
0x00008689      4939c5         cmp r13, rax
0x0000868c      760d           jbe 0x869b
0x0000868e      89d8           mov eax, ebx
0x00008690      c0e806         shr al, 6
0x00008693      83c030         add eax, 0x30
0x00008696      4388443e01     mov byte [r14 + r15 + 1], al
0x0000869b      498d4702       lea rax, [r15 + 2]
0x0000869f      4939c5         cmp r13, rax
0x000086a2      7610           jbe 0x86b4
0x000086a4      89d8           mov eax, ebx
0x000086a6      c0e803         shr al, 3
0x000086a9      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x000086ac      83c030         add eax, 0x30
0x000086af      4388443e02     mov byte [r14 + r15 + 2], al
0x000086b4      83e307         and ebx, 7
0x000086b7      4883c501       add rbp, 1
0x000086bb      4983c703       add r15, 3
0x000086bf      83c330         add ebx, 0x30
0x000086c2      4839cd         cmp rbp, rcx
0x000086c5      0f83e5f7ffff   jae 0x7eb0
0x000086cb      89d6           mov esi, edx
0x000086cd      4d39fd         cmp r13, r15
0x000086d0      7604           jbe 0x86d6
0x000086d2      43881c3e       mov byte [r14 + r15], bl
0x000086d6      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x000086da      4983c701       add r15, 1
0x000086de      84d2           test dl, dl
0x000086e0      0f854affffff   jne 0x8630
0x000086e6      89f0           mov eax, esi
0x000086e8      83f001         xor eax, 1
0x000086eb      4421c0         and eax, r8d
0x000086ee      4584d2         test r10b, r10b
0x000086f1      740e           je 0x8701
0x000086f3      4d39fd         cmp r13, r15
0x000086f6      7605           jbe 0x86fd
0x000086f8      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000086fd      4983c701       add r15, 1
0x00008701      4883c501       add rbp, 1
0x00008705      4839cd         cmp rbp, rcx
0x00008708      0f837ef7ffff   jae 0x7e8c
0x0000870e      84c0           test al, al
0x00008710      0f84f8030000   je 0x8b0e
0x00008716      4d39fd         cmp r13, r15
0x00008719      7605           jbe 0x8720
0x0000871b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00008720      498d4701       lea rax, [r15 + 1]
0x00008724      4939c5         cmp r13, rax
0x00008727      7606           jbe 0x872f
0x00008729      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000872f      4983c702       add r15, 2
0x00008733      4531d2         xor r10d, r10d
0x00008736      4531c0         xor r8d, r8d
0x00008739      eb92           jmp 0x86cd
0x0000873b      0f1f440000     nop dword [rax + rax]
0x00008740      4983ff01       cmp r15, 1
0x00008744      0f845ffeffff   je 0x85a9
0x0000874a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000874f      4a8d0c3f       lea rcx, [rdi + r15]
0x00008753      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00008758      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000875c      eb0f           jmp 0x876d
0x0000875e      6690           nop
0x00008760      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00008764      4939d0         cmp r8, rdx
0x00008767      0f843cfeffff   je 0x85a9
0x0000876d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00008770      83e95b         sub ecx, 0x5b
0x00008773      80f921         cmp cl, 0x21
0x00008776      77e8           ja 0x8760                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00008778      be01000000     mov esi, 1
0x0000877d      48d3e6         shl rsi, cl
0x00008780      4889f1         mov rcx, rsi
0x00008783      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x0000878d      4885f1         test rcx, rsi
0x00008790      74ce           je 0x8760
0x00008792      4c8b742440     mov r14, qword [rsp + 0x40]
0x00008797      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000879c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x000087a1      c74424080200.  mov dword [rsp + 8], 2
0x000087a9      807c240d00     cmp byte [rsp + 0xd], 0
0x000087ae      7410           je 0x87c0
0x000087b0      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x000087b2      b804000000     mov eax, 4
0x000087b7      0f44442408     cmove eax, dword [rsp + 8]
0x000087bc      89442408       mov dword [rsp + 8], eax
0x000087c0      4883ec08       sub rsp, 8
0x000087c4      4889e9         mov rcx, rbp
0x000087c7      4c89ee         mov rsi, r13
0x000087ca      ff742468       push qword [rsp + 0x68]
0x000087ce      ff742478       push qword [rsp + 0x78]
0x000087d2      4c89f7         mov rdi, r14
0x000087d5      6a00           push 0
0x000087d7      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000087df      448b442428     mov r8d, dword [rsp + 0x28]
0x000087e4      488b542430     mov rdx, qword [rsp + 0x30]
0x000087e9      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x000087ed      e82ef4ffff     call sym.quotearg_buffer_restyled
0x000087f2      4883c420       add rsp, 0x20
0x000087f6      4989c7         mov r15, rax
0x000087f9      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00008801      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000880a      4c89f8         mov rax, r15
0x0000880d      0f8500060000   jne 0x8e13
0x00008813      4881c4b80000.  add rsp, 0xb8
0x0000881a      5b             pop rbx
0x0000881b      5d             pop rbp
0x0000881c      415c           pop r12
0x0000881e      415d           pop r13
0x00008820      415e           pop r14
0x00008822      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00008824      c3             ret
0x00008825      0f1f00         nop dword [rax]
0x00008828      4c89dd         mov rbp, r11
0x0000882b      e979ffffff     jmp 0x87a9
0x00008830      4d39fd         cmp r13, r15
0x00008833      7605           jbe 0x883a
0x00008835      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000883a      498d4701       lea rax, [r15 + 1]
0x0000883e      4939c5         cmp r13, rax
0x00008841      7606           jbe 0x8849
0x00008843      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00008849      498d4702       lea rax, [r15 + 2]
0x0000884d      4939c5         cmp r13, rax
0x00008850      0f86ec050000   jbe 0x8e42
0x00008856      4c89ea         mov rdx, r13
0x00008859      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000885f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00008864      e9d9fbffff     jmp 0x8442
0x00008869      4489e0         mov eax, r12d
0x0000886c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00008871      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00008874      e900f6ffff     jmp 0x7e79                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00008879      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000887f      e9c5f9ffff     jmp 0x8249
0x00008884      85db           test ebx, ebx
0x00008886      0f8527f4ffff   jne 0x7cb3
0x0000888c      c644240d01     mov byte [rsp + 0xd], 1
0x00008891      4d85ed         test r13, r13
0x00008894      0f8590050000   jne 0x8e2a
0x0000889a      488d05942a00.  lea rax, [0x0000b335]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000088a1      48c744245000.  mov qword [rsp + 0x50], 0
0x000088aa      c644240e01     mov byte [rsp + 0xe], 1
0x000088af      c644247c00     mov byte [rsp + 0x7c], 0
0x000088b4      4531e4         xor r12d, r12d
0x000088b7      c644240f00     mov byte [rsp + 0xf], 0
0x000088bc      48c744241801.  mov qword [rsp + 0x18], 1
0x000088c5      4889442448     mov qword [rsp + 0x48], rax
0x000088ca      41bf01000000   mov r15d, 1
0x000088d0      c74424080200.  mov dword [rsp + 8], 2
0x000088d8      e916f4ffff     jmp 0x7cf3                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x000088dd      0f1f00         nop dword [rax]
0x000088e0      85db           test ebx, ebx
0x000088e2      0f85f5030000   jne 0x8cdd
0x000088e8      4d85ed         test r13, r13
0x000088eb      0f8425020000   je 0x8b16
0x000088f1      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x000088f5      c644240e01     mov byte [rsp + 0xe], 1
0x000088fa      4531e4         xor r12d, r12d
0x000088fd      c644247c00     mov byte [rsp + 0x7c], 0
0x00008902      48c744245000.  mov qword [rsp + 0x50], 0
0x0000890b      488d05212a00.  lea rax, str.l______l                   ; 0xb333 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00008912      c644240f00     mov byte [rsp + 0xf], 0
0x00008917      c644240d01     mov byte [rsp + 0xd], 1
0x0000891c      48c744241801.  mov qword [rsp + 0x18], 1
0x00008925      41bf01000000   mov r15d, 1
0x0000892b      4889442448     mov qword [rsp + 0x48], rax
0x00008930      e9bef3ffff     jmp 0x7cf3
0x00008935      488d05f72900.  lea rax, str.l______l                   ; 0xb333 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000893c      c644240e01     mov byte [rsp + 0xe], 1
0x00008941      c644247c00     mov byte [rsp + 0x7c], 0
0x00008946      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00008949      48c744245000.  mov qword [rsp + 0x50], 0
0x00008952      c644240f01     mov byte [rsp + 0xf], 1
0x00008957      c644240d01     mov byte [rsp + 0xd], 1
0x0000895c      48c744241801.  mov qword [rsp + 0x18], 1
0x00008965      4531ff         xor r15d, r15d
0x00008968      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000896d      c74424080500.  mov dword [rsp + 8], 5
0x00008975      e979f3ffff     jmp 0x7cf3
0x0000897a      c644240e01     mov byte [rsp + 0xe], 1
0x0000897f      c644247c00     mov byte [rsp + 0x7c], 0
0x00008984      4531e4         xor r12d, r12d
0x00008987      48c744245000.  mov qword [rsp + 0x50], 0
0x00008990      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00008995      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00008998      c644240d01     mov byte [rsp + 0xd], 1
0x0000899d      48c744241800.  mov qword [rsp + 0x18], 0
0x000089a6      48c744244800.  mov qword [rsp + 0x48], 0
0x000089af      e93ff3ffff     jmp 0x7cf3
0x000089b4      837c24080a     cmp dword [rsp + 8], 0xa
0x000089b9      7456           je 0x8a11
0x000089bb      488d35752900.  lea rsi, [0x0000b337]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x000089c2      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x000089c4      ba05000000     mov edx, 5
0x000089c9      e8928cffff     call sym.imp.dcgettext
0x000089ce      4889c1         mov rcx, rax
0x000089d1      4889442468     mov qword [rsp + 0x68], rax
0x000089d6      488d055a2900.  lea rax, [0x0000b337]                   ; "`"
0x000089dd      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x000089e0      0f8498030000   je 0x8d7e
0x000089e6      488d35482900.  lea rsi, [0x0000b335]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000089ed      31ff           xor edi, edi
0x000089ef      ba05000000     mov edx, 5
0x000089f4      e8678cffff     call sym.imp.dcgettext
0x000089f9      4889c1         mov rcx, rax
0x000089fc      4889442460     mov qword [rsp + 0x60], rax
0x00008a01      488d052d2900.  lea rax, [0x0000b335]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00008a08      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x00008a0b      0f8483030000   je 0x8d94
0x00008a11      4531ff         xor r15d, r15d
0x00008a14      85db           test ebx, ebx
0x00008a16      0f84c1010000   je 0x8bdd
0x00008a1c      85db           test ebx, ebx
0x00008a1e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00008a23      0f9544240f     setne byte [rsp + 0xf]
0x00008a28      4531e4         xor r12d, r12d
0x00008a2b      4889df         mov rdi, rbx
0x00008a2e      e84d8cffff     call sym.imp.strlen
0x00008a33      48895c2448     mov qword [rsp + 0x48], rbx
0x00008a38      4889442418     mov qword [rsp + 0x18], rax
0x00008a3d      c644240e01     mov byte [rsp + 0xe], 1
0x00008a42      c644247c00     mov byte [rsp + 0x7c], 0
0x00008a47      48c744245000.  mov qword [rsp + 0x50], 0
0x00008a50      c644240d01     mov byte [rsp + 0xd], 1
0x00008a55      e999f2ffff     jmp 0x7cf3
0x00008a5a      c644240e01     mov byte [rsp + 0xe], 1
0x00008a5f      c644247c00     mov byte [rsp + 0x7c], 0
0x00008a64      4531e4         xor r12d, r12d
0x00008a67      48c744245000.  mov qword [rsp + 0x50], 0
0x00008a70      c644240f00     mov byte [rsp + 0xf], 0
0x00008a75      4531ff         xor r15d, r15d
0x00008a78      c644240d00     mov byte [rsp + 0xd], 0
0x00008a7d      48c744241800.  mov qword [rsp + 0x18], 0
0x00008a86      48c744244800.  mov qword [rsp + 0x48], 0
0x00008a8f      e95ff2ffff     jmp 0x7cf3
0x00008a94      c644240e01     mov byte [rsp + 0xe], 1
0x00008a99      c644247c00     mov byte [rsp + 0x7c], 0
0x00008a9e      4531e4         xor r12d, r12d
0x00008aa1      48c744245000.  mov qword [rsp + 0x50], 0
0x00008aaa      c644240f01     mov byte [rsp + 0xf], 1
0x00008aaf      c644240d01     mov byte [rsp + 0xd], 1
0x00008ab4      e91af2ffff     jmp 0x7cd3
0x00008ab9      4d39fd         cmp r13, r15
0x00008abc      7605           jbe 0x8ac3
0x00008abe      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00008ac3      488d4102       lea rax, [rcx + 2]
0x00008ac7      4939c5         cmp r13, rax
0x00008aca      7606           jbe 0x8ad2
0x00008acc      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00008ad2      4489e0         mov eax, r12d
0x00008ad5      4c8d7903       lea r15, [rcx + 3]
0x00008ad9      4531e4         xor r12d, r12d
0x00008adc      bb30000000     mov ebx, 0x30                           ; '0'
0x00008ae1      e962f3ffff     jmp 0x7e48
0x00008ae6      662e0f1f8400.  nop word cs:[rax + rax]
0x00008af0      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00008af5      4c89dd         mov rbp, r11
0x00008af8      885c240d       mov byte [rsp + 0xd], bl
0x00008afc      e9a8fcffff     jmp 0x87a9
0x00008b01      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00008b06      4531e4         xor r12d, r12d
0x00008b09      e902fbffff     jmp 0x8610
0x00008b0e      4531d2         xor r10d, r10d
0x00008b11      e9b7fbffff     jmp 0x86cd
0x00008b16      48c744245000.  mov qword [rsp + 0x50], 0
0x00008b1f      c644240e01     mov byte [rsp + 0xe], 1
0x00008b24      4531e4         xor r12d, r12d
0x00008b27      c644247c00     mov byte [rsp + 0x7c], 0
0x00008b2c      e9dafdffff     jmp 0x890b
0x00008b31      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00008b36      4c89f6         mov rsi, r14
0x00008b39      4c89e9         mov rcx, r13
0x00008b3c      4889d8         mov rax, rbx
0x00008b3f      4889df         mov rdi, rbx
0x00008b42      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00008b48      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00008b4d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00008b55      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00008b58      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00008b5e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00008b66      4c8b742440     mov r14, qword [rsp + 0x40]
0x00008b6b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00008b70      7326           jae 0x8b98
0x00008b72      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00008b75      7510           jne 0x8b87
0x00008b77      eb1f           jmp 0x8b98
0x00008b79      0f1f80000000.  nop dword [rax]
0x00008b80      41803c0100     cmp byte [r9 + rax], 0
0x00008b85      740e           je 0x8b95
0x00008b87      4883c001       add rax, 1
0x00008b8b      488d540500     lea rdx, [rbp + rax]
0x00008b90      4939d3         cmp r11, rdx
0x00008b93      77eb           ja 0x8b80
0x00008b95      4889c7         mov rdi, rax
0x00008b98      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00008b9d      4531e4         xor r12d, r12d
0x00008ba0      e961faffff     jmp 0x8606
0x00008ba5      4889df         mov rdi, rbx
0x00008ba8      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00008bae      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00008bb3      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00008bb9      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00008bc1      4531e4         xor r12d, r12d
0x00008bc4      4c8b742440     mov r14, qword [rsp + 0x40]
0x00008bc9      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00008bce      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00008bd3      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00008bd8      e929faffff     jmp 0x8606
0x00008bdd      488b542468     mov rdx, qword [rsp + 0x68]
0x00008be2      0fb602         movzx eax, byte [rdx]
0x00008be5      84c0           test al, al
0x00008be7      0f842ffeffff   je 0x8a1c
0x00008bed      0f1f00         nop dword [rax]
0x00008bf0      4d39fd         cmp r13, r15
0x00008bf3      7604           jbe 0x8bf9
0x00008bf5      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00008bf9      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x00008bfd      420fb6043a     movzx eax, byte [rdx + r15]
0x00008c02      84c0           test al, al
0x00008c04      75ea           jne 0x8bf0
0x00008c06      e911feffff     jmp 0x8a1c
0x00008c0b      89d0           mov eax, edx
0x00008c0d      e955f5ffff     jmp 0x8167
0x00008c12      0fb61c08       movzx ebx, byte [rax + rcx]
0x00008c16      80fb3e         cmp bl, 0x3e
0x00008c19      0f8771f8ffff   ja 0x8490
0x00008c1f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00008c29      480fa3d8       bt rax, rbx
0x00008c2d      0f835df8ffff   jae 0x8490
0x00008c33      807c240f00     cmp byte [rsp + 0xf], 0
0x00008c38      0f85e4010000   jne 0x8e22                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x00008c3e      4d39fd         cmp r13, r15
0x00008c41      7605           jbe 0x8c48
0x00008c43      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00008c48      498d4701       lea rax, [r15 + 1]
0x00008c4c      4939c5         cmp r13, rax
0x00008c4f      7606           jbe 0x8c57
0x00008c51      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00008c57      498d4702       lea rax, [r15 + 2]
0x00008c5b      4939c5         cmp r13, rax
0x00008c5e      7606           jbe 0x8c66
0x00008c60      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00008c66      498d4703       lea rax, [r15 + 3]
0x00008c6a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x00008c6d      7606           jbe 0x8c75
0x00008c6f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00008c75      4983c704       add r15, 4
0x00008c79      31d2           xor edx, edx
0x00008c7b      4531e4         xor r12d, r12d
0x00008c7e      31c0           xor eax, eax
0x00008c80      4889cd         mov rbp, rcx
0x00008c83      e9c0f1ffff     jmp 0x7e48
0x00008c88      85db           test ebx, ebx
0x00008c8a      0f8488010000   je 0x8e18
0x00008c90      488d059e2600.  lea rax, [0x0000b335]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00008c97      c644240e01     mov byte [rsp + 0xe], 1
0x00008c9c      c644247c00     mov byte [rsp + 0x7c], 0
0x00008ca1      4531e4         xor r12d, r12d
0x00008ca4      48c744245000.  mov qword [rsp + 0x50], 0
0x00008cad      c644240f01     mov byte [rsp + 0xf], 1
0x00008cb2      c644240d00     mov byte [rsp + 0xd], 0
0x00008cb7      48c744241801.  mov qword [rsp + 0x18], 1
0x00008cc0      4531ff         xor r15d, r15d
0x00008cc3      4889442448     mov qword [rsp + 0x48], rax
0x00008cc8      e926f0ffff     jmp 0x7cf3
0x00008ccd      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00008cd0      4c89dd         mov rbp, r11
0x00008cd3      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00008cd8      e9ccfaffff     jmp 0x87a9
0x00008cdd      488d054f2600.  lea rax, str.l______l                   ; 0xb333 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00008ce4      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00008ce9      c644247c00     mov byte [rsp + 0x7c], 0
0x00008cee      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00008cf1      48c744245000.  mov qword [rsp + 0x50], 0
0x00008cfa      c644240f01     mov byte [rsp + 0xf], 1
0x00008cff      c644240d01     mov byte [rsp + 0xd], 1
0x00008d04      48c744241801.  mov qword [rsp + 0x18], 1
0x00008d0d      4531ff         xor r15d, r15d
0x00008d10      4889442448     mov qword [rsp + 0x48], rax
0x00008d15      e9d9efffff     jmp 0x7cf3
0x00008d1a      89d0           mov eax, edx
0x00008d1c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00008d21      4885db         test rbx, rbx
0x00008d24      742c           je 0x8d52
0x00008d26      84c0           test al, al
0x00008d28      7428           je 0x8d52
0x00008d2a      0fb60b         movzx ecx, byte [rbx]
0x00008d2d      4889d8         mov rax, rbx
0x00008d30      84c9           test cl, cl
0x00008d32      741e           je 0x8d52
0x00008d34      4c89fa         mov rdx, r15
0x00008d37      4c29f8         sub rax, r15
0x00008d3a      4939d5         cmp r13, rdx
0x00008d3d      7604           jbe 0x8d43
0x00008d3f      41880c16       mov byte [r14 + rdx], cl
0x00008d43      4883c201       add rdx, 1
0x00008d47      0fb60c10       movzx ecx, byte [rax + rdx]
0x00008d4b      84c9           test cl, cl
0x00008d4d      75eb           jne 0x8d3a
0x00008d4f      4989d7         mov r15, rdx
0x00008d52      4d39fd         cmp r13, r15
0x00008d55      0f869efaffff   jbe 0x87f9
0x00008d5b      43c6043e00     mov byte [r14 + r15], 0
0x00008d60      e994faffff     jmp 0x87f9
0x00008d65      837c240802     cmp dword [rsp + 8], 2
0x00008d6a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00008d6f      4c89dd         mov rbp, r11
0x00008d72      0f94c0         sete al
0x00008d75      885c240d       mov byte [rsp + 0xd], bl
0x00008d79      e92bfaffff     jmp 0x87a9
0x00008d7e      8b742408       mov esi, dword [rsp + 8]
0x00008d82      4889cf         mov rdi, rcx
0x00008d85      e8a6edffff     call sym.gettext_quote.part.1
0x00008d8a      4889442468     mov qword [rsp + 0x68], rax
0x00008d8f      e952fcffff     jmp 0x89e6
0x00008d94      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00008d98      4889cf         mov rdi, rcx
0x00008d9b      e890edffff     call sym.gettext_quote.part.1
0x00008da0      4889442460     mov qword [rsp + 0x60], rax
0x00008da5      e967fcffff     jmp 0x8a11
0x00008daa      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00008daf      4c89dd         mov rbp, r11
0x00008db2      89d0           mov eax, edx
0x00008db4      885c240d       mov byte [rsp + 0xd], bl
0x00008db8      e9ecf9ffff     jmp 0x87a9
0x00008dbd      4883ec08       sub rsp, 8
0x00008dc1      41b805000000   mov r8d, 5
0x00008dc7      4c89d9         mov rcx, r11
0x00008dca      ff742468       push qword [rsp + 0x68]
0x00008dce      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00008dd2      4c89f7         mov rdi, r14
0x00008dd5      ff742438       push qword [rsp + 0x38]
0x00008dd9      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00008de1      488b542430     mov rdx, qword [rsp + 0x30]
0x00008de6      488b742470     mov rsi, qword [rsp + 0x70]
0x00008deb      e830eeffff     call sym.quotearg_buffer_restyled
0x00008df0      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00008df4      4989c7         mov r15, rax
0x00008df7      e9fdf9ffff     jmp 0x87f9
0x00008dfc      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00008e01      e916ffffff     jmp 0x8d1c
0x00008e06      c74424080200.  mov dword [rsp + 8], 2
0x00008e0e      e996f9ffff     jmp 0x87a9
0x00008e13      e87888ffff     call sym.imp.__stack_chk_fail
0x00008e18      c644240d00     mov byte [rsp + 0xd], 0
0x00008e1d      e96ffaffff     jmp 0x8891
0x00008e22      4c89dd         mov rbp, r11
0x00008e25      e996f9ffff     jmp 0x87c0
0x00008e2a      c644240e01     mov byte [rsp + 0xe], 1
0x00008e2f      31c0           xor eax, eax
0x00008e31      4531e4         xor r12d, r12d
0x00008e34      48c744245000.  mov qword [rsp + 0x50], 0
0x00008e3d      e9a2f5ffff     jmp 0x83e4
0x00008e42      4c89ea         mov rdx, r13
0x00008e45      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00008e4a      e9f3f5ffff     jmp 0x8442
0x00008e4f      e86c87ffff     call sym.imp.abort
0x00008e54      6690           nop
0x00008e56      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00008e60      4157           push r15
0x00008e62      4156           push r14
0x00008e64      4c63ff         movsxd r15, edi
0x00008e67      4155           push r13
0x00008e69      4154           push r12
0x00008e6b      4989d6         mov r14, rdx
0x00008e6e      55             push rbp
0x00008e6f      53             push rbx
0x00008e70      4889cd         mov rbp, rcx
0x00008e73      4883ec28       sub rsp, 0x28
0x00008e77      4889742408     mov qword [rsp + 8], rsi
0x00008e7c      e84f87ffff     call sym.imp.__errno_location
0x00008e81      4989c5         mov r13, rax
0x00008e84      8b00           mov eax, dword [rax]
0x00008e86      4585ff         test r15d, r15d
0x00008e89      488b1df05120.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x20e080:8]=0x20e090 obj.slotvec0
0x00008e90      89442418       mov dword [rsp + 0x18], eax
0x00008e94      0f8867010000   js 0x9001
0x00008e9a      44393dd75120.  cmp dword [obj.nslots], r15d            ; [0x20e078:4]=1
0x00008ea1      7f62           jg 0x8f05
0x00008ea3      4181ffffffff.  cmp r15d, 0x7fffffff
0x00008eaa      0f8456010000   je 0x9006
0x00008eb0      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00008eb4      488d05d55120.  lea rax, obj.slotvec0                   ; 0x20e090
0x00008ebb      4963f4         movsxd rsi, r12d
0x00008ebe      48c1e604       shl rsi, 4
0x00008ec2      4839c3         cmp rbx, rax
0x00008ec5      0f8415010000   je 0x8fe0
0x00008ecb      4889df         mov rdi, rbx
0x00008ece      e87d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00008ed3      4889c3         mov rbx, rax
0x00008ed6      488905a35120.  mov qword [obj.slotvec], rax            ; [0x20e080:8]=0x20e090 obj.slotvec0
0x00008edd      48633d945120.  movsxd rdi, dword [obj.nslots]          ; [0x20e078:4]=1
0x00008ee4      4489e2         mov edx, r12d
0x00008ee7      31f6           xor esi, esi
0x00008ee9      29fa           sub edx, edi
0x00008eeb      48c1e704       shl rdi, 4
0x00008eef      4863d2         movsxd rdx, edx
0x00008ef2      4801df         add rdi, rbx
0x00008ef5      48c1e204       shl rdx, 4
0x00008ef9      e80288ffff     call sym.imp.memset
0x00008efe      448925735120.  mov dword [obj.nslots], r12d            ; [0x20e078:4]=1
0x00008f05      8b4504         mov eax, dword [rbp + 4]
0x00008f08      49c1e704       shl r15, 4
0x00008f0c      4883ec08       sub rsp, 8
0x00008f10      4c01fb         add rbx, r15
0x00008f13      4c8d7d08       lea r15, [rbp + 8]
0x00008f17      448b4500       mov r8d, dword [rbp]
0x00008f1b      4c8b1b         mov r11, qword [rbx]
0x00008f1e      4c8b6308       mov r12, qword [rbx + 8]
0x00008f22      4c89f1         mov rcx, r14
0x00008f25      83c801         or eax, 1
0x00008f28      89442424       mov dword [rsp + 0x24], eax
0x00008f2c      ff7530         push qword [rbp + 0x30]
0x00008f2f      4189c1         mov r9d, eax
0x00008f32      ff7528         push qword [rbp + 0x28]
0x00008f35      4157           push r15
0x00008f37      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00008f3a      488b542428     mov rdx, qword [rsp + 0x28]
0x00008f3f      4c89e7         mov rdi, r12
0x00008f42      4c895c2430     mov qword [rsp + 0x30], r11
0x00008f47      e8d4ecffff     call sym.quotearg_buffer_restyled
0x00008f4c      4883c420       add rsp, 0x20
0x00008f50      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00008f55      4939c3         cmp r11, rax
0x00008f58      7767           ja 0x8fc1
0x00008f5a      488d7001       lea rsi, [rax + 1]
0x00008f5e      488d05db5120.  lea rax, obj.slot0                      ; 0x20e140
0x00008f65      4939c4         cmp r12, rax
0x00008f68      488933         mov qword [rbx], rsi
0x00008f6b      7412           je 0x8f7f
0x00008f6d      4c89e7         mov rdi, r12
0x00008f70      4889742410     mov qword [rsp + 0x10], rsi
0x00008f75      e83686ffff     call sym.imp.free
0x00008f7a      488b742410     mov rsi, qword [rsp + 0x10]
0x00008f7f      4889f7         mov rdi, rsi
0x00008f82      4889742410     mov qword [rsp + 0x10], rsi
0x00008f87      e8640e0000     call sym.xmalloc
0x00008f8c      4883ec08       sub rsp, 8
0x00008f90      48894308       mov qword [rbx + 8], rax
0x00008f94      448b4500       mov r8d, dword [rbp]
0x00008f98      ff7530         push qword [rbp + 0x30]
0x00008f9b      ff7528         push qword [rbp + 0x28]
0x00008f9e      4c89f1         mov rcx, r14
0x00008fa1      4157           push r15
0x00008fa3      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00008fa8      4889c7         mov rdi, rax
0x00008fab      488b542428     mov rdx, qword [rsp + 0x28]
0x00008fb0      488b742430     mov rsi, qword [rsp + 0x30]
0x00008fb5      4989c4         mov r12, rax
0x00008fb8      e863ecffff     call sym.quotearg_buffer_restyled
0x00008fbd      4883c420       add rsp, 0x20
0x00008fc1      8b442418       mov eax, dword [rsp + 0x18]
0x00008fc5      41894500       mov dword [r13], eax
0x00008fc9      4883c428       add rsp, 0x28
0x00008fcd      4c89e0         mov rax, r12
0x00008fd0      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00008fd1      5d             pop rbp
0x00008fd2      415c           pop r12
0x00008fd4      415d           pop r13
0x00008fd6      415e           pop r14
0x00008fd8      415f           pop r15
0x00008fda      c3             ret
0x00008fdb      0f1f440000     nop dword [rax + rax]
0x00008fe0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00008fe2      e8690e0000     call sym.xrealloc
0x00008fe7      660f6f05a150.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x00008fef      4889c3         mov rbx, rax
0x00008ff2      488905875020.  mov qword [obj.slotvec], rax            ; [0x20e080:8]=0x20e090 obj.slotvec0
0x00008ff9      0f1100         movups xmmword [rax], xmm0
0x00008ffc      e9dcfeffff     jmp 0x8edd
0x00009001      e8ba85ffff     call sym.imp.abort
0x00009006      e835100000     call sym.xalloc_die
0x0000900b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00009010      4154           push r12
0x00009012      55             push rbp
0x00009013      53             push rbx
0x00009014      4889fb         mov rbx, rdi
0x00009017      e8b485ffff     call sym.imp.__errno_location
0x0000901c      448b20         mov r12d, dword [rax]
0x0000901f      4889c5         mov rbp, rax
0x00009022      488d05175220.  lea rax, obj.default_quoting_options    ; 0x20e240
0x00009029      4885db         test rbx, rbx
0x0000902c      be38000000     mov esi, 0x38                           ; '8'
0x00009031      480f44d8       cmove rbx, rax
0x00009035      4889df         mov rdi, rbx
0x00009038      e8b30f0000     call sym.xmemdup
0x0000903d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00009041      5b             pop rbx
0x00009042      5d             pop rbp
0x00009043      415c           pop r12
0x00009045      c3             ret
0x00009046      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00009050      488d05e95120.  lea rax, obj.default_quoting_options    ; 0x20e240
0x00009057      4885ff         test rdi, rdi
0x0000905a      480f44f8       cmove rdi, rax
0x0000905e      8b07           mov eax, dword [rdi]
0x00009060      c3             ret
0x00009061      0f1f440000     nop dword [rax + rax]
0x00009066      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00009070      488d05c95120.  lea rax, obj.default_quoting_options    ; 0x20e240
0x00009077      4885ff         test rdi, rdi
0x0000907a      480f44f8       cmove rdi, rax
0x0000907e      8937           mov dword [rdi], esi
0x00009080      c3             ret
0x00009081      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00009086      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00009090      488d05a95120.  lea rax, obj.default_quoting_options    ; 0x20e240
0x00009097      4885ff         test rdi, rdi
0x0000909a      89f1           mov ecx, esi
0x0000909c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x000090a0      89f0           mov eax, esi
0x000090a2      83e11f         and ecx, 0x1f
0x000090a5      c0e805         shr al, 5
0x000090a8      0fb6c0         movzx eax, al
0x000090ab      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x000090b0      8b37           mov esi, dword [rdi]
0x000090b2      89f0           mov eax, esi
0x000090b4      d3e8           shr eax, cl
0x000090b6      31c2           xor edx, eax
0x000090b8      83e001         and eax, 1
0x000090bb      83e201         and edx, 1
0x000090be      d3e2           shl edx, cl
0x000090c0      31f2           xor edx, esi
0x000090c2      8917           mov dword [rdi], edx
0x000090c4      c3             ret
0x000090c5      90             nop
0x000090c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x000090d0      488d05695120.  lea rax, obj.default_quoting_options    ; 0x20e240
0x000090d7      4885ff         test rdi, rdi
0x000090da      480f44f8       cmove rdi, rax
0x000090de      8b4704         mov eax, dword [rdi + 4]
0x000090e1      897704         mov dword [rdi + 4], esi
0x000090e4      c3             ret
0x000090e5      90             nop
0x000090e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x000090f0      488d05495120.  lea rax, obj.default_quoting_options    ; 0x20e240
0x000090f7      4885ff         test rdi, rdi
0x000090fa      480f44f8       cmove rdi, rax
0x000090fe      4885f6         test rsi, rsi
0x00009101      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00009107      740e           je 0x9117
0x00009109      4885d2         test rdx, rdx
0x0000910c      7409           je 0x9117
0x0000910e      48897728       mov qword [rdi + 0x28], rsi
0x00009112      48895730       mov qword [rdi + 0x30], rdx
0x00009116      c3             ret
0x00009117      4883ec08       sub rsp, 8
0x0000911b      e8a084ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00009120      4157           push r15
0x00009122      4156           push r14
0x00009124      488d05155120.  lea rax, obj.default_quoting_options    ; 0x20e240
0x0000912b      4155           push r13
0x0000912d      4154           push r12
0x0000912f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00009132      55             push rbp
0x00009133      53             push rbx
0x00009134      4c89c3         mov rbx, r8
0x00009137      4989f6         mov r14, rsi
0x0000913a      4989d7         mov r15, rdx
0x0000913d      4883ec18       sub rsp, 0x18
0x00009141      4d85c0         test r8, r8
0x00009144      480f44d8       cmove rbx, rax
0x00009148      48894c2408     mov qword [rsp + 8], rcx
0x0000914d      e87e84ffff     call sym.imp.__errno_location
0x00009152      448b20         mov r12d, dword [rax]
0x00009155      4889c5         mov rbp, rax
0x00009158      488d4308       lea rax, [rbx + 8]
0x0000915c      4883ec08       sub rsp, 8
0x00009160      448b4b04       mov r9d, dword [rbx + 4]
0x00009164      ff7330         push qword [rbx + 0x30]
0x00009167      448b03         mov r8d, dword [rbx]
0x0000916a      ff7328         push qword [rbx + 0x28]
0x0000916d      4c89fa         mov rdx, r15
0x00009170      50             push rax
0x00009171      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00009176      4c89f6         mov rsi, r14
0x00009179      4c89ef         mov rdi, r13
0x0000917c      e89feaffff     call sym.quotearg_buffer_restyled
0x00009181      44896500       mov dword [rbp], r12d
0x00009185      4883c438       add rsp, 0x38
0x00009189      5b             pop rbx
0x0000918a      5d             pop rbp
0x0000918b      415c           pop r12
0x0000918d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000918f      415e           pop r14
0x00009191      415f           pop r15
0x00009193      c3             ret
0x00009194      6690           nop
0x00009196      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x000091a0      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x000091a2      4156           push r14
0x000091a4      488d05955020.  lea rax, obj.default_quoting_options    ; 0x20e240
0x000091ab      4155           push r13
0x000091ad      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x000091af      4989d4         mov r12, rdx
0x000091b2      55             push rbp
0x000091b3      53             push rbx
0x000091b4      4889cb         mov rbx, rcx
0x000091b7      4989fe         mov r14, rdi
0x000091ba      4989f7         mov r15, rsi
0x000091bd      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x000091c1      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x000091c4      480f44d8       cmove rbx, rax
0x000091c8      31ed           xor ebp, ebp
0x000091ca      e80184ffff     call sym.imp.__errno_location
0x000091cf      4d85e4         test r12, r12
0x000091d2      4989c5         mov r13, rax
0x000091d5      8b00           mov eax, dword [rax]
0x000091d7      400f94c5       sete bpl
0x000091db      0b6b04         or ebp, dword [rbx + 4]
0x000091de      4c8d5308       lea r10, [rbx + 8]
0x000091e2      4883ec08       sub rsp, 8
0x000091e6      448b03         mov r8d, dword [rbx]
0x000091e9      4c89f9         mov rcx, r15
0x000091ec      89442414       mov dword [rsp + 0x14], eax
0x000091f0      ff7330         push qword [rbx + 0x30]
0x000091f3      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x000091f6      ff7328         push qword [rbx + 0x28]
0x000091f9      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x000091fb      31f6           xor esi, esi
0x000091fd      4189e9         mov r9d, ebp
0x00009200      31ff           xor edi, edi
0x00009202      4c89542440     mov qword [rsp + 0x40], r10
0x00009207      e814eaffff     call sym.quotearg_buffer_restyled
0x0000920c      488d7001       lea rsi, [rax + 1]
0x00009210      4889442448     mov qword [rsp + 0x48], rax
0x00009215      4883c420       add rsp, 0x20
0x00009219      4889f7         mov rdi, rsi
0x0000921c      4889742418     mov qword [rsp + 0x18], rsi
0x00009221      e8ca0b0000     call sym.xmalloc
0x00009226      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x0000922b      4883ec08       sub rsp, 8
0x0000922f      ff7330         push qword [rbx + 0x30]
0x00009232      ff7328         push qword [rbx + 0x28]
0x00009235      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000923a      4189e9         mov r9d, ebp
0x0000923d      448b03         mov r8d, dword [rbx]
0x00009240      4c89f9         mov rcx, r15
0x00009243      4c89f2         mov rdx, r14
0x00009246      4889c7         mov rdi, rax
0x00009249      4152           push r10
0x0000924b      488b742438     mov rsi, qword [rsp + 0x38]
0x00009250      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00009255      8b44242c       mov eax, dword [rsp + 0x2c]
0x00009259      4883c420       add rsp, 0x20
0x0000925d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00009260      41894500       mov dword [r13], eax
0x00009264      7409           je 0x926f
0x00009266      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000926b      4d891c24       mov qword [r12], r11
0x0000926f      488b442410     mov rax, qword [rsp + 0x10]
0x00009274      4883c438       add rsp, 0x38
0x00009278      5b             pop rbx
0x00009279      5d             pop rbp
0x0000927a      415c           pop r12
0x0000927c      415d           pop r13
0x0000927e      415e           pop r14
0x00009280      415f           pop r15
0x00009282      c3             ret
0x00009283      0f1f00         nop dword [rax]
0x00009286      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00009290      4889d1         mov rcx, rdx
0x00009293      31d2           xor edx, edx
0x00009295      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000929a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x000092a0      8b05d24d2000   mov eax, dword [obj.nslots]             ; [0x20e078:4]=1
0x000092a6      4154           push r12
0x000092a8      4c8b25d14d20.  mov r12, qword [obj.slotvec]            ; [0x20e080:8]=0x20e090 obj.slotvec0
0x000092af      55             push rbp
0x000092b0      53             push rbx
0x000092b1      83f801         cmp eax, 1
0x000092b4      7e2b           jle 0x92e1                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x000092b6      83e802         sub eax, 2
0x000092b9      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x000092be      48c1e004       shl rax, 4
0x000092c2      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x000092c7      660f1f840000.  nop word [rax + rax]
0x000092d0      488b3b         mov rdi, qword [rbx]
0x000092d3      4883c310       add rbx, 0x10
0x000092d7      e8d482ffff     call sym.imp.free
0x000092dc      4839eb         cmp rbx, rbp
0x000092df      75ef           jne 0x92d0
0x000092e1      498b7c2408     mov rdi, qword [r12 + 8]
0x000092e6      488d1d534e20.  lea rbx, obj.slot0                      ; 0x20e140
0x000092ed      4839df         cmp rdi, rbx
0x000092f0      7417           je 0x9309
0x000092f2      e8b982ffff     call sym.imp.free
0x000092f7      48c7058e4d20.  mov qword [obj.slotvec0], 0x100         ; [0x20e090:8]=256
0x00009302      48891d8f4d20.  mov qword [0x0020e098], rbx             ; [0x20e098:8]=0x20e140 obj.slot0
0x00009309      488d1d804d20.  lea rbx, obj.slotvec0                   ; 0x20e090
0x00009310      4939dc         cmp r12, rbx
0x00009313      740f           je 0x9324
0x00009315      4c89e7         mov rdi, r12
0x00009318      e89382ffff     call sym.imp.free
0x0000931d      48891d5c4d20.  mov qword [obj.slotvec], rbx            ; [0x20e080:8]=0x20e090 obj.slotvec0
0x00009324      5b             pop rbx
0x00009325      c705494d2000.  mov dword [obj.nslots], 1               ; [0x20e078:4]=1
0x0000932f      5d             pop rbp
0x00009330      415c           pop r12
0x00009332      c3             ret
0x00009333      0f1f00         nop dword [rax]
0x00009336      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00009340      488d0df94e20.  lea rcx, obj.default_quoting_options    ; 0x20e240
0x00009347      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000934e      e90dfbffff     jmp sym.quotearg_n_options
0x00009353      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00009356      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00009360      488d0dd94e20.  lea rcx, obj.default_quoting_options    ; 0x20e240
0x00009367      e9f4faffff     jmp sym.quotearg_n_options
0x0000936c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00009370      488d0dc94e20.  lea rcx, obj.default_quoting_options    ; 0x20e240
0x00009377      4889fe         mov rsi, rdi
0x0000937a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00009381      31ff           xor edi, edi
0x00009383      e9d8faffff     jmp sym.quotearg_n_options
0x00009388      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00009390      488d0da94e20.  lea rcx, obj.default_quoting_options    ; 0x20e240
0x00009397      4889f2         mov rdx, rsi
0x0000939a      4889fe         mov rsi, rdi
0x0000939d      31ff           xor edi, edi
0x0000939f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x000093a4      6690           nop
0x000093a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x000093b0      4883ec48       sub rsp, 0x48
0x000093b4      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x000093b7      64488b142528.  mov rdx, qword fs:[0x28]
0x000093c0      4889542438     mov qword [rsp + 0x38], rdx
0x000093c5      31d2           xor edx, edx
0x000093c7      83fe0a         cmp esi, 0xa
0x000093ca      7468           je 0x9434
0x000093cc      893424         mov dword [rsp], esi
0x000093cf      4889e1         mov rcx, rsp
0x000093d2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000093d9      4889c6         mov rsi, rax
0x000093dc      48c744240400.  mov qword [rsp + 4], 0
0x000093e5      48c744240c00.  mov qword [rsp + 0xc], 0
0x000093ee      48c744241400.  mov qword [rsp + 0x14], 0
0x000093f7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00009400      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00009409      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00009412      c74424340000.  mov dword [rsp + 0x34], 0
0x0000941a      e841faffff     call sym.quotearg_n_options
0x0000941f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00009424      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000942d      750a           jne 0x9439                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0000942f      4883c448       add rsp, 0x48
0x00009433      c3             ret
0x00009434      e88781ffff     call sym.imp.abort
0x00009439      e85282ffff     call sym.imp.__stack_chk_fail
0x0000943e      6690           nop
;-- quotearg_n_style_mem:
0x00009440      4883ec48       sub rsp, 0x48
0x00009444      4889d0         mov rax, rdx
0x00009447      4889ca         mov rdx, rcx
0x0000944a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00009453      48894c2438     mov qword [rsp + 0x38], rcx
0x00009458      31c9           xor ecx, ecx
0x0000945a      83fe0a         cmp esi, 0xa
0x0000945d      7461           je 0x94c0
0x0000945f      893424         mov dword [rsp], esi
0x00009462      4889e1         mov rcx, rsp
0x00009465      4889c6         mov rsi, rax
0x00009468      48c744240400.  mov qword [rsp + 4], 0
0x00009471      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000947a      48c744241400.  mov qword [rsp + 0x14], 0
0x00009483      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000948c      48c744242400.  mov qword [rsp + 0x24], 0
0x00009495      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000949e      c74424340000.  mov dword [rsp + 0x34], 0
0x000094a6      e8b5f9ffff     call sym.quotearg_n_options
0x000094ab      488b542438     mov rdx, qword [rsp + 0x38]
0x000094b0      644833142528.  xor rdx, qword fs:[0x28]
0x000094b9      750a           jne 0x94c5
0x000094bb      4883c448       add rsp, 0x48
0x000094bf      c3             ret
0x000094c0      e8fb80ffff     call sym.imp.abort
0x000094c5      e8c681ffff     call sym.imp.__stack_chk_fail
0x000094ca      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x000094d0      4889f2         mov rdx, rsi
0x000094d3      89fe           mov esi, edi
0x000094d5      31ff           xor edi, edi
0x000094d7      e9d4feffff     jmp sym.quotearg_n_style
0x000094dc      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x000094e0      4889d1         mov rcx, rdx
0x000094e3      4889f2         mov rdx, rsi
0x000094e6      89fe           mov esi, edi
0x000094e8      31ff           xor edi, edi
0x000094ea      e951ffffff     jmp sym.quotearg_n_style_mem
0x000094ef      90             nop
;-- quotearg_char_mem:
0x000094f0      4883ec48       sub rsp, 0x48
0x000094f4      89d1           mov ecx, edx
0x000094f6      64488b042528.  mov rax, qword fs:[0x28]
0x000094ff      4889442438     mov qword [rsp + 0x38], rax
0x00009504      31c0           xor eax, eax
0x00009506      488b05634d20.  mov rax, qword [0x0020e270]             ; [0x20e270:8]=0
0x0000950d      4989e0         mov r8, rsp
0x00009510      83e11f         and ecx, 0x1f
0x00009513      660f6f05254d.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000951b      4889442430     mov qword [rsp + 0x30], rax
0x00009520      89d0           mov eax, edx
0x00009522      0f290424       movaps xmmword [rsp], xmm0
0x00009526      c0e805         shr al, 5
0x00009529      0fb6c0         movzx eax, al
0x0000952c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00009531      660f6f05174d.  movdqa xmm0, xmmword [0x0020e250]
0x00009539      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000953e      660f6f051a4d.  movdqa xmm0, xmmword [0x0020e260]
0x00009546      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000954b      418b11         mov edx, dword [r9]
0x0000954e      89d0           mov eax, edx
0x00009550      d3e8           shr eax, cl
0x00009552      f7d0           not eax
0x00009554      83e001         and eax, 1
0x00009557      d3e0           shl eax, cl
0x00009559      4c89c1         mov rcx, r8
0x0000955c      31d0           xor eax, edx
0x0000955e      4889f2         mov rdx, rsi
0x00009561      4889fe         mov rsi, rdi
0x00009564      418901         mov dword [r9], eax
0x00009567      31ff           xor edi, edi
0x00009569      e8f2f8ffff     call sym.quotearg_n_options
0x0000956e      488b742438     mov rsi, qword [rsp + 0x38]
0x00009573      644833342528.  xor rsi, qword fs:[0x28]
0x0000957c      7505           jne 0x9583
0x0000957e      4883c448       add rsp, 0x48
0x00009582      c3             ret
0x00009583      e80881ffff     call sym.imp.__stack_chk_fail
0x00009588      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00009590      400fbed6       movsx edx, sil
0x00009594      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000959b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x000095a0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000095a5      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x000095ac      e93fffffff     jmp sym.quotearg_char_mem
0x000095b1      0f1f440000     nop dword [rax + rax]
0x000095b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x000095c0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000095c5      e926ffffff     jmp sym.quotearg_char_mem
0x000095ca      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x000095d0      4883ec48       sub rsp, 0x48
0x000095d4      4889d0         mov rax, rdx
0x000095d7      64488b142528.  mov rdx, qword fs:[0x28]
0x000095e0      4889542438     mov qword [rsp + 0x38], rdx
0x000095e5      31d2           xor edx, edx
0x000095e7      83fe0a         cmp esi, 0xa
0x000095ea      7468           je 0x9654
0x000095ec      893424         mov dword [rsp], esi
0x000095ef      4889e1         mov rcx, rsp
0x000095f2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000095f9      4889c6         mov rsi, rax
0x000095fc      48c744240400.  mov qword [rsp + 4], 0
0x00009605      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x0000960e      48c744241400.  mov qword [rsp + 0x14], 0
0x00009617      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00009620      48c744242400.  mov qword [rsp + 0x24], 0
0x00009629      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00009632      c74424340000.  mov dword [rsp + 0x34], 0
0x0000963a      e821f8ffff     call sym.quotearg_n_options
0x0000963f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00009644      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000964d      750a           jne 0x9659
0x0000964f      4883c448       add rsp, 0x48
0x00009653      c3             ret
0x00009654      e8677fffff     call sym.imp.abort
0x00009659      e83280ffff     call sym.imp.__stack_chk_fail
0x0000965e      6690           nop
;-- quotearg_n_custom_mem:
0x00009660      4883ec48       sub rsp, 0x48
0x00009664      4989c9         mov r9, rcx
0x00009667      488b0d024c20.  mov rcx, qword [0x0020e270]             ; [0x20e270:8]=0
0x0000966e      660f6f05ca4b.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00009676      64488b042528.  mov rax, qword fs:[0x28]
0x0000967f      4889442438     mov qword [rsp + 0x38], rax
0x00009684      31c0           xor eax, eax
0x00009686      0f290424       movaps xmmword [rsp], xmm0
0x0000968a      4885f6         test rsi, rsi
0x0000968d      48894c2430     mov qword [rsp + 0x30], rcx
0x00009692      c704240a0000.  mov dword [rsp], 0xa
0x00009699      660f6f05af4b.  movdqa xmm0, xmmword [0x0020e250]
0x000096a1      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x000096a6      660f6f05b24b.  movdqa xmm0, xmmword [0x0020e260]
0x000096ae      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x000096b3      7432           je 0x96e7
0x000096b5      4885d2         test rdx, rdx
0x000096b8      742d           je 0x96e7
0x000096ba      4889742428     mov qword [rsp + 0x28], rsi
0x000096bf      4889542430     mov qword [rsp + 0x30], rdx
0x000096c4      4889e1         mov rcx, rsp
0x000096c7      4c89c2         mov rdx, r8
0x000096ca      4c89ce         mov rsi, r9
0x000096cd      e88ef7ffff     call sym.quotearg_n_options
0x000096d2      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000096d7      6448333c2528.  xor rdi, qword fs:[0x28]
0x000096e0      750a           jne 0x96ec
0x000096e2      4883c448       add rsp, 0x48
0x000096e6      c3             ret
0x000096e7      e8d47effff     call sym.imp.abort
0x000096ec      e89f7fffff     call sym.imp.__stack_chk_fail
0x000096f1      0f1f440000     nop dword [rax + rax]
0x000096f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00009700      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00009707      e954ffffff     jmp sym.quotearg_n_custom_mem
0x0000970c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00009710      4889d1         mov rcx, rdx
0x00009713      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000971a      4889f2         mov rdx, rsi
0x0000971d      4889fe         mov rsi, rdi
0x00009720      31ff           xor edi, edi
0x00009722      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00009727      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00009730      4989c8         mov r8, rcx
0x00009733      4889d1         mov rcx, rdx
0x00009736      4889f2         mov rdx, rsi
0x00009739      4889fe         mov rsi, rdi
0x0000973c      31ff           xor edi, edi
0x0000973e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00009743      0f1f00         nop dword [rax]
0x00009746      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00009750      488d0de94820.  lea rcx, obj.quote_quoting_options      ; 0x20e040
0x00009757      e904f7ffff     jmp sym.quotearg_n_options
0x0000975c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00009760      488d0dd94820.  lea rcx, obj.quote_quoting_options      ; 0x20e040
0x00009767      4889f2         mov rdx, rsi
0x0000976a      4889fe         mov rsi, rdi
0x0000976d      31ff           xor edi, edi
0x0000976f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00009774      6690           nop
0x00009776      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00009780      488d0db94820.  lea rcx, obj.quote_quoting_options      ; 0x20e040
0x00009787      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000978e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00009793      0f1f00         nop dword [rax]
0x00009796      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x000097a0      488d0d994820.  lea rcx, obj.quote_quoting_options      ; 0x20e040
0x000097a7      4889fe         mov rsi, rdi
0x000097aa      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000097b1      31ff           xor edi, edi
0x000097b3      e9a8f6ffff     jmp sym.quotearg_n_options
0x000097b8      0f1f84000000.  nop dword [rax + rax]
;-- dup_safer:
0x000097c0      ba03000000     mov edx, 3                              ; ../coreutils-8.31/lib/dup-safer.c:32
0x000097c5      31f6           xor esi, esi
0x000097c7      31c0           xor eax, eax
0x000097c9      e932090000     jmp sym.rpl_fcntl
0x000097ce      6690           nop                                     ; ../coreutils-8.31/lib/dup-safer.c:33
;-- version_etc_arn:
0x000097d0      4157           push r15
0x000097d2      4156           push r14
0x000097d4      4155           push r13
0x000097d6      4154           push r12
0x000097d8      4d89cc         mov r12, r9
0x000097db      55             push rbp
0x000097dc      53             push rbx
0x000097dd      4889fd         mov rbp, rdi
0x000097e0      4c89c3         mov rbx, r8
0x000097e3      4883ec28       sub rsp, 0x28
0x000097e7      4885f6         test rsi, rsi
0x000097ea      0f8418010000   je 0x9908
0x000097f0      4989d0         mov r8, rdx
0x000097f3      488d150e2000.  lea rdx, [0x0000b808]                   ; "%s (%s) %s\n"
0x000097fa      4989c9         mov r9, rcx
0x000097fd      31c0           xor eax, eax
0x000097ff      4889f1         mov rcx, rsi
0x00009802      be01000000     mov esi, 1
0x00009807      e89480ffff     call sym.imp.__fprintf_chk
0x0000980c      488d35082000.  lea rsi, [0x0000b81b]                   ; "(C)"
0x00009813      31ff           xor edi, edi
0x00009815      ba05000000     mov edx, 5
0x0000981a      e8417effff     call sym.imp.dcgettext
0x0000981f      488d151a2300.  lea rdx, obj.version_etc_copyright      ; 0xbb40 ; "Copyright %s %d Free Software Foundation, Inc."
0x00009826      4889c1         mov rcx, rax
0x00009829      41b8e3070000   mov r8d, 0x7e3
0x0000982f      be01000000     mov esi, 1
0x00009834      4889ef         mov rdi, rbp
0x00009837      31c0           xor eax, eax
0x00009839      e86280ffff     call sym.imp.__fprintf_chk
0x0000983e      488d35632000.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0xb8a8 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00009845      31ff           xor edi, edi
0x00009847      ba05000000     mov edx, 5
0x0000984c      e80f7effff     call sym.imp.dcgettext
0x00009851      4889ee         mov rsi, rbp
0x00009854      4889c7         mov rdi, rax
0x00009857      e8e47effff     call sym.imp.fputs_unlocked
0x0000985c      4983fc09       cmp r12, 9
0x00009860      0f873a030000   ja 0x9ba0
0x00009866      488d159b2200.  lea rdx, [0x0000bb08]
0x0000986d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00009871      4801d0         add rax, rdx
0x00009874      ffe0           jmp rax
0x00009876      662e0f1f8400.  nop word cs:[rax + rax]
0x00009880      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00009884      488b4310       mov rax, qword [rbx + 0x10]
0x00009888      488d35892100.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0xba18 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x0000988f      4c8b4308       mov r8, qword [rbx + 8]
0x00009893      ba05000000     mov edx, 5
0x00009898      31ff           xor edi, edi
0x0000989a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000989e      4c8b6328       mov r12, qword [rbx + 0x28]
0x000098a2      4c894c2410     mov qword [rsp + 0x10], r9
0x000098a7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000098ab      4c8b7318       mov r14, qword [rbx + 0x18]
0x000098af      48890424       mov qword [rsp], rax
0x000098b3      4c89442408     mov qword [rsp + 8], r8
0x000098b8      488b1b         mov rbx, qword [rbx]
0x000098bb      e8a07dffff     call sym.imp.dcgettext
0x000098c0      4883ec08       sub rsp, 8
0x000098c4      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x000098c9      4889c2         mov rdx, rax
0x000098cc      4889d9         mov rcx, rbx
0x000098cf      be01000000     mov esi, 1
0x000098d4      4889ef         mov rdi, rbp
0x000098d7      31c0           xor eax, eax
0x000098d9      4151           push r9
0x000098db      4155           push r13
0x000098dd      4154           push r12
0x000098df      4157           push r15
0x000098e1      4156           push r14
0x000098e3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000098e8      4c8b442438     mov r8, qword [rsp + 0x38]
0x000098ed      e8ae7fffff     call sym.imp.__fprintf_chk
0x000098f2      4883c430       add rsp, 0x30
0x000098f6      4883c428       add rsp, 0x28
0x000098fa      5b             pop rbx
0x000098fb      5d             pop rbp
0x000098fc      415c           pop r12
0x000098fe      415d           pop r13
0x00009900      415e           pop r14
0x00009902      415f           pop r15
0x00009904      c3             ret
0x00009905      0f1f00         nop dword [rax]
0x00009908      4989c8         mov r8, rcx
0x0000990b      4889d1         mov rcx, rdx
0x0000990e      488d15ff1e00.  lea rdx, str.s__s                       ; 0xb814 ; "%s %s\n"
0x00009915      be01000000     mov esi, 1
0x0000991a      31c0           xor eax, eax
0x0000991c      e87f7fffff     call sym.imp.__fprintf_chk
0x00009921      e9e6feffff     jmp 0x980c
0x00009926      662e0f1f8400.  nop word cs:[rax + rax]
0x00009930      4c8b5340       mov r10, qword [rbx + 0x40]
0x00009934      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00009938      488d35092100.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0xba48 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x0000993f      488b4310       mov rax, qword [rbx + 0x10]
0x00009943      4c8b4308       mov r8, qword [rbx + 8]
0x00009947      ba05000000     mov edx, 5
0x0000994c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00009950      4c8b6328       mov r12, qword [rbx + 0x28]
0x00009954      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00009958      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000995c      488b1b         mov rbx, qword [rbx]
0x0000995f      4c89542418     mov qword [rsp + 0x18], r10
0x00009964      4c894c2410     mov qword [rsp + 0x10], r9
0x00009969      48890424       mov qword [rsp], rax
0x0000996d      4c89442408     mov qword [rsp + 8], r8
0x00009972      31ff           xor edi, edi
0x00009974      e8e77cffff     call sym.imp.dcgettext
0x00009979      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000997e      4152           push r10
0x00009980      e93fffffff     jmp 0x98c4
0x00009985      0f1f00         nop dword [rax]
0x00009988      488b1b         mov rbx, qword [rbx]
0x0000998b      488d358d1e00.  lea rsi, str.Written_by__s.             ; 0xb81f ; "Written by %s.\n"
0x00009992      ba05000000     mov edx, 5
0x00009997      31ff           xor edi, edi
0x00009999      e8c27cffff     call sym.imp.dcgettext
0x0000999e      4883c428       add rsp, 0x28
0x000099a2      4889d9         mov rcx, rbx
0x000099a5      4889ef         mov rdi, rbp
0x000099a8      5b             pop rbx
0x000099a9      5d             pop rbp
0x000099aa      415c           pop r12
0x000099ac      415d           pop r13
0x000099ae      415e           pop r14
0x000099b0      415f           pop r15
0x000099b2      4889c2         mov rdx, rax
0x000099b5      be01000000     mov esi, 1
0x000099ba      31c0           xor eax, eax
0x000099bc      e9df7effff     jmp sym.imp.__fprintf_chk
0x000099c1      0f1f80000000.  nop dword [rax]
0x000099c8      4c8b6308       mov r12, qword [rbx + 8]
0x000099cc      488d355c1e00.  lea rsi, str.Written_by__s_and__s.      ; 0xb82f ; "Written by %s and %s.\n"
0x000099d3      488b1b         mov rbx, qword [rbx]
0x000099d6      ba05000000     mov edx, 5
0x000099db      31ff           xor edi, edi
0x000099dd      e87e7cffff     call sym.imp.dcgettext
0x000099e2      4883c428       add rsp, 0x28
0x000099e6      4d89e0         mov r8, r12
0x000099e9      4889d9         mov rcx, rbx
0x000099ec      4889ef         mov rdi, rbp
0x000099ef      4889c2         mov rdx, rax
0x000099f2      be01000000     mov esi, 1
0x000099f7      5b             pop rbx
0x000099f8      5d             pop rbp
0x000099f9      415c           pop r12
0x000099fb      415d           pop r13
0x000099fd      415e           pop r14
0x000099ff      415f           pop r15
0x00009a01      31c0           xor eax, eax
0x00009a03      e9987effff     jmp sym.imp.__fprintf_chk
0x00009a08      0f1f84000000.  nop dword [rax + rax]
0x00009a10      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00009a14      4c8b6308       mov r12, qword [rbx + 8]
0x00009a18      488d35271e00.  lea rsi, str.Written_by__s___s__and__s. ; 0xb846 ; "Written by %s, %s, and %s.\n"
0x00009a1f      488b1b         mov rbx, qword [rbx]
0x00009a22      ba05000000     mov edx, 5
0x00009a27      31ff           xor edi, edi
0x00009a29      e8327cffff     call sym.imp.dcgettext
0x00009a2e      4883c428       add rsp, 0x28
0x00009a32      4d89e9         mov r9, r13
0x00009a35      4d89e0         mov r8, r12
0x00009a38      4889d9         mov rcx, rbx
0x00009a3b      4889ef         mov rdi, rbp
0x00009a3e      4889c2         mov rdx, rax
0x00009a41      5b             pop rbx
0x00009a42      5d             pop rbp
0x00009a43      415c           pop r12
0x00009a45      415d           pop r13
0x00009a47      415e           pop r14
0x00009a49      415f           pop r15
0x00009a4b      be01000000     mov esi, 1
0x00009a50      31c0           xor eax, eax
0x00009a52      e9497effff     jmp sym.imp.__fprintf_chk
0x00009a57      660f1f840000.  nop word [rax + rax]
0x00009a60      488d35111f00.  lea rsi, str.Written_by__s___s___s___and__s. ; 0xb978 ; "Written by %s, %s, %s,\nand %s.\n"
0x00009a67      ba05000000     mov edx, 5
0x00009a6c      31ff           xor edi, edi
0x00009a6e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00009a72      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00009a76      4c8b6308       mov r12, qword [rbx + 8]
0x00009a7a      488b1b         mov rbx, qword [rbx]
0x00009a7d      e8de7bffff     call sym.imp.dcgettext
0x00009a82      4883ec08       sub rsp, 8
0x00009a86      4156           push r14
0x00009a88      4889c2         mov rdx, rax
0x00009a8b      4d89e9         mov r9, r13
0x00009a8e      4d89e0         mov r8, r12
0x00009a91      4889d9         mov rcx, rbx
0x00009a94      4889ef         mov rdi, rbp
0x00009a97      be01000000     mov esi, 1
0x00009a9c      31c0           xor eax, eax
0x00009a9e      e8fd7dffff     call sym.imp.__fprintf_chk
0x00009aa3      58             pop rax
0x00009aa4      5a             pop rdx
0x00009aa5      4883c428       add rsp, 0x28
0x00009aa9      5b             pop rbx
0x00009aaa      5d             pop rbp
0x00009aab      415c           pop r12
0x00009aad      415d           pop r13
0x00009aaf      415e           pop r14
0x00009ab1      415f           pop r15
0x00009ab3      c3             ret
0x00009ab4      0f1f4000       nop dword [rax]
0x00009ab8      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00009abc      488d35d51e00.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0xb998 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00009ac3      ba05000000     mov edx, 5
0x00009ac8      31ff           xor edi, edi
0x00009aca      4c8b7318       mov r14, qword [rbx + 0x18]
0x00009ace      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00009ad2      4c8b6308       mov r12, qword [rbx + 8]
0x00009ad6      488b1b         mov rbx, qword [rbx]
0x00009ad9      e8827bffff     call sym.imp.dcgettext
0x00009ade      4157           push r15
0x00009ae0      eba4           jmp 0x9a86
0x00009ae2      660f1f440000   nop word [rax + rax]
0x00009ae8      4c8b4308       mov r8, qword [rbx + 8]
0x00009aec      4c8b6328       mov r12, qword [rbx + 0x28]
0x00009af0      488d35c91e00.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0xb9c0 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00009af7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00009afb      4c8b7318       mov r14, qword [rbx + 0x18]
0x00009aff      ba05000000     mov edx, 5
0x00009b04      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00009b08      31ff           xor edi, edi
0x00009b0a      488b1b         mov rbx, qword [rbx]
0x00009b0d      4c890424       mov qword [rsp], r8
0x00009b11      e84a7bffff     call sym.imp.dcgettext
0x00009b16      4883ec08       sub rsp, 8
0x00009b1a      4d89e9         mov r9, r13
0x00009b1d      4154           push r12
0x00009b1f      4157           push r15
0x00009b21      4156           push r14
0x00009b23      4c8b442420     mov r8, qword [rsp + 0x20]
0x00009b28      4889d9         mov rcx, rbx
0x00009b2b      4889c2         mov rdx, rax
0x00009b2e      4889ef         mov rdi, rbp
0x00009b31      be01000000     mov esi, 1
0x00009b36      31c0           xor eax, eax
0x00009b38      e8637dffff     call sym.imp.__fprintf_chk
0x00009b3d      4883c420       add rsp, 0x20
0x00009b41      4883c428       add rsp, 0x28
0x00009b45      5b             pop rbx
0x00009b46      5d             pop rbp
0x00009b47      415c           pop r12
0x00009b49      415d           pop r13
0x00009b4b      415e           pop r14
0x00009b4d      415f           pop r15
0x00009b4f      c3             ret
0x00009b50      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00009b54      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00009b58      488d35891e00.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0xb9e8 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x00009b5f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00009b63      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00009b67      ba05000000     mov edx, 5
0x00009b6c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00009b70      4c8b4308       mov r8, qword [rbx + 8]
0x00009b74      31ff           xor edi, edi
0x00009b76      4c894c2408     mov qword [rsp + 8], r9
0x00009b7b      488b1b         mov rbx, qword [rbx]
0x00009b7e      4c890424       mov qword [rsp], r8
0x00009b82      e8d97affff     call sym.imp.dcgettext
0x00009b87      4155           push r13
0x00009b89      4154           push r12
0x00009b8b      4157           push r15
0x00009b8d      4156           push r14
0x00009b8f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00009b94      eb8d           jmp 0x9b23
0x00009b96      662e0f1f8400.  nop word cs:[rax + rax]
0x00009ba0      4c8b5340       mov r10, qword [rbx + 0x40]
0x00009ba4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00009ba8      ba05000000     mov edx, 5
0x00009bad      488b4310       mov rax, qword [rbx + 0x10]
0x00009bb1      4c8b4308       mov r8, qword [rbx + 8]
0x00009bb5      488d35c41e00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0xba80 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x00009bbc      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00009bc0      4c8b6328       mov r12, qword [rbx + 0x28]
0x00009bc4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00009bc8      4c8b7318       mov r14, qword [rbx + 0x18]
0x00009bcc      4c89542418     mov qword [rsp + 0x18], r10
0x00009bd1      4c894c2410     mov qword [rsp + 0x10], r9
0x00009bd6      48890424       mov qword [rsp], rax
0x00009bda      4c89442408     mov qword [rsp + 8], r8
0x00009bdf      488b1b         mov rbx, qword [rbx]
0x00009be2      e98bfdffff     jmp 0x9972
0x00009be7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00009bf0      4531c9         xor r9d, r9d
0x00009bf3      49833800       cmp qword [r8], 0
0x00009bf7      7412           je 0x9c0b
0x00009bf9      0f1f80000000.  nop dword [rax]
0x00009c00      4983c101       add r9, 1
0x00009c04      4b833cc800     cmp qword [r8 + r9*8], 0
0x00009c09      75f5           jne 0x9c00
0x00009c0b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00009c10      4883ec68       sub rsp, 0x68
0x00009c14      4d89c2         mov r10, r8
0x00009c17      4531c9         xor r9d, r9d
0x00009c1a      64488b042528.  mov rax, qword fs:[0x28]
0x00009c23      4889442458     mov qword [rsp + 0x58], rax
0x00009c28      31c0           xor eax, eax
0x00009c2a      4989e0         mov r8, rsp
0x00009c2d      0f1f00         nop dword [rax]
0x00009c30      418b02         mov eax, dword [r10]
0x00009c33      83f82f         cmp eax, 0x2f
0x00009c36      7742           ja 0x9c7a
0x00009c38      4189c3         mov r11d, eax
0x00009c3b      4d035a10       add r11, qword [r10 + 0x10]
0x00009c3f      83c008         add eax, 8
0x00009c42      418902         mov dword [r10], eax
0x00009c45      498b03         mov rax, qword [r11]
0x00009c48      4885c0         test rax, rax
0x00009c4b      4b8904c8       mov qword [r8 + r9*8], rax
0x00009c4f      740a           je 0x9c5b
0x00009c51      4983c101       add r9, 1
0x00009c55      4983f90a       cmp r9, 0xa
0x00009c59      75d5           jne 0x9c30
0x00009c5b      e870fbffff     call sym.version_etc_arn
0x00009c60      488b442458     mov rax, qword [rsp + 0x58]
0x00009c65      644833042528.  xor rax, qword fs:[0x28]
0x00009c6e      7505           jne 0x9c75
0x00009c70      4883c468       add rsp, 0x68
0x00009c74      c3             ret
0x00009c75      e8167affff     call sym.imp.__stack_chk_fail
0x00009c7a      4d8b5a08       mov r11, qword [r10 + 8]
0x00009c7e      498d4308       lea rax, [r11 + 8]
0x00009c82      49894208       mov qword [r10 + 8], rax
0x00009c86      ebbd           jmp 0x9c45
0x00009c88      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00009c90      55             push rbp
0x00009c91      53             push rbx
0x00009c92      41ba20000000   mov r10d, 0x20                          ; "@"
0x00009c98      4531db         xor r11d, r11d
0x00009c9b      4881ecb80000.  sub rsp, 0xb8
0x00009ca2      64488b042528.  mov rax, qword fs:[0x28]
0x00009cab      4889442478     mov qword [rsp + 0x78], rax
0x00009cb0      31c0           xor eax, eax
0x00009cb2      488d8424d000.  lea rax, [rsp + 0xd0]
0x00009cba      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00009cc2      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x00009cca      4c8d442420     lea r8, [rsp + 0x20]
0x00009ccf      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00009cd7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x00009cdf      4889442410     mov qword [rsp + 0x10], rax
0x00009ce4      488d84248000.  lea rax, [rsp + 0x80]
0x00009cec      4531c9         xor r9d, r9d
0x00009cef      4889442418     mov qword [rsp + 0x18], rax
0x00009cf4      4889c5         mov rbp, rax
0x00009cf7      660f1f840000.  nop word [rax + rax]
0x00009d00      4183fa2f       cmp r10d, 0x2f
0x00009d04      7756           ja 0x9d5c
0x00009d06      4489d0         mov eax, r10d
0x00009d09      41bb01000000   mov r11d, 1
0x00009d0f      4183c208       add r10d, 8
0x00009d13      4801e8         add rax, rbp
0x00009d16      488b00         mov rax, qword [rax]
0x00009d19      4885c0         test rax, rax
0x00009d1c      4b8904c8       mov qword [r8 + r9*8], rax
0x00009d20      740a           je 0x9d2c
0x00009d22      4983c101       add r9, 1
0x00009d26      4983f90a       cmp r9, 0xa
0x00009d2a      75d4           jne 0x9d00
0x00009d2c      4584db         test r11b, r11b
0x00009d2f      7524           jne 0x9d55
0x00009d31      e89afaffff     call sym.version_etc_arn
0x00009d36      488b442478     mov rax, qword [rsp + 0x78]
0x00009d3b      644833042528.  xor rax, qword fs:[0x28]
0x00009d44      750a           jne 0x9d50
0x00009d46      4881c4b80000.  add rsp, 0xb8
0x00009d4d      5b             pop rbx
0x00009d4e      5d             pop rbp
0x00009d4f      c3             ret
0x00009d50      e83b79ffff     call sym.imp.__stack_chk_fail
0x00009d55      4489542408     mov dword [rsp + 8], r10d
0x00009d5a      ebd5           jmp 0x9d31
0x00009d5c      4889d8         mov rax, rbx
0x00009d5f      4883c308       add rbx, 8
0x00009d63      ebb1           jmp 0x9d16
0x00009d65      90             nop
0x00009d66      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00009d70      53             push rbx
0x00009d71      488d35ea1a00.  lea rsi, str.Report_bugs_to:__s         ; 0xb862 ; "\nReport bugs to: %s\n"
0x00009d78      ba05000000     mov edx, 5
0x00009d7d      31ff           xor edi, edi
0x00009d7f      e8dc78ffff     call sym.imp.dcgettext
0x00009d84      488d15ec1a00.  lea rdx, str.bug_coreutils_gnu.org      ; 0xb877 ; "bug-coreutils@gnu.org"
0x00009d8b      4889c6         mov rsi, rax
0x00009d8e      bf01000000     mov edi, 1
0x00009d93      31c0           xor eax, eax
0x00009d95      e8767affff     call sym.imp.__printf_chk
0x00009d9a      488d35ec1a00.  lea rsi, str.s_home_page:___s           ; 0xb88d ; "%s home page: <%s>\n"
0x00009da1      ba05000000     mov edx, 5
0x00009da6      31ff           xor edi, edi
0x00009da8      e8b378ffff     call sym.imp.dcgettext
0x00009dad      488d0d041000.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xadb8 ; "https://www.gnu.org/software/coreutils/"
0x00009db4      488d15570900.  lea rdx, str.GNU_coreutils              ; 0xa712 ; "GNU coreutils"
0x00009dbb      4889c6         mov rsi, rax
0x00009dbe      bf01000000     mov edi, 1
0x00009dc3      31c0           xor eax, eax
0x00009dc5      e8467affff     call sym.imp.__printf_chk
0x00009dca      488b1dd74220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x00009dd1      488d35e81c00.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0xbac0 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00009dd8      31ff           xor edi, edi
0x00009dda      ba05000000     mov edx, 5
0x00009ddf      e87c78ffff     call sym.imp.dcgettext
0x00009de4      4889de         mov rsi, rbx
0x00009de7      4889c7         mov rdi, rax
0x00009dea      5b             pop rbx
0x00009deb      e95079ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00009df0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00009df1      4889fb         mov rbx, rdi
0x00009df4      e89779ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00009df9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x00009dfc      7505           jne 0x9e03
0x00009dfe      4885db         test rbx, rbx
0x00009e01      7502           jne 0x9e05
0x00009e03      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00009e04      c3             ret
0x00009e05      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x00009e0a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00009e10      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00009e13      48f7e6         mul rsi
0x00009e16      4889c7         mov rdi, rax
0x00009e19      0f90c0         seto al
0x00009e1c      4885ff         test rdi, rdi
0x00009e1f      780a           js 0x9e2b
0x00009e21      0fb6c0         movzx eax, al
0x00009e24      4885c0         test rax, rax
0x00009e27      7502           jne 0x9e2b
0x00009e29      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x00009e2b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x00009e2f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00009e34      6690           nop
0x00009e36      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00009e40      ebae           jmp sym.xmalloc
0x00009e42      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00009e46      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00009e50      4885f6         test rsi, rsi
0x00009e53      53             push rbx
0x00009e54      4889f3         mov rbx, rsi
0x00009e57      7505           jne 0x9e5e
0x00009e59      4885ff         test rdi, rdi
0x00009e5c      751a           jne 0x9e78
0x00009e5e      4889de         mov rsi, rbx
0x00009e61      e87a79ffff     call sym.imp.realloc
0x00009e66      4885c0         test rax, rax
0x00009e69      7505           jne 0x9e70
0x00009e6b      4885db         test rbx, rbx
0x00009e6e      7511           jne 0x9e81                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00009e70      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00009e71      c3             ret
0x00009e72      660f1f440000   nop word [rax + rax]
0x00009e78      e83377ffff     call sym.imp.free
0x00009e7d      31c0           xor eax, eax
0x00009e7f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00009e80      c3             ret
0x00009e81      e8ba010000     call sym.xalloc_die
0x00009e86      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00009e90      4889f0         mov rax, rsi
0x00009e93      48f7e2         mul rdx
0x00009e96      4889c6         mov rsi, rax
0x00009e99      0f90c0         seto al
0x00009e9c      4885f6         test rsi, rsi
0x00009e9f      780a           js 0x9eab
0x00009ea1      0fb6c0         movzx eax, al
0x00009ea4      4885c0         test rax, rax
0x00009ea7      7502           jne 0x9eab
0x00009ea9      eba5           jmp sym.xrealloc
0x00009eab      4883ec08       sub rsp, 8
0x00009eaf      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00009eb4      6690           nop
0x00009eb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00009ec0      4885ff         test rdi, rdi
0x00009ec3      4989d1         mov r9, rdx
0x00009ec6      488b0e         mov rcx, qword [rsi]
0x00009ec9      7435           je 0x9f00
0x00009ecb      31d2           xor edx, edx
0x00009ecd      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00009ed7      49f7f1         div r9
0x00009eda      4839c8         cmp rax, rcx
0x00009edd      763c           jbe 0x9f1b
0x00009edf      4889c8         mov rax, rcx
0x00009ee2      48d1e8         shr rax, 1
0x00009ee5      488d4c0801     lea rcx, [rax + rcx + 1]
0x00009eea      48890e         mov qword [rsi], rcx
0x00009eed      490fafc9       imul rcx, r9
0x00009ef1      4889ce         mov rsi, rcx
0x00009ef4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00009ef9      0f1f80000000.  nop dword [rax]
0x00009f00      4885c9         test rcx, rcx
0x00009f03      7423           je 0x9f28
0x00009f05      4889c8         mov rax, rcx
0x00009f08      49f7e1         mul r9
0x00009f0b      0f90c2         seto dl
0x00009f0e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00009f11      0fb6d2         movzx edx, dl
0x00009f14      7805           js 0x9f1b
0x00009f16      4885d2         test rdx, rdx
0x00009f19      74cf           je 0x9eea
0x00009f1b      4883ec08       sub rsp, 8
0x00009f1f      e81c010000     call sym.xalloc_die
0x00009f24      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00009f28      31d2           xor edx, edx
0x00009f2a      b880000000     mov eax, 0x80
0x00009f2f      4531c0         xor r8d, r8d
0x00009f32      49f7f1         div r9
0x00009f35      4885c0         test rax, rax
0x00009f38      410f94c0       sete r8b
0x00009f3c      498d0c00       lea rcx, [r8 + rax]
0x00009f40      ebc3           jmp 0x9f05
0x00009f42      0f1f4000       nop dword [rax]
0x00009f46      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00009f50      4885ff         test rdi, rdi
0x00009f53      488b06         mov rax, qword [rsi]
0x00009f56      7428           je 0x9f80
0x00009f58      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00009f62      4839d0         cmp rax, rdx
0x00009f65      772a           ja 0x9f91
0x00009f67      4889c2         mov rdx, rax
0x00009f6a      48d1ea         shr rdx, 1
0x00009f6d      488d440201     lea rax, [rdx + rax + 1]
0x00009f72      488906         mov qword [rsi], rax
0x00009f75      4889c6         mov rsi, rax
0x00009f78      e9d3feffff     jmp sym.xrealloc
0x00009f7d      0f1f00         nop dword [rax]
0x00009f80      4885c0         test rax, rax
0x00009f83      ba80000000     mov edx, 0x80
0x00009f88      480f44c2       cmove rax, rdx
0x00009f8c      4885c0         test rax, rax
0x00009f8f      79e1           jns 0x9f72
0x00009f91      4883ec08       sub rsp, 8
0x00009f95      e8a6000000     call sym.xalloc_die
0x00009f9a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00009fa0      53             push rbx
0x00009fa1      4889fb         mov rbx, rdi
0x00009fa4      e847feffff     call sym.xmalloc
0x00009fa9      4889da         mov rdx, rbx
0x00009fac      31f6           xor esi, esi
0x00009fae      4889c7         mov rdi, rax
0x00009fb1      5b             pop rbx
0x00009fb2      e94977ffff     jmp sym.imp.memset
0x00009fb7      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00009fc0      4889f8         mov rax, rdi
0x00009fc3      4883ec08       sub rsp, 8
0x00009fc7      48f7e6         mul rsi
0x00009fca      0f90c2         seto dl
0x00009fcd      4885c0         test rax, rax
0x00009fd0      7817           js 0x9fe9
0x00009fd2      0fb6d2         movzx edx, dl
0x00009fd5      4885d2         test rdx, rdx
0x00009fd8      750f           jne 0x9fe9
0x00009fda      e87177ffff     call sym.imp.calloc
0x00009fdf      4885c0         test rax, rax
0x00009fe2      7405           je 0x9fe9
0x00009fe4      4883c408       add rsp, 8
0x00009fe8      c3             ret
0x00009fe9      e852000000     call sym.xalloc_die
0x00009fee      6690           nop
;-- xmemdup:
0x00009ff0      55             push rbp
0x00009ff1      53             push rbx
0x00009ff2      4889fd         mov rbp, rdi
0x00009ff5      4889f7         mov rdi, rsi
0x00009ff8      4889f3         mov rbx, rsi
0x00009ffb      4883ec08       sub rsp, 8
0x00009fff      e8ecfdffff     call sym.xmalloc
0x0000a004      4883c408       add rsp, 8
0x0000a008      4889da         mov rdx, rbx
0x0000a00b      4889ee         mov rsi, rbp
0x0000a00e      5b             pop rbx
0x0000a00f      5d             pop rbp
0x0000a010      4889c7         mov rdi, rax
0x0000a013      e95877ffff     jmp sym.imp.memcpy
0x0000a018      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x0000a020      53             push rbx
0x0000a021      4889fb         mov rbx, rdi
0x0000a024      e85776ffff     call sym.imp.strlen
0x0000a029      4889df         mov rdi, rbx
0x0000a02c      488d7001       lea rsi, [rax + 1]
0x0000a030      5b             pop rbx
0x0000a031      ebbd           jmp sym.xmemdup
0x0000a033      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a03d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x0000a040      488d35281b00.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0xbb6f ; "memory exhausted"
0x0000a047      4883ec08       sub rsp, 8
0x0000a04b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x0000a050      31ff           xor edi, edi
0x0000a052      e80976ffff     call sym.imp.dcgettext
0x0000a057      8b3dc33f2000   mov edi, dword [obj.exit_failure]       ; [0x20e020:4]=1
0x0000a05d      488d15f11100.  lea rdx, [0x0000b255]                   ; "%s"
0x0000a064      4889c1         mov rcx, rax
0x0000a067      31f6           xor esi, esi
0x0000a069      31c0           xor eax, eax
0x0000a06b      e8c077ffff     call sym.imp.error
0x0000a070      e84b75ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x0000a075      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a07f      90             nop
;-- rpl_fclose:
0x0000a080      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x0000a082      55             push rbp
0x0000a083      53             push rbx
0x0000a084      4889fb         mov rbx, rdi
0x0000a087      e8f476ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0000a08c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0000a08e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x0000a091      7854           js 0xa0e7                               ; ../coreutils-8.31/lib/fclose.c:66
0x0000a093      e82877ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x0000a098      85c0           test eax, eax
0x0000a09a      752c           jne 0xa0c8
0x0000a09c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x0000a09f      e8dc020000     call sym.rpl_fflush
0x0000a0a4      85c0           test eax, eax
0x0000a0a6      743c           je 0xa0e4
0x0000a0a8      e82375ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x0000a0ad      448b20         mov r12d, dword [rax]
0x0000a0b0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x0000a0b3      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x0000a0b6      e88575ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x0000a0bb      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x0000a0be      7530           jne 0xa0f0
0x0000a0c0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x0000a0c1      5d             pop rbp
0x0000a0c2      415c           pop r12
0x0000a0c4      c3             ret
0x0000a0c5      0f1f00         nop dword [rax]
0x0000a0c8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x0000a0cb      e8b076ffff     call sym.imp.fileno
0x0000a0d0      31f6           xor esi, esi
0x0000a0d2      ba01000000     mov edx, 1
0x0000a0d7      89c7           mov edi, eax
0x0000a0d9      e81276ffff     call sym.imp.lseek
0x0000a0de      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000a0e2      75b8           jne 0xa09c
0x0000a0e4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x0000a0e7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x0000a0e8      5d             pop rbp
0x0000a0e9      415c           pop r12
0x0000a0eb      e95075ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x0000a0f0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x0000a0f4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x0000a0f9      ebc5           jmp 0xa0c0
0x0000a0fb      0f1f440000     nop dword [rax + rax]
;-- rpl_fcntl:
0x0000a100      4154           push r12                                ; ../coreutils-8.31/lib/fcntl.c:206
0x0000a102      55             push rbp
0x0000a103      89fd           mov ebp, edi
0x0000a105      53             push rbx
0x0000a106      4883ec50       sub rsp, 0x50
0x0000a10a      64488b042528.  mov rax, qword fs:[0x28]
0x0000a113      4889442418     mov qword [rsp + 0x18], rax
0x0000a118      31c0           xor eax, eax
0x0000a11a      488d442470     lea rax, [rsp + 0x70]                   ; ../coreutils-8.31/lib/fcntl.c:209
0x0000a11f      85f6           test esi, esi                           ; ../coreutils-8.31/lib/fcntl.c:210
0x0000a121      4889542430     mov qword [rsp + 0x30], rdx             ; ../coreutils-8.31/lib/fcntl.c:206
0x0000a126      48894c2438     mov qword [rsp + 0x38], rcx
0x0000a12b      4c89442440     mov qword [rsp + 0x40], r8
0x0000a130      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/fcntl.c:209
0x0000a135      488d442420     lea rax, [rsp + 0x20]
0x0000a13a      4c894c2448     mov qword [rsp + 0x48], r9              ; ../coreutils-8.31/lib/fcntl.c:206
0x0000a13f      c70424100000.  mov dword [rsp], 0x10                   ; ../coreutils-8.31/lib/fcntl.c:209 ; [0x10:4]=0x3e0003
0x0000a146      4889442410     mov qword [rsp + 0x10], rax
0x0000a14b      0f8401020000   je 0xa352                               ; ../coreutils-8.31/lib/fcntl.c:210
0x0000a151      81fe06040000   cmp esi, 0x406
0x0000a157      7547           jne 0xa1a0
0x0000a159      488b442410     mov rax, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/fcntl.c:221
0x0000a15e      833d13412000.  cmp dword [obj.have_dupfd_cloexec.3326], 0 ; ../coreutils-8.31/lib/fcntl.c:507 ; [0x20e278:4]=0
0x0000a165      c70424180000.  mov dword [rsp], 0x18                   ; ../coreutils-8.31/lib/fcntl.c:221 ; [0x18:4]=0x2a40 rip
0x0000a16c      448b6010       mov r12d, dword [rax + 0x10]
0x0000a170      4489e2         mov edx, r12d                           ; ../coreutils-8.31/lib/fcntl.c:509
0x0000a173      0f882a010000   js 0xa2a3                               ; ../coreutils-8.31/lib/fcntl.c:507
0x0000a179      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x0000a17b      be06040000     mov esi, 0x406
0x0000a180      e88b74ffff     call sym.imp.fcntl
0x0000a185      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fcntl.c:510
0x0000a187      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x0000a189      0f8889010000   js 0xa318                               ; ../coreutils-8.31/lib/fcntl.c:510
0x0000a18f      c705df402000.  mov dword [obj.have_dupfd_cloexec.3326], 1 ; ../coreutils-8.31/lib/fcntl.c:512 ; [0x20e278:4]=0
0x0000a199      eb45           jmp 0xa1e0
0x0000a19b      0f1f440000     nop dword [rax + rax]
0x0000a1a0      83fe0b         cmp esi, 0xb                            ; ../coreutils-8.31/lib/fcntl.c:258
0x0000a1a3      742b           je 0xa1d0
0x0000a1a5      7f59           jg 0xa200
0x0000a1a7      83fe04         cmp esi, 4
0x0000a1aa      0f84d0000000   je 0xa280
0x0000a1b0      0f8fba000000   jg 0xa270
0x0000a1b6      83fe02         cmp esi, 2
0x0000a1b9      0f84c1000000   je 0xa280
0x0000a1bf      7f0f           jg 0xa1d0
0x0000a1c1      83fe01         cmp esi, 1
0x0000a1c4      7562           jne 0xa228
0x0000a1c6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a1d0      89ef           mov edi, ebp
0x0000a1d2      31c0           xor eax, eax
0x0000a1d4      e83774ffff     call sym.imp.fcntl
0x0000a1d9      89c3           mov ebx, eax
0x0000a1db      0f1f440000     nop dword [rax + rax]
0x0000a1e0      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0000a1e5      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000a1ee      89d8           mov eax, ebx
0x0000a1f0      0f8557010000   jne 0xa34d                              ; ../coreutils-8.31/lib/fcntl.c:355
0x0000a1f6      4883c450       add rsp, 0x50
0x0000a1fa      5b             pop rbx
0x0000a1fb      5d             pop rbp
0x0000a1fc      415c           pop r12
0x0000a1fe      c3             ret
0x0000a1ff      90             nop
0x0000a200      81fe07040000   cmp esi, 0x407
0x0000a206      7f48           jg 0xa250
0x0000a208      81fe06040000   cmp esi, 0x406
0x0000a20e      7d70           jge 0xa280
0x0000a210      81fe01040000   cmp esi, 0x401
0x0000a216      74b8           je 0xa1d0
0x0000a218      81fe02040000   cmp esi, 0x402                          ; ../coreutils-8.31/lib/fcntl.c:183
0x0000a21e      7460           je 0xa280
0x0000a220      81fe00040000   cmp esi, 0x400
0x0000a226      7458           je 0xa280
0x0000a228      8b0424         mov eax, dword [rsp]
0x0000a22b      83f82f         cmp eax, 0x2f
0x0000a22e      0f8736010000   ja 0xa36a
0x0000a234      4803442410     add rax, qword [rsp + 0x10]
0x0000a239      488b10         mov rdx, qword [rax]
0x0000a23c      89ef           mov edi, ebp
0x0000a23e      31c0           xor eax, eax
0x0000a240      e8cb73ffff     call sym.imp.fcntl
0x0000a245      89c3           mov ebx, eax
0x0000a247      eb97           jmp 0xa1e0
0x0000a249      0f1f80000000.  nop dword [rax]
0x0000a250      81fe09040000   cmp esi, 0x409
0x0000a256      7428           je 0xa280
0x0000a258      0f8c72ffffff   jl 0xa1d0
0x0000a25e      81fe0a040000   cmp esi, 0x40a
0x0000a264      75c2           jne 0xa228
0x0000a266      e965ffffff     jmp 0xa1d0                              ; ../coreutils-8.31/lib/fcntl.c:350
0x0000a26b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fcntl.c:406
0x0000a270      83fe09         cmp esi, 9
0x0000a273      0f8457ffffff   je 0xa1d0
0x0000a279      7f05           jg 0xa280
0x0000a27b      83fe08         cmp esi, 8
0x0000a27e      75a8           jne 0xa228
0x0000a280      8b0424         mov eax, dword [rsp]
0x0000a283      83f82f         cmp eax, 0x2f
0x0000a286      0f87e8000000   ja 0xa374
0x0000a28c      4803442410     add rax, qword [rsp + 0x10]
0x0000a291      8b10           mov edx, dword [rax]
0x0000a293      89ef           mov edi, ebp
0x0000a295      31c0           xor eax, eax
0x0000a297      e87473ffff     call sym.imp.fcntl
0x0000a29c      89c3           mov ebx, eax
0x0000a29e      e93dffffff     jmp 0xa1e0
0x0000a2a3      31f6           xor esi, esi
0x0000a2a5      31c0           xor eax, eax
0x0000a2a7      e86473ffff     call sym.imp.fcntl
0x0000a2ac      85c0           test eax, eax
0x0000a2ae      89c3           mov ebx, eax
0x0000a2b0      0f882affffff   js 0xa1e0
0x0000a2b6      833dbb3f2000.  cmp dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x20e278:4]=0
0x0000a2bd      0f851dffffff   jne 0xa1e0
0x0000a2c3      31c0           xor eax, eax
0x0000a2c5      be01000000     mov esi, 1
0x0000a2ca      89df           mov edi, ebx
0x0000a2cc      e83f73ffff     call sym.imp.fcntl
0x0000a2d1      85c0           test eax, eax
0x0000a2d3      781c           js 0xa2f1
0x0000a2d5      83c801         or eax, 1
0x0000a2d8      be02000000     mov esi, 2
0x0000a2dd      89df           mov edi, ebx
0x0000a2df      89c2           mov edx, eax
0x0000a2e1      31c0           xor eax, eax
0x0000a2e3      e82873ffff     call sym.imp.fcntl
0x0000a2e8      83f8ff         cmp eax, 0xffffffff
0x0000a2eb      0f85effeffff   jne 0xa1e0
0x0000a2f1      e8da72ffff     call sym.imp.__errno_location
0x0000a2f6      448b20         mov r12d, dword [rax]
0x0000a2f9      4889c5         mov rbp, rax
0x0000a2fc      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fcntl.c:446
0x0000a2fe      e80d74ffff     call sym.imp.close                      ; ../coreutils-8.31/lib/fcntl.c:406
0x0000a303      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x0000a308      44896500       mov dword [rbp], r12d
0x0000a30c      e9cffeffff     jmp 0xa1e0
0x0000a311      0f1f80000000.  nop dword [rax]
0x0000a318      e8b372ffff     call sym.imp.__errno_location
0x0000a31d      833816         cmp dword [rax], 0x16
0x0000a320      0f8569feffff   jne 0xa18f
0x0000a326      31f6           xor esi, esi
0x0000a328      31c0           xor eax, eax
0x0000a32a      4489e2         mov edx, r12d
0x0000a32d      89ef           mov edi, ebp                            ; ../coreutils-8.31/lib/fcntl.c:141
0x0000a32f      e8dc72ffff     call sym.imp.fcntl
0x0000a334      85c0           test eax, eax
0x0000a336      89c3           mov ebx, eax
0x0000a338      0f88a2feffff   js 0xa1e0
0x0000a33e      c705303f2000.  mov dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x20e278:4]=0
0x0000a348      e976ffffff     jmp 0xa2c3
0x0000a34d      e83e73ffff     call sym.imp.__stack_chk_fail
0x0000a352      488b442410     mov rax, qword [rsp + 0x10]
0x0000a357      31f6           xor esi, esi
0x0000a359      8b5010         mov edx, dword [rax + 0x10]
0x0000a35c      31c0           xor eax, eax
0x0000a35e      e8ad72ffff     call sym.imp.fcntl
0x0000a363      89c3           mov ebx, eax
0x0000a365      e976feffff     jmp 0xa1e0
0x0000a36a      488b442408     mov rax, qword [rsp + 8]
0x0000a36f      e9c5feffff     jmp 0xa239
0x0000a374      488b442408     mov rax, qword [rsp + 8]
0x0000a379      e913ffffff     jmp 0xa291
0x0000a37e      6690           nop
;-- rpl_fflush:
0x0000a380      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x0000a383      53             push rbx
0x0000a384      4889fb         mov rbx, rdi
0x0000a387      7411           je 0xa39a                               ; ../coreutils-8.31/lib/fflush.c:150
0x0000a389      e83274ffff     call sym.imp.__freading
0x0000a38e      85c0           test eax, eax
0x0000a390      7408           je 0xa39a
0x0000a392      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x0000a398      750e           jne 0xa3a8
0x0000a39a      4889df         mov rdi, rbx
0x0000a39d      5b             pop rbx
0x0000a39e      e9fd73ffff     jmp sym.imp.fflush
0x0000a3a3      0f1f440000     nop dword [rax + rax]
0x0000a3a8      4889df         mov rdi, rbx
0x0000a3ab      ba01000000     mov edx, 1
0x0000a3b0      31f6           xor esi, esi
0x0000a3b2      e809000000     call sym.rpl_fseeko
0x0000a3b7      4889df         mov rdi, rbx
0x0000a3ba      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x0000a3bb      e9e073ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x0000a3c0      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x0000a3c4      48394710       cmp qword [rdi + 0x10], rax
0x0000a3c8      7406           je 0xa3d0                               ; ../coreutils-8.31/lib/fseeko.c:32
0x0000a3ca      e97174ffff     jmp sym.imp.fseeko
0x0000a3cf      90             nop
0x0000a3d0      488b4720       mov rax, qword [rdi + 0x20]
0x0000a3d4      48394728       cmp qword [rdi + 0x28], rax
0x0000a3d8      75f0           jne 0xa3ca                              ; ../coreutils-8.31/lib/fseeko.c:33
0x0000a3da      48837f4800     cmp qword [rdi + 0x48], 0
0x0000a3df      75e9           jne 0xa3ca                              ; ../coreutils-8.31/lib/fseeko.c:21
0x0000a3e1      4154           push r12
0x0000a3e3      55             push rbp
0x0000a3e4      4189d4         mov r12d, edx
0x0000a3e7      53             push rbx
0x0000a3e8      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x0000a3eb      4889fb         mov rbx, rdi
0x0000a3ee      e88d73ffff     call sym.imp.fileno
0x0000a3f3      4489e2         mov edx, r12d
0x0000a3f6      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x0000a3f9      89c7           mov edi, eax
0x0000a3fb      e8f072ffff     call sym.imp.lseek
0x0000a400      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000a404      740c           je 0xa412
0x0000a406      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x0000a409      488983900000.  mov qword [rbx + 0x90], rax
0x0000a410      31c0           xor eax, eax
0x0000a412      5b             pop rbx
0x0000a413      5d             pop rbp
0x0000a414      415c           pop r12
0x0000a416      c3             ret
0x0000a417      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x0000a420      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x0000a422      4154           push r12
0x0000a424      4989f5         mov r13, rsi
0x0000a427      55             push rbp
0x0000a428      53             push rbx
0x0000a429      4889fb         mov rbx, rdi
0x0000a42c      4989d4         mov r12, rdx
0x0000a42f      4883ec18       sub rsp, 0x18
0x0000a433      64488b042528.  mov rax, qword fs:[0x28]
0x0000a43c      4889442408     mov qword [rsp + 8], rax
0x0000a441      31c0           xor eax, eax
0x0000a443      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x0000a448      4885ff         test rdi, rdi
0x0000a44b      480f44d8       cmove rbx, rax
0x0000a44f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0000a452      e85972ffff     call sym.imp.mbrtowc
0x0000a457      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0000a45b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0000a45e      7620           jbe 0xa480                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0000a460      4d85e4         test r12, r12
0x0000a463      741b           je 0xa480
0x0000a465      31ff           xor edi, edi
0x0000a467      e8c4000000     call sym.hard_locale
0x0000a46c      84c0           test al, al
0x0000a46e      7510           jne 0xa480
0x0000a470      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0000a475      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x0000a47a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0000a47c      0f1f4000       nop dword [rax]
0x0000a480      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x0000a485      644833142528.  xor rdx, qword fs:[0x28]
0x0000a48e      4889e8         mov rax, rbp
0x0000a491      750b           jne 0xa49e
0x0000a493      4883c418       add rsp, 0x18
0x0000a497      5b             pop rbx
0x0000a498      5d             pop rbp
0x0000a499      415c           pop r12
0x0000a49b      415d           pop r13
0x0000a49d      c3             ret
0x0000a49e      e8ed71ffff     call sym.imp.__stack_chk_fail
0x0000a4a3      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a4ad      0f1f00         nop dword [rax]
;-- close_stream:
0x0000a4b0      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x0000a4b2      55             push rbp
0x0000a4b3      4889fd         mov rbp, rdi
0x0000a4b6      53             push rbx
0x0000a4b7      e84471ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x0000a4bc      8b5d00         mov ebx, dword [rbp]
0x0000a4bf      4889ef         mov rdi, rbp
0x0000a4c2      4989c4         mov r12, rax
0x0000a4c5      e8b6fbffff     call sym.rpl_fclose
0x0000a4ca      83e320         and ebx, 0x20                           ; "@"
0x0000a4cd      85db           test ebx, ebx
0x0000a4cf      7517           jne 0xa4e8
0x0000a4d1      85c0           test eax, eax
0x0000a4d3      740a           je 0xa4df                               ; stdio.h:-186
0x0000a4d5      4d85e4         test r12, r12                           ; stdio.h:-178
0x0000a4d8      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000a4dd      7439           je 0xa518
0x0000a4df      5b             pop rbx
0x0000a4e0      5d             pop rbp
0x0000a4e1      415c           pop r12
0x0000a4e3      c3             ret
0x0000a4e4      0f1f4000       nop dword [rax]
0x0000a4e8      85c0           test eax, eax
0x0000a4ea      751c           jne 0xa508
0x0000a4ec      e8df70ffff     call sym.imp.__errno_location
0x0000a4f1      c70000000000   mov dword [rax], 0
0x0000a4f7      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000a4fc      5b             pop rbx
0x0000a4fd      5d             pop rbp
0x0000a4fe      415c           pop r12
0x0000a500      c3             ret
0x0000a501      0f1f80000000.  nop dword [rax]
0x0000a508      5b             pop rbx
0x0000a509      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000a50e      5d             pop rbp                                 ; stdio.h:-186
0x0000a50f      415c           pop r12
0x0000a511      c3             ret
0x0000a512      660f1f440000   nop word [rax + rax]
0x0000a518      e8b370ffff     call sym.imp.__errno_location
0x0000a51d      833809         cmp dword [rax], 9
0x0000a520      5b             pop rbx
0x0000a521      5d             pop rbp
0x0000a522      415c           pop r12                                 ; stdio.h:-178
0x0000a524      0f95c0         setne al
0x0000a527      0fb6c0         movzx eax, al
0x0000a52a      f7d8           neg eax
0x0000a52c      c3             ret
0x0000a52d      0f1f00         nop dword [rax]
;-- hard_locale:
0x0000a530      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x0000a534      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x0000a536      e8c572ffff     call sym.imp.setlocale
0x0000a53b      4889c2         mov rdx, rax
0x0000a53e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x0000a543      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x0000a546      741d           je 0xa565
0x0000a548      488d3d311600.  lea rdi, [0x0000bb80]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x0000a54f      b902000000     mov ecx, 2
0x0000a554      4889d6         mov rsi, rdx
0x0000a557      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000a559      0f97c1         seta cl
0x0000a55c      80d900         sbb cl, 0
0x0000a55f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x0000a561      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x0000a563      750b           jne 0xa570
0x0000a565      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000a569      c3             ret
0x0000a56a      660f1f440000   nop word [rax + rax]
0x0000a570      488d3d0b1600.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0xbb82 ; "POSIX"
0x0000a577      b906000000     mov ecx, 6
0x0000a57c      4889d6         mov rsi, rdx
0x0000a57f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000a581      0f97c0         seta al
0x0000a584      1c00           sbb al, 0
0x0000a586      84c0           test al, al
0x0000a588      0f95c0         setne al
0x0000a58b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000a58f      c3             ret
;-- locale_charset:
0x0000a590      4883ec08       sub rsp, 8
0x0000a594      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x0000a599      e81272ffff     call sym.imp.nl_langinfo
0x0000a59e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x0000a5a1      741d           je 0xa5c0
0x0000a5a3      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x0000a5a6      488d15db1500.  lea rdx, str.ASCII                      ; 0xbb88 ; "ASCII"
0x0000a5ad      480f44c2       cmove rax, rdx
0x0000a5b1      4883c408       add rsp, 8
0x0000a5b5      c3             ret
0x0000a5b6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a5c0      488d05c11500.  lea rax, str.ASCII                      ; 0xbb88 ; "ASCII"
0x0000a5c7      4883c408       add rsp, 8
0x0000a5cb      c3             ret
0x0000a5cc      0f1f4000       nop dword [rax]
;-- __libc_csu_init:
0x0000a5d0      4157           push r15
0x0000a5d2      4156           push r14
0x0000a5d4      4989d7         mov r15, rdx
0x0000a5d7      4155           push r13
0x0000a5d9      4154           push r12
0x0000a5db      4c8d252e3420.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x20da10 ; "@+"
0x0000a5e2      55             push rbp
0x0000a5e3      488d2d2e3420.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x20da18
0x0000a5ea      53             push rbx
0x0000a5eb      4189fd         mov r13d, edi
0x0000a5ee      4989f6         mov r14, rsi
0x0000a5f1      4c29e5         sub rbp, r12
0x0000a5f4      4883ec08       sub rsp, 8
0x0000a5f8      48c1fd03       sar rbp, 3
0x0000a5fc      e87f6fffff     call sym._init
0x0000a601      4885ed         test rbp, rbp
0x0000a604      7420           je 0xa626
0x0000a606      31db           xor ebx, ebx
0x0000a608      0f1f84000000.  nop dword [rax + rax]
0x0000a610      4c89fa         mov rdx, r15
0x0000a613      4c89f6         mov rsi, r14
0x0000a616      4489ef         mov edi, r13d
0x0000a619      41ff14dc       call qword [r12 + rbx*8]
0x0000a61d      4883c301       add rbx, 1
0x0000a621      4839dd         cmp rbp, rbx
0x0000a624      75ea           jne 0xa610
0x0000a626      4883c408       add rsp, 8
0x0000a62a      5b             pop rbx
0x0000a62b      5d             pop rbp
0x0000a62c      415c           pop r12
0x0000a62e      415d           pop r13
0x0000a630      415e           pop r14
0x0000a632      415f           pop r15
0x0000a634      c3             ret
0x0000a635      90             nop
0x0000a636      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x0000a640      f3c3           ret
0x0000a642      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a64c      0f1f4000       nop dword [rax]
;-- atexit:
0x0000a650      488b15b13920.  mov rdx, qword [obj.__dso_handle]       ; [0x20e008:8]=0x20e008 obj.__dso_handle
0x0000a657      31f6           xor esi, esi
0x0000a659      e91272ffff     jmp sym.imp.__cxa_atexit
0x0000a65e      0000           add byte [rax], al
