0x1960: sub rsp,0x8
0x1964: mov rax,qword ptr [rip+0x20b66d]
0x196b: test rax,rax
0x196e: je 0x1972
0x1970: call rax
0x1972: add rsp,0x8
0x1976: ret 
0x1980: push qword ptr [rip+0x20b40a]
0x1986: jmp qword ptr [rip+0x20b40c]
0x198c: nop dword ptr [rax+0x0]
0x1990: jmp qword ptr [rip+0x20b40a]
0x1996: push 0x0
0x199b: jmp 0x1980
0x19a6: push 0x1
0x19ab: jmp 0x1980
0x19b6: push 0x2
0x19bb: jmp 0x1980
0x19c6: push 0x3
0x19cb: jmp 0x1980
0x19d0: jmp qword ptr [rip+0x20b3ea]
0x19d6: push 0x4
0x19db: jmp 0x1980
0x19e0: jmp qword ptr [rip+0x20b3e2]
0x19e6: push 0x5
0x19eb: jmp 0x1980
0x19f0: jmp qword ptr [rip+0x20b3da]
0x19f6: push 0x6
0x19fb: jmp 0x1980
0x1a06: push 0x7
0x1a0b: jmp 0x1980
0x1a10: jmp qword ptr [rip+0x20b3ca]
0x1a16: push 0x8
0x1a1b: jmp 0x1980
0x1a20: jmp qword ptr [rip+0x20b3c2]
0x1a26: push 0x9
0x1a2b: jmp 0x1980
0x1a36: push 0xa
0x1a3b: jmp 0x1980
0x1a46: push 0xb
0x1a4b: jmp 0x1980
0x1a56: push 0xc
0x1a5b: jmp 0x1980
0x1a66: push 0xd
0x1a6b: jmp 0x1980
0x1a76: push 0xe
0x1a7b: jmp 0x1980
0x1a86: push 0xf
0x1a8b: jmp 0x1980
0x1a90: jmp qword ptr [rip+0x20b38a]
0x1a96: push 0x10
0x1a9b: jmp 0x1980
0x1aa6: push 0x11
0x1aab: jmp 0x1980
0x1ab6: push 0x12
0x1abb: jmp 0x1980
0x1ac6: push 0x13
0x1acb: jmp 0x1980
0x1ad0: jmp qword ptr [rip+0x20b36a]
0x1ad6: push 0x14
0x1adb: jmp 0x1980
0x1ae6: push 0x15
0x1aeb: jmp 0x1980
0x1af6: push 0x16
0x1afb: jmp 0x1980
0x1b06: push 0x17
0x1b0b: jmp 0x1980
0x1b16: push 0x18
0x1b1b: jmp 0x1980
0x1b26: push 0x19
0x1b2b: jmp 0x1980
0x1b36: push 0x1a
0x1b3b: jmp 0x1980
0x1b46: push 0x1b
0x1b4b: jmp 0x1980
0x1b56: push 0x1c
0x1b5b: jmp 0x1980
0x1b60: jmp qword ptr [rip+0x20b322]
0x1b66: push 0x1d
0x1b6b: jmp 0x1980
0x1b76: push 0x1e
0x1b7b: jmp 0x1980
0x1b86: push 0x1f
0x1b8b: jmp 0x1980
0x1b96: push 0x20
0x1b9b: jmp 0x1980
0x1ba6: push 0x21
0x1bab: jmp 0x1980
0x1bb0: jmp qword ptr [rip+0x20b2fa]
0x1bb6: push 0x22
0x1bbb: jmp 0x1980
0x1bc0: jmp qword ptr [rip+0x20b2f2]
0x1bc6: push 0x23
0x1bcb: jmp 0x1980
0x1bd6: push 0x24
0x1bdb: jmp 0x1980
0x1be6: push 0x25
0x1beb: jmp 0x1980
0x1bf6: push 0x26
0x1bfb: jmp 0x1980
0x1c06: push 0x27
0x1c0b: jmp 0x1980
0x1c16: push 0x28
0x1c1b: jmp 0x1980
0x1c26: push 0x29
0x1c2b: jmp 0x1980
0x1c36: push 0x2a
0x1c3b: jmp 0x1980
0x1c46: push 0x2b
0x1c4b: jmp 0x1980
0x1c56: push 0x2c
0x1c5b: jmp 0x1980
0x1c66: push 0x2d
0x1c6b: jmp 0x1980
0x1c70: jmp qword ptr [rip+0x20b29a]
0x1c76: push 0x2e
0x1c7b: jmp 0x1980
0x1c86: push 0x2f
0x1c8b: jmp 0x1980
0x1c96: push 0x30
0x1c9b: jmp 0x1980
0x1ca6: push 0x31
0x1cab: jmp 0x1980
0x1cb6: push 0x32
0x1cbb: jmp 0x1980
0x1cc6: push 0x33
0x1ccb: jmp 0x1980
0x1cd6: push 0x34
0x1cdb: jmp 0x1980
0x1ce6: push 0x35
0x1ceb: jmp 0x1980
0x1cf6: push 0x36
0x1cfb: jmp 0x1980
0x1d00: jmp qword ptr [rip+0x20b252]
0x1d06: push 0x37
0x1d0b: jmp 0x1980
0x1d16: push 0x38
0x1d1b: jmp 0x1980
0x1d26: push 0x39
0x1d2b: jmp 0x1980
0x1d36: push 0x3a
0x1d3b: jmp 0x1980
0x1d46: push 0x3b
0x1d4b: jmp 0x1980
0x1d56: push 0x3c
0x1d5b: jmp 0x1980
0x1d66: push 0x3d
0x1d6b: jmp 0x1980
0x1d76: push 0x3e
0x1d7b: jmp 0x1980
0x1d86: push 0x3f
0x1d8b: jmp 0x1980
0x1d96: push 0x40
0x1d9b: jmp 0x1980
0x1da6: push 0x41
0x1dab: jmp 0x1980
0x1db6: push 0x42
0x1dbb: jmp 0x1980
0x1dc6: push 0x43
0x1dcb: jmp 0x1980
0x1dd6: xchg ax,ax
0x1dd8: jmp qword ptr [rip+0x20b20a]
0x1dde: xchg ax,ax
0x1f06: nop word ptr cs:[rax+rax*1+0x0]
0x1ffc: nop dword ptr [rax+0x0]
0x200a: nop word ptr [rax+rax*1+0x0]
0x2044: nop dword ptr [rax+0x0]
0x2082: nop word ptr [rax+rax*1+0x0]
0x2092: nop word ptr [rax+rax*1+0x0]
0x20a2: nop word ptr [rax+rax*1+0x0]
0x21bc: cmp byte ptr [rsp+0x10],0x0
0x21c1: jne 0x2461
0x21c7: cmp ebp,0x1
0x21ca: mov eax,0x8
0x21cf: jg 0x2a11
0x21d5: cmp byte ptr [rsp+0x10],0x0
0x21da: jne 0x2461
0x21e0: sub ebp,0x1
0x21e3: mov rdx,qword ptr [rip+0x20aea6]
0x21ea: jne 0x2638
0x21f0: mov rbp,qword ptr [rbx]
0x21f3: lea rsi,[rip+0x75b0]
0x21fa: mov qword ptr [rsp+0x20],rdx
0x21ff: mov rdi,rbp
0x2202: call 0x1c00
0x2207: test eax,eax
0x2209: mov rdx,qword ptr [rsp+0x20]
0x220e: je 0x2638
0x2214: test r12,r12
0x2217: jne 0x297e
0x221d: mov esi,0x2
0x2222: mov rdi,rdx
0x2225: call 0x3210
0x222a: cmp byte ptr [rsp+0x1e],0x0
0x222f: jne 0x26ba
0x2235: or rsi,0xffffffffffffffff
0x2239: mov rdi,r13
0x223c: call 0x52e0
0x2241: test rax,rax
0x2244: mov qword ptr [rsp+0x20],rax
0x2249: je 0x2367
0x224f: movsx eax,byte ptr [rsp+0x1f]
0x2254: cmp r12,0x400
0x225b: mov ebx,0x400
0x2260: cmovbe rbx,r12
0x2264: mov esi,0x18
0x2269: xor ebp,ebp
0x226b: mov rdi,rbx
0x226e: mov dword ptr [rsp+0x30],eax
0x2272: mov rax,qword ptr [rip+0x20ae17]
0x2279: mov qword ptr [rsp+0x10],rax
0x227e: call 0x6d50
0x2283: mov qword ptr [rsp+0x40],r14
0x2288: xor r8d,r8d
0x228b: mov r14,rbx
0x228e: mov rbx,rax
0x2291: cmp r12,rbp
0x2294: je 0x27e6
0x229a: imul r13,rbp,0x18
0x229e: mov edx,dword ptr [rsp+0x30]
0x22a2: mov rsi,qword ptr [rsp+0x10]
0x22a7: lea rdi,[rbx+r13*1]
0x22ab: call 0x3450
0x22b0: test rax,rax
0x22b3: mov r8,rax
0x22b6: je 0x2904
0x22bc: add rbp,0x1
0x22c0: cmp rbp,r14
0x22c3: jb 0x2291
0x22c5: mov edx,0x18
0x22ca: add r14,0x400
0x22d1: xor esi,esi
0x22d3: mov rax,rdx
0x22d6: mul r14
0x22d9: jo 0x2a05
0x22df: test rax,rax
0x22e2: mov qword ptr [rsp+0x38],r8
0x22e7: js 0x2a00
0x22ed: test rsi,rsi
0x22f0: jne 0x2a00
0x22f6: imul rsi,r14,0x18
0x22fa: mov rdi,rbx
0x22fd: call 0x6be0
0x2302: lea rdi,[rax+r13*1+0x18]
0x2307: mov edx,0x6000
0x230c: xor esi,esi
0x230e: mov rbx,rax
0x2311: call 0x1b80
0x2316: mov r8,qword ptr [rsp+0x38]
0x231b: jmp 0x2291
0x2461: movsxd rax,ebp
0x2464: xor edx,edx
0x2466: or r8,0xffffffffffffffff
0x246a: mov qword ptr [rsp+0x30],rax
0x246f: mov rsi,rax
0x2472: xor eax,eax
0x2474: jmp 0x248b
0x2476: mov rdi,qword ptr [rbx+rdx*8]
0x247a: mov rcx,r8
0x247d: add rdx,0x1
0x2481: repnz scas al,byte ptr es:[rdi]
0x2483: not rcx
0x2486: lea rsi,[rsi+rcx*1-0x1]
0x248b: cmp ebp,edx
0x248d: jg 0x2476
0x248f: mov rdi,rsi
0x2492: call 0x6b80
0x2497: xor edx,edx
0x2499: mov qword ptr [rsp+0x20],r14
0x249e: mov qword ptr [rsp+0x38],r13
0x24a3: mov qword ptr [rsp+0x40],r12
0x24a8: mov r13,rax
0x24ab: mov r12,rbx
0x24ae: mov r14,rdx
0x24b1: movzx ebx,byte ptr [rsp+0x1f]
0x24b6: jmp 0x24d2
0x24b8: mov rsi,qword ptr [r12+r14*8]
0x24bc: mov rdi,r13
0x24bf: call 0x1a90
0x24c4: mov qword ptr [r12+r14*8],r13
0x24c8: lea r13,[rax+0x1]
0x24cc: mov byte ptr [rax],bl
0x24ce: add r14,0x1
0x24d2: cmp ebp,r14d
0x24d5: jg 0x24b8
0x24d7: mov rax,qword ptr [rsp+0x30]
0x24dc: mov rbx,r12
0x24df: mov rcx,r13
0x24e2: mov r14,qword ptr [rsp+0x20]
0x24e7: mov r13,qword ptr [rsp+0x38]
0x24ec: mov r12,qword ptr [rsp+0x40]
0x24f1: mov qword ptr [rbx+rax*8],rcx
0x24f5: jmp 0x2346
0x2505: mov qword ptr [rsp+0x38],0x0
0x250e: mov rdi,qword ptr [rip+0x20ab7b]
0x2515: mov byte ptr [rsp+0x10],cl
0x2519: call 0x7780
0x251e: test eax,eax
0x2520: movzx ecx,byte ptr [rsp+0x10]
0x2525: jne 0x2b16
0x252b: cmp byte ptr [rsp+0x1e],0x0
0x2530: je 0x2a9e
0x25ce: xor r14d,r14d
0x25d1: jmp 0x25d7
0x25d3: add r14,0x1
0x25d7: cmp r14,r12
0x25da: je 0x2436
0x25e0: mov rax,qword ptr [r13+r14*8+0x0]
0x25e5: mov rcx,qword ptr [rip+0x20aa9c]
0x25ec: mov esi,0x1
0x25f1: lea rax,[rbx+rax*8]
0x25f5: mov rdi,qword ptr [rax]
0x25f8: mov rbp,qword ptr [rax+0x8]
0x25fc: sub rbp,rdi
0x25ff: mov rdx,rbp
0x2602: call 0x1c90
0x2607: cmp rbp,rax
0x260a: je 0x25d3
0x2638: mov esi,0x2
0x263d: mov rdi,rdx
0x2640: call 0x3210
0x2645: cmp byte ptr [rsp+0x1e],0x0
0x264a: jne 0x26ba
0x264c: cmp r12,0xffffffffffffffff
0x2650: je 0x26ba
0x2652: test r12,r12
0x2655: je 0x2235
0x265b: lea rdx,[rsp+0x70]
0x2660: xor esi,esi
0x2662: mov edi,0x1
0x2667: call 0x1c70
0x266c: test eax,eax
0x266e: jne 0x2235
0x2674: mov eax,dword ptr [rsp+0x88]
0x267b: and eax,0xd000
0x2680: cmp eax,0x8000
0x2685: jne 0x2235
0x268b: xor esi,esi
0x268d: xor edi,edi
0x268f: mov edx,0x1
0x2694: mov rbx,qword ptr [rsp+0xa0]
0x269c: call 0x1b40
0x26a1: test rax,rax
0x26a4: js 0x2235
0x26aa: sub rbx,rax
0x26ad: cmp rbx,0x800000
0x26b4: jg 0x2235
0x26ba: movsx eax,byte ptr [rsp+0x1f]
0x26bf: mov rdi,qword ptr [rip+0x20a9ca]
0x26c6: lea rsi,[rsp+0x50]
0x26cb: mov dword ptr [rsp+0x20],eax
0x26cf: call 0x62e0
0x26d4: test rax,rax
0x26d7: mov rcx,rax
0x26da: je 0x2b4c
0x26e0: mov rbp,qword ptr [rsp+0x50]
0x26e5: test rbp,rbp
0x26e8: je 0x2706
0x26ea: movzx ebx,byte ptr [rsp+0x1f]
0x26ef: cmp bl,byte ptr [rax+rbp*1-0x1]
0x26f3: je 0x2706
0x26f5: lea rax,[rbp+0x1]
0x26f9: mov qword ptr [rsp+0x50],rax
0x26fe: mov byte ptr [rcx+rbp*1],bl
0x2701: mov rbp,qword ptr [rsp+0x50]
0x2706: add rbp,rcx
0x2709: mov rdi,rcx
0x270c: xor eax,eax
0x270e: mov ebx,dword ptr [rsp+0x20]
0x2712: mov qword ptr [rsp+0x38],rcx
0x2717: mov qword ptr [rsp+0x40],r12
0x271c: jmp 0x2732
0x271e: mov rdx,rbp
0x2721: mov esi,ebx
0x2723: sub rdx,rdi
0x2726: call 0x1bc0
0x272b: lea rdi,[rax+0x1]
0x272f: mov rax,r12
0x2732: cmp rbp,rdi
0x2735: lea r12,[rax+0x1]
0x2739: ja 0x271e
0x273b: mov edx,0x8
0x2740: mov rbx,r12
0x2743: mov qword ptr [rsp+0x30],rax
0x2748: mov rax,rdx
0x274b: xor esi,esi
0x274d: mov rcx,qword ptr [rsp+0x38]
0x2752: mul rbx
0x2755: mov r12,qword ptr [rsp+0x40]
0x275a: jo 0x2b42
0x2760: test rax,rax
0x2763: js 0x2a00
0x2769: test rsi,rsi
0x276c: jne 0x2a00
0x2772: lea rdi,[rbx*8+0x0]
0x277a: mov qword ptr [rsp+0x38],rcx
0x277f: call 0x6b80
0x2784: mov rcx,qword ptr [rsp+0x38]
0x2789: mov rbx,rax
0x278c: mov qword ptr [rsp+0x38],r15
0x2791: mov qword ptr [rsp+0x48],r12
0x2796: mov qword ptr [rsp+0x40],rbx
0x279b: mov r12d,dword ptr [rsp+0x20]
0x27a0: mov qword ptr [rax],rcx
0x27a3: mov rax,qword ptr [rsp+0x30]
0x27a8: mov rdi,rcx
0x27ab: lea rax,[rbx+rax*8]
0x27af: mov r15,rax
0x27b2: jmp 0x27cd
0x27b4: mov rdx,rbp
0x27b7: mov esi,r12d
0x27ba: add rbx,0x8
0x27be: sub rdx,rdi
0x27c1: call 0x1bc0
0x27c6: lea rdi,[rax+0x1]
0x27ca: mov qword ptr [rbx],rdi
0x27cd: cmp r15,rbx
0x27d0: jne 0x27b4
0x27d2: mov r15,qword ptr [rsp+0x38]
0x27d7: mov rbx,qword ptr [rsp+0x40]
0x27dc: mov r12,qword ptr [rsp+0x48]
0x27e1: jmp 0x2346
0x27e6: test r8,r8
0x27e9: mov r14,qword ptr [rsp+0x40]
0x27ee: mov qword ptr [rsp+0x38],rbx
0x27f3: je 0x29f8
0x27f9: lea r13,[rsp+0x50]
0x27fe: mov rbp,r12
0x2801: mov rdi,r13
0x2804: call 0x3440
0x2809: mov qword ptr [rsp+0x40],r15
0x280e: mov qword ptr [rsp+0x48],r14
0x2813: mov r15,qword ptr [rsp+0x10]
0x2818: mov r14d,dword ptr [rsp+0x30]
0x281d: jmp 0x282b
0x281f: test rbp,rbp
0x2822: je 0x296a
0x2828: mov rbp,rbx
0x282b: mov rdi,qword ptr [rsp+0x20]
0x2830: mov rsi,rbp
0x2833: lea rbx,[rbp+0x1]
0x2837: call 0x5330
0x283c: cmp r12,rax
0x283f: mov rdi,r13
0x2842: jbe 0x2851
0x2844: imul rax,rax,0x18
0x2848: mov rcx,qword ptr [rsp+0x38]
0x284d: lea rdi,[rcx+rax*1]
0x2851: mov edx,r14d
0x2854: mov rsi,r15
0x2857: call 0x3450
0x285c: test rax,rax
0x285f: jne 0x281f
0x2861: test rbp,rbp
0x2864: mov r15,qword ptr [rsp+0x40]
0x2869: mov r14,qword ptr [rsp+0x48]
0x286e: je 0x2bc8
0x2874: mov rdi,r13
0x2877: call 0x3570
0x287c: mov rax,qword ptr [rsp+0x10]
0x2881: test byte ptr [rax],0x20
0x2884: jne 0x2b9c
0x288a: cmp r12,rbp
0x288d: mov ecx,0x1
0x2892: cmova r12,rbp
0x2896: xor ebx,ebx
0x2898: mov qword ptr [rsp+0x30],r12
0x289d: jmp 0x250e
0x2904: mov r14,qword ptr [rsp+0x40]
0x2909: mov qword ptr [rsp+0x38],rbx
0x290e: jmp 0x287c
0x2913: mov rax,qword ptr [rsp+0x30]
0x2918: xor r14d,r14d
0x291b: mov r15,qword ptr [rsp+0x20]
0x2920: lea r13,[rax-0x1]
0x2924: jmp 0x2933
0x2926: add r14,0x1
0x292a: cmp r12,r14
0x292d: je 0x2436
0x2933: mov rsi,r13
0x2936: mov rdi,r15
0x2939: call 0x5330
0x293e: lea rax,[rbx+rax*8]
0x2942: mov rcx,qword ptr [rip+0x20a73f]
0x2949: mov esi,0x1
0x294e: mov rdi,qword ptr [rax]
0x2951: mov rbp,qword ptr [rax+0x8]
0x2955: sub rbp,rdi
0x2958: mov rdx,rbp
0x295b: call 0x1c90
0x2960: cmp rbp,rax
0x2963: je 0x2926
0x2965: jmp 0x260c
0x296a: mov r15,qword ptr [rsp+0x40]
0x296f: mov r14,qword ptr [rsp+0x48]
0x2974: mov ebp,0x1
0x2979: jmp 0x2874
0x297e: lea rsi,[rip+0x7320]
0x2985: mov rdi,rbp
0x2988: call 0x3290
0x298d: test rax,rax
0x2990: je 0x2a4b
0x2996: mov rdi,qword ptr [rip+0x20a6f3]
0x299d: mov esi,0x2
0x29a2: call 0x3210
0x29a7: cmp byte ptr [rsp+0x1e],0x0
0x29ac: jne 0x26ba
0x29b2: cmp r12,0xffffffffffffffff
0x29b6: jne 0x265b
0x29bc: jmp 0x26ba
0x29f3: call 0x1ad0
0x29f8: mov rbp,r12
0x29fb: jmp 0x287c
0x2a00: call 0x6dd0
0x2a05: mov esi,0x1
0x2a0a: jmp 0x22df
0x2a41: mov edi,0x1
0x2a46: call 0x2d50
0x2a4b: mov rdx,qword ptr [rbx]
0x2a4e: mov esi,0x3
0x2a53: xor edi,edi
0x2a55: call 0x50c0
0x2a5a: mov rbx,rax
0x2a5d: call 0x19b0
0x2a62: mov esi,dword ptr [rax]
0x2a64: lea rdx,[rip+0x678f]
0x2a6b: mov rcx,rbx
0x2a6e: mov edi,0x1
0x2a73: xor eax,eax
0x2a75: call 0x1cf0
0x2a9e: mov rdx,qword ptr [rsp+0x30]
0x2aa3: mov rdi,qword ptr [rsp+0x20]
0x2aa8: mov rsi,r12
0x2aab: mov byte ptr [rsp+0x10],cl
0x2aaf: call 0x5520
0x2ab4: test r15,r15
0x2ab7: mov r13,rax
0x2aba: movzx ecx,byte ptr [rsp+0x10]
0x2abf: jne 0x28ad
0x2b16: lea rsi,[rip+0x717f]
0x2b1d: mov edx,0x5
0x2b22: xor edi,edi
0x2b24: call 0x1aa0
0x2b29: mov rbx,rax
0x2b2c: call 0x19b0
0x2b31: mov esi,dword ptr [rax]
0x2b33: mov rdx,rbx
0x2b36: mov edi,0x1
0x2b3b: xor eax,eax
0x2b3d: call 0x1cf0
0x2b42: mov esi,0x1
0x2b47: jmp 0x2760
0x2b4c: lea rsi,[rip+0x7149]
0x2b53: mov edx,0x5
0x2b58: xor edi,edi
0x2b5a: call 0x1aa0
0x2b5f: mov rbx,rax
0x2b62: call 0x19b0
0x2b67: mov esi,dword ptr [rax]
0x2b69: mov rdx,rbx
0x2b6c: mov edi,0x1
0x2b71: xor eax,eax
0x2b73: call 0x1cf0
0x2b9c: lea rsi,[rip+0x70f9]
0x2ba3: mov edx,0x5
0x2ba8: xor edi,edi
0x2baa: call 0x1aa0
0x2baf: mov rbx,rax
0x2bb2: call 0x19b0
0x2bb7: mov esi,dword ptr [rax]
0x2bb9: mov rdx,rbx
0x2bbc: mov edi,0x1
0x2bc1: xor eax,eax
0x2bc3: call 0x1cf0
0x2bc8: lea rsi,[rip+0x666c]
0x2bcf: mov edx,0x5
0x2bd4: xor edi,edi
0x2bd6: call 0x1aa0
0x2bdb: mov esi,0x4b
0x2be0: mov rdx,rax
0x2be3: mov edi,0x1
0x2be8: xor eax,eax
0x2bea: call 0x1cf0
0x2c37: nop word ptr [rax+rax*1+0x0]
0x2c6a: hlt 
0x2c6b: nop dword ptr [rax+rax*1+0x0]
0x2c70: lea rdi,[rip+0x20a409]
0x2c77: push rbp
0x2c78: lea rax,[rip+0x20a401]
0x2c7f: cmp rax,rdi
0x2c82: mov rbp,rsp
0x2c85: je 0x2ca0
0x2c87: mov rax,qword ptr [rip+0x20a33a]
0x2c8e: test rax,rax
0x2c91: je 0x2ca0
0x2c93: pop rbp
0x2c94: jmp rax
0x2c96: nop word ptr cs:[rax+rax*1+0x0]
0x2ca0: pop rbp
0x2ca1: ret 
0x2ca2: nop dword ptr [rax+0x0]
0x2ca6: nop word ptr cs:[rax+rax*1+0x0]
0x2cb0: lea rdi,[rip+0x20a3c9]
0x2cb7: lea rsi,[rip+0x20a3c2]
0x2cbe: push rbp
0x2cbf: sub rsi,rdi
0x2cc2: mov rbp,rsp
0x2cc5: sar rsi,0x3
0x2cc9: mov rax,rsi
0x2ccc: shr rax,0x3f
0x2cd0: add rsi,rax
0x2cd3: sar rsi,1
0x2cd6: je 0x2cf0
0x2cd8: mov rax,qword ptr [rip+0x20a301]
0x2cdf: test rax,rax
0x2ce2: je 0x2cf0
0x2ce4: pop rbp
0x2ce5: jmp rax
0x2ce7: nop word ptr [rax+rax*1+0x0]
0x2cf0: pop rbp
0x2cf1: ret 
0x2cf2: nop dword ptr [rax+0x0]
0x2cf6: nop word ptr cs:[rax+rax*1+0x0]
0x2d00: cmp byte ptr [rip+0x20a3c1],0x0
0x2d07: jne 0x2d38
0x2d09: cmp qword ptr [rip+0x20a2d7],0x0
0x2d11: push rbp
0x2d12: mov rbp,rsp
0x2d15: je 0x2d23
0x2d17: mov rdi,qword ptr [rip+0x20a2ea]
0x2d1e: call 0x1dd8
0x2d23: call 0x2c70
0x2d28: mov byte ptr [rip+0x20a399],0x1
0x2d2f: pop rbp
0x2d30: ret 
0x2d31: nop dword ptr [rax+0x0]
0x2d38: repz ret
0x2d3a: nop word ptr [rax+rax*1+0x0]
0x2d40: push rbp
0x2d41: mov rbp,rsp
0x2d44: pop rbp
0x2d45: jmp 0x2cb0
0x2d4a: nop word ptr [rax+rax*1+0x0]
0x312a: nop word ptr [rax+rax*1+0x0]
0x3130: mov qword ptr [rip+0x209fa1],rdi
0x3137: ret 
0x3138: nop dword ptr [rax+rax*1+0x0]
0x3140: mov byte ptr [rip+0x209f89],dil
0x3147: ret 
0x3148: nop dword ptr [rax+rax*1+0x0]
0x3150: push rbp
0x3151: push rbx
0x3152: sub rsp,0x8
0x3156: mov rdi,qword ptr [rip+0x209f2b]
0x315d: call 0x7930
0x3162: test eax,eax
0x3164: je 0x317c
0x3166: call 0x19b0
0x316b: cmp byte ptr [rip+0x209f5e],0x0
0x3172: mov rbx,rax
0x3175: je 0x3193
0x3177: cmp dword ptr [rax],0x20
0x317a: jne 0x3193
0x317c: mov rdi,qword ptr [rip+0x209f3d]
0x3183: call 0x7930
0x3188: test eax,eax
0x318a: jne 0x31d2
0x318c: add rsp,0x8
0x3190: pop rbx
0x3191: pop rbp
0x3192: ret 
0x3193: lea rsi,[rip+0x60cf]
0x319a: xor edi,edi
0x319c: mov edx,0x5
0x31a1: call 0x1aa0
0x31a6: mov rdi,qword ptr [rip+0x209f2b]
0x31ad: mov rbp,rax
0x31b0: test rdi,rdi
0x31b3: je 0x31dd
0x31b5: call 0x5090
0x31ba: mov esi,dword ptr [rbx]
0x31bc: lea rdx,[rip+0x6033]
0x31c3: mov rcx,rax
0x31c6: mov r8,rbp
0x31c9: xor edi,edi
0x31cb: xor eax,eax
0x31cd: call 0x1cf0
0x31d2: mov edi,dword ptr [rip+0x209e40]
0x31d8: call 0x19d0
0x31dd: mov esi,dword ptr [rbx]
0x31df: lea rdx,[rip+0x6014]
0x31e6: mov rcx,rax
0x31e9: xor edi,edi
0x31eb: xor eax,eax
0x31ed: call 0x1cf0
0x31f2: jmp 0x31d2
0x31f4: nop word ptr cs:[rax+rax*1+0x0]
0x31fe: xchg ax,ax
0x3200: jmp 0x1bb0
0x3205: nop 
0x3206: nop word ptr cs:[rax+rax*1+0x0]
0x3210: test rdi,rdi
0x3213: je 0x3230
0x3215: push rbx
0x3216: mov ebx,esi
0x3218: call 0x1c20
0x321d: mov ecx,ebx
0x321f: xor edx,edx
0x3221: xor esi,esi
0x3223: pop rbx
0x3224: mov edi,eax
0x3226: jmp 0x1bb0
0x322b: nop dword ptr [rax+rax*1+0x0]
0x3230: repz ret
0x3232: nop word ptr cs:[rax+rax*1+0x0]
0x323c: nop dword ptr [rax+0x0]
0x3282: nop dword ptr [rax+0x0]
0x3286: nop word ptr cs:[rax+rax*1+0x0]
0x3382: nop word ptr [rax+rax*1+0x0]
0x3391: nop dword ptr [rax+0x0]
0x33e8: nop dword ptr [rax+rax*1+0x0]
0x340f: nop 
0x3417: nop word ptr [rax+rax*1+0x0]
0x3429: nop dword ptr [rax+0x0]
0x343e: xchg ax,ax
0x3440: pxor xmm0,xmm0
0x3444: mov qword ptr [rdi+0x10],0x0
0x344c: movups XMMword ptr [rdi],xmm0
0x344f: ret 
0x3450: push r15
0x3452: push r14
0x3454: push r13
0x3456: push r12
0x3458: push rbp
0x3459: push rbx
0x345a: sub rsp,0x18
0x345e: mov r13,qword ptr [rdi+0x10]
0x3462: mov r8,qword ptr [rdi]
0x3465: add r8,r13
0x3468: test byte ptr [rsi],0x10
0x346b: jne 0x3540
0x3471: mov r14,rdi
0x3474: mov rbp,rsi
0x3477: mov rbx,r13
0x347a: movsx r15d,dl
0x347e: jmp 0x348b
0x3480: cmp r12d,r15d
0x3483: lea rbx,[rsi+0x1]
0x3487: mov byte ptr [rsi],cl
0x3489: je 0x34e6
0x348b: mov rcx,qword ptr [rbp+0x8]
0x348f: cmp rcx,qword ptr [rbp+0x10]
0x3493: jae 0x3500
0x3495: lea rax,[rcx+0x1]
0x3499: mov qword ptr [rbp+0x8],rax
0x349d: movzx r12d,byte ptr [rcx]
0x34a1: mov ecx,r12d
0x34a4: cmp rbx,r8
0x34a7: mov rsi,rbx
0x34aa: jne 0x3480
0x34ac: mov rbx,qword ptr [r14]
0x34af: mov rsi,r14
0x34b2: mov rdi,r13
0x34b5: mov byte ptr [rsp+0xf],dl
0x34b9: mov byte ptr [rsp],cl
0x34bc: call 0x6ce0
0x34c1: mov r8,qword ptr [r14]
0x34c4: movzx ecx,byte ptr [rsp]
0x34c8: lea rsi,[rax+rbx*1]
0x34cc: mov qword ptr [r14+0x10],rax
0x34d0: mov r13,rax
0x34d3: movzx edx,byte ptr [rsp+0xf]
0x34d8: lea rbx,[rsi+0x1]
0x34dc: add r8,rax
0x34df: cmp r12d,r15d
0x34e2: mov byte ptr [rsi],cl
0x34e4: jne 0x348b
0x34e6: sub rbx,r13
0x34e9: mov rax,r14
0x34ec: mov qword ptr [r14+0x8],rbx
0x34f0: add rsp,0x18
0x34f4: pop rbx
0x34f5: pop rbp
0x34f6: pop r12
0x34f8: pop r13
0x34fa: pop r14
0x34fc: pop r15
0x34fe: ret 
0x34ff: nop 
0x3500: mov rdi,rbp
0x3503: mov byte ptr [rsp+0xf],dl
0x3507: mov qword ptr [rsp],r8
0x350b: call 0x1990
0x3510: cmp eax,0xffffffff
0x3513: mov r12d,eax
0x3516: mov r8,qword ptr [rsp]
0x351a: movzx edx,byte ptr [rsp+0xf]
0x351f: jne 0x3551
0x3521: cmp r13,rbx
0x3524: je 0x3540
0x3526: test byte ptr [rbp+0x0],0x20
0x352a: jne 0x3540
0x352c: cmp byte ptr [rbx-0x1],dl
0x352f: je 0x34e6
0x3531: mov r12d,r15d
0x3534: mov ecx,edx
0x3536: jmp 0x34a4
0x353b: nop dword ptr [rax+rax*1+0x0]
0x3540: add rsp,0x18
0x3544: xor eax,eax
0x3546: pop rbx
0x3547: pop rbp
0x3548: pop r12
0x354a: pop r13
0x354c: pop r14
0x354e: pop r15
0x3550: ret 
0x3551: mov ecx,eax
0x3553: jmp 0x34a4
0x3558: nop dword ptr [rax+rax*1+0x0]
0x3560: mov edx,0xa
0x3565: jmp 0x3450
0x356a: nop word ptr [rax+rax*1+0x0]
0x3570: mov rdi,qword ptr [rdi+0x10]
0x3574: jmp 0x1dd0
0x3579: nop dword ptr [rax+0x0]
0x361f: nop 
0x365c: nop dword ptr [rax+0x0]
0x36ad: nop dword ptr [rax]
0x3707: nop word ptr [rax+rax*1+0x0]
0x39c7: nop word ptr [rax+rax*1+0x0]
0x39fe: xchg ax,ax
0x3a21: nop dword ptr [rax+0x0]
0x3a62: nop word ptr [rax+rax*1+0x0]
0x3a74: nop dword ptr [rax+0x0]
0x3b18: nop dword ptr [rax+rax*1+0x0]
0x3b41: nop dword ptr [rax+0x0]
0x3b57: nop word ptr [rax+rax*1+0x0]
0x3b6f: nop 
0x3b9e: xchg ax,ax
0x3bad: nop dword ptr [rax]
0x3bbf: nop 
0x3bcf: nop 
0x3bdf: nop 
0x3bef: nop 
0x3bff: nop 
0x3c6c: nop dword ptr [rax+0x0]
0x3c8c: nop dword ptr [rax+0x0]
0x3caf: nop 
0x3cc2: nop word ptr [rax+rax*1+0x0]
0x3cda: nop word ptr [rax+rax*1+0x0]
0x3cea: nop word ptr [rax+rax*1+0x0]
0x3d8b: nop dword ptr [rax+rax*1+0x0]
0x3da5: nop dword ptr [rax]
0x3db8: nop dword ptr [rax+rax*1+0x0]
0x3dd3: nop dword ptr [rax+rax*1+0x0]
0x3e02: nop word ptr [rax+rax*1+0x0]
0x3e12: nop word ptr [rax+rax*1+0x0]
0x3e2a: nop word ptr [rax+rax*1+0x0]
0x3e3a: nop word ptr [rax+rax*1+0x0]
0x3e48: nop dword ptr [rax+rax*1+0x0]
0x3e6f: nop 
0x3f09: nop dword ptr [rax+0x0]
0x3f52: nop word ptr [rax+rax*1+0x0]
0x3f91: nop dword ptr [rax+0x0]
0x3fb2: nop word ptr [rax+rax*1+0x0]
0x4118: nop dword ptr [rax+rax*1+0x0]
0x422b: nop dword ptr [rax+rax*1+0x0]
0x424e: xchg ax,ax
0x4315: nop dword ptr [rax]
0x43cd: nop dword ptr [rax]
0x45d6: nop word ptr cs:[rax+rax*1+0x0]
0x4669: nop dword ptr [rax+0x0]
0x47bd: nop dword ptr [rax]
0x4903: call 0x1ad0
0x4944: xchg ax,ax
0x4946: nop word ptr cs:[rax+rax*1+0x0]
0x4acb: nop dword ptr [rax+rax*1+0x0]
0x4af1: call 0x19a0
0x4af6: call 0x6dd0
0x4afb: nop dword ptr [rax+rax*1+0x0]
0x4b00: push r12
0x4b02: push rbp
0x4b03: push rbx
0x4b04: mov rbx,rdi
0x4b07: call 0x19b0
0x4b0c: mov r12d,dword ptr [rax]
0x4b0f: mov rbp,rax
0x4b12: lea rax,[rip+0x2086e7]
0x4b19: test rbx,rbx
0x4b1c: mov esi,0x38
0x4b21: cmove rbx,rax
0x4b25: mov rdi,rbx
0x4b28: call 0x6d80
0x4b2d: mov dword ptr [rbp+0x0],r12d
0x4b31: pop rbx
0x4b32: pop rbp
0x4b33: pop r12
0x4b35: ret 
0x4b36: nop word ptr cs:[rax+rax*1+0x0]
0x4b40: lea rax,[rip+0x2086b9]
0x4b47: test rdi,rdi
0x4b4a: cmove rdi,rax
0x4b4e: mov eax,dword ptr [rdi]
0x4b50: ret 
0x4b51: nop dword ptr [rax+rax*1+0x0]
0x4b56: nop word ptr cs:[rax+rax*1+0x0]
0x4b60: lea rax,[rip+0x208699]
0x4b67: test rdi,rdi
0x4b6a: cmove rdi,rax
0x4b6e: mov dword ptr [rdi],esi
0x4b70: ret 
0x4b71: nop dword ptr [rax+rax*1+0x0]
0x4b76: nop word ptr cs:[rax+rax*1+0x0]
0x4b80: lea rax,[rip+0x208679]
0x4b87: test rdi,rdi
0x4b8a: mov ecx,esi
0x4b8c: cmove rdi,rax
0x4b90: mov eax,esi
0x4b92: and ecx,0x1f
0x4b95: shr al,0x5
0x4b98: movzx eax,al
0x4b9b: lea rdi,[rdi+rax*4+0x8]
0x4ba0: mov esi,dword ptr [rdi]
0x4ba2: mov eax,esi
0x4ba4: shr eax,cl
0x4ba6: xor edx,eax
0x4ba8: and eax,0x1
0x4bab: and edx,0x1
0x4bae: shl edx,cl
0x4bb0: xor edx,esi
0x4bb2: mov dword ptr [rdi],edx
0x4bb4: ret 
0x4bb5: nop 
0x4bb6: nop word ptr cs:[rax+rax*1+0x0]
0x4bc0: lea rax,[rip+0x208639]
0x4bc7: test rdi,rdi
0x4bca: cmove rdi,rax
0x4bce: mov eax,dword ptr [rdi+0x4]
0x4bd1: mov dword ptr [rdi+0x4],esi
0x4bd4: ret 
0x4bd5: nop 
0x4bd6: nop word ptr cs:[rax+rax*1+0x0]
0x4be0: lea rax,[rip+0x208619]
0x4be7: test rdi,rdi
0x4bea: cmove rdi,rax
0x4bee: test rsi,rsi
0x4bf1: mov dword ptr [rdi],0xa
0x4bf7: je 0x4c07
0x4bf9: test rdx,rdx
0x4bfc: je 0x4c07
0x4bfe: mov qword ptr [rdi+0x28],rsi
0x4c02: mov qword ptr [rdi+0x30],rdx
0x4c06: ret 
0x4c07: sub rsp,0x8
0x4c0b: call 0x19a0
0x4c10: push r15
0x4c12: push r14
0x4c14: lea rax,[rip+0x2085e5]
0x4c1b: push r13
0x4c1d: push r12
0x4c1f: mov r13,rdi
0x4c22: push rbp
0x4c23: push rbx
0x4c24: mov rbx,r8
0x4c27: mov r14,rsi
0x4c2a: mov r15,rdx
0x4c2d: sub rsp,0x18
0x4c31: test r8,r8
0x4c34: cmove rbx,rax
0x4c38: mov qword ptr [rsp+0x8],rcx
0x4c3d: call 0x19b0
0x4c42: mov r12d,dword ptr [rax]
0x4c45: mov rbp,rax
0x4c48: lea rax,[rbx+0x8]
0x4c4c: sub rsp,0x8
0x4c50: mov r9d,dword ptr [rbx+0x4]
0x4c54: push qword ptr [rbx+0x30]
0x4c57: mov r8d,dword ptr [rbx]
0x4c5a: push qword ptr [rbx+0x28]
0x4c5d: mov rdx,r15
0x4c60: push rax
0x4c61: mov rcx,qword ptr [rsp+0x28]
0x4c66: mov rsi,r14
0x4c69: mov rdi,r13
0x4c6c: call 0x3710
0x4c71: mov dword ptr [rbp+0x0],r12d
0x4c75: add rsp,0x38
0x4c79: pop rbx
0x4c7a: pop rbp
0x4c7b: pop r12
0x4c7d: pop r13
0x4c7f: pop r14
0x4c81: pop r15
0x4c83: ret 
0x4c84: xchg ax,ax
0x4c86: nop word ptr cs:[rax+rax*1+0x0]
0x4c90: push r15
0x4c92: push r14
0x4c94: lea rax,[rip+0x208565]
0x4c9b: push r13
0x4c9d: push r12
0x4c9f: mov r12,rdx
0x4ca2: push rbp
0x4ca3: push rbx
0x4ca4: mov rbx,rcx
0x4ca7: mov r14,rdi
0x4caa: mov r15,rsi
0x4cad: sub rsp,0x38
0x4cb1: test rcx,rcx
0x4cb4: cmove rbx,rax
0x4cb8: xor ebp,ebp
0x4cba: call 0x19b0
0x4cbf: test r12,r12
0x4cc2: mov r13,rax
0x4cc5: mov eax,dword ptr [rax]
0x4cc7: sete bpl
0x4ccb: or ebp,dword ptr [rbx+0x4]
0x4cce: lea r10,[rbx+0x8]
0x4cd2: sub rsp,0x8
0x4cd6: mov r8d,dword ptr [rbx]
0x4cd9: mov rcx,r15
0x4cdc: mov dword ptr [rsp+0x14],eax
0x4ce0: push qword ptr [rbx+0x30]
0x4ce3: mov rdx,r14
0x4ce6: push qword ptr [rbx+0x28]
0x4ce9: push r10
0x4ceb: xor esi,esi
0x4ced: mov r9d,ebp
0x4cf0: xor edi,edi
0x4cf2: mov qword ptr [rsp+0x40],r10
0x4cf7: call 0x3710
0x4cfc: lea rsi,[rax+0x1]
0x4d00: mov qword ptr [rsp+0x48],rax
0x4d05: add rsp,0x20
0x4d09: mov rdi,rsi
0x4d0c: mov qword ptr [rsp+0x18],rsi
0x4d11: call 0x6b80
0x4d16: mov qword ptr [rsp+0x10],rax
0x4d1b: sub rsp,0x8
0x4d1f: push qword ptr [rbx+0x30]
0x4d22: push qword ptr [rbx+0x28]
0x4d25: mov r10,qword ptr [rsp+0x38]
0x4d2a: mov r9d,ebp
0x4d2d: mov r8d,dword ptr [rbx]
0x4d30: mov rcx,r15
0x4d33: mov rdx,r14
0x4d36: mov rdi,rax
0x4d39: push r10
0x4d3b: mov rsi,qword ptr [rsp+0x38]
0x4d40: call 0x3710
0x4d45: mov eax,dword ptr [rsp+0x2c]
0x4d49: add rsp,0x20
0x4d4d: test r12,r12
0x4d50: mov dword ptr [r13+0x0],eax
0x4d54: je 0x4d5f
0x4d56: mov r11,qword ptr [rsp+0x28]
0x4d5b: mov qword ptr [r12],r11
0x4d5f: mov rax,qword ptr [rsp+0x10]
0x4d64: add rsp,0x38
0x4d68: pop rbx
0x4d69: pop rbp
0x4d6a: pop r12
0x4d6c: pop r13
0x4d6e: pop r14
0x4d70: pop r15
0x4d72: ret 
0x4d73: nop dword ptr [rax]
0x4d76: nop word ptr cs:[rax+rax*1+0x0]
0x4d80: mov rcx,rdx
0x4d83: xor edx,edx
0x4d85: jmp 0x4c90
0x4d8a: nop word ptr [rax+rax*1+0x0]
0x4d90: mov eax,dword ptr [rip+0x2082c2]
0x4d96: push r12
0x4d98: mov r12,qword ptr [rip+0x2082c1]
0x4d9f: push rbp
0x4da0: push rbx
0x4da1: cmp eax,0x1
0x4da4: jle 0x4dd1
0x4da6: sub eax,0x2
0x4da9: lea rbx,[r12+0x18]
0x4dae: shl rax,0x4
0x4db2: lea rbp,[r12+rax*1+0x28]
0x4db7: nop word ptr [rax+rax*1+0x0]
0x4dc0: mov rdi,qword ptr [rbx]
0x4dc3: add rbx,0x10
0x4dc7: call 0x1dd0
0x4dcc: cmp rbx,rbp
0x4dcf: jne 0x4dc0
0x4dd1: mov rdi,qword ptr [r12+0x8]
0x4dd6: lea rbx,[rip+0x208323]
0x4ddd: cmp rdi,rbx
0x4de0: je 0x4df9
0x4de2: call 0x1dd0
0x4de7: mov qword ptr [rip+0x20827e],0x100
0x4df2: mov qword ptr [rip+0x20827f],rbx
0x4df9: lea rbx,[rip+0x208270]
0x4e00: cmp r12,rbx
0x4e03: je 0x4e14
0x4e05: mov rdi,r12
0x4e08: call 0x1dd0
0x4e0d: mov qword ptr [rip+0x20824c],rbx
0x4e14: pop rbx
0x4e15: mov dword ptr [rip+0x208239],0x1
0x4e1f: pop rbp
0x4e20: pop r12
0x4e22: ret 
0x4e23: nop dword ptr [rax]
0x4e26: nop word ptr cs:[rax+rax*1+0x0]
0x4e30: lea rcx,[rip+0x2083c9]
0x4e37: mov rdx,0xffffffffffffffff
0x4e3e: jmp 0x4950
0x4e43: nop dword ptr [rax]
0x4e46: nop word ptr cs:[rax+rax*1+0x0]
0x4e50: lea rcx,[rip+0x2083a9]
0x4e57: jmp 0x4950
0x4e5c: nop dword ptr [rax+0x0]
0x4e60: lea rcx,[rip+0x208399]
0x4e67: mov rsi,rdi
0x4e6a: mov rdx,0xffffffffffffffff
0x4e71: xor edi,edi
0x4e73: jmp 0x4950
0x4e78: nop dword ptr [rax+rax*1+0x0]
0x4e80: lea rcx,[rip+0x208379]
0x4e87: mov rdx,rsi
0x4e8a: mov rsi,rdi
0x4e8d: xor edi,edi
0x4e8f: jmp 0x4950
0x4e94: xchg ax,ax
0x4e96: nop word ptr cs:[rax+rax*1+0x0]
0x4ea0: sub rsp,0x48
0x4ea4: mov rax,rdx
0x4ea7: mov rdx,qword ptr fs:0x28
0x4eb0: mov qword ptr [rsp+0x38],rdx
0x4eb5: xor edx,edx
0x4eb7: cmp esi,0xa
0x4eba: je 0x4f24
0x4ebc: mov dword ptr [rsp],esi
0x4ebf: mov rcx,rsp
0x4ec2: mov rdx,0xffffffffffffffff
0x4ec9: mov rsi,rax
0x4ecc: mov qword ptr [rsp+0x4],0x0
0x4ed5: mov qword ptr [rsp+0xc],0x0
0x4ede: mov qword ptr [rsp+0x14],0x0
0x4ee7: mov qword ptr [rsp+0x1c],0x0
0x4ef0: mov qword ptr [rsp+0x24],0x0
0x4ef9: mov qword ptr [rsp+0x2c],0x0
0x4f02: mov dword ptr [rsp+0x34],0x0
0x4f0a: call 0x4950
0x4f0f: mov rcx,qword ptr [rsp+0x38]
0x4f14: xor rcx,qword ptr fs:0x28
0x4f1d: jne 0x4f29
0x4f1f: add rsp,0x48
0x4f23: ret 
0x4f24: call 0x19a0
0x4f29: call 0x1ad0
0x4f2e: xchg ax,ax
0x4f30: sub rsp,0x48
0x4f34: mov rax,rdx
0x4f37: mov rdx,rcx
0x4f3a: mov rcx,qword ptr fs:0x28
0x4f43: mov qword ptr [rsp+0x38],rcx
0x4f48: xor ecx,ecx
0x4f4a: cmp esi,0xa
0x4f4d: je 0x4fb0
0x4f4f: mov dword ptr [rsp],esi
0x4f52: mov rcx,rsp
0x4f55: mov rsi,rax
0x4f58: mov qword ptr [rsp+0x4],0x0
0x4f61: mov qword ptr [rsp+0xc],0x0
0x4f6a: mov qword ptr [rsp+0x14],0x0
0x4f73: mov qword ptr [rsp+0x1c],0x0
0x4f7c: mov qword ptr [rsp+0x24],0x0
0x4f85: mov qword ptr [rsp+0x2c],0x0
0x4f8e: mov dword ptr [rsp+0x34],0x0
0x4f96: call 0x4950
0x4f9b: mov rdx,qword ptr [rsp+0x38]
0x4fa0: xor rdx,qword ptr fs:0x28
0x4fa9: jne 0x4fb5
0x4fab: add rsp,0x48
0x4faf: ret 
0x4fb0: call 0x19a0
0x4fb5: call 0x1ad0
0x4fba: nop word ptr [rax+rax*1+0x0]
0x4fc0: mov rdx,rsi
0x4fc3: mov esi,edi
0x4fc5: xor edi,edi
0x4fc7: jmp 0x4ea0
0x4fcc: nop dword ptr [rax+0x0]
0x4fd0: mov rcx,rdx
0x4fd3: mov rdx,rsi
0x4fd6: mov esi,edi
0x4fd8: xor edi,edi
0x4fda: jmp 0x4f30
0x4fdf: nop 
0x4fe0: sub rsp,0x48
0x4fe4: mov ecx,edx
0x4fe6: mov rax,qword ptr fs:0x28
0x4fef: mov qword ptr [rsp+0x38],rax
0x4ff4: xor eax,eax
0x4ff6: mov rax,qword ptr [rip+0x208233]
0x4ffd: mov r8,rsp
0x5000: and ecx,0x1f
0x5003: movdqa xmm0,XMMword ptr [rip+0x2081f5]
0x500b: mov qword ptr [rsp+0x30],rax
0x5010: mov eax,edx
0x5012: movaps XMMword ptr [rsp],xmm0
0x5016: shr al,0x5
0x5019: movzx eax,al
0x501c: lea r9,[r8+rax*4+0x8]
0x5021: movdqa xmm0,XMMword ptr [rip+0x2081e7]
0x5029: movaps XMMword ptr [rsp+0x10],xmm0
0x502e: movdqa xmm0,XMMword ptr [rip+0x2081ea]
0x5036: movaps XMMword ptr [rsp+0x20],xmm0
0x503b: mov edx,dword ptr [r9]
0x503e: mov eax,edx
0x5040: shr eax,cl
0x5042: not eax
0x5044: and eax,0x1
0x5047: shl eax,cl
0x5049: mov rcx,r8
0x504c: xor eax,edx
0x504e: mov rdx,rsi
0x5051: mov rsi,rdi
0x5054: mov dword ptr [r9],eax
0x5057: xor edi,edi
0x5059: call 0x4950
0x505e: mov rsi,qword ptr [rsp+0x38]
0x5063: xor rsi,qword ptr fs:0x28
0x506c: jne 0x5073
0x506e: add rsp,0x48
0x5072: ret 
0x5073: call 0x1ad0
0x5078: nop dword ptr [rax+rax*1+0x0]
0x5080: movsx edx,sil
0x5084: mov rsi,0xffffffffffffffff
0x508b: jmp 0x4fe0
0x5090: mov edx,0x3a
0x5095: mov rsi,0xffffffffffffffff
0x509c: jmp 0x4fe0
0x50a1: nop dword ptr [rax+rax*1+0x0]
0x50a6: nop word ptr cs:[rax+rax*1+0x0]
0x50b0: mov edx,0x3a
0x50b5: jmp 0x4fe0
0x50ba: nop word ptr [rax+rax*1+0x0]
0x5144: call 0x19a0
0x5149: call 0x1ad0
0x514e: xchg ax,ax
0x5150: sub rsp,0x48
0x5154: mov r9,rcx
0x5157: mov rcx,qword ptr [rip+0x2080d2]
0x515e: movdqa xmm0,XMMword ptr [rip+0x20809a]
0x5166: mov rax,qword ptr fs:0x28
0x516f: mov qword ptr [rsp+0x38],rax
0x5174: xor eax,eax
0x5176: movaps XMMword ptr [rsp],xmm0
0x517a: test rsi,rsi
0x517d: mov qword ptr [rsp+0x30],rcx
0x5182: mov dword ptr [rsp],0xa
0x5189: movdqa xmm0,XMMword ptr [rip+0x20807f]
0x5191: movaps XMMword ptr [rsp+0x10],xmm0
0x5196: movdqa xmm0,XMMword ptr [rip+0x208082]
0x519e: movaps XMMword ptr [rsp+0x20],xmm0
0x51a3: je 0x51d7
0x51a5: test rdx,rdx
0x51a8: je 0x51d7
0x51aa: mov qword ptr [rsp+0x28],rsi
0x51af: mov qword ptr [rsp+0x30],rdx
0x51b4: mov rcx,rsp
0x51b7: mov rdx,r8
0x51ba: mov rsi,r9
0x51bd: call 0x4950
0x51c2: mov rdi,qword ptr [rsp+0x38]
0x51c7: xor rdi,qword ptr fs:0x28
0x51d0: jne 0x51dc
0x51d2: add rsp,0x48
0x51d6: ret 
0x51d7: call 0x19a0
0x51dc: call 0x1ad0
0x51e1: nop dword ptr [rax+rax*1+0x0]
0x51e6: nop word ptr cs:[rax+rax*1+0x0]
0x51f0: mov r8,0xffffffffffffffff
0x51f7: jmp 0x5150
0x51fc: nop dword ptr [rax+0x0]
0x5200: mov rcx,rdx
0x5203: mov r8,0xffffffffffffffff
0x520a: mov rdx,rsi
0x520d: mov rsi,rdi
0x5210: xor edi,edi
0x5212: jmp 0x5150
0x5217: nop word ptr [rax+rax*1+0x0]
0x5220: mov r8,rcx
0x5223: mov rcx,rdx
0x5226: mov rdx,rsi
0x5229: mov rsi,rdi
0x522c: xor edi,edi
0x522e: jmp 0x5150
0x5233: nop dword ptr [rax]
0x5236: nop word ptr cs:[rax+rax*1+0x0]
0x5240: lea rcx,[rip+0x207dd9]
0x5247: jmp 0x4950
0x524c: nop dword ptr [rax+0x0]
0x5250: lea rcx,[rip+0x207dc9]
0x5257: mov rdx,rsi
0x525a: mov rsi,rdi
0x525d: xor edi,edi
0x525f: jmp 0x4950
0x5264: xchg ax,ax
0x5266: nop word ptr cs:[rax+rax*1+0x0]
0x5270: lea rcx,[rip+0x207da9]
0x5277: mov rdx,0xffffffffffffffff
0x527e: jmp 0x4950
0x5283: nop dword ptr [rax]
0x5286: nop word ptr cs:[rax+rax*1+0x0]
0x52a8: nop dword ptr [rax+rax*1+0x0]
0x52b0: push rbx
0x52b1: mov rbx,rdi
0x52b4: mov edi,0x18
0x52b9: call 0x6b80
0x52be: mov qword ptr [rax],rbx
0x52c1: mov qword ptr [rax+0x10],0x0
0x52c9: mov qword ptr [rax+0x8],0x0
0x52d1: pop rbx
0x52d2: ret 
0x52d3: nop dword ptr [rax]
0x52d6: nop word ptr cs:[rax+rax*1+0x0]
0x530d: nop dword ptr [rax]
0x5314: xchg ax,ax
0x5316: nop word ptr cs:[rax+rax*1+0x0]
0x5320: mov rax,qword ptr [rdi]
0x5323: ret 
0x5324: xchg ax,ax
0x5326: nop word ptr cs:[rax+rax*1+0x0]
0x536f: nop 
0x5431: nop dword ptr [rax+0x0]
0x5445: call 0x1ad0
0x544a: nop word ptr [rax+rax*1+0x0]
0x5450: push rbx
0x5451: mov rdx,0xffffffffffffffff
0x5458: mov rbx,rdi
0x545b: mov esi,0x18
0x5460: call 0x1d00
0x5465: mov rdi,rbx
0x5468: pop rbx
0x5469: jmp 0x1dd0
0x546e: xchg ax,ax
0x5470: push r13
0x5472: push r12
0x5474: push rbp
0x5475: push rbx
0x5476: mov rbx,rdi
0x5479: sub rsp,0x8
0x547d: mov rdi,qword ptr [rdi]
0x5480: call 0x5dc0
0x5485: mov r12d,eax
0x5488: call 0x19b0
0x548d: mov r13d,dword ptr [rax]
0x5490: mov rdi,rbx
0x5493: mov rdx,0xffffffffffffffff
0x549a: mov esi,0x18
0x549f: mov rbp,rax
0x54a2: call 0x1d00
0x54a7: mov rdi,rbx
0x54aa: call 0x1dd0
0x54af: mov dword ptr [rbp+0x0],r13d
0x54b3: add rsp,0x8
0x54b7: mov eax,r12d
0x54ba: pop rbx
0x54bb: pop rbp
0x54bc: pop r12
0x54be: pop r13
0x54c0: ret 
0x54c1: nop word ptr cs:[rax+rax*1+0x0]
0x54cb: nop dword ptr [rax+rax*1+0x0]
0x54d0: mov rax,qword ptr [rdi]
0x54d3: xor edx,edx
0x54d5: div rsi
0x54d8: mov rax,rdx
0x54db: ret 
0x54dc: nop dword ptr [rax+0x0]
0x54e0: mov rax,qword ptr [rsi]
0x54e3: cmp qword ptr [rdi],rax
0x54e6: sete al
0x54e9: ret 
0x54ea: nop word ptr [rax+rax*1+0x0]
0x5517: nop word ptr [rax+rax*1+0x0]
0x5598: nop dword ptr [rax+rax*1+0x0]
0x5624: nop dword ptr [rax+0x0]
0x56a7: nop word ptr [rax+rax*1+0x0]
0x5708: mov rsi,qword ptr [rsp+0x28]
0x570d: mov rdi,qword ptr [rsp+0x8]
0x5712: mov r15,rax
0x5715: mov qword ptr [rsp+0x30],r14
0x571a: mov qword ptr [rsp+0x38],0x0
0x5723: call 0x8b80
0x5728: test r15,r15
0x572b: mov r9,rax
0x572e: je 0x5810
0x5734: test r9,r9
0x5737: je 0x57f0
0x573d: mov r14,qword ptr [r9+0x8]
0x5741: mov rax,qword ptr [r15+0x8]
0x5745: mov qword ptr [r15+0x8],r14
0x5749: mov rsi,r15
0x574c: mov r14,qword ptr [rsp+0x8]
0x5751: mov qword ptr [rsp+0x18],r9
0x5756: mov qword ptr [r9+0x8],rax
0x575a: mov rdi,r14
0x575d: call 0x8b20
0x5762: test rax,rax
0x5765: je 0x584c
0x576b: mov r9,qword ptr [rsp+0x18]
0x5770: mov rdi,r14
0x5773: mov rsi,r9
0x5776: call 0x8b20
0x577b: test rax,rax
0x577e: je 0x584c
0x5784: mov rax,qword ptr [r15+0x8]
0x5788: mov qword ptr [rbx+rbp*8],rax
0x578c: add rbp,0x1
0x5790: cmp r12,rbp
0x5793: ja 0x56cf
0x57e2: nop word ptr [rax+rax*1+0x0]
0x57ef: nop 
0x57f0: mov edi,0x10
0x57f5: call 0x6b80
0x57fa: mov r9,rax
0x57fd: mov qword ptr [rax+0x8],r14
0x5801: mov qword ptr [rax],r14
0x5804: jmp 0x5741
0x5809: nop dword ptr [rax+0x0]
0x5810: mov edi,0x10
0x5815: mov qword ptr [rsp+0x18],rax
0x581a: call 0x6b80
0x581f: mov r9,qword ptr [rsp+0x18]
0x5824: mov r15,rax
0x5827: mov qword ptr [rax+0x8],rbp
0x582b: mov qword ptr [rax],rbp
0x582e: jmp 0x5734
0x5833: nop dword ptr [rax+rax*1+0x0]
0x5847: call 0x1ad0
0x586f: nop 
0x58cd: nop dword ptr [rax]
0x597d: nop dword ptr [rax]
0x5a12: nop word ptr [rax+rax*1+0x0]
0x5a44: nop dword ptr [rax+0x0]
0x5b12: nop word ptr [rax+rax*1+0x0]
0x5b1f: call 0x1ad0
0x5b6d: mov r15,r14
0x5b70: mov r8d,0x4
0x5b76: sub r15,rbp
0x5b79: mov qword ptr [rsp+0x8],r8
0x5b7e: cmp r15,0x4
0x5b82: cmova r15,r8
0x5b86: lea rdx,[rbp+r15*1+0x0]
0x5b8b: add rbp,r13
0x5b8e: mov qword ptr [rsp],rdx
0x5b92: call 0x1a40
0x5b97: mov rdx,qword ptr [rsp]
0x5b9b: mov dword ptr [rsp+0x10],eax
0x5b9f: mov ecx,r15d
0x5ba2: mov rdi,rbp
0x5ba5: mov rsi,r12
0x5ba8: mov r8,qword ptr [rsp+0x8]
0x5bad: rep movs byte ptr es:[rdi],byte ptr ds:[rsi]
0x5baf: cmp rdx,0x7ff
0x5bb6: jg 0x5a05
0x5bbc: sub r14,rdx
0x5bbf: cmp r14,0x4
0x5bc3: cmova r14,r8
0x5bc7: call 0x1d60
0x5bcc: mov rdx,qword ptr [rsp]
0x5bd0: mov dword ptr [rsp+0x10],eax
0x5bd4: mov ecx,r14d
0x5bd7: mov rsi,r12
0x5bda: lea rax,[r13+rdx*1+0x0]
0x5bdf: add r14,rdx
0x5be2: cmp r14,0x7ff
0x5be9: mov rdi,rax
0x5bec: rep movs byte ptr es:[rdi],byte ptr ds:[rsi]
0x5bee: ja 0x5a05
0x5bf4: jmp 0x5a7f
0x5bf9: nop dword ptr [rax+0x0]
0x5c00: mov qword ptr [rdi+0x8],rsi
0x5c04: ret 
0x5c05: nop 
0x5c06: nop word ptr cs:[rax+rax*1+0x0]
0x5c10: mov qword ptr [rdi+0x10],rsi
0x5c14: ret 
0x5c15: nop 
0x5c16: nop word ptr cs:[rax+rax*1+0x0]
0x5c53: nop dword ptr [rax+rax*1+0x0]
0x5c72: mov rcx,qword ptr [r12]
0x5ca1: nop dword ptr [rax+0x0]
0x5d08: nop dword ptr [rax+rax*1+0x0]
0x5d4e: xchg ax,ax
0x5db6: nop word ptr cs:[rax+rax*1+0x0]
0x5dc0: push rbp
0x5dc1: push rbx
0x5dc2: mov rdx,0xffffffffffffffff
0x5dc9: mov rbx,rdi
0x5dcc: mov esi,0x1038
0x5dd1: sub rsp,0x8
0x5dd5: mov rbp,qword ptr [rdi]
0x5dd8: call 0x1d00
0x5ddd: mov rdi,rbx
0x5de0: call 0x1dd0
0x5de5: test rbp,rbp
0x5de8: je 0x5e00
0x5dea: add rsp,0x8
0x5dee: mov rdi,rbp
0x5df1: pop rbx
0x5df2: pop rbp
0x5df3: jmp 0x7780
0x5df8: nop dword ptr [rax+rax*1+0x0]
0x5e00: add rsp,0x8
0x5e04: xor eax,eax
0x5e06: pop rbx
0x5e07: pop rbp
0x5e08: ret 
0x5e09: nop dword ptr [rax+0x0]
0x609e: xchg ax,ax
0x62e0: push r15
0x62e2: push r14
0x62e4: push r13
0x62e6: push r12
0x62e8: mov r13,rdi
0x62eb: push rbp
0x62ec: push rbx
0x62ed: sub rsp,0xb8
0x62f4: mov qword ptr [rsp+0x8],rsi
0x62f9: mov rax,qword ptr fs:0x28
0x6302: mov qword ptr [rsp+0xa8],rax
0x630a: xor eax,eax
0x630c: call 0x1c20
0x6311: lea rdx,[rsp+0x10]
0x6316: mov esi,eax
0x6318: mov edi,0x1
0x631d: call 0x1c70
0x6322: test eax,eax
0x6324: js 0x633a
0x6326: mov eax,dword ptr [rsp+0x28]
0x632a: and eax,0xf000
0x632f: cmp eax,0x8000
0x6334: je 0x6488
0x633a: mov ebx,0x2000
0x633f: mov rdi,rbx
0x6342: call 0x1c40
0x6347: test rax,rax
0x634a: mov r12,rax
0x634d: je 0x63f0
0x6353: xor ebp,ebp
0x6355: mov r15,0xffffffffffffffff
0x635c: jmp 0x639a
0x635e: xchg ax,ax
0x6360: cmp rbx,0xffffffffffffffff
0x6364: je 0x6440
0x636a: mov rax,rbx
0x636d: mov rdi,r12
0x6370: shr rax,1
0x6373: mov rdx,rax
0x6376: add rax,rbx
0x6379: not rdx
0x637c: cmp rdx,rbx
0x637f: cmovbe rax,r15
0x6383: mov rsi,rax
0x6386: mov rbx,rax
0x6389: call 0x1ca0
0x638e: test rax,rax
0x6391: je 0x6420
0x6397: mov r12,rax
0x639a: mov r14,rbx
0x639d: lea rdi,[r12+rbp*1]
0x63a1: mov rcx,r13
0x63a4: sub r14,rbp
0x63a7: mov esi,0x1
0x63ac: mov rdx,r14
0x63af: call 0x1a20
0x63b4: add rbp,rax
0x63b7: cmp r14,rax
0x63ba: je 0x6360
0x63bc: call 0x19b0
0x63c1: mov rdi,r13
0x63c4: mov r14,rax
0x63c7: mov r15d,dword ptr [rax]
0x63ca: call 0x1a10
0x63cf: test eax,eax
0x63d1: jne 0x642b
0x63d3: sub rbx,0x1
0x63d7: cmp rbx,rbp
0x63da: ja 0x6460
0x63e0: mov rax,qword ptr [rsp+0x8]
0x63e5: mov byte ptr [r12+rbp*1],0x0
0x63ea: mov qword ptr [rax],rbp
0x63ed: nop dword ptr [rax]
0x63f0: mov rcx,qword ptr [rsp+0xa8]
0x63f8: xor rcx,qword ptr fs:0x28
0x6401: mov rax,r12
0x6404: jne 0x64b3
0x640a: add rsp,0xb8
0x6411: pop rbx
0x6412: pop rbp
0x6413: pop r12
0x6415: pop r13
0x6417: pop r14
0x6419: pop r15
0x641b: ret 
0x641c: nop dword ptr [rax+0x0]
0x6420: call 0x19b0
0x6425: mov r15d,dword ptr [rax]
0x6428: mov r14,rax
0x642b: mov rdi,r12
0x642e: xor r12d,r12d
0x6431: call 0x1dd0
0x6436: mov dword ptr [r14],r15d
0x6439: jmp 0x63f0
0x643b: nop dword ptr [rax+rax*1+0x0]
0x6440: call 0x19b0
0x6445: mov r15d,0xc
0x644b: mov r14,rax
0x644e: mov rdi,r12
0x6451: call 0x1dd0
0x6456: xor r12d,r12d
0x6459: mov dword ptr [r14],r15d
0x645c: jmp 0x63f0
0x645e: xchg ax,ax
0x6460: lea rsi,[rbp+0x1]
0x6464: mov rdi,r12
0x6467: call 0x1ca0
0x646c: test rax,rax
0x646f: cmovne r12,rax
0x6473: mov rax,qword ptr [rsp+0x8]
0x6478: mov byte ptr [r12+rbp*1],0x0
0x647d: mov qword ptr [rax],rbp
0x6480: jmp 0x63f0
0x6485: nop dword ptr [rax]
0x6488: mov rdi,r13
0x648b: call 0x19e0
0x6490: test rax,rax
0x6493: js 0x633a
0x6499: mov rbx,qword ptr [rsp+0x40]
0x649e: cmp rbx,rax
0x64a1: jle 0x633a
0x64a7: sub rbx,rax
0x64aa: add rbx,0x1
0x64ae: jmp 0x633f
0x64b3: call 0x1ad0
0x64b8: nop dword ptr [rax+rax*1+0x0]
0x64c0: push r13
0x64c2: push r12
0x64c4: push rbp
0x64c5: push rbx
0x64c6: mov rbp,rsi
0x64c9: mov rsi,rdx
0x64cc: sub rsp,0x8
0x64d0: call 0x1d30
0x64d5: test rax,rax
0x64d8: je 0x6530
0x64da: mov rsi,rbp
0x64dd: mov rdi,rax
0x64e0: mov rbx,rax
0x64e3: call 0x62e0
0x64e8: mov rbp,rax
0x64eb: call 0x19b0
0x64f0: mov rdi,rbx
0x64f3: mov r12,rax
0x64f6: mov r13d,dword ptr [rax]
0x64f9: call 0x7780
0x64fe: test eax,eax
0x6500: jne 0x6510
0x6502: add rsp,0x8
0x6506: mov rax,rbp
0x6509: pop rbx
0x650a: pop rbp
0x650b: pop r12
0x650d: pop r13
0x650f: ret 
0x6510: test rbp,rbp
0x6513: je 0x6521
0x6515: mov rdi,rbp
0x6518: mov r13d,dword ptr [r12]
0x651c: call 0x1dd0
0x6521: mov dword ptr [r12],r13d
0x6525: xor ebp,ebp
0x6527: jmp 0x6502
0x6529: nop dword ptr [rax+0x0]
0x6530: xor ebp,ebp
0x6532: jmp 0x6502
0x6534: xchg ax,ax
0x6536: nop word ptr cs:[rax+rax*1+0x0]
0x6540: lea rdx,[rip+0x375e]
0x6547: jmp 0x64c0
0x654c: nop dword ptr [rax+0x0]
0x6550: lea rdx,[rip+0x375d]
0x6557: jmp 0x64c0
0x655c: nop dword ptr [rax+0x0]
0x6606: nop word ptr cs:[rax+rax*1+0x0]
0x6695: nop dword ptr [rax]
0x6698: mov r8,rcx
0x669b: mov rcx,rdx
0x669e: lea rdx,[rip+0x361e]
0x66a5: mov esi,0x1
0x66aa: xor eax,eax
0x66ac: call 0x1d90
0x66b1: jmp 0x659c
0x66b6: nop word ptr cs:[rax+rax*1+0x0]
0x6715: nop dword ptr [rax]
0x6751: nop dword ptr [rax+0x0]
0x6798: nop dword ptr [rax+rax*1+0x0]
0x67e7: nop word ptr [rax+rax*1+0x0]
0x6844: nop dword ptr [rax+0x0]
0x6872: nop word ptr [rax+rax*1+0x0]
0x6926: nop word ptr cs:[rax+rax*1+0x0]
0x6977: nop word ptr [rax+rax*1+0x0]
0x6980: xor r9d,r9d
0x6983: cmp qword ptr [r8],0x0
0x6987: je 0x699b
0x6989: nop dword ptr [rax+0x0]
0x6990: add r9,0x1
0x6994: cmp qword ptr [r8+r9*8],0x0
0x6999: jne 0x6990
0x699b: jmp 0x6560
0x69a0: sub rsp,0x68
0x69a4: mov r10,r8
0x69a7: xor r9d,r9d
0x69aa: mov rax,qword ptr fs:0x28
0x69b3: mov qword ptr [rsp+0x58],rax
0x69b8: xor eax,eax
0x69ba: mov r8,rsp
0x69bd: nop dword ptr [rax]
0x69c0: mov eax,dword ptr [r10]
0x69c3: cmp eax,0x2f
0x69c6: ja 0x6a0a
0x69c8: mov r11d,eax
0x69cb: add r11,qword ptr [r10+0x10]
0x69cf: add eax,0x8
0x69d2: mov dword ptr [r10],eax
0x69d5: mov rax,qword ptr [r11]
0x69d8: test rax,rax
0x69db: mov qword ptr [r8+r9*8],rax
0x69df: je 0x69eb
0x69e1: add r9,0x1
0x69e5: cmp r9,0xa
0x69e9: jne 0x69c0
0x69eb: call 0x6560
0x69f0: mov rax,qword ptr [rsp+0x58]
0x69f5: xor rax,qword ptr fs:0x28
0x69fe: jne 0x6a05
0x6a00: add rsp,0x68
0x6a04: ret 
0x6a05: call 0x1ad0
0x6a0a: mov r11,qword ptr [r10+0x8]
0x6a0e: lea rax,[r11+0x8]
0x6a12: mov qword ptr [r10+0x8],rax
0x6a16: jmp 0x69d5
0x6a18: nop dword ptr [rax+rax*1+0x0]
0x6ae0: call 0x1ad0
0x6aec: mov rax,rbx
0x6aef: add rbx,0x8
0x6af3: jmp 0x6aa6
0x6af5: nop 
0x6af6: nop word ptr cs:[rax+rax*1+0x0]
0x6b00: push rbx
0x6b01: lea rsi,[rip+0x3209]
0x6b08: mov edx,0x5
0x6b0d: xor edi,edi
0x6b0f: call 0x1aa0
0x6b14: lea rdx,[rip+0x320b]
0x6b1b: mov rsi,rax
0x6b1e: mov edi,0x1
0x6b23: xor eax,eax
0x6b25: call 0x1cd0
0x6b2a: lea rsi,[rip+0x320b]
0x6b31: mov edx,0x5
0x6b36: xor edi,edi
0x6b38: call 0x1aa0
0x6b3d: lea rcx,[rip+0x2b04]
0x6b44: lea rdx,[rip+0x2634]
0x6b4b: mov rsi,rax
0x6b4e: mov edi,0x1
0x6b53: xor eax,eax
0x6b55: call 0x1cd0
0x6b5a: mov rbx,qword ptr [rip+0x206527]
0x6b61: lea rsi,[rip+0x3400]
0x6b68: xor edi,edi
0x6b6a: mov edx,0x5
0x6b6f: call 0x1aa0
0x6b74: mov rsi,rbx
0x6b77: mov rdi,rax
0x6b7a: pop rbx
0x6b7b: jmp 0x1be0
0x6b9a: nop word ptr [rax+rax*1+0x0]
0x6ba0: mov rax,rdi
0x6ba3: mul rsi
0x6ba6: mov rdi,rax
0x6ba9: seto al
0x6bac: test rdi,rdi
0x6baf: js 0x6bbb
0x6bb1: movzx eax,al
0x6bb4: test rax,rax
0x6bb7: jne 0x6bbb
0x6bb9: jmp 0x6b80
0x6bbb: sub rsp,0x8
0x6bbf: call 0x6dd0
0x6bc4: xchg ax,ax
0x6bc6: nop word ptr cs:[rax+rax*1+0x0]
0x6bd0: jmp 0x6b80
0x6bd2: nop dword ptr [rax+0x0]
0x6bd6: nop word ptr cs:[rax+rax*1+0x0]
0x6c02: nop word ptr [rax+rax*1+0x0]
0x6c16: nop word ptr cs:[rax+rax*1+0x0]
0x6c20: mov rax,rsi
0x6c23: mul rdx
0x6c26: mov rsi,rax
0x6c29: seto al
0x6c2c: test rsi,rsi
0x6c2f: js 0x6c3b
0x6c31: movzx eax,al
0x6c34: test rax,rax
0x6c37: jne 0x6c3b
0x6c39: jmp 0x6be0
0x6c3b: sub rsp,0x8
0x6c3f: call 0x6dd0
0x6c44: xchg ax,ax
0x6c46: nop word ptr cs:[rax+rax*1+0x0]
0x6c50: test rdi,rdi
0x6c53: mov r9,rdx
0x6c56: mov rcx,qword ptr [rsi]
0x6c59: je 0x6c90
0x6c5b: xor edx,edx
0x6c5d: movabs rax,0x5555555555555554
0x6c67: div r9
0x6c6a: cmp rax,rcx
0x6c6d: jbe 0x6cab
0x6c6f: mov rax,rcx
0x6c72: shr rax,1
0x6c75: lea rcx,[rax+rcx*1+0x1]
0x6c7a: mov qword ptr [rsi],rcx
0x6c7d: imul rcx,r9
0x6c81: mov rsi,rcx
0x6c84: jmp 0x6be0
0x6c89: nop dword ptr [rax+0x0]
0x6c90: test rcx,rcx
0x6c93: je 0x6cb8
0x6c95: mov rax,rcx
0x6c98: mul r9
0x6c9b: seto dl
0x6c9e: test rax,rax
0x6ca1: movzx edx,dl
0x6ca4: js 0x6cab
0x6ca6: test rdx,rdx
0x6ca9: je 0x6c7a
0x6cab: sub rsp,0x8
0x6caf: call 0x6dd0
0x6cb4: nop dword ptr [rax+0x0]
0x6cb8: xor edx,edx
0x6cba: mov eax,0x80
0x6cbf: xor r8d,r8d
0x6cc2: div r9
0x6cc5: test rax,rax
0x6cc8: sete r8b
0x6ccc: lea rcx,[r8+rax*1]
0x6cd0: jmp 0x6c95
0x6cd2: nop dword ptr [rax+0x0]
0x6cd6: nop word ptr cs:[rax+rax*1+0x0]
0x6ce0: test rdi,rdi
0x6ce3: mov rax,qword ptr [rsi]
0x6ce6: je 0x6d10
0x6ce8: movabs rdx,0x5555555555555553
0x6cf2: cmp rax,rdx
0x6cf5: ja 0x6d21
0x6cf7: mov rdx,rax
0x6cfa: shr rdx,1
0x6cfd: lea rax,[rdx+rax*1+0x1]
0x6d02: mov qword ptr [rsi],rax
0x6d05: mov rsi,rax
0x6d08: jmp 0x6be0
0x6d0d: nop dword ptr [rax]
0x6d10: test rax,rax
0x6d13: mov edx,0x80
0x6d18: cmove rax,rdx
0x6d1c: test rax,rax
0x6d1f: jns 0x6d02
0x6d21: sub rsp,0x8
0x6d25: call 0x6dd0
0x6d2a: nop word ptr [rax+rax*1+0x0]
0x6d30: push rbx
0x6d31: mov rbx,rdi
0x6d34: call 0x6b80
0x6d39: mov rdx,rbx
0x6d3c: xor esi,esi
0x6d3e: mov rdi,rax
0x6d41: pop rbx
0x6d42: jmp 0x1b80
0x6d47: nop word ptr [rax+rax*1+0x0]
0x6d50: mov rax,rdi
0x6d53: sub rsp,0x8
0x6d57: mul rsi
0x6d5a: seto dl
0x6d5d: test rax,rax
0x6d60: js 0x6d79
0x6d62: movzx edx,dl
0x6d65: test rdx,rdx
0x6d68: jne 0x6d79
0x6d6a: call 0x1bf0
0x6d6f: test rax,rax
0x6d72: je 0x6d79
0x6d74: add rsp,0x8
0x6d78: ret 
0x6d79: call 0x6dd0
0x6d7e: xchg ax,ax
0x6d80: push rbp
0x6d81: push rbx
0x6d82: mov rbp,rdi
0x6d85: mov rdi,rsi
0x6d88: mov rbx,rsi
0x6d8b: sub rsp,0x8
0x6d8f: call 0x6b80
0x6d94: add rsp,0x8
0x6d98: mov rdx,rbx
0x6d9b: mov rsi,rbp
0x6d9e: pop rbx
0x6d9f: pop rbp
0x6da0: mov rdi,rax
0x6da3: jmp 0x1c10
0x6da8: nop dword ptr [rax+rax*1+0x0]
0x6db0: push rbx
0x6db1: mov rbx,rdi
0x6db4: call 0x1ac0
0x6db9: mov rdi,rbx
0x6dbc: lea rsi,[rax+0x1]
0x6dc0: pop rbx
0x6dc1: jmp 0x6d80
0x6dc3: nop word ptr cs:[rax+rax*1+0x0]
0x6dcd: nop dword ptr [rax]
0x6e00: call 0x19a0
0x6e05: nop word ptr cs:[rax+rax*1+0x0]
0x6e0f: nop 
0x6eb0: mov rbp,qword ptr [rsp]
0x6ed6: nop word ptr cs:[rax+rax*1+0x0]
0x6eff: nop 
0x6f0b: call 0x1ad0
0x6f31: nop word ptr cs:[rax+rax*1+0x0]
0x6f3b: nop dword ptr [rax+rax*1+0x0]
0x6fa6: nop word ptr cs:[rax+rax*1+0x0]
0x6fe4: cmp eax,0x22
0x6fe7: mov ebp,0x1
0x6fec: jne 0x7018
0x6ff3: movzx r12d,byte ptr [rcx]
0x6ff7: test r12b,r12b
0x6ffa: jne 0x7077
0x7001: nop dword ptr [rax+0x0]
0x7042: nop word ptr [rax+rax*1+0x0]
0x704c: nop dword ptr [rax+0x0]
0x7050: movzx r12d,byte ptr [rbp+0x0]
0x7055: test r12b,r12b
0x7058: je 0x7018
0x705a: movsx esi,r12b
0x705e: mov rdi,r13
0x7061: xor ebp,ebp
0x7063: call 0x1b20
0x7068: test rax,rax
0x706b: mov ebx,0x1
0x7070: mov rcx,qword ptr [rsp+0x8]
0x7075: je 0x7018
0x7077: movsx esi,r12b
0x707b: mov rdi,r13
0x707e: mov qword ptr [rsp+0x8],rcx
0x7083: call 0x1b20
0x7088: test rax,rax
0x708b: mov rcx,qword ptr [rsp+0x8]
0x7090: je 0x715c
0x7096: lea eax,[r12-0x45]
0x709b: cmp al,0x2f
0x709d: ja 0x70f0
0x709f: movabs rdx,0x814400308945
0x70a9: bt rdx,rax
0x70ad: jae 0x70f0
0x70af: mov esi,0x30
0x70b4: mov rdi,r13
0x70b7: mov qword ptr [rsp+0x8],rcx
0x70bc: call 0x1b20
0x70c1: test rax,rax
0x70c4: mov rcx,qword ptr [rsp+0x8]
0x70c9: je 0x70f0
0x70cb: movzx eax,byte ptr [rcx+0x1]
0x70cf: cmp al,0x44
0x70d1: je 0x70df
0x70d3: cmp al,0x69
0x70d5: je 0x72a8
0x70db: cmp al,0x42
0x70dd: jne 0x70f0
0x70df: mov edi,0x2
0x70e4: mov esi,0x3e8
0x70e9: jmp 0x70fa
0x70eb: nop dword ptr [rax+rax*1+0x0]
0x70f0: mov edi,0x1
0x70f5: mov esi,0x400
0x70fa: sub r12d,0x42
0x70fe: cmp r12b,0x35
0x7102: ja 0x715c
0x7104: lea rdx,[rip+0x2f5d]
0x710b: movzx r12d,r12b
0x710f: movsxd rax,dword ptr [rdx+r12*4]
0x7113: add rax,rdx
0x7116: jmp rax
0x7118: mov rax,rbx
0x711b: mul rsi
0x711e: jo 0x7311
0x7124: xor r8d,r8d
0x7127: mul rsi
0x712a: jo 0x7302
0x7130: mov rbx,rax
0x7133: or ebp,r8d
0x7136: nop word ptr cs:[rax+rax*1+0x0]
0x7140: movsxd rdi,edi
0x7143: mov eax,ebp
0x7145: add rcx,rdi
0x7148: or eax,0x2
0x714b: mov qword ptr [r15],rcx
0x714e: cmp byte ptr [rcx],0x0
0x7151: mov qword ptr [r14],rbx
0x7154: cmovne ebp,eax
0x7157: jmp 0x701d
0x715c: mov qword ptr [r14],rbx
0x715f: or ebp,0x2
0x7162: jmp 0x701d
0x7167: mov edx,0x2
0x716c: mov rax,rdx
0x716f: mul rbx
0x7172: jo 0x720e
0x7178: add rbx,rbx
0x717b: jmp 0x7140
0x717d: mov edx,0x200
0x7182: mov rax,rdx
0x7185: mul rbx
0x7188: jo 0x720e
0x718e: shl rbx,0x9
0x7192: jmp 0x7140
0x7194: mov r8d,0x7
0x719a: xor r9d,r9d
0x719d: nop dword ptr [rax]
0x71a0: mov rax,rbx
0x71a3: mul rsi
0x71a6: mov rbx,rax
0x71a9: jo 0x733e
0x71af: sub r8d,0x1
0x71b3: jne 0x71a0
0x71b5: or ebp,r9d
0x71b8: jmp 0x7140
0x71ba: mov r8d,0x8
0x71c0: xor r9d,r9d
0x71c3: nop dword ptr [rax+rax*1+0x0]
0x71c8: mov rax,rbx
0x71cb: mul rsi
0x71ce: mov rbx,rax
0x71d1: jo 0x7320
0x71d7: sub r8d,0x1
0x71db: jne 0x71c8
0x71dd: jmp 0x71b5
0x71df: mov r8d,0x4
0x71e5: xor r9d,r9d
0x71e8: mov rax,rbx
0x71eb: mul rsi
0x71ee: mov rbx,rax
0x71f1: jo 0x72f3
0x71f7: sub r8d,0x1
0x71fb: jne 0x71e8
0x71fd: jmp 0x71b5
0x71ff: mov rax,rbx
0x7202: mul rsi
0x7205: mov rbx,rax
0x7208: jno 0x7140
0x720e: mov ebp,0x1
0x7213: or rbx,0xffffffffffffffff
0x7217: jmp 0x7140
0x721c: nop dword ptr [rax+0x0]
0x7220: mov r8d,0x5
0x7226: xor r9d,r9d
0x7229: mov rax,rbx
0x722c: mul rsi
0x722f: mov rbx,rax
0x7232: jo 0x732f
0x7238: sub r8d,0x1
0x723c: jne 0x7229
0x723e: jmp 0x71b5
0x7243: mov r8d,0x6
0x7249: xor r9d,r9d
0x724c: mov rax,rbx
0x724f: mul rsi
0x7252: mov rbx,rax
0x7255: jo 0x72e4
0x725b: sub r8d,0x1
0x725f: jne 0x724c
0x7261: jmp 0x71b5
0x7266: mov edx,0x400
0x726b: mov rax,rdx
0x726e: mul rbx
0x7271: jo 0x720e
0x7273: shl rbx,0xa
0x7277: jmp 0x7140
0x727c: mov rax,rbx
0x727f: mul rsi
0x7282: jo 0x734d
0x7288: xor r8d,r8d
0x728b: mul rsi
0x728e: jno 0x7127
0x7294: mov r8d,0x1
0x729a: or rax,0xffffffffffffffff
0x729e: jmp 0x7127
0x72a3: nop dword ptr [rax+rax*1+0x0]
0x72a8: xor edi,edi
0x72aa: cmp byte ptr [rcx+0x2],0x42
0x72ae: mov esi,0x400
0x72b3: sete dil
0x72b7: lea edi,[rdi+rdi*1+0x1]
0x72bb: jmp 0x70fa
0x72c0: call 0x1ad0
0x72c5: lea rcx,[rip+0x2e74]
0x72cc: lea rsi,[rip+0x2d4d]
0x72d3: lea rdi,[rip+0x2d66]
0x72da: mov edx,0x54
0x72df: call 0x1b60
0x72e4: mov r9d,0x1
0x72ea: or rbx,0xffffffffffffffff
0x72ee: jmp 0x725b
0x72f3: mov r9d,0x1
0x72f9: or rbx,0xffffffffffffffff
0x72fd: jmp 0x71f7
0x7302: mov r8d,0x1
0x7308: or rbx,0xffffffffffffffff
0x730c: jmp 0x7133
0x7311: or rax,0xffffffffffffffff
0x7315: mov r8d,0x1
0x731b: jmp 0x7127
0x7320: mov r9d,0x1
0x7326: or rbx,0xffffffffffffffff
0x732a: jmp 0x71d7
0x732f: mov r9d,0x1
0x7335: or rbx,0xffffffffffffffff
0x7339: jmp 0x7238
0x733e: mov r9d,0x1
0x7344: or rbx,0xffffffffffffffff
0x7348: jmp 0x71af
0x734d: mov r8d,0x1
0x7353: or rax,0xffffffffffffffff
0x7357: jmp 0x728b
0x735c: nop dword ptr [rax+0x0]
0x73c6: nop word ptr cs:[rax+rax*1+0x0]
0x7406: cmp eax,0x22
0x7409: mov ebp,0x1
0x740e: jne 0x7438
0x7423: nop dword ptr [rax+rax*1+0x0]
0x7432: nop word ptr [rax+rax*1+0x0]
0x7462: nop word ptr [rax+rax*1+0x0]
0x746c: nop dword ptr [rax+0x0]
0x750b: nop dword ptr [rax+rax*1+0x0]
0x763c: nop dword ptr [rax+0x0]
0x76c3: nop dword ptr [rax+rax*1+0x0]
0x76e0: call 0x1ad0
0x76e5: lea rcx,[rip+0x2b3c]
0x76ec: lea rsi,[rip+0x292d]
0x76f3: lea rdi,[rip+0x2946]
0x76fa: mov edx,0x54
0x76ff: call 0x1b60
0x777c: nop dword ptr [rax+0x0]
0x77c5: nop dword ptr [rax]
0x77fb: nop dword ptr [rax+rax*1+0x0]
0x7823: nop dword ptr [rax+rax*1+0x0]
0x784f: nop 
0x7897: nop word ptr [rax+rax*1+0x0]
0x791e: call 0x1ad0
0x7923: nop word ptr cs:[rax+rax*1+0x0]
0x792d: nop dword ptr [rax]
0x7930: push r12
0x7932: push rbp
0x7933: mov rbp,rdi
0x7936: push rbx
0x7937: call 0x19f0
0x793c: mov ebx,dword ptr [rbp+0x0]
0x793f: mov rdi,rbp
0x7942: mov r12,rax
0x7945: call 0x7780
0x794a: and ebx,0x20
0x794d: test ebx,ebx
0x794f: jne 0x7968
0x7951: test eax,eax
0x7953: je 0x795f
0x7955: test r12,r12
0x7958: mov eax,0xffffffff
0x795d: je 0x7998
0x795f: pop rbx
0x7960: pop rbp
0x7961: pop r12
0x7963: ret 
0x7964: nop dword ptr [rax+0x0]
0x7968: test eax,eax
0x796a: jne 0x7988
0x796c: call 0x19b0
0x7971: mov dword ptr [rax],0x0
0x7977: mov eax,0xffffffff
0x797c: pop rbx
0x797d: pop rbp
0x797e: pop r12
0x7980: ret 
0x7981: nop dword ptr [rax+0x0]
0x7988: pop rbx
0x7989: mov eax,0xffffffff
0x798e: pop rbp
0x798f: pop r12
0x7991: ret 
0x7992: nop word ptr [rax+rax*1+0x0]
0x7998: call 0x19b0
0x799d: cmp dword ptr [rax],0x9
0x79a0: pop rbx
0x79a1: pop rbp
0x79a2: pop r12
0x79a4: setne al
0x79a7: movzx eax,al
0x79aa: neg eax
0x79ac: ret 
0x79ad: nop dword ptr [rax]
0x79d9: nop dword ptr [rax+0x0]
0x7a25: nop dword ptr [rax]
0x7a43: nop word ptr cs:[rax+rax*1+0x0]
0x7a4d: nop dword ptr [rax]
0x7a8a: nop word ptr [rax+rax*1+0x0]
0x7b0e: xchg ax,ax
0x7b43: nop dword ptr [rax]
0x7b46: nop word ptr cs:[rax+rax*1+0x0]
0x7b50: mov rax,rdi
0x7b53: xor edx,edx
0x7b55: ror rax,0x3
0x7b59: div rsi
0x7b5c: mov rax,rdx
0x7b5f: ret 
0x7b60: cmp rdi,rsi
0x7b63: sete al
0x7b66: ret 
0x7b67: nop word ptr [rax+rax*1+0x0]
0x7b7e: cmp qword ptr [rbx+0x10],rax
0x7b82: jbe 0x7b8d
0x7b84: shl rax,0x4
0x7b88: add rax,qword ptr [rbx]
0x7b8b: pop rbx
0x7b8c: ret 
0x7b8d: call 0x19a0
0x7b92: nop dword ptr [rax+0x0]
0x7b96: nop word ptr cs:[rax+rax*1+0x0]
0x7bb9: mov qword ptr [r14],rax
0x7bbc: mov rsi,qword ptr [rax]
0x7bbf: test rsi,rsi
0x7bc2: je 0x7cb0
0x7bc8: cmp rsi,rbp
0x7bcb: mov rbx,rax
0x7bce: je 0x7c63
0x7bd4: mov rdi,rbp
0x7bd7: call qword ptr [r12+0x38]
0x7bdc: test al,al
0x7bde: jne 0x7c60
0x7be4: mov rax,qword ptr [rbx+0x8]
0x7be8: test rax,rax
0x7beb: je 0x7cb0
0x7bf1: mov rsi,qword ptr [rax]
0x7bf4: cmp rbp,rsi
0x7bf7: jne 0x7c19
0x7bf9: jmp 0x7c2c
0x7bfb: nop dword ptr [rax+rax*1+0x0]
0x7c00: mov rbx,qword ptr [rbx+0x8]
0x7c04: mov rax,qword ptr [rbx+0x8]
0x7c08: test rax,rax
0x7c0b: je 0x7cb0
0x7c11: mov rsi,qword ptr [rax]
0x7c14: cmp rsi,rbp
0x7c17: je 0x7c2c
0x7c19: mov rdi,rbp
0x7c1c: call qword ptr [r12+0x38]
0x7c21: test al,al
0x7c23: je 0x7c00
0x7c25: mov rax,qword ptr [rbx+0x8]
0x7c29: mov rsi,qword ptr [rax]
0x7c2c: test r13b,r13b
0x7c2f: je 0x7c4e
0x7c31: mov rdx,qword ptr [rax+0x8]
0x7c35: mov qword ptr [rbx+0x8],rdx
0x7c39: mov qword ptr [rax],0x0
0x7c40: mov rdx,qword ptr [r12+0x48]
0x7c45: mov qword ptr [rax+0x8],rdx
0x7c49: mov qword ptr [r12+0x48],rax
0x7c4e: pop rbx
0x7c4f: mov rax,rsi
0x7c52: pop rbp
0x7c53: pop r12
0x7c55: pop r13
0x7c57: pop r14
0x7c59: ret 
0x7c5a: nop word ptr [rax+rax*1+0x0]
0x7c60: mov rsi,qword ptr [rbx]
0x7c63: test r13b,r13b
0x7c66: je 0x7c4e
0x7c68: mov rax,qword ptr [rbx+0x8]
0x7c6c: test rax,rax
0x7c6f: je 0x7ca0
0x7c71: movdqu xmm0,XMMword ptr [rax]
0x7c75: movups XMMword ptr [rbx],xmm0
0x7c78: mov qword ptr [rax],0x0
0x7c7f: mov rdx,qword ptr [r12+0x48]
0x7c84: mov qword ptr [rax+0x8],rdx
0x7c88: mov qword ptr [r12+0x48],rax
0x7c8d: mov rax,rsi
0x7c90: pop rbx
0x7c91: pop rbp
0x7c92: pop r12
0x7c94: pop r13
0x7c96: pop r14
0x7c98: ret 
0x7c99: nop dword ptr [rax+0x0]
0x7ca0: mov qword ptr [rbx],0x0
0x7ca7: jmp 0x7c4e
0x7ca9: nop dword ptr [rax+0x0]
0x7cb0: xor esi,esi
0x7cb2: pop rbx
0x7cb3: mov rax,rsi
0x7cb6: pop rbp
0x7cb7: pop r12
0x7cb9: pop r13
0x7cbb: pop r14
0x7cbd: ret 
0x7cbe: xchg ax,ax
0x7cd4: movss xmm0,dword ptr [rdx+0x8]
0x7cd9: ucomiss xmm0,dword ptr [rip+0x25e4]
0x7ce0: jbe 0x7d30
0x7ce2: movss xmm1,dword ptr [rip+0x25de]
0x7cea: ucomiss xmm1,xmm0
0x7ced: jbe 0x7d30
0x7cef: movss xmm1,dword ptr [rdx+0xc]
0x7cf4: ucomiss xmm1,dword ptr [rip+0x25d1]
0x7cfb: jbe 0x7d30
0x7cfd: movss xmm1,dword ptr [rdx]
0x7d01: ucomiss xmm1,dword ptr [rip+0x25c8]
0x7d08: jb 0x7d30
0x7d0a: addss xmm1,dword ptr [rip+0x25b2]
0x7d12: movss xmm2,dword ptr [rdx+0x4]
0x7d17: ucomiss xmm2,xmm1
0x7d1a: jbe 0x7d30
0x7d1c: movss xmm3,dword ptr [rip+0x25b0]
0x7d24: ucomiss xmm3,xmm2
0x7d27: jb 0x7d30
0x7d29: ucomiss xmm0,xmm1
0x7d2c: ja 0x7d35
0x7d2e: xchg ax,ax
0x7d30: mov qword ptr [rdi],rcx
0x7d33: xor eax,eax
0x7d37: nop word ptr [rax+rax*1+0x0]
0x7d40: push r15
0x7d42: push r14
0x7d44: push r13
0x7d46: push r12
0x7d48: push rbp
0x7d49: push rbx
0x7d4a: sub rsp,0x8
0x7d4e: mov r12,qword ptr [rsi]
0x7d51: cmp r12,qword ptr [rsi+0x8]
0x7d55: jae 0x7e38
0x7d5b: mov rbp,rdi
0x7d5e: mov r13,rsi
0x7d61: mov r14d,edx
0x7d64: nop dword ptr [rax+0x0]
0x7d68: mov r15,qword ptr [r12]
0x7d6c: test r15,r15
0x7d6f: je 0x7e2a
0x7d75: mov rbx,qword ptr [r12+0x8]
0x7d7a: test rbx,rbx
0x7d7d: jne 0x7d9c
0x7d7f: jmp 0x7ddb
0x7d81: nop dword ptr [rax+0x0]
0x7d88: mov rcx,qword ptr [rax+0x8]
0x7d8c: test rdx,rdx
0x7d8f: mov qword ptr [rbx+0x8],rcx
0x7d93: mov qword ptr [rax+0x8],rbx
0x7d97: mov rbx,rdx
0x7d9a: je 0x7dd7
0x7d9c: mov r15,qword ptr [rbx]
0x7d9f: mov rdi,rbp
0x7da2: mov rsi,r15
0x7da5: call 0x7b70
0x7daa: cmp qword ptr [rax],0x0
0x7dae: mov rdx,qword ptr [rbx+0x8]
0x7db2: jne 0x7d88
0x7db4: mov qword ptr [rax],r15
0x7db7: add qword ptr [rbp+0x18],0x1
0x7dbc: test rdx,rdx
0x7dbf: mov qword ptr [rbx],0x0
0x7dc6: mov rax,qword ptr [rbp+0x48]
0x7dca: mov qword ptr [rbx+0x8],rax
0x7dce: mov qword ptr [rbp+0x48],rbx
0x7dd2: mov rbx,rdx
0x7dd5: jne 0x7d9c
0x7dd7: mov r15,qword ptr [r12]
0x7ddb: test r14b,r14b
0x7dde: mov qword ptr [r12+0x8],0x0
0x7de7: jne 0x7e2a
0x7de9: mov rsi,r15
0x7dec: mov rdi,rbp
0x7def: call 0x7b70
0x7df4: cmp qword ptr [rax],0x0
0x7df8: mov rbx,rax
0x7dfb: je 0x7e50
0x7dfd: mov rax,qword ptr [rbp+0x48]
0x7e01: test rax,rax
0x7e04: je 0x7e60
0x7e06: mov rdx,qword ptr [rax+0x8]
0x7e0a: mov qword ptr [rbp+0x48],rdx
0x7e0e: mov rdx,qword ptr [rbx+0x8]
0x7e12: mov qword ptr [rax],r15
0x7e15: mov qword ptr [rax+0x8],rdx
0x7e19: mov qword ptr [rbx+0x8],rax
0x7e1d: mov qword ptr [r12],0x0
0x7e25: sub qword ptr [r13+0x18],0x1
0x7e2a: add r12,0x10
0x7e2e: cmp qword ptr [r13+0x8],r12
0x7e32: ja 0x7d68
0x7e38: add rsp,0x8
0x7e3c: mov eax,0x1
0x7e41: pop rbx
0x7e42: pop rbp
0x7e43: pop r12
0x7e45: pop r13
0x7e47: pop r14
0x7e49: pop r15
0x7e4b: ret 
0x7e4c: nop dword ptr [rax+0x0]
0x7e50: mov qword ptr [rax],r15
0x7e53: add qword ptr [rbp+0x18],0x1
0x7e58: jmp 0x7e1d
0x7e5a: nop word ptr [rax+rax*1+0x0]
0x7e60: mov edi,0x10
0x7e65: call 0x1c40
0x7e6a: test rax,rax
0x7e6d: jne 0x7e0e
0x7e6f: add rsp,0x8
0x7e73: xor eax,eax
0x7e75: pop rbx
0x7e76: pop rbp
0x7e77: pop r12
0x7e79: pop r13
0x7e7b: pop r14
0x7e7d: pop r15
0x7e7f: ret 
0x7e80: mov rax,qword ptr [rdi+0x10]
0x7e84: ret 
0x7e85: nop 
0x7e86: nop word ptr cs:[rax+rax*1+0x0]
0x7e90: mov rax,qword ptr [rdi+0x18]
0x7e94: ret 
0x7e95: nop 
0x7e96: nop word ptr cs:[rax+rax*1+0x0]
0x7ea0: mov rax,qword ptr [rdi+0x20]
0x7ea4: ret 
0x7ea5: nop 
0x7ea6: nop word ptr cs:[rax+rax*1+0x0]
0x7eb0: mov rsi,qword ptr [rdi]
0x7eb3: mov rdi,qword ptr [rdi+0x8]
0x7eb7: xor eax,eax
0x7eb9: cmp rsi,rdi
0x7ebc: jae 0x7ef7
0x7ebe: xchg ax,ax
0x7ec0: cmp qword ptr [rsi],0x0
0x7ec4: je 0x7eec
0x7ec6: mov rdx,qword ptr [rsi+0x8]
0x7eca: mov ecx,0x1
0x7ecf: test rdx,rdx
0x7ed2: je 0x7ee5
0x7ed4: nop dword ptr [rax+0x0]
0x7ed8: mov rdx,qword ptr [rdx+0x8]
0x7edc: add rcx,0x1
0x7ee0: test rdx,rdx
0x7ee3: jne 0x7ed8
0x7ee5: cmp rax,rcx
0x7ee8: cmovb rax,rcx
0x7eec: add rsi,0x10
0x7ef0: cmp rsi,rdi
0x7ef3: jb 0x7ec0
0x7ef5: repz ret
0x7ef7: repz ret
0x7ef9: nop dword ptr [rax+0x0]
0x7f00: mov rcx,qword ptr [rdi]
0x7f03: mov r8,qword ptr [rdi+0x8]
0x7f07: xor edx,edx
0x7f09: xor esi,esi
0x7f0b: cmp rcx,r8
0x7f0e: jae 0x7f46
0x7f10: cmp qword ptr [rcx],0x0
0x7f14: je 0x7f3d
0x7f16: mov rax,qword ptr [rcx+0x8]
0x7f1a: add rsi,0x1
0x7f1e: add rdx,0x1
0x7f22: test rax,rax
0x7f25: je 0x7f3d
0x7f27: nop word ptr [rax+rax*1+0x0]
0x7f30: mov rax,qword ptr [rax+0x8]
0x7f34: add rdx,0x1
0x7f38: test rax,rax
0x7f3b: jne 0x7f30
0x7f3d: add rcx,0x10
0x7f41: cmp rcx,r8
0x7f44: jb 0x7f10
0x7f46: xor eax,eax
0x7f48: cmp qword ptr [rdi+0x18],rsi
0x7f4c: je 0x7f50
0x7f4e: repz ret
0x7f50: cmp qword ptr [rdi+0x20],rdx
0x7f54: sete al
0x7f57: ret 
0x7f58: nop dword ptr [rax+rax*1+0x0]
0x7f60: push r13
0x7f62: push r12
0x7f64: mov r12,rsi
0x7f67: push rbp
0x7f68: push rbx
0x7f69: xor ebx,ebx
0x7f6b: sub rsp,0x8
0x7f6f: mov rsi,qword ptr [rdi]
0x7f72: mov rcx,qword ptr [rdi+0x20]
0x7f76: mov rbp,qword ptr [rdi+0x10]
0x7f7a: mov r13,qword ptr [rdi+0x18]
0x7f7e: mov rdi,qword ptr [rdi+0x8]
0x7f82: cmp rsi,rdi
0x7f85: jae 0x7fc5
0x7f87: nop word ptr [rax+rax*1+0x0]
0x7f90: cmp qword ptr [rsi],0x0
0x7f94: je 0x7fbc
0x7f96: mov rax,qword ptr [rsi+0x8]
0x7f9a: mov edx,0x1
0x7f9f: test rax,rax
0x7fa2: je 0x7fb5
0x7fa4: nop dword ptr [rax+0x0]
0x7fa8: mov rax,qword ptr [rax+0x8]
0x7fac: add rdx,0x1
0x7fb0: test rax,rax
0x7fb3: jne 0x7fa8
0x7fb5: cmp rbx,rdx
0x7fb8: cmovb rbx,rdx
0x7fbc: add rsi,0x10
0x7fc0: cmp rsi,rdi
0x7fc3: jb 0x7f90
0x7fc5: lea rdx,[rip+0x226f]
0x7fcc: mov esi,0x1
0x7fd1: mov rdi,r12
0x7fd4: xor eax,eax
0x7fd6: call 0x1d90
0x7fdb: lea rdx,[rip+0x2271]
0x7fe2: xor eax,eax
0x7fe4: mov rcx,rbp
0x7fe7: mov esi,0x1
0x7fec: mov rdi,r12
0x7fef: call 0x1d90
0x7ff4: test r13,r13
0x7ff7: js 0x8060
0x7ff9: pxor xmm0,xmm0
0x7ffd: test rbp,rbp
0x8000: cvtsi2sd xmm0,r13
0x8005: mulsd xmm0,qword ptr [rip+0x22db]
0x800d: js 0x8089
0x800f: pxor xmm1,xmm1
0x8013: cvtsi2sd xmm1,rbp
0x8018: divsd xmm0,xmm1
0x801c: lea rdx,[rip+0x2265]
0x8023: mov rcx,r13
0x8026: mov rdi,r12
0x8029: mov esi,0x1
0x802e: mov eax,0x1
0x8033: call 0x1d90
0x8038: add rsp,0x8
0x803c: mov rcx,rbx
0x803f: mov rdi,r12
0x8042: pop rbx
0x8043: pop rbp
0x8044: pop r12
0x8046: pop r13
0x8048: lea rdx,[rip+0x221c]
0x804f: mov esi,0x1
0x8054: xor eax,eax
0x8056: jmp 0x1d90
0x805b: nop dword ptr [rax+rax*1+0x0]
0x8060: mov rax,r13
0x8063: mov rdx,r13
0x8066: pxor xmm0,xmm0
0x806a: shr rax,1
0x806d: and edx,0x1
0x8070: or rax,rdx
0x8073: test rbp,rbp
0x8076: cvtsi2sd xmm0,rax
0x807b: addsd xmm0,xmm0
0x807f: mulsd xmm0,qword ptr [rip+0x2261]
0x8087: jns 0x800f
0x8089: mov rax,rbp
0x808c: pxor xmm1,xmm1
0x8090: shr rax,1
0x8093: and ebp,0x1
0x8096: or rax,rbp
0x8099: cvtsi2sd xmm1,rax
0x809e: addsd xmm1,xmm1
0x80a2: jmp 0x8018
0x80a7: nop word ptr [rax+rax*1+0x0]
0x80b0: push r12
0x80b2: push rbp
0x80b3: mov r12,rdi
0x80b6: push rbx
0x80b7: mov rbp,rsi
0x80ba: call 0x7b70
0x80bf: mov rsi,qword ptr [rax]
0x80c2: test rsi,rsi
0x80c5: je 0x80ed
0x80c7: mov rbx,rax
0x80ca: jmp 0x80d3
0x80cc: nop dword ptr [rax+0x0]
0x80d0: mov rsi,qword ptr [rbx]
0x80d3: cmp rsi,rbp
0x80d6: je 0x80ef
0x80d8: mov rdi,rbp
0x80db: call qword ptr [r12+0x38]
0x80e0: test al,al
0x80e2: jne 0x8100
0x80e4: mov rbx,qword ptr [rbx+0x8]
0x80e8: test rbx,rbx
0x80eb: jne 0x80d0
0x80ed: xor esi,esi
0x80ef: pop rbx
0x80f0: mov rax,rsi
0x80f3: pop rbp
0x80f4: pop r12
0x80f6: ret 
0x80f7: nop word ptr [rax+rax*1+0x0]
0x8100: mov rsi,qword ptr [rbx]
0x8103: pop rbx
0x8104: pop rbp
0x8105: mov rax,rsi
0x8108: pop r12
0x810a: ret 
0x810b: nop dword ptr [rax+rax*1+0x0]
0x8110: cmp qword ptr [rdi+0x20],0x0
0x8115: je 0x8143
0x8117: mov rdx,qword ptr [rdi]
0x811a: mov rcx,qword ptr [rdi+0x8]
0x811e: cmp rdx,rcx
0x8121: jae 0x8148
0x8123: mov rax,qword ptr [rdx]
0x8126: test rax,rax
0x8129: jne 0x8146
0x812b: nop dword ptr [rax+rax*1+0x0]
0x8130: add rdx,0x10
0x8134: cmp rdx,rcx
0x8137: jae 0x8148
0x8139: mov rax,qword ptr [rdx]
0x813c: test rax,rax
0x813f: je 0x8130
0x8141: repz ret
0x8143: xor eax,eax
0x8145: ret 
0x8146: repz ret
0x8148: sub rsp,0x8
0x814c: call 0x19a0
0x8151: nop dword ptr [rax+rax*1+0x0]
0x8156: nop word ptr cs:[rax+rax*1+0x0]
0x8160: push rbp
0x8161: push rbx
0x8162: mov rbp,rdi
0x8165: mov rbx,rsi
0x8168: sub rsp,0x8
0x816c: call 0x7b70
0x8171: mov rdx,rax
0x8174: mov rcx,rax
0x8177: mov rax,qword ptr [rdx]
0x817a: mov rdx,qword ptr [rdx+0x8]
0x817e: cmp rax,rbx
0x8181: je 0x8199
0x8183: nop dword ptr [rax+rax*1+0x0]
0x8188: test rdx,rdx
0x818b: je 0x819e
0x818d: mov rax,qword ptr [rdx]
0x8190: mov rdx,qword ptr [rdx+0x8]
0x8194: cmp rax,rbx
0x8197: jne 0x8188
0x8199: test rdx,rdx
0x819c: jne 0x81c8
0x819e: mov rdx,qword ptr [rbp+0x8]
0x81a2: jmp 0x81b0
0x81a4: nop dword ptr [rax+0x0]
0x81a8: mov rax,qword ptr [rcx]
0x81ab: test rax,rax
0x81ae: jne 0x81bb
0x81b0: add rcx,0x10
0x81b4: cmp rdx,rcx
0x81b7: ja 0x81a8
0x81b9: xor eax,eax
0x81bb: add rsp,0x8
0x81bf: pop rbx
0x81c0: pop rbp
0x81c1: ret 
0x81c2: nop word ptr [rax+rax*1+0x0]
0x81c8: mov rax,qword ptr [rdx]
0x81cb: add rsp,0x8
0x81cf: pop rbx
0x81d0: pop rbp
0x81d1: ret 
0x81d2: nop dword ptr [rax+0x0]
0x81d6: nop word ptr cs:[rax+rax*1+0x0]
0x81e0: mov r9,qword ptr [rdi]
0x81e3: cmp qword ptr [rdi+0x8],r9
0x81e7: jbe 0x8242
0x81e9: xor r8d,r8d
0x81ec: mov rcx,qword ptr [r9]
0x81ef: test rcx,rcx
0x81f2: je 0x822d
0x81f4: cmp rdx,r8
0x81f7: jbe 0x8237
0x81f9: mov qword ptr [rsi+r8*8],rcx
0x81fd: mov rcx,qword ptr [r9+0x8]
0x8201: lea rax,[r8+0x1]
0x8205: test rcx,rcx
0x8208: je 0x822a
0x820a: nop word ptr [rax+rax*1+0x0]
0x8210: cmp rdx,rax
0x8213: je 0x8240
0x8215: mov r8,qword ptr [rcx]
0x8218: add rax,0x1
0x821c: mov qword ptr [rsi+rax*8-0x8],r8
0x8221: mov rcx,qword ptr [rcx+0x8]
0x8225: test rcx,rcx
0x8228: jne 0x8210
0x822a: mov r8,rax
0x822d: add r9,0x10
0x8231: cmp qword ptr [rdi+0x8],r9
0x8235: ja 0x81ec
0x8237: mov rax,r8
0x823a: ret 
0x823b: nop dword ptr [rax+rax*1+0x0]
0x8240: repz ret
0x8242: xor eax,eax
0x8244: ret 
0x8245: nop 
0x8246: nop word ptr cs:[rax+rax*1+0x0]
0x8250: push r15
0x8252: push r14
0x8254: push r13
0x8256: push r12
0x8258: push rbp
0x8259: push rbx
0x825a: sub rsp,0x8
0x825e: mov r14,qword ptr [rdi]
0x8261: cmp qword ptr [rdi+0x8],r14
0x8265: jbe 0x82b6
0x8267: mov r13,rdx
0x826a: mov r12,rsi
0x826d: mov r15,rdi
0x8270: xor ebp,ebp
0x8272: mov rdi,qword ptr [r14]
0x8275: test rdi,rdi
0x8278: je 0x829a
0x827a: mov rbx,r14
0x827d: jmp 0x8283
0x827f: nop 
0x8280: mov rdi,qword ptr [rbx]
0x8283: mov rsi,r13
0x8286: call r12
0x8289: test al,al
0x828b: je 0x82a4
0x828d: mov rbx,qword ptr [rbx+0x8]
0x8291: add rbp,0x1
0x8295: test rbx,rbx
0x8298: jne 0x8280
0x829a: add r14,0x10
0x829e: cmp qword ptr [r15+0x8],r14
0x82a2: ja 0x8272
0x82a4: add rsp,0x8
0x82a8: mov rax,rbp
0x82ab: pop rbx
0x82ac: pop rbp
0x82ad: pop r12
0x82af: pop r13
0x82b1: pop r14
0x82b3: pop r15
0x82b5: ret 
0x82b6: xor ebp,ebp
0x82b8: jmp 0x82a4
0x82ba: nop word ptr [rax+rax*1+0x0]
0x82c0: movzx ecx,byte ptr [rdi]
0x82c3: xor edx,edx
0x82c5: test cl,cl
0x82c7: je 0x82ed
0x82c9: nop dword ptr [rax+0x0]
0x82d0: mov rax,rdx
0x82d3: add rdi,0x1
0x82d7: shl rax,0x5
0x82db: sub rax,rdx
0x82de: xor edx,edx
0x82e0: add rax,rcx
0x82e3: movzx ecx,byte ptr [rdi]
0x82e6: div rsi
0x82e9: test cl,cl
0x82eb: jne 0x82d0
0x82ed: mov rax,rdx
0x82f0: ret 
0x82f1: nop dword ptr [rax+rax*1+0x0]
0x82f6: nop word ptr cs:[rax+rax*1+0x0]
0x8300: movabs rax,0x3f80000000000000
0x830a: mov byte ptr [rdi+0x10],0x0
0x830e: mov qword ptr [rdi],rax
0x8311: movabs rax,0x3fb4fdf43f4ccccd
0x831b: mov qword ptr [rdi+0x8],rax
0x831f: ret 
0x837c: mov qword ptr [rax+0x28],r15
0x8380: call 0x7cc0
0x8385: test al,al
0x8387: je 0x8410
0x838d: cmp byte ptr [r15+0x10],0x0
0x8392: je 0x8490
0x840f: nop 
0x842c: nop dword ptr [rax+0x0]
0x848f: nop 
0x8490: test rbp,rbp
0x8493: movss xmm1,dword ptr [r15+0x8]
0x8499: jns 0x8451
0x84b6: nop word ptr cs:[rax+rax*1+0x0]
0x84d4: xchg ax,ax
0x84d6: nop word ptr cs:[rax+rax*1+0x0]
0x84e0: push r12
0x84e2: push rbp
0x84e3: mov rbp,rdi
0x84e6: push rbx
0x84e7: mov r12,qword ptr [rdi]
0x84ea: cmp r12,qword ptr [rdi+0x8]
0x84ee: jae 0x855b
0x84f0: cmp qword ptr [r12],0x0
0x84f5: je 0x8551
0x84f7: mov rbx,qword ptr [r12+0x8]
0x84fc: mov rax,qword ptr [rbp+0x40]
0x8500: test rbx,rbx
0x8503: je 0x8535
0x8505: nop dword ptr [rax]
0x8508: test rax,rax
0x850b: je 0x8516
0x850d: mov rdi,qword ptr [rbx]
0x8510: call rax
0x8512: mov rax,qword ptr [rbp+0x40]
0x8516: mov rdx,qword ptr [rbx+0x8]
0x851a: mov rcx,qword ptr [rbp+0x48]
0x851e: mov qword ptr [rbx],0x0
0x8525: test rdx,rdx
0x8528: mov qword ptr [rbx+0x8],rcx
0x852c: mov qword ptr [rbp+0x48],rbx
0x8530: mov rbx,rdx
0x8533: jne 0x8508
0x8535: test rax,rax
0x8538: je 0x8540
0x853a: mov rdi,qword ptr [r12]
0x853e: call rax
0x8540: mov qword ptr [r12],0x0
0x8548: mov qword ptr [r12+0x8],0x0
0x8551: add r12,0x10
0x8555: cmp qword ptr [rbp+0x8],r12
0x8559: ja 0x84f0
0x855b: mov qword ptr [rbp+0x18],0x0
0x8563: mov qword ptr [rbp+0x20],0x0
0x856b: pop rbx
0x856c: pop rbp
0x856d: pop r12
0x856f: ret 
0x85a6: nop word ptr cs:[rax+rax*1+0x0]
0x85b0: mov rdi,qword ptr [rbx]
0x85b8: mov rbx,qword ptr [rbx+0x8]
0x85bc: test rbx,rbx
0x85bf: jne 0x85b0
0x85c1: mov rax,qword ptr [r12+0x8]
0x8646: nop word ptr cs:[rax+rax*1+0x0]
0x8650: push r12
0x8652: push rbp
0x8653: mov rbp,rdi
0x8656: push rbx
0x8657: sub rsp,0x60
0x865b: mov r12,qword ptr [rdi+0x28]
0x865f: mov rax,qword ptr fs:0x28
0x8668: mov qword ptr [rsp+0x58],rax
0x866d: xor eax,eax
0x866f: cmp byte ptr [r12+0x10],0x0
0x8675: jne 0x86c8
0x8677: test rsi,rsi
0x867a: js 0x87f8
0x8680: pxor xmm0,xmm0
0x8684: cvtsi2ss xmm0,rsi
0x8689: divss xmm0,dword ptr [r12+0x8]
0x8690: ucomiss xmm0,dword ptr [rip+0x1c45]
0x8697: jae 0x87d0
0x869d: ucomiss xmm0,dword ptr [rip+0x1c3c]
0x86a4: jb 0x8820
0x86aa: subss xmm0,dword ptr [rip+0x1c2e]
0x86b2: movabs rax,0x8000000000000000
0x86bc: cvttss2si rsi,xmm0
0x86c1: xor rsi,rax
0x86c4: nop dword ptr [rax+0x0]
0x86c8: mov rdi,rsi
0x86cb: call 0x7ab0
0x86d0: mov edx,0x8
0x86d5: mov rbx,rax
0x86d8: xor ecx,ecx
0x86da: mov rax,rdx
0x86dd: mul rbx
0x86e0: jo 0x887f
0x86e6: test rax,rax
0x86e9: mov eax,0x1
0x86ee: cmovs rcx,rax
0x86f2: test rbx,rbx
0x86f5: je 0x87d0
0x86fb: and ecx,0x1
0x86fe: jne 0x87d0
0x8704: cmp qword ptr [rbp+0x10],rbx
0x8708: je 0x8830
0x870e: mov esi,0x10
0x8713: mov rdi,rbx
0x8716: call 0x1bf0
0x871b: test rax,rax
0x871e: mov qword ptr [rsp],rax
0x8722: je 0x87d0
0x8728: mov qword ptr [rsp+0x10],rbx
0x872d: shl rbx,0x4
0x8731: mov qword ptr [rsp+0x28],r12
0x8736: add rbx,rax
0x8739: mov rax,qword ptr [rbp+0x30]
0x873d: mov r12,rsp
0x8740: xor edx,edx
0x8742: mov rsi,rbp
0x8745: mov rdi,r12
0x8748: mov qword ptr [rsp+0x8],rbx
0x874d: mov qword ptr [rsp+0x18],0x0
0x8756: mov qword ptr [rsp+0x30],rax
0x875b: mov rax,qword ptr [rbp+0x38]
0x875f: mov qword ptr [rsp+0x20],0x0
0x8768: mov qword ptr [rsp+0x38],rax
0x876d: mov rax,qword ptr [rbp+0x40]
0x8771: mov qword ptr [rsp+0x40],rax
0x8776: mov rax,qword ptr [rbp+0x48]
0x877a: mov qword ptr [rsp+0x48],rax
0x877f: call 0x7d40
0x8784: test al,al
0x8786: mov ebx,eax
0x8788: jne 0x8840
0x878e: mov rax,qword ptr [rsp+0x48]
0x8793: mov edx,0x1
0x8798: mov rsi,r12
0x879b: mov rdi,rbp
0x879e: mov qword ptr [rbp+0x48],rax
0x87a2: call 0x7d40
0x87a7: test al,al
0x87a9: je 0x8889
0x87af: xor edx,edx
0x87b1: mov rsi,r12
0x87b4: mov rdi,rbp
0x87b7: call 0x7d40
0x87bc: test al,al
0x87be: je 0x8889
0x87c4: mov rdi,qword ptr [rsp]
0x87c8: call 0x1dd0
0x87cd: jmp 0x87d2
0x87cf: nop 
0x87d0: xor ebx,ebx
0x87d2: mov rcx,qword ptr [rsp+0x58]
0x87d7: xor rcx,qword ptr fs:0x28
0x87e0: mov eax,ebx
0x87e2: jne 0x887a
0x87e8: add rsp,0x60
0x87ec: pop rbx
0x87ed: pop rbp
0x87ee: pop r12
0x87f0: ret 
0x87f1: nop dword ptr [rax+0x0]
0x87f8: mov rax,rsi
0x87fb: pxor xmm0,xmm0
0x87ff: shr rax,1
0x8802: and esi,0x1
0x8805: or rax,rsi
0x8808: cvtsi2ss xmm0,rax
0x880d: addss xmm0,xmm0
0x8811: jmp 0x8689
0x8816: nop word ptr cs:[rax+rax*1+0x0]
0x8820: cvttss2si rsi,xmm0
0x8825: jmp 0x86c8
0x882a: nop word ptr [rax+rax*1+0x0]
0x8830: mov ebx,0x1
0x8835: jmp 0x87d2
0x8837: nop word ptr [rax+rax*1+0x0]
0x8840: mov rdi,qword ptr [rbp+0x0]
0x8844: call 0x1dd0
0x8849: mov rax,qword ptr [rsp]
0x884d: mov qword ptr [rbp+0x0],rax
0x8851: mov rax,qword ptr [rsp+0x8]
0x8856: mov qword ptr [rbp+0x8],rax
0x885a: mov rax,qword ptr [rsp+0x10]
0x885f: mov qword ptr [rbp+0x10],rax
0x8863: mov rax,qword ptr [rsp+0x18]
0x8868: mov qword ptr [rbp+0x18],rax
0x886c: mov rax,qword ptr [rsp+0x48]
0x8871: mov qword ptr [rbp+0x48],rax
0x8875: jmp 0x87d2
0x887a: call 0x1ad0
0x887f: mov ecx,0x1
0x8884: jmp 0x86e6
0x8889: call 0x19a0
0x888e: xchg ax,ax
0x8890: push r13
0x8892: push r12
0x8894: push rbp
0x8895: push rbx
0x8896: sub rsp,0x18
0x889a: mov rax,qword ptr fs:0x28
0x88a3: mov qword ptr [rsp+0x8],rax
0x88a8: xor eax,eax
0x88aa: test rsi,rsi
0x88ad: je 0x8a6d
0x88b3: mov r12,rsp
0x88b6: xor ecx,ecx
0x88b8: mov r13,rdx
0x88bb: mov rdx,r12
0x88be: mov rbx,rdi
0x88c1: mov rbp,rsi
0x88c4: call 0x7ba0
0x88c9: test rax,rax
0x88cc: mov rdx,rax
0x88cf: je 0x8900
0x88d1: xor eax,eax
0x88d3: test r13,r13
0x88d6: je 0x88dc
0x88d8: mov qword ptr [r13+0x0],rdx
0x88dc: mov rcx,qword ptr [rsp+0x8]
0x88e1: xor rcx,qword ptr fs:0x28
0x88ea: jne 0x8b0f
0x88f0: add rsp,0x18
0x88f4: pop rbx
0x88f5: pop rbp
0x88f6: pop r12
0x88f8: pop r13
0x88fa: ret 
0x88fb: nop dword ptr [rax+rax*1+0x0]
0x8900: mov rax,qword ptr [rbx+0x18]
0x8904: test rax,rax
0x8907: js 0x8980
0x8909: pxor xmm1,xmm1
0x890d: mov rdx,qword ptr [rbx+0x28]
0x8911: cvtsi2ss xmm1,rax
0x8916: mov rax,qword ptr [rbx+0x10]
0x891a: test rax,rax
0x891d: js 0x89aa
0x8923: pxor xmm0,xmm0
0x8927: cvtsi2ss xmm0,rax
0x892c: mulss xmm0,dword ptr [rdx+0x8]
0x8931: ucomiss xmm1,xmm0
0x8934: ja 0x89d0
0x893a: mov r12,qword ptr [rsp]
0x893e: cmp qword ptr [r12],0x0
0x8943: je 0x8a78
0x8949: mov rax,qword ptr [rbx+0x48]
0x894d: test rax,rax
0x8950: je 0x8a90
0x8956: mov rdx,qword ptr [rax+0x8]
0x895a: mov qword ptr [rbx+0x48],rdx
0x895e: mov rdx,qword ptr [r12+0x8]
0x8963: mov qword ptr [rax],rbp
0x8966: mov qword ptr [rax+0x8],rdx
0x896a: mov qword ptr [r12+0x8],rax
0x896f: mov eax,0x1
0x8974: add qword ptr [rbx+0x20],0x1
0x8979: jmp 0x88dc
0x897e: xchg ax,ax
0x8980: mov rdx,rax
0x8983: pxor xmm1,xmm1
0x8987: and eax,0x1
0x898a: shr rdx,1
0x898d: or rdx,rax
0x8990: mov rax,qword ptr [rbx+0x10]
0x8994: cvtsi2ss xmm1,rdx
0x8999: mov rdx,qword ptr [rbx+0x28]
0x899d: test rax,rax
0x89a0: addss xmm1,xmm1
0x89a4: jns 0x8923
0x89aa: mov rcx,rax
0x89ad: pxor xmm0,xmm0
0x89b1: shr rcx,1
0x89b4: and eax,0x1
0x89b7: or rcx,rax
0x89ba: cvtsi2ss xmm0,rcx
0x89bf: addss xmm0,xmm0
0x89c3: jmp 0x892c
0x89c8: nop dword ptr [rax+rax*1+0x0]
0x89d0: lea rdi,[rbx+0x28]
0x89d4: call 0x7cc0
0x89d9: mov rax,qword ptr [rbx+0x10]
0x89dd: mov rdx,qword ptr [rbx+0x28]
0x89e1: test rax,rax
0x89e4: movss xmm2,dword ptr [rdx+0x8]
0x89e9: js 0x8ab0
0x89ef: pxor xmm0,xmm0
0x89f3: cvtsi2ss xmm0,rax
0x89f8: mov rax,qword ptr [rbx+0x18]
0x89fc: test rax,rax
0x89ff: js 0x8ad0
0x8a05: pxor xmm1,xmm1
0x8a09: cvtsi2ss xmm1,rax
0x8a0e: movaps xmm3,xmm2
0x8a11: mulss xmm3,xmm0
0x8a15: ucomiss xmm1,xmm3
0x8a18: jbe 0x893a
0x8a1e: cmp byte ptr [rdx+0x10],0x0
0x8a22: mulss xmm0,dword ptr [rdx+0xc]
0x8a27: jne 0x8a2d
0x8a29: mulss xmm0,xmm2
0x8a2d: ucomiss xmm0,dword ptr [rip+0x18a8]
0x8a34: jae 0x8aa3
0x8a36: ucomiss xmm0,dword ptr [rip+0x18a3]
0x8a3d: jae 0x8af0
0x8a43: cvttss2si rsi,xmm0
0x8a48: mov rdi,rbx
0x8a4b: call 0x8650
0x8a50: test al,al
0x8a52: je 0x8aa3
0x8a54: xor ecx,ecx
0x8a56: mov rdx,r12
0x8a59: mov rsi,rbp
0x8a5c: mov rdi,rbx
0x8a5f: call 0x7ba0
0x8a64: test rax,rax
0x8a67: je 0x893a
0x8a6d: call 0x19a0
0x8a72: nop word ptr [rax+rax*1+0x0]
0x8a78: mov qword ptr [r12],rbp
0x8a7c: mov eax,0x1
0x8a81: add qword ptr [rbx+0x20],0x1
0x8a86: add qword ptr [rbx+0x18],0x1
0x8a8b: jmp 0x88dc
0x8a90: mov edi,0x10
0x8a95: call 0x1c40
0x8a9a: test rax,rax
0x8a9d: jne 0x895e
0x8aa3: mov eax,0xffffffff
0x8aa8: jmp 0x88dc
0x8aad: nop dword ptr [rax]
0x8ab0: mov rcx,rax
0x8ab3: pxor xmm0,xmm0
0x8ab7: shr rcx,1
0x8aba: and eax,0x1
0x8abd: or rcx,rax
0x8ac0: cvtsi2ss xmm0,rcx
0x8ac5: addss xmm0,xmm0
0x8ac9: jmp 0x89f8
0x8ace: xchg ax,ax
0x8ad0: mov rcx,rax
0x8ad3: pxor xmm1,xmm1
0x8ad7: shr rcx,1
0x8ada: and eax,0x1
0x8add: or rcx,rax
0x8ae0: cvtsi2ss xmm1,rcx
0x8ae5: addss xmm1,xmm1
0x8ae9: jmp 0x8a0e
0x8aee: xchg ax,ax
0x8af0: subss xmm0,dword ptr [rip+0x17e8]
0x8af8: movabs rax,0x8000000000000000
0x8b02: cvttss2si rsi,xmm0
0x8b07: xor rsi,rax
0x8b0a: jmp 0x8a48
0x8b0f: call 0x1ad0
0x8b14: xchg ax,ax
0x8b16: nop word ptr cs:[rax+rax*1+0x0]
0x8b20: push rbx
0x8b21: mov rbx,rsi
0x8b24: sub rsp,0x10
0x8b28: mov rdx,rsp
0x8b2b: mov rax,qword ptr fs:0x28
0x8b34: mov qword ptr [rsp+0x8],rax
0x8b39: xor eax,eax
0x8b3b: call 0x8890
0x8b40: cmp eax,0xffffffff
0x8b43: je 0x8b70
0x8b45: test eax,eax
0x8b47: jne 0x8b4d
0x8b49: mov rbx,qword ptr [rsp]
0x8b4d: mov rcx,qword ptr [rsp+0x8]
0x8b52: xor rcx,qword ptr fs:0x28
0x8b5b: mov rax,rbx
0x8b5e: jne 0x8b74
0x8b60: add rsp,0x10
0x8b64: pop rbx
0x8b65: ret 
0x8b66: nop word ptr cs:[rax+rax*1+0x0]
0x8b70: xor ebx,ebx
0x8b72: jmp 0x8b4d
0x8b74: call 0x1ad0
0x8b79: nop dword ptr [rax+0x0]
0x8ba8: test rax,rax
0x8bab: mov rbp,rax
0x8bae: je 0x8bbf
0x8bb0: mov rax,qword ptr [rsp]
0x8bb4: sub qword ptr [rbx+0x20],0x1
0x8bb9: cmp qword ptr [rax],0x0
0x8bbd: je 0x8be0
0x8bbf: mov rcx,qword ptr [rsp+0x8]
0x8bc4: xor rcx,qword ptr fs:0x28
0x8bcd: mov rax,rbp
0x8bd0: jne 0x8d7e
0x8bd6: add rsp,0x10
0x8bda: pop rbx
0x8bdb: pop rbp
0x8bdc: pop r12
0x8bde: ret 
0x8bdf: nop 
0x8be0: mov rax,qword ptr [rbx+0x18]
0x8be4: sub rax,0x1
0x8be8: test rax,rax
0x8beb: mov qword ptr [rbx+0x18],rax
0x8bef: js 0x8cf0
0x8bf5: pxor xmm0,xmm0
0x8bf9: cvtsi2ss xmm0,rax
0x8bfe: mov rax,qword ptr [rbx+0x10]
0x8c02: mov rdx,qword ptr [rbx+0x28]
0x8c06: test rax,rax
0x8c09: js 0x8cd0
0x8c0f: pxor xmm1,xmm1
0x8c13: cvtsi2ss xmm1,rax
0x8c18: mulss xmm1,dword ptr [rdx]
0x8c1c: ucomiss xmm1,xmm0
0x8c1f: jbe 0x8bbf
0x8c21: lea rdi,[rbx+0x28]
0x8c25: call 0x7cc0
0x8c2a: mov rax,qword ptr [rbx+0x10]
0x8c2e: mov rdx,qword ptr [rbx+0x28]
0x8c32: test rax,rax
0x8c35: js 0x8d60
0x8c3b: pxor xmm0,xmm0
0x8c3f: cvtsi2ss xmm0,rax
0x8c44: mov rax,qword ptr [rbx+0x18]
0x8c48: test rax,rax
0x8c4b: js 0x8d40
0x8c51: pxor xmm1,xmm1
0x8c55: cvtsi2ss xmm1,rax
0x8c5a: movss xmm2,dword ptr [rdx]
0x8c5e: mulss xmm2,xmm0
0x8c62: ucomiss xmm2,xmm1
0x8c65: jbe 0x8bbf
0x8c6b: cmp byte ptr [rdx+0x10],0x0
0x8c6f: mulss xmm0,dword ptr [rdx+0x4]
0x8c74: je 0x8d30
0x8c7a: ucomiss xmm0,dword ptr [rip+0x165f]
0x8c81: jae 0x8d10
0x8c87: cvttss2si rsi,xmm0
0x8c8c: mov rdi,rbx
0x8c8f: call 0x8650
0x8c94: test al,al
0x8c96: jne 0x8bbf
0x8c9c: mov rdi,qword ptr [rbx+0x48]
0x8ca0: test rdi,rdi
0x8ca3: je 0x8cb9
0x8ca5: nop dword ptr [rax]
0x8ca8: mov r12,qword ptr [rdi+0x8]
0x8cac: call 0x1dd0
0x8cb1: test r12,r12
0x8cb4: mov rdi,r12
0x8cb7: jne 0x8ca8
0x8cb9: mov qword ptr [rbx+0x48],0x0
0x8cc1: jmp 0x8bbf
0x8cc6: nop word ptr cs:[rax+rax*1+0x0]
0x8cd0: mov rcx,rax
0x8cd3: pxor xmm1,xmm1
0x8cd7: shr rcx,1
0x8cda: and eax,0x1
0x8cdd: or rcx,rax
0x8ce0: cvtsi2ss xmm1,rcx
0x8ce5: addss xmm1,xmm1
0x8ce9: jmp 0x8c18
0x8cee: xchg ax,ax
0x8cf0: mov rdx,rax
0x8cf3: pxor xmm0,xmm0
0x8cf7: shr rdx,1
0x8cfa: and eax,0x1
0x8cfd: or rdx,rax
0x8d00: cvtsi2ss xmm0,rdx
0x8d05: addss xmm0,xmm0
0x8d09: jmp 0x8bfe
0x8d0e: xchg ax,ax
0x8d10: subss xmm0,dword ptr [rip+0x15c8]
0x8d18: movabs rax,0x8000000000000000
0x8d22: cvttss2si rsi,xmm0
0x8d27: xor rsi,rax
0x8d2a: jmp 0x8c8c
0x8d2f: nop 
0x8d30: mulss xmm0,dword ptr [rdx+0x8]
0x8d35: jmp 0x8c7a
0x8d3a: nop word ptr [rax+rax*1+0x0]
0x8d40: mov rcx,rax
0x8d43: pxor xmm1,xmm1
0x8d47: shr rcx,1
0x8d4a: and eax,0x1
0x8d4d: or rcx,rax
0x8d50: cvtsi2ss xmm1,rcx
0x8d55: addss xmm1,xmm1
0x8d59: jmp 0x8c5a
0x8d5e: xchg ax,ax
0x8d60: mov rcx,rax
0x8d63: pxor xmm0,xmm0
0x8d67: shr rcx,1
0x8d6a: and eax,0x1
0x8d6d: or rcx,rax
0x8d70: cvtsi2ss xmm0,rcx
0x8d75: addss xmm0,xmm0
0x8d79: jmp 0x8c44
0x8d7e: call 0x1ad0
0x8d83: nop word ptr cs:[rax+rax*1+0x0]
0x8d8d: nop dword ptr [rax]
0x8db6: nop word ptr cs:[rax+rax*1+0x0]
0x8dcc: nop dword ptr [rax+0x0]
0x8dde: xchg ax,ax
0x8e31: cmp esi,0x406
0x8e37: jne 0x8e80
0x8e39: mov rax,qword ptr [rsp+0x10]
0x8e3e: cmp dword ptr [rip+0x2043f3],0x0
0x8e45: mov dword ptr [rsp],0x18
0x8e4c: mov r12d,dword ptr [rax+0x10]
0x8e50: mov edx,r12d
0x8e53: js 0x8f83
0x8e59: xor eax,eax
0x8e5b: mov esi,0x406
0x8e60: call 0x1a30
0x8e65: test eax,eax
0x8e67: mov ebx,eax
0x8e69: js 0x8ff8
0x8e6f: mov dword ptr [rip+0x2043bf],0x1
0x8e79: jmp 0x8ec0
0x8e7b: nop dword ptr [rax+rax*1+0x0]
0x8e80: cmp esi,0xb
0x8e83: je 0x8eb0
0x8e85: jg 0x8ee0
0x8e87: cmp esi,0x4
0x8e8a: je 0x8f60
0x8e90: jg 0x8f50
0x8e96: cmp esi,0x2
0x8e99: je 0x8f60
0x8e9f: jg 0x8eb0
0x8ea1: cmp esi,0x1
0x8ea4: jne 0x8f08
0x8ea6: nop word ptr cs:[rax+rax*1+0x0]
0x8eb0: mov edi,ebp
0x8eb2: xor eax,eax
0x8eb4: call 0x1a30
0x8eb9: mov ebx,eax
0x8ebb: nop dword ptr [rax+rax*1+0x0]
0x8edf: nop 
0x8ee0: cmp esi,0x407
0x8ee6: jg 0x8f30
0x8ee8: cmp esi,0x406
0x8eee: jge 0x8f60
0x8ef0: cmp esi,0x401
0x8ef6: je 0x8eb0
0x8ef8: cmp esi,0x402
0x8efe: je 0x8f60
0x8f00: cmp esi,0x400
0x8f06: je 0x8f60
0x8f08: mov eax,dword ptr [rsp]
0x8f0b: cmp eax,0x2f
0x8f0e: ja 0x904a
0x8f14: add rax,qword ptr [rsp+0x10]
0x8f19: mov rdx,qword ptr [rax]
0x8f1c: mov edi,ebp
0x8f1e: xor eax,eax
0x8f20: call 0x1a30
0x8f25: mov ebx,eax
0x8f27: jmp 0x8ec0
0x8f29: nop dword ptr [rax+0x0]
0x8f30: cmp esi,0x409
0x8f36: je 0x8f60
0x8f38: jl 0x8eb0
0x8f3e: cmp esi,0x40a
0x8f44: jne 0x8f08
0x8f46: jmp 0x8eb0
0x8f4b: nop dword ptr [rax+rax*1+0x0]
0x8f50: cmp esi,0x9
0x8f53: je 0x8eb0
0x8f59: jg 0x8f60
0x8f5b: cmp esi,0x8
0x8f5e: jne 0x8f08
0x8f60: mov eax,dword ptr [rsp]
0x8f63: cmp eax,0x2f
0x8f66: ja 0x9054
0x8f6c: add rax,qword ptr [rsp+0x10]
0x8f71: mov edx,dword ptr [rax]
0x8f73: mov edi,ebp
0x8f75: xor eax,eax
0x8f77: call 0x1a30
0x8f7c: mov ebx,eax
0x8f7e: jmp 0x8ec0
0x8f83: xor esi,esi
0x8f85: xor eax,eax
0x8f87: call 0x1a30
0x8f8c: test eax,eax
0x8f8e: mov ebx,eax
0x8f90: js 0x8ec0
0x8f96: cmp dword ptr [rip+0x20429b],0xffffffff
0x8f9d: jne 0x8ec0
0x8fa3: xor eax,eax
0x8fa5: mov esi,0x1
0x8faa: mov edi,ebx
0x8fac: call 0x1a30
0x8fb1: test eax,eax
0x8fb3: js 0x8fd1
0x8fb5: or eax,0x1
0x8fb8: mov esi,0x2
0x8fbd: mov edi,ebx
0x8fbf: mov edx,eax
0x8fc1: xor eax,eax
0x8fc3: call 0x1a30
0x8fc8: cmp eax,0xffffffff
0x8fcb: jne 0x8ec0
0x8fd1: call 0x19b0
0x8fd6: mov r12d,dword ptr [rax]
0x8fd9: mov rbp,rax
0x8fdc: mov edi,ebx
0x8fde: call 0x1ba0
0x8fe3: mov ebx,0xffffffff
0x8fe8: mov dword ptr [rbp+0x0],r12d
0x8fec: jmp 0x8ec0
0x8ff1: nop dword ptr [rax+0x0]
0x8ff8: call 0x19b0
0x8ffd: cmp dword ptr [rax],0x16
0x9000: jne 0x8e6f
0x9006: xor esi,esi
0x9008: xor eax,eax
0x900a: mov edx,r12d
0x900d: mov edi,ebp
0x900f: call 0x1a30
0x9014: test eax,eax
0x9016: mov ebx,eax
0x9018: js 0x8ec0
0x901e: mov dword ptr [rip+0x204210],0xffffffff
0x9028: jmp 0x8fa3
0x902d: call 0x1ad0
0x904a: mov rax,qword ptr [rsp+0x8]
0x904f: jmp 0x8f19
0x9054: mov rax,qword ptr [rsp+0x8]
0x9059: jmp 0x8f71
0x905e: xchg ax,ax
0x9060: push r15
0x9062: push r14
0x9064: mov r15,rdx
0x9067: push r13
0x9069: push r12
0x906b: lea r12,[rip+0x20397e]
0x9072: push rbp
0x9073: lea rbp,[rip+0x20397e]
0x907a: push rbx
0x907b: mov r13d,edi
0x907e: mov r14,rsi
0x9081: sub rbp,r12
0x9084: sub rsp,0x8
0x9088: sar rbp,0x3
0x908c: call 0x1960
0x9091: test rbp,rbp
0x9094: je 0x90b6
0x9096: xor ebx,ebx
0x9098: nop dword ptr [rax+rax*1+0x0]
0x90a0: mov rdx,r15
0x90a3: mov rsi,r14
0x90a6: mov edi,r13d
0x90a9: call qword ptr [r12+rbx*8]
0x90ad: add rbx,0x1
0x90b1: cmp rbp,rbx
0x90b4: jne 0x90a0
0x90b6: add rsp,0x8
0x90ba: pop rbx
0x90bb: pop rbp
0x90bc: pop r12
0x90be: pop r13
0x90c0: pop r14
0x90c2: pop r15
0x90c4: ret 
0x90c5: nop 
0x90c6: nop word ptr cs:[rax+rax*1+0x0]
0x90d0: repz ret
0x90d2: nop word ptr cs:[rax+rax*1+0x0]
0x90dc: nop dword ptr [rax+0x0]
0x90f0: sub rsp,0x8
0x90f4: add rsp,0x8
0x90f8: ret 
