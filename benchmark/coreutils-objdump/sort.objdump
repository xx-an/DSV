
/home/cindy/Documents/Projects/benchmark/coreutils-build/src/sort:     file format elf64-x86-64


Disassembly of section .init:

0000000000002a88 <_init>:
    2a88:	48 83 ec 08          	sub    rsp,0x8
    2a8c:	48 8b 05 3d 75 21 00 	mov    rax,QWORD PTR [rip+0x21753d]        # 219fd0 <__gmon_start__>
    2a93:	48 85 c0             	test   rax,rax
    2a96:	74 02                	je     2a9a <_init+0x12>
    2a98:	ff d0                	call   rax
    2a9a:	48 83 c4 08          	add    rsp,0x8
    2a9e:	c3                   	ret    

Disassembly of section .plt:

0000000000002aa0 <.plt>:
    2aa0:	ff 35 7a 71 21 00    	push   QWORD PTR [rip+0x21717a]        # 219c20 <_GLOBAL_OFFSET_TABLE_+0x8>
    2aa6:	ff 25 7c 71 21 00    	jmp    QWORD PTR [rip+0x21717c]        # 219c28 <_GLOBAL_OFFSET_TABLE_+0x10>
    2aac:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000002ab0 <__ctype_toupper_loc@plt>:
    2ab0:	ff 25 7a 71 21 00    	jmp    QWORD PTR [rip+0x21717a]        # 219c30 <__ctype_toupper_loc@GLIBC_2.3>
    2ab6:	68 00 00 00 00       	push   0x0
    2abb:	e9 e0 ff ff ff       	jmp    2aa0 <.plt>

0000000000002ac0 <getenv@plt>:
    2ac0:	ff 25 72 71 21 00    	jmp    QWORD PTR [rip+0x217172]        # 219c38 <getenv@GLIBC_2.2.5>
    2ac6:	68 01 00 00 00       	push   0x1
    2acb:	e9 d0 ff ff ff       	jmp    2aa0 <.plt>

0000000000002ad0 <raise@plt>:
    2ad0:	ff 25 6a 71 21 00    	jmp    QWORD PTR [rip+0x21716a]        # 219c40 <raise@GLIBC_2.2.5>
    2ad6:	68 02 00 00 00       	push   0x2
    2adb:	e9 c0 ff ff ff       	jmp    2aa0 <.plt>

0000000000002ae0 <pthread_create@plt>:
    2ae0:	ff 25 62 71 21 00    	jmp    QWORD PTR [rip+0x217162]        # 219c48 <pthread_create@GLIBC_2.2.5>
    2ae6:	68 03 00 00 00       	push   0x3
    2aeb:	e9 b0 ff ff ff       	jmp    2aa0 <.plt>

0000000000002af0 <pthread_sigmask@plt>:
    2af0:	ff 25 5a 71 21 00    	jmp    QWORD PTR [rip+0x21715a]        # 219c50 <pthread_sigmask@GLIBC_2.2.5>
    2af6:	68 04 00 00 00       	push   0x4
    2afb:	e9 a0 ff ff ff       	jmp    2aa0 <.plt>

0000000000002b00 <abort@plt>:
    2b00:	ff 25 52 71 21 00    	jmp    QWORD PTR [rip+0x217152]        # 219c58 <abort@GLIBC_2.2.5>
    2b06:	68 05 00 00 00       	push   0x5
    2b0b:	e9 90 ff ff ff       	jmp    2aa0 <.plt>

0000000000002b10 <__errno_location@plt>:
    2b10:	ff 25 4a 71 21 00    	jmp    QWORD PTR [rip+0x21714a]        # 219c60 <__errno_location@GLIBC_2.2.5>
    2b16:	68 06 00 00 00       	push   0x6
    2b1b:	e9 80 ff ff ff       	jmp    2aa0 <.plt>

0000000000002b20 <unlink@plt>:
    2b20:	ff 25 42 71 21 00    	jmp    QWORD PTR [rip+0x217142]        # 219c68 <unlink@GLIBC_2.2.5>
    2b26:	68 07 00 00 00       	push   0x7
    2b2b:	e9 70 ff ff ff       	jmp    2aa0 <.plt>

0000000000002b30 <strncmp@plt>:
    2b30:	ff 25 3a 71 21 00    	jmp    QWORD PTR [rip+0x21713a]        # 219c70 <strncmp@GLIBC_2.2.5>
    2b36:	68 08 00 00 00       	push   0x8
    2b3b:	e9 60 ff ff ff       	jmp    2aa0 <.plt>

0000000000002b40 <_exit@plt>:
    2b40:	ff 25 32 71 21 00    	jmp    QWORD PTR [rip+0x217132]        # 219c78 <_exit@GLIBC_2.2.5>
    2b46:	68 09 00 00 00       	push   0x9
    2b4b:	e9 50 ff ff ff       	jmp    2aa0 <.plt>

0000000000002b50 <strcpy@plt>:
    2b50:	ff 25 2a 71 21 00    	jmp    QWORD PTR [rip+0x21712a]        # 219c80 <strcpy@GLIBC_2.2.5>
    2b56:	68 0a 00 00 00       	push   0xa
    2b5b:	e9 40 ff ff ff       	jmp    2aa0 <.plt>

0000000000002b60 <__fpending@plt>:
    2b60:	ff 25 22 71 21 00    	jmp    QWORD PTR [rip+0x217122]        # 219c88 <__fpending@GLIBC_2.2.5>
    2b66:	68 0b 00 00 00       	push   0xb
    2b6b:	e9 30 ff ff ff       	jmp    2aa0 <.plt>

0000000000002b70 <__read_chk@plt>:
    2b70:	ff 25 1a 71 21 00    	jmp    QWORD PTR [rip+0x21711a]        # 219c90 <__read_chk@GLIBC_2.4>
    2b76:	68 0c 00 00 00       	push   0xc
    2b7b:	e9 20 ff ff ff       	jmp    2aa0 <.plt>

0000000000002b80 <ferror@plt>:
    2b80:	ff 25 12 71 21 00    	jmp    QWORD PTR [rip+0x217112]        # 219c98 <ferror@GLIBC_2.2.5>
    2b86:	68 0d 00 00 00       	push   0xd
    2b8b:	e9 10 ff ff ff       	jmp    2aa0 <.plt>

0000000000002b90 <qsort@plt>:
    2b90:	ff 25 0a 71 21 00    	jmp    QWORD PTR [rip+0x21710a]        # 219ca0 <qsort@GLIBC_2.2.5>
    2b96:	68 0e 00 00 00       	push   0xe
    2b9b:	e9 00 ff ff ff       	jmp    2aa0 <.plt>

0000000000002ba0 <sigaction@plt>:
    2ba0:	ff 25 02 71 21 00    	jmp    QWORD PTR [rip+0x217102]        # 219ca8 <sigaction@GLIBC_2.2.5>
    2ba6:	68 0f 00 00 00       	push   0xf
    2bab:	e9 f0 fe ff ff       	jmp    2aa0 <.plt>

0000000000002bb0 <iswcntrl@plt>:
    2bb0:	ff 25 fa 70 21 00    	jmp    QWORD PTR [rip+0x2170fa]        # 219cb0 <iswcntrl@GLIBC_2.2.5>
    2bb6:	68 10 00 00 00       	push   0x10
    2bbb:	e9 e0 fe ff ff       	jmp    2aa0 <.plt>

0000000000002bc0 <localeconv@plt>:
    2bc0:	ff 25 f2 70 21 00    	jmp    QWORD PTR [rip+0x2170f2]        # 219cb8 <localeconv@GLIBC_2.2.5>
    2bc6:	68 11 00 00 00       	push   0x11
    2bcb:	e9 d0 fe ff ff       	jmp    2aa0 <.plt>

0000000000002bd0 <fcntl@plt>:
    2bd0:	ff 25 ea 70 21 00    	jmp    QWORD PTR [rip+0x2170ea]        # 219cc0 <fcntl@GLIBC_2.2.5>
    2bd6:	68 12 00 00 00       	push   0x12
    2bdb:	e9 c0 fe ff ff       	jmp    2aa0 <.plt>

0000000000002be0 <clearerr_unlocked@plt>:
    2be0:	ff 25 e2 70 21 00    	jmp    QWORD PTR [rip+0x2170e2]        # 219cc8 <clearerr_unlocked@GLIBC_2.2.5>
    2be6:	68 13 00 00 00       	push   0x13
    2beb:	e9 b0 fe ff ff       	jmp    2aa0 <.plt>

0000000000002bf0 <write@plt>:
    2bf0:	ff 25 da 70 21 00    	jmp    QWORD PTR [rip+0x2170da]        # 219cd0 <write@GLIBC_2.2.5>
    2bf6:	68 14 00 00 00       	push   0x14
    2bfb:	e9 a0 fe ff ff       	jmp    2aa0 <.plt>

0000000000002c00 <getpid@plt>:
    2c00:	ff 25 d2 70 21 00    	jmp    QWORD PTR [rip+0x2170d2]        # 219cd8 <getpid@GLIBC_2.2.5>
    2c06:	68 15 00 00 00       	push   0x15
    2c0b:	e9 90 fe ff ff       	jmp    2aa0 <.plt>

0000000000002c10 <fread_unlocked@plt>:
    2c10:	ff 25 ca 70 21 00    	jmp    QWORD PTR [rip+0x2170ca]        # 219ce0 <fread_unlocked@GLIBC_2.2.5>
    2c16:	68 16 00 00 00       	push   0x16
    2c1b:	e9 80 fe ff ff       	jmp    2aa0 <.plt>

0000000000002c20 <textdomain@plt>:
    2c20:	ff 25 c2 70 21 00    	jmp    QWORD PTR [rip+0x2170c2]        # 219ce8 <textdomain@GLIBC_2.2.5>
    2c26:	68 17 00 00 00       	push   0x17
    2c2b:	e9 70 fe ff ff       	jmp    2aa0 <.plt>

0000000000002c30 <pthread_cond_wait@plt>:
    2c30:	ff 25 ba 70 21 00    	jmp    QWORD PTR [rip+0x2170ba]        # 219cf0 <pthread_cond_wait@GLIBC_2.3.2>
    2c36:	68 18 00 00 00       	push   0x18
    2c3b:	e9 60 fe ff ff       	jmp    2aa0 <.plt>

0000000000002c40 <fclose@plt>:
    2c40:	ff 25 b2 70 21 00    	jmp    QWORD PTR [rip+0x2170b2]        # 219cf8 <fclose@GLIBC_2.2.5>
    2c46:	68 19 00 00 00       	push   0x19
    2c4b:	e9 50 fe ff ff       	jmp    2aa0 <.plt>

0000000000002c50 <__sched_cpucount@plt>:
    2c50:	ff 25 aa 70 21 00    	jmp    QWORD PTR [rip+0x2170aa]        # 219d00 <__sched_cpucount@GLIBC_2.6>
    2c56:	68 1a 00 00 00       	push   0x1a
    2c5b:	e9 40 fe ff ff       	jmp    2aa0 <.plt>

0000000000002c60 <bindtextdomain@plt>:
    2c60:	ff 25 a2 70 21 00    	jmp    QWORD PTR [rip+0x2170a2]        # 219d08 <bindtextdomain@GLIBC_2.2.5>
    2c66:	68 1b 00 00 00       	push   0x1b
    2c6b:	e9 30 fe ff ff       	jmp    2aa0 <.plt>

0000000000002c70 <dcgettext@plt>:
    2c70:	ff 25 9a 70 21 00    	jmp    QWORD PTR [rip+0x21709a]        # 219d10 <dcgettext@GLIBC_2.2.5>
    2c76:	68 1c 00 00 00       	push   0x1c
    2c7b:	e9 20 fe ff ff       	jmp    2aa0 <.plt>

0000000000002c80 <__ctype_get_mb_cur_max@plt>:
    2c80:	ff 25 92 70 21 00    	jmp    QWORD PTR [rip+0x217092]        # 219d18 <__ctype_get_mb_cur_max@GLIBC_2.2.5>
    2c86:	68 1d 00 00 00       	push   0x1d
    2c8b:	e9 10 fe ff ff       	jmp    2aa0 <.plt>

0000000000002c90 <strlen@plt>:
    2c90:	ff 25 8a 70 21 00    	jmp    QWORD PTR [rip+0x21708a]        # 219d20 <strlen@GLIBC_2.2.5>
    2c96:	68 1e 00 00 00       	push   0x1e
    2c9b:	e9 00 fe ff ff       	jmp    2aa0 <.plt>

0000000000002ca0 <__stack_chk_fail@plt>:
    2ca0:	ff 25 82 70 21 00    	jmp    QWORD PTR [rip+0x217082]        # 219d28 <__stack_chk_fail@GLIBC_2.4>
    2ca6:	68 1f 00 00 00       	push   0x1f
    2cab:	e9 f0 fd ff ff       	jmp    2aa0 <.plt>

0000000000002cb0 <getuid@plt>:
    2cb0:	ff 25 7a 70 21 00    	jmp    QWORD PTR [rip+0x21707a]        # 219d30 <getuid@GLIBC_2.2.5>
    2cb6:	68 20 00 00 00       	push   0x20
    2cbb:	e9 e0 fd ff ff       	jmp    2aa0 <.plt>

0000000000002cc0 <getopt_long@plt>:
    2cc0:	ff 25 72 70 21 00    	jmp    QWORD PTR [rip+0x217072]        # 219d38 <getopt_long@GLIBC_2.2.5>
    2cc6:	68 21 00 00 00       	push   0x21
    2ccb:	e9 d0 fd ff ff       	jmp    2aa0 <.plt>

0000000000002cd0 <mbrtowc@plt>:
    2cd0:	ff 25 6a 70 21 00    	jmp    QWORD PTR [rip+0x21706a]        # 219d40 <mbrtowc@GLIBC_2.2.5>
    2cd6:	68 22 00 00 00       	push   0x22
    2cdb:	e9 c0 fd ff ff       	jmp    2aa0 <.plt>

0000000000002ce0 <dup2@plt>:
    2ce0:	ff 25 62 70 21 00    	jmp    QWORD PTR [rip+0x217062]        # 219d48 <dup2@GLIBC_2.2.5>
    2ce6:	68 23 00 00 00       	push   0x23
    2ceb:	e9 b0 fd ff ff       	jmp    2aa0 <.plt>

0000000000002cf0 <strchr@plt>:
    2cf0:	ff 25 5a 70 21 00    	jmp    QWORD PTR [rip+0x21705a]        # 219d50 <strchr@GLIBC_2.2.5>
    2cf6:	68 24 00 00 00       	push   0x24
    2cfb:	e9 a0 fd ff ff       	jmp    2aa0 <.plt>

0000000000002d00 <nanosleep@plt>:
    2d00:	ff 25 52 70 21 00    	jmp    QWORD PTR [rip+0x217052]        # 219d58 <nanosleep@GLIBC_2.2.5>
    2d06:	68 25 00 00 00       	push   0x25
    2d0b:	e9 90 fd ff ff       	jmp    2aa0 <.plt>

0000000000002d10 <__overflow@plt>:
    2d10:	ff 25 4a 70 21 00    	jmp    QWORD PTR [rip+0x21704a]        # 219d60 <__overflow@GLIBC_2.2.5>
    2d16:	68 26 00 00 00       	push   0x26
    2d1b:	e9 80 fd ff ff       	jmp    2aa0 <.plt>

0000000000002d20 <strrchr@plt>:
    2d20:	ff 25 42 70 21 00    	jmp    QWORD PTR [rip+0x217042]        # 219d68 <strrchr@GLIBC_2.2.5>
    2d26:	68 27 00 00 00       	push   0x27
    2d2b:	e9 70 fd ff ff       	jmp    2aa0 <.plt>

0000000000002d30 <ftruncate@plt>:
    2d30:	ff 25 3a 70 21 00    	jmp    QWORD PTR [rip+0x21703a]        # 219d70 <ftruncate@GLIBC_2.2.5>
    2d36:	68 28 00 00 00       	push   0x28
    2d3b:	e9 60 fd ff ff       	jmp    2aa0 <.plt>

0000000000002d40 <mkostemp@plt>:
    2d40:	ff 25 32 70 21 00    	jmp    QWORD PTR [rip+0x217032]        # 219d78 <mkostemp@GLIBC_2.7>
    2d46:	68 29 00 00 00       	push   0x29
    2d4b:	e9 50 fd ff ff       	jmp    2aa0 <.plt>

0000000000002d50 <lseek@plt>:
    2d50:	ff 25 2a 70 21 00    	jmp    QWORD PTR [rip+0x21702a]        # 219d80 <lseek@GLIBC_2.2.5>
    2d56:	68 2a 00 00 00       	push   0x2a
    2d5b:	e9 40 fd ff ff       	jmp    2aa0 <.plt>

0000000000002d60 <gettimeofday@plt>:
    2d60:	ff 25 22 70 21 00    	jmp    QWORD PTR [rip+0x217022]        # 219d88 <gettimeofday@GLIBC_2.2.5>
    2d66:	68 2b 00 00 00       	push   0x2b
    2d6b:	e9 30 fd ff ff       	jmp    2aa0 <.plt>

0000000000002d70 <__assert_fail@plt>:
    2d70:	ff 25 1a 70 21 00    	jmp    QWORD PTR [rip+0x21701a]        # 219d90 <__assert_fail@GLIBC_2.2.5>
    2d76:	68 2c 00 00 00       	push   0x2c
    2d7b:	e9 20 fd ff ff       	jmp    2aa0 <.plt>

0000000000002d80 <__strtoul_internal@plt>:
    2d80:	ff 25 12 70 21 00    	jmp    QWORD PTR [rip+0x217012]        # 219d98 <__strtoul_internal@GLIBC_2.2.5>
    2d86:	68 2d 00 00 00       	push   0x2d
    2d8b:	e9 10 fd ff ff       	jmp    2aa0 <.plt>

0000000000002d90 <memset@plt>:
    2d90:	ff 25 0a 70 21 00    	jmp    QWORD PTR [rip+0x21700a]        # 219da0 <memset@GLIBC_2.2.5>
    2d96:	68 2e 00 00 00       	push   0x2e
    2d9b:	e9 00 fd ff ff       	jmp    2aa0 <.plt>

0000000000002da0 <fgetc@plt>:
    2da0:	ff 25 02 70 21 00    	jmp    QWORD PTR [rip+0x217002]        # 219da8 <fgetc@GLIBC_2.2.5>
    2da6:	68 2f 00 00 00       	push   0x2f
    2dab:	e9 f0 fc ff ff       	jmp    2aa0 <.plt>

0000000000002db0 <close@plt>:
    2db0:	ff 25 fa 6f 21 00    	jmp    QWORD PTR [rip+0x216ffa]        # 219db0 <close@GLIBC_2.2.5>
    2db6:	68 30 00 00 00       	push   0x30
    2dbb:	e9 e0 fc ff ff       	jmp    2aa0 <.plt>

0000000000002dc0 <pipe@plt>:
    2dc0:	ff 25 f2 6f 21 00    	jmp    QWORD PTR [rip+0x216ff2]        # 219db8 <pipe@GLIBC_2.2.5>
    2dc6:	68 31 00 00 00       	push   0x31
    2dcb:	e9 d0 fc ff ff       	jmp    2aa0 <.plt>

0000000000002dd0 <posix_fadvise@plt>:
    2dd0:	ff 25 ea 6f 21 00    	jmp    QWORD PTR [rip+0x216fea]        # 219dc0 <posix_fadvise@GLIBC_2.2.5>
    2dd6:	68 32 00 00 00       	push   0x32
    2ddb:	e9 c0 fc ff ff       	jmp    2aa0 <.plt>

0000000000002de0 <memchr@plt>:
    2de0:	ff 25 e2 6f 21 00    	jmp    QWORD PTR [rip+0x216fe2]        # 219dc8 <memchr@GLIBC_2.2.5>
    2de6:	68 33 00 00 00       	push   0x33
    2deb:	e9 b0 fc ff ff       	jmp    2aa0 <.plt>

0000000000002df0 <memcmp@plt>:
    2df0:	ff 25 da 6f 21 00    	jmp    QWORD PTR [rip+0x216fda]        # 219dd0 <memcmp@GLIBC_2.2.5>
    2df6:	68 34 00 00 00       	push   0x34
    2dfb:	e9 a0 fc ff ff       	jmp    2aa0 <.plt>

0000000000002e00 <pthread_cond_signal@plt>:
    2e00:	ff 25 d2 6f 21 00    	jmp    QWORD PTR [rip+0x216fd2]        # 219dd8 <pthread_cond_signal@GLIBC_2.3.2>
    2e06:	68 35 00 00 00       	push   0x35
    2e0b:	e9 90 fc ff ff       	jmp    2aa0 <.plt>

0000000000002e10 <fputs_unlocked@plt>:
    2e10:	ff 25 ca 6f 21 00    	jmp    QWORD PTR [rip+0x216fca]        # 219de0 <fputs_unlocked@GLIBC_2.2.5>
    2e16:	68 36 00 00 00       	push   0x36
    2e1b:	e9 80 fc ff ff       	jmp    2aa0 <.plt>

0000000000002e20 <calloc@plt>:
    2e20:	ff 25 c2 6f 21 00    	jmp    QWORD PTR [rip+0x216fc2]        # 219de8 <calloc@GLIBC_2.2.5>
    2e26:	68 37 00 00 00       	push   0x37
    2e2b:	e9 70 fc ff ff       	jmp    2aa0 <.plt>

0000000000002e30 <strxfrm@plt>:
    2e30:	ff 25 ba 6f 21 00    	jmp    QWORD PTR [rip+0x216fba]        # 219df0 <strxfrm@GLIBC_2.2.5>
    2e36:	68 38 00 00 00       	push   0x38
    2e3b:	e9 60 fc ff ff       	jmp    2aa0 <.plt>

0000000000002e40 <strcmp@plt>:
    2e40:	ff 25 b2 6f 21 00    	jmp    QWORD PTR [rip+0x216fb2]        # 219df8 <strcmp@GLIBC_2.2.5>
    2e46:	68 39 00 00 00       	push   0x39
    2e4b:	e9 50 fc ff ff       	jmp    2aa0 <.plt>

0000000000002e50 <signal@plt>:
    2e50:	ff 25 aa 6f 21 00    	jmp    QWORD PTR [rip+0x216faa]        # 219e00 <signal@GLIBC_2.2.5>
    2e56:	68 3a 00 00 00       	push   0x3a
    2e5b:	e9 40 fc ff ff       	jmp    2aa0 <.plt>

0000000000002e60 <sigemptyset@plt>:
    2e60:	ff 25 a2 6f 21 00    	jmp    QWORD PTR [rip+0x216fa2]        # 219e08 <sigemptyset@GLIBC_2.2.5>
    2e66:	68 3b 00 00 00       	push   0x3b
    2e6b:	e9 30 fc ff ff       	jmp    2aa0 <.plt>

0000000000002e70 <strtol@plt>:
    2e70:	ff 25 9a 6f 21 00    	jmp    QWORD PTR [rip+0x216f9a]        # 219e10 <strtol@GLIBC_2.2.5>
    2e76:	68 3c 00 00 00       	push   0x3c
    2e7b:	e9 20 fc ff ff       	jmp    2aa0 <.plt>

0000000000002e80 <memcpy@plt>:
    2e80:	ff 25 92 6f 21 00    	jmp    QWORD PTR [rip+0x216f92]        # 219e18 <memcpy@GLIBC_2.14>
    2e86:	68 3d 00 00 00       	push   0x3d
    2e8b:	e9 10 fc ff ff       	jmp    2aa0 <.plt>

0000000000002e90 <fileno@plt>:
    2e90:	ff 25 8a 6f 21 00    	jmp    QWORD PTR [rip+0x216f8a]        # 219e20 <fileno@GLIBC_2.2.5>
    2e96:	68 3e 00 00 00       	push   0x3e
    2e9b:	e9 00 fc ff ff       	jmp    2aa0 <.plt>

0000000000002ea0 <__stpcpy_chk@plt>:
    2ea0:	ff 25 82 6f 21 00    	jmp    QWORD PTR [rip+0x216f82]        # 219e28 <__stpcpy_chk@GLIBC_2.3.4>
    2ea6:	68 3f 00 00 00       	push   0x3f
    2eab:	e9 f0 fb ff ff       	jmp    2aa0 <.plt>

0000000000002eb0 <getgid@plt>:
    2eb0:	ff 25 7a 6f 21 00    	jmp    QWORD PTR [rip+0x216f7a]        # 219e30 <getgid@GLIBC_2.2.5>
    2eb6:	68 40 00 00 00       	push   0x40
    2ebb:	e9 e0 fb ff ff       	jmp    2aa0 <.plt>

0000000000002ec0 <__xstat@plt>:
    2ec0:	ff 25 72 6f 21 00    	jmp    QWORD PTR [rip+0x216f72]        # 219e38 <__xstat@GLIBC_2.2.5>
    2ec6:	68 41 00 00 00       	push   0x41
    2ecb:	e9 d0 fb ff ff       	jmp    2aa0 <.plt>

0000000000002ed0 <pthread_cond_init@plt>:
    2ed0:	ff 25 6a 6f 21 00    	jmp    QWORD PTR [rip+0x216f6a]        # 219e40 <pthread_cond_init@GLIBC_2.3.2>
    2ed6:	68 42 00 00 00       	push   0x42
    2edb:	e9 c0 fb ff ff       	jmp    2aa0 <.plt>

0000000000002ee0 <wcwidth@plt>:
    2ee0:	ff 25 62 6f 21 00    	jmp    QWORD PTR [rip+0x216f62]        # 219e48 <wcwidth@GLIBC_2.2.5>
    2ee6:	68 43 00 00 00       	push   0x43
    2eeb:	e9 b0 fb ff ff       	jmp    2aa0 <.plt>

0000000000002ef0 <pthread_mutex_unlock@plt>:
    2ef0:	ff 25 5a 6f 21 00    	jmp    QWORD PTR [rip+0x216f5a]        # 219e50 <pthread_mutex_unlock@GLIBC_2.2.5>
    2ef6:	68 44 00 00 00       	push   0x44
    2efb:	e9 a0 fb ff ff       	jmp    2aa0 <.plt>

0000000000002f00 <fflush@plt>:
    2f00:	ff 25 52 6f 21 00    	jmp    QWORD PTR [rip+0x216f52]        # 219e58 <fflush@GLIBC_2.2.5>
    2f06:	68 45 00 00 00       	push   0x45
    2f0b:	e9 90 fb ff ff       	jmp    2aa0 <.plt>

0000000000002f10 <nl_langinfo@plt>:
    2f10:	ff 25 4a 6f 21 00    	jmp    QWORD PTR [rip+0x216f4a]        # 219e60 <nl_langinfo@GLIBC_2.2.5>
    2f16:	68 46 00 00 00       	push   0x46
    2f1b:	e9 80 fb ff ff       	jmp    2aa0 <.plt>

0000000000002f20 <__fxstat@plt>:
    2f20:	ff 25 42 6f 21 00    	jmp    QWORD PTR [rip+0x216f42]        # 219e68 <__fxstat@GLIBC_2.2.5>
    2f26:	68 47 00 00 00       	push   0x47
    2f2b:	e9 70 fb ff ff       	jmp    2aa0 <.plt>

0000000000002f30 <strcoll@plt>:
    2f30:	ff 25 3a 6f 21 00    	jmp    QWORD PTR [rip+0x216f3a]        # 219e70 <strcoll@GLIBC_2.2.5>
    2f36:	68 48 00 00 00       	push   0x48
    2f3b:	e9 60 fb ff ff       	jmp    2aa0 <.plt>

0000000000002f40 <mkstemp@plt>:
    2f40:	ff 25 32 6f 21 00    	jmp    QWORD PTR [rip+0x216f32]        # 219e78 <mkstemp@GLIBC_2.2.5>
    2f46:	68 49 00 00 00       	push   0x49
    2f4b:	e9 50 fb ff ff       	jmp    2aa0 <.plt>

0000000000002f50 <__freading@plt>:
    2f50:	ff 25 2a 6f 21 00    	jmp    QWORD PTR [rip+0x216f2a]        # 219e80 <__freading@GLIBC_2.2.5>
    2f56:	68 4a 00 00 00       	push   0x4a
    2f5b:	e9 40 fb ff ff       	jmp    2aa0 <.plt>

0000000000002f60 <fwrite_unlocked@plt>:
    2f60:	ff 25 22 6f 21 00    	jmp    QWORD PTR [rip+0x216f22]        # 219e88 <fwrite_unlocked@GLIBC_2.2.5>
    2f66:	68 4b 00 00 00       	push   0x4b
    2f6b:	e9 30 fb ff ff       	jmp    2aa0 <.plt>

0000000000002f70 <realloc@plt>:
    2f70:	ff 25 1a 6f 21 00    	jmp    QWORD PTR [rip+0x216f1a]        # 219e90 <realloc@GLIBC_2.2.5>
    2f76:	68 4c 00 00 00       	push   0x4c
    2f7b:	e9 20 fb ff ff       	jmp    2aa0 <.plt>

0000000000002f80 <fdopen@plt>:
    2f80:	ff 25 12 6f 21 00    	jmp    QWORD PTR [rip+0x216f12]        # 219e98 <fdopen@GLIBC_2.2.5>
    2f86:	68 4d 00 00 00       	push   0x4d
    2f8b:	e9 10 fb ff ff       	jmp    2aa0 <.plt>

0000000000002f90 <setlocale@plt>:
    2f90:	ff 25 0a 6f 21 00    	jmp    QWORD PTR [rip+0x216f0a]        # 219ea0 <setlocale@GLIBC_2.2.5>
    2f96:	68 4e 00 00 00       	push   0x4e
    2f9b:	e9 00 fb ff ff       	jmp    2aa0 <.plt>

0000000000002fa0 <__printf_chk@plt>:
    2fa0:	ff 25 02 6f 21 00    	jmp    QWORD PTR [rip+0x216f02]        # 219ea8 <__printf_chk@GLIBC_2.3.4>
    2fa6:	68 4f 00 00 00       	push   0x4f
    2fab:	e9 f0 fa ff ff       	jmp    2aa0 <.plt>

0000000000002fb0 <setvbuf@plt>:
    2fb0:	ff 25 fa 6e 21 00    	jmp    QWORD PTR [rip+0x216efa]        # 219eb0 <setvbuf@GLIBC_2.2.5>
    2fb6:	68 50 00 00 00       	push   0x50
    2fbb:	e9 e0 fa ff ff       	jmp    2aa0 <.plt>

0000000000002fc0 <memmove@plt>:
    2fc0:	ff 25 f2 6e 21 00    	jmp    QWORD PTR [rip+0x216ef2]        # 219eb8 <memmove@GLIBC_2.2.5>
    2fc6:	68 51 00 00 00       	push   0x51
    2fcb:	e9 d0 fa ff ff       	jmp    2aa0 <.plt>

0000000000002fd0 <strtold@plt>:
    2fd0:	ff 25 ea 6e 21 00    	jmp    QWORD PTR [rip+0x216eea]        # 219ec0 <strtold@GLIBC_2.2.5>
    2fd6:	68 52 00 00 00       	push   0x52
    2fdb:	e9 c0 fa ff ff       	jmp    2aa0 <.plt>

0000000000002fe0 <error@plt>:
    2fe0:	ff 25 e2 6e 21 00    	jmp    QWORD PTR [rip+0x216ee2]        # 219ec8 <error@GLIBC_2.2.5>
    2fe6:	68 53 00 00 00       	push   0x53
    2feb:	e9 b0 fa ff ff       	jmp    2aa0 <.plt>

0000000000002ff0 <waitpid@plt>:
    2ff0:	ff 25 da 6e 21 00    	jmp    QWORD PTR [rip+0x216eda]        # 219ed0 <waitpid@GLIBC_2.2.5>
    2ff6:	68 54 00 00 00       	push   0x54
    2ffb:	e9 a0 fa ff ff       	jmp    2aa0 <.plt>

0000000000003000 <__explicit_bzero_chk@plt>:
    3000:	ff 25 d2 6e 21 00    	jmp    QWORD PTR [rip+0x216ed2]        # 219ed8 <__explicit_bzero_chk@GLIBC_2.25>
    3006:	68 55 00 00 00       	push   0x55
    300b:	e9 90 fa ff ff       	jmp    2aa0 <.plt>

0000000000003010 <open@plt>:
    3010:	ff 25 ca 6e 21 00    	jmp    QWORD PTR [rip+0x216eca]        # 219ee0 <open@GLIBC_2.2.5>
    3016:	68 56 00 00 00       	push   0x56
    301b:	e9 80 fa ff ff       	jmp    2aa0 <.plt>

0000000000003020 <fseeko@plt>:
    3020:	ff 25 c2 6e 21 00    	jmp    QWORD PTR [rip+0x216ec2]        # 219ee8 <fseeko@GLIBC_2.2.5>
    3026:	68 57 00 00 00       	push   0x57
    302b:	e9 70 fa ff ff       	jmp    2aa0 <.plt>

0000000000003030 <fopen@plt>:
    3030:	ff 25 ba 6e 21 00    	jmp    QWORD PTR [rip+0x216eba]        # 219ef0 <fopen@GLIBC_2.2.5>
    3036:	68 58 00 00 00       	push   0x58
    303b:	e9 60 fa ff ff       	jmp    2aa0 <.plt>

0000000000003040 <dcngettext@plt>:
    3040:	ff 25 b2 6e 21 00    	jmp    QWORD PTR [rip+0x216eb2]        # 219ef8 <dcngettext@GLIBC_2.2.5>
    3046:	68 59 00 00 00       	push   0x59
    304b:	e9 50 fa ff ff       	jmp    2aa0 <.plt>

0000000000003050 <sysconf@plt>:
    3050:	ff 25 aa 6e 21 00    	jmp    QWORD PTR [rip+0x216eaa]        # 219f00 <sysconf@GLIBC_2.2.5>
    3056:	68 5a 00 00 00       	push   0x5a
    305b:	e9 40 fa ff ff       	jmp    2aa0 <.plt>

0000000000003060 <pthread_join@plt>:
    3060:	ff 25 a2 6e 21 00    	jmp    QWORD PTR [rip+0x216ea2]        # 219f08 <pthread_join@GLIBC_2.2.5>
    3066:	68 5b 00 00 00       	push   0x5b
    306b:	e9 30 fa ff ff       	jmp    2aa0 <.plt>

0000000000003070 <euidaccess@plt>:
    3070:	ff 25 9a 6e 21 00    	jmp    QWORD PTR [rip+0x216e9a]        # 219f10 <euidaccess@GLIBC_2.2.5>
    3076:	68 5c 00 00 00       	push   0x5c
    307b:	e9 20 fa ff ff       	jmp    2aa0 <.plt>

0000000000003080 <strtoul@plt>:
    3080:	ff 25 92 6e 21 00    	jmp    QWORD PTR [rip+0x216e92]        # 219f18 <strtoul@GLIBC_2.2.5>
    3086:	68 5d 00 00 00       	push   0x5d
    308b:	e9 10 fa ff ff       	jmp    2aa0 <.plt>

0000000000003090 <__cxa_atexit@plt>:
    3090:	ff 25 8a 6e 21 00    	jmp    QWORD PTR [rip+0x216e8a]        # 219f20 <__cxa_atexit@GLIBC_2.2.5>
    3096:	68 5e 00 00 00       	push   0x5e
    309b:	e9 00 fa ff ff       	jmp    2aa0 <.plt>

00000000000030a0 <sysinfo@plt>:
    30a0:	ff 25 82 6e 21 00    	jmp    QWORD PTR [rip+0x216e82]        # 219f28 <sysinfo@GLIBC_2.2.5>
    30a6:	68 5f 00 00 00       	push   0x5f
    30ab:	e9 f0 f9 ff ff       	jmp    2aa0 <.plt>

00000000000030b0 <pipe2@plt>:
    30b0:	ff 25 7a 6e 21 00    	jmp    QWORD PTR [rip+0x216e7a]        # 219f30 <pipe2@GLIBC_2.9>
    30b6:	68 60 00 00 00       	push   0x60
    30bb:	e9 e0 f9 ff ff       	jmp    2aa0 <.plt>

00000000000030c0 <getppid@plt>:
    30c0:	ff 25 72 6e 21 00    	jmp    QWORD PTR [rip+0x216e72]        # 219f38 <getppid@GLIBC_2.2.5>
    30c6:	68 61 00 00 00       	push   0x61
    30cb:	e9 d0 f9 ff ff       	jmp    2aa0 <.plt>

00000000000030d0 <sigismember@plt>:
    30d0:	ff 25 6a 6e 21 00    	jmp    QWORD PTR [rip+0x216e6a]        # 219f40 <sigismember@GLIBC_2.2.5>
    30d6:	68 62 00 00 00       	push   0x62
    30db:	e9 c0 f9 ff ff       	jmp    2aa0 <.plt>

00000000000030e0 <exit@plt>:
    30e0:	ff 25 62 6e 21 00    	jmp    QWORD PTR [rip+0x216e62]        # 219f48 <exit@GLIBC_2.2.5>
    30e6:	68 63 00 00 00       	push   0x63
    30eb:	e9 b0 f9 ff ff       	jmp    2aa0 <.plt>

00000000000030f0 <fwrite@plt>:
    30f0:	ff 25 5a 6e 21 00    	jmp    QWORD PTR [rip+0x216e5a]        # 219f50 <fwrite@GLIBC_2.2.5>
    30f6:	68 64 00 00 00       	push   0x64
    30fb:	e9 a0 f9 ff ff       	jmp    2aa0 <.plt>

0000000000003100 <__fprintf_chk@plt>:
    3100:	ff 25 52 6e 21 00    	jmp    QWORD PTR [rip+0x216e52]        # 219f58 <__fprintf_chk@GLIBC_2.3.4>
    3106:	68 65 00 00 00       	push   0x65
    310b:	e9 90 f9 ff ff       	jmp    2aa0 <.plt>

0000000000003110 <getrlimit@plt>:
    3110:	ff 25 4a 6e 21 00    	jmp    QWORD PTR [rip+0x216e4a]        # 219f60 <getrlimit@GLIBC_2.2.5>
    3116:	68 66 00 00 00       	push   0x66
    311b:	e9 80 f9 ff ff       	jmp    2aa0 <.plt>

0000000000003120 <sched_getaffinity@plt>:
    3120:	ff 25 42 6e 21 00    	jmp    QWORD PTR [rip+0x216e42]        # 219f68 <sched_getaffinity@GLIBC_2.3.4>
    3126:	68 67 00 00 00       	push   0x67
    312b:	e9 70 f9 ff ff       	jmp    2aa0 <.plt>

0000000000003130 <fflush_unlocked@plt>:
    3130:	ff 25 3a 6e 21 00    	jmp    QWORD PTR [rip+0x216e3a]        # 219f70 <fflush_unlocked@GLIBC_2.2.5>
    3136:	68 68 00 00 00       	push   0x68
    313b:	e9 60 f9 ff ff       	jmp    2aa0 <.plt>

0000000000003140 <mbsinit@plt>:
    3140:	ff 25 32 6e 21 00    	jmp    QWORD PTR [rip+0x216e32]        # 219f78 <mbsinit@GLIBC_2.2.5>
    3146:	68 69 00 00 00       	push   0x69
    314b:	e9 50 f9 ff ff       	jmp    2aa0 <.plt>

0000000000003150 <execlp@plt>:
    3150:	ff 25 2a 6e 21 00    	jmp    QWORD PTR [rip+0x216e2a]        # 219f80 <execlp@GLIBC_2.2.5>
    3156:	68 6a 00 00 00       	push   0x6a
    315b:	e9 40 f9 ff ff       	jmp    2aa0 <.plt>

0000000000003160 <iswprint@plt>:
    3160:	ff 25 22 6e 21 00    	jmp    QWORD PTR [rip+0x216e22]        # 219f88 <iswprint@GLIBC_2.2.5>
    3166:	68 6b 00 00 00       	push   0x6b
    316b:	e9 30 f9 ff ff       	jmp    2aa0 <.plt>

0000000000003170 <pthread_mutex_init@plt>:
    3170:	ff 25 1a 6e 21 00    	jmp    QWORD PTR [rip+0x216e1a]        # 219f90 <pthread_mutex_init@GLIBC_2.2.5>
    3176:	68 6c 00 00 00       	push   0x6c
    317b:	e9 20 f9 ff ff       	jmp    2aa0 <.plt>

0000000000003180 <sigaddset@plt>:
    3180:	ff 25 12 6e 21 00    	jmp    QWORD PTR [rip+0x216e12]        # 219f98 <sigaddset@GLIBC_2.2.5>
    3186:	68 6d 00 00 00       	push   0x6d
    318b:	e9 10 f9 ff ff       	jmp    2aa0 <.plt>

0000000000003190 <fork@plt>:
    3190:	ff 25 0a 6e 21 00    	jmp    QWORD PTR [rip+0x216e0a]        # 219fa0 <fork@GLIBC_2.2.5>
    3196:	68 6e 00 00 00       	push   0x6e
    319b:	e9 00 f9 ff ff       	jmp    2aa0 <.plt>

00000000000031a0 <pthread_mutex_lock@plt>:
    31a0:	ff 25 02 6e 21 00    	jmp    QWORD PTR [rip+0x216e02]        # 219fa8 <pthread_mutex_lock@GLIBC_2.2.5>
    31a6:	68 6f 00 00 00       	push   0x6f
    31ab:	e9 f0 f8 ff ff       	jmp    2aa0 <.plt>

00000000000031b0 <__ctype_b_loc@plt>:
    31b0:	ff 25 fa 6d 21 00    	jmp    QWORD PTR [rip+0x216dfa]        # 219fb0 <__ctype_b_loc@GLIBC_2.3>
    31b6:	68 70 00 00 00       	push   0x70
    31bb:	e9 e0 f8 ff ff       	jmp    2aa0 <.plt>

Disassembly of section .plt.got:

00000000000031c0 <free@plt>:
    31c0:	ff 25 f2 6d 21 00    	jmp    QWORD PTR [rip+0x216df2]        # 219fb8 <free@GLIBC_2.2.5>
    31c6:	66 90                	xchg   ax,ax

00000000000031c8 <malloc@plt>:
    31c8:	ff 25 0a 6e 21 00    	jmp    QWORD PTR [rip+0x216e0a]        # 219fd8 <malloc@GLIBC_2.2.5>
    31ce:	66 90                	xchg   ax,ax

00000000000031d0 <__cxa_finalize@plt>:
    31d0:	ff 25 12 6e 21 00    	jmp    QWORD PTR [rip+0x216e12]        # 219fe8 <__cxa_finalize@GLIBC_2.2.5>
    31d6:	66 90                	xchg   ax,ax

Disassembly of section .text:

00000000000031e0 <badfieldspec>:
    31e0:	55                   	push   rbp
    31e1:	53                   	push   rbx
    31e2:	48 89 f3             	mov    rbx,rsi
    31e5:	48 83 ec 08          	sub    rsp,0x8
    31e9:	e8 a2 d1 00 00       	call   10390 <quote>
    31ee:	48 89 de             	mov    rsi,rbx
    31f1:	ba 05 00 00 00       	mov    edx,0x5
    31f6:	31 ff                	xor    edi,edi
    31f8:	48 89 c5             	mov    rbp,rax
    31fb:	e8 70 fa ff ff       	call   2c70 <dcgettext@plt>
    3200:	48 8d 35 09 0d 01 00 	lea    rsi,[rip+0x10d09]        # 13f10 <short_options+0x40>
    3207:	48 89 c3             	mov    rbx,rax
    320a:	ba 05 00 00 00       	mov    edx,0x5
    320f:	31 ff                	xor    edi,edi
    3211:	e8 5a fa ff ff       	call   2c70 <dcgettext@plt>
    3216:	49 89 e8             	mov    r8,rbp
    3219:	48 89 c2             	mov    rdx,rax
    321c:	48 89 d9             	mov    rcx,rbx
    321f:	31 f6                	xor    esi,esi
    3221:	bf 02 00 00 00       	mov    edi,0x2
    3226:	31 c0                	xor    eax,eax
    3228:	e8 b3 fd ff ff       	call   2fe0 <error@plt>

000000000000322d <async_safe_die>:
    322d:	41 54                	push   r12
    322f:	55                   	push   rbp
    3230:	49 83 cc ff          	or     r12,0xffffffffffffffff
    3234:	53                   	push   rbx
    3235:	31 db                	xor    ebx,ebx
    3237:	89 fd                	mov    ebp,edi
    3239:	4c 89 e1             	mov    rcx,r12
    323c:	48 89 f7             	mov    rdi,rsi
    323f:	48 83 ec 20          	sub    rsp,0x20
    3243:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    324a:	00 00 
    324c:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
    3251:	31 c0                	xor    eax,eax
    3253:	88 d8                	mov    al,bl
    3255:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    3257:	bf 02 00 00 00       	mov    edi,0x2
    325c:	48 f7 d1             	not    rcx
    325f:	4a 8d 14 21          	lea    rdx,[rcx+r12*1]
    3263:	e8 88 f9 ff ff       	call   2bf0 <write@plt>
    3268:	85 ed                	test   ebp,ebp
    326a:	74 43                	je     32af <async_safe_die+0x82>
    326c:	48 8d 74 24 0c       	lea    rsi,[rsp+0xc]
    3271:	89 ef                	mov    edi,ebp
    3273:	e8 98 a9 00 00       	call   dc10 <inttostr>
    3278:	48 8d 35 ca 21 01 00 	lea    rsi,[rip+0x121ca]        # 15449 <short_options+0x1579>
    327f:	48 89 c5             	mov    rbp,rax
    3282:	ba 08 00 00 00       	mov    edx,0x8
    3287:	bf 02 00 00 00       	mov    edi,0x2
    328c:	e8 5f f9 ff ff       	call   2bf0 <write@plt>
    3291:	48 89 ef             	mov    rdi,rbp
    3294:	4c 89 e1             	mov    rcx,r12
    3297:	88 d8                	mov    al,bl
    3299:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    329b:	48 89 ee             	mov    rsi,rbp
    329e:	bf 02 00 00 00       	mov    edi,0x2
    32a3:	48 f7 d1             	not    rcx
    32a6:	4a 8d 14 21          	lea    rdx,[rcx+r12*1]
    32aa:	e8 41 f9 ff ff       	call   2bf0 <write@plt>
    32af:	48 8d 35 54 22 01 00 	lea    rsi,[rip+0x12254]        # 1550a <short_options+0x163a>
    32b6:	bf 02 00 00 00       	mov    edi,0x2
    32bb:	ba 01 00 00 00       	mov    edx,0x1
    32c0:	e8 2b f9 ff ff       	call   2bf0 <write@plt>
    32c5:	bf 02 00 00 00       	mov    edi,0x2
    32ca:	e8 71 f8 ff ff       	call   2b40 <_exit@plt>

00000000000032cf <xfopen.part.7>:
    32cf:	53                   	push   rbx
    32d0:	48 8d 35 c8 21 01 00 	lea    rsi,[rip+0x121c8]        # 1549f <short_options+0x15cf>
    32d7:	48 89 fb             	mov    rbx,rdi
    32da:	ba 05 00 00 00       	mov    edx,0x5
    32df:	31 ff                	xor    edi,edi
    32e1:	e8 8a f9 ff ff       	call   2c70 <dcgettext@plt>
    32e6:	48 89 de             	mov    rsi,rbx
    32e9:	48 89 c7             	mov    rdi,rax
    32ec:	e8 2f 30 00 00       	call   6320 <sort_die>
    32f1:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    32f8:	00 00 00 
    32fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003300 <main>:
    3300:	41 57                	push   r15
    3302:	41 56                	push   r14
    3304:	41 55                	push   r13
    3306:	41 54                	push   r12
    3308:	55                   	push   rbp
    3309:	53                   	push   rbx
    330a:	89 fb                	mov    ebx,edi
    330c:	48 8d 3d b2 22 01 00 	lea    rdi,[rip+0x122b2]        # 155c5 <short_options+0x16f5>
    3313:	48 89 f5             	mov    rbp,rsi
    3316:	48 81 ec f8 03 00 00 	sub    rsp,0x3f8
    331d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3324:	00 00 
    3326:	48 89 84 24 e8 03 00 	mov    QWORD PTR [rsp+0x3e8],rax
    332d:	00 
    332e:	31 c0                	xor    eax,eax
    3330:	e8 8b f7 ff ff       	call   2ac0 <getenv@plt>
    3335:	48 85 c0             	test   rax,rax
    3338:	48 89 44 24 68       	mov    QWORD PTR [rsp+0x68],rax
    333d:	0f 95 44 24 08       	setne  BYTE PTR [rsp+0x8]
    3342:	e8 a9 b2 00 00       	call   e5f0 <posix2_version>
    3347:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    334b:	2d b0 0d 03 00       	sub    eax,0x30db0
    3350:	3d b8 02 00 00       	cmp    eax,0x2b8
    3355:	0f 97 44 24 10       	seta   BYTE PTR [rsp+0x10]
    335a:	e8 21 b3 00 00       	call   e680 <set_program_name>
    335f:	48 8d 35 a5 21 01 00 	lea    rsi,[rip+0x121a5]        # 1550b <short_options+0x163b>
    3366:	bf 06 00 00 00       	mov    edi,0x6
    336b:	e8 20 fc ff ff       	call   2f90 <setlocale@plt>
    3370:	48 8d 35 5e 22 01 00 	lea    rsi,[rip+0x1225e]        # 155d5 <short_options+0x1705>
    3377:	48 8d 3d 1e 22 01 00 	lea    rdi,[rip+0x1221e]        # 1559c <short_options+0x16cc>
    337e:	48 89 44 24 50       	mov    QWORD PTR [rsp+0x50],rax
    3383:	e8 d8 f8 ff ff       	call   2c60 <bindtextdomain@plt>
    3388:	48 8d 3d 0d 22 01 00 	lea    rdi,[rip+0x1220d]        # 1559c <short_options+0x16cc>
    338f:	e8 8c f8 ff ff       	call   2c20 <textdomain@plt>
    3394:	bf 03 00 00 00       	mov    edi,0x3
    3399:	c7 05 8d 6d 21 00 02 	mov    DWORD PTR [rip+0x216d8d],0x2        # 21a130 <exit_failure>
    33a0:	00 00 00 
    33a3:	e8 38 92 00 00       	call   c5e0 <hard_locale>
    33a8:	bf 02 00 00 00       	mov    edi,0x2
    33ad:	88 05 ce 74 21 00    	mov    BYTE PTR [rip+0x2174ce],al        # 21a881 <hard_LC_COLLATE>
    33b3:	e8 28 92 00 00       	call   c5e0 <hard_locale>
    33b8:	41 89 c6             	mov    r14d,eax
    33bb:	88 05 bf 74 21 00    	mov    BYTE PTR [rip+0x2174bf],al        # 21a880 <hard_LC_TIME>
    33c1:	e8 fa f7 ff ff       	call   2bc0 <localeconv@plt>
    33c6:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    33c9:	0f b6 31             	movzx  esi,BYTE PTR [rcx]
    33cc:	40 84 f6             	test   sil,sil
    33cf:	89 35 b3 74 21 00    	mov    DWORD PTR [rip+0x2174b3],esi        # 21a888 <decimal_point>
    33d5:	0f 84 e2 00 00 00    	je     34bd <main+0x1bd>
    33db:	80 79 01 00          	cmp    BYTE PTR [rcx+0x1],0x0
    33df:	0f 85 d8 00 00 00    	jne    34bd <main+0x1bd>
    33e5:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    33e9:	0f b6 0a             	movzx  ecx,BYTE PTR [rdx]
    33ec:	84 c9                	test   cl,cl
    33ee:	89 0d 90 74 21 00    	mov    DWORD PTR [rip+0x217490],ecx        # 21a884 <thousands_sep>
    33f4:	0f 84 b4 00 00 00    	je     34ae <main+0x1ae>
    33fa:	80 7a 01 00          	cmp    BYTE PTR [rdx+0x1],0x0
    33fe:	0f 85 aa 00 00 00    	jne    34ae <main+0x1ae>
    3404:	c6 05 2d 70 21 00 00 	mov    BYTE PTR [rip+0x21702d],0x0        # 21a438 <have_read_stdin>
    340b:	4c 8d 25 4e 70 21 00 	lea    r12,[rip+0x21704e]        # 21a460 <fold_toupper>
    3412:	e8 99 fd ff ff       	call   31b0 <__ctype_b_loc@plt>
    3417:	49 89 c5             	mov    r13,rax
    341a:	e8 91 f6 ff ff       	call   2ab0 <__ctype_toupper_loc@plt>
    341f:	31 d2                	xor    edx,edx
    3421:	4c 8d 15 38 73 21 00 	lea    r10,[rip+0x217338]        # 21a760 <blanks>
    3428:	4c 8d 0d 31 72 21 00 	lea    r9,[rip+0x217231]        # 21a660 <nonprinting>
    342f:	4c 8d 05 2a 71 21 00 	lea    r8,[rip+0x21712a]        # 21a560 <nondictionary>
    3436:	eb 3d                	jmp    3475 <main+0x175>
    3438:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    343f:	00 
    3440:	66 85 ff             	test   di,di
    3443:	75 52                	jne    3497 <main+0x197>
    3445:	66 85 c9             	test   cx,cx
    3448:	41 c6 04 12 00       	mov    BYTE PTR [r10+rdx*1],0x0
    344d:	41 88 34 11          	mov    BYTE PTR [r9+rdx*1],sil
    3451:	75 57                	jne    34aa <main+0x1aa>
    3453:	48 83 fa 0a          	cmp    rdx,0xa
    3457:	0f 95 c1             	setne  cl
    345a:	41 88 0c 10          	mov    BYTE PTR [r8+rdx*1],cl
    345e:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    3461:	8b 0c 91             	mov    ecx,DWORD PTR [rcx+rdx*4]
    3464:	41 88 0c 14          	mov    BYTE PTR [r12+rdx*1],cl
    3468:	48 83 c2 01          	add    rdx,0x1
    346c:	48 81 fa 00 01 00 00 	cmp    rdx,0x100
    3473:	74 5b                	je     34d0 <main+0x1d0>
    3475:	49 8b 4d 00          	mov    rcx,QWORD PTR [r13+0x0]
    3479:	0f b7 0c 51          	movzx  ecx,WORD PTR [rcx+rdx*2]
    347d:	89 ce                	mov    esi,ecx
    347f:	89 cf                	mov    edi,ecx
    3481:	83 e1 08             	and    ecx,0x8
    3484:	66 c1 ee 0e          	shr    si,0xe
    3488:	83 e7 01             	and    edi,0x1
    348b:	83 f6 01             	xor    esi,0x1
    348e:	83 e6 01             	and    esi,0x1
    3491:	48 83 fa 0a          	cmp    rdx,0xa
    3495:	75 a9                	jne    3440 <main+0x140>
    3497:	66 85 c9             	test   cx,cx
    349a:	41 c6 04 12 01       	mov    BYTE PTR [r10+rdx*1],0x1
    349f:	41 88 34 11          	mov    BYTE PTR [r9+rdx*1],sil
    34a3:	75 05                	jne    34aa <main+0x1aa>
    34a5:	66 85 ff             	test   di,di
    34a8:	74 a9                	je     3453 <main+0x153>
    34aa:	31 c9                	xor    ecx,ecx
    34ac:	eb ac                	jmp    345a <main+0x15a>
    34ae:	c7 05 cc 73 21 00 ff 	mov    DWORD PTR [rip+0x2173cc],0xffffffff        # 21a884 <thousands_sep>
    34b5:	ff ff ff 
    34b8:	e9 47 ff ff ff       	jmp    3404 <main+0x104>
    34bd:	c7 05 c1 73 21 00 2e 	mov    DWORD PTR [rip+0x2173c1],0x2e        # 21a888 <decimal_point>
    34c4:	00 00 00 
    34c7:	e9 19 ff ff ff       	jmp    33e5 <main+0xe5>
    34cc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    34d0:	45 84 f6             	test   r14b,r14b
    34d3:	0f 84 c3 00 00 00    	je     359c <main+0x29c>
    34d9:	4c 8d 3d 80 6b 21 00 	lea    r15,[rip+0x216b80]        # 21a060 <monthtab>
    34e0:	41 be 01 00 00 00    	mov    r14d,0x1
    34e6:	89 5c 24 18          	mov    DWORD PTR [rsp+0x18],ebx
    34ea:	48 89 6c 24 20       	mov    QWORD PTR [rsp+0x20],rbp
    34ef:	90                   	nop
    34f0:	41 8d be 0d 00 02 00 	lea    edi,[r14+0x2000d]
    34f7:	e8 14 fa ff ff       	call   2f10 <nl_langinfo@plt>
    34fc:	48 89 c7             	mov    rdi,rax
    34ff:	48 89 c5             	mov    rbp,rax
    3502:	e8 89 f7 ff ff       	call   2c90 <strlen@plt>
    3507:	48 8d 78 01          	lea    rdi,[rax+0x1]
    350b:	48 89 c3             	mov    rbx,rax
    350e:	e8 cd e8 00 00       	call   11de0 <xmalloc>
    3513:	48 85 db             	test   rbx,rbx
    3516:	49 89 07             	mov    QWORD PTR [r15],rax
    3519:	45 89 77 08          	mov    DWORD PTR [r15+0x8],r14d
    351d:	0f 84 6d 0a 00 00    	je     3f90 <main+0xc90>
    3523:	4d 8b 55 00          	mov    r10,QWORD PTR [r13+0x0]
    3527:	4c 8d 44 1d 00       	lea    r8,[rbp+rbx*1+0x0]
    352c:	48 89 ef             	mov    rdi,rbp
    352f:	45 31 c9             	xor    r9d,r9d
    3532:	48 89 c1             	mov    rcx,rax
    3535:	0f 1f 00             	nop    DWORD PTR [rax]
    3538:	0f b6 37             	movzx  esi,BYTE PTR [rdi]
    353b:	49 89 cb             	mov    r11,rcx
    353e:	41 f6 04 72 01       	test   BYTE PTR [r10+rsi*2],0x1
    3543:	75 12                	jne    3557 <main+0x257>
    3545:	41 0f b6 14 34       	movzx  edx,BYTE PTR [r12+rsi*1]
    354a:	49 83 c1 01          	add    r9,0x1
    354e:	88 11                	mov    BYTE PTR [rcx],dl
    3550:	4a 8d 0c 08          	lea    rcx,[rax+r9*1]
    3554:	49 89 cb             	mov    r11,rcx
    3557:	48 83 c7 01          	add    rdi,0x1
    355b:	49 39 f8             	cmp    r8,rdi
    355e:	75 d8                	jne    3538 <main+0x238>
    3560:	49 83 c6 01          	add    r14,0x1
    3564:	49 83 c7 10          	add    r15,0x10
    3568:	41 c6 03 00          	mov    BYTE PTR [r11],0x0
    356c:	49 83 fe 0d          	cmp    r14,0xd
    3570:	0f 85 7a ff ff ff    	jne    34f0 <main+0x1f0>
    3576:	48 8d 0d 13 2d 00 00 	lea    rcx,[rip+0x2d13]        # 6290 <struct_month_cmp>
    357d:	48 8d 3d dc 6a 21 00 	lea    rdi,[rip+0x216adc]        # 21a060 <monthtab>
    3584:	ba 10 00 00 00       	mov    edx,0x10
    3589:	be 0c 00 00 00       	mov    esi,0xc
    358e:	8b 5c 24 18          	mov    ebx,DWORD PTR [rsp+0x18]
    3592:	48 8b 6c 24 20       	mov    rbp,QWORD PTR [rsp+0x20]
    3597:	e8 f4 f5 ff ff       	call   2b90 <qsort@plt>
    359c:	48 8d 3d fd 6d 21 00 	lea    rdi,[rip+0x216dfd]        # 21a3a0 <caught_signals>
    35a3:	4c 8d 2d da 07 01 00 	lea    r13,[rip+0x107da]        # 13d84 <sig.9493+0x4>
    35aa:	41 bf 0e 00 00 00    	mov    r15d,0xe
    35b0:	e8 ab f8 ff ff       	call   2e60 <sigemptyset@plt>
    35b5:	48 8d 84 24 c0 02 00 	lea    rax,[rsp+0x2c0]
    35bc:	00 
    35bd:	89 5c 24 18          	mov    DWORD PTR [rsp+0x18],ebx
    35c1:	4d 8d 75 28          	lea    r14,[r13+0x28]
    35c5:	44 89 fb             	mov    ebx,r15d
    35c8:	4d 89 ec             	mov    r12,r13
    35cb:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
    35d0:	49 89 c7             	mov    r15,rax
    35d3:	eb 0b                	jmp    35e0 <main+0x2e0>
    35d5:	0f 1f 00             	nop    DWORD PTR [rax]
    35d8:	41 8b 1c 24          	mov    ebx,DWORD PTR [r12]
    35dc:	49 83 c4 04          	add    r12,0x4
    35e0:	31 f6                	xor    esi,esi
    35e2:	4c 89 fa             	mov    rdx,r15
    35e5:	89 df                	mov    edi,ebx
    35e7:	e8 b4 f5 ff ff       	call   2ba0 <sigaction@plt>
    35ec:	48 83 bc 24 c0 02 00 	cmp    QWORD PTR [rsp+0x2c0],0x1
    35f3:	00 01 
    35f5:	74 0e                	je     3605 <main+0x305>
    35f7:	48 8d 3d a2 6d 21 00 	lea    rdi,[rip+0x216da2]        # 21a3a0 <caught_signals>
    35fe:	89 de                	mov    esi,ebx
    3600:	e8 7b fb ff ff       	call   3180 <sigaddset@plt>
    3605:	4d 39 e6             	cmp    r14,r12
    3608:	75 ce                	jne    35d8 <main+0x2d8>
    360a:	66 0f 6f 05 8e 6d 21 	movdqa xmm0,XMMWORD PTR [rip+0x216d8e]        # 21a3a0 <caught_signals>
    3611:	00 
    3612:	48 8d 05 b7 2c 00 00 	lea    rax,[rip+0x2cb7]        # 62d0 <sighandler>
    3619:	8b 5c 24 18          	mov    ebx,DWORD PTR [rsp+0x18]
    361d:	c7 84 24 48 03 00 00 	mov    DWORD PTR [rsp+0x348],0x0
    3624:	00 00 00 00 
    3628:	41 be 0e 00 00 00    	mov    r14d,0xe
    362e:	0f 11 84 24 c8 02 00 	movups XMMWORD PTR [rsp+0x2c8],xmm0
    3635:	00 
    3636:	48 89 84 24 c0 02 00 	mov    QWORD PTR [rsp+0x2c0],rax
    363d:	00 
    363e:	4c 8d 3d 5b 6d 21 00 	lea    r15,[rip+0x216d5b]        # 21a3a0 <caught_signals>
    3645:	66 0f 6f 05 63 6d 21 	movdqa xmm0,XMMWORD PTR [rip+0x216d63]        # 21a3b0 <caught_signals+0x10>
    364c:	00 
    364d:	0f 11 84 24 d8 02 00 	movups XMMWORD PTR [rsp+0x2d8],xmm0
    3654:	00 
    3655:	66 0f 6f 05 63 6d 21 	movdqa xmm0,XMMWORD PTR [rip+0x216d63]        # 21a3c0 <caught_signals+0x20>
    365c:	00 
    365d:	0f 11 84 24 e8 02 00 	movups XMMWORD PTR [rsp+0x2e8],xmm0
    3664:	00 
    3665:	66 0f 6f 05 63 6d 21 	movdqa xmm0,XMMWORD PTR [rip+0x216d63]        # 21a3d0 <caught_signals+0x30>
    366c:	00 
    366d:	0f 11 84 24 f8 02 00 	movups XMMWORD PTR [rsp+0x2f8],xmm0
    3674:	00 
    3675:	66 0f 6f 05 63 6d 21 	movdqa xmm0,XMMWORD PTR [rip+0x216d63]        # 21a3e0 <caught_signals+0x40>
    367c:	00 
    367d:	0f 11 84 24 08 03 00 	movups XMMWORD PTR [rsp+0x308],xmm0
    3684:	00 
    3685:	66 0f 6f 05 63 6d 21 	movdqa xmm0,XMMWORD PTR [rip+0x216d63]        # 21a3f0 <caught_signals+0x50>
    368c:	00 
    368d:	0f 11 84 24 18 03 00 	movups XMMWORD PTR [rsp+0x318],xmm0
    3694:	00 
    3695:	66 0f 6f 05 63 6d 21 	movdqa xmm0,XMMWORD PTR [rip+0x216d63]        # 21a400 <caught_signals+0x60>
    369c:	00 
    369d:	0f 11 84 24 28 03 00 	movups XMMWORD PTR [rsp+0x328],xmm0
    36a4:	00 
    36a5:	66 0f 6f 05 63 6d 21 	movdqa xmm0,XMMWORD PTR [rip+0x216d63]        # 21a410 <caught_signals+0x70>
    36ac:	00 
    36ad:	0f 11 84 24 38 03 00 	movups XMMWORD PTR [rsp+0x338],xmm0
    36b4:	00 
    36b5:	eb 16                	jmp    36cd <main+0x3cd>
    36b7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    36be:	00 00 
    36c0:	4d 39 ec             	cmp    r12,r13
    36c3:	74 2b                	je     36f0 <main+0x3f0>
    36c5:	45 8b 75 00          	mov    r14d,DWORD PTR [r13+0x0]
    36c9:	49 83 c5 04          	add    r13,0x4
    36cd:	44 89 f6             	mov    esi,r14d
    36d0:	4c 89 ff             	mov    rdi,r15
    36d3:	e8 f8 f9 ff ff       	call   30d0 <sigismember@plt>
    36d8:	85 c0                	test   eax,eax
    36da:	74 e4                	je     36c0 <main+0x3c0>
    36dc:	48 8b 74 24 20       	mov    rsi,QWORD PTR [rsp+0x20]
    36e1:	31 d2                	xor    edx,edx
    36e3:	44 89 f7             	mov    edi,r14d
    36e6:	e8 b5 f4 ff ff       	call   2ba0 <sigaction@plt>
    36eb:	4d 39 ec             	cmp    r12,r13
    36ee:	75 d5                	jne    36c5 <main+0x3c5>
    36f0:	31 f6                	xor    esi,esi
    36f2:	bf 11 00 00 00       	mov    edi,0x11
    36f7:	e8 54 f7 ff ff       	call   2e50 <signal@plt>
    36fc:	48 8d 3d bd 34 00 00 	lea    rdi,[rip+0x34bd]        # 6bc0 <exit_cleanup>
    3703:	e8 38 01 01 00       	call   13840 <atexit>
    3708:	66 0f ef c0          	pxor   xmm0,xmm0
    370c:	48 8d 84 24 00 01 00 	lea    rax,[rsp+0x100]
    3713:	00 
    3714:	ba 08 00 00 00       	mov    edx,0x8
    3719:	48 63 cb             	movsxd rcx,ebx
    371c:	31 f6                	xor    esi,esi
    371e:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
    3723:	48 c7 c0 ff ff ff ff 	mov    rax,0xffffffffffffffff
    372a:	0f 11 84 24 08 01 00 	movups XMMWORD PTR [rsp+0x108],xmm0
    3731:	00 
    3732:	48 89 84 24 00 01 00 	mov    QWORD PTR [rsp+0x100],rax
    3739:	00 
    373a:	48 89 84 24 10 01 00 	mov    QWORD PTR [rsp+0x110],rax
    3741:	00 
    3742:	48 89 d0             	mov    rax,rdx
    3745:	48 f7 e1             	mul    rcx
    3748:	0f 11 84 24 18 01 00 	movups XMMWORD PTR [rsp+0x118],xmm0
    374f:	00 
    3750:	0f 11 84 24 28 01 00 	movups XMMWORD PTR [rsp+0x128],xmm0
    3757:	00 
    3758:	0f 11 84 24 38 01 00 	movups XMMWORD PTR [rsp+0x138],xmm0
    375f:	00 
    3760:	0f 80 99 23 00 00    	jo     5aff <main+0x27ff>
    3766:	48 85 c0             	test   rax,rax
    3769:	0f 88 8b 23 00 00    	js     5afa <main+0x27fa>
    376f:	48 85 f6             	test   rsi,rsi
    3772:	0f 85 82 23 00 00    	jne    5afa <main+0x27fa>
    3778:	48 8d 3c cd 00 00 00 	lea    rdi,[rcx*8+0x0]
    377f:	00 
    3780:	45 31 ff             	xor    r15d,r15d
    3783:	45 31 e4             	xor    r12d,r12d
    3786:	4c 8d 2d 9f 01 01 00 	lea    r13,[rip+0x1019f]        # 1392c <_IO_stdin_used+0xcc>
    378d:	e8 4e e6 00 00       	call   11de0 <xmalloc>
    3792:	49 89 c6             	mov    r14,rax
    3795:	48 8d 84 24 b0 00 00 	lea    rax,[rsp+0xb0]
    379c:	00 
    379d:	48 c7 44 24 28 00 00 	mov    QWORD PTR [rsp+0x28],0x0
    37a4:	00 00 
    37a6:	48 c7 44 24 18 00 00 	mov    QWORD PTR [rsp+0x18],0x0
    37ad:	00 00 
    37af:	48 c7 44 24 58 00 00 	mov    QWORD PTR [rsp+0x58],0x0
    37b6:	00 00 
    37b8:	45 31 c9             	xor    r9d,r9d
    37bb:	48 89 44 24 30       	mov    QWORD PTR [rsp+0x30],rax
    37c0:	48 8d 84 24 c0 00 00 	lea    rax,[rsp+0xc0]
    37c7:	00 
    37c8:	48 c7 44 24 40 00 00 	mov    QWORD PTR [rsp+0x40],0x0
    37cf:	00 00 
    37d1:	c6 44 24 48 00       	mov    BYTE PTR [rsp+0x48],0x0
    37d6:	48 89 44 24 60       	mov    QWORD PTR [rsp+0x60],rax
    37db:	eb 61                	jmp    383e <main+0x53e>
    37dd:	0f 1f 00             	nop    DWORD PTR [rax]
    37e0:	4d 85 ff             	test   r15,r15
    37e3:	0f 84 8f 00 00 00    	je     3878 <main+0x578>
    37e9:	80 7c 24 08 00       	cmp    BYTE PTR [rsp+0x8],0x0
    37ee:	0f 84 84 00 00 00    	je     3878 <main+0x578>
    37f4:	80 7c 24 10 01       	cmp    BYTE PTR [rsp+0x10],0x1
    37f9:	48 63 05 d8 69 21 00 	movsxd rax,DWORD PTR [rip+0x2169d8]        # 21a1d8 <optind@@GLIBC_2.2.5>
    3800:	75 1e                	jne    3820 <main+0x520>
    3802:	45 84 e4             	test   r12b,r12b
    3805:	75 19                	jne    3820 <main+0x520>
    3807:	39 c3                	cmp    ebx,eax
    3809:	0f 84 81 01 00 00    	je     3990 <main+0x690>
    380f:	48 63 d0             	movsxd rdx,eax
    3812:	48 8b 54 d5 00       	mov    rdx,QWORD PTR [rbp+rdx*8+0x0]
    3817:	80 3a 2d             	cmp    BYTE PTR [rdx],0x2d
    381a:	74 44                	je     3860 <main+0x560>
    381c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    3820:	39 c3                	cmp    ebx,eax
    3822:	0f 8e 6b 01 00 00    	jle    3993 <main+0x693>
    3828:	8d 50 01             	lea    edx,[rax+0x1]
    382b:	48 8b 44 c5 00       	mov    rax,QWORD PTR [rbp+rax*8+0x0]
    3830:	89 15 a2 69 21 00    	mov    DWORD PTR [rip+0x2169a2],edx        # 21a1d8 <optind@@GLIBC_2.2.5>
    3836:	4b 89 04 fe          	mov    QWORD PTR [r14+r15*8],rax
    383a:	49 83 c7 01          	add    r15,0x1
    383e:	41 83 f9 ff          	cmp    r9d,0xffffffff
    3842:	c7 84 24 90 00 00 00 	mov    DWORD PTR [rsp+0x90],0xffffffff
    3849:	ff ff ff ff 
    384d:	75 91                	jne    37e0 <main+0x4e0>
    384f:	48 63 05 82 69 21 00 	movsxd rax,DWORD PTR [rip+0x216982]        # 21a1d8 <optind@@GLIBC_2.2.5>
    3856:	eb c8                	jmp    3820 <main+0x520>
    3858:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    385f:	00 
    3860:	80 7a 01 6f          	cmp    BYTE PTR [rdx+0x1],0x6f
    3864:	75 ba                	jne    3820 <main+0x520>
    3866:	80 7a 02 00          	cmp    BYTE PTR [rdx+0x2],0x0
    386a:	75 0c                	jne    3878 <main+0x578>
    386c:	8d 50 01             	lea    edx,[rax+0x1]
    386f:	39 da                	cmp    edx,ebx
    3871:	74 ad                	je     3820 <main+0x520>
    3873:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    3878:	4c 8d 84 24 90 00 00 	lea    r8,[rsp+0x90]
    387f:	00 
    3880:	48 8d 0d 59 5d 21 00 	lea    rcx,[rip+0x215d59]        # 2195e0 <long_options>
    3887:	48 8d 15 42 06 01 00 	lea    rdx,[rip+0x10642]        # 13ed0 <short_options>
    388e:	48 89 ee             	mov    rsi,rbp
    3891:	89 df                	mov    edi,ebx
    3893:	e8 28 f4 ff ff       	call   2cc0 <getopt_long@plt>
    3898:	83 f8 ff             	cmp    eax,0xffffffff
    389b:	41 89 c1             	mov    r9d,eax
    389e:	74 af                	je     384f <main+0x54f>
    38a0:	8d 80 83 00 00 00    	lea    eax,[rax+0x83]
    38a6:	3d 0a 01 00 00       	cmp    eax,0x10a
    38ab:	0f 87 3f 22 00 00    	ja     5af0 <main+0x27f0>
    38b1:	49 63 44 85 00       	movsxd rax,DWORD PTR [r13+rax*4+0x0]
    38b6:	4c 01 e8             	add    rax,r13
    38b9:	ff e0                	jmp    rax
    38bb:	4c 8b 0d 66 68 21 00 	mov    r9,QWORD PTR [rip+0x216866]        # 21a128 <argmatch_die>
    38c2:	48 8b 35 17 69 21 00 	mov    rsi,QWORD PTR [rip+0x216917]        # 21a1e0 <optarg@@GLIBC_2.2.5>
    38c9:	48 8d 15 b0 5c 21 00 	lea    rdx,[rip+0x215cb0]        # 219580 <sort_args>
    38d0:	48 8d 0d e9 05 01 00 	lea    rcx,[rip+0x105e9]        # 13ec0 <sort_types>
    38d7:	48 8d 3d 5f 1d 01 00 	lea    rdi,[rip+0x11d5f]        # 1563d <short_options+0x176d>
    38de:	41 b8 01 00 00 00    	mov    r8d,0x1
    38e4:	e8 97 78 00 00       	call   b180 <__xargmatch_internal>
    38e9:	48 8d 15 d0 05 01 00 	lea    rdx,[rip+0x105d0]        # 13ec0 <sort_types>
    38f0:	44 0f be 0c 02       	movsx  r9d,BYTE PTR [rdx+rax*1]
    38f5:	48 8b 74 24 38       	mov    rsi,QWORD PTR [rsp+0x38]
    38fa:	48 8d bc 24 b0 03 00 	lea    rdi,[rsp+0x3b0]
    3901:	00 
    3902:	ba 02 00 00 00       	mov    edx,0x2
    3907:	44 88 8c 24 b0 03 00 	mov    BYTE PTR [rsp+0x3b0],r9b
    390e:	00 
    390f:	44 89 4c 24 70       	mov    DWORD PTR [rsp+0x70],r9d
    3914:	c6 84 24 b1 03 00 00 	mov    BYTE PTR [rsp+0x3b1],0x0
    391b:	00 
    391c:	e8 5f 28 00 00       	call   6180 <set_ordering>
    3921:	44 8b 4c 24 70       	mov    r9d,DWORD PTR [rsp+0x70]
    3926:	e9 13 ff ff ff       	jmp    383e <main+0x53e>
    392b:	48 8b 35 ae 68 21 00 	mov    rsi,QWORD PTR [rip+0x2168ae]        # 21a1e0 <optarg@@GLIBC_2.2.5>
    3932:	41 b9 63 00 00 00    	mov    r9d,0x63
    3938:	48 85 f6             	test   rsi,rsi
    393b:	74 33                	je     3970 <main+0x670>
    393d:	4c 8b 0d e4 67 21 00 	mov    r9,QWORD PTR [rip+0x2167e4]        # 21a128 <argmatch_die>
    3944:	48 8d 15 75 5c 21 00 	lea    rdx,[rip+0x215c75]        # 2195c0 <check_args>
    394b:	48 8d 0d 74 05 01 00 	lea    rcx,[rip+0x10574]        # 13ec6 <check_types>
    3952:	48 8d 3d eb 1c 01 00 	lea    rdi,[rip+0x11ceb]        # 15644 <short_options+0x1774>
    3959:	41 b8 01 00 00 00    	mov    r8d,0x1
    395f:	e8 1c 78 00 00       	call   b180 <__xargmatch_internal>
    3964:	48 8d 15 5b 05 01 00 	lea    rdx,[rip+0x1055b]        # 13ec6 <check_types>
    396b:	44 0f be 0c 02       	movsx  r9d,BYTE PTR [rdx+rax*1]
    3970:	45 84 e4             	test   r12b,r12b
    3973:	74 09                	je     397e <main+0x67e>
    3975:	45 39 cc             	cmp    r12d,r9d
    3978:	0f 85 0f 23 00 00    	jne    5c8d <main+0x298d>
    397e:	45 0f be e1          	movsx  r12d,r9b
    3982:	e9 b7 fe ff ff       	jmp    383e <main+0x53e>
    3987:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    398e:	00 00 
    3990:	45 31 e4             	xor    r12d,r12d
    3993:	48 83 7c 24 18 00    	cmp    QWORD PTR [rsp+0x18],0x0
    3999:	0f 84 b1 00 00 00    	je     3a50 <main+0x750>
    399f:	4d 85 ff             	test   r15,r15
    39a2:	0f 85 e4 20 00 00    	jne    5a8c <main+0x278c>
    39a8:	48 8b 7c 24 18       	mov    rdi,QWORD PTR [rsp+0x18]
    39ad:	48 8d 35 df 1e 01 00 	lea    rsi,[rip+0x11edf]        # 15893 <short_options+0x19c3>
    39b4:	e8 f7 36 00 00       	call   70b0 <stream_open>
    39b9:	48 85 c0             	test   rax,rax
    39bc:	48 89 c3             	mov    rbx,rax
    39bf:	0f 84 41 23 00 00    	je     5d06 <main+0x2a06>
    39c5:	48 8d ac 24 a0 01 00 	lea    rbp,[rsp+0x1a0]
    39cc:	00 
    39cd:	48 89 ef             	mov    rdi,rbp
    39d0:	e8 3b d5 00 00       	call   10f10 <readtokens0_init>
    39d5:	48 89 ee             	mov    rsi,rbp
    39d8:	48 89 df             	mov    rdi,rbx
    39db:	e8 d0 d5 00 00       	call   10fb0 <readtokens0>
    39e0:	84 c0                	test   al,al
    39e2:	48 8b 74 24 18       	mov    rsi,QWORD PTR [rsp+0x18]
    39e7:	0f 84 60 21 00 00    	je     5b4d <main+0x284d>
    39ed:	48 89 df             	mov    rdi,rbx
    39f0:	e8 fb 37 00 00       	call   71f0 <xfclose>
    39f5:	48 8b ac 24 a0 01 00 	mov    rbp,QWORD PTR [rsp+0x1a0]
    39fc:	00 
    39fd:	48 85 ed             	test   rbp,rbp
    3a00:	0f 84 7b 21 00 00    	je     5b81 <main+0x2881>
    3a06:	4c 89 f7             	mov    rdi,r14
    3a09:	48 8d 1d 2a 2c 01 00 	lea    rbx,[rip+0x12c2a]        # 1663a <__PRETTY_FUNCTION__.4162+0x42>
    3a10:	e8 ab f7 ff ff       	call   31c0 <free@plt>
    3a15:	4c 8b b4 24 a8 01 00 	mov    r14,QWORD PTR [rsp+0x1a8]
    3a1c:	00 
    3a1d:	0f 1f 00             	nop    DWORD PTR [rax]
    3a20:	4b 8b 14 fe          	mov    rdx,QWORD PTR [r14+r15*8]
    3a24:	b9 02 00 00 00       	mov    ecx,0x2
    3a29:	48 89 df             	mov    rdi,rbx
    3a2c:	48 89 d6             	mov    rsi,rdx
    3a2f:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    3a31:	0f 97 c0             	seta   al
    3a34:	1c 00                	sbb    al,0x0
    3a36:	84 c0                	test   al,al
    3a38:	0f 84 7c 21 00 00    	je     5bba <main+0x28ba>
    3a3e:	49 83 c7 01          	add    r15,0x1
    3a42:	80 3a 00             	cmp    BYTE PTR [rdx],0x0
    3a45:	0f 84 a6 21 00 00    	je     5bf1 <main+0x28f1>
    3a4b:	4c 39 fd             	cmp    rbp,r15
    3a4e:	75 d0                	jne    3a20 <main+0x720>
    3a50:	48 8b 35 d9 69 21 00 	mov    rsi,QWORD PTR [rip+0x2169d9]        # 21a430 <keylist>
    3a57:	48 85 f6             	test   rsi,rsi
    3a5a:	48 89 f1             	mov    rcx,rsi
    3a5d:	0f 84 a6 14 00 00    	je     4f09 <main+0x1c09>
    3a63:	45 31 ed             	xor    r13d,r13d
    3a66:	e9 96 00 00 00       	jmp    3b01 <main+0x801>
    3a6b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    3a70:	80 79 37 00          	cmp    BYTE PTR [rcx+0x37],0x0
    3a74:	0f 85 97 00 00 00    	jne    3b11 <main+0x811>
    3a7a:	48 8b 84 24 20 01 00 	mov    rax,QWORD PTR [rsp+0x120]
    3a81:	00 
    3a82:	0f b6 94 24 37 01 00 	movzx  edx,BYTE PTR [rsp+0x137]
    3a89:	00 
    3a8a:	48 89 41 20          	mov    QWORD PTR [rcx+0x20],rax
    3a8e:	48 8b 84 24 28 01 00 	mov    rax,QWORD PTR [rsp+0x128]
    3a95:	00 
    3a96:	48 89 41 28          	mov    QWORD PTR [rcx+0x28],rax
    3a9a:	0f b6 84 24 30 01 00 	movzx  eax,BYTE PTR [rsp+0x130]
    3aa1:	00 
    3aa2:	88 41 30             	mov    BYTE PTR [rcx+0x30],al
    3aa5:	0f b6 84 24 31 01 00 	movzx  eax,BYTE PTR [rsp+0x131]
    3aac:	00 
    3aad:	88 41 31             	mov    BYTE PTR [rcx+0x31],al
    3ab0:	0f b6 84 24 36 01 00 	movzx  eax,BYTE PTR [rsp+0x136]
    3ab7:	00 
    3ab8:	88 41 36             	mov    BYTE PTR [rcx+0x36],al
    3abb:	0f b6 84 24 32 01 00 	movzx  eax,BYTE PTR [rsp+0x132]
    3ac2:	00 
    3ac3:	88 41 32             	mov    BYTE PTR [rcx+0x32],al
    3ac6:	0f b6 84 24 34 01 00 	movzx  eax,BYTE PTR [rsp+0x134]
    3acd:	00 
    3ace:	88 41 34             	mov    BYTE PTR [rcx+0x34],al
    3ad1:	0f b6 84 24 35 01 00 	movzx  eax,BYTE PTR [rsp+0x135]
    3ad8:	00 
    3ad9:	88 41 35             	mov    BYTE PTR [rcx+0x35],al
    3adc:	0f b6 84 24 38 01 00 	movzx  eax,BYTE PTR [rsp+0x138]
    3ae3:	00 
    3ae4:	88 51 37             	mov    BYTE PTR [rcx+0x37],dl
    3ae7:	88 41 38             	mov    BYTE PTR [rcx+0x38],al
    3aea:	0f b6 84 24 33 01 00 	movzx  eax,BYTE PTR [rsp+0x133]
    3af1:	00 
    3af2:	88 41 33             	mov    BYTE PTR [rcx+0x33],al
    3af5:	48 8b 49 40          	mov    rcx,QWORD PTR [rcx+0x40]
    3af9:	41 09 c5             	or     r13d,eax
    3afc:	48 85 c9             	test   rcx,rcx
    3aff:	74 20                	je     3b21 <main+0x821>
    3b01:	48 89 cf             	mov    rdi,rcx
    3b04:	e8 67 25 00 00       	call   6070 <default_key_compare>
    3b09:	84 c0                	test   al,al
    3b0b:	0f 85 5f ff ff ff    	jne    3a70 <main+0x770>
    3b11:	0f b6 41 33          	movzx  eax,BYTE PTR [rcx+0x33]
    3b15:	48 8b 49 40          	mov    rcx,QWORD PTR [rcx+0x40]
    3b19:	41 09 c5             	or     r13d,eax
    3b1c:	48 85 c9             	test   rcx,rcx
    3b1f:	75 e0                	jne    3b01 <main+0x801>
    3b21:	48 89 f7             	mov    rdi,rsi
    3b24:	c6 44 24 10 00       	mov    BYTE PTR [rsp+0x10],0x0
    3b29:	0f b6 57 34          	movzx  edx,BYTE PTR [rdi+0x34]
    3b2d:	0f b6 47 32          	movzx  eax,BYTE PTR [rdi+0x32]
    3b31:	01 d0                	add    eax,edx
    3b33:	0f b6 57 35          	movzx  edx,BYTE PTR [rdi+0x35]
    3b37:	01 d0                	add    eax,edx
    3b39:	0f b6 57 36          	movzx  edx,BYTE PTR [rdi+0x36]
    3b3d:	01 d0                	add    eax,edx
    3b3f:	0f b6 57 38          	movzx  edx,BYTE PTR [rdi+0x38]
    3b43:	0a 57 33             	or     dl,BYTE PTR [rdi+0x33]
    3b46:	48 83 7f 20 00       	cmp    QWORD PTR [rdi+0x20],0x0
    3b4b:	0f 95 c1             	setne  cl
    3b4e:	09 ca                	or     edx,ecx
    3b50:	0f b6 d2             	movzx  edx,dl
    3b53:	01 d0                	add    eax,edx
    3b55:	83 e8 01             	sub    eax,0x1
    3b58:	7e 3b                	jle    3b95 <main+0x895>
    3b5a:	e9 09 1f 00 00       	jmp    5a68 <main+0x2768>
    3b5f:	90                   	nop
    3b60:	0f b6 57 34          	movzx  edx,BYTE PTR [rdi+0x34]
    3b64:	0f b6 47 32          	movzx  eax,BYTE PTR [rdi+0x32]
    3b68:	01 d0                	add    eax,edx
    3b6a:	0f b6 57 35          	movzx  edx,BYTE PTR [rdi+0x35]
    3b6e:	01 d0                	add    eax,edx
    3b70:	0f b6 57 36          	movzx  edx,BYTE PTR [rdi+0x36]
    3b74:	01 c2                	add    edx,eax
    3b76:	0f b6 47 38          	movzx  eax,BYTE PTR [rdi+0x38]
    3b7a:	0a 47 33             	or     al,BYTE PTR [rdi+0x33]
    3b7d:	48 83 7f 20 00       	cmp    QWORD PTR [rdi+0x20],0x0
    3b82:	0f 95 c1             	setne  cl
    3b85:	09 c8                	or     eax,ecx
    3b87:	0f b6 c0             	movzx  eax,al
    3b8a:	01 d0                	add    eax,edx
    3b8c:	83 f8 01             	cmp    eax,0x1
    3b8f:	0f 8f d3 1e 00 00    	jg     5a68 <main+0x2768>
    3b95:	48 8b 7f 40          	mov    rdi,QWORD PTR [rdi+0x40]
    3b99:	48 85 ff             	test   rdi,rdi
    3b9c:	75 c2                	jne    3b60 <main+0x860>
    3b9e:	80 3d 7b 68 21 00 00 	cmp    BYTE PTR [rip+0x21687b],0x0        # 21a420 <debug>
    3ba5:	0f 84 3e 0a 00 00    	je     45e9 <main+0x12e9>
    3bab:	45 84 e4             	test   r12b,r12b
    3bae:	0f 95 c2             	setne  dl
    3bb1:	48 83 7c 24 28 00    	cmp    QWORD PTR [rsp+0x28],0x0
    3bb7:	0f 95 c0             	setne  al
    3bba:	08 c2                	or     dl,al
    3bbc:	0f 85 d7 20 00 00    	jne    5c99 <main+0x2999>
    3bc2:	48 83 7c 24 50 00    	cmp    QWORD PTR [rsp+0x50],0x0
    3bc8:	0f 84 71 0d 00 00    	je     493f <main+0x163f>
    3bce:	48 8d 35 36 19 01 00 	lea    rsi,[rip+0x11936]        # 1550b <short_options+0x163b>
    3bd5:	bf 03 00 00 00       	mov    edi,0x3
    3bda:	e8 b1 f3 ff ff       	call   2f90 <setlocale@plt>
    3bdf:	48 85 c0             	test   rax,rax
    3be2:	0f 84 57 0d 00 00    	je     493f <main+0x163f>
    3be8:	80 3d 92 6c 21 00 00 	cmp    BYTE PTR [rip+0x216c92],0x0        # 21a881 <hard_LC_COLLATE>
    3bef:	0f 84 40 13 00 00    	je     4f35 <main+0x1c35>
    3bf5:	31 f6                	xor    esi,esi
    3bf7:	bf 03 00 00 00       	mov    edi,0x3
    3bfc:	e8 8f f3 ff ff       	call   2f90 <setlocale@plt>
    3c01:	48 89 c7             	mov    rdi,rax
    3c04:	e8 87 c7 00 00       	call   10390 <quote>
    3c09:	48 8d 35 38 16 01 00 	lea    rsi,[rip+0x11638]        # 15248 <short_options+0x1378>
    3c10:	48 89 c3             	mov    rbx,rax
    3c13:	ba 05 00 00 00       	mov    edx,0x5
    3c18:	31 ff                	xor    edi,edi
    3c1a:	e8 51 f0 ff ff       	call   2c70 <dcgettext@plt>
    3c1f:	48 89 d9             	mov    rcx,rbx
    3c22:	48 89 c2             	mov    rdx,rax
    3c25:	31 f6                	xor    esi,esi
    3c27:	31 ff                	xor    edi,edi
    3c29:	31 c0                	xor    eax,eax
    3c2b:	e8 b0 f3 ff ff       	call   2fe0 <error@plt>
    3c30:	48 8b 2d f9 67 21 00 	mov    rbp,QWORD PTR [rip+0x2167f9]        # 21a430 <keylist>
    3c37:	48 8d bc 24 50 01 00 	lea    rdi,[rsp+0x150]
    3c3e:	00 
    3c3f:	b9 12 00 00 00       	mov    ecx,0x12
    3c44:	48 8b 74 24 38       	mov    rsi,QWORD PTR [rsp+0x38]
    3c49:	48 89 7c 24 08       	mov    QWORD PTR [rsp+0x8],rdi
    3c4e:	48 85 ed             	test   rbp,rbp
    3c51:	f3 a5                	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    3c53:	0f 84 c5 0e 00 00    	je     4b1e <main+0x181e>
    3c59:	48 8d 84 24 80 03 00 	lea    rax,[rsp+0x380]
    3c60:	00 
    3c61:	48 8d bc 24 60 03 00 	lea    rdi,[rsp+0x360]
    3c68:	00 
    3c69:	44 88 6c 24 50       	mov    BYTE PTR [rsp+0x50],r13b
    3c6e:	44 88 64 24 60       	mov    BYTE PTR [rsp+0x60],r12b
    3c73:	4c 89 74 24 70       	mov    QWORD PTR [rsp+0x70],r14
    3c78:	bb 01 00 00 00       	mov    ebx,0x1
    3c7d:	48 89 44 24 30       	mov    QWORD PTR [rsp+0x30],rax
    3c82:	48 8d 84 24 81 03 00 	lea    rax,[rsp+0x381]
    3c89:	00 
    3c8a:	44 0f b6 64 24 10    	movzx  r12d,BYTE PTR [rsp+0x10]
    3c90:	4c 89 7c 24 68       	mov    QWORD PTR [rsp+0x68],r15
    3c95:	49 89 ee             	mov    r14,rbp
    3c98:	49 89 fd             	mov    r13,rdi
    3c9b:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
    3ca0:	e9 11 01 00 00       	jmp    3db6 <main+0xab6>
    3ca5:	49 83 7e 18 00       	cmp    QWORD PTR [r14+0x18],0x0
    3caa:	0f 84 85 02 00 00    	je     3f35 <main+0xc35>
    3cb0:	84 c0                	test   al,al
    3cb2:	0f 85 20 0e 00 00    	jne    4ad8 <main+0x17d8>
    3cb8:	48 b8 00 00 ff 00 ff 	movabs rax,0xffff00ff0000
    3cbf:	ff 00 00 
    3cc2:	49 85 46 30          	test   QWORD PTR [r14+0x30],rax
    3cc6:	74 28                	je     3cf0 <main+0x9f0>
    3cc8:	49 8b 46 10          	mov    rax,QWORD PTR [r14+0x10]
    3ccc:	48 8d 50 01          	lea    rdx,[rax+0x1]
    3cd0:	49 8b 06             	mov    rax,QWORD PTR [r14]
    3cd3:	48 83 c0 01          	add    rax,0x1
    3cd7:	75 05                	jne    3cde <main+0x9de>
    3cd9:	b8 01 00 00 00       	mov    eax,0x1
    3cde:	48 85 d2             	test   rdx,rdx
    3ce1:	0f 84 7b 12 00 00    	je     4f62 <main+0x1c62>
    3ce7:	48 39 c2             	cmp    rdx,rax
    3cea:	0f 87 72 12 00 00    	ja     4f62 <main+0x1c62>
    3cf0:	48 8b 84 24 70 01 00 	mov    rax,QWORD PTR [rsp+0x170]
    3cf7:	00 
    3cf8:	48 85 c0             	test   rax,rax
    3cfb:	74 0a                	je     3d07 <main+0xa07>
    3cfd:	49 3b 46 20          	cmp    rax,QWORD PTR [r14+0x20]
    3d01:	0f 84 f0 0d 00 00    	je     4af7 <main+0x17f7>
    3d07:	48 8b 84 24 78 01 00 	mov    rax,QWORD PTR [rsp+0x178]
    3d0e:	00 
    3d0f:	48 85 c0             	test   rax,rax
    3d12:	74 0a                	je     3d1e <main+0xa1e>
    3d14:	49 3b 46 28          	cmp    rax,QWORD PTR [r14+0x28]
    3d18:	0f 84 c8 0d 00 00    	je     4ae6 <main+0x17e6>
    3d1e:	41 0f b6 46 30       	movzx  eax,BYTE PTR [r14+0x30]
    3d23:	48 83 c3 01          	add    rbx,0x1
    3d27:	83 f0 01             	xor    eax,0x1
    3d2a:	20 84 24 80 01 00 00 	and    BYTE PTR [rsp+0x180],al
    3d31:	41 0f b6 46 31       	movzx  eax,BYTE PTR [r14+0x31]
    3d36:	83 f0 01             	xor    eax,0x1
    3d39:	20 84 24 81 01 00 00 	and    BYTE PTR [rsp+0x181],al
    3d40:	41 0f b6 46 36       	movzx  eax,BYTE PTR [r14+0x36]
    3d45:	83 f0 01             	xor    eax,0x1
    3d48:	20 84 24 86 01 00 00 	and    BYTE PTR [rsp+0x186],al
    3d4f:	41 0f b6 46 32       	movzx  eax,BYTE PTR [r14+0x32]
    3d54:	83 f0 01             	xor    eax,0x1
    3d57:	20 84 24 82 01 00 00 	and    BYTE PTR [rsp+0x182],al
    3d5e:	41 0f b6 46 34       	movzx  eax,BYTE PTR [r14+0x34]
    3d63:	83 f0 01             	xor    eax,0x1
    3d66:	20 84 24 84 01 00 00 	and    BYTE PTR [rsp+0x184],al
    3d6d:	41 0f b6 46 35       	movzx  eax,BYTE PTR [r14+0x35]
    3d72:	83 f0 01             	xor    eax,0x1
    3d75:	20 84 24 85 01 00 00 	and    BYTE PTR [rsp+0x185],al
    3d7c:	41 0f b6 46 33       	movzx  eax,BYTE PTR [r14+0x33]
    3d81:	83 f0 01             	xor    eax,0x1
    3d84:	20 84 24 83 01 00 00 	and    BYTE PTR [rsp+0x183],al
    3d8b:	41 0f b6 46 38       	movzx  eax,BYTE PTR [r14+0x38]
    3d90:	83 f0 01             	xor    eax,0x1
    3d93:	20 84 24 88 01 00 00 	and    BYTE PTR [rsp+0x188],al
    3d9a:	41 0f b6 46 37       	movzx  eax,BYTE PTR [r14+0x37]
    3d9f:	4d 8b 76 40          	mov    r14,QWORD PTR [r14+0x40]
    3da3:	83 f0 01             	xor    eax,0x1
    3da6:	20 84 24 87 01 00 00 	and    BYTE PTR [rsp+0x187],al
    3dad:	4d 85 f6             	test   r14,r14
    3db0:	0f 84 52 0d 00 00    	je     4b08 <main+0x1808>
    3db6:	41 80 7e 39 00       	cmp    BYTE PTR [r14+0x39],0x0
    3dbb:	4d 8b 3e             	mov    r15,QWORD PTR [r14]
    3dbe:	49 8b 6e 10          	mov    rbp,QWORD PTR [r14+0x10]
    3dc2:	0f 84 0f 01 00 00    	je     3ed7 <main+0xbd7>
    3dc8:	49 83 ff ff          	cmp    r15,0xffffffffffffffff
    3dcc:	b8 00 00 00 00       	mov    eax,0x0
    3dd1:	4c 89 ee             	mov    rsi,r13
    3dd4:	4c 0f 44 f8          	cmove  r15,rax
    3dd8:	4c 89 ff             	mov    rdi,r15
    3ddb:	e8 f0 9e 00 00       	call   dcd0 <umaxtostr>
    3de0:	48 8b 7c 24 38       	mov    rdi,QWORD PTR [rsp+0x38]
    3de5:	ba 2d 00 00 00       	mov    edx,0x2d
    3dea:	48 89 c6             	mov    rsi,rax
    3ded:	c6 84 24 80 03 00 00 	mov    BYTE PTR [rsp+0x380],0x2b
    3df4:	2b 
    3df5:	e8 a6 f0 ff ff       	call   2ea0 <__stpcpy_chk@plt>
    3dfa:	49 8d 7f 01          	lea    rdi,[r15+0x1]
    3dfe:	4c 8d bc 24 b0 03 00 	lea    r15,[rsp+0x3b0]
    3e05:	00 
    3e06:	4c 89 ee             	mov    rsi,r13
    3e09:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
    3e0e:	e8 bd 9e 00 00       	call   dcd0 <umaxtostr>
    3e13:	49 8d 7f 03          	lea    rdi,[r15+0x3]
    3e17:	ba 2c 00 00 00       	mov    edx,0x2c
    3e1c:	48 89 c6             	mov    rsi,rax
    3e1f:	c7 84 24 b0 03 00 00 	mov    DWORD PTR [rsp+0x3b0],0x206b2d
    3e26:	2d 6b 20 00 
    3e2a:	e8 71 f0 ff ff       	call   2ea0 <__stpcpy_chk@plt>
    3e2f:	49 83 7e 10 ff       	cmp    QWORD PTR [r14+0x10],0xffffffffffffffff
    3e34:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
    3e39:	74 4f                	je     3e8a <main+0xb8a>
    3e3b:	48 83 c5 01          	add    rbp,0x1
    3e3f:	4c 89 ee             	mov    rsi,r13
    3e42:	48 89 ef             	mov    rdi,rbp
    3e45:	e8 86 9e 00 00       	call   dcd0 <umaxtostr>
    3e4a:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
    3e4f:	48 89 c6             	mov    rsi,rax
    3e52:	66 c7 07 20 2d       	mov    WORD PTR [rdi],0x2d20
    3e57:	48 83 c7 02          	add    rdi,0x2
    3e5b:	e8 f0 ec ff ff       	call   2b50 <strcpy@plt>
    3e60:	31 ff                	xor    edi,edi
    3e62:	49 83 7e 18 ff       	cmp    QWORD PTR [r14+0x18],0xffffffffffffffff
    3e67:	4c 89 ee             	mov    rsi,r13
    3e6a:	40 0f 94 c7          	sete   dil
    3e6e:	48 01 ef             	add    rdi,rbp
    3e71:	e8 5a 9e 00 00       	call   dcd0 <umaxtostr>
    3e76:	48 8b 54 24 18       	mov    rdx,QWORD PTR [rsp+0x18]
    3e7b:	48 89 c6             	mov    rsi,rax
    3e7e:	48 8d 7a 01          	lea    rdi,[rdx+0x1]
    3e82:	c6 02 2c             	mov    BYTE PTR [rdx],0x2c
    3e85:	e8 c6 ec ff ff       	call   2b50 <strcpy@plt>
    3e8a:	4c 89 fe             	mov    rsi,r15
    3e8d:	bf 01 00 00 00       	mov    edi,0x1
    3e92:	e8 d9 c4 00 00       	call   10370 <quote_n>
    3e97:	48 8b 74 24 30       	mov    rsi,QWORD PTR [rsp+0x30]
    3e9c:	31 ff                	xor    edi,edi
    3e9e:	48 89 c5             	mov    rbp,rax
    3ea1:	e8 ca c4 00 00       	call   10370 <quote_n>
    3ea6:	48 8d 35 03 14 01 00 	lea    rsi,[rip+0x11403]        # 152b0 <short_options+0x13e0>
    3ead:	49 89 c7             	mov    r15,rax
    3eb0:	ba 05 00 00 00       	mov    edx,0x5
    3eb5:	31 ff                	xor    edi,edi
    3eb7:	e8 b4 ed ff ff       	call   2c70 <dcgettext@plt>
    3ebc:	49 89 e8             	mov    r8,rbp
    3ebf:	4c 89 f9             	mov    rcx,r15
    3ec2:	48 89 c2             	mov    rdx,rax
    3ec5:	31 f6                	xor    esi,esi
    3ec7:	31 ff                	xor    edi,edi
    3ec9:	31 c0                	xor    eax,eax
    3ecb:	e8 10 f1 ff ff       	call   2fe0 <error@plt>
    3ed0:	4d 8b 3e             	mov    r15,QWORD PTR [r14]
    3ed3:	49 8b 6e 10          	mov    rbp,QWORD PTR [r14+0x10]
    3ed7:	31 c0                	xor    eax,eax
    3ed9:	49 83 ff ff          	cmp    r15,0xffffffffffffffff
    3edd:	74 2e                	je     3f0d <main+0xc0d>
    3edf:	49 39 ef             	cmp    r15,rbp
    3ee2:	76 29                	jbe    3f0d <main+0xc0d>
    3ee4:	48 8d 35 cd 14 01 00 	lea    rsi,[rip+0x114cd]        # 153b8 <short_options+0x14e8>
    3eeb:	ba 05 00 00 00       	mov    edx,0x5
    3ef0:	31 ff                	xor    edi,edi
    3ef2:	e8 79 ed ff ff       	call   2c70 <dcgettext@plt>
    3ef7:	48 89 d9             	mov    rcx,rbx
    3efa:	48 89 c2             	mov    rdx,rax
    3efd:	31 f6                	xor    esi,esi
    3eff:	31 c0                	xor    eax,eax
    3f01:	31 ff                	xor    edi,edi
    3f03:	e8 d8 f0 ff ff       	call   2fe0 <error@plt>
    3f08:	b8 01 00 00 00       	mov    eax,0x1
    3f0d:	48 bf 00 00 ff 00 ff 	movabs rdi,0xffff00ff0000
    3f14:	ff 00 00 
    3f17:	49 85 7e 30          	test   QWORD PTR [r14+0x30],rdi
    3f1b:	ba 01 00 00 00       	mov    edx,0x1
    3f20:	75 05                	jne    3f27 <main+0xc27>
    3f22:	41 0f b6 56 36       	movzx  edx,BYTE PTR [r14+0x36]
    3f27:	44 09 e0             	or     eax,r12d
    3f2a:	49 83 7e 10 00       	cmp    QWORD PTR [r14+0x10],0x0
    3f2f:	0f 84 70 fd ff ff    	je     3ca5 <main+0x9a5>
    3f35:	84 c0                	test   al,al
    3f37:	0f 85 9b 0b 00 00    	jne    4ad8 <main+0x17d8>
    3f3d:	81 3d e1 60 21 00 80 	cmp    DWORD PTR [rip+0x2160e1],0x80        # 21a028 <tab>
    3f44:	00 00 00 
    3f47:	0f 85 6b fd ff ff    	jne    3cb8 <main+0x9b8>
    3f4d:	41 80 7e 30 00       	cmp    BYTE PTR [r14+0x30],0x0
    3f52:	0f 85 d1 10 00 00    	jne    5029 <main+0x1d29>
    3f58:	85 d2                	test   edx,edx
    3f5a:	0f 85 be 10 00 00    	jne    501e <main+0x1d1e>
    3f60:	48 8d 35 79 13 01 00 	lea    rsi,[rip+0x11379]        # 152e0 <short_options+0x1410>
    3f67:	31 ff                	xor    edi,edi
    3f69:	ba 05 00 00 00       	mov    edx,0x5
    3f6e:	e8 fd ec ff ff       	call   2c70 <dcgettext@plt>
    3f73:	48 89 d9             	mov    rcx,rbx
    3f76:	48 89 c2             	mov    rdx,rax
    3f79:	31 f6                	xor    esi,esi
    3f7b:	31 ff                	xor    edi,edi
    3f7d:	31 c0                	xor    eax,eax
    3f7f:	e8 5c f0 ff ff       	call   2fe0 <error@plt>
    3f84:	e9 2f fd ff ff       	jmp    3cb8 <main+0x9b8>
    3f89:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    3f90:	49 89 c3             	mov    r11,rax
    3f93:	e9 c8 f5 ff ff       	jmp    3560 <main+0x260>
    3f98:	4c 8b 15 41 62 21 00 	mov    r10,QWORD PTR [rip+0x216241]        # 21a1e0 <optarg@@GLIBC_2.2.5>
    3f9f:	8b 84 24 90 00 00 00 	mov    eax,DWORD PTR [rsp+0x90]
    3fa6:	48 8d 8c 24 a0 01 00 	lea    rcx,[rsp+0x1a0]
    3fad:	00 
    3fae:	4c 8d 05 56 15 01 00 	lea    r8,[rip+0x11556]        # 1550b <short_options+0x163b>
    3fb5:	31 f6                	xor    esi,esi
    3fb7:	ba 0a 00 00 00       	mov    edx,0xa
    3fbc:	44 89 4c 24 70       	mov    DWORD PTR [rsp+0x70],r9d
    3fc1:	4c 89 d7             	mov    rdi,r10
    3fc4:	89 44 24 78          	mov    DWORD PTR [rsp+0x78],eax
    3fc8:	4c 89 54 24 58       	mov    QWORD PTR [rsp+0x58],r10
    3fcd:	e8 7e e2 00 00       	call   12250 <xstrtoul>
    3fd2:	83 f8 01             	cmp    eax,0x1
    3fd5:	44 8b 4c 24 70       	mov    r9d,DWORD PTR [rsp+0x70]
    3fda:	0f 84 86 15 00 00    	je     5566 <main+0x2266>
    3fe0:	85 c0                	test   eax,eax
    3fe2:	4c 8b 54 24 58       	mov    r10,QWORD PTR [rsp+0x58]
    3fe7:	0f 85 86 1c 00 00    	jne    5c73 <main+0x2973>
    3fed:	48 8b 84 24 a0 01 00 	mov    rax,QWORD PTR [rsp+0x1a0]
    3ff4:	00 
    3ff5:	48 85 c0             	test   rax,rax
    3ff8:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
    3ffd:	0f 85 3b f8 ff ff    	jne    383e <main+0x53e>
    4003:	48 8d 35 56 11 01 00 	lea    rsi,[rip+0x11156]        # 15160 <short_options+0x1290>
    400a:	ba 05 00 00 00       	mov    edx,0x5
    400f:	31 ff                	xor    edi,edi
    4011:	e8 5a ec ff ff       	call   2c70 <dcgettext@plt>
    4016:	31 f6                	xor    esi,esi
    4018:	48 89 c2             	mov    rdx,rax
    401b:	bf 02 00 00 00       	mov    edi,0x2
    4020:	31 c0                	xor    eax,eax
    4022:	e8 b9 ef ff ff       	call   2fe0 <error@plt>
    4027:	48 8b 7c 24 40       	mov    rdi,QWORD PTR [rsp+0x40]
    402c:	48 8b 15 ad 61 21 00 	mov    rdx,QWORD PTR [rip+0x2161ad]        # 21a1e0 <optarg@@GLIBC_2.2.5>
    4033:	48 85 ff             	test   rdi,rdi
    4036:	74 24                	je     405c <main+0xd5c>
    4038:	48 89 d6             	mov    rsi,rdx
    403b:	44 89 4c 24 70       	mov    DWORD PTR [rsp+0x70],r9d
    4040:	48 89 54 24 40       	mov    QWORD PTR [rsp+0x40],rdx
    4045:	e8 f6 ed ff ff       	call   2e40 <strcmp@plt>
    404a:	85 c0                	test   eax,eax
    404c:	48 8b 54 24 40       	mov    rdx,QWORD PTR [rsp+0x40]
    4051:	44 8b 4c 24 70       	mov    r9d,DWORD PTR [rsp+0x70]
    4056:	0f 85 a5 18 00 00    	jne    5901 <main+0x2601>
    405c:	48 89 54 24 40       	mov    QWORD PTR [rsp+0x40],rdx
    4061:	e9 d8 f7 ff ff       	jmp    383e <main+0x53e>
    4066:	4c 8b 1d 73 61 21 00 	mov    r11,QWORD PTR [rip+0x216173]        # 21a1e0 <optarg@@GLIBC_2.2.5>
    406d:	8b 84 24 90 00 00 00 	mov    eax,DWORD PTR [rsp+0x90]
    4074:	48 8d 8c 24 50 01 00 	lea    rcx,[rsp+0x150]
    407b:	00 
    407c:	45 31 c0             	xor    r8d,r8d
    407f:	31 f6                	xor    esi,esi
    4081:	ba 0a 00 00 00       	mov    edx,0xa
    4086:	44 89 8c 24 8c 00 00 	mov    DWORD PTR [rsp+0x8c],r9d
    408d:	00 
    408e:	4c 89 df             	mov    rdi,r11
    4091:	4c 89 9c 24 80 00 00 	mov    QWORD PTR [rsp+0x80],r11
    4098:	00 
    4099:	89 44 24 70          	mov    DWORD PTR [rsp+0x70],eax
    409d:	e8 7e e6 00 00       	call   12720 <xstrtoumax>
    40a2:	48 8d b4 24 a0 01 00 	lea    rsi,[rsp+0x1a0]
    40a9:	00 
    40aa:	bf 07 00 00 00       	mov    edi,0x7
    40af:	89 44 24 78          	mov    DWORD PTR [rsp+0x78],eax
    40b3:	e8 58 f0 ff ff       	call   3110 <getrlimit@plt>
    40b8:	85 c0                	test   eax,eax
    40ba:	41 ba 11 00 00 00    	mov    r10d,0x11
    40c0:	4c 8b 9c 24 80 00 00 	mov    r11,QWORD PTR [rsp+0x80]
    40c7:	00 
    40c8:	44 8b 8c 24 8c 00 00 	mov    r9d,DWORD PTR [rsp+0x8c]
    40cf:	00 
    40d0:	75 0b                	jne    40dd <main+0xddd>
    40d2:	8b 84 24 a0 01 00 00 	mov    eax,DWORD PTR [rsp+0x1a0]
    40d9:	44 8d 50 fd          	lea    r10d,[rax-0x3]
    40dd:	83 7c 24 78 00       	cmp    DWORD PTR [rsp+0x78],0x0
    40e2:	0f 85 a4 08 00 00    	jne    498c <main+0x168c>
    40e8:	48 8b 84 24 50 01 00 	mov    rax,QWORD PTR [rsp+0x150]
    40ef:	00 
    40f0:	89 c2                	mov    edx,eax
    40f2:	89 05 2c 5f 21 00    	mov    DWORD PTR [rip+0x215f2c],eax        # 21a024 <nmerge>
    40f8:	48 39 d0             	cmp    rax,rdx
    40fb:	75 12                	jne    410f <main+0xe0f>
    40fd:	83 f8 01             	cmp    eax,0x1
    4100:	0f 86 86 18 00 00    	jbe    598c <main+0x268c>
    4106:	44 39 d0             	cmp    eax,r10d
    4109:	0f 86 2f f7 ff ff    	jbe    383e <main+0x53e>
    410f:	4c 89 df             	mov    rdi,r11
    4112:	44 89 54 24 08       	mov    DWORD PTR [rsp+0x8],r10d
    4117:	e8 74 c2 00 00       	call   10390 <quote>
    411c:	48 89 c5             	mov    rbp,rax
    411f:	48 63 44 24 70       	movsxd rax,DWORD PTR [rsp+0x70]
    4124:	48 8d 15 b5 54 21 00 	lea    rdx,[rip+0x2154b5]        # 2195e0 <long_options>
    412b:	48 8d 35 82 15 01 00 	lea    rsi,[rip+0x11582]        # 156b4 <short_options+0x17e4>
    4132:	31 ff                	xor    edi,edi
    4134:	48 c1 e0 05          	shl    rax,0x5
    4138:	48 8b 1c 02          	mov    rbx,QWORD PTR [rdx+rax*1]
    413c:	ba 05 00 00 00       	mov    edx,0x5
    4141:	e8 2a eb ff ff       	call   2c70 <dcgettext@plt>
    4146:	49 89 e8             	mov    r8,rbp
    4149:	48 89 c2             	mov    rdx,rax
    414c:	31 f6                	xor    esi,esi
    414e:	48 89 d9             	mov    rcx,rbx
    4151:	31 ff                	xor    edi,edi
    4153:	31 c0                	xor    eax,eax
    4155:	e8 86 ee ff ff       	call   2fe0 <error@plt>
    415a:	44 8b 54 24 08       	mov    r10d,DWORD PTR [rsp+0x8]
    415f:	48 8d b4 24 b0 03 00 	lea    rsi,[rsp+0x3b0]
    4166:	00 
    4167:	44 89 d7             	mov    edi,r10d
    416a:	e8 21 9b 00 00       	call   dc90 <uinttostr>
    416f:	48 8d 35 72 0f 01 00 	lea    rsi,[rip+0x10f72]        # 150e8 <short_options+0x1218>
    4176:	48 89 c5             	mov    rbp,rax
    4179:	ba 05 00 00 00       	mov    edx,0x5
    417e:	31 ff                	xor    edi,edi
    4180:	e8 eb ea ff ff       	call   2c70 <dcgettext@plt>
    4185:	49 89 e8             	mov    r8,rbp
    4188:	48 89 c2             	mov    rdx,rax
    418b:	48 89 d9             	mov    rcx,rbx
    418e:	31 f6                	xor    esi,esi
    4190:	bf 02 00 00 00       	mov    edi,0x2
    4195:	31 c0                	xor    eax,eax
    4197:	e8 44 ee ff ff       	call   2fe0 <error@plt>
    419c:	48 8b 05 3d 60 21 00 	mov    rax,QWORD PTR [rip+0x21603d]        # 21a1e0 <optarg@@GLIBC_2.2.5>
    41a3:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
    41a8:	e9 91 f6 ff ff       	jmp    383e <main+0x53e>
    41ad:	48 8b 3d 74 62 21 00 	mov    rdi,QWORD PTR [rip+0x216274]        # 21a428 <compress_program>
    41b4:	48 8b 15 25 60 21 00 	mov    rdx,QWORD PTR [rip+0x216025]        # 21a1e0 <optarg@@GLIBC_2.2.5>
    41bb:	48 85 ff             	test   rdi,rdi
    41be:	74 24                	je     41e4 <main+0xee4>
    41c0:	48 89 d6             	mov    rsi,rdx
    41c3:	44 89 4c 24 78       	mov    DWORD PTR [rsp+0x78],r9d
    41c8:	48 89 54 24 70       	mov    QWORD PTR [rsp+0x70],rdx
    41cd:	e8 6e ec ff ff       	call   2e40 <strcmp@plt>
    41d2:	85 c0                	test   eax,eax
    41d4:	48 8b 54 24 70       	mov    rdx,QWORD PTR [rsp+0x70]
    41d9:	44 8b 4c 24 78       	mov    r9d,DWORD PTR [rsp+0x78]
    41de:	0f 85 41 17 00 00    	jne    5925 <main+0x2625>
    41e4:	48 89 15 3d 62 21 00 	mov    QWORD PTR [rip+0x21623d],rdx        # 21a428 <compress_program>
    41eb:	e9 4e f6 ff ff       	jmp    383e <main+0x53e>
    41f0:	c6 05 29 62 21 00 01 	mov    BYTE PTR [rip+0x216229],0x1        # 21a420 <debug>
    41f7:	e9 42 f6 ff ff       	jmp    383e <main+0x53e>
    41fc:	c6 05 35 5e 21 00 00 	mov    BYTE PTR [rip+0x215e35],0x0        # 21a038 <eolchar>
    4203:	e9 36 f6 ff ff       	jmp    383e <main+0x53e>
    4208:	48 63 15 c9 5f 21 00 	movsxd rdx,DWORD PTR [rip+0x215fc9]        # 21a1d8 <optind@@GLIBC_2.2.5>
    420f:	48 89 d0             	mov    rax,rdx
    4212:	48 8b 54 d5 f8       	mov    rdx,QWORD PTR [rbp+rdx*8-0x8]
    4217:	48 3b 15 c2 5f 21 00 	cmp    rdx,QWORD PTR [rip+0x215fc2]        # 21a1e0 <optarg@@GLIBC_2.2.5>
    421e:	0f 85 1a f6 ff ff    	jne    383e <main+0x53e>
    4224:	0f be 0a             	movsx  ecx,BYTE PTR [rdx]
    4227:	89 ce                	mov    esi,ecx
    4229:	83 e9 30             	sub    ecx,0x30
    422c:	83 f9 09             	cmp    ecx,0x9
    422f:	0f 86 2f 14 00 00    	jbe    5664 <main+0x2364>
    4235:	31 d2                	xor    edx,edx
    4237:	40 84 f6             	test   sil,sil
    423a:	0f 95 c2             	setne  dl
    423d:	29 d0                	sub    eax,edx
    423f:	89 05 93 5f 21 00    	mov    DWORD PTR [rip+0x215f93],eax        # 21a1d8 <optind@@GLIBC_2.2.5>
    4245:	e9 f4 f5 ff ff       	jmp    383e <main+0x53e>
    424a:	c6 05 e8 61 21 00 01 	mov    BYTE PTR [rip+0x2161e8],0x1        # 21a439 <unique>
    4251:	e9 e8 f5 ff ff       	jmp    383e <main+0x53e>
    4256:	48 8b 15 83 5f 21 00 	mov    rdx,QWORD PTR [rip+0x215f83]        # 21a1e0 <optarg@@GLIBC_2.2.5>
    425d:	0f be 02             	movsx  eax,BYTE PTR [rdx]
    4260:	84 c0                	test   al,al
    4262:	0f 84 c1 18 00 00    	je     5b29 <main+0x2829>
    4268:	80 7a 01 00          	cmp    BYTE PTR [rdx+0x1],0x0
    426c:	74 2d                	je     429b <main+0xf9b>
    426e:	48 8d 35 a8 14 01 00 	lea    rsi,[rip+0x114a8]        # 1571d <short_options+0x184d>
    4275:	48 89 d7             	mov    rdi,rdx
    4278:	44 89 4c 24 78       	mov    DWORD PTR [rsp+0x78],r9d
    427d:	48 89 54 24 70       	mov    QWORD PTR [rsp+0x70],rdx
    4282:	e8 b9 eb ff ff       	call   2e40 <strcmp@plt>
    4287:	85 c0                	test   eax,eax
    4289:	48 8b 54 24 70       	mov    rdx,QWORD PTR [rsp+0x70]
    428e:	44 8b 4c 24 78       	mov    r9d,DWORD PTR [rsp+0x78]
    4293:	0f 85 72 17 00 00    	jne    5a0b <main+0x270b>
    4299:	31 c0                	xor    eax,eax
    429b:	8b 15 87 5d 21 00    	mov    edx,DWORD PTR [rip+0x215d87]        # 21a028 <tab>
    42a1:	81 fa 80 00 00 00    	cmp    edx,0x80
    42a7:	74 08                	je     42b1 <main+0xfb1>
    42a9:	39 c2                	cmp    edx,eax
    42ab:	0f 85 8c 17 00 00    	jne    5a3d <main+0x273d>
    42b1:	89 05 71 5d 21 00    	mov    DWORD PTR [rip+0x215d71],eax        # 21a028 <tab>
    42b7:	e9 82 f5 ff ff       	jmp    383e <main+0x53e>
    42bc:	c6 05 77 61 21 00 01 	mov    BYTE PTR [rip+0x216177],0x1        # 21a43a <stable>
    42c3:	e9 76 f5 ff ff       	jmp    383e <main+0x53e>
    42c8:	48 8b 3d 11 5f 21 00 	mov    rdi,QWORD PTR [rip+0x215f11]        # 21a1e0 <optarg@@GLIBC_2.2.5>
    42cf:	44 89 4c 24 70       	mov    DWORD PTR [rsp+0x70],r9d
    42d4:	e8 17 21 00 00       	call   63f0 <add_temp_dir>
    42d9:	44 8b 4c 24 70       	mov    r9d,DWORD PTR [rsp+0x70]
    42de:	e9 5b f5 ff ff       	jmp    383e <main+0x53e>
    42e3:	48 8b 3d f6 5e 21 00 	mov    rdi,QWORD PTR [rip+0x215ef6]        # 21a1e0 <optarg@@GLIBC_2.2.5>
    42ea:	8b 84 24 90 00 00 00 	mov    eax,DWORD PTR [rsp+0x90]
    42f1:	48 8d 8c 24 50 01 00 	lea    rcx,[rsp+0x150]
    42f8:	00 
    42f9:	48 8d b4 24 a0 01 00 	lea    rsi,[rsp+0x1a0]
    4300:	00 
    4301:	4c 8d 05 fe 13 01 00 	lea    r8,[rip+0x113fe]        # 15706 <short_options+0x1836>
    4308:	ba 0a 00 00 00       	mov    edx,0xa
    430d:	44 89 4c 24 70       	mov    DWORD PTR [rsp+0x70],r9d
    4312:	48 89 7c 24 78       	mov    QWORD PTR [rsp+0x78],rdi
    4317:	89 84 24 80 00 00 00 	mov    DWORD PTR [rsp+0x80],eax
    431e:	e8 fd e3 00 00       	call   12720 <xstrtoumax>
    4323:	85 c0                	test   eax,eax
    4325:	44 8b 4c 24 70       	mov    r9d,DWORD PTR [rsp+0x70]
    432a:	0f 85 83 06 00 00    	jne    49b3 <main+0x16b3>
    4330:	48 8b 84 24 a0 01 00 	mov    rax,QWORD PTR [rsp+0x1a0]
    4337:	00 
    4338:	0f be 40 ff          	movsx  eax,BYTE PTR [rax-0x1]
    433c:	83 e8 30             	sub    eax,0x30
    433f:	83 f8 09             	cmp    eax,0x9
    4342:	77 27                	ja     436b <main+0x106b>
    4344:	48 8b 84 24 50 01 00 	mov    rax,QWORD PTR [rsp+0x150]
    434b:	00 
    434c:	48 ba ff ff ff ff ff 	movabs rdx,0x3fffffffffffff
    4353:	ff 3f 00 
    4356:	48 39 d0             	cmp    rax,rdx
    4359:	0f 87 5c 12 00 00    	ja     55bb <main+0x22bb>
    435f:	48 c1 e0 0a          	shl    rax,0xa
    4363:	48 89 84 24 50 01 00 	mov    QWORD PTR [rsp+0x150],rax
    436a:	00 
    436b:	48 8b 94 24 50 01 00 	mov    rdx,QWORD PTR [rsp+0x150]
    4372:	00 
    4373:	48 3b 15 de 60 21 00 	cmp    rdx,QWORD PTR [rip+0x2160de]        # 21a458 <sort_size>
    437a:	0f 82 be f4 ff ff    	jb     383e <main+0x53e>
    4380:	8b 05 9e 5c 21 00    	mov    eax,DWORD PTR [rip+0x215c9e]        # 21a024 <nmerge>
    4386:	48 6b c0 22          	imul   rax,rax,0x22
    438a:	48 39 d0             	cmp    rax,rdx
    438d:	48 0f 42 c2          	cmovb  rax,rdx
    4391:	48 89 05 c0 60 21 00 	mov    QWORD PTR [rip+0x2160c0],rax        # 21a458 <sort_size>
    4398:	e9 a1 f4 ff ff       	jmp    383e <main+0x53e>
    439d:	48 8b 15 3c 5e 21 00 	mov    rdx,QWORD PTR [rip+0x215e3c]        # 21a1e0 <optarg@@GLIBC_2.2.5>
    43a4:	80 3a 2b             	cmp    BYTE PTR [rdx],0x2b
    43a7:	0f 84 48 06 00 00    	je     49f5 <main+0x16f5>
    43ad:	4b 89 14 fe          	mov    QWORD PTR [r14+r15*8],rdx
    43b1:	49 83 c7 01          	add    r15,0x1
    43b5:	e9 84 f4 ff ff       	jmp    383e <main+0x53e>
    43ba:	48 83 ec 08          	sub    rsp,0x8
    43be:	48 8b 3d 03 5e 21 00 	mov    rdi,QWORD PTR [rip+0x215e03]        # 21a1c8 <stdout@@GLIBC_2.2.5>
    43c5:	48 8b 0d 54 5d 21 00 	mov    rcx,QWORD PTR [rip+0x215d54]        # 21a120 <Version>
    43cc:	6a 00                	push   0x0
    43ce:	4c 8d 0d 74 13 01 00 	lea    r9,[rip+0x11374]        # 15749 <short_options+0x1879>
    43d5:	4c 8d 05 79 13 01 00 	lea    r8,[rip+0x11379]        # 15755 <short_options+0x1885>
    43dc:	48 8d 15 b5 11 01 00 	lea    rdx,[rip+0x111b5]        # 15598 <short_options+0x16c8>
    43e3:	48 8d 35 55 12 01 00 	lea    rsi,[rip+0x11255]        # 1563f <short_options+0x176f>
    43ea:	31 c0                	xor    eax,eax
    43ec:	e8 8f d8 00 00       	call   11c80 <version_etc>
    43f1:	31 ff                	xor    edi,edi
    43f3:	e8 e8 ec ff ff       	call   30e0 <exit@plt>
    43f8:	48 8b 7c 24 30       	mov    rdi,QWORD PTR [rsp+0x30]
    43fd:	31 c0                	xor    eax,eax
    43ff:	b9 12 00 00 00       	mov    ecx,0x12
    4404:	48 8b 74 24 30       	mov    rsi,QWORD PTR [rsp+0x30]
    4409:	48 8d 15 3f 12 01 00 	lea    rdx,[rip+0x1123f]        # 1564f <short_options+0x177f>
    4410:	44 89 4c 24 70       	mov    DWORD PTR [rsp+0x70],r9d
    4415:	f3 ab                	rep stos DWORD PTR es:[rdi],eax
    4417:	48 8b 3d c2 5d 21 00 	mov    rdi,QWORD PTR [rip+0x215dc2]        # 21a1e0 <optarg@@GLIBC_2.2.5>
    441e:	48 c7 84 24 c0 00 00 	mov    QWORD PTR [rsp+0xc0],0xffffffffffffffff
    4425:	00 ff ff ff ff 
    442a:	e8 91 2b 00 00       	call   6fc0 <parse_field_count>
    442f:	48 8b 94 24 b0 00 00 	mov    rdx,QWORD PTR [rsp+0xb0]
    4436:	00 
    4437:	44 8b 4c 24 70       	mov    r9d,DWORD PTR [rsp+0x70]
    443c:	48 8d 4a ff          	lea    rcx,[rdx-0x1]
    4440:	48 85 d2             	test   rdx,rdx
    4443:	48 89 8c 24 b0 00 00 	mov    QWORD PTR [rsp+0xb0],rcx
    444a:	00 
    444b:	0f 84 da 18 00 00    	je     5d2b <main+0x2a2b>
    4451:	80 38 2e             	cmp    BYTE PTR [rax],0x2e
    4454:	0f 84 53 10 00 00    	je     54ad <main+0x21ad>
    445a:	48 83 bc 24 b0 00 00 	cmp    QWORD PTR [rsp+0xb0],0x0
    4461:	00 00 
    4463:	0f 84 03 05 00 00    	je     496c <main+0x166c>
    4469:	48 8b 74 24 30       	mov    rsi,QWORD PTR [rsp+0x30]
    446e:	31 d2                	xor    edx,edx
    4470:	48 89 c7             	mov    rdi,rax
    4473:	44 89 4c 24 70       	mov    DWORD PTR [rsp+0x70],r9d
    4478:	e8 03 1d 00 00       	call   6180 <set_ordering>
    447d:	80 38 2c             	cmp    BYTE PTR [rax],0x2c
    4480:	44 8b 4c 24 70       	mov    r9d,DWORD PTR [rsp+0x70]
    4485:	0f 84 75 10 00 00    	je     5500 <main+0x2200>
    448b:	48 c7 84 24 c0 00 00 	mov    QWORD PTR [rsp+0xc0],0xffffffffffffffff
    4492:	00 ff ff ff ff 
    4497:	48 c7 84 24 c8 00 00 	mov    QWORD PTR [rsp+0xc8],0x0
    449e:	00 00 00 00 00 
    44a3:	80 38 00             	cmp    BYTE PTR [rax],0x0
    44a6:	0f 85 6c 18 00 00    	jne    5d18 <main+0x2a18>
    44ac:	48 8b 7c 24 30       	mov    rdi,QWORD PTR [rsp+0x30]
    44b1:	be 48 00 00 00       	mov    esi,0x48
    44b6:	44 89 4c 24 70       	mov    DWORD PTR [rsp+0x70],r9d
    44bb:	e8 20 db 00 00       	call   11fe0 <xmemdup>
    44c0:	48 8b 15 69 5f 21 00 	mov    rdx,QWORD PTR [rip+0x215f69]        # 21a430 <keylist>
    44c7:	44 8b 4c 24 70       	mov    r9d,DWORD PTR [rsp+0x70]
    44cc:	48 8d 0d 5d 5f 21 00 	lea    rcx,[rip+0x215f5d]        # 21a430 <keylist>
    44d3:	48 85 d2             	test   rdx,rdx
    44d6:	0f 84 93 03 00 00    	je     486f <main+0x156f>
    44dc:	48 8d 4a 40          	lea    rcx,[rdx+0x40]
    44e0:	48 8b 52 40          	mov    rdx,QWORD PTR [rdx+0x40]
    44e4:	eb ed                	jmp    44d3 <main+0x11d3>
    44e6:	48 8b 7c 24 28       	mov    rdi,QWORD PTR [rsp+0x28]
    44eb:	48 8b 15 ee 5c 21 00 	mov    rdx,QWORD PTR [rip+0x215cee]        # 21a1e0 <optarg@@GLIBC_2.2.5>
    44f2:	48 85 ff             	test   rdi,rdi
    44f5:	74 24                	je     451b <main+0x121b>
    44f7:	48 89 d6             	mov    rsi,rdx
    44fa:	44 89 4c 24 70       	mov    DWORD PTR [rsp+0x70],r9d
    44ff:	48 89 54 24 28       	mov    QWORD PTR [rsp+0x28],rdx
    4504:	e8 37 e9 ff ff       	call   2e40 <strcmp@plt>
    4509:	85 c0                	test   eax,eax
    450b:	48 8b 54 24 28       	mov    rdx,QWORD PTR [rsp+0x28]
    4510:	44 8b 4c 24 70       	mov    r9d,DWORD PTR [rsp+0x70]
    4515:	0f 85 2e 14 00 00    	jne    5949 <main+0x2649>
    451b:	48 89 54 24 28       	mov    QWORD PTR [rsp+0x28],rdx
    4520:	e9 19 f3 ff ff       	jmp    383e <main+0x53e>
    4525:	c6 44 24 48 01       	mov    BYTE PTR [rsp+0x48],0x1
    452a:	e9 0f f3 ff ff       	jmp    383e <main+0x53e>
    452f:	80 3d 04 5f 21 00 00 	cmp    BYTE PTR [rip+0x215f04],0x0        # 21a43a <stable>
    4536:	75 11                	jne    4549 <main+0x1249>
    4538:	80 3d fa 5e 21 00 00 	cmp    BYTE PTR [rip+0x215efa],0x0        # 21a439 <unique>
    453f:	75 08                	jne    4549 <main+0x1249>
    4541:	c6 84 24 87 01 00 00 	mov    BYTE PTR [rsp+0x187],0x0
    4548:	00 
    4549:	48 8d 9c 24 b0 03 00 	lea    rbx,[rsp+0x3b0]
    4550:	00 
    4551:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
    4556:	48 89 de             	mov    rsi,rbx
    4559:	e8 72 1b 00 00       	call   60d0 <key_to_opts>
    455e:	31 c0                	xor    eax,eax
    4560:	48 83 c9 ff          	or     rcx,0xffffffffffffffff
    4564:	48 89 df             	mov    rdi,rbx
    4567:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    4569:	48 8d 15 29 12 01 00 	lea    rdx,[rip+0x11229]        # 15799 <short_options+0x18c9>
    4570:	48 8d 35 3c 12 01 00 	lea    rsi,[rip+0x1123c]        # 157b3 <short_options+0x18e3>
    4577:	31 ff                	xor    edi,edi
    4579:	48 89 c8             	mov    rax,rcx
    457c:	41 b8 05 00 00 00    	mov    r8d,0x5
    4582:	48 f7 d0             	not    rax
    4585:	48 8d 48 ff          	lea    rcx,[rax-0x1]
    4589:	e8 b2 ea ff ff       	call   3040 <dcngettext@plt>
    458e:	31 f6                	xor    esi,esi
    4590:	48 89 c2             	mov    rdx,rax
    4593:	31 ff                	xor    edi,edi
    4595:	31 c0                	xor    eax,eax
    4597:	48 89 d9             	mov    rcx,rbx
    459a:	e8 41 ea ff ff       	call   2fe0 <error@plt>
    459f:	40 84 ed             	test   bpl,bpl
    45a2:	40 88 ac 24 87 01 00 	mov    BYTE PTR [rsp+0x187],bpl
    45a9:	00 
    45aa:	74 3d                	je     45e9 <main+0x12e9>
    45ac:	80 3d 87 5e 21 00 00 	cmp    BYTE PTR [rip+0x215e87],0x0        # 21a43a <stable>
    45b3:	75 34                	jne    45e9 <main+0x12e9>
    45b5:	80 3d 7d 5e 21 00 00 	cmp    BYTE PTR [rip+0x215e7d],0x0        # 21a439 <unique>
    45bc:	75 2b                	jne    45e9 <main+0x12e9>
    45be:	48 83 3d 6a 5e 21 00 	cmp    QWORD PTR [rip+0x215e6a],0x0        # 21a430 <keylist>
    45c5:	00 
    45c6:	74 21                	je     45e9 <main+0x12e9>
    45c8:	48 8d 35 89 0d 01 00 	lea    rsi,[rip+0x10d89]        # 15358 <short_options+0x1488>
    45cf:	ba 05 00 00 00       	mov    edx,0x5
    45d4:	31 ff                	xor    edi,edi
    45d6:	e8 95 e6 ff ff       	call   2c70 <dcgettext@plt>
    45db:	31 f6                	xor    esi,esi
    45dd:	48 89 c2             	mov    rdx,rax
    45e0:	31 ff                	xor    edi,edi
    45e2:	31 c0                	xor    eax,eax
    45e4:	e8 f7 e9 ff ff       	call   2fe0 <error@plt>
    45e9:	0f b6 84 24 37 01 00 	movzx  eax,BYTE PTR [rsp+0x137]
    45f0:	00 
    45f1:	45 84 ed             	test   r13b,r13b
    45f4:	88 05 41 5e 21 00    	mov    BYTE PTR [rip+0x215e41],al        # 21a43b <reverse>
    45fa:	0f 85 cb 02 00 00    	jne    48cb <main+0x15cb>
    4600:	48 83 3d 40 5e 21 00 	cmp    QWORD PTR [rip+0x215e40],0x0        # 21a448 <temp_dir_count>
    4607:	00 
    4608:	0f 84 9b 02 00 00    	je     48a9 <main+0x15a9>
    460e:	4d 85 ff             	test   r15,r15
    4611:	0f 84 68 02 00 00    	je     487f <main+0x157f>
    4617:	48 8b 15 3a 5e 21 00 	mov    rdx,QWORD PTR [rip+0x215e3a]        # 21a458 <sort_size>
    461e:	48 85 d2             	test   rdx,rdx
    4621:	74 18                	je     463b <main+0x133b>
    4623:	8b 05 fb 59 21 00    	mov    eax,DWORD PTR [rip+0x2159fb]        # 21a024 <nmerge>
    4629:	48 6b c0 22          	imul   rax,rax,0x22
    462d:	48 39 d0             	cmp    rax,rdx
    4630:	48 0f 42 c2          	cmovb  rax,rdx
    4634:	48 89 05 1d 5e 21 00 	mov    QWORD PTR [rip+0x215e1d],rax        # 21a458 <sort_size>
    463b:	45 84 e4             	test   r12b,r12b
    463e:	0f 84 1d 05 00 00    	je     4b61 <main+0x1861>
    4644:	49 83 ff 01          	cmp    r15,0x1
    4648:	0f 87 69 16 00 00    	ja     5cb7 <main+0x29b7>
    464e:	48 83 7c 24 28 00    	cmp    QWORD PTR [rsp+0x28],0x0
    4654:	0f 85 99 16 00 00    	jne    5cf3 <main+0x29f3>
    465a:	4d 8b 2e             	mov    r13,QWORD PTR [r14]
    465d:	48 8d 35 2f 12 01 00 	lea    rsi,[rip+0x1122f]        # 15893 <short_options+0x19c3>
    4664:	4c 89 ef             	mov    rdi,r13
    4667:	e8 44 2a 00 00       	call   70b0 <stream_open>
    466c:	48 85 c0             	test   rax,rax
    466f:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
    4674:	0f 84 96 16 00 00    	je     5d10 <main+0x2a10>
    467a:	0f b6 1d b8 5d 21 00 	movzx  ebx,BYTE PTR [rip+0x215db8]        # 21a439 <unique>
    4681:	48 8b 05 a8 5d 21 00 	mov    rax,QWORD PTR [rip+0x215da8]        # 21a430 <keylist>
    4688:	be 20 00 00 00       	mov    esi,0x20
    468d:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
    4692:	48 8b 05 97 59 21 00 	mov    rax,QWORD PTR [rip+0x215997]        # 21a030 <merge_buffer_size>
    4699:	83 f3 01             	xor    ebx,0x1
    469c:	48 39 05 b5 5d 21 00 	cmp    QWORD PTR [rip+0x215db5],rax        # 21a458 <sort_size>
    46a3:	48 0f 43 05 ad 5d 21 	cmovae rax,QWORD PTR [rip+0x215dad]        # 21a458 <sort_size>
    46aa:	00 
    46ab:	0f b6 db             	movzx  ebx,bl
    46ae:	45 31 f6             	xor    r14d,r14d
    46b1:	48 89 c2             	mov    rdx,rax
    46b4:	48 8d 84 24 50 01 00 	lea    rax,[rsp+0x150]
    46bb:	00 
    46bc:	48 89 c7             	mov    rdi,rax
    46bf:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    46c4:	e8 d7 1d 00 00       	call   64a0 <initbuf>
    46c9:	48 8d 84 24 90 00 00 	lea    rax,[rsp+0x90]
    46d0:	00 
    46d1:	48 c7 84 24 90 00 00 	mov    QWORD PTR [rsp+0x90],0x0
    46d8:	00 00 00 00 00 
    46dd:	48 c7 44 24 18 00 00 	mov    QWORD PTR [rsp+0x18],0x0
    46e4:	00 00 
    46e6:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
    46eb:	48 8b 74 24 10       	mov    rsi,QWORD PTR [rsp+0x10]
    46f0:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
    46f5:	4c 89 ea             	mov    rdx,r13
    46f8:	e8 13 50 00 00       	call   9710 <fillbuf>
    46fd:	84 c0                	test   al,al
    46ff:	0f 84 22 0f 00 00    	je     5627 <main+0x2327>
    4705:	48 8b bc 24 68 01 00 	mov    rdi,QWORD PTR [rsp+0x168]
    470c:	00 
    470d:	48 03 bc 24 50 01 00 	add    rdi,QWORD PTR [rsp+0x150]
    4714:	00 
    4715:	48 8b 84 24 60 01 00 	mov    rax,QWORD PTR [rsp+0x160]
    471c:	00 
    471d:	48 89 fd             	mov    rbp,rdi
    4720:	48 c1 e0 05          	shl    rax,0x5
    4724:	4c 8d 7f e0          	lea    r15,[rdi-0x20]
    4728:	48 29 c5             	sub    rbp,rax
    472b:	4d 85 f6             	test   r14,r14
    472e:	74 1c                	je     474c <main+0x144c>
    4730:	e9 c1 00 00 00       	jmp    47f6 <main+0x14f6>
    4735:	0f 1f 00             	nop    DWORD PTR [rax]
    4738:	49 83 ef 20          	sub    r15,0x20
    473c:	4c 89 fe             	mov    rsi,r15
    473f:	e8 9c 3f 00 00       	call   86e0 <compare>
    4744:	39 c3                	cmp    ebx,eax
    4746:	0f 8e bf 00 00 00    	jle    480b <main+0x150b>
    474c:	4c 39 fd             	cmp    rbp,r15
    474f:	4c 89 ff             	mov    rdi,r15
    4752:	72 e4                	jb     4738 <main+0x1438>
    4754:	49 8b 57 08          	mov    rdx,QWORD PTR [r15+0x8]
    4758:	48 8b bc 24 60 01 00 	mov    rdi,QWORD PTR [rsp+0x160]
    475f:	00 
    4760:	48 01 7c 24 18       	add    QWORD PTR [rsp+0x18],rdi
    4765:	49 39 d6             	cmp    r14,rdx
    4768:	72 5e                	jb     47c8 <main+0x14c8>
    476a:	49 8b 37             	mov    rsi,QWORD PTR [r15]
    476d:	48 8b bc 24 90 00 00 	mov    rdi,QWORD PTR [rsp+0x90]
    4774:	00 
    4775:	e8 06 e7 ff ff       	call   2e80 <memcpy@plt>
    477a:	48 83 7c 24 20 00    	cmp    QWORD PTR [rsp+0x20],0x0
    4780:	49 8b 47 08          	mov    rax,QWORD PTR [r15+0x8]
    4784:	48 89 84 24 98 00 00 	mov    QWORD PTR [rsp+0x98],rax
    478b:	00 
    478c:	0f 84 59 ff ff ff    	je     46eb <main+0x13eb>
    4792:	49 8b 57 10          	mov    rdx,QWORD PTR [r15+0x10]
    4796:	48 8b 84 24 90 00 00 	mov    rax,QWORD PTR [rsp+0x90]
    479d:	00 
    479e:	49 8b 0f             	mov    rcx,QWORD PTR [r15]
    47a1:	48 01 c2             	add    rdx,rax
    47a4:	49 03 47 18          	add    rax,QWORD PTR [r15+0x18]
    47a8:	48 29 ca             	sub    rdx,rcx
    47ab:	48 89 94 24 a0 00 00 	mov    QWORD PTR [rsp+0xa0],rdx
    47b2:	00 
    47b3:	48 29 c8             	sub    rax,rcx
    47b6:	48 89 84 24 a8 00 00 	mov    QWORD PTR [rsp+0xa8],rax
    47bd:	00 
    47be:	e9 28 ff ff ff       	jmp    46eb <main+0x13eb>
    47c3:	4c 39 f2             	cmp    rdx,r14
    47c6:	76 08                	jbe    47d0 <main+0x14d0>
    47c8:	4d 01 f6             	add    r14,r14
    47cb:	75 f6                	jne    47c3 <main+0x14c3>
    47cd:	49 89 d6             	mov    r14,rdx
    47d0:	48 8b bc 24 90 00 00 	mov    rdi,QWORD PTR [rsp+0x90]
    47d7:	00 
    47d8:	e8 e3 e9 ff ff       	call   31c0 <free@plt>
    47dd:	4c 89 f7             	mov    rdi,r14
    47e0:	e8 fb d5 00 00       	call   11de0 <xmalloc>
    47e5:	49 8b 57 08          	mov    rdx,QWORD PTR [r15+0x8]
    47e9:	48 89 84 24 90 00 00 	mov    QWORD PTR [rsp+0x90],rax
    47f0:	00 
    47f1:	e9 74 ff ff ff       	jmp    476a <main+0x146a>
    47f6:	48 8b 7c 24 28       	mov    rdi,QWORD PTR [rsp+0x28]
    47fb:	4c 89 fe             	mov    rsi,r15
    47fe:	e8 dd 3e 00 00       	call   86e0 <compare>
    4803:	39 c3                	cmp    ebx,eax
    4805:	0f 8f 41 ff ff ff    	jg     474c <main+0x144c>
    480b:	31 db                	xor    ebx,ebx
    480d:	41 80 fc 63          	cmp    r12b,0x63
    4811:	0f 84 9a 0b 00 00    	je     53b1 <main+0x20b1>
    4817:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
    481c:	4c 89 ee             	mov    rsi,r13
    481f:	e8 cc 29 00 00       	call   71f0 <xfclose>
    4824:	48 8b bc 24 50 01 00 	mov    rdi,QWORD PTR [rsp+0x150]
    482b:	00 
    482c:	e8 8f e9 ff ff       	call   31c0 <free@plt>
    4831:	48 8b bc 24 90 00 00 	mov    rdi,QWORD PTR [rsp+0x90]
    4838:	00 
    4839:	e8 82 e9 ff ff       	call   31c0 <free@plt>
    483e:	89 d8                	mov    eax,ebx
    4840:	83 f0 01             	xor    eax,0x1
    4843:	0f b6 c0             	movzx  eax,al
    4846:	48 8b 9c 24 e8 03 00 	mov    rbx,QWORD PTR [rsp+0x3e8]
    484d:	00 
    484e:	64 48 33 1c 25 28 00 	xor    rbx,QWORD PTR fs:0x28
    4855:	00 00 
    4857:	0f 85 e1 14 00 00    	jne    5d3e <main+0x2a3e>
    485d:	48 81 c4 f8 03 00 00 	add    rsp,0x3f8
    4864:	5b                   	pop    rbx
    4865:	5d                   	pop    rbp
    4866:	41 5c                	pop    r12
    4868:	41 5d                	pop    r13
    486a:	41 5e                	pop    r14
    486c:	41 5f                	pop    r15
    486e:	c3                   	ret    
    486f:	48 89 01             	mov    QWORD PTR [rcx],rax
    4872:	48 c7 40 40 00 00 00 	mov    QWORD PTR [rax+0x40],0x0
    4879:	00 
    487a:	e9 bf ef ff ff       	jmp    383e <main+0x53e>
    487f:	4c 89 f7             	mov    rdi,r14
    4882:	41 bf 01 00 00 00    	mov    r15d,0x1
    4888:	e8 33 e9 ff ff       	call   31c0 <free@plt>
    488d:	bf 08 00 00 00       	mov    edi,0x8
    4892:	e8 49 d5 00 00       	call   11de0 <xmalloc>
    4897:	49 89 c6             	mov    r14,rax
    489a:	48 8d 05 99 1d 01 00 	lea    rax,[rip+0x11d99]        # 1663a <__PRETTY_FUNCTION__.4162+0x42>
    48a1:	49 89 06             	mov    QWORD PTR [r14],rax
    48a4:	e9 6e fd ff ff       	jmp    4617 <main+0x1317>
    48a9:	48 8d 3d 1b 0f 01 00 	lea    rdi,[rip+0x10f1b]        # 157cb <short_options+0x18fb>
    48b0:	e8 0b e2 ff ff       	call   2ac0 <getenv@plt>
    48b5:	48 85 c0             	test   rax,rax
    48b8:	0f 84 08 02 00 00    	je     4ac6 <main+0x17c6>
    48be:	48 89 c7             	mov    rdi,rax
    48c1:	e8 2a 1b 00 00       	call   63f0 <add_temp_dir>
    48c6:	e9 43 fd ff ff       	jmp    460e <main+0x130e>
    48cb:	48 8b 7c 24 40       	mov    rdi,QWORD PTR [rsp+0x40]
    48d0:	be 10 00 00 00       	mov    esi,0x10
    48d5:	e8 36 bb 00 00       	call   10410 <randread_new>
    48da:	48 85 c0             	test   rax,rax
    48dd:	48 89 c5             	mov    rbp,rax
    48e0:	ba 05 00 00 00       	mov    edx,0x5
    48e5:	48 8d 35 b3 0b 01 00 	lea    rsi,[rip+0x10bb3]        # 1549f <short_options+0x15cf>
    48ec:	0f 84 23 12 00 00    	je     5b15 <main+0x2815>
    48f2:	48 8d 9c 24 b0 03 00 	lea    rbx,[rsp+0x3b0]
    48f9:	00 
    48fa:	48 89 c7             	mov    rdi,rax
    48fd:	ba 10 00 00 00       	mov    edx,0x10
    4902:	48 89 de             	mov    rsi,rbx
    4905:	e8 56 be 00 00       	call   10760 <randread>
    490a:	48 89 ef             	mov    rdi,rbp
    490d:	e8 ee bf 00 00       	call   10900 <randread_free>
    4912:	85 c0                	test   eax,eax
    4914:	0f 85 ef 11 00 00    	jne    5b09 <main+0x2809>
    491a:	48 8d 3d bf 59 21 00 	lea    rdi,[rip+0x2159bf]        # 21a2e0 <random_md5_state>
    4921:	e8 ea 69 00 00       	call   b310 <md5_init_ctx>
    4926:	48 8d 15 b3 59 21 00 	lea    rdx,[rip+0x2159b3]        # 21a2e0 <random_md5_state>
    492d:	be 10 00 00 00       	mov    esi,0x10
    4932:	48 89 df             	mov    rdi,rbx
    4935:	e8 b6 72 00 00       	call   bbf0 <md5_process_bytes>
    493a:	e9 c1 fc ff ff       	jmp    4600 <main+0x1300>
    493f:	48 8d 35 3e 0e 01 00 	lea    rsi,[rip+0x10e3e]        # 15784 <short_options+0x18b4>
    4946:	31 ff                	xor    edi,edi
    4948:	ba 05 00 00 00       	mov    edx,0x5
    494d:	e8 1e e3 ff ff       	call   2c70 <dcgettext@plt>
    4952:	48 8d 15 fb 10 01 00 	lea    rdx,[rip+0x110fb]        # 15a54 <short_options+0x1b84>
    4959:	48 89 c1             	mov    rcx,rax
    495c:	31 f6                	xor    esi,esi
    495e:	31 ff                	xor    edi,edi
    4960:	31 c0                	xor    eax,eax
    4962:	e8 79 e6 ff ff       	call   2fe0 <error@plt>
    4967:	e9 7c f2 ff ff       	jmp    3be8 <main+0x8e8>
    496c:	48 83 bc 24 b8 00 00 	cmp    QWORD PTR [rsp+0xb8],0x0
    4973:	00 00 
    4975:	0f 85 ee fa ff ff    	jne    4469 <main+0x1169>
    497b:	48 c7 84 24 b0 00 00 	mov    QWORD PTR [rsp+0xb0],0xffffffffffffffff
    4982:	00 ff ff ff ff 
    4987:	e9 dd fa ff ff       	jmp    4469 <main+0x1169>
    498c:	8b 44 24 78          	mov    eax,DWORD PTR [rsp+0x78]
    4990:	83 f8 01             	cmp    eax,0x1
    4993:	0f 84 76 f7 ff ff    	je     410f <main+0xe0f>
    4999:	8b 74 24 70          	mov    esi,DWORD PTR [rsp+0x70]
    499d:	48 8d 0d 3c 4c 21 00 	lea    rcx,[rip+0x214c3c]        # 2195e0 <long_options>
    49a4:	4d 89 d8             	mov    r8,r11
    49a7:	ba 84 ff ff ff       	mov    edx,0xffffff84
    49ac:	89 c7                	mov    edi,eax
    49ae:	e8 bd dc 00 00       	call   12670 <xstrtol_fatal>
    49b3:	83 f8 02             	cmp    eax,0x2
    49b6:	75 1e                	jne    49d6 <main+0x16d6>
    49b8:	48 8b 94 24 a0 01 00 	mov    rdx,QWORD PTR [rsp+0x1a0]
    49bf:	00 
    49c0:	0f be 4a ff          	movsx  ecx,BYTE PTR [rdx-0x1]
    49c4:	83 e9 30             	sub    ecx,0x30
    49c7:	83 f9 09             	cmp    ecx,0x9
    49ca:	77 0a                	ja     49d6 <main+0x16d6>
    49cc:	80 7a 01 00          	cmp    BYTE PTR [rdx+0x1],0x0
    49d0:	0f 84 b9 0d 00 00    	je     578f <main+0x248f>
    49d6:	4c 8b 44 24 78       	mov    r8,QWORD PTR [rsp+0x78]
    49db:	8b b4 24 80 00 00 00 	mov    esi,DWORD PTR [rsp+0x80]
    49e2:	48 8d 0d f7 4b 21 00 	lea    rcx,[rip+0x214bf7]        # 2195e0 <long_options>
    49e9:	ba 53 00 00 00       	mov    edx,0x53
    49ee:	89 c7                	mov    edi,eax
    49f0:	e8 7b dc 00 00       	call   12670 <xstrtol_fatal>
    49f5:	48 63 05 dc 57 21 00 	movsxd rax,DWORD PTR [rip+0x2157dc]        # 21a1d8 <optind@@GLIBC_2.2.5>
    49fc:	39 d8                	cmp    eax,ebx
    49fe:	0f 84 37 0c 00 00    	je     563b <main+0x233b>
    4a04:	48 8b 44 c5 00       	mov    rax,QWORD PTR [rbp+rax*8+0x0]
    4a09:	c7 44 24 70 00 00 00 	mov    DWORD PTR [rsp+0x70],0x0
    4a10:	00 
    4a11:	80 38 2d             	cmp    BYTE PTR [rax],0x2d
    4a14:	0f 84 ab 0b 00 00    	je     55c5 <main+0x22c5>
    4a1a:	48 83 7c 24 68 00    	cmp    QWORD PTR [rsp+0x68],0x0
    4a20:	0f 94 c0             	sete   al
    4a23:	23 44 24 70          	and    eax,DWORD PTR [rsp+0x70]
    4a27:	08 44 24 10          	or     BYTE PTR [rsp+0x10],al
    4a2b:	0f 84 7c f9 ff ff    	je     43ad <main+0x10ad>
    4a31:	48 8b 7c 24 30       	mov    rdi,QWORD PTR [rsp+0x30]
    4a36:	31 c0                	xor    eax,eax
    4a38:	b9 12 00 00 00       	mov    ecx,0x12
    4a3d:	48 8b 74 24 30       	mov    rsi,QWORD PTR [rsp+0x30]
    4a42:	44 89 8c 24 80 00 00 	mov    DWORD PTR [rsp+0x80],r9d
    4a49:	00 
    4a4a:	f3 ab                	rep stos DWORD PTR es:[rdi],eax
    4a4c:	48 8d 7a 01          	lea    rdi,[rdx+0x1]
    4a50:	48 83 c9 ff          	or     rcx,0xffffffffffffffff
    4a54:	31 d2                	xor    edx,edx
    4a56:	48 89 8c 24 c0 00 00 	mov    QWORD PTR [rsp+0xc0],rcx
    4a5d:	00 
    4a5e:	48 89 4c 24 78       	mov    QWORD PTR [rsp+0x78],rcx
    4a63:	e8 58 25 00 00       	call   6fc0 <parse_field_count>
    4a68:	48 85 c0             	test   rax,rax
    4a6b:	48 8b 4c 24 78       	mov    rcx,QWORD PTR [rsp+0x78]
    4a70:	44 8b 8c 24 80 00 00 	mov    r9d,DWORD PTR [rsp+0x80]
    4a77:	00 
    4a78:	0f 84 27 0d 00 00    	je     57a5 <main+0x24a5>
    4a7e:	80 38 2e             	cmp    BYTE PTR [rax],0x2e
    4a81:	0f 84 f2 0d 00 00    	je     5879 <main+0x2579>
    4a87:	48 83 bc 24 b0 00 00 	cmp    QWORD PTR [rsp+0xb0],0x0
    4a8e:	00 00 
    4a90:	0f 85 d7 0b 00 00    	jne    566d <main+0x236d>
    4a96:	48 83 bc 24 b8 00 00 	cmp    QWORD PTR [rsp+0xb8],0x0
    4a9d:	00 00 
    4a9f:	0f 85 c8 0b 00 00    	jne    566d <main+0x236d>
    4aa5:	48 c7 84 24 b0 00 00 	mov    QWORD PTR [rsp+0xb0],0xffffffffffffffff
    4aac:	00 ff ff ff ff 
    4ab1:	48 85 c0             	test   rax,rax
    4ab4:	0f 85 b3 0b 00 00    	jne    566d <main+0x236d>
    4aba:	48 8b 15 1f 57 21 00 	mov    rdx,QWORD PTR [rip+0x21571f]        # 21a1e0 <optarg@@GLIBC_2.2.5>
    4ac1:	e9 e7 f8 ff ff       	jmp    43ad <main+0x10ad>
    4ac6:	48 8d 05 50 0a 01 00 	lea    rax,[rip+0x10a50]        # 1551d <short_options+0x164d>
    4acd:	e9 ec fd ff ff       	jmp    48be <main+0x15be>
    4ad2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    4ad8:	45 84 e4             	test   r12b,r12b
    4adb:	0f 85 0f f2 ff ff    	jne    3cf0 <main+0x9f0>
    4ae1:	e9 d2 f1 ff ff       	jmp    3cb8 <main+0x9b8>
    4ae6:	48 c7 84 24 78 01 00 	mov    QWORD PTR [rsp+0x178],0x0
    4aed:	00 00 00 00 00 
    4af2:	e9 27 f2 ff ff       	jmp    3d1e <main+0xa1e>
    4af7:	48 c7 84 24 70 01 00 	mov    QWORD PTR [rsp+0x170],0x0
    4afe:	00 00 00 00 00 
    4b03:	e9 ff f1 ff ff       	jmp    3d07 <main+0xa07>
    4b08:	44 0f b6 6c 24 50    	movzx  r13d,BYTE PTR [rsp+0x50]
    4b0e:	44 0f b6 64 24 60    	movzx  r12d,BYTE PTR [rsp+0x60]
    4b14:	4c 8b 7c 24 68       	mov    r15,QWORD PTR [rsp+0x68]
    4b19:	4c 8b 74 24 70       	mov    r14,QWORD PTR [rsp+0x70]
    4b1e:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
    4b23:	e8 48 15 00 00       	call   6070 <default_key_compare>
    4b28:	84 c0                	test   al,al
    4b2a:	0f b6 ac 24 87 01 00 	movzx  ebp,BYTE PTR [rsp+0x187]
    4b31:	00 
    4b32:	0f 84 f7 f9 ff ff    	je     452f <main+0x122f>
    4b38:	40 84 ed             	test   bpl,bpl
    4b3b:	0f 84 a8 fa ff ff    	je     45e9 <main+0x12e9>
    4b41:	80 3d f2 58 21 00 00 	cmp    BYTE PTR [rip+0x2158f2],0x0        # 21a43a <stable>
    4b48:	0f 84 5b 0a 00 00    	je     55a9 <main+0x22a9>
    4b4e:	48 83 3d da 58 21 00 	cmp    QWORD PTR [rip+0x2158da],0x0        # 21a430 <keylist>
    4b55:	00 
    4b56:	0f 85 ed f9 ff ff    	jne    4549 <main+0x1249>
    4b5c:	e9 4b fa ff ff       	jmp    45ac <main+0x12ac>
    4b61:	48 8d 1d d2 1a 01 00 	lea    rbx,[rip+0x11ad2]        # 1663a <__PRETTY_FUNCTION__.4162+0x42>
    4b68:	4c 89 f5             	mov    rbp,r14
    4b6b:	45 31 e4             	xor    r12d,r12d
    4b6e:	66 90                	xchg   ax,ax
    4b70:	48 8b 55 00          	mov    rdx,QWORD PTR [rbp+0x0]
    4b74:	b9 02 00 00 00       	mov    ecx,0x2
    4b79:	48 89 df             	mov    rdi,rbx
    4b7c:	48 89 d6             	mov    rsi,rdx
    4b7f:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    4b81:	0f 97 c0             	seta   al
    4b84:	1c 00                	sbb    al,0x0
    4b86:	84 c0                	test   al,al
    4b88:	74 15                	je     4b9f <main+0x189f>
    4b8a:	be 04 00 00 00       	mov    esi,0x4
    4b8f:	48 89 d7             	mov    rdi,rdx
    4b92:	e8 d9 e4 ff ff       	call   3070 <euidaccess@plt>
    4b97:	85 c0                	test   eax,eax
    4b99:	0f 85 1b 0d 00 00    	jne    58ba <main+0x25ba>
    4b9f:	49 83 c4 01          	add    r12,0x1
    4ba3:	48 83 c5 08          	add    rbp,0x8
    4ba7:	4d 39 e7             	cmp    r15,r12
    4baa:	75 c4                	jne    4b70 <main+0x1870>
    4bac:	48 8b 44 24 28       	mov    rax,QWORD PTR [rsp+0x28]
    4bb1:	48 85 c0             	test   rax,rax
    4bb4:	74 2d                	je     4be3 <main+0x18e3>
    4bb6:	48 89 c7             	mov    rdi,rax
    4bb9:	ba b6 01 00 00       	mov    edx,0x1b6
    4bbe:	31 c0                	xor    eax,eax
    4bc0:	be 41 00 08 00       	mov    esi,0x80041
    4bc5:	e8 46 e4 ff ff       	call   3010 <open@plt>
    4bca:	85 c0                	test   eax,eax
    4bcc:	0f 88 77 10 00 00    	js     5c49 <main+0x2949>
    4bd2:	83 f8 01             	cmp    eax,0x1
    4bd5:	74 0c                	je     4be3 <main+0x18e3>
    4bd7:	be 01 00 00 00       	mov    esi,0x1
    4bdc:	89 c7                	mov    edi,eax
    4bde:	e8 7d 3e 00 00       	call   8a60 <move_fd.part.11>
    4be3:	80 7c 24 48 00       	cmp    BYTE PTR [rsp+0x48],0x0
    4be8:	0f 85 85 07 00 00    	jne    5373 <main+0x2073>
    4bee:	48 83 7c 24 58 00    	cmp    QWORD PTR [rsp+0x58],0x0
    4bf4:	0f 84 0c 0a 00 00    	je     5606 <main+0x2306>
    4bfa:	48 8b 5c 24 58       	mov    rbx,QWORD PTR [rsp+0x58]
    4bff:	48 b8 ff ff ff ff ff 	movabs rax,0xffffffffffffff
    4c06:	ff ff 00 
    4c09:	4c 89 74 24 68       	mov    QWORD PTR [rsp+0x68],r14
    4c0e:	4c 8b 74 24 20       	mov    r14,QWORD PTR [rsp+0x20]
    4c13:	48 c7 84 24 68 01 00 	mov    QWORD PTR [rsp+0x168],0x0
    4c1a:	00 00 00 00 00 
    4c1f:	4c 89 7c 24 38       	mov    QWORD PTR [rsp+0x38],r15
    4c24:	48 39 c3             	cmp    rbx,rax
    4c27:	48 0f 46 c3          	cmovbe rax,rbx
    4c2b:	45 31 ed             	xor    r13d,r13d
    4c2e:	48 89 c3             	mov    rbx,rax
    4c31:	48 89 44 24 40       	mov    QWORD PTR [rsp+0x40],rax
    4c36:	48 01 c3             	add    rbx,rax
    4c39:	48 c1 e0 08          	shl    rax,0x8
    4c3d:	48 89 5c 24 50       	mov    QWORD PTR [rsp+0x50],rbx
    4c42:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
    4c47:	48 8b 44 24 68       	mov    rax,QWORD PTR [rsp+0x68]
    4c4c:	48 8d 35 40 0c 01 00 	lea    rsi,[rip+0x10c40]        # 15893 <short_options+0x19c3>
    4c53:	48 8b 00             	mov    rax,QWORD PTR [rax]
    4c56:	48 89 c7             	mov    rdi,rax
    4c59:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
    4c5e:	e8 4d 24 00 00       	call   70b0 <stream_open>
    4c63:	48 85 c0             	test   rax,rax
    4c66:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    4c6b:	0f 84 86 0c 00 00    	je     58f7 <main+0x25f7>
    4c71:	48 83 7c 24 58 01    	cmp    QWORD PTR [rsp+0x58],0x1
    4c77:	48 c7 44 24 60 30 00 	mov    QWORD PTR [rsp+0x60],0x30
    4c7e:	00 00 
    4c80:	76 24                	jbe    4ca6 <main+0x19a6>
    4c82:	48 8b 4c 24 40       	mov    rcx,QWORD PTR [rsp+0x40]
    4c87:	ba 01 00 00 00       	mov    edx,0x1
    4c8c:	b8 01 00 00 00       	mov    eax,0x1
    4c91:	48 01 c0             	add    rax,rax
    4c94:	48 83 c2 01          	add    rdx,0x1
    4c98:	48 39 c1             	cmp    rcx,rax
    4c9b:	77 f4                	ja     4c91 <main+0x1991>
    4c9d:	48 c1 e2 05          	shl    rdx,0x5
    4ca1:	48 89 54 24 60       	mov    QWORD PTR [rsp+0x60],rdx
    4ca6:	48 8b ac 24 68 01 00 	mov    rbp,QWORD PTR [rsp+0x168]
    4cad:	00 
    4cae:	48 8d 84 24 50 01 00 	lea    rax,[rsp+0x150]
    4cb5:	00 
    4cb6:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
    4cbb:	48 85 ed             	test   rbp,rbp
    4cbe:	0f 84 80 03 00 00    	je     5044 <main+0x1d44>
    4cc4:	48 8d 84 24 90 00 00 	lea    rax,[rsp+0x90]
    4ccb:	00 
    4ccc:	c6 84 24 80 01 00 00 	mov    BYTE PTR [rsp+0x180],0x0
    4cd3:	00 
    4cd4:	48 83 6c 24 38 01    	sub    QWORD PTR [rsp+0x38],0x1
    4cda:	48 89 44 24 30       	mov    QWORD PTR [rsp+0x30],rax
    4cdf:	e9 0a 01 00 00       	jmp    4dee <main+0x1aee>
    4ce4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    4ce8:	48 8b 74 24 50       	mov    rsi,QWORD PTR [rsp+0x50]
    4ced:	48 8d 3d 8c 1e 00 00 	lea    rdi,[rip+0x1e8c]        # 6b80 <compare_nodes>
    4cf4:	e8 37 8c 00 00       	call   d930 <heap_alloc>
    4cf9:	49 8d 7e 08          	lea    rdi,[r14+0x8]
    4cfd:	31 f6                	xor    esi,esi
    4cff:	48 89 84 24 c0 02 00 	mov    QWORD PTR [rsp+0x2c0],rax
    4d06:	00 
    4d07:	e8 64 e4 ff ff       	call   3170 <pthread_mutex_init@plt>
    4d0c:	49 8d 7e 30          	lea    rdi,[r14+0x30]
    4d10:	31 f6                	xor    esi,esi
    4d12:	e8 b9 e1 ff ff       	call   2ed0 <pthread_cond_init@plt>
    4d17:	48 8b 7c 24 48       	mov    rdi,QWORD PTR [rsp+0x48]
    4d1c:	4c 8b bc 24 60 01 00 	mov    r15,QWORD PTR [rsp+0x160]
    4d23:	00 
    4d24:	e8 b7 d0 00 00       	call   11de0 <xmalloc>
    4d29:	48 8d 78 58          	lea    rdi,[rax+0x58]
    4d2d:	4c 89 78 30          	mov    QWORD PTR [rax+0x30],r15
    4d31:	4c 89 78 28          	mov    QWORD PTR [rax+0x28],r15
    4d35:	31 f6                	xor    esi,esi
    4d37:	48 c7 40 18 00 00 00 	mov    QWORD PTR [rax+0x18],0x0
    4d3e:	00 
    4d3f:	48 c7 40 10 00 00 00 	mov    QWORD PTR [rax+0x10],0x0
    4d46:	00 
    4d47:	48 c7 40 08 00 00 00 	mov    QWORD PTR [rax+0x8],0x0
    4d4e:	00 
    4d4f:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
    4d56:	48 c7 40 20 00 00 00 	mov    QWORD PTR [rax+0x20],0x0
    4d5d:	00 
    4d5e:	48 c7 40 38 00 00 00 	mov    QWORD PTR [rax+0x38],0x0
    4d65:	00 
    4d66:	c7 40 50 00 00 00 00 	mov    DWORD PTR [rax+0x50],0x0
    4d6d:	c6 40 54 00          	mov    BYTE PTR [rax+0x54],0x0
    4d71:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
    4d76:	e8 f5 e3 ff ff       	call   3170 <pthread_mutex_init@plt>
    4d7b:	4c 8b 54 24 18       	mov    r10,QWORD PTR [rsp+0x18]
    4d80:	4d 89 f8             	mov    r8,r15
    4d83:	4c 8b 7c 24 40       	mov    r15,QWORD PTR [rsp+0x40]
    4d88:	45 31 c9             	xor    r9d,r9d
    4d8b:	48 89 da             	mov    rdx,rbx
    4d8e:	4d 8d 9a 80 00 00 00 	lea    r11,[r10+0x80]
    4d95:	4c 89 d7             	mov    rdi,r10
    4d98:	4c 89 f9             	mov    rcx,r15
    4d9b:	4c 89 de             	mov    rsi,r11
    4d9e:	4c 89 5c 24 18       	mov    QWORD PTR [rsp+0x18],r11
    4da3:	e8 58 1a 00 00       	call   6800 <init_node>
    4da8:	48 83 ec 08          	sub    rsp,0x8
    4dac:	4d 89 f0             	mov    r8,r14
    4daf:	4c 89 fe             	mov    rsi,r15
    4db2:	55                   	push   rbp
    4db3:	4c 8b 5c 24 28       	mov    r11,QWORD PTR [rsp+0x28]
    4db8:	48 89 df             	mov    rdi,rbx
    4dbb:	4c 8b 8c 24 a0 00 00 	mov    r9,QWORD PTR [rsp+0xa0]
    4dc2:	00 
    4dc3:	48 8b 94 24 70 01 00 	mov    rdx,QWORD PTR [rsp+0x170]
    4dca:	00 
    4dcb:	4c 89 d9             	mov    rcx,r11
    4dce:	e8 1d 42 00 00       	call   8ff0 <sortlines>
    4dd3:	5a                   	pop    rdx
    4dd4:	59                   	pop    rcx
    4dd5:	48 8b bc 24 90 00 00 	mov    rdi,QWORD PTR [rsp+0x90]
    4ddc:	00 
    4ddd:	48 89 ee             	mov    rsi,rbp
    4de0:	e8 0b 24 00 00       	call   71f0 <xfclose>
    4de5:	45 84 e4             	test   r12b,r12b
    4de8:	0f 85 c3 01 00 00    	jne    4fb1 <main+0x1cb1>
    4dee:	48 8b 54 24 10       	mov    rdx,QWORD PTR [rsp+0x10]
    4df3:	48 8b 74 24 08       	mov    rsi,QWORD PTR [rsp+0x8]
    4df8:	48 8b 7c 24 20       	mov    rdi,QWORD PTR [rsp+0x20]
    4dfd:	e8 0e 49 00 00       	call   9710 <fillbuf>
    4e02:	84 c0                	test   al,al
    4e04:	0f 84 81 01 00 00    	je     4f8b <main+0x1c8b>
    4e0a:	44 0f b6 a4 24 80 01 	movzx  r12d,BYTE PTR [rsp+0x180]
    4e11:	00 00 
    4e13:	48 8b 9c 24 68 01 00 	mov    rbx,QWORD PTR [rsp+0x168]
    4e1a:	00 
    4e1b:	45 84 e4             	test   r12b,r12b
    4e1e:	74 34                	je     4e54 <main+0x1b54>
    4e20:	48 83 7c 24 38 00    	cmp    QWORD PTR [rsp+0x38],0x0
    4e26:	74 7e                	je     4ea6 <main+0x1ba6>
    4e28:	48 8b 7c 24 60       	mov    rdi,QWORD PTR [rsp+0x60]
    4e2d:	48 8b 94 24 58 01 00 	mov    rdx,QWORD PTR [rsp+0x158]
    4e34:	00 
    4e35:	48 89 d8             	mov    rax,rbx
    4e38:	48 8d 4f 01          	lea    rcx,[rdi+0x1]
    4e3c:	48 29 d0             	sub    rax,rdx
    4e3f:	48 0f af bc 24 60 01 	imul   rdi,QWORD PTR [rsp+0x160]
    4e46:	00 00 
    4e48:	48 29 f8             	sub    rax,rdi
    4e4b:	48 39 c1             	cmp    rcx,rax
    4e4e:	0f 82 f4 07 00 00    	jb     5648 <main+0x2348>
    4e54:	48 03 9c 24 50 01 00 	add    rbx,QWORD PTR [rsp+0x150]
    4e5b:	00 
    4e5c:	48 c7 05 f9 59 21 00 	mov    QWORD PTR [rip+0x2159f9],0x0        # 21a860 <saved_line>
    4e63:	00 00 00 00 
    4e67:	48 8b 7c 24 30       	mov    rdi,QWORD PTR [rsp+0x30]
    4e6c:	31 f6                	xor    esi,esi
    4e6e:	49 83 c5 01          	add    r13,0x1
    4e72:	45 31 e4             	xor    r12d,r12d
    4e75:	e8 86 3e 00 00       	call   8d00 <maybe_create_temp>
    4e7a:	48 8d 68 0d          	lea    rbp,[rax+0xd]
    4e7e:	48 83 bc 24 60 01 00 	cmp    QWORD PTR [rsp+0x160],0x1
    4e85:	00 01 
    4e87:	0f 87 5b fe ff ff    	ja     4ce8 <main+0x19e8>
    4e8d:	48 8b b4 24 90 00 00 	mov    rsi,QWORD PTR [rsp+0x90]
    4e94:	00 
    4e95:	48 8d 7b e0          	lea    rdi,[rbx-0x20]
    4e99:	48 89 ea             	mov    rdx,rbp
    4e9c:	e8 4f 3b 00 00       	call   89f0 <write_unique>
    4ea1:	e9 2f ff ff ff       	jmp    4dd5 <main+0x1ad5>
    4ea6:	48 03 9c 24 50 01 00 	add    rbx,QWORD PTR [rsp+0x150]
    4ead:	00 
    4eae:	4d 85 ed             	test   r13,r13
    4eb1:	48 c7 05 a4 59 21 00 	mov    QWORD PTR [rip+0x2159a4],0x0        # 21a860 <saved_line>
    4eb8:	00 00 00 00 
    4ebc:	75 a9                	jne    4e67 <main+0x1b67>
    4ebe:	48 83 bc 24 70 01 00 	cmp    QWORD PTR [rsp+0x170],0x0
    4ec5:	00 00 
    4ec7:	75 9e                	jne    4e67 <main+0x1b67>
    4ec9:	48 8b 74 24 10       	mov    rsi,QWORD PTR [rsp+0x10]
    4ece:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
    4ed3:	e8 18 23 00 00       	call   71f0 <xfclose>
    4ed8:	48 8b 7c 24 28       	mov    rdi,QWORD PTR [rsp+0x28]
    4edd:	48 8d 35 06 06 01 00 	lea    rsi,[rip+0x10606]        # 154ea <short_options+0x161a>
    4ee4:	e8 c7 21 00 00       	call   70b0 <stream_open>
    4ee9:	48 85 c0             	test   rax,rax
    4eec:	0f 84 fb 09 00 00    	je     58ed <main+0x25ed>
    4ef2:	48 89 84 24 90 00 00 	mov    QWORD PTR [rsp+0x90],rax
    4ef9:	00 
    4efa:	48 8b 6c 24 28       	mov    rbp,QWORD PTR [rsp+0x28]
    4eff:	4c 8b 6c 24 38       	mov    r13,QWORD PTR [rsp+0x38]
    4f04:	e9 75 ff ff ff       	jmp    4e7e <main+0x1b7e>
    4f09:	48 8b 7c 24 38       	mov    rdi,QWORD PTR [rsp+0x38]
    4f0e:	e8 5d 11 00 00       	call   6070 <default_key_compare>
    4f13:	84 c0                	test   al,al
    4f15:	0f 84 38 05 00 00    	je     5453 <main+0x2153>
    4f1b:	80 3d fe 54 21 00 00 	cmp    BYTE PTR [rip+0x2154fe],0x0        # 21a420 <debug>
    4f22:	0f 84 18 05 00 00    	je     5440 <main+0x2140>
    4f28:	c6 44 24 10 00       	mov    BYTE PTR [rsp+0x10],0x0
    4f2d:	45 31 ed             	xor    r13d,r13d
    4f30:	e9 76 ec ff ff       	jmp    3bab <main+0x8ab>
    4f35:	48 8d 35 3c 03 01 00 	lea    rsi,[rip+0x1033c]        # 15278 <short_options+0x13a8>
    4f3c:	31 ff                	xor    edi,edi
    4f3e:	ba 05 00 00 00       	mov    edx,0x5
    4f43:	e8 28 dd ff ff       	call   2c70 <dcgettext@plt>
    4f48:	48 8d 15 05 0b 01 00 	lea    rdx,[rip+0x10b05]        # 15a54 <short_options+0x1b84>
    4f4f:	48 89 c1             	mov    rcx,rax
    4f52:	31 f6                	xor    esi,esi
    4f54:	31 ff                	xor    edi,edi
    4f56:	31 c0                	xor    eax,eax
    4f58:	e8 83 e0 ff ff       	call   2fe0 <error@plt>
    4f5d:	e9 ce ec ff ff       	jmp    3c30 <main+0x930>
    4f62:	48 8d 35 bf 03 01 00 	lea    rsi,[rip+0x103bf]        # 15328 <short_options+0x1458>
    4f69:	31 ff                	xor    edi,edi
    4f6b:	ba 05 00 00 00       	mov    edx,0x5
    4f70:	e8 fb dc ff ff       	call   2c70 <dcgettext@plt>
    4f75:	48 89 d9             	mov    rcx,rbx
    4f78:	48 89 c2             	mov    rdx,rax
    4f7b:	31 f6                	xor    esi,esi
    4f7d:	31 ff                	xor    edi,edi
    4f7f:	31 c0                	xor    eax,eax
    4f81:	e8 5a e0 ff ff       	call   2fe0 <error@plt>
    4f86:	e9 65 ed ff ff       	jmp    3cf0 <main+0x9f0>
    4f8b:	48 8b 74 24 10       	mov    rsi,QWORD PTR [rsp+0x10]
    4f90:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
    4f95:	e8 56 22 00 00       	call   71f0 <xfclose>
    4f9a:	48 83 7c 24 38 00    	cmp    QWORD PTR [rsp+0x38],0x0
    4fa0:	0f 84 48 03 00 00    	je     52ee <main+0x1fee>
    4fa6:	48 83 44 24 68 08    	add    QWORD PTR [rsp+0x68],0x8
    4fac:	e9 96 fc ff ff       	jmp    4c47 <main+0x1947>
    4fb1:	48 8b bc 24 50 01 00 	mov    rdi,QWORD PTR [rsp+0x150]
    4fb8:	00 
    4fb9:	e8 02 e2 ff ff       	call   31c0 <free@plt>
    4fbe:	83 cb ff             	or     ebx,0xffffffff
    4fc1:	83 3d b4 53 21 00 00 	cmp    DWORD PTR [rip+0x2153b4],0x0        # 21a37c <nprocs>
    4fc8:	7e 11                	jle    4fdb <main+0x1cdb>
    4fca:	89 df                	mov    edi,ebx
    4fcc:	e8 4f 16 00 00       	call   6620 <reap>
    4fd1:	8b 05 a5 53 21 00    	mov    eax,DWORD PTR [rip+0x2153a5]        # 21a37c <nprocs>
    4fd7:	85 c0                	test   eax,eax
    4fd9:	7f ef                	jg     4fca <main+0x1cca>
    4fdb:	80 3d 56 54 21 00 00 	cmp    BYTE PTR [rip+0x215456],0x0        # 21a438 <have_read_stdin>
    4fe2:	75 07                	jne    4feb <main+0x1ceb>
    4fe4:	31 c0                	xor    eax,eax
    4fe6:	e9 5b f8 ff ff       	jmp    4846 <main+0x1546>
    4feb:	48 8b 3d de 51 21 00 	mov    rdi,QWORD PTR [rip+0x2151de]        # 21a1d0 <stdin@@GLIBC_2.2.5>
    4ff2:	e8 49 db 00 00       	call   12b40 <rpl_fclose>
    4ff7:	83 c0 01             	add    eax,0x1
    4ffa:	75 e8                	jne    4fe4 <main+0x1ce4>
    4ffc:	48 8d 35 b6 04 01 00 	lea    rsi,[rip+0x104b6]        # 154b9 <short_options+0x15e9>
    5003:	31 ff                	xor    edi,edi
    5005:	ba 05 00 00 00       	mov    edx,0x5
    500a:	e8 61 dc ff ff       	call   2c70 <dcgettext@plt>
    500f:	48 8d 35 24 16 01 00 	lea    rsi,[rip+0x11624]        # 1663a <__PRETTY_FUNCTION__.4162+0x42>
    5016:	48 89 c7             	mov    rdi,rax
    5019:	e8 02 13 00 00       	call   6320 <sort_die>
    501e:	49 83 7e 08 00       	cmp    QWORD PTR [r14+0x8],0x0
    5023:	0f 85 37 ef ff ff    	jne    3f60 <main+0xc60>
    5029:	41 80 7e 31 00       	cmp    BYTE PTR [r14+0x31],0x0
    502e:	0f 85 84 ec ff ff    	jne    3cb8 <main+0x9b8>
    5034:	49 83 7e 18 00       	cmp    QWORD PTR [r14+0x18],0x0
    5039:	0f 84 79 ec ff ff    	je     3cb8 <main+0x9b8>
    503f:	e9 1c ef ff ff       	jmp    3f60 <main+0xc60>
    5044:	48 8b 44 24 60       	mov    rax,QWORD PTR [rsp+0x60]
    5049:	4c 89 6c 24 18       	mov    QWORD PTR [rsp+0x18],r13
    504e:	49 89 ed             	mov    r13,rbp
    5051:	48 8d 58 01          	lea    rbx,[rax+0x1]
    5055:	4c 8d 60 02          	lea    r12,[rax+0x2]
    5059:	e9 97 00 00 00       	jmp    50f5 <main+0x1df5>
    505e:	31 f6                	xor    esi,esi
    5060:	bf 01 00 00 00       	mov    edi,0x1
    5065:	e8 b6 de ff ff       	call   2f20 <__fxstat@plt>
    506a:	85 c0                	test   eax,eax
    506c:	0f 95 c0             	setne  al
    506f:	84 c0                	test   al,al
    5071:	0f 85 b8 0b 00 00    	jne    5c2f <main+0x292f>
    5077:	8b 84 24 d8 02 00 00 	mov    eax,DWORD PTR [rsp+0x2d8]
    507e:	25 00 f0 00 00       	and    eax,0xf000
    5083:	3d 00 80 00 00       	cmp    eax,0x8000
    5088:	0f 84 aa 00 00 00    	je     5138 <main+0x1e38>
    508e:	48 8b 35 c3 53 21 00 	mov    rsi,QWORD PTR [rip+0x2153c3]        # 21a458 <sort_size>
    5095:	48 85 f6             	test   rsi,rsi
    5098:	0f 85 26 02 00 00    	jne    52c4 <main+0x1fc4>
    509e:	48 83 3d 7a 51 21 00 	cmp    QWORD PTR [rip+0x21517a],0x0        # 21a220 <size_bound.8633>
    50a5:	00 
    50a6:	bd 00 00 02 00       	mov    ebp,0x20000
    50ab:	0f 84 b4 00 00 00    	je     5165 <main+0x1e65>
    50b1:	48 89 d9             	mov    rcx,rbx
    50b4:	31 d2                	xor    edx,edx
    50b6:	48 8b 35 63 51 21 00 	mov    rsi,QWORD PTR [rip+0x215163]        # 21a220 <size_bound.8633>
    50bd:	48 0f af cd          	imul   rcx,rbp
    50c1:	48 83 c1 01          	add    rcx,0x1
    50c5:	48 89 c8             	mov    rax,rcx
    50c8:	48 f7 f3             	div    rbx
    50cb:	48 39 c5             	cmp    rbp,rax
    50ce:	0f 85 f0 01 00 00    	jne    52c4 <main+0x1fc4>
    50d4:	48 89 f0             	mov    rax,rsi
    50d7:	4c 29 e0             	sub    rax,r12
    50da:	48 39 c1             	cmp    rcx,rax
    50dd:	0f 83 e1 01 00 00    	jae    52c4 <main+0x1fc4>
    50e3:	49 01 cc             	add    r12,rcx
    50e6:	49 83 c5 01          	add    r13,0x1
    50ea:	4c 3b 6c 24 38       	cmp    r13,QWORD PTR [rsp+0x38]
    50ef:	0f 83 3c 05 00 00    	jae    5631 <main+0x2331>
    50f5:	4d 85 ed             	test   r13,r13
    50f8:	0f 84 a3 01 00 00    	je     52a1 <main+0x1fa1>
    50fe:	48 8b 44 24 68       	mov    rax,QWORD PTR [rsp+0x68]
    5103:	48 8d 35 30 15 01 00 	lea    rsi,[rip+0x11530]        # 1663a <__PRETTY_FUNCTION__.4162+0x42>
    510a:	4a 8b 2c e8          	mov    rbp,QWORD PTR [rax+r13*8]
    510e:	48 89 ef             	mov    rdi,rbp
    5111:	e8 2a dd ff ff       	call   2e40 <strcmp@plt>
    5116:	85 c0                	test   eax,eax
    5118:	4c 89 f2             	mov    rdx,r14
    511b:	0f 84 3d ff ff ff    	je     505e <main+0x1d5e>
    5121:	48 89 ee             	mov    rsi,rbp
    5124:	bf 01 00 00 00       	mov    edi,0x1
    5129:	e8 92 dd ff ff       	call   2ec0 <__xstat@plt>
    512e:	85 c0                	test   eax,eax
    5130:	0f 95 c0             	setne  al
    5133:	e9 37 ff ff ff       	jmp    506f <main+0x1d6f>
    5138:	48 83 3d e0 50 21 00 	cmp    QWORD PTR [rip+0x2150e0],0x0        # 21a220 <size_bound.8633>
    513f:	00 
    5140:	48 8b ac 24 f0 02 00 	mov    rbp,QWORD PTR [rsp+0x2f0]
    5147:	00 
    5148:	0f 85 63 ff ff ff    	jne    50b1 <main+0x1db1>
    514e:	48 8b 05 03 53 21 00 	mov    rax,QWORD PTR [rip+0x215303]        # 21a458 <sort_size>
    5155:	48 85 c0             	test   rax,rax
    5158:	48 89 05 c1 50 21 00 	mov    QWORD PTR [rip+0x2150c1],rax        # 21a220 <size_bound.8633>
    515f:	0f 85 4c ff ff ff    	jne    50b1 <main+0x1db1>
    5165:	48 8d b4 24 90 00 00 	lea    rsi,[rsp+0x90]
    516c:	00 
    516d:	bf 02 00 00 00       	mov    edi,0x2
    5172:	49 83 cf ff          	or     r15,0xffffffffffffffff
    5176:	48 89 74 24 20       	mov    QWORD PTR [rsp+0x20],rsi
    517b:	e8 90 df ff ff       	call   3110 <getrlimit@plt>
    5180:	85 c0                	test   eax,eax
    5182:	75 08                	jne    518c <main+0x1e8c>
    5184:	4c 8b bc 24 90 00 00 	mov    r15,QWORD PTR [rsp+0x90]
    518b:	00 
    518c:	48 8b 74 24 20       	mov    rsi,QWORD PTR [rsp+0x20]
    5191:	bf 09 00 00 00       	mov    edi,0x9
    5196:	e8 75 df ff ff       	call   3110 <getrlimit@plt>
    519b:	85 c0                	test   eax,eax
    519d:	75 0f                	jne    51ae <main+0x1eae>
    519f:	48 8b 84 24 90 00 00 	mov    rax,QWORD PTR [rsp+0x90]
    51a6:	00 
    51a7:	49 39 c7             	cmp    r15,rax
    51aa:	4c 0f 47 f8          	cmova  r15,rax
    51ae:	48 8b 74 24 20       	mov    rsi,QWORD PTR [rsp+0x20]
    51b3:	bf 05 00 00 00       	mov    edi,0x5
    51b8:	49 d1 ef             	shr    r15,1
    51bb:	e8 50 df ff ff       	call   3110 <getrlimit@plt>
    51c0:	85 c0                	test   eax,eax
    51c2:	75 17                	jne    51db <main+0x1edb>
    51c4:	48 8b 84 24 90 00 00 	mov    rax,QWORD PTR [rsp+0x90]
    51cb:	00 
    51cc:	48 c1 e8 04          	shr    rax,0x4
    51d0:	48 6b c0 0f          	imul   rax,rax,0xf
    51d4:	49 39 c7             	cmp    r15,rax
    51d7:	4c 0f 47 f8          	cmova  r15,rax
    51db:	e8 f0 90 00 00       	call   e2d0 <physmem_available>
    51e0:	f2 0f 11 44 24 20    	movsd  QWORD PTR [rsp+0x20],xmm0
    51e6:	e8 05 90 00 00       	call   e1f0 <physmem_total>
    51eb:	f2 0f 10 0d f5 07 01 	movsd  xmm1,QWORD PTR [rip+0x107f5]        # 159e8 <short_options+0x1b18>
    51f2:	00 
    51f3:	f2 0f 10 54 24 20    	movsd  xmm2,QWORD PTR [rsp+0x20]
    51f9:	f2 0f 59 c8          	mulsd  xmm1,xmm0
    51fd:	f2 0f 59 05 eb 07 01 	mulsd  xmm0,QWORD PTR [rip+0x107eb]        # 159f0 <short_options+0x1b20>
    5204:	00 
    5205:	f2 0f 5f d1          	maxsd  xmm2,xmm1
    5209:	66 0f 28 ca          	movapd xmm1,xmm2
    520d:	66 0f ef d2          	pxor   xmm2,xmm2
    5211:	f2 49 0f 2a d7       	cvtsi2sd xmm2,r15
    5216:	66 0f 2e d0          	ucomisd xmm2,xmm0
    521a:	76 28                	jbe    5244 <main+0x1f44>
    521c:	f2 0f 10 15 bc 07 01 	movsd  xmm2,QWORD PTR [rip+0x107bc]        # 159e0 <short_options+0x1b10>
    5223:	00 
    5224:	66 0f 2e c2          	ucomisd xmm0,xmm2
    5228:	0f 82 71 03 00 00    	jb     559f <main+0x229f>
    522e:	f2 0f 5c c2          	subsd  xmm0,xmm2
    5232:	48 b8 00 00 00 00 00 	movabs rax,0x8000000000000000
    5239:	00 00 80 
    523c:	f2 4c 0f 2c f8       	cvttsd2si r15,xmm0
    5241:	49 31 c7             	xor    r15,rax
    5244:	4d 85 ff             	test   r15,r15
    5247:	0f 88 27 03 00 00    	js     5574 <main+0x2274>
    524d:	66 0f ef c0          	pxor   xmm0,xmm0
    5251:	f2 49 0f 2a c7       	cvtsi2sd xmm0,r15
    5256:	66 0f 2e c1          	ucomisd xmm0,xmm1
    525a:	76 28                	jbe    5284 <main+0x1f84>
    525c:	66 0f 2e 0d 7c 07 01 	ucomisd xmm1,QWORD PTR [rip+0x1077c]        # 159e0 <short_options+0x1b10>
    5263:	00 
    5264:	0f 82 2b 03 00 00    	jb     5595 <main+0x2295>
    526a:	f2 0f 5c 0d 6e 07 01 	subsd  xmm1,QWORD PTR [rip+0x1076e]        # 159e0 <short_options+0x1b10>
    5271:	00 
    5272:	48 b8 00 00 00 00 00 	movabs rax,0x8000000000000000
    5279:	00 00 80 
    527c:	f2 4c 0f 2c f9       	cvttsd2si r15,xmm1
    5281:	49 31 c7             	xor    r15,rax
    5284:	8b 05 9a 4d 21 00    	mov    eax,DWORD PTR [rip+0x214d9a]        # 21a024 <nmerge>
    528a:	48 6b c0 22          	imul   rax,rax,0x22
    528e:	4c 39 f8             	cmp    rax,r15
    5291:	49 0f 42 c7          	cmovb  rax,r15
    5295:	48 89 05 84 4f 21 00 	mov    QWORD PTR [rip+0x214f84],rax        # 21a220 <size_bound.8633>
    529c:	e9 10 fe ff ff       	jmp    50b1 <main+0x1db1>
    52a1:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
    52a6:	e8 e5 db ff ff       	call   2e90 <fileno@plt>
    52ab:	4c 89 f2             	mov    rdx,r14
    52ae:	89 c6                	mov    esi,eax
    52b0:	bf 01 00 00 00       	mov    edi,0x1
    52b5:	e8 66 dc ff ff       	call   2f20 <__fxstat@plt>
    52ba:	85 c0                	test   eax,eax
    52bc:	0f 95 c0             	setne  al
    52bf:	e9 ab fd ff ff       	jmp    506f <main+0x1d6f>
    52c4:	4c 8b 6c 24 18       	mov    r13,QWORD PTR [rsp+0x18]
    52c9:	49 89 f4             	mov    r12,rsi
    52cc:	48 8d 84 24 50 01 00 	lea    rax,[rsp+0x150]
    52d3:	00 
    52d4:	48 8b 74 24 60       	mov    rsi,QWORD PTR [rsp+0x60]
    52d9:	4c 89 e2             	mov    rdx,r12
    52dc:	48 89 c7             	mov    rdi,rax
    52df:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
    52e4:	e8 b7 11 00 00       	call   64a0 <initbuf>
    52e9:	e9 d6 f9 ff ff       	jmp    4cc4 <main+0x19c4>
    52ee:	48 8b bc 24 50 01 00 	mov    rdi,QWORD PTR [rsp+0x150]
    52f5:	00 
    52f6:	e8 c5 de ff ff       	call   31c0 <free@plt>
    52fb:	ba 10 00 00 00       	mov    edx,0x10
    5300:	31 c9                	xor    ecx,ecx
    5302:	48 8b 1d 7f 50 21 00 	mov    rbx,QWORD PTR [rip+0x21507f]        # 21a388 <temphead>
    5309:	48 89 d0             	mov    rax,rdx
    530c:	49 f7 e5             	mul    r13
    530f:	0f 80 54 09 00 00    	jo     5c69 <main+0x2969>
    5315:	48 85 c0             	test   rax,rax
    5318:	0f 88 dc 07 00 00    	js     5afa <main+0x27fa>
    531e:	48 85 c9             	test   rcx,rcx
    5321:	0f 85 d3 07 00 00    	jne    5afa <main+0x27fa>
    5327:	4c 89 ef             	mov    rdi,r13
    532a:	48 c1 e7 04          	shl    rdi,0x4
    532e:	e8 ad ca 00 00       	call   11de0 <xmalloc>
    5333:	48 89 c5             	mov    rbp,rax
    5336:	48 89 c2             	mov    rdx,rax
    5339:	eb 13                	jmp    534e <main+0x204e>
    533b:	48 8d 43 0d          	lea    rax,[rbx+0xd]
    533f:	48 89 5a 08          	mov    QWORD PTR [rdx+0x8],rbx
    5343:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
    5346:	48 83 c2 10          	add    rdx,0x10
    534a:	48 89 42 f0          	mov    QWORD PTR [rdx-0x10],rax
    534e:	48 85 db             	test   rbx,rbx
    5351:	75 e8                	jne    533b <main+0x203b>
    5353:	48 8b 4c 24 28       	mov    rcx,QWORD PTR [rsp+0x28]
    5358:	48 89 ef             	mov    rdi,rbp
    535b:	4c 89 ea             	mov    rdx,r13
    535e:	4c 89 ee             	mov    rsi,r13
    5361:	e8 3a 50 00 00       	call   a3a0 <merge>
    5366:	48 89 ef             	mov    rdi,rbp
    5369:	e8 52 de ff ff       	call   31c0 <free@plt>
    536e:	e9 4b fc ff ff       	jmp    4fbe <main+0x1cbe>
    5373:	be 10 00 00 00       	mov    esi,0x10
    5378:	4c 89 ff             	mov    rdi,r15
    537b:	e8 30 cc 00 00       	call   11fb0 <xcalloc>
    5380:	31 d2                	xor    edx,edx
    5382:	49 8b 34 d6          	mov    rsi,QWORD PTR [r14+rdx*8]
    5386:	48 89 d1             	mov    rcx,rdx
    5389:	48 83 c2 01          	add    rdx,0x1
    538d:	48 c1 e1 04          	shl    rcx,0x4
    5391:	49 39 d7             	cmp    r15,rdx
    5394:	48 89 34 08          	mov    QWORD PTR [rax+rcx*1],rsi
    5398:	77 e8                	ja     5382 <main+0x2082>
    539a:	48 8b 4c 24 28       	mov    rcx,QWORD PTR [rsp+0x28]
    539f:	4c 89 fa             	mov    rdx,r15
    53a2:	31 f6                	xor    esi,esi
    53a4:	48 89 c7             	mov    rdi,rax
    53a7:	e8 f4 4f 00 00       	call   a3a0 <merge>
    53ac:	e9 2a fc ff ff       	jmp    4fdb <main+0x1cdb>
    53b1:	48 8b bc 24 68 01 00 	mov    rdi,QWORD PTR [rsp+0x168]
    53b8:	00 
    53b9:	48 03 bc 24 50 01 00 	add    rdi,QWORD PTR [rsp+0x150]
    53c0:	00 
    53c1:	48 8d b4 24 b0 03 00 	lea    rsi,[rsp+0x3b0]
    53c8:	00 
    53c9:	4c 29 ff             	sub    rdi,r15
    53cc:	48 c1 ff 05          	sar    rdi,0x5
    53d0:	48 03 7c 24 18       	add    rdi,QWORD PTR [rsp+0x18]
    53d5:	e8 f6 88 00 00       	call   dcd0 <umaxtostr>
    53da:	48 8d 35 f1 03 01 00 	lea    rsi,[rip+0x103f1]        # 157d2 <short_options+0x1902>
    53e1:	48 8b 2d c0 54 21 00 	mov    rbp,QWORD PTR [rip+0x2154c0]        # 21a8a8 <program_name>
    53e8:	31 ff                	xor    edi,edi
    53ea:	ba 05 00 00 00       	mov    edx,0x5
    53ef:	49 89 c4             	mov    r12,rax
    53f2:	e8 79 d8 ff ff       	call   2c70 <dcgettext@plt>
    53f7:	48 8b 3d 02 4e 21 00 	mov    rdi,QWORD PTR [rip+0x214e02]        # 21a200 <stderr@@GLIBC_2.2.5>
    53fe:	4d 89 e1             	mov    r9,r12
    5401:	4d 89 e8             	mov    r8,r13
    5404:	48 89 e9             	mov    rcx,rbp
    5407:	48 89 c2             	mov    rdx,rax
    540a:	be 01 00 00 00       	mov    esi,0x1
    540f:	31 c0                	xor    eax,eax
    5411:	e8 ea dc ff ff       	call   3100 <__fprintf_chk@plt>
    5416:	48 8d 35 cb 03 01 00 	lea    rsi,[rip+0x103cb]        # 157e8 <short_options+0x1918>
    541d:	31 ff                	xor    edi,edi
    541f:	ba 05 00 00 00       	mov    edx,0x5
    5424:	e8 47 d8 ff ff       	call   2c70 <dcgettext@plt>
    5429:	48 8b 35 d0 4d 21 00 	mov    rsi,QWORD PTR [rip+0x214dd0]        # 21a200 <stderr@@GLIBC_2.2.5>
    5430:	48 89 c2             	mov    rdx,rax
    5433:	4c 89 ff             	mov    rdi,r15
    5436:	e8 45 1e 00 00       	call   7280 <write_line>
    543b:	e9 d7 f3 ff ff       	jmp    4817 <main+0x1517>
    5440:	0f b6 84 24 37 01 00 	movzx  eax,BYTE PTR [rsp+0x137]
    5447:	00 
    5448:	88 05 ed 4f 21 00    	mov    BYTE PTR [rip+0x214fed],al        # 21a43b <reverse>
    544e:	e9 ad f1 ff ff       	jmp    4600 <main+0x1300>
    5453:	48 8b 7c 24 38       	mov    rdi,QWORD PTR [rsp+0x38]
    5458:	be 48 00 00 00       	mov    esi,0x48
    545d:	e8 7e cb 00 00       	call   11fe0 <xmemdup>
    5462:	48 8b 15 c7 4f 21 00 	mov    rdx,QWORD PTR [rip+0x214fc7]        # 21a430 <keylist>
    5469:	48 8d 0d c0 4f 21 00 	lea    rcx,[rip+0x214fc0]        # 21a430 <keylist>
    5470:	48 85 d2             	test   rdx,rdx
    5473:	74 0a                	je     547f <main+0x217f>
    5475:	48 8d 4a 40          	lea    rcx,[rdx+0x40]
    5479:	48 8b 52 40          	mov    rdx,QWORD PTR [rdx+0x40]
    547d:	eb f1                	jmp    5470 <main+0x2170>
    547f:	48 89 01             	mov    QWORD PTR [rcx],rax
    5482:	48 8b 3d a7 4f 21 00 	mov    rdi,QWORD PTR [rip+0x214fa7]        # 21a430 <keylist>
    5489:	48 c7 40 40 00 00 00 	mov    QWORD PTR [rax+0x40],0x0
    5490:	00 
    5491:	44 0f b6 ac 24 33 01 	movzx  r13d,BYTE PTR [rsp+0x133]
    5498:	00 00 
    549a:	c6 44 24 10 01       	mov    BYTE PTR [rsp+0x10],0x1
    549f:	48 85 ff             	test   rdi,rdi
    54a2:	0f 85 81 e6 ff ff    	jne    3b29 <main+0x829>
    54a8:	e9 f1 e6 ff ff       	jmp    3b9e <main+0x89e>
    54ad:	48 8d 78 01          	lea    rdi,[rax+0x1]
    54b1:	48 8b 44 24 30       	mov    rax,QWORD PTR [rsp+0x30]
    54b6:	48 8d 15 49 01 01 00 	lea    rdx,[rip+0x10149]        # 15606 <short_options+0x1736>
    54bd:	44 89 4c 24 70       	mov    DWORD PTR [rsp+0x70],r9d
    54c2:	48 8d 70 08          	lea    rsi,[rax+0x8]
    54c6:	e8 f5 1a 00 00       	call   6fc0 <parse_field_count>
    54cb:	48 8b 94 24 b8 00 00 	mov    rdx,QWORD PTR [rsp+0xb8]
    54d2:	00 
    54d3:	44 8b 4c 24 70       	mov    r9d,DWORD PTR [rsp+0x70]
    54d8:	48 8d 4a ff          	lea    rcx,[rdx-0x1]
    54dc:	48 85 d2             	test   rdx,rdx
    54df:	48 89 8c 24 b8 00 00 	mov    QWORD PTR [rsp+0xb8],rcx
    54e6:	00 
    54e7:	0f 85 6d ef ff ff    	jne    445a <main+0x115a>
    54ed:	48 8b 3d ec 4c 21 00 	mov    rdi,QWORD PTR [rip+0x214cec]        # 21a1e0 <optarg@@GLIBC_2.2.5>
    54f4:	48 8d 35 87 01 01 00 	lea    rsi,[rip+0x10187]        # 15682 <short_options+0x17b2>
    54fb:	e8 e0 dc ff ff       	call   31e0 <badfieldspec>
    5500:	48 8b 74 24 60       	mov    rsi,QWORD PTR [rsp+0x60]
    5505:	48 8d 15 8f 01 01 00 	lea    rdx,[rip+0x1018f]        # 1569b <short_options+0x17cb>
    550c:	48 8d 78 01          	lea    rdi,[rax+0x1]
    5510:	44 89 4c 24 70       	mov    DWORD PTR [rsp+0x70],r9d
    5515:	e8 a6 1a 00 00       	call   6fc0 <parse_field_count>
    551a:	48 8b 94 24 c0 00 00 	mov    rdx,QWORD PTR [rsp+0xc0]
    5521:	00 
    5522:	44 8b 4c 24 70       	mov    r9d,DWORD PTR [rsp+0x70]
    5527:	48 8d 4a ff          	lea    rcx,[rdx-0x1]
    552b:	48 85 d2             	test   rdx,rdx
    552e:	48 89 8c 24 c0 00 00 	mov    QWORD PTR [rsp+0xc0],rcx
    5535:	00 
    5536:	0f 84 ef 07 00 00    	je     5d2b <main+0x2a2b>
    553c:	80 38 2e             	cmp    BYTE PTR [rax],0x2e
    553f:	0f 84 99 00 00 00    	je     55de <main+0x22de>
    5545:	48 8b 74 24 30       	mov    rsi,QWORD PTR [rsp+0x30]
    554a:	ba 01 00 00 00       	mov    edx,0x1
    554f:	48 89 c7             	mov    rdi,rax
    5552:	44 89 4c 24 70       	mov    DWORD PTR [rsp+0x70],r9d
    5557:	e8 24 0c 00 00       	call   6180 <set_ordering>
    555c:	44 8b 4c 24 70       	mov    r9d,DWORD PTR [rsp+0x70]
    5561:	e9 3d ef ff ff       	jmp    44a3 <main+0x11a3>
    5566:	48 c7 44 24 58 ff ff 	mov    QWORD PTR [rsp+0x58],0xffffffffffffffff
    556d:	ff ff 
    556f:	e9 ca e2 ff ff       	jmp    383e <main+0x53e>
    5574:	4c 89 f8             	mov    rax,r15
    5577:	4c 89 f9             	mov    rcx,r15
    557a:	66 0f ef c0          	pxor   xmm0,xmm0
    557e:	48 d1 e8             	shr    rax,1
    5581:	83 e1 01             	and    ecx,0x1
    5584:	48 09 c8             	or     rax,rcx
    5587:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
    558c:	f2 0f 58 c0          	addsd  xmm0,xmm0
    5590:	e9 c1 fc ff ff       	jmp    5256 <main+0x1f56>
    5595:	f2 4c 0f 2c f9       	cvttsd2si r15,xmm1
    559a:	e9 e5 fc ff ff       	jmp    5284 <main+0x1f84>
    559f:	f2 4c 0f 2c f8       	cvttsd2si r15,xmm0
    55a4:	e9 9b fc ff ff       	jmp    5244 <main+0x1f44>
    55a9:	80 3d 89 4e 21 00 00 	cmp    BYTE PTR [rip+0x214e89],0x0        # 21a439 <unique>
    55b0:	0f 85 98 f5 ff ff    	jne    4b4e <main+0x184e>
    55b6:	e9 fa ef ff ff       	jmp    45b5 <main+0x12b5>
    55bb:	b8 01 00 00 00       	mov    eax,0x1
    55c0:	e9 11 f4 ff ff       	jmp    49d6 <main+0x16d6>
    55c5:	0f be 40 01          	movsx  eax,BYTE PTR [rax+0x1]
    55c9:	83 e8 30             	sub    eax,0x30
    55cc:	83 f8 09             	cmp    eax,0x9
    55cf:	0f 96 c0             	setbe  al
    55d2:	0f b6 c0             	movzx  eax,al
    55d5:	89 44 24 70          	mov    DWORD PTR [rsp+0x70],eax
    55d9:	e9 3c f4 ff ff       	jmp    4a1a <main+0x171a>
    55de:	48 8d 78 01          	lea    rdi,[rax+0x1]
    55e2:	48 8b 44 24 30       	mov    rax,QWORD PTR [rsp+0x30]
    55e7:	48 8d 15 18 00 01 00 	lea    rdx,[rip+0x10018]        # 15606 <short_options+0x1736>
    55ee:	44 89 4c 24 70       	mov    DWORD PTR [rsp+0x70],r9d
    55f3:	48 8d 70 18          	lea    rsi,[rax+0x18]
    55f7:	e8 c4 19 00 00       	call   6fc0 <parse_field_count>
    55fc:	44 8b 4c 24 70       	mov    r9d,DWORD PTR [rsp+0x70]
    5601:	e9 3f ff ff ff       	jmp    5545 <main+0x2245>
    5606:	bf 02 00 00 00       	mov    edi,0x2
    560b:	e8 90 8a 00 00       	call   e0a0 <num_processors>
    5610:	ba 08 00 00 00       	mov    edx,0x8
    5615:	48 83 f8 08          	cmp    rax,0x8
    5619:	48 0f 46 d0          	cmovbe rdx,rax
    561d:	48 89 54 24 58       	mov    QWORD PTR [rsp+0x58],rdx
    5622:	e9 d3 f5 ff ff       	jmp    4bfa <main+0x18fa>
    5627:	bb 01 00 00 00       	mov    ebx,0x1
    562c:	e9 e6 f1 ff ff       	jmp    4817 <main+0x1517>
    5631:	4c 8b 6c 24 18       	mov    r13,QWORD PTR [rsp+0x18]
    5636:	e9 91 fc ff ff       	jmp    52cc <main+0x1fcc>
    563b:	c7 44 24 70 00 00 00 	mov    DWORD PTR [rsp+0x70],0x0
    5642:	00 
    5643:	e9 d2 f3 ff ff       	jmp    4a1a <main+0x171a>
    5648:	48 8b 74 24 10       	mov    rsi,QWORD PTR [rsp+0x10]
    564d:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
    5652:	48 89 94 24 70 01 00 	mov    QWORD PTR [rsp+0x170],rdx
    5659:	00 
    565a:	e8 91 1b 00 00       	call   71f0 <xfclose>
    565f:	e9 42 f9 ff ff       	jmp    4fa6 <main+0x1ca6>
    5664:	48 83 c2 01          	add    rdx,0x1
    5668:	e9 b7 eb ff ff       	jmp    4224 <main+0xf24>
    566d:	48 8b 74 24 30       	mov    rsi,QWORD PTR [rsp+0x30]
    5672:	31 d2                	xor    edx,edx
    5674:	48 89 c7             	mov    rdi,rax
    5677:	44 89 4c 24 78       	mov    DWORD PTR [rsp+0x78],r9d
    567c:	e8 ff 0a 00 00       	call   6180 <set_ordering>
    5681:	80 38 00             	cmp    BYTE PTR [rax],0x0
    5684:	44 8b 4c 24 78       	mov    r9d,DWORD PTR [rsp+0x78]
    5689:	0f 85 2b f4 ff ff    	jne    4aba <main+0x17ba>
    568f:	83 7c 24 70 00       	cmp    DWORD PTR [rsp+0x70],0x0
    5694:	0f 84 b3 00 00 00    	je     574d <main+0x244d>
    569a:	48 63 05 37 4b 21 00 	movsxd rax,DWORD PTR [rip+0x214b37]        # 21a1d8 <optind@@GLIBC_2.2.5>
    56a1:	48 8b 74 24 60       	mov    rsi,QWORD PTR [rsp+0x60]
    56a6:	44 89 4c 24 78       	mov    DWORD PTR [rsp+0x78],r9d
    56ab:	8d 50 01             	lea    edx,[rax+0x1]
    56ae:	48 8b 44 c5 00       	mov    rax,QWORD PTR [rbp+rax*8+0x0]
    56b3:	89 15 1f 4b 21 00    	mov    DWORD PTR [rip+0x214b1f],edx        # 21a1d8 <optind@@GLIBC_2.2.5>
    56b9:	48 8d 15 2d ff 00 00 	lea    rdx,[rip+0xff2d]        # 155ed <short_options+0x171d>
    56c0:	48 8d 78 01          	lea    rdi,[rax+0x1]
    56c4:	48 89 44 24 70       	mov    QWORD PTR [rsp+0x70],rax
    56c9:	e8 f2 18 00 00       	call   6fc0 <parse_field_count>
    56ce:	48 85 c0             	test   rax,rax
    56d1:	44 8b 4c 24 78       	mov    r9d,DWORD PTR [rsp+0x78]
    56d6:	0f 84 91 02 00 00    	je     596d <main+0x266d>
    56dc:	80 38 2e             	cmp    BYTE PTR [rax],0x2e
    56df:	75 23                	jne    5704 <main+0x2404>
    56e1:	48 8d 78 01          	lea    rdi,[rax+0x1]
    56e5:	48 8b 44 24 30       	mov    rax,QWORD PTR [rsp+0x30]
    56ea:	48 8d 15 15 ff 00 00 	lea    rdx,[rip+0xff15]        # 15606 <short_options+0x1736>
    56f1:	44 89 4c 24 78       	mov    DWORD PTR [rsp+0x78],r9d
    56f6:	48 8d 70 18          	lea    rsi,[rax+0x18]
    56fa:	e8 c1 18 00 00       	call   6fc0 <parse_field_count>
    56ff:	44 8b 4c 24 78       	mov    r9d,DWORD PTR [rsp+0x78]
    5704:	48 83 bc 24 c8 00 00 	cmp    QWORD PTR [rsp+0xc8],0x0
    570b:	00 00 
    570d:	75 19                	jne    5728 <main+0x2428>
    570f:	48 8b 94 24 c0 00 00 	mov    rdx,QWORD PTR [rsp+0xc0]
    5716:	00 
    5717:	48 85 d2             	test   rdx,rdx
    571a:	74 0c                	je     5728 <main+0x2428>
    571c:	48 83 ea 01          	sub    rdx,0x1
    5720:	48 89 94 24 c0 00 00 	mov    QWORD PTR [rsp+0xc0],rdx
    5727:	00 
    5728:	48 8b 74 24 30       	mov    rsi,QWORD PTR [rsp+0x30]
    572d:	ba 01 00 00 00       	mov    edx,0x1
    5732:	48 89 c7             	mov    rdi,rax
    5735:	44 89 4c 24 78       	mov    DWORD PTR [rsp+0x78],r9d
    573a:	e8 41 0a 00 00       	call   6180 <set_ordering>
    573f:	80 38 00             	cmp    BYTE PTR [rax],0x0
    5742:	44 8b 4c 24 78       	mov    r9d,DWORD PTR [rsp+0x78]
    5747:	0f 85 8f 01 00 00    	jne    58dc <main+0x25dc>
    574d:	48 8b 7c 24 30       	mov    rdi,QWORD PTR [rsp+0x30]
    5752:	be 48 00 00 00       	mov    esi,0x48
    5757:	44 89 4c 24 70       	mov    DWORD PTR [rsp+0x70],r9d
    575c:	c6 84 24 e9 00 00 00 	mov    BYTE PTR [rsp+0xe9],0x1
    5763:	01 
    5764:	e8 77 c8 00 00       	call   11fe0 <xmemdup>
    5769:	48 8b 15 c0 4c 21 00 	mov    rdx,QWORD PTR [rip+0x214cc0]        # 21a430 <keylist>
    5770:	44 8b 4c 24 70       	mov    r9d,DWORD PTR [rsp+0x70]
    5775:	48 8d 0d b4 4c 21 00 	lea    rcx,[rip+0x214cb4]        # 21a430 <keylist>
    577c:	48 85 d2             	test   rdx,rdx
    577f:	0f 84 ea f0 ff ff    	je     486f <main+0x156f>
    5785:	48 8d 4a 40          	lea    rcx,[rdx+0x40]
    5789:	48 8b 52 40          	mov    rdx,QWORD PTR [rdx+0x40]
    578d:	eb ed                	jmp    577c <main+0x247c>
    578f:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
    5792:	80 fa 25             	cmp    dl,0x25
    5795:	74 39                	je     57d0 <main+0x24d0>
    5797:	80 fa 62             	cmp    dl,0x62
    579a:	0f 84 cb eb ff ff    	je     436b <main+0x106b>
    57a0:	e9 31 f2 ff ff       	jmp    49d6 <main+0x16d6>
    57a5:	48 83 bc 24 b0 00 00 	cmp    QWORD PTR [rsp+0xb0],0x0
    57ac:	00 00 
    57ae:	0f 85 06 f3 ff ff    	jne    4aba <main+0x17ba>
    57b4:	48 83 bc 24 b8 00 00 	cmp    QWORD PTR [rsp+0xb8],0x0
    57bb:	00 00 
    57bd:	0f 85 f7 f2 ff ff    	jne    4aba <main+0x17ba>
    57c3:	48 89 8c 24 b0 00 00 	mov    QWORD PTR [rsp+0xb0],rcx
    57ca:	00 
    57cb:	e9 ea f2 ff ff       	jmp    4aba <main+0x17ba>
    57d0:	44 89 4c 24 70       	mov    DWORD PTR [rsp+0x70],r9d
    57d5:	e8 16 8a 00 00       	call   e1f0 <physmem_total>
    57da:	48 8b 84 24 50 01 00 	mov    rax,QWORD PTR [rsp+0x150]
    57e1:	00 
    57e2:	44 8b 4c 24 70       	mov    r9d,DWORD PTR [rsp+0x70]
    57e7:	48 85 c0             	test   rax,rax
    57ea:	78 6f                	js     585b <main+0x255b>
    57ec:	66 0f ef c9          	pxor   xmm1,xmm1
    57f0:	f2 48 0f 2a c8       	cvtsi2sd xmm1,rax
    57f5:	f2 0f 59 c1          	mulsd  xmm0,xmm1
    57f9:	f2 0f 10 0d d7 01 01 	movsd  xmm1,QWORD PTR [rip+0x101d7]        # 159d8 <short_options+0x1b08>
    5800:	00 
    5801:	f2 0f 5e 05 c7 01 01 	divsd  xmm0,QWORD PTR [rip+0x101c7]        # 159d0 <short_options+0x1b00>
    5808:	00 
    5809:	66 0f 2e c8          	ucomisd xmm1,xmm0
    580d:	0f 86 a8 fd ff ff    	jbe    55bb <main+0x22bb>
    5813:	f2 0f 10 0d c5 01 01 	movsd  xmm1,QWORD PTR [rip+0x101c5]        # 159e0 <short_options+0x1b10>
    581a:	00 
    581b:	66 0f 2e c1          	ucomisd xmm0,xmm1
    581f:	73 12                	jae    5833 <main+0x2533>
    5821:	f2 48 0f 2c c0       	cvttsd2si rax,xmm0
    5826:	48 89 84 24 50 01 00 	mov    QWORD PTR [rsp+0x150],rax
    582d:	00 
    582e:	e9 38 eb ff ff       	jmp    436b <main+0x106b>
    5833:	f2 0f 5c c1          	subsd  xmm0,xmm1
    5837:	f2 48 0f 2c c0       	cvttsd2si rax,xmm0
    583c:	48 89 84 24 50 01 00 	mov    QWORD PTR [rsp+0x150],rax
    5843:	00 
    5844:	48 b8 00 00 00 00 00 	movabs rax,0x8000000000000000
    584b:	00 00 80 
    584e:	48 31 84 24 50 01 00 	xor    QWORD PTR [rsp+0x150],rax
    5855:	00 
    5856:	e9 10 eb ff ff       	jmp    436b <main+0x106b>
    585b:	48 89 c2             	mov    rdx,rax
    585e:	66 0f ef c9          	pxor   xmm1,xmm1
    5862:	48 d1 ea             	shr    rdx,1
    5865:	83 e0 01             	and    eax,0x1
    5868:	48 09 c2             	or     rdx,rax
    586b:	f2 48 0f 2a ca       	cvtsi2sd xmm1,rdx
    5870:	f2 0f 58 c9          	addsd  xmm1,xmm1
    5874:	e9 7c ff ff ff       	jmp    57f5 <main+0x24f5>
    5879:	48 8d 78 01          	lea    rdi,[rax+0x1]
    587d:	48 8b 44 24 30       	mov    rax,QWORD PTR [rsp+0x30]
    5882:	31 d2                	xor    edx,edx
    5884:	44 89 4c 24 78       	mov    DWORD PTR [rsp+0x78],r9d
    5889:	48 8d 70 08          	lea    rsi,[rax+0x8]
    588d:	e8 2e 17 00 00       	call   6fc0 <parse_field_count>
    5892:	48 83 bc 24 b0 00 00 	cmp    QWORD PTR [rsp+0xb0],0x0
    5899:	00 00 
    589b:	44 8b 4c 24 78       	mov    r9d,DWORD PTR [rsp+0x78]
    58a0:	0f 85 0b f2 ff ff    	jne    4ab1 <main+0x17b1>
    58a6:	48 83 bc 24 b8 00 00 	cmp    QWORD PTR [rsp+0xb8],0x0
    58ad:	00 00 
    58af:	0f 85 fc f1 ff ff    	jne    4ab1 <main+0x17b1>
    58b5:	e9 eb f1 ff ff       	jmp    4aa5 <main+0x17a5>
    58ba:	48 8b 5d 00          	mov    rbx,QWORD PTR [rbp+0x0]
    58be:	48 8d 35 32 ff 00 00 	lea    rsi,[rip+0xff32]        # 157f7 <short_options+0x1927>
    58c5:	ba 05 00 00 00       	mov    edx,0x5
    58ca:	31 ff                	xor    edi,edi
    58cc:	e8 9f d3 ff ff       	call   2c70 <dcgettext@plt>
    58d1:	48 89 de             	mov    rsi,rbx
    58d4:	48 89 c7             	mov    rdi,rax
    58d7:	e8 44 0a 00 00       	call   6320 <sort_die>
    58dc:	48 8b 7c 24 70       	mov    rdi,QWORD PTR [rsp+0x70]
    58e1:	48 8d 35 37 fd 00 00 	lea    rsi,[rip+0xfd37]        # 1561f <short_options+0x174f>
    58e8:	e8 f3 d8 ff ff       	call   31e0 <badfieldspec>
    58ed:	48 8b 7c 24 28       	mov    rdi,QWORD PTR [rsp+0x28]
    58f2:	e8 d8 d9 ff ff       	call   32cf <xfopen.part.7>
    58f7:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
    58fc:	e8 ce d9 ff ff       	call   32cf <xfopen.part.7>
    5901:	48 8d 35 30 f8 00 00 	lea    rsi,[rip+0xf830]        # 15138 <short_options+0x1268>
    5908:	ba 05 00 00 00       	mov    edx,0x5
    590d:	31 ff                	xor    edi,edi
    590f:	e8 5c d3 ff ff       	call   2c70 <dcgettext@plt>
    5914:	31 f6                	xor    esi,esi
    5916:	48 89 c2             	mov    rdx,rax
    5919:	bf 02 00 00 00       	mov    edi,0x2
    591e:	31 c0                	xor    eax,eax
    5920:	e8 bb d6 ff ff       	call   2fe0 <error@plt>
    5925:	48 8d 35 94 f7 00 00 	lea    rsi,[rip+0xf794]        # 150c0 <short_options+0x11f0>
    592c:	ba 05 00 00 00       	mov    edx,0x5
    5931:	31 ff                	xor    edi,edi
    5933:	e8 38 d3 ff ff       	call   2c70 <dcgettext@plt>
    5938:	31 f6                	xor    esi,esi
    593a:	48 89 c2             	mov    rdx,rax
    593d:	bf 02 00 00 00       	mov    edi,0x2
    5942:	31 c0                	xor    eax,eax
    5944:	e8 97 d6 ff ff       	call   2fe0 <error@plt>
    5949:	48 8d 35 c8 f7 00 00 	lea    rsi,[rip+0xf7c8]        # 15118 <short_options+0x1248>
    5950:	ba 05 00 00 00       	mov    edx,0x5
    5955:	31 ff                	xor    edi,edi
    5957:	e8 14 d3 ff ff       	call   2c70 <dcgettext@plt>
    595c:	31 f6                	xor    esi,esi
    595e:	48 89 c2             	mov    rdx,rax
    5961:	bf 02 00 00 00       	mov    edi,0x2
    5966:	31 c0                	xor    eax,eax
    5968:	e8 73 d6 ff ff       	call   2fe0 <error@plt>
    596d:	48 8d 0d f0 e3 00 00 	lea    rcx,[rip+0xe3f0]        # 13d64 <__PRETTY_FUNCTION__.9508>
    5974:	48 8d 35 07 fb 00 00 	lea    rsi,[rip+0xfb07]        # 15482 <short_options+0x15b2>
    597b:	48 8d 3d d3 00 01 00 	lea    rdi,[rip+0x100d3]        # 15a55 <short_options+0x1b85>
    5982:	ba 12 11 00 00       	mov    edx,0x1112
    5987:	e8 e4 d3 ff ff       	call   2d70 <__assert_fail@plt>
    598c:	4c 89 df             	mov    rdi,r11
    598f:	e8 fc a9 00 00       	call   10390 <quote>
    5994:	48 89 c5             	mov    rbp,rax
    5997:	48 63 44 24 70       	movsxd rax,DWORD PTR [rsp+0x70]
    599c:	48 8d 15 3d 3c 21 00 	lea    rdx,[rip+0x213c3d]        # 2195e0 <long_options>
    59a3:	48 8d 35 25 fd 00 00 	lea    rsi,[rip+0xfd25]        # 156cf <short_options+0x17ff>
    59aa:	31 ff                	xor    edi,edi
    59ac:	48 c1 e0 05          	shl    rax,0x5
    59b0:	48 8b 1c 02          	mov    rbx,QWORD PTR [rdx+rax*1]
    59b4:	ba 05 00 00 00       	mov    edx,0x5
    59b9:	e8 b2 d2 ff ff       	call   2c70 <dcgettext@plt>
    59be:	49 89 e8             	mov    r8,rbp
    59c1:	48 89 c2             	mov    rdx,rax
    59c4:	31 f6                	xor    esi,esi
    59c6:	48 89 d9             	mov    rcx,rbx
    59c9:	31 ff                	xor    edi,edi
    59cb:	31 c0                	xor    eax,eax
    59cd:	e8 0e d6 ff ff       	call   2fe0 <error@plt>
    59d2:	48 8d 3d 0f fd 00 00 	lea    rdi,[rip+0xfd0f]        # 156e8 <short_options+0x1818>
    59d9:	e8 b2 a9 00 00       	call   10390 <quote>
    59de:	48 8d 35 05 fd 00 00 	lea    rsi,[rip+0xfd05]        # 156ea <short_options+0x181a>
    59e5:	48 89 c5             	mov    rbp,rax
    59e8:	ba 05 00 00 00       	mov    edx,0x5
    59ed:	31 ff                	xor    edi,edi
    59ef:	e8 7c d2 ff ff       	call   2c70 <dcgettext@plt>
    59f4:	49 89 e8             	mov    r8,rbp
    59f7:	48 89 c2             	mov    rdx,rax
    59fa:	48 89 d9             	mov    rcx,rbx
    59fd:	31 f6                	xor    esi,esi
    59ff:	bf 02 00 00 00       	mov    edi,0x2
    5a04:	31 c0                	xor    eax,eax
    5a06:	e8 d5 d5 ff ff       	call   2fe0 <error@plt>
    5a0b:	48 89 d7             	mov    rdi,rdx
    5a0e:	e8 7d a9 00 00       	call   10390 <quote>
    5a13:	48 8d 35 06 fd 00 00 	lea    rsi,[rip+0xfd06]        # 15720 <short_options+0x1850>
    5a1a:	48 89 c3             	mov    rbx,rax
    5a1d:	ba 05 00 00 00       	mov    edx,0x5
    5a22:	31 ff                	xor    edi,edi
    5a24:	e8 47 d2 ff ff       	call   2c70 <dcgettext@plt>
    5a29:	48 89 d9             	mov    rcx,rbx
    5a2c:	48 89 c2             	mov    rdx,rax
    5a2f:	31 f6                	xor    esi,esi
    5a31:	bf 02 00 00 00       	mov    edi,0x2
    5a36:	31 c0                	xor    eax,eax
    5a38:	e8 a3 d5 ff ff       	call   2fe0 <error@plt>
    5a3d:	48 8d 35 f3 fc 00 00 	lea    rsi,[rip+0xfcf3]        # 15737 <short_options+0x1867>
    5a44:	ba 05 00 00 00       	mov    edx,0x5
    5a49:	31 ff                	xor    edi,edi
    5a4b:	e8 20 d2 ff ff       	call   2c70 <dcgettext@plt>
    5a50:	31 f6                	xor    esi,esi
    5a52:	48 89 c2             	mov    rdx,rax
    5a55:	bf 02 00 00 00       	mov    edi,0x2
    5a5a:	31 c0                	xor    eax,eax
    5a5c:	e8 7f d5 ff ff       	call   2fe0 <error@plt>
    5a61:	31 ff                	xor    edi,edi
    5a63:	e8 58 4e 00 00       	call   a8c0 <usage>
    5a68:	48 8d 8c 24 b0 03 00 	lea    rcx,[rsp+0x3b0]
    5a6f:	00 
    5a70:	c6 47 37 00          	mov    BYTE PTR [rdi+0x37],0x0
    5a74:	c6 47 31 00          	mov    BYTE PTR [rdi+0x31],0x0
    5a78:	c6 47 30 00          	mov    BYTE PTR [rdi+0x30],0x0
    5a7c:	48 89 ce             	mov    rsi,rcx
    5a7f:	e8 4c 06 00 00       	call   60d0 <key_to_opts>
    5a84:	48 89 cf             	mov    rdi,rcx
    5a87:	e8 14 08 00 00       	call   62a0 <incompatible_options>
    5a8c:	49 8b 36             	mov    rsi,QWORD PTR [r14]
    5a8f:	bf 04 00 00 00       	mov    edi,0x4
    5a94:	e8 27 a6 00 00       	call   100c0 <quotearg_style>
    5a99:	48 8d 35 c2 fc 00 00 	lea    rsi,[rip+0xfcc2]        # 15762 <short_options+0x1892>
    5aa0:	48 89 c3             	mov    rbx,rax
    5aa3:	ba 05 00 00 00       	mov    edx,0x5
    5aa8:	31 ff                	xor    edi,edi
    5aaa:	e8 c1 d1 ff ff       	call   2c70 <dcgettext@plt>
    5aaf:	48 89 d9             	mov    rcx,rbx
    5ab2:	48 89 c2             	mov    rdx,rax
    5ab5:	31 f6                	xor    esi,esi
    5ab7:	31 ff                	xor    edi,edi
    5ab9:	31 c0                	xor    eax,eax
    5abb:	e8 20 d5 ff ff       	call   2fe0 <error@plt>
    5ac0:	48 8d 35 c1 f6 00 00 	lea    rsi,[rip+0xf6c1]        # 15188 <short_options+0x12b8>
    5ac7:	ba 05 00 00 00       	mov    edx,0x5
    5acc:	31 ff                	xor    edi,edi
    5ace:	e8 9d d1 ff ff       	call   2c70 <dcgettext@plt>
    5ad3:	48 8b 3d 26 47 21 00 	mov    rdi,QWORD PTR [rip+0x214726]        # 21a200 <stderr@@GLIBC_2.2.5>
    5ada:	48 8d 15 1e 06 01 00 	lea    rdx,[rip+0x1061e]        # 160ff <quoting_style_vals+0x5f>
    5ae1:	48 89 c1             	mov    rcx,rax
    5ae4:	be 01 00 00 00       	mov    esi,0x1
    5ae9:	31 c0                	xor    eax,eax
    5aeb:	e8 10 d6 ff ff       	call   3100 <__fprintf_chk@plt>
    5af0:	bf 02 00 00 00       	mov    edi,0x2
    5af5:	e8 c6 4d 00 00       	call   a8c0 <usage>
    5afa:	e8 31 c5 00 00       	call   12030 <xalloc_die>
    5aff:	be 01 00 00 00       	mov    esi,0x1
    5b04:	e9 5d dc ff ff       	jmp    3766 <main+0x466>
    5b09:	48 8d 35 a9 f9 00 00 	lea    rsi,[rip+0xf9a9]        # 154b9 <short_options+0x15e9>
    5b10:	ba 05 00 00 00       	mov    edx,0x5
    5b15:	31 ff                	xor    edi,edi
    5b17:	e8 54 d1 ff ff       	call   2c70 <dcgettext@plt>
    5b1c:	48 8b 74 24 40       	mov    rsi,QWORD PTR [rsp+0x40]
    5b21:	48 89 c7             	mov    rdi,rax
    5b24:	e8 f7 07 00 00       	call   6320 <sort_die>
    5b29:	48 8d 35 e3 fb 00 00 	lea    rsi,[rip+0xfbe3]        # 15713 <short_options+0x1843>
    5b30:	ba 05 00 00 00       	mov    edx,0x5
    5b35:	31 ff                	xor    edi,edi
    5b37:	e8 34 d1 ff ff       	call   2c70 <dcgettext@plt>
    5b3c:	31 f6                	xor    esi,esi
    5b3e:	48 89 c2             	mov    rdx,rax
    5b41:	bf 02 00 00 00       	mov    edi,0x2
    5b46:	31 c0                	xor    eax,eax
    5b48:	e8 93 d4 ff ff       	call   2fe0 <error@plt>
    5b4d:	bf 04 00 00 00       	mov    edi,0x4
    5b52:	e8 69 a5 00 00       	call   100c0 <quotearg_style>
    5b57:	48 8d 35 62 f6 00 00 	lea    rsi,[rip+0xf662]        # 151c0 <short_options+0x12f0>
    5b5e:	48 89 c3             	mov    rbx,rax
    5b61:	ba 05 00 00 00       	mov    edx,0x5
    5b66:	31 ff                	xor    edi,edi
    5b68:	e8 03 d1 ff ff       	call   2c70 <dcgettext@plt>
    5b6d:	48 89 d9             	mov    rcx,rbx
    5b70:	48 89 c2             	mov    rdx,rax
    5b73:	31 f6                	xor    esi,esi
    5b75:	bf 02 00 00 00       	mov    edi,0x2
    5b7a:	31 c0                	xor    eax,eax
    5b7c:	e8 5f d4 ff ff       	call   2fe0 <error@plt>
    5b81:	48 8b 74 24 18       	mov    rsi,QWORD PTR [rsp+0x18]
    5b86:	bf 04 00 00 00       	mov    edi,0x4
    5b8b:	e8 30 a5 00 00       	call   100c0 <quotearg_style>
    5b90:	48 8d 35 dc fb 00 00 	lea    rsi,[rip+0xfbdc]        # 15773 <short_options+0x18a3>
    5b97:	48 89 c3             	mov    rbx,rax
    5b9a:	ba 05 00 00 00       	mov    edx,0x5
    5b9f:	31 ff                	xor    edi,edi
    5ba1:	e8 ca d0 ff ff       	call   2c70 <dcgettext@plt>
    5ba6:	48 89 d9             	mov    rcx,rbx
    5ba9:	48 89 c2             	mov    rdx,rax
    5bac:	31 f6                	xor    esi,esi
    5bae:	bf 02 00 00 00       	mov    edi,0x2
    5bb3:	31 c0                	xor    eax,eax
    5bb5:	e8 26 d4 ff ff       	call   2fe0 <error@plt>
    5bba:	48 89 d6             	mov    rsi,rdx
    5bbd:	bf 04 00 00 00       	mov    edi,0x4
    5bc2:	e8 f9 a4 00 00       	call   100c0 <quotearg_style>
    5bc7:	48 8d 35 12 f6 00 00 	lea    rsi,[rip+0xf612]        # 151e0 <short_options+0x1310>
    5bce:	48 89 c3             	mov    rbx,rax
    5bd1:	ba 05 00 00 00       	mov    edx,0x5
    5bd6:	31 ff                	xor    edi,edi
    5bd8:	e8 93 d0 ff ff       	call   2c70 <dcgettext@plt>
    5bdd:	48 89 d9             	mov    rcx,rbx
    5be0:	48 89 c2             	mov    rdx,rax
    5be3:	31 f6                	xor    esi,esi
    5be5:	bf 02 00 00 00       	mov    edi,0x2
    5bea:	31 c0                	xor    eax,eax
    5bec:	e8 ef d3 ff ff       	call   2fe0 <error@plt>
    5bf1:	48 8b 54 24 18       	mov    rdx,QWORD PTR [rsp+0x18]
    5bf6:	be 03 00 00 00       	mov    esi,0x3
    5bfb:	31 ff                	xor    edi,edi
    5bfd:	e8 be a5 00 00       	call   101c0 <quotearg_n_style_colon>
    5c02:	48 8d 35 17 f6 00 00 	lea    rsi,[rip+0xf617]        # 15220 <short_options+0x1350>
    5c09:	48 89 c3             	mov    rbx,rax
    5c0c:	ba 05 00 00 00       	mov    edx,0x5
    5c11:	31 ff                	xor    edi,edi
    5c13:	e8 58 d0 ff ff       	call   2c70 <dcgettext@plt>
    5c18:	4d 89 f8             	mov    r8,r15
    5c1b:	48 89 c2             	mov    rdx,rax
    5c1e:	48 89 d9             	mov    rcx,rbx
    5c21:	31 f6                	xor    esi,esi
    5c23:	bf 02 00 00 00       	mov    edi,0x2
    5c28:	31 c0                	xor    eax,eax
    5c2a:	e8 b1 d3 ff ff       	call   2fe0 <error@plt>
    5c2f:	4c 8b 74 24 68       	mov    r14,QWORD PTR [rsp+0x68]
    5c34:	ba 05 00 00 00       	mov    edx,0x5
    5c39:	48 8d 35 c3 fb 00 00 	lea    rsi,[rip+0xfbc3]        # 15803 <short_options+0x1933>
    5c40:	4b 8b 1c ee          	mov    rbx,QWORD PTR [r14+r13*8]
    5c44:	e9 81 fc ff ff       	jmp    58ca <main+0x25ca>
    5c49:	48 8d 35 4f f8 00 00 	lea    rsi,[rip+0xf84f]        # 1549f <short_options+0x15cf>
    5c50:	31 ff                	xor    edi,edi
    5c52:	ba 05 00 00 00       	mov    edx,0x5
    5c57:	e8 14 d0 ff ff       	call   2c70 <dcgettext@plt>
    5c5c:	48 8b 74 24 28       	mov    rsi,QWORD PTR [rsp+0x28]
    5c61:	48 89 c7             	mov    rdi,rax
    5c64:	e8 b7 06 00 00       	call   6320 <sort_die>
    5c69:	b9 01 00 00 00       	mov    ecx,0x1
    5c6e:	e9 a2 f6 ff ff       	jmp    5315 <main+0x2015>
    5c73:	8b 74 24 78          	mov    esi,DWORD PTR [rsp+0x78]
    5c77:	48 8d 0d 62 39 21 00 	lea    rcx,[rip+0x213962]        # 2195e0 <long_options>
    5c7e:	4d 89 d0             	mov    r8,r10
    5c81:	ba 87 ff ff ff       	mov    edx,0xffffff87
    5c86:	89 c7                	mov    edi,eax
    5c88:	e8 e3 c9 00 00       	call   12670 <xstrtol_fatal>
    5c8d:	48 8d 3d b8 f9 00 00 	lea    rdi,[rip+0xf9b8]        # 1564c <short_options+0x177c>
    5c94:	e8 07 06 00 00       	call   62a0 <incompatible_options>
    5c99:	45 84 e4             	test   r12b,r12b
    5c9c:	75 06                	jne    5ca4 <main+0x29a4>
    5c9e:	41 bc 6f 00 00 00    	mov    r12d,0x6f
    5ca4:	48 8d 3d 6d 43 21 00 	lea    rdi,[rip+0x21436d]        # 21a018 <opts.9581>
    5cab:	44 88 25 66 43 21 00 	mov    BYTE PTR [rip+0x214366],r12b        # 21a018 <opts.9581>
    5cb2:	e8 e9 05 00 00       	call   62a0 <incompatible_options>
    5cb7:	49 8b 76 08          	mov    rsi,QWORD PTR [r14+0x8]
    5cbb:	bf 04 00 00 00       	mov    edi,0x4
    5cc0:	e8 fb a3 00 00       	call   100c0 <quotearg_style>
    5cc5:	48 8d 35 c4 f6 00 00 	lea    rsi,[rip+0xf6c4]        # 15390 <short_options+0x14c0>
    5ccc:	48 89 c3             	mov    rbx,rax
    5ccf:	ba 05 00 00 00       	mov    edx,0x5
    5cd4:	31 ff                	xor    edi,edi
    5cd6:	e8 95 cf ff ff       	call   2c70 <dcgettext@plt>
    5cdb:	45 0f be c4          	movsx  r8d,r12b
    5cdf:	48 89 c2             	mov    rdx,rax
    5ce2:	48 89 d9             	mov    rcx,rbx
    5ce5:	31 f6                	xor    esi,esi
    5ce7:	bf 02 00 00 00       	mov    edi,0x2
    5cec:	31 c0                	xor    eax,eax
    5cee:	e8 ed d2 ff ff       	call   2fe0 <error@plt>
    5cf3:	48 8d 3d 16 43 21 00 	lea    rdi,[rip+0x214316]        # 21a010 <opts.9585>
    5cfa:	44 88 25 0f 43 21 00 	mov    BYTE PTR [rip+0x21430f],r12b        # 21a010 <opts.9585>
    5d01:	e8 9a 05 00 00       	call   62a0 <incompatible_options>
    5d06:	48 8b 7c 24 18       	mov    rdi,QWORD PTR [rsp+0x18]
    5d0b:	e8 bf d5 ff ff       	call   32cf <xfopen.part.7>
    5d10:	4c 89 ef             	mov    rdi,r13
    5d13:	e8 b7 d5 ff ff       	call   32cf <xfopen.part.7>
    5d18:	48 8b 3d c1 44 21 00 	mov    rdi,QWORD PTR [rip+0x2144c1]        # 21a1e0 <optarg@@GLIBC_2.2.5>
    5d1f:	48 8d 35 f9 f8 00 00 	lea    rsi,[rip+0xf8f9]        # 1561f <short_options+0x174f>
    5d26:	e8 b5 d4 ff ff       	call   31e0 <badfieldspec>
    5d2b:	48 8b 3d ae 44 21 00 	mov    rdi,QWORD PTR [rip+0x2144ae]        # 21a1e0 <optarg@@GLIBC_2.2.5>
    5d32:	48 8d 35 34 f9 00 00 	lea    rsi,[rip+0xf934]        # 1566d <short_options+0x179d>
    5d39:	e8 a2 d4 ff ff       	call   31e0 <badfieldspec>
    5d3e:	e8 5d cf ff ff       	call   2ca0 <__stack_chk_fail@plt>
    5d43:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    5d4a:	00 00 00 
    5d4d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000005d50 <_start>:
    5d50:	31 ed                	xor    ebp,ebp
    5d52:	49 89 d1             	mov    r9,rdx
    5d55:	5e                   	pop    rsi
    5d56:	48 89 e2             	mov    rdx,rsp
    5d59:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    5d5d:	50                   	push   rax
    5d5e:	54                   	push   rsp
    5d5f:	4c 8d 05 ca da 00 00 	lea    r8,[rip+0xdaca]        # 13830 <__libc_csu_fini>
    5d66:	48 8d 0d 53 da 00 00 	lea    rcx,[rip+0xda53]        # 137c0 <__libc_csu_init>
    5d6d:	48 8d 3d 8c d5 ff ff 	lea    rdi,[rip+0xffffffffffffd58c]        # 3300 <main>
    5d74:	ff 15 4e 42 21 00    	call   QWORD PTR [rip+0x21424e]        # 219fc8 <__libc_start_main@GLIBC_2.2.5>
    5d7a:	f4                   	hlt    
    5d7b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005d80 <deregister_tm_clones>:
    5d80:	48 8d 3d 21 44 21 00 	lea    rdi,[rip+0x214421]        # 21a1a8 <__TMC_END__>
    5d87:	55                   	push   rbp
    5d88:	48 8d 05 19 44 21 00 	lea    rax,[rip+0x214419]        # 21a1a8 <__TMC_END__>
    5d8f:	48 39 f8             	cmp    rax,rdi
    5d92:	48 89 e5             	mov    rbp,rsp
    5d95:	74 19                	je     5db0 <deregister_tm_clones+0x30>
    5d97:	48 8b 05 22 42 21 00 	mov    rax,QWORD PTR [rip+0x214222]        # 219fc0 <_ITM_deregisterTMCloneTable>
    5d9e:	48 85 c0             	test   rax,rax
    5da1:	74 0d                	je     5db0 <deregister_tm_clones+0x30>
    5da3:	5d                   	pop    rbp
    5da4:	ff e0                	jmp    rax
    5da6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    5dad:	00 00 00 
    5db0:	5d                   	pop    rbp
    5db1:	c3                   	ret    
    5db2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    5db6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    5dbd:	00 00 00 

0000000000005dc0 <register_tm_clones>:
    5dc0:	48 8d 3d e1 43 21 00 	lea    rdi,[rip+0x2143e1]        # 21a1a8 <__TMC_END__>
    5dc7:	48 8d 35 da 43 21 00 	lea    rsi,[rip+0x2143da]        # 21a1a8 <__TMC_END__>
    5dce:	55                   	push   rbp
    5dcf:	48 29 fe             	sub    rsi,rdi
    5dd2:	48 89 e5             	mov    rbp,rsp
    5dd5:	48 c1 fe 03          	sar    rsi,0x3
    5dd9:	48 89 f0             	mov    rax,rsi
    5ddc:	48 c1 e8 3f          	shr    rax,0x3f
    5de0:	48 01 c6             	add    rsi,rax
    5de3:	48 d1 fe             	sar    rsi,1
    5de6:	74 18                	je     5e00 <register_tm_clones+0x40>
    5de8:	48 8b 05 f1 41 21 00 	mov    rax,QWORD PTR [rip+0x2141f1]        # 219fe0 <_ITM_registerTMCloneTable>
    5def:	48 85 c0             	test   rax,rax
    5df2:	74 0c                	je     5e00 <register_tm_clones+0x40>
    5df4:	5d                   	pop    rbp
    5df5:	ff e0                	jmp    rax
    5df7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    5dfe:	00 00 
    5e00:	5d                   	pop    rbp
    5e01:	c3                   	ret    
    5e02:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    5e06:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    5e0d:	00 00 00 

0000000000005e10 <__do_global_dtors_aux>:
    5e10:	80 3d f1 43 21 00 00 	cmp    BYTE PTR [rip+0x2143f1],0x0        # 21a208 <completed.7697>
    5e17:	75 2f                	jne    5e48 <__do_global_dtors_aux+0x38>
    5e19:	48 83 3d c7 41 21 00 	cmp    QWORD PTR [rip+0x2141c7],0x0        # 219fe8 <__cxa_finalize@GLIBC_2.2.5>
    5e20:	00 
    5e21:	55                   	push   rbp
    5e22:	48 89 e5             	mov    rbp,rsp
    5e25:	74 0c                	je     5e33 <__do_global_dtors_aux+0x23>
    5e27:	48 8b 3d da 41 21 00 	mov    rdi,QWORD PTR [rip+0x2141da]        # 21a008 <__dso_handle>
    5e2e:	e8 9d d3 ff ff       	call   31d0 <__cxa_finalize@plt>
    5e33:	e8 48 ff ff ff       	call   5d80 <deregister_tm_clones>
    5e38:	c6 05 c9 43 21 00 01 	mov    BYTE PTR [rip+0x2143c9],0x1        # 21a208 <completed.7697>
    5e3f:	5d                   	pop    rbp
    5e40:	c3                   	ret    
    5e41:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    5e48:	f3 c3                	repz ret 
    5e4a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000005e50 <frame_dummy>:
    5e50:	55                   	push   rbp
    5e51:	48 89 e5             	mov    rbp,rsp
    5e54:	5d                   	pop    rbp
    5e55:	e9 66 ff ff ff       	jmp    5dc0 <register_tm_clones>
    5e5a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000005e60 <proctab_hasher>:
    5e60:	48 63 47 08          	movsxd rax,DWORD PTR [rdi+0x8]
    5e64:	31 d2                	xor    edx,edx
    5e66:	48 f7 f6             	div    rsi
    5e69:	48 89 d0             	mov    rax,rdx
    5e6c:	c3                   	ret    
    5e6d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000005e70 <proctab_comparator>:
    5e70:	8b 46 08             	mov    eax,DWORD PTR [rsi+0x8]
    5e73:	39 47 08             	cmp    DWORD PTR [rdi+0x8],eax
    5e76:	0f 94 c0             	sete   al
    5e79:	c3                   	ret    
    5e7a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000005e80 <traverse_raw_number>:
    5e80:	48 8b 0f             	mov    rcx,QWORD PTR [rdi]
    5e83:	44 8b 1d fa 49 21 00 	mov    r11d,DWORD PTR [rip+0x2149fa]        # 21a884 <thousands_sep>
    5e8a:	45 31 d2             	xor    r10d,r10d
    5e8d:	31 c0                	xor    eax,eax
    5e8f:	0f b6 11             	movzx  edx,BYTE PTR [rcx]
    5e92:	eb 2a                	jmp    5ebe <traverse_raw_number+0x3e>
    5e94:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    5e98:	44 0f be 41 01       	movsx  r8d,BYTE PTR [rcx+0x1]
    5e9d:	38 d0                	cmp    al,dl
    5e9f:	0f 42 c2             	cmovb  eax,edx
    5ea2:	45 31 d2             	xor    r10d,r10d
    5ea5:	45 39 d8             	cmp    r8d,r11d
    5ea8:	44 89 c2             	mov    edx,r8d
    5eab:	75 0e                	jne    5ebb <traverse_raw_number+0x3b>
    5ead:	0f b6 51 02          	movzx  edx,BYTE PTR [rcx+0x2]
    5eb1:	48 8d 71 02          	lea    rsi,[rcx+0x2]
    5eb5:	41 ba 01 00 00 00    	mov    r10d,0x1
    5ebb:	48 89 f1             	mov    rcx,rsi
    5ebe:	44 0f b6 c2          	movzx  r8d,dl
    5ec2:	48 8d 71 01          	lea    rsi,[rcx+0x1]
    5ec6:	45 8d 48 d0          	lea    r9d,[r8-0x30]
    5eca:	41 83 f9 09          	cmp    r9d,0x9
    5ece:	76 c8                	jbe    5e98 <traverse_raw_number+0x18>
    5ed0:	45 84 d2             	test   r10b,r10b
    5ed3:	75 1b                	jne    5ef0 <traverse_raw_number+0x70>
    5ed5:	44 3b 05 ac 49 21 00 	cmp    r8d,DWORD PTR [rip+0x2149ac]        # 21a888 <decimal_point>
    5edc:	74 22                	je     5f00 <traverse_raw_number+0x80>
    5ede:	48 83 ee 01          	sub    rsi,0x1
    5ee2:	48 89 37             	mov    QWORD PTR [rdi],rsi
    5ee5:	c3                   	ret    
    5ee6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    5eed:	00 00 00 
    5ef0:	48 83 e9 01          	sub    rcx,0x1
    5ef4:	48 89 0f             	mov    QWORD PTR [rdi],rcx
    5ef7:	c3                   	ret    
    5ef8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    5eff:	00 
    5f00:	48 8d 71 02          	lea    rsi,[rcx+0x2]
    5f04:	0f b6 49 01          	movzx  ecx,BYTE PTR [rcx+0x1]
    5f08:	89 ca                	mov    edx,ecx
    5f0a:	83 e9 30             	sub    ecx,0x30
    5f0d:	83 f9 09             	cmp    ecx,0x9
    5f10:	77 cc                	ja     5ede <traverse_raw_number+0x5e>
    5f12:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    5f18:	38 d0                	cmp    al,dl
    5f1a:	0f 42 c2             	cmovb  eax,edx
    5f1d:	48 83 c6 01          	add    rsi,0x1
    5f21:	0f b6 4e ff          	movzx  ecx,BYTE PTR [rsi-0x1]
    5f25:	89 ca                	mov    edx,ecx
    5f27:	83 e9 30             	sub    ecx,0x30
    5f2a:	83 f9 09             	cmp    ecx,0x9
    5f2d:	76 e9                	jbe    5f18 <traverse_raw_number+0x98>
    5f2f:	48 83 ee 01          	sub    rsi,0x1
    5f33:	48 89 37             	mov    QWORD PTR [rdi],rsi
    5f36:	c3                   	ret    
    5f37:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    5f3e:	00 00 

0000000000005f40 <find_unit_order>:
    5f40:	53                   	push   rbx
    5f41:	48 83 ec 10          	sub    rsp,0x10
    5f45:	0f b6 1f             	movzx  ebx,BYTE PTR [rdi]
    5f48:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5f4f:	00 00 
    5f51:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    5f56:	31 c0                	xor    eax,eax
    5f58:	31 c0                	xor    eax,eax
    5f5a:	80 fb 2d             	cmp    bl,0x2d
    5f5d:	0f 94 c0             	sete   al
    5f60:	48 01 c7             	add    rdi,rax
    5f63:	48 89 3c 24          	mov    QWORD PTR [rsp],rdi
    5f67:	48 89 e7             	mov    rdi,rsp
    5f6a:	e8 11 ff ff ff       	call   5e80 <traverse_raw_number>
    5f6f:	31 d2                	xor    edx,edx
    5f71:	3c 30                	cmp    al,0x30
    5f73:	76 1c                	jbe    5f91 <find_unit_order+0x51>
    5f75:	48 8b 04 24          	mov    rax,QWORD PTR [rsp]
    5f79:	48 8d 15 40 de 00 00 	lea    rdx,[rip+0xde40]        # 13dc0 <unit_order>
    5f80:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5f83:	0f be 14 02          	movsx  edx,BYTE PTR [rdx+rax*1]
    5f87:	89 d0                	mov    eax,edx
    5f89:	f7 d8                	neg    eax
    5f8b:	80 fb 2d             	cmp    bl,0x2d
    5f8e:	0f 44 d0             	cmove  edx,eax
    5f91:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
    5f96:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    5f9d:	00 00 
    5f9f:	89 d0                	mov    eax,edx
    5fa1:	75 06                	jne    5fa9 <find_unit_order+0x69>
    5fa3:	48 83 c4 10          	add    rsp,0x10
    5fa7:	5b                   	pop    rbx
    5fa8:	c3                   	ret    
    5fa9:	e8 f2 cc ff ff       	call   2ca0 <__stack_chk_fail@plt>
    5fae:	66 90                	xchg   ax,ax

0000000000005fb0 <getmonth>:
    5fb0:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
    5fb3:	48 8d 15 a6 47 21 00 	lea    rdx,[rip+0x2147a6]        # 21a760 <blanks>
    5fba:	55                   	push   rbp
    5fbb:	53                   	push   rbx
    5fbc:	80 3c 02 00          	cmp    BYTE PTR [rdx+rax*1],0x0
    5fc0:	74 13                	je     5fd5 <getmonth+0x25>
    5fc2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    5fc8:	48 83 c7 01          	add    rdi,0x1
    5fcc:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
    5fcf:	80 3c 02 00          	cmp    BYTE PTR [rdx+rax*1],0x0
    5fd3:	75 f3                	jne    5fc8 <getmonth+0x18>
    5fd5:	48 8d 2d 84 40 21 00 	lea    rbp,[rip+0x214084]        # 21a060 <monthtab>
    5fdc:	4c 8d 0d 7d 44 21 00 	lea    r9,[rip+0x21447d]        # 21a460 <fold_toupper>
    5fe3:	41 bb 0c 00 00 00    	mov    r11d,0xc
    5fe9:	31 db                	xor    ebx,ebx
    5feb:	4e 8d 14 1b          	lea    r10,[rbx+r11*1]
    5fef:	49 d1 ea             	shr    r10,1
    5ff2:	4c 89 d0             	mov    rax,r10
    5ff5:	48 c1 e0 04          	shl    rax,0x4
    5ff9:	48 8b 44 05 00       	mov    rax,QWORD PTR [rbp+rax*1+0x0]
    5ffe:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    6001:	84 d2                	test   dl,dl
    6003:	74 61                	je     6066 <getmonth+0xb6>
    6005:	0f b6 0f             	movzx  ecx,BYTE PTR [rdi]
    6008:	41 38 14 09          	cmp    BYTE PTR [r9+rcx*1],dl
    600c:	72 42                	jb     6050 <getmonth+0xa0>
    600e:	77 50                	ja     6060 <getmonth+0xb0>
    6010:	48 89 fa             	mov    rdx,rdi
    6013:	eb 0f                	jmp    6024 <getmonth+0x74>
    6015:	0f 1f 00             	nop    DWORD PTR [rax]
    6018:	44 0f b6 02          	movzx  r8d,BYTE PTR [rdx]
    601c:	43 38 0c 01          	cmp    BYTE PTR [r9+r8*1],cl
    6020:	72 2e                	jb     6050 <getmonth+0xa0>
    6022:	77 3c                	ja     6060 <getmonth+0xb0>
    6024:	48 83 c0 01          	add    rax,0x1
    6028:	0f b6 08             	movzx  ecx,BYTE PTR [rax]
    602b:	48 83 c2 01          	add    rdx,0x1
    602f:	84 c9                	test   cl,cl
    6031:	75 e5                	jne    6018 <getmonth+0x68>
    6033:	48 85 f6             	test   rsi,rsi
    6036:	74 03                	je     603b <getmonth+0x8b>
    6038:	48 89 16             	mov    QWORD PTR [rsi],rdx
    603b:	49 c1 e2 04          	shl    r10,0x4
    603f:	42 8b 44 15 08       	mov    eax,DWORD PTR [rbp+r10*1+0x8]
    6044:	5b                   	pop    rbx
    6045:	5d                   	pop    rbp
    6046:	c3                   	ret    
    6047:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    604e:	00 00 
    6050:	4d 89 d3             	mov    r11,r10
    6053:	4c 39 db             	cmp    rbx,r11
    6056:	72 93                	jb     5feb <getmonth+0x3b>
    6058:	31 c0                	xor    eax,eax
    605a:	5b                   	pop    rbx
    605b:	5d                   	pop    rbp
    605c:	c3                   	ret    
    605d:	0f 1f 00             	nop    DWORD PTR [rax]
    6060:	49 8d 5a 01          	lea    rbx,[r10+0x1]
    6064:	eb ed                	jmp    6053 <getmonth+0xa3>
    6066:	48 89 fa             	mov    rdx,rdi
    6069:	eb c8                	jmp    6033 <getmonth+0x83>
    606b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000006070 <default_key_compare>:
    6070:	31 c0                	xor    eax,eax
    6072:	48 83 7f 20 00       	cmp    QWORD PTR [rdi+0x20],0x0
    6077:	74 07                	je     6080 <default_key_compare+0x10>
    6079:	f3 c3                	repz ret 
    607b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    6080:	48 83 7f 28 00       	cmp    QWORD PTR [rdi+0x28],0x0
    6085:	75 f2                	jne    6079 <default_key_compare+0x9>
    6087:	0f b6 47 30          	movzx  eax,BYTE PTR [rdi+0x30]
    608b:	84 c0                	test   al,al
    608d:	75 31                	jne    60c0 <default_key_compare+0x50>
    608f:	80 7f 31 00          	cmp    BYTE PTR [rdi+0x31],0x0
    6093:	75 e4                	jne    6079 <default_key_compare+0x9>
    6095:	48 ba 00 00 ff 00 ff 	movabs rdx,0xffff00ff0000
    609c:	ff 00 00 
    609f:	48 85 57 30          	test   QWORD PTR [rdi+0x30],rdx
    60a3:	75 d4                	jne    6079 <default_key_compare+0x9>
    60a5:	0f b6 47 36          	movzx  eax,BYTE PTR [rdi+0x36]
    60a9:	84 c0                	test   al,al
    60ab:	75 13                	jne    60c0 <default_key_compare+0x50>
    60ad:	80 7f 38 00          	cmp    BYTE PTR [rdi+0x38],0x0
    60b1:	75 c6                	jne    6079 <default_key_compare+0x9>
    60b3:	0f b6 47 33          	movzx  eax,BYTE PTR [rdi+0x33]
    60b7:	83 f0 01             	xor    eax,0x1
    60ba:	c3                   	ret    
    60bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    60c0:	31 c0                	xor    eax,eax
    60c2:	c3                   	ret    
    60c3:	0f 1f 00             	nop    DWORD PTR [rax]
    60c6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    60cd:	00 00 00 

00000000000060d0 <key_to_opts>:
    60d0:	66 83 7f 30 00       	cmp    WORD PTR [rdi+0x30],0x0
    60d5:	74 07                	je     60de <key_to_opts+0xe>
    60d7:	c6 06 62             	mov    BYTE PTR [rsi],0x62
    60da:	48 83 c6 01          	add    rsi,0x1
    60de:	48 8d 05 7b 44 21 00 	lea    rax,[rip+0x21447b]        # 21a560 <nondictionary>
    60e5:	48 39 47 20          	cmp    QWORD PTR [rdi+0x20],rax
    60e9:	74 7d                	je     6168 <key_to_opts+0x98>
    60eb:	48 83 7f 28 00       	cmp    QWORD PTR [rdi+0x28],0x0
    60f0:	48 89 f0             	mov    rax,rsi
    60f3:	74 07                	je     60fc <key_to_opts+0x2c>
    60f5:	48 83 c0 01          	add    rax,0x1
    60f9:	c6 06 66             	mov    BYTE PTR [rsi],0x66
    60fc:	80 7f 34 00          	cmp    BYTE PTR [rdi+0x34],0x0
    6100:	74 07                	je     6109 <key_to_opts+0x39>
    6102:	c6 00 67             	mov    BYTE PTR [rax],0x67
    6105:	48 83 c0 01          	add    rax,0x1
    6109:	80 7f 35 00          	cmp    BYTE PTR [rdi+0x35],0x0
    610d:	74 07                	je     6116 <key_to_opts+0x46>
    610f:	c6 00 68             	mov    BYTE PTR [rax],0x68
    6112:	48 83 c0 01          	add    rax,0x1
    6116:	48 8d 15 43 45 21 00 	lea    rdx,[rip+0x214543]        # 21a660 <nonprinting>
    611d:	48 39 57 20          	cmp    QWORD PTR [rdi+0x20],rdx
    6121:	74 51                	je     6174 <key_to_opts+0xa4>
    6123:	80 7f 36 00          	cmp    BYTE PTR [rdi+0x36],0x0
    6127:	74 07                	je     6130 <key_to_opts+0x60>
    6129:	c6 00 4d             	mov    BYTE PTR [rax],0x4d
    612c:	48 83 c0 01          	add    rax,0x1
    6130:	80 7f 32 00          	cmp    BYTE PTR [rdi+0x32],0x0
    6134:	74 07                	je     613d <key_to_opts+0x6d>
    6136:	c6 00 6e             	mov    BYTE PTR [rax],0x6e
    6139:	48 83 c0 01          	add    rax,0x1
    613d:	80 7f 33 00          	cmp    BYTE PTR [rdi+0x33],0x0
    6141:	74 07                	je     614a <key_to_opts+0x7a>
    6143:	c6 00 52             	mov    BYTE PTR [rax],0x52
    6146:	48 83 c0 01          	add    rax,0x1
    614a:	80 7f 37 00          	cmp    BYTE PTR [rdi+0x37],0x0
    614e:	74 07                	je     6157 <key_to_opts+0x87>
    6150:	c6 00 72             	mov    BYTE PTR [rax],0x72
    6153:	48 83 c0 01          	add    rax,0x1
    6157:	80 7f 38 00          	cmp    BYTE PTR [rdi+0x38],0x0
    615b:	74 07                	je     6164 <key_to_opts+0x94>
    615d:	c6 00 56             	mov    BYTE PTR [rax],0x56
    6160:	48 83 c0 01          	add    rax,0x1
    6164:	c6 00 00             	mov    BYTE PTR [rax],0x0
    6167:	c3                   	ret    
    6168:	c6 06 64             	mov    BYTE PTR [rsi],0x64
    616b:	48 83 c6 01          	add    rsi,0x1
    616f:	e9 77 ff ff ff       	jmp    60eb <key_to_opts+0x1b>
    6174:	c6 00 69             	mov    BYTE PTR [rax],0x69
    6177:	48 83 c0 01          	add    rax,0x1
    617b:	eb a6                	jmp    6123 <key_to_opts+0x53>
    617d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000006180 <set_ordering>:
    6180:	0f b6 0f             	movzx  ecx,BYTE PTR [rdi]
    6183:	48 89 f8             	mov    rax,rdi
    6186:	84 c9                	test   cl,cl
    6188:	74 51                	je     61db <set_ordering+0x5b>
    618a:	41 89 d0             	mov    r8d,edx
    618d:	48 8d 3d ec d6 00 00 	lea    rdi,[rip+0xd6ec]        # 13880 <_IO_stdin_used+0x20>
    6194:	4c 8d 1d c5 44 21 00 	lea    r11,[rip+0x2144c5]        # 21a660 <nonprinting>
    619b:	4c 8d 15 be 42 21 00 	lea    r10,[rip+0x2142be]        # 21a460 <fold_toupper>
    61a2:	4c 8d 0d b7 43 21 00 	lea    r9,[rip+0x2143b7]        # 21a560 <nondictionary>
    61a9:	41 83 e0 fd          	and    r8d,0xfffffffd
    61ad:	83 ea 01             	sub    edx,0x1
    61b0:	83 e9 4d             	sub    ecx,0x4d
    61b3:	80 f9 25             	cmp    cl,0x25
    61b6:	77 23                	ja     61db <set_ordering+0x5b>
    61b8:	0f b6 c9             	movzx  ecx,cl
    61bb:	48 63 0c 8f          	movsxd rcx,DWORD PTR [rdi+rcx*4]
    61bf:	48 01 f9             	add    rcx,rdi
    61c2:	ff e1                	jmp    rcx
    61c4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    61c8:	c6 46 37 01          	mov    BYTE PTR [rsi+0x37],0x1
    61cc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    61d0:	48 83 c0 01          	add    rax,0x1
    61d4:	0f b6 08             	movzx  ecx,BYTE PTR [rax]
    61d7:	84 c9                	test   cl,cl
    61d9:	75 d5                	jne    61b0 <set_ordering+0x30>
    61db:	f3 c3                	repz ret 
    61dd:	0f 1f 00             	nop    DWORD PTR [rax]
    61e0:	c6 46 32 01          	mov    BYTE PTR [rsi+0x32],0x1
    61e4:	eb ea                	jmp    61d0 <set_ordering+0x50>
    61e6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    61ed:	00 00 00 
    61f0:	48 83 7e 20 00       	cmp    QWORD PTR [rsi+0x20],0x0
    61f5:	75 d9                	jne    61d0 <set_ordering+0x50>
    61f7:	4c 89 5e 20          	mov    QWORD PTR [rsi+0x20],r11
    61fb:	eb d3                	jmp    61d0 <set_ordering+0x50>
    61fd:	0f 1f 00             	nop    DWORD PTR [rax]
    6200:	c6 46 35 01          	mov    BYTE PTR [rsi+0x35],0x1
    6204:	eb ca                	jmp    61d0 <set_ordering+0x50>
    6206:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    620d:	00 00 00 
    6210:	c6 46 34 01          	mov    BYTE PTR [rsi+0x34],0x1
    6214:	eb ba                	jmp    61d0 <set_ordering+0x50>
    6216:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    621d:	00 00 00 
    6220:	4c 89 56 28          	mov    QWORD PTR [rsi+0x28],r10
    6224:	eb aa                	jmp    61d0 <set_ordering+0x50>
    6226:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    622d:	00 00 00 
    6230:	4c 89 4e 20          	mov    QWORD PTR [rsi+0x20],r9
    6234:	eb 9a                	jmp    61d0 <set_ordering+0x50>
    6236:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    623d:	00 00 00 
    6240:	45 85 c0             	test   r8d,r8d
    6243:	75 04                	jne    6249 <set_ordering+0xc9>
    6245:	c6 46 30 01          	mov    BYTE PTR [rsi+0x30],0x1
    6249:	83 fa 01             	cmp    edx,0x1
    624c:	77 82                	ja     61d0 <set_ordering+0x50>
    624e:	c6 46 31 01          	mov    BYTE PTR [rsi+0x31],0x1
    6252:	e9 79 ff ff ff       	jmp    61d0 <set_ordering+0x50>
    6257:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    625e:	00 00 
    6260:	c6 46 38 01          	mov    BYTE PTR [rsi+0x38],0x1
    6264:	e9 67 ff ff ff       	jmp    61d0 <set_ordering+0x50>
    6269:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    6270:	c6 46 36 01          	mov    BYTE PTR [rsi+0x36],0x1
    6274:	e9 57 ff ff ff       	jmp    61d0 <set_ordering+0x50>
    6279:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    6280:	c6 46 33 01          	mov    BYTE PTR [rsi+0x33],0x1
    6284:	e9 47 ff ff ff       	jmp    61d0 <set_ordering+0x50>
    6289:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000006290 <struct_month_cmp>:
    6290:	48 8b 36             	mov    rsi,QWORD PTR [rsi]
    6293:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    6296:	e9 a5 cb ff ff       	jmp    2e40 <strcmp@plt>
    629b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000062a0 <incompatible_options>:
    62a0:	53                   	push   rbx
    62a1:	48 8d 35 48 dc 00 00 	lea    rsi,[rip+0xdc48]        # 13ef0 <short_options+0x20>
    62a8:	48 89 fb             	mov    rbx,rdi
    62ab:	ba 05 00 00 00       	mov    edx,0x5
    62b0:	31 ff                	xor    edi,edi
    62b2:	e8 b9 c9 ff ff       	call   2c70 <dcgettext@plt>
    62b7:	48 89 d9             	mov    rcx,rbx
    62ba:	48 89 c2             	mov    rdx,rax
    62bd:	31 f6                	xor    esi,esi
    62bf:	bf 02 00 00 00       	mov    edi,0x2
    62c4:	31 c0                	xor    eax,eax
    62c6:	e8 15 cd ff ff       	call   2fe0 <error@plt>
    62cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000062d0 <sighandler>:
    62d0:	55                   	push   rbp
    62d1:	53                   	push   rbx
    62d2:	89 fd                	mov    ebp,edi
    62d4:	48 83 ec 08          	sub    rsp,0x8
    62d8:	48 8b 1d a9 40 21 00 	mov    rbx,QWORD PTR [rip+0x2140a9]        # 21a388 <temphead>
    62df:	48 85 db             	test   rbx,rbx
    62e2:	74 15                	je     62f9 <sighandler+0x29>
    62e4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    62e8:	48 8d 7b 0d          	lea    rdi,[rbx+0xd]
    62ec:	e8 2f c8 ff ff       	call   2b20 <unlink@plt>
    62f1:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
    62f4:	48 85 db             	test   rbx,rbx
    62f7:	75 ef                	jne    62e8 <sighandler+0x18>
    62f9:	89 ef                	mov    edi,ebp
    62fb:	31 f6                	xor    esi,esi
    62fd:	48 c7 05 80 40 21 00 	mov    QWORD PTR [rip+0x214080],0x0        # 21a388 <temphead>
    6304:	00 00 00 00 
    6308:	e8 43 cb ff ff       	call   2e50 <signal@plt>
    630d:	48 83 c4 08          	add    rsp,0x8
    6311:	89 ef                	mov    edi,ebp
    6313:	5b                   	pop    rbx
    6314:	5d                   	pop    rbp
    6315:	e9 b6 c7 ff ff       	jmp    2ad0 <raise@plt>
    631a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000006320 <sort_die>:
    6320:	55                   	push   rbp
    6321:	53                   	push   rbx
    6322:	48 89 f2             	mov    rdx,rsi
    6325:	48 89 fb             	mov    rbx,rdi
    6328:	48 83 ec 08          	sub    rsp,0x8
    632c:	48 85 f6             	test   rsi,rsi
    632f:	74 2f                	je     6360 <sort_die+0x40>
    6331:	be 03 00 00 00       	mov    esi,0x3
    6336:	31 ff                	xor    edi,edi
    6338:	e8 83 9e 00 00       	call   101c0 <quotearg_n_style_colon>
    633d:	48 89 c5             	mov    rbp,rax
    6340:	e8 cb c7 ff ff       	call   2b10 <__errno_location@plt>
    6345:	8b 30                	mov    esi,DWORD PTR [rax]
    6347:	48 8d 15 a5 f0 00 00 	lea    rdx,[rip+0xf0a5]        # 153f3 <short_options+0x1523>
    634e:	49 89 e8             	mov    r8,rbp
    6351:	48 89 d9             	mov    rcx,rbx
    6354:	bf 02 00 00 00       	mov    edi,0x2
    6359:	31 c0                	xor    eax,eax
    635b:	e8 80 cc ff ff       	call   2fe0 <error@plt>
    6360:	48 8d 35 7c f0 00 00 	lea    rsi,[rip+0xf07c]        # 153e3 <short_options+0x1513>
    6367:	ba 05 00 00 00       	mov    edx,0x5
    636c:	31 ff                	xor    edi,edi
    636e:	e8 fd c8 ff ff       	call   2c70 <dcgettext@plt>
    6373:	48 89 c2             	mov    rdx,rax
    6376:	eb b9                	jmp    6331 <sort_die+0x11>
    6378:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    637f:	00 

0000000000006380 <get_outstatus>:
    6380:	48 83 ec 08          	sub    rsp,0x8
    6384:	8b 05 46 3f 21 00    	mov    eax,DWORD PTR [rip+0x213f46]        # 21a2d0 <outstat_errno.8472>
    638a:	85 c0                	test   eax,eax
    638c:	74 1a                	je     63a8 <get_outstatus+0x28>
    638e:	85 c0                	test   eax,eax
    6390:	48 8d 05 a9 3e 21 00 	lea    rax,[rip+0x213ea9]        # 21a240 <outstat.8473>
    6397:	ba 00 00 00 00       	mov    edx,0x0
    639c:	48 0f 49 c2          	cmovns rax,rdx
    63a0:	48 83 c4 08          	add    rsp,0x8
    63a4:	c3                   	ret    
    63a5:	0f 1f 00             	nop    DWORD PTR [rax]
    63a8:	48 8d 15 91 3e 21 00 	lea    rdx,[rip+0x213e91]        # 21a240 <outstat.8473>
    63af:	be 01 00 00 00       	mov    esi,0x1
    63b4:	bf 01 00 00 00       	mov    edi,0x1
    63b9:	e8 62 cb ff ff       	call   2f20 <__fxstat@plt>
    63be:	85 c0                	test   eax,eax
    63c0:	74 16                	je     63d8 <get_outstatus+0x58>
    63c2:	e8 49 c7 ff ff       	call   2b10 <__errno_location@plt>
    63c7:	8b 00                	mov    eax,DWORD PTR [rax]
    63c9:	89 05 01 3f 21 00    	mov    DWORD PTR [rip+0x213f01],eax        # 21a2d0 <outstat_errno.8472>
    63cf:	eb bd                	jmp    638e <get_outstatus+0xe>
    63d1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    63d8:	c7 05 ee 3e 21 00 ff 	mov    DWORD PTR [rip+0x213eee],0xffffffff        # 21a2d0 <outstat_errno.8472>
    63df:	ff ff ff 
    63e2:	48 8d 05 57 3e 21 00 	lea    rax,[rip+0x213e57]        # 21a240 <outstat.8473>
    63e9:	48 83 c4 08          	add    rsp,0x8
    63ed:	c3                   	ret    
    63ee:	66 90                	xchg   ax,ax

00000000000063f0 <add_temp_dir>:
    63f0:	48 8b 35 51 40 21 00 	mov    rsi,QWORD PTR [rip+0x214051]        # 21a448 <temp_dir_count>
    63f7:	48 3b 35 42 40 21 00 	cmp    rsi,QWORD PTR [rip+0x214042]        # 21a440 <temp_dir_alloc>
    63fe:	53                   	push   rbx
    63ff:	48 89 fb             	mov    rbx,rdi
    6402:	48 8b 3d 47 40 21 00 	mov    rdi,QWORD PTR [rip+0x214047]        # 21a450 <temp_dirs>
    6409:	74 15                	je     6420 <add_temp_dir+0x30>
    640b:	48 8d 46 01          	lea    rax,[rsi+0x1]
    640f:	48 89 1c f7          	mov    QWORD PTR [rdi+rsi*8],rbx
    6413:	5b                   	pop    rbx
    6414:	48 89 05 2d 40 21 00 	mov    QWORD PTR [rip+0x21402d],rax        # 21a448 <temp_dir_count>
    641b:	c3                   	ret    
    641c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    6420:	48 85 ff             	test   rdi,rdi
    6423:	74 43                	je     6468 <add_temp_dir+0x78>
    6425:	48 b8 a9 aa aa aa aa 	movabs rax,0xaaaaaaaaaaaaaa9
    642c:	aa aa 0a 
    642f:	48 39 c6             	cmp    rsi,rax
    6432:	77 59                	ja     648d <add_temp_dir+0x9d>
    6434:	48 89 f0             	mov    rax,rsi
    6437:	48 d1 e8             	shr    rax,1
    643a:	48 8d 74 06 01       	lea    rsi,[rsi+rax*1+0x1]
    643f:	48 89 35 fa 3f 21 00 	mov    QWORD PTR [rip+0x213ffa],rsi        # 21a440 <temp_dir_alloc>
    6446:	48 c1 e6 03          	shl    rsi,0x3
    644a:	e8 f1 b9 00 00       	call   11e40 <xrealloc>
    644f:	48 8b 35 f2 3f 21 00 	mov    rsi,QWORD PTR [rip+0x213ff2]        # 21a448 <temp_dir_count>
    6456:	48 89 c7             	mov    rdi,rax
    6459:	48 89 05 f0 3f 21 00 	mov    QWORD PTR [rip+0x213ff0],rax        # 21a450 <temp_dirs>
    6460:	eb a9                	jmp    640b <add_temp_dir+0x1b>
    6462:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    6468:	48 85 f6             	test   rsi,rsi
    646b:	b8 10 00 00 00       	mov    eax,0x10
    6470:	ba 08 00 00 00       	mov    edx,0x8
    6475:	48 0f 44 f0          	cmove  rsi,rax
    6479:	48 89 d0             	mov    rax,rdx
    647c:	31 c9                	xor    ecx,ecx
    647e:	48 f7 e6             	mul    rsi
    6481:	70 0f                	jo     6492 <add_temp_dir+0xa2>
    6483:	48 85 c0             	test   rax,rax
    6486:	78 05                	js     648d <add_temp_dir+0x9d>
    6488:	48 85 c9             	test   rcx,rcx
    648b:	74 b2                	je     643f <add_temp_dir+0x4f>
    648d:	e8 9e bb 00 00       	call   12030 <xalloc_die>
    6492:	b9 01 00 00 00       	mov    ecx,0x1
    6497:	eb ea                	jmp    6483 <add_temp_dir+0x93>
    6499:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000064a0 <initbuf>:
    64a0:	41 55                	push   r13
    64a2:	41 54                	push   r12
    64a4:	49 89 f5             	mov    r13,rsi
    64a7:	55                   	push   rbp
    64a8:	53                   	push   rbx
    64a9:	48 89 fd             	mov    rbp,rdi
    64ac:	48 89 d3             	mov    rbx,rdx
    64af:	4c 8d 66 01          	lea    r12,[rsi+0x1]
    64b3:	48 83 ec 08          	sub    rsp,0x8
    64b7:	eb 0f                	jmp    64c8 <initbuf+0x28>
    64b9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    64c0:	48 d1 eb             	shr    rbx,1
    64c3:	49 39 dc             	cmp    r12,rbx
    64c6:	73 48                	jae    6510 <initbuf+0x70>
    64c8:	48 83 e3 e0          	and    rbx,0xffffffffffffffe0
    64cc:	48 83 c3 20          	add    rbx,0x20
    64d0:	48 89 df             	mov    rdi,rbx
    64d3:	e8 f0 cc ff ff       	call   31c8 <malloc@plt>
    64d8:	48 85 c0             	test   rax,rax
    64db:	48 89 45 00          	mov    QWORD PTR [rbp+0x0],rax
    64df:	74 df                	je     64c0 <initbuf+0x20>
    64e1:	4c 89 6d 28          	mov    QWORD PTR [rbp+0x28],r13
    64e5:	48 89 5d 18          	mov    QWORD PTR [rbp+0x18],rbx
    64e9:	48 c7 45 10 00 00 00 	mov    QWORD PTR [rbp+0x10],0x0
    64f0:	00 
    64f1:	48 c7 45 20 00 00 00 	mov    QWORD PTR [rbp+0x20],0x0
    64f8:	00 
    64f9:	48 c7 45 08 00 00 00 	mov    QWORD PTR [rbp+0x8],0x0
    6500:	00 
    6501:	c6 45 30 00          	mov    BYTE PTR [rbp+0x30],0x0
    6505:	48 83 c4 08          	add    rsp,0x8
    6509:	5b                   	pop    rbx
    650a:	5d                   	pop    rbp
    650b:	41 5c                	pop    r12
    650d:	41 5d                	pop    r13
    650f:	c3                   	ret    
    6510:	e8 1b bb 00 00       	call   12030 <xalloc_die>
    6515:	90                   	nop
    6516:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    651d:	00 00 00 

0000000000006520 <debug_width>:
    6520:	55                   	push   rbp
    6521:	53                   	push   rbx
    6522:	48 89 f5             	mov    rbp,rsi
    6525:	48 89 fb             	mov    rbx,rdi
    6528:	48 29 fe             	sub    rsi,rdi
    652b:	31 d2                	xor    edx,edx
    652d:	48 83 ec 08          	sub    rsp,0x8
    6531:	e8 ea 77 00 00       	call   dd20 <mbsnwidth>
    6536:	48 39 dd             	cmp    rbp,rbx
    6539:	48 98                	cdqe   
    653b:	76 18                	jbe    6555 <debug_width+0x35>
    653d:	0f 1f 00             	nop    DWORD PTR [rax]
    6540:	48 83 c3 01          	add    rbx,0x1
    6544:	31 d2                	xor    edx,edx
    6546:	80 7b ff 09          	cmp    BYTE PTR [rbx-0x1],0x9
    654a:	0f 94 c2             	sete   dl
    654d:	48 01 d0             	add    rax,rdx
    6550:	48 39 dd             	cmp    rbp,rbx
    6553:	75 eb                	jne    6540 <debug_width+0x20>
    6555:	48 83 c4 08          	add    rsp,0x8
    6559:	5b                   	pop    rbx
    655a:	5d                   	pop    rbp
    655b:	c3                   	ret    
    655c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000006560 <xstrxfrm>:
    6560:	41 55                	push   r13
    6562:	41 54                	push   r12
    6564:	49 89 d5             	mov    r13,rdx
    6567:	55                   	push   rbp
    6568:	53                   	push   rbx
    6569:	49 89 fc             	mov    r12,rdi
    656c:	48 89 f5             	mov    rbp,rsi
    656f:	48 83 ec 08          	sub    rsp,0x8
    6573:	e8 98 c5 ff ff       	call   2b10 <__errno_location@plt>
    6578:	4c 89 ea             	mov    rdx,r13
    657b:	48 89 c3             	mov    rbx,rax
    657e:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
    6584:	48 89 ee             	mov    rsi,rbp
    6587:	4c 89 e7             	mov    rdi,r12
    658a:	e8 a1 c8 ff ff       	call   2e30 <strxfrm@plt>
    658f:	8b 13                	mov    edx,DWORD PTR [rbx]
    6591:	85 d2                	test   edx,edx
    6593:	75 0b                	jne    65a0 <xstrxfrm+0x40>
    6595:	48 83 c4 08          	add    rsp,0x8
    6599:	5b                   	pop    rbx
    659a:	5d                   	pop    rbp
    659b:	41 5c                	pop    r12
    659d:	41 5d                	pop    r13
    659f:	c3                   	ret    
    65a0:	48 8d 35 53 ee 00 00 	lea    rsi,[rip+0xee53]        # 153fa <short_options+0x152a>
    65a7:	ba 05 00 00 00       	mov    edx,0x5
    65ac:	31 ff                	xor    edi,edi
    65ae:	e8 bd c6 ff ff       	call   2c70 <dcgettext@plt>
    65b3:	8b 33                	mov    esi,DWORD PTR [rbx]
    65b5:	48 89 c2             	mov    rdx,rax
    65b8:	31 ff                	xor    edi,edi
    65ba:	31 c0                	xor    eax,eax
    65bc:	e8 1f ca ff ff       	call   2fe0 <error@plt>
    65c1:	48 8d 35 70 d9 00 00 	lea    rsi,[rip+0xd970]        # 13f38 <short_options+0x68>
    65c8:	ba 05 00 00 00       	mov    edx,0x5
    65cd:	31 ff                	xor    edi,edi
    65cf:	e8 9c c6 ff ff       	call   2c70 <dcgettext@plt>
    65d4:	31 f6                	xor    esi,esi
    65d6:	48 89 c2             	mov    rdx,rax
    65d9:	31 ff                	xor    edi,edi
    65db:	31 c0                	xor    eax,eax
    65dd:	e8 fe c9 ff ff       	call   2fe0 <error@plt>
    65e2:	48 89 ea             	mov    rdx,rbp
    65e5:	be 08 00 00 00       	mov    esi,0x8
    65ea:	31 ff                	xor    edi,edi
    65ec:	e8 af 99 00 00       	call   ffa0 <quotearg_n_style>
    65f1:	48 8d 35 70 d9 00 00 	lea    rsi,[rip+0xd970]        # 13f68 <short_options+0x98>
    65f8:	48 89 c3             	mov    rbx,rax
    65fb:	ba 05 00 00 00       	mov    edx,0x5
    6600:	31 ff                	xor    edi,edi
    6602:	e8 69 c6 ff ff       	call   2c70 <dcgettext@plt>
    6607:	48 89 d9             	mov    rcx,rbx
    660a:	48 89 c2             	mov    rdx,rax
    660d:	31 f6                	xor    esi,esi
    660f:	bf 02 00 00 00       	mov    edi,0x2
    6614:	31 c0                	xor    eax,eax
    6616:	e8 c5 c9 ff ff       	call   2fe0 <error@plt>
    661b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000006620 <reap>:
    6620:	55                   	push   rbp
    6621:	53                   	push   rbx
    6622:	31 d2                	xor    edx,edx
    6624:	89 fb                	mov    ebx,edi
    6626:	48 83 ec 38          	sub    rsp,0x38
    662a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6631:	00 00 
    6633:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
    6638:	31 c0                	xor    eax,eax
    663a:	48 8d 74 24 0c       	lea    rsi,[rsp+0xc]
    663f:	85 ff                	test   edi,edi
    6641:	bf ff ff ff ff       	mov    edi,0xffffffff
    6646:	0f 94 c2             	sete   dl
    6649:	0f 45 fb             	cmovne edi,ebx
    664c:	e8 9f c9 ff ff       	call   2ff0 <waitpid@plt>
    6651:	85 c0                	test   eax,eax
    6653:	0f 88 9a 00 00 00    	js     66f3 <reap+0xd3>
    6659:	89 c5                	mov    ebp,eax
    665b:	74 18                	je     6675 <reap+0x55>
    665d:	85 db                	test   ebx,ebx
    665f:	7e 37                	jle    6698 <reap+0x78>
    6661:	8b 44 24 0c          	mov    eax,DWORD PTR [rsp+0xc]
    6665:	a8 7f                	test   al,0x7f
    6667:	75 4f                	jne    66b8 <reap+0x98>
    6669:	f6 c4 ff             	test   ah,0xff
    666c:	75 4a                	jne    66b8 <reap+0x98>
    666e:	83 2d 07 3d 21 00 01 	sub    DWORD PTR [rip+0x213d07],0x1        # 21a37c <nprocs>
    6675:	48 8b 4c 24 28       	mov    rcx,QWORD PTR [rsp+0x28]
    667a:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    6681:	00 00 
    6683:	89 e8                	mov    eax,ebp
    6685:	0f 85 ab 00 00 00    	jne    6736 <reap+0x116>
    668b:	48 83 c4 38          	add    rsp,0x38
    668f:	5b                   	pop    rbx
    6690:	5d                   	pop    rbp
    6691:	c3                   	ret    
    6692:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    6698:	48 8b 3d e1 3c 21 00 	mov    rdi,QWORD PTR [rip+0x213ce1]        # 21a380 <proctab>
    669f:	48 8d 74 24 10       	lea    rsi,[rsp+0x10]
    66a4:	89 44 24 18          	mov    DWORD PTR [rsp+0x18],eax
    66a8:	e8 63 70 00 00       	call   d710 <hash_delete>
    66ad:	48 85 c0             	test   rax,rax
    66b0:	74 c3                	je     6675 <reap+0x55>
    66b2:	c6 40 0c 02          	mov    BYTE PTR [rax+0xc],0x2
    66b6:	eb a9                	jmp    6661 <reap+0x41>
    66b8:	48 8b 35 69 3d 21 00 	mov    rsi,QWORD PTR [rip+0x213d69]        # 21a428 <compress_program>
    66bf:	bf 04 00 00 00       	mov    edi,0x4
    66c4:	e8 f7 99 00 00       	call   100c0 <quotearg_style>
    66c9:	48 8d 35 5b ed 00 00 	lea    rsi,[rip+0xed5b]        # 1542b <short_options+0x155b>
    66d0:	48 89 c3             	mov    rbx,rax
    66d3:	ba 05 00 00 00       	mov    edx,0x5
    66d8:	31 ff                	xor    edi,edi
    66da:	e8 91 c5 ff ff       	call   2c70 <dcgettext@plt>
    66df:	48 89 d9             	mov    rcx,rbx
    66e2:	48 89 c2             	mov    rdx,rax
    66e5:	31 f6                	xor    esi,esi
    66e7:	bf 02 00 00 00       	mov    edi,0x2
    66ec:	31 c0                	xor    eax,eax
    66ee:	e8 ed c8 ff ff       	call   2fe0 <error@plt>
    66f3:	48 8b 35 2e 3d 21 00 	mov    rsi,QWORD PTR [rip+0x213d2e]        # 21a428 <compress_program>
    66fa:	bf 04 00 00 00       	mov    edi,0x4
    66ff:	e8 bc 99 00 00       	call   100c0 <quotearg_style>
    6704:	48 8d 35 0c ed 00 00 	lea    rsi,[rip+0xed0c]        # 15417 <short_options+0x1547>
    670b:	ba 05 00 00 00       	mov    edx,0x5
    6710:	31 ff                	xor    edi,edi
    6712:	48 89 c5             	mov    rbp,rax
    6715:	e8 56 c5 ff ff       	call   2c70 <dcgettext@plt>
    671a:	48 89 c3             	mov    rbx,rax
    671d:	e8 ee c3 ff ff       	call   2b10 <__errno_location@plt>
    6722:	8b 30                	mov    esi,DWORD PTR [rax]
    6724:	48 89 e9             	mov    rcx,rbp
    6727:	48 89 da             	mov    rdx,rbx
    672a:	bf 02 00 00 00       	mov    edi,0x2
    672f:	31 c0                	xor    eax,eax
    6731:	e8 aa c8 ff ff       	call   2fe0 <error@plt>
    6736:	e8 65 c5 ff ff       	call   2ca0 <__stack_chk_fail@plt>
    673b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000006740 <wait_proc>:
    6740:	53                   	push   rbx
    6741:	89 fb                	mov    ebx,edi
    6743:	48 83 ec 20          	sub    rsp,0x20
    6747:	89 7c 24 08          	mov    DWORD PTR [rsp+0x8],edi
    674b:	48 8b 3d 2e 3c 21 00 	mov    rdi,QWORD PTR [rip+0x213c2e]        # 21a380 <proctab>
    6752:	48 89 e6             	mov    rsi,rsp
    6755:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    675c:	00 00 
    675e:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
    6763:	31 c0                	xor    eax,eax
    6765:	e8 a6 6f 00 00       	call   d710 <hash_delete>
    676a:	48 85 c0             	test   rax,rax
    676d:	74 0b                	je     677a <wait_proc+0x3a>
    676f:	c6 40 0c 02          	mov    BYTE PTR [rax+0xc],0x2
    6773:	89 df                	mov    edi,ebx
    6775:	e8 a6 fe ff ff       	call   6620 <reap>
    677a:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
    677f:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    6786:	00 00 
    6788:	75 06                	jne    6790 <wait_proc+0x50>
    678a:	48 83 c4 20          	add    rsp,0x20
    678e:	5b                   	pop    rbx
    678f:	c3                   	ret    
    6790:	e8 0b c5 ff ff       	call   2ca0 <__stack_chk_fail@plt>
    6795:	90                   	nop
    6796:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    679d:	00 00 00 

00000000000067a0 <register_proc>:
    67a0:	53                   	push   rbx
    67a1:	48 89 fb             	mov    rbx,rdi
    67a4:	48 8b 3d d5 3b 21 00 	mov    rdi,QWORD PTR [rip+0x213bd5]        # 21a380 <proctab>
    67ab:	48 85 ff             	test   rdi,rdi
    67ae:	74 18                	je     67c8 <register_proc+0x28>
    67b0:	c6 43 0c 01          	mov    BYTE PTR [rbx+0xc],0x1
    67b4:	48 89 de             	mov    rsi,rbx
    67b7:	e8 f4 6e 00 00       	call   d6b0 <hash_insert>
    67bc:	48 85 c0             	test   rax,rax
    67bf:	74 33                	je     67f4 <register_proc+0x54>
    67c1:	5b                   	pop    rbx
    67c2:	c3                   	ret    
    67c3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    67c8:	48 8d 0d a1 f6 ff ff 	lea    rcx,[rip+0xfffffffffffff6a1]        # 5e70 <proctab_comparator>
    67cf:	48 8d 15 8a f6 ff ff 	lea    rdx,[rip+0xfffffffffffff68a]        # 5e60 <proctab_hasher>
    67d6:	45 31 c0             	xor    r8d,r8d
    67d9:	31 f6                	xor    esi,esi
    67db:	bf 2f 00 00 00       	mov    edi,0x2f
    67e0:	e8 cb 66 00 00       	call   ceb0 <hash_initialize>
    67e5:	48 85 c0             	test   rax,rax
    67e8:	48 89 c7             	mov    rdi,rax
    67eb:	48 89 05 8e 3b 21 00 	mov    QWORD PTR [rip+0x213b8e],rax        # 21a380 <proctab>
    67f2:	75 bc                	jne    67b0 <register_proc+0x10>
    67f4:	e8 37 b8 00 00       	call   12030 <xalloc_die>
    67f9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000006800 <init_node>:
    6800:	41 57                	push   r15
    6802:	4c 89 c0             	mov    rax,r8
    6805:	41 56                	push   r14
    6807:	41 55                	push   r13
    6809:	41 54                	push   r12
    680b:	48 c1 e0 05          	shl    rax,0x5
    680f:	55                   	push   rbp
    6810:	53                   	push   rbx
    6811:	48 29 c2             	sub    rdx,rax
    6814:	48 89 f3             	mov    rbx,rsi
    6817:	49 89 cf             	mov    r15,rcx
    681a:	4d 89 c4             	mov    r12,r8
    681d:	48 83 ec 08          	sub    rsp,0x8
    6821:	45 84 c9             	test   r9b,r9b
    6824:	48 89 d5             	mov    rbp,rdx
    6827:	0f 84 8b 00 00 00    	je     68b8 <init_node+0xb8>
    682d:	48 8b 47 28          	mov    rax,QWORD PTR [rdi+0x28]
    6831:	49 89 ee             	mov    r14,rbp
    6834:	48 89 c2             	mov    rdx,rax
    6837:	48 d1 ea             	shr    rdx,1
    683a:	48 89 d1             	mov    rcx,rdx
    683d:	48 29 d0             	sub    rax,rdx
    6840:	48 c1 e1 05          	shl    rcx,0x5
    6844:	49 29 ce             	sub    r14,rcx
    6847:	48 8d 4f 10          	lea    rcx,[rdi+0x10]
    684b:	48 89 43 30          	mov    QWORD PTR [rbx+0x30],rax
    684f:	8b 47 50             	mov    eax,DWORD PTR [rdi+0x50]
    6852:	31 f6                	xor    esi,esi
    6854:	48 89 7b 38          	mov    QWORD PTR [rbx+0x38],rdi
    6858:	48 8d 7b 58          	lea    rdi,[rbx+0x58]
    685c:	48 89 6b 10          	mov    QWORD PTR [rbx+0x10],rbp
    6860:	48 89 2b             	mov    QWORD PTR [rbx],rbp
    6863:	4c 89 73 18          	mov    QWORD PTR [rbx+0x18],r14
    6867:	4c 8d ab 80 00 00 00 	lea    r13,[rbx+0x80]
    686e:	83 c0 01             	add    eax,0x1
    6871:	4c 89 73 08          	mov    QWORD PTR [rbx+0x8],r14
    6875:	48 89 4b 20          	mov    QWORD PTR [rbx+0x20],rcx
    6879:	48 89 53 28          	mov    QWORD PTR [rbx+0x28],rdx
    687d:	89 43 50             	mov    DWORD PTR [rbx+0x50],eax
    6880:	c6 43 54 00          	mov    BYTE PTR [rbx+0x54],0x0
    6884:	e8 e7 c8 ff ff       	call   3170 <pthread_mutex_init@plt>
    6889:	49 83 ff 01          	cmp    r15,0x1
    688d:	77 51                	ja     68e0 <init_node+0xe0>
    688f:	48 c7 43 40 00 00 00 	mov    QWORD PTR [rbx+0x40],0x0
    6896:	00 
    6897:	48 c7 43 48 00 00 00 	mov    QWORD PTR [rbx+0x48],0x0
    689e:	00 
    689f:	48 83 c4 08          	add    rsp,0x8
    68a3:	5b                   	pop    rbx
    68a4:	4c 89 e8             	mov    rax,r13
    68a7:	5d                   	pop    rbp
    68a8:	41 5c                	pop    r12
    68aa:	41 5d                	pop    r13
    68ac:	41 5e                	pop    r14
    68ae:	41 5f                	pop    r15
    68b0:	c3                   	ret    
    68b1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    68b8:	48 8b 47 30          	mov    rax,QWORD PTR [rdi+0x30]
    68bc:	49 89 ee             	mov    r14,rbp
    68bf:	48 89 c2             	mov    rdx,rax
    68c2:	48 d1 ea             	shr    rdx,1
    68c5:	48 89 d1             	mov    rcx,rdx
    68c8:	48 29 d0             	sub    rax,rdx
    68cb:	48 c1 e1 05          	shl    rcx,0x5
    68cf:	49 29 ce             	sub    r14,rcx
    68d2:	48 8d 4f 18          	lea    rcx,[rdi+0x18]
    68d6:	e9 70 ff ff ff       	jmp    684b <init_node+0x4b>
    68db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    68e0:	4c 89 f9             	mov    rcx,r15
    68e3:	4c 89 6b 40          	mov    QWORD PTR [rbx+0x40],r13
    68e7:	4d 89 e0             	mov    r8,r12
    68ea:	48 d1 e9             	shr    rcx,1
    68ed:	48 89 ea             	mov    rdx,rbp
    68f0:	4c 89 ee             	mov    rsi,r13
    68f3:	48 89 df             	mov    rdi,rbx
    68f6:	41 b9 01 00 00 00    	mov    r9d,0x1
    68fc:	49 29 cf             	sub    r15,rcx
    68ff:	e8 fc fe ff ff       	call   6800 <init_node>
    6904:	48 89 43 48          	mov    QWORD PTR [rbx+0x48],rax
    6908:	48 83 c4 08          	add    rsp,0x8
    690c:	4d 89 e0             	mov    r8,r12
    690f:	4c 89 f9             	mov    rcx,r15
    6912:	4c 89 f2             	mov    rdx,r14
    6915:	48 89 df             	mov    rdi,rbx
    6918:	5b                   	pop    rbx
    6919:	5d                   	pop    rbp
    691a:	41 5c                	pop    r12
    691c:	41 5d                	pop    r13
    691e:	41 5e                	pop    r14
    6920:	41 5f                	pop    r15
    6922:	45 31 c9             	xor    r9d,r9d
    6925:	48 89 c6             	mov    rsi,rax
    6928:	e9 d3 fe ff ff       	jmp    6800 <init_node>
    692d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000006930 <queue_insert>:
    6930:	41 54                	push   r12
    6932:	55                   	push   rbp
    6933:	48 8d 6f 08          	lea    rbp,[rdi+0x8]
    6937:	53                   	push   rbx
    6938:	48 89 fb             	mov    rbx,rdi
    693b:	49 89 f4             	mov    r12,rsi
    693e:	48 89 ef             	mov    rdi,rbp
    6941:	e8 5a c8 ff ff       	call   31a0 <pthread_mutex_lock@plt>
    6946:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    6949:	4c 89 e6             	mov    rsi,r12
    694c:	e8 8f 70 00 00       	call   d9e0 <heap_insert>
    6951:	48 8d 7b 30          	lea    rdi,[rbx+0x30]
    6955:	41 c6 44 24 54 01    	mov    BYTE PTR [r12+0x54],0x1
    695b:	e8 a0 c4 ff ff       	call   2e00 <pthread_cond_signal@plt>
    6960:	5b                   	pop    rbx
    6961:	48 89 ef             	mov    rdi,rbp
    6964:	5d                   	pop    rbp
    6965:	41 5c                	pop    r12
    6967:	e9 84 c5 ff ff       	jmp    2ef0 <pthread_mutex_unlock@plt>
    696c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000006970 <begfield.isra.1>:
    6970:	48 8d 44 37 ff       	lea    rax,[rdi+rsi*1-0x1]
    6975:	8b 35 ad 36 21 00    	mov    esi,DWORD PTR [rip+0x2136ad]        # 21a028 <tab>
    697b:	4c 8b 12             	mov    r10,QWORD PTR [rdx]
    697e:	4c 8b 4a 08          	mov    r9,QWORD PTR [rdx+0x8]
    6982:	81 fe 80 00 00 00    	cmp    esi,0x80
    6988:	74 6e                	je     69f8 <begfield.isra.1+0x88>
    698a:	48 39 f8             	cmp    rax,rdi
    698d:	76 5b                	jbe    69ea <begfield.isra.1+0x7a>
    698f:	4d 85 d2             	test   r10,r10
    6992:	4d 8d 42 ff          	lea    r8,[r10-0x1]
    6996:	75 11                	jne    69a9 <begfield.isra.1+0x39>
    6998:	eb 29                	jmp    69c3 <begfield.isra.1+0x53>
    699a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    69a0:	48 83 c7 01          	add    rdi,0x1
    69a4:	48 39 f8             	cmp    rax,rdi
    69a7:	74 41                	je     69ea <begfield.isra.1+0x7a>
    69a9:	0f be 0f             	movsx  ecx,BYTE PTR [rdi]
    69ac:	39 ce                	cmp    esi,ecx
    69ae:	75 f0                	jne    69a0 <begfield.isra.1+0x30>
    69b0:	48 83 c7 01          	add    rdi,0x1
    69b4:	48 39 f8             	cmp    rax,rdi
    69b7:	76 31                	jbe    69ea <begfield.isra.1+0x7a>
    69b9:	49 83 e8 01          	sub    r8,0x1
    69bd:	49 83 f8 ff          	cmp    r8,0xffffffffffffffff
    69c1:	75 e6                	jne    69a9 <begfield.isra.1+0x39>
    69c3:	80 7a 30 00          	cmp    BYTE PTR [rdx+0x30],0x0
    69c7:	48 8d 0d 92 3d 21 00 	lea    rcx,[rip+0x213d92]        # 21a760 <blanks>
    69ce:	75 11                	jne    69e1 <begfield.isra.1+0x71>
    69d0:	eb 18                	jmp    69ea <begfield.isra.1+0x7a>
    69d2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    69d8:	48 83 c7 01          	add    rdi,0x1
    69dc:	48 39 f8             	cmp    rax,rdi
    69df:	76 09                	jbe    69ea <begfield.isra.1+0x7a>
    69e1:	0f b6 17             	movzx  edx,BYTE PTR [rdi]
    69e4:	80 3c 11 00          	cmp    BYTE PTR [rcx+rdx*1],0x0
    69e8:	75 ee                	jne    69d8 <begfield.isra.1+0x68>
    69ea:	4c 01 cf             	add    rdi,r9
    69ed:	48 39 f8             	cmp    rax,rdi
    69f0:	48 0f 47 c7          	cmova  rax,rdi
    69f4:	c3                   	ret    
    69f5:	0f 1f 00             	nop    DWORD PTR [rax]
    69f8:	48 39 f8             	cmp    rax,rdi
    69fb:	76 ed                	jbe    69ea <begfield.isra.1+0x7a>
    69fd:	4d 85 d2             	test   r10,r10
    6a00:	4d 8d 42 ff          	lea    r8,[r10-0x1]
    6a04:	48 8d 0d 55 3d 21 00 	lea    rcx,[rip+0x213d55]        # 21a760 <blanks>
    6a0b:	75 0c                	jne    6a19 <begfield.isra.1+0xa9>
    6a0d:	eb b4                	jmp    69c3 <begfield.isra.1+0x53>
    6a0f:	90                   	nop
    6a10:	48 83 c7 01          	add    rdi,0x1
    6a14:	48 39 f8             	cmp    rax,rdi
    6a17:	74 d1                	je     69ea <begfield.isra.1+0x7a>
    6a19:	0f b6 37             	movzx  esi,BYTE PTR [rdi]
    6a1c:	80 3c 31 00          	cmp    BYTE PTR [rcx+rsi*1],0x0
    6a20:	75 ee                	jne    6a10 <begfield.isra.1+0xa0>
    6a22:	48 83 c7 01          	add    rdi,0x1
    6a26:	48 39 f8             	cmp    rax,rdi
    6a29:	76 bf                	jbe    69ea <begfield.isra.1+0x7a>
    6a2b:	0f b6 37             	movzx  esi,BYTE PTR [rdi]
    6a2e:	80 3c 31 00          	cmp    BYTE PTR [rcx+rsi*1],0x0
    6a32:	75 16                	jne    6a4a <begfield.isra.1+0xda>
    6a34:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    6a38:	48 83 c7 01          	add    rdi,0x1
    6a3c:	48 39 f8             	cmp    rax,rdi
    6a3f:	76 a9                	jbe    69ea <begfield.isra.1+0x7a>
    6a41:	0f b6 37             	movzx  esi,BYTE PTR [rdi]
    6a44:	80 3c 31 00          	cmp    BYTE PTR [rcx+rsi*1],0x0
    6a48:	74 ee                	je     6a38 <begfield.isra.1+0xc8>
    6a4a:	49 83 e8 01          	sub    r8,0x1
    6a4e:	49 83 f8 ff          	cmp    r8,0xffffffffffffffff
    6a52:	75 c5                	jne    6a19 <begfield.isra.1+0xa9>
    6a54:	e9 6a ff ff ff       	jmp    69c3 <begfield.isra.1+0x53>
    6a59:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000006a60 <limfield.isra.2>:
    6a60:	4c 8b 4a 18          	mov    r9,QWORD PTR [rdx+0x18]
    6a64:	48 89 f8             	mov    rax,rdi
    6a67:	48 8d 4c 37 ff       	lea    rcx,[rdi+rsi*1-0x1]
    6a6c:	4c 8b 52 10          	mov    r10,QWORD PTR [rdx+0x10]
    6a70:	8b 3d b2 35 21 00    	mov    edi,DWORD PTR [rip+0x2135b2]        # 21a028 <tab>
    6a76:	49 83 f9 01          	cmp    r9,0x1
    6a7a:	49 83 d2 00          	adc    r10,0x0
    6a7e:	81 ff 80 00 00 00    	cmp    edi,0x80
    6a84:	0f 84 8e 00 00 00    	je     6b18 <limfield.isra.2+0xb8>
    6a8a:	48 39 c1             	cmp    rcx,rax
    6a8d:	76 49                	jbe    6ad8 <limfield.isra.2+0x78>
    6a8f:	4d 85 d2             	test   r10,r10
    6a92:	4d 8d 42 ff          	lea    r8,[r10-0x1]
    6a96:	75 11                	jne    6aa9 <limfield.isra.2+0x49>
    6a98:	eb 3e                	jmp    6ad8 <limfield.isra.2+0x78>
    6a9a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    6aa0:	48 83 c0 01          	add    rax,0x1
    6aa4:	48 39 c1             	cmp    rcx,rax
    6aa7:	74 2f                	je     6ad8 <limfield.isra.2+0x78>
    6aa9:	0f be 30             	movsx  esi,BYTE PTR [rax]
    6aac:	39 f7                	cmp    edi,esi
    6aae:	75 f0                	jne    6aa0 <limfield.isra.2+0x40>
    6ab0:	4c 89 ce             	mov    rsi,r9
    6ab3:	4c 09 c6             	or     rsi,r8
    6ab6:	75 08                	jne    6ac0 <limfield.isra.2+0x60>
    6ab8:	f3 c3                	repz ret 
    6aba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    6ac0:	48 83 c0 01          	add    rax,0x1
    6ac4:	48 39 c1             	cmp    rcx,rax
    6ac7:	76 0f                	jbe    6ad8 <limfield.isra.2+0x78>
    6ac9:	49 83 e8 01          	sub    r8,0x1
    6acd:	49 83 f8 ff          	cmp    r8,0xffffffffffffffff
    6ad1:	75 d6                	jne    6aa9 <limfield.isra.2+0x49>
    6ad3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    6ad8:	4d 85 c9             	test   r9,r9
    6adb:	0f 84 9c 00 00 00    	je     6b7d <limfield.isra.2+0x11d>
    6ae1:	80 7a 31 00          	cmp    BYTE PTR [rdx+0x31],0x0
    6ae5:	74 23                	je     6b0a <limfield.isra.2+0xaa>
    6ae7:	48 39 c1             	cmp    rcx,rax
    6aea:	76 1e                	jbe    6b0a <limfield.isra.2+0xaa>
    6aec:	48 8d 35 6d 3c 21 00 	lea    rsi,[rip+0x213c6d]        # 21a760 <blanks>
    6af3:	eb 0c                	jmp    6b01 <limfield.isra.2+0xa1>
    6af5:	0f 1f 00             	nop    DWORD PTR [rax]
    6af8:	48 83 c0 01          	add    rax,0x1
    6afc:	48 39 c1             	cmp    rcx,rax
    6aff:	74 09                	je     6b0a <limfield.isra.2+0xaa>
    6b01:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    6b04:	80 3c 16 00          	cmp    BYTE PTR [rsi+rdx*1],0x0
    6b08:	75 ee                	jne    6af8 <limfield.isra.2+0x98>
    6b0a:	4c 01 c8             	add    rax,r9
    6b0d:	48 39 c1             	cmp    rcx,rax
    6b10:	48 0f 46 c1          	cmovbe rax,rcx
    6b14:	c3                   	ret    
    6b15:	0f 1f 00             	nop    DWORD PTR [rax]
    6b18:	48 39 c1             	cmp    rcx,rax
    6b1b:	76 bb                	jbe    6ad8 <limfield.isra.2+0x78>
    6b1d:	4d 85 d2             	test   r10,r10
    6b20:	4d 8d 42 ff          	lea    r8,[r10-0x1]
    6b24:	48 8d 35 35 3c 21 00 	lea    rsi,[rip+0x213c35]        # 21a760 <blanks>
    6b2b:	75 0c                	jne    6b39 <limfield.isra.2+0xd9>
    6b2d:	eb a9                	jmp    6ad8 <limfield.isra.2+0x78>
    6b2f:	90                   	nop
    6b30:	48 83 c0 01          	add    rax,0x1
    6b34:	48 39 c1             	cmp    rcx,rax
    6b37:	74 9f                	je     6ad8 <limfield.isra.2+0x78>
    6b39:	0f b6 38             	movzx  edi,BYTE PTR [rax]
    6b3c:	80 3c 3e 00          	cmp    BYTE PTR [rsi+rdi*1],0x0
    6b40:	75 ee                	jne    6b30 <limfield.isra.2+0xd0>
    6b42:	48 83 c0 01          	add    rax,0x1
    6b46:	48 39 c1             	cmp    rcx,rax
    6b49:	76 8d                	jbe    6ad8 <limfield.isra.2+0x78>
    6b4b:	0f b6 38             	movzx  edi,BYTE PTR [rax]
    6b4e:	80 3c 3e 00          	cmp    BYTE PTR [rsi+rdi*1],0x0
    6b52:	75 1a                	jne    6b6e <limfield.isra.2+0x10e>
    6b54:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    6b58:	48 83 c0 01          	add    rax,0x1
    6b5c:	48 39 c1             	cmp    rcx,rax
    6b5f:	0f 86 73 ff ff ff    	jbe    6ad8 <limfield.isra.2+0x78>
    6b65:	0f b6 38             	movzx  edi,BYTE PTR [rax]
    6b68:	80 3c 3e 00          	cmp    BYTE PTR [rsi+rdi*1],0x0
    6b6c:	74 ea                	je     6b58 <limfield.isra.2+0xf8>
    6b6e:	49 83 e8 01          	sub    r8,0x1
    6b72:	49 83 f8 ff          	cmp    r8,0xffffffffffffffff
    6b76:	75 c1                	jne    6b39 <limfield.isra.2+0xd9>
    6b78:	e9 5b ff ff ff       	jmp    6ad8 <limfield.isra.2+0x78>
    6b7d:	c3                   	ret    
    6b7e:	66 90                	xchg   ax,ax

0000000000006b80 <compare_nodes>:
    6b80:	8b 46 50             	mov    eax,DWORD PTR [rsi+0x50]
    6b83:	39 47 50             	cmp    DWORD PTR [rdi+0x50],eax
    6b86:	74 08                	je     6b90 <compare_nodes+0x10>
    6b88:	0f 92 c0             	setb   al
    6b8b:	0f b6 c0             	movzx  eax,al
    6b8e:	c3                   	ret    
    6b8f:	90                   	nop
    6b90:	48 8b 57 30          	mov    rdx,QWORD PTR [rdi+0x30]
    6b94:	48 8b 46 30          	mov    rax,QWORD PTR [rsi+0x30]
    6b98:	48 03 57 28          	add    rdx,QWORD PTR [rdi+0x28]
    6b9c:	48 03 46 28          	add    rax,QWORD PTR [rsi+0x28]
    6ba0:	48 39 c2             	cmp    rdx,rax
    6ba3:	0f 92 c0             	setb   al
    6ba6:	0f b6 c0             	movzx  eax,al
    6ba9:	c3                   	ret    
    6baa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000006bb0 <cs_leave.part.4>:
    6bb0:	48 8d 77 08          	lea    rsi,[rdi+0x8]
    6bb4:	31 d2                	xor    edx,edx
    6bb6:	bf 02 00 00 00       	mov    edi,0x2
    6bbb:	e9 30 bf ff ff       	jmp    2af0 <pthread_sigmask@plt>

0000000000006bc0 <exit_cleanup>:
    6bc0:	55                   	push   rbp
    6bc1:	53                   	push   rbx
    6bc2:	48 81 ec 98 00 00 00 	sub    rsp,0x98
    6bc9:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6bd0:	00 00 
    6bd2:	48 89 84 24 88 00 00 	mov    QWORD PTR [rsp+0x88],rax
    6bd9:	00 
    6bda:	31 c0                	xor    eax,eax
    6bdc:	48 8b 05 a5 37 21 00 	mov    rax,QWORD PTR [rip+0x2137a5]        # 21a388 <temphead>
    6be3:	48 85 c0             	test   rax,rax
    6be6:	74 54                	je     6c3c <exit_cleanup+0x7c>
    6be8:	48 89 e5             	mov    rbp,rsp
    6beb:	48 8d 35 ae 37 21 00 	lea    rsi,[rip+0x2137ae]        # 21a3a0 <caught_signals>
    6bf2:	31 ff                	xor    edi,edi
    6bf4:	48 8d 55 08          	lea    rdx,[rbp+0x8]
    6bf8:	e8 f3 be ff ff       	call   2af0 <pthread_sigmask@plt>
    6bfd:	48 8b 1d 84 37 21 00 	mov    rbx,QWORD PTR [rip+0x213784]        # 21a388 <temphead>
    6c04:	85 c0                	test   eax,eax
    6c06:	0f 94 c0             	sete   al
    6c09:	88 04 24             	mov    BYTE PTR [rsp],al
    6c0c:	48 85 db             	test   rbx,rbx
    6c0f:	74 1c                	je     6c2d <exit_cleanup+0x6d>
    6c11:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    6c18:	48 8d 7b 0d          	lea    rdi,[rbx+0xd]
    6c1c:	e8 ff be ff ff       	call   2b20 <unlink@plt>
    6c21:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
    6c24:	48 85 db             	test   rbx,rbx
    6c27:	75 ef                	jne    6c18 <exit_cleanup+0x58>
    6c29:	0f b6 04 24          	movzx  eax,BYTE PTR [rsp]
    6c2d:	84 c0                	test   al,al
    6c2f:	48 c7 05 4e 37 21 00 	mov    QWORD PTR [rip+0x21374e],0x0        # 21a388 <temphead>
    6c36:	00 00 00 00 
    6c3a:	75 24                	jne    6c60 <exit_cleanup+0xa0>
    6c3c:	e8 1f 46 00 00       	call   b260 <close_stdout>
    6c41:	48 8b 84 24 88 00 00 	mov    rax,QWORD PTR [rsp+0x88]
    6c48:	00 
    6c49:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    6c50:	00 00 
    6c52:	75 16                	jne    6c6a <exit_cleanup+0xaa>
    6c54:	48 81 c4 98 00 00 00 	add    rsp,0x98
    6c5b:	5b                   	pop    rbx
    6c5c:	5d                   	pop    rbp
    6c5d:	c3                   	ret    
    6c5e:	66 90                	xchg   ax,ax
    6c60:	48 89 ef             	mov    rdi,rbp
    6c63:	e8 48 ff ff ff       	call   6bb0 <cs_leave.part.4>
    6c68:	eb d2                	jmp    6c3c <exit_cleanup+0x7c>
    6c6a:	e8 31 c0 ff ff       	call   2ca0 <__stack_chk_fail@plt>
    6c6f:	90                   	nop

0000000000006c70 <zaptemp>:
    6c70:	41 57                	push   r15
    6c72:	41 56                	push   r14
    6c74:	41 55                	push   r13
    6c76:	41 54                	push   r12
    6c78:	4c 8d 2d 09 37 21 00 	lea    r13,[rip+0x213709]        # 21a388 <temphead>
    6c7f:	55                   	push   rbp
    6c80:	53                   	push   rbx
    6c81:	48 89 fd             	mov    rbp,rdi
    6c84:	48 81 ec a8 00 00 00 	sub    rsp,0xa8
    6c8b:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6c92:	00 00 
    6c94:	48 89 84 24 98 00 00 	mov    QWORD PTR [rsp+0x98],rax
    6c9b:	00 
    6c9c:	31 c0                	xor    eax,eax
    6c9e:	48 8b 1d e3 36 21 00 	mov    rbx,QWORD PTR [rip+0x2136e3]        # 21a388 <temphead>
    6ca5:	48 8d 43 0d          	lea    rax,[rbx+0xd]
    6ca9:	48 39 c7             	cmp    rdi,rax
    6cac:	74 21                	je     6ccf <zaptemp+0x5f>
    6cae:	48 8b 03             	mov    rax,QWORD PTR [rbx]
    6cb1:	48 8d 50 0d          	lea    rdx,[rax+0xd]
    6cb5:	48 39 ea             	cmp    rdx,rbp
    6cb8:	74 0f                	je     6cc9 <zaptemp+0x59>
    6cba:	48 89 c3             	mov    rbx,rax
    6cbd:	48 8b 03             	mov    rax,QWORD PTR [rbx]
    6cc0:	48 8d 50 0d          	lea    rdx,[rax+0xd]
    6cc4:	48 39 ea             	cmp    rdx,rbp
    6cc7:	75 f1                	jne    6cba <zaptemp+0x4a>
    6cc9:	49 89 dd             	mov    r13,rbx
    6ccc:	48 89 c3             	mov    rbx,rax
    6ccf:	80 7b 0c 01          	cmp    BYTE PTR [rbx+0xc],0x1
    6cd3:	0f 84 d7 00 00 00    	je     6db0 <zaptemp+0x140>
    6cd9:	48 8d 54 24 18       	lea    rdx,[rsp+0x18]
    6cde:	48 8d 35 bb 36 21 00 	lea    rsi,[rip+0x2136bb]        # 21a3a0 <caught_signals>
    6ce5:	31 ff                	xor    edi,edi
    6ce7:	4c 8b 23             	mov    r12,QWORD PTR [rbx]
    6cea:	4c 8d 7c 24 10       	lea    r15,[rsp+0x10]
    6cef:	e8 fc bd ff ff       	call   2af0 <pthread_sigmask@plt>
    6cf4:	48 89 ef             	mov    rdi,rbp
    6cf7:	85 c0                	test   eax,eax
    6cf9:	0f 94 44 24 10       	sete   BYTE PTR [rsp+0x10]
    6cfe:	e8 1d be ff ff       	call   2b20 <unlink@plt>
    6d03:	41 89 c6             	mov    r14d,eax
    6d06:	e8 05 be ff ff       	call   2b10 <__errno_location@plt>
    6d0b:	80 7c 24 10 00       	cmp    BYTE PTR [rsp+0x10],0x0
    6d10:	8b 00                	mov    eax,DWORD PTR [rax]
    6d12:	4d 89 65 00          	mov    QWORD PTR [r13+0x0],r12
    6d16:	89 44 24 0c          	mov    DWORD PTR [rsp+0xc],eax
    6d1a:	0f 85 80 00 00 00    	jne    6da0 <zaptemp+0x130>
    6d20:	45 85 f6             	test   r14d,r14d
    6d23:	75 3b                	jne    6d60 <zaptemp+0xf0>
    6d25:	4d 85 e4             	test   r12,r12
    6d28:	75 07                	jne    6d31 <zaptemp+0xc1>
    6d2a:	4c 89 2d 0f 33 21 00 	mov    QWORD PTR [rip+0x21330f],r13        # 21a040 <temptail>
    6d31:	48 89 df             	mov    rdi,rbx
    6d34:	e8 87 c4 ff ff       	call   31c0 <free@plt>
    6d39:	48 8b 84 24 98 00 00 	mov    rax,QWORD PTR [rsp+0x98]
    6d40:	00 
    6d41:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    6d48:	00 00 
    6d4a:	75 71                	jne    6dbd <zaptemp+0x14d>
    6d4c:	48 81 c4 a8 00 00 00 	add    rsp,0xa8
    6d53:	5b                   	pop    rbx
    6d54:	5d                   	pop    rbp
    6d55:	41 5c                	pop    r12
    6d57:	41 5d                	pop    r13
    6d59:	41 5e                	pop    r14
    6d5b:	41 5f                	pop    r15
    6d5d:	c3                   	ret    
    6d5e:	66 90                	xchg   ax,ax
    6d60:	48 89 ea             	mov    rdx,rbp
    6d63:	31 ff                	xor    edi,edi
    6d65:	be 03 00 00 00       	mov    esi,0x3
    6d6a:	e8 51 94 00 00       	call   101c0 <quotearg_n_style_colon>
    6d6f:	48 8d 35 dc e6 00 00 	lea    rsi,[rip+0xe6dc]        # 15452 <short_options+0x1582>
    6d76:	31 ff                	xor    edi,edi
    6d78:	ba 05 00 00 00       	mov    edx,0x5
    6d7d:	48 89 c5             	mov    rbp,rax
    6d80:	e8 eb be ff ff       	call   2c70 <dcgettext@plt>
    6d85:	8b 74 24 0c          	mov    esi,DWORD PTR [rsp+0xc]
    6d89:	48 89 c2             	mov    rdx,rax
    6d8c:	48 89 e9             	mov    rcx,rbp
    6d8f:	31 ff                	xor    edi,edi
    6d91:	31 c0                	xor    eax,eax
    6d93:	e8 48 c2 ff ff       	call   2fe0 <error@plt>
    6d98:	eb 8b                	jmp    6d25 <zaptemp+0xb5>
    6d9a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    6da0:	4c 89 ff             	mov    rdi,r15
    6da3:	e8 08 fe ff ff       	call   6bb0 <cs_leave.part.4>
    6da8:	e9 73 ff ff ff       	jmp    6d20 <zaptemp+0xb0>
    6dad:	0f 1f 00             	nop    DWORD PTR [rax]
    6db0:	8b 7b 08             	mov    edi,DWORD PTR [rbx+0x8]
    6db3:	e8 88 f9 ff ff       	call   6740 <wait_proc>
    6db8:	e9 1c ff ff ff       	jmp    6cd9 <zaptemp+0x69>
    6dbd:	e8 de be ff ff       	call   2ca0 <__stack_chk_fail@plt>
    6dc2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    6dc6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    6dcd:	00 00 00 

0000000000006dd0 <pipe_fork>:
    6dd0:	41 57                	push   r15
    6dd2:	41 56                	push   r14
    6dd4:	41 55                	push   r13
    6dd6:	41 54                	push   r12
    6dd8:	55                   	push   rbp
    6dd9:	53                   	push   rbx
    6dda:	48 89 f3             	mov    rbx,rsi
    6ddd:	be 00 00 08 00       	mov    esi,0x80000
    6de2:	48 81 ec b8 00 00 00 	sub    rsp,0xb8
    6de9:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6df0:	00 00 
    6df2:	48 89 84 24 a8 00 00 	mov    QWORD PTR [rsp+0xa8],rax
    6df9:	00 
    6dfa:	31 c0                	xor    eax,eax
    6dfc:	48 89 7c 24 18       	mov    QWORD PTR [rsp+0x18],rdi
    6e01:	e8 ea 75 00 00       	call   e3f0 <rpl_pipe2>
    6e06:	85 c0                	test   eax,eax
    6e08:	0f 88 a3 01 00 00    	js     6fb1 <pipe_fork+0x1e1>
    6e0e:	8b 05 10 32 21 00    	mov    eax,DWORD PTR [rip+0x213210]        # 21a024 <nmerge>
    6e14:	83 c0 01             	add    eax,0x1
    6e17:	3b 05 5f 35 21 00    	cmp    eax,DWORD PTR [rip+0x21355f]        # 21a37c <nprocs>
    6e1d:	0f 82 65 01 00 00    	jb     6f88 <pipe_fork+0x1b8>
    6e23:	e8 e8 bc ff ff       	call   2b10 <__errno_location@plt>
    6e28:	f2 0f 10 1d 98 eb 00 	movsd  xmm3,QWORD PTR [rip+0xeb98]        # 159c8 <short_options+0x1af8>
    6e2f:	00 
    6e30:	4c 8d 6c 24 20       	lea    r13,[rsp+0x20]
    6e35:	49 89 c4             	mov    r12,rax
    6e38:	f2 0f 11 5c 24 08    	movsd  QWORD PTR [rsp+0x8],xmm3
    6e3e:	48 83 eb 01          	sub    rbx,0x1
    6e42:	48 83 fb ff          	cmp    rbx,0xffffffffffffffff
    6e46:	0f 84 a8 00 00 00    	je     6ef4 <pipe_fork+0x124>
    6e4c:	49 8d 55 08          	lea    rdx,[r13+0x8]
    6e50:	48 8d 35 49 35 21 00 	lea    rsi,[rip+0x213549]        # 21a3a0 <caught_signals>
    6e57:	31 ff                	xor    edi,edi
    6e59:	e8 92 bc ff ff       	call   2af0 <pthread_sigmask@plt>
    6e5e:	85 c0                	test   eax,eax
    6e60:	4c 8b 35 21 35 21 00 	mov    r14,QWORD PTR [rip+0x213521]        # 21a388 <temphead>
    6e67:	48 c7 05 16 35 21 00 	mov    QWORD PTR [rip+0x213516],0x0        # 21a388 <temphead>
    6e6e:	00 00 00 00 
    6e72:	0f 94 44 24 20       	sete   BYTE PTR [rsp+0x20]
    6e77:	e8 14 c3 ff ff       	call   3190 <fork@plt>
    6e7c:	85 c0                	test   eax,eax
    6e7e:	89 c5                	mov    ebp,eax
    6e80:	45 8b 3c 24          	mov    r15d,DWORD PTR [r12]
    6e84:	0f 84 b6 00 00 00    	je     6f40 <pipe_fork+0x170>
    6e8a:	80 7c 24 20 00       	cmp    BYTE PTR [rsp+0x20],0x0
    6e8f:	4c 89 35 f2 34 21 00 	mov    QWORD PTR [rip+0x2134f2],r14        # 21a388 <temphead>
    6e96:	0f 85 ab 00 00 00    	jne    6f47 <pipe_fork+0x177>
    6e9c:	85 c0                	test   eax,eax
    6e9e:	45 89 3c 24          	mov    DWORD PTR [r12],r15d
    6ea2:	0f 89 b4 00 00 00    	jns    6f5c <pipe_fork+0x18c>
    6ea8:	41 83 ff 0b          	cmp    r15d,0xb
    6eac:	75 4a                	jne    6ef8 <pipe_fork+0x128>
    6eae:	f2 0f 10 44 24 08    	movsd  xmm0,QWORD PTR [rsp+0x8]
    6eb4:	e8 17 b3 00 00       	call   121d0 <xnanosleep>
    6eb9:	f2 0f 10 54 24 08    	movsd  xmm2,QWORD PTR [rsp+0x8]
    6ebf:	66 0f 28 ca          	movapd xmm1,xmm2
    6ec3:	f2 0f 58 ca          	addsd  xmm1,xmm2
    6ec7:	f2 0f 11 4c 24 08    	movsd  QWORD PTR [rsp+0x8],xmm1
    6ecd:	8b 05 a9 34 21 00    	mov    eax,DWORD PTR [rip+0x2134a9]        # 21a37c <nprocs>
    6ed3:	85 c0                	test   eax,eax
    6ed5:	0f 8e 63 ff ff ff    	jle    6e3e <pipe_fork+0x6e>
    6edb:	31 ff                	xor    edi,edi
    6edd:	e8 3e f7 ff ff       	call   6620 <reap>
    6ee2:	85 c0                	test   eax,eax
    6ee4:	75 e7                	jne    6ecd <pipe_fork+0xfd>
    6ee6:	48 83 eb 01          	sub    rbx,0x1
    6eea:	48 83 fb ff          	cmp    rbx,0xffffffffffffffff
    6eee:	0f 85 58 ff ff ff    	jne    6e4c <pipe_fork+0x7c>
    6ef4:	45 8b 3c 24          	mov    r15d,DWORD PTR [r12]
    6ef8:	48 8b 5c 24 18       	mov    rbx,QWORD PTR [rsp+0x18]
    6efd:	8b 3b                	mov    edi,DWORD PTR [rbx]
    6eff:	e8 ac be ff ff       	call   2db0 <close@plt>
    6f04:	8b 7b 04             	mov    edi,DWORD PTR [rbx+0x4]
    6f07:	e8 a4 be ff ff       	call   2db0 <close@plt>
    6f0c:	45 89 3c 24          	mov    DWORD PTR [r12],r15d
    6f10:	48 8b 8c 24 a8 00 00 	mov    rcx,QWORD PTR [rsp+0xa8]
    6f17:	00 
    6f18:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    6f1f:	00 00 
    6f21:	89 e8                	mov    eax,ebp
    6f23:	0f 85 92 00 00 00    	jne    6fbb <pipe_fork+0x1eb>
    6f29:	48 81 c4 b8 00 00 00 	add    rsp,0xb8
    6f30:	5b                   	pop    rbx
    6f31:	5d                   	pop    rbp
    6f32:	41 5c                	pop    r12
    6f34:	41 5d                	pop    r13
    6f36:	41 5e                	pop    r14
    6f38:	41 5f                	pop    r15
    6f3a:	c3                   	ret    
    6f3b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    6f40:	80 7c 24 20 00       	cmp    BYTE PTR [rsp+0x20],0x0
    6f45:	74 29                	je     6f70 <pipe_fork+0x1a0>
    6f47:	4c 89 ef             	mov    rdi,r13
    6f4a:	89 44 24 14          	mov    DWORD PTR [rsp+0x14],eax
    6f4e:	e8 5d fc ff ff       	call   6bb0 <cs_leave.part.4>
    6f53:	8b 44 24 14          	mov    eax,DWORD PTR [rsp+0x14]
    6f57:	e9 40 ff ff ff       	jmp    6e9c <pipe_fork+0xcc>
    6f5c:	74 12                	je     6f70 <pipe_fork+0x1a0>
    6f5e:	83 05 17 34 21 00 01 	add    DWORD PTR [rip+0x213417],0x1        # 21a37c <nprocs>
    6f65:	eb a9                	jmp    6f10 <pipe_fork+0x140>
    6f67:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    6f6e:	00 00 
    6f70:	31 ff                	xor    edi,edi
    6f72:	31 ed                	xor    ebp,ebp
    6f74:	e8 37 be ff ff       	call   2db0 <close@plt>
    6f79:	bf 01 00 00 00       	mov    edi,0x1
    6f7e:	e8 2d be ff ff       	call   2db0 <close@plt>
    6f83:	eb 8b                	jmp    6f10 <pipe_fork+0x140>
    6f85:	0f 1f 00             	nop    DWORD PTR [rax]
    6f88:	bf ff ff ff ff       	mov    edi,0xffffffff
    6f8d:	e8 8e f6 ff ff       	call   6620 <reap>
    6f92:	8b 15 e4 33 21 00    	mov    edx,DWORD PTR [rip+0x2133e4]        # 21a37c <nprocs>
    6f98:	85 d2                	test   edx,edx
    6f9a:	0f 8e 83 fe ff ff    	jle    6e23 <pipe_fork+0x53>
    6fa0:	31 ff                	xor    edi,edi
    6fa2:	e8 79 f6 ff ff       	call   6620 <reap>
    6fa7:	85 c0                	test   eax,eax
    6fa9:	0f 84 74 fe ff ff    	je     6e23 <pipe_fork+0x53>
    6faf:	eb e1                	jmp    6f92 <pipe_fork+0x1c2>
    6fb1:	bd ff ff ff ff       	mov    ebp,0xffffffff
    6fb6:	e9 55 ff ff ff       	jmp    6f10 <pipe_fork+0x140>
    6fbb:	e8 e0 bc ff ff       	call   2ca0 <__stack_chk_fail@plt>

0000000000006fc0 <parse_field_count>:
    6fc0:	41 54                	push   r12
    6fc2:	55                   	push   rbp
    6fc3:	4c 8d 05 41 e5 00 00 	lea    r8,[rip+0xe541]        # 1550b <short_options+0x163b>
    6fca:	53                   	push   rbx
    6fcb:	48 89 f5             	mov    rbp,rsi
    6fce:	49 89 d4             	mov    r12,rdx
    6fd1:	ba 0a 00 00 00       	mov    edx,0xa
    6fd6:	48 89 fb             	mov    rbx,rdi
    6fd9:	48 83 ec 20          	sub    rsp,0x20
    6fdd:	48 8d 4c 24 10       	lea    rcx,[rsp+0x10]
    6fe2:	48 8d 74 24 08       	lea    rsi,[rsp+0x8]
    6fe7:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6fee:	00 00 
    6ff0:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
    6ff5:	31 c0                	xor    eax,eax
    6ff7:	e8 24 b7 00 00       	call   12720 <xstrtoumax>
    6ffc:	83 f8 04             	cmp    eax,0x4
    6fff:	77 20                	ja     7021 <parse_field_count+0x61>
    7001:	48 8d 15 10 c9 00 00 	lea    rdx,[rip+0xc910]        # 13918 <_IO_stdin_used+0xb8>
    7008:	89 c0                	mov    eax,eax
    700a:	48 63 04 82          	movsxd rax,DWORD PTR [rdx+rax*4]
    700e:	48 01 d0             	add    rax,rdx
    7011:	ff e0                	jmp    rax
    7013:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    7018:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
    701d:	48 89 45 00          	mov    QWORD PTR [rbp+0x0],rax
    7021:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
    7026:	48 8b 5c 24 18       	mov    rbx,QWORD PTR [rsp+0x18]
    702b:	64 48 33 1c 25 28 00 	xor    rbx,QWORD PTR fs:0x28
    7032:	00 00 
    7034:	75 23                	jne    7059 <parse_field_count+0x99>
    7036:	48 83 c4 20          	add    rsp,0x20
    703a:	5b                   	pop    rbx
    703b:	5d                   	pop    rbp
    703c:	41 5c                	pop    r12
    703e:	c3                   	ret    
    703f:	90                   	nop
    7040:	48 c7 45 00 ff ff ff 	mov    QWORD PTR [rbp+0x0],0xffffffffffffffff
    7047:	ff 
    7048:	eb d7                	jmp    7021 <parse_field_count+0x61>
    704a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    7050:	4d 85 e4             	test   r12,r12
    7053:	75 09                	jne    705e <parse_field_count+0x9e>
    7055:	31 c0                	xor    eax,eax
    7057:	eb cd                	jmp    7026 <parse_field_count+0x66>
    7059:	e8 42 bc ff ff       	call   2ca0 <__stack_chk_fail@plt>
    705e:	48 89 df             	mov    rdi,rbx
    7061:	e8 2a 93 00 00       	call   10390 <quote>
    7066:	ba 05 00 00 00       	mov    edx,0x5
    706b:	4c 89 e6             	mov    rsi,r12
    706e:	31 ff                	xor    edi,edi
    7070:	48 89 c5             	mov    rbp,rax
    7073:	e8 f8 bb ff ff       	call   2c70 <dcgettext@plt>
    7078:	48 8d 35 09 cf 00 00 	lea    rsi,[rip+0xcf09]        # 13f88 <short_options+0xb8>
    707f:	48 89 c3             	mov    rbx,rax
    7082:	ba 05 00 00 00       	mov    edx,0x5
    7087:	31 ff                	xor    edi,edi
    7089:	e8 e2 bb ff ff       	call   2c70 <dcgettext@plt>
    708e:	49 89 e8             	mov    r8,rbp
    7091:	48 89 c2             	mov    rdx,rax
    7094:	48 89 d9             	mov    rcx,rbx
    7097:	31 f6                	xor    esi,esi
    7099:	bf 02 00 00 00       	mov    edi,0x2
    709e:	31 c0                	xor    eax,eax
    70a0:	e8 3b bf ff ff       	call   2fe0 <error@plt>
    70a5:	90                   	nop
    70a6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    70ad:	00 00 00 

00000000000070b0 <stream_open>:
    70b0:	55                   	push   rbp
    70b1:	53                   	push   rbx
    70b2:	48 89 fb             	mov    rbx,rdi
    70b5:	48 83 ec 18          	sub    rsp,0x18
    70b9:	0f b6 06             	movzx  eax,BYTE PTR [rsi]
    70bc:	3c 72                	cmp    al,0x72
    70be:	74 30                	je     70f0 <stream_open+0x40>
    70c0:	3c 77                	cmp    al,0x77
    70c2:	0f 85 00 01 00 00    	jne    71c8 <stream_open+0x118>
    70c8:	48 85 ff             	test   rdi,rdi
    70cb:	74 10                	je     70dd <stream_open+0x2d>
    70cd:	31 f6                	xor    esi,esi
    70cf:	bf 01 00 00 00       	mov    edi,0x1
    70d4:	e8 57 bc ff ff       	call   2d30 <ftruncate@plt>
    70d9:	85 c0                	test   eax,eax
    70db:	75 63                	jne    7140 <stream_open+0x90>
    70dd:	48 8b 05 e4 30 21 00 	mov    rax,QWORD PTR [rip+0x2130e4]        # 21a1c8 <stdout@@GLIBC_2.2.5>
    70e4:	48 83 c4 18          	add    rsp,0x18
    70e8:	5b                   	pop    rbx
    70e9:	5d                   	pop    rbp
    70ea:	c3                   	ret    
    70eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    70f0:	48 8d 3d 43 f5 00 00 	lea    rdi,[rip+0xf543]        # 1663a <__PRETTY_FUNCTION__.4162+0x42>
    70f7:	48 89 f5             	mov    rbp,rsi
    70fa:	b9 02 00 00 00       	mov    ecx,0x2
    70ff:	48 89 de             	mov    rsi,rbx
    7102:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    7104:	0f 97 c0             	seta   al
    7107:	1c 00                	sbb    al,0x0
    7109:	84 c0                	test   al,al
    710b:	0f 85 8f 00 00 00    	jne    71a0 <stream_open+0xf0>
    7111:	48 8b 05 b8 30 21 00 	mov    rax,QWORD PTR [rip+0x2130b8]        # 21a1d0 <stdin@@GLIBC_2.2.5>
    7118:	c6 05 19 33 21 00 01 	mov    BYTE PTR [rip+0x213319],0x1        # 21a438 <have_read_stdin>
    711f:	48 89 c7             	mov    rdi,rax
    7122:	be 02 00 00 00       	mov    esi,0x2
    7127:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    712c:	e8 7f 4f 00 00       	call   c0b0 <fadvise>
    7131:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
    7136:	48 83 c4 18          	add    rsp,0x18
    713a:	5b                   	pop    rbx
    713b:	5d                   	pop    rbp
    713c:	c3                   	ret    
    713d:	0f 1f 00             	nop    DWORD PTR [rax]
    7140:	e8 cb b9 ff ff       	call   2b10 <__errno_location@plt>
    7145:	8b 28                	mov    ebp,DWORD PTR [rax]
    7147:	e8 34 f2 ff ff       	call   6380 <get_outstatus>
    714c:	48 85 c0             	test   rax,rax
    714f:	74 13                	je     7164 <stream_open+0xb4>
    7151:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    7154:	25 00 f0 00 00       	and    eax,0xf000
    7159:	3d 00 80 00 00       	cmp    eax,0x8000
    715e:	0f 85 79 ff ff ff    	jne    70dd <stream_open+0x2d>
    7164:	48 89 da             	mov    rdx,rbx
    7167:	be 03 00 00 00       	mov    esi,0x3
    716c:	31 ff                	xor    edi,edi
    716e:	e8 4d 90 00 00       	call   101c0 <quotearg_n_style_colon>
    7173:	48 8d 35 f3 e2 00 00 	lea    rsi,[rip+0xe2f3]        # 1546d <short_options+0x159d>
    717a:	48 89 c3             	mov    rbx,rax
    717d:	ba 05 00 00 00       	mov    edx,0x5
    7182:	31 ff                	xor    edi,edi
    7184:	e8 e7 ba ff ff       	call   2c70 <dcgettext@plt>
    7189:	48 89 d9             	mov    rcx,rbx
    718c:	48 89 c2             	mov    rdx,rax
    718f:	89 ee                	mov    esi,ebp
    7191:	bf 02 00 00 00       	mov    edi,0x2
    7196:	31 c0                	xor    eax,eax
    7198:	e8 43 be ff ff       	call   2fe0 <error@plt>
    719d:	0f 1f 00             	nop    DWORD PTR [rax]
    71a0:	48 89 df             	mov    rdi,rbx
    71a3:	31 c0                	xor    eax,eax
    71a5:	be 00 00 08 00       	mov    esi,0x80000
    71aa:	e8 61 be ff ff       	call   3010 <open@plt>
    71af:	89 c7                	mov    edi,eax
    71b1:	31 c0                	xor    eax,eax
    71b3:	85 ff                	test   edi,edi
    71b5:	0f 88 64 ff ff ff    	js     711f <stream_open+0x6f>
    71bb:	48 89 ee             	mov    rsi,rbp
    71be:	e8 bd bd ff ff       	call   2f80 <fdopen@plt>
    71c3:	e9 57 ff ff ff       	jmp    711f <stream_open+0x6f>
    71c8:	48 8d 0d 89 cb 00 00 	lea    rcx,[rip+0xcb89]        # 13d58 <__PRETTY_FUNCTION__.8484>
    71cf:	48 8d 35 ac e2 00 00 	lea    rsi,[rip+0xe2ac]        # 15482 <short_options+0x15b2>
    71d6:	48 8d 3d d3 cd 00 00 	lea    rdi,[rip+0xcdd3]        # 13fb0 <short_options+0xe0>
    71dd:	ba d6 03 00 00       	mov    edx,0x3d6
    71e2:	e8 89 bb ff ff       	call   2d70 <__assert_fail@plt>
    71e7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    71ee:	00 00 

00000000000071f0 <xfclose>:
    71f0:	55                   	push   rbp
    71f1:	53                   	push   rbx
    71f2:	48 89 f5             	mov    rbp,rsi
    71f5:	48 89 fb             	mov    rbx,rdi
    71f8:	48 83 ec 08          	sub    rsp,0x8
    71fc:	e8 8f bc ff ff       	call   2e90 <fileno@plt>
    7201:	85 c0                	test   eax,eax
    7203:	74 4b                	je     7250 <xfclose+0x60>
    7205:	83 f8 01             	cmp    eax,0x1
    7208:	74 16                	je     7220 <xfclose+0x30>
    720a:	48 89 df             	mov    rdi,rbx
    720d:	e8 2e b9 00 00       	call   12b40 <rpl_fclose>
    7212:	85 c0                	test   eax,eax
    7214:	75 4d                	jne    7263 <xfclose+0x73>
    7216:	48 83 c4 08          	add    rsp,0x8
    721a:	5b                   	pop    rbx
    721b:	5d                   	pop    rbp
    721c:	c3                   	ret    
    721d:	0f 1f 00             	nop    DWORD PTR [rax]
    7220:	48 89 df             	mov    rdi,rbx
    7223:	e8 08 bf ff ff       	call   3130 <fflush_unlocked@plt>
    7228:	85 c0                	test   eax,eax
    722a:	74 ea                	je     7216 <xfclose+0x26>
    722c:	48 8d 35 78 e2 00 00 	lea    rsi,[rip+0xe278]        # 154ab <short_options+0x15db>
    7233:	ba 05 00 00 00       	mov    edx,0x5
    7238:	31 ff                	xor    edi,edi
    723a:	e8 31 ba ff ff       	call   2c70 <dcgettext@plt>
    723f:	48 89 ee             	mov    rsi,rbp
    7242:	48 89 c7             	mov    rdi,rax
    7245:	e8 d6 f0 ff ff       	call   6320 <sort_die>
    724a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    7250:	f6 03 10             	test   BYTE PTR [rbx],0x10
    7253:	74 c1                	je     7216 <xfclose+0x26>
    7255:	48 83 c4 08          	add    rsp,0x8
    7259:	48 89 df             	mov    rdi,rbx
    725c:	5b                   	pop    rbx
    725d:	5d                   	pop    rbp
    725e:	e9 7d b9 ff ff       	jmp    2be0 <clearerr_unlocked@plt>
    7263:	ba 05 00 00 00       	mov    edx,0x5
    7268:	48 8d 35 4a e2 00 00 	lea    rsi,[rip+0xe24a]        # 154b9 <short_options+0x15e9>
    726f:	eb c7                	jmp    7238 <xfclose+0x48>
    7271:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    7276:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    727d:	00 00 00 

0000000000007280 <write_line>:
    7280:	41 57                	push   r15
    7282:	41 56                	push   r14
    7284:	48 89 f1             	mov    rcx,rsi
    7287:	41 55                	push   r13
    7289:	41 54                	push   r12
    728b:	55                   	push   rbp
    728c:	53                   	push   rbx
    728d:	48 89 d5             	mov    rbp,rdx
    7290:	48 83 ec 38          	sub    rsp,0x38
    7294:	4c 8b 3f             	mov    r15,QWORD PTR [rdi]
    7297:	4c 8b 6f 08          	mov    r13,QWORD PTR [rdi+0x8]
    729b:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    72a2:	00 00 
    72a4:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
    72a9:	31 c0                	xor    eax,eax
    72ab:	48 85 d2             	test   rdx,rdx
    72ae:	4b 8d 1c 2f          	lea    rbx,[r15+r13*1]
    72b2:	74 4c                	je     7300 <write_line+0x80>
    72b4:	0f b6 05 7d 2d 21 00 	movzx  eax,BYTE PTR [rip+0x212d7d]        # 21a038 <eolchar>
    72bb:	4c 89 ea             	mov    rdx,r13
    72be:	be 01 00 00 00       	mov    esi,0x1
    72c3:	4c 89 ff             	mov    rdi,r15
    72c6:	88 43 ff             	mov    BYTE PTR [rbx-0x1],al
    72c9:	e8 92 bc ff ff       	call   2f60 <fwrite_unlocked@plt>
    72ce:	49 39 c5             	cmp    r13,rax
    72d1:	0f 85 27 04 00 00    	jne    76fe <write_line+0x47e>
    72d7:	c6 43 ff 00          	mov    BYTE PTR [rbx-0x1],0x0
    72db:	48 8b 44 24 28       	mov    rax,QWORD PTR [rsp+0x28]
    72e0:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    72e7:	00 00 
    72e9:	0f 85 0a 04 00 00    	jne    76f9 <write_line+0x479>
    72ef:	48 83 c4 38          	add    rsp,0x38
    72f3:	5b                   	pop    rbx
    72f4:	5d                   	pop    rbp
    72f5:	41 5c                	pop    r12
    72f7:	41 5d                	pop    r13
    72f9:	41 5e                	pop    r14
    72fb:	41 5f                	pop    r15
    72fd:	c3                   	ret    
    72fe:	66 90                	xchg   ax,ax
    7300:	80 3d 19 31 21 00 00 	cmp    BYTE PTR [rip+0x213119],0x0        # 21a420 <debug>
    7307:	74 ab                	je     72b4 <write_line+0x34>
    7309:	49 39 df             	cmp    r15,rbx
    730c:	49 89 fc             	mov    r12,rdi
    730f:	72 30                	jb     7341 <write_line+0xc1>
    7311:	e9 a3 00 00 00       	jmp    73b9 <write_line+0x139>
    7316:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    731d:	00 00 00 
    7320:	4c 39 fb             	cmp    rbx,r15
    7323:	0f be f0             	movsx  esi,al
    7326:	74 78                	je     73a0 <write_line+0x120>
    7328:	48 8b 51 28          	mov    rdx,QWORD PTR [rcx+0x28]
    732c:	48 39 51 30          	cmp    QWORD PTR [rcx+0x30],rdx
    7330:	76 30                	jbe    7362 <write_line+0xe2>
    7332:	48 8d 72 01          	lea    rsi,[rdx+0x1]
    7336:	48 89 71 28          	mov    QWORD PTR [rcx+0x28],rsi
    733a:	88 02                	mov    BYTE PTR [rdx],al
    733c:	4c 39 fb             	cmp    rbx,r15
    733f:	74 6f                	je     73b0 <write_line+0x130>
    7341:	49 83 c7 01          	add    r15,0x1
    7345:	41 0f b6 47 ff       	movzx  eax,BYTE PTR [r15-0x1]
    734a:	3c 09                	cmp    al,0x9
    734c:	75 d2                	jne    7320 <write_line+0xa0>
    734e:	48 8b 51 28          	mov    rdx,QWORD PTR [rcx+0x28]
    7352:	48 39 51 30          	cmp    QWORD PTR [rcx+0x30],rdx
    7356:	be 3e 00 00 00       	mov    esi,0x3e
    735b:	b8 3e 00 00 00       	mov    eax,0x3e
    7360:	77 d0                	ja     7332 <write_line+0xb2>
    7362:	48 89 cf             	mov    rdi,rcx
    7365:	40 0f b6 f6          	movzx  esi,sil
    7369:	48 89 0c 24          	mov    QWORD PTR [rsp],rcx
    736d:	e8 9e b9 ff ff       	call   2d10 <__overflow@plt>
    7372:	83 f8 ff             	cmp    eax,0xffffffff
    7375:	48 8b 0c 24          	mov    rcx,QWORD PTR [rsp]
    7379:	75 c1                	jne    733c <write_line+0xbc>
    737b:	48 8d 35 44 e1 00 00 	lea    rsi,[rip+0xe144]        # 154c6 <short_options+0x15f6>
    7382:	31 ff                	xor    edi,edi
    7384:	ba 05 00 00 00       	mov    edx,0x5
    7389:	e8 e2 b8 ff ff       	call   2c70 <dcgettext@plt>
    738e:	31 f6                	xor    esi,esi
    7390:	48 89 c7             	mov    rdi,rax
    7393:	e8 88 ef ff ff       	call   6320 <sort_die>
    7398:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    739f:	00 
    73a0:	be 0a 00 00 00       	mov    esi,0xa
    73a5:	b8 0a 00 00 00       	mov    eax,0xa
    73aa:	e9 79 ff ff ff       	jmp    7328 <write_line+0xa8>
    73af:	90                   	nop
    73b0:	4d 8b 3c 24          	mov    r15,QWORD PTR [r12]
    73b4:	4d 8b 6c 24 08       	mov    r13,QWORD PTR [r12+0x8]
    73b9:	4c 8b 35 70 30 21 00 	mov    r14,QWORD PTR [rip+0x213070]        # 21a430 <keylist>
    73c0:	48 8d 2d 99 33 21 00 	lea    rbp,[rip+0x213399]        # 21a760 <blanks>
    73c7:	4f 8d 4c 2f ff       	lea    r9,[r15+r13*1-0x1]
    73cc:	4d 85 f6             	test   r14,r14
    73cf:	0f 84 fa 01 00 00    	je     75cf <write_line+0x34f>
    73d5:	0f 1f 00             	nop    DWORD PTR [rax]
    73d8:	4d 8b 1e             	mov    r11,QWORD PTR [r14]
    73db:	4d 8b 56 10          	mov    r10,QWORD PTR [r14+0x10]
    73df:	49 83 fb ff          	cmp    r11,0xffffffffffffffff
    73e3:	0f 84 87 02 00 00    	je     7670 <write_line+0x3f0>
    73e9:	4c 89 f2             	mov    rdx,r14
    73ec:	4c 89 ee             	mov    rsi,r13
    73ef:	4c 89 ff             	mov    rdi,r15
    73f2:	4c 89 54 24 08       	mov    QWORD PTR [rsp+0x8],r10
    73f7:	4c 89 0c 24          	mov    QWORD PTR [rsp],r9
    73fb:	e8 70 f5 ff ff       	call   6970 <begfield.isra.1>
    7400:	4c 8b 54 24 08       	mov    r10,QWORD PTR [rsp+0x8]
    7405:	48 89 c3             	mov    rbx,rax
    7408:	4c 8b 0c 24          	mov    r9,QWORD PTR [rsp]
    740c:	49 83 fa ff          	cmp    r10,0xffffffffffffffff
    7410:	74 1e                	je     7430 <write_line+0x1b0>
    7412:	4c 89 f2             	mov    rdx,r14
    7415:	4c 89 ee             	mov    rsi,r13
    7418:	4c 89 ff             	mov    rdi,r15
    741b:	e8 40 f6 ff ff       	call   6a60 <limfield.isra.2>
    7420:	49 89 c1             	mov    r9,rax
    7423:	41 80 7e 30 00       	cmp    BYTE PTR [r14+0x30],0x0
    7428:	74 06                	je     7430 <write_line+0x1b0>
    742a:	49 83 fb ff          	cmp    r11,0xffffffffffffffff
    742e:	74 1b                	je     744b <write_line+0x1cb>
    7430:	41 80 7e 36 00       	cmp    BYTE PTR [r14+0x36],0x0
    7435:	75 14                	jne    744b <write_line+0x1cb>
    7437:	48 b8 00 00 ff 00 ff 	movabs rax,0xffff00ff0000
    743e:	ff 00 00 
    7441:	49 85 46 30          	test   QWORD PTR [r14+0x30],rax
    7445:	0f 84 ad 00 00 00    	je     74f8 <write_line+0x278>
    744b:	45 0f b6 29          	movzx  r13d,BYTE PTR [r9]
    744f:	41 c6 01 00          	mov    BYTE PTR [r9],0x0
    7453:	0f b6 03             	movzx  eax,BYTE PTR [rbx]
    7456:	80 7c 05 00 00       	cmp    BYTE PTR [rbp+rax*1+0x0],0x0
    745b:	74 11                	je     746e <write_line+0x1ee>
    745d:	0f 1f 00             	nop    DWORD PTR [rax]
    7460:	48 83 c3 01          	add    rbx,0x1
    7464:	0f b6 03             	movzx  eax,BYTE PTR [rbx]
    7467:	80 7c 05 00 00       	cmp    BYTE PTR [rbp+rax*1+0x0],0x0
    746c:	75 f2                	jne    7460 <write_line+0x1e0>
    746e:	49 39 d9             	cmp    r9,rbx
    7471:	48 89 5c 24 18       	mov    QWORD PTR [rsp+0x18],rbx
    7476:	0f 82 84 01 00 00    	jb     7600 <write_line+0x380>
    747c:	41 80 7e 36 00       	cmp    BYTE PTR [r14+0x36],0x0
    7481:	0f 85 01 02 00 00    	jne    7688 <write_line+0x408>
    7487:	41 80 7e 34 00       	cmp    BYTE PTR [r14+0x34],0x0
    748c:	0f 85 2e 02 00 00    	jne    76c0 <write_line+0x440>
    7492:	48 b8 00 00 ff 00 00 	movabs rax,0xff0000ff0000
    7499:	ff 00 00 
    749c:	49 85 46 30          	test   QWORD PTR [r14+0x30],rax
    74a0:	0f 84 5a 01 00 00    	je     7600 <write_line+0x380>
    74a6:	49 39 d9             	cmp    r9,rbx
    74a9:	48 89 d8             	mov    rax,rbx
    74ac:	76 0b                	jbe    74b9 <write_line+0x239>
    74ae:	31 c0                	xor    eax,eax
    74b0:	80 3b 2d             	cmp    BYTE PTR [rbx],0x2d
    74b3:	0f 94 c0             	sete   al
    74b6:	48 01 d8             	add    rax,rbx
    74b9:	48 8d 7c 24 20       	lea    rdi,[rsp+0x20]
    74be:	4c 89 0c 24          	mov    QWORD PTR [rsp],r9
    74c2:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
    74c7:	e8 b4 e9 ff ff       	call   5e80 <traverse_raw_number>
    74cc:	3c 2f                	cmp    al,0x2f
    74ce:	4c 8b 0c 24          	mov    r9,QWORD PTR [rsp]
    74d2:	76 1c                	jbe    74f0 <write_line+0x270>
    74d4:	41 80 7e 35 00       	cmp    BYTE PTR [r14+0x35],0x0
    74d9:	48 8b 44 24 20       	mov    rax,QWORD PTR [rsp+0x20]
    74de:	0f 85 f8 01 00 00    	jne    76dc <write_line+0x45c>
    74e4:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
    74e9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    74f0:	45 88 29             	mov    BYTE PTR [r9],r13b
    74f3:	4c 8b 4c 24 18       	mov    r9,QWORD PTR [rsp+0x18]
    74f8:	4c 8d 2d d4 df 00 00 	lea    r13,[rip+0xdfd4]        # 154d3 <short_options+0x1603>
    74ff:	48 89 de             	mov    rsi,rbx
    7502:	4c 89 ff             	mov    rdi,r15
    7505:	4c 89 0c 24          	mov    QWORD PTR [rsp],r9
    7509:	e8 12 f0 ff ff       	call   6520 <debug_width>
    750e:	4c 8b 0c 24          	mov    r9,QWORD PTR [rsp]
    7512:	48 89 df             	mov    rdi,rbx
    7515:	49 89 c7             	mov    r15,rax
    7518:	4c 89 ce             	mov    rsi,r9
    751b:	e8 00 f0 ff ff       	call   6520 <debug_width>
    7520:	48 89 c3             	mov    rbx,rax
    7523:	49 83 ef 01          	sub    r15,0x1
    7527:	49 83 ff ff          	cmp    r15,0xffffffffffffffff
    752b:	74 2a                	je     7557 <write_line+0x2d7>
    752d:	48 8b 3d 94 2c 21 00 	mov    rdi,QWORD PTR [rip+0x212c94]        # 21a1c8 <stdout@@GLIBC_2.2.5>
    7534:	48 8b 47 28          	mov    rax,QWORD PTR [rdi+0x28]
    7538:	48 3b 47 30          	cmp    rax,QWORD PTR [rdi+0x30]
    753c:	0f 83 9e 00 00 00    	jae    75e0 <write_line+0x360>
    7542:	48 8d 70 01          	lea    rsi,[rax+0x1]
    7546:	49 83 ef 01          	sub    r15,0x1
    754a:	49 83 ff ff          	cmp    r15,0xffffffffffffffff
    754e:	48 89 77 28          	mov    QWORD PTR [rdi+0x28],rsi
    7552:	c6 00 20             	mov    BYTE PTR [rax],0x20
    7555:	75 d6                	jne    752d <write_line+0x2ad>
    7557:	48 85 db             	test   rbx,rbx
    755a:	0f 84 b0 00 00 00    	je     7610 <write_line+0x390>
    7560:	48 8b 3d 61 2c 21 00 	mov    rdi,QWORD PTR [rip+0x212c61]        # 21a1c8 <stdout@@GLIBC_2.2.5>
    7567:	48 8b 47 28          	mov    rax,QWORD PTR [rdi+0x28]
    756b:	48 3b 47 30          	cmp    rax,QWORD PTR [rdi+0x30]
    756f:	73 7f                	jae    75f0 <write_line+0x370>
    7571:	48 8d 50 01          	lea    rdx,[rax+0x1]
    7575:	48 89 57 28          	mov    QWORD PTR [rdi+0x28],rdx
    7579:	c6 00 5f             	mov    BYTE PTR [rax],0x5f
    757c:	48 83 eb 01          	sub    rbx,0x1
    7580:	75 de                	jne    7560 <write_line+0x2e0>
    7582:	48 8b 3d 3f 2c 21 00 	mov    rdi,QWORD PTR [rip+0x212c3f]        # 21a1c8 <stdout@@GLIBC_2.2.5>
    7589:	48 8b 47 28          	mov    rax,QWORD PTR [rdi+0x28]
    758d:	48 3b 47 30          	cmp    rax,QWORD PTR [rdi+0x30]
    7591:	0f 83 11 01 00 00    	jae    76a8 <write_line+0x428>
    7597:	48 8d 50 01          	lea    rdx,[rax+0x1]
    759b:	48 89 57 28          	mov    QWORD PTR [rdi+0x28],rdx
    759f:	c6 00 0a             	mov    BYTE PTR [rax],0xa
    75a2:	4d 85 f6             	test   r14,r14
    75a5:	0f 84 30 fd ff ff    	je     72db <write_line+0x5b>
    75ab:	4d 8b 76 40          	mov    r14,QWORD PTR [r14+0x40]
    75af:	4d 85 f6             	test   r14,r14
    75b2:	0f 84 80 00 00 00    	je     7638 <write_line+0x3b8>
    75b8:	4d 8b 3c 24          	mov    r15,QWORD PTR [r12]
    75bc:	4d 8b 6c 24 08       	mov    r13,QWORD PTR [r12+0x8]
    75c1:	4d 85 f6             	test   r14,r14
    75c4:	4f 8d 4c 2f ff       	lea    r9,[r15+r13*1-0x1]
    75c9:	0f 85 09 fe ff ff    	jne    73d8 <write_line+0x158>
    75cf:	4c 89 fb             	mov    rbx,r15
    75d2:	e9 21 ff ff ff       	jmp    74f8 <write_line+0x278>
    75d7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    75de:	00 00 
    75e0:	be 20 00 00 00       	mov    esi,0x20
    75e5:	e8 26 b7 ff ff       	call   2d10 <__overflow@plt>
    75ea:	e9 34 ff ff ff       	jmp    7523 <write_line+0x2a3>
    75ef:	90                   	nop
    75f0:	be 5f 00 00 00       	mov    esi,0x5f
    75f5:	e8 16 b7 ff ff       	call   2d10 <__overflow@plt>
    75fa:	eb 80                	jmp    757c <write_line+0x2fc>
    75fc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    7600:	4c 89 4c 24 18       	mov    QWORD PTR [rsp+0x18],r9
    7605:	e9 e6 fe ff ff       	jmp    74f0 <write_line+0x270>
    760a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    7610:	4c 89 ee             	mov    rsi,r13
    7613:	31 ff                	xor    edi,edi
    7615:	ba 05 00 00 00       	mov    edx,0x5
    761a:	e8 51 b6 ff ff       	call   2c70 <dcgettext@plt>
    761f:	bf 01 00 00 00       	mov    edi,0x1
    7624:	48 89 c6             	mov    rsi,rax
    7627:	31 c0                	xor    eax,eax
    7629:	e8 72 b9 ff ff       	call   2fa0 <__printf_chk@plt>
    762e:	e9 6f ff ff ff       	jmp    75a2 <write_line+0x322>
    7633:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    7638:	80 3d fa 2d 21 00 00 	cmp    BYTE PTR [rip+0x212dfa],0x0        # 21a439 <unique>
    763f:	0f 85 96 fc ff ff    	jne    72db <write_line+0x5b>
    7645:	80 3d ee 2d 21 00 00 	cmp    BYTE PTR [rip+0x212dee],0x0        # 21a43a <stable>
    764c:	0f 85 89 fc ff ff    	jne    72db <write_line+0x5b>
    7652:	49 8b 1c 24          	mov    rbx,QWORD PTR [r12]
    7656:	49 8b 44 24 08       	mov    rax,QWORD PTR [r12+0x8]
    765b:	49 89 df             	mov    r15,rbx
    765e:	4c 8d 4c 03 ff       	lea    r9,[rbx+rax*1-0x1]
    7663:	e9 97 fe ff ff       	jmp    74ff <write_line+0x27f>
    7668:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    766f:	00 
    7670:	49 83 fa ff          	cmp    r10,0xffffffffffffffff
    7674:	4c 89 fb             	mov    rbx,r15
    7677:	0f 85 95 fd ff ff    	jne    7412 <write_line+0x192>
    767d:	e9 a1 fd ff ff       	jmp    7423 <write_line+0x1a3>
    7682:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    7688:	48 8d 74 24 18       	lea    rsi,[rsp+0x18]
    768d:	48 89 df             	mov    rdi,rbx
    7690:	4c 89 0c 24          	mov    QWORD PTR [rsp],r9
    7694:	e8 17 e9 ff ff       	call   5fb0 <getmonth>
    7699:	4c 8b 0c 24          	mov    r9,QWORD PTR [rsp]
    769d:	e9 4e fe ff ff       	jmp    74f0 <write_line+0x270>
    76a2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    76a8:	be 0a 00 00 00       	mov    esi,0xa
    76ad:	e8 5e b6 ff ff       	call   2d10 <__overflow@plt>
    76b2:	e9 eb fe ff ff       	jmp    75a2 <write_line+0x322>
    76b7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    76be:	00 00 
    76c0:	48 8d 74 24 18       	lea    rsi,[rsp+0x18]
    76c5:	48 89 df             	mov    rdi,rbx
    76c8:	4c 89 0c 24          	mov    QWORD PTR [rsp],r9
    76cc:	e8 ff b8 ff ff       	call   2fd0 <strtold@plt>
    76d1:	dd d8                	fstp   st(0)
    76d3:	4c 8b 0c 24          	mov    r9,QWORD PTR [rsp]
    76d7:	e9 14 fe ff ff       	jmp    74f0 <write_line+0x270>
    76dc:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    76df:	48 8d 0d da c6 00 00 	lea    rcx,[rip+0xc6da]        # 13dc0 <unit_order>
    76e6:	80 3c 11 00          	cmp    BYTE PTR [rcx+rdx*1],0x0
    76ea:	0f 84 f4 fd ff ff    	je     74e4 <write_line+0x264>
    76f0:	48 83 c0 01          	add    rax,0x1
    76f4:	e9 eb fd ff ff       	jmp    74e4 <write_line+0x264>
    76f9:	e8 a2 b5 ff ff       	call   2ca0 <__stack_chk_fail@plt>
    76fe:	48 8d 35 c1 dd 00 00 	lea    rsi,[rip+0xddc1]        # 154c6 <short_options+0x15f6>
    7705:	31 ff                	xor    edi,edi
    7707:	ba 05 00 00 00       	mov    edx,0x5
    770c:	e8 5f b5 ff ff       	call   2c70 <dcgettext@plt>
    7711:	48 89 ee             	mov    rsi,rbp
    7714:	48 89 c7             	mov    rdi,rax
    7717:	e8 04 ec ff ff       	call   6320 <sort_die>
    771c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000007720 <keycompare>:
    7720:	41 57                	push   r15
    7722:	41 56                	push   r14
    7724:	4c 8d 35 35 30 21 00 	lea    r14,[rip+0x213035]        # 21a760 <blanks>
    772b:	41 55                	push   r13
    772d:	41 54                	push   r12
    772f:	55                   	push   rbp
    7730:	53                   	push   rbx
    7731:	48 81 ec a8 21 00 00 	sub    rsp,0x21a8
    7738:	48 8b 6f 18          	mov    rbp,QWORD PTR [rdi+0x18]
    773c:	4c 8b 47 10          	mov    r8,QWORD PTR [rdi+0x10]
    7740:	48 8d 84 24 10 01 00 	lea    rax,[rsp+0x110]
    7747:	00 
    7748:	48 8b 4e 18          	mov    rcx,QWORD PTR [rsi+0x18]
    774c:	4c 8b 3d dd 2c 21 00 	mov    r15,QWORD PTR [rip+0x212cdd]        # 21a430 <keylist>
    7753:	48 8b 5e 10          	mov    rbx,QWORD PTR [rsi+0x10]
    7757:	48 89 7c 24 38       	mov    QWORD PTR [rsp+0x38],rdi
    775c:	48 89 44 24 78       	mov    QWORD PTR [rsp+0x78],rax
    7761:	48 8d 84 24 ac 01 00 	lea    rax,[rsp+0x1ac]
    7768:	00 
    7769:	49 89 eb             	mov    r11,rbp
    776c:	64 48 8b 14 25 28 00 	mov    rdx,QWORD PTR fs:0x28
    7773:	00 00 
    7775:	48 89 94 24 98 21 00 	mov    QWORD PTR [rsp+0x2198],rdx
    777c:	00 
    777d:	31 d2                	xor    edx,edx
    777f:	48 89 74 24 40       	mov    QWORD PTR [rsp+0x40],rsi
    7784:	48 89 84 24 80 00 00 	mov    QWORD PTR [rsp+0x80],rax
    778b:	00 
    778c:	4d 89 c4             	mov    r12,r8
    778f:	48 89 cd             	mov    rbp,rcx
    7792:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    7798:	4d 39 dc             	cmp    r12,r11
    779b:	4c 89 d9             	mov    rcx,r11
    779e:	48 89 e8             	mov    rax,rbp
    77a1:	49 0f 43 cc          	cmovae rcx,r12
    77a5:	48 39 eb             	cmp    rbx,rbp
    77a8:	49 8b 57 28          	mov    rdx,QWORD PTR [r15+0x28]
    77ac:	48 0f 43 c3          	cmovae rax,rbx
    77b0:	48 89 cd             	mov    rbp,rcx
    77b3:	4d 8b 6f 20          	mov    r13,QWORD PTR [r15+0x20]
    77b7:	49 89 c1             	mov    r9,rax
    77ba:	4c 29 e5             	sub    rbp,r12
    77bd:	49 29 d9             	sub    r9,rbx
    77c0:	80 3d ba 30 21 00 00 	cmp    BYTE PTR [rip+0x2130ba],0x0        # 21a881 <hard_LC_COLLATE>
    77c7:	75 14                	jne    77dd <keycompare+0xbd>
    77c9:	48 be 00 00 ff ff ff 	movabs rsi,0xffffffffff0000
    77d0:	ff ff 00 
    77d3:	49 85 77 30          	test   QWORD PTR [r15+0x30],rsi
    77d7:	0f 84 a3 04 00 00    	je     7c80 <keycompare+0x560>
    77dd:	4d 85 ed             	test   r13,r13
    77e0:	40 0f 95 c7          	setne  dil
    77e4:	48 85 d2             	test   rdx,rdx
    77e7:	40 0f 95 c6          	setne  sil
    77eb:	40 08 f7             	or     dil,sil
    77ee:	40 88 7c 24 08       	mov    BYTE PTR [rsp+0x8],dil
    77f3:	0f 85 47 01 00 00    	jne    7940 <keycompare+0x220>
    77f9:	0f b6 11             	movzx  edx,BYTE PTR [rcx]
    77fc:	c6 01 00             	mov    BYTE PTR [rcx],0x0
    77ff:	0f b6 08             	movzx  ecx,BYTE PTR [rax]
    7802:	c6 00 00             	mov    BYTE PTR [rax],0x0
    7805:	41 80 7f 32 00       	cmp    BYTE PTR [r15+0x32],0x0
    780a:	88 54 24 36          	mov    BYTE PTR [rsp+0x36],dl
    780e:	88 4c 24 37          	mov    BYTE PTR [rsp+0x37],cl
    7812:	0f 85 f5 01 00 00    	jne    7a0d <keycompare+0x2ed>
    7818:	41 80 7f 34 00       	cmp    BYTE PTR [r15+0x34],0x0
    781d:	0f 85 25 03 00 00    	jne    7b48 <keycompare+0x428>
    7823:	41 80 7f 35 00       	cmp    BYTE PTR [r15+0x35],0x0
    7828:	0f 85 b2 03 00 00    	jne    7be0 <keycompare+0x4c0>
    782e:	41 80 7f 36 00       	cmp    BYTE PTR [r15+0x36],0x0
    7833:	0f 85 bf 05 00 00    	jne    7df8 <keycompare+0x6d8>
    7839:	41 80 7f 33 00       	cmp    BYTE PTR [r15+0x33],0x0
    783e:	0f 85 04 06 00 00    	jne    7e48 <keycompare+0x728>
    7844:	41 80 7f 38 00       	cmp    BYTE PTR [r15+0x38],0x0
    7849:	0f 84 d9 05 00 00    	je     7e28 <keycompare+0x708>
    784f:	48 89 de             	mov    rsi,rbx
    7852:	4c 89 e7             	mov    rdi,r12
    7855:	4c 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],r9
    785a:	e8 51 49 00 00       	call   c1b0 <filevercmp>
    785f:	4c 8b 4c 24 10       	mov    r9,QWORD PTR [rsp+0x10]
    7864:	41 89 c0             	mov    r8d,eax
    7867:	eb 1f                	jmp    7888 <keycompare+0x168>
    7869:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    7870:	dd d8                	fstp   st(0)
    7872:	dd d8                	fstp   st(0)
    7874:	eb 12                	jmp    7888 <keycompare+0x168>
    7876:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    787d:	00 00 00 
    7880:	dd d8                	fstp   st(0)
    7882:	dd d8                	fstp   st(0)
    7884:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    7888:	80 7c 24 08 00       	cmp    BYTE PTR [rsp+0x8],0x0
    788d:	0f 85 e4 01 00 00    	jne    7a77 <keycompare+0x357>
    7893:	0f b6 44 24 36       	movzx  eax,BYTE PTR [rsp+0x36]
    7898:	41 88 04 2c          	mov    BYTE PTR [r12+rbp*1],al
    789c:	0f b6 44 24 37       	movzx  eax,BYTE PTR [rsp+0x37]
    78a1:	42 88 04 0b          	mov    BYTE PTR [rbx+r9*1],al
    78a5:	45 85 c0             	test   r8d,r8d
    78a8:	0f 85 ea 01 00 00    	jne    7a98 <keycompare+0x378>
    78ae:	4d 8b 7f 40          	mov    r15,QWORD PTR [r15+0x40]
    78b2:	4d 85 ff             	test   r15,r15
    78b5:	0f 84 a5 0c 00 00    	je     8560 <keycompare+0xe40>
    78bb:	48 8b 44 24 38       	mov    rax,QWORD PTR [rsp+0x38]
    78c0:	49 83 7f 10 ff       	cmp    QWORD PTR [r15+0x10],0xffffffffffffffff
    78c5:	4c 8b 20             	mov    r12,QWORD PTR [rax]
    78c8:	4c 8b 68 08          	mov    r13,QWORD PTR [rax+0x8]
    78cc:	48 8b 44 24 40       	mov    rax,QWORD PTR [rsp+0x40]
    78d1:	48 8b 68 08          	mov    rbp,QWORD PTR [rax+0x8]
    78d5:	48 8b 18             	mov    rbx,QWORD PTR [rax]
    78d8:	48 89 6c 24 08       	mov    QWORD PTR [rsp+0x8],rbp
    78dd:	0f 84 4d 02 00 00    	je     7b30 <keycompare+0x410>
    78e3:	4c 89 fa             	mov    rdx,r15
    78e6:	4c 89 ee             	mov    rsi,r13
    78e9:	4c 89 e7             	mov    rdi,r12
    78ec:	e8 6f f1 ff ff       	call   6a60 <limfield.isra.2>
    78f1:	48 89 ee             	mov    rsi,rbp
    78f4:	4c 89 fa             	mov    rdx,r15
    78f7:	48 89 df             	mov    rdi,rbx
    78fa:	49 89 c3             	mov    r11,rax
    78fd:	e8 5e f1 ff ff       	call   6a60 <limfield.isra.2>
    7902:	48 89 c5             	mov    rbp,rax
    7905:	49 83 3f ff          	cmp    QWORD PTR [r15],0xffffffffffffffff
    7909:	0f 84 c1 01 00 00    	je     7ad0 <keycompare+0x3b0>
    790f:	4c 89 e7             	mov    rdi,r12
    7912:	4c 89 fa             	mov    rdx,r15
    7915:	4c 89 ee             	mov    rsi,r13
    7918:	e8 53 f0 ff ff       	call   6970 <begfield.isra.1>
    791d:	48 8b 74 24 08       	mov    rsi,QWORD PTR [rsp+0x8]
    7922:	48 89 df             	mov    rdi,rbx
    7925:	4c 89 fa             	mov    rdx,r15
    7928:	49 89 c4             	mov    r12,rax
    792b:	e8 40 f0 ff ff       	call   6970 <begfield.isra.1>
    7930:	48 89 c3             	mov    rbx,rax
    7933:	e9 60 fe ff ff       	jmp    7798 <keycompare+0x78>
    7938:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    793f:	00 
    7940:	4a 8d 7c 0d 02       	lea    rdi,[rbp+r9*1+0x2]
    7945:	48 81 ff a0 0f 00 00 	cmp    rdi,0xfa0
    794c:	0f 87 2e 04 00 00    	ja     7d80 <keycompare+0x660>
    7952:	48 8d b4 24 50 02 00 	lea    rsi,[rsp+0x250]
    7959:	00 
    795a:	48 85 ed             	test   rbp,rbp
    795d:	48 c7 44 24 58 00 00 	mov    QWORD PTR [rsp+0x58],0x0
    7964:	00 00 
    7966:	48 8d 7c 2e 01       	lea    rdi,[rsi+rbp*1+0x1]
    796b:	0f 84 3e 04 00 00    	je     7daf <keycompare+0x68f>
    7971:	4d 8d 14 2c          	lea    r10,[r12+rbp*1]
    7975:	31 ed                	xor    ebp,ebp
    7977:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    797e:	00 00 
    7980:	4d 85 ed             	test   r13,r13
    7983:	41 0f b6 04 24       	movzx  eax,BYTE PTR [r12]
    7988:	74 0b                	je     7995 <keycompare+0x275>
    798a:	0f b6 c8             	movzx  ecx,al
    798d:	41 80 7c 0d 00 00    	cmp    BYTE PTR [r13+rcx*1+0x0],0x0
    7993:	75 10                	jne    79a5 <keycompare+0x285>
    7995:	48 85 d2             	test   rdx,rdx
    7998:	74 04                	je     799e <keycompare+0x27e>
    799a:	0f b6 04 02          	movzx  eax,BYTE PTR [rdx+rax*1]
    799e:	88 04 2e             	mov    BYTE PTR [rsi+rbp*1],al
    79a1:	48 83 c5 01          	add    rbp,0x1
    79a5:	49 83 c4 01          	add    r12,0x1
    79a9:	4d 39 e2             	cmp    r10,r12
    79ac:	75 d2                	jne    7980 <keycompare+0x260>
    79ae:	48 8d 04 2e          	lea    rax,[rsi+rbp*1]
    79b2:	4d 85 c9             	test   r9,r9
    79b5:	c6 00 00             	mov    BYTE PTR [rax],0x0
    79b8:	0f 84 02 04 00 00    	je     7dc0 <keycompare+0x6a0>
    79be:	4e 8d 14 0b          	lea    r10,[rbx+r9*1]
    79c2:	45 31 c9             	xor    r9d,r9d
    79c5:	0f 1f 00             	nop    DWORD PTR [rax]
    79c8:	4d 85 ed             	test   r13,r13
    79cb:	0f b6 03             	movzx  eax,BYTE PTR [rbx]
    79ce:	74 0b                	je     79db <keycompare+0x2bb>
    79d0:	0f b6 c8             	movzx  ecx,al
    79d3:	41 80 7c 0d 00 00    	cmp    BYTE PTR [r13+rcx*1+0x0],0x0
    79d9:	75 11                	jne    79ec <keycompare+0x2cc>
    79db:	48 85 d2             	test   rdx,rdx
    79de:	74 04                	je     79e4 <keycompare+0x2c4>
    79e0:	0f b6 04 02          	movzx  eax,BYTE PTR [rdx+rax*1]
    79e4:	42 88 04 0f          	mov    BYTE PTR [rdi+r9*1],al
    79e8:	49 83 c1 01          	add    r9,0x1
    79ec:	48 83 c3 01          	add    rbx,0x1
    79f0:	49 39 da             	cmp    r10,rbx
    79f3:	75 d3                	jne    79c8 <keycompare+0x2a8>
    79f5:	4a 8d 04 0f          	lea    rax,[rdi+r9*1]
    79f9:	c6 00 00             	mov    BYTE PTR [rax],0x0
    79fc:	41 80 7f 32 00       	cmp    BYTE PTR [r15+0x32],0x0
    7a01:	48 89 fb             	mov    rbx,rdi
    7a04:	49 89 f4             	mov    r12,rsi
    7a07:	0f 84 0b fe ff ff    	je     7818 <keycompare+0xf8>
    7a0d:	41 0f b6 04 24       	movzx  eax,BYTE PTR [r12]
    7a12:	4c 89 e7             	mov    rdi,r12
    7a15:	41 80 3c 06 00       	cmp    BYTE PTR [r14+rax*1],0x0
    7a1a:	74 12                	je     7a2e <keycompare+0x30e>
    7a1c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    7a20:	48 83 c7 01          	add    rdi,0x1
    7a24:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
    7a27:	41 80 3c 06 00       	cmp    BYTE PTR [r14+rax*1],0x0
    7a2c:	75 f2                	jne    7a20 <keycompare+0x300>
    7a2e:	0f b6 03             	movzx  eax,BYTE PTR [rbx]
    7a31:	48 89 de             	mov    rsi,rbx
    7a34:	41 80 3c 06 00       	cmp    BYTE PTR [r14+rax*1],0x0
    7a39:	74 13                	je     7a4e <keycompare+0x32e>
    7a3b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    7a40:	48 83 c6 01          	add    rsi,0x1
    7a44:	0f b6 06             	movzx  eax,BYTE PTR [rsi]
    7a47:	41 80 3c 06 00       	cmp    BYTE PTR [r14+rax*1],0x0
    7a4c:	75 f2                	jne    7a40 <keycompare+0x320>
    7a4e:	8b 0d 30 2e 21 00    	mov    ecx,DWORD PTR [rip+0x212e30]        # 21a884 <thousands_sep>
    7a54:	8b 15 2e 2e 21 00    	mov    edx,DWORD PTR [rip+0x212e2e]        # 21a888 <decimal_point>
    7a5a:	4c 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],r9
    7a5f:	e8 9c 97 00 00       	call   11200 <strnumcmp>
    7a64:	80 7c 24 08 00       	cmp    BYTE PTR [rsp+0x8],0x0
    7a69:	41 89 c0             	mov    r8d,eax
    7a6c:	4c 8b 4c 24 10       	mov    r9,QWORD PTR [rsp+0x10]
    7a71:	0f 84 1c fe ff ff    	je     7893 <keycompare+0x173>
    7a77:	48 8b 7c 24 58       	mov    rdi,QWORD PTR [rsp+0x58]
    7a7c:	44 89 44 24 08       	mov    DWORD PTR [rsp+0x8],r8d
    7a81:	e8 3a b7 ff ff       	call   31c0 <free@plt>
    7a86:	44 8b 44 24 08       	mov    r8d,DWORD PTR [rsp+0x8]
    7a8b:	45 85 c0             	test   r8d,r8d
    7a8e:	0f 84 1a fe ff ff    	je     78ae <keycompare+0x18e>
    7a94:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    7a98:	44 89 c5             	mov    ebp,r8d
    7a9b:	41 80 7f 37 00       	cmp    BYTE PTR [r15+0x37],0x0
    7aa0:	74 02                	je     7aa4 <keycompare+0x384>
    7aa2:	f7 dd                	neg    ebp
    7aa4:	48 8b 8c 24 98 21 00 	mov    rcx,QWORD PTR [rsp+0x2198]
    7aab:	00 
    7aac:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    7ab3:	00 00 
    7ab5:	89 e8                	mov    eax,ebp
    7ab7:	0f 85 1c 0c 00 00    	jne    86d9 <keycompare+0xfb9>
    7abd:	48 81 c4 a8 21 00 00 	add    rsp,0x21a8
    7ac4:	5b                   	pop    rbx
    7ac5:	5d                   	pop    rbp
    7ac6:	41 5c                	pop    r12
    7ac8:	41 5d                	pop    r13
    7aca:	41 5e                	pop    r14
    7acc:	41 5f                	pop    r15
    7ace:	c3                   	ret    
    7acf:	90                   	nop
    7ad0:	41 80 7f 30 00       	cmp    BYTE PTR [r15+0x30],0x0
    7ad5:	0f 84 bd fc ff ff    	je     7798 <keycompare+0x78>
    7adb:	4d 39 e3             	cmp    r11,r12
    7ade:	77 15                	ja     7af5 <keycompare+0x3d5>
    7ae0:	eb 1f                	jmp    7b01 <keycompare+0x3e1>
    7ae2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    7ae8:	49 83 c4 01          	add    r12,0x1
    7aec:	4d 39 e3             	cmp    r11,r12
    7aef:	0f 84 3b 07 00 00    	je     8230 <keycompare+0xb10>
    7af5:	41 0f b6 04 24       	movzx  eax,BYTE PTR [r12]
    7afa:	41 80 3c 06 00       	cmp    BYTE PTR [r14+rax*1],0x0
    7aff:	75 e7                	jne    7ae8 <keycompare+0x3c8>
    7b01:	48 39 dd             	cmp    rbp,rbx
    7b04:	0f 86 8e fc ff ff    	jbe    7798 <keycompare+0x78>
    7b0a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    7b10:	0f b6 03             	movzx  eax,BYTE PTR [rbx]
    7b13:	41 80 3c 06 00       	cmp    BYTE PTR [r14+rax*1],0x0
    7b18:	0f 84 7a fc ff ff    	je     7798 <keycompare+0x78>
    7b1e:	48 83 c3 01          	add    rbx,0x1
    7b22:	48 39 dd             	cmp    rbp,rbx
    7b25:	75 e9                	jne    7b10 <keycompare+0x3f0>
    7b27:	48 89 eb             	mov    rbx,rbp
    7b2a:	e9 69 fc ff ff       	jmp    7798 <keycompare+0x78>
    7b2f:	90                   	nop
    7b30:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
    7b35:	4f 8d 5c 2c ff       	lea    r11,[r12+r13*1-0x1]
    7b3a:	48 8d 6c 03 ff       	lea    rbp,[rbx+rax*1-0x1]
    7b3f:	e9 c1 fd ff ff       	jmp    7905 <keycompare+0x1e5>
    7b44:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    7b48:	48 8d b4 24 c0 00 00 	lea    rsi,[rsp+0xc0]
    7b4f:	00 
    7b50:	4c 89 e7             	mov    rdi,r12
    7b53:	4c 89 4c 24 20       	mov    QWORD PTR [rsp+0x20],r9
    7b58:	e8 73 b4 ff ff       	call   2fd0 <strtold@plt>
    7b5d:	db 7c 24 10          	fstp   TBYTE PTR [rsp+0x10]
    7b61:	48 8d b4 24 c8 00 00 	lea    rsi,[rsp+0xc8]
    7b68:	00 
    7b69:	48 89 df             	mov    rdi,rbx
    7b6c:	e8 5f b4 ff ff       	call   2fd0 <strtold@plt>
    7b71:	4c 3b a4 24 c0 00 00 	cmp    r12,QWORD PTR [rsp+0xc0]
    7b78:	00 
    7b79:	4c 8b 4c 24 20       	mov    r9,QWORD PTR [rsp+0x20]
    7b7e:	db 6c 24 10          	fld    TBYTE PTR [rsp+0x10]
    7b82:	0f 84 88 06 00 00    	je     8210 <keycompare+0xaf0>
    7b88:	48 3b 9c 24 c8 00 00 	cmp    rbx,QWORD PTR [rsp+0xc8]
    7b8f:	00 
    7b90:	41 b8 01 00 00 00    	mov    r8d,0x1
    7b96:	0f 84 d4 fc ff ff    	je     7870 <keycompare+0x150>
    7b9c:	d9 c9                	fxch   st(1)
    7b9e:	db e9                	fucomi st,st(1)
    7ba0:	77 2a                	ja     7bcc <keycompare+0x4ac>
    7ba2:	d9 c9                	fxch   st(1)
    7ba4:	db e9                	fucomi st,st(1)
    7ba6:	0f 87 d4 fc ff ff    	ja     7880 <keycompare+0x160>
    7bac:	7a 0a                	jp     7bb8 <keycompare+0x498>
    7bae:	0f 84 dc 07 00 00    	je     8390 <keycompare+0xc70>
    7bb4:	d9 c9                	fxch   st(1)
    7bb6:	eb 08                	jmp    7bc0 <keycompare+0x4a0>
    7bb8:	d9 c9                	fxch   st(1)
    7bba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    7bc0:	df e8                	fucomip st,st(0)
    7bc2:	0f 8a 33 09 00 00    	jp     84fb <keycompare+0xddb>
    7bc8:	dd d8                	fstp   st(0)
    7bca:	eb 04                	jmp    7bd0 <keycompare+0x4b0>
    7bcc:	dd d8                	fstp   st(0)
    7bce:	dd d8                	fstp   st(0)
    7bd0:	41 b8 ff ff ff ff    	mov    r8d,0xffffffff
    7bd6:	e9 ad fc ff ff       	jmp    7888 <keycompare+0x168>
    7bdb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    7be0:	41 0f b6 04 24       	movzx  eax,BYTE PTR [r12]
    7be5:	4d 89 e5             	mov    r13,r12
    7be8:	41 80 3c 06 00       	cmp    BYTE PTR [r14+rax*1],0x0
    7bed:	74 11                	je     7c00 <keycompare+0x4e0>
    7bef:	90                   	nop
    7bf0:	49 83 c5 01          	add    r13,0x1
    7bf4:	41 0f b6 45 00       	movzx  eax,BYTE PTR [r13+0x0]
    7bf9:	41 80 3c 06 00       	cmp    BYTE PTR [r14+rax*1],0x0
    7bfe:	75 f0                	jne    7bf0 <keycompare+0x4d0>
    7c00:	0f b6 03             	movzx  eax,BYTE PTR [rbx]
    7c03:	48 89 de             	mov    rsi,rbx
    7c06:	41 80 3c 06 00       	cmp    BYTE PTR [r14+rax*1],0x0
    7c0b:	74 11                	je     7c1e <keycompare+0x4fe>
    7c0d:	0f 1f 00             	nop    DWORD PTR [rax]
    7c10:	48 83 c6 01          	add    rsi,0x1
    7c14:	0f b6 06             	movzx  eax,BYTE PTR [rsi]
    7c17:	41 80 3c 06 00       	cmp    BYTE PTR [r14+rax*1],0x0
    7c1c:	75 f2                	jne    7c10 <keycompare+0x4f0>
    7c1e:	4c 89 ef             	mov    rdi,r13
    7c21:	4c 89 4c 24 48       	mov    QWORD PTR [rsp+0x48],r9
    7c26:	48 89 74 24 20       	mov    QWORD PTR [rsp+0x20],rsi
    7c2b:	e8 10 e3 ff ff       	call   5f40 <find_unit_order>
    7c30:	48 8b 74 24 20       	mov    rsi,QWORD PTR [rsp+0x20]
    7c35:	89 44 24 10          	mov    DWORD PTR [rsp+0x10],eax
    7c39:	48 89 f7             	mov    rdi,rsi
    7c3c:	e8 ff e2 ff ff       	call   5f40 <find_unit_order>
    7c41:	44 8b 44 24 10       	mov    r8d,DWORD PTR [rsp+0x10]
    7c46:	48 8b 74 24 20       	mov    rsi,QWORD PTR [rsp+0x20]
    7c4b:	4c 8b 4c 24 48       	mov    r9,QWORD PTR [rsp+0x48]
    7c50:	41 29 c0             	sub    r8d,eax
    7c53:	0f 85 2f fc ff ff    	jne    7888 <keycompare+0x168>
    7c59:	8b 0d 25 2c 21 00    	mov    ecx,DWORD PTR [rip+0x212c25]        # 21a884 <thousands_sep>
    7c5f:	8b 15 23 2c 21 00    	mov    edx,DWORD PTR [rip+0x212c23]        # 21a888 <decimal_point>
    7c65:	4c 89 ef             	mov    rdi,r13
    7c68:	4c 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],r9
    7c6d:	e8 8e 95 00 00       	call   11200 <strnumcmp>
    7c72:	4c 8b 4c 24 10       	mov    r9,QWORD PTR [rsp+0x10]
    7c77:	41 89 c0             	mov    r8d,eax
    7c7a:	e9 09 fc ff ff       	jmp    7888 <keycompare+0x168>
    7c7f:	90                   	nop
    7c80:	41 80 7f 38 00       	cmp    BYTE PTR [r15+0x38],0x0
    7c85:	0f 85 52 fb ff ff    	jne    77dd <keycompare+0xbd>
    7c8b:	4d 85 ed             	test   r13,r13
    7c8e:	0f 84 dc 08 00 00    	je     8570 <keycompare+0xe50>
    7c94:	48 85 d2             	test   rdx,rdx
    7c97:	4c 89 e7             	mov    rdi,r12
    7c9a:	0f 84 9b 00 00 00    	je     7d3b <keycompare+0x61b>
    7ca0:	48 39 cf             	cmp    rdi,rcx
    7ca3:	73 0b                	jae    7cb0 <keycompare+0x590>
    7ca5:	0f b6 37             	movzx  esi,BYTE PTR [rdi]
    7ca8:	41 80 7c 35 00 00    	cmp    BYTE PTR [r13+rsi*1+0x0],0x0
    7cae:	75 56                	jne    7d06 <keycompare+0x5e6>
    7cb0:	48 39 c3             	cmp    rbx,rax
    7cb3:	72 18                	jb     7ccd <keycompare+0x5ad>
    7cb5:	e9 19 01 00 00       	jmp    7dd3 <keycompare+0x6b3>
    7cba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    7cc0:	48 83 c3 01          	add    rbx,0x1
    7cc4:	48 39 d8             	cmp    rax,rbx
    7cc7:	0f 84 03 01 00 00    	je     7dd0 <keycompare+0x6b0>
    7ccd:	0f b6 33             	movzx  esi,BYTE PTR [rbx]
    7cd0:	41 80 7c 35 00 00    	cmp    BYTE PTR [r13+rsi*1+0x0],0x0
    7cd6:	75 e8                	jne    7cc0 <keycompare+0x5a0>
    7cd8:	48 39 f9             	cmp    rcx,rdi
    7cdb:	0f 86 f2 00 00 00    	jbe    7dd3 <keycompare+0x6b3>
    7ce1:	48 39 d8             	cmp    rax,rbx
    7ce4:	0f 86 e9 00 00 00    	jbe    7dd3 <keycompare+0x6b3>
    7cea:	0f b6 37             	movzx  esi,BYTE PTR [rdi]
    7ced:	44 0f b6 04 32       	movzx  r8d,BYTE PTR [rdx+rsi*1]
    7cf2:	0f b6 33             	movzx  esi,BYTE PTR [rbx]
    7cf5:	0f b6 34 32          	movzx  esi,BYTE PTR [rdx+rsi*1]
    7cf9:	41 29 f0             	sub    r8d,esi
    7cfc:	0f 85 96 fd ff ff    	jne    7a98 <keycompare+0x378>
    7d02:	48 83 c3 01          	add    rbx,0x1
    7d06:	48 83 c7 01          	add    rdi,0x1
    7d0a:	eb 94                	jmp    7ca0 <keycompare+0x580>
    7d0c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    7d10:	4c 39 e1             	cmp    rcx,r12
    7d13:	0f 86 2a 05 00 00    	jbe    8243 <keycompare+0xb23>
    7d19:	48 39 d8             	cmp    rax,rbx
    7d1c:	0f 86 21 05 00 00    	jbe    8243 <keycompare+0xb23>
    7d22:	45 0f b6 04 24       	movzx  r8d,BYTE PTR [r12]
    7d27:	0f b6 13             	movzx  edx,BYTE PTR [rbx]
    7d2a:	41 29 d0             	sub    r8d,edx
    7d2d:	0f 85 65 fd ff ff    	jne    7a98 <keycompare+0x378>
    7d33:	48 83 c3 01          	add    rbx,0x1
    7d37:	49 83 c4 01          	add    r12,0x1
    7d3b:	49 39 cc             	cmp    r12,rcx
    7d3e:	73 0d                	jae    7d4d <keycompare+0x62d>
    7d40:	41 0f b6 14 24       	movzx  edx,BYTE PTR [r12]
    7d45:	41 80 7c 15 00 00    	cmp    BYTE PTR [r13+rdx*1+0x0],0x0
    7d4b:	75 ea                	jne    7d37 <keycompare+0x617>
    7d4d:	48 39 c3             	cmp    rbx,rax
    7d50:	72 1b                	jb     7d6d <keycompare+0x64d>
    7d52:	e9 ec 04 00 00       	jmp    8243 <keycompare+0xb23>
    7d57:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    7d5e:	00 00 
    7d60:	48 83 c3 01          	add    rbx,0x1
    7d64:	48 39 d8             	cmp    rax,rbx
    7d67:	0f 84 d3 04 00 00    	je     8240 <keycompare+0xb20>
    7d6d:	0f b6 13             	movzx  edx,BYTE PTR [rbx]
    7d70:	41 80 7c 15 00 00    	cmp    BYTE PTR [r13+rdx*1+0x0],0x0
    7d76:	75 e8                	jne    7d60 <keycompare+0x640>
    7d78:	eb 96                	jmp    7d10 <keycompare+0x5f0>
    7d7a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    7d80:	48 89 54 24 20       	mov    QWORD PTR [rsp+0x20],rdx
    7d85:	4c 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],r9
    7d8a:	e8 51 a0 00 00       	call   11de0 <xmalloc>
    7d8f:	48 85 ed             	test   rbp,rbp
    7d92:	48 89 c6             	mov    rsi,rax
    7d95:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
    7d9a:	4c 8b 4c 24 10       	mov    r9,QWORD PTR [rsp+0x10]
    7d9f:	48 8b 54 24 20       	mov    rdx,QWORD PTR [rsp+0x20]
    7da4:	48 8d 7c 2e 01       	lea    rdi,[rsi+rbp*1+0x1]
    7da9:	0f 85 c2 fb ff ff    	jne    7971 <keycompare+0x251>
    7daf:	48 89 f0             	mov    rax,rsi
    7db2:	4d 85 c9             	test   r9,r9
    7db5:	c6 00 00             	mov    BYTE PTR [rax],0x0
    7db8:	0f 85 00 fc ff ff    	jne    79be <keycompare+0x29e>
    7dbe:	66 90                	xchg   ax,ax
    7dc0:	48 89 f8             	mov    rax,rdi
    7dc3:	e9 31 fc ff ff       	jmp    79f9 <keycompare+0x2d9>
    7dc8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    7dcf:	00 
    7dd0:	48 89 c3             	mov    rbx,rax
    7dd3:	48 39 cf             	cmp    rdi,rcx
    7dd6:	40 0f 92 c5          	setb   bpl
    7dda:	48 39 d8             	cmp    rax,rbx
    7ddd:	0f 97 c0             	seta   al
    7de0:	40 0f b6 ed          	movzx  ebp,bpl
    7de4:	0f b6 c0             	movzx  eax,al
    7de7:	41 89 e8             	mov    r8d,ebp
    7dea:	41 29 c0             	sub    r8d,eax
    7ded:	e9 b3 fa ff ff       	jmp    78a5 <keycompare+0x185>
    7df2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    7df8:	31 f6                	xor    esi,esi
    7dfa:	4c 89 e7             	mov    rdi,r12
    7dfd:	4c 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],r9
    7e02:	e8 a9 e1 ff ff       	call   5fb0 <getmonth>
    7e07:	31 f6                	xor    esi,esi
    7e09:	41 89 c5             	mov    r13d,eax
    7e0c:	48 89 df             	mov    rdi,rbx
    7e0f:	e8 9c e1 ff ff       	call   5fb0 <getmonth>
    7e14:	45 89 e8             	mov    r8d,r13d
    7e17:	4c 8b 4c 24 10       	mov    r9,QWORD PTR [rsp+0x10]
    7e1c:	41 29 c0             	sub    r8d,eax
    7e1f:	e9 64 fa ff ff       	jmp    7888 <keycompare+0x168>
    7e24:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    7e28:	48 85 ed             	test   rbp,rbp
    7e2b:	0f 85 1f 04 00 00    	jne    8250 <keycompare+0xb30>
    7e31:	31 c0                	xor    eax,eax
    7e33:	4d 85 c9             	test   r9,r9
    7e36:	0f 95 c0             	setne  al
    7e39:	f7 d8                	neg    eax
    7e3b:	41 89 c0             	mov    r8d,eax
    7e3e:	e9 45 fa ff ff       	jmp    7888 <keycompare+0x168>
    7e43:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    7e48:	48 8b 15 21 25 21 00 	mov    rdx,QWORD PTR [rip+0x212521]        # 21a370 <random_md5_state+0x90>
    7e4f:	8b 05 23 25 21 00    	mov    eax,DWORD PTR [rip+0x212523]        # 21a378 <random_md5_state+0x98>
    7e55:	66 44 0f 6f 05 82 24 	movdqa xmm8,XMMWORD PTR [rip+0x212482]        # 21a2e0 <random_md5_state>
    7e5c:	21 00 
    7e5e:	66 0f 6f 3d 8a 24 21 	movdqa xmm7,XMMWORD PTR [rip+0x21248a]        # 21a2f0 <random_md5_state+0x10>
    7e65:	00 
    7e66:	48 89 94 24 3c 02 00 	mov    QWORD PTR [rsp+0x23c],rdx
    7e6d:	00 
    7e6e:	89 84 24 44 02 00 00 	mov    DWORD PTR [rsp+0x244],eax
    7e75:	66 0f 6f 35 83 24 21 	movdqa xmm6,XMMWORD PTR [rip+0x212483]        # 21a300 <random_md5_state+0x20>
    7e7c:	00 
    7e7d:	48 89 94 24 a0 01 00 	mov    QWORD PTR [rsp+0x1a0],rdx
    7e84:	00 
    7e85:	66 0f 6f 2d 83 24 21 	movdqa xmm5,XMMWORD PTR [rip+0x212483]        # 21a310 <random_md5_state+0x30>
    7e8c:	00 
    7e8d:	66 0f 6f 25 8b 24 21 	movdqa xmm4,XMMWORD PTR [rip+0x21248b]        # 21a320 <random_md5_state+0x40>
    7e94:	00 
    7e95:	66 0f 6f 1d 93 24 21 	movdqa xmm3,XMMWORD PTR [rip+0x212493]        # 21a330 <random_md5_state+0x50>
    7e9c:	00 
    7e9d:	66 0f 6f 15 9b 24 21 	movdqa xmm2,XMMWORD PTR [rip+0x21249b]        # 21a340 <random_md5_state+0x60>
    7ea4:	00 
    7ea5:	66 0f 6f 0d a3 24 21 	movdqa xmm1,XMMWORD PTR [rip+0x2124a3]        # 21a350 <random_md5_state+0x70>
    7eac:	00 
    7ead:	66 0f 6f 05 ab 24 21 	movdqa xmm0,XMMWORD PTR [rip+0x2124ab]        # 21a360 <random_md5_state+0x80>
    7eb4:	00 
    7eb5:	44 0f 11 84 24 ac 01 	movups XMMWORD PTR [rsp+0x1ac],xmm8
    7ebc:	00 00 
    7ebe:	0f 11 bc 24 bc 01 00 	movups XMMWORD PTR [rsp+0x1bc],xmm7
    7ec5:	00 
    7ec6:	0f 11 b4 24 cc 01 00 	movups XMMWORD PTR [rsp+0x1cc],xmm6
    7ecd:	00 
    7ece:	0f 11 ac 24 dc 01 00 	movups XMMWORD PTR [rsp+0x1dc],xmm5
    7ed5:	00 
    7ed6:	0f 11 a4 24 ec 01 00 	movups XMMWORD PTR [rsp+0x1ec],xmm4
    7edd:	00 
    7ede:	0f 11 9c 24 fc 01 00 	movups XMMWORD PTR [rsp+0x1fc],xmm3
    7ee5:	00 
    7ee6:	0f 11 94 24 0c 02 00 	movups XMMWORD PTR [rsp+0x20c],xmm2
    7eed:	00 
    7eee:	0f 11 8c 24 1c 02 00 	movups XMMWORD PTR [rsp+0x21c],xmm1
    7ef5:	00 
    7ef6:	0f 11 84 24 2c 02 00 	movups XMMWORD PTR [rsp+0x22c],xmm0
    7efd:	00 
    7efe:	44 0f 29 84 24 10 01 	movaps XMMWORD PTR [rsp+0x110],xmm8
    7f05:	00 00 
    7f07:	0f 29 bc 24 20 01 00 	movaps XMMWORD PTR [rsp+0x120],xmm7
    7f0e:	00 
    7f0f:	0f 29 b4 24 30 01 00 	movaps XMMWORD PTR [rsp+0x130],xmm6
    7f16:	00 
    7f17:	0f 29 ac 24 40 01 00 	movaps XMMWORD PTR [rsp+0x140],xmm5
    7f1e:	00 
    7f1f:	0f 29 a4 24 50 01 00 	movaps XMMWORD PTR [rsp+0x150],xmm4
    7f26:	00 
    7f27:	0f 29 9c 24 60 01 00 	movaps XMMWORD PTR [rsp+0x160],xmm3
    7f2e:	00 
    7f2f:	0f 29 94 24 70 01 00 	movaps XMMWORD PTR [rsp+0x170],xmm2
    7f36:	00 
    7f37:	0f 29 8c 24 80 01 00 	movaps XMMWORD PTR [rsp+0x180],xmm1
    7f3e:	00 
    7f3f:	0f 29 84 24 90 01 00 	movaps XMMWORD PTR [rsp+0x190],xmm0
    7f46:	00 
    7f47:	89 84 24 a8 01 00 00 	mov    DWORD PTR [rsp+0x1a8],eax
    7f4e:	80 3d 2c 29 21 00 00 	cmp    BYTE PTR [rip+0x21292c],0x0        # 21a881 <hard_LC_COLLATE>
    7f55:	0f 84 2d 03 00 00    	je     8288 <keycompare+0xb68>
    7f5b:	49 8d 04 2c          	lea    rax,[r12+rbp*1]
    7f5f:	45 31 c0             	xor    r8d,r8d
    7f62:	4c 89 bc 24 90 00 00 	mov    QWORD PTR [rsp+0x90],r15
    7f69:	00 
    7f6a:	48 89 5c 24 20       	mov    QWORD PTR [rsp+0x20],rbx
    7f6f:	48 c7 44 24 68 00 00 	mov    QWORD PTR [rsp+0x68],0x0
    7f76:	00 00 
    7f78:	45 89 c7             	mov    r15d,r8d
    7f7b:	48 89 44 24 50       	mov    QWORD PTR [rsp+0x50],rax
    7f80:	4a 8d 04 0b          	lea    rax,[rbx+r9*1]
    7f84:	48 c7 44 24 48 a0 0f 	mov    QWORD PTR [rsp+0x48],0xfa0
    7f8b:	00 00 
    7f8d:	4c 89 a4 24 98 00 00 	mov    QWORD PTR [rsp+0x98],r12
    7f94:	00 
    7f95:	48 89 9c 24 a0 00 00 	mov    QWORD PTR [rsp+0xa0],rbx
    7f9c:	00 
    7f9d:	48 89 44 24 60       	mov    QWORD PTR [rsp+0x60],rax
    7fa2:	4a 8d 44 0d 00       	lea    rax,[rbp+r9*1+0x0]
    7fa7:	48 89 ac 24 a8 00 00 	mov    QWORD PTR [rsp+0xa8],rbp
    7fae:	00 
    7faf:	4c 89 8c 24 b0 00 00 	mov    QWORD PTR [rsp+0xb0],r9
    7fb6:	00 
    7fb7:	48 8d 44 40 02       	lea    rax,[rax+rax*2+0x2]
    7fbc:	48 89 84 24 88 00 00 	mov    QWORD PTR [rsp+0x88],rax
    7fc3:	00 
    7fc4:	48 8d 84 24 f0 11 00 	lea    rax,[rsp+0x11f0]
    7fcb:	00 
    7fcc:	48 89 84 24 b8 00 00 	mov    QWORD PTR [rsp+0xb8],rax
    7fd3:	00 
    7fd4:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
    7fd9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    7fe0:	48 8b 4c 24 48       	mov    rcx,QWORD PTR [rsp+0x48]
    7fe5:	48 39 8c 24 88 00 00 	cmp    QWORD PTR [rsp+0x88],rcx
    7fec:	00 
    7fed:	0f 87 f8 00 00 00    	ja     80eb <keycompare+0x9cb>
    7ff3:	4c 39 64 24 50       	cmp    QWORD PTR [rsp+0x50],r12
    7ff8:	0f 87 3b 01 00 00    	ja     8139 <keycompare+0xa19>
    7ffe:	48 8b 54 24 20       	mov    rdx,QWORD PTR [rsp+0x20]
    8003:	48 39 54 24 60       	cmp    QWORD PTR [rsp+0x60],rdx
    8008:	0f 87 8a 04 00 00    	ja     8498 <keycompare+0xd78>
    800e:	31 db                	xor    ebx,ebx
    8010:	45 31 ed             	xor    r13d,r13d
    8013:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
    8018:	4c 01 e8             	add    rax,r13
    801b:	4c 39 64 24 50       	cmp    QWORD PTR [rsp+0x50],r12
    8020:	48 89 44 24 70       	mov    QWORD PTR [rsp+0x70],rax
    8025:	0f 87 e5 04 00 00    	ja     8510 <keycompare+0xdf0>
    802b:	48 8b 4c 24 20       	mov    rcx,QWORD PTR [rsp+0x20]
    8030:	48 39 4c 24 60       	cmp    QWORD PTR [rsp+0x60],rcx
    8035:	48 8b 6c 24 48       	mov    rbp,QWORD PTR [rsp+0x48]
    803a:	0f 86 7a 03 00 00    	jbe    83ba <keycompare+0xc9a>
    8040:	48 8b 7c 24 20       	mov    rdi,QWORD PTR [rsp+0x20]
    8045:	e8 46 ac ff ff       	call   2c90 <strlen@plt>
    804a:	48 8b 4c 24 20       	mov    rcx,QWORD PTR [rsp+0x20]
    804f:	48 89 6c 24 48       	mov    QWORD PTR [rsp+0x48],rbp
    8054:	48 8d 44 01 01       	lea    rax,[rcx+rax*1+0x1]
    8059:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
    805e:	4c 39 64 24 50       	cmp    QWORD PTR [rsp+0x50],r12
    8063:	77 10                	ja     8075 <keycompare+0x955>
    8065:	48 8b 4c 24 20       	mov    rcx,QWORD PTR [rsp+0x20]
    806a:	48 39 4c 24 60       	cmp    QWORD PTR [rsp+0x60],rcx
    806f:	0f 86 45 03 00 00    	jbe    83ba <keycompare+0xc9a>
    8075:	48 8b 54 24 78       	mov    rdx,QWORD PTR [rsp+0x78]
    807a:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
    807f:	4c 89 ee             	mov    rsi,r13
    8082:	e8 69 3b 00 00       	call   bbf0 <md5_process_bytes>
    8087:	48 8b 6c 24 70       	mov    rbp,QWORD PTR [rsp+0x70]
    808c:	48 8b 94 24 80 00 00 	mov    rdx,QWORD PTR [rsp+0x80]
    8093:	00 
    8094:	48 89 de             	mov    rsi,rbx
    8097:	48 89 ef             	mov    rdi,rbp
    809a:	e8 51 3b 00 00       	call   bbf0 <md5_process_bytes>
    809f:	45 85 ff             	test   r15d,r15d
    80a2:	0f 85 38 ff ff ff    	jne    7fe0 <keycompare+0x8c0>
    80a8:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
    80ad:	49 39 dd             	cmp    r13,rbx
    80b0:	48 89 da             	mov    rdx,rbx
    80b3:	49 0f 46 d5          	cmovbe rdx,r13
    80b7:	48 89 ee             	mov    rsi,rbp
    80ba:	e8 31 ad ff ff       	call   2df0 <memcmp@plt>
    80bf:	85 c0                	test   eax,eax
    80c1:	41 89 c7             	mov    r15d,eax
    80c4:	0f 85 16 ff ff ff    	jne    7fe0 <keycompare+0x8c0>
    80ca:	45 31 ff             	xor    r15d,r15d
    80cd:	49 39 dd             	cmp    r13,rbx
    80d0:	48 8b 4c 24 48       	mov    rcx,QWORD PTR [rsp+0x48]
    80d5:	41 0f 97 c7          	seta   r15b
    80d9:	41 83 df 00          	sbb    r15d,0x0
    80dd:	48 39 8c 24 88 00 00 	cmp    QWORD PTR [rsp+0x88],rcx
    80e4:	00 
    80e5:	0f 86 08 ff ff ff    	jbe    7ff3 <keycompare+0x8d3>
    80eb:	48 8b 94 24 88 00 00 	mov    rdx,QWORD PTR [rsp+0x88]
    80f2:	00 
    80f3:	48 8d 04 49          	lea    rax,[rcx+rcx*2]
    80f7:	48 8b 7c 24 68       	mov    rdi,QWORD PTR [rsp+0x68]
    80fc:	48 d1 e8             	shr    rax,1
    80ff:	48 39 c2             	cmp    rdx,rax
    8102:	48 0f 43 c2          	cmovae rax,rdx
    8106:	48 89 c3             	mov    rbx,rax
    8109:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
    810e:	e8 ad b0 ff ff       	call   31c0 <free@plt>
    8113:	48 89 df             	mov    rdi,rbx
    8116:	e8 ad b0 ff ff       	call   31c8 <malloc@plt>
    811b:	48 85 c0             	test   rax,rax
    811e:	48 89 44 24 68       	mov    QWORD PTR [rsp+0x68],rax
    8123:	0f 84 17 04 00 00    	je     8540 <keycompare+0xe20>
    8129:	4c 39 64 24 50       	cmp    QWORD PTR [rsp+0x50],r12
    812e:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
    8133:	0f 86 c5 fe ff ff    	jbe    7ffe <keycompare+0x8de>
    8139:	48 8b 6c 24 48       	mov    rbp,QWORD PTR [rsp+0x48]
    813e:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
    8143:	4c 89 e6             	mov    rsi,r12
    8146:	31 db                	xor    ebx,ebx
    8148:	48 89 ea             	mov    rdx,rbp
    814b:	e8 10 e4 ff ff       	call   6560 <xstrxfrm>
    8150:	48 8b 54 24 20       	mov    rdx,QWORD PTR [rsp+0x20]
    8155:	48 39 54 24 60       	cmp    QWORD PTR [rsp+0x60],rdx
    815a:	4c 8d 68 01          	lea    r13,[rax+0x1]
    815e:	76 1b                	jbe    817b <keycompare+0xa5b>
    8160:	4c 39 ed             	cmp    rbp,r13
    8163:	0f 83 5a 05 00 00    	jae    86c3 <keycompare+0xfa3>
    8169:	31 d2                	xor    edx,edx
    816b:	31 ff                	xor    edi,edi
    816d:	48 8b 74 24 20       	mov    rsi,QWORD PTR [rsp+0x20]
    8172:	e8 e9 e3 ff ff       	call   6560 <xstrxfrm>
    8177:	48 8d 58 01          	lea    rbx,[rax+0x1]
    817b:	4c 39 6c 24 48       	cmp    QWORD PTR [rsp+0x48],r13
    8180:	4a 8d 2c 2b          	lea    rbp,[rbx+r13*1]
    8184:	0f 83 3d 04 00 00    	jae    85c7 <keycompare+0xea7>
    818a:	48 b8 54 55 55 55 55 	movabs rax,0x5555555555555554
    8191:	55 55 55 
    8194:	48 39 c5             	cmp    rbp,rax
    8197:	77 08                	ja     81a1 <keycompare+0xa81>
    8199:	48 8d 6c 6d 00       	lea    rbp,[rbp+rbp*2+0x0]
    819e:	48 d1 ed             	shr    rbp,1
    81a1:	48 8b 7c 24 68       	mov    rdi,QWORD PTR [rsp+0x68]
    81a6:	e8 15 b0 ff ff       	call   31c0 <free@plt>
    81ab:	48 89 ef             	mov    rdi,rbp
    81ae:	e8 2d 9c 00 00       	call   11de0 <xmalloc>
    81b3:	4c 39 64 24 50       	cmp    QWORD PTR [rsp+0x50],r12
    81b8:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
    81bd:	0f 87 25 03 00 00    	ja     84e8 <keycompare+0xdc8>
    81c3:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
    81c8:	48 8b 4c 24 20       	mov    rcx,QWORD PTR [rsp+0x20]
    81cd:	4c 01 e8             	add    rax,r13
    81d0:	48 39 4c 24 60       	cmp    QWORD PTR [rsp+0x60],rcx
    81d5:	48 89 44 24 70       	mov    QWORD PTR [rsp+0x70],rax
    81da:	0f 87 d0 02 00 00    	ja     84b0 <keycompare+0xd90>
    81e0:	4c 39 64 24 50       	cmp    QWORD PTR [rsp+0x50],r12
    81e5:	0f 86 b5 01 00 00    	jbe    83a0 <keycompare+0xc80>
    81eb:	4c 89 e7             	mov    rdi,r12
    81ee:	e8 9d aa ff ff       	call   2c90 <strlen@plt>
    81f3:	4d 8d 64 04 01       	lea    r12,[r12+rax*1+0x1]
    81f8:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
    81fd:	48 89 6c 24 48       	mov    QWORD PTR [rsp+0x48],rbp
    8202:	48 89 44 24 68       	mov    QWORD PTR [rsp+0x68],rax
    8207:	e9 52 fe ff ff       	jmp    805e <keycompare+0x93e>
    820c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    8210:	dd d8                	fstp   st(0)
    8212:	dd d8                	fstp   st(0)
    8214:	31 c0                	xor    eax,eax
    8216:	48 39 9c 24 c8 00 00 	cmp    QWORD PTR [rsp+0xc8],rbx
    821d:	00 
    821e:	0f 95 c0             	setne  al
    8221:	f7 d8                	neg    eax
    8223:	41 89 c0             	mov    r8d,eax
    8226:	e9 5d f6 ff ff       	jmp    7888 <keycompare+0x168>
    822b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    8230:	4d 89 dc             	mov    r12,r11
    8233:	e9 c9 f8 ff ff       	jmp    7b01 <keycompare+0x3e1>
    8238:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    823f:	00 
    8240:	48 89 c3             	mov    rbx,rax
    8243:	49 39 cc             	cmp    r12,rcx
    8246:	e9 8b fb ff ff       	jmp    7dd6 <keycompare+0x6b6>
    824b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    8250:	4d 85 c9             	test   r9,r9
    8253:	41 b8 01 00 00 00    	mov    r8d,0x1
    8259:	0f 84 29 f6 ff ff    	je     7888 <keycompare+0x168>
    825f:	49 8d 49 01          	lea    rcx,[r9+0x1]
    8263:	48 8d 75 01          	lea    rsi,[rbp+0x1]
    8267:	48 89 da             	mov    rdx,rbx
    826a:	4c 89 e7             	mov    rdi,r12
    826d:	4c 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],r9
    8272:	e8 09 9f 00 00       	call   12180 <xmemcoll0>
    8277:	4c 8b 4c 24 10       	mov    r9,QWORD PTR [rsp+0x10]
    827c:	41 89 c0             	mov    r8d,eax
    827f:	e9 04 f6 ff ff       	jmp    7888 <keycompare+0x168>
    8284:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    8288:	48 8b 54 24 78       	mov    rdx,QWORD PTR [rsp+0x78]
    828d:	48 89 ee             	mov    rsi,rbp
    8290:	4c 89 e7             	mov    rdi,r12
    8293:	4c 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],r9
    8298:	4c 8d ac 24 f0 00 00 	lea    r13,[rsp+0xf0]
    829f:	00 
    82a0:	e8 4b 39 00 00       	call   bbf0 <md5_process_bytes>
    82a5:	48 8b 7c 24 78       	mov    rdi,QWORD PTR [rsp+0x78]
    82aa:	4c 89 ee             	mov    rsi,r13
    82ad:	e8 1e 38 00 00       	call   bad0 <md5_finish_ctx>
    82b2:	4c 8b 4c 24 10       	mov    r9,QWORD PTR [rsp+0x10]
    82b7:	48 8b 94 24 80 00 00 	mov    rdx,QWORD PTR [rsp+0x80]
    82be:	00 
    82bf:	48 89 df             	mov    rdi,rbx
    82c2:	4c 89 ce             	mov    rsi,r9
    82c5:	4c 89 4c 24 20       	mov    QWORD PTR [rsp+0x20],r9
    82ca:	e8 21 39 00 00       	call   bbf0 <md5_process_bytes>
    82cf:	49 8d 4d 10          	lea    rcx,[r13+0x10]
    82d3:	48 8b bc 24 80 00 00 	mov    rdi,QWORD PTR [rsp+0x80]
    82da:	00 
    82db:	48 89 ce             	mov    rsi,rcx
    82de:	48 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],rcx
    82e3:	e8 e8 37 00 00       	call   bad0 <md5_finish_ctx>
    82e8:	48 8b 4c 24 10       	mov    rcx,QWORD PTR [rsp+0x10]
    82ed:	ba 10 00 00 00       	mov    edx,0x10
    82f2:	4c 89 ef             	mov    rdi,r13
    82f5:	48 89 ce             	mov    rsi,rcx
    82f8:	e8 f3 aa ff ff       	call   2df0 <memcmp@plt>
    82fd:	85 c0                	test   eax,eax
    82ff:	41 89 c0             	mov    r8d,eax
    8302:	4c 8b 4c 24 20       	mov    r9,QWORD PTR [rsp+0x20]
    8307:	0f 85 ca 02 00 00    	jne    85d7 <keycompare+0xeb7>
    830d:	4c 89 4c 24 20       	mov    QWORD PTR [rsp+0x20],r9
    8312:	48 89 5c 24 70       	mov    QWORD PTR [rsp+0x70],rbx
    8317:	49 89 ed             	mov    r13,rbp
    831a:	4c 89 64 24 10       	mov    QWORD PTR [rsp+0x10],r12
    831f:	48 c7 44 24 68 00 00 	mov    QWORD PTR [rsp+0x68],0x0
    8326:	00 00 
    8328:	48 8b 4c 24 20       	mov    rcx,QWORD PTR [rsp+0x20]
    832d:	48 8b 74 24 70       	mov    rsi,QWORD PTR [rsp+0x70]
    8332:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
    8337:	4c 89 4c 24 48       	mov    QWORD PTR [rsp+0x48],r9
    833c:	49 39 cd             	cmp    r13,rcx
    833f:	48 89 ca             	mov    rdx,rcx
    8342:	49 0f 46 d5          	cmovbe rdx,r13
    8346:	e8 a5 aa ff ff       	call   2df0 <memcmp@plt>
    834b:	85 c0                	test   eax,eax
    834d:	41 89 c0             	mov    r8d,eax
    8350:	4c 8b 4c 24 48       	mov    r9,QWORD PTR [rsp+0x48]
    8355:	75 13                	jne    836a <keycompare+0xc4a>
    8357:	48 8b 4c 24 20       	mov    rcx,QWORD PTR [rsp+0x20]
    835c:	31 c0                	xor    eax,eax
    835e:	49 39 cd             	cmp    r13,rcx
    8361:	0f 97 c0             	seta   al
    8364:	83 d8 00             	sbb    eax,0x0
    8367:	41 89 c0             	mov    r8d,eax
    836a:	48 8b 7c 24 68       	mov    rdi,QWORD PTR [rsp+0x68]
    836f:	44 89 44 24 20       	mov    DWORD PTR [rsp+0x20],r8d
    8374:	4c 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],r9
    8379:	e8 42 ae ff ff       	call   31c0 <free@plt>
    837e:	4c 8b 4c 24 10       	mov    r9,QWORD PTR [rsp+0x10]
    8383:	44 8b 44 24 20       	mov    r8d,DWORD PTR [rsp+0x20]
    8388:	e9 fb f4 ff ff       	jmp    7888 <keycompare+0x168>
    838d:	0f 1f 00             	nop    DWORD PTR [rax]
    8390:	dd d8                	fstp   st(0)
    8392:	dd d8                	fstp   st(0)
    8394:	45 31 c0             	xor    r8d,r8d
    8397:	e9 ec f4 ff ff       	jmp    7888 <keycompare+0x168>
    839c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    83a0:	48 8b 4c 24 20       	mov    rcx,QWORD PTR [rsp+0x20]
    83a5:	48 39 4c 24 60       	cmp    QWORD PTR [rsp+0x60],rcx
    83aa:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
    83af:	48 89 44 24 68       	mov    QWORD PTR [rsp+0x68],rax
    83b4:	0f 87 86 fc ff ff    	ja     8040 <keycompare+0x920>
    83ba:	4c 8b 8c 24 b0 00 00 	mov    r9,QWORD PTR [rsp+0xb0]
    83c1:	00 
    83c2:	48 8b 54 24 78       	mov    rdx,QWORD PTR [rsp+0x78]
    83c7:	45 89 f8             	mov    r8d,r15d
    83ca:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
    83cf:	4c 89 ee             	mov    rsi,r13
    83d2:	44 89 84 24 88 00 00 	mov    DWORD PTR [rsp+0x88],r8d
    83d9:	00 
    83da:	48 89 5c 24 20       	mov    QWORD PTR [rsp+0x20],rbx
    83df:	4c 8b a4 24 98 00 00 	mov    r12,QWORD PTR [rsp+0x98]
    83e6:	00 
    83e7:	4c 89 4c 24 60       	mov    QWORD PTR [rsp+0x60],r9
    83ec:	48 8b ac 24 a8 00 00 	mov    rbp,QWORD PTR [rsp+0xa8]
    83f3:	00 
    83f4:	48 8b 9c 24 a0 00 00 	mov    rbx,QWORD PTR [rsp+0xa0]
    83fb:	00 
    83fc:	4c 8b bc 24 90 00 00 	mov    r15,QWORD PTR [rsp+0x90]
    8403:	00 
    8404:	e8 e7 37 00 00       	call   bbf0 <md5_process_bytes>
    8409:	48 8d 84 24 f0 00 00 	lea    rax,[rsp+0xf0]
    8410:	00 
    8411:	48 8b 7c 24 78       	mov    rdi,QWORD PTR [rsp+0x78]
    8416:	48 89 c6             	mov    rsi,rax
    8419:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
    841e:	e8 ad 36 00 00       	call   bad0 <md5_finish_ctx>
    8423:	48 8b 94 24 80 00 00 	mov    rdx,QWORD PTR [rsp+0x80]
    842a:	00 
    842b:	48 8b 74 24 20       	mov    rsi,QWORD PTR [rsp+0x20]
    8430:	48 8b 7c 24 70       	mov    rdi,QWORD PTR [rsp+0x70]
    8435:	e8 b6 37 00 00       	call   bbf0 <md5_process_bytes>
    843a:	48 8b 44 24 48       	mov    rax,QWORD PTR [rsp+0x48]
    843f:	48 8b bc 24 80 00 00 	mov    rdi,QWORD PTR [rsp+0x80]
    8446:	00 
    8447:	48 8d 48 10          	lea    rcx,[rax+0x10]
    844b:	48 89 ce             	mov    rsi,rcx
    844e:	48 89 4c 24 50       	mov    QWORD PTR [rsp+0x50],rcx
    8453:	e8 78 36 00 00       	call   bad0 <md5_finish_ctx>
    8458:	48 8b 4c 24 50       	mov    rcx,QWORD PTR [rsp+0x50]
    845d:	48 8b 7c 24 48       	mov    rdi,QWORD PTR [rsp+0x48]
    8462:	ba 10 00 00 00       	mov    edx,0x10
    8467:	48 89 ce             	mov    rsi,rcx
    846a:	e8 81 a9 ff ff       	call   2df0 <memcmp@plt>
    846f:	85 c0                	test   eax,eax
    8471:	4c 8b 4c 24 60       	mov    r9,QWORD PTR [rsp+0x60]
    8476:	44 8b 84 24 88 00 00 	mov    r8d,DWORD PTR [rsp+0x88]
    847d:	00 
    847e:	0f 85 e3 fe ff ff    	jne    8367 <keycompare+0xc47>
    8484:	45 85 c0             	test   r8d,r8d
    8487:	0f 85 dd fe ff ff    	jne    836a <keycompare+0xc4a>
    848d:	e9 96 fe ff ff       	jmp    8328 <keycompare+0xc08>
    8492:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    8498:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
    849d:	48 8b 54 24 48       	mov    rdx,QWORD PTR [rsp+0x48]
    84a2:	45 31 ed             	xor    r13d,r13d
    84a5:	e9 c3 fc ff ff       	jmp    816d <keycompare+0xa4d>
    84aa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    84b0:	48 89 da             	mov    rdx,rbx
    84b3:	48 89 ce             	mov    rsi,rcx
    84b6:	48 89 c7             	mov    rdi,rax
    84b9:	e8 72 a9 ff ff       	call   2e30 <strxfrm@plt>
    84be:	4c 39 64 24 50       	cmp    QWORD PTR [rsp+0x50],r12
    84c3:	0f 86 d7 fe ff ff    	jbe    83a0 <keycompare+0xc80>
    84c9:	4c 89 e7             	mov    rdi,r12
    84cc:	e8 bf a7 ff ff       	call   2c90 <strlen@plt>
    84d1:	4d 8d 64 04 01       	lea    r12,[r12+rax*1+0x1]
    84d6:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
    84db:	48 89 44 24 68       	mov    QWORD PTR [rsp+0x68],rax
    84e0:	e9 5b fb ff ff       	jmp    8040 <keycompare+0x920>
    84e5:	0f 1f 00             	nop    DWORD PTR [rax]
    84e8:	4c 89 ea             	mov    rdx,r13
    84eb:	4c 89 e6             	mov    rsi,r12
    84ee:	48 89 c7             	mov    rdi,rax
    84f1:	e8 3a a9 ff ff       	call   2e30 <strxfrm@plt>
    84f6:	e9 c8 fc ff ff       	jmp    81c3 <keycompare+0xaa3>
    84fb:	df e8                	fucomip st,st(0)
    84fd:	0f 8a f6 00 00 00    	jp     85f9 <keycompare+0xed9>
    8503:	41 b8 01 00 00 00    	mov    r8d,0x1
    8509:	e9 7a f3 ff ff       	jmp    7888 <keycompare+0x168>
    850e:	66 90                	xchg   ax,ax
    8510:	4c 89 e7             	mov    rdi,r12
    8513:	e8 78 a7 ff ff       	call   2c90 <strlen@plt>
    8518:	48 8b 4c 24 20       	mov    rcx,QWORD PTR [rsp+0x20]
    851d:	48 39 4c 24 60       	cmp    QWORD PTR [rsp+0x60],rcx
    8522:	4d 8d 64 04 01       	lea    r12,[r12+rax*1+0x1]
    8527:	0f 86 31 fb ff ff    	jbe    805e <keycompare+0x93e>
    852d:	48 8b 6c 24 48       	mov    rbp,QWORD PTR [rsp+0x48]
    8532:	e9 09 fb ff ff       	jmp    8040 <keycompare+0x920>
    8537:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    853e:	00 00 
    8540:	48 c7 44 24 48 a0 0f 	mov    QWORD PTR [rsp+0x48],0xfa0
    8547:	00 00 
    8549:	48 8b 84 24 b8 00 00 	mov    rax,QWORD PTR [rsp+0xb8]
    8550:	00 
    8551:	e9 d3 fb ff ff       	jmp    8129 <keycompare+0xa09>
    8556:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    855d:	00 00 00 
    8560:	44 89 c5             	mov    ebp,r8d
    8563:	e9 3c f5 ff ff       	jmp    7aa4 <keycompare+0x384>
    8568:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    856f:	00 
    8570:	48 85 ed             	test   rbp,rbp
    8573:	74 70                	je     85e5 <keycompare+0xec5>
    8575:	4d 85 c9             	test   r9,r9
    8578:	0f 84 3b 01 00 00    	je     86b9 <keycompare+0xf99>
    857e:	48 85 d2             	test   rdx,rdx
    8581:	0f 84 ec 00 00 00    	je     8673 <keycompare+0xf53>
    8587:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    858e:	00 00 
    8590:	49 39 cc             	cmp    r12,rcx
    8593:	0f 83 04 01 00 00    	jae    869d <keycompare+0xf7d>
    8599:	48 39 c3             	cmp    rbx,rax
    859c:	0f 83 fb 00 00 00    	jae    869d <keycompare+0xf7d>
    85a2:	49 83 c4 01          	add    r12,0x1
    85a6:	41 0f b6 74 24 ff    	movzx  esi,BYTE PTR [r12-0x1]
    85ac:	48 83 c3 01          	add    rbx,0x1
    85b0:	44 0f b6 04 32       	movzx  r8d,BYTE PTR [rdx+rsi*1]
    85b5:	0f b6 73 ff          	movzx  esi,BYTE PTR [rbx-0x1]
    85b9:	0f b6 34 32          	movzx  esi,BYTE PTR [rdx+rsi*1]
    85bd:	41 29 f0             	sub    r8d,esi
    85c0:	74 ce                	je     8590 <keycompare+0xe70>
    85c2:	e9 d1 f4 ff ff       	jmp    7a98 <keycompare+0x378>
    85c7:	48 39 6c 24 48       	cmp    QWORD PTR [rsp+0x48],rbp
    85cc:	0f 82 b8 fb ff ff    	jb     818a <keycompare+0xa6a>
    85d2:	e9 3c fa ff ff       	jmp    8013 <keycompare+0x8f3>
    85d7:	48 c7 44 24 68 00 00 	mov    QWORD PTR [rsp+0x68],0x0
    85de:	00 00 
    85e0:	e9 85 fd ff ff       	jmp    836a <keycompare+0xc4a>
    85e5:	31 ed                	xor    ebp,ebp
    85e7:	4d 85 c9             	test   r9,r9
    85ea:	40 0f 95 c5          	setne  bpl
    85ee:	41 89 e8             	mov    r8d,ebp
    85f1:	41 f7 d8             	neg    r8d
    85f4:	e9 ac f2 ff ff       	jmp    78a5 <keycompare+0x185>
    85f9:	66 0f ef c0          	pxor   xmm0,xmm0
    85fd:	31 f6                	xor    esi,esi
    85ff:	4c 89 e7             	mov    rdi,r12
    8602:	4c 89 4c 24 48       	mov    QWORD PTR [rsp+0x48],r9
    8607:	4c 8d ac 24 d0 00 00 	lea    r13,[rsp+0xd0]
    860e:	00 
    860f:	0f 29 84 24 d0 00 00 	movaps XMMWORD PTR [rsp+0xd0],xmm0
    8616:	00 
    8617:	0f 29 44 24 20       	movaps XMMWORD PTR [rsp+0x20],xmm0
    861c:	e8 af a9 ff ff       	call   2fd0 <strtold@plt>
    8621:	db bc 24 d0 00 00 00 	fstp   TBYTE PTR [rsp+0xd0]
    8628:	48 8d 84 24 e0 00 00 	lea    rax,[rsp+0xe0]
    862f:	00 
    8630:	31 f6                	xor    esi,esi
    8632:	48 89 df             	mov    rdi,rbx
    8635:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
    863a:	66 0f 6f 44 24 20    	movdqa xmm0,XMMWORD PTR [rsp+0x20]
    8640:	0f 29 84 24 e0 00 00 	movaps XMMWORD PTR [rsp+0xe0],xmm0
    8647:	00 
    8648:	e8 83 a9 ff ff       	call   2fd0 <strtold@plt>
    864d:	ba 10 00 00 00       	mov    edx,0x10
    8652:	4c 89 ef             	mov    rdi,r13
    8655:	db bc 24 e0 00 00 00 	fstp   TBYTE PTR [rsp+0xe0]
    865c:	48 8b 74 24 10       	mov    rsi,QWORD PTR [rsp+0x10]
    8661:	e8 8a a7 ff ff       	call   2df0 <memcmp@plt>
    8666:	4c 8b 4c 24 48       	mov    r9,QWORD PTR [rsp+0x48]
    866b:	41 89 c0             	mov    r8d,eax
    866e:	e9 15 f2 ff ff       	jmp    7888 <keycompare+0x168>
    8673:	4c 39 cd             	cmp    rbp,r9
    8676:	4c 89 ca             	mov    rdx,r9
    8679:	48 89 de             	mov    rsi,rbx
    867c:	48 0f 46 d5          	cmovbe rdx,rbp
    8680:	4c 89 e7             	mov    rdi,r12
    8683:	4c 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],r9
    8688:	e8 63 a7 ff ff       	call   2df0 <memcmp@plt>
    868d:	85 c0                	test   eax,eax
    868f:	41 89 c0             	mov    r8d,eax
    8692:	0f 85 00 f4 ff ff    	jne    7a98 <keycompare+0x378>
    8698:	4c 8b 4c 24 08       	mov    r9,QWORD PTR [rsp+0x8]
    869d:	4c 39 cd             	cmp    rbp,r9
    86a0:	72 0d                	jb     86af <keycompare+0xf8f>
    86a2:	41 0f 95 c0          	setne  r8b
    86a6:	45 0f b6 c0          	movzx  r8d,r8b
    86aa:	e9 f6 f1 ff ff       	jmp    78a5 <keycompare+0x185>
    86af:	bd ff ff ff ff       	mov    ebp,0xffffffff
    86b4:	e9 e2 f3 ff ff       	jmp    7a9b <keycompare+0x37b>
    86b9:	bd 01 00 00 00       	mov    ebp,0x1
    86be:	e9 d8 f3 ff ff       	jmp    7a9b <keycompare+0x37b>
    86c3:	48 8b 54 24 48       	mov    rdx,QWORD PTR [rsp+0x48]
    86c8:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
    86cd:	4c 29 ea             	sub    rdx,r13
    86d0:	4a 8d 3c 28          	lea    rdi,[rax+r13*1]
    86d4:	e9 94 fa ff ff       	jmp    816d <keycompare+0xa4d>
    86d9:	e8 c2 a5 ff ff       	call   2ca0 <__stack_chk_fail@plt>
    86de:	66 90                	xchg   ax,ax

00000000000086e0 <compare>:
    86e0:	41 55                	push   r13
    86e2:	41 54                	push   r12
    86e4:	55                   	push   rbp
    86e5:	53                   	push   rbx
    86e6:	48 89 f5             	mov    rbp,rsi
    86e9:	48 89 fb             	mov    rbx,rdi
    86ec:	48 83 ec 08          	sub    rsp,0x8
    86f0:	48 83 3d 38 1d 21 00 	cmp    QWORD PTR [rip+0x211d38],0x0        # 21a430 <keylist>
    86f7:	00 
    86f8:	74 1e                	je     8718 <compare+0x38>
    86fa:	e8 21 f0 ff ff       	call   7720 <keycompare>
    86ff:	85 c0                	test   eax,eax
    8701:	75 3f                	jne    8742 <compare+0x62>
    8703:	80 3d 2f 1d 21 00 00 	cmp    BYTE PTR [rip+0x211d2f],0x0        # 21a439 <unique>
    870a:	75 36                	jne    8742 <compare+0x62>
    870c:	80 3d 27 1d 21 00 00 	cmp    BYTE PTR [rip+0x211d27],0x0        # 21a43a <stable>
    8713:	75 2d                	jne    8742 <compare+0x62>
    8715:	0f 1f 00             	nop    DWORD PTR [rax]
    8718:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
    871c:	48 8b 4d 08          	mov    rcx,QWORD PTR [rbp+0x8]
    8720:	4d 89 c5             	mov    r13,r8
    8723:	4c 8d 61 ff          	lea    r12,[rcx-0x1]
    8727:	49 83 ed 01          	sub    r13,0x1
    872b:	75 23                	jne    8750 <compare+0x70>
    872d:	31 c0                	xor    eax,eax
    872f:	4d 85 e4             	test   r12,r12
    8732:	0f 95 c0             	setne  al
    8735:	f7 d8                	neg    eax
    8737:	80 3d fd 1c 21 00 00 	cmp    BYTE PTR [rip+0x211cfd],0x0        # 21a43b <reverse>
    873e:	74 02                	je     8742 <compare+0x62>
    8740:	f7 d8                	neg    eax
    8742:	48 83 c4 08          	add    rsp,0x8
    8746:	5b                   	pop    rbx
    8747:	5d                   	pop    rbp
    8748:	41 5c                	pop    r12
    874a:	41 5d                	pop    r13
    874c:	c3                   	ret    
    874d:	0f 1f 00             	nop    DWORD PTR [rax]
    8750:	4d 85 e4             	test   r12,r12
    8753:	b8 01 00 00 00       	mov    eax,0x1
    8758:	74 dd                	je     8737 <compare+0x57>
    875a:	80 3d 20 21 21 00 00 	cmp    BYTE PTR [rip+0x212120],0x0        # 21a881 <hard_LC_COLLATE>
    8761:	48 8b 75 00          	mov    rsi,QWORD PTR [rbp+0x0]
    8765:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    8768:	75 26                	jne    8790 <compare+0xb0>
    876a:	4d 39 e5             	cmp    r13,r12
    876d:	4c 89 e2             	mov    rdx,r12
    8770:	49 0f 46 d5          	cmovbe rdx,r13
    8774:	e8 77 a6 ff ff       	call   2df0 <memcmp@plt>
    8779:	85 c0                	test   eax,eax
    877b:	75 ba                	jne    8737 <compare+0x57>
    877d:	31 c0                	xor    eax,eax
    877f:	4d 39 e5             	cmp    r13,r12
    8782:	ba ff ff ff ff       	mov    edx,0xffffffff
    8787:	0f 95 c0             	setne  al
    878a:	0f 42 c2             	cmovb  eax,edx
    878d:	eb a8                	jmp    8737 <compare+0x57>
    878f:	90                   	nop
    8790:	48 89 f2             	mov    rdx,rsi
    8793:	4c 89 c6             	mov    rsi,r8
    8796:	e8 e5 99 00 00       	call   12180 <xmemcoll0>
    879b:	eb 9a                	jmp    8737 <compare+0x57>
    879d:	0f 1f 00             	nop    DWORD PTR [rax]

00000000000087a0 <sequential_sort>:
    87a0:	41 57                	push   r15
    87a2:	41 56                	push   r14
    87a4:	41 55                	push   r13
    87a6:	41 54                	push   r12
    87a8:	49 89 fd             	mov    r13,rdi
    87ab:	55                   	push   rbp
    87ac:	53                   	push   rbx
    87ad:	89 cd                	mov    ebp,ecx
    87af:	48 89 d3             	mov    rbx,rdx
    87b2:	48 83 ec 18          	sub    rsp,0x18
    87b6:	48 83 fe 02          	cmp    rsi,0x2
    87ba:	0f 84 48 01 00 00    	je     8908 <sequential_sort+0x168>
    87c0:	49 89 f7             	mov    r15,rsi
    87c3:	49 d1 ef             	shr    r15,1
    87c6:	4d 89 fe             	mov    r14,r15
    87c9:	4c 29 fe             	sub    rsi,r15
    87cc:	49 c1 e6 05          	shl    r14,0x5
    87d0:	48 89 74 24 08       	mov    QWORD PTR [rsp+0x8],rsi
    87d5:	49 f7 de             	neg    r14
    87d8:	84 c9                	test   cl,cl
    87da:	4e 8d 24 37          	lea    r12,[rdi+r14*1]
    87de:	0f 85 bc 00 00 00    	jne    88a0 <sequential_sort+0x100>
    87e4:	48 8b 74 24 08       	mov    rsi,QWORD PTR [rsp+0x8]
    87e9:	31 c9                	xor    ecx,ecx
    87eb:	4c 89 e7             	mov    rdi,r12
    87ee:	e8 ad ff ff ff       	call   87a0 <sequential_sort>
    87f3:	49 83 ff 01          	cmp    r15,0x1
    87f7:	0f 87 c2 01 00 00    	ja     89bf <sequential_sort+0x21f>
    87fd:	f3 41 0f 6f 45 e0    	movdqu xmm0,XMMWORD PTR [r13-0x20]
    8803:	48 89 d8             	mov    rax,rbx
    8806:	4d 89 e6             	mov    r14,r12
    8809:	0f 11 43 e0          	movups XMMWORD PTR [rbx-0x20],xmm0
    880d:	f3 41 0f 6f 45 f0    	movdqu xmm0,XMMWORD PTR [r13-0x10]
    8813:	0f 11 43 f0          	movups XMMWORD PTR [rbx-0x10],xmm0
    8817:	4c 89 eb             	mov    rbx,r13
    881a:	49 89 c5             	mov    r13,rax
    881d:	49 8d 6d e0          	lea    rbp,[r13-0x20]
    8821:	4d 8d 66 e0          	lea    r12,[r14-0x20]
    8825:	0f 1f 00             	nop    DWORD PTR [rax]
    8828:	4c 89 e6             	mov    rsi,r12
    882b:	48 89 ef             	mov    rdi,rbp
    882e:	48 83 eb 20          	sub    rbx,0x20
    8832:	e8 a9 fe ff ff       	call   86e0 <compare>
    8837:	85 c0                	test   eax,eax
    8839:	0f 8e a1 00 00 00    	jle    88e0 <sequential_sort+0x140>
    883f:	f3 41 0f 6f 46 e0    	movdqu xmm0,XMMWORD PTR [r14-0x20]
    8845:	48 83 6c 24 08 01    	sub    QWORD PTR [rsp+0x8],0x1
    884b:	0f 11 03             	movups XMMWORD PTR [rbx],xmm0
    884e:	f3 41 0f 6f 46 f0    	movdqu xmm0,XMMWORD PTR [r14-0x10]
    8854:	0f 11 43 10          	movups XMMWORD PTR [rbx+0x10],xmm0
    8858:	74 12                	je     886c <sequential_sort+0xcc>
    885a:	4d 89 e6             	mov    r14,r12
    885d:	49 83 ec 20          	sub    r12,0x20
    8861:	eb c5                	jmp    8828 <sequential_sort+0x88>
    8863:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    8868:	48 83 ed 20          	sub    rbp,0x20
    886c:	f3 0f 6f 45 00       	movdqu xmm0,XMMWORD PTR [rbp+0x0]
    8871:	48 83 eb 20          	sub    rbx,0x20
    8875:	49 83 ef 01          	sub    r15,0x1
    8879:	0f 11 03             	movups XMMWORD PTR [rbx],xmm0
    887c:	f3 0f 6f 45 10       	movdqu xmm0,XMMWORD PTR [rbp+0x10]
    8881:	0f 11 43 10          	movups XMMWORD PTR [rbx+0x10],xmm0
    8885:	75 e1                	jne    8868 <sequential_sort+0xc8>
    8887:	48 83 c4 18          	add    rsp,0x18
    888b:	5b                   	pop    rbx
    888c:	5d                   	pop    rbp
    888d:	41 5c                	pop    r12
    888f:	41 5d                	pop    r13
    8891:	41 5e                	pop    r14
    8893:	41 5f                	pop    r15
    8895:	c3                   	ret    
    8896:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    889d:	00 00 00 
    88a0:	48 8b 74 24 08       	mov    rsi,QWORD PTR [rsp+0x8]
    88a5:	49 01 d6             	add    r14,rdx
    88a8:	b9 01 00 00 00       	mov    ecx,0x1
    88ad:	4c 89 f2             	mov    rdx,r14
    88b0:	4c 89 e7             	mov    rdi,r12
    88b3:	e8 e8 fe ff ff       	call   87a0 <sequential_sort>
    88b8:	49 83 ff 01          	cmp    r15,0x1
    88bc:	0f 86 5b ff ff ff    	jbe    881d <sequential_sort+0x7d>
    88c2:	31 c9                	xor    ecx,ecx
    88c4:	48 89 da             	mov    rdx,rbx
    88c7:	4c 89 fe             	mov    rsi,r15
    88ca:	4c 89 ef             	mov    rdi,r13
    88cd:	e8 ce fe ff ff       	call   87a0 <sequential_sort>
    88d2:	e9 46 ff ff ff       	jmp    881d <sequential_sort+0x7d>
    88d7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    88de:	00 00 
    88e0:	f3 41 0f 6f 45 e0    	movdqu xmm0,XMMWORD PTR [r13-0x20]
    88e6:	49 83 ef 01          	sub    r15,0x1
    88ea:	0f 11 03             	movups XMMWORD PTR [rbx],xmm0
    88ed:	f3 41 0f 6f 45 f0    	movdqu xmm0,XMMWORD PTR [r13-0x10]
    88f3:	0f 11 43 10          	movups XMMWORD PTR [rbx+0x10],xmm0
    88f7:	74 8e                	je     8887 <sequential_sort+0xe7>
    88f9:	49 89 ed             	mov    r13,rbp
    88fc:	48 83 ed 20          	sub    rbp,0x20
    8900:	e9 23 ff ff ff       	jmp    8828 <sequential_sort+0x88>
    8905:	0f 1f 00             	nop    DWORD PTR [rax]
    8908:	48 8d 77 c0          	lea    rsi,[rdi-0x40]
    890c:	48 8d 7f e0          	lea    rdi,[rdi-0x20]
    8910:	e8 cb fd ff ff       	call   86e0 <compare>
    8915:	40 84 ed             	test   bpl,bpl
    8918:	75 4e                	jne    8968 <sequential_sort+0x1c8>
    891a:	85 c0                	test   eax,eax
    891c:	0f 8e 65 ff ff ff    	jle    8887 <sequential_sort+0xe7>
    8922:	f3 41 0f 6f 55 c0    	movdqu xmm2,XMMWORD PTR [r13-0x40]
    8928:	f3 41 0f 6f 4d e0    	movdqu xmm1,XMMWORD PTR [r13-0x20]
    892e:	f3 41 0f 6f 45 f0    	movdqu xmm0,XMMWORD PTR [r13-0x10]
    8934:	41 0f 11 55 e0       	movups XMMWORD PTR [r13-0x20],xmm2
    8939:	0f 11 4b e0          	movups XMMWORD PTR [rbx-0x20],xmm1
    893d:	0f 11 43 f0          	movups XMMWORD PTR [rbx-0x10],xmm0
    8941:	41 0f 11 4d c0       	movups XMMWORD PTR [r13-0x40],xmm1
    8946:	f3 41 0f 6f 55 d0    	movdqu xmm2,XMMWORD PTR [r13-0x30]
    894c:	41 0f 11 45 d0       	movups XMMWORD PTR [r13-0x30],xmm0
    8951:	41 0f 11 55 f0       	movups XMMWORD PTR [r13-0x10],xmm2
    8956:	48 83 c4 18          	add    rsp,0x18
    895a:	5b                   	pop    rbx
    895b:	5d                   	pop    rbp
    895c:	41 5c                	pop    r12
    895e:	41 5d                	pop    r13
    8960:	41 5e                	pop    r14
    8962:	41 5f                	pop    r15
    8964:	c3                   	ret    
    8965:	0f 1f 00             	nop    DWORD PTR [rax]
    8968:	85 c0                	test   eax,eax
    896a:	0f 9f c0             	setg   al
    896d:	0f b6 c0             	movzx  eax,al
    8970:	89 c2                	mov    edx,eax
    8972:	83 e8 02             	sub    eax,0x2
    8975:	f7 d2                	not    edx
    8977:	48 98                	cdqe   
    8979:	48 63 d2             	movsxd rdx,edx
    897c:	48 c1 e0 05          	shl    rax,0x5
    8980:	48 c1 e2 05          	shl    rdx,0x5
    8984:	4d 8d 44 05 00       	lea    r8,[r13+rax*1+0x0]
    8989:	4c 01 ea             	add    rdx,r13
    898c:	f3 0f 6f 02          	movdqu xmm0,XMMWORD PTR [rdx]
    8990:	0f 11 43 e0          	movups XMMWORD PTR [rbx-0x20],xmm0
    8994:	f3 0f 6f 42 10       	movdqu xmm0,XMMWORD PTR [rdx+0x10]
    8999:	0f 11 43 f0          	movups XMMWORD PTR [rbx-0x10],xmm0
    899d:	f3 41 0f 6f 00       	movdqu xmm0,XMMWORD PTR [r8]
    89a2:	0f 11 43 c0          	movups XMMWORD PTR [rbx-0x40],xmm0
    89a6:	f3 41 0f 6f 40 10    	movdqu xmm0,XMMWORD PTR [r8+0x10]
    89ac:	0f 11 43 d0          	movups XMMWORD PTR [rbx-0x30],xmm0
    89b0:	48 83 c4 18          	add    rsp,0x18
    89b4:	5b                   	pop    rbx
    89b5:	5d                   	pop    rbp
    89b6:	41 5c                	pop    r12
    89b8:	41 5d                	pop    r13
    89ba:	41 5e                	pop    r14
    89bc:	41 5f                	pop    r15
    89be:	c3                   	ret    
    89bf:	48 89 da             	mov    rdx,rbx
    89c2:	4c 89 ef             	mov    rdi,r13
    89c5:	b9 01 00 00 00       	mov    ecx,0x1
    89ca:	4c 89 fe             	mov    rsi,r15
    89cd:	4d 89 e6             	mov    r14,r12
    89d0:	e8 cb fd ff ff       	call   87a0 <sequential_sort>
    89d5:	48 89 d8             	mov    rax,rbx
    89d8:	4c 89 eb             	mov    rbx,r13
    89db:	49 89 c5             	mov    r13,rax
    89de:	e9 3a fe ff ff       	jmp    881d <sequential_sort+0x7d>
    89e3:	0f 1f 00             	nop    DWORD PTR [rax]
    89e6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    89ed:	00 00 00 

00000000000089f0 <write_unique>:
    89f0:	55                   	push   rbp
    89f1:	53                   	push   rbx
    89f2:	48 89 f5             	mov    rbp,rsi
    89f5:	48 89 fb             	mov    rbx,rdi
    89f8:	48 83 ec 18          	sub    rsp,0x18
    89fc:	80 3d 36 1a 21 00 00 	cmp    BYTE PTR [rip+0x211a36],0x0        # 21a439 <unique>
    8a03:	74 3b                	je     8a40 <write_unique+0x50>
    8a05:	48 83 3d 53 1e 21 00 	cmp    QWORD PTR [rip+0x211e53],0x0        # 21a860 <saved_line>
    8a0c:	00 
    8a0d:	74 1a                	je     8a29 <write_unique+0x39>
    8a0f:	48 8d 35 4a 1e 21 00 	lea    rsi,[rip+0x211e4a]        # 21a860 <saved_line>
    8a16:	48 89 54 24 08       	mov    QWORD PTR [rsp+0x8],rdx
    8a1b:	e8 c0 fc ff ff       	call   86e0 <compare>
    8a20:	85 c0                	test   eax,eax
    8a22:	48 8b 54 24 08       	mov    rdx,QWORD PTR [rsp+0x8]
    8a27:	74 2f                	je     8a58 <write_unique+0x68>
    8a29:	f3 0f 6f 03          	movdqu xmm0,XMMWORD PTR [rbx]
    8a2d:	0f 29 05 2c 1e 21 00 	movaps XMMWORD PTR [rip+0x211e2c],xmm0        # 21a860 <saved_line>
    8a34:	f3 0f 6f 43 10       	movdqu xmm0,XMMWORD PTR [rbx+0x10]
    8a39:	0f 29 05 30 1e 21 00 	movaps XMMWORD PTR [rip+0x211e30],xmm0        # 21a870 <saved_line+0x10>
    8a40:	48 83 c4 18          	add    rsp,0x18
    8a44:	48 89 ee             	mov    rsi,rbp
    8a47:	48 89 df             	mov    rdi,rbx
    8a4a:	5b                   	pop    rbx
    8a4b:	5d                   	pop    rbp
    8a4c:	e9 2f e8 ff ff       	jmp    7280 <write_line>
    8a51:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    8a58:	48 83 c4 18          	add    rsp,0x18
    8a5c:	5b                   	pop    rbx
    8a5d:	5d                   	pop    rbp
    8a5e:	c3                   	ret    
    8a5f:	90                   	nop

0000000000008a60 <move_fd.part.11>:
    8a60:	53                   	push   rbx
    8a61:	89 fb                	mov    ebx,edi
    8a63:	e8 78 a2 ff ff       	call   2ce0 <dup2@plt>
    8a68:	89 df                	mov    edi,ebx
    8a6a:	5b                   	pop    rbx
    8a6b:	e9 40 a3 ff ff       	jmp    2db0 <close@plt>

0000000000008a70 <open_input_files>:
    8a70:	41 57                	push   r15
    8a72:	41 56                	push   r14
    8a74:	41 55                	push   r13
    8a76:	41 54                	push   r12
    8a78:	49 89 f4             	mov    r12,rsi
    8a7b:	55                   	push   rbp
    8a7c:	53                   	push   rbx
    8a7d:	48 89 d3             	mov    rbx,rdx
    8a80:	ba 08 00 00 00       	mov    edx,0x8
    8a85:	48 89 fd             	mov    rbp,rdi
    8a88:	48 83 ec 28          	sub    rsp,0x28
    8a8c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8a93:	00 00 
    8a95:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
    8a9a:	31 c0                	xor    eax,eax
    8a9c:	48 89 d0             	mov    rax,rdx
    8a9f:	48 f7 e6             	mul    rsi
    8aa2:	0f 80 fd 01 00 00    	jo     8ca5 <open_input_files+0x235>
    8aa8:	31 c9                	xor    ecx,ecx
    8aaa:	48 85 c0             	test   rax,rax
    8aad:	0f 88 ed 01 00 00    	js     8ca0 <open_input_files+0x230>
    8ab3:	48 85 c9             	test   rcx,rcx
    8ab6:	0f 85 e4 01 00 00    	jne    8ca0 <open_input_files+0x230>
    8abc:	4a 8d 3c e5 00 00 00 	lea    rdi,[r12*8+0x0]
    8ac3:	00 
    8ac4:	e8 17 93 00 00       	call   11de0 <xmalloc>
    8ac9:	48 89 03             	mov    QWORD PTR [rbx],rax
    8acc:	31 db                	xor    ebx,ebx
    8ace:	4d 85 e4             	test   r12,r12
    8ad1:	49 89 c5             	mov    r13,rax
    8ad4:	0f 84 ee 00 00 00    	je     8bc8 <open_input_files+0x158>
    8ada:	48 8d 44 24 10       	lea    rax,[rsp+0x10]
    8adf:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    8ae4:	eb 39                	jmp    8b1f <open_input_files+0xaf>
    8ae6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    8aed:	00 00 00 
    8af0:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    8af4:	48 8d 35 98 cd 00 00 	lea    rsi,[rip+0xcd98]        # 15893 <short_options+0x19c3>
    8afb:	e8 b0 e5 ff ff       	call   70b0 <stream_open>
    8b00:	48 85 c0             	test   rax,rax
    8b03:	49 89 44 dd 00       	mov    QWORD PTR [r13+rbx*8+0x0],rax
    8b08:	0f 84 ba 00 00 00    	je     8bc8 <open_input_files+0x158>
    8b0e:	48 83 c3 01          	add    rbx,0x1
    8b12:	48 83 c5 10          	add    rbp,0x10
    8b16:	49 39 dc             	cmp    r12,rbx
    8b19:	0f 84 a9 00 00 00    	je     8bc8 <open_input_files+0x158>
    8b1f:	4c 8b 7d 08          	mov    r15,QWORD PTR [rbp+0x8]
    8b23:	4d 85 ff             	test   r15,r15
    8b26:	74 c8                	je     8af0 <open_input_files+0x80>
    8b28:	41 0f b6 47 0c       	movzx  eax,BYTE PTR [r15+0xc]
    8b2d:	84 c0                	test   al,al
    8b2f:	74 bf                	je     8af0 <open_input_files+0x80>
    8b31:	3c 01                	cmp    al,0x1
    8b33:	0f 84 e7 00 00 00    	je     8c20 <open_input_files+0x1b0>
    8b39:	49 8d 7f 0d          	lea    rdi,[r15+0xd]
    8b3d:	31 f6                	xor    esi,esi
    8b3f:	31 c0                	xor    eax,eax
    8b41:	e8 ca a4 ff ff       	call   3010 <open@plt>
    8b46:	85 c0                	test   eax,eax
    8b48:	41 89 c6             	mov    r14d,eax
    8b4b:	0f 88 bf 00 00 00    	js     8c10 <open_input_files+0x1a0>
    8b51:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
    8b56:	be 09 00 00 00       	mov    esi,0x9
    8b5b:	e8 70 e2 ff ff       	call   6dd0 <pipe_fork>
    8b60:	83 f8 ff             	cmp    eax,0xffffffff
    8b63:	0f 84 87 00 00 00    	je     8bf0 <open_input_files+0x180>
    8b69:	85 c0                	test   eax,eax
    8b6b:	0f 84 e1 00 00 00    	je     8c52 <open_input_files+0x1e2>
    8b71:	41 89 47 08          	mov    DWORD PTR [r15+0x8],eax
    8b75:	4c 89 ff             	mov    rdi,r15
    8b78:	e8 23 dc ff ff       	call   67a0 <register_proc>
    8b7d:	44 89 f7             	mov    edi,r14d
    8b80:	4d 8d 74 dd 00       	lea    r14,[r13+rbx*8+0x0]
    8b85:	e8 26 a2 ff ff       	call   2db0 <close@plt>
    8b8a:	8b 7c 24 14          	mov    edi,DWORD PTR [rsp+0x14]
    8b8e:	e8 1d a2 ff ff       	call   2db0 <close@plt>
    8b93:	8b 7c 24 10          	mov    edi,DWORD PTR [rsp+0x10]
    8b97:	48 8d 35 f5 cc 00 00 	lea    rsi,[rip+0xccf5]        # 15893 <short_options+0x19c3>
    8b9e:	e8 dd a3 ff ff       	call   2f80 <fdopen@plt>
    8ba3:	48 85 c0             	test   rax,rax
    8ba6:	0f 84 82 00 00 00    	je     8c2e <open_input_files+0x1be>
    8bac:	49 89 44 dd 00       	mov    QWORD PTR [r13+rbx*8+0x0],rax
    8bb1:	48 83 c3 01          	add    rbx,0x1
    8bb5:	48 83 c5 10          	add    rbp,0x10
    8bb9:	49 39 dc             	cmp    r12,rbx
    8bbc:	0f 85 5d ff ff ff    	jne    8b1f <open_input_files+0xaf>
    8bc2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    8bc8:	48 8b 4c 24 18       	mov    rcx,QWORD PTR [rsp+0x18]
    8bcd:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    8bd4:	00 00 
    8bd6:	48 89 d8             	mov    rax,rbx
    8bd9:	0f 85 d0 00 00 00    	jne    8caf <open_input_files+0x23f>
    8bdf:	48 83 c4 28          	add    rsp,0x28
    8be3:	5b                   	pop    rbx
    8be4:	5d                   	pop    rbp
    8be5:	41 5c                	pop    r12
    8be7:	41 5d                	pop    r13
    8be9:	41 5e                	pop    r14
    8beb:	41 5f                	pop    r15
    8bed:	c3                   	ret    
    8bee:	66 90                	xchg   ax,ax
    8bf0:	e8 1b 9f ff ff       	call   2b10 <__errno_location@plt>
    8bf5:	83 38 18             	cmp    DWORD PTR [rax],0x18
    8bf8:	48 89 c5             	mov    rbp,rax
    8bfb:	0f 85 bf 00 00 00    	jne    8cc0 <open_input_files+0x250>
    8c01:	44 89 f7             	mov    edi,r14d
    8c04:	e8 a7 a1 ff ff       	call   2db0 <close@plt>
    8c09:	c7 45 00 18 00 00 00 	mov    DWORD PTR [rbp+0x0],0x18
    8c10:	49 c7 44 dd 00 00 00 	mov    QWORD PTR [r13+rbx*8+0x0],0x0
    8c17:	00 00 
    8c19:	eb ad                	jmp    8bc8 <open_input_files+0x158>
    8c1b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    8c20:	41 8b 7f 08          	mov    edi,DWORD PTR [r15+0x8]
    8c24:	e8 17 db ff ff       	call   6740 <wait_proc>
    8c29:	e9 0b ff ff ff       	jmp    8b39 <open_input_files+0xc9>
    8c2e:	e8 dd 9e ff ff       	call   2b10 <__errno_location@plt>
    8c33:	8b 7c 24 10          	mov    edi,DWORD PTR [rsp+0x10]
    8c37:	44 8b 20             	mov    r12d,DWORD PTR [rax]
    8c3a:	48 89 c5             	mov    rbp,rax
    8c3d:	e8 6e a1 ff ff       	call   2db0 <close@plt>
    8c42:	44 89 65 00          	mov    DWORD PTR [rbp+0x0],r12d
    8c46:	49 c7 06 00 00 00 00 	mov    QWORD PTR [r14],0x0
    8c4d:	e9 76 ff ff ff       	jmp    8bc8 <open_input_files+0x158>
    8c52:	8b 7c 24 10          	mov    edi,DWORD PTR [rsp+0x10]
    8c56:	e8 55 a1 ff ff       	call   2db0 <close@plt>
    8c5b:	45 85 f6             	test   r14d,r14d
    8c5e:	75 54                	jne    8cb4 <open_input_files+0x244>
    8c60:	8b 7c 24 14          	mov    edi,DWORD PTR [rsp+0x14]
    8c64:	83 ff 01             	cmp    edi,0x1
    8c67:	74 0a                	je     8c73 <open_input_files+0x203>
    8c69:	be 01 00 00 00       	mov    esi,0x1
    8c6e:	e8 ed fd ff ff       	call   8a60 <move_fd.part.11>
    8c73:	48 8b 3d ae 17 21 00 	mov    rdi,QWORD PTR [rip+0x2117ae]        # 21a428 <compress_program>
    8c7a:	48 8d 15 66 c8 00 00 	lea    rdx,[rip+0xc866]        # 154e7 <short_options+0x1617>
    8c81:	31 c9                	xor    ecx,ecx
    8c83:	31 c0                	xor    eax,eax
    8c85:	48 89 fe             	mov    rsi,rdi
    8c88:	e8 c3 a4 ff ff       	call   3150 <execlp@plt>
    8c8d:	e8 7e 9e ff ff       	call   2b10 <__errno_location@plt>
    8c92:	8b 38                	mov    edi,DWORD PTR [rax]
    8c94:	48 8d 35 6d b3 00 00 	lea    rsi,[rip+0xb36d]        # 14008 <short_options+0x138>
    8c9b:	e8 8d a5 ff ff       	call   322d <async_safe_die>
    8ca0:	e8 8b 93 00 00       	call   12030 <xalloc_die>
    8ca5:	b9 01 00 00 00       	mov    ecx,0x1
    8caa:	e9 fb fd ff ff       	jmp    8aaa <open_input_files+0x3a>
    8caf:	e8 ec 9f ff ff       	call   2ca0 <__stack_chk_fail@plt>
    8cb4:	31 f6                	xor    esi,esi
    8cb6:	44 89 f7             	mov    edi,r14d
    8cb9:	e8 a2 fd ff ff       	call   8a60 <move_fd.part.11>
    8cbe:	eb a0                	jmp    8c60 <open_input_files+0x1f0>
    8cc0:	48 8b 35 61 17 21 00 	mov    rsi,QWORD PTR [rip+0x211761]        # 21a428 <compress_program>
    8cc7:	bf 04 00 00 00       	mov    edi,0x4
    8ccc:	e8 ef 73 00 00       	call   100c0 <quotearg_style>
    8cd1:	48 8d 35 08 b3 00 00 	lea    rsi,[rip+0xb308]        # 13fe0 <short_options+0x110>
    8cd8:	ba 05 00 00 00       	mov    edx,0x5
    8cdd:	31 ff                	xor    edi,edi
    8cdf:	48 89 c3             	mov    rbx,rax
    8ce2:	e8 89 9f ff ff       	call   2c70 <dcgettext@plt>
    8ce7:	8b 75 00             	mov    esi,DWORD PTR [rbp+0x0]
    8cea:	48 89 c2             	mov    rdx,rax
    8ced:	48 89 d9             	mov    rcx,rbx
    8cf0:	bf 02 00 00 00       	mov    edi,0x2
    8cf5:	31 c0                	xor    eax,eax
    8cf7:	e8 e4 a2 ff ff       	call   2fe0 <error@plt>
    8cfc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000008d00 <maybe_create_temp>:
    8d00:	41 57                	push   r15
    8d02:	41 56                	push   r14
    8d04:	41 55                	push   r13
    8d06:	41 54                	push   r12
    8d08:	55                   	push   rbp
    8d09:	53                   	push   rbx
    8d0a:	48 81 ec a8 00 00 00 	sub    rsp,0xa8
    8d11:	48 8b 15 10 15 21 00 	mov    rdx,QWORD PTR [rip+0x211510]        # 21a228 <temp_dir_index.8459>
    8d18:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8d1f:	00 00 
    8d21:	48 89 84 24 98 00 00 	mov    QWORD PTR [rsp+0x98],rax
    8d28:	00 
    8d29:	31 c0                	xor    eax,eax
    8d2b:	48 8b 05 1e 17 21 00 	mov    rax,QWORD PTR [rip+0x21171e]        # 21a450 <temp_dirs>
    8d32:	48 89 3c 24          	mov    QWORD PTR [rsp],rdi
    8d36:	89 74 24 0c          	mov    DWORD PTR [rsp+0xc],esi
    8d3a:	4c 8b 24 d0          	mov    r12,QWORD PTR [rax+rdx*8]
    8d3e:	4c 89 e7             	mov    rdi,r12
    8d41:	e8 4a 9f ff ff       	call   2c90 <strlen@plt>
    8d46:	48 8d 78 20          	lea    rdi,[rax+0x20]
    8d4a:	49 89 c7             	mov    r15,rax
    8d4d:	48 83 e7 f8          	and    rdi,0xfffffffffffffff8
    8d51:	e8 8a 90 00 00       	call   11de0 <xmalloc>
    8d56:	48 8d 68 0d          	lea    rbp,[rax+0xd]
    8d5a:	4c 89 fa             	mov    rdx,r15
    8d5d:	4c 89 e6             	mov    rsi,r12
    8d60:	48 89 c3             	mov    rbx,rax
    8d63:	48 89 ef             	mov    rdi,rbp
    8d66:	e8 15 a1 ff ff       	call   2e80 <memcpy@plt>
    8d6b:	48 b8 2f 73 6f 72 74 	movabs rax,0x58585874726f732f
    8d72:	58 58 58 
    8d75:	4a 89 44 3b 0d       	mov    QWORD PTR [rbx+r15*1+0xd],rax
    8d7a:	48 8b 05 a7 14 21 00 	mov    rax,QWORD PTR [rip+0x2114a7]        # 21a228 <temp_dir_index.8459>
    8d81:	42 c7 44 3d 08 58 58 	mov    DWORD PTR [rbp+r15*1+0x8],0x585858
    8d88:	58 00 
    8d8a:	48 c7 03 00 00 00 00 	mov    QWORD PTR [rbx],0x0
    8d91:	48 83 c0 01          	add    rax,0x1
    8d95:	48 3b 05 ac 16 21 00 	cmp    rax,QWORD PTR [rip+0x2116ac]        # 21a448 <temp_dir_count>
    8d9c:	48 89 05 85 14 21 00 	mov    QWORD PTR [rip+0x211485],rax        # 21a228 <temp_dir_index.8459>
    8da3:	75 0b                	jne    8db0 <maybe_create_temp+0xb0>
    8da5:	48 c7 05 78 14 21 00 	mov    QWORD PTR [rip+0x211478],0x0        # 21a228 <temp_dir_index.8459>
    8dac:	00 00 00 00 
    8db0:	4c 8d 6c 24 10       	lea    r13,[rsp+0x10]
    8db5:	48 8d 35 e4 15 21 00 	lea    rsi,[rip+0x2115e4]        # 21a3a0 <caught_signals>
    8dbc:	31 ff                	xor    edi,edi
    8dbe:	49 8d 55 08          	lea    rdx,[r13+0x8]
    8dc2:	e8 29 9d ff ff       	call   2af0 <pthread_sigmask@plt>
    8dc7:	be 00 00 08 00       	mov    esi,0x80000
    8dcc:	85 c0                	test   eax,eax
    8dce:	48 89 ef             	mov    rdi,rbp
    8dd1:	0f 94 44 24 10       	sete   BYTE PTR [rsp+0x10]
    8dd6:	e8 05 84 00 00       	call   111e0 <mkostemp_safer>
    8ddb:	41 89 c7             	mov    r15d,eax
    8dde:	e8 2d 9d ff ff       	call   2b10 <__errno_location@plt>
    8de3:	45 85 ff             	test   r15d,r15d
    8de6:	49 89 c6             	mov    r14,rax
    8de9:	0f 88 c1 00 00 00    	js     8eb0 <maybe_create_temp+0x1b0>
    8def:	80 7c 24 10 00       	cmp    BYTE PTR [rsp+0x10],0x0
    8df4:	48 8b 05 45 12 21 00 	mov    rax,QWORD PTR [rip+0x211245]        # 21a040 <temptail>
    8dfb:	48 89 1d 3e 12 21 00 	mov    QWORD PTR [rip+0x21123e],rbx        # 21a040 <temptail>
    8e02:	48 89 18             	mov    QWORD PTR [rax],rbx
    8e05:	74 0e                	je     8e15 <maybe_create_temp+0x115>
    8e07:	45 8b 26             	mov    r12d,DWORD PTR [r14]
    8e0a:	4c 89 ef             	mov    rdi,r13
    8e0d:	e8 9e dd ff ff       	call   6bb0 <cs_leave.part.4>
    8e12:	45 89 26             	mov    DWORD PTR [r14],r12d
    8e15:	48 83 3d 0b 16 21 00 	cmp    QWORD PTR [rip+0x21160b],0x0        # 21a428 <compress_program>
    8e1c:	00 
    8e1d:	c6 43 0c 00          	mov    BYTE PTR [rbx+0xc],0x0
    8e21:	74 1b                	je     8e3e <maybe_create_temp+0x13e>
    8e23:	be 04 00 00 00       	mov    esi,0x4
    8e28:	4c 89 ef             	mov    rdi,r13
    8e2b:	e8 a0 df ff ff       	call   6dd0 <pipe_fork>
    8e30:	83 f8 00             	cmp    eax,0x0
    8e33:	89 43 08             	mov    DWORD PTR [rbx+0x8],eax
    8e36:	7f 58                	jg     8e90 <maybe_create_temp+0x190>
    8e38:	0f 84 97 00 00 00    	je     8ed5 <maybe_create_temp+0x1d5>
    8e3e:	48 8d 35 a5 c6 00 00 	lea    rsi,[rip+0xc6a5]        # 154ea <short_options+0x161a>
    8e45:	44 89 ff             	mov    edi,r15d
    8e48:	e8 33 a1 ff ff       	call   2f80 <fdopen@plt>
    8e4d:	48 8b 0c 24          	mov    rcx,QWORD PTR [rsp]
    8e51:	48 85 c0             	test   rax,rax
    8e54:	48 89 01             	mov    QWORD PTR [rcx],rax
    8e57:	0f 84 c3 00 00 00    	je     8f20 <maybe_create_temp+0x220>
    8e5d:	48 8b 8c 24 98 00 00 	mov    rcx,QWORD PTR [rsp+0x98]
    8e64:	00 
    8e65:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    8e6c:	00 00 
    8e6e:	48 89 d8             	mov    rax,rbx
    8e71:	0f 85 a4 00 00 00    	jne    8f1b <maybe_create_temp+0x21b>
    8e77:	48 81 c4 a8 00 00 00 	add    rsp,0xa8
    8e7e:	5b                   	pop    rbx
    8e7f:	5d                   	pop    rbp
    8e80:	41 5c                	pop    r12
    8e82:	41 5d                	pop    r13
    8e84:	41 5e                	pop    r14
    8e86:	41 5f                	pop    r15
    8e88:	c3                   	ret    
    8e89:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    8e90:	44 89 ff             	mov    edi,r15d
    8e93:	e8 18 9f ff ff       	call   2db0 <close@plt>
    8e98:	8b 7c 24 10          	mov    edi,DWORD PTR [rsp+0x10]
    8e9c:	e8 0f 9f ff ff       	call   2db0 <close@plt>
    8ea1:	48 89 df             	mov    rdi,rbx
    8ea4:	44 8b 7c 24 14       	mov    r15d,DWORD PTR [rsp+0x14]
    8ea9:	e8 f2 d8 ff ff       	call   67a0 <register_proc>
    8eae:	eb 8e                	jmp    8e3e <maybe_create_temp+0x13e>
    8eb0:	80 7c 24 10 00       	cmp    BYTE PTR [rsp+0x10],0x0
    8eb5:	8b 28                	mov    ebp,DWORD PTR [rax]
    8eb7:	0f 85 c5 00 00 00    	jne    8f82 <maybe_create_temp+0x282>
    8ebd:	83 fd 18             	cmp    ebp,0x18
    8ec0:	75 7c                	jne    8f3e <maybe_create_temp+0x23e>
    8ec2:	80 7c 24 0c 01       	cmp    BYTE PTR [rsp+0xc],0x1
    8ec7:	75 75                	jne    8f3e <maybe_create_temp+0x23e>
    8ec9:	48 89 df             	mov    rdi,rbx
    8ecc:	31 db                	xor    ebx,ebx
    8ece:	e8 ed a2 ff ff       	call   31c0 <free@plt>
    8ed3:	eb 88                	jmp    8e5d <maybe_create_temp+0x15d>
    8ed5:	8b 7c 24 14          	mov    edi,DWORD PTR [rsp+0x14]
    8ed9:	e8 d2 9e ff ff       	call   2db0 <close@plt>
    8ede:	41 83 ff 01          	cmp    r15d,0x1
    8ee2:	74 0d                	je     8ef1 <maybe_create_temp+0x1f1>
    8ee4:	be 01 00 00 00       	mov    esi,0x1
    8ee9:	44 89 ff             	mov    edi,r15d
    8eec:	e8 6f fb ff ff       	call   8a60 <move_fd.part.11>
    8ef1:	8b 7c 24 10          	mov    edi,DWORD PTR [rsp+0x10]
    8ef5:	85 ff                	test   edi,edi
    8ef7:	75 7d                	jne    8f76 <maybe_create_temp+0x276>
    8ef9:	48 8b 3d 28 15 21 00 	mov    rdi,QWORD PTR [rip+0x211528]        # 21a428 <compress_program>
    8f00:	31 d2                	xor    edx,edx
    8f02:	31 c0                	xor    eax,eax
    8f04:	48 89 fe             	mov    rsi,rdi
    8f07:	e8 44 a2 ff ff       	call   3150 <execlp@plt>
    8f0c:	41 8b 3e             	mov    edi,DWORD PTR [r14]
    8f0f:	48 8d 35 4a b1 00 00 	lea    rsi,[rip+0xb14a]        # 14060 <short_options+0x190>
    8f16:	e8 12 a3 ff ff       	call   322d <async_safe_die>
    8f1b:	e8 80 9d ff ff       	call   2ca0 <__stack_chk_fail@plt>
    8f20:	48 8d 35 61 b1 00 00 	lea    rsi,[rip+0xb161]        # 14088 <short_options+0x1b8>
    8f27:	31 ff                	xor    edi,edi
    8f29:	ba 05 00 00 00       	mov    edx,0x5
    8f2e:	e8 3d 9d ff ff       	call   2c70 <dcgettext@plt>
    8f33:	48 89 ee             	mov    rsi,rbp
    8f36:	48 89 c7             	mov    rdi,rax
    8f39:	e8 e2 d3 ff ff       	call   6320 <sort_die>
    8f3e:	4c 89 e6             	mov    rsi,r12
    8f41:	bf 04 00 00 00       	mov    edi,0x4
    8f46:	e8 75 71 00 00       	call   100c0 <quotearg_style>
    8f4b:	48 8d 35 e6 b0 00 00 	lea    rsi,[rip+0xb0e6]        # 14038 <short_options+0x168>
    8f52:	ba 05 00 00 00       	mov    edx,0x5
    8f57:	31 ff                	xor    edi,edi
    8f59:	48 89 c3             	mov    rbx,rax
    8f5c:	e8 0f 9d ff ff       	call   2c70 <dcgettext@plt>
    8f61:	41 8b 36             	mov    esi,DWORD PTR [r14]
    8f64:	48 89 c2             	mov    rdx,rax
    8f67:	48 89 d9             	mov    rcx,rbx
    8f6a:	bf 02 00 00 00       	mov    edi,0x2
    8f6f:	31 c0                	xor    eax,eax
    8f71:	e8 6a a0 ff ff       	call   2fe0 <error@plt>
    8f76:	31 f6                	xor    esi,esi
    8f78:	e8 e3 fa ff ff       	call   8a60 <move_fd.part.11>
    8f7d:	e9 77 ff ff ff       	jmp    8ef9 <maybe_create_temp+0x1f9>
    8f82:	4c 89 ef             	mov    rdi,r13
    8f85:	e8 26 dc ff ff       	call   6bb0 <cs_leave.part.4>
    8f8a:	41 89 2e             	mov    DWORD PTR [r14],ebp
    8f8d:	e9 2b ff ff ff       	jmp    8ebd <maybe_create_temp+0x1bd>
    8f92:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    8f96:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    8f9d:	00 00 00 

0000000000008fa0 <queue_check_insert.part.12>:
    8fa0:	48 8b 4e 10          	mov    rcx,QWORD PTR [rsi+0x10]
    8fa4:	48 39 0e             	cmp    QWORD PTR [rsi],rcx
    8fa7:	48 8b 56 08          	mov    rdx,QWORD PTR [rsi+0x8]
    8fab:	48 8b 46 18          	mov    rax,QWORD PTR [rsi+0x18]
    8faf:	74 1f                	je     8fd0 <queue_check_insert.part.12+0x30>
    8fb1:	48 39 c2             	cmp    rdx,rax
    8fb4:	74 0a                	je     8fc0 <queue_check_insert.part.12+0x20>
    8fb6:	e9 75 d9 ff ff       	jmp    6930 <queue_insert>
    8fbb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    8fc0:	48 83 7e 30 00       	cmp    QWORD PTR [rsi+0x30],0x0
    8fc5:	74 ef                	je     8fb6 <queue_check_insert.part.12+0x16>
    8fc7:	f3 c3                	repz ret 
    8fc9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    8fd0:	48 39 c2             	cmp    rdx,rax
    8fd3:	74 f2                	je     8fc7 <queue_check_insert.part.12+0x27>
    8fd5:	48 83 7e 28 00       	cmp    QWORD PTR [rsi+0x28],0x0
    8fda:	75 eb                	jne    8fc7 <queue_check_insert.part.12+0x27>
    8fdc:	e9 4f d9 ff ff       	jmp    6930 <queue_insert>
    8fe1:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    8fe6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    8fed:	00 00 00 

0000000000008ff0 <sortlines>:
    8ff0:	41 57                	push   r15
    8ff2:	41 56                	push   r14
    8ff4:	41 55                	push   r13
    8ff6:	41 54                	push   r12
    8ff8:	4d 89 c4             	mov    r12,r8
    8ffb:	55                   	push   rbp
    8ffc:	53                   	push   rbx
    8ffd:	48 89 cb             	mov    rbx,rcx
    9000:	49 89 f0             	mov    r8,rsi
    9003:	48 89 fd             	mov    rbp,rdi
    9006:	48 81 ec 98 00 00 00 	sub    rsp,0x98
    900d:	4c 8b 7b 28          	mov    r15,QWORD PTR [rbx+0x28]
    9011:	4c 8b 73 30          	mov    r14,QWORD PTR [rbx+0x30]
    9015:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    901c:	00 00 
    901e:	48 89 84 24 88 00 00 	mov    QWORD PTR [rsp+0x88],rax
    9025:	00 
    9026:	31 c0                	xor    eax,eax
    9028:	48 8b 43 40          	mov    rax,QWORD PTR [rbx+0x40]
    902c:	48 8b 8c 24 d0 00 00 	mov    rcx,QWORD PTR [rsp+0xd0]
    9033:	00 
    9034:	49 d1 e8             	shr    r8,1
    9037:	48 89 54 24 20       	mov    QWORD PTR [rsp+0x20],rdx
    903c:	4c 89 4c 24 28       	mov    QWORD PTR [rsp+0x28],r9
    9041:	48 89 7c 24 50       	mov    QWORD PTR [rsp+0x50],rdi
    9046:	4c 89 44 24 58       	mov    QWORD PTR [rsp+0x58],r8
    904b:	48 89 44 24 68       	mov    QWORD PTR [rsp+0x68],rax
    9050:	4b 8d 04 37          	lea    rax,[r15+r14*1]
    9054:	48 89 4c 24 30       	mov    QWORD PTR [rsp+0x30],rcx
    9059:	4c 89 44 24 08       	mov    QWORD PTR [rsp+0x8],r8
    905e:	48 89 54 24 60       	mov    QWORD PTR [rsp+0x60],rdx
    9063:	48 3d ff ff 01 00    	cmp    rax,0x1ffff
    9069:	4c 89 64 24 70       	mov    QWORD PTR [rsp+0x70],r12
    906e:	4c 89 4c 24 78       	mov    QWORD PTR [rsp+0x78],r9
    9073:	48 89 8c 24 80 00 00 	mov    QWORD PTR [rsp+0x80],rcx
    907a:	00 
    907b:	76 0d                	jbe    908a <sortlines+0x9a>
    907d:	48 83 fe 01          	cmp    rsi,0x1
    9081:	49 89 f5             	mov    r13,rsi
    9084:	0f 87 ca 05 00 00    	ja     9654 <sortlines+0x664>
    908a:	48 8b 44 24 20       	mov    rax,QWORD PTR [rsp+0x20]
    908f:	4d 89 fd             	mov    r13,r15
    9092:	49 89 e8             	mov    r8,rbp
    9095:	49 c1 e5 05          	shl    r13,0x5
    9099:	49 f7 dd             	neg    r13
    909c:	48 c1 e0 05          	shl    rax,0x5
    90a0:	49 29 c0             	sub    r8,rax
    90a3:	49 83 fe 01          	cmp    r14,0x1
    90a7:	4a 8d 44 2d 00       	lea    rax,[rbp+r13*1+0x0]
    90ac:	76 34                	jbe    90e2 <sortlines+0xf2>
    90ae:	4c 89 fa             	mov    rdx,r15
    90b1:	4c 89 c1             	mov    rcx,r8
    90b4:	48 89 c7             	mov    rdi,rax
    90b7:	48 d1 ea             	shr    rdx,1
    90ba:	4c 89 f6             	mov    rsi,r14
    90bd:	4c 89 44 24 10       	mov    QWORD PTR [rsp+0x10],r8
    90c2:	48 c1 e2 05          	shl    rdx,0x5
    90c6:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    90cb:	48 29 d1             	sub    rcx,rdx
    90ce:	48 89 ca             	mov    rdx,rcx
    90d1:	31 c9                	xor    ecx,ecx
    90d3:	e8 c8 f6 ff ff       	call   87a0 <sequential_sort>
    90d8:	4c 8b 44 24 10       	mov    r8,QWORD PTR [rsp+0x10]
    90dd:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
    90e2:	49 83 ff 01          	cmp    r15,0x1
    90e6:	76 1a                	jbe    9102 <sortlines+0x112>
    90e8:	31 c9                	xor    ecx,ecx
    90ea:	4c 89 c2             	mov    rdx,r8
    90ed:	4c 89 fe             	mov    rsi,r15
    90f0:	48 89 ef             	mov    rdi,rbp
    90f3:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    90f8:	e8 a3 f6 ff ff       	call   87a0 <sequential_sort>
    90fd:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
    9102:	4c 89 f6             	mov    rsi,r14
    9105:	48 89 2b             	mov    QWORD PTR [rbx],rbp
    9108:	48 89 43 08          	mov    QWORD PTR [rbx+0x8],rax
    910c:	48 c1 e6 05          	shl    rsi,0x5
    9110:	48 89 43 10          	mov    QWORD PTR [rbx+0x10],rax
    9114:	4c 89 e7             	mov    rdi,r12
    9117:	49 29 f5             	sub    r13,rsi
    911a:	48 89 de             	mov    rsi,rbx
    911d:	4c 01 ed             	add    rbp,r13
    9120:	4d 8d 6c 24 08       	lea    r13,[r12+0x8]
    9125:	48 89 6b 18          	mov    QWORD PTR [rbx+0x18],rbp
    9129:	49 8d 6c 24 30       	lea    rbp,[r12+0x30]
    912e:	e8 fd d7 ff ff       	call   6930 <queue_insert>
    9133:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    9138:	4c 89 ef             	mov    rdi,r13
    913b:	e8 60 a0 ff ff       	call   31a0 <pthread_mutex_lock@plt>
    9140:	eb 11                	jmp    9153 <sortlines+0x163>
    9142:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    9148:	4c 89 ee             	mov    rsi,r13
    914b:	48 89 ef             	mov    rdi,rbp
    914e:	e8 dd 9a ff ff       	call   2c30 <pthread_cond_wait@plt>
    9153:	49 8b 3c 24          	mov    rdi,QWORD PTR [r12]
    9157:	e8 a4 49 00 00       	call   db00 <heap_remove_top>
    915c:	48 85 c0             	test   rax,rax
    915f:	74 e7                	je     9148 <sortlines+0x158>
    9161:	48 89 c3             	mov    rbx,rax
    9164:	4c 89 ef             	mov    rdi,r13
    9167:	e8 84 9d ff ff       	call   2ef0 <pthread_mutex_unlock@plt>
    916c:	48 8d 43 58          	lea    rax,[rbx+0x58]
    9170:	48 89 c7             	mov    rdi,rax
    9173:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
    9178:	e8 23 a0 ff ff       	call   31a0 <pthread_mutex_lock@plt>
    917d:	8b 43 50             	mov    eax,DWORD PTR [rbx+0x50]
    9180:	c6 43 54 00          	mov    BYTE PTR [rbx+0x54],0x0
    9184:	85 c0                	test   eax,eax
    9186:	0f 84 94 02 00 00    	je     9420 <sortlines+0x430>
    918c:	48 8b 54 24 20       	mov    rdx,QWORD PTR [rsp+0x20]
    9191:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    9194:	8d 4c 00 02          	lea    ecx,[rax+rax*1+0x2]
    9198:	48 8b 73 08          	mov    rsi,QWORD PTR [rbx+0x8]
    919c:	48 d3 ea             	shr    rdx,cl
    919f:	83 f8 01             	cmp    eax,0x1
    91a2:	48 89 7c 24 08       	mov    QWORD PTR [rsp+0x8],rdi
    91a7:	48 89 74 24 10       	mov    QWORD PTR [rsp+0x10],rsi
    91ac:	4c 8d 7a 01          	lea    r15,[rdx+0x1]
    91b0:	0f 86 4a 01 00 00    	jbe    9300 <sortlines+0x310>
    91b6:	48 8b 43 20          	mov    rax,QWORD PTR [rbx+0x20]
    91ba:	4c 8b 30             	mov    r14,QWORD PTR [rax]
    91bd:	eb 27                	jmp    91e6 <sortlines+0x1f6>
    91bf:	90                   	nop
    91c0:	48 8b 43 08          	mov    rax,QWORD PTR [rbx+0x8]
    91c4:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    91c7:	f3 0f 6f 40 e0       	movdqu xmm0,XMMWORD PTR [rax-0x20]
    91cc:	48 8d 70 e0          	lea    rsi,[rax-0x20]
    91d0:	48 89 73 08          	mov    QWORD PTR [rbx+0x8],rsi
    91d4:	41 0f 11 06          	movups XMMWORD PTR [r14],xmm0
    91d8:	f3 0f 6f 40 f0       	movdqu xmm0,XMMWORD PTR [rax-0x10]
    91dd:	41 0f 11 46 10       	movups XMMWORD PTR [r14+0x10],xmm0
    91e2:	49 83 ef 01          	sub    r15,0x1
    91e6:	48 8b 43 10          	mov    rax,QWORD PTR [rbx+0x10]
    91ea:	48 39 f8             	cmp    rax,rdi
    91ed:	0f 84 ad 01 00 00    	je     93a0 <sortlines+0x3b0>
    91f3:	48 39 73 18          	cmp    QWORD PTR [rbx+0x18],rsi
    91f7:	74 4e                	je     9247 <sortlines+0x257>
    91f9:	4d 85 ff             	test   r15,r15
    91fc:	74 42                	je     9240 <sortlines+0x250>
    91fe:	48 83 ee 20          	sub    rsi,0x20
    9202:	48 83 ef 20          	sub    rdi,0x20
    9206:	49 83 ee 20          	sub    r14,0x20
    920a:	e8 d1 f4 ff ff       	call   86e0 <compare>
    920f:	85 c0                	test   eax,eax
    9211:	7f ad                	jg     91c0 <sortlines+0x1d0>
    9213:	48 8b 03             	mov    rax,QWORD PTR [rbx]
    9216:	48 8b 73 08          	mov    rsi,QWORD PTR [rbx+0x8]
    921a:	f3 0f 6f 40 e0       	movdqu xmm0,XMMWORD PTR [rax-0x20]
    921f:	48 8d 78 e0          	lea    rdi,[rax-0x20]
    9223:	48 89 3b             	mov    QWORD PTR [rbx],rdi
    9226:	41 0f 11 06          	movups XMMWORD PTR [r14],xmm0
    922a:	f3 0f 6f 40 f0       	movdqu xmm0,XMMWORD PTR [rax-0x10]
    922f:	41 0f 11 46 10       	movups XMMWORD PTR [r14+0x10],xmm0
    9234:	eb ac                	jmp    91e2 <sortlines+0x1f2>
    9236:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    923d:	00 00 00 
    9240:	49 c7 c7 ff ff ff ff 	mov    r15,0xffffffffffffffff
    9247:	4c 8b 44 24 10       	mov    r8,QWORD PTR [rsp+0x10]
    924c:	4c 8b 5c 24 08       	mov    r11,QWORD PTR [rsp+0x8]
    9251:	4c 8b 4b 30          	mov    r9,QWORD PTR [rbx+0x30]
    9255:	4c 8b 53 28          	mov    r10,QWORD PTR [rbx+0x28]
    9259:	49 29 f0             	sub    r8,rsi
    925c:	49 29 fb             	sub    r11,rdi
    925f:	49 c1 f8 05          	sar    r8,0x5
    9263:	49 c1 fb 05          	sar    r11,0x5
    9267:	4d 39 c8             	cmp    r8,r9
    926a:	4c 89 d9             	mov    rcx,r11
    926d:	0f 84 3d 01 00 00    	je     93b0 <sortlines+0x3c0>
    9273:	4d 39 d3             	cmp    r11,r10
    9276:	0f 84 e4 01 00 00    	je     9460 <sortlines+0x470>
    927c:	48 8b 43 20          	mov    rax,QWORD PTR [rbx+0x20]
    9280:	4c 89 30             	mov    QWORD PTR [rax],r14
    9283:	49 29 ca             	sub    r10,rcx
    9286:	4d 29 c1             	sub    r9,r8
    9289:	80 7b 54 00          	cmp    BYTE PTR [rbx+0x54],0x0
    928d:	4c 89 53 28          	mov    QWORD PTR [rbx+0x28],r10
    9291:	4c 89 4b 30          	mov    QWORD PTR [rbx+0x30],r9
    9295:	0f 84 f5 00 00 00    	je     9390 <sortlines+0x3a0>
    929b:	83 7b 50 01          	cmp    DWORD PTR [rbx+0x50],0x1
    929f:	77 2f                	ja     92d0 <sortlines+0x2e0>
    92a1:	48 8b 43 30          	mov    rax,QWORD PTR [rbx+0x30]
    92a5:	48 03 43 28          	add    rax,QWORD PTR [rbx+0x28]
    92a9:	75 15                	jne    92c0 <sortlines+0x2d0>
    92ab:	48 8b 73 38          	mov    rsi,QWORD PTR [rbx+0x38]
    92af:	4c 89 e7             	mov    rdi,r12
    92b2:	e8 79 d6 ff ff       	call   6930 <queue_insert>
    92b7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    92be:	00 00 
    92c0:	48 8b 7c 24 18       	mov    rdi,QWORD PTR [rsp+0x18]
    92c5:	e8 26 9c ff ff       	call   2ef0 <pthread_mutex_unlock@plt>
    92ca:	e9 69 fe ff ff       	jmp    9138 <sortlines+0x148>
    92cf:	90                   	nop
    92d0:	48 8b 43 38          	mov    rax,QWORD PTR [rbx+0x38]
    92d4:	48 8d 78 58          	lea    rdi,[rax+0x58]
    92d8:	e8 c3 9e ff ff       	call   31a0 <pthread_mutex_lock@plt>
    92dd:	48 8b 73 38          	mov    rsi,QWORD PTR [rbx+0x38]
    92e1:	80 7e 54 00          	cmp    BYTE PTR [rsi+0x54],0x0
    92e5:	75 0c                	jne    92f3 <sortlines+0x303>
    92e7:	4c 89 e7             	mov    rdi,r12
    92ea:	e8 b1 fc ff ff       	call   8fa0 <queue_check_insert.part.12>
    92ef:	48 8b 73 38          	mov    rsi,QWORD PTR [rbx+0x38]
    92f3:	48 8d 7e 58          	lea    rdi,[rsi+0x58]
    92f7:	e8 f4 9b ff ff       	call   2ef0 <pthread_mutex_unlock@plt>
    92fc:	eb c2                	jmp    92c0 <sortlines+0x2d0>
    92fe:	66 90                	xchg   ax,ax
    9300:	48 89 6c 24 38       	mov    QWORD PTR [rsp+0x38],rbp
    9305:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
    930a:	48 89 dd             	mov    rbp,rbx
    930d:	48 8b 74 24 10       	mov    rsi,QWORD PTR [rsp+0x10]
    9312:	4c 8b 74 24 28       	mov    r14,QWORD PTR [rsp+0x28]
    9317:	48 8b 5c 24 30       	mov    rbx,QWORD PTR [rsp+0x30]
    931c:	eb 25                	jmp    9343 <sortlines+0x353>
    931e:	66 90                	xchg   ax,ax
    9320:	48 8b 45 08          	mov    rax,QWORD PTR [rbp+0x8]
    9324:	48 89 da             	mov    rdx,rbx
    9327:	4c 89 f6             	mov    rsi,r14
    932a:	48 8d 78 e0          	lea    rdi,[rax-0x20]
    932e:	48 89 7d 08          	mov    QWORD PTR [rbp+0x8],rdi
    9332:	e8 b9 f6 ff ff       	call   89f0 <write_unique>
    9337:	48 8b 75 08          	mov    rsi,QWORD PTR [rbp+0x8]
    933b:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    933f:	49 83 ef 01          	sub    r15,0x1
    9343:	48 8b 45 10          	mov    rax,QWORD PTR [rbp+0x10]
    9347:	48 39 f8             	cmp    rax,rdi
    934a:	0f 84 80 01 00 00    	je     94d0 <sortlines+0x4e0>
    9350:	48 39 75 18          	cmp    QWORD PTR [rbp+0x18],rsi
    9354:	0f 84 d6 02 00 00    	je     9630 <sortlines+0x640>
    935a:	4d 85 ff             	test   r15,r15
    935d:	0f 84 dd 02 00 00    	je     9640 <sortlines+0x650>
    9363:	48 83 ee 20          	sub    rsi,0x20
    9367:	48 83 ef 20          	sub    rdi,0x20
    936b:	e8 70 f3 ff ff       	call   86e0 <compare>
    9370:	85 c0                	test   eax,eax
    9372:	7f ac                	jg     9320 <sortlines+0x330>
    9374:	48 8b 45 00          	mov    rax,QWORD PTR [rbp+0x0]
    9378:	48 89 da             	mov    rdx,rbx
    937b:	4c 89 f6             	mov    rsi,r14
    937e:	48 8d 78 e0          	lea    rdi,[rax-0x20]
    9382:	48 89 7d 00          	mov    QWORD PTR [rbp+0x0],rdi
    9386:	e8 65 f6 ff ff       	call   89f0 <write_unique>
    938b:	eb aa                	jmp    9337 <sortlines+0x347>
    938d:	0f 1f 00             	nop    DWORD PTR [rax]
    9390:	48 89 de             	mov    rsi,rbx
    9393:	4c 89 e7             	mov    rdi,r12
    9396:	e8 05 fc ff ff       	call   8fa0 <queue_check_insert.part.12>
    939b:	e9 fb fe ff ff       	jmp    929b <sortlines+0x2ab>
    93a0:	48 89 f8             	mov    rax,rdi
    93a3:	e9 9f fe ff ff       	jmp    9247 <sortlines+0x257>
    93a8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    93af:	00 
    93b0:	48 39 c7             	cmp    rdi,rax
    93b3:	0f 84 c3 fe ff ff    	je     927c <sortlines+0x28c>
    93b9:	4d 85 ff             	test   r15,r15
    93bc:	49 8d 77 ff          	lea    rsi,[r15-0x1]
    93c0:	0f 84 b6 fe ff ff    	je     927c <sortlines+0x28c>
    93c6:	48 83 ef 20          	sub    rdi,0x20
    93ca:	eb 15                	jmp    93e1 <sortlines+0x3f1>
    93cc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    93d0:	48 83 ee 01          	sub    rsi,0x1
    93d4:	48 8d 57 e0          	lea    rdx,[rdi-0x20]
    93d8:	48 83 fe ff          	cmp    rsi,0xffffffffffffffff
    93dc:	74 21                	je     93ff <sortlines+0x40f>
    93de:	48 89 d7             	mov    rdi,rdx
    93e1:	f3 0f 6f 07          	movdqu xmm0,XMMWORD PTR [rdi]
    93e5:	49 83 ee 20          	sub    r14,0x20
    93e9:	48 39 c7             	cmp    rdi,rax
    93ec:	48 89 3b             	mov    QWORD PTR [rbx],rdi
    93ef:	41 0f 11 06          	movups XMMWORD PTR [r14],xmm0
    93f3:	f3 0f 6f 47 10       	movdqu xmm0,XMMWORD PTR [rdi+0x10]
    93f8:	41 0f 11 46 10       	movups XMMWORD PTR [r14+0x10],xmm0
    93fd:	75 d1                	jne    93d0 <sortlines+0x3e0>
    93ff:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
    9404:	4d 89 c8             	mov    r8,r9
    9407:	48 29 f8             	sub    rax,rdi
    940a:	48 c1 f8 05          	sar    rax,0x5
    940e:	48 89 c1             	mov    rcx,rax
    9411:	e9 66 fe ff ff       	jmp    927c <sortlines+0x28c>
    9416:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    941d:	00 00 00 
    9420:	48 8b 7c 24 18       	mov    rdi,QWORD PTR [rsp+0x18]
    9425:	e8 c6 9a ff ff       	call   2ef0 <pthread_mutex_unlock@plt>
    942a:	48 89 de             	mov    rsi,rbx
    942d:	4c 89 e7             	mov    rdi,r12
    9430:	e8 fb d4 ff ff       	call   6930 <queue_insert>
    9435:	48 8b 84 24 88 00 00 	mov    rax,QWORD PTR [rsp+0x88]
    943c:	00 
    943d:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    9444:	00 00 
    9446:	0f 85 8f 02 00 00    	jne    96db <sortlines+0x6eb>
    944c:	48 81 c4 98 00 00 00 	add    rsp,0x98
    9453:	5b                   	pop    rbx
    9454:	5d                   	pop    rbp
    9455:	41 5c                	pop    r12
    9457:	41 5d                	pop    r13
    9459:	41 5e                	pop    r14
    945b:	41 5f                	pop    r15
    945d:	c3                   	ret    
    945e:	66 90                	xchg   ax,ax
    9460:	48 8b 7b 18          	mov    rdi,QWORD PTR [rbx+0x18]
    9464:	48 39 f7             	cmp    rdi,rsi
    9467:	0f 84 0f fe ff ff    	je     927c <sortlines+0x28c>
    946d:	4d 85 ff             	test   r15,r15
    9470:	49 8d 47 ff          	lea    rax,[r15-0x1]
    9474:	0f 84 02 fe ff ff    	je     927c <sortlines+0x28c>
    947a:	48 83 ee 20          	sub    rsi,0x20
    947e:	eb 11                	jmp    9491 <sortlines+0x4a1>
    9480:	48 83 e8 01          	sub    rax,0x1
    9484:	48 8d 56 e0          	lea    rdx,[rsi-0x20]
    9488:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
    948c:	74 22                	je     94b0 <sortlines+0x4c0>
    948e:	48 89 d6             	mov    rsi,rdx
    9491:	f3 0f 6f 06          	movdqu xmm0,XMMWORD PTR [rsi]
    9495:	49 83 ee 20          	sub    r14,0x20
    9499:	48 39 fe             	cmp    rsi,rdi
    949c:	48 89 73 08          	mov    QWORD PTR [rbx+0x8],rsi
    94a0:	41 0f 11 06          	movups XMMWORD PTR [r14],xmm0
    94a4:	f3 0f 6f 46 10       	movdqu xmm0,XMMWORD PTR [rsi+0x10]
    94a9:	41 0f 11 46 10       	movups XMMWORD PTR [r14+0x10],xmm0
    94ae:	75 d0                	jne    9480 <sortlines+0x490>
    94b0:	4c 8b 7c 24 10       	mov    r15,QWORD PTR [rsp+0x10]
    94b5:	4c 89 d1             	mov    rcx,r10
    94b8:	49 29 f7             	sub    r15,rsi
    94bb:	4d 89 f8             	mov    r8,r15
    94be:	49 c1 f8 05          	sar    r8,0x5
    94c2:	e9 b5 fd ff ff       	jmp    927c <sortlines+0x28c>
    94c7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    94ce:	00 00 
    94d0:	48 89 eb             	mov    rbx,rbp
    94d3:	48 8b 6c 24 38       	mov    rbp,QWORD PTR [rsp+0x38]
    94d8:	48 89 f8             	mov    rax,rdi
    94db:	48 8b 54 24 08       	mov    rdx,QWORD PTR [rsp+0x8]
    94e0:	4c 8b 44 24 10       	mov    r8,QWORD PTR [rsp+0x10]
    94e5:	4c 8b 4b 30          	mov    r9,QWORD PTR [rbx+0x30]
    94e9:	48 29 fa             	sub    rdx,rdi
    94ec:	49 29 f0             	sub    r8,rsi
    94ef:	48 89 d1             	mov    rcx,rdx
    94f2:	49 c1 f8 05          	sar    r8,0x5
    94f6:	48 c1 f9 05          	sar    rcx,0x5
    94fa:	4d 39 c8             	cmp    r8,r9
    94fd:	0f 84 9d 00 00 00    	je     95a0 <sortlines+0x5b0>
    9503:	4c 8b 53 28          	mov    r10,QWORD PTR [rbx+0x28]
    9507:	4c 39 d1             	cmp    rcx,r10
    950a:	0f 85 73 fd ff ff    	jne    9283 <sortlines+0x293>
    9510:	48 39 73 18          	cmp    QWORD PTR [rbx+0x18],rsi
    9514:	0f 84 74 01 00 00    	je     968e <sortlines+0x69e>
    951a:	4d 85 ff             	test   r15,r15
    951d:	49 8d 47 ff          	lea    rax,[r15-0x1]
    9521:	0f 84 67 01 00 00    	je     968e <sortlines+0x69e>
    9527:	48 89 6c 24 38       	mov    QWORD PTR [rsp+0x38],rbp
    952c:	4c 8b 74 24 28       	mov    r14,QWORD PTR [rsp+0x28]
    9531:	48 89 c5             	mov    rbp,rax
    9534:	4c 8b 7c 24 30       	mov    r15,QWORD PTR [rsp+0x30]
    9539:	eb 0f                	jmp    954a <sortlines+0x55a>
    953b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    9540:	48 83 ed 01          	sub    rbp,0x1
    9544:	48 83 fd ff          	cmp    rbp,0xffffffffffffffff
    9548:	74 1d                	je     9567 <sortlines+0x577>
    954a:	48 8d 7e e0          	lea    rdi,[rsi-0x20]
    954e:	4c 89 fa             	mov    rdx,r15
    9551:	4c 89 f6             	mov    rsi,r14
    9554:	48 89 7b 08          	mov    QWORD PTR [rbx+0x8],rdi
    9558:	e8 93 f4 ff ff       	call   89f0 <write_unique>
    955d:	48 8b 73 08          	mov    rsi,QWORD PTR [rbx+0x8]
    9561:	48 3b 73 18          	cmp    rsi,QWORD PTR [rbx+0x18]
    9565:	75 d9                	jne    9540 <sortlines+0x550>
    9567:	4c 8b 74 24 08       	mov    r14,QWORD PTR [rsp+0x8]
    956c:	4c 8b 7c 24 10       	mov    r15,QWORD PTR [rsp+0x10]
    9571:	4c 2b 33             	sub    r14,QWORD PTR [rbx]
    9574:	48 8b 6c 24 38       	mov    rbp,QWORD PTR [rsp+0x38]
    9579:	4c 8b 53 28          	mov    r10,QWORD PTR [rbx+0x28]
    957d:	4c 8b 4b 30          	mov    r9,QWORD PTR [rbx+0x30]
    9581:	49 29 f7             	sub    r15,rsi
    9584:	4d 89 f8             	mov    r8,r15
    9587:	4c 89 f1             	mov    rcx,r14
    958a:	49 c1 f8 05          	sar    r8,0x5
    958e:	48 c1 f9 05          	sar    rcx,0x5
    9592:	e9 ec fc ff ff       	jmp    9283 <sortlines+0x293>
    9597:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    959e:	00 00 
    95a0:	48 39 f8             	cmp    rax,rdi
    95a3:	0f 84 d9 00 00 00    	je     9682 <sortlines+0x692>
    95a9:	4d 85 ff             	test   r15,r15
    95ac:	49 8d 47 ff          	lea    rax,[r15-0x1]
    95b0:	0f 84 cc 00 00 00    	je     9682 <sortlines+0x692>
    95b6:	48 89 6c 24 38       	mov    QWORD PTR [rsp+0x38],rbp
    95bb:	4c 8b 74 24 28       	mov    r14,QWORD PTR [rsp+0x28]
    95c0:	48 89 c5             	mov    rbp,rax
    95c3:	4c 8b 7c 24 30       	mov    r15,QWORD PTR [rsp+0x30]
    95c8:	eb 10                	jmp    95da <sortlines+0x5ea>
    95ca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    95d0:	48 83 ed 01          	sub    rbp,0x1
    95d4:	48 83 fd ff          	cmp    rbp,0xffffffffffffffff
    95d8:	74 1b                	je     95f5 <sortlines+0x605>
    95da:	48 83 ef 20          	sub    rdi,0x20
    95de:	4c 89 fa             	mov    rdx,r15
    95e1:	4c 89 f6             	mov    rsi,r14
    95e4:	48 89 3b             	mov    QWORD PTR [rbx],rdi
    95e7:	e8 04 f4 ff ff       	call   89f0 <write_unique>
    95ec:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    95ef:	48 3b 7b 10          	cmp    rdi,QWORD PTR [rbx+0x10]
    95f3:	75 db                	jne    95d0 <sortlines+0x5e0>
    95f5:	4c 8b 74 24 08       	mov    r14,QWORD PTR [rsp+0x8]
    95fa:	4c 8b 7c 24 10       	mov    r15,QWORD PTR [rsp+0x10]
    95ff:	4c 2b 7b 08          	sub    r15,QWORD PTR [rbx+0x8]
    9603:	48 8b 6c 24 38       	mov    rbp,QWORD PTR [rsp+0x38]
    9608:	4c 8b 53 28          	mov    r10,QWORD PTR [rbx+0x28]
    960c:	4c 8b 4b 30          	mov    r9,QWORD PTR [rbx+0x30]
    9610:	49 29 fe             	sub    r14,rdi
    9613:	4c 89 f1             	mov    rcx,r14
    9616:	4d 89 f8             	mov    r8,r15
    9619:	48 c1 f9 05          	sar    rcx,0x5
    961d:	49 c1 f8 05          	sar    r8,0x5
    9621:	e9 5d fc ff ff       	jmp    9283 <sortlines+0x293>
    9626:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    962d:	00 00 00 
    9630:	48 89 eb             	mov    rbx,rbp
    9633:	48 8b 6c 24 38       	mov    rbp,QWORD PTR [rsp+0x38]
    9638:	e9 9e fe ff ff       	jmp    94db <sortlines+0x4eb>
    963d:	0f 1f 00             	nop    DWORD PTR [rax]
    9640:	48 89 eb             	mov    rbx,rbp
    9643:	49 c7 c7 ff ff ff ff 	mov    r15,0xffffffffffffffff
    964a:	48 8b 6c 24 38       	mov    rbp,QWORD PTR [rsp+0x38]
    964f:	e9 87 fe ff ff       	jmp    94db <sortlines+0x4eb>
    9654:	48 8d 4c 24 50       	lea    rcx,[rsp+0x50]
    9659:	48 8d 7c 24 48       	lea    rdi,[rsp+0x48]
    965e:	48 8d 15 7b 00 00 00 	lea    rdx,[rip+0x7b]        # 96e0 <sortlines_thread>
    9665:	31 f6                	xor    esi,esi
    9667:	e8 74 94 ff ff       	call   2ae0 <pthread_create@plt>
    966c:	85 c0                	test   eax,eax
    966e:	4c 8b 44 24 08       	mov    r8,QWORD PTR [rsp+0x8]
    9673:	74 21                	je     9696 <sortlines+0x6a6>
    9675:	4c 8b 7b 28          	mov    r15,QWORD PTR [rbx+0x28]
    9679:	4c 8b 73 30          	mov    r14,QWORD PTR [rbx+0x30]
    967d:	e9 08 fa ff ff       	jmp    908a <sortlines+0x9a>
    9682:	4c 8b 53 28          	mov    r10,QWORD PTR [rbx+0x28]
    9686:	4d 89 c1             	mov    r9,r8
    9689:	e9 f5 fb ff ff       	jmp    9283 <sortlines+0x293>
    968e:	49 89 ca             	mov    r10,rcx
    9691:	e9 ed fb ff ff       	jmp    9283 <sortlines+0x293>
    9696:	48 8b 43 28          	mov    rax,QWORD PTR [rbx+0x28]
    969a:	48 83 ec 08          	sub    rsp,0x8
    969e:	48 8b 4b 48          	mov    rcx,QWORD PTR [rbx+0x48]
    96a2:	ff 74 24 38          	push   QWORD PTR [rsp+0x38]
    96a6:	4c 8b 4c 24 38       	mov    r9,QWORD PTR [rsp+0x38]
    96ab:	4c 89 ee             	mov    rsi,r13
    96ae:	48 8b 54 24 30       	mov    rdx,QWORD PTR [rsp+0x30]
    96b3:	48 89 ef             	mov    rdi,rbp
    96b6:	4c 29 c6             	sub    rsi,r8
    96b9:	48 c1 e0 05          	shl    rax,0x5
    96bd:	4d 89 e0             	mov    r8,r12
    96c0:	48 29 c7             	sub    rdi,rax
    96c3:	e8 28 f9 ff ff       	call   8ff0 <sortlines>
    96c8:	48 8b 7c 24 58       	mov    rdi,QWORD PTR [rsp+0x58]
    96cd:	31 f6                	xor    esi,esi
    96cf:	e8 8c 99 ff ff       	call   3060 <pthread_join@plt>
    96d4:	58                   	pop    rax
    96d5:	5a                   	pop    rdx
    96d6:	e9 5a fd ff ff       	jmp    9435 <sortlines+0x445>
    96db:	e8 c0 95 ff ff       	call   2ca0 <__stack_chk_fail@plt>

00000000000096e0 <sortlines_thread>:
    96e0:	48 83 ec 10          	sub    rsp,0x10
    96e4:	48 8b 4f 18          	mov    rcx,QWORD PTR [rdi+0x18]
    96e8:	48 8b 57 10          	mov    rdx,QWORD PTR [rdi+0x10]
    96ec:	48 8b 77 08          	mov    rsi,QWORD PTR [rdi+0x8]
    96f0:	4c 8b 4f 28          	mov    r9,QWORD PTR [rdi+0x28]
    96f4:	ff 77 30             	push   QWORD PTR [rdi+0x30]
    96f7:	4c 8b 47 20          	mov    r8,QWORD PTR [rdi+0x20]
    96fb:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    96fe:	e8 ed f8 ff ff       	call   8ff0 <sortlines>
    9703:	31 c0                	xor    eax,eax
    9705:	48 83 c4 18          	add    rsp,0x18
    9709:	c3                   	ret    
    970a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000009710 <fillbuf>:
    9710:	80 7f 30 00          	cmp    BYTE PTR [rdi+0x30],0x0
    9714:	0f 85 67 03 00 00    	jne    9a81 <fillbuf+0x371>
    971a:	41 57                	push   r15
    971c:	41 56                	push   r14
    971e:	48 89 f8             	mov    rax,rdi
    9721:	41 55                	push   r13
    9723:	41 54                	push   r12
    9725:	55                   	push   rbp
    9726:	53                   	push   rbx
    9727:	48 83 ec 48          	sub    rsp,0x48
    972b:	48 8b 1d fe 0c 21 00 	mov    rbx,QWORD PTR [rip+0x210cfe]        # 21a430 <keylist>
    9732:	48 8b 2d f7 08 21 00 	mov    rbp,QWORD PTR [rip+0x2108f7]        # 21a030 <merge_buffer_size>
    9739:	48 89 7c 24 28       	mov    QWORD PTR [rsp+0x28],rdi
    973e:	0f b6 3d f3 08 21 00 	movzx  edi,BYTE PTR [rip+0x2108f3]        # 21a038 <eolchar>
    9745:	48 89 54 24 38       	mov    QWORD PTR [rsp+0x38],rdx
    974a:	48 89 74 24 20       	mov    QWORD PTR [rsp+0x20],rsi
    974f:	40 88 7c 24 37       	mov    BYTE PTR [rsp+0x37],dil
    9754:	48 8b 78 28          	mov    rdi,QWORD PTR [rax+0x28]
    9758:	48 89 7c 24 08       	mov    QWORD PTR [rsp+0x8],rdi
    975d:	48 89 c7             	mov    rdi,rax
    9760:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    9764:	48 8b 57 20          	mov    rdx,QWORD PTR [rdi+0x20]
    9768:	4c 8b 3f             	mov    r15,QWORD PTR [rdi]
    976b:	48 39 d0             	cmp    rax,rdx
    976e:	0f 85 95 01 00 00    	jne    9909 <fillbuf+0x1f9>
    9774:	48 8b 47 10          	mov    rax,QWORD PTR [rdi+0x10]
    9778:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
    977d:	48 83 ed 22          	sub    rbp,0x22
    9781:	48 83 c7 01          	add    rdi,0x1
    9785:	48 89 7c 24 10       	mov    QWORD PTR [rsp+0x10],rdi
    978a:	48 8b 7c 24 28       	mov    rdi,QWORD PTR [rsp+0x28]
    978f:	4c 8b 67 18          	mov    r12,QWORD PTR [rdi+0x18]
    9793:	0f be 7c 24 37       	movsx  edi,BYTE PTR [rsp+0x37]
    9798:	89 7c 24 30          	mov    DWORD PTR [rsp+0x30],edi
    979c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    97a0:	4d 01 fc             	add    r12,r15
    97a3:	4d 8d 2c 17          	lea    r13,[r15+rdx*1]
    97a7:	48 89 c2             	mov    rdx,rax
    97aa:	48 c1 e2 05          	shl    rdx,0x5
    97ae:	4d 89 e6             	mov    r14,r12
    97b1:	49 29 d6             	sub    r14,rdx
    97b4:	48 8b 54 24 08       	mov    rdx,QWORD PTR [rsp+0x8]
    97b9:	48 0f af d0          	imul   rdx,rax
    97bd:	49 29 d4             	sub    r12,rdx
    97c0:	4d 29 ec             	sub    r12,r13
    97c3:	48 85 c0             	test   rax,rax
    97c6:	0f 84 4f 02 00 00    	je     9a1b <fillbuf+0x30b>
    97cc:	4d 8b 4e 08          	mov    r9,QWORD PTR [r14+0x8]
    97d0:	4d 03 0e             	add    r9,QWORD PTR [r14]
    97d3:	4d 89 ef             	mov    r15,r13
    97d6:	4d 89 cd             	mov    r13,r9
    97d9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    97e0:	4c 3b 64 24 10       	cmp    r12,QWORD PTR [rsp+0x10]
    97e5:	0f 86 44 02 00 00    	jbe    9a2f <fillbuf+0x31f>
    97eb:	49 8d 44 24 ff       	lea    rax,[r12-0x1]
    97f0:	31 d2                	xor    edx,edx
    97f2:	48 8b 4c 24 20       	mov    rcx,QWORD PTR [rsp+0x20]
    97f7:	4c 89 ff             	mov    rdi,r15
    97fa:	be 01 00 00 00       	mov    esi,0x1
    97ff:	48 f7 74 24 10       	div    QWORD PTR [rsp+0x10]
    9804:	48 89 c2             	mov    rdx,rax
    9807:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
    980c:	e8 ff 93 ff ff       	call   2c10 <fread_unlocked@plt>
    9811:	4c 8b 5c 24 18       	mov    r11,QWORD PTR [rsp+0x18]
    9816:	49 8d 3c 07          	lea    rdi,[r15+rax*1]
    981a:	49 29 c4             	sub    r12,rax
    981d:	48 89 3c 24          	mov    QWORD PTR [rsp],rdi
    9821:	49 39 c3             	cmp    r11,rax
    9824:	74 4a                	je     9870 <fillbuf+0x160>
    9826:	48 8b 44 24 20       	mov    rax,QWORD PTR [rsp+0x20]
    982b:	8b 00                	mov    eax,DWORD PTR [rax]
    982d:	a8 20                	test   al,0x20
    982f:	0f 85 7a 02 00 00    	jne    9aaf <fillbuf+0x39f>
    9835:	a8 10                	test   al,0x10
    9837:	74 37                	je     9870 <fillbuf+0x160>
    9839:	48 8b 44 24 28       	mov    rax,QWORD PTR [rsp+0x28]
    983e:	48 89 c6             	mov    rsi,rax
    9841:	c6 40 30 01          	mov    BYTE PTR [rax+0x30],0x1
    9845:	48 8b 04 24          	mov    rax,QWORD PTR [rsp]
    9849:	48 39 06             	cmp    QWORD PTR [rsi],rax
    984c:	0f 84 1e 02 00 00    	je     9a70 <fillbuf+0x360>
    9852:	49 39 c5             	cmp    r13,rax
    9855:	74 19                	je     9870 <fillbuf+0x160>
    9857:	0f b6 74 24 37       	movzx  esi,BYTE PTR [rsp+0x37]
    985c:	40 38 70 ff          	cmp    BYTE PTR [rax-0x1],sil
    9860:	74 0e                	je     9870 <fillbuf+0x160>
    9862:	40 88 30             	mov    BYTE PTR [rax],sil
    9865:	48 83 c0 01          	add    rax,0x1
    9869:	48 89 04 24          	mov    QWORD PTR [rsp],rax
    986d:	0f 1f 00             	nop    DWORD PTR [rax]
    9870:	48 8b 04 24          	mov    rax,QWORD PTR [rsp]
    9874:	4d 89 fb             	mov    r11,r15
    9877:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
    987c:	eb 17                	jmp    9895 <fillbuf+0x185>
    987e:	66 90                	xchg   ax,ax
    9880:	48 89 da             	mov    rdx,rbx
    9883:	4c 89 fe             	mov    rsi,r15
    9886:	4c 89 ef             	mov    rdi,r13
    9889:	e8 e2 d0 ff ff       	call   6970 <begfield.isra.1>
    988e:	49 89 46 10          	mov    QWORD PTR [r14+0x10],rax
    9892:	4d 89 dd             	mov    r13,r11
    9895:	48 8b 14 24          	mov    rdx,QWORD PTR [rsp]
    9899:	8b 74 24 30          	mov    esi,DWORD PTR [rsp+0x30]
    989d:	4c 89 df             	mov    rdi,r11
    98a0:	4c 29 da             	sub    rdx,r11
    98a3:	e8 38 95 ff ff       	call   2de0 <memchr@plt>
    98a8:	48 85 c0             	test   rax,rax
    98ab:	0f 84 8f 00 00 00    	je     9940 <fillbuf+0x230>
    98b1:	4c 8d 58 01          	lea    r11,[rax+0x1]
    98b5:	49 83 ee 20          	sub    r14,0x20
    98b9:	c6 00 00             	mov    BYTE PTR [rax],0x0
    98bc:	4d 89 2e             	mov    QWORD PTR [r14],r13
    98bf:	4d 89 df             	mov    r15,r11
    98c2:	4d 29 ef             	sub    r15,r13
    98c5:	4c 39 fd             	cmp    rbp,r15
    98c8:	4d 89 7e 08          	mov    QWORD PTR [r14+0x8],r15
    98cc:	49 0f 42 ef          	cmovb  rbp,r15
    98d0:	4c 2b 64 24 08       	sub    r12,QWORD PTR [rsp+0x8]
    98d5:	48 85 db             	test   rbx,rbx
    98d8:	74 b8                	je     9892 <fillbuf+0x182>
    98da:	48 83 7b 10 ff       	cmp    QWORD PTR [rbx+0x10],0xffffffffffffffff
    98df:	74 0e                	je     98ef <fillbuf+0x1df>
    98e1:	48 89 da             	mov    rdx,rbx
    98e4:	4c 89 fe             	mov    rsi,r15
    98e7:	4c 89 ef             	mov    rdi,r13
    98ea:	e8 71 d1 ff ff       	call   6a60 <limfield.isra.2>
    98ef:	48 83 3b ff          	cmp    QWORD PTR [rbx],0xffffffffffffffff
    98f3:	49 89 46 18          	mov    QWORD PTR [r14+0x18],rax
    98f7:	75 87                	jne    9880 <fillbuf+0x170>
    98f9:	80 7b 30 00          	cmp    BYTE PTR [rbx+0x30],0x0
    98fd:	0f 85 dd 00 00 00    	jne    99e0 <fillbuf+0x2d0>
    9903:	4d 89 6e 10          	mov    QWORD PTR [r14+0x10],r13
    9907:	eb 89                	jmp    9892 <fillbuf+0x182>
    9909:	48 29 d0             	sub    rax,rdx
    990c:	4c 89 ff             	mov    rdi,r15
    990f:	49 8d 34 07          	lea    rsi,[r15+rax*1]
    9913:	e8 a8 96 ff ff       	call   2fc0 <memmove@plt>
    9918:	48 8b 44 24 28       	mov    rax,QWORD PTR [rsp+0x28]
    991d:	48 8b 50 20          	mov    rdx,QWORD PTR [rax+0x20]
    9921:	48 c7 40 10 00 00 00 	mov    QWORD PTR [rax+0x10],0x0
    9928:	00 
    9929:	4c 8b 38             	mov    r15,QWORD PTR [rax]
    992c:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
    9930:	31 c0                	xor    eax,eax
    9932:	e9 41 fe ff ff       	jmp    9778 <fillbuf+0x68>
    9937:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    993e:	00 00 
    9940:	48 8b 44 24 28       	mov    rax,QWORD PTR [rsp+0x28]
    9945:	4c 8b 3c 24          	mov    r15,QWORD PTR [rsp]
    9949:	80 78 30 00          	cmp    BYTE PTR [rax+0x30],0x0
    994d:	0f 84 8d fe ff ff    	je     97e0 <fillbuf+0xd0>
    9953:	4d 89 ef             	mov    r15,r13
    9956:	48 8b 74 24 28       	mov    rsi,QWORD PTR [rsp+0x28]
    995b:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
    9960:	48 8b 3e             	mov    rdi,QWORD PTR [rsi]
    9963:	48 8b 56 18          	mov    rdx,QWORD PTR [rsi+0x18]
    9967:	48 29 f8             	sub    rax,rdi
    996a:	48 89 46 08          	mov    QWORD PTR [rsi+0x8],rax
    996e:	48 8d 04 17          	lea    rax,[rdi+rdx*1]
    9972:	4c 29 f0             	sub    rax,r14
    9975:	48 c1 f8 05          	sar    rax,0x5
    9979:	48 85 c0             	test   rax,rax
    997c:	48 89 46 10          	mov    QWORD PTR [rsi+0x10],rax
    9980:	0f 85 fe 00 00 00    	jne    9a84 <fillbuf+0x374>
    9986:	48 89 d6             	mov    rsi,rdx
    9989:	48 c1 ee 05          	shr    rsi,0x5
    998d:	48 85 ff             	test   rdi,rdi
    9990:	0f 84 ac 00 00 00    	je     9a42 <fillbuf+0x332>
    9996:	48 b8 a9 aa aa aa aa 	movabs rax,0x2aaaaaaaaaaaaa9
    999d:	aa aa 02 
    99a0:	48 39 c6             	cmp    rsi,rax
    99a3:	0f 87 c2 00 00 00    	ja     9a6b <fillbuf+0x35b>
    99a9:	48 c1 ea 06          	shr    rdx,0x6
    99ad:	48 8d 74 16 01       	lea    rsi,[rsi+rdx*1+0x1]
    99b2:	48 c1 e6 05          	shl    rsi,0x5
    99b6:	49 89 f4             	mov    r12,rsi
    99b9:	e8 82 84 00 00       	call   11e40 <xrealloc>
    99be:	49 89 c7             	mov    r15,rax
    99c1:	48 8b 44 24 28       	mov    rax,QWORD PTR [rsp+0x28]
    99c6:	4c 89 38             	mov    QWORD PTR [rax],r15
    99c9:	4c 89 60 18          	mov    QWORD PTR [rax+0x18],r12
    99cd:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    99d1:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    99d5:	e9 c6 fd ff ff       	jmp    97a0 <fillbuf+0x90>
    99da:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    99e0:	41 0f b6 45 00       	movzx  eax,BYTE PTR [r13+0x0]
    99e5:	48 8d 3d 74 0d 21 00 	lea    rdi,[rip+0x210d74]        # 21a760 <blanks>
    99ec:	80 3c 07 00          	cmp    BYTE PTR [rdi+rax*1],0x0
    99f0:	0f 84 0d ff ff ff    	je     9903 <fillbuf+0x1f3>
    99f6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    99fd:	00 00 00 
    9a00:	49 83 c5 01          	add    r13,0x1
    9a04:	41 0f b6 45 00       	movzx  eax,BYTE PTR [r13+0x0]
    9a09:	48 8d 0d 50 0d 21 00 	lea    rcx,[rip+0x210d50]        # 21a760 <blanks>
    9a10:	80 3c 01 00          	cmp    BYTE PTR [rcx+rax*1],0x0
    9a14:	75 ea                	jne    9a00 <fillbuf+0x2f0>
    9a16:	e9 e8 fe ff ff       	jmp    9903 <fillbuf+0x1f3>
    9a1b:	4c 3b 64 24 10       	cmp    r12,QWORD PTR [rsp+0x10]
    9a20:	4c 89 f8             	mov    rax,r15
    9a23:	4d 89 ef             	mov    r15,r13
    9a26:	49 89 c5             	mov    r13,rax
    9a29:	0f 87 bc fd ff ff    	ja     97eb <fillbuf+0xdb>
    9a2f:	4c 89 e8             	mov    rax,r13
    9a32:	4d 89 fd             	mov    r13,r15
    9a35:	4c 89 6c 24 18       	mov    QWORD PTR [rsp+0x18],r13
    9a3a:	49 89 c7             	mov    r15,rax
    9a3d:	e9 14 ff ff ff       	jmp    9956 <fillbuf+0x246>
    9a42:	48 85 f6             	test   rsi,rsi
    9a45:	b8 04 00 00 00       	mov    eax,0x4
    9a4a:	ba 20 00 00 00       	mov    edx,0x20
    9a4f:	48 0f 44 f0          	cmove  rsi,rax
    9a53:	48 89 d0             	mov    rax,rdx
    9a56:	31 c9                	xor    ecx,ecx
    9a58:	48 f7 e6             	mul    rsi
    9a5b:	70 72                	jo     9acf <fillbuf+0x3bf>
    9a5d:	48 85 c0             	test   rax,rax
    9a60:	78 09                	js     9a6b <fillbuf+0x35b>
    9a62:	48 85 c9             	test   rcx,rcx
    9a65:	0f 84 47 ff ff ff    	je     99b2 <fillbuf+0x2a2>
    9a6b:	e8 c0 85 00 00       	call   12030 <xalloc_die>
    9a70:	48 83 c4 48          	add    rsp,0x48
    9a74:	31 c0                	xor    eax,eax
    9a76:	5b                   	pop    rbx
    9a77:	5d                   	pop    rbp
    9a78:	41 5c                	pop    r12
    9a7a:	41 5d                	pop    r13
    9a7c:	41 5e                	pop    r14
    9a7e:	41 5f                	pop    r15
    9a80:	c3                   	ret    
    9a81:	31 c0                	xor    eax,eax
    9a83:	c3                   	ret    
    9a84:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
    9a89:	48 83 c5 22          	add    rbp,0x22
    9a8d:	48 89 2d 9c 05 21 00 	mov    QWORD PTR [rip+0x21059c],rbp        # 21a030 <merge_buffer_size>
    9a94:	4c 29 f8             	sub    rax,r15
    9a97:	48 89 46 20          	mov    QWORD PTR [rsi+0x20],rax
    9a9b:	48 83 c4 48          	add    rsp,0x48
    9a9f:	b8 01 00 00 00       	mov    eax,0x1
    9aa4:	5b                   	pop    rbx
    9aa5:	5d                   	pop    rbp
    9aa6:	41 5c                	pop    r12
    9aa8:	41 5d                	pop    r13
    9aaa:	41 5e                	pop    r14
    9aac:	41 5f                	pop    r15
    9aae:	c3                   	ret    
    9aaf:	48 8d 35 36 ba 00 00 	lea    rsi,[rip+0xba36]        # 154ec <short_options+0x161c>
    9ab6:	31 ff                	xor    edi,edi
    9ab8:	ba 05 00 00 00       	mov    edx,0x5
    9abd:	e8 ae 91 ff ff       	call   2c70 <dcgettext@plt>
    9ac2:	48 8b 74 24 38       	mov    rsi,QWORD PTR [rsp+0x38]
    9ac7:	48 89 c7             	mov    rdi,rax
    9aca:	e8 51 c8 ff ff       	call   6320 <sort_die>
    9acf:	b9 01 00 00 00       	mov    ecx,0x1
    9ad4:	eb 87                	jmp    9a5d <fillbuf+0x34d>
    9ad6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    9add:	00 00 00 

0000000000009ae0 <mergefps>:
    9ae0:	41 57                	push   r15
    9ae2:	41 56                	push   r14
    9ae4:	49 89 d7             	mov    r15,rdx
    9ae7:	41 55                	push   r13
    9ae9:	41 54                	push   r12
    9aeb:	ba 38 00 00 00       	mov    edx,0x38
    9af0:	55                   	push   rbp
    9af1:	53                   	push   rbx
    9af2:	48 81 ec b8 00 00 00 	sub    rsp,0xb8
    9af9:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9b00:	00 00 
    9b02:	48 89 84 24 a8 00 00 	mov    QWORD PTR [rsp+0xa8],rax
    9b09:	00 
    9b0a:	31 c0                	xor    eax,eax
    9b0c:	48 89 d0             	mov    rax,rdx
    9b0f:	48 89 7c 24 30       	mov    QWORD PTR [rsp+0x30],rdi
    9b14:	48 89 74 24 60       	mov    QWORD PTR [rsp+0x60],rsi
    9b19:	49 f7 e7             	mul    r15
    9b1c:	48 89 4c 24 50       	mov    QWORD PTR [rsp+0x50],rcx
    9b21:	4c 89 44 24 58       	mov    QWORD PTR [rsp+0x58],r8
    9b26:	4c 89 4c 24 18       	mov    QWORD PTR [rsp+0x18],r9
    9b2b:	0f 80 a5 07 00 00    	jo     a2d6 <mergefps+0x7f6>
    9b31:	31 c9                	xor    ecx,ecx
    9b33:	48 85 c0             	test   rax,rax
    9b36:	0f 88 90 07 00 00    	js     a2cc <mergefps+0x7ec>
    9b3c:	48 85 c9             	test   rcx,rcx
    9b3f:	0f 85 87 07 00 00    	jne    a2cc <mergefps+0x7ec>
    9b45:	4a 8d 3c fd 00 00 00 	lea    rdi,[r15*8+0x0]
    9b4c:	00 
    9b4d:	4c 29 ff             	sub    rdi,r15
    9b50:	48 c1 e7 03          	shl    rdi,0x3
    9b54:	e8 87 82 00 00       	call   11de0 <xmalloc>
    9b59:	ba 08 00 00 00       	mov    edx,0x8
    9b5e:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
    9b63:	31 c9                	xor    ecx,ecx
    9b65:	48 89 d0             	mov    rax,rdx
    9b68:	49 f7 e7             	mul    r15
    9b6b:	0f 80 6f 07 00 00    	jo     a2e0 <mergefps+0x800>
    9b71:	48 85 c0             	test   rax,rax
    9b74:	0f 88 52 07 00 00    	js     a2cc <mergefps+0x7ec>
    9b7a:	48 85 c9             	test   rcx,rcx
    9b7d:	0f 85 49 07 00 00    	jne    a2cc <mergefps+0x7ec>
    9b83:	4a 8d 1c fd 00 00 00 	lea    rbx,[r15*8+0x0]
    9b8a:	00 
    9b8b:	45 31 f6             	xor    r14d,r14d
    9b8e:	48 89 df             	mov    rdi,rbx
    9b91:	e8 4a 82 00 00       	call   11de0 <xmalloc>
    9b96:	48 89 df             	mov    rdi,rbx
    9b99:	48 89 c5             	mov    rbp,rax
    9b9c:	e8 3f 82 00 00       	call   11de0 <xmalloc>
    9ba1:	48 89 df             	mov    rdi,rbx
    9ba4:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
    9ba9:	e8 32 82 00 00       	call   11de0 <xmalloc>
    9bae:	48 89 c3             	mov    rbx,rax
    9bb1:	48 8b 05 78 08 21 00 	mov    rax,QWORD PTR [rip+0x210878]        # 21a430 <keylist>
    9bb8:	48 c7 84 24 80 00 00 	mov    QWORD PTR [rsp+0x80],0x0
    9bbf:	00 00 00 00 00 
    9bc4:	48 89 44 24 78       	mov    QWORD PTR [rsp+0x78],rax
    9bc9:	48 8b 44 24 30       	mov    rax,QWORD PTR [rsp+0x30]
    9bce:	48 83 e8 10          	sub    rax,0x10
    9bd2:	4d 85 ff             	test   r15,r15
    9bd5:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    9bda:	0f 84 7b 04 00 00    	je     a05b <mergefps+0x57b>
    9be0:	48 89 5c 24 20       	mov    QWORD PTR [rsp+0x20],rbx
    9be5:	48 89 2c 24          	mov    QWORD PTR [rsp],rbp
    9be9:	4c 89 fb             	mov    rbx,r15
    9bec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    9bf0:	4e 8d 2c f5 00 00 00 	lea    r13,[r14*8+0x0]
    9bf7:	00 
    9bf8:	48 8b 4c 24 28       	mov    rcx,QWORD PTR [rsp+0x28]
    9bfd:	31 d2                	xor    edx,edx
    9bff:	be 20 00 00 00       	mov    esi,0x20
    9c04:	4c 89 e8             	mov    rax,r13
    9c07:	4c 29 f0             	sub    rax,r14
    9c0a:	4c 8d 3c c1          	lea    r15,[rcx+rax*8]
    9c0e:	48 8b 05 43 08 21 00 	mov    rax,QWORD PTR [rip+0x210843]        # 21a458 <sort_size>
    9c15:	4c 89 ff             	mov    rdi,r15
    9c18:	48 f7 f3             	div    rbx
    9c1b:	48 8b 15 0e 04 21 00 	mov    rdx,QWORD PTR [rip+0x21040e]        # 21a030 <merge_buffer_size>
    9c22:	48 39 d0             	cmp    rax,rdx
    9c25:	48 0f 43 d0          	cmovae rdx,rax
    9c29:	e8 72 c8 ff ff       	call   64a0 <initbuf>
    9c2e:	48 8b 7c 24 30       	mov    rdi,QWORD PTR [rsp+0x30]
    9c33:	4c 89 f0             	mov    rax,r14
    9c36:	48 c1 e0 04          	shl    rax,0x4
    9c3a:	4c 8d 24 07          	lea    r12,[rdi+rax*1]
    9c3e:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
    9c43:	4c 89 ff             	mov    rdi,r15
    9c46:	49 8b 14 24          	mov    rdx,QWORD PTR [r12]
    9c4a:	4a 8d 2c 28          	lea    rbp,[rax+r13*1]
    9c4e:	48 8b 75 00          	mov    rsi,QWORD PTR [rbp+0x0]
    9c52:	e8 b9 fa ff ff       	call   9710 <fillbuf>
    9c57:	84 c0                	test   al,al
    9c59:	0f 84 59 03 00 00    	je     9fb8 <mergefps+0x4d8>
    9c5f:	49 8b 47 18          	mov    rax,QWORD PTR [r15+0x18]
    9c63:	49 03 07             	add    rax,QWORD PTR [r15]
    9c66:	48 8b 0c 24          	mov    rcx,QWORD PTR [rsp]
    9c6a:	48 8d 50 e0          	lea    rdx,[rax-0x20]
    9c6e:	4a 89 14 f1          	mov    QWORD PTR [rcx+r14*8],rdx
    9c72:	49 8b 57 10          	mov    rdx,QWORD PTR [r15+0x10]
    9c76:	48 8b 4c 24 10       	mov    rcx,QWORD PTR [rsp+0x10]
    9c7b:	48 c1 e2 05          	shl    rdx,0x5
    9c7f:	48 29 d0             	sub    rax,rdx
    9c82:	4a 89 04 f1          	mov    QWORD PTR [rcx+r14*8],rax
    9c86:	49 83 c6 01          	add    r14,0x1
    9c8a:	49 39 de             	cmp    r14,rbx
    9c8d:	0f 82 5d ff ff ff    	jb     9bf0 <mergefps+0x110>
    9c93:	49 89 df             	mov    r15,rbx
    9c96:	48 8b 2c 24          	mov    rbp,QWORD PTR [rsp]
    9c9a:	48 8b 5c 24 20       	mov    rbx,QWORD PTR [rsp+0x20]
    9c9f:	4d 85 ff             	test   r15,r15
    9ca2:	0f 84 b3 03 00 00    	je     a05b <mergefps+0x57b>
    9ca8:	31 c0                	xor    eax,eax
    9caa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    9cb0:	48 89 04 c3          	mov    QWORD PTR [rbx+rax*8],rax
    9cb4:	48 83 c0 01          	add    rax,0x1
    9cb8:	4c 39 f8             	cmp    rax,r15
    9cbb:	75 f3                	jne    9cb0 <mergefps+0x1d0>
    9cbd:	48 83 f8 01          	cmp    rax,0x1
    9cc1:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
    9cc6:	41 bc 01 00 00 00    	mov    r12d,0x1
    9ccc:	74 63                	je     9d31 <mergefps+0x251>
    9cce:	48 89 ea             	mov    rdx,rbp
    9cd1:	48 89 dd             	mov    rbp,rbx
    9cd4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    9cd8:	4a 8d 04 e5 00 00 00 	lea    rax,[r12*8+0x0]
    9cdf:	00 
    9ce0:	48 89 14 24          	mov    QWORD PTR [rsp],rdx
    9ce4:	4c 8d 6c 05 00       	lea    r13,[rbp+rax*1+0x0]
    9ce9:	4c 8d 7c 05 f8       	lea    r15,[rbp+rax*1-0x8]
    9cee:	49 8b 5d 00          	mov    rbx,QWORD PTR [r13+0x0]
    9cf2:	4d 8b 37             	mov    r14,QWORD PTR [r15]
    9cf5:	48 8b 34 da          	mov    rsi,QWORD PTR [rdx+rbx*8]
    9cf9:	4a 8b 3c f2          	mov    rdi,QWORD PTR [rdx+r14*8]
    9cfd:	e8 de e9 ff ff       	call   86e0 <compare>
    9d02:	85 c0                	test   eax,eax
    9d04:	48 8b 14 24          	mov    rdx,QWORD PTR [rsp]
    9d08:	7e 16                	jle    9d20 <mergefps+0x240>
    9d0a:	49 89 1f             	mov    QWORD PTR [r15],rbx
    9d0d:	41 bc 01 00 00 00    	mov    r12d,0x1
    9d13:	4d 89 75 00          	mov    QWORD PTR [r13+0x0],r14
    9d17:	eb bf                	jmp    9cd8 <mergefps+0x1f8>
    9d19:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    9d20:	49 83 c4 01          	add    r12,0x1
    9d24:	4c 3b 64 24 20       	cmp    r12,QWORD PTR [rsp+0x20]
    9d29:	72 ad                	jb     9cd8 <mergefps+0x1f8>
    9d2b:	48 89 eb             	mov    rbx,rbp
    9d2e:	48 89 d5             	mov    rbp,rdx
    9d31:	48 8d 84 24 80 00 00 	lea    rax,[rsp+0x80]
    9d38:	00 
    9d39:	48 c7 44 24 68 00 00 	mov    QWORD PTR [rsp+0x68],0x0
    9d40:	00 00 
    9d42:	48 c7 44 24 38 00 00 	mov    QWORD PTR [rsp+0x38],0x0
    9d49:	00 00 
    9d4b:	48 89 44 24 70       	mov    QWORD PTR [rsp+0x70],rax
    9d50:	48 8d 43 f8          	lea    rax,[rbx-0x8]
    9d54:	48 89 44 24 40       	mov    QWORD PTR [rsp+0x40],rax
    9d59:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    9d60:	48 8b 03             	mov    rax,QWORD PTR [rbx]
    9d63:	80 3d cf 06 21 00 00 	cmp    BYTE PTR [rip+0x2106cf],0x0        # 21a439 <unique>
    9d6a:	4c 8d 3c c5 00 00 00 	lea    r15,[rax*8+0x0]
    9d71:	00 
    9d72:	48 89 04 24          	mov    QWORD PTR [rsp],rax
    9d76:	4e 8d 6c 3d 00       	lea    r13,[rbp+r15*1+0x0]
    9d7b:	4d 8b 75 00          	mov    r14,QWORD PTR [r13+0x0]
    9d7f:	0f 84 93 01 00 00    	je     9f18 <mergefps+0x438>
    9d85:	48 8b 44 24 38       	mov    rax,QWORD PTR [rsp+0x38]
    9d8a:	48 85 c0             	test   rax,rax
    9d8d:	0f 84 b1 01 00 00    	je     9f44 <mergefps+0x464>
    9d93:	4c 89 f6             	mov    rsi,r14
    9d96:	48 89 c7             	mov    rdi,rax
    9d99:	e8 42 e9 ff ff       	call   86e0 <compare>
    9d9e:	85 c0                	test   eax,eax
    9da0:	0f 85 8a 01 00 00    	jne    9f30 <mergefps+0x450>
    9da6:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
    9dab:	4e 8d 14 38          	lea    r10,[rax+r15*1]
    9daf:	4d 39 32             	cmp    QWORD PTR [r10],r14
    9db2:	0f 83 c8 00 00 00    	jae    9e80 <mergefps+0x3a0>
    9db8:	49 83 ee 20          	sub    r14,0x20
    9dbc:	4d 89 75 00          	mov    QWORD PTR [r13+0x0],r14
    9dc0:	4c 8b 74 24 20       	mov    r14,QWORD PTR [rsp+0x20]
    9dc5:	49 83 fe 01          	cmp    r14,0x1
    9dc9:	0f 84 36 01 00 00    	je     9f05 <mergefps+0x425>
    9dcf:	49 8b 45 00          	mov    rax,QWORD PTR [r13+0x0]
    9dd3:	41 bf 01 00 00 00    	mov    r15d,0x1
    9dd9:	41 bd 01 00 00 00    	mov    r13d,0x1
    9ddf:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    9de4:	48 89 e8             	mov    rax,rbp
    9de7:	4c 89 fd             	mov    rbp,r15
    9dea:	4d 89 f7             	mov    r15,r14
    9ded:	49 89 c6             	mov    r14,rax
    9df0:	eb 21                	jmp    9e13 <mergefps+0x333>
    9df2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    9df8:	4c 39 24 24          	cmp    QWORD PTR [rsp],r12
    9dfc:	73 04                	jae    9e02 <mergefps+0x322>
    9dfe:	85 c0                	test   eax,eax
    9e00:	74 27                	je     9e29 <mergefps+0x349>
    9e02:	49 8d 6d 01          	lea    rbp,[r13+0x1]
    9e06:	4e 8d 6c 3d 00       	lea    r13,[rbp+r15*1+0x0]
    9e0b:	49 d1 ed             	shr    r13,1
    9e0e:	4c 39 fd             	cmp    rbp,r15
    9e11:	73 26                	jae    9e39 <mergefps+0x359>
    9e13:	4e 8b 24 eb          	mov    r12,QWORD PTR [rbx+r13*8]
    9e17:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
    9e1c:	4b 8b 34 e6          	mov    rsi,QWORD PTR [r14+r12*8]
    9e20:	e8 bb e8 ff ff       	call   86e0 <compare>
    9e25:	85 c0                	test   eax,eax
    9e27:	79 cf                	jns    9df8 <mergefps+0x318>
    9e29:	4d 89 ef             	mov    r15,r13
    9e2c:	4e 8d 6c 3d 00       	lea    r13,[rbp+r15*1+0x0]
    9e31:	49 d1 ed             	shr    r13,1
    9e34:	4c 39 fd             	cmp    rbp,r15
    9e37:	72 da                	jb     9e13 <mergefps+0x333>
    9e39:	49 89 ef             	mov    r15,rbp
    9e3c:	4c 89 f5             	mov    rbp,r14
    9e3f:	49 8d 47 ff          	lea    rax,[r15-0x1]
    9e43:	48 85 c0             	test   rax,rax
    9e46:	48 8d 34 c3          	lea    rsi,[rbx+rax*8]
    9e4a:	74 25                	je     9e71 <mergefps+0x391>
    9e4c:	48 8b 7c 24 40       	mov    rdi,QWORD PTR [rsp+0x40]
    9e51:	48 89 d8             	mov    rax,rbx
    9e54:	4a 8d 0c ff          	lea    rcx,[rdi+r15*8]
    9e58:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    9e5f:	00 
    9e60:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    9e64:	48 83 c0 08          	add    rax,0x8
    9e68:	48 89 50 f8          	mov    QWORD PTR [rax-0x8],rdx
    9e6c:	48 39 c8             	cmp    rax,rcx
    9e6f:	75 ef                	jne    9e60 <mergefps+0x380>
    9e71:	48 8b 04 24          	mov    rax,QWORD PTR [rsp]
    9e75:	48 89 06             	mov    QWORD PTR [rsi],rax
    9e78:	e9 e3 fe ff ff       	jmp    9d60 <mergefps+0x280>
    9e7d:	0f 1f 00             	nop    DWORD PTR [rax]
    9e80:	48 8b 04 24          	mov    rax,QWORD PTR [rsp]
    9e84:	48 8b 4c 24 18       	mov    rcx,QWORD PTR [rsp+0x18]
    9e89:	4c 89 54 24 48       	mov    QWORD PTR [rsp+0x48],r10
    9e8e:	48 89 c7             	mov    rdi,rax
    9e91:	49 89 c6             	mov    r14,rax
    9e94:	48 8d 04 c5 00 00 00 	lea    rax,[rax*8+0x0]
    9e9b:	00 
    9e9c:	49 c1 e6 04          	shl    r14,0x4
    9ea0:	4c 03 74 24 30       	add    r14,QWORD PTR [rsp+0x30]
    9ea5:	4c 01 f9             	add    rcx,r15
    9ea8:	48 29 f8             	sub    rax,rdi
    9eab:	48 8b 7c 24 28       	mov    rdi,QWORD PTR [rsp+0x28]
    9eb0:	48 8b 31             	mov    rsi,QWORD PTR [rcx]
    9eb3:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
    9eb8:	4c 8d 3c c7          	lea    r15,[rdi+rax*8]
    9ebc:	49 8b 16             	mov    rdx,QWORD PTR [r14]
    9ebf:	4c 89 ff             	mov    rdi,r15
    9ec2:	e8 49 f8 ff ff       	call   9710 <fillbuf>
    9ec7:	84 c0                	test   al,al
    9ec9:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
    9ece:	4c 8b 54 24 48       	mov    r10,QWORD PTR [rsp+0x48]
    9ed3:	0f 84 e7 01 00 00    	je     a0c0 <mergefps+0x5e0>
    9ed9:	49 8b 47 18          	mov    rax,QWORD PTR [r15+0x18]
    9edd:	49 03 07             	add    rax,QWORD PTR [r15]
    9ee0:	4c 8b 74 24 20       	mov    r14,QWORD PTR [rsp+0x20]
    9ee5:	48 8d 50 e0          	lea    rdx,[rax-0x20]
    9ee9:	49 89 55 00          	mov    QWORD PTR [r13+0x0],rdx
    9eed:	49 8b 57 10          	mov    rdx,QWORD PTR [r15+0x10]
    9ef1:	48 c1 e2 05          	shl    rdx,0x5
    9ef5:	48 29 d0             	sub    rax,rdx
    9ef8:	49 83 fe 01          	cmp    r14,0x1
    9efc:	49 89 02             	mov    QWORD PTR [r10],rax
    9eff:	0f 85 ca fe ff ff    	jne    9dcf <mergefps+0x2ef>
    9f05:	48 8b 04 24          	mov    rax,QWORD PTR [rsp]
    9f09:	48 89 de             	mov    rsi,rbx
    9f0c:	48 89 06             	mov    QWORD PTR [rsi],rax
    9f0f:	e9 4c fe ff ff       	jmp    9d60 <mergefps+0x280>
    9f14:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    9f18:	48 8b 54 24 58       	mov    rdx,QWORD PTR [rsp+0x58]
    9f1d:	48 8b 74 24 50       	mov    rsi,QWORD PTR [rsp+0x50]
    9f22:	4c 89 f7             	mov    rdi,r14
    9f25:	e8 56 d3 ff ff       	call   7280 <write_line>
    9f2a:	e9 77 fe ff ff       	jmp    9da6 <mergefps+0x2c6>
    9f2f:	90                   	nop
    9f30:	48 8b 54 24 58       	mov    rdx,QWORD PTR [rsp+0x58]
    9f35:	48 8b 74 24 50       	mov    rsi,QWORD PTR [rsp+0x50]
    9f3a:	48 8b 7c 24 70       	mov    rdi,QWORD PTR [rsp+0x70]
    9f3f:	e8 3c d3 ff ff       	call   7280 <write_line>
    9f44:	49 8b 56 08          	mov    rdx,QWORD PTR [r14+0x8]
    9f48:	48 3b 54 24 68       	cmp    rdx,QWORD PTR [rsp+0x68]
    9f4d:	48 8b bc 24 80 00 00 	mov    rdi,QWORD PTR [rsp+0x80]
    9f54:	00 
    9f55:	0f 87 d5 02 00 00    	ja     a230 <mergefps+0x750>
    9f5b:	49 8b 36             	mov    rsi,QWORD PTR [r14]
    9f5e:	48 89 94 24 88 00 00 	mov    QWORD PTR [rsp+0x88],rdx
    9f65:	00 
    9f66:	e8 15 8f ff ff       	call   2e80 <memcpy@plt>
    9f6b:	48 83 7c 24 78 00    	cmp    QWORD PTR [rsp+0x78],0x0
    9f71:	48 8b 4c 24 70       	mov    rcx,QWORD PTR [rsp+0x70]
    9f76:	48 89 4c 24 38       	mov    QWORD PTR [rsp+0x38],rcx
    9f7b:	0f 84 25 fe ff ff    	je     9da6 <mergefps+0x2c6>
    9f81:	49 8b 56 10          	mov    rdx,QWORD PTR [r14+0x10]
    9f85:	48 8b 84 24 80 00 00 	mov    rax,QWORD PTR [rsp+0x80]
    9f8c:	00 
    9f8d:	49 8b 36             	mov    rsi,QWORD PTR [r14]
    9f90:	48 01 c2             	add    rdx,rax
    9f93:	49 03 46 18          	add    rax,QWORD PTR [r14+0x18]
    9f97:	48 29 f2             	sub    rdx,rsi
    9f9a:	48 89 94 24 90 00 00 	mov    QWORD PTR [rsp+0x90],rdx
    9fa1:	00 
    9fa2:	48 29 f0             	sub    rax,rsi
    9fa5:	48 89 84 24 98 00 00 	mov    QWORD PTR [rsp+0x98],rax
    9fac:	00 
    9fad:	e9 f4 fd ff ff       	jmp    9da6 <mergefps+0x2c6>
    9fb2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    9fb8:	49 8b 34 24          	mov    rsi,QWORD PTR [r12]
    9fbc:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    9fc0:	e8 2b d2 ff ff       	call   71f0 <xfclose>
    9fc5:	4c 39 74 24 60       	cmp    QWORD PTR [rsp+0x60],r14
    9fca:	0f 87 c0 02 00 00    	ja     a290 <mergefps+0x7b0>
    9fd0:	49 8b 3f             	mov    rdi,QWORD PTR [r15]
    9fd3:	e8 e8 91 ff ff       	call   31c0 <free@plt>
    9fd8:	48 8d 73 ff          	lea    rsi,[rbx-0x1]
    9fdc:	4c 39 f6             	cmp    rsi,r14
    9fdf:	0f 86 d6 02 00 00    	jbe    a2bb <mergefps+0x7db>
    9fe5:	48 8b 7c 24 18       	mov    rdi,QWORD PTR [rsp+0x18]
    9fea:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
    9fef:	48 c1 e3 04          	shl    rbx,0x4
    9ff3:	4c 89 e0             	mov    rax,r12
    9ff6:	4a 8d 54 2f 08       	lea    rdx,[rdi+r13*1+0x8]
    9ffb:	48 01 d9             	add    rcx,rbx
    9ffe:	66 90                	xchg   ax,ax
    a000:	f3 0f 6f 40 10       	movdqu xmm0,XMMWORD PTR [rax+0x10]
    a005:	48 83 c0 10          	add    rax,0x10
    a009:	48 83 c2 08          	add    rdx,0x8
    a00d:	48 8b 7a f8          	mov    rdi,QWORD PTR [rdx-0x8]
    a011:	0f 11 40 f0          	movups XMMWORD PTR [rax-0x10],xmm0
    a015:	48 89 7a f0          	mov    QWORD PTR [rdx-0x10],rdi
    a019:	48 39 c1             	cmp    rcx,rax
    a01c:	75 e2                	jne    a000 <mergefps+0x520>
    a01e:	48 89 f3             	mov    rbx,rsi
    a021:	e9 ca fb ff ff       	jmp    9bf0 <mergefps+0x110>
    a026:	48 83 7c 24 38 00    	cmp    QWORD PTR [rsp+0x38],0x0
    a02c:	74 2d                	je     a05b <mergefps+0x57b>
    a02e:	80 3d 04 04 21 00 00 	cmp    BYTE PTR [rip+0x210404],0x0        # 21a439 <unique>
    a035:	74 24                	je     a05b <mergefps+0x57b>
    a037:	48 8b 54 24 58       	mov    rdx,QWORD PTR [rsp+0x58]
    a03c:	48 8b 74 24 50       	mov    rsi,QWORD PTR [rsp+0x50]
    a041:	48 8d bc 24 80 00 00 	lea    rdi,[rsp+0x80]
    a048:	00 
    a049:	e8 32 d2 ff ff       	call   7280 <write_line>
    a04e:	48 8b bc 24 80 00 00 	mov    rdi,QWORD PTR [rsp+0x80]
    a055:	00 
    a056:	e8 65 91 ff ff       	call   31c0 <free@plt>
    a05b:	48 8b 74 24 58       	mov    rsi,QWORD PTR [rsp+0x58]
    a060:	48 8b 7c 24 50       	mov    rdi,QWORD PTR [rsp+0x50]
    a065:	e8 86 d1 ff ff       	call   71f0 <xfclose>
    a06a:	48 8b 7c 24 18       	mov    rdi,QWORD PTR [rsp+0x18]
    a06f:	e8 4c 91 ff ff       	call   31c0 <free@plt>
    a074:	48 8b 7c 24 28       	mov    rdi,QWORD PTR [rsp+0x28]
    a079:	e8 42 91 ff ff       	call   31c0 <free@plt>
    a07e:	48 89 df             	mov    rdi,rbx
    a081:	e8 3a 91 ff ff       	call   31c0 <free@plt>
    a086:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
    a08b:	e8 30 91 ff ff       	call   31c0 <free@plt>
    a090:	48 8b 84 24 a8 00 00 	mov    rax,QWORD PTR [rsp+0xa8]
    a097:	00 
    a098:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    a09f:	00 00 
    a0a1:	0f 85 2a 02 00 00    	jne    a2d1 <mergefps+0x7f1>
    a0a7:	48 81 c4 b8 00 00 00 	add    rsp,0xb8
    a0ae:	48 89 ef             	mov    rdi,rbp
    a0b1:	5b                   	pop    rbx
    a0b2:	5d                   	pop    rbp
    a0b3:	41 5c                	pop    r12
    a0b5:	41 5d                	pop    r13
    a0b7:	41 5e                	pop    r14
    a0b9:	41 5f                	pop    r15
    a0bb:	e9 00 91 ff ff       	jmp    31c0 <free@plt>
    a0c0:	48 83 7c 24 20 01    	cmp    QWORD PTR [rsp+0x20],0x1
    a0c6:	74 5f                	je     a127 <mergefps+0x647>
    a0c8:	48 8b 7c 24 20       	mov    rdi,QWORD PTR [rsp+0x20]
    a0cd:	48 8b 34 24          	mov    rsi,QWORD PTR [rsp]
    a0d1:	48 8d 43 08          	lea    rax,[rbx+0x8]
    a0d5:	48 8d 0c fb          	lea    rcx,[rbx+rdi*8]
    a0d9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    a0e0:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    a0e3:	48 39 f2             	cmp    rdx,rsi
    a0e6:	76 0a                	jbe    a0f2 <mergefps+0x612>
    a0e8:	48 83 ea 01          	sub    rdx,0x1
    a0ec:	48 89 10             	mov    QWORD PTR [rax],rdx
    a0ef:	48 8b 33             	mov    rsi,QWORD PTR [rbx]
    a0f2:	48 83 c0 08          	add    rax,0x8
    a0f6:	48 39 c1             	cmp    rcx,rax
    a0f9:	75 e5                	jne    a0e0 <mergefps+0x600>
    a0fb:	48 8b 4c 24 18       	mov    rcx,QWORD PTR [rsp+0x18]
    a100:	48 8d 04 f5 00 00 00 	lea    rax,[rsi*8+0x0]
    a107:	00 
    a108:	49 89 f6             	mov    r14,rsi
    a10b:	48 8b 7c 24 28       	mov    rdi,QWORD PTR [rsp+0x28]
    a110:	49 c1 e6 04          	shl    r14,0x4
    a114:	4c 03 74 24 30       	add    r14,QWORD PTR [rsp+0x30]
    a119:	48 89 34 24          	mov    QWORD PTR [rsp],rsi
    a11d:	48 01 c1             	add    rcx,rax
    a120:	48 29 f0             	sub    rax,rsi
    a123:	4c 8d 3c c7          	lea    r15,[rdi+rax*8]
    a127:	48 8b 44 24 20       	mov    rax,QWORD PTR [rsp+0x20]
    a12c:	48 8b 39             	mov    rdi,QWORD PTR [rcx]
    a12f:	49 8b 36             	mov    rsi,QWORD PTR [r14]
    a132:	4c 8d 68 ff          	lea    r13,[rax-0x1]
    a136:	e8 b5 d0 ff ff       	call   71f0 <xfclose>
    a13b:	48 8b 3c 24          	mov    rdi,QWORD PTR [rsp]
    a13f:	48 39 7c 24 60       	cmp    QWORD PTR [rsp+0x60],rdi
    a144:	0f 87 5e 01 00 00    	ja     a2a8 <mergefps+0x7c8>
    a14a:	49 8b 3f             	mov    rdi,QWORD PTR [r15]
    a14d:	e8 6e 90 ff ff       	call   31c0 <free@plt>
    a152:	48 8b 0c 24          	mov    rcx,QWORD PTR [rsp]
    a156:	49 39 cd             	cmp    r13,rcx
    a159:	0f 86 96 00 00 00    	jbe    a1f5 <mergefps+0x715>
    a15f:	48 8d 04 cd 00 00 00 	lea    rax,[rcx*8+0x0]
    a166:	00 
    a167:	48 8b 7c 24 28       	mov    rdi,QWORD PTR [rsp+0x28]
    a16c:	4c 8b 44 24 18       	mov    r8,QWORD PTR [rsp+0x18]
    a171:	48 29 c8             	sub    rax,rcx
    a174:	48 8d 14 c7          	lea    rdx,[rdi+rax*8]
    a178:	48 8b 7c 24 20       	mov    rdi,QWORD PTR [rsp+0x20]
    a17d:	48 8d 04 cd 08 00 00 	lea    rax,[rcx*8+0x8]
    a184:	00 
    a185:	48 8b 4c 24 10       	mov    rcx,QWORD PTR [rsp+0x10]
    a18a:	48 8d 34 fd 00 00 00 	lea    rsi,[rdi*8+0x0]
    a191:	00 
    a192:	48 8b 7c 24 30       	mov    rdi,QWORD PTR [rsp+0x30]
    a197:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    a19e:	00 00 
    a1a0:	4d 8b 0c 00          	mov    r9,QWORD PTR [r8+rax*1]
    a1a4:	48 83 c2 38          	add    rdx,0x38
    a1a8:	f3 0f 6f 04 47       	movdqu xmm0,XMMWORD PTR [rdi+rax*2]
    a1ad:	4d 89 4c 00 f8       	mov    QWORD PTR [r8+rax*1-0x8],r9
    a1b2:	4c 8b 4a 30          	mov    r9,QWORD PTR [rdx+0x30]
    a1b6:	0f 11 44 47 f0       	movups XMMWORD PTR [rdi+rax*2-0x10],xmm0
    a1bb:	4c 89 4a f8          	mov    QWORD PTR [rdx-0x8],r9
    a1bf:	4c 8b 4c 05 00       	mov    r9,QWORD PTR [rbp+rax*1+0x0]
    a1c4:	f3 0f 6f 02          	movdqu xmm0,XMMWORD PTR [rdx]
    a1c8:	4c 89 4c 05 f8       	mov    QWORD PTR [rbp+rax*1-0x8],r9
    a1cd:	4c 8b 0c 01          	mov    r9,QWORD PTR [rcx+rax*1]
    a1d1:	0f 11 42 c8          	movups XMMWORD PTR [rdx-0x38],xmm0
    a1d5:	f3 0f 6f 42 10       	movdqu xmm0,XMMWORD PTR [rdx+0x10]
    a1da:	4c 89 4c 01 f8       	mov    QWORD PTR [rcx+rax*1-0x8],r9
    a1df:	48 83 c0 08          	add    rax,0x8
    a1e3:	0f 11 42 d8          	movups XMMWORD PTR [rdx-0x28],xmm0
    a1e7:	f3 0f 6f 42 20       	movdqu xmm0,XMMWORD PTR [rdx+0x20]
    a1ec:	0f 11 42 e8          	movups XMMWORD PTR [rdx-0x18],xmm0
    a1f0:	48 39 c6             	cmp    rsi,rax
    a1f3:	75 ab                	jne    a1a0 <mergefps+0x6c0>
    a1f5:	4d 85 ed             	test   r13,r13
    a1f8:	0f 84 28 fe ff ff    	je     a026 <mergefps+0x546>
    a1fe:	48 8b 7c 24 40       	mov    rdi,QWORD PTR [rsp+0x40]
    a203:	48 8b 4c 24 20       	mov    rcx,QWORD PTR [rsp+0x20]
    a208:	48 89 d8             	mov    rax,rbx
    a20b:	48 8d 0c cf          	lea    rcx,[rdi+rcx*8]
    a20f:	90                   	nop
    a210:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    a214:	48 83 c0 08          	add    rax,0x8
    a218:	48 89 50 f8          	mov    QWORD PTR [rax-0x8],rdx
    a21c:	48 39 c1             	cmp    rcx,rax
    a21f:	75 ef                	jne    a210 <mergefps+0x730>
    a221:	4c 89 6c 24 20       	mov    QWORD PTR [rsp+0x20],r13
    a226:	e9 35 fb ff ff       	jmp    9d60 <mergefps+0x280>
    a22b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    a230:	48 8b 44 24 68       	mov    rax,QWORD PTR [rsp+0x68]
    a235:	48 85 c0             	test   rax,rax
    a238:	74 0e                	je     a248 <mergefps+0x768>
    a23a:	48 89 c6             	mov    rsi,rax
    a23d:	48 01 f6             	add    rsi,rsi
    a240:	48 39 f2             	cmp    rdx,rsi
    a243:	77 43                	ja     a288 <mergefps+0x7a8>
    a245:	48 89 f2             	mov    rdx,rsi
    a248:	48 89 54 24 08       	mov    QWORD PTR [rsp+0x8],rdx
    a24d:	e8 6e 8f ff ff       	call   31c0 <free@plt>
    a252:	48 8b 54 24 08       	mov    rdx,QWORD PTR [rsp+0x8]
    a257:	48 89 d7             	mov    rdi,rdx
    a25a:	e8 81 7b 00 00       	call   11de0 <xmalloc>
    a25f:	48 8b 54 24 08       	mov    rdx,QWORD PTR [rsp+0x8]
    a264:	48 89 c7             	mov    rdi,rax
    a267:	48 89 84 24 80 00 00 	mov    QWORD PTR [rsp+0x80],rax
    a26e:	00 
    a26f:	48 89 54 24 68       	mov    QWORD PTR [rsp+0x68],rdx
    a274:	49 8b 56 08          	mov    rdx,QWORD PTR [r14+0x8]
    a278:	e9 de fc ff ff       	jmp    9f5b <mergefps+0x47b>
    a27d:	0f 1f 00             	nop    DWORD PTR [rax]
    a280:	48 01 f6             	add    rsi,rsi
    a283:	48 39 f2             	cmp    rdx,rsi
    a286:	76 bd                	jbe    a245 <mergefps+0x765>
    a288:	48 85 f6             	test   rsi,rsi
    a28b:	75 f3                	jne    a280 <mergefps+0x7a0>
    a28d:	eb b9                	jmp    a248 <mergefps+0x768>
    a28f:	90                   	nop
    a290:	49 8b 3c 24          	mov    rdi,QWORD PTR [r12]
    a294:	48 83 6c 24 60 01    	sub    QWORD PTR [rsp+0x60],0x1
    a29a:	e8 d1 c9 ff ff       	call   6c70 <zaptemp>
    a29f:	e9 2c fd ff ff       	jmp    9fd0 <mergefps+0x4f0>
    a2a4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    a2a8:	49 8b 3e             	mov    rdi,QWORD PTR [r14]
    a2ab:	48 83 6c 24 60 01    	sub    QWORD PTR [rsp+0x60],0x1
    a2b1:	e8 ba c9 ff ff       	call   6c70 <zaptemp>
    a2b6:	e9 8f fe ff ff       	jmp    a14a <mergefps+0x66a>
    a2bb:	48 8b 5c 24 20       	mov    rbx,QWORD PTR [rsp+0x20]
    a2c0:	48 8b 2c 24          	mov    rbp,QWORD PTR [rsp]
    a2c4:	49 89 f7             	mov    r15,rsi
    a2c7:	e9 d3 f9 ff ff       	jmp    9c9f <mergefps+0x1bf>
    a2cc:	e8 5f 7d 00 00       	call   12030 <xalloc_die>
    a2d1:	e8 ca 89 ff ff       	call   2ca0 <__stack_chk_fail@plt>
    a2d6:	b9 01 00 00 00       	mov    ecx,0x1
    a2db:	e9 53 f8 ff ff       	jmp    9b33 <mergefps+0x53>
    a2e0:	b9 01 00 00 00       	mov    ecx,0x1
    a2e5:	e9 87 f8 ff ff       	jmp    9b71 <mergefps+0x91>
    a2ea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

000000000000a2f0 <mergefiles>:
    a2f0:	41 57                	push   r15
    a2f2:	41 56                	push   r14
    a2f4:	4d 89 c7             	mov    r15,r8
    a2f7:	41 55                	push   r13
    a2f9:	41 54                	push   r12
    a2fb:	49 89 d4             	mov    r12,rdx
    a2fe:	55                   	push   rbp
    a2ff:	53                   	push   rbx
    a300:	49 89 f5             	mov    r13,rsi
    a303:	4c 89 e6             	mov    rsi,r12
    a306:	48 89 fd             	mov    rbp,rdi
    a309:	49 89 ce             	mov    r14,rcx
    a30c:	48 83 ec 18          	sub    rsp,0x18
    a310:	48 89 e2             	mov    rdx,rsp
    a313:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a31a:	00 00 
    a31c:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    a321:	31 c0                	xor    eax,eax
    a323:	e8 48 e7 ff ff       	call   8a70 <open_input_files>
    a328:	49 39 c4             	cmp    r12,rax
    a32b:	48 89 c3             	mov    rbx,rax
    a32e:	76 06                	jbe    a336 <mergefiles+0x46>
    a330:	48 83 f8 01          	cmp    rax,0x1
    a334:	76 3a                	jbe    a370 <mergefiles+0x80>
    a336:	4c 8b 0c 24          	mov    r9,QWORD PTR [rsp]
    a33a:	4c 89 f1             	mov    rcx,r14
    a33d:	4d 89 f8             	mov    r8,r15
    a340:	48 89 da             	mov    rdx,rbx
    a343:	4c 89 ee             	mov    rsi,r13
    a346:	48 89 ef             	mov    rdi,rbp
    a349:	e8 92 f7 ff ff       	call   9ae0 <mergefps>
    a34e:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
    a353:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    a35a:	00 00 
    a35c:	48 89 d8             	mov    rax,rbx
    a35f:	75 36                	jne    a397 <mergefiles+0xa7>
    a361:	48 83 c4 18          	add    rsp,0x18
    a365:	5b                   	pop    rbx
    a366:	5d                   	pop    rbp
    a367:	41 5c                	pop    r12
    a369:	41 5d                	pop    r13
    a36b:	41 5e                	pop    r14
    a36d:	41 5f                	pop    r15
    a36f:	c3                   	ret    
    a370:	48 c1 e3 04          	shl    rbx,0x4
    a374:	48 8d 35 24 b1 00 00 	lea    rsi,[rip+0xb124]        # 1549f <short_options+0x15cf>
    a37b:	31 ff                	xor    edi,edi
    a37d:	48 8b 5c 1d 00       	mov    rbx,QWORD PTR [rbp+rbx*1+0x0]
    a382:	ba 05 00 00 00       	mov    edx,0x5
    a387:	e8 e4 88 ff ff       	call   2c70 <dcgettext@plt>
    a38c:	48 89 c7             	mov    rdi,rax
    a38f:	48 89 de             	mov    rsi,rbx
    a392:	e8 89 bf ff ff       	call   6320 <sort_die>
    a397:	e8 04 89 ff ff       	call   2ca0 <__stack_chk_fail@plt>
    a39c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000a3a0 <merge>:
    a3a0:	41 57                	push   r15
    a3a2:	41 56                	push   r14
    a3a4:	49 89 fe             	mov    r14,rdi
    a3a7:	41 55                	push   r13
    a3a9:	41 54                	push   r12
    a3ab:	55                   	push   rbp
    a3ac:	53                   	push   rbx
    a3ad:	48 89 f5             	mov    rbp,rsi
    a3b0:	48 81 ec f8 00 00 00 	sub    rsp,0xf8
    a3b7:	48 89 4c 24 30       	mov    QWORD PTR [rsp+0x30],rcx
    a3bc:	8b 0d 62 fc 20 00    	mov    ecx,DWORD PTR [rip+0x20fc62]        # 21a024 <nmerge>
    a3c2:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a3c9:	00 00 
    a3cb:	48 89 84 24 e8 00 00 	mov    QWORD PTR [rsp+0xe8],rax
    a3d2:	00 
    a3d3:	31 c0                	xor    eax,eax
    a3d5:	48 8d 44 24 48       	lea    rax,[rsp+0x48]
    a3da:	48 89 54 24 08       	mov    QWORD PTR [rsp+0x8],rdx
    a3df:	48 39 ca             	cmp    rdx,rcx
    a3e2:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
    a3e7:	0f 86 6b 01 00 00    	jbe    a558 <merge+0x1b8>
    a3ed:	45 31 e4             	xor    r12d,r12d
    a3f0:	31 db                	xor    ebx,ebx
    a3f2:	48 39 4c 24 08       	cmp    QWORD PTR [rsp+0x8],rcx
    a3f7:	0f 82 4a 04 00 00    	jb     a847 <merge+0x4a7>
    a3fd:	0f 1f 00             	nop    DWORD PTR [rax]
    a400:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
    a405:	31 f6                	xor    esi,esi
    a407:	e8 f4 e8 ff ff       	call   8d00 <maybe_create_temp>
    a40c:	8b 15 12 fc 20 00    	mov    edx,DWORD PTR [rip+0x20fc12]        # 21a024 <nmerge>
    a412:	4c 8d 68 0d          	lea    r13,[rax+0xd]
    a416:	48 89 ee             	mov    rsi,rbp
    a419:	48 89 df             	mov    rdi,rbx
    a41c:	48 8b 4c 24 48       	mov    rcx,QWORD PTR [rsp+0x48]
    a421:	49 89 c7             	mov    r15,rax
    a424:	4d 89 e8             	mov    r8,r13
    a427:	48 39 ea             	cmp    rdx,rbp
    a42a:	48 0f 46 f2          	cmovbe rsi,rdx
    a42e:	48 c1 e7 04          	shl    rdi,0x4
    a432:	4c 01 f7             	add    rdi,r14
    a435:	e8 b6 fe ff ff       	call   a2f0 <mergefiles>
    a43a:	8b 0d e4 fb 20 00    	mov    ecx,DWORD PTR [rip+0x20fbe4]        # 21a024 <nmerge>
    a440:	48 8b 74 24 08       	mov    rsi,QWORD PTR [rsp+0x8]
    a445:	48 39 e8             	cmp    rax,rbp
    a448:	48 89 ea             	mov    rdx,rbp
    a44b:	48 0f 46 d0          	cmovbe rdx,rax
    a44f:	48 01 c3             	add    rbx,rax
    a452:	48 29 d5             	sub    rbp,rdx
    a455:	48 29 de             	sub    rsi,rbx
    a458:	4c 89 e2             	mov    rdx,r12
    a45b:	48 c1 e2 04          	shl    rdx,0x4
    a45f:	49 83 c4 01          	add    r12,0x1
    a463:	48 39 f1             	cmp    rcx,rsi
    a466:	4d 89 2c 16          	mov    QWORD PTR [r14+rdx*1],r13
    a46a:	4d 89 7c 16 08       	mov    QWORD PTR [r14+rdx*1+0x8],r15
    a46f:	76 8f                	jbe    a400 <merge+0x60>
    a471:	4c 89 e0             	mov    rax,r12
    a474:	31 d2                	xor    edx,edx
    a476:	4d 89 e1             	mov    r9,r12
    a479:	48 f7 f1             	div    rcx
    a47c:	49 89 da             	mov    r10,rbx
    a47f:	49 c1 e1 04          	shl    r9,0x4
    a483:	49 c1 e2 04          	shl    r10,0x4
    a487:	4d 01 f1             	add    r9,r14
    a48a:	4d 01 f2             	add    r10,r14
    a48d:	48 29 d1             	sub    rcx,rdx
    a490:	48 39 f1             	cmp    rcx,rsi
    a493:	0f 83 88 00 00 00    	jae    a521 <merge+0x181>
    a499:	48 8d 56 01          	lea    rdx,[rsi+0x1]
    a49d:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
    a4a2:	31 f6                	xor    esi,esi
    a4a4:	4c 89 4c 24 38       	mov    QWORD PTR [rsp+0x38],r9
    a4a9:	4c 89 54 24 28       	mov    QWORD PTR [rsp+0x28],r10
    a4ae:	48 29 ca             	sub    rdx,rcx
    a4b1:	48 89 54 24 20       	mov    QWORD PTR [rsp+0x20],rdx
    a4b6:	e8 45 e8 ff ff       	call   8d00 <maybe_create_temp>
    a4bb:	48 8b 54 24 20       	mov    rdx,QWORD PTR [rsp+0x20]
    a4c0:	4c 8b 54 24 28       	mov    r10,QWORD PTR [rsp+0x28]
    a4c5:	4c 8d 78 0d          	lea    r15,[rax+0xd]
    a4c9:	48 8b 4c 24 48       	mov    rcx,QWORD PTR [rsp+0x48]
    a4ce:	48 89 ee             	mov    rsi,rbp
    a4d1:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
    a4d6:	4d 89 f8             	mov    r8,r15
    a4d9:	48 39 ea             	cmp    rdx,rbp
    a4dc:	4c 89 d7             	mov    rdi,r10
    a4df:	48 0f 46 f2          	cmovbe rsi,rdx
    a4e3:	e8 08 fe ff ff       	call   a2f0 <mergefiles>
    a4e8:	4c 8b 4c 24 38       	mov    r9,QWORD PTR [rsp+0x38]
    a4ed:	4c 8b 5c 24 18       	mov    r11,QWORD PTR [rsp+0x18]
    a4f2:	48 39 e8             	cmp    rax,rbp
    a4f5:	48 89 ea             	mov    rdx,rbp
    a4f8:	48 0f 46 d0          	cmovbe rdx,rax
    a4fc:	49 83 c4 01          	add    r12,0x1
    a500:	48 01 c3             	add    rbx,rax
    a503:	4d 89 39             	mov    QWORD PTR [r9],r15
    a506:	4d 89 59 08          	mov    QWORD PTR [r9+0x8],r11
    a50a:	49 89 da             	mov    r10,rbx
    a50d:	4d 89 e1             	mov    r9,r12
    a510:	49 c1 e2 04          	shl    r10,0x4
    a514:	48 29 d5             	sub    rbp,rdx
    a517:	49 c1 e1 04          	shl    r9,0x4
    a51b:	4d 01 f2             	add    r10,r14
    a51e:	4d 01 f1             	add    r9,r14
    a521:	4c 8b 7c 24 08       	mov    r15,QWORD PTR [rsp+0x8]
    a526:	4c 89 d6             	mov    rsi,r10
    a529:	4c 89 cf             	mov    rdi,r9
    a52c:	4c 01 e5             	add    rbp,r12
    a52f:	49 29 dc             	sub    r12,rbx
    a532:	4c 89 fa             	mov    rdx,r15
    a535:	4d 01 e7             	add    r15,r12
    a538:	48 29 da             	sub    rdx,rbx
    a53b:	48 c1 e2 04          	shl    rdx,0x4
    a53f:	e8 7c 8a ff ff       	call   2fc0 <memmove@plt>
    a544:	8b 0d da fa 20 00    	mov    ecx,DWORD PTR [rip+0x20fada]        # 21a024 <nmerge>
    a54a:	4c 89 7c 24 08       	mov    QWORD PTR [rsp+0x8],r15
    a54f:	4c 39 f9             	cmp    rcx,r15
    a552:	0f 82 95 fe ff ff    	jb     a3ed <merge+0x4d>
    a558:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
    a55d:	48 39 e8             	cmp    rax,rbp
    a560:	0f 86 27 01 00 00    	jbe    a68d <merge+0x2ed>
    a566:	48 29 e8             	sub    rax,rbp
    a569:	48 89 eb             	mov    rbx,rbp
    a56c:	45 31 ed             	xor    r13d,r13d
    a56f:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
    a574:	48 8d 44 24 50       	lea    rax,[rsp+0x50]
    a579:	48 c1 e3 04          	shl    rbx,0x4
    a57d:	4c 01 f3             	add    rbx,r14
    a580:	45 31 ff             	xor    r15d,r15d
    a583:	4c 89 74 24 20       	mov    QWORD PTR [rsp+0x20],r14
    a588:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
    a58d:	48 8d 44 24 48       	lea    rax,[rsp+0x48]
    a592:	48 89 6c 24 28       	mov    QWORD PTR [rsp+0x28],rbp
    a597:	4c 8b 64 24 30       	mov    r12,QWORD PTR [rsp+0x30]
    a59c:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
    a5a1:	eb 4c                	jmp    a5ef <merge+0x24f>
    a5a3:	85 ed                	test   ebp,ebp
    a5a5:	0f 85 b1 00 00 00    	jne    a65c <merge+0x2bc>
    a5ab:	e8 d0 bd ff ff       	call   6380 <get_outstatus>
    a5b0:	48 85 c0             	test   rax,rax
    a5b3:	49 89 c6             	mov    r14,rax
    a5b6:	0f 84 c7 00 00 00    	je     a683 <merge+0x2e3>
    a5bc:	48 8b 54 24 18       	mov    rdx,QWORD PTR [rsp+0x18]
    a5c1:	31 f6                	xor    esi,esi
    a5c3:	bf 01 00 00 00       	mov    edi,0x1
    a5c8:	e8 53 89 ff ff       	call   2f20 <__fxstat@plt>
    a5cd:	85 c0                	test   eax,eax
    a5cf:	75 0b                	jne    a5dc <merge+0x23c>
    a5d1:	49 8b 46 08          	mov    rax,QWORD PTR [r14+0x8]
    a5d5:	48 39 44 24 58       	cmp    QWORD PTR [rsp+0x58],rax
    a5da:	74 76                	je     a652 <merge+0x2b2>
    a5dc:	49 83 c5 01          	add    r13,0x1
    a5e0:	48 83 c3 10          	add    rbx,0x10
    a5e4:	4c 39 6c 24 10       	cmp    QWORD PTR [rsp+0x10],r13
    a5e9:	0f 84 94 00 00 00    	je     a683 <merge+0x2e3>
    a5ef:	48 8b 03             	mov    rax,QWORD PTR [rbx]
    a5f2:	48 8d 3d 41 c0 00 00 	lea    rdi,[rip+0xc041]        # 1663a <__PRETTY_FUNCTION__.4162+0x42>
    a5f9:	b9 02 00 00 00       	mov    ecx,0x2
    a5fe:	48 89 c6             	mov    rsi,rax
    a601:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    a603:	0f 97 c2             	seta   dl
    a606:	80 da 00             	sbb    dl,0x0
    a609:	4d 85 e4             	test   r12,r12
    a60c:	0f be ea             	movsx  ebp,dl
    a60f:	74 0f                	je     a620 <merge+0x280>
    a611:	48 89 c6             	mov    rsi,rax
    a614:	4c 89 e7             	mov    rdi,r12
    a617:	e8 24 88 ff ff       	call   2e40 <strcmp@plt>
    a61c:	85 c0                	test   eax,eax
    a61e:	74 83                	je     a5a3 <merge+0x203>
    a620:	e8 5b bd ff ff       	call   6380 <get_outstatus>
    a625:	48 85 c0             	test   rax,rax
    a628:	49 89 c6             	mov    r14,rax
    a62b:	74 56                	je     a683 <merge+0x2e3>
    a62d:	85 ed                	test   ebp,ebp
    a62f:	74 8b                	je     a5bc <merge+0x21c>
    a631:	48 8b 54 24 18       	mov    rdx,QWORD PTR [rsp+0x18]
    a636:	48 8b 33             	mov    rsi,QWORD PTR [rbx]
    a639:	bf 01 00 00 00       	mov    edi,0x1
    a63e:	e8 7d 88 ff ff       	call   2ec0 <__xstat@plt>
    a643:	85 c0                	test   eax,eax
    a645:	75 95                	jne    a5dc <merge+0x23c>
    a647:	49 8b 46 08          	mov    rax,QWORD PTR [r14+0x8]
    a64b:	48 39 44 24 58       	cmp    QWORD PTR [rsp+0x58],rax
    a650:	75 8a                	jne    a5dc <merge+0x23c>
    a652:	49 8b 06             	mov    rax,QWORD PTR [r14]
    a655:	48 39 44 24 50       	cmp    QWORD PTR [rsp+0x50],rax
    a65a:	75 80                	jne    a5dc <merge+0x23c>
    a65c:	4d 85 ff             	test   r15,r15
    a65f:	4d 8d 77 0d          	lea    r14,[r15+0xd]
    a663:	0f 84 f0 01 00 00    	je     a859 <merge+0x4b9>
    a669:	4c 89 33             	mov    QWORD PTR [rbx],r14
    a66c:	4c 89 7b 08          	mov    QWORD PTR [rbx+0x8],r15
    a670:	49 83 c5 01          	add    r13,0x1
    a674:	48 83 c3 10          	add    rbx,0x10
    a678:	4c 39 6c 24 10       	cmp    QWORD PTR [rsp+0x10],r13
    a67d:	0f 85 6c ff ff ff    	jne    a5ef <merge+0x24f>
    a683:	4c 8b 74 24 20       	mov    r14,QWORD PTR [rsp+0x20]
    a688:	48 8b 6c 24 28       	mov    rbp,QWORD PTR [rsp+0x28]
    a68d:	48 8d 44 24 40       	lea    rax,[rsp+0x40]
    a692:	4c 8d 7c 24 48       	lea    r15,[rsp+0x48]
    a697:	48 89 6c 24 10       	mov    QWORD PTR [rsp+0x10],rbp
    a69c:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
    a6a1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    a6a8:	48 8b 6c 24 08       	mov    rbp,QWORD PTR [rsp+0x8]
    a6ad:	48 8b 54 24 28       	mov    rdx,QWORD PTR [rsp+0x28]
    a6b2:	4c 89 f7             	mov    rdi,r14
    a6b5:	48 89 ee             	mov    rsi,rbp
    a6b8:	e8 b3 e3 ff ff       	call   8a70 <open_input_files>
    a6bd:	48 89 c3             	mov    rbx,rax
    a6c0:	48 39 dd             	cmp    rbp,rbx
    a6c3:	0f 84 e7 00 00 00    	je     a7b0 <merge+0x410>
    a6c9:	48 83 fb 02          	cmp    rbx,0x2
    a6cd:	0f 86 b5 01 00 00    	jbe    a888 <merge+0x4e8>
    a6d3:	48 89 d8             	mov    rax,rbx
    a6d6:	4c 8d 2c dd f8 ff ff 	lea    r13,[rbx*8-0x8]
    a6dd:	ff 
    a6de:	48 c1 e0 04          	shl    rax,0x4
    a6e2:	49 8d 6c 06 f0       	lea    rbp,[r14+rax*1-0x10]
    a6e7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    a6ee:	00 00 
    a6f0:	48 8b 44 24 40       	mov    rax,QWORD PTR [rsp+0x40]
    a6f5:	48 8b 75 00          	mov    rsi,QWORD PTR [rbp+0x0]
    a6f9:	48 83 eb 01          	sub    rbx,0x1
    a6fd:	49 89 ec             	mov    r12,rbp
    a700:	4a 8b 3c 28          	mov    rdi,QWORD PTR [rax+r13*1]
    a704:	e8 e7 ca ff ff       	call   71f0 <xfclose>
    a709:	31 f6                	xor    esi,esi
    a70b:	48 83 fb 02          	cmp    rbx,0x2
    a70f:	4c 89 ff             	mov    rdi,r15
    a712:	40 0f 97 c6          	seta   sil
    a716:	48 83 ed 10          	sub    rbp,0x10
    a71a:	49 83 ed 08          	sub    r13,0x8
    a71e:	e8 dd e5 ff ff       	call   8d00 <maybe_create_temp>
    a723:	48 85 c0             	test   rax,rax
    a726:	74 c8                	je     a6f0 <merge+0x350>
    a728:	48 8b 6c 24 10       	mov    rbp,QWORD PTR [rsp+0x10]
    a72d:	4c 8d 58 0d          	lea    r11,[rax+0xd]
    a731:	4c 8b 4c 24 40       	mov    r9,QWORD PTR [rsp+0x40]
    a736:	48 8b 4c 24 48       	mov    rcx,QWORD PTR [rsp+0x48]
    a73b:	48 89 da             	mov    rdx,rbx
    a73e:	4c 89 f7             	mov    rdi,r14
    a741:	4d 89 d8             	mov    r8,r11
    a744:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
    a749:	4c 89 5c 24 18       	mov    QWORD PTR [rsp+0x18],r11
    a74e:	48 39 dd             	cmp    rbp,rbx
    a751:	49 89 ea             	mov    r10,rbp
    a754:	4c 0f 47 d3          	cmova  r10,rbx
    a758:	4c 89 d6             	mov    rsi,r10
    a75b:	4c 89 54 24 10       	mov    QWORD PTR [rsp+0x10],r10
    a760:	e8 7b f3 ff ff       	call   9ae0 <mergefps>
    a765:	4c 8b 6c 24 08       	mov    r13,QWORD PTR [rsp+0x8]
    a76a:	4c 8b 5c 24 18       	mov    r11,QWORD PTR [rsp+0x18]
    a76f:	49 8d 7e 10          	lea    rdi,[r14+0x10]
    a773:	48 8b 44 24 20       	mov    rax,QWORD PTR [rsp+0x20]
    a778:	4c 89 e6             	mov    rsi,r12
    a77b:	49 29 dd             	sub    r13,rbx
    a77e:	4d 89 1e             	mov    QWORD PTR [r14],r11
    a781:	4c 89 ea             	mov    rdx,r13
    a784:	49 89 46 08          	mov    QWORD PTR [r14+0x8],rax
    a788:	48 c1 e2 04          	shl    rdx,0x4
    a78c:	e8 2f 88 ff ff       	call   2fc0 <memmove@plt>
    a791:	4c 8b 54 24 10       	mov    r10,QWORD PTR [rsp+0x10]
    a796:	4c 29 d5             	sub    rbp,r10
    a799:	48 8d 45 01          	lea    rax,[rbp+0x1]
    a79d:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
    a7a2:	49 8d 45 01          	lea    rax,[r13+0x1]
    a7a6:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    a7ab:	e9 f8 fe ff ff       	jmp    a6a8 <merge+0x308>
    a7b0:	48 8b 7c 24 30       	mov    rdi,QWORD PTR [rsp+0x30]
    a7b5:	48 8d 35 2e ad 00 00 	lea    rsi,[rip+0xad2e]        # 154ea <short_options+0x161a>
    a7bc:	e8 ef c8 ff ff       	call   70b0 <stream_open>
    a7c1:	48 85 c0             	test   rax,rax
    a7c4:	75 3a                	jne    a800 <merge+0x460>
    a7c6:	e8 45 83 ff ff       	call   2b10 <__errno_location@plt>
    a7cb:	83 38 18             	cmp    DWORD PTR [rax],0x18
    a7ce:	75 0c                	jne    a7dc <merge+0x43c>
    a7d0:	48 83 7c 24 08 02    	cmp    QWORD PTR [rsp+0x8],0x2
    a7d6:	0f 87 f7 fe ff ff    	ja     a6d3 <merge+0x333>
    a7dc:	48 8d 35 bc ac 00 00 	lea    rsi,[rip+0xacbc]        # 1549f <short_options+0x15cf>
    a7e3:	31 ff                	xor    edi,edi
    a7e5:	ba 05 00 00 00       	mov    edx,0x5
    a7ea:	e8 81 84 ff ff       	call   2c70 <dcgettext@plt>
    a7ef:	48 8b 74 24 30       	mov    rsi,QWORD PTR [rsp+0x30]
    a7f4:	48 89 c7             	mov    rdi,rax
    a7f7:	e8 24 bb ff ff       	call   6320 <sort_die>
    a7fc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    a800:	48 8b 6c 24 10       	mov    rbp,QWORD PTR [rsp+0x10]
    a805:	4c 8b 4c 24 40       	mov    r9,QWORD PTR [rsp+0x40]
    a80a:	48 89 c1             	mov    rcx,rax
    a80d:	4c 8b 44 24 30       	mov    r8,QWORD PTR [rsp+0x30]
    a812:	48 8b 54 24 08       	mov    rdx,QWORD PTR [rsp+0x8]
    a817:	4c 89 f7             	mov    rdi,r14
    a81a:	48 89 ee             	mov    rsi,rbp
    a81d:	e8 be f2 ff ff       	call   9ae0 <mergefps>
    a822:	48 8b 84 24 e8 00 00 	mov    rax,QWORD PTR [rsp+0xe8]
    a829:	00 
    a82a:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    a831:	00 00 
    a833:	75 79                	jne    a8ae <merge+0x50e>
    a835:	48 81 c4 f8 00 00 00 	add    rsp,0xf8
    a83c:	5b                   	pop    rbx
    a83d:	5d                   	pop    rbp
    a83e:	41 5c                	pop    r12
    a840:	41 5d                	pop    r13
    a842:	41 5e                	pop    r14
    a844:	41 5f                	pop    r15
    a846:	c3                   	ret    
    a847:	4d 89 f1             	mov    r9,r14
    a84a:	4d 89 f2             	mov    r10,r14
    a84d:	48 8b 74 24 08       	mov    rsi,QWORD PTR [rsp+0x8]
    a852:	31 d2                	xor    edx,edx
    a854:	e9 34 fc ff ff       	jmp    a48d <merge+0xed>
    a859:	48 8b 7c 24 38       	mov    rdi,QWORD PTR [rsp+0x38]
    a85e:	31 f6                	xor    esi,esi
    a860:	e8 9b e4 ff ff       	call   8d00 <maybe_create_temp>
    a865:	48 8b 4c 24 48       	mov    rcx,QWORD PTR [rsp+0x48]
    a86a:	4c 8d 70 0d          	lea    r14,[rax+0xd]
    a86e:	ba 01 00 00 00       	mov    edx,0x1
    a873:	31 f6                	xor    esi,esi
    a875:	48 89 df             	mov    rdi,rbx
    a878:	49 89 c7             	mov    r15,rax
    a87b:	4d 89 f0             	mov    r8,r14
    a87e:	e8 6d fa ff ff       	call   a2f0 <mergefiles>
    a883:	e9 e1 fd ff ff       	jmp    a669 <merge+0x2c9>
    a888:	48 c1 e3 04          	shl    rbx,0x4
    a88c:	48 8d 35 0c ac 00 00 	lea    rsi,[rip+0xac0c]        # 1549f <short_options+0x15cf>
    a893:	31 ff                	xor    edi,edi
    a895:	49 8b 1c 1e          	mov    rbx,QWORD PTR [r14+rbx*1]
    a899:	ba 05 00 00 00       	mov    edx,0x5
    a89e:	e8 cd 83 ff ff       	call   2c70 <dcgettext@plt>
    a8a3:	48 89 c7             	mov    rdi,rax
    a8a6:	48 89 de             	mov    rsi,rbx
    a8a9:	e8 72 ba ff ff       	call   6320 <sort_die>
    a8ae:	e8 ed 83 ff ff       	call   2ca0 <__stack_chk_fail@plt>
    a8b3:	0f 1f 00             	nop    DWORD PTR [rax]
    a8b6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    a8bd:	00 00 00 

000000000000a8c0 <usage>:
    a8c0:	41 55                	push   r13
    a8c2:	41 54                	push   r12
    a8c4:	ba 05 00 00 00       	mov    edx,0x5
    a8c9:	55                   	push   rbp
    a8ca:	53                   	push   rbx
    a8cb:	89 fd                	mov    ebp,edi
    a8cd:	48 81 ec 88 00 00 00 	sub    rsp,0x88
    a8d4:	48 8b 1d cd ff 20 00 	mov    rbx,QWORD PTR [rip+0x20ffcd]        # 21a8a8 <program_name>
    a8db:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a8e2:	00 00 
    a8e4:	48 89 44 24 78       	mov    QWORD PTR [rsp+0x78],rax
    a8e9:	31 c0                	xor    eax,eax
    a8eb:	85 ff                	test   edi,edi
    a8ed:	74 2e                	je     a91d <usage+0x5d>
    a8ef:	48 8d 35 b2 97 00 00 	lea    rsi,[rip+0x97b2]        # 140a8 <short_options+0x1d8>
    a8f6:	31 ff                	xor    edi,edi
    a8f8:	e8 73 83 ff ff       	call   2c70 <dcgettext@plt>
    a8fd:	48 8b 3d fc f8 20 00 	mov    rdi,QWORD PTR [rip+0x20f8fc]        # 21a200 <stderr@@GLIBC_2.2.5>
    a904:	48 89 c2             	mov    rdx,rax
    a907:	48 89 d9             	mov    rcx,rbx
    a90a:	be 01 00 00 00       	mov    esi,0x1
    a90f:	31 c0                	xor    eax,eax
    a911:	e8 ea 87 ff ff       	call   3100 <__fprintf_chk@plt>
    a916:	89 ef                	mov    edi,ebp
    a918:	e8 c3 87 ff ff       	call   30e0 <exit@plt>
    a91d:	48 8d 35 ac 97 00 00 	lea    rsi,[rip+0x97ac]        # 140d0 <short_options+0x200>
    a924:	31 ff                	xor    edi,edi
    a926:	e8 45 83 ff ff       	call   2c70 <dcgettext@plt>
    a92b:	48 89 d9             	mov    rcx,rbx
    a92e:	48 89 da             	mov    rdx,rbx
    a931:	48 89 c6             	mov    rsi,rax
    a934:	bf 01 00 00 00       	mov    edi,0x1
    a939:	31 c0                	xor    eax,eax
    a93b:	e8 60 86 ff ff       	call   2fa0 <__printf_chk@plt>
    a940:	48 8b 1d 81 f8 20 00 	mov    rbx,QWORD PTR [rip+0x20f881]        # 21a1c8 <stdout@@GLIBC_2.2.5>
    a947:	48 8d 35 ca 97 00 00 	lea    rsi,[rip+0x97ca]        # 14118 <short_options+0x248>
    a94e:	ba 05 00 00 00       	mov    edx,0x5
    a953:	31 ff                	xor    edi,edi
    a955:	e8 16 83 ff ff       	call   2c70 <dcgettext@plt>
    a95a:	48 89 de             	mov    rsi,rbx
    a95d:	48 89 c7             	mov    rdi,rax
    a960:	e8 ab 84 ff ff       	call   2e10 <fputs_unlocked@plt>
    a965:	48 8b 1d 5c f8 20 00 	mov    rbx,QWORD PTR [rip+0x20f85c]        # 21a1c8 <stdout@@GLIBC_2.2.5>
    a96c:	48 8d 35 e5 97 00 00 	lea    rsi,[rip+0x97e5]        # 14158 <short_options+0x288>
    a973:	ba 05 00 00 00       	mov    edx,0x5
    a978:	31 ff                	xor    edi,edi
    a97a:	e8 f1 82 ff ff       	call   2c70 <dcgettext@plt>
    a97f:	48 89 de             	mov    rsi,rbx
    a982:	48 89 c7             	mov    rdi,rax
    a985:	e8 86 84 ff ff       	call   2e10 <fputs_unlocked@plt>
    a98a:	48 8b 1d 37 f8 20 00 	mov    rbx,QWORD PTR [rip+0x20f837]        # 21a1c8 <stdout@@GLIBC_2.2.5>
    a991:	48 8d 35 f8 97 00 00 	lea    rsi,[rip+0x97f8]        # 14190 <short_options+0x2c0>
    a998:	ba 05 00 00 00       	mov    edx,0x5
    a99d:	31 ff                	xor    edi,edi
    a99f:	e8 cc 82 ff ff       	call   2c70 <dcgettext@plt>
    a9a4:	48 89 de             	mov    rsi,rbx
    a9a7:	48 89 c7             	mov    rdi,rax
    a9aa:	e8 61 84 ff ff       	call   2e10 <fputs_unlocked@plt>
    a9af:	48 8b 1d 12 f8 20 00 	mov    rbx,QWORD PTR [rip+0x20f812]        # 21a1c8 <stdout@@GLIBC_2.2.5>
    a9b6:	48 8d 35 3b ab 00 00 	lea    rsi,[rip+0xab3b]        # 154f8 <short_options+0x1628>
    a9bd:	ba 05 00 00 00       	mov    edx,0x5
    a9c2:	31 ff                	xor    edi,edi
    a9c4:	e8 a7 82 ff ff       	call   2c70 <dcgettext@plt>
    a9c9:	48 89 de             	mov    rsi,rbx
    a9cc:	48 89 c7             	mov    rdi,rax
    a9cf:	e8 3c 84 ff ff       	call   2e10 <fputs_unlocked@plt>
    a9d4:	48 8b 1d ed f7 20 00 	mov    rbx,QWORD PTR [rip+0x20f7ed]        # 21a1c8 <stdout@@GLIBC_2.2.5>
    a9db:	48 8d 35 fe 97 00 00 	lea    rsi,[rip+0x97fe]        # 141e0 <short_options+0x310>
    a9e2:	ba 05 00 00 00       	mov    edx,0x5
    a9e7:	31 ff                	xor    edi,edi
    a9e9:	e8 82 82 ff ff       	call   2c70 <dcgettext@plt>
    a9ee:	48 89 de             	mov    rsi,rbx
    a9f1:	48 89 c7             	mov    rdi,rax
    a9f4:	e8 17 84 ff ff       	call   2e10 <fputs_unlocked@plt>
    a9f9:	48 8b 1d c8 f7 20 00 	mov    rbx,QWORD PTR [rip+0x20f7c8]        # 21a1c8 <stdout@@GLIBC_2.2.5>
    aa00:	48 8d 35 a9 98 00 00 	lea    rsi,[rip+0x98a9]        # 142b0 <short_options+0x3e0>
    aa07:	ba 05 00 00 00       	mov    edx,0x5
    aa0c:	31 ff                	xor    edi,edi
    aa0e:	e8 5d 82 ff ff       	call   2c70 <dcgettext@plt>
    aa13:	48 89 de             	mov    rsi,rbx
    aa16:	48 89 c7             	mov    rdi,rax
    aa19:	e8 f2 83 ff ff       	call   2e10 <fputs_unlocked@plt>
    aa1e:	48 8b 1d a3 f7 20 00 	mov    rbx,QWORD PTR [rip+0x20f7a3]        # 21a1c8 <stdout@@GLIBC_2.2.5>
    aa25:	48 8d 35 5c 99 00 00 	lea    rsi,[rip+0x995c]        # 14388 <short_options+0x4b8>
    aa2c:	ba 05 00 00 00       	mov    edx,0x5
    aa31:	31 ff                	xor    edi,edi
    aa33:	e8 38 82 ff ff       	call   2c70 <dcgettext@plt>
    aa38:	48 89 de             	mov    rsi,rbx
    aa3b:	48 89 c7             	mov    rdi,rax
    aa3e:	e8 cd 83 ff ff       	call   2e10 <fputs_unlocked@plt>
    aa43:	48 8b 1d 7e f7 20 00 	mov    rbx,QWORD PTR [rip+0x20f77e]        # 21a1c8 <stdout@@GLIBC_2.2.5>
    aa4a:	48 8d 35 87 99 00 00 	lea    rsi,[rip+0x9987]        # 143d8 <short_options+0x508>
    aa51:	ba 05 00 00 00       	mov    edx,0x5
    aa56:	31 ff                	xor    edi,edi
    aa58:	e8 13 82 ff ff       	call   2c70 <dcgettext@plt>
    aa5d:	48 89 de             	mov    rsi,rbx
    aa60:	48 89 c7             	mov    rdi,rax
    aa63:	e8 a8 83 ff ff       	call   2e10 <fputs_unlocked@plt>
    aa68:	48 8b 1d 59 f7 20 00 	mov    rbx,QWORD PTR [rip+0x20f759]        # 21a1c8 <stdout@@GLIBC_2.2.5>
    aa6f:	48 8d 35 7a 9a 00 00 	lea    rsi,[rip+0x9a7a]        # 144f0 <short_options+0x620>
    aa76:	ba 05 00 00 00       	mov    edx,0x5
    aa7b:	31 ff                	xor    edi,edi
    aa7d:	e8 ee 81 ff ff       	call   2c70 <dcgettext@plt>
    aa82:	48 89 de             	mov    rsi,rbx
    aa85:	48 89 c7             	mov    rdi,rax
    aa88:	e8 83 83 ff ff       	call   2e10 <fputs_unlocked@plt>
    aa8d:	48 8b 1d 34 f7 20 00 	mov    rbx,QWORD PTR [rip+0x20f734]        # 21a1c8 <stdout@@GLIBC_2.2.5>
    aa94:	48 8d 35 71 aa 00 00 	lea    rsi,[rip+0xaa71]        # 1550c <short_options+0x163c>
    aa9b:	ba 05 00 00 00       	mov    edx,0x5
    aaa0:	31 ff                	xor    edi,edi
    aaa2:	e8 c9 81 ff ff       	call   2c70 <dcgettext@plt>
    aaa7:	48 89 de             	mov    rsi,rbx
    aaaa:	48 89 c7             	mov    rdi,rax
    aaad:	e8 5e 83 ff ff       	call   2e10 <fputs_unlocked@plt>
    aab2:	48 8b 1d 0f f7 20 00 	mov    rbx,QWORD PTR [rip+0x20f70f]        # 21a1c8 <stdout@@GLIBC_2.2.5>
    aab9:	48 8d 35 48 9b 00 00 	lea    rsi,[rip+0x9b48]        # 14608 <short_options+0x738>
    aac0:	ba 05 00 00 00       	mov    edx,0x5
    aac5:	31 ff                	xor    edi,edi
    aac7:	e8 a4 81 ff ff       	call   2c70 <dcgettext@plt>
    aacc:	48 89 de             	mov    rsi,rbx
    aacf:	48 89 c7             	mov    rdi,rax
    aad2:	e8 39 83 ff ff       	call   2e10 <fputs_unlocked@plt>
    aad7:	48 8b 1d ea f6 20 00 	mov    rbx,QWORD PTR [rip+0x20f6ea]        # 21a1c8 <stdout@@GLIBC_2.2.5>
    aade:	48 8d 35 9b 9b 00 00 	lea    rsi,[rip+0x9b9b]        # 14680 <short_options+0x7b0>
    aae5:	ba 05 00 00 00       	mov    edx,0x5
    aaea:	31 ff                	xor    edi,edi
    aaec:	e8 7f 81 ff ff       	call   2c70 <dcgettext@plt>
    aaf1:	48 89 de             	mov    rsi,rbx
    aaf4:	48 89 c7             	mov    rdi,rax
    aaf7:	e8 14 83 ff ff       	call   2e10 <fputs_unlocked@plt>
    aafc:	48 8b 1d c5 f6 20 00 	mov    rbx,QWORD PTR [rip+0x20f6c5]        # 21a1c8 <stdout@@GLIBC_2.2.5>
    ab03:	48 8d 35 8e 9c 00 00 	lea    rsi,[rip+0x9c8e]        # 14798 <short_options+0x8c8>
    ab0a:	ba 05 00 00 00       	mov    edx,0x5
    ab0f:	31 ff                	xor    edi,edi
    ab11:	e8 5a 81 ff ff       	call   2c70 <dcgettext@plt>
    ab16:	48 89 de             	mov    rsi,rbx
    ab19:	48 89 c7             	mov    rdi,rax
    ab1c:	e8 ef 82 ff ff       	call   2e10 <fputs_unlocked@plt>
    ab21:	48 8b 1d a0 f6 20 00 	mov    rbx,QWORD PTR [rip+0x20f6a0]        # 21a1c8 <stdout@@GLIBC_2.2.5>
    ab28:	48 8d 35 c9 9d 00 00 	lea    rsi,[rip+0x9dc9]        # 148f8 <short_options+0xa28>
    ab2f:	ba 05 00 00 00       	mov    edx,0x5
    ab34:	31 ff                	xor    edi,edi
    ab36:	e8 35 81 ff ff       	call   2c70 <dcgettext@plt>
    ab3b:	48 89 de             	mov    rsi,rbx
    ab3e:	48 89 c7             	mov    rdi,rax
    ab41:	e8 ca 82 ff ff       	call   2e10 <fputs_unlocked@plt>
    ab46:	48 8b 1d 7b f6 20 00 	mov    rbx,QWORD PTR [rip+0x20f67b]        # 21a1c8 <stdout@@GLIBC_2.2.5>
    ab4d:	48 8d 35 34 9e 00 00 	lea    rsi,[rip+0x9e34]        # 14988 <short_options+0xab8>
    ab54:	ba 05 00 00 00       	mov    edx,0x5
    ab59:	31 ff                	xor    edi,edi
    ab5b:	e8 10 81 ff ff       	call   2c70 <dcgettext@plt>
    ab60:	48 89 de             	mov    rsi,rbx
    ab63:	48 89 c7             	mov    rdi,rax
    ab66:	e8 a5 82 ff ff       	call   2e10 <fputs_unlocked@plt>
    ab6b:	48 8d 35 ee 9e 00 00 	lea    rsi,[rip+0x9eee]        # 14a60 <short_options+0xb90>
    ab72:	31 ff                	xor    edi,edi
    ab74:	ba 05 00 00 00       	mov    edx,0x5
    ab79:	e8 f2 80 ff ff       	call   2c70 <dcgettext@plt>
    ab7e:	48 8d 15 98 a9 00 00 	lea    rdx,[rip+0xa998]        # 1551d <short_options+0x164d>
    ab85:	48 89 c6             	mov    rsi,rax
    ab88:	bf 01 00 00 00       	mov    edi,0x1
    ab8d:	31 c0                	xor    eax,eax
    ab8f:	e8 0c 84 ff ff       	call   2fa0 <__printf_chk@plt>
    ab94:	48 8b 1d 2d f6 20 00 	mov    rbx,QWORD PTR [rip+0x20f62d]        # 21a1c8 <stdout@@GLIBC_2.2.5>
    ab9b:	48 8d 35 86 a0 00 00 	lea    rsi,[rip+0xa086]        # 14c28 <short_options+0xd58>
    aba2:	ba 05 00 00 00       	mov    edx,0x5
    aba7:	31 ff                	xor    edi,edi
    aba9:	e8 c2 80 ff ff       	call   2c70 <dcgettext@plt>
    abae:	48 89 de             	mov    rsi,rbx
    abb1:	48 89 c7             	mov    rdi,rax
    abb4:	e8 57 82 ff ff       	call   2e10 <fputs_unlocked@plt>
    abb9:	48 8b 1d 08 f6 20 00 	mov    rbx,QWORD PTR [rip+0x20f608]        # 21a1c8 <stdout@@GLIBC_2.2.5>
    abc0:	48 8d 35 a1 a0 00 00 	lea    rsi,[rip+0xa0a1]        # 14c68 <short_options+0xd98>
    abc7:	ba 05 00 00 00       	mov    edx,0x5
    abcc:	31 ff                	xor    edi,edi
    abce:	e8 9d 80 ff ff       	call   2c70 <dcgettext@plt>
    abd3:	48 89 de             	mov    rsi,rbx
    abd6:	48 89 c7             	mov    rdi,rax
    abd9:	e8 32 82 ff ff       	call   2e10 <fputs_unlocked@plt>
    abde:	48 8b 1d e3 f5 20 00 	mov    rbx,QWORD PTR [rip+0x20f5e3]        # 21a1c8 <stdout@@GLIBC_2.2.5>
    abe5:	48 8d 35 ac a0 00 00 	lea    rsi,[rip+0xa0ac]        # 14c98 <short_options+0xdc8>
    abec:	ba 05 00 00 00       	mov    edx,0x5
    abf1:	31 ff                	xor    edi,edi
    abf3:	e8 78 80 ff ff       	call   2c70 <dcgettext@plt>
    abf8:	48 89 de             	mov    rsi,rbx
    abfb:	48 89 c7             	mov    rdi,rax
    abfe:	e8 0d 82 ff ff       	call   2e10 <fputs_unlocked@plt>
    ac03:	48 8b 1d be f5 20 00 	mov    rbx,QWORD PTR [rip+0x20f5be]        # 21a1c8 <stdout@@GLIBC_2.2.5>
    ac0a:	48 8d 35 bf a0 00 00 	lea    rsi,[rip+0xa0bf]        # 14cd0 <short_options+0xe00>
    ac11:	ba 05 00 00 00       	mov    edx,0x5
    ac16:	31 ff                	xor    edi,edi
    ac18:	e8 53 80 ff ff       	call   2c70 <dcgettext@plt>
    ac1d:	48 89 de             	mov    rsi,rbx
    ac20:	48 89 c7             	mov    rdi,rax
    ac23:	e8 e8 81 ff ff       	call   2e10 <fputs_unlocked@plt>
    ac28:	48 8b 1d 99 f5 20 00 	mov    rbx,QWORD PTR [rip+0x20f599]        # 21a1c8 <stdout@@GLIBC_2.2.5>
    ac2f:	48 8d 35 fa a2 00 00 	lea    rsi,[rip+0xa2fa]        # 14f30 <short_options+0x1060>
    ac36:	ba 05 00 00 00       	mov    edx,0x5
    ac3b:	31 ff                	xor    edi,edi
    ac3d:	e8 2e 80 ff ff       	call   2c70 <dcgettext@plt>
    ac42:	48 89 de             	mov    rsi,rbx
    ac45:	48 89 c7             	mov    rdi,rax
    ac48:	48 8d 1d f0 a9 00 00 	lea    rbx,[rip+0xa9f0]        # 1563f <short_options+0x176f>
    ac4f:	e8 bc 81 ff ff       	call   2e10 <fputs_unlocked@plt>
    ac54:	48 8d 05 c7 a8 00 00 	lea    rax,[rip+0xa8c7]        # 15522 <short_options+0x1652>
    ac5b:	48 8d 0d 01 a9 00 00 	lea    rcx,[rip+0xa901]        # 15563 <short_options+0x1693>
    ac62:	48 c7 44 24 60 00 00 	mov    QWORD PTR [rsp+0x60],0x0
    ac69:	00 00 
    ac6b:	48 c7 44 24 68 00 00 	mov    QWORD PTR [rsp+0x68],0x0
    ac72:	00 00 
    ac74:	48 89 e2             	mov    rdx,rsp
    ac77:	48 89 04 24          	mov    QWORD PTR [rsp],rax
    ac7b:	48 8d 05 a2 a8 00 00 	lea    rax,[rip+0xa8a2]        # 15524 <short_options+0x1654>
    ac82:	48 89 4c 24 30       	mov    QWORD PTR [rsp+0x30],rcx
    ac87:	48 8d 0d df a8 00 00 	lea    rcx,[rip+0xa8df]        # 1556d <short_options+0x169d>
    ac8e:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    ac93:	48 8d 05 02 a9 00 00 	lea    rax,[rip+0xa902]        # 1559c <short_options+0x16cc>
    ac9a:	48 89 4c 24 40       	mov    QWORD PTR [rsp+0x40],rcx
    ac9f:	48 8d 0d d1 a8 00 00 	lea    rcx,[rip+0xa8d1]        # 15577 <short_options+0x16a7>
    aca6:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
    acab:	48 8d 05 82 a8 00 00 	lea    rax,[rip+0xa882]        # 15534 <short_options+0x1664>
    acb2:	48 89 4c 24 50       	mov    QWORD PTR [rsp+0x50],rcx
    acb7:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
    acbc:	48 8d 05 87 a8 00 00 	lea    rax,[rip+0xa887]        # 1554a <short_options+0x167a>
    acc3:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
    acc8:	48 8d 05 85 a8 00 00 	lea    rax,[rip+0xa885]        # 15554 <short_options+0x1684>
    accf:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
    acd4:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
    acd9:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
    acde:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
    ace3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    ace8:	48 83 c2 10          	add    rdx,0x10
    acec:	48 8b 3a             	mov    rdi,QWORD PTR [rdx]
    acef:	48 85 ff             	test   rdi,rdi
    acf2:	74 13                	je     ad07 <usage+0x447>
    acf4:	b9 05 00 00 00       	mov    ecx,0x5
    acf9:	48 89 de             	mov    rsi,rbx
    acfc:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    acfe:	0f 97 c0             	seta   al
    ad01:	1c 00                	sbb    al,0x0
    ad03:	84 c0                	test   al,al
    ad05:	75 e1                	jne    ace8 <usage+0x428>
    ad07:	4c 8b 62 08          	mov    r12,QWORD PTR [rdx+0x8]
    ad0b:	31 ff                	xor    edi,edi
    ad0d:	ba 05 00 00 00       	mov    edx,0x5
    ad12:	48 8d 35 68 a8 00 00 	lea    rsi,[rip+0xa868]        # 15581 <short_options+0x16b1>
    ad19:	4d 85 e4             	test   r12,r12
    ad1c:	0f 84 c1 00 00 00    	je     ade3 <usage+0x523>
    ad22:	e8 49 7f ff ff       	call   2c70 <dcgettext@plt>
    ad27:	48 8d 0d ea a2 00 00 	lea    rcx,[rip+0xa2ea]        # 15018 <short_options+0x1148>
    ad2e:	48 8d 15 63 a8 00 00 	lea    rdx,[rip+0xa863]        # 15598 <short_options+0x16c8>
    ad35:	48 89 c6             	mov    rsi,rax
    ad38:	bf 01 00 00 00       	mov    edi,0x1
    ad3d:	31 c0                	xor    eax,eax
    ad3f:	e8 5c 82 ff ff       	call   2fa0 <__printf_chk@plt>
    ad44:	31 f6                	xor    esi,esi
    ad46:	bf 05 00 00 00       	mov    edi,0x5
    ad4b:	e8 40 82 ff ff       	call   2f90 <setlocale@plt>
    ad50:	48 85 c0             	test   rax,rax
    ad53:	74 1c                	je     ad71 <usage+0x4b1>
    ad55:	48 8d 35 4a a8 00 00 	lea    rsi,[rip+0xa84a]        # 155a6 <short_options+0x16d6>
    ad5c:	ba 03 00 00 00       	mov    edx,0x3
    ad61:	48 89 c7             	mov    rdi,rax
    ad64:	e8 c7 7d ff ff       	call   2b30 <strncmp@plt>
    ad69:	85 c0                	test   eax,eax
    ad6b:	0f 85 07 01 00 00    	jne    ae78 <usage+0x5b8>
    ad71:	48 8d 35 32 a8 00 00 	lea    rsi,[rip+0xa832]        # 155aa <short_options+0x16da>
    ad78:	31 ff                	xor    edi,edi
    ad7a:	ba 05 00 00 00       	mov    edx,0x5
    ad7f:	e8 ec 7e ff ff       	call   2c70 <dcgettext@plt>
    ad84:	48 8d 0d b4 a8 00 00 	lea    rcx,[rip+0xa8b4]        # 1563f <short_options+0x176f>
    ad8b:	48 8d 15 86 a2 00 00 	lea    rdx,[rip+0xa286]        # 15018 <short_options+0x1148>
    ad92:	48 89 c6             	mov    rsi,rax
    ad95:	bf 01 00 00 00       	mov    edi,0x1
    ad9a:	31 c0                	xor    eax,eax
    ad9c:	e8 ff 81 ff ff       	call   2fa0 <__printf_chk@plt>
    ada1:	49 39 dc             	cmp    r12,rbx
    ada4:	48 8d 0d 93 a7 00 00 	lea    rcx,[rip+0xa793]        # 1553e <short_options+0x166e>
    adab:	48 8d 1d 59 a7 00 00 	lea    rbx,[rip+0xa759]        # 1550b <short_options+0x163b>
    adb2:	48 0f 44 d9          	cmove  rbx,rcx
    adb6:	48 8d 35 cb a2 00 00 	lea    rsi,[rip+0xa2cb]        # 15088 <short_options+0x11b8>
    adbd:	31 ff                	xor    edi,edi
    adbf:	ba 05 00 00 00       	mov    edx,0x5
    adc4:	e8 a7 7e ff ff       	call   2c70 <dcgettext@plt>
    adc9:	48 89 d9             	mov    rcx,rbx
    adcc:	48 89 c6             	mov    rsi,rax
    adcf:	4c 89 e2             	mov    rdx,r12
    add2:	bf 01 00 00 00       	mov    edi,0x1
    add7:	31 c0                	xor    eax,eax
    add9:	e8 c2 81 ff ff       	call   2fa0 <__printf_chk@plt>
    adde:	e9 33 fb ff ff       	jmp    a916 <usage+0x56>
    ade3:	e8 88 7e ff ff       	call   2c70 <dcgettext@plt>
    ade8:	48 8d 0d 29 a2 00 00 	lea    rcx,[rip+0xa229]        # 15018 <short_options+0x1148>
    adef:	48 8d 15 a2 a7 00 00 	lea    rdx,[rip+0xa7a2]        # 15598 <short_options+0x16c8>
    adf6:	48 89 c6             	mov    rsi,rax
    adf9:	bf 01 00 00 00       	mov    edi,0x1
    adfe:	31 c0                	xor    eax,eax
    ae00:	e8 9b 81 ff ff       	call   2fa0 <__printf_chk@plt>
    ae05:	31 f6                	xor    esi,esi
    ae07:	bf 05 00 00 00       	mov    edi,0x5
    ae0c:	e8 7f 81 ff ff       	call   2f90 <setlocale@plt>
    ae11:	48 85 c0             	test   rax,rax
    ae14:	74 18                	je     ae2e <usage+0x56e>
    ae16:	48 8d 35 89 a7 00 00 	lea    rsi,[rip+0xa789]        # 155a6 <short_options+0x16d6>
    ae1d:	ba 03 00 00 00       	mov    edx,0x3
    ae22:	48 89 c7             	mov    rdi,rax
    ae25:	e8 06 7d ff ff       	call   2b30 <strncmp@plt>
    ae2a:	85 c0                	test   eax,eax
    ae2c:	75 43                	jne    ae71 <usage+0x5b1>
    ae2e:	48 8d 35 75 a7 00 00 	lea    rsi,[rip+0xa775]        # 155aa <short_options+0x16da>
    ae35:	ba 05 00 00 00       	mov    edx,0x5
    ae3a:	31 ff                	xor    edi,edi
    ae3c:	4c 8d 25 fc a7 00 00 	lea    r12,[rip+0xa7fc]        # 1563f <short_options+0x176f>
    ae43:	48 8d 1d f4 a6 00 00 	lea    rbx,[rip+0xa6f4]        # 1553e <short_options+0x166e>
    ae4a:	e8 21 7e ff ff       	call   2c70 <dcgettext@plt>
    ae4f:	48 8d 0d e9 a7 00 00 	lea    rcx,[rip+0xa7e9]        # 1563f <short_options+0x176f>
    ae56:	48 8d 15 bb a1 00 00 	lea    rdx,[rip+0xa1bb]        # 15018 <short_options+0x1148>
    ae5d:	48 89 c6             	mov    rsi,rax
    ae60:	bf 01 00 00 00       	mov    edi,0x1
    ae65:	31 c0                	xor    eax,eax
    ae67:	e8 34 81 ff ff       	call   2fa0 <__printf_chk@plt>
    ae6c:	e9 45 ff ff ff       	jmp    adb6 <usage+0x4f6>
    ae71:	4c 8d 25 c7 a7 00 00 	lea    r12,[rip+0xa7c7]        # 1563f <short_options+0x176f>
    ae78:	4c 8b 2d 49 f3 20 00 	mov    r13,QWORD PTR [rip+0x20f349]        # 21a1c8 <stdout@@GLIBC_2.2.5>
    ae7f:	48 8d 35 ba a1 00 00 	lea    rsi,[rip+0xa1ba]        # 15040 <short_options+0x1170>
    ae86:	31 ff                	xor    edi,edi
    ae88:	ba 05 00 00 00       	mov    edx,0x5
    ae8d:	e8 de 7d ff ff       	call   2c70 <dcgettext@plt>
    ae92:	4c 89 ee             	mov    rsi,r13
    ae95:	48 89 c7             	mov    rdi,rax
    ae98:	e8 73 7f ff ff       	call   2e10 <fputs_unlocked@plt>
    ae9d:	e9 cf fe ff ff       	jmp    ad71 <usage+0x4b1>
    aea2:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    aea9:	00 00 00 
    aeac:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000aeb0 <__argmatch_die>:
    aeb0:	bf 01 00 00 00       	mov    edi,0x1
    aeb5:	e9 06 fa ff ff       	jmp    a8c0 <usage>
    aeba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

000000000000aec0 <argmatch>:
    aec0:	41 57                	push   r15
    aec2:	41 56                	push   r14
    aec4:	49 89 f7             	mov    r15,rsi
    aec7:	41 55                	push   r13
    aec9:	41 54                	push   r12
    aecb:	49 89 cd             	mov    r13,rcx
    aece:	55                   	push   rbp
    aecf:	53                   	push   rbx
    aed0:	48 89 d5             	mov    rbp,rdx
    aed3:	48 83 ec 28          	sub    rsp,0x28
    aed7:	48 89 7c 24 08       	mov    QWORD PTR [rsp+0x8],rdi
    aedc:	48 89 54 24 18       	mov    QWORD PTR [rsp+0x18],rdx
    aee1:	e8 aa 7d ff ff       	call   2c90 <strlen@plt>
    aee6:	4d 8b 37             	mov    r14,QWORD PTR [r15]
    aee9:	48 c7 04 24 ff ff ff 	mov    QWORD PTR [rsp],0xffffffffffffffff
    aef0:	ff 
    aef1:	4d 85 f6             	test   r14,r14
    aef4:	0f 84 b3 00 00 00    	je     afad <argmatch+0xed>
    aefa:	49 89 c4             	mov    r12,rax
    aefd:	c6 44 24 17 00       	mov    BYTE PTR [rsp+0x17],0x0
    af02:	31 db                	xor    ebx,ebx
    af04:	eb 51                	jmp    af57 <argmatch+0x97>
    af06:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    af0d:	00 00 00 
    af10:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
    af15:	48 85 c0             	test   rax,rax
    af18:	0f 84 a2 00 00 00    	je     afc0 <argmatch+0x100>
    af1e:	48 8b 3c 24          	mov    rdi,QWORD PTR [rsp]
    af22:	4c 89 ea             	mov    rdx,r13
    af25:	48 89 ee             	mov    rsi,rbp
    af28:	49 0f af fd          	imul   rdi,r13
    af2c:	48 01 c7             	add    rdi,rax
    af2f:	e8 bc 7e ff ff       	call   2df0 <memcmp@plt>
    af34:	85 c0                	test   eax,eax
    af36:	0f b6 44 24 17       	movzx  eax,BYTE PTR [rsp+0x17]
    af3b:	b9 01 00 00 00       	mov    ecx,0x1
    af40:	0f 45 c1             	cmovne eax,ecx
    af43:	88 44 24 17          	mov    BYTE PTR [rsp+0x17],al
    af47:	48 83 c3 01          	add    rbx,0x1
    af4b:	4c 01 ed             	add    rbp,r13
    af4e:	4d 8b 34 df          	mov    r14,QWORD PTR [r15+rbx*8]
    af52:	4d 85 f6             	test   r14,r14
    af55:	74 41                	je     af98 <argmatch+0xd8>
    af57:	48 8b 74 24 08       	mov    rsi,QWORD PTR [rsp+0x8]
    af5c:	4c 89 e2             	mov    rdx,r12
    af5f:	4c 89 f7             	mov    rdi,r14
    af62:	e8 c9 7b ff ff       	call   2b30 <strncmp@plt>
    af67:	85 c0                	test   eax,eax
    af69:	75 dc                	jne    af47 <argmatch+0x87>
    af6b:	4c 89 f7             	mov    rdi,r14
    af6e:	e8 1d 7d ff ff       	call   2c90 <strlen@plt>
    af73:	4c 39 e0             	cmp    rax,r12
    af76:	74 58                	je     afd0 <argmatch+0x110>
    af78:	48 83 3c 24 ff       	cmp    QWORD PTR [rsp],0xffffffffffffffff
    af7d:	75 91                	jne    af10 <argmatch+0x50>
    af7f:	48 89 1c 24          	mov    QWORD PTR [rsp],rbx
    af83:	48 83 c3 01          	add    rbx,0x1
    af87:	4c 01 ed             	add    rbp,r13
    af8a:	4d 8b 34 df          	mov    r14,QWORD PTR [r15+rbx*8]
    af8e:	4d 85 f6             	test   r14,r14
    af91:	75 c4                	jne    af57 <argmatch+0x97>
    af93:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    af98:	80 7c 24 17 00       	cmp    BYTE PTR [rsp+0x17],0x0
    af9d:	48 c7 c0 fe ff ff ff 	mov    rax,0xfffffffffffffffe
    afa4:	48 0f 44 04 24       	cmove  rax,QWORD PTR [rsp]
    afa9:	48 89 04 24          	mov    QWORD PTR [rsp],rax
    afad:	48 8b 04 24          	mov    rax,QWORD PTR [rsp]
    afb1:	48 83 c4 28          	add    rsp,0x28
    afb5:	5b                   	pop    rbx
    afb6:	5d                   	pop    rbp
    afb7:	41 5c                	pop    r12
    afb9:	41 5d                	pop    r13
    afbb:	41 5e                	pop    r14
    afbd:	41 5f                	pop    r15
    afbf:	c3                   	ret    
    afc0:	c6 44 24 17 01       	mov    BYTE PTR [rsp+0x17],0x1
    afc5:	eb 80                	jmp    af47 <argmatch+0x87>
    afc7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    afce:	00 00 
    afd0:	48 89 1c 24          	mov    QWORD PTR [rsp],rbx
    afd4:	eb d7                	jmp    afad <argmatch+0xed>
    afd6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    afdd:	00 00 00 

000000000000afe0 <argmatch_invalid>:
    afe0:	48 83 fa ff          	cmp    rdx,0xffffffffffffffff
    afe4:	41 54                	push   r12
    afe6:	ba 05 00 00 00       	mov    edx,0x5
    afeb:	55                   	push   rbp
    afec:	49 89 f4             	mov    r12,rsi
    afef:	53                   	push   rbx
    aff0:	48 89 fd             	mov    rbp,rdi
    aff3:	74 4b                	je     b040 <argmatch_invalid+0x60>
    aff5:	48 8d 35 1c aa 00 00 	lea    rsi,[rip+0xaa1c]        # 15a18 <short_options+0x1b48>
    affc:	31 ff                	xor    edi,edi
    affe:	e8 6d 7c ff ff       	call   2c70 <dcgettext@plt>
    b003:	48 89 c3             	mov    rbx,rax
    b006:	48 89 ee             	mov    rsi,rbp
    b009:	bf 01 00 00 00       	mov    edi,0x1
    b00e:	e8 5d 53 00 00       	call   10370 <quote_n>
    b013:	4c 89 e2             	mov    rdx,r12
    b016:	48 89 c5             	mov    rbp,rax
    b019:	be 08 00 00 00       	mov    esi,0x8
    b01e:	31 ff                	xor    edi,edi
    b020:	e8 7b 4f 00 00       	call   ffa0 <quotearg_n_style>
    b025:	49 89 e8             	mov    r8,rbp
    b028:	48 89 da             	mov    rdx,rbx
    b02b:	48 89 c1             	mov    rcx,rax
    b02e:	5b                   	pop    rbx
    b02f:	5d                   	pop    rbp
    b030:	41 5c                	pop    r12
    b032:	31 f6                	xor    esi,esi
    b034:	31 ff                	xor    edi,edi
    b036:	31 c0                	xor    eax,eax
    b038:	e9 a3 7f ff ff       	jmp    2fe0 <error@plt>
    b03d:	0f 1f 00             	nop    DWORD PTR [rax]
    b040:	48 8d 35 b6 a9 00 00 	lea    rsi,[rip+0xa9b6]        # 159fd <short_options+0x1b2d>
    b047:	31 ff                	xor    edi,edi
    b049:	e8 22 7c ff ff       	call   2c70 <dcgettext@plt>
    b04e:	48 89 c3             	mov    rbx,rax
    b051:	eb b3                	jmp    b006 <argmatch_invalid+0x26>
    b053:	0f 1f 00             	nop    DWORD PTR [rax]
    b056:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    b05d:	00 00 00 

000000000000b060 <argmatch_valid>:
    b060:	41 57                	push   r15
    b062:	41 56                	push   r14
    b064:	49 89 fe             	mov    r14,rdi
    b067:	41 55                	push   r13
    b069:	41 54                	push   r12
    b06b:	31 ff                	xor    edi,edi
    b06d:	55                   	push   rbp
    b06e:	53                   	push   rbx
    b06f:	48 89 f5             	mov    rbp,rsi
    b072:	48 8d 35 bc a9 00 00 	lea    rsi,[rip+0xa9bc]        # 15a35 <short_options+0x1b65>
    b079:	49 89 d4             	mov    r12,rdx
    b07c:	ba 05 00 00 00       	mov    edx,0x5
    b081:	48 83 ec 08          	sub    rsp,0x8
    b085:	48 8b 1d 74 f1 20 00 	mov    rbx,QWORD PTR [rip+0x20f174]        # 21a200 <stderr@@GLIBC_2.2.5>
    b08c:	e8 df 7b ff ff       	call   2c70 <dcgettext@plt>
    b091:	48 89 c7             	mov    rdi,rax
    b094:	48 89 de             	mov    rsi,rbx
    b097:	e8 74 7d ff ff       	call   2e10 <fputs_unlocked@plt>
    b09c:	4d 8b 3e             	mov    r15,QWORD PTR [r14]
    b09f:	4d 85 ff             	test   r15,r15
    b0a2:	0f 84 90 00 00 00    	je     b138 <argmatch_valid+0xd8>
    b0a8:	45 31 ed             	xor    r13d,r13d
    b0ab:	31 db                	xor    ebx,ebx
    b0ad:	eb 39                	jmp    b0e8 <argmatch_valid+0x88>
    b0af:	90                   	nop
    b0b0:	4c 89 ff             	mov    rdi,r15
    b0b3:	48 83 c3 01          	add    rbx,0x1
    b0b7:	49 89 ed             	mov    r13,rbp
    b0ba:	e8 d1 52 00 00       	call   10390 <quote>
    b0bf:	48 8b 3d 3a f1 20 00 	mov    rdi,QWORD PTR [rip+0x20f13a]        # 21a200 <stderr@@GLIBC_2.2.5>
    b0c6:	48 8d 15 7d a9 00 00 	lea    rdx,[rip+0xa97d]        # 15a4a <short_options+0x1b7a>
    b0cd:	48 89 c1             	mov    rcx,rax
    b0d0:	be 01 00 00 00       	mov    esi,0x1
    b0d5:	31 c0                	xor    eax,eax
    b0d7:	4c 01 e5             	add    rbp,r12
    b0da:	e8 21 80 ff ff       	call   3100 <__fprintf_chk@plt>
    b0df:	4d 8b 3c de          	mov    r15,QWORD PTR [r14+rbx*8]
    b0e3:	4d 85 ff             	test   r15,r15
    b0e6:	74 50                	je     b138 <argmatch_valid+0xd8>
    b0e8:	48 85 db             	test   rbx,rbx
    b0eb:	74 c3                	je     b0b0 <argmatch_valid+0x50>
    b0ed:	4c 89 e2             	mov    rdx,r12
    b0f0:	48 89 ee             	mov    rsi,rbp
    b0f3:	4c 89 ef             	mov    rdi,r13
    b0f6:	e8 f5 7c ff ff       	call   2df0 <memcmp@plt>
    b0fb:	85 c0                	test   eax,eax
    b0fd:	75 b1                	jne    b0b0 <argmatch_valid+0x50>
    b0ff:	4c 89 ff             	mov    rdi,r15
    b102:	48 83 c3 01          	add    rbx,0x1
    b106:	4c 01 e5             	add    rbp,r12
    b109:	e8 82 52 00 00       	call   10390 <quote>
    b10e:	48 8b 3d eb f0 20 00 	mov    rdi,QWORD PTR [rip+0x20f0eb]        # 21a200 <stderr@@GLIBC_2.2.5>
    b115:	48 8d 15 36 a9 00 00 	lea    rdx,[rip+0xa936]        # 15a52 <short_options+0x1b82>
    b11c:	48 89 c1             	mov    rcx,rax
    b11f:	be 01 00 00 00       	mov    esi,0x1
    b124:	31 c0                	xor    eax,eax
    b126:	e8 d5 7f ff ff       	call   3100 <__fprintf_chk@plt>
    b12b:	4d 8b 3c de          	mov    r15,QWORD PTR [r14+rbx*8]
    b12f:	4d 85 ff             	test   r15,r15
    b132:	75 b4                	jne    b0e8 <argmatch_valid+0x88>
    b134:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    b138:	48 8b 3d c1 f0 20 00 	mov    rdi,QWORD PTR [rip+0x20f0c1]        # 21a200 <stderr@@GLIBC_2.2.5>
    b13f:	48 8b 47 28          	mov    rax,QWORD PTR [rdi+0x28]
    b143:	48 3b 47 30          	cmp    rax,QWORD PTR [rdi+0x30]
    b147:	73 1f                	jae    b168 <argmatch_valid+0x108>
    b149:	48 8d 50 01          	lea    rdx,[rax+0x1]
    b14d:	48 89 57 28          	mov    QWORD PTR [rdi+0x28],rdx
    b151:	c6 00 0a             	mov    BYTE PTR [rax],0xa
    b154:	48 83 c4 08          	add    rsp,0x8
    b158:	5b                   	pop    rbx
    b159:	5d                   	pop    rbp
    b15a:	41 5c                	pop    r12
    b15c:	41 5d                	pop    r13
    b15e:	41 5e                	pop    r14
    b160:	41 5f                	pop    r15
    b162:	c3                   	ret    
    b163:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    b168:	48 83 c4 08          	add    rsp,0x8
    b16c:	be 0a 00 00 00       	mov    esi,0xa
    b171:	5b                   	pop    rbx
    b172:	5d                   	pop    rbp
    b173:	41 5c                	pop    r12
    b175:	41 5d                	pop    r13
    b177:	41 5e                	pop    r14
    b179:	41 5f                	pop    r15
    b17b:	e9 90 7b ff ff       	jmp    2d10 <__overflow@plt>

000000000000b180 <__xargmatch_internal>:
    b180:	41 57                	push   r15
    b182:	41 56                	push   r14
    b184:	49 89 fe             	mov    r14,rdi
    b187:	41 55                	push   r13
    b189:	41 54                	push   r12
    b18b:	49 89 f4             	mov    r12,rsi
    b18e:	55                   	push   rbp
    b18f:	53                   	push   rbx
    b190:	48 89 cd             	mov    rbp,rcx
    b193:	48 89 d3             	mov    rbx,rdx
    b196:	4c 89 c1             	mov    rcx,r8
    b199:	48 89 ea             	mov    rdx,rbp
    b19c:	48 83 ec 08          	sub    rsp,0x8
    b1a0:	48 89 de             	mov    rsi,rbx
    b1a3:	4c 89 e7             	mov    rdi,r12
    b1a6:	4d 89 c7             	mov    r15,r8
    b1a9:	4d 89 cd             	mov    r13,r9
    b1ac:	e8 0f fd ff ff       	call   aec0 <argmatch>
    b1b1:	48 85 c0             	test   rax,rax
    b1b4:	78 0f                	js     b1c5 <__xargmatch_internal+0x45>
    b1b6:	48 83 c4 08          	add    rsp,0x8
    b1ba:	5b                   	pop    rbx
    b1bb:	5d                   	pop    rbp
    b1bc:	41 5c                	pop    r12
    b1be:	41 5d                	pop    r13
    b1c0:	41 5e                	pop    r14
    b1c2:	41 5f                	pop    r15
    b1c4:	c3                   	ret    
    b1c5:	48 89 c2             	mov    rdx,rax
    b1c8:	4c 89 e6             	mov    rsi,r12
    b1cb:	4c 89 f7             	mov    rdi,r14
    b1ce:	e8 0d fe ff ff       	call   afe0 <argmatch_invalid>
    b1d3:	4c 89 fa             	mov    rdx,r15
    b1d6:	48 89 ee             	mov    rsi,rbp
    b1d9:	48 89 df             	mov    rdi,rbx
    b1dc:	e8 7f fe ff ff       	call   b060 <argmatch_valid>
    b1e1:	41 ff d5             	call   r13
    b1e4:	48 c7 c0 ff ff ff ff 	mov    rax,0xffffffffffffffff
    b1eb:	eb c9                	jmp    b1b6 <__xargmatch_internal+0x36>
    b1ed:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000b1f0 <argmatch_to_argument>:
    b1f0:	41 56                	push   r14
    b1f2:	41 55                	push   r13
    b1f4:	41 54                	push   r12
    b1f6:	55                   	push   rbp
    b1f7:	53                   	push   rbx
    b1f8:	4c 8b 36             	mov    r14,QWORD PTR [rsi]
    b1fb:	4d 85 f6             	test   r14,r14
    b1fe:	74 31                	je     b231 <argmatch_to_argument+0x41>
    b200:	49 89 cc             	mov    r12,rcx
    b203:	49 89 fd             	mov    r13,rdi
    b206:	48 89 d5             	mov    rbp,rdx
    b209:	48 8d 5e 08          	lea    rbx,[rsi+0x8]
    b20d:	eb 10                	jmp    b21f <argmatch_to_argument+0x2f>
    b20f:	90                   	nop
    b210:	4c 8b 33             	mov    r14,QWORD PTR [rbx]
    b213:	4c 01 e5             	add    rbp,r12
    b216:	48 83 c3 08          	add    rbx,0x8
    b21a:	4d 85 f6             	test   r14,r14
    b21d:	74 12                	je     b231 <argmatch_to_argument+0x41>
    b21f:	4c 89 e2             	mov    rdx,r12
    b222:	48 89 ee             	mov    rsi,rbp
    b225:	4c 89 ef             	mov    rdi,r13
    b228:	e8 c3 7b ff ff       	call   2df0 <memcmp@plt>
    b22d:	85 c0                	test   eax,eax
    b22f:	75 df                	jne    b210 <argmatch_to_argument+0x20>
    b231:	5b                   	pop    rbx
    b232:	4c 89 f0             	mov    rax,r14
    b235:	5d                   	pop    rbp
    b236:	41 5c                	pop    r12
    b238:	41 5d                	pop    r13
    b23a:	41 5e                	pop    r14
    b23c:	c3                   	ret    
    b23d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000b240 <close_stdout_set_file_name>:
    b240:	48 89 3d 51 f6 20 00 	mov    QWORD PTR [rip+0x20f651],rdi        # 21a898 <file_name>
    b247:	c3                   	ret    
    b248:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    b24f:	00 

000000000000b250 <close_stdout_set_ignore_EPIPE>:
    b250:	40 88 3d 39 f6 20 00 	mov    BYTE PTR [rip+0x20f639],dil        # 21a890 <ignore_EPIPE>
    b257:	c3                   	ret    
    b258:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    b25f:	00 

000000000000b260 <close_stdout>:
    b260:	55                   	push   rbp
    b261:	53                   	push   rbx
    b262:	48 83 ec 08          	sub    rsp,0x8
    b266:	48 8b 3d 5b ef 20 00 	mov    rdi,QWORD PTR [rip+0x20ef5b]        # 21a1c8 <stdout@@GLIBC_2.2.5>
    b26d:	e8 ee 80 00 00       	call   13360 <close_stream>
    b272:	85 c0                	test   eax,eax
    b274:	74 16                	je     b28c <close_stdout+0x2c>
    b276:	e8 95 78 ff ff       	call   2b10 <__errno_location@plt>
    b27b:	80 3d 0e f6 20 00 00 	cmp    BYTE PTR [rip+0x20f60e],0x0        # 21a890 <ignore_EPIPE>
    b282:	48 89 c3             	mov    rbx,rax
    b285:	74 1c                	je     b2a3 <close_stdout+0x43>
    b287:	83 38 20             	cmp    DWORD PTR [rax],0x20
    b28a:	75 17                	jne    b2a3 <close_stdout+0x43>
    b28c:	48 8b 3d 6d ef 20 00 	mov    rdi,QWORD PTR [rip+0x20ef6d]        # 21a200 <stderr@@GLIBC_2.2.5>
    b293:	e8 c8 80 00 00       	call   13360 <close_stream>
    b298:	85 c0                	test   eax,eax
    b29a:	75 46                	jne    b2e2 <close_stdout+0x82>
    b29c:	48 83 c4 08          	add    rsp,0x8
    b2a0:	5b                   	pop    rbx
    b2a1:	5d                   	pop    rbp
    b2a2:	c3                   	ret    
    b2a3:	48 8d 35 ad a7 00 00 	lea    rsi,[rip+0xa7ad]        # 15a57 <short_options+0x1b87>
    b2aa:	31 ff                	xor    edi,edi
    b2ac:	ba 05 00 00 00       	mov    edx,0x5
    b2b1:	e8 ba 79 ff ff       	call   2c70 <dcgettext@plt>
    b2b6:	48 8b 3d db f5 20 00 	mov    rdi,QWORD PTR [rip+0x20f5db]        # 21a898 <file_name>
    b2bd:	48 89 c5             	mov    rbp,rax
    b2c0:	48 85 ff             	test   rdi,rdi
    b2c3:	74 28                	je     b2ed <close_stdout+0x8d>
    b2c5:	e8 c6 4e 00 00       	call   10190 <quotearg_colon>
    b2ca:	8b 33                	mov    esi,DWORD PTR [rbx]
    b2cc:	48 8d 15 20 a1 00 00 	lea    rdx,[rip+0xa120]        # 153f3 <short_options+0x1523>
    b2d3:	48 89 c1             	mov    rcx,rax
    b2d6:	49 89 e8             	mov    r8,rbp
    b2d9:	31 ff                	xor    edi,edi
    b2db:	31 c0                	xor    eax,eax
    b2dd:	e8 fe 7c ff ff       	call   2fe0 <error@plt>
    b2e2:	8b 3d 48 ee 20 00    	mov    edi,DWORD PTR [rip+0x20ee48]        # 21a130 <exit_failure>
    b2e8:	e8 53 78 ff ff       	call   2b40 <_exit@plt>
    b2ed:	8b 33                	mov    esi,DWORD PTR [rbx]
    b2ef:	48 8d 15 5e a7 00 00 	lea    rdx,[rip+0xa75e]        # 15a54 <short_options+0x1b84>
    b2f6:	48 89 c1             	mov    rcx,rax
    b2f9:	31 ff                	xor    edi,edi
    b2fb:	31 c0                	xor    eax,eax
    b2fd:	e8 de 7c ff ff       	call   2fe0 <error@plt>
    b302:	eb de                	jmp    b2e2 <close_stdout+0x82>
    b304:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    b30b:	00 00 00 
    b30e:	66 90                	xchg   ax,ax

000000000000b310 <md5_init_ctx>:
    b310:	48 b8 01 23 45 67 89 	movabs rax,0xefcdab8967452301
    b317:	ab cd ef 
    b31a:	48 c7 47 10 00 00 00 	mov    QWORD PTR [rdi+0x10],0x0
    b321:	00 
    b322:	c7 47 18 00 00 00 00 	mov    DWORD PTR [rdi+0x18],0x0
    b329:	48 89 07             	mov    QWORD PTR [rdi],rax
    b32c:	48 b8 fe dc ba 98 76 	movabs rax,0x1032547698badcfe
    b333:	54 32 10 
    b336:	48 89 47 08          	mov    QWORD PTR [rdi+0x8],rax
    b33a:	c3                   	ret    
    b33b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000b340 <md5_read_ctx>:
    b340:	8b 17                	mov    edx,DWORD PTR [rdi]
    b342:	48 89 f0             	mov    rax,rsi
    b345:	89 16                	mov    DWORD PTR [rsi],edx
    b347:	8b 57 04             	mov    edx,DWORD PTR [rdi+0x4]
    b34a:	89 56 04             	mov    DWORD PTR [rsi+0x4],edx
    b34d:	8b 57 08             	mov    edx,DWORD PTR [rdi+0x8]
    b350:	89 56 08             	mov    DWORD PTR [rsi+0x8],edx
    b353:	8b 57 0c             	mov    edx,DWORD PTR [rdi+0xc]
    b356:	89 56 0c             	mov    DWORD PTR [rsi+0xc],edx
    b359:	c3                   	ret    
    b35a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

000000000000b360 <md5_process_block>:
    b360:	48 89 f0             	mov    rax,rsi
    b363:	41 57                	push   r15
    b365:	41 56                	push   r14
    b367:	48 83 e0 fc          	and    rax,0xfffffffffffffffc
    b36b:	41 55                	push   r13
    b36d:	41 54                	push   r12
    b36f:	55                   	push   rbp
    b370:	53                   	push   rbx
    b371:	48 89 fb             	mov    rbx,rdi
    b374:	48 8d 0c 03          	lea    rcx,[rbx+rax*1]
    b378:	8b 02                	mov    eax,DWORD PTR [rdx]
    b37a:	48 89 d7             	mov    rdi,rdx
    b37d:	44 8b 5a 04          	mov    r11d,DWORD PTR [rdx+0x4]
    b381:	44 8b 52 08          	mov    r10d,DWORD PTR [rdx+0x8]
    b385:	48 89 54 24 f8       	mov    QWORD PTR [rsp-0x8],rdx
    b38a:	48 89 4c 24 f0       	mov    QWORD PTR [rsp-0x10],rcx
    b38f:	89 44 24 e8          	mov    DWORD PTR [rsp-0x18],eax
    b393:	8b 42 0c             	mov    eax,DWORD PTR [rdx+0xc]
    b396:	89 f2                	mov    edx,esi
    b398:	89 44 24 e0          	mov    DWORD PTR [rsp-0x20],eax
    b39c:	31 c0                	xor    eax,eax
    b39e:	03 57 10             	add    edx,DWORD PTR [rdi+0x10]
    b3a1:	0f 92 c0             	setb   al
    b3a4:	48 c1 ee 20          	shr    rsi,0x20
    b3a8:	03 77 14             	add    esi,DWORD PTR [rdi+0x14]
    b3ab:	89 57 10             	mov    DWORD PTR [rdi+0x10],edx
    b3ae:	01 c6                	add    esi,eax
    b3b0:	48 39 cb             	cmp    rbx,rcx
    b3b3:	89 77 14             	mov    DWORD PTR [rdi+0x14],esi
    b3b6:	0f 83 ee 06 00 00    	jae    baaa <md5_process_block+0x74a>
    b3bc:	45 89 d7             	mov    r15d,r10d
    b3bf:	90                   	nop
    b3c0:	44 8b 33             	mov    r14d,DWORD PTR [rbx]
    b3c3:	8b 7c 24 e0          	mov    edi,DWORD PTR [rsp-0x20]
    b3c7:	8b 44 24 e8          	mov    eax,DWORD PTR [rsp-0x18]
    b3cb:	8b 73 04             	mov    esi,DWORD PTR [rbx+0x4]
    b3ce:	44 8b 43 0c          	mov    r8d,DWORD PTR [rbx+0xc]
    b3d2:	44 8b 53 14          	mov    r10d,DWORD PTR [rbx+0x14]
    b3d6:	8b 6b 18             	mov    ebp,DWORD PTR [rbx+0x18]
    b3d9:	44 8b 6b 1c          	mov    r13d,DWORD PTR [rbx+0x1c]
    b3dd:	41 8d 94 06 78 a4 6a 	lea    edx,[r14+rax*1-0x28955b88]
    b3e4:	d7 
    b3e5:	89 f8                	mov    eax,edi
    b3e7:	8d 8c 3e 56 b7 c7 e8 	lea    ecx,[rsi+rdi*1-0x173848aa]
    b3ee:	44 31 f8             	xor    eax,r15d
    b3f1:	89 74 24 bc          	mov    DWORD PTR [rsp-0x44],esi
    b3f5:	44 89 54 24 cc       	mov    DWORD PTR [rsp-0x34],r10d
    b3fa:	44 21 d8             	and    eax,r11d
    b3fd:	44 8b 63 24          	mov    r12d,DWORD PTR [rbx+0x24]
    b401:	44 89 44 24 c4       	mov    DWORD PTR [rsp-0x3c],r8d
    b406:	31 f8                	xor    eax,edi
    b408:	43 8d bc 18 ee ce bd 	lea    edi,[r8+r11*1-0x3e423112]
    b40f:	c1 
    b410:	44 8b 43 2c          	mov    r8d,DWORD PTR [rbx+0x2c]
    b414:	01 d0                	add    eax,edx
    b416:	44 89 da             	mov    edx,r11d
    b419:	c1 c0 07             	rol    eax,0x7
    b41c:	44 31 fa             	xor    edx,r15d
    b41f:	44 89 64 24 d4       	mov    DWORD PTR [rsp-0x2c],r12d
    b424:	44 01 d8             	add    eax,r11d
    b427:	44 89 44 24 dc       	mov    DWORD PTR [rsp-0x24],r8d
    b42c:	21 c2                	and    edx,eax
    b42e:	41 89 c1             	mov    r9d,eax
    b431:	44 31 fa             	xor    edx,r15d
    b434:	45 31 d9             	xor    r9d,r11d
    b437:	01 ca                	add    edx,ecx
    b439:	8b 4b 08             	mov    ecx,DWORD PTR [rbx+0x8]
    b43c:	c1 c2 0c             	rol    edx,0xc
    b43f:	01 c2                	add    edx,eax
    b441:	42 8d b4 39 db 70 20 	lea    esi,[rcx+r15*1+0x242070db]
    b448:	24 
    b449:	89 4c 24 c0          	mov    DWORD PTR [rsp-0x40],ecx
    b44d:	44 89 c9             	mov    ecx,r9d
    b450:	21 d1                	and    ecx,edx
    b452:	41 89 c1             	mov    r9d,eax
    b455:	44 31 d9             	xor    ecx,r11d
    b458:	41 31 d1             	xor    r9d,edx
    b45b:	01 f1                	add    ecx,esi
    b45d:	44 89 ce             	mov    esi,r9d
    b460:	44 8b 4b 10          	mov    r9d,DWORD PTR [rbx+0x10]
    b464:	c1 c9 0f             	ror    ecx,0xf
    b467:	01 d1                	add    ecx,edx
    b469:	21 ce                	and    esi,ecx
    b46b:	44 89 4c 24 c8       	mov    DWORD PTR [rsp-0x38],r9d
    b470:	31 c6                	xor    esi,eax
    b472:	01 fe                	add    esi,edi
    b474:	41 8d bc 01 af 0f 7c 	lea    edi,[r9+rax*1-0xa83f051]
    b47b:	f5 
    b47c:	89 d0                	mov    eax,edx
    b47e:	c1 ce 0a             	ror    esi,0xa
    b481:	31 c8                	xor    eax,ecx
    b483:	44 8b 4b 3c          	mov    r9d,DWORD PTR [rbx+0x3c]
    b487:	01 ce                	add    esi,ecx
    b489:	21 f0                	and    eax,esi
    b48b:	31 d0                	xor    eax,edx
    b48d:	01 f8                	add    eax,edi
    b48f:	41 8d bc 12 2a c6 87 	lea    edi,[r10+rdx*1+0x4787c62a]
    b496:	47 
    b497:	89 ca                	mov    edx,ecx
    b499:	c1 c0 07             	rol    eax,0x7
    b49c:	31 f2                	xor    edx,esi
    b49e:	41 89 ea             	mov    r10d,ebp
    b4a1:	01 f0                	add    eax,esi
    b4a3:	44 89 54 24 e4       	mov    DWORD PTR [rsp-0x1c],r10d
    b4a8:	21 c2                	and    edx,eax
    b4aa:	31 ca                	xor    edx,ecx
    b4ac:	01 fa                	add    edx,edi
    b4ae:	8d bc 0d 13 46 30 a8 	lea    edi,[rbp+rcx*1-0x57cfb9ed]
    b4b5:	89 f5                	mov    ebp,esi
    b4b7:	31 c5                	xor    ebp,eax
    b4b9:	c1 c2 0c             	rol    edx,0xc
    b4bc:	01 c2                	add    edx,eax
    b4be:	89 e9                	mov    ecx,ebp
    b4c0:	89 c5                	mov    ebp,eax
    b4c2:	21 d1                	and    ecx,edx
    b4c4:	31 d5                	xor    ebp,edx
    b4c6:	31 f1                	xor    ecx,esi
    b4c8:	01 f9                	add    ecx,edi
    b4ca:	41 8d bc 35 01 95 46 	lea    edi,[r13+rsi*1-0x2b96aff]
    b4d1:	fd 
    b4d2:	89 ee                	mov    esi,ebp
    b4d4:	c1 c9 0f             	ror    ecx,0xf
    b4d7:	8b 6b 20             	mov    ebp,DWORD PTR [rbx+0x20]
    b4da:	01 d1                	add    ecx,edx
    b4dc:	21 ce                	and    esi,ecx
    b4de:	31 c6                	xor    esi,eax
    b4e0:	89 6c 24 d0          	mov    DWORD PTR [rsp-0x30],ebp
    b4e4:	01 fe                	add    esi,edi
    b4e6:	8d bc 05 d8 98 80 69 	lea    edi,[rbp+rax*1+0x698098d8]
    b4ed:	89 d0                	mov    eax,edx
    b4ef:	c1 ce 0a             	ror    esi,0xa
    b4f2:	31 c8                	xor    eax,ecx
    b4f4:	8b 6b 30             	mov    ebp,DWORD PTR [rbx+0x30]
    b4f7:	01 ce                	add    esi,ecx
    b4f9:	21 f0                	and    eax,esi
    b4fb:	31 d0                	xor    eax,edx
    b4fd:	01 f8                	add    eax,edi
    b4ff:	41 8d bc 14 af f7 44 	lea    edi,[r12+rdx*1-0x74bb0851]
    b506:	8b 
    b507:	89 ca                	mov    edx,ecx
    b509:	c1 c0 07             	rol    eax,0x7
    b50c:	31 f2                	xor    edx,esi
    b50e:	44 8b 63 38          	mov    r12d,DWORD PTR [rbx+0x38]
    b512:	01 f0                	add    eax,esi
    b514:	21 c2                	and    edx,eax
    b516:	31 ca                	xor    edx,ecx
    b518:	01 fa                	add    edx,edi
    b51a:	8b 7b 28             	mov    edi,DWORD PTR [rbx+0x28]
    b51d:	c1 c2 0c             	rol    edx,0xc
    b520:	01 c2                	add    edx,eax
    b522:	89 7c 24 d8          	mov    DWORD PTR [rsp-0x28],edi
    b526:	8d bc 0f b1 5b ff ff 	lea    edi,[rdi+rcx*1-0xa44f]
    b52d:	89 f1                	mov    ecx,esi
    b52f:	31 c1                	xor    ecx,eax
    b531:	21 d1                	and    ecx,edx
    b533:	31 f1                	xor    ecx,esi
    b535:	01 f9                	add    ecx,edi
    b537:	41 8d bc 30 be d7 5c 	lea    edi,[r8+rsi*1-0x76a32842]
    b53e:	89 
    b53f:	89 c6                	mov    esi,eax
    b541:	c1 c9 0f             	ror    ecx,0xf
    b544:	31 d6                	xor    esi,edx
    b546:	44 8b 43 34          	mov    r8d,DWORD PTR [rbx+0x34]
    b54a:	01 d1                	add    ecx,edx
    b54c:	48 83 c3 40          	add    rbx,0x40
    b550:	21 ce                	and    esi,ecx
    b552:	31 c6                	xor    esi,eax
    b554:	01 fe                	add    esi,edi
    b556:	8d bc 05 22 11 90 6b 	lea    edi,[rbp+rax*1+0x6b901122]
    b55d:	89 d0                	mov    eax,edx
    b55f:	c1 ce 0a             	ror    esi,0xa
    b562:	31 c8                	xor    eax,ecx
    b564:	01 ce                	add    esi,ecx
    b566:	21 f0                	and    eax,esi
    b568:	31 d0                	xor    eax,edx
    b56a:	01 f8                	add    eax,edi
    b56c:	41 8d bc 10 93 71 98 	lea    edi,[r8+rdx*1-0x2678e6d]
    b573:	fd 
    b574:	89 ca                	mov    edx,ecx
    b576:	c1 c0 07             	rol    eax,0x7
    b579:	31 f2                	xor    edx,esi
    b57b:	01 f0                	add    eax,esi
    b57d:	21 c2                	and    edx,eax
    b57f:	31 ca                	xor    edx,ecx
    b581:	01 fa                	add    edx,edi
    b583:	41 8d bc 0c 8e 43 79 	lea    edi,[r12+rcx*1-0x5986bc72]
    b58a:	a6 
    b58b:	89 f1                	mov    ecx,esi
    b58d:	c1 c2 0c             	rol    edx,0xc
    b590:	31 c1                	xor    ecx,eax
    b592:	01 c2                	add    edx,eax
    b594:	21 d1                	and    ecx,edx
    b596:	31 f1                	xor    ecx,esi
    b598:	01 f9                	add    ecx,edi
    b59a:	41 8d bc 31 21 08 b4 	lea    edi,[r9+rsi*1+0x49b40821]
    b5a1:	49 
    b5a2:	89 c6                	mov    esi,eax
    b5a4:	c1 c9 0f             	ror    ecx,0xf
    b5a7:	31 d6                	xor    esi,edx
    b5a9:	01 d1                	add    ecx,edx
    b5ab:	21 ce                	and    esi,ecx
    b5ad:	31 c6                	xor    esi,eax
    b5af:	01 fe                	add    esi,edi
    b5b1:	8b 7c 24 bc          	mov    edi,DWORD PTR [rsp-0x44]
    b5b5:	c1 ce 0a             	ror    esi,0xa
    b5b8:	01 ce                	add    esi,ecx
    b5ba:	8d bc 07 62 25 1e f6 	lea    edi,[rdi+rax*1-0x9e1da9e]
    b5c1:	89 c8                	mov    eax,ecx
    b5c3:	31 f0                	xor    eax,esi
    b5c5:	21 d0                	and    eax,edx
    b5c7:	31 c8                	xor    eax,ecx
    b5c9:	01 f8                	add    eax,edi
    b5cb:	41 8d bc 12 40 b3 40 	lea    edi,[r10+rdx*1-0x3fbf4cc0]
    b5d2:	c0 
    b5d3:	89 f2                	mov    edx,esi
    b5d5:	c1 c0 05             	rol    eax,0x5
    b5d8:	01 f0                	add    eax,esi
    b5da:	31 c2                	xor    edx,eax
    b5dc:	21 ca                	and    edx,ecx
    b5de:	31 f2                	xor    edx,esi
    b5e0:	01 fa                	add    edx,edi
    b5e2:	8b 7c 24 dc          	mov    edi,DWORD PTR [rsp-0x24]
    b5e6:	c1 c2 09             	rol    edx,0x9
    b5e9:	01 c2                	add    edx,eax
    b5eb:	8d bc 0f 51 5a 5e 26 	lea    edi,[rdi+rcx*1+0x265e5a51]
    b5f2:	89 c1                	mov    ecx,eax
    b5f4:	31 d1                	xor    ecx,edx
    b5f6:	21 f1                	and    ecx,esi
    b5f8:	31 c1                	xor    ecx,eax
    b5fa:	01 f9                	add    ecx,edi
    b5fc:	41 8d bc 36 aa c7 b6 	lea    edi,[r14+rsi*1-0x16493856]
    b603:	e9 
    b604:	89 d6                	mov    esi,edx
    b606:	c1 c1 0e             	rol    ecx,0xe
    b609:	01 d1                	add    ecx,edx
    b60b:	31 ce                	xor    esi,ecx
    b60d:	21 c6                	and    esi,eax
    b60f:	31 d6                	xor    esi,edx
    b611:	01 fe                	add    esi,edi
    b613:	8b 7c 24 cc          	mov    edi,DWORD PTR [rsp-0x34]
    b617:	c1 ce 0c             	ror    esi,0xc
    b61a:	01 ce                	add    esi,ecx
    b61c:	8d bc 07 5d 10 2f d6 	lea    edi,[rdi+rax*1-0x29d0efa3]
    b623:	89 c8                	mov    eax,ecx
    b625:	31 f0                	xor    eax,esi
    b627:	21 d0                	and    eax,edx
    b629:	31 c8                	xor    eax,ecx
    b62b:	01 f8                	add    eax,edi
    b62d:	8b 7c 24 d8          	mov    edi,DWORD PTR [rsp-0x28]
    b631:	c1 c0 05             	rol    eax,0x5
    b634:	01 f0                	add    eax,esi
    b636:	8d bc 17 53 14 44 02 	lea    edi,[rdi+rdx*1+0x2441453]
    b63d:	89 f2                	mov    edx,esi
    b63f:	31 c2                	xor    edx,eax
    b641:	21 ca                	and    edx,ecx
    b643:	31 f2                	xor    edx,esi
    b645:	01 fa                	add    edx,edi
    b647:	41 8d bc 09 81 e6 a1 	lea    edi,[r9+rcx*1-0x275e197f]
    b64e:	d8 
    b64f:	89 c1                	mov    ecx,eax
    b651:	c1 c2 09             	rol    edx,0x9
    b654:	01 c2                	add    edx,eax
    b656:	31 d1                	xor    ecx,edx
    b658:	21 f1                	and    ecx,esi
    b65a:	31 c1                	xor    ecx,eax
    b65c:	01 f9                	add    ecx,edi
    b65e:	8b 7c 24 c8          	mov    edi,DWORD PTR [rsp-0x38]
    b662:	44 8b 54 24 d4       	mov    r10d,DWORD PTR [rsp-0x2c]
    b667:	c1 c1 0e             	rol    ecx,0xe
    b66a:	01 d1                	add    ecx,edx
    b66c:	8d bc 37 c8 fb d3 e7 	lea    edi,[rdi+rsi*1-0x182c0438]
    b673:	89 d6                	mov    esi,edx
    b675:	31 ce                	xor    esi,ecx
    b677:	21 c6                	and    esi,eax
    b679:	31 d6                	xor    esi,edx
    b67b:	01 fe                	add    esi,edi
    b67d:	41 8d bc 02 e6 cd e1 	lea    edi,[r10+rax*1+0x21e1cde6]
    b684:	21 
    b685:	89 c8                	mov    eax,ecx
    b687:	c1 ce 0c             	ror    esi,0xc
    b68a:	44 8b 54 24 d0       	mov    r10d,DWORD PTR [rsp-0x30]
    b68f:	01 ce                	add    esi,ecx
    b691:	31 f0                	xor    eax,esi
    b693:	21 d0                	and    eax,edx
    b695:	31 c8                	xor    eax,ecx
    b697:	01 f8                	add    eax,edi
    b699:	41 8d bc 14 d6 07 37 	lea    edi,[r12+rdx*1-0x3cc8f82a]
    b6a0:	c3 
    b6a1:	89 f2                	mov    edx,esi
    b6a3:	c1 c0 05             	rol    eax,0x5
    b6a6:	01 f0                	add    eax,esi
    b6a8:	31 c2                	xor    edx,eax
    b6aa:	21 ca                	and    edx,ecx
    b6ac:	31 f2                	xor    edx,esi
    b6ae:	01 fa                	add    edx,edi
    b6b0:	8b 7c 24 c4          	mov    edi,DWORD PTR [rsp-0x3c]
    b6b4:	c1 c2 09             	rol    edx,0x9
    b6b7:	01 c2                	add    edx,eax
    b6b9:	8d bc 0f 87 0d d5 f4 	lea    edi,[rdi+rcx*1-0xb2af279]
    b6c0:	89 c1                	mov    ecx,eax
    b6c2:	31 d1                	xor    ecx,edx
    b6c4:	21 f1                	and    ecx,esi
    b6c6:	41 8d b4 32 ed 14 5a 	lea    esi,[r10+rsi*1+0x455a14ed]
    b6cd:	45 
    b6ce:	41 89 d2             	mov    r10d,edx
    b6d1:	31 c1                	xor    ecx,eax
    b6d3:	01 f9                	add    ecx,edi
    b6d5:	c1 c1 0e             	rol    ecx,0xe
    b6d8:	01 d1                	add    ecx,edx
    b6da:	41 31 ca             	xor    r10d,ecx
    b6dd:	44 89 d7             	mov    edi,r10d
    b6e0:	21 c7                	and    edi,eax
    b6e2:	31 d7                	xor    edi,edx
    b6e4:	01 f7                	add    edi,esi
    b6e6:	41 8d b4 00 05 e9 e3 	lea    esi,[r8+rax*1-0x561c16fb]
    b6ed:	a9 
    b6ee:	89 c8                	mov    eax,ecx
    b6f0:	c1 cf 0c             	ror    edi,0xc
    b6f3:	01 cf                	add    edi,ecx
    b6f5:	31 f8                	xor    eax,edi
    b6f7:	44 8d 94 3d 8a 4c 2a 	lea    r10d,[rbp+rdi*1-0x72d5b376]
    b6fe:	8d 
    b6ff:	21 d0                	and    eax,edx
    b701:	31 c8                	xor    eax,ecx
    b703:	44 89 54 24 ec       	mov    DWORD PTR [rsp-0x14],r10d
    b708:	01 f0                	add    eax,esi
    b70a:	8b 74 24 c0          	mov    esi,DWORD PTR [rsp-0x40]
    b70e:	c1 c0 05             	rol    eax,0x5
    b711:	01 f8                	add    eax,edi
    b713:	8d b4 16 f8 a3 ef fc 	lea    esi,[rsi+rdx*1-0x3105c08]
    b71a:	89 fa                	mov    edx,edi
    b71c:	31 c2                	xor    edx,eax
    b71e:	21 ca                	and    edx,ecx
    b720:	41 8d 8c 0d d9 02 6f 	lea    ecx,[r13+rcx*1+0x676f02d9]
    b727:	67 
    b728:	31 fa                	xor    edx,edi
    b72a:	01 f2                	add    edx,esi
    b72c:	89 c6                	mov    esi,eax
    b72e:	c1 c2 09             	rol    edx,0x9
    b731:	01 c2                	add    edx,eax
    b733:	31 d6                	xor    esi,edx
    b735:	21 fe                	and    esi,edi
    b737:	31 c6                	xor    esi,eax
    b739:	01 ce                	add    esi,ecx
    b73b:	89 d1                	mov    ecx,edx
    b73d:	c1 c6 0e             	rol    esi,0xe
    b740:	01 d6                	add    esi,edx
    b742:	31 f1                	xor    ecx,esi
    b744:	41 89 ca             	mov    r10d,ecx
    b747:	41 21 c2             	and    r10d,eax
    b74a:	44 89 d7             	mov    edi,r10d
    b74d:	44 8b 54 24 cc       	mov    r10d,DWORD PTR [rsp-0x34]
    b752:	31 d7                	xor    edi,edx
    b754:	03 7c 24 ec          	add    edi,DWORD PTR [rsp-0x14]
    b758:	41 8d 84 02 42 39 fa 	lea    eax,[r10+rax*1-0x5c6be]
    b75f:	ff 
    b760:	c1 cf 0c             	ror    edi,0xc
    b763:	01 f7                	add    edi,esi
    b765:	31 f9                	xor    ecx,edi
    b767:	01 c1                	add    ecx,eax
    b769:	8b 44 24 d0          	mov    eax,DWORD PTR [rsp-0x30]
    b76d:	c1 c1 04             	rol    ecx,0x4
    b770:	01 f9                	add    ecx,edi
    b772:	8d 84 10 81 f6 71 87 	lea    eax,[rax+rdx*1-0x788e097f]
    b779:	89 f2                	mov    edx,esi
    b77b:	31 fa                	xor    edx,edi
    b77d:	31 ca                	xor    edx,ecx
    b77f:	01 c2                	add    edx,eax
    b781:	8b 44 24 dc          	mov    eax,DWORD PTR [rsp-0x24]
    b785:	c1 c2 0b             	rol    edx,0xb
    b788:	01 ca                	add    edx,ecx
    b78a:	8d 84 30 22 61 9d 6d 	lea    eax,[rax+rsi*1+0x6d9d6122]
    b791:	89 fe                	mov    esi,edi
    b793:	41 8d bc 3c 0c 38 e5 	lea    edi,[r12+rdi*1-0x21ac7f4]
    b79a:	fd 
    b79b:	31 ce                	xor    esi,ecx
    b79d:	31 d6                	xor    esi,edx
    b79f:	01 c6                	add    esi,eax
    b7a1:	89 c8                	mov    eax,ecx
    b7a3:	c1 c6 10             	rol    esi,0x10
    b7a6:	31 d0                	xor    eax,edx
    b7a8:	01 d6                	add    esi,edx
    b7aa:	31 f0                	xor    eax,esi
    b7ac:	41 89 f2             	mov    r10d,esi
    b7af:	01 f8                	add    eax,edi
    b7b1:	8b 7c 24 bc          	mov    edi,DWORD PTR [rsp-0x44]
    b7b5:	c1 c8 09             	ror    eax,0x9
    b7b8:	01 f0                	add    eax,esi
    b7ba:	8d bc 0f 44 ea be a4 	lea    edi,[rdi+rcx*1-0x5b4115bc]
    b7c1:	89 d1                	mov    ecx,edx
    b7c3:	41 31 c2             	xor    r10d,eax
    b7c6:	31 f1                	xor    ecx,esi
    b7c8:	41 8d b4 35 60 4b bb 	lea    esi,[r13+rsi*1-0x944b4a0]
    b7cf:	f6 
    b7d0:	31 c1                	xor    ecx,eax
    b7d2:	01 f9                	add    ecx,edi
    b7d4:	8b 7c 24 c8          	mov    edi,DWORD PTR [rsp-0x38]
    b7d8:	c1 c1 04             	rol    ecx,0x4
    b7db:	01 c1                	add    ecx,eax
    b7dd:	8d 94 17 a9 cf de 4b 	lea    edx,[rdi+rdx*1+0x4bdecfa9]
    b7e4:	44 89 d7             	mov    edi,r10d
    b7e7:	31 cf                	xor    edi,ecx
    b7e9:	01 d7                	add    edi,edx
    b7eb:	89 c2                	mov    edx,eax
    b7ed:	c1 c7 0b             	rol    edi,0xb
    b7f0:	31 ca                	xor    edx,ecx
    b7f2:	01 cf                	add    edi,ecx
    b7f4:	31 fa                	xor    edx,edi
    b7f6:	01 f2                	add    edx,esi
    b7f8:	8b 74 24 d8          	mov    esi,DWORD PTR [rsp-0x28]
    b7fc:	c1 c2 10             	rol    edx,0x10
    b7ff:	01 fa                	add    edx,edi
    b801:	8d 84 06 70 bc bf be 	lea    eax,[rsi+rax*1-0x41404390]
    b808:	89 ce                	mov    esi,ecx
    b80a:	31 fe                	xor    esi,edi
    b80c:	31 d6                	xor    esi,edx
    b80e:	01 c6                	add    esi,eax
    b810:	41 8d 84 08 c6 7e 9b 	lea    eax,[r8+rcx*1+0x289b7ec6]
    b817:	28 
    b818:	89 f9                	mov    ecx,edi
    b81a:	c1 ce 09             	ror    esi,0x9
    b81d:	31 d1                	xor    ecx,edx
    b81f:	41 8d bc 3e fa 27 a1 	lea    edi,[r14+rdi*1-0x155ed806]
    b826:	ea 
    b827:	01 d6                	add    esi,edx
    b829:	31 f1                	xor    ecx,esi
    b82b:	41 89 f2             	mov    r10d,esi
    b82e:	01 c1                	add    ecx,eax
    b830:	89 d0                	mov    eax,edx
    b832:	c1 c1 04             	rol    ecx,0x4
    b835:	31 f0                	xor    eax,esi
    b837:	01 f1                	add    ecx,esi
    b839:	31 c8                	xor    eax,ecx
    b83b:	41 31 ca             	xor    r10d,ecx
    b83e:	01 f8                	add    eax,edi
    b840:	8b 7c 24 c4          	mov    edi,DWORD PTR [rsp-0x3c]
    b844:	c1 c0 0b             	rol    eax,0xb
    b847:	01 c8                	add    eax,ecx
    b849:	8d 94 17 85 30 ef d4 	lea    edx,[rdi+rdx*1-0x2b10cf7b]
    b850:	44 89 d7             	mov    edi,r10d
    b853:	31 c7                	xor    edi,eax
    b855:	01 d7                	add    edi,edx
    b857:	8b 54 24 e4          	mov    edx,DWORD PTR [rsp-0x1c]
    b85b:	c1 c7 10             	rol    edi,0x10
    b85e:	01 c7                	add    edi,eax
    b860:	8d 94 32 05 1d 88 04 	lea    edx,[rdx+rsi*1+0x4881d05]
    b867:	89 ce                	mov    esi,ecx
    b869:	31 c6                	xor    esi,eax
    b86b:	31 fe                	xor    esi,edi
    b86d:	01 d6                	add    esi,edx
    b86f:	8b 54 24 d4          	mov    edx,DWORD PTR [rsp-0x2c]
    b873:	c1 ce 09             	ror    esi,0x9
    b876:	01 fe                	add    esi,edi
    b878:	8d 8c 0a 39 d0 d4 d9 	lea    ecx,[rdx+rcx*1-0x262b2fc7]
    b87f:	89 c2                	mov    edx,eax
    b881:	8d 84 05 e5 99 db e6 	lea    eax,[rbp+rax*1-0x1924661b]
    b888:	31 fa                	xor    edx,edi
    b88a:	41 89 f2             	mov    r10d,esi
    b88d:	31 f2                	xor    edx,esi
    b88f:	01 ca                	add    edx,ecx
    b891:	89 f9                	mov    ecx,edi
    b893:	c1 c2 04             	rol    edx,0x4
    b896:	01 f2                	add    edx,esi
    b898:	31 f1                	xor    ecx,esi
    b89a:	31 d1                	xor    ecx,edx
    b89c:	41 31 d2             	xor    r10d,edx
    b89f:	01 c1                	add    ecx,eax
    b8a1:	41 8d 84 39 f8 7c a2 	lea    eax,[r9+rdi*1+0x1fa27cf8]
    b8a8:	1f 
    b8a9:	44 89 d7             	mov    edi,r10d
    b8ac:	c1 c1 0b             	rol    ecx,0xb
    b8af:	44 8b 54 24 cc       	mov    r10d,DWORD PTR [rsp-0x34]
    b8b4:	01 d1                	add    ecx,edx
    b8b6:	31 cf                	xor    edi,ecx
    b8b8:	01 c7                	add    edi,eax
    b8ba:	8b 44 24 c0          	mov    eax,DWORD PTR [rsp-0x40]
    b8be:	c1 c7 10             	rol    edi,0x10
    b8c1:	01 cf                	add    edi,ecx
    b8c3:	8d b4 30 65 56 ac c4 	lea    esi,[rax+rsi*1-0x3b53a99b]
    b8ca:	89 d0                	mov    eax,edx
    b8cc:	31 c8                	xor    eax,ecx
    b8ce:	31 f8                	xor    eax,edi
    b8d0:	01 f0                	add    eax,esi
    b8d2:	41 8d b4 16 44 22 29 	lea    esi,[r14+rdx*1-0xbd6ddbc]
    b8d9:	f4 
    b8da:	89 ca                	mov    edx,ecx
    b8dc:	c1 c8 09             	ror    eax,0x9
    b8df:	f7 d2                	not    edx
    b8e1:	44 8b 74 24 bc       	mov    r14d,DWORD PTR [rsp-0x44]
    b8e6:	01 f8                	add    eax,edi
    b8e8:	09 c2                	or     edx,eax
    b8ea:	31 fa                	xor    edx,edi
    b8ec:	01 f2                	add    edx,esi
    b8ee:	41 8d b4 0d 97 ff 2a 	lea    esi,[r13+rcx*1+0x432aff97]
    b8f5:	43 
    b8f6:	41 89 fd             	mov    r13d,edi
    b8f9:	c1 c2 06             	rol    edx,0x6
    b8fc:	41 f7 d5             	not    r13d
    b8ff:	41 8d bc 3c a7 23 94 	lea    edi,[r12+rdi*1-0x546bdc59]
    b906:	ab 
    b907:	01 c2                	add    edx,eax
    b909:	44 89 e9             	mov    ecx,r13d
    b90c:	09 d1                	or     ecx,edx
    b90e:	41 89 d5             	mov    r13d,edx
    b911:	31 c1                	xor    ecx,eax
    b913:	41 f7 d5             	not    r13d
    b916:	01 f1                	add    ecx,esi
    b918:	89 c6                	mov    esi,eax
    b91a:	c1 c1 0a             	rol    ecx,0xa
    b91d:	f7 d6                	not    esi
    b91f:	01 d1                	add    ecx,edx
    b921:	09 ce                	or     esi,ecx
    b923:	41 89 cc             	mov    r12d,ecx
    b926:	31 d6                	xor    esi,edx
    b928:	41 f7 d4             	not    r12d
    b92b:	01 fe                	add    esi,edi
    b92d:	41 8d bc 02 39 a0 93 	lea    edi,[r10+rax*1-0x36c5fc7]
    b934:	fc 
    b935:	44 89 e8             	mov    eax,r13d
    b938:	c1 c6 0f             	rol    esi,0xf
    b93b:	44 8b 54 24 e4       	mov    r10d,DWORD PTR [rsp-0x1c]
    b940:	01 ce                	add    esi,ecx
    b942:	09 f0                	or     eax,esi
    b944:	31 c8                	xor    eax,ecx
    b946:	01 f8                	add    eax,edi
    b948:	8d bc 15 c3 59 5b 65 	lea    edi,[rbp+rdx*1+0x655b59c3]
    b94f:	8b 6c 24 c4          	mov    ebp,DWORD PTR [rsp-0x3c]
    b953:	c1 c8 0b             	ror    eax,0xb
    b956:	44 89 e2             	mov    edx,r12d
    b959:	01 f0                	add    eax,esi
    b95b:	09 c2                	or     edx,eax
    b95d:	31 f2                	xor    edx,esi
    b95f:	01 fa                	add    edx,edi
    b961:	8d bc 0d 92 cc 0c 8f 	lea    edi,[rbp+rcx*1-0x70f3336e]
    b968:	89 f5                	mov    ebp,esi
    b96a:	c1 c2 06             	rol    edx,0x6
    b96d:	f7 d5                	not    ebp
    b96f:	01 c2                	add    edx,eax
    b971:	89 e9                	mov    ecx,ebp
    b973:	09 d1                	or     ecx,edx
    b975:	89 d5                	mov    ebp,edx
    b977:	31 c1                	xor    ecx,eax
    b979:	f7 d5                	not    ebp
    b97b:	01 f9                	add    ecx,edi
    b97d:	8b 7c 24 d8          	mov    edi,DWORD PTR [rsp-0x28]
    b981:	c1 c1 0a             	rol    ecx,0xa
    b984:	01 d1                	add    ecx,edx
    b986:	8d bc 37 7d f4 ef ff 	lea    edi,[rdi+rsi*1-0x100b83]
    b98d:	89 c6                	mov    esi,eax
    b98f:	f7 d6                	not    esi
    b991:	09 ce                	or     esi,ecx
    b993:	31 d6                	xor    esi,edx
    b995:	01 fe                	add    esi,edi
    b997:	41 8d bc 06 d1 5d 84 	lea    edi,[r14+rax*1-0x7a7ba22f]
    b99e:	85 
    b99f:	89 e8                	mov    eax,ebp
    b9a1:	c1 c6 0f             	rol    esi,0xf
    b9a4:	44 8b 74 24 d0       	mov    r14d,DWORD PTR [rsp-0x30]
    b9a9:	89 cd                	mov    ebp,ecx
    b9ab:	01 ce                	add    esi,ecx
    b9ad:	f7 d5                	not    ebp
    b9af:	09 f0                	or     eax,esi
    b9b1:	31 c8                	xor    eax,ecx
    b9b3:	01 f8                	add    eax,edi
    b9b5:	41 8d bc 16 4f 7e a8 	lea    edi,[r14+rdx*1+0x6fa87e4f]
    b9bc:	6f 
    b9bd:	89 ea                	mov    edx,ebp
    b9bf:	c1 c8 0b             	ror    eax,0xb
    b9c2:	89 f5                	mov    ebp,esi
    b9c4:	44 8b 74 24 dc       	mov    r14d,DWORD PTR [rsp-0x24]
    b9c9:	01 f0                	add    eax,esi
    b9cb:	f7 d5                	not    ebp
    b9cd:	09 c2                	or     edx,eax
    b9cf:	31 f2                	xor    edx,esi
    b9d1:	01 fa                	add    edx,edi
    b9d3:	41 8d bc 09 e0 e6 2c 	lea    edi,[r9+rcx*1-0x1d31920]
    b9da:	fe 
    b9db:	89 e9                	mov    ecx,ebp
    b9dd:	c1 c2 06             	rol    edx,0x6
    b9e0:	44 8b 4c 24 c8       	mov    r9d,DWORD PTR [rsp-0x38]
    b9e5:	01 c2                	add    edx,eax
    b9e7:	09 d1                	or     ecx,edx
    b9e9:	31 c1                	xor    ecx,eax
    b9eb:	01 f9                	add    ecx,edi
    b9ed:	41 8d bc 32 14 43 01 	lea    edi,[r10+rsi*1-0x5cfebcec]
    b9f4:	a3 
    b9f5:	89 c6                	mov    esi,eax
    b9f7:	c1 c1 0a             	rol    ecx,0xa
    b9fa:	f7 d6                	not    esi
    b9fc:	41 8d 84 00 a1 11 08 	lea    eax,[r8+rax*1+0x4e0811a1]
    ba03:	4e 
    ba04:	01 d1                	add    ecx,edx
    ba06:	41 89 d0             	mov    r8d,edx
    ba09:	44 8b 54 24 d4       	mov    r10d,DWORD PTR [rsp-0x2c]
    ba0e:	09 ce                	or     esi,ecx
    ba10:	41 f7 d0             	not    r8d
    ba13:	31 d6                	xor    esi,edx
    ba15:	41 8d 94 11 82 7e 53 	lea    edx,[r9+rdx*1-0x8ac817e]
    ba1c:	f7 
    ba1d:	41 89 c9             	mov    r9d,ecx
    ba20:	01 fe                	add    esi,edi
    ba22:	44 89 c7             	mov    edi,r8d
    ba25:	41 f7 d1             	not    r9d
    ba28:	c1 c6 0f             	rol    esi,0xf
    ba2b:	01 ce                	add    esi,ecx
    ba2d:	09 f7                	or     edi,esi
    ba2f:	31 cf                	xor    edi,ecx
    ba31:	41 8d 8c 0e 35 f2 3a 	lea    ecx,[r14+rcx*1-0x42c50dcb]
    ba38:	bd 
    ba39:	01 c7                	add    edi,eax
    ba3b:	44 89 c8             	mov    eax,r9d
    ba3e:	c1 cf 0b             	ror    edi,0xb
    ba41:	01 f7                	add    edi,esi
    ba43:	09 f8                	or     eax,edi
    ba45:	31 f0                	xor    eax,esi
    ba47:	01 d0                	add    eax,edx
    ba49:	89 f2                	mov    edx,esi
    ba4b:	c1 c0 06             	rol    eax,0x6
    ba4e:	f7 d2                	not    edx
    ba50:	01 f8                	add    eax,edi
    ba52:	09 c2                	or     edx,eax
    ba54:	31 fa                	xor    edx,edi
    ba56:	01 ca                	add    edx,ecx
    ba58:	8b 4c 24 c0          	mov    ecx,DWORD PTR [rsp-0x40]
    ba5c:	c1 c2 0a             	rol    edx,0xa
    ba5f:	01 c2                	add    edx,eax
    ba61:	8d b4 31 bb d2 d7 2a 	lea    esi,[rcx+rsi*1+0x2ad7d2bb]
    ba68:	89 f9                	mov    ecx,edi
    ba6a:	41 8d bc 3a 91 d3 86 	lea    edi,[r10+rdi*1-0x14792c6f]
    ba71:	eb 
    ba72:	f7 d1                	not    ecx
    ba74:	09 d1                	or     ecx,edx
    ba76:	31 c1                	xor    ecx,eax
    ba78:	01 f1                	add    ecx,esi
    ba7a:	89 c6                	mov    esi,eax
    ba7c:	c1 c1 0f             	rol    ecx,0xf
    ba7f:	f7 d6                	not    esi
    ba81:	01 d1                	add    ecx,edx
    ba83:	09 ce                	or     esi,ecx
    ba85:	31 d6                	xor    esi,edx
    ba87:	01 fe                	add    esi,edi
    ba89:	c1 ce 0b             	ror    esi,0xb
    ba8c:	01 ce                	add    esi,ecx
    ba8e:	01 44 24 e8          	add    DWORD PTR [rsp-0x18],eax
    ba92:	41 01 cf             	add    r15d,ecx
    ba95:	41 01 f3             	add    r11d,esi
    ba98:	01 54 24 e0          	add    DWORD PTR [rsp-0x20],edx
    ba9c:	48 39 5c 24 f0       	cmp    QWORD PTR [rsp-0x10],rbx
    baa1:	0f 87 19 f9 ff ff    	ja     b3c0 <md5_process_block+0x60>
    baa7:	45 89 fa             	mov    r10d,r15d
    baaa:	48 8b 44 24 f8       	mov    rax,QWORD PTR [rsp-0x8]
    baaf:	8b 5c 24 e8          	mov    ebx,DWORD PTR [rsp-0x18]
    bab3:	89 18                	mov    DWORD PTR [rax],ebx
    bab5:	8b 5c 24 e0          	mov    ebx,DWORD PTR [rsp-0x20]
    bab9:	44 89 58 04          	mov    DWORD PTR [rax+0x4],r11d
    babd:	44 89 50 08          	mov    DWORD PTR [rax+0x8],r10d
    bac1:	89 58 0c             	mov    DWORD PTR [rax+0xc],ebx
    bac4:	5b                   	pop    rbx
    bac5:	5d                   	pop    rbp
    bac6:	41 5c                	pop    r12
    bac8:	41 5d                	pop    r13
    baca:	41 5e                	pop    r14
    bacc:	41 5f                	pop    r15
    bace:	c3                   	ret    
    bacf:	90                   	nop

000000000000bad0 <md5_finish_ctx>:
    bad0:	55                   	push   rbp
    bad1:	53                   	push   rbx
    bad2:	48 89 fb             	mov    rbx,rdi
    bad5:	8b 47 18             	mov    eax,DWORD PTR [rdi+0x18]
    bad8:	48 89 f5             	mov    rbp,rsi
    badb:	8b 53 14             	mov    edx,DWORD PTR [rbx+0x14]
    bade:	83 f8 38             	cmp    eax,0x38
    bae1:	89 c6                	mov    esi,eax
    bae3:	4d 19 c0             	sbb    r8,r8
    bae6:	49 83 e0 c0          	and    r8,0xffffffffffffffc0
    baea:	49 83 e8 80          	sub    r8,0xffffffffffffff80
    baee:	83 f8 38             	cmp    eax,0x38
    baf1:	48 19 c9             	sbb    rcx,rcx
    baf4:	48 83 e1 f0          	and    rcx,0xfffffffffffffff0
    baf8:	48 83 c1 1f          	add    rcx,0x1f
    bafc:	83 f8 38             	cmp    eax,0x38
    baff:	48 19 ff             	sbb    rdi,rdi
    bb02:	45 31 c9             	xor    r9d,r9d
    bb05:	48 83 e7 f0          	and    rdi,0xfffffffffffffff0
    bb09:	48 83 c7 1e          	add    rdi,0x1e
    bb0d:	03 73 10             	add    esi,DWORD PTR [rbx+0x10]
    bb10:	41 0f 92 c1          	setb   r9b
    bb14:	89 73 10             	mov    DWORD PTR [rbx+0x10],esi
    bb17:	45 85 c9             	test   r9d,r9d
    bb1a:	74 06                	je     bb22 <md5_finish_ctx+0x52>
    bb1c:	83 c2 01             	add    edx,0x1
    bb1f:	89 53 14             	mov    DWORD PTR [rbx+0x14],edx
    bb22:	44 8d 0c f5 00 00 00 	lea    r9d,[rsi*8+0x0]
    bb29:	00 
    bb2a:	c1 e2 03             	shl    edx,0x3
    bb2d:	c1 ee 1d             	shr    esi,0x1d
    bb30:	09 f2                	or     edx,esi
    bb32:	48 8d 35 47 9f 00 00 	lea    rsi,[rip+0x9f47]        # 15a80 <fillbuf>
    bb39:	44 89 4c bb 1c       	mov    DWORD PTR [rbx+rdi*4+0x1c],r9d
    bb3e:	4c 89 c7             	mov    rdi,r8
    bb41:	89 54 8b 1c          	mov    DWORD PTR [rbx+rcx*4+0x1c],edx
    bb45:	48 29 c7             	sub    rdi,rax
    bb48:	4c 8d 4b 1c          	lea    r9,[rbx+0x1c]
    bb4c:	48 8d 4f f8          	lea    rcx,[rdi-0x8]
    bb50:	49 8d 14 01          	lea    rdx,[r9+rax*1]
    bb54:	48 83 f9 08          	cmp    rcx,0x8
    bb58:	73 26                	jae    bb80 <md5_finish_ctx+0xb0>
    bb5a:	f6 c1 04             	test   cl,0x4
    bb5d:	75 71                	jne    bbd0 <md5_finish_ctx+0x100>
    bb5f:	48 85 c9             	test   rcx,rcx
    bb62:	74 48                	je     bbac <md5_finish_ctx+0xdc>
    bb64:	0f b6 05 15 9f 00 00 	movzx  eax,BYTE PTR [rip+0x9f15]        # 15a80 <fillbuf>
    bb6b:	f6 c1 02             	test   cl,0x2
    bb6e:	88 02                	mov    BYTE PTR [rdx],al
    bb70:	74 3a                	je     bbac <md5_finish_ctx+0xdc>
    bb72:	0f b7 44 0e fe       	movzx  eax,WORD PTR [rsi+rcx*1-0x2]
    bb77:	66 89 44 0a fe       	mov    WORD PTR [rdx+rcx*1-0x2],ax
    bb7c:	eb 2e                	jmp    bbac <md5_finish_ctx+0xdc>
    bb7e:	66 90                	xchg   ax,ax
    bb80:	48 8b 05 f9 9e 00 00 	mov    rax,QWORD PTR [rip+0x9ef9]        # 15a80 <fillbuf>
    bb87:	48 8d 7a 08          	lea    rdi,[rdx+0x8]
    bb8b:	48 83 e7 f8          	and    rdi,0xfffffffffffffff8
    bb8f:	48 89 02             	mov    QWORD PTR [rdx],rax
    bb92:	48 8b 44 0e f8       	mov    rax,QWORD PTR [rsi+rcx*1-0x8]
    bb97:	48 89 44 0a f8       	mov    QWORD PTR [rdx+rcx*1-0x8],rax
    bb9c:	48 29 fa             	sub    rdx,rdi
    bb9f:	48 01 d1             	add    rcx,rdx
    bba2:	48 29 d6             	sub    rsi,rdx
    bba5:	48 c1 e9 03          	shr    rcx,0x3
    bba9:	f3 48 a5             	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    bbac:	48 89 da             	mov    rdx,rbx
    bbaf:	4c 89 c6             	mov    rsi,r8
    bbb2:	4c 89 cf             	mov    rdi,r9
    bbb5:	e8 a6 f7 ff ff       	call   b360 <md5_process_block>
    bbba:	48 89 ee             	mov    rsi,rbp
    bbbd:	48 89 df             	mov    rdi,rbx
    bbc0:	5b                   	pop    rbx
    bbc1:	5d                   	pop    rbp
    bbc2:	e9 79 f7 ff ff       	jmp    b340 <md5_read_ctx>
    bbc7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    bbce:	00 00 
    bbd0:	8b 05 aa 9e 00 00    	mov    eax,DWORD PTR [rip+0x9eaa]        # 15a80 <fillbuf>
    bbd6:	89 02                	mov    DWORD PTR [rdx],eax
    bbd8:	8b 44 0e fc          	mov    eax,DWORD PTR [rsi+rcx*1-0x4]
    bbdc:	89 44 0a fc          	mov    DWORD PTR [rdx+rcx*1-0x4],eax
    bbe0:	eb ca                	jmp    bbac <md5_finish_ctx+0xdc>
    bbe2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    bbe6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    bbed:	00 00 00 

000000000000bbf0 <md5_process_bytes>:
    bbf0:	41 57                	push   r15
    bbf2:	41 56                	push   r14
    bbf4:	41 55                	push   r13
    bbf6:	41 54                	push   r12
    bbf8:	49 89 d5             	mov    r13,rdx
    bbfb:	55                   	push   rbp
    bbfc:	53                   	push   rbx
    bbfd:	49 89 f4             	mov    r12,rsi
    bc00:	48 89 fb             	mov    rbx,rdi
    bc03:	48 83 ec 08          	sub    rsp,0x8
    bc07:	8b 42 18             	mov    eax,DWORD PTR [rdx+0x18]
    bc0a:	85 c0                	test   eax,eax
    bc0c:	0f 85 2e 01 00 00    	jne    bd40 <md5_process_bytes+0x150>
    bc12:	49 83 fc 3f          	cmp    r12,0x3f
    bc16:	0f 86 08 01 00 00    	jbe    bd24 <md5_process_bytes+0x134>
    bc1c:	f6 c3 03             	test   bl,0x3
    bc1f:	0f 84 e3 00 00 00    	je     bd08 <md5_process_bytes+0x118>
    bc25:	49 83 fc 40          	cmp    r12,0x40
    bc29:	49 8d 6d 1c          	lea    rbp,[r13+0x1c]
    bc2d:	74 61                	je     bc90 <md5_process_bytes+0xa0>
    bc2f:	4d 8d 7c 24 bf       	lea    r15,[r12-0x41]
    bc34:	49 c1 ef 06          	shr    r15,0x6
    bc38:	4d 8d 77 01          	lea    r14,[r15+0x1]
    bc3c:	49 c1 e6 06          	shl    r14,0x6
    bc40:	49 01 de             	add    r14,rbx
    bc43:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    bc48:	f3 0f 6f 03          	movdqu xmm0,XMMWORD PTR [rbx]
    bc4c:	4c 89 ea             	mov    rdx,r13
    bc4f:	be 40 00 00 00       	mov    esi,0x40
    bc54:	48 89 ef             	mov    rdi,rbp
    bc57:	48 83 c3 40          	add    rbx,0x40
    bc5b:	0f 11 45 00          	movups XMMWORD PTR [rbp+0x0],xmm0
    bc5f:	f3 0f 6f 43 d0       	movdqu xmm0,XMMWORD PTR [rbx-0x30]
    bc64:	0f 11 45 10          	movups XMMWORD PTR [rbp+0x10],xmm0
    bc68:	f3 0f 6f 43 e0       	movdqu xmm0,XMMWORD PTR [rbx-0x20]
    bc6d:	0f 11 45 20          	movups XMMWORD PTR [rbp+0x20],xmm0
    bc71:	f3 0f 6f 43 f0       	movdqu xmm0,XMMWORD PTR [rbx-0x10]
    bc76:	0f 11 45 30          	movups XMMWORD PTR [rbp+0x30],xmm0
    bc7a:	e8 e1 f6 ff ff       	call   b360 <md5_process_block>
    bc7f:	4c 39 f3             	cmp    rbx,r14
    bc82:	75 c4                	jne    bc48 <md5_process_bytes+0x58>
    bc84:	49 f7 df             	neg    r15
    bc87:	49 c1 e7 06          	shl    r15,0x6
    bc8b:	4f 8d 64 3c c0       	lea    r12,[r12+r15*1-0x40]
    bc90:	41 8b 7d 18          	mov    edi,DWORD PTR [r13+0x18]
    bc94:	41 83 fc 08          	cmp    r12d,0x8
    bc98:	44 89 e0             	mov    eax,r12d
    bc9b:	48 8d 4c 3d 00       	lea    rcx,[rbp+rdi*1+0x0]
    bca0:	0f 83 da 00 00 00    	jae    bd80 <md5_process_bytes+0x190>
    bca6:	41 f6 c4 04          	test   r12b,0x4
    bcaa:	0f 85 f1 01 00 00    	jne    bea1 <md5_process_bytes+0x2b1>
    bcb0:	45 85 e4             	test   r12d,r12d
    bcb3:	74 0d                	je     bcc2 <md5_process_bytes+0xd2>
    bcb5:	0f b6 13             	movzx  edx,BYTE PTR [rbx]
    bcb8:	a8 02                	test   al,0x2
    bcba:	88 11                	mov    BYTE PTR [rcx],dl
    bcbc:	0f 85 f3 01 00 00    	jne    beb5 <md5_process_bytes+0x2c5>
    bcc2:	49 01 fc             	add    r12,rdi
    bcc5:	49 83 fc 3f          	cmp    r12,0x3f
    bcc9:	76 23                	jbe    bcee <md5_process_bytes+0xfe>
    bccb:	4c 89 ea             	mov    rdx,r13
    bcce:	be 40 00 00 00       	mov    esi,0x40
    bcd3:	48 89 ef             	mov    rdi,rbp
    bcd6:	e8 85 f6 ff ff       	call   b360 <md5_process_block>
    bcdb:	49 83 ec 40          	sub    r12,0x40
    bcdf:	49 8d 75 5c          	lea    rsi,[r13+0x5c]
    bce3:	48 89 ef             	mov    rdi,rbp
    bce6:	4c 89 e2             	mov    rdx,r12
    bce9:	e8 92 71 ff ff       	call   2e80 <memcpy@plt>
    bcee:	45 89 65 18          	mov    DWORD PTR [r13+0x18],r12d
    bcf2:	48 83 c4 08          	add    rsp,0x8
    bcf6:	5b                   	pop    rbx
    bcf7:	5d                   	pop    rbp
    bcf8:	41 5c                	pop    r12
    bcfa:	41 5d                	pop    r13
    bcfc:	41 5e                	pop    r14
    bcfe:	41 5f                	pop    r15
    bd00:	c3                   	ret    
    bd01:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    bd08:	4c 89 e5             	mov    rbp,r12
    bd0b:	48 89 df             	mov    rdi,rbx
    bd0e:	4c 89 ea             	mov    rdx,r13
    bd11:	48 83 e5 c0          	and    rbp,0xffffffffffffffc0
    bd15:	41 83 e4 3f          	and    r12d,0x3f
    bd19:	48 89 ee             	mov    rsi,rbp
    bd1c:	48 01 eb             	add    rbx,rbp
    bd1f:	e8 3c f6 ff ff       	call   b360 <md5_process_block>
    bd24:	4d 85 e4             	test   r12,r12
    bd27:	0f 85 6b 01 00 00    	jne    be98 <md5_process_bytes+0x2a8>
    bd2d:	48 83 c4 08          	add    rsp,0x8
    bd31:	5b                   	pop    rbx
    bd32:	5d                   	pop    rbp
    bd33:	41 5c                	pop    r12
    bd35:	41 5d                	pop    r13
    bd37:	41 5e                	pop    r14
    bd39:	41 5f                	pop    r15
    bd3b:	c3                   	ret    
    bd3c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    bd40:	89 c5                	mov    ebp,eax
    bd42:	ba 80 00 00 00       	mov    edx,0x80
    bd47:	4d 8d 7d 1c          	lea    r15,[r13+0x1c]
    bd4b:	48 29 ea             	sub    rdx,rbp
    bd4e:	48 39 f2             	cmp    rdx,rsi
    bd51:	49 8d 3c 2f          	lea    rdi,[r15+rbp*1]
    bd55:	48 0f 47 d6          	cmova  rdx,rsi
    bd59:	48 89 de             	mov    rsi,rbx
    bd5c:	49 89 d6             	mov    r14,rdx
    bd5f:	e8 1c 71 ff ff       	call   2e80 <memcpy@plt>
    bd64:	41 8b 75 18          	mov    esi,DWORD PTR [r13+0x18]
    bd68:	44 01 f6             	add    esi,r14d
    bd6b:	83 fe 40             	cmp    esi,0x40
    bd6e:	41 89 75 18          	mov    DWORD PTR [r13+0x18],esi
    bd72:	77 5c                	ja     bdd0 <md5_process_bytes+0x1e0>
    bd74:	4c 01 f3             	add    rbx,r14
    bd77:	4d 29 f4             	sub    r12,r14
    bd7a:	e9 93 fe ff ff       	jmp    bc12 <md5_process_bytes+0x22>
    bd7f:	90                   	nop
    bd80:	48 8b 03             	mov    rax,QWORD PTR [rbx]
    bd83:	44 89 e2             	mov    edx,r12d
    bd86:	48 89 01             	mov    QWORD PTR [rcx],rax
    bd89:	48 8b 44 13 f8       	mov    rax,QWORD PTR [rbx+rdx*1-0x8]
    bd8e:	48 89 44 11 f8       	mov    QWORD PTR [rcx+rdx*1-0x8],rax
    bd93:	48 8d 51 08          	lea    rdx,[rcx+0x8]
    bd97:	48 89 c8             	mov    rax,rcx
    bd9a:	48 83 e2 f8          	and    rdx,0xfffffffffffffff8
    bd9e:	48 29 d0             	sub    rax,rdx
    bda1:	48 29 c3             	sub    rbx,rax
    bda4:	44 01 e0             	add    eax,r12d
    bda7:	83 e0 f8             	and    eax,0xfffffff8
    bdaa:	83 f8 08             	cmp    eax,0x8
    bdad:	0f 82 0f ff ff ff    	jb     bcc2 <md5_process_bytes+0xd2>
    bdb3:	83 e0 f8             	and    eax,0xfffffff8
    bdb6:	31 c9                	xor    ecx,ecx
    bdb8:	89 ce                	mov    esi,ecx
    bdba:	83 c1 08             	add    ecx,0x8
    bdbd:	4c 8b 04 33          	mov    r8,QWORD PTR [rbx+rsi*1]
    bdc1:	39 c1                	cmp    ecx,eax
    bdc3:	4c 89 04 32          	mov    QWORD PTR [rdx+rsi*1],r8
    bdc7:	72 ef                	jb     bdb8 <md5_process_bytes+0x1c8>
    bdc9:	e9 f4 fe ff ff       	jmp    bcc2 <md5_process_bytes+0xd2>
    bdce:	66 90                	xchg   ax,ax
    bdd0:	83 e6 c0             	and    esi,0xffffffc0
    bdd3:	4c 89 ea             	mov    rdx,r13
    bdd6:	4c 89 ff             	mov    rdi,r15
    bdd9:	e8 82 f5 ff ff       	call   b360 <md5_process_block>
    bdde:	41 8b 4d 18          	mov    ecx,DWORD PTR [r13+0x18]
    bde2:	4a 8d 44 35 00       	lea    rax,[rbp+r14*1+0x0]
    bde7:	48 83 e0 c0          	and    rax,0xffffffffffffffc0
    bdeb:	89 ca                	mov    edx,ecx
    bded:	4c 01 f8             	add    rax,r15
    bdf0:	83 e2 3f             	and    edx,0x3f
    bdf3:	83 fa 08             	cmp    edx,0x8
    bdf6:	41 89 55 18          	mov    DWORD PTR [r13+0x18],edx
    bdfa:	73 34                	jae    be30 <md5_process_bytes+0x240>
    bdfc:	f6 c1 04             	test   cl,0x4
    bdff:	75 7e                	jne    be7f <md5_process_bytes+0x28f>
    be01:	85 d2                	test   edx,edx
    be03:	0f 84 6b ff ff ff    	je     bd74 <md5_process_bytes+0x184>
    be09:	0f b6 30             	movzx  esi,BYTE PTR [rax]
    be0c:	83 e1 02             	and    ecx,0x2
    be0f:	41 88 75 1c          	mov    BYTE PTR [r13+0x1c],sil
    be13:	0f 84 5b ff ff ff    	je     bd74 <md5_process_bytes+0x184>
    be19:	0f b7 44 10 fe       	movzx  eax,WORD PTR [rax+rdx*1-0x2]
    be1e:	66 41 89 44 17 fe    	mov    WORD PTR [r15+rdx*1-0x2],ax
    be24:	e9 4b ff ff ff       	jmp    bd74 <md5_process_bytes+0x184>
    be29:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    be30:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    be33:	49 89 4d 1c          	mov    QWORD PTR [r13+0x1c],rcx
    be37:	89 d1                	mov    ecx,edx
    be39:	48 8b 74 08 f8       	mov    rsi,QWORD PTR [rax+rcx*1-0x8]
    be3e:	49 89 74 0f f8       	mov    QWORD PTR [r15+rcx*1-0x8],rsi
    be43:	49 8d 4d 24          	lea    rcx,[r13+0x24]
    be47:	48 83 e1 f8          	and    rcx,0xfffffffffffffff8
    be4b:	49 29 cf             	sub    r15,rcx
    be4e:	4c 29 f8             	sub    rax,r15
    be51:	41 01 d7             	add    r15d,edx
    be54:	41 83 e7 f8          	and    r15d,0xfffffff8
    be58:	41 83 ff 08          	cmp    r15d,0x8
    be5c:	0f 82 12 ff ff ff    	jb     bd74 <md5_process_bytes+0x184>
    be62:	41 83 e7 f8          	and    r15d,0xfffffff8
    be66:	31 d2                	xor    edx,edx
    be68:	89 d6                	mov    esi,edx
    be6a:	83 c2 08             	add    edx,0x8
    be6d:	48 8b 3c 30          	mov    rdi,QWORD PTR [rax+rsi*1]
    be71:	44 39 fa             	cmp    edx,r15d
    be74:	48 89 3c 31          	mov    QWORD PTR [rcx+rsi*1],rdi
    be78:	72 ee                	jb     be68 <md5_process_bytes+0x278>
    be7a:	e9 f5 fe ff ff       	jmp    bd74 <md5_process_bytes+0x184>
    be7f:	8b 08                	mov    ecx,DWORD PTR [rax]
    be81:	41 89 4d 1c          	mov    DWORD PTR [r13+0x1c],ecx
    be85:	8b 44 10 fc          	mov    eax,DWORD PTR [rax+rdx*1-0x4]
    be89:	41 89 44 17 fc       	mov    DWORD PTR [r15+rdx*1-0x4],eax
    be8e:	e9 e1 fe ff ff       	jmp    bd74 <md5_process_bytes+0x184>
    be93:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    be98:	49 8d 6d 1c          	lea    rbp,[r13+0x1c]
    be9c:	e9 ef fd ff ff       	jmp    bc90 <md5_process_bytes+0xa0>
    bea1:	8b 13                	mov    edx,DWORD PTR [rbx]
    bea3:	89 11                	mov    DWORD PTR [rcx],edx
    bea5:	44 89 e2             	mov    edx,r12d
    bea8:	8b 44 13 fc          	mov    eax,DWORD PTR [rbx+rdx*1-0x4]
    beac:	89 44 11 fc          	mov    DWORD PTR [rcx+rdx*1-0x4],eax
    beb0:	e9 0d fe ff ff       	jmp    bcc2 <md5_process_bytes+0xd2>
    beb5:	44 89 e2             	mov    edx,r12d
    beb8:	0f b7 44 13 fe       	movzx  eax,WORD PTR [rbx+rdx*1-0x2]
    bebd:	66 89 44 11 fe       	mov    WORD PTR [rcx+rdx*1-0x2],ax
    bec2:	e9 fb fd ff ff       	jmp    bcc2 <md5_process_bytes+0xd2>
    bec7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    bece:	00 00 

000000000000bed0 <md5_buffer>:
    bed0:	55                   	push   rbp
    bed1:	53                   	push   rbx
    bed2:	48 89 d5             	mov    rbp,rdx
    bed5:	48 81 ec b8 00 00 00 	sub    rsp,0xb8
    bedc:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    bee3:	00 00 
    bee5:	48 89 84 24 a8 00 00 	mov    QWORD PTR [rsp+0xa8],rax
    beec:	00 
    beed:	31 c0                	xor    eax,eax
    beef:	48 89 e3             	mov    rbx,rsp
    bef2:	48 b8 01 23 45 67 89 	movabs rax,0xefcdab8967452301
    bef9:	ab cd ef 
    befc:	48 c7 44 24 10 00 00 	mov    QWORD PTR [rsp+0x10],0x0
    bf03:	00 00 
    bf05:	48 89 04 24          	mov    QWORD PTR [rsp],rax
    bf09:	48 89 da             	mov    rdx,rbx
    bf0c:	48 b8 fe dc ba 98 76 	movabs rax,0x1032547698badcfe
    bf13:	54 32 10 
    bf16:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    bf1b:	c7 44 24 18 00 00 00 	mov    DWORD PTR [rsp+0x18],0x0
    bf22:	00 
    bf23:	e8 c8 fc ff ff       	call   bbf0 <md5_process_bytes>
    bf28:	48 89 ee             	mov    rsi,rbp
    bf2b:	48 89 df             	mov    rdi,rbx
    bf2e:	e8 9d fb ff ff       	call   bad0 <md5_finish_ctx>
    bf33:	48 8b 8c 24 a8 00 00 	mov    rcx,QWORD PTR [rsp+0xa8]
    bf3a:	00 
    bf3b:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    bf42:	00 00 
    bf44:	75 0a                	jne    bf50 <md5_buffer+0x80>
    bf46:	48 81 c4 b8 00 00 00 	add    rsp,0xb8
    bf4d:	5b                   	pop    rbx
    bf4e:	5d                   	pop    rbp
    bf4f:	c3                   	ret    
    bf50:	e8 4b 6d ff ff       	call   2ca0 <__stack_chk_fail@plt>
    bf55:	90                   	nop
    bf56:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    bf5d:	00 00 00 

000000000000bf60 <md5_stream>:
    bf60:	41 57                	push   r15
    bf62:	41 56                	push   r14
    bf64:	49 89 f6             	mov    r14,rsi
    bf67:	41 55                	push   r13
    bf69:	41 54                	push   r12
    bf6b:	55                   	push   rbp
    bf6c:	53                   	push   rbx
    bf6d:	48 89 fd             	mov    rbp,rdi
    bf70:	bf 48 80 00 00       	mov    edi,0x8048
    bf75:	48 81 ec b8 00 00 00 	sub    rsp,0xb8
    bf7c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    bf83:	00 00 
    bf85:	48 89 84 24 a8 00 00 	mov    QWORD PTR [rsp+0xa8],rax
    bf8c:	00 
    bf8d:	31 c0                	xor    eax,eax
    bf8f:	e8 34 72 ff ff       	call   31c8 <malloc@plt>
    bf94:	49 89 c4             	mov    r12,rax
    bf97:	b8 01 00 00 00       	mov    eax,0x1
    bf9c:	4d 85 e4             	test   r12,r12
    bf9f:	0f 84 86 00 00 00    	je     c02b <md5_stream+0xcb>
    bfa5:	48 b8 01 23 45 67 89 	movabs rax,0xefcdab8967452301
    bfac:	ab cd ef 
    bfaf:	48 c7 44 24 10 00 00 	mov    QWORD PTR [rsp+0x10],0x0
    bfb6:	00 00 
    bfb8:	c7 44 24 18 00 00 00 	mov    DWORD PTR [rsp+0x18],0x0
    bfbf:	00 
    bfc0:	48 89 04 24          	mov    QWORD PTR [rsp],rax
    bfc4:	48 b8 fe dc ba 98 76 	movabs rax,0x1032547698badcfe
    bfcb:	54 32 10 
    bfce:	41 bd 00 80 00 00    	mov    r13d,0x8000
    bfd4:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    bfd9:	49 89 e7             	mov    r15,rsp
    bfdc:	31 db                	xor    ebx,ebx
    bfde:	eb 28                	jmp    c008 <md5_stream+0xa8>
    bfe0:	49 8d 3c 1c          	lea    rdi,[r12+rbx*1]
    bfe4:	4c 89 ea             	mov    rdx,r13
    bfe7:	48 89 e9             	mov    rcx,rbp
    bfea:	48 29 da             	sub    rdx,rbx
    bfed:	be 01 00 00 00       	mov    esi,0x1
    bff2:	e8 19 6c ff ff       	call   2c10 <fread_unlocked@plt>
    bff7:	48 01 c3             	add    rbx,rax
    bffa:	48 81 fb 00 80 00 00 	cmp    rbx,0x8000
    c001:	74 5d                	je     c060 <md5_stream+0x100>
    c003:	48 85 c0             	test   rax,rax
    c006:	74 70                	je     c078 <md5_stream+0x118>
    c008:	f6 45 00 10          	test   BYTE PTR [rbp+0x0],0x10
    c00c:	74 d2                	je     bfe0 <md5_stream+0x80>
    c00e:	48 85 db             	test   rbx,rbx
    c011:	48 89 e5             	mov    rbp,rsp
    c014:	75 3a                	jne    c050 <md5_stream+0xf0>
    c016:	4c 89 f6             	mov    rsi,r14
    c019:	48 89 ef             	mov    rdi,rbp
    c01c:	e8 af fa ff ff       	call   bad0 <md5_finish_ctx>
    c021:	4c 89 e7             	mov    rdi,r12
    c024:	e8 97 71 ff ff       	call   31c0 <free@plt>
    c029:	31 c0                	xor    eax,eax
    c02b:	48 8b 8c 24 a8 00 00 	mov    rcx,QWORD PTR [rsp+0xa8]
    c032:	00 
    c033:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    c03a:	00 00 
    c03c:	75 4f                	jne    c08d <md5_stream+0x12d>
    c03e:	48 81 c4 b8 00 00 00 	add    rsp,0xb8
    c045:	5b                   	pop    rbx
    c046:	5d                   	pop    rbp
    c047:	41 5c                	pop    r12
    c049:	41 5d                	pop    r13
    c04b:	41 5e                	pop    r14
    c04d:	41 5f                	pop    r15
    c04f:	c3                   	ret    
    c050:	48 89 ea             	mov    rdx,rbp
    c053:	48 89 de             	mov    rsi,rbx
    c056:	4c 89 e7             	mov    rdi,r12
    c059:	e8 92 fb ff ff       	call   bbf0 <md5_process_bytes>
    c05e:	eb b6                	jmp    c016 <md5_stream+0xb6>
    c060:	4c 89 fa             	mov    rdx,r15
    c063:	be 00 80 00 00       	mov    esi,0x8000
    c068:	4c 89 e7             	mov    rdi,r12
    c06b:	e8 f0 f2 ff ff       	call   b360 <md5_process_block>
    c070:	e9 67 ff ff ff       	jmp    bfdc <md5_stream+0x7c>
    c075:	0f 1f 00             	nop    DWORD PTR [rax]
    c078:	f6 45 00 20          	test   BYTE PTR [rbp+0x0],0x20
    c07c:	74 90                	je     c00e <md5_stream+0xae>
    c07e:	4c 89 e7             	mov    rdi,r12
    c081:	e8 3a 71 ff ff       	call   31c0 <free@plt>
    c086:	b8 01 00 00 00       	mov    eax,0x1
    c08b:	eb 9e                	jmp    c02b <md5_stream+0xcb>
    c08d:	e8 0e 6c ff ff       	call   2ca0 <__stack_chk_fail@plt>
    c092:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    c099:	00 00 00 
    c09c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000c0a0 <fdadvise>:
    c0a0:	e9 2b 6d ff ff       	jmp    2dd0 <posix_fadvise@plt>
    c0a5:	90                   	nop
    c0a6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    c0ad:	00 00 00 

000000000000c0b0 <fadvise>:
    c0b0:	48 85 ff             	test   rdi,rdi
    c0b3:	74 1b                	je     c0d0 <fadvise+0x20>
    c0b5:	53                   	push   rbx
    c0b6:	89 f3                	mov    ebx,esi
    c0b8:	e8 d3 6d ff ff       	call   2e90 <fileno@plt>
    c0bd:	89 d9                	mov    ecx,ebx
    c0bf:	31 d2                	xor    edx,edx
    c0c1:	31 f6                	xor    esi,esi
    c0c3:	5b                   	pop    rbx
    c0c4:	89 c7                	mov    edi,eax
    c0c6:	e9 05 6d ff ff       	jmp    2dd0 <posix_fadvise@plt>
    c0cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    c0d0:	f3 c3                	repz ret 
    c0d2:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    c0d9:	00 00 00 
    c0dc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000c0e0 <match_suffix>:
    c0e0:	48 8b 37             	mov    rsi,QWORD PTR [rdi]
    c0e3:	0f b6 16             	movzx  edx,BYTE PTR [rsi]
    c0e6:	84 d2                	test   dl,dl
    c0e8:	0f 84 b2 00 00 00    	je     c1a0 <match_suffix+0xc0>
    c0ee:	31 c9                	xor    ecx,ecx
    c0f0:	31 c0                	xor    eax,eax
    c0f2:	45 31 c0             	xor    r8d,r8d
    c0f5:	41 bb 01 00 00 00    	mov    r11d,0x1
    c0fb:	49 ba ff ff ff 03 ff 	movabs r10,0x3ffffff03ffffff
    c102:	ff ff 03 
    c105:	eb 38                	jmp    c13f <match_suffix+0x5f>
    c107:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    c10e:	00 00 
    c110:	0f be ca             	movsx  ecx,dl
    c113:	83 e9 41             	sub    ecx,0x41
    c116:	83 f9 39             	cmp    ecx,0x39
    c119:	77 0d                	ja     c128 <match_suffix+0x48>
    c11b:	4d 89 d9             	mov    r9,r11
    c11e:	49 d3 e1             	shl    r9,cl
    c121:	31 c9                	xor    ecx,ecx
    c123:	4d 85 d1             	test   r9,r10
    c126:	75 09                	jne    c131 <match_suffix+0x51>
    c128:	31 c9                	xor    ecx,ecx
    c12a:	80 fa 7e             	cmp    dl,0x7e
    c12d:	49 0f 45 c0          	cmovne rax,r8
    c131:	48 83 c6 01          	add    rsi,0x1
    c135:	48 89 37             	mov    QWORD PTR [rdi],rsi
    c138:	0f b6 16             	movzx  edx,BYTE PTR [rsi]
    c13b:	84 d2                	test   dl,dl
    c13d:	74 32                	je     c171 <match_suffix+0x91>
    c13f:	84 c9                	test   cl,cl
    c141:	75 cd                	jne    c110 <match_suffix+0x30>
    c143:	80 fa 2e             	cmp    dl,0x2e
    c146:	74 30                	je     c178 <match_suffix+0x98>
    c148:	80 fa 5a             	cmp    dl,0x5a
    c14b:	7f 43                	jg     c190 <match_suffix+0xb0>
    c14d:	80 fa 41             	cmp    dl,0x41
    c150:	7d df                	jge    c131 <match_suffix+0x51>
    c152:	44 8d 4a d0          	lea    r9d,[rdx-0x30]
    c156:	41 80 f9 09          	cmp    r9b,0x9
    c15a:	76 d5                	jbe    c131 <match_suffix+0x51>
    c15c:	80 fa 7e             	cmp    dl,0x7e
    c15f:	49 0f 45 c0          	cmovne rax,r8
    c163:	48 83 c6 01          	add    rsi,0x1
    c167:	48 89 37             	mov    QWORD PTR [rdi],rsi
    c16a:	0f b6 16             	movzx  edx,BYTE PTR [rsi]
    c16d:	84 d2                	test   dl,dl
    c16f:	75 ce                	jne    c13f <match_suffix+0x5f>
    c171:	f3 c3                	repz ret 
    c173:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    c178:	48 85 c0             	test   rax,rax
    c17b:	b9 01 00 00 00       	mov    ecx,0x1
    c180:	48 0f 44 c6          	cmove  rax,rsi
    c184:	eb ab                	jmp    c131 <match_suffix+0x51>
    c186:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    c18d:	00 00 00 
    c190:	44 8d 4a 9f          	lea    r9d,[rdx-0x61]
    c194:	41 80 f9 19          	cmp    r9b,0x19
    c198:	77 c2                	ja     c15c <match_suffix+0x7c>
    c19a:	eb 95                	jmp    c131 <match_suffix+0x51>
    c19c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    c1a0:	31 c0                	xor    eax,eax
    c1a2:	c3                   	ret    
    c1a3:	0f 1f 00             	nop    DWORD PTR [rax]
    c1a6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    c1ad:	00 00 00 

000000000000c1b0 <filevercmp>:
    c1b0:	41 57                	push   r15
    c1b2:	41 56                	push   r14
    c1b4:	41 55                	push   r13
    c1b6:	41 54                	push   r12
    c1b8:	55                   	push   rbp
    c1b9:	53                   	push   rbx
    c1ba:	48 89 f5             	mov    rbp,rsi
    c1bd:	48 89 fb             	mov    rbx,rdi
    c1c0:	48 83 ec 38          	sub    rsp,0x38
    c1c4:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    c1cb:	00 00 
    c1cd:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
    c1d2:	31 c0                	xor    eax,eax
    c1d4:	e8 67 6c ff ff       	call   2e40 <strcmp@plt>
    c1d9:	85 c0                	test   eax,eax
    c1db:	41 89 c4             	mov    r12d,eax
    c1de:	0f 84 44 02 00 00    	je     c428 <filevercmp+0x278>
    c1e4:	0f b6 03             	movzx  eax,BYTE PTR [rbx]
    c1e7:	84 c0                	test   al,al
    c1e9:	0f 84 79 03 00 00    	je     c568 <filevercmp+0x3b8>
    c1ef:	44 0f b6 45 00       	movzx  r8d,BYTE PTR [rbp+0x0]
    c1f4:	45 84 c0             	test   r8b,r8b
    c1f7:	0f 84 53 02 00 00    	je     c450 <filevercmp+0x2a0>
    c1fd:	4c 8d 0d bd 98 00 00 	lea    r9,[rip+0x98bd]        # 15ac1 <fillbuf+0x41>
    c204:	b9 02 00 00 00       	mov    ecx,0x2
    c209:	48 89 df             	mov    rdi,rbx
    c20c:	4c 89 ce             	mov    rsi,r9
    c20f:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    c211:	0f 97 c2             	seta   dl
    c214:	80 da 00             	sbb    dl,0x0
    c217:	84 d2                	test   dl,dl
    c219:	0f 84 49 03 00 00    	je     c568 <filevercmp+0x3b8>
    c21f:	b9 02 00 00 00       	mov    ecx,0x2
    c224:	4c 89 ce             	mov    rsi,r9
    c227:	48 89 ef             	mov    rdi,rbp
    c22a:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    c22c:	0f 97 c2             	seta   dl
    c22f:	80 da 00             	sbb    dl,0x0
    c232:	84 d2                	test   dl,dl
    c234:	0f 84 16 02 00 00    	je     c450 <filevercmp+0x2a0>
    c23a:	4c 8d 0d 7f 98 00 00 	lea    r9,[rip+0x987f]        # 15ac0 <fillbuf+0x40>
    c241:	b9 03 00 00 00       	mov    ecx,0x3
    c246:	48 89 df             	mov    rdi,rbx
    c249:	4c 89 ce             	mov    rsi,r9
    c24c:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    c24e:	0f 97 c2             	seta   dl
    c251:	80 da 00             	sbb    dl,0x0
    c254:	84 d2                	test   dl,dl
    c256:	0f 84 0c 03 00 00    	je     c568 <filevercmp+0x3b8>
    c25c:	b9 03 00 00 00       	mov    ecx,0x3
    c261:	4c 89 ce             	mov    rsi,r9
    c264:	48 89 ef             	mov    rdi,rbp
    c267:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    c269:	0f 97 c2             	seta   dl
    c26c:	80 da 00             	sbb    dl,0x0
    c26f:	84 d2                	test   dl,dl
    c271:	0f 84 d9 01 00 00    	je     c450 <filevercmp+0x2a0>
    c277:	3c 2e                	cmp    al,0x2e
    c279:	0f 84 d1 02 00 00    	je     c550 <filevercmp+0x3a0>
    c27f:	41 80 f8 2e          	cmp    r8b,0x2e
    c283:	0f 84 c7 01 00 00    	je     c450 <filevercmp+0x2a0>
    c289:	48 8d 7c 24 18       	lea    rdi,[rsp+0x18]
    c28e:	48 89 5c 24 18       	mov    QWORD PTR [rsp+0x18],rbx
    c293:	48 89 6c 24 20       	mov    QWORD PTR [rsp+0x20],rbp
    c298:	e8 43 fe ff ff       	call   c0e0 <match_suffix>
    c29d:	48 8d 7c 24 20       	lea    rdi,[rsp+0x20]
    c2a2:	49 89 c5             	mov    r13,rax
    c2a5:	e8 36 fe ff ff       	call   c0e0 <match_suffix>
    c2aa:	4d 85 ed             	test   r13,r13
    c2ad:	0f 84 0d 02 00 00    	je     c4c0 <filevercmp+0x310>
    c2b3:	49 29 dd             	sub    r13,rbx
    c2b6:	48 85 c0             	test   rax,rax
    c2b9:	0f 84 14 03 00 00    	je     c5d3 <filevercmp+0x423>
    c2bf:	48 29 e8             	sub    rax,rbp
    c2c2:	49 89 c6             	mov    r14,rax
    c2c5:	4d 39 f5             	cmp    r13,r14
    c2c8:	0f 84 d2 02 00 00    	je     c5a0 <filevercmp+0x3f0>
    c2ce:	31 f6                	xor    esi,esi
    c2d0:	31 d2                	xor    edx,edx
    c2d2:	41 ba 01 00 00 00    	mov    r10d,0x1
    c2d8:	49 bf ff ff ff 03 ff 	movabs r15,0x3ffffff03ffffff
    c2df:	ff ff 03 
    c2e2:	49 39 d5             	cmp    r13,rdx
    c2e5:	77 09                	ja     c2f0 <filevercmp+0x140>
    c2e7:	49 39 f6             	cmp    r14,rsi
    c2ea:	0f 86 38 01 00 00    	jbe    c428 <filevercmp+0x278>
    c2f0:	49 89 f3             	mov    r11,rsi
    c2f3:	48 89 2c 24          	mov    QWORD PTR [rsp],rbp
    c2f7:	49 29 d3             	sub    r11,rdx
    c2fa:	4b 8d 44 1d 00       	lea    rax,[r13+r11*1+0x0]
    c2ff:	4e 8d 4c 1d 00       	lea    r9,[rbp+r11*1+0x0]
    c304:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    c309:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    c310:	49 39 d5             	cmp    r13,rdx
    c313:	76 0b                	jbe    c320 <filevercmp+0x170>
    c315:	0f b6 04 13          	movzx  eax,BYTE PTR [rbx+rdx*1]
    c319:	83 e8 30             	sub    eax,0x30
    c31c:	3c 09                	cmp    al,0x9
    c31e:	77 1a                	ja     c33a <filevercmp+0x18a>
    c320:	49 39 f6             	cmp    r14,rsi
    c323:	41 0f be 04 11       	movsx  eax,BYTE PTR [r9+rdx*1]
    c328:	0f 86 c2 01 00 00    	jbe    c4f0 <filevercmp+0x340>
    c32e:	8d 48 d0             	lea    ecx,[rax-0x30]
    c331:	80 f9 09             	cmp    cl,0x9
    c334:	0f 86 b6 01 00 00    	jbe    c4f0 <filevercmp+0x340>
    c33a:	49 39 d5             	cmp    r13,rdx
    c33d:	0f 84 30 02 00 00    	je     c573 <filevercmp+0x3c3>
    c343:	0f b6 04 13          	movzx  eax,BYTE PTR [rbx+rdx*1]
    c347:	8d 48 d0             	lea    ecx,[rax-0x30]
    c34a:	80 f9 09             	cmp    cl,0x9
    c34d:	0f 86 8d 01 00 00    	jbe    c4e0 <filevercmp+0x330>
    c353:	44 0f b6 c0          	movzx  r8d,al
    c357:	41 8d 48 bf          	lea    ecx,[r8-0x41]
    c35b:	83 f9 39             	cmp    ecx,0x39
    c35e:	77 0b                	ja     c36b <filevercmp+0x1bb>
    c360:	4c 89 d7             	mov    rdi,r10
    c363:	48 d3 e7             	shl    rdi,cl
    c366:	4c 85 ff             	test   rdi,r15
    c369:	75 0f                	jne    c37a <filevercmp+0x1ca>
    c36b:	41 81 c0 00 01 00 00 	add    r8d,0x100
    c372:	3c 7e                	cmp    al,0x7e
    c374:	0f 84 e6 00 00 00    	je     c460 <filevercmp+0x2b0>
    c37a:	49 39 f6             	cmp    r14,rsi
    c37d:	74 11                	je     c390 <filevercmp+0x1e0>
    c37f:	41 0f b6 04 11       	movzx  eax,BYTE PTR [r9+rdx*1]
    c384:	8d 48 d0             	lea    ecx,[rax-0x30]
    c387:	80 f9 09             	cmp    cl,0x9
    c38a:	0f 87 f8 00 00 00    	ja     c488 <filevercmp+0x2d8>
    c390:	31 ff                	xor    edi,edi
    c392:	44 39 c7             	cmp    edi,r8d
    c395:	0f 85 8d 01 00 00    	jne    c528 <filevercmp+0x378>
    c39b:	48 83 c2 01          	add    rdx,0x1
    c39f:	48 83 c6 01          	add    rsi,0x1
    c3a3:	e9 68 ff ff ff       	jmp    c310 <filevercmp+0x160>
    c3a8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    c3af:	00 
    c3b0:	48 83 c6 01          	add    rsi,0x1
    c3b4:	0f be 44 35 00       	movsx  eax,BYTE PTR [rbp+rsi*1+0x0]
    c3b9:	3c 30                	cmp    al,0x30
    c3bb:	74 f3                	je     c3b0 <filevercmp+0x200>
    c3bd:	48 29 d6             	sub    rsi,rdx
    c3c0:	45 31 c0             	xor    r8d,r8d
    c3c3:	49 89 f1             	mov    r9,rsi
    c3c6:	4c 8d 5c 35 00       	lea    r11,[rbp+rsi*1+0x0]
    c3cb:	eb 29                	jmp    c3f6 <filevercmp+0x246>
    c3cd:	0f 1f 00             	nop    DWORD PTR [rax]
    c3d0:	8d 70 d0             	lea    esi,[rax-0x30]
    c3d3:	40 80 fe 09          	cmp    sil,0x9
    c3d7:	0f 87 63 01 00 00    	ja     c540 <filevercmp+0x390>
    c3dd:	45 85 c0             	test   r8d,r8d
    c3e0:	75 07                	jne    c3e9 <filevercmp+0x239>
    c3e2:	44 0f be c1          	movsx  r8d,cl
    c3e6:	41 29 c0             	sub    r8d,eax
    c3e9:	48 83 c2 01          	add    rdx,0x1
    c3ed:	0f b6 0c 13          	movzx  ecx,BYTE PTR [rbx+rdx*1]
    c3f1:	41 0f be 04 13       	movsx  eax,BYTE PTR [r11+rdx*1]
    c3f6:	8d 79 d0             	lea    edi,[rcx-0x30]
    c3f9:	4a 8d 34 0a          	lea    rsi,[rdx+r9*1]
    c3fd:	40 80 ff 09          	cmp    dil,0x9
    c401:	76 cd                	jbe    c3d0 <filevercmp+0x220>
    c403:	83 e8 30             	sub    eax,0x30
    c406:	3c 09                	cmp    al,0x9
    c408:	0f 86 b5 01 00 00    	jbe    c5c3 <filevercmp+0x413>
    c40e:	45 85 c0             	test   r8d,r8d
    c411:	0f 84 cb fe ff ff    	je     c2e2 <filevercmp+0x132>
    c417:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    c41e:	00 00 
    c420:	45 89 c4             	mov    r12d,r8d
    c423:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    c428:	48 8b 5c 24 28       	mov    rbx,QWORD PTR [rsp+0x28]
    c42d:	64 48 33 1c 25 28 00 	xor    rbx,QWORD PTR fs:0x28
    c434:	00 00 
    c436:	44 89 e0             	mov    eax,r12d
    c439:	0f 85 8f 01 00 00    	jne    c5ce <filevercmp+0x41e>
    c43f:	48 83 c4 38          	add    rsp,0x38
    c443:	5b                   	pop    rbx
    c444:	5d                   	pop    rbp
    c445:	41 5c                	pop    r12
    c447:	41 5d                	pop    r13
    c449:	41 5e                	pop    r14
    c44b:	41 5f                	pop    r15
    c44d:	c3                   	ret    
    c44e:	66 90                	xchg   ax,ax
    c450:	41 bc 01 00 00 00    	mov    r12d,0x1
    c456:	eb d0                	jmp    c428 <filevercmp+0x278>
    c458:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    c45f:	00 
    c460:	49 8d 04 13          	lea    rax,[r11+rdx*1]
    c464:	49 39 c6             	cmp    r14,rax
    c467:	0f 84 b3 00 00 00    	je     c520 <filevercmp+0x370>
    c46d:	41 0f b6 04 11       	movzx  eax,BYTE PTR [r9+rdx*1]
    c472:	8d 48 d0             	lea    ecx,[rax-0x30]
    c475:	80 f9 09             	cmp    cl,0x9
    c478:	0f 86 a2 00 00 00    	jbe    c520 <filevercmp+0x370>
    c47e:	41 b8 ff ff ff ff    	mov    r8d,0xffffffff
    c484:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    c488:	0f b6 f8             	movzx  edi,al
    c48b:	8d 4f bf             	lea    ecx,[rdi-0x41]
    c48e:	83 f9 39             	cmp    ecx,0x39
    c491:	77 0f                	ja     c4a2 <filevercmp+0x2f2>
    c493:	4c 89 d5             	mov    rbp,r10
    c496:	48 d3 e5             	shl    rbp,cl
    c499:	4c 85 fd             	test   rbp,r15
    c49c:	0f 85 f0 fe ff ff    	jne    c392 <filevercmp+0x1e2>
    c4a2:	81 c7 00 01 00 00    	add    edi,0x100
    c4a8:	3c 7e                	cmp    al,0x7e
    c4aa:	b8 ff ff ff ff       	mov    eax,0xffffffff
    c4af:	0f 44 f8             	cmove  edi,eax
    c4b2:	e9 db fe ff ff       	jmp    c392 <filevercmp+0x1e2>
    c4b7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    c4be:	00 00 
    c4c0:	4c 8b 6c 24 18       	mov    r13,QWORD PTR [rsp+0x18]
    c4c5:	49 29 dd             	sub    r13,rbx
    c4c8:	48 85 c0             	test   rax,rax
    c4cb:	0f 85 ee fd ff ff    	jne    c2bf <filevercmp+0x10f>
    c4d1:	4c 8b 74 24 20       	mov    r14,QWORD PTR [rsp+0x20]
    c4d6:	49 29 ee             	sub    r14,rbp
    c4d9:	e9 f0 fd ff ff       	jmp    c2ce <filevercmp+0x11e>
    c4de:	66 90                	xchg   ax,ax
    c4e0:	45 31 c0             	xor    r8d,r8d
    c4e3:	e9 92 fe ff ff       	jmp    c37a <filevercmp+0x1ca>
    c4e8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    c4ef:	00 
    c4f0:	0f b6 0c 13          	movzx  ecx,BYTE PTR [rbx+rdx*1]
    c4f4:	48 8b 2c 24          	mov    rbp,QWORD PTR [rsp]
    c4f8:	80 f9 30             	cmp    cl,0x30
    c4fb:	0f 85 b8 fe ff ff    	jne    c3b9 <filevercmp+0x209>
    c501:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    c508:	48 83 c2 01          	add    rdx,0x1
    c50c:	0f b6 0c 13          	movzx  ecx,BYTE PTR [rbx+rdx*1]
    c510:	80 f9 30             	cmp    cl,0x30
    c513:	74 f3                	je     c508 <filevercmp+0x358>
    c515:	e9 9f fe ff ff       	jmp    c3b9 <filevercmp+0x209>
    c51a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    c520:	31 ff                	xor    edi,edi
    c522:	41 b8 ff ff ff ff    	mov    r8d,0xffffffff
    c528:	41 29 f8             	sub    r8d,edi
    c52b:	0f 85 ef fe ff ff    	jne    c420 <filevercmp+0x270>
    c531:	e9 f2 fe ff ff       	jmp    c428 <filevercmp+0x278>
    c536:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    c53d:	00 00 00 
    c540:	41 b8 01 00 00 00    	mov    r8d,0x1
    c546:	e9 d5 fe ff ff       	jmp    c420 <filevercmp+0x270>
    c54b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    c550:	48 83 c3 01          	add    rbx,0x1
    c554:	48 83 c5 01          	add    rbp,0x1
    c558:	41 80 f8 2e          	cmp    r8b,0x2e
    c55c:	0f 84 27 fd ff ff    	je     c289 <filevercmp+0xd9>
    c562:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    c568:	41 bc ff ff ff ff    	mov    r12d,0xffffffff
    c56e:	e9 b5 fe ff ff       	jmp    c428 <filevercmp+0x278>
    c573:	4c 3b 74 24 08       	cmp    r14,QWORD PTR [rsp+0x8]
    c578:	0f 84 1d fe ff ff    	je     c39b <filevercmp+0x1eb>
    c57e:	43 0f b6 04 29       	movzx  eax,BYTE PTR [r9+r13*1]
    c583:	8d 48 d0             	lea    ecx,[rax-0x30]
    c586:	80 f9 09             	cmp    cl,0x9
    c589:	0f 86 0c fe ff ff    	jbe    c39b <filevercmp+0x1eb>
    c58f:	45 31 c0             	xor    r8d,r8d
    c592:	e9 f1 fe ff ff       	jmp    c488 <filevercmp+0x2d8>
    c597:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    c59e:	00 00 
    c5a0:	4c 89 ea             	mov    rdx,r13
    c5a3:	48 89 ee             	mov    rsi,rbp
    c5a6:	48 89 df             	mov    rdi,rbx
    c5a9:	e8 82 65 ff ff       	call   2b30 <strncmp@plt>
    c5ae:	85 c0                	test   eax,eax
    c5b0:	0f 85 18 fd ff ff    	jne    c2ce <filevercmp+0x11e>
    c5b6:	4c 8b 6c 24 18       	mov    r13,QWORD PTR [rsp+0x18]
    c5bb:	49 29 dd             	sub    r13,rbx
    c5be:	e9 0e ff ff ff       	jmp    c4d1 <filevercmp+0x321>
    c5c3:	41 b8 ff ff ff ff    	mov    r8d,0xffffffff
    c5c9:	e9 52 fe ff ff       	jmp    c420 <filevercmp+0x270>
    c5ce:	e8 cd 66 ff ff       	call   2ca0 <__stack_chk_fail@plt>
    c5d3:	4c 8b 74 24 20       	mov    r14,QWORD PTR [rsp+0x20]
    c5d8:	49 29 ee             	sub    r14,rbp
    c5db:	e9 e5 fc ff ff       	jmp    c2c5 <filevercmp+0x115>

000000000000c5e0 <hard_locale>:
    c5e0:	48 83 ec 08          	sub    rsp,0x8
    c5e4:	31 f6                	xor    esi,esi
    c5e6:	e8 a5 69 ff ff       	call   2f90 <setlocale@plt>
    c5eb:	48 89 c2             	mov    rdx,rax
    c5ee:	b8 01 00 00 00       	mov    eax,0x1
    c5f3:	48 85 d2             	test   rdx,rdx
    c5f6:	74 1d                	je     c615 <hard_locale+0x35>
    c5f8:	48 8d 3d 9e 93 00 00 	lea    rdi,[rip+0x939e]        # 1599d <short_options+0x1acd>
    c5ff:	b9 02 00 00 00       	mov    ecx,0x2
    c604:	48 89 d6             	mov    rsi,rdx
    c607:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    c609:	0f 97 c1             	seta   cl
    c60c:	80 d9 00             	sbb    cl,0x0
    c60f:	31 c0                	xor    eax,eax
    c611:	84 c9                	test   cl,cl
    c613:	75 0b                	jne    c620 <hard_locale+0x40>
    c615:	48 83 c4 08          	add    rsp,0x8
    c619:	c3                   	ret    
    c61a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    c620:	48 8d 3d 9c 94 00 00 	lea    rdi,[rip+0x949c]        # 15ac3 <fillbuf+0x43>
    c627:	b9 06 00 00 00       	mov    ecx,0x6
    c62c:	48 89 d6             	mov    rsi,rdx
    c62f:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    c631:	0f 97 c0             	seta   al
    c634:	1c 00                	sbb    al,0x0
    c636:	84 c0                	test   al,al
    c638:	0f 95 c0             	setne  al
    c63b:	48 83 c4 08          	add    rsp,0x8
    c63f:	c3                   	ret    

000000000000c640 <next_prime>:
    c640:	48 83 ff 0a          	cmp    rdi,0xa
    c644:	b8 0a 00 00 00       	mov    eax,0xa
    c649:	49 b9 ab aa aa aa aa 	movabs r9,0xaaaaaaaaaaaaaaab
    c650:	aa aa aa 
    c653:	48 0f 42 f8          	cmovb  rdi,rax
    c657:	48 83 cf 01          	or     rdi,0x1
    c65b:	48 83 ff ff          	cmp    rdi,0xffffffffffffffff
    c65f:	74 6e                	je     c6cf <next_prime+0x8f>
    c661:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    c668:	48 89 f8             	mov    rax,rdi
    c66b:	48 89 f9             	mov    rcx,rdi
    c66e:	49 f7 e1             	mul    r9
    c671:	48 89 d0             	mov    rax,rdx
    c674:	48 d1 e8             	shr    rax,1
    c677:	48 8d 04 40          	lea    rax,[rax+rax*2]
    c67b:	48 29 c1             	sub    rcx,rax
    c67e:	48 83 ff 09          	cmp    rdi,0x9
    c682:	48 89 c8             	mov    rax,rcx
    c685:	76 39                	jbe    c6c0 <next_prime+0x80>
    c687:	48 85 c9             	test   rcx,rcx
    c68a:	74 39                	je     c6c5 <next_prime+0x85>
    c68c:	41 b8 10 00 00 00    	mov    r8d,0x10
    c692:	be 09 00 00 00       	mov    esi,0x9
    c697:	b9 03 00 00 00       	mov    ecx,0x3
    c69c:	eb 0b                	jmp    c6a9 <next_prime+0x69>
    c69e:	66 90                	xchg   ax,ax
    c6a0:	49 83 c0 08          	add    r8,0x8
    c6a4:	48 85 d2             	test   rdx,rdx
    c6a7:	74 1c                	je     c6c5 <next_prime+0x85>
    c6a9:	48 83 c1 02          	add    rcx,0x2
    c6ad:	31 d2                	xor    edx,edx
    c6af:	48 89 f8             	mov    rax,rdi
    c6b2:	48 f7 f1             	div    rcx
    c6b5:	4c 01 c6             	add    rsi,r8
    c6b8:	48 39 fe             	cmp    rsi,rdi
    c6bb:	48 89 d0             	mov    rax,rdx
    c6be:	72 e0                	jb     c6a0 <next_prime+0x60>
    c6c0:	48 85 c0             	test   rax,rax
    c6c3:	75 0a                	jne    c6cf <next_prime+0x8f>
    c6c5:	48 83 c7 02          	add    rdi,0x2
    c6c9:	48 83 ff ff          	cmp    rdi,0xffffffffffffffff
    c6cd:	75 99                	jne    c668 <next_prime+0x28>
    c6cf:	48 89 f8             	mov    rax,rdi
    c6d2:	c3                   	ret    
    c6d3:	0f 1f 00             	nop    DWORD PTR [rax]
    c6d6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    c6dd:	00 00 00 

000000000000c6e0 <raw_hasher>:
    c6e0:	48 89 f8             	mov    rax,rdi
    c6e3:	31 d2                	xor    edx,edx
    c6e5:	48 c1 c8 03          	ror    rax,0x3
    c6e9:	48 f7 f6             	div    rsi
    c6ec:	48 89 d0             	mov    rax,rdx
    c6ef:	c3                   	ret    

000000000000c6f0 <raw_comparator>:
    c6f0:	48 39 f7             	cmp    rdi,rsi
    c6f3:	0f 94 c0             	sete   al
    c6f6:	c3                   	ret    
    c6f7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    c6fe:	00 00 

000000000000c700 <safe_hasher>:
    c700:	53                   	push   rbx
    c701:	48 89 fb             	mov    rbx,rdi
    c704:	48 89 f7             	mov    rdi,rsi
    c707:	48 8b 73 10          	mov    rsi,QWORD PTR [rbx+0x10]
    c70b:	ff 53 30             	call   QWORD PTR [rbx+0x30]
    c70e:	48 39 43 10          	cmp    QWORD PTR [rbx+0x10],rax
    c712:	76 09                	jbe    c71d <safe_hasher+0x1d>
    c714:	48 c1 e0 04          	shl    rax,0x4
    c718:	48 03 03             	add    rax,QWORD PTR [rbx]
    c71b:	5b                   	pop    rbx
    c71c:	c3                   	ret    
    c71d:	e8 de 63 ff ff       	call   2b00 <abort@plt>
    c722:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    c726:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    c72d:	00 00 00 

000000000000c730 <hash_find_entry>:
    c730:	41 56                	push   r14
    c732:	41 55                	push   r13
    c734:	49 89 d6             	mov    r14,rdx
    c737:	41 54                	push   r12
    c739:	55                   	push   rbp
    c73a:	49 89 fc             	mov    r12,rdi
    c73d:	53                   	push   rbx
    c73e:	48 89 f5             	mov    rbp,rsi
    c741:	41 89 cd             	mov    r13d,ecx
    c744:	e8 b7 ff ff ff       	call   c700 <safe_hasher>
    c749:	49 89 06             	mov    QWORD PTR [r14],rax
    c74c:	48 8b 30             	mov    rsi,QWORD PTR [rax]
    c74f:	48 85 f6             	test   rsi,rsi
    c752:	0f 84 e8 00 00 00    	je     c840 <hash_find_entry+0x110>
    c758:	48 39 ee             	cmp    rsi,rbp
    c75b:	48 89 c3             	mov    rbx,rax
    c75e:	0f 84 8f 00 00 00    	je     c7f3 <hash_find_entry+0xc3>
    c764:	48 89 ef             	mov    rdi,rbp
    c767:	41 ff 54 24 38       	call   QWORD PTR [r12+0x38]
    c76c:	84 c0                	test   al,al
    c76e:	0f 85 7c 00 00 00    	jne    c7f0 <hash_find_entry+0xc0>
    c774:	48 8b 43 08          	mov    rax,QWORD PTR [rbx+0x8]
    c778:	48 85 c0             	test   rax,rax
    c77b:	0f 84 bf 00 00 00    	je     c840 <hash_find_entry+0x110>
    c781:	48 8b 30             	mov    rsi,QWORD PTR [rax]
    c784:	48 39 f5             	cmp    rbp,rsi
    c787:	75 20                	jne    c7a9 <hash_find_entry+0x79>
    c789:	eb 31                	jmp    c7bc <hash_find_entry+0x8c>
    c78b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    c790:	48 8b 5b 08          	mov    rbx,QWORD PTR [rbx+0x8]
    c794:	48 8b 43 08          	mov    rax,QWORD PTR [rbx+0x8]
    c798:	48 85 c0             	test   rax,rax
    c79b:	0f 84 9f 00 00 00    	je     c840 <hash_find_entry+0x110>
    c7a1:	48 8b 30             	mov    rsi,QWORD PTR [rax]
    c7a4:	48 39 ee             	cmp    rsi,rbp
    c7a7:	74 13                	je     c7bc <hash_find_entry+0x8c>
    c7a9:	48 89 ef             	mov    rdi,rbp
    c7ac:	41 ff 54 24 38       	call   QWORD PTR [r12+0x38]
    c7b1:	84 c0                	test   al,al
    c7b3:	74 db                	je     c790 <hash_find_entry+0x60>
    c7b5:	48 8b 43 08          	mov    rax,QWORD PTR [rbx+0x8]
    c7b9:	48 8b 30             	mov    rsi,QWORD PTR [rax]
    c7bc:	45 84 ed             	test   r13b,r13b
    c7bf:	74 1d                	je     c7de <hash_find_entry+0xae>
    c7c1:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    c7c5:	48 89 53 08          	mov    QWORD PTR [rbx+0x8],rdx
    c7c9:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
    c7d0:	49 8b 54 24 48       	mov    rdx,QWORD PTR [r12+0x48]
    c7d5:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
    c7d9:	49 89 44 24 48       	mov    QWORD PTR [r12+0x48],rax
    c7de:	5b                   	pop    rbx
    c7df:	48 89 f0             	mov    rax,rsi
    c7e2:	5d                   	pop    rbp
    c7e3:	41 5c                	pop    r12
    c7e5:	41 5d                	pop    r13
    c7e7:	41 5e                	pop    r14
    c7e9:	c3                   	ret    
    c7ea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    c7f0:	48 8b 33             	mov    rsi,QWORD PTR [rbx]
    c7f3:	45 84 ed             	test   r13b,r13b
    c7f6:	74 e6                	je     c7de <hash_find_entry+0xae>
    c7f8:	48 8b 43 08          	mov    rax,QWORD PTR [rbx+0x8]
    c7fc:	48 85 c0             	test   rax,rax
    c7ff:	74 2f                	je     c830 <hash_find_entry+0x100>
    c801:	f3 0f 6f 00          	movdqu xmm0,XMMWORD PTR [rax]
    c805:	0f 11 03             	movups XMMWORD PTR [rbx],xmm0
    c808:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
    c80f:	49 8b 54 24 48       	mov    rdx,QWORD PTR [r12+0x48]
    c814:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
    c818:	49 89 44 24 48       	mov    QWORD PTR [r12+0x48],rax
    c81d:	48 89 f0             	mov    rax,rsi
    c820:	5b                   	pop    rbx
    c821:	5d                   	pop    rbp
    c822:	41 5c                	pop    r12
    c824:	41 5d                	pop    r13
    c826:	41 5e                	pop    r14
    c828:	c3                   	ret    
    c829:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    c830:	48 c7 03 00 00 00 00 	mov    QWORD PTR [rbx],0x0
    c837:	eb a5                	jmp    c7de <hash_find_entry+0xae>
    c839:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    c840:	31 f6                	xor    esi,esi
    c842:	5b                   	pop    rbx
    c843:	48 89 f0             	mov    rax,rsi
    c846:	5d                   	pop    rbp
    c847:	41 5c                	pop    r12
    c849:	41 5d                	pop    r13
    c84b:	41 5e                	pop    r14
    c84d:	c3                   	ret    
    c84e:	66 90                	xchg   ax,ax

000000000000c850 <check_tuning.isra.0>:
    c850:	48 8b 17             	mov    rdx,QWORD PTR [rdi]
    c853:	48 8d 0d e6 92 00 00 	lea    rcx,[rip+0x92e6]        # 15b40 <default_tuning>
    c85a:	b8 01 00 00 00       	mov    eax,0x1
    c85f:	48 39 ca             	cmp    rdx,rcx
    c862:	74 61                	je     c8c5 <check_tuning.isra.0+0x75>
    c864:	f3 0f 10 42 08       	movss  xmm0,DWORD PTR [rdx+0x8]
    c869:	0f 2e 05 e4 92 00 00 	ucomiss xmm0,DWORD PTR [rip+0x92e4]        # 15b54 <default_tuning+0x14>
    c870:	76 4e                	jbe    c8c0 <check_tuning.isra.0+0x70>
    c872:	f3 0f 10 0d de 92 00 	movss  xmm1,DWORD PTR [rip+0x92de]        # 15b58 <default_tuning+0x18>
    c879:	00 
    c87a:	0f 2e c8             	ucomiss xmm1,xmm0
    c87d:	76 41                	jbe    c8c0 <check_tuning.isra.0+0x70>
    c87f:	f3 0f 10 4a 0c       	movss  xmm1,DWORD PTR [rdx+0xc]
    c884:	0f 2e 0d d1 92 00 00 	ucomiss xmm1,DWORD PTR [rip+0x92d1]        # 15b5c <default_tuning+0x1c>
    c88b:	76 33                	jbe    c8c0 <check_tuning.isra.0+0x70>
    c88d:	f3 0f 10 0a          	movss  xmm1,DWORD PTR [rdx]
    c891:	0f 2e 0d c8 92 00 00 	ucomiss xmm1,DWORD PTR [rip+0x92c8]        # 15b60 <default_tuning+0x20>
    c898:	72 26                	jb     c8c0 <check_tuning.isra.0+0x70>
    c89a:	f3 0f 58 0d b2 92 00 	addss  xmm1,DWORD PTR [rip+0x92b2]        # 15b54 <default_tuning+0x14>
    c8a1:	00 
    c8a2:	f3 0f 10 52 04       	movss  xmm2,DWORD PTR [rdx+0x4]
    c8a7:	0f 2e d1             	ucomiss xmm2,xmm1
    c8aa:	76 14                	jbe    c8c0 <check_tuning.isra.0+0x70>
    c8ac:	f3 0f 10 1d b0 92 00 	movss  xmm3,DWORD PTR [rip+0x92b0]        # 15b64 <default_tuning+0x24>
    c8b3:	00 
    c8b4:	0f 2e da             	ucomiss xmm3,xmm2
    c8b7:	72 07                	jb     c8c0 <check_tuning.isra.0+0x70>
    c8b9:	0f 2e c1             	ucomiss xmm0,xmm1
    c8bc:	77 07                	ja     c8c5 <check_tuning.isra.0+0x75>
    c8be:	66 90                	xchg   ax,ax
    c8c0:	48 89 0f             	mov    QWORD PTR [rdi],rcx
    c8c3:	31 c0                	xor    eax,eax
    c8c5:	f3 c3                	repz ret 
    c8c7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    c8ce:	00 00 

000000000000c8d0 <transfer_entries>:
    c8d0:	41 57                	push   r15
    c8d2:	41 56                	push   r14
    c8d4:	41 55                	push   r13
    c8d6:	41 54                	push   r12
    c8d8:	55                   	push   rbp
    c8d9:	53                   	push   rbx
    c8da:	48 83 ec 08          	sub    rsp,0x8
    c8de:	4c 8b 26             	mov    r12,QWORD PTR [rsi]
    c8e1:	4c 3b 66 08          	cmp    r12,QWORD PTR [rsi+0x8]
    c8e5:	0f 83 dd 00 00 00    	jae    c9c8 <transfer_entries+0xf8>
    c8eb:	48 89 fd             	mov    rbp,rdi
    c8ee:	49 89 f5             	mov    r13,rsi
    c8f1:	41 89 d6             	mov    r14d,edx
    c8f4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    c8f8:	4d 8b 3c 24          	mov    r15,QWORD PTR [r12]
    c8fc:	4d 85 ff             	test   r15,r15
    c8ff:	0f 84 b5 00 00 00    	je     c9ba <transfer_entries+0xea>
    c905:	49 8b 5c 24 08       	mov    rbx,QWORD PTR [r12+0x8]
    c90a:	48 85 db             	test   rbx,rbx
    c90d:	75 1d                	jne    c92c <transfer_entries+0x5c>
    c90f:	eb 5a                	jmp    c96b <transfer_entries+0x9b>
    c911:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    c918:	48 8b 48 08          	mov    rcx,QWORD PTR [rax+0x8]
    c91c:	48 85 d2             	test   rdx,rdx
    c91f:	48 89 4b 08          	mov    QWORD PTR [rbx+0x8],rcx
    c923:	48 89 58 08          	mov    QWORD PTR [rax+0x8],rbx
    c927:	48 89 d3             	mov    rbx,rdx
    c92a:	74 3b                	je     c967 <transfer_entries+0x97>
    c92c:	4c 8b 3b             	mov    r15,QWORD PTR [rbx]
    c92f:	48 89 ef             	mov    rdi,rbp
    c932:	4c 89 fe             	mov    rsi,r15
    c935:	e8 c6 fd ff ff       	call   c700 <safe_hasher>
    c93a:	48 83 38 00          	cmp    QWORD PTR [rax],0x0
    c93e:	48 8b 53 08          	mov    rdx,QWORD PTR [rbx+0x8]
    c942:	75 d4                	jne    c918 <transfer_entries+0x48>
    c944:	4c 89 38             	mov    QWORD PTR [rax],r15
    c947:	48 83 45 18 01       	add    QWORD PTR [rbp+0x18],0x1
    c94c:	48 85 d2             	test   rdx,rdx
    c94f:	48 c7 03 00 00 00 00 	mov    QWORD PTR [rbx],0x0
    c956:	48 8b 45 48          	mov    rax,QWORD PTR [rbp+0x48]
    c95a:	48 89 43 08          	mov    QWORD PTR [rbx+0x8],rax
    c95e:	48 89 5d 48          	mov    QWORD PTR [rbp+0x48],rbx
    c962:	48 89 d3             	mov    rbx,rdx
    c965:	75 c5                	jne    c92c <transfer_entries+0x5c>
    c967:	4d 8b 3c 24          	mov    r15,QWORD PTR [r12]
    c96b:	45 84 f6             	test   r14b,r14b
    c96e:	49 c7 44 24 08 00 00 	mov    QWORD PTR [r12+0x8],0x0
    c975:	00 00 
    c977:	75 41                	jne    c9ba <transfer_entries+0xea>
    c979:	4c 89 fe             	mov    rsi,r15
    c97c:	48 89 ef             	mov    rdi,rbp
    c97f:	e8 7c fd ff ff       	call   c700 <safe_hasher>
    c984:	48 83 38 00          	cmp    QWORD PTR [rax],0x0
    c988:	48 89 c3             	mov    rbx,rax
    c98b:	74 53                	je     c9e0 <transfer_entries+0x110>
    c98d:	48 8b 45 48          	mov    rax,QWORD PTR [rbp+0x48]
    c991:	48 85 c0             	test   rax,rax
    c994:	74 5a                	je     c9f0 <transfer_entries+0x120>
    c996:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    c99a:	48 89 55 48          	mov    QWORD PTR [rbp+0x48],rdx
    c99e:	48 8b 53 08          	mov    rdx,QWORD PTR [rbx+0x8]
    c9a2:	4c 89 38             	mov    QWORD PTR [rax],r15
    c9a5:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
    c9a9:	48 89 43 08          	mov    QWORD PTR [rbx+0x8],rax
    c9ad:	49 c7 04 24 00 00 00 	mov    QWORD PTR [r12],0x0
    c9b4:	00 
    c9b5:	49 83 6d 18 01       	sub    QWORD PTR [r13+0x18],0x1
    c9ba:	49 83 c4 10          	add    r12,0x10
    c9be:	4d 39 65 08          	cmp    QWORD PTR [r13+0x8],r12
    c9c2:	0f 87 30 ff ff ff    	ja     c8f8 <transfer_entries+0x28>
    c9c8:	48 83 c4 08          	add    rsp,0x8
    c9cc:	b8 01 00 00 00       	mov    eax,0x1
    c9d1:	5b                   	pop    rbx
    c9d2:	5d                   	pop    rbp
    c9d3:	41 5c                	pop    r12
    c9d5:	41 5d                	pop    r13
    c9d7:	41 5e                	pop    r14
    c9d9:	41 5f                	pop    r15
    c9db:	c3                   	ret    
    c9dc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    c9e0:	4c 89 38             	mov    QWORD PTR [rax],r15
    c9e3:	48 83 45 18 01       	add    QWORD PTR [rbp+0x18],0x1
    c9e8:	eb c3                	jmp    c9ad <transfer_entries+0xdd>
    c9ea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    c9f0:	bf 10 00 00 00       	mov    edi,0x10
    c9f5:	e8 ce 67 ff ff       	call   31c8 <malloc@plt>
    c9fa:	48 85 c0             	test   rax,rax
    c9fd:	75 9f                	jne    c99e <transfer_entries+0xce>
    c9ff:	48 83 c4 08          	add    rsp,0x8
    ca03:	31 c0                	xor    eax,eax
    ca05:	5b                   	pop    rbx
    ca06:	5d                   	pop    rbp
    ca07:	41 5c                	pop    r12
    ca09:	41 5d                	pop    r13
    ca0b:	41 5e                	pop    r14
    ca0d:	41 5f                	pop    r15
    ca0f:	c3                   	ret    

000000000000ca10 <hash_get_n_buckets>:
    ca10:	48 8b 47 10          	mov    rax,QWORD PTR [rdi+0x10]
    ca14:	c3                   	ret    
    ca15:	90                   	nop
    ca16:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    ca1d:	00 00 00 

000000000000ca20 <hash_get_n_buckets_used>:
    ca20:	48 8b 47 18          	mov    rax,QWORD PTR [rdi+0x18]
    ca24:	c3                   	ret    
    ca25:	90                   	nop
    ca26:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    ca2d:	00 00 00 

000000000000ca30 <hash_get_n_entries>:
    ca30:	48 8b 47 20          	mov    rax,QWORD PTR [rdi+0x20]
    ca34:	c3                   	ret    
    ca35:	90                   	nop
    ca36:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    ca3d:	00 00 00 

000000000000ca40 <hash_get_max_bucket_length>:
    ca40:	48 8b 37             	mov    rsi,QWORD PTR [rdi]
    ca43:	48 8b 7f 08          	mov    rdi,QWORD PTR [rdi+0x8]
    ca47:	31 c0                	xor    eax,eax
    ca49:	48 39 fe             	cmp    rsi,rdi
    ca4c:	73 39                	jae    ca87 <hash_get_max_bucket_length+0x47>
    ca4e:	66 90                	xchg   ax,ax
    ca50:	48 83 3e 00          	cmp    QWORD PTR [rsi],0x0
    ca54:	74 26                	je     ca7c <hash_get_max_bucket_length+0x3c>
    ca56:	48 8b 56 08          	mov    rdx,QWORD PTR [rsi+0x8]
    ca5a:	b9 01 00 00 00       	mov    ecx,0x1
    ca5f:	48 85 d2             	test   rdx,rdx
    ca62:	74 11                	je     ca75 <hash_get_max_bucket_length+0x35>
    ca64:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    ca68:	48 8b 52 08          	mov    rdx,QWORD PTR [rdx+0x8]
    ca6c:	48 83 c1 01          	add    rcx,0x1
    ca70:	48 85 d2             	test   rdx,rdx
    ca73:	75 f3                	jne    ca68 <hash_get_max_bucket_length+0x28>
    ca75:	48 39 c8             	cmp    rax,rcx
    ca78:	48 0f 42 c1          	cmovb  rax,rcx
    ca7c:	48 83 c6 10          	add    rsi,0x10
    ca80:	48 39 fe             	cmp    rsi,rdi
    ca83:	72 cb                	jb     ca50 <hash_get_max_bucket_length+0x10>
    ca85:	f3 c3                	repz ret 
    ca87:	f3 c3                	repz ret 
    ca89:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

000000000000ca90 <hash_table_ok>:
    ca90:	48 8b 0f             	mov    rcx,QWORD PTR [rdi]
    ca93:	4c 8b 47 08          	mov    r8,QWORD PTR [rdi+0x8]
    ca97:	31 d2                	xor    edx,edx
    ca99:	31 f6                	xor    esi,esi
    ca9b:	4c 39 c1             	cmp    rcx,r8
    ca9e:	73 36                	jae    cad6 <hash_table_ok+0x46>
    caa0:	48 83 39 00          	cmp    QWORD PTR [rcx],0x0
    caa4:	74 27                	je     cacd <hash_table_ok+0x3d>
    caa6:	48 8b 41 08          	mov    rax,QWORD PTR [rcx+0x8]
    caaa:	48 83 c6 01          	add    rsi,0x1
    caae:	48 83 c2 01          	add    rdx,0x1
    cab2:	48 85 c0             	test   rax,rax
    cab5:	74 16                	je     cacd <hash_table_ok+0x3d>
    cab7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    cabe:	00 00 
    cac0:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    cac4:	48 83 c2 01          	add    rdx,0x1
    cac8:	48 85 c0             	test   rax,rax
    cacb:	75 f3                	jne    cac0 <hash_table_ok+0x30>
    cacd:	48 83 c1 10          	add    rcx,0x10
    cad1:	4c 39 c1             	cmp    rcx,r8
    cad4:	72 ca                	jb     caa0 <hash_table_ok+0x10>
    cad6:	31 c0                	xor    eax,eax
    cad8:	48 39 77 18          	cmp    QWORD PTR [rdi+0x18],rsi
    cadc:	74 02                	je     cae0 <hash_table_ok+0x50>
    cade:	f3 c3                	repz ret 
    cae0:	48 39 57 20          	cmp    QWORD PTR [rdi+0x20],rdx
    cae4:	0f 94 c0             	sete   al
    cae7:	c3                   	ret    
    cae8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    caef:	00 

000000000000caf0 <hash_print_statistics>:
    caf0:	41 55                	push   r13
    caf2:	41 54                	push   r12
    caf4:	49 89 f4             	mov    r12,rsi
    caf7:	55                   	push   rbp
    caf8:	53                   	push   rbx
    caf9:	31 db                	xor    ebx,ebx
    cafb:	48 83 ec 08          	sub    rsp,0x8
    caff:	48 8b 37             	mov    rsi,QWORD PTR [rdi]
    cb02:	48 8b 4f 20          	mov    rcx,QWORD PTR [rdi+0x20]
    cb06:	48 8b 6f 10          	mov    rbp,QWORD PTR [rdi+0x10]
    cb0a:	4c 8b 6f 18          	mov    r13,QWORD PTR [rdi+0x18]
    cb0e:	48 8b 7f 08          	mov    rdi,QWORD PTR [rdi+0x8]
    cb12:	48 39 fe             	cmp    rsi,rdi
    cb15:	73 3e                	jae    cb55 <hash_print_statistics+0x65>
    cb17:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    cb1e:	00 00 
    cb20:	48 83 3e 00          	cmp    QWORD PTR [rsi],0x0
    cb24:	74 26                	je     cb4c <hash_print_statistics+0x5c>
    cb26:	48 8b 46 08          	mov    rax,QWORD PTR [rsi+0x8]
    cb2a:	ba 01 00 00 00       	mov    edx,0x1
    cb2f:	48 85 c0             	test   rax,rax
    cb32:	74 11                	je     cb45 <hash_print_statistics+0x55>
    cb34:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    cb38:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    cb3c:	48 83 c2 01          	add    rdx,0x1
    cb40:	48 85 c0             	test   rax,rax
    cb43:	75 f3                	jne    cb38 <hash_print_statistics+0x48>
    cb45:	48 39 d3             	cmp    rbx,rdx
    cb48:	48 0f 42 da          	cmovb  rbx,rdx
    cb4c:	48 83 c6 10          	add    rsi,0x10
    cb50:	48 39 fe             	cmp    rsi,rdi
    cb53:	72 cb                	jb     cb20 <hash_print_statistics+0x30>
    cb55:	48 8d 15 6d 8f 00 00 	lea    rdx,[rip+0x8f6d]        # 15ac9 <fillbuf+0x49>
    cb5c:	be 01 00 00 00       	mov    esi,0x1
    cb61:	4c 89 e7             	mov    rdi,r12
    cb64:	31 c0                	xor    eax,eax
    cb66:	e8 95 65 ff ff       	call   3100 <__fprintf_chk@plt>
    cb6b:	48 8d 15 6f 8f 00 00 	lea    rdx,[rip+0x8f6f]        # 15ae1 <fillbuf+0x61>
    cb72:	31 c0                	xor    eax,eax
    cb74:	48 89 e9             	mov    rcx,rbp
    cb77:	be 01 00 00 00       	mov    esi,0x1
    cb7c:	4c 89 e7             	mov    rdi,r12
    cb7f:	e8 7c 65 ff ff       	call   3100 <__fprintf_chk@plt>
    cb84:	4d 85 ed             	test   r13,r13
    cb87:	78 67                	js     cbf0 <hash_print_statistics+0x100>
    cb89:	66 0f ef c0          	pxor   xmm0,xmm0
    cb8d:	48 85 ed             	test   rbp,rbp
    cb90:	f2 49 0f 2a c5       	cvtsi2sd xmm0,r13
    cb95:	f2 0f 59 05 33 8e 00 	mulsd  xmm0,QWORD PTR [rip+0x8e33]        # 159d0 <short_options+0x1b00>
    cb9c:	00 
    cb9d:	78 7a                	js     cc19 <hash_print_statistics+0x129>
    cb9f:	66 0f ef c9          	pxor   xmm1,xmm1
    cba3:	f2 48 0f 2a cd       	cvtsi2sd xmm1,rbp
    cba8:	f2 0f 5e c1          	divsd  xmm0,xmm1
    cbac:	48 8d 15 65 8f 00 00 	lea    rdx,[rip+0x8f65]        # 15b18 <fillbuf+0x98>
    cbb3:	4c 89 e9             	mov    rcx,r13
    cbb6:	4c 89 e7             	mov    rdi,r12
    cbb9:	be 01 00 00 00       	mov    esi,0x1
    cbbe:	b8 01 00 00 00       	mov    eax,0x1
    cbc3:	e8 38 65 ff ff       	call   3100 <__fprintf_chk@plt>
    cbc8:	48 83 c4 08          	add    rsp,0x8
    cbcc:	48 89 d9             	mov    rcx,rbx
    cbcf:	4c 89 e7             	mov    rdi,r12
    cbd2:	5b                   	pop    rbx
    cbd3:	5d                   	pop    rbp
    cbd4:	41 5c                	pop    r12
    cbd6:	41 5d                	pop    r13
    cbd8:	48 8d 15 1a 8f 00 00 	lea    rdx,[rip+0x8f1a]        # 15af9 <fillbuf+0x79>
    cbdf:	be 01 00 00 00       	mov    esi,0x1
    cbe4:	31 c0                	xor    eax,eax
    cbe6:	e9 15 65 ff ff       	jmp    3100 <__fprintf_chk@plt>
    cbeb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    cbf0:	4c 89 e8             	mov    rax,r13
    cbf3:	4c 89 ea             	mov    rdx,r13
    cbf6:	66 0f ef c0          	pxor   xmm0,xmm0
    cbfa:	48 d1 e8             	shr    rax,1
    cbfd:	83 e2 01             	and    edx,0x1
    cc00:	48 09 d0             	or     rax,rdx
    cc03:	48 85 ed             	test   rbp,rbp
    cc06:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
    cc0b:	f2 0f 58 c0          	addsd  xmm0,xmm0
    cc0f:	f2 0f 59 05 b9 8d 00 	mulsd  xmm0,QWORD PTR [rip+0x8db9]        # 159d0 <short_options+0x1b00>
    cc16:	00 
    cc17:	79 86                	jns    cb9f <hash_print_statistics+0xaf>
    cc19:	48 89 e8             	mov    rax,rbp
    cc1c:	66 0f ef c9          	pxor   xmm1,xmm1
    cc20:	48 d1 e8             	shr    rax,1
    cc23:	83 e5 01             	and    ebp,0x1
    cc26:	48 09 e8             	or     rax,rbp
    cc29:	f2 48 0f 2a c8       	cvtsi2sd xmm1,rax
    cc2e:	f2 0f 58 c9          	addsd  xmm1,xmm1
    cc32:	e9 71 ff ff ff       	jmp    cba8 <hash_print_statistics+0xb8>
    cc37:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    cc3e:	00 00 

000000000000cc40 <hash_lookup>:
    cc40:	41 54                	push   r12
    cc42:	55                   	push   rbp
    cc43:	49 89 fc             	mov    r12,rdi
    cc46:	53                   	push   rbx
    cc47:	48 89 f5             	mov    rbp,rsi
    cc4a:	e8 b1 fa ff ff       	call   c700 <safe_hasher>
    cc4f:	48 8b 30             	mov    rsi,QWORD PTR [rax]
    cc52:	48 85 f6             	test   rsi,rsi
    cc55:	74 26                	je     cc7d <hash_lookup+0x3d>
    cc57:	48 89 c3             	mov    rbx,rax
    cc5a:	eb 07                	jmp    cc63 <hash_lookup+0x23>
    cc5c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    cc60:	48 8b 33             	mov    rsi,QWORD PTR [rbx]
    cc63:	48 39 ee             	cmp    rsi,rbp
    cc66:	74 17                	je     cc7f <hash_lookup+0x3f>
    cc68:	48 89 ef             	mov    rdi,rbp
    cc6b:	41 ff 54 24 38       	call   QWORD PTR [r12+0x38]
    cc70:	84 c0                	test   al,al
    cc72:	75 1c                	jne    cc90 <hash_lookup+0x50>
    cc74:	48 8b 5b 08          	mov    rbx,QWORD PTR [rbx+0x8]
    cc78:	48 85 db             	test   rbx,rbx
    cc7b:	75 e3                	jne    cc60 <hash_lookup+0x20>
    cc7d:	31 f6                	xor    esi,esi
    cc7f:	5b                   	pop    rbx
    cc80:	48 89 f0             	mov    rax,rsi
    cc83:	5d                   	pop    rbp
    cc84:	41 5c                	pop    r12
    cc86:	c3                   	ret    
    cc87:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    cc8e:	00 00 
    cc90:	48 8b 33             	mov    rsi,QWORD PTR [rbx]
    cc93:	5b                   	pop    rbx
    cc94:	5d                   	pop    rbp
    cc95:	48 89 f0             	mov    rax,rsi
    cc98:	41 5c                	pop    r12
    cc9a:	c3                   	ret    
    cc9b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000cca0 <hash_get_first>:
    cca0:	48 83 7f 20 00       	cmp    QWORD PTR [rdi+0x20],0x0
    cca5:	74 2c                	je     ccd3 <hash_get_first+0x33>
    cca7:	48 8b 17             	mov    rdx,QWORD PTR [rdi]
    ccaa:	48 8b 4f 08          	mov    rcx,QWORD PTR [rdi+0x8]
    ccae:	48 39 ca             	cmp    rdx,rcx
    ccb1:	73 25                	jae    ccd8 <hash_get_first+0x38>
    ccb3:	48 8b 02             	mov    rax,QWORD PTR [rdx]
    ccb6:	48 85 c0             	test   rax,rax
    ccb9:	75 1b                	jne    ccd6 <hash_get_first+0x36>
    ccbb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    ccc0:	48 83 c2 10          	add    rdx,0x10
    ccc4:	48 39 ca             	cmp    rdx,rcx
    ccc7:	73 0f                	jae    ccd8 <hash_get_first+0x38>
    ccc9:	48 8b 02             	mov    rax,QWORD PTR [rdx]
    cccc:	48 85 c0             	test   rax,rax
    cccf:	74 ef                	je     ccc0 <hash_get_first+0x20>
    ccd1:	f3 c3                	repz ret 
    ccd3:	31 c0                	xor    eax,eax
    ccd5:	c3                   	ret    
    ccd6:	f3 c3                	repz ret 
    ccd8:	48 83 ec 08          	sub    rsp,0x8
    ccdc:	e8 1f 5e ff ff       	call   2b00 <abort@plt>
    cce1:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    cce6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    cced:	00 00 00 

000000000000ccf0 <hash_get_next>:
    ccf0:	55                   	push   rbp
    ccf1:	53                   	push   rbx
    ccf2:	48 89 fd             	mov    rbp,rdi
    ccf5:	48 89 f3             	mov    rbx,rsi
    ccf8:	48 83 ec 08          	sub    rsp,0x8
    ccfc:	e8 ff f9 ff ff       	call   c700 <safe_hasher>
    cd01:	48 89 c2             	mov    rdx,rax
    cd04:	48 89 c1             	mov    rcx,rax
    cd07:	48 8b 02             	mov    rax,QWORD PTR [rdx]
    cd0a:	48 8b 52 08          	mov    rdx,QWORD PTR [rdx+0x8]
    cd0e:	48 39 d8             	cmp    rax,rbx
    cd11:	74 16                	je     cd29 <hash_get_next+0x39>
    cd13:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    cd18:	48 85 d2             	test   rdx,rdx
    cd1b:	74 11                	je     cd2e <hash_get_next+0x3e>
    cd1d:	48 8b 02             	mov    rax,QWORD PTR [rdx]
    cd20:	48 8b 52 08          	mov    rdx,QWORD PTR [rdx+0x8]
    cd24:	48 39 d8             	cmp    rax,rbx
    cd27:	75 ef                	jne    cd18 <hash_get_next+0x28>
    cd29:	48 85 d2             	test   rdx,rdx
    cd2c:	75 2a                	jne    cd58 <hash_get_next+0x68>
    cd2e:	48 8b 55 08          	mov    rdx,QWORD PTR [rbp+0x8]
    cd32:	eb 0c                	jmp    cd40 <hash_get_next+0x50>
    cd34:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    cd38:	48 8b 01             	mov    rax,QWORD PTR [rcx]
    cd3b:	48 85 c0             	test   rax,rax
    cd3e:	75 0b                	jne    cd4b <hash_get_next+0x5b>
    cd40:	48 83 c1 10          	add    rcx,0x10
    cd44:	48 39 ca             	cmp    rdx,rcx
    cd47:	77 ef                	ja     cd38 <hash_get_next+0x48>
    cd49:	31 c0                	xor    eax,eax
    cd4b:	48 83 c4 08          	add    rsp,0x8
    cd4f:	5b                   	pop    rbx
    cd50:	5d                   	pop    rbp
    cd51:	c3                   	ret    
    cd52:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    cd58:	48 8b 02             	mov    rax,QWORD PTR [rdx]
    cd5b:	48 83 c4 08          	add    rsp,0x8
    cd5f:	5b                   	pop    rbx
    cd60:	5d                   	pop    rbp
    cd61:	c3                   	ret    
    cd62:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    cd66:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    cd6d:	00 00 00 

000000000000cd70 <hash_get_entries>:
    cd70:	4c 8b 0f             	mov    r9,QWORD PTR [rdi]
    cd73:	4c 39 4f 08          	cmp    QWORD PTR [rdi+0x8],r9
    cd77:	76 59                	jbe    cdd2 <hash_get_entries+0x62>
    cd79:	45 31 c0             	xor    r8d,r8d
    cd7c:	49 8b 09             	mov    rcx,QWORD PTR [r9]
    cd7f:	48 85 c9             	test   rcx,rcx
    cd82:	74 39                	je     cdbd <hash_get_entries+0x4d>
    cd84:	4c 39 c2             	cmp    rdx,r8
    cd87:	76 3e                	jbe    cdc7 <hash_get_entries+0x57>
    cd89:	4a 89 0c c6          	mov    QWORD PTR [rsi+r8*8],rcx
    cd8d:	49 8b 49 08          	mov    rcx,QWORD PTR [r9+0x8]
    cd91:	49 8d 40 01          	lea    rax,[r8+0x1]
    cd95:	48 85 c9             	test   rcx,rcx
    cd98:	74 20                	je     cdba <hash_get_entries+0x4a>
    cd9a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    cda0:	48 39 c2             	cmp    rdx,rax
    cda3:	74 2b                	je     cdd0 <hash_get_entries+0x60>
    cda5:	4c 8b 01             	mov    r8,QWORD PTR [rcx]
    cda8:	48 83 c0 01          	add    rax,0x1
    cdac:	4c 89 44 c6 f8       	mov    QWORD PTR [rsi+rax*8-0x8],r8
    cdb1:	48 8b 49 08          	mov    rcx,QWORD PTR [rcx+0x8]
    cdb5:	48 85 c9             	test   rcx,rcx
    cdb8:	75 e6                	jne    cda0 <hash_get_entries+0x30>
    cdba:	49 89 c0             	mov    r8,rax
    cdbd:	49 83 c1 10          	add    r9,0x10
    cdc1:	4c 39 4f 08          	cmp    QWORD PTR [rdi+0x8],r9
    cdc5:	77 b5                	ja     cd7c <hash_get_entries+0xc>
    cdc7:	4c 89 c0             	mov    rax,r8
    cdca:	c3                   	ret    
    cdcb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    cdd0:	f3 c3                	repz ret 
    cdd2:	31 c0                	xor    eax,eax
    cdd4:	c3                   	ret    
    cdd5:	90                   	nop
    cdd6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    cddd:	00 00 00 

000000000000cde0 <hash_do_for_each>:
    cde0:	41 57                	push   r15
    cde2:	41 56                	push   r14
    cde4:	41 55                	push   r13
    cde6:	41 54                	push   r12
    cde8:	55                   	push   rbp
    cde9:	53                   	push   rbx
    cdea:	48 83 ec 08          	sub    rsp,0x8
    cdee:	4c 8b 37             	mov    r14,QWORD PTR [rdi]
    cdf1:	4c 39 77 08          	cmp    QWORD PTR [rdi+0x8],r14
    cdf5:	76 4f                	jbe    ce46 <hash_do_for_each+0x66>
    cdf7:	49 89 d5             	mov    r13,rdx
    cdfa:	49 89 f4             	mov    r12,rsi
    cdfd:	49 89 ff             	mov    r15,rdi
    ce00:	31 ed                	xor    ebp,ebp
    ce02:	49 8b 3e             	mov    rdi,QWORD PTR [r14]
    ce05:	48 85 ff             	test   rdi,rdi
    ce08:	74 20                	je     ce2a <hash_do_for_each+0x4a>
    ce0a:	4c 89 f3             	mov    rbx,r14
    ce0d:	eb 04                	jmp    ce13 <hash_do_for_each+0x33>
    ce0f:	90                   	nop
    ce10:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    ce13:	4c 89 ee             	mov    rsi,r13
    ce16:	41 ff d4             	call   r12
    ce19:	84 c0                	test   al,al
    ce1b:	74 17                	je     ce34 <hash_do_for_each+0x54>
    ce1d:	48 8b 5b 08          	mov    rbx,QWORD PTR [rbx+0x8]
    ce21:	48 83 c5 01          	add    rbp,0x1
    ce25:	48 85 db             	test   rbx,rbx
    ce28:	75 e6                	jne    ce10 <hash_do_for_each+0x30>
    ce2a:	49 83 c6 10          	add    r14,0x10
    ce2e:	4d 39 77 08          	cmp    QWORD PTR [r15+0x8],r14
    ce32:	77 ce                	ja     ce02 <hash_do_for_each+0x22>
    ce34:	48 83 c4 08          	add    rsp,0x8
    ce38:	48 89 e8             	mov    rax,rbp
    ce3b:	5b                   	pop    rbx
    ce3c:	5d                   	pop    rbp
    ce3d:	41 5c                	pop    r12
    ce3f:	41 5d                	pop    r13
    ce41:	41 5e                	pop    r14
    ce43:	41 5f                	pop    r15
    ce45:	c3                   	ret    
    ce46:	31 ed                	xor    ebp,ebp
    ce48:	eb ea                	jmp    ce34 <hash_do_for_each+0x54>
    ce4a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

000000000000ce50 <hash_string>:
    ce50:	0f b6 0f             	movzx  ecx,BYTE PTR [rdi]
    ce53:	31 d2                	xor    edx,edx
    ce55:	84 c9                	test   cl,cl
    ce57:	74 24                	je     ce7d <hash_string+0x2d>
    ce59:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    ce60:	48 89 d0             	mov    rax,rdx
    ce63:	48 83 c7 01          	add    rdi,0x1
    ce67:	48 c1 e0 05          	shl    rax,0x5
    ce6b:	48 29 d0             	sub    rax,rdx
    ce6e:	31 d2                	xor    edx,edx
    ce70:	48 01 c8             	add    rax,rcx
    ce73:	0f b6 0f             	movzx  ecx,BYTE PTR [rdi]
    ce76:	48 f7 f6             	div    rsi
    ce79:	84 c9                	test   cl,cl
    ce7b:	75 e3                	jne    ce60 <hash_string+0x10>
    ce7d:	48 89 d0             	mov    rax,rdx
    ce80:	c3                   	ret    
    ce81:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    ce86:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    ce8d:	00 00 00 

000000000000ce90 <hash_reset_tuning>:
    ce90:	48 b8 00 00 00 00 00 	movabs rax,0x3f80000000000000
    ce97:	00 80 3f 
    ce9a:	c6 47 10 00          	mov    BYTE PTR [rdi+0x10],0x0
    ce9e:	48 89 07             	mov    QWORD PTR [rdi],rax
    cea1:	48 b8 cd cc 4c 3f f4 	movabs rax,0x3fb4fdf43f4ccccd
    cea8:	fd b4 3f 
    ceab:	48 89 47 08          	mov    QWORD PTR [rdi+0x8],rax
    ceaf:	c3                   	ret    

000000000000ceb0 <hash_initialize>:
    ceb0:	41 57                	push   r15
    ceb2:	41 56                	push   r14
    ceb4:	48 8d 05 25 f8 ff ff 	lea    rax,[rip+0xfffffffffffff825]        # c6e0 <raw_hasher>
    cebb:	41 55                	push   r13
    cebd:	41 54                	push   r12
    cebf:	49 89 d4             	mov    r12,rdx
    cec2:	55                   	push   rbp
    cec3:	53                   	push   rbx
    cec4:	49 89 cd             	mov    r13,rcx
    cec7:	48 89 fd             	mov    rbp,rdi
    ceca:	bf 50 00 00 00       	mov    edi,0x50
    cecf:	49 89 f7             	mov    r15,rsi
    ced2:	48 83 ec 08          	sub    rsp,0x8
    ced6:	48 85 d2             	test   rdx,rdx
    ced9:	4d 89 c6             	mov    r14,r8
    cedc:	4c 0f 44 e0          	cmove  r12,rax
    cee0:	48 8d 05 09 f8 ff ff 	lea    rax,[rip+0xfffffffffffff809]        # c6f0 <raw_comparator>
    cee7:	48 85 c9             	test   rcx,rcx
    ceea:	4c 0f 44 e8          	cmove  r13,rax
    ceee:	e8 d5 62 ff ff       	call   31c8 <malloc@plt>
    cef3:	48 85 c0             	test   rax,rax
    cef6:	48 89 c3             	mov    rbx,rax
    cef9:	0f 84 ab 00 00 00    	je     cfaa <hash_initialize+0xfa>
    ceff:	4d 85 ff             	test   r15,r15
    cf02:	48 8d 78 28          	lea    rdi,[rax+0x28]
    cf06:	0f 84 b4 00 00 00    	je     cfc0 <hash_initialize+0x110>
    cf0c:	4c 89 78 28          	mov    QWORD PTR [rax+0x28],r15
    cf10:	e8 3b f9 ff ff       	call   c850 <check_tuning.isra.0>
    cf15:	84 c0                	test   al,al
    cf17:	0f 84 83 00 00 00    	je     cfa0 <hash_initialize+0xf0>
    cf1d:	41 80 7f 10 00       	cmp    BYTE PTR [r15+0x10],0x0
    cf22:	0f 84 f8 00 00 00    	je     d020 <hash_initialize+0x170>
    cf28:	48 89 ef             	mov    rdi,rbp
    cf2b:	e8 10 f7 ff ff       	call   c640 <next_prime>
    cf30:	ba 08 00 00 00       	mov    edx,0x8
    cf35:	48 89 c5             	mov    rbp,rax
    cf38:	31 c9                	xor    ecx,ecx
    cf3a:	48 89 d0             	mov    rax,rdx
    cf3d:	48 f7 e5             	mul    rbp
    cf40:	0f 80 14 01 00 00    	jo     d05a <hash_initialize+0x1aa>
    cf46:	48 85 c0             	test   rax,rax
    cf49:	78 55                	js     cfa0 <hash_initialize+0xf0>
    cf4b:	48 85 c9             	test   rcx,rcx
    cf4e:	75 50                	jne    cfa0 <hash_initialize+0xf0>
    cf50:	48 85 ed             	test   rbp,rbp
    cf53:	48 89 6b 10          	mov    QWORD PTR [rbx+0x10],rbp
    cf57:	74 47                	je     cfa0 <hash_initialize+0xf0>
    cf59:	be 10 00 00 00       	mov    esi,0x10
    cf5e:	48 89 ef             	mov    rdi,rbp
    cf61:	e8 ba 5e ff ff       	call   2e20 <calloc@plt>
    cf66:	48 85 c0             	test   rax,rax
    cf69:	48 89 03             	mov    QWORD PTR [rbx],rax
    cf6c:	74 32                	je     cfa0 <hash_initialize+0xf0>
    cf6e:	48 c1 e5 04          	shl    rbp,0x4
    cf72:	48 c7 43 18 00 00 00 	mov    QWORD PTR [rbx+0x18],0x0
    cf79:	00 
    cf7a:	48 c7 43 20 00 00 00 	mov    QWORD PTR [rbx+0x20],0x0
    cf81:	00 
    cf82:	48 01 c5             	add    rbp,rax
    cf85:	4c 89 63 30          	mov    QWORD PTR [rbx+0x30],r12
    cf89:	4c 89 6b 38          	mov    QWORD PTR [rbx+0x38],r13
    cf8d:	48 89 6b 08          	mov    QWORD PTR [rbx+0x8],rbp
    cf91:	4c 89 73 40          	mov    QWORD PTR [rbx+0x40],r14
    cf95:	48 c7 43 48 00 00 00 	mov    QWORD PTR [rbx+0x48],0x0
    cf9c:	00 
    cf9d:	eb 0b                	jmp    cfaa <hash_initialize+0xfa>
    cf9f:	90                   	nop
    cfa0:	48 89 df             	mov    rdi,rbx
    cfa3:	31 db                	xor    ebx,ebx
    cfa5:	e8 16 62 ff ff       	call   31c0 <free@plt>
    cfaa:	48 83 c4 08          	add    rsp,0x8
    cfae:	48 89 d8             	mov    rax,rbx
    cfb1:	5b                   	pop    rbx
    cfb2:	5d                   	pop    rbp
    cfb3:	41 5c                	pop    r12
    cfb5:	41 5d                	pop    r13
    cfb7:	41 5e                	pop    r14
    cfb9:	41 5f                	pop    r15
    cfbb:	c3                   	ret    
    cfbc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    cfc0:	48 8d 05 79 8b 00 00 	lea    rax,[rip+0x8b79]        # 15b40 <default_tuning>
    cfc7:	48 89 43 28          	mov    QWORD PTR [rbx+0x28],rax
    cfcb:	e8 80 f8 ff ff       	call   c850 <check_tuning.isra.0>
    cfd0:	84 c0                	test   al,al
    cfd2:	f3 0f 10 0d 8e 8b 00 	movss  xmm1,DWORD PTR [rip+0x8b8e]        # 15b68 <default_tuning+0x28>
    cfd9:	00 
    cfda:	74 c4                	je     cfa0 <hash_initialize+0xf0>
    cfdc:	48 85 ed             	test   rbp,rbp
    cfdf:	78 4a                	js     d02b <hash_initialize+0x17b>
    cfe1:	66 0f ef c0          	pxor   xmm0,xmm0
    cfe5:	f3 48 0f 2a c5       	cvtsi2ss xmm0,rbp
    cfea:	f3 0f 5e c1          	divss  xmm0,xmm1
    cfee:	0f 2e 05 77 8b 00 00 	ucomiss xmm0,DWORD PTR [rip+0x8b77]        # 15b6c <default_tuning+0x2c>
    cff5:	73 a9                	jae    cfa0 <hash_initialize+0xf0>
    cff7:	0f 2e 05 72 8b 00 00 	ucomiss xmm0,DWORD PTR [rip+0x8b72]        # 15b70 <default_tuning+0x30>
    cffe:	72 50                	jb     d050 <hash_initialize+0x1a0>
    d000:	f3 0f 5c 05 68 8b 00 	subss  xmm0,DWORD PTR [rip+0x8b68]        # 15b70 <default_tuning+0x30>
    d007:	00 
    d008:	48 b8 00 00 00 00 00 	movabs rax,0x8000000000000000
    d00f:	00 00 80 
    d012:	f3 48 0f 2c e8       	cvttss2si rbp,xmm0
    d017:	48 31 c5             	xor    rbp,rax
    d01a:	e9 09 ff ff ff       	jmp    cf28 <hash_initialize+0x78>
    d01f:	90                   	nop
    d020:	48 85 ed             	test   rbp,rbp
    d023:	f3 41 0f 10 4f 08    	movss  xmm1,DWORD PTR [r15+0x8]
    d029:	79 b6                	jns    cfe1 <hash_initialize+0x131>
    d02b:	48 89 e8             	mov    rax,rbp
    d02e:	66 0f ef c0          	pxor   xmm0,xmm0
    d032:	48 d1 e8             	shr    rax,1
    d035:	83 e5 01             	and    ebp,0x1
    d038:	48 09 e8             	or     rax,rbp
    d03b:	f3 48 0f 2a c0       	cvtsi2ss xmm0,rax
    d040:	f3 0f 58 c0          	addss  xmm0,xmm0
    d044:	eb a4                	jmp    cfea <hash_initialize+0x13a>
    d046:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    d04d:	00 00 00 
    d050:	f3 48 0f 2c e8       	cvttss2si rbp,xmm0
    d055:	e9 ce fe ff ff       	jmp    cf28 <hash_initialize+0x78>
    d05a:	b9 01 00 00 00       	mov    ecx,0x1
    d05f:	e9 e2 fe ff ff       	jmp    cf46 <hash_initialize+0x96>
    d064:	66 90                	xchg   ax,ax
    d066:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    d06d:	00 00 00 

000000000000d070 <hash_clear>:
    d070:	41 54                	push   r12
    d072:	55                   	push   rbp
    d073:	48 89 fd             	mov    rbp,rdi
    d076:	53                   	push   rbx
    d077:	4c 8b 27             	mov    r12,QWORD PTR [rdi]
    d07a:	4c 3b 67 08          	cmp    r12,QWORD PTR [rdi+0x8]
    d07e:	73 6b                	jae    d0eb <hash_clear+0x7b>
    d080:	49 83 3c 24 00       	cmp    QWORD PTR [r12],0x0
    d085:	74 5a                	je     d0e1 <hash_clear+0x71>
    d087:	49 8b 5c 24 08       	mov    rbx,QWORD PTR [r12+0x8]
    d08c:	48 8b 45 40          	mov    rax,QWORD PTR [rbp+0x40]
    d090:	48 85 db             	test   rbx,rbx
    d093:	74 30                	je     d0c5 <hash_clear+0x55>
    d095:	0f 1f 00             	nop    DWORD PTR [rax]
    d098:	48 85 c0             	test   rax,rax
    d09b:	74 09                	je     d0a6 <hash_clear+0x36>
    d09d:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    d0a0:	ff d0                	call   rax
    d0a2:	48 8b 45 40          	mov    rax,QWORD PTR [rbp+0x40]
    d0a6:	48 8b 53 08          	mov    rdx,QWORD PTR [rbx+0x8]
    d0aa:	48 8b 4d 48          	mov    rcx,QWORD PTR [rbp+0x48]
    d0ae:	48 c7 03 00 00 00 00 	mov    QWORD PTR [rbx],0x0
    d0b5:	48 85 d2             	test   rdx,rdx
    d0b8:	48 89 4b 08          	mov    QWORD PTR [rbx+0x8],rcx
    d0bc:	48 89 5d 48          	mov    QWORD PTR [rbp+0x48],rbx
    d0c0:	48 89 d3             	mov    rbx,rdx
    d0c3:	75 d3                	jne    d098 <hash_clear+0x28>
    d0c5:	48 85 c0             	test   rax,rax
    d0c8:	74 06                	je     d0d0 <hash_clear+0x60>
    d0ca:	49 8b 3c 24          	mov    rdi,QWORD PTR [r12]
    d0ce:	ff d0                	call   rax
    d0d0:	49 c7 04 24 00 00 00 	mov    QWORD PTR [r12],0x0
    d0d7:	00 
    d0d8:	49 c7 44 24 08 00 00 	mov    QWORD PTR [r12+0x8],0x0
    d0df:	00 00 
    d0e1:	49 83 c4 10          	add    r12,0x10
    d0e5:	4c 39 65 08          	cmp    QWORD PTR [rbp+0x8],r12
    d0e9:	77 95                	ja     d080 <hash_clear+0x10>
    d0eb:	48 c7 45 18 00 00 00 	mov    QWORD PTR [rbp+0x18],0x0
    d0f2:	00 
    d0f3:	48 c7 45 20 00 00 00 	mov    QWORD PTR [rbp+0x20],0x0
    d0fa:	00 
    d0fb:	5b                   	pop    rbx
    d0fc:	5d                   	pop    rbp
    d0fd:	41 5c                	pop    r12
    d0ff:	c3                   	ret    

000000000000d100 <hash_free>:
    d100:	41 54                	push   r12
    d102:	55                   	push   rbp
    d103:	49 89 fc             	mov    r12,rdi
    d106:	53                   	push   rbx
    d107:	48 83 7f 40 00       	cmp    QWORD PTR [rdi+0x40],0x0
    d10c:	48 8b 2f             	mov    rbp,QWORD PTR [rdi]
    d10f:	48 8b 47 08          	mov    rax,QWORD PTR [rdi+0x8]
    d113:	74 4e                	je     d163 <hash_free+0x63>
    d115:	48 83 7f 20 00       	cmp    QWORD PTR [rdi+0x20],0x0
    d11a:	74 47                	je     d163 <hash_free+0x63>
    d11c:	48 39 c5             	cmp    rbp,rax
    d11f:	73 7b                	jae    d19c <hash_free+0x9c>
    d121:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    d128:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    d12c:	48 85 ff             	test   rdi,rdi
    d12f:	74 25                	je     d156 <hash_free+0x56>
    d131:	48 89 eb             	mov    rbx,rbp
    d134:	eb 0d                	jmp    d143 <hash_free+0x43>
    d136:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    d13d:	00 00 00 
    d140:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    d143:	41 ff 54 24 40       	call   QWORD PTR [r12+0x40]
    d148:	48 8b 5b 08          	mov    rbx,QWORD PTR [rbx+0x8]
    d14c:	48 85 db             	test   rbx,rbx
    d14f:	75 ef                	jne    d140 <hash_free+0x40>
    d151:	49 8b 44 24 08       	mov    rax,QWORD PTR [r12+0x8]
    d156:	48 83 c5 10          	add    rbp,0x10
    d15a:	48 39 e8             	cmp    rax,rbp
    d15d:	77 c9                	ja     d128 <hash_free+0x28>
    d15f:	49 8b 2c 24          	mov    rbp,QWORD PTR [r12]
    d163:	48 39 c5             	cmp    rbp,rax
    d166:	73 34                	jae    d19c <hash_free+0x9c>
    d168:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    d16f:	00 
    d170:	48 8b 7d 08          	mov    rdi,QWORD PTR [rbp+0x8]
    d174:	48 85 ff             	test   rdi,rdi
    d177:	74 18                	je     d191 <hash_free+0x91>
    d179:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    d180:	48 8b 5f 08          	mov    rbx,QWORD PTR [rdi+0x8]
    d184:	e8 37 60 ff ff       	call   31c0 <free@plt>
    d189:	48 85 db             	test   rbx,rbx
    d18c:	48 89 df             	mov    rdi,rbx
    d18f:	75 ef                	jne    d180 <hash_free+0x80>
    d191:	48 83 c5 10          	add    rbp,0x10
    d195:	49 39 6c 24 08       	cmp    QWORD PTR [r12+0x8],rbp
    d19a:	77 d4                	ja     d170 <hash_free+0x70>
    d19c:	49 8b 7c 24 48       	mov    rdi,QWORD PTR [r12+0x48]
    d1a1:	48 85 ff             	test   rdi,rdi
    d1a4:	74 1b                	je     d1c1 <hash_free+0xc1>
    d1a6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    d1ad:	00 00 00 
    d1b0:	48 8b 5f 08          	mov    rbx,QWORD PTR [rdi+0x8]
    d1b4:	e8 07 60 ff ff       	call   31c0 <free@plt>
    d1b9:	48 85 db             	test   rbx,rbx
    d1bc:	48 89 df             	mov    rdi,rbx
    d1bf:	75 ef                	jne    d1b0 <hash_free+0xb0>
    d1c1:	49 8b 3c 24          	mov    rdi,QWORD PTR [r12]
    d1c5:	e8 f6 5f ff ff       	call   31c0 <free@plt>
    d1ca:	5b                   	pop    rbx
    d1cb:	4c 89 e7             	mov    rdi,r12
    d1ce:	5d                   	pop    rbp
    d1cf:	41 5c                	pop    r12
    d1d1:	e9 ea 5f ff ff       	jmp    31c0 <free@plt>
    d1d6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    d1dd:	00 00 00 

000000000000d1e0 <hash_rehash>:
    d1e0:	41 54                	push   r12
    d1e2:	55                   	push   rbp
    d1e3:	48 89 fd             	mov    rbp,rdi
    d1e6:	53                   	push   rbx
    d1e7:	48 83 ec 60          	sub    rsp,0x60
    d1eb:	4c 8b 67 28          	mov    r12,QWORD PTR [rdi+0x28]
    d1ef:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d1f6:	00 00 
    d1f8:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
    d1fd:	31 c0                	xor    eax,eax
    d1ff:	41 80 7c 24 10 00    	cmp    BYTE PTR [r12+0x10],0x0
    d205:	75 51                	jne    d258 <hash_rehash+0x78>
    d207:	48 85 f6             	test   rsi,rsi
    d20a:	0f 88 78 01 00 00    	js     d388 <hash_rehash+0x1a8>
    d210:	66 0f ef c0          	pxor   xmm0,xmm0
    d214:	f3 48 0f 2a c6       	cvtsi2ss xmm0,rsi
    d219:	f3 41 0f 5e 44 24 08 	divss  xmm0,DWORD PTR [r12+0x8]
    d220:	0f 2e 05 45 89 00 00 	ucomiss xmm0,DWORD PTR [rip+0x8945]        # 15b6c <default_tuning+0x2c>
    d227:	0f 83 33 01 00 00    	jae    d360 <hash_rehash+0x180>
    d22d:	0f 2e 05 3c 89 00 00 	ucomiss xmm0,DWORD PTR [rip+0x893c]        # 15b70 <default_tuning+0x30>
    d234:	0f 82 76 01 00 00    	jb     d3b0 <hash_rehash+0x1d0>
    d23a:	f3 0f 5c 05 2e 89 00 	subss  xmm0,DWORD PTR [rip+0x892e]        # 15b70 <default_tuning+0x30>
    d241:	00 
    d242:	48 b8 00 00 00 00 00 	movabs rax,0x8000000000000000
    d249:	00 00 80 
    d24c:	f3 48 0f 2c f0       	cvttss2si rsi,xmm0
    d251:	48 31 c6             	xor    rsi,rax
    d254:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    d258:	48 89 f7             	mov    rdi,rsi
    d25b:	e8 e0 f3 ff ff       	call   c640 <next_prime>
    d260:	ba 08 00 00 00       	mov    edx,0x8
    d265:	48 89 c3             	mov    rbx,rax
    d268:	31 c9                	xor    ecx,ecx
    d26a:	48 89 d0             	mov    rax,rdx
    d26d:	48 f7 e3             	mul    rbx
    d270:	0f 80 99 01 00 00    	jo     d40f <hash_rehash+0x22f>
    d276:	48 85 c0             	test   rax,rax
    d279:	b8 01 00 00 00       	mov    eax,0x1
    d27e:	48 0f 48 c8          	cmovs  rcx,rax
    d282:	48 85 db             	test   rbx,rbx
    d285:	0f 84 d5 00 00 00    	je     d360 <hash_rehash+0x180>
    d28b:	83 e1 01             	and    ecx,0x1
    d28e:	0f 85 cc 00 00 00    	jne    d360 <hash_rehash+0x180>
    d294:	48 39 5d 10          	cmp    QWORD PTR [rbp+0x10],rbx
    d298:	0f 84 22 01 00 00    	je     d3c0 <hash_rehash+0x1e0>
    d29e:	be 10 00 00 00       	mov    esi,0x10
    d2a3:	48 89 df             	mov    rdi,rbx
    d2a6:	e8 75 5b ff ff       	call   2e20 <calloc@plt>
    d2ab:	48 85 c0             	test   rax,rax
    d2ae:	48 89 04 24          	mov    QWORD PTR [rsp],rax
    d2b2:	0f 84 a8 00 00 00    	je     d360 <hash_rehash+0x180>
    d2b8:	48 89 5c 24 10       	mov    QWORD PTR [rsp+0x10],rbx
    d2bd:	48 c1 e3 04          	shl    rbx,0x4
    d2c1:	4c 89 64 24 28       	mov    QWORD PTR [rsp+0x28],r12
    d2c6:	48 01 c3             	add    rbx,rax
    d2c9:	48 8b 45 30          	mov    rax,QWORD PTR [rbp+0x30]
    d2cd:	49 89 e4             	mov    r12,rsp
    d2d0:	31 d2                	xor    edx,edx
    d2d2:	48 89 ee             	mov    rsi,rbp
    d2d5:	4c 89 e7             	mov    rdi,r12
    d2d8:	48 89 5c 24 08       	mov    QWORD PTR [rsp+0x8],rbx
    d2dd:	48 c7 44 24 18 00 00 	mov    QWORD PTR [rsp+0x18],0x0
    d2e4:	00 00 
    d2e6:	48 89 44 24 30       	mov    QWORD PTR [rsp+0x30],rax
    d2eb:	48 8b 45 38          	mov    rax,QWORD PTR [rbp+0x38]
    d2ef:	48 c7 44 24 20 00 00 	mov    QWORD PTR [rsp+0x20],0x0
    d2f6:	00 00 
    d2f8:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
    d2fd:	48 8b 45 40          	mov    rax,QWORD PTR [rbp+0x40]
    d301:	48 89 44 24 40       	mov    QWORD PTR [rsp+0x40],rax
    d306:	48 8b 45 48          	mov    rax,QWORD PTR [rbp+0x48]
    d30a:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
    d30f:	e8 bc f5 ff ff       	call   c8d0 <transfer_entries>
    d314:	84 c0                	test   al,al
    d316:	89 c3                	mov    ebx,eax
    d318:	0f 85 b2 00 00 00    	jne    d3d0 <hash_rehash+0x1f0>
    d31e:	48 8b 44 24 48       	mov    rax,QWORD PTR [rsp+0x48]
    d323:	ba 01 00 00 00       	mov    edx,0x1
    d328:	4c 89 e6             	mov    rsi,r12
    d32b:	48 89 ef             	mov    rdi,rbp
    d32e:	48 89 45 48          	mov    QWORD PTR [rbp+0x48],rax
    d332:	e8 99 f5 ff ff       	call   c8d0 <transfer_entries>
    d337:	84 c0                	test   al,al
    d339:	0f 84 da 00 00 00    	je     d419 <hash_rehash+0x239>
    d33f:	31 d2                	xor    edx,edx
    d341:	4c 89 e6             	mov    rsi,r12
    d344:	48 89 ef             	mov    rdi,rbp
    d347:	e8 84 f5 ff ff       	call   c8d0 <transfer_entries>
    d34c:	84 c0                	test   al,al
    d34e:	0f 84 c5 00 00 00    	je     d419 <hash_rehash+0x239>
    d354:	48 8b 3c 24          	mov    rdi,QWORD PTR [rsp]
    d358:	e8 63 5e ff ff       	call   31c0 <free@plt>
    d35d:	eb 03                	jmp    d362 <hash_rehash+0x182>
    d35f:	90                   	nop
    d360:	31 db                	xor    ebx,ebx
    d362:	48 8b 4c 24 58       	mov    rcx,QWORD PTR [rsp+0x58]
    d367:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    d36e:	00 00 
    d370:	89 d8                	mov    eax,ebx
    d372:	0f 85 92 00 00 00    	jne    d40a <hash_rehash+0x22a>
    d378:	48 83 c4 60          	add    rsp,0x60
    d37c:	5b                   	pop    rbx
    d37d:	5d                   	pop    rbp
    d37e:	41 5c                	pop    r12
    d380:	c3                   	ret    
    d381:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    d388:	48 89 f0             	mov    rax,rsi
    d38b:	66 0f ef c0          	pxor   xmm0,xmm0
    d38f:	48 d1 e8             	shr    rax,1
    d392:	83 e6 01             	and    esi,0x1
    d395:	48 09 f0             	or     rax,rsi
    d398:	f3 48 0f 2a c0       	cvtsi2ss xmm0,rax
    d39d:	f3 0f 58 c0          	addss  xmm0,xmm0
    d3a1:	e9 73 fe ff ff       	jmp    d219 <hash_rehash+0x39>
    d3a6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    d3ad:	00 00 00 
    d3b0:	f3 48 0f 2c f0       	cvttss2si rsi,xmm0
    d3b5:	e9 9e fe ff ff       	jmp    d258 <hash_rehash+0x78>
    d3ba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    d3c0:	bb 01 00 00 00       	mov    ebx,0x1
    d3c5:	eb 9b                	jmp    d362 <hash_rehash+0x182>
    d3c7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    d3ce:	00 00 
    d3d0:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    d3d4:	e8 e7 5d ff ff       	call   31c0 <free@plt>
    d3d9:	48 8b 04 24          	mov    rax,QWORD PTR [rsp]
    d3dd:	48 89 45 00          	mov    QWORD PTR [rbp+0x0],rax
    d3e1:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
    d3e6:	48 89 45 08          	mov    QWORD PTR [rbp+0x8],rax
    d3ea:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
    d3ef:	48 89 45 10          	mov    QWORD PTR [rbp+0x10],rax
    d3f3:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
    d3f8:	48 89 45 18          	mov    QWORD PTR [rbp+0x18],rax
    d3fc:	48 8b 44 24 48       	mov    rax,QWORD PTR [rsp+0x48]
    d401:	48 89 45 48          	mov    QWORD PTR [rbp+0x48],rax
    d405:	e9 58 ff ff ff       	jmp    d362 <hash_rehash+0x182>
    d40a:	e8 91 58 ff ff       	call   2ca0 <__stack_chk_fail@plt>
    d40f:	b9 01 00 00 00       	mov    ecx,0x1
    d414:	e9 5d fe ff ff       	jmp    d276 <hash_rehash+0x96>
    d419:	e8 e2 56 ff ff       	call   2b00 <abort@plt>
    d41e:	66 90                	xchg   ax,ax

000000000000d420 <hash_insert_if_absent>:
    d420:	41 55                	push   r13
    d422:	41 54                	push   r12
    d424:	55                   	push   rbp
    d425:	53                   	push   rbx
    d426:	48 83 ec 18          	sub    rsp,0x18
    d42a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d431:	00 00 
    d433:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    d438:	31 c0                	xor    eax,eax
    d43a:	48 85 f6             	test   rsi,rsi
    d43d:	0f 84 ba 01 00 00    	je     d5fd <hash_insert_if_absent+0x1dd>
    d443:	49 89 e4             	mov    r12,rsp
    d446:	31 c9                	xor    ecx,ecx
    d448:	49 89 d5             	mov    r13,rdx
    d44b:	4c 89 e2             	mov    rdx,r12
    d44e:	48 89 fb             	mov    rbx,rdi
    d451:	48 89 f5             	mov    rbp,rsi
    d454:	e8 d7 f2 ff ff       	call   c730 <hash_find_entry>
    d459:	48 85 c0             	test   rax,rax
    d45c:	48 89 c2             	mov    rdx,rax
    d45f:	74 2f                	je     d490 <hash_insert_if_absent+0x70>
    d461:	31 c0                	xor    eax,eax
    d463:	4d 85 ed             	test   r13,r13
    d466:	74 04                	je     d46c <hash_insert_if_absent+0x4c>
    d468:	49 89 55 00          	mov    QWORD PTR [r13+0x0],rdx
    d46c:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
    d471:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    d478:	00 00 
    d47a:	0f 85 1f 02 00 00    	jne    d69f <hash_insert_if_absent+0x27f>
    d480:	48 83 c4 18          	add    rsp,0x18
    d484:	5b                   	pop    rbx
    d485:	5d                   	pop    rbp
    d486:	41 5c                	pop    r12
    d488:	41 5d                	pop    r13
    d48a:	c3                   	ret    
    d48b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    d490:	48 8b 43 18          	mov    rax,QWORD PTR [rbx+0x18]
    d494:	48 85 c0             	test   rax,rax
    d497:	78 77                	js     d510 <hash_insert_if_absent+0xf0>
    d499:	66 0f ef c9          	pxor   xmm1,xmm1
    d49d:	48 8b 53 28          	mov    rdx,QWORD PTR [rbx+0x28]
    d4a1:	f3 48 0f 2a c8       	cvtsi2ss xmm1,rax
    d4a6:	48 8b 43 10          	mov    rax,QWORD PTR [rbx+0x10]
    d4aa:	48 85 c0             	test   rax,rax
    d4ad:	0f 88 87 00 00 00    	js     d53a <hash_insert_if_absent+0x11a>
    d4b3:	66 0f ef c0          	pxor   xmm0,xmm0
    d4b7:	f3 48 0f 2a c0       	cvtsi2ss xmm0,rax
    d4bc:	f3 0f 59 42 08       	mulss  xmm0,DWORD PTR [rdx+0x8]
    d4c1:	0f 2e c8             	ucomiss xmm1,xmm0
    d4c4:	0f 87 96 00 00 00    	ja     d560 <hash_insert_if_absent+0x140>
    d4ca:	4c 8b 24 24          	mov    r12,QWORD PTR [rsp]
    d4ce:	49 83 3c 24 00       	cmp    QWORD PTR [r12],0x0
    d4d3:	0f 84 2f 01 00 00    	je     d608 <hash_insert_if_absent+0x1e8>
    d4d9:	48 8b 43 48          	mov    rax,QWORD PTR [rbx+0x48]
    d4dd:	48 85 c0             	test   rax,rax
    d4e0:	0f 84 3a 01 00 00    	je     d620 <hash_insert_if_absent+0x200>
    d4e6:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    d4ea:	48 89 53 48          	mov    QWORD PTR [rbx+0x48],rdx
    d4ee:	49 8b 54 24 08       	mov    rdx,QWORD PTR [r12+0x8]
    d4f3:	48 89 28             	mov    QWORD PTR [rax],rbp
    d4f6:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
    d4fa:	49 89 44 24 08       	mov    QWORD PTR [r12+0x8],rax
    d4ff:	b8 01 00 00 00       	mov    eax,0x1
    d504:	48 83 43 20 01       	add    QWORD PTR [rbx+0x20],0x1
    d509:	e9 5e ff ff ff       	jmp    d46c <hash_insert_if_absent+0x4c>
    d50e:	66 90                	xchg   ax,ax
    d510:	48 89 c2             	mov    rdx,rax
    d513:	66 0f ef c9          	pxor   xmm1,xmm1
    d517:	83 e0 01             	and    eax,0x1
    d51a:	48 d1 ea             	shr    rdx,1
    d51d:	48 09 c2             	or     rdx,rax
    d520:	48 8b 43 10          	mov    rax,QWORD PTR [rbx+0x10]
    d524:	f3 48 0f 2a ca       	cvtsi2ss xmm1,rdx
    d529:	48 8b 53 28          	mov    rdx,QWORD PTR [rbx+0x28]
    d52d:	48 85 c0             	test   rax,rax
    d530:	f3 0f 58 c9          	addss  xmm1,xmm1
    d534:	0f 89 79 ff ff ff    	jns    d4b3 <hash_insert_if_absent+0x93>
    d53a:	48 89 c1             	mov    rcx,rax
    d53d:	66 0f ef c0          	pxor   xmm0,xmm0
    d541:	48 d1 e9             	shr    rcx,1
    d544:	83 e0 01             	and    eax,0x1
    d547:	48 09 c1             	or     rcx,rax
    d54a:	f3 48 0f 2a c1       	cvtsi2ss xmm0,rcx
    d54f:	f3 0f 58 c0          	addss  xmm0,xmm0
    d553:	e9 64 ff ff ff       	jmp    d4bc <hash_insert_if_absent+0x9c>
    d558:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    d55f:	00 
    d560:	48 8d 7b 28          	lea    rdi,[rbx+0x28]
    d564:	e8 e7 f2 ff ff       	call   c850 <check_tuning.isra.0>
    d569:	48 8b 43 10          	mov    rax,QWORD PTR [rbx+0x10]
    d56d:	48 8b 53 28          	mov    rdx,QWORD PTR [rbx+0x28]
    d571:	48 85 c0             	test   rax,rax
    d574:	f3 0f 10 52 08       	movss  xmm2,DWORD PTR [rdx+0x8]
    d579:	0f 88 c1 00 00 00    	js     d640 <hash_insert_if_absent+0x220>
    d57f:	66 0f ef c0          	pxor   xmm0,xmm0
    d583:	f3 48 0f 2a c0       	cvtsi2ss xmm0,rax
    d588:	48 8b 43 18          	mov    rax,QWORD PTR [rbx+0x18]
    d58c:	48 85 c0             	test   rax,rax
    d58f:	0f 88 cb 00 00 00    	js     d660 <hash_insert_if_absent+0x240>
    d595:	66 0f ef c9          	pxor   xmm1,xmm1
    d599:	f3 48 0f 2a c8       	cvtsi2ss xmm1,rax
    d59e:	0f 28 da             	movaps xmm3,xmm2
    d5a1:	f3 0f 59 d8          	mulss  xmm3,xmm0
    d5a5:	0f 2e cb             	ucomiss xmm1,xmm3
    d5a8:	0f 86 1c ff ff ff    	jbe    d4ca <hash_insert_if_absent+0xaa>
    d5ae:	80 7a 10 00          	cmp    BYTE PTR [rdx+0x10],0x0
    d5b2:	f3 0f 59 42 0c       	mulss  xmm0,DWORD PTR [rdx+0xc]
    d5b7:	75 04                	jne    d5bd <hash_insert_if_absent+0x19d>
    d5b9:	f3 0f 59 c2          	mulss  xmm0,xmm2
    d5bd:	0f 2e 05 a8 85 00 00 	ucomiss xmm0,DWORD PTR [rip+0x85a8]        # 15b6c <default_tuning+0x2c>
    d5c4:	73 6d                	jae    d633 <hash_insert_if_absent+0x213>
    d5c6:	0f 2e 05 a3 85 00 00 	ucomiss xmm0,DWORD PTR [rip+0x85a3]        # 15b70 <default_tuning+0x30>
    d5cd:	0f 83 ad 00 00 00    	jae    d680 <hash_insert_if_absent+0x260>
    d5d3:	f3 48 0f 2c f0       	cvttss2si rsi,xmm0
    d5d8:	48 89 df             	mov    rdi,rbx
    d5db:	e8 00 fc ff ff       	call   d1e0 <hash_rehash>
    d5e0:	84 c0                	test   al,al
    d5e2:	74 4f                	je     d633 <hash_insert_if_absent+0x213>
    d5e4:	31 c9                	xor    ecx,ecx
    d5e6:	4c 89 e2             	mov    rdx,r12
    d5e9:	48 89 ee             	mov    rsi,rbp
    d5ec:	48 89 df             	mov    rdi,rbx
    d5ef:	e8 3c f1 ff ff       	call   c730 <hash_find_entry>
    d5f4:	48 85 c0             	test   rax,rax
    d5f7:	0f 84 cd fe ff ff    	je     d4ca <hash_insert_if_absent+0xaa>
    d5fd:	e8 fe 54 ff ff       	call   2b00 <abort@plt>
    d602:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    d608:	49 89 2c 24          	mov    QWORD PTR [r12],rbp
    d60c:	b8 01 00 00 00       	mov    eax,0x1
    d611:	48 83 43 20 01       	add    QWORD PTR [rbx+0x20],0x1
    d616:	48 83 43 18 01       	add    QWORD PTR [rbx+0x18],0x1
    d61b:	e9 4c fe ff ff       	jmp    d46c <hash_insert_if_absent+0x4c>
    d620:	bf 10 00 00 00       	mov    edi,0x10
    d625:	e8 9e 5b ff ff       	call   31c8 <malloc@plt>
    d62a:	48 85 c0             	test   rax,rax
    d62d:	0f 85 bb fe ff ff    	jne    d4ee <hash_insert_if_absent+0xce>
    d633:	b8 ff ff ff ff       	mov    eax,0xffffffff
    d638:	e9 2f fe ff ff       	jmp    d46c <hash_insert_if_absent+0x4c>
    d63d:	0f 1f 00             	nop    DWORD PTR [rax]
    d640:	48 89 c1             	mov    rcx,rax
    d643:	66 0f ef c0          	pxor   xmm0,xmm0
    d647:	48 d1 e9             	shr    rcx,1
    d64a:	83 e0 01             	and    eax,0x1
    d64d:	48 09 c1             	or     rcx,rax
    d650:	f3 48 0f 2a c1       	cvtsi2ss xmm0,rcx
    d655:	f3 0f 58 c0          	addss  xmm0,xmm0
    d659:	e9 2a ff ff ff       	jmp    d588 <hash_insert_if_absent+0x168>
    d65e:	66 90                	xchg   ax,ax
    d660:	48 89 c1             	mov    rcx,rax
    d663:	66 0f ef c9          	pxor   xmm1,xmm1
    d667:	48 d1 e9             	shr    rcx,1
    d66a:	83 e0 01             	and    eax,0x1
    d66d:	48 09 c1             	or     rcx,rax
    d670:	f3 48 0f 2a c9       	cvtsi2ss xmm1,rcx
    d675:	f3 0f 58 c9          	addss  xmm1,xmm1
    d679:	e9 20 ff ff ff       	jmp    d59e <hash_insert_if_absent+0x17e>
    d67e:	66 90                	xchg   ax,ax
    d680:	f3 0f 5c 05 e8 84 00 	subss  xmm0,DWORD PTR [rip+0x84e8]        # 15b70 <default_tuning+0x30>
    d687:	00 
    d688:	48 b8 00 00 00 00 00 	movabs rax,0x8000000000000000
    d68f:	00 00 80 
    d692:	f3 48 0f 2c f0       	cvttss2si rsi,xmm0
    d697:	48 31 c6             	xor    rsi,rax
    d69a:	e9 39 ff ff ff       	jmp    d5d8 <hash_insert_if_absent+0x1b8>
    d69f:	e8 fc 55 ff ff       	call   2ca0 <__stack_chk_fail@plt>
    d6a4:	66 90                	xchg   ax,ax
    d6a6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    d6ad:	00 00 00 

000000000000d6b0 <hash_insert>:
    d6b0:	53                   	push   rbx
    d6b1:	48 89 f3             	mov    rbx,rsi
    d6b4:	48 83 ec 10          	sub    rsp,0x10
    d6b8:	48 89 e2             	mov    rdx,rsp
    d6bb:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d6c2:	00 00 
    d6c4:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    d6c9:	31 c0                	xor    eax,eax
    d6cb:	e8 50 fd ff ff       	call   d420 <hash_insert_if_absent>
    d6d0:	83 f8 ff             	cmp    eax,0xffffffff
    d6d3:	74 2b                	je     d700 <hash_insert+0x50>
    d6d5:	85 c0                	test   eax,eax
    d6d7:	75 04                	jne    d6dd <hash_insert+0x2d>
    d6d9:	48 8b 1c 24          	mov    rbx,QWORD PTR [rsp]
    d6dd:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
    d6e2:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    d6e9:	00 00 
    d6eb:	48 89 d8             	mov    rax,rbx
    d6ee:	75 14                	jne    d704 <hash_insert+0x54>
    d6f0:	48 83 c4 10          	add    rsp,0x10
    d6f4:	5b                   	pop    rbx
    d6f5:	c3                   	ret    
    d6f6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    d6fd:	00 00 00 
    d700:	31 db                	xor    ebx,ebx
    d702:	eb d9                	jmp    d6dd <hash_insert+0x2d>
    d704:	e8 97 55 ff ff       	call   2ca0 <__stack_chk_fail@plt>
    d709:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

000000000000d710 <hash_delete>:
    d710:	41 54                	push   r12
    d712:	55                   	push   rbp
    d713:	b9 01 00 00 00       	mov    ecx,0x1
    d718:	53                   	push   rbx
    d719:	48 89 fb             	mov    rbx,rdi
    d71c:	48 83 ec 10          	sub    rsp,0x10
    d720:	48 89 e2             	mov    rdx,rsp
    d723:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    d72a:	00 00 
    d72c:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    d731:	31 c0                	xor    eax,eax
    d733:	e8 f8 ef ff ff       	call   c730 <hash_find_entry>
    d738:	48 85 c0             	test   rax,rax
    d73b:	48 89 c5             	mov    rbp,rax
    d73e:	74 0f                	je     d74f <hash_delete+0x3f>
    d740:	48 8b 04 24          	mov    rax,QWORD PTR [rsp]
    d744:	48 83 6b 20 01       	sub    QWORD PTR [rbx+0x20],0x1
    d749:	48 83 38 00          	cmp    QWORD PTR [rax],0x0
    d74d:	74 21                	je     d770 <hash_delete+0x60>
    d74f:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
    d754:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    d75b:	00 00 
    d75d:	48 89 e8             	mov    rax,rbp
    d760:	0f 85 a8 01 00 00    	jne    d90e <hash_delete+0x1fe>
    d766:	48 83 c4 10          	add    rsp,0x10
    d76a:	5b                   	pop    rbx
    d76b:	5d                   	pop    rbp
    d76c:	41 5c                	pop    r12
    d76e:	c3                   	ret    
    d76f:	90                   	nop
    d770:	48 8b 43 18          	mov    rax,QWORD PTR [rbx+0x18]
    d774:	48 83 e8 01          	sub    rax,0x1
    d778:	48 85 c0             	test   rax,rax
    d77b:	48 89 43 18          	mov    QWORD PTR [rbx+0x18],rax
    d77f:	0f 88 fb 00 00 00    	js     d880 <hash_delete+0x170>
    d785:	66 0f ef c0          	pxor   xmm0,xmm0
    d789:	f3 48 0f 2a c0       	cvtsi2ss xmm0,rax
    d78e:	48 8b 43 10          	mov    rax,QWORD PTR [rbx+0x10]
    d792:	48 8b 53 28          	mov    rdx,QWORD PTR [rbx+0x28]
    d796:	48 85 c0             	test   rax,rax
    d799:	0f 88 c1 00 00 00    	js     d860 <hash_delete+0x150>
    d79f:	66 0f ef c9          	pxor   xmm1,xmm1
    d7a3:	f3 48 0f 2a c8       	cvtsi2ss xmm1,rax
    d7a8:	f3 0f 59 0a          	mulss  xmm1,DWORD PTR [rdx]
    d7ac:	0f 2e c8             	ucomiss xmm1,xmm0
    d7af:	76 9e                	jbe    d74f <hash_delete+0x3f>
    d7b1:	48 8d 7b 28          	lea    rdi,[rbx+0x28]
    d7b5:	e8 96 f0 ff ff       	call   c850 <check_tuning.isra.0>
    d7ba:	48 8b 43 10          	mov    rax,QWORD PTR [rbx+0x10]
    d7be:	48 8b 53 28          	mov    rdx,QWORD PTR [rbx+0x28]
    d7c2:	48 85 c0             	test   rax,rax
    d7c5:	0f 88 25 01 00 00    	js     d8f0 <hash_delete+0x1e0>
    d7cb:	66 0f ef c0          	pxor   xmm0,xmm0
    d7cf:	f3 48 0f 2a c0       	cvtsi2ss xmm0,rax
    d7d4:	48 8b 43 18          	mov    rax,QWORD PTR [rbx+0x18]
    d7d8:	48 85 c0             	test   rax,rax
    d7db:	0f 88 ef 00 00 00    	js     d8d0 <hash_delete+0x1c0>
    d7e1:	66 0f ef c9          	pxor   xmm1,xmm1
    d7e5:	f3 48 0f 2a c8       	cvtsi2ss xmm1,rax
    d7ea:	f3 0f 10 12          	movss  xmm2,DWORD PTR [rdx]
    d7ee:	f3 0f 59 d0          	mulss  xmm2,xmm0
    d7f2:	0f 2e d1             	ucomiss xmm2,xmm1
    d7f5:	0f 86 54 ff ff ff    	jbe    d74f <hash_delete+0x3f>
    d7fb:	80 7a 10 00          	cmp    BYTE PTR [rdx+0x10],0x0
    d7ff:	f3 0f 59 42 04       	mulss  xmm0,DWORD PTR [rdx+0x4]
    d804:	0f 84 b6 00 00 00    	je     d8c0 <hash_delete+0x1b0>
    d80a:	0f 2e 05 5f 83 00 00 	ucomiss xmm0,DWORD PTR [rip+0x835f]        # 15b70 <default_tuning+0x30>
    d811:	0f 83 89 00 00 00    	jae    d8a0 <hash_delete+0x190>
    d817:	f3 48 0f 2c f0       	cvttss2si rsi,xmm0
    d81c:	48 89 df             	mov    rdi,rbx
    d81f:	e8 bc f9 ff ff       	call   d1e0 <hash_rehash>
    d824:	84 c0                	test   al,al
    d826:	0f 85 23 ff ff ff    	jne    d74f <hash_delete+0x3f>
    d82c:	48 8b 7b 48          	mov    rdi,QWORD PTR [rbx+0x48]
    d830:	48 85 ff             	test   rdi,rdi
    d833:	74 14                	je     d849 <hash_delete+0x139>
    d835:	0f 1f 00             	nop    DWORD PTR [rax]
    d838:	4c 8b 67 08          	mov    r12,QWORD PTR [rdi+0x8]
    d83c:	e8 7f 59 ff ff       	call   31c0 <free@plt>
    d841:	4d 85 e4             	test   r12,r12
    d844:	4c 89 e7             	mov    rdi,r12
    d847:	75 ef                	jne    d838 <hash_delete+0x128>
    d849:	48 c7 43 48 00 00 00 	mov    QWORD PTR [rbx+0x48],0x0
    d850:	00 
    d851:	e9 f9 fe ff ff       	jmp    d74f <hash_delete+0x3f>
    d856:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    d85d:	00 00 00 
    d860:	48 89 c1             	mov    rcx,rax
    d863:	66 0f ef c9          	pxor   xmm1,xmm1
    d867:	48 d1 e9             	shr    rcx,1
    d86a:	83 e0 01             	and    eax,0x1
    d86d:	48 09 c1             	or     rcx,rax
    d870:	f3 48 0f 2a c9       	cvtsi2ss xmm1,rcx
    d875:	f3 0f 58 c9          	addss  xmm1,xmm1
    d879:	e9 2a ff ff ff       	jmp    d7a8 <hash_delete+0x98>
    d87e:	66 90                	xchg   ax,ax
    d880:	48 89 c2             	mov    rdx,rax
    d883:	66 0f ef c0          	pxor   xmm0,xmm0
    d887:	48 d1 ea             	shr    rdx,1
    d88a:	83 e0 01             	and    eax,0x1
    d88d:	48 09 c2             	or     rdx,rax
    d890:	f3 48 0f 2a c2       	cvtsi2ss xmm0,rdx
    d895:	f3 0f 58 c0          	addss  xmm0,xmm0
    d899:	e9 f0 fe ff ff       	jmp    d78e <hash_delete+0x7e>
    d89e:	66 90                	xchg   ax,ax
    d8a0:	f3 0f 5c 05 c8 82 00 	subss  xmm0,DWORD PTR [rip+0x82c8]        # 15b70 <default_tuning+0x30>
    d8a7:	00 
    d8a8:	48 b8 00 00 00 00 00 	movabs rax,0x8000000000000000
    d8af:	00 00 80 
    d8b2:	f3 48 0f 2c f0       	cvttss2si rsi,xmm0
    d8b7:	48 31 c6             	xor    rsi,rax
    d8ba:	e9 5d ff ff ff       	jmp    d81c <hash_delete+0x10c>
    d8bf:	90                   	nop
    d8c0:	f3 0f 59 42 08       	mulss  xmm0,DWORD PTR [rdx+0x8]
    d8c5:	e9 40 ff ff ff       	jmp    d80a <hash_delete+0xfa>
    d8ca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    d8d0:	48 89 c1             	mov    rcx,rax
    d8d3:	66 0f ef c9          	pxor   xmm1,xmm1
    d8d7:	48 d1 e9             	shr    rcx,1
    d8da:	83 e0 01             	and    eax,0x1
    d8dd:	48 09 c1             	or     rcx,rax
    d8e0:	f3 48 0f 2a c9       	cvtsi2ss xmm1,rcx
    d8e5:	f3 0f 58 c9          	addss  xmm1,xmm1
    d8e9:	e9 fc fe ff ff       	jmp    d7ea <hash_delete+0xda>
    d8ee:	66 90                	xchg   ax,ax
    d8f0:	48 89 c1             	mov    rcx,rax
    d8f3:	66 0f ef c0          	pxor   xmm0,xmm0
    d8f7:	48 d1 e9             	shr    rcx,1
    d8fa:	83 e0 01             	and    eax,0x1
    d8fd:	48 09 c1             	or     rcx,rax
    d900:	f3 48 0f 2a c1       	cvtsi2ss xmm0,rcx
    d905:	f3 0f 58 c0          	addss  xmm0,xmm0
    d909:	e9 c6 fe ff ff       	jmp    d7d4 <hash_delete+0xc4>
    d90e:	e8 8d 53 ff ff       	call   2ca0 <__stack_chk_fail@plt>
    d913:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    d91a:	00 00 00 
    d91d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000d920 <heap_default_compare>:
    d920:	31 c0                	xor    eax,eax
    d922:	c3                   	ret    
    d923:	0f 1f 00             	nop    DWORD PTR [rax]
    d926:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    d92d:	00 00 00 

000000000000d930 <heap_alloc>:
    d930:	41 54                	push   r12
    d932:	55                   	push   rbp
    d933:	49 89 fc             	mov    r12,rdi
    d936:	53                   	push   rbx
    d937:	bf 20 00 00 00       	mov    edi,0x20
    d93c:	48 89 f3             	mov    rbx,rsi
    d93f:	e8 9c 44 00 00       	call   11de0 <xmalloc>
    d944:	48 85 db             	test   rbx,rbx
    d947:	ba 08 00 00 00       	mov    edx,0x8
    d94c:	48 89 c5             	mov    rbp,rax
    d94f:	b8 01 00 00 00       	mov    eax,0x1
    d954:	48 0f 44 d8          	cmove  rbx,rax
    d958:	48 89 d0             	mov    rax,rdx
    d95b:	48 f7 e3             	mul    rbx
    d95e:	70 4a                	jo     d9aa <heap_alloc+0x7a>
    d960:	31 c9                	xor    ecx,ecx
    d962:	48 85 c0             	test   rax,rax
    d965:	78 4a                	js     d9b1 <heap_alloc+0x81>
    d967:	48 85 c9             	test   rcx,rcx
    d96a:	75 45                	jne    d9b1 <heap_alloc+0x81>
    d96c:	48 8d 3c dd 00 00 00 	lea    rdi,[rbx*8+0x0]
    d973:	00 
    d974:	e8 67 44 00 00       	call   11de0 <xmalloc>
    d979:	48 89 45 00          	mov    QWORD PTR [rbp+0x0],rax
    d97d:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
    d984:	48 8d 05 95 ff ff ff 	lea    rax,[rip+0xffffffffffffff95]        # d920 <heap_default_compare>
    d98b:	4d 85 e4             	test   r12,r12
    d98e:	48 89 5d 08          	mov    QWORD PTR [rbp+0x8],rbx
    d992:	48 c7 45 10 00 00 00 	mov    QWORD PTR [rbp+0x10],0x0
    d999:	00 
    d99a:	4c 0f 44 e0          	cmove  r12,rax
    d99e:	48 89 e8             	mov    rax,rbp
    d9a1:	4c 89 65 18          	mov    QWORD PTR [rbp+0x18],r12
    d9a5:	5b                   	pop    rbx
    d9a6:	5d                   	pop    rbp
    d9a7:	41 5c                	pop    r12
    d9a9:	c3                   	ret    
    d9aa:	b9 01 00 00 00       	mov    ecx,0x1
    d9af:	eb b1                	jmp    d962 <heap_alloc+0x32>
    d9b1:	e8 7a 46 00 00       	call   12030 <xalloc_die>
    d9b6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    d9bd:	00 00 00 

000000000000d9c0 <heap_free>:
    d9c0:	53                   	push   rbx
    d9c1:	48 89 fb             	mov    rbx,rdi
    d9c4:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    d9c7:	e8 f4 57 ff ff       	call   31c0 <free@plt>
    d9cc:	48 89 df             	mov    rdi,rbx
    d9cf:	5b                   	pop    rbx
    d9d0:	e9 eb 57 ff ff       	jmp    31c0 <free@plt>
    d9d5:	90                   	nop
    d9d6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    d9dd:	00 00 00 

000000000000d9e0 <heap_insert>:
    d9e0:	41 57                	push   r15
    d9e2:	41 56                	push   r14
    d9e4:	41 55                	push   r13
    d9e6:	41 54                	push   r12
    d9e8:	49 89 f4             	mov    r12,rsi
    d9eb:	55                   	push   rbp
    d9ec:	53                   	push   rbx
    d9ed:	48 89 fd             	mov    rbp,rdi
    d9f0:	48 83 ec 08          	sub    rsp,0x8
    d9f4:	48 8b 77 08          	mov    rsi,QWORD PTR [rdi+0x8]
    d9f8:	48 8b 5f 10          	mov    rbx,QWORD PTR [rdi+0x10]
    d9fc:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    d9ff:	48 8d 46 ff          	lea    rax,[rsi-0x1]
    da03:	48 39 d8             	cmp    rax,rbx
    da06:	76 78                	jbe    da80 <heap_insert+0xa0>
    da08:	48 83 c3 01          	add    rbx,0x1
    da0c:	48 89 5d 10          	mov    QWORD PTR [rbp+0x10],rbx
    da10:	4c 89 24 df          	mov    QWORD PTR [rdi+rbx*8],r12
    da14:	48 83 fb 01          	cmp    rbx,0x1
    da18:	4c 8b 6d 00          	mov    r13,QWORD PTR [rbp+0x0]
    da1c:	4c 8b 7d 18          	mov    r15,QWORD PTR [rbp+0x18]
    da20:	4d 8b 74 dd 00       	mov    r14,QWORD PTR [r13+rbx*8+0x0]
    da25:	75 19                	jne    da40 <heap_insert+0x60>
    da27:	eb 4f                	jmp    da78 <heap_insert+0x98>
    da29:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    da30:	48 8b 45 00          	mov    rax,QWORD PTR [rbp+0x0]
    da34:	49 83 fc 01          	cmp    r12,0x1
    da38:	4c 89 e3             	mov    rbx,r12
    da3b:	48 89 02             	mov    QWORD PTR [rdx],rax
    da3e:	74 38                	je     da78 <heap_insert+0x98>
    da40:	49 89 dc             	mov    r12,rbx
    da43:	4c 89 f6             	mov    rsi,r14
    da46:	49 d1 ec             	shr    r12,1
    da49:	4b 8d 6c e5 00       	lea    rbp,[r13+r12*8+0x0]
    da4e:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    da52:	41 ff d7             	call   r15
    da55:	85 c0                	test   eax,eax
    da57:	49 8d 54 dd 00       	lea    rdx,[r13+rbx*8+0x0]
    da5c:	7e d2                	jle    da30 <heap_insert+0x50>
    da5e:	4c 89 32             	mov    QWORD PTR [rdx],r14
    da61:	48 83 c4 08          	add    rsp,0x8
    da65:	31 c0                	xor    eax,eax
    da67:	5b                   	pop    rbx
    da68:	5d                   	pop    rbp
    da69:	41 5c                	pop    r12
    da6b:	41 5d                	pop    r13
    da6d:	41 5e                	pop    r14
    da6f:	41 5f                	pop    r15
    da71:	c3                   	ret    
    da72:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    da78:	49 8d 55 08          	lea    rdx,[r13+0x8]
    da7c:	eb e0                	jmp    da5e <heap_insert+0x7e>
    da7e:	66 90                	xchg   ax,ax
    da80:	48 85 ff             	test   rdi,rdi
    da83:	74 3b                	je     dac0 <heap_insert+0xe0>
    da85:	48 b8 a9 aa aa aa aa 	movabs rax,0xaaaaaaaaaaaaaa9
    da8c:	aa aa 0a 
    da8f:	48 39 c6             	cmp    rsi,rax
    da92:	77 51                	ja     dae5 <heap_insert+0x105>
    da94:	48 89 f0             	mov    rax,rsi
    da97:	48 d1 e8             	shr    rax,1
    da9a:	48 8d 74 06 01       	lea    rsi,[rsi+rax*1+0x1]
    da9f:	48 89 75 08          	mov    QWORD PTR [rbp+0x8],rsi
    daa3:	48 c1 e6 03          	shl    rsi,0x3
    daa7:	e8 94 43 00 00       	call   11e40 <xrealloc>
    daac:	48 8b 5d 10          	mov    rbx,QWORD PTR [rbp+0x10]
    dab0:	48 89 c7             	mov    rdi,rax
    dab3:	48 89 45 00          	mov    QWORD PTR [rbp+0x0],rax
    dab7:	e9 4c ff ff ff       	jmp    da08 <heap_insert+0x28>
    dabc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    dac0:	48 85 f6             	test   rsi,rsi
    dac3:	b8 10 00 00 00       	mov    eax,0x10
    dac8:	ba 08 00 00 00       	mov    edx,0x8
    dacd:	48 0f 44 f0          	cmove  rsi,rax
    dad1:	48 89 d0             	mov    rax,rdx
    dad4:	31 c9                	xor    ecx,ecx
    dad6:	48 f7 e6             	mul    rsi
    dad9:	70 0f                	jo     daea <heap_insert+0x10a>
    dadb:	48 85 c0             	test   rax,rax
    dade:	78 05                	js     dae5 <heap_insert+0x105>
    dae0:	48 85 c9             	test   rcx,rcx
    dae3:	74 ba                	je     da9f <heap_insert+0xbf>
    dae5:	e8 46 45 00 00       	call   12030 <xalloc_die>
    daea:	b9 01 00 00 00       	mov    ecx,0x1
    daef:	eb ea                	jmp    dadb <heap_insert+0xfb>
    daf1:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    daf6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    dafd:	00 00 00 

000000000000db00 <heap_remove_top>:
    db00:	41 57                	push   r15
    db02:	41 56                	push   r14
    db04:	41 55                	push   r13
    db06:	41 54                	push   r12
    db08:	55                   	push   rbp
    db09:	53                   	push   rbx
    db0a:	48 83 ec 38          	sub    rsp,0x38
    db0e:	48 8b 47 10          	mov    rax,QWORD PTR [rdi+0x10]
    db12:	48 85 c0             	test   rax,rax
    db15:	0f 84 e5 00 00 00    	je     dc00 <heap_remove_top+0x100>
    db1b:	48 8b 17             	mov    rdx,QWORD PTR [rdi]
    db1e:	48 8d 70 ff          	lea    rsi,[rax-0x1]
    db22:	48 89 74 24 18       	mov    QWORD PTR [rsp+0x18],rsi
    db27:	48 8b 04 c2          	mov    rax,QWORD PTR [rdx+rax*8]
    db2b:	48 8b 4a 08          	mov    rcx,QWORD PTR [rdx+0x8]
    db2f:	48 89 77 10          	mov    QWORD PTR [rdi+0x10],rsi
    db33:	48 d1 ee             	shr    rsi,1
    db36:	48 89 74 24 20       	mov    QWORD PTR [rsp+0x20],rsi
    db3b:	48 89 42 08          	mov    QWORD PTR [rdx+0x8],rax
    db3f:	48 8b 2f             	mov    rbp,QWORD PTR [rdi]
    db42:	48 89 4c 24 28       	mov    QWORD PTR [rsp+0x28],rcx
    db47:	4c 8b 67 18          	mov    r12,QWORD PTR [rdi+0x18]
    db4b:	48 8b 45 08          	mov    rax,QWORD PTR [rbp+0x8]
    db4f:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
    db54:	74 7a                	je     dbd0 <heap_remove_top+0xd0>
    db56:	41 be 01 00 00 00    	mov    r14d,0x1
    db5c:	eb 26                	jmp    db84 <heap_remove_top+0x84>
    db5e:	66 90                	xchg   ax,ax
    db60:	49 8b 3f             	mov    rdi,QWORD PTR [r15]
    db63:	48 8b 74 24 10       	mov    rsi,QWORD PTR [rsp+0x10]
    db68:	41 ff d4             	call   r12
    db6b:	85 c0                	test   eax,eax
    db6d:	4a 8d 4c f5 00       	lea    rcx,[rbp+r14*8+0x0]
    db72:	7e 64                	jle    dbd8 <heap_remove_top+0xd8>
    db74:	48 3b 5c 24 20       	cmp    rbx,QWORD PTR [rsp+0x20]
    db79:	49 8b 07             	mov    rax,QWORD PTR [r15]
    db7c:	49 89 de             	mov    r14,rbx
    db7f:	48 89 01             	mov    QWORD PTR [rcx],rax
    db82:	77 74                	ja     dbf8 <heap_remove_top+0xf8>
    db84:	4c 89 f2             	mov    rdx,r14
    db87:	4b 8d 1c 36          	lea    rbx,[r14+r14*1]
    db8b:	48 c1 e2 04          	shl    rdx,0x4
    db8f:	48 39 5c 24 18       	cmp    QWORD PTR [rsp+0x18],rbx
    db94:	4c 8d 7c 15 00       	lea    r15,[rbp+rdx*1+0x0]
    db99:	49 8b 3f             	mov    rdi,QWORD PTR [r15]
    db9c:	76 c5                	jbe    db63 <heap_remove_top+0x63>
    db9e:	4c 8d 6b 01          	lea    r13,[rbx+0x1]
    dba2:	4e 8d 44 ed 00       	lea    r8,[rbp+r13*8+0x0]
    dba7:	49 8b 30             	mov    rsi,QWORD PTR [r8]
    dbaa:	4c 89 44 24 08       	mov    QWORD PTR [rsp+0x8],r8
    dbaf:	41 ff d4             	call   r12
    dbb2:	85 c0                	test   eax,eax
    dbb4:	4c 8b 44 24 08       	mov    r8,QWORD PTR [rsp+0x8]
    dbb9:	79 a5                	jns    db60 <heap_remove_top+0x60>
    dbbb:	49 8b 38             	mov    rdi,QWORD PTR [r8]
    dbbe:	4d 89 c7             	mov    r15,r8
    dbc1:	4c 89 eb             	mov    rbx,r13
    dbc4:	eb 9d                	jmp    db63 <heap_remove_top+0x63>
    dbc6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    dbcd:	00 00 00 
    dbd0:	48 8d 4d 08          	lea    rcx,[rbp+0x8]
    dbd4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    dbd8:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
    dbdd:	48 89 01             	mov    QWORD PTR [rcx],rax
    dbe0:	48 8b 44 24 28       	mov    rax,QWORD PTR [rsp+0x28]
    dbe5:	48 83 c4 38          	add    rsp,0x38
    dbe9:	5b                   	pop    rbx
    dbea:	5d                   	pop    rbp
    dbeb:	41 5c                	pop    r12
    dbed:	41 5d                	pop    r13
    dbef:	41 5e                	pop    r14
    dbf1:	41 5f                	pop    r15
    dbf3:	c3                   	ret    
    dbf4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    dbf8:	4c 89 f9             	mov    rcx,r15
    dbfb:	eb db                	jmp    dbd8 <heap_remove_top+0xd8>
    dbfd:	0f 1f 00             	nop    DWORD PTR [rax]
    dc00:	48 c7 44 24 28 00 00 	mov    QWORD PTR [rsp+0x28],0x0
    dc07:	00 00 
    dc09:	eb d5                	jmp    dbe0 <heap_remove_top+0xe0>
    dc0b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000dc10 <inttostr>:
    dc10:	85 ff                	test   edi,edi
    dc12:	48 8d 4e 0b          	lea    rcx,[rsi+0xb]
    dc16:	c6 46 0b 00          	mov    BYTE PTR [rsi+0xb],0x0
    dc1a:	41 b9 67 66 66 66    	mov    r9d,0x66666667
    dc20:	be cd cc cc cc       	mov    esi,0xcccccccd
    dc25:	41 b8 30 00 00 00    	mov    r8d,0x30
    dc2b:	78 2e                	js     dc5b <inttostr+0x4b>
    dc2d:	0f 1f 00             	nop    DWORD PTR [rax]
    dc30:	89 f8                	mov    eax,edi
    dc32:	48 83 e9 01          	sub    rcx,0x1
    dc36:	f7 e6                	mul    esi
    dc38:	c1 ea 03             	shr    edx,0x3
    dc3b:	8d 04 92             	lea    eax,[rdx+rdx*4]
    dc3e:	01 c0                	add    eax,eax
    dc40:	29 c7                	sub    edi,eax
    dc42:	83 c7 30             	add    edi,0x30
    dc45:	85 d2                	test   edx,edx
    dc47:	40 88 39             	mov    BYTE PTR [rcx],dil
    dc4a:	89 d7                	mov    edi,edx
    dc4c:	75 e2                	jne    dc30 <inttostr+0x20>
    dc4e:	48 89 c8             	mov    rax,rcx
    dc51:	c3                   	ret    
    dc52:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    dc58:	48 89 f1             	mov    rcx,rsi
    dc5b:	89 f8                	mov    eax,edi
    dc5d:	48 8d 71 ff          	lea    rsi,[rcx-0x1]
    dc61:	41 f7 e9             	imul   r9d
    dc64:	89 f8                	mov    eax,edi
    dc66:	c1 f8 1f             	sar    eax,0x1f
    dc69:	c1 fa 02             	sar    edx,0x2
    dc6c:	29 c2                	sub    edx,eax
    dc6e:	8d 04 92             	lea    eax,[rdx+rdx*4]
    dc71:	41 8d 04 40          	lea    eax,[r8+rax*2]
    dc75:	29 f8                	sub    eax,edi
    dc77:	85 d2                	test   edx,edx
    dc79:	89 d7                	mov    edi,edx
    dc7b:	88 41 ff             	mov    BYTE PTR [rcx-0x1],al
    dc7e:	75 d8                	jne    dc58 <inttostr+0x48>
    dc80:	48 83 e9 02          	sub    rcx,0x2
    dc84:	c6 46 ff 2d          	mov    BYTE PTR [rsi-0x1],0x2d
    dc88:	48 89 c8             	mov    rax,rcx
    dc8b:	c3                   	ret    
    dc8c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000dc90 <uinttostr>:
    dc90:	48 8d 4e 0a          	lea    rcx,[rsi+0xa]
    dc94:	c6 46 0a 00          	mov    BYTE PTR [rsi+0xa],0x0
    dc98:	be cd cc cc cc       	mov    esi,0xcccccccd
    dc9d:	0f 1f 00             	nop    DWORD PTR [rax]
    dca0:	89 f8                	mov    eax,edi
    dca2:	48 83 e9 01          	sub    rcx,0x1
    dca6:	f7 e6                	mul    esi
    dca8:	c1 ea 03             	shr    edx,0x3
    dcab:	8d 04 92             	lea    eax,[rdx+rdx*4]
    dcae:	01 c0                	add    eax,eax
    dcb0:	29 c7                	sub    edi,eax
    dcb2:	83 c7 30             	add    edi,0x30
    dcb5:	85 d2                	test   edx,edx
    dcb7:	40 88 39             	mov    BYTE PTR [rcx],dil
    dcba:	89 d7                	mov    edi,edx
    dcbc:	75 e2                	jne    dca0 <uinttostr+0x10>
    dcbe:	48 89 c8             	mov    rax,rcx
    dcc1:	c3                   	ret    
    dcc2:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    dcc9:	00 00 00 
    dccc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000dcd0 <umaxtostr>:
    dcd0:	48 8d 4e 14          	lea    rcx,[rsi+0x14]
    dcd4:	c6 46 14 00          	mov    BYTE PTR [rsi+0x14],0x0
    dcd8:	48 be cd cc cc cc cc 	movabs rsi,0xcccccccccccccccd
    dcdf:	cc cc cc 
    dce2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    dce8:	48 89 f8             	mov    rax,rdi
    dceb:	48 83 e9 01          	sub    rcx,0x1
    dcef:	48 f7 e6             	mul    rsi
    dcf2:	48 c1 ea 03          	shr    rdx,0x3
    dcf6:	48 8d 04 92          	lea    rax,[rdx+rdx*4]
    dcfa:	48 01 c0             	add    rax,rax
    dcfd:	48 29 c7             	sub    rdi,rax
    dd00:	83 c7 30             	add    edi,0x30
    dd03:	48 85 d2             	test   rdx,rdx
    dd06:	40 88 39             	mov    BYTE PTR [rcx],dil
    dd09:	48 89 d7             	mov    rdi,rdx
    dd0c:	75 da                	jne    dce8 <umaxtostr+0x18>
    dd0e:	48 89 c8             	mov    rax,rcx
    dd11:	c3                   	ret    
    dd12:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    dd19:	00 00 00 
    dd1c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000dd20 <mbsnwidth>:
    dd20:	41 57                	push   r15
    dd22:	41 56                	push   r14
    dd24:	41 55                	push   r13
    dd26:	41 54                	push   r12
    dd28:	4c 8d 2c 37          	lea    r13,[rdi+rsi*1]
    dd2c:	55                   	push   rbp
    dd2d:	53                   	push   rbx
    dd2e:	48 89 fb             	mov    rbx,rdi
    dd31:	48 83 ec 38          	sub    rsp,0x38
    dd35:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    dd3c:	00 00 
    dd3e:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
    dd43:	31 c0                	xor    eax,eax
    dd45:	89 54 24 0c          	mov    DWORD PTR [rsp+0xc],edx
    dd49:	e8 32 4f ff ff       	call   2c80 <__ctype_get_mb_cur_max@plt>
    dd4e:	48 83 f8 01          	cmp    rax,0x1
    dd52:	0f 86 30 01 00 00    	jbe    de88 <mbsnwidth+0x168>
    dd58:	31 ed                	xor    ebp,ebp
    dd5a:	4c 39 eb             	cmp    rbx,r13
    dd5d:	0f 83 ea 00 00 00    	jae    de4d <mbsnwidth+0x12d>
    dd63:	4c 8d 64 24 20       	lea    r12,[rsp+0x20]
    dd68:	4c 8d 74 24 1c       	lea    r14,[rsp+0x1c]
    dd6d:	eb 1c                	jmp    dd8b <mbsnwidth+0x6b>
    dd6f:	90                   	nop
    dd70:	3c 25                	cmp    al,0x25
    dd72:	7d 07                	jge    dd7b <mbsnwidth+0x5b>
    dd74:	83 e8 20             	sub    eax,0x20
    dd77:	3c 03                	cmp    al,0x3
    dd79:	77 26                	ja     dda1 <mbsnwidth+0x81>
    dd7b:	48 83 c3 01          	add    rbx,0x1
    dd7f:	83 c5 01             	add    ebp,0x1
    dd82:	4c 39 eb             	cmp    rbx,r13
    dd85:	0f 83 c2 00 00 00    	jae    de4d <mbsnwidth+0x12d>
    dd8b:	0f b6 03             	movzx  eax,BYTE PTR [rbx]
    dd8e:	3c 3f                	cmp    al,0x3f
    dd90:	7e de                	jle    dd70 <mbsnwidth+0x50>
    dd92:	3c 41                	cmp    al,0x41
    dd94:	7c 0b                	jl     dda1 <mbsnwidth+0x81>
    dd96:	3c 5f                	cmp    al,0x5f
    dd98:	7e e1                	jle    dd7b <mbsnwidth+0x5b>
    dd9a:	83 e8 61             	sub    eax,0x61
    dd9d:	3c 1d                	cmp    al,0x1d
    dd9f:	76 da                	jbe    dd7b <mbsnwidth+0x5b>
    dda1:	49 c7 04 24 00 00 00 	mov    QWORD PTR [r12],0x0
    dda8:	00 
    dda9:	eb 25                	jmp    ddd0 <mbsnwidth+0xb0>
    ddab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    ddb0:	b9 ff ff ff 7f       	mov    ecx,0x7fffffff
    ddb5:	29 e9                	sub    ecx,ebp
    ddb7:	39 c1                	cmp    ecx,eax
    ddb9:	0f 8c 11 01 00 00    	jl     ded0 <mbsnwidth+0x1b0>
    ddbf:	01 c5                	add    ebp,eax
    ddc1:	4c 89 e7             	mov    rdi,r12
    ddc4:	4c 01 fb             	add    rbx,r15
    ddc7:	e8 74 53 ff ff       	call   3140 <mbsinit@plt>
    ddcc:	85 c0                	test   eax,eax
    ddce:	75 b2                	jne    dd82 <mbsnwidth+0x62>
    ddd0:	4c 89 ea             	mov    rdx,r13
    ddd3:	4c 89 e1             	mov    rcx,r12
    ddd6:	48 89 de             	mov    rsi,rbx
    ddd9:	48 29 da             	sub    rdx,rbx
    dddc:	4c 89 f7             	mov    rdi,r14
    dddf:	e8 fc 50 00 00       	call   12ee0 <rpl_mbrtowc>
    dde4:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
    dde8:	49 89 c7             	mov    r15,rax
    ddeb:	74 4b                	je     de38 <mbsnwidth+0x118>
    dded:	48 83 f8 fe          	cmp    rax,0xfffffffffffffffe
    ddf1:	74 7d                	je     de70 <mbsnwidth+0x150>
    ddf3:	8b 7c 24 1c          	mov    edi,DWORD PTR [rsp+0x1c]
    ddf7:	48 85 c0             	test   rax,rax
    ddfa:	b8 01 00 00 00       	mov    eax,0x1
    ddff:	4c 0f 44 f8          	cmove  r15,rax
    de03:	e8 d8 50 ff ff       	call   2ee0 <wcwidth@plt>
    de08:	85 c0                	test   eax,eax
    de0a:	79 a4                	jns    ddb0 <mbsnwidth+0x90>
    de0c:	f6 44 24 0c 02       	test   BYTE PTR [rsp+0xc],0x2
    de11:	75 35                	jne    de48 <mbsnwidth+0x128>
    de13:	8b 7c 24 1c          	mov    edi,DWORD PTR [rsp+0x1c]
    de17:	e8 94 4d ff ff       	call   2bb0 <iswcntrl@plt>
    de1c:	85 c0                	test   eax,eax
    de1e:	75 a1                	jne    ddc1 <mbsnwidth+0xa1>
    de20:	81 fd ff ff ff 7f    	cmp    ebp,0x7fffffff
    de26:	0f 84 a4 00 00 00    	je     ded0 <mbsnwidth+0x1b0>
    de2c:	83 c5 01             	add    ebp,0x1
    de2f:	eb 90                	jmp    ddc1 <mbsnwidth+0xa1>
    de31:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    de38:	f6 44 24 0c 01       	test   BYTE PTR [rsp+0xc],0x1
    de3d:	0f 84 38 ff ff ff    	je     dd7b <mbsnwidth+0x5b>
    de43:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    de48:	bd ff ff ff ff       	mov    ebp,0xffffffff
    de4d:	48 8b 74 24 28       	mov    rsi,QWORD PTR [rsp+0x28]
    de52:	64 48 33 34 25 28 00 	xor    rsi,QWORD PTR fs:0x28
    de59:	00 00 
    de5b:	89 e8                	mov    eax,ebp
    de5d:	75 7b                	jne    deda <mbsnwidth+0x1ba>
    de5f:	48 83 c4 38          	add    rsp,0x38
    de63:	5b                   	pop    rbx
    de64:	5d                   	pop    rbp
    de65:	41 5c                	pop    r12
    de67:	41 5d                	pop    r13
    de69:	41 5e                	pop    r14
    de6b:	41 5f                	pop    r15
    de6d:	c3                   	ret    
    de6e:	66 90                	xchg   ax,ax
    de70:	f6 44 24 0c 01       	test   BYTE PTR [rsp+0xc],0x1
    de75:	75 d1                	jne    de48 <mbsnwidth+0x128>
    de77:	83 c5 01             	add    ebp,0x1
    de7a:	4c 89 eb             	mov    rbx,r13
    de7d:	e9 00 ff ff ff       	jmp    dd82 <mbsnwidth+0x62>
    de82:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    de88:	31 ed                	xor    ebp,ebp
    de8a:	4c 39 eb             	cmp    rbx,r13
    de8d:	73 be                	jae    de4d <mbsnwidth+0x12d>
    de8f:	e8 1c 53 ff ff       	call   31b0 <__ctype_b_loc@plt>
    de94:	8b 54 24 0c          	mov    edx,DWORD PTR [rsp+0xc]
    de98:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    de9b:	31 ed                	xor    ebp,ebp
    de9d:	83 e2 02             	and    edx,0x2
    dea0:	48 83 c3 01          	add    rbx,0x1
    dea4:	0f b6 43 ff          	movzx  eax,BYTE PTR [rbx-0x1]
    dea8:	0f b7 04 41          	movzx  eax,WORD PTR [rcx+rax*2]
    deac:	f6 c4 40             	test   ah,0x40
    deaf:	75 08                	jne    deb9 <mbsnwidth+0x199>
    deb1:	85 d2                	test   edx,edx
    deb3:	75 93                	jne    de48 <mbsnwidth+0x128>
    deb5:	a8 02                	test   al,0x2
    deb7:	75 0b                	jne    dec4 <mbsnwidth+0x1a4>
    deb9:	81 fd ff ff ff 7f    	cmp    ebp,0x7fffffff
    debf:	74 8c                	je     de4d <mbsnwidth+0x12d>
    dec1:	83 c5 01             	add    ebp,0x1
    dec4:	49 39 dd             	cmp    r13,rbx
    dec7:	75 d7                	jne    dea0 <mbsnwidth+0x180>
    dec9:	eb 82                	jmp    de4d <mbsnwidth+0x12d>
    decb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    ded0:	bd ff ff ff 7f       	mov    ebp,0x7fffffff
    ded5:	e9 73 ff ff ff       	jmp    de4d <mbsnwidth+0x12d>
    deda:	e8 c1 4d ff ff       	call   2ca0 <__stack_chk_fail@plt>
    dedf:	90                   	nop

000000000000dee0 <gnu_mbswidth>:
    dee0:	55                   	push   rbp
    dee1:	53                   	push   rbx
    dee2:	89 f5                	mov    ebp,esi
    dee4:	48 89 fb             	mov    rbx,rdi
    dee7:	48 83 ec 08          	sub    rsp,0x8
    deeb:	e8 a0 4d ff ff       	call   2c90 <strlen@plt>
    def0:	48 83 c4 08          	add    rsp,0x8
    def4:	89 ea                	mov    edx,ebp
    def6:	48 89 df             	mov    rdi,rbx
    def9:	5b                   	pop    rbx
    defa:	5d                   	pop    rbp
    defb:	48 89 c6             	mov    rsi,rax
    defe:	e9 1d fe ff ff       	jmp    dd20 <mbsnwidth>
    df03:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    df0a:	00 00 00 
    df0d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000df10 <num_processors_via_affinity_mask>:
    df10:	53                   	push   rbx
    df11:	31 ff                	xor    edi,edi
    df13:	be 80 00 00 00       	mov    esi,0x80
    df18:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    df1f:	48 89 e3             	mov    rbx,rsp
    df22:	48 89 da             	mov    rdx,rbx
    df25:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    df2c:	00 00 
    df2e:	48 89 84 24 88 00 00 	mov    QWORD PTR [rsp+0x88],rax
    df35:	00 
    df36:	31 c0                	xor    eax,eax
    df38:	e8 e3 51 ff ff       	call   3120 <sched_getaffinity@plt>
    df3d:	85 c0                	test   eax,eax
    df3f:	74 1f                	je     df60 <num_processors_via_affinity_mask+0x50>
    df41:	31 c0                	xor    eax,eax
    df43:	48 8b 8c 24 88 00 00 	mov    rcx,QWORD PTR [rsp+0x88]
    df4a:	00 
    df4b:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    df52:	00 00 
    df54:	75 20                	jne    df76 <num_processors_via_affinity_mask+0x66>
    df56:	48 81 c4 90 00 00 00 	add    rsp,0x90
    df5d:	5b                   	pop    rbx
    df5e:	c3                   	ret    
    df5f:	90                   	nop
    df60:	48 89 de             	mov    rsi,rbx
    df63:	bf 80 00 00 00       	mov    edi,0x80
    df68:	e8 e3 4c ff ff       	call   2c50 <__sched_cpucount@plt>
    df6d:	48 98                	cdqe   
    df6f:	48 85 c0             	test   rax,rax
    df72:	74 cd                	je     df41 <num_processors_via_affinity_mask+0x31>
    df74:	eb cd                	jmp    df43 <num_processors_via_affinity_mask+0x33>
    df76:	e8 25 4d ff ff       	call   2ca0 <__stack_chk_fail@plt>
    df7b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000df80 <parse_omp_threads.part.0>:
    df80:	48 83 ec 18          	sub    rsp,0x18
    df84:	0f b6 0f             	movzx  ecx,BYTE PTR [rdi]
    df87:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    df8e:	00 00 
    df90:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    df95:	31 c0                	xor    eax,eax
    df97:	84 c9                	test   cl,cl
    df99:	74 43                	je     dfde <parse_omp_threads.part.0+0x5e>
    df9b:	0f be c1             	movsx  eax,cl
    df9e:	83 f8 20             	cmp    eax,0x20
    dfa1:	77 5d                	ja     e000 <parse_omp_threads.part.0+0x80>
    dfa3:	48 b8 00 3e 00 00 01 	movabs rax,0x100003e00
    dfaa:	00 00 00 
    dfad:	be 01 00 00 00       	mov    esi,0x1
    dfb2:	48 0f a3 c8          	bt     rax,rcx
    dfb6:	48 89 c2             	mov    rdx,rax
    dfb9:	72 18                	jb     dfd3 <parse_omp_threads.part.0+0x53>
    dfbb:	eb 43                	jmp    e000 <parse_omp_threads.part.0+0x80>
    dfbd:	0f 1f 00             	nop    DWORD PTR [rax]
    dfc0:	0f be c1             	movsx  eax,cl
    dfc3:	83 f8 20             	cmp    eax,0x20
    dfc6:	77 38                	ja     e000 <parse_omp_threads.part.0+0x80>
    dfc8:	48 89 f0             	mov    rax,rsi
    dfcb:	48 d3 e0             	shl    rax,cl
    dfce:	48 85 d0             	test   rax,rdx
    dfd1:	74 2d                	je     e000 <parse_omp_threads.part.0+0x80>
    dfd3:	48 83 c7 01          	add    rdi,0x1
    dfd7:	0f b6 0f             	movzx  ecx,BYTE PTR [rdi]
    dfda:	84 c9                	test   cl,cl
    dfdc:	75 e2                	jne    dfc0 <parse_omp_threads.part.0+0x40>
    dfde:	31 c0                	xor    eax,eax
    dfe0:	48 8b 54 24 08       	mov    rdx,QWORD PTR [rsp+0x8]
    dfe5:	64 48 33 14 25 28 00 	xor    rdx,QWORD PTR fs:0x28
    dfec:	00 00 
    dfee:	0f 85 98 00 00 00    	jne    e08c <parse_omp_threads.part.0+0x10c>
    dff4:	48 83 c4 18          	add    rsp,0x18
    dff8:	c3                   	ret    
    dff9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    e000:	83 e9 30             	sub    ecx,0x30
    e003:	31 c0                	xor    eax,eax
    e005:	80 f9 09             	cmp    cl,0x9
    e008:	77 d6                	ja     dfe0 <parse_omp_threads.part.0+0x60>
    e00a:	ba 0a 00 00 00       	mov    edx,0xa
    e00f:	48 89 e6             	mov    rsi,rsp
    e012:	48 c7 04 24 00 00 00 	mov    QWORD PTR [rsp],0x0
    e019:	00 
    e01a:	e8 61 50 ff ff       	call   3080 <strtoul@plt>
    e01f:	48 8b 14 24          	mov    rdx,QWORD PTR [rsp]
    e023:	48 85 d2             	test   rdx,rdx
    e026:	74 b6                	je     dfde <parse_omp_threads.part.0+0x5e>
    e028:	0f b6 0a             	movzx  ecx,BYTE PTR [rdx]
    e02b:	84 c9                	test   cl,cl
    e02d:	74 b1                	je     dfe0 <parse_omp_threads.part.0+0x60>
    e02f:	0f be f1             	movsx  esi,cl
    e032:	83 fe 20             	cmp    esi,0x20
    e035:	77 47                	ja     e07e <parse_omp_threads.part.0+0xfe>
    e037:	48 bf 00 3e 00 00 01 	movabs rdi,0x100003e00
    e03e:	00 00 00 
    e041:	48 0f a3 cf          	bt     rdi,rcx
    e045:	73 37                	jae    e07e <parse_omp_threads.part.0+0xfe>
    e047:	48 83 c2 01          	add    rdx,0x1
    e04b:	41 b8 01 00 00 00    	mov    r8d,0x1
    e051:	eb 14                	jmp    e067 <parse_omp_threads.part.0+0xe7>
    e053:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    e058:	4c 89 c6             	mov    rsi,r8
    e05b:	48 83 c2 01          	add    rdx,0x1
    e05f:	48 d3 e6             	shl    rsi,cl
    e062:	48 85 fe             	test   rsi,rdi
    e065:	74 17                	je     e07e <parse_omp_threads.part.0+0xfe>
    e067:	48 89 14 24          	mov    QWORD PTR [rsp],rdx
    e06b:	0f b6 0a             	movzx  ecx,BYTE PTR [rdx]
    e06e:	84 c9                	test   cl,cl
    e070:	0f 84 6a ff ff ff    	je     dfe0 <parse_omp_threads.part.0+0x60>
    e076:	0f be f1             	movsx  esi,cl
    e079:	83 fe 20             	cmp    esi,0x20
    e07c:	76 da                	jbe    e058 <parse_omp_threads.part.0+0xd8>
    e07e:	80 f9 2c             	cmp    cl,0x2c
    e081:	0f 85 57 ff ff ff    	jne    dfde <parse_omp_threads.part.0+0x5e>
    e087:	e9 54 ff ff ff       	jmp    dfe0 <parse_omp_threads.part.0+0x60>
    e08c:	e8 0f 4c ff ff       	call   2ca0 <__stack_chk_fail@plt>
    e091:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    e096:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    e09d:	00 00 00 

000000000000e0a0 <num_processors>:
    e0a0:	55                   	push   rbp
    e0a1:	53                   	push   rbx
    e0a2:	48 83 ec 08          	sub    rsp,0x8
    e0a6:	83 ff 02             	cmp    edi,0x2
    e0a9:	74 35                	je     e0e0 <num_processors+0x40>
    e0ab:	83 ff 01             	cmp    edi,0x1
    e0ae:	0f 84 fc 00 00 00    	je     e1b0 <num_processors+0x110>
    e0b4:	bf 53 00 00 00       	mov    edi,0x53
    e0b9:	e8 92 4f ff ff       	call   3050 <sysconf@plt>
    e0be:	48 83 f8 01          	cmp    rax,0x1
    e0c2:	0f 84 c0 00 00 00    	je     e188 <num_processors+0xe8>
    e0c8:	48 85 c0             	test   rax,rax
    e0cb:	ba 01 00 00 00       	mov    edx,0x1
    e0d0:	48 0f 4e c2          	cmovle rax,rdx
    e0d4:	48 83 c4 08          	add    rsp,0x8
    e0d8:	5b                   	pop    rbx
    e0d9:	5d                   	pop    rbp
    e0da:	c3                   	ret    
    e0db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    e0e0:	48 8d 3d 8d 7a 00 00 	lea    rdi,[rip+0x7a8d]        # 15b74 <default_tuning+0x34>
    e0e7:	e8 d4 49 ff ff       	call   2ac0 <getenv@plt>
    e0ec:	48 85 c0             	test   rax,rax
    e0ef:	74 57                	je     e148 <num_processors+0xa8>
    e0f1:	48 89 c7             	mov    rdi,rax
    e0f4:	48 c7 c5 ff ff ff ff 	mov    rbp,0xffffffffffffffff
    e0fb:	e8 80 fe ff ff       	call   df80 <parse_omp_threads.part.0>
    e100:	48 8d 3d 7d 7a 00 00 	lea    rdi,[rip+0x7a7d]        # 15b84 <default_tuning+0x44>
    e107:	48 89 c3             	mov    rbx,rax
    e10a:	e8 b1 49 ff ff       	call   2ac0 <getenv@plt>
    e10f:	48 85 c0             	test   rax,rax
    e112:	74 19                	je     e12d <num_processors+0x8d>
    e114:	48 89 c7             	mov    rdi,rax
    e117:	e8 64 fe ff ff       	call   df80 <parse_omp_threads.part.0>
    e11c:	48 89 c5             	mov    rbp,rax
    e11f:	48 85 c0             	test   rax,rax
    e122:	48 c7 c0 ff ff ff ff 	mov    rax,0xffffffffffffffff
    e129:	48 0f 44 e8          	cmove  rbp,rax
    e12d:	48 85 db             	test   rbx,rbx
    e130:	74 37                	je     e169 <num_processors+0xc9>
    e132:	48 39 dd             	cmp    rbp,rbx
    e135:	48 89 d8             	mov    rax,rbx
    e138:	48 0f 46 c5          	cmovbe rax,rbp
    e13c:	48 83 c4 08          	add    rsp,0x8
    e140:	5b                   	pop    rbx
    e141:	5d                   	pop    rbp
    e142:	c3                   	ret    
    e143:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    e148:	48 8d 3d 35 7a 00 00 	lea    rdi,[rip+0x7a35]        # 15b84 <default_tuning+0x44>
    e14f:	e8 6c 49 ff ff       	call   2ac0 <getenv@plt>
    e154:	48 85 c0             	test   rax,rax
    e157:	74 57                	je     e1b0 <num_processors+0x110>
    e159:	48 89 c7             	mov    rdi,rax
    e15c:	e8 1f fe ff ff       	call   df80 <parse_omp_threads.part.0>
    e161:	48 85 c0             	test   rax,rax
    e164:	48 89 c5             	mov    rbp,rax
    e167:	74 47                	je     e1b0 <num_processors+0x110>
    e169:	e8 a2 fd ff ff       	call   df10 <num_processors_via_affinity_mask>
    e16e:	48 85 c0             	test   rax,rax
    e171:	74 4e                	je     e1c1 <num_processors+0x121>
    e173:	48 39 e8             	cmp    rax,rbp
    e176:	48 0f 47 c5          	cmova  rax,rbp
    e17a:	48 83 c4 08          	add    rsp,0x8
    e17e:	5b                   	pop    rbx
    e17f:	5d                   	pop    rbp
    e180:	c3                   	ret    
    e181:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    e188:	e8 83 fd ff ff       	call   df10 <num_processors_via_affinity_mask>
    e18d:	48 89 c2             	mov    rdx,rax
    e190:	b8 01 00 00 00       	mov    eax,0x1
    e195:	48 85 d2             	test   rdx,rdx
    e198:	0f 84 36 ff ff ff    	je     e0d4 <num_processors+0x34>
    e19e:	48 89 d0             	mov    rax,rdx
    e1a1:	e9 22 ff ff ff       	jmp    e0c8 <num_processors+0x28>
    e1a6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    e1ad:	00 00 00 
    e1b0:	e8 5b fd ff ff       	call   df10 <num_processors_via_affinity_mask>
    e1b5:	48 85 c0             	test   rax,rax
    e1b8:	48 c7 c5 ff ff ff ff 	mov    rbp,0xffffffffffffffff
    e1bf:	75 b2                	jne    e173 <num_processors+0xd3>
    e1c1:	bf 54 00 00 00       	mov    edi,0x54
    e1c6:	e8 85 4e ff ff       	call   3050 <sysconf@plt>
    e1cb:	48 89 c2             	mov    rdx,rax
    e1ce:	b8 01 00 00 00       	mov    eax,0x1
    e1d3:	48 85 d2             	test   rdx,rdx
    e1d6:	0f 8e f8 fe ff ff    	jle    e0d4 <num_processors+0x34>
    e1dc:	48 39 ea             	cmp    rdx,rbp
    e1df:	48 89 e8             	mov    rax,rbp
    e1e2:	48 0f 46 c2          	cmovbe rax,rdx
    e1e6:	e9 e9 fe ff ff       	jmp    e0d4 <num_processors+0x34>
    e1eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000e1f0 <physmem_total>:
    e1f0:	48 81 ec 98 00 00 00 	sub    rsp,0x98
    e1f7:	bf 55 00 00 00       	mov    edi,0x55
    e1fc:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    e203:	00 00 
    e205:	48 89 84 24 88 00 00 	mov    QWORD PTR [rsp+0x88],rax
    e20c:	00 
    e20d:	31 c0                	xor    eax,eax
    e20f:	e8 3c 4e ff ff       	call   3050 <sysconf@plt>
    e214:	66 0f ef c0          	pxor   xmm0,xmm0
    e218:	bf 1e 00 00 00       	mov    edi,0x1e
    e21d:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
    e222:	f2 0f 11 44 24 08    	movsd  QWORD PTR [rsp+0x8],xmm0
    e228:	e8 23 4e ff ff       	call   3050 <sysconf@plt>
    e22d:	66 0f ef d2          	pxor   xmm2,xmm2
    e231:	f2 0f 10 44 24 08    	movsd  xmm0,QWORD PTR [rsp+0x8]
    e237:	66 0f 2e c2          	ucomisd xmm0,xmm2
    e23b:	72 33                	jb     e270 <physmem_total+0x80>
    e23d:	66 0f ef c9          	pxor   xmm1,xmm1
    e241:	f2 48 0f 2a c8       	cvtsi2sd xmm1,rax
    e246:	66 0f 2e ca          	ucomisd xmm1,xmm2
    e24a:	72 24                	jb     e270 <physmem_total+0x80>
    e24c:	f2 0f 59 c1          	mulsd  xmm0,xmm1
    e250:	48 8b 84 24 88 00 00 	mov    rax,QWORD PTR [rsp+0x88]
    e257:	00 
    e258:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    e25f:	00 00 
    e261:	75 68                	jne    e2cb <physmem_total+0xdb>
    e263:	48 81 c4 98 00 00 00 	add    rsp,0x98
    e26a:	c3                   	ret    
    e26b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    e270:	48 8d 7c 24 10       	lea    rdi,[rsp+0x10]
    e275:	e8 26 4e ff ff       	call   30a0 <sysinfo@plt>
    e27a:	85 c0                	test   eax,eax
    e27c:	f2 0f 10 05 14 79 00 	movsd  xmm0,QWORD PTR [rip+0x7914]        # 15b98 <default_tuning+0x58>
    e283:	00 
    e284:	75 ca                	jne    e250 <physmem_total+0x60>
    e286:	48 8b 44 24 30       	mov    rax,QWORD PTR [rsp+0x30]
    e28b:	48 85 c0             	test   rax,rax
    e28e:	78 20                	js     e2b0 <physmem_total+0xc0>
    e290:	66 0f ef c0          	pxor   xmm0,xmm0
    e294:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
    e299:	8b 44 24 78          	mov    eax,DWORD PTR [rsp+0x78]
    e29d:	66 0f ef c9          	pxor   xmm1,xmm1
    e2a1:	f2 48 0f 2a c8       	cvtsi2sd xmm1,rax
    e2a6:	eb a4                	jmp    e24c <physmem_total+0x5c>
    e2a8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    e2af:	00 
    e2b0:	48 89 c2             	mov    rdx,rax
    e2b3:	66 0f ef c0          	pxor   xmm0,xmm0
    e2b7:	48 d1 ea             	shr    rdx,1
    e2ba:	83 e0 01             	and    eax,0x1
    e2bd:	48 09 c2             	or     rdx,rax
    e2c0:	f2 48 0f 2a c2       	cvtsi2sd xmm0,rdx
    e2c5:	f2 0f 58 c0          	addsd  xmm0,xmm0
    e2c9:	eb ce                	jmp    e299 <physmem_total+0xa9>
    e2cb:	e8 d0 49 ff ff       	call   2ca0 <__stack_chk_fail@plt>

000000000000e2d0 <physmem_available>:
    e2d0:	48 81 ec 98 00 00 00 	sub    rsp,0x98
    e2d7:	bf 56 00 00 00       	mov    edi,0x56
    e2dc:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    e2e3:	00 00 
    e2e5:	48 89 84 24 88 00 00 	mov    QWORD PTR [rsp+0x88],rax
    e2ec:	00 
    e2ed:	31 c0                	xor    eax,eax
    e2ef:	e8 5c 4d ff ff       	call   3050 <sysconf@plt>
    e2f4:	66 0f ef c0          	pxor   xmm0,xmm0
    e2f8:	bf 1e 00 00 00       	mov    edi,0x1e
    e2fd:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
    e302:	f2 0f 11 44 24 08    	movsd  QWORD PTR [rsp+0x8],xmm0
    e308:	e8 43 4d ff ff       	call   3050 <sysconf@plt>
    e30d:	66 0f ef d2          	pxor   xmm2,xmm2
    e311:	f2 0f 10 44 24 08    	movsd  xmm0,QWORD PTR [rsp+0x8]
    e317:	66 0f 2e c2          	ucomisd xmm0,xmm2
    e31b:	72 33                	jb     e350 <physmem_available+0x80>
    e31d:	66 0f ef c9          	pxor   xmm1,xmm1
    e321:	f2 48 0f 2a c8       	cvtsi2sd xmm1,rax
    e326:	66 0f 2e ca          	ucomisd xmm1,xmm2
    e32a:	72 24                	jb     e350 <physmem_available+0x80>
    e32c:	f2 0f 59 c1          	mulsd  xmm0,xmm1
    e330:	48 8b 84 24 88 00 00 	mov    rax,QWORD PTR [rsp+0x88]
    e337:	00 
    e338:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    e33f:	00 00 
    e341:	0f 85 a4 00 00 00    	jne    e3eb <physmem_available+0x11b>
    e347:	48 81 c4 98 00 00 00 	add    rsp,0x98
    e34e:	c3                   	ret    
    e34f:	90                   	nop
    e350:	48 8d 7c 24 10       	lea    rdi,[rsp+0x10]
    e355:	e8 46 4d ff ff       	call   30a0 <sysinfo@plt>
    e35a:	85 c0                	test   eax,eax
    e35c:	75 42                	jne    e3a0 <physmem_available+0xd0>
    e35e:	48 8b 44 24 38       	mov    rax,QWORD PTR [rsp+0x38]
    e363:	48 85 c0             	test   rax,rax
    e366:	78 68                	js     e3d0 <physmem_available+0x100>
    e368:	66 0f ef c0          	pxor   xmm0,xmm0
    e36c:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
    e371:	48 8b 44 24 48       	mov    rax,QWORD PTR [rsp+0x48]
    e376:	48 85 c0             	test   rax,rax
    e379:	78 35                	js     e3b0 <physmem_available+0xe0>
    e37b:	66 0f ef c9          	pxor   xmm1,xmm1
    e37f:	f2 48 0f 2a c8       	cvtsi2sd xmm1,rax
    e384:	8b 44 24 78          	mov    eax,DWORD PTR [rsp+0x78]
    e388:	f2 0f 58 c1          	addsd  xmm0,xmm1
    e38c:	66 0f ef c9          	pxor   xmm1,xmm1
    e390:	f2 48 0f 2a c8       	cvtsi2sd xmm1,rax
    e395:	eb 95                	jmp    e32c <physmem_available+0x5c>
    e397:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    e39e:	00 00 
    e3a0:	e8 4b fe ff ff       	call   e1f0 <physmem_total>
    e3a5:	f2 0f 59 05 1b 76 00 	mulsd  xmm0,QWORD PTR [rip+0x761b]        # 159c8 <short_options+0x1af8>
    e3ac:	00 
    e3ad:	eb 81                	jmp    e330 <physmem_available+0x60>
    e3af:	90                   	nop
    e3b0:	48 89 c2             	mov    rdx,rax
    e3b3:	66 0f ef c9          	pxor   xmm1,xmm1
    e3b7:	48 d1 ea             	shr    rdx,1
    e3ba:	83 e0 01             	and    eax,0x1
    e3bd:	48 09 c2             	or     rdx,rax
    e3c0:	f2 48 0f 2a ca       	cvtsi2sd xmm1,rdx
    e3c5:	f2 0f 58 c9          	addsd  xmm1,xmm1
    e3c9:	eb b9                	jmp    e384 <physmem_available+0xb4>
    e3cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    e3d0:	48 89 c2             	mov    rdx,rax
    e3d3:	66 0f ef c0          	pxor   xmm0,xmm0
    e3d7:	48 d1 ea             	shr    rdx,1
    e3da:	83 e0 01             	and    eax,0x1
    e3dd:	48 09 c2             	or     rdx,rax
    e3e0:	f2 48 0f 2a c2       	cvtsi2sd xmm0,rdx
    e3e5:	f2 0f 58 c0          	addsd  xmm0,xmm0
    e3e9:	eb 86                	jmp    e371 <physmem_available+0xa1>
    e3eb:	e8 b0 48 ff ff       	call   2ca0 <__stack_chk_fail@plt>

000000000000e3f0 <rpl_pipe2>:
    e3f0:	8b 05 aa c4 20 00    	mov    eax,DWORD PTR [rip+0x20c4aa]        # 21a8a0 <have_pipe2_really.4102>
    e3f6:	41 56                	push   r14
    e3f8:	41 55                	push   r13
    e3fa:	41 54                	push   r12
    e3fc:	55                   	push   rbp
    e3fd:	89 f5                	mov    ebp,esi
    e3ff:	53                   	push   rbx
    e400:	85 c0                	test   eax,eax
    e402:	48 89 fb             	mov    rbx,rdi
    e405:	44 8b 2f             	mov    r13d,DWORD PTR [rdi]
    e408:	44 8b 77 04          	mov    r14d,DWORD PTR [rdi+0x4]
    e40c:	0f 89 de 00 00 00    	jns    e4f0 <rpl_pipe2+0x100>
    e412:	41 89 ec             	mov    r12d,ebp
    e415:	41 81 e4 ff f7 f7 ff 	and    r12d,0xfff7f7ff
    e41c:	0f 85 9e 01 00 00    	jne    e5c0 <rpl_pipe2+0x1d0>
    e422:	48 89 df             	mov    rdi,rbx
    e425:	e8 96 49 ff ff       	call   2dc0 <pipe@plt>
    e42a:	85 c0                	test   eax,eax
    e42c:	0f 88 a4 01 00 00    	js     e5d6 <rpl_pipe2+0x1e6>
    e432:	f7 c5 00 08 00 00    	test   ebp,0x800
    e438:	0f 85 e2 00 00 00    	jne    e520 <rpl_pipe2+0x130>
    e43e:	81 e5 00 00 08 00    	and    ebp,0x80000
    e444:	75 12                	jne    e458 <rpl_pipe2+0x68>
    e446:	5b                   	pop    rbx
    e447:	44 89 e0             	mov    eax,r12d
    e44a:	5d                   	pop    rbp
    e44b:	41 5c                	pop    r12
    e44d:	41 5d                	pop    r13
    e44f:	41 5e                	pop    r14
    e451:	c3                   	ret    
    e452:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    e458:	8b 7b 04             	mov    edi,DWORD PTR [rbx+0x4]
    e45b:	31 d2                	xor    edx,edx
    e45d:	31 c0                	xor    eax,eax
    e45f:	be 01 00 00 00       	mov    esi,0x1
    e464:	e8 57 47 00 00       	call   12bc0 <rpl_fcntl>
    e469:	85 c0                	test   eax,eax
    e46b:	78 4b                	js     e4b8 <rpl_pipe2+0xc8>
    e46d:	8b 7b 04             	mov    edi,DWORD PTR [rbx+0x4]
    e470:	83 c8 01             	or     eax,0x1
    e473:	be 02 00 00 00       	mov    esi,0x2
    e478:	89 c2                	mov    edx,eax
    e47a:	31 c0                	xor    eax,eax
    e47c:	e8 3f 47 00 00       	call   12bc0 <rpl_fcntl>
    e481:	83 f8 ff             	cmp    eax,0xffffffff
    e484:	74 32                	je     e4b8 <rpl_pipe2+0xc8>
    e486:	8b 3b                	mov    edi,DWORD PTR [rbx]
    e488:	31 d2                	xor    edx,edx
    e48a:	31 c0                	xor    eax,eax
    e48c:	be 01 00 00 00       	mov    esi,0x1
    e491:	e8 2a 47 00 00       	call   12bc0 <rpl_fcntl>
    e496:	85 c0                	test   eax,eax
    e498:	78 1e                	js     e4b8 <rpl_pipe2+0xc8>
    e49a:	8b 3b                	mov    edi,DWORD PTR [rbx]
    e49c:	83 c8 01             	or     eax,0x1
    e49f:	be 02 00 00 00       	mov    esi,0x2
    e4a4:	89 c2                	mov    edx,eax
    e4a6:	31 c0                	xor    eax,eax
    e4a8:	e8 13 47 00 00       	call   12bc0 <rpl_fcntl>
    e4ad:	83 f8 ff             	cmp    eax,0xffffffff
    e4b0:	75 94                	jne    e446 <rpl_pipe2+0x56>
    e4b2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    e4b8:	e8 53 46 ff ff       	call   2b10 <__errno_location@plt>
    e4bd:	8b 3b                	mov    edi,DWORD PTR [rbx]
    e4bf:	44 8b 20             	mov    r12d,DWORD PTR [rax]
    e4c2:	48 89 c5             	mov    rbp,rax
    e4c5:	e8 e6 48 ff ff       	call   2db0 <close@plt>
    e4ca:	8b 7b 04             	mov    edi,DWORD PTR [rbx+0x4]
    e4cd:	e8 de 48 ff ff       	call   2db0 <close@plt>
    e4d2:	44 89 2b             	mov    DWORD PTR [rbx],r13d
    e4d5:	44 89 73 04          	mov    DWORD PTR [rbx+0x4],r14d
    e4d9:	44 89 65 00          	mov    DWORD PTR [rbp+0x0],r12d
    e4dd:	41 bc ff ff ff ff    	mov    r12d,0xffffffff
    e4e3:	e9 5e ff ff ff       	jmp    e446 <rpl_pipe2+0x56>
    e4e8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    e4ef:	00 
    e4f0:	e8 bb 4b ff ff       	call   30b0 <pipe2@plt>
    e4f5:	85 c0                	test   eax,eax
    e4f7:	41 89 c4             	mov    r12d,eax
    e4fa:	0f 88 a0 00 00 00    	js     e5a0 <rpl_pipe2+0x1b0>
    e500:	5b                   	pop    rbx
    e501:	44 89 e0             	mov    eax,r12d
    e504:	c7 05 92 c3 20 00 01 	mov    DWORD PTR [rip+0x20c392],0x1        # 21a8a0 <have_pipe2_really.4102>
    e50b:	00 00 00 
    e50e:	5d                   	pop    rbp
    e50f:	41 5c                	pop    r12
    e511:	41 5d                	pop    r13
    e513:	41 5e                	pop    r14
    e515:	c3                   	ret    
    e516:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    e51d:	00 00 00 
    e520:	8b 7b 04             	mov    edi,DWORD PTR [rbx+0x4]
    e523:	31 d2                	xor    edx,edx
    e525:	31 c0                	xor    eax,eax
    e527:	be 03 00 00 00       	mov    esi,0x3
    e52c:	e8 8f 46 00 00       	call   12bc0 <rpl_fcntl>
    e531:	85 c0                	test   eax,eax
    e533:	78 83                	js     e4b8 <rpl_pipe2+0xc8>
    e535:	8b 7b 04             	mov    edi,DWORD PTR [rbx+0x4]
    e538:	80 cc 08             	or     ah,0x8
    e53b:	be 04 00 00 00       	mov    esi,0x4
    e540:	89 c2                	mov    edx,eax
    e542:	31 c0                	xor    eax,eax
    e544:	e8 77 46 00 00       	call   12bc0 <rpl_fcntl>
    e549:	83 f8 ff             	cmp    eax,0xffffffff
    e54c:	0f 84 66 ff ff ff    	je     e4b8 <rpl_pipe2+0xc8>
    e552:	8b 3b                	mov    edi,DWORD PTR [rbx]
    e554:	31 d2                	xor    edx,edx
    e556:	31 c0                	xor    eax,eax
    e558:	be 03 00 00 00       	mov    esi,0x3
    e55d:	e8 5e 46 00 00       	call   12bc0 <rpl_fcntl>
    e562:	85 c0                	test   eax,eax
    e564:	0f 88 4e ff ff ff    	js     e4b8 <rpl_pipe2+0xc8>
    e56a:	8b 3b                	mov    edi,DWORD PTR [rbx]
    e56c:	80 cc 08             	or     ah,0x8
    e56f:	be 04 00 00 00       	mov    esi,0x4
    e574:	89 c2                	mov    edx,eax
    e576:	31 c0                	xor    eax,eax
    e578:	e8 43 46 00 00       	call   12bc0 <rpl_fcntl>
    e57d:	83 f8 ff             	cmp    eax,0xffffffff
    e580:	0f 84 32 ff ff ff    	je     e4b8 <rpl_pipe2+0xc8>
    e586:	81 e5 00 00 08 00    	and    ebp,0x80000
    e58c:	0f 84 b4 fe ff ff    	je     e446 <rpl_pipe2+0x56>
    e592:	e9 c1 fe ff ff       	jmp    e458 <rpl_pipe2+0x68>
    e597:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    e59e:	00 00 
    e5a0:	e8 6b 45 ff ff       	call   2b10 <__errno_location@plt>
    e5a5:	83 38 26             	cmp    DWORD PTR [rax],0x26
    e5a8:	0f 85 52 ff ff ff    	jne    e500 <rpl_pipe2+0x110>
    e5ae:	c7 05 e8 c2 20 00 ff 	mov    DWORD PTR [rip+0x20c2e8],0xffffffff        # 21a8a0 <have_pipe2_really.4102>
    e5b5:	ff ff ff 
    e5b8:	e9 55 fe ff ff       	jmp    e412 <rpl_pipe2+0x22>
    e5bd:	0f 1f 00             	nop    DWORD PTR [rax]
    e5c0:	e8 4b 45 ff ff       	call   2b10 <__errno_location@plt>
    e5c5:	41 bc ff ff ff ff    	mov    r12d,0xffffffff
    e5cb:	c7 00 16 00 00 00    	mov    DWORD PTR [rax],0x16
    e5d1:	e9 70 fe ff ff       	jmp    e446 <rpl_pipe2+0x56>
    e5d6:	41 bc ff ff ff ff    	mov    r12d,0xffffffff
    e5dc:	e9 65 fe ff ff       	jmp    e446 <rpl_pipe2+0x56>
    e5e1:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    e5e8:	00 00 00 
    e5eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000e5f0 <posix2_version>:
    e5f0:	53                   	push   rbx
    e5f1:	48 8d 3d a8 75 00 00 	lea    rdi,[rip+0x75a8]        # 15ba0 <default_tuning+0x60>
    e5f8:	bb 69 10 03 00       	mov    ebx,0x31069
    e5fd:	48 83 ec 10          	sub    rsp,0x10
    e601:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    e608:	00 00 
    e60a:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    e60f:	31 c0                	xor    eax,eax
    e611:	e8 aa 44 ff ff       	call   2ac0 <getenv@plt>
    e616:	48 85 c0             	test   rax,rax
    e619:	74 05                	je     e620 <posix2_version+0x30>
    e61b:	80 38 00             	cmp    BYTE PTR [rax],0x0
    e61e:	75 20                	jne    e640 <posix2_version+0x50>
    e620:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
    e625:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    e62c:	00 00 
    e62e:	89 d8                	mov    eax,ebx
    e630:	75 47                	jne    e679 <posix2_version+0x89>
    e632:	48 83 c4 10          	add    rsp,0x10
    e636:	5b                   	pop    rbx
    e637:	c3                   	ret    
    e638:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    e63f:	00 
    e640:	ba 0a 00 00 00       	mov    edx,0xa
    e645:	48 89 e6             	mov    rsi,rsp
    e648:	48 89 c7             	mov    rdi,rax
    e64b:	e8 20 48 ff ff       	call   2e70 <strtol@plt>
    e650:	48 8b 14 24          	mov    rdx,QWORD PTR [rsp]
    e654:	80 3a 00             	cmp    BYTE PTR [rdx],0x0
    e657:	75 c7                	jne    e620 <posix2_version+0x30>
    e659:	48 3d 00 00 00 80    	cmp    rax,0xffffffff80000000
    e65f:	7c 11                	jl     e672 <posix2_version+0x82>
    e661:	48 3d ff ff ff 7f    	cmp    rax,0x7fffffff
    e667:	bb ff ff ff 7f       	mov    ebx,0x7fffffff
    e66c:	48 0f 4e d8          	cmovle rbx,rax
    e670:	eb ae                	jmp    e620 <posix2_version+0x30>
    e672:	bb 00 00 00 80       	mov    ebx,0x80000000
    e677:	eb a7                	jmp    e620 <posix2_version+0x30>
    e679:	e8 22 46 ff ff       	call   2ca0 <__stack_chk_fail@plt>
    e67e:	66 90                	xchg   ax,ax

000000000000e680 <set_program_name>:
    e680:	48 85 ff             	test   rdi,rdi
    e683:	53                   	push   rbx
    e684:	74 77                	je     e6fd <set_program_name+0x7d>
    e686:	be 2f 00 00 00       	mov    esi,0x2f
    e68b:	48 89 fb             	mov    rbx,rdi
    e68e:	e8 8d 46 ff ff       	call   2d20 <strrchr@plt>
    e693:	48 85 c0             	test   rax,rax
    e696:	74 55                	je     e6ed <set_program_name+0x6d>
    e698:	4c 8d 40 01          	lea    r8,[rax+0x1]
    e69c:	4c 89 c2             	mov    rdx,r8
    e69f:	48 29 da             	sub    rdx,rbx
    e6a2:	48 83 fa 06          	cmp    rdx,0x6
    e6a6:	7e 45                	jle    e6ed <set_program_name+0x6d>
    e6a8:	48 8d 70 fa          	lea    rsi,[rax-0x6]
    e6ac:	48 8d 3d 35 75 00 00 	lea    rdi,[rip+0x7535]        # 15be8 <default_tuning+0xa8>
    e6b3:	b9 07 00 00 00       	mov    ecx,0x7
    e6b8:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    e6ba:	0f 97 c2             	seta   dl
    e6bd:	80 da 00             	sbb    dl,0x0
    e6c0:	84 d2                	test   dl,dl
    e6c2:	75 29                	jne    e6ed <set_program_name+0x6d>
    e6c4:	48 8d 3d 25 75 00 00 	lea    rdi,[rip+0x7525]        # 15bf0 <default_tuning+0xb0>
    e6cb:	b9 03 00 00 00       	mov    ecx,0x3
    e6d0:	4c 89 c6             	mov    rsi,r8
    e6d3:	4c 89 c3             	mov    rbx,r8
    e6d6:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    e6d8:	0f 97 c2             	seta   dl
    e6db:	80 da 00             	sbb    dl,0x0
    e6de:	84 d2                	test   dl,dl
    e6e0:	75 0b                	jne    e6ed <set_program_name+0x6d>
    e6e2:	48 8d 58 04          	lea    rbx,[rax+0x4]
    e6e6:	48 89 1d d3 ba 20 00 	mov    QWORD PTR [rip+0x20bad3],rbx        # 21a1c0 <__progname@@GLIBC_2.2.5>
    e6ed:	48 89 1d b4 c1 20 00 	mov    QWORD PTR [rip+0x20c1b4],rbx        # 21a8a8 <program_name>
    e6f4:	48 89 1d ed ba 20 00 	mov    QWORD PTR [rip+0x20baed],rbx        # 21a1e8 <__progname_full@@GLIBC_2.2.5>
    e6fb:	5b                   	pop    rbx
    e6fc:	c3                   	ret    
    e6fd:	48 8b 0d fc ba 20 00 	mov    rcx,QWORD PTR [rip+0x20bafc]        # 21a200 <stderr@@GLIBC_2.2.5>
    e704:	48 8d 3d a5 74 00 00 	lea    rdi,[rip+0x74a5]        # 15bb0 <default_tuning+0x70>
    e70b:	ba 37 00 00 00       	mov    edx,0x37
    e710:	be 01 00 00 00       	mov    esi,0x1
    e715:	e8 d6 49 ff ff       	call   30f0 <fwrite@plt>
    e71a:	e8 e1 43 ff ff       	call   2b00 <abort@plt>
    e71f:	90                   	nop

000000000000e720 <gettext_quote.part.1>:
    e720:	55                   	push   rbp
    e721:	53                   	push   rbx
    e722:	48 89 fd             	mov    rbp,rdi
    e725:	89 f3                	mov    ebx,esi
    e727:	48 83 ec 08          	sub    rsp,0x8
    e72b:	e8 70 4e 00 00       	call   135a0 <locale_charset>
    e730:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    e733:	83 e2 df             	and    edx,0xffffffdf
    e736:	80 fa 55             	cmp    dl,0x55
    e739:	74 75                	je     e7b0 <gettext_quote.part.1+0x90>
    e73b:	80 fa 47             	cmp    dl,0x47
    e73e:	74 20                	je     e760 <gettext_quote.part.1+0x40>
    e740:	48 8d 05 bc 74 00 00 	lea    rax,[rip+0x74bc]        # 15c03 <default_tuning+0xc3>
    e747:	48 8d 15 64 6f 00 00 	lea    rdx,[rip+0x6f64]        # 156b2 <short_options+0x17e2>
    e74e:	83 fb 09             	cmp    ebx,0x9
    e751:	48 0f 45 c2          	cmovne rax,rdx
    e755:	48 83 c4 08          	add    rsp,0x8
    e759:	5b                   	pop    rbx
    e75a:	5d                   	pop    rbp
    e75b:	c3                   	ret    
    e75c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    e760:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
    e764:	83 e2 df             	and    edx,0xffffffdf
    e767:	80 fa 42             	cmp    dl,0x42
    e76a:	75 d4                	jne    e740 <gettext_quote.part.1+0x20>
    e76c:	80 78 02 31          	cmp    BYTE PTR [rax+0x2],0x31
    e770:	75 ce                	jne    e740 <gettext_quote.part.1+0x20>
    e772:	80 78 03 38          	cmp    BYTE PTR [rax+0x3],0x38
    e776:	75 c8                	jne    e740 <gettext_quote.part.1+0x20>
    e778:	80 78 04 30          	cmp    BYTE PTR [rax+0x4],0x30
    e77c:	75 c2                	jne    e740 <gettext_quote.part.1+0x20>
    e77e:	80 78 05 33          	cmp    BYTE PTR [rax+0x5],0x33
    e782:	75 bc                	jne    e740 <gettext_quote.part.1+0x20>
    e784:	80 78 06 30          	cmp    BYTE PTR [rax+0x6],0x30
    e788:	75 b6                	jne    e740 <gettext_quote.part.1+0x20>
    e78a:	80 78 07 00          	cmp    BYTE PTR [rax+0x7],0x0
    e78e:	75 b0                	jne    e740 <gettext_quote.part.1+0x20>
    e790:	80 7d 00 60          	cmp    BYTE PTR [rbp+0x0],0x60
    e794:	48 8d 05 61 74 00 00 	lea    rax,[rip+0x7461]        # 15bfc <default_tuning+0xbc>
    e79b:	48 8d 15 5e 74 00 00 	lea    rdx,[rip+0x745e]        # 15c00 <default_tuning+0xc0>
    e7a2:	48 0f 45 c2          	cmovne rax,rdx
    e7a6:	48 83 c4 08          	add    rsp,0x8
    e7aa:	5b                   	pop    rbx
    e7ab:	5d                   	pop    rbp
    e7ac:	c3                   	ret    
    e7ad:	0f 1f 00             	nop    DWORD PTR [rax]
    e7b0:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
    e7b4:	83 e2 df             	and    edx,0xffffffdf
    e7b7:	80 fa 54             	cmp    dl,0x54
    e7ba:	75 84                	jne    e740 <gettext_quote.part.1+0x20>
    e7bc:	0f b6 50 02          	movzx  edx,BYTE PTR [rax+0x2]
    e7c0:	83 e2 df             	and    edx,0xffffffdf
    e7c3:	80 fa 46             	cmp    dl,0x46
    e7c6:	0f 85 74 ff ff ff    	jne    e740 <gettext_quote.part.1+0x20>
    e7cc:	80 78 03 2d          	cmp    BYTE PTR [rax+0x3],0x2d
    e7d0:	0f 85 6a ff ff ff    	jne    e740 <gettext_quote.part.1+0x20>
    e7d6:	80 78 04 38          	cmp    BYTE PTR [rax+0x4],0x38
    e7da:	0f 85 60 ff ff ff    	jne    e740 <gettext_quote.part.1+0x20>
    e7e0:	80 78 05 00          	cmp    BYTE PTR [rax+0x5],0x0
    e7e4:	0f 85 56 ff ff ff    	jne    e740 <gettext_quote.part.1+0x20>
    e7ea:	80 7d 00 60          	cmp    BYTE PTR [rbp+0x0],0x60
    e7ee:	48 8d 05 ff 73 00 00 	lea    rax,[rip+0x73ff]        # 15bf4 <default_tuning+0xb4>
    e7f5:	48 8d 15 fc 73 00 00 	lea    rdx,[rip+0x73fc]        # 15bf8 <default_tuning+0xb8>
    e7fc:	48 0f 45 c2          	cmovne rax,rdx
    e800:	48 83 c4 08          	add    rsp,0x8
    e804:	5b                   	pop    rbx
    e805:	5d                   	pop    rbp
    e806:	c3                   	ret    
    e807:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    e80e:	00 00 

000000000000e810 <quotearg_buffer_restyled>:
    e810:	41 57                	push   r15
    e812:	41 56                	push   r14
    e814:	45 89 c7             	mov    r15d,r8d
    e817:	41 55                	push   r13
    e819:	41 54                	push   r12
    e81b:	49 89 fe             	mov    r14,rdi
    e81e:	55                   	push   rbp
    e81f:	53                   	push   rbx
    e820:	44 89 cb             	mov    ebx,r9d
    e823:	49 89 f5             	mov    r13,rsi
    e826:	48 89 cd             	mov    rbp,rcx
    e829:	83 e3 02             	and    ebx,0x2
    e82c:	48 81 ec b8 00 00 00 	sub    rsp,0xb8
    e833:	48 8b 84 24 f0 00 00 	mov    rax,QWORD PTR [rsp+0xf0]
    e83a:	00 
    e83b:	48 89 54 24 10       	mov    QWORD PTR [rsp+0x10],rdx
    e840:	44 89 44 24 08       	mov    DWORD PTR [rsp+0x8],r8d
    e845:	44 89 4c 24 78       	mov    DWORD PTR [rsp+0x78],r9d
    e84a:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
    e84f:	48 8b 84 24 f8 00 00 	mov    rax,QWORD PTR [rsp+0xf8]
    e856:	00 
    e857:	48 89 44 24 68       	mov    QWORD PTR [rsp+0x68],rax
    e85c:	48 8b 84 24 00 01 00 	mov    rax,QWORD PTR [rsp+0x100]
    e863:	00 
    e864:	48 89 44 24 60       	mov    QWORD PTR [rsp+0x60],rax
    e869:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    e870:	00 00 
    e872:	48 89 84 24 a8 00 00 	mov    QWORD PTR [rsp+0xa8],rax
    e879:	00 
    e87a:	31 c0                	xor    eax,eax
    e87c:	e8 ff 43 ff ff       	call   2c80 <__ctype_get_mb_cur_max@plt>
    e881:	41 83 ff 0a          	cmp    r15d,0xa
    e885:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
    e88a:	0f 87 af 11 00 00    	ja     fa3f <quotearg_buffer_restyled+0x122f>
    e890:	48 8d 0d c9 73 00 00 	lea    rcx,[rip+0x73c9]        # 15c60 <default_tuning+0x120>
    e897:	44 89 fa             	mov    edx,r15d
    e89a:	48 63 04 91          	movsxd rax,DWORD PTR [rcx+rdx*4]
    e89e:	48 01 c8             	add    rax,rcx
    e8a1:	ff e0                	jmp    rax
    e8a3:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
    e8a8:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
    e8ad:	45 31 e4             	xor    r12d,r12d
    e8b0:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
    e8b7:	00 00 
    e8b9:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
    e8be:	c6 44 24 0d 00       	mov    BYTE PTR [rsp+0xd],0x0
    e8c3:	48 8d 05 e8 6d 00 00 	lea    rax,[rip+0x6de8]        # 156b2 <short_options+0x17e2>
    e8ca:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
    e8d1:	00 00 
    e8d3:	45 31 ff             	xor    r15d,r15d
    e8d6:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
    e8dd:	00 
    e8de:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
    e8e3:	45 31 db             	xor    r11d,r11d
    e8e6:	48 89 e8             	mov    rax,rbp
    e8e9:	45 89 e0             	mov    r8d,r12d
    e8ec:	4c 89 dd             	mov    rbp,r11
    e8ef:	49 89 c3             	mov    r11,rax
    e8f2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    e8f8:	49 39 eb             	cmp    r11,rbp
    e8fb:	41 0f 95 c4          	setne  r12b
    e8ff:	49 83 fb ff          	cmp    r11,0xffffffffffffffff
    e903:	75 0d                	jne    e912 <quotearg_buffer_restyled+0x102>
    e905:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
    e90a:	80 3c 28 00          	cmp    BYTE PTR [rax+rbp*1],0x0
    e90e:	41 0f 95 c4          	setne  r12b
    e912:	45 84 e4             	test   r12b,r12b
    e915:	0f 84 55 06 00 00    	je     ef70 <quotearg_buffer_restyled+0x760>
    e91b:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
    e920:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
    e925:	4c 8d 0c 2f          	lea    r9,[rdi+rbp*1]
    e929:	0f 95 c0             	setne  al
    e92c:	22 44 24 0d          	and    al,BYTE PTR [rsp+0xd]
    e930:	41 89 c2             	mov    r10d,eax
    e933:	0f 84 a7 00 00 00    	je     e9e0 <quotearg_buffer_restyled+0x1d0>
    e939:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
    e93e:	48 85 c0             	test   rax,rax
    e941:	0f 84 29 04 00 00    	je     ed70 <quotearg_buffer_restyled+0x560>
    e947:	49 83 fb ff          	cmp    r11,0xffffffffffffffff
    e94b:	48 8d 5c 05 00       	lea    rbx,[rbp+rax*1+0x0]
    e950:	75 2e                	jne    e980 <quotearg_buffer_restyled+0x170>
    e952:	48 83 f8 01          	cmp    rax,0x1
    e956:	76 28                	jbe    e980 <quotearg_buffer_restyled+0x170>
    e958:	44 88 44 24 38       	mov    BYTE PTR [rsp+0x38],r8b
    e95d:	44 88 54 24 30       	mov    BYTE PTR [rsp+0x30],r10b
    e962:	4c 89 4c 24 28       	mov    QWORD PTR [rsp+0x28],r9
    e967:	e8 24 43 ff ff       	call   2c90 <strlen@plt>
    e96c:	44 0f b6 44 24 38    	movzx  r8d,BYTE PTR [rsp+0x38]
    e972:	44 0f b6 54 24 30    	movzx  r10d,BYTE PTR [rsp+0x30]
    e978:	49 89 c3             	mov    r11,rax
    e97b:	4c 8b 4c 24 28       	mov    r9,QWORD PTR [rsp+0x28]
    e980:	4c 39 db             	cmp    rbx,r11
    e983:	44 88 54 24 28       	mov    BYTE PTR [rsp+0x28],r10b
    e988:	0f 87 b2 05 00 00    	ja     ef40 <quotearg_buffer_restyled+0x730>
    e98e:	48 8b 54 24 18       	mov    rdx,QWORD PTR [rsp+0x18]
    e993:	48 8b 74 24 48       	mov    rsi,QWORD PTR [rsp+0x48]
    e998:	4c 89 cf             	mov    rdi,r9
    e99b:	4c 89 5c 24 40       	mov    QWORD PTR [rsp+0x40],r11
    e9a0:	44 88 44 24 38       	mov    BYTE PTR [rsp+0x38],r8b
    e9a5:	4c 89 4c 24 30       	mov    QWORD PTR [rsp+0x30],r9
    e9aa:	e8 41 44 ff ff       	call   2df0 <memcmp@plt>
    e9af:	85 c0                	test   eax,eax
    e9b1:	4c 8b 4c 24 30       	mov    r9,QWORD PTR [rsp+0x30]
    e9b6:	44 0f b6 44 24 38    	movzx  r8d,BYTE PTR [rsp+0x38]
    e9bc:	4c 8b 5c 24 40       	mov    r11,QWORD PTR [rsp+0x40]
    e9c1:	0f 85 79 05 00 00    	jne    ef40 <quotearg_buffer_restyled+0x730>
    e9c7:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
    e9cc:	44 0f b6 54 24 28    	movzx  r10d,BYTE PTR [rsp+0x28]
    e9d2:	0f 85 7d 0f 00 00    	jne    f955 <quotearg_buffer_restyled+0x1145>
    e9d8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    e9df:	00 
    e9e0:	41 0f b6 19          	movzx  ebx,BYTE PTR [r9]
    e9e4:	80 fb 7e             	cmp    bl,0x7e
    e9e7:	0f 87 1b 03 00 00    	ja     ed08 <quotearg_buffer_restyled+0x4f8>
    e9ed:	48 8d 0d 98 72 00 00 	lea    rcx,[rip+0x7298]        # 15c8c <default_tuning+0x14c>
    e9f4:	0f b6 d3             	movzx  edx,bl
    e9f7:	48 63 04 91          	movsxd rax,DWORD PTR [rcx+rdx*4]
    e9fb:	48 01 c8             	add    rax,rcx
    e9fe:	ff e0                	jmp    rax
    ea00:	45 31 d2             	xor    r10d,r10d
    ea03:	49 83 fb 01          	cmp    r11,0x1
    ea07:	0f 95 c0             	setne  al
    ea0a:	49 83 fb ff          	cmp    r11,0xffffffffffffffff
    ea0e:	75 0c                	jne    ea1c <quotearg_buffer_restyled+0x20c>
    ea10:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
    ea15:	80 78 01 00          	cmp    BYTE PTR [rax+0x1],0x0
    ea19:	0f 95 c0             	setne  al
    ea1c:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
    ea21:	0f 94 c2             	sete   dl
    ea24:	84 c0                	test   al,al
    ea26:	0f 84 4c 02 00 00    	je     ec78 <quotearg_buffer_restyled+0x468>
    ea2c:	45 31 e4             	xor    r12d,r12d
    ea2f:	31 c0                	xor    eax,eax
    ea31:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    ea38:	80 7c 24 0d 01       	cmp    BYTE PTR [rsp+0xd],0x1
    ea3d:	0f 85 0f 01 00 00    	jne    eb52 <quotearg_buffer_restyled+0x342>
    ea43:	84 d2                	test   dl,dl
    ea45:	0f 85 07 01 00 00    	jne    eb52 <quotearg_buffer_restyled+0x342>
    ea4b:	48 8b 74 24 20       	mov    rsi,QWORD PTR [rsp+0x20]
    ea50:	48 85 f6             	test   rsi,rsi
    ea53:	74 14                	je     ea69 <quotearg_buffer_restyled+0x259>
    ea55:	89 da                	mov    edx,ebx
    ea57:	c0 ea 05             	shr    dl,0x5
    ea5a:	0f b6 d2             	movzx  edx,dl
    ea5d:	8b 14 96             	mov    edx,DWORD PTR [rsi+rdx*4]
    ea60:	0f a3 da             	bt     edx,ebx
    ea63:	0f 82 4a 01 00 00    	jb     ebb3 <quotearg_buffer_restyled+0x3a3>
    ea69:	45 84 d2             	test   r10b,r10b
    ea6c:	0f 85 41 01 00 00    	jne    ebb3 <quotearg_buffer_restyled+0x3a3>
    ea72:	83 f0 01             	xor    eax,0x1
    ea75:	48 83 c5 01          	add    rbp,0x1
    ea79:	44 21 c0             	and    eax,r8d
    ea7c:	84 c0                	test   al,al
    ea7e:	74 20                	je     eaa0 <quotearg_buffer_restyled+0x290>
    ea80:	4d 39 fd             	cmp    r13,r15
    ea83:	76 05                	jbe    ea8a <quotearg_buffer_restyled+0x27a>
    ea85:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
    ea8a:	49 8d 47 01          	lea    rax,[r15+0x1]
    ea8e:	49 39 c5             	cmp    r13,rax
    ea91:	76 06                	jbe    ea99 <quotearg_buffer_restyled+0x289>
    ea93:	43 c6 44 3e 01 27    	mov    BYTE PTR [r14+r15*1+0x1],0x27
    ea99:	49 83 c7 02          	add    r15,0x2
    ea9d:	45 31 c0             	xor    r8d,r8d
    eaa0:	4d 39 ef             	cmp    r15,r13
    eaa3:	73 04                	jae    eaa9 <quotearg_buffer_restyled+0x299>
    eaa5:	43 88 1c 3e          	mov    BYTE PTR [r14+r15*1],bl
    eaa9:	0f b6 7c 24 0e       	movzx  edi,BYTE PTR [rsp+0xe]
    eaae:	49 83 c7 01          	add    r15,0x1
    eab2:	b8 00 00 00 00       	mov    eax,0x0
    eab7:	45 84 e4             	test   r12b,r12b
    eaba:	0f 44 f8             	cmove  edi,eax
    eabd:	40 88 7c 24 0e       	mov    BYTE PTR [rsp+0xe],dil
    eac2:	e9 31 fe ff ff       	jmp    e8f8 <quotearg_buffer_restyled+0xe8>
    eac7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    eace:	00 00 
    ead0:	45 31 d2             	xor    r10d,r10d
    ead3:	8b 44 24 08          	mov    eax,DWORD PTR [rsp+0x8]
    ead7:	83 f8 02             	cmp    eax,0x2
    eada:	0f 84 b8 05 00 00    	je     f098 <quotearg_buffer_restyled+0x888>
    eae0:	83 f8 05             	cmp    eax,0x5
    eae3:	0f 84 6f 05 00 00    	je     f058 <quotearg_buffer_restyled+0x848>
    eae9:	83 f8 02             	cmp    eax,0x2
    eaec:	bb 3f 00 00 00       	mov    ebx,0x3f
    eaf1:	0f 94 c2             	sete   dl
    eaf4:	45 31 e4             	xor    r12d,r12d
    eaf7:	31 c0                	xor    eax,eax
    eaf9:	e9 3a ff ff ff       	jmp    ea38 <quotearg_buffer_restyled+0x228>
    eafe:	66 90                	xchg   ax,ax
    eb00:	45 31 d2             	xor    r10d,r10d
    eb03:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
    eb08:	0f 84 02 05 00 00    	je     f010 <quotearg_buffer_restyled+0x800>
    eb0e:	44 88 64 24 7c       	mov    BYTE PTR [rsp+0x7c],r12b
    eb13:	31 d2                	xor    edx,edx
    eb15:	31 c0                	xor    eax,eax
    eb17:	bb 27 00 00 00       	mov    ebx,0x27
    eb1c:	e9 17 ff ff ff       	jmp    ea38 <quotearg_buffer_restyled+0x228>
    eb21:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    eb28:	ba 09 00 00 00       	mov    edx,0x9
    eb2d:	bb 74 00 00 00       	mov    ebx,0x74
    eb32:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
    eb37:	0f 94 c0             	sete   al
    eb3a:	22 44 24 0f          	and    al,BYTE PTR [rsp+0xf]
    eb3e:	0f 85 4a 01 00 00    	jne    ec8e <quotearg_buffer_restyled+0x47e>
    eb44:	80 7c 24 0d 00       	cmp    BYTE PTR [rsp+0xd],0x0
    eb49:	75 65                	jne    ebb0 <quotearg_buffer_restyled+0x3a0>
    eb4b:	89 d3                	mov    ebx,edx
    eb4d:	45 31 e4             	xor    r12d,r12d
    eb50:	31 c0                	xor    eax,eax
    eb52:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
    eb57:	0f 85 ee fe ff ff    	jne    ea4b <quotearg_buffer_restyled+0x23b>
    eb5d:	e9 07 ff ff ff       	jmp    ea69 <quotearg_buffer_restyled+0x259>
    eb62:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    eb68:	ba 08 00 00 00       	mov    edx,0x8
    eb6d:	bb 62 00 00 00       	mov    ebx,0x62
    eb72:	eb d0                	jmp    eb44 <quotearg_buffer_restyled+0x334>
    eb74:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    eb78:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
    eb7d:	0f 84 cd 03 00 00    	je     ef50 <quotearg_buffer_restyled+0x740>
    eb83:	80 7c 24 0d 00       	cmp    BYTE PTR [rsp+0xd],0x0
    eb88:	0f 84 12 02 00 00    	je     eda0 <quotearg_buffer_restyled+0x590>
    eb8e:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
    eb93:	0f 84 07 02 00 00    	je     eda0 <quotearg_buffer_restyled+0x590>
    eb99:	48 83 7c 24 18 00    	cmp    QWORD PTR [rsp+0x18],0x0
    eb9f:	0f 85 b6 03 00 00    	jne    ef5b <quotearg_buffer_restyled+0x74b>
    eba5:	bb 5c 00 00 00       	mov    ebx,0x5c
    ebaa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    ebb0:	45 31 e4             	xor    r12d,r12d
    ebb3:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
    ebb8:	0f 94 c2             	sete   dl
    ebbb:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
    ebc0:	89 d0                	mov    eax,edx
    ebc2:	0f 85 50 08 00 00    	jne    f418 <quotearg_buffer_restyled+0xc08>
    ebc8:	44 89 c0             	mov    eax,r8d
    ebcb:	83 f0 01             	xor    eax,0x1
    ebce:	20 d0                	and    al,dl
    ebd0:	74 2f                	je     ec01 <quotearg_buffer_restyled+0x3f1>
    ebd2:	4d 39 fd             	cmp    r13,r15
    ebd5:	76 05                	jbe    ebdc <quotearg_buffer_restyled+0x3cc>
    ebd7:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
    ebdc:	49 8d 57 01          	lea    rdx,[r15+0x1]
    ebe0:	49 39 d5             	cmp    r13,rdx
    ebe3:	76 06                	jbe    ebeb <quotearg_buffer_restyled+0x3db>
    ebe5:	43 c6 44 3e 01 24    	mov    BYTE PTR [r14+r15*1+0x1],0x24
    ebeb:	49 8d 57 02          	lea    rdx,[r15+0x2]
    ebef:	49 39 d5             	cmp    r13,rdx
    ebf2:	76 06                	jbe    ebfa <quotearg_buffer_restyled+0x3ea>
    ebf4:	43 c6 44 3e 02 27    	mov    BYTE PTR [r14+r15*1+0x2],0x27
    ebfa:	49 83 c7 03          	add    r15,0x3
    ebfe:	41 89 c0             	mov    r8d,eax
    ec01:	4d 39 fd             	cmp    r13,r15
    ec04:	76 05                	jbe    ec0b <quotearg_buffer_restyled+0x3fb>
    ec06:	43 c6 04 3e 5c       	mov    BYTE PTR [r14+r15*1],0x5c
    ec0b:	49 83 c7 01          	add    r15,0x1
    ec0f:	48 83 c5 01          	add    rbp,0x1
    ec13:	e9 88 fe ff ff       	jmp    eaa0 <quotearg_buffer_restyled+0x290>
    ec18:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    ec1f:	00 
    ec20:	80 7c 24 0d 00       	cmp    BYTE PTR [rsp+0xd],0x0
    ec25:	0f 85 c8 01 00 00    	jne    edf3 <quotearg_buffer_restyled+0x5e3>
    ec2b:	31 d2                	xor    edx,edx
    ec2d:	f6 44 24 78 01       	test   BYTE PTR [rsp+0x78],0x1
    ec32:	0f 84 13 ff ff ff    	je     eb4b <quotearg_buffer_restyled+0x33b>
    ec38:	48 83 c5 01          	add    rbp,0x1
    ec3c:	e9 b7 fc ff ff       	jmp    e8f8 <quotearg_buffer_restyled+0xe8>
    ec41:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    ec48:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
    ec4d:	0f 94 c2             	sete   dl
    ec50:	31 c0                	xor    eax,eax
    ec52:	e9 e1 fd ff ff       	jmp    ea38 <quotearg_buffer_restyled+0x228>
    ec57:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    ec5e:	00 00 
    ec60:	ba 07 00 00 00       	mov    edx,0x7
    ec65:	bb 61 00 00 00       	mov    ebx,0x61
    ec6a:	e9 d5 fe ff ff       	jmp    eb44 <quotearg_buffer_restyled+0x334>
    ec6f:	90                   	nop
    ec70:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
    ec75:	0f 94 c2             	sete   dl
    ec78:	48 85 ed             	test   rbp,rbp
    ec7b:	0f 85 ab fd ff ff    	jne    ea2c <quotearg_buffer_restyled+0x21c>
    ec81:	0f b6 44 24 0f       	movzx  eax,BYTE PTR [rsp+0xf]
    ec86:	20 d0                	and    al,dl
    ec88:	0f 84 aa fd ff ff    	je     ea38 <quotearg_buffer_restyled+0x228>
    ec8e:	4c 89 dd             	mov    rbp,r11
    ec91:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
    ec98:	00 
    ec99:	e9 fb 06 00 00       	jmp    f399 <quotearg_buffer_restyled+0xb89>
    ec9e:	66 90                	xchg   ax,ax
    eca0:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
    eca5:	0f 94 c2             	sete   dl
    eca8:	45 31 e4             	xor    r12d,r12d
    ecab:	eb d4                	jmp    ec81 <quotearg_buffer_restyled+0x471>
    ecad:	0f 1f 00             	nop    DWORD PTR [rax]
    ecb0:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
    ecb5:	bb 20 00 00 00       	mov    ebx,0x20
    ecba:	0f 94 c2             	sete   dl
    ecbd:	eb c2                	jmp    ec81 <quotearg_buffer_restyled+0x471>
    ecbf:	90                   	nop
    ecc0:	ba 0d 00 00 00       	mov    edx,0xd
    ecc5:	bb 72 00 00 00       	mov    ebx,0x72
    ecca:	e9 63 fe ff ff       	jmp    eb32 <quotearg_buffer_restyled+0x322>
    eccf:	90                   	nop
    ecd0:	ba 0c 00 00 00       	mov    edx,0xc
    ecd5:	bb 66 00 00 00       	mov    ebx,0x66
    ecda:	e9 65 fe ff ff       	jmp    eb44 <quotearg_buffer_restyled+0x334>
    ecdf:	90                   	nop
    ece0:	ba 0b 00 00 00       	mov    edx,0xb
    ece5:	bb 76 00 00 00       	mov    ebx,0x76
    ecea:	e9 55 fe ff ff       	jmp    eb44 <quotearg_buffer_restyled+0x334>
    ecef:	90                   	nop
    ecf0:	ba 0a 00 00 00       	mov    edx,0xa
    ecf5:	bb 6e 00 00 00       	mov    ebx,0x6e
    ecfa:	e9 33 fe ff ff       	jmp    eb32 <quotearg_buffer_restyled+0x322>
    ecff:	90                   	nop
    ed00:	45 31 d2             	xor    r10d,r10d
    ed03:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    ed08:	48 83 7c 24 58 01    	cmp    QWORD PTR [rsp+0x58],0x1
    ed0e:	0f 85 a4 03 00 00    	jne    f0b8 <quotearg_buffer_restyled+0x8a8>
    ed14:	4c 89 5c 24 38       	mov    QWORD PTR [rsp+0x38],r11
    ed19:	44 88 44 24 30       	mov    BYTE PTR [rsp+0x30],r8b
    ed1e:	44 88 54 24 28       	mov    BYTE PTR [rsp+0x28],r10b
    ed23:	e8 88 44 ff ff       	call   31b0 <__ctype_b_loc@plt>
    ed28:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    ed2b:	0f b6 d3             	movzx  edx,bl
    ed2e:	44 0f b6 54 24 28    	movzx  r10d,BYTE PTR [rsp+0x28]
    ed34:	44 0f b6 44 24 30    	movzx  r8d,BYTE PTR [rsp+0x30]
    ed3a:	4c 8b 5c 24 38       	mov    r11,QWORD PTR [rsp+0x38]
    ed3f:	bf 01 00 00 00       	mov    edi,0x1
    ed44:	0f b7 04 51          	movzx  eax,WORD PTR [rcx+rdx*2]
    ed48:	66 25 00 40          	and    ax,0x4000
    ed4c:	41 0f 95 c4          	setne  r12b
    ed50:	0f 94 c0             	sete   al
    ed53:	22 44 24 0d          	and    al,BYTE PTR [rsp+0xd]
    ed57:	84 c0                	test   al,al
    ed59:	0f 85 92 09 00 00    	jne    f6f1 <quotearg_buffer_restyled+0xee1>
    ed5f:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
    ed64:	0f 94 c2             	sete   dl
    ed67:	e9 cc fc ff ff       	jmp    ea38 <quotearg_buffer_restyled+0x228>
    ed6c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    ed70:	41 0f b6 19          	movzx  ebx,BYTE PTR [r9]
    ed74:	80 fb 7e             	cmp    bl,0x7e
    ed77:	77 87                	ja     ed00 <quotearg_buffer_restyled+0x4f0>
    ed79:	48 8d 0d 08 71 00 00 	lea    rcx,[rip+0x7108]        # 15e88 <default_tuning+0x348>
    ed80:	0f b6 d3             	movzx  edx,bl
    ed83:	48 63 04 91          	movsxd rax,DWORD PTR [rcx+rdx*4]
    ed87:	48 01 c8             	add    rax,rcx
    ed8a:	ff e0                	jmp    rax
    ed8c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    ed90:	45 31 d2             	xor    r10d,r10d
    ed93:	80 7c 24 0d 00       	cmp    BYTE PTR [rsp+0xd],0x0
    ed98:	0f 85 f0 fd ff ff    	jne    eb8e <quotearg_buffer_restyled+0x37e>
    ed9e:	66 90                	xchg   ax,ax
    eda0:	ba 5c 00 00 00       	mov    edx,0x5c
    eda5:	bb 5c 00 00 00       	mov    ebx,0x5c
    edaa:	e9 95 fd ff ff       	jmp    eb44 <quotearg_buffer_restyled+0x334>
    edaf:	90                   	nop
    edb0:	ba 0c 00 00 00       	mov    edx,0xc
    edb5:	45 31 d2             	xor    r10d,r10d
    edb8:	bb 66 00 00 00       	mov    ebx,0x66
    edbd:	e9 82 fd ff ff       	jmp    eb44 <quotearg_buffer_restyled+0x334>
    edc2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    edc8:	ba 0a 00 00 00       	mov    edx,0xa
    edcd:	45 31 d2             	xor    r10d,r10d
    edd0:	bb 6e 00 00 00       	mov    ebx,0x6e
    edd5:	e9 58 fd ff ff       	jmp    eb32 <quotearg_buffer_restyled+0x322>
    edda:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    ede0:	bb 61 00 00 00       	mov    ebx,0x61
    ede5:	e9 c6 fd ff ff       	jmp    ebb0 <quotearg_buffer_restyled+0x3a0>
    edea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    edf0:	45 31 d2             	xor    r10d,r10d
    edf3:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
    edf8:	0f 94 c2             	sete   dl
    edfb:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
    ee00:	0f 85 94 0b 00 00    	jne    f99a <quotearg_buffer_restyled+0x118a>
    ee06:	44 89 c0             	mov    eax,r8d
    ee09:	4c 89 f9             	mov    rcx,r15
    ee0c:	83 f0 01             	xor    eax,0x1
    ee0f:	20 d0                	and    al,dl
    ee11:	74 2d                	je     ee40 <quotearg_buffer_restyled+0x630>
    ee13:	4d 39 fd             	cmp    r13,r15
    ee16:	76 05                	jbe    ee1d <quotearg_buffer_restyled+0x60d>
    ee18:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
    ee1d:	49 8d 4f 01          	lea    rcx,[r15+0x1]
    ee21:	49 39 cd             	cmp    r13,rcx
    ee24:	76 06                	jbe    ee2c <quotearg_buffer_restyled+0x61c>
    ee26:	43 c6 44 3e 01 24    	mov    BYTE PTR [r14+r15*1+0x1],0x24
    ee2c:	49 8d 4f 02          	lea    rcx,[r15+0x2]
    ee30:	49 39 cd             	cmp    r13,rcx
    ee33:	0f 87 30 06 00 00    	ja     f469 <quotearg_buffer_restyled+0xc59>
    ee39:	49 8d 4f 03          	lea    rcx,[r15+0x3]
    ee3d:	41 89 c0             	mov    r8d,eax
    ee40:	49 39 cd             	cmp    r13,rcx
    ee43:	76 05                	jbe    ee4a <quotearg_buffer_restyled+0x63a>
    ee45:	41 c6 04 0e 5c       	mov    BYTE PTR [r14+rcx*1],0x5c
    ee4a:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
    ee4f:	4c 8d 79 01          	lea    r15,[rcx+0x1]
    ee53:	0f 84 00 06 00 00    	je     f459 <quotearg_buffer_restyled+0xc49>
    ee59:	48 8d 45 01          	lea    rax,[rbp+0x1]
    ee5d:	4c 39 d8             	cmp    rax,r11
    ee60:	73 19                	jae    ee7b <quotearg_buffer_restyled+0x66b>
    ee62:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
    ee67:	0f b6 44 28 01       	movzx  eax,BYTE PTR [rax+rbp*1+0x1]
    ee6c:	88 44 24 28          	mov    BYTE PTR [rsp+0x28],al
    ee70:	83 e8 30             	sub    eax,0x30
    ee73:	3c 09                	cmp    al,0x9
    ee75:	0f 86 2e 08 00 00    	jbe    f6a9 <quotearg_buffer_restyled+0xe99>
    ee7b:	44 89 e0             	mov    eax,r12d
    ee7e:	bb 30 00 00 00       	mov    ebx,0x30
    ee83:	45 31 e4             	xor    r12d,r12d
    ee86:	e9 ad fb ff ff       	jmp    ea38 <quotearg_buffer_restyled+0x228>
    ee8b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    ee90:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
    ee95:	45 89 d4             	mov    r12d,r10d
    ee98:	0f 94 c2             	sete   dl
    ee9b:	45 31 d2             	xor    r10d,r10d
    ee9e:	31 c0                	xor    eax,eax
    eea0:	e9 93 fb ff ff       	jmp    ea38 <quotearg_buffer_restyled+0x228>
    eea5:	0f 1f 00             	nop    DWORD PTR [rax]
    eea8:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
    eead:	0f 94 c2             	sete   dl
    eeb0:	45 31 d2             	xor    r10d,r10d
    eeb3:	e9 c0 fd ff ff       	jmp    ec78 <quotearg_buffer_restyled+0x468>
    eeb8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    eebf:	00 
    eec0:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
    eec5:	0f 94 c2             	sete   dl
    eec8:	45 31 d2             	xor    r10d,r10d
    eecb:	45 31 e4             	xor    r12d,r12d
    eece:	e9 ae fd ff ff       	jmp    ec81 <quotearg_buffer_restyled+0x471>
    eed3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    eed8:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
    eedd:	45 89 d4             	mov    r12d,r10d
    eee0:	bb 20 00 00 00       	mov    ebx,0x20
    eee5:	0f 94 c2             	sete   dl
    eee8:	45 31 d2             	xor    r10d,r10d
    eeeb:	e9 91 fd ff ff       	jmp    ec81 <quotearg_buffer_restyled+0x471>
    eef0:	ba 0d 00 00 00       	mov    edx,0xd
    eef5:	45 31 d2             	xor    r10d,r10d
    eef8:	bb 72 00 00 00       	mov    ebx,0x72
    eefd:	e9 30 fc ff ff       	jmp    eb32 <quotearg_buffer_restyled+0x322>
    ef02:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    ef08:	bb 76 00 00 00       	mov    ebx,0x76
    ef0d:	e9 9e fc ff ff       	jmp    ebb0 <quotearg_buffer_restyled+0x3a0>
    ef12:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    ef18:	ba 09 00 00 00       	mov    edx,0x9
    ef1d:	45 31 d2             	xor    r10d,r10d
    ef20:	bb 74 00 00 00       	mov    ebx,0x74
    ef25:	e9 08 fc ff ff       	jmp    eb32 <quotearg_buffer_restyled+0x322>
    ef2a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    ef30:	bb 62 00 00 00       	mov    ebx,0x62
    ef35:	e9 76 fc ff ff       	jmp    ebb0 <quotearg_buffer_restyled+0x3a0>
    ef3a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    ef40:	45 31 d2             	xor    r10d,r10d
    ef43:	e9 98 fa ff ff       	jmp    e9e0 <quotearg_buffer_restyled+0x1d0>
    ef48:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    ef4f:	00 
    ef50:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
    ef55:	0f 85 65 09 00 00    	jne    f8c0 <quotearg_buffer_restyled+0x10b0>
    ef5b:	48 83 c5 01          	add    rbp,0x1
    ef5f:	44 89 c0             	mov    eax,r8d
    ef62:	45 31 e4             	xor    r12d,r12d
    ef65:	bb 5c 00 00 00       	mov    ebx,0x5c
    ef6a:	e9 0d fb ff ff       	jmp    ea7c <quotearg_buffer_restyled+0x26c>
    ef6f:	90                   	nop
    ef70:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
    ef75:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [rsp+0xf]
    ef7a:	45 89 c4             	mov    r12d,r8d
    ef7d:	4c 89 dd             	mov    rbp,r11
    ef80:	0f 94 c2             	sete   dl
    ef83:	89 d8                	mov    eax,ebx
    ef85:	4d 85 ff             	test   r15,r15
    ef88:	0f 94 c1             	sete   cl
    ef8b:	21 d0                	and    eax,edx
    ef8d:	20 c8                	and    al,cl
    ef8f:	0f 85 61 0a 00 00    	jne    f9f6 <quotearg_buffer_restyled+0x11e6>
    ef95:	89 d8                	mov    eax,ebx
    ef97:	83 f0 01             	xor    eax,0x1
    ef9a:	20 c2                	and    dl,al
    ef9c:	0f 84 6a 09 00 00    	je     f90c <quotearg_buffer_restyled+0x10fc>
    efa2:	80 7c 24 7c 00       	cmp    BYTE PTR [rsp+0x7c],0x0
    efa7:	0f 84 5d 09 00 00    	je     f90a <quotearg_buffer_restyled+0x10fa>
    efad:	80 7c 24 0e 00       	cmp    BYTE PTR [rsp+0xe],0x0
    efb2:	0f 85 f5 09 00 00    	jne    f9ad <quotearg_buffer_restyled+0x119d>
    efb8:	4d 85 ed             	test   r13,r13
    efbb:	0f 94 c0             	sete   al
    efbe:	48 83 7c 24 50 00    	cmp    QWORD PTR [rsp+0x50],0x0
    efc4:	0f 95 c2             	setne  dl
    efc7:	20 d0                	and    al,dl
    efc9:	0f 84 1d 0a 00 00    	je     f9ec <quotearg_buffer_restyled+0x11dc>
    efcf:	4c 8b 6c 24 50       	mov    r13,QWORD PTR [rsp+0x50]
    efd4:	48 8d 1d d7 66 00 00 	lea    rbx,[rip+0x66d7]        # 156b2 <short_options+0x17e2>
    efdb:	41 c6 06 27          	mov    BYTE PTR [r14],0x27
    efdf:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
    efe6:	00 
    efe7:	41 bf 01 00 00 00    	mov    r15d,0x1
    efed:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
    eff4:	00 00 
    eff6:	c6 44 24 0f 00       	mov    BYTE PTR [rsp+0xf],0x0
    effb:	48 89 5c 24 48       	mov    QWORD PTR [rsp+0x48],rbx
    f000:	88 44 24 7c          	mov    BYTE PTR [rsp+0x7c],al
    f004:	e9 da f8 ff ff       	jmp    e8e3 <quotearg_buffer_restyled+0xd3>
    f009:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    f010:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
    f015:	0f 85 a5 08 00 00    	jne    f8c0 <quotearg_buffer_restyled+0x10b0>
    f01b:	4d 85 ed             	test   r13,r13
    f01e:	0f 84 fc 03 00 00    	je     f420 <quotearg_buffer_restyled+0xc10>
    f024:	31 d2                	xor    edx,edx
    f026:	48 83 7c 24 50 00    	cmp    QWORD PTR [rsp+0x50],0x0
    f02c:	0f 85 ee 03 00 00    	jne    f420 <quotearg_buffer_restyled+0xc10>
    f032:	4c 89 6c 24 50       	mov    QWORD PTR [rsp+0x50],r13
    f037:	49 83 c7 03          	add    r15,0x3
    f03b:	31 c0                	xor    eax,eax
    f03d:	44 88 64 24 7c       	mov    BYTE PTR [rsp+0x7c],r12b
    f042:	45 31 c0             	xor    r8d,r8d
    f045:	49 89 d5             	mov    r13,rdx
    f048:	bb 27 00 00 00       	mov    ebx,0x27
    f04d:	e9 17 fa ff ff       	jmp    ea69 <quotearg_buffer_restyled+0x259>
    f052:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    f058:	f6 44 24 78 04       	test   BYTE PTR [rsp+0x78],0x4
    f05d:	74 21                	je     f080 <quotearg_buffer_restyled+0x870>
    f05f:	48 8d 4d 02          	lea    rcx,[rbp+0x2]
    f063:	4c 39 d9             	cmp    rcx,r11
    f066:	73 18                	jae    f080 <quotearg_buffer_restyled+0x870>
    f068:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
    f06d:	80 7c 28 01 3f       	cmp    BYTE PTR [rax+rbp*1+0x1],0x3f
    f072:	0f 84 8a 07 00 00    	je     f802 <quotearg_buffer_restyled+0xff2>
    f078:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    f07f:	00 
    f080:	31 d2                	xor    edx,edx
    f082:	45 31 e4             	xor    r12d,r12d
    f085:	31 c0                	xor    eax,eax
    f087:	bb 3f 00 00 00       	mov    ebx,0x3f
    f08c:	e9 a7 f9 ff ff       	jmp    ea38 <quotearg_buffer_restyled+0x228>
    f091:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    f098:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
    f09d:	0f 85 1d 08 00 00    	jne    f8c0 <quotearg_buffer_restyled+0x10b0>
    f0a3:	45 31 e4             	xor    r12d,r12d
    f0a6:	31 c0                	xor    eax,eax
    f0a8:	bb 3f 00 00 00       	mov    ebx,0x3f
    f0ad:	e9 b7 f9 ff ff       	jmp    ea69 <quotearg_buffer_restyled+0x259>
    f0b2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    f0b8:	48 8d 84 24 a0 00 00 	lea    rax,[rsp+0xa0]
    f0bf:	00 
    f0c0:	49 83 fb ff          	cmp    r11,0xffffffffffffffff
    f0c4:	48 c7 84 24 a0 00 00 	mov    QWORD PTR [rsp+0xa0],0x0
    f0cb:	00 00 00 00 00 
    f0d0:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
    f0d5:	75 2d                	jne    f104 <quotearg_buffer_restyled+0x8f4>
    f0d7:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
    f0dc:	44 88 44 24 40       	mov    BYTE PTR [rsp+0x40],r8b
    f0e1:	44 88 54 24 38       	mov    BYTE PTR [rsp+0x38],r10b
    f0e6:	4c 89 4c 24 30       	mov    QWORD PTR [rsp+0x30],r9
    f0eb:	e8 a0 3b ff ff       	call   2c90 <strlen@plt>
    f0f0:	44 0f b6 44 24 40    	movzx  r8d,BYTE PTR [rsp+0x40]
    f0f6:	44 0f b6 54 24 38    	movzx  r10d,BYTE PTR [rsp+0x38]
    f0fc:	49 89 c3             	mov    r11,rax
    f0ff:	4c 8b 4c 24 30       	mov    r9,QWORD PTR [rsp+0x30]
    f104:	48 8d 84 24 9c 00 00 	lea    rax,[rsp+0x9c]
    f10b:	00 
    f10c:	31 c9                	xor    ecx,ecx
    f10e:	88 5c 24 7e          	mov    BYTE PTR [rsp+0x7e],bl
    f112:	44 88 44 24 7d       	mov    BYTE PTR [rsp+0x7d],r8b
    f117:	48 89 cb             	mov    rbx,rcx
    f11a:	4c 89 8c 24 88 00 00 	mov    QWORD PTR [rsp+0x88],r9
    f121:	00 
    f122:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
    f127:	44 88 54 24 7f       	mov    BYTE PTR [rsp+0x7f],r10b
    f12c:	4c 89 bc 24 80 00 00 	mov    QWORD PTR [rsp+0x80],r15
    f133:	00 
    f134:	4c 89 74 24 40       	mov    QWORD PTR [rsp+0x40],r14
    f139:	4c 89 6c 24 70       	mov    QWORD PTR [rsp+0x70],r13
    f13e:	4c 89 5c 24 30       	mov    QWORD PTR [rsp+0x30],r11
    f143:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
    f148:	4c 8d 74 1d 00       	lea    r14,[rbp+rbx*1+0x0]
    f14d:	48 8b 54 24 30       	mov    rdx,QWORD PTR [rsp+0x30]
    f152:	48 8b 4c 24 28       	mov    rcx,QWORD PTR [rsp+0x28]
    f157:	48 8b 7c 24 38       	mov    rdi,QWORD PTR [rsp+0x38]
    f15c:	4e 8d 2c 30          	lea    r13,[rax+r14*1]
    f160:	4c 29 f2             	sub    rdx,r14
    f163:	4c 89 ee             	mov    rsi,r13
    f166:	e8 75 3d 00 00       	call   12ee0 <rpl_mbrtowc>
    f16b:	48 85 c0             	test   rax,rax
    f16e:	49 89 c7             	mov    r15,rax
    f171:	74 4e                	je     f1c1 <quotearg_buffer_restyled+0x9b1>
    f173:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
    f177:	0f 84 18 06 00 00    	je     f795 <quotearg_buffer_restyled+0xf85>
    f17d:	48 83 f8 fe          	cmp    rax,0xfffffffffffffffe
    f181:	0f 84 9a 05 00 00    	je     f721 <quotearg_buffer_restyled+0xf11>
    f187:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
    f18c:	0f 94 c0             	sete   al
    f18f:	22 44 24 0f          	and    al,BYTE PTR [rsp+0xf]
    f193:	0f 85 97 01 00 00    	jne    f330 <quotearg_buffer_restyled+0xb20>
    f199:	8b bc 24 9c 00 00 00 	mov    edi,DWORD PTR [rsp+0x9c]
    f1a0:	e8 bb 3f ff ff       	call   3160 <iswprint@plt>
    f1a5:	48 8b 7c 24 28       	mov    rdi,QWORD PTR [rsp+0x28]
    f1aa:	85 c0                	test   eax,eax
    f1ac:	b8 00 00 00 00       	mov    eax,0x0
    f1b1:	44 0f 44 e0          	cmove  r12d,eax
    f1b5:	4c 01 fb             	add    rbx,r15
    f1b8:	e8 83 3f ff ff       	call   3140 <mbsinit@plt>
    f1bd:	85 c0                	test   eax,eax
    f1bf:	74 82                	je     f143 <quotearg_buffer_restyled+0x933>
    f1c1:	44 89 e2             	mov    edx,r12d
    f1c4:	48 89 df             	mov    rdi,rbx
    f1c7:	44 0f b6 44 24 7d    	movzx  r8d,BYTE PTR [rsp+0x7d]
    f1cd:	83 f2 01             	xor    edx,0x1
    f1d0:	0f b6 5c 24 7e       	movzx  ebx,BYTE PTR [rsp+0x7e]
    f1d5:	44 0f b6 54 24 7f    	movzx  r10d,BYTE PTR [rsp+0x7f]
    f1db:	22 54 24 0d          	and    dl,BYTE PTR [rsp+0xd]
    f1df:	4c 8b bc 24 80 00 00 	mov    r15,QWORD PTR [rsp+0x80]
    f1e6:	00 
    f1e7:	4c 8b 74 24 40       	mov    r14,QWORD PTR [rsp+0x40]
    f1ec:	4c 8b 6c 24 70       	mov    r13,QWORD PTR [rsp+0x70]
    f1f1:	4c 8b 5c 24 30       	mov    r11,QWORD PTR [rsp+0x30]
    f1f6:	48 83 ff 01          	cmp    rdi,0x1
    f1fa:	0f 86 fb 05 00 00    	jbe    f7fb <quotearg_buffer_restyled+0xfeb>
    f200:	48 89 f9             	mov    rcx,rdi
    f203:	31 f6                	xor    esi,esi
    f205:	44 0f b6 4c 24 0f    	movzx  r9d,BYTE PTR [rsp+0xf]
    f20b:	48 01 e9             	add    rcx,rbp
    f20e:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
    f213:	e9 b6 00 00 00       	jmp    f2ce <quotearg_buffer_restyled+0xabe>
    f218:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    f21f:	00 
    f220:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
    f225:	0f 94 c0             	sete   al
    f228:	45 84 c9             	test   r9b,r9b
    f22b:	0f 85 af 04 00 00    	jne    f6e0 <quotearg_buffer_restyled+0xed0>
    f231:	44 89 c6             	mov    esi,r8d
    f234:	83 f6 01             	xor    esi,0x1
    f237:	40 20 f0             	and    al,sil
    f23a:	74 2f                	je     f26b <quotearg_buffer_restyled+0xa5b>
    f23c:	4d 39 fd             	cmp    r13,r15
    f23f:	76 05                	jbe    f246 <quotearg_buffer_restyled+0xa36>
    f241:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
    f246:	49 8d 77 01          	lea    rsi,[r15+0x1]
    f24a:	49 39 f5             	cmp    r13,rsi
    f24d:	76 06                	jbe    f255 <quotearg_buffer_restyled+0xa45>
    f24f:	43 c6 44 3e 01 24    	mov    BYTE PTR [r14+r15*1+0x1],0x24
    f255:	49 8d 77 02          	lea    rsi,[r15+0x2]
    f259:	49 39 f5             	cmp    r13,rsi
    f25c:	76 06                	jbe    f264 <quotearg_buffer_restyled+0xa54>
    f25e:	43 c6 44 3e 02 27    	mov    BYTE PTR [r14+r15*1+0x2],0x27
    f264:	49 83 c7 03          	add    r15,0x3
    f268:	41 89 c0             	mov    r8d,eax
    f26b:	4d 39 fd             	cmp    r13,r15
    f26e:	76 05                	jbe    f275 <quotearg_buffer_restyled+0xa65>
    f270:	43 c6 04 3e 5c       	mov    BYTE PTR [r14+r15*1],0x5c
    f275:	49 8d 47 01          	lea    rax,[r15+0x1]
    f279:	49 39 c5             	cmp    r13,rax
    f27c:	76 0d                	jbe    f28b <quotearg_buffer_restyled+0xa7b>
    f27e:	89 d8                	mov    eax,ebx
    f280:	c0 e8 06             	shr    al,0x6
    f283:	83 c0 30             	add    eax,0x30
    f286:	43 88 44 3e 01       	mov    BYTE PTR [r14+r15*1+0x1],al
    f28b:	49 8d 47 02          	lea    rax,[r15+0x2]
    f28f:	49 39 c5             	cmp    r13,rax
    f292:	76 10                	jbe    f2a4 <quotearg_buffer_restyled+0xa94>
    f294:	89 d8                	mov    eax,ebx
    f296:	c0 e8 03             	shr    al,0x3
    f299:	83 e0 07             	and    eax,0x7
    f29c:	83 c0 30             	add    eax,0x30
    f29f:	43 88 44 3e 02       	mov    BYTE PTR [r14+r15*1+0x2],al
    f2a4:	83 e3 07             	and    ebx,0x7
    f2a7:	48 83 c5 01          	add    rbp,0x1
    f2ab:	49 83 c7 03          	add    r15,0x3
    f2af:	83 c3 30             	add    ebx,0x30
    f2b2:	48 39 cd             	cmp    rbp,rcx
    f2b5:	0f 83 e5 f7 ff ff    	jae    eaa0 <quotearg_buffer_restyled+0x290>
    f2bb:	89 d6                	mov    esi,edx
    f2bd:	4d 39 fd             	cmp    r13,r15
    f2c0:	76 04                	jbe    f2c6 <quotearg_buffer_restyled+0xab6>
    f2c2:	43 88 1c 3e          	mov    BYTE PTR [r14+r15*1],bl
    f2c6:	0f b6 1c 2f          	movzx  ebx,BYTE PTR [rdi+rbp*1]
    f2ca:	49 83 c7 01          	add    r15,0x1
    f2ce:	84 d2                	test   dl,dl
    f2d0:	0f 85 4a ff ff ff    	jne    f220 <quotearg_buffer_restyled+0xa10>
    f2d6:	89 f0                	mov    eax,esi
    f2d8:	83 f0 01             	xor    eax,0x1
    f2db:	44 21 c0             	and    eax,r8d
    f2de:	45 84 d2             	test   r10b,r10b
    f2e1:	74 0e                	je     f2f1 <quotearg_buffer_restyled+0xae1>
    f2e3:	4d 39 fd             	cmp    r13,r15
    f2e6:	76 05                	jbe    f2ed <quotearg_buffer_restyled+0xadd>
    f2e8:	43 c6 04 3e 5c       	mov    BYTE PTR [r14+r15*1],0x5c
    f2ed:	49 83 c7 01          	add    r15,0x1
    f2f1:	48 83 c5 01          	add    rbp,0x1
    f2f5:	48 39 cd             	cmp    rbp,rcx
    f2f8:	0f 83 7e f7 ff ff    	jae    ea7c <quotearg_buffer_restyled+0x26c>
    f2fe:	84 c0                	test   al,al
    f300:	0f 84 f8 03 00 00    	je     f6fe <quotearg_buffer_restyled+0xeee>
    f306:	4d 39 fd             	cmp    r13,r15
    f309:	76 05                	jbe    f310 <quotearg_buffer_restyled+0xb00>
    f30b:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
    f310:	49 8d 47 01          	lea    rax,[r15+0x1]
    f314:	49 39 c5             	cmp    r13,rax
    f317:	76 06                	jbe    f31f <quotearg_buffer_restyled+0xb0f>
    f319:	43 c6 44 3e 01 27    	mov    BYTE PTR [r14+r15*1+0x1],0x27
    f31f:	49 83 c7 02          	add    r15,0x2
    f323:	45 31 d2             	xor    r10d,r10d
    f326:	45 31 c0             	xor    r8d,r8d
    f329:	eb 92                	jmp    f2bd <quotearg_buffer_restyled+0xaad>
    f32b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    f330:	49 83 ff 01          	cmp    r15,0x1
    f334:	0f 84 5f fe ff ff    	je     f199 <quotearg_buffer_restyled+0x989>
    f33a:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
    f33f:	4a 8d 0c 3f          	lea    rcx,[rdi+r15*1]
    f343:	4a 8d 54 37 01       	lea    rdx,[rdi+r14*1+0x1]
    f348:	4e 8d 04 31          	lea    r8,[rcx+r14*1]
    f34c:	eb 0f                	jmp    f35d <quotearg_buffer_restyled+0xb4d>
    f34e:	66 90                	xchg   ax,ax
    f350:	48 83 c2 01          	add    rdx,0x1
    f354:	49 39 d0             	cmp    r8,rdx
    f357:	0f 84 3c fe ff ff    	je     f199 <quotearg_buffer_restyled+0x989>
    f35d:	0f b6 0a             	movzx  ecx,BYTE PTR [rdx]
    f360:	83 e9 5b             	sub    ecx,0x5b
    f363:	80 f9 21             	cmp    cl,0x21
    f366:	77 e8                	ja     f350 <quotearg_buffer_restyled+0xb40>
    f368:	be 01 00 00 00       	mov    esi,0x1
    f36d:	48 d3 e6             	shl    rsi,cl
    f370:	48 89 f1             	mov    rcx,rsi
    f373:	48 be 2b 00 00 00 02 	movabs rsi,0x20000002b
    f37a:	00 00 00 
    f37d:	48 85 f1             	test   rcx,rsi
    f380:	74 ce                	je     f350 <quotearg_buffer_restyled+0xb40>
    f382:	4c 8b 74 24 40       	mov    r14,QWORD PTR [rsp+0x40]
    f387:	4c 8b 6c 24 70       	mov    r13,QWORD PTR [rsp+0x70]
    f38c:	48 8b 6c 24 30       	mov    rbp,QWORD PTR [rsp+0x30]
    f391:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
    f398:	00 
    f399:	80 7c 24 0d 00       	cmp    BYTE PTR [rsp+0xd],0x0
    f39e:	74 10                	je     f3b0 <quotearg_buffer_restyled+0xba0>
    f3a0:	84 c0                	test   al,al
    f3a2:	b8 04 00 00 00       	mov    eax,0x4
    f3a7:	0f 44 44 24 08       	cmove  eax,DWORD PTR [rsp+0x8]
    f3ac:	89 44 24 08          	mov    DWORD PTR [rsp+0x8],eax
    f3b0:	48 83 ec 08          	sub    rsp,0x8
    f3b4:	48 89 e9             	mov    rcx,rbp
    f3b7:	4c 89 ee             	mov    rsi,r13
    f3ba:	ff 74 24 68          	push   QWORD PTR [rsp+0x68]
    f3be:	ff 74 24 78          	push   QWORD PTR [rsp+0x78]
    f3c2:	4c 89 f7             	mov    rdi,r14
    f3c5:	6a 00                	push   0x0
    f3c7:	44 8b 8c 24 98 00 00 	mov    r9d,DWORD PTR [rsp+0x98]
    f3ce:	00 
    f3cf:	44 8b 44 24 28       	mov    r8d,DWORD PTR [rsp+0x28]
    f3d4:	48 8b 54 24 30       	mov    rdx,QWORD PTR [rsp+0x30]
    f3d9:	41 83 e1 fd          	and    r9d,0xfffffffd
    f3dd:	e8 2e f4 ff ff       	call   e810 <quotearg_buffer_restyled>
    f3e2:	48 83 c4 20          	add    rsp,0x20
    f3e6:	49 89 c7             	mov    r15,rax
    f3e9:	48 8b 9c 24 a8 00 00 	mov    rbx,QWORD PTR [rsp+0xa8]
    f3f0:	00 
    f3f1:	64 48 33 1c 25 28 00 	xor    rbx,QWORD PTR fs:0x28
    f3f8:	00 00 
    f3fa:	4c 89 f8             	mov    rax,r15
    f3fd:	0f 85 00 06 00 00    	jne    fa03 <quotearg_buffer_restyled+0x11f3>
    f403:	48 81 c4 b8 00 00 00 	add    rsp,0xb8
    f40a:	5b                   	pop    rbx
    f40b:	5d                   	pop    rbp
    f40c:	41 5c                	pop    r12
    f40e:	41 5d                	pop    r13
    f410:	41 5e                	pop    r14
    f412:	41 5f                	pop    r15
    f414:	c3                   	ret    
    f415:	0f 1f 00             	nop    DWORD PTR [rax]
    f418:	4c 89 dd             	mov    rbp,r11
    f41b:	e9 79 ff ff ff       	jmp    f399 <quotearg_buffer_restyled+0xb89>
    f420:	4d 39 fd             	cmp    r13,r15
    f423:	76 05                	jbe    f42a <quotearg_buffer_restyled+0xc1a>
    f425:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
    f42a:	49 8d 47 01          	lea    rax,[r15+0x1]
    f42e:	49 39 c5             	cmp    r13,rax
    f431:	76 06                	jbe    f439 <quotearg_buffer_restyled+0xc29>
    f433:	43 c6 44 3e 01 5c    	mov    BYTE PTR [r14+r15*1+0x1],0x5c
    f439:	49 8d 47 02          	lea    rax,[r15+0x2]
    f43d:	49 39 c5             	cmp    r13,rax
    f440:	0f 86 ec 05 00 00    	jbe    fa32 <quotearg_buffer_restyled+0x1222>
    f446:	4c 89 ea             	mov    rdx,r13
    f449:	43 c6 44 3e 02 27    	mov    BYTE PTR [r14+r15*1+0x2],0x27
    f44f:	4c 8b 6c 24 50       	mov    r13,QWORD PTR [rsp+0x50]
    f454:	e9 d9 fb ff ff       	jmp    f032 <quotearg_buffer_restyled+0x822>
    f459:	44 89 e0             	mov    eax,r12d
    f45c:	bb 30 00 00 00       	mov    ebx,0x30
    f461:	45 31 e4             	xor    r12d,r12d
    f464:	e9 00 f6 ff ff       	jmp    ea69 <quotearg_buffer_restyled+0x259>
    f469:	43 c6 44 3e 02 27    	mov    BYTE PTR [r14+r15*1+0x2],0x27
    f46f:	e9 c5 f9 ff ff       	jmp    ee39 <quotearg_buffer_restyled+0x629>
    f474:	85 db                	test   ebx,ebx
    f476:	0f 85 27 f4 ff ff    	jne    e8a3 <quotearg_buffer_restyled+0x93>
    f47c:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
    f481:	4d 85 ed             	test   r13,r13
    f484:	0f 85 90 05 00 00    	jne    fa1a <quotearg_buffer_restyled+0x120a>
    f48a:	48 8d 05 21 62 00 00 	lea    rax,[rip+0x6221]        # 156b2 <short_options+0x17e2>
    f491:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
    f498:	00 00 
    f49a:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
    f49f:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
    f4a4:	45 31 e4             	xor    r12d,r12d
    f4a7:	c6 44 24 0f 00       	mov    BYTE PTR [rsp+0xf],0x0
    f4ac:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
    f4b3:	00 00 
    f4b5:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
    f4ba:	41 bf 01 00 00 00    	mov    r15d,0x1
    f4c0:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
    f4c7:	00 
    f4c8:	e9 16 f4 ff ff       	jmp    e8e3 <quotearg_buffer_restyled+0xd3>
    f4cd:	0f 1f 00             	nop    DWORD PTR [rax]
    f4d0:	85 db                	test   ebx,ebx
    f4d2:	0f 85 f5 03 00 00    	jne    f8cd <quotearg_buffer_restyled+0x10bd>
    f4d8:	4d 85 ed             	test   r13,r13
    f4db:	0f 84 25 02 00 00    	je     f706 <quotearg_buffer_restyled+0xef6>
    f4e1:	41 c6 06 22          	mov    BYTE PTR [r14],0x22
    f4e5:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
    f4ea:	45 31 e4             	xor    r12d,r12d
    f4ed:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
    f4f2:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
    f4f9:	00 00 
    f4fb:	48 8d 05 01 67 00 00 	lea    rax,[rip+0x6701]        # 15c03 <default_tuning+0xc3>
    f502:	c6 44 24 0f 00       	mov    BYTE PTR [rsp+0xf],0x0
    f507:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
    f50c:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
    f513:	00 00 
    f515:	41 bf 01 00 00 00    	mov    r15d,0x1
    f51b:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
    f520:	e9 be f3 ff ff       	jmp    e8e3 <quotearg_buffer_restyled+0xd3>
    f525:	48 8d 05 d7 66 00 00 	lea    rax,[rip+0x66d7]        # 15c03 <default_tuning+0xc3>
    f52c:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
    f531:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
    f536:	45 31 e4             	xor    r12d,r12d
    f539:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
    f540:	00 00 
    f542:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
    f547:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
    f54c:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
    f553:	00 00 
    f555:	45 31 ff             	xor    r15d,r15d
    f558:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
    f55d:	c7 44 24 08 05 00 00 	mov    DWORD PTR [rsp+0x8],0x5
    f564:	00 
    f565:	e9 79 f3 ff ff       	jmp    e8e3 <quotearg_buffer_restyled+0xd3>
    f56a:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
    f56f:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
    f574:	45 31 e4             	xor    r12d,r12d
    f577:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
    f57e:	00 00 
    f580:	c6 44 24 0f 00       	mov    BYTE PTR [rsp+0xf],0x0
    f585:	45 31 ff             	xor    r15d,r15d
    f588:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
    f58d:	48 c7 44 24 18 00 00 	mov    QWORD PTR [rsp+0x18],0x0
    f594:	00 00 
    f596:	48 c7 44 24 48 00 00 	mov    QWORD PTR [rsp+0x48],0x0
    f59d:	00 00 
    f59f:	e9 3f f3 ff ff       	jmp    e8e3 <quotearg_buffer_restyled+0xd3>
    f5a4:	83 7c 24 08 0a       	cmp    DWORD PTR [rsp+0x8],0xa
    f5a9:	74 56                	je     f601 <quotearg_buffer_restyled+0xdf1>
    f5ab:	48 8d 35 53 66 00 00 	lea    rsi,[rip+0x6653]        # 15c05 <default_tuning+0xc5>
    f5b2:	31 ff                	xor    edi,edi
    f5b4:	ba 05 00 00 00       	mov    edx,0x5
    f5b9:	e8 b2 36 ff ff       	call   2c70 <dcgettext@plt>
    f5be:	48 89 c1             	mov    rcx,rax
    f5c1:	48 89 44 24 68       	mov    QWORD PTR [rsp+0x68],rax
    f5c6:	48 8d 05 38 66 00 00 	lea    rax,[rip+0x6638]        # 15c05 <default_tuning+0xc5>
    f5cd:	48 39 c1             	cmp    rcx,rax
    f5d0:	0f 84 98 03 00 00    	je     f96e <quotearg_buffer_restyled+0x115e>
    f5d6:	48 8d 35 d5 60 00 00 	lea    rsi,[rip+0x60d5]        # 156b2 <short_options+0x17e2>
    f5dd:	31 ff                	xor    edi,edi
    f5df:	ba 05 00 00 00       	mov    edx,0x5
    f5e4:	e8 87 36 ff ff       	call   2c70 <dcgettext@plt>
    f5e9:	48 89 c1             	mov    rcx,rax
    f5ec:	48 89 44 24 60       	mov    QWORD PTR [rsp+0x60],rax
    f5f1:	48 8d 05 ba 60 00 00 	lea    rax,[rip+0x60ba]        # 156b2 <short_options+0x17e2>
    f5f8:	48 39 c1             	cmp    rcx,rax
    f5fb:	0f 84 83 03 00 00    	je     f984 <quotearg_buffer_restyled+0x1174>
    f601:	45 31 ff             	xor    r15d,r15d
    f604:	85 db                	test   ebx,ebx
    f606:	0f 84 c1 01 00 00    	je     f7cd <quotearg_buffer_restyled+0xfbd>
    f60c:	85 db                	test   ebx,ebx
    f60e:	48 8b 5c 24 60       	mov    rbx,QWORD PTR [rsp+0x60]
    f613:	0f 95 44 24 0f       	setne  BYTE PTR [rsp+0xf]
    f618:	45 31 e4             	xor    r12d,r12d
    f61b:	48 89 df             	mov    rdi,rbx
    f61e:	e8 6d 36 ff ff       	call   2c90 <strlen@plt>
    f623:	48 89 5c 24 48       	mov    QWORD PTR [rsp+0x48],rbx
    f628:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
    f62d:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
    f632:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
    f637:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
    f63e:	00 00 
    f640:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
    f645:	e9 99 f2 ff ff       	jmp    e8e3 <quotearg_buffer_restyled+0xd3>
    f64a:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
    f64f:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
    f654:	45 31 e4             	xor    r12d,r12d
    f657:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
    f65e:	00 00 
    f660:	c6 44 24 0f 00       	mov    BYTE PTR [rsp+0xf],0x0
    f665:	45 31 ff             	xor    r15d,r15d
    f668:	c6 44 24 0d 00       	mov    BYTE PTR [rsp+0xd],0x0
    f66d:	48 c7 44 24 18 00 00 	mov    QWORD PTR [rsp+0x18],0x0
    f674:	00 00 
    f676:	48 c7 44 24 48 00 00 	mov    QWORD PTR [rsp+0x48],0x0
    f67d:	00 00 
    f67f:	e9 5f f2 ff ff       	jmp    e8e3 <quotearg_buffer_restyled+0xd3>
    f684:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
    f689:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
    f68e:	45 31 e4             	xor    r12d,r12d
    f691:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
    f698:	00 00 
    f69a:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
    f69f:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
    f6a4:	e9 1a f2 ff ff       	jmp    e8c3 <quotearg_buffer_restyled+0xb3>
    f6a9:	4d 39 fd             	cmp    r13,r15
    f6ac:	76 05                	jbe    f6b3 <quotearg_buffer_restyled+0xea3>
    f6ae:	43 c6 04 3e 30       	mov    BYTE PTR [r14+r15*1],0x30
    f6b3:	48 8d 41 02          	lea    rax,[rcx+0x2]
    f6b7:	49 39 c5             	cmp    r13,rax
    f6ba:	76 06                	jbe    f6c2 <quotearg_buffer_restyled+0xeb2>
    f6bc:	41 c6 44 0e 02 30    	mov    BYTE PTR [r14+rcx*1+0x2],0x30
    f6c2:	44 89 e0             	mov    eax,r12d
    f6c5:	4c 8d 79 03          	lea    r15,[rcx+0x3]
    f6c9:	45 31 e4             	xor    r12d,r12d
    f6cc:	bb 30 00 00 00       	mov    ebx,0x30
    f6d1:	e9 62 f3 ff ff       	jmp    ea38 <quotearg_buffer_restyled+0x228>
    f6d6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    f6dd:	00 00 00 
    f6e0:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [rsp+0xf]
    f6e5:	4c 89 dd             	mov    rbp,r11
    f6e8:	88 5c 24 0d          	mov    BYTE PTR [rsp+0xd],bl
    f6ec:	e9 a8 fc ff ff       	jmp    f399 <quotearg_buffer_restyled+0xb89>
    f6f1:	0f b6 54 24 0d       	movzx  edx,BYTE PTR [rsp+0xd]
    f6f6:	45 31 e4             	xor    r12d,r12d
    f6f9:	e9 02 fb ff ff       	jmp    f200 <quotearg_buffer_restyled+0x9f0>
    f6fe:	45 31 d2             	xor    r10d,r10d
    f701:	e9 b7 fb ff ff       	jmp    f2bd <quotearg_buffer_restyled+0xaad>
    f706:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
    f70d:	00 00 
    f70f:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
    f714:	45 31 e4             	xor    r12d,r12d
    f717:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
    f71c:	e9 da fd ff ff       	jmp    f4fb <quotearg_buffer_restyled+0xceb>
    f721:	4c 8b 5c 24 30       	mov    r11,QWORD PTR [rsp+0x30]
    f726:	4c 89 f6             	mov    rsi,r14
    f729:	4c 89 e9             	mov    rcx,r13
    f72c:	48 89 d8             	mov    rax,rbx
    f72f:	48 89 df             	mov    rdi,rbx
    f732:	44 0f b6 44 24 7d    	movzx  r8d,BYTE PTR [rsp+0x7d]
    f738:	0f b6 5c 24 7e       	movzx  ebx,BYTE PTR [rsp+0x7e]
    f73d:	4c 8b 8c 24 88 00 00 	mov    r9,QWORD PTR [rsp+0x88]
    f744:	00 
    f745:	4c 39 de             	cmp    rsi,r11
    f748:	44 0f b6 54 24 7f    	movzx  r10d,BYTE PTR [rsp+0x7f]
    f74e:	4c 8b bc 24 80 00 00 	mov    r15,QWORD PTR [rsp+0x80]
    f755:	00 
    f756:	4c 8b 74 24 40       	mov    r14,QWORD PTR [rsp+0x40]
    f75b:	4c 8b 6c 24 70       	mov    r13,QWORD PTR [rsp+0x70]
    f760:	73 26                	jae    f788 <quotearg_buffer_restyled+0xf78>
    f762:	80 39 00             	cmp    BYTE PTR [rcx],0x0
    f765:	75 10                	jne    f777 <quotearg_buffer_restyled+0xf67>
    f767:	eb 1f                	jmp    f788 <quotearg_buffer_restyled+0xf78>
    f769:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    f770:	41 80 3c 01 00       	cmp    BYTE PTR [r9+rax*1],0x0
    f775:	74 0e                	je     f785 <quotearg_buffer_restyled+0xf75>
    f777:	48 83 c0 01          	add    rax,0x1
    f77b:	48 8d 54 05 00       	lea    rdx,[rbp+rax*1+0x0]
    f780:	49 39 d3             	cmp    r11,rdx
    f783:	77 eb                	ja     f770 <quotearg_buffer_restyled+0xf60>
    f785:	48 89 c7             	mov    rdi,rax
    f788:	0f b6 54 24 0d       	movzx  edx,BYTE PTR [rsp+0xd]
    f78d:	45 31 e4             	xor    r12d,r12d
    f790:	e9 61 fa ff ff       	jmp    f1f6 <quotearg_buffer_restyled+0x9e6>
    f795:	48 89 df             	mov    rdi,rbx
    f798:	44 0f b6 44 24 7d    	movzx  r8d,BYTE PTR [rsp+0x7d]
    f79e:	0f b6 5c 24 7e       	movzx  ebx,BYTE PTR [rsp+0x7e]
    f7a3:	44 0f b6 54 24 7f    	movzx  r10d,BYTE PTR [rsp+0x7f]
    f7a9:	4c 8b bc 24 80 00 00 	mov    r15,QWORD PTR [rsp+0x80]
    f7b0:	00 
    f7b1:	45 31 e4             	xor    r12d,r12d
    f7b4:	4c 8b 74 24 40       	mov    r14,QWORD PTR [rsp+0x40]
    f7b9:	4c 8b 6c 24 70       	mov    r13,QWORD PTR [rsp+0x70]
    f7be:	4c 8b 5c 24 30       	mov    r11,QWORD PTR [rsp+0x30]
    f7c3:	0f b6 54 24 0d       	movzx  edx,BYTE PTR [rsp+0xd]
    f7c8:	e9 29 fa ff ff       	jmp    f1f6 <quotearg_buffer_restyled+0x9e6>
    f7cd:	48 8b 54 24 68       	mov    rdx,QWORD PTR [rsp+0x68]
    f7d2:	0f b6 02             	movzx  eax,BYTE PTR [rdx]
    f7d5:	84 c0                	test   al,al
    f7d7:	0f 84 2f fe ff ff    	je     f60c <quotearg_buffer_restyled+0xdfc>
    f7dd:	0f 1f 00             	nop    DWORD PTR [rax]
    f7e0:	4d 39 fd             	cmp    r13,r15
    f7e3:	76 04                	jbe    f7e9 <quotearg_buffer_restyled+0xfd9>
    f7e5:	43 88 04 3e          	mov    BYTE PTR [r14+r15*1],al
    f7e9:	49 83 c7 01          	add    r15,0x1
    f7ed:	42 0f b6 04 3a       	movzx  eax,BYTE PTR [rdx+r15*1]
    f7f2:	84 c0                	test   al,al
    f7f4:	75 ea                	jne    f7e0 <quotearg_buffer_restyled+0xfd0>
    f7f6:	e9 11 fe ff ff       	jmp    f60c <quotearg_buffer_restyled+0xdfc>
    f7fb:	89 d0                	mov    eax,edx
    f7fd:	e9 55 f5 ff ff       	jmp    ed57 <quotearg_buffer_restyled+0x547>
    f802:	0f b6 1c 08          	movzx  ebx,BYTE PTR [rax+rcx*1]
    f806:	80 fb 3e             	cmp    bl,0x3e
    f809:	0f 87 71 f8 ff ff    	ja     f080 <quotearg_buffer_restyled+0x870>
    f80f:	48 b8 00 00 00 00 82 	movabs rax,0x7000a38200000000
    f816:	a3 00 70 
    f819:	48 0f a3 d8          	bt     rax,rbx
    f81d:	0f 83 5d f8 ff ff    	jae    f080 <quotearg_buffer_restyled+0x870>
    f823:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
    f828:	0f 85 e4 01 00 00    	jne    fa12 <quotearg_buffer_restyled+0x1202>
    f82e:	4d 39 fd             	cmp    r13,r15
    f831:	76 05                	jbe    f838 <quotearg_buffer_restyled+0x1028>
    f833:	43 c6 04 3e 3f       	mov    BYTE PTR [r14+r15*1],0x3f
    f838:	49 8d 47 01          	lea    rax,[r15+0x1]
    f83c:	49 39 c5             	cmp    r13,rax
    f83f:	76 06                	jbe    f847 <quotearg_buffer_restyled+0x1037>
    f841:	43 c6 44 3e 01 22    	mov    BYTE PTR [r14+r15*1+0x1],0x22
    f847:	49 8d 47 02          	lea    rax,[r15+0x2]
    f84b:	49 39 c5             	cmp    r13,rax
    f84e:	76 06                	jbe    f856 <quotearg_buffer_restyled+0x1046>
    f850:	43 c6 44 3e 02 22    	mov    BYTE PTR [r14+r15*1+0x2],0x22
    f856:	49 8d 47 03          	lea    rax,[r15+0x3]
    f85a:	49 39 c5             	cmp    r13,rax
    f85d:	76 06                	jbe    f865 <quotearg_buffer_restyled+0x1055>
    f85f:	43 c6 44 3e 03 3f    	mov    BYTE PTR [r14+r15*1+0x3],0x3f
    f865:	49 83 c7 04          	add    r15,0x4
    f869:	31 d2                	xor    edx,edx
    f86b:	45 31 e4             	xor    r12d,r12d
    f86e:	31 c0                	xor    eax,eax
    f870:	48 89 cd             	mov    rbp,rcx
    f873:	e9 c0 f1 ff ff       	jmp    ea38 <quotearg_buffer_restyled+0x228>
    f878:	85 db                	test   ebx,ebx
    f87a:	0f 84 88 01 00 00    	je     fa08 <quotearg_buffer_restyled+0x11f8>
    f880:	48 8d 05 2b 5e 00 00 	lea    rax,[rip+0x5e2b]        # 156b2 <short_options+0x17e2>
    f887:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
    f88c:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
    f891:	45 31 e4             	xor    r12d,r12d
    f894:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
    f89b:	00 00 
    f89d:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
    f8a2:	c6 44 24 0d 00       	mov    BYTE PTR [rsp+0xd],0x0
    f8a7:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
    f8ae:	00 00 
    f8b0:	45 31 ff             	xor    r15d,r15d
    f8b3:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
    f8b8:	e9 26 f0 ff ff       	jmp    e8e3 <quotearg_buffer_restyled+0xd3>
    f8bd:	0f 1f 00             	nop    DWORD PTR [rax]
    f8c0:	4c 89 dd             	mov    rbp,r11
    f8c3:	0f b6 44 24 0f       	movzx  eax,BYTE PTR [rsp+0xf]
    f8c8:	e9 cc fa ff ff       	jmp    f399 <quotearg_buffer_restyled+0xb89>
    f8cd:	48 8d 05 2f 63 00 00 	lea    rax,[rip+0x632f]        # 15c03 <default_tuning+0xc3>
    f8d4:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
    f8d9:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
    f8de:	45 31 e4             	xor    r12d,r12d
    f8e1:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
    f8e8:	00 00 
    f8ea:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
    f8ef:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
    f8f4:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
    f8fb:	00 00 
    f8fd:	45 31 ff             	xor    r15d,r15d
    f900:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
    f905:	e9 d9 ef ff ff       	jmp    e8e3 <quotearg_buffer_restyled+0xd3>
    f90a:	89 d0                	mov    eax,edx
    f90c:	48 8b 5c 24 48       	mov    rbx,QWORD PTR [rsp+0x48]
    f911:	48 85 db             	test   rbx,rbx
    f914:	74 2c                	je     f942 <quotearg_buffer_restyled+0x1132>
    f916:	84 c0                	test   al,al
    f918:	74 28                	je     f942 <quotearg_buffer_restyled+0x1132>
    f91a:	0f b6 0b             	movzx  ecx,BYTE PTR [rbx]
    f91d:	48 89 d8             	mov    rax,rbx
    f920:	84 c9                	test   cl,cl
    f922:	74 1e                	je     f942 <quotearg_buffer_restyled+0x1132>
    f924:	4c 89 fa             	mov    rdx,r15
    f927:	4c 29 f8             	sub    rax,r15
    f92a:	49 39 d5             	cmp    r13,rdx
    f92d:	76 04                	jbe    f933 <quotearg_buffer_restyled+0x1123>
    f92f:	41 88 0c 16          	mov    BYTE PTR [r14+rdx*1],cl
    f933:	48 83 c2 01          	add    rdx,0x1
    f937:	0f b6 0c 10          	movzx  ecx,BYTE PTR [rax+rdx*1]
    f93b:	84 c9                	test   cl,cl
    f93d:	75 eb                	jne    f92a <quotearg_buffer_restyled+0x111a>
    f93f:	49 89 d7             	mov    r15,rdx
    f942:	4d 39 fd             	cmp    r13,r15
    f945:	0f 86 9e fa ff ff    	jbe    f3e9 <quotearg_buffer_restyled+0xbd9>
    f94b:	43 c6 04 3e 00       	mov    BYTE PTR [r14+r15*1],0x0
    f950:	e9 94 fa ff ff       	jmp    f3e9 <quotearg_buffer_restyled+0xbd9>
    f955:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
    f95a:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [rsp+0xf]
    f95f:	4c 89 dd             	mov    rbp,r11
    f962:	0f 94 c0             	sete   al
    f965:	88 5c 24 0d          	mov    BYTE PTR [rsp+0xd],bl
    f969:	e9 2b fa ff ff       	jmp    f399 <quotearg_buffer_restyled+0xb89>
    f96e:	8b 74 24 08          	mov    esi,DWORD PTR [rsp+0x8]
    f972:	48 89 cf             	mov    rdi,rcx
    f975:	e8 a6 ed ff ff       	call   e720 <gettext_quote.part.1>
    f97a:	48 89 44 24 68       	mov    QWORD PTR [rsp+0x68],rax
    f97f:	e9 52 fc ff ff       	jmp    f5d6 <quotearg_buffer_restyled+0xdc6>
    f984:	8b 74 24 08          	mov    esi,DWORD PTR [rsp+0x8]
    f988:	48 89 cf             	mov    rdi,rcx
    f98b:	e8 90 ed ff ff       	call   e720 <gettext_quote.part.1>
    f990:	48 89 44 24 60       	mov    QWORD PTR [rsp+0x60],rax
    f995:	e9 67 fc ff ff       	jmp    f601 <quotearg_buffer_restyled+0xdf1>
    f99a:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [rsp+0xf]
    f99f:	4c 89 dd             	mov    rbp,r11
    f9a2:	89 d0                	mov    eax,edx
    f9a4:	88 5c 24 0d          	mov    BYTE PTR [rsp+0xd],bl
    f9a8:	e9 ec f9 ff ff       	jmp    f399 <quotearg_buffer_restyled+0xb89>
    f9ad:	48 83 ec 08          	sub    rsp,0x8
    f9b1:	41 b8 05 00 00 00    	mov    r8d,0x5
    f9b7:	4c 89 d9             	mov    rcx,r11
    f9ba:	ff 74 24 68          	push   QWORD PTR [rsp+0x68]
    f9be:	ff 74 24 78          	push   QWORD PTR [rsp+0x78]
    f9c2:	4c 89 f7             	mov    rdi,r14
    f9c5:	ff 74 24 38          	push   QWORD PTR [rsp+0x38]
    f9c9:	44 8b 8c 24 98 00 00 	mov    r9d,DWORD PTR [rsp+0x98]
    f9d0:	00 
    f9d1:	48 8b 54 24 30       	mov    rdx,QWORD PTR [rsp+0x30]
    f9d6:	48 8b 74 24 70       	mov    rsi,QWORD PTR [rsp+0x70]
    f9db:	e8 30 ee ff ff       	call   e810 <quotearg_buffer_restyled>
    f9e0:	48 83 c4 20          	add    rsp,0x20
    f9e4:	49 89 c7             	mov    r15,rax
    f9e7:	e9 fd f9 ff ff       	jmp    f3e9 <quotearg_buffer_restyled+0xbd9>
    f9ec:	0f b6 44 24 7c       	movzx  eax,BYTE PTR [rsp+0x7c]
    f9f1:	e9 16 ff ff ff       	jmp    f90c <quotearg_buffer_restyled+0x10fc>
    f9f6:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
    f9fd:	00 
    f9fe:	e9 96 f9 ff ff       	jmp    f399 <quotearg_buffer_restyled+0xb89>
    fa03:	e8 98 32 ff ff       	call   2ca0 <__stack_chk_fail@plt>
    fa08:	c6 44 24 0d 00       	mov    BYTE PTR [rsp+0xd],0x0
    fa0d:	e9 6f fa ff ff       	jmp    f481 <quotearg_buffer_restyled+0xc71>
    fa12:	4c 89 dd             	mov    rbp,r11
    fa15:	e9 96 f9 ff ff       	jmp    f3b0 <quotearg_buffer_restyled+0xba0>
    fa1a:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
    fa1f:	31 c0                	xor    eax,eax
    fa21:	45 31 e4             	xor    r12d,r12d
    fa24:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
    fa2b:	00 00 
    fa2d:	e9 a2 f5 ff ff       	jmp    efd4 <quotearg_buffer_restyled+0x7c4>
    fa32:	4c 89 ea             	mov    rdx,r13
    fa35:	4c 8b 6c 24 50       	mov    r13,QWORD PTR [rsp+0x50]
    fa3a:	e9 f3 f5 ff ff       	jmp    f032 <quotearg_buffer_restyled+0x822>
    fa3f:	e8 bc 30 ff ff       	call   2b00 <abort@plt>
    fa44:	66 90                	xchg   ax,ax
    fa46:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    fa4d:	00 00 00 

000000000000fa50 <quotearg_n_options>:
    fa50:	41 57                	push   r15
    fa52:	41 56                	push   r14
    fa54:	4c 63 ff             	movsxd r15,edi
    fa57:	41 55                	push   r13
    fa59:	41 54                	push   r12
    fa5b:	49 89 d6             	mov    r14,rdx
    fa5e:	55                   	push   rbp
    fa5f:	53                   	push   rbx
    fa60:	48 89 cd             	mov    rbp,rcx
    fa63:	48 83 ec 28          	sub    rsp,0x28
    fa67:	48 89 74 24 08       	mov    QWORD PTR [rsp+0x8],rsi
    fa6c:	e8 9f 30 ff ff       	call   2b10 <__errno_location@plt>
    fa71:	49 89 c5             	mov    r13,rax
    fa74:	8b 00                	mov    eax,DWORD PTR [rax]
    fa76:	45 85 ff             	test   r15d,r15d
    fa79:	48 8b 1d 00 a7 20 00 	mov    rbx,QWORD PTR [rip+0x20a700]        # 21a180 <slotvec>
    fa80:	89 44 24 18          	mov    DWORD PTR [rsp+0x18],eax
    fa84:	0f 88 67 01 00 00    	js     fbf1 <quotearg_n_options+0x1a1>
    fa8a:	44 39 3d e7 a6 20 00 	cmp    DWORD PTR [rip+0x20a6e7],r15d        # 21a178 <nslots>
    fa91:	7f 62                	jg     faf5 <quotearg_n_options+0xa5>
    fa93:	41 81 ff ff ff ff 7f 	cmp    r15d,0x7fffffff
    fa9a:	0f 84 56 01 00 00    	je     fbf6 <quotearg_n_options+0x1a6>
    faa0:	45 8d 67 01          	lea    r12d,[r15+0x1]
    faa4:	48 8d 05 e5 a6 20 00 	lea    rax,[rip+0x20a6e5]        # 21a190 <slotvec0>
    faab:	49 63 f4             	movsxd rsi,r12d
    faae:	48 c1 e6 04          	shl    rsi,0x4
    fab2:	48 39 c3             	cmp    rbx,rax
    fab5:	0f 84 15 01 00 00    	je     fbd0 <quotearg_n_options+0x180>
    fabb:	48 89 df             	mov    rdi,rbx
    fabe:	e8 7d 23 00 00       	call   11e40 <xrealloc>
    fac3:	48 89 c3             	mov    rbx,rax
    fac6:	48 89 05 b3 a6 20 00 	mov    QWORD PTR [rip+0x20a6b3],rax        # 21a180 <slotvec>
    facd:	48 63 3d a4 a6 20 00 	movsxd rdi,DWORD PTR [rip+0x20a6a4]        # 21a178 <nslots>
    fad4:	44 89 e2             	mov    edx,r12d
    fad7:	31 f6                	xor    esi,esi
    fad9:	29 fa                	sub    edx,edi
    fadb:	48 c1 e7 04          	shl    rdi,0x4
    fadf:	48 63 d2             	movsxd rdx,edx
    fae2:	48 01 df             	add    rdi,rbx
    fae5:	48 c1 e2 04          	shl    rdx,0x4
    fae9:	e8 a2 32 ff ff       	call   2d90 <memset@plt>
    faee:	44 89 25 83 a6 20 00 	mov    DWORD PTR [rip+0x20a683],r12d        # 21a178 <nslots>
    faf5:	8b 45 04             	mov    eax,DWORD PTR [rbp+0x4]
    faf8:	49 c1 e7 04          	shl    r15,0x4
    fafc:	48 83 ec 08          	sub    rsp,0x8
    fb00:	4c 01 fb             	add    rbx,r15
    fb03:	4c 8d 7d 08          	lea    r15,[rbp+0x8]
    fb07:	44 8b 45 00          	mov    r8d,DWORD PTR [rbp+0x0]
    fb0b:	4c 8b 1b             	mov    r11,QWORD PTR [rbx]
    fb0e:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
    fb12:	4c 89 f1             	mov    rcx,r14
    fb15:	83 c8 01             	or     eax,0x1
    fb18:	89 44 24 24          	mov    DWORD PTR [rsp+0x24],eax
    fb1c:	ff 75 30             	push   QWORD PTR [rbp+0x30]
    fb1f:	41 89 c1             	mov    r9d,eax
    fb22:	ff 75 28             	push   QWORD PTR [rbp+0x28]
    fb25:	41 57                	push   r15
    fb27:	4c 89 de             	mov    rsi,r11
    fb2a:	48 8b 54 24 28       	mov    rdx,QWORD PTR [rsp+0x28]
    fb2f:	4c 89 e7             	mov    rdi,r12
    fb32:	4c 89 5c 24 30       	mov    QWORD PTR [rsp+0x30],r11
    fb37:	e8 d4 ec ff ff       	call   e810 <quotearg_buffer_restyled>
    fb3c:	48 83 c4 20          	add    rsp,0x20
    fb40:	4c 8b 5c 24 10       	mov    r11,QWORD PTR [rsp+0x10]
    fb45:	49 39 c3             	cmp    r11,rax
    fb48:	77 67                	ja     fbb1 <quotearg_n_options+0x161>
    fb4a:	48 8d 70 01          	lea    rsi,[rax+0x1]
    fb4e:	48 8d 05 6b ad 20 00 	lea    rax,[rip+0x20ad6b]        # 21a8c0 <slot0>
    fb55:	49 39 c4             	cmp    r12,rax
    fb58:	48 89 33             	mov    QWORD PTR [rbx],rsi
    fb5b:	74 12                	je     fb6f <quotearg_n_options+0x11f>
    fb5d:	4c 89 e7             	mov    rdi,r12
    fb60:	48 89 74 24 10       	mov    QWORD PTR [rsp+0x10],rsi
    fb65:	e8 56 36 ff ff       	call   31c0 <free@plt>
    fb6a:	48 8b 74 24 10       	mov    rsi,QWORD PTR [rsp+0x10]
    fb6f:	48 89 f7             	mov    rdi,rsi
    fb72:	48 89 74 24 10       	mov    QWORD PTR [rsp+0x10],rsi
    fb77:	e8 64 22 00 00       	call   11de0 <xmalloc>
    fb7c:	48 83 ec 08          	sub    rsp,0x8
    fb80:	48 89 43 08          	mov    QWORD PTR [rbx+0x8],rax
    fb84:	44 8b 45 00          	mov    r8d,DWORD PTR [rbp+0x0]
    fb88:	ff 75 30             	push   QWORD PTR [rbp+0x30]
    fb8b:	ff 75 28             	push   QWORD PTR [rbp+0x28]
    fb8e:	4c 89 f1             	mov    rcx,r14
    fb91:	41 57                	push   r15
    fb93:	44 8b 4c 24 3c       	mov    r9d,DWORD PTR [rsp+0x3c]
    fb98:	48 89 c7             	mov    rdi,rax
    fb9b:	48 8b 54 24 28       	mov    rdx,QWORD PTR [rsp+0x28]
    fba0:	48 8b 74 24 30       	mov    rsi,QWORD PTR [rsp+0x30]
    fba5:	49 89 c4             	mov    r12,rax
    fba8:	e8 63 ec ff ff       	call   e810 <quotearg_buffer_restyled>
    fbad:	48 83 c4 20          	add    rsp,0x20
    fbb1:	8b 44 24 18          	mov    eax,DWORD PTR [rsp+0x18]
    fbb5:	41 89 45 00          	mov    DWORD PTR [r13+0x0],eax
    fbb9:	48 83 c4 28          	add    rsp,0x28
    fbbd:	4c 89 e0             	mov    rax,r12
    fbc0:	5b                   	pop    rbx
    fbc1:	5d                   	pop    rbp
    fbc2:	41 5c                	pop    r12
    fbc4:	41 5d                	pop    r13
    fbc6:	41 5e                	pop    r14
    fbc8:	41 5f                	pop    r15
    fbca:	c3                   	ret    
    fbcb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    fbd0:	31 ff                	xor    edi,edi
    fbd2:	e8 69 22 00 00       	call   11e40 <xrealloc>
    fbd7:	66 0f 6f 05 b1 a5 20 	movdqa xmm0,XMMWORD PTR [rip+0x20a5b1]        # 21a190 <slotvec0>
    fbde:	00 
    fbdf:	48 89 c3             	mov    rbx,rax
    fbe2:	48 89 05 97 a5 20 00 	mov    QWORD PTR [rip+0x20a597],rax        # 21a180 <slotvec>
    fbe9:	0f 11 00             	movups XMMWORD PTR [rax],xmm0
    fbec:	e9 dc fe ff ff       	jmp    facd <quotearg_n_options+0x7d>
    fbf1:	e8 0a 2f ff ff       	call   2b00 <abort@plt>
    fbf6:	e8 35 24 00 00       	call   12030 <xalloc_die>
    fbfb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000fc00 <clone_quoting_options>:
    fc00:	41 54                	push   r12
    fc02:	55                   	push   rbp
    fc03:	53                   	push   rbx
    fc04:	48 89 fb             	mov    rbx,rdi
    fc07:	e8 04 2f ff ff       	call   2b10 <__errno_location@plt>
    fc0c:	44 8b 20             	mov    r12d,DWORD PTR [rax]
    fc0f:	48 89 c5             	mov    rbp,rax
    fc12:	48 8d 05 a7 ad 20 00 	lea    rax,[rip+0x20ada7]        # 21a9c0 <default_quoting_options>
    fc19:	48 85 db             	test   rbx,rbx
    fc1c:	be 38 00 00 00       	mov    esi,0x38
    fc21:	48 0f 44 d8          	cmove  rbx,rax
    fc25:	48 89 df             	mov    rdi,rbx
    fc28:	e8 b3 23 00 00       	call   11fe0 <xmemdup>
    fc2d:	44 89 65 00          	mov    DWORD PTR [rbp+0x0],r12d
    fc31:	5b                   	pop    rbx
    fc32:	5d                   	pop    rbp
    fc33:	41 5c                	pop    r12
    fc35:	c3                   	ret    
    fc36:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    fc3d:	00 00 00 

000000000000fc40 <get_quoting_style>:
    fc40:	48 8d 05 79 ad 20 00 	lea    rax,[rip+0x20ad79]        # 21a9c0 <default_quoting_options>
    fc47:	48 85 ff             	test   rdi,rdi
    fc4a:	48 0f 44 f8          	cmove  rdi,rax
    fc4e:	8b 07                	mov    eax,DWORD PTR [rdi]
    fc50:	c3                   	ret    
    fc51:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    fc56:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    fc5d:	00 00 00 

000000000000fc60 <set_quoting_style>:
    fc60:	48 8d 05 59 ad 20 00 	lea    rax,[rip+0x20ad59]        # 21a9c0 <default_quoting_options>
    fc67:	48 85 ff             	test   rdi,rdi
    fc6a:	48 0f 44 f8          	cmove  rdi,rax
    fc6e:	89 37                	mov    DWORD PTR [rdi],esi
    fc70:	c3                   	ret    
    fc71:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    fc76:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    fc7d:	00 00 00 

000000000000fc80 <set_char_quoting>:
    fc80:	48 8d 05 39 ad 20 00 	lea    rax,[rip+0x20ad39]        # 21a9c0 <default_quoting_options>
    fc87:	48 85 ff             	test   rdi,rdi
    fc8a:	89 f1                	mov    ecx,esi
    fc8c:	48 0f 44 f8          	cmove  rdi,rax
    fc90:	89 f0                	mov    eax,esi
    fc92:	83 e1 1f             	and    ecx,0x1f
    fc95:	c0 e8 05             	shr    al,0x5
    fc98:	0f b6 c0             	movzx  eax,al
    fc9b:	48 8d 7c 87 08       	lea    rdi,[rdi+rax*4+0x8]
    fca0:	8b 37                	mov    esi,DWORD PTR [rdi]
    fca2:	89 f0                	mov    eax,esi
    fca4:	d3 e8                	shr    eax,cl
    fca6:	31 c2                	xor    edx,eax
    fca8:	83 e0 01             	and    eax,0x1
    fcab:	83 e2 01             	and    edx,0x1
    fcae:	d3 e2                	shl    edx,cl
    fcb0:	31 f2                	xor    edx,esi
    fcb2:	89 17                	mov    DWORD PTR [rdi],edx
    fcb4:	c3                   	ret    
    fcb5:	90                   	nop
    fcb6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    fcbd:	00 00 00 

000000000000fcc0 <set_quoting_flags>:
    fcc0:	48 8d 05 f9 ac 20 00 	lea    rax,[rip+0x20acf9]        # 21a9c0 <default_quoting_options>
    fcc7:	48 85 ff             	test   rdi,rdi
    fcca:	48 0f 44 f8          	cmove  rdi,rax
    fcce:	8b 47 04             	mov    eax,DWORD PTR [rdi+0x4]
    fcd1:	89 77 04             	mov    DWORD PTR [rdi+0x4],esi
    fcd4:	c3                   	ret    
    fcd5:	90                   	nop
    fcd6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    fcdd:	00 00 00 

000000000000fce0 <set_custom_quoting>:
    fce0:	48 8d 05 d9 ac 20 00 	lea    rax,[rip+0x20acd9]        # 21a9c0 <default_quoting_options>
    fce7:	48 85 ff             	test   rdi,rdi
    fcea:	48 0f 44 f8          	cmove  rdi,rax
    fcee:	48 85 f6             	test   rsi,rsi
    fcf1:	c7 07 0a 00 00 00    	mov    DWORD PTR [rdi],0xa
    fcf7:	74 0e                	je     fd07 <set_custom_quoting+0x27>
    fcf9:	48 85 d2             	test   rdx,rdx
    fcfc:	74 09                	je     fd07 <set_custom_quoting+0x27>
    fcfe:	48 89 77 28          	mov    QWORD PTR [rdi+0x28],rsi
    fd02:	48 89 57 30          	mov    QWORD PTR [rdi+0x30],rdx
    fd06:	c3                   	ret    
    fd07:	48 83 ec 08          	sub    rsp,0x8
    fd0b:	e8 f0 2d ff ff       	call   2b00 <abort@plt>

000000000000fd10 <quotearg_buffer>:
    fd10:	41 57                	push   r15
    fd12:	41 56                	push   r14
    fd14:	48 8d 05 a5 ac 20 00 	lea    rax,[rip+0x20aca5]        # 21a9c0 <default_quoting_options>
    fd1b:	41 55                	push   r13
    fd1d:	41 54                	push   r12
    fd1f:	49 89 fd             	mov    r13,rdi
    fd22:	55                   	push   rbp
    fd23:	53                   	push   rbx
    fd24:	4c 89 c3             	mov    rbx,r8
    fd27:	49 89 f6             	mov    r14,rsi
    fd2a:	49 89 d7             	mov    r15,rdx
    fd2d:	48 83 ec 18          	sub    rsp,0x18
    fd31:	4d 85 c0             	test   r8,r8
    fd34:	48 0f 44 d8          	cmove  rbx,rax
    fd38:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
    fd3d:	e8 ce 2d ff ff       	call   2b10 <__errno_location@plt>
    fd42:	44 8b 20             	mov    r12d,DWORD PTR [rax]
    fd45:	48 89 c5             	mov    rbp,rax
    fd48:	48 8d 43 08          	lea    rax,[rbx+0x8]
    fd4c:	48 83 ec 08          	sub    rsp,0x8
    fd50:	44 8b 4b 04          	mov    r9d,DWORD PTR [rbx+0x4]
    fd54:	ff 73 30             	push   QWORD PTR [rbx+0x30]
    fd57:	44 8b 03             	mov    r8d,DWORD PTR [rbx]
    fd5a:	ff 73 28             	push   QWORD PTR [rbx+0x28]
    fd5d:	4c 89 fa             	mov    rdx,r15
    fd60:	50                   	push   rax
    fd61:	48 8b 4c 24 28       	mov    rcx,QWORD PTR [rsp+0x28]
    fd66:	4c 89 f6             	mov    rsi,r14
    fd69:	4c 89 ef             	mov    rdi,r13
    fd6c:	e8 9f ea ff ff       	call   e810 <quotearg_buffer_restyled>
    fd71:	44 89 65 00          	mov    DWORD PTR [rbp+0x0],r12d
    fd75:	48 83 c4 38          	add    rsp,0x38
    fd79:	5b                   	pop    rbx
    fd7a:	5d                   	pop    rbp
    fd7b:	41 5c                	pop    r12
    fd7d:	41 5d                	pop    r13
    fd7f:	41 5e                	pop    r14
    fd81:	41 5f                	pop    r15
    fd83:	c3                   	ret    
    fd84:	66 90                	xchg   ax,ax
    fd86:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    fd8d:	00 00 00 

000000000000fd90 <quotearg_alloc_mem>:
    fd90:	41 57                	push   r15
    fd92:	41 56                	push   r14
    fd94:	48 8d 05 25 ac 20 00 	lea    rax,[rip+0x20ac25]        # 21a9c0 <default_quoting_options>
    fd9b:	41 55                	push   r13
    fd9d:	41 54                	push   r12
    fd9f:	49 89 d4             	mov    r12,rdx
    fda2:	55                   	push   rbp
    fda3:	53                   	push   rbx
    fda4:	48 89 cb             	mov    rbx,rcx
    fda7:	49 89 fe             	mov    r14,rdi
    fdaa:	49 89 f7             	mov    r15,rsi
    fdad:	48 83 ec 38          	sub    rsp,0x38
    fdb1:	48 85 c9             	test   rcx,rcx
    fdb4:	48 0f 44 d8          	cmove  rbx,rax
    fdb8:	31 ed                	xor    ebp,ebp
    fdba:	e8 51 2d ff ff       	call   2b10 <__errno_location@plt>
    fdbf:	4d 85 e4             	test   r12,r12
    fdc2:	49 89 c5             	mov    r13,rax
    fdc5:	8b 00                	mov    eax,DWORD PTR [rax]
    fdc7:	40 0f 94 c5          	sete   bpl
    fdcb:	0b 6b 04             	or     ebp,DWORD PTR [rbx+0x4]
    fdce:	4c 8d 53 08          	lea    r10,[rbx+0x8]
    fdd2:	48 83 ec 08          	sub    rsp,0x8
    fdd6:	44 8b 03             	mov    r8d,DWORD PTR [rbx]
    fdd9:	4c 89 f9             	mov    rcx,r15
    fddc:	89 44 24 14          	mov    DWORD PTR [rsp+0x14],eax
    fde0:	ff 73 30             	push   QWORD PTR [rbx+0x30]
    fde3:	4c 89 f2             	mov    rdx,r14
    fde6:	ff 73 28             	push   QWORD PTR [rbx+0x28]
    fde9:	41 52                	push   r10
    fdeb:	31 f6                	xor    esi,esi
    fded:	41 89 e9             	mov    r9d,ebp
    fdf0:	31 ff                	xor    edi,edi
    fdf2:	4c 89 54 24 40       	mov    QWORD PTR [rsp+0x40],r10
    fdf7:	e8 14 ea ff ff       	call   e810 <quotearg_buffer_restyled>
    fdfc:	48 8d 70 01          	lea    rsi,[rax+0x1]
    fe00:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
    fe05:	48 83 c4 20          	add    rsp,0x20
    fe09:	48 89 f7             	mov    rdi,rsi
    fe0c:	48 89 74 24 18       	mov    QWORD PTR [rsp+0x18],rsi
    fe11:	e8 ca 1f 00 00       	call   11de0 <xmalloc>
    fe16:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
    fe1b:	48 83 ec 08          	sub    rsp,0x8
    fe1f:	ff 73 30             	push   QWORD PTR [rbx+0x30]
    fe22:	ff 73 28             	push   QWORD PTR [rbx+0x28]
    fe25:	4c 8b 54 24 38       	mov    r10,QWORD PTR [rsp+0x38]
    fe2a:	41 89 e9             	mov    r9d,ebp
    fe2d:	44 8b 03             	mov    r8d,DWORD PTR [rbx]
    fe30:	4c 89 f9             	mov    rcx,r15
    fe33:	4c 89 f2             	mov    rdx,r14
    fe36:	48 89 c7             	mov    rdi,rax
    fe39:	41 52                	push   r10
    fe3b:	48 8b 74 24 38       	mov    rsi,QWORD PTR [rsp+0x38]
    fe40:	e8 cb e9 ff ff       	call   e810 <quotearg_buffer_restyled>
    fe45:	8b 44 24 2c          	mov    eax,DWORD PTR [rsp+0x2c]
    fe49:	48 83 c4 20          	add    rsp,0x20
    fe4d:	4d 85 e4             	test   r12,r12
    fe50:	41 89 45 00          	mov    DWORD PTR [r13+0x0],eax
    fe54:	74 09                	je     fe5f <quotearg_alloc_mem+0xcf>
    fe56:	4c 8b 5c 24 28       	mov    r11,QWORD PTR [rsp+0x28]
    fe5b:	4d 89 1c 24          	mov    QWORD PTR [r12],r11
    fe5f:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
    fe64:	48 83 c4 38          	add    rsp,0x38
    fe68:	5b                   	pop    rbx
    fe69:	5d                   	pop    rbp
    fe6a:	41 5c                	pop    r12
    fe6c:	41 5d                	pop    r13
    fe6e:	41 5e                	pop    r14
    fe70:	41 5f                	pop    r15
    fe72:	c3                   	ret    
    fe73:	0f 1f 00             	nop    DWORD PTR [rax]
    fe76:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    fe7d:	00 00 00 

000000000000fe80 <quotearg_alloc>:
    fe80:	48 89 d1             	mov    rcx,rdx
    fe83:	31 d2                	xor    edx,edx
    fe85:	e9 06 ff ff ff       	jmp    fd90 <quotearg_alloc_mem>
    fe8a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

000000000000fe90 <quotearg_free>:
    fe90:	8b 05 e2 a2 20 00    	mov    eax,DWORD PTR [rip+0x20a2e2]        # 21a178 <nslots>
    fe96:	41 54                	push   r12
    fe98:	4c 8b 25 e1 a2 20 00 	mov    r12,QWORD PTR [rip+0x20a2e1]        # 21a180 <slotvec>
    fe9f:	55                   	push   rbp
    fea0:	53                   	push   rbx
    fea1:	83 f8 01             	cmp    eax,0x1
    fea4:	7e 2b                	jle    fed1 <quotearg_free+0x41>
    fea6:	83 e8 02             	sub    eax,0x2
    fea9:	49 8d 5c 24 18       	lea    rbx,[r12+0x18]
    feae:	48 c1 e0 04          	shl    rax,0x4
    feb2:	49 8d 6c 04 28       	lea    rbp,[r12+rax*1+0x28]
    feb7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    febe:	00 00 
    fec0:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    fec3:	48 83 c3 10          	add    rbx,0x10
    fec7:	e8 f4 32 ff ff       	call   31c0 <free@plt>
    fecc:	48 39 eb             	cmp    rbx,rbp
    fecf:	75 ef                	jne    fec0 <quotearg_free+0x30>
    fed1:	49 8b 7c 24 08       	mov    rdi,QWORD PTR [r12+0x8]
    fed6:	48 8d 1d e3 a9 20 00 	lea    rbx,[rip+0x20a9e3]        # 21a8c0 <slot0>
    fedd:	48 39 df             	cmp    rdi,rbx
    fee0:	74 17                	je     fef9 <quotearg_free+0x69>
    fee2:	e8 d9 32 ff ff       	call   31c0 <free@plt>
    fee7:	48 c7 05 9e a2 20 00 	mov    QWORD PTR [rip+0x20a29e],0x100        # 21a190 <slotvec0>
    feee:	00 01 00 00 
    fef2:	48 89 1d 9f a2 20 00 	mov    QWORD PTR [rip+0x20a29f],rbx        # 21a198 <slotvec0+0x8>
    fef9:	48 8d 1d 90 a2 20 00 	lea    rbx,[rip+0x20a290]        # 21a190 <slotvec0>
    ff00:	49 39 dc             	cmp    r12,rbx
    ff03:	74 0f                	je     ff14 <quotearg_free+0x84>
    ff05:	4c 89 e7             	mov    rdi,r12
    ff08:	e8 b3 32 ff ff       	call   31c0 <free@plt>
    ff0d:	48 89 1d 6c a2 20 00 	mov    QWORD PTR [rip+0x20a26c],rbx        # 21a180 <slotvec>
    ff14:	5b                   	pop    rbx
    ff15:	c7 05 59 a2 20 00 01 	mov    DWORD PTR [rip+0x20a259],0x1        # 21a178 <nslots>
    ff1c:	00 00 00 
    ff1f:	5d                   	pop    rbp
    ff20:	41 5c                	pop    r12
    ff22:	c3                   	ret    
    ff23:	0f 1f 00             	nop    DWORD PTR [rax]
    ff26:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    ff2d:	00 00 00 

000000000000ff30 <quotearg_n>:
    ff30:	48 8d 0d 89 aa 20 00 	lea    rcx,[rip+0x20aa89]        # 21a9c0 <default_quoting_options>
    ff37:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
    ff3e:	e9 0d fb ff ff       	jmp    fa50 <quotearg_n_options>
    ff43:	0f 1f 00             	nop    DWORD PTR [rax]
    ff46:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    ff4d:	00 00 00 

000000000000ff50 <quotearg_n_mem>:
    ff50:	48 8d 0d 69 aa 20 00 	lea    rcx,[rip+0x20aa69]        # 21a9c0 <default_quoting_options>
    ff57:	e9 f4 fa ff ff       	jmp    fa50 <quotearg_n_options>
    ff5c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000ff60 <quotearg>:
    ff60:	48 8d 0d 59 aa 20 00 	lea    rcx,[rip+0x20aa59]        # 21a9c0 <default_quoting_options>
    ff67:	48 89 fe             	mov    rsi,rdi
    ff6a:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
    ff71:	31 ff                	xor    edi,edi
    ff73:	e9 d8 fa ff ff       	jmp    fa50 <quotearg_n_options>
    ff78:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    ff7f:	00 

000000000000ff80 <quotearg_mem>:
    ff80:	48 8d 0d 39 aa 20 00 	lea    rcx,[rip+0x20aa39]        # 21a9c0 <default_quoting_options>
    ff87:	48 89 f2             	mov    rdx,rsi
    ff8a:	48 89 fe             	mov    rsi,rdi
    ff8d:	31 ff                	xor    edi,edi
    ff8f:	e9 bc fa ff ff       	jmp    fa50 <quotearg_n_options>
    ff94:	66 90                	xchg   ax,ax
    ff96:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    ff9d:	00 00 00 

000000000000ffa0 <quotearg_n_style>:
    ffa0:	48 83 ec 48          	sub    rsp,0x48
    ffa4:	48 89 d0             	mov    rax,rdx
    ffa7:	64 48 8b 14 25 28 00 	mov    rdx,QWORD PTR fs:0x28
    ffae:	00 00 
    ffb0:	48 89 54 24 38       	mov    QWORD PTR [rsp+0x38],rdx
    ffb5:	31 d2                	xor    edx,edx
    ffb7:	83 fe 0a             	cmp    esi,0xa
    ffba:	74 68                	je     10024 <quotearg_n_style+0x84>
    ffbc:	89 34 24             	mov    DWORD PTR [rsp],esi
    ffbf:	48 89 e1             	mov    rcx,rsp
    ffc2:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
    ffc9:	48 89 c6             	mov    rsi,rax
    ffcc:	48 c7 44 24 04 00 00 	mov    QWORD PTR [rsp+0x4],0x0
    ffd3:	00 00 
    ffd5:	48 c7 44 24 0c 00 00 	mov    QWORD PTR [rsp+0xc],0x0
    ffdc:	00 00 
    ffde:	48 c7 44 24 14 00 00 	mov    QWORD PTR [rsp+0x14],0x0
    ffe5:	00 00 
    ffe7:	48 c7 44 24 1c 00 00 	mov    QWORD PTR [rsp+0x1c],0x0
    ffee:	00 00 
    fff0:	48 c7 44 24 24 00 00 	mov    QWORD PTR [rsp+0x24],0x0
    fff7:	00 00 
    fff9:	48 c7 44 24 2c 00 00 	mov    QWORD PTR [rsp+0x2c],0x0
   10000:	00 00 
   10002:	c7 44 24 34 00 00 00 	mov    DWORD PTR [rsp+0x34],0x0
   10009:	00 
   1000a:	e8 41 fa ff ff       	call   fa50 <quotearg_n_options>
   1000f:	48 8b 4c 24 38       	mov    rcx,QWORD PTR [rsp+0x38]
   10014:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
   1001b:	00 00 
   1001d:	75 0a                	jne    10029 <quotearg_n_style+0x89>
   1001f:	48 83 c4 48          	add    rsp,0x48
   10023:	c3                   	ret    
   10024:	e8 d7 2a ff ff       	call   2b00 <abort@plt>
   10029:	e8 72 2c ff ff       	call   2ca0 <__stack_chk_fail@plt>
   1002e:	66 90                	xchg   ax,ax

0000000000010030 <quotearg_n_style_mem>:
   10030:	48 83 ec 48          	sub    rsp,0x48
   10034:	48 89 d0             	mov    rax,rdx
   10037:	48 89 ca             	mov    rdx,rcx
   1003a:	64 48 8b 0c 25 28 00 	mov    rcx,QWORD PTR fs:0x28
   10041:	00 00 
   10043:	48 89 4c 24 38       	mov    QWORD PTR [rsp+0x38],rcx
   10048:	31 c9                	xor    ecx,ecx
   1004a:	83 fe 0a             	cmp    esi,0xa
   1004d:	74 61                	je     100b0 <quotearg_n_style_mem+0x80>
   1004f:	89 34 24             	mov    DWORD PTR [rsp],esi
   10052:	48 89 e1             	mov    rcx,rsp
   10055:	48 89 c6             	mov    rsi,rax
   10058:	48 c7 44 24 04 00 00 	mov    QWORD PTR [rsp+0x4],0x0
   1005f:	00 00 
   10061:	48 c7 44 24 0c 00 00 	mov    QWORD PTR [rsp+0xc],0x0
   10068:	00 00 
   1006a:	48 c7 44 24 14 00 00 	mov    QWORD PTR [rsp+0x14],0x0
   10071:	00 00 
   10073:	48 c7 44 24 1c 00 00 	mov    QWORD PTR [rsp+0x1c],0x0
   1007a:	00 00 
   1007c:	48 c7 44 24 24 00 00 	mov    QWORD PTR [rsp+0x24],0x0
   10083:	00 00 
   10085:	48 c7 44 24 2c 00 00 	mov    QWORD PTR [rsp+0x2c],0x0
   1008c:	00 00 
   1008e:	c7 44 24 34 00 00 00 	mov    DWORD PTR [rsp+0x34],0x0
   10095:	00 
   10096:	e8 b5 f9 ff ff       	call   fa50 <quotearg_n_options>
   1009b:	48 8b 54 24 38       	mov    rdx,QWORD PTR [rsp+0x38]
   100a0:	64 48 33 14 25 28 00 	xor    rdx,QWORD PTR fs:0x28
   100a7:	00 00 
   100a9:	75 0a                	jne    100b5 <quotearg_n_style_mem+0x85>
   100ab:	48 83 c4 48          	add    rsp,0x48
   100af:	c3                   	ret    
   100b0:	e8 4b 2a ff ff       	call   2b00 <abort@plt>
   100b5:	e8 e6 2b ff ff       	call   2ca0 <__stack_chk_fail@plt>
   100ba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000100c0 <quotearg_style>:
   100c0:	48 89 f2             	mov    rdx,rsi
   100c3:	89 fe                	mov    esi,edi
   100c5:	31 ff                	xor    edi,edi
   100c7:	e9 d4 fe ff ff       	jmp    ffa0 <quotearg_n_style>
   100cc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000100d0 <quotearg_style_mem>:
   100d0:	48 89 d1             	mov    rcx,rdx
   100d3:	48 89 f2             	mov    rdx,rsi
   100d6:	89 fe                	mov    esi,edi
   100d8:	31 ff                	xor    edi,edi
   100da:	e9 51 ff ff ff       	jmp    10030 <quotearg_n_style_mem>
   100df:	90                   	nop

00000000000100e0 <quotearg_char_mem>:
   100e0:	48 83 ec 48          	sub    rsp,0x48
   100e4:	89 d1                	mov    ecx,edx
   100e6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
   100ed:	00 00 
   100ef:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
   100f4:	31 c0                	xor    eax,eax
   100f6:	48 8b 05 f3 a8 20 00 	mov    rax,QWORD PTR [rip+0x20a8f3]        # 21a9f0 <default_quoting_options+0x30>
   100fd:	49 89 e0             	mov    r8,rsp
   10100:	83 e1 1f             	and    ecx,0x1f
   10103:	66 0f 6f 05 b5 a8 20 	movdqa xmm0,XMMWORD PTR [rip+0x20a8b5]        # 21a9c0 <default_quoting_options>
   1010a:	00 
   1010b:	48 89 44 24 30       	mov    QWORD PTR [rsp+0x30],rax
   10110:	89 d0                	mov    eax,edx
   10112:	0f 29 04 24          	movaps XMMWORD PTR [rsp],xmm0
   10116:	c0 e8 05             	shr    al,0x5
   10119:	0f b6 c0             	movzx  eax,al
   1011c:	4d 8d 4c 80 08       	lea    r9,[r8+rax*4+0x8]
   10121:	66 0f 6f 05 a7 a8 20 	movdqa xmm0,XMMWORD PTR [rip+0x20a8a7]        # 21a9d0 <default_quoting_options+0x10>
   10128:	00 
   10129:	0f 29 44 24 10       	movaps XMMWORD PTR [rsp+0x10],xmm0
   1012e:	66 0f 6f 05 aa a8 20 	movdqa xmm0,XMMWORD PTR [rip+0x20a8aa]        # 21a9e0 <default_quoting_options+0x20>
   10135:	00 
   10136:	0f 29 44 24 20       	movaps XMMWORD PTR [rsp+0x20],xmm0
   1013b:	41 8b 11             	mov    edx,DWORD PTR [r9]
   1013e:	89 d0                	mov    eax,edx
   10140:	d3 e8                	shr    eax,cl
   10142:	f7 d0                	not    eax
   10144:	83 e0 01             	and    eax,0x1
   10147:	d3 e0                	shl    eax,cl
   10149:	4c 89 c1             	mov    rcx,r8
   1014c:	31 d0                	xor    eax,edx
   1014e:	48 89 f2             	mov    rdx,rsi
   10151:	48 89 fe             	mov    rsi,rdi
   10154:	41 89 01             	mov    DWORD PTR [r9],eax
   10157:	31 ff                	xor    edi,edi
   10159:	e8 f2 f8 ff ff       	call   fa50 <quotearg_n_options>
   1015e:	48 8b 74 24 38       	mov    rsi,QWORD PTR [rsp+0x38]
   10163:	64 48 33 34 25 28 00 	xor    rsi,QWORD PTR fs:0x28
   1016a:	00 00 
   1016c:	75 05                	jne    10173 <quotearg_char_mem+0x93>
   1016e:	48 83 c4 48          	add    rsp,0x48
   10172:	c3                   	ret    
   10173:	e8 28 2b ff ff       	call   2ca0 <__stack_chk_fail@plt>
   10178:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   1017f:	00 

0000000000010180 <quotearg_char>:
   10180:	40 0f be d6          	movsx  edx,sil
   10184:	48 c7 c6 ff ff ff ff 	mov    rsi,0xffffffffffffffff
   1018b:	e9 50 ff ff ff       	jmp    100e0 <quotearg_char_mem>

0000000000010190 <quotearg_colon>:
   10190:	ba 3a 00 00 00       	mov    edx,0x3a
   10195:	48 c7 c6 ff ff ff ff 	mov    rsi,0xffffffffffffffff
   1019c:	e9 3f ff ff ff       	jmp    100e0 <quotearg_char_mem>
   101a1:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   101a6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   101ad:	00 00 00 

00000000000101b0 <quotearg_colon_mem>:
   101b0:	ba 3a 00 00 00       	mov    edx,0x3a
   101b5:	e9 26 ff ff ff       	jmp    100e0 <quotearg_char_mem>
   101ba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000101c0 <quotearg_n_style_colon>:
   101c0:	48 83 ec 48          	sub    rsp,0x48
   101c4:	48 89 d0             	mov    rax,rdx
   101c7:	64 48 8b 14 25 28 00 	mov    rdx,QWORD PTR fs:0x28
   101ce:	00 00 
   101d0:	48 89 54 24 38       	mov    QWORD PTR [rsp+0x38],rdx
   101d5:	31 d2                	xor    edx,edx
   101d7:	83 fe 0a             	cmp    esi,0xa
   101da:	74 68                	je     10244 <quotearg_n_style_colon+0x84>
   101dc:	89 34 24             	mov    DWORD PTR [rsp],esi
   101df:	48 89 e1             	mov    rcx,rsp
   101e2:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
   101e9:	48 89 c6             	mov    rsi,rax
   101ec:	48 c7 44 24 04 00 00 	mov    QWORD PTR [rsp+0x4],0x0
   101f3:	00 00 
   101f5:	48 c7 44 24 0c 00 00 	mov    QWORD PTR [rsp+0xc],0x4000000
   101fc:	00 04 
   101fe:	48 c7 44 24 14 00 00 	mov    QWORD PTR [rsp+0x14],0x0
   10205:	00 00 
   10207:	48 c7 44 24 1c 00 00 	mov    QWORD PTR [rsp+0x1c],0x0
   1020e:	00 00 
   10210:	48 c7 44 24 24 00 00 	mov    QWORD PTR [rsp+0x24],0x0
   10217:	00 00 
   10219:	48 c7 44 24 2c 00 00 	mov    QWORD PTR [rsp+0x2c],0x0
   10220:	00 00 
   10222:	c7 44 24 34 00 00 00 	mov    DWORD PTR [rsp+0x34],0x0
   10229:	00 
   1022a:	e8 21 f8 ff ff       	call   fa50 <quotearg_n_options>
   1022f:	48 8b 4c 24 38       	mov    rcx,QWORD PTR [rsp+0x38]
   10234:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
   1023b:	00 00 
   1023d:	75 0a                	jne    10249 <quotearg_n_style_colon+0x89>
   1023f:	48 83 c4 48          	add    rsp,0x48
   10243:	c3                   	ret    
   10244:	e8 b7 28 ff ff       	call   2b00 <abort@plt>
   10249:	e8 52 2a ff ff       	call   2ca0 <__stack_chk_fail@plt>
   1024e:	66 90                	xchg   ax,ax

0000000000010250 <quotearg_n_custom_mem>:
   10250:	48 83 ec 48          	sub    rsp,0x48
   10254:	49 89 c9             	mov    r9,rcx
   10257:	48 8b 0d 92 a7 20 00 	mov    rcx,QWORD PTR [rip+0x20a792]        # 21a9f0 <default_quoting_options+0x30>
   1025e:	66 0f 6f 05 5a a7 20 	movdqa xmm0,XMMWORD PTR [rip+0x20a75a]        # 21a9c0 <default_quoting_options>
   10265:	00 
   10266:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
   1026d:	00 00 
   1026f:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
   10274:	31 c0                	xor    eax,eax
   10276:	0f 29 04 24          	movaps XMMWORD PTR [rsp],xmm0
   1027a:	48 85 f6             	test   rsi,rsi
   1027d:	48 89 4c 24 30       	mov    QWORD PTR [rsp+0x30],rcx
   10282:	c7 04 24 0a 00 00 00 	mov    DWORD PTR [rsp],0xa
   10289:	66 0f 6f 05 3f a7 20 	movdqa xmm0,XMMWORD PTR [rip+0x20a73f]        # 21a9d0 <default_quoting_options+0x10>
   10290:	00 
   10291:	0f 29 44 24 10       	movaps XMMWORD PTR [rsp+0x10],xmm0
   10296:	66 0f 6f 05 42 a7 20 	movdqa xmm0,XMMWORD PTR [rip+0x20a742]        # 21a9e0 <default_quoting_options+0x20>
   1029d:	00 
   1029e:	0f 29 44 24 20       	movaps XMMWORD PTR [rsp+0x20],xmm0
   102a3:	74 32                	je     102d7 <quotearg_n_custom_mem+0x87>
   102a5:	48 85 d2             	test   rdx,rdx
   102a8:	74 2d                	je     102d7 <quotearg_n_custom_mem+0x87>
   102aa:	48 89 74 24 28       	mov    QWORD PTR [rsp+0x28],rsi
   102af:	48 89 54 24 30       	mov    QWORD PTR [rsp+0x30],rdx
   102b4:	48 89 e1             	mov    rcx,rsp
   102b7:	4c 89 c2             	mov    rdx,r8
   102ba:	4c 89 ce             	mov    rsi,r9
   102bd:	e8 8e f7 ff ff       	call   fa50 <quotearg_n_options>
   102c2:	48 8b 7c 24 38       	mov    rdi,QWORD PTR [rsp+0x38]
   102c7:	64 48 33 3c 25 28 00 	xor    rdi,QWORD PTR fs:0x28
   102ce:	00 00 
   102d0:	75 0a                	jne    102dc <quotearg_n_custom_mem+0x8c>
   102d2:	48 83 c4 48          	add    rsp,0x48
   102d6:	c3                   	ret    
   102d7:	e8 24 28 ff ff       	call   2b00 <abort@plt>
   102dc:	e8 bf 29 ff ff       	call   2ca0 <__stack_chk_fail@plt>
   102e1:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   102e6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   102ed:	00 00 00 

00000000000102f0 <quotearg_n_custom>:
   102f0:	49 c7 c0 ff ff ff ff 	mov    r8,0xffffffffffffffff
   102f7:	e9 54 ff ff ff       	jmp    10250 <quotearg_n_custom_mem>
   102fc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000010300 <quotearg_custom>:
   10300:	48 89 d1             	mov    rcx,rdx
   10303:	49 c7 c0 ff ff ff ff 	mov    r8,0xffffffffffffffff
   1030a:	48 89 f2             	mov    rdx,rsi
   1030d:	48 89 fe             	mov    rsi,rdi
   10310:	31 ff                	xor    edi,edi
   10312:	e9 39 ff ff ff       	jmp    10250 <quotearg_n_custom_mem>
   10317:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   1031e:	00 00 

0000000000010320 <quotearg_custom_mem>:
   10320:	49 89 c8             	mov    r8,rcx
   10323:	48 89 d1             	mov    rcx,rdx
   10326:	48 89 f2             	mov    rdx,rsi
   10329:	48 89 fe             	mov    rsi,rdi
   1032c:	31 ff                	xor    edi,edi
   1032e:	e9 1d ff ff ff       	jmp    10250 <quotearg_n_custom_mem>
   10333:	0f 1f 00             	nop    DWORD PTR [rax]
   10336:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   1033d:	00 00 00 

0000000000010340 <quote_n_mem>:
   10340:	48 8d 0d f9 9d 20 00 	lea    rcx,[rip+0x209df9]        # 21a140 <quote_quoting_options>
   10347:	e9 04 f7 ff ff       	jmp    fa50 <quotearg_n_options>
   1034c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000010350 <quote_mem>:
   10350:	48 8d 0d e9 9d 20 00 	lea    rcx,[rip+0x209de9]        # 21a140 <quote_quoting_options>
   10357:	48 89 f2             	mov    rdx,rsi
   1035a:	48 89 fe             	mov    rsi,rdi
   1035d:	31 ff                	xor    edi,edi
   1035f:	e9 ec f6 ff ff       	jmp    fa50 <quotearg_n_options>
   10364:	66 90                	xchg   ax,ax
   10366:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   1036d:	00 00 00 

0000000000010370 <quote_n>:
   10370:	48 8d 0d c9 9d 20 00 	lea    rcx,[rip+0x209dc9]        # 21a140 <quote_quoting_options>
   10377:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
   1037e:	e9 cd f6 ff ff       	jmp    fa50 <quotearg_n_options>
   10383:	0f 1f 00             	nop    DWORD PTR [rax]
   10386:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   1038d:	00 00 00 

0000000000010390 <quote>:
   10390:	48 8d 0d a9 9d 20 00 	lea    rcx,[rip+0x209da9]        # 21a140 <quote_quoting_options>
   10397:	48 89 fe             	mov    rsi,rdi
   1039a:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
   103a1:	31 ff                	xor    edi,edi
   103a3:	e9 a8 f6 ff ff       	jmp    fa50 <quotearg_n_options>
   103a8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   103af:	00 

00000000000103b0 <randread_error>:
   103b0:	55                   	push   rbp
   103b1:	53                   	push   rbx
   103b2:	48 83 ec 08          	sub    rsp,0x8
   103b6:	48 85 ff             	test   rdi,rdi
   103b9:	74 3d                	je     103f8 <randread_error+0x48>
   103bb:	e8 d0 ff ff ff       	call   10390 <quote>
   103c0:	48 89 c5             	mov    rbp,rax
   103c3:	e8 48 27 ff ff       	call   2b10 <__errno_location@plt>
   103c8:	83 38 00             	cmp    DWORD PTR [rax],0x0
   103cb:	48 89 c3             	mov    rbx,rax
   103ce:	ba 05 00 00 00       	mov    edx,0x5
   103d3:	74 28                	je     103fd <randread_error+0x4d>
   103d5:	48 8d 35 fc 5c 00 00 	lea    rsi,[rip+0x5cfc]        # 160d8 <quoting_style_vals+0x38>
   103dc:	31 ff                	xor    edi,edi
   103de:	e8 8d 28 ff ff       	call   2c70 <dcgettext@plt>
   103e3:	8b 3d 47 9d 20 00    	mov    edi,DWORD PTR [rip+0x209d47]        # 21a130 <exit_failure>
   103e9:	8b 33                	mov    esi,DWORD PTR [rbx]
   103eb:	48 89 c2             	mov    rdx,rax
   103ee:	48 89 e9             	mov    rcx,rbp
   103f1:	31 c0                	xor    eax,eax
   103f3:	e8 e8 2b ff ff       	call   2fe0 <error@plt>
   103f8:	e8 03 27 ff ff       	call   2b00 <abort@plt>
   103fd:	48 8d 35 c4 5c 00 00 	lea    rsi,[rip+0x5cc4]        # 160c8 <quoting_style_vals+0x28>
   10404:	31 ff                	xor    edi,edi
   10406:	e8 65 28 ff ff       	call   2c70 <dcgettext@plt>
   1040b:	eb d6                	jmp    103e3 <randread_error+0x33>
   1040d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000010410 <randread_new>:
   10410:	41 57                	push   r15
   10412:	41 56                	push   r14
   10414:	41 55                	push   r13
   10416:	41 54                	push   r12
   10418:	55                   	push   rbp
   10419:	53                   	push   rbx
   1041a:	48 83 ec 38          	sub    rsp,0x38
   1041e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
   10425:	00 00 
   10427:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
   1042c:	31 c0                	xor    eax,eax
   1042e:	48 85 f6             	test   rsi,rsi
   10431:	0f 84 21 01 00 00    	je     10558 <randread_new+0x148>
   10437:	48 85 ff             	test   rdi,rdi
   1043a:	49 89 fc             	mov    r12,rdi
   1043d:	48 89 f5             	mov    rbp,rsi
   10440:	74 7e                	je     104c0 <randread_new+0xb0>
   10442:	48 8d 35 ab 5c 00 00 	lea    rsi,[rip+0x5cab]        # 160f4 <quoting_style_vals+0x54>
   10449:	e8 b2 30 00 00       	call   13500 <fopen_safer>
   1044e:	48 85 c0             	test   rax,rax
   10451:	49 89 c5             	mov    r13,rax
   10454:	0f 84 fe 01 00 00    	je     10658 <randread_new+0x248>
   1045a:	bf 38 10 00 00       	mov    edi,0x1038
   1045f:	e8 7c 19 00 00       	call   11de0 <xmalloc>
   10464:	48 89 c3             	mov    rbx,rax
   10467:	4c 89 28             	mov    QWORD PTR [rax],r13
   1046a:	48 8d 05 3f ff ff ff 	lea    rax,[rip+0xffffffffffffff3f]        # 103b0 <randread_error>
   10471:	48 81 fd 00 10 00 00 	cmp    rbp,0x1000
   10478:	b9 00 10 00 00       	mov    ecx,0x1000
   1047d:	48 8d 73 18          	lea    rsi,[rbx+0x18]
   10481:	48 0f 46 cd          	cmovbe rcx,rbp
   10485:	48 89 43 08          	mov    QWORD PTR [rbx+0x8],rax
   10489:	4c 89 63 10          	mov    QWORD PTR [rbx+0x10],r12
   1048d:	31 d2                	xor    edx,edx
   1048f:	4c 89 ef             	mov    rdi,r13
   10492:	e8 19 2b ff ff       	call   2fb0 <setvbuf@plt>
   10497:	48 8b 54 24 28       	mov    rdx,QWORD PTR [rsp+0x28]
   1049c:	64 48 33 14 25 28 00 	xor    rdx,QWORD PTR fs:0x28
   104a3:	00 00 
   104a5:	48 89 d8             	mov    rax,rbx
   104a8:	0f 85 b1 01 00 00    	jne    1065f <randread_new+0x24f>
   104ae:	48 83 c4 38          	add    rsp,0x38
   104b2:	5b                   	pop    rbx
   104b3:	5d                   	pop    rbp
   104b4:	41 5c                	pop    r12
   104b6:	41 5d                	pop    r13
   104b8:	41 5e                	pop    r14
   104ba:	41 5f                	pop    r15
   104bc:	c3                   	ret    
   104bd:	0f 1f 00             	nop    DWORD PTR [rax]
   104c0:	bf 38 10 00 00       	mov    edi,0x1038
   104c5:	e8 16 19 00 00       	call   11de0 <xmalloc>
   104ca:	48 89 c3             	mov    rbx,rax
   104cd:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
   104d4:	48 8d 05 d5 fe ff ff 	lea    rax,[rip+0xfffffffffffffed5]        # 103b0 <randread_error>
   104db:	48 8d 3d 05 5c 00 00 	lea    rdi,[rip+0x5c05]        # 160e7 <quoting_style_vals+0x47>
   104e2:	31 f6                	xor    esi,esi
   104e4:	48 c7 43 10 00 00 00 	mov    QWORD PTR [rbx+0x10],0x0
   104eb:	00 
   104ec:	48 89 43 08          	mov    QWORD PTR [rbx+0x8],rax
   104f0:	48 c7 43 18 00 00 00 	mov    QWORD PTR [rbx+0x18],0x0
   104f7:	00 
   104f8:	31 c0                	xor    eax,eax
   104fa:	e8 11 2b ff ff       	call   3010 <open@plt>
   104ff:	85 c0                	test   eax,eax
   10501:	4c 8d 6b 20          	lea    r13,[rbx+0x20]
   10505:	41 89 c7             	mov    r15d,eax
   10508:	78 7e                	js     10588 <randread_new+0x178>
   1050a:	48 81 fd 00 08 00 00 	cmp    rbp,0x800
   10511:	48 89 ea             	mov    rdx,rbp
   10514:	41 be 00 08 00 00    	mov    r14d,0x800
   1051a:	49 0f 47 d6          	cmova  rdx,r14
   1051e:	b9 18 10 00 00       	mov    ecx,0x1018
   10523:	4c 89 ee             	mov    rsi,r13
   10526:	89 c7                	mov    edi,eax
   10528:	e8 43 26 ff ff       	call   2b70 <__read_chk@plt>
   1052d:	44 89 ff             	mov    edi,r15d
   10530:	48 89 c5             	mov    rbp,rax
   10533:	e8 78 28 ff ff       	call   2db0 <close@plt>
   10538:	48 81 fd ff 07 00 00 	cmp    rbp,0x7ff
   1053f:	0f 8e 1f 01 00 00    	jle    10664 <randread_new+0x254>
   10545:	4c 89 ef             	mov    rdi,r13
   10548:	e8 93 06 00 00       	call   10be0 <isaac_seed>
   1054d:	e9 45 ff ff ff       	jmp    10497 <randread_new+0x87>
   10552:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
   10558:	bf 38 10 00 00       	mov    edi,0x1038
   1055d:	e8 7e 18 00 00       	call   11de0 <xmalloc>
   10562:	48 89 c3             	mov    rbx,rax
   10565:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
   1056c:	48 8d 05 3d fe ff ff 	lea    rax,[rip+0xfffffffffffffe3d]        # 103b0 <randread_error>
   10573:	48 c7 43 10 00 00 00 	mov    QWORD PTR [rbx+0x10],0x0
   1057a:	00 
   1057b:	48 89 43 08          	mov    QWORD PTR [rbx+0x8],rax
   1057f:	e9 13 ff ff ff       	jmp    10497 <randread_new+0x87>
   10584:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   10588:	4c 8d 64 24 10       	lea    r12,[rsp+0x10]
   1058d:	31 f6                	xor    esi,esi
   1058f:	41 be 18 00 00 00    	mov    r14d,0x18
   10595:	4c 89 e7             	mov    rdi,r12
   10598:	e8 c3 27 ff ff       	call   2d60 <gettimeofday@plt>
   1059d:	66 0f 6f 44 24 10    	movdqa xmm0,XMMWORD PTR [rsp+0x10]
   105a3:	0f 11 43 20          	movups XMMWORD PTR [rbx+0x20],xmm0
   105a7:	e8 54 26 ff ff       	call   2c00 <getpid@plt>
   105ac:	89 43 30             	mov    DWORD PTR [rbx+0x30],eax
   105af:	89 44 24 10          	mov    DWORD PTR [rsp+0x10],eax
   105b3:	e8 08 2b ff ff       	call   30c0 <getppid@plt>
   105b8:	89 44 24 10          	mov    DWORD PTR [rsp+0x10],eax
   105bc:	89 43 34             	mov    DWORD PTR [rbx+0x34],eax
   105bf:	bd 00 08 00 00       	mov    ebp,0x800
   105c4:	b8 04 00 00 00       	mov    eax,0x4
   105c9:	4c 29 f5             	sub    rbp,r14
   105cc:	48 83 fd 04          	cmp    rbp,0x4
   105d0:	48 0f 47 e8          	cmova  rbp,rax
   105d4:	e8 d7 26 ff ff       	call   2cb0 <getuid@plt>
   105d9:	85 ed                	test   ebp,ebp
   105db:	89 44 24 10          	mov    DWORD PTR [rsp+0x10],eax
   105df:	4b 8d 4c 35 00       	lea    rcx,[r13+r14*1+0x0]
   105e4:	89 ee                	mov    esi,ebp
   105e6:	74 14                	je     105fc <randread_new+0x1ec>
   105e8:	31 c0                	xor    eax,eax
   105ea:	89 c2                	mov    edx,eax
   105ec:	83 c0 01             	add    eax,0x1
   105ef:	41 0f b6 3c 14       	movzx  edi,BYTE PTR [r12+rdx*1]
   105f4:	39 f0                	cmp    eax,esi
   105f6:	40 88 3c 11          	mov    BYTE PTR [rcx+rdx*1],dil
   105fa:	72 ee                	jb     105ea <randread_new+0x1da>
   105fc:	4c 01 f5             	add    rbp,r14
   105ff:	48 81 fd ff 07 00 00 	cmp    rbp,0x7ff
   10606:	0f 87 39 ff ff ff    	ja     10545 <randread_new+0x135>
   1060c:	e8 9f 28 ff ff       	call   2eb0 <getgid@plt>
   10611:	89 44 24 10          	mov    DWORD PTR [rsp+0x10],eax
   10615:	b8 00 08 00 00       	mov    eax,0x800
   1061a:	ba 04 00 00 00       	mov    edx,0x4
   1061f:	48 29 e8             	sub    rax,rbp
   10622:	49 8d 4c 2d 00       	lea    rcx,[r13+rbp*1+0x0]
   10627:	48 83 f8 04          	cmp    rax,0x4
   1062b:	48 0f 47 c2          	cmova  rax,rdx
   1062f:	85 c0                	test   eax,eax
   10631:	89 c6                	mov    esi,eax
   10633:	0f 84 0c ff ff ff    	je     10545 <randread_new+0x135>
   10639:	31 c0                	xor    eax,eax
   1063b:	89 c2                	mov    edx,eax
   1063d:	83 c0 01             	add    eax,0x1
   10640:	41 0f b6 3c 14       	movzx  edi,BYTE PTR [r12+rdx*1]
   10645:	39 f0                	cmp    eax,esi
   10647:	40 88 3c 11          	mov    BYTE PTR [rcx+rdx*1],dil
   1064b:	72 ee                	jb     1063b <randread_new+0x22b>
   1064d:	e9 f3 fe ff ff       	jmp    10545 <randread_new+0x135>
   10652:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
   10658:	31 db                	xor    ebx,ebx
   1065a:	e9 38 fe ff ff       	jmp    10497 <randread_new+0x87>
   1065f:	e8 3c 26 ff ff       	call   2ca0 <__stack_chk_fail@plt>
   10664:	48 85 ed             	test   rbp,rbp
   10667:	4d 89 f7             	mov    r15,r14
   1066a:	b8 10 00 00 00       	mov    eax,0x10
   1066f:	49 0f 48 ec          	cmovs  rbp,r12
   10673:	4c 8d 64 24 10       	lea    r12,[rsp+0x10]
   10678:	49 29 ef             	sub    r15,rbp
   1067b:	49 83 ff 10          	cmp    r15,0x10
   1067f:	4c 89 e7             	mov    rdi,r12
   10682:	4c 0f 47 f8          	cmova  r15,rax
   10686:	31 f6                	xor    esi,esi
   10688:	e8 d3 26 ff ff       	call   2d60 <gettimeofday@plt>
   1068d:	49 8d 44 2d 00       	lea    rax,[r13+rbp*1+0x0]
   10692:	4c 01 fd             	add    rbp,r15
   10695:	44 89 f9             	mov    ecx,r15d
   10698:	48 81 fd ff 07 00 00 	cmp    rbp,0x7ff
   1069f:	4c 89 e6             	mov    rsi,r12
   106a2:	48 89 c7             	mov    rdi,rax
   106a5:	f3 a4                	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   106a7:	0f 87 98 fe ff ff    	ja     10545 <randread_new+0x135>
   106ad:	4d 89 f7             	mov    r15,r14
   106b0:	41 b8 04 00 00 00    	mov    r8d,0x4
   106b6:	49 29 ef             	sub    r15,rbp
   106b9:	4c 89 44 24 08       	mov    QWORD PTR [rsp+0x8],r8
   106be:	49 83 ff 04          	cmp    r15,0x4
   106c2:	4d 0f 47 f8          	cmova  r15,r8
   106c6:	4a 8d 54 3d 00       	lea    rdx,[rbp+r15*1+0x0]
   106cb:	4c 01 ed             	add    rbp,r13
   106ce:	48 89 14 24          	mov    QWORD PTR [rsp],rdx
   106d2:	e8 29 25 ff ff       	call   2c00 <getpid@plt>
   106d7:	48 8b 14 24          	mov    rdx,QWORD PTR [rsp]
   106db:	89 44 24 10          	mov    DWORD PTR [rsp+0x10],eax
   106df:	44 89 f9             	mov    ecx,r15d
   106e2:	48 89 ef             	mov    rdi,rbp
   106e5:	4c 89 e6             	mov    rsi,r12
   106e8:	4c 8b 44 24 08       	mov    r8,QWORD PTR [rsp+0x8]
   106ed:	f3 a4                	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   106ef:	48 81 fa ff 07 00 00 	cmp    rdx,0x7ff
   106f6:	0f 8f 49 fe ff ff    	jg     10545 <randread_new+0x135>
   106fc:	49 29 d6             	sub    r14,rdx
   106ff:	49 83 fe 04          	cmp    r14,0x4
   10703:	4d 0f 47 f0          	cmova  r14,r8
   10707:	e8 b4 29 ff ff       	call   30c0 <getppid@plt>
   1070c:	48 8b 14 24          	mov    rdx,QWORD PTR [rsp]
   10710:	89 44 24 10          	mov    DWORD PTR [rsp+0x10],eax
   10714:	44 89 f1             	mov    ecx,r14d
   10717:	4c 89 e6             	mov    rsi,r12
   1071a:	49 8d 44 15 00       	lea    rax,[r13+rdx*1+0x0]
   1071f:	49 01 d6             	add    r14,rdx
   10722:	49 81 fe ff 07 00 00 	cmp    r14,0x7ff
   10729:	48 89 c7             	mov    rdi,rax
   1072c:	f3 a4                	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1072e:	0f 87 11 fe ff ff    	ja     10545 <randread_new+0x135>
   10734:	e9 86 fe ff ff       	jmp    105bf <randread_new+0x1af>
   10739:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000010740 <randread_set_handler>:
   10740:	48 89 77 08          	mov    QWORD PTR [rdi+0x8],rsi
   10744:	c3                   	ret    
   10745:	90                   	nop
   10746:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   1074d:	00 00 00 

0000000000010750 <randread_set_handler_arg>:
   10750:	48 89 77 10          	mov    QWORD PTR [rdi+0x10],rsi
   10754:	c3                   	ret    
   10755:	90                   	nop
   10756:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   1075d:	00 00 00 

0000000000010760 <randread>:
   10760:	41 57                	push   r15
   10762:	41 56                	push   r14
   10764:	41 55                	push   r13
   10766:	41 54                	push   r12
   10768:	49 89 fc             	mov    r12,rdi
   1076b:	55                   	push   rbp
   1076c:	53                   	push   rbx
   1076d:	48 89 d5             	mov    rbp,rdx
   10770:	48 89 f3             	mov    rbx,rsi
   10773:	48 83 ec 18          	sub    rsp,0x18
   10777:	48 8b 0f             	mov    rcx,QWORD PTR [rdi]
   1077a:	48 85 c9             	test   rcx,rcx
   1077d:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
   10782:	74 64                	je     107e8 <randread+0x88>
   10784:	e8 87 23 ff ff       	call   2b10 <__errno_location@plt>
   10789:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
   1078e:	49 89 c5             	mov    r13,rax
   10791:	eb 23                	jmp    107b6 <randread+0x56>
   10793:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   10798:	49 8b 04 24          	mov    rax,QWORD PTR [r12]
   1079c:	49 8b 7c 24 10       	mov    rdi,QWORD PTR [r12+0x10]
   107a1:	8b 00                	mov    eax,DWORD PTR [rax]
   107a3:	83 e0 20             	and    eax,0x20
   107a6:	0f 45 c2             	cmovne eax,edx
   107a9:	41 89 45 00          	mov    DWORD PTR [r13+0x0],eax
   107ad:	41 ff 54 24 08       	call   QWORD PTR [r12+0x8]
   107b2:	49 8b 0c 24          	mov    rcx,QWORD PTR [r12]
   107b6:	48 89 ea             	mov    rdx,rbp
   107b9:	48 89 df             	mov    rdi,rbx
   107bc:	be 01 00 00 00       	mov    esi,0x1
   107c1:	e8 4a 24 ff ff       	call   2c10 <fread_unlocked@plt>
   107c6:	48 01 c3             	add    rbx,rax
   107c9:	48 29 c5             	sub    rbp,rax
   107cc:	41 8b 55 00          	mov    edx,DWORD PTR [r13+0x0]
   107d0:	75 c6                	jne    10798 <randread+0x38>
   107d2:	48 83 c4 18          	add    rsp,0x18
   107d6:	5b                   	pop    rbx
   107d7:	5d                   	pop    rbp
   107d8:	41 5c                	pop    r12
   107da:	41 5d                	pop    r13
   107dc:	41 5e                	pop    r14
   107de:	41 5f                	pop    r15
   107e0:	c3                   	ret    
   107e1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   107e8:	4c 8b 77 18          	mov    r14,QWORD PTR [rdi+0x18]
   107ec:	48 8d 87 38 08 00 00 	lea    rax,[rdi+0x838]
   107f3:	4c 8d 6f 20          	lea    r13,[rdi+0x20]
   107f7:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
   107fc:	4c 39 f2             	cmp    rdx,r14
   107ff:	0f 86 dd 00 00 00    	jbe    108e2 <randread+0x182>
   10805:	be 00 08 00 00       	mov    esi,0x800
   1080a:	48 89 df             	mov    rdi,rbx
   1080d:	4c 89 f2             	mov    rdx,r14
   10810:	4c 29 f6             	sub    rsi,r14
   10813:	48 03 74 24 08       	add    rsi,QWORD PTR [rsp+0x8]
   10818:	4c 01 f3             	add    rbx,r14
   1081b:	4c 29 f5             	sub    rbp,r14
   1081e:	e8 5d 26 ff ff       	call   2e80 <memcpy@plt>
   10823:	f6 c3 07             	test   bl,0x7
   10826:	75 68                	jne    10890 <randread+0x130>
   10828:	48 81 fd ff 07 00 00 	cmp    rbp,0x7ff
   1082f:	0f 86 9e 00 00 00    	jbe    108d3 <randread+0x173>
   10835:	4c 8d bd 00 f8 ff ff 	lea    r15,[rbp-0x800]
   1083c:	4d 89 fe             	mov    r14,r15
   1083f:	41 81 e6 ff 07 00 00 	and    r14d,0x7ff
   10846:	eb 14                	jmp    1085c <randread+0xfc>
   10848:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   1084f:	00 
   10850:	4d 39 f7             	cmp    r15,r14
   10853:	74 3b                	je     10890 <randread+0x130>
   10855:	49 81 ef 00 08 00 00 	sub    r15,0x800
   1085c:	48 89 de             	mov    rsi,rbx
   1085f:	4c 89 ef             	mov    rdi,r13
   10862:	48 81 c3 00 08 00 00 	add    rbx,0x800
   10869:	e8 e2 00 00 00       	call   10950 <isaac_refill>
   1086e:	4d 85 ff             	test   r15,r15
   10871:	4c 89 fd             	mov    rbp,r15
   10874:	75 da                	jne    10850 <randread+0xf0>
   10876:	49 c7 44 24 18 00 00 	mov    QWORD PTR [r12+0x18],0x0
   1087d:	00 00 
   1087f:	48 83 c4 18          	add    rsp,0x18
   10883:	5b                   	pop    rbx
   10884:	5d                   	pop    rbp
   10885:	41 5c                	pop    r12
   10887:	41 5d                	pop    r13
   10889:	41 5e                	pop    r14
   1088b:	41 5f                	pop    r15
   1088d:	c3                   	ret    
   1088e:	66 90                	xchg   ax,ax
   10890:	48 8b 74 24 08       	mov    rsi,QWORD PTR [rsp+0x8]
   10895:	4c 89 ef             	mov    rdi,r13
   10898:	41 be 00 08 00 00    	mov    r14d,0x800
   1089e:	e8 ad 00 00 00       	call   10950 <isaac_refill>
   108a3:	48 81 fd 00 08 00 00 	cmp    rbp,0x800
   108aa:	0f 87 55 ff ff ff    	ja     10805 <randread+0xa5>
   108b0:	41 be 00 08 00 00    	mov    r14d,0x800
   108b6:	48 8b 74 24 08       	mov    rsi,QWORD PTR [rsp+0x8]
   108bb:	48 89 ea             	mov    rdx,rbp
   108be:	48 89 df             	mov    rdi,rbx
   108c1:	49 29 ee             	sub    r14,rbp
   108c4:	e8 b7 25 ff ff       	call   2e80 <memcpy@plt>
   108c9:	4d 89 74 24 18       	mov    QWORD PTR [r12+0x18],r14
   108ce:	e9 ff fe ff ff       	jmp    107d2 <randread+0x72>
   108d3:	48 8b 74 24 08       	mov    rsi,QWORD PTR [rsp+0x8]
   108d8:	4c 89 ef             	mov    rdi,r13
   108db:	e8 70 00 00 00       	call   10950 <isaac_refill>
   108e0:	eb ce                	jmp    108b0 <randread+0x150>
   108e2:	49 89 c7             	mov    r15,rax
   108e5:	4d 29 f7             	sub    r15,r14
   108e8:	49 8d 87 00 08 00 00 	lea    rax,[r15+0x800]
   108ef:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
   108f4:	eb c0                	jmp    108b6 <randread+0x156>
   108f6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   108fd:	00 00 00 

0000000000010900 <randread_free>:
   10900:	55                   	push   rbp
   10901:	53                   	push   rbx
   10902:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
   10909:	48 89 fb             	mov    rbx,rdi
   1090c:	be 38 10 00 00       	mov    esi,0x1038
   10911:	48 83 ec 08          	sub    rsp,0x8
   10915:	48 8b 2f             	mov    rbp,QWORD PTR [rdi]
   10918:	e8 e3 26 ff ff       	call   3000 <__explicit_bzero_chk@plt>
   1091d:	48 89 df             	mov    rdi,rbx
   10920:	e8 9b 28 ff ff       	call   31c0 <free@plt>
   10925:	48 85 ed             	test   rbp,rbp
   10928:	74 16                	je     10940 <randread_free+0x40>
   1092a:	48 83 c4 08          	add    rsp,0x8
   1092e:	48 89 ef             	mov    rdi,rbp
   10931:	5b                   	pop    rbx
   10932:	5d                   	pop    rbp
   10933:	e9 08 22 00 00       	jmp    12b40 <rpl_fclose>
   10938:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   1093f:	00 
   10940:	48 83 c4 08          	add    rsp,0x8
   10944:	31 c0                	xor    eax,eax
   10946:	5b                   	pop    rbx
   10947:	5d                   	pop    rbp
   10948:	c3                   	ret    
   10949:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000010950 <isaac_refill>:
   10950:	48 8b 87 10 08 00 00 	mov    rax,QWORD PTR [rdi+0x810]
   10957:	48 8b 97 00 08 00 00 	mov    rdx,QWORD PTR [rdi+0x800]
   1095e:	4c 8d 8f 00 04 00 00 	lea    r9,[rdi+0x400]
   10965:	48 8d 48 01          	lea    rcx,[rax+0x1]
   10969:	48 89 f8             	mov    rax,rdi
   1096c:	48 89 8f 10 08 00 00 	mov    QWORD PTR [rdi+0x810],rcx
   10973:	48 03 8f 08 08 00 00 	add    rcx,QWORD PTR [rdi+0x808]
   1097a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
   10980:	49 89 d0             	mov    r8,rdx
   10983:	49 c1 e0 15          	shl    r8,0x15
   10987:	4c 31 c2             	xor    rdx,r8
   1098a:	4c 8b 00             	mov    r8,QWORD PTR [rax]
   1098d:	48 f7 d2             	not    rdx
   10990:	48 03 90 00 04 00 00 	add    rdx,QWORD PTR [rax+0x400]
   10997:	4d 89 c2             	mov    r10,r8
   1099a:	41 81 e2 f8 07 00 00 	and    r10d,0x7f8
   109a1:	4e 8b 1c 17          	mov    r11,QWORD PTR [rdi+r10*1]
   109a5:	49 89 d2             	mov    r10,rdx
   109a8:	49 c1 ea 05          	shr    r10,0x5
   109ac:	49 01 d3             	add    r11,rdx
   109af:	4c 31 d2             	xor    rdx,r10
   109b2:	4c 01 d9             	add    rcx,r11
   109b5:	48 89 08             	mov    QWORD PTR [rax],rcx
   109b8:	48 c1 e9 08          	shr    rcx,0x8
   109bc:	81 e1 f8 07 00 00    	and    ecx,0x7f8
   109c2:	4c 8b 1c 0f          	mov    r11,QWORD PTR [rdi+rcx*1]
   109c6:	4d 01 c3             	add    r11,r8
   109c9:	4c 89 1e             	mov    QWORD PTR [rsi],r11
   109cc:	48 03 90 08 04 00 00 	add    rdx,QWORD PTR [rax+0x408]
   109d3:	48 8b 48 08          	mov    rcx,QWORD PTR [rax+0x8]
   109d7:	49 89 d2             	mov    r10,rdx
   109da:	48 89 ca             	mov    rdx,rcx
   109dd:	81 e2 f8 07 00 00    	and    edx,0x7f8
   109e3:	4c 8b 04 17          	mov    r8,QWORD PTR [rdi+rdx*1]
   109e7:	4c 89 d2             	mov    rdx,r10
   109ea:	48 c1 e2 0c          	shl    rdx,0xc
   109ee:	4c 31 d2             	xor    rdx,r10
   109f1:	4d 01 d0             	add    r8,r10
   109f4:	4d 01 d8             	add    r8,r11
   109f7:	4c 89 40 08          	mov    QWORD PTR [rax+0x8],r8
   109fb:	49 c1 e8 08          	shr    r8,0x8
   109ff:	41 81 e0 f8 07 00 00 	and    r8d,0x7f8
   10a06:	4a 03 0c 07          	add    rcx,QWORD PTR [rdi+r8*1]
   10a0a:	48 89 4e 08          	mov    QWORD PTR [rsi+0x8],rcx
   10a0e:	4c 8b 40 10          	mov    r8,QWORD PTR [rax+0x10]
   10a12:	49 89 cb             	mov    r11,rcx
   10a15:	48 03 90 10 04 00 00 	add    rdx,QWORD PTR [rax+0x410]
   10a1c:	4c 89 c1             	mov    rcx,r8
   10a1f:	81 e1 f8 07 00 00    	and    ecx,0x7f8
   10a25:	4c 8b 14 0f          	mov    r10,QWORD PTR [rdi+rcx*1]
   10a29:	49 01 d2             	add    r10,rdx
   10a2c:	4c 89 d1             	mov    rcx,r10
   10a2f:	4c 01 d9             	add    rcx,r11
   10a32:	48 89 48 10          	mov    QWORD PTR [rax+0x10],rcx
   10a36:	48 c1 e9 08          	shr    rcx,0x8
   10a3a:	81 e1 f8 07 00 00    	and    ecx,0x7f8
   10a40:	4c 8b 14 0f          	mov    r10,QWORD PTR [rdi+rcx*1]
   10a44:	48 89 d1             	mov    rcx,rdx
   10a47:	48 c1 e9 21          	shr    rcx,0x21
   10a4b:	48 31 ca             	xor    rdx,rcx
   10a4e:	4d 01 c2             	add    r10,r8
   10a51:	4c 89 56 10          	mov    QWORD PTR [rsi+0x10],r10
   10a55:	48 8b 48 18          	mov    rcx,QWORD PTR [rax+0x18]
   10a59:	48 03 90 18 04 00 00 	add    rdx,QWORD PTR [rax+0x418]
   10a60:	49 89 c8             	mov    r8,rcx
   10a63:	41 81 e0 f8 07 00 00 	and    r8d,0x7f8
   10a6a:	4e 8b 1c 07          	mov    r11,QWORD PTR [rdi+r8*1]
   10a6e:	49 01 d3             	add    r11,rdx
   10a71:	4d 89 d8             	mov    r8,r11
   10a74:	4d 01 d0             	add    r8,r10
   10a77:	48 83 c0 20          	add    rax,0x20
   10a7b:	48 83 c6 20          	add    rsi,0x20
   10a7f:	4c 89 40 f8          	mov    QWORD PTR [rax-0x8],r8
   10a83:	49 c1 e8 08          	shr    r8,0x8
   10a87:	41 81 e0 f8 07 00 00 	and    r8d,0x7f8
   10a8e:	4a 03 0c 07          	add    rcx,QWORD PTR [rdi+r8*1]
   10a92:	48 89 4e f8          	mov    QWORD PTR [rsi-0x8],rcx
   10a96:	4c 39 c8             	cmp    rax,r9
   10a99:	0f 82 e1 fe ff ff    	jb     10980 <isaac_refill+0x30>
   10a9f:	4c 8d 8f 00 08 00 00 	lea    r9,[rdi+0x800]
   10aa6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   10aad:	00 00 00 
   10ab0:	49 89 d0             	mov    r8,rdx
   10ab3:	49 c1 e0 15          	shl    r8,0x15
   10ab7:	4c 31 c2             	xor    rdx,r8
   10aba:	4c 8b 00             	mov    r8,QWORD PTR [rax]
   10abd:	48 f7 d2             	not    rdx
   10ac0:	48 03 90 00 fc ff ff 	add    rdx,QWORD PTR [rax-0x400]
   10ac7:	4d 89 c2             	mov    r10,r8
   10aca:	41 81 e2 f8 07 00 00 	and    r10d,0x7f8
   10ad1:	4e 8b 1c 17          	mov    r11,QWORD PTR [rdi+r10*1]
   10ad5:	49 89 d2             	mov    r10,rdx
   10ad8:	49 c1 ea 05          	shr    r10,0x5
   10adc:	49 01 d3             	add    r11,rdx
   10adf:	4c 31 d2             	xor    rdx,r10
   10ae2:	4c 01 d9             	add    rcx,r11
   10ae5:	48 89 08             	mov    QWORD PTR [rax],rcx
   10ae8:	48 c1 e9 08          	shr    rcx,0x8
   10aec:	81 e1 f8 07 00 00    	and    ecx,0x7f8
   10af2:	4c 8b 1c 0f          	mov    r11,QWORD PTR [rdi+rcx*1]
   10af6:	4d 01 c3             	add    r11,r8
   10af9:	4c 89 1e             	mov    QWORD PTR [rsi],r11
   10afc:	48 03 90 08 fc ff ff 	add    rdx,QWORD PTR [rax-0x3f8]
   10b03:	48 8b 48 08          	mov    rcx,QWORD PTR [rax+0x8]
   10b07:	49 89 d2             	mov    r10,rdx
   10b0a:	48 89 ca             	mov    rdx,rcx
   10b0d:	81 e2 f8 07 00 00    	and    edx,0x7f8
   10b13:	4c 8b 04 17          	mov    r8,QWORD PTR [rdi+rdx*1]
   10b17:	4c 89 d2             	mov    rdx,r10
   10b1a:	48 c1 e2 0c          	shl    rdx,0xc
   10b1e:	4c 31 d2             	xor    rdx,r10
   10b21:	4d 01 d0             	add    r8,r10
   10b24:	4d 01 d8             	add    r8,r11
   10b27:	4c 89 40 08          	mov    QWORD PTR [rax+0x8],r8
   10b2b:	49 c1 e8 08          	shr    r8,0x8
   10b2f:	41 81 e0 f8 07 00 00 	and    r8d,0x7f8
   10b36:	4a 03 0c 07          	add    rcx,QWORD PTR [rdi+r8*1]
   10b3a:	48 89 4e 08          	mov    QWORD PTR [rsi+0x8],rcx
   10b3e:	4c 8b 40 10          	mov    r8,QWORD PTR [rax+0x10]
   10b42:	49 89 cb             	mov    r11,rcx
   10b45:	48 03 90 10 fc ff ff 	add    rdx,QWORD PTR [rax-0x3f0]
   10b4c:	4c 89 c1             	mov    rcx,r8
   10b4f:	81 e1 f8 07 00 00    	and    ecx,0x7f8
   10b55:	4c 8b 14 0f          	mov    r10,QWORD PTR [rdi+rcx*1]
   10b59:	49 01 d2             	add    r10,rdx
   10b5c:	4c 89 d1             	mov    rcx,r10
   10b5f:	4c 01 d9             	add    rcx,r11
   10b62:	48 89 48 10          	mov    QWORD PTR [rax+0x10],rcx
   10b66:	48 c1 e9 08          	shr    rcx,0x8
   10b6a:	81 e1 f8 07 00 00    	and    ecx,0x7f8
   10b70:	4c 8b 14 0f          	mov    r10,QWORD PTR [rdi+rcx*1]
   10b74:	48 89 d1             	mov    rcx,rdx
   10b77:	48 c1 e9 21          	shr    rcx,0x21
   10b7b:	48 31 ca             	xor    rdx,rcx
   10b7e:	4d 01 c2             	add    r10,r8
   10b81:	4c 89 56 10          	mov    QWORD PTR [rsi+0x10],r10
   10b85:	48 8b 48 18          	mov    rcx,QWORD PTR [rax+0x18]
   10b89:	48 03 90 18 fc ff ff 	add    rdx,QWORD PTR [rax-0x3e8]
   10b90:	49 89 c8             	mov    r8,rcx
   10b93:	41 81 e0 f8 07 00 00 	and    r8d,0x7f8
   10b9a:	4e 8b 1c 07          	mov    r11,QWORD PTR [rdi+r8*1]
   10b9e:	49 01 d3             	add    r11,rdx
   10ba1:	4d 89 d8             	mov    r8,r11
   10ba4:	4d 01 d0             	add    r8,r10
   10ba7:	48 83 c0 20          	add    rax,0x20
   10bab:	48 83 c6 20          	add    rsi,0x20
   10baf:	4c 89 40 f8          	mov    QWORD PTR [rax-0x8],r8
   10bb3:	49 c1 e8 08          	shr    r8,0x8
   10bb7:	41 81 e0 f8 07 00 00 	and    r8d,0x7f8
   10bbe:	4a 03 0c 07          	add    rcx,QWORD PTR [rdi+r8*1]
   10bc2:	48 89 4e f8          	mov    QWORD PTR [rsi-0x8],rcx
   10bc6:	4c 39 c8             	cmp    rax,r9
   10bc9:	0f 82 e1 fe ff ff    	jb     10ab0 <isaac_refill+0x160>
   10bcf:	48 89 97 00 08 00 00 	mov    QWORD PTR [rdi+0x800],rdx
   10bd6:	48 89 8f 08 08 00 00 	mov    QWORD PTR [rdi+0x808],rcx
   10bdd:	c3                   	ret    
   10bde:	66 90                	xchg   ax,ax

0000000000010be0 <isaac_seed>:
   10be0:	41 55                	push   r13
   10be2:	41 54                	push   r12
   10be4:	4c 8d a7 00 08 00 00 	lea    r12,[rdi+0x800]
   10beb:	55                   	push   rbp
   10bec:	48 89 fa             	mov    rdx,rdi
   10bef:	53                   	push   rbx
   10bf0:	48 89 f8             	mov    rax,rdi
   10bf3:	48 b9 ab c0 44 6c 4f 	movabs rcx,0x98f5704f6c44c0ab
   10bfa:	70 f5 98 
   10bfd:	49 ba ed 89 fc cb f2 	movabs r10,0xae985bf2cbfc89ed
   10c04:	5b 98 ae 
   10c07:	48 bd 15 93 a0 a5 0f 	movabs rbp,0x48fe4a0fa5a09315
   10c0e:	4a fe 48 
   10c11:	48 be ce e0 55 83 db 	movabs rsi,0x82f053db8355e0ce
   10c18:	53 f0 82 
   10c1b:	49 b8 24 55 59 4a 82 	movabs r8,0xb29b2e824a595524
   10c22:	2e 9b b2 
   10c25:	48 bb a0 12 47 3d 05 	movabs rbx,0x8c0ea5053d4712a0
   10c2c:	a5 0e 8c 
   10c2f:	49 bb 62 c8 3a c7 22 	movabs r11,0xb9f8b322c73ac862
   10c36:	b3 f8 b9 
   10c39:	49 b9 7c 4b 88 a2 77 	movabs r9,0x647c4677a2884b7c
   10c40:	46 7c 64 
   10c43:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   10c48:	48 03 70 20          	add    rsi,QWORD PTR [rax+0x20]
   10c4c:	48 03 48 38          	add    rcx,QWORD PTR [rax+0x38]
   10c50:	4c 8b 28             	mov    r13,QWORD PTR [rax]
   10c53:	48 03 68 28          	add    rbp,QWORD PTR [rax+0x28]
   10c57:	4c 03 50 30          	add    r10,QWORD PTR [rax+0x30]
   10c5b:	49 29 f5             	sub    r13,rsi
   10c5e:	4d 01 e9             	add    r9,r13
   10c61:	49 89 cd             	mov    r13,rcx
   10c64:	49 c1 ed 09          	shr    r13,0x9
   10c68:	4c 01 c9             	add    rcx,r9
   10c6b:	4c 31 ed             	xor    rbp,r13
   10c6e:	4c 8b 68 08          	mov    r13,QWORD PTR [rax+0x8]
   10c72:	49 29 ed             	sub    r13,rbp
   10c75:	4d 01 eb             	add    r11,r13
   10c78:	4d 89 cd             	mov    r13,r9
   10c7b:	49 c1 e5 09          	shl    r13,0x9
   10c7f:	4d 01 d9             	add    r9,r11
   10c82:	4d 31 ea             	xor    r10,r13
   10c85:	4c 8b 68 10          	mov    r13,QWORD PTR [rax+0x10]
   10c89:	4d 29 d5             	sub    r13,r10
   10c8c:	4c 01 eb             	add    rbx,r13
   10c8f:	4d 89 dd             	mov    r13,r11
   10c92:	49 c1 ed 17          	shr    r13,0x17
   10c96:	49 01 db             	add    r11,rbx
   10c99:	4c 31 e9             	xor    rcx,r13
   10c9c:	4c 8b 68 18          	mov    r13,QWORD PTR [rax+0x18]
   10ca0:	49 29 cd             	sub    r13,rcx
   10ca3:	4d 01 e8             	add    r8,r13
   10ca6:	49 89 dd             	mov    r13,rbx
   10ca9:	49 c1 e5 0f          	shl    r13,0xf
   10cad:	4c 01 c3             	add    rbx,r8
   10cb0:	4d 31 e9             	xor    r9,r13
   10cb3:	4d 89 c5             	mov    r13,r8
   10cb6:	4c 29 ce             	sub    rsi,r9
   10cb9:	49 c1 ed 0e          	shr    r13,0xe
   10cbd:	4c 89 08             	mov    QWORD PTR [rax],r9
   10cc0:	4d 31 eb             	xor    r11,r13
   10cc3:	49 89 f5             	mov    r13,rsi
   10cc6:	49 01 f0             	add    r8,rsi
   10cc9:	4c 29 dd             	sub    rbp,r11
   10ccc:	49 c1 e5 14          	shl    r13,0x14
   10cd0:	4c 89 58 08          	mov    QWORD PTR [rax+0x8],r11
   10cd4:	4c 31 eb             	xor    rbx,r13
   10cd7:	4c 8d 2c 2e          	lea    r13,[rsi+rbp*1]
   10cdb:	48 89 ee             	mov    rsi,rbp
   10cde:	49 29 da             	sub    r10,rbx
   10ce1:	48 c1 ee 11          	shr    rsi,0x11
   10ce5:	48 89 58 10          	mov    QWORD PTR [rax+0x10],rbx
   10ce9:	49 31 f0             	xor    r8,rsi
   10cec:	4c 89 d6             	mov    rsi,r10
   10cef:	4c 01 d5             	add    rbp,r10
   10cf2:	4c 29 c1             	sub    rcx,r8
   10cf5:	48 c1 e6 0e          	shl    rsi,0xe
   10cf9:	4c 89 40 18          	mov    QWORD PTR [rax+0x18],r8
   10cfd:	4c 31 ee             	xor    rsi,r13
   10d00:	49 01 ca             	add    r10,rcx
   10d03:	48 89 68 28          	mov    QWORD PTR [rax+0x28],rbp
   10d07:	48 89 70 20          	mov    QWORD PTR [rax+0x20],rsi
   10d0b:	4c 89 50 30          	mov    QWORD PTR [rax+0x30],r10
   10d0f:	48 83 c0 40          	add    rax,0x40
   10d13:	48 89 48 f8          	mov    QWORD PTR [rax-0x8],rcx
   10d17:	49 39 c4             	cmp    r12,rax
   10d1a:	0f 85 28 ff ff ff    	jne    10c48 <isaac_seed+0x68>
   10d20:	48 03 72 20          	add    rsi,QWORD PTR [rdx+0x20]
   10d24:	48 03 4a 38          	add    rcx,QWORD PTR [rdx+0x38]
   10d28:	4c 8b 22             	mov    r12,QWORD PTR [rdx]
   10d2b:	48 03 6a 28          	add    rbp,QWORD PTR [rdx+0x28]
   10d2f:	4c 03 52 30          	add    r10,QWORD PTR [rdx+0x30]
   10d33:	49 29 f4             	sub    r12,rsi
   10d36:	4d 01 e1             	add    r9,r12
   10d39:	49 89 cc             	mov    r12,rcx
   10d3c:	49 c1 ec 09          	shr    r12,0x9
   10d40:	4c 01 c9             	add    rcx,r9
   10d43:	4c 31 e5             	xor    rbp,r12
   10d46:	4c 8b 62 08          	mov    r12,QWORD PTR [rdx+0x8]
   10d4a:	49 29 ec             	sub    r12,rbp
   10d4d:	4d 01 e3             	add    r11,r12
   10d50:	4d 89 cc             	mov    r12,r9
   10d53:	49 c1 e4 09          	shl    r12,0x9
   10d57:	4d 01 d9             	add    r9,r11
   10d5a:	4d 31 e2             	xor    r10,r12
   10d5d:	4c 8b 62 10          	mov    r12,QWORD PTR [rdx+0x10]
   10d61:	4d 29 d4             	sub    r12,r10
   10d64:	4c 01 e3             	add    rbx,r12
   10d67:	4d 89 dc             	mov    r12,r11
   10d6a:	49 c1 ec 17          	shr    r12,0x17
   10d6e:	49 01 db             	add    r11,rbx
   10d71:	4c 31 e1             	xor    rcx,r12
   10d74:	4c 8b 62 18          	mov    r12,QWORD PTR [rdx+0x18]
   10d78:	49 29 cc             	sub    r12,rcx
   10d7b:	4d 01 e0             	add    r8,r12
   10d7e:	49 89 dc             	mov    r12,rbx
   10d81:	49 c1 e4 0f          	shl    r12,0xf
   10d85:	4c 01 c3             	add    rbx,r8
   10d88:	4d 31 e1             	xor    r9,r12
   10d8b:	4d 89 c4             	mov    r12,r8
   10d8e:	4c 29 ce             	sub    rsi,r9
   10d91:	49 c1 ec 0e          	shr    r12,0xe
   10d95:	4c 89 0a             	mov    QWORD PTR [rdx],r9
   10d98:	4d 31 e3             	xor    r11,r12
   10d9b:	49 89 f4             	mov    r12,rsi
   10d9e:	49 01 f0             	add    r8,rsi
   10da1:	4c 29 dd             	sub    rbp,r11
   10da4:	49 c1 e4 14          	shl    r12,0x14
   10da8:	4c 89 5a 08          	mov    QWORD PTR [rdx+0x8],r11
   10dac:	4c 31 e3             	xor    rbx,r12
   10daf:	4c 8d 24 2e          	lea    r12,[rsi+rbp*1]
   10db3:	48 89 ee             	mov    rsi,rbp
   10db6:	49 29 da             	sub    r10,rbx
   10db9:	48 c1 ee 11          	shr    rsi,0x11
   10dbd:	48 89 5a 10          	mov    QWORD PTR [rdx+0x10],rbx
   10dc1:	49 31 f0             	xor    r8,rsi
   10dc4:	4c 89 d6             	mov    rsi,r10
   10dc7:	4c 01 d5             	add    rbp,r10
   10dca:	4c 29 c1             	sub    rcx,r8
   10dcd:	48 c1 e6 0e          	shl    rsi,0xe
   10dd1:	4c 89 42 18          	mov    QWORD PTR [rdx+0x18],r8
   10dd5:	4c 31 e6             	xor    rsi,r12
   10dd8:	49 01 ca             	add    r10,rcx
   10ddb:	48 89 6a 28          	mov    QWORD PTR [rdx+0x28],rbp
   10ddf:	48 89 72 20          	mov    QWORD PTR [rdx+0x20],rsi
   10de3:	4c 89 52 30          	mov    QWORD PTR [rdx+0x30],r10
   10de7:	48 83 c2 40          	add    rdx,0x40
   10deb:	48 89 4a f8          	mov    QWORD PTR [rdx-0x8],rcx
   10def:	48 39 d0             	cmp    rax,rdx
   10df2:	0f 85 28 ff ff ff    	jne    10d20 <isaac_seed+0x140>
   10df8:	5b                   	pop    rbx
   10df9:	48 c7 87 10 08 00 00 	mov    QWORD PTR [rdi+0x810],0x0
   10e00:	00 00 00 00 
   10e04:	48 c7 87 08 08 00 00 	mov    QWORD PTR [rdi+0x808],0x0
   10e0b:	00 00 00 00 
   10e0f:	5d                   	pop    rbp
   10e10:	48 c7 87 00 08 00 00 	mov    QWORD PTR [rdi+0x800],0x0
   10e17:	00 00 00 00 
   10e1b:	41 5c                	pop    r12
   10e1d:	41 5d                	pop    r13
   10e1f:	c3                   	ret    

0000000000010e20 <save_token>:
   10e20:	41 54                	push   r12
   10e22:	55                   	push   rbp
   10e23:	53                   	push   rbx
   10e24:	48 8b 57 30          	mov    rdx,QWORD PTR [rdi+0x30]
   10e28:	48 89 fb             	mov    rbx,rdi
   10e2b:	4c 8b 67 28          	mov    r12,QWORD PTR [rdi+0x28]
   10e2f:	48 89 d5             	mov    rbp,rdx
   10e32:	4c 29 e5             	sub    rbp,r12
   10e35:	48 83 ed 01          	sub    rbp,0x1
   10e39:	4c 39 e2             	cmp    rdx,r12
   10e3c:	0f 84 be 00 00 00    	je     10f00 <save_token+0xe0>
   10e42:	48 8b 4b 48          	mov    rcx,QWORD PTR [rbx+0x48]
   10e46:	48 8d 04 0a          	lea    rax,[rdx+rcx*1]
   10e4a:	48 f7 d1             	not    rcx
   10e4d:	48 8b 53 38          	mov    rdx,QWORD PTR [rbx+0x38]
   10e51:	48 21 c8             	and    rax,rcx
   10e54:	48 8b 4b 20          	mov    rcx,QWORD PTR [rbx+0x20]
   10e58:	48 89 c6             	mov    rsi,rax
   10e5b:	48 89 d7             	mov    rdi,rdx
   10e5e:	48 89 43 30          	mov    QWORD PTR [rbx+0x30],rax
   10e62:	48 29 ce             	sub    rsi,rcx
   10e65:	48 29 cf             	sub    rdi,rcx
   10e68:	48 39 fe             	cmp    rsi,rdi
   10e6b:	76 07                	jbe    10e74 <save_token+0x54>
   10e6d:	48 89 53 30          	mov    QWORD PTR [rbx+0x30],rdx
   10e71:	48 89 d0             	mov    rax,rdx
   10e74:	48 89 43 28          	mov    QWORD PTR [rbx+0x28],rax
   10e78:	48 8b 93 88 00 00 00 	mov    rdx,QWORD PTR [rbx+0x88]
   10e7f:	48 8b 83 90 00 00 00 	mov    rax,QWORD PTR [rbx+0x90]
   10e86:	48 29 d0             	sub    rax,rdx
   10e89:	48 83 f8 07          	cmp    rax,0x7
   10e8d:	76 51                	jbe    10ee0 <save_token+0xc0>
   10e8f:	4c 89 22             	mov    QWORD PTR [rdx],r12
   10e92:	48 8b 93 e0 00 00 00 	mov    rdx,QWORD PTR [rbx+0xe0]
   10e99:	48 8b 83 e8 00 00 00 	mov    rax,QWORD PTR [rbx+0xe8]
   10ea0:	48 83 83 88 00 00 00 	add    QWORD PTR [rbx+0x88],0x8
   10ea7:	08 
   10ea8:	48 29 d0             	sub    rax,rdx
   10eab:	48 83 f8 07          	cmp    rax,0x7
   10eaf:	77 18                	ja     10ec9 <save_token+0xa9>
   10eb1:	48 8d bb c8 00 00 00 	lea    rdi,[rbx+0xc8]
   10eb8:	be 08 00 00 00       	mov    esi,0x8
   10ebd:	e8 ce 22 00 00       	call   13190 <_obstack_newchunk>
   10ec2:	48 8b 93 e0 00 00 00 	mov    rdx,QWORD PTR [rbx+0xe0]
   10ec9:	48 89 2a             	mov    QWORD PTR [rdx],rbp
   10ecc:	48 83 83 e0 00 00 00 	add    QWORD PTR [rbx+0xe0],0x8
   10ed3:	08 
   10ed4:	48 83 03 01          	add    QWORD PTR [rbx],0x1
   10ed8:	5b                   	pop    rbx
   10ed9:	5d                   	pop    rbp
   10eda:	41 5c                	pop    r12
   10edc:	c3                   	ret    
   10edd:	0f 1f 00             	nop    DWORD PTR [rax]
   10ee0:	48 8d 7b 70          	lea    rdi,[rbx+0x70]
   10ee4:	be 08 00 00 00       	mov    esi,0x8
   10ee9:	e8 a2 22 00 00       	call   13190 <_obstack_newchunk>
   10eee:	48 8b 93 88 00 00 00 	mov    rdx,QWORD PTR [rbx+0x88]
   10ef5:	eb 98                	jmp    10e8f <save_token+0x6f>
   10ef7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   10efe:	00 00 
   10f00:	80 4f 68 02          	or     BYTE PTR [rdi+0x68],0x2
   10f04:	e9 39 ff ff ff       	jmp    10e42 <save_token+0x22>
   10f09:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000010f10 <readtokens0_init>:
   10f10:	41 54                	push   r12
   10f12:	4c 8b 25 9f 90 20 00 	mov    r12,QWORD PTR [rip+0x20909f]        # 219fb8 <free@GLIBC_2.2.5>
   10f19:	31 d2                	xor    edx,edx
   10f1b:	55                   	push   rbp
   10f1c:	48 8b 2d b5 90 20 00 	mov    rbp,QWORD PTR [rip+0x2090b5]        # 219fd8 <malloc@GLIBC_2.2.5>
   10f23:	31 f6                	xor    esi,esi
   10f25:	53                   	push   rbx
   10f26:	48 89 fb             	mov    rbx,rdi
   10f29:	48 c7 07 00 00 00 00 	mov    QWORD PTR [rdi],0x0
   10f30:	48 c7 47 08 00 00 00 	mov    QWORD PTR [rdi+0x8],0x0
   10f37:	00 
   10f38:	48 c7 47 10 00 00 00 	mov    QWORD PTR [rdi+0x10],0x0
   10f3f:	00 
   10f40:	48 8d 7f 18          	lea    rdi,[rdi+0x18]
   10f44:	4d 89 e0             	mov    r8,r12
   10f47:	48 89 e9             	mov    rcx,rbp
   10f4a:	e8 01 22 00 00       	call   13150 <_obstack_begin>
   10f4f:	48 8d 7b 70          	lea    rdi,[rbx+0x70]
   10f53:	4d 89 e0             	mov    r8,r12
   10f56:	48 89 e9             	mov    rcx,rbp
   10f59:	31 d2                	xor    edx,edx
   10f5b:	31 f6                	xor    esi,esi
   10f5d:	e8 ee 21 00 00       	call   13150 <_obstack_begin>
   10f62:	48 8d bb c8 00 00 00 	lea    rdi,[rbx+0xc8]
   10f69:	4d 89 e0             	mov    r8,r12
   10f6c:	48 89 e9             	mov    rcx,rbp
   10f6f:	5b                   	pop    rbx
   10f70:	5d                   	pop    rbp
   10f71:	41 5c                	pop    r12
   10f73:	31 d2                	xor    edx,edx
   10f75:	31 f6                	xor    esi,esi
   10f77:	e9 d4 21 00 00       	jmp    13150 <_obstack_begin>
   10f7c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000010f80 <readtokens0_free>:
   10f80:	53                   	push   rbx
   10f81:	48 89 fb             	mov    rbx,rdi
   10f84:	48 8d 7f 18          	lea    rdi,[rdi+0x18]
   10f88:	31 f6                	xor    esi,esi
   10f8a:	e8 31 23 00 00       	call   132c0 <_obstack_free>
   10f8f:	48 8d 7b 70          	lea    rdi,[rbx+0x70]
   10f93:	31 f6                	xor    esi,esi
   10f95:	e8 26 23 00 00       	call   132c0 <_obstack_free>
   10f9a:	48 8d bb c8 00 00 00 	lea    rdi,[rbx+0xc8]
   10fa1:	31 f6                	xor    esi,esi
   10fa3:	5b                   	pop    rbx
   10fa4:	e9 17 23 00 00       	jmp    132c0 <_obstack_free>
   10fa9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000010fb0 <readtokens0>:
   10fb0:	41 54                	push   r12
   10fb2:	55                   	push   rbp
   10fb3:	4c 8d 66 18          	lea    r12,[rsi+0x18]
   10fb7:	53                   	push   rbx
   10fb8:	48 89 fd             	mov    rbp,rdi
   10fbb:	48 89 f3             	mov    rbx,rsi
   10fbe:	48 83 ec 10          	sub    rsp,0x10
   10fc2:	eb 12                	jmp    10fd6 <readtokens0+0x26>
   10fc4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   10fc8:	48 8d 4a 01          	lea    rcx,[rdx+0x1]
   10fcc:	85 c0                	test   eax,eax
   10fce:	48 89 4b 30          	mov    QWORD PTR [rbx+0x30],rcx
   10fd2:	88 02                	mov    BYTE PTR [rdx],al
   10fd4:	74 3e                	je     11014 <readtokens0+0x64>
   10fd6:	48 89 ef             	mov    rdi,rbp
   10fd9:	e8 c2 1d ff ff       	call   2da0 <fgetc@plt>
   10fde:	83 f8 ff             	cmp    eax,0xffffffff
   10fe1:	74 4d                	je     11030 <readtokens0+0x80>
   10fe3:	48 8b 53 30          	mov    rdx,QWORD PTR [rbx+0x30]
   10fe7:	48 39 53 38          	cmp    QWORD PTR [rbx+0x38],rdx
   10feb:	75 db                	jne    10fc8 <readtokens0+0x18>
   10fed:	be 01 00 00 00       	mov    esi,0x1
   10ff2:	4c 89 e7             	mov    rdi,r12
   10ff5:	89 44 24 0c          	mov    DWORD PTR [rsp+0xc],eax
   10ff9:	e8 92 21 00 00       	call   13190 <_obstack_newchunk>
   10ffe:	48 8b 53 30          	mov    rdx,QWORD PTR [rbx+0x30]
   11002:	8b 44 24 0c          	mov    eax,DWORD PTR [rsp+0xc]
   11006:	48 8d 4a 01          	lea    rcx,[rdx+0x1]
   1100a:	85 c0                	test   eax,eax
   1100c:	48 89 4b 30          	mov    QWORD PTR [rbx+0x30],rcx
   11010:	88 02                	mov    BYTE PTR [rdx],al
   11012:	75 c2                	jne    10fd6 <readtokens0+0x26>
   11014:	48 89 df             	mov    rdi,rbx
   11017:	e8 04 fe ff ff       	call   10e20 <save_token>
   1101c:	48 89 ef             	mov    rdi,rbp
   1101f:	e8 7c 1d ff ff       	call   2da0 <fgetc@plt>
   11024:	83 f8 ff             	cmp    eax,0xffffffff
   11027:	75 ba                	jne    10fe3 <readtokens0+0x33>
   11029:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   11030:	48 8b 43 30          	mov    rax,QWORD PTR [rbx+0x30]
   11034:	48 39 43 28          	cmp    QWORD PTR [rbx+0x28],rax
   11038:	74 1d                	je     11057 <readtokens0+0xa7>
   1103a:	48 39 43 38          	cmp    QWORD PTR [rbx+0x38],rax
   1103e:	0f 84 5c 01 00 00    	je     111a0 <readtokens0+0x1f0>
   11044:	48 8d 50 01          	lea    rdx,[rax+0x1]
   11048:	48 89 df             	mov    rdi,rbx
   1104b:	48 89 53 30          	mov    QWORD PTR [rbx+0x30],rdx
   1104f:	c6 00 00             	mov    BYTE PTR [rax],0x0
   11052:	e8 c9 fd ff ff       	call   10e20 <save_token>
   11057:	48 8b 93 88 00 00 00 	mov    rdx,QWORD PTR [rbx+0x88]
   1105e:	48 8b 83 90 00 00 00 	mov    rax,QWORD PTR [rbx+0x90]
   11065:	48 29 d0             	sub    rax,rdx
   11068:	48 83 f8 07          	cmp    rax,0x7
   1106c:	0f 86 ee 00 00 00    	jbe    11160 <readtokens0+0x1b0>
   11072:	48 c7 02 00 00 00 00 	mov    QWORD PTR [rdx],0x0
   11079:	48 8b 83 88 00 00 00 	mov    rax,QWORD PTR [rbx+0x88]
   11080:	48 8b b3 80 00 00 00 	mov    rsi,QWORD PTR [rbx+0x80]
   11087:	48 8d 50 08          	lea    rdx,[rax+0x8]
   1108b:	48 39 f2             	cmp    rdx,rsi
   1108e:	48 89 93 88 00 00 00 	mov    QWORD PTR [rbx+0x88],rdx
   11095:	0f 84 f5 00 00 00    	je     11190 <readtokens0+0x1e0>
   1109b:	48 8b 8b a0 00 00 00 	mov    rcx,QWORD PTR [rbx+0xa0]
   110a2:	48 8d 04 0a          	lea    rax,[rdx+rcx*1]
   110a6:	48 f7 d1             	not    rcx
   110a9:	48 8b 53 78          	mov    rdx,QWORD PTR [rbx+0x78]
   110ad:	48 21 c8             	and    rax,rcx
   110b0:	48 8b 8b 90 00 00 00 	mov    rcx,QWORD PTR [rbx+0x90]
   110b7:	48 89 c7             	mov    rdi,rax
   110ba:	48 89 83 88 00 00 00 	mov    QWORD PTR [rbx+0x88],rax
   110c1:	48 29 d7             	sub    rdi,rdx
   110c4:	49 89 c8             	mov    r8,rcx
   110c7:	49 29 d0             	sub    r8,rdx
   110ca:	4c 39 c7             	cmp    rdi,r8
   110cd:	76 0a                	jbe    110d9 <readtokens0+0x129>
   110cf:	48 89 8b 88 00 00 00 	mov    QWORD PTR [rbx+0x88],rcx
   110d6:	48 89 c8             	mov    rax,rcx
   110d9:	48 89 73 08          	mov    QWORD PTR [rbx+0x8],rsi
   110dd:	48 8b 93 e0 00 00 00 	mov    rdx,QWORD PTR [rbx+0xe0]
   110e4:	48 8b b3 d8 00 00 00 	mov    rsi,QWORD PTR [rbx+0xd8]
   110eb:	48 89 83 80 00 00 00 	mov    QWORD PTR [rbx+0x80],rax
   110f2:	48 39 f2             	cmp    rdx,rsi
   110f5:	0f 84 85 00 00 00    	je     11180 <readtokens0+0x1d0>
   110fb:	48 8b 8b f8 00 00 00 	mov    rcx,QWORD PTR [rbx+0xf8]
   11102:	48 8d 04 0a          	lea    rax,[rdx+rcx*1]
   11106:	48 f7 d1             	not    rcx
   11109:	48 8b 93 e8 00 00 00 	mov    rdx,QWORD PTR [rbx+0xe8]
   11110:	48 21 c8             	and    rax,rcx
   11113:	48 8b 8b d0 00 00 00 	mov    rcx,QWORD PTR [rbx+0xd0]
   1111a:	48 89 c7             	mov    rdi,rax
   1111d:	49 89 d1             	mov    r9,rdx
   11120:	48 89 83 e0 00 00 00 	mov    QWORD PTR [rbx+0xe0],rax
   11127:	48 29 cf             	sub    rdi,rcx
   1112a:	49 29 c9             	sub    r9,rcx
   1112d:	4c 39 cf             	cmp    rdi,r9
   11130:	76 0a                	jbe    1113c <readtokens0+0x18c>
   11132:	48 89 93 e0 00 00 00 	mov    QWORD PTR [rbx+0xe0],rdx
   11139:	48 89 d0             	mov    rax,rdx
   1113c:	48 89 83 d8 00 00 00 	mov    QWORD PTR [rbx+0xd8],rax
   11143:	48 89 73 10          	mov    QWORD PTR [rbx+0x10],rsi
   11147:	48 89 ef             	mov    rdi,rbp
   1114a:	e8 31 1a ff ff       	call   2b80 <ferror@plt>
   1114f:	85 c0                	test   eax,eax
   11151:	0f 94 c0             	sete   al
   11154:	48 83 c4 10          	add    rsp,0x10
   11158:	5b                   	pop    rbx
   11159:	5d                   	pop    rbp
   1115a:	41 5c                	pop    r12
   1115c:	c3                   	ret    
   1115d:	0f 1f 00             	nop    DWORD PTR [rax]
   11160:	48 8d 7b 70          	lea    rdi,[rbx+0x70]
   11164:	be 08 00 00 00       	mov    esi,0x8
   11169:	e8 22 20 00 00       	call   13190 <_obstack_newchunk>
   1116e:	48 8b 93 88 00 00 00 	mov    rdx,QWORD PTR [rbx+0x88]
   11175:	e9 f8 fe ff ff       	jmp    11072 <readtokens0+0xc2>
   1117a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
   11180:	80 8b 18 01 00 00 02 	or     BYTE PTR [rbx+0x118],0x2
   11187:	e9 6f ff ff ff       	jmp    110fb <readtokens0+0x14b>
   1118c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   11190:	80 8b c0 00 00 00 02 	or     BYTE PTR [rbx+0xc0],0x2
   11197:	e9 ff fe ff ff       	jmp    1109b <readtokens0+0xeb>
   1119c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   111a0:	48 8d 7b 18          	lea    rdi,[rbx+0x18]
   111a4:	be 01 00 00 00       	mov    esi,0x1
   111a9:	e8 e2 1f 00 00       	call   13190 <_obstack_newchunk>
   111ae:	48 8b 43 30          	mov    rax,QWORD PTR [rbx+0x30]
   111b2:	e9 8d fe ff ff       	jmp    11044 <readtokens0+0x94>
   111b7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   111be:	00 00 

00000000000111c0 <mkstemp_safer>:
   111c0:	48 83 ec 08          	sub    rsp,0x8
   111c4:	e8 77 1d ff ff       	call   2f40 <mkstemp@plt>
   111c9:	48 83 c4 08          	add    rsp,0x8
   111cd:	89 c7                	mov    edi,eax
   111cf:	e9 ac 05 00 00       	jmp    11780 <fd_safer>
   111d4:	66 90                	xchg   ax,ax
   111d6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   111dd:	00 00 00 

00000000000111e0 <mkostemp_safer>:
   111e0:	53                   	push   rbx
   111e1:	89 f3                	mov    ebx,esi
   111e3:	e8 58 1b ff ff       	call   2d40 <mkostemp@plt>
   111e8:	89 de                	mov    esi,ebx
   111ea:	89 c7                	mov    edi,eax
   111ec:	5b                   	pop    rbx
   111ed:	e9 ae 22 00 00       	jmp    134a0 <fd_safer_flag>
   111f2:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   111f9:	00 00 00 
   111fc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000011200 <strnumcmp>:
   11200:	44 0f b6 17          	movzx  r10d,BYTE PTR [rdi]
   11204:	44 0f b6 0e          	movzx  r9d,BYTE PTR [rsi]
   11208:	41 80 fa 2d          	cmp    r10b,0x2d
   1120c:	0f 84 56 01 00 00    	je     11368 <strnumcmp+0x168>
   11212:	41 80 f9 2d          	cmp    r9b,0x2d
   11216:	75 40                	jne    11258 <strnumcmp+0x58>
   11218:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   1121f:	00 
   11220:	48 83 c6 01          	add    rsi,0x1
   11224:	0f b6 06             	movzx  eax,BYTE PTR [rsi]
   11227:	3c 30                	cmp    al,0x30
   11229:	74 f5                	je     11220 <strnumcmp+0x20>
   1122b:	39 c1                	cmp    ecx,eax
   1122d:	74 f1                	je     11220 <strnumcmp+0x20>
   1122f:	39 c2                	cmp    edx,eax
   11231:	0f 84 b9 02 00 00    	je     114f0 <strnumcmp+0x2f0>
   11237:	8d 70 d0             	lea    esi,[rax-0x30]
   1123a:	b8 01 00 00 00       	mov    eax,0x1
   1123f:	83 fe 09             	cmp    esi,0x9
   11242:	0f 87 d0 02 00 00    	ja     11518 <strnumcmp+0x318>
   11248:	f3 c3                	repz ret 
   1124a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
   11250:	48 83 c7 01          	add    rdi,0x1
   11254:	44 0f b6 17          	movzx  r10d,BYTE PTR [rdi]
   11258:	41 80 fa 30          	cmp    r10b,0x30
   1125c:	74 f2                	je     11250 <strnumcmp+0x50>
   1125e:	45 0f b6 c2          	movzx  r8d,r10b
   11262:	44 39 c1             	cmp    ecx,r8d
   11265:	44 89 c0             	mov    eax,r8d
   11268:	74 e6                	je     11250 <strnumcmp+0x50>
   1126a:	41 80 f9 30          	cmp    r9b,0x30
   1126e:	75 0e                	jne    1127e <strnumcmp+0x7e>
   11270:	48 83 c6 01          	add    rsi,0x1
   11274:	44 0f b6 0e          	movzx  r9d,BYTE PTR [rsi]
   11278:	41 80 f9 30          	cmp    r9b,0x30
   1127c:	74 f2                	je     11270 <strnumcmp+0x70>
   1127e:	45 0f b6 d9          	movzx  r11d,r9b
   11282:	44 39 d9             	cmp    ecx,r11d
   11285:	74 e9                	je     11270 <strnumcmp+0x70>
   11287:	45 38 ca             	cmp    r10b,r9b
   1128a:	0f 85 d0 02 00 00    	jne    11560 <strnumcmp+0x360>
   11290:	41 83 eb 30          	sub    r11d,0x30
   11294:	41 83 fb 09          	cmp    r11d,0x9
   11298:	0f 87 39 04 00 00    	ja     116d7 <strnumcmp+0x4d7>
   1129e:	66 90                	xchg   ax,ax
   112a0:	48 83 c7 01          	add    rdi,0x1
   112a4:	44 0f b6 07          	movzx  r8d,BYTE PTR [rdi]
   112a8:	44 39 c1             	cmp    ecx,r8d
   112ab:	45 89 c2             	mov    r10d,r8d
   112ae:	44 89 c0             	mov    eax,r8d
   112b1:	74 ed                	je     112a0 <strnumcmp+0xa0>
   112b3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   112b8:	48 83 c6 01          	add    rsi,0x1
   112bc:	44 0f b6 1e          	movzx  r11d,BYTE PTR [rsi]
   112c0:	44 39 d9             	cmp    ecx,r11d
   112c3:	45 89 d9             	mov    r9d,r11d
   112c6:	74 f0                	je     112b8 <strnumcmp+0xb8>
   112c8:	45 38 da             	cmp    r10b,r11b
   112cb:	0f 85 8f 02 00 00    	jne    11560 <strnumcmp+0x360>
   112d1:	41 83 eb 30          	sub    r11d,0x30
   112d5:	41 83 fb 09          	cmp    r11d,0x9
   112d9:	76 c5                	jbe    112a0 <strnumcmp+0xa0>
   112db:	44 39 c2             	cmp    edx,r8d
   112de:	0f 84 bc 02 00 00    	je     115a0 <strnumcmp+0x3a0>
   112e4:	45 0f b6 da          	movzx  r11d,r10b
   112e8:	45 0f b6 c1          	movzx  r8d,r9b
   112ec:	41 83 e8 30          	sub    r8d,0x30
   112f0:	44 39 da             	cmp    edx,r11d
   112f3:	0f 84 bc 02 00 00    	je     115b5 <strnumcmp+0x3b5>
   112f9:	44 29 d8             	sub    eax,r11d
   112fc:	41 83 eb 30          	sub    r11d,0x30
   11300:	41 83 f8 09          	cmp    r8d,0x9
   11304:	0f 87 d6 02 00 00    	ja     115e0 <strnumcmp+0x3e0>
   1130a:	45 31 c0             	xor    r8d,r8d
   1130d:	0f 1f 00             	nop    DWORD PTR [rax]
   11310:	48 83 c7 01          	add    rdi,0x1
   11314:	0f b6 17             	movzx  edx,BYTE PTR [rdi]
   11317:	39 d1                	cmp    ecx,edx
   11319:	74 f5                	je     11310 <strnumcmp+0x110>
   1131b:	83 ea 30             	sub    edx,0x30
   1131e:	49 83 c0 01          	add    r8,0x1
   11322:	83 fa 09             	cmp    edx,0x9
   11325:	76 e9                	jbe    11310 <strnumcmp+0x110>
   11327:	41 83 fb 09          	cmp    r11d,0x9
   1132b:	0f 87 bf 02 00 00    	ja     115f0 <strnumcmp+0x3f0>
   11331:	31 ff                	xor    edi,edi
   11333:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   11338:	48 83 c6 01          	add    rsi,0x1
   1133c:	0f b6 16             	movzx  edx,BYTE PTR [rsi]
   1133f:	39 d1                	cmp    ecx,edx
   11341:	74 f5                	je     11338 <strnumcmp+0x138>
   11343:	83 ea 30             	sub    edx,0x30
   11346:	48 83 c7 01          	add    rdi,0x1
   1134a:	83 fa 09             	cmp    edx,0x9
   1134d:	76 e9                	jbe    11338 <strnumcmp+0x138>
   1134f:	4c 39 c7             	cmp    rdi,r8
   11352:	0f 84 3c 02 00 00    	je     11594 <strnumcmp+0x394>
   11358:	49 39 f8             	cmp    r8,rdi
   1135b:	19 c0                	sbb    eax,eax
   1135d:	83 c8 01             	or     eax,0x1
   11360:	c3                   	ret    
   11361:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   11368:	48 83 c7 01          	add    rdi,0x1
   1136c:	44 0f b6 07          	movzx  r8d,BYTE PTR [rdi]
   11370:	41 80 f8 30          	cmp    r8b,0x30
   11374:	74 f2                	je     11368 <strnumcmp+0x168>
   11376:	41 0f b6 c0          	movzx  eax,r8b
   1137a:	39 c1                	cmp    ecx,eax
   1137c:	41 89 c3             	mov    r11d,eax
   1137f:	74 e7                	je     11368 <strnumcmp+0x168>
   11381:	41 80 f9 2d          	cmp    r9b,0x2d
   11385:	74 49                	je     113d0 <strnumcmp+0x1d0>
   11387:	39 c2                	cmp    edx,eax
   11389:	0f 84 41 01 00 00    	je     114d0 <strnumcmp+0x2d0>
   1138f:	83 e8 30             	sub    eax,0x30
   11392:	83 f8 09             	cmp    eax,0x9
   11395:	77 11                	ja     113a8 <strnumcmp+0x1a8>
   11397:	e9 bc 03 00 00       	jmp    11758 <strnumcmp+0x558>
   1139c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   113a0:	48 83 c6 01          	add    rsi,0x1
   113a4:	44 0f b6 0e          	movzx  r9d,BYTE PTR [rsi]
   113a8:	41 80 f9 30          	cmp    r9b,0x30
   113ac:	74 f2                	je     113a0 <strnumcmp+0x1a0>
   113ae:	45 0f b6 d9          	movzx  r11d,r9b
   113b2:	44 39 d9             	cmp    ecx,r11d
   113b5:	74 e9                	je     113a0 <strnumcmp+0x1a0>
   113b7:	44 39 da             	cmp    edx,r11d
   113ba:	0f 84 80 01 00 00    	je     11540 <strnumcmp+0x340>
   113c0:	41 83 eb 30          	sub    r11d,0x30
   113c4:	31 c0                	xor    eax,eax
   113c6:	41 83 fb 09          	cmp    r11d,0x9
   113ca:	0f 96 c0             	setbe  al
   113cd:	f7 d8                	neg    eax
   113cf:	c3                   	ret    
   113d0:	48 83 c6 01          	add    rsi,0x1
   113d4:	44 0f b6 16          	movzx  r10d,BYTE PTR [rsi]
   113d8:	41 80 fa 30          	cmp    r10b,0x30
   113dc:	74 f2                	je     113d0 <strnumcmp+0x1d0>
   113de:	45 0f b6 ca          	movzx  r9d,r10b
   113e2:	44 39 c9             	cmp    ecx,r9d
   113e5:	74 e9                	je     113d0 <strnumcmp+0x1d0>
   113e7:	45 38 d0             	cmp    r8b,r10b
   113ea:	0f 85 d6 01 00 00    	jne    115c6 <strnumcmp+0x3c6>
   113f0:	41 83 e9 30          	sub    r9d,0x30
   113f4:	41 83 f9 09          	cmp    r9d,0x9
   113f8:	0f 87 52 03 00 00    	ja     11750 <strnumcmp+0x550>
   113fe:	66 90                	xchg   ax,ax
   11400:	48 83 c7 01          	add    rdi,0x1
   11404:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
   11407:	39 c1                	cmp    ecx,eax
   11409:	41 89 c0             	mov    r8d,eax
   1140c:	41 89 c3             	mov    r11d,eax
   1140f:	74 ef                	je     11400 <strnumcmp+0x200>
   11411:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   11418:	48 83 c6 01          	add    rsi,0x1
   1141c:	44 0f b6 0e          	movzx  r9d,BYTE PTR [rsi]
   11420:	44 39 c9             	cmp    ecx,r9d
   11423:	45 89 ca             	mov    r10d,r9d
   11426:	74 f0                	je     11418 <strnumcmp+0x218>
   11428:	45 38 c8             	cmp    r8b,r9b
   1142b:	0f 85 95 01 00 00    	jne    115c6 <strnumcmp+0x3c6>
   11431:	41 83 e9 30          	sub    r9d,0x30
   11435:	41 83 f9 09          	cmp    r9d,0x9
   11439:	76 c5                	jbe    11400 <strnumcmp+0x200>
   1143b:	39 c2                	cmp    edx,eax
   1143d:	0f 84 de 01 00 00    	je     11621 <strnumcmp+0x421>
   11443:	41 0f b6 c2          	movzx  eax,r10b
   11447:	45 0f b6 c8          	movzx  r9d,r8b
   1144b:	44 39 ca             	cmp    edx,r9d
   1144e:	44 8d 40 d0          	lea    r8d,[rax-0x30]
   11452:	0f 84 68 02 00 00    	je     116c0 <strnumcmp+0x4c0>
   11458:	44 89 c8             	mov    eax,r9d
   1145b:	41 8d 51 d0          	lea    edx,[r9-0x30]
   1145f:	44 29 d8             	sub    eax,r11d
   11462:	41 83 f8 09          	cmp    r8d,0x9
   11466:	0f 87 73 02 00 00    	ja     116df <strnumcmp+0x4df>
   1146c:	45 31 c9             	xor    r9d,r9d
   1146f:	90                   	nop
   11470:	48 83 c7 01          	add    rdi,0x1
   11474:	44 0f b6 07          	movzx  r8d,BYTE PTR [rdi]
   11478:	44 39 c1             	cmp    ecx,r8d
   1147b:	74 f3                	je     11470 <strnumcmp+0x270>
   1147d:	41 83 e8 30          	sub    r8d,0x30
   11481:	49 83 c1 01          	add    r9,0x1
   11485:	41 83 f8 09          	cmp    r8d,0x9
   11489:	76 e5                	jbe    11470 <strnumcmp+0x270>
   1148b:	83 fa 09             	cmp    edx,0x9
   1148e:	0f 87 b1 01 00 00    	ja     11645 <strnumcmp+0x445>
   11494:	31 ff                	xor    edi,edi
   11496:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   1149d:	00 00 00 
   114a0:	48 83 c6 01          	add    rsi,0x1
   114a4:	0f b6 16             	movzx  edx,BYTE PTR [rsi]
   114a7:	39 d1                	cmp    ecx,edx
   114a9:	74 f5                	je     114a0 <strnumcmp+0x2a0>
   114ab:	83 ea 30             	sub    edx,0x30
   114ae:	48 83 c7 01          	add    rdi,0x1
   114b2:	83 fa 09             	cmp    edx,0x9
   114b5:	76 e9                	jbe    114a0 <strnumcmp+0x2a0>
   114b7:	4c 39 cf             	cmp    rdi,r9
   114ba:	0f 84 d4 00 00 00    	je     11594 <strnumcmp+0x394>
   114c0:	49 39 f9             	cmp    r9,rdi
   114c3:	19 c0                	sbb    eax,eax
   114c5:	83 e0 02             	and    eax,0x2
   114c8:	83 e8 01             	sub    eax,0x1
   114cb:	c3                   	ret    
   114cc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   114d0:	48 83 c7 01          	add    rdi,0x1
   114d4:	44 0f b6 07          	movzx  r8d,BYTE PTR [rdi]
   114d8:	41 80 f8 30          	cmp    r8b,0x30
   114dc:	74 f2                	je     114d0 <strnumcmp+0x2d0>
   114de:	41 0f b6 c0          	movzx  eax,r8b
   114e2:	e9 a8 fe ff ff       	jmp    1138f <strnumcmp+0x18f>
   114e7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   114ee:	00 00 
   114f0:	48 83 c6 01          	add    rsi,0x1
   114f4:	0f b6 06             	movzx  eax,BYTE PTR [rsi]
   114f7:	3c 30                	cmp    al,0x30
   114f9:	0f 85 38 fd ff ff    	jne    11237 <strnumcmp+0x37>
   114ff:	48 83 c6 01          	add    rsi,0x1
   11503:	0f b6 06             	movzx  eax,BYTE PTR [rsi]
   11506:	3c 30                	cmp    al,0x30
   11508:	74 e6                	je     114f0 <strnumcmp+0x2f0>
   1150a:	e9 28 fd ff ff       	jmp    11237 <strnumcmp+0x37>
   1150f:	90                   	nop
   11510:	48 83 c7 01          	add    rdi,0x1
   11514:	44 0f b6 17          	movzx  r10d,BYTE PTR [rdi]
   11518:	41 80 fa 30          	cmp    r10b,0x30
   1151c:	74 f2                	je     11510 <strnumcmp+0x310>
   1151e:	45 0f b6 c2          	movzx  r8d,r10b
   11522:	44 39 c1             	cmp    ecx,r8d
   11525:	74 e9                	je     11510 <strnumcmp+0x310>
   11527:	44 39 c2             	cmp    edx,r8d
   1152a:	74 54                	je     11580 <strnumcmp+0x380>
   1152c:	41 83 e8 30          	sub    r8d,0x30
   11530:	31 c0                	xor    eax,eax
   11532:	41 83 f8 09          	cmp    r8d,0x9
   11536:	0f 96 c0             	setbe  al
   11539:	c3                   	ret    
   1153a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
   11540:	48 83 c6 01          	add    rsi,0x1
   11544:	44 0f b6 0e          	movzx  r9d,BYTE PTR [rsi]
   11548:	41 80 f9 30          	cmp    r9b,0x30
   1154c:	74 f2                	je     11540 <strnumcmp+0x340>
   1154e:	45 0f b6 d9          	movzx  r11d,r9b
   11552:	e9 69 fe ff ff       	jmp    113c0 <strnumcmp+0x1c0>
   11557:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   1155e:	00 00 
   11560:	44 39 c2             	cmp    edx,r8d
   11563:	0f 85 83 fd ff ff    	jne    112ec <strnumcmp+0xec>
   11569:	41 8d 43 d0          	lea    eax,[r11-0x30]
   1156d:	83 f8 09             	cmp    eax,0x9
   11570:	77 2e                	ja     115a0 <strnumcmp+0x3a0>
   11572:	89 d0                	mov    eax,edx
   11574:	e9 73 fd ff ff       	jmp    112ec <strnumcmp+0xec>
   11579:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   11580:	48 83 c7 01          	add    rdi,0x1
   11584:	44 0f b6 17          	movzx  r10d,BYTE PTR [rdi]
   11588:	41 80 fa 30          	cmp    r10b,0x30
   1158c:	74 f2                	je     11580 <strnumcmp+0x380>
   1158e:	45 0f b6 c2          	movzx  r8d,r10b
   11592:	eb 98                	jmp    1152c <strnumcmp+0x32c>
   11594:	48 85 ff             	test   rdi,rdi
   11597:	ba 00 00 00 00       	mov    edx,0x0
   1159c:	0f 44 c2             	cmove  eax,edx
   1159f:	c3                   	ret    
   115a0:	3a 17                	cmp    dl,BYTE PTR [rdi]
   115a2:	44 0f b6 06          	movzx  r8d,BYTE PTR [rsi]
   115a6:	0f 84 a4 00 00 00    	je     11650 <strnumcmp+0x450>
   115ac:	31 c0                	xor    eax,eax
   115ae:	44 38 c2             	cmp    dl,r8b
   115b1:	74 46                	je     115f9 <strnumcmp+0x3f9>
   115b3:	f3 c3                	repz ret 
   115b5:	41 83 f8 09          	cmp    r8d,0x9
   115b9:	77 e5                	ja     115a0 <strnumcmp+0x3a0>
   115bb:	29 d0                	sub    eax,edx
   115bd:	44 8d 5a d0          	lea    r11d,[rdx-0x30]
   115c1:	e9 44 fd ff ff       	jmp    1130a <strnumcmp+0x10a>
   115c6:	39 c2                	cmp    edx,eax
   115c8:	0f 85 7d fe ff ff    	jne    1144b <strnumcmp+0x24b>
   115ce:	45 8d 41 d0          	lea    r8d,[r9-0x30]
   115d2:	41 83 f8 09          	cmp    r8d,0x9
   115d6:	77 49                	ja     11621 <strnumcmp+0x421>
   115d8:	41 89 d3             	mov    r11d,edx
   115db:	e9 6b fe ff ff       	jmp    1144b <strnumcmp+0x24b>
   115e0:	45 31 c0             	xor    r8d,r8d
   115e3:	41 83 fb 09          	cmp    r11d,0x9
   115e7:	0f 86 44 fd ff ff    	jbe    11331 <strnumcmp+0x131>
   115ed:	31 c0                	xor    eax,eax
   115ef:	c3                   	ret    
   115f0:	31 c0                	xor    eax,eax
   115f2:	4d 85 c0             	test   r8,r8
   115f5:	0f 95 c0             	setne  al
   115f8:	c3                   	ret    
   115f9:	48 8d 46 01          	lea    rax,[rsi+0x1]
   115fd:	0f b6 56 01          	movzx  edx,BYTE PTR [rsi+0x1]
   11601:	eb 07                	jmp    1160a <strnumcmp+0x40a>
   11603:	48 83 c0 01          	add    rax,0x1
   11607:	0f b6 10             	movzx  edx,BYTE PTR [rax]
   1160a:	80 fa 30             	cmp    dl,0x30
   1160d:	74 f4                	je     11603 <strnumcmp+0x403>
   1160f:	0f be c2             	movsx  eax,dl
   11612:	83 e8 30             	sub    eax,0x30
   11615:	83 f8 09             	cmp    eax,0x9
   11618:	0f 96 c0             	setbe  al
   1161b:	0f b6 c0             	movzx  eax,al
   1161e:	f7 d8                	neg    eax
   11620:	c3                   	ret    
   11621:	3a 16                	cmp    dl,BYTE PTR [rsi]
   11623:	44 0f b6 07          	movzx  r8d,BYTE PTR [rdi]
   11627:	0f 84 c3 00 00 00    	je     116f0 <strnumcmp+0x4f0>
   1162d:	31 c0                	xor    eax,eax
   1162f:	44 38 c2             	cmp    dl,r8b
   11632:	0f 85 7b ff ff ff    	jne    115b3 <strnumcmp+0x3b3>
   11638:	48 83 c7 01          	add    rdi,0x1
   1163c:	0f be 07             	movsx  eax,BYTE PTR [rdi]
   1163f:	3c 30                	cmp    al,0x30
   11641:	74 f5                	je     11638 <strnumcmp+0x438>
   11643:	eb cd                	jmp    11612 <strnumcmp+0x412>
   11645:	31 c0                	xor    eax,eax
   11647:	4d 85 c9             	test   r9,r9
   1164a:	0f 95 c0             	setne  al
   1164d:	f7 d8                	neg    eax
   1164f:	c3                   	ret    
   11650:	44 38 c2             	cmp    dl,r8b
   11653:	0f b6 4f 01          	movzx  ecx,BYTE PTR [rdi+0x1]
   11657:	74 31                	je     1168a <strnumcmp+0x48a>
   11659:	48 83 c7 01          	add    rdi,0x1
   1165d:	eb 08                	jmp    11667 <strnumcmp+0x467>
   1165f:	90                   	nop
   11660:	48 83 c7 01          	add    rdi,0x1
   11664:	0f b6 0f             	movzx  ecx,BYTE PTR [rdi]
   11667:	80 f9 30             	cmp    cl,0x30
   1166a:	74 f4                	je     11660 <strnumcmp+0x460>
   1166c:	0f be c1             	movsx  eax,cl
   1166f:	83 e8 30             	sub    eax,0x30
   11672:	83 f8 09             	cmp    eax,0x9
   11675:	0f 96 c0             	setbe  al
   11678:	0f b6 c0             	movzx  eax,al
   1167b:	c3                   	ret    
   1167c:	41 83 f8 09          	cmp    r8d,0x9
   11680:	0f 87 67 ff ff ff    	ja     115ed <strnumcmp+0x3ed>
   11686:	0f b6 4f 01          	movzx  ecx,BYTE PTR [rdi+0x1]
   1168a:	48 83 c6 01          	add    rsi,0x1
   1168e:	44 0f be 0e          	movsx  r9d,BYTE PTR [rsi]
   11692:	48 83 c7 01          	add    rdi,0x1
   11696:	41 38 c9             	cmp    r9b,cl
   11699:	44 89 ca             	mov    edx,r9d
   1169c:	45 8d 41 d0          	lea    r8d,[r9-0x30]
   116a0:	74 da                	je     1167c <strnumcmp+0x47c>
   116a2:	0f be c1             	movsx  eax,cl
   116a5:	44 8d 50 d0          	lea    r10d,[rax-0x30]
   116a9:	41 83 fa 09          	cmp    r10d,0x9
   116ad:	0f 87 ab 00 00 00    	ja     1175e <strnumcmp+0x55e>
   116b3:	41 83 f8 09          	cmp    r8d,0x9
   116b7:	77 ae                	ja     11667 <strnumcmp+0x467>
   116b9:	44 29 c8             	sub    eax,r9d
   116bc:	c3                   	ret    
   116bd:	0f 1f 00             	nop    DWORD PTR [rax]
   116c0:	41 83 f8 09          	cmp    r8d,0x9
   116c4:	0f 87 57 ff ff ff    	ja     11621 <strnumcmp+0x421>
   116ca:	89 d0                	mov    eax,edx
   116cc:	83 ea 30             	sub    edx,0x30
   116cf:	44 29 d8             	sub    eax,r11d
   116d2:	e9 95 fd ff ff       	jmp    1146c <strnumcmp+0x26c>
   116d7:	45 89 d1             	mov    r9d,r10d
   116da:	e9 fc fb ff ff       	jmp    112db <strnumcmp+0xdb>
   116df:	45 31 c9             	xor    r9d,r9d
   116e2:	83 fa 09             	cmp    edx,0x9
   116e5:	0f 86 a9 fd ff ff    	jbe    11494 <strnumcmp+0x294>
   116eb:	e9 fd fe ff ff       	jmp    115ed <strnumcmp+0x3ed>
   116f0:	44 38 c2             	cmp    dl,r8b
   116f3:	0f b6 4e 01          	movzx  ecx,BYTE PTR [rsi+0x1]
   116f7:	74 24                	je     1171d <strnumcmp+0x51d>
   116f9:	48 83 c6 01          	add    rsi,0x1
   116fd:	eb 07                	jmp    11706 <strnumcmp+0x506>
   116ff:	48 83 c6 01          	add    rsi,0x1
   11703:	0f b6 0e             	movzx  ecx,BYTE PTR [rsi]
   11706:	80 f9 30             	cmp    cl,0x30
   11709:	74 f4                	je     116ff <strnumcmp+0x4ff>
   1170b:	e9 5c ff ff ff       	jmp    1166c <strnumcmp+0x46c>
   11710:	83 fa 09             	cmp    edx,0x9
   11713:	0f 87 d4 fe ff ff    	ja     115ed <strnumcmp+0x3ed>
   11719:	0f b6 4e 01          	movzx  ecx,BYTE PTR [rsi+0x1]
   1171d:	48 83 c7 01          	add    rdi,0x1
   11721:	44 0f be 07          	movsx  r8d,BYTE PTR [rdi]
   11725:	48 83 c6 01          	add    rsi,0x1
   11729:	41 38 c8             	cmp    r8b,cl
   1172c:	41 8d 50 d0          	lea    edx,[r8-0x30]
   11730:	74 de                	je     11710 <strnumcmp+0x510>
   11732:	0f be c1             	movsx  eax,cl
   11735:	44 8d 48 d0          	lea    r9d,[rax-0x30]
   11739:	41 83 f9 09          	cmp    r9d,0x9
   1173d:	76 33                	jbe    11772 <strnumcmp+0x572>
   1173f:	31 c0                	xor    eax,eax
   11741:	83 fa 09             	cmp    edx,0x9
   11744:	0f 86 f2 fe ff ff    	jbe    1163c <strnumcmp+0x43c>
   1174a:	c3                   	ret    
   1174b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   11750:	45 89 c2             	mov    r10d,r8d
   11753:	e9 e3 fc ff ff       	jmp    1143b <strnumcmp+0x23b>
   11758:	b8 ff ff ff ff       	mov    eax,0xffffffff
   1175d:	c3                   	ret    
   1175e:	31 c0                	xor    eax,eax
   11760:	41 83 f8 09          	cmp    r8d,0x9
   11764:	0f 87 49 fe ff ff    	ja     115b3 <strnumcmp+0x3b3>
   1176a:	48 89 f0             	mov    rax,rsi
   1176d:	e9 98 fe ff ff       	jmp    1160a <strnumcmp+0x40a>
   11772:	83 fa 09             	cmp    edx,0x9
   11775:	77 8f                	ja     11706 <strnumcmp+0x506>
   11777:	44 29 c0             	sub    eax,r8d
   1177a:	c3                   	ret    
   1177b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011780 <fd_safer>:
   11780:	41 55                	push   r13
   11782:	41 54                	push   r12
   11784:	55                   	push   rbp
   11785:	53                   	push   rbx
   11786:	89 fb                	mov    ebx,edi
   11788:	48 83 ec 08          	sub    rsp,0x8
   1178c:	83 ff 02             	cmp    edi,0x2
   1178f:	77 21                	ja     117b2 <fd_safer+0x32>
   11791:	e8 1a 20 00 00       	call   137b0 <dup_safer>
   11796:	41 89 c4             	mov    r12d,eax
   11799:	e8 72 13 ff ff       	call   2b10 <__errno_location@plt>
   1179e:	44 8b 28             	mov    r13d,DWORD PTR [rax]
   117a1:	48 89 c5             	mov    rbp,rax
   117a4:	89 df                	mov    edi,ebx
   117a6:	e8 05 16 ff ff       	call   2db0 <close@plt>
   117ab:	44 89 e3             	mov    ebx,r12d
   117ae:	44 89 6d 00          	mov    DWORD PTR [rbp+0x0],r13d
   117b2:	48 83 c4 08          	add    rsp,0x8
   117b6:	89 d8                	mov    eax,ebx
   117b8:	5b                   	pop    rbx
   117b9:	5d                   	pop    rbp
   117ba:	41 5c                	pop    r12
   117bc:	41 5d                	pop    r13
   117be:	c3                   	ret    
   117bf:	90                   	nop

00000000000117c0 <version_etc_arn>:
   117c0:	41 57                	push   r15
   117c2:	41 56                	push   r14
   117c4:	41 55                	push   r13
   117c6:	41 54                	push   r12
   117c8:	4d 89 cc             	mov    r12,r9
   117cb:	55                   	push   rbp
   117cc:	53                   	push   rbx
   117cd:	48 89 fd             	mov    rbp,rdi
   117d0:	4c 89 c3             	mov    rbx,r8
   117d3:	48 83 ec 28          	sub    rsp,0x28
   117d7:	48 85 f6             	test   rsi,rsi
   117da:	0f 84 18 01 00 00    	je     118f8 <version_etc_arn+0x138>
   117e0:	49 89 d0             	mov    r8,rdx
   117e3:	48 8d 15 0d 49 00 00 	lea    rdx,[rip+0x490d]        # 160f7 <quoting_style_vals+0x57>
   117ea:	49 89 c9             	mov    r9,rcx
   117ed:	31 c0                	xor    eax,eax
   117ef:	48 89 f1             	mov    rcx,rsi
   117f2:	be 01 00 00 00       	mov    esi,0x1
   117f7:	e8 04 19 ff ff       	call   3100 <__fprintf_chk@plt>
   117fc:	48 8d 35 07 49 00 00 	lea    rsi,[rip+0x4907]        # 1610a <quoting_style_vals+0x6a>
   11803:	31 ff                	xor    edi,edi
   11805:	ba 05 00 00 00       	mov    edx,0x5
   1180a:	e8 61 14 ff ff       	call   2c70 <dcgettext@plt>
   1180f:	48 8d 15 0a 4c 00 00 	lea    rdx,[rip+0x4c0a]        # 16420 <version_etc_copyright>
   11816:	48 89 c1             	mov    rcx,rax
   11819:	41 b8 e3 07 00 00    	mov    r8d,0x7e3
   1181f:	be 01 00 00 00       	mov    esi,0x1
   11824:	48 89 ef             	mov    rdi,rbp
   11827:	31 c0                	xor    eax,eax
   11829:	e8 d2 18 ff ff       	call   3100 <__fprintf_chk@plt>
   1182e:	48 8d 35 5b 49 00 00 	lea    rsi,[rip+0x495b]        # 16190 <quoting_style_vals+0xf0>
   11835:	31 ff                	xor    edi,edi
   11837:	ba 05 00 00 00       	mov    edx,0x5
   1183c:	e8 2f 14 ff ff       	call   2c70 <dcgettext@plt>
   11841:	48 89 ee             	mov    rsi,rbp
   11844:	48 89 c7             	mov    rdi,rax
   11847:	e8 c4 15 ff ff       	call   2e10 <fputs_unlocked@plt>
   1184c:	49 83 fc 09          	cmp    r12,0x9
   11850:	0f 87 3a 03 00 00    	ja     11b90 <version_etc_arn+0x3d0>
   11856:	48 8d 15 8f 4b 00 00 	lea    rdx,[rip+0x4b8f]        # 163ec <quoting_style_vals+0x34c>
   1185d:	4a 63 04 a2          	movsxd rax,DWORD PTR [rdx+r12*4]
   11861:	48 01 d0             	add    rax,rdx
   11864:	ff e0                	jmp    rax
   11866:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   1186d:	00 00 00 
   11870:	4c 8b 4b 38          	mov    r9,QWORD PTR [rbx+0x38]
   11874:	48 8b 43 10          	mov    rax,QWORD PTR [rbx+0x10]
   11878:	48 8d 35 81 4a 00 00 	lea    rsi,[rip+0x4a81]        # 16300 <quoting_style_vals+0x260>
   1187f:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
   11883:	ba 05 00 00 00       	mov    edx,0x5
   11888:	31 ff                	xor    edi,edi
   1188a:	4c 8b 6b 30          	mov    r13,QWORD PTR [rbx+0x30]
   1188e:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
   11892:	4c 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],r9
   11897:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
   1189b:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
   1189f:	48 89 04 24          	mov    QWORD PTR [rsp],rax
   118a3:	4c 89 44 24 08       	mov    QWORD PTR [rsp+0x8],r8
   118a8:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
   118ab:	e8 c0 13 ff ff       	call   2c70 <dcgettext@plt>
   118b0:	48 83 ec 08          	sub    rsp,0x8
   118b4:	4c 8b 4c 24 18       	mov    r9,QWORD PTR [rsp+0x18]
   118b9:	48 89 c2             	mov    rdx,rax
   118bc:	48 89 d9             	mov    rcx,rbx
   118bf:	be 01 00 00 00       	mov    esi,0x1
   118c4:	48 89 ef             	mov    rdi,rbp
   118c7:	31 c0                	xor    eax,eax
   118c9:	41 51                	push   r9
   118cb:	41 55                	push   r13
   118cd:	41 54                	push   r12
   118cf:	41 57                	push   r15
   118d1:	41 56                	push   r14
   118d3:	4c 8b 4c 24 30       	mov    r9,QWORD PTR [rsp+0x30]
   118d8:	4c 8b 44 24 38       	mov    r8,QWORD PTR [rsp+0x38]
   118dd:	e8 1e 18 ff ff       	call   3100 <__fprintf_chk@plt>
   118e2:	48 83 c4 30          	add    rsp,0x30
   118e6:	48 83 c4 28          	add    rsp,0x28
   118ea:	5b                   	pop    rbx
   118eb:	5d                   	pop    rbp
   118ec:	41 5c                	pop    r12
   118ee:	41 5d                	pop    r13
   118f0:	41 5e                	pop    r14
   118f2:	41 5f                	pop    r15
   118f4:	c3                   	ret    
   118f5:	0f 1f 00             	nop    DWORD PTR [rax]
   118f8:	49 89 c8             	mov    r8,rcx
   118fb:	48 89 d1             	mov    rcx,rdx
   118fe:	48 8d 15 fe 47 00 00 	lea    rdx,[rip+0x47fe]        # 16103 <quoting_style_vals+0x63>
   11905:	be 01 00 00 00       	mov    esi,0x1
   1190a:	31 c0                	xor    eax,eax
   1190c:	e8 ef 17 ff ff       	call   3100 <__fprintf_chk@plt>
   11911:	e9 e6 fe ff ff       	jmp    117fc <version_etc_arn+0x3c>
   11916:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   1191d:	00 00 00 
   11920:	4c 8b 53 40          	mov    r10,QWORD PTR [rbx+0x40]
   11924:	4c 8b 4b 38          	mov    r9,QWORD PTR [rbx+0x38]
   11928:	48 8d 35 01 4a 00 00 	lea    rsi,[rip+0x4a01]        # 16330 <quoting_style_vals+0x290>
   1192f:	48 8b 43 10          	mov    rax,QWORD PTR [rbx+0x10]
   11933:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
   11937:	ba 05 00 00 00       	mov    edx,0x5
   1193c:	4c 8b 6b 30          	mov    r13,QWORD PTR [rbx+0x30]
   11940:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
   11944:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
   11948:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
   1194c:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
   1194f:	4c 89 54 24 18       	mov    QWORD PTR [rsp+0x18],r10
   11954:	4c 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],r9
   11959:	48 89 04 24          	mov    QWORD PTR [rsp],rax
   1195d:	4c 89 44 24 08       	mov    QWORD PTR [rsp+0x8],r8
   11962:	31 ff                	xor    edi,edi
   11964:	e8 07 13 ff ff       	call   2c70 <dcgettext@plt>
   11969:	4c 8b 54 24 18       	mov    r10,QWORD PTR [rsp+0x18]
   1196e:	41 52                	push   r10
   11970:	e9 3f ff ff ff       	jmp    118b4 <version_etc_arn+0xf4>
   11975:	0f 1f 00             	nop    DWORD PTR [rax]
   11978:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
   1197b:	48 8d 35 8c 47 00 00 	lea    rsi,[rip+0x478c]        # 1610e <quoting_style_vals+0x6e>
   11982:	ba 05 00 00 00       	mov    edx,0x5
   11987:	31 ff                	xor    edi,edi
   11989:	e8 e2 12 ff ff       	call   2c70 <dcgettext@plt>
   1198e:	48 83 c4 28          	add    rsp,0x28
   11992:	48 89 d9             	mov    rcx,rbx
   11995:	48 89 ef             	mov    rdi,rbp
   11998:	5b                   	pop    rbx
   11999:	5d                   	pop    rbp
   1199a:	41 5c                	pop    r12
   1199c:	41 5d                	pop    r13
   1199e:	41 5e                	pop    r14
   119a0:	41 5f                	pop    r15
   119a2:	48 89 c2             	mov    rdx,rax
   119a5:	be 01 00 00 00       	mov    esi,0x1
   119aa:	31 c0                	xor    eax,eax
   119ac:	e9 4f 17 ff ff       	jmp    3100 <__fprintf_chk@plt>
   119b1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   119b8:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
   119bc:	48 8d 35 5b 47 00 00 	lea    rsi,[rip+0x475b]        # 1611e <quoting_style_vals+0x7e>
   119c3:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
   119c6:	ba 05 00 00 00       	mov    edx,0x5
   119cb:	31 ff                	xor    edi,edi
   119cd:	e8 9e 12 ff ff       	call   2c70 <dcgettext@plt>
   119d2:	48 83 c4 28          	add    rsp,0x28
   119d6:	4d 89 e0             	mov    r8,r12
   119d9:	48 89 d9             	mov    rcx,rbx
   119dc:	48 89 ef             	mov    rdi,rbp
   119df:	48 89 c2             	mov    rdx,rax
   119e2:	be 01 00 00 00       	mov    esi,0x1
   119e7:	5b                   	pop    rbx
   119e8:	5d                   	pop    rbp
   119e9:	41 5c                	pop    r12
   119eb:	41 5d                	pop    r13
   119ed:	41 5e                	pop    r14
   119ef:	41 5f                	pop    r15
   119f1:	31 c0                	xor    eax,eax
   119f3:	e9 08 17 ff ff       	jmp    3100 <__fprintf_chk@plt>
   119f8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   119ff:	00 
   11a00:	4c 8b 6b 10          	mov    r13,QWORD PTR [rbx+0x10]
   11a04:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
   11a08:	48 8d 35 26 47 00 00 	lea    rsi,[rip+0x4726]        # 16135 <quoting_style_vals+0x95>
   11a0f:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
   11a12:	ba 05 00 00 00       	mov    edx,0x5
   11a17:	31 ff                	xor    edi,edi
   11a19:	e8 52 12 ff ff       	call   2c70 <dcgettext@plt>
   11a1e:	48 83 c4 28          	add    rsp,0x28
   11a22:	4d 89 e9             	mov    r9,r13
   11a25:	4d 89 e0             	mov    r8,r12
   11a28:	48 89 d9             	mov    rcx,rbx
   11a2b:	48 89 ef             	mov    rdi,rbp
   11a2e:	48 89 c2             	mov    rdx,rax
   11a31:	5b                   	pop    rbx
   11a32:	5d                   	pop    rbp
   11a33:	41 5c                	pop    r12
   11a35:	41 5d                	pop    r13
   11a37:	41 5e                	pop    r14
   11a39:	41 5f                	pop    r15
   11a3b:	be 01 00 00 00       	mov    esi,0x1
   11a40:	31 c0                	xor    eax,eax
   11a42:	e9 b9 16 ff ff       	jmp    3100 <__fprintf_chk@plt>
   11a47:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   11a4e:	00 00 
   11a50:	48 8d 35 09 48 00 00 	lea    rsi,[rip+0x4809]        # 16260 <quoting_style_vals+0x1c0>
   11a57:	ba 05 00 00 00       	mov    edx,0x5
   11a5c:	31 ff                	xor    edi,edi
   11a5e:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
   11a62:	4c 8b 6b 10          	mov    r13,QWORD PTR [rbx+0x10]
   11a66:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
   11a6a:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
   11a6d:	e8 fe 11 ff ff       	call   2c70 <dcgettext@plt>
   11a72:	48 83 ec 08          	sub    rsp,0x8
   11a76:	41 56                	push   r14
   11a78:	48 89 c2             	mov    rdx,rax
   11a7b:	4d 89 e9             	mov    r9,r13
   11a7e:	4d 89 e0             	mov    r8,r12
   11a81:	48 89 d9             	mov    rcx,rbx
   11a84:	48 89 ef             	mov    rdi,rbp
   11a87:	be 01 00 00 00       	mov    esi,0x1
   11a8c:	31 c0                	xor    eax,eax
   11a8e:	e8 6d 16 ff ff       	call   3100 <__fprintf_chk@plt>
   11a93:	58                   	pop    rax
   11a94:	5a                   	pop    rdx
   11a95:	48 83 c4 28          	add    rsp,0x28
   11a99:	5b                   	pop    rbx
   11a9a:	5d                   	pop    rbp
   11a9b:	41 5c                	pop    r12
   11a9d:	41 5d                	pop    r13
   11a9f:	41 5e                	pop    r14
   11aa1:	41 5f                	pop    r15
   11aa3:	c3                   	ret    
   11aa4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   11aa8:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
   11aac:	48 8d 35 cd 47 00 00 	lea    rsi,[rip+0x47cd]        # 16280 <quoting_style_vals+0x1e0>
   11ab3:	ba 05 00 00 00       	mov    edx,0x5
   11ab8:	31 ff                	xor    edi,edi
   11aba:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
   11abe:	4c 8b 6b 10          	mov    r13,QWORD PTR [rbx+0x10]
   11ac2:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
   11ac6:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
   11ac9:	e8 a2 11 ff ff       	call   2c70 <dcgettext@plt>
   11ace:	41 57                	push   r15
   11ad0:	eb a4                	jmp    11a76 <version_etc_arn+0x2b6>
   11ad2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
   11ad8:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
   11adc:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
   11ae0:	48 8d 35 c1 47 00 00 	lea    rsi,[rip+0x47c1]        # 162a8 <quoting_style_vals+0x208>
   11ae7:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
   11aeb:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
   11aef:	ba 05 00 00 00       	mov    edx,0x5
   11af4:	4c 8b 6b 10          	mov    r13,QWORD PTR [rbx+0x10]
   11af8:	31 ff                	xor    edi,edi
   11afa:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
   11afd:	4c 89 04 24          	mov    QWORD PTR [rsp],r8
   11b01:	e8 6a 11 ff ff       	call   2c70 <dcgettext@plt>
   11b06:	48 83 ec 08          	sub    rsp,0x8
   11b0a:	4d 89 e9             	mov    r9,r13
   11b0d:	41 54                	push   r12
   11b0f:	41 57                	push   r15
   11b11:	41 56                	push   r14
   11b13:	4c 8b 44 24 20       	mov    r8,QWORD PTR [rsp+0x20]
   11b18:	48 89 d9             	mov    rcx,rbx
   11b1b:	48 89 c2             	mov    rdx,rax
   11b1e:	48 89 ef             	mov    rdi,rbp
   11b21:	be 01 00 00 00       	mov    esi,0x1
   11b26:	31 c0                	xor    eax,eax
   11b28:	e8 d3 15 ff ff       	call   3100 <__fprintf_chk@plt>
   11b2d:	48 83 c4 20          	add    rsp,0x20
   11b31:	48 83 c4 28          	add    rsp,0x28
   11b35:	5b                   	pop    rbx
   11b36:	5d                   	pop    rbp
   11b37:	41 5c                	pop    r12
   11b39:	41 5d                	pop    r13
   11b3b:	41 5e                	pop    r14
   11b3d:	41 5f                	pop    r15
   11b3f:	c3                   	ret    
   11b40:	4c 8b 4b 10          	mov    r9,QWORD PTR [rbx+0x10]
   11b44:	4c 8b 6b 30          	mov    r13,QWORD PTR [rbx+0x30]
   11b48:	48 8d 35 81 47 00 00 	lea    rsi,[rip+0x4781]        # 162d0 <quoting_style_vals+0x230>
   11b4f:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
   11b53:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
   11b57:	ba 05 00 00 00       	mov    edx,0x5
   11b5c:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
   11b60:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
   11b64:	31 ff                	xor    edi,edi
   11b66:	4c 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],r9
   11b6b:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
   11b6e:	4c 89 04 24          	mov    QWORD PTR [rsp],r8
   11b72:	e8 f9 10 ff ff       	call   2c70 <dcgettext@plt>
   11b77:	41 55                	push   r13
   11b79:	41 54                	push   r12
   11b7b:	41 57                	push   r15
   11b7d:	41 56                	push   r14
   11b7f:	4c 8b 4c 24 28       	mov    r9,QWORD PTR [rsp+0x28]
   11b84:	eb 8d                	jmp    11b13 <version_etc_arn+0x353>
   11b86:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   11b8d:	00 00 00 
   11b90:	4c 8b 53 40          	mov    r10,QWORD PTR [rbx+0x40]
   11b94:	4c 8b 4b 38          	mov    r9,QWORD PTR [rbx+0x38]
   11b98:	ba 05 00 00 00       	mov    edx,0x5
   11b9d:	48 8b 43 10          	mov    rax,QWORD PTR [rbx+0x10]
   11ba1:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
   11ba5:	48 8d 35 bc 47 00 00 	lea    rsi,[rip+0x47bc]        # 16368 <quoting_style_vals+0x2c8>
   11bac:	4c 8b 6b 30          	mov    r13,QWORD PTR [rbx+0x30]
   11bb0:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
   11bb4:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
   11bb8:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
   11bbc:	4c 89 54 24 18       	mov    QWORD PTR [rsp+0x18],r10
   11bc1:	4c 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],r9
   11bc6:	48 89 04 24          	mov    QWORD PTR [rsp],rax
   11bca:	4c 89 44 24 08       	mov    QWORD PTR [rsp+0x8],r8
   11bcf:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
   11bd2:	e9 8b fd ff ff       	jmp    11962 <version_etc_arn+0x1a2>
   11bd7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   11bde:	00 00 

0000000000011be0 <version_etc_ar>:
   11be0:	45 31 c9             	xor    r9d,r9d
   11be3:	49 83 38 00          	cmp    QWORD PTR [r8],0x0
   11be7:	74 12                	je     11bfb <version_etc_ar+0x1b>
   11be9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   11bf0:	49 83 c1 01          	add    r9,0x1
   11bf4:	4b 83 3c c8 00       	cmp    QWORD PTR [r8+r9*8],0x0
   11bf9:	75 f5                	jne    11bf0 <version_etc_ar+0x10>
   11bfb:	e9 c0 fb ff ff       	jmp    117c0 <version_etc_arn>

0000000000011c00 <version_etc_va>:
   11c00:	48 83 ec 68          	sub    rsp,0x68
   11c04:	4d 89 c2             	mov    r10,r8
   11c07:	45 31 c9             	xor    r9d,r9d
   11c0a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
   11c11:	00 00 
   11c13:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
   11c18:	31 c0                	xor    eax,eax
   11c1a:	49 89 e0             	mov    r8,rsp
   11c1d:	0f 1f 00             	nop    DWORD PTR [rax]
   11c20:	41 8b 02             	mov    eax,DWORD PTR [r10]
   11c23:	83 f8 2f             	cmp    eax,0x2f
   11c26:	77 42                	ja     11c6a <version_etc_va+0x6a>
   11c28:	41 89 c3             	mov    r11d,eax
   11c2b:	4d 03 5a 10          	add    r11,QWORD PTR [r10+0x10]
   11c2f:	83 c0 08             	add    eax,0x8
   11c32:	41 89 02             	mov    DWORD PTR [r10],eax
   11c35:	49 8b 03             	mov    rax,QWORD PTR [r11]
   11c38:	48 85 c0             	test   rax,rax
   11c3b:	4b 89 04 c8          	mov    QWORD PTR [r8+r9*8],rax
   11c3f:	74 0a                	je     11c4b <version_etc_va+0x4b>
   11c41:	49 83 c1 01          	add    r9,0x1
   11c45:	49 83 f9 0a          	cmp    r9,0xa
   11c49:	75 d5                	jne    11c20 <version_etc_va+0x20>
   11c4b:	e8 70 fb ff ff       	call   117c0 <version_etc_arn>
   11c50:	48 8b 44 24 58       	mov    rax,QWORD PTR [rsp+0x58]
   11c55:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
   11c5c:	00 00 
   11c5e:	75 05                	jne    11c65 <version_etc_va+0x65>
   11c60:	48 83 c4 68          	add    rsp,0x68
   11c64:	c3                   	ret    
   11c65:	e8 36 10 ff ff       	call   2ca0 <__stack_chk_fail@plt>
   11c6a:	4d 8b 5a 08          	mov    r11,QWORD PTR [r10+0x8]
   11c6e:	49 8d 43 08          	lea    rax,[r11+0x8]
   11c72:	49 89 42 08          	mov    QWORD PTR [r10+0x8],rax
   11c76:	eb bd                	jmp    11c35 <version_etc_va+0x35>
   11c78:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   11c7f:	00 

0000000000011c80 <version_etc>:
   11c80:	55                   	push   rbp
   11c81:	53                   	push   rbx
   11c82:	41 ba 20 00 00 00    	mov    r10d,0x20
   11c88:	45 31 db             	xor    r11d,r11d
   11c8b:	48 81 ec b8 00 00 00 	sub    rsp,0xb8
   11c92:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
   11c99:	00 00 
   11c9b:	48 89 44 24 78       	mov    QWORD PTR [rsp+0x78],rax
   11ca0:	31 c0                	xor    eax,eax
   11ca2:	48 8d 84 24 d0 00 00 	lea    rax,[rsp+0xd0]
   11ca9:	00 
   11caa:	4c 89 84 24 a0 00 00 	mov    QWORD PTR [rsp+0xa0],r8
   11cb1:	00 
   11cb2:	48 8d 9c 24 d0 00 00 	lea    rbx,[rsp+0xd0]
   11cb9:	00 
   11cba:	4c 8d 44 24 20       	lea    r8,[rsp+0x20]
   11cbf:	4c 89 8c 24 a8 00 00 	mov    QWORD PTR [rsp+0xa8],r9
   11cc6:	00 
   11cc7:	c7 44 24 08 20 00 00 	mov    DWORD PTR [rsp+0x8],0x20
   11cce:	00 
   11ccf:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
   11cd4:	48 8d 84 24 80 00 00 	lea    rax,[rsp+0x80]
   11cdb:	00 
   11cdc:	45 31 c9             	xor    r9d,r9d
   11cdf:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
   11ce4:	48 89 c5             	mov    rbp,rax
   11ce7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   11cee:	00 00 
   11cf0:	41 83 fa 2f          	cmp    r10d,0x2f
   11cf4:	77 56                	ja     11d4c <version_etc+0xcc>
   11cf6:	44 89 d0             	mov    eax,r10d
   11cf9:	41 bb 01 00 00 00    	mov    r11d,0x1
   11cff:	41 83 c2 08          	add    r10d,0x8
   11d03:	48 01 e8             	add    rax,rbp
   11d06:	48 8b 00             	mov    rax,QWORD PTR [rax]
   11d09:	48 85 c0             	test   rax,rax
   11d0c:	4b 89 04 c8          	mov    QWORD PTR [r8+r9*8],rax
   11d10:	74 0a                	je     11d1c <version_etc+0x9c>
   11d12:	49 83 c1 01          	add    r9,0x1
   11d16:	49 83 f9 0a          	cmp    r9,0xa
   11d1a:	75 d4                	jne    11cf0 <version_etc+0x70>
   11d1c:	45 84 db             	test   r11b,r11b
   11d1f:	75 24                	jne    11d45 <version_etc+0xc5>
   11d21:	e8 9a fa ff ff       	call   117c0 <version_etc_arn>
   11d26:	48 8b 44 24 78       	mov    rax,QWORD PTR [rsp+0x78]
   11d2b:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
   11d32:	00 00 
   11d34:	75 0a                	jne    11d40 <version_etc+0xc0>
   11d36:	48 81 c4 b8 00 00 00 	add    rsp,0xb8
   11d3d:	5b                   	pop    rbx
   11d3e:	5d                   	pop    rbp
   11d3f:	c3                   	ret    
   11d40:	e8 5b 0f ff ff       	call   2ca0 <__stack_chk_fail@plt>
   11d45:	44 89 54 24 08       	mov    DWORD PTR [rsp+0x8],r10d
   11d4a:	eb d5                	jmp    11d21 <version_etc+0xa1>
   11d4c:	48 89 d8             	mov    rax,rbx
   11d4f:	48 83 c3 08          	add    rbx,0x8
   11d53:	eb b1                	jmp    11d06 <version_etc+0x86>
   11d55:	90                   	nop
   11d56:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   11d5d:	00 00 00 

0000000000011d60 <emit_bug_reporting_address>:
   11d60:	53                   	push   rbx
   11d61:	48 8d 35 e9 43 00 00 	lea    rsi,[rip+0x43e9]        # 16151 <quoting_style_vals+0xb1>
   11d68:	ba 05 00 00 00       	mov    edx,0x5
   11d6d:	31 ff                	xor    edi,edi
   11d6f:	e8 fc 0e ff ff       	call   2c70 <dcgettext@plt>
   11d74:	48 8d 15 eb 43 00 00 	lea    rdx,[rip+0x43eb]        # 16166 <quoting_style_vals+0xc6>
   11d7b:	48 89 c6             	mov    rsi,rax
   11d7e:	bf 01 00 00 00       	mov    edi,0x1
   11d83:	31 c0                	xor    eax,eax
   11d85:	e8 16 12 ff ff       	call   2fa0 <__printf_chk@plt>
   11d8a:	48 8d 35 eb 43 00 00 	lea    rsi,[rip+0x43eb]        # 1617c <quoting_style_vals+0xdc>
   11d91:	ba 05 00 00 00       	mov    edx,0x5
   11d96:	31 ff                	xor    edi,edi
   11d98:	e8 d3 0e ff ff       	call   2c70 <dcgettext@plt>
   11d9d:	48 8d 0d 74 32 00 00 	lea    rcx,[rip+0x3274]        # 15018 <short_options+0x1148>
   11da4:	48 8d 15 ed 37 00 00 	lea    rdx,[rip+0x37ed]        # 15598 <short_options+0x16c8>
   11dab:	48 89 c6             	mov    rsi,rax
   11dae:	bf 01 00 00 00       	mov    edi,0x1
   11db3:	31 c0                	xor    eax,eax
   11db5:	e8 e6 11 ff ff       	call   2fa0 <__printf_chk@plt>
   11dba:	48 8b 1d 07 84 20 00 	mov    rbx,QWORD PTR [rip+0x208407]        # 21a1c8 <stdout@@GLIBC_2.2.5>
   11dc1:	48 8d 35 e0 45 00 00 	lea    rsi,[rip+0x45e0]        # 163a8 <quoting_style_vals+0x308>
   11dc8:	31 ff                	xor    edi,edi
   11dca:	ba 05 00 00 00       	mov    edx,0x5
   11dcf:	e8 9c 0e ff ff       	call   2c70 <dcgettext@plt>
   11dd4:	48 89 de             	mov    rsi,rbx
   11dd7:	48 89 c7             	mov    rdi,rax
   11dda:	5b                   	pop    rbx
   11ddb:	e9 30 10 ff ff       	jmp    2e10 <fputs_unlocked@plt>

0000000000011de0 <xmalloc>:
   11de0:	53                   	push   rbx
   11de1:	48 89 fb             	mov    rbx,rdi
   11de4:	e8 df 13 ff ff       	call   31c8 <malloc@plt>
   11de9:	48 85 c0             	test   rax,rax
   11dec:	75 05                	jne    11df3 <xmalloc+0x13>
   11dee:	48 85 db             	test   rbx,rbx
   11df1:	75 02                	jne    11df5 <xmalloc+0x15>
   11df3:	5b                   	pop    rbx
   11df4:	c3                   	ret    
   11df5:	e8 36 02 00 00       	call   12030 <xalloc_die>
   11dfa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000011e00 <xnmalloc>:
   11e00:	48 89 f8             	mov    rax,rdi
   11e03:	48 f7 e6             	mul    rsi
   11e06:	48 89 c7             	mov    rdi,rax
   11e09:	0f 90 c0             	seto   al
   11e0c:	48 85 ff             	test   rdi,rdi
   11e0f:	78 0a                	js     11e1b <xnmalloc+0x1b>
   11e11:	0f b6 c0             	movzx  eax,al
   11e14:	48 85 c0             	test   rax,rax
   11e17:	75 02                	jne    11e1b <xnmalloc+0x1b>
   11e19:	eb c5                	jmp    11de0 <xmalloc>
   11e1b:	48 83 ec 08          	sub    rsp,0x8
   11e1f:	e8 0c 02 00 00       	call   12030 <xalloc_die>
   11e24:	66 90                	xchg   ax,ax
   11e26:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   11e2d:	00 00 00 

0000000000011e30 <xcharalloc>:
   11e30:	eb ae                	jmp    11de0 <xmalloc>
   11e32:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   11e36:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   11e3d:	00 00 00 

0000000000011e40 <xrealloc>:
   11e40:	48 85 f6             	test   rsi,rsi
   11e43:	53                   	push   rbx
   11e44:	48 89 f3             	mov    rbx,rsi
   11e47:	75 05                	jne    11e4e <xrealloc+0xe>
   11e49:	48 85 ff             	test   rdi,rdi
   11e4c:	75 1a                	jne    11e68 <xrealloc+0x28>
   11e4e:	48 89 de             	mov    rsi,rbx
   11e51:	e8 1a 11 ff ff       	call   2f70 <realloc@plt>
   11e56:	48 85 c0             	test   rax,rax
   11e59:	75 05                	jne    11e60 <xrealloc+0x20>
   11e5b:	48 85 db             	test   rbx,rbx
   11e5e:	75 11                	jne    11e71 <xrealloc+0x31>
   11e60:	5b                   	pop    rbx
   11e61:	c3                   	ret    
   11e62:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
   11e68:	e8 53 13 ff ff       	call   31c0 <free@plt>
   11e6d:	31 c0                	xor    eax,eax
   11e6f:	5b                   	pop    rbx
   11e70:	c3                   	ret    
   11e71:	e8 ba 01 00 00       	call   12030 <xalloc_die>
   11e76:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   11e7d:	00 00 00 

0000000000011e80 <xnrealloc>:
   11e80:	48 89 f0             	mov    rax,rsi
   11e83:	48 f7 e2             	mul    rdx
   11e86:	48 89 c6             	mov    rsi,rax
   11e89:	0f 90 c0             	seto   al
   11e8c:	48 85 f6             	test   rsi,rsi
   11e8f:	78 0a                	js     11e9b <xnrealloc+0x1b>
   11e91:	0f b6 c0             	movzx  eax,al
   11e94:	48 85 c0             	test   rax,rax
   11e97:	75 02                	jne    11e9b <xnrealloc+0x1b>
   11e99:	eb a5                	jmp    11e40 <xrealloc>
   11e9b:	48 83 ec 08          	sub    rsp,0x8
   11e9f:	e8 8c 01 00 00       	call   12030 <xalloc_die>
   11ea4:	66 90                	xchg   ax,ax
   11ea6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   11ead:	00 00 00 

0000000000011eb0 <x2nrealloc>:
   11eb0:	48 85 ff             	test   rdi,rdi
   11eb3:	49 89 d1             	mov    r9,rdx
   11eb6:	48 8b 0e             	mov    rcx,QWORD PTR [rsi]
   11eb9:	74 35                	je     11ef0 <x2nrealloc+0x40>
   11ebb:	31 d2                	xor    edx,edx
   11ebd:	48 b8 54 55 55 55 55 	movabs rax,0x5555555555555554
   11ec4:	55 55 55 
   11ec7:	49 f7 f1             	div    r9
   11eca:	48 39 c8             	cmp    rax,rcx
   11ecd:	76 3c                	jbe    11f0b <x2nrealloc+0x5b>
   11ecf:	48 89 c8             	mov    rax,rcx
   11ed2:	48 d1 e8             	shr    rax,1
   11ed5:	48 8d 4c 08 01       	lea    rcx,[rax+rcx*1+0x1]
   11eda:	48 89 0e             	mov    QWORD PTR [rsi],rcx
   11edd:	49 0f af c9          	imul   rcx,r9
   11ee1:	48 89 ce             	mov    rsi,rcx
   11ee4:	e9 57 ff ff ff       	jmp    11e40 <xrealloc>
   11ee9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   11ef0:	48 85 c9             	test   rcx,rcx
   11ef3:	74 23                	je     11f18 <x2nrealloc+0x68>
   11ef5:	48 89 c8             	mov    rax,rcx
   11ef8:	49 f7 e1             	mul    r9
   11efb:	0f 90 c2             	seto   dl
   11efe:	48 85 c0             	test   rax,rax
   11f01:	0f b6 d2             	movzx  edx,dl
   11f04:	78 05                	js     11f0b <x2nrealloc+0x5b>
   11f06:	48 85 d2             	test   rdx,rdx
   11f09:	74 cf                	je     11eda <x2nrealloc+0x2a>
   11f0b:	48 83 ec 08          	sub    rsp,0x8
   11f0f:	e8 1c 01 00 00       	call   12030 <xalloc_die>
   11f14:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   11f18:	31 d2                	xor    edx,edx
   11f1a:	b8 80 00 00 00       	mov    eax,0x80
   11f1f:	45 31 c0             	xor    r8d,r8d
   11f22:	49 f7 f1             	div    r9
   11f25:	48 85 c0             	test   rax,rax
   11f28:	41 0f 94 c0          	sete   r8b
   11f2c:	49 8d 0c 00          	lea    rcx,[r8+rax*1]
   11f30:	eb c3                	jmp    11ef5 <x2nrealloc+0x45>
   11f32:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   11f36:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   11f3d:	00 00 00 

0000000000011f40 <x2realloc>:
   11f40:	48 85 ff             	test   rdi,rdi
   11f43:	48 8b 06             	mov    rax,QWORD PTR [rsi]
   11f46:	74 28                	je     11f70 <x2realloc+0x30>
   11f48:	48 ba 53 55 55 55 55 	movabs rdx,0x5555555555555553
   11f4f:	55 55 55 
   11f52:	48 39 d0             	cmp    rax,rdx
   11f55:	77 2a                	ja     11f81 <x2realloc+0x41>
   11f57:	48 89 c2             	mov    rdx,rax
   11f5a:	48 d1 ea             	shr    rdx,1
   11f5d:	48 8d 44 02 01       	lea    rax,[rdx+rax*1+0x1]
   11f62:	48 89 06             	mov    QWORD PTR [rsi],rax
   11f65:	48 89 c6             	mov    rsi,rax
   11f68:	e9 d3 fe ff ff       	jmp    11e40 <xrealloc>
   11f6d:	0f 1f 00             	nop    DWORD PTR [rax]
   11f70:	48 85 c0             	test   rax,rax
   11f73:	ba 80 00 00 00       	mov    edx,0x80
   11f78:	48 0f 44 c2          	cmove  rax,rdx
   11f7c:	48 85 c0             	test   rax,rax
   11f7f:	79 e1                	jns    11f62 <x2realloc+0x22>
   11f81:	48 83 ec 08          	sub    rsp,0x8
   11f85:	e8 a6 00 00 00       	call   12030 <xalloc_die>
   11f8a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000011f90 <xzalloc>:
   11f90:	53                   	push   rbx
   11f91:	48 89 fb             	mov    rbx,rdi
   11f94:	e8 47 fe ff ff       	call   11de0 <xmalloc>
   11f99:	48 89 da             	mov    rdx,rbx
   11f9c:	31 f6                	xor    esi,esi
   11f9e:	48 89 c7             	mov    rdi,rax
   11fa1:	5b                   	pop    rbx
   11fa2:	e9 e9 0d ff ff       	jmp    2d90 <memset@plt>
   11fa7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   11fae:	00 00 

0000000000011fb0 <xcalloc>:
   11fb0:	48 89 f8             	mov    rax,rdi
   11fb3:	48 83 ec 08          	sub    rsp,0x8
   11fb7:	48 f7 e6             	mul    rsi
   11fba:	0f 90 c2             	seto   dl
   11fbd:	48 85 c0             	test   rax,rax
   11fc0:	78 17                	js     11fd9 <xcalloc+0x29>
   11fc2:	0f b6 d2             	movzx  edx,dl
   11fc5:	48 85 d2             	test   rdx,rdx
   11fc8:	75 0f                	jne    11fd9 <xcalloc+0x29>
   11fca:	e8 51 0e ff ff       	call   2e20 <calloc@plt>
   11fcf:	48 85 c0             	test   rax,rax
   11fd2:	74 05                	je     11fd9 <xcalloc+0x29>
   11fd4:	48 83 c4 08          	add    rsp,0x8
   11fd8:	c3                   	ret    
   11fd9:	e8 52 00 00 00       	call   12030 <xalloc_die>
   11fde:	66 90                	xchg   ax,ax

0000000000011fe0 <xmemdup>:
   11fe0:	55                   	push   rbp
   11fe1:	53                   	push   rbx
   11fe2:	48 89 fd             	mov    rbp,rdi
   11fe5:	48 89 f7             	mov    rdi,rsi
   11fe8:	48 89 f3             	mov    rbx,rsi
   11feb:	48 83 ec 08          	sub    rsp,0x8
   11fef:	e8 ec fd ff ff       	call   11de0 <xmalloc>
   11ff4:	48 83 c4 08          	add    rsp,0x8
   11ff8:	48 89 da             	mov    rdx,rbx
   11ffb:	48 89 ee             	mov    rsi,rbp
   11ffe:	5b                   	pop    rbx
   11fff:	5d                   	pop    rbp
   12000:	48 89 c7             	mov    rdi,rax
   12003:	e9 78 0e ff ff       	jmp    2e80 <memcpy@plt>
   12008:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   1200f:	00 

0000000000012010 <xstrdup>:
   12010:	53                   	push   rbx
   12011:	48 89 fb             	mov    rbx,rdi
   12014:	e8 77 0c ff ff       	call   2c90 <strlen@plt>
   12019:	48 89 df             	mov    rdi,rbx
   1201c:	48 8d 70 01          	lea    rsi,[rax+0x1]
   12020:	5b                   	pop    rbx
   12021:	eb bd                	jmp    11fe0 <xmemdup>
   12023:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   1202a:	00 00 00 
   1202d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000012030 <xalloc_die>:
   12030:	48 8d 35 18 44 00 00 	lea    rsi,[rip+0x4418]        # 1644f <version_etc_copyright+0x2f>
   12037:	48 83 ec 08          	sub    rsp,0x8
   1203b:	ba 05 00 00 00       	mov    edx,0x5
   12040:	31 ff                	xor    edi,edi
   12042:	e8 29 0c ff ff       	call   2c70 <dcgettext@plt>
   12047:	8b 3d e3 80 20 00    	mov    edi,DWORD PTR [rip+0x2080e3]        # 21a130 <exit_failure>
   1204d:	48 8d 15 00 3a 00 00 	lea    rdx,[rip+0x3a00]        # 15a54 <short_options+0x1b84>
   12054:	48 89 c1             	mov    rcx,rax
   12057:	31 f6                	xor    esi,esi
   12059:	31 c0                	xor    eax,eax
   1205b:	e8 80 0f ff ff       	call   2fe0 <error@plt>
   12060:	e8 9b 0a ff ff       	call   2b00 <abort@plt>
   12065:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   1206c:	00 00 00 
   1206f:	90                   	nop

0000000000012070 <collate_error>:
   12070:	41 56                	push   r14
   12072:	41 55                	push   r13
   12074:	41 89 fe             	mov    r14d,edi
   12077:	41 54                	push   r12
   12079:	55                   	push   rbp
   1207a:	49 89 d4             	mov    r12,rdx
   1207d:	53                   	push   rbx
   1207e:	48 89 f3             	mov    rbx,rsi
   12081:	48 8d 35 d8 43 00 00 	lea    rsi,[rip+0x43d8]        # 16460 <version_etc_copyright+0x40>
   12088:	ba 05 00 00 00       	mov    edx,0x5
   1208d:	31 ff                	xor    edi,edi
   1208f:	4d 89 c5             	mov    r13,r8
   12092:	48 89 cd             	mov    rbp,rcx
   12095:	e8 d6 0b ff ff       	call   2c70 <dcgettext@plt>
   1209a:	44 89 f6             	mov    esi,r14d
   1209d:	48 89 c2             	mov    rdx,rax
   120a0:	31 ff                	xor    edi,edi
   120a2:	31 c0                	xor    eax,eax
   120a4:	e8 37 0f ff ff       	call   2fe0 <error@plt>
   120a9:	48 8d 35 d0 43 00 00 	lea    rsi,[rip+0x43d0]        # 16480 <version_etc_copyright+0x60>
   120b0:	ba 05 00 00 00       	mov    edx,0x5
   120b5:	31 ff                	xor    edi,edi
   120b7:	e8 b4 0b ff ff       	call   2c70 <dcgettext@plt>
   120bc:	31 f6                	xor    esi,esi
   120be:	48 89 c2             	mov    rdx,rax
   120c1:	31 ff                	xor    edi,edi
   120c3:	31 c0                	xor    eax,eax
   120c5:	e8 16 0f ff ff       	call   2fe0 <error@plt>
   120ca:	4c 89 e9             	mov    rcx,r13
   120cd:	48 89 ea             	mov    rdx,rbp
   120d0:	be 08 00 00 00       	mov    esi,0x8
   120d5:	bf 01 00 00 00       	mov    edi,0x1
   120da:	e8 51 df ff ff       	call   10030 <quotearg_n_style_mem>
   120df:	4c 89 e1             	mov    rcx,r12
   120e2:	48 89 da             	mov    rdx,rbx
   120e5:	be 08 00 00 00       	mov    esi,0x8
   120ea:	31 ff                	xor    edi,edi
   120ec:	48 89 c5             	mov    rbp,rax
   120ef:	e8 3c df ff ff       	call   10030 <quotearg_n_style_mem>
   120f4:	48 8d 35 b5 43 00 00 	lea    rsi,[rip+0x43b5]        # 164b0 <version_etc_copyright+0x90>
   120fb:	48 89 c3             	mov    rbx,rax
   120fe:	ba 05 00 00 00       	mov    edx,0x5
   12103:	31 ff                	xor    edi,edi
   12105:	e8 66 0b ff ff       	call   2c70 <dcgettext@plt>
   1210a:	49 89 e8             	mov    r8,rbp
   1210d:	48 89 d9             	mov    rcx,rbx
   12110:	8b 3d 1a 80 20 00    	mov    edi,DWORD PTR [rip+0x20801a]        # 21a130 <exit_failure>
   12116:	5b                   	pop    rbx
   12117:	5d                   	pop    rbp
   12118:	41 5c                	pop    r12
   1211a:	41 5d                	pop    r13
   1211c:	41 5e                	pop    r14
   1211e:	48 89 c2             	mov    rdx,rax
   12121:	31 f6                	xor    esi,esi
   12123:	31 c0                	xor    eax,eax
   12125:	e9 b6 0e ff ff       	jmp    2fe0 <error@plt>
   1212a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000012130 <xmemcoll>:
   12130:	41 56                	push   r14
   12132:	41 55                	push   r13
   12134:	49 89 cd             	mov    r13,rcx
   12137:	41 54                	push   r12
   12139:	55                   	push   rbp
   1213a:	49 89 d4             	mov    r12,rdx
   1213d:	53                   	push   rbx
   1213e:	48 89 f5             	mov    rbp,rsi
   12141:	48 89 fb             	mov    rbx,rdi
   12144:	e8 57 15 00 00       	call   136a0 <memcoll>
   12149:	41 89 c6             	mov    r14d,eax
   1214c:	e8 bf 09 ff ff       	call   2b10 <__errno_location@plt>
   12151:	8b 38                	mov    edi,DWORD PTR [rax]
   12153:	85 ff                	test   edi,edi
   12155:	74 11                	je     12168 <xmemcoll+0x38>
   12157:	4d 89 e8             	mov    r8,r13
   1215a:	4c 89 e1             	mov    rcx,r12
   1215d:	48 89 ea             	mov    rdx,rbp
   12160:	48 89 de             	mov    rsi,rbx
   12163:	e8 08 ff ff ff       	call   12070 <collate_error>
   12168:	5b                   	pop    rbx
   12169:	44 89 f0             	mov    eax,r14d
   1216c:	5d                   	pop    rbp
   1216d:	41 5c                	pop    r12
   1216f:	41 5d                	pop    r13
   12171:	41 5e                	pop    r14
   12173:	c3                   	ret    
   12174:	66 90                	xchg   ax,ax
   12176:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   1217d:	00 00 00 

0000000000012180 <xmemcoll0>:
   12180:	41 56                	push   r14
   12182:	41 55                	push   r13
   12184:	49 89 ce             	mov    r14,rcx
   12187:	41 54                	push   r12
   12189:	55                   	push   rbp
   1218a:	49 89 d4             	mov    r12,rdx
   1218d:	53                   	push   rbx
   1218e:	48 89 fd             	mov    rbp,rdi
   12191:	48 89 f3             	mov    rbx,rsi
   12194:	e8 b7 15 00 00       	call   13750 <memcoll0>
   12199:	41 89 c5             	mov    r13d,eax
   1219c:	e8 6f 09 ff ff       	call   2b10 <__errno_location@plt>
   121a1:	8b 38                	mov    edi,DWORD PTR [rax]
   121a3:	85 ff                	test   edi,edi
   121a5:	74 13                	je     121ba <xmemcoll0+0x3a>
   121a7:	48 8d 53 ff          	lea    rdx,[rbx-0x1]
   121ab:	4d 8d 46 ff          	lea    r8,[r14-0x1]
   121af:	4c 89 e1             	mov    rcx,r12
   121b2:	48 89 ee             	mov    rsi,rbp
   121b5:	e8 b6 fe ff ff       	call   12070 <collate_error>
   121ba:	5b                   	pop    rbx
   121bb:	44 89 e8             	mov    eax,r13d
   121be:	5d                   	pop    rbp
   121bf:	41 5c                	pop    r12
   121c1:	41 5d                	pop    r13
   121c3:	41 5e                	pop    r14
   121c5:	c3                   	ret    
   121c6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   121cd:	00 00 00 

00000000000121d0 <xnanosleep>:
   121d0:	55                   	push   rbp
   121d1:	53                   	push   rbx
   121d2:	48 83 ec 28          	sub    rsp,0x28
   121d6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
   121dd:	00 00 
   121df:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
   121e4:	31 c0                	xor    eax,eax
   121e6:	48 89 e5             	mov    rbp,rsp
   121e9:	e8 f2 11 00 00       	call   133e0 <dtotimespec>
   121ee:	48 89 04 24          	mov    QWORD PTR [rsp],rax
   121f2:	48 89 54 24 08       	mov    QWORD PTR [rsp+0x8],rdx
   121f7:	e8 14 09 ff ff       	call   2b10 <__errno_location@plt>
   121fc:	48 89 c3             	mov    rbx,rax
   121ff:	eb 0f                	jmp    12210 <xnanosleep+0x40>
   12201:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   12208:	f7 03 fb ff ff ff    	test   DWORD PTR [rbx],0xfffffffb
   1220e:	75 30                	jne    12240 <xnanosleep+0x70>
   12210:	31 f6                	xor    esi,esi
   12212:	c7 03 00 00 00 00    	mov    DWORD PTR [rbx],0x0
   12218:	48 89 ef             	mov    rdi,rbp
   1221b:	e8 50 0d 00 00       	call   12f70 <rpl_nanosleep>
   12220:	85 c0                	test   eax,eax
   12222:	75 e4                	jne    12208 <xnanosleep+0x38>
   12224:	48 8b 54 24 18       	mov    rdx,QWORD PTR [rsp+0x18]
   12229:	64 48 33 14 25 28 00 	xor    rdx,QWORD PTR fs:0x28
   12230:	00 00 
   12232:	75 13                	jne    12247 <xnanosleep+0x77>
   12234:	48 83 c4 28          	add    rsp,0x28
   12238:	5b                   	pop    rbx
   12239:	5d                   	pop    rbp
   1223a:	c3                   	ret    
   1223b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   12240:	b8 ff ff ff ff       	mov    eax,0xffffffff
   12245:	eb dd                	jmp    12224 <xnanosleep+0x54>
   12247:	e8 54 0a ff ff       	call   2ca0 <__stack_chk_fail@plt>
   1224c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000012250 <xstrtoul>:
   12250:	41 57                	push   r15
   12252:	41 56                	push   r14
   12254:	41 55                	push   r13
   12256:	41 54                	push   r12
   12258:	55                   	push   rbp
   12259:	53                   	push   rbx
   1225a:	48 83 ec 28          	sub    rsp,0x28
   1225e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
   12265:	00 00 
   12267:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
   1226c:	31 c0                	xor    eax,eax
   1226e:	83 fa 24             	cmp    edx,0x24
   12271:	0f 87 5e 03 00 00    	ja     125d5 <xstrtoul+0x385>
   12277:	48 8d 44 24 10       	lea    rax,[rsp+0x10]
   1227c:	49 89 f7             	mov    r15,rsi
   1227f:	48 85 f6             	test   rsi,rsi
   12282:	48 89 fd             	mov    rbp,rdi
   12285:	89 54 24 08          	mov    DWORD PTR [rsp+0x8],edx
   12289:	49 89 ce             	mov    r14,rcx
   1228c:	4d 89 c5             	mov    r13,r8
   1228f:	4c 0f 44 f8          	cmove  r15,rax
   12293:	e8 78 08 ff ff       	call   2b10 <__errno_location@plt>
   12298:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
   1229e:	49 89 c4             	mov    r12,rax
   122a1:	0f b6 5d 00          	movzx  ebx,BYTE PTR [rbp+0x0]
   122a5:	e8 06 0f ff ff       	call   31b0 <__ctype_b_loc@plt>
   122aa:	8b 54 24 08          	mov    edx,DWORD PTR [rsp+0x8]
   122ae:	48 8b 30             	mov    rsi,QWORD PTR [rax]
   122b1:	48 89 e8             	mov    rax,rbp
   122b4:	eb 11                	jmp    122c7 <xstrtoul+0x77>
   122b6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   122bd:	00 00 00 
   122c0:	48 83 c0 01          	add    rax,0x1
   122c4:	0f b6 18             	movzx  ebx,BYTE PTR [rax]
   122c7:	0f b6 cb             	movzx  ecx,bl
   122ca:	f6 44 4e 01 20       	test   BYTE PTR [rsi+rcx*2+0x1],0x20
   122cf:	75 ef                	jne    122c0 <xstrtoul+0x70>
   122d1:	80 fb 2d             	cmp    bl,0x2d
   122d4:	74 52                	je     12328 <xstrtoul+0xd8>
   122d6:	4c 89 fe             	mov    rsi,r15
   122d9:	48 89 ef             	mov    rdi,rbp
   122dc:	e8 9f 0d ff ff       	call   3080 <strtoul@plt>
   122e1:	49 8b 0f             	mov    rcx,QWORD PTR [r15]
   122e4:	48 89 c3             	mov    rbx,rax
   122e7:	48 39 e9             	cmp    rcx,rbp
   122ea:	74 2c                	je     12318 <xstrtoul+0xc8>
   122ec:	41 8b 04 24          	mov    eax,DWORD PTR [r12]
   122f0:	85 c0                	test   eax,eax
   122f2:	74 64                	je     12358 <xstrtoul+0x108>
   122f4:	83 f8 22             	cmp    eax,0x22
   122f7:	bd 01 00 00 00       	mov    ebp,0x1
   122fc:	75 2a                	jne    12328 <xstrtoul+0xd8>
   122fe:	4d 85 ed             	test   r13,r13
   12301:	74 09                	je     1230c <xstrtoul+0xbc>
   12303:	44 0f b6 21          	movzx  r12d,BYTE PTR [rcx]
   12307:	45 84 e4             	test   r12b,r12b
   1230a:	75 7b                	jne    12387 <xstrtoul+0x137>
   1230c:	49 89 1e             	mov    QWORD PTR [r14],rbx
   1230f:	eb 1c                	jmp    1232d <xstrtoul+0xdd>
   12311:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   12318:	4d 85 ed             	test   r13,r13
   1231b:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
   12320:	75 3e                	jne    12360 <xstrtoul+0x110>
   12322:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
   12328:	bd 04 00 00 00       	mov    ebp,0x4
   1232d:	48 8b 7c 24 18       	mov    rdi,QWORD PTR [rsp+0x18]
   12332:	64 48 33 3c 25 28 00 	xor    rdi,QWORD PTR fs:0x28
   12339:	00 00 
   1233b:	89 e8                	mov    eax,ebp
   1233d:	0f 85 8d 02 00 00    	jne    125d0 <xstrtoul+0x380>
   12343:	48 83 c4 28          	add    rsp,0x28
   12347:	5b                   	pop    rbx
   12348:	5d                   	pop    rbp
   12349:	41 5c                	pop    r12
   1234b:	41 5d                	pop    r13
   1234d:	41 5e                	pop    r14
   1234f:	41 5f                	pop    r15
   12351:	c3                   	ret    
   12352:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
   12358:	31 ed                	xor    ebp,ebp
   1235a:	eb a2                	jmp    122fe <xstrtoul+0xae>
   1235c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   12360:	44 0f b6 65 00       	movzx  r12d,BYTE PTR [rbp+0x0]
   12365:	45 84 e4             	test   r12b,r12b
   12368:	74 be                	je     12328 <xstrtoul+0xd8>
   1236a:	41 0f be f4          	movsx  esi,r12b
   1236e:	4c 89 ef             	mov    rdi,r13
   12371:	31 ed                	xor    ebp,ebp
   12373:	e8 78 09 ff ff       	call   2cf0 <strchr@plt>
   12378:	48 85 c0             	test   rax,rax
   1237b:	bb 01 00 00 00       	mov    ebx,0x1
   12380:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
   12385:	74 a1                	je     12328 <xstrtoul+0xd8>
   12387:	41 0f be f4          	movsx  esi,r12b
   1238b:	4c 89 ef             	mov    rdi,r13
   1238e:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
   12393:	e8 58 09 ff ff       	call   2cf0 <strchr@plt>
   12398:	48 85 c0             	test   rax,rax
   1239b:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
   123a0:	0f 84 c6 00 00 00    	je     1246c <xstrtoul+0x21c>
   123a6:	41 8d 44 24 bb       	lea    eax,[r12-0x45]
   123ab:	3c 2f                	cmp    al,0x2f
   123ad:	77 51                	ja     12400 <xstrtoul+0x1b0>
   123af:	48 ba 45 89 30 00 44 	movabs rdx,0x814400308945
   123b6:	81 00 00 
   123b9:	48 0f a3 c2          	bt     rdx,rax
   123bd:	73 41                	jae    12400 <xstrtoul+0x1b0>
   123bf:	be 30 00 00 00       	mov    esi,0x30
   123c4:	4c 89 ef             	mov    rdi,r13
   123c7:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
   123cc:	e8 1f 09 ff ff       	call   2cf0 <strchr@plt>
   123d1:	48 85 c0             	test   rax,rax
   123d4:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
   123d9:	74 25                	je     12400 <xstrtoul+0x1b0>
   123db:	0f b6 41 01          	movzx  eax,BYTE PTR [rcx+0x1]
   123df:	3c 44                	cmp    al,0x44
   123e1:	74 0c                	je     123ef <xstrtoul+0x19f>
   123e3:	3c 69                	cmp    al,0x69
   123e5:	0f 84 cd 01 00 00    	je     125b8 <xstrtoul+0x368>
   123eb:	3c 42                	cmp    al,0x42
   123ed:	75 11                	jne    12400 <xstrtoul+0x1b0>
   123ef:	bf 02 00 00 00       	mov    edi,0x2
   123f4:	be e8 03 00 00       	mov    esi,0x3e8
   123f9:	eb 0f                	jmp    1240a <xstrtoul+0x1ba>
   123fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   12400:	bf 01 00 00 00       	mov    edi,0x1
   12405:	be 00 04 00 00       	mov    esi,0x400
   1240a:	41 83 ec 42          	sub    r12d,0x42
   1240e:	41 80 fc 35          	cmp    r12b,0x35
   12412:	77 58                	ja     1246c <xstrtoul+0x21c>
   12414:	48 8d 15 05 41 00 00 	lea    rdx,[rip+0x4105]        # 16520 <version_etc_copyright+0x100>
   1241b:	45 0f b6 e4          	movzx  r12d,r12b
   1241f:	4a 63 04 a2          	movsxd rax,DWORD PTR [rdx+r12*4]
   12423:	48 01 d0             	add    rax,rdx
   12426:	ff e0                	jmp    rax
   12428:	48 89 d8             	mov    rax,rbx
   1242b:	48 f7 e6             	mul    rsi
   1242e:	0f 80 ed 01 00 00    	jo     12621 <xstrtoul+0x3d1>
   12434:	45 31 c0             	xor    r8d,r8d
   12437:	48 f7 e6             	mul    rsi
   1243a:	0f 80 d2 01 00 00    	jo     12612 <xstrtoul+0x3c2>
   12440:	48 89 c3             	mov    rbx,rax
   12443:	44 09 c5             	or     ebp,r8d
   12446:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   1244d:	00 00 00 
   12450:	48 63 ff             	movsxd rdi,edi
   12453:	89 e8                	mov    eax,ebp
   12455:	48 01 f9             	add    rcx,rdi
   12458:	83 c8 02             	or     eax,0x2
   1245b:	49 89 0f             	mov    QWORD PTR [r15],rcx
   1245e:	80 39 00             	cmp    BYTE PTR [rcx],0x0
   12461:	49 89 1e             	mov    QWORD PTR [r14],rbx
   12464:	0f 45 e8             	cmovne ebp,eax
   12467:	e9 c1 fe ff ff       	jmp    1232d <xstrtoul+0xdd>
   1246c:	49 89 1e             	mov    QWORD PTR [r14],rbx
   1246f:	83 cd 02             	or     ebp,0x2
   12472:	e9 b6 fe ff ff       	jmp    1232d <xstrtoul+0xdd>
   12477:	ba 02 00 00 00       	mov    edx,0x2
   1247c:	48 89 d0             	mov    rax,rdx
   1247f:	48 f7 e3             	mul    rbx
   12482:	0f 80 96 00 00 00    	jo     1251e <xstrtoul+0x2ce>
   12488:	48 01 db             	add    rbx,rbx
   1248b:	eb c3                	jmp    12450 <xstrtoul+0x200>
   1248d:	ba 00 02 00 00       	mov    edx,0x200
   12492:	48 89 d0             	mov    rax,rdx
   12495:	48 f7 e3             	mul    rbx
   12498:	0f 80 80 00 00 00    	jo     1251e <xstrtoul+0x2ce>
   1249e:	48 c1 e3 09          	shl    rbx,0x9
   124a2:	eb ac                	jmp    12450 <xstrtoul+0x200>
   124a4:	41 b8 07 00 00 00    	mov    r8d,0x7
   124aa:	45 31 c9             	xor    r9d,r9d
   124ad:	0f 1f 00             	nop    DWORD PTR [rax]
   124b0:	48 89 d8             	mov    rax,rbx
   124b3:	48 f7 e6             	mul    rsi
   124b6:	48 89 c3             	mov    rbx,rax
   124b9:	0f 80 8f 01 00 00    	jo     1264e <xstrtoul+0x3fe>
   124bf:	41 83 e8 01          	sub    r8d,0x1
   124c3:	75 eb                	jne    124b0 <xstrtoul+0x260>
   124c5:	44 09 cd             	or     ebp,r9d
   124c8:	eb 86                	jmp    12450 <xstrtoul+0x200>
   124ca:	41 b8 08 00 00 00    	mov    r8d,0x8
   124d0:	45 31 c9             	xor    r9d,r9d
   124d3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   124d8:	48 89 d8             	mov    rax,rbx
   124db:	48 f7 e6             	mul    rsi
   124de:	48 89 c3             	mov    rbx,rax
   124e1:	0f 80 49 01 00 00    	jo     12630 <xstrtoul+0x3e0>
   124e7:	41 83 e8 01          	sub    r8d,0x1
   124eb:	75 eb                	jne    124d8 <xstrtoul+0x288>
   124ed:	eb d6                	jmp    124c5 <xstrtoul+0x275>
   124ef:	41 b8 04 00 00 00    	mov    r8d,0x4
   124f5:	45 31 c9             	xor    r9d,r9d
   124f8:	48 89 d8             	mov    rax,rbx
   124fb:	48 f7 e6             	mul    rsi
   124fe:	48 89 c3             	mov    rbx,rax
   12501:	0f 80 fc 00 00 00    	jo     12603 <xstrtoul+0x3b3>
   12507:	41 83 e8 01          	sub    r8d,0x1
   1250b:	75 eb                	jne    124f8 <xstrtoul+0x2a8>
   1250d:	eb b6                	jmp    124c5 <xstrtoul+0x275>
   1250f:	48 89 d8             	mov    rax,rbx
   12512:	48 f7 e6             	mul    rsi
   12515:	48 89 c3             	mov    rbx,rax
   12518:	0f 81 32 ff ff ff    	jno    12450 <xstrtoul+0x200>
   1251e:	bd 01 00 00 00       	mov    ebp,0x1
   12523:	48 83 cb ff          	or     rbx,0xffffffffffffffff
   12527:	e9 24 ff ff ff       	jmp    12450 <xstrtoul+0x200>
   1252c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   12530:	41 b8 05 00 00 00    	mov    r8d,0x5
   12536:	45 31 c9             	xor    r9d,r9d
   12539:	48 89 d8             	mov    rax,rbx
   1253c:	48 f7 e6             	mul    rsi
   1253f:	48 89 c3             	mov    rbx,rax
   12542:	0f 80 f7 00 00 00    	jo     1263f <xstrtoul+0x3ef>
   12548:	41 83 e8 01          	sub    r8d,0x1
   1254c:	75 eb                	jne    12539 <xstrtoul+0x2e9>
   1254e:	e9 72 ff ff ff       	jmp    124c5 <xstrtoul+0x275>
   12553:	41 b8 06 00 00 00    	mov    r8d,0x6
   12559:	45 31 c9             	xor    r9d,r9d
   1255c:	48 89 d8             	mov    rax,rbx
   1255f:	48 f7 e6             	mul    rsi
   12562:	48 89 c3             	mov    rbx,rax
   12565:	0f 80 89 00 00 00    	jo     125f4 <xstrtoul+0x3a4>
   1256b:	41 83 e8 01          	sub    r8d,0x1
   1256f:	75 eb                	jne    1255c <xstrtoul+0x30c>
   12571:	e9 4f ff ff ff       	jmp    124c5 <xstrtoul+0x275>
   12576:	ba 00 04 00 00       	mov    edx,0x400
   1257b:	48 89 d0             	mov    rax,rdx
   1257e:	48 f7 e3             	mul    rbx
   12581:	70 9b                	jo     1251e <xstrtoul+0x2ce>
   12583:	48 c1 e3 0a          	shl    rbx,0xa
   12587:	e9 c4 fe ff ff       	jmp    12450 <xstrtoul+0x200>
   1258c:	48 89 d8             	mov    rax,rbx
   1258f:	48 f7 e6             	mul    rsi
   12592:	0f 80 c5 00 00 00    	jo     1265d <xstrtoul+0x40d>
   12598:	45 31 c0             	xor    r8d,r8d
   1259b:	48 f7 e6             	mul    rsi
   1259e:	0f 81 93 fe ff ff    	jno    12437 <xstrtoul+0x1e7>
   125a4:	41 b8 01 00 00 00    	mov    r8d,0x1
   125aa:	48 83 c8 ff          	or     rax,0xffffffffffffffff
   125ae:	e9 84 fe ff ff       	jmp    12437 <xstrtoul+0x1e7>
   125b3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   125b8:	31 ff                	xor    edi,edi
   125ba:	80 79 02 42          	cmp    BYTE PTR [rcx+0x2],0x42
   125be:	be 00 04 00 00       	mov    esi,0x400
   125c3:	40 0f 94 c7          	sete   dil
   125c7:	8d 7c 3f 01          	lea    edi,[rdi+rdi*1+0x1]
   125cb:	e9 3a fe ff ff       	jmp    1240a <xstrtoul+0x1ba>
   125d0:	e8 cb 06 ff ff       	call   2ca0 <__stack_chk_fail@plt>
   125d5:	48 8d 0d 1c 40 00 00 	lea    rcx,[rip+0x401c]        # 165f8 <__PRETTY_FUNCTION__.4162>
   125dc:	48 8d 35 f5 3e 00 00 	lea    rsi,[rip+0x3ef5]        # 164d8 <version_etc_copyright+0xb8>
   125e3:	48 8d 3d 0e 3f 00 00 	lea    rdi,[rip+0x3f0e]        # 164f8 <version_etc_copyright+0xd8>
   125ea:	ba 54 00 00 00       	mov    edx,0x54
   125ef:	e8 7c 07 ff ff       	call   2d70 <__assert_fail@plt>
   125f4:	41 b9 01 00 00 00    	mov    r9d,0x1
   125fa:	48 83 cb ff          	or     rbx,0xffffffffffffffff
   125fe:	e9 68 ff ff ff       	jmp    1256b <xstrtoul+0x31b>
   12603:	41 b9 01 00 00 00    	mov    r9d,0x1
   12609:	48 83 cb ff          	or     rbx,0xffffffffffffffff
   1260d:	e9 f5 fe ff ff       	jmp    12507 <xstrtoul+0x2b7>
   12612:	41 b8 01 00 00 00    	mov    r8d,0x1
   12618:	48 83 cb ff          	or     rbx,0xffffffffffffffff
   1261c:	e9 22 fe ff ff       	jmp    12443 <xstrtoul+0x1f3>
   12621:	48 83 c8 ff          	or     rax,0xffffffffffffffff
   12625:	41 b8 01 00 00 00    	mov    r8d,0x1
   1262b:	e9 07 fe ff ff       	jmp    12437 <xstrtoul+0x1e7>
   12630:	41 b9 01 00 00 00    	mov    r9d,0x1
   12636:	48 83 cb ff          	or     rbx,0xffffffffffffffff
   1263a:	e9 a8 fe ff ff       	jmp    124e7 <xstrtoul+0x297>
   1263f:	41 b9 01 00 00 00    	mov    r9d,0x1
   12645:	48 83 cb ff          	or     rbx,0xffffffffffffffff
   12649:	e9 fa fe ff ff       	jmp    12548 <xstrtoul+0x2f8>
   1264e:	41 b9 01 00 00 00    	mov    r9d,0x1
   12654:	48 83 cb ff          	or     rbx,0xffffffffffffffff
   12658:	e9 62 fe ff ff       	jmp    124bf <xstrtoul+0x26f>
   1265d:	41 b8 01 00 00 00    	mov    r8d,0x1
   12663:	48 83 c8 ff          	or     rax,0xffffffffffffffff
   12667:	e9 2f ff ff ff       	jmp    1259b <xstrtoul+0x34b>
   1266c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000012670 <xstrtol_fatal>:
   12670:	41 55                	push   r13
   12672:	41 54                	push   r12
   12674:	41 89 f2             	mov    r10d,esi
   12677:	55                   	push   rbp
   12678:	53                   	push   rbx
   12679:	4d 89 c4             	mov    r12,r8
   1267c:	48 83 ec 18          	sub    rsp,0x18
   12680:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
   12687:	00 00 
   12689:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
   1268e:	31 c0                	xor    eax,eax
   12690:	83 ff 03             	cmp    edi,0x3
   12693:	8b 2d 97 7a 20 00    	mov    ebp,DWORD PTR [rip+0x207a97]        # 21a130 <exit_failure>
   12699:	77 59                	ja     126f4 <xstrtol_fatal+0x84>
   1269b:	83 ff 02             	cmp    edi,0x2
   1269e:	73 4b                	jae    126eb <xstrtol_fatal+0x7b>
   126a0:	83 ef 01             	sub    edi,0x1
   126a3:	48 8d 35 72 3f 00 00 	lea    rsi,[rip+0x3f72]        # 1661c <__PRETTY_FUNCTION__.4162+0x24>
   126aa:	75 3a                	jne    126e6 <xstrtol_fatal+0x76>
   126ac:	45 85 d2             	test   r10d,r10d
   126af:	49 63 c2             	movsxd rax,r10d
   126b2:	78 4e                	js     12702 <xstrtol_fatal+0x92>
   126b4:	48 c1 e0 05          	shl    rax,0x5
   126b8:	48 8d 1d 7a 3f 00 00 	lea    rbx,[rip+0x3f7a]        # 16639 <__PRETTY_FUNCTION__.4162+0x41>
   126bf:	4c 8b 2c 01          	mov    r13,QWORD PTR [rcx+rax*1]
   126c3:	ba 05 00 00 00       	mov    edx,0x5
   126c8:	31 ff                	xor    edi,edi
   126ca:	e8 a1 05 ff ff       	call   2c70 <dcgettext@plt>
   126cf:	4d 89 e1             	mov    r9,r12
   126d2:	48 89 c2             	mov    rdx,rax
   126d5:	4d 89 e8             	mov    r8,r13
   126d8:	48 89 d9             	mov    rcx,rbx
   126db:	31 f6                	xor    esi,esi
   126dd:	89 ef                	mov    edi,ebp
   126df:	31 c0                	xor    eax,eax
   126e1:	e8 fa 08 ff ff       	call   2fe0 <error@plt>
   126e6:	e8 15 04 ff ff       	call   2b00 <abort@plt>
   126eb:	48 8d 35 4e 3f 00 00 	lea    rsi,[rip+0x3f4e]        # 16640 <__PRETTY_FUNCTION__.4162+0x48>
   126f2:	eb b8                	jmp    126ac <xstrtol_fatal+0x3c>
   126f4:	83 ff 04             	cmp    edi,0x4
   126f7:	48 8d 35 03 3f 00 00 	lea    rsi,[rip+0x3f03]        # 16601 <__PRETTY_FUNCTION__.4162+0x9>
   126fe:	74 ac                	je     126ac <xstrtol_fatal+0x3c>
   12700:	eb e4                	jmp    126e6 <xstrtol_fatal+0x76>
   12702:	48 8d 1d 30 3f 00 00 	lea    rbx,[rip+0x3f30]        # 16639 <__PRETTY_FUNCTION__.4162+0x41>
   12709:	88 54 24 06          	mov    BYTE PTR [rsp+0x6],dl
   1270d:	c6 44 24 07 00       	mov    BYTE PTR [rsp+0x7],0x0
   12712:	4c 8d 6c 24 06       	lea    r13,[rsp+0x6]
   12717:	48 29 c3             	sub    rbx,rax
   1271a:	eb a7                	jmp    126c3 <xstrtol_fatal+0x53>
   1271c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000012720 <xstrtoumax>:
   12720:	41 57                	push   r15
   12722:	41 56                	push   r14
   12724:	41 55                	push   r13
   12726:	41 54                	push   r12
   12728:	55                   	push   rbp
   12729:	53                   	push   rbx
   1272a:	48 83 ec 28          	sub    rsp,0x28
   1272e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
   12735:	00 00 
   12737:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
   1273c:	31 c0                	xor    eax,eax
   1273e:	83 fa 24             	cmp    edx,0x24
   12741:	0f 87 5e 03 00 00    	ja     12aa5 <xstrtoumax+0x385>
   12747:	48 8d 44 24 10       	lea    rax,[rsp+0x10]
   1274c:	49 89 f7             	mov    r15,rsi
   1274f:	48 85 f6             	test   rsi,rsi
   12752:	48 89 fd             	mov    rbp,rdi
   12755:	89 54 24 08          	mov    DWORD PTR [rsp+0x8],edx
   12759:	49 89 ce             	mov    r14,rcx
   1275c:	4d 89 c5             	mov    r13,r8
   1275f:	4c 0f 44 f8          	cmove  r15,rax
   12763:	e8 a8 03 ff ff       	call   2b10 <__errno_location@plt>
   12768:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
   1276e:	49 89 c4             	mov    r12,rax
   12771:	0f b6 5d 00          	movzx  ebx,BYTE PTR [rbp+0x0]
   12775:	e8 36 0a ff ff       	call   31b0 <__ctype_b_loc@plt>
   1277a:	8b 54 24 08          	mov    edx,DWORD PTR [rsp+0x8]
   1277e:	48 8b 30             	mov    rsi,QWORD PTR [rax]
   12781:	48 89 e8             	mov    rax,rbp
   12784:	eb 11                	jmp    12797 <xstrtoumax+0x77>
   12786:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   1278d:	00 00 00 
   12790:	48 83 c0 01          	add    rax,0x1
   12794:	0f b6 18             	movzx  ebx,BYTE PTR [rax]
   12797:	0f b6 cb             	movzx  ecx,bl
   1279a:	f6 44 4e 01 20       	test   BYTE PTR [rsi+rcx*2+0x1],0x20
   1279f:	75 ef                	jne    12790 <xstrtoumax+0x70>
   127a1:	80 fb 2d             	cmp    bl,0x2d
   127a4:	74 52                	je     127f8 <xstrtoumax+0xd8>
   127a6:	31 c9                	xor    ecx,ecx
   127a8:	4c 89 fe             	mov    rsi,r15
   127ab:	48 89 ef             	mov    rdi,rbp
   127ae:	e8 cd 05 ff ff       	call   2d80 <__strtoul_internal@plt>
   127b3:	49 8b 0f             	mov    rcx,QWORD PTR [r15]
   127b6:	48 89 c3             	mov    rbx,rax
   127b9:	48 39 e9             	cmp    rcx,rbp
   127bc:	74 2a                	je     127e8 <xstrtoumax+0xc8>
   127be:	41 8b 04 24          	mov    eax,DWORD PTR [r12]
   127c2:	85 c0                	test   eax,eax
   127c4:	74 62                	je     12828 <xstrtoumax+0x108>
   127c6:	83 f8 22             	cmp    eax,0x22
   127c9:	bd 01 00 00 00       	mov    ebp,0x1
   127ce:	75 28                	jne    127f8 <xstrtoumax+0xd8>
   127d0:	4d 85 ed             	test   r13,r13
   127d3:	74 09                	je     127de <xstrtoumax+0xbe>
   127d5:	44 0f b6 21          	movzx  r12d,BYTE PTR [rcx]
   127d9:	45 84 e4             	test   r12b,r12b
   127dc:	75 79                	jne    12857 <xstrtoumax+0x137>
   127de:	49 89 1e             	mov    QWORD PTR [r14],rbx
   127e1:	eb 1a                	jmp    127fd <xstrtoumax+0xdd>
   127e3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   127e8:	4d 85 ed             	test   r13,r13
   127eb:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
   127f0:	75 3e                	jne    12830 <xstrtoumax+0x110>
   127f2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
   127f8:	bd 04 00 00 00       	mov    ebp,0x4
   127fd:	48 8b 7c 24 18       	mov    rdi,QWORD PTR [rsp+0x18]
   12802:	64 48 33 3c 25 28 00 	xor    rdi,QWORD PTR fs:0x28
   12809:	00 00 
   1280b:	89 e8                	mov    eax,ebp
   1280d:	0f 85 8d 02 00 00    	jne    12aa0 <xstrtoumax+0x380>
   12813:	48 83 c4 28          	add    rsp,0x28
   12817:	5b                   	pop    rbx
   12818:	5d                   	pop    rbp
   12819:	41 5c                	pop    r12
   1281b:	41 5d                	pop    r13
   1281d:	41 5e                	pop    r14
   1281f:	41 5f                	pop    r15
   12821:	c3                   	ret    
   12822:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
   12828:	31 ed                	xor    ebp,ebp
   1282a:	eb a4                	jmp    127d0 <xstrtoumax+0xb0>
   1282c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   12830:	44 0f b6 65 00       	movzx  r12d,BYTE PTR [rbp+0x0]
   12835:	45 84 e4             	test   r12b,r12b
   12838:	74 be                	je     127f8 <xstrtoumax+0xd8>
   1283a:	41 0f be f4          	movsx  esi,r12b
   1283e:	4c 89 ef             	mov    rdi,r13
   12841:	31 ed                	xor    ebp,ebp
   12843:	e8 a8 04 ff ff       	call   2cf0 <strchr@plt>
   12848:	48 85 c0             	test   rax,rax
   1284b:	bb 01 00 00 00       	mov    ebx,0x1
   12850:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
   12855:	74 a1                	je     127f8 <xstrtoumax+0xd8>
   12857:	41 0f be f4          	movsx  esi,r12b
   1285b:	4c 89 ef             	mov    rdi,r13
   1285e:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
   12863:	e8 88 04 ff ff       	call   2cf0 <strchr@plt>
   12868:	48 85 c0             	test   rax,rax
   1286b:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
   12870:	0f 84 c6 00 00 00    	je     1293c <xstrtoumax+0x21c>
   12876:	41 8d 44 24 bb       	lea    eax,[r12-0x45]
   1287b:	3c 2f                	cmp    al,0x2f
   1287d:	77 51                	ja     128d0 <xstrtoumax+0x1b0>
   1287f:	48 ba 45 89 30 00 44 	movabs rdx,0x814400308945
   12886:	81 00 00 
   12889:	48 0f a3 c2          	bt     rdx,rax
   1288d:	73 41                	jae    128d0 <xstrtoumax+0x1b0>
   1288f:	be 30 00 00 00       	mov    esi,0x30
   12894:	4c 89 ef             	mov    rdi,r13
   12897:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
   1289c:	e8 4f 04 ff ff       	call   2cf0 <strchr@plt>
   128a1:	48 85 c0             	test   rax,rax
   128a4:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
   128a9:	74 25                	je     128d0 <xstrtoumax+0x1b0>
   128ab:	0f b6 41 01          	movzx  eax,BYTE PTR [rcx+0x1]
   128af:	3c 44                	cmp    al,0x44
   128b1:	74 0c                	je     128bf <xstrtoumax+0x19f>
   128b3:	3c 69                	cmp    al,0x69
   128b5:	0f 84 cd 01 00 00    	je     12a88 <xstrtoumax+0x368>
   128bb:	3c 42                	cmp    al,0x42
   128bd:	75 11                	jne    128d0 <xstrtoumax+0x1b0>
   128bf:	bf 02 00 00 00       	mov    edi,0x2
   128c4:	be e8 03 00 00       	mov    esi,0x3e8
   128c9:	eb 0f                	jmp    128da <xstrtoumax+0x1ba>
   128cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   128d0:	bf 01 00 00 00       	mov    edi,0x1
   128d5:	be 00 04 00 00       	mov    esi,0x400
   128da:	41 83 ec 42          	sub    r12d,0x42
   128de:	41 80 fc 35          	cmp    r12b,0x35
   128e2:	77 58                	ja     1293c <xstrtoumax+0x21c>
   128e4:	48 8d 15 7d 3d 00 00 	lea    rdx,[rip+0x3d7d]        # 16668 <__PRETTY_FUNCTION__.4162+0x70>
   128eb:	45 0f b6 e4          	movzx  r12d,r12b
   128ef:	4a 63 04 a2          	movsxd rax,DWORD PTR [rdx+r12*4]
   128f3:	48 01 d0             	add    rax,rdx
   128f6:	ff e0                	jmp    rax
   128f8:	48 89 d8             	mov    rax,rbx
   128fb:	48 f7 e6             	mul    rsi
   128fe:	0f 80 ed 01 00 00    	jo     12af1 <xstrtoumax+0x3d1>
   12904:	45 31 c0             	xor    r8d,r8d
   12907:	48 f7 e6             	mul    rsi
   1290a:	0f 80 d2 01 00 00    	jo     12ae2 <xstrtoumax+0x3c2>
   12910:	48 89 c3             	mov    rbx,rax
   12913:	44 09 c5             	or     ebp,r8d
   12916:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   1291d:	00 00 00 
   12920:	48 63 ff             	movsxd rdi,edi
   12923:	89 e8                	mov    eax,ebp
   12925:	48 01 f9             	add    rcx,rdi
   12928:	83 c8 02             	or     eax,0x2
   1292b:	49 89 0f             	mov    QWORD PTR [r15],rcx
   1292e:	80 39 00             	cmp    BYTE PTR [rcx],0x0
   12931:	49 89 1e             	mov    QWORD PTR [r14],rbx
   12934:	0f 45 e8             	cmovne ebp,eax
   12937:	e9 c1 fe ff ff       	jmp    127fd <xstrtoumax+0xdd>
   1293c:	49 89 1e             	mov    QWORD PTR [r14],rbx
   1293f:	83 cd 02             	or     ebp,0x2
   12942:	e9 b6 fe ff ff       	jmp    127fd <xstrtoumax+0xdd>
   12947:	ba 02 00 00 00       	mov    edx,0x2
   1294c:	48 89 d0             	mov    rax,rdx
   1294f:	48 f7 e3             	mul    rbx
   12952:	0f 80 96 00 00 00    	jo     129ee <xstrtoumax+0x2ce>
   12958:	48 01 db             	add    rbx,rbx
   1295b:	eb c3                	jmp    12920 <xstrtoumax+0x200>
   1295d:	ba 00 02 00 00       	mov    edx,0x200
   12962:	48 89 d0             	mov    rax,rdx
   12965:	48 f7 e3             	mul    rbx
   12968:	0f 80 80 00 00 00    	jo     129ee <xstrtoumax+0x2ce>
   1296e:	48 c1 e3 09          	shl    rbx,0x9
   12972:	eb ac                	jmp    12920 <xstrtoumax+0x200>
   12974:	41 b8 07 00 00 00    	mov    r8d,0x7
   1297a:	45 31 c9             	xor    r9d,r9d
   1297d:	0f 1f 00             	nop    DWORD PTR [rax]
   12980:	48 89 d8             	mov    rax,rbx
   12983:	48 f7 e6             	mul    rsi
   12986:	48 89 c3             	mov    rbx,rax
   12989:	0f 80 8f 01 00 00    	jo     12b1e <xstrtoumax+0x3fe>
   1298f:	41 83 e8 01          	sub    r8d,0x1
   12993:	75 eb                	jne    12980 <xstrtoumax+0x260>
   12995:	44 09 cd             	or     ebp,r9d
   12998:	eb 86                	jmp    12920 <xstrtoumax+0x200>
   1299a:	41 b8 08 00 00 00    	mov    r8d,0x8
   129a0:	45 31 c9             	xor    r9d,r9d
   129a3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   129a8:	48 89 d8             	mov    rax,rbx
   129ab:	48 f7 e6             	mul    rsi
   129ae:	48 89 c3             	mov    rbx,rax
   129b1:	0f 80 49 01 00 00    	jo     12b00 <xstrtoumax+0x3e0>
   129b7:	41 83 e8 01          	sub    r8d,0x1
   129bb:	75 eb                	jne    129a8 <xstrtoumax+0x288>
   129bd:	eb d6                	jmp    12995 <xstrtoumax+0x275>
   129bf:	41 b8 04 00 00 00    	mov    r8d,0x4
   129c5:	45 31 c9             	xor    r9d,r9d
   129c8:	48 89 d8             	mov    rax,rbx
   129cb:	48 f7 e6             	mul    rsi
   129ce:	48 89 c3             	mov    rbx,rax
   129d1:	0f 80 fc 00 00 00    	jo     12ad3 <xstrtoumax+0x3b3>
   129d7:	41 83 e8 01          	sub    r8d,0x1
   129db:	75 eb                	jne    129c8 <xstrtoumax+0x2a8>
   129dd:	eb b6                	jmp    12995 <xstrtoumax+0x275>
   129df:	48 89 d8             	mov    rax,rbx
   129e2:	48 f7 e6             	mul    rsi
   129e5:	48 89 c3             	mov    rbx,rax
   129e8:	0f 81 32 ff ff ff    	jno    12920 <xstrtoumax+0x200>
   129ee:	bd 01 00 00 00       	mov    ebp,0x1
   129f3:	48 83 cb ff          	or     rbx,0xffffffffffffffff
   129f7:	e9 24 ff ff ff       	jmp    12920 <xstrtoumax+0x200>
   129fc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   12a00:	41 b8 05 00 00 00    	mov    r8d,0x5
   12a06:	45 31 c9             	xor    r9d,r9d
   12a09:	48 89 d8             	mov    rax,rbx
   12a0c:	48 f7 e6             	mul    rsi
   12a0f:	48 89 c3             	mov    rbx,rax
   12a12:	0f 80 f7 00 00 00    	jo     12b0f <xstrtoumax+0x3ef>
   12a18:	41 83 e8 01          	sub    r8d,0x1
   12a1c:	75 eb                	jne    12a09 <xstrtoumax+0x2e9>
   12a1e:	e9 72 ff ff ff       	jmp    12995 <xstrtoumax+0x275>
   12a23:	41 b8 06 00 00 00    	mov    r8d,0x6
   12a29:	45 31 c9             	xor    r9d,r9d
   12a2c:	48 89 d8             	mov    rax,rbx
   12a2f:	48 f7 e6             	mul    rsi
   12a32:	48 89 c3             	mov    rbx,rax
   12a35:	0f 80 89 00 00 00    	jo     12ac4 <xstrtoumax+0x3a4>
   12a3b:	41 83 e8 01          	sub    r8d,0x1
   12a3f:	75 eb                	jne    12a2c <xstrtoumax+0x30c>
   12a41:	e9 4f ff ff ff       	jmp    12995 <xstrtoumax+0x275>
   12a46:	ba 00 04 00 00       	mov    edx,0x400
   12a4b:	48 89 d0             	mov    rax,rdx
   12a4e:	48 f7 e3             	mul    rbx
   12a51:	70 9b                	jo     129ee <xstrtoumax+0x2ce>
   12a53:	48 c1 e3 0a          	shl    rbx,0xa
   12a57:	e9 c4 fe ff ff       	jmp    12920 <xstrtoumax+0x200>
   12a5c:	48 89 d8             	mov    rax,rbx
   12a5f:	48 f7 e6             	mul    rsi
   12a62:	0f 80 c5 00 00 00    	jo     12b2d <xstrtoumax+0x40d>
   12a68:	45 31 c0             	xor    r8d,r8d
   12a6b:	48 f7 e6             	mul    rsi
   12a6e:	0f 81 93 fe ff ff    	jno    12907 <xstrtoumax+0x1e7>
   12a74:	41 b8 01 00 00 00    	mov    r8d,0x1
   12a7a:	48 83 c8 ff          	or     rax,0xffffffffffffffff
   12a7e:	e9 84 fe ff ff       	jmp    12907 <xstrtoumax+0x1e7>
   12a83:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   12a88:	31 ff                	xor    edi,edi
   12a8a:	80 79 02 42          	cmp    BYTE PTR [rcx+0x2],0x42
   12a8e:	be 00 04 00 00       	mov    esi,0x400
   12a93:	40 0f 94 c7          	sete   dil
   12a97:	8d 7c 3f 01          	lea    edi,[rdi+rdi*1+0x1]
   12a9b:	e9 3a fe ff ff       	jmp    128da <xstrtoumax+0x1ba>
   12aa0:	e8 fb 01 ff ff       	call   2ca0 <__stack_chk_fail@plt>
   12aa5:	48 8d 0d 94 3c 00 00 	lea    rcx,[rip+0x3c94]        # 16740 <__PRETTY_FUNCTION__.4162>
   12aac:	48 8d 35 25 3a 00 00 	lea    rsi,[rip+0x3a25]        # 164d8 <version_etc_copyright+0xb8>
   12ab3:	48 8d 3d 3e 3a 00 00 	lea    rdi,[rip+0x3a3e]        # 164f8 <version_etc_copyright+0xd8>
   12aba:	ba 54 00 00 00       	mov    edx,0x54
   12abf:	e8 ac 02 ff ff       	call   2d70 <__assert_fail@plt>
   12ac4:	41 b9 01 00 00 00    	mov    r9d,0x1
   12aca:	48 83 cb ff          	or     rbx,0xffffffffffffffff
   12ace:	e9 68 ff ff ff       	jmp    12a3b <xstrtoumax+0x31b>
   12ad3:	41 b9 01 00 00 00    	mov    r9d,0x1
   12ad9:	48 83 cb ff          	or     rbx,0xffffffffffffffff
   12add:	e9 f5 fe ff ff       	jmp    129d7 <xstrtoumax+0x2b7>
   12ae2:	41 b8 01 00 00 00    	mov    r8d,0x1
   12ae8:	48 83 cb ff          	or     rbx,0xffffffffffffffff
   12aec:	e9 22 fe ff ff       	jmp    12913 <xstrtoumax+0x1f3>
   12af1:	48 83 c8 ff          	or     rax,0xffffffffffffffff
   12af5:	41 b8 01 00 00 00    	mov    r8d,0x1
   12afb:	e9 07 fe ff ff       	jmp    12907 <xstrtoumax+0x1e7>
   12b00:	41 b9 01 00 00 00    	mov    r9d,0x1
   12b06:	48 83 cb ff          	or     rbx,0xffffffffffffffff
   12b0a:	e9 a8 fe ff ff       	jmp    129b7 <xstrtoumax+0x297>
   12b0f:	41 b9 01 00 00 00    	mov    r9d,0x1
   12b15:	48 83 cb ff          	or     rbx,0xffffffffffffffff
   12b19:	e9 fa fe ff ff       	jmp    12a18 <xstrtoumax+0x2f8>
   12b1e:	41 b9 01 00 00 00    	mov    r9d,0x1
   12b24:	48 83 cb ff          	or     rbx,0xffffffffffffffff
   12b28:	e9 62 fe ff ff       	jmp    1298f <xstrtoumax+0x26f>
   12b2d:	41 b8 01 00 00 00    	mov    r8d,0x1
   12b33:	48 83 c8 ff          	or     rax,0xffffffffffffffff
   12b37:	e9 2f ff ff ff       	jmp    12a6b <xstrtoumax+0x34b>
   12b3c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000012b40 <rpl_fclose>:
   12b40:	41 54                	push   r12
   12b42:	55                   	push   rbp
   12b43:	53                   	push   rbx
   12b44:	48 89 fb             	mov    rbx,rdi
   12b47:	e8 44 03 ff ff       	call   2e90 <fileno@plt>
   12b4c:	85 c0                	test   eax,eax
   12b4e:	48 89 df             	mov    rdi,rbx
   12b51:	78 54                	js     12ba7 <rpl_fclose+0x67>
   12b53:	e8 f8 03 ff ff       	call   2f50 <__freading@plt>
   12b58:	85 c0                	test   eax,eax
   12b5a:	75 2c                	jne    12b88 <rpl_fclose+0x48>
   12b5c:	48 89 df             	mov    rdi,rbx
   12b5f:	e8 dc 02 00 00       	call   12e40 <rpl_fflush>
   12b64:	85 c0                	test   eax,eax
   12b66:	74 3c                	je     12ba4 <rpl_fclose+0x64>
   12b68:	e8 a3 ff fe ff       	call   2b10 <__errno_location@plt>
   12b6d:	44 8b 20             	mov    r12d,DWORD PTR [rax]
   12b70:	48 89 df             	mov    rdi,rbx
   12b73:	48 89 c5             	mov    rbp,rax
   12b76:	e8 c5 00 ff ff       	call   2c40 <fclose@plt>
   12b7b:	45 85 e4             	test   r12d,r12d
   12b7e:	75 30                	jne    12bb0 <rpl_fclose+0x70>
   12b80:	5b                   	pop    rbx
   12b81:	5d                   	pop    rbp
   12b82:	41 5c                	pop    r12
   12b84:	c3                   	ret    
   12b85:	0f 1f 00             	nop    DWORD PTR [rax]
   12b88:	48 89 df             	mov    rdi,rbx
   12b8b:	e8 00 03 ff ff       	call   2e90 <fileno@plt>
   12b90:	31 f6                	xor    esi,esi
   12b92:	ba 01 00 00 00       	mov    edx,0x1
   12b97:	89 c7                	mov    edi,eax
   12b99:	e8 b2 01 ff ff       	call   2d50 <lseek@plt>
   12b9e:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
   12ba2:	75 b8                	jne    12b5c <rpl_fclose+0x1c>
   12ba4:	48 89 df             	mov    rdi,rbx
   12ba7:	5b                   	pop    rbx
   12ba8:	5d                   	pop    rbp
   12ba9:	41 5c                	pop    r12
   12bab:	e9 90 00 ff ff       	jmp    2c40 <fclose@plt>
   12bb0:	44 89 65 00          	mov    DWORD PTR [rbp+0x0],r12d
   12bb4:	b8 ff ff ff ff       	mov    eax,0xffffffff
   12bb9:	eb c5                	jmp    12b80 <rpl_fclose+0x40>
   12bbb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012bc0 <rpl_fcntl>:
   12bc0:	41 54                	push   r12
   12bc2:	55                   	push   rbp
   12bc3:	89 fd                	mov    ebp,edi
   12bc5:	53                   	push   rbx
   12bc6:	48 83 ec 50          	sub    rsp,0x50
   12bca:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
   12bd1:	00 00 
   12bd3:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
   12bd8:	31 c0                	xor    eax,eax
   12bda:	48 8d 44 24 70       	lea    rax,[rsp+0x70]
   12bdf:	85 f6                	test   esi,esi
   12be1:	48 89 54 24 30       	mov    QWORD PTR [rsp+0x30],rdx
   12be6:	48 89 4c 24 38       	mov    QWORD PTR [rsp+0x38],rcx
   12beb:	4c 89 44 24 40       	mov    QWORD PTR [rsp+0x40],r8
   12bf0:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
   12bf5:	48 8d 44 24 20       	lea    rax,[rsp+0x20]
   12bfa:	4c 89 4c 24 48       	mov    QWORD PTR [rsp+0x48],r9
   12bff:	c7 04 24 10 00 00 00 	mov    DWORD PTR [rsp],0x10
   12c06:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
   12c0b:	0f 84 01 02 00 00    	je     12e12 <rpl_fcntl+0x252>
   12c11:	81 fe 06 04 00 00    	cmp    esi,0x406
   12c17:	75 47                	jne    12c60 <rpl_fcntl+0xa0>
   12c19:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
   12c1e:	83 3d d3 7d 20 00 00 	cmp    DWORD PTR [rip+0x207dd3],0x0        # 21a9f8 <have_dupfd_cloexec.3326>
   12c25:	c7 04 24 18 00 00 00 	mov    DWORD PTR [rsp],0x18
   12c2c:	44 8b 60 10          	mov    r12d,DWORD PTR [rax+0x10]
   12c30:	44 89 e2             	mov    edx,r12d
   12c33:	0f 88 2a 01 00 00    	js     12d63 <rpl_fcntl+0x1a3>
   12c39:	31 c0                	xor    eax,eax
   12c3b:	be 06 04 00 00       	mov    esi,0x406
   12c40:	e8 8b ff fe ff       	call   2bd0 <fcntl@plt>
   12c45:	85 c0                	test   eax,eax
   12c47:	89 c3                	mov    ebx,eax
   12c49:	0f 88 89 01 00 00    	js     12dd8 <rpl_fcntl+0x218>
   12c4f:	c7 05 9f 7d 20 00 01 	mov    DWORD PTR [rip+0x207d9f],0x1        # 21a9f8 <have_dupfd_cloexec.3326>
   12c56:	00 00 00 
   12c59:	eb 45                	jmp    12ca0 <rpl_fcntl+0xe0>
   12c5b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   12c60:	83 fe 0b             	cmp    esi,0xb
   12c63:	74 2b                	je     12c90 <rpl_fcntl+0xd0>
   12c65:	7f 59                	jg     12cc0 <rpl_fcntl+0x100>
   12c67:	83 fe 04             	cmp    esi,0x4
   12c6a:	0f 84 d0 00 00 00    	je     12d40 <rpl_fcntl+0x180>
   12c70:	0f 8f ba 00 00 00    	jg     12d30 <rpl_fcntl+0x170>
   12c76:	83 fe 02             	cmp    esi,0x2
   12c79:	0f 84 c1 00 00 00    	je     12d40 <rpl_fcntl+0x180>
   12c7f:	7f 0f                	jg     12c90 <rpl_fcntl+0xd0>
   12c81:	83 fe 01             	cmp    esi,0x1
   12c84:	75 62                	jne    12ce8 <rpl_fcntl+0x128>
   12c86:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   12c8d:	00 00 00 
   12c90:	89 ef                	mov    edi,ebp
   12c92:	31 c0                	xor    eax,eax
   12c94:	e8 37 ff fe ff       	call   2bd0 <fcntl@plt>
   12c99:	89 c3                	mov    ebx,eax
   12c9b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   12ca0:	48 8b 4c 24 18       	mov    rcx,QWORD PTR [rsp+0x18]
   12ca5:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
   12cac:	00 00 
   12cae:	89 d8                	mov    eax,ebx
   12cb0:	0f 85 57 01 00 00    	jne    12e0d <rpl_fcntl+0x24d>
   12cb6:	48 83 c4 50          	add    rsp,0x50
   12cba:	5b                   	pop    rbx
   12cbb:	5d                   	pop    rbp
   12cbc:	41 5c                	pop    r12
   12cbe:	c3                   	ret    
   12cbf:	90                   	nop
   12cc0:	81 fe 07 04 00 00    	cmp    esi,0x407
   12cc6:	7f 48                	jg     12d10 <rpl_fcntl+0x150>
   12cc8:	81 fe 06 04 00 00    	cmp    esi,0x406
   12cce:	7d 70                	jge    12d40 <rpl_fcntl+0x180>
   12cd0:	81 fe 01 04 00 00    	cmp    esi,0x401
   12cd6:	74 b8                	je     12c90 <rpl_fcntl+0xd0>
   12cd8:	81 fe 02 04 00 00    	cmp    esi,0x402
   12cde:	74 60                	je     12d40 <rpl_fcntl+0x180>
   12ce0:	81 fe 00 04 00 00    	cmp    esi,0x400
   12ce6:	74 58                	je     12d40 <rpl_fcntl+0x180>
   12ce8:	8b 04 24             	mov    eax,DWORD PTR [rsp]
   12ceb:	83 f8 2f             	cmp    eax,0x2f
   12cee:	0f 87 36 01 00 00    	ja     12e2a <rpl_fcntl+0x26a>
   12cf4:	48 03 44 24 10       	add    rax,QWORD PTR [rsp+0x10]
   12cf9:	48 8b 10             	mov    rdx,QWORD PTR [rax]
   12cfc:	89 ef                	mov    edi,ebp
   12cfe:	31 c0                	xor    eax,eax
   12d00:	e8 cb fe fe ff       	call   2bd0 <fcntl@plt>
   12d05:	89 c3                	mov    ebx,eax
   12d07:	eb 97                	jmp    12ca0 <rpl_fcntl+0xe0>
   12d09:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   12d10:	81 fe 09 04 00 00    	cmp    esi,0x409
   12d16:	74 28                	je     12d40 <rpl_fcntl+0x180>
   12d18:	0f 8c 72 ff ff ff    	jl     12c90 <rpl_fcntl+0xd0>
   12d1e:	81 fe 0a 04 00 00    	cmp    esi,0x40a
   12d24:	75 c2                	jne    12ce8 <rpl_fcntl+0x128>
   12d26:	e9 65 ff ff ff       	jmp    12c90 <rpl_fcntl+0xd0>
   12d2b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   12d30:	83 fe 09             	cmp    esi,0x9
   12d33:	0f 84 57 ff ff ff    	je     12c90 <rpl_fcntl+0xd0>
   12d39:	7f 05                	jg     12d40 <rpl_fcntl+0x180>
   12d3b:	83 fe 08             	cmp    esi,0x8
   12d3e:	75 a8                	jne    12ce8 <rpl_fcntl+0x128>
   12d40:	8b 04 24             	mov    eax,DWORD PTR [rsp]
   12d43:	83 f8 2f             	cmp    eax,0x2f
   12d46:	0f 87 e8 00 00 00    	ja     12e34 <rpl_fcntl+0x274>
   12d4c:	48 03 44 24 10       	add    rax,QWORD PTR [rsp+0x10]
   12d51:	8b 10                	mov    edx,DWORD PTR [rax]
   12d53:	89 ef                	mov    edi,ebp
   12d55:	31 c0                	xor    eax,eax
   12d57:	e8 74 fe fe ff       	call   2bd0 <fcntl@plt>
   12d5c:	89 c3                	mov    ebx,eax
   12d5e:	e9 3d ff ff ff       	jmp    12ca0 <rpl_fcntl+0xe0>
   12d63:	31 f6                	xor    esi,esi
   12d65:	31 c0                	xor    eax,eax
   12d67:	e8 64 fe fe ff       	call   2bd0 <fcntl@plt>
   12d6c:	85 c0                	test   eax,eax
   12d6e:	89 c3                	mov    ebx,eax
   12d70:	0f 88 2a ff ff ff    	js     12ca0 <rpl_fcntl+0xe0>
   12d76:	83 3d 7b 7c 20 00 ff 	cmp    DWORD PTR [rip+0x207c7b],0xffffffff        # 21a9f8 <have_dupfd_cloexec.3326>
   12d7d:	0f 85 1d ff ff ff    	jne    12ca0 <rpl_fcntl+0xe0>
   12d83:	31 c0                	xor    eax,eax
   12d85:	be 01 00 00 00       	mov    esi,0x1
   12d8a:	89 df                	mov    edi,ebx
   12d8c:	e8 3f fe fe ff       	call   2bd0 <fcntl@plt>
   12d91:	85 c0                	test   eax,eax
   12d93:	78 1c                	js     12db1 <rpl_fcntl+0x1f1>
   12d95:	83 c8 01             	or     eax,0x1
   12d98:	be 02 00 00 00       	mov    esi,0x2
   12d9d:	89 df                	mov    edi,ebx
   12d9f:	89 c2                	mov    edx,eax
   12da1:	31 c0                	xor    eax,eax
   12da3:	e8 28 fe fe ff       	call   2bd0 <fcntl@plt>
   12da8:	83 f8 ff             	cmp    eax,0xffffffff
   12dab:	0f 85 ef fe ff ff    	jne    12ca0 <rpl_fcntl+0xe0>
   12db1:	e8 5a fd fe ff       	call   2b10 <__errno_location@plt>
   12db6:	44 8b 20             	mov    r12d,DWORD PTR [rax]
   12db9:	48 89 c5             	mov    rbp,rax
   12dbc:	89 df                	mov    edi,ebx
   12dbe:	e8 ed ff fe ff       	call   2db0 <close@plt>
   12dc3:	bb ff ff ff ff       	mov    ebx,0xffffffff
   12dc8:	44 89 65 00          	mov    DWORD PTR [rbp+0x0],r12d
   12dcc:	e9 cf fe ff ff       	jmp    12ca0 <rpl_fcntl+0xe0>
   12dd1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   12dd8:	e8 33 fd fe ff       	call   2b10 <__errno_location@plt>
   12ddd:	83 38 16             	cmp    DWORD PTR [rax],0x16
   12de0:	0f 85 69 fe ff ff    	jne    12c4f <rpl_fcntl+0x8f>
   12de6:	31 f6                	xor    esi,esi
   12de8:	31 c0                	xor    eax,eax
   12dea:	44 89 e2             	mov    edx,r12d
   12ded:	89 ef                	mov    edi,ebp
   12def:	e8 dc fd fe ff       	call   2bd0 <fcntl@plt>
   12df4:	85 c0                	test   eax,eax
   12df6:	89 c3                	mov    ebx,eax
   12df8:	0f 88 a2 fe ff ff    	js     12ca0 <rpl_fcntl+0xe0>
   12dfe:	c7 05 f0 7b 20 00 ff 	mov    DWORD PTR [rip+0x207bf0],0xffffffff        # 21a9f8 <have_dupfd_cloexec.3326>
   12e05:	ff ff ff 
   12e08:	e9 76 ff ff ff       	jmp    12d83 <rpl_fcntl+0x1c3>
   12e0d:	e8 8e fe fe ff       	call   2ca0 <__stack_chk_fail@plt>
   12e12:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
   12e17:	31 f6                	xor    esi,esi
   12e19:	8b 50 10             	mov    edx,DWORD PTR [rax+0x10]
   12e1c:	31 c0                	xor    eax,eax
   12e1e:	e8 ad fd fe ff       	call   2bd0 <fcntl@plt>
   12e23:	89 c3                	mov    ebx,eax
   12e25:	e9 76 fe ff ff       	jmp    12ca0 <rpl_fcntl+0xe0>
   12e2a:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
   12e2f:	e9 c5 fe ff ff       	jmp    12cf9 <rpl_fcntl+0x139>
   12e34:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
   12e39:	e9 13 ff ff ff       	jmp    12d51 <rpl_fcntl+0x191>
   12e3e:	66 90                	xchg   ax,ax

0000000000012e40 <rpl_fflush>:
   12e40:	48 85 ff             	test   rdi,rdi
   12e43:	53                   	push   rbx
   12e44:	48 89 fb             	mov    rbx,rdi
   12e47:	74 11                	je     12e5a <rpl_fflush+0x1a>
   12e49:	e8 02 01 ff ff       	call   2f50 <__freading@plt>
   12e4e:	85 c0                	test   eax,eax
   12e50:	74 08                	je     12e5a <rpl_fflush+0x1a>
   12e52:	f7 03 00 01 00 00    	test   DWORD PTR [rbx],0x100
   12e58:	75 0e                	jne    12e68 <rpl_fflush+0x28>
   12e5a:	48 89 df             	mov    rdi,rbx
   12e5d:	5b                   	pop    rbx
   12e5e:	e9 9d 00 ff ff       	jmp    2f00 <fflush@plt>
   12e63:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   12e68:	48 89 df             	mov    rdi,rbx
   12e6b:	ba 01 00 00 00       	mov    edx,0x1
   12e70:	31 f6                	xor    esi,esi
   12e72:	e8 09 00 00 00       	call   12e80 <rpl_fseeko>
   12e77:	48 89 df             	mov    rdi,rbx
   12e7a:	5b                   	pop    rbx
   12e7b:	e9 80 00 ff ff       	jmp    2f00 <fflush@plt>

0000000000012e80 <rpl_fseeko>:
   12e80:	48 8b 47 08          	mov    rax,QWORD PTR [rdi+0x8]
   12e84:	48 39 47 10          	cmp    QWORD PTR [rdi+0x10],rax
   12e88:	74 06                	je     12e90 <rpl_fseeko+0x10>
   12e8a:	e9 91 01 ff ff       	jmp    3020 <fseeko@plt>
   12e8f:	90                   	nop
   12e90:	48 8b 47 20          	mov    rax,QWORD PTR [rdi+0x20]
   12e94:	48 39 47 28          	cmp    QWORD PTR [rdi+0x28],rax
   12e98:	75 f0                	jne    12e8a <rpl_fseeko+0xa>
   12e9a:	48 83 7f 48 00       	cmp    QWORD PTR [rdi+0x48],0x0
   12e9f:	75 e9                	jne    12e8a <rpl_fseeko+0xa>
   12ea1:	41 54                	push   r12
   12ea3:	55                   	push   rbp
   12ea4:	41 89 d4             	mov    r12d,edx
   12ea7:	53                   	push   rbx
   12ea8:	48 89 f5             	mov    rbp,rsi
   12eab:	48 89 fb             	mov    rbx,rdi
   12eae:	e8 dd ff fe ff       	call   2e90 <fileno@plt>
   12eb3:	44 89 e2             	mov    edx,r12d
   12eb6:	48 89 ee             	mov    rsi,rbp
   12eb9:	89 c7                	mov    edi,eax
   12ebb:	e8 90 fe fe ff       	call   2d50 <lseek@plt>
   12ec0:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
   12ec4:	74 0c                	je     12ed2 <rpl_fseeko+0x52>
   12ec6:	83 23 ef             	and    DWORD PTR [rbx],0xffffffef
   12ec9:	48 89 83 90 00 00 00 	mov    QWORD PTR [rbx+0x90],rax
   12ed0:	31 c0                	xor    eax,eax
   12ed2:	5b                   	pop    rbx
   12ed3:	5d                   	pop    rbp
   12ed4:	41 5c                	pop    r12
   12ed6:	c3                   	ret    
   12ed7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   12ede:	00 00 

0000000000012ee0 <rpl_mbrtowc>:
   12ee0:	41 55                	push   r13
   12ee2:	41 54                	push   r12
   12ee4:	49 89 f5             	mov    r13,rsi
   12ee7:	55                   	push   rbp
   12ee8:	53                   	push   rbx
   12ee9:	48 89 fb             	mov    rbx,rdi
   12eec:	49 89 d4             	mov    r12,rdx
   12eef:	48 83 ec 18          	sub    rsp,0x18
   12ef3:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
   12efa:	00 00 
   12efc:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
   12f01:	31 c0                	xor    eax,eax
   12f03:	48 8d 44 24 04       	lea    rax,[rsp+0x4]
   12f08:	48 85 ff             	test   rdi,rdi
   12f0b:	48 0f 44 d8          	cmove  rbx,rax
   12f0f:	48 89 df             	mov    rdi,rbx
   12f12:	e8 b9 fd fe ff       	call   2cd0 <mbrtowc@plt>
   12f17:	48 83 f8 fd          	cmp    rax,0xfffffffffffffffd
   12f1b:	48 89 c5             	mov    rbp,rax
   12f1e:	76 20                	jbe    12f40 <rpl_mbrtowc+0x60>
   12f20:	4d 85 e4             	test   r12,r12
   12f23:	74 1b                	je     12f40 <rpl_mbrtowc+0x60>
   12f25:	31 ff                	xor    edi,edi
   12f27:	e8 b4 96 ff ff       	call   c5e0 <hard_locale>
   12f2c:	84 c0                	test   al,al
   12f2e:	75 10                	jne    12f40 <rpl_mbrtowc+0x60>
   12f30:	41 0f b6 45 00       	movzx  eax,BYTE PTR [r13+0x0]
   12f35:	bd 01 00 00 00       	mov    ebp,0x1
   12f3a:	89 03                	mov    DWORD PTR [rbx],eax
   12f3c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   12f40:	48 8b 54 24 08       	mov    rdx,QWORD PTR [rsp+0x8]
   12f45:	64 48 33 14 25 28 00 	xor    rdx,QWORD PTR fs:0x28
   12f4c:	00 00 
   12f4e:	48 89 e8             	mov    rax,rbp
   12f51:	75 0b                	jne    12f5e <rpl_mbrtowc+0x7e>
   12f53:	48 83 c4 18          	add    rsp,0x18
   12f57:	5b                   	pop    rbx
   12f58:	5d                   	pop    rbp
   12f59:	41 5c                	pop    r12
   12f5b:	41 5d                	pop    r13
   12f5d:	c3                   	ret    
   12f5e:	e8 3d fd fe ff       	call   2ca0 <__stack_chk_fail@plt>
   12f63:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   12f6a:	00 00 00 
   12f6d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000012f70 <rpl_nanosleep>:
   12f70:	41 54                	push   r12
   12f72:	55                   	push   rbp
   12f73:	53                   	push   rbx
   12f74:	48 83 ec 20          	sub    rsp,0x20
   12f78:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
   12f7f:	00 00 
   12f81:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
   12f86:	31 c0                	xor    eax,eax
   12f88:	48 8b 47 08          	mov    rax,QWORD PTR [rdi+0x8]
   12f8c:	48 3d ff c9 9a 3b    	cmp    rax,0x3b9ac9ff
   12f92:	0f 87 88 00 00 00    	ja     13020 <rpl_nanosleep+0xb0>
   12f98:	48 8b 1f             	mov    rbx,QWORD PTR [rdi]
   12f9b:	48 89 f5             	mov    rbp,rsi
   12f9e:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
   12fa3:	49 89 e4             	mov    r12,rsp
   12fa6:	48 81 fb 00 a4 1f 00 	cmp    rbx,0x1fa400
   12fad:	7f 1b                	jg     12fca <rpl_nanosleep+0x5a>
   12faf:	eb 47                	jmp    12ff8 <rpl_nanosleep+0x88>
   12fb1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   12fb8:	48 81 fb 00 a4 1f 00 	cmp    rbx,0x1fa400
   12fbf:	48 c7 44 24 08 00 00 	mov    QWORD PTR [rsp+0x8],0x0
   12fc6:	00 00 
   12fc8:	7e 2e                	jle    12ff8 <rpl_nanosleep+0x88>
   12fca:	48 89 ee             	mov    rsi,rbp
   12fcd:	4c 89 e7             	mov    rdi,r12
   12fd0:	48 c7 04 24 00 a4 1f 	mov    QWORD PTR [rsp],0x1fa400
   12fd7:	00 
   12fd8:	48 81 eb 00 a4 1f 00 	sub    rbx,0x1fa400
   12fdf:	e8 1c fd fe ff       	call   2d00 <nanosleep@plt>
   12fe4:	85 c0                	test   eax,eax
   12fe6:	74 d0                	je     12fb8 <rpl_nanosleep+0x48>
   12fe8:	48 85 ed             	test   rbp,rbp
   12feb:	74 1a                	je     13007 <rpl_nanosleep+0x97>
   12fed:	48 01 5d 00          	add    QWORD PTR [rbp+0x0],rbx
   12ff1:	eb 14                	jmp    13007 <rpl_nanosleep+0x97>
   12ff3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   12ff8:	48 89 ee             	mov    rsi,rbp
   12ffb:	4c 89 e7             	mov    rdi,r12
   12ffe:	48 89 1c 24          	mov    QWORD PTR [rsp],rbx
   13002:	e8 f9 fc fe ff       	call   2d00 <nanosleep@plt>
   13007:	48 8b 54 24 18       	mov    rdx,QWORD PTR [rsp+0x18]
   1300c:	64 48 33 14 25 28 00 	xor    rdx,QWORD PTR fs:0x28
   13013:	00 00 
   13015:	75 1b                	jne    13032 <rpl_nanosleep+0xc2>
   13017:	48 83 c4 20          	add    rsp,0x20
   1301b:	5b                   	pop    rbx
   1301c:	5d                   	pop    rbp
   1301d:	41 5c                	pop    r12
   1301f:	c3                   	ret    
   13020:	e8 eb fa fe ff       	call   2b10 <__errno_location@plt>
   13025:	c7 00 16 00 00 00    	mov    DWORD PTR [rax],0x16
   1302b:	b8 ff ff ff ff       	mov    eax,0xffffffff
   13030:	eb d5                	jmp    13007 <rpl_nanosleep+0x97>
   13032:	e8 69 fc fe ff       	call   2ca0 <__stack_chk_fail@plt>
   13037:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   1303e:	00 00 

0000000000013040 <print_and_abort>:
   13040:	48 8d 35 08 34 00 00 	lea    rsi,[rip+0x3408]        # 1644f <version_etc_copyright+0x2f>
   13047:	48 83 ec 08          	sub    rsp,0x8
   1304b:	ba 05 00 00 00       	mov    edx,0x5
   13050:	31 ff                	xor    edi,edi
   13052:	e8 19 fc fe ff       	call   2c70 <dcgettext@plt>
   13057:	48 8b 3d a2 71 20 00 	mov    rdi,QWORD PTR [rip+0x2071a2]        # 21a200 <stderr@@GLIBC_2.2.5>
   1305e:	48 8d 15 9a 30 00 00 	lea    rdx,[rip+0x309a]        # 160ff <quoting_style_vals+0x5f>
   13065:	48 89 c1             	mov    rcx,rax
   13068:	be 01 00 00 00       	mov    esi,0x1
   1306d:	31 c0                	xor    eax,eax
   1306f:	e8 8c 00 ff ff       	call   3100 <__fprintf_chk@plt>
   13074:	8b 3d b6 70 20 00    	mov    edi,DWORD PTR [rip+0x2070b6]        # 21a130 <exit_failure>
   1307a:	e8 61 00 ff ff       	call   30e0 <exit@plt>
   1307f:	90                   	nop

0000000000013080 <call_chunkfun>:
   13080:	f6 47 50 01          	test   BYTE PTR [rdi+0x50],0x1
   13084:	48 8b 47 38          	mov    rax,QWORD PTR [rdi+0x38]
   13088:	75 06                	jne    13090 <call_chunkfun+0x10>
   1308a:	48 89 f7             	mov    rdi,rsi
   1308d:	ff e0                	jmp    rax
   1308f:	90                   	nop
   13090:	48 8b 7f 48          	mov    rdi,QWORD PTR [rdi+0x48]
   13094:	ff e0                	jmp    rax
   13096:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   1309d:	00 00 00 

00000000000130a0 <call_freefun>:
   130a0:	f6 47 50 01          	test   BYTE PTR [rdi+0x50],0x1
   130a4:	48 8b 47 40          	mov    rax,QWORD PTR [rdi+0x40]
   130a8:	75 06                	jne    130b0 <call_freefun+0x10>
   130aa:	48 89 f7             	mov    rdi,rsi
   130ad:	ff e0                	jmp    rax
   130af:	90                   	nop
   130b0:	48 8b 7f 48          	mov    rdi,QWORD PTR [rdi+0x48]
   130b4:	ff e0                	jmp    rax
   130b6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   130bd:	00 00 00 

00000000000130c0 <_obstack_begin_worker>:
   130c0:	48 85 d2             	test   rdx,rdx
   130c3:	41 54                	push   r12
   130c5:	55                   	push   rbp
   130c6:	53                   	push   rbx
   130c7:	48 89 fb             	mov    rbx,rdi
   130ca:	74 64                	je     13130 <_obstack_begin_worker+0x70>
   130cc:	4c 8d 62 ff          	lea    r12,[rdx-0x1]
   130d0:	48 89 d5             	mov    rbp,rdx
   130d3:	48 85 f6             	test   rsi,rsi
   130d6:	b8 e0 0f 00 00       	mov    eax,0xfe0
   130db:	4c 89 63 30          	mov    QWORD PTR [rbx+0x30],r12
   130df:	48 0f 44 f0          	cmove  rsi,rax
   130e3:	48 89 df             	mov    rdi,rbx
   130e6:	48 89 33             	mov    QWORD PTR [rbx],rsi
   130e9:	e8 92 ff ff ff       	call   13080 <call_chunkfun>
   130ee:	48 85 c0             	test   rax,rax
   130f1:	48 89 43 08          	mov    QWORD PTR [rbx+0x8],rax
   130f5:	74 46                	je     1313d <_obstack_begin_worker+0x7d>
   130f7:	4a 8d 54 20 10       	lea    rdx,[rax+r12*1+0x10]
   130fc:	48 f7 dd             	neg    rbp
   130ff:	48 21 d5             	and    rbp,rdx
   13102:	48 8b 13             	mov    rdx,QWORD PTR [rbx]
   13105:	48 89 6b 10          	mov    QWORD PTR [rbx+0x10],rbp
   13109:	48 89 6b 18          	mov    QWORD PTR [rbx+0x18],rbp
   1310d:	48 01 c2             	add    rdx,rax
   13110:	48 89 10             	mov    QWORD PTR [rax],rdx
   13113:	48 89 53 20          	mov    QWORD PTR [rbx+0x20],rdx
   13117:	48 c7 40 08 00 00 00 	mov    QWORD PTR [rax+0x8],0x0
   1311e:	00 
   1311f:	b8 01 00 00 00       	mov    eax,0x1
   13124:	80 63 50 f9          	and    BYTE PTR [rbx+0x50],0xf9
   13128:	5b                   	pop    rbx
   13129:	5d                   	pop    rbp
   1312a:	41 5c                	pop    r12
   1312c:	c3                   	ret    
   1312d:	0f 1f 00             	nop    DWORD PTR [rax]
   13130:	41 bc 0f 00 00 00    	mov    r12d,0xf
   13136:	bd 10 00 00 00       	mov    ebp,0x10
   1313b:	eb 96                	jmp    130d3 <_obstack_begin_worker+0x13>
   1313d:	ff 15 5d 70 20 00    	call   QWORD PTR [rip+0x20705d]        # 21a1a0 <obstack_alloc_failed_handler>
   13143:	0f 1f 00             	nop    DWORD PTR [rax]
   13146:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   1314d:	00 00 00 

0000000000013150 <_obstack_begin>:
   13150:	80 67 50 fe          	and    BYTE PTR [rdi+0x50],0xfe
   13154:	48 89 4f 38          	mov    QWORD PTR [rdi+0x38],rcx
   13158:	4c 89 47 40          	mov    QWORD PTR [rdi+0x40],r8
   1315c:	e9 5f ff ff ff       	jmp    130c0 <_obstack_begin_worker>
   13161:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   13166:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   1316d:	00 00 00 

0000000000013170 <_obstack_begin_1>:
   13170:	80 4f 50 01          	or     BYTE PTR [rdi+0x50],0x1
   13174:	48 89 4f 38          	mov    QWORD PTR [rdi+0x38],rcx
   13178:	4c 89 47 40          	mov    QWORD PTR [rdi+0x40],r8
   1317c:	4c 89 4f 48          	mov    QWORD PTR [rdi+0x48],r9
   13180:	e9 3b ff ff ff       	jmp    130c0 <_obstack_begin_worker>
   13185:	90                   	nop
   13186:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   1318d:	00 00 00 

0000000000013190 <_obstack_newchunk>:
   13190:	41 56                	push   r14
   13192:	41 55                	push   r13
   13194:	31 d2                	xor    edx,edx
   13196:	41 54                	push   r12
   13198:	55                   	push   rbp
   13199:	53                   	push   rbx
   1319a:	48 8b 5f 18          	mov    rbx,QWORD PTR [rdi+0x18]
   1319e:	48 2b 5f 10          	sub    rbx,QWORD PTR [rdi+0x10]
   131a2:	48 8b 6f 08          	mov    rbp,QWORD PTR [rdi+0x8]
   131a6:	48 01 de             	add    rsi,rbx
   131a9:	48 89 d9             	mov    rcx,rbx
   131ac:	0f 92 c2             	setb   dl
   131af:	48 03 77 30          	add    rsi,QWORD PTR [rdi+0x30]
   131b3:	0f 92 c0             	setb   al
   131b6:	48 c1 e9 03          	shr    rcx,0x3
   131ba:	48 39 37             	cmp    QWORD PTR [rdi],rsi
   131bd:	4c 8d 64 0e 64       	lea    r12,[rsi+rcx*1+0x64]
   131c2:	48 0f 43 37          	cmovae rsi,QWORD PTR [rdi]
   131c6:	4c 39 e6             	cmp    rsi,r12
   131c9:	4c 0f 43 e6          	cmovae r12,rsi
   131cd:	48 85 d2             	test   rdx,rdx
   131d0:	0f 85 9f 00 00 00    	jne    13275 <_obstack_newchunk+0xe5>
   131d6:	0f b6 c0             	movzx  eax,al
   131d9:	48 85 c0             	test   rax,rax
   131dc:	0f 85 93 00 00 00    	jne    13275 <_obstack_newchunk+0xe5>
   131e2:	4c 89 e6             	mov    rsi,r12
   131e5:	49 89 fd             	mov    r13,rdi
   131e8:	e8 93 fe ff ff       	call   13080 <call_chunkfun>
   131ed:	48 85 c0             	test   rax,rax
   131f0:	49 89 c6             	mov    r14,rax
   131f3:	0f 84 7c 00 00 00    	je     13275 <_obstack_newchunk+0xe5>
   131f9:	4a 8d 34 20          	lea    rsi,[rax+r12*1]
   131fd:	49 89 45 08          	mov    QWORD PTR [r13+0x8],rax
   13201:	48 89 68 08          	mov    QWORD PTR [rax+0x8],rbp
   13205:	48 89 da             	mov    rdx,rbx
   13208:	49 89 75 20          	mov    QWORD PTR [r13+0x20],rsi
   1320c:	48 89 30             	mov    QWORD PTR [rax],rsi
   1320f:	49 8b 45 30          	mov    rax,QWORD PTR [r13+0x30]
   13213:	49 8b 75 10          	mov    rsi,QWORD PTR [r13+0x10]
   13217:	4d 8d 64 06 10       	lea    r12,[r14+rax*1+0x10]
   1321c:	48 f7 d0             	not    rax
   1321f:	49 21 c4             	and    r12,rax
   13222:	4c 89 e7             	mov    rdi,r12
   13225:	e8 56 fc fe ff       	call   2e80 <memcpy@plt>
   1322a:	41 f6 45 50 02       	test   BYTE PTR [r13+0x50],0x2
   1322f:	75 15                	jne    13246 <_obstack_newchunk+0xb6>
   13231:	49 8b 45 30          	mov    rax,QWORD PTR [r13+0x30]
   13235:	48 8d 54 05 10       	lea    rdx,[rbp+rax*1+0x10]
   1323a:	48 f7 d0             	not    rax
   1323d:	48 21 d0             	and    rax,rdx
   13240:	49 39 45 10          	cmp    QWORD PTR [r13+0x10],rax
   13244:	74 1a                	je     13260 <_obstack_newchunk+0xd0>
   13246:	41 80 65 50 fd       	and    BYTE PTR [r13+0x50],0xfd
   1324b:	4c 01 e3             	add    rbx,r12
   1324e:	4d 89 65 10          	mov    QWORD PTR [r13+0x10],r12
   13252:	49 89 5d 18          	mov    QWORD PTR [r13+0x18],rbx
   13256:	5b                   	pop    rbx
   13257:	5d                   	pop    rbp
   13258:	41 5c                	pop    r12
   1325a:	41 5d                	pop    r13
   1325c:	41 5e                	pop    r14
   1325e:	c3                   	ret    
   1325f:	90                   	nop
   13260:	48 8b 45 08          	mov    rax,QWORD PTR [rbp+0x8]
   13264:	48 89 ee             	mov    rsi,rbp
   13267:	4c 89 ef             	mov    rdi,r13
   1326a:	49 89 46 08          	mov    QWORD PTR [r14+0x8],rax
   1326e:	e8 2d fe ff ff       	call   130a0 <call_freefun>
   13273:	eb d1                	jmp    13246 <_obstack_newchunk+0xb6>
   13275:	ff 15 25 6f 20 00    	call   QWORD PTR [rip+0x206f25]        # 21a1a0 <obstack_alloc_failed_handler>
   1327b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000013280 <_obstack_allocated_p>:
   13280:	48 8b 47 08          	mov    rax,QWORD PTR [rdi+0x8]
   13284:	48 85 c0             	test   rax,rax
   13287:	74 2d                	je     132b6 <_obstack_allocated_p+0x36>
   13289:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   13290:	48 39 c6             	cmp    rsi,rax
   13293:	76 05                	jbe    1329a <_obstack_allocated_p+0x1a>
   13295:	48 39 30             	cmp    QWORD PTR [rax],rsi
   13298:	73 16                	jae    132b0 <_obstack_allocated_p+0x30>
   1329a:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
   1329e:	48 85 c0             	test   rax,rax
   132a1:	75 ed                	jne    13290 <_obstack_allocated_p+0x10>
   132a3:	31 c0                	xor    eax,eax
   132a5:	c3                   	ret    
   132a6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   132ad:	00 00 00 
   132b0:	b8 01 00 00 00       	mov    eax,0x1
   132b5:	c3                   	ret    
   132b6:	f3 c3                	repz ret 
   132b8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   132bf:	00 

00000000000132c0 <_obstack_free>:
   132c0:	41 54                	push   r12
   132c2:	55                   	push   rbp
   132c3:	48 89 f5             	mov    rbp,rsi
   132c6:	53                   	push   rbx
   132c7:	48 8b 77 08          	mov    rsi,QWORD PTR [rdi+0x8]
   132cb:	48 89 fb             	mov    rbx,rdi
   132ce:	48 85 f6             	test   rsi,rsi
   132d1:	74 2a                	je     132fd <_obstack_free+0x3d>
   132d3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   132d8:	48 39 ee             	cmp    rsi,rbp
   132db:	73 08                	jae    132e5 <_obstack_free+0x25>
   132dd:	48 8b 06             	mov    rax,QWORD PTR [rsi]
   132e0:	48 39 e8             	cmp    rax,rbp
   132e3:	73 2b                	jae    13310 <_obstack_free+0x50>
   132e5:	4c 8b 66 08          	mov    r12,QWORD PTR [rsi+0x8]
   132e9:	48 89 df             	mov    rdi,rbx
   132ec:	e8 af fd ff ff       	call   130a0 <call_freefun>
   132f1:	80 4b 50 02          	or     BYTE PTR [rbx+0x50],0x2
   132f5:	4d 85 e4             	test   r12,r12
   132f8:	4c 89 e6             	mov    rsi,r12
   132fb:	75 db                	jne    132d8 <_obstack_free+0x18>
   132fd:	48 85 ed             	test   rbp,rbp
   13300:	75 23                	jne    13325 <_obstack_free+0x65>
   13302:	5b                   	pop    rbx
   13303:	5d                   	pop    rbp
   13304:	41 5c                	pop    r12
   13306:	c3                   	ret    
   13307:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   1330e:	00 00 
   13310:	48 89 6b 18          	mov    QWORD PTR [rbx+0x18],rbp
   13314:	48 89 6b 10          	mov    QWORD PTR [rbx+0x10],rbp
   13318:	48 89 43 20          	mov    QWORD PTR [rbx+0x20],rax
   1331c:	48 89 73 08          	mov    QWORD PTR [rbx+0x8],rsi
   13320:	5b                   	pop    rbx
   13321:	5d                   	pop    rbp
   13322:	41 5c                	pop    r12
   13324:	c3                   	ret    
   13325:	e8 d6 f7 fe ff       	call   2b00 <abort@plt>
   1332a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000013330 <_obstack_memory_used>:
   13330:	48 8b 57 08          	mov    rdx,QWORD PTR [rdi+0x8]
   13334:	31 c0                	xor    eax,eax
   13336:	48 85 d2             	test   rdx,rdx
   13339:	74 1d                	je     13358 <_obstack_memory_used+0x28>
   1333b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   13340:	48 8b 0a             	mov    rcx,QWORD PTR [rdx]
   13343:	48 29 d1             	sub    rcx,rdx
   13346:	48 8b 52 08          	mov    rdx,QWORD PTR [rdx+0x8]
   1334a:	48 01 c8             	add    rax,rcx
   1334d:	48 85 d2             	test   rdx,rdx
   13350:	75 ee                	jne    13340 <_obstack_memory_used+0x10>
   13352:	f3 c3                	repz ret 
   13354:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   13358:	f3 c3                	repz ret 
   1335a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000013360 <close_stream>:
   13360:	41 54                	push   r12
   13362:	55                   	push   rbp
   13363:	48 89 fd             	mov    rbp,rdi
   13366:	53                   	push   rbx
   13367:	e8 f4 f7 fe ff       	call   2b60 <__fpending@plt>
   1336c:	8b 5d 00             	mov    ebx,DWORD PTR [rbp+0x0]
   1336f:	48 89 ef             	mov    rdi,rbp
   13372:	49 89 c4             	mov    r12,rax
   13375:	e8 c6 f7 ff ff       	call   12b40 <rpl_fclose>
   1337a:	83 e3 20             	and    ebx,0x20
   1337d:	85 db                	test   ebx,ebx
   1337f:	75 17                	jne    13398 <close_stream+0x38>
   13381:	85 c0                	test   eax,eax
   13383:	74 0a                	je     1338f <close_stream+0x2f>
   13385:	4d 85 e4             	test   r12,r12
   13388:	b8 ff ff ff ff       	mov    eax,0xffffffff
   1338d:	74 39                	je     133c8 <close_stream+0x68>
   1338f:	5b                   	pop    rbx
   13390:	5d                   	pop    rbp
   13391:	41 5c                	pop    r12
   13393:	c3                   	ret    
   13394:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   13398:	85 c0                	test   eax,eax
   1339a:	75 1c                	jne    133b8 <close_stream+0x58>
   1339c:	e8 6f f7 fe ff       	call   2b10 <__errno_location@plt>
   133a1:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
   133a7:	b8 ff ff ff ff       	mov    eax,0xffffffff
   133ac:	5b                   	pop    rbx
   133ad:	5d                   	pop    rbp
   133ae:	41 5c                	pop    r12
   133b0:	c3                   	ret    
   133b1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   133b8:	5b                   	pop    rbx
   133b9:	b8 ff ff ff ff       	mov    eax,0xffffffff
   133be:	5d                   	pop    rbp
   133bf:	41 5c                	pop    r12
   133c1:	c3                   	ret    
   133c2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
   133c8:	e8 43 f7 fe ff       	call   2b10 <__errno_location@plt>
   133cd:	83 38 09             	cmp    DWORD PTR [rax],0x9
   133d0:	5b                   	pop    rbx
   133d1:	5d                   	pop    rbp
   133d2:	41 5c                	pop    r12
   133d4:	0f 95 c0             	setne  al
   133d7:	0f b6 c0             	movzx  eax,al
   133da:	f7 d8                	neg    eax
   133dc:	c3                   	ret    
   133dd:	0f 1f 00             	nop    DWORD PTR [rax]

00000000000133e0 <dtotimespec>:
   133e0:	66 0f 2e 05 68 33 00 	ucomisd xmm0,QWORD PTR [rip+0x3368]        # 16750 <__PRETTY_FUNCTION__.4162+0x10>
   133e7:	00 
   133e8:	0f 86 92 00 00 00    	jbe    13480 <dtotimespec+0xa0>
   133ee:	f2 0f 10 0d ea 25 00 	movsd  xmm1,QWORD PTR [rip+0x25ea]        # 159e0 <short_options+0x1b10>
   133f5:	00 
   133f6:	66 0f 2e c8          	ucomisd xmm1,xmm0
   133fa:	76 6c                	jbe    13468 <dtotimespec+0x88>
   133fc:	f2 48 0f 2c f0       	cvttsd2si rsi,xmm0
   13401:	66 0f ef c9          	pxor   xmm1,xmm1
   13405:	31 c9                	xor    ecx,ecx
   13407:	f2 48 0f 2a ce       	cvtsi2sd xmm1,rsi
   1340c:	f2 0f 5c c1          	subsd  xmm0,xmm1
   13410:	66 0f ef c9          	pxor   xmm1,xmm1
   13414:	f2 0f 59 05 3c 33 00 	mulsd  xmm0,QWORD PTR [rip+0x333c]        # 16758 <__PRETTY_FUNCTION__.4162+0x18>
   1341b:	00 
   1341c:	f2 48 0f 2c d0       	cvttsd2si rdx,xmm0
   13421:	f2 48 0f 2a ca       	cvtsi2sd xmm1,rdx
   13426:	66 0f 2e c1          	ucomisd xmm0,xmm1
   1342a:	0f 97 c1             	seta   cl
   1342d:	48 01 d1             	add    rcx,rdx
   13430:	48 ba b3 94 d6 26 e8 	movabs rdx,0x112e0be826d694b3
   13437:	0b 2e 11 
   1343a:	48 89 c8             	mov    rax,rcx
   1343d:	48 f7 ea             	imul   rdx
   13440:	48 89 c8             	mov    rax,rcx
   13443:	48 c1 f8 3f          	sar    rax,0x3f
   13447:	48 c1 fa 1a          	sar    rdx,0x1a
   1344b:	48 29 c2             	sub    rdx,rax
   1344e:	48 8d 04 32          	lea    rax,[rdx+rsi*1]
   13452:	48 69 d2 00 ca 9a 3b 	imul   rdx,rdx,0x3b9aca00
   13459:	48 29 d1             	sub    rcx,rdx
   1345c:	48 89 ca             	mov    rdx,rcx
   1345f:	78 2f                	js     13490 <dtotimespec+0xb0>
   13461:	f3 c3                	repz ret 
   13463:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   13468:	48 b8 ff ff ff ff ff 	movabs rax,0x7fffffffffffffff
   1346f:	ff ff 7f 
   13472:	ba ff c9 9a 3b       	mov    edx,0x3b9ac9ff
   13477:	c3                   	ret    
   13478:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   1347f:	00 
   13480:	48 b8 00 00 00 00 00 	movabs rax,0x8000000000000000
   13487:	00 00 80 
   1348a:	31 d2                	xor    edx,edx
   1348c:	c3                   	ret    
   1348d:	0f 1f 00             	nop    DWORD PTR [rax]
   13490:	48 83 e8 01          	sub    rax,0x1
   13494:	48 81 c2 00 ca 9a 3b 	add    rdx,0x3b9aca00
   1349b:	c3                   	ret    
   1349c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000134a0 <fd_safer_flag>:
   134a0:	41 55                	push   r13
   134a2:	41 54                	push   r12
   134a4:	55                   	push   rbp
   134a5:	53                   	push   rbx
   134a6:	89 fb                	mov    ebx,edi
   134a8:	48 83 ec 08          	sub    rsp,0x8
   134ac:	83 ff 02             	cmp    edi,0x2
   134af:	77 21                	ja     134d2 <fd_safer_flag+0x32>
   134b1:	e8 2a 00 00 00       	call   134e0 <dup_safer_flag>
   134b6:	41 89 c4             	mov    r12d,eax
   134b9:	e8 52 f6 fe ff       	call   2b10 <__errno_location@plt>
   134be:	44 8b 28             	mov    r13d,DWORD PTR [rax]
   134c1:	48 89 c5             	mov    rbp,rax
   134c4:	89 df                	mov    edi,ebx
   134c6:	e8 e5 f8 fe ff       	call   2db0 <close@plt>
   134cb:	44 89 e3             	mov    ebx,r12d
   134ce:	44 89 6d 00          	mov    DWORD PTR [rbp+0x0],r13d
   134d2:	48 83 c4 08          	add    rsp,0x8
   134d6:	89 d8                	mov    eax,ebx
   134d8:	5b                   	pop    rbx
   134d9:	5d                   	pop    rbp
   134da:	41 5c                	pop    r12
   134dc:	41 5d                	pop    r13
   134de:	c3                   	ret    
   134df:	90                   	nop

00000000000134e0 <dup_safer_flag>:
   134e0:	81 e6 00 00 08 00    	and    esi,0x80000
   134e6:	b8 06 04 00 00       	mov    eax,0x406
   134eb:	ba 03 00 00 00       	mov    edx,0x3
   134f0:	0f 45 f0             	cmovne esi,eax
   134f3:	31 c0                	xor    eax,eax
   134f5:	e9 c6 f6 ff ff       	jmp    12bc0 <rpl_fcntl>
   134fa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000013500 <fopen_safer>:
   13500:	41 54                	push   r12
   13502:	55                   	push   rbp
   13503:	48 89 f5             	mov    rbp,rsi
   13506:	53                   	push   rbx
   13507:	e8 24 fb fe ff       	call   3030 <fopen@plt>
   1350c:	48 85 c0             	test   rax,rax
   1350f:	48 89 c3             	mov    rbx,rax
   13512:	74 0d                	je     13521 <fopen_safer+0x21>
   13514:	48 89 c7             	mov    rdi,rax
   13517:	e8 74 f9 fe ff       	call   2e90 <fileno@plt>
   1351c:	83 f8 02             	cmp    eax,0x2
   1351f:	76 0f                	jbe    13530 <fopen_safer+0x30>
   13521:	48 89 d8             	mov    rax,rbx
   13524:	5b                   	pop    rbx
   13525:	5d                   	pop    rbp
   13526:	41 5c                	pop    r12
   13528:	c3                   	ret    
   13529:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   13530:	89 c7                	mov    edi,eax
   13532:	e8 79 02 00 00       	call   137b0 <dup_safer>
   13537:	85 c0                	test   eax,eax
   13539:	41 89 c4             	mov    r12d,eax
   1353c:	78 3a                	js     13578 <fopen_safer+0x78>
   1353e:	48 89 df             	mov    rdi,rbx
   13541:	e8 fa f5 ff ff       	call   12b40 <rpl_fclose>
   13546:	85 c0                	test   eax,eax
   13548:	75 13                	jne    1355d <fopen_safer+0x5d>
   1354a:	48 89 ee             	mov    rsi,rbp
   1354d:	44 89 e7             	mov    edi,r12d
   13550:	e8 2b fa fe ff       	call   2f80 <fdopen@plt>
   13555:	48 85 c0             	test   rax,rax
   13558:	48 89 c3             	mov    rbx,rax
   1355b:	75 c4                	jne    13521 <fopen_safer+0x21>
   1355d:	e8 ae f5 fe ff       	call   2b10 <__errno_location@plt>
   13562:	8b 28                	mov    ebp,DWORD PTR [rax]
   13564:	48 89 c3             	mov    rbx,rax
   13567:	44 89 e7             	mov    edi,r12d
   1356a:	e8 41 f8 fe ff       	call   2db0 <close@plt>
   1356f:	89 2b                	mov    DWORD PTR [rbx],ebp
   13571:	31 db                	xor    ebx,ebx
   13573:	eb ac                	jmp    13521 <fopen_safer+0x21>
   13575:	0f 1f 00             	nop    DWORD PTR [rax]
   13578:	e8 93 f5 fe ff       	call   2b10 <__errno_location@plt>
   1357d:	44 8b 20             	mov    r12d,DWORD PTR [rax]
   13580:	48 89 c5             	mov    rbp,rax
   13583:	48 89 df             	mov    rdi,rbx
   13586:	e8 b5 f5 ff ff       	call   12b40 <rpl_fclose>
   1358b:	31 db                	xor    ebx,ebx
   1358d:	44 89 65 00          	mov    DWORD PTR [rbp+0x0],r12d
   13591:	eb 8e                	jmp    13521 <fopen_safer+0x21>
   13593:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   1359a:	00 00 00 
   1359d:	0f 1f 00             	nop    DWORD PTR [rax]

00000000000135a0 <locale_charset>:
   135a0:	48 83 ec 08          	sub    rsp,0x8
   135a4:	bf 0e 00 00 00       	mov    edi,0xe
   135a9:	e8 62 f9 fe ff       	call   2f10 <nl_langinfo@plt>
   135ae:	48 85 c0             	test   rax,rax
   135b1:	74 1d                	je     135d0 <locale_charset+0x30>
   135b3:	80 38 00             	cmp    BYTE PTR [rax],0x0
   135b6:	48 8d 15 a3 31 00 00 	lea    rdx,[rip+0x31a3]        # 16760 <__PRETTY_FUNCTION__.4162+0x20>
   135bd:	48 0f 44 c2          	cmove  rax,rdx
   135c1:	48 83 c4 08          	add    rsp,0x8
   135c5:	c3                   	ret    
   135c6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   135cd:	00 00 00 
   135d0:	48 8d 05 89 31 00 00 	lea    rax,[rip+0x3189]        # 16760 <__PRETTY_FUNCTION__.4162+0x20>
   135d7:	48 83 c4 08          	add    rsp,0x8
   135db:	c3                   	ret    
   135dc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000135e0 <strcoll_loop>:
   135e0:	41 57                	push   r15
   135e2:	41 56                	push   r14
   135e4:	49 89 ce             	mov    r14,rcx
   135e7:	41 55                	push   r13
   135e9:	41 54                	push   r12
   135eb:	49 89 f5             	mov    r13,rsi
   135ee:	55                   	push   rbp
   135ef:	53                   	push   rbx
   135f0:	49 89 fc             	mov    r12,rdi
   135f3:	48 89 d5             	mov    rbp,rdx
   135f6:	48 83 ec 08          	sub    rsp,0x8
   135fa:	e8 11 f5 fe ff       	call   2b10 <__errno_location@plt>
   135ff:	49 89 c7             	mov    r15,rax
   13602:	eb 2f                	jmp    13633 <strcoll_loop+0x53>
   13604:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   13608:	4c 89 e7             	mov    rdi,r12
   1360b:	e8 80 f6 fe ff       	call   2c90 <strlen@plt>
   13610:	48 89 ef             	mov    rdi,rbp
   13613:	48 8d 58 01          	lea    rbx,[rax+0x1]
   13617:	e8 74 f6 fe ff       	call   2c90 <strlen@plt>
   1361c:	48 83 c0 01          	add    rax,0x1
   13620:	49 01 dc             	add    r12,rbx
   13623:	48 01 c5             	add    rbp,rax
   13626:	49 29 c6             	sub    r14,rax
   13629:	49 29 dd             	sub    r13,rbx
   1362c:	74 32                	je     13660 <strcoll_loop+0x80>
   1362e:	4d 85 f6             	test   r14,r14
   13631:	74 4d                	je     13680 <strcoll_loop+0xa0>
   13633:	41 c7 07 00 00 00 00 	mov    DWORD PTR [r15],0x0
   1363a:	48 89 ee             	mov    rsi,rbp
   1363d:	4c 89 e7             	mov    rdi,r12
   13640:	e8 eb f8 fe ff       	call   2f30 <strcoll@plt>
   13645:	85 c0                	test   eax,eax
   13647:	74 bf                	je     13608 <strcoll_loop+0x28>
   13649:	48 83 c4 08          	add    rsp,0x8
   1364d:	5b                   	pop    rbx
   1364e:	5d                   	pop    rbp
   1364f:	41 5c                	pop    r12
   13651:	41 5d                	pop    r13
   13653:	41 5e                	pop    r14
   13655:	41 5f                	pop    r15
   13657:	c3                   	ret    
   13658:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   1365f:	00 
   13660:	31 c0                	xor    eax,eax
   13662:	4d 85 f6             	test   r14,r14
   13665:	0f 95 c0             	setne  al
   13668:	48 83 c4 08          	add    rsp,0x8
   1366c:	5b                   	pop    rbx
   1366d:	f7 d8                	neg    eax
   1366f:	5d                   	pop    rbp
   13670:	41 5c                	pop    r12
   13672:	41 5d                	pop    r13
   13674:	41 5e                	pop    r14
   13676:	41 5f                	pop    r15
   13678:	c3                   	ret    
   13679:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   13680:	48 83 c4 08          	add    rsp,0x8
   13684:	b8 01 00 00 00       	mov    eax,0x1
   13689:	5b                   	pop    rbx
   1368a:	5d                   	pop    rbp
   1368b:	41 5c                	pop    r12
   1368d:	41 5d                	pop    r13
   1368f:	41 5e                	pop    r14
   13691:	41 5f                	pop    r15
   13693:	c3                   	ret    
   13694:	66 90                	xchg   ax,ax
   13696:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   1369d:	00 00 00 

00000000000136a0 <memcoll>:
   136a0:	41 57                	push   r15
   136a2:	41 56                	push   r14
   136a4:	49 89 d7             	mov    r15,rdx
   136a7:	41 55                	push   r13
   136a9:	41 54                	push   r12
   136ab:	49 89 fe             	mov    r14,rdi
   136ae:	55                   	push   rbp
   136af:	53                   	push   rbx
   136b0:	48 89 cd             	mov    rbp,rcx
   136b3:	48 89 f3             	mov    rbx,rsi
   136b6:	48 83 ec 18          	sub    rsp,0x18
   136ba:	48 39 ce             	cmp    rsi,rcx
   136bd:	75 13                	jne    136d2 <memcoll+0x32>
   136bf:	48 89 f2             	mov    rdx,rsi
   136c2:	4c 89 fe             	mov    rsi,r15
   136c5:	e8 26 f7 fe ff       	call   2df0 <memcmp@plt>
   136ca:	85 c0                	test   eax,eax
   136cc:	89 44 24 08          	mov    DWORD PTR [rsp+0x8],eax
   136d0:	74 66                	je     13738 <memcoll+0x98>
   136d2:	4d 8d 2c 1e          	lea    r13,[r14+rbx*1]
   136d6:	4d 8d 24 2f          	lea    r12,[r15+rbp*1]
   136da:	48 8d 4d 01          	lea    rcx,[rbp+0x1]
   136de:	48 8d 73 01          	lea    rsi,[rbx+0x1]
   136e2:	4c 89 fa             	mov    rdx,r15
   136e5:	4c 89 f7             	mov    rdi,r14
   136e8:	45 0f b6 4d 00       	movzx  r9d,BYTE PTR [r13+0x0]
   136ed:	45 0f b6 04 24       	movzx  r8d,BYTE PTR [r12]
   136f2:	41 c6 45 00 00       	mov    BYTE PTR [r13+0x0],0x0
   136f7:	41 c6 04 24 00       	mov    BYTE PTR [r12],0x0
   136fc:	44 88 4c 24 0f       	mov    BYTE PTR [rsp+0xf],r9b
   13701:	44 88 44 24 08       	mov    BYTE PTR [rsp+0x8],r8b
   13706:	e8 d5 fe ff ff       	call   135e0 <strcoll_loop>
   1370b:	44 0f b6 4c 24 0f    	movzx  r9d,BYTE PTR [rsp+0xf]
   13711:	44 0f b6 44 24 08    	movzx  r8d,BYTE PTR [rsp+0x8]
   13717:	89 c2                	mov    edx,eax
   13719:	45 88 4d 00          	mov    BYTE PTR [r13+0x0],r9b
   1371d:	45 88 04 24          	mov    BYTE PTR [r12],r8b
   13721:	48 83 c4 18          	add    rsp,0x18
   13725:	89 d0                	mov    eax,edx
   13727:	5b                   	pop    rbx
   13728:	5d                   	pop    rbp
   13729:	41 5c                	pop    r12
   1372b:	41 5d                	pop    r13
   1372d:	41 5e                	pop    r14
   1372f:	41 5f                	pop    r15
   13731:	c3                   	ret    
   13732:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
   13738:	e8 d3 f3 fe ff       	call   2b10 <__errno_location@plt>
   1373d:	8b 54 24 08          	mov    edx,DWORD PTR [rsp+0x8]
   13741:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
   13747:	eb d8                	jmp    13721 <memcoll+0x81>
   13749:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000013750 <memcoll0>:
   13750:	41 54                	push   r12
   13752:	55                   	push   rbp
   13753:	49 89 d4             	mov    r12,rdx
   13756:	53                   	push   rbx
   13757:	48 89 fd             	mov    rbp,rdi
   1375a:	48 89 f3             	mov    rbx,rsi
   1375d:	48 83 ec 10          	sub    rsp,0x10
   13761:	48 39 ce             	cmp    rsi,rcx
   13764:	75 19                	jne    1377f <memcoll0+0x2f>
   13766:	48 89 f2             	mov    rdx,rsi
   13769:	4c 89 e6             	mov    rsi,r12
   1376c:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
   13771:	e8 7a f6 fe ff       	call   2df0 <memcmp@plt>
   13776:	85 c0                	test   eax,eax
   13778:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
   1377d:	74 19                	je     13798 <memcoll0+0x48>
   1377f:	48 83 c4 10          	add    rsp,0x10
   13783:	4c 89 e2             	mov    rdx,r12
   13786:	48 89 de             	mov    rsi,rbx
   13789:	48 89 ef             	mov    rdi,rbp
   1378c:	5b                   	pop    rbx
   1378d:	5d                   	pop    rbp
   1378e:	41 5c                	pop    r12
   13790:	e9 4b fe ff ff       	jmp    135e0 <strcoll_loop>
   13795:	0f 1f 00             	nop    DWORD PTR [rax]
   13798:	e8 73 f3 fe ff       	call   2b10 <__errno_location@plt>
   1379d:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
   137a3:	48 83 c4 10          	add    rsp,0x10
   137a7:	31 c0                	xor    eax,eax
   137a9:	5b                   	pop    rbx
   137aa:	5d                   	pop    rbp
   137ab:	41 5c                	pop    r12
   137ad:	c3                   	ret    
   137ae:	66 90                	xchg   ax,ax

00000000000137b0 <dup_safer>:
   137b0:	ba 03 00 00 00       	mov    edx,0x3
   137b5:	31 f6                	xor    esi,esi
   137b7:	31 c0                	xor    eax,eax
   137b9:	e9 02 f4 ff ff       	jmp    12bc0 <rpl_fcntl>
   137be:	66 90                	xchg   ax,ax

00000000000137c0 <__libc_csu_init>:
   137c0:	41 57                	push   r15
   137c2:	41 56                	push   r14
   137c4:	49 89 d7             	mov    r15,rdx
   137c7:	41 55                	push   r13
   137c9:	41 54                	push   r12
   137cb:	4c 8d 25 9e 5d 20 00 	lea    r12,[rip+0x205d9e]        # 219570 <__frame_dummy_init_array_entry>
   137d2:	55                   	push   rbp
   137d3:	48 8d 2d 9e 5d 20 00 	lea    rbp,[rip+0x205d9e]        # 219578 <__init_array_end>
   137da:	53                   	push   rbx
   137db:	41 89 fd             	mov    r13d,edi
   137de:	49 89 f6             	mov    r14,rsi
   137e1:	4c 29 e5             	sub    rbp,r12
   137e4:	48 83 ec 08          	sub    rsp,0x8
   137e8:	48 c1 fd 03          	sar    rbp,0x3
   137ec:	e8 97 f2 fe ff       	call   2a88 <_init>
   137f1:	48 85 ed             	test   rbp,rbp
   137f4:	74 20                	je     13816 <__libc_csu_init+0x56>
   137f6:	31 db                	xor    ebx,ebx
   137f8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   137ff:	00 
   13800:	4c 89 fa             	mov    rdx,r15
   13803:	4c 89 f6             	mov    rsi,r14
   13806:	44 89 ef             	mov    edi,r13d
   13809:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
   1380d:	48 83 c3 01          	add    rbx,0x1
   13811:	48 39 dd             	cmp    rbp,rbx
   13814:	75 ea                	jne    13800 <__libc_csu_init+0x40>
   13816:	48 83 c4 08          	add    rsp,0x8
   1381a:	5b                   	pop    rbx
   1381b:	5d                   	pop    rbp
   1381c:	41 5c                	pop    r12
   1381e:	41 5d                	pop    r13
   13820:	41 5e                	pop    r14
   13822:	41 5f                	pop    r15
   13824:	c3                   	ret    
   13825:	90                   	nop
   13826:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   1382d:	00 00 00 

0000000000013830 <__libc_csu_fini>:
   13830:	f3 c3                	repz ret 
   13832:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
   13839:	00 00 00 
   1383c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000013840 <atexit>:
   13840:	48 8b 15 c1 67 20 00 	mov    rdx,QWORD PTR [rip+0x2067c1]        # 21a008 <__dso_handle>
   13847:	31 f6                	xor    esi,esi
   13849:	e9 42 f8 fe ff       	jmp    3090 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000013850 <_fini>:
   13850:	48 83 ec 08          	sub    rsp,0x8
   13854:	48 83 c4 08          	add    rsp,0x8
   13858:	c3                   	ret    
