0x2540: sub rsp,0x8
0x2544: mov rax,qword ptr [rip+0x219a95]
0x254b: test rax,rax
0x254e: je 0x2552
0x2550: call rax
0x2552: add rsp,0x8
0x2556: ret 
0x2560: push qword ptr [rip+0x2196ca]
0x2566: jmp qword ptr [rip+0x2196cc]
0x256c: nop dword ptr [rax+0x0]
0x2576: push 0x0
0x257b: jmp 0x2560
0x2580: jmp qword ptr [rip+0x2196c2]
0x2586: push 0x1
0x258b: jmp 0x2560
0x2596: push 0x2
0x259b: jmp 0x2560
0x25a6: push 0x3
0x25ab: jmp 0x2560
0x25b6: push 0x4
0x25bb: jmp 0x2560
0x25c6: push 0x5
0x25cb: jmp 0x2560
0x25d0: jmp qword ptr [rip+0x21969a]
0x25d6: push 0x6
0x25db: jmp 0x2560
0x25e6: push 0x7
0x25eb: jmp 0x2560
0x25f0: jmp qword ptr [rip+0x21968a]
0x25f6: push 0x8
0x25fb: jmp 0x2560
0x2606: push 0x9
0x260b: jmp 0x2560
0x2610: jmp qword ptr [rip+0x21967a]
0x2616: push 0xa
0x261b: jmp 0x2560
0x2626: push 0xb
0x262b: jmp 0x2560
0x2630: jmp qword ptr [rip+0x21966a]
0x2636: push 0xc
0x263b: jmp 0x2560
0x2646: push 0xd
0x264b: jmp 0x2560
0x2650: jmp qword ptr [rip+0x21965a]
0x2656: push 0xe
0x265b: jmp 0x2560
0x2660: jmp qword ptr [rip+0x219652]
0x2666: push 0xf
0x266b: jmp 0x2560
0x2676: push 0x10
0x267b: jmp 0x2560
0x2680: jmp qword ptr [rip+0x219642]
0x2686: push 0x11
0x268b: jmp 0x2560
0x2690: jmp qword ptr [rip+0x21963a]
0x2696: push 0x12
0x269b: jmp 0x2560
0x26a6: push 0x13
0x26ab: jmp 0x2560
0x26b0: jmp qword ptr [rip+0x21962a]
0x26b6: push 0x14
0x26bb: jmp 0x2560
0x26c6: push 0x15
0x26cb: jmp 0x2560
0x26d6: push 0x16
0x26db: jmp 0x2560
0x26e0: jmp qword ptr [rip+0x219612]
0x26e6: push 0x17
0x26eb: jmp 0x2560
0x26f0: jmp qword ptr [rip+0x21960a]
0x26f6: push 0x18
0x26fb: jmp 0x2560
0x2706: push 0x19
0x270b: jmp 0x2560
0x2710: jmp qword ptr [rip+0x2195fa]
0x2716: push 0x1a
0x271b: jmp 0x2560
0x2726: push 0x1b
0x272b: jmp 0x2560
0x2736: push 0x1c
0x273b: jmp 0x2560
0x2746: push 0x1d
0x274b: jmp 0x2560
0x2756: push 0x1e
0x275b: jmp 0x2560
0x2766: push 0x1f
0x276b: jmp 0x2560
0x2776: push 0x20
0x277b: jmp 0x2560
0x2786: push 0x21
0x278b: jmp 0x2560
0x2796: push 0x22
0x279b: jmp 0x2560
0x27a6: push 0x23
0x27ab: jmp 0x2560
0x27b6: push 0x24
0x27bb: jmp 0x2560
0x27c6: push 0x25
0x27cb: jmp 0x2560
0x27d6: push 0x26
0x27db: jmp 0x2560
0x27e6: push 0x27
0x27eb: jmp 0x2560
0x27f0: jmp qword ptr [rip+0x21958a]
0x27f6: push 0x28
0x27fb: jmp 0x2560
0x2800: jmp qword ptr [rip+0x219582]
0x2806: push 0x29
0x280b: jmp 0x2560
0x2816: push 0x2a
0x281b: jmp 0x2560
0x2826: push 0x2b
0x282b: jmp 0x2560
0x2836: push 0x2c
0x283b: jmp 0x2560
0x2846: push 0x2d
0x284b: jmp 0x2560
0x2850: jmp qword ptr [rip+0x21955a]
0x2856: push 0x2e
0x285b: jmp 0x2560
0x2866: push 0x2f
0x286b: jmp 0x2560
0x2876: push 0x30
0x287b: jmp 0x2560
0x2886: push 0x31
0x288b: jmp 0x2560
0x2896: push 0x32
0x289b: jmp 0x2560
0x28a6: push 0x33
0x28ab: jmp 0x2560
0x28b0: jmp qword ptr [rip+0x21952a]
0x28b6: push 0x34
0x28bb: jmp 0x2560
0x28c0: jmp qword ptr [rip+0x219522]
0x28c6: push 0x35
0x28cb: jmp 0x2560
0x28d6: push 0x36
0x28db: jmp 0x2560
0x28e0: jmp qword ptr [rip+0x219512]
0x28e6: push 0x37
0x28eb: jmp 0x2560
0x28f6: push 0x38
0x28fb: jmp 0x2560
0x2900: jmp qword ptr [rip+0x219502]
0x2906: push 0x39
0x290b: jmp 0x2560
0x2916: push 0x3a
0x291b: jmp 0x2560
0x2926: push 0x3b
0x292b: jmp 0x2560
0x2936: push 0x3c
0x293b: jmp 0x2560
0x2940: jmp qword ptr [rip+0x2194e2]
0x2946: push 0x3d
0x294b: jmp 0x2560
0x2956: push 0x3e
0x295b: jmp 0x2560
0x2966: push 0x3f
0x296b: jmp 0x2560
0x2976: push 0x40
0x297b: jmp 0x2560
0x2980: jmp qword ptr [rip+0x2194c2]
0x2986: push 0x41
0x298b: jmp 0x2560
0x2990: jmp qword ptr [rip+0x2194ba]
0x2996: push 0x42
0x299b: jmp 0x2560
0x29a6: push 0x43
0x29ab: jmp 0x2560
0x29b0: jmp qword ptr [rip+0x2194aa]
0x29b6: push 0x44
0x29bb: jmp 0x2560
0x29c0: jmp qword ptr [rip+0x2194a2]
0x29c6: push 0x45
0x29cb: jmp 0x2560
0x29d6: push 0x46
0x29db: jmp 0x2560
0x29e6: push 0x47
0x29eb: jmp 0x2560
0x29f6: push 0x48
0x29fb: jmp 0x2560
0x2a06: push 0x49
0x2a0b: jmp 0x2560
0x2a10: jmp qword ptr [rip+0x21947a]
0x2a16: push 0x4a
0x2a1b: jmp 0x2560
0x2a26: push 0x4b
0x2a2b: jmp 0x2560
0x2a30: jmp qword ptr [rip+0x21946a]
0x2a36: push 0x4c
0x2a3b: jmp 0x2560
0x2a40: jmp qword ptr [rip+0x219462]
0x2a46: push 0x4d
0x2a4b: jmp 0x2560
0x2a50: jmp qword ptr [rip+0x21945a]
0x2a56: push 0x4e
0x2a5b: jmp 0x2560
0x2a60: jmp qword ptr [rip+0x219452]
0x2a66: push 0x4f
0x2a6b: jmp 0x2560
0x2a76: push 0x50
0x2a7b: jmp 0x2560
0x2a80: jmp qword ptr [rip+0x219442]
0x2a86: push 0x51
0x2a8b: jmp 0x2560
0x2a96: push 0x52
0x2a9b: jmp 0x2560
0x2aa6: push 0x53
0x2aab: jmp 0x2560
0x2ab6: push 0x54
0x2abb: jmp 0x2560
0x2ac0: jmp qword ptr [rip+0x219422]
0x2ac6: push 0x55
0x2acb: jmp 0x2560
0x2ad0: jmp qword ptr [rip+0x21941a]
0x2ad6: push 0x56
0x2adb: jmp 0x2560
0x2ae0: jmp qword ptr [rip+0x219412]
0x2ae6: push 0x57
0x2aeb: jmp 0x2560
0x2af6: push 0x58
0x2afb: jmp 0x2560
0x2b00: jmp qword ptr [rip+0x219402]
0x2b06: push 0x59
0x2b0b: jmp 0x2560
0x2b16: push 0x5a
0x2b1b: jmp 0x2560
0x2b26: push 0x5b
0x2b2b: jmp 0x2560
0x2b36: push 0x5c
0x2b3b: jmp 0x2560
0x2b40: jmp qword ptr [rip+0x2193e2]
0x2b46: push 0x5d
0x2b4b: jmp 0x2560
0x2b50: jmp qword ptr [rip+0x2193da]
0x2b56: push 0x5e
0x2b5b: jmp 0x2560
0x2b60: jmp qword ptr [rip+0x2193d2]
0x2b66: push 0x5f
0x2b6b: jmp 0x2560
0x2b76: push 0x60
0x2b7b: jmp 0x2560
0x2b86: push 0x61
0x2b8b: jmp 0x2560
0x2b90: jmp qword ptr [rip+0x2193ba]
0x2b96: push 0x62
0x2b9b: jmp 0x2560
0x2ba6: push 0x63
0x2bab: jmp 0x2560
0x2bb0: jmp qword ptr [rip+0x2193aa]
0x2bb6: push 0x64
0x2bbb: jmp 0x2560
0x2bc6: push 0x65
0x2bcb: jmp 0x2560
0x2bd6: push 0x66
0x2bdb: jmp 0x2560
0x2be0: jmp qword ptr [rip+0x219392]
0x2be6: push 0x67
0x2beb: jmp 0x2560
0x2bf6: push 0x68
0x2bfb: jmp 0x2560
0x2c06: push 0x69
0x2c0b: jmp 0x2560
0x2c16: push 0x6a
0x2c1b: jmp 0x2560
0x2c26: push 0x6b
0x2c2b: jmp 0x2560
0x2c36: push 0x6c
0x2c3b: jmp 0x2560
0x2c40: jmp qword ptr [rip+0x219362]
0x2c46: push 0x6d
0x2c4b: jmp 0x2560
0x2c56: push 0x6e
0x2c5b: jmp 0x2560
0x2c60: jmp qword ptr [rip+0x219352]
0x2c66: push 0x6f
0x2c6b: jmp 0x2560
0x2c76: push 0x70
0x2c7b: jmp 0x2560
0x2c86: xchg ax,ax
0x2c88: jmp qword ptr [rip+0x219362]
0x2c8e: xchg ax,ax
0x2c90: test edi,edi
0x2c92: mov rax,rsi
0x2c95: mov esi,edx
0x2c97: js 0x2c9e
0x2c99: jmp 0x2ac0
0x2c9e: mov rdi,rax
0x2ca1: jmp 0x2ae0
0x2ca6: push rbx
0x2ca7: call 0x25a0
0x2cac: lea rsi,[rip+0x131b5]
0x2cb3: mov rbx,rax
0x2cb6: mov edx,0x5
0x2cbb: xor edi,edi
0x2cbd: mov dword ptr [rax],0x5f
0x2cc3: call 0x2730
0x2cc8: mov esi,dword ptr [rbx]
0x2cca: mov rdx,rax
0x2ccd: mov edi,0x1
0x2cd2: xor eax,eax
0x2cd4: call 0x2b10
0x2cd9: nop dword ptr [rax+0x0]
0x2e9f: nop 
0x2ec8: nop dword ptr [rax+rax*1+0x0]
0x2eda: nop word ptr [rax+rax*1+0x0]
0x2efb: nop dword ptr [rax+rax*1+0x0]
0x2f4d: nop dword ptr [rax]
0x2fcc: nop dword ptr [rax+0x0]
0x2fda: nop word ptr [rax+rax*1+0x0]
0x2fea: nop word ptr [rax+rax*1+0x0]
0x3007: nop word ptr [rax+rax*1+0x0]
0x301d: nop dword ptr [rax]
0x3039: nop dword ptr [rax+0x0]
0x30ed: mov r14d,eax
0x30f0: xor r14d,0x1
0x30f4: mov rcx,qword ptr [rsp+0x108]
0x30fc: xor rcx,qword ptr fs:0x28
0x3105: movzx eax,r14b
0x3109: jne 0x346e
0x310f: add rsp,0x118
0x3116: pop rbx
0x3117: pop rbp
0x3118: pop r12
0x311a: pop r13
0x311c: pop r14
0x311e: pop r15
0x3120: ret 
0x31b1: and r14d,eax
0x31b4: cmp r15,qword ptr [rsp+0x8]
0x31b9: jne 0x3190
0x31bb: jmp 0x30f0
0x31d6: mov r14d,eax
0x31d9: jmp 0x30f0
0x330e: jmp 0x2ebe
0x3334: jmp 0x2ebe
0x346e: call 0x2780
0x3473: nop word ptr cs:[rax+rax*1+0x0]
0x347d: nop dword ptr [rax]
0x34aa: hlt 
0x34ab: nop dword ptr [rax+rax*1+0x0]
0x34b0: lea rdi,[rip+0x218bf1]
0x34b7: push rbp
0x34b8: lea rax,[rip+0x218be9]
0x34bf: cmp rax,rdi
0x34c2: mov rbp,rsp
0x34c5: je 0x34e0
0x34c7: mov rax,qword ptr [rip+0x218b02]
0x34ce: test rax,rax
0x34d1: je 0x34e0
0x34d3: pop rbp
0x34d4: jmp rax
0x34d6: nop word ptr cs:[rax+rax*1+0x0]
0x34e0: pop rbp
0x34e1: ret 
0x34e2: nop dword ptr [rax+0x0]
0x34e6: nop word ptr cs:[rax+rax*1+0x0]
0x34f0: lea rdi,[rip+0x218bb1]
0x34f7: lea rsi,[rip+0x218baa]
0x34fe: push rbp
0x34ff: sub rsi,rdi
0x3502: mov rbp,rsp
0x3505: sar rsi,0x3
0x3509: mov rax,rsi
0x350c: shr rax,0x3f
0x3510: add rsi,rax
0x3513: sar rsi,1
0x3516: je 0x3530
0x3518: mov rax,qword ptr [rip+0x218ac9]
0x351f: test rax,rax
0x3522: je 0x3530
0x3524: pop rbp
0x3525: jmp rax
0x3527: nop word ptr [rax+rax*1+0x0]
0x3530: pop rbp
0x3531: ret 
0x3532: nop dword ptr [rax+0x0]
0x3536: nop word ptr cs:[rax+rax*1+0x0]
0x3540: cmp byte ptr [rip+0x218bc1],0x0
0x3547: jne 0x3578
0x3549: cmp qword ptr [rip+0x218a9f],0x0
0x3551: push rbp
0x3552: mov rbp,rsp
0x3555: je 0x3563
0x3557: mov rdi,qword ptr [rip+0x218aaa]
0x355e: call 0x2c88
0x3563: call 0x34b0
0x3568: mov byte ptr [rip+0x218b99],0x1
0x356f: pop rbp
0x3570: ret 
0x3571: nop dword ptr [rax+0x0]
0x3578: repz ret
0x357a: nop word ptr [rax+rax*1+0x0]
0x3580: push rbp
0x3581: mov rbp,rsp
0x3584: pop rbp
0x3585: jmp 0x34f0
0x358a: nop word ptr [rax+rax*1+0x0]
0x35c0: test al,al
0x35c2: je 0x3660
0x35c8: cmp byte ptr [rsp+0xe],0x0
0x35cd: jne 0x3680
0x35d3: cmp byte ptr [rsp+0xf],0x1
0x35d8: je 0x3660
0x35de: test rbx,rbx
0x35e1: je 0x3660
0x35e3: lea rdi,[rip+0x218b26]
0x35ea: mov byte ptr [rsp+0x10],0x0
0x35ef: mov byte ptr [rsp+0x1a],0x1
0x35f4: mov byte ptr [rsp+0x19],0x1
0x35f9: mov byte ptr [rsp+0x18],0x0
0x35fe: mov dword ptr [rsp+0x14],0x5
0x3606: mov byte ptr [rsp+0x29],0x0
0x360b: mov byte ptr [rsp+0x2a],0x0
0x3610: mov byte ptr [rsp+0x2b],0x1
0x3615: call 0xec30
0x361a: test rax,rax
0x361d: mov qword ptr [rsp+0x20],rax
0x3622: je 0x36a8
0x3628: movzx eax,byte ptr [rbp+0x2e]
0x362c: lea rsi,[rsp+0x10]
0x3631: lea rdi,[rsp+0x30]
0x3636: mov byte ptr [rsp+0x28],0x0
0x363b: mov qword ptr [rsp+0x30],rbx
0x3640: mov qword ptr [rsp+0x38],0x0
0x3649: mov byte ptr [rsp+0x2a],al
0x364d: call 0x4350
0x3652: lea edx,[rax-0x2]
0x3655: cmp edx,0x2
0x3658: ja 0x3689
0x365a: cmp eax,0x4
0x365d: setne al
0x3660: mov rcx,qword ptr [rsp+0x48]
0x3665: xor rcx,qword ptr fs:0x28
0x366e: jne 0x3684
0x3670: add rsp,0x58
0x3674: pop rbx
0x3675: pop rbp
0x3676: ret 
0x3677: nop word ptr [rax+rax*1+0x0]
0x3680: xor eax,eax
0x3682: jmp 0x3660
0x3684: call 0x2780
0x3689: lea rcx,[rip+0x123f8]
0x3690: lea rsi,[rip+0x1186d]
0x3697: lea rdi,[rip+0x11881]
0x369e: mov edx,0xef
0x36a3: call 0x2820
0x36a8: lea rsi,[rip+0x133df]
0x36af: mov edi,0x4
0x36b4: call 0xe6d0
0x36b9: lea rsi,[rip+0x11a58]
0x36c0: mov edx,0x5
0x36c5: xor edi,edi
0x36c7: mov rbp,rax
0x36ca: call 0x2730
0x36cf: mov rbx,rax
0x36d2: call 0x25a0
0x36d7: mov esi,dword ptr [rax]
0x36d9: mov rcx,rbp
0x36dc: mov rdx,rbx
0x36df: mov edi,0x1
0x36e4: xor eax,eax
0x36e6: call 0x2b10
0x36eb: nop dword ptr [rax+rax*1+0x0]
0x3724: nop dword ptr [rax+0x0]
0x3756: mov rdi,rbp
0x3759: mov ebx,eax
0x375b: call 0x2c80
0x3760: add rsp,0x10
0x3764: mov eax,ebx
0x3766: pop rbx
0x3767: pop rbp
0x3768: pop r12
0x376a: ret 
0x376b: nop dword ptr [rax+rax*1+0x0]
0x377f: nop 
0x3baa: nop word ptr [rax+rax*1+0x0]
0x3bb0: push r13
0x3bb2: push r12
0x3bb4: mov r13,rdx
0x3bb7: push rbp
0x3bb8: push rbx
0x3bb9: xor edx,edx
0x3bbb: mov r12,rdi
0x3bbe: mov rbx,rsi
0x3bc1: mov ebp,ecx
0x3bc3: sub rsp,0xa8
0x3bca: mov rsi,qword ptr [rsi+0x30]
0x3bce: mov edi,dword ptr [rdi+0x2c]
0x3bd1: mov rax,qword ptr fs:0x28
0x3bda: mov qword ptr [rsp+0x98],rax
0x3be2: xor eax,eax
0x3be4: test cl,cl
0x3be6: setne dl
0x3be9: shl edx,0x9
0x3bec: call 0x2620
0x3bf1: test eax,eax
0x3bf3: jne 0x3c30
0x3bf5: cmp byte ptr [r13+0x1a],0x0
0x3bfa: mov eax,0x2
0x3bff: jne 0x3ce8
0x3c05: mov rcx,qword ptr [rsp+0x98]
0x3c0d: xor rcx,qword ptr fs:0x28
0x3c16: jne 0x3df8
0x3c1c: add rsp,0xa8
0x3c23: pop rbx
0x3c24: pop rbp
0x3c25: pop r12
0x3c27: pop r13
0x3c29: ret 
0x3c2a: nop word ptr [rax+rax*1+0x0]
0x3c30: call 0x25a0
0x3c35: mov edx,dword ptr [rax]
0x3c37: mov rbp,rax
0x3c3a: cmp edx,0x1e
0x3c3d: je 0x3d38
0x3c43: cmp byte ptr [r13+0x0],0x0
0x3c48: je 0x3c70
0x3c4a: cmp edx,0x14
0x3c4d: je 0x3db9
0x3c53: jle 0x3db0
0x3c59: cmp edx,0x16
0x3c5c: je 0x3db9
0x3c62: cmp edx,0x54
0x3c65: je 0x3db9
0x3c6b: nop dword ptr [rax+rax*1+0x0]
0x3c70: cmp word ptr [rbx+0x70],0x4
0x3c75: je 0x3d70
0x3c7b: mov rsi,qword ptr [rbx+0x38]
0x3c7f: mov edi,0x4
0x3c84: call 0xe6d0
0x3c89: lea rsi,[rip+0x11e27]
0x3c90: xor edi,edi
0x3c92: mov edx,0x5
0x3c97: mov r12,rax
0x3c9a: call 0x2730
0x3c9f: mov esi,dword ptr [rbp+0x0]
0x3ca2: mov rdx,rax
0x3ca5: xor edi,edi
0x3ca7: xor eax,eax
0x3ca9: mov rcx,r12
0x3cac: call 0x2b10
0x3cb1: mov rax,qword ptr [rbx+0x8]
0x3cb5: cmp qword ptr [rax+0x58],0x0
0x3cba: jns 0x3cd3
0x3cbc: jmp 0x3cda
0x3cbe: xchg ax,ax
0x3cc0: mov qword ptr [rax+0x20],0x1
0x3cc8: mov rax,qword ptr [rax+0x8]
0x3ccc: cmp qword ptr [rax+0x58],0x0
0x3cd1: js 0x3cda
0x3cd3: cmp qword ptr [rax+0x20],0x0
0x3cd8: je 0x3cc0
0x3cda: mov eax,0x4
0x3cdf: jmp 0x3c05
0x3ce4: nop dword ptr [rax+0x0]
0x3ce8: mov rsi,qword ptr [rbx+0x38]
0x3cec: mov edi,0x4
0x3cf1: call 0xe6d0
0x3cf6: test bpl,bpl
0x3cf9: mov rbx,rax
0x3cfc: mov edx,0x5
0x3d01: je 0x3dc8
0x3d07: lea rsi,[rip+0x11d87]
0x3d0e: xor edi,edi
0x3d10: call 0x2730
0x3d15: mov rsi,rax
0x3d18: mov rdx,rbx
0x3d1b: mov edi,0x1
0x3d20: xor eax,eax
0x3d22: call 0x2ab0
0x3d27: mov eax,0x2
0x3d2c: jmp 0x3c05
0x3d31: nop dword ptr [rax+0x0]
0x3d38: mov rdx,qword ptr [rbx+0x30]
0x3d3c: mov esi,dword ptr [r12+0x2c]
0x3d41: mov rcx,rsp
0x3d44: mov r8d,0x100
0x3d4a: mov edi,0x1
0x3d4f: call 0x27c0
0x3d54: test eax,eax
0x3d56: je 0x3d60
0x3d58: mov edx,dword ptr [rbp+0x0]
0x3d5b: cmp edx,0x2
0x3d5e: je 0x3ddb
0x3d60: mov dword ptr [rbp+0x0],0x1e
0x3d67: jmp 0x3c7b
0x3d6c: nop dword ptr [rax+0x0]
0x3d70: cmp edx,0x27
0x3d73: ja 0x3c7b
0x3d79: movabs rax,0x8000320000
0x3d83: bt rax,rdx
0x3d87: jae 0x3c7b
0x3d8d: mov eax,dword ptr [rbx+0x40]
0x3d90: cmp eax,0x1
0x3d93: je 0x3d9e
0x3d95: cmp eax,0xd
0x3d98: jne 0x3c7b
0x3d9e: mov dword ptr [rbp+0x0],eax
0x3da1: jmp 0x3c7b
0x3da6: nop word ptr cs:[rax+rax*1+0x0]
0x3db0: cmp edx,0x2
0x3db3: jne 0x3c70
0x3db9: mov eax,0x2
0x3dbe: jmp 0x3c05
0x3dc3: nop dword ptr [rax+rax*1+0x0]
0x3dc8: lea rsi,[rip+0x11cdc]
0x3dcf: xor edi,edi
0x3dd1: call 0x2730
0x3dd6: jmp 0x3d15
0x3ddb: cmp byte ptr [r13+0x0],0x0
0x3de0: mov eax,0x2
0x3de5: jne 0x3c05
0x3deb: cmp word ptr [rbx+0x70],0x4
0x3df0: jne 0x3c7b
0x3df6: jmp 0x3d79
0x3df8: call 0x2780
0x3dfd: nop dword ptr [rax]
0x3e00: push rbx
0x3e01: mov rax,qword ptr [rdx+0x30]
0x3e05: mov rbx,rdx
0x3e08: cmp rax,0xffffffffffffffff
0x3e0c: je 0x3e20
0x3e0e: test rax,rax
0x3e11: js 0x3e66
0x3e13: xor eax,eax
0x3e15: pop rbx
0x3e16: ret 
0x3e17: nop word ptr [rax+rax*1+0x0]
0x3e20: mov rcx,rdx
0x3e23: mov r8d,0x100
0x3e29: mov rdx,rsi
0x3e2c: mov esi,edi
0x3e2e: mov edi,0x1
0x3e33: call 0x27c0
0x3e38: test eax,eax
0x3e3a: je 0x3e60
0x3e3c: mov qword ptr [rbx+0x30],0xfffffffffffffffe
0x3e44: call 0x25a0
0x3e49: movsxd rdx,dword ptr [rax]
0x3e4c: mov qword ptr [rbx+0x8],rdx
0x3e50: mov dword ptr [rax],edx
0x3e52: mov eax,0xffffffff
0x3e57: pop rbx
0x3e58: ret 
0x3e59: nop dword ptr [rax+0x0]
0x3e60: mov rax,qword ptr [rbx+0x30]
0x3e64: jmp 0x3e0e
0x3e66: call 0x25a0
0x3e6b: mov rdx,qword ptr [rbx+0x8]
0x3e6f: jmp 0x3e50
0x3e71: nop dword ptr [rax+rax*1+0x0]
0x3e76: nop word ptr cs:[rax+rax*1+0x0]
0x3e80: push r15
0x3e82: push r14
0x3e84: push r13
0x3e86: push r12
0x3e88: mov r13,rcx
0x3e8b: push rbp
0x3e8c: push rbx
0x3e8d: mov rbx,rsi
0x3e90: sub rsp,0xc8
0x3e97: mov edi,dword ptr [rdi+0x2c]
0x3e9a: mov r15,qword ptr [rsi+0x30]
0x3e9e: mov rax,qword ptr fs:0x28
0x3ea7: mov qword ptr [rsp+0xb8],rax
0x3eaf: xor eax,eax
0x3eb1: mov rax,qword ptr [rsi+0x38]
0x3eb5: test r9,r9
0x3eb8: mov dword ptr [rsp+0x14],r8d
0x3ebd: mov dword ptr [rsp+0x10],edi
0x3ec1: mov qword ptr [rsp+0x8],rax
0x3ec6: je 0x40b0
0x3ecc: xor ebp,ebp
0x3ece: test dl,dl
0x3ed0: mov dword ptr [r9],0x2
0x3ed7: setne bpl
0x3edb: mov edx,0x30900
0x3ee0: xor eax,eax
0x3ee2: mov rsi,r15
0x3ee5: mov r12,r9
0x3ee8: mov qword ptr [rsp+0x50],0xffffffffffffffff
0x3ef1: shl ebp,0x2
0x3ef4: call 0x2770
0x3ef9: test eax,eax
0x3efb: js 0x3f65
0x3efd: mov edi,eax
0x3eff: mov dword ptr [rsp+0x18],eax
0x3f03: call 0x2b80
0x3f08: test rax,rax
0x3f0b: mov r14,rax
0x3f0e: mov edx,dword ptr [rsp+0x18]
0x3f12: je 0x4170
0x3f18: call 0x25a0
0x3f1d: mov qword ptr [rsp+0x18],rax
0x3f22: mov dword ptr [rax],0x0
0x3f28: nop dword ptr [rax+rax*1+0x0]
0x3f30: mov rdi,r14
0x3f33: call 0x29f0
0x3f38: test rax,rax
0x3f3b: je 0x4188
0x3f41: cmp byte ptr [rax+0x13],0x2e
0x3f45: jne 0x3f5d
0x3f47: xor edx,edx
0x3f49: cmp byte ptr [rax+0x14],0x2e
0x3f4d: sete dl
0x3f50: movzx eax,byte ptr [rax+rdx*1+0x14]
0x3f55: test al,al
0x3f57: je 0x3f30
0x3f59: cmp al,0x2f
0x3f5b: je 0x3f30
0x3f5d: mov rdi,r14
0x3f60: call 0x28a0
0x3f65: xor r14d,r14d
0x3f68: mov eax,0x3
0x3f6d: mov dword ptr [r12],eax
0x3f71: cmp qword ptr [rbx+0x20],0x0
0x3f76: jne 0x40a0
0x3f7c: mov eax,dword ptr [r13+0x4]
0x3f80: cmp eax,0x5
0x3f83: je 0x3fb2
0x3f85: cmp byte ptr [r13+0x0],0x0
0x3f8a: jne 0x3fa9
0x3f8c: cmp eax,0x3
0x3f8f: je 0x3f98
0x3f91: cmp byte ptr [r13+0x19],0x0
0x3f96: je 0x3fb2
0x3f98: call 0x10c80
0x3f9d: test al,al
0x3f9f: je 0x4268
0x3fa5: mov eax,dword ptr [r13+0x4]
0x3fa9: cmp eax,0x3
0x3fac: je 0x40e0
0x3fb2: mov eax,0x2
0x3fb7: mov rcx,qword ptr [rsp+0xb8]
0x3fbf: xor rcx,qword ptr fs:0x28
0x3fc8: jne 0x4343
0x3fce: add rsp,0xc8
0x3fd5: pop rbx
0x3fd6: pop rbp
0x3fd7: pop r12
0x3fd9: pop r13
0x3fdb: pop r14
0x3fdd: pop r15
0x3fdf: ret 
0x3fe0: lea rbx,[rsp+0x20]
0x3fe5: mov edi,dword ptr [rsp+0x10]
0x3fe9: mov rsi,r15
0x3fec: mov rdx,rbx
0x3fef: call 0x3e00
0x3ff4: test eax,eax
0x3ff6: jne 0x41c0
0x3ffc: mov eax,dword ptr [rsp+0x38]
0x4000: and eax,0xf000
0x4005: cmp eax,0xa000
0x400a: je 0x4254
0x4010: cmp eax,0x4000
0x4015: je 0x40f4
0x401b: mov rsi,qword ptr [rsp+0x8]
0x4020: mov edi,0x4
0x4025: call 0xe6d0
0x402a: mov rbp,rax
0x402d: mov edi,dword ptr [rsp+0x10]
0x4031: mov rdx,rbx
0x4034: mov rsi,r15
0x4037: call 0x3e00
0x403c: test eax,eax
0x403e: jne 0x42f0
0x4044: mov rdi,rbx
0x4047: call 0xb350
0x404c: test r12d,r12d
0x404f: mov r13,rax
0x4052: mov rbx,qword ptr [rip+0x218527]
0x4059: mov edx,0x5
0x405e: je 0x42d8
0x4064: lea rsi,[rip+0x11b25]
0x406b: xor edi,edi
0x406d: call 0x2730
0x4072: mov rdi,qword ptr [rip+0x218087]
0x4079: mov rdx,rax
0x407c: mov r9,rbp
0x407f: mov r8,r13
0x4082: mov rcx,rbx
0x4085: mov esi,0x1
0x408a: xor eax,eax
0x408c: call 0x2c20
0x4091: call 0x10fd0
0x4096: test al,al
0x4098: jne 0x3fb2
0x409e: xchg ax,ax
0x40a0: mov eax,0x3
0x40a5: jmp 0x3fb7
0x40aa: nop word ptr [rax+rax*1+0x0]
0x40b0: cmp dl,0x1
0x40b3: mov r14d,edx
0x40b6: mov eax,0x0
0x40bb: sbb ebp,ebp
0x40bd: mov qword ptr [rsp+0x50],0xffffffffffffffff
0x40c6: not ebp
0x40c8: and ebp,0x4
0x40cb: test dl,dl
0x40cd: cmovne r14d,eax
0x40d1: jmp 0x3f71
0x40d6: nop word ptr cs:[rax+rax*1+0x0]
0x40e0: xor r12d,r12d
0x40e3: test ebp,ebp
0x40e5: je 0x3fe0
0x40eb: cmp ebp,0x4
0x40ee: jne 0x4238
0x40f4: cmp byte ptr [r13+0x9],0x0
0x40f9: je 0x4210
0x40ff: mov rsi,qword ptr [rsp+0x8]
0x4104: mov edi,0x4
0x4109: call 0xe6d0
0x410e: cmp dword ptr [rsp+0x14],0x2
0x4113: mov rbp,rax
0x4116: jne 0x424a
0x411c: test r14b,r14b
0x411f: jne 0x424a
0x4125: test r12d,r12d
0x4128: mov rbx,qword ptr [rip+0x218451]
0x412f: mov edx,0x5
0x4134: je 0x4330
0x413a: lea rsi,[rip+0x119ff]
0x4141: xor edi,edi
0x4143: call 0x2730
0x4148: mov rdi,qword ptr [rip+0x217fb1]
0x414f: mov rdx,rax
0x4152: mov r8,rbp
0x4155: mov rcx,rbx
0x4158: mov esi,0x1
0x415d: xor eax,eax
0x415f: call 0x2c20
0x4164: jmp 0x4091
0x4169: nop dword ptr [rax+0x0]
0x4170: mov edi,edx
0x4172: call 0x2870
0x4177: mov eax,0x3
0x417c: jmp 0x3f6d
0x4181: nop dword ptr [rax+0x0]
0x4188: mov rax,qword ptr [rsp+0x18]
0x418d: mov rdi,r14
0x4190: mov edx,dword ptr [rax]
0x4192: mov dword ptr [rsp+0x18],edx
0x4196: call 0x28a0
0x419b: mov edx,dword ptr [rsp+0x18]
0x419f: test edx,edx
0x41a1: jne 0x3f65
0x41a7: mov r14d,0x1
0x41ad: mov eax,0x4
0x41b2: jmp 0x3f6d
0x41b7: nop word ptr [rax+rax*1+0x0]
0x41c0: call 0x25a0
0x41c5: mov ebx,dword ptr [rax]
0x41c7: mov rsi,qword ptr [rsp+0x8]
0x41cc: mov edi,0x4
0x41d1: call 0xe6d0
0x41d6: mov rbp,rax
0x41d9: lea rsi,[rip+0x118d7]
0x41e0: mov edx,0x5
0x41e5: xor edi,edi
0x41e7: call 0x2730
0x41ec: mov rcx,rbp
0x41ef: mov rdx,rax
0x41f2: mov esi,ebx
0x41f4: xor eax,eax
0x41f6: xor edi,edi
0x41f8: call 0x2b10
0x41fd: mov eax,0x4
0x4202: jmp 0x3fb7
0x4207: nop word ptr [rax+rax*1+0x0]
0x4210: cmp byte ptr [r13+0xa],0x0
0x4215: je 0x421c
0x4217: test r14b,r14b
0x421a: jne 0x4238
0x421c: mov rsi,qword ptr [rsp+0x8]
0x4221: mov edi,0x4
0x4226: mov ebx,0x15
0x422b: call 0xe6d0
0x4230: mov rbp,rax
0x4233: jmp 0x41d9
0x4235: nop dword ptr [rax]
0x4238: mov rsi,qword ptr [rsp+0x8]
0x423d: mov edi,0x4
0x4242: call 0xe6d0
0x4247: mov rbp,rax
0x424a: lea rbx,[rsp+0x20]
0x424f: jmp 0x402d
0x4254: cmp dword ptr [r13+0x4],0x3
0x4259: jne 0x3fb2
0x425f: jmp 0x401b
0x4264: nop dword ptr [rax+0x0]
0x4268: lea rbx,[rsp+0x20]
0x426d: mov edi,dword ptr [rsp+0x10]
0x4271: mov rsi,r15
0x4274: mov rdx,rbx
0x4277: call 0x3e00
0x427c: test eax,eax
0x427e: jne 0x41c0
0x4284: mov eax,dword ptr [rsp+0x38]
0x4288: and eax,0xf000
0x428d: cmp eax,0xa000
0x4292: je 0x3fa5
0x4298: mov edi,dword ptr [rsp+0x10]
0x429c: mov ecx,0x200
0x42a1: mov edx,0x2
0x42a6: mov rsi,r15
0x42a9: call 0x2650
0x42ae: test eax,eax
0x42b0: je 0x3fa5
0x42b6: call 0x25a0
0x42bb: mov ebx,dword ptr [rax]
0x42bd: mov r12d,0x1
0x42c3: cmp ebx,0xd
0x42c6: je 0x40e3
0x42cc: jmp 0x41c7
0x42d1: nop dword ptr [rax+0x0]
0x42d8: lea rsi,[rip+0x117e9]
0x42df: xor edi,edi
0x42e1: call 0x2730
0x42e6: jmp 0x4072
0x42eb: nop dword ptr [rax+rax*1+0x0]
0x42f0: lea rsi,[rip+0x117c0]
0x42f7: mov edx,0x5
0x42fc: xor edi,edi
0x42fe: call 0x2730
0x4303: mov rbx,rax
0x4306: call 0x25a0
0x430b: mov esi,dword ptr [rax]
0x430d: mov rcx,rbp
0x4310: xor eax,eax
0x4312: mov rdx,rbx
0x4315: xor edi,edi
0x4317: call 0x2b10
0x431c: mov eax,0x4
0x4321: jmp 0x3fb7
0x4326: nop word ptr cs:[rax+rax*1+0x0]
0x4330: lea rsi,[rip+0x11839]
0x4337: xor edi,edi
0x4339: call 0x2730
0x433e: jmp 0x4148
0x4343: call 0x2780
0x4348: nop dword ptr [rax+rax*1+0x0]
0x4350: push r15
0x4352: push r14
0x4354: push r13
0x4356: push r12
0x4358: push rbp
0x4359: push rbx
0x435a: sub rsp,0xd8
0x4361: mov rax,qword ptr fs:0x28
0x436a: mov qword ptr [rsp+0xc8],rax
0x4372: xor eax,eax
0x4374: cmp qword ptr [rdi],0x0
0x4378: je 0x4ae8
0x437e: cmp byte ptr [rsi+0x8],0x1
0x4382: mov r13,rsi
0x4385: lea r12,[rip+0x11a9c]
0x438c: mov ebp,0x2
0x4391: sbb esi,esi
0x4393: xor edx,edx
0x4395: and esi,0xffffffc0
0x4398: add esi,0x258
0x439e: call 0x10f50
0x43a3: mov rbx,rax
0x43a6: lea rax,[rsp+0x2c]
0x43ab: mov qword ptr [rsp+0x10],rax
0x43b0: lea rax,[rsp+0x30]
0x43b5: mov qword ptr [rsp+0x18],rax
0x43ba: nop word ptr [rax+rax*1+0x0]
0x43c0: mov rdi,rbx
0x43c3: call 0x12c60
0x43c8: test rax,rax
0x43cb: mov r15,rax
0x43ce: je 0x445a
0x43d4: movzx edx,word ptr [rax+0x70]
0x43d8: cmp dx,0xd
0x43dc: ja 0x4b37
0x43e2: movzx eax,dx
0x43e5: movsxd rax,dword ptr [r12+rax*4]
0x43e9: add rax,r12
0x43ec: jmp rax
0x43ee: xchg ax,ax
0x43f0: mov rdx,qword ptr [r15+0x38]
0x43f4: mov esi,0x3
0x43f9: xor edi,edi
0x43fb: call 0xe7d0
0x4400: lea rsi,[rip+0x116e7]
0x4407: mov edx,0x5
0x440c: xor edi,edi
0x440e: mov rbp,rax
0x4411: call 0x2730
0x4416: mov esi,dword ptr [r15+0x40]
0x441a: mov rcx,rbp
0x441d: mov rdx,rax
0x4420: xor edi,edi
0x4422: xor eax,eax
0x4424: call 0x2b10
0x4429: mov rsi,r15
0x442c: mov edx,0x4
0x4431: mov rdi,rbx
0x4434: call 0x133e0
0x4439: mov rdi,rbx
0x443c: mov ebp,0x4
0x4441: call 0x12c60
0x4446: mov rdi,rbx
0x4449: call 0x12c60
0x444e: test rax,rax
0x4451: mov r15,rax
0x4454: jne 0x43d4
0x445a: call 0x25a0
0x445f: mov r12,rax
0x4462: mov eax,dword ptr [rax]
0x4464: test eax,eax
0x4466: jne 0x4978
0x446c: mov rdi,rbx
0x446f: call 0x12ad0
0x4474: test eax,eax
0x4476: jne 0x49b0
0x447c: mov rbx,qword ptr [rsp+0xc8]
0x4484: xor rbx,qword ptr fs:0x28
0x448d: mov eax,ebp
0x448f: jne 0x4ba0
0x4495: add rsp,0xd8
0x449c: pop rbx
0x449d: pop rbp
0x449e: pop r12
0x44a0: pop r13
0x44a2: pop r14
0x44a4: pop r15
0x44a6: ret 
0x44a7: nop word ptr [rax+rax*1+0x0]
0x44b0: cmp dx,0x6
0x44b4: jne 0x44d8
0x44b6: cmp byte ptr [r13+0x8],0x0
0x44bb: je 0x44d8
0x44bd: cmp qword ptr [r15+0x58],0x0
0x44c2: jle 0x44d8
0x44c4: mov rax,qword ptr [rbx+0x18]
0x44c8: cmp qword ptr [r15+0x78],rax
0x44cc: jne 0x4a78
0x44d2: nop word ptr [rax+rax*1+0x0]
0x44d8: and edx,0xfffffffd
0x44db: xor r14d,r14d
0x44de: mov rcx,r13
0x44e1: cmp dx,0x4
0x44e5: mov r8d,0x3
0x44eb: mov rsi,r15
0x44ee: sete r14b
0x44f2: mov rdi,rbx
0x44f5: xor r9d,r9d
0x44f8: mov edx,r14d
0x44fb: call 0x3e80
0x4500: cmp eax,0x2
0x4503: mov ecx,eax
0x4505: je 0x4768
0x450b: lea eax,[rcx-0x2]
0x450e: cmp eax,0x2
0x4511: ja 0x4b81
0x4517: cmp ecx,0x4
0x451a: je 0x4ba5
0x4520: cmp ecx,0x3
0x4523: jne 0x43c0
0x4529: cmp ebp,0x2
0x452c: mov eax,0x3
0x4531: cmove ebp,eax
0x4534: jmp 0x43c0
0x4539: nop dword ptr [rax+0x0]
0x4540: mov rdx,qword ptr [r15+0x38]
0x4544: mov esi,0x3
0x4549: xor edi,edi
0x454b: call 0xe7d0
0x4550: lea rsi,[rip+0x11791]
0x4557: mov rbp,rax
0x455a: mov edx,0x5
0x455f: xor edi,edi
0x4561: call 0x2730
0x4566: mov rcx,rbp
0x4569: mov rdx,rax
0x456c: xor esi,esi
0x456e: jmp 0x4420
0x4573: nop dword ptr [rax+rax*1+0x0]
0x4578: cmp byte ptr [r13+0x9],0x0
0x457d: jne 0x4638
0x4583: cmp byte ptr [r13+0xa],0x0
0x4588: je 0x46f0
0x458e: mov rsi,qword ptr [r15+0x30]
0x4592: mov edi,dword ptr [rbx+0x2c]
0x4595: xor eax,eax
0x4597: mov edx,0x30900
0x459c: call 0x2770
0x45a1: test eax,eax
0x45a3: js 0x4601
0x45a5: mov edi,eax
0x45a7: mov dword ptr [rsp+0x8],eax
0x45ab: call 0x2b80
0x45b0: test rax,rax
0x45b3: mov r14,rax
0x45b6: mov edx,dword ptr [rsp+0x8]
0x45ba: je 0x4af2
0x45c0: call 0x25a0
0x45c5: mov qword ptr [rsp+0x8],rax
0x45ca: mov dword ptr [rax],0x0
0x45d0: mov rdi,r14
0x45d3: call 0x29f0
0x45d8: test rax,rax
0x45db: je 0x4616
0x45dd: cmp byte ptr [rax+0x13],0x2e
0x45e1: jne 0x45f9
0x45e3: xor edx,edx
0x45e5: cmp byte ptr [rax+0x14],0x2e
0x45e9: sete dl
0x45ec: movzx eax,byte ptr [rax+rdx*1+0x14]
0x45f1: test al,al
0x45f3: je 0x45d0
0x45f5: cmp al,0x2f
0x45f7: je 0x45d0
0x45f9: mov rdi,r14
0x45fc: call 0x28a0
0x4601: cmp byte ptr [r13+0xa],0x0
0x4606: je 0x46f0
0x460c: mov ebp,0x27
0x4611: jmp 0x46f5
0x4616: mov rax,qword ptr [rsp+0x8]
0x461b: mov rdi,r14
0x461e: mov edx,dword ptr [rax]
0x4620: mov dword ptr [rsp+0x8],edx
0x4624: call 0x28a0
0x4629: mov edx,dword ptr [rsp+0x8]
0x462d: test edx,edx
0x462f: jne 0x4601
0x4631: nop dword ptr [rax+0x0]
0x4638: cmp qword ptr [r15+0x58],0x0
0x463d: jne 0x4678
0x463f: mov r14,qword ptr [r15+0x30]
0x4643: mov rdi,r14
0x4646: call 0xb0c0
0x464b: cmp byte ptr [rax],0x2e
0x464e: je 0x47d0
0x4654: mov rax,qword ptr [r13+0x10]
0x4658: test rax,rax
0x465b: je 0x466d
0x465d: mov rcx,qword ptr [rax]
0x4660: cmp qword ptr [r15+0x80],rcx
0x4667: je 0x49e0
0x466d: cmp byte ptr [r13+0x18],0x0
0x4672: jne 0x4868
0x4678: mov r9,qword ptr [rsp+0x10]
0x467d: mov rcx,r13
0x4680: mov r8d,0x2
0x4686: mov edx,0x1
0x468b: mov rsi,r15
0x468e: mov rdi,rbx
0x4691: call 0x3e80
0x4696: cmp eax,0x2
0x4699: mov ecx,eax
0x469b: je 0x4780
0x46a1: mov rax,qword ptr [r15+0x8]
0x46a5: cmp qword ptr [rax+0x58],0x0
0x46aa: jns 0x46c3
0x46ac: jmp 0x46ca
0x46ae: xchg ax,ax
0x46b0: mov qword ptr [rax+0x20],0x1
0x46b8: mov rax,qword ptr [rax+0x8]
0x46bc: cmp qword ptr [rax+0x58],0x0
0x46c1: js 0x46ca
0x46c3: cmp qword ptr [rax+0x20],0x0
0x46c8: je 0x46b0
0x46ca: mov edx,0x4
0x46cf: mov rsi,r15
0x46d2: mov rdi,rbx
0x46d5: mov dword ptr [rsp+0x8],ecx
0x46d9: call 0x133e0
0x46de: mov rdi,rbx
0x46e1: call 0x12c60
0x46e6: mov ecx,dword ptr [rsp+0x8]
0x46ea: jmp 0x450b
0x46ef: nop 
0x46f0: mov ebp,0x15
0x46f5: mov rsi,qword ptr [r15+0x38]
0x46f9: mov edi,0x4
0x46fe: call 0xe6d0
0x4703: lea rsi,[rip+0x113ad]
0x470a: xor edi,edi
0x470c: mov r14,rax
0x470f: mov edx,0x5
0x4714: call 0x2730
0x4719: xor edi,edi
0x471b: mov rdx,rax
0x471e: mov rcx,r14
0x4721: xor eax,eax
0x4723: mov esi,ebp
0x4725: call 0x2b10
0x472a: mov rax,qword ptr [r15+0x8]
0x472e: cmp qword ptr [rax+0x58],0x0
0x4733: jns 0x4757
0x4735: jmp 0x4429
0x473a: nop word ptr [rax+rax*1+0x0]
0x4740: mov qword ptr [rax+0x20],0x1
0x4748: mov rax,qword ptr [rax+0x8]
0x474c: cmp qword ptr [rax+0x58],0x0
0x4751: js 0x4429
0x4757: cmp qword ptr [rax+0x20],0x0
0x475c: je 0x4740
0x475e: jmp 0x4429
0x4763: nop dword ptr [rax+rax*1+0x0]
0x4768: mov ecx,r14d
0x476b: mov rdx,r13
0x476e: mov rsi,r15
0x4771: mov rdi,rbx
0x4774: call 0x3bb0
0x4779: mov ecx,eax
0x477b: jmp 0x450b
0x4780: cmp dword ptr [rsp+0x2c],0x4
0x4785: jne 0x43c0
0x478b: mov ecx,0x1
0x4790: mov rdx,r13
0x4793: mov rsi,r15
0x4796: mov rdi,rbx
0x4799: call 0x3bb0
0x479e: mov edx,0x4
0x47a3: mov rsi,r15
0x47a6: mov rdi,rbx
0x47a9: mov dword ptr [rsp+0x8],eax
0x47ad: call 0x133e0
0x47b2: mov rdi,rbx
0x47b5: call 0x12c60
0x47ba: mov ecx,dword ptr [rsp+0x8]
0x47be: cmp ecx,0x2
0x47c1: je 0x43c0
0x47c7: jmp 0x46a1
0x47cc: nop dword ptr [rax+0x0]
0x47d0: xor edx,edx
0x47d2: cmp byte ptr [rax+0x1],0x2e
0x47d6: sete dl
0x47d9: movzx eax,byte ptr [rax+rdx*1+0x1]
0x47de: test al,al
0x47e0: je 0x47ea
0x47e2: cmp al,0x2f
0x47e4: jne 0x4654
0x47ea: mov rdx,qword ptr [r15+0x38]
0x47ee: mov esi,0x4
0x47f3: mov edi,0x2
0x47f8: call 0xe5b0
0x47fd: lea rdx,[rip+0x112e7]
0x4804: mov esi,0x4
0x4809: mov edi,0x1
0x480e: mov rbp,rax
0x4811: call 0xe5b0
0x4816: lea rdx,[rip+0x112cf]
0x481d: xor edi,edi
0x481f: mov esi,0x4
0x4824: mov r14,rax
0x4827: call 0xe5b0
0x482c: lea rsi,[rip+0x11385]
0x4833: xor edi,edi
0x4835: mov edx,0x5
0x483a: mov qword ptr [rsp+0x8],rax
0x483f: call 0x2730
0x4844: mov rcx,qword ptr [rsp+0x8]
0x4849: mov rdx,rax
0x484c: mov r9,rbp
0x484f: mov r8,r14
0x4852: xor esi,esi
0x4854: xor edi,edi
0x4856: xor eax,eax
0x4858: call 0x2b10
0x485d: jmp 0x4429
0x4862: nop word ptr [rax+rax*1+0x0]
0x4868: lea rsi,[rip+0x1127c]
0x486f: xor edx,edx
0x4871: mov rdi,r14
0x4874: call 0xb5e0
0x4879: test rax,rax
0x487c: mov r14,rax
0x487f: je 0x4897
0x4881: mov rdx,qword ptr [rsp+0x18]
0x4886: mov rsi,rax
0x4889: mov edi,0x1
0x488e: call 0x2760
0x4893: test eax,eax
0x4895: je 0x4900
0x4897: mov rdx,qword ptr [r15+0x30]
0x489b: mov esi,0x4
0x48a0: mov edi,0x1
0x48a5: call 0xe5b0
0x48aa: mov rdx,r14
0x48ad: xor edi,edi
0x48af: mov esi,0x4
0x48b4: mov rbp,rax
0x48b7: call 0xe5b0
0x48bc: lea rsi,[rip+0x113d5]
0x48c3: xor edi,edi
0x48c5: mov edx,0x5
0x48ca: mov qword ptr [rsp+0x8],rax
0x48cf: call 0x2730
0x48d4: mov rcx,qword ptr [rsp+0x8]
0x48d9: mov rdx,rax
0x48dc: xor edi,edi
0x48de: mov r8,rbp
0x48e1: xor esi,esi
0x48e3: xor eax,eax
0x48e5: call 0x2b10
0x48ea: mov rdi,r14
0x48ed: call 0x2c80
0x48f2: jmp 0x4429
0x48f7: nop word ptr [rax+rax*1+0x0]
0x4900: mov rdi,r14
0x4903: call 0x2c80
0x4908: mov rax,qword ptr [rsp+0x30]
0x490d: cmp qword ptr [rbx+0x18],rax
0x4911: je 0x4678
0x4917: mov rsi,qword ptr [r15+0x38]
0x491b: mov edi,0x4
0x4920: call 0xe6d0
0x4925: lea rsi,[rip+0x1138c]
0x492c: mov rbp,rax
0x492f: mov edx,0x5
0x4934: xor edi,edi
0x4936: call 0x2730
0x493b: xor esi,esi
0x493d: mov rdx,rax
0x4940: mov rcx,rbp
0x4943: xor edi,edi
0x4945: xor eax,eax
0x4947: call 0x2b10
0x494c: lea rsi,[rip+0x114ad]
0x4953: mov edx,0x5
0x4958: xor edi,edi
0x495a: call 0x2730
0x495f: xor esi,esi
0x4961: mov rdx,rax
0x4964: xor edi,edi
0x4966: xor eax,eax
0x4968: call 0x2b10
0x496d: jmp 0x4429
0x4972: nop word ptr [rax+rax*1+0x0]
0x4978: lea rsi,[rip+0x1115c]
0x497f: xor edi,edi
0x4981: mov edx,0x5
0x4986: mov ebp,0x4
0x498b: call 0x2730
0x4990: mov esi,dword ptr [r12]
0x4994: mov rdx,rax
0x4997: xor edi,edi
0x4999: xor eax,eax
0x499b: call 0x2b10
0x49a0: mov rdi,rbx
0x49a3: call 0x12ad0
0x49a8: test eax,eax
0x49aa: je 0x447c
0x49b0: lea rsi,[rip+0x11173]
0x49b7: mov edx,0x5
0x49bc: xor edi,edi
0x49be: mov ebp,0x4
0x49c3: call 0x2730
0x49c8: mov esi,dword ptr [r12]
0x49cc: mov rdx,rax
0x49cf: xor edi,edi
0x49d1: xor eax,eax
0x49d3: call 0x2b10
0x49d8: jmp 0x447c
0x49dd: nop dword ptr [rax]
0x49e0: mov rax,qword ptr [rax+0x8]
0x49e4: cmp qword ptr [r15+0x78],rax
0x49e8: jne 0x466d
0x49ee: mov rdx,qword ptr [r15+0x38]
0x49f2: lea rdi,[rip+0x12095]
0x49f9: mov ecx,0x2
0x49fe: mov rsi,rdx
0x4a01: repz cmps byte ptr ds:[rsi],byte ptr es:[rdi]
0x4a03: seta al
0x4a06: sbb al,0x0
0x4a08: test al,al
0x4a0a: je 0x4afe
0x4a10: lea rdx,[rip+0x12077]
0x4a17: mov esi,0x4
0x4a1c: mov edi,0x1
0x4a21: call 0xe5b0
0x4a26: mov rdx,qword ptr [r15+0x38]
0x4a2a: mov esi,0x4
0x4a2f: xor edi,edi
0x4a31: mov rbp,rax
0x4a34: call 0xe5b0
0x4a39: lea rsi,[rip+0x111e0]
0x4a40: mov r14,rax
0x4a43: mov edx,0x5
0x4a48: xor edi,edi
0x4a4a: call 0x2730
0x4a4f: mov r8,rbp
0x4a52: mov rdx,rax
0x4a55: mov rcx,r14
0x4a58: xor esi,esi
0x4a5a: xor edi,edi
0x4a5c: xor eax,eax
0x4a5e: call 0x2b10
0x4a63: mov edx,0x5
0x4a68: lea rsi,[rip+0x111f1]
0x4a6f: jmp 0x4958
0x4a74: nop dword ptr [rax+0x0]
0x4a78: mov rax,qword ptr [r15+0x8]
0x4a7c: cmp qword ptr [rax+0x58],0x0
0x4a81: jns 0x4a9b
0x4a83: jmp 0x4aa2
0x4a85: nop dword ptr [rax]
0x4a88: mov qword ptr [rax+0x20],0x1
0x4a90: mov rax,qword ptr [rax+0x8]
0x4a94: cmp qword ptr [rax+0x58],0x0
0x4a99: js 0x4aa2
0x4a9b: cmp qword ptr [rax+0x20],0x0
0x4aa0: je 0x4a88
0x4aa2: mov rsi,qword ptr [r15+0x38]
0x4aa6: mov edi,0x4
0x4aab: call 0xe6d0
0x4ab0: lea rsi,[rip+0x11201]
0x4ab7: mov rbp,rax
0x4aba: mov edx,0x5
0x4abf: xor edi,edi
0x4ac1: call 0x2730
0x4ac6: mov rcx,rbp
0x4ac9: mov rdx,rax
0x4acc: xor esi,esi
0x4ace: xor edi,edi
0x4ad0: xor eax,eax
0x4ad2: mov ebp,0x4
0x4ad7: call 0x2b10
0x4adc: jmp 0x43c0
0x4ae1: nop dword ptr [rax+0x0]
0x4ae8: mov ebp,0x2
0x4aed: jmp 0x447c
0x4af2: mov edi,edx
0x4af4: call 0x2870
0x4af9: jmp 0x4601
0x4afe: mov rsi,rdx
0x4b01: mov edi,0x4
0x4b06: call 0xe6d0
0x4b0b: lea rsi,[rip+0x110de]
0x4b12: mov rbp,rax
0x4b15: xor edi,edi
0x4b17: mov edx,0x5
0x4b1c: call 0x2730
0x4b21: mov rcx,rbp
0x4b24: mov rdx,rax
0x4b27: xor esi,esi
0x4b29: xor edi,edi
0x4b2b: xor eax,eax
0x4b2d: call 0x2b10
0x4b32: jmp 0x4a63
0x4b37: mov rdx,qword ptr [r15+0x38]
0x4b3b: mov esi,0x3
0x4b40: xor edi,edi
0x4b42: call 0xe7d0
0x4b47: movzx ebx,word ptr [r15+0x70]
0x4b4c: lea rsi,[rip+0x11255]
0x4b53: mov edx,0x5
0x4b58: xor edi,edi
0x4b5a: mov rbp,rax
0x4b5d: call 0x2730
0x4b62: lea r9,[rip+0x10f9a]
0x4b69: mov rdx,rax
0x4b6c: mov r8,rbp
0x4b6f: mov ecx,ebx
0x4b71: xor esi,esi
0x4b73: xor edi,edi
0x4b75: xor eax,eax
0x4b77: call 0x2b10
0x4b7c: call 0x2590
0x4b81: lea rcx,[rip+0x112d8]
0x4b88: lea rsi,[rip+0x11251]
0x4b8f: lea rdi,[rip+0x10f83]
0x4b96: mov edx,0x261
0x4b9b: call 0x2820
0x4ba0: call 0x2780
0x4ba5: mov ebp,0x4
0x4baa: jmp 0x43c0
0x4baf: nop 
0x4bd2: nop word ptr [rax+rax*1+0x0]
0x4bd8: mov eax,0x1
0x4bdd: ret 
0x4bde: xchg ax,ax
0x4bf4: xchg ax,ax
0x4bf6: nop word ptr cs:[rax+rax*1+0x0]
0x4c00: cmp qword ptr [rip+0x217938],0x0
0x4c08: push r12
0x4c0a: mov r12d,edi
0x4c0d: push rbp
0x4c0e: push rbx
0x4c0f: mov rbx,rsi
0x4c12: je 0x4c68
0x4c14: test rbx,rbx
0x4c17: jne 0x4c25
0x4c19: jmp 0x4c58
0x4c1b: nop dword ptr [rax+rax*1+0x0]
0x4c20: sub rbx,rax
0x4c23: je 0x4c58
0x4c25: cmp qword ptr [rip+0x2173ec],rbx
0x4c2c: mov rbp,rbx
0x4c2f: mov rsi,qword ptr [rip+0x21790a]
0x4c36: cmovbe rbp,qword ptr [rip+0x2173da]
0x4c3e: mov edi,r12d
0x4c41: mov rdx,rbp
0x4c44: call 0xb700
0x4c49: cmp rax,rbp
0x4c4c: je 0x4c20
0x4c4e: pop rbx
0x4c4f: xor eax,eax
0x4c51: pop rbp
0x4c52: pop r12
0x4c54: ret 
0x4c55: nop dword ptr [rax]
0x4c58: pop rbx
0x4c59: mov eax,0x1
0x4c5e: pop rbp
0x4c5f: pop r12
0x4c61: ret 
0x4c62: nop word ptr [rax+rax*1+0x0]
0x4c68: mov rdi,qword ptr [rip+0x2173a9]
0x4c6f: mov esi,0x1
0x4c74: call 0x2910
0x4c79: test rax,rax
0x4c7c: je 0x4c87
0x4c7e: mov qword ptr [rip+0x2178bb],rax
0x4c85: jmp 0x4c14
0x4c87: lea rax,[rip+0x2174b2]
0x4c8e: mov qword ptr [rip+0x21737f],0x400
0x4c99: mov qword ptr [rip+0x2178a0],rax
0x4ca0: jmp 0x4c14
0x4ca5: nop 
0x4ca6: nop word ptr cs:[rax+rax*1+0x0]
0x4cb0: push rbx
0x4cb1: mov rcx,rdx
0x4cb4: mov rdx,rsi
0x4cb7: mov esi,0x3
0x4cbc: call 0x28e0
0x4cc1: test eax,eax
0x4cc3: mov ebx,eax
0x4cc5: js 0x4cd0
0x4cc7: mov eax,ebx
0x4cc9: pop rbx
0x4cca: ret 
0x4ccb: nop dword ptr [rax+rax*1+0x0]
0x4cd0: call 0x25a0
0x4cd5: mov eax,dword ptr [rax]
0x4cd7: cmp eax,0x26
0x4cda: je 0x4ce1
0x4cdc: cmp eax,0x5f
0x4cdf: jne 0x4cc7
0x4ce1: xor ebx,ebx
0x4ce3: mov eax,ebx
0x4ce5: pop rbx
0x4ce6: ret 
0x4ce7: nop word ptr [rax+rax*1+0x0]
0x4d92: nop word ptr [rax+rax*1+0x0]
0x4da6: nop word ptr cs:[rax+rax*1+0x0]
0x4e0b: nop dword ptr [rax+rax*1+0x0]
0x4e52: nop word ptr [rax+rax*1+0x0]
0x4ea6: xor ebx,ebx
0x4ea8: add rsp,0x8
0x4eac: mov eax,ebx
0x4eae: pop rbx
0x4eaf: pop rbp
0x4eb0: pop r12
0x4eb2: pop r13
0x4eb4: ret 
0x4eb5: nop 
0x4eb6: nop word ptr cs:[rax+rax*1+0x0]
0x4f38: test dword ptr [r13+0x14],0xffff00
0x4f40: je 0x4ff0
0x4f81: nop dword ptr [rax+0x0]
0x4ff0: lea rsi,[rip+0x10f01]
0x4ff7: xor edi,edi
0x4ff9: call 0x2730
0x4ffe: mov rdx,rax
0x5001: jmp 0x4f57
0x5006: call 0x2780
0x500b: nop dword ptr [rax+rax*1+0x0]
0x5010: push r13
0x5012: push r12
0x5014: mov r13,rsi
0x5017: push rbp
0x5018: push rbx
0x5019: mov r12d,edx
0x501c: mov rsi,rcx
0x501f: mov edx,0x1
0x5024: mov ebp,edi
0x5026: sub rsp,0x8
0x502a: mov rbx,rcx
0x502d: call 0x2800
0x5032: test rax,rax
0x5035: js 0x50b0
0x5037: test r12b,r12b
0x503a: jne 0x5050
0x503c: add rsp,0x8
0x5040: mov eax,0x1
0x5045: pop rbx
0x5046: pop rbp
0x5047: pop r12
0x5049: pop r13
0x504b: ret 
0x504c: nop dword ptr [rax+0x0]
0x5050: sub rax,rbx
0x5053: mov rdx,rbx
0x5056: mov edi,ebp
0x5058: mov rsi,rax
0x505b: call 0x4cb0
0x5060: test eax,eax
0x5062: jns 0x503c
0x5064: mov rsi,r13
0x5067: mov edi,0x4
0x506c: call 0xe6d0
0x5071: lea rsi,[rip+0x11473]
0x5078: mov rbp,rax
0x507b: mov edx,0x5
0x5080: xor edi,edi
0x5082: call 0x2730
0x5087: mov rbx,rax
0x508a: call 0x25a0
0x508f: mov esi,dword ptr [rax]
0x5091: mov rcx,rbp
0x5094: mov rdx,rbx
0x5097: xor eax,eax
0x5099: xor edi,edi
0x509b: call 0x2b10
0x50a0: add rsp,0x8
0x50a4: xor eax,eax
0x50a6: pop rbx
0x50a7: pop rbp
0x50a8: pop r12
0x50aa: pop r13
0x50ac: ret 
0x50ad: nop dword ptr [rax]
0x50b0: mov rsi,r13
0x50b3: mov edi,0x4
0x50b8: call 0xe6d0
0x50bd: mov edx,0x5
0x50c2: mov rbp,rax
0x50c5: lea rsi,[rip+0x1140f]
0x50cc: jmp 0x5080
0x50ce: xchg ax,ax
0x50d0: push r15
0x50d2: push r14
0x50d4: push r13
0x50d6: push r12
0x50d8: push rbp
0x50d9: push rbx
0x50da: sub rsp,0x78
0x50de: mov rax,qword ptr [rsp+0xb0]
0x50e6: mov rbx,qword ptr [rsp+0xc8]
0x50ee: mov r10,qword ptr [rsp+0xd0]
0x50f6: mov byte ptr [rsp+0x1f],r9b
0x50fb: mov qword ptr [rsp+0x58],rax
0x5100: mov rax,qword ptr [rsp+0xb8]
0x5108: mov byte ptr [r10],0x0
0x510c: mov qword ptr [rsp+0x40],rbx
0x5111: mov qword ptr [rsp+0x60],r10
0x5116: mov qword ptr [rbx],0x0
0x511d: mov qword ptr [rsp+0x10],rax
0x5122: mov rax,qword ptr [rsp+0xc0]
0x512a: test rax,rax
0x512d: mov qword ptr [rsp+0x28],rax
0x5132: je 0x54d3
0x5138: test r8,r8
0x513b: mov qword ptr [rsp+0x50],r8
0x5140: mov dword ptr [rsp+0x6c],r9d
0x5145: cmove r8,rcx
0x5149: mov qword ptr [rsp+0x38],rcx
0x514e: mov qword ptr [rsp+0x20],rdx
0x5153: mov dword ptr [rsp+0x18],esi
0x5157: mov dword ptr [rsp+0x68],edi
0x515b: xor r13d,r13d
0x515e: mov qword ptr [rsp+0x48],r8
0x5163: xor r15d,r15d
0x5166: mov rax,qword ptr [rsp+0x38]
0x516b: mov rdx,qword ptr [rsp+0x28]
0x5170: mov rsi,qword ptr [rsp+0x20]
0x5175: mov edi,dword ptr [rsp+0x68]
0x5179: cmp rax,rdx
0x517c: cmovbe rdx,rax
0x5180: call 0x28c0
0x5185: test rax,rax
0x5188: mov qword ptr [rsp+0x30],rax
0x518d: jns 0x51f0
0x518f: call 0x25a0
0x5194: cmp dword ptr [rax],0x4
0x5197: je 0x5166
0x5199: mov rsi,qword ptr [rsp+0x58]
0x519e: mov edi,0x4
0x51a3: mov rbx,rax
0x51a6: xor r15d,r15d
0x51a9: call 0xe6d0
0x51ae: lea rsi,[rip+0x1134c]
0x51b5: mov edx,0x5
0x51ba: xor edi,edi
0x51bc: mov rbp,rax
0x51bf: call 0x2730
0x51c4: mov esi,dword ptr [rbx]
0x51c6: mov rdx,rax
0x51c9: mov rcx,rbp
0x51cc: xor edi,edi
0x51ce: xor eax,eax
0x51d0: call 0x2b10
0x51d5: add rsp,0x78
0x51d9: mov eax,r15d
0x51dc: pop rbx
0x51dd: pop rbp
0x51de: pop r12
0x51e0: pop r13
0x51e2: pop r14
0x51e4: pop r15
0x51e6: ret 
0x51e7: nop word ptr [rax+rax*1+0x0]
0x51f0: je 0x531f
0x51f6: mov rax,qword ptr [rsp+0x40]
0x51fb: mov rbp,qword ptr [rsp+0x30]
0x5200: mov ecx,r15d
0x5203: mov r14,qword ptr [rsp+0x20]
0x5208: mov r10,qword ptr [rsp+0x48]
0x520d: add qword ptr [rax],rbp
0x5210: cmp qword ptr [rsp+0x50],0x0
0x5216: mov r11,r14
0x5219: mov r15,r10
0x521c: setne byte ptr [rsp+0x1d]
0x5221: nop dword ptr [rax+0x0]
0x5228: cmp rbp,r15
0x522b: mov rbx,r15
0x522e: cmovbe rbx,rbp
0x5232: test rbx,rbx
0x5235: setne r12b
0x5239: and r12b,byte ptr [rsp+0x1d]
0x523e: je 0x5350
0x5244: mov rsi,r14
0x5247: mov rdx,rbx
0x524a: cmp byte ptr [rsi],0x0
0x524d: jne 0x5480
0x5253: add rsi,0x1
0x5257: sub rdx,0x1
0x525b: je 0x53e8
0x5261: test dl,0xf
0x5264: jne 0x524a
0x5266: mov rdi,r14
0x5269: mov qword ptr [rsp+0x8],r11
0x526e: mov byte ptr [rsp+0x1e],cl
0x5272: call 0x28d0
0x5277: movzx ecx,byte ptr [rsp+0x1e]
0x527c: test eax,eax
0x527e: mov r11,qword ptr [rsp+0x8]
0x5283: sete r12b
0x5287: mov edx,r12d
0x528a: xor edx,ecx
0x528c: test eax,eax
0x528e: setne al
0x5291: test r13,r13
0x5294: setne r9b
0x5298: and r9d,edx
0x529b: cmp rbp,r15
0x529e: ja 0x53f8
0x52a4: test al,al
0x52a6: je 0x53f8
0x52ac: test r9b,r9b
0x52af: je 0x535a
0x52b5: mov r15d,0x1
0x52bb: test cl,cl
0x52bd: mov byte ptr [rsp+0x1e],cl
0x52c1: jne 0x5372
0x52c7: mov edi,dword ptr [rsp+0x18]
0x52cb: mov rdx,r13
0x52ce: mov rsi,r11
0x52d1: mov byte ptr [rsp+0x8],r9b
0x52d6: call 0xb700
0x52db: cmp r13,rax
0x52de: movzx r9d,byte ptr [rsp+0x8]
0x52e4: movzx ecx,byte ptr [rsp+0x1e]
0x52e9: jne 0x548d
0x52ef: test r15d,r15d
0x52f2: mov r13,rbx
0x52f5: je 0x5408
0x52fb: test rbx,rbx
0x52fe: jne 0x5420
0x5304: mov rdi,qword ptr [rsp+0x30]
0x5309: sub qword ptr [rsp+0x28],rdi
0x530e: mov r15d,r12d
0x5311: mov rax,qword ptr [rsp+0x60]
0x5316: mov byte ptr [rax],r12b
0x5319: jne 0x5166
0x531f: test r15b,r15b
0x5322: je 0x54d3
0x5328: movzx edx,byte ptr [rsp+0x6c]
0x532d: mov rsi,qword ptr [rsp+0x10]
0x5332: mov rcx,r13
0x5335: mov edi,dword ptr [rsp+0x18]
0x5339: add rsp,0x78
0x533d: pop rbx
0x533e: pop rbp
0x533f: pop r12
0x5341: pop r13
0x5343: pop r14
0x5345: pop r15
0x5347: jmp 0x5010
0x534c: nop dword ptr [rax+0x0]
0x5350: cmp cl,0x1
0x5353: je 0x53a8
0x5355: cmp rbp,r15
0x5358: ja 0x53a8
0x535a: add r13,rbx
0x535d: xor r9d,r9d
0x5360: test cl,cl
0x5362: mov r15d,0x1
0x5368: mov byte ptr [rsp+0x1e],cl
0x536c: je 0x52c7
0x5372: movzx edx,byte ptr [rsp+0x1f]
0x5377: mov rsi,qword ptr [rsp+0x10]
0x537c: mov rcx,r13
0x537f: mov edi,dword ptr [rsp+0x18]
0x5383: mov byte ptr [rsp+0x1e],r9b
0x5388: call 0x5010
0x538d: test al,al
0x538f: movzx r9d,byte ptr [rsp+0x1e]
0x5395: jne 0x52ef
0x539b: mov r15d,eax
0x539e: jmp 0x51d5
0x53a3: nop dword ptr [rax+rax*1+0x0]
0x53a8: test rbx,rbx
0x53ab: jne 0x53b8
0x53ad: mov r12d,ecx
0x53b0: jmp 0x535a
0x53b2: mov ecx,r12d
0x53b5: nop dword ptr [rax]
0x53b8: movabs rax,0x7fffffffffffffff
0x53c2: sub rax,rbx
0x53c5: cmp rax,r13
0x53c8: jb 0x5440
0x53ca: add r13,rbx
0x53cd: add r14,rbx
0x53d0: mov r15,rbx
0x53d3: sub rbp,r15
0x53d6: jne 0x5228
0x53dc: mov r12d,ecx
0x53df: jmp 0x5304
0x53e4: nop dword ptr [rax+0x0]
0x53e8: mov r9d,ecx
0x53eb: xor r9d,0x1
0x53ef: test r13,r13
0x53f2: setne al
0x53f5: and r9d,eax
0x53f8: test r9b,r9b
0x53fb: je 0x53b2
0x53fd: xor r15d,r15d
0x5400: jmp 0x52bb
0x5405: nop dword ptr [rax]
0x5408: mov r11,r14
0x540b: mov ecx,r12d
0x540e: add r14,rbx
0x5411: mov r15,rbx
0x5414: jmp 0x53d3
0x5416: nop word ptr cs:[rax+rax*1+0x0]
0x5420: xor r15d,r15d
0x5423: test r9b,r9b
0x5426: mov ecx,r12d
0x5429: mov r11,r14
0x542c: jne 0x53d3
0x542e: add r14,rbx
0x5431: mov r15,rbx
0x5434: xor r13d,r13d
0x5437: jmp 0x53d3
0x5439: nop dword ptr [rax+0x0]
0x5440: mov rsi,qword ptr [rsp+0x58]
0x5445: mov edi,0x4
0x544a: xor r15d,r15d
0x544d: call 0xe6d0
0x5452: lea rsi,[rip+0x110ca]
0x5459: mov rbx,rax
0x545c: mov edx,0x5
0x5461: xor edi,edi
0x5463: call 0x2730
0x5468: mov rcx,rbx
0x546b: mov rdx,rax
0x546e: xor esi,esi
0x5470: xor edi,edi
0x5472: xor eax,eax
0x5474: call 0x2b10
0x5479: jmp 0x51d5
0x547e: xchg ax,ax
0x5480: mov eax,r12d
0x5483: mov edx,ecx
0x5485: xor r12d,r12d
0x5488: jmp 0x5291
0x548d: mov rsi,qword ptr [rsp+0x10]
0x5492: mov edi,0x4
0x5497: mov r15d,ecx
0x549a: call 0xe6d0
0x549f: lea rsi,[rip+0x1106c]
0x54a6: xor edi,edi
0x54a8: mov edx,0x5
0x54ad: mov rbp,rax
0x54b0: call 0x2730
0x54b5: mov rbx,rax
0x54b8: call 0x25a0
0x54bd: mov esi,dword ptr [rax]
0x54bf: mov rcx,rbp
0x54c2: mov rdx,rbx
0x54c5: xor edi,edi
0x54c7: xor eax,eax
0x54c9: call 0x2b10
0x54ce: jmp 0x51d5
0x54d3: mov r15d,0x1
0x54d9: jmp 0x51d5
0x54de: xchg ax,ax
0x54f4: mov r13,rdi
0x54f7: call 0x25a0
0x54fc: cmp byte ptr [rbp+0x23],0x0
0x5500: mov r12,rax
0x5503: jne 0x5580
0x5505: mov rsi,r13
0x5508: mov edi,0x4
0x550d: mov dword ptr [r12],0x5f
0x5515: call 0xe6d0
0x551a: lea rsi,[rip+0x10a0f]
0x5521: mov edx,0x5
0x5526: xor edi,edi
0x5528: mov rbx,rax
0x552b: call 0x2730
0x5530: mov esi,dword ptr [r12]
0x5534: mov rcx,rbx
0x5537: mov rdx,rax
0x553a: xor edi,edi
0x553c: xor eax,eax
0x553e: call 0x2b10
0x5543: movzx ebx,byte ptr [rbp+0x26]
0x5547: add rsp,0x8
0x554b: xor ebx,0x1
0x554e: mov eax,ebx
0x5550: pop rbx
0x5551: pop rbp
0x5552: pop r12
0x5554: pop r13
0x5556: ret 
0x5557: nop word ptr [rax+rax*1+0x0]
0x557a: nop word ptr [rax+rax*1+0x0]
0x5580: movzx ebx,byte ptr [rbp+0x26]
0x5584: test bl,bl
0x5586: jne 0x5505
0x558c: mov dword ptr [rax],0x5f
0x5592: jmp 0x5547
0x5594: nop dword ptr [rax+0x0]
0x5598: call 0x25a0
0x559d: mov dword ptr [rax],0x5f
0x55a3: add rsp,0x8
0x55a7: mov eax,ebx
0x55a9: pop rbx
0x55aa: pop rbp
0x55ab: pop r12
0x55ad: pop r13
0x55af: ret 
0x55b0: push r12
0x55b2: push rbp
0x55b3: mov rbp,rcx
0x55b6: push rbx
0x55b7: mov r12,rdi
0x55ba: call 0x25a0
0x55bf: cmp byte ptr [rbp+0x23],0x0
0x55c3: mov rbx,rax
0x55c6: je 0x55ce
0x55c8: cmp byte ptr [rbp+0x26],0x0
0x55cc: je 0x5618
0x55ce: mov rdx,r12
0x55d1: mov dword ptr [rbx],0x5f
0x55d7: mov esi,0x4
0x55dc: xor edi,edi
0x55de: call 0xe5b0
0x55e3: lea rsi,[rip+0x1096e]
0x55ea: mov edx,0x5
0x55ef: xor edi,edi
0x55f1: mov rbp,rax
0x55f4: call 0x2730
0x55f9: mov esi,dword ptr [rbx]
0x55fb: mov rcx,rbp
0x55fe: mov rdx,rax
0x5601: xor edi,edi
0x5603: xor eax,eax
0x5605: call 0x2b10
0x560a: pop rbx
0x560b: xor eax,eax
0x560d: pop rbp
0x560e: pop r12
0x5610: ret 
0x5611: nop dword ptr [rax+0x0]
0x5618: mov dword ptr [rax],0x5f
0x561e: xor eax,eax
0x5620: pop rbx
0x5621: pop rbp
0x5622: pop r12
0x5624: ret 
0x5625: nop 
0x5626: nop word ptr cs:[rax+rax*1+0x0]
0x565b: nop dword ptr [rax+rax*1+0x0]
0x5660: lea r8,[rip+0x74a9]
0x5667: lea rcx,[rip+0x7432]
0x566e: xor esi,esi
0x5670: lea rdx,[rip+0x7419]
0x5677: push rbx
0x5678: mov rbx,rdi
0x567b: mov edi,0x3d
0x5680: call 0xbff0
0x5685: mov qword ptr [rbx+0x48],rax
0x5689: pop rbx
0x568a: ret 
0x568b: nop dword ptr [rax+rax*1+0x0]
0x56c4: xchg ax,ax
0x56c6: nop word ptr cs:[rax+rax*1+0x0]
0x56d0: push rbx
0x56d1: mov rbx,rdi
0x56d4: call 0x25a0
0x56d9: mov edx,dword ptr [rax]
0x56db: cmp edx,0x1
0x56de: sete al
0x56e1: cmp edx,0x16
0x56e4: sete dl
0x56e7: or al,dl
0x56e9: je 0x56f2
0x56eb: movzx eax,byte ptr [rbx+0x1a]
0x56ef: xor eax,0x1
0x56f2: pop rbx
0x56f3: ret 
0x56f4: xchg ax,ax
0x56f6: nop word ptr cs:[rax+rax*1+0x0]
0x5700: push r15
0x5702: push r14
0x5704: push r13
0x5706: push r12
0x5708: mov r13,rsi
0x570b: push rbp
0x570c: push rbx
0x570d: mov rbp,rdi
0x5710: mov ebx,edx
0x5712: sub rsp,0x8
0x5716: test r8b,r8b
0x5719: mov r14d,dword ptr [rcx+0x1c]
0x571d: mov r12d,dword ptr [rcx+0x20]
0x5721: jne 0x5755
0x5723: movabs rax,0xff0000000000ff
0x572d: test qword ptr [rdi+0x18],rax
0x5731: je 0x57d0
0x5737: mov esi,dword ptr [r9+0x18]
0x573b: mov edx,dword ptr [rcx+0x18]
0x573e: mov eax,edx
0x5740: mov ecx,esi
0x5742: not eax
0x5744: and ecx,0xfff
0x574a: or ah,0xe
0x574d: test eax,ecx
0x574f: jne 0x5820
0x5755: cmp ebx,0xffffffff
0x5758: mov edx,r12d
0x575b: mov esi,r14d
0x575e: je 0x57b0
0x5760: mov edi,ebx
0x5762: call 0x2b50
0x5767: test eax,eax
0x5769: je 0x57bc
0x576b: call 0x25a0
0x5770: mov r14d,dword ptr [rax]
0x5773: mov r15,rax
0x5776: cmp r14d,0x1
0x577a: je 0x58e8
0x5780: cmp r14d,0x16
0x5784: je 0x58e8
0x578a: mov rdi,rbp
0x578d: call 0x56d0
0x5792: mov edx,eax
0x5794: xor eax,eax
0x5796: test dl,dl
0x5798: je 0x5890
0x579e: add rsp,0x8
0x57a2: pop rbx
0x57a3: pop rbp
0x57a4: pop r12
0x57a6: pop r13
0x57a8: pop r14
0x57aa: pop r15
0x57ac: ret 
0x57ad: nop dword ptr [rax]
0x57b0: mov rdi,r13
0x57b3: call 0x2a40
0x57b8: test eax,eax
0x57ba: jne 0x57f0
0x57bc: add rsp,0x8
0x57c0: mov eax,0x1
0x57c5: pop rbx
0x57c6: pop rbp
0x57c7: pop r12
0x57c9: pop r13
0x57cb: pop r14
0x57cd: pop r15
0x57cf: ret 
0x57d0: cmp byte ptr [rdi+0x2b],0x0
0x57d4: je 0x5755
0x57da: mov esi,dword ptr [r9+0x18]
0x57de: mov edx,dword ptr [rdi+0x10]
0x57e1: jmp 0x573e
0x57e6: nop word ptr cs:[rax+rax*1+0x0]
0x57f0: call 0x25a0
0x57f5: mov ebx,dword ptr [rax]
0x57f7: mov r14,rax
0x57fa: cmp ebx,0x1
0x57fd: je 0x5808
0x57ff: cmp ebx,0x16
0x5802: jne 0x578a
0x5808: mov edx,r12d
0x580b: mov esi,0xffffffff
0x5810: mov rdi,r13
0x5813: call 0x2a40
0x5818: mov dword ptr [r14],ebx
0x581b: jmp 0x578a
0x5820: and edx,esi
0x5822: mov rdi,r13
0x5825: mov esi,ebx
0x5827: and edx,0x1c0
0x582d: call 0xccd0
0x5832: test eax,eax
0x5834: je 0x5755
0x583a: call 0x25a0
0x583f: mov rbx,rax
0x5842: mov eax,dword ptr [rax]
0x5844: cmp eax,0x1
0x5847: je 0x5900
0x584d: cmp eax,0x16
0x5850: je 0x5900
0x5856: mov rsi,r13
0x5859: mov edi,0x4
0x585e: call 0xe6d0
0x5863: lea rsi,[rip+0x10ccd]
0x586a: xor edi,edi
0x586c: mov edx,0x5
0x5871: mov r12,rax
0x5874: call 0x2730
0x5879: mov esi,dword ptr [rbx]
0x587b: mov rdx,rax
0x587e: mov rcx,r12
0x5881: xor edi,edi
0x5883: xor eax,eax
0x5885: call 0x2b10
0x588a: jmp 0x58cc
0x588c: nop dword ptr [rax+0x0]
0x5890: mov rsi,r13
0x5893: mov edi,0x4
0x5898: call 0xe6d0
0x589d: lea rsi,[rip+0x106e4]
0x58a4: mov edx,0x5
0x58a9: xor edi,edi
0x58ab: mov r12,rax
0x58ae: call 0x2730
0x58b3: mov rbx,rax
0x58b6: call 0x25a0
0x58bb: mov esi,dword ptr [rax]
0x58bd: mov rcx,r12
0x58c0: mov rdx,rbx
0x58c3: xor edi,edi
0x58c5: xor eax,eax
0x58c7: call 0x2b10
0x58cc: movzx eax,byte ptr [rbp+0x24]
0x58d0: add rsp,0x8
0x58d4: pop rbx
0x58d5: pop rbp
0x58d6: pop r12
0x58d8: neg eax
0x58da: pop r13
0x58dc: pop r14
0x58de: pop r15
0x58e0: ret 
0x58e1: nop dword ptr [rax+0x0]
0x58e8: mov edx,r12d
0x58eb: mov esi,0xffffffff
0x58f0: mov edi,ebx
0x58f2: call 0x2b50
0x58f7: mov dword ptr [r15],r14d
0x58fa: jmp 0x578a
0x58ff: nop 
0x5900: cmp byte ptr [rbp+0x1b],0x0
0x5904: jne 0x5856
0x590a: jmp 0x58cc
0x590c: nop dword ptr [rax+0x0]
0x5910: push rbx
0x5911: mov ebx,dword ptr [rip+0x2166f9]
0x5917: cmp ebx,0xffffffff
0x591a: je 0x5920
0x591c: mov eax,ebx
0x591e: pop rbx
0x591f: ret 
0x5920: xor edi,edi
0x5922: call 0x2990
0x5927: mov ebx,eax
0x5929: mov edi,eax
0x592b: mov dword ptr [rip+0x2166df],eax
0x5931: call 0x2990
0x5936: mov eax,ebx
0x5938: pop rbx
0x5939: ret 
0x593a: nop word ptr [rax+rax*1+0x0]
0x5a17: call 0x29e0
0x5a1c: test eax,eax
0x5a1e: mov rsi,r12
0x5a21: setne al
0x5a24: test al,al
0x5a26: jne 0x6225
0x5b55: cmp dword ptr [rbx+0x4],0x2
0x5b59: je 0x6ed0
0x5c58: nop dword ptr [rax+rax*1+0x0]
0x5cad: nop dword ptr [rax]
0x5cb8: nop dword ptr [rax+rax*1+0x0]
0x5cf0: mov edx,dword ptr [rbx]
0x5cf2: test edx,edx
0x5cf4: jne 0x6978
0x5cfa: test r9b,r9b
0x5cfd: lea rdx,[rbp-0x1f0]
0x5d04: je 0x7580
0x5d0a: mov eax,dword ptr [rdx+0x18]
0x5d0d: and eax,0xf000
0x5d12: cmp eax,0xa000
0x5d17: jne 0x5d90
0x5d19: mov rdi,qword ptr [rbx+0x40]
0x5d1d: mov rsi,qword ptr [rbp-0x308]
0x5d24: call 0xb2f0
0x5d29: test al,al
0x5d2b: je 0x5d90
0x5d2d: mov rdx,qword ptr [rbp-0x308]
0x5d34: mov esi,0x4
0x5d39: mov edi,0x1
0x5d3e: call 0xe5b0
0x5d43: mov rdx,qword ptr [rbp-0x310]
0x5d4a: xor edi,edi
0x5d4c: mov esi,0x4
0x5d51: mov r13,rax
0x5d54: call 0xe5b0
0x5d59: lea rsi,[rip+0x103f8]
0x5d60: mov rbx,rax
0x5d63: xor edi,edi
0x5d65: mov edx,0x5
0x5d6a: call 0x2730
0x5d6f: mov r8,r13
0x5d72: mov rdx,rax
0x5d75: mov rcx,rbx
0x5d78: xor esi,esi
0x5d7a: xor edi,edi
0x5d7c: xor eax,eax
0x5d7e: call 0x2b10
0x5d83: jmp 0x6186
0x5d88: nop dword ptr [rax+rax*1+0x0]
0x5dd1: cmp byte ptr [rbx+0x22],0x0
0x5dd5: jne 0x79b0
0x5ddb: movzx eax,r14b
0x5ddf: mov qword ptr [rbp-0x358],0x0
0x5dea: mov dword ptr [rbp-0x320],eax
0x5e04: mov r12d,dword ptr [rbx+0x10]
0x5e08: and r12d,0xfff
0x5e19: mov r15d,dword ptr [rbp-0x314]
0x5e20: and r15d,0xf000
0x5e27: cmp r15d,0x4000
0x5e2e: je 0x6c70
0x5e34: mov ecx,dword ptr [rbp-0x320]
0x5e3a: mov edx,dword ptr [rbp-0x314]
0x5e40: mov r8,rbx
0x5e43: mov rsi,qword ptr [rbp-0x308]
0x5e4a: mov rdi,qword ptr [rbp-0x310]
0x5e51: call 0x54e0
0x5e56: test al,al
0x5e58: mov dword ptr [rbp-0x35c],0x0
0x5e62: je 0x5c50
0x5e84: cmp byte ptr [rbx+0x16],0x0
0x5e88: mov edx,0x1
0x5e8d: jne 0x5e98
0x5e8f: xor edx,edx
0x5e91: cmp dword ptr [rbx+0x8],0x3
0x5e95: sete dl
0x5e98: mov r8d,dword ptr [rbp-0x328]
0x5e9f: mov rsi,qword ptr [rbp-0x308]
0x5ea6: xor ecx,ecx
0x5ea8: mov rdi,qword ptr [rbp-0x310]
0x5eaf: call 0x4db0
0x5eb4: test al,al
0x5eb6: je 0x68d0
0x5ebc: xor r8d,r8d
0x5ebf: cmp r15d,0x4000
0x5ec6: setne r15b
0x5eca: test r14b,r14b
0x5ecd: jne 0x5ee2
0x5ecf: movzx eax,byte ptr [rbx+0x14]
0x5ed3: xor eax,0x1
0x5ed6: and al,r15b
0x5ed9: mov r12d,eax
0x5edc: jne 0x7c10
0x5ee2: test r13b,r13b
0x5ee5: mov r12d,0x1
0x5eeb: je 0x5f42
0x5eed: mov byte ptr [rbp-0x330],0x0
0x5ef4: cmp qword ptr [rbx+0x40],0x0
0x5ef9: je 0x5f2d
0x5efb: lea r12,[rbp-0xd0]
0x5f02: mov rsi,qword ptr [rbp-0x308]
0x5f09: mov edi,0x1
0x5f0e: mov byte ptr [rbp-0x328],r8b
0x5f15: mov rdx,r12
0x5f18: call 0x2760
0x5f1d: test eax,eax
0x5f1f: movzx r8d,byte ptr [rbp-0x328]
0x5f27: je 0x7f72
0x5f2d: movzx eax,byte ptr [rbp-0x330]
0x5f34: movzx r12d,byte ptr [rbp-0x315]
0x5f3c: mov byte ptr [rbp-0x315],al
0x5f42: cmp byte ptr [rbx+0x17],0x0
0x5f46: je 0x5f51
0x5f48: test r15b,r15b
0x5f4b: jne 0x6186
0x5f51: test r8b,r8b
0x5f54: jne 0x6186
0x5f5a: cmp byte ptr [rbx+0x1f],0x0
0x5f5e: je 0x6018
0x5f64: mov rax,qword ptr [rbp-0x238]
0x5f6b: cmp byte ptr [rbp-0x320],0x0
0x5f72: lea rsi,[rbp-0xd0]
0x5f79: mov rdi,qword ptr [rbp-0x308]
0x5f80: mov qword ptr [rbp-0xd0],rax
0x5f87: mov rax,qword ptr [rbp-0x230]
0x5f8e: mov qword ptr [rbp-0xc8],rax
0x5f95: mov rax,qword ptr [rbp-0x228]
0x5f9c: mov qword ptr [rbp-0xc0],rax
0x5fa3: mov rax,qword ptr [rbp-0x220]
0x5faa: mov qword ptr [rbp-0xb8],rax
0x5fb1: je 0x7f60
0x5fb7: call 0x10400
0x5fbc: test eax,eax
0x5fbe: je 0x6018
0x5fc0: call 0x25a0
0x5fc5: cmp dword ptr [rax],0x26
0x5fc8: je 0x6018
0x5fca: mov rsi,qword ptr [rbp-0x308]
0x5fd1: mov edi,0x4
0x5fd6: call 0xe6d0
0x5fdb: lea rsi,[rip+0x106cf]
0x5fe2: xor edi,edi
0x5fe4: mov edx,0x5
0x5fe9: mov r13,rax
0x5fec: call 0x2730
0x5ff1: mov r15,rax
0x5ff4: call 0x25a0
0x5ff9: mov esi,dword ptr [rax]
0x5ffb: xor edi,edi
0x5ffd: xor eax,eax
0x5fff: mov rcx,r13
0x6002: mov rdx,r15
0x6005: call 0x2b10
0x600a: cmp byte ptr [rbx+0x24],0x0
0x600e: jne 0x5c50
0x6014: nop dword ptr [rax+0x0]
0x6018: cmp byte ptr [rbp-0x320],0x0
0x601f: jne 0x6186
0x6025: cmp byte ptr [rbx+0x1d],0x0
0x6029: je 0x6087
0x602b: test r14b,r14b
0x602e: jne 0x6042
0x6030: mov eax,dword ptr [rbp-0x1d4]
0x6036: cmp dword ptr [rbp-0x264],eax
0x603c: je 0x86ea
0x6042: mov rsi,qword ptr [rbp-0x308]
0x6049: lea rcx,[rbp-0x280]
0x6050: lea r9,[rbp-0x1f0]
0x6057: movzx r8d,r14b
0x605b: mov edx,0xffffffff
0x6060: mov rdi,rbx
0x6063: call 0x5700
0x6068: cmp eax,0xffffffff
0x606b: je 0x5c50
0x6071: mov ecx,dword ptr [rbp-0x314]
0x6077: mov edx,ecx
0x6079: and dh,0xf1
0x607c: test eax,eax
0x607e: cmovne edx,ecx
0x6081: mov dword ptr [rbp-0x314],edx
0x6087: movabs rax,0xff0000000000ff
0x6091: test qword ptr [rbx+0x18],rax
0x6095: jne 0x8130
0x609b: cmp byte ptr [rbx+0x2b],0x0
0x609f: jne 0x8495
0x60a5: test byte ptr [rbx+0x20],r14b
0x60a9: jne 0x8749
0x60af: mov eax,dword ptr [rbp-0x35c]
0x60b5: test eax,eax
0x60b7: jne 0x8701
0x60bd: cmp byte ptr [rbp-0x315],0x0
0x60c4: je 0x6186
0x60ca: mov esi,dword ptr [rbp-0x38c]
0x60d0: or esi,dword ptr [rbp-0x35c]
0x60d6: mov rdi,qword ptr [rbp-0x308]
0x60dd: call 0x2ae0
0x60e2: test eax,eax
0x60e4: je 0x6186
0x60ea: mov rsi,qword ptr [rbp-0x308]
0x60f1: mov edi,0x4
0x60f6: call 0xe6d0
0x60fb: lea rsi,[rip+0x105c7]
0x6102: mov edx,0x5
0x6107: xor edi,edi
0x6109: mov r14,rax
0x610c: call 0x2730
0x6111: mov r13,rax
0x6114: call 0x25a0
0x6119: mov esi,dword ptr [rax]
0x611b: mov rcx,r14
0x611e: mov rdx,r13
0x6121: xor edi,edi
0x6123: xor eax,eax
0x6125: call 0x2b10
0x612a: cmp byte ptr [rbx+0x24],0x0
0x612e: jne 0x5c50
0x6134: jmp 0x6186
0x6136: nop word ptr cs:[rax+rax*1+0x0]
0x61ab: nop dword ptr [rax+rax*1+0x0]
0x61f2: nop word ptr [rax+rax*1+0x0]
0x6207: nop word ptr [rax+rax*1+0x0]
0x6261: jmp 0x6186
0x6266: nop word ptr cs:[rax+rax*1+0x0]
0x6346: nop word ptr cs:[rax+rax*1+0x0]
0x6350: mov eax,dword ptr [rbp-0x314]
0x6356: and eax,0xf000
0x635b: cmp eax,0x4000
0x6360: je 0x5da0
0x6366: mov rdx,qword ptr [rbp-0x350]
0x636d: mov rsi,qword ptr [rbp-0x308]
0x6374: mov rdi,qword ptr [rbp-0x310]
0x637b: call 0x4cf0
0x6380: jmp 0x5da0
0x6385: nop dword ptr [rax]
0x63b9: nop dword ptr [rax+0x0]
0x63c0: movzx r9d,byte ptr [rbx+0x18]
0x63c5: mov r8d,0x100
0x63cb: test r9b,r9b
0x63ce: jne 0x5b01
0x63d4: movzx r9d,byte ptr [rbx+0x2c]
0x63d9: test r9b,r9b
0x63dc: jne 0x5b01
0x63e2: movzx r9d,byte ptr [rbx+0x17]
0x63e7: test r9b,r9b
0x63ea: jne 0x5b01
0x63f0: mov r10d,dword ptr [rbx]
0x63f3: mov r9d,0x1
0x63f9: test r10d,r10d
0x63fc: jne 0x5b01
0x6402: movzx r9d,byte ptr [rbx+0x15]
0x6407: xor r8d,r8d
0x640a: test r9b,r9b
0x640d: setne r8b
0x6411: shl r8d,0x8
0x6415: jmp 0x5b01
0x641a: nop word ptr [rax+rax*1+0x0]
0x6435: nop dword ptr [rax]
0x6489: mov rax,qword ptr [rbp-0x330]
0x6490: mov rdx,qword ptr [rbp-0x278]
0x6497: mov rcx,qword ptr [rbp-0x280]
0x649e: test rax,rax
0x64a1: jne 0x64bc
0x64a3: jmp 0x6da0
0x64a8: nop dword ptr [rax+rax*1+0x0]
0x64b0: mov rax,qword ptr [rax]
0x64b3: test rax,rax
0x64b6: je 0x6da0
0x64bc: cmp qword ptr [rax+0x8],rdx
0x64c0: jne 0x64b0
0x64c2: cmp qword ptr [rax+0x10],rcx
0x64c6: jne 0x64b0
0x64c8: mov rsi,qword ptr [rbp-0x310]
0x64cf: mov edi,0x4
0x64d4: call 0xe6d0
0x64d9: lea rsi,[rip+0xfe60]
0x64e0: mov r12,rax
0x64e3: mov edx,0x5
0x6500: jmp 0x68d0
0x6505: nop dword ptr [rax]
0x6516: mov rsi,qword ptr [rbp-0x310]
0x651d: mov edi,0x4
0x6522: call 0xe6d0
0x6527: cmp byte ptr [rbx+0x19],0x0
0x652b: mov r13,rax
0x652e: mov edx,0x5
0x6533: jne 0x72d0
0x6539: lea rsi,[rip+0xfa70]
0x6540: xor edi,edi
0x6542: call 0x2730
0x6547: mov rdx,rax
0x654a: mov rcx,r13
0x654d: xor esi,esi
0x654f: xor edi,edi
0x6551: xor eax,eax
0x6553: call 0x2b10
0x6558: jmp 0x6186
0x655d: nop dword ptr [rax]
0x656a: mov eax,dword ptr [rbp-0x314]
0x6570: and eax,0xf000
0x6575: cmp eax,0x4000
0x657a: je 0x65d0
0x657c: mov eax,dword ptr [rbx+0x8]
0x657f: cmp eax,0x2
0x6582: je 0x6180
0x6588: cmp eax,0x3
0x658b: jne 0x65d0
0x658d: mov rsi,qword ptr [rbp-0x308]
0x6594: lea rdx,[rbp-0x1d8]
0x659b: mov rdi,rbx
0x659e: mov byte ptr [rbp-0x358],r9b
0x65a5: mov byte ptr [rbp-0x350],r8b
0x65ac: call 0x4ec0
0x65b1: test al,al
0x65b3: movzx r8d,byte ptr [rbp-0x350]
0x65bb: movzx r9d,byte ptr [rbp-0x358]
0x65c3: je 0x6180
0x65c9: nop dword ptr [rax+0x0]
0x662e: mov rdi,qword ptr [rbp-0x310]
0x6635: mov byte ptr [rbp-0x358],r9b
0x663c: mov byte ptr [rbp-0x350],r8b
0x6643: call 0xb0c0
0x6648: cmp byte ptr [rax],0x2e
0x664b: mov r14,rax
0x664e: movzx r8d,byte ptr [rbp-0x350]
0x6656: movzx r9d,byte ptr [rbp-0x358]
0x665e: jne 0x6687
0x6660: xor eax,eax
0x6687: mov eax,dword ptr [rbp-0x1d8]
0x668d: and eax,0xf000
0x6692: cmp eax,0x4000
0x6697: je 0x7167
0x678e: xchg ax,ax
0x67e4: jmp 0x6186
0x67e9: nop dword ptr [rax+0x0]
0x67fd: nop dword ptr [rax]
0x6800: mov rax,qword ptr [rbp-0x310]
0x6807: cmp byte ptr [rax],0x2f
0x680a: je 0x6844
0x680c: mov rdi,qword ptr [rbp-0x308]
0x6813: call 0xafe0
0x6818: lea r8,[rip+0xf2cd]
0x681f: mov rdi,rax
0x6822: mov ecx,0x2
0x6827: mov r12,rax
0x682a: mov rsi,r8
0x682d: repz cmps byte ptr ds:[rsi],byte ptr es:[rdi]
0x682f: seta al
0x6832: sbb al,0x0
0x6834: test al,al
0x6836: jne 0x7b18
0x683c: mov rdi,r12
0x683f: call 0x2c80
0x6844: movzx ecx,byte ptr [rbx+0x16]
0x6848: mov rdx,qword ptr [rbp-0x308]
0x684f: mov r8d,0xffffffff
0x6855: mov rdi,qword ptr [rbp-0x310]
0x685c: mov esi,0xffffff9c
0x6861: call 0xa300
0x6866: xor r8d,r8d
0x6869: test eax,eax
0x686b: mov r12d,eax
0x686e: jle 0x5ebf
0x6874: mov rdx,qword ptr [rbp-0x310]
0x687b: mov esi,0x4
0x6880: mov edi,0x1
0x6885: call 0xe5b0
0x688a: mov rdx,qword ptr [rbp-0x308]
0x6891: mov esi,0x4
0x6896: xor edi,edi
0x6898: mov r13,rax
0x689b: call 0xe5b0
0x68a0: lea rsi,[rip+0xf9f1]
0x68a7: mov r14,rax
0x68aa: mov edx,0x5
0x68af: xor edi,edi
0x68b1: call 0x2730
0x68b6: mov r8,r13
0x68b9: mov rdx,rax
0x68bc: mov rcx,r14
0x68bf: mov esi,r12d
0x68c2: xor edi,edi
0x68c4: xor eax,eax
0x68c6: call 0x2b10
0x68cb: nop dword ptr [rax+rax*1+0x0]
0x68d0: cmp byte ptr [rbx+0x25],0x0
0x68d4: jne 0x6a50
0x68da: cmp qword ptr [rbp-0x358],0x0
0x68e2: je 0x7180
0x6975: nop dword ptr [rax]
0x6978: cmp byte ptr [rbx+0x2e],0x0
0x697c: jne 0x6350
0x6982: test r15d,r15d
0x6985: je 0x5ddb
0x698b: jmp 0x5da9
0x6a3c: mov rax,qword ptr [rbp-0x340]
0x6a43: mov byte ptr [rax],0x1
0x6a50: call 0x2ca6
0x6a55: nop dword ptr [rax]
0x6a93: movzx eax,r14b
0x6a97: mov dword ptr [rbp-0x320],eax
0x6a9d: jmp 0x5df0
0x6aa2: nop word ptr [rax+rax*1+0x0]
0x6aff: mov rsi,qword ptr [rbp-0x280]
0x6b06: mov rdi,qword ptr [rbp-0x278]
0x6b0d: call 0x9c10
0x6b12: jmp 0x5c50
0x6b17: nop word ptr [rax+rax*1+0x0]
0x6b20: xor r8d,r8d
0x6b23: jmp 0x61d2
0x6b28: nop dword ptr [rax+rax*1+0x0]
0x6be1: nop dword ptr [rax+0x0]
0x6c07: nop word ptr [rax+rax*1+0x0]
0x6c10: cmp r12d,0x4000
0x6c17: je 0x7130
0x6c1d: cmp byte ptr [rbx+0x18],0x0
0x6c21: je 0x6c2f
0x6c23: mov r15d,dword ptr [rbx]
0x6c26: test r15d,r15d
0x6c29: jne 0x78c7
0x6c2f: mov rsi,qword ptr [rbp-0x308]
0x6c36: mov edi,0x4
0x6c3b: xor r12d,r12d
0x6c3e: call 0xe6d0
0x6c43: lea rsi,[rip+0xf42e]
0x6c4a: mov rbx,rax
0x6c4d: mov edx,0x5
0x6c52: xor edi,edi
0x6c54: call 0x2730
0x6c59: mov rcx,rbx
0x6c5c: mov rdx,rax
0x6c5f: xor esi,esi
0x6c61: xor edi,edi
0x6c63: xor eax,eax
0x6c65: call 0x2b10
0x6c6a: jmp 0x6186
0x6c6f: nop 
0x6c70: mov ecx,dword ptr [rbp-0x320]
0x6c76: mov edx,dword ptr [rbp-0x314]
0x6c7c: mov r8,rbx
0x6c7f: mov rsi,qword ptr [rbp-0x308]
0x6c86: mov rdi,qword ptr [rbp-0x310]
0x6c8d: call 0x54e0
0x6c92: test al,al
0x6c94: je 0x5c50
0x6c9a: mov eax,r12d
0x6c9d: and eax,0x12
0x6ca0: mov dword ptr [rbp-0x35c],eax
0x6ca6: jmp 0x6489
0x6cab: nop dword ptr [rax+rax*1+0x0]
0x6cb0: mov rdi,qword ptr [rbp-0x308]
0x6cb7: mov rcx,rbx
0x6cba: mov edx,0x1
0x6cbf: xor esi,esi
0x6cc1: call 0x55b0
0x6cc6: jmp 0x615e
0x6ccb: nop dword ptr [rax+rax*1+0x0]
0x6d11: nop dword ptr [rax+0x0]
0x6d4d: lea r12,[rbp-0x160]
0x6d54: mov rsi,qword ptr [rbp-0x308]
0x6d5b: mov edi,0x1
0x6d60: mov byte ptr [rbp-0x358],r9b
0x6d67: mov byte ptr [rbp-0x350],r8b
0x6d6e: mov rdx,r12
0x6d71: call 0x2760
0x6d76: test eax,eax
0x6d78: movzx r8d,byte ptr [rbp-0x350]
0x6d80: movzx r9d,byte ptr [rbp-0x358]
0x6d88: je 0x7d92
0x6d8e: xor r14d,r14d
0x6d91: jmp 0x5b5f
0x6d96: nop word ptr cs:[rax+rax*1+0x0]
0x6da0: sub rsp,0x30
0x6da4: mov rsi,qword ptr [rbp-0x330]
0x6dab: lea rax,[rsp+0xf]
0x6db0: and rax,0xfffffffffffffff0
0x6db4: test r14b,r14b
0x6db7: mov qword ptr [rbp-0x328],rax
0x6dbe: mov qword ptr [rax],rsi
0x6dc1: mov qword ptr [rax+0x8],rdx
0x6dc5: mov qword ptr [rax+0x10],rcx
0x6dc9: jne 0x6de1
0x6dcb: mov eax,dword ptr [rbp-0x1d8]
0x6dd1: and eax,0xf000
0x6dd6: cmp eax,0x4000
0x6ddb: je 0x7e38
0x6de1: mov esi,dword ptr [rbp-0x35c]
0x6de7: mov r15,qword ptr [rbp-0x308]
0x6dee: not esi
0x6df0: mov rdi,r15
0x6df3: and esi,r12d
0x6df6: call 0x2610
0x6dfb: test eax,eax
0x6dfd: je 0x75c0
0x6e03: mov rsi,r15
0x6e06: mov edi,0x4
0x6e0b: call 0xe6d0
0x6e10: lea rsi,[rip+0xf7b4]
0x6e17: mov r13,rax
0x6e1a: mov edx,0x5
0x6e1f: xor edi,edi
0x6e21: call 0x2730
0x6e26: mov r12,rax
0x6e29: call 0x25a0
0x6e2e: mov esi,dword ptr [rax]
0x6e30: mov rcx,r13
0x6e33: mov rdx,r12
0x6e36: xor edi,edi
0x6e38: xor eax,eax
0x6e3a: call 0x2b10
0x6e3f: jmp 0x68d0
0x6e44: nop dword ptr [rax+0x0]
0x6e48: mov rdx,qword ptr [rbp-0x280]
0x6e4f: mov rsi,qword ptr [rbp-0x278]
0x6e56: mov rdi,qword ptr [rbp-0x308]
0x6e5d: call 0x9ce0
0x6e62: mov qword ptr [rbp-0x358],rax
0x6eb9: nop dword ptr [rax+0x0]
0x6ec9: nop dword ptr [rax+0x0]
0x6ed0: xor ecx,ecx
0x6ed2: xor r15d,r15d
0x6f04: cmp byte ptr [rbx+0x18],0x0
0x6f08: jne 0x6d8e
0x6f0e: cmp dword ptr [rbx+0x4],0x2
0x6f12: je 0x6d8e
0x6f18: mov eax,dword ptr [rdx+0x18]
0x6f1b: and eax,0xf000
0x6f20: cmp eax,0xa000
0x6f25: jne 0x6d8e
0x6f2b: mov eax,dword ptr [r12+0x18]
0x6f30: and eax,0xf000
0x6f35: cmp eax,0xa000
0x6f3a: je 0x6d8e
0x6f96: jmp 0x5c50
0x6f9b: nop dword ptr [rax+rax*1+0x0]
0x6faf: nop 
0x713f: test r15d,r15d
0x7142: jne 0x662e
0x7180: mov rsi,qword ptr [rbp-0x280]
0x7187: mov rdi,qword ptr [rbp-0x278]
0x718e: call 0x9c10
0x7193: jmp 0x68e8
0x7198: nop dword ptr [rax+rax*1+0x0]
0x71c5: nop dword ptr [rax]
0x7247: nop word ptr [rax+rax*1+0x0]
0x7264: nop dword ptr [rax+0x0]
0x72a0: jmp 0x6186
0x72a5: nop dword ptr [rax]
0x72c7: nop word ptr [rax+rax*1+0x0]
0x72d0: lea rsi,[rip+0xf28b]
0x72d7: xor edi,edi
0x72d9: call 0x2730
0x72de: mov rdx,rax
0x72e1: jmp 0x654a
0x72e6: nop word ptr cs:[rax+rax*1+0x0]
0x7346: mov rax,qword ptr [rbp-0x340]
0x734d: mov r12d,0x1
0x7353: mov byte ptr [rax],0x1
0x7356: jmp 0x6186
0x735b: nop dword ptr [rax+rax*1+0x0]
0x73d1: nop dword ptr [rax+0x0]
0x73e5: cmp byte ptr [rbx+0x15],0x0
0x73e9: jne 0x6fb0
0x73ef: mov eax,dword ptr [rdx+0x18]
0x73f2: and eax,0xf000
0x73f7: cmp eax,0xa000
0x73fc: jne 0x83e5
0x7408: mov eax,dword ptr [r12+0x18]
0x740d: and eax,0xf000
0x7412: cmp eax,0xa000
0x7417: je 0x5b5f
0x7563: mov eax,dword ptr [r12+0x18]
0x7568: and eax,0xf000
0x756d: cmp eax,0xa000
0x7572: setne r14b
0x7576: jmp 0x5b5f
0x757b: nop dword ptr [rax+rax*1+0x0]
0x7580: lea rcx,[rbp-0xd0]
0x7587: mov rsi,qword ptr [rbp-0x308]
0x758e: mov edi,0x1
0x7593: mov rdx,rcx
0x7596: mov qword ptr [rbp-0x358],rcx
0x759d: call 0x2760
0x75a2: test eax,eax
0x75a4: jne 0x5d90
0x75aa: mov rcx,qword ptr [rbp-0x358]
0x75b1: mov rdx,rcx
0x75b4: jmp 0x5d0a
0x75b9: nop dword ptr [rax+0x0]
0x75c0: mov rsi,qword ptr [rbp-0x308]
0x75c7: lea rdx,[rbp-0x1f0]
0x75ce: mov edi,0x1
0x75d3: call 0x2760
0x75d8: test eax,eax
0x75da: jne 0x7fe5
0x75e0: mov r12d,dword ptr [rbp-0x1d8]
0x75e7: mov byte ptr [rbp-0x330],0x0
0x75ee: mov eax,r12d
0x75f1: and eax,0x1c0
0x75f6: cmp eax,0x1c0
0x75fb: je 0x7628
0x75fd: mov rdi,qword ptr [rbp-0x308]
0x7604: mov esi,r12d
0x7607: or esi,0x1c0
0x760d: call 0x2ae0
0x7612: test eax,eax
0x7614: mov dword ptr [rbp-0x38c],r12d
0x761b: mov byte ptr [rbp-0x330],0x1
0x7622: jne 0x8643
0x7628: mov rax,qword ptr [rbp-0x338]
0x762f: cmp byte ptr [rax],0x0
0x7632: je 0x842c
0x7638: cmp byte ptr [rbx+0x2e],0x0
0x763c: je 0x7688
0x763e: cmp byte ptr [rbx+0x18],0x0
0x7642: je 0x84ed
0x7648: mov rsi,qword ptr [rbp-0x308]
0x764f: mov edi,0x4
0x7654: call 0xe6d0
0x7659: lea rsi,[rip+0xefa1]
0x7660: mov r12,rax
0x7663: mov edx,0x5
0x7668: xor edi,edi
0x766a: call 0x2730
0x766f: mov rdx,r12
0x7672: mov rsi,rax
0x7675: mov edi,0x1
0x767a: xor eax,eax
0x767c: call 0x2ab0
0x7681: nop dword ptr [rax+0x0]
0x7688: mov rax,qword ptr [rbp-0x348]
0x768f: test rax,rax
0x7692: setne r12b
0x7696: and r12b,byte ptr [rbx+0x1c]
0x769a: jne 0x7e7b
0x76a0: movdqu xmm0,XMMword ptr [rbx]
0x76a4: mov esi,0x2
0x76a9: mov rdi,qword ptr [rbp-0x310]
0x76b0: movaps XMMword ptr [rbp-0x2f0],xmm0
0x76b7: movdqu xmm0,XMMword ptr [rbx+0x10]
0x76bc: movaps XMMword ptr [rbp-0x2e0],xmm0
0x76c3: movdqu xmm0,XMMword ptr [rbx+0x20]
0x76c8: movaps XMMword ptr [rbp-0x2d0],xmm0
0x76cf: movdqu xmm0,XMMword ptr [rbx+0x30]
0x76d4: movaps XMMword ptr [rbp-0x2c0],xmm0
0x76db: movdqu xmm0,XMMword ptr [rbx+0x40]
0x76e0: movaps XMMword ptr [rbp-0x2b0],xmm0
0x76e7: call 0xf2b0
0x76ec: test rax,rax
0x76ef: mov qword ptr [rbp-0x368],rax
0x76f6: je 0x8558
0x76fc: cmp dword ptr [rbx+0x4],0x3
0x7700: jne 0x770c
0x7702: mov dword ptr [rbp-0x2ec],0x2
0x770c: mov rax,qword ptr [rbp-0x368]
0x7713: cmp byte ptr [rax],0x0
0x7716: je 0x8c55
0x771c: lea rax,[rbp-0x2f0]
0x7723: lea r10,[rbp-0x280]
0x772a: mov dword ptr [rbp-0x380],r13d
0x7731: mov r15,qword ptr [rbp-0x368]
0x7738: mov r13,qword ptr [rbp-0x340]
0x773f: mov r12d,0x1
0x7745: mov qword ptr [rbp-0x348],rax
0x774c: lea rax,[rbp-0x2f9]
0x7753: mov byte ptr [rbp-0x315],0x0
0x775a: mov byte ptr [rbp-0x370],r14b
0x7761: mov qword ptr [rbp-0x378],rbx
0x7768: mov qword ptr [rbp-0x350],rax
0x776f: lea rax,[rbp-0x2f8]
0x7776: mov qword ptr [rbp-0x340],r10
0x777d: mov qword ptr [rbp-0x358],rax
0x7784: jmp 0x77b4
0x7786: nop word ptr cs:[rax+rax*1+0x0]
0x7790: movzx eax,byte ptr [rbp-0x2f8]
0x7797: mov rdi,r15
0x779a: or byte ptr [rbp-0x315],al
0x77a0: call 0x2750
0x77a5: lea r15,[r15+rax*1+0x1]
0x77aa: cmp byte ptr [r15],0x0
0x77ae: je 0x7851
0x77b4: mov rdi,qword ptr [rbp-0x310]
0x77bb: xor edx,edx
0x77bd: mov rsi,r15
0x77c0: call 0xb5e0
0x77c5: mov rdi,qword ptr [rbp-0x308]
0x77cc: xor edx,edx
0x77ce: mov rsi,r15
0x77d1: mov rbx,rax
0x77d4: call 0xb5e0
0x77d9: mov r14,rax
0x77dc: mov rax,qword ptr [rbp-0x338]
0x77e3: mov r9,qword ptr [rbp-0x348]
0x77ea: mov r8,qword ptr [rbp-0x328]
0x77f1: mov rcx,qword ptr [rbp-0x340]
0x77f8: mov rsi,r14
0x77fb: mov edx,dword ptr [rbp-0x320]
0x7801: mov rdi,rbx
0x7804: movzx eax,byte ptr [rax]
0x7807: push 0x0
0x7809: push qword ptr [rbp-0x350]
0x780f: push qword ptr [rbp-0x358]
0x7815: push 0x0
0x7817: mov byte ptr [rbp-0x2f8],al
0x781d: call 0x5940
0x7822: and r12d,eax
0x7825: movzx eax,byte ptr [rbp-0x2f9]
0x782c: add rsp,0x20
0x7830: or byte ptr [r13+0x0],al
0x7834: mov rdi,r14
0x7837: call 0x2c80
0x783c: mov rdi,rbx
0x783f: call 0x2c80
0x7844: cmp byte ptr [rbp-0x2f9],0x0
0x784b: je 0x7790
0x7851: movzx r14d,byte ptr [rbp-0x370]
0x7859: mov rbx,qword ptr [rbp-0x378]
0x7860: mov r13d,dword ptr [rbp-0x380]
0x7867: mov rdi,qword ptr [rbp-0x368]
0x786e: call 0x2c80
0x7873: movzx ecx,byte ptr [rbp-0x315]
0x787a: mov rax,qword ptr [rbp-0x338]
0x7881: mov byte ptr [rax],cl
0x7883: test r13b,r13b
0x7886: jne 0x7e62
0x788c: movzx eax,byte ptr [rbp-0x330]
0x7893: mov byte ptr [rbp-0x320],0x0
0x789a: mov byte ptr [rbp-0x315],al
0x78a0: jmp 0x5f5a
0x78a5: nop dword ptr [rax]
0x78a8: cmp byte ptr [rbx+0x18],0x0
0x78ac: je 0x7cbb
0x78b2: mov r15d,dword ptr [rbx]
0x78b5: test r15d,r15d
0x78b8: je 0x7cbb
0x78be: test r13b,r13b
0x78c1: jne 0x661a
0x791f: nop 
0x794c: test r13b,r13b
0x794f: jne 0x6ec0
0x79ab: jmp 0x6a46
0x79b0: cmp byte ptr [rbx+0x17],0x0
0x79b4: je 0x6a58
0x79ba: mov qword ptr [rbp-0x358],0x0
0x79c5: jmp 0x6a93
0x79ca: nop word ptr [rax+rax*1+0x0]
0x79d0: mov eax,dword ptr [rbp-0x268]
0x79d6: xor esi,esi
0x79d8: cmp dword ptr [rbx+0x4],0x2
0x79dc: mov rdi,qword ptr [rbp-0x310]
0x79e3: mov dword ptr [rbp-0x340],eax
0x79e9: movzx eax,byte ptr [rbx+0x23]
0x79ed: sete sil
0x79f1: shl esi,0x11
0x79f4: mov byte ptr [rbp-0x338],al
0x79fa: xor eax,eax
0x79fc: call 0xb1f0
0x7a01: test eax,eax
0x7a03: mov dword ptr [rbp-0x320],eax
0x7a09: js 0x810b
0x7a0f: mov esi,dword ptr [rbp-0x320]
0x7a15: lea rdx,[rbp-0x160]
0x7a1c: mov edi,0x1
0x7a21: call 0x2a30
0x7a26: test eax,eax
0x7a28: jne 0x8347
0x7a2e: mov rax,qword ptr [rbp-0x158]
0x7a35: cmp qword ptr [rbp-0x278],rax
0x7a3c: jne 0x7a52
0x7a3e: mov rax,qword ptr [rbp-0x160]
0x7a45: cmp qword ptr [rbp-0x280],rax
0x7a4c: je 0x8776
0x7a52: mov rsi,qword ptr [rbp-0x310]
0x7a59: mov edi,0x4
0x7a5e: call 0xe6d0
0x7a63: lea rsi,[rip+0xe856]
0x7a6a: mov r12,rax
0x7a6d: mov edx,0x5
0x7a72: xor edi,edi
0x7a74: call 0x2730
0x7a79: mov rcx,r12
0x7a7c: mov rdx,rax
0x7a7f: xor esi,esi
0x7a81: xor edi,edi
0x7a83: xor eax,eax
0x7a85: call 0x2b10
0x7a8a: xor r8d,r8d
0x7a8d: mov qword ptr [rbp-0x330],0x0
0x7a98: mov edi,dword ptr [rbp-0x320]
0x7a9e: mov byte ptr [rbp-0x328],r8b
0x7aa5: call 0x2870
0x7aaa: test eax,eax
0x7aac: movzx r8d,byte ptr [rbp-0x328]
0x7ab4: js 0x8507
0x7aba: mov rdi,qword ptr [rbp-0x330]
0x7ac1: mov byte ptr [rbp-0x328],r8b
0x7ac8: call 0x2c80
0x7acd: movzx r8d,byte ptr [rbp-0x328]
0x7ad5: mov byte ptr [rbp-0x320],0x0
0x7adc: test r8b,r8b
0x7adf: jne 0x5ebf
0x7ae5: jmp 0x68d0
0x7aea: nop word ptr [rax+rax*1+0x0]
0x7b14: nop dword ptr [rax+0x0]
0x7b18: lea rdx,[rbp-0x160]
0x7b1f: mov rsi,r8
0x7b22: mov edi,0x1
0x7b27: call 0x29e0
0x7b2c: test eax,eax
0x7b2e: jne 0x683c
0x7b34: lea rdx,[rbp-0xd0]
0x7b3b: mov rsi,r12
0x7b3e: mov edi,0x1
0x7b43: call 0x29e0
0x7b48: test eax,eax
0x7b4a: jne 0x683c
0x7b50: mov rax,qword ptr [rbp-0xc8]
0x7b57: cmp qword ptr [rbp-0x158],rax
0x7b5e: je 0x8c67
0x7b64: mov rdi,r12
0x7b67: call 0x2c80
0x7b6c: mov rdx,qword ptr [rbp-0x308]
0x7b73: mov esi,0x3
0x7b78: xor edi,edi
0x7b7a: call 0xe7d0
0x7b7f: mov edx,0x5
0x7b84: mov r12,rax
0x7b87: lea rsi,[rip+0xe7da]
0x7b8e: jmp 0x64e8
0x7b93: mov eax,dword ptr [rbp-0x1d8]
0x7b99: lea rdx,[rbp-0x280]
0x7ba0: and eax,0xf000
0x7ba5: cmp eax,0xa000
0x7baa: jne 0x6ef2
0x7bb0: mov rsi,qword ptr [rbp-0x308]
0x7bb7: mov rdi,qword ptr [rbp-0x310]
0x7bbe: mov byte ptr [rbp-0x358],r9b
0x7bc5: mov byte ptr [rbp-0x350],r8b
0x7bcc: call 0xeee0
0x7bd1: test al,al
0x7bd3: jne 0x6f40
0x7bd9: mov edi,dword ptr [rbx]
0x7bdb: movzx r8d,byte ptr [rbp-0x350]
0x7be3: movzx r9d,byte ptr [rbp-0x358]
0x7beb: test edi,edi
0x7bed: jne 0x6d8e
0x7bf3: test r15d,r15d
0x7bf6: je 0x6d8e
0x7bfc: movzx r12d,byte ptr [rbx+0x18]
0x7c01: mov eax,0x1
0x7c06: xor r12d,0x1
0x7c0a: jmp 0x70bc
0x7c0f: nop 
0x7c10: mov r15d,eax
0x7c13: movabs rax,0xff000000ff00
0x7c1d: test qword ptr [rbx+0x20],rax
0x7c21: je 0x5ee2
0x7c27: movzx esi,byte ptr [rbx+0x25]
0x7c2b: mov rdi,qword ptr [rbp-0x308]
0x7c32: xor edx,edx
0x7c34: mov rcx,rbx
0x7c37: mov byte ptr [rbp-0x328],r8b
0x7c3e: call 0x55b0
0x7c43: test al,al
0x7c45: mov r15d,eax
0x7c48: movzx r8d,byte ptr [rbp-0x328]
0x7c50: jne 0x5ee2
0x7c56: movzx r14d,byte ptr [rbx+0x26]
0x7c5b: test r14b,r14b
0x7c5e: jne 0x68d0
0x7c64: mov r15d,r12d
0x7c67: jmp 0x5ee2
0x7c6c: nop dword ptr [rax+0x0]
0x7cbb: mov rdx,qword ptr [rbp-0x310]
0x7cc2: mov esi,0x4
0x7cc7: mov edi,0x1
0x7ccc: call 0xe5b0
0x7cd1: mov rdx,qword ptr [rbp-0x308]
0x7cd8: mov esi,0x4
0x7cdd: xor edi,edi
0x7cdf: mov r12,rax
0x7ce2: call 0xe5b0
0x7ce7: mov edx,0x5
0x7cec: mov rbx,rax
0x7cef: lea rsi,[rip+0xe31a]
0x7cf6: jmp 0x6f7b
0x7cfb: cmp byte ptr [rbx+0x15],0x0
0x7cff: jne 0x7d19
0x7d01: cmp byte ptr [rbx+0x22],0x0
0x7d05: je 0x80e6
0x7d0b: cmp qword ptr [rbp-0x1e0],0x1
0x7d13: jbe 0x80e6
0x7d19: mov r14,qword ptr [rbp-0x308]
0x7d20: mov byte ptr [rbp-0x350],r9b
0x7d27: mov rdi,r14
0x7d2a: call 0x25b0
0x7d2f: test eax,eax
0x7d31: movzx r9d,byte ptr [rbp-0x350]
0x7d39: je 0x80b3
0x7d3f: call 0x25a0
0x7d44: cmp dword ptr [rax],0x2
0x7d47: mov r15,rax
0x7d4a: movzx r9d,byte ptr [rbp-0x350]
0x7d52: je 0x80b3
0x7d58: mov rsi,r14
0x7d5b: mov edi,0x4
0x7d60: call 0xe6d0
0x7d65: lea rsi,[rip+0xdd4b]
0x7d6c: xor edi,edi
0x7d6e: mov edx,0x5
0x7d73: mov rbx,rax
0x7d76: call 0x2730
0x7d7b: mov esi,dword ptr [r15]
0x7d7e: mov rdx,rax
0x7d81: mov rcx,rbx
0x7d84: xor edi,edi
0x7d86: xor eax,eax
0x7d88: call 0x2b10
0x7d8d: jmp 0x6186
0x7d92: lea rax,[rbp-0xd0]
0x7d99: mov rsi,qword ptr [rbp-0x310]
0x7da0: mov edi,0x1
0x7da5: mov rdx,rax
0x7da8: mov qword ptr [rbp-0x368],rax
0x7daf: call 0x2760
0x7db4: test eax,eax
0x7db6: movzx r8d,byte ptr [rbp-0x350]
0x7dbe: movzx r9d,byte ptr [rbp-0x358]
0x7dc6: jne 0x6d8e
0x7dcc: xor ecx,ecx
0x7dce: mov rax,qword ptr [rbp-0x158]
0x7dd5: cmp qword ptr [rbp-0xc8],rax
0x7ddc: jne 0x7def
0x7dde: mov rax,qword ptr [rbp-0x160]
0x7de5: cmp qword ptr [rbp-0xd0],rax
0x7dec: sete cl
0x7def: mov eax,dword ptr [rbp-0xb8]
0x7df5: mov rdx,qword ptr [rbp-0x368]
0x7dfc: and eax,0xf000
0x7e01: cmp eax,0xa000
0x7e06: jne 0x6ef2
0x7e0c: mov eax,dword ptr [rbp-0x148]
0x7e12: and eax,0xf000
0x7e17: cmp eax,0xa000
0x7e1c: jne 0x6ef2
0x7e22: cmp byte ptr [rbx+0x15],0x0
0x7e26: je 0x6ef2
0x7e2c: jmp 0x6d8e
0x7e31: nop dword ptr [rax+0x0]
0x7e38: movabs rax,0xff000000ff00
0x7e42: test qword ptr [rbx+0x20],rax
0x7e46: jne 0x8400
0x7e4c: mov byte ptr [rbp-0x330],0x0
0x7e53: mov dword ptr [rbp-0x35c],0x0
0x7e5d: jmp 0x7688
0x7e62: mov byte ptr [rbp-0x315],r12b
0x7e69: xor r15d,r15d
0x7e6c: xor r8d,r8d
0x7e6f: mov byte ptr [rbp-0x320],0x0
0x7e76: jmp 0x5ef4
0x7e7b: mov rcx,qword ptr [rbp-0x280]
0x7e82: cmp qword ptr [rax],rcx
0x7e85: jne 0x7883
0x7e8b: jmp 0x76a0
0x7e90: mov eax,dword ptr [rbp-0x1d8]
0x7e96: and eax,0xf000
0x7e9b: cmp eax,0x4000
0x7ea0: je 0x7b06
0x7ea6: test r15d,r15d
0x7ea9: jne 0x78df
0x7eaf: mov rdx,qword ptr [rbp-0x308]
0x7eb6: mov esi,0x3
0x7ebb: xor edi,edi
0x7ebd: call 0xe7d0
0x7ec2: mov rdx,qword ptr [rbp-0x310]
0x7ec9: mov esi,0x3
0x7ece: xor edi,edi
0x7ed0: mov r12,rax
0x7ed3: call 0xe7d0
0x7ed8: mov edx,0x5
0x7edd: mov rbx,rax
0x7ee0: lea rsi,[rip+0xe1c9]
0x7ee7: jmp 0x6f7b
0x7eec: mov edx,dword ptr [rbp-0x35c]
0x7ef2: mov rax,qword ptr [rbp-0x258]
0x7ef9: lea rcx,[rbp-0x2f0]
0x7f00: mov rsi,qword ptr [rbp-0x308]
0x7f07: xor edi,edi
0x7f09: mov byte ptr [rbp-0x328],r8b
0x7f10: not edx
0x7f12: and edx,dword ptr [rbp-0x314]
0x7f18: mov qword ptr [rbp-0x2f0],rax
0x7f1f: call 0x29b0
0x7f24: test eax,eax
0x7f26: mov byte ptr [rbp-0x320],0x0
0x7f2d: movzx r8d,byte ptr [rbp-0x328]
0x7f35: je 0x5ebf
0x7f3b: mov rsi,qword ptr [rbp-0x308]
0x7f42: mov edi,0x4
0x7f47: call 0xe6d0
0x7f4c: mov edx,0x5
0x7f51: mov r13,rax
0x7f54: lea rsi,[rip+0xe7b5]
0x7f5b: jmp 0x6e1f
0x7f60: call 0x103f0
0x7f65: test eax,eax
0x7f67: je 0x6025
0x7f6d: jmp 0x5fca
0x7f72: mov rdi,qword ptr [rbx+0x40]
0x7f76: mov rsi,qword ptr [rbp-0x308]
0x7f7d: mov rdx,r12
0x7f80: call 0xb260
0x7f85: movzx r8d,byte ptr [rbp-0x328]
0x7f8d: jmp 0x5f2d
0x7fe5: mov rsi,qword ptr [rbp-0x308]
0x7fec: mov edi,0x4
0x7ff1: call 0xe6d0
0x7ff6: mov edx,0x5
0x7ffb: mov r13,rax
0x7ffe: lea rsi,[rip+0xe54e]
0x8005: jmp 0x6e1f
0x8042: cmp byte ptr [rbx+0x18],0x0
0x8046: jne 0x6bc4
0x804c: jmp 0x6180
0x80ae: jmp 0x6186
0x80b3: movzx r14d,byte ptr [rbx+0x2e]
0x80b8: test r14b,r14b
0x80bb: jne 0x868c
0x80c1: test r13b,r13b
0x80c4: jne 0x8668
0x80ca: mov qword ptr [rbp-0x350],0x0
0x80d5: mov r14d,0x1
0x80db: mov r15d,0x11
0x80e1: jmp 0x5da9
0x80e6: cmp dword ptr [rbx+0x4],0x2
0x80ea: jne 0x7167
0x80f0: mov eax,dword ptr [rbp-0x268]
0x80f6: and eax,0xf000
0x80fb: cmp eax,0x8000
0x8100: jne 0x7d19
0x8106: jmp 0x7167
0x810b: mov rsi,qword ptr [rbp-0x310]
0x8112: mov edi,0x4
0x8117: call 0xe6d0
0x811c: mov edx,0x5
0x8121: mov r13,rax
0x8124: lea rsi,[rip+0xe4fd]
0x812b: jmp 0x6e1f
0x8130: mov r8d,dword ptr [rbp-0x314]
0x8137: mov rdx,qword ptr [rbp-0x308]
0x813e: mov ecx,0xffffffff
0x8143: mov rdi,qword ptr [rbp-0x310]
0x814a: mov esi,ecx
0x814c: call 0xa460
0x8151: test eax,eax
0x8153: jne 0x612a
0x8159: jmp 0x6186
0x82aa: xor r12d,r12d
0x82ad: jmp 0x6186
0x82b2: mov r12d,dword ptr [rbp-0x35c]
0x82b9: mov rsi,qword ptr [rbp-0x308]
0x82c0: lea rcx,[rbp-0x2f8]
0x82c7: xor edi,edi
0x82c9: mov byte ptr [rbp-0x320],r8b
0x82d0: mov qword ptr [rbp-0x2f8],0x0
0x82db: not r12d
0x82de: and r12d,dword ptr [rbp-0x314]
0x82e5: mov edx,r12d
0x82e8: call 0x29b0
0x82ed: test eax,eax
0x82ef: movzx r8d,byte ptr [rbp-0x320]
0x82f7: je 0x5ebf
0x82fd: mov rdi,qword ptr [rbp-0x308]
0x8304: mov esi,r12d
0x8307: and esi,0xffffefff
0x830d: call 0x2980
0x8312: test eax,eax
0x8314: movzx r8d,byte ptr [rbp-0x320]
0x831c: je 0x5ebf
0x8322: mov rsi,qword ptr [rbp-0x308]
0x8329: mov edi,0x4
0x832e: call 0xe6d0
0x8333: mov edx,0x5
0x8338: mov r13,rax
0x833b: lea rsi,[rip+0xe3b8]
0x8342: jmp 0x6e1f
0x8347: mov rsi,qword ptr [rbp-0x310]
0x834e: mov edi,0x4
0x8353: call 0xe6d0
0x8358: lea rsi,[rip+0xe2e4]
0x835f: mov edx,0x5
0x8364: mov r12,rax
0x8367: xor edi,edi
0x8369: call 0x2730
0x836e: mov qword ptr [rbp-0x328],rax
0x8375: call 0x25a0
0x837a: mov rcx,r12
0x837d: mov rdx,qword ptr [rbp-0x328]
0x8384: mov esi,dword ptr [rax]
0x8386: jmp 0x7a81
0x83ff: nop 
0x8400: movzx esi,byte ptr [rbx+0x25]
0x8404: mov rdi,qword ptr [rbp-0x308]
0x840b: xor edx,edx
0x840d: mov rcx,rbx
0x8410: call 0x55b0
0x8415: test al,al
0x8417: jne 0x7e4c
0x841d: cmp byte ptr [rbx+0x26],0x0
0x8421: jne 0x68d0
0x8427: jmp 0x7e4c
0x842c: mov rdx,qword ptr [rbp-0x1f0]
0x8433: mov rsi,qword ptr [rbp-0x1e8]
0x843a: mov rdi,qword ptr [rbp-0x308]
0x8441: call 0x9ce0
0x8446: mov rax,qword ptr [rbp-0x338]
0x844d: mov byte ptr [rax],0x1
0x8450: jmp 0x7638
0x8495: mov edx,dword ptr [rbx+0x10]
0x8498: mov rdi,qword ptr [rbp-0x308]
0x849f: mov esi,0xffffffff
0x84a4: call 0xa4f0
0x84a9: test eax,eax
0x84ab: jne 0x5c50
0x84b1: jmp 0x6186
0x84b6: lea rsi,[rip+0xdc63]
0x84bd: mov edx,0x5
0x84c2: xor edi,edi
0x84c4: call 0x2730
0x84c9: mov rbx,rax
0x84cc: jmp 0x826a
0x84ed: mov rsi,qword ptr [rbp-0x308]
0x84f4: mov rdi,qword ptr [rbp-0x310]
0x84fb: xor edx,edx
0x84fd: call 0x4cf0
0x8502: jmp 0x7688
0x8507: mov rsi,qword ptr [rbp-0x310]
0x850e: mov edi,0x4
0x8513: call 0xe6d0
0x8518: lea rsi,[rip+0xe1c8]
0x851f: xor edi,edi
0x8521: mov edx,0x5
0x8526: mov r12,rax
0x8529: call 0x2730
0x852e: mov r13,rax
0x8531: call 0x25a0
0x8536: mov esi,dword ptr [rax]
0x8538: xor edi,edi
0x853a: mov rcx,r12
0x853d: mov rdx,r13
0x8540: xor eax,eax
0x8542: call 0x2b10
0x8547: mov rdi,qword ptr [rbp-0x330]
0x854e: call 0x2c80
0x8553: jmp 0x68d0
0x8558: mov rsi,qword ptr [rbp-0x310]
0x855f: mov edi,0x4
0x8564: call 0xe6d0
0x8569: lea rsi,[rip+0xe0a7]
0x8570: mov edx,0x5
0x8575: xor edi,edi
0x8577: mov r12,rax
0x857a: call 0x2730
0x857f: mov r15,rax
0x8582: call 0x25a0
0x8587: mov esi,dword ptr [rax]
0x8589: mov rcx,r12
0x858c: mov rdx,r15
0x858f: xor edi,edi
0x8591: xor eax,eax
0x8593: xor r12d,r12d
0x8596: call 0x2b10
0x859b: jmp 0x7883
0x85a0: mov rsi,qword ptr [rbp-0x250]
0x85a7: mov rdi,qword ptr [rbp-0x310]
0x85ae: call 0xa540
0x85b3: test rax,rax
0x85b6: mov r12,rax
0x85b9: je 0x8e03
0x85bf: movzx ecx,byte ptr [rbx+0x16]
0x85c3: mov rdx,qword ptr [rbp-0x308]
0x85ca: mov r8d,0xffffffff
0x85d0: mov esi,0xffffff9c
0x85d5: mov rdi,rax
0x85d8: call 0xa300
0x85dd: test eax,eax
0x85df: mov dword ptr [rbp-0x320],eax
0x85e5: jle 0x8e28
0x85eb: cmp byte ptr [rbx+0x2d],0x1
0x85ef: jne 0x85fa
0x85f1: test r14b,r14b
0x85f4: je 0x91d9
0x85fa: mov rdi,r12
0x85fd: call 0x2c80
0x8602: mov rsi,qword ptr [rbp-0x308]
0x8609: mov edi,0x4
0x860e: call 0xe6d0
0x8613: lea rsi,[rip+0xdd8e]
0x861a: xor edi,edi
0x861c: mov edx,0x5
0x8621: mov r12,rax
0x8624: call 0x2730
0x8629: mov esi,dword ptr [rbp-0x320]
0x862f: mov rdx,rax
0x8632: mov rcx,r12
0x8635: xor edi,edi
0x8637: xor eax,eax
0x8639: call 0x2b10
0x863e: jmp 0x68d0
0x8643: mov rsi,qword ptr [rbp-0x308]
0x864a: mov edi,0x4
0x864f: call 0xe6d0
0x8654: mov edx,0x5
0x8659: mov r13,rax
0x865c: lea rsi,[rip+0xdf83]
0x8663: jmp 0x6e1f
0x8668: cmp qword ptr [rbx+0x40],0x0
0x866d: mov r14d,r13d
0x8670: mov qword ptr [rbp-0x350],0x0
0x867b: mov r15d,0x11
0x8681: jne 0x5ce2
0x8687: jmp 0x5da9
0x868c: mov rsi,qword ptr [rbp-0x308]
0x8693: mov edi,0x4
0x8698: mov byte ptr [rbp-0x358],r9b
0x869f: mov r15d,0x11
0x86a5: call 0xe6d0
0x86aa: lea rsi,[rip+0xd3fa]
0x86b1: mov r12,rax
0x86b4: mov edx,0x5
0x86b9: xor edi,edi
0x86bb: call 0x2730
0x86c0: mov rdx,r12
0x86c3: mov rsi,rax
0x86c6: mov edi,0x1
0x86cb: xor eax,eax
0x86cd: call 0x2ab0
0x86d2: mov qword ptr [rbp-0x350],0x0
0x86dd: movzx r9d,byte ptr [rbp-0x358]
0x86e5: jmp 0x5cce
0x86ea: mov eax,dword ptr [rbp-0x1d0]
0x86f0: cmp dword ptr [rbp-0x260],eax
0x86f6: jne 0x6042
0x86fc: jmp 0x6087
0x8701: call 0x5910
0x8706: not eax
0x8708: and dword ptr [rbp-0x35c],eax
0x870e: je 0x60bd
0x8714: cmp byte ptr [rbp-0x315],0x1
0x871b: je 0x60ca
0x8721: test r14b,r14b
0x8724: jne 0x9097
0x872a: mov eax,dword ptr [rbp-0x1d8]
0x8730: mov dword ptr [rbp-0x38c],eax
0x8736: not eax
0x8738: test dword ptr [rbp-0x35c],eax
0x873e: jne 0x60ca
0x8744: jmp 0x6186
0x8749: mov eax,dword ptr [rbp-0x314]
0x874f: mov edx,0x1b6
0x8754: mov ebx,0x1ff
0x8759: and eax,0x7000
0x875e: cmp eax,0x4000
0x8763: cmovne ebx,edx
0x8766: call 0x5910
0x876b: not eax
0x876d: mov edx,eax
0x876f: and edx,ebx
0x8771: jmp 0x8498
0x8776: and r12d,0x1ff
0x877d: test r14b,r14b
0x8780: mov dword ptr [rbp-0x3a4],r12d
0x8787: jne 0x8d20
0x878d: cmp byte ptr [rbx+0x23],0x1
0x8791: mov rdi,qword ptr [rbp-0x308]
0x8798: sbb esi,esi
0x879a: xor eax,eax
0x879c: and esi,0xfffffe00
0x87a2: add esi,0x201
0x87a8: call 0xb1f0
0x87ad: mov dword ptr [rbp-0x328],eax
0x87b3: call 0x25a0
0x87b8: mov r12,rax
0x87bb: movabs rax,0xff000000ff00
0x87c5: test qword ptr [rbx+0x20],rax
0x87c9: jne 0x9055
0x87cf: cmp dword ptr [rbp-0x328],0x0
0x87d6: js 0x9062
0x87dc: mov dword ptr [rbp-0x378],0x0
0x87e6: lea rax,[rbp-0xd0]
0x87ed: mov esi,dword ptr [rbp-0x328]
0x87f3: mov edi,0x1
0x87f8: mov rdx,rax
0x87fb: mov qword ptr [rbp-0x368],rax
0x8802: call 0x2a30
0x8807: test eax,eax
0x8809: mov dword ptr [rbp-0x348],eax
0x880f: jne 0x93b6
0x8815: cmp byte ptr [rbp-0x338],0x0
0x881c: je 0x8eef
0x8822: cmp dword ptr [rbx+0x38],0x0
0x8826: jne 0x9684
0x882c: call 0x2be0
0x8831: mov rcx,qword ptr [rbp-0x98]
0x8838: movsxd r12,eax
0x883b: movabs rax,0x1ffffffffffe0000
0x8845: mov r8d,0x200
0x884b: mov edi,dword ptr [rbp-0x320]
0x8851: mov qword ptr [rbp-0x330],r8
0x8858: lea rdx,[rcx-0x20000]
0x885f: cmp rdx,rax
0x8862: mov eax,0x20000
0x8867: lea rdx,[rcx-0x1]
0x886b: cmovbe rax,rcx
0x886f: mov qword ptr [rbp-0x370],rax
0x8876: movabs rax,0x1fffffffffffffff
0x8880: cmp rdx,rax
0x8883: cmova rcx,r8
0x8887: xor edx,edx
0x8889: xor esi,esi
0x888b: mov qword ptr [rbp-0x398],rcx
0x8892: mov ecx,0x2
0x8897: call 0xb1b0
0x889c: mov r9d,dword ptr [rbp-0x148]
0x88a3: mov r8,qword ptr [rbp-0x330]
0x88aa: and r9d,0xf000
0x88b1: cmp r9d,0x8000
0x88b8: je 0x979a
0x88be: mov eax,dword ptr [rbp-0xb8]
0x88c4: and eax,0xf000
0x88c9: cmp eax,0x8000
0x88ce: je 0x972f
0x88d4: mov rdi,qword ptr [rbp-0x128]
0x88db: movabs rax,0x7fffffffffffffff
0x88e5: mov rsi,qword ptr [rbp-0x370]
0x88ec: sub rax,r12
0x88ef: mov dword ptr [rbp-0x380],r9d
0x88f6: mov r8,rax
0x88f9: movabs rax,0x1ffffffffffe0000
0x8903: lea rdx,[rdi-0x20000]
0x890a: mov qword ptr [rbp-0x330],r8
0x8911: cmp rdx,rax
0x8914: mov eax,0x20000
0x8919: mov rdx,r8
0x891c: cmova rdi,rax
0x8920: call 0xad80
0x8925: mov r9d,dword ptr [rbp-0x380]
0x892c: mov rcx,rax
0x892f: mov r8,qword ptr [rbp-0x330]
0x8936: cmp r9d,0x8000
0x893d: je 0x960d
0x8943: mov rax,qword ptr [rbp-0x370]
0x894a: xor edx,edx
0x894c: lea rsi,[rcx+rax*1-0x1]
0x8951: mov rax,rsi
0x8954: div rcx
0x8957: sub rsi,rdx
0x895a: mov qword ptr [rbp-0x370],rsi
0x8961: je 0x9411
0x8967: cmp rsi,r8
0x896a: ja 0x9411
0x8970: mov rax,qword ptr [rbp-0x370]
0x8977: lea rdi,[r12+rax*1]
0x897b: call 0x10cc0
0x8980: lea rcx,[rax+r12*1-0x1]
0x8985: xor edx,edx
0x8987: mov qword ptr [rbp-0x330],rax
0x898e: mov rax,rcx
0x8991: div r12
0x8994: sub rcx,rdx
0x8997: cmp dword ptr [rbp-0x348],0x0
0x899e: mov qword ptr [rbp-0x3b0],rcx
0x89a5: je 0x941d
0x89ab: mov byte ptr [rbp-0x3a5],0x0
0x89b2: mov dword ptr [rbp-0x390],0x1
0x89bc: mov rax,qword ptr [rbp-0x130]
0x89c3: mov edi,dword ptr [rbp-0x320]
0x89c9: xor r12d,r12d
0x89cc: mov qword ptr [rbp-0x380],rax
0x89d3: lea rax,[rbp-0x2f0]
0x89da: mov rsi,rax
0x89dd: mov qword ptr [rbp-0x348],rax
0x89e4: call 0x9db0
0x89e9: lea rax,[rbp-0x2f9]
0x89f0: xor ecx,ecx
0x89f2: mov qword ptr [rbp-0x388],rbx
0x89f9: mov qword ptr [rbp-0x3a0],0x0
0x8a04: mov rbx,rcx
0x8a07: mov dword ptr [rbp-0x360],r13d
0x8a0e: mov qword ptr [rbp-0x3b8],rax
0x8a15: lea rax,[rbp-0x2f8]
0x8a1c: mov qword ptr [rbp-0x3c0],rax
0x8a23: mov rdi,qword ptr [rbp-0x348]
0x8a2a: call 0x9de0
0x8a2f: test al,al
0x8a31: je 0x9631
0x8a37: cmp qword ptr [rbp-0x2d8],0x0
0x8a3f: je 0x950e
0x8a45: mov rdx,rbx
0x8a48: mov rcx,r12
0x8a4b: xor r13d,r13d
0x8a4e: xor eax,eax
0x8a50: jmp 0x8b0d
0x8a55: nop dword ptr [rax]
0x8a58: cmp dword ptr [rbp-0x390],0x3
0x8a5f: mov r8d,0x0
0x8a65: cmove r8,qword ptr [rbp-0x398]
0x8a6d: sub rsp,0x8
0x8a71: mov rcx,qword ptr [rbp-0x370]
0x8a78: mov rdx,qword ptr [rbp-0x3b0]
0x8a7f: mov esi,dword ptr [rbp-0x328]
0x8a85: mov edi,dword ptr [rbp-0x320]
0x8a8b: mov r9d,0x1
0x8a91: push qword ptr [rbp-0x3b8]
0x8a97: push qword ptr [rbp-0x3c0]
0x8a9d: push rbx
0x8a9e: push qword ptr [rbp-0x308]
0x8aa4: push qword ptr [rbp-0x310]
0x8aaa: call 0x50d0
0x8aaf: add rsp,0x30
0x8ab3: test al,al
0x8ab5: je 0x8bb8
0x8abb: mov rax,qword ptr [rbp-0x2f8]
0x8ac2: lea rcx,[r12+rax*1]
0x8ac6: test rax,rax
0x8ac9: mov qword ptr [rbp-0x3a0],rcx
0x8ad0: je 0x8adf
0x8ad2: movzx eax,byte ptr [rbp-0x2f9]
0x8ad9: mov byte ptr [rbp-0x338],al
0x8adf: mov rcx,qword ptr [rbp-0x3a0]
0x8ae6: cmp qword ptr [rbp-0x380],rcx
0x8aed: je 0x9507
0x8af3: lea eax,[r13+0x1]
0x8af7: cmp rax,qword ptr [rbp-0x2d8]
0x8afe: mov rcx,r12
0x8b01: mov rdx,rbx
0x8b04: mov r13,rax
0x8b07: jae 0x950e
0x8b0d: lea rsi,[rax+rax*2]
0x8b11: mov rax,qword ptr [rbp-0x2c8]
0x8b18: lea rax,[rax+rsi*8]
0x8b1c: mov rsi,qword ptr [rbp-0x380]
0x8b23: mov r12,qword ptr [rax]
0x8b26: mov rbx,qword ptr [rax+0x8]
0x8b2a: lea rax,[r12+rbx*1]
0x8b2e: cmp rsi,rax
0x8b31: jge 0x8b40
0x8b33: cmp r12,rsi
0x8b36: cmovg r12,rsi
0x8b3a: sub rsi,r12
0x8b3d: mov rbx,rsi
0x8b40: mov rax,r12
0x8b43: mov byte ptr [rbp-0x338],0x0
0x8b4a: sub rax,rcx
0x8b4d: mov rcx,rax
0x8b50: sub rcx,rdx
0x8b53: je 0x8a58
0x8b59: mov edi,dword ptr [rbp-0x320]
0x8b5f: xor edx,edx
0x8b61: mov rsi,r12
0x8b64: mov qword ptr [rbp-0x3a0],rcx
0x8b6b: call 0x2800
0x8b70: test rax,rax
0x8b73: mov rcx,qword ptr [rbp-0x3a0]
0x8b7a: js 0x99ef
0x8b80: mov eax,dword ptr [rbp-0x390]
0x8b86: cmp eax,0x3
0x8b89: sete dl
0x8b8c: sub eax,0x1
0x8b8f: je 0x92e8
0x8b95: mov rsi,qword ptr [rbp-0x308]
0x8b9c: mov edi,dword ptr [rbp-0x328]
0x8ba2: movzx edx,dl
0x8ba5: call 0x5010
0x8baa: test al,al
0x8bac: mov byte ptr [rbp-0x338],al
0x8bb2: jne 0x8a58
0x8bb8: mov rbx,qword ptr [rbp-0x388]
0x8bbf: mov r13d,dword ptr [rbp-0x360]
0x8bc6: mov rdi,qword ptr [rbp-0x2c8]
0x8bcd: call 0x2c80
0x8bd2: xor r8d,r8d
0x8bd5: mov edi,dword ptr [rbp-0x328]
0x8bdb: mov byte ptr [rbp-0x338],r8b
0x8be2: call 0x2870
0x8be7: test eax,eax
0x8be9: movzx r8d,byte ptr [rbp-0x338]
0x8bf1: jns 0x7a98
0x8bf7: mov rsi,qword ptr [rbp-0x308]
0x8bfe: mov edi,0x4
0x8c03: call 0xe6d0
0x8c08: lea rsi,[rip+0xdad8]
0x8c0f: mov edx,0x5
0x8c14: xor edi,edi
0x8c16: mov r12,rax
0x8c19: call 0x2730
0x8c1e: mov qword ptr [rbp-0x328],rax
0x8c25: call 0x25a0
0x8c2a: mov rdx,qword ptr [rbp-0x328]
0x8c31: mov esi,dword ptr [rax]
0x8c33: mov rcx,r12
0x8c36: xor edi,edi
0x8c38: xor eax,eax
0x8c3a: call 0x2b10
0x8c3f: xor r8d,r8d
0x8c42: jmp 0x7a98
0x8c55: mov byte ptr [rbp-0x315],0x0
0x8c5c: mov r12d,0x1
0x8c62: jmp 0x7867
0x8c67: mov rax,qword ptr [rbp-0xd0]
0x8c6e: cmp qword ptr [rbp-0x160],rax
0x8c75: jne 0x7b64
0x8c7b: jmp 0x683c
0x8c80: mov rdi,qword ptr [rbp-0x308]
0x8c87: call 0x25b0
0x8c8c: test eax,eax
0x8c8e: jne 0x98c6
0x8c94: cmp byte ptr [rbx+0x2e],0x0
0x8c98: je 0x8cd3
0x8c9a: mov rsi,qword ptr [rbp-0x308]
0x8ca1: mov edi,0x4
0x8ca6: call 0xe6d0
0x8cab: lea rsi,[rip+0xcdf9]
0x8cb2: mov r12,rax
0x8cb5: mov edx,0x5
0x8cba: xor edi,edi
0x8cbc: call 0x2730
0x8cc1: mov rdx,r12
0x8cc4: mov rsi,rax
0x8cc7: mov edi,0x1
0x8ccc: xor eax,eax
0x8cce: call 0x2ab0
0x8cd3: movzx r14d,byte ptr [rbx+0x21]
0x8cd8: mov eax,dword ptr [rbp-0x35c]
0x8cde: mov dword ptr [rbp-0x378],eax
0x8ce4: test r14b,r14b
0x8ce7: je 0x8d2c
0x8ce9: mov edx,dword ptr [rbp-0x3a4]
0x8cef: mov rsi,qword ptr [rbp-0x308]
0x8cf6: mov r8,rbx
0x8cf9: mov rdi,qword ptr [rbp-0x310]
0x8d00: mov ecx,0x1
0x8d05: call 0x54e0
0x8d0a: test al,al
0x8d0c: mov r8d,eax
0x8d0f: mov qword ptr [rbp-0x330],0x0
0x8d1a: je 0x7a98
0x8d20: mov eax,dword ptr [rbp-0x35c]
0x8d26: mov dword ptr [rbp-0x378],eax
0x8d2c: mov eax,dword ptr [rbp-0x378]
0x8d32: mov rdi,qword ptr [rbp-0x308]
0x8d39: mov esi,0xc1
0x8d3e: not eax
0x8d40: and eax,dword ptr [rbp-0x3a4]
0x8d46: mov edx,eax
0x8d48: mov dword ptr [rbp-0x330],eax
0x8d4e: xor eax,eax
0x8d50: call 0xb1f0
0x8d55: mov r14d,eax
0x8d58: mov dword ptr [rbp-0x328],eax
0x8d5e: call 0x25a0
0x8d63: mov r8d,dword ptr [rax]
0x8d66: mov r12,rax
0x8d69: mov eax,r14d
0x8d6c: shr eax,0x1f
0x8d6f: cmp r8d,0x11
0x8d73: sete dl
0x8d76: and dl,al
0x8d78: mov r14d,edx
0x8d7b: je 0x9182
0x8d81: cmp byte ptr [rbx+0x18],0x0
0x8d85: mov r8d,0x11
0x8d8b: je 0x9115
0x8d91: mov r9d,0x1
0x8d97: mov rsi,qword ptr [rbp-0x308]
0x8d9e: mov edi,0x4
0x8da3: mov byte ptr [rbp-0x330],r9b
0x8daa: mov dword ptr [rbp-0x328],r8d
0x8db1: call 0xe6d0
0x8db6: lea rsi,[rip+0xd896]
0x8dbd: mov edx,0x5
0x8dc2: xor edi,edi
0x8dc4: mov r12,rax
0x8dc7: call 0x2730
0x8dcc: mov r8d,dword ptr [rbp-0x328]
0x8dd3: mov rdx,rax
0x8dd6: mov rcx,r12
0x8dd9: xor edi,edi
0x8ddb: xor eax,eax
0x8ddd: mov esi,r8d
0x8de0: call 0x2b10
0x8de5: movzx r9d,byte ptr [rbp-0x330]
0x8ded: xor r8d,r8d
0x8df0: mov qword ptr [rbp-0x330],0x0
0x8dfb: mov r14d,r9d
0x8dfe: jmp 0x7a98
0x8e03: mov rsi,qword ptr [rbp-0x310]
0x8e0a: mov edi,0x4
0x8e0f: call 0xe6d0
0x8e14: mov edx,0x5
0x8e19: mov r13,rax
0x8e1c: lea rsi,[rip+0xd90b]
0x8e23: jmp 0x6e1f
0x8e28: mov rdi,r12
0x8e2b: call 0x2c80
0x8e30: movzx r8d,byte ptr [rbx+0x25]
0x8e35: test r8b,r8b
0x8e38: jne 0x6a50
0x8e3e: movzx eax,byte ptr [rbx+0x1d]
0x8e42: test al,al
0x8e44: mov byte ptr [rbp-0x320],al
0x8e4a: jne 0x90c3
0x8e50: movzx r8d,byte ptr [rbp-0x320]
0x8e58: mov byte ptr [rbp-0x320],0x1
0x8e5f: jmp 0x5ebf
0x8eef: mov qword ptr [rbp-0x330],0x0
0x8efa: cmp byte ptr [rbx+0x1f],0x0
0x8efe: jne 0x9306
0x8f04: cmp byte ptr [rbx+0x1d],0x0
0x8f08: je 0x8f64
0x8f0a: mov eax,dword ptr [rbp-0xb4]
0x8f10: cmp dword ptr [rbp-0x264],eax
0x8f16: jne 0x8f26
0x8f18: mov eax,dword ptr [rbp-0xb0]
0x8f1e: cmp dword ptr [rbp-0x260],eax
0x8f24: je 0x8f64
0x8f26: mov r9,qword ptr [rbp-0x368]
0x8f2d: mov edx,dword ptr [rbp-0x328]
0x8f33: lea rcx,[rbp-0x280]
0x8f3a: mov rsi,qword ptr [rbp-0x308]
0x8f41: movzx r8d,r14b
0x8f45: mov rdi,rbx
0x8f48: call 0x5700
0x8f4d: cmp eax,0xffffffff
0x8f50: je 0x8bd2
0x8f56: test eax,eax
0x8f58: jne 0x8f64
0x8f5a: and dword ptr [rbp-0x340],0xfffff1ff
0x8f64: cmp byte ptr [rbx+0x27],0x0
0x8f68: je 0x8f77
0x8f6a: test byte ptr [rbp-0xb8],0x80
0x8f71: je 0x999e
0x8f77: movabs rax,0xff0000000000ff
0x8f81: test qword ptr [rbx+0x18],rax
0x8f85: jne 0x925d
0x8f8b: cmp byte ptr [rbx+0x2b],0x0
0x8f8f: jne 0x9a22
0x8f95: mov r12d,r14d
0x8f98: and r12b,byte ptr [rbx+0x20]
0x8f9c: jne 0x9897
0x8fa2: cmp dword ptr [rbp-0x378],0x0
0x8fa9: mov r8d,0x1
0x8faf: je 0x8bd5
0x8fb5: mov byte ptr [rbp-0x338],r8b
0x8fbc: call 0x5910
0x8fc1: not eax
0x8fc3: test dword ptr [rbp-0x378],eax
0x8fc9: movzx r8d,byte ptr [rbp-0x338]
0x8fd1: je 0x8bd5
0x8fd7: mov edx,dword ptr [rbp-0x3a4]
0x8fdd: mov rsi,qword ptr [rbp-0x308]
0x8fe4: mov edi,dword ptr [rbp-0x328]
0x8fea: call 0x2c90
0x8fef: test eax,eax
0x8ff1: movzx r8d,byte ptr [rbp-0x338]
0x8ff9: je 0x8bd5
0x8fff: mov rsi,qword ptr [rbp-0x308]
0x9006: mov edi,0x4
0x900b: call 0xe6d0
0x9010: lea rsi,[rip+0xd6b2]
0x9017: mov edx,0x5
0x901c: xor edi,edi
0x901e: mov r12,rax
0x9021: call 0x2730
0x9026: mov qword ptr [rbp-0x338],rax
0x902d: call 0x25a0
0x9032: mov rdx,qword ptr [rbp-0x338]
0x9039: mov esi,dword ptr [rax]
0x903b: mov rcx,r12
0x903e: xor edi,edi
0x9040: xor eax,eax
0x9042: call 0x2b10
0x9047: movzx r8d,byte ptr [rbx+0x24]
0x904c: xor r8d,0x1
0x9050: jmp 0x8bd5
0x9055: cmp dword ptr [rbp-0x328],0x0
0x905c: jns 0x92ae
0x9062: movzx r9d,byte ptr [rbx+0x16]
0x9067: test r9b,r9b
0x906a: jne 0x8c80
0x9070: mov r8d,dword ptr [r12]
0x9074: cmp r8d,0x2
0x9078: jne 0x8d97
0x907e: cmp byte ptr [rbx+0x18],0x0
0x9082: jne 0x8d97
0x9088: mov dword ptr [rbp-0x378],0x0
0x9092: jmp 0x8d2c
0x9097: mov rsi,qword ptr [rbp-0x308]
0x909e: lea rdx,[rbp-0x1f0]
0x90a5: mov edi,0x1
0x90aa: call 0x2760
0x90af: test eax,eax
0x90b1: je 0x872a
0x90b7: mov rsi,qword ptr [rbp-0x308]
0x90be: jmp 0x6225
0x90c3: mov edx,dword ptr [rbp-0x260]
0x90c9: mov esi,dword ptr [rbp-0x264]
0x90cf: mov rdi,qword ptr [rbp-0x308]
0x90d6: mov byte ptr [rbp-0x328],r8b
0x90dd: call 0x2a40
0x90e2: test eax,eax
0x90e4: movzx r8d,byte ptr [rbp-0x328]
0x90ec: je 0x5ebf
0x90f2: mov rdi,rbx
0x90f5: call 0x56d0
0x90fa: test al,al
0x90fc: movzx r8d,byte ptr [rbp-0x328]
0x9104: je 0x9904
0x910a: mov byte ptr [rbp-0x320],al
0x9110: jmp 0x5ebf
0x9115: mov rsi,qword ptr [rbp-0x308]
0x911c: lea rdx,[rbp-0xd0]
0x9123: mov edi,0x1
0x9128: mov dword ptr [rbp-0x348],r8d
0x912f: call 0x2760
0x9134: test eax,eax
0x9136: mov r8d,dword ptr [rbp-0x348]
0x913d: jne 0x9182
0x913f: mov eax,dword ptr [rbp-0xb8]
0x9145: and eax,0xf000
0x914a: cmp eax,0xa000
0x914f: jne 0x9182
0x9151: movzx r8d,byte ptr [rbx+0x30]
0x9156: test r8b,r8b
0x9159: je 0x9947
0x915f: mov edx,dword ptr [rbp-0x330]
0x9165: mov rdi,qword ptr [rbp-0x308]
0x916c: mov esi,0x41
0x9171: xor eax,eax
0x9173: call 0xb1f0
0x9178: mov r8d,dword ptr [r12]
0x917c: mov dword ptr [rbp-0x328],eax
0x9182: mov eax,dword ptr [rbp-0x328]
0x9188: shr eax,0x1f
0x918b: cmp r8d,0x15
0x918f: sete dl
0x9192: and dl,al
0x9194: mov r9d,edx
0x9197: je 0x9296
0x919d: mov rsi,qword ptr [rbp-0x308]
0x91a4: mov r8d,0x15
0x91aa: cmp byte ptr [rsi],0x0
0x91ad: mov rdi,rsi
0x91b0: je 0x8d97
0x91b6: xor eax,eax
0x91b8: or rcx,0xffffffffffffffff
0x91bc: xor r8d,r8d
0x91bf: repnz scas al,byte ptr es:[rdi]
0x91c1: mov rax,rcx
0x91c4: not rax
0x91c7: cmp byte ptr [rsi+rax*1-0x2],0x2f
0x91cc: setne r8b
0x91d0: add r8d,0x14
0x91d4: jmp 0x8d97
0x91d9: mov eax,dword ptr [rbp-0x1d8]
0x91df: and eax,0xf000
0x91e4: cmp eax,0xa000
0x91e9: jne 0x85fa
0x91ef: or rcx,0xffffffffffffffff
0x91f3: mov eax,r14d
0x91f6: mov rdi,r12
0x91f9: repnz scas al,byte ptr es:[rdi]
0x91fb: mov rsi,qword ptr [rbp-0x1c0]
0x9202: not rcx
0x9205: lea rax,[rcx-0x1]
0x9209: cmp rsi,rax
0x920c: jne 0x85fa
0x9212: mov rdi,qword ptr [rbp-0x308]
0x9219: call 0xa540
0x921e: test rax,rax
0x9221: je 0x85fa
0x9227: mov rdi,rax
0x922a: mov rsi,r12
0x922d: mov qword ptr [rbp-0x328],rax
0x9234: call 0x2930
0x9239: mov rdx,qword ptr [rbp-0x328]
0x9240: test eax,eax
0x9242: mov rdi,rdx
0x9245: jne 0x9a42
0x924b: call 0x2c80
0x9250: mov rdi,r12
0x9253: call 0x2c80
0x9258: jmp 0x8e30
0x925d: mov r8d,dword ptr [rbp-0x340]
0x9264: mov ecx,dword ptr [rbp-0x328]
0x926a: mov rdx,qword ptr [rbp-0x308]
0x9271: mov esi,dword ptr [rbp-0x320]
0x9277: mov rdi,qword ptr [rbp-0x310]
0x927e: call 0xa460
0x9283: test eax,eax
0x9285: mov r8d,0x1
0x928b: je 0x8bd5
0x9291: jmp 0x9047
0x9296: cmp dword ptr [rbp-0x328],0x0
0x929d: mov r14d,0x1
0x92a3: jns 0x87e6
0x92a9: jmp 0x8d91
0x92ae: movzx esi,byte ptr [rbx+0x25]
0x92b2: mov rdi,qword ptr [rbp-0x308]
0x92b9: xor edx,edx
0x92bb: mov rcx,rbx
0x92be: call 0x55b0
0x92c3: test al,al
0x92c5: mov r8d,eax
0x92c8: jne 0x87dc
0x92ce: cmp byte ptr [rbx+0x26],0x0
0x92d2: mov qword ptr [rbp-0x330],0x0
0x92dd: jne 0x8bd5
0x92e3: jmp 0x87dc
0x92e8: mov edi,dword ptr [rbp-0x328]
0x92ee: mov rsi,rcx
0x92f1: call 0x4c00
0x92f6: test al,al
0x92f8: je 0x9813
0x92fe: xor r8d,r8d
0x9301: jmp 0x8a6d
0x9306: mov rax,qword ptr [rbp-0x238]
0x930d: mov rsi,qword ptr [rbp-0x308]
0x9314: lea rdx,[rbp-0x2a0]
0x931b: mov edi,dword ptr [rbp-0x328]
0x9321: mov qword ptr [rbp-0x2a0],rax
0x9328: mov rax,qword ptr [rbp-0x230]
0x932f: mov qword ptr [rbp-0x298],rax
0x9336: mov rax,qword ptr [rbp-0x228]
0x933d: mov qword ptr [rbp-0x290],rax
0x9344: mov rax,qword ptr [rbp-0x220]
0x934b: mov qword ptr [rbp-0x288],rax
0x9352: call 0xff90
0x9357: test eax,eax
0x9359: je 0x8f04
0x935f: mov rsi,qword ptr [rbp-0x308]
0x9366: mov edi,0x4
0x936b: call 0xe6d0
0x9370: lea rsi,[rip+0xd33a]
0x9377: xor edi,edi
0x9379: mov edx,0x5
0x937e: mov r12,rax
0x9381: call 0x2730
0x9386: mov qword ptr [rbp-0x338],rax
0x938d: call 0x25a0
0x9392: mov rdx,qword ptr [rbp-0x338]
0x9399: mov esi,dword ptr [rax]
0x939b: xor edi,edi
0x939d: xor eax,eax
0x939f: mov rcx,r12
0x93a2: call 0x2b10
0x93a7: cmp byte ptr [rbx+0x24],0x0
0x93ab: je 0x8f04
0x93b1: jmp 0x8bd2
0x93b6: mov rsi,qword ptr [rbp-0x308]
0x93bd: mov edi,0x4
0x93c2: call 0xe6d0
0x93c7: lea rsi,[rip+0xd275]
0x93ce: mov edx,0x5
0x93d3: xor edi,edi
0x93d5: mov r12,rax
0x93d8: call 0x2730
0x93dd: mov qword ptr [rbp-0x330],rax
0x93e4: call 0x25a0
0x93e9: mov rdx,qword ptr [rbp-0x330]
0x93f0: mov esi,dword ptr [rax]
0x93f2: mov rcx,r12
0x93f5: xor edi,edi
0x93f7: xor eax,eax
0x93f9: call 0x2b10
0x93fe: xor r8d,r8d
0x9401: mov qword ptr [rbp-0x330],0x0
0x940c: jmp 0x8bd5
0x9411: mov qword ptr [rbp-0x370],rcx
0x9418: jmp 0x8970
0x941d: xor r9d,r9d
0x9420: cmp dword ptr [rbx+0xc],0x3
0x9424: lea rax,[rbp-0x2f0]
0x942b: mov qword ptr [rbp-0x398],0x0
0x9436: mov qword ptr [rbp-0x348],rax
0x943d: sete r9b
0x9441: lea rax,[rbp-0x2f8]
0x9448: sub rsp,0x8
0x944c: mov r8,qword ptr [rbp-0x398]
0x9453: mov rcx,qword ptr [rbp-0x370]
0x945a: mov rdx,qword ptr [rbp-0x3b0]
0x9461: mov esi,dword ptr [rbp-0x328]
0x9467: mov edi,dword ptr [rbp-0x320]
0x946d: push rax
0x946e: push qword ptr [rbp-0x348]
0x9474: push 0xffffffffffffffff
0x9476: push qword ptr [rbp-0x308]
0x947c: push qword ptr [rbp-0x310]
0x9482: call 0x50d0
0x9487: add rsp,0x30
0x948b: test al,al
0x948d: je 0x8bd2
0x9493: cmp byte ptr [rbp-0x2f8],0x0
0x949a: je 0x8efa
0x94a0: mov rsi,qword ptr [rbp-0x2f0]
0x94a7: mov edi,dword ptr [rbp-0x328]
0x94ad: call 0x27f0
0x94b2: test eax,eax
0x94b4: jns 0x8efa
0x94ba: mov rsi,qword ptr [rbp-0x308]
0x94c1: mov edi,0x4
0x94c6: call 0xe6d0
0x94cb: lea rsi,[rip+0xd1cb]
0x94d2: mov r12,rax
0x94d5: mov edx,0x5
0x94da: xor edi,edi
0x94dc: call 0x2730
0x94e1: mov qword ptr [rbp-0x338],rax
0x94e8: call 0x25a0
0x94ed: mov rdx,qword ptr [rbp-0x338]
0x94f4: mov esi,dword ptr [rax]
0x94f6: mov rcx,r12
0x94f9: xor edi,edi
0x94fb: xor eax,eax
0x94fd: call 0x2b10
0x9502: jmp 0x8bd2
0x9507: mov byte ptr [rbp-0x2cf],0x1
0x950e: mov rdi,qword ptr [rbp-0x2c8]
0x9515: call 0x2c80
0x951a: cmp byte ptr [rbp-0x2cf],0x0
0x9521: mov qword ptr [rbp-0x2c8],0x0
0x952c: mov qword ptr [rbp-0x2d8],0x0
0x9537: je 0x8a23
0x953d: mov rbx,qword ptr [rbp-0x388]
0x9544: mov r13d,dword ptr [rbp-0x360]
0x954b: mov rcx,qword ptr [rbp-0x3a0]
0x9552: cmp qword ptr [rbp-0x380],rcx
0x9559: setg r12b
0x955d: jg 0x956c
0x955f: cmp byte ptr [rbp-0x338],0x0
0x9566: je 0x8efa
0x956c: cmp dword ptr [rbp-0x390],0x1
0x9573: mov rsi,qword ptr [rbp-0x380]
0x957a: je 0x95ee
0x957c: mov edi,dword ptr [rbp-0x328]
0x9582: call 0x27f0
0x9587: test eax,eax
0x9589: jne 0x94ba
0x958f: cmp dword ptr [rbp-0x390],0x3
0x9596: jne 0x8efa
0x959c: test r12b,r12b
0x959f: je 0x8efa
0x95a5: mov rdx,qword ptr [rbp-0x380]
0x95ac: mov rsi,qword ptr [rbp-0x3a0]
0x95b3: mov edi,dword ptr [rbp-0x328]
0x95b9: sub rdx,rsi
0x95bc: call 0x4cb0
0x95c1: test eax,eax
0x95c3: jns 0x8efa
0x95c9: mov rsi,qword ptr [rbp-0x308]
0x95d0: mov edi,0x4
0x95d5: call 0xe6d0
0x95da: mov edx,0x5
0x95df: mov r12,rax
0x95e2: lea rsi,[rip+0xcf02]
0x95e9: jmp 0x94da
0x95ee: sub rsi,qword ptr [rbp-0x3a0]
0x95f5: mov edi,dword ptr [rbp-0x328]
0x95fb: call 0x4c00
0x9600: test al,al
0x9602: jne 0x8efa
0x9608: jmp 0x94ba
0x960d: mov rax,qword ptr [rbp-0x130]
0x9614: cmp qword ptr [rbp-0x370],rax
0x961b: jbe 0x8943
0x9621: add rax,0x1
0x9625: mov qword ptr [rbp-0x370],rax
0x962c: jmp 0x8943
0x9631: cmp byte ptr [rbp-0x2cf],0x0
0x9638: mov rbx,qword ptr [rbp-0x388]
0x963f: mov r13d,dword ptr [rbp-0x360]
0x9646: jne 0x954b
0x964c: cmp byte ptr [rbp-0x2d0],0x0
0x9653: je 0x9870
0x9659: xor r9d,r9d
0x965c: cmp dword ptr [rbx+0xc],0x3
0x9660: mov eax,0x0
0x9665: sete r9b
0x9669: cmp byte ptr [rbp-0x3a5],0x0
0x9670: cmovne rax,qword ptr [rbp-0x398]
0x9678: mov qword ptr [rbp-0x398],rax
0x967f: jmp 0x9441
0x9684: mov edx,dword ptr [rbp-0x320]
0x968a: mov edi,dword ptr [rbp-0x328]
0x9690: xor eax,eax
0x9692: mov esi,0x40049409
0x9697: call 0x2850
0x969c: test eax,eax
0x969e: je 0x8eef
0x96a4: cmp dword ptr [rbx+0x38],0x2
0x96a8: jne 0x882c
0x96ae: mov rdx,qword ptr [rbp-0x310]
0x96b5: mov esi,0x4
0x96ba: mov edi,0x1
0x96bf: call 0xe5b0
0x96c4: mov rdx,qword ptr [rbp-0x308]
0x96cb: mov esi,0x4
0x96d0: xor edi,edi
0x96d2: mov r12,rax
0x96d5: call 0xe5b0
0x96da: lea rsi,[rip+0xcf90]
0x96e1: mov edx,0x5
0x96e6: xor edi,edi
0x96e8: mov qword ptr [rbp-0x338],rax
0x96ef: call 0x2730
0x96f4: mov qword ptr [rbp-0x330],rax
0x96fb: call 0x25a0
0x9700: mov rcx,qword ptr [rbp-0x338]
0x9707: mov esi,dword ptr [rax]
0x9709: mov r8,r12
0x970c: mov rdx,qword ptr [rbp-0x330]
0x9713: xor edi,edi
0x9715: xor eax,eax
0x9717: call 0x2b10
0x971c: xor r8d,r8d
0x971f: mov qword ptr [rbp-0x330],0x0
0x972a: jmp 0x8bd5
0x972f: mov eax,dword ptr [rbx+0xc]
0x9732: cmp eax,0x3
0x9735: je 0x97be
0x973b: cmp eax,0x2
0x973e: jne 0x88d4
0x9744: test byte ptr [rbp-0x348],0x1
0x974b: je 0x88d4
0x9751: mov rax,qword ptr [rbp-0x370]
0x9758: lea rdi,[r12+rax*1]
0x975c: call 0x10cc0
0x9761: lea rcx,[rax+r12*1-0x1]
0x9766: mov qword ptr [rbp-0x330],rax
0x976d: xor edx,edx
0x976f: mov rax,rcx
0x9772: div r12
0x9775: sub rcx,rdx
0x9778: mov qword ptr [rbp-0x3b0],rcx
0x977f: mov eax,dword ptr [rbx+0xc]
0x9782: mov dword ptr [rbp-0x390],eax
0x9788: movzx eax,byte ptr [rbp-0x338]
0x978f: mov byte ptr [rbp-0x3a5],al
0x9795: jmp 0x89bc
0x979a: mov rax,qword ptr [rbp-0x130]
0x97a1: cqo 
0x97a3: idiv r8
0x97a6: cmp qword ptr [rbp-0x120],rax
0x97ad: setl al
0x97b0: movzx eax,al
0x97b3: mov dword ptr [rbp-0x348],eax
0x97b9: jmp 0x88be
0x97be: mov rax,qword ptr [rbp-0x370]
0x97c5: lea rdi,[r12+rax*1]
0x97c9: call 0x10cc0
0x97ce: lea rcx,[rax+r12*1-0x1]
0x97d3: xor edx,edx
0x97d5: mov qword ptr [rbp-0x330],rax
0x97dc: mov rax,rcx
0x97df: div r12
0x97e2: sub rcx,rdx
0x97e5: cmp dword ptr [rbp-0x348],0x0
0x97ec: mov qword ptr [rbp-0x3b0],rcx
0x97f3: jne 0x977f
0x97f5: xor r9d,r9d
0x97f8: cmp dword ptr [rbx+0xc],0x3
0x97fc: lea rax,[rbp-0x2f0]
0x9803: mov qword ptr [rbp-0x348],rax
0x980a: sete r9b
0x980e: jmp 0x9441
0x9813: mov rdx,qword ptr [rbp-0x308]
0x981a: mov esi,0x3
0x981f: xor edi,edi
0x9821: mov rbx,qword ptr [rbp-0x388]
0x9828: mov r13d,dword ptr [rbp-0x360]
0x982f: call 0xe7d0
0x9834: lea rsi,[rip+0xce51]
0x983b: mov r12,rax
0x983e: mov edx,0x5
0x9843: xor edi,edi
0x9845: call 0x2730
0x984a: mov qword ptr [rbp-0x338],rax
0x9851: call 0x25a0
0x9856: mov rdx,qword ptr [rbp-0x338]
0x985d: mov esi,dword ptr [rax]
0x985f: mov rcx,r12
0x9862: xor edi,edi
0x9864: xor eax,eax
0x9866: call 0x2b10
0x986b: jmp 0x8bc6
0x9870: mov rdx,qword ptr [rbp-0x310]
0x9877: mov esi,0x3
0x987c: xor edi,edi
0x987e: call 0xe7d0
0x9883: mov edx,0x5
0x9888: mov r12,rax
0x988b: lea rsi,[rip+0xca8e]
0x9892: jmp 0x94da
0x9897: call 0x5910
0x989c: mov esi,dword ptr [rbp-0x328]
0x98a2: not eax
0x98a4: mov rdi,qword ptr [rbp-0x308]
0x98ab: mov edx,eax
0x98ad: mov r14d,r12d
0x98b0: and edx,0x1b6
0x98b6: call 0xa4f0
0x98bb: test eax,eax
0x98bd: sete r8b
0x98c1: jmp 0x8bd5
0x98c6: mov rsi,qword ptr [rbp-0x308]
0x98cd: mov edi,0x4
0x98d2: call 0xe6d0
0x98d7: lea rsi,[rip+0xc1d9]
0x98de: mov edx,0x5
0x98e3: xor edi,edi
0x98e5: mov qword ptr [rbp-0x328],rax
0x98ec: call 0x2730
0x98f1: mov rcx,qword ptr [rbp-0x328]
0x98f8: mov rdx,rax
0x98fb: mov esi,dword ptr [r12]
0x98ff: jmp 0x7a81
0x9904: lea rsi,[rip+0xc67d]
0x990b: xor edi,edi
0x990d: mov edx,0x5
0x9912: call 0x2730
0x9917: mov r12,rax
0x991a: call 0x25a0
0x991f: mov rcx,qword ptr [rbp-0x308]
0x9926: mov esi,dword ptr [rax]
0x9928: xor edi,edi
0x992a: xor eax,eax
0x992c: mov rdx,r12
0x992f: call 0x2b10
0x9934: movzx r8d,byte ptr [rbx+0x24]
0x9939: test r8b,r8b
0x993c: jne 0x68d0
0x9942: jmp 0x5ebf
0x9947: mov rsi,qword ptr [rbp-0x308]
0x994e: mov edi,0x4
0x9953: mov byte ptr [rbp-0x328],r8b
0x995a: call 0xe6d0
0x995f: lea rsi,[rip+0xc992]
0x9966: mov r12,rax
0x9969: mov edx,0x5
0x996e: xor edi,edi
0x9970: call 0x2730
0x9975: mov rcx,r12
0x9978: mov rdx,rax
0x997b: xor esi,esi
0x997d: xor edi,edi
0x997f: xor eax,eax
0x9981: call 0x2b10
0x9986: mov qword ptr [rbp-0x330],0x0
0x9991: movzx r8d,byte ptr [rbp-0x328]
0x9999: jmp 0x7a98
0x999e: call 0x2840
0x99a3: test eax,eax
0x99a5: je 0x8f77
0x99ab: mov rsi,qword ptr [rbp-0x308]
0x99b2: mov edi,dword ptr [rbp-0x328]
0x99b8: mov edx,0x180
0x99bd: call 0x2c90
0x99c2: test eax,eax
0x99c4: jne 0x8f77
0x99ca: mov edx,dword ptr [rbp-0x378]
0x99d0: mov rsi,qword ptr [rbp-0x308]
0x99d7: mov edi,dword ptr [rbp-0x328]
0x99dd: not edx
0x99df: and edx,dword ptr [rbp-0x3a4]
0x99e5: call 0x2c90
0x99ea: jmp 0x8f77
0x99ef: mov rsi,qword ptr [rbp-0x310]
0x99f6: mov edi,0x4
0x99fb: mov rbx,qword ptr [rbp-0x388]
0x9a02: mov r13d,dword ptr [rbp-0x360]
0x9a09: call 0xe6d0
0x9a0e: mov edx,0x5
0x9a13: mov r12,rax
0x9a16: lea rsi,[rip+0xcabe]
0x9a1d: jmp 0x9843
0x9a22: mov edx,dword ptr [rbx+0x10]
0x9a25: mov esi,dword ptr [rbp-0x328]
0x9a2b: mov rdi,qword ptr [rbp-0x308]
0x9a32: call 0xa4f0
0x9a37: test eax,eax
0x9a39: sete r8b
0x9a3d: jmp 0x8bd5
0x9a42: call 0x2c80
0x9a47: jmp 0x85fa
0x9a4c: nop dword ptr [rax+0x0]
0x9aa0: cmp r10d,0x2
0x9aa4: je 0x9b15
0x9ad5: add rsp,0x20
0x9ad9: mov rsi,qword ptr [rsp+0x8]
0x9ade: xor rsi,qword ptr fs:0x28
0x9ae7: jne 0x9b34
0x9ae9: add rsp,0x18
0x9aed: ret 
0x9aee: xchg ax,ax
0x9af0: cmp byte ptr [rcx+0x2c],0x0
0x9af4: je 0x9a9b
0x9af6: lea rcx,[rip+0xccbb]
0x9afd: lea rsi,[rip+0xcc89]
0x9b04: lea rdi,[rip+0xc935]
0x9b0b: mov edx,0xb8a
0x9b10: call 0x2820
0x9b15: lea rcx,[rip+0xcc9c]
0x9b1c: lea rsi,[rip+0xcc6a]
0x9b23: lea rdi,[rip+0xc93e]
0x9b2a: mov edx,0xb8d
0x9b2f: call 0x2820
0x9b34: call 0x2780
0x9b39: lea rcx,[rip+0xcc78]
0x9b40: lea rsi,[rip+0xcc46]
0x9b47: lea rdi,[rip+0xc8ca]
0x9b4e: mov edx,0xb89
0x9b53: call 0x2820
0x9b58: lea rcx,[rip+0xcc59]
0x9b5f: lea rsi,[rip+0xcc27]
0x9b66: lea rdi,[rip+0xc883]
0x9b6d: mov edx,0xb88
0x9b72: call 0x2820
0x9b96: lea rcx,[rip+0xcc1b]
0x9b9d: lea rsi,[rip+0xcbe9]
0x9ba4: lea rdi,[rip+0xcbff]
0x9bab: mov edx,0xb86
0x9bb0: call 0x2820
0x9bb5: nop word ptr cs:[rax+rax*1+0x0]
0x9bbf: nop 
0x9bcc: nop dword ptr [rax+0x0]
0x9bdc: nop dword ptr [rax+0x0]
0x9bec: nop dword ptr [rax+0x0]
0x9bf0: push rbx
0x9bf1: mov rbx,rdi
0x9bf4: mov rdi,qword ptr [rdi+0x10]
0x9bf8: call 0x2c80
0x9bfd: mov rdi,rbx
0x9c00: pop rbx
0x9c01: jmp 0x2c80
0x9c06: nop word ptr cs:[rax+rax*1+0x0]
0x9c10: push rbx
0x9c11: sub rsp,0x20
0x9c15: mov qword ptr [rsp],rdi
0x9c19: mov rdi,qword ptr [rip+0x212938]
0x9c20: mov qword ptr [rsp+0x8],rsi
0x9c25: mov rsi,rsp
0x9c28: mov qword ptr [rsp+0x10],0x0
0x9c31: mov rax,qword ptr fs:0x28
0x9c3a: mov qword ptr [rsp+0x18],rax
0x9c3f: xor eax,eax
0x9c41: call 0xc850
0x9c46: test rax,rax
0x9c49: je 0x9c5f
0x9c4b: mov rdi,qword ptr [rax+0x10]
0x9c4f: mov rbx,rax
0x9c52: call 0x2c80
0x9c57: mov rdi,rbx
0x9c5a: call 0x2c80
0x9c5f: mov rax,qword ptr [rsp+0x18]
0x9c64: xor rax,qword ptr fs:0x28
0x9c6d: jne 0x9c75
0x9c6f: add rsp,0x20
0x9c73: pop rbx
0x9c74: ret 
0x9c75: call 0x2780
0x9c7a: nop word ptr [rax+rax*1+0x0]
0x9cca: nop word ptr [rax+rax*1+0x0]
0x9cd4: call 0x2780
0x9cd9: nop dword ptr [rax+0x0]
0x9d4f: nop 
0x9d59: nop dword ptr [rax+0x0]
0x9d9b: nop dword ptr [rax+rax*1+0x0]
0x9da0: mov rdi,qword ptr [rip+0x2127b1]
0x9da7: jmp 0xc240
0x9dac: nop dword ptr [rax+0x0]
0x9db0: mov dword ptr [rsi],edi
0x9db2: mov qword ptr [rsi+0x18],0x0
0x9dba: mov qword ptr [rsi+0x28],0x0
0x9dc2: mov qword ptr [rsi+0x8],0x0
0x9dca: mov byte ptr [rsi+0x20],0x0
0x9dce: mov byte ptr [rsi+0x21],0x0
0x9dd2: mov dword ptr [rsi+0x10],0x1
0x9dd9: ret 
0x9dda: nop word ptr [rax+rax*1+0x0]
0x9de0: push r15
0x9de2: push r14
0x9de4: xor r15d,r15d
0x9de7: push r13
0x9de9: push r12
0x9deb: mov r14,rdi
0x9dee: push rbp
0x9def: push rbx
0x9df0: movabs r13,0x7fffffffffffffff
0x9dfa: sub rsp,0x1018
0x9e01: mov rbx,qword ptr [rdi+0x28]
0x9e05: mov rdx,qword ptr [rdi+0x8]
0x9e09: mov rbp,rsp
0x9e0c: mov rax,qword ptr fs:0x28
0x9e15: mov qword ptr [rsp+0x1008],rax
0x9e1d: xor eax,eax
0x9e1f: lea r12,[rbp+0x20]
0x9e23: xor eax,eax
0x9e25: mov ecx,0x200
0x9e2a: mov rdi,rbp
0x9e2d: rep stos qword ptr es:[rdi],rax
0x9e30: mov eax,dword ptr [r14+0x10]
0x9e34: mov edi,dword ptr [r14]
0x9e37: mov esi,0xc020660b
0x9e3c: mov qword ptr [rsp],rdx
0x9e40: not rdx
0x9e43: mov dword ptr [rsp+0x18],0x48
0x9e4b: mov qword ptr [rsp+0x8],rdx
0x9e50: mov rdx,rbp
0x9e53: mov dword ptr [rsp+0x10],eax
0x9e57: xor eax,eax
0x9e59: call 0x2850
0x9e5e: test eax,eax
0x9e60: js 0x9f30
0x9e66: mov eax,dword ptr [rsp+0x14]
0x9e6a: test eax,eax
0x9e6c: je 0xa0a8
0x9e72: mov rcx,qword ptr [r14+0x18]
0x9e76: mov rdx,rax
0x9e79: not rdx
0x9e7c: cmp rcx,rdx
0x9e7f: ja 0xa0ba
0x9e85: mov rdi,qword ptr [r14+0x28]
0x9e89: mov edx,0x18
0x9e8e: add rcx,rax
0x9e91: mov rax,rdx
0x9e94: xor esi,esi
0x9e96: mov qword ptr [r14+0x18],rcx
0x9e9a: sub rbx,rdi
0x9e9d: mul rcx
0x9ea0: jo 0xa0d9
0x9ea6: test rax,rax
0x9ea9: js 0xa0e3
0x9eaf: test rsi,rsi
0x9eb2: jne 0xa0e3
0x9eb8: lea rsi,[rcx+rcx*2]
0x9ebc: shl rsi,0x3
0x9ec0: call 0x10d20
0x9ec5: mov r8d,dword ptr [rsp+0x14]
0x9eca: add rbx,rax
0x9ecd: mov qword ptr [r14+0x28],rax
0x9ed1: test r8d,r8d
0x9ed4: je 0xa010
0x9eda: mov rax,qword ptr [rsp+0x30]
0x9edf: mov rdx,qword ptr [rsp+0x20]
0x9ee4: mov rcx,r13
0x9ee7: sub rcx,rax
0x9eea: cmp rdx,rcx
0x9eed: ja 0x9fca
0x9ef3: xor ecx,ecx
0x9ef5: mov rsi,r12
0x9ef8: test r15d,r15d
0x9efb: je 0x9f70
0x9efd: mov r9d,dword ptr [rsi+0x28]
0x9f01: mov r10,qword ptr [rbx+0x8]
0x9f05: mov rdi,qword ptr [rbx]
0x9f08: mov r11d,r9d
0x9f0b: add rdi,r10
0x9f0e: and r11d,0xfffffffe
0x9f12: cmp dword ptr [rbx+0x10],r11d
0x9f16: je 0x9ff0
0x9f1c: cmp rdi,rdx
0x9f1f: jbe 0x9f7d
0x9f21: mov r10,rdi
0x9f24: sub r10,rdx
0x9f27: cmp r10,rax
0x9f2a: jae 0xa048
0x9f30: xor eax,eax
0x9f32: cmp qword ptr [r14+0x8],0x0
0x9f37: jne 0x9f40
0x9f39: mov byte ptr [r14+0x20],0x1
0x9f3e: xor eax,eax
0x9f40: mov rbx,qword ptr [rsp+0x1008]
0x9f48: xor rbx,qword ptr fs:0x28
0x9f51: jne 0xa0e8
0x9f57: add rsp,0x1018
0x9f5e: pop rbx
0x9f5f: pop rbp
0x9f60: pop r12
0x9f62: pop r13
0x9f64: pop r14
0x9f66: pop r15
0x9f68: ret 
0x9f69: nop dword ptr [rax+0x0]
0x9f70: mov rdi,qword ptr [r14+0x8]
0x9f74: cmp rdi,rdx
0x9f77: ja 0x9f21
0x9f79: mov r9d,dword ptr [rsi+0x28]
0x9f7d: mov esi,r15d
0x9f80: add r15d,0x1
0x9f84: lea rdi,[rsi+rsi*2]
0x9f88: mov rsi,qword ptr [r14+0x28]
0x9f8c: lea rbx,[rsi+rdi*8]
0x9f90: mov qword ptr [rbx],rdx
0x9f93: mov qword ptr [rbx+0x8],rax
0x9f97: mov dword ptr [rbx+0x10],r9d
0x9f9b: add ecx,0x1
0x9f9e: cmp ecx,r8d
0x9fa1: jae 0xa010
0x9fa3: mov edx,ecx
0x9fa5: mov rdi,r13
0x9fa8: lea rax,[rdx*8+0x0]
0x9fb0: sub rax,rdx
0x9fb3: lea rsi,[r12+rax*8]
0x9fb7: mov rax,qword ptr [rsi+0x10]
0x9fbb: mov rdx,qword ptr [rsi]
0x9fbe: sub rdi,rax
0x9fc1: cmp rdx,rdi
0x9fc4: jbe 0x9ef8
0x9fca: lea rcx,[rip+0xc89f]
0x9fd1: lea rsi,[rip+0xc7f0]
0x9fd8: lea rdi,[rip+0xc849]
0x9fdf: mov edx,0x8d
0x9fe4: call 0x2820
0x9fe9: nop dword ptr [rax+0x0]
0x9ff0: cmp rdi,rdx
0x9ff3: jne 0x9f1c
0x9ff9: add ecx,0x1
0x9ffc: add rax,r10
0x9fff: mov dword ptr [rbx+0x10],r9d
0xa003: cmp ecx,r8d
0xa006: mov qword ptr [rbx+0x8],rax
0xa00a: jb 0x9fa3
0xa00c: nop dword ptr [rax+0x0]
0xa010: test byte ptr [rbx+0x10],0x1
0xa014: jne 0xa060
0xa016: cmp r15d,0x48
0xa01a: movzx eax,byte ptr [r14+0x21]
0xa01f: jbe 0xa080
0xa021: test al,al
0xa023: jne 0xa065
0xa025: lea eax,[r15-0x1]
0xa029: mov rdx,qword ptr [r14+0x28]
0xa02d: lea rcx,[rax+rax*2]
0xa031: mov qword ptr [r14+0x18],rax
0xa035: mov rax,qword ptr [rdx+rcx*8-0x18]
0xa03a: add rax,qword ptr [rdx+rcx*8-0x10]
0xa03f: mov qword ptr [r14+0x8],rax
0xa043: jmp 0xa06c
0xa045: nop dword ptr [rax]
0xa048: sub rax,r10
0xa04b: mov qword ptr [rsi],rdi
0xa04e: sub ecx,0x1
0xa051: mov qword ptr [rsi+0x10],rax
0xa055: jmp 0x9f9b
0xa05a: nop word ptr [rax+rax*1+0x0]
0xa060: mov byte ptr [r14+0x21],0x1
0xa065: mov eax,r15d
0xa068: mov qword ptr [r14+0x18],rax
0xa06c: mov eax,0x1
0xa071: jmp 0x9f40
0xa076: nop word ptr cs:[rax+rax*1+0x0]
0xa080: mov ecx,r15d
0xa083: test al,al
0xa085: mov qword ptr [r14+0x18],rcx
0xa089: jne 0xa06c
0xa08b: mov rdx,qword ptr [rbx+0x8]
0xa08f: add rdx,qword ptr [rbx]
0xa092: cmp r15d,0x47
0xa096: mov qword ptr [r14+0x8],rdx
0xa09a: jbe 0x9e23
0xa0a0: jmp 0xa06c
0xa0a2: nop word ptr [rax+rax*1+0x0]
0xa0a8: cmp qword ptr [r14+0x8],0x0
0xa0ad: mov byte ptr [r14+0x21],0x1
0xa0b2: setne al
0xa0b5: jmp 0x9f40
0xa0ba: lea rcx,[rip+0xc7af]
0xa0c1: lea rsi,[rip+0xc700]
0xa0c8: lea rdi,[rip+0xc721]
0xa0cf: mov edx,0x7e
0xa0d4: call 0x2820
0xa0d9: mov esi,0x1
0xa0de: jmp 0x9ea6
0xa0e3: call 0x10f10
0xa0e8: call 0x2780
0xa0ed: nop dword ptr [rax]
0xa108: nop dword ptr [rax+rax*1+0x0]
0xa168: nop dword ptr [rax+rax*1+0x0]
0xa170: mov rax,rsi
0xa173: mov rdx,rdi
0xa176: mov esi,dword ptr [rsi+0x8]
0xa179: mov rdi,qword ptr [rax]
0xa17c: jmp 0x2c40
0xa181: nop dword ptr [rax+rax*1+0x0]
0xa186: nop word ptr cs:[rax+rax*1+0x0]
0xa27b: nop dword ptr [rax+rax*1+0x0]
0xa2a2: nop word ptr [rax+rax*1+0x0]
0xa2ec: call 0x2780
0xa2f1: nop dword ptr [rax+rax*1+0x0]
0xa2f6: nop word ptr cs:[rax+rax*1+0x0]
0xa300: push r14
0xa302: push r13
0xa304: push r12
0xa306: push rbp
0xa307: mov r12,rdi
0xa30a: push rbx
0xa30b: mov ebp,esi
0xa30d: mov rbx,rdx
0xa310: sub rsp,0x130
0xa317: mov rax,qword ptr fs:0x28
0xa320: mov qword ptr [rsp+0x128],rax
0xa328: xor eax,eax
0xa32a: test r8d,r8d
0xa32d: js 0xa3d8
0xa333: cmp cl,0x1
0xa336: jne 0xa3a8
0xa338: cmp r8d,0x11
0xa33c: jne 0xa3a8
0xa33e: lea r14,[rsp+0x20]
0xa343: mov rdi,rbx
0xa346: mov rsi,r14
0xa349: call 0xa110
0xa34e: test rax,rax
0xa351: mov r13,rax
0xa354: je 0xa440
0xa35a: lea rdx,[rsp+0x10]
0xa35f: lea rcx,[rip+0xfffffffffffffe0a]
0xa366: xor esi,esi
0xa368: mov r8d,0x6
0xa36e: mov rdi,rax
0xa371: mov qword ptr [rsp+0x10],r12
0xa376: mov dword ptr [rsp+0x18],ebp
0xa37a: call 0xf3c0
0xa37f: test eax,eax
0xa381: je 0xa400
0xa383: call 0x25a0
0xa388: mov r8d,dword ptr [rax]
0xa38b: cmp r13,r14
0xa38e: je 0xa3a8
0xa390: mov rdi,r13
0xa393: mov dword ptr [rsp+0xc],r8d
0xa398: call 0x2c80
0xa39d: mov r8d,dword ptr [rsp+0xc]
0xa3a2: nop word ptr [rax+rax*1+0x0]
0xa3a8: mov rbx,qword ptr [rsp+0x128]
0xa3b0: xor rbx,qword ptr fs:0x28
0xa3b9: mov eax,r8d
0xa3bc: jne 0xa44d
0xa3c2: add rsp,0x130
0xa3c9: pop rbx
0xa3ca: pop rbp
0xa3cb: pop r12
0xa3cd: pop r13
0xa3cf: pop r14
0xa3d1: ret 
0xa3d2: nop word ptr [rax+rax*1+0x0]
0xa3d8: mov dword ptr [rsp+0xc],ecx
0xa3dc: call 0x2c40
0xa3e1: test eax,eax
0xa3e3: mov r8d,eax
0xa3e6: je 0xa3a8
0xa3e8: call 0x25a0
0xa3ed: mov ecx,dword ptr [rsp+0xc]
0xa3f1: mov r8d,dword ptr [rax]
0xa3f4: jmp 0xa333
0xa3f9: nop dword ptr [rax+0x0]
0xa400: mov rcx,rbx
0xa403: mov edx,ebp
0xa405: mov rsi,r13
0xa408: mov edi,ebp
0xa40a: call 0x2bd0
0xa40f: test eax,eax
0xa411: mov r8d,0xffffffff
0xa417: je 0xa38b
0xa41d: call 0x25a0
0xa422: mov r8d,dword ptr [rax]
0xa425: xor edx,edx
0xa427: mov rsi,r13
0xa42a: mov edi,ebp
0xa42c: mov dword ptr [rsp+0xc],r8d
0xa431: call 0x2620
0xa436: mov r8d,dword ptr [rsp+0xc]
0xa43b: jmp 0xa38b
0xa440: call 0x25a0
0xa445: mov r8d,dword ptr [rax]
0xa448: jmp 0xa3a8
0xa44d: call 0x2780
0xa452: nop word ptr cs:[rax+rax*1+0x0]
0xa45c: nop dword ptr [rax+0x0]
0xa460: push r12
0xa462: push rbp
0xa463: mov r12,rdi
0xa466: push rbx
0xa467: mov rbp,rdx
0xa46a: call 0xcc50
0xa46f: cmp eax,0xfffffffe
0xa472: mov ebx,eax
0xa474: je 0xa4c0
0xa476: cmp eax,0xffffffff
0xa479: jne 0xa4b2
0xa47b: mov rdi,rbp
0xa47e: call 0xe9a0
0xa483: lea rsi,[rip+0xc23f]
0xa48a: mov edx,0x5
0xa48f: xor edi,edi
0xa491: mov r12,rax
0xa494: call 0x2730
0xa499: mov rbp,rax
0xa49c: call 0x25a0
0xa4a1: mov esi,dword ptr [rax]
0xa4a3: mov rcx,r12
0xa4a6: mov rdx,rbp
0xa4a9: xor edi,edi
0xa4ab: xor eax,eax
0xa4ad: call 0x2b10
0xa4b2: mov eax,ebx
0xa4b4: pop rbx
0xa4b5: pop rbp
0xa4b6: pop r12
0xa4b8: ret 
0xa4b9: nop dword ptr [rax+0x0]
0xa4c0: mov rdi,r12
0xa4c3: call 0xe9a0
0xa4c8: mov rbp,rax
0xa4cb: call 0x25a0
0xa4d0: mov esi,dword ptr [rax]
0xa4d2: lea rdx,[rip+0xcf6e]
0xa4d9: mov rcx,rbp
0xa4dc: xor eax,eax
0xa4de: xor edi,edi
0xa4e0: call 0x2b10
0xa4e5: mov eax,ebx
0xa4e7: pop rbx
0xa4e8: pop rbp
0xa4e9: pop r12
0xa4eb: ret 
0xa4ec: nop dword ptr [rax+0x0]
0xa4f0: push r12
0xa4f2: push rbp
0xa4f3: mov rbp,rdi
0xa4f6: push rbx
0xa4f7: call 0xccd0
0xa4fc: test eax,eax
0xa4fe: mov ebx,eax
0xa500: je 0xa539
0xa502: mov rdi,rbp
0xa505: call 0xe9a0
0xa50a: lea rsi,[rip+0xc0d5]
0xa511: mov edx,0x5
0xa516: xor edi,edi
0xa518: mov r12,rax
0xa51b: call 0x2730
0xa520: mov rbp,rax
0xa523: call 0x25a0
0xa528: mov esi,dword ptr [rax]
0xa52a: mov rcx,r12
0xa52d: mov rdx,rbp
0xa530: xor edi,edi
0xa532: xor eax,eax
0xa534: call 0x2b10
0xa539: mov eax,ebx
0xa53b: pop rbx
0xa53c: pop rbp
0xa53d: pop r12
0xa53f: ret 
0xa540: push r15
0xa542: push r14
0xa544: mov eax,0x401
0xa549: push r13
0xa54b: push r12
0xa54d: mov r13,rdi
0xa550: push rbp
0xa551: push rbx
0xa552: lea rbx,[rsi+0x1]
0xa556: movabs r14,0x3fffffffffffffff
0xa560: movabs r15,0x7ffffffffffffffe
0xa56a: sub rsp,0x8
0xa56e: cmp rsi,0x401
0xa575: cmovae rbx,rax
0xa579: nop dword ptr [rax+0x0]
0xa580: mov rdi,rbx
0xa583: call 0x2a00
0xa588: test rax,rax
0xa58b: mov rbp,rax
0xa58e: je 0xa5cb
0xa590: mov rdx,rbx
0xa593: mov rsi,rax
0xa596: mov rdi,r13
0xa599: call 0x2660
0xa59e: test rax,rax
0xa5a1: mov r12,rax
0xa5a4: js 0xa5f8
0xa5a6: cmp rbx,r12
0xa5a9: ja 0xa610
0xa5ab: mov rdi,rbp
0xa5ae: call 0x2c80
0xa5b3: cmp rbx,r14
0xa5b6: ja 0xa5e0
0xa5b8: add rbx,rbx
0xa5bb: mov rdi,rbx
0xa5be: call 0x2a00
0xa5c3: test rax,rax
0xa5c6: mov rbp,rax
0xa5c9: jne 0xa590
0xa5cb: add rsp,0x8
0xa5cf: mov rax,rbp
0xa5d2: pop rbx
0xa5d3: pop rbp
0xa5d4: pop r12
0xa5d6: pop r13
0xa5d8: pop r14
0xa5da: pop r15
0xa5dc: ret 
0xa5dd: nop dword ptr [rax]
0xa5e0: cmp rbx,r15
0xa5e3: ja 0xa620
0xa5e5: movabs rbx,0x7fffffffffffffff
0xa5ef: jmp 0xa580
0xa5f1: nop dword ptr [rax+0x0]
0xa5f8: call 0x25a0
0xa5fd: cmp dword ptr [rax],0x22
0xa600: je 0xa5a6
0xa602: mov rdi,rbp
0xa605: xor ebp,ebp
0xa607: call 0x2c80
0xa60c: jmp 0xa5cb
0xa60e: xchg ax,ax
0xa610: mov byte ptr [rbp+r12*1+0x0],0x0
0xa616: jmp 0xa5cb
0xa618: nop dword ptr [rax+rax*1+0x0]
0xa620: call 0x25a0
0xa625: xor ebp,ebp
0xa627: mov dword ptr [rax],0xc
0xa62d: jmp 0xa5cb
0xa62f: nop 
0xa64e: xchg ax,ax
0xa65f: nop 
0xa676: nop word ptr cs:[rax+rax*1+0x0]
0xaa39: nop dword ptr [rax+0x0]
0xaa5f: nop 
0xab1c: nop dword ptr [rax+0x0]
0xab66: nop word ptr cs:[rax+rax*1+0x0]
0xab7a: nop word ptr [rax+rax*1+0x0]
0xab9b: nop dword ptr [rax+rax*1+0x0]
0xabd4: nop dword ptr [rax+0x0]
0xac64: call 0xa630
0xac69: mov rdi,qword ptr [rip+0x2118f0]
0xac70: jmp 0xa6e3
0xac8d: call 0x2780
0xac92: nop word ptr cs:[rax+rax*1+0x0]
0xac9c: nop dword ptr [rax+0x0]
0xacaa: nop word ptr [rax+rax*1+0x0]
0xace3: nop dword ptr [rax]
0xace6: nop word ptr cs:[rax+rax*1+0x0]
0xacf0: sub rsp,0x8
0xacf4: xor ecx,ecx
0xacf6: call 0xa680
0xacfb: test rax,rax
0xacfe: je 0xad05
0xad00: add rsp,0x8
0xad04: ret 
0xad05: call 0x10f10
0xad0a: nop word ptr [rax+rax*1+0x0]
0xad10: test rsi,rsi
0xad13: je 0xad20
0xad15: cmp byte ptr [rsi],0x0
0xad18: je 0xad20
0xad1a: jmp 0xacb0
0xad1c: nop dword ptr [rax+0x0]
0xad20: mov eax,0x2
0xad25: ret 
0xad26: nop word ptr cs:[rax+rax*1+0x0]
0xad67: nop word ptr [rax+rax*1+0x0]
0xad7a: nop word ptr [rax+rax*1+0x0]
0xad80: test rdi,rdi
0xad83: mov rcx,rdx
0xad86: jne 0xada8
0xad88: test rsi,rsi
0xad8b: mov edi,0x2000
0xad90: cmovne rdi,rsi
0xad94: cmp rdi,rcx
0xad97: cmovbe rcx,rdi
0xad9b: mov r8,rcx
0xad9e: mov rax,r8
0xada1: ret 
0xada2: nop word ptr [rax+rax*1+0x0]
0xada8: test rsi,rsi
0xadab: je 0xad94
0xadad: mov r8,rsi
0xadb0: mov rax,rdi
0xadb3: xor edx,edx
0xadb5: div r8
0xadb8: test rdx,rdx
0xadbb: jne 0xade8
0xadbd: xor edx,edx
0xadbf: mov rax,rdi
0xadc2: div r8
0xadc5: mov r8,rsi
0xadc8: imul r8,rax
0xadcc: mov r9,rax
0xadcf: cmp r8,rcx
0xadd2: ja 0xad94
0xadd4: xor edx,edx
0xadd6: mov rax,r8
0xadd9: div rsi
0xaddc: cmp rax,r9
0xaddf: jne 0xad94
0xade1: jmp 0xad9e
0xade3: nop dword ptr [rax+rax*1+0x0]
0xade8: mov rax,r8
0xadeb: mov r8,rdx
0xadee: jmp 0xadb3
0xadf0: mov qword ptr [rip+0x211771],rdi
0xadf7: ret 
0xadf8: nop dword ptr [rax+rax*1+0x0]
0xae00: push r12
0xae02: push rbp
0xae03: push rbx
0xae04: mov rbx,qword ptr [rip+0x2112c5]
0xae0b: mov rdi,rbx
0xae0e: call 0x110b0
0xae13: test rax,rax
0xae16: jne 0xaeb8
0xae1c: mov rdi,rbx
0xae1f: call 0x139f0
0xae24: test eax,eax
0xae26: jne 0xae58
0xae28: pop rbx
0xae29: pop rbp
0xae2a: pop r12
0xae2c: jmp 0xaf30
0xae31: nop dword ptr [rax+0x0]
0xae38: call 0x11070
0xae3d: test eax,eax
0xae3f: mov rdi,qword ptr [rip+0x21128a]
0xae46: je 0xaed6
0xae4c: call 0x139f0
0xae51: nop dword ptr [rax+0x0]
0xae58: lea rsi,[rip+0xbaa1]
0xae5f: xor edi,edi
0xae61: mov edx,0x5
0xae66: call 0x2730
0xae6b: mov rbx,qword ptr [rip+0x2116f6]
0xae72: mov r12,rax
0xae75: call 0x25a0
0xae7a: mov rbp,rax
0xae7d: test rbx,rbx
0xae80: je 0xaef0
0xae82: mov rdi,rbx
0xae85: call 0xe7a0
0xae8a: mov esi,dword ptr [rbp+0x0]
0xae8d: lea rdx,[rip+0xba7f]
0xae94: mov rcx,rax
0xae97: mov r8,r12
0xae9a: xor edi,edi
0xae9c: xor eax,eax
0xae9e: call 0x2b10
0xaea3: call 0xaf30
0xaea8: mov edi,dword ptr [rip+0x21117a]
0xaeae: call 0x25d0
0xaeb3: nop dword ptr [rax+rax*1+0x0]
0xaeb8: xor esi,esi
0xaeba: mov rdi,rbx
0xaebd: mov edx,0x1
0xaec2: call 0x110e0
0xaec7: test eax,eax
0xaec9: mov rdi,qword ptr [rip+0x211200]
0xaed0: je 0xae38
0xaed6: call 0x139f0
0xaedb: test eax,eax
0xaedd: jne 0xae58
0xaee3: pop rbx
0xaee4: pop rbp
0xaee5: pop r12
0xaee7: jmp 0xaf30
0xaeec: nop dword ptr [rax+0x0]
0xaef0: mov esi,dword ptr [rax]
0xaef2: lea rdx,[rip+0xc54e]
0xaef9: mov rcx,r12
0xaefc: xor edi,edi
0xaefe: xor eax,eax
0xaf00: call 0x2b10
0xaf05: jmp 0xaea3
0xaf07: nop word ptr [rax+rax*1+0x0]
0xaf10: mov qword ptr [rip+0x211661],rdi
0xaf17: ret 
0xaf18: nop dword ptr [rax+rax*1+0x0]
0xaf20: mov byte ptr [rip+0x211649],dil
0xaf27: ret 
0xaf28: nop dword ptr [rax+rax*1+0x0]
0xaf30: push rbp
0xaf31: push rbx
0xaf32: sub rsp,0x8
0xaf36: mov rdi,qword ptr [rip+0x21118b]
0xaf3d: call 0x139f0
0xaf42: test eax,eax
0xaf44: je 0xaf5c
0xaf46: call 0x25a0
0xaf4b: cmp byte ptr [rip+0x21161e],0x0
0xaf52: mov rbx,rax
0xaf55: je 0xaf73
0xaf57: cmp dword ptr [rax],0x20
0xaf5a: jne 0xaf73
0xaf5c: mov rdi,qword ptr [rip+0x21119d]
0xaf63: call 0x139f0
0xaf68: test eax,eax
0xaf6a: jne 0xafb2
0xaf6c: add rsp,0x8
0xaf70: pop rbx
0xaf71: pop rbp
0xaf72: ret 
0xaf73: lea rsi,[rip+0xb9a0]
0xaf7a: xor edi,edi
0xaf7c: mov edx,0x5
0xaf81: call 0x2730
0xaf86: mov rdi,qword ptr [rip+0x2115eb]
0xaf8d: mov rbp,rax
0xaf90: test rdi,rdi
0xaf93: je 0xafbd
0xaf95: call 0xe7a0
0xaf9a: mov esi,dword ptr [rbx]
0xaf9c: lea rdx,[rip+0xb970]
0xafa3: mov rcx,rax
0xafa6: mov r8,rbp
0xafa9: xor edi,edi
0xafab: xor eax,eax
0xafad: call 0x2b10
0xafb2: mov edi,dword ptr [rip+0x211070]
0xafb8: call 0x25d0
0xafbd: mov esi,dword ptr [rbx]
0xafbf: lea rdx,[rip+0xc481]
0xafc6: mov rcx,rax
0xafc9: xor edi,edi
0xafcb: xor eax,eax
0xafcd: call 0x2b10
0xafd2: jmp 0xafb2
0xafd4: nop word ptr cs:[rax+rax*1+0x0]
0xafde: xchg ax,ax
0xaff8: nop dword ptr [rax+rax*1+0x0]
0xb02e: xchg ax,ax
0xb04d: nop dword ptr [rax]
0xb05d: nop dword ptr [rax]
0xb0ba: nop word ptr [rax+rax*1+0x0]
0xb0e7: nop word ptr [rax+rax*1+0x0]
0xb11c: nop dword ptr [rax+0x0]
0xb13c: nop dword ptr [rax+0x0]
0xb15e: xchg ax,ax
0xb167: nop word ptr [rax+rax*1+0x0]
0xb1a3: nop word ptr cs:[rax+rax*1+0x0]
0xb1ad: nop dword ptr [rax]
0xb1b0: jmp 0x28b0
0xb1b5: nop 
0xb1b6: nop word ptr cs:[rax+rax*1+0x0]
0xb1c0: test rdi,rdi
0xb1c3: je 0xb1e0
0xb1c5: push rbx
0xb1c6: mov ebx,esi
0xb1c8: call 0x29c0
0xb1cd: mov ecx,ebx
0xb1cf: xor edx,edx
0xb1d1: xor esi,esi
0xb1d3: pop rbx
0xb1d4: mov edi,eax
0xb1d6: jmp 0x28b0
0xb1db: nop dword ptr [rax+rax*1+0x0]
0xb1e0: repz ret
0xb1e2: nop word ptr cs:[rax+rax*1+0x0]
0xb1ec: nop dword ptr [rax+0x0]
0xb1f0: sub rsp,0x58
0xb1f4: mov qword ptr [rsp+0x30],rdx
0xb1f9: xor edx,edx
0xb1fb: mov rax,qword ptr fs:0x28
0xb204: mov qword ptr [rsp+0x18],rax
0xb209: xor eax,eax
0xb20b: test sil,0x40
0xb20f: jne 0xb238
0xb211: xor eax,eax
0xb213: call 0x2b30
0xb218: mov edi,eax
0xb21a: call 0xf5f0
0xb21f: mov rcx,qword ptr [rsp+0x18]
0xb224: xor rcx,qword ptr fs:0x28
0xb22d: jne 0xb259
0xb22f: add rsp,0x58
0xb233: ret 
0xb234: nop dword ptr [rax+0x0]
0xb238: lea rax,[rsp+0x60]
0xb23d: mov dword ptr [rsp],0x10
0xb244: mov edx,dword ptr [rsp+0x30]
0xb248: mov qword ptr [rsp+0x8],rax
0xb24d: lea rax,[rsp+0x20]
0xb252: mov qword ptr [rsp+0x10],rax
0xb257: jmp 0xb211
0xb259: call 0x2780
0xb25e: xchg ax,ax
0xb2b5: add rsp,0x8
0xb2b9: mov rdi,rbx
0xb2bc: pop rbx
0xb2bd: pop rbp
0xb2be: pop r12
0xb2c0: pop r13
0xb2c2: jmp 0xcb10
0xb2c7: nop word ptr [rax+rax*1+0x0]
0xb2db: nop dword ptr [rax+rax*1+0x0]
0xb2e7: nop word ptr [rax+rax*1+0x0]
0xb341: call 0x2780
0xb346: nop word ptr cs:[rax+rax*1+0x0]
0xb350: mov eax,dword ptr [rdi+0x18]
0xb353: mov edx,0x5
0xb358: and eax,0xf000
0xb35d: cmp eax,0x8000
0xb362: je 0xb3b0
0xb364: cmp eax,0x4000
0xb369: je 0xb400
0xb36f: cmp eax,0xa000
0xb374: je 0xb3e0
0xb376: cmp eax,0x6000
0xb37b: je 0xb410
0xb381: cmp eax,0x2000
0xb386: je 0xb420
0xb38c: cmp eax,0x1000
0xb391: je 0xb430
0xb397: cmp eax,0xc000
0xb39c: je 0xb3f0
0xb39e: lea rsi,[rip+0xb5e5]
0xb3a5: xor edi,edi
0xb3a7: jmp 0x2730
0xb3ac: nop dword ptr [rax+0x0]
0xb3b0: cmp qword ptr [rdi+0x30],0x0
0xb3b5: jne 0xb3c8
0xb3b7: lea rsi,[rip+0xb568]
0xb3be: xor edi,edi
0xb3c0: jmp 0x2730
0xb3c5: nop dword ptr [rax]
0xb3c8: lea rsi,[rip+0xb56a]
0xb3cf: xor edi,edi
0xb3d1: jmp 0x2730
0xb3d6: nop word ptr cs:[rax+rax*1+0x0]
0xb3e0: lea rsi,[rip+0xb55f]
0xb3e7: xor edi,edi
0xb3e9: jmp 0x2730
0xb3ee: xchg ax,ax
0xb3f0: lea rsi,[rip+0xb58c]
0xb3f7: xor edi,edi
0xb3f9: jmp 0x2730
0xb3fe: xchg ax,ax
0xb400: lea rsi,[rip+0x9c13]
0xb407: xor edi,edi
0xb409: jmp 0x2730
0xb40e: xchg ax,ax
0xb410: lea rsi,[rip+0xb53d]
0xb417: xor edi,edi
0xb419: jmp 0x2730
0xb41e: xchg ax,ax
0xb420: lea rsi,[rip+0xb540]
0xb427: xor edi,edi
0xb429: jmp 0x2730
0xb42e: xchg ax,ax
0xb430: lea rsi,[rip+0xb547]
0xb437: xor edi,edi
0xb439: jmp 0x2730
0xb43e: xchg ax,ax
0xb4f2: and eax,0xffffffe0
0xb4f5: add eax,0x73
0xb537: and eax,0xffffffe0
0xb53a: add eax,0x73
0xb578: and eax,0xffffffe0
0xb57b: add eax,0x74
0xb57e: mov byte ptr [rsi+0x9],al
0xb581: mov eax,0x20
0xb586: mov word ptr [rsi+0xa],ax
0xb58a: ret 
0xb58b: nop dword ptr [rax+rax*1+0x0]
0xb59b: nop dword ptr [rax+rax*1+0x0]
0xb5b3: nop dword ptr [rax+rax*1+0x0]
0xb5c3: nop dword ptr [rax]
0xb5c6: nop word ptr cs:[rax+rax*1+0x0]
0xb5d0: mov edi,dword ptr [rdi+0x18]
0xb5d3: jmp 0xb440
0xb5d8: nop dword ptr [rax+rax*1+0x0]
0xb5f8: nop dword ptr [rax+rax*1+0x0]
0xb66c: nop dword ptr [rax+0x0]
0xb6e8: nop dword ptr [rax+rax*1+0x0]
0xb6ff: nop 
0xb700: push r13
0xb702: push r12
0xb704: push rbp
0xb705: push rbx
0xb706: sub rsp,0x8
0xb70a: test rdx,rdx
0xb70d: je 0xb771
0xb70f: mov r13d,edi
0xb712: mov rbp,rsi
0xb715: mov rbx,rdx
0xb718: xor r12d,r12d
0xb71b: jmp 0xb730
0xb71d: nop dword ptr [rax]
0xb720: test rax,rax
0xb723: je 0xb758
0xb725: add r12,rax
0xb728: add rbp,rax
0xb72b: sub rbx,rax
0xb72e: je 0xb744
0xb730: mov rdx,rbx
0xb733: mov rsi,rbp
0xb736: mov edi,r13d
0xb739: call 0xecb0
0xb73e: cmp rax,0xffffffffffffffff
0xb742: jne 0xb720
0xb744: add rsp,0x8
0xb748: mov rax,r12
0xb74b: pop rbx
0xb74c: pop rbp
0xb74d: pop r12
0xb74f: pop r13
0xb751: ret 
0xb752: nop word ptr [rax+rax*1+0x0]
0xb758: call 0x25a0
0xb75d: mov dword ptr [rax],0x1c
0xb763: add rsp,0x8
0xb767: mov rax,r12
0xb76a: pop rbx
0xb76b: pop rbp
0xb76c: pop r12
0xb76e: pop r13
0xb770: ret 
0xb771: xor r12d,r12d
0xb774: jmp 0xb744
0xb776: nop word ptr cs:[rax+rax*1+0x0]
0xb7de: xchg ax,ax
0xb813: nop dword ptr [rax]
0xb816: nop word ptr cs:[rax+rax*1+0x0]
0xb820: mov rax,rdi
0xb823: xor edx,edx
0xb825: ror rax,0x3
0xb829: div rsi
0xb82c: mov rax,rdx
0xb82f: ret 
0xb830: cmp rdi,rsi
0xb833: sete al
0xb836: ret 
0xb837: nop word ptr [rax+rax*1+0x0]
0xb862: nop dword ptr [rax+0x0]
0xb866: nop word ptr cs:[rax+rax*1+0x0]
0xb8cb: nop dword ptr [rax+rax*1+0x0]
0xb92a: nop word ptr [rax+rax*1+0x0]
0xb969: nop dword ptr [rax+0x0]
0xb979: nop dword ptr [rax+0x0]
0xb98e: xchg ax,ax
0xba07: nop word ptr [rax+rax*1+0x0]
0xba51: nop dword ptr [rax+0x0]
0xbb1c: nop dword ptr [rax+0x0]
0xbb2a: nop word ptr [rax+rax*1+0x0]
0xbb50: mov rax,qword ptr [rdi+0x10]
0xbb54: ret 
0xbb55: nop 
0xbb56: nop word ptr cs:[rax+rax*1+0x0]
0xbb60: mov rax,qword ptr [rdi+0x18]
0xbb64: ret 
0xbb65: nop 
0xbb66: nop word ptr cs:[rax+rax*1+0x0]
0xbb70: mov rax,qword ptr [rdi+0x20]
0xbb74: ret 
0xbb75: nop 
0xbb76: nop word ptr cs:[rax+rax*1+0x0]
0xbb80: mov rsi,qword ptr [rdi]
0xbb83: mov rdi,qword ptr [rdi+0x8]
0xbb87: xor eax,eax
0xbb89: cmp rsi,rdi
0xbb8c: jae 0xbbc7
0xbb8e: xchg ax,ax
0xbb90: cmp qword ptr [rsi],0x0
0xbb94: je 0xbbbc
0xbb96: mov rdx,qword ptr [rsi+0x8]
0xbb9a: mov ecx,0x1
0xbb9f: test rdx,rdx
0xbba2: je 0xbbb5
0xbba4: nop dword ptr [rax+0x0]
0xbba8: mov rdx,qword ptr [rdx+0x8]
0xbbac: add rcx,0x1
0xbbb0: test rdx,rdx
0xbbb3: jne 0xbba8
0xbbb5: cmp rax,rcx
0xbbb8: cmovb rax,rcx
0xbbbc: add rsi,0x10
0xbbc0: cmp rsi,rdi
0xbbc3: jb 0xbb90
0xbbc5: repz ret
0xbbc7: repz ret
0xbbc9: nop dword ptr [rax+0x0]
0xbbd0: mov rcx,qword ptr [rdi]
0xbbd3: mov r8,qword ptr [rdi+0x8]
0xbbd7: xor edx,edx
0xbbd9: xor esi,esi
0xbbdb: cmp rcx,r8
0xbbde: jae 0xbc16
0xbbe0: cmp qword ptr [rcx],0x0
0xbbe4: je 0xbc0d
0xbbe6: mov rax,qword ptr [rcx+0x8]
0xbbea: add rsi,0x1
0xbbee: add rdx,0x1
0xbbf2: test rax,rax
0xbbf5: je 0xbc0d
0xbbf7: nop word ptr [rax+rax*1+0x0]
0xbc00: mov rax,qword ptr [rax+0x8]
0xbc04: add rdx,0x1
0xbc08: test rax,rax
0xbc0b: jne 0xbc00
0xbc0d: add rcx,0x10
0xbc11: cmp rcx,r8
0xbc14: jb 0xbbe0
0xbc16: xor eax,eax
0xbc18: cmp qword ptr [rdi+0x18],rsi
0xbc1c: je 0xbc20
0xbc1e: repz ret
0xbc20: cmp qword ptr [rdi+0x20],rdx
0xbc24: sete al
0xbc27: ret 
0xbc28: nop dword ptr [rax+rax*1+0x0]
0xbc30: push r13
0xbc32: push r12
0xbc34: mov r12,rsi
0xbc37: push rbp
0xbc38: push rbx
0xbc39: xor ebx,ebx
0xbc3b: sub rsp,0x8
0xbc3f: mov rsi,qword ptr [rdi]
0xbc42: mov rcx,qword ptr [rdi+0x20]
0xbc46: mov rbp,qword ptr [rdi+0x10]
0xbc4a: mov r13,qword ptr [rdi+0x18]
0xbc4e: mov rdi,qword ptr [rdi+0x8]
0xbc52: cmp rsi,rdi
0xbc55: jae 0xbc95
0xbc57: nop word ptr [rax+rax*1+0x0]
0xbc60: cmp qword ptr [rsi],0x0
0xbc64: je 0xbc8c
0xbc66: mov rax,qword ptr [rsi+0x8]
0xbc6a: mov edx,0x1
0xbc6f: test rax,rax
0xbc72: je 0xbc85
0xbc74: nop dword ptr [rax+0x0]
0xbc78: mov rax,qword ptr [rax+0x8]
0xbc7c: add rdx,0x1
0xbc80: test rax,rax
0xbc83: jne 0xbc78
0xbc85: cmp rbx,rdx
0xbc88: cmovb rbx,rdx
0xbc8c: add rsi,0x10
0xbc90: cmp rsi,rdi
0xbc93: jb 0xbc60
0xbc95: lea rdx,[rip+0xacf9]
0xbc9c: mov esi,0x1
0xbca1: mov rdi,r12
0xbca4: xor eax,eax
0xbca6: call 0x2c20
0xbcab: lea rdx,[rip+0xacfb]
0xbcb2: xor eax,eax
0xbcb4: mov rcx,rbp
0xbcb7: mov esi,0x1
0xbcbc: mov rdi,r12
0xbcbf: call 0x2c20
0xbcc4: test r13,r13
0xbcc7: js 0xbd30
0xbcc9: pxor xmm0,xmm0
0xbccd: test rbp,rbp
0xbcd0: cvtsi2sd xmm0,r13
0xbcd5: mulsd xmm0,qword ptr [rip+0xad6b]
0xbcdd: js 0xbd59
0xbcdf: pxor xmm1,xmm1
0xbce3: cvtsi2sd xmm1,rbp
0xbce8: divsd xmm0,xmm1
0xbcec: lea rdx,[rip+0xaced]
0xbcf3: mov rcx,r13
0xbcf6: mov rdi,r12
0xbcf9: mov esi,0x1
0xbcfe: mov eax,0x1
0xbd03: call 0x2c20
0xbd08: add rsp,0x8
0xbd0c: mov rcx,rbx
0xbd0f: mov rdi,r12
0xbd12: pop rbx
0xbd13: pop rbp
0xbd14: pop r12
0xbd16: pop r13
0xbd18: lea rdx,[rip+0xaca6]
0xbd1f: mov esi,0x1
0xbd24: xor eax,eax
0xbd26: jmp 0x2c20
0xbd2b: nop dword ptr [rax+rax*1+0x0]
0xbd30: mov rax,r13
0xbd33: mov rdx,r13
0xbd36: pxor xmm0,xmm0
0xbd3a: shr rax,1
0xbd3d: and edx,0x1
0xbd40: or rax,rdx
0xbd43: test rbp,rbp
0xbd46: cvtsi2sd xmm0,rax
0xbd4b: addsd xmm0,xmm0
0xbd4f: mulsd xmm0,qword ptr [rip+0xacf1]
0xbd57: jns 0xbcdf
0xbd59: mov rax,rbp
0xbd5c: pxor xmm1,xmm1
0xbd60: shr rax,1
0xbd63: and ebp,0x1
0xbd66: or rax,rbp
0xbd69: cvtsi2sd xmm1,rax
0xbd6e: addsd xmm1,xmm1
0xbd72: jmp 0xbce8
0xbd77: nop word ptr [rax+rax*1+0x0]
0xbd9c: nop dword ptr [rax+0x0]
0xbdc7: nop word ptr [rax+rax*1+0x0]
0xbddb: nop dword ptr [rax+rax*1+0x0]
0xbde0: cmp qword ptr [rdi+0x20],0x0
0xbde5: je 0xbe13
0xbde7: mov rdx,qword ptr [rdi]
0xbdea: mov rcx,qword ptr [rdi+0x8]
0xbdee: cmp rdx,rcx
0xbdf1: jae 0xbe18
0xbdf3: mov rax,qword ptr [rdx]
0xbdf6: test rax,rax
0xbdf9: jne 0xbe16
0xbdfb: nop dword ptr [rax+rax*1+0x0]
0xbe00: add rdx,0x10
0xbe04: cmp rdx,rcx
0xbe07: jae 0xbe18
0xbe09: mov rax,qword ptr [rdx]
0xbe0c: test rax,rax
0xbe0f: je 0xbe00
0xbe11: repz ret
0xbe13: xor eax,eax
0xbe15: ret 
0xbe16: repz ret
0xbe18: sub rsp,0x8
0xbe1c: call 0x2590
0xbe21: nop dword ptr [rax+rax*1+0x0]
0xbe26: nop word ptr cs:[rax+rax*1+0x0]
0xbe30: push rbp
0xbe31: push rbx
0xbe32: mov rbp,rdi
0xbe35: mov rbx,rsi
0xbe38: sub rsp,0x8
0xbe3c: call 0xb840
0xbe41: mov rdx,rax
0xbe44: mov rcx,rax
0xbe47: mov rax,qword ptr [rdx]
0xbe4a: mov rdx,qword ptr [rdx+0x8]
0xbe4e: cmp rax,rbx
0xbe51: je 0xbe69
0xbe53: nop dword ptr [rax+rax*1+0x0]
0xbe58: test rdx,rdx
0xbe5b: je 0xbe6e
0xbe5d: mov rax,qword ptr [rdx]
0xbe60: mov rdx,qword ptr [rdx+0x8]
0xbe64: cmp rax,rbx
0xbe67: jne 0xbe58
0xbe69: test rdx,rdx
0xbe6c: jne 0xbe98
0xbe6e: mov rdx,qword ptr [rbp+0x8]
0xbe72: jmp 0xbe80
0xbe74: nop dword ptr [rax+0x0]
0xbe78: mov rax,qword ptr [rcx]
0xbe7b: test rax,rax
0xbe7e: jne 0xbe8b
0xbe80: add rcx,0x10
0xbe84: cmp rdx,rcx
0xbe87: ja 0xbe78
0xbe89: xor eax,eax
0xbe8b: add rsp,0x8
0xbe8f: pop rbx
0xbe90: pop rbp
0xbe91: ret 
0xbe92: nop word ptr [rax+rax*1+0x0]
0xbe98: mov rax,qword ptr [rdx]
0xbe9b: add rsp,0x8
0xbe9f: pop rbx
0xbea0: pop rbp
0xbea1: ret 
0xbea2: nop dword ptr [rax+0x0]
0xbea6: nop word ptr cs:[rax+rax*1+0x0]
0xbeb0: mov r9,qword ptr [rdi]
0xbeb3: cmp qword ptr [rdi+0x8],r9
0xbeb7: jbe 0xbf12
0xbeb9: xor r8d,r8d
0xbebc: mov rcx,qword ptr [r9]
0xbebf: test rcx,rcx
0xbec2: je 0xbefd
0xbec4: cmp rdx,r8
0xbec7: jbe 0xbf07
0xbec9: mov qword ptr [rsi+r8*8],rcx
0xbecd: mov rcx,qword ptr [r9+0x8]
0xbed1: lea rax,[r8+0x1]
0xbed5: test rcx,rcx
0xbed8: je 0xbefa
0xbeda: nop word ptr [rax+rax*1+0x0]
0xbee0: cmp rdx,rax
0xbee3: je 0xbf10
0xbee5: mov r8,qword ptr [rcx]
0xbee8: add rax,0x1
0xbeec: mov qword ptr [rsi+rax*8-0x8],r8
0xbef1: mov rcx,qword ptr [rcx+0x8]
0xbef5: test rcx,rcx
0xbef8: jne 0xbee0
0xbefa: mov r8,rax
0xbefd: add r9,0x10
0xbf01: cmp qword ptr [rdi+0x8],r9
0xbf05: ja 0xbebc
0xbf07: mov rax,r8
0xbf0a: ret 
0xbf0b: nop dword ptr [rax+rax*1+0x0]
0xbf10: repz ret
0xbf12: xor eax,eax
0xbf14: ret 
0xbf15: nop 
0xbf16: nop word ptr cs:[rax+rax*1+0x0]
0xbf20: push r15
0xbf22: push r14
0xbf24: push r13
0xbf26: push r12
0xbf28: push rbp
0xbf29: push rbx
0xbf2a: sub rsp,0x8
0xbf2e: mov r14,qword ptr [rdi]
0xbf31: cmp qword ptr [rdi+0x8],r14
0xbf35: jbe 0xbf86
0xbf37: mov r13,rdx
0xbf3a: mov r12,rsi
0xbf3d: mov r15,rdi
0xbf40: xor ebp,ebp
0xbf42: mov rdi,qword ptr [r14]
0xbf45: test rdi,rdi
0xbf48: je 0xbf6a
0xbf4a: mov rbx,r14
0xbf4d: jmp 0xbf53
0xbf4f: nop 
0xbf50: mov rdi,qword ptr [rbx]
0xbf53: mov rsi,r13
0xbf56: call r12
0xbf59: test al,al
0xbf5b: je 0xbf74
0xbf5d: mov rbx,qword ptr [rbx+0x8]
0xbf61: add rbp,0x1
0xbf65: test rbx,rbx
0xbf68: jne 0xbf50
0xbf6a: add r14,0x10
0xbf6e: cmp qword ptr [r15+0x8],r14
0xbf72: ja 0xbf42
0xbf74: add rsp,0x8
0xbf78: mov rax,rbp
0xbf7b: pop rbx
0xbf7c: pop rbp
0xbf7d: pop r12
0xbf7f: pop r13
0xbf81: pop r14
0xbf83: pop r15
0xbf85: ret 
0xbf86: xor ebp,ebp
0xbf88: jmp 0xbf74
0xbf8a: nop word ptr [rax+rax*1+0x0]
0xbf90: movzx ecx,byte ptr [rdi]
0xbf93: xor edx,edx
0xbf95: test cl,cl
0xbf97: je 0xbfbd
0xbf99: nop dword ptr [rax+0x0]
0xbfa0: mov rax,rdx
0xbfa3: add rdi,0x1
0xbfa7: shl rax,0x5
0xbfab: sub rax,rdx
0xbfae: xor edx,edx
0xbfb0: add rax,rcx
0xbfb3: movzx ecx,byte ptr [rdi]
0xbfb6: div rsi
0xbfb9: test cl,cl
0xbfbb: jne 0xbfa0
0xbfbd: mov rax,rdx
0xbfc0: ret 
0xbfc1: nop dword ptr [rax+rax*1+0x0]
0xbfc6: nop word ptr cs:[rax+rax*1+0x0]
0xbfd0: movabs rax,0x3f80000000000000
0xbfda: mov byte ptr [rdi+0x10],0x0
0xbfde: mov qword ptr [rdi],rax
0xbfe1: movabs rax,0x3fb4fdf43f4ccccd
0xbfeb: mov qword ptr [rdi+0x8],rax
0xbfef: ret 
0xc04c: mov qword ptr [rax+0x28],r15
0xc050: call 0xb990
0xc055: test al,al
0xc057: je 0xc0e0
0xc05d: cmp byte ptr [r15+0x10],0x0
0xc062: je 0xc160
0xc0df: nop 
0xc0fc: nop dword ptr [rax+0x0]
0xc15f: nop 
0xc160: test rbp,rbp
0xc163: movss xmm1,dword ptr [r15+0x8]
0xc169: jns 0xc121
0xc186: nop word ptr cs:[rax+rax*1+0x0]
0xc1a4: xchg ax,ax
0xc1a6: nop word ptr cs:[rax+rax*1+0x0]
0xc1b0: push r12
0xc1b2: push rbp
0xc1b3: mov rbp,rdi
0xc1b6: push rbx
0xc1b7: mov r12,qword ptr [rdi]
0xc1ba: cmp r12,qword ptr [rdi+0x8]
0xc1be: jae 0xc22b
0xc1c0: cmp qword ptr [r12],0x0
0xc1c5: je 0xc221
0xc1c7: mov rbx,qword ptr [r12+0x8]
0xc1cc: mov rax,qword ptr [rbp+0x40]
0xc1d0: test rbx,rbx
0xc1d3: je 0xc205
0xc1d5: nop dword ptr [rax]
0xc1d8: test rax,rax
0xc1db: je 0xc1e6
0xc1dd: mov rdi,qword ptr [rbx]
0xc1e0: call rax
0xc1e2: mov rax,qword ptr [rbp+0x40]
0xc1e6: mov rdx,qword ptr [rbx+0x8]
0xc1ea: mov rcx,qword ptr [rbp+0x48]
0xc1ee: mov qword ptr [rbx],0x0
0xc1f5: test rdx,rdx
0xc1f8: mov qword ptr [rbx+0x8],rcx
0xc1fc: mov qword ptr [rbp+0x48],rbx
0xc200: mov rbx,rdx
0xc203: jne 0xc1d8
0xc205: test rax,rax
0xc208: je 0xc210
0xc20a: mov rdi,qword ptr [r12]
0xc20e: call rax
0xc210: mov qword ptr [r12],0x0
0xc218: mov qword ptr [r12+0x8],0x0
0xc221: add r12,0x10
0xc225: cmp qword ptr [rbp+0x8],r12
0xc229: ja 0xc1c0
0xc22b: mov qword ptr [rbp+0x18],0x0
0xc233: mov qword ptr [rbp+0x20],0x0
0xc23b: pop rbx
0xc23c: pop rbp
0xc23d: pop r12
0xc23f: ret 
0xc240: push r12
0xc242: push rbp
0xc243: mov r12,rdi
0xc246: push rbx
0xc247: cmp qword ptr [rdi+0x40],0x0
0xc24c: mov rbp,qword ptr [rdi]
0xc24f: mov rax,qword ptr [rdi+0x8]
0xc253: je 0xc2a3
0xc255: cmp qword ptr [rdi+0x20],0x0
0xc25a: je 0xc2a3
0xc25c: cmp rbp,rax
0xc25f: jae 0xc2dc
0xc261: nop dword ptr [rax+0x0]
0xc268: mov rdi,qword ptr [rbp+0x0]
0xc26c: test rdi,rdi
0xc26f: je 0xc296
0xc271: mov rbx,rbp
0xc274: jmp 0xc283
0xc276: nop word ptr cs:[rax+rax*1+0x0]
0xc280: mov rdi,qword ptr [rbx]
0xc283: call qword ptr [r12+0x40]
0xc288: mov rbx,qword ptr [rbx+0x8]
0xc28c: test rbx,rbx
0xc28f: jne 0xc280
0xc291: mov rax,qword ptr [r12+0x8]
0xc296: add rbp,0x10
0xc29a: cmp rax,rbp
0xc29d: ja 0xc268
0xc29f: mov rbp,qword ptr [r12]
0xc2a3: cmp rbp,rax
0xc2a6: jae 0xc2dc
0xc2a8: nop dword ptr [rax+rax*1+0x0]
0xc2b0: mov rdi,qword ptr [rbp+0x8]
0xc2b4: test rdi,rdi
0xc2b7: je 0xc2d1
0xc2b9: nop dword ptr [rax+0x0]
0xc2c0: mov rbx,qword ptr [rdi+0x8]
0xc2c4: call 0x2c80
0xc2c9: test rbx,rbx
0xc2cc: mov rdi,rbx
0xc2cf: jne 0xc2c0
0xc2d1: add rbp,0x10
0xc2d5: cmp qword ptr [r12+0x8],rbp
0xc2da: ja 0xc2b0
0xc2dc: mov rdi,qword ptr [r12+0x48]
0xc2e1: test rdi,rdi
0xc2e4: je 0xc301
0xc2e6: nop word ptr cs:[rax+rax*1+0x0]
0xc2f0: mov rbx,qword ptr [rdi+0x8]
0xc2f4: call 0x2c80
0xc2f9: test rbx,rbx
0xc2fc: mov rdi,rbx
0xc2ff: jne 0xc2f0
0xc301: mov rdi,qword ptr [r12]
0xc305: call 0x2c80
0xc30a: pop rbx
0xc30b: mov rdi,r12
0xc30e: pop rbp
0xc30f: pop r12
0xc311: jmp 0x2c80
0xc316: nop word ptr cs:[rax+rax*1+0x0]
0xc49f: nop 
0xc4c1: nop dword ptr [rax+0x0]
0xc4e6: nop word ptr cs:[rax+rax*1+0x0]
0xc4fa: nop word ptr [rax+rax*1+0x0]
0xc507: nop word ptr [rax+rax*1+0x0]
0xc54a: call 0x2780
0xc55e: xchg ax,ax
0xc5cb: nop dword ptr [rax+rax*1+0x0]
0xc64e: xchg ax,ax
0xc698: nop dword ptr [rax+rax*1+0x0]
0xc742: nop word ptr [rax+rax*1+0x0]
0xc77d: nop dword ptr [rax]
0xc79e: xchg ax,ax
0xc7be: xchg ax,ax
0xc7df: call 0x2780
0xc7e4: xchg ax,ax
0xc7e6: nop word ptr cs:[rax+rax*1+0x0]
0xc836: nop word ptr cs:[rax+rax*1+0x0]
0xc844: call 0x2780
0xc849: nop dword ptr [rax+0x0]
0xc850: push r12
0xc852: push rbp
0xc853: mov ecx,0x1
0xc858: push rbx
0xc859: mov rbx,rdi
0xc85c: sub rsp,0x10
0xc860: mov rdx,rsp
0xc863: mov rax,qword ptr fs:0x28
0xc86c: mov qword ptr [rsp+0x8],rax
0xc871: xor eax,eax
0xc873: call 0xb870
0xc878: test rax,rax
0xc87b: mov rbp,rax
0xc87e: je 0xc88f
0xc880: mov rax,qword ptr [rsp]
0xc884: sub qword ptr [rbx+0x20],0x1
0xc889: cmp qword ptr [rax],0x0
0xc88d: je 0xc8b0
0xc88f: mov rcx,qword ptr [rsp+0x8]
0xc894: xor rcx,qword ptr fs:0x28
0xc89d: mov rax,rbp
0xc8a0: jne 0xca4e
0xc8a6: add rsp,0x10
0xc8aa: pop rbx
0xc8ab: pop rbp
0xc8ac: pop r12
0xc8ae: ret 
0xc8af: nop 
0xc8b0: mov rax,qword ptr [rbx+0x18]
0xc8b4: sub rax,0x1
0xc8b8: test rax,rax
0xc8bb: mov qword ptr [rbx+0x18],rax
0xc8bf: js 0xc9c0
0xc8c5: pxor xmm0,xmm0
0xc8c9: cvtsi2ss xmm0,rax
0xc8ce: mov rax,qword ptr [rbx+0x10]
0xc8d2: mov rdx,qword ptr [rbx+0x28]
0xc8d6: test rax,rax
0xc8d9: js 0xc9a0
0xc8df: pxor xmm1,xmm1
0xc8e3: cvtsi2ss xmm1,rax
0xc8e8: mulss xmm1,dword ptr [rdx]
0xc8ec: ucomiss xmm1,xmm0
0xc8ef: jbe 0xc88f
0xc8f1: lea rdi,[rbx+0x28]
0xc8f5: call 0xb990
0xc8fa: mov rax,qword ptr [rbx+0x10]
0xc8fe: mov rdx,qword ptr [rbx+0x28]
0xc902: test rax,rax
0xc905: js 0xca30
0xc90b: pxor xmm0,xmm0
0xc90f: cvtsi2ss xmm0,rax
0xc914: mov rax,qword ptr [rbx+0x18]
0xc918: test rax,rax
0xc91b: js 0xca10
0xc921: pxor xmm1,xmm1
0xc925: cvtsi2ss xmm1,rax
0xc92a: movss xmm2,dword ptr [rdx]
0xc92e: mulss xmm2,xmm0
0xc932: ucomiss xmm2,xmm1
0xc935: jbe 0xc88f
0xc93b: cmp byte ptr [rdx+0x10],0x0
0xc93f: mulss xmm0,dword ptr [rdx+0x4]
0xc944: je 0xca00
0xc94a: ucomiss xmm0,dword ptr [rip+0xa0ef]
0xc951: jae 0xc9e0
0xc957: cvttss2si rsi,xmm0
0xc95c: mov rdi,rbx
0xc95f: call 0xc320
0xc964: test al,al
0xc966: jne 0xc88f
0xc96c: mov rdi,qword ptr [rbx+0x48]
0xc970: test rdi,rdi
0xc973: je 0xc989
0xc975: nop dword ptr [rax]
0xc978: mov r12,qword ptr [rdi+0x8]
0xc97c: call 0x2c80
0xc981: test r12,r12
0xc984: mov rdi,r12
0xc987: jne 0xc978
0xc989: mov qword ptr [rbx+0x48],0x0
0xc991: jmp 0xc88f
0xc996: nop word ptr cs:[rax+rax*1+0x0]
0xc9a0: mov rcx,rax
0xc9a3: pxor xmm1,xmm1
0xc9a7: shr rcx,1
0xc9aa: and eax,0x1
0xc9ad: or rcx,rax
0xc9b0: cvtsi2ss xmm1,rcx
0xc9b5: addss xmm1,xmm1
0xc9b9: jmp 0xc8e8
0xc9be: xchg ax,ax
0xc9c0: mov rdx,rax
0xc9c3: pxor xmm0,xmm0
0xc9c7: shr rdx,1
0xc9ca: and eax,0x1
0xc9cd: or rdx,rax
0xc9d0: cvtsi2ss xmm0,rdx
0xc9d5: addss xmm0,xmm0
0xc9d9: jmp 0xc8ce
0xc9de: xchg ax,ax
0xc9e0: subss xmm0,dword ptr [rip+0xa058]
0xc9e8: movabs rax,0x8000000000000000
0xc9f2: cvttss2si rsi,xmm0
0xc9f7: xor rsi,rax
0xc9fa: jmp 0xc95c
0xc9ff: nop 
0xca00: mulss xmm0,dword ptr [rdx+0x8]
0xca05: jmp 0xc94a
0xca0a: nop word ptr [rax+rax*1+0x0]
0xca10: mov rcx,rax
0xca13: pxor xmm1,xmm1
0xca17: shr rcx,1
0xca1a: and eax,0x1
0xca1d: or rcx,rax
0xca20: cvtsi2ss xmm1,rcx
0xca25: addss xmm1,xmm1
0xca29: jmp 0xc92a
0xca2e: xchg ax,ax
0xca30: mov rcx,rax
0xca33: pxor xmm0,xmm0
0xca37: shr rcx,1
0xca3a: and eax,0x1
0xca3d: or rcx,rax
0xca40: cvtsi2ss xmm0,rcx
0xca45: addss xmm0,xmm0
0xca49: jmp 0xc914
0xca4e: call 0x2780
0xca53: nop word ptr cs:[rax+rax*1+0x0]
0xca5d: nop dword ptr [rax]
0xca60: push rbp
0xca61: push rbx
0xca62: mov rbp,rdi
0xca65: mov rbx,rsi
0xca68: sub rsp,0x8
0xca6c: mov rdi,qword ptr [rdi]
0xca6f: call 0x13c70
0xca74: xor rax,qword ptr [rbp+0x8]
0xca78: xor edx,edx
0xca7a: add rsp,0x8
0xca7e: div rbx
0xca81: pop rbx
0xca82: pop rbp
0xca83: mov rax,rdx
0xca86: ret 
0xca87: nop word ptr [rax+rax*1+0x0]
0xca90: mov rax,qword ptr [rdi+0x8]
0xca94: xor edx,edx
0xca96: div rsi
0xca99: mov rax,rdx
0xca9c: ret 
0xca9d: nop dword ptr [rax]
0xcaa0: xor eax,eax
0xcaa2: mov rdx,qword ptr [rsi+0x8]
0xcaa6: cmp qword ptr [rdi+0x8],rdx
0xcaaa: je 0xcab0
0xcaac: repz ret
0xcaae: xchg ax,ax
0xcab0: mov rcx,qword ptr [rsi+0x10]
0xcab4: cmp qword ptr [rdi+0x10],rcx
0xcab8: jne 0xcaac
0xcaba: sub rsp,0x8
0xcabe: mov rsi,qword ptr [rsi]
0xcac1: mov rdi,qword ptr [rdi]
0xcac4: call 0xeee0
0xcac9: add rsp,0x8
0xcacd: ret 
0xcace: xchg ax,ax
0xcad0: xor eax,eax
0xcad2: mov rdx,qword ptr [rsi+0x8]
0xcad6: cmp qword ptr [rdi+0x8],rdx
0xcada: je 0xcae0
0xcadc: repz ret
0xcade: xchg ax,ax
0xcae0: mov rcx,qword ptr [rsi+0x10]
0xcae4: cmp qword ptr [rdi+0x10],rcx
0xcae8: jne 0xcadc
0xcaea: sub rsp,0x8
0xcaee: mov rsi,qword ptr [rsi]
0xcaf1: mov rdi,qword ptr [rdi]
0xcaf4: call 0x2930
0xcaf9: test eax,eax
0xcafb: sete al
0xcafe: add rsp,0x8
0xcb02: ret 
0xcb03: nop dword ptr [rax]
0xcb06: nop word ptr cs:[rax+rax*1+0x0]
0xcb10: push rbx
0xcb11: mov rbx,rdi
0xcb14: mov rdi,qword ptr [rdi]
0xcb17: call 0x2c80
0xcb1c: mov rdi,rbx
0xcb1f: pop rbx
0xcb20: jmp 0x2c80
0xcb25: nop word ptr cs:[rax+rax*1+0x0]
0xcb2f: nop 
0xcb71: nop dword ptr [rax+0x0]
0xcb9c: nop dword ptr [rax+0x0]
0xcc4f: nop 
0xcc50: push r12
0xcc52: push rbp
0xcc53: mov r12d,ecx
0xcc56: push rbx
0xcc57: mov rbp,rdx
0xcc5a: mov edx,r8d
0xcc5d: sub rsp,0x10
0xcc61: lea rbx,[rsp+0x4]
0xcc66: mov rax,qword ptr fs:0x28
0xcc6f: mov qword ptr [rsp+0x8],rax
0xcc74: xor eax,eax
0xcc76: mov rcx,rbx
0xcc79: call 0x13600
0xcc7e: test eax,eax
0xcc80: jne 0xccb8
0xcc82: mov rsi,rbp
0xcc85: mov rdi,rbx
0xcc88: mov edx,r12d
0xcc8b: call 0x13630
0xcc90: mov rdi,rbx
0xcc93: mov ebp,eax
0xcc95: call 0x135f0
0xcc9a: mov rcx,qword ptr [rsp+0x8]
0xcc9f: xor rcx,qword ptr fs:0x28
0xcca8: mov eax,ebp
0xccaa: jne 0xccbf
0xccac: add rsp,0x10
0xccb0: pop rbx
0xccb1: pop rbp
0xccb2: pop r12
0xccb4: ret 
0xccb5: nop dword ptr [rax]
0xccb8: mov ebp,0xfffffffe
0xccbd: jmp 0xcc9a
0xccbf: call 0x2780
0xccc4: nop word ptr cs:[rax+rax*1+0x0]
0xccce: xchg ax,ax
0xccd0: push rbp
0xccd1: push rbx
0xccd2: sub rsp,0x18
0xccd6: lea rbx,[rsp+0x4]
0xccdb: mov dword ptr [rsp+0x4],edx
0xccdf: mov edx,esi
0xcce1: mov rsi,rdi
0xcce4: mov rdi,rbx
0xcce7: mov rax,qword ptr fs:0x28
0xccf0: mov qword ptr [rsp+0x8],rax
0xccf5: xor eax,eax
0xccf7: call 0x13630
0xccfc: mov rdi,rbx
0xccff: mov ebp,eax
0xcd01: call 0x135f0
0xcd06: mov rcx,qword ptr [rsp+0x8]
0xcd0b: xor rcx,qword ptr fs:0x28
0xcd14: jne 0xcd1f
0xcd16: add rsp,0x18
0xcd1a: mov eax,ebp
0xcd1c: pop rbx
0xcd1d: pop rbp
0xcd1e: ret 
0xcd1f: call 0x2780
0xcd24: nop word ptr cs:[rax+rax*1+0x0]
0xcd2e: xchg ax,ax
0xcd6c: nop dword ptr [rax+0x0]
0xcdbd: nop dword ptr [rax]
0xce17: nop word ptr [rax+rax*1+0x0]
0xd0d7: nop word ptr [rax+rax*1+0x0]
0xd10e: xchg ax,ax
0xd131: nop dword ptr [rax+0x0]
0xd15b: mov ebx,edx
0xd15d: xor r12d,r12d
0xd160: xor eax,eax
0xd172: nop word ptr [rax+rax*1+0x0]
0xd184: nop dword ptr [rax+0x0]
0xd228: nop dword ptr [rax+rax*1+0x0]
0xd251: nop dword ptr [rax+0x0]
0xd267: nop word ptr [rax+rax*1+0x0]
0xd27f: nop 
0xd2ae: xchg ax,ax
0xd2bd: nop dword ptr [rax]
0xd2cf: nop 
0xd2df: nop 
0xd2ef: nop 
0xd2ff: nop 
0xd30f: nop 
0xd37c: nop dword ptr [rax+0x0]
0xd39c: nop dword ptr [rax+0x0]
0xd3bf: nop 
0xd3d2: nop word ptr [rax+rax*1+0x0]
0xd3ea: nop word ptr [rax+rax*1+0x0]
0xd3fa: nop word ptr [rax+rax*1+0x0]
0xd49b: nop dword ptr [rax+rax*1+0x0]
0xd4b5: nop dword ptr [rax]
0xd4c8: nop dword ptr [rax+rax*1+0x0]
0xd4e3: nop dword ptr [rax+rax*1+0x0]
0xd512: nop word ptr [rax+rax*1+0x0]
0xd522: nop word ptr [rax+rax*1+0x0]
0xd53a: nop word ptr [rax+rax*1+0x0]
0xd54a: nop word ptr [rax+rax*1+0x0]
0xd558: nop dword ptr [rax+rax*1+0x0]
0xd57f: nop 
0xd619: nop dword ptr [rax+0x0]
0xd662: nop word ptr [rax+rax*1+0x0]
0xd66f: lea rcx,[rbp+0x2]
0xd673: cmp rcx,r11
0xd676: jae 0xd690
0xd678: mov rax,qword ptr [rsp+0x10]
0xd67d: cmp byte ptr [rax+rbp*1+0x1],0x3f
0xd682: je 0xde12
0xd688: nop dword ptr [rax+rax*1+0x0]
0xd6a1: nop dword ptr [rax+0x0]
0xd6c2: nop word ptr [rax+rax*1+0x0]
0xd828: nop dword ptr [rax+rax*1+0x0]
0xd93b: nop dword ptr [rax+rax*1+0x0]
0xd95e: xchg ax,ax
0xda25: nop dword ptr [rax]
0xdadd: nop dword ptr [rax]
0xdce6: nop word ptr cs:[rax+rax*1+0x0]
0xdd79: nop dword ptr [rax+0x0]
0xde12: movzx ebx,byte ptr [rax+rcx*1]
0xde16: cmp bl,0x3e
0xde19: ja 0xd690
0xde1f: movabs rax,0x7000a38200000000
0xde29: bt rax,rbx
0xde2d: jae 0xd690
0xde33: cmp byte ptr [rsp+0xf],0x0
0xde38: jne 0xe022
0xde3e: cmp r13,r15
0xde41: jbe 0xde48
0xde43: mov byte ptr [r14+r15*1],0x3f
0xde48: lea rax,[r15+0x1]
0xde4c: cmp r13,rax
0xde4f: jbe 0xde57
0xde51: mov byte ptr [r14+r15*1+0x1],0x22
0xde57: lea rax,[r15+0x2]
0xde5b: cmp r13,rax
0xde5e: jbe 0xde66
0xde60: mov byte ptr [r14+r15*1+0x2],0x22
0xde66: lea rax,[r15+0x3]
0xde6a: cmp r13,rax
0xde6d: jbe 0xde75
0xde6f: mov byte ptr [r14+r15*1+0x3],0x3f
0xde75: add r15,0x4
0xde79: xor edx,edx
0xde7b: xor r12d,r12d
0xde7e: xor eax,eax
0xde80: mov rbp,rcx
0xde83: jmp 0xd048
0xdecd: nop dword ptr [rax]
0xe013: call 0x2780
0xe022: mov rbp,r11
0xe025: jmp 0xd9c0
0xe054: xchg ax,ax
0xe056: nop word ptr cs:[rax+rax*1+0x0]
0xe1db: nop dword ptr [rax+rax*1+0x0]
0xe20b: nop dword ptr [rax+rax*1+0x0]
0xe210: push r12
0xe212: push rbp
0xe213: push rbx
0xe214: mov rbx,rdi
0xe217: call 0x25a0
0xe21c: mov r12d,dword ptr [rax]
0xe21f: mov rbp,rax
0xe222: lea rax,[rip+0x20e477]
0xe229: test rbx,rbx
0xe22c: mov esi,0x38
0xe231: cmove rbx,rax
0xe235: mov rdi,rbx
0xe238: call 0x10ec0
0xe23d: mov dword ptr [rbp+0x0],r12d
0xe241: pop rbx
0xe242: pop rbp
0xe243: pop r12
0xe245: ret 
0xe246: nop word ptr cs:[rax+rax*1+0x0]
0xe250: lea rax,[rip+0x20e449]
0xe257: test rdi,rdi
0xe25a: cmove rdi,rax
0xe25e: mov eax,dword ptr [rdi]
0xe260: ret 
0xe261: nop dword ptr [rax+rax*1+0x0]
0xe266: nop word ptr cs:[rax+rax*1+0x0]
0xe270: lea rax,[rip+0x20e429]
0xe277: test rdi,rdi
0xe27a: cmove rdi,rax
0xe27e: mov dword ptr [rdi],esi
0xe280: ret 
0xe281: nop dword ptr [rax+rax*1+0x0]
0xe286: nop word ptr cs:[rax+rax*1+0x0]
0xe290: lea rax,[rip+0x20e409]
0xe297: test rdi,rdi
0xe29a: mov ecx,esi
0xe29c: cmove rdi,rax
0xe2a0: mov eax,esi
0xe2a2: and ecx,0x1f
0xe2a5: shr al,0x5
0xe2a8: movzx eax,al
0xe2ab: lea rdi,[rdi+rax*4+0x8]
0xe2b0: mov esi,dword ptr [rdi]
0xe2b2: mov eax,esi
0xe2b4: shr eax,cl
0xe2b6: xor edx,eax
0xe2b8: and eax,0x1
0xe2bb: and edx,0x1
0xe2be: shl edx,cl
0xe2c0: xor edx,esi
0xe2c2: mov dword ptr [rdi],edx
0xe2c4: ret 
0xe2c5: nop 
0xe2c6: nop word ptr cs:[rax+rax*1+0x0]
0xe2d0: lea rax,[rip+0x20e3c9]
0xe2d7: test rdi,rdi
0xe2da: cmove rdi,rax
0xe2de: mov eax,dword ptr [rdi+0x4]
0xe2e1: mov dword ptr [rdi+0x4],esi
0xe2e4: ret 
0xe2e5: nop 
0xe2e6: nop word ptr cs:[rax+rax*1+0x0]
0xe2f0: lea rax,[rip+0x20e3a9]
0xe2f7: test rdi,rdi
0xe2fa: cmove rdi,rax
0xe2fe: test rsi,rsi
0xe301: mov dword ptr [rdi],0xa
0xe307: je 0xe317
0xe309: test rdx,rdx
0xe30c: je 0xe317
0xe30e: mov qword ptr [rdi+0x28],rsi
0xe312: mov qword ptr [rdi+0x30],rdx
0xe316: ret 
0xe317: sub rsp,0x8
0xe31b: call 0x2590
0xe320: push r15
0xe322: push r14
0xe324: lea rax,[rip+0x20e375]
0xe32b: push r13
0xe32d: push r12
0xe32f: mov r13,rdi
0xe332: push rbp
0xe333: push rbx
0xe334: mov rbx,r8
0xe337: mov r14,rsi
0xe33a: mov r15,rdx
0xe33d: sub rsp,0x18
0xe341: test r8,r8
0xe344: cmove rbx,rax
0xe348: mov qword ptr [rsp+0x8],rcx
0xe34d: call 0x25a0
0xe352: mov r12d,dword ptr [rax]
0xe355: mov rbp,rax
0xe358: lea rax,[rbx+0x8]
0xe35c: sub rsp,0x8
0xe360: mov r9d,dword ptr [rbx+0x4]
0xe364: push qword ptr [rbx+0x30]
0xe367: mov r8d,dword ptr [rbx]
0xe36a: push qword ptr [rbx+0x28]
0xe36d: mov rdx,r15
0xe370: push rax
0xe371: mov rcx,qword ptr [rsp+0x28]
0xe376: mov rsi,r14
0xe379: mov rdi,r13
0xe37c: call 0xce20
0xe381: mov dword ptr [rbp+0x0],r12d
0xe385: add rsp,0x38
0xe389: pop rbx
0xe38a: pop rbp
0xe38b: pop r12
0xe38d: pop r13
0xe38f: pop r14
0xe391: pop r15
0xe393: ret 
0xe394: xchg ax,ax
0xe396: nop word ptr cs:[rax+rax*1+0x0]
0xe3a0: push r15
0xe3a2: push r14
0xe3a4: lea rax,[rip+0x20e2f5]
0xe3ab: push r13
0xe3ad: push r12
0xe3af: mov r12,rdx
0xe3b2: push rbp
0xe3b3: push rbx
0xe3b4: mov rbx,rcx
0xe3b7: mov r14,rdi
0xe3ba: mov r15,rsi
0xe3bd: sub rsp,0x38
0xe3c1: test rcx,rcx
0xe3c4: cmove rbx,rax
0xe3c8: xor ebp,ebp
0xe3ca: call 0x25a0
0xe3cf: test r12,r12
0xe3d2: mov r13,rax
0xe3d5: mov eax,dword ptr [rax]
0xe3d7: sete bpl
0xe3db: or ebp,dword ptr [rbx+0x4]
0xe3de: lea r10,[rbx+0x8]
0xe3e2: sub rsp,0x8
0xe3e6: mov r8d,dword ptr [rbx]
0xe3e9: mov rcx,r15
0xe3ec: mov dword ptr [rsp+0x14],eax
0xe3f0: push qword ptr [rbx+0x30]
0xe3f3: mov rdx,r14
0xe3f6: push qword ptr [rbx+0x28]
0xe3f9: push r10
0xe3fb: xor esi,esi
0xe3fd: mov r9d,ebp
0xe400: xor edi,edi
0xe402: mov qword ptr [rsp+0x40],r10
0xe407: call 0xce20
0xe40c: lea rsi,[rax+0x1]
0xe410: mov qword ptr [rsp+0x48],rax
0xe415: add rsp,0x20
0xe419: mov rdi,rsi
0xe41c: mov qword ptr [rsp+0x18],rsi
0xe421: call 0x10cc0
0xe426: mov qword ptr [rsp+0x10],rax
0xe42b: sub rsp,0x8
0xe42f: push qword ptr [rbx+0x30]
0xe432: push qword ptr [rbx+0x28]
0xe435: mov r10,qword ptr [rsp+0x38]
0xe43a: mov r9d,ebp
0xe43d: mov r8d,dword ptr [rbx]
0xe440: mov rcx,r15
0xe443: mov rdx,r14
0xe446: mov rdi,rax
0xe449: push r10
0xe44b: mov rsi,qword ptr [rsp+0x38]
0xe450: call 0xce20
0xe455: mov eax,dword ptr [rsp+0x2c]
0xe459: add rsp,0x20
0xe45d: test r12,r12
0xe460: mov dword ptr [r13+0x0],eax
0xe464: je 0xe46f
0xe466: mov r11,qword ptr [rsp+0x28]
0xe46b: mov qword ptr [r12],r11
0xe46f: mov rax,qword ptr [rsp+0x10]
0xe474: add rsp,0x38
0xe478: pop rbx
0xe479: pop rbp
0xe47a: pop r12
0xe47c: pop r13
0xe47e: pop r14
0xe480: pop r15
0xe482: ret 
0xe483: nop dword ptr [rax]
0xe486: nop word ptr cs:[rax+rax*1+0x0]
0xe490: mov rcx,rdx
0xe493: xor edx,edx
0xe495: jmp 0xe3a0
0xe49a: nop word ptr [rax+rax*1+0x0]
0xe4a0: mov eax,dword ptr [rip+0x20dbd2]
0xe4a6: push r12
0xe4a8: mov r12,qword ptr [rip+0x20dbd1]
0xe4af: push rbp
0xe4b0: push rbx
0xe4b1: cmp eax,0x1
0xe4b4: jle 0xe4e1
0xe4b6: sub eax,0x2
0xe4b9: lea rbx,[r12+0x18]
0xe4be: shl rax,0x4
0xe4c2: lea rbp,[r12+rax*1+0x28]
0xe4c7: nop word ptr [rax+rax*1+0x0]
0xe4d0: mov rdi,qword ptr [rbx]
0xe4d3: add rbx,0x10
0xe4d7: call 0x2c80
0xe4dc: cmp rbx,rbp
0xe4df: jne 0xe4d0
0xe4e1: mov rdi,qword ptr [r12+0x8]
0xe4e6: lea rbx,[rip+0x20e0b3]
0xe4ed: cmp rdi,rbx
0xe4f0: je 0xe509
0xe4f2: call 0x2c80
0xe4f7: mov qword ptr [rip+0x20db8e],0x100
0xe502: mov qword ptr [rip+0x20db8f],rbx
0xe509: lea rbx,[rip+0x20db80]
0xe510: cmp r12,rbx
0xe513: je 0xe524
0xe515: mov rdi,r12
0xe518: call 0x2c80
0xe51d: mov qword ptr [rip+0x20db5c],rbx
0xe524: pop rbx
0xe525: mov dword ptr [rip+0x20db49],0x1
0xe52f: pop rbp
0xe530: pop r12
0xe532: ret 
0xe533: nop dword ptr [rax]
0xe536: nop word ptr cs:[rax+rax*1+0x0]
0xe540: lea rcx,[rip+0x20e159]
0xe547: mov rdx,0xffffffffffffffff
0xe54e: jmp 0xe060
0xe553: nop dword ptr [rax]
0xe556: nop word ptr cs:[rax+rax*1+0x0]
0xe560: lea rcx,[rip+0x20e139]
0xe567: jmp 0xe060
0xe56c: nop dword ptr [rax+0x0]
0xe570: lea rcx,[rip+0x20e129]
0xe577: mov rsi,rdi
0xe57a: mov rdx,0xffffffffffffffff
0xe581: xor edi,edi
0xe583: jmp 0xe060
0xe588: nop dword ptr [rax+rax*1+0x0]
0xe590: lea rcx,[rip+0x20e109]
0xe597: mov rdx,rsi
0xe59a: mov rsi,rdi
0xe59d: xor edi,edi
0xe59f: jmp 0xe060
0xe5a4: xchg ax,ax
0xe5a6: nop word ptr cs:[rax+rax*1+0x0]
0xe639: call 0x2780
0xe63e: xchg ax,ax
0xe640: sub rsp,0x48
0xe644: mov rax,rdx
0xe647: mov rdx,rcx
0xe64a: mov rcx,qword ptr fs:0x28
0xe653: mov qword ptr [rsp+0x38],rcx
0xe658: xor ecx,ecx
0xe65a: cmp esi,0xa
0xe65d: je 0xe6c0
0xe65f: mov dword ptr [rsp],esi
0xe662: mov rcx,rsp
0xe665: mov rsi,rax
0xe668: mov qword ptr [rsp+0x4],0x0
0xe671: mov qword ptr [rsp+0xc],0x0
0xe67a: mov qword ptr [rsp+0x14],0x0
0xe683: mov qword ptr [rsp+0x1c],0x0
0xe68c: mov qword ptr [rsp+0x24],0x0
0xe695: mov qword ptr [rsp+0x2c],0x0
0xe69e: mov dword ptr [rsp+0x34],0x0
0xe6a6: call 0xe060
0xe6ab: mov rdx,qword ptr [rsp+0x38]
0xe6b0: xor rdx,qword ptr fs:0x28
0xe6b9: jne 0xe6c5
0xe6bb: add rsp,0x48
0xe6bf: ret 
0xe6c0: call 0x2590
0xe6c5: call 0x2780
0xe6ca: nop word ptr [rax+rax*1+0x0]
0xe6dc: nop dword ptr [rax+0x0]
0xe6e0: mov rcx,rdx
0xe6e3: mov rdx,rsi
0xe6e6: mov esi,edi
0xe6e8: xor edi,edi
0xe6ea: jmp 0xe640
0xe6ef: nop 
0xe6f0: sub rsp,0x48
0xe6f4: mov ecx,edx
0xe6f6: mov rax,qword ptr fs:0x28
0xe6ff: mov qword ptr [rsp+0x38],rax
0xe704: xor eax,eax
0xe706: mov rax,qword ptr [rip+0x20dfc3]
0xe70d: mov r8,rsp
0xe710: and ecx,0x1f
0xe713: movdqa xmm0,XMMword ptr [rip+0x20df85]
0xe71b: mov qword ptr [rsp+0x30],rax
0xe720: mov eax,edx
0xe722: movaps XMMword ptr [rsp],xmm0
0xe726: shr al,0x5
0xe729: movzx eax,al
0xe72c: lea r9,[r8+rax*4+0x8]
0xe731: movdqa xmm0,XMMword ptr [rip+0x20df77]
0xe739: movaps XMMword ptr [rsp+0x10],xmm0
0xe73e: movdqa xmm0,XMMword ptr [rip+0x20df7a]
0xe746: movaps XMMword ptr [rsp+0x20],xmm0
0xe74b: mov edx,dword ptr [r9]
0xe74e: mov eax,edx
0xe750: shr eax,cl
0xe752: not eax
0xe754: and eax,0x1
0xe757: shl eax,cl
0xe759: mov rcx,r8
0xe75c: xor eax,edx
0xe75e: mov rdx,rsi
0xe761: mov rsi,rdi
0xe764: mov dword ptr [r9],eax
0xe767: xor edi,edi
0xe769: call 0xe060
0xe76e: mov rsi,qword ptr [rsp+0x38]
0xe773: xor rsi,qword ptr fs:0x28
0xe77c: jne 0xe783
0xe77e: add rsp,0x48
0xe782: ret 
0xe783: call 0x2780
0xe788: nop dword ptr [rax+rax*1+0x0]
0xe790: movsx edx,sil
0xe794: mov rsi,0xffffffffffffffff
0xe79b: jmp 0xe6f0
0xe7a0: mov edx,0x3a
0xe7a5: mov rsi,0xffffffffffffffff
0xe7ac: jmp 0xe6f0
0xe7b1: nop dword ptr [rax+rax*1+0x0]
0xe7b6: nop word ptr cs:[rax+rax*1+0x0]
0xe7c0: mov edx,0x3a
0xe7c5: jmp 0xe6f0
0xe7ca: nop word ptr [rax+rax*1+0x0]
0xe7d0: sub rsp,0x48
0xe7d4: mov rax,rdx
0xe7d7: mov rdx,qword ptr fs:0x28
0xe7e0: mov qword ptr [rsp+0x38],rdx
0xe7e5: xor edx,edx
0xe7e7: cmp esi,0xa
0xe7ea: je 0xe854
0xe7ec: mov dword ptr [rsp],esi
0xe7ef: mov rcx,rsp
0xe7f2: mov rdx,0xffffffffffffffff
0xe7f9: mov rsi,rax
0xe7fc: mov qword ptr [rsp+0x4],0x0
0xe805: mov qword ptr [rsp+0xc],0x4000000
0xe80e: mov qword ptr [rsp+0x14],0x0
0xe817: mov qword ptr [rsp+0x1c],0x0
0xe820: mov qword ptr [rsp+0x24],0x0
0xe829: mov qword ptr [rsp+0x2c],0x0
0xe832: mov dword ptr [rsp+0x34],0x0
0xe83a: call 0xe060
0xe83f: mov rcx,qword ptr [rsp+0x38]
0xe844: xor rcx,qword ptr fs:0x28
0xe84d: jne 0xe859
0xe84f: add rsp,0x48
0xe853: ret 
0xe854: call 0x2590
0xe859: call 0x2780
0xe85e: xchg ax,ax
0xe860: sub rsp,0x48
0xe864: mov r9,rcx
0xe867: mov rcx,qword ptr [rip+0x20de62]
0xe86e: movdqa xmm0,XMMword ptr [rip+0x20de2a]
0xe876: mov rax,qword ptr fs:0x28
0xe87f: mov qword ptr [rsp+0x38],rax
0xe884: xor eax,eax
0xe886: movaps XMMword ptr [rsp],xmm0
0xe88a: test rsi,rsi
0xe88d: mov qword ptr [rsp+0x30],rcx
0xe892: mov dword ptr [rsp],0xa
0xe899: movdqa xmm0,XMMword ptr [rip+0x20de0f]
0xe8a1: movaps XMMword ptr [rsp+0x10],xmm0
0xe8a6: movdqa xmm0,XMMword ptr [rip+0x20de12]
0xe8ae: movaps XMMword ptr [rsp+0x20],xmm0
0xe8b3: je 0xe8e7
0xe8b5: test rdx,rdx
0xe8b8: je 0xe8e7
0xe8ba: mov qword ptr [rsp+0x28],rsi
0xe8bf: mov qword ptr [rsp+0x30],rdx
0xe8c4: mov rcx,rsp
0xe8c7: mov rdx,r8
0xe8ca: mov rsi,r9
0xe8cd: call 0xe060
0xe8d2: mov rdi,qword ptr [rsp+0x38]
0xe8d7: xor rdi,qword ptr fs:0x28
0xe8e0: jne 0xe8ec
0xe8e2: add rsp,0x48
0xe8e6: ret 
0xe8e7: call 0x2590
0xe8ec: call 0x2780
0xe8f1: nop dword ptr [rax+rax*1+0x0]
0xe8f6: nop word ptr cs:[rax+rax*1+0x0]
0xe900: mov r8,0xffffffffffffffff
0xe907: jmp 0xe860
0xe90c: nop dword ptr [rax+0x0]
0xe910: mov rcx,rdx
0xe913: mov r8,0xffffffffffffffff
0xe91a: mov rdx,rsi
0xe91d: mov rsi,rdi
0xe920: xor edi,edi
0xe922: jmp 0xe860
0xe927: nop word ptr [rax+rax*1+0x0]
0xe930: mov r8,rcx
0xe933: mov rcx,rdx
0xe936: mov rdx,rsi
0xe939: mov rsi,rdi
0xe93c: xor edi,edi
0xe93e: jmp 0xe860
0xe943: nop dword ptr [rax]
0xe946: nop word ptr cs:[rax+rax*1+0x0]
0xe950: lea rcx,[rip+0x20d6e9]
0xe957: jmp 0xe060
0xe95c: nop dword ptr [rax+0x0]
0xe960: lea rcx,[rip+0x20d6d9]
0xe967: mov rdx,rsi
0xe96a: mov rsi,rdi
0xe96d: xor edi,edi
0xe96f: jmp 0xe060
0xe974: xchg ax,ax
0xe976: nop word ptr cs:[rax+rax*1+0x0]
0xe993: nop dword ptr [rax]
0xe996: nop word ptr cs:[rax+rax*1+0x0]
0xe9a0: lea rcx,[rip+0x20d699]
0xe9a7: mov rsi,rdi
0xe9aa: mov rdx,0xffffffffffffffff
0xe9b1: xor edi,edi
0xe9b3: jmp 0xe060
0xe9b8: nop dword ptr [rax+rax*1+0x0]
0xea46: nop word ptr cs:[rax+rax*1+0x0]
0xeabd: nop dword ptr [rax]
0xead7: nop word ptr [rax+rax*1+0x0]
0xeb74: nop dword ptr [rax+0x0]
0xebd1: nop dword ptr [rax+0x0]
0xec25: call 0x2780
0xec2a: nop word ptr [rax+rax*1+0x0]
0xec30: push rbx
0xec31: lea rsi,[rip+0x7e56]
0xec38: mov rbx,rdi
0xec3b: mov edi,0x1
0xec40: sub rsp,0xa0
0xec47: mov rdx,rsp
0xec4a: mov rax,qword ptr fs:0x28
0xec53: mov qword ptr [rsp+0x98],rax
0xec5b: xor eax,eax
0xec5d: call 0x2760
0xec62: test eax,eax
0xec64: jne 0xec98
0xec66: mov rax,qword ptr [rsp+0x8]
0xec6b: mov qword ptr [rbx],rax
0xec6e: mov rax,qword ptr [rsp]
0xec72: mov qword ptr [rbx+0x8],rax
0xec76: mov rax,rbx
0xec79: mov rcx,qword ptr [rsp+0x98]
0xec81: xor rcx,qword ptr fs:0x28
0xec8a: jne 0xec9c
0xec8c: add rsp,0xa0
0xec93: pop rbx
0xec94: ret 
0xec95: nop dword ptr [rax]
0xec98: xor eax,eax
0xec9a: jmp 0xec79
0xec9c: call 0x2780
0xeca1: nop word ptr cs:[rax+rax*1+0x0]
0xecab: nop dword ptr [rax+rax*1+0x0]
0xecb0: push r13
0xecb2: push r12
0xecb4: mov r13d,edi
0xecb7: push rbp
0xecb8: push rbx
0xecb9: mov r12,rsi
0xecbc: mov rbx,rdx
0xecbf: sub rsp,0x8
0xecc3: nop dword ptr [rax+rax*1+0x0]
0xecc8: mov rdx,rbx
0xeccb: mov rsi,r12
0xecce: mov edi,r13d
0xecd1: call 0x2690
0xecd6: test rax,rax
0xecd9: mov rbp,rax
0xecdc: jns 0xed00
0xecde: call 0x25a0
0xece3: mov eax,dword ptr [rax]
0xece5: cmp eax,0x4
0xece8: je 0xecc8
0xecea: cmp eax,0x16
0xeced: jne 0xed00
0xecef: cmp rbx,0x7ff00000
0xecf6: jbe 0xed00
0xecf8: mov ebx,0x7ff00000
0xecfd: jmp 0xecc8
0xecff: nop 
0xed00: add rsp,0x8
0xed04: mov rax,rbp
0xed07: pop rbx
0xed08: pop rbp
0xed09: pop r12
0xed0b: pop r13
0xed0d: ret 
0xed0e: xchg ax,ax
0xede4: nop dword ptr [rax+0x0]
0xee05: jmp 0xed98
0xee07: nop word ptr [rax+rax*1+0x0]
0xee2d: jmp 0xed64
0xee32: call 0x2780
0xee37: nop word ptr [rax+rax*1+0x0]
0xee9a: nop word ptr [rax+rax*1+0x0]
0xeed2: nop dword ptr [rax+0x0]
0xeed6: nop word ptr cs:[rax+rax*1+0x0]
0xeef2: nop word ptr cs:[rax+rax*1+0x0]
0xeefc: nop dword ptr [rax+0x0]
0xef00: mov rax,qword ptr [rsi+0x8]
0xef04: cmp qword ptr [rdi+0x8],rax
0xef08: jb 0xef18
0xef0a: seta al
0xef0d: movzx eax,al
0xef10: ret 
0xef11: nop dword ptr [rax+0x0]
0xef18: mov eax,0xffffffff
0xef1d: ret 
0xef1e: xchg ax,ax
0xef20: mov rsi,qword ptr [rsi]
0xef23: mov rdi,qword ptr [rdi]
0xef26: jmp 0x2930
0xef2b: nop dword ptr [rax+rax*1+0x0]
0xef30: push r15
0xef32: lea rax,[rip+0x20cae7]
0xef39: push r14
0xef3b: push r13
0xef3d: push r12
0xef3f: mov esi,esi
0xef41: push rbp
0xef42: push rbx
0xef43: sub rsp,0x48
0xef47: mov rax,qword ptr [rax+rsi*8]
0xef4b: test rdi,rdi
0xef4e: mov qword ptr [rsp+0x8],rax
0xef53: je 0xf25d
0xef59: mov rbx,rdi
0xef5c: xor r14d,r14d
0xef5f: xor r12d,r12d
0xef62: call 0x25a0
0xef67: xor r13d,r13d
0xef6a: mov rbp,rax
0xef6d: mov qword ptr [rsp+0x28],0x0
0xef76: mov qword ptr [rsp+0x10],0x0
0xef7f: mov qword ptr [rsp+0x20],0x0
0xef88: jmp 0xef94
0xef8a: nop word ptr [rax+rax*1+0x0]
0xef90: test al,al
0xef92: jne 0xefc9
0xef94: mov dword ptr [rbp+0x0],0x0
0xef9b: mov rdi,rbx
0xef9e: call 0x29f0
0xefa3: test rax,rax
0xefa6: mov rcx,rax
0xefa9: je 0xf050
0xefaf: lea r15,[rax+0x13]
0xefb3: movzx eax,byte ptr [rax+0x13]
0xefb7: cmp al,0x2e
0xefb9: jne 0xef90
0xefbb: cmp byte ptr [rcx+0x14],0x2e
0xefbf: je 0xf040
0xefc1: movzx eax,byte ptr [rcx+0x14]
0xefc5: test al,al
0xefc7: je 0xef94
0xefc9: mov rdi,r15
0xefcc: mov qword ptr [rsp+0x30],rcx
0xefd1: call 0x2750
0xefd6: add rax,0x1
0xefda: cmp qword ptr [rsp+0x8],0x0
0xefe0: mov qword ptr [rsp+0x18],rax
0xefe5: je 0xf128
0xefeb: cmp r12,qword ptr [rsp+0x28]
0xeff0: lea rax,[r12+0x1]
0xeff5: mov rcx,qword ptr [rsp+0x30]
0xeffa: mov qword ptr [rsp+0x38],rax
0xefff: je 0xf1b1
0xf005: shl r12,0x4
0xf009: mov rdi,r15
0xf00c: add r12,qword ptr [rsp+0x10]
0xf011: mov qword ptr [rsp+0x30],rcx
0xf016: call 0x10ef0
0xf01b: mov rcx,qword ptr [rsp+0x30]
0xf020: add r14,qword ptr [rsp+0x18]
0xf025: mov qword ptr [r12],rax
0xf029: mov rax,qword ptr [rcx]
0xf02c: mov qword ptr [r12+0x8],rax
0xf031: mov r12,qword ptr [rsp+0x38]
0xf036: jmp 0xef94
0xf03b: nop dword ptr [rax+rax*1+0x0]
0xf040: movzx eax,byte ptr [rcx+0x15]
0xf044: jmp 0xef90
0xf049: nop dword ptr [rax+0x0]
0xf050: mov ebx,dword ptr [rbp+0x0]
0xf053: test ebx,ebx
0xf055: jne 0xf240
0xf05b: cmp qword ptr [rsp+0x8],0x0
0xf061: je 0xf110
0xf067: test r12,r12
0xf06a: lea rbx,[r14+0x1]
0xf06e: jne 0xf0a0
0xf070: mov rdi,rbx
0xf073: call 0x10cc0
0xf078: mov r13,rax
0xf07b: mov rbx,rax
0xf07e: mov rdi,qword ptr [rsp+0x10]
0xf083: call 0x2c80
0xf088: mov byte ptr [rbx],0x0
0xf08b: add rsp,0x48
0xf08f: mov rax,r13
0xf092: pop rbx
0xf093: pop rbp
0xf094: pop r12
0xf096: pop r13
0xf098: pop r14
0xf09a: pop r15
0xf09c: ret 
0xf09d: nop dword ptr [rax]
0xf0a0: mov r15,qword ptr [rsp+0x10]
0xf0a5: mov rcx,qword ptr [rsp+0x8]
0xf0aa: mov rsi,r12
0xf0ad: mov edx,0x10
0xf0b2: shl r12,0x4
0xf0b6: mov rdi,r15
0xf0b9: mov rbp,r15
0xf0bc: add r12,r15
0xf0bf: call 0x2630
0xf0c4: mov rdi,rbx
0xf0c7: xor ebx,ebx
0xf0c9: call 0x10cc0
0xf0ce: mov r13,rax
0xf0d1: nop dword ptr [rax+0x0]
0xf0d8: mov rsi,qword ptr [rbp+0x0]
0xf0dc: lea r14,[r13+rbx*1+0x0]
0xf0e1: add rbp,0x10
0xf0e5: mov rdi,r14
0xf0e8: call 0x2710
0xf0ed: mov rdi,qword ptr [rbp-0x10]
0xf0f1: sub rax,r14
0xf0f4: lea rbx,[rbx+rax*1+0x1]
0xf0f9: call 0x2c80
0xf0fe: cmp r12,rbp
0xf101: jne 0xf0d8
0xf103: add rbx,r13
0xf106: jmp 0xf07e
0xf10b: nop dword ptr [rax+rax*1+0x0]
0xf110: cmp qword ptr [rsp+0x20],r14
0xf115: je 0xf203
0xf11b: lea rbx,[r13+r14*1+0x0]
0xf120: jmp 0xf088
0xf125: nop dword ptr [rax]
0xf128: mov rsi,qword ptr [rsp+0x18]
0xf12d: mov rax,qword ptr [rsp+0x20]
0xf132: mov rdx,rsi
0xf135: sub rax,r14
0xf138: add rdx,r14
0xf13b: mov qword ptr [rsp+0x30],rdx
0xf140: setb dl
0xf143: cmp rax,rsi
0xf146: movzx edx,dl
0xf149: ja 0xf195
0xf14b: test rdx,rdx
0xf14e: jne 0xf239
0xf154: test r13,r13
0xf157: mov rdx,qword ptr [rsp+0x30]
0xf15c: je 0xf21f
0xf162: movabs rax,0x5555555555555553
0xf16c: cmp rdx,rax
0xf16f: ja 0xf239
0xf175: mov rax,rdx
0xf178: shr rax,1
0xf17b: lea rax,[rdx+rax*1+0x1]
0xf180: mov qword ptr [rsp+0x20],rax
0xf185: mov rsi,qword ptr [rsp+0x20]
0xf18a: mov rdi,r13
0xf18d: call 0x10d20
0xf192: mov r13,rax
0xf195: mov rdx,qword ptr [rsp+0x18]
0xf19a: lea rdi,[r13+r14*1+0x0]
0xf19f: mov rsi,r15
0xf1a2: call 0x29a0
0xf1a7: mov r14,qword ptr [rsp+0x30]
0xf1ac: jmp 0xef94
0xf1b1: cmp qword ptr [rsp+0x10],0x0
0xf1b7: je 0xf265
0xf1bd: movabs rax,0x555555555555554
0xf1c7: cmp r12,rax
0xf1ca: ja 0xf239
0xf1cc: mov rax,r12
0xf1cf: shr rax,1
0xf1d2: add rax,qword ptr [rsp+0x38]
0xf1d7: mov qword ptr [rsp+0x28],rax
0xf1dc: mov rsi,qword ptr [rsp+0x28]
0xf1e1: mov rdi,qword ptr [rsp+0x10]
0xf1e6: mov qword ptr [rsp+0x30],rcx
0xf1eb: shl rsi,0x4
0xf1ef: call 0x10d20
0xf1f4: mov rcx,qword ptr [rsp+0x30]
0xf1f9: mov qword ptr [rsp+0x10],rax
0xf1fe: jmp 0xf005
0xf203: mov rbx,qword ptr [rsp+0x20]
0xf208: mov rdi,r13
0xf20b: lea rsi,[rbx+0x1]
0xf20f: call 0x10d20
0xf214: mov r13,rax
0xf217: add rbx,rax
0xf21a: jmp 0xf088
0xf21f: test rdx,rdx
0xf222: mov eax,0x80
0xf227: cmovne rax,rdx
0xf22b: test rax,rax
0xf22e: mov qword ptr [rsp+0x20],rax
0xf233: jns 0xf185
0xf239: call 0x10f10
0xf23e: xchg ax,ax
0xf240: mov rdi,qword ptr [rsp+0x10]
0xf245: call 0x2c80
0xf24a: mov rdi,r13
0xf24d: xor r13d,r13d
0xf250: call 0x2c80
0xf255: mov dword ptr [rbp+0x0],ebx
0xf258: jmp 0xf08b
0xf25d: xor r13d,r13d
0xf260: jmp 0xf08b
0xf265: test r12,r12
0xf268: mov eax,0x8
0xf26d: mov edx,0x10
0xf272: cmovne rax,r12
0xf276: xor esi,esi
0xf278: mov rdi,rax
0xf27b: mov qword ptr [rsp+0x28],rax
0xf280: mov rax,rdx
0xf283: mul rdi
0xf286: jo 0xf2a1
0xf288: test rax,rax
0xf28b: js 0xf239
0xf28d: test rsi,rsi
0xf290: jne 0xf239
0xf292: lea rax,[r12+0x1]
0xf297: mov qword ptr [rsp+0x38],rax
0xf29c: jmp 0xf1dc
0xf2a1: mov esi,0x1
0xf2a6: jmp 0xf288
0xf2a8: nop dword ptr [rax+rax*1+0x0]
0xf2b0: push r12
0xf2b2: push rbp
0xf2b3: mov ebp,esi
0xf2b5: push rbx
0xf2b6: call 0x13b10
0xf2bb: test rax,rax
0xf2be: je 0xf2e8
0xf2c0: mov esi,ebp
0xf2c2: mov rbx,rax
0xf2c5: mov rdi,rax
0xf2c8: call 0xef30
0xf2cd: mov rdi,rbx
0xf2d0: mov rbp,rax
0xf2d3: call 0x28a0
0xf2d8: test eax,eax
0xf2da: jne 0xf2f0
0xf2dc: mov rax,rbp
0xf2df: pop rbx
0xf2e0: pop rbp
0xf2e1: pop r12
0xf2e3: ret 
0xf2e4: nop dword ptr [rax+0x0]
0xf2e8: xor ebp,ebp
0xf2ea: jmp 0xf2dc
0xf2ec: nop dword ptr [rax+0x0]
0xf2f0: call 0x25a0
0xf2f5: mov r12d,dword ptr [rax]
0xf2f8: mov rbx,rax
0xf2fb: mov rdi,rbp
0xf2fe: call 0x2c80
0xf303: xor ebp,ebp
0xf305: mov dword ptr [rbx],r12d
0xf308: jmp 0xf2dc
0xf30a: nop word ptr [rax+rax*1+0x0]
0xf310: push rbx
0xf311: mov rsi,rdi
0xf314: mov edi,0x1
0xf319: sub rsp,0xa0
0xf320: mov rdx,rsp
0xf323: mov rax,qword ptr fs:0x28
0xf32c: mov qword ptr [rsp+0x98],rax
0xf334: xor eax,eax
0xf336: call 0x2760
0xf33b: mov ebx,eax
0xf33d: call 0x25a0
0xf342: test ebx,ebx
0xf344: je 0xf360
0xf346: mov edx,dword ptr [rax]
0xf348: cmp edx,0x4b
0xf34b: je 0xf360
0xf34d: xor eax,eax
0xf34f: cmp edx,0x2
0xf352: setne al
0xf355: neg eax
0xf357: jmp 0xf36b
0xf359: nop dword ptr [rax+0x0]
0xf360: mov dword ptr [rax],0x11
0xf366: mov eax,0xffffffff
0xf36b: mov rcx,qword ptr [rsp+0x98]
0xf373: xor rcx,qword ptr fs:0x28
0xf37c: jne 0xf387
0xf37e: add rsp,0xa0
0xf385: pop rbx
0xf386: ret 
0xf387: call 0x2780
0xf38c: nop dword ptr [rax+0x0]
0xf390: mov esi,0x1c0
0xf395: jmp 0x2610
0xf39a: nop word ptr [rax+rax*1+0x0]
0xf3a0: mov esi,dword ptr [rsi]
0xf3a2: mov edx,0x180
0xf3a7: xor eax,eax
0xf3a9: and sil,0x3c
0xf3ad: or sil,0xc2
0xf3b1: jmp 0x2b30
0xf3b6: nop word ptr cs:[rax+rax*1+0x0]
0xf534: xchg ax,ax
0xf536: nop word ptr cs:[rax+rax*1+0x0]
0xf540: sub rsp,0x18
0xf544: cmp ecx,0x1
0xf547: mov dword ptr [rsp+0xc],edx
0xf54b: je 0xf5b0
0xf54d: cmp ecx,0x2
0xf550: je 0xf578
0xf552: test ecx,ecx
0xf554: je 0xf590
0xf556: lea rcx,[rip+0x7a63]
0xf55d: lea rsi,[rip+0x7a04]
0xf564: lea rdi,[rip+0x7a25]
0xf56b: mov edx,0x147
0xf570: call 0x2820
0xf575: nop dword ptr [rax]
0xf578: lea rdx,[rsp+0xc]
0xf57d: lea rcx,[rip+0xfffffffffffffd8c]
0xf584: call 0xf3c0
0xf589: add rsp,0x18
0xf58d: ret 
0xf58e: xchg ax,ax
0xf590: lea rdx,[rsp+0xc]
0xf595: lea rcx,[rip+0xfffffffffffffe04]
0xf59c: call 0xf3c0
0xf5a1: add rsp,0x18
0xf5a5: ret 
0xf5a6: nop word ptr cs:[rax+rax*1+0x0]
0xf5b0: lea rdx,[rsp+0xc]
0xf5b5: lea rcx,[rip+0xfffffffffffffdd4]
0xf5bc: call 0xf3c0
0xf5c1: add rsp,0x18
0xf5c5: ret 
0xf5c6: nop word ptr cs:[rax+rax*1+0x0]
0xf5d0: mov r8d,0x6
0xf5d6: jmp 0xf540
0xf5db: nop dword ptr [rax+rax*1+0x0]
0xf5e0: mov r8d,0x6
0xf5e6: jmp 0xf3c0
0xf5eb: nop dword ptr [rax+rax*1+0x0]
0xf62f: nop 
0xf630: mov rax,qword ptr [rdi]
0xf633: xor edx,edx
0xf635: div rsi
0xf638: mov rax,rdx
0xf63b: ret 
0xf63c: nop dword ptr [rax+0x0]
0xf640: mov rax,qword ptr [rsi]
0xf643: cmp qword ptr [rdi],rax
0xf646: sete al
0xf649: ret 
0xf64a: nop word ptr [rax+rax*1+0x0]
0xf695: cmp r14,r12
0xf698: mov r10d,edi
0xf69b: sete byte ptr [rsp+0x38]
0xf6a0: movzx edi,byte ptr [rsp+0x38]
0xf6a5: cmp r15d,r13d
0xf6a8: sete al
0xf6ab: and al,dil
0xf6ae: mov byte ptr [rsp+0x8],al
0xf6b2: jne 0xf7c0
0xf6b8: lea rax,[r12-0x1]
0xf6bd: cmp rax,r14
0xf6c0: jg 0xf7c8
0xf6c6: lea rax,[r14-0x1]
0xf6ca: cmp rax,r12
0xf6cd: jg 0xf78f
0xf6d3: mov rbp,rdx
0xf6d6: mov rdx,qword ptr [rip+0x20d003]
0xf6dd: mov r11,rsi
0xf6e0: test rdx,rdx
0xf6e3: je 0xfc80
0xf6e9: mov rsi,qword ptr [rip+0x20cfe8]
0xf6f0: test rsi,rsi
0xf6f3: je 0xf7d0
0xf6f9: mov rax,qword ptr [rbp+0x0]
0xf6fd: mov rdi,rdx
0xf700: mov qword ptr [rsp+0x28],r11
0xf705: mov dword ptr [rsp+0x20],r10d
0xf70a: mov dword ptr [rsp+0x18],r9d
0xf70f: mov qword ptr [rsi],rax
0xf712: call 0xc7f0
0xf717: test rax,rax
0xf71a: mov qword ptr [rsp+0x10],rax
0xf71f: mov r9d,dword ptr [rsp+0x18]
0xf724: mov r10d,dword ptr [rsp+0x20]
0xf729: mov r11,qword ptr [rsp+0x28]
0xf72e: je 0xf828
0xf734: cmp qword ptr [rip+0x20cf9d],rax
0xf73b: je 0xfce0
0xf741: mov rax,qword ptr [rsp+0x10]
0xf746: cmp byte ptr [rax+0xc],0x0
0xf74a: mov esi,dword ptr [rax+0x8]
0xf74d: mov dword ptr [rsp+0x18],esi
0xf751: je 0xf8aa
0xf757: xor eax,eax
0xf759: cmp esi,0x77359400
0xf75f: sete al
0xf762: not eax
0xf764: cdqe 
0xf766: and r12,rax
0xf769: mov eax,r9d
0xf76c: mov r9d,r13d
0xf76f: cdq 
0xf770: idiv esi
0xf772: sub r9d,edx
0xf775: nop dword ptr [rax]
0xf7ba: nop word ptr [rax+rax*1+0x0]
0xf7c0: xor ebx,ebx
0xf7c2: jmp 0xf78f
0xf7c4: nop dword ptr [rax+0x0]
0xf7c8: mov ebx,0xffffffff
0xf7cd: jmp 0xf78f
0xf7cf: nop 
0xf7d0: mov edi,0x10
0xf7d5: mov qword ptr [rsp+0x28],r11
0xf7da: mov dword ptr [rsp+0x20],r10d
0xf7df: mov dword ptr [rsp+0x18],r9d
0xf7e4: mov qword ptr [rsp+0x10],rdx
0xf7e9: call 0x2a00
0xf7ee: test rax,rax
0xf7f1: mov rsi,rax
0xf7f4: mov qword ptr [rip+0x20cedd],rax
0xf7fb: mov rdx,qword ptr [rsp+0x10]
0xf800: mov r9d,dword ptr [rsp+0x18]
0xf805: mov r10d,dword ptr [rsp+0x20]
0xf80a: mov r11,qword ptr [rsp+0x28]
0xf80f: je 0xf838
0xf811: mov dword ptr [rax+0x8],0x77359400
0xf818: mov byte ptr [rax+0xc],0x0
0xf81c: jmp 0xf6f9
0xf821: nop dword ptr [rax+0x0]
0xf828: mov rdx,qword ptr [rip+0x20ceb1]
0xf82f: test rdx,rdx
0xf832: je 0xfcd2
0xf838: lea rcx,[rsp+0x50]
0xf83d: mov rax,qword ptr [rbp+0x0]
0xf841: mov rdi,rdx
0xf844: mov qword ptr [rsp+0x30],r11
0xf849: mov dword ptr [rsp+0x28],r10d
0xf84e: mov rsi,rcx
0xf851: mov dword ptr [rsp+0x20],r9d
0xf856: mov qword ptr [rsp+0x18],rcx
0xf85b: mov qword ptr [rsp+0x50],rax
0xf860: call 0xbd80
0xf865: test rax,rax
0xf868: mov qword ptr [rsp+0x10],rax
0xf86d: mov rcx,qword ptr [rsp+0x18]
0xf872: mov r9d,dword ptr [rsp+0x20]
0xf877: mov r10d,dword ptr [rsp+0x28]
0xf87c: mov r11,qword ptr [rsp+0x30]
0xf881: jne 0xf741
0xf887: nop word ptr [rax+rax*1+0x0]
0xf890: mov dword ptr [rsp+0x58],0x77359400
0xf898: mov byte ptr [rsp+0x5c],0x0
0xf89d: mov dword ptr [rsp+0x18],0x77359400
0xf8a5: mov qword ptr [rsp+0x10],rcx
0xf8aa: mov rcx,qword ptr [rbp+0x50]
0xf8ae: mov eax,0x66666667
0xf8b3: mov rsi,qword ptr [rbp+0x70]
0xf8b7: imul ecx
0xf8b9: mov eax,ecx
0xf8bb: mov qword ptr [rsp+0x28],rcx
0xf8c0: sar eax,0x1f
0xf8c3: sar edx,0x2
0xf8c6: sub edx,eax
0xf8c8: lea eax,[rdx+rdx*4]
0xf8cb: mov dword ptr [rsp+0x20],edx
0xf8cf: add eax,eax
0xf8d1: sub ecx,eax
0xf8d3: mov eax,0x66666667
0xf8d8: imul esi
0xf8da: mov eax,esi
0xf8dc: sar eax,0x1f
0xf8df: sar edx,0x2
0xf8e2: mov edi,edx
0xf8e4: sub edi,eax
0xf8e6: lea eax,[rdi+rdi*4]
0xf8e9: add eax,eax
0xf8eb: sub esi,eax
0xf8ed: mov eax,0x66666667
0xf8f2: imul r15d
0xf8f5: mov eax,r15d
0xf8f8: or ecx,esi
0xf8fa: sar eax,0x1f
0xf8fd: mov esi,r15d
0xf900: sar edx,0x2
0xf903: mov r8d,edx
0xf906: sub r8d,eax
0xf909: lea eax,[r8+r8*4]
0xf90d: add eax,eax
0xf90f: sub esi,eax
0xf911: or ecx,esi
0xf913: jne 0xfc68
0xf919: cmp dword ptr [rsp+0x18],0xa
0xf91e: mov rax,qword ptr [rbp+0x48]
0xf922: mov ecx,edi
0xf924: mov edx,dword ptr [rsp+0x20]
0xf928: mov esi,r8d
0xf92b: mov qword ptr [rsp+0x48],rax
0xf930: mov dword ptr [rsp+0x30],edx
0xf934: jle 0xfd48
0xf93a: mov eax,0x66666667
0xf93f: imul edi
0xf941: mov eax,edi
0xf943: sar eax,0x1f
0xf946: sar edx,0x2
0xf949: sub edx,eax
0xf94b: lea eax,[rdx+rdx*4]
0xf94e: add eax,eax
0xf950: sub edi,eax
0xf952: mov eax,0x66666667
0xf957: imul dword ptr [rsp+0x20]
0xf95b: mov eax,dword ptr [rsp+0x20]
0xf95f: sar eax,0x1f
0xf962: sar edx,0x2
0xf965: sub edx,eax
0xf967: lea eax,[rdx+rdx*4]
0xf96a: mov edx,dword ptr [rsp+0x20]
0xf96e: mov dword ptr [rsp+0x20],0xa
0xf976: add eax,eax
0xf978: sub edx,eax
0xf97a: mov eax,0x66666667
0xf97f: or edi,edx
0xf981: imul r8d
0xf984: mov eax,r8d
0xf987: mov dword ptr [rsp+0x3c],edi
0xf98b: sar eax,0x1f
0xf98e: mov edi,0x66666667
0xf993: sar edx,0x2
0xf996: sub edx,eax
0xf998: lea eax,[rdx+rdx*4]
0xf99b: mov edx,0x8
0xf9a0: add eax,eax
0xf9a2: sub r8d,eax
0xf9a5: mov eax,dword ptr [rsp+0x3c]
0xf9a9: or eax,r8d
0xf9ac: jne 0xfd64
0xf9b2: mov dword ptr [rsp+0x3c],r9d
0xf9b7: mov qword ptr [rsp+0x40],r14
0xf9bc: mov r9d,0xa
0xf9c2: mov r8d,dword ptr [rsp+0x30]
0xf9c7: mov qword ptr [rsp+0x20],r12
0xf9cc: mov r14d,edx
0xf9cf: mov qword ptr [rsp+0x30],rbp
0xf9d4: mov eax,r8d
0xf9d7: sar r8d,0x1f
0xf9db: lea ebp,[r9+r9*4]
0xf9df: imul edi
0xf9e1: mov eax,ecx
0xf9e3: sar ecx,0x1f
0xf9e6: add ebp,ebp
0xf9e8: mov r9d,ebp
0xf9eb: sar edx,0x2
0xf9ee: sub edx,r8d
0xf9f1: mov r8d,edx
0xf9f4: imul edi
0xf9f6: mov eax,esi
0xf9f8: sar esi,0x1f
0xf9fb: sar edx,0x2
0xf9fe: sub edx,ecx
0xfa00: mov ecx,edx
0xfa02: imul edi
0xfa04: sar edx,0x2
0xfa07: sub edx,esi
0xfa09: cmp ebp,dword ptr [rsp+0x18]
0xfa0d: mov esi,edx
0xfa0f: jge 0xfcf0
0xfa15: mov eax,r8d
0xfa18: mov r12d,r8d
0xfa1b: imul edi
0xfa1d: mov eax,r8d
0xfa20: sar eax,0x1f
0xfa23: sar edx,0x2
0xfa26: sub edx,eax
0xfa28: lea eax,[rdx+rdx*4]
0xfa2b: add eax,eax
0xfa2d: sub r12d,eax
0xfa30: mov eax,ecx
0xfa32: imul edi
0xfa34: mov eax,ecx
0xfa36: sar eax,0x1f
0xfa39: sar edx,0x2
0xfa3c: sub edx,eax
0xfa3e: lea eax,[rdx+rdx*4]
0xfa41: mov edx,ecx
0xfa43: add eax,eax
0xfa45: sub edx,eax
0xfa47: mov eax,esi
0xfa49: or r12d,edx
0xfa4c: imul edi
0xfa4e: mov eax,esi
0xfa50: sar eax,0x1f
0xfa53: sar edx,0x2
0xfa56: sub edx,eax
0xfa58: lea eax,[rdx+rdx*4]
0xfa5b: mov edx,esi
0xfa5d: add eax,eax
0xfa5f: sub edx,eax
0xfa61: or r12d,edx
0xfa64: jne 0xfcf0
0xfa6a: sub r14d,0x1
0xfa6e: jne 0xf9d4
0xfa74: mov r14,qword ptr [rsp+0x40]
0xfa79: mov rbp,qword ptr [rsp+0x30]
0xfa7e: mov rax,qword ptr [rsp+0x48]
0xfa83: mov r12,qword ptr [rsp+0x20]
0xfa88: mov r9d,dword ptr [rsp+0x3c]
0xfa8d: or rax,r14
0xfa90: or rax,qword ptr [rbp+0x68]
0xfa94: test al,0x1
0xfa96: mov rax,qword ptr [rsp+0x10]
0xfa9b: je 0xfd28
0xfaa1: mov dword ptr [rax+0x8],0x3b9aca00
0xfaa8: mov dword ptr [rsp+0x20],0x3b9aca00
0xfab0: mov rax,r12
0xfab3: cmp r14,r12
0xfab6: jg 0xf78f
0xfabc: cmp r15d,r13d
0xfabf: jl 0xfacc
0xfac1: cmp byte ptr [rsp+0x38],0x0
0xfac6: jne 0xf78f
0xfacc: cmp r14,rax
0xfacf: jl 0xf7c8
0xfad5: jne 0xfaed
0xfad7: mov eax,r9d
0xfada: cdq 
0xfadb: idiv dword ptr [rsp+0x20]
0xfadf: mov eax,r13d
0xfae2: sub eax,edx
0xfae4: cmp eax,r15d
0xfae7: jg 0xf7c8
0xfaed: mov rax,qword ptr [rsp+0x48]
0xfaf2: mov edx,0x38e38e39
0xfaf7: lea rbp,[rsp+0x60]
0xfafc: mov rsi,r11
0xfaff: mov edi,r10d
0xfb02: mov ecx,0x100
0xfb07: mov dword ptr [rsp+0x18],r9d
0xfb0c: mov dword ptr [rsp+0x38],r10d
0xfb11: mov qword ptr [rsp+0x60],rax
0xfb16: movsxd rax,dword ptr [rsp+0x28]
0xfb1b: mov qword ptr [rsp+0x68],rax
0xfb20: movzx eax,byte ptr [rsp+0x8]
0xfb25: mov qword ptr [rsp+0x8],r11
0xfb2a: or rax,r14
0xfb2d: mov qword ptr [rsp+0x70],rax
0xfb32: mov eax,dword ptr [rsp+0x20]
0xfb36: mul edx
0xfb38: mov eax,edx
0xfb3a: mov rdx,rbp
0xfb3d: shr eax,1
0xfb3f: add eax,r15d
0xfb42: cdqe 
0xfb44: mov qword ptr [rsp+0x78],rax
0xfb49: call 0x2580
0xfb4e: test eax,eax
0xfb50: mov r10d,dword ptr [rsp+0x38]
0xfb55: mov r11,qword ptr [rsp+0x8]
0xfb5a: mov r9d,dword ptr [rsp+0x18]
0xfb5f: je 0xfb6b
0xfb61: mov ebx,0xfffffffe
0xfb66: jmp 0xf78f
0xfb6b: lea rcx,[rsp+0x80]
0xfb73: mov rdx,r11
0xfb76: mov r8d,0x100
0xfb7c: mov esi,r10d
0xfb7f: mov edi,0x1
0xfb84: mov dword ptr [rsp+0x18],r9d
0xfb89: mov qword ptr [rsp+0x8],r11
0xfb8e: mov dword ptr [rsp+0x38],r10d
0xfb93: call 0x27c0
0xfb98: mov rcx,qword ptr [rsp+0xe0]
0xfba0: mov r8d,eax
0xfba3: mov rax,qword ptr [rsp+0xd8]
0xfbab: movsxd rdx,r15d
0xfbae: mov r10d,dword ptr [rsp+0x38]
0xfbb3: mov r11,qword ptr [rsp+0x8]
0xfbb8: mov r9d,dword ptr [rsp+0x18]
0xfbbd: xor rcx,rdx
0xfbc0: xor rax,r14
0xfbc3: or rax,rcx
0xfbc6: movsxd rcx,r8d
0xfbc9: or rax,rcx
0xfbcc: jne 0xfd7d
0xfbd2: mov ecx,dword ptr [rsp+0xd8]
0xfbd9: mov esi,0xa
0xfbde: and ecx,0x1
0xfbe1: imul ecx,ecx,0x3b9aca00
0xfbe7: add ecx,dword ptr [rsp+0xe0]
0xfbee: mov eax,ecx
0xfbf0: cdq 
0xfbf1: idiv esi
0xfbf3: test edx,edx
0xfbf5: jne 0xfdc5
0xfbfb: cmp dword ptr [rsp+0x20],0xa
0xfc00: je 0xfc3d
0xfc02: mov r8d,0x9
0xfc08: mov esi,0xa
0xfc0d: mov edi,0xa
0xfc12: jmp 0xfc1d
0xfc14: imul esi,esi,0xa
0xfc17: cmp esi,dword ptr [rsp+0x20]
0xfc1b: je 0xfc3d
0xfc1d: mov eax,ecx
0xfc1f: cdq 
0xfc20: idiv edi
0xfc22: cdq 
0xfc23: mov ecx,eax
0xfc25: idiv edi
0xfc27: test edx,edx
0xfc29: jne 0xfdbc
0xfc2f: sub r8d,0x1
0xfc33: jne 0xfc14
0xfc35: mov dword ptr [rsp+0x20],0x77359400
0xfc3d: mov esi,dword ptr [rsp+0x20]
0xfc41: xor eax,eax
0xfc43: cmp esi,0x77359400
0xfc49: mov ebx,esi
0xfc4b: sete al
0xfc4e: not eax
0xfc50: cdqe 
0xfc52: and r12,rax
0xfc55: mov eax,r9d
0xfc58: mov r9d,r13d
0xfc5b: cdq 
0xfc5c: idiv esi
0xfc5e: sub r9d,edx
0xfc61: nop dword ptr [rax+0x0]
0xfc68: mov rax,qword ptr [rsp+0x10]
0xfc6d: mov dword ptr [rax+0x8],ebx
0xfc70: mov byte ptr [rax+0xc],0x1
0xfc74: jmp 0xf778
0xfc79: nop dword ptr [rax+0x0]
0xfc80: mov r8,qword ptr [rip+0x20c341]
0xfc87: lea rdx,[rip+0xfffffffffffff9a2]
0xfc8e: lea rcx,[rip+0xfffffffffffff9ab]
0xfc95: mov qword ptr [rsp+0x20],rsi
0xfc9a: mov edi,0x10
0xfc9f: xor esi,esi
0xfca1: mov dword ptr [rsp+0x18],r10d
0xfca6: mov dword ptr [rsp+0x10],r13d
0xfcab: call 0xbff0
0xfcb0: test rax,rax
0xfcb3: mov rdx,rax
0xfcb6: mov qword ptr [rip+0x20ca23],rax
0xfcbd: mov r9d,dword ptr [rsp+0x10]
0xfcc2: mov r10d,dword ptr [rsp+0x18]
0xfcc7: mov r11,qword ptr [rsp+0x20]
0xfccc: jne 0xf6e9
0xfcd2: lea rcx,[rsp+0x50]
0xfcd7: jmp 0xf890
0xfcdc: nop dword ptr [rax+0x0]
0xfce0: mov qword ptr [rip+0x20c9ed],0x0
0xfceb: jmp 0xf741
0xfcf0: cmp ebp,0x77359400
0xfcf6: mov r12,qword ptr [rsp+0x20]
0xfcfb: mov rsi,qword ptr [rsp+0x10]
0xfd00: sete byte ptr [rsp+0x8]
0xfd05: movzx eax,byte ptr [rsp+0x8]
0xfd0a: mov dword ptr [rsp+0x20],r9d
0xfd0f: mov r14,qword ptr [rsp+0x40]
0xfd14: mov r9d,dword ptr [rsp+0x3c]
0xfd19: mov dword ptr [rsi+0x8],ebp
0xfd1c: not eax
0xfd1e: cdqe 
0xfd20: and rax,r12
0xfd23: jmp 0xfab3
0xfd28: mov dword ptr [rax+0x8],0x77359400
0xfd2f: mov rax,r12
0xfd32: mov byte ptr [rsp+0x8],0x1
0xfd37: and rax,0xfffffffffffffffe
0xfd3b: mov dword ptr [rsp+0x20],0x77359400
0xfd43: jmp 0xfab3
0xfd48: mov rax,qword ptr [rsp+0x10]
0xfd4d: mov dword ptr [rsp+0x20],0xa
0xfd55: mov dword ptr [rax+0x8],0xa
0xfd5c: mov rax,r12
0xfd5f: jmp 0xfab3
0xfd64: mov rax,qword ptr [rsp+0x10]
0xfd69: mov dword ptr [rax+0x8],0xa
0xfd70: mov rax,r12
0xfd73: jmp 0xfab3
0xfd78: call 0x2780
0xfd7d: mov qword ptr [rsp+0x78],rdx
0xfd82: mov ecx,0x100
0xfd87: mov rdx,rbp
0xfd8a: mov rsi,r11
0xfd8d: mov edi,r10d
0xfd90: mov dword ptr [rsp+0x8],r8d
0xfd95: mov dword ptr [rsp+0x38],r9d
0xfd9a: mov qword ptr [rsp+0x70],r14
0xfd9f: call 0x2580
0xfda4: mov r8d,dword ptr [rsp+0x8]
0xfda9: mov r9d,dword ptr [rsp+0x38]
0xfdae: test r8d,r8d
0xfdb1: jne 0xfb61
0xfdb7: jmp 0xfbd2
0xfdbc: mov dword ptr [rsp+0x20],esi
0xfdc0: jmp 0xfc3d
0xfdc5: mov dword ptr [rsp+0x20],ebx
0xfdc9: jmp 0xfc3d
0xfdce: xchg ax,ax
0xfde6: nop word ptr cs:[rax+rax*1+0x0]
0xfdf0: push rbp
0xfdf1: push rbx
0xfdf2: mov rbp,rdi
0xfdf5: sub rsp,0x18
0xfdf9: mov rbx,qword ptr [rsi]
0xfdfc: mov rax,qword ptr [rbx+0x8]
0xfe00: mov rdx,qword ptr [rbx+0x18]
0xfe04: cmp rax,0x3ffffffe
0xfe0a: je 0xfe70
0xfe0c: cmp rax,0x3fffffff
0xfe12: je 0xfe30
0xfe14: cmp rdx,0x3ffffffe
0xfe1b: je 0xfe4e
0xfe1d: xor eax,eax
0xfe1f: cmp rdx,0x3fffffff
0xfe26: je 0xfe98
0xfe28: add rsp,0x18
0xfe2c: pop rbx
0xfe2d: pop rbp
0xfe2e: ret 
0xfe2f: nop 
0xfe30: cmp rdx,0x3fffffff
0xfe37: je 0xfeb8
0xfe39: mov rdi,rbx
0xfe3c: call 0x13bb0
0xfe41: mov rdx,qword ptr [rbx+0x18]
0xfe45: cmp rdx,0x3ffffffe
0xfe4c: jne 0xfe1d
0xfe4e: mov rax,qword ptr [rbp+0x60]
0xfe52: mov rdx,qword ptr [rbp+0x58]
0xfe56: mov qword ptr [rbx+0x18],rax
0xfe5a: mov qword ptr [rbx+0x10],rdx
0xfe5e: add rsp,0x18
0xfe62: xor eax,eax
0xfe64: pop rbx
0xfe65: pop rbp
0xfe66: ret 
0xfe67: nop word ptr [rax+rax*1+0x0]
0xfe70: cmp rdx,0x3ffffffe
0xfe77: mov eax,0x1
0xfe7c: je 0xfe28
0xfe7e: mov rax,qword ptr [rdi+0x50]
0xfe82: mov rcx,qword ptr [rdi+0x48]
0xfe86: mov qword ptr [rbx+0x8],rax
0xfe8a: xor eax,eax
0xfe8c: cmp rdx,0x3fffffff
0xfe93: mov qword ptr [rbx],rcx
0xfe96: jne 0xfe28
0xfe98: lea rdi,[rbx+0x10]
0xfe9c: mov byte ptr [rsp+0xf],al
0xfea0: call 0x13bb0
0xfea5: movzx eax,byte ptr [rsp+0xf]
0xfeaa: add rsp,0x18
0xfeae: pop rbx
0xfeaf: pop rbp
0xfeb0: ret 
0xfeb1: nop dword ptr [rax+0x0]
0xfeb8: mov qword ptr [rsi],0x0
0xfebf: xor eax,eax
0xfec1: jmp 0xfe28
0xfec6: nop word ptr cs:[rax+rax*1+0x0]
0xfed0: mov r9,qword ptr [rdi+0x8]
0xfed4: lea rcx,[r9-0x3ffffffe]
0xfedb: cmp rcx,0x1
0xfedf: jbe 0xfeea
0xfee1: cmp r9,0x3b9ac9ff
0xfee8: ja 0xff60
0xfeea: mov rdx,qword ptr [rdi+0x18]
0xfeee: lea r8,[rdx-0x3ffffffe]
0xfef5: cmp r8,0x1
0xfef9: jbe 0xff04
0xfefb: cmp rdx,0x3b9ac9ff
0xff02: ja 0xff60
0xff04: xor esi,esi
0xff06: xor r10d,r10d
0xff09: cmp rcx,0x1
0xff0d: ja 0xff29
0xff0f: xor esi,esi
0xff11: cmp r9,0x3ffffffe
0xff18: mov qword ptr [rdi],0x0
0xff1f: sete sil
0xff23: mov r10d,0x1
0xff29: cmp r8,0x1
0xff2d: ja 0xff4b
0xff2f: xor eax,eax
0xff31: cmp rdx,0x3ffffffe
0xff38: mov qword ptr [rdi+0x10],0x0
0xff40: sete al
0xff43: mov r10d,0x1
0xff49: add esi,eax
0xff4b: xor eax,eax
0xff4d: cmp esi,0x1
0xff50: sete al
0xff53: add eax,r10d
0xff56: ret 
0xff57: nop word ptr [rax+rax*1+0x0]
0xff60: sub rsp,0x8
0xff64: call 0x25a0
0xff69: mov dword ptr [rax],0x16
0xff6f: mov eax,0xffffffff
0xff74: add rsp,0x8
0xff78: ret 
0xff79: nop dword ptr [rax+0x0]
0xff80: mov ecx,0x100
0xff85: jmp 0x2580
0xff8a: nop word ptr [rax+rax*1+0x0]
0xff90: push r14
0xff92: push r13
0xff94: push r12
0xff96: push rbp
0xff97: mov r12,rsi
0xff9a: push rbx
0xff9b: mov ebx,edi
0xff9d: sub rsp,0x110
0xffa4: mov rax,qword ptr fs:0x28
0xffad: mov qword ptr [rsp+0x108],rax
0xffb5: xor eax,eax
0xffb7: test rdx,rdx
0xffba: je 0x10280
0xffc0: movdqu xmm0,XMMword ptr [rdx]
0xffc4: lea rdi,[rsp+0x10]
0xffc9: movaps XMMword ptr [rsp+0x10],xmm0
0xffce: mov qword ptr [rsp+0x8],rdi
0xffd3: movdqu xmm0,XMMword ptr [rdx+0x10]
0xffd8: movaps XMMword ptr [rsp+0x20],xmm0
0xffdd: call 0xfed0
0xffe2: test eax,eax
0xffe4: mov r13d,eax
0xffe7: js 0x103a3
0xffed: test ebx,ebx
0xffef: jns 0xfffa
0xfff1: test r12,r12
0xfff4: je 0x10398
0xfffa: mov eax,dword ptr [rip+0x20c6ec]
0x10000: test eax,eax
0x10002: js 0x10038
0x10004: cmp r13d,0x2
0x10008: je 0x10210
0x1000e: mov rsi,qword ptr [rsp+0x8]
0x10013: test ebx,ebx
0x10015: js 0x10340
0x1001b: mov edi,ebx
0x1001d: call 0x2b90
0x10022: cmp eax,0x0
0x10025: mov ebp,eax
0x10027: jle 0x1035d
0x1002d: call 0x25a0
0x10032: mov dword ptr [rax],0x26
0x10038: test r13d,r13d
0x1003b: mov dword ptr [rip+0x20c6a7],0xffffffff
0x10045: mov dword ptr [rip+0x20c699],0xffffffff
0x1004f: jne 0x101b0
0x10055: mov rsi,qword ptr [rsp+0x8]
0x1005a: test rsi,rsi
0x1005d: je 0x102f0
0x10063: mov rax,qword ptr [rsi]
0x10066: mov rdi,qword ptr [rsi+0x8]
0x1006a: movabs rcx,0x20c49ba5e353f7cf
0x10074: lea r13,[rsp+0x30]
0x10079: mov qword ptr [rsp+0x30],rax
0x1007e: mov rax,rdi
0x10081: sar rdi,0x3f
0x10085: imul rcx
0x10088: mov rax,qword ptr [rsi+0x10]
0x1008c: mov rsi,qword ptr [rsi+0x18]
0x10090: mov qword ptr [rsp+0x40],rax
0x10095: mov rax,rsi
0x10098: sar rsi,0x3f
0x1009c: sar rdx,0x7
0x100a0: sub rdx,rdi
0x100a3: mov qword ptr [rsp+0x38],rdx
0x100a8: imul rcx
0x100ab: mov rcx,rdx
0x100ae: sar rcx,0x7
0x100b2: sub rcx,rsi
0x100b5: mov qword ptr [rsp+0x48],rcx
0x100ba: test ebx,ebx
0x100bc: mov rdx,r13
0x100bf: js 0x10298
0x100c5: xor esi,esi
0x100c7: mov edi,ebx
0x100c9: call 0x2c60
0x100ce: test eax,eax
0x100d0: mov ebp,eax
0x100d2: jne 0x102d0
0x100d8: test r13,r13
0x100db: je 0x102a7
0x100e1: cmp qword ptr [r13+0x8],0x7a11f
0x100e9: setg r12b
0x100ed: cmp qword ptr [r13+0x18],0x7a11f
0x100f5: setg r14b
0x100f9: test r12b,r12b
0x100fc: jne 0x10107
0x100fe: test r14b,r14b
0x10101: je 0x102a7
0x10107: lea rdx,[rsp+0x70]
0x1010c: mov esi,ebx
0x1010e: mov edi,0x1
0x10113: call 0x2a30
0x10118: test eax,eax
0x1011a: jne 0x102a7
0x10120: mov rdx,qword ptr [rsp+0xc8]
0x10128: sub rdx,qword ptr [r13+0x10]
0x1012c: mov rax,qword ptr [rsp+0xb8]
0x10134: sub rax,qword ptr [r13+0x0]
0x10138: movdqa xmm0,XMMword ptr [r13+0x0]
0x1013e: cmp rdx,0x1
0x10142: sete dl
0x10145: movaps XMMword ptr [rsp+0x50],xmm0
0x1014a: and r14d,edx
0x1014d: cmp rax,0x1
0x10151: movdqa xmm0,XMMword ptr [r13+0x10]
0x10157: movaps XMMword ptr [rsp+0x60],xmm0
0x1015c: jne 0x103b0
0x10162: test r12b,r12b
0x10165: je 0x103b0
0x1016b: cmp qword ptr [rsp+0xc0],0x0
0x10174: jne 0x103b0
0x1017a: test r14b,r14b
0x1017d: mov qword ptr [rsp+0x58],0x0
0x10186: je 0x10197
0x10188: cmp qword ptr [rsp+0xd0],0x0
0x10191: je 0x103c8
0x10197: lea rdx,[rsp+0x50]
0x1019c: xor esi,esi
0x1019e: mov edi,ebx
0x101a0: call 0x2c60
0x101a5: xor ebp,ebp
0x101a7: jmp 0x102a7
0x101ac: nop dword ptr [rax+0x0]
0x101b0: cmp r13d,0x3
0x101b4: je 0x101dc
0x101b6: test ebx,ebx
0x101b8: lea rdx,[rsp+0x70]
0x101bd: js 0x10300
0x101c3: mov esi,ebx
0x101c5: mov edi,0x1
0x101ca: call 0x2a30
0x101cf: test eax,eax
0x101d1: setne al
0x101d4: test al,al
0x101d6: jne 0x103a3
0x101dc: cmp qword ptr [rsp+0x8],0x0
0x101e2: je 0x102f0
0x101e8: lea rsi,[rsp+0x8]
0x101ed: lea rdi,[rsp+0x70]
0x101f2: xor ebp,ebp
0x101f4: call 0xfdf0
0x101f9: test al,al
0x101fb: je 0x10055
0x10201: jmp 0x102a7
0x10206: nop word ptr cs:[rax+rax*1+0x0]
0x10210: test ebx,ebx
0x10212: lea rdx,[rsp+0x70]
0x10217: js 0x10320
0x1021d: mov esi,ebx
0x1021f: mov edi,0x1
0x10224: call 0x2a30
0x10229: test eax,eax
0x1022b: setne al
0x1022e: test al,al
0x10230: jne 0x103a3
0x10236: mov rsi,qword ptr [rsp+0x8]
0x1023b: cmp qword ptr [rsi+0x8],0x3ffffffe
0x10243: je 0x10370
0x10249: cmp qword ptr [rsi+0x18],0x3ffffffe
0x10251: mov r13d,0x3
0x10257: jne 0x10013
0x1025d: mov rax,qword ptr [rsp+0xd0]
0x10265: mov rdx,qword ptr [rsp+0xc8]
0x1026d: mov qword ptr [rsi+0x18],rax
0x10271: mov qword ptr [rsi+0x10],rdx
0x10275: jmp 0x10013
0x1027a: nop word ptr [rax+rax*1+0x0]
0x10280: mov qword ptr [rsp+0x8],0x0
0x10289: xor r13d,r13d
0x1028c: jmp 0xffed
0x10291: nop dword ptr [rax+0x0]
0x10298: mov rsi,r12
0x1029b: mov edi,0xffffff9c
0x102a0: call 0x2c60
0x102a5: mov ebp,eax
0x102a7: mov rcx,qword ptr [rsp+0x108]
0x102af: xor rcx,qword ptr fs:0x28
0x102b8: mov eax,ebp
0x102ba: jne 0x103d6
0x102c0: add rsp,0x110
0x102c7: pop rbx
0x102c8: pop rbp
0x102c9: pop r12
0x102cb: pop r13
0x102cd: pop r14
0x102cf: ret 
0x102d0: test r12,r12
0x102d3: mov ebp,0xffffffff
0x102d8: je 0x102a7
0x102da: mov rsi,r13
0x102dd: mov rdi,r12
0x102e0: call 0x2900
0x102e5: mov ebp,eax
0x102e7: jmp 0x102a7
0x102e9: nop dword ptr [rax+0x0]
0x102f0: xor r13d,r13d
0x102f3: jmp 0x100ba
0x102f8: nop dword ptr [rax+rax*1+0x0]
0x10300: mov rsi,r12
0x10303: mov edi,0x1
0x10308: call 0x29e0
0x1030d: test eax,eax
0x1030f: setne al
0x10312: jmp 0x101d4
0x10317: nop word ptr [rax+rax*1+0x0]
0x10320: mov rsi,r12
0x10323: mov edi,0x1
0x10328: call 0x29e0
0x1032d: test eax,eax
0x1032f: setne al
0x10332: jmp 0x1022e
0x10337: nop word ptr [rax+rax*1+0x0]
0x10340: xor ecx,ecx
0x10342: mov rdx,rsi
0x10345: mov edi,0xffffff9c
0x1034a: mov rsi,r12
0x1034d: call 0x2580
0x10352: cmp eax,0x0
0x10355: mov ebp,eax
0x10357: jg 0x1002d
0x1035d: jne 0x103db
0x1035f: mov dword ptr [rip+0x20c383],0x1
0x10369: jmp 0x102a7
0x1036e: xchg ax,ax
0x10370: mov rax,qword ptr [rsp+0xc0]
0x10378: mov rdx,qword ptr [rsp+0xb8]
0x10380: mov r13d,0x3
0x10386: mov qword ptr [rsi],rdx
0x10389: mov qword ptr [rsi+0x8],rax
0x1038d: jmp 0x10013
0x10392: nop word ptr [rax+rax*1+0x0]
0x10398: call 0x25a0
0x1039d: mov dword ptr [rax],0x9
0x103a3: mov ebp,0xffffffff
0x103a8: jmp 0x102a7
0x103ad: nop dword ptr [rax]
0x103b0: test r14b,r14b
0x103b3: je 0x101a5
0x103b9: cmp qword ptr [rsp+0xd0],0x0
0x103c2: jne 0x101a5
0x103c8: mov qword ptr [rsp+0x68],0x0
0x103d1: jmp 0x10197
0x103d6: call 0x2780
0x103db: call 0x25a0
0x103e0: cmp dword ptr [rax],0x26
0x103e3: jne 0x1035f
0x103e9: jmp 0x10038
0x103ee: xchg ax,ax
0x103f0: mov rdx,rsi
0x103f3: mov rsi,rdi
0x103f6: mov edi,0xffffffff
0x103fb: jmp 0xff90
0x10400: push r12
0x10402: push rbp
0x10403: mov r12,rdi
0x10406: push rbx
0x10407: sub rsp,0xd0
0x1040e: mov rax,qword ptr fs:0x28
0x10417: mov qword ptr [rsp+0xc8],rax
0x1041f: xor eax,eax
0x10421: test rsi,rsi
0x10424: je 0x10520
0x1042a: movdqu xmm0,XMMword ptr [rsi]
0x1042e: lea rdi,[rsp+0x10]
0x10433: movaps XMMword ptr [rsp+0x10],xmm0
0x10438: mov qword ptr [rsp+0x8],rdi
0x1043d: movdqu xmm0,XMMword ptr [rsi+0x10]
0x10442: movaps XMMword ptr [rsp+0x20],xmm0
0x10447: call 0xfed0
0x1044c: test eax,eax
0x1044e: mov ebx,eax
0x10450: js 0x10560
0x10456: mov eax,dword ptr [rip+0x20c28c]
0x1045c: test eax,eax
0x1045e: js 0x10496
0x10460: cmp ebx,0x2
0x10463: je 0x10590
0x10469: mov rdx,qword ptr [rsp+0x8]
0x1046e: mov ecx,0x100
0x10473: mov rsi,r12
0x10476: mov edi,0xffffff9c
0x1047b: call 0x2580
0x10480: cmp eax,0x0
0x10483: mov ebp,eax
0x10485: jle 0x10570
0x1048b: call 0x25a0
0x10490: mov dword ptr [rax],0x26
0x10496: test ebx,ebx
0x10498: mov dword ptr [rip+0x20c246],0xffffffff
0x104a2: je 0x10545
0x104a8: cmp ebx,0x3
0x104ab: jne 0x105e8
0x104b1: cmp qword ptr [rsp+0x8],0x0
0x104b7: je 0x104d0
0x104b9: lea rsi,[rsp+0x8]
0x104be: lea rdi,[rsp+0x30]
0x104c3: xor ebp,ebp
0x104c5: call 0xfdf0
0x104ca: test al,al
0x104cc: jne 0x104f8
0x104ce: xchg ax,ax
0x104d0: mov eax,dword ptr [rsp+0x48]
0x104d4: and eax,0xf000
0x104d9: cmp eax,0xa000
0x104de: je 0x10636
0x104e4: mov rdx,qword ptr [rsp+0x8]
0x104e9: mov rsi,r12
0x104ec: mov edi,0xffffffff
0x104f1: call 0xff90
0x104f6: mov ebp,eax
0x104f8: mov rcx,qword ptr [rsp+0xc8]
0x10500: xor rcx,qword ptr fs:0x28
0x10509: mov eax,ebp
0x1050b: jne 0x10646
0x10511: add rsp,0xd0
0x10518: pop rbx
0x10519: pop rbp
0x1051a: pop r12
0x1051c: ret 
0x1051d: nop dword ptr [rax]
0x10520: mov ecx,dword ptr [rip+0x20c1c2]
0x10526: xor edx,edx
0x10528: xor ebx,ebx
0x1052a: mov qword ptr [rsp+0x8],0x0
0x10533: test ecx,ecx
0x10535: jns 0x1046e
0x1053b: mov dword ptr [rip+0x20c1a3],0xffffffff
0x10545: lea rdx,[rsp+0x30]
0x1054a: mov rsi,r12
0x1054d: mov edi,0x1
0x10552: call 0x2760
0x10557: test eax,eax
0x10559: je 0x104d0
0x1055f: nop 
0x10560: mov ebp,0xffffffff
0x10565: jmp 0x104f8
0x10567: nop word ptr [rax+rax*1+0x0]
0x10570: jne 0x1064b
0x10576: mov dword ptr [rip+0x20c16c],0x1
0x10580: mov dword ptr [rip+0x20c15e],0x1
0x1058a: jmp 0x104f8
0x1058f: nop 
0x10590: lea rdx,[rsp+0x30]
0x10595: mov rsi,r12
0x10598: mov edi,0x1
0x1059d: call 0x2760
0x105a2: test eax,eax
0x105a4: jne 0x10560
0x105a6: mov rdx,qword ptr [rsp+0x8]
0x105ab: cmp qword ptr [rdx+0x8],0x3ffffffe
0x105b3: je 0x10618
0x105b5: cmp qword ptr [rdx+0x18],0x3ffffffe
0x105bd: mov ebx,0x3
0x105c2: jne 0x1046e
0x105c8: mov rax,qword ptr [rsp+0x90]
0x105d0: mov rcx,qword ptr [rsp+0x88]
0x105d8: mov qword ptr [rdx+0x18],rax
0x105dc: mov qword ptr [rdx+0x10],rcx
0x105e0: jmp 0x1046e
0x105e5: nop dword ptr [rax]
0x105e8: lea rdx,[rsp+0x30]
0x105ed: mov rsi,r12
0x105f0: mov edi,0x1
0x105f5: call 0x2760
0x105fa: test eax,eax
0x105fc: jne 0x10560
0x10602: cmp qword ptr [rsp+0x8],0x0
0x10608: jne 0x104b9
0x1060e: jmp 0x104d0
0x10613: nop dword ptr [rax+rax*1+0x0]
0x10618: mov rax,qword ptr [rsp+0x80]
0x10620: mov rcx,qword ptr [rsp+0x78]
0x10625: mov ebx,0x3
0x1062a: mov qword ptr [rdx],rcx
0x1062d: mov qword ptr [rdx+0x8],rax
0x10631: jmp 0x1046e
0x10636: call 0x25a0
0x1063b: mov dword ptr [rax],0x26
0x10641: jmp 0x10560
0x10646: call 0x2780
0x1064b: call 0x25a0
0x10650: cmp dword ptr [rax],0x26
0x10653: jne 0x10576
0x10659: jmp 0x10496
0x1065e: xchg ax,ax
0x10706: nop word ptr cs:[rax+rax*1+0x0]
0x10795: nop dword ptr [rax]
0x10798: mov r8,rcx
0x1079b: mov rcx,rdx
0x1079e: lea rdx,[rip+0x6886]
0x107a5: mov esi,0x1
0x107aa: xor eax,eax
0x107ac: call 0x2c20
0x107b1: jmp 0x1069c
0x107b6: nop word ptr cs:[rax+rax*1+0x0]
0x10815: nop dword ptr [rax]
0x10851: nop dword ptr [rax+0x0]
0x10898: nop dword ptr [rax+rax*1+0x0]
0x108e7: nop word ptr [rax+rax*1+0x0]
0x10944: nop dword ptr [rax+0x0]
0x10972: nop word ptr [rax+rax*1+0x0]
0x10a26: nop word ptr cs:[rax+rax*1+0x0]
0x10a77: nop word ptr [rax+rax*1+0x0]
0x10a80: xor r9d,r9d
0x10a83: cmp qword ptr [r8],0x0
0x10a87: je 0x10a9b
0x10a89: nop dword ptr [rax+0x0]
0x10a90: add r9,0x1
0x10a94: cmp qword ptr [r8+r9*8],0x0
0x10a99: jne 0x10a90
0x10a9b: jmp 0x10660
0x10aa0: sub rsp,0x68
0x10aa4: mov r10,r8
0x10aa7: xor r9d,r9d
0x10aaa: mov rax,qword ptr fs:0x28
0x10ab3: mov qword ptr [rsp+0x58],rax
0x10ab8: xor eax,eax
0x10aba: mov r8,rsp
0x10abd: nop dword ptr [rax]
0x10ac0: mov eax,dword ptr [r10]
0x10ac3: cmp eax,0x2f
0x10ac6: ja 0x10b0a
0x10ac8: mov r11d,eax
0x10acb: add r11,qword ptr [r10+0x10]
0x10acf: add eax,0x8
0x10ad2: mov dword ptr [r10],eax
0x10ad5: mov rax,qword ptr [r11]
0x10ad8: test rax,rax
0x10adb: mov qword ptr [r8+r9*8],rax
0x10adf: je 0x10aeb
0x10ae1: add r9,0x1
0x10ae5: cmp r9,0xa
0x10ae9: jne 0x10ac0
0x10aeb: call 0x10660
0x10af0: mov rax,qword ptr [rsp+0x58]
0x10af5: xor rax,qword ptr fs:0x28
0x10afe: jne 0x10b05
0x10b00: add rsp,0x68
0x10b04: ret 
0x10b05: call 0x2780
0x10b0a: mov r11,qword ptr [r10+0x8]
0x10b0e: lea rax,[r11+0x8]
0x10b12: mov qword ptr [r10+0x8],rax
0x10b16: jmp 0x10ad5
0x10b18: nop dword ptr [rax+rax*1+0x0]
0x10be0: call 0x2780
0x10bec: mov rax,rbx
0x10bef: add rbx,0x8
0x10bf3: jmp 0x10ba6
0x10bf5: nop 
0x10bf6: nop word ptr cs:[rax+rax*1+0x0]
0x10c00: push rbx
0x10c01: lea rsi,[rip+0x6471]
0x10c08: mov edx,0x5
0x10c0d: xor edi,edi
0x10c0f: call 0x2730
0x10c14: lea rdx,[rip+0x4ee8]
0x10c1b: mov rsi,rax
0x10c1e: mov edi,0x1
0x10c23: xor eax,eax
0x10c25: call 0x2ab0
0x10c2a: lea rsi,[rip+0x645d]
0x10c31: mov edx,0x5
0x10c36: xor edi,edi
0x10c38: call 0x2730
0x10c3d: lea rcx,[rip+0x4cbc]
0x10c44: lea rdx,[rip+0x4363]
0x10c4b: mov rsi,rax
0x10c4e: mov edi,0x1
0x10c53: xor eax,eax
0x10c55: call 0x2ab0
0x10c5a: mov rbx,qword ptr [rip+0x20b467]
0x10c61: lea rsi,[rip+0x6658]
0x10c68: xor edi,edi
0x10c6a: mov edx,0x5
0x10c6f: call 0x2730
0x10c74: mov rsi,rbx
0x10c77: mov rdi,rax
0x10c7a: pop rbx
0x10c7b: jmp 0x28f0
0x10c91: nop dword ptr [rax+0x0]
0x10cb8: nop dword ptr [rax+rax*1+0x0]
0x10cda: nop word ptr [rax+rax*1+0x0]
0x10ce0: mov rax,rdi
0x10ce3: mul rsi
0x10ce6: mov rdi,rax
0x10ce9: seto al
0x10cec: test rdi,rdi
0x10cef: js 0x10cfb
0x10cf1: movzx eax,al
0x10cf4: test rax,rax
0x10cf7: jne 0x10cfb
0x10cf9: jmp 0x10cc0
0x10cfb: sub rsp,0x8
0x10cff: call 0x10f10
0x10d04: xchg ax,ax
0x10d06: nop word ptr cs:[rax+rax*1+0x0]
0x10d10: jmp 0x10cc0
0x10d12: nop dword ptr [rax+0x0]
0x10d16: nop word ptr cs:[rax+rax*1+0x0]
0x10d42: nop word ptr [rax+rax*1+0x0]
0x10d56: nop word ptr cs:[rax+rax*1+0x0]
0x10d60: mov rax,rsi
0x10d63: mul rdx
0x10d66: mov rsi,rax
0x10d69: seto al
0x10d6c: test rsi,rsi
0x10d6f: js 0x10d7b
0x10d71: movzx eax,al
0x10d74: test rax,rax
0x10d77: jne 0x10d7b
0x10d79: jmp 0x10d20
0x10d7b: sub rsp,0x8
0x10d7f: call 0x10f10
0x10d84: xchg ax,ax
0x10d86: nop word ptr cs:[rax+rax*1+0x0]
0x10d90: test rdi,rdi
0x10d93: mov r9,rdx
0x10d96: mov rcx,qword ptr [rsi]
0x10d99: je 0x10dd0
0x10d9b: xor edx,edx
0x10d9d: movabs rax,0x5555555555555554
0x10da7: div r9
0x10daa: cmp rax,rcx
0x10dad: jbe 0x10deb
0x10daf: mov rax,rcx
0x10db2: shr rax,1
0x10db5: lea rcx,[rax+rcx*1+0x1]
0x10dba: mov qword ptr [rsi],rcx
0x10dbd: imul rcx,r9
0x10dc1: mov rsi,rcx
0x10dc4: jmp 0x10d20
0x10dc9: nop dword ptr [rax+0x0]
0x10dd0: test rcx,rcx
0x10dd3: je 0x10df8
0x10dd5: mov rax,rcx
0x10dd8: mul r9
0x10ddb: seto dl
0x10dde: test rax,rax
0x10de1: movzx edx,dl
0x10de4: js 0x10deb
0x10de6: test rdx,rdx
0x10de9: je 0x10dba
0x10deb: sub rsp,0x8
0x10def: call 0x10f10
0x10df4: nop dword ptr [rax+0x0]
0x10df8: xor edx,edx
0x10dfa: mov eax,0x80
0x10dff: xor r8d,r8d
0x10e02: div r9
0x10e05: test rax,rax
0x10e08: sete r8b
0x10e0c: lea rcx,[r8+rax*1]
0x10e10: jmp 0x10dd5
0x10e12: nop dword ptr [rax+0x0]
0x10e16: nop word ptr cs:[rax+rax*1+0x0]
0x10e20: test rdi,rdi
0x10e23: mov rax,qword ptr [rsi]
0x10e26: je 0x10e50
0x10e28: movabs rdx,0x5555555555555553
0x10e32: cmp rax,rdx
0x10e35: ja 0x10e61
0x10e37: mov rdx,rax
0x10e3a: shr rdx,1
0x10e3d: lea rax,[rdx+rax*1+0x1]
0x10e42: mov qword ptr [rsi],rax
0x10e45: mov rsi,rax
0x10e48: jmp 0x10d20
0x10e4d: nop dword ptr [rax]
0x10e50: test rax,rax
0x10e53: mov edx,0x80
0x10e58: cmove rax,rdx
0x10e5c: test rax,rax
0x10e5f: jns 0x10e42
0x10e61: sub rsp,0x8
0x10e65: call 0x10f10
0x10e6a: nop word ptr [rax+rax*1+0x0]
0x10e70: push rbx
0x10e71: mov rbx,rdi
0x10e74: call 0x10cc0
0x10e79: mov rdx,rbx
0x10e7c: xor esi,esi
0x10e7e: mov rdi,rax
0x10e81: pop rbx
0x10e82: jmp 0x2830
0x10e87: nop word ptr [rax+rax*1+0x0]
0x10e90: mov rax,rdi
0x10e93: sub rsp,0x8
0x10e97: mul rsi
0x10e9a: seto dl
0x10e9d: test rax,rax
0x10ea0: js 0x10eb9
0x10ea2: movzx edx,dl
0x10ea5: test rdx,rdx
0x10ea8: jne 0x10eb9
0x10eaa: call 0x2910
0x10eaf: test rax,rax
0x10eb2: je 0x10eb9
0x10eb4: add rsp,0x8
0x10eb8: ret 
0x10eb9: call 0x10f10
0x10ebe: xchg ax,ax
0x10ee8: nop dword ptr [rax+rax*1+0x0]
0x10f03: nop word ptr cs:[rax+rax*1+0x0]
0x10f0d: nop dword ptr [rax]
0x10f40: call 0x2590
0x10f45: nop word ptr cs:[rax+rax*1+0x0]
0x10f4f: nop 
0x10f50: sub rsp,0x8
0x10f54: or esi,0x200
0x10f5a: call 0x12720
0x10f5f: test rax,rax
0x10f62: je 0x10f70
0x10f64: add rsp,0x8
0x10f68: ret 
0x10f69: nop dword ptr [rax+0x0]
0x10f70: call 0x25a0
0x10f75: cmp dword ptr [rax],0x16
0x10f78: je 0x10f80
0x10f7a: call 0x10f10
0x10f7f: nop 
0x10f80: lea rcx,[rip+0x6429]
0x10f87: lea rsi,[rip+0x63f2]
0x10f8e: lea rdi,[rip+0x6408]
0x10f95: mov edx,0x29
0x10f9a: call 0x2820
0x10f9f: nop 
0x10fa0: mov edx,dword ptr [rdi+0x48]
0x10fa3: mov eax,0x1
0x10fa8: and edx,0x11
0x10fab: cmp edx,0x10
0x10fae: je 0x10fb7
0x10fb0: xor eax,eax
0x10fb2: cmp edx,0x11
0x10fb5: je 0x10fc0
0x10fb7: repz ret
0x10fb9: nop dword ptr [rax+0x0]
0x10fc0: cmp qword ptr [rsi+0x58],0x0
0x10fc5: setne al
0x10fc8: ret 
0x10fc9: nop dword ptr [rax+0x0]
0x11054: nop dword ptr [rax+0x0]
0x11062: call 0x2780
0x11067: nop word ptr [rax+rax*1+0x0]
0x11070: test rdi,rdi
0x11073: push rbx
0x11074: mov rbx,rdi
0x11077: je 0x1108a
0x11079: call 0x2a50
0x1107e: test eax,eax
0x11080: je 0x1108a
0x11082: test dword ptr [rbx],0x100
0x11088: jne 0x11098
0x1108a: mov rdi,rbx
0x1108d: pop rbx
0x1108e: jmp 0x2a10
0x11093: nop dword ptr [rax+rax*1+0x0]
0x11098: mov rdi,rbx
0x1109b: mov edx,0x1
0x110a0: xor esi,esi
0x110a2: call 0x110e0
0x110a7: mov rdi,rbx
0x110aa: pop rbx
0x110ab: jmp 0x2a10
0x110b0: xor eax,eax
0x110b2: mov rcx,qword ptr [rdi+0x20]
0x110b6: cmp qword ptr [rdi+0x28],rcx
0x110ba: ja 0x110d7
0x110bc: mov rax,qword ptr [rdi+0x10]
0x110c0: sub rax,qword ptr [rdi+0x8]
0x110c4: test dword ptr [rdi],0x100
0x110ca: je 0x110d7
0x110cc: mov rdx,qword ptr [rdi+0x58]
0x110d0: sub rdx,qword ptr [rdi+0x48]
0x110d4: add rax,rdx
0x110d7: repz ret
0x110d9: nop dword ptr [rax+0x0]
0x110e0: mov rax,qword ptr [rdi+0x8]
0x110e4: cmp qword ptr [rdi+0x10],rax
0x110e8: je 0x110f0
0x110ea: jmp 0x2b40
0x110ef: nop 
0x110f0: mov rax,qword ptr [rdi+0x20]
0x110f4: cmp qword ptr [rdi+0x28],rax
0x110f8: jne 0x110ea
0x110fa: cmp qword ptr [rdi+0x48],0x0
0x110ff: jne 0x110ea
0x11101: push r12
0x11103: push rbp
0x11104: mov r12d,edx
0x11107: push rbx
0x11108: mov rbp,rsi
0x1110b: mov rbx,rdi
0x1110e: call 0x29c0
0x11113: mov edx,r12d
0x11116: mov rsi,rbp
0x11119: mov edi,eax
0x1111b: call 0x2800
0x11120: cmp rax,0xffffffffffffffff
0x11124: je 0x11132
0x11126: and dword ptr [rbx],0xffffffef
0x11129: mov qword ptr [rbx+0x90],rax
0x11130: xor eax,eax
0x11132: pop rbx
0x11133: pop rbp
0x11134: pop r12
0x11136: ret 
0x11137: nop word ptr [rax+rax*1+0x0]
0x11140: xor eax,eax
0x11142: mov rdx,qword ptr [rsi+0x8]
0x11146: cmp qword ptr [rdi+0x8],rdx
0x1114a: je 0x11150
0x1114c: repz ret
0x1114e: xchg ax,ax
0x11150: mov rax,qword ptr [rsi]
0x11153: cmp qword ptr [rdi],rax
0x11156: sete al
0x11159: ret 
0x1115a: nop word ptr [rax+rax*1+0x0]
0x11160: mov rax,qword ptr [rdi+0x8]
0x11164: xor edx,edx
0x11166: div rsi
0x11169: mov rax,rdx
0x1116c: ret 
0x1116d: nop dword ptr [rax]
0x11170: mov rax,qword ptr [rdi]
0x11173: xor edx,edx
0x11175: div rsi
0x11178: mov rax,rdx
0x1117b: ret 
0x1117c: nop dword ptr [rax+0x0]
0x11180: mov rax,qword ptr [rsi]
0x11183: cmp qword ptr [rdi],rax
0x11186: sete al
0x11189: ret 
0x1118a: nop word ptr [rax+rax*1+0x0]
0x11190: mov rdx,qword ptr [rdi]
0x11193: mov rax,qword ptr [rsi]
0x11196: mov rax,qword ptr [rax+0x80]
0x1119d: cmp qword ptr [rdx+0x80],rax
0x111a4: jb 0x111b0
0x111a6: seta al
0x111a9: movzx eax,al
0x111ac: ret 
0x111ad: nop dword ptr [rax]
0x111b0: mov eax,0xffffffff
0x111b5: ret 
0x111b6: nop word ptr cs:[rax+rax*1+0x0]
0x111c0: push r12
0x111c2: push rbp
0x111c3: mov rbp,rsi
0x111c6: push rbx
0x111c7: cmp qword ptr [rbp+0x58],0x0
0x111cc: lea rbx,[rsi+0x78]
0x111d0: mov r12,rdi
0x111d3: mov eax,dword ptr [rdi+0x48]
0x111d6: mov rsi,qword ptr [rsi+0x30]
0x111da: jne 0x11240
0x111dc: test al,0x1
0x111de: je 0x11240
0x111e0: mov rdx,rbx
0x111e3: mov edi,0x1
0x111e8: call 0x29e0
0x111ed: test eax,eax
0x111ef: je 0x1126b
0x111f1: call 0x25a0
0x111f6: mov r12,rax
0x111f9: mov eax,dword ptr [rax]
0x111fb: cmp eax,0x2
0x111fe: je 0x11310
0x11204: lea rdi,[rbx+0x8]
0x11208: mov dword ptr [rbp+0x40],eax
0x1120b: mov qword ptr [rbp+0x78],0x0
0x11213: mov qword ptr [rbx+0x88],0x0
0x1121e: xor eax,eax
0x11220: and rdi,0xfffffffffffffff8
0x11224: sub rbx,rdi
0x11227: lea ecx,[rbx+0x90]
0x1122d: shr ecx,0x3
0x11230: rep stos qword ptr es:[rdi],rax
0x11233: mov eax,0xa
0x11238: pop rbx
0x11239: pop rbp
0x1123a: pop r12
0x1123c: ret 
0x1123d: nop dword ptr [rax]
0x11240: test al,0x2
0x11242: jne 0x111e0
0x11244: test dl,dl
0x11246: jne 0x111e0
0x11248: mov rdx,rsi
0x1124b: mov esi,dword ptr [r12+0x2c]
0x11250: mov r8d,0x100
0x11256: mov rcx,rbx
0x11259: mov edi,0x1
0x1125e: call 0x27c0
0x11263: test eax,eax
0x11265: jne 0x11300
0x1126b: mov eax,dword ptr [rbp+0x90]
0x11271: and eax,0xf000
0x11276: cmp eax,0x4000
0x1127b: je 0x112a0
0x1127d: cmp eax,0xa000
0x11282: je 0x11358
0x11288: cmp eax,0x8000
0x1128d: sete al
0x11290: movzx eax,al
0x11293: pop rbx
0x11294: lea eax,[rax+rax*4+0x3]
0x11298: pop rbp
0x11299: pop r12
0x1129b: ret 
0x1129c: nop dword ptr [rax+0x0]
0x112a0: mov rax,qword ptr [rbp+0x88]
0x112a7: cmp rax,0x1
0x112ab: jbe 0x11330
0x112b1: cmp qword ptr [rbp+0x58],0x0
0x112b6: jle 0x11330
0x112b8: test byte ptr [r12+0x48],0x20
0x112be: lea rdx,[rax-0x2]
0x112c2: cmove rax,rdx
0x112c6: cmp byte ptr [rbp+0x108],0x2e
0x112cd: mov qword ptr [rbp+0x68],rax
0x112d1: mov eax,0x1
0x112d6: jne 0x11238
0x112dc: cmp byte ptr [rbp+0x109],0x0
0x112e3: jne 0x11368
0x112e9: cmp qword ptr [rbp+0x58],0x1
0x112ee: sbb eax,eax
0x112f0: and eax,0xfffffffc
0x112f3: add eax,0x5
0x112f6: jmp 0x11238
0x112fb: nop dword ptr [rax+rax*1+0x0]
0x11300: call 0x25a0
0x11305: mov eax,dword ptr [rax]
0x11307: jmp 0x11204
0x1130c: nop dword ptr [rax+0x0]
0x11310: mov rsi,qword ptr [rbp+0x30]
0x11314: mov rdx,rbx
0x11317: mov edi,0x1
0x1131c: call 0x2760
0x11321: test eax,eax
0x11323: je 0x11340
0x11325: mov eax,dword ptr [r12]
0x11329: jmp 0x11204
0x1132e: xchg ax,ax
0x11330: mov rax,0xffffffffffffffff
0x11337: jmp 0x112c6
0x11339: nop dword ptr [rax+0x0]
0x11340: mov dword ptr [r12],0x0
0x11348: mov eax,0xd
0x1134d: jmp 0x11238
0x11352: nop word ptr [rax+rax*1+0x0]
0x11358: mov eax,0xc
0x1135d: jmp 0x11238
0x11362: nop word ptr [rax+rax*1+0x0]
0x11368: mov edx,dword ptr [rbp+0x108]
0x1136e: and edx,0xffff00
0x11374: cmp edx,0x2e00
0x1137a: jne 0x11238
0x11380: jmp 0x112e9
0x11385: nop 
0x11386: nop word ptr cs:[rax+rax*1+0x0]
0x11390: push r13
0x11392: push r12
0x11394: mov r12,rdx
0x11397: push rbp
0x11398: push rbx
0x11399: mov rbp,rdi
0x1139c: mov rbx,rsi
0x1139f: sub rsp,0x8
0x113a3: cmp qword ptr [rbp+0x38],rdx
0x113a7: mov r13,qword ptr [rdi+0x40]
0x113ab: mov rdi,qword ptr [rdi+0x10]
0x113af: jae 0x113e5
0x113b1: lea rsi,[rdx+0x28]
0x113b5: movabs rax,0x1fffffffffffffff
0x113bf: cmp rsi,rax
0x113c2: mov qword ptr [rbp+0x38],rsi
0x113c6: ja 0x11464
0x113cc: shl rsi,0x3
0x113d0: call 0x2a70
0x113d5: test rax,rax
0x113d8: mov rdi,rax
0x113db: je 0x11460
0x113e1: mov qword ptr [rbp+0x10],rax
0x113e5: test rbx,rbx
0x113e8: je 0x11401
0x113ea: mov rdx,rdi
0x113ed: nop dword ptr [rax]
0x113f0: add rdx,0x8
0x113f4: mov qword ptr [rdx-0x8],rbx
0x113f8: mov rbx,qword ptr [rbx+0x10]
0x113fc: test rbx,rbx
0x113ff: jne 0x113f0
0x11401: mov rcx,r13
0x11404: mov edx,0x8
0x11409: mov rsi,r12
0x1140c: call 0x2630
0x11411: mov r8,qword ptr [rbp+0x10]
0x11415: mov rcx,r12
0x11418: sub rcx,0x1
0x1141c: mov rax,qword ptr [r8]
0x1141f: je 0x11490
0x11421: mov rdi,rax
0x11424: mov rdx,r8
0x11427: jmp 0x11433
0x11429: nop dword ptr [rax+0x0]
0x11430: mov rdi,qword ptr [rdx]
0x11433: mov rsi,qword ptr [rdx+0x8]
0x11437: add rdx,0x8
0x1143b: sub rcx,0x1
0x1143f: mov qword ptr [rdi+0x10],rsi
0x11443: jne 0x11430
0x11445: mov rdx,qword ptr [r8+r12*8-0x8]
0x1144a: mov qword ptr [rdx+0x10],0x0
0x11452: add rsp,0x8
0x11456: pop rbx
0x11457: pop rbp
0x11458: pop r12
0x1145a: pop r13
0x1145c: ret 
0x1145d: nop dword ptr [rax]
0x11460: mov rdi,qword ptr [rbp+0x10]
0x11464: call 0x2c80
0x11469: mov qword ptr [rbp+0x10],0x0
0x11471: mov qword ptr [rbp+0x38],0x0
0x11479: add rsp,0x8
0x1147d: mov rax,rbx
0x11480: pop rbx
0x11481: pop rbp
0x11482: pop r12
0x11484: pop r13
0x11486: ret 
0x11487: nop word ptr [rax+rax*1+0x0]
0x11490: mov rdx,rax
0x11493: jmp 0x1144a
0x11495: nop 
0x11496: nop word ptr cs:[rax+rax*1+0x0]
0x114a0: push r13
0x114a2: push r12
0x114a4: mov r12,rdi
0x114a7: push rbp
0x114a8: lea rdi,[rdx+0x110]
0x114af: push rbx
0x114b0: mov r13,rsi
0x114b3: mov rbp,rdx
0x114b6: sub rsp,0x8
0x114ba: and rdi,0xfffffffffffffff8
0x114be: call 0x2a00
0x114c3: test rax,rax
0x114c6: mov rbx,rax
0x114c9: je 0x1151c
0x114cb: lea rdi,[rax+0x108]
0x114d2: mov rdx,rbp
0x114d5: mov rsi,r13
0x114d8: call 0x29a0
0x114dd: mov rax,qword ptr [r12+0x20]
0x114e2: mov byte ptr [rbx+rbp*1+0x108],0x0
0x114ea: mov qword ptr [rbx+0x60],rbp
0x114ee: mov qword ptr [rbx+0x50],r12
0x114f2: mov dword ptr [rbx+0x40],0x0
0x114f9: mov qword ptr [rbx+0x18],0x0
0x11501: mov qword ptr [rbx+0x38],rax
0x11505: mov dword ptr [rbx+0x72],0x30000
0x1150c: mov qword ptr [rbx+0x20],0x0
0x11514: mov qword ptr [rbx+0x28],0x0
0x1151c: add rsp,0x8
0x11520: mov rax,rbx
0x11523: pop rbx
0x11524: pop rbp
0x11525: pop r12
0x11527: pop r13
0x11529: ret 
0x1152a: nop word ptr [rax+rax*1+0x0]
0x11530: test rdi,rdi
0x11533: je 0x11570
0x11535: push rbp
0x11536: push rbx
0x11537: mov rbx,rdi
0x1153a: sub rsp,0x8
0x1153e: xchg ax,ax
0x11540: mov rdi,qword ptr [rbx+0x18]
0x11544: mov rbp,qword ptr [rbx+0x10]
0x11548: test rdi,rdi
0x1154b: je 0x11552
0x1154d: call 0x28a0
0x11552: mov rdi,rbx
0x11555: mov rbx,rbp
0x11558: call 0x2c80
0x1155d: test rbp,rbp
0x11560: jne 0x11540
0x11562: add rsp,0x8
0x11566: pop rbx
0x11567: pop rbp
0x11568: ret 
0x11569: nop dword ptr [rax+0x0]
0x11570: repz ret
0x11572: nop dword ptr [rax+0x0]
0x11576: nop word ptr cs:[rax+rax*1+0x0]
0x11580: push rbx
0x11581: mov rbx,rdi
0x11584: jmp 0x1159c
0x11586: nop word ptr cs:[rax+rax*1+0x0]
0x11590: mov rdi,rbx
0x11593: call 0x13d20
0x11598: test eax,eax
0x1159a: jns 0x115b0
0x1159c: mov rdi,rbx
0x1159f: call 0x13cd0
0x115a4: test al,al
0x115a6: je 0x11590
0x115a8: pop rbx
0x115a9: ret 
0x115aa: nop word ptr [rax+rax*1+0x0]
0x115b0: mov edi,eax
0x115b2: call 0x2870
0x115b7: jmp 0x1159c
0x115b9: nop dword ptr [rax+0x0]
0x115c0: push r13
0x115c2: push r12
0x115c4: push rbp
0x115c5: push rbx
0x115c6: sub rsp,0x98
0x115cd: mov rbx,qword ptr [rdi+0x50]
0x115d1: mov rax,qword ptr fs:0x28
0x115da: mov qword ptr [rsp+0x88],rax
0x115e2: xor eax,eax
0x115e4: test byte ptr [rbx+0x49],0x2
0x115e8: je 0x11652
0x115ea: mov r12,qword ptr [rbx+0x50]
0x115ee: mov rbp,rdi
0x115f1: mov r13d,esi
0x115f4: test r12,r12
0x115f7: je 0x11620
0x115f9: mov rax,qword ptr [rbp+0x78]
0x115fd: mov rsi,rsp
0x11600: mov rdi,r12
0x11603: mov qword ptr [rsp],rax
0x11607: call 0xbd80
0x1160c: test rax,rax
0x1160f: je 0x1164d
0x11611: mov rbx,qword ptr [rax+0x8]
0x11615: jmp 0x11654
0x11617: nop word ptr [rax+rax*1+0x0]
0x11620: mov r8,qword ptr [rip+0x20a9a1]
0x11627: lea rcx,[rip+0xfffffffffffffb52]
0x1162e: lea rdx,[rip+0xfffffffffffffb3b]
0x11635: xor esi,esi
0x11637: mov edi,0xd
0x1163c: call 0xbff0
0x11641: test rax,rax
0x11644: mov r12,rax
0x11647: mov qword ptr [rbx+0x50],rax
0x1164b: jne 0x115f9
0x1164d: test r13d,r13d
0x11650: jns 0x11680
0x11652: xor ebx,ebx
0x11654: mov rdx,qword ptr [rsp+0x88]
0x1165c: xor rdx,qword ptr fs:0x28
0x11665: mov rax,rbx
0x11668: jne 0x116e2
0x1166a: add rsp,0x98
0x11671: pop rbx
0x11672: pop rbp
0x11673: pop r12
0x11675: pop r13
0x11677: ret 
0x11678: nop dword ptr [rax+rax*1+0x0]
0x11680: lea rsi,[rsp+0x10]
0x11685: mov edi,r13d
0x11688: call 0x2bb0
0x1168d: test eax,eax
0x1168f: jne 0x11652
0x11691: test r12,r12
0x11694: mov rbx,qword ptr [rsp+0x10]
0x11699: je 0x11654
0x1169b: mov edi,0x10
0x116a0: call 0x2a00
0x116a5: test rax,rax
0x116a8: mov r13,rax
0x116ab: je 0x11654
0x116ad: mov rax,qword ptr [rbp+0x78]
0x116b1: mov qword ptr [r13+0x8],rbx
0x116b5: mov rsi,r13
0x116b8: mov rdi,r12
0x116bb: mov qword ptr [r13+0x0],rax
0x116bf: call 0xc7f0
0x116c4: test rax,rax
0x116c7: je 0x116d8
0x116c9: cmp r13,rax
0x116cc: jne 0x116e7
0x116ce: mov rbx,qword ptr [rsp+0x10]
0x116d3: jmp 0x11654
0x116d8: mov rdi,r13
0x116db: call 0x2c80
0x116e0: jmp 0x116ce
0x116e2: call 0x2780
0x116e7: call 0x2590
0x116ec: nop dword ptr [rax+0x0]
0x116f0: sub rsp,0x8
0x116f4: call 0x115c0
0x116f9: cmp rax,0x52654973
0x116ff: je 0x11750
0x11701: jle 0x11730
0x11703: cmp rax,0x58465342
0x11709: je 0x11750
0x1170b: mov edx,0xff534d42
0x11710: cmp rax,rdx
0x11713: je 0x11745
0x11715: cmp rax,0x5346414f
0x1171b: je 0x11745
0x1171d: mov eax,0x1
0x11722: add rsp,0x8
0x11726: ret 
0x11727: nop word ptr [rax+rax*1+0x0]
0x11730: cmp rax,0x6969
0x11736: je 0x11745
0x11738: cmp rax,0x9fa0
0x1173e: je 0x11745
0x11740: test rax,rax
0x11743: jne 0x1171d
0x11745: xor eax,eax
0x11747: add rsp,0x8
0x1174b: ret 
0x1174c: nop dword ptr [rax+0x0]
0x11750: mov eax,0x2
0x11755: add rsp,0x8
0x11759: ret 
0x1175a: nop word ptr [rax+rax*1+0x0]
0x11760: push rbp
0x11761: push rbx
0x11762: mov ebp,esi
0x11764: mov rbx,rdi
0x11767: sub rsp,0x8
0x1176b: mov esi,dword ptr [rdi+0x2c]
0x1176e: cmp esi,ebp
0x11770: jne 0x11777
0x11772: cmp esi,0xffffff9c
0x11775: jne 0x117c1
0x11777: test dl,dl
0x11779: jne 0x11790
0x1177b: test byte ptr [rbx+0x48],0x4
0x1177f: jne 0x11785
0x11781: test esi,esi
0x11783: jns 0x117b0
0x11785: mov dword ptr [rbx+0x2c],ebp
0x11788: add rsp,0x8
0x1178c: pop rbx
0x1178d: pop rbp
0x1178e: ret 
0x1178f: nop 
0x11790: lea rdi,[rbx+0x60]
0x11794: call 0x13ce0
0x11799: test eax,eax
0x1179b: js 0x11785
0x1179d: mov edi,eax
0x1179f: call 0x2870
0x117a4: mov dword ptr [rbx+0x2c],ebp
0x117a7: add rsp,0x8
0x117ab: pop rbx
0x117ac: pop rbp
0x117ad: ret 
0x117ae: xchg ax,ax
0x117b0: mov edi,esi
0x117b2: call 0x2870
0x117b7: mov dword ptr [rbx+0x2c],ebp
0x117ba: add rsp,0x8
0x117be: pop rbx
0x117bf: pop rbp
0x117c0: ret 
0x117c1: call 0x2590
0x117c6: nop word ptr cs:[rax+rax*1+0x0]
0x117d0: push rbp
0x117d1: push rbx
0x117d2: mov rbx,rdi
0x117d5: sub rsp,0x8
0x117d9: mov edx,dword ptr [rdi+0x48]
0x117dc: mov ebp,edx
0x117de: and ebp,0x4
0x117e1: jne 0x11828
0x117e3: and dh,0x2
0x117e6: jne 0x11810
0x117e8: mov edi,dword ptr [rdi+0x28]
0x117eb: xor ebp,ebp
0x117ed: call 0x2a60
0x117f2: test eax,eax
0x117f4: setne bpl
0x117f8: lea rdi,[rbx+0x60]
0x117fc: call 0x11580
0x11801: add rsp,0x8
0x11805: mov eax,ebp
0x11807: pop rbx
0x11808: pop rbp
0x11809: ret 
0x1180a: nop word ptr [rax+rax*1+0x0]
0x11810: mov edx,0x1
0x11815: mov esi,0xffffff9c
0x1181a: call 0x11760
0x1181f: jmp 0x117f8
0x11821: nop dword ptr [rax+0x0]
0x11828: xor ebp,ebp
0x1182a: jmp 0x117f8
0x1182c: nop dword ptr [rax+0x0]
0x11830: push rbx
0x11831: mov rcx,qword ptr [rsi]
0x11834: mov rbx,rdi
0x11837: mov rdi,qword ptr [rdi]
0x1183a: lea rax,[rcx+rdx*1+0x100]
0x11842: cmp rcx,rax
0x11845: ja 0x11868
0x11847: mov qword ptr [rsi],rax
0x1184a: mov rsi,rax
0x1184d: call 0x2a70
0x11852: test rax,rax
0x11855: je 0x11888
0x11857: mov qword ptr [rbx],rax
0x1185a: mov eax,0x1
0x1185f: pop rbx
0x11860: ret 
0x11861: nop dword ptr [rax+0x0]
0x11868: call 0x2c80
0x1186d: mov qword ptr [rbx],0x0
0x11874: call 0x25a0
0x11879: mov dword ptr [rax],0x24
0x1187f: xor eax,eax
0x11881: pop rbx
0x11882: ret 
0x11883: nop dword ptr [rax+rax*1+0x0]
0x11888: mov rdi,qword ptr [rbx]
0x1188b: call 0x2c80
0x11890: mov qword ptr [rbx],0x0
0x11897: xor eax,eax
0x11899: pop rbx
0x1189a: ret 
0x1189b: nop dword ptr [rax+rax*1+0x0]
0x118a0: and edi,0x102
0x118a6: push rbx
0x118a7: mov rbx,rsi
0x118aa: je 0x118e0
0x118ac: mov r8,qword ptr [rip+0x20a715]
0x118b3: lea rcx,[rip+0xfffffffffffff886]
0x118ba: lea rdx,[rip+0xfffffffffffff89f]
0x118c1: xor esi,esi
0x118c3: mov edi,0x1f
0x118c8: call 0xbff0
0x118cd: test rax,rax
0x118d0: mov qword ptr [rbx],rax
0x118d3: setne al
0x118d6: pop rbx
0x118d7: ret 
0x118d8: nop dword ptr [rax+rax*1+0x0]
0x118e0: mov edi,0x20
0x118e5: call 0x2a00
0x118ea: mov rdi,rax
0x118ed: mov qword ptr [rbx],rax
0x118f0: xor eax,eax
0x118f2: test rdi,rdi
0x118f5: je 0x118d6
0x118f7: call 0x13a70
0x118fc: mov eax,0x1
0x11901: pop rbx
0x11902: ret 
0x11903: nop dword ptr [rax]
0x11906: nop word ptr cs:[rax+rax*1+0x0]
0x11910: mov rax,rdx
0x11913: mov edx,esi
0x11915: shl edx,0xd
0x11918: and edx,0x20000
0x1191e: or edx,0x90900
0x11924: and esi,0x200
0x1192a: jne 0x11940
0x1192c: mov rdi,rax
0x1192f: mov esi,edx
0x11931: xor eax,eax
0x11933: jmp 0xb1f0
0x11938: nop dword ptr [rax+rax*1+0x0]
0x11940: mov rsi,rax
0x11943: xor eax,eax
0x11945: jmp 0x13da0
0x1194a: nop word ptr [rax+rax*1+0x0]
0x11950: push r15
0x11952: push r14
0x11954: mov r14,rsi
0x11957: push r13
0x11959: push r12
0x1195b: mov r13,rdi
0x1195e: push rbp
0x1195f: push rbx
0x11960: mov r12d,edx
0x11963: mov rbp,rcx
0x11966: sub rsp,0xb8
0x1196d: mov ebx,dword ptr [rdi+0x48]
0x11970: mov rax,qword ptr fs:0x28
0x11979: mov qword ptr [rsp+0xa8],rax
0x11981: xor eax,eax
0x11983: mov r9d,ebx
0x11986: and r9d,0x4
0x1198a: test rcx,rcx
0x1198d: je 0x11a40
0x11993: lea rdx,[rip+0x4151]
0x1199a: mov ecx,0x3
0x1199f: mov rsi,rbp
0x119a2: mov rdi,rdx
0x119a5: repz cmps byte ptr ds:[rsi],byte ptr es:[rdi]
0x119a7: seta al
0x119aa: sbb al,0x0
0x119ac: test al,al
0x119ae: jne 0x11a40
0x119b4: test r9d,r9d
0x119b7: jne 0x11a45
0x119bd: test r12d,r12d
0x119c0: jns 0x11baa
0x119c6: test bh,0x2
0x119c9: jne 0x11b10
0x119cf: mov byte ptr [rsp+0xf],0x1
0x119d4: mov edi,dword ptr [r13+0x2c]
0x119d8: mov rdx,rbp
0x119db: mov esi,ebx
0x119dd: call 0x11910
0x119e2: test eax,eax
0x119e4: mov r15d,eax
0x119e7: js 0x11b9b
0x119ed: mov ebx,dword ptr [r13+0x48]
0x119f1: test bl,0x2
0x119f4: je 0x11a9a
0x119fa: nop word ptr [rax+rax*1+0x0]
0x11a00: lea rdx,[rsp+0x10]
0x11a05: mov esi,r15d
0x11a08: mov edi,0x1
0x11a0d: call 0x2a30
0x11a12: test eax,eax
0x11a14: je 0x11ae0
0x11a1a: mov ebx,0xffffffff
0x11a1f: test r12d,r12d
0x11a22: jns 0x11a55
0x11a24: call 0x25a0
0x11a29: mov r12d,dword ptr [rax]
0x11a2c: mov rbp,rax
0x11a2f: mov edi,r15d
0x11a32: call 0x2870
0x11a37: mov dword ptr [rbp+0x0],r12d
0x11a3b: jmp 0x11a55
0x11a3d: nop dword ptr [rax]
0x11a40: test r9d,r9d
0x11a43: je 0x11a80
0x11a45: and bh,0x2
0x11a48: je 0x11a53
0x11a4a: test r12d,r12d
0x11a4d: jns 0x11b00
0x11a53: xor ebx,ebx
0x11a55: mov rcx,qword ptr [rsp+0xa8]
0x11a5d: xor rcx,qword ptr fs:0x28
0x11a66: mov eax,ebx
0x11a68: jne 0x11ba5
0x11a6e: add rsp,0xb8
0x11a75: pop rbx
0x11a76: pop rbp
0x11a77: pop r12
0x11a79: pop r13
0x11a7b: pop r14
0x11a7d: pop r15
0x11a7f: ret 
0x11a80: test r12d,r12d
0x11a83: js 0x11bc0
0x11a89: test bl,0x2
0x11a8c: mov r15d,r12d
0x11a8f: mov byte ptr [rsp+0xf],0x0
0x11a94: jne 0x11a00
0x11a9a: test rbp,rbp
0x11a9d: je 0x11ac0
0x11a9f: lea rdx,[rip+0x4045]
0x11aa6: mov ecx,0x3
0x11aab: mov rsi,rbp
0x11aae: mov rdi,rdx
0x11ab1: repz cmps byte ptr ds:[rsi],byte ptr es:[rdi]
0x11ab3: seta al
0x11ab6: sbb al,0x0
0x11ab8: test al,al
0x11aba: je 0x11a00
0x11ac0: and bh,0x2
0x11ac3: jne 0x11b58
0x11ac9: mov edi,r15d
0x11acc: call 0x2a60
0x11ad1: mov ebx,eax
0x11ad3: jmp 0x11a1f
0x11ad8: nop dword ptr [rax+rax*1+0x0]
0x11ae0: mov rax,qword ptr [rsp+0x10]
0x11ae5: cmp qword ptr [r14+0x78],rax
0x11ae9: je 0x11b80
0x11aef: call 0x25a0
0x11af4: mov dword ptr [rax],0x2
0x11afa: jmp 0x11a1a
0x11aff: nop 
0x11b00: mov edi,r12d
0x11b03: xor ebx,ebx
0x11b05: call 0x2870
0x11b0a: jmp 0x11a55
0x11b0f: nop 
0x11b10: lea r15,[r13+0x60]
0x11b14: mov rdi,r15
0x11b17: call 0x13cd0
0x11b1c: test al,al
0x11b1e: mov byte ptr [rsp+0xf],al
0x11b22: jne 0x119d4
0x11b28: mov rdi,r15
0x11b2b: call 0x13d20
0x11b30: test eax,eax
0x11b32: mov r15d,eax
0x11b35: mov ebx,dword ptr [r13+0x48]
0x11b39: js 0x119cf
0x11b3f: test bl,0x2
0x11b42: mov r12d,eax
0x11b45: mov byte ptr [rsp+0xf],0x1
0x11b4a: je 0x11ac0
0x11b50: jmp 0x11a00
0x11b55: nop dword ptr [rax]
0x11b58: movzx r14d,byte ptr [rsp+0xf]
0x11b5e: mov esi,r15d
0x11b61: mov rdi,r13
0x11b64: xor ebx,ebx
0x11b66: xor r14d,0x1
0x11b6a: movzx edx,r14b
0x11b6e: call 0x11760
0x11b73: jmp 0x11a55
0x11b78: nop dword ptr [rax+rax*1+0x0]
0x11b80: mov rax,qword ptr [rsp+0x18]
0x11b85: cmp qword ptr [r14+0x80],rax
0x11b8c: jne 0x11aef
0x11b92: mov ebx,dword ptr [r13+0x48]
0x11b96: jmp 0x11ac0
0x11b9b: mov ebx,0xffffffff
0x11ba0: jmp 0x11a55
0x11ba5: call 0x2780
0x11baa: test bl,0x2
0x11bad: mov r15d,r12d
0x11bb0: mov byte ptr [rsp+0xf],0x1
0x11bb5: je 0x11aa6
0x11bbb: jmp 0x11a00
0x11bc0: mov byte ptr [rsp+0xf],0x0
0x11bc5: jmp 0x119d4
0x11bca: nop word ptr [rax+rax*1+0x0]
0x11bd0: and edi,0x102
0x11bd6: push r12
0x11bd8: mov r12,rsi
0x11bdb: push rbp
0x11bdc: push rbx
0x11bdd: mov rbx,rdx
0x11be0: je 0x11c50
0x11be2: mov edi,0x18
0x11be7: call 0x2a00
0x11bec: test rax,rax
0x11bef: mov rbp,rax
0x11bf2: je 0x11c78
0x11bf8: mov rax,qword ptr [rbx+0x78]
0x11bfc: mov rdi,qword ptr [r12]
0x11c00: mov rsi,rbp
0x11c03: mov qword ptr [rbp+0x10],rbx
0x11c07: mov qword ptr [rbp+0x0],rax
0x11c0b: mov rax,qword ptr [rbx+0x80]
0x11c12: mov qword ptr [rbp+0x8],rax
0x11c16: call 0xc7f0
0x11c1b: cmp rbp,rax
0x11c1e: mov r12,rax
0x11c21: je 0x11c41
0x11c23: mov rdi,rbp
0x11c26: call 0x2c80
0x11c2b: test r12,r12
0x11c2e: je 0x11c78
0x11c30: mov rax,qword ptr [r12+0x10]
0x11c35: mov ecx,0x2
0x11c3a: mov word ptr [rbx+0x70],cx
0x11c3e: mov qword ptr [rbx],rax
0x11c41: pop rbx
0x11c42: mov eax,0x1
0x11c47: pop rbp
0x11c48: pop r12
0x11c4a: ret 
0x11c4b: nop dword ptr [rax+rax*1+0x0]
0x11c50: mov rdi,qword ptr [r12]
0x11c54: lea rsi,[rdx+0x78]
0x11c58: call 0x13a80
0x11c5d: test al,al
0x11c5f: je 0x11c41
0x11c61: mov edx,0x2
0x11c66: mov qword ptr [rbx],rbx
0x11c69: mov word ptr [rbx+0x70],dx
0x11c6d: pop rbx
0x11c6e: pop rbp
0x11c6f: pop r12
0x11c71: ret 
0x11c72: nop word ptr [rax+rax*1+0x0]
0x11c78: pop rbx
0x11c79: xor eax,eax
0x11c7b: pop rbp
0x11c7c: pop r12
0x11c7e: ret 
0x11c7f: nop 
0x11c80: sub rsp,0x28
0x11c84: mov rcx,rsi
0x11c87: mov rax,qword ptr fs:0x28
0x11c90: mov qword ptr [rsp+0x18],rax
0x11c95: xor eax,eax
0x11c97: and edi,0x102
0x11c9d: jne 0x11ce0
0x11c9f: mov rax,qword ptr [rdx+0x8]
0x11ca3: test rax,rax
0x11ca6: je 0x11cc5
0x11ca8: cmp qword ptr [rax+0x58],0x0
0x11cad: js 0x11cc5
0x11caf: mov rcx,qword ptr [rsi]
0x11cb2: cmp qword ptr [rcx+0x10],0x0
0x11cb7: je 0x11d33
0x11cb9: mov rsi,qword ptr [rdx+0x80]
0x11cc0: cmp qword ptr [rcx],rsi
0x11cc3: je 0x11d10
0x11cc5: mov rax,qword ptr [rsp+0x18]
0x11cca: xor rax,qword ptr fs:0x28
0x11cd3: jne 0x11d2e
0x11cd5: add rsp,0x28
0x11cd9: ret 
0x11cda: nop word ptr [rax+rax*1+0x0]
0x11ce0: mov rax,qword ptr [rdx+0x78]
0x11ce4: mov rdi,qword ptr [rcx]
0x11ce7: mov rsi,rsp
0x11cea: mov qword ptr [rsp],rax
0x11cee: mov rax,qword ptr [rdx+0x80]
0x11cf5: mov qword ptr [rsp+0x8],rax
0x11cfa: call 0xc850
0x11cff: test rax,rax
0x11d02: je 0x11d33
0x11d04: mov rdi,rax
0x11d07: call 0x2c80
0x11d0c: jmp 0x11cc5
0x11d0e: xchg ax,ax
0x11d10: mov rsi,qword ptr [rdx+0x78]
0x11d14: cmp qword ptr [rcx+0x8],rsi
0x11d18: jne 0x11cc5
0x11d1a: mov rdx,qword ptr [rax+0x78]
0x11d1e: mov rax,qword ptr [rax+0x80]
0x11d25: mov qword ptr [rcx+0x8],rdx
0x11d29: mov qword ptr [rcx],rax
0x11d2c: jmp 0x11cc5
0x11d2e: call 0x2780
0x11d33: call 0x2590
0x11d38: nop dword ptr [rax+rax*1+0x0]
0x11d40: push r15
0x11d42: push r14
0x11d44: mov r15,rdi
0x11d47: push r13
0x11d49: push r12
0x11d4b: push rbp
0x11d4c: push rbx
0x11d4d: sub rsp,0x78
0x11d51: mov rbp,qword ptr [rdi]
0x11d54: mov rax,qword ptr fs:0x28
0x11d5d: mov qword ptr [rsp+0x68],rax
0x11d62: xor eax,eax
0x11d64: mov dword ptr [rsp+0x58],esi
0x11d68: mov rax,qword ptr [rbp+0x18]
0x11d6c: test rax,rax
0x11d6f: mov qword ptr [rsp+0x50],rax
0x11d74: je 0x121b0
0x11d7a: mov rdi,rax
0x11d7d: call 0x2940
0x11d82: test eax,eax
0x11d84: mov dword ptr [rsp+0x64],eax
0x11d88: js 0x122e0
0x11d8e: cmp qword ptr [r15+0x40],0x0
0x11d93: je 0x12568
0x11d99: mov qword ptr [rsp+0x38],0xffffffffffffffff
0x11da2: mov edi,dword ptr [r15+0x48]
0x11da6: mov byte ptr [rsp+0x5f],0x1
0x11dab: mov rcx,qword ptr [rbp+0x48]
0x11daf: mov rdx,qword ptr [rbp+0x38]
0x11db3: mov qword ptr [rsp+0x40],0x0
0x11dbc: cmp byte ptr [rdx+rcx*1-0x1],0x2f
0x11dc1: lea rax,[rcx-0x1]
0x11dc5: cmovne rax,rcx
0x11dc9: and edi,0x4
0x11dcc: mov qword ptr [rsp+0x48],rax
0x11dd1: je 0x11de3
0x11dd3: add rax,qword ptr [r15+0x20]
0x11dd7: lea rbx,[rax+0x1]
0x11ddb: mov byte ptr [rax],0x2f
0x11dde: mov qword ptr [rsp+0x40],rbx
0x11de3: mov rax,qword ptr [rsp+0x48]
0x11de8: mov rbx,qword ptr [r15+0x30]
0x11dec: mov byte ptr [rsp+0x5e],0x0
0x11df1: mov byte ptr [rsp+0x5d],0x0
0x11df6: mov qword ptr [rsp+0x8],0x0
0x11dff: mov qword ptr [rsp+0x10],0x0
0x11e08: add rax,0x1
0x11e0c: mov qword ptr [rsp+0x20],rbp
0x11e11: sub rbx,rax
0x11e14: mov qword ptr [rsp+0x18],rax
0x11e19: mov rax,qword ptr [rbp+0x58]
0x11e1d: mov qword ptr [rsp+0x28],rbx
0x11e22: xor ebx,ebx
0x11e24: add rax,0x1
0x11e28: mov qword ptr [rsp+0x30],rax
0x11e2d: jmp 0x11f0f
0x11e32: nop word ptr [rax+rax*1+0x0]
0x11e38: mov r9,r14
0x11e3b: add r9,qword ptr [rsp+0x18]
0x11e40: jb 0x126a0
0x11e46: mov rax,qword ptr [rsp+0x30]
0x11e4b: lea rsi,[r13+0x108]
0x11e52: mov qword ptr [r13+0x58],rax
0x11e56: mov rax,qword ptr [r15]
0x11e59: mov qword ptr [r13+0x48],r9
0x11e5d: mov qword ptr [r13+0x8],rax
0x11e61: mov rax,qword ptr [rbp+0x0]
0x11e65: mov qword ptr [r13+0x80],rax
0x11e6c: mov eax,dword ptr [r15+0x48]
0x11e70: test al,0x4
0x11e72: jne 0x120e0
0x11e78: mov qword ptr [r13+0x30],rsi
0x11e7c: cmp qword ptr [r15+0x40],0x0
0x11e81: je 0x11e8c
0x11e83: test ah,0x4
0x11e86: je 0x12188
0x11e8c: movzx edx,byte ptr [rbp+0x12]
0x11e90: and eax,0x18
0x11e93: mov esi,edx
0x11e95: sub edx,0x1
0x11e98: cmp eax,0x18
0x11e9b: je 0x12150
0x11ea1: mov ecx,0xb
0x11ea6: cmp edx,0xb
0x11ea9: mov word ptr [r13+0x70],cx
0x11eae: ja 0x12118
0x11eb4: lea rax,[rip+0x5505]
0x11ebb: mov eax,dword ptr [rax+rdx*4]
0x11ebe: mov dword ptr [r13+0x90],eax
0x11ec5: mov eax,0x2
0x11eca: mov qword ptr [r13+0xa8],rax
0x11ed1: cmp qword ptr [rsp+0x10],0x0
0x11ed7: mov qword ptr [r13+0x10],0x0
0x11edf: je 0x12108
0x11ee5: mov rax,qword ptr [rsp+0x8]
0x11eea: mov qword ptr [rax+0x10],r13
0x11eee: cmp rbx,0x2710
0x11ef5: je 0x11ff0
0x11efb: add rbx,0x1
0x11eff: cmp rbx,qword ptr [rsp+0x38]
0x11f04: jae 0x12048
0x11f0a: mov qword ptr [rsp+0x8],r13
0x11f0f: mov rax,qword ptr [rsp+0x20]
0x11f14: mov r13,qword ptr [rax+0x18]
0x11f18: test r13,r13
0x11f1b: je 0x123e8
0x11f21: call 0x25a0
0x11f26: mov rdi,r13
0x11f29: mov dword ptr [rax],0x0
0x11f2f: mov r12,rax
0x11f32: call 0x29f0
0x11f37: test rax,rax
0x11f3a: mov rbp,rax
0x11f3d: je 0x124c0
0x11f43: test byte ptr [r15+0x48],0x20
0x11f48: jne 0x11f54
0x11f4a: cmp byte ptr [rax+0x13],0x2e
0x11f4e: je 0x12130
0x11f54: lea r13,[rbp+0x13]
0x11f58: mov rdi,r13
0x11f5b: call 0x2750
0x11f60: mov rsi,r13
0x11f63: mov rdx,rax
0x11f66: mov rdi,r15
0x11f69: mov r14,rax
0x11f6c: call 0x114a0
0x11f71: test rax,rax
0x11f74: mov r13,rax
0x11f77: je 0x12390
0x11f7d: cmp qword ptr [rsp+0x28],r14
0x11f82: ja 0x11e38
0x11f88: mov rax,qword ptr [r15+0x20]
0x11f8c: lea rsi,[r15+0x30]
0x11f90: lea rdi,[r15+0x20]
0x11f94: mov qword ptr [rsp+0x28],rax
0x11f99: mov rax,qword ptr [rsp+0x48]
0x11f9e: lea rdx,[rax+r14*1+0x2]
0x11fa3: call 0x11830
0x11fa8: test al,al
0x11faa: je 0x12390
0x11fb0: mov rdx,qword ptr [r15+0x20]
0x11fb4: cmp rdx,qword ptr [rsp+0x28]
0x11fb9: je 0x121a0
0x11fbf: add rdx,qword ptr [rsp+0x18]
0x11fc4: test byte ptr [r15+0x48],0x4
0x11fc9: cmove rdx,qword ptr [rsp+0x40]
0x11fcf: mov qword ptr [rsp+0x40],rdx
0x11fd4: mov rcx,qword ptr [r15+0x30]
0x11fd8: sub rcx,qword ptr [rsp+0x18]
0x11fdd: mov byte ptr [rsp+0x5d],al
0x11fe1: mov qword ptr [rsp+0x28],rcx
0x11fe6: jmp 0x11e38
0x11feb: nop dword ptr [rax+rax*1+0x0]
0x11ff0: cmp qword ptr [r15+0x40],0x0
0x11ff5: jne 0x11efb
0x11ffb: mov esi,dword ptr [rsp+0x64]
0x11fff: mov rdi,qword ptr [rsp+0x20]
0x12004: call 0x115c0
0x12009: cmp rax,0x1021994
0x1200f: je 0x12380
0x12015: mov ecx,0xff534d42
0x1201a: cmp rax,rcx
0x1201d: je 0x12380
0x12023: cmp rax,0x6969
0x12029: je 0x12380
0x1202f: add rbx,0x1
0x12033: cmp rbx,qword ptr [rsp+0x38]
0x12038: mov byte ptr [rsp+0x5e],0x1
0x1203d: jb 0x11f0a
0x12043: nop dword ptr [rax+rax*1+0x0]
0x12048: cmp byte ptr [rsp+0x5d],0x0
0x1204d: mov rbp,qword ptr [rsp+0x20]
0x12052: je 0x123f6
0x12058: mov rax,qword ptr [r15+0x8]
0x1205c: mov rcx,qword ptr [r15+0x20]
0x12060: test rax,rax
0x12063: je 0x12090
0x12065: nop dword ptr [rax]
0x12068: mov rdx,qword ptr [rax+0x30]
0x1206c: lea rsi,[rax+0x108]
0x12073: cmp rdx,rsi
0x12076: je 0x12083
0x12078: sub rdx,qword ptr [rax+0x38]
0x1207c: add rdx,rcx
0x1207f: mov qword ptr [rax+0x30],rdx
0x12083: mov qword ptr [rax+0x38],rcx
0x12087: mov rax,qword ptr [rax+0x10]
0x1208b: test rax,rax
0x1208e: jne 0x12068
0x12090: mov rax,qword ptr [rsp+0x10]
0x12095: jmp 0x120a3
0x12097: nop word ptr [rax+rax*1+0x0]
0x120a0: mov rax,rdx
0x120a3: cmp qword ptr [rax+0x58],0x0
0x120a8: js 0x123f6
0x120ae: mov rdx,qword ptr [rax+0x30]
0x120b2: lea rsi,[rax+0x108]
0x120b9: cmp rdx,rsi
0x120bc: je 0x120c9
0x120be: sub rdx,qword ptr [rax+0x38]
0x120c2: add rdx,rcx
0x120c5: mov qword ptr [rax+0x30],rdx
0x120c9: mov rdx,qword ptr [rax+0x10]
0x120cd: mov qword ptr [rax+0x38],rcx
0x120d1: test rdx,rdx
0x120d4: jne 0x120a0
0x120d6: mov rdx,qword ptr [rax+0x8]
0x120da: jmp 0x120a0
0x120dc: nop dword ptr [rax+0x0]
0x120e0: mov rax,qword ptr [r13+0x38]
0x120e4: mov rdi,qword ptr [rsp+0x40]
0x120e9: mov qword ptr [r13+0x30],rax
0x120ed: mov rax,qword ptr [r13+0x60]
0x120f1: lea rdx,[rax+0x1]
0x120f5: call 0x2b00
0x120fa: mov eax,dword ptr [r15+0x48]
0x120fe: jmp 0x11e7c
0x12103: nop dword ptr [rax+rax*1+0x0]
0x12108: mov qword ptr [rsp+0x10],r13
0x1210d: jmp 0x11eee
0x12112: nop word ptr [rax+rax*1+0x0]
0x12118: mov dword ptr [r13+0x90],0x0
0x12123: mov eax,0x2
0x12128: jmp 0x11eca
0x1212d: nop dword ptr [rax]
0x12130: cmp byte ptr [rax+0x14],0x0
0x12134: je 0x12141
0x12136: cmp word ptr [rax+0x14],0x2e
0x1213b: jne 0x11f54
0x12141: mov r13,qword ptr [rsp+0x8]
0x12146: jmp 0x11f0a
0x1214b: nop dword ptr [rax+rax*1+0x0]
0x12150: and esi,0xfb
0x12156: je 0x11ea1
0x1215c: mov eax,0xb
0x12161: cmp edx,0xb
0x12164: mov word ptr [r13+0x70],ax
0x12169: jbe 0x126f6
0x1216f: mov dword ptr [r13+0x90],0x0
0x1217a: mov eax,0x1
0x1217f: jmp 0x11eca
0x12184: nop dword ptr [rax+0x0]
0x12188: xor edx,edx
0x1218a: mov rsi,r13
0x1218d: mov rdi,r15
0x12190: call 0x111c0
0x12195: mov word ptr [r13+0x70],ax
0x1219a: jmp 0x11ed1
0x1219f: nop 
0x121a0: movzx eax,byte ptr [rsp+0x5d]
0x121a5: jmp 0x11fd4
0x121aa: nop word ptr [rax+rax*1+0x0]
0x121b0: mov eax,dword ptr [rdi+0x48]
0x121b3: mov edx,eax
0x121b5: and edx,0x10
0x121b8: je 0x121c7
0x121ba: test al,0x1
0x121bc: mov edx,0x20000
0x121c1: jne 0x122c8
0x121c7: and eax,0x204
0x121cc: mov rsi,qword ptr [rbp+0x30]
0x121d0: mov edi,0xffffff9c
0x121d5: cmp eax,0x200
0x121da: jne 0x121e0
0x121dc: mov edi,dword ptr [r15+0x2c]
0x121e0: lea rcx,[rsp+0x64]
0x121e5: call 0xcb30
0x121ea: test rax,rax
0x121ed: mov qword ptr [rbp+0x18],rax
0x121f1: je 0x12510
0x121f7: cmp word ptr [rbp+0x70],0xb
0x121fc: je 0x12590
0x12202: mov edi,dword ptr [r15+0x48]
0x12206: test edi,0x100
0x1220c: jne 0x12330
0x12212: cmp qword ptr [r15+0x40],0x1
0x12217: sbb rax,rax
0x1221a: and eax,0x186a1
0x1221f: sub rax,0x1
0x12223: cmp dword ptr [rsp+0x58],0x2
0x12228: mov qword ptr [rsp+0x38],rax
0x1222d: je 0x12580
0x12233: mov edx,dword ptr [r15+0x48]
0x12237: mov eax,dword ptr [rsp+0x64]
0x1223b: and edx,0x38
0x1223e: cmp edx,0x18
0x12241: je 0x125e4
0x12247: cmp dword ptr [rsp+0x58],0x3
0x1224c: mov r12d,0x1
0x12252: sete bl
0x12255: test byte ptr [r15+0x49],0x2
0x1225a: jne 0x1263c
0x12260: test eax,eax
0x12262: jns 0x125c8
0x12268: test bl,bl
0x1226a: je 0x1227b
0x1226c: test r12b,r12b
0x1226f: je 0x1227b
0x12271: call 0x25a0
0x12276: mov eax,dword ptr [rax]
0x12278: mov dword ptr [rbp+0x40],eax
0x1227b: or word ptr [rbp+0x72],0x1
0x12280: mov rdi,qword ptr [rbp+0x18]
0x12284: call 0x28a0
0x12289: mov edi,dword ptr [r15+0x48]
0x1228d: mov qword ptr [rbp+0x18],0x0
0x12295: test edi,0x200
0x1229b: je 0x122b0
0x1229d: mov eax,dword ptr [rsp+0x64]
0x122a1: test eax,eax
0x122a3: js 0x122b0
0x122a5: mov edi,eax
0x122a7: call 0x2870
0x122ac: mov edi,dword ptr [r15+0x48]
0x122b0: mov qword ptr [rbp+0x18],0x0
0x122b8: mov byte ptr [rsp+0x5f],0x0
0x122bd: jmp 0x11dab
0x122c2: nop word ptr [rax+rax*1+0x0]
0x122c8: xor edx,edx
0x122ca: cmp qword ptr [rbp+0x58],0x0
0x122cf: setne dl
0x122d2: shl edx,0x11
0x122d5: jmp 0x121c7
0x122da: nop word ptr [rax+rax*1+0x0]
0x122e0: mov rdi,qword ptr [rbp+0x18]
0x122e4: call 0x28a0
0x122e9: cmp dword ptr [rsp+0x58],0x3
0x122ee: mov qword ptr [rbp+0x18],0x0
0x122f6: je 0x1251b
0x122fc: mov qword ptr [rsp+0x10],0x0
0x12305: mov rbx,qword ptr [rsp+0x68]
0x1230a: xor rbx,qword ptr fs:0x28
0x12313: mov rax,qword ptr [rsp+0x10]
0x12318: jne 0x126f1
0x1231e: add rsp,0x78
0x12322: pop rbx
0x12323: pop rbp
0x12324: pop r12
0x12326: pop r13
0x12328: pop r14
0x1232a: pop r15
0x1232c: ret 
0x1232d: nop dword ptr [rax]
0x12330: lea rbx,[r15+0x58]
0x12334: mov rdx,rbp
0x12337: mov rsi,rbx
0x1233a: call 0x11c80
0x1233f: xor edx,edx
0x12341: mov rsi,rbp
0x12344: mov rdi,r15
0x12347: call 0x111c0
0x1234c: mov edi,dword ptr [r15+0x48]
0x12350: mov rdx,rbp
0x12353: mov rsi,rbx
0x12356: call 0x11bd0
0x1235b: test al,al
0x1235d: jne 0x12212
0x12363: call 0x25a0
0x12368: mov qword ptr [rsp+0x10],0x0
0x12371: mov dword ptr [rax],0xc
0x12377: jmp 0x12305
0x12379: nop dword ptr [rax+0x0]
0x12380: mov byte ptr [rsp+0x5e],0x0
0x12385: jmp 0x11efb
0x1238a: nop word ptr [rax+rax*1+0x0]
0x12390: mov rdi,r13
0x12393: mov rbp,qword ptr [rsp+0x20]
0x12398: mov ebx,dword ptr [r12]
0x1239c: call 0x2c80
0x123a1: mov rdi,qword ptr [rsp+0x10]
0x123a6: call 0x11530
0x123ab: mov rdi,qword ptr [rbp+0x18]
0x123af: call 0x28a0
0x123b4: mov r9d,0x7
0x123ba: mov qword ptr [rbp+0x18],0x0
0x123c2: mov qword ptr [rsp+0x10],0x0
0x123cb: mov word ptr [rbp+0x70],r9w
0x123d0: or dword ptr [r15+0x48],0x2000
0x123d8: mov dword ptr [r12],ebx
0x123dc: jmp 0x12305
0x123e1: nop dword ptr [rax+0x0]
0x123e8: mov rbp,rax
0x123eb: cmp byte ptr [rsp+0x5d],0x0
0x123f0: jne 0x12058
0x123f6: test byte ptr [r15+0x48],0x4
0x123fb: je 0x1241b
0x123fd: mov rax,qword ptr [rsp+0x18]
0x12402: cmp qword ptr [r15+0x30],rax
0x12406: je 0x1240d
0x12408: test rbx,rbx
0x1240b: jne 0x12413
0x1240d: sub qword ptr [rsp+0x40],0x1
0x12413: mov rax,qword ptr [rsp+0x40]
0x12418: mov byte ptr [rax],0x0
0x1241b: cmp qword ptr [rsp+0x50],0x0
0x12421: jne 0x12490
0x12423: cmp byte ptr [rsp+0x5f],0x0
0x12428: je 0x12490
0x1242a: cmp dword ptr [rsp+0x58],0x1
0x1242f: je 0x12470
0x12431: test rbx,rbx
0x12434: je 0x12470
0x12436: cmp byte ptr [rsp+0x5e],0x0
0x1243b: jne 0x12538
0x12441: cmp qword ptr [r15+0x40],0x0
0x12446: je 0x12305
0x1244c: cmp rbx,0x1
0x12450: je 0x12305
0x12456: mov rsi,qword ptr [rsp+0x10]
0x1245b: mov rdx,rbx
0x1245e: mov rdi,r15
0x12461: call 0x11390
0x12466: mov qword ptr [rsp+0x10],rax
0x1246b: jmp 0x12305
0x12470: cmp qword ptr [rbp+0x58],0x0
0x12475: jne 0x125a6
0x1247b: mov rdi,r15
0x1247e: call 0x117d0
0x12483: test eax,eax
0x12485: setne al
0x12488: test al,al
0x1248a: jne 0x12613
0x12490: test rbx,rbx
0x12493: jne 0x12436
0x12495: cmp dword ptr [rsp+0x58],0x3
0x1249a: je 0x12658
0x124a0: mov rdi,qword ptr [rsp+0x10]
0x124a5: call 0x11530
0x124aa: mov qword ptr [rsp+0x10],0x0
0x124b3: jmp 0x12305
0x124b8: nop dword ptr [rax+rax*1+0x0]
0x124c0: mov eax,dword ptr [r12]
0x124c4: mov rbp,qword ptr [rsp+0x20]
0x124c9: test eax,eax
0x124cb: je 0x124ee
0x124cd: test rbx,rbx
0x124d0: mov dword ptr [rbp+0x40],eax
0x124d3: jne 0x12609
0x124d9: cmp qword ptr [rsp+0x50],0x0
0x124df: mov eax,0x4
0x124e4: jne 0x12609
0x124ea: mov word ptr [rbp+0x70],ax
0x124ee: mov rdi,qword ptr [rbp+0x18]
0x124f2: test rdi,rdi
0x124f5: je 0x123eb
0x124fb: call 0x28a0
0x12500: mov qword ptr [rbp+0x18],0x0
0x12508: jmp 0x123eb
0x1250d: nop dword ptr [rax]
0x12510: cmp dword ptr [rsp+0x58],0x3
0x12515: jne 0x122fc
0x1251b: mov r10d,0x4
0x12521: mov word ptr [rbp+0x70],r10w
0x12526: call 0x25a0
0x1252b: mov eax,dword ptr [rax]
0x1252d: mov dword ptr [rbp+0x40],eax
0x12530: jmp 0x122fc
0x12535: nop dword ptr [rax]
0x12538: lea rax,[rip+0xffffffffffffec51]
0x1253f: mov rsi,qword ptr [rsp+0x10]
0x12544: mov rdx,rbx
0x12547: mov rdi,r15
0x1254a: mov qword ptr [r15+0x40],rax
0x1254e: call 0x11390
0x12553: mov qword ptr [r15+0x40],0x0
0x1255b: mov qword ptr [rsp+0x10],rax
0x12560: jmp 0x12305
0x12565: nop dword ptr [rax]
0x12568: mov qword ptr [rsp+0x38],0x186a0
0x12571: mov byte ptr [rsp+0x5f],0x1
0x12576: mov edi,dword ptr [r15+0x48]
0x1257a: jmp 0x11dab
0x1257f: nop 
0x12580: mov byte ptr [rsp+0x5f],0x0
0x12585: mov edi,dword ptr [r15+0x48]
0x12589: jmp 0x11dab
0x1258e: xchg ax,ax
0x12590: xor edx,edx
0x12592: mov rsi,rbp
0x12595: mov rdi,r15
0x12598: call 0x111c0
0x1259d: mov word ptr [rbp+0x70],ax
0x125a1: jmp 0x12212
0x125a6: mov rsi,qword ptr [rbp+0x8]
0x125aa: lea rcx,[rip+0x353a]
0x125b1: mov edx,0xffffffff
0x125b6: mov rdi,r15
0x125b9: call 0x11950
0x125be: test eax,eax
0x125c0: setne al
0x125c3: jmp 0x12488
0x125c8: xor ecx,ecx
0x125ca: mov edx,eax
0x125cc: mov rsi,rbp
0x125cf: mov rdi,r15
0x125d2: call 0x11950
0x125d7: test eax,eax
0x125d9: jne 0x12268
0x125df: jmp 0x11da2
0x125e4: cmp qword ptr [rbp+0x88],0x2
0x125ec: jne 0x12247
0x125f2: mov esi,eax
0x125f4: mov rdi,rbp
0x125f7: call 0x116f0
0x125fc: test eax,eax
0x125fe: jne 0x1267e
0x12600: mov eax,dword ptr [rsp+0x64]
0x12604: jmp 0x12247
0x12609: mov eax,0x7
0x1260e: jmp 0x124ea
0x12613: mov edi,0x7
0x12618: mov word ptr [rbp+0x70],di
0x1261c: or dword ptr [r15+0x48],0x2000
0x12624: mov rdi,qword ptr [rsp+0x10]
0x12629: call 0x11530
0x1262e: mov qword ptr [rsp+0x10],0x0
0x12637: jmp 0x12305
0x1263c: mov edi,eax
0x1263e: mov edx,0x3
0x12643: mov esi,0x406
0x12648: xor eax,eax
0x1264a: call 0x14b30
0x1264f: mov dword ptr [rsp+0x64],eax
0x12653: jmp 0x12260
0x12658: movzx eax,word ptr [rbp+0x70]
0x1265c: cmp ax,0x7
0x12660: je 0x124a0
0x12666: cmp ax,0x4
0x1266a: je 0x124a0
0x12670: mov esi,0x6
0x12675: mov word ptr [rbp+0x70],si
0x12679: jmp 0x124a0
0x1267e: cmp dword ptr [rsp+0x58],0x3
0x12683: jne 0x12580
0x12689: mov eax,dword ptr [rsp+0x64]
0x1268d: xor r12d,r12d
0x12690: mov ebx,0x1
0x12695: jmp 0x12255
0x1269a: nop word ptr [rax+rax*1+0x0]
0x126a0: mov rdi,r13
0x126a3: mov rbp,qword ptr [rsp+0x20]
0x126a8: call 0x2c80
0x126ad: mov rdi,qword ptr [rsp+0x10]
0x126b2: call 0x11530
0x126b7: mov rdi,qword ptr [rbp+0x18]
0x126bb: call 0x28a0
0x126c0: mov r8d,0x7
0x126c6: mov qword ptr [rbp+0x18],0x0
0x126ce: mov qword ptr [rsp+0x10],0x0
0x126d7: mov word ptr [rbp+0x70],r8w
0x126dc: or dword ptr [r15+0x48],0x2000
0x126e4: mov dword ptr [r12],0x24
0x126ec: jmp 0x12305
0x126f1: call 0x2780
0x126f6: lea rax,[rip+0x4cc3]
0x126fd: mov eax,dword ptr [rax+rdx*4]
0x12700: mov dword ptr [r13+0x90],eax
0x12707: mov eax,0x1
0x1270c: jmp 0x11eca
0x12711: nop dword ptr [rax+rax*1+0x0]
0x12716: nop word ptr cs:[rax+rax*1+0x0]
0x12720: push r15
0x12722: push r14
0x12724: push r13
0x12726: push r12
0x12728: push rbp
0x12729: push rbx
0x1272a: sub rsp,0x28
0x1272e: test esi,0xfffff000
0x12734: jne 0x12ab8
0x1273a: mov eax,esi
0x1273c: mov ebp,esi
0x1273e: and eax,0x204
0x12743: cmp eax,0x204
0x12748: je 0x12ab8
0x1274e: test sil,0x12
0x12752: je 0x12ab8
0x12758: mov r13,rdi
0x1275b: mov esi,0x1
0x12760: mov edi,0x80
0x12765: mov r14,rdx
0x12768: call 0x2910
0x1276d: test rax,rax
0x12770: mov rbx,rax
0x12773: je 0x129ce
0x12779: test bpl,0x2
0x1277d: mov qword ptr [rax+0x40],r14
0x12781: jne 0x129e0
0x12787: mov rdi,qword ptr [r13+0x0]
0x1278b: mov dword ptr [rax+0x48],ebp
0x1278e: mov dword ptr [rbx+0x2c],0xffffff9c
0x12795: test rdi,rdi
0x12798: je 0x129ff
0x1279e: mov r15,r13
0x127a1: xor r12d,r12d
0x127a4: nop dword ptr [rax+0x0]
0x127a8: call 0x2750
0x127ad: cmp r12,rax
0x127b0: cmovb r12,rax
0x127b4: add r15,0x8
0x127b8: mov rdi,qword ptr [r15]
0x127bb: test rdi,rdi
0x127be: jne 0x127a8
0x127c0: lea rdx,[r12+0x1]
0x127c5: mov eax,0x1000
0x127ca: cmp rdx,0x1000
0x127d1: cmovb rdx,rax
0x127d5: lea rsi,[rbx+0x30]
0x127d9: lea rdi,[rbx+0x20]
0x127dd: call 0x11830
0x127e2: test al,al
0x127e4: mov byte ptr [rsp+0x16],al
0x127e8: je 0x12a89
0x127ee: mov rsi,qword ptr [r13+0x0]
0x127f2: test rsi,rsi
0x127f5: je 0x12aa0
0x127fb: lea rsi,[rip+0x3f8a]
0x12802: xor edx,edx
0x12804: mov rdi,rbx
0x12807: call 0x114a0
0x1280c: test rax,rax
0x1280f: mov r15,rax
0x12812: je 0x12a80
0x12818: mov rax,0xffffffffffffffff
0x1281f: test r14,r14
0x12822: mov rsi,qword ptr [r13+0x0]
0x12826: mov qword ptr [r15+0x58],rax
0x1282a: mov qword ptr [r15+0x68],rax
0x1282e: je 0x1283d
0x12830: mov eax,dword ptr [rbx+0x48]
0x12833: shr eax,0xa
0x12836: and eax,0x1
0x12839: mov byte ptr [rsp+0x16],al
0x1283d: test rsi,rsi
0x12840: je 0x12aac
0x12846: shr ebp,0xb
0x12849: mov qword ptr [rsp+0x18],0x0
0x12852: xor r12d,r12d
0x12855: xor ebp,0x1
0x12858: mov eax,ebp
0x1285a: xor ebp,ebp
0x1285c: and eax,0x1
0x1285f: mov byte ptr [rsp+0x17],al
0x12863: jmp 0x128dc
0x12865: nop dword ptr [rax]
0x12868: mov rdx,rax
0x1286b: mov rdi,rbx
0x1286e: call 0x114a0
0x12873: test rax,rax
0x12876: mov rcx,rax
0x12879: je 0x12a70
0x1287f: mov qword ptr [rax+0x58],0x0
0x12887: mov qword ptr [rax+0x8],r15
0x1288b: lea rax,[rax+0x108]
0x12892: test r12,r12
0x12895: mov qword ptr [rcx+0x30],rax
0x12899: je 0x12a10
0x1289f: cmp byte ptr [rsp+0x16],0x0
0x128a4: je 0x12a10
0x128aa: mov esi,0xb
0x128af: test r14,r14
0x128b2: mov qword ptr [rcx+0xa8],0x2
0x128bd: mov word ptr [rcx+0x70],si
0x128c1: je 0x12a50
0x128c7: mov qword ptr [rcx+0x10],r12
0x128cb: mov r12,rcx
0x128ce: add rbp,0x1
0x128d2: mov rsi,qword ptr [r13+rbp*8+0x0]
0x128d7: test rsi,rsi
0x128da: je 0x12930
0x128dc: mov rdi,rsi
0x128df: mov qword ptr [rsp+0x8],rsi
0x128e4: call 0x2750
0x128e9: cmp rax,0x2
0x128ed: mov rsi,qword ptr [rsp+0x8]
0x128f2: jbe 0x12868
0x128f8: cmp byte ptr [rsp+0x17],0x0
0x128fd: je 0x12868
0x12903: cmp byte ptr [rsi+rax*1-0x1],0x2f
0x12908: jne 0x12868
0x1290e: xchg ax,ax
0x12910: cmp byte ptr [rsi+rax*1-0x2],0x2f
0x12915: jne 0x12868
0x1291b: sub rax,0x1
0x1291f: cmp rax,0x1
0x12923: jne 0x12910
0x12925: jmp 0x12868
0x1292a: nop word ptr [rax+rax*1+0x0]
0x12930: test r14,r14
0x12933: je 0x1294c
0x12935: cmp rbp,0x1
0x12939: jbe 0x1294c
0x1293b: mov rsi,r12
0x1293e: mov rdx,rbp
0x12941: mov rdi,rbx
0x12944: call 0x11390
0x12949: mov r12,rax
0x1294c: lea rsi,[rip+0x3e39]
0x12953: xor edx,edx
0x12955: mov rdi,rbx
0x12958: call 0x114a0
0x1295d: test rax,rax
0x12960: mov qword ptr [rbx],rax
0x12963: je 0x12a70
0x12969: mov edi,dword ptr [rbx+0x48]
0x1296c: mov edx,0x9
0x12971: lea rsi,[rbx+0x58]
0x12975: mov qword ptr [rax+0x10],r12
0x12979: mov word ptr [rax+0x70],dx
0x1297d: mov qword ptr [rax+0x58],0x1
0x12985: call 0x118a0
0x1298a: test al,al
0x1298c: je 0x12a70
0x12992: mov esi,dword ptr [rbx+0x48]
0x12995: test esi,0x204
0x1299b: jne 0x129c0
0x1299d: mov edi,dword ptr [rbx+0x2c]
0x129a0: lea rdx,[rip+0x3145]
0x129a7: call 0x11910
0x129ac: test eax,eax
0x129ae: mov dword ptr [rbx+0x28],eax
0x129b1: jns 0x129c0
0x129b3: or dword ptr [rbx+0x48],0x4
0x129b7: nop word ptr [rax+rax*1+0x0]
0x129c0: lea rdi,[rbx+0x60]
0x129c4: mov esi,0xffffffff
0x129c9: call 0x13cb0
0x129ce: add rsp,0x28
0x129d2: mov rax,rbx
0x129d5: pop rbx
0x129d6: pop rbp
0x129d7: pop r12
0x129d9: pop r13
0x129db: pop r14
0x129dd: pop r15
0x129df: ret 
0x129e0: mov rdi,qword ptr [r13+0x0]
0x129e4: mov eax,ebp
0x129e6: mov dword ptr [rbx+0x2c],0xffffff9c
0x129ed: and ah,0xfd
0x129f0: or eax,0x4
0x129f3: test rdi,rdi
0x129f6: mov dword ptr [rbx+0x48],eax
0x129f9: jne 0x1279e
0x129ff: mov edx,0x1000
0x12a04: jmp 0x127d5
0x12a09: nop dword ptr [rax+0x0]
0x12a10: xor edx,edx
0x12a12: mov rsi,rcx
0x12a15: mov rdi,rbx
0x12a18: mov qword ptr [rsp+0x8],rcx
0x12a1d: call 0x111c0
0x12a22: mov rcx,qword ptr [rsp+0x8]
0x12a27: test r14,r14
0x12a2a: mov word ptr [rcx+0x70],ax
0x12a2e: jne 0x128c7
0x12a34: test r12,r12
0x12a37: mov qword ptr [rcx+0x10],0x0
0x12a3f: jne 0x12a58
0x12a41: mov qword ptr [rsp+0x18],rcx
0x12a46: mov r12,rcx
0x12a49: jmp 0x128ce
0x12a4e: xchg ax,ax
0x12a50: mov qword ptr [rcx+0x10],0x0
0x12a58: mov rax,qword ptr [rsp+0x18]
0x12a5d: mov qword ptr [rsp+0x18],rcx
0x12a62: mov qword ptr [rax+0x10],rcx
0x12a66: jmp 0x128ce
0x12a6b: nop dword ptr [rax+rax*1+0x0]
0x12a70: mov rdi,r12
0x12a73: call 0x11530
0x12a78: mov rdi,r15
0x12a7b: call 0x2c80
0x12a80: mov rdi,qword ptr [rbx+0x20]
0x12a84: call 0x2c80
0x12a89: mov rdi,rbx
0x12a8c: xor ebx,ebx
0x12a8e: call 0x2c80
0x12a93: jmp 0x129ce
0x12a98: nop dword ptr [rax+rax*1+0x0]
0x12aa0: xor r15d,r15d
0x12aa3: test r14,r14
0x12aa6: jne 0x12830
0x12aac: xor r12d,r12d
0x12aaf: jmp 0x1294c
0x12ab4: nop dword ptr [rax+0x0]
0x12ab8: call 0x25a0
0x12abd: xor ebx,ebx
0x12abf: mov dword ptr [rax],0x16
0x12ac5: jmp 0x129ce
0x12aca: nop word ptr [rax+rax*1+0x0]
0x12ad0: push r12
0x12ad2: push rbp
0x12ad3: mov rbp,rdi
0x12ad6: push rbx
0x12ad7: mov rdi,qword ptr [rdi]
0x12ada: test rdi,rdi
0x12add: je 0x12b23
0x12adf: cmp qword ptr [rdi+0x58],0x0
0x12ae4: jns 0x12aff
0x12ae6: jmp 0x12c00
0x12aeb: nop dword ptr [rax+rax*1+0x0]
0x12af0: call 0x2c80
0x12af5: cmp qword ptr [rbx+0x58],0x0
0x12afa: mov rdi,rbx
0x12afd: js 0x12b1b
0x12aff: mov rbx,qword ptr [rdi+0x10]
0x12b03: test rbx,rbx
0x12b06: jne 0x12af0
0x12b08: mov rbx,qword ptr [rdi+0x8]
0x12b0c: call 0x2c80
0x12b11: cmp qword ptr [rbx+0x58],0x0
0x12b16: mov rdi,rbx
0x12b19: jns 0x12aff
0x12b1b: mov rdi,rbx
0x12b1e: call 0x2c80
0x12b23: mov rdi,qword ptr [rbp+0x8]
0x12b27: test rdi,rdi
0x12b2a: je 0x12b31
0x12b2c: call 0x11530
0x12b31: mov rdi,qword ptr [rbp+0x10]
0x12b35: call 0x2c80
0x12b3a: mov rdi,qword ptr [rbp+0x20]
0x12b3e: call 0x2c80
0x12b43: mov eax,dword ptr [rbp+0x48]
0x12b46: test ah,0x2
0x12b49: je 0x12bb0
0x12b4b: mov edi,dword ptr [rbp+0x2c]
0x12b4e: test edi,edi
0x12b50: jns 0x12be0
0x12b56: xor ebx,ebx
0x12b58: lea rdi,[rbp+0x60]
0x12b5c: call 0x11580
0x12b61: mov rdi,qword ptr [rbp+0x50]
0x12b65: test rdi,rdi
0x12b68: je 0x12b6f
0x12b6a: call 0xc240
0x12b6f: test dword ptr [rbp+0x48],0x102
0x12b76: mov rdi,qword ptr [rbp+0x58]
0x12b7a: je 0x12ba0
0x12b7c: test rdi,rdi
0x12b7f: je 0x12b86
0x12b81: call 0xc240
0x12b86: mov rdi,rbp
0x12b89: call 0x2c80
0x12b8e: test ebx,ebx
0x12b90: jne 0x12c41
0x12b96: mov eax,ebx
0x12b98: pop rbx
0x12b99: pop rbp
0x12b9a: pop r12
0x12b9c: ret 
0x12b9d: nop dword ptr [rax]
0x12ba0: call 0x2c80
0x12ba5: jmp 0x12b86
0x12ba7: nop word ptr [rax+rax*1+0x0]
0x12bb0: test al,0x4
0x12bb2: jne 0x12b56
0x12bb4: mov edi,dword ptr [rbp+0x28]
0x12bb7: call 0x2a60
0x12bbc: test eax,eax
0x12bbe: jne 0x12c10
0x12bc0: mov edi,dword ptr [rbp+0x28]
0x12bc3: call 0x2870
0x12bc8: test eax,eax
0x12bca: je 0x12b56
0x12bcc: call 0x25a0
0x12bd1: mov r12,rax
0x12bd4: jmp 0x12c38
0x12bd6: nop word ptr cs:[rax+rax*1+0x0]
0x12be0: call 0x2870
0x12be5: test eax,eax
0x12be7: je 0x12b56
0x12bed: call 0x25a0
0x12bf2: mov ebx,dword ptr [rax]
0x12bf4: jmp 0x12b58
0x12bf9: nop dword ptr [rax+0x0]
0x12c00: mov rbx,rdi
0x12c03: mov rdi,rbx
0x12c06: call 0x2c80
0x12c0b: jmp 0x12b23
0x12c10: call 0x25a0
0x12c15: mov edi,dword ptr [rbp+0x28]
0x12c18: mov r12,rax
0x12c1b: mov ebx,dword ptr [rax]
0x12c1d: call 0x2870
0x12c22: test eax,eax
0x12c24: je 0x12b58
0x12c2a: test ebx,ebx
0x12c2c: jne 0x12b58
0x12c32: nop word ptr [rax+rax*1+0x0]
0x12c38: mov ebx,dword ptr [r12]
0x12c3c: jmp 0x12b58
0x12c41: call 0x25a0
0x12c46: mov dword ptr [rax],ebx
0x12c48: mov ebx,0xffffffff
0x12c4d: jmp 0x12b96
0x12c52: nop dword ptr [rax+0x0]
0x12c56: nop word ptr cs:[rax+rax*1+0x0]
0x12c60: push r14
0x12c62: push r13
0x12c64: push r12
0x12c66: push rbp
0x12c67: push rbx
0x12c68: mov rbp,qword ptr [rdi]
0x12c6b: test rbp,rbp
0x12c6e: je 0x12d7e
0x12c74: mov edx,dword ptr [rdi+0x48]
0x12c77: test dh,0x20
0x12c7a: jne 0x12d7e
0x12c80: movzx eax,word ptr [rbp+0x74]
0x12c84: mov ebx,0x3
0x12c89: mov r12,rdi
0x12c8c: mov word ptr [rbp+0x74],bx
0x12c90: cmp ax,0x1
0x12c94: je 0x12ee0
0x12c9a: cmp ax,0x2
0x12c9e: movzx ecx,word ptr [rbp+0x70]
0x12ca2: je 0x12d90
0x12ca8: cmp cx,0x1
0x12cac: jne 0x12ce0
0x12cae: jmp 0x12ed0
0x12cb3: nop dword ptr [rax+rax*1+0x0]
0x12cb8: mov qword ptr [r12],rbx
0x12cbc: mov rdi,rbp
0x12cbf: call 0x2c80
0x12cc4: cmp qword ptr [rbx+0x58],0x0
0x12cc9: je 0x12f00
0x12ccf: movzx eax,word ptr [rbx+0x74]
0x12cd3: mov rbp,rbx
0x12cd6: cmp ax,0x4
0x12cda: jne 0x13008
0x12ce0: mov rbx,qword ptr [rbp+0x10]
0x12ce4: test rbx,rbx
0x12ce7: jne 0x12cb8
0x12ce9: mov rbx,qword ptr [rbp+0x8]
0x12ced: cmp qword ptr [rbx+0x18],0x0
0x12cf2: jne 0x13260
0x12cf8: mov qword ptr [r12],rbx
0x12cfc: mov rdi,rbp
0x12cff: call 0x2c80
0x12d04: cmp qword ptr [rbx+0x58],0xffffffffffffffff
0x12d09: je 0x131c2
0x12d0f: cmp word ptr [rbx+0x70],0xb
0x12d14: je 0x12e4f
0x12d1a: mov rdx,qword ptr [r12+0x20]
0x12d1f: mov rax,qword ptr [rbx+0x48]
0x12d23: mov byte ptr [rdx+rax*1],0x0
0x12d27: cmp qword ptr [rbx+0x58],0x0
0x12d2c: je 0x130f0
0x12d32: movzx eax,word ptr [rbx+0x72]
0x12d36: test al,0x2
0x12d38: je 0x130a8
0x12d3e: mov eax,dword ptr [r12+0x48]
0x12d43: mov edi,dword ptr [rbx+0x44]
0x12d46: test al,0x4
0x12d48: je 0x1314c
0x12d4e: call 0x2870
0x12d53: mov edi,dword ptr [r12+0x48]
0x12d58: cmp word ptr [rbx+0x70],0x2
0x12d5d: je 0x12d73
0x12d5f: mov ecx,dword ptr [rbx+0x40]
0x12d62: test ecx,ecx
0x12d64: je 0x13108
0x12d6a: mov edx,0x7
0x12d6f: mov word ptr [rbx+0x70],dx
0x12d73: and edi,0x2000
0x12d79: mov rbp,rbx
0x12d7c: je 0x12dfa
0x12d7e: xor ebp,ebp
0x12d80: pop rbx
0x12d81: mov rax,rbp
0x12d84: pop rbp
0x12d85: pop r12
0x12d87: pop r13
0x12d89: pop r14
0x12d8b: ret 
0x12d8c: nop dword ptr [rax+0x0]
0x12d90: lea eax,[rcx-0xc]
0x12d93: cmp ax,0x1
0x12d97: jbe 0x12e10
0x12d99: cmp cx,0x1
0x12d9d: jne 0x12ce0
0x12da3: test dl,0x40
0x12da6: je 0x12e58
0x12dac: mov rax,qword ptr [r12+0x18]
0x12db1: cmp qword ptr [rbp+0x78],rax
0x12db5: je 0x12e58
0x12dbb: test byte ptr [rbp+0x72],0x2
0x12dbf: jne 0x132a0
0x12dc5: mov rdi,qword ptr [r12+0x8]
0x12dca: test rdi,rdi
0x12dcd: je 0x12ddd
0x12dcf: call 0x11530
0x12dd4: mov qword ptr [r12+0x8],0x0
0x12ddd: mov edi,dword ptr [r12+0x48]
0x12de2: mov r10d,0x6
0x12de8: lea rsi,[r12+0x58]
0x12ded: mov word ptr [rbp+0x70],r10w
0x12df2: mov rdx,rbp
0x12df5: call 0x11c80
0x12dfa: pop rbx
0x12dfb: mov rax,rbp
0x12dfe: pop rbp
0x12dff: pop r12
0x12e01: pop r13
0x12e03: pop r14
0x12e05: ret 
0x12e06: nop word ptr cs:[rax+rax*1+0x0]
0x12e10: mov edx,0x1
0x12e15: mov rsi,rbp
0x12e18: call 0x111c0
0x12e1d: cmp ax,0x1
0x12e21: mov word ptr [rbp+0x70],ax
0x12e25: je 0x1316c
0x12e2b: cmp ax,0xb
0x12e2f: mov qword ptr [r12],rbp
0x12e33: jne 0x12dfa
0x12e35: nop dword ptr [rax]
0x12e38: mov rax,qword ptr [rbp+0xa8]
0x12e3f: cmp rax,0x2
0x12e43: je 0x131e8
0x12e49: cmp rax,0x1
0x12e4d: je 0x12dfa
0x12e4f: call 0x2590
0x12e54: nop dword ptr [rax+0x0]
0x12e58: mov rdi,qword ptr [r12+0x8]
0x12e5d: test rdi,rdi
0x12e60: je 0x13078
0x12e66: test dh,0x10
0x12e69: jne 0x13062
0x12e6f: mov rcx,qword ptr [rbp+0x30]
0x12e73: mov edx,0xffffffff
0x12e78: mov rsi,rbp
0x12e7b: mov rdi,r12
0x12e7e: call 0x11950
0x12e83: test eax,eax
0x12e85: je 0x13142
0x12e8b: call 0x25a0
0x12e90: mov eax,dword ptr [rax]
0x12e92: or word ptr [rbp+0x72],0x1
0x12e97: mov dword ptr [rbp+0x40],eax
0x12e9a: mov rbp,qword ptr [r12+0x8]
0x12e9f: test rbp,rbp
0x12ea2: je 0x13096
0x12ea8: mov rax,rbp
0x12eab: nop dword ptr [rax+rax*1+0x0]
0x12eb0: mov rdx,qword ptr [rax+0x8]
0x12eb4: mov rdx,qword ptr [rdx+0x30]
0x12eb8: mov qword ptr [rax+0x30],rdx
0x12ebc: mov rax,qword ptr [rax+0x10]
0x12ec0: test rax,rax
0x12ec3: jne 0x12eb0
0x12ec5: jmp 0x13096
0x12eca: nop word ptr [rax+rax*1+0x0]
0x12ed0: cmp ax,0x4
0x12ed4: jne 0x12da3
0x12eda: jmp 0x12dbb
0x12edf: nop 
0x12ee0: mov rsi,rbp
0x12ee3: xor edx,edx
0x12ee5: call 0x111c0
0x12eea: mov word ptr [rbp+0x70],ax
0x12eee: mov rax,rbp
0x12ef1: pop rbx
0x12ef2: pop rbp
0x12ef3: pop r12
0x12ef5: pop r13
0x12ef7: pop r14
0x12ef9: ret 
0x12efa: nop word ptr [rax+rax*1+0x0]
0x12f00: mov rdi,r12
0x12f03: call 0x117d0
0x12f08: test eax,eax
0x12f0a: jne 0x13311
0x12f10: test dword ptr [r12+0x48],0x102
0x12f19: mov rdi,qword ptr [r12+0x58]
0x12f1e: je 0x13058
0x12f24: test rdi,rdi
0x12f27: je 0x12f2e
0x12f29: call 0xc240
0x12f2e: mov rdx,qword ptr [rbx+0x60]
0x12f32: lea rbp,[rbx+0x108]
0x12f39: mov rdi,qword ptr [r12+0x20]
0x12f3e: mov rsi,rbp
0x12f41: mov qword ptr [rbx+0x48],rdx
0x12f45: add rdx,0x1
0x12f49: call 0x2b00
0x12f4e: mov esi,0x2f
0x12f53: mov rdi,rbp
0x12f56: call 0x27e0
0x12f5b: test rax,rax
0x12f5e: je 0x12f8b
0x12f60: cmp rbp,rax
0x12f63: je 0x13130
0x12f69: lea r13,[rax+0x1]
0x12f6d: mov rdi,r13
0x12f70: call 0x2750
0x12f75: lea rdx,[rax+0x1]
0x12f79: mov r14,rax
0x12f7c: mov rsi,r13
0x12f7f: mov rdi,rbp
0x12f82: call 0x2b00
0x12f87: mov qword ptr [rbx+0x60],r14
0x12f8b: mov rax,qword ptr [r12+0x20]
0x12f90: mov edi,dword ptr [r12+0x48]
0x12f95: lea rsi,[r12+0x58]
0x12f9a: mov rbp,rbx
0x12f9d: mov qword ptr [rbx+0x38],rax
0x12fa1: mov qword ptr [rbx+0x30],rax
0x12fa5: call 0x118a0
0x12faa: movzx eax,word ptr [rbx+0x70]
0x12fae: cmp ax,0xb
0x12fb2: mov qword ptr [r12],rbp
0x12fb6: je 0x12e38
0x12fbc: cmp ax,0x1
0x12fc0: jne 0x12dfa
0x12fc6: cmp qword ptr [rbp+0x58],0x0
0x12fcb: jne 0x12fd6
0x12fcd: mov rax,qword ptr [rbp+0x78]
0x12fd1: mov qword ptr [r12+0x18],rax
0x12fd6: mov edi,dword ptr [r12+0x48]
0x12fdb: lea rsi,[r12+0x58]
0x12fe0: mov rdx,rbp
0x12fe3: call 0x11bd0
0x12fe8: test al,al
0x12fea: jne 0x12dfa
0x12ff0: call 0x25a0
0x12ff5: xor ebp,ebp
0x12ff7: mov dword ptr [rax],0xc
0x12ffd: jmp 0x12dfa
0x13002: nop word ptr [rax+rax*1+0x0]
0x13008: cmp ax,0x2
0x1300c: je 0x132ad
0x13012: mov rax,qword ptr [rbp+0x8]
0x13016: lea rsi,[rbp+0x108]
0x1301d: mov rdi,qword ptr [rax+0x48]
0x13021: mov rax,qword ptr [rax+0x38]
0x13025: cmp byte ptr [rax+rdi*1-0x1],0x2f
0x1302a: lea rdx,[rdi-0x1]
0x1302e: cmove rdi,rdx
0x13032: add rdi,qword ptr [r12+0x20]
0x13037: mov byte ptr [rdi],0x2f
0x1303a: mov rax,qword ptr [rbp+0x60]
0x1303e: add rdi,0x1
0x13042: lea rdx,[rax+0x1]
0x13046: call 0x2b00
0x1304b: movzx eax,word ptr [rbp+0x70]
0x1304f: jmp 0x12fae
0x13054: nop dword ptr [rax+0x0]
0x13058: call 0x2c80
0x1305d: jmp 0x12f2e
0x13062: and dh,0xef
0x13065: mov dword ptr [r12+0x48],edx
0x1306a: call 0x11530
0x1306f: mov qword ptr [r12+0x8],0x0
0x13078: mov esi,0x3
0x1307d: mov rdi,r12
0x13080: call 0x11d40
0x13085: test rax,rax
0x13088: mov qword ptr [r12+0x8],rax
0x1308d: je 0x13184
0x13093: mov rbp,rax
0x13096: mov qword ptr [r12+0x8],0x0
0x1309f: jmp 0x13012
0x130a4: nop dword ptr [rax+0x0]
0x130a8: test al,0x1
0x130aa: jne 0x12d53
0x130b0: mov rsi,qword ptr [rbx+0x8]
0x130b4: lea rcx,[rip+0x2a30]
0x130bb: mov edx,0xffffffff
0x130c0: mov rdi,r12
0x130c3: call 0x11950
0x130c8: test eax,eax
0x130ca: je 0x12d53
0x130d0: call 0x25a0
0x130d5: mov edi,dword ptr [r12+0x48]
0x130da: mov eax,dword ptr [rax]
0x130dc: or edi,0x2000
0x130e2: mov dword ptr [rbx+0x40],eax
0x130e5: mov dword ptr [r12+0x48],edi
0x130ea: jmp 0x12d58
0x130ef: nop 
0x130f0: mov rdi,r12
0x130f3: call 0x117d0
0x130f8: test eax,eax
0x130fa: jne 0x130d0
0x130fc: jmp 0x12d53
0x13101: nop dword ptr [rax+0x0]
0x13108: mov eax,0x6
0x1310d: lea rsi,[r12+0x58]
0x13112: mov rdx,rbx
0x13115: mov word ptr [rbx+0x70],ax
0x13119: call 0x11c80
0x1311e: mov edi,dword ptr [r12+0x48]
0x13123: jmp 0x12d73
0x13128: nop dword ptr [rax+rax*1+0x0]
0x13130: cmp byte ptr [rbx+0x109],0x0
0x13137: jne 0x12f69
0x1313d: jmp 0x12f8b
0x13142: mov rbp,qword ptr [r12+0x8]
0x13147: jmp 0x13096
0x1314c: test ah,0x2
0x1314f: je 0x132ed
0x13155: mov esi,edi
0x13157: mov edx,0x1
0x1315c: mov rdi,r12
0x1315f: call 0x11760
0x13164: mov edi,dword ptr [rbx+0x44]
0x13167: jmp 0x12d4e
0x1316c: mov esi,dword ptr [r12+0x48]
0x13171: test sil,0x4
0x13175: je 0x1337c
0x1317b: mov qword ptr [r12],rbp
0x1317f: jmp 0x12fc6
0x13184: mov edi,dword ptr [r12+0x48]
0x13189: test edi,0x2000
0x1318f: jne 0x12d7e
0x13195: mov r9d,dword ptr [rbp+0x40]
0x13199: test r9d,r9d
0x1319c: je 0x131b0
0x1319e: cmp word ptr [rbp+0x70],0x4
0x131a3: je 0x131b0
0x131a5: mov r8d,0x7
0x131ab: mov word ptr [rbp+0x70],r8w
0x131b0: lea rsi,[r12+0x58]
0x131b5: mov rdx,rbp
0x131b8: call 0x11c80
0x131bd: jmp 0x12dfa
0x131c2: mov rdi,rbx
0x131c5: xor ebp,ebp
0x131c7: call 0x2c80
0x131cc: call 0x25a0
0x131d1: mov dword ptr [rax],0x0
0x131d7: mov qword ptr [r12],0x0
0x131df: jmp 0x12dfa
0x131e4: nop dword ptr [rax+0x0]
0x131e8: mov rbx,qword ptr [rbp+0x8]
0x131ec: cmp qword ptr [rbx+0x68],0x0
0x131f1: jne 0x13204
0x131f3: mov eax,dword ptr [r12+0x48]
0x131f8: and eax,0x18
0x131fb: cmp eax,0x18
0x131fe: je 0x1335d
0x13204: xor edx,edx
0x13206: mov rsi,rbp
0x13209: mov rdi,r12
0x1320c: call 0x111c0
0x13211: mov edx,dword ptr [rbp+0x90]
0x13217: mov word ptr [rbp+0x70],ax
0x1321b: and edx,0xf000
0x13221: cmp edx,0x4000
0x13227: jne 0x12fbc
0x1322d: cmp qword ptr [rbp+0x58],0x0
0x13232: je 0x1334e
0x13238: mov rcx,qword ptr [rbx+0x68]
0x1323c: lea rdx,[rcx-0x1]
0x13240: cmp rdx,0xfffffffffffffffd
0x13244: ja 0x1324a
0x13246: mov qword ptr [rbx+0x68],rdx
0x1324a: cmp ax,0x1
0x1324e: jne 0x12dfa
0x13254: jmp 0x12fd6
0x13259: nop dword ptr [rax+0x0]
0x13260: mov rax,qword ptr [rbx+0x48]
0x13264: mov rdx,qword ptr [r12+0x20]
0x13269: mov esi,0x3
0x1326e: mov qword ptr [r12],rbx
0x13272: mov rdi,r12
0x13275: mov byte ptr [rdx+rax*1],0x0
0x13279: call 0x11d40
0x1327e: test rax,rax
0x13281: mov rbx,rax
0x13284: je 0x132d8
0x13286: mov rdi,rbp
0x13289: mov rbp,rbx
0x1328c: call 0x2c80
0x13291: jmp 0x13012
0x13296: nop word ptr cs:[rax+rax*1+0x0]
0x132a0: mov edi,dword ptr [rbp+0x44]
0x132a3: call 0x2870
0x132a8: jmp 0x12dc5
0x132ad: mov edx,0x1
0x132b2: mov rsi,rbx
0x132b5: mov rdi,r12
0x132b8: call 0x111c0
0x132bd: cmp ax,0x1
0x132c1: mov word ptr [rbx+0x70],ax
0x132c5: je 0x13321
0x132c7: mov esi,0x3
0x132cc: mov rbp,rbx
0x132cf: mov word ptr [rbx+0x74],si
0x132d3: jmp 0x13012
0x132d8: test byte ptr [r12+0x49],0x20
0x132de: jne 0x12d7e
0x132e4: mov rbx,qword ptr [rbp+0x8]
0x132e8: jmp 0x12cf8
0x132ed: call 0x2a60
0x132f2: test eax,eax
0x132f4: je 0x13309
0x132f6: call 0x25a0
0x132fb: mov eax,dword ptr [rax]
0x132fd: mov dword ptr [rbx+0x40],eax
0x13300: or dword ptr [r12+0x48],0x2000
0x13309: mov edi,dword ptr [rbx+0x44]
0x1330c: jmp 0x12d4e
0x13311: or dword ptr [r12+0x48],0x2000
0x1331a: xor ebp,ebp
0x1331c: jmp 0x12dfa
0x13321: mov esi,dword ptr [r12+0x48]
0x13326: test sil,0x4
0x1332a: jne 0x132c7
0x1332c: mov edi,dword ptr [r12+0x2c]
0x13331: lea rdx,[rip+0x27b4]
0x13338: call 0x11910
0x1333d: test eax,eax
0x1333f: mov dword ptr [rbx+0x44],eax
0x13342: js 0x133c0
0x13344: or word ptr [rbx+0x72],0x2
0x13349: jmp 0x132c7
0x1334e: cmp ax,0x1
0x13352: jne 0x12dfa
0x13358: jmp 0x12fcd
0x1335d: mov esi,dword ptr [r12+0x2c]
0x13362: mov rdi,rbx
0x13365: call 0x116f0
0x1336a: cmp eax,0x2
0x1336d: jne 0x13204
0x13373: movzx eax,word ptr [rbp+0x70]
0x13377: jmp 0x12fbc
0x1337c: mov edi,dword ptr [r12+0x2c]
0x13381: lea rdx,[rip+0x2764]
0x13388: call 0x11910
0x1338d: test eax,eax
0x1338f: mov dword ptr [rbp+0x44],eax
0x13392: js 0x133a2
0x13394: or word ptr [rbp+0x72],0x2
0x13399: movzx eax,word ptr [rbp+0x70]
0x1339d: jmp 0x12fae
0x133a2: call 0x25a0
0x133a7: mov eax,dword ptr [rax]
0x133a9: mov r11d,0x7
0x133af: mov word ptr [rbp+0x70],r11w
0x133b4: mov dword ptr [rbp+0x40],eax
0x133b7: mov qword ptr [r12],rbp
0x133bb: jmp 0x12dfa
0x133c0: call 0x25a0
0x133c5: mov eax,dword ptr [rax]
0x133c7: mov edi,0x7
0x133cc: mov word ptr [rbx+0x70],di
0x133d0: mov dword ptr [rbx+0x40],eax
0x133d3: jmp 0x132c7
0x133d8: nop dword ptr [rax+rax*1+0x0]
0x133e0: cmp edx,0x4
0x133e3: ja 0x133f0
0x133e5: mov word ptr [rsi+0x74],dx
0x133e9: xor eax,eax
0x133eb: ret 
0x133ec: nop dword ptr [rax+0x0]
0x133f0: sub rsp,0x8
0x133f4: call 0x25a0
0x133f9: mov dword ptr [rax],0x16
0x133ff: mov eax,0x1
0x13404: add rsp,0x8
0x13408: ret 
0x13409: nop dword ptr [rax+0x0]
0x13410: push r14
0x13412: push r13
0x13414: push r12
0x13416: push rbp
0x13417: mov r12d,esi
0x1341a: push rbx
0x1341b: mov rbx,rdi
0x1341e: call 0x25a0
0x13423: test r12d,0xffffefff
0x1342a: mov r13,rax
0x1342d: jne 0x13518
0x13433: mov rbp,qword ptr [rbx]
0x13436: mov dword ptr [rax],0x0
0x1343c: test byte ptr [rbx+0x49],0x20
0x13440: jne 0x134c0
0x13442: movzx eax,word ptr [rbp+0x70]
0x13446: cmp ax,0x9
0x1344a: je 0x134b0
0x1344c: cmp ax,0x1
0x13450: jne 0x134c0
0x13452: mov rdi,qword ptr [rbx+0x8]
0x13456: test rdi,rdi
0x13459: je 0x13460
0x1345b: call 0x11530
0x13460: cmp r12d,0x1000
0x13467: mov r14d,0x1
0x1346d: jne 0x1347c
0x1346f: or dword ptr [rbx+0x48],0x1000
0x13476: mov r14d,0x2
0x1347c: cmp qword ptr [rbp+0x58],0x0
0x13481: jne 0x13495
0x13483: mov rax,qword ptr [rbp+0x30]
0x13487: cmp byte ptr [rax],0x2f
0x1348a: je 0x13495
0x1348c: mov esi,dword ptr [rbx+0x48]
0x1348f: test sil,0x4
0x13493: je 0x134d0
0x13495: mov esi,r14d
0x13498: mov rdi,rbx
0x1349b: call 0x11d40
0x134a0: mov qword ptr [rbx+0x8],rax
0x134a4: pop rbx
0x134a5: pop rbp
0x134a6: pop r12
0x134a8: pop r13
0x134aa: pop r14
0x134ac: ret 
0x134ad: nop dword ptr [rax]
0x134b0: pop rbx
0x134b1: mov rax,qword ptr [rbp+0x10]
0x134b5: pop rbp
0x134b6: pop r12
0x134b8: pop r13
0x134ba: pop r14
0x134bc: ret 
0x134bd: nop dword ptr [rax]
0x134c0: pop rbx
0x134c1: xor eax,eax
0x134c3: pop rbp
0x134c4: pop r12
0x134c6: pop r13
0x134c8: pop r14
0x134ca: ret 
0x134cb: nop dword ptr [rax+rax*1+0x0]
0x134d0: mov edi,dword ptr [rbx+0x2c]
0x134d3: lea rdx,[rip+0x2612]
0x134da: call 0x11910
0x134df: test eax,eax
0x134e1: mov ebp,eax
0x134e3: js 0x13539
0x134e5: mov esi,r14d
0x134e8: mov rdi,rbx
0x134eb: call 0x11d40
0x134f0: test byte ptr [rbx+0x49],0x2
0x134f4: mov qword ptr [rbx+0x8],rax
0x134f8: jne 0x13528
0x134fa: mov edi,ebp
0x134fc: call 0x2a60
0x13501: test eax,eax
0x13503: jne 0x13548
0x13505: mov edi,ebp
0x13507: call 0x2870
0x1350c: mov rax,qword ptr [rbx+0x8]
0x13510: jmp 0x134a4
0x13512: nop word ptr [rax+rax*1+0x0]
0x13518: mov dword ptr [rax],0x16
0x1351e: xor eax,eax
0x13520: jmp 0x134a4
0x13525: nop dword ptr [rax]
0x13528: mov edx,0x1
0x1352d: mov esi,ebp
0x1352f: mov rdi,rbx
0x13532: call 0x11760
0x13537: jmp 0x1350c
0x13539: mov qword ptr [rbx+0x8],0x0
0x13541: xor eax,eax
0x13543: jmp 0x134a4
0x13548: mov ebx,dword ptr [r13+0x0]
0x1354c: mov edi,ebp
0x1354e: call 0x2870
0x13553: xor eax,eax
0x13555: mov dword ptr [r13+0x0],ebx
0x13559: jmp 0x134a4
0x1355e: xchg ax,ax
0x135de: call 0x2780
0x135e3: nop word ptr cs:[rax+rax*1+0x0]
0x135ed: nop dword ptr [rax]
0x135f0: repz ret
0x135f2: nop word ptr cs:[rax+rax*1+0x0]
0x135fc: nop dword ptr [rax+0x0]
0x13600: mov dword ptr [rcx],edx
0x13602: xor eax,eax
0x13604: ret 
0x13605: nop word ptr cs:[rax+rax*1+0x0]
0x1360f: nop 
0x13610: mov eax,esi
0x13612: mov esi,edx
0x13614: cmp eax,0xffffffff
0x13617: je 0x13620
0x13619: mov edi,eax
0x1361b: jmp 0x2ac0
0x13620: jmp 0x2ae0
0x13625: nop 
0x13626: nop word ptr cs:[rax+rax*1+0x0]
0x13630: sub rsp,0x8
0x13634: mov rax,rsi
0x13637: mov esi,edx
0x13639: mov edx,dword ptr [rdi]
0x1363b: mov rdi,rax
0x1363e: call 0x13610
0x13643: test eax,eax
0x13645: setne al
0x13648: add rsp,0x8
0x1364c: movzx eax,al
0x1364f: neg eax
0x13651: ret 
0x13652: nop word ptr cs:[rax+rax*1+0x0]
0x1365c: nop dword ptr [rax+0x0]
0x13660: mov edi,0x1
0x13665: jmp 0x3780
0x1366a: nop word ptr [rax+rax*1+0x0]
0x136b6: nop word ptr cs:[rax+rax*1+0x0]
0x13770: mov byte ptr [rsp+0x17],0x1
0x13775: jmp 0x136f7
0x13777: nop word ptr [rax+rax*1+0x0]
0x13786: nop word ptr cs:[rax+rax*1+0x0]
0x137ed: nop dword ptr [rax]
0x13803: nop dword ptr [rax]
0x13806: nop word ptr cs:[rax+rax*1+0x0]
0x13810: push r15
0x13812: push r14
0x13814: mov r14,rdi
0x13817: push r13
0x13819: push r12
0x1381b: xor edi,edi
0x1381d: push rbp
0x1381e: push rbx
0x1381f: mov rbp,rsi
0x13822: lea rsi,[rip+0x3bff]
0x13829: mov r12,rdx
0x1382c: mov edx,0x5
0x13831: sub rsp,0x8
0x13835: mov rbx,qword ptr [rip+0x2088c4]
0x1383c: call 0x2730
0x13841: mov rdi,rax
0x13844: mov rsi,rbx
0x13847: call 0x28f0
0x1384c: mov r15,qword ptr [r14]
0x1384f: test r15,r15
0x13852: je 0x138e8
0x13858: xor r13d,r13d
0x1385b: xor ebx,ebx
0x1385d: jmp 0x13898
0x1385f: nop 
0x13860: mov rdi,r15
0x13863: add rbx,0x1
0x13867: mov r13,rbp
0x1386a: call 0xe9a0
0x1386f: mov rdi,qword ptr [rip+0x20888a]
0x13876: lea rdx,[rip+0x3bc0]
0x1387d: mov rcx,rax
0x13880: mov esi,0x1
0x13885: xor eax,eax
0x13887: add rbp,r12
0x1388a: call 0x2c20
0x1388f: mov r15,qword ptr [r14+rbx*8]
0x13893: test r15,r15
0x13896: je 0x138e8
0x13898: test rbx,rbx
0x1389b: je 0x13860
0x1389d: mov rdx,r12
0x138a0: mov rsi,rbp
0x138a3: mov rdi,r13
0x138a6: call 0x28d0
0x138ab: test eax,eax
0x138ad: jne 0x13860
0x138af: mov rdi,r15
0x138b2: add rbx,0x1
0x138b6: add rbp,r12
0x138b9: call 0xe9a0
0x138be: mov rdi,qword ptr [rip+0x20883b]
0x138c5: lea rdx,[rip+0x3b79]
0x138cc: mov rcx,rax
0x138cf: mov esi,0x1
0x138d4: xor eax,eax
0x138d6: call 0x2c20
0x138db: mov r15,qword ptr [r14+rbx*8]
0x138df: test r15,r15
0x138e2: jne 0x13898
0x138e4: nop dword ptr [rax+0x0]
0x138e8: mov rdi,qword ptr [rip+0x208811]
0x138ef: mov rax,qword ptr [rdi+0x28]
0x138f3: cmp rax,qword ptr [rdi+0x30]
0x138f7: jae 0x13918
0x138f9: lea rdx,[rax+0x1]
0x138fd: mov qword ptr [rdi+0x28],rdx
0x13901: mov byte ptr [rax],0xa
0x13904: add rsp,0x8
0x13908: pop rbx
0x13909: pop rbp
0x1390a: pop r12
0x1390c: pop r13
0x1390e: pop r14
0x13910: pop r15
0x13912: ret 
0x13913: nop dword ptr [rax+rax*1+0x0]
0x13918: add rsp,0x8
0x1391c: mov esi,0xa
0x13921: pop rbx
0x13922: pop rbp
0x13923: pop r12
0x13925: pop r13
0x13927: pop r14
0x13929: pop r15
0x1392b: jmp 0x27d0
0x13983: mov rdx,r15
0x13986: mov rsi,rbp
0x13989: mov rdi,rbx
0x1398c: call 0x13810
0x13991: call r13
0x13994: mov rax,0xffffffffffffffff
0x1399b: jmp 0x13966
0x1399d: nop dword ptr [rax]
0x139a0: push r14
0x139a2: push r13
0x139a4: push r12
0x139a6: push rbp
0x139a7: push rbx
0x139a8: mov r14,qword ptr [rsi]
0x139ab: test r14,r14
0x139ae: je 0x139e1
0x139b0: mov r12,rcx
0x139b3: mov r13,rdi
0x139b6: mov rbp,rdx
0x139b9: lea rbx,[rsi+0x8]
0x139bd: jmp 0x139cf
0x139bf: nop 
0x139c0: mov r14,qword ptr [rbx]
0x139c3: add rbp,r12
0x139c6: add rbx,0x8
0x139ca: test r14,r14
0x139cd: je 0x139e1
0x139cf: mov rdx,r12
0x139d2: mov rsi,rbp
0x139d5: mov rdi,r13
0x139d8: call 0x28d0
0x139dd: test eax,eax
0x139df: jne 0x139c0
0x139e1: pop rbx
0x139e2: mov rax,r14
0x139e5: pop rbp
0x139e6: pop r12
0x139e8: pop r13
0x139ea: pop r14
0x139ec: ret 
0x139ed: nop dword ptr [rax]
0x139f0: push r12
0x139f2: push rbp
0x139f3: mov rbp,rdi
0x139f6: push rbx
0x139f7: call 0x25f0
0x139fc: mov ebx,dword ptr [rbp+0x0]
0x139ff: mov rdi,rbp
0x13a02: mov r12,rax
0x13a05: call 0x14ab0
0x13a0a: and ebx,0x20
0x13a0d: test ebx,ebx
0x13a0f: jne 0x13a28
0x13a11: test eax,eax
0x13a13: je 0x13a1f
0x13a15: test r12,r12
0x13a18: mov eax,0xffffffff
0x13a1d: je 0x13a58
0x13a1f: pop rbx
0x13a20: pop rbp
0x13a21: pop r12
0x13a23: ret 
0x13a24: nop dword ptr [rax+0x0]
0x13a28: test eax,eax
0x13a2a: jne 0x13a48
0x13a2c: call 0x25a0
0x13a31: mov dword ptr [rax],0x0
0x13a37: mov eax,0xffffffff
0x13a3c: pop rbx
0x13a3d: pop rbp
0x13a3e: pop r12
0x13a40: ret 
0x13a41: nop dword ptr [rax+0x0]
0x13a48: pop rbx
0x13a49: mov eax,0xffffffff
0x13a4e: pop rbp
0x13a4f: pop r12
0x13a51: ret 
0x13a52: nop word ptr [rax+rax*1+0x0]
0x13a58: call 0x25a0
0x13a5d: cmp dword ptr [rax],0x9
0x13a60: pop rbx
0x13a61: pop rbp
0x13a62: pop r12
0x13a64: setne al
0x13a67: movzx eax,al
0x13a6a: neg eax
0x13a6c: ret 
0x13a6d: nop dword ptr [rax]
0x13a70: mov qword ptr [rdi+0x10],0x0
0x13a78: mov dword ptr [rdi+0x18],0x95f616
0x13a7f: ret 
0x13a80: cmp dword ptr [rdi+0x18],0x95f616
0x13a87: jne 0x13ae7
0x13a89: mov rdx,qword ptr [rdi+0x10]
0x13a8d: mov rcx,qword ptr [rsi+0x8]
0x13a91: test rdx,rdx
0x13a94: je 0x13ab0
0x13a96: cmp qword ptr [rdi],rcx
0x13a99: je 0x13ac8
0x13a9b: lea r8,[rdx+0x1]
0x13a9f: xor eax,eax
0x13aa1: test rdx,r8
0x13aa4: mov qword ptr [rdi+0x10],r8
0x13aa8: je 0x13ae0
0x13aaa: repz ret
0x13aac: nop dword ptr [rax+0x0]
0x13ab0: mov qword ptr [rdi+0x10],0x1
0x13ab8: mov rax,qword ptr [rsi]
0x13abb: mov qword ptr [rdi],rcx
0x13abe: mov qword ptr [rdi+0x8],rax
0x13ac2: xor eax,eax
0x13ac4: ret 
0x13ac5: nop dword ptr [rax]
0x13ac8: mov rax,qword ptr [rdi+0x8]
0x13acc: cmp qword ptr [rsi],rax
0x13acf: jne 0x13a9b
0x13ad1: mov eax,0x1
0x13ad6: ret 
0x13ad7: nop word ptr [rax+rax*1+0x0]
0x13ae0: test r8,r8
0x13ae3: je 0x13ad1
0x13ae5: jmp 0x13ab8
0x13ae7: lea rcx,[rip+0x39a2]
0x13aee: lea rsi,[rip+0x395b]
0x13af5: lea rdi,[rip+0x397c]
0x13afc: sub rsp,0x8
0x13b00: mov edx,0x3c
0x13b05: call 0x2820
0x13b0a: nop word ptr [rax+rax*1+0x0]
0x13b10: push r14
0x13b12: push r13
0x13b14: push r12
0x13b16: push rbp
0x13b17: push rbx
0x13b18: call 0x26f0
0x13b1d: test rax,rax
0x13b20: mov rbx,rax
0x13b23: je 0x13b32
0x13b25: mov rdi,rax
0x13b28: call 0x2940
0x13b2d: cmp eax,0x2
0x13b30: jbe 0x13b40
0x13b32: mov rax,rbx
0x13b35: pop rbx
0x13b36: pop rbp
0x13b37: pop r12
0x13b39: pop r13
0x13b3b: pop r14
0x13b3d: ret 
0x13b3e: xchg ax,ax
0x13b40: mov edi,eax
0x13b42: mov edx,0x3
0x13b47: mov esi,0x406
0x13b4c: xor eax,eax
0x13b4e: call 0x14b30
0x13b53: mov r12d,eax
0x13b56: call 0x25a0
0x13b5b: test r12d,r12d
0x13b5e: mov rbp,rax
0x13b61: jns 0x13b88
0x13b63: mov r14d,dword ptr [rax]
0x13b66: xor r13d,r13d
0x13b69: mov rdi,rbx
0x13b6c: mov rbx,r13
0x13b6f: call 0x28a0
0x13b74: mov dword ptr [rbp+0x0],r14d
0x13b78: mov rax,rbx
0x13b7b: pop rbx
0x13b7c: pop rbp
0x13b7d: pop r12
0x13b7f: pop r13
0x13b81: pop r14
0x13b83: ret 
0x13b84: nop dword ptr [rax+0x0]
0x13b88: mov edi,r12d
0x13b8b: call 0x2b80
0x13b90: test rax,rax
0x13b93: mov r13,rax
0x13b96: mov r14d,dword ptr [rbp+0x0]
0x13b9a: jne 0x13b69
0x13b9c: mov edi,r12d
0x13b9f: call 0x2870
0x13ba4: jmp 0x13b69
0x13ba6: nop word ptr cs:[rax+rax*1+0x0]
0x13bb0: mov rsi,rdi
0x13bb3: xor edi,edi
0x13bb5: jmp 0x2680
0x13bba: nop word ptr [rax+rax*1+0x0]
0x13bc0: sub rsp,0x28
0x13bc4: xor edi,edi
0x13bc6: mov rsi,rsp
0x13bc9: mov rax,qword ptr fs:0x28
0x13bd2: mov qword ptr [rsp+0x18],rax
0x13bd7: xor eax,eax
0x13bd9: call 0x2680
0x13bde: mov rcx,qword ptr [rsp+0x18]
0x13be3: xor rcx,qword ptr fs:0x28
0x13bec: mov rax,qword ptr [rsp]
0x13bf0: mov rdx,qword ptr [rsp+0x8]
0x13bf5: jne 0x13bfc
0x13bf7: add rsp,0x28
0x13bfb: ret 
0x13bfc: call 0x2780
0x13c01: nop word ptr cs:[rax+rax*1+0x0]
0x13c0b: nop dword ptr [rax+rax*1+0x0]
0x13c4a: nop word ptr [rax+rax*1+0x0]
0x13c70: movsx rcx,byte ptr [rdi]
0x13c74: test cl,cl
0x13c76: je 0x13ca0
0x13c78: xor eax,eax
0x13c7a: nop word ptr [rax+rax*1+0x0]
0x13c80: rol rax,0x9
0x13c84: add rdi,0x1
0x13c88: add rax,rcx
0x13c8b: movsx rcx,byte ptr [rdi]
0x13c8f: test cl,cl
0x13c91: jne 0x13c80
0x13c93: xor edx,edx
0x13c95: div rsi
0x13c98: mov rax,rdx
0x13c9b: ret 
0x13c9c: nop dword ptr [rax+0x0]
0x13ca0: xor edx,edx
0x13ca2: mov rax,rdx
0x13ca5: ret 
0x13ca6: nop word ptr cs:[rax+rax*1+0x0]
0x13cb0: mov byte ptr [rdi+0x1c],0x1
0x13cb4: mov qword ptr [rdi+0x14],0x0
0x13cbc: mov dword ptr [rdi],esi
0x13cbe: mov dword ptr [rdi+0x4],esi
0x13cc1: mov dword ptr [rdi+0x8],esi
0x13cc4: mov dword ptr [rdi+0xc],esi
0x13cc7: mov dword ptr [rdi+0x10],esi
0x13cca: ret 
0x13ccb: nop dword ptr [rax+rax*1+0x0]
0x13cd0: movzx eax,byte ptr [rdi+0x1c]
0x13cd4: ret 
0x13cd5: nop 
0x13cd6: nop word ptr cs:[rax+rax*1+0x0]
0x13ce0: movzx edx,byte ptr [rdi+0x1c]
0x13ce4: mov ecx,dword ptr [rdi+0x14]
0x13ce7: xor edx,0x1
0x13cea: movzx edx,dl
0x13ced: add ecx,edx
0x13cef: and ecx,0x3
0x13cf2: mov eax,ecx
0x13cf4: lea r8,[rdi+rax*4]
0x13cf8: mov eax,dword ptr [r8]
0x13cfb: mov dword ptr [r8],esi
0x13cfe: mov esi,dword ptr [rdi+0x18]
0x13d01: mov dword ptr [rdi+0x14],ecx
0x13d04: cmp esi,ecx
0x13d06: jne 0x13d10
0x13d08: add edx,esi
0x13d0a: and edx,0x3
0x13d0d: mov dword ptr [rdi+0x18],edx
0x13d10: mov byte ptr [rdi+0x1c],0x0
0x13d14: ret 
0x13d15: nop 
0x13d16: nop word ptr cs:[rax+rax*1+0x0]
0x13d20: cmp byte ptr [rdi+0x1c],0x0
0x13d24: jne 0x13d55
0x13d26: mov eax,dword ptr [rdi+0x14]
0x13d29: mov esi,dword ptr [rdi+0x10]
0x13d2c: lea rcx,[rdi+rax*4]
0x13d30: mov rdx,rax
0x13d33: mov eax,dword ptr [rcx]
0x13d35: mov dword ptr [rcx],esi
0x13d37: cmp edx,dword ptr [rdi+0x18]
0x13d3a: je 0x13d50
0x13d3c: add edx,0x3
0x13d3f: and edx,0x3
0x13d42: mov dword ptr [rdi+0x14],edx
0x13d45: ret 
0x13d46: nop word ptr cs:[rax+rax*1+0x0]
0x13d50: mov byte ptr [rdi+0x1c],0x1
0x13d54: ret 
0x13d55: sub rsp,0x8
0x13d59: call 0x2590
0x13d5e: xchg ax,ax
0x13d86: nop word ptr cs:[rax+rax*1+0x0]
0x13d9c: nop dword ptr [rax+0x0]
0x13de3: nop dword ptr [rax+rax*1+0x0]
0x13de8: lea rax,[rsp+0x60]
0x13ded: mov dword ptr [rsp],0x18
0x13df4: mov ecx,dword ptr [rsp+0x38]
0x13df8: mov qword ptr [rsp+0x8],rax
0x13dfd: lea rax,[rsp+0x20]
0x13e02: mov qword ptr [rsp+0x10],rax
0x13e07: jmp 0x13dc0
0x13e09: call 0x2780
0x13e0e: xchg ax,ax
0x13e10: push rbx
0x13e11: mov rbx,rdi
0x13e14: mov edi,0x18
0x13e19: call 0x10cc0
0x13e1e: mov qword ptr [rax],rbx
0x13e21: mov qword ptr [rax+0x10],0x0
0x13e29: mov qword ptr [rax+0x8],0x0
0x13e31: pop rbx
0x13e32: ret 
0x13e33: nop dword ptr [rax]
0x13e36: nop word ptr cs:[rax+rax*1+0x0]
0x13e6d: nop dword ptr [rax]
0x13e74: xchg ax,ax
0x13e76: nop word ptr cs:[rax+rax*1+0x0]
0x13e80: mov rax,qword ptr [rdi]
0x13e83: ret 
0x13e84: xchg ax,ax
0x13e86: nop word ptr cs:[rax+rax*1+0x0]
0x13ecf: nop 
0x13f91: nop dword ptr [rax+0x0]
0x13fa5: call 0x2780
0x13faa: nop word ptr [rax+rax*1+0x0]
0x13fb0: push rbx
0x13fb1: mov rdx,0xffffffffffffffff
0x13fb8: mov rbx,rdi
0x13fbb: mov esi,0x18
0x13fc0: call 0x2b20
0x13fc5: mov rdi,rbx
0x13fc8: pop rbx
0x13fc9: jmp 0x2c80
0x13fce: xchg ax,ax
0x14021: nop word ptr cs:[rax+rax*1+0x0]
0x1402b: nop dword ptr [rax+rax*1+0x0]
0x14030: push rbp
0x14031: push rbx
0x14032: sub rsp,0x8
0x14036: test rdi,rdi
0x14039: je 0x14078
0x1403b: call 0xe9a0
0x14040: mov rbp,rax
0x14043: call 0x25a0
0x14048: cmp dword ptr [rax],0x0
0x1404b: mov rbx,rax
0x1404e: mov edx,0x5
0x14053: je 0x1407d
0x14055: lea rsi,[rip+0x345e]
0x1405c: xor edi,edi
0x1405e: call 0x2730
0x14063: mov edi,dword ptr [rip+0x207fbf]
0x14069: mov esi,dword ptr [rbx]
0x1406b: mov rdx,rax
0x1406e: mov rcx,rbp
0x14071: xor eax,eax
0x14073: call 0x2b10
0x14078: call 0x2590
0x1407d: lea rsi,[rip+0x3426]
0x14084: xor edi,edi
0x14086: call 0x2730
0x1408b: jmp 0x14063
0x1408d: nop dword ptr [rax]
0x140c2: lea rsi,[rip+0x340d]
0x140c9: call 0x14db0
0x140ce: test rax,rax
0x140d1: mov r13,rax
0x140d4: je 0x142d8
0x140da: mov edi,0x1038
0x140df: call 0x10cc0
0x140e4: mov rbx,rax
0x140e7: mov qword ptr [rax],r13
0x140ea: lea rax,[rip+0xffffffffffffff3f]
0x140f1: cmp rbp,0x1000
0x140f8: mov ecx,0x1000
0x140fd: lea rsi,[rbx+0x18]
0x14101: cmovbe rcx,rbp
0x14105: mov qword ptr [rbx+0x8],rax
0x14109: mov qword ptr [rbx+0x10],r12
0x1410d: xor edx,edx
0x1410f: mov rdi,r13
0x14112: call 0x2ad0
0x1413d: nop dword ptr [rax]
0x141d2: nop word ptr [rax+rax*1+0x0]
0x141d8: mov edi,0x1038
0x141dd: call 0x10cc0
0x141e2: mov rbx,rax
0x141e5: mov qword ptr [rax],0x0
0x141ec: lea rax,[rip+0xfffffffffffffe3d]
0x141f3: mov qword ptr [rbx+0x10],0x0
0x141fb: mov qword ptr [rbx+0x8],rax
0x141ff: jmp 0x14117
0x14204: nop dword ptr [rax+0x0]
0x142d2: nop word ptr [rax+rax*1+0x0]
0x142d8: xor ebx,ebx
0x142da: jmp 0x14117
0x142df: call 0x2780
0x1432d: mov r15,r14
0x14330: mov r8d,0x4
0x14336: sub r15,rbp
0x14339: mov qword ptr [rsp+0x8],r8
0x1433e: cmp r15,0x4
0x14342: cmova r15,r8
0x14346: lea rdx,[rbp+r15*1+0x0]
0x1434b: add rbp,r13
0x1434e: mov qword ptr [rsp],rdx
0x14352: call 0x26a0
0x14357: mov rdx,qword ptr [rsp]
0x1435b: mov dword ptr [rsp+0x10],eax
0x1435f: mov ecx,r15d
0x14362: mov rdi,rbp
0x14365: mov rsi,r12
0x14368: mov r8,qword ptr [rsp+0x8]
0x1436d: rep movs byte ptr es:[rdi],byte ptr ds:[rsi]
0x1436f: cmp rdx,0x7ff
0x14376: jg 0x141c5
0x1437c: sub r14,rdx
0x1437f: cmp r14,0x4
0x14383: cmova r14,r8
0x14387: call 0x2bf0
0x1438c: mov rdx,qword ptr [rsp]
0x14390: mov dword ptr [rsp+0x10],eax
0x14394: mov ecx,r14d
0x14397: mov rsi,r12
0x1439a: lea rax,[r13+rdx*1+0x0]
0x1439f: add r14,rdx
0x143a2: cmp r14,0x7ff
0x143a9: mov rdi,rax
0x143ac: rep movs byte ptr es:[rdi],byte ptr ds:[rsi]
0x143ae: ja 0x141c5
0x143b4: jmp 0x1423f
0x143b9: nop dword ptr [rax+0x0]
0x143c0: mov qword ptr [rdi+0x8],rsi
0x143c4: ret 
0x143c5: nop 
0x143c6: nop word ptr cs:[rax+rax*1+0x0]
0x143d0: mov qword ptr [rdi+0x10],rsi
0x143d4: ret 
0x143d5: nop 
0x143d6: nop word ptr cs:[rax+rax*1+0x0]
0x14404: call 0x25a0
0x14409: mov rcx,qword ptr [rsp+0x8]
0x1440e: mov r13,rax
0x14411: jmp 0x14436
0x14413: nop dword ptr [rax+rax*1+0x0]
0x14418: mov rax,qword ptr [r12]
0x1441c: mov rdi,qword ptr [r12+0x10]
0x14421: mov eax,dword ptr [rax]
0x14423: and eax,0x20
0x14426: cmovne eax,edx
0x14429: mov dword ptr [r13+0x0],eax
0x1442d: call qword ptr [r12+0x8]
0x14432: mov rcx,qword ptr [r12]
0x14436: mov rdx,rbp
0x14439: mov rdi,rbx
0x1443c: mov esi,0x1
0x14441: call 0x26b0
0x14446: add rbx,rax
0x14449: sub rbp,rax
0x1444c: mov edx,dword ptr [r13+0x0]
0x14450: jne 0x14418
0x14461: nop dword ptr [rax+0x0]
0x144c8: nop dword ptr [rax+rax*1+0x0]
0x1450e: xchg ax,ax
0x14576: nop word ptr cs:[rax+rax*1+0x0]
0x145aa: add rsp,0x8
0x145ae: mov rdi,rbp
0x145b1: pop rbx
0x145b2: pop rbp
0x145b3: jmp 0x14ab0
0x145b8: nop dword ptr [rax+rax*1+0x0]
0x145c9: nop dword ptr [rax+0x0]
0x1485e: xchg ax,ax
0x14aae: xchg ax,ax
0x14ab0: push r12
0x14ab2: push rbp
0x14ab3: push rbx
0x14ab4: mov rbx,rdi
0x14ab7: call 0x29c0
0x14abc: test eax,eax
0x14abe: mov rdi,rbx
0x14ac1: js 0x14b17
0x14ac3: call 0x2a50
0x14ac8: test eax,eax
0x14aca: jne 0x14af8
0x14acc: mov rdi,rbx
0x14acf: call 0x11070
0x14ad4: test eax,eax
0x14ad6: je 0x14b14
0x14ad8: call 0x25a0
0x14add: mov r12d,dword ptr [rax]
0x14ae0: mov rdi,rbx
0x14ae3: mov rbp,rax
0x14ae6: call 0x26e0
0x14aeb: test r12d,r12d
0x14aee: jne 0x14b20
0x14af0: pop rbx
0x14af1: pop rbp
0x14af2: pop r12
0x14af4: ret 
0x14af5: nop dword ptr [rax]
0x14af8: mov rdi,rbx
0x14afb: call 0x29c0
0x14b00: xor esi,esi
0x14b02: mov edx,0x1
0x14b07: mov edi,eax
0x14b09: call 0x2800
0x14b0e: cmp rax,0xffffffffffffffff
0x14b12: jne 0x14acc
0x14b14: mov rdi,rbx
0x14b17: pop rbx
0x14b18: pop rbp
0x14b19: pop r12
0x14b1b: jmp 0x26e0
0x14b20: mov dword ptr [rbp+0x0],r12d
0x14b24: mov eax,0xffffffff
0x14b29: jmp 0x14af0
0x14b2b: nop dword ptr [rax+rax*1+0x0]
0x14b81: cmp esi,0x406
0x14b87: jne 0x14bd0
0x14b89: mov rax,qword ptr [rsp+0x10]
0x14b8e: cmp dword ptr [rip+0x207b5f],0x0
0x14b95: mov dword ptr [rsp],0x18
0x14b9c: mov r12d,dword ptr [rax+0x10]
0x14ba0: mov edx,r12d
0x14ba3: js 0x14cd3
0x14ba9: xor eax,eax
0x14bab: mov esi,0x406
0x14bb0: call 0x2670
0x14bb5: test eax,eax
0x14bb7: mov ebx,eax
0x14bb9: js 0x14d48
0x14bbf: mov dword ptr [rip+0x207b2b],0x1
0x14bc9: jmp 0x14c10
0x14bcb: nop dword ptr [rax+rax*1+0x0]
0x14bd0: cmp esi,0xb
0x14bd3: je 0x14c00
0x14bd5: jg 0x14c30
0x14bd7: cmp esi,0x4
0x14bda: je 0x14cb0
0x14be0: jg 0x14ca0
0x14be6: cmp esi,0x2
0x14be9: je 0x14cb0
0x14bef: jg 0x14c00
0x14bf1: cmp esi,0x1
0x14bf4: jne 0x14c58
0x14bf6: nop word ptr cs:[rax+rax*1+0x0]
0x14c00: mov edi,ebp
0x14c02: xor eax,eax
0x14c04: call 0x2670
0x14c09: mov ebx,eax
0x14c0b: nop dword ptr [rax+rax*1+0x0]
0x14c2f: nop 
0x14c30: cmp esi,0x407
0x14c36: jg 0x14c80
0x14c38: cmp esi,0x406
0x14c3e: jge 0x14cb0
0x14c40: cmp esi,0x401
0x14c46: je 0x14c00
0x14c48: cmp esi,0x402
0x14c4e: je 0x14cb0
0x14c50: cmp esi,0x400
0x14c56: je 0x14cb0
0x14c58: mov eax,dword ptr [rsp]
0x14c5b: cmp eax,0x2f
0x14c5e: ja 0x14d9a
0x14c64: add rax,qword ptr [rsp+0x10]
0x14c69: mov rdx,qword ptr [rax]
0x14c6c: mov edi,ebp
0x14c6e: xor eax,eax
0x14c70: call 0x2670
0x14c75: mov ebx,eax
0x14c77: jmp 0x14c10
0x14c79: nop dword ptr [rax+0x0]
0x14c80: cmp esi,0x409
0x14c86: je 0x14cb0
0x14c88: jl 0x14c00
0x14c8e: cmp esi,0x40a
0x14c94: jne 0x14c58
0x14c96: jmp 0x14c00
0x14c9b: nop dword ptr [rax+rax*1+0x0]
0x14ca0: cmp esi,0x9
0x14ca3: je 0x14c00
0x14ca9: jg 0x14cb0
0x14cab: cmp esi,0x8
0x14cae: jne 0x14c58
0x14cb0: mov eax,dword ptr [rsp]
0x14cb3: cmp eax,0x2f
0x14cb6: ja 0x14da4
0x14cbc: add rax,qword ptr [rsp+0x10]
0x14cc1: mov edx,dword ptr [rax]
0x14cc3: mov edi,ebp
0x14cc5: xor eax,eax
0x14cc7: call 0x2670
0x14ccc: mov ebx,eax
0x14cce: jmp 0x14c10
0x14cd3: xor esi,esi
0x14cd5: xor eax,eax
0x14cd7: call 0x2670
0x14cdc: test eax,eax
0x14cde: mov ebx,eax
0x14ce0: js 0x14c10
0x14ce6: cmp dword ptr [rip+0x207a07],0xffffffff
0x14ced: jne 0x14c10
0x14cf3: xor eax,eax
0x14cf5: mov esi,0x1
0x14cfa: mov edi,ebx
0x14cfc: call 0x2670
0x14d01: test eax,eax
0x14d03: js 0x14d21
0x14d05: or eax,0x1
0x14d08: mov esi,0x2
0x14d0d: mov edi,ebx
0x14d0f: mov edx,eax
0x14d11: xor eax,eax
0x14d13: call 0x2670
0x14d18: cmp eax,0xffffffff
0x14d1b: jne 0x14c10
0x14d21: call 0x25a0
0x14d26: mov r12d,dword ptr [rax]
0x14d29: mov rbp,rax
0x14d2c: mov edi,ebx
0x14d2e: call 0x2870
0x14d33: mov ebx,0xffffffff
0x14d38: mov dword ptr [rbp+0x0],r12d
0x14d3c: jmp 0x14c10
0x14d41: nop dword ptr [rax+0x0]
0x14d48: call 0x25a0
0x14d4d: cmp dword ptr [rax],0x16
0x14d50: jne 0x14bbf
0x14d56: xor esi,esi
0x14d58: xor eax,eax
0x14d5a: mov edx,r12d
0x14d5d: mov edi,ebp
0x14d5f: call 0x2670
0x14d64: test eax,eax
0x14d66: mov ebx,eax
0x14d68: js 0x14c10
0x14d6e: mov dword ptr [rip+0x20797c],0xffffffff
0x14d78: jmp 0x14cf3
0x14d7d: call 0x2780
0x14d9a: mov rax,qword ptr [rsp+0x8]
0x14d9f: jmp 0x14c69
0x14da4: mov rax,qword ptr [rsp+0x8]
0x14da9: jmp 0x14cc1
0x14dae: xchg ax,ax
0x14db0: push r12
0x14db2: push rbp
0x14db3: mov rbp,rsi
0x14db6: push rbx
0x14db7: call 0x2b60
0x14dbc: test rax,rax
0x14dbf: mov rbx,rax
0x14dc2: je 0x14dd1
0x14dc4: mov rdi,rax
0x14dc7: call 0x29c0
0x14dcc: cmp eax,0x2
0x14dcf: jbe 0x14de0
0x14dd1: mov rax,rbx
0x14dd4: pop rbx
0x14dd5: pop rbp
0x14dd6: pop r12
0x14dd8: ret 
0x14dd9: nop dword ptr [rax+0x0]
0x14de0: mov edi,eax
0x14de2: call 0x14aa0
0x14de7: test eax,eax
0x14de9: mov r12d,eax
0x14dec: js 0x14e28
0x14dee: mov rdi,rbx
0x14df1: call 0x14ab0
0x14df6: test eax,eax
0x14df8: jne 0x14e0d
0x14dfa: mov rsi,rbp
0x14dfd: mov edi,r12d
0x14e00: call 0x2a80
0x14e05: test rax,rax
0x14e08: mov rbx,rax
0x14e0b: jne 0x14dd1
0x14e0d: call 0x25a0
0x14e12: mov ebp,dword ptr [rax]
0x14e14: mov rbx,rax
0x14e17: mov edi,r12d
0x14e1a: call 0x2870
0x14e1f: mov dword ptr [rbx],ebp
0x14e21: xor ebx,ebx
0x14e23: jmp 0x14dd1
0x14e25: nop dword ptr [rax]
0x14e28: call 0x25a0
0x14e2d: mov r12d,dword ptr [rax]
0x14e30: mov rbp,rax
0x14e33: mov rdi,rbx
0x14e36: call 0x14ab0
0x14e3b: xor ebx,ebx
0x14e3d: mov dword ptr [rbp+0x0],r12d
0x14e41: jmp 0x14dd1
0x14e43: nop word ptr cs:[rax+rax*1+0x0]
0x14e4d: nop dword ptr [rax]
0x14e50: push r15
0x14e52: push r14
0x14e54: mov r15,rdx
0x14e57: push r13
0x14e59: push r12
0x14e5b: lea r12,[rip+0x20692e]
0x14e62: push rbp
0x14e63: lea rbp,[rip+0x20692e]
0x14e6a: push rbx
0x14e6b: mov r13d,edi
0x14e6e: mov r14,rsi
0x14e71: sub rbp,r12
0x14e74: sub rsp,0x8
0x14e78: sar rbp,0x3
0x14e7c: call 0x2540
0x14e81: test rbp,rbp
0x14e84: je 0x14ea6
0x14e86: xor ebx,ebx
0x14e88: nop dword ptr [rax+rax*1+0x0]
0x14e90: mov rdx,r15
0x14e93: mov rsi,r14
0x14e96: mov edi,r13d
0x14e99: call qword ptr [r12+rbx*8]
0x14e9d: add rbx,0x1
0x14ea1: cmp rbp,rbx
0x14ea4: jne 0x14e90
0x14ea6: add rsp,0x8
0x14eaa: pop rbx
0x14eab: pop rbp
0x14eac: pop r12
0x14eae: pop r13
0x14eb0: pop r14
0x14eb2: pop r15
0x14eb4: ret 
0x14eb5: nop 
0x14eb6: nop word ptr cs:[rax+rax*1+0x0]
0x14ec0: repz ret
0x14ec2: nop word ptr cs:[rax+rax*1+0x0]
0x14ecc: nop dword ptr [rax+0x0]
0x14ee0: sub rsp,0x8
0x14ee4: add rsp,0x8
0x14ee8: ret 
