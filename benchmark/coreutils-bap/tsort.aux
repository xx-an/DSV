0x13b8: sub rsp,0x8
0x13bc: mov rax,qword ptr [rip+0x206c0d]
0x13c3: test rax,rax
0x13c6: je 0x13ca
0x13c8: call rax
0x13ca: add rsp,0x8
0x13ce: ret 
0x13d6: jmp qword ptr [rip+0x206a5c]
0x1430: jmp qword ptr [rip+0x206a32]
0x1440: jmp qword ptr [rip+0x206a2a]
0x14c0: jmp qword ptr [rip+0x2069ea]
0x14e0: jmp qword ptr [rip+0x2069da]
0x1570: jmp qword ptr [rip+0x206992]
0x1590: jmp qword ptr [rip+0x206982]
0x15f0: jmp qword ptr [rip+0x206952]
0x16b0: jmp qword ptr [rip+0x2068f2]
0x16c0: jmp qword ptr [rip+0x2068ea]
0x16d0: jmp qword ptr [rip+0x2068e2]
0x16e0: jmp qword ptr [rip+0x2068fa]
0x1930: mov dword ptr [r15+0x18],0x1
0x1938: mov r15,qword ptr [r15+0x10]
0x193c: cmp r13,r15
0x193f: je 0x1967
0x1941: mov rsi,qword ptr [r15]
0x1944: mov rdi,rbp
0x1947: call 0x15a0
0x194c: test eax,eax
0x194e: je 0x1ccc
0x1954: jns 0x1930
0x1956: mov dword ptr [r15+0x18],0xffffffff
0x195e: mov r15,qword ptr [r15+0x8]
0x1962: cmp r13,r15
0x1965: jne 0x1941
0x1a0a: cmp qword ptr [rsp+0x8],0x0
0x1a10: mov qword ptr [r12+0x8],rax
0x1a15: mov r15,r13
0x1a18: je 0x18cb
0x1bd3: lea rsi,[rip+0x3da4]
0x1bda: mov rbx,rax
0x1bdd: mov edx,0x5
0x1be2: xor edi,edi
0x1be4: call 0x1490
0x1be9: mov rcx,rbx
0x1bec: mov rdx,rax
0x1bef: xor esi,esi
0x1bf1: xor edi,edi
0x1bf3: xor eax,eax
0x1bf5: call 0x1640
0x1bfa: nop word ptr [rax+rax]
0x1c00: mov rdi,qword ptr [r14+0x10]
0x1c04: test rdi,rdi
0x1c07: je 0x1c15
0x1c09: lea rsi,[rip+0x480]
0x1c10: call 0x1f70
0x1c15: cmp qword ptr [rip+0x2064db],0x0
0x1c1d: jne 0x1c00
0x1c1f: jmp 0x1ab2
0x1ccc: lea rcx,[rip+0x3edd]
0x1cd3: lea rsi,[rip+0x3c4e]
0x1cda: lea rdi,[rip+0x3c88]
0x1ce1: mov edx,0xb6
0x1ce6: call 0x1520
0x1cfc: mov rbx,rax
0x1cff: call 0x1410
0x1d04: mov esi,dword ptr [rax]
0x1d06: lea rdx,[rip+0x3eca]
0x1d0d: mov rcx,rbx
0x1d10: mov edi,0x1
0x1d15: xor eax,eax
0x1d17: call 0x1640
0x1d2d: lea rsi,[rip+0x3e4c]
0x1d34: mov rbx,rax
0x1d37: mov edx,0x5
0x1d3c: xor edi,edi
0x1d3e: call 0x1490
0x1d43: mov rcx,rbx
0x1d46: mov rdx,rax
0x1d49: xor esi,esi
0x1d4b: mov edi,0x1
0x1d50: xor eax,eax
0x1d52: call 0x1640
0x1dcd: mov rbx,rax
0x1dd0: jmp 0x1d74
0x1df1: call 0x14c0
0x1e00: lea rsi,[rip+0x3b0c]
0x1e07: mov rbx,rax
0x1e0a: mov edx,0x5
0x1e0f: xor edi,edi
0x1e11: call 0x1490
0x1e16: xor edi,edi
0x1e18: mov rdx,rax
0x1e1b: mov rcx,rbx
0x1e1e: xor esi,esi
0x1e20: xor eax,eax
0x1e22: call 0x1640
0x1e27: mov edi,0x1
0x1e2c: call 0x21d0
0x1e7a: hlt 
0x1e7b: nop dword ptr [rax+rax]
0x1e80: lea rdi,[rip+0x2061f9]
0x1e87: push rbp
0x1e88: lea rax,[rip+0x2061f1]
0x1e8f: cmp rax,rdi
0x1e92: mov rbp,rsp
0x1e95: je 0x1eb0
0x1e97: mov rax,qword ptr [rip+0x206122]
0x1e9e: test rax,rax
0x1ea1: je 0x1eb0
0x1ea3: pop rbp
0x1ea4: jmp rax
0x1eb0: pop rbp
0x1eb1: ret 
0x1ec0: lea rdi,[rip+0x2061b9]
0x1ec7: lea rsi,[rip+0x2061b2]
0x1ece: push rbp
0x1ecf: sub rsi,rdi
0x1ed2: mov rbp,rsp
0x1ed5: sar rsi,0x3
0x1ed9: mov rax,rsi
0x1edc: shr rax,0x3f
0x1ee0: add rsi,rax
0x1ee3: sar rsi, 1
0x1ee6: je 0x1f00
0x1ee8: mov rax,qword ptr [rip+0x2060e9]
0x1eef: test rax,rax
0x1ef2: je 0x1f00
0x1ef4: pop rbp
0x1ef5: jmp rax
0x1f00: pop rbp
0x1f01: ret 
0x1f21: push rbp
0x1f22: mov rbp,rsp
0x1f25: je 0x1f33
0x1f27: mov rdi,qword ptr [rip+0x2060da]
0x1f2e: call 0x16e0
0x1f33: call 0x1e80
0x1f38: mov byte ptr [rip+0x2061a9],0x1
0x1f3f: pop rbp
0x1f40: ret 
0x1f50: push rbp
0x1f51: mov rbp,rsp
0x1f54: pop rbp
0x1f55: jmp 0x1ec0
0x2090: xor eax,eax
0x2092: cmp qword ptr [rdi+0x20],0x0
0x2097: je 0x20e8
0x2099: push r13
0x209b: push r12
0x209d: push rbp
0x209e: push rbx
0x209f: mov rbx,rdi
0x20a2: sub rsp,0x8
0x20a6: mov rdx,qword ptr [rip+0x20604b]
0x20ad: test rdx,rdx
0x20b0: je 0x20f0
0x20b2: mov rcx,qword ptr [rdi+0x30]
0x20b6: test rcx,rcx
0x20b9: je 0x20d9
0x20bb: cmp rdx,qword ptr [rcx]
0x20be: jne 0x20d0
0x20c0: jmp 0x21b8
0x20c8: cmp rdx,qword ptr [rax]
0x20cb: je 0x2108
0x20cd: mov rcx,rax
0x20d0: mov rax,qword ptr [rcx+0x8]
0x20d4: test rax,rax
0x20d7: jne 0x20c8
0x20d9: add rsp,0x8
0x20dd: pop rbx
0x20de: pop rbp
0x20df: pop r12
0x20e1: pop r13
0x20e3: ret 
0x20e8: rep ret 
0x20f0: mov qword ptr [rip+0x206001],rdi
0x20f7: add rsp,0x8
0x20fb: pop rbx
0x20fc: pop rbp
0x20fd: pop r12
0x20ff: pop r13
0x2101: ret 
0x2108: lea rbp,[rcx+0x8]
0x210c: cmp qword ptr [rbx+0x28],0x0
0x2111: je 0x21a0
0x2117: lea r13,[rip+0x3ab9]
0x211e: jmp 0x2137
0x2120: test r12,r12
0x2123: mov qword ptr [rax+0x28],0x0
0x212b: mov qword ptr [rip+0x205fc6],r12
0x2132: mov rdx,r12
0x2135: je 0x218f
0x2137: mov rcx,qword ptr [rdx]
0x213a: xor eax,eax
0x213c: mov r12,qword ptr [rdx+0x28]
0x2140: xor esi,esi
0x2142: xor edi,edi
0x2144: mov rdx,r13
0x2147: call 0x1640
0x214c: mov rax,qword ptr [rip+0x205fa5]
0x2153: cmp rbx,rax
0x2156: jne 0x2120
0x2158: mov rax,qword ptr [rbp]
0x215c: mov rdx,qword ptr [rax]
0x215f: mov rax,qword ptr [rax+0x8]
0x2163: sub qword ptr [rdx+0x20],0x1
0x2168: mov qword ptr [rbp],rax
0x216c: nop dword ptr [rax]
0x2170: mov rax,qword ptr [rbx+0x28]
0x2174: mov qword ptr [rbx+0x28],0x0
0x217c: test rax,rax
0x217f: mov rbx,rax
0x2182: jne 0x2170
0x2184: mov qword ptr [rip+0x205f69],0x0
0x218f: add rsp,0x8
0x2193: mov eax,0x1
0x2198: pop rbx
0x2199: pop rbp
0x219a: pop r12
0x219c: pop r13
0x219e: ret 
0x21a0: mov qword ptr [rbx+0x28],rdx
0x21a4: mov qword ptr [rip+0x205f4d],rbx
0x21ab: xor eax,eax
0x21ad: jmp 0x20d9
0x21b8: lea rbp,[rdi+0x30]
0x21bc: jmp 0x210c
0x2540: mov qword ptr [rip+0x205bd1],rdi
0x2547: ret 
0x2550: mov byte ptr [rip+0x205bb9],dil
0x2557: ret 
0x2560: push rbp
0x2561: push rbx
0x2562: sub rsp,0x8
0x2566: mov rdi,qword ptr [rip+0x205b1b]
0x256d: call 0x5680
0x2572: test eax,eax
0x2574: je 0x258c
0x2576: call 0x1410
0x257b: cmp byte ptr [rip+0x205b8e],0x0
0x2582: mov rbx,rax
0x2585: je 0x25a3
0x2587: cmp dword ptr [rax],0x20
0x258a: jne 0x25a3
0x258c: mov rdi,qword ptr [rip+0x205b4d]
0x2593: call 0x5680
0x2598: test eax,eax
0x259a: jne 0x25e2
0x259c: add rsp,0x8
0x25a0: pop rbx
0x25a1: pop rbp
0x25a2: ret 
0x25a3: lea rsi,[rip+0x361d]
0x25aa: xor edi,edi
0x25ac: mov edx,0x5
0x25b1: call 0x1490
0x25b6: mov rdi,qword ptr [rip+0x205b5b]
0x25bd: mov rbp,rax
0x25c0: test rdi,rdi
0x25c3: je 0x25ed
0x25c5: call 0x45e0
0x25ca: mov esi,dword ptr [rbx]
0x25cc: lea rdx,[rip+0x3600]
0x25d3: mov rcx,rax
0x25d6: mov r8,rbp
0x25d9: xor edi,edi
0x25db: xor eax,eax
0x25dd: call 0x1640
0x25e2: mov edi,dword ptr [rip+0x205a30]
0x25e8: call 0x1430
0x25ed: mov esi,dword ptr [rbx]
0x25ef: lea rdx,[rip+0x35e1]
0x25f6: mov rcx,rax
0x25f9: xor edi,edi
0x25fb: xor eax,eax
0x25fd: call 0x1640
0x2602: jmp 0x25e2
0x2610: jmp 0x1560
0x2850: push r13
0x2852: push r12
0x2854: mov r13,r8
0x2857: push rbp
0x2858: push rbx
0x2859: mov rbp,rdx
0x285c: mov r12,rcx
0x285f: sub rsp,0xe8
0x2866: test al,al
0x2868: je 0x28a4
0x286a: movaps [rsp+0x60],xmm0
0x286f: movaps [rsp+0x70],xmm1
0x2874: movaps [rsp+0x80],xmm2
0x287c: movaps [rsp+0x90],xmm3
0x2884: movaps [rsp+0xa0],xmm4
0x288c: movaps [rsp+0xb0],xmm5
0x2894: movaps [rsp+0xc0],xmm6
0x289c: movaps [rsp+0xd0],xmm7
0x28a4: mov rax,qword ptr fs:0x28
0x28ad: mov qword ptr [rsp+0x28],rax
0x28b2: xor eax,eax
0x28b4: cmp edi,0x2
0x28b7: mov ebx,dword ptr [rip+0x205803]
0x28bd: mov dword ptr [rip+0x2057f9],0x0
0x28c7: je 0x2900
0x28c9: mov rax,qword ptr [rsp+0x28]
0x28ce: xor rax,qword ptr fs:0x28
0x28d7: mov dword ptr [rip+0x2057e3],ebx
0x28dd: mov dword ptr [rip+0x2057b1],0x0
0x28e7: jne 0x298a
0x28ed: add rsp,0xe8
0x28f4: pop rbx
0x28f5: pop rbp
0x28f6: pop r12
0x28f8: pop r13
0x28fa: ret 
0x2900: lea rcx,[rip+0x205279]
0x2907: lea rdx,[rip+0x32d6]
0x290e: xor r8d,r8d
0x2911: mov qword ptr [rsp+0x8],r9
0x2916: call 0x14d0
0x291b: cmp eax,-0x1
0x291e: je 0x28c9
0x2920: cmp eax,0x68
0x2923: mov r9,qword ptr [rsp+0x8]
0x2928: je 0x2980
0x292a: cmp eax,0x76
0x292d: jne 0x28c9
0x292f: lea rax,[rsp+0x110]
0x2937: mov rdi,qword ptr [rip+0x20574a]
0x293e: lea r8,[rsp+0x10]
0x2943: mov rcx,r13
0x2946: mov rdx,r12
0x2949: mov rsi,rbp
0x294c: mov qword ptr [rsp+0x18],rax
0x2951: lea rax,[rsp+0x30]
0x2956: mov dword ptr [rsp+0x10],0x30
0x295e: mov dword ptr [rsp+0x14],0x30
0x2966: mov qword ptr [rsp+0x20],rax
0x296b: call 0x5060
0x2970: xor edi,edi
0x2972: call 0x1680
0x2977: nop word ptr [rax+rax]
0x2980: xor edi,edi
0x2982: call r9
0x2985: jmp 0x28c9
0x298a: call 0x14c0
0x298f: nop 
0x29b4: movaps [rsp+0x50],xmm0
0x29b9: movaps [rsp+0x60],xmm1
0x29be: movaps [rsp+0x70],xmm2
0x29c3: movaps [rsp+0x80],xmm3
0x29cb: movaps [rsp+0x90],xmm4
0x29d3: movaps [rsp+0xa0],xmm5
0x29db: movaps [rsp+0xb0],xmm6
0x29e3: movaps [rsp+0xc0],xmm7
0x2a87: nop word ptr [rax+rax]
0x2ac4: jmp 0x2a98
0x2ac6: call 0x14c0
0x2acb: nop dword ptr [rax+rax]
0x2b6f: nop 
0x2b70: push rbp
0x2b71: push rbx
0x2b72: mov rbp,rdi
0x2b75: mov ebx,esi
0x2b77: sub rsp,0x8
0x2b7b: call 0x5760
0x2b80: movzx edx,byte ptr [rax]
0x2b83: and edx,-0x21
0x2b86: cmp dl,0x55
0x2b89: je 0x2c00
0x2b8b: cmp dl,0x47
0x2b8e: je 0x2bb0
0x2b90: lea rax,[rip+0x30b4]
0x2b97: lea rdx,[rip+0x30af]
0x2b9e: cmp ebx,0x9
0x2ba1: cmovne rax,rdx
0x2ba5: add rsp,0x8
0x2ba9: pop rbx
0x2baa: pop rbp
0x2bab: ret 
0x2bb0: movzx edx,byte ptr [rax+0x1]
0x2bb4: and edx,-0x21
0x2bb7: cmp dl,0x42
0x2bba: jne 0x2b90
0x2bbc: cmp byte ptr [rax+0x2],0x31
0x2bc0: jne 0x2b90
0x2bc2: cmp byte ptr [rax+0x3],0x38
0x2bc6: jne 0x2b90
0x2bc8: cmp byte ptr [rax+0x4],0x30
0x2bcc: jne 0x2b90
0x2bce: cmp byte ptr [rax+0x5],0x33
0x2bd2: jne 0x2b90
0x2bd4: cmp byte ptr [rax+0x6],0x30
0x2bd8: jne 0x2b90
0x2bda: cmp byte ptr [rax+0x7],0x0
0x2bde: jne 0x2b90
0x2be0: cmp byte ptr [rbp],0x60
0x2be4: lea rax,[rip+0x3059]
0x2beb: lea rdx,[rip+0x3056]
0x2bf2: cmovne rax,rdx
0x2bf6: add rsp,0x8
0x2bfa: pop rbx
0x2bfb: pop rbp
0x2bfc: ret 
0x2c00: movzx edx,byte ptr [rax+0x1]
0x2c04: and edx,-0x21
0x2c07: cmp dl,0x54
0x2c0a: jne 0x2b90
0x2c0c: movzx edx,byte ptr [rax+0x2]
0x2c10: and edx,-0x21
0x2c13: cmp dl,0x46
0x2c16: jne 0x2b90
0x2c1c: cmp byte ptr [rax+0x3],0x2d
0x2c20: jne 0x2b90
0x2c26: cmp byte ptr [rax+0x4],0x38
0x2c2a: jne 0x2b90
0x2c30: cmp byte ptr [rax+0x5],0x0
0x2c34: jne 0x2b90
0x2c3a: cmp byte ptr [rbp],0x60
0x2c3e: lea rax,[rip+0x2ff7]
0x2c45: lea rdx,[rip+0x2ff4]
0x2c4c: cmovne rax,rdx
0x2c50: add rsp,0x8
0x2c54: pop rbx
0x2c55: pop rbp
0x2c56: ret 
0x2d33: xor r11d,r11d
0x2d36: mov rax,rbp
0x2d39: mov r8d,r12d
0x2d3c: mov rbp,r11
0x2d3f: mov r11,rax
0x2d42: nop word ptr [rax+rax]
0x2d48: cmp r11,rbp
0x2d4b: setne r12b
0x2d4f: cmp r11,-0x1
0x2d53: jne 0x2d62
0x2d55: mov rax,qword ptr [rsp+0x10]
0x2d5a: cmp byte ptr [rax+rbp],0x0
0x2d5e: setne r12b
0x2d62: test r12b,r12b
0x2d65: je 0x33c0
0x2d6b: cmp dword ptr [rsp+0x8],0x2
0x2d70: mov rdi,qword ptr [rsp+0x10]
0x2d75: lea r9,[rdi+rbp]
0x2d79: setne al
0x2d7c: and al,byte ptr [rsp+0xd]
0x2d80: mov r10d,eax
0x2d83: je 0x2e30
0x2d89: mov rax,qword ptr [rsp+0x18]
0x2d8e: test rax,rax
0x2d91: je 0x31c0
0x2d97: cmp r11,-0x1
0x2d9b: lea rbx,[rbp+rax]
0x2da0: jne 0x2dd0
0x2da2: cmp rax,0x1
0x2da6: jbe 0x2dd0
0x2da8: mov byte ptr [rsp+0x38],r8b
0x2dad: mov byte ptr [rsp+0x30],r10b
0x2db2: mov qword ptr [rsp+0x28],r9
0x2db7: call 0x14b0
0x2dbc: movzx r8d,byte ptr [rsp+0x38]
0x2dc2: movzx r10d,byte ptr [rsp+0x30]
0x2dc8: mov r11,rax
0x2dcb: mov r9,qword ptr [rsp+0x28]
0x2dd0: cmp rbx,r11
0x2dd3: mov byte ptr [rsp+0x28],r10b
0x2dd8: ja 0x3390
0x2dde: mov rdx,qword ptr [rsp+0x18]
0x2de3: mov rsi,qword ptr [rsp+0x48]
0x2de8: mov rdi,r9
0x2deb: mov qword ptr [rsp+0x40],r11
0x2df0: mov byte ptr [rsp+0x38],r8b
0x2df5: mov qword ptr [rsp+0x30],r9
0x2dfa: call 0x1570
0x2dff: test eax,eax
0x2e01: mov r9,qword ptr [rsp+0x30]
0x2e06: movzx r8d,byte ptr [rsp+0x38]
0x2e0c: mov r11,qword ptr [rsp+0x40]
0x2e11: jne 0x3390
0x2e17: cmp byte ptr [rsp+0xf],0x0
0x2e1c: movzx r10d,byte ptr [rsp+0x28]
0x2e22: jne 0x3da5
0x2e28: nop dword ptr [rax+rax]
0x2e30: movzx ebx,byte ptr [r9]
0x2e34: cmp bl,0x7e
0x2e37: ja 0x3158
0x2e3d: lea rcx,[rip+0x2e88]
0x2e44: movzx edx,bl
0x2e47: movsxd rax,dword ptr [rcx+rdx*4]
0x2e4b: add rax,rcx
0x2e4e: jmp rax
0x2e88: cmp byte ptr [rsp+0xd],0x1
0x2e8d: jne 0x2fa2
0x2e93: test dl,dl
0x2e95: jne 0x2fa2
0x2e9b: mov rsi,qword ptr [rsp+0x20]
0x2ea0: test rsi,rsi
0x2ea3: je 0x2eb9
0x2ea5: mov edx,ebx
0x2ea7: shr dl,0x5
0x2eaa: movzx edx,dl
0x2ead: mov edx,dword ptr [rsi+rdx*4]
0x2eb0: btl edx,ebx
0x2eb3: jb 0x3003
0x2eb9: test r10b,r10b
0x2ebc: jne 0x3003
0x2ec2: xor eax,0x1
0x2ec5: add rbp,0x1
0x2ec9: and eax,r8d
0x2ecc: test al,al
0x2ece: je 0x2ef0
0x2ed0: cmp r13,r15
0x2ed3: jbe 0x2eda
0x2ed5: mov byte ptr [r14+r15],0x27
0x2eda: lea rax,[r15+0x1]
0x2ede: cmp r13,rax
0x2ee1: jbe 0x2ee9
0x2ee3: mov byte ptr [r14+r15+0x1],0x27
0x2ee9: add r15,0x2
0x2eed: xor r8d,r8d
0x2ef0: cmp r15,r13
0x2ef3: jae 0x2ef9
0x2ef5: mov byte ptr [r14+r15],bl
0x2ef9: movzx edi,byte ptr [rsp+0xe]
0x2efe: add r15,0x1
0x2f02: mov eax,0x0
0x2f07: test r12b,r12b
0x2f0a: cmove edi,eax
0x2f0d: mov byte ptr [rsp+0xe],dil
0x2f12: jmp 0x2d48
0x2fa2: cmp byte ptr [rsp+0xf],0x0
0x2fa7: jne 0x2e9b
0x2fad: jmp 0x2eb9
0x3003: cmp dword ptr [rsp+0x8],0x2
0x3008: sete dl
0x300b: cmp byte ptr [rsp+0xf],0x0
0x3010: mov eax,edx
0x3012: jne 0x3868
0x3018: mov eax,r8d
0x301b: xor eax,0x1
0x301e: and al,dl
0x3020: je 0x3051
0x3022: cmp r13,r15
0x3025: jbe 0x302c
0x3027: mov byte ptr [r14+r15],0x27
0x302c: lea rdx,[r15+0x1]
0x3030: cmp r13,rdx
0x3033: jbe 0x303b
0x3035: mov byte ptr [r14+r15+0x1],0x24
0x303b: lea rdx,[r15+0x2]
0x303f: cmp r13,rdx
0x3042: jbe 0x304a
0x3044: mov byte ptr [r14+r15+0x2],0x27
0x304a: add r15,0x3
0x304e: mov r8d,eax
0x3051: cmp r13,r15
0x3054: jbe 0x305b
0x3056: mov byte ptr [r14+r15],0x5c
0x305b: add r15,0x1
0x305f: add rbp,0x1
0x3063: jmp 0x2ef0
0x3150: xor r10d,r10d
0x3153: nop dword ptr [rax+rax]
0x3158: cmp qword ptr [rsp+0x58],0x1
0x315e: jne 0x3508
0x3164: mov qword ptr [rsp+0x38],r11
0x3169: mov byte ptr [rsp+0x30],r8b
0x316e: mov byte ptr [rsp+0x28],r10b
0x3173: call 0x16d0
0x3178: mov rcx,qword ptr [rax]
0x317b: movzx edx,bl
0x317e: movzx r10d,byte ptr [rsp+0x28]
0x3184: movzx r8d,byte ptr [rsp+0x30]
0x318a: mov r11,qword ptr [rsp+0x38]
0x318f: mov edi,0x1
0x3194: movzx eax,word ptr [rcx+rdx*2]
0x3198: and ax,0x4000
0x319c: setne r12b
0x31a0: sete al
0x31a3: and al,byte ptr [rsp+0xd]
0x31a7: test al,al
0x31a9: jne 0x3b41
0x31af: cmp dword ptr [rsp+0x8],0x2
0x31b4: sete dl
0x31b7: jmp 0x2e88
0x31c0: movzx ebx,byte ptr [r9]
0x31c4: cmp bl,0x7e
0x31c7: ja 0x3150
0x31c9: lea rcx,[rip+0x2cf8]
0x31d0: movzx edx,bl
0x31d3: movsxd rax,dword ptr [rcx+rdx*4]
0x31d7: add rax,rcx
0x31da: jmp rax
0x3390: xor r10d,r10d
0x3393: jmp 0x2e30
0x33c0: cmp dword ptr [rsp+0x8],0x2
0x33c5: movzx ebx,byte ptr [rsp+0xf]
0x33ca: mov r12d,r8d
0x33cd: mov rbp,r11
0x33d0: sete dl
0x33d3: mov eax,ebx
0x33d5: test r15,r15
0x33d8: sete cl
0x33db: and eax,edx
0x33dd: and al,cl
0x33df: jne 0x3e46
0x33e5: mov eax,ebx
0x33e7: xor eax,0x1
0x33ea: and dl,al
0x33ec: je 0x3d5c
0x33f2: cmp byte ptr [rsp+0x7c],0x0
0x33f7: je 0x3d5a
0x33fd: cmp byte ptr [rsp+0xe],0x0
0x3402: jne 0x3dfd
0x3408: test r13,r13
0x340b: sete al
0x340e: cmp qword ptr [rsp+0x50],0x0
0x3414: setne dl
0x3417: and al,dl
0x3419: je 0x3e3c
0x341f: mov r13,qword ptr [rsp+0x50]
0x3424: lea rbx,[rip+0x2822]
0x342b: mov byte ptr [r14],0x27
0x342f: mov dword ptr [rsp+0x8],0x2
0x3437: mov r15d,0x1
0x343d: mov qword ptr [rsp+0x18],0x1
0x3446: mov byte ptr [rsp+0xf],0x0
0x344b: mov qword ptr [rsp+0x48],rbx
0x3450: mov byte ptr [rsp+0x7c],al
0x3454: jmp 0x2d33
0x3508: lea rax,[rsp+0xa0]
0x3510: cmp r11,-0x1
0x3514: mov qword ptr [rsp+0xa0],0x0
0x3520: mov qword ptr [rsp+0x28],rax
0x3525: jne 0x3554
0x3527: mov rdi,qword ptr [rsp+0x10]
0x352c: mov byte ptr [rsp+0x40],r8b
0x3531: mov byte ptr [rsp+0x38],r10b
0x3536: mov qword ptr [rsp+0x30],r9
0x353b: call 0x14b0
0x3540: movzx r8d,byte ptr [rsp+0x40]
0x3546: movzx r10d,byte ptr [rsp+0x38]
0x354c: mov r11,rax
0x354f: mov r9,qword ptr [rsp+0x30]
0x3554: lea rax,[rsp+0x9c]
0x355c: xor ecx,ecx
0x355e: mov byte ptr [rsp+0x7e],bl
0x3562: mov byte ptr [rsp+0x7d],r8b
0x3567: mov rbx,rcx
0x356a: mov qword ptr [rsp+0x88],r9
0x3572: mov qword ptr [rsp+0x38],rax
0x3577: mov byte ptr [rsp+0x7f],r10b
0x357c: mov qword ptr [rsp+0x80],r15
0x3584: mov qword ptr [rsp+0x40],r14
0x3589: mov qword ptr [rsp+0x70],r13
0x358e: mov qword ptr [rsp+0x30],r11
0x3593: mov rax,qword ptr [rsp+0x10]
0x3598: lea r14,[rbp+rbx]
0x359d: mov rdx,qword ptr [rsp+0x30]
0x35a2: mov rcx,qword ptr [rsp+0x28]
0x35a7: mov rdi,qword ptr [rsp+0x38]
0x35ac: lea r13,[rax+r14]
0x35b0: sub rdx,r14
0x35b3: mov rsi,r13
0x35b6: call 0x55f0
0x35bb: test rax,rax
0x35be: mov r15,rax
0x35c1: je 0x3611
0x35c3: cmp rax,-0x1
0x35c7: je 0x3be5
0x35cd: cmp rax,-0x2
0x35d1: je 0x3b71
0x35d7: cmp dword ptr [rsp+0x8],0x2
0x35dc: sete al
0x35df: and al,byte ptr [rsp+0xf]
0x35e3: jne 0x3780
0x35e9: mov edi,dword ptr [rsp+0x9c]
0x35f0: call 0x16c0
0x35f5: mov rdi,qword ptr [rsp+0x28]
0x35fa: test eax,eax
0x35fc: mov eax,0x0
0x3601: cmove r12d,eax
0x3605: add rbx,r15
0x3608: call 0x16b0
0x360d: test eax,eax
0x360f: je 0x3593
0x3611: mov edx,r12d
0x3614: mov rdi,rbx
0x3617: movzx r8d,byte ptr [rsp+0x7d]
0x361d: xor edx,0x1
0x3620: movzx ebx,byte ptr [rsp+0x7e]
0x3625: movzx r10d,byte ptr [rsp+0x7f]
0x362b: and dl,byte ptr [rsp+0xd]
0x362f: mov r15,qword ptr [rsp+0x80]
0x3637: mov r14,qword ptr [rsp+0x40]
0x363c: mov r13,qword ptr [rsp+0x70]
0x3641: mov r11,qword ptr [rsp+0x30]
0x3646: cmp rdi,0x1
0x364a: jbe 0x3c4b
0x3650: mov rcx,rdi
0x3653: xor esi,esi
0x3655: movzx r9d,byte ptr [rsp+0xf]
0x365b: add rcx,rbp
0x365e: mov rdi,qword ptr [rsp+0x10]
0x3663: jmp 0x371e
0x3670: cmp dword ptr [rsp+0x8],0x2
0x3675: sete al
0x3678: test r9b,r9b
0x367b: jne 0x3b30
0x3681: mov esi,r8d
0x3684: xor esi,0x1
0x3687: and al,sil
0x368a: je 0x36bb
0x368c: cmp r13,r15
0x368f: jbe 0x3696
0x3691: mov byte ptr [r14+r15],0x27
0x3696: lea rsi,[r15+0x1]
0x369a: cmp r13,rsi
0x369d: jbe 0x36a5
0x369f: mov byte ptr [r14+r15+0x1],0x24
0x36a5: lea rsi,[r15+0x2]
0x36a9: cmp r13,rsi
0x36ac: jbe 0x36b4
0x36ae: mov byte ptr [r14+r15+0x2],0x27
0x36b4: add r15,0x3
0x36b8: mov r8d,eax
0x36bb: cmp r13,r15
0x36be: jbe 0x36c5
0x36c0: mov byte ptr [r14+r15],0x5c
0x36c5: lea rax,[r15+0x1]
0x36c9: cmp r13,rax
0x36cc: jbe 0x36db
0x36ce: mov eax,ebx
0x36d0: shr al,0x6
0x36d3: add eax,0x30
0x36d6: mov byte ptr [r14+r15+0x1],al
0x36db: lea rax,[r15+0x2]
0x36df: cmp r13,rax
0x36e2: jbe 0x36f4
0x36e4: mov eax,ebx
0x36e6: shr al,0x3
0x36e9: and eax,0x7
0x36ec: add eax,0x30
0x36ef: mov byte ptr [r14+r15+0x2],al
0x36f4: and ebx,0x7
0x36f7: add rbp,0x1
0x36fb: add r15,0x3
0x36ff: add ebx,0x30
0x3702: cmp rbp,rcx
0x3705: jae 0x2ef0
0x370b: mov esi,edx
0x370d: cmp r13,r15
0x3710: jbe 0x3716
0x3712: mov byte ptr [r14+r15],bl
0x3716: movzx ebx,byte ptr [rdi+rbp]
0x371a: add r15,0x1
0x371e: test dl,dl
0x3720: jne 0x3670
0x3726: mov eax,esi
0x3728: xor eax,0x1
0x372b: and eax,r8d
0x372e: test r10b,r10b
0x3731: je 0x3741
0x3733: cmp r13,r15
0x3736: jbe 0x373d
0x3738: mov byte ptr [r14+r15],0x5c
0x373d: add r15,0x1
0x3741: add rbp,0x1
0x3745: cmp rbp,rcx
0x3748: jae 0x2ecc
0x374e: test al,al
0x3750: je 0x3b4e
0x3756: cmp r13,r15
0x3759: jbe 0x3760
0x375b: mov byte ptr [r14+r15],0x27
0x3760: lea rax,[r15+0x1]
0x3764: cmp r13,rax
0x3767: jbe 0x376f
0x3769: mov byte ptr [r14+r15+0x1],0x27
0x376f: add r15,0x2
0x3773: xor r10d,r10d
0x3776: xor r8d,r8d
0x3779: jmp 0x370d
0x3780: cmp r15,0x1
0x3784: je 0x35e9
0x378a: mov rdi,qword ptr [rsp+0x10]
0x378f: lea rcx,[rdi+r15]
0x3793: lea rdx,[rdi+r14+0x1]
0x3798: lea r8,[rcx+r14]
0x379c: jmp 0x37ad
0x37a0: add rdx,0x1
0x37a4: cmp r8,rdx
0x37a7: je 0x35e9
0x37ad: movzx ecx,byte ptr [rdx]
0x37b0: sub ecx,0x5b
0x37b3: cmp cl,0x21
0x37b6: ja 0x37a0
0x37b8: mov esi,0x1
0x37bd: shl rsi,cl
0x37c0: mov rcx,rsi
0x37c3: movabsq rsi,0x20000002b
0x37cd: test rcx,rsi
0x37d0: je 0x37a0
0x37d2: mov r14,qword ptr [rsp+0x40]
0x37d7: mov r13,qword ptr [rsp+0x70]
0x37dc: mov rbp,qword ptr [rsp+0x30]
0x37e1: mov dword ptr [rsp+0x8],0x2
0x37e9: cmp byte ptr [rsp+0xd],0x0
0x37ee: je 0x3800
0x37f0: test al,al
0x37f2: mov eax,0x4
0x37f7: cmove eax,dword ptr [rsp+0x8]
0x37fc: mov dword ptr [rsp+0x8],eax
0x3800: sub rsp,0x8
0x3804: mov rcx,rbp
0x3807: mov rsi,r13
0x380a: push qword ptr [rsp+0x68]
0x380e: push qword ptr [rsp+0x78]
0x3812: mov rdi,r14
0x3815: push 0x0
0x3817: mov r9d,dword ptr [rsp+0x98]
0x381f: mov r8d,dword ptr [rsp+0x28]
0x3824: mov rdx,qword ptr [rsp+0x30]
0x3829: and r9d,-0x3
0x382d: call 0x2c60
0x3832: add rsp,0x20
0x3836: mov r15,rax
0x3839: mov rbx,qword ptr [rsp+0xa8]
0x3841: xor rbx,qword ptr fs:0x28
0x384a: mov rax,r15
0x384d: jne 0x3e53
0x3853: add rsp,0xb8
0x385a: pop rbx
0x385b: pop rbp
0x385c: pop r12
0x385e: pop r13
0x3860: pop r14
0x3862: pop r15
0x3864: ret 
0x3868: mov rbp,r11
0x386b: jmp 0x37e9
0x38d1: test r13,r13
0x38d4: jne 0x3e6a
0x38da: lea rax,[rip+0x236c]
0x38e1: mov qword ptr [rsp+0x50],0x0
0x38ea: mov byte ptr [rsp+0xe],0x1
0x38ef: mov byte ptr [rsp+0x7c],0x0
0x38f4: xor r12d,r12d
0x38f7: mov byte ptr [rsp+0xf],0x0
0x38fc: mov qword ptr [rsp+0x18],0x1
0x3905: mov qword ptr [rsp+0x48],rax
0x390a: mov r15d,0x1
0x3910: mov dword ptr [rsp+0x8],0x2
0x3918: jmp 0x2d33
0x3b30: movzx ebx,byte ptr [rsp+0xf]
0x3b35: mov rbp,r11
0x3b38: mov byte ptr [rsp+0xd],bl
0x3b3c: jmp 0x37e9
0x3b41: movzx edx,byte ptr [rsp+0xd]
0x3b46: xor r12d,r12d
0x3b49: jmp 0x3650
0x3b4e: xor r10d,r10d
0x3b51: jmp 0x370d
0x3b71: mov r11,qword ptr [rsp+0x30]
0x3b76: mov rsi,r14
0x3b79: mov rcx,r13
0x3b7c: mov rax,rbx
0x3b7f: mov rdi,rbx
0x3b82: movzx r8d,byte ptr [rsp+0x7d]
0x3b88: movzx ebx,byte ptr [rsp+0x7e]
0x3b8d: mov r9,qword ptr [rsp+0x88]
0x3b95: cmp rsi,r11
0x3b98: movzx r10d,byte ptr [rsp+0x7f]
0x3b9e: mov r15,qword ptr [rsp+0x80]
0x3ba6: mov r14,qword ptr [rsp+0x40]
0x3bab: mov r13,qword ptr [rsp+0x70]
0x3bb0: jae 0x3bd8
0x3bb2: cmp byte ptr [rcx],0x0
0x3bb5: jne 0x3bc7
0x3bb7: jmp 0x3bd8
0x3bc0: cmp byte ptr [r9+rax],0x0
0x3bc5: je 0x3bd5
0x3bc7: add rax,0x1
0x3bcb: lea rdx,[rbp+rax]
0x3bd0: cmp r11,rdx
0x3bd3: ja 0x3bc0
0x3bd5: mov rdi,rax
0x3bd8: movzx edx,byte ptr [rsp+0xd]
0x3bdd: xor r12d,r12d
0x3be0: jmp 0x3646
0x3be5: mov rdi,rbx
0x3be8: movzx r8d,byte ptr [rsp+0x7d]
0x3bee: movzx ebx,byte ptr [rsp+0x7e]
0x3bf3: movzx r10d,byte ptr [rsp+0x7f]
0x3bf9: mov r15,qword ptr [rsp+0x80]
0x3c01: xor r12d,r12d
0x3c04: mov r14,qword ptr [rsp+0x40]
0x3c09: mov r13,qword ptr [rsp+0x70]
0x3c0e: mov r11,qword ptr [rsp+0x30]
0x3c13: movzx edx,byte ptr [rsp+0xd]
0x3c18: jmp 0x3646
0x3c4b: mov eax,edx
0x3c4d: jmp 0x31a7
0x3d5a: mov eax,edx
0x3d5c: mov rbx,qword ptr [rsp+0x48]
0x3d61: test rbx,rbx
0x3d64: je 0x3d92
0x3d66: test al,al
0x3d68: je 0x3d92
0x3d6a: movzx ecx,byte ptr [rbx]
0x3d6d: mov rax,rbx
0x3d70: test cl,cl
0x3d72: je 0x3d92
0x3d74: mov rdx,r15
0x3d77: sub rax,r15
0x3d7a: cmp r13,rdx
0x3d7d: jbe 0x3d83
0x3d7f: mov byte ptr [r14+rdx],cl
0x3d83: add rdx,0x1
0x3d87: movzx ecx,byte ptr [rax+rdx]
0x3d8b: test cl,cl
0x3d8d: jne 0x3d7a
0x3d8f: mov r15,rdx
0x3d92: cmp r13,r15
0x3d95: jbe 0x3839
0x3d9b: mov byte ptr [r14+r15],0x0
0x3da0: jmp 0x3839
0x3da5: cmp dword ptr [rsp+0x8],0x2
0x3daa: movzx ebx,byte ptr [rsp+0xf]
0x3daf: mov rbp,r11
0x3db2: sete al
0x3db5: mov byte ptr [rsp+0xd],bl
0x3db9: jmp 0x37e9
0x3dfd: sub rsp,0x8
0x3e01: mov r8d,0x5
0x3e07: mov rcx,r11
0x3e0a: push qword ptr [rsp+0x68]
0x3e0e: push qword ptr [rsp+0x78]
0x3e12: mov rdi,r14
0x3e15: push qword ptr [rsp+0x38]
0x3e19: mov r9d,dword ptr [rsp+0x98]
0x3e21: mov rdx,qword ptr [rsp+0x30]
0x3e26: mov rsi,qword ptr [rsp+0x70]
0x3e2b: call 0x2c60
0x3e30: add rsp,0x20
0x3e34: mov r15,rax
0x3e37: jmp 0x3839
0x3e3c: movzx eax,byte ptr [rsp+0x7c]
0x3e41: jmp 0x3d5c
0x3e46: mov dword ptr [rsp+0x8],0x2
0x3e4e: jmp 0x37e9
0x3e53: call 0x14c0
0x3e58: mov byte ptr [rsp+0xd],0x0
0x3e5d: jmp 0x38d1
0x3e6a: mov byte ptr [rsp+0xe],0x1
0x3e6f: xor eax,eax
0x3e71: xor r12d,r12d
0x3e74: mov qword ptr [rsp+0x50],0x0
0x3e7d: jmp 0x3424
0x3e94: nop 
0x3e96: nop word ptr cs:[rax+rax]
0x3f8c: add rsp,0x20
0x3f90: mov r11,qword ptr [rsp+0x10]
0x3f95: cmp r11,rax
0x3f98: ja 0x4001
0x3f9a: lea rsi,[rax+0x1]
0x3f9e: lea rax,[rip+0x20419b]
0x3fa5: cmp r12,rax
0x3fa8: mov qword ptr [rbx],rsi
0x3fab: je 0x3fbf
0x3fad: mov rdi,r12
0x3fb0: mov qword ptr [rsp+0x10],rsi
0x3fb5: call 0x13f0
0x3fba: mov rsi,qword ptr [rsp+0x10]
0x3fbf: mov rdi,rsi
0x3fc2: mov qword ptr [rsp+0x10],rsi
0x3fc7: call 0x5240
0x3fcc: sub rsp,0x8
0x3fd0: mov qword ptr [rbx+0x8],rax
0x3fd4: mov r8d,dword ptr [rbp]
0x3fd8: push qword ptr [rbp+0x30]
0x3fdb: push qword ptr [rbp+0x28]
0x3fde: mov rcx,r14
0x3fe1: push r15
0x3fe3: mov r9d,dword ptr [rsp+0x3c]
0x3fe8: mov rdi,rax
0x3feb: mov rdx,qword ptr [rsp+0x28]
0x3ff0: mov rsi,qword ptr [rsp+0x30]
0x3ff5: mov r12,rax
0x3ff8: call 0x2c60
0x3ffd: add rsp,0x20
0x4001: mov eax,dword ptr [rsp+0x18]
0x4005: mov dword ptr [r13],eax
0x4009: add rsp,0x28
0x400d: mov rax,r12
0x4010: pop rbx
0x4011: pop rbp
0x4012: pop r12
0x4014: pop r13
0x4016: pop r14
0x4018: pop r15
0x401a: ret 
0x4041: call 0x1400
0x4046: call 0x5490
0x404b: nop dword ptr [rax+rax]
0x4050: push r12
0x4052: push rbp
0x4053: push rbx
0x4054: mov rbx,rdi
0x4057: call 0x1410
0x405c: mov r12d,dword ptr [rax]
0x405f: mov rbp,rax
0x4062: lea rax,[rip+0x2041d7]
0x4069: test rbx,rbx
0x406c: mov esi,0x38
0x4071: cmove rbx,rax
0x4075: mov rdi,rbx
0x4078: call 0x5440
0x407d: mov dword ptr [rbp],r12d
0x4081: pop rbx
0x4082: pop rbp
0x4083: pop r12
0x4085: ret 
0x4090: lea rax,[rip+0x2041a9]
0x4097: test rdi,rdi
0x409a: cmove rdi,rax
0x409e: mov eax,dword ptr [rdi]
0x40a0: ret 
0x40b0: lea rax,[rip+0x204189]
0x40b7: test rdi,rdi
0x40ba: cmove rdi,rax
0x40be: mov dword ptr [rdi],esi
0x40c0: ret 
0x40d0: lea rax,[rip+0x204169]
0x40d7: test rdi,rdi
0x40da: mov ecx,esi
0x40dc: cmove rdi,rax
0x40e0: mov eax,esi
0x40e2: and ecx,0x1f
0x40e5: shr al,0x5
0x40e8: movzx eax,al
0x40eb: lea rdi,[rdi+rax*4+0x8]
0x40f0: mov esi,dword ptr [rdi]
0x40f2: mov eax,esi
0x40f4: shr eax,cl
0x40f6: xor edx,eax
0x40f8: and eax,0x1
0x40fb: and edx,0x1
0x40fe: shl edx,cl
0x4100: xor edx,esi
0x4102: mov dword ptr [rdi],edx
0x4104: ret 
0x4110: lea rax,[rip+0x204129]
0x4117: test rdi,rdi
0x411a: cmove rdi,rax
0x411e: mov eax,dword ptr [rdi+0x4]
0x4121: mov dword ptr [rdi+0x4],esi
0x4124: ret 
0x4130: lea rax,[rip+0x204109]
0x4137: test rdi,rdi
0x413a: cmove rdi,rax
0x413e: test rsi,rsi
0x4141: mov dword ptr [rdi],0xa
0x4147: je 0x4157
0x4149: test rdx,rdx
0x414c: je 0x4157
0x414e: mov qword ptr [rdi+0x28],rsi
0x4152: mov qword ptr [rdi+0x30],rdx
0x4156: ret 
0x4157: sub rsp,0x8
0x415b: call 0x1400
0x4160: push r15
0x4162: push r14
0x4164: lea rax,[rip+0x2040d5]
0x416b: push r13
0x416d: push r12
0x416f: mov r13,rdi
0x4172: push rbp
0x4173: push rbx
0x4174: mov rbx,r8
0x4177: mov r14,rsi
0x417a: mov r15,rdx
0x417d: sub rsp,0x18
0x4181: test r8,r8
0x4184: cmove rbx,rax
0x4188: mov qword ptr [rsp+0x8],rcx
0x418d: call 0x1410
0x4192: mov r12d,dword ptr [rax]
0x4195: mov rbp,rax
0x4198: lea rax,[rbx+0x8]
0x419c: sub rsp,0x8
0x41a0: mov r9d,dword ptr [rbx+0x4]
0x41a4: push qword ptr [rbx+0x30]
0x41a7: mov r8d,dword ptr [rbx]
0x41aa: push qword ptr [rbx+0x28]
0x41ad: mov rdx,r15
0x41b0: push rax
0x41b1: mov rcx,qword ptr [rsp+0x28]
0x41b6: mov rsi,r14
0x41b9: mov rdi,r13
0x41bc: call 0x2c60
0x41c1: mov dword ptr [rbp],r12d
0x41c5: add rsp,0x38
0x41c9: pop rbx
0x41ca: pop rbp
0x41cb: pop r12
0x41cd: pop r13
0x41cf: pop r14
0x41d1: pop r15
0x41d3: ret 
0x41e0: push r15
0x41e2: push r14
0x41e4: lea rax,[rip+0x204055]
0x41eb: push r13
0x41ed: push r12
0x41ef: mov r12,rdx
0x41f2: push rbp
0x41f3: push rbx
0x41f4: mov rbx,rcx
0x41f7: mov r14,rdi
0x41fa: mov r15,rsi
0x41fd: sub rsp,0x38
0x4201: test rcx,rcx
0x4204: cmove rbx,rax
0x4208: xor ebp,ebp
0x420a: call 0x1410
0x420f: test r12,r12
0x4212: mov r13,rax
0x4215: mov eax,dword ptr [rax]
0x4217: sete bpl
0x421b: or ebp,dword ptr [rbx+0x4]
0x421e: lea r10,[rbx+0x8]
0x4222: sub rsp,0x8
0x4226: mov r8d,dword ptr [rbx]
0x4229: mov rcx,r15
0x422c: mov dword ptr [rsp+0x14],eax
0x4230: push qword ptr [rbx+0x30]
0x4233: mov rdx,r14
0x4236: push qword ptr [rbx+0x28]
0x4239: push r10
0x423b: xor esi,esi
0x423d: mov r9d,ebp
0x4240: xor edi,edi
0x4242: mov qword ptr [rsp+0x40],r10
0x4247: call 0x2c60
0x424c: lea rsi,[rax+0x1]
0x4250: mov qword ptr [rsp+0x48],rax
0x4255: add rsp,0x20
0x4259: mov rdi,rsi
0x425c: mov qword ptr [rsp+0x18],rsi
0x4261: call 0x5240
0x4266: mov qword ptr [rsp+0x10],rax
0x426b: sub rsp,0x8
0x426f: push qword ptr [rbx+0x30]
0x4272: push qword ptr [rbx+0x28]
0x4275: mov r10,qword ptr [rsp+0x38]
0x427a: mov r9d,ebp
0x427d: mov r8d,dword ptr [rbx]
0x4280: mov rcx,r15
0x4283: mov rdx,r14
0x4286: mov rdi,rax
0x4289: push r10
0x428b: mov rsi,qword ptr [rsp+0x38]
0x4290: call 0x2c60
0x4295: mov eax,dword ptr [rsp+0x2c]
0x4299: add rsp,0x20
0x429d: test r12,r12
0x42a0: mov dword ptr [r13],eax
0x42a4: je 0x42af
0x42a6: mov r11,qword ptr [rsp+0x28]
0x42ab: mov qword ptr [r12],r11
0x42af: mov rax,qword ptr [rsp+0x10]
0x42b4: add rsp,0x38
0x42b8: pop rbx
0x42b9: pop rbp
0x42ba: pop r12
0x42bc: pop r13
0x42be: pop r14
0x42c0: pop r15
0x42c2: ret 
0x42d0: mov rcx,rdx
0x42d3: xor edx,edx
0x42d5: jmp 0x41e0
0x42e0: mov eax,dword ptr [rip+0x203d72]
0x42e6: push r12
0x42e8: mov r12,qword ptr [rip+0x203d71]
0x42ef: push rbp
0x42f0: push rbx
0x42f1: cmp eax,0x1
0x42f4: jle 0x4321
0x42f6: sub eax,0x2
0x42f9: lea rbx,[r12+0x18]
0x42fe: shl rax,0x4
0x4302: lea rbp,[r12+rax+0x28]
0x4307: nop word ptr [rax+rax]
0x4310: mov rdi,qword ptr [rbx]
0x4313: add rbx,0x10
0x4317: call 0x13f0
0x431c: cmp rbx,rbp
0x431f: jne 0x4310
0x4321: mov rdi,qword ptr [r12+0x8]
0x4326: lea rbx,[rip+0x203e13]
0x432d: cmp rdi,rbx
0x4330: je 0x4349
0x4332: call 0x13f0
0x4337: mov qword ptr [rip+0x203d2e],0x100
0x4342: mov qword ptr [rip+0x203d2f],rbx
0x4349: lea rbx,[rip+0x203d20]
0x4350: cmp r12,rbx
0x4353: je 0x4364
0x4355: mov rdi,r12
0x4358: call 0x13f0
0x435d: mov qword ptr [rip+0x203cfc],rbx
0x4364: pop rbx
0x4365: mov dword ptr [rip+0x203ce9],0x1
0x436f: pop rbp
0x4370: pop r12
0x4372: ret 
0x4380: lea rcx,[rip+0x203eb9]
0x4387: mov rdx,-0x1
0x438e: jmp 0x3ea0
0x43a0: lea rcx,[rip+0x203e99]
0x43a7: jmp 0x3ea0
0x43b0: lea rcx,[rip+0x203e89]
0x43b7: mov rsi,rdi
0x43ba: mov rdx,-0x1
0x43c1: xor edi,edi
0x43c3: jmp 0x3ea0
0x43d0: lea rcx,[rip+0x203e69]
0x43d7: mov rdx,rsi
0x43da: mov rsi,rdi
0x43dd: xor edi,edi
0x43df: jmp 0x3ea0
0x43f0: sub rsp,0x48
0x43f4: mov rax,rdx
0x43f7: mov rdx,qword ptr fs:0x28
0x4400: mov qword ptr [rsp+0x38],rdx
0x4405: xor edx,edx
0x4407: cmp esi,0xa
0x440a: je 0x4474
0x440c: mov dword ptr [rsp],esi
0x440f: mov rcx,rsp
0x4412: mov rdx,-0x1
0x4419: mov rsi,rax
0x441c: mov qword ptr [rsp+0x4],0x0
0x4425: mov qword ptr [rsp+0xc],0x0
0x442e: mov qword ptr [rsp+0x14],0x0
0x4437: mov qword ptr [rsp+0x1c],0x0
0x4440: mov qword ptr [rsp+0x24],0x0
0x4449: mov qword ptr [rsp+0x2c],0x0
0x4452: mov dword ptr [rsp+0x34],0x0
0x445a: call 0x3ea0
0x445f: mov rcx,qword ptr [rsp+0x38]
0x4464: xor rcx,qword ptr fs:0x28
0x446d: jne 0x4479
0x446f: add rsp,0x48
0x4473: ret 
0x4474: call 0x1400
0x4479: call 0x14c0
0x447e: nop 
0x4480: sub rsp,0x48
0x4484: mov rax,rdx
0x4487: mov rdx,rcx
0x448a: mov rcx,qword ptr fs:0x28
0x4493: mov qword ptr [rsp+0x38],rcx
0x4498: xor ecx,ecx
0x449a: cmp esi,0xa
0x449d: je 0x4500
0x449f: mov dword ptr [rsp],esi
0x44a2: mov rcx,rsp
0x44a5: mov rsi,rax
0x44a8: mov qword ptr [rsp+0x4],0x0
0x44b1: mov qword ptr [rsp+0xc],0x0
0x44ba: mov qword ptr [rsp+0x14],0x0
0x44c3: mov qword ptr [rsp+0x1c],0x0
0x44cc: mov qword ptr [rsp+0x24],0x0
0x44d5: mov qword ptr [rsp+0x2c],0x0
0x44de: mov dword ptr [rsp+0x34],0x0
0x44e6: call 0x3ea0
0x44eb: mov rdx,qword ptr [rsp+0x38]
0x44f0: xor rdx,qword ptr fs:0x28
0x44f9: jne 0x4505
0x44fb: add rsp,0x48
0x44ff: ret 
0x4500: call 0x1400
0x4505: call 0x14c0
0x450a: nop word ptr [rax+rax]
0x4510: mov rdx,rsi
0x4513: mov esi,edi
0x4515: xor edi,edi
0x4517: jmp 0x43f0
0x4520: mov rcx,rdx
0x4523: mov rdx,rsi
0x4526: mov esi,edi
0x4528: xor edi,edi
0x452a: jmp 0x4480
0x4530: sub rsp,0x48
0x4534: mov ecx,edx
0x4536: mov rax,qword ptr fs:0x28
0x453f: mov qword ptr [rsp+0x38],rax
0x4544: xor eax,eax
0x4546: mov rax,qword ptr [rip+0x203d23]
0x454d: mov r8,rsp
0x4550: and ecx,0x1f
0x4553: movdqa xmm0,[rip+0x203ce5]
0x455b: mov qword ptr [rsp+0x30],rax
0x4560: mov eax,edx
0x4562: movaps [rsp],xmm0
0x4566: shr al,0x5
0x4569: movzx eax,al
0x456c: lea r9,[r8+rax*4+0x8]
0x4571: movdqa xmm0,[rip+0x203cd7]
0x4579: movaps [rsp+0x10],xmm0
0x457e: movdqa xmm0,[rip+0x203cda]
0x4586: movaps [rsp+0x20],xmm0
0x458b: mov edx,dword ptr [r9]
0x458e: mov eax,edx
0x4590: shr eax,cl
0x4592: not eax
0x4594: and eax,0x1
0x4597: shl eax,cl
0x4599: mov rcx,r8
0x459c: xor eax,edx
0x459e: mov rdx,rsi
0x45a1: mov rsi,rdi
0x45a4: mov dword ptr [r9],eax
0x45a7: xor edi,edi
0x45a9: call 0x3ea0
0x45ae: mov rsi,qword ptr [rsp+0x38]
0x45b3: xor rsi,qword ptr fs:0x28
0x45bc: jne 0x45c3
0x45be: add rsp,0x48
0x45c2: ret 
0x45c3: call 0x14c0
0x45c8: nop dword ptr [rax+rax]
0x45d0: movsx edx,sil
0x45d4: mov rsi,-0x1
0x45db: jmp 0x4530
0x45e0: mov edx,0x3a
0x45e5: mov rsi,-0x1
0x45ec: jmp 0x4530
0x4600: mov edx,0x3a
0x4605: jmp 0x4530
0x467f: mov rcx,qword ptr [rsp+0x38]
0x4684: xor rcx,qword ptr fs:0x28
0x468d: jne 0x4699
0x468f: add rsp,0x48
0x4693: ret 
0x4694: call 0x1400
0x4699: call 0x14c0
0x469e: nop 
0x46a0: sub rsp,0x48
0x46a4: mov r9,rcx
0x46a7: mov rcx,qword ptr [rip+0x203bc2]
0x46ae: movdqa xmm0,[rip+0x203b8a]
0x46b6: mov rax,qword ptr fs:0x28
0x46bf: mov qword ptr [rsp+0x38],rax
0x46c4: xor eax,eax
0x46c6: movaps [rsp],xmm0
0x46ca: test rsi,rsi
0x46cd: mov qword ptr [rsp+0x30],rcx
0x46d2: mov dword ptr [rsp],0xa
0x46d9: movdqa xmm0,[rip+0x203b6f]
0x46e1: movaps [rsp+0x10],xmm0
0x46e6: movdqa xmm0,[rip+0x203b72]
0x46ee: movaps [rsp+0x20],xmm0
0x46f3: je 0x4727
0x46f5: test rdx,rdx
0x46f8: je 0x4727
0x46fa: mov qword ptr [rsp+0x28],rsi
0x46ff: mov qword ptr [rsp+0x30],rdx
0x4704: mov rcx,rsp
0x4707: mov rdx,r8
0x470a: mov rsi,r9
0x470d: call 0x3ea0
0x4712: mov rdi,qword ptr [rsp+0x38]
0x4717: xor rdi,qword ptr fs:0x28
0x4720: jne 0x472c
0x4722: add rsp,0x48
0x4726: ret 
0x4727: call 0x1400
0x472c: call 0x14c0
0x4731: nop dword ptr [rax+rax]
0x4736: nop word ptr cs:[rax+rax]
0x4740: mov r8,-0x1
0x4747: jmp 0x46a0
0x4750: mov rcx,rdx
0x4753: mov r8,-0x1
0x475a: mov rdx,rsi
0x475d: mov rsi,rdi
0x4760: xor edi,edi
0x4762: jmp 0x46a0
0x4770: mov r8,rcx
0x4773: mov rcx,rdx
0x4776: mov rdx,rsi
0x4779: mov rsi,rdi
0x477c: xor edi,edi
0x477e: jmp 0x46a0
0x4790: lea rcx,[rip+0x203889]
0x4797: jmp 0x3ea0
0x47a0: lea rcx,[rip+0x203879]
0x47a7: mov rdx,rsi
0x47aa: mov rsi,rdi
0x47ad: xor edi,edi
0x47af: jmp 0x3ea0
0x47c0: lea rcx,[rip+0x203859]
0x47c7: mov rdx,-0x1
0x47ce: jmp 0x3ea0
0x4925: test r12,r12
0x4928: jne 0x48e0
0x49d9: call 0x14c0
0x49de: nop 
0x49e0: push r15
0x49e2: push r14
0x49e4: push r13
0x49e6: push r12
0x49e8: push rbp
0x49e9: push rbx
0x49ea: lea rbp,[rsi+0x1]
0x49ee: sub rsp,0x68
0x49f2: mov rax,qword ptr fs:0x28
0x49fb: mov qword ptr [rsp+0x58],rax
0x4a00: xor eax,eax
0x4a02: mov qword ptr [rsp+0x10],rdx
0x4a07: test rsi,rsi
0x4a0a: mov eax,0x40
0x4a0f: mov edx,0x8
0x4a14: cmove rbp,rax
0x4a18: mov qword ptr [rsp+0x8],rdi
0x4a1d: mov rax,rdx
0x4a20: mov qword ptr [rsp+0x18],rcx
0x4a25: mov qword ptr [rsp+0x38],r8
0x4a2a: mul rbp
0x4a2d: mov qword ptr [rsp+0x30],r9
0x4a32: jo 0x4c00
0x4a38: xor ecx,ecx
0x4a3a: test rax,rax
0x4a3d: js 0x4bfb
0x4a43: test rcx,rcx
0x4a46: jne 0x4bfb
0x4a4c: lea rbx,[rbp*8]
0x4a54: mov rdi,rbx
0x4a57: call 0x5240
0x4a5c: mov rdi,rbx
0x4a5f: mov r12,rax
0x4a62: xor ebx,ebx
0x4a64: call 0x5240
0x4a69: mov r13,rax
0x4a6c: lea rax,[rsp+0x40]
0x4a71: mov qword ptr [rsp+0x40],0x0
0x4a7a: mov qword ptr [rsp+0x48],0x0
0x4a83: mov qword ptr [rsp+0x20],rax
0x4a88: jmp 0x4acc
0x4a90: cmp r14,-0x1
0x4a94: je 0x4b4c
0x4a9a: mov r15,r14
0x4a9d: add r15,0x1
0x4aa1: js 0x4bfb
0x4aa7: mov rdi,r15
0x4aaa: call 0x5240
0x4aaf: mov rsi,qword ptr [rsp+0x48]
0x4ab4: mov qword ptr [r13+rbx*8],r14
0x4ab9: mov rdx,r15
0x4abc: mov rdi,rax
0x4abf: call 0x15b0
0x4ac4: mov qword ptr [r12+rbx*8],rax
0x4ac8: add rbx,0x1
0x4acc: mov rcx,qword ptr [rsp+0x20]
0x4ad1: mov rdx,qword ptr [rsp+0x18]
0x4ad6: mov rsi,qword ptr [rsp+0x10]
0x4adb: mov rdi,qword ptr [rsp+0x8]
0x4ae0: call 0x4810
0x4ae5: cmp rbx,rbp
0x4ae8: mov r14,rax
0x4aeb: jb 0x4a90
0x4aed: test r12,r12
0x4af0: je 0x4ba8
0x4af6: movabsq rax,0xaaaaaaaaaaaaaa9
0x4b00: cmp rbp,rax
0x4b03: ja 0x4bfb
0x4b09: mov rax,rbp
0x4b0c: mov rdi,r12
0x4b0f: shr rax, 1
0x4b12: lea rbp,[rbp+rax+0x1]
0x4b17: lea rdx,[rbp*8]
0x4b1f: mov rsi,rdx
0x4b22: mov qword ptr [rsp+0x28],rdx
0x4b27: call 0x52a0
0x4b2c: mov rdx,qword ptr [rsp+0x28]
0x4b31: mov r12,rax
0x4b34: mov rdi,r13
0x4b37: mov rsi,rdx
0x4b3a: call 0x52a0
0x4b3f: cmp r14,-0x1
0x4b43: mov r13,rax
0x4b46: jne 0x4a9a
0x4b4c: mov qword ptr [r12+rbx*8],0x0
0x4b54: mov rdi,qword ptr [rsp+0x48]
0x4b59: mov qword ptr [r13+rbx*8],0x0
0x4b62: call 0x13f0
0x4b67: cmp qword ptr [rsp+0x30],0x0
0x4b6d: mov rax,qword ptr [rsp+0x38]
0x4b72: mov qword ptr [rax],r12
0x4b75: je 0x4bf1
0x4b77: mov rax,qword ptr [rsp+0x30]
0x4b7c: mov qword ptr [rax],r13
0x4b7f: mov rcx,qword ptr [rsp+0x58]
0x4b84: xor rcx,qword ptr fs:0x28
0x4b8d: mov rax,rbx
0x4b90: jne 0x4c0a
0x4b92: add rsp,0x68
0x4b96: pop rbx
0x4b97: pop rbp
0x4b98: pop r12
0x4b9a: pop r13
0x4b9c: pop r14
0x4b9e: pop r15
0x4ba0: ret 
0x4ba8: test rbp,rbp
0x4bab: mov eax,0x10
0x4bb0: mov edx,0x8
0x4bb5: cmove rbp,rax
0x4bb9: mov rax,rdx
0x4bbc: xor esi,esi
0x4bbe: mul rbp
0x4bc1: jo 0x4c0f
0x4bc3: test rax,rax
0x4bc6: js 0x4bfb
0x4bc8: test rsi,rsi
0x4bcb: jne 0x4bfb
0x4bcd: lea rdx,[rbp*8]
0x4bd5: xor edi,edi
0x4bd7: mov rsi,rdx
0x4bda: mov qword ptr [rsp+0x28],rdx
0x4bdf: call 0x52a0
0x4be4: mov rdx,qword ptr [rsp+0x28]
0x4be9: mov r12,rax
0x4bec: jmp 0x4b34
0x4bf1: mov rdi,r13
0x4bf4: call 0x13f0
0x4bf9: jmp 0x4b7f
0x4bfb: call 0x5490
0x4c00: mov ecx,0x1
0x4c05: jmp 0x4a3a
0x4c0a: call 0x14c0
0x4c0f: mov esi,0x1
0x4c14: jmp 0x4bc3
0x4d58: mov r8,rcx
0x4d5b: mov rcx,rdx
0x4d5e: lea rdx,[rip+0x13af]
0x4d65: mov esi,0x1
0x4d6a: xor eax,eax
0x4d6c: call 0x16a0
0x4d71: jmp 0x4c5c
0x4f6d: push r12
0x4f6f: push r15
0x4f71: push r14
0x4f73: mov r8,qword ptr [rsp+0x20]
0x4f78: mov rcx,rbx
0x4f7b: mov rdx,rax
0x4f7e: mov rdi,rbp
0x4f81: mov esi,0x1
0x4f86: xor eax,eax
0x4f88: call 0x16a0
0x4f8d: add rsp,0x20
0x4f91: add rsp,0x28
0x4f95: pop rbx
0x4f96: pop rbp
0x4f97: pop r12
0x4f99: pop r13
0x4f9b: pop r14
0x4f9d: pop r15
0x4f9f: ret 
0x4fd9: push r12
0x4fdb: push r15
0x4fdd: push r14
0x4fdf: mov r9,qword ptr [rsp+0x28]
0x4fe4: jmp 0x4f73
0x5040: xor r9d,r9d
0x5043: cmp qword ptr [r8],0x0
0x5047: je 0x505b
0x5049: nop dword ptr [rax]
0x5050: add r9,0x1
0x5054: cmp qword ptr [r8+r9*8],0x0
0x5059: jne 0x5050
0x505b: jmp 0x4c20
0x5088: mov r11d,eax
0x508b: add r11,qword ptr [r10+0x10]
0x508f: add eax,0x8
0x5092: mov dword ptr [r10],eax
0x50c5: call 0x14c0
0x50e0: push rbp
0x50e1: push rbx
0x50e2: mov r10d,0x20
0x50e8: xor r11d,r11d
0x50eb: sub rsp,0xb8
0x50f2: mov rax,qword ptr fs:0x28
0x50fb: mov qword ptr [rsp+0x78],rax
0x5100: xor eax,eax
0x5102: lea rax,[rsp+0xd0]
0x510a: mov qword ptr [rsp+0xa0],r8
0x5112: lea rbx,[rsp+0xd0]
0x511a: lea r8,[rsp+0x20]
0x511f: mov qword ptr [rsp+0xa8],r9
0x5127: mov dword ptr [rsp+0x8],0x20
0x512f: mov qword ptr [rsp+0x10],rax
0x5134: lea rax,[rsp+0x80]
0x513c: xor r9d,r9d
0x513f: mov qword ptr [rsp+0x18],rax
0x5144: mov rbp,rax
0x5147: nop word ptr [rax+rax]
0x5150: cmp r10d,0x2f
0x5154: ja 0x51ac
0x5156: mov eax,r10d
0x5159: mov r11d,0x1
0x515f: add r10d,0x8
0x5163: add rax,rbp
0x5166: mov rax,qword ptr [rax]
0x5169: test rax,rax
0x516c: mov qword ptr [r8+r9*8],rax
0x5170: je 0x517c
0x5172: add r9,0x1
0x5176: cmp r9,0xa
0x517a: jne 0x5150
0x517c: test r11b,r11b
0x517f: jne 0x51a5
0x5181: call 0x4c20
0x5186: mov rax,qword ptr [rsp+0x78]
0x518b: xor rax,qword ptr fs:0x28
0x5194: jne 0x51a0
0x5196: add rsp,0xb8
0x519d: pop rbx
0x519e: pop rbp
0x519f: ret 
0x51a0: call 0x14c0
0x51a5: mov dword ptr [rsp+0x8],r10d
0x51aa: jmp 0x5181
0x51ac: mov rax,rbx
0x51af: add rbx,0x8
0x51b3: jmp 0x5166
0x51c0: push rbx
0x51c1: lea rsi,[rip+0xf9a]
0x51c8: mov edx,0x5
0x51cd: xor edi,edi
0x51cf: call 0x1490
0x51d4: lea rdx,[rip+0xf9c]
0x51db: mov rsi,rax
0x51de: mov edi,0x1
0x51e3: xor eax,eax
0x51e5: call 0x1630
0x51ea: lea rsi,[rip+0xf9c]
0x51f1: mov edx,0x5
0x51f6: xor edi,edi
0x51f8: call 0x1490
0x51fd: lea rcx,[rip+0x8d4]
0x5204: lea rdx,[rip+0x6b5]
0x520b: mov rsi,rax
0x520e: mov edi,0x1
0x5213: xor eax,eax
0x5215: call 0x1630
0x521a: mov rbx,qword ptr [rip+0x202e67]
0x5221: lea rsi,[rip+0x1198]
0x5228: xor edi,edi
0x522a: mov edx,0x5
0x522f: call 0x1490
0x5234: mov rsi,rbx
0x5237: mov rdi,rax
0x523a: pop rbx
0x523b: jmp 0x1580
0x525a: nop word ptr [rax+rax]
0x5260: mov rax,rdi
0x5263: mul rsi
0x5266: mov rdi,rax
0x5269: seto al
0x526c: test rdi,rdi
0x526f: js 0x527b
0x5271: movzx eax,al
0x5274: test rax,rax
0x5277: jne 0x527b
0x5279: jmp 0x5240
0x527b: sub rsp,0x8
0x527f: call 0x5490
0x5284: nop 
0x5286: nop word ptr cs:[rax+rax]
0x5290: jmp 0x5240
0x52d6: nop word ptr cs:[rax+rax]
0x52e0: mov rax,rsi
0x52e3: mul rdx
0x52e6: mov rsi,rax
0x52e9: seto al
0x52ec: test rsi,rsi
0x52ef: js 0x52fb
0x52f1: movzx eax,al
0x52f4: test rax,rax
0x52f7: jne 0x52fb
0x52f9: jmp 0x52a0
0x52fb: sub rsp,0x8
0x52ff: call 0x5490
0x5304: nop 
0x5306: nop word ptr cs:[rax+rax]
0x5310: test rdi,rdi
0x5313: mov r9,rdx
0x5316: mov rcx,qword ptr [rsi]
0x5319: je 0x5350
0x531b: xor edx,edx
0x531d: movabsq rax,0x5555555555555554
0x5327: div r9
0x532a: cmp rax,rcx
0x532d: jbe 0x536b
0x532f: mov rax,rcx
0x5332: shr rax, 1
0x5335: lea rcx,[rax+rcx+0x1]
0x533a: mov qword ptr [rsi],rcx
0x533d: imul rcx,r9
0x5341: mov rsi,rcx
0x5344: jmp 0x52a0
0x5350: test rcx,rcx
0x5353: je 0x5378
0x5355: mov rax,rcx
0x5358: mul r9
0x535b: seto dl
0x535e: test rax,rax
0x5361: movzx edx,dl
0x5364: js 0x536b
0x5366: test rdx,rdx
0x5369: je 0x533a
0x536b: sub rsp,0x8
0x536f: call 0x5490
0x5374: nop dword ptr [rax]
0x5378: xor edx,edx
0x537a: mov eax,0x80
0x537f: xor r8d,r8d
0x5382: div r9
0x5385: test rax,rax
0x5388: sete r8b
0x538c: lea rcx,[r8+rax]
0x5390: jmp 0x5355
0x53a0: test rdi,rdi
0x53a3: mov rax,qword ptr [rsi]
0x53a6: je 0x53d0
0x53a8: movabsq rdx,0x5555555555555553
0x53b2: cmp rax,rdx
0x53b5: ja 0x53e1
0x53b7: mov rdx,rax
0x53ba: shr rdx, 1
0x53bd: lea rax,[rdx+rax+0x1]
0x53c2: mov qword ptr [rsi],rax
0x53c5: mov rsi,rax
0x53c8: jmp 0x52a0
0x53d0: test rax,rax
0x53d3: mov edx,0x80
0x53d8: cmove rax,rdx
0x53dc: test rax,rax
0x53df: jns 0x53c2
0x53e1: sub rsp,0x8
0x53e5: call 0x5490
0x53ea: nop word ptr [rax+rax]
0x53f0: push rbx
0x53f1: mov rbx,rdi
0x53f4: call 0x5240
0x53f9: mov rdx,rbx
0x53fc: xor esi,esi
0x53fe: mov rdi,rax
0x5401: pop rbx
0x5402: jmp 0x1530
0x5410: mov rax,rdi
0x5413: sub rsp,0x8
0x5417: mul rsi
0x541a: seto dl
0x541d: test rax,rax
0x5420: js 0x5439
0x5422: movzx edx,dl
0x5425: test rdx,rdx
0x5428: jne 0x5439
0x542a: call 0x1590
0x542f: test rax,rax
0x5432: je 0x5439
0x5434: add rsp,0x8
0x5438: ret 
0x5439: call 0x5490
0x543e: nop 
0x54c0: call 0x1400
0x54c5: nop word ptr cs:[rax+rax]
0x54cf: nop 
0x55f0: push r13
0x55f2: push r12
0x55f4: mov r13,rsi
0x55f7: push rbp
0x55f8: push rbx
0x55f9: mov rbx,rdi
0x55fc: mov r12,rdx
0x55ff: sub rsp,0x18
0x5603: mov rax,qword ptr fs:0x28
0x560c: mov qword ptr [rsp+0x8],rax
0x5611: xor eax,eax
0x5613: lea rax,[rsp+0x4]
0x5618: test rdi,rdi
0x561b: cmove rbx,rax
0x561f: mov rdi,rbx
0x5622: call 0x14e0
0x5627: cmp rax,-0x3
0x562b: mov rbp,rax
0x562e: jbe 0x5650
0x5630: test r12,r12
0x5633: je 0x5650
0x5635: xor edi,edi
0x5637: call 0x5700
0x563c: test al,al
0x563e: jne 0x5650
0x5640: movzx eax,byte ptr [r13]
0x5645: mov ebp,0x1
0x564a: mov dword ptr [rbx],eax
0x564c: nop dword ptr [rax]
0x5650: mov rdx,qword ptr [rsp+0x8]
0x5655: xor rdx,qword ptr fs:0x28
0x565e: mov rax,rbp
0x5661: jne 0x566e
0x5663: add rsp,0x18
0x5667: pop rbx
0x5668: pop rbp
0x5669: pop r12
0x566b: pop r13
0x566d: ret 
0x566e: call 0x14c0
0x5673: nop word ptr cs:[rax+rax]
0x567d: nop dword ptr [rax]
0x5680: push r12
0x5682: push rbp
0x5683: mov rbp,rdi
0x5686: push rbx
0x5687: call 0x1440
0x568c: mov ebx,dword ptr [rbp]
0x568f: mov rdi,rbp
0x5692: mov r12,rax
0x5695: call 0x54d0
0x569a: and ebx,0x20
0x569d: test ebx,ebx
0x569f: jne 0x56b8
0x56a1: test eax,eax
0x56a3: je 0x56af
0x56a5: test r12,r12
0x56a8: mov eax,0xffffffff
0x56ad: je 0x56e8
0x56af: pop rbx
0x56b0: pop rbp
0x56b1: pop r12
0x56b3: ret 
0x56b8: test eax,eax
0x56ba: jne 0x56d8
0x56bc: call 0x1410
0x56c1: mov dword ptr [rax],0x0
0x56c7: mov eax,0xffffffff
0x56cc: pop rbx
0x56cd: pop rbp
0x56ce: pop r12
0x56d0: ret 
0x56d8: pop rbx
0x56d9: mov eax,0xffffffff
0x56de: pop rbp
0x56df: pop r12
0x56e1: ret 
0x56e8: call 0x1410
0x56ed: cmp dword ptr [rax],0x9
0x56f0: pop rbx
0x56f1: pop rbp
0x56f2: pop r12
0x56f4: setne al
0x56f7: movzx eax,al
0x56fa: neg eax
0x56fc: ret 
0x5700: sub rsp,0x8
0x5704: xor esi,esi
0x5706: call 0x1620
0x570b: mov rdx,rax
0x570e: mov eax,0x1
0x5713: test rdx,rdx
0x5716: je 0x5735
0x5718: lea rdi,[rip+0xd61]
0x571f: mov ecx,0x2
0x5724: mov rsi,rdx
0x5727: rep cmpsb [rsi],es:[rdi]
0x5729: seta cl
0x572c: sbb cl,0x0
0x572f: xor eax,eax
0x5731: test cl,cl
0x5733: jne 0x5740
0x5735: add rsp,0x8
0x5739: ret 
0x5740: lea rdi,[rip+0xd3b]
0x5747: mov ecx,0x6
0x574c: mov rsi,rdx
0x574f: rep cmpsb [rsi],es:[rdi]
0x5751: seta al
0x5754: sbb al,0x0
0x5756: test al,al
0x5758: setne al
0x575b: add rsp,0x8
0x575f: ret 
0x5760: sub rsp,0x8
0x5764: mov edi,0xe
0x5769: call 0x15f0
0x576e: test rax,rax
0x5771: je 0x5790
0x5773: cmp byte ptr [rax],0x0
0x5776: lea rdx,[rip+0xd0b]
0x577d: cmove rax,rdx
0x5781: add rsp,0x8
0x5785: ret 
0x5790: lea rax,[rip+0xcf1]
0x5797: add rsp,0x8
0x579b: ret 
0x57a0: push r15
0x57a2: push r14
0x57a4: mov r15,rdx
0x57a7: push r13
0x57a9: push r12
0x57ab: lea r12,[rip+0x2023be]
0x57b2: push rbp
0x57b3: lea rbp,[rip+0x2023be]
0x57ba: push rbx
0x57bb: mov r13d,edi
0x57be: mov r14,rsi
0x57c1: sub rbp,r12
0x57c4: sub rsp,0x8
0x57c8: sar rbp,0x3
0x57cc: call 0x13b8
0x57d1: test rbp,rbp
0x57d4: je 0x57f6
0x57d6: xor ebx,ebx
0x57d8: nop dword ptr [rax+rax]
0x57e0: mov rdx,r15
0x57e3: mov rsi,r14
0x57e6: mov edi,r13d
0x57e9: call qword ptr [r12+rbx*8]
0x57ed: add rbx,0x1
0x57f1: cmp rbp,rbx
0x57f4: jne 0x57e0
0x57f6: add rsp,0x8
0x57fa: pop rbx
0x57fb: pop rbp
0x57fc: pop r12
0x57fe: pop r13
0x5800: pop r14
0x5802: pop r15
0x5804: ret 
0x5810: rep ret 
