0x1a98: sub rsp,0x8
0x1a9c: mov rax,qword ptr [rip+0x21a545]
0x1aa3: test rax,rax
0x1aa6: je 0x1aaa
0x1aa8: call rax
0x1aaa: add rsp,0x8
0x1aae: ret 
0x1ab6: jmp qword ptr [rip+0x21a2bc]
0x1af0: jmp qword ptr [rip+0x21a2a2]
0x1b50: jmp qword ptr [rip+0x21a272]
0x1b70: jmp qword ptr [rip+0x21a262]
0x1cd0: jmp qword ptr [rip+0x21a1b2]
0x1d10: jmp qword ptr [rip+0x21a192]
0x1d50: jmp qword ptr [rip+0x21a172]
0x1f20: jmp qword ptr [rip+0x21a08a]
0x1f70: jmp qword ptr [rip+0x21a082]
0x1fb3: lea rsi,[rip+0x14033]
0x1fba: xor edi,edi
0x1fbc: mov r12,qword ptr [rip+0x21a275]
0x1fc3: mov edx,0x5
0x1fc8: mov r13,rax
0x1fcb: call 0x1bf0
0x1fd0: mov rdi,qword ptr [rip+0x21a109]
0x1fd7: mov rdx,rax
0x1fda: mov r8,r13
0x1fdd: xor eax,eax
0x1fdf: mov rcx,r12
0x1fe2: mov esi,0x1
0x1fe7: call 0x1f00
0x1fec: test rbx,rbx
0x1fef: je 0x202d
0x1ff1: mov rsi,rsp
0x1ff4: mov rdi,rbx
0x1ff7: call 0x4500
0x1ffc: lea rsi,[rip+0x13fbb]
0x2003: xor edi,edi
0x2005: mov edx,0x5
0x200a: mov rbx,rax
0x200d: call 0x1bf0
0x2012: mov rdi,qword ptr [rip+0x21a0c7]
0x2019: mov rdx,rax
0x201c: mov rcx,rbx
0x201f: mov esi,0x1
0x2024: xor eax,eax
0x2026: call 0x1f00
0x202b: jmp 0x203e
0x202d: mov rsi,qword ptr [rip+0x21a0ac]
0x2034: mov edi,0xa
0x2039: call 0x1cd0
0x203e: test bpl,bpl
0x2041: jne 0x204d
0x2043: call 0x3d70
0x2048: call 0x3280
0x204d: call 0x3220
0x2052: nop word ptr cs:[rax+rax]
0x205c: nop dword ptr [rax]
0x2538: lea rsi,[rip+0x14459]
0x253f: mov rbx,rax
0x2542: mov edx,0x5
0x2547: xor edi,edi
0x2549: call 0x1bf0
0x254e: mov rcx,rbx
0x2551: mov rdx,rax
0x2554: xor esi,esi
0x2556: mov edi,0x1
0x255b: xor eax,eax
0x255d: call 0x1e60
0x2562: nop word ptr [rax+rax]
0x27a3: lea rsi,[rip+0x14286]
0x27aa: mov rbp,rax
0x27ad: mov edx,0x5
0x27b2: xor edi,edi
0x27b4: call 0x1bf0
0x27b9: mov rcx,rbp
0x27bc: mov rdx,rax
0x27bf: xor esi,esi
0x27c1: xor eax,eax
0x27c3: xor edi,edi
0x27c5: call 0x1e60
0x27ca: mov rax,qword ptr [rsp+0x30]
0x27cf: jmp 0x2425
0x2b12: lea rsi,[rip+0x13624]
0x2b19: mov edx,0x5
0x2b1e: xor edi,edi
0x2b20: mov rbp,rax
0x2b23: call 0x1bf0
0x2b28: mov rbx,rax
0x2b2b: call 0x1b20
0x2b30: mov esi,dword ptr [rax]
0x2b32: mov rcx,rbp
0x2b35: mov rdx,rbx
0x2b38: mov edi,0x1
0x2b3d: xor eax,eax
0x2b3f: call 0x1e60
0x2c93: lea rsi,[rip+0x134be]
0x2c9a: mov rbx,rax
0x2c9d: mov edx,0x5
0x2ca2: xor edi,edi
0x2ca4: call 0x1bf0
0x2ca9: mov rcx,rbx
0x2cac: mov rdx,rax
0x2caf: xor esi,esi
0x2cb1: mov edi,0x1
0x2cb6: xor eax,eax
0x2cb8: call 0x1e60
0x2cc5: lea rsi,[rip+0x13ca4]
0x2ccc: mov rbx,rax
0x2ccf: mov edx,0x5
0x2cd4: xor edi,edi
0x2cd6: call 0x1bf0
0x2cdb: mov r8,r15
0x2cde: mov rdx,rax
0x2ce1: mov rcx,rbx
0x2ce4: xor esi,esi
0x2ce6: xor edi,edi
0x2ce8: xor eax,eax
0x2cea: call 0x1e60
0x2cef: call 0x3220
0x2d37: lea rsi,[rip+0x13cb2]
0x2d3e: mov rbx,rax
0x2d41: mov edx,0x5
0x2d46: xor edi,edi
0x2d48: call 0x1bf0
0x2d4d: mov r8,r12
0x2d50: mov rdx,rax
0x2d53: mov rcx,rbx
0x2d56: xor esi,esi
0x2d58: mov edi,0x1
0x2d5d: xor eax,eax
0x2d5f: call 0x1e60
0x2da0: call 0x1c20
0x2dce: call 0x3220
0x2e2b: call 0x3220
0x2e40: lea rsi,[rip+0x13c51]
0x2e47: mov rbx,rax
0x2e4a: mov edx,0x5
0x2e4f: xor edi,edi
0x2e51: call 0x1bf0
0x2e56: mov rcx,rbx
0x2e59: mov rdx,rax
0x2e5c: xor esi,esi
0x2e5e: mov edi,0x1
0x2e63: xor eax,eax
0x2e65: call 0x1e60
0x2e72: lea rsi,[rip+0x13bf7]
0x2e79: mov rbx,rax
0x2e7c: mov edx,0x5
0x2e81: xor edi,edi
0x2e83: call 0x1bf0
0x2e88: mov rcx,rbx
0x2e8b: mov rdx,rax
0x2e8e: xor esi,esi
0x2e90: mov edi,0x1
0x2e95: xor eax,eax
0x2e97: call 0x1e60
0x2ee4: lea rsi,[rip+0x13281]
0x2eeb: mov rbx,rax
0x2eee: mov edx,0x5
0x2ef3: xor edi,edi
0x2ef5: call 0x1bf0
0x2efa: mov rcx,rbx
0x2efd: mov rdx,rax
0x2f00: xor esi,esi
0x2f02: xor edi,edi
0x2f04: xor eax,eax
0x2f06: call 0x1e60
0x2f0b: call 0x3220
0x2f55: lea rsi,[rip+0x131c8]
0x2f5c: mov rbx,rax
0x2f5f: xor edi,edi
0x2f61: mov edx,0x5
0x2f66: call 0x1bf0
0x2f6b: mov rcx,rbx
0x2f6e: mov rdx,rax
0x2f71: xor esi,esi
0x2f73: xor edi,edi
0x2f75: xor eax,eax
0x2f77: call 0x1e60
0x2f7c: jmp 0x2d8f
0x2fba: hlt 
0x2fbb: nop dword ptr [rax+rax]
0x2fc0: lea rdi,[rip+0x2190d9]
0x2fc7: push rbp
0x2fc8: lea rax,[rip+0x2190d1]
0x2fcf: cmp rax,rdi
0x2fd2: mov rbp,rsp
0x2fd5: je 0x2ff0
0x2fd7: mov rax,qword ptr [rip+0x218ffa]
0x2fde: test rax,rax
0x2fe1: je 0x2ff0
0x2fe3: pop rbp
0x2fe4: jmp rax
0x2ff0: pop rbp
0x2ff1: ret 
0x3000: lea rdi,[rip+0x219099]
0x3007: lea rsi,[rip+0x219092]
0x300e: push rbp
0x300f: sub rsi,rdi
0x3012: mov rbp,rsp
0x3015: sar rsi,0x3
0x3019: mov rax,rsi
0x301c: shr rax,0x3f
0x3020: add rsi,rax
0x3023: sar rsi, 1
0x3026: je 0x3040
0x3028: mov rax,qword ptr [rip+0x218fc1]
0x302f: test rax,rax
0x3032: je 0x3040
0x3034: pop rbp
0x3035: jmp rax
0x3040: pop rbp
0x3041: ret 
0x3061: push rbp
0x3062: mov rbp,rsp
0x3065: je 0x3073
0x3067: mov rdi,qword ptr [rip+0x218f9a]
0x306e: call 0x1f70
0x3073: call 0x2fc0
0x3078: mov byte ptr [rip+0x219069],0x1
0x307f: pop rbp
0x3080: ret 
0x3090: push rbp
0x3091: mov rbp,rsp
0x3094: pop rbp
0x3095: jmp 0x3000
0x3160: mov eax,dword ptr [rip+0x219072]
0x3166: test eax,eax
0x3168: je 0x3208
0x316e: push r13
0x3170: push r12
0x3172: lea r13,[rip+0x139e8]
0x3179: push rbp
0x317a: push rbx
0x317b: mov r12d,edi
0x317e: xor ebx,ebx
0x3180: sub rsp,0x8
0x3184: jmp 0x319d
0x3190: mov eax,dword ptr [rip+0x219042]
0x3196: add ebx,0x1
0x3199: cmp ebx,eax
0x319b: jae 0x31ed
0x319d: mov edi,ebx
0x319f: call 0x30a0
0x31a4: mov rdi,rax
0x31a7: mov rbp,rax
0x31aa: call 0x1b30
0x31af: test eax,eax
0x31b1: je 0x3190
0x31b3: test r12b,r12b
0x31b6: jne 0x3190
0x31b8: mov rdx,rbp
0x31bb: xor edi,edi
0x31bd: mov esi,0x3
0x31c2: call 0x6090
0x31c7: mov rbp,rax
0x31ca: add ebx,0x1
0x31cd: call 0x1b20
0x31d2: mov esi,dword ptr [rax]
0x31d4: xor edi,edi
0x31d6: xor eax,eax
0x31d8: mov rcx,rbp
0x31db: mov rdx,r13
0x31de: call 0x1e60
0x31e3: mov eax,dword ptr [rip+0x218fef]
0x31e9: cmp ebx,eax
0x31eb: jb 0x319d
0x31ed: mov dword ptr [rip+0x218fe1],0x0
0x31f7: add rsp,0x8
0x31fb: pop rbx
0x31fc: pop rbp
0x31fd: pop r12
0x31ff: pop r13
0x3201: ret 
0x3208: mov dword ptr [rip+0x218fc6],0x0
0x3212: ret 
0x3220: push rbx
0x3221: sub rsp,0x90
0x3228: mov rax,qword ptr fs:0x28
0x3231: mov qword ptr [rsp+0x88],rax
0x3239: xor eax,eax
0x323b: mov rbx,rsp
0x323e: call 0x3280
0x3243: lea rsi,[rip+0x218ed6]
0x324a: xor edi,edi
0x324c: mov rdx,rbx
0x324f: call 0x1ad0
0x3254: movzx eax,byte ptr [rip+0x218f57]
0x325b: test al,al
0x325d: je 0x3266
0x325f: xor edi,edi
0x3261: call 0x3160
0x3266: mov edi,0x2
0x326b: xor edx,edx
0x326d: mov rsi,rbx
0x3270: call 0x1ad0
0x3275: mov edi,0x1
0x327a: call 0x1ee0
0x327f: nop 
0x33a6: lea rdx,[rip+0x137b4]
0x33ad: mov rcx,rax
0x33b0: mov esi,r13d
0x33b3: xor edi,edi
0x33b5: xor eax,eax
0x33b7: call 0x1e60
0x33bc: jmp 0x32e0
0x33c1: call 0x1c20
0x33d9: mov rbx,rax
0x33dc: call 0x1b20
0x33e1: mov esi,dword ptr [rax]
0x33e3: lea rdx,[rip+0x13777]
0x33ea: mov rcx,rbx
0x33ed: xor edi,edi
0x33ef: xor eax,eax
0x33f1: call 0x1e60
0x33f6: mov qword ptr [rip+0x218dc7],0x0
0x3401: call 0x3220
0x3417: lea rsi,[rip+0x12b8b]
0x341e: mov rbx,rax
0x3421: mov edx,0x5
0x3426: xor edi,edi
0x3428: call 0x1bf0
0x342d: mov rcx,rbx
0x3430: mov rdx,rax
0x3433: xor esi,esi
0x3435: jmp 0x33ed
0x3488: lea rsi,[rip+0x12b1a]
0x348f: mov edx,0x5
0x3494: xor edi,edi
0x3496: mov rbp,rax
0x3499: call 0x1bf0
0x349e: mov rbx,rax
0x34a1: call 0x1b20
0x34a6: mov esi,dword ptr [rax]
0x34a8: mov rcx,rbp
0x34ab: mov rdx,rbx
0x34ae: xor edi,edi
0x34b0: xor eax,eax
0x34b2: call 0x1e60
0x34b7: mov qword ptr [rip+0x218d06],0x0
0x34c2: call 0x3220
0x34c7: nop word ptr [rax+rax]
0x3522: lea rdx,[rip+0x13638]
0x3529: mov rcx,rax
0x352c: mov esi,ebp
0x352e: xor edi,edi
0x3530: xor eax,eax
0x3532: call 0x1e60
0x3537: call 0x3220
0x353c: nop dword ptr [rax]
0x35c8: call 0x1c20
0x35e0: movzx eax,byte ptr [rip+0x218bcb]
0x35e7: push rbx
0x35e8: mov ebx,edi
0x35ea: test al,al
0x35ec: je 0x35f8
0x35ee: mov edi,0x1
0x35f3: call 0x3160
0x35f8: mov edi,ebx
0x35fa: xor esi,esi
0x35fc: call 0x1d50
0x3601: mov edi,ebx
0x3603: pop rbx
0x3604: jmp 0x1af0
0x3640: lea rsi,[rip+0x12ba9]
0x3647: xor edi,edi
0x3649: mov r12,qword ptr [rip+0x218be8]
0x3650: mov edx,0x5
0x3655: mov r13,rax
0x3658: call 0x1bf0
0x365d: mov rdi,qword ptr [rip+0x218a7c]
0x3664: mov rdx,rax
0x3667: mov r8,r13
0x366a: xor eax,eax
0x366c: mov rcx,r12
0x366f: mov esi,0x1
0x3674: call 0x1f00
0x3679: test rbx,rbx
0x367c: je 0x36bd
0x367e: mov rdi,rbx
0x3681: mov rsi,rbp
0x3684: call 0x4500
0x3689: lea rsi,[rip+0x1292e]
0x3690: mov edx,0x5
0x3695: xor edi,edi
0x3697: mov rbx,rax
0x369a: call 0x1bf0
0x369f: mov rdi,qword ptr [rip+0x218a3a]
0x36a6: mov rdx,rax
0x36a9: mov rcx,rbx
0x36ac: mov esi,0x1
0x36b1: xor eax,eax
0x36b3: call 0x1f00
0x36b8: call 0x3220
0x36bd: mov rsi,qword ptr [rip+0x218a1c]
0x36c4: mov edi,0xa
0x36c9: call 0x1cd0
0x36ce: jmp 0x36b8
0x383c: call 0x3220
0x3841: nop dword ptr [rax+rax]
0x3846: nop word ptr cs:[rax+rax]
0x38ad: movabsq rax,0xe38e38e38e38e2
0x38b7: cmp rcx,rax
0x38ba: ja 0x391d
0x38bc: mov rax,rcx
0x38bf: shr rax, 1
0x38c2: lea rcx,[rcx+rax+0x1]
0x3ae1: mov rcx,qword ptr [rbx]
0x3ae4: mov eax,0x2
0x3ae9: xor esi,esi
0x3aeb: mul rcx
0x3aee: jo 0x3c7b
0x3af4: test rax,rax
0x3af7: js 0x3c85
0x3afd: test rsi,rsi
0x3b00: jne 0x3c85
0x3b06: lea rsi,[rbx+0x30]
0x3b0a: lea rdi,[rbx+0x28]
0x3b0e: lea rbp,[rcx+rcx]
0x3b12: call 0x37c0
0x3b17: mov rdi,rbx
0x3b1a: call 0x1b00
0x3b1f: cmp rbp,0x1fff
0x3b26: ja 0x3970
0x3bab: call 0x3220
0x3c00: mov rdi,r12
0x3c03: mov rsi,rbp
0x3c06: call 0x6b10
0x3c0b: mov rdi,qword ptr [rip+0x218606]
0x3c12: mov r12,rax
0x3c15: call 0x1b00
0x3c1a: mov qword ptr [rip+0x2185f7],r12
0x3c21: mov qword ptr [rip+0x2185e8],rbp
0x3c28: jmp 0x3aaa
0x3c7b: mov esi,0x1
0x3c80: jmp 0x3af4
0x3c85: call 0x3810
0x3c8a: nop word ptr [rax+rax]
0x3e26: nop word ptr cs:[rax+rax]
0x3f04: nop 
0x3f06: nop word ptr cs:[rax+rax]
0x4330: mov qword ptr [rip+0x217ef9],rdi
0x4337: ret 
0x4340: mov byte ptr [rip+0x217ee1],dil
0x4347: ret 
0x4350: push rbp
0x4351: push rbx
0x4352: sub rsp,0x8
0x4356: mov rdi,qword ptr [rip+0x217d4b]
0x435d: call 0x15dd0
0x4362: test eax,eax
0x4364: je 0x437c
0x4366: call 0x1b20
0x436b: cmp byte ptr [rip+0x217eb6],0x0
0x4372: mov rbx,rax
0x4375: je 0x4393
0x4377: cmp dword ptr [rax],0x20
0x437a: jne 0x4393
0x437c: mov rdi,qword ptr [rip+0x217d5d]
0x4383: call 0x15dd0
0x4388: test eax,eax
0x438a: jne 0x43d2
0x438c: add rsp,0x8
0x4390: pop rbx
0x4391: pop rbp
0x4392: ret 
0x4393: lea rsi,[rip+0x127b7]
0x439a: xor edi,edi
0x439c: mov edx,0x5
0x43a1: call 0x1bf0
0x43a6: mov rdi,qword ptr [rip+0x217e83]
0x43ad: mov rbp,rax
0x43b0: test rdi,rdi
0x43b3: je 0x43dd
0x43b5: call 0x6060
0x43ba: mov esi,dword ptr [rbx]
0x43bc: lea rdx,[rip+0x1279a]
0x43c3: mov rcx,rax
0x43c6: mov r8,rbp
0x43c9: xor edi,edi
0x43cb: xor eax,eax
0x43cd: call 0x1e60
0x43d2: mov edi,dword ptr [rip+0x217c48]
0x43d8: call 0x1b50
0x43dd: mov esi,dword ptr [rbx]
0x43df: lea rdx,[rip+0x1277b]
0x43e6: mov rcx,rax
0x43e9: xor edi,edi
0x43eb: xor eax,eax
0x43ed: call 0x1e60
0x43f2: jmp 0x43d2
0x45ef: nop 
0x45f0: push rbp
0x45f1: push rbx
0x45f2: mov rbp,rdi
0x45f5: mov ebx,esi
0x45f7: sub rsp,0x8
0x45fb: call 0x15eb0
0x4600: movzx edx,byte ptr [rax]
0x4603: and edx,-0x21
0x4606: cmp dl,0x55
0x4609: je 0x4680
0x460b: cmp dl,0x47
0x460e: je 0x4630
0x4610: lea rax,[rip+0x125a4]
0x4617: lea rdx,[rip+0x1259f]
0x461e: cmp ebx,0x9
0x4621: cmovne rax,rdx
0x4625: add rsp,0x8
0x4629: pop rbx
0x462a: pop rbp
0x462b: ret 
0x4630: movzx edx,byte ptr [rax+0x1]
0x4634: and edx,-0x21
0x4637: cmp dl,0x42
0x463a: jne 0x4610
0x463c: cmp byte ptr [rax+0x2],0x31
0x4640: jne 0x4610
0x4642: cmp byte ptr [rax+0x3],0x38
0x4646: jne 0x4610
0x4648: cmp byte ptr [rax+0x4],0x30
0x464c: jne 0x4610
0x464e: cmp byte ptr [rax+0x5],0x33
0x4652: jne 0x4610
0x4654: cmp byte ptr [rax+0x6],0x30
0x4658: jne 0x4610
0x465a: cmp byte ptr [rax+0x7],0x0
0x465e: jne 0x4610
0x4660: cmp byte ptr [rbp],0x60
0x4664: lea rax,[rip+0x12549]
0x466b: lea rdx,[rip+0x12546]
0x4672: cmovne rax,rdx
0x4676: add rsp,0x8
0x467a: pop rbx
0x467b: pop rbp
0x467c: ret 
0x4680: movzx edx,byte ptr [rax+0x1]
0x4684: and edx,-0x21
0x4687: cmp dl,0x54
0x468a: jne 0x4610
0x468c: movzx edx,byte ptr [rax+0x2]
0x4690: and edx,-0x21
0x4693: cmp dl,0x46
0x4696: jne 0x4610
0x469c: cmp byte ptr [rax+0x3],0x2d
0x46a0: jne 0x4610
0x46a6: cmp byte ptr [rax+0x4],0x38
0x46aa: jne 0x4610
0x46b0: cmp byte ptr [rax+0x5],0x0
0x46b4: jne 0x4610
0x46ba: cmp byte ptr [rbp],0x60
0x46be: lea rax,[rip+0x124e7]
0x46c5: lea rdx,[rip+0x124e4]
0x46cc: cmovne rax,rdx
0x46d0: add rsp,0x8
0x46d4: pop rbx
0x46d5: pop rbp
0x46d6: ret 
0x47b3: xor r11d,r11d
0x47b6: mov rax,rbp
0x47b9: mov r8d,r12d
0x47bc: mov rbp,r11
0x47bf: mov r11,rax
0x47c2: nop word ptr [rax+rax]
0x47c8: cmp r11,rbp
0x47cb: setne r12b
0x47cf: cmp r11,-0x1
0x47d3: jne 0x47e2
0x47d5: mov rax,qword ptr [rsp+0x10]
0x47da: cmp byte ptr [rax+rbp],0x0
0x47de: setne r12b
0x47e2: test r12b,r12b
0x47e5: je 0x4e40
0x47eb: cmp dword ptr [rsp+0x8],0x2
0x47f0: mov rdi,qword ptr [rsp+0x10]
0x47f5: lea r9,[rdi+rbp]
0x47f9: setne al
0x47fc: and al,byte ptr [rsp+0xd]
0x4800: mov r10d,eax
0x4803: je 0x48b0
0x4809: mov rax,qword ptr [rsp+0x18]
0x480e: test rax,rax
0x4811: je 0x4c40
0x4817: cmp r11,-0x1
0x481b: lea rbx,[rbp+rax]
0x4820: jne 0x4850
0x4822: cmp rax,0x1
0x4826: jbe 0x4850
0x4828: mov byte ptr [rsp+0x38],r8b
0x482d: mov byte ptr [rsp+0x30],r10b
0x4832: mov qword ptr [rsp+0x28],r9
0x4837: call 0x1c10
0x483c: movzx r8d,byte ptr [rsp+0x38]
0x4842: movzx r10d,byte ptr [rsp+0x30]
0x4848: mov r11,rax
0x484b: mov r9,qword ptr [rsp+0x28]
0x4850: cmp rbx,r11
0x4853: mov byte ptr [rsp+0x28],r10b
0x4858: ja 0x4e10
0x485e: mov rdx,qword ptr [rsp+0x18]
0x4863: mov rsi,qword ptr [rsp+0x48]
0x4868: mov rdi,r9
0x486b: mov qword ptr [rsp+0x40],r11
0x4870: mov byte ptr [rsp+0x38],r8b
0x4875: mov qword ptr [rsp+0x30],r9
0x487a: call 0x1d00
0x487f: test eax,eax
0x4881: mov r9,qword ptr [rsp+0x30]
0x4886: movzx r8d,byte ptr [rsp+0x38]
0x488c: mov r11,qword ptr [rsp+0x40]
0x4891: jne 0x4e10
0x4897: cmp byte ptr [rsp+0xf],0x0
0x489c: movzx r10d,byte ptr [rsp+0x28]
0x48a2: jne 0x5825
0x48a8: nop dword ptr [rax+rax]
0x48b0: movzx ebx,byte ptr [r9]
0x48b4: cmp bl,0x7e
0x48b7: ja 0x4bd8
0x48bd: lea rcx,[rip+0x12388]
0x48c4: movzx edx,bl
0x48c7: movsxd rax,dword ptr [rcx+rdx*4]
0x48cb: add rax,rcx
0x48ce: jmp rax
0x4908: cmp byte ptr [rsp+0xd],0x1
0x490d: jne 0x4a22
0x4913: test dl,dl
0x4915: jne 0x4a22
0x491b: mov rsi,qword ptr [rsp+0x20]
0x4920: test rsi,rsi
0x4923: je 0x4939
0x4925: mov edx,ebx
0x4927: shr dl,0x5
0x492a: movzx edx,dl
0x492d: mov edx,dword ptr [rsi+rdx*4]
0x4930: btl edx,ebx
0x4933: jb 0x4a83
0x4939: test r10b,r10b
0x493c: jne 0x4a83
0x4942: xor eax,0x1
0x4945: add rbp,0x1
0x4949: and eax,r8d
0x494c: test al,al
0x494e: je 0x4970
0x4950: cmp r13,r15
0x4953: jbe 0x495a
0x4955: mov byte ptr [r14+r15],0x27
0x495a: lea rax,[r15+0x1]
0x495e: cmp r13,rax
0x4961: jbe 0x4969
0x4963: mov byte ptr [r14+r15+0x1],0x27
0x4969: add r15,0x2
0x496d: xor r8d,r8d
0x4970: cmp r15,r13
0x4973: jae 0x4979
0x4975: mov byte ptr [r14+r15],bl
0x4979: movzx edi,byte ptr [rsp+0xe]
0x497e: add r15,0x1
0x4982: mov eax,0x0
0x4987: test r12b,r12b
0x498a: cmove edi,eax
0x498d: mov byte ptr [rsp+0xe],dil
0x4992: jmp 0x47c8
0x4a22: cmp byte ptr [rsp+0xf],0x0
0x4a27: jne 0x491b
0x4a2d: jmp 0x4939
0x4a83: cmp dword ptr [rsp+0x8],0x2
0x4a88: sete dl
0x4a8b: cmp byte ptr [rsp+0xf],0x0
0x4a90: mov eax,edx
0x4a92: jne 0x52e8
0x4a98: mov eax,r8d
0x4a9b: xor eax,0x1
0x4a9e: and al,dl
0x4aa0: je 0x4ad1
0x4aa2: cmp r13,r15
0x4aa5: jbe 0x4aac
0x4aa7: mov byte ptr [r14+r15],0x27
0x4aac: lea rdx,[r15+0x1]
0x4ab0: cmp r13,rdx
0x4ab3: jbe 0x4abb
0x4ab5: mov byte ptr [r14+r15+0x1],0x24
0x4abb: lea rdx,[r15+0x2]
0x4abf: cmp r13,rdx
0x4ac2: jbe 0x4aca
0x4ac4: mov byte ptr [r14+r15+0x2],0x27
0x4aca: add r15,0x3
0x4ace: mov r8d,eax
0x4ad1: cmp r13,r15
0x4ad4: jbe 0x4adb
0x4ad6: mov byte ptr [r14+r15],0x5c
0x4adb: add r15,0x1
0x4adf: add rbp,0x1
0x4ae3: jmp 0x4970
0x4bd0: xor r10d,r10d
0x4bd3: nop dword ptr [rax+rax]
0x4bd8: cmp qword ptr [rsp+0x58],0x1
0x4bde: jne 0x4f88
0x4be4: mov qword ptr [rsp+0x38],r11
0x4be9: mov byte ptr [rsp+0x30],r8b
0x4bee: mov byte ptr [rsp+0x28],r10b
0x4bf3: call 0x1f50
0x4bf8: mov rcx,qword ptr [rax]
0x4bfb: movzx edx,bl
0x4bfe: movzx r10d,byte ptr [rsp+0x28]
0x4c04: movzx r8d,byte ptr [rsp+0x30]
0x4c0a: mov r11,qword ptr [rsp+0x38]
0x4c0f: mov edi,0x1
0x4c14: movzx eax,word ptr [rcx+rdx*2]
0x4c18: and ax,0x4000
0x4c1c: setne r12b
0x4c20: sete al
0x4c23: and al,byte ptr [rsp+0xd]
0x4c27: test al,al
0x4c29: jne 0x55c1
0x4c2f: cmp dword ptr [rsp+0x8],0x2
0x4c34: sete dl
0x4c37: jmp 0x4908
0x4c40: movzx ebx,byte ptr [r9]
0x4c44: cmp bl,0x7e
0x4c47: ja 0x4bd0
0x4c49: lea rcx,[rip+0x121f8]
0x4c50: movzx edx,bl
0x4c53: movsxd rax,dword ptr [rcx+rdx*4]
0x4c57: add rax,rcx
0x4c5a: jmp rax
0x4e10: xor r10d,r10d
0x4e13: jmp 0x48b0
0x4e40: cmp dword ptr [rsp+0x8],0x2
0x4e45: movzx ebx,byte ptr [rsp+0xf]
0x4e4a: mov r12d,r8d
0x4e4d: mov rbp,r11
0x4e50: sete dl
0x4e53: mov eax,ebx
0x4e55: test r15,r15
0x4e58: sete cl
0x4e5b: and eax,edx
0x4e5d: and al,cl
0x4e5f: jne 0x58c6
0x4e65: mov eax,ebx
0x4e67: xor eax,0x1
0x4e6a: and dl,al
0x4e6c: je 0x57dc
0x4e72: cmp byte ptr [rsp+0x7c],0x0
0x4e77: je 0x57da
0x4e7d: cmp byte ptr [rsp+0xe],0x0
0x4e82: jne 0x587d
0x4e88: test r13,r13
0x4e8b: sete al
0x4e8e: cmp qword ptr [rsp+0x50],0x0
0x4e94: setne dl
0x4e97: and al,dl
0x4e99: je 0x58bc
0x4e9f: mov r13,qword ptr [rsp+0x50]
0x4ea4: lea rbx,[rip+0x11d12]
0x4eab: mov byte ptr [r14],0x27
0x4eaf: mov dword ptr [rsp+0x8],0x2
0x4eb7: mov r15d,0x1
0x4ebd: mov qword ptr [rsp+0x18],0x1
0x4ec6: mov byte ptr [rsp+0xf],0x0
0x4ecb: mov qword ptr [rsp+0x48],rbx
0x4ed0: mov byte ptr [rsp+0x7c],al
0x4ed4: jmp 0x47b3
0x4f88: lea rax,[rsp+0xa0]
0x4f90: cmp r11,-0x1
0x4f94: mov qword ptr [rsp+0xa0],0x0
0x4fa0: mov qword ptr [rsp+0x28],rax
0x4fa5: jne 0x4fd4
0x4fa7: mov rdi,qword ptr [rsp+0x10]
0x4fac: mov byte ptr [rsp+0x40],r8b
0x4fb1: mov byte ptr [rsp+0x38],r10b
0x4fb6: mov qword ptr [rsp+0x30],r9
0x4fbb: call 0x1c10
0x4fc0: movzx r8d,byte ptr [rsp+0x40]
0x4fc6: movzx r10d,byte ptr [rsp+0x38]
0x4fcc: mov r11,rax
0x4fcf: mov r9,qword ptr [rsp+0x30]
0x4fd4: lea rax,[rsp+0x9c]
0x4fdc: xor ecx,ecx
0x4fde: mov byte ptr [rsp+0x7e],bl
0x4fe2: mov byte ptr [rsp+0x7d],r8b
0x4fe7: mov rbx,rcx
0x4fea: mov qword ptr [rsp+0x88],r9
0x4ff2: mov qword ptr [rsp+0x38],rax
0x4ff7: mov byte ptr [rsp+0x7f],r10b
0x4ffc: mov qword ptr [rsp+0x80],r15
0x5004: mov qword ptr [rsp+0x40],r14
0x5009: mov qword ptr [rsp+0x70],r13
0x500e: mov qword ptr [rsp+0x30],r11
0x5013: mov rax,qword ptr [rsp+0x10]
0x5018: lea r14,[rbp+rbx]
0x501d: mov rdx,qword ptr [rsp+0x30]
0x5022: mov rcx,qword ptr [rsp+0x28]
0x5027: mov rdi,qword ptr [rsp+0x38]
0x502c: lea r13,[rax+r14]
0x5030: sub rdx,r14
0x5033: mov rsi,r13
0x5036: call 0x7b30
0x503b: test rax,rax
0x503e: mov r15,rax
0x5041: je 0x5091
0x5043: cmp rax,-0x1
0x5047: je 0x5665
0x504d: cmp rax,-0x2
0x5051: je 0x55f1
0x5057: cmp dword ptr [rsp+0x8],0x2
0x505c: sete al
0x505f: and al,byte ptr [rsp+0xf]
0x5063: jne 0x5200
0x5069: mov edi,dword ptr [rsp+0x9c]
0x5070: call 0x1f20
0x5075: mov rdi,qword ptr [rsp+0x28]
0x507a: test eax,eax
0x507c: mov eax,0x0
0x5081: cmove r12d,eax
0x5085: add rbx,r15
0x5088: call 0x1f10
0x508d: test eax,eax
0x508f: je 0x5013
0x5091: mov edx,r12d
0x5094: mov rdi,rbx
0x5097: movzx r8d,byte ptr [rsp+0x7d]
0x509d: xor edx,0x1
0x50a0: movzx ebx,byte ptr [rsp+0x7e]
0x50a5: movzx r10d,byte ptr [rsp+0x7f]
0x50ab: and dl,byte ptr [rsp+0xd]
0x50af: mov r15,qword ptr [rsp+0x80]
0x50b7: mov r14,qword ptr [rsp+0x40]
0x50bc: mov r13,qword ptr [rsp+0x70]
0x50c1: mov r11,qword ptr [rsp+0x30]
0x50c6: cmp rdi,0x1
0x50ca: jbe 0x56cb
0x50d0: mov rcx,rdi
0x50d3: xor esi,esi
0x50d5: movzx r9d,byte ptr [rsp+0xf]
0x50db: add rcx,rbp
0x50de: mov rdi,qword ptr [rsp+0x10]
0x50e3: jmp 0x519e
0x50f0: cmp dword ptr [rsp+0x8],0x2
0x50f5: sete al
0x50f8: test r9b,r9b
0x50fb: jne 0x55b0
0x5101: mov esi,r8d
0x5104: xor esi,0x1
0x5107: and al,sil
0x510a: je 0x513b
0x510c: cmp r13,r15
0x510f: jbe 0x5116
0x5111: mov byte ptr [r14+r15],0x27
0x5116: lea rsi,[r15+0x1]
0x511a: cmp r13,rsi
0x511d: jbe 0x5125
0x511f: mov byte ptr [r14+r15+0x1],0x24
0x5125: lea rsi,[r15+0x2]
0x5129: cmp r13,rsi
0x512c: jbe 0x5134
0x512e: mov byte ptr [r14+r15+0x2],0x27
0x5134: add r15,0x3
0x5138: mov r8d,eax
0x513b: cmp r13,r15
0x513e: jbe 0x5145
0x5140: mov byte ptr [r14+r15],0x5c
0x5145: lea rax,[r15+0x1]
0x5149: cmp r13,rax
0x514c: jbe 0x515b
0x514e: mov eax,ebx
0x5150: shr al,0x6
0x5153: add eax,0x30
0x5156: mov byte ptr [r14+r15+0x1],al
0x515b: lea rax,[r15+0x2]
0x515f: cmp r13,rax
0x5162: jbe 0x5174
0x5164: mov eax,ebx
0x5166: shr al,0x3
0x5169: and eax,0x7
0x516c: add eax,0x30
0x516f: mov byte ptr [r14+r15+0x2],al
0x5174: and ebx,0x7
0x5177: add rbp,0x1
0x517b: add r15,0x3
0x517f: add ebx,0x30
0x5182: cmp rbp,rcx
0x5185: jae 0x4970
0x518b: mov esi,edx
0x518d: cmp r13,r15
0x5190: jbe 0x5196
0x5192: mov byte ptr [r14+r15],bl
0x5196: movzx ebx,byte ptr [rdi+rbp]
0x519a: add r15,0x1
0x519e: test dl,dl
0x51a0: jne 0x50f0
0x51a6: mov eax,esi
0x51a8: xor eax,0x1
0x51ab: and eax,r8d
0x51ae: test r10b,r10b
0x51b1: je 0x51c1
0x51b3: cmp r13,r15
0x51b6: jbe 0x51bd
0x51b8: mov byte ptr [r14+r15],0x5c
0x51bd: add r15,0x1
0x51c1: add rbp,0x1
0x51c5: cmp rbp,rcx
0x51c8: jae 0x494c
0x51ce: test al,al
0x51d0: je 0x55ce
0x51d6: cmp r13,r15
0x51d9: jbe 0x51e0
0x51db: mov byte ptr [r14+r15],0x27
0x51e0: lea rax,[r15+0x1]
0x51e4: cmp r13,rax
0x51e7: jbe 0x51ef
0x51e9: mov byte ptr [r14+r15+0x1],0x27
0x51ef: add r15,0x2
0x51f3: xor r10d,r10d
0x51f6: xor r8d,r8d
0x51f9: jmp 0x518d
0x5200: cmp r15,0x1
0x5204: je 0x5069
0x520a: mov rdi,qword ptr [rsp+0x10]
0x520f: lea rcx,[rdi+r15]
0x5213: lea rdx,[rdi+r14+0x1]
0x5218: lea r8,[rcx+r14]
0x521c: jmp 0x522d
0x5220: add rdx,0x1
0x5224: cmp r8,rdx
0x5227: je 0x5069
0x522d: movzx ecx,byte ptr [rdx]
0x5230: sub ecx,0x5b
0x5233: cmp cl,0x21
0x5236: ja 0x5220
0x5238: mov esi,0x1
0x523d: shl rsi,cl
0x5240: mov rcx,rsi
0x5243: movabsq rsi,0x20000002b
0x524d: test rcx,rsi
0x5250: je 0x5220
0x5252: mov r14,qword ptr [rsp+0x40]
0x5257: mov r13,qword ptr [rsp+0x70]
0x525c: mov rbp,qword ptr [rsp+0x30]
0x5261: mov dword ptr [rsp+0x8],0x2
0x5269: cmp byte ptr [rsp+0xd],0x0
0x526e: je 0x5280
0x5270: test al,al
0x5272: mov eax,0x4
0x5277: cmove eax,dword ptr [rsp+0x8]
0x527c: mov dword ptr [rsp+0x8],eax
0x5280: sub rsp,0x8
0x5284: mov rcx,rbp
0x5287: mov rsi,r13
0x528a: push qword ptr [rsp+0x68]
0x528e: push qword ptr [rsp+0x78]
0x5292: mov rdi,r14
0x5295: push 0x0
0x5297: mov r9d,dword ptr [rsp+0x98]
0x529f: mov r8d,dword ptr [rsp+0x28]
0x52a4: mov rdx,qword ptr [rsp+0x30]
0x52a9: and r9d,-0x3
0x52ad: call 0x46e0
0x52b2: add rsp,0x20
0x52b6: mov r15,rax
0x52b9: mov rbx,qword ptr [rsp+0xa8]
0x52c1: xor rbx,qword ptr fs:0x28
0x52ca: mov rax,r15
0x52cd: jne 0x58d3
0x52d3: add rsp,0xb8
0x52da: pop rbx
0x52db: pop rbp
0x52dc: pop r12
0x52de: pop r13
0x52e0: pop r14
0x52e2: pop r15
0x52e4: ret 
0x52e8: mov rbp,r11
0x52eb: jmp 0x5269
0x5351: test r13,r13
0x5354: jne 0x58ea
0x535a: lea rax,[rip+0x1185c]
0x5361: mov qword ptr [rsp+0x50],0x0
0x536a: mov byte ptr [rsp+0xe],0x1
0x536f: mov byte ptr [rsp+0x7c],0x0
0x5374: xor r12d,r12d
0x5377: mov byte ptr [rsp+0xf],0x0
0x537c: mov qword ptr [rsp+0x18],0x1
0x5385: mov qword ptr [rsp+0x48],rax
0x538a: mov r15d,0x1
0x5390: mov dword ptr [rsp+0x8],0x2
0x5398: jmp 0x47b3
0x55b0: movzx ebx,byte ptr [rsp+0xf]
0x55b5: mov rbp,r11
0x55b8: mov byte ptr [rsp+0xd],bl
0x55bc: jmp 0x5269
0x55c1: movzx edx,byte ptr [rsp+0xd]
0x55c6: xor r12d,r12d
0x55c9: jmp 0x50d0
0x55ce: xor r10d,r10d
0x55d1: jmp 0x518d
0x55f1: mov r11,qword ptr [rsp+0x30]
0x55f6: mov rsi,r14
0x55f9: mov rcx,r13
0x55fc: mov rax,rbx
0x55ff: mov rdi,rbx
0x5602: movzx r8d,byte ptr [rsp+0x7d]
0x5608: movzx ebx,byte ptr [rsp+0x7e]
0x560d: mov r9,qword ptr [rsp+0x88]
0x5615: cmp rsi,r11
0x5618: movzx r10d,byte ptr [rsp+0x7f]
0x561e: mov r15,qword ptr [rsp+0x80]
0x5626: mov r14,qword ptr [rsp+0x40]
0x562b: mov r13,qword ptr [rsp+0x70]
0x5630: jae 0x5658
0x5632: cmp byte ptr [rcx],0x0
0x5635: jne 0x5647
0x5637: jmp 0x5658
0x5640: cmp byte ptr [r9+rax],0x0
0x5645: je 0x5655
0x5647: add rax,0x1
0x564b: lea rdx,[rbp+rax]
0x5650: cmp r11,rdx
0x5653: ja 0x5640
0x5655: mov rdi,rax
0x5658: movzx edx,byte ptr [rsp+0xd]
0x565d: xor r12d,r12d
0x5660: jmp 0x50c6
0x5665: mov rdi,rbx
0x5668: movzx r8d,byte ptr [rsp+0x7d]
0x566e: movzx ebx,byte ptr [rsp+0x7e]
0x5673: movzx r10d,byte ptr [rsp+0x7f]
0x5679: mov r15,qword ptr [rsp+0x80]
0x5681: xor r12d,r12d
0x5684: mov r14,qword ptr [rsp+0x40]
0x5689: mov r13,qword ptr [rsp+0x70]
0x568e: mov r11,qword ptr [rsp+0x30]
0x5693: movzx edx,byte ptr [rsp+0xd]
0x5698: jmp 0x50c6
0x56cb: mov eax,edx
0x56cd: jmp 0x4c27
0x57da: mov eax,edx
0x57dc: mov rbx,qword ptr [rsp+0x48]
0x57e1: test rbx,rbx
0x57e4: je 0x5812
0x57e6: test al,al
0x57e8: je 0x5812
0x57ea: movzx ecx,byte ptr [rbx]
0x57ed: mov rax,rbx
0x57f0: test cl,cl
0x57f2: je 0x5812
0x57f4: mov rdx,r15
0x57f7: sub rax,r15
0x57fa: cmp r13,rdx
0x57fd: jbe 0x5803
0x57ff: mov byte ptr [r14+rdx],cl
0x5803: add rdx,0x1
0x5807: movzx ecx,byte ptr [rax+rdx]
0x580b: test cl,cl
0x580d: jne 0x57fa
0x580f: mov r15,rdx
0x5812: cmp r13,r15
0x5815: jbe 0x52b9
0x581b: mov byte ptr [r14+r15],0x0
0x5820: jmp 0x52b9
0x5825: cmp dword ptr [rsp+0x8],0x2
0x582a: movzx ebx,byte ptr [rsp+0xf]
0x582f: mov rbp,r11
0x5832: sete al
0x5835: mov byte ptr [rsp+0xd],bl
0x5839: jmp 0x5269
0x587d: sub rsp,0x8
0x5881: mov r8d,0x5
0x5887: mov rcx,r11
0x588a: push qword ptr [rsp+0x68]
0x588e: push qword ptr [rsp+0x78]
0x5892: mov rdi,r14
0x5895: push qword ptr [rsp+0x38]
0x5899: mov r9d,dword ptr [rsp+0x98]
0x58a1: mov rdx,qword ptr [rsp+0x30]
0x58a6: mov rsi,qword ptr [rsp+0x70]
0x58ab: call 0x46e0
0x58b0: add rsp,0x20
0x58b4: mov r15,rax
0x58b7: jmp 0x52b9
0x58bc: movzx eax,byte ptr [rsp+0x7c]
0x58c1: jmp 0x57dc
0x58c6: mov dword ptr [rsp+0x8],0x2
0x58ce: jmp 0x5269
0x58d3: call 0x1c20
0x58d8: mov byte ptr [rsp+0xd],0x0
0x58dd: jmp 0x5351
0x58ea: mov byte ptr [rsp+0xe],0x1
0x58ef: xor eax,eax
0x58f1: xor r12d,r12d
0x58f4: mov qword ptr [rsp+0x50],0x0
0x58fd: jmp 0x4ea4
0x5914: nop 
0x5916: nop word ptr cs:[rax+rax]
0x5a0c: add rsp,0x20
0x5a10: mov r11,qword ptr [rsp+0x10]
0x5a15: cmp r11,rax
0x5a18: ja 0x5a81
0x5a1a: lea rsi,[rax+0x1]
0x5a1e: lea rax,[rip+0x21681b]
0x5a25: cmp r12,rax
0x5a28: mov qword ptr [rbx],rsi
0x5a2b: je 0x5a3f
0x5a2d: mov rdi,r12
0x5a30: mov qword ptr [rsp+0x10],rsi
0x5a35: call 0x1b00
0x5a3a: mov rsi,qword ptr [rsp+0x10]
0x5a3f: mov rdi,rsi
0x5a42: mov qword ptr [rsp+0x10],rsi
0x5a47: call 0x6910
0x5a4c: sub rsp,0x8
0x5a50: mov qword ptr [rbx+0x8],rax
0x5a54: mov r8d,dword ptr [rbp]
0x5a58: push qword ptr [rbp+0x30]
0x5a5b: push qword ptr [rbp+0x28]
0x5a5e: mov rcx,r14
0x5a61: push r15
0x5a63: mov r9d,dword ptr [rsp+0x3c]
0x5a68: mov rdi,rax
0x5a6b: mov rdx,qword ptr [rsp+0x28]
0x5a70: mov rsi,qword ptr [rsp+0x30]
0x5a75: mov r12,rax
0x5a78: call 0x46e0
0x5a7d: add rsp,0x20
0x5a81: mov eax,dword ptr [rsp+0x18]
0x5a85: mov dword ptr [r13],eax
0x5a89: add rsp,0x28
0x5a8d: mov rax,r12
0x5a90: pop rbx
0x5a91: pop rbp
0x5a92: pop r12
0x5a94: pop r13
0x5a96: pop r14
0x5a98: pop r15
0x5a9a: ret 
0x5ac1: call 0x1b10
0x5ac6: call 0x3810
0x5acb: nop dword ptr [rax+rax]
0x5ad0: push r12
0x5ad2: push rbp
0x5ad3: push rbx
0x5ad4: mov rbx,rdi
0x5ad7: call 0x1b20
0x5adc: mov r12d,dword ptr [rax]
0x5adf: mov rbp,rax
0x5ae2: lea rax,[rip+0x216857]
0x5ae9: test rbx,rbx
0x5aec: mov esi,0x38
0x5af1: cmove rbx,rax
0x5af5: mov rdi,rbx
0x5af8: call 0x6b10
0x5afd: mov dword ptr [rbp],r12d
0x5b01: pop rbx
0x5b02: pop rbp
0x5b03: pop r12
0x5b05: ret 
0x5b10: lea rax,[rip+0x216829]
0x5b17: test rdi,rdi
0x5b1a: cmove rdi,rax
0x5b1e: mov eax,dword ptr [rdi]
0x5b20: ret 
0x5b30: lea rax,[rip+0x216809]
0x5b37: test rdi,rdi
0x5b3a: cmove rdi,rax
0x5b3e: mov dword ptr [rdi],esi
0x5b40: ret 
0x5b50: lea rax,[rip+0x2167e9]
0x5b57: test rdi,rdi
0x5b5a: mov ecx,esi
0x5b5c: cmove rdi,rax
0x5b60: mov eax,esi
0x5b62: and ecx,0x1f
0x5b65: shr al,0x5
0x5b68: movzx eax,al
0x5b6b: lea rdi,[rdi+rax*4+0x8]
0x5b70: mov esi,dword ptr [rdi]
0x5b72: mov eax,esi
0x5b74: shr eax,cl
0x5b76: xor edx,eax
0x5b78: and eax,0x1
0x5b7b: and edx,0x1
0x5b7e: shl edx,cl
0x5b80: xor edx,esi
0x5b82: mov dword ptr [rdi],edx
0x5b84: ret 
0x5b90: lea rax,[rip+0x2167a9]
0x5b97: test rdi,rdi
0x5b9a: cmove rdi,rax
0x5b9e: mov eax,dword ptr [rdi+0x4]
0x5ba1: mov dword ptr [rdi+0x4],esi
0x5ba4: ret 
0x5bb0: lea rax,[rip+0x216789]
0x5bb7: test rdi,rdi
0x5bba: cmove rdi,rax
0x5bbe: test rsi,rsi
0x5bc1: mov dword ptr [rdi],0xa
0x5bc7: je 0x5bd7
0x5bc9: test rdx,rdx
0x5bcc: je 0x5bd7
0x5bce: mov qword ptr [rdi+0x28],rsi
0x5bd2: mov qword ptr [rdi+0x30],rdx
0x5bd6: ret 
0x5bd7: sub rsp,0x8
0x5bdb: call 0x1b10
0x5be0: push r15
0x5be2: push r14
0x5be4: lea rax,[rip+0x216755]
0x5beb: push r13
0x5bed: push r12
0x5bef: mov r13,rdi
0x5bf2: push rbp
0x5bf3: push rbx
0x5bf4: mov rbx,r8
0x5bf7: mov r14,rsi
0x5bfa: mov r15,rdx
0x5bfd: sub rsp,0x18
0x5c01: test r8,r8
0x5c04: cmove rbx,rax
0x5c08: mov qword ptr [rsp+0x8],rcx
0x5c0d: call 0x1b20
0x5c12: mov r12d,dword ptr [rax]
0x5c15: mov rbp,rax
0x5c18: lea rax,[rbx+0x8]
0x5c1c: sub rsp,0x8
0x5c20: mov r9d,dword ptr [rbx+0x4]
0x5c24: push qword ptr [rbx+0x30]
0x5c27: mov r8d,dword ptr [rbx]
0x5c2a: push qword ptr [rbx+0x28]
0x5c2d: mov rdx,r15
0x5c30: push rax
0x5c31: mov rcx,qword ptr [rsp+0x28]
0x5c36: mov rsi,r14
0x5c39: mov rdi,r13
0x5c3c: call 0x46e0
0x5c41: mov dword ptr [rbp],r12d
0x5c45: add rsp,0x38
0x5c49: pop rbx
0x5c4a: pop rbp
0x5c4b: pop r12
0x5c4d: pop r13
0x5c4f: pop r14
0x5c51: pop r15
0x5c53: ret 
0x5c60: push r15
0x5c62: push r14
0x5c64: lea rax,[rip+0x2166d5]
0x5c6b: push r13
0x5c6d: push r12
0x5c6f: mov r12,rdx
0x5c72: push rbp
0x5c73: push rbx
0x5c74: mov rbx,rcx
0x5c77: mov r14,rdi
0x5c7a: mov r15,rsi
0x5c7d: sub rsp,0x38
0x5c81: test rcx,rcx
0x5c84: cmove rbx,rax
0x5c88: xor ebp,ebp
0x5c8a: call 0x1b20
0x5c8f: test r12,r12
0x5c92: mov r13,rax
0x5c95: mov eax,dword ptr [rax]
0x5c97: sete bpl
0x5c9b: or ebp,dword ptr [rbx+0x4]
0x5c9e: lea r10,[rbx+0x8]
0x5ca2: sub rsp,0x8
0x5ca6: mov r8d,dword ptr [rbx]
0x5ca9: mov rcx,r15
0x5cac: mov dword ptr [rsp+0x14],eax
0x5cb0: push qword ptr [rbx+0x30]
0x5cb3: mov rdx,r14
0x5cb6: push qword ptr [rbx+0x28]
0x5cb9: push r10
0x5cbb: xor esi,esi
0x5cbd: mov r9d,ebp
0x5cc0: xor edi,edi
0x5cc2: mov qword ptr [rsp+0x40],r10
0x5cc7: call 0x46e0
0x5ccc: lea rsi,[rax+0x1]
0x5cd0: mov qword ptr [rsp+0x48],rax
0x5cd5: add rsp,0x20
0x5cd9: mov rdi,rsi
0x5cdc: mov qword ptr [rsp+0x18],rsi
0x5ce1: call 0x6910
0x5ce6: mov qword ptr [rsp+0x10],rax
0x5ceb: sub rsp,0x8
0x5cef: push qword ptr [rbx+0x30]
0x5cf2: push qword ptr [rbx+0x28]
0x5cf5: mov r10,qword ptr [rsp+0x38]
0x5cfa: mov r9d,ebp
0x5cfd: mov r8d,dword ptr [rbx]
0x5d00: mov rcx,r15
0x5d03: mov rdx,r14
0x5d06: mov rdi,rax
0x5d09: push r10
0x5d0b: mov rsi,qword ptr [rsp+0x38]
0x5d10: call 0x46e0
0x5d15: mov eax,dword ptr [rsp+0x2c]
0x5d19: add rsp,0x20
0x5d1d: test r12,r12
0x5d20: mov dword ptr [r13],eax
0x5d24: je 0x5d2f
0x5d26: mov r11,qword ptr [rsp+0x28]
0x5d2b: mov qword ptr [r12],r11
0x5d2f: mov rax,qword ptr [rsp+0x10]
0x5d34: add rsp,0x38
0x5d38: pop rbx
0x5d39: pop rbp
0x5d3a: pop r12
0x5d3c: pop r13
0x5d3e: pop r14
0x5d40: pop r15
0x5d42: ret 
0x5d50: mov rcx,rdx
0x5d53: xor edx,edx
0x5d55: jmp 0x5c60
0x5d60: mov eax,dword ptr [rip+0x216312]
0x5d66: push r12
0x5d68: mov r12,qword ptr [rip+0x216311]
0x5d6f: push rbp
0x5d70: push rbx
0x5d71: cmp eax,0x1
0x5d74: jle 0x5da1
0x5d76: sub eax,0x2
0x5d79: lea rbx,[r12+0x18]
0x5d7e: shl rax,0x4
0x5d82: lea rbp,[r12+rax+0x28]
0x5d87: nop word ptr [rax+rax]
0x5d90: mov rdi,qword ptr [rbx]
0x5d93: add rbx,0x10
0x5d97: call 0x1b00
0x5d9c: cmp rbx,rbp
0x5d9f: jne 0x5d90
0x5da1: mov rdi,qword ptr [r12+0x8]
0x5da6: lea rbx,[rip+0x216493]
0x5dad: cmp rdi,rbx
0x5db0: je 0x5dc9
0x5db2: call 0x1b00
0x5db7: mov qword ptr [rip+0x2162ce],0x100
0x5dc2: mov qword ptr [rip+0x2162cf],rbx
0x5dc9: lea rbx,[rip+0x2162c0]
0x5dd0: cmp r12,rbx
0x5dd3: je 0x5de4
0x5dd5: mov rdi,r12
0x5dd8: call 0x1b00
0x5ddd: mov qword ptr [rip+0x21629c],rbx
0x5de4: pop rbx
0x5de5: mov dword ptr [rip+0x216289],0x1
0x5def: pop rbp
0x5df0: pop r12
0x5df2: ret 
0x5e00: lea rcx,[rip+0x216539]
0x5e07: mov rdx,-0x1
0x5e0e: jmp 0x5920
0x5e20: lea rcx,[rip+0x216519]
0x5e27: jmp 0x5920
0x5e30: lea rcx,[rip+0x216509]
0x5e37: mov rsi,rdi
0x5e3a: mov rdx,-0x1
0x5e41: xor edi,edi
0x5e43: jmp 0x5920
0x5e50: lea rcx,[rip+0x2164e9]
0x5e57: mov rdx,rsi
0x5e5a: mov rsi,rdi
0x5e5d: xor edi,edi
0x5e5f: jmp 0x5920
0x5edf: mov rcx,qword ptr [rsp+0x38]
0x5ee4: xor rcx,qword ptr fs:0x28
0x5eed: jne 0x5ef9
0x5eef: add rsp,0x48
0x5ef3: ret 
0x5ef4: call 0x1b10
0x5ef9: call 0x1c20
0x5efe: nop 
0x5f00: sub rsp,0x48
0x5f04: mov rax,rdx
0x5f07: mov rdx,rcx
0x5f0a: mov rcx,qword ptr fs:0x28
0x5f13: mov qword ptr [rsp+0x38],rcx
0x5f18: xor ecx,ecx
0x5f1a: cmp esi,0xa
0x5f1d: je 0x5f80
0x5f1f: mov dword ptr [rsp],esi
0x5f22: mov rcx,rsp
0x5f25: mov rsi,rax
0x5f28: mov qword ptr [rsp+0x4],0x0
0x5f31: mov qword ptr [rsp+0xc],0x0
0x5f3a: mov qword ptr [rsp+0x14],0x0
0x5f43: mov qword ptr [rsp+0x1c],0x0
0x5f4c: mov qword ptr [rsp+0x24],0x0
0x5f55: mov qword ptr [rsp+0x2c],0x0
0x5f5e: mov dword ptr [rsp+0x34],0x0
0x5f66: call 0x5920
0x5f6b: mov rdx,qword ptr [rsp+0x38]
0x5f70: xor rdx,qword ptr fs:0x28
0x5f79: jne 0x5f85
0x5f7b: add rsp,0x48
0x5f7f: ret 
0x5f80: call 0x1b10
0x5f85: call 0x1c20
0x5f8a: nop word ptr [rax+rax]
0x5fa0: mov rcx,rdx
0x5fa3: mov rdx,rsi
0x5fa6: mov esi,edi
0x5fa8: xor edi,edi
0x5faa: jmp 0x5f00
0x5fb0: sub rsp,0x48
0x5fb4: mov ecx,edx
0x5fb6: mov rax,qword ptr fs:0x28
0x5fbf: mov qword ptr [rsp+0x38],rax
0x5fc4: xor eax,eax
0x5fc6: mov rax,qword ptr [rip+0x2163a3]
0x5fcd: mov r8,rsp
0x5fd0: and ecx,0x1f
0x5fd3: movdqa xmm0,[rip+0x216365]
0x5fdb: mov qword ptr [rsp+0x30],rax
0x5fe0: mov eax,edx
0x5fe2: movaps [rsp],xmm0
0x5fe6: shr al,0x5
0x5fe9: movzx eax,al
0x5fec: lea r9,[r8+rax*4+0x8]
0x5ff1: movdqa xmm0,[rip+0x216357]
0x5ff9: movaps [rsp+0x10],xmm0
0x5ffe: movdqa xmm0,[rip+0x21635a]
0x6006: movaps [rsp+0x20],xmm0
0x600b: mov edx,dword ptr [r9]
0x600e: mov eax,edx
0x6010: shr eax,cl
0x6012: not eax
0x6014: and eax,0x1
0x6017: shl eax,cl
0x6019: mov rcx,r8
0x601c: xor eax,edx
0x601e: mov rdx,rsi
0x6021: mov rsi,rdi
0x6024: mov dword ptr [r9],eax
0x6027: xor edi,edi
0x6029: call 0x5920
0x602e: mov rsi,qword ptr [rsp+0x38]
0x6033: xor rsi,qword ptr fs:0x28
0x603c: jne 0x6043
0x603e: add rsp,0x48
0x6042: ret 
0x6043: call 0x1c20
0x6048: nop dword ptr [rax+rax]
0x6050: movsx edx,sil
0x6054: mov rsi,-0x1
0x605b: jmp 0x5fb0
0x6060: mov edx,0x3a
0x6065: mov rsi,-0x1
0x606c: jmp 0x5fb0
0x6080: mov edx,0x3a
0x6085: jmp 0x5fb0
0x60ff: mov rcx,qword ptr [rsp+0x38]
0x6104: xor rcx,qword ptr fs:0x28
0x610d: jne 0x6119
0x610f: add rsp,0x48
0x6113: ret 
0x6114: call 0x1b10
0x6119: call 0x1c20
0x611e: nop 
0x6120: sub rsp,0x48
0x6124: mov r9,rcx
0x6127: mov rcx,qword ptr [rip+0x216242]
0x612e: movdqa xmm0,[rip+0x21620a]
0x6136: mov rax,qword ptr fs:0x28
0x613f: mov qword ptr [rsp+0x38],rax
0x6144: xor eax,eax
0x6146: movaps [rsp],xmm0
0x614a: test rsi,rsi
0x614d: mov qword ptr [rsp+0x30],rcx
0x6152: mov dword ptr [rsp],0xa
0x6159: movdqa xmm0,[rip+0x2161ef]
0x6161: movaps [rsp+0x10],xmm0
0x6166: movdqa xmm0,[rip+0x2161f2]
0x616e: movaps [rsp+0x20],xmm0
0x6173: je 0x61a7
0x6175: test rdx,rdx
0x6178: je 0x61a7
0x617a: mov qword ptr [rsp+0x28],rsi
0x617f: mov qword ptr [rsp+0x30],rdx
0x6184: mov rcx,rsp
0x6187: mov rdx,r8
0x618a: mov rsi,r9
0x618d: call 0x5920
0x6192: mov rdi,qword ptr [rsp+0x38]
0x6197: xor rdi,qword ptr fs:0x28
0x61a0: jne 0x61ac
0x61a2: add rsp,0x48
0x61a6: ret 
0x61a7: call 0x1b10
0x61ac: call 0x1c20
0x61b1: nop dword ptr [rax+rax]
0x61b6: nop word ptr cs:[rax+rax]
0x61c0: mov r8,-0x1
0x61c7: jmp 0x6120
0x61d0: mov rcx,rdx
0x61d3: mov r8,-0x1
0x61da: mov rdx,rsi
0x61dd: mov rsi,rdi
0x61e0: xor edi,edi
0x61e2: jmp 0x6120
0x61f0: mov r8,rcx
0x61f3: mov rcx,rdx
0x61f6: mov rdx,rsi
0x61f9: mov rsi,rdi
0x61fc: xor edi,edi
0x61fe: jmp 0x6120
0x6210: lea rcx,[rip+0x215e29]
0x6217: jmp 0x5920
0x6220: lea rcx,[rip+0x215e19]
0x6227: mov rdx,rsi
0x622a: mov rsi,rdi
0x622d: xor edi,edi
0x622f: jmp 0x5920
0x6240: lea rcx,[rip+0x215df9]
0x6247: mov rdx,-0x1
0x624e: jmp 0x5920
0x6428: mov r8,rcx
0x642b: mov rcx,rdx
0x642e: lea rdx,[rip+0x10c5f]
0x6435: mov esi,0x1
0x643a: xor eax,eax
0x643c: call 0x1f00
0x6441: jmp 0x632c
0x663d: push r12
0x663f: push r15
0x6641: push r14
0x6643: mov r8,qword ptr [rsp+0x20]
0x6648: mov rcx,rbx
0x664b: mov rdx,rax
0x664e: mov rdi,rbp
0x6651: mov esi,0x1
0x6656: xor eax,eax
0x6658: call 0x1f00
0x665d: add rsp,0x20
0x6661: add rsp,0x28
0x6665: pop rbx
0x6666: pop rbp
0x6667: pop r12
0x6669: pop r13
0x666b: pop r14
0x666d: pop r15
0x666f: ret 
0x66a9: push r12
0x66ab: push r15
0x66ad: push r14
0x66af: mov r9,qword ptr [rsp+0x28]
0x66b4: jmp 0x6643
0x6710: xor r9d,r9d
0x6713: cmp qword ptr [r8],0x0
0x6717: je 0x672b
0x6719: nop dword ptr [rax]
0x6720: add r9,0x1
0x6724: cmp qword ptr [r8+r9*8],0x0
0x6729: jne 0x6720
0x672b: jmp 0x62f0
0x6730: sub rsp,0x68
0x6734: mov r10,r8
0x6737: xor r9d,r9d
0x673a: mov rax,qword ptr fs:0x28
0x6743: mov qword ptr [rsp+0x58],rax
0x6748: xor eax,eax
0x674a: mov r8,rsp
0x674d: nop dword ptr [rax]
0x6750: mov eax,dword ptr [r10]
0x6753: cmp eax,0x2f
0x6756: ja 0x679a
0x6758: mov r11d,eax
0x675b: add r11,qword ptr [r10+0x10]
0x675f: add eax,0x8
0x6762: mov dword ptr [r10],eax
0x6765: mov rax,qword ptr [r11]
0x6768: test rax,rax
0x676b: mov qword ptr [r8+r9*8],rax
0x676f: je 0x677b
0x6771: add r9,0x1
0x6775: cmp r9,0xa
0x6779: jne 0x6750
0x677b: call 0x62f0
0x6780: mov rax,qword ptr [rsp+0x58]
0x6785: xor rax,qword ptr fs:0x28
0x678e: jne 0x6795
0x6790: add rsp,0x68
0x6794: ret 
0x6795: call 0x1c20
0x679a: mov r11,qword ptr [r10+0x8]
0x679e: lea rax,[r11+0x8]
0x67a2: mov qword ptr [r10+0x8],rax
0x67a6: jmp 0x6765
0x6870: call 0x1c20
0x687c: mov rax,rbx
0x687f: add rbx,0x8
0x6883: jmp 0x6836
0x6890: push rbx
0x6891: lea rsi,[rip+0x1084a]
0x6898: mov edx,0x5
0x689d: xor edi,edi
0x689f: call 0x1bf0
0x68a4: lea rdx,[rip+0x1084c]
0x68ab: mov rsi,rax
0x68ae: mov edi,0x1
0x68b3: xor eax,eax
0x68b5: call 0x1e30
0x68ba: lea rsi,[rip+0x1084c]
0x68c1: mov edx,0x5
0x68c6: xor edi,edi
0x68c8: call 0x1bf0
0x68cd: lea rcx,[rip+0xfeac]
0x68d4: lea rdx,[rip+0xf7bb]
0x68db: mov rsi,rax
0x68de: mov edi,0x1
0x68e3: xor eax,eax
0x68e5: call 0x1e30
0x68ea: mov rbx,qword ptr [rip+0x2157b7]
0x68f1: lea rsi,[rip+0x10a48]
0x68f8: xor edi,edi
0x68fa: mov edx,0x5
0x68ff: call 0x1bf0
0x6904: mov rsi,rbx
0x6907: mov rdi,rax
0x690a: pop rbx
0x690b: jmp 0x1d20
0x692a: nop word ptr [rax+rax]
0x6930: mov rax,rdi
0x6933: mul rsi
0x6936: mov rdi,rax
0x6939: seto al
0x693c: test rdi,rdi
0x693f: js 0x694b
0x6941: movzx eax,al
0x6944: test rax,rax
0x6947: jne 0x694b
0x6949: jmp 0x6910
0x694b: sub rsp,0x8
0x694f: call 0x3810
0x6954: nop 
0x6956: nop word ptr cs:[rax+rax]
0x6960: jmp 0x6910
0x69a6: nop word ptr cs:[rax+rax]
0x69b0: mov rax,rsi
0x69b3: mul rdx
0x69b6: mov rsi,rax
0x69b9: seto al
0x69bc: test rsi,rsi
0x69bf: js 0x69cb
0x69c1: movzx eax,al
0x69c4: test rax,rax
0x69c7: jne 0x69cb
0x69c9: jmp 0x6970
0x69cb: sub rsp,0x8
0x69cf: call 0x3810
0x69d4: nop 
0x69d6: nop word ptr cs:[rax+rax]
0x69e0: test rdi,rdi
0x69e3: mov r9,rdx
0x69e6: mov rcx,qword ptr [rsi]
0x69e9: je 0x6a20
0x69eb: xor edx,edx
0x69ed: movabsq rax,0x5555555555555554
0x69f7: div r9
0x69fa: cmp rax,rcx
0x69fd: jbe 0x6a3b
0x69ff: mov rax,rcx
0x6a02: shr rax, 1
0x6a05: lea rcx,[rax+rcx+0x1]
0x6a0a: mov qword ptr [rsi],rcx
0x6a0d: imul rcx,r9
0x6a11: mov rsi,rcx
0x6a14: jmp 0x6970
0x6a20: test rcx,rcx
0x6a23: je 0x6a48
0x6a25: mov rax,rcx
0x6a28: mul r9
0x6a2b: seto dl
0x6a2e: test rax,rax
0x6a31: movzx edx,dl
0x6a34: js 0x6a3b
0x6a36: test rdx,rdx
0x6a39: je 0x6a0a
0x6a3b: sub rsp,0x8
0x6a3f: call 0x3810
0x6a44: nop dword ptr [rax]
0x6a48: xor edx,edx
0x6a4a: mov eax,0x80
0x6a4f: xor r8d,r8d
0x6a52: div r9
0x6a55: test rax,rax
0x6a58: sete r8b
0x6a5c: lea rcx,[r8+rax]
0x6a60: jmp 0x6a25
0x6a70: test rdi,rdi
0x6a73: mov rax,qword ptr [rsi]
0x6a76: je 0x6aa0
0x6a78: movabsq rdx,0x5555555555555553
0x6a82: cmp rax,rdx
0x6a85: ja 0x6ab1
0x6a87: mov rdx,rax
0x6a8a: shr rdx, 1
0x6a8d: lea rax,[rdx+rax+0x1]
0x6a92: mov qword ptr [rsi],rax
0x6a95: mov rsi,rax
0x6a98: jmp 0x6970
0x6aa0: test rax,rax
0x6aa3: mov edx,0x80
0x6aa8: cmove rax,rdx
0x6aac: test rax,rax
0x6aaf: jns 0x6a92
0x6ab1: sub rsp,0x8
0x6ab5: call 0x3810
0x6aba: nop word ptr [rax+rax]
0x6ac0: push rbx
0x6ac1: mov rbx,rdi
0x6ac4: call 0x6910
0x6ac9: mov rdx,rbx
0x6acc: xor esi,esi
0x6ace: mov rdi,rax
0x6ad1: pop rbx
0x6ad2: jmp 0x1cb0
0x6ae0: mov rax,rdi
0x6ae3: sub rsp,0x8
0x6ae7: mul rsi
0x6aea: seto dl
0x6aed: test rax,rax
0x6af0: js 0x6b09
0x6af2: movzx edx,dl
0x6af5: test rdx,rdx
0x6af8: jne 0x6b09
0x6afa: call 0x1d30
0x6aff: test rax,rax
0x6b02: je 0x6b09
0x6b04: add rsp,0x8
0x6b08: ret 
0x6b09: call 0x3810
0x6b0e: nop 
0x6b10: push rbp
0x6b11: push rbx
0x6b12: mov rbp,rdi
0x6b15: mov rdi,rsi
0x6b18: mov rbx,rsi
0x6b1b: sub rsp,0x8
0x6b1f: call 0x6910
0x6b24: add rsp,0x8
0x6b28: mov rdx,rbx
0x6b2b: mov rsi,rbp
0x6b2e: pop rbx
0x6b2f: pop rbp
0x6b30: mov rdi,rax
0x6b33: jmp 0x1d70
0x6b40: push rbx
0x6b41: mov rbx,rdi
0x6b44: call 0x1c10
0x6b49: mov rdi,rbx
0x6b4c: lea rsi,[rax+0x1]
0x6b50: pop rbx
0x6b51: jmp 0x6b10
0x6bd4: mov esi,dword ptr [r14]
0x6bd7: mov r8,rax
0x6bda: mov eax,0x0
0x6bdf: lea rdx,[rip+0xff77]
0x6be6: mov rcx,r13
0x6be9: cmp esi,0x16
0x6bec: cmove esi,eax
0x6bef: test ebx,ebx
0x6bf1: mov eax,0x1
0x6bf6: cmove ebx,eax
0x6bf9: xor eax,eax
0x6bfb: mov edi,ebx
0x6bfd: call 0x1e60
0x6c02: mov rbp,qword ptr [rsp]
0x6c6c: call 0x1c20
0x6c71: nop dword ptr [rax+rax]
0x6c76: nop word ptr cs:[rax+rax]
0x6d60: cmp eax,0x22
0x6d63: mov r12d,0x4
0x6d69: jne 0x6d39
0x6d6b: mov r12d,0x1
0x6d71: jmp 0x6d24
0x7210: mov r12d,0x4
0x7216: jmp 0x6d39
0x733f: lea rcx,[rip+0x101ca]
0x7346: lea rsi,[rip+0x100a3]
0x734d: lea rdi,[rip+0x100bc]
0x7354: mov edx,0x54
0x7359: call 0x1c90
0x735e: call 0x1c20
0x7363: nop word ptr cs:[rax+rax]
0x736d: nop dword ptr [rax]
0x7416: cmp eax,0x22
0x7419: mov ebp,0x1
0x741e: jne 0x7448
0x7442: nop word ptr [rax+rax]
0x7570: movsxd rdi,edi
0x7573: mov eax,ebp
0x7575: add rcx,rdi
0x7578: or eax,0x2
0x757b: mov qword ptr [r15],rcx
0x757e: cmp byte ptr [rcx],0x0
0x7581: mov qword ptr [r14],rbx
0x7584: cmovne ebp,eax
0x7587: jmp 0x744d
0x75e5: or ebp,r9d
0x75e8: jmp 0x7570
0x767c: mov rax,rbx
0x767f: mul rsi
0x7682: mov rbx,rax
0x7685: jo 0x7714
0x768b: sub r8d,0x1
0x768f: jne 0x767c
0x7691: jmp 0x75e5
0x76f0: call 0x1c20
0x76f5: lea rcx,[rip+0xfefc]
0x76fc: lea rsi,[rip+0xfced]
0x7703: lea rdi,[rip+0xfd06]
0x770a: mov edx,0x54
0x770f: call 0x1c90
0x7714: mov r9d,0x1
0x771a: or rbx,-0x1
0x771e: jmp 0x768b
0x7861: cmp esi,0x406
0x7867: jne 0x78b0
0x7869: mov rax,qword ptr [rsp+0x10]
0x786e: cmp dword ptr [rip+0x214b03],0x0
0x7875: mov dword ptr [rsp],0x18
0x787c: mov r12d,dword ptr [rax+0x10]
0x7880: mov edx,r12d
0x7883: js 0x79b3
0x7889: xor eax,eax
0x788b: mov esi,0x406
0x7890: call 0x1b90
0x7895: test eax,eax
0x7897: mov ebx,eax
0x7899: js 0x7a28
0x789f: mov dword ptr [rip+0x214acf],0x1
0x78a9: jmp 0x78f0
0x78b0: cmp esi,0xb
0x78b3: je 0x78e0
0x78b5: jg 0x7910
0x78b7: cmp esi,0x4
0x78ba: je 0x7990
0x78c0: jg 0x7980
0x78c6: cmp esi,0x2
0x78c9: je 0x7990
0x78cf: jg 0x78e0
0x78d1: cmp esi,0x1
0x78d4: jne 0x7938
0x78d6: nop word ptr cs:[rax+rax]
0x78e0: mov edi,ebp
0x78e2: xor eax,eax
0x78e4: call 0x1b90
0x78e9: mov ebx,eax
0x78eb: nop dword ptr [rax+rax]
0x7910: cmp esi,0x407
0x7916: jg 0x7960
0x7918: cmp esi,0x406
0x791e: jge 0x7990
0x7920: cmp esi,0x401
0x7926: je 0x78e0
0x7928: cmp esi,0x402
0x792e: je 0x7990
0x7930: cmp esi,0x400
0x7936: je 0x7990
0x7938: mov eax,dword ptr [rsp]
0x793b: cmp eax,0x2f
0x793e: ja 0x7a7a
0x7944: add rax,qword ptr [rsp+0x10]
0x7949: mov rdx,qword ptr [rax]
0x794c: mov edi,ebp
0x794e: xor eax,eax
0x7950: call 0x1b90
0x7955: mov ebx,eax
0x7957: jmp 0x78f0
0x7960: cmp esi,0x409
0x7966: je 0x7990
0x7968: jl 0x78e0
0x796e: cmp esi,0x40a
0x7974: jne 0x7938
0x7976: jmp 0x78e0
0x7980: cmp esi,0x9
0x7983: je 0x78e0
0x7989: jg 0x7990
0x798b: cmp esi,0x8
0x798e: jne 0x7938
0x7990: mov eax,dword ptr [rsp]
0x7993: cmp eax,0x2f
0x7996: ja 0x7a84
0x799c: add rax,qword ptr [rsp+0x10]
0x79a1: mov edx,dword ptr [rax]
0x79a3: mov edi,ebp
0x79a5: xor eax,eax
0x79a7: call 0x1b90
0x79ac: mov ebx,eax
0x79ae: jmp 0x78f0
0x79b3: xor esi,esi
0x79b5: xor eax,eax
0x79b7: call 0x1b90
0x79bc: test eax,eax
0x79be: mov ebx,eax
0x79c0: js 0x78f0
0x79c6: cmp dword ptr [rip+0x2149ab],-0x1
0x79cd: jne 0x78f0
0x79d3: xor eax,eax
0x79d5: mov esi,0x1
0x79da: mov edi,ebx
0x79dc: call 0x1b90
0x79e1: test eax,eax
0x79e3: js 0x7a01
0x79e5: or eax,0x1
0x79e8: mov esi,0x2
0x79ed: mov edi,ebx
0x79ef: mov edx,eax
0x79f1: xor eax,eax
0x79f3: call 0x1b90
0x79f8: cmp eax,-0x1
0x79fb: jne 0x78f0
0x7a01: call 0x1b20
0x7a06: mov r12d,dword ptr [rax]
0x7a09: mov rbp,rax
0x7a0c: mov edi,ebx
0x7a0e: call 0x1cc0
0x7a13: mov ebx,0xffffffff
0x7a18: mov dword ptr [rbp],r12d
0x7a1c: jmp 0x78f0
0x7a28: call 0x1b20
0x7a2d: cmp dword ptr [rax],0x16
0x7a30: jne 0x789f
0x7a36: xor esi,esi
0x7a38: xor eax,eax
0x7a3a: mov edx,r12d
0x7a3d: mov edi,ebp
0x7a3f: call 0x1b90
0x7a44: test eax,eax
0x7a46: mov ebx,eax
0x7a48: js 0x78f0
0x7a4e: mov dword ptr [rip+0x214920],0xffffffff
0x7a58: jmp 0x79d3
0x7a5d: call 0x1c20
0x7a7a: mov rax,qword ptr [rsp+0x8]
0x7a7f: jmp 0x7949
0x7a84: mov rax,qword ptr [rsp+0x8]
0x7a89: jmp 0x79a1
0x7bae: call 0x1c20
0x7bb3: nop word ptr cs:[rax+rax]
0x7bbd: nop dword ptr [rax]
0x7bc0: mov rax,qword ptr [rsi+0x48]
0x7bc4: cmp qword ptr [rsi+0x68],rax
0x7bc8: jle 0x7c20
0x7bca: mov r8,qword ptr [rsi+0x8]
0x7bce: cmp dword ptr [rsi+0x90],0x1
0x7bd5: movzx ecx,byte ptr [r8+rax]
0x7bda: mov byte ptr [rdi],cl
0x7bdc: jle 0x7bf3
0x7bde: cmp rax,qword ptr [rsi+0x30]
0x7be2: je 0x7bf3
0x7be4: mov r9,qword ptr [rsi+0x10]
0x7be8: cmp dword ptr [r9+rax*4],-0x1
0x7bed: je 0x7c6f
0x7bf3: cmp cl,0x5c
0x7bf6: je 0x7c60
0x7bf8: cmp cl,0x5b
0x7bfb: je 0x7c30
0x7bfd: cmp cl,0x5d
0x7c00: je 0x7ca0
0x7c06: cmp cl,0x5e
0x7c09: je 0x7c90
0x7c0f: cmp cl,0x2d
0x7c12: jne 0x7c6f
0x7c14: mov byte ptr [rdi+0x8],0x16
0x7c18: mov eax,0x1
0x7c1d: ret 
0x7c20: mov byte ptr [rdi+0x8],0x2
0x7c24: xor eax,eax
0x7c26: ret 
0x7c30: lea rcx,[rax+0x1]
0x7c34: cmp rcx,qword ptr [rsi+0x58]
0x7c38: jge 0x7c80
0x7c3a: movzx eax,byte ptr [r8+rax+0x1]
0x7c40: cmp al,0x3a
0x7c42: mov byte ptr [rdi],al
0x7c44: je 0x7ce0
0x7c4a: cmp al,0x3d
0x7c4c: je 0x7cd0
0x7c52: cmp al,0x2e
0x7c54: jne 0x7c80
0x7c56: mov byte ptr [rdi+0x8],0x1a
0x7c5a: mov eax,0x2
0x7c5f: ret 
0x7c60: and edx,0x1
0x7c63: je 0x7c6f
0x7c65: lea rdx,[rax+0x1]
0x7c69: cmp rdx,qword ptr [rsi+0x58]
0x7c6d: jl 0x7cb0
0x7c6f: mov byte ptr [rdi+0x8],0x1
0x7c73: mov eax,0x1
0x7c78: ret 
0x7c80: mov byte ptr [rdi+0x8],0x1
0x7c84: mov byte ptr [rdi],0x5b
0x7c87: mov eax,0x1
0x7c8c: ret 
0x7c90: mov byte ptr [rdi+0x8],0x19
0x7c94: mov eax,0x1
0x7c99: ret 
0x7ca0: mov byte ptr [rdi+0x8],0x15
0x7ca4: mov eax,0x1
0x7ca9: ret 
0x7cb0: mov qword ptr [rsi+0x48],rdx
0x7cb4: movzx eax,byte ptr [r8+rax+0x1]
0x7cba: mov byte ptr [rdi+0x8],0x1
0x7cbe: mov byte ptr [rdi],al
0x7cc0: mov eax,0x1
0x7cc5: ret 
0x7cd0: mov byte ptr [rdi+0x8],0x1c
0x7cd4: mov eax,0x2
0x7cd9: ret 
0x7ce0: and edx,0x4
0x7ce3: je 0x7c80
0x7ce5: mov byte ptr [rdi+0x8],0x1e
0x7ce9: mov eax,0x2
0x7cee: ret 
0x7cf0: cmp byte ptr [rsi+0x30],0x11
0x7cf4: je 0x7d00
0x7cf6: xor eax,eax
0x7cf8: ret 
0x7d00: cmp rdi,qword ptr [rsi+0x28]
0x7d04: jne 0x7cf6
0x7d06: or byte ptr [rsi+0x32],0x8
0x7d0a: xor eax,eax
0x7d0c: ret 
0x7e72: cmp eax,-0x1
0x7e75: je 0x7dde
0x7e7b: test eax,eax
0x7e7d: jne 0x7e87
0x7e7f: mov esi,dword ptr [rsp+0x8]
0x7e83: test esi,esi
0x7e85: jne 0x7f05
0x7e87: cmp r15,0x3f
0x7e8b: jg 0x7ea0
0x7e8d: movzx eax,word ptr [rsp+0x26]
0x7e92: and word ptr [r13+0x22],ax
0x7e97: nop word ptr [rax+rax]
0x85de: call 0x1c20
0x85e3: nop dword ptr [rax]
0x85e6: nop word ptr cs:[rax+rax]
0x8bea: call 0x1c20
0x90e3: push rsi
0xa07a: call 0x1c20
0xa07f: nop 
0xa1d4: call 0x1c20
0xa1d9: nop dword ptr [rax]
0xa470: push r14
0xa472: push r13
0xa474: lea r13,[rsi+0x70]
0xa478: push r12
0xa47a: push rbp
0xa47b: lea r12,[rsi+0x80]
0xa482: push rbx
0xa483: mov rbx,rdi
0xa486: sub rsp,0x10
0xa48a: mov rbp,qword ptr [rdi]
0xa48d: mov rax,qword ptr fs:0x28
0xa496: mov qword ptr [rsp+0x8],rax
0xa49b: xor eax,eax
0xa49d: mov r14,rsp
0xa4a0: lea r8,[rbx+0x28]
0xa4a4: xor ecx,ecx
0xa4a6: xor edx,edx
0xa4a8: mov rsi,r12
0xa4ab: mov rdi,r13
0xa4ae: call 0xa390
0xa4b3: test rax,rax
0xa4b6: mov qword ptr [r14],rax
0xa4b9: je 0xa50c
0xa4bb: mov qword ptr [rax],rbp
0xa4be: mov rbp,qword ptr [r14]
0xa4c1: or byte ptr [rbp+0x32],0x4
0xa4c5: mov rax,qword ptr [rbx+0x8]
0xa4c9: test rax,rax
0xa4cc: je 0xa4e0
0xa4ce: lea r14,[rbp+0x8]
0xa4d2: mov rbx,rax
0xa4d5: jmp 0xa4a0
0xa4e0: xor edx,edx
0xa4e2: jmp 0xa4eb
0xa4e8: mov rbx,rax
0xa4eb: mov rax,qword ptr [rbx+0x10]
0xa4ef: test rax,rax
0xa4f2: je 0xa4f9
0xa4f4: cmp rax,rdx
0xa4f7: jne 0xa530
0xa4f9: mov rax,qword ptr [rbx]
0xa4fc: mov rbp,qword ptr [rbp]
0xa500: mov rdx,rbx
0xa503: test rax,rax
0xa506: jne 0xa4e8
0xa508: mov rax,qword ptr [rsp]
0xa50c: mov rcx,qword ptr [rsp+0x8]
0xa511: xor rcx,qword ptr fs:0x28
0xa51a: jne 0xa53c
0xa51c: add rsp,0x10
0xa520: pop rbx
0xa521: pop rbp
0xa522: pop r12
0xa524: pop r13
0xa526: pop r14
0xa528: ret 
0xa530: lea r14,[rbp+0x10]
0xa534: mov rbx,rax
0xa537: jmp 0xa4a0
0xa53c: call 0x1c20
0xa541: nop dword ptr [rax+rax]
0xa546: nop word ptr cs:[rax+rax]
0xa587: test rbp,rbp
0xa58a: je 0xa600
0xa58c: mov rax,qword ptr [rdx+0x28]
0xa590: cmp rax,0x3f
0xa594: jg 0xa6cd
0xa59a: mov rdx,qword ptr [rbx+0xa0]
0xa5a1: btq rdx,rax
0xa5a5: jae 0xa6cd
0xa5ab: lea rax,[rbx+0x70]
0xa5af: lea r14,[rsp+0x20]
0xa5b4: sub rbx,-0x80
0xa5b8: xor ecx,ecx
0xa5ba: xor edx,edx
0xa5bc: mov rsi,rbx
0xa5bf: mov r15,rax
0xa5c2: mov r8,r14
0xa5c5: mov rdi,rax
0xa5c8: mov byte ptr [rsp+0x28],0x8
0xa5cd: mov qword ptr [rsp+0x8],rax
0xa5d2: call 0xa390
0xa5d7: mov rdi,r15
0xa5da: mov r8,r14
0xa5dd: xor ecx,ecx
0xa5df: xor edx,edx
0xa5e1: mov rsi,rbx
0xa5e4: mov r12,rax
0xa5e7: mov byte ptr [rsp+0x28],0x9
0xa5ec: call 0xa390
0xa5f1: mov r15,rax
0xa5f4: jmp 0xa74d
0xa600: lea rax,[rbx+0x70]
0xa604: lea r14,[rsp+0x20]
0xa609: sub rbx,-0x80
0xa60d: xor ecx,ecx
0xa60f: xor edx,edx
0xa611: mov rsi,rbx
0xa614: mov r15,rax
0xa617: mov r8,r14
0xa61a: mov rdi,rax
0xa61d: mov byte ptr [rsp+0x28],0x8
0xa622: mov qword ptr [rsp+0x8],rax
0xa627: call 0xa390
0xa62c: mov rdi,r15
0xa62f: mov r8,r14
0xa632: xor ecx,ecx
0xa634: xor edx,edx
0xa636: mov rsi,rbx
0xa639: mov r12,rax
0xa63c: mov byte ptr [rsp+0x28],0x9
0xa641: call 0xa390
0xa646: mov r11,rax
0xa649: mov r15,rax
0xa782: call 0x1c20
0xa787: nop word ptr [rax+rax]
0xa82b: call 0x1c20
0xafb7: call 0x1c20
0xafbc: nop dword ptr [rax]
0xb359: call 0x1c20
0xb35e: nop 
0xbf1a: call 0x1c20
0xbf1f: nop 
0xc156: call 0x1c20
0xc15b: nop dword ptr [rax+rax]
0xccd4: call 0x1c20
0xce74: nop 
0xce76: nop word ptr cs:[rax+rax]
0xce80: push rbp
0xce81: push rbx
0xce82: mov rbp,rdi
0xce85: mov rdi,rsi
0xce88: mov rbx,rsi
0xce8b: sub rsp,0x8
0xce8f: call 0x1c10
0xce94: cmp rax,0x1
0xce98: jne 0xcec0
0xce9a: movzx ecx,byte ptr [rbx]
0xce9d: mov rdx,rcx
0xcea0: and ecx,0x3f
0xcea3: shr rdx,0x3
0xcea7: shl rax,cl
0xceaa: and edx,0x18
0xcead: or qword ptr [rbp+rdx],rax
0xceb2: add rsp,0x8
0xceb6: xor eax,eax
0xceb8: pop rbx
0xceb9: pop rbp
0xceba: ret 
0xcec0: add rsp,0x8
0xcec4: mov eax,0x3
0xcec9: pop rbx
0xceca: pop rbp
0xcecb: ret 
0xced0: push r14
0xced2: push r13
0xced4: mov r13,rcx
0xced7: push r12
0xced9: push rbp
0xceda: mov r12,r9
0xcedd: push rbx
0xcede: mov rbp,rdi
0xcee1: mov rbx,rsi
0xcee4: sub rsp,0x10
0xcee8: test qword ptr [rsp+0x40],0x400000
0xcef1: je 0xcf18
0xcef3: lea rdi,[rip+0xa785]
0xcefa: mov ecx,0x6
0xceff: mov rsi,r9
0xcf02: rep cmpsb [rsi],es:[rdi]
0xcf04: seta al
0xcf07: sbb al,0x0
0xcf09: test al,al
0xcf0b: jne 0xd006
0xcf11: lea r12,[rip+0xa761]
0xcf18: mov rcx,qword ptr [r13]
0xcf1c: cmp qword ptr [r8],rcx
0xcf1f: mov rax,qword ptr [rdx]
0xcf22: je 0xd039
0xcf28: lea rdx,[rcx+0x1]
0xcf2c: mov rdi,r12
0xcf2f: mov qword ptr [r13],rdx
0xcf33: lea r13,[rax+rcx*8]
0xcf37: call 0x1d10
0xcf3c: lea rdi,[rip+0xa748]
0xcf43: mov qword ptr [r13],rax
0xcf47: mov ecx,0x6
0xcf4c: mov rsi,r12
0xcf4f: rep cmpsb [rsi],es:[rdi]
0xcf51: seta al
0xcf54: sbb al,0x0
0xcf56: test al,al
0xcf58: je 0xcfc8
0xcf5a: lea rdi,[rip+0xa730]
0xcf61: mov ecx,0x6
0xcf66: mov rsi,r12
0xcf69: rep cmpsb [rsi],es:[rdi]
0xcf6b: seta al
0xcf6e: sbb al,0x0
0xcf70: test al,al
0xcf72: jne 0xd078
0xcf78: call 0x1f50
0xcf7d: xor ecx,ecx
0xcf7f: test rbp,rbp
0xcf82: mov rdx,qword ptr [rax]
0xcf85: mov edi,0x1
0xcf8a: jne 0xd24a
0xcf90: test byte ptr [rdx+rcx*2],0x2
0xcf94: je 0xcfa7
0xcf96: mov rax,rcx
0xcf99: mov rsi,rdi
0xcf9c: sar rax,0x6
0xcfa0: shl rsi,cl
0xcfa3: or qword ptr [rbx+rax*8],rsi
0xcfa7: add rcx,0x1
0xcfab: cmp rcx,0x100
0xcfb2: jne 0xcf90
0xcfb4: xor eax,eax
0xcfb6: add rsp,0x10
0xcfba: pop rbx
0xcfbb: pop rbp
0xcfbc: pop r12
0xcfbe: pop r13
0xcfc0: pop r14
0xcfc2: ret 
0xcfc8: call 0x1f50
0xcfcd: xor ecx,ecx
0xcfcf: test rbp,rbp
0xcfd2: mov rdx,qword ptr [rax]
0xcfd5: mov edi,0x1
0xcfda: jne 0xd1ca
0xcfe0: test byte ptr [rdx+rcx*2],0x8
0xcfe4: je 0xcff7
0xcfe6: mov rax,rcx
0xcfe9: mov rsi,rdi
0xcfec: sar rax,0x6
0xcff0: shl rsi,cl
0xcff3: or qword ptr [rbx+rax*8],rsi
0xcff7: add rcx,0x1
0xcffb: cmp rcx,0x100
0xd002: jne 0xcfe0
0xd004: jmp 0xcfb4
0xd006: lea rdi,[rip+0xa678]
0xd00d: mov ecx,0x6
0xd012: mov rsi,r9
0xd015: rep cmpsb [rsi],es:[rdi]
0xd017: mov rcx,qword ptr [r13]
0xd01b: seta al
0xd01e: sbb al,0x0
0xd020: test al,al
0xd022: lea rax,[rip+0xa650]
0xd029: cmove r12,rax
0xd02d: cmp qword ptr [r8],rcx
0xd030: mov rax,qword ptr [rdx]
0xd033: jne 0xcf28
0xd039: lea r14,[rcx+rcx+0x1]
0xd03e: mov rdi,rax
0xd041: mov qword ptr [rsp+0x8],r8
0xd046: mov qword ptr [rsp],rdx
0xd04a: lea rsi,[r14*8]
0xd052: call 0x1e00
0xd057: test rax,rax
0xd05a: je 0xd378
0xd060: mov rdx,qword ptr [rsp]
0xd064: mov r8,qword ptr [rsp+0x8]
0xd069: mov qword ptr [rdx],rax
0xd06c: mov qword ptr [r8],r14
0xd06f: mov rcx,qword ptr [r13]
0xd073: jmp 0xcf28
0xd078: lea rdi,[rip+0xa606]
0xd07f: mov ecx,0x6
0xd084: mov rsi,r12
0xd087: rep cmpsb [rsi],es:[rdi]
0xd089: seta al
0xd08c: sbb al,0x0
0xd08e: test al,al
0xd090: je 0xd0fa
0xd092: lea rdi,[rip+0xa5fe]
0xd099: mov ecx,0x6
0xd09e: mov rsi,r12
0xd0a1: rep cmpsb [rsi],es:[rdi]
0xd0a3: seta al
0xd0a6: sbb al,0x0
0xd0a8: test al,al
0xd0aa: jne 0xd142
0xd0b0: call 0x1f50
0xd0b5: xor ecx,ecx
0xd0b7: test rbp,rbp
0xd0ba: mov rdx,qword ptr [rax]
0xd0bd: mov edi,0x1
0xd0c2: jne 0xd41e
0xd0c8: nop dword ptr [rax+rax]
0xd0d0: test byte ptr [rdx+rcx*2+0x1],0x20
0xd0d5: je 0xd0e8
0xd0d7: mov rax,rcx
0xd0da: mov rsi,rdi
0xd0dd: sar rax,0x6
0xd0e1: shl rsi,cl
0xd0e4: or qword ptr [rbx+rax*8],rsi
0xd0e8: add rcx,0x1
0xd0ec: cmp rcx,0x100
0xd0f3: jne 0xd0d0
0xd0f5: jmp 0xcfb4
0xd0fa: call 0x1f50
0xd0ff: xor ecx,ecx
0xd101: test rbp,rbp
0xd104: mov rdx,qword ptr [rax]
0xd107: mov edi,0x1
0xd10c: jne 0xd2e2
0xd112: nop word ptr [rax+rax]
0xd118: test byte ptr [rdx+rcx*2+0x1],0x2
0xd11d: je 0xd130
0xd11f: mov rax,rcx
0xd122: mov rsi,rdi
0xd125: sar rax,0x6
0xd129: shl rsi,cl
0xd12c: or qword ptr [rbx+rax*8],rsi
0xd130: add rcx,0x1
0xd134: cmp rcx,0x100
0xd13b: jne 0xd118
0xd13d: jmp 0xcfb4
0xd142: lea rdi,[rip+0xa530]
0xd149: mov ecx,0x6
0xd14e: mov rsi,r12
0xd151: rep cmpsb [rsi],es:[rdi]
0xd153: seta al
0xd156: sbb al,0x0
0xd158: test al,al
0xd15a: je 0xd203
0xd160: lea rdi,[rip+0xa54f]
0xd167: mov ecx,0x6
0xd16c: mov rsi,r12
0xd16f: rep cmpsb [rsi],es:[rdi]
0xd171: seta al
0xd174: sbb al,0x0
0xd176: test al,al
0xd178: jne 0xd283
0xd17e: call 0x1f50
0xd183: xor ecx,ecx
0xd185: test rbp,rbp
0xd188: mov rdx,qword ptr [rax]
0xd18b: mov edi,0x1
0xd190: jne 0xd63a
0xd196: nop word ptr cs:[rax+rax]
0xd1a0: test byte ptr [rdx+rcx*2+0x1],0x8
0xd1a5: je 0xd1b8
0xd1a7: mov rax,rcx
0xd1aa: mov rsi,rdi
0xd1ad: sar rax,0x6
0xd1b1: shl rsi,cl
0xd1b4: or qword ptr [rbx+rax*8],rsi
0xd1b8: add rcx,0x1
0xd1bc: cmp rcx,0x100
0xd1c3: jne 0xd1a0
0xd1c5: jmp 0xcfb4
0xd1ca: xor eax,eax
0xd1cc: nop dword ptr [rax]
0xd1d0: test byte ptr [rdx+rax*2],0x8
0xd1d4: je 0xd1f2
0xd1d6: movzx ecx,byte ptr [rbp+rax]
0xd1db: mov r10,rdi
0xd1de: mov rsi,rcx
0xd1e1: and ecx,0x3f
0xd1e4: shr rsi,0x3
0xd1e8: shl r10,cl
0xd1eb: and esi,0x18
0xd1ee: or qword ptr [rbx+rsi],r10
0xd1f2: add rax,0x1
0xd1f6: cmp rax,0x100
0xd1fc: jne 0xd1d0
0xd1fe: jmp 0xcfb4
0xd203: call 0x1f50
0xd208: xor ecx,ecx
0xd20a: test rbp,rbp
0xd20d: mov rdx,qword ptr [rax]
0xd210: mov edi,0x1
0xd215: jne 0xd3e8
0xd21b: nop dword ptr [rax+rax]
0xd220: test byte ptr [rdx+rcx*2+0x1],0x4
0xd225: je 0xd238
0xd227: mov rax,rcx
0xd22a: mov rsi,rdi
0xd22d: sar rax,0x6
0xd231: shl rsi,cl
0xd234: or qword ptr [rbx+rax*8],rsi
0xd238: add rcx,0x1
0xd23c: cmp rcx,0x100
0xd243: jne 0xd220
0xd245: jmp 0xcfb4
0xd24a: xor eax,eax
0xd24c: nop dword ptr [rax]
0xd250: test byte ptr [rdx+rax*2],0x2
0xd254: je 0xd272
0xd256: movzx ecx,byte ptr [rbp+rax]
0xd25b: mov r11,rdi
0xd25e: mov rsi,rcx
0xd261: and ecx,0x3f
0xd264: shr rsi,0x3
0xd268: shl r11,cl
0xd26b: and esi,0x18
0xd26e: or qword ptr [rbx+rsi],r11
0xd272: add rax,0x1
0xd276: cmp rax,0x100
0xd27c: jne 0xd250
0xd27e: jmp 0xcfb4
0xd283: lea rdi,[rip+0xa413]
0xd28a: mov ecx,0x6
0xd28f: mov rsi,r12
0xd292: rep cmpsb [rsi],es:[rdi]
0xd294: seta al
0xd297: sbb al,0x0
0xd299: test al,al
0xd29b: jne 0xd31c
0xd29d: call 0x1f50
0xd2a2: xor ecx,ecx
0xd2a4: test rbp,rbp
0xd2a7: mov rdx,qword ptr [rax]
0xd2aa: mov edi,0x1
0xd2af: jne 0xd6a7
0xd2b5: nop dword ptr [rax]
0xd2b8: test byte ptr [rdx+rcx*2+0x1],0x40
0xd2bd: je 0xd2d0
0xd2bf: mov rax,rcx
0xd2c2: mov rsi,rdi
0xd2c5: sar rax,0x6
0xd2c9: shl rsi,cl
0xd2cc: or qword ptr [rbx+rax*8],rsi
0xd2d0: add rcx,0x1
0xd2d4: cmp rcx,0x100
0xd2db: jne 0xd2b8
0xd2dd: jmp 0xcfb4
0xd2e2: xor eax,eax
0xd2e4: nop dword ptr [rax]
0xd2e8: test byte ptr [rdx+rax*2+0x1],0x2
0xd2ed: je 0xd30b
0xd2ef: movzx ecx,byte ptr [rbp+rax]
0xd2f4: mov r14,rdi
0xd2f7: mov rsi,rcx
0xd2fa: and ecx,0x3f
0xd2fd: shr rsi,0x3
0xd301: shl r14,cl
0xd304: and esi,0x18
0xd307: or qword ptr [rbx+rsi],r14
0xd30b: add rax,0x1
0xd30f: cmp rax,0x100
0xd315: jne 0xd2e8
0xd317: jmp 0xcfb4
0xd31c: lea rdi,[rip+0xa35c]
0xd323: mov ecx,0x6
0xd328: mov rsi,r12
0xd32b: rep cmpsb [rsi],es:[rdi]
0xd32d: seta al
0xd330: sbb al,0x0
0xd332: test al,al
0xd334: jne 0xd382
0xd336: call 0x1f50
0xd33b: xor ecx,ecx
0xd33d: test rbp,rbp
0xd340: mov rax,qword ptr [rax]
0xd343: mov edi,0x1
0xd348: jne 0xd670
0xd34e: test byte ptr [rax+rcx*2+0x1],0x1
0xd353: je 0xd366
0xd355: mov rdx,rcx
0xd358: mov rsi,rdi
0xd35b: sar rdx,0x6
0xd35f: shl rsi,cl
0xd362: or qword ptr [rbx+rdx*8],rsi
0xd366: add rcx,0x1
0xd36a: cmp rcx,0x100
0xd371: jne 0xd34e
0xd373: jmp 0xcfb4
0xd378: mov eax,0xc
0xd37d: jmp 0xcfb6
0xd382: lea rdi,[rip+0xa31a]
0xd389: mov ecx,0x6
0xd38e: mov rsi,r12
0xd391: rep cmpsb [rsi],es:[rdi]
0xd393: seta al
0xd396: sbb al,0x0
0xd398: test al,al
0xd39a: jne 0xd48e
0xd3a0: call 0x1f50
0xd3a5: xor ecx,ecx
0xd3a7: test rbp,rbp
0xd3aa: mov rdx,qword ptr [rax]
0xd3ad: mov esi,0x1
0xd3b2: jne 0xd454
0xd3b8: test byte ptr [rdx+rcx*2],0x1
0xd3bc: je 0xd3cf
0xd3be: mov rax,rcx
0xd3c1: mov rdi,rsi
0xd3c4: sar rax,0x6
0xd3c8: shl rdi,cl
0xd3cb: or qword ptr [rbx+rax*8],rdi
0xd3cf: add rcx,0x1
0xd3d3: cmp rcx,0x100
0xd3da: jne 0xd3b8
0xd3dc: jmp 0xcfb4
0xd3e8: xor eax,eax
0xd3ea: test byte ptr [rdx+rax*2+0x1],0x4
0xd3ef: je 0xd40d
0xd3f1: movzx ecx,byte ptr [rbp+rax]
0xd3f6: mov r9,rdi
0xd3f9: mov rsi,rcx
0xd3fc: and ecx,0x3f
0xd3ff: shr rsi,0x3
0xd403: shl r9,cl
0xd406: and esi,0x18
0xd409: or qword ptr [rbx+rsi],r9
0xd40d: add rax,0x1
0xd411: cmp rax,0x100
0xd417: jne 0xd3ea
0xd419: jmp 0xcfb4
0xd41e: xor eax,eax
0xd420: test byte ptr [rdx+rax*2+0x1],0x20
0xd425: je 0xd443
0xd427: movzx ecx,byte ptr [rbp+rax]
0xd42c: mov r9,rdi
0xd42f: mov rsi,rcx
0xd432: and ecx,0x3f
0xd435: shr rsi,0x3
0xd439: shl r9,cl
0xd43c: and esi,0x18
0xd43f: or qword ptr [rbx+rsi],r9
0xd443: add rax,0x1
0xd447: cmp rax,0x100
0xd44d: jne 0xd420
0xd44f: jmp 0xcfb4
0xd454: xor eax,eax
0xd456: mov edi,0x1
0xd45b: test byte ptr [rdx+rax*2],0x1
0xd45f: je 0xd47d
0xd461: movzx ecx,byte ptr [rbp+rax]
0xd466: mov r14,rdi
0xd469: mov rsi,rcx
0xd46c: and ecx,0x3f
0xd46f: shr rsi,0x3
0xd473: shl r14,cl
0xd476: and esi,0x18
0xd479: or qword ptr [rbx+rsi],r14
0xd47d: add rax,0x1
0xd481: cmp rax,0x100
0xd487: jne 0xd45b
0xd489: jmp 0xcfb4
0xd48e: lea rsi,[rip+0xa214]
0xd495: mov rdi,r12
0xd498: call 0x1d40
0xd49d: test eax,eax
0xd49f: jne 0xd51a
0xd4a1: call 0x1f50
0xd4a6: xor ecx,ecx
0xd4a8: test rbp,rbp
0xd4ab: mov rsi,qword ptr [rax]
0xd4ae: mov edx,0x1
0xd4b3: jne 0xd4df
0xd4b5: cmp word ptr [rsi+rcx*2],0x0
0xd4ba: jns 0xd4cd
0xd4bc: mov rax,rcx
0xd4bf: mov rdi,rdx
0xd4c2: sar rax,0x6
0xd4c6: shl rdi,cl
0xd4c9: or qword ptr [rbx+rax*8],rdi
0xd4cd: add rcx,0x1
0xd4d1: cmp rcx,0x100
0xd4d8: jne 0xd4b5
0xd4da: jmp 0xcfb4
0xd4df: xor eax,eax
0xd4e1: mov edi,0x1
0xd4e6: cmp word ptr [rsi+rax*2],0x0
0xd4eb: jns 0xd509
0xd4ed: movzx ecx,byte ptr [rbp+rax]
0xd4f2: mov r9,rdi
0xd4f5: mov rdx,rcx
0xd4f8: and ecx,0x3f
0xd4fb: shr rdx,0x3
0xd4ff: shl r9,cl
0xd502: and edx,0x18
0xd505: or qword ptr [rbx+rdx],r9
0xd509: add rax,0x1
0xd50d: cmp rax,0x100
0xd513: jne 0xd4e6
0xd515: jmp 0xcfb4
0xd51a: lea rsi,[rip+0xa18e]
0xd521: mov rdi,r12
0xd524: call 0x1d40
0xd529: test eax,eax
0xd52b: jne 0xd5a4
0xd52d: call 0x1f50
0xd532: xor ecx,ecx
0xd534: test rbp,rbp
0xd537: mov rsi,qword ptr [rax]
0xd53a: mov edx,0x1
0xd53f: jne 0xd56a
0xd541: test byte ptr [rsi+rcx*2],0x4
0xd545: je 0xd558
0xd547: mov rax,rcx
0xd54a: mov rdi,rdx
0xd54d: sar rax,0x6
0xd551: shl rdi,cl
0xd554: or qword ptr [rbx+rax*8],rdi
0xd558: add rcx,0x1
0xd55c: cmp rcx,0x100
0xd563: jne 0xd541
0xd565: jmp 0xcfb4
0xd56a: xor eax,eax
0xd56c: mov edi,0x1
0xd571: test byte ptr [rsi+rax*2],0x4
0xd575: je 0xd593
0xd577: movzx ecx,byte ptr [rbp+rax]
0xd57c: mov r14,rdi
0xd57f: mov rdx,rcx
0xd582: and ecx,0x3f
0xd585: shr rdx,0x3
0xd589: shl r14,cl
0xd58c: and edx,0x18
0xd58f: or qword ptr [rbx+rdx],r14
0xd593: add rax,0x1
0xd597: cmp rax,0x100
0xd59d: jne 0xd571
0xd59f: jmp 0xcfb4
0xd5a4: lea rsi,[rip+0xa10a]
0xd5ab: mov rdi,r12
0xd5ae: call 0x1d40
0xd5b3: test eax,eax
0xd5b5: jne 0xd630
0xd5b7: call 0x1f50
0xd5bc: xor ecx,ecx
0xd5be: test rbp,rbp
0xd5c1: mov rsi,qword ptr [rax]
0xd5c4: mov edx,0x1
0xd5c9: jne 0xd5f5
0xd5cb: test byte ptr [rsi+rcx*2+0x1],0x10
0xd5d0: je 0xd5e3
0xd5d2: mov rax,rcx
0xd5d5: mov rdi,rdx
0xd5d8: sar rax,0x6
0xd5dc: shl rdi,cl
0xd5df: or qword ptr [rbx+rax*8],rdi
0xd5e3: add rcx,0x1
0xd5e7: cmp rcx,0x100
0xd5ee: jne 0xd5cb
0xd5f0: jmp 0xcfb4
0xd5f5: xor eax,eax
0xd5f7: mov edi,0x1
0xd5fc: test byte ptr [rsi+rax*2+0x1],0x10
0xd601: je 0xd61f
0xd603: movzx ecx,byte ptr [rbp+rax]
0xd608: mov r9,rdi
0xd60b: mov rdx,rcx
0xd60e: and ecx,0x3f
0xd611: shr rdx,0x3
0xd615: shl r9,cl
0xd618: and edx,0x18
0xd61b: or qword ptr [rbx+rdx],r9
0xd61f: add rax,0x1
0xd623: cmp rax,0x100
0xd629: jne 0xd5fc
0xd62b: jmp 0xcfb4
0xd630: mov eax,0x4
0xd635: jmp 0xcfb6
0xd63a: xor eax,eax
0xd63c: test byte ptr [rdx+rax*2+0x1],0x8
0xd641: je 0xd65f
0xd643: movzx ecx,byte ptr [rbp+rax]
0xd648: mov r14,rdi
0xd64b: mov rsi,rcx
0xd64e: and ecx,0x3f
0xd651: shr rsi,0x3
0xd655: shl r14,cl
0xd658: and esi,0x18
0xd65b: or qword ptr [rbx+rsi],r14
0xd65f: add rax,0x1
0xd663: cmp rax,0x100
0xd669: jne 0xd63c
0xd66b: jmp 0xcfb4
0xd670: xor edx,edx
0xd672: test byte ptr [rax+rdx*2+0x1],0x1
0xd677: je 0xd695
0xd679: movzx ecx,byte ptr [rbp+rdx]
0xd67e: mov r9,rdi
0xd681: mov rsi,rcx
0xd684: and ecx,0x3f
0xd687: shr rsi,0x3
0xd68b: shl r9,cl
0xd68e: and esi,0x18
0xd691: or qword ptr [rbx+rsi],r9
0xd695: add rdx,0x1
0xd699: cmp rdx,0x100
0xd6a0: jne 0xd672
0xd6a2: jmp 0xcfb4
0xd6a7: xor eax,eax
0xd6a9: test byte ptr [rdx+rax*2+0x1],0x40
0xd6ae: je 0xd6cc
0xd6b0: movzx ecx,byte ptr [rbp+rax]
0xd6b5: mov r14,rdi
0xd6b8: mov rsi,rcx
0xd6bb: and ecx,0x3f
0xd6be: shr rsi,0x3
0xd6c2: shl r14,cl
0xd6c5: and esi,0x18
0xd6c8: or qword ptr [rbx+rsi],r14
0xd6cc: add rax,0x1
0xd6d0: cmp rax,0x100
0xd6d6: jne 0xd6a9
0xd6d8: jmp 0xcfb4
0xd6e0: push r15
0xd6e2: push r14
0xd6e4: mov r14,rdx
0xd6e7: push r13
0xd6e9: push r12
0xd6eb: mov r13,rcx
0xd6ee: push rbp
0xd6ef: push rbx
0xd6f0: mov rbp,rdi
0xd6f3: mov edi,0x20
0xd6f8: mov r12d,r8d
0xd6fb: sub rsp,0x58
0xd6ff: mov qword ptr [rsp],rsi
0xd703: mov esi,0x1
0xd708: mov qword ptr [rsp+0x8],r9
0xd70d: mov rax,qword ptr fs:0x28
0xd716: mov qword ptr [rsp+0x48],rax
0xd71b: xor eax,eax
0xd71d: mov qword ptr [rsp+0x18],0x0
0xd726: call 0x1d30
0xd72b: test rax,rax
0xd72e: je 0xd8f0
0xd734: mov esi,0x1
0xd739: mov edi,0x50
0xd73e: mov rbx,rax
0xd741: call 0x1d30
0xd746: test rax,rax
0xd749: mov r15,rax
0xd74c: je 0xd900
0xd752: movzx eax,byte ptr [rax+0x20]
0xd756: sub rsp,0x8
0xd75a: mov edx,r12d
0xd75d: push 0x0
0xd75f: and edx,0x1
0xd762: mov rdi,qword ptr [rsp+0x10]
0xd767: lea rcx,[r15+0x48]
0xd76b: mov r9,r14
0xd76e: mov rsi,rbx
0xd771: lea r8,[rsp+0x28]
0xd776: and eax,-0x2
0xd779: or eax,edx
0xd77b: lea rdx,[r15+0x18]
0xd77f: mov byte ptr [r15+0x20],al
0xd783: call 0xced0
0xd788: test eax,eax
0xd78a: pop rdx
0xd78b: pop rcx
0xd78c: jne 0xd920
0xd792: movsx rcx,byte ptr [r13]
0xd797: mov esi,0x1
0xd79c: test cl,cl
0xd79e: je 0xd7da
0xd7a0: lea rax,[rcx+0x3f]
0xd7a4: test rcx,rcx
0xd7a7: mov rdx,rcx
0xd7aa: cmovns rax,rcx
0xd7ae: sar rdx,0x3f
0xd7b2: add r13,0x1
0xd7b6: shr rdx,0x3a
0xd7ba: sar rax,0x6
0xd7be: add rcx,rdx
0xd7c1: and ecx,0x3f
0xd7c4: sub rcx,rdx
0xd7c7: mov rdx,rsi
0xd7ca: shl rdx,cl
0xd7cd: movsx rcx,byte ptr [r13]
0xd7d2: or qword ptr [rbx+rax*8],rdx
0xd7d6: test cl,cl
0xd7d8: jne 0xd7a0
0xd7da: test r12b,r12b
0xd7dd: je 0xd7f2
0xd7df: lea rdx,[rbx+0x20]
0xd7e3: mov rax,rbx
0xd7e6: not qword ptr [rax]
0xd7e9: add rax,0x8
0xd7ed: cmp rdx,rax
0xd7f0: jne 0xd7e6
0xd7f2: cmp dword ptr [rbp+0xb4],0x1
0xd7f9: jle 0xd813
0xd7fb: mov rcx,qword ptr [rbp+0x78]
0xd7ff: xor eax,eax
0xd801: mov rdx,qword ptr [rcx+rax]
0xd805: and qword ptr [rbx+rax],rdx
0xd809: add rax,0x8
0xd80d: cmp rax,0x20
0xd811: jne 0xd801
0xd813: lea r9,[rsp+0x20]
0xd818: lea r12,[rbp+0x70]
0xd81c: lea r13,[rbp+0x80]
0xd823: xor ecx,ecx
0xd825: xor edx,edx
0xd827: mov byte ptr [rsp+0x28],0x3
0xd82c: mov r8,r9
0xd82f: mov rsi,r13
0xd832: mov rdi,r12
0xd835: mov qword ptr [rsp+0x20],rbx
0xd83a: mov qword ptr [rsp],r9
0xd83e: call 0xa390
0xd843: test rax,rax
0xd846: mov r14,rax
0xd849: je 0xd8e0
0xd84f: cmp dword ptr [rbp+0xb4],0x1
0xd856: jle 0xd8d0
0xd858: or byte ptr [rbp+0xb0],0x2
0xd85f: mov r9,qword ptr [rsp]
0xd863: xor ecx,ecx
0xd865: xor edx,edx
0xd867: mov rsi,r13
0xd86a: mov rdi,r12
0xd86d: mov byte ptr [rsp+0x28],0x6
0xd872: mov qword ptr [rsp+0x20],r15
0xd877: mov r8,r9
0xd87a: call 0xa390
0xd87f: test rax,rax
0xd882: je 0xd8e0
0xd884: lea r8,[rsp+0x30]
0xd889: mov rdx,r14
0xd88c: mov rcx,rax
0xd88f: mov rsi,r13
0xd892: mov rdi,r12
0xd895: mov byte ptr [rsp+0x38],0xa
0xd89a: call 0xa390
0xd89f: mov r14,rax
0xd8a2: mov rdi,qword ptr [rsp+0x48]
0xd8a7: xor rdi,qword ptr fs:0x28
0xd8b0: mov rax,r14
0xd8b3: jne 0xd945
0xd8b9: add rsp,0x58
0xd8bd: pop rbx
0xd8be: pop rbp
0xd8bf: pop r12
0xd8c1: pop r13
0xd8c3: pop r14
0xd8c5: pop r15
0xd8c7: ret 
0xd8d0: mov rdi,r15
0xd8d3: call 0x8df0
0xd8d8: jmp 0xd8a2
0xd8e0: mov rdi,rbx
0xd8e3: call 0x1b00
0xd8e8: mov rdi,r15
0xd8eb: call 0x8df0
0xd8f0: mov rax,qword ptr [rsp+0x8]
0xd8f5: xor r14d,r14d
0xd8f8: mov dword ptr [rax],0xc
0xd8fe: jmp 0xd8a2
0xd900: mov rdi,rbx
0xd903: xor r14d,r14d
0xd906: call 0x1b00
0xd90b: mov rax,qword ptr [rsp+0x8]
0xd910: mov dword ptr [rax],0xc
0xd916: jmp 0xd8a2
0xd920: mov rdi,rbx
0xd923: mov dword ptr [rsp],eax
0xd926: xor r14d,r14d
0xd929: call 0x1b00
0xd92e: mov rdi,r15
0xd931: call 0x8df0
0xd936: mov rdi,qword ptr [rsp+0x8]
0xd93b: mov eax,dword ptr [rsp]
0xd93e: mov dword ptr [rdi],eax
0xd940: jmp 0xd8a2
0xd945: call 0x1c20
0xd94a: nop word ptr [rax+rax]
0xde72: call 0x1c20
0xde77: nop word ptr [rax+rax]
0xe43e: mov ecx,dword ptr [rsp+0x110]
0xe445: mov rdx,qword ptr [rsp+0x48]
0xe44a: mov rsi,qword ptr [rsp+0x8]
0xe44f: mov rdi,qword ptr [rsp+0x30]
0xe454: call 0xa080
0xe459: test eax,eax
0xe45b: mov dword ptr [rsp+0x88],eax
0xe462: jne 0xe650
0xe468: mov r8d,dword ptr [rsp+0x110]
0xe470: mov rcx,qword ptr [rsp+0x48]
0xe475: mov rdx,rbx
0xe478: mov rsi,qword ptr [rsp+0x8]
0xe47d: mov rdi,r15
0xe480: call 0xafc0
0xe485: test eax,eax
0xe487: mov dword ptr [rsp+0x88],eax
0xe48e: jne 0xe650
0xe6bb: mov rax,qword ptr [r15+0xb8]
0xe6c2: mov rdx,qword ptr [rsp+0x10]
0xe6c7: add qword ptr [rsp+0x20],0x1
0xe6cd: mov qword ptr [rax+rdx],0x0
0xe6d5: jmp 0xe4e5
0xe709: iretl 
0xe82c: call 0x1c20
0xe831: nop dword ptr [rax+rax]
0xe836: nop word ptr cs:[rax+rax]
0xedb8: test rcx,rcx
0xedbb: je 0xee70
0xef46: mov rdi,qword ptr [rbp-0x88]
0xef4d: test rdi,rdi
0xef50: je 0xef57
0xefe6: mov rdi,qword ptr [rbp-0xb8]
0xefed: call 0x1da0
0xeff2: test rax,rax
0xeff5: mov qword ptr [rbp-0xc0],rax
0xeffc: mov byte ptr [rbp-0xc9],0x1
0xf003: jne 0xe917
0xf009: mov rdi,qword ptr [rbp-0x88]
0xf010: test rdi,rdi
0xf013: je 0xefdc
0xf015: call 0xcd90
0xf01a: jmp 0xefdc
0xf038: jmp 0xef57
0xf0a2: mov rdi,qword ptr [rbp-0xc0]
0xf0a9: call 0x1b00
0xf0ae: xor eax,eax
0xf0b0: jmp 0xef59
0xf12a: nop word ptr [rax+rax]
0xfbac: call 0x1c20
0xfbb1: nop dword ptr [rax+rax]
0xfbb6: nop word ptr cs:[rax+rax]
0xfda7: call 0x1c20
0xfdac: nop dword ptr [rax]
0x100eb: call 0x1c20
0x1113c: nop dword ptr [rax]
0x11446: test eax,eax
0x11448: jne 0x1171d
0x1144e: mov rax,qword ptr [rbx]
0x1181b: call 0x1c20
0x1206b: call 0x1c20
0x12070: push r14
0x12072: push r13
0x12074: mov r10,rsi
0x12077: push r12
0x12079: push rbp
0x1207a: movsxd r11,ecx
0x1207d: push rbx
0x1207e: mov rbp,rdx
0x12081: mov rbx,rdi
0x12084: sub rsp,0x20
0x12088: mov r12,qword ptr [rsi+0x48]
0x1208c: mov rax,qword ptr fs:0x28
0x12095: mov qword ptr [rsp+0x18],rax
0x1209a: xor eax,eax
0x1209c: cmp dword ptr [rsi+0x90],0x1
0x120a3: je 0x120f8
0x120a5: mov rsi,r12
0x120a8: mov rdi,r10
0x120ab: call 0x9620
0x120b0: cmp eax,0x1
0x120b3: jle 0x120f8
0x120b5: mov rdx,qword ptr [r10+0x10]
0x120b9: cltq 
0x120bb: mov dword ptr [rbx],0x1
0x120c1: add rax,r12
0x120c4: mov edx,dword ptr [rdx+r12*4]
0x120c8: mov dword ptr [rbx+0x8],edx
0x120cb: mov qword ptr [r10+0x48],rax
0x120cf: xor eax,eax
0x120d1: mov rcx,qword ptr [rsp+0x18]
0x120d6: xor rcx,qword ptr fs:0x28
0x120df: jne 0x122c8
0x120e5: add rsp,0x20
0x120e9: pop rbx
0x120ea: pop rbp
0x120eb: pop r12
0x120ed: pop r13
0x120ef: pop r14
0x120f1: ret 
0x120f8: movzx eax,byte ptr [rbp+0x8]
0x120fc: add r11,r12
0x120ff: mov qword ptr [r10+0x48],r11
0x12103: mov edx,eax
0x12105: and edx,-0x5
0x12108: cmp dl,0x1a
0x1210b: je 0x12130
0x1210d: cmp al,0x1c
0x1210f: je 0x12130
0x12111: cmp al,0x16
0x12113: jne 0x1211e
0x12115: test r9b,r9b
0x12118: je 0x12262
0x1211e: movzx eax,byte ptr [rbp]
0x12122: mov dword ptr [rbx],0x0
0x12128: mov byte ptr [rbx+0x8],al
0x1212b: xor eax,eax
0x1212d: jmp 0x120d1
0x12130: mov r12,qword ptr [r10+0x68]
0x12134: cmp r11,r12
0x12137: jge 0x12258
0x1213d: movzx r13d,byte ptr [rbp]
0x12142: xor r8d,r8d
0x12145: jmp 0x12172
0x12150: mov rax,qword ptr [rbx+0x8]
0x12154: mov byte ptr [rax+r8],r9b
0x12158: add r8,0x1
0x1215c: cmp r8,0x20
0x12160: je 0x12258
0x12166: movzx eax,byte ptr [rbp+0x8]
0x1216a: mov r11,qword ptr [r10+0x48]
0x1216e: mov r12,qword ptr [r10+0x68]
0x12172: cmp al,0x1e
0x12174: movsxd r14,r8d
0x12177: je 0x121e0
0x12179: mov rdx,qword ptr [r10+0x8]
0x1217d: lea rax,[r11+0x1]
0x12181: mov qword ptr [r10+0x48],rax
0x12185: movzx r9d,byte ptr [rdx+r11]
0x1218a: cmp rax,r12
0x1218d: jge 0x12258
0x12193: cmp r13b,r9b
0x12196: jne 0x12150
0x12198: mov rdx,qword ptr [r10+0x8]
0x1219c: cmp byte ptr [rdx+rax],0x5d
0x121a0: jne 0x12150
0x121a2: add rax,0x1
0x121a6: mov qword ptr [r10+0x48],rax
0x121aa: mov rax,qword ptr [rbx+0x8]
0x121ae: mov byte ptr [rax+r14],0x0
0x121b3: movzx eax,byte ptr [rbp+0x8]
0x121b7: cmp al,0x1c
0x121b9: je 0x122bb
0x121bf: cmp al,0x1e
0x121c1: je 0x122ae
0x121c7: cmp al,0x1a
0x121c9: je 0x122a1
0x121cf: xor eax,eax
0x121d1: jmp 0x120d1
0x121e0: cmp byte ptr [r10+0x8b],0x0
0x121e8: je 0x12179
0x121ea: cmp byte ptr [r10+0x8c],0x0
0x121f2: je 0x12288
0x121f8: cmp r11,qword ptr [r10+0x30]
0x121fc: je 0x1220d
0x121fe: mov rax,qword ptr [r10+0x10]
0x12202: cmp dword ptr [rax+r11*4],-0x1
0x12207: je 0x12179
0x1220d: mov rax,qword ptr [r10+0x18]
0x12211: mov rax,qword ptr [rax+r11*8]
0x12215: add rax,qword ptr [r10]
0x12218: add rax,qword ptr [r10+0x28]
0x1221c: movzx r9d,byte ptr [rax]
0x12220: test r9b,-0x80
0x12224: jne 0x12179
0x1222a: cmp dword ptr [r10+0x90],0x1
0x12232: mov eax,0x1
0x12237: je 0x12246
0x12239: mov rsi,r11
0x1223c: mov rdi,r10
0x1223f: call 0x9620
0x12244: cltq 
0x12246: add rax,r11
0x12249: mov qword ptr [r10+0x48],rax
0x1224d: jmp 0x1218a
0x12258: mov eax,0x7
0x1225d: jmp 0x120d1
0x12262: mov rdi,rsp
0x12265: mov rdx,r8
0x12268: mov rsi,r10
0x1226b: call 0x7bc0
0x12270: cmp byte ptr [rsp+0x8],0x15
0x12275: mov eax,0xb
0x1227a: je 0x1211e
0x12280: jmp 0x120d1
0x12288: lea rax,[r11+0x1]
0x1228c: add r11,qword ptr [r10]
0x1228f: mov rdx,qword ptr [r10+0x28]
0x12293: mov qword ptr [r10+0x48],rax
0x12297: movzx r9d,byte ptr [r11+rdx]
0x1229c: jmp 0x1218a
0x122a1: mov dword ptr [rbx],0x3
0x122a7: xor eax,eax
0x122a9: jmp 0x120d1
0x122ae: mov dword ptr [rbx],0x4
0x122b4: xor eax,eax
0x122b6: jmp 0x120d1
0x122bb: mov dword ptr [rbx],0x2
0x122c1: xor eax,eax
0x122c3: jmp 0x120d1
0x122c8: call 0x1c20
0x122cd: nop dword ptr [rax]
0x129c8: call 0x1c20
0x129cd: nop dword ptr [rax]
0x129d0: push r14
0x129d2: mov r14,rdi
0x129d5: push r13
0x129d7: mov r13,rsi
0x129da: push r12
0x129dc: mov r12,-0x2
0x129e3: push rbp
0x129e4: mov rbp,rdx
0x129e7: push rbx
0x129e8: mov rbx,-0x1
0x129ef: nop 
0x129f0: mov rdx,rbp
0x129f3: mov rsi,r14
0x129f6: mov rdi,r13
0x129f9: call 0x122d0
0x129fe: cltq 
0x12a00: add qword ptr [r14+0x48],rax
0x12a04: movzx eax,byte ptr [r13+0x8]
0x12a09: movzx edx,byte ptr [r13]
0x12a0e: cmp al,0x2
0x12a10: je 0x12a60
0x12a12: cmp al,0x18
0x12a14: je 0x12a67
0x12a16: cmp dl,0x2c
0x12a19: je 0x12a67
0x12a1b: cmp al,0x1
0x12a1d: je 0x12a28
0x12a1f: mov rbx,r12
0x12a22: jmp 0x129f0
0x12a28: lea eax,[rdx-0x30]
0x12a2b: cmp al,0x9
0x12a2d: ja 0x12a1f
0x12a2f: cmp rbx,-0x2
0x12a33: je 0x12a1f
0x12a35: cmp rbx,-0x1
0x12a39: je 0x12a78
0x12a3b: lea rax,[rbx+rbx*4]
0x12a3f: lea rbx,[rdx+rax*2]
0x12a43: mov eax,0x8030
0x12a48: cmp rbx,0x8030
0x12a4f: cmovg rbx,rax
0x12a53: sub rbx,0x30
0x12a57: jmp 0x129f0
0x12a60: mov rbx,-0x2
0x12a67: mov rax,rbx
0x12a6a: pop rbx
0x12a6b: pop rbp
0x12a6c: pop r12
0x12a6e: pop r13
0x12a70: pop r14
0x12a72: ret 
0x12a78: movzx ebx,dl
0x12a7b: sub ebx,0x30
0x12a7e: movsxd rbx,ebx
0x12a81: jmp 0x129f0
0x12f1b: mov rdi,qword ptr [rsp+0x28]
0x12f20: lea rsi,[rip-0xa0d7]
0x12f27: xor edx,edx
0x12f29: call 0x7fb0
0x12f2e: mov qword ptr [rsp+0x28],0x0
0x12f37: jmp 0x12ba0
0x13130: mov rax,qword ptr [rsp+0x40]
0x13135: mov dword ptr [rax],0xa
0x1313b: cmp qword ptr [rsp+0x28],0x0
0x13141: jne 0x12f1b
0x13147: jmp 0x12b90
0x13f2e: call 0x1c20
0x13f33: mov rax,qword ptr [rsp+0x18]
0x13f38: cmp byte ptr [rax+0x8],0x2
0x13f3c: jne 0x13130
0x13f42: mov rax,qword ptr [rsp+0x40]
0x13f47: mov dword ptr [rax],0x9
0x13f4d: jmp 0x1313b
0x140ed: call 0x1c20
0x140f2: nop dword ptr [rax]
0x140f6: nop word ptr cs:[rax+rax]
0x1427a: call 0x1c20
0x1427f: nop 
0x14548: cmp ecx,0x1
0x1454b: jle 0x1513d
0x14551: mov rdi,rbp
0x14554: call 0x85f0
0x14559: test eax,eax
0x1455b: jne 0x145a0
0x1455d: mov rax,qword ptr [rsp]
0x14561: cmp rax,qword ptr [rsp+0xb8]
0x14569: jle 0x15120
0x1456f: movsxd rax,dword ptr [rbx+0xb4]
0x14576: mov rsi,qword ptr [rsp+0xc0]
0x1457e: add rax,qword ptr [rsp+0xb0]
0x14586: cmp rsi,rax
0x14589: jg 0x15120
0x1458f: add rsi,rsi
0x14592: mov rdi,rbp
0x14595: call 0x8080
0x1459a: test eax,eax
0x1459c: je 0x14551
0x1459e: nop 
0x14680: mov rdx,qword ptr [rsp+0x88]
0x14688: mov qword ptr [rsp+0x10],rdx
0x1468d: mov rdx,qword ptr [rsp+0x80]
0x14695: mov rcx,qword ptr [rsp+0xf8]
0x1469d: add rdx,rax
0x146a0: add rdx,qword ptr [rsp+0xa8]
0x146a8: movzx edx,byte ptr [rdx]
0x146ab: movzx edx,byte ptr [rcx+rdx]
0x146af: mov rcx,qword ptr [rsp+0x10]
0x146b4: mov byte ptr [rcx+rax],dl
0x146b7: add rax,0x1
0x146bb: cmp rsi,rax
0x146be: jne 0x14680
0x14875: xor edx,edx
0x14877: nop word ptr [rax+rax]
0x14880: mov qword ptr [rax+rdx*8],rdx
0x14884: add rdx,0x1
0x14888: cmp rdx,r15
0x1488b: jne 0x14880
0x148b9: mov rax,qword ptr [rdi]
0x148bc: test rax,rax
0x148bf: je 0x148ce
0x148c1: jmp 0x148dd
0x148c8: cmp qword ptr [rdi+rax*8],rax
0x148cc: jne 0x148dd
0x148ce: add rax,0x1
0x148d2: cmp rdx,rax
0x148d5: ja 0x148c8
0x148d7: je 0x151a4
0x14d00: test byte ptr [r13+0xb0],0x1
0x14d08: jne 0x14d18
0x15120: mov dword ptr [rsp+0x4c],0x0
0x15128: jmp 0x146d8
0x1513d: mov rdi,rbp
0x15140: call 0x83b0
0x15145: mov dword ptr [rsp+0x4c],0x0
0x1514d: jmp 0x146d8
0x15313: lea rcx,[rip+0x28e6]
0x1531a: lea rsi,[rip+0x2307]
0x15321: lea rdi,[rip+0x23c5]
0x15328: mov edx,0x5b0
0x1532d: call 0x1c90
0x15351: lea rcx,[rip+0x28a8]
0x15358: lea rsi,[rip+0x22c9]
0x1535f: lea rdi,[rip+0x237d]
0x15366: mov edx,0x5af
0x1536b: call 0x1c90
0x15370: call 0x1c20
0x15375: nop 
0x15376: nop word ptr cs:[rax+rax]
0x153f0: mov rax,qword ptr [rip+0x206f89]
0x153f7: mov qword ptr [rip+0x206f82],rdi
0x153fe: ret 
0x1594f: nop 
0x15950: push r15
0x15952: push r14
0x15954: push r13
0x15956: push r12
0x15958: mov r12,rdi
0x1595b: push rbp
0x1595c: push rbx
0x1595d: mov rbp,r8
0x15960: mov rbx,rdx
0x15963: mov rdx,rbp
0x15966: sub rsp,0x28
0x1596a: shr rdx,0x3f
0x1596e: mov rax,qword ptr [rsp+0x70]
0x15973: mov edi,edx
0x15975: mov r8d,dword ptr [rsp+0x78]
0x1597a: shr rax,0x3f
0x1597e: or dil,al
0x15981: jne 0x15a50
0x15987: test rbx,rbx
0x1598a: js 0x15a50
0x15990: mov r15,rbx
0x15993: add r15,rbp
0x15996: jo 0x15a50
0x1599c: test rbp,rbp
0x1599f: mov r14,rcx
0x159a2: mov rcx,r9
0x159a5: je 0x15a60
0x159ab: xor r13d,r13d
0x159ae: test rbx,rbx
0x159b1: mov qword ptr [rsp+0x8],rsi
0x159b6: jne 0x15a00
0x159b8: movzx r8d,r8b
0x159bc: mov rdx,r15
0x159bf: mov rsi,r14
0x159c2: push r8
0x159c4: push qword ptr [rsp+0x70]
0x159c8: mov rdi,r12
0x159cb: mov r9,qword ptr [rsp+0x80]
0x159d3: mov r8,qword ptr [rsp+0x70]
0x159d8: call 0x154d0
0x159dd: mov rdi,r13
0x159e0: mov rbx,rax
0x159e3: call 0x1b00
0x159e8: pop rax
0x159e9: pop rdx
0x159ea: add rsp,0x28
0x159ee: mov rax,rbx
0x159f1: pop rbx
0x159f2: pop rbp
0x159f3: pop r12
0x159f5: pop r13
0x159f7: pop r14
0x159f9: pop r15
0x159fb: ret 
0x15a00: mov rdi,r15
0x15a03: mov dword ptr [rsp+0x1c],r8d
0x15a08: mov qword ptr [rsp+0x10],r9
0x15a0d: call 0x1da0
0x15a12: test rax,rax
0x15a15: mov r13,rax
0x15a18: je 0x15a50
0x15a1a: mov rsi,qword ptr [rsp+0x8]
0x15a1f: mov rdx,rbx
0x15a22: mov rdi,rax
0x15a25: call 0x1d70
0x15a2a: lea rdi,[r13+rbx]
0x15a2f: mov rsi,r14
0x15a32: mov rdx,rbp
0x15a35: mov r14,r13
0x15a38: call 0x1d70
0x15a3d: mov rcx,qword ptr [rsp+0x10]
0x15a42: mov r8d,dword ptr [rsp+0x1c]
0x15a47: jmp 0x159b8
0x15a50: mov rbx,-0x2
0x15a57: jmp 0x159ea
0x15a60: mov r14,rsi
0x15a63: xor r13d,r13d
0x15a66: jmp 0x159b8
0x15a70: mov eax,edx
0x15a72: push r14
0x15a74: push r13
0x15a76: and eax,0x1
0x15a79: push r12
0x15a7b: push rbp
0x15a7c: cmp eax,0x1
0x15a7f: push rbx
0x15a80: mov rbx,rdi
0x15a83: sbb r14,r14
0x15a86: mov qword ptr [rdi],0x0
0x15a8d: mov qword ptr [rdi+0x8],0x0
0x15a95: and r14d,0xfd4fca
0x15a9c: mov qword ptr [rdi+0x10],0x0
0x15aa4: mov edi,0x100
0x15aa9: mov r12,rsi
0x15aac: mov ebp,edx
0x15aae: add r14,0x3b2fc
0x15ab5: call 0x1da0
0x15aba: test rax,rax
0x15abd: mov qword ptr [rbx+0x20],rax
0x15ac1: je 0x15b70
0x15ac7: mov r13,rbp
0x15aca: shl r13,0x15
0x15ace: and r13d,0x400000
0x15ad5: or r13,r14
0x15ad8: test bpl,0x4
0x15adc: jne 0x15b40
0x15ade: and byte ptr [rbx+0x38],0x7f
0x15ae2: movzx edx,byte ptr [rbx+0x38]
0x15ae6: shr ebp,0x3
0x15ae9: mov rdi,r12
0x15aec: and ebp,0x1
0x15aef: mov qword ptr [rbx+0x28],0x0
0x15af7: shl ebp,0x4
0x15afa: and edx,-0x11
0x15afd: or ebp,edx
0x15aff: mov byte ptr [rbx+0x38],bpl
0x15b03: call 0x1c10
0x15b08: mov rcx,r13
0x15b0b: mov rdx,rax
0x15b0e: mov rsi,r12
0x15b11: mov rdi,rbx
0x15b14: call 0x14280
0x15b19: cmp eax,0x10
0x15b1c: mov ebp,eax
0x15b1e: je 0x15b58
0x15b20: test eax,eax
0x15b22: jne 0x15b5d
0x15b24: mov rdi,rbx
0x15b27: call 0x15400
0x15b2c: pop rbx
0x15b2d: mov eax,ebp
0x15b2f: pop rbp
0x15b30: pop r12
0x15b32: pop r13
0x15b34: pop r14
0x15b36: ret 
0x15b40: and r13,-0x41
0x15b44: or byte ptr [rbx+0x38],-0x80
0x15b48: or r13,0x100
0x15b4f: jmp 0x15ae2
0x15b58: mov ebp,0x8
0x15b5d: mov rdi,qword ptr [rbx+0x20]
0x15b61: call 0x1b00
0x15b66: mov qword ptr [rbx+0x20],0x0
0x15b6e: jmp 0x15b2c
0x15b70: mov ebp,0xc
0x15b75: pop rbx
0x15b76: mov eax,ebp
0x15b78: pop rbp
0x15b79: pop r12
0x15b7b: pop r13
0x15b7d: pop r14
0x15b7f: ret 
0x15b80: push r13
0x15b82: push r12
0x15b84: push rbp
0x15b85: push rbx
0x15b86: sub rsp,0x8
0x15b8a: cmp edi,0x10
0x15b8d: ja 0x15bf0
0x15b8f: lea rax,[rip+0x20ca]
0x15b96: movsxd rdi,edi
0x15b99: lea rsi,[rip+0x2160]
0x15ba0: mov rbp,rdx
0x15ba3: mov edx,0x5
0x15ba8: mov r12,rcx
0x15bab: add rsi,qword ptr [rax+rdi*8]
0x15baf: xor edi,edi
0x15bb1: call 0x1bf0
0x15bb6: mov rdi,rax
0x15bb9: mov r13,rax
0x15bbc: call 0x1c10
0x15bc1: test r12,r12
0x15bc4: lea rbx,[rax+0x1]
0x15bc8: je 0x15bdd
0x15bca: cmp rbx,r12
0x15bcd: mov rdx,rbx
0x15bd0: ja 0x15bf8
0x15bd2: mov rsi,r13
0x15bd5: mov rdi,rbp
0x15bd8: call 0x1d70
0x15bdd: add rsp,0x8
0x15be1: mov rax,rbx
0x15be4: pop rbx
0x15be5: pop rbp
0x15be6: pop r12
0x15be8: pop r13
0x15bea: ret 
0x15bf0: call 0x1b10
0x15bf5: nop dword ptr [rax]
0x15bf8: lea rdx,[r12-0x1]
0x15bfd: mov byte ptr [rbp+r12-0x1],0x0
0x15c03: jmp 0x15bd2
0x15c10: push rbx
0x15c11: mov rbx,rdi
0x15c14: mov rdi,qword ptr [rdi]
0x15c17: test rdi,rdi
0x15c1a: je 0x15c21
0x15c1c: call 0x9400
0x15c21: mov rdi,qword ptr [rbx+0x20]
0x15c25: mov qword ptr [rbx],0x0
0x15c2c: mov qword ptr [rbx+0x8],0x0
0x15c34: call 0x1b00
0x15c39: mov rdi,qword ptr [rbx+0x28]
0x15c3d: mov qword ptr [rbx+0x20],0x0
0x15c45: call 0x1b00
0x15c4a: mov qword ptr [rbx+0x28],0x0
0x15c52: pop rbx
0x15c53: ret 
0x15c60: test r8d,0xfffffff8
0x15c67: jne 0x15cf8
0x15c6d: push r13
0x15c6f: push r12
0x15c71: mov r13,rdx
0x15c74: push rbp
0x15c75: push rbx
0x15c76: mov r12,rcx
0x15c79: mov ebx,r8d
0x15c7c: mov rbp,rdi
0x15c7f: sub rsp,0x18
0x15c83: test r8b,0x4
0x15c87: jne 0x15cd8
0x15c89: mov rdi,rsi
0x15c8c: mov qword ptr [rsp+0x8],rsi
0x15c91: call 0x1c10
0x15c96: xor ecx,ecx
0x15c98: test byte ptr [rbp+0x38],0x10
0x15c9c: mov rdx,rax
0x15c9f: mov rsi,qword ptr [rsp+0x8]
0x15ca4: je 0x15ce6
0x15ca6: sub rsp,0x8
0x15caa: push rbx
0x15cab: push 0x0
0x15cad: push 0x0
0x15caf: mov rdi,rbp
0x15cb2: mov r9,rdx
0x15cb5: mov r8,rdx
0x15cb8: call 0x100f0
0x15cbd: add rsp,0x20
0x15cc1: test eax,eax
0x15cc3: setne al
0x15cc6: add rsp,0x18
0x15cca: pop rbx
0x15ccb: movzx eax,al
0x15cce: pop rbp
0x15ccf: pop r12
0x15cd1: pop r13
0x15cd3: ret 
0x15cd8: test byte ptr [rbp+0x38],0x10
0x15cdc: mov rcx,qword ptr [rcx]
0x15cdf: mov rdx,qword ptr [r12+0x8]
0x15ce4: jne 0x15ca6
0x15ce6: sub rsp,0x8
0x15cea: push rbx
0x15ceb: push r12
0x15ced: push r13
0x15cef: jmp 0x15caf
0x15cf8: mov eax,0x2
0x15cfd: ret 
0x15d00: sub rsp,0x8
0x15d04: mov r9,rdx
0x15d07: push 0x1
0x15d09: push r8
0x15d0b: xor r8d,r8d
0x15d0e: call 0x154d0
0x15d13: add rsp,0x18
0x15d17: ret 
0x15d40: sub rsp,0x8
0x15d44: push 0x1
0x15d46: push qword ptr [rsp+0x20]
0x15d4a: push qword ptr [rsp+0x20]
0x15d4e: push 0x0
0x15d50: call 0x15950
0x15d55: add rsp,0x28
0x15d59: ret 
0x15d60: sub rsp,0x8
0x15d64: push 0x0
0x15d66: push qword ptr [rsp+0x28]
0x15d6a: push qword ptr [rsp+0x28]
0x15d6e: push qword ptr [rsp+0x28]
0x15d72: call 0x15950
0x15d77: add rsp,0x28
0x15d7b: ret 
0x15d80: test rdx,rdx
0x15d83: jne 0x15da8
0x15d85: and byte ptr [rdi+0x38],-0x7
0x15d89: mov qword ptr [rsi],0x0
0x15d90: mov qword ptr [rsi+0x10],0x0
0x15d98: mov qword ptr [rsi+0x8],0x0
0x15da0: ret 
0x15da8: movzx eax,byte ptr [rdi+0x38]
0x15dac: and eax,-0x7
0x15daf: or eax,0x2
0x15db2: mov byte ptr [rdi+0x38],al
0x15db5: mov qword ptr [rsi],rdx
0x15db8: mov qword ptr [rsi+0x8],rcx
0x15dbc: mov qword ptr [rsi+0x10],r8
0x15dc0: ret 
0x15dd0: push r12
0x15dd2: push rbp
0x15dd3: mov rbp,rdi
0x15dd6: push rbx
0x15dd7: call 0x1b70
0x15ddc: mov ebx,dword ptr [rbp]
0x15ddf: mov rdi,rbp
0x15de2: mov r12,rax
0x15de5: call 0x7790
0x15dea: and ebx,0x20
0x15ded: test ebx,ebx
0x15def: jne 0x15e08
0x15df1: test eax,eax
0x15df3: je 0x15dff
0x15df5: test r12,r12
0x15df8: mov eax,0xffffffff
0x15dfd: je 0x15e38
0x15dff: pop rbx
0x15e00: pop rbp
0x15e01: pop r12
0x15e03: ret 
0x15e08: test eax,eax
0x15e0a: jne 0x15e28
0x15e0c: call 0x1b20
0x15e11: mov dword ptr [rax],0x0
0x15e17: mov eax,0xffffffff
0x15e1c: pop rbx
0x15e1d: pop rbp
0x15e1e: pop r12
0x15e20: ret 
0x15e28: pop rbx
0x15e29: mov eax,0xffffffff
0x15e2e: pop rbp
0x15e2f: pop r12
0x15e31: ret 
0x15e38: call 0x1b20
0x15e3d: cmp dword ptr [rax],0x9
0x15e40: pop rbx
0x15e41: pop rbp
0x15e42: pop r12
0x15e44: setne al
0x15e47: movzx eax,al
0x15e4a: neg eax
0x15e4c: ret 
0x15eb0: sub rsp,0x8
0x15eb4: mov edi,0xe
0x15eb9: call 0x1dd0
0x15ebe: test rax,rax
0x15ec1: je 0x15ee0
0x15ec3: cmp byte ptr [rax],0x0
0x15ec6: lea rdx,[rip+0x1fcb]
0x15ecd: cmove rax,rdx
0x15ed1: add rsp,0x8
0x15ed5: ret 
0x15ee0: lea rax,[rip+0x1fb1]
0x15ee7: add rsp,0x8
0x15eeb: ret 
0x15ef0: push r15
0x15ef2: push r14
0x15ef4: mov r15,rdx
0x15ef7: push r13
0x15ef9: push r12
0x15efb: lea r12,[rip+0x205aae]
0x15f02: push rbp
0x15f03: lea rbp,[rip+0x205aae]
0x15f0a: push rbx
0x15f0b: mov r13d,edi
0x15f0e: mov r14,rsi
0x15f11: sub rbp,r12
0x15f14: sub rsp,0x8
0x15f18: sar rbp,0x3
0x15f1c: call 0x1a98
0x15f21: test rbp,rbp
0x15f24: je 0x15f46
0x15f26: xor ebx,ebx
0x15f28: nop dword ptr [rax+rax]
0x15f30: mov rdx,r15
0x15f33: mov rsi,r14
0x15f36: mov edi,r13d
0x15f39: call qword ptr [r12+rbx*8]
0x15f3d: add rbx,0x1
0x15f41: cmp rbp,rbx
0x15f44: jne 0x15f30
0x15f46: add rsp,0x8
0x15f4a: pop rbx
0x15f4b: pop rbp
0x15f4c: pop r12
0x15f4e: pop r13
0x15f50: pop r14
0x15f52: pop r15
0x15f54: ret 
0x15f60: rep ret 
