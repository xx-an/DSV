0x13b0: sub rsp,0x8
0x13b4: mov rax,qword ptr [rip+0x206c1d]
0x13bb: test rax,rax
0x13be: je 0x13c2
0x13c0: call rax
0x13c2: add rsp,0x8
0x13c6: ret 
0x13d6: jmp qword ptr [rip+0x206a5c]
0x13f0: jmp qword ptr [rip+0x206a52]
0x1430: jmp qword ptr [rip+0x206a32]
0x1440: jmp qword ptr [rip+0x206a2a]
0x1480: jmp qword ptr [rip+0x206a0a]
0x14d0: jmp qword ptr [rip+0x2069e2]
0x14f0: jmp qword ptr [rip+0x2069d2]
0x1520: jmp qword ptr [rip+0x2069ba]
0x1550: jmp qword ptr [rip+0x2069a2]
0x1570: jmp qword ptr [rip+0x206992]
0x15a0: jmp qword ptr [rip+0x20697a]
0x15b0: jmp qword ptr [rip+0x206972]
0x15d0: jmp qword ptr [rip+0x206962]
0x15e0: jmp qword ptr [rip+0x20695a]
0x15f0: jmp qword ptr [rip+0x206952]
0x1660: jmp qword ptr [rip+0x20691a]
0x16c0: jmp qword ptr [rip+0x2068ea]
0x16d0: jmp qword ptr [rip+0x2068e2]
0x16e0: jmp qword ptr [rip+0x2068da]
0x16f0: jmp qword ptr [rip+0x2068f2]
0x190d: lea rsi,[rip+0x3f24]
0x1914: mov qword ptr [rsp+0x10],rax
0x1919: lea rax,[rip+0x3ad7]
0x1920: test r13d,r13d
0x1923: mov edx,0x5
0x1928: cmove rsi,rax
0x192c: xor edi,edi
0x192e: call 0x14a0
0x1933: mov rcx,qword ptr [rsp+0x10]
0x1938: mov rdx,rax
0x193b: xor edi,edi
0x193d: xor esi,esi
0x193f: xor eax,eax
0x1941: call 0x1640
0x1946: mov rdi,qword ptr [rsp+0x8]
0x194b: call 0x13f0
0x1a05: lea rsi,[rip+0x3a94]
0x1a0c: mov rbp,rax
0x1a0f: mov edx,0x5
0x1a14: xor edi,edi
0x1a16: call 0x14a0
0x1a1b: mov rcx,rbp
0x1a1e: mov rdx,rax
0x1a21: mov esi,r12d
0x1a24: xor edi,edi
0x1a26: xor eax,eax
0x1a28: call 0x1640
0x1a2d: jmp 0x181b
0x1af6: lea rsi,[rip+0x3991]
0x1afd: xor edi,edi
0x1aff: mov edx,0x5
0x1b04: mov rbp,rax
0x1b07: call 0x14a0
0x1b0c: mov esi,dword ptr [rsp+0x18]
0x1b10: mov rdx,rax
0x1b13: mov rcx,rbp
0x1b16: xor edi,edi
0x1b18: xor eax,eax
0x1b1a: call 0x1640
0x1b1f: jmp 0x181b
0x1b53: jmp 0x197a
0x1b79: test r14b,r14b
0x1b7c: je 0x1805
0x1b82: test r15b,r15b
0x1b85: jne 0x1872
0x1b8b: jmp 0x1805
0x1bf5: mov r8d,dword ptr [rsp+0x10]
0x1bfa: jmp 0x1a64
0x1c28: jmp 0x198f
0x1c67: lea rsi,[rip+0x3820]
0x1c6e: mov edx,0x5
0x1c73: xor edi,edi
0x1c75: mov rbp,rax
0x1c78: call 0x14a0
0x1c7d: mov esi,dword ptr [rsp+0x18]
0x1c81: mov rdx,rax
0x1c84: mov rcx,rbp
0x1c87: xor edi,edi
0x1c89: xor eax,eax
0x1c8b: call 0x1640
0x1c90: mov rsi,qword ptr [rsp+0x8]
0x1c95: mov edi,0x4
0x1c9a: call 0x4100
0x1c9f: mov edx,0x5
0x1ca4: mov rbp,rax
0x1ca7: lea rsi,[rip+0x37e0]
0x1cae: jmp 0x1a14
0x1cd4: mov edi,ebx
0x1cd6: call 0x1e50
0x1cf4: lea rsi,[rip+0x3793]
0x1cfb: xor edi,edi
0x1cfd: mov edx,0x5
0x1d02: mov rbp,rax
0x1d05: call 0x14a0
0x1d0a: mov esi,dword ptr [rsp+0x18]
0x1d0e: mov rdx,rax
0x1d11: xor edi,edi
0x1d13: xor eax,eax
0x1d15: mov rcx,rbp
0x1d18: call 0x1640
0x1d1d: cmp qword ptr [rsp+0x8],0x0
0x1d23: jne 0x1c90
0x1d29: jmp 0x181b
0x1d6a: hlt 
0x1d6b: nop dword ptr [rax+rax]
0x1d70: lea rdi,[rip+0x206309]
0x1d77: push rbp
0x1d78: lea rax,[rip+0x206301]
0x1d7f: cmp rax,rdi
0x1d82: mov rbp,rsp
0x1d85: je 0x1da0
0x1d87: mov rax,qword ptr [rip+0x20623a]
0x1d8e: test rax,rax
0x1d91: je 0x1da0
0x1d93: pop rbp
0x1d94: jmp rax
0x1da0: pop rbp
0x1da1: ret 
0x1db0: lea rdi,[rip+0x2062c9]
0x1db7: lea rsi,[rip+0x2062c2]
0x1dbe: push rbp
0x1dbf: sub rsi,rdi
0x1dc2: mov rbp,rsp
0x1dc5: sar rsi,0x3
0x1dc9: mov rax,rsi
0x1dcc: shr rax,0x3f
0x1dd0: add rsi,rax
0x1dd3: sar rsi
0x1dd6: je 0x1df0
0x1dd8: mov rax,qword ptr [rip+0x206201]
0x1ddf: test rax,rax
0x1de2: je 0x1df0
0x1de4: pop rbp
0x1de5: jmp rax
0x1df0: pop rbp
0x1df1: ret 
0x1e11: push rbp
0x1e12: mov rbp,rsp
0x1e15: je 0x1e23
0x1e17: mov rdi,qword ptr [rip+0x2061ea]
0x1e1e: call 0x16f0
0x1e23: call 0x1d70
0x1e28: mov byte ptr [rip+0x206299],0x1
0x1e2f: pop rbp
0x1e30: ret 
0x1e40: push rbp
0x1e41: mov rbp,rsp
0x1e44: pop rbp
0x1e45: jmp 0x1db0
0x21f0: mov qword ptr [rip+0x205ee1],rdi
0x21f7: ret 
0x2200: mov byte ptr [rip+0x205ec9],dil
0x2207: ret 
0x2210: push rbp
0x2211: push rbx
0x2212: sub rsp,0x8
0x2216: mov rdi,qword ptr [rip+0x205e6b]
0x221d: call 0x4fb0
0x2222: test eax,eax
0x2224: je 0x223c
0x2226: call 0x1410
0x222b: cmp byte ptr [rip+0x205e9e],0x0
0x2232: mov rbx,rax
0x2235: je 0x2253
0x2237: cmp dword ptr [rax],0x20
0x223a: jne 0x2253
0x223c: mov rdi,qword ptr [rip+0x205e7d]
0x2243: call 0x4fb0
0x2248: test eax,eax
0x224a: jne 0x2292
0x224c: add rsp,0x8
0x2250: pop rbx
0x2251: pop rbp
0x2252: ret 
0x2253: lea rsi,[rip+0x3695]
0x225a: xor edi,edi
0x225c: mov edx,0x5
0x2261: call 0x14a0
0x2266: mov rdi,qword ptr [rip+0x205e6b]
0x226d: mov rbp,rax
0x2270: test rdi,rdi
0x2273: je 0x229d
0x2275: call 0x41d0
0x227a: mov esi,dword ptr [rbx]
0x227c: lea rdx,[rip+0x3678]
0x2283: mov rcx,rax
0x2286: mov r8,rbp
0x2289: xor edi,edi
0x228b: xor eax,eax
0x228d: call 0x1640
0x2292: mov edi,dword ptr [rip+0x205d80]
0x2298: call 0x1430
0x229d: mov esi,dword ptr [rbx]
0x229f: lea rdx,[rip+0x3659]
0x22a6: mov rcx,rax
0x22a9: xor edi,edi
0x22ab: xor eax,eax
0x22ad: call 0x1640
0x22b2: jmp 0x2292
0x2338: nop dword ptr [rax+rax]
0x2405: mov qword ptr [r15],rdi
0x2440: push r13
0x2442: push r12
0x2444: mov r13,r8
0x2447: push rbp
0x2448: push rbx
0x2449: mov rbp,rdx
0x244c: mov r12,rcx
0x244f: sub rsp,0xe8
0x2456: test al,al
0x2458: je 0x2494
0x245a: movaps [rsp+0x60],xmm0
0x245f: movaps [rsp+0x70],xmm1
0x2464: movaps [rsp+0x80],xmm2
0x246c: movaps [rsp+0x90],xmm3
0x2474: movaps [rsp+0xa0],xmm4
0x247c: movaps [rsp+0xb0],xmm5
0x2484: movaps [rsp+0xc0],xmm6
0x248c: movaps [rsp+0xd0],xmm7
0x2494: mov rax,qword ptr fs:0x28
0x249d: mov qword ptr [rsp+0x28],rax
0x24a2: xor eax,eax
0x24a4: cmp edi,0x2
0x24a7: mov ebx,dword ptr [rip+0x205bf3]
0x24ad: mov dword ptr [rip+0x205be9],0x0
0x24b7: je 0x24f0
0x24b9: mov rax,qword ptr [rsp+0x28]
0x24be: xor rax,qword ptr fs:0x28
0x24c7: mov dword ptr [rip+0x205bd3],ebx
0x24cd: mov dword ptr [rip+0x205bb9],0x0
0x24d7: jne 0x257a
0x24dd: add rsp,0xe8
0x24e4: pop rbx
0x24e5: pop rbp
0x24e6: pop r12
0x24e8: pop r13
0x24ea: ret 
0x24f0: lea rcx,[rip+0x205689]
0x24f7: lea rdx,[rip+0x3404]
0x24fe: xor r8d,r8d
0x2501: mov qword ptr [rsp+0x8],r9
0x2506: call 0x14e0
0x250b: cmp eax,-0x1
0x250e: je 0x24b9
0x2510: cmp eax,0x68
0x2513: mov r9,qword ptr [rsp+0x8]
0x2518: je 0x2570
0x251a: cmp eax,0x76
0x251d: jne 0x24b9
0x251f: lea rax,[rsp+0x110]
0x2527: mov rdi,qword ptr [rip+0x205b5a]
0x252e: lea r8,[rsp+0x10]
0x2533: mov rcx,r13
0x2536: mov rdx,r12
0x2539: mov rsi,rbp
0x253c: mov qword ptr [rsp+0x18],rax
0x2541: lea rax,[rsp+0x30]
0x2546: mov dword ptr [rsp+0x10],0x30
0x254e: mov dword ptr [rsp+0x14],0x30
0x2556: mov qword ptr [rsp+0x20],rax
0x255b: call 0x4830
0x2560: xor edi,edi
0x2562: call 0x1690
0x2567: nop word ptr [rax+rax]
0x2570: xor edi,edi
0x2572: call r9
0x2575: jmp 0x24b9
0x257a: call 0x14d0
0x257f: nop 
0x25a4: movaps [rsp+0x50],xmm0
0x25a9: movaps [rsp+0x60],xmm1
0x25ae: movaps [rsp+0x70],xmm2
0x25b3: movaps [rsp+0x80],xmm3
0x25bb: movaps [rsp+0x90],xmm4
0x25c3: movaps [rsp+0xa0],xmm5
0x25cb: movaps [rsp+0xb0],xmm6
0x25d3: movaps [rsp+0xc0],xmm7
0x2677: nop word ptr [rax+rax]
0x26b4: jmp 0x2688
0x26b6: call 0x14d0
0x26bb: nop dword ptr [rax+rax]
0x275f: nop 
0x2760: push rbp
0x2761: push rbx
0x2762: mov rbp,rdi
0x2765: mov ebx,esi
0x2767: sub rsp,0x8
0x276b: call 0x5140
0x2770: movzx edx,byte ptr [rax]
0x2773: and edx,-0x21
0x2776: cmp dl,0x55
0x2779: je 0x27f0
0x277b: cmp dl,0x47
0x277e: je 0x27a0
0x2780: lea rax,[rip+0x31e4]
0x2787: lea rdx,[rip+0x31df]
0x278e: cmp ebx,0x9
0x2791: cmovne rax,rdx
0x2795: add rsp,0x8
0x2799: pop rbx
0x279a: pop rbp
0x279b: ret 
0x27a0: movzx edx,byte ptr [rax+0x1]
0x27a4: and edx,-0x21
0x27a7: cmp dl,0x42
0x27aa: jne 0x2780
0x27ac: cmp byte ptr [rax+0x2],0x31
0x27b0: jne 0x2780
0x27b2: cmp byte ptr [rax+0x3],0x38
0x27b6: jne 0x2780
0x27b8: cmp byte ptr [rax+0x4],0x30
0x27bc: jne 0x2780
0x27be: cmp byte ptr [rax+0x5],0x33
0x27c2: jne 0x2780
0x27c4: cmp byte ptr [rax+0x6],0x30
0x27c8: jne 0x2780
0x27ca: cmp byte ptr [rax+0x7],0x0
0x27ce: jne 0x2780
0x27d0: cmp byte ptr [rbp],0x60
0x27d4: lea rax,[rip+0x3189]
0x27db: lea rdx,[rip+0x3186]
0x27e2: cmovne rax,rdx
0x27e6: add rsp,0x8
0x27ea: pop rbx
0x27eb: pop rbp
0x27ec: ret 
0x27f0: movzx edx,byte ptr [rax+0x1]
0x27f4: and edx,-0x21
0x27f7: cmp dl,0x54
0x27fa: jne 0x2780
0x27fc: movzx edx,byte ptr [rax+0x2]
0x2800: and edx,-0x21
0x2803: cmp dl,0x46
0x2806: jne 0x2780
0x280c: cmp byte ptr [rax+0x3],0x2d
0x2810: jne 0x2780
0x2816: cmp byte ptr [rax+0x4],0x38
0x281a: jne 0x2780
0x2820: cmp byte ptr [rax+0x5],0x0
0x2824: jne 0x2780
0x282a: cmp byte ptr [rbp],0x60
0x282e: lea rax,[rip+0x3127]
0x2835: lea rdx,[rip+0x3124]
0x283c: cmovne rax,rdx
0x2840: add rsp,0x8
0x2844: pop rbx
0x2845: pop rbp
0x2846: ret 
0x2923: xor r11d,r11d
0x2926: mov rax,rbp
0x2929: mov r8d,r12d
0x292c: mov rbp,r11
0x292f: mov r11,rax
0x2932: nop word ptr [rax+rax]
0x2938: cmp r11,rbp
0x293b: setne r12b
0x293f: cmp r11,-0x1
0x2943: jne 0x2952
0x2945: mov rax,qword ptr [rsp+0x10]
0x294a: cmp byte ptr [rax+rbp],0x0
0x294e: setne r12b
0x2952: test r12b,r12b
0x2955: je 0x2fb0
0x295b: cmp dword ptr [rsp+0x8],0x2
0x2960: mov rdi,qword ptr [rsp+0x10]
0x2965: lea r9,[rdi+rbp]
0x2969: setne al
0x296c: and al,byte ptr [rsp+0xd]
0x2970: mov r10d,eax
0x2973: je 0x2a20
0x2979: mov rax,qword ptr [rsp+0x18]
0x297e: test rax,rax
0x2981: je 0x2db0
0x2987: cmp r11,-0x1
0x298b: lea rbx,[rbp+rax]
0x2990: jne 0x29c0
0x2992: cmp rax,0x1
0x2996: jbe 0x29c0
0x2998: mov byte ptr [rsp+0x38],r8b
0x299d: mov byte ptr [rsp+0x30],r10b
0x29a2: mov qword ptr [rsp+0x28],r9
0x29a7: call 0x14c0
0x29ac: movzx r8d,byte ptr [rsp+0x38]
0x29b2: movzx r10d,byte ptr [rsp+0x30]
0x29b8: mov r11,rax
0x29bb: mov r9,qword ptr [rsp+0x28]
0x29c0: cmp rbx,r11
0x29c3: mov byte ptr [rsp+0x28],r10b
0x29c8: ja 0x2f80
0x29ce: mov rdx,qword ptr [rsp+0x18]
0x29d3: mov rsi,qword ptr [rsp+0x48]
0x29d8: mov rdi,r9
0x29db: mov qword ptr [rsp+0x40],r11
0x29e0: mov byte ptr [rsp+0x38],r8b
0x29e5: mov qword ptr [rsp+0x30],r9
0x29ea: call 0x1550
0x29ef: test eax,eax
0x29f1: mov r9,qword ptr [rsp+0x30]
0x29f6: movzx r8d,byte ptr [rsp+0x38]
0x29fc: mov r11,qword ptr [rsp+0x40]
0x2a01: jne 0x2f80
0x2a07: cmp byte ptr [rsp+0xf],0x0
0x2a0c: movzx r10d,byte ptr [rsp+0x28]
0x2a12: jne 0x3995
0x2a18: nop dword ptr [rax+rax]
0x2a20: movzx ebx,byte ptr [r9]
0x2a24: cmp bl,0x7e
0x2a27: ja 0x2d48
0x2a2d: lea rcx,[rip+0x2fb8]
0x2a34: movzx edx,bl
0x2a37: movsxd rax,dword ptr [rcx+rdx*4]
0x2a3b: add rax,rcx
0x2a3e: jmp rax
0x2a78: cmp byte ptr [rsp+0xd],0x1
0x2a7d: jne 0x2b92
0x2a83: test dl,dl
0x2a85: jne 0x2b92
0x2a8b: mov rsi,qword ptr [rsp+0x20]
0x2a90: test rsi,rsi
0x2a93: je 0x2aa9
0x2a95: mov edx,ebx
0x2a97: shr dl,0x5
0x2a9a: movzx edx,dl
0x2a9d: mov edx,dword ptr [rsi+rdx*4]
0x2aa0: btl edx,ebx
0x2aa3: jb 0x2bf3
0x2aa9: test r10b,r10b
0x2aac: jne 0x2bf3
0x2ab2: xor eax,0x1
0x2ab5: add rbp,0x1
0x2ab9: and eax,r8d
0x2abc: test al,al
0x2abe: je 0x2ae0
0x2ac0: cmp r13,r15
0x2ac3: jbe 0x2aca
0x2ac5: mov byte ptr [r14+r15],0x27
0x2aca: lea rax,[r15+0x1]
0x2ace: cmp r13,rax
0x2ad1: jbe 0x2ad9
0x2ad3: mov byte ptr [r14+r15+0x1],0x27
0x2ad9: add r15,0x2
0x2add: xor r8d,r8d
0x2ae0: cmp r15,r13
0x2ae3: jae 0x2ae9
0x2ae5: mov byte ptr [r14+r15],bl
0x2ae9: movzx edi,byte ptr [rsp+0xe]
0x2aee: add r15,0x1
0x2af2: mov eax,0x0
0x2af7: test r12b,r12b
0x2afa: cmove edi,eax
0x2afd: mov byte ptr [rsp+0xe],dil
0x2b02: jmp 0x2938
0x2b92: cmp byte ptr [rsp+0xf],0x0
0x2b97: jne 0x2a8b
0x2b9d: jmp 0x2aa9
0x2bf3: cmp dword ptr [rsp+0x8],0x2
0x2bf8: sete dl
0x2bfb: cmp byte ptr [rsp+0xf],0x0
0x2c00: mov eax,edx
0x2c02: jne 0x3458
0x2c08: mov eax,r8d
0x2c0b: xor eax,0x1
0x2c0e: and al,dl
0x2c10: je 0x2c41
0x2c12: cmp r13,r15
0x2c15: jbe 0x2c1c
0x2c17: mov byte ptr [r14+r15],0x27
0x2c1c: lea rdx,[r15+0x1]
0x2c20: cmp r13,rdx
0x2c23: jbe 0x2c2b
0x2c25: mov byte ptr [r14+r15+0x1],0x24
0x2c2b: lea rdx,[r15+0x2]
0x2c2f: cmp r13,rdx
0x2c32: jbe 0x2c3a
0x2c34: mov byte ptr [r14+r15+0x2],0x27
0x2c3a: add r15,0x3
0x2c3e: mov r8d,eax
0x2c41: cmp r13,r15
0x2c44: jbe 0x2c4b
0x2c46: mov byte ptr [r14+r15],0x5c
0x2c4b: add r15,0x1
0x2c4f: add rbp,0x1
0x2c53: jmp 0x2ae0
0x2d40: xor r10d,r10d
0x2d43: nop dword ptr [rax+rax]
0x2d48: cmp qword ptr [rsp+0x58],0x1
0x2d4e: jne 0x30f8
0x2d54: mov qword ptr [rsp+0x38],r11
0x2d59: mov byte ptr [rsp+0x30],r8b
0x2d5e: mov byte ptr [rsp+0x28],r10b
0x2d63: call 0x16e0
0x2d68: mov rcx,qword ptr [rax]
0x2d6b: movzx edx,bl
0x2d6e: movzx r10d,byte ptr [rsp+0x28]
0x2d74: movzx r8d,byte ptr [rsp+0x30]
0x2d7a: mov r11,qword ptr [rsp+0x38]
0x2d7f: mov edi,0x1
0x2d84: movzx eax,word ptr [rcx+rdx*2]
0x2d88: and ax,0x4000
0x2d8c: setne r12b
0x2d90: sete al
0x2d93: and al,byte ptr [rsp+0xd]
0x2d97: test al,al
0x2d99: jne 0x3731
0x2d9f: cmp dword ptr [rsp+0x8],0x2
0x2da4: sete dl
0x2da7: jmp 0x2a78
0x2db0: movzx ebx,byte ptr [r9]
0x2db4: cmp bl,0x7e
0x2db7: ja 0x2d40
0x2db9: lea rcx,[rip+0x2e28]
0x2dc0: movzx edx,bl
0x2dc3: movsxd rax,dword ptr [rcx+rdx*4]
0x2dc7: add rax,rcx
0x2dca: jmp rax
0x2f80: xor r10d,r10d
0x2f83: jmp 0x2a20
0x2fb0: cmp dword ptr [rsp+0x8],0x2
0x2fb5: movzx ebx,byte ptr [rsp+0xf]
0x2fba: mov r12d,r8d
0x2fbd: mov rbp,r11
0x2fc0: sete dl
0x2fc3: mov eax,ebx
0x2fc5: test r15,r15
0x2fc8: sete cl
0x2fcb: and eax,edx
0x2fcd: and al,cl
0x2fcf: jne 0x3a36
0x2fd5: mov eax,ebx
0x2fd7: xor eax,0x1
0x2fda: and dl,al
0x2fdc: je 0x394c
0x2fe2: cmp byte ptr [rsp+0x7c],0x0
0x2fe7: je 0x394a
0x2fed: cmp byte ptr [rsp+0xe],0x0
0x2ff2: jne 0x39ed
0x2ff8: test r13,r13
0x2ffb: sete al
0x2ffe: cmp qword ptr [rsp+0x50],0x0
0x3004: setne dl
0x3007: and al,dl
0x3009: je 0x3a2c
0x300f: mov r13,qword ptr [rsp+0x50]
0x3014: lea rbx,[rip+0x2952]
0x301b: mov byte ptr [r14],0x27
0x301f: mov dword ptr [rsp+0x8],0x2
0x3027: mov r15d,0x1
0x302d: mov qword ptr [rsp+0x18],0x1
0x3036: mov byte ptr [rsp+0xf],0x0
0x303b: mov qword ptr [rsp+0x48],rbx
0x3040: mov byte ptr [rsp+0x7c],al
0x3044: jmp 0x2923
0x30f8: lea rax,[rsp+0xa0]
0x3100: cmp r11,-0x1
0x3104: mov qword ptr [rsp+0xa0],0x0
0x3110: mov qword ptr [rsp+0x28],rax
0x3115: jne 0x3144
0x3117: mov rdi,qword ptr [rsp+0x10]
0x311c: mov byte ptr [rsp+0x40],r8b
0x3121: mov byte ptr [rsp+0x38],r10b
0x3126: mov qword ptr [rsp+0x30],r9
0x312b: call 0x14c0
0x3130: movzx r8d,byte ptr [rsp+0x40]
0x3136: movzx r10d,byte ptr [rsp+0x38]
0x313c: mov r11,rax
0x313f: mov r9,qword ptr [rsp+0x30]
0x3144: lea rax,[rsp+0x9c]
0x314c: xor ecx,ecx
0x314e: mov byte ptr [rsp+0x7e],bl
0x3152: mov byte ptr [rsp+0x7d],r8b
0x3157: mov rbx,rcx
0x315a: mov qword ptr [rsp+0x88],r9
0x3162: mov qword ptr [rsp+0x38],rax
0x3167: mov byte ptr [rsp+0x7f],r10b
0x316c: mov qword ptr [rsp+0x80],r15
0x3174: mov qword ptr [rsp+0x40],r14
0x3179: mov qword ptr [rsp+0x70],r13
0x317e: mov qword ptr [rsp+0x30],r11
0x3183: mov rax,qword ptr [rsp+0x10]
0x3188: lea r14,[rbp+rbx]
0x318d: mov rdx,qword ptr [rsp+0x30]
0x3192: mov rcx,qword ptr [rsp+0x28]
0x3197: mov rdi,qword ptr [rsp+0x38]
0x319c: lea r13,[rax+r14]
0x31a0: sub rdx,r14
0x31a3: mov rsi,r13
0x31a6: call 0x4f20
0x31ab: test rax,rax
0x31ae: mov r15,rax
0x31b1: je 0x3201
0x31b3: cmp rax,-0x1
0x31b7: je 0x37d5
0x31bd: cmp rax,-0x2
0x31c1: je 0x3761
0x31c7: cmp dword ptr [rsp+0x8],0x2
0x31cc: sete al
0x31cf: and al,byte ptr [rsp+0xf]
0x31d3: jne 0x3370
0x31d9: mov edi,dword ptr [rsp+0x9c]
0x31e0: call 0x16d0
0x31e5: mov rdi,qword ptr [rsp+0x28]
0x31ea: test eax,eax
0x31ec: mov eax,0x0
0x31f1: cmove r12d,eax
0x31f5: add rbx,r15
0x31f8: call 0x16c0
0x31fd: test eax,eax
0x31ff: je 0x3183
0x3201: mov edx,r12d
0x3204: mov rdi,rbx
0x3207: movzx r8d,byte ptr [rsp+0x7d]
0x320d: xor edx,0x1
0x3210: movzx ebx,byte ptr [rsp+0x7e]
0x3215: movzx r10d,byte ptr [rsp+0x7f]
0x321b: and dl,byte ptr [rsp+0xd]
0x321f: mov r15,qword ptr [rsp+0x80]
0x3227: mov r14,qword ptr [rsp+0x40]
0x322c: mov r13,qword ptr [rsp+0x70]
0x3231: mov r11,qword ptr [rsp+0x30]
0x3236: cmp rdi,0x1
0x323a: jbe 0x383b
0x3240: mov rcx,rdi
0x3243: xor esi,esi
0x3245: movzx r9d,byte ptr [rsp+0xf]
0x324b: add rcx,rbp
0x324e: mov rdi,qword ptr [rsp+0x10]
0x3253: jmp 0x330e
0x3260: cmp dword ptr [rsp+0x8],0x2
0x3265: sete al
0x3268: test r9b,r9b
0x326b: jne 0x3720
0x3271: mov esi,r8d
0x3274: xor esi,0x1
0x3277: and al,sil
0x327a: je 0x32ab
0x327c: cmp r13,r15
0x327f: jbe 0x3286
0x3281: mov byte ptr [r14+r15],0x27
0x3286: lea rsi,[r15+0x1]
0x328a: cmp r13,rsi
0x328d: jbe 0x3295
0x328f: mov byte ptr [r14+r15+0x1],0x24
0x3295: lea rsi,[r15+0x2]
0x3299: cmp r13,rsi
0x329c: jbe 0x32a4
0x329e: mov byte ptr [r14+r15+0x2],0x27
0x32a4: add r15,0x3
0x32a8: mov r8d,eax
0x32ab: cmp r13,r15
0x32ae: jbe 0x32b5
0x32b0: mov byte ptr [r14+r15],0x5c
0x32b5: lea rax,[r15+0x1]
0x32b9: cmp r13,rax
0x32bc: jbe 0x32cb
0x32be: mov eax,ebx
0x32c0: shr al,0x6
0x32c3: add eax,0x30
0x32c6: mov byte ptr [r14+r15+0x1],al
0x32cb: lea rax,[r15+0x2]
0x32cf: cmp r13,rax
0x32d2: jbe 0x32e4
0x32d4: mov eax,ebx
0x32d6: shr al,0x3
0x32d9: and eax,0x7
0x32dc: add eax,0x30
0x32df: mov byte ptr [r14+r15+0x2],al
0x32e4: and ebx,0x7
0x32e7: add rbp,0x1
0x32eb: add r15,0x3
0x32ef: add ebx,0x30
0x32f2: cmp rbp,rcx
0x32f5: jae 0x2ae0
0x32fb: mov esi,edx
0x32fd: cmp r13,r15
0x3300: jbe 0x3306
0x3302: mov byte ptr [r14+r15],bl
0x3306: movzx ebx,byte ptr [rdi+rbp]
0x330a: add r15,0x1
0x330e: test dl,dl
0x3310: jne 0x3260
0x3316: mov eax,esi
0x3318: xor eax,0x1
0x331b: and eax,r8d
0x331e: test r10b,r10b
0x3321: je 0x3331
0x3323: cmp r13,r15
0x3326: jbe 0x332d
0x3328: mov byte ptr [r14+r15],0x5c
0x332d: add r15,0x1
0x3331: add rbp,0x1
0x3335: cmp rbp,rcx
0x3338: jae 0x2abc
0x333e: test al,al
0x3340: je 0x373e
0x3346: cmp r13,r15
0x3349: jbe 0x3350
0x334b: mov byte ptr [r14+r15],0x27
0x3350: lea rax,[r15+0x1]
0x3354: cmp r13,rax
0x3357: jbe 0x335f
0x3359: mov byte ptr [r14+r15+0x1],0x27
0x335f: add r15,0x2
0x3363: xor r10d,r10d
0x3366: xor r8d,r8d
0x3369: jmp 0x32fd
0x3370: cmp r15,0x1
0x3374: je 0x31d9
0x337a: mov rdi,qword ptr [rsp+0x10]
0x337f: lea rcx,[rdi+r15]
0x3383: lea rdx,[rdi+r14+0x1]
0x3388: lea r8,[rcx+r14]
0x338c: jmp 0x339d
0x3390: add rdx,0x1
0x3394: cmp r8,rdx
0x3397: je 0x31d9
0x339d: movzx ecx,byte ptr [rdx]
0x33a0: sub ecx,0x5b
0x33a3: cmp cl,0x21
0x33a6: ja 0x3390
0x33a8: mov esi,0x1
0x33ad: shl rsi,cl
0x33b0: mov rcx,rsi
0x33b3: movabsq rsi,0x20000002b
0x33bd: test rcx,rsi
0x33c0: je 0x3390
0x33c2: mov r14,qword ptr [rsp+0x40]
0x33c7: mov r13,qword ptr [rsp+0x70]
0x33cc: mov rbp,qword ptr [rsp+0x30]
0x33d1: mov dword ptr [rsp+0x8],0x2
0x33d9: cmp byte ptr [rsp+0xd],0x0
0x33de: je 0x33f0
0x33e0: test al,al
0x33e2: mov eax,0x4
0x33e7: cmove eax,dword ptr [rsp+0x8]
0x33ec: mov dword ptr [rsp+0x8],eax
0x33f0: sub rsp,0x8
0x33f4: mov rcx,rbp
0x33f7: mov rsi,r13
0x33fa: push qword ptr [rsp+0x68]
0x33fe: push qword ptr [rsp+0x78]
0x3402: mov rdi,r14
0x3405: push 0x0
0x3407: mov r9d,dword ptr [rsp+0x98]
0x340f: mov r8d,dword ptr [rsp+0x28]
0x3414: mov rdx,qword ptr [rsp+0x30]
0x3419: and r9d,-0x3
0x341d: call 0x2850
0x3422: add rsp,0x20
0x3426: mov r15,rax
0x3429: mov rbx,qword ptr [rsp+0xa8]
0x3431: xor rbx,qword ptr fs:0x28
0x343a: mov rax,r15
0x343d: jne 0x3a43
0x3443: add rsp,0xb8
0x344a: pop rbx
0x344b: pop rbp
0x344c: pop r12
0x344e: pop r13
0x3450: pop r14
0x3452: pop r15
0x3454: ret 
0x3458: mov rbp,r11
0x345b: jmp 0x33d9
0x34c1: test r13,r13
0x34c4: jne 0x3a5a
0x34ca: lea rax,[rip+0x249c]
0x34d1: mov qword ptr [rsp+0x50],0x0
0x34da: mov byte ptr [rsp+0xe],0x1
0x34df: mov byte ptr [rsp+0x7c],0x0
0x34e4: xor r12d,r12d
0x34e7: mov byte ptr [rsp+0xf],0x0
0x34ec: mov qword ptr [rsp+0x18],0x1
0x34f5: mov qword ptr [rsp+0x48],rax
0x34fa: mov r15d,0x1
0x3500: mov dword ptr [rsp+0x8],0x2
0x3508: jmp 0x2923
0x3720: movzx ebx,byte ptr [rsp+0xf]
0x3725: mov rbp,r11
0x3728: mov byte ptr [rsp+0xd],bl
0x372c: jmp 0x33d9
0x3731: movzx edx,byte ptr [rsp+0xd]
0x3736: xor r12d,r12d
0x3739: jmp 0x3240
0x373e: xor r10d,r10d
0x3741: jmp 0x32fd
0x3761: mov r11,qword ptr [rsp+0x30]
0x3766: mov rsi,r14
0x3769: mov rcx,r13
0x376c: mov rax,rbx
0x376f: mov rdi,rbx
0x3772: movzx r8d,byte ptr [rsp+0x7d]
0x3778: movzx ebx,byte ptr [rsp+0x7e]
0x377d: mov r9,qword ptr [rsp+0x88]
0x3785: cmp rsi,r11
0x3788: movzx r10d,byte ptr [rsp+0x7f]
0x378e: mov r15,qword ptr [rsp+0x80]
0x3796: mov r14,qword ptr [rsp+0x40]
0x379b: mov r13,qword ptr [rsp+0x70]
0x37a0: jae 0x37c8
0x37a2: cmp byte ptr [rcx],0x0
0x37a5: jne 0x37b7
0x37a7: jmp 0x37c8
0x37b0: cmp byte ptr [r9+rax],0x0
0x37b5: je 0x37c5
0x37b7: add rax,0x1
0x37bb: lea rdx,[rbp+rax]
0x37c0: cmp r11,rdx
0x37c3: ja 0x37b0
0x37c5: mov rdi,rax
0x37c8: movzx edx,byte ptr [rsp+0xd]
0x37cd: xor r12d,r12d
0x37d0: jmp 0x3236
0x37d5: mov rdi,rbx
0x37d8: movzx r8d,byte ptr [rsp+0x7d]
0x37de: movzx ebx,byte ptr [rsp+0x7e]
0x37e3: movzx r10d,byte ptr [rsp+0x7f]
0x37e9: mov r15,qword ptr [rsp+0x80]
0x37f1: xor r12d,r12d
0x37f4: mov r14,qword ptr [rsp+0x40]
0x37f9: mov r13,qword ptr [rsp+0x70]
0x37fe: mov r11,qword ptr [rsp+0x30]
0x3803: movzx edx,byte ptr [rsp+0xd]
0x3808: jmp 0x3236
0x383b: mov eax,edx
0x383d: jmp 0x2d97
0x394a: mov eax,edx
0x394c: mov rbx,qword ptr [rsp+0x48]
0x3951: test rbx,rbx
0x3954: je 0x3982
0x3956: test al,al
0x3958: je 0x3982
0x395a: movzx ecx,byte ptr [rbx]
0x395d: mov rax,rbx
0x3960: test cl,cl
0x3962: je 0x3982
0x3964: mov rdx,r15
0x3967: sub rax,r15
0x396a: cmp r13,rdx
0x396d: jbe 0x3973
0x396f: mov byte ptr [r14+rdx],cl
0x3973: add rdx,0x1
0x3977: movzx ecx,byte ptr [rax+rdx]
0x397b: test cl,cl
0x397d: jne 0x396a
0x397f: mov r15,rdx
0x3982: cmp r13,r15
0x3985: jbe 0x3429
0x398b: mov byte ptr [r14+r15],0x0
0x3990: jmp 0x3429
0x3995: cmp dword ptr [rsp+0x8],0x2
0x399a: movzx ebx,byte ptr [rsp+0xf]
0x399f: mov rbp,r11
0x39a2: sete al
0x39a5: mov byte ptr [rsp+0xd],bl
0x39a9: jmp 0x33d9
0x39ed: sub rsp,0x8
0x39f1: mov r8d,0x5
0x39f7: mov rcx,r11
0x39fa: push qword ptr [rsp+0x68]
0x39fe: push qword ptr [rsp+0x78]
0x3a02: mov rdi,r14
0x3a05: push qword ptr [rsp+0x38]
0x3a09: mov r9d,dword ptr [rsp+0x98]
0x3a11: mov rdx,qword ptr [rsp+0x30]
0x3a16: mov rsi,qword ptr [rsp+0x70]
0x3a1b: call 0x2850
0x3a20: add rsp,0x20
0x3a24: mov r15,rax
0x3a27: jmp 0x3429
0x3a2c: movzx eax,byte ptr [rsp+0x7c]
0x3a31: jmp 0x394c
0x3a36: mov dword ptr [rsp+0x8],0x2
0x3a3e: jmp 0x33d9
0x3a43: call 0x14d0
0x3a48: mov byte ptr [rsp+0xd],0x0
0x3a4d: jmp 0x34c1
0x3a5a: mov byte ptr [rsp+0xe],0x1
0x3a5f: xor eax,eax
0x3a61: xor r12d,r12d
0x3a64: mov qword ptr [rsp+0x50],0x0
0x3a6d: jmp 0x3014
0x3a7f: call 0x1400
0x3a84: nop 
0x3a86: nop word ptr cs:[rax+rax]
0x3b7c: add rsp,0x20
0x3b80: mov r11,qword ptr [rsp+0x10]
0x3b85: cmp r11,rax
0x3b88: ja 0x3bf1
0x3b8a: lea rsi,[rax+0x1]
0x3b8e: lea rax,[rip+0x20456b]
0x3b95: cmp r12,rax
0x3b98: mov qword ptr [rbx],rsi
0x3b9b: je 0x3baf
0x3b9d: mov rdi,r12
0x3ba0: mov qword ptr [rsp+0x10],rsi
0x3ba5: call 0x13f0
0x3baa: mov rsi,qword ptr [rsp+0x10]
0x3baf: mov rdi,rsi
0x3bb2: mov qword ptr [rsp+0x10],rsi
0x3bb7: call 0x4a10
0x3bbc: sub rsp,0x8
0x3bc0: mov qword ptr [rbx+0x8],rax
0x3bc4: mov r8d,dword ptr [rbp]
0x3bc8: push qword ptr [rbp+0x30]
0x3bcb: push qword ptr [rbp+0x28]
0x3bce: mov rcx,r14
0x3bd1: push r15
0x3bd3: mov r9d,dword ptr [rsp+0x3c]
0x3bd8: mov rdi,rax
0x3bdb: mov rdx,qword ptr [rsp+0x28]
0x3be0: mov rsi,qword ptr [rsp+0x30]
0x3be5: mov r12,rax
0x3be8: call 0x2850
0x3bed: add rsp,0x20
0x3bf1: mov eax,dword ptr [rsp+0x18]
0x3bf5: mov dword ptr [r13],eax
0x3bf9: add rsp,0x28
0x3bfd: mov rax,r12
0x3c00: pop rbx
0x3c01: pop rbp
0x3c02: pop r12
0x3c04: pop r13
0x3c06: pop r14
0x3c08: pop r15
0x3c0a: ret 
0x3c31: call 0x1400
0x3c36: call 0x4c60
0x3c3b: nop dword ptr [rax+rax]
0x3c40: push r12
0x3c42: push rbp
0x3c43: push rbx
0x3c44: mov rbx,rdi
0x3c47: call 0x1410
0x3c4c: mov r12d,dword ptr [rax]
0x3c4f: mov rbp,rax
0x3c52: lea rax,[rip+0x2045a7]
0x3c59: test rbx,rbx
0x3c5c: mov esi,0x38
0x3c61: cmove rbx,rax
0x3c65: mov rdi,rbx
0x3c68: call 0x4c10
0x3c6d: mov dword ptr [rbp],r12d
0x3c71: pop rbx
0x3c72: pop rbp
0x3c73: pop r12
0x3c75: ret 
0x3c80: lea rax,[rip+0x204579]
0x3c87: test rdi,rdi
0x3c8a: cmove rdi,rax
0x3c8e: mov eax,dword ptr [rdi]
0x3c90: ret 
0x3ca0: lea rax,[rip+0x204559]
0x3ca7: test rdi,rdi
0x3caa: cmove rdi,rax
0x3cae: mov dword ptr [rdi],esi
0x3cb0: ret 
0x3cc0: lea rax,[rip+0x204539]
0x3cc7: test rdi,rdi
0x3cca: mov ecx,esi
0x3ccc: cmove rdi,rax
0x3cd0: mov eax,esi
0x3cd2: and ecx,0x1f
0x3cd5: shr al,0x5
0x3cd8: movzx eax,al
0x3cdb: lea rdi,[rdi+rax*4+0x8]
0x3ce0: mov esi,dword ptr [rdi]
0x3ce2: mov eax,esi
0x3ce4: shr eax,cl
0x3ce6: xor edx,eax
0x3ce8: and eax,0x1
0x3ceb: and edx,0x1
0x3cee: shl edx,cl
0x3cf0: xor edx,esi
0x3cf2: mov dword ptr [rdi],edx
0x3cf4: ret 
0x3d00: lea rax,[rip+0x2044f9]
0x3d07: test rdi,rdi
0x3d0a: cmove rdi,rax
0x3d0e: mov eax,dword ptr [rdi+0x4]
0x3d11: mov dword ptr [rdi+0x4],esi
0x3d14: ret 
0x3d20: lea rax,[rip+0x2044d9]
0x3d27: test rdi,rdi
0x3d2a: cmove rdi,rax
0x3d2e: test rsi,rsi
0x3d31: mov dword ptr [rdi],0xa
0x3d37: je 0x3d47
0x3d39: test rdx,rdx
0x3d3c: je 0x3d47
0x3d3e: mov qword ptr [rdi+0x28],rsi
0x3d42: mov qword ptr [rdi+0x30],rdx
0x3d46: ret 
0x3d47: sub rsp,0x8
0x3d4b: call 0x1400
0x3d50: push r15
0x3d52: push r14
0x3d54: lea rax,[rip+0x2044a5]
0x3d5b: push r13
0x3d5d: push r12
0x3d5f: mov r13,rdi
0x3d62: push rbp
0x3d63: push rbx
0x3d64: mov rbx,r8
0x3d67: mov r14,rsi
0x3d6a: mov r15,rdx
0x3d6d: sub rsp,0x18
0x3d71: test r8,r8
0x3d74: cmove rbx,rax
0x3d78: mov qword ptr [rsp+0x8],rcx
0x3d7d: call 0x1410
0x3d82: mov r12d,dword ptr [rax]
0x3d85: mov rbp,rax
0x3d88: lea rax,[rbx+0x8]
0x3d8c: sub rsp,0x8
0x3d90: mov r9d,dword ptr [rbx+0x4]
0x3d94: push qword ptr [rbx+0x30]
0x3d97: mov r8d,dword ptr [rbx]
0x3d9a: push qword ptr [rbx+0x28]
0x3d9d: mov rdx,r15
0x3da0: push rax
0x3da1: mov rcx,qword ptr [rsp+0x28]
0x3da6: mov rsi,r14
0x3da9: mov rdi,r13
0x3dac: call 0x2850
0x3db1: mov dword ptr [rbp],r12d
0x3db5: add rsp,0x38
0x3db9: pop rbx
0x3dba: pop rbp
0x3dbb: pop r12
0x3dbd: pop r13
0x3dbf: pop r14
0x3dc1: pop r15
0x3dc3: ret 
0x3dd0: push r15
0x3dd2: push r14
0x3dd4: lea rax,[rip+0x204425]
0x3ddb: push r13
0x3ddd: push r12
0x3ddf: mov r12,rdx
0x3de2: push rbp
0x3de3: push rbx
0x3de4: mov rbx,rcx
0x3de7: mov r14,rdi
0x3dea: mov r15,rsi
0x3ded: sub rsp,0x38
0x3df1: test rcx,rcx
0x3df4: cmove rbx,rax
0x3df8: xor ebp,ebp
0x3dfa: call 0x1410
0x3dff: test r12,r12
0x3e02: mov r13,rax
0x3e05: mov eax,dword ptr [rax]
0x3e07: sete bpl
0x3e0b: or ebp,dword ptr [rbx+0x4]
0x3e0e: lea r10,[rbx+0x8]
0x3e12: sub rsp,0x8
0x3e16: mov r8d,dword ptr [rbx]
0x3e19: mov rcx,r15
0x3e1c: mov dword ptr [rsp+0x14],eax
0x3e20: push qword ptr [rbx+0x30]
0x3e23: mov rdx,r14
0x3e26: push qword ptr [rbx+0x28]
0x3e29: push r10
0x3e2b: xor esi,esi
0x3e2d: mov r9d,ebp
0x3e30: xor edi,edi
0x3e32: mov qword ptr [rsp+0x40],r10
0x3e37: call 0x2850
0x3e3c: lea rsi,[rax+0x1]
0x3e40: mov qword ptr [rsp+0x48],rax
0x3e45: add rsp,0x20
0x3e49: mov rdi,rsi
0x3e4c: mov qword ptr [rsp+0x18],rsi
0x3e51: call 0x4a10
0x3e56: mov qword ptr [rsp+0x10],rax
0x3e5b: sub rsp,0x8
0x3e5f: push qword ptr [rbx+0x30]
0x3e62: push qword ptr [rbx+0x28]
0x3e65: mov r10,qword ptr [rsp+0x38]
0x3e6a: mov r9d,ebp
0x3e6d: mov r8d,dword ptr [rbx]
0x3e70: mov rcx,r15
0x3e73: mov rdx,r14
0x3e76: mov rdi,rax
0x3e79: push r10
0x3e7b: mov rsi,qword ptr [rsp+0x38]
0x3e80: call 0x2850
0x3e85: mov eax,dword ptr [rsp+0x2c]
0x3e89: add rsp,0x20
0x3e8d: test r12,r12
0x3e90: mov dword ptr [r13],eax
0x3e94: je 0x3e9f
0x3e96: mov r11,qword ptr [rsp+0x28]
0x3e9b: mov qword ptr [r12],r11
0x3e9f: mov rax,qword ptr [rsp+0x10]
0x3ea4: add rsp,0x38
0x3ea8: pop rbx
0x3ea9: pop rbp
0x3eaa: pop r12
0x3eac: pop r13
0x3eae: pop r14
0x3eb0: pop r15
0x3eb2: ret 
0x3ec0: mov rcx,rdx
0x3ec3: xor edx,edx
0x3ec5: jmp 0x3dd0
0x3ed0: mov eax,dword ptr [rip+0x204182]
0x3ed6: push r12
0x3ed8: mov r12,qword ptr [rip+0x204181]
0x3edf: push rbp
0x3ee0: push rbx
0x3ee1: cmp eax,0x1
0x3ee4: jle 0x3f11
0x3ee6: sub eax,0x2
0x3ee9: lea rbx,[r12+0x18]
0x3eee: shl rax,0x4
0x3ef2: lea rbp,[r12+rax+0x28]
0x3ef7: nop word ptr [rax+rax]
0x3f00: mov rdi,qword ptr [rbx]
0x3f03: add rbx,0x10
0x3f07: call 0x13f0
0x3f0c: cmp rbx,rbp
0x3f0f: jne 0x3f00
0x3f11: mov rdi,qword ptr [r12+0x8]
0x3f16: lea rbx,[rip+0x2041e3]
0x3f1d: cmp rdi,rbx
0x3f20: je 0x3f39
0x3f22: call 0x13f0
0x3f27: mov qword ptr [rip+0x20413e],0x100
0x3f32: mov qword ptr [rip+0x20413f],rbx
0x3f39: lea rbx,[rip+0x204130]
0x3f40: cmp r12,rbx
0x3f43: je 0x3f54
0x3f45: mov rdi,r12
0x3f48: call 0x13f0
0x3f4d: mov qword ptr [rip+0x20410c],rbx
0x3f54: pop rbx
0x3f55: mov dword ptr [rip+0x2040f9],0x1
0x3f5f: pop rbp
0x3f60: pop r12
0x3f62: ret 
0x3f70: lea rcx,[rip+0x204289]
0x3f77: mov rdx,-0x1
0x3f7e: jmp 0x3a90
0x3f90: lea rcx,[rip+0x204269]
0x3f97: jmp 0x3a90
0x3fa0: lea rcx,[rip+0x204259]
0x3fa7: mov rsi,rdi
0x3faa: mov rdx,-0x1
0x3fb1: xor edi,edi
0x3fb3: jmp 0x3a90
0x3fc0: lea rcx,[rip+0x204239]
0x3fc7: mov rdx,rsi
0x3fca: mov rsi,rdi
0x3fcd: xor edi,edi
0x3fcf: jmp 0x3a90
0x404f: mov rcx,qword ptr [rsp+0x38]
0x4054: xor rcx,qword ptr fs:0x28
0x405d: jne 0x4069
0x405f: add rsp,0x48
0x4063: ret 
0x4064: call 0x1400
0x4069: call 0x14d0
0x406e: nop 
0x4070: sub rsp,0x48
0x4074: mov rax,rdx
0x4077: mov rdx,rcx
0x407a: mov rcx,qword ptr fs:0x28
0x4083: mov qword ptr [rsp+0x38],rcx
0x4088: xor ecx,ecx
0x408a: cmp esi,0xa
0x408d: je 0x40f0
0x408f: mov dword ptr [rsp],esi
0x4092: mov rcx,rsp
0x4095: mov rsi,rax
0x4098: mov qword ptr [rsp+0x4],0x0
0x40a1: mov qword ptr [rsp+0xc],0x0
0x40aa: mov qword ptr [rsp+0x14],0x0
0x40b3: mov qword ptr [rsp+0x1c],0x0
0x40bc: mov qword ptr [rsp+0x24],0x0
0x40c5: mov qword ptr [rsp+0x2c],0x0
0x40ce: mov dword ptr [rsp+0x34],0x0
0x40d6: call 0x3a90
0x40db: mov rdx,qword ptr [rsp+0x38]
0x40e0: xor rdx,qword ptr fs:0x28
0x40e9: jne 0x40f5
0x40eb: add rsp,0x48
0x40ef: ret 
0x40f0: call 0x1400
0x40f5: call 0x14d0
0x40fa: nop word ptr [rax+rax]
0x4110: mov rcx,rdx
0x4113: mov rdx,rsi
0x4116: mov esi,edi
0x4118: xor edi,edi
0x411a: jmp 0x4070
0x4120: sub rsp,0x48
0x4124: mov ecx,edx
0x4126: mov rax,qword ptr fs:0x28
0x412f: mov qword ptr [rsp+0x38],rax
0x4134: xor eax,eax
0x4136: mov rax,qword ptr [rip+0x2040f3]
0x413d: mov r8,rsp
0x4140: and ecx,0x1f
0x4143: movdqa xmm0,[rip+0x2040b5]
0x414b: mov qword ptr [rsp+0x30],rax
0x4150: mov eax,edx
0x4152: movaps [rsp],xmm0
0x4156: shr al,0x5
0x4159: movzx eax,al
0x415c: lea r9,[r8+rax*4+0x8]
0x4161: movdqa xmm0,[rip+0x2040a7]
0x4169: movaps [rsp+0x10],xmm0
0x416e: movdqa xmm0,[rip+0x2040aa]
0x4176: movaps [rsp+0x20],xmm0
0x417b: mov edx,dword ptr [r9]
0x417e: mov eax,edx
0x4180: shr eax,cl
0x4182: not eax
0x4184: and eax,0x1
0x4187: shl eax,cl
0x4189: mov rcx,r8
0x418c: xor eax,edx
0x418e: mov rdx,rsi
0x4191: mov rsi,rdi
0x4194: mov dword ptr [r9],eax
0x4197: xor edi,edi
0x4199: call 0x3a90
0x419e: mov rsi,qword ptr [rsp+0x38]
0x41a3: xor rsi,qword ptr fs:0x28
0x41ac: jne 0x41b3
0x41ae: add rsp,0x48
0x41b2: ret 
0x41b3: call 0x14d0
0x41b8: nop dword ptr [rax+rax]
0x41c0: movsx edx,sil
0x41c4: mov rsi,-0x1
0x41cb: jmp 0x4120
0x41d0: mov edx,0x3a
0x41d5: mov rsi,-0x1
0x41dc: jmp 0x4120
0x41f0: mov edx,0x3a
0x41f5: jmp 0x4120
0x4200: sub rsp,0x48
0x4204: mov rax,rdx
0x4207: mov rdx,qword ptr fs:0x28
0x4210: mov qword ptr [rsp+0x38],rdx
0x4215: xor edx,edx
0x4217: cmp esi,0xa
0x421a: je 0x4284
0x421c: mov dword ptr [rsp],esi
0x421f: mov rcx,rsp
0x4222: mov rdx,-0x1
0x4229: mov rsi,rax
0x422c: mov qword ptr [rsp+0x4],0x0
0x4235: mov qword ptr [rsp+0xc],0x4000000
0x423e: mov qword ptr [rsp+0x14],0x0
0x4247: mov qword ptr [rsp+0x1c],0x0
0x4250: mov qword ptr [rsp+0x24],0x0
0x4259: mov qword ptr [rsp+0x2c],0x0
0x4262: mov dword ptr [rsp+0x34],0x0
0x426a: call 0x3a90
0x426f: mov rcx,qword ptr [rsp+0x38]
0x4274: xor rcx,qword ptr fs:0x28
0x427d: jne 0x4289
0x427f: add rsp,0x48
0x4283: ret 
0x4284: call 0x1400
0x4289: call 0x14d0
0x428e: nop 
0x4290: sub rsp,0x48
0x4294: mov r9,rcx
0x4297: mov rcx,qword ptr [rip+0x203f92]
0x429e: movdqa xmm0,[rip+0x203f5a]
0x42a6: mov rax,qword ptr fs:0x28
0x42af: mov qword ptr [rsp+0x38],rax
0x42b4: xor eax,eax
0x42b6: movaps [rsp],xmm0
0x42ba: test rsi,rsi
0x42bd: mov qword ptr [rsp+0x30],rcx
0x42c2: mov dword ptr [rsp],0xa
0x42c9: movdqa xmm0,[rip+0x203f3f]
0x42d1: movaps [rsp+0x10],xmm0
0x42d6: movdqa xmm0,[rip+0x203f42]
0x42de: movaps [rsp+0x20],xmm0
0x42e3: je 0x4317
0x42e5: test rdx,rdx
0x42e8: je 0x4317
0x42ea: mov qword ptr [rsp+0x28],rsi
0x42ef: mov qword ptr [rsp+0x30],rdx
0x42f4: mov rcx,rsp
0x42f7: mov rdx,r8
0x42fa: mov rsi,r9
0x42fd: call 0x3a90
0x4302: mov rdi,qword ptr [rsp+0x38]
0x4307: xor rdi,qword ptr fs:0x28
0x4310: jne 0x431c
0x4312: add rsp,0x48
0x4316: ret 
0x4317: call 0x1400
0x431c: call 0x14d0
0x4321: nop dword ptr [rax+rax]
0x4326: nop word ptr cs:[rax+rax]
0x4330: mov r8,-0x1
0x4337: jmp 0x4290
0x4340: mov rcx,rdx
0x4343: mov r8,-0x1
0x434a: mov rdx,rsi
0x434d: mov rsi,rdi
0x4350: xor edi,edi
0x4352: jmp 0x4290
0x4360: mov r8,rcx
0x4363: mov rcx,rdx
0x4366: mov rdx,rsi
0x4369: mov rsi,rdi
0x436c: xor edi,edi
0x436e: jmp 0x4290
0x4380: lea rcx,[rip+0x203c99]
0x4387: jmp 0x3a90
0x4390: lea rcx,[rip+0x203c89]
0x4397: mov rdx,rsi
0x439a: mov rsi,rdi
0x439d: xor edi,edi
0x439f: jmp 0x3a90
0x43b0: lea rcx,[rip+0x203c69]
0x43b7: mov rdx,-0x1
0x43be: jmp 0x3a90
0x43d0: lea rcx,[rip+0x203c49]
0x43d7: mov rsi,rdi
0x43da: mov rdx,-0x1
0x43e1: xor edi,edi
0x43e3: jmp 0x3a90
0x4528: mov r8,rcx
0x452b: mov rcx,rdx
0x452e: lea rdx,[rip+0x18ff]
0x4535: mov esi,0x1
0x453a: xor eax,eax
0x453c: call 0x16b0
0x4541: jmp 0x442c
0x473d: push r12
0x473f: push r15
0x4741: push r14
0x4743: mov r8,qword ptr [rsp+0x20]
0x4748: mov rcx,rbx
0x474b: mov rdx,rax
0x474e: mov rdi,rbp
0x4751: mov esi,0x1
0x4756: xor eax,eax
0x4758: call 0x16b0
0x475d: add rsp,0x20
0x4761: add rsp,0x28
0x4765: pop rbx
0x4766: pop rbp
0x4767: pop r12
0x4769: pop r13
0x476b: pop r14
0x476d: pop r15
0x476f: ret 
0x47a9: push r12
0x47ab: push r15
0x47ad: push r14
0x47af: mov r9,qword ptr [rsp+0x28]
0x47b4: jmp 0x4743
0x4810: xor r9d,r9d
0x4813: cmp qword ptr [r8],0x0
0x4817: je 0x482b
0x4819: nop dword ptr [rax]
0x4820: add r9,0x1
0x4824: cmp qword ptr [r8+r9*8],0x0
0x4829: jne 0x4820
0x482b: jmp 0x43f0
0x4858: mov r11d,eax
0x485b: add r11,qword ptr [r10+0x10]
0x485f: add eax,0x8
0x4862: mov dword ptr [r10],eax
0x4895: call 0x14d0
0x48b0: push rbp
0x48b1: push rbx
0x48b2: mov r10d,0x20
0x48b8: xor r11d,r11d
0x48bb: sub rsp,0xb8
0x48c2: mov rax,qword ptr fs:0x28
0x48cb: mov qword ptr [rsp+0x78],rax
0x48d0: xor eax,eax
0x48d2: lea rax,[rsp+0xd0]
0x48da: mov qword ptr [rsp+0xa0],r8
0x48e2: lea rbx,[rsp+0xd0]
0x48ea: lea r8,[rsp+0x20]
0x48ef: mov qword ptr [rsp+0xa8],r9
0x48f7: mov dword ptr [rsp+0x8],0x20
0x48ff: mov qword ptr [rsp+0x10],rax
0x4904: lea rax,[rsp+0x80]
0x490c: xor r9d,r9d
0x490f: mov qword ptr [rsp+0x18],rax
0x4914: mov rbp,rax
0x4917: nop word ptr [rax+rax]
0x4920: cmp r10d,0x2f
0x4924: ja 0x497c
0x4926: mov eax,r10d
0x4929: mov r11d,0x1
0x492f: add r10d,0x8
0x4933: add rax,rbp
0x4936: mov rax,qword ptr [rax]
0x4939: test rax,rax
0x493c: mov qword ptr [r8+r9*8],rax
0x4940: je 0x494c
0x4942: add r9,0x1
0x4946: cmp r9,0xa
0x494a: jne 0x4920
0x494c: test r11b,r11b
0x494f: jne 0x4975
0x4951: call 0x43f0
0x4956: mov rax,qword ptr [rsp+0x78]
0x495b: xor rax,qword ptr fs:0x28
0x4964: jne 0x4970
0x4966: add rsp,0xb8
0x496d: pop rbx
0x496e: pop rbp
0x496f: ret 
0x4970: call 0x14d0
0x4975: mov dword ptr [rsp+0x8],r10d
0x497a: jmp 0x4951
0x497c: mov rax,rbx
0x497f: add rbx,0x8
0x4983: jmp 0x4936
0x4990: push rbx
0x4991: lea rsi,[rip+0x14ea]
0x4998: mov edx,0x5
0x499d: xor edi,edi
0x499f: call 0x14a0
0x49a4: lea rdx,[rip+0x14ec]
0x49ab: mov rsi,rax
0x49ae: mov edi,0x1
0x49b3: xor eax,eax
0x49b5: call 0x1620
0x49ba: lea rsi,[rip+0x14ec]
0x49c1: mov edx,0x5
0x49c6: xor edi,edi
0x49c8: call 0x14a0
0x49cd: lea rcx,[rip+0xdbc]
0x49d4: lea rdx,[rip+0x9e5]
0x49db: mov rsi,rax
0x49de: mov edi,0x1
0x49e3: xor eax,eax
0x49e5: call 0x1620
0x49ea: mov rbx,qword ptr [rip+0x203697]
0x49f1: lea rsi,[rip+0x16e8]
0x49f8: xor edi,edi
0x49fa: mov edx,0x5
0x49ff: call 0x14a0
0x4a04: mov rsi,rbx
0x4a07: mov rdi,rax
0x4a0a: pop rbx
0x4a0b: jmp 0x1560
0x4a10: push rbx
0x4a11: mov rbx,rdi
0x4a14: call 0x15c0
0x4a19: test rax,rax
0x4a1c: jne 0x4a23
0x4a1e: test rbx,rbx
0x4a21: jne 0x4a25
0x4a23: pop rbx
0x4a24: ret 
0x4a25: call 0x4c60
0x4a2a: nop word ptr [rax+rax]
0x4a30: mov rax,rdi
0x4a33: mul rsi
0x4a36: mov rdi,rax
0x4a39: seto al
0x4a3c: test rdi,rdi
0x4a3f: js 0x4a4b
0x4a41: movzx eax,al
0x4a44: test rax,rax
0x4a47: jne 0x4a4b
0x4a49: jmp 0x4a10
0x4a4b: sub rsp,0x8
0x4a4f: call 0x4c60
0x4a54: nop 
0x4a56: nop word ptr cs:[rax+rax]
0x4a60: jmp 0x4a10
0x4a79: test rdi,rdi
0x4a7c: jne 0x4a98
0x4a98: call 0x13f0
0x4a9d: xor eax,eax
0x4a9f: pop rbx
0x4aa0: ret 
0x4aa6: nop word ptr cs:[rax+rax]
0x4ab0: mov rax,rsi
0x4ab3: mul rdx
0x4ab6: mov rsi,rax
0x4ab9: seto al
0x4abc: test rsi,rsi
0x4abf: js 0x4acb
0x4ac1: movzx eax,al
0x4ac4: test rax,rax
0x4ac7: jne 0x4acb
0x4ac9: jmp 0x4a70
0x4acb: sub rsp,0x8
0x4acf: call 0x4c60
0x4ad4: nop 
0x4ad6: nop word ptr cs:[rax+rax]
0x4ae0: test rdi,rdi
0x4ae3: mov r9,rdx
0x4ae6: mov rcx,qword ptr [rsi]
0x4ae9: je 0x4b20
0x4aeb: xor edx,edx
0x4aed: movabsq rax,0x5555555555555554
0x4af7: div r9
0x4afa: cmp rax,rcx
0x4afd: jbe 0x4b3b
0x4aff: mov rax,rcx
0x4b02: shr rax
0x4b05: lea rcx,[rax+rcx+0x1]
0x4b0a: mov qword ptr [rsi],rcx
0x4b0d: imul rcx,r9
0x4b11: mov rsi,rcx
0x4b14: jmp 0x4a70
0x4b20: test rcx,rcx
0x4b23: je 0x4b48
0x4b25: mov rax,rcx
0x4b28: mul r9
0x4b2b: seto dl
0x4b2e: test rax,rax
0x4b31: movzx edx,dl
0x4b34: js 0x4b3b
0x4b36: test rdx,rdx
0x4b39: je 0x4b0a
0x4b3b: sub rsp,0x8
0x4b3f: call 0x4c60
0x4b44: nop dword ptr [rax]
0x4b48: xor edx,edx
0x4b4a: mov eax,0x80
0x4b4f: xor r8d,r8d
0x4b52: div r9
0x4b55: test rax,rax
0x4b58: sete r8b
0x4b5c: lea rcx,[r8+rax]
0x4b60: jmp 0x4b25
0x4b70: test rdi,rdi
0x4b73: mov rax,qword ptr [rsi]
0x4b76: je 0x4ba0
0x4b78: movabsq rdx,0x5555555555555553
0x4b82: cmp rax,rdx
0x4b85: ja 0x4bb1
0x4b87: mov rdx,rax
0x4b8a: shr rdx
0x4b8d: lea rax,[rdx+rax+0x1]
0x4b92: mov qword ptr [rsi],rax
0x4b95: mov rsi,rax
0x4b98: jmp 0x4a70
0x4ba0: test rax,rax
0x4ba3: mov edx,0x80
0x4ba8: cmove rax,rdx
0x4bac: test rax,rax
0x4baf: jns 0x4b92
0x4bb1: sub rsp,0x8
0x4bb5: call 0x4c60
0x4bba: nop word ptr [rax+rax]
0x4bc0: push rbx
0x4bc1: mov rbx,rdi
0x4bc4: call 0x4a10
0x4bc9: mov rdx,rbx
0x4bcc: xor esi,esi
0x4bce: mov rdi,rax
0x4bd1: pop rbx
0x4bd2: jmp 0x1530
0x4be0: mov rax,rdi
0x4be3: sub rsp,0x8
0x4be7: mul rsi
0x4bea: seto dl
0x4bed: test rax,rax
0x4bf0: js 0x4c09
0x4bf2: movzx edx,dl
0x4bf5: test rdx,rdx
0x4bf8: jne 0x4c09
0x4bfa: call 0x1570
0x4bff: test rax,rax
0x4c02: je 0x4c09
0x4c04: add rsp,0x8
0x4c08: ret 
0x4c09: call 0x4c60
0x4c0e: nop 
0x4c10: push rbp
0x4c11: push rbx
0x4c12: mov rbp,rdi
0x4c15: mov rdi,rsi
0x4c18: mov rbx,rsi
0x4c1b: sub rsp,0x8
0x4c1f: call 0x4a10
0x4c24: add rsp,0x8
0x4c28: mov rdx,rbx
0x4c2b: mov rsi,rbp
0x4c2e: pop rbx
0x4c2f: pop rbp
0x4c30: mov rdi,rax
0x4c33: jmp 0x15a0
0x4c40: push rbx
0x4c41: mov rbx,rdi
0x4c44: call 0x14c0
0x4c49: mov rdi,rbx
0x4c4c: lea rsi,[rax+0x1]
0x4c50: pop rbx
0x4c51: jmp 0x4c10
0x4c90: call 0x1400
0x4c95: nop word ptr cs:[rax+rax]
0x4c9f: nop 
0x4d40: cmp esi,0xb
0x4d43: je 0x4d70
0x4d45: jg 0x4da0
0x4d47: cmp esi,0x4
0x4d4a: je 0x4e20
0x4d50: jg 0x4e10
0x4d56: cmp esi,0x2
0x4d59: je 0x4e20
0x4d5f: jg 0x4d70
0x4d61: cmp esi,0x1
0x4d64: jne 0x4dc8
0x4d66: nop word ptr cs:[rax+rax]
0x4d70: mov edi,ebp
0x4d72: xor eax,eax
0x4d74: call 0x1460
0x4d79: mov ebx,eax
0x4d7b: nop dword ptr [rax+rax]
0x4da0: cmp esi,0x407
0x4da6: jg 0x4df0
0x4da8: cmp esi,0x406
0x4dae: jge 0x4e20
0x4db0: cmp esi,0x401
0x4db6: je 0x4d70
0x4db8: cmp esi,0x402
0x4dbe: je 0x4e20
0x4dc0: cmp esi,0x400
0x4dc6: je 0x4e20
0x4dc8: mov eax,dword ptr [rsp]
0x4dcb: cmp eax,0x2f
0x4dce: ja 0x4f0a
0x4dd4: add rax,qword ptr [rsp+0x10]
0x4dd9: mov rdx,qword ptr [rax]
0x4ddc: mov edi,ebp
0x4dde: xor eax,eax
0x4de0: call 0x1460
0x4de5: mov ebx,eax
0x4de7: jmp 0x4d80
0x4df0: cmp esi,0x409
0x4df6: je 0x4e20
0x4df8: jl 0x4d70
0x4dfe: cmp esi,0x40a
0x4e04: jne 0x4dc8
0x4e06: jmp 0x4d70
0x4e10: cmp esi,0x9
0x4e13: je 0x4d70
0x4e19: jg 0x4e20
0x4e1b: cmp esi,0x8
0x4e1e: jne 0x4dc8
0x4e20: mov eax,dword ptr [rsp]
0x4e23: cmp eax,0x2f
0x4e26: ja 0x4f14
0x4e2c: add rax,qword ptr [rsp+0x10]
0x4e31: mov edx,dword ptr [rax]
0x4e33: mov edi,ebp
0x4e35: xor eax,eax
0x4e37: call 0x1460
0x4e3c: mov ebx,eax
0x4e3e: jmp 0x4d80
0x4eed: call 0x14d0
0x4ef2: mov rax,qword ptr [rsp+0x10]
0x4ef7: xor esi,esi
0x4ef9: mov edx,dword ptr [rax+0x10]
0x4efc: xor eax,eax
0x4efe: call 0x1460
0x4f03: mov ebx,eax
0x4f05: jmp 0x4d80
0x4f0a: mov rax,qword ptr [rsp+0x8]
0x4f0f: jmp 0x4dd9
0x4f14: mov rax,qword ptr [rsp+0x8]
0x4f19: jmp 0x4e31
0x4f20: push r13
0x4f22: push r12
0x4f24: mov r13,rsi
0x4f27: push rbp
0x4f28: push rbx
0x4f29: mov rbx,rdi
0x4f2c: mov r12,rdx
0x4f2f: sub rsp,0x18
0x4f33: mov rax,qword ptr fs:0x28
0x4f3c: mov qword ptr [rsp+0x8],rax
0x4f41: xor eax,eax
0x4f43: lea rax,[rsp+0x4]
0x4f48: test rdi,rdi
0x4f4b: cmove rbx,rax
0x4f4f: mov rdi,rbx
0x4f52: call 0x14f0
0x4f57: cmp rax,-0x3
0x4f5b: mov rbp,rax
0x4f5e: jbe 0x4f80
0x4f60: test r12,r12
0x4f63: je 0x4f80
0x4f65: xor edi,edi
0x4f67: call 0x50e0
0x4f6c: test al,al
0x4f6e: jne 0x4f80
0x4f70: movzx eax,byte ptr [r13]
0x4f75: mov ebp,0x1
0x4f7a: mov dword ptr [rbx],eax
0x4f7c: nop dword ptr [rax]
0x4f80: mov rdx,qword ptr [rsp+0x8]
0x4f85: xor rdx,qword ptr fs:0x28
0x4f8e: mov rax,rbp
0x4f91: jne 0x4f9e
0x4f93: add rsp,0x18
0x4f97: pop rbx
0x4f98: pop rbp
0x4f99: pop r12
0x4f9b: pop r13
0x4f9d: ret 
0x4f9e: call 0x14d0
0x4fa3: nop word ptr cs:[rax+rax]
0x4fad: nop dword ptr [rax]
0x4fb0: push r12
0x4fb2: push rbp
0x4fb3: mov rbp,rdi
0x4fb6: push rbx
0x4fb7: call 0x1440
0x4fbc: mov ebx,dword ptr [rbp]
0x4fbf: mov rdi,rbp
0x4fc2: mov r12,rax
0x4fc5: call 0x5180
0x4fca: and ebx,0x20
0x4fcd: test ebx,ebx
0x4fcf: jne 0x4fe8
0x4fd1: test eax,eax
0x4fd3: je 0x4fdf
0x4fd5: test r12,r12
0x4fd8: mov eax,0xffffffff
0x4fdd: je 0x5018
0x4fdf: pop rbx
0x4fe0: pop rbp
0x4fe1: pop r12
0x4fe3: ret 
0x4fe8: test eax,eax
0x4fea: jne 0x5008
0x4fec: call 0x1410
0x4ff1: mov dword ptr [rax],0x0
0x4ff7: mov eax,0xffffffff
0x4ffc: pop rbx
0x4ffd: pop rbp
0x4ffe: pop r12
0x5000: ret 
0x5008: pop rbx
0x5009: mov eax,0xffffffff
0x500e: pop rbp
0x500f: pop r12
0x5011: ret 
0x5018: call 0x1410
0x501d: cmp dword ptr [rax],0x9
0x5020: pop rbx
0x5021: pop rbp
0x5022: pop r12
0x5024: setne al
0x5027: movzx eax,al
0x502a: neg eax
0x502c: ret 
0x50e0: sub rsp,0x8
0x50e4: xor esi,esi
0x50e6: call 0x1610
0x50eb: mov rdx,rax
0x50ee: mov eax,0x1
0x50f3: test rdx,rdx
0x50f6: je 0x5115
0x50f8: lea rdi,[rip+0x10a1]
0x50ff: mov ecx,0x2
0x5104: mov rsi,rdx
0x5107: rep cmpsb [rsi],es:[rdi]
0x5109: seta cl
0x510c: sbb cl,0x0
0x510f: xor eax,eax
0x5111: test cl,cl
0x5113: jne 0x5120
0x5115: add rsp,0x8
0x5119: ret 
0x5120: lea rdi,[rip+0x107b]
0x5127: mov ecx,0x6
0x512c: mov rsi,rdx
0x512f: rep cmpsb [rsi],es:[rdi]
0x5131: seta al
0x5134: sbb al,0x0
0x5136: test al,al
0x5138: setne al
0x513b: add rsp,0x8
0x513f: ret 
0x5140: sub rsp,0x8
0x5144: mov edi,0xe
0x5149: call 0x15e0
0x514e: test rax,rax
0x5151: je 0x5170
0x5153: cmp byte ptr [rax],0x0
0x5156: lea rdx,[rip+0x104b]
0x515d: cmove rax,rdx
0x5161: add rsp,0x8
0x5165: ret 
0x5170: lea rax,[rip+0x1031]
0x5177: add rsp,0x8
0x517b: ret 
0x5180: push r12
0x5182: push rbp
0x5183: push rbx
0x5184: mov rbx,rdi
0x5187: call 0x15b0
0x518c: test eax,eax
0x518e: mov rdi,rbx
0x5191: js 0x51e7
0x5193: call 0x15f0
0x5198: test eax,eax
0x519a: jne 0x51c8
0x519c: mov rdi,rbx
0x519f: call 0x5200
0x51a4: test eax,eax
0x51a6: je 0x51e4
0x51a8: call 0x1410
0x51ad: mov r12d,dword ptr [rax]
0x51b0: mov rdi,rbx
0x51b3: mov rbp,rax
0x51b6: call 0x1480
0x51bb: test r12d,r12d
0x51be: jne 0x51f0
0x51c0: pop rbx
0x51c1: pop rbp
0x51c2: pop r12
0x51c4: ret 
0x51c8: mov rdi,rbx
0x51cb: call 0x15b0
0x51d0: xor esi,esi
0x51d2: mov edx,0x1
0x51d7: mov edi,eax
0x51d9: call 0x1520
0x51de: cmp rax,-0x1
0x51e2: jne 0x519c
0x51e4: mov rdi,rbx
0x51e7: pop rbx
0x51e8: pop rbp
0x51e9: pop r12
0x51eb: jmp 0x1480
0x51f0: mov dword ptr [rbp],r12d
0x51f4: mov eax,0xffffffff
0x51f9: jmp 0x51c0
0x5200: test rdi,rdi
0x5203: push rbx
0x5204: mov rbx,rdi
0x5207: je 0x521a
0x5209: call 0x15f0
0x520e: test eax,eax
0x5210: je 0x521a
0x5212: test dword ptr [rbx],0x100
0x5218: jne 0x5228
0x521a: mov rdi,rbx
0x521d: pop rbx
0x521e: jmp 0x15d0
0x5228: mov rdi,rbx
0x522b: mov edx,0x1
0x5230: xor esi,esi
0x5232: call 0x5240
0x5237: mov rdi,rbx
0x523a: pop rbx
0x523b: jmp 0x15d0
0x5240: mov rax,qword ptr [rdi+0x8]
0x5244: cmp qword ptr [rdi+0x10],rax
0x5248: je 0x5250
0x524a: jmp 0x1660
0x5250: mov rax,qword ptr [rdi+0x20]
0x5254: cmp qword ptr [rdi+0x28],rax
0x5258: jne 0x524a
0x525a: cmp qword ptr [rdi+0x48],0x0
0x525f: jne 0x524a
0x5261: push r12
0x5263: push rbp
0x5264: mov r12d,edx
0x5267: push rbx
0x5268: mov rbp,rsi
0x526b: mov rbx,rdi
0x526e: call 0x15b0
0x5273: mov edx,r12d
0x5276: mov rsi,rbp
0x5279: mov edi,eax
0x527b: call 0x1520
0x5280: cmp rax,-0x1
0x5284: je 0x5292
0x5286: and dword ptr [rbx],-0x11
0x5289: mov qword ptr [rbx+0x90],rax
0x5290: xor eax,eax
0x5292: pop rbx
0x5293: pop rbp
0x5294: pop r12
0x5296: ret 
0x52a0: push r15
0x52a2: push r14
0x52a4: mov r15,rdx
0x52a7: push r13
0x52a9: push r12
0x52ab: lea r12,[rip+0x2028be]
0x52b2: push rbp
0x52b3: lea rbp,[rip+0x2028be]
0x52ba: push rbx
0x52bb: mov r13d,edi
0x52be: mov r14,rsi
0x52c1: sub rbp,r12
0x52c4: sub rsp,0x8
0x52c8: sar rbp,0x3
0x52cc: call 0x13b0
0x52d1: test rbp,rbp
0x52d4: je 0x52f6
0x52d6: xor ebx,ebx
0x52d8: nop dword ptr [rax+rax]
0x52e0: mov rdx,r15
0x52e3: mov rsi,r14
0x52e6: mov edi,r13d
0x52e9: call qword ptr [r12+rbx*8]
0x52ed: add rbx,0x1
0x52f1: cmp rbp,rbx
0x52f4: jne 0x52e0
0x52f6: add rsp,0x8
0x52fa: pop rbx
0x52fb: pop rbp
0x52fc: pop r12
0x52fe: pop r13
0x5300: pop r14
0x5302: pop r15
0x5304: ret 
0x5310: rep ret 
