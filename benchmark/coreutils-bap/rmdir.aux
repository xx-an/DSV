0x13b8: sub rsp,0x8
0x13bc: mov rax,qword ptr [rip+0x208c0d]
0x13c3: test rax,rax
0x13c6: je 0x13ca
0x13c8: call rax
0x13ca: add rsp,0x8
0x13ce: ret 
0x13d6: jmp qword ptr [rip+0x208a5c]
0x13e0: jmp qword ptr [rip+0x208a5a]
0x13f0: jmp qword ptr [rip+0x208a52]
0x1430: jmp qword ptr [rip+0x208a32]
0x1440: jmp qword ptr [rip+0x208a2a]
0x1460: jmp qword ptr [rip+0x208a1a]
0x14d0: jmp qword ptr [rip+0x2089e2]
0x14f0: jmp qword ptr [rip+0x2089d2]
0x1500: jmp qword ptr [rip+0x2089ca]
0x1520: jmp qword ptr [rip+0x2089ba]
0x1560: jmp qword ptr [rip+0x20899a]
0x1580: jmp qword ptr [rip+0x20898a]
0x1590: jmp qword ptr [rip+0x208982]
0x15a0: jmp qword ptr [rip+0x20897a]
0x15c0: jmp qword ptr [rip+0x20896a]
0x15d0: jmp qword ptr [rip+0x208962]
0x15e0: jmp qword ptr [rip+0x20895a]
0x15f0: jmp qword ptr [rip+0x208952]
0x1600: jmp qword ptr [rip+0x20894a]
0x1650: jmp qword ptr [rip+0x208922]
0x16b0: jmp qword ptr [rip+0x2088f2]
0x16c0: jmp qword ptr [rip+0x2088ea]
0x16d0: jmp qword ptr [rip+0x2088e2]
0x16e0: jmp qword ptr [rip+0x2088fa]
0x17cf: nop 
0x1860: lea rsi,[rip+0x5561]
0x1867: xor edi,edi
0x1869: mov edx,0x5
0x186e: mov r13,rax
0x1871: call 0x1490
0x1876: mov rdi,qword ptr [rip+0x20880b]
0x187d: mov rsi,rax
0x1880: mov rdx,r13
0x1883: xor eax,eax
0x1885: call 0x1f80
0x188a: jmp 0x1810
0x18af: lea rsi,[rip+0x5529]
0x18b6: mov edx,0x5
0x18bb: xor edi,edi
0x18bd: mov r12,rax
0x18c0: call 0x1490
0x18c5: mov esi,dword ptr [r13]
0x18c9: mov rcx,r12
0x18cc: mov rdx,rax
0x18cf: xor edi,edi
0x18d1: xor eax,eax
0x18d3: xor r12d,r12d
0x18d6: call 0x1640
0x18db: jmp 0x182d
0x195a: lea rsi,[rip+0x5492]
0x1961: mov edx,0x5
0x1966: xor edi,edi
0x1968: mov r13,rax
0x196b: call 0x1490
0x1970: mov esi,dword ptr [r15]
0x1973: mov rcx,r13
0x1976: mov rdx,rax
0x1979: xor edi,edi
0x197b: xor eax,eax
0x197d: xor r13d,r13d
0x1980: call 0x1640
0x199a: lea rsi,[rip+0x5427]
0x19a1: xor edi,edi
0x19a3: mov edx,0x5
0x19a8: mov r15,rax
0x19ab: call 0x1490
0x19b0: mov rdi,qword ptr [rip+0x2086d1]
0x19b7: mov rsi,rax
0x19ba: mov rdx,r15
0x19bd: xor eax,eax
0x19bf: call 0x1f80
0x19c4: jmp 0x192b
0x1a16: nop word ptr cs:[rax+rax]
0x1a4a: hlt 
0x1a4b: nop dword ptr [rax+rax]
0x1a50: lea rdi,[rip+0x208629]
0x1a57: push rbp
0x1a58: lea rax,[rip+0x208621]
0x1a5f: cmp rax,rdi
0x1a62: mov rbp,rsp
0x1a65: je 0x1a80
0x1a67: mov rax,qword ptr [rip+0x208552]
0x1a6e: test rax,rax
0x1a71: je 0x1a80
0x1a73: pop rbp
0x1a74: jmp rax
0x1a80: pop rbp
0x1a81: ret 
0x1a90: lea rdi,[rip+0x2085e9]
0x1a97: lea rsi,[rip+0x2085e2]
0x1a9e: push rbp
0x1a9f: sub rsi,rdi
0x1aa2: mov rbp,rsp
0x1aa5: sar rsi,0x3
0x1aa9: mov rax,rsi
0x1aac: shr rax,0x3f
0x1ab0: add rsi,rax
0x1ab3: sar rsi
0x1ab6: je 0x1ad0
0x1ab8: mov rax,qword ptr [rip+0x208519]
0x1abf: test rax,rax
0x1ac2: je 0x1ad0
0x1ac4: pop rbp
0x1ac5: jmp rax
0x1ad0: pop rbp
0x1ad1: ret 
0x1af1: push rbp
0x1af2: mov rbp,rsp
0x1af5: je 0x1b03
0x1af7: mov rdi,qword ptr [rip+0x20850a]
0x1afe: call 0x16e0
0x1b03: call 0x1a50
0x1b08: mov byte ptr [rip+0x208599],0x1
0x1b0f: pop rbp
0x1b10: ret 
0x1b20: push rbp
0x1b21: mov rbp,rsp
0x1b24: pop rbp
0x1b25: jmp 0x1a90
0x1f80: push rbp
0x1f81: push rbx
0x1f82: mov rbp,rsi
0x1f85: mov rbx,rdi
0x1f88: sub rsp,0xd8
0x1f8f: test al,al
0x1f91: mov qword ptr [rsp+0x30],rdx
0x1f96: mov qword ptr [rsp+0x38],rcx
0x1f9b: mov qword ptr [rsp+0x40],r8
0x1fa0: mov qword ptr [rsp+0x48],r9
0x1fa5: je 0x1fde
0x1fa7: movaps [rsp+0x50],xmm0
0x1fac: movaps [rsp+0x60],xmm1
0x1fb1: movaps [rsp+0x70],xmm2
0x1fb6: movaps [rsp+0x80],xmm3
0x1fbe: movaps [rsp+0x90],xmm4
0x1fc6: movaps [rsp+0xa0],xmm5
0x1fce: movaps [rsp+0xb0],xmm6
0x1fd6: movaps [rsp+0xc0],xmm7
0x1fde: mov rsi,rbx
0x1fe1: mov rax,qword ptr fs:0x28
0x1fea: mov qword ptr [rsp+0x18],rax
0x1fef: xor eax,eax
0x1ff1: mov rdi,qword ptr [rip+0x2080c8]
0x1ff8: call 0x1570
0x1ffd: lea rdi,[rip+0x512f]
0x2004: mov rcx,rbx
0x2007: mov edx,0x2
0x200c: mov esi,0x1
0x2011: call 0x1600
0x2016: lea rax,[rsp+0xf0]
0x201e: mov rdx,rsp
0x2021: mov rsi,rbp
0x2024: mov rdi,rbx
0x2027: mov dword ptr [rsp],0x10
0x202e: mov dword ptr [rsp+0x4],0x30
0x2036: mov qword ptr [rsp+0x8],rax
0x203b: lea rax,[rsp+0x20]
0x2040: mov qword ptr [rsp+0x10],rax
0x2045: call 0x4820
0x204a: mov rax,qword ptr [rbx+0x28]
0x204e: cmp rax,qword ptr [rbx+0x30]
0x2052: jae 0x2080
0x2054: lea rdx,[rax+0x1]
0x2058: mov qword ptr [rbx+0x28],rdx
0x205c: mov byte ptr [rax],0xa
0x205f: mov rax,qword ptr [rsp+0x18]
0x2064: xor rax,qword ptr fs:0x28
0x206d: jne 0x208f
0x206f: add rsp,0xd8
0x2076: pop rbx
0x2077: pop rbp
0x2078: ret 
0x2080: mov esi,0xa
0x2085: mov rdi,rbx
0x2088: call 0x1500
0x208d: jmp 0x205f
0x208f: call 0x14d0
0x2094: nop word ptr cs:[rax+rax]
0x209e: nop 
0x20a0: mov qword ptr [rip+0x208011],rdi
0x20a7: ret 
0x20b0: mov byte ptr [rip+0x207ff9],dil
0x20b7: ret 
0x20c0: push rbp
0x20c1: push rbx
0x20c2: sub rsp,0x8
0x20c6: mov rdi,qword ptr [rip+0x207fbb]
0x20cd: call 0x4920
0x20d2: test eax,eax
0x20d4: je 0x20ec
0x20d6: call 0x1410
0x20db: cmp byte ptr [rip+0x207fce],0x0
0x20e2: mov rbx,rax
0x20e5: je 0x2103
0x20e7: cmp dword ptr [rax],0x20
0x20ea: jne 0x2103
0x20ec: mov rdi,qword ptr [rip+0x207fad]
0x20f3: call 0x4920
0x20f8: test eax,eax
0x20fa: jne 0x2142
0x20fc: add rsp,0x8
0x2100: pop rbx
0x2101: pop rbp
0x2102: ret 
0x2103: lea rsi,[rip+0x5031]
0x210a: xor edi,edi
0x210c: mov edx,0x5
0x2111: call 0x1490
0x2116: mov rdi,qword ptr [rip+0x207f9b]
0x211d: mov rbp,rax
0x2120: test rdi,rdi
0x2123: je 0x214d
0x2125: call 0x3cc0
0x212a: mov esi,dword ptr [rbx]
0x212c: lea rdx,[rip+0x5014]
0x2133: mov rcx,rax
0x2136: mov r8,rbp
0x2139: xor edi,edi
0x213b: xor eax,eax
0x213d: call 0x1640
0x2142: mov edi,dword ptr [rip+0x207ed0]
0x2148: call 0x1430
0x214d: mov esi,dword ptr [rbx]
0x214f: lea rdx,[rip+0x4c86]
0x2156: mov rcx,rax
0x2159: xor edi,edi
0x215b: xor eax,eax
0x215d: call 0x1640
0x2162: jmp 0x2142
0x224f: nop 
0x2250: push rbp
0x2251: push rbx
0x2252: mov rbp,rdi
0x2255: mov ebx,esi
0x2257: sub rsp,0x8
0x225b: call 0x4ab0
0x2260: movzx edx,byte ptr [rax]
0x2263: and edx,-0x21
0x2266: cmp dl,0x55
0x2269: je 0x22e0
0x226b: cmp dl,0x47
0x226e: je 0x2290
0x2270: lea rax,[rip+0x4f2c]
0x2277: lea rdx,[rip+0x4f27]
0x227e: cmp ebx,0x9
0x2281: cmovne rax,rdx
0x2285: add rsp,0x8
0x2289: pop rbx
0x228a: pop rbp
0x228b: ret 
0x2290: movzx edx,byte ptr [rax+0x1]
0x2294: and edx,-0x21
0x2297: cmp dl,0x42
0x229a: jne 0x2270
0x229c: cmp byte ptr [rax+0x2],0x31
0x22a0: jne 0x2270
0x22a2: cmp byte ptr [rax+0x3],0x38
0x22a6: jne 0x2270
0x22a8: cmp byte ptr [rax+0x4],0x30
0x22ac: jne 0x2270
0x22ae: cmp byte ptr [rax+0x5],0x33
0x22b2: jne 0x2270
0x22b4: cmp byte ptr [rax+0x6],0x30
0x22b8: jne 0x2270
0x22ba: cmp byte ptr [rax+0x7],0x0
0x22be: jne 0x2270
0x22c0: cmp byte ptr [rbp],0x60
0x22c4: lea rax,[rip+0x4ed1]
0x22cb: lea rdx,[rip+0x4ece]
0x22d2: cmovne rax,rdx
0x22d6: add rsp,0x8
0x22da: pop rbx
0x22db: pop rbp
0x22dc: ret 
0x22e0: movzx edx,byte ptr [rax+0x1]
0x22e4: and edx,-0x21
0x22e7: cmp dl,0x54
0x22ea: jne 0x2270
0x22ec: movzx edx,byte ptr [rax+0x2]
0x22f0: and edx,-0x21
0x22f3: cmp dl,0x46
0x22f6: jne 0x2270
0x22fc: cmp byte ptr [rax+0x3],0x2d
0x2300: jne 0x2270
0x2306: cmp byte ptr [rax+0x4],0x38
0x230a: jne 0x2270
0x2310: cmp byte ptr [rax+0x5],0x0
0x2314: jne 0x2270
0x231a: cmp byte ptr [rbp],0x60
0x231e: lea rax,[rip+0x4e6f]
0x2325: lea rdx,[rip+0x4e6c]
0x232c: cmovne rax,rdx
0x2330: add rsp,0x8
0x2334: pop rbx
0x2335: pop rbp
0x2336: ret 
0x2413: xor r11d,r11d
0x2416: mov rax,rbp
0x2419: mov r8d,r12d
0x241c: mov rbp,r11
0x241f: mov r11,rax
0x2422: nop word ptr [rax+rax]
0x2428: cmp r11,rbp
0x242b: setne r12b
0x242f: cmp r11,-0x1
0x2433: jne 0x2442
0x2435: mov rax,qword ptr [rsp+0x10]
0x243a: cmp byte ptr [rax+rbp],0x0
0x243e: setne r12b
0x2442: test r12b,r12b
0x2445: je 0x2aa0
0x244b: cmp dword ptr [rsp+0x8],0x2
0x2450: mov rdi,qword ptr [rsp+0x10]
0x2455: lea r9,[rdi+rbp]
0x2459: setne al
0x245c: and al,byte ptr [rsp+0xd]
0x2460: mov r10d,eax
0x2463: je 0x2510
0x2469: mov rax,qword ptr [rsp+0x18]
0x246e: test rax,rax
0x2471: je 0x28a0
0x2477: cmp r11,-0x1
0x247b: lea rbx,[rbp+rax]
0x2480: jne 0x24b0
0x2482: cmp rax,0x1
0x2486: jbe 0x24b0
0x2488: mov byte ptr [rsp+0x38],r8b
0x248d: mov byte ptr [rsp+0x30],r10b
0x2492: mov qword ptr [rsp+0x28],r9
0x2497: call 0x14b0
0x249c: movzx r8d,byte ptr [rsp+0x38]
0x24a2: movzx r10d,byte ptr [rsp+0x30]
0x24a8: mov r11,rax
0x24ab: mov r9,qword ptr [rsp+0x28]
0x24b0: cmp rbx,r11
0x24b3: mov byte ptr [rsp+0x28],r10b
0x24b8: ja 0x2a70
0x24be: mov rdx,qword ptr [rsp+0x18]
0x24c3: mov rsi,qword ptr [rsp+0x48]
0x24c8: mov rdi,r9
0x24cb: mov qword ptr [rsp+0x40],r11
0x24d0: mov byte ptr [rsp+0x38],r8b
0x24d5: mov qword ptr [rsp+0x30],r9
0x24da: call 0x1560
0x24df: test eax,eax
0x24e1: mov r9,qword ptr [rsp+0x30]
0x24e6: movzx r8d,byte ptr [rsp+0x38]
0x24ec: mov r11,qword ptr [rsp+0x40]
0x24f1: jne 0x2a70
0x24f7: cmp byte ptr [rsp+0xf],0x0
0x24fc: movzx r10d,byte ptr [rsp+0x28]
0x2502: jne 0x3485
0x2508: nop dword ptr [rax+rax]
0x2510: movzx ebx,byte ptr [r9]
0x2514: cmp bl,0x7e
0x2517: ja 0x2838
0x251d: lea rcx,[rip+0x4d08]
0x2524: movzx edx,bl
0x2527: movsxd rax,dword ptr [rcx+rdx*4]
0x252b: add rax,rcx
0x252e: jmp rax
0x2568: cmp byte ptr [rsp+0xd],0x1
0x256d: jne 0x2682
0x2573: test dl,dl
0x2575: jne 0x2682
0x257b: mov rsi,qword ptr [rsp+0x20]
0x2580: test rsi,rsi
0x2583: je 0x2599
0x2585: mov edx,ebx
0x2587: shr dl,0x5
0x258a: movzx edx,dl
0x258d: mov edx,dword ptr [rsi+rdx*4]
0x2590: btl edx,ebx
0x2593: jb 0x26e3
0x2599: test r10b,r10b
0x259c: jne 0x26e3
0x25a2: xor eax,0x1
0x25a5: add rbp,0x1
0x25a9: and eax,r8d
0x25ac: test al,al
0x25ae: je 0x25d0
0x25b0: cmp r13,r15
0x25b3: jbe 0x25ba
0x25b5: mov byte ptr [r14+r15],0x27
0x25ba: lea rax,[r15+0x1]
0x25be: cmp r13,rax
0x25c1: jbe 0x25c9
0x25c3: mov byte ptr [r14+r15+0x1],0x27
0x25c9: add r15,0x2
0x25cd: xor r8d,r8d
0x25d0: cmp r15,r13
0x25d3: jae 0x25d9
0x25d5: mov byte ptr [r14+r15],bl
0x25d9: movzx edi,byte ptr [rsp+0xe]
0x25de: add r15,0x1
0x25e2: mov eax,0x0
0x25e7: test r12b,r12b
0x25ea: cmove edi,eax
0x25ed: mov byte ptr [rsp+0xe],dil
0x25f2: jmp 0x2428
0x2682: cmp byte ptr [rsp+0xf],0x0
0x2687: jne 0x257b
0x268d: jmp 0x2599
0x26e3: cmp dword ptr [rsp+0x8],0x2
0x26e8: sete dl
0x26eb: cmp byte ptr [rsp+0xf],0x0
0x26f0: mov eax,edx
0x26f2: jne 0x2f48
0x26f8: mov eax,r8d
0x26fb: xor eax,0x1
0x26fe: and al,dl
0x2700: je 0x2731
0x2702: cmp r13,r15
0x2705: jbe 0x270c
0x2707: mov byte ptr [r14+r15],0x27
0x270c: lea rdx,[r15+0x1]
0x2710: cmp r13,rdx
0x2713: jbe 0x271b
0x2715: mov byte ptr [r14+r15+0x1],0x24
0x271b: lea rdx,[r15+0x2]
0x271f: cmp r13,rdx
0x2722: jbe 0x272a
0x2724: mov byte ptr [r14+r15+0x2],0x27
0x272a: add r15,0x3
0x272e: mov r8d,eax
0x2731: cmp r13,r15
0x2734: jbe 0x273b
0x2736: mov byte ptr [r14+r15],0x5c
0x273b: add r15,0x1
0x273f: add rbp,0x1
0x2743: jmp 0x25d0
0x2830: xor r10d,r10d
0x2833: nop dword ptr [rax+rax]
0x2838: cmp qword ptr [rsp+0x58],0x1
0x283e: jne 0x2be8
0x2844: mov qword ptr [rsp+0x38],r11
0x2849: mov byte ptr [rsp+0x30],r8b
0x284e: mov byte ptr [rsp+0x28],r10b
0x2853: call 0x16d0
0x2858: mov rcx,qword ptr [rax]
0x285b: movzx edx,bl
0x285e: movzx r10d,byte ptr [rsp+0x28]
0x2864: movzx r8d,byte ptr [rsp+0x30]
0x286a: mov r11,qword ptr [rsp+0x38]
0x286f: mov edi,0x1
0x2874: movzx eax,word ptr [rcx+rdx*2]
0x2878: and ax,0x4000
0x287c: setne r12b
0x2880: sete al
0x2883: and al,byte ptr [rsp+0xd]
0x2887: test al,al
0x2889: jne 0x3221
0x288f: cmp dword ptr [rsp+0x8],0x2
0x2894: sete dl
0x2897: jmp 0x2568
0x28a0: movzx ebx,byte ptr [r9]
0x28a4: cmp bl,0x7e
0x28a7: ja 0x2830
0x28a9: lea rcx,[rip+0x4b78]
0x28b0: movzx edx,bl
0x28b3: movsxd rax,dword ptr [rcx+rdx*4]
0x28b7: add rax,rcx
0x28ba: jmp rax
0x2a70: xor r10d,r10d
0x2a73: jmp 0x2510
0x2aa0: cmp dword ptr [rsp+0x8],0x2
0x2aa5: movzx ebx,byte ptr [rsp+0xf]
0x2aaa: mov r12d,r8d
0x2aad: mov rbp,r11
0x2ab0: sete dl
0x2ab3: mov eax,ebx
0x2ab5: test r15,r15
0x2ab8: sete cl
0x2abb: and eax,edx
0x2abd: and al,cl
0x2abf: jne 0x3526
0x2ac5: mov eax,ebx
0x2ac7: xor eax,0x1
0x2aca: and dl,al
0x2acc: je 0x343c
0x2ad2: cmp byte ptr [rsp+0x7c],0x0
0x2ad7: je 0x343a
0x2add: cmp byte ptr [rsp+0xe],0x0
0x2ae2: jne 0x34dd
0x2ae8: test r13,r13
0x2aeb: sete al
0x2aee: cmp qword ptr [rsp+0x50],0x0
0x2af4: setne dl
0x2af7: and al,dl
0x2af9: je 0x351c
0x2aff: mov r13,qword ptr [rsp+0x50]
0x2b04: lea rbx,[rip+0x469a]
0x2b0b: mov byte ptr [r14],0x27
0x2b0f: mov dword ptr [rsp+0x8],0x2
0x2b17: mov r15d,0x1
0x2b1d: mov qword ptr [rsp+0x18],0x1
0x2b26: mov byte ptr [rsp+0xf],0x0
0x2b2b: mov qword ptr [rsp+0x48],rbx
0x2b30: mov byte ptr [rsp+0x7c],al
0x2b34: jmp 0x2413
0x2be8: lea rax,[rsp+0xa0]
0x2bf0: cmp r11,-0x1
0x2bf4: mov qword ptr [rsp+0xa0],0x0
0x2c00: mov qword ptr [rsp+0x28],rax
0x2c05: jne 0x2c34
0x2c07: mov rdi,qword ptr [rsp+0x10]
0x2c0c: mov byte ptr [rsp+0x40],r8b
0x2c11: mov byte ptr [rsp+0x38],r10b
0x2c16: mov qword ptr [rsp+0x30],r9
0x2c1b: call 0x14b0
0x2c20: movzx r8d,byte ptr [rsp+0x40]
0x2c26: movzx r10d,byte ptr [rsp+0x38]
0x2c2c: mov r11,rax
0x2c2f: mov r9,qword ptr [rsp+0x30]
0x2c34: lea rax,[rsp+0x9c]
0x2c3c: xor ecx,ecx
0x2c3e: mov byte ptr [rsp+0x7e],bl
0x2c42: mov byte ptr [rsp+0x7d],r8b
0x2c47: mov rbx,rcx
0x2c4a: mov qword ptr [rsp+0x88],r9
0x2c52: mov qword ptr [rsp+0x38],rax
0x2c57: mov byte ptr [rsp+0x7f],r10b
0x2c5c: mov qword ptr [rsp+0x80],r15
0x2c64: mov qword ptr [rsp+0x40],r14
0x2c69: mov qword ptr [rsp+0x70],r13
0x2c6e: mov qword ptr [rsp+0x30],r11
0x2c73: mov rax,qword ptr [rsp+0x10]
0x2c78: lea r14,[rbp+rbx]
0x2c7d: mov rdx,qword ptr [rsp+0x30]
0x2c82: mov rcx,qword ptr [rsp+0x28]
0x2c87: mov rdi,qword ptr [rsp+0x38]
0x2c8c: lea r13,[rax+r14]
0x2c90: sub rdx,r14
0x2c93: mov rsi,r13
0x2c96: call 0x4790
0x2c9b: test rax,rax
0x2c9e: mov r15,rax
0x2ca1: je 0x2cf1
0x2ca3: cmp rax,-0x1
0x2ca7: je 0x32c5
0x2cad: cmp rax,-0x2
0x2cb1: je 0x3251
0x2cb7: cmp dword ptr [rsp+0x8],0x2
0x2cbc: sete al
0x2cbf: and al,byte ptr [rsp+0xf]
0x2cc3: jne 0x2e60
0x2cc9: mov edi,dword ptr [rsp+0x9c]
0x2cd0: call 0x16c0
0x2cd5: mov rdi,qword ptr [rsp+0x28]
0x2cda: test eax,eax
0x2cdc: mov eax,0x0
0x2ce1: cmove r12d,eax
0x2ce5: add rbx,r15
0x2ce8: call 0x16b0
0x2ced: test eax,eax
0x2cef: je 0x2c73
0x2cf1: mov edx,r12d
0x2cf4: mov rdi,rbx
0x2cf7: movzx r8d,byte ptr [rsp+0x7d]
0x2cfd: xor edx,0x1
0x2d00: movzx ebx,byte ptr [rsp+0x7e]
0x2d05: movzx r10d,byte ptr [rsp+0x7f]
0x2d0b: and dl,byte ptr [rsp+0xd]
0x2d0f: mov r15,qword ptr [rsp+0x80]
0x2d17: mov r14,qword ptr [rsp+0x40]
0x2d1c: mov r13,qword ptr [rsp+0x70]
0x2d21: mov r11,qword ptr [rsp+0x30]
0x2d26: cmp rdi,0x1
0x2d2a: jbe 0x332b
0x2d30: mov rcx,rdi
0x2d33: xor esi,esi
0x2d35: movzx r9d,byte ptr [rsp+0xf]
0x2d3b: add rcx,rbp
0x2d3e: mov rdi,qword ptr [rsp+0x10]
0x2d43: jmp 0x2dfe
0x2d50: cmp dword ptr [rsp+0x8],0x2
0x2d55: sete al
0x2d58: test r9b,r9b
0x2d5b: jne 0x3210
0x2d61: mov esi,r8d
0x2d64: xor esi,0x1
0x2d67: and al,sil
0x2d6a: je 0x2d9b
0x2d6c: cmp r13,r15
0x2d6f: jbe 0x2d76
0x2d71: mov byte ptr [r14+r15],0x27
0x2d76: lea rsi,[r15+0x1]
0x2d7a: cmp r13,rsi
0x2d7d: jbe 0x2d85
0x2d7f: mov byte ptr [r14+r15+0x1],0x24
0x2d85: lea rsi,[r15+0x2]
0x2d89: cmp r13,rsi
0x2d8c: jbe 0x2d94
0x2d8e: mov byte ptr [r14+r15+0x2],0x27
0x2d94: add r15,0x3
0x2d98: mov r8d,eax
0x2d9b: cmp r13,r15
0x2d9e: jbe 0x2da5
0x2da0: mov byte ptr [r14+r15],0x5c
0x2da5: lea rax,[r15+0x1]
0x2da9: cmp r13,rax
0x2dac: jbe 0x2dbb
0x2dae: mov eax,ebx
0x2db0: shr al,0x6
0x2db3: add eax,0x30
0x2db6: mov byte ptr [r14+r15+0x1],al
0x2dbb: lea rax,[r15+0x2]
0x2dbf: cmp r13,rax
0x2dc2: jbe 0x2dd4
0x2dc4: mov eax,ebx
0x2dc6: shr al,0x3
0x2dc9: and eax,0x7
0x2dcc: add eax,0x30
0x2dcf: mov byte ptr [r14+r15+0x2],al
0x2dd4: and ebx,0x7
0x2dd7: add rbp,0x1
0x2ddb: add r15,0x3
0x2ddf: add ebx,0x30
0x2de2: cmp rbp,rcx
0x2de5: jae 0x25d0
0x2deb: mov esi,edx
0x2ded: cmp r13,r15
0x2df0: jbe 0x2df6
0x2df2: mov byte ptr [r14+r15],bl
0x2df6: movzx ebx,byte ptr [rdi+rbp]
0x2dfa: add r15,0x1
0x2dfe: test dl,dl
0x2e00: jne 0x2d50
0x2e06: mov eax,esi
0x2e08: xor eax,0x1
0x2e0b: and eax,r8d
0x2e0e: test r10b,r10b
0x2e11: je 0x2e21
0x2e13: cmp r13,r15
0x2e16: jbe 0x2e1d
0x2e18: mov byte ptr [r14+r15],0x5c
0x2e1d: add r15,0x1
0x2e21: add rbp,0x1
0x2e25: cmp rbp,rcx
0x2e28: jae 0x25ac
0x2e2e: test al,al
0x2e30: je 0x322e
0x2e36: cmp r13,r15
0x2e39: jbe 0x2e40
0x2e3b: mov byte ptr [r14+r15],0x27
0x2e40: lea rax,[r15+0x1]
0x2e44: cmp r13,rax
0x2e47: jbe 0x2e4f
0x2e49: mov byte ptr [r14+r15+0x1],0x27
0x2e4f: add r15,0x2
0x2e53: xor r10d,r10d
0x2e56: xor r8d,r8d
0x2e59: jmp 0x2ded
0x2e60: cmp r15,0x1
0x2e64: je 0x2cc9
0x2e6a: mov rdi,qword ptr [rsp+0x10]
0x2e6f: lea rcx,[rdi+r15]
0x2e73: lea rdx,[rdi+r14+0x1]
0x2e78: lea r8,[rcx+r14]
0x2e7c: jmp 0x2e8d
0x2e80: add rdx,0x1
0x2e84: cmp r8,rdx
0x2e87: je 0x2cc9
0x2e8d: movzx ecx,byte ptr [rdx]
0x2e90: sub ecx,0x5b
0x2e93: cmp cl,0x21
0x2e96: ja 0x2e80
0x2e98: mov esi,0x1
0x2e9d: shl rsi,cl
0x2ea0: mov rcx,rsi
0x2ea3: movabsq rsi,0x20000002b
0x2ead: test rcx,rsi
0x2eb0: je 0x2e80
0x2eb2: mov r14,qword ptr [rsp+0x40]
0x2eb7: mov r13,qword ptr [rsp+0x70]
0x2ebc: mov rbp,qword ptr [rsp+0x30]
0x2ec1: mov dword ptr [rsp+0x8],0x2
0x2ec9: cmp byte ptr [rsp+0xd],0x0
0x2ece: je 0x2ee0
0x2ed0: test al,al
0x2ed2: mov eax,0x4
0x2ed7: cmove eax,dword ptr [rsp+0x8]
0x2edc: mov dword ptr [rsp+0x8],eax
0x2ee0: sub rsp,0x8
0x2ee4: mov rcx,rbp
0x2ee7: mov rsi,r13
0x2eea: push qword ptr [rsp+0x68]
0x2eee: push qword ptr [rsp+0x78]
0x2ef2: mov rdi,r14
0x2ef5: push 0x0
0x2ef7: mov r9d,dword ptr [rsp+0x98]
0x2eff: mov r8d,dword ptr [rsp+0x28]
0x2f04: mov rdx,qword ptr [rsp+0x30]
0x2f09: and r9d,-0x3
0x2f0d: call 0x2340
0x2f12: add rsp,0x20
0x2f16: mov r15,rax
0x2f19: mov rbx,qword ptr [rsp+0xa8]
0x2f21: xor rbx,qword ptr fs:0x28
0x2f2a: mov rax,r15
0x2f2d: jne 0x3533
0x2f33: add rsp,0xb8
0x2f3a: pop rbx
0x2f3b: pop rbp
0x2f3c: pop r12
0x2f3e: pop r13
0x2f40: pop r14
0x2f42: pop r15
0x2f44: ret 
0x2f48: mov rbp,r11
0x2f4b: jmp 0x2ec9
0x2fb1: test r13,r13
0x2fb4: jne 0x354a
0x2fba: lea rax,[rip+0x41e4]
0x2fc1: mov qword ptr [rsp+0x50],0x0
0x2fca: mov byte ptr [rsp+0xe],0x1
0x2fcf: mov byte ptr [rsp+0x7c],0x0
0x2fd4: xor r12d,r12d
0x2fd7: mov byte ptr [rsp+0xf],0x0
0x2fdc: mov qword ptr [rsp+0x18],0x1
0x2fe5: mov qword ptr [rsp+0x48],rax
0x2fea: mov r15d,0x1
0x2ff0: mov dword ptr [rsp+0x8],0x2
0x2ff8: jmp 0x2413
0x3210: movzx ebx,byte ptr [rsp+0xf]
0x3215: mov rbp,r11
0x3218: mov byte ptr [rsp+0xd],bl
0x321c: jmp 0x2ec9
0x3221: movzx edx,byte ptr [rsp+0xd]
0x3226: xor r12d,r12d
0x3229: jmp 0x2d30
0x322e: xor r10d,r10d
0x3231: jmp 0x2ded
0x3251: mov r11,qword ptr [rsp+0x30]
0x3256: mov rsi,r14
0x3259: mov rcx,r13
0x325c: mov rax,rbx
0x325f: mov rdi,rbx
0x3262: movzx r8d,byte ptr [rsp+0x7d]
0x3268: movzx ebx,byte ptr [rsp+0x7e]
0x326d: mov r9,qword ptr [rsp+0x88]
0x3275: cmp rsi,r11
0x3278: movzx r10d,byte ptr [rsp+0x7f]
0x327e: mov r15,qword ptr [rsp+0x80]
0x3286: mov r14,qword ptr [rsp+0x40]
0x328b: mov r13,qword ptr [rsp+0x70]
0x3290: jae 0x32b8
0x3292: cmp byte ptr [rcx],0x0
0x3295: jne 0x32a7
0x3297: jmp 0x32b8
0x32a0: cmp byte ptr [r9+rax],0x0
0x32a5: je 0x32b5
0x32a7: add rax,0x1
0x32ab: lea rdx,[rbp+rax]
0x32b0: cmp r11,rdx
0x32b3: ja 0x32a0
0x32b5: mov rdi,rax
0x32b8: movzx edx,byte ptr [rsp+0xd]
0x32bd: xor r12d,r12d
0x32c0: jmp 0x2d26
0x32c5: mov rdi,rbx
0x32c8: movzx r8d,byte ptr [rsp+0x7d]
0x32ce: movzx ebx,byte ptr [rsp+0x7e]
0x32d3: movzx r10d,byte ptr [rsp+0x7f]
0x32d9: mov r15,qword ptr [rsp+0x80]
0x32e1: xor r12d,r12d
0x32e4: mov r14,qword ptr [rsp+0x40]
0x32e9: mov r13,qword ptr [rsp+0x70]
0x32ee: mov r11,qword ptr [rsp+0x30]
0x32f3: movzx edx,byte ptr [rsp+0xd]
0x32f8: jmp 0x2d26
0x332b: mov eax,edx
0x332d: jmp 0x2887
0x343a: mov eax,edx
0x343c: mov rbx,qword ptr [rsp+0x48]
0x3441: test rbx,rbx
0x3444: je 0x3472
0x3446: test al,al
0x3448: je 0x3472
0x344a: movzx ecx,byte ptr [rbx]
0x344d: mov rax,rbx
0x3450: test cl,cl
0x3452: je 0x3472
0x3454: mov rdx,r15
0x3457: sub rax,r15
0x345a: cmp r13,rdx
0x345d: jbe 0x3463
0x345f: mov byte ptr [r14+rdx],cl
0x3463: add rdx,0x1
0x3467: movzx ecx,byte ptr [rax+rdx]
0x346b: test cl,cl
0x346d: jne 0x345a
0x346f: mov r15,rdx
0x3472: cmp r13,r15
0x3475: jbe 0x2f19
0x347b: mov byte ptr [r14+r15],0x0
0x3480: jmp 0x2f19
0x3485: cmp dword ptr [rsp+0x8],0x2
0x348a: movzx ebx,byte ptr [rsp+0xf]
0x348f: mov rbp,r11
0x3492: sete al
0x3495: mov byte ptr [rsp+0xd],bl
0x3499: jmp 0x2ec9
0x34dd: sub rsp,0x8
0x34e1: mov r8d,0x5
0x34e7: mov rcx,r11
0x34ea: push qword ptr [rsp+0x68]
0x34ee: push qword ptr [rsp+0x78]
0x34f2: mov rdi,r14
0x34f5: push qword ptr [rsp+0x38]
0x34f9: mov r9d,dword ptr [rsp+0x98]
0x3501: mov rdx,qword ptr [rsp+0x30]
0x3506: mov rsi,qword ptr [rsp+0x70]
0x350b: call 0x2340
0x3510: add rsp,0x20
0x3514: mov r15,rax
0x3517: jmp 0x2f19
0x351c: movzx eax,byte ptr [rsp+0x7c]
0x3521: jmp 0x343c
0x3526: mov dword ptr [rsp+0x8],0x2
0x352e: jmp 0x2ec9
0x3533: call 0x14d0
0x3538: mov byte ptr [rsp+0xd],0x0
0x353d: jmp 0x2fb1
0x354a: mov byte ptr [rsp+0xe],0x1
0x354f: xor eax,eax
0x3551: xor r12d,r12d
0x3554: mov qword ptr [rsp+0x50],0x0
0x355d: jmp 0x2b04
0x356f: call 0x1400
0x3574: nop 
0x3576: nop word ptr cs:[rax+rax]
0x366c: add rsp,0x20
0x3670: mov r11,qword ptr [rsp+0x10]
0x3675: cmp r11,rax
0x3678: ja 0x36e1
0x367a: lea rsi,[rax+0x1]
0x367e: lea rax,[rip+0x206a5b]
0x3685: cmp r12,rax
0x3688: mov qword ptr [rbx],rsi
0x368b: je 0x369f
0x368d: mov rdi,r12
0x3690: mov qword ptr [rsp+0x10],rsi
0x3695: call 0x13f0
0x369a: mov rsi,qword ptr [rsp+0x10]
0x369f: mov rdi,rsi
0x36a2: mov qword ptr [rsp+0x10],rsi
0x36a7: call 0x4500
0x36ac: sub rsp,0x8
0x36b0: mov qword ptr [rbx+0x8],rax
0x36b4: mov r8d,dword ptr [rbp]
0x36b8: push qword ptr [rbp+0x30]
0x36bb: push qword ptr [rbp+0x28]
0x36be: mov rcx,r14
0x36c1: push r15
0x36c3: mov r9d,dword ptr [rsp+0x3c]
0x36c8: mov rdi,rax
0x36cb: mov rdx,qword ptr [rsp+0x28]
0x36d0: mov rsi,qword ptr [rsp+0x30]
0x36d5: mov r12,rax
0x36d8: call 0x2340
0x36dd: add rsp,0x20
0x36e1: mov eax,dword ptr [rsp+0x18]
0x36e5: mov dword ptr [r13],eax
0x36e9: add rsp,0x28
0x36ed: mov rax,r12
0x36f0: pop rbx
0x36f1: pop rbp
0x36f2: pop r12
0x36f4: pop r13
0x36f6: pop r14
0x36f8: pop r15
0x36fa: ret 
0x3721: call 0x1400
0x3726: call 0x4750
0x372b: nop dword ptr [rax+rax]
0x3730: push r12
0x3732: push rbp
0x3733: push rbx
0x3734: mov rbx,rdi
0x3737: call 0x1410
0x373c: mov r12d,dword ptr [rax]
0x373f: mov rbp,rax
0x3742: lea rax,[rip+0x206a97]
0x3749: test rbx,rbx
0x374c: mov esi,0x38
0x3751: cmove rbx,rax
0x3755: mov rdi,rbx
0x3758: call 0x4700
0x375d: mov dword ptr [rbp],r12d
0x3761: pop rbx
0x3762: pop rbp
0x3763: pop r12
0x3765: ret 
0x3770: lea rax,[rip+0x206a69]
0x3777: test rdi,rdi
0x377a: cmove rdi,rax
0x377e: mov eax,dword ptr [rdi]
0x3780: ret 
0x3790: lea rax,[rip+0x206a49]
0x3797: test rdi,rdi
0x379a: cmove rdi,rax
0x379e: mov dword ptr [rdi],esi
0x37a0: ret 
0x37b0: lea rax,[rip+0x206a29]
0x37b7: test rdi,rdi
0x37ba: mov ecx,esi
0x37bc: cmove rdi,rax
0x37c0: mov eax,esi
0x37c2: and ecx,0x1f
0x37c5: shr al,0x5
0x37c8: movzx eax,al
0x37cb: lea rdi,[rdi+rax*4+0x8]
0x37d0: mov esi,dword ptr [rdi]
0x37d2: mov eax,esi
0x37d4: shr eax,cl
0x37d6: xor edx,eax
0x37d8: and eax,0x1
0x37db: and edx,0x1
0x37de: shl edx,cl
0x37e0: xor edx,esi
0x37e2: mov dword ptr [rdi],edx
0x37e4: ret 
0x37f0: lea rax,[rip+0x2069e9]
0x37f7: test rdi,rdi
0x37fa: cmove rdi,rax
0x37fe: mov eax,dword ptr [rdi+0x4]
0x3801: mov dword ptr [rdi+0x4],esi
0x3804: ret 
0x3810: lea rax,[rip+0x2069c9]
0x3817: test rdi,rdi
0x381a: cmove rdi,rax
0x381e: test rsi,rsi
0x3821: mov dword ptr [rdi],0xa
0x3827: je 0x3837
0x3829: test rdx,rdx
0x382c: je 0x3837
0x382e: mov qword ptr [rdi+0x28],rsi
0x3832: mov qword ptr [rdi+0x30],rdx
0x3836: ret 
0x3837: sub rsp,0x8
0x383b: call 0x1400
0x3840: push r15
0x3842: push r14
0x3844: lea rax,[rip+0x206995]
0x384b: push r13
0x384d: push r12
0x384f: mov r13,rdi
0x3852: push rbp
0x3853: push rbx
0x3854: mov rbx,r8
0x3857: mov r14,rsi
0x385a: mov r15,rdx
0x385d: sub rsp,0x18
0x3861: test r8,r8
0x3864: cmove rbx,rax
0x3868: mov qword ptr [rsp+0x8],rcx
0x386d: call 0x1410
0x3872: mov r12d,dword ptr [rax]
0x3875: mov rbp,rax
0x3878: lea rax,[rbx+0x8]
0x387c: sub rsp,0x8
0x3880: mov r9d,dword ptr [rbx+0x4]
0x3884: push qword ptr [rbx+0x30]
0x3887: mov r8d,dword ptr [rbx]
0x388a: push qword ptr [rbx+0x28]
0x388d: mov rdx,r15
0x3890: push rax
0x3891: mov rcx,qword ptr [rsp+0x28]
0x3896: mov rsi,r14
0x3899: mov rdi,r13
0x389c: call 0x2340
0x38a1: mov dword ptr [rbp],r12d
0x38a5: add rsp,0x38
0x38a9: pop rbx
0x38aa: pop rbp
0x38ab: pop r12
0x38ad: pop r13
0x38af: pop r14
0x38b1: pop r15
0x38b3: ret 
0x38c0: push r15
0x38c2: push r14
0x38c4: lea rax,[rip+0x206915]
0x38cb: push r13
0x38cd: push r12
0x38cf: mov r12,rdx
0x38d2: push rbp
0x38d3: push rbx
0x38d4: mov rbx,rcx
0x38d7: mov r14,rdi
0x38da: mov r15,rsi
0x38dd: sub rsp,0x38
0x38e1: test rcx,rcx
0x38e4: cmove rbx,rax
0x38e8: xor ebp,ebp
0x38ea: call 0x1410
0x38ef: test r12,r12
0x38f2: mov r13,rax
0x38f5: mov eax,dword ptr [rax]
0x38f7: sete bpl
0x38fb: or ebp,dword ptr [rbx+0x4]
0x38fe: lea r10,[rbx+0x8]
0x3902: sub rsp,0x8
0x3906: mov r8d,dword ptr [rbx]
0x3909: mov rcx,r15
0x390c: mov dword ptr [rsp+0x14],eax
0x3910: push qword ptr [rbx+0x30]
0x3913: mov rdx,r14
0x3916: push qword ptr [rbx+0x28]
0x3919: push r10
0x391b: xor esi,esi
0x391d: mov r9d,ebp
0x3920: xor edi,edi
0x3922: mov qword ptr [rsp+0x40],r10
0x3927: call 0x2340
0x392c: lea rsi,[rax+0x1]
0x3930: mov qword ptr [rsp+0x48],rax
0x3935: add rsp,0x20
0x3939: mov rdi,rsi
0x393c: mov qword ptr [rsp+0x18],rsi
0x3941: call 0x4500
0x3946: mov qword ptr [rsp+0x10],rax
0x394b: sub rsp,0x8
0x394f: push qword ptr [rbx+0x30]
0x3952: push qword ptr [rbx+0x28]
0x3955: mov r10,qword ptr [rsp+0x38]
0x395a: mov r9d,ebp
0x395d: mov r8d,dword ptr [rbx]
0x3960: mov rcx,r15
0x3963: mov rdx,r14
0x3966: mov rdi,rax
0x3969: push r10
0x396b: mov rsi,qword ptr [rsp+0x38]
0x3970: call 0x2340
0x3975: mov eax,dword ptr [rsp+0x2c]
0x3979: add rsp,0x20
0x397d: test r12,r12
0x3980: mov dword ptr [r13],eax
0x3984: je 0x398f
0x3986: mov r11,qword ptr [rsp+0x28]
0x398b: mov qword ptr [r12],r11
0x398f: mov rax,qword ptr [rsp+0x10]
0x3994: add rsp,0x38
0x3998: pop rbx
0x3999: pop rbp
0x399a: pop r12
0x399c: pop r13
0x399e: pop r14
0x39a0: pop r15
0x39a2: ret 
0x39b0: mov rcx,rdx
0x39b3: xor edx,edx
0x39b5: jmp 0x38c0
0x39c0: mov eax,dword ptr [rip+0x206692]
0x39c6: push r12
0x39c8: mov r12,qword ptr [rip+0x206691]
0x39cf: push rbp
0x39d0: push rbx
0x39d1: cmp eax,0x1
0x39d4: jle 0x3a01
0x39d6: sub eax,0x2
0x39d9: lea rbx,[r12+0x18]
0x39de: shl rax,0x4
0x39e2: lea rbp,[r12+rax+0x28]
0x39e7: nop word ptr [rax+rax]
0x39f0: mov rdi,qword ptr [rbx]
0x39f3: add rbx,0x10
0x39f7: call 0x13f0
0x39fc: cmp rbx,rbp
0x39ff: jne 0x39f0
0x3a01: mov rdi,qword ptr [r12+0x8]
0x3a06: lea rbx,[rip+0x2066d3]
0x3a0d: cmp rdi,rbx
0x3a10: je 0x3a29
0x3a12: call 0x13f0
0x3a17: mov qword ptr [rip+0x20664e],0x100
0x3a22: mov qword ptr [rip+0x20664f],rbx
0x3a29: lea rbx,[rip+0x206640]
0x3a30: cmp r12,rbx
0x3a33: je 0x3a44
0x3a35: mov rdi,r12
0x3a38: call 0x13f0
0x3a3d: mov qword ptr [rip+0x20661c],rbx
0x3a44: pop rbx
0x3a45: mov dword ptr [rip+0x206609],0x1
0x3a4f: pop rbp
0x3a50: pop r12
0x3a52: ret 
0x3a60: lea rcx,[rip+0x206779]
0x3a67: mov rdx,-0x1
0x3a6e: jmp 0x3580
0x3a80: lea rcx,[rip+0x206759]
0x3a87: jmp 0x3580
0x3a90: lea rcx,[rip+0x206749]
0x3a97: mov rsi,rdi
0x3a9a: mov rdx,-0x1
0x3aa1: xor edi,edi
0x3aa3: jmp 0x3580
0x3ab0: lea rcx,[rip+0x206729]
0x3ab7: mov rdx,rsi
0x3aba: mov rsi,rdi
0x3abd: xor edi,edi
0x3abf: jmp 0x3580
0x3b3f: mov rcx,qword ptr [rsp+0x38]
0x3b44: xor rcx,qword ptr fs:0x28
0x3b4d: jne 0x3b59
0x3b4f: add rsp,0x48
0x3b53: ret 
0x3b54: call 0x1400
0x3b59: call 0x14d0
0x3b5e: nop 
0x3b60: sub rsp,0x48
0x3b64: mov rax,rdx
0x3b67: mov rdx,rcx
0x3b6a: mov rcx,qword ptr fs:0x28
0x3b73: mov qword ptr [rsp+0x38],rcx
0x3b78: xor ecx,ecx
0x3b7a: cmp esi,0xa
0x3b7d: je 0x3be0
0x3b7f: mov dword ptr [rsp],esi
0x3b82: mov rcx,rsp
0x3b85: mov rsi,rax
0x3b88: mov qword ptr [rsp+0x4],0x0
0x3b91: mov qword ptr [rsp+0xc],0x0
0x3b9a: mov qword ptr [rsp+0x14],0x0
0x3ba3: mov qword ptr [rsp+0x1c],0x0
0x3bac: mov qword ptr [rsp+0x24],0x0
0x3bb5: mov qword ptr [rsp+0x2c],0x0
0x3bbe: mov dword ptr [rsp+0x34],0x0
0x3bc6: call 0x3580
0x3bcb: mov rdx,qword ptr [rsp+0x38]
0x3bd0: xor rdx,qword ptr fs:0x28
0x3bd9: jne 0x3be5
0x3bdb: add rsp,0x48
0x3bdf: ret 
0x3be0: call 0x1400
0x3be5: call 0x14d0
0x3bea: nop word ptr [rax+rax]
0x3c00: mov rcx,rdx
0x3c03: mov rdx,rsi
0x3c06: mov esi,edi
0x3c08: xor edi,edi
0x3c0a: jmp 0x3b60
0x3c10: sub rsp,0x48
0x3c14: mov ecx,edx
0x3c16: mov rax,qword ptr fs:0x28
0x3c1f: mov qword ptr [rsp+0x38],rax
0x3c24: xor eax,eax
0x3c26: mov rax,qword ptr [rip+0x2065e3]
0x3c2d: mov r8,rsp
0x3c30: and ecx,0x1f
0x3c33: movdqa xmm0,[rip+0x2065a5]
0x3c3b: mov qword ptr [rsp+0x30],rax
0x3c40: mov eax,edx
0x3c42: movaps [rsp],xmm0
0x3c46: shr al,0x5
0x3c49: movzx eax,al
0x3c4c: lea r9,[r8+rax*4+0x8]
0x3c51: movdqa xmm0,[rip+0x206597]
0x3c59: movaps [rsp+0x10],xmm0
0x3c5e: movdqa xmm0,[rip+0x20659a]
0x3c66: movaps [rsp+0x20],xmm0
0x3c6b: mov edx,dword ptr [r9]
0x3c6e: mov eax,edx
0x3c70: shr eax,cl
0x3c72: not eax
0x3c74: and eax,0x1
0x3c77: shl eax,cl
0x3c79: mov rcx,r8
0x3c7c: xor eax,edx
0x3c7e: mov rdx,rsi
0x3c81: mov rsi,rdi
0x3c84: mov dword ptr [r9],eax
0x3c87: xor edi,edi
0x3c89: call 0x3580
0x3c8e: mov rsi,qword ptr [rsp+0x38]
0x3c93: xor rsi,qword ptr fs:0x28
0x3c9c: jne 0x3ca3
0x3c9e: add rsp,0x48
0x3ca2: ret 
0x3ca3: call 0x14d0
0x3ca8: nop dword ptr [rax+rax]
0x3cb0: movsx edx,sil
0x3cb4: mov rsi,-0x1
0x3cbb: jmp 0x3c10
0x3cc0: mov edx,0x3a
0x3cc5: mov rsi,-0x1
0x3ccc: jmp 0x3c10
0x3ce0: mov edx,0x3a
0x3ce5: jmp 0x3c10
0x3cf0: sub rsp,0x48
0x3cf4: mov rax,rdx
0x3cf7: mov rdx,qword ptr fs:0x28
0x3d00: mov qword ptr [rsp+0x38],rdx
0x3d05: xor edx,edx
0x3d07: cmp esi,0xa
0x3d0a: je 0x3d74
0x3d0c: mov dword ptr [rsp],esi
0x3d0f: mov rcx,rsp
0x3d12: mov rdx,-0x1
0x3d19: mov rsi,rax
0x3d1c: mov qword ptr [rsp+0x4],0x0
0x3d25: mov qword ptr [rsp+0xc],0x4000000
0x3d2e: mov qword ptr [rsp+0x14],0x0
0x3d37: mov qword ptr [rsp+0x1c],0x0
0x3d40: mov qword ptr [rsp+0x24],0x0
0x3d49: mov qword ptr [rsp+0x2c],0x0
0x3d52: mov dword ptr [rsp+0x34],0x0
0x3d5a: call 0x3580
0x3d5f: mov rcx,qword ptr [rsp+0x38]
0x3d64: xor rcx,qword ptr fs:0x28
0x3d6d: jne 0x3d79
0x3d6f: add rsp,0x48
0x3d73: ret 
0x3d74: call 0x1400
0x3d79: call 0x14d0
0x3d7e: nop 
0x3d80: sub rsp,0x48
0x3d84: mov r9,rcx
0x3d87: mov rcx,qword ptr [rip+0x206482]
0x3d8e: movdqa xmm0,[rip+0x20644a]
0x3d96: mov rax,qword ptr fs:0x28
0x3d9f: mov qword ptr [rsp+0x38],rax
0x3da4: xor eax,eax
0x3da6: movaps [rsp],xmm0
0x3daa: test rsi,rsi
0x3dad: mov qword ptr [rsp+0x30],rcx
0x3db2: mov dword ptr [rsp],0xa
0x3db9: movdqa xmm0,[rip+0x20642f]
0x3dc1: movaps [rsp+0x10],xmm0
0x3dc6: movdqa xmm0,[rip+0x206432]
0x3dce: movaps [rsp+0x20],xmm0
0x3dd3: je 0x3e07
0x3dd5: test rdx,rdx
0x3dd8: je 0x3e07
0x3dda: mov qword ptr [rsp+0x28],rsi
0x3ddf: mov qword ptr [rsp+0x30],rdx
0x3de4: mov rcx,rsp
0x3de7: mov rdx,r8
0x3dea: mov rsi,r9
0x3ded: call 0x3580
0x3df2: mov rdi,qword ptr [rsp+0x38]
0x3df7: xor rdi,qword ptr fs:0x28
0x3e00: jne 0x3e0c
0x3e02: add rsp,0x48
0x3e06: ret 
0x3e07: call 0x1400
0x3e0c: call 0x14d0
0x3e11: nop dword ptr [rax+rax]
0x3e16: nop word ptr cs:[rax+rax]
0x3e20: mov r8,-0x1
0x3e27: jmp 0x3d80
0x3e30: mov rcx,rdx
0x3e33: mov r8,-0x1
0x3e3a: mov rdx,rsi
0x3e3d: mov rsi,rdi
0x3e40: xor edi,edi
0x3e42: jmp 0x3d80
0x3e50: mov r8,rcx
0x3e53: mov rcx,rdx
0x3e56: mov rdx,rsi
0x3e59: mov rsi,rdi
0x3e5c: xor edi,edi
0x3e5e: jmp 0x3d80
0x3e70: lea rcx,[rip+0x2061a9]
0x3e77: jmp 0x3580
0x3e80: lea rcx,[rip+0x206199]
0x3e87: mov rdx,rsi
0x3e8a: mov rsi,rdi
0x3e8d: xor edi,edi
0x3e8f: jmp 0x3580
0x3ea0: lea rcx,[rip+0x206179]
0x3ea7: mov rdx,-0x1
0x3eae: jmp 0x3580
0x3ec0: lea rcx,[rip+0x206159]
0x3ec7: mov rsi,rdi
0x3eca: mov rdx,-0x1
0x3ed1: xor edi,edi
0x3ed3: jmp 0x3580
0x4018: mov r8,rcx
0x401b: mov rcx,rdx
0x401e: lea rdx,[rip+0x364f]
0x4025: mov esi,0x1
0x402a: xor eax,eax
0x402c: call 0x16a0
0x4031: jmp 0x3f1c
0x422d: push r12
0x422f: push r15
0x4231: push r14
0x4233: mov r8,qword ptr [rsp+0x20]
0x4238: mov rcx,rbx
0x423b: mov rdx,rax
0x423e: mov rdi,rbp
0x4241: mov esi,0x1
0x4246: xor eax,eax
0x4248: call 0x16a0
0x424d: add rsp,0x20
0x4251: add rsp,0x28
0x4255: pop rbx
0x4256: pop rbp
0x4257: pop r12
0x4259: pop r13
0x425b: pop r14
0x425d: pop r15
0x425f: ret 
0x4299: push r12
0x429b: push r15
0x429d: push r14
0x429f: mov r9,qword ptr [rsp+0x28]
0x42a4: jmp 0x4233
0x4300: xor r9d,r9d
0x4303: cmp qword ptr [r8],0x0
0x4307: je 0x431b
0x4309: nop dword ptr [rax]
0x4310: add r9,0x1
0x4314: cmp qword ptr [r8+r9*8],0x0
0x4319: jne 0x4310
0x431b: jmp 0x3ee0
0x4320: sub rsp,0x68
0x4324: mov r10,r8
0x4327: xor r9d,r9d
0x432a: mov rax,qword ptr fs:0x28
0x4333: mov qword ptr [rsp+0x58],rax
0x4338: xor eax,eax
0x433a: mov r8,rsp
0x433d: nop dword ptr [rax]
0x4340: mov eax,dword ptr [r10]
0x4343: cmp eax,0x2f
0x4346: ja 0x438a
0x4348: mov r11d,eax
0x434b: add r11,qword ptr [r10+0x10]
0x434f: add eax,0x8
0x4352: mov dword ptr [r10],eax
0x4355: mov rax,qword ptr [r11]
0x4358: test rax,rax
0x435b: mov qword ptr [r8+r9*8],rax
0x435f: je 0x436b
0x4361: add r9,0x1
0x4365: cmp r9,0xa
0x4369: jne 0x4340
0x436b: call 0x3ee0
0x4370: mov rax,qword ptr [rsp+0x58]
0x4375: xor rax,qword ptr fs:0x28
0x437e: jne 0x4385
0x4380: add rsp,0x68
0x4384: ret 
0x4385: call 0x14d0
0x438a: mov r11,qword ptr [r10+0x8]
0x438e: lea rax,[r11+0x8]
0x4392: mov qword ptr [r10+0x8],rax
0x4396: jmp 0x4355
0x4460: call 0x14d0
0x446c: mov rax,rbx
0x446f: add rbx,0x8
0x4473: jmp 0x4426
0x4480: push rbx
0x4481: lea rsi,[rip+0x323a]
0x4488: mov edx,0x5
0x448d: xor edi,edi
0x448f: call 0x1490
0x4494: lea rdx,[rip+0x323c]
0x449b: mov rsi,rax
0x449e: mov edi,0x1
0x44a3: xor eax,eax
0x44a5: call 0x1630
0x44aa: lea rsi,[rip+0x323c]
0x44b1: mov edx,0x5
0x44b6: xor edi,edi
0x44b8: call 0x1490
0x44bd: lea rcx,[rip+0x2bcc]
0x44c4: lea rdx,[rip+0x2895]
0x44cb: mov rsi,rax
0x44ce: mov edi,0x1
0x44d3: xor eax,eax
0x44d5: call 0x1630
0x44da: mov rbx,qword ptr [rip+0x205ba7]
0x44e1: lea rsi,[rip+0x3438]
0x44e8: xor edi,edi
0x44ea: mov edx,0x5
0x44ef: call 0x1490
0x44f4: mov rsi,rbx
0x44f7: mov rdi,rax
0x44fa: pop rbx
0x44fb: jmp 0x1570
0x4500: push rbx
0x4501: mov rbx,rdi
0x4504: call 0x15c0
0x4509: test rax,rax
0x450c: jne 0x4513
0x450e: test rbx,rbx
0x4511: jne 0x4515
0x4513: pop rbx
0x4514: ret 
0x4515: call 0x4750
0x451a: nop word ptr [rax+rax]
0x4520: mov rax,rdi
0x4523: mul rsi
0x4526: mov rdi,rax
0x4529: seto al
0x452c: test rdi,rdi
0x452f: js 0x453b
0x4531: movzx eax,al
0x4534: test rax,rax
0x4537: jne 0x453b
0x4539: jmp 0x4500
0x453b: sub rsp,0x8
0x453f: call 0x4750
0x4544: nop 
0x4546: nop word ptr cs:[rax+rax]
0x4550: jmp 0x4500
0x4569: test rdi,rdi
0x456c: jne 0x4588
0x4588: call 0x13f0
0x458d: xor eax,eax
0x458f: pop rbx
0x4590: ret 
0x4596: nop word ptr cs:[rax+rax]
0x45a0: mov rax,rsi
0x45a3: mul rdx
0x45a6: mov rsi,rax
0x45a9: seto al
0x45ac: test rsi,rsi
0x45af: js 0x45bb
0x45b1: movzx eax,al
0x45b4: test rax,rax
0x45b7: jne 0x45bb
0x45b9: jmp 0x4560
0x45bb: sub rsp,0x8
0x45bf: call 0x4750
0x45c4: nop 
0x45c6: nop word ptr cs:[rax+rax]
0x45d0: test rdi,rdi
0x45d3: mov r9,rdx
0x45d6: mov rcx,qword ptr [rsi]
0x45d9: je 0x4610
0x45db: xor edx,edx
0x45dd: movabsq rax,0x5555555555555554
0x45e7: div r9
0x45ea: cmp rax,rcx
0x45ed: jbe 0x462b
0x45ef: mov rax,rcx
0x45f2: shr rax
0x45f5: lea rcx,[rax+rcx+0x1]
0x45fa: mov qword ptr [rsi],rcx
0x45fd: imul rcx,r9
0x4601: mov rsi,rcx
0x4604: jmp 0x4560
0x4610: test rcx,rcx
0x4613: je 0x4638
0x4615: mov rax,rcx
0x4618: mul r9
0x461b: seto dl
0x461e: test rax,rax
0x4621: movzx edx,dl
0x4624: js 0x462b
0x4626: test rdx,rdx
0x4629: je 0x45fa
0x462b: sub rsp,0x8
0x462f: call 0x4750
0x4634: nop dword ptr [rax]
0x4638: xor edx,edx
0x463a: mov eax,0x80
0x463f: xor r8d,r8d
0x4642: div r9
0x4645: test rax,rax
0x4648: sete r8b
0x464c: lea rcx,[r8+rax]
0x4650: jmp 0x4615
0x4660: test rdi,rdi
0x4663: mov rax,qword ptr [rsi]
0x4666: je 0x4690
0x4668: movabsq rdx,0x5555555555555553
0x4672: cmp rax,rdx
0x4675: ja 0x46a1
0x4677: mov rdx,rax
0x467a: shr rdx
0x467d: lea rax,[rdx+rax+0x1]
0x4682: mov qword ptr [rsi],rax
0x4685: mov rsi,rax
0x4688: jmp 0x4560
0x4690: test rax,rax
0x4693: mov edx,0x80
0x4698: cmove rax,rdx
0x469c: test rax,rax
0x469f: jns 0x4682
0x46a1: sub rsp,0x8
0x46a5: call 0x4750
0x46aa: nop word ptr [rax+rax]
0x46b0: push rbx
0x46b1: mov rbx,rdi
0x46b4: call 0x4500
0x46b9: mov rdx,rbx
0x46bc: xor esi,esi
0x46be: mov rdi,rax
0x46c1: pop rbx
0x46c2: jmp 0x1530
0x46d0: mov rax,rdi
0x46d3: sub rsp,0x8
0x46d7: mul rsi
0x46da: seto dl
0x46dd: test rax,rax
0x46e0: js 0x46f9
0x46e2: movzx edx,dl
0x46e5: test rdx,rdx
0x46e8: jne 0x46f9
0x46ea: call 0x1580
0x46ef: test rax,rax
0x46f2: je 0x46f9
0x46f4: add rsp,0x8
0x46f8: ret 
0x46f9: call 0x4750
0x46fe: nop 
0x4700: push rbp
0x4701: push rbx
0x4702: mov rbp,rdi
0x4705: mov rdi,rsi
0x4708: mov rbx,rsi
0x470b: sub rsp,0x8
0x470f: call 0x4500
0x4714: add rsp,0x8
0x4718: mov rdx,rbx
0x471b: mov rsi,rbp
0x471e: pop rbx
0x471f: pop rbp
0x4720: mov rdi,rax
0x4723: jmp 0x1590
0x4730: push rbx
0x4731: mov rbx,rdi
0x4734: call 0x14b0
0x4739: mov rdi,rbx
0x473c: lea rsi,[rax+0x1]
0x4740: pop rbx
0x4741: jmp 0x4700
0x4780: call 0x1400
0x4785: nop word ptr cs:[rax+rax]
0x478f: nop 
0x4790: push r13
0x4792: push r12
0x4794: mov r13,rsi
0x4797: push rbp
0x4798: push rbx
0x4799: mov rbx,rdi
0x479c: mov r12,rdx
0x479f: sub rsp,0x18
0x47a3: mov rax,qword ptr fs:0x28
0x47ac: mov qword ptr [rsp+0x8],rax
0x47b1: xor eax,eax
0x47b3: lea rax,[rsp+0x4]
0x47b8: test rdi,rdi
0x47bb: cmove rbx,rax
0x47bf: mov rdi,rbx
0x47c2: call 0x14f0
0x47c7: cmp rax,-0x3
0x47cb: mov rbp,rax
0x47ce: jbe 0x47f0
0x47d0: test r12,r12
0x47d3: je 0x47f0
0x47d5: xor edi,edi
0x47d7: call 0x4a50
0x47dc: test al,al
0x47de: jne 0x47f0
0x47e0: movzx eax,byte ptr [r13]
0x47e5: mov ebp,0x1
0x47ea: mov dword ptr [rbx],eax
0x47ec: nop dword ptr [rax]
0x47f0: mov rdx,qword ptr [rsp+0x8]
0x47f5: xor rdx,qword ptr fs:0x28
0x47fe: mov rax,rbp
0x4801: jne 0x480e
0x4803: add rsp,0x18
0x4807: pop rbx
0x4808: pop rbp
0x4809: pop r12
0x480b: pop r13
0x480d: ret 
0x480e: call 0x14d0
0x4813: nop word ptr cs:[rax+rax]
0x481d: nop dword ptr [rax]
0x4820: push r13
0x4822: push r12
0x4824: mov rax,rsi
0x4827: push rbp
0x4828: push rbx
0x4829: mov r13,rdi
0x482c: sub rsp,0x7f8
0x4833: lea r12,[rsp+0x10]
0x4838: lea rsi,[rsp+0x8]
0x483d: mov qword ptr [rsp+0x8],0x7d0
0x4846: mov rcx,qword ptr fs:0x28
0x484f: mov qword ptr [rsp+0x7e8],rcx
0x4857: xor ecx,ecx
0x4859: mov rdi,r12
0x485c: mov rcx,rdx
0x485f: mov rdx,rax
0x4862: call 0x4c20
0x4867: test rax,rax
0x486a: mov rbx,qword ptr [rsp+0x8]
0x486f: je 0x48fe
0x4875: mov rcx,r13
0x4878: mov rdx,rbx
0x487b: mov esi,0x1
0x4880: mov rdi,rax
0x4883: mov rbp,rax
0x4886: call 0x1690
0x488b: cmp rax,rbx
0x488e: jb 0x48d0
0x4890: cmp rbp,r12
0x4893: je 0x489d
0x4895: mov rdi,rbp
0x4898: call 0x13f0
0x489d: cmp rbx,0x7fffffff
0x48a4: ja 0x48f3
0x48a6: mov rcx,qword ptr [rsp+0x7e8]
0x48ae: xor rcx,qword ptr fs:0x28
0x48b7: mov eax,ebx
0x48b9: jne 0x490d
0x48bb: add rsp,0x7f8
0x48c2: pop rbx
0x48c3: pop rbp
0x48c4: pop r12
0x48c6: pop r13
0x48c8: ret 
0x48d0: cmp rbp,r12
0x48d3: mov ebx,0xffffffff
0x48d8: je 0x48a6
0x48da: call 0x1410
0x48df: mov r13d,dword ptr [rax]
0x48e2: mov r12,rax
0x48e5: mov rdi,rbp
0x48e8: call 0x13f0
0x48ed: mov dword ptr [r12],r13d
0x48f1: jmp 0x48a6
0x48f3: call 0x1410
0x48f8: mov dword ptr [rax],0x4b
0x48fe: mov rdi,r13
0x4901: mov ebx,0xffffffff
0x4906: call 0x4c10
0x490b: jmp 0x48a6
0x490d: call 0x14d0
0x4912: nop word ptr cs:[rax+rax]
0x491c: nop dword ptr [rax]
0x4920: push r12
0x4922: push rbp
0x4923: mov rbp,rdi
0x4926: push rbx
0x4927: call 0x1440
0x492c: mov ebx,dword ptr [rbp]
0x492f: mov rdi,rbp
0x4932: mov r12,rax
0x4935: call 0x4af0
0x493a: and ebx,0x20
0x493d: test ebx,ebx
0x493f: jne 0x4958
0x4941: test eax,eax
0x4943: je 0x494f
0x4945: test r12,r12
0x4948: mov eax,0xffffffff
0x494d: je 0x4988
0x494f: pop rbx
0x4950: pop rbp
0x4951: pop r12
0x4953: ret 
0x4958: test eax,eax
0x495a: jne 0x4978
0x495c: call 0x1410
0x4961: mov dword ptr [rax],0x0
0x4967: mov eax,0xffffffff
0x496c: pop rbx
0x496d: pop rbp
0x496e: pop r12
0x4970: ret 
0x4978: pop rbx
0x4979: mov eax,0xffffffff
0x497e: pop rbp
0x497f: pop r12
0x4981: ret 
0x4988: call 0x1410
0x498d: cmp dword ptr [rax],0x9
0x4990: pop rbx
0x4991: pop rbp
0x4992: pop r12
0x4994: setne al
0x4997: movzx eax,al
0x499a: neg eax
0x499c: ret 
0x4a50: sub rsp,0x8
0x4a54: xor esi,esi
0x4a56: call 0x1620
0x4a5b: mov rdx,rax
0x4a5e: mov eax,0x1
0x4a63: test rdx,rdx
0x4a66: je 0x4a85
0x4a68: lea rdi,[rip+0x2f71]
0x4a6f: mov ecx,0x2
0x4a74: mov rsi,rdx
0x4a77: rep cmpsb [rsi],es:[rdi]
0x4a79: seta cl
0x4a7c: sbb cl,0x0
0x4a7f: xor eax,eax
0x4a81: test cl,cl
0x4a83: jne 0x4a90
0x4a85: add rsp,0x8
0x4a89: ret 
0x4a90: lea rdi,[rip+0x2f4b]
0x4a97: mov ecx,0x6
0x4a9c: mov rsi,rdx
0x4a9f: rep cmpsb [rsi],es:[rdi]
0x4aa1: seta al
0x4aa4: sbb al,0x0
0x4aa6: test al,al
0x4aa8: setne al
0x4aab: add rsp,0x8
0x4aaf: ret 
0x4ab0: sub rsp,0x8
0x4ab4: mov edi,0xe
0x4ab9: call 0x15e0
0x4abe: test rax,rax
0x4ac1: je 0x4ae0
0x4ac3: cmp byte ptr [rax],0x0
0x4ac6: lea rdx,[rip+0x2f1b]
0x4acd: cmove rax,rdx
0x4ad1: add rsp,0x8
0x4ad5: ret 
0x4ae0: lea rax,[rip+0x2f01]
0x4ae7: add rsp,0x8
0x4aeb: ret 
0x4af0: push r12
0x4af2: push rbp
0x4af3: push rbx
0x4af4: mov rbx,rdi
0x4af7: call 0x15a0
0x4afc: test eax,eax
0x4afe: mov rdi,rbx
0x4b01: js 0x4b57
0x4b03: call 0x15f0
0x4b08: test eax,eax
0x4b0a: jne 0x4b38
0x4b0c: mov rdi,rbx
0x4b0f: call 0x4b70
0x4b14: test eax,eax
0x4b16: je 0x4b54
0x4b18: call 0x1410
0x4b1d: mov r12d,dword ptr [rax]
0x4b20: mov rdi,rbx
0x4b23: mov rbp,rax
0x4b26: call 0x1460
0x4b2b: test r12d,r12d
0x4b2e: jne 0x4b60
0x4b30: pop rbx
0x4b31: pop rbp
0x4b32: pop r12
0x4b34: ret 
0x4b38: mov rdi,rbx
0x4b3b: call 0x15a0
0x4b40: xor esi,esi
0x4b42: mov edx,0x1
0x4b47: mov edi,eax
0x4b49: call 0x1520
0x4b4e: cmp rax,-0x1
0x4b52: jne 0x4b0c
0x4b54: mov rdi,rbx
0x4b57: pop rbx
0x4b58: pop rbp
0x4b59: pop r12
0x4b5b: jmp 0x1460
0x4b60: mov dword ptr [rbp],r12d
0x4b64: mov eax,0xffffffff
0x4b69: jmp 0x4b30
0x4b70: test rdi,rdi
0x4b73: push rbx
0x4b74: mov rbx,rdi
0x4b77: je 0x4b8a
0x4b79: call 0x15f0
0x4b7e: test eax,eax
0x4b80: je 0x4b8a
0x4b82: test dword ptr [rbx],0x100
0x4b88: jne 0x4b98
0x4b8a: mov rdi,rbx
0x4b8d: pop rbx
0x4b8e: jmp 0x15d0
0x4b98: mov rdi,rbx
0x4b9b: mov edx,0x1
0x4ba0: xor esi,esi
0x4ba2: call 0x4bb0
0x4ba7: mov rdi,rbx
0x4baa: pop rbx
0x4bab: jmp 0x15d0
0x4bb0: mov rax,qword ptr [rdi+0x8]
0x4bb4: cmp qword ptr [rdi+0x10],rax
0x4bb8: je 0x4bc0
0x4bba: jmp 0x1650
0x4bc0: mov rax,qword ptr [rdi+0x20]
0x4bc4: cmp qword ptr [rdi+0x28],rax
0x4bc8: jne 0x4bba
0x4bca: cmp qword ptr [rdi+0x48],0x0
0x4bcf: jne 0x4bba
0x4bd1: push r12
0x4bd3: push rbp
0x4bd4: mov r12d,edx
0x4bd7: push rbx
0x4bd8: mov rbp,rsi
0x4bdb: mov rbx,rdi
0x4bde: call 0x15a0
0x4be3: mov edx,r12d
0x4be6: mov rsi,rbp
0x4be9: mov edi,eax
0x4beb: call 0x1520
0x4bf0: cmp rax,-0x1
0x4bf4: je 0x4c02
0x4bf6: and dword ptr [rbx],-0x11
0x4bf9: mov qword ptr [rbx+0x90],rax
0x4c00: xor eax,eax
0x4c02: pop rbx
0x4c03: pop rbp
0x4c04: pop r12
0x4c06: ret 
0x4c10: or dword ptr [rdi],0x20
0x4c13: ret 
0x4c20: push rbp
0x4c21: mov rbp,rsp
0x4c24: push r15
0x4c26: push r14
0x4c28: push r13
0x4c2a: push r12
0x4c2c: lea r14,[rbp-0x3b0]
0x4c33: push rbx
0x4c34: mov rbx,rdx
0x4c37: mov r12,rcx
0x4c3a: mov rdx,r14
0x4c3d: sub rsp,0x408
0x4c44: mov qword ptr [rbp-0x418],rsi
0x4c4b: lea rsi,[rbp-0x2c0]
0x4c52: mov qword ptr [rbp-0x3e8],rdi
0x4c59: mov rdi,rbx
0x4c5c: mov qword ptr [rbp-0x410],r14
0x4c63: mov rax,qword ptr fs:0x28
0x4c6c: mov qword ptr [rbp-0x38],rax
0x4c70: xor eax,eax
0x4c72: mov qword ptr [rbp-0x408],rsi
0x4c79: call 0x5f40
0x4c7e: test eax,eax
0x4c80: js 0x5ae8
0x4c86: mov rsi,r14
0x4c89: mov rdi,r12
0x4c8c: call 0x5d40
0x4c91: test eax,eax
0x4c93: js 0x5b50
0x4c99: mov rax,qword ptr [rbp-0x2b0]
0x4ca0: mov rdx,-0x1
0x4ca7: add rax,0x7
0x4cab: cmp rax,0x6
0x4caf: cmovbe rax,rdx
0x4cb3: add rax,qword ptr [rbp-0x2a8]
0x4cba: jb 0x56e8
0x4cc0: mov rdi,rax
0x4cc3: xor r8d,r8d
0x4cc6: add rdi,0x6
0x4cca: setb r8b
0x4cce: jb 0x56e8
0x4cd4: cmp rdi,0xf9f
0x4cdb: jbe 0x4e28
0x4ce1: cmp rdi,-0x1
0x4ce5: mov qword ptr [rbp-0x3c8],r8
0x4cec: je 0x56e8
0x4cf2: call 0x15c0
0x4cf7: test rax,rax
0x4cfa: mov qword ptr [rbp-0x3d8],rax
0x4d01: je 0x56e8
0x4d07: mov r8,qword ptr [rbp-0x3c8]
0x4d0e: mov qword ptr [rbp-0x420],rax
0x4d15: xor r12d,r12d
0x4d18: cmp qword ptr [rbp-0x3e8],0x0
0x4d20: je 0x4d2c
0x4d22: mov rax,qword ptr [rbp-0x418]
0x4d29: mov r12,qword ptr [rax]
0x4d2c: mov r13,qword ptr [rbp-0x2b8]
0x4d33: lea rax,[rbp-0x3bc]
0x4d3a: mov r15,qword ptr [rbp-0x3e8]
0x4d41: mov qword ptr [rbp-0x400],0x0
0x4d4c: mov qword ptr [rbp-0x3f0],rax
0x4d53: mov rax,rbx
0x4d56: mov rbx,r8
0x4d59: mov rcx,qword ptr [r13]
0x4d5d: mov r8,rax
0x4d60: cmp rcx,r8
0x4d63: je 0x56d1
0x4d69: sub rcx,r8
0x4d6c: mov rax,rbx
0x4d6f: add rax,rcx
0x4d72: mov r14,rax
0x4d75: jae 0x4e58
0x4d7b: cmp r12,-0x1
0x4d7f: je 0x5850
0x4d85: call 0x1410
0x4d8a: mov qword ptr [rbp-0x3c8],rax
0x4d91: cmp r15,qword ptr [rbp-0x3e8]
0x4d98: je 0x4da3
0x4d9a: test r15,r15
0x4d9d: jne 0x5880
0x4da3: mov rax,qword ptr [rbp-0x420]
0x4daa: test rax,rax
0x4dad: je 0x4db7
0x4daf: mov rdi,rax
0x4db2: call 0x13f0
0x4db7: mov rax,qword ptr [rbp-0x408]
0x4dbe: mov rdi,qword ptr [rbp-0x2b8]
0x4dc5: add rax,0x20
0x4dc9: cmp rdi,rax
0x4dcc: je 0x4dd3
0x4dce: call 0x13f0
0x4dd3: mov rax,qword ptr [rbp-0x410]
0x4dda: mov rdi,qword ptr [rbp-0x3a8]
0x4de1: add rax,0x10
0x4de5: cmp rdi,rax
0x4de8: je 0x4def
0x4dea: call 0x13f0
0x4def: mov rax,qword ptr [rbp-0x3c8]
0x4df6: xor r15d,r15d
0x4df9: mov dword ptr [rax],0xc
0x4dff: mov rdi,qword ptr [rbp-0x38]
0x4e03: xor rdi,qword ptr fs:0x28
0x4e0c: mov rax,r15
0x4e0f: jne 0x5d17
0x4e15: lea rsp,[rbp-0x28]
0x4e19: pop rbx
0x4e1a: pop r12
0x4e1c: pop r13
0x4e1e: pop r14
0x4e20: pop r15
0x4e22: pop rbp
0x4e23: ret 
0x4e28: add rax,0x24
0x4e2c: mov qword ptr [rbp-0x420],0x0
0x4e37: and rax,-0x10
0x4e3b: sub rsp,rax
0x4e3e: lea rax,[rsp+0xf]
0x4e43: and rax,-0x10
0x4e47: mov qword ptr [rbp-0x3d8],rax
0x4e4e: jmp 0x4d15
0x4e58: cmp r12,rax
0x4e5b: jae 0x4ec4
0x4e5d: test r12,r12
0x4e60: jne 0x5790
0x4e66: cmp rax,0xc
0x4e6a: ja 0x57a2
0x4e70: mov r12d,0xc
0x4e76: cmp r15,qword ptr [rbp-0x3e8]
0x4e7d: sete dl
0x4e80: test r15,r15
0x4e83: je 0x57c8
0x4e89: test dl,dl
0x4e8b: jne 0x57c8
0x4e91: mov rsi,r12
0x4e94: mov rdi,r15
0x4e97: mov qword ptr [rbp-0x3d0],r8
0x4e9e: mov qword ptr [rbp-0x3c8],rcx
0x4ea5: call 0x1610
0x4eaa: test rax,rax
0x4ead: mov rcx,qword ptr [rbp-0x3c8]
0x4eb4: mov r8,qword ptr [rbp-0x3d0]
0x4ebb: je 0x586b
0x4ec1: mov r15,rax
0x4ec4: lea rdi,[r15+rbx]
0x4ec8: mov rdx,rcx
0x4ecb: mov rsi,r8
0x4ece: call 0x1590
0x4ed3: mov rax,qword ptr [rbp-0x400]
0x4eda: cmp qword ptr [rbp-0x2c0],rax
0x4ee1: je 0x5b9b
0x4ee7: movzx edx,byte ptr [r13+0x48]
0x4eec: mov rax,qword ptr [r13+0x50]
0x4ef0: cmp dl,0x25
0x4ef3: je 0x5688
0x4ef9: cmp rax,-0x1
0x4efd: je 0x5b46
0x4f03: mov r8,qword ptr [rbp-0x3a8]
0x4f0a: shl rax,0x5
0x4f0e: add rax,r8
0x4f11: cmp dl,0x6e
0x4f14: mov edi,dword ptr [rax]
0x4f16: mov dword ptr [rbp-0x3d0],edi
0x4f1c: je 0x5700
0x4f22: mov eax,dword ptr [r13+0x10]
0x4f26: mov rdi,qword ptr [rbp-0x3d8]
0x4f2d: test al,0x1
0x4f2f: mov byte ptr [rdi],0x25
0x4f32: lea rbx,[rdi+0x1]
0x4f36: je 0x4f47
0x4f38: mov rdi,qword ptr [rbp-0x3d8]
0x4f3f: lea rbx,[rdi+0x2]
0x4f43: mov byte ptr [rdi+0x1],0x27
0x4f47: test al,0x2
0x4f49: je 0x4f52
0x4f4b: mov byte ptr [rbx],0x2d
0x4f4e: add rbx,0x1
0x4f52: test al,0x4
0x4f54: je 0x4f5d
0x4f56: mov byte ptr [rbx],0x2b
0x4f59: add rbx,0x1
0x4f5d: test al,0x8
0x4f5f: je 0x4f68
0x4f61: mov byte ptr [rbx],0x20
0x4f64: add rbx,0x1
0x4f68: test al,0x10
0x4f6a: je 0x4f73
0x4f6c: mov byte ptr [rbx],0x23
0x4f6f: add rbx,0x1
0x4f73: test al,0x40
0x4f75: je 0x4f7e
0x4f77: mov byte ptr [rbx],0x49
0x4f7a: add rbx,0x1
0x4f7e: test al,0x20
0x4f80: je 0x4f89
0x4f82: mov byte ptr [rbx],0x30
0x4f85: add rbx,0x1
0x4f89: mov rsi,qword ptr [r13+0x18]
0x4f8d: mov rdx,qword ptr [r13+0x20]
0x4f91: cmp rsi,rdx
0x4f94: je 0x4fc6
0x4f96: mov rcx,rdx
0x4f99: mov rdi,rbx
0x4f9c: mov qword ptr [rbp-0x3e0],r8
0x4fa3: sub rcx,rsi
0x4fa6: mov rdx,rcx
0x4fa9: mov qword ptr [rbp-0x3c8],rcx
0x4fb0: call 0x1590
0x4fb5: mov rcx,qword ptr [rbp-0x3c8]
0x4fbc: mov r8,qword ptr [rbp-0x3e0]
0x4fc3: add rbx,rcx
0x4fc6: mov rsi,qword ptr [r13+0x30]
0x4fca: mov rdx,qword ptr [r13+0x38]
0x4fce: cmp rsi,rdx
0x4fd1: je 0x5003
0x4fd3: mov rcx,rdx
0x4fd6: mov rdi,rbx
0x4fd9: mov qword ptr [rbp-0x3e0],r8
0x4fe0: sub rcx,rsi
0x4fe3: mov rdx,rcx
0x4fe6: mov qword ptr [rbp-0x3c8],rcx
0x4fed: call 0x1590
0x4ff2: mov rcx,qword ptr [rbp-0x3c8]
0x4ff9: mov r8,qword ptr [rbp-0x3e0]
0x5000: add rbx,rcx
0x5003: mov edi,dword ptr [rbp-0x3d0]
0x5009: cmp edi,0x10
0x500c: ja 0x503b
0x500e: mov eax,0x1
0x5013: mov ecx,edi
0x5015: shl rax,cl
0x5018: test eax,0x14180
0x501d: jne 0x5034
0x501f: test ah,0x10
0x5022: jne 0x5980
0x5028: test ah,0x6
0x502b: je 0x503b
0x502d: mov byte ptr [rbx],0x6c
0x5030: add rbx,0x1
0x5034: mov byte ptr [rbx],0x6c
0x5037: add rbx,0x1
0x503b: movzx eax,byte ptr [r13+0x48]
0x5040: mov byte ptr [rbx+0x1],0x0
0x5044: mov byte ptr [rbx],al
0x5046: mov rax,qword ptr [r13+0x28]
0x504a: cmp rax,-0x1
0x504e: je 0x5780
0x5054: shl rax,0x5
0x5058: add rax,r8
0x505b: cmp dword ptr [rax],0x5
0x505e: jne 0x5b46
0x5064: mov eax,dword ptr [rax+0x10]
0x5067: mov dword ptr [rbp-0x3e0],0x1
0x5071: mov dword ptr [rbp-0x3b8],eax
0x5077: mov rax,qword ptr [r13+0x40]
0x507b: cmp rax,-0x1
0x507f: je 0x50ac
0x5081: shl rax,0x5
0x5085: add r8,rax
0x5088: cmp dword ptr [r8],0x5
0x508c: jne 0x5b46
0x5092: mov eax,dword ptr [rbp-0x3e0]
0x5098: mov edx,dword ptr [r8+0x10]
0x509c: mov dword ptr [rbp+rax*4-0x3b8],edx
0x50a3: lea eax,[rax+0x1]
0x50a6: mov dword ptr [rbp-0x3e0],eax
0x50ac: mov rax,r14
0x50af: xor edx,edx
0x50b1: add rax,0x2
0x50b5: jb 0x5d1c
0x50bb: cmp r12,rax
0x50be: jae 0x510b
0x50c0: test r12,r12
0x50c3: jne 0x58e8
0x50c9: cmp rax,0xc
0x50cd: ja 0x5900
0x50d3: mov r12d,0xc
0x50d9: cmp r15,qword ptr [rbp-0x3e8]
0x50e0: sete dl
0x50e3: test r15,r15
0x50e6: je 0x5930
0x50ec: test dl,dl
0x50ee: jne 0x5930
0x50f4: mov rsi,r12
0x50f7: mov rdi,r15
0x50fa: call 0x1610
0x50ff: test rax,rax
0x5102: je 0x4d85
0x5108: mov r15,rax
0x510b: mov byte ptr [r15+r14],0x0
0x5110: call 0x1410
0x5115: mov qword ptr [rbp-0x3c8],rax
0x511c: mov eax,dword ptr [rax]
0x511e: mov qword ptr [rbp-0x3f8],rbx
0x5125: mov dword ptr [rbp-0x424],eax
0x512b: nop dword ptr [rax+rax]
0x5130: mov rax,qword ptr [rbp-0x3c8]
0x5137: mov rbx,r12
0x513a: mov r10d,0x7fffffff
0x5140: sub rbx,r14
0x5143: mov dword ptr [rbp-0x3bc],0xffffffff
0x514d: cmp rbx,0x7fffffff
0x5154: mov dword ptr [rax],0x0
0x515a: mov eax,dword ptr [rbp-0x3d0]
0x5160: cmovbe r10,rbx
0x5164: cmp eax,0x11
0x5167: ja 0x5b46
0x516d: lea rsi,[rip+0x287c]
0x5174: movsxd rax,dword ptr [rsi+rax*4]
0x5178: add rax,rsi
0x517b: jmp rax
0x5688: cmp rax,-0x1
0x568c: jne 0x5b46
0x5692: mov rax,r14
0x5695: add rax,0x1
0x5699: mov rbx,rax
0x569c: jae 0x5728
0x56a2: cmp r12,-0x1
0x56a6: jne 0x4d85
0x56ac: mov rbx,r12
0x56af: mov byte ptr [r15+r14],0x25
0x56b4: mov r8,qword ptr [r13+0x8]
0x56b8: add r13,0x58
0x56bc: mov rcx,qword ptr [r13]
0x56c0: add qword ptr [rbp-0x400],0x1
0x56c8: cmp rcx,r8
0x56cb: jne 0x4d69
0x56d1: mov r14,rbx
0x56d4: jmp 0x4ed3
0x56e8: call 0x1410
0x56ed: mov qword ptr [rbp-0x3c8],rax
0x56f4: jmp 0x4db7
0x5700: mov edx,edi
0x5702: sub edx,0x12
0x5705: cmp edx,0x4
0x5708: ja 0x5b46
0x570e: lea rdi,[rip+0x2323]
0x5715: mov rax,qword ptr [rax+0x10]
0x5719: movsxd rdx,dword ptr [rdi+rdx*4]
0x571d: add rdx,rdi
0x5720: jmp rdx
0x5728: cmp r12,rax
0x572b: jae 0x56af
0x572d: test r12,r12
0x5730: jne 0x5b00
0x5736: cmp rax,0xc
0x573a: ja 0x5b12
0x5740: mov r12d,0xc
0x5746: cmp r15,qword ptr [rbp-0x3e8]
0x574d: sete dl
0x5750: test r15,r15
0x5753: je 0x59c0
0x5759: test dl,dl
0x575b: jne 0x59c0
0x5761: mov rsi,r12
0x5764: mov rdi,r15
0x5767: call 0x1610
0x576c: test rax,rax
0x576f: je 0x586b
0x5775: mov r15,rax
0x5778: jmp 0x56af
0x5780: mov dword ptr [rbp-0x3e0],0x0
0x578a: jmp 0x5077
0x5790: js 0x4d85
0x5796: add r12,r12
0x5799: cmp r12,rax
0x579c: jae 0x4e76
0x57a2: cmp rax,-0x1
0x57a6: je 0x4d85
0x57ac: cmp r15,qword ptr [rbp-0x3e8]
0x57b3: mov r12,rax
0x57b6: sete dl
0x57b9: test r15,r15
0x57bc: jne 0x4e89
0x57c2: nop word ptr [rax+rax]
0x57c8: mov rdi,r12
0x57cb: mov qword ptr [rbp-0x3e0],r8
0x57d2: mov byte ptr [rbp-0x3d0],dl
0x57d8: mov qword ptr [rbp-0x3c8],rcx
0x57df: call 0x15c0
0x57e4: test rax,rax
0x57e7: mov r9,rax
0x57ea: mov rcx,qword ptr [rbp-0x3c8]
0x57f1: movzx edx,byte ptr [rbp-0x3d0]
0x57f8: mov r8,qword ptr [rbp-0x3e0]
0x57ff: je 0x4d85
0x5805: test rbx,rbx
0x5808: je 0x5a10
0x580e: test dl,dl
0x5810: je 0x5a10
0x5816: mov rsi,r15
0x5819: mov rdx,rbx
0x581c: mov rdi,rax
0x581f: mov qword ptr [rbp-0x3d0],r8
0x5826: mov qword ptr [rbp-0x3c8],rcx
0x582d: call 0x1590
0x5832: mov rcx,qword ptr [rbp-0x3c8]
0x5839: mov r15,rax
0x583c: mov r8,qword ptr [rbp-0x3d0]
0x5843: jmp 0x4ec4
0x5850: mov r14,r12
0x5853: jmp 0x4ec4
0x586b: call 0x1410
0x5870: mov qword ptr [rbp-0x3c8],rax
0x5877: nop word ptr [rax+rax]
0x5880: mov rdi,r15
0x5883: call 0x13f0
0x5888: jmp 0x4da3
0x58e8: js 0x4d85
0x58ee: add r12,r12
0x58f1: cmp r12,rax
0x58f4: jae 0x50d9
0x58fa: nop word ptr [rax+rax]
0x5900: test rdx,rdx
0x5903: jne 0x4d85
0x5909: cmp rax,-0x1
0x590d: je 0x4d85
0x5913: cmp r15,qword ptr [rbp-0x3e8]
0x591a: mov r12,rax
0x591d: sete dl
0x5920: test r15,r15
0x5923: jne 0x50ec
0x5929: nop dword ptr [rax]
0x5930: mov rdi,r12
0x5933: mov byte ptr [rbp-0x3c8],dl
0x5939: call 0x15c0
0x593e: test rax,rax
0x5941: mov rcx,rax
0x5944: movzx edx,byte ptr [rbp-0x3c8]
0x594b: je 0x4d85
0x5951: test r14,r14
0x5954: je 0x5af0
0x595a: test dl,dl
0x595c: je 0x5af0
0x5962: mov rsi,r15
0x5965: mov rdx,r14
0x5968: mov rdi,rax
0x596b: call 0x1590
0x5970: mov r15,rax
0x5973: jmp 0x510b
0x5980: mov byte ptr [rbx],0x4c
0x5983: add rbx,0x1
0x5987: jmp 0x503b
0x59c0: mov rdi,r12
0x59c3: mov byte ptr [rbp-0x3c8],dl
0x59c9: call 0x15c0
0x59ce: test rax,rax
0x59d1: mov rcx,rax
0x59d4: movzx edx,byte ptr [rbp-0x3c8]
0x59db: je 0x4d85
0x59e1: test r14,r14
0x59e4: je 0x5b24
0x59ea: test dl,dl
0x59ec: je 0x5b24
0x59f2: mov rsi,r15
0x59f5: mov rdx,r14
0x59f8: mov rdi,rax
0x59fb: call 0x1590
0x5a00: mov r15,rax
0x5a03: jmp 0x56af
0x5a10: mov r15,r9
0x5a13: jmp 0x4ec4
0x5ae8: xor r15d,r15d
0x5aeb: jmp 0x4dff
0x5af0: mov r15,rcx
0x5af3: jmp 0x510b
0x5b00: js 0x4d85
0x5b06: add r12,r12
0x5b09: cmp r12,rax
0x5b0c: jae 0x5746
0x5b12: cmp rax,-0x1
0x5b16: je 0x4d85
0x5b1c: mov r12,rax
0x5b1f: jmp 0x5746
0x5b24: mov r15,rcx
0x5b27: jmp 0x56af
0x5b46: call 0x1400
0x5b4b: nop dword ptr [rax+rax]
0x5b50: mov rax,qword ptr [rbp-0x408]
0x5b57: mov rdi,qword ptr [rbp-0x2b8]
0x5b5e: add rax,0x20
0x5b62: cmp rdi,rax
0x5b65: je 0x5b6c
0x5b67: call 0x13f0
0x5b6c: mov rax,qword ptr [rbp-0x410]
0x5b73: mov rdi,qword ptr [rbp-0x3a8]
0x5b7a: add rax,0x10
0x5b7e: cmp rdi,rax
0x5b81: je 0x5b88
0x5b83: call 0x13f0
0x5b88: call 0x1410
0x5b8d: xor r15d,r15d
0x5b90: mov dword ptr [rax],0x16
0x5b96: jmp 0x4dff
0x5b9b: mov rbx,r14
0x5b9e: xor eax,eax
0x5ba0: add rbx,0x1
0x5ba4: jb 0x5cb0
0x5baa: cmp r12,rbx
0x5bad: jae 0x5bfc
0x5baf: test r12,r12
0x5bb2: jne 0x5ce9
0x5bb8: cmp rbx,0xc
0x5bbc: ja 0x5cce
0x5bc2: mov r12d,0xc
0x5bc8: cmp r15,qword ptr [rbp-0x3e8]
0x5bcf: sete r13b
0x5bd3: test r15,r15
0x5bd6: je 0x5c7c
0x5bdc: test r13b,r13b
0x5bdf: jne 0x5c7c
0x5be5: mov rsi,r12
0x5be8: mov rdi,r15
0x5beb: call 0x1610
0x5bf0: test rax,rax
0x5bf3: je 0x586b
0x5bf9: mov r15,rax
0x5bfc: cmp r15,qword ptr [rbp-0x3e8]
0x5c03: mov byte ptr [r15+r14],0x0
0x5c08: je 0x5c21
0x5c0a: cmp r12,rbx
0x5c0d: jbe 0x5c21
0x5c0f: mov rdi,r15
0x5c12: mov rsi,rbx
0x5c15: call 0x1610
0x5c1a: test rax,rax
0x5c1d: cmovne r15,rax
0x5c21: mov rax,qword ptr [rbp-0x420]
0x5c28: test rax,rax
0x5c2b: je 0x5c35
0x5c2d: mov rdi,rax
0x5c30: call 0x13f0
0x5c35: mov rax,qword ptr [rbp-0x408]
0x5c3c: mov rdi,qword ptr [rbp-0x2b8]
0x5c43: add rax,0x20
0x5c47: cmp rdi,rax
0x5c4a: je 0x5c51
0x5c4c: call 0x13f0
0x5c51: mov rax,qword ptr [rbp-0x410]
0x5c58: mov rdi,qword ptr [rbp-0x3a8]
0x5c5f: add rax,0x10
0x5c63: cmp rdi,rax
0x5c66: je 0x5c6d
0x5c68: call 0x13f0
0x5c6d: mov rax,qword ptr [rbp-0x418]
0x5c74: mov qword ptr [rax],r14
0x5c77: jmp 0x4dff
0x5c7c: mov rdi,r12
0x5c7f: call 0x15c0
0x5c84: test rax,rax
0x5c87: mov rcx,rax
0x5c8a: je 0x4d85
0x5c90: test r14,r14
0x5c93: je 0x5d00
0x5c95: test r13b,r13b
0x5c98: je 0x5d00
0x5c9a: mov rsi,r15
0x5c9d: mov rdx,r14
0x5ca0: mov rdi,rax
0x5ca3: call 0x1590
0x5ca8: mov r15,rax
0x5cab: jmp 0x5bfc
0x5cb0: cmp r12,-0x1
0x5cb4: mov eax,0x1
0x5cb9: je 0x5bfc
0x5cbf: test r12,r12
0x5cc2: je 0x4d85
0x5cc8: js 0x4d85
0x5cce: test rax,rax
0x5cd1: jne 0x4d85
0x5cd7: cmp rbx,-0x1
0x5cdb: je 0x4d85
0x5ce1: mov r12,rbx
0x5ce4: jmp 0x5bc8
0x5ce9: js 0x4d85
0x5cef: add r12,r12
0x5cf2: cmp r12,rbx
0x5cf5: jae 0x5bc8
0x5cfb: jmp 0x5cce
0x5d00: mov r15,rcx
0x5d03: jmp 0x5bfc
0x5d17: call 0x14d0
0x5d1c: cmp r12,-0x1
0x5d20: mov edx,0x1
0x5d25: je 0x510b
0x5d2b: test r12,r12
0x5d2e: je 0x4d85
0x5d34: jns 0x5900
0x5d3a: jmp 0x4d85
0x5d40: cmp qword ptr [rsi],0x0
0x5d44: mov rax,qword ptr [rsi+0x8]
0x5d48: je 0x5dad
0x5d4a: lea r8,[rip+0x1d0f]
0x5d51: lea r10,[rip+0x1d68]
0x5d58: lea r9,[rip+0x1ced]
0x5d5f: xor ecx,ecx
0x5d61: nop dword ptr [rax]
0x5d68: cmp dword ptr [rax],0x16
0x5d6b: ja 0x5db0
0x5d6d: mov edx,dword ptr [rax]
0x5d6f: movsxd rdx,dword ptr [r8+rdx*4]
0x5d73: add rdx,r8
0x5d76: jmp rdx
0x5dad: xor eax,eax
0x5daf: ret 
0x5db0: mov eax,0xffffffff
0x5db5: ret 
0x5f40: push r15
0x5f42: push r14
0x5f44: lea rcx,[rsi+0x20]
0x5f48: push r13
0x5f4a: push r12
0x5f4c: lea rax,[rdx+0x10]
0x5f50: push rbp
0x5f51: push rbx
0x5f52: mov r14,rsi
0x5f55: mov r15,rdx
0x5f58: xor ebx,ebx
0x5f5a: mov r9d,0x7
0x5f60: sub rsp,0x58
0x5f64: mov r10d,0x7
0x5f6a: mov qword ptr [rsi],0x0
0x5f71: mov qword ptr [rsi+0x8],rcx
0x5f75: mov qword ptr [rsp+0x28],rcx
0x5f7a: mov r8,-0x1
0x5f81: mov qword ptr [rdx],0x0
0x5f88: mov qword ptr [rsp+0x8],rax
0x5f8d: mov qword ptr [rdx+0x8],rax
0x5f91: mov qword ptr [rsp+0x18],0x0
0x5f9a: mov qword ptr [rsp+0x10],0x0
0x5fa3: mov qword ptr [rsp+0x20],0x0
0x5fac: jmp 0x5fbb
0x5fb0: cmp al,0x25
0x5fb2: lea rbp,[rdi+0x1]
0x5fb6: je 0x5ff8
0x5fb8: mov rdi,rbp
0x5fbb: movzx eax,byte ptr [rdi]
0x5fbe: test al,al
0x5fc0: jne 0x5fb0
0x5fc2: lea rax,[rbx+rbx*4]
0x5fc6: lea rax,[rbx+rax*2]
0x5fca: mov qword ptr [rcx+rax*8],rdi
0x5fce: mov rax,qword ptr [rsp+0x10]
0x5fd3: mov qword ptr [r14+0x10],rax
0x5fd7: mov rax,qword ptr [rsp+0x18]
0x5fdc: mov qword ptr [r14+0x18],rax
0x5fe0: xor eax,eax
0x5fe2: add rsp,0x58
0x5fe6: pop rbx
0x5fe7: pop rbp
0x5fe8: pop r12
0x5fea: pop r13
0x5fec: pop r14
0x5fee: pop r15
0x5ff0: ret 
0x5ff8: lea rax,[rbx+rbx*4]
0x5ffc: mov r13,r8
0x5fff: lea rax,[rbx+rax*2]
0x6003: lea r12,[rcx+rax*8]
0x6007: mov qword ptr [r12],rdi
0x600b: mov dword ptr [r12+0x10],0x0
0x6014: mov qword ptr [r12+0x18],0x0
0x601d: mov qword ptr [r12+0x20],0x0
0x6026: mov qword ptr [r12+0x28],r8
0x602b: mov qword ptr [r12+0x30],0x0
0x6034: mov qword ptr [r12+0x38],0x0
0x603d: mov qword ptr [r12+0x40],r8
0x6042: mov qword ptr [r12+0x50],r8
0x6047: movzx ebx,byte ptr [rdi+0x1]
0x604b: lea eax,[rbx-0x30]
0x604e: cmp al,0x9
0x6050: ja 0x608e
0x6052: jmp 0x648a
0x6060: cmp bl,0x2d
0x6063: je 0x60a8
0x6065: cmp bl,0x2b
0x6068: je 0x60b0
0x606a: cmp bl,0x20
0x606d: je 0x60c0
0x606f: cmp bl,0x23
0x6072: je 0x60d0
0x6074: cmp bl,0x30
0x6077: je 0x60e0
0x6079: cmp bl,0x49
0x607c: jne 0x60f0
0x607e: or dword ptr [r12+0x10],0x40
0x6084: nop dword ptr [rax]
0x6088: movzx ebx,byte ptr [rax]
0x608b: mov rbp,rax
0x608e: lea rax,[rbp+0x1]
0x6092: cmp bl,0x27
0x6095: mov rdx,rax
0x6098: jne 0x6060
0x609a: or dword ptr [r12+0x10],0x1
0x60a0: jmp 0x6088
0x60a8: or dword ptr [r12+0x10],0x2
0x60ae: jmp 0x6088
0x60b0: or dword ptr [r12+0x10],0x4
0x60b6: jmp 0x6088
0x60c0: or dword ptr [r12+0x10],0x8
0x60c6: jmp 0x6088
0x60d0: or dword ptr [r12+0x10],0x10
0x60d6: jmp 0x6088
0x60e0: or dword ptr [r12+0x10],0x20
0x60e6: jmp 0x6088
0x60f0: cmp bl,0x2a
0x60f3: je 0x62a9
0x60f9: lea ecx,[rbx-0x30]
0x60fc: cmp cl,0x9
0x60ff: jbe 0x6517
0x6105: cmp bl,0x2e
0x6108: je 0x63df
0x610e: xor eax,eax
0x6110: mov esi,0x1
0x6115: jmp 0x6147
0x6120: cmp bl,0x4c
0x6123: je 0x6160
0x6125: cmp bl,0x6c
0x6128: je 0x6140
0x612a: cmp bl,0x6a
0x612d: je 0x6140
0x612f: mov edx,ebx
0x6131: and edx,-0x21
0x6134: cmp dl,0x5a
0x6137: je 0x6140
0x6139: cmp bl,0x74
0x613c: jne 0x6168
0x613e: nop 
0x6140: add eax,0x8
0x6143: movzx ebx,byte ptr [rbp]
0x6147: add rbp,0x1
0x614b: cmp bl,0x68
0x614e: jne 0x6120
0x6150: mov ecx,eax
0x6152: mov edx,esi
0x6154: and ecx,0x1
0x6157: shl edx,cl
0x6159: or eax,edx
0x615b: jmp 0x6143
0x6160: or eax,0x4
0x6163: jmp 0x6143
0x6168: lea edx,[rbx-0x25]
0x616b: cmp dl,0x53
0x616e: ja 0x678b
0x6174: lea rcx,[rip+0x1961]
0x617b: movzx edx,dl
0x617e: movsxd rdx,dword ptr [rcx+rdx*4]
0x6182: add rdx,rcx
0x6185: jmp rdx
0x62a9: mov rsi,qword ptr [rsp+0x10]
0x62ae: mov ecx,0x1
0x62b3: mov qword ptr [r12+0x18],rbp
0x62b8: mov qword ptr [r12+0x20],rax
0x62bd: test rsi,rsi
0x62c0: cmovne rcx,rsi
0x62c4: mov qword ptr [rsp+0x10],rcx
0x62c9: movzx ecx,byte ptr [rbp+0x1]
0x62cd: lea esi,[rcx-0x30]
0x62d0: cmp sil,0x9
0x62d4: jbe 0x65b5
0x62da: mov rsi,qword ptr [rsp+0x20]
0x62df: cmp rsi,-0x1
0x62e3: lea rdx,[rsi+0x1]
0x62e7: mov qword ptr [r12+0x28],rsi
0x62ec: je 0x678b
0x62f2: mov rbx,qword ptr [rsp+0x20]
0x62f7: mov rbp,rax
0x62fa: mov qword ptr [rsp+0x20],rdx
0x62ff: cmp r9,rbx
0x6302: mov rcx,qword ptr [r15+0x8]
0x6306: ja 0x6982
0x630c: add r9,r9
0x630f: lea rax,[rbx+0x1]
0x6313: cmp r9,rbx
0x6316: cmovbe r9,rax
0x631a: movabsq rax,0x7ffffffffffffff
0x6324: cmp r9,rax
0x6327: ja 0x6bcb
0x632d: mov rsi,r9
0x6330: mov qword ptr [rsp+0x40],r9
0x6335: mov qword ptr [rsp+0x38],r10
0x633a: shl rsi,0x5
0x633e: cmp qword ptr [rsp+0x8],rcx
0x6343: mov qword ptr [rsp+0x30],r8
0x6348: je 0x6a61
0x634e: mov rdi,rcx
0x6351: call 0x1610
0x6356: mov rdx,qword ptr [r15+0x8]
0x635a: mov r8,qword ptr [rsp+0x30]
0x635f: mov rcx,rax
0x6362: mov r10,qword ptr [rsp+0x38]
0x6367: mov r9,qword ptr [rsp+0x40]
0x636c: test rcx,rcx
0x636f: je 0x6c27
0x6375: cmp qword ptr [rsp+0x8],rdx
0x637a: mov rax,qword ptr [r15]
0x637d: je 0x6b3b
0x6383: mov qword ptr [r15+0x8],rcx
0x6387: mov rdx,rax
0x638a: shl rdx,0x5
0x638e: add rdx,rcx
0x6391: cmp rax,rbx
0x6394: ja 0x63b6
0x6396: nop word ptr cs:[rax+rax]
0x63a0: add rax,0x1
0x63a4: mov dword ptr [rdx],0x0
0x63aa: add rdx,0x20
0x63ae: cmp rax,rbx
0x63b1: jbe 0x63a0
0x63b3: mov qword ptr [r15],rax
0x63b6: shl rbx,0x5
0x63ba: lea rax,[rcx+rbx]
0x63be: mov edx,dword ptr [rax]
0x63c0: test edx,edx
0x63c2: jne 0x689b
0x63c8: mov dword ptr [rax],0x5
0x63ce: movzx ebx,byte ptr [rbp]
0x63d2: lea rdx,[rbp+0x1]
0x63d6: cmp bl,0x2e
0x63d9: jne 0x610e
0x63df: cmp byte ptr [rbp+0x1],0x2a
0x63e3: mov qword ptr [r12+0x30],rbp
0x63e8: jne 0x656e
0x63ee: mov rsi,qword ptr [rsp+0x18]
0x63f3: lea r11,[rbp+0x2]
0x63f7: mov eax,0x2
0x63fc: mov qword ptr [r12+0x38],r11
0x6401: cmp rsi,0x2
0x6405: cmovae rax,rsi
0x6409: mov qword ptr [rsp+0x18],rax
0x640e: movsx eax,byte ptr [rbp+0x2]
0x6412: lea edx,[rax-0x30]
0x6415: cmp dl,0x9
0x6418: jbe 0x6aac
0x641e: mov rbx,qword ptr [r12+0x40]
0x6423: cmp rbx,-0x1
0x6427: je 0x6a85
0x642d: cmp r9,rbx
0x6430: mov rcx,qword ptr [r15+0x8]
0x6434: jbe 0x699f
0x643a: mov rax,qword ptr [r15]
0x643d: mov rdx,rax
0x6440: shl rdx,0x5
0x6444: add rdx,rcx
0x6447: cmp rax,rbx
0x644a: ja 0x6466
0x644c: nop dword ptr [rax]
0x6450: add rax,0x1
0x6454: mov dword ptr [rdx],0x0
0x645a: add rdx,0x20
0x645e: cmp rax,rbx
0x6461: jbe 0x6450
0x6463: mov qword ptr [r15],rax
0x6466: shl rbx,0x5
0x646a: lea rax,[rcx+rbx]
0x646e: mov edx,dword ptr [rax]
0x6470: test edx,edx
0x6472: jne 0x698a
0x6478: mov dword ptr [rax],0x5
0x647e: mov rbp,r11
0x6481: movzx ebx,byte ptr [r11]
0x6485: jmp 0x610e
0x648a: mov rax,rbp
0x648d: nop dword ptr [rax]
0x6490: add rax,0x1
0x6494: movzx edx,byte ptr [rax]
0x6497: lea ecx,[rdx-0x30]
0x649a: cmp cl,0x9
0x649d: jbe 0x6490
0x649f: cmp dl,0x24
0x64a2: mov r13,r8
0x64a5: jne 0x608e
0x64ab: xor edx,edx
0x64ad: movsx eax,bl
0x64b0: movabsq rdi,0x1999999999999999
0x64ba: mov rsi,r8
0x64bd: sub eax,0x30
0x64c0: cmp rdx,rdi
0x64c3: cltq 
0x64c5: ja 0x64ce
0x64c7: lea rsi,[rdx+rdx*4]
0x64cb: add rsi,rsi
0x64ce: mov rcx,rbp
0x64d1: add rax,rsi
0x64d4: movzx ebx,byte ptr [rbp+0x1]
0x64d8: setb sil
0x64dc: add rbp,0x1
0x64e0: mov rdx,rax
0x64e3: movzx esi,sil
0x64e7: test rsi,rsi
0x64ea: lea edi,[rbx-0x30]
0x64ed: jne 0x687e
0x64f3: cmp dil,0x9
0x64f7: jbe 0x64ad
0x64f9: mov r13,rax
0x64fc: sub r13,0x1
0x6500: cmp r13,-0x3
0x6504: ja 0x678b
0x650a: lea rbp,[rcx+0x2]
0x650e: movzx ebx,byte ptr [rcx+0x2]
0x6512: jmp 0x608e
0x6517: mov qword ptr [r12+0x18],rbp
0x651c: movzx edi,byte ptr [rbp]
0x6520: mov rsi,rbp
0x6523: lea ecx,[rdi-0x30]
0x6526: cmp cl,0x9
0x6529: jbe 0x6537
0x652b: jmp 0x6560
0x6530: mov rbp,rax
0x6533: add rax,0x1
0x6537: movzx edi,byte ptr [rax]
0x653a: lea edx,[rdi-0x30]
0x653d: cmp dl,0x9
0x6540: jbe 0x6530
0x6542: mov rcx,rax
0x6545: lea rdx,[rbp+0x2]
0x6549: mov rbp,rax
0x654c: sub rcx,rsi
0x654f: mov rsi,qword ptr [rsp+0x10]
0x6554: cmp rsi,rcx
0x6557: cmovae rcx,rsi
0x655b: mov qword ptr [rsp+0x10],rcx
0x6560: mov qword ptr [r12+0x20],rbp
0x6565: movzx ebx,byte ptr [rbp]
0x6569: jmp 0x6105
0x656e: movzx eax,byte ptr [rbp+0x1]
0x6572: sub eax,0x30
0x6575: cmp al,0x9
0x6577: ja 0x658e
0x6579: nop dword ptr [rax]
0x6580: add rdx,0x1
0x6584: movzx eax,byte ptr [rdx]
0x6587: sub eax,0x30
0x658a: cmp al,0x9
0x658c: jbe 0x6580
0x658e: mov rsi,qword ptr [rsp+0x18]
0x6593: mov rax,rdx
0x6596: mov qword ptr [r12+0x38],rdx
0x659b: sub rax,rbp
0x659e: movzx ebx,byte ptr [rdx]
0x65a1: mov rbp,rdx
0x65a4: cmp rsi,rax
0x65a7: cmovae rax,rsi
0x65ab: mov qword ptr [rsp+0x18],rax
0x65b0: jmp 0x610e
0x65b5: mov rsi,rax
0x65b8: add rsi,0x1
0x65bc: movzx edi,byte ptr [rsi]
0x65bf: lea r11d,[rdi-0x30]
0x65c3: cmp r11b,0x9
0x65c7: jbe 0x65b8
0x65c9: cmp dil,0x24
0x65cd: jne 0x62da
0x65d3: xor esi,esi
0x65d5: movsx eax,cl
0x65d8: movabsq rdi,0x1999999999999999
0x65e2: mov rcx,r8
0x65e5: sub eax,0x30
0x65e8: cmp rsi,rdi
0x65eb: cltq 
0x65ed: ja 0x65f6
0x65ef: lea rcx,[rsi+rsi*4]
0x65f3: add rcx,rcx
0x65f6: mov rbp,rdx
0x65f9: xor r11d,r11d
0x65fc: add rax,rcx
0x65ff: movzx ecx,byte ptr [rdx+0x1]
0x6603: setb r11b
0x6607: add rdx,0x1
0x660b: mov rsi,rax
0x660e: test r11,r11
0x6611: lea edi,[rcx-0x30]
0x6614: jne 0x6b1e
0x661a: cmp dil,0x9
0x661e: jbe 0x65d5
0x6620: lea rbx,[rax-0x1]
0x6624: cmp rbx,-0x3
0x6628: ja 0x678b
0x662e: mov qword ptr [r12+0x28],rbx
0x6633: add rbp,0x2
0x6637: jmp 0x62ff
0x678b: mov rcx,qword ptr [r15+0x8]
0x678f: cmp qword ptr [rsp+0x8],rcx
0x6794: je 0x679e
0x6796: mov rdi,rcx
0x6799: call 0x13f0
0x679e: mov rdi,qword ptr [r14+0x8]
0x67a2: cmp qword ptr [rsp+0x28],rdi
0x67a7: je 0x67ae
0x67a9: call 0x13f0
0x67ae: call 0x1410
0x67b3: mov dword ptr [rax],0x16
0x67b9: mov eax,0xffffffff
0x67be: jmp 0x5fe2
0x687e: cmp dil,0x9
0x6882: ja 0x678b
0x6888: movsx eax,bl
0x688b: mov rsi,r8
0x688e: mov rcx,rbp
0x6891: sub eax,0x30
0x6894: cltq 
0x6896: jmp 0x64d1
0x689b: cmp edx,0x5
0x689e: jne 0x678f
0x68a4: movzx ebx,byte ptr [rbp]
0x68a8: lea rdx,[rbp+0x1]
0x68ac: jmp 0x6105
0x6982: mov rax,qword ptr [r15]
0x6985: jmp 0x6387
0x698a: cmp edx,0x5
0x698d: jne 0x678f
0x6993: movzx ebx,byte ptr [r11]
0x6997: mov rbp,r11
0x699a: jmp 0x610e
0x699f: add r9,r9
0x69a2: lea rax,[rbx+0x1]
0x69a6: cmp r9,rbx
0x69a9: cmovbe r9,rax
0x69ad: movabsq rax,0x7ffffffffffffff
0x69b7: cmp r9,rax
0x69ba: ja 0x6bcb
0x69c0: mov rsi,r9
0x69c3: mov qword ptr [rsp+0x48],r9
0x69c8: mov qword ptr [rsp+0x40],r10
0x69cd: shl rsi,0x5
0x69d1: cmp qword ptr [rsp+0x8],rcx
0x69d6: mov qword ptr [rsp+0x38],r8
0x69db: mov qword ptr [rsp+0x30],r11
0x69e0: je 0x6b9e
0x69e6: mov rdi,rcx
0x69e9: call 0x1610
0x69ee: mov rdx,qword ptr [r15+0x8]
0x69f2: mov r11,qword ptr [rsp+0x30]
0x69f7: mov rcx,rax
0x69fa: mov r8,qword ptr [rsp+0x38]
0x69ff: mov r10,qword ptr [rsp+0x40]
0x6a04: mov r9,qword ptr [rsp+0x48]
0x6a09: test rcx,rcx
0x6a0c: je 0x6c27
0x6a12: cmp qword ptr [rsp+0x8],rdx
0x6a17: mov rax,qword ptr [r15]
0x6a1a: je 0x6be0
0x6a20: mov qword ptr [r15+0x8],rcx
0x6a24: jmp 0x643d
0x6a34: mov rdi,rcx
0x6a37: call 0x13f0
0x6a3c: mov rdi,qword ptr [r14+0x8]
0x6a40: cmp qword ptr [rsp+0x28],rdi
0x6a45: je 0x6a4c
0x6a47: call 0x13f0
0x6a4c: call 0x1410
0x6a51: mov dword ptr [rax],0xc
0x6a57: mov eax,0xffffffff
0x6a5c: jmp 0x5fe2
0x6a61: mov rdi,rsi
0x6a64: call 0x15c0
0x6a69: mov rdx,qword ptr [rsp+0x8]
0x6a6e: mov rcx,rax
0x6a71: mov r9,qword ptr [rsp+0x40]
0x6a76: mov r10,qword ptr [rsp+0x38]
0x6a7b: mov r8,qword ptr [rsp+0x30]
0x6a80: jmp 0x636c
0x6a85: mov rsi,qword ptr [rsp+0x20]
0x6a8a: cmp rsi,-0x1
0x6a8e: lea rax,[rsi+0x1]
0x6a92: mov qword ptr [r12+0x40],rsi
0x6a97: je 0x678b
0x6a9d: mov rbx,qword ptr [rsp+0x20]
0x6aa2: mov qword ptr [rsp+0x20],rax
0x6aa7: jmp 0x642d
0x6aac: mov rdx,r11
0x6aaf: add rdx,0x1
0x6ab3: movzx ecx,byte ptr [rdx]
0x6ab6: lea esi,[rcx-0x30]
0x6ab9: cmp sil,0x9
0x6abd: jbe 0x6aaf
0x6abf: cmp cl,0x24
0x6ac2: jne 0x641e
0x6ac8: xor ecx,ecx
0x6aca: movabsq rsi,0x1999999999999999
0x6ad4: sub eax,0x30
0x6ad7: mov rdx,r8
0x6ada: cmp rcx,rsi
0x6add: cltq 
0x6adf: ja 0x6ae8
0x6ae1: lea rdx,[rcx+rcx*4]
0x6ae5: add rdx,rdx
0x6ae8: mov rsi,r11
0x6aeb: xor ebx,ebx
0x6aed: add rdx,rax
0x6af0: movsx eax,byte ptr [r11+0x1]
0x6af5: setb bl
0x6af8: add r11,0x1
0x6afc: mov rcx,rdx
0x6aff: test rbx,rbx
0x6b02: lea edi,[rax-0x30]
0x6b05: je 0x6b78
0x6b07: cmp dil,0x9
0x6b0b: ja 0x678b
0x6b11: sub eax,0x30
0x6b14: mov rdx,r8
0x6b17: mov rsi,r11
0x6b1a: cltq 
0x6b1c: jmp 0x6aeb
0x6b1e: cmp dil,0x9
0x6b22: ja 0x678b
0x6b28: movsx eax,cl
0x6b2b: mov rbp,rdx
0x6b2e: mov rcx,r8
0x6b31: sub eax,0x30
0x6b34: cltq 
0x6b36: jmp 0x65f9
0x6b3b: mov rsi,qword ptr [rsp+0x8]
0x6b40: shl rax,0x5
0x6b44: mov rdi,rcx
0x6b47: mov rdx,rax
0x6b4a: mov qword ptr [rsp+0x40],r9
0x6b4f: mov qword ptr [rsp+0x38],r10
0x6b54: mov qword ptr [rsp+0x30],r8
0x6b59: call 0x1590
0x6b5e: mov r9,qword ptr [rsp+0x40]
0x6b63: mov rcx,rax
0x6b66: mov r10,qword ptr [rsp+0x38]
0x6b6b: mov rax,qword ptr [r15]
0x6b6e: mov r8,qword ptr [rsp+0x30]
0x6b73: jmp 0x6383
0x6b78: cmp dil,0x9
0x6b7c: jbe 0x6aca
0x6b82: lea rbx,[rdx-0x1]
0x6b86: cmp rbx,-0x3
0x6b8a: ja 0x678b
0x6b90: mov qword ptr [r12+0x40],rbx
0x6b95: lea r11,[rsi+0x2]
0x6b99: jmp 0x642d
0x6b9e: mov rdi,rsi
0x6ba1: call 0x15c0
0x6ba6: mov rdx,qword ptr [rsp+0x8]
0x6bab: mov rcx,rax
0x6bae: mov r9,qword ptr [rsp+0x48]
0x6bb3: mov r10,qword ptr [rsp+0x40]
0x6bb8: mov r8,qword ptr [rsp+0x38]
0x6bbd: mov r11,qword ptr [rsp+0x30]
0x6bc2: jmp 0x6a09
0x6bcb: cmp qword ptr [rsp+0x8],rcx
0x6bd0: jne 0x6a34
0x6bd6: jmp 0x6a3c
0x6be0: mov rsi,qword ptr [rsp+0x8]
0x6be5: shl rax,0x5
0x6be9: mov rdi,rcx
0x6bec: mov rdx,rax
0x6bef: mov qword ptr [rsp+0x48],r9
0x6bf4: mov qword ptr [rsp+0x40],r10
0x6bf9: mov qword ptr [rsp+0x38],r8
0x6bfe: mov qword ptr [rsp+0x30],r11
0x6c03: call 0x1590
0x6c08: mov r9,qword ptr [rsp+0x48]
0x6c0d: mov rcx,rax
0x6c10: mov r10,qword ptr [rsp+0x40]
0x6c15: mov rax,qword ptr [r15]
0x6c18: mov r8,qword ptr [rsp+0x38]
0x6c1d: mov r11,qword ptr [rsp+0x30]
0x6c22: jmp 0x6a20
0x6c27: mov rcx,rdx
0x6c2a: jmp 0x6bcb
0x6c30: push r15
0x6c32: push r14
0x6c34: mov r15,rdx
0x6c37: push r13
0x6c39: push r12
0x6c3b: lea r12,[rip+0x202eae]
0x6c42: push rbp
0x6c43: lea rbp,[rip+0x202eae]
0x6c4a: push rbx
0x6c4b: mov r13d,edi
0x6c4e: mov r14,rsi
0x6c51: sub rbp,r12
0x6c54: sub rsp,0x8
0x6c58: sar rbp,0x3
0x6c5c: call 0x13b8
0x6c61: test rbp,rbp
0x6c64: je 0x6c86
0x6c66: xor ebx,ebx
0x6c68: nop dword ptr [rax+rax]
0x6c70: mov rdx,r15
0x6c73: mov rsi,r14
0x6c76: mov edi,r13d
0x6c79: call qword ptr [r12+rbx*8]
0x6c7d: add rbx,0x1
0x6c81: cmp rbp,rbx
0x6c84: jne 0x6c70
0x6c86: add rsp,0x8
0x6c8a: pop rbx
0x6c8b: pop rbp
0x6c8c: pop r12
0x6c8e: pop r13
0x6c90: pop r14
0x6c92: pop r15
0x6c94: ret 
0x6ca0: rep ret 
