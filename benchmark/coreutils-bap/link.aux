0x11b8: sub rsp,0x8
0x11bc: mov rax,qword ptr [rip+0x205e0d]
0x11c3: test rax,rax
0x11c6: je 0x11ca
0x11c8: call rax
0x11ca: add rsp,0x8
0x11ce: ret 
0x11d6: jmp qword ptr [rip+0x205c9c]
0x1220: jmp qword ptr [rip+0x205c7a]
0x1230: jmp qword ptr [rip+0x205c72]
0x1250: jmp qword ptr [rip+0x205c62]
0x1290: jmp qword ptr [rip+0x205c42]
0x12a0: jmp qword ptr [rip+0x205c3a]
0x12c0: jmp qword ptr [rip+0x205c2a]
0x12e0: jmp qword ptr [rip+0x205c1a]
0x1300: jmp qword ptr [rip+0x205c0a]
0x1320: jmp qword ptr [rip+0x205bfa]
0x1330: jmp qword ptr [rip+0x205bf2]
0x1340: jmp qword ptr [rip+0x205bea]
0x1350: jmp qword ptr [rip+0x205be2]
0x1360: jmp qword ptr [rip+0x205bda]
0x1370: jmp qword ptr [rip+0x205bd2]
0x1380: jmp qword ptr [rip+0x205bca]
0x13d0: jmp qword ptr [rip+0x205ba2]
0x1430: jmp qword ptr [rip+0x205b72]
0x1440: jmp qword ptr [rip+0x205b6a]
0x1450: jmp qword ptr [rip+0x205b62]
0x1460: jmp qword ptr [rip+0x205b7a]
0x1560: mov edi,0x1
0x1565: call 0x1740
0x1584: mov r12,rax
0x1587: movsxd rax,dword ptr [rip+0x205b02]
0x158e: mov esi,0x4
0x1593: xor edi,edi
0x1595: mov rdx,qword ptr [rbx+rax*8+0x8]
0x159a: call 0x3700
0x159f: lea rsi,[rip+0x32a6]
0x15a6: mov edx,0x5
0x15ab: xor edi,edi
0x15ad: mov rbp,rax
0x15b0: call 0x1270
0x15b5: mov rbx,rax
0x15b8: call 0x1200
0x15bd: mov esi,dword ptr [rax]
0x15bf: mov r8,r12
0x15c2: mov rcx,rbp
0x15c5: mov rdx,rbx
0x15c8: mov edi,0x1
0x15cd: xor eax,eax
0x15cf: call 0x13c0
0x15de: lea rsi,[rip+0x3256]
0x15e5: mov rbx,rax
0x15e8: mov edx,0x5
0x15ed: xor edi,edi
0x15ef: call 0x1270
0x15f4: mov rcx,rbx
0x15f7: mov rdx,rax
0x15fa: xor esi,esi
0x15fc: xor edi,edi
0x15fe: xor eax,eax
0x1600: call 0x13c0
0x1605: jmp 0x1560
0x1613: mov edx,0x5
0x1618: mov rbx,rax
0x161b: lea rsi,[rip+0x3200]
0x1622: jmp 0x15ed
0x165a: hlt 
0x165b: nop dword ptr [rax+rax]
0x1660: lea rdi,[rip+0x205a19]
0x1667: push rbp
0x1668: lea rax,[rip+0x205a11]
0x166f: cmp rax,rdi
0x1672: mov rbp,rsp
0x1675: je 0x1690
0x1677: mov rax,qword ptr [rip+0x205942]
0x167e: test rax,rax
0x1681: je 0x1690
0x1683: pop rbp
0x1684: jmp rax
0x1690: pop rbp
0x1691: ret 
0x16a0: lea rdi,[rip+0x2059d9]
0x16a7: lea rsi,[rip+0x2059d2]
0x16ae: push rbp
0x16af: sub rsi,rdi
0x16b2: mov rbp,rsp
0x16b5: sar rsi,0x3
0x16b9: mov rax,rsi
0x16bc: shr rax,0x3f
0x16c0: add rsi,rax
0x16c3: sar rsi
0x16c6: je 0x16e0
0x16c8: mov rax,qword ptr [rip+0x205909]
0x16cf: test rax,rax
0x16d2: je 0x16e0
0x16d4: pop rbp
0x16d5: jmp rax
0x16e0: pop rbp
0x16e1: ret 
0x1701: push rbp
0x1702: mov rbp,rsp
0x1705: je 0x1713
0x1707: mov rdi,qword ptr [rip+0x2058fa]
0x170e: call 0x1460
0x1713: call 0x1660
0x1718: mov byte ptr [rip+0x2059a9],0x1
0x171f: pop rbp
0x1720: ret 
0x1730: push rbp
0x1731: mov rbp,rsp
0x1734: pop rbp
0x1735: jmp 0x16a0
0x1a90: mov qword ptr [rip+0x205641],rdi
0x1a97: ret 
0x1aa0: mov byte ptr [rip+0x205629],dil
0x1aa7: ret 
0x1ab0: push rbp
0x1ab1: push rbx
0x1ab2: sub rsp,0x8
0x1ab6: mov rdi,qword ptr [rip+0x2055cb]
0x1abd: call 0x4450
0x1ac2: test eax,eax
0x1ac4: je 0x1adc
0x1ac6: call 0x1200
0x1acb: cmp byte ptr [rip+0x2055fe],0x0
0x1ad2: mov rbx,rax
0x1ad5: je 0x1af3
0x1ad7: cmp dword ptr [rax],0x20
0x1ada: jne 0x1af3
0x1adc: mov rdi,qword ptr [rip+0x2055dd]
0x1ae3: call 0x4450
0x1ae8: test eax,eax
0x1aea: jne 0x1b32
0x1aec: add rsp,0x8
0x1af0: pop rbx
0x1af1: pop rbp
0x1af2: ret 
0x1af3: lea rsi,[rip+0x2f1e]
0x1afa: xor edi,edi
0x1afc: mov edx,0x5
0x1b01: call 0x1270
0x1b06: mov rdi,qword ptr [rip+0x2055cb]
0x1b0d: mov rbp,rax
0x1b10: test rdi,rdi
0x1b13: je 0x1b3d
0x1b15: call 0x38f0
0x1b1a: mov esi,dword ptr [rbx]
0x1b1c: lea rdx,[rip+0x2f01]
0x1b23: mov rcx,rax
0x1b26: mov r8,rbp
0x1b29: xor edi,edi
0x1b2b: xor eax,eax
0x1b2d: call 0x13c0
0x1b32: mov edi,dword ptr [rip+0x2054e0]
0x1b38: call 0x1220
0x1b3d: mov esi,dword ptr [rbx]
0x1b3f: lea rdx,[rip+0x2ee2]
0x1b46: mov rcx,rax
0x1b49: xor edi,edi
0x1b4b: xor eax,eax
0x1b4d: call 0x13c0
0x1b52: jmp 0x1b32
0x1b60: push r13
0x1b62: push r12
0x1b64: mov r13,r8
0x1b67: push rbp
0x1b68: push rbx
0x1b69: mov rbp,rdx
0x1b6c: mov r12,rcx
0x1b6f: sub rsp,0xe8
0x1b76: test al,al
0x1b78: je 0x1bb4
0x1b7a: movaps [rsp+0x60],xmm0
0x1b7f: movaps [rsp+0x70],xmm1
0x1b84: movaps [rsp+0x80],xmm2
0x1b8c: movaps [rsp+0x90],xmm3
0x1b94: movaps [rsp+0xa0],xmm4
0x1b9c: movaps [rsp+0xb0],xmm5
0x1ba4: movaps [rsp+0xc0],xmm6
0x1bac: movaps [rsp+0xd0],xmm7
0x1bb4: mov rax,qword ptr fs:0x28
0x1bbd: mov qword ptr [rsp+0x28],rax
0x1bc2: xor eax,eax
0x1bc4: cmp edi,0x2
0x1bc7: mov ebx,dword ptr [rip+0x2054d3]
0x1bcd: mov dword ptr [rip+0x2054c9],0x0
0x1bd7: je 0x1c10
0x1bd9: mov rax,qword ptr [rsp+0x28]
0x1bde: xor rax,qword ptr fs:0x28
0x1be7: mov dword ptr [rip+0x2054b3],ebx
0x1bed: mov dword ptr [rip+0x205499],0x0
0x1bf7: jne 0x1c9a
0x1bfd: add rsp,0xe8
0x1c04: pop rbx
0x1c05: pop rbp
0x1c06: pop r12
0x1c08: pop r13
0x1c0a: ret 
0x1c10: lea rcx,[rip+0x204fa9]
0x1c17: lea rdx,[rip+0x2e0d]
0x1c1e: xor r8d,r8d
0x1c21: mov qword ptr [rsp+0x8],r9
0x1c26: call 0x12b0
0x1c2b: cmp eax,-0x1
0x1c2e: je 0x1bd9
0x1c30: cmp eax,0x68
0x1c33: mov r9,qword ptr [rsp+0x8]
0x1c38: je 0x1c90
0x1c3a: cmp eax,0x76
0x1c3d: jne 0x1bd9
0x1c3f: lea rax,[rsp+0x110]
0x1c47: mov rdi,qword ptr [rip+0x20543a]
0x1c4e: lea r8,[rsp+0x10]
0x1c53: mov rcx,r13
0x1c56: mov rdx,r12
0x1c59: mov rsi,rbp
0x1c5c: mov qword ptr [rsp+0x18],rax
0x1c61: lea rax,[rsp+0x30]
0x1c66: mov dword ptr [rsp+0x10],0x30
0x1c6e: mov dword ptr [rsp+0x14],0x30
0x1c76: mov qword ptr [rsp+0x20],rax
0x1c7b: call 0x3f50
0x1c80: xor edi,edi
0x1c82: call 0x1400
0x1c87: nop word ptr [rax+rax]
0x1c90: xor edi,edi
0x1c92: call r9
0x1c95: jmp 0x1bd9
0x1c9a: call 0x12a0
0x1c9f: nop 
0x1cc4: movaps [rsp+0x50],xmm0
0x1cc9: movaps [rsp+0x60],xmm1
0x1cce: movaps [rsp+0x70],xmm2
0x1cd3: movaps [rsp+0x80],xmm3
0x1cdb: movaps [rsp+0x90],xmm4
0x1ce3: movaps [rsp+0xa0],xmm5
0x1ceb: movaps [rsp+0xb0],xmm6
0x1cf3: movaps [rsp+0xc0],xmm7
0x1d97: nop word ptr [rax+rax]
0x1dd4: jmp 0x1da8
0x1dd6: call 0x12a0
0x1ddb: nop dword ptr [rax+rax]
0x1e7f: nop 
0x1e80: push rbp
0x1e81: push rbx
0x1e82: mov rbp,rdi
0x1e85: mov ebx,esi
0x1e87: sub rsp,0x8
0x1e8b: call 0x4530
0x1e90: movzx edx,byte ptr [rax]
0x1e93: and edx,-0x21
0x1e96: cmp dl,0x55
0x1e99: je 0x1f10
0x1e9b: cmp dl,0x47
0x1e9e: je 0x1ec0
0x1ea0: lea rax,[rip+0x2bec]
0x1ea7: lea rdx,[rip+0x2be7]
0x1eae: cmp ebx,0x9
0x1eb1: cmovne rax,rdx
0x1eb5: add rsp,0x8
0x1eb9: pop rbx
0x1eba: pop rbp
0x1ebb: ret 
0x1ec0: movzx edx,byte ptr [rax+0x1]
0x1ec4: and edx,-0x21
0x1ec7: cmp dl,0x42
0x1eca: jne 0x1ea0
0x1ecc: cmp byte ptr [rax+0x2],0x31
0x1ed0: jne 0x1ea0
0x1ed2: cmp byte ptr [rax+0x3],0x38
0x1ed6: jne 0x1ea0
0x1ed8: cmp byte ptr [rax+0x4],0x30
0x1edc: jne 0x1ea0
0x1ede: cmp byte ptr [rax+0x5],0x33
0x1ee2: jne 0x1ea0
0x1ee4: cmp byte ptr [rax+0x6],0x30
0x1ee8: jne 0x1ea0
0x1eea: cmp byte ptr [rax+0x7],0x0
0x1eee: jne 0x1ea0
0x1ef0: cmp byte ptr [rbp],0x60
0x1ef4: lea rax,[rip+0x2b91]
0x1efb: lea rdx,[rip+0x2b8e]
0x1f02: cmovne rax,rdx
0x1f06: add rsp,0x8
0x1f0a: pop rbx
0x1f0b: pop rbp
0x1f0c: ret 
0x1f10: movzx edx,byte ptr [rax+0x1]
0x1f14: and edx,-0x21
0x1f17: cmp dl,0x54
0x1f1a: jne 0x1ea0
0x1f1c: movzx edx,byte ptr [rax+0x2]
0x1f20: and edx,-0x21
0x1f23: cmp dl,0x46
0x1f26: jne 0x1ea0
0x1f2c: cmp byte ptr [rax+0x3],0x2d
0x1f30: jne 0x1ea0
0x1f36: cmp byte ptr [rax+0x4],0x38
0x1f3a: jne 0x1ea0
0x1f40: cmp byte ptr [rax+0x5],0x0
0x1f44: jne 0x1ea0
0x1f4a: cmp byte ptr [rbp],0x60
0x1f4e: lea rax,[rip+0x2b2f]
0x1f55: lea rdx,[rip+0x2b2c]
0x1f5c: cmovne rax,rdx
0x1f60: add rsp,0x8
0x1f64: pop rbx
0x1f65: pop rbp
0x1f66: ret 
0x2043: xor r11d,r11d
0x2046: mov rax,rbp
0x2049: mov r8d,r12d
0x204c: mov rbp,r11
0x204f: mov r11,rax
0x2052: nop word ptr [rax+rax]
0x2058: cmp r11,rbp
0x205b: setne r12b
0x205f: cmp r11,-0x1
0x2063: jne 0x2072
0x2065: mov rax,qword ptr [rsp+0x10]
0x206a: cmp byte ptr [rax+rbp],0x0
0x206e: setne r12b
0x2072: test r12b,r12b
0x2075: je 0x26d0
0x207b: cmp dword ptr [rsp+0x8],0x2
0x2080: mov rdi,qword ptr [rsp+0x10]
0x2085: lea r9,[rdi+rbp]
0x2089: setne al
0x208c: and al,byte ptr [rsp+0xd]
0x2090: mov r10d,eax
0x2093: je 0x2140
0x2099: mov rax,qword ptr [rsp+0x18]
0x209e: test rax,rax
0x20a1: je 0x24d0
0x20a7: cmp r11,-0x1
0x20ab: lea rbx,[rbp+rax]
0x20b0: jne 0x20e0
0x20b2: cmp rax,0x1
0x20b6: jbe 0x20e0
0x20b8: mov byte ptr [rsp+0x38],r8b
0x20bd: mov byte ptr [rsp+0x30],r10b
0x20c2: mov qword ptr [rsp+0x28],r9
0x20c7: call 0x1290
0x20cc: movzx r8d,byte ptr [rsp+0x38]
0x20d2: movzx r10d,byte ptr [rsp+0x30]
0x20d8: mov r11,rax
0x20db: mov r9,qword ptr [rsp+0x28]
0x20e0: cmp rbx,r11
0x20e3: mov byte ptr [rsp+0x28],r10b
0x20e8: ja 0x26a0
0x20ee: mov rdx,qword ptr [rsp+0x18]
0x20f3: mov rsi,qword ptr [rsp+0x48]
0x20f8: mov rdi,r9
0x20fb: mov qword ptr [rsp+0x40],r11
0x2100: mov byte ptr [rsp+0x38],r8b
0x2105: mov qword ptr [rsp+0x30],r9
0x210a: call 0x1300
0x210f: test eax,eax
0x2111: mov r9,qword ptr [rsp+0x30]
0x2116: movzx r8d,byte ptr [rsp+0x38]
0x211c: mov r11,qword ptr [rsp+0x40]
0x2121: jne 0x26a0
0x2127: cmp byte ptr [rsp+0xf],0x0
0x212c: movzx r10d,byte ptr [rsp+0x28]
0x2132: jne 0x30b5
0x2138: nop dword ptr [rax+rax]
0x2140: movzx ebx,byte ptr [r9]
0x2144: cmp bl,0x7e
0x2147: ja 0x2468
0x214d: lea rcx,[rip+0x29d8]
0x2154: movzx edx,bl
0x2157: movsxd rax,dword ptr [rcx+rdx*4]
0x215b: add rax,rcx
0x215e: jmp rax
0x2198: cmp byte ptr [rsp+0xd],0x1
0x219d: jne 0x22b2
0x21a3: test dl,dl
0x21a5: jne 0x22b2
0x21ab: mov rsi,qword ptr [rsp+0x20]
0x21b0: test rsi,rsi
0x21b3: je 0x21c9
0x21b5: mov edx,ebx
0x21b7: shr dl,0x5
0x21ba: movzx edx,dl
0x21bd: mov edx,dword ptr [rsi+rdx*4]
0x21c0: btl edx,ebx
0x21c3: jb 0x2313
0x21c9: test r10b,r10b
0x21cc: jne 0x2313
0x21d2: xor eax,0x1
0x21d5: add rbp,0x1
0x21d9: and eax,r8d
0x21dc: test al,al
0x21de: je 0x2200
0x21e0: cmp r13,r15
0x21e3: jbe 0x21ea
0x21e5: mov byte ptr [r14+r15],0x27
0x21ea: lea rax,[r15+0x1]
0x21ee: cmp r13,rax
0x21f1: jbe 0x21f9
0x21f3: mov byte ptr [r14+r15+0x1],0x27
0x21f9: add r15,0x2
0x21fd: xor r8d,r8d
0x2200: cmp r15,r13
0x2203: jae 0x2209
0x2205: mov byte ptr [r14+r15],bl
0x2209: movzx edi,byte ptr [rsp+0xe]
0x220e: add r15,0x1
0x2212: mov eax,0x0
0x2217: test r12b,r12b
0x221a: cmove edi,eax
0x221d: mov byte ptr [rsp+0xe],dil
0x2222: jmp 0x2058
0x22b2: cmp byte ptr [rsp+0xf],0x0
0x22b7: jne 0x21ab
0x22bd: jmp 0x21c9
0x2313: cmp dword ptr [rsp+0x8],0x2
0x2318: sete dl
0x231b: cmp byte ptr [rsp+0xf],0x0
0x2320: mov eax,edx
0x2322: jne 0x2b78
0x2328: mov eax,r8d
0x232b: xor eax,0x1
0x232e: and al,dl
0x2330: je 0x2361
0x2332: cmp r13,r15
0x2335: jbe 0x233c
0x2337: mov byte ptr [r14+r15],0x27
0x233c: lea rdx,[r15+0x1]
0x2340: cmp r13,rdx
0x2343: jbe 0x234b
0x2345: mov byte ptr [r14+r15+0x1],0x24
0x234b: lea rdx,[r15+0x2]
0x234f: cmp r13,rdx
0x2352: jbe 0x235a
0x2354: mov byte ptr [r14+r15+0x2],0x27
0x235a: add r15,0x3
0x235e: mov r8d,eax
0x2361: cmp r13,r15
0x2364: jbe 0x236b
0x2366: mov byte ptr [r14+r15],0x5c
0x236b: add r15,0x1
0x236f: add rbp,0x1
0x2373: jmp 0x2200
0x2460: xor r10d,r10d
0x2463: nop dword ptr [rax+rax]
0x2468: cmp qword ptr [rsp+0x58],0x1
0x246e: jne 0x2818
0x2474: mov qword ptr [rsp+0x38],r11
0x2479: mov byte ptr [rsp+0x30],r8b
0x247e: mov byte ptr [rsp+0x28],r10b
0x2483: call 0x1450
0x2488: mov rcx,qword ptr [rax]
0x248b: movzx edx,bl
0x248e: movzx r10d,byte ptr [rsp+0x28]
0x2494: movzx r8d,byte ptr [rsp+0x30]
0x249a: mov r11,qword ptr [rsp+0x38]
0x249f: mov edi,0x1
0x24a4: movzx eax,word ptr [rcx+rdx*2]
0x24a8: and ax,0x4000
0x24ac: setne r12b
0x24b0: sete al
0x24b3: and al,byte ptr [rsp+0xd]
0x24b7: test al,al
0x24b9: jne 0x2e51
0x24bf: cmp dword ptr [rsp+0x8],0x2
0x24c4: sete dl
0x24c7: jmp 0x2198
0x24d0: movzx ebx,byte ptr [r9]
0x24d4: cmp bl,0x7e
0x24d7: ja 0x2460
0x24d9: lea rcx,[rip+0x2848]
0x24e0: movzx edx,bl
0x24e3: movsxd rax,dword ptr [rcx+rdx*4]
0x24e7: add rax,rcx
0x24ea: jmp rax
0x26a0: xor r10d,r10d
0x26a3: jmp 0x2140
0x26d0: cmp dword ptr [rsp+0x8],0x2
0x26d5: movzx ebx,byte ptr [rsp+0xf]
0x26da: mov r12d,r8d
0x26dd: mov rbp,r11
0x26e0: sete dl
0x26e3: mov eax,ebx
0x26e5: test r15,r15
0x26e8: sete cl
0x26eb: and eax,edx
0x26ed: and al,cl
0x26ef: jne 0x3156
0x26f5: mov eax,ebx
0x26f7: xor eax,0x1
0x26fa: and dl,al
0x26fc: je 0x306c
0x2702: cmp byte ptr [rsp+0x7c],0x0
0x2707: je 0x306a
0x270d: cmp byte ptr [rsp+0xe],0x0
0x2712: jne 0x310d
0x2718: test r13,r13
0x271b: sete al
0x271e: cmp qword ptr [rsp+0x50],0x0
0x2724: setne dl
0x2727: and al,dl
0x2729: je 0x314c
0x272f: mov r13,qword ptr [rsp+0x50]
0x2734: lea rbx,[rip+0x235a]
0x273b: mov byte ptr [r14],0x27
0x273f: mov dword ptr [rsp+0x8],0x2
0x2747: mov r15d,0x1
0x274d: mov qword ptr [rsp+0x18],0x1
0x2756: mov byte ptr [rsp+0xf],0x0
0x275b: mov qword ptr [rsp+0x48],rbx
0x2760: mov byte ptr [rsp+0x7c],al
0x2764: jmp 0x2043
0x2818: lea rax,[rsp+0xa0]
0x2820: cmp r11,-0x1
0x2824: mov qword ptr [rsp+0xa0],0x0
0x2830: mov qword ptr [rsp+0x28],rax
0x2835: jne 0x2864
0x2837: mov rdi,qword ptr [rsp+0x10]
0x283c: mov byte ptr [rsp+0x40],r8b
0x2841: mov byte ptr [rsp+0x38],r10b
0x2846: mov qword ptr [rsp+0x30],r9
0x284b: call 0x1290
0x2850: movzx r8d,byte ptr [rsp+0x40]
0x2856: movzx r10d,byte ptr [rsp+0x38]
0x285c: mov r11,rax
0x285f: mov r9,qword ptr [rsp+0x30]
0x2864: lea rax,[rsp+0x9c]
0x286c: xor ecx,ecx
0x286e: mov byte ptr [rsp+0x7e],bl
0x2872: mov byte ptr [rsp+0x7d],r8b
0x2877: mov rbx,rcx
0x287a: mov qword ptr [rsp+0x88],r9
0x2882: mov qword ptr [rsp+0x38],rax
0x2887: mov byte ptr [rsp+0x7f],r10b
0x288c: mov qword ptr [rsp+0x80],r15
0x2894: mov qword ptr [rsp+0x40],r14
0x2899: mov qword ptr [rsp+0x70],r13
0x289e: mov qword ptr [rsp+0x30],r11
0x28a3: mov rax,qword ptr [rsp+0x10]
0x28a8: lea r14,[rbp+rbx]
0x28ad: mov rdx,qword ptr [rsp+0x30]
0x28b2: mov rcx,qword ptr [rsp+0x28]
0x28b7: mov rdi,qword ptr [rsp+0x38]
0x28bc: lea r13,[rax+r14]
0x28c0: sub rdx,r14
0x28c3: mov rsi,r13
0x28c6: call 0x43c0
0x28cb: test rax,rax
0x28ce: mov r15,rax
0x28d1: je 0x2921
0x28d3: cmp rax,-0x1
0x28d7: je 0x2ef5
0x28dd: cmp rax,-0x2
0x28e1: je 0x2e81
0x28e7: cmp dword ptr [rsp+0x8],0x2
0x28ec: sete al
0x28ef: and al,byte ptr [rsp+0xf]
0x28f3: jne 0x2a90
0x28f9: mov edi,dword ptr [rsp+0x9c]
0x2900: call 0x1440
0x2905: mov rdi,qword ptr [rsp+0x28]
0x290a: test eax,eax
0x290c: mov eax,0x0
0x2911: cmove r12d,eax
0x2915: add rbx,r15
0x2918: call 0x1430
0x291d: test eax,eax
0x291f: je 0x28a3
0x2921: mov edx,r12d
0x2924: mov rdi,rbx
0x2927: movzx r8d,byte ptr [rsp+0x7d]
0x292d: xor edx,0x1
0x2930: movzx ebx,byte ptr [rsp+0x7e]
0x2935: movzx r10d,byte ptr [rsp+0x7f]
0x293b: and dl,byte ptr [rsp+0xd]
0x293f: mov r15,qword ptr [rsp+0x80]
0x2947: mov r14,qword ptr [rsp+0x40]
0x294c: mov r13,qword ptr [rsp+0x70]
0x2951: mov r11,qword ptr [rsp+0x30]
0x2956: cmp rdi,0x1
0x295a: jbe 0x2f5b
0x2960: mov rcx,rdi
0x2963: xor esi,esi
0x2965: movzx r9d,byte ptr [rsp+0xf]
0x296b: add rcx,rbp
0x296e: mov rdi,qword ptr [rsp+0x10]
0x2973: jmp 0x2a2e
0x2980: cmp dword ptr [rsp+0x8],0x2
0x2985: sete al
0x2988: test r9b,r9b
0x298b: jne 0x2e40
0x2991: mov esi,r8d
0x2994: xor esi,0x1
0x2997: and al,sil
0x299a: je 0x29cb
0x299c: cmp r13,r15
0x299f: jbe 0x29a6
0x29a1: mov byte ptr [r14+r15],0x27
0x29a6: lea rsi,[r15+0x1]
0x29aa: cmp r13,rsi
0x29ad: jbe 0x29b5
0x29af: mov byte ptr [r14+r15+0x1],0x24
0x29b5: lea rsi,[r15+0x2]
0x29b9: cmp r13,rsi
0x29bc: jbe 0x29c4
0x29be: mov byte ptr [r14+r15+0x2],0x27
0x29c4: add r15,0x3
0x29c8: mov r8d,eax
0x29cb: cmp r13,r15
0x29ce: jbe 0x29d5
0x29d0: mov byte ptr [r14+r15],0x5c
0x29d5: lea rax,[r15+0x1]
0x29d9: cmp r13,rax
0x29dc: jbe 0x29eb
0x29de: mov eax,ebx
0x29e0: shr al,0x6
0x29e3: add eax,0x30
0x29e6: mov byte ptr [r14+r15+0x1],al
0x29eb: lea rax,[r15+0x2]
0x29ef: cmp r13,rax
0x29f2: jbe 0x2a04
0x29f4: mov eax,ebx
0x29f6: shr al,0x3
0x29f9: and eax,0x7
0x29fc: add eax,0x30
0x29ff: mov byte ptr [r14+r15+0x2],al
0x2a04: and ebx,0x7
0x2a07: add rbp,0x1
0x2a0b: add r15,0x3
0x2a0f: add ebx,0x30
0x2a12: cmp rbp,rcx
0x2a15: jae 0x2200
0x2a1b: mov esi,edx
0x2a1d: cmp r13,r15
0x2a20: jbe 0x2a26
0x2a22: mov byte ptr [r14+r15],bl
0x2a26: movzx ebx,byte ptr [rdi+rbp]
0x2a2a: add r15,0x1
0x2a2e: test dl,dl
0x2a30: jne 0x2980
0x2a36: mov eax,esi
0x2a38: xor eax,0x1
0x2a3b: and eax,r8d
0x2a3e: test r10b,r10b
0x2a41: je 0x2a51
0x2a43: cmp r13,r15
0x2a46: jbe 0x2a4d
0x2a48: mov byte ptr [r14+r15],0x5c
0x2a4d: add r15,0x1
0x2a51: add rbp,0x1
0x2a55: cmp rbp,rcx
0x2a58: jae 0x21dc
0x2a5e: test al,al
0x2a60: je 0x2e5e
0x2a66: cmp r13,r15
0x2a69: jbe 0x2a70
0x2a6b: mov byte ptr [r14+r15],0x27
0x2a70: lea rax,[r15+0x1]
0x2a74: cmp r13,rax
0x2a77: jbe 0x2a7f
0x2a79: mov byte ptr [r14+r15+0x1],0x27
0x2a7f: add r15,0x2
0x2a83: xor r10d,r10d
0x2a86: xor r8d,r8d
0x2a89: jmp 0x2a1d
0x2a90: cmp r15,0x1
0x2a94: je 0x28f9
0x2a9a: mov rdi,qword ptr [rsp+0x10]
0x2a9f: lea rcx,[rdi+r15]
0x2aa3: lea rdx,[rdi+r14+0x1]
0x2aa8: lea r8,[rcx+r14]
0x2aac: jmp 0x2abd
0x2ab0: add rdx,0x1
0x2ab4: cmp r8,rdx
0x2ab7: je 0x28f9
0x2abd: movzx ecx,byte ptr [rdx]
0x2ac0: sub ecx,0x5b
0x2ac3: cmp cl,0x21
0x2ac6: ja 0x2ab0
0x2ac8: mov esi,0x1
0x2acd: shl rsi,cl
0x2ad0: mov rcx,rsi
0x2ad3: movabsq rsi,0x20000002b
0x2add: test rcx,rsi
0x2ae0: je 0x2ab0
0x2ae2: mov r14,qword ptr [rsp+0x40]
0x2ae7: mov r13,qword ptr [rsp+0x70]
0x2aec: mov rbp,qword ptr [rsp+0x30]
0x2af1: mov dword ptr [rsp+0x8],0x2
0x2af9: cmp byte ptr [rsp+0xd],0x0
0x2afe: je 0x2b10
0x2b00: test al,al
0x2b02: mov eax,0x4
0x2b07: cmove eax,dword ptr [rsp+0x8]
0x2b0c: mov dword ptr [rsp+0x8],eax
0x2b10: sub rsp,0x8
0x2b14: mov rcx,rbp
0x2b17: mov rsi,r13
0x2b1a: push qword ptr [rsp+0x68]
0x2b1e: push qword ptr [rsp+0x78]
0x2b22: mov rdi,r14
0x2b25: push 0x0
0x2b27: mov r9d,dword ptr [rsp+0x98]
0x2b2f: mov r8d,dword ptr [rsp+0x28]
0x2b34: mov rdx,qword ptr [rsp+0x30]
0x2b39: and r9d,-0x3
0x2b3d: call 0x1f70
0x2b42: add rsp,0x20
0x2b46: mov r15,rax
0x2b49: mov rbx,qword ptr [rsp+0xa8]
0x2b51: xor rbx,qword ptr fs:0x28
0x2b5a: mov rax,r15
0x2b5d: jne 0x3163
0x2b63: add rsp,0xb8
0x2b6a: pop rbx
0x2b6b: pop rbp
0x2b6c: pop r12
0x2b6e: pop r13
0x2b70: pop r14
0x2b72: pop r15
0x2b74: ret 
0x2b78: mov rbp,r11
0x2b7b: jmp 0x2af9
0x2be1: test r13,r13
0x2be4: jne 0x317a
0x2bea: lea rax,[rip+0x1ea4]
0x2bf1: mov qword ptr [rsp+0x50],0x0
0x2bfa: mov byte ptr [rsp+0xe],0x1
0x2bff: mov byte ptr [rsp+0x7c],0x0
0x2c04: xor r12d,r12d
0x2c07: mov byte ptr [rsp+0xf],0x0
0x2c0c: mov qword ptr [rsp+0x18],0x1
0x2c15: mov qword ptr [rsp+0x48],rax
0x2c1a: mov r15d,0x1
0x2c20: mov dword ptr [rsp+0x8],0x2
0x2c28: jmp 0x2043
0x2e40: movzx ebx,byte ptr [rsp+0xf]
0x2e45: mov rbp,r11
0x2e48: mov byte ptr [rsp+0xd],bl
0x2e4c: jmp 0x2af9
0x2e51: movzx edx,byte ptr [rsp+0xd]
0x2e56: xor r12d,r12d
0x2e59: jmp 0x2960
0x2e5e: xor r10d,r10d
0x2e61: jmp 0x2a1d
0x2e81: mov r11,qword ptr [rsp+0x30]
0x2e86: mov rsi,r14
0x2e89: mov rcx,r13
0x2e8c: mov rax,rbx
0x2e8f: mov rdi,rbx
0x2e92: movzx r8d,byte ptr [rsp+0x7d]
0x2e98: movzx ebx,byte ptr [rsp+0x7e]
0x2e9d: mov r9,qword ptr [rsp+0x88]
0x2ea5: cmp rsi,r11
0x2ea8: movzx r10d,byte ptr [rsp+0x7f]
0x2eae: mov r15,qword ptr [rsp+0x80]
0x2eb6: mov r14,qword ptr [rsp+0x40]
0x2ebb: mov r13,qword ptr [rsp+0x70]
0x2ec0: jae 0x2ee8
0x2ec2: cmp byte ptr [rcx],0x0
0x2ec5: jne 0x2ed7
0x2ec7: jmp 0x2ee8
0x2ed0: cmp byte ptr [r9+rax],0x0
0x2ed5: je 0x2ee5
0x2ed7: add rax,0x1
0x2edb: lea rdx,[rbp+rax]
0x2ee0: cmp r11,rdx
0x2ee3: ja 0x2ed0
0x2ee5: mov rdi,rax
0x2ee8: movzx edx,byte ptr [rsp+0xd]
0x2eed: xor r12d,r12d
0x2ef0: jmp 0x2956
0x2ef5: mov rdi,rbx
0x2ef8: movzx r8d,byte ptr [rsp+0x7d]
0x2efe: movzx ebx,byte ptr [rsp+0x7e]
0x2f03: movzx r10d,byte ptr [rsp+0x7f]
0x2f09: mov r15,qword ptr [rsp+0x80]
0x2f11: xor r12d,r12d
0x2f14: mov r14,qword ptr [rsp+0x40]
0x2f19: mov r13,qword ptr [rsp+0x70]
0x2f1e: mov r11,qword ptr [rsp+0x30]
0x2f23: movzx edx,byte ptr [rsp+0xd]
0x2f28: jmp 0x2956
0x2f5b: mov eax,edx
0x2f5d: jmp 0x24b7
0x306a: mov eax,edx
0x306c: mov rbx,qword ptr [rsp+0x48]
0x3071: test rbx,rbx
0x3074: je 0x30a2
0x3076: test al,al
0x3078: je 0x30a2
0x307a: movzx ecx,byte ptr [rbx]
0x307d: mov rax,rbx
0x3080: test cl,cl
0x3082: je 0x30a2
0x3084: mov rdx,r15
0x3087: sub rax,r15
0x308a: cmp r13,rdx
0x308d: jbe 0x3093
0x308f: mov byte ptr [r14+rdx],cl
0x3093: add rdx,0x1
0x3097: movzx ecx,byte ptr [rax+rdx]
0x309b: test cl,cl
0x309d: jne 0x308a
0x309f: mov r15,rdx
0x30a2: cmp r13,r15
0x30a5: jbe 0x2b49
0x30ab: mov byte ptr [r14+r15],0x0
0x30b0: jmp 0x2b49
0x30b5: cmp dword ptr [rsp+0x8],0x2
0x30ba: movzx ebx,byte ptr [rsp+0xf]
0x30bf: mov rbp,r11
0x30c2: sete al
0x30c5: mov byte ptr [rsp+0xd],bl
0x30c9: jmp 0x2af9
0x310d: sub rsp,0x8
0x3111: mov r8d,0x5
0x3117: mov rcx,r11
0x311a: push qword ptr [rsp+0x68]
0x311e: push qword ptr [rsp+0x78]
0x3122: mov rdi,r14
0x3125: push qword ptr [rsp+0x38]
0x3129: mov r9d,dword ptr [rsp+0x98]
0x3131: mov rdx,qword ptr [rsp+0x30]
0x3136: mov rsi,qword ptr [rsp+0x70]
0x313b: call 0x1f70
0x3140: add rsp,0x20
0x3144: mov r15,rax
0x3147: jmp 0x2b49
0x314c: movzx eax,byte ptr [rsp+0x7c]
0x3151: jmp 0x306c
0x3156: mov dword ptr [rsp+0x8],0x2
0x315e: jmp 0x2af9
0x3163: call 0x12a0
0x3168: mov byte ptr [rsp+0xd],0x0
0x316d: jmp 0x2be1
0x317a: mov byte ptr [rsp+0xe],0x1
0x317f: xor eax,eax
0x3181: xor r12d,r12d
0x3184: mov qword ptr [rsp+0x50],0x0
0x318d: jmp 0x2734
0x31a4: nop 
0x31a6: nop word ptr cs:[rax+rax]
0x329c: add rsp,0x20
0x32a0: mov r11,qword ptr [rsp+0x10]
0x32a5: cmp r11,rax
0x32a8: ja 0x3311
0x32aa: lea rsi,[rax+0x1]
0x32ae: lea rax,[rip+0x203e4b]
0x32b5: cmp r12,rax
0x32b8: mov qword ptr [rbx],rsi
0x32bb: je 0x32cf
0x32bd: mov rdi,r12
0x32c0: mov qword ptr [rsp+0x10],rsi
0x32c5: call 0x11e0
0x32ca: mov rsi,qword ptr [rsp+0x10]
0x32cf: mov rdi,rsi
0x32d2: mov qword ptr [rsp+0x10],rsi
0x32d7: call 0x4130
0x32dc: sub rsp,0x8
0x32e0: mov qword ptr [rbx+0x8],rax
0x32e4: mov r8d,dword ptr [rbp]
0x32e8: push qword ptr [rbp+0x30]
0x32eb: push qword ptr [rbp+0x28]
0x32ee: mov rcx,r14
0x32f1: push r15
0x32f3: mov r9d,dword ptr [rsp+0x3c]
0x32f8: mov rdi,rax
0x32fb: mov rdx,qword ptr [rsp+0x28]
0x3300: mov rsi,qword ptr [rsp+0x30]
0x3305: mov r12,rax
0x3308: call 0x1f70
0x330d: add rsp,0x20
0x3311: mov eax,dword ptr [rsp+0x18]
0x3315: mov dword ptr [r13],eax
0x3319: add rsp,0x28
0x331d: mov rax,r12
0x3320: pop rbx
0x3321: pop rbp
0x3322: pop r12
0x3324: pop r13
0x3326: pop r14
0x3328: pop r15
0x332a: ret 
0x335b: nop dword ptr [rax+rax]
0x3360: push r12
0x3362: push rbp
0x3363: push rbx
0x3364: mov rbx,rdi
0x3367: call 0x1200
0x336c: mov r12d,dword ptr [rax]
0x336f: mov rbp,rax
0x3372: lea rax,[rip+0x203e87]
0x3379: test rbx,rbx
0x337c: mov esi,0x38
0x3381: cmove rbx,rax
0x3385: mov rdi,rbx
0x3388: call 0x4330
0x338d: mov dword ptr [rbp],r12d
0x3391: pop rbx
0x3392: pop rbp
0x3393: pop r12
0x3395: ret 
0x33a0: lea rax,[rip+0x203e59]
0x33a7: test rdi,rdi
0x33aa: cmove rdi,rax
0x33ae: mov eax,dword ptr [rdi]
0x33b0: ret 
0x33c0: lea rax,[rip+0x203e39]
0x33c7: test rdi,rdi
0x33ca: cmove rdi,rax
0x33ce: mov dword ptr [rdi],esi
0x33d0: ret 
0x33e0: lea rax,[rip+0x203e19]
0x33e7: test rdi,rdi
0x33ea: mov ecx,esi
0x33ec: cmove rdi,rax
0x33f0: mov eax,esi
0x33f2: and ecx,0x1f
0x33f5: shr al,0x5
0x33f8: movzx eax,al
0x33fb: lea rdi,[rdi+rax*4+0x8]
0x3400: mov esi,dword ptr [rdi]
0x3402: mov eax,esi
0x3404: shr eax,cl
0x3406: xor edx,eax
0x3408: and eax,0x1
0x340b: and edx,0x1
0x340e: shl edx,cl
0x3410: xor edx,esi
0x3412: mov dword ptr [rdi],edx
0x3414: ret 
0x3420: lea rax,[rip+0x203dd9]
0x3427: test rdi,rdi
0x342a: cmove rdi,rax
0x342e: mov eax,dword ptr [rdi+0x4]
0x3431: mov dword ptr [rdi+0x4],esi
0x3434: ret 
0x3440: lea rax,[rip+0x203db9]
0x3447: test rdi,rdi
0x344a: cmove rdi,rax
0x344e: test rsi,rsi
0x3451: mov dword ptr [rdi],0xa
0x3457: je 0x3467
0x3459: test rdx,rdx
0x345c: je 0x3467
0x345e: mov qword ptr [rdi+0x28],rsi
0x3462: mov qword ptr [rdi+0x30],rdx
0x3466: ret 
0x3467: sub rsp,0x8
0x346b: call 0x11f0
0x3470: push r15
0x3472: push r14
0x3474: lea rax,[rip+0x203d85]
0x347b: push r13
0x347d: push r12
0x347f: mov r13,rdi
0x3482: push rbp
0x3483: push rbx
0x3484: mov rbx,r8
0x3487: mov r14,rsi
0x348a: mov r15,rdx
0x348d: sub rsp,0x18
0x3491: test r8,r8
0x3494: cmove rbx,rax
0x3498: mov qword ptr [rsp+0x8],rcx
0x349d: call 0x1200
0x34a2: mov r12d,dword ptr [rax]
0x34a5: mov rbp,rax
0x34a8: lea rax,[rbx+0x8]
0x34ac: sub rsp,0x8
0x34b0: mov r9d,dword ptr [rbx+0x4]
0x34b4: push qword ptr [rbx+0x30]
0x34b7: mov r8d,dword ptr [rbx]
0x34ba: push qword ptr [rbx+0x28]
0x34bd: mov rdx,r15
0x34c0: push rax
0x34c1: mov rcx,qword ptr [rsp+0x28]
0x34c6: mov rsi,r14
0x34c9: mov rdi,r13
0x34cc: call 0x1f70
0x34d1: mov dword ptr [rbp],r12d
0x34d5: add rsp,0x38
0x34d9: pop rbx
0x34da: pop rbp
0x34db: pop r12
0x34dd: pop r13
0x34df: pop r14
0x34e1: pop r15
0x34e3: ret 
0x34f0: push r15
0x34f2: push r14
0x34f4: lea rax,[rip+0x203d05]
0x34fb: push r13
0x34fd: push r12
0x34ff: mov r12,rdx
0x3502: push rbp
0x3503: push rbx
0x3504: mov rbx,rcx
0x3507: mov r14,rdi
0x350a: mov r15,rsi
0x350d: sub rsp,0x38
0x3511: test rcx,rcx
0x3514: cmove rbx,rax
0x3518: xor ebp,ebp
0x351a: call 0x1200
0x351f: test r12,r12
0x3522: mov r13,rax
0x3525: mov eax,dword ptr [rax]
0x3527: sete bpl
0x352b: or ebp,dword ptr [rbx+0x4]
0x352e: lea r10,[rbx+0x8]
0x3532: sub rsp,0x8
0x3536: mov r8d,dword ptr [rbx]
0x3539: mov rcx,r15
0x353c: mov dword ptr [rsp+0x14],eax
0x3540: push qword ptr [rbx+0x30]
0x3543: mov rdx,r14
0x3546: push qword ptr [rbx+0x28]
0x3549: push r10
0x354b: xor esi,esi
0x354d: mov r9d,ebp
0x3550: xor edi,edi
0x3552: mov qword ptr [rsp+0x40],r10
0x3557: call 0x1f70
0x355c: lea rsi,[rax+0x1]
0x3560: mov qword ptr [rsp+0x48],rax
0x3565: add rsp,0x20
0x3569: mov rdi,rsi
0x356c: mov qword ptr [rsp+0x18],rsi
0x3571: call 0x4130
0x3576: mov qword ptr [rsp+0x10],rax
0x357b: sub rsp,0x8
0x357f: push qword ptr [rbx+0x30]
0x3582: push qword ptr [rbx+0x28]
0x3585: mov r10,qword ptr [rsp+0x38]
0x358a: mov r9d,ebp
0x358d: mov r8d,dword ptr [rbx]
0x3590: mov rcx,r15
0x3593: mov rdx,r14
0x3596: mov rdi,rax
0x3599: push r10
0x359b: mov rsi,qword ptr [rsp+0x38]
0x35a0: call 0x1f70
0x35a5: mov eax,dword ptr [rsp+0x2c]
0x35a9: add rsp,0x20
0x35ad: test r12,r12
0x35b0: mov dword ptr [r13],eax
0x35b4: je 0x35bf
0x35b6: mov r11,qword ptr [rsp+0x28]
0x35bb: mov qword ptr [r12],r11
0x35bf: mov rax,qword ptr [rsp+0x10]
0x35c4: add rsp,0x38
0x35c8: pop rbx
0x35c9: pop rbp
0x35ca: pop r12
0x35cc: pop r13
0x35ce: pop r14
0x35d0: pop r15
0x35d2: ret 
0x35e0: mov rcx,rdx
0x35e3: xor edx,edx
0x35e5: jmp 0x34f0
0x35f0: mov eax,dword ptr [rip+0x203a62]
0x35f6: push r12
0x35f8: mov r12,qword ptr [rip+0x203a61]
0x35ff: push rbp
0x3600: push rbx
0x3601: cmp eax,0x1
0x3604: jle 0x3631
0x3606: sub eax,0x2
0x3609: lea rbx,[r12+0x18]
0x360e: shl rax,0x4
0x3612: lea rbp,[r12+rax+0x28]
0x3617: nop word ptr [rax+rax]
0x3620: mov rdi,qword ptr [rbx]
0x3623: add rbx,0x10
0x3627: call 0x11e0
0x362c: cmp rbx,rbp
0x362f: jne 0x3620
0x3631: mov rdi,qword ptr [r12+0x8]
0x3636: lea rbx,[rip+0x203ac3]
0x363d: cmp rdi,rbx
0x3640: je 0x3659
0x3642: call 0x11e0
0x3647: mov qword ptr [rip+0x203a1e],0x100
0x3652: mov qword ptr [rip+0x203a1f],rbx
0x3659: lea rbx,[rip+0x203a10]
0x3660: cmp r12,rbx
0x3663: je 0x3674
0x3665: mov rdi,r12
0x3668: call 0x11e0
0x366d: mov qword ptr [rip+0x2039ec],rbx
0x3674: pop rbx
0x3675: mov dword ptr [rip+0x2039d9],0x1
0x367f: pop rbp
0x3680: pop r12
0x3682: ret 
0x3690: lea rcx,[rip+0x203b69]
0x3697: mov rdx,-0x1
0x369e: jmp 0x31b0
0x36b0: lea rcx,[rip+0x203b49]
0x36b7: jmp 0x31b0
0x36c0: lea rcx,[rip+0x203b39]
0x36c7: mov rsi,rdi
0x36ca: mov rdx,-0x1
0x36d1: xor edi,edi
0x36d3: jmp 0x31b0
0x36e0: lea rcx,[rip+0x203b19]
0x36e7: mov rdx,rsi
0x36ea: mov rsi,rdi
0x36ed: xor edi,edi
0x36ef: jmp 0x31b0
0x376f: mov rcx,qword ptr [rsp+0x38]
0x3774: xor rcx,qword ptr fs:0x28
0x377d: jne 0x3789
0x377f: add rsp,0x48
0x3783: ret 
0x3784: call 0x11f0
0x3789: call 0x12a0
0x378e: nop 
0x3790: sub rsp,0x48
0x3794: mov rax,rdx
0x3797: mov rdx,rcx
0x379a: mov rcx,qword ptr fs:0x28
0x37a3: mov qword ptr [rsp+0x38],rcx
0x37a8: xor ecx,ecx
0x37aa: cmp esi,0xa
0x37ad: je 0x3810
0x37af: mov dword ptr [rsp],esi
0x37b2: mov rcx,rsp
0x37b5: mov rsi,rax
0x37b8: mov qword ptr [rsp+0x4],0x0
0x37c1: mov qword ptr [rsp+0xc],0x0
0x37ca: mov qword ptr [rsp+0x14],0x0
0x37d3: mov qword ptr [rsp+0x1c],0x0
0x37dc: mov qword ptr [rsp+0x24],0x0
0x37e5: mov qword ptr [rsp+0x2c],0x0
0x37ee: mov dword ptr [rsp+0x34],0x0
0x37f6: call 0x31b0
0x37fb: mov rdx,qword ptr [rsp+0x38]
0x3800: xor rdx,qword ptr fs:0x28
0x3809: jne 0x3815
0x380b: add rsp,0x48
0x380f: ret 
0x3810: call 0x11f0
0x3815: call 0x12a0
0x381a: nop word ptr [rax+rax]
0x3820: mov rdx,rsi
0x3823: mov esi,edi
0x3825: xor edi,edi
0x3827: jmp 0x3700
0x3830: mov rcx,rdx
0x3833: mov rdx,rsi
0x3836: mov esi,edi
0x3838: xor edi,edi
0x383a: jmp 0x3790
0x3840: sub rsp,0x48
0x3844: mov ecx,edx
0x3846: mov rax,qword ptr fs:0x28
0x384f: mov qword ptr [rsp+0x38],rax
0x3854: xor eax,eax
0x3856: mov rax,qword ptr [rip+0x2039d3]
0x385d: mov r8,rsp
0x3860: and ecx,0x1f
0x3863: movdqa xmm0,[rip+0x203995]
0x386b: mov qword ptr [rsp+0x30],rax
0x3870: mov eax,edx
0x3872: movaps [rsp],xmm0
0x3876: shr al,0x5
0x3879: movzx eax,al
0x387c: lea r9,[r8+rax*4+0x8]
0x3881: movdqa xmm0,[rip+0x203987]
0x3889: movaps [rsp+0x10],xmm0
0x388e: movdqa xmm0,[rip+0x20398a]
0x3896: movaps [rsp+0x20],xmm0
0x389b: mov edx,dword ptr [r9]
0x389e: mov eax,edx
0x38a0: shr eax,cl
0x38a2: not eax
0x38a4: and eax,0x1
0x38a7: shl eax,cl
0x38a9: mov rcx,r8
0x38ac: xor eax,edx
0x38ae: mov rdx,rsi
0x38b1: mov rsi,rdi
0x38b4: mov dword ptr [r9],eax
0x38b7: xor edi,edi
0x38b9: call 0x31b0
0x38be: mov rsi,qword ptr [rsp+0x38]
0x38c3: xor rsi,qword ptr fs:0x28
0x38cc: jne 0x38d3
0x38ce: add rsp,0x48
0x38d2: ret 
0x38d3: call 0x12a0
0x38d8: nop dword ptr [rax+rax]
0x38e0: movsx edx,sil
0x38e4: mov rsi,-0x1
0x38eb: jmp 0x3840
0x38f0: mov edx,0x3a
0x38f5: mov rsi,-0x1
0x38fc: jmp 0x3840
0x3910: mov edx,0x3a
0x3915: jmp 0x3840
0x3920: sub rsp,0x48
0x3924: mov rax,rdx
0x3927: mov rdx,qword ptr fs:0x28
0x3930: mov qword ptr [rsp+0x38],rdx
0x3935: xor edx,edx
0x3937: cmp esi,0xa
0x393a: je 0x39a4
0x393c: mov dword ptr [rsp],esi
0x393f: mov rcx,rsp
0x3942: mov rdx,-0x1
0x3949: mov rsi,rax
0x394c: mov qword ptr [rsp+0x4],0x0
0x3955: mov qword ptr [rsp+0xc],0x4000000
0x395e: mov qword ptr [rsp+0x14],0x0
0x3967: mov qword ptr [rsp+0x1c],0x0
0x3970: mov qword ptr [rsp+0x24],0x0
0x3979: mov qword ptr [rsp+0x2c],0x0
0x3982: mov dword ptr [rsp+0x34],0x0
0x398a: call 0x31b0
0x398f: mov rcx,qword ptr [rsp+0x38]
0x3994: xor rcx,qword ptr fs:0x28
0x399d: jne 0x39a9
0x399f: add rsp,0x48
0x39a3: ret 
0x39a4: call 0x11f0
0x39a9: call 0x12a0
0x39ae: nop 
0x39b0: sub rsp,0x48
0x39b4: mov r9,rcx
0x39b7: mov rcx,qword ptr [rip+0x203872]
0x39be: movdqa xmm0,[rip+0x20383a]
0x39c6: mov rax,qword ptr fs:0x28
0x39cf: mov qword ptr [rsp+0x38],rax
0x39d4: xor eax,eax
0x39d6: movaps [rsp],xmm0
0x39da: test rsi,rsi
0x39dd: mov qword ptr [rsp+0x30],rcx
0x39e2: mov dword ptr [rsp],0xa
0x39e9: movdqa xmm0,[rip+0x20381f]
0x39f1: movaps [rsp+0x10],xmm0
0x39f6: movdqa xmm0,[rip+0x203822]
0x39fe: movaps [rsp+0x20],xmm0
0x3a03: je 0x3a37
0x3a05: test rdx,rdx
0x3a08: je 0x3a37
0x3a0a: mov qword ptr [rsp+0x28],rsi
0x3a0f: mov qword ptr [rsp+0x30],rdx
0x3a14: mov rcx,rsp
0x3a17: mov rdx,r8
0x3a1a: mov rsi,r9
0x3a1d: call 0x31b0
0x3a22: mov rdi,qword ptr [rsp+0x38]
0x3a27: xor rdi,qword ptr fs:0x28
0x3a30: jne 0x3a3c
0x3a32: add rsp,0x48
0x3a36: ret 
0x3a37: call 0x11f0
0x3a3c: call 0x12a0
0x3a41: nop dword ptr [rax+rax]
0x3a46: nop word ptr cs:[rax+rax]
0x3a50: mov r8,-0x1
0x3a57: jmp 0x39b0
0x3a60: mov rcx,rdx
0x3a63: mov r8,-0x1
0x3a6a: mov rdx,rsi
0x3a6d: mov rsi,rdi
0x3a70: xor edi,edi
0x3a72: jmp 0x39b0
0x3a80: mov r8,rcx
0x3a83: mov rcx,rdx
0x3a86: mov rdx,rsi
0x3a89: mov rsi,rdi
0x3a8c: xor edi,edi
0x3a8e: jmp 0x39b0
0x3aa0: lea rcx,[rip+0x203579]
0x3aa7: jmp 0x31b0
0x3ab0: lea rcx,[rip+0x203569]
0x3ab7: mov rdx,rsi
0x3aba: mov rsi,rdi
0x3abd: xor edi,edi
0x3abf: jmp 0x31b0
0x3ad0: lea rcx,[rip+0x203549]
0x3ad7: mov rdx,-0x1
0x3ade: jmp 0x31b0
0x3c48: mov r8,rcx
0x3c4b: mov rcx,rdx
0x3c4e: lea rdx,[rip+0x131f]
0x3c55: mov esi,0x1
0x3c5a: xor eax,eax
0x3c5c: call 0x1420
0x3c61: jmp 0x3b4c
0x3e5d: push r12
0x3e5f: push r15
0x3e61: push r14
0x3e63: mov r8,qword ptr [rsp+0x20]
0x3e68: mov rcx,rbx
0x3e6b: mov rdx,rax
0x3e6e: mov rdi,rbp
0x3e71: mov esi,0x1
0x3e76: xor eax,eax
0x3e78: call 0x1420
0x3e7d: add rsp,0x20
0x3e81: add rsp,0x28
0x3e85: pop rbx
0x3e86: pop rbp
0x3e87: pop r12
0x3e89: pop r13
0x3e8b: pop r14
0x3e8d: pop r15
0x3e8f: ret 
0x3ec9: push r12
0x3ecb: push r15
0x3ecd: push r14
0x3ecf: mov r9,qword ptr [rsp+0x28]
0x3ed4: jmp 0x3e63
0x3f30: xor r9d,r9d
0x3f33: cmp qword ptr [r8],0x0
0x3f37: je 0x3f4b
0x3f39: nop dword ptr [rax]
0x3f40: add r9,0x1
0x3f44: cmp qword ptr [r8+r9*8],0x0
0x3f49: jne 0x3f40
0x3f4b: jmp 0x3b10
0x3f78: mov r11d,eax
0x3f7b: add r11,qword ptr [r10+0x10]
0x3f7f: add eax,0x8
0x3f82: mov dword ptr [r10],eax
0x3fb5: call 0x12a0
0x3fd0: push rbp
0x3fd1: push rbx
0x3fd2: mov r10d,0x20
0x3fd8: xor r11d,r11d
0x3fdb: sub rsp,0xb8
0x3fe2: mov rax,qword ptr fs:0x28
0x3feb: mov qword ptr [rsp+0x78],rax
0x3ff0: xor eax,eax
0x3ff2: lea rax,[rsp+0xd0]
0x3ffa: mov qword ptr [rsp+0xa0],r8
0x4002: lea rbx,[rsp+0xd0]
0x400a: lea r8,[rsp+0x20]
0x400f: mov qword ptr [rsp+0xa8],r9
0x4017: mov dword ptr [rsp+0x8],0x20
0x401f: mov qword ptr [rsp+0x10],rax
0x4024: lea rax,[rsp+0x80]
0x402c: xor r9d,r9d
0x402f: mov qword ptr [rsp+0x18],rax
0x4034: mov rbp,rax
0x4037: nop word ptr [rax+rax]
0x4040: cmp r10d,0x2f
0x4044: ja 0x409c
0x4046: mov eax,r10d
0x4049: mov r11d,0x1
0x404f: add r10d,0x8
0x4053: add rax,rbp
0x4056: mov rax,qword ptr [rax]
0x4059: test rax,rax
0x405c: mov qword ptr [r8+r9*8],rax
0x4060: je 0x406c
0x4062: add r9,0x1
0x4066: cmp r9,0xa
0x406a: jne 0x4040
0x406c: test r11b,r11b
0x406f: jne 0x4095
0x4071: call 0x3b10
0x4076: mov rax,qword ptr [rsp+0x78]
0x407b: xor rax,qword ptr fs:0x28
0x4084: jne 0x4090
0x4086: add rsp,0xb8
0x408d: pop rbx
0x408e: pop rbp
0x408f: ret 
0x4090: call 0x12a0
0x4095: mov dword ptr [rsp+0x8],r10d
0x409a: jmp 0x4071
0x409c: mov rax,rbx
0x409f: add rbx,0x8
0x40a3: jmp 0x4056
0x40b0: push rbx
0x40b1: lea rsi,[rip+0xf0a]
0x40b8: mov edx,0x5
0x40bd: xor edi,edi
0x40bf: call 0x1270
0x40c4: lea rdx,[rip+0xf0c]
0x40cb: mov rsi,rax
0x40ce: mov edi,0x1
0x40d3: xor eax,eax
0x40d5: call 0x13b0
0x40da: lea rsi,[rip+0xf0c]
0x40e1: mov edx,0x5
0x40e6: xor edi,edi
0x40e8: call 0x1270
0x40ed: lea rcx,[rip+0x87c]
0x40f4: lea rdx,[rip+0x6c4]
0x40fb: mov rsi,rax
0x40fe: mov edi,0x1
0x4103: xor eax,eax
0x4105: call 0x13b0
0x410a: mov rbx,qword ptr [rip+0x202f77]
0x4111: lea rsi,[rip+0x1108]
0x4118: xor edi,edi
0x411a: mov edx,0x5
0x411f: call 0x1270
0x4124: mov rsi,rbx
0x4127: mov rdi,rax
0x412a: pop rbx
0x412b: jmp 0x1310
0x4130: push rbx
0x4131: mov rbx,rdi
0x4134: call 0x1350
0x4139: test rax,rax
0x413c: jne 0x4143
0x413e: test rbx,rbx
0x4141: jne 0x4145
0x4143: pop rbx
0x4144: ret 
0x4145: call 0x4380
0x414a: nop word ptr [rax+rax]
0x4150: mov rax,rdi
0x4153: mul rsi
0x4156: mov rdi,rax
0x4159: seto al
0x415c: test rdi,rdi
0x415f: js 0x416b
0x4161: movzx eax,al
0x4164: test rax,rax
0x4167: jne 0x416b
0x4169: jmp 0x4130
0x416b: sub rsp,0x8
0x416f: call 0x4380
0x4174: nop 
0x4176: nop word ptr cs:[rax+rax]
0x4180: jmp 0x4130
0x41c6: nop word ptr cs:[rax+rax]
0x41d0: mov rax,rsi
0x41d3: mul rdx
0x41d6: mov rsi,rax
0x41d9: seto al
0x41dc: test rsi,rsi
0x41df: js 0x41eb
0x41e1: movzx eax,al
0x41e4: test rax,rax
0x41e7: jne 0x41eb
0x41e9: jmp 0x4190
0x41eb: sub rsp,0x8
0x41ef: call 0x4380
0x41f4: nop 
0x41f6: nop word ptr cs:[rax+rax]
0x4200: test rdi,rdi
0x4203: mov r9,rdx
0x4206: mov rcx,qword ptr [rsi]
0x4209: je 0x4240
0x420b: xor edx,edx
0x420d: movabsq rax,0x5555555555555554
0x4217: div r9
0x421a: cmp rax,rcx
0x421d: jbe 0x425b
0x421f: mov rax,rcx
0x4222: shr rax
0x4225: lea rcx,[rax+rcx+0x1]
0x422a: mov qword ptr [rsi],rcx
0x422d: imul rcx,r9
0x4231: mov rsi,rcx
0x4234: jmp 0x4190
0x4240: test rcx,rcx
0x4243: je 0x4268
0x4245: mov rax,rcx
0x4248: mul r9
0x424b: seto dl
0x424e: test rax,rax
0x4251: movzx edx,dl
0x4254: js 0x425b
0x4256: test rdx,rdx
0x4259: je 0x422a
0x425b: sub rsp,0x8
0x425f: call 0x4380
0x4264: nop dword ptr [rax]
0x4268: xor edx,edx
0x426a: mov eax,0x80
0x426f: xor r8d,r8d
0x4272: div r9
0x4275: test rax,rax
0x4278: sete r8b
0x427c: lea rcx,[r8+rax]
0x4280: jmp 0x4245
0x4290: test rdi,rdi
0x4293: mov rax,qword ptr [rsi]
0x4296: je 0x42c0
0x4298: movabsq rdx,0x5555555555555553
0x42a2: cmp rax,rdx
0x42a5: ja 0x42d1
0x42a7: mov rdx,rax
0x42aa: shr rdx
0x42ad: lea rax,[rdx+rax+0x1]
0x42b2: mov qword ptr [rsi],rax
0x42b5: mov rsi,rax
0x42b8: jmp 0x4190
0x42c0: test rax,rax
0x42c3: mov edx,0x80
0x42c8: cmove rax,rdx
0x42cc: test rax,rax
0x42cf: jns 0x42b2
0x42d1: sub rsp,0x8
0x42d5: call 0x4380
0x42da: nop word ptr [rax+rax]
0x42e0: push rbx
0x42e1: mov rbx,rdi
0x42e4: call 0x4130
0x42e9: mov rdx,rbx
0x42ec: xor esi,esi
0x42ee: mov rdi,rax
0x42f1: pop rbx
0x42f2: jmp 0x12f0
0x4300: mov rax,rdi
0x4303: sub rsp,0x8
0x4307: mul rsi
0x430a: seto dl
0x430d: test rax,rax
0x4310: js 0x4329
0x4312: movzx edx,dl
0x4315: test rdx,rdx
0x4318: jne 0x4329
0x431a: call 0x1320
0x431f: test rax,rax
0x4322: je 0x4329
0x4324: add rsp,0x8
0x4328: ret 
0x4329: call 0x4380
0x432e: nop 
0x4330: push rbp
0x4331: push rbx
0x4332: mov rbp,rdi
0x4335: mov rdi,rsi
0x4338: mov rbx,rsi
0x433b: sub rsp,0x8
0x433f: call 0x4130
0x4344: add rsp,0x8
0x4348: mov rdx,rbx
0x434b: mov rsi,rbp
0x434e: pop rbx
0x434f: pop rbp
0x4350: mov rdi,rax
0x4353: jmp 0x1330
0x4360: push rbx
0x4361: mov rbx,rdi
0x4364: call 0x1290
0x4369: mov rdi,rbx
0x436c: lea rsi,[rax+0x1]
0x4370: pop rbx
0x4371: jmp 0x4330
0x43b0: call 0x11f0
0x43b5: nop word ptr cs:[rax+rax]
0x43bf: nop 
0x43c0: push r13
0x43c2: push r12
0x43c4: mov r13,rsi
0x43c7: push rbp
0x43c8: push rbx
0x43c9: mov rbx,rdi
0x43cc: mov r12,rdx
0x43cf: sub rsp,0x18
0x43d3: mov rax,qword ptr fs:0x28
0x43dc: mov qword ptr [rsp+0x8],rax
0x43e1: xor eax,eax
0x43e3: lea rax,[rsp+0x4]
0x43e8: test rdi,rdi
0x43eb: cmove rbx,rax
0x43ef: mov rdi,rbx
0x43f2: call 0x12c0
0x43f7: cmp rax,-0x3
0x43fb: mov rbp,rax
0x43fe: jbe 0x4420
0x4400: test r12,r12
0x4403: je 0x4420
0x4405: xor edi,edi
0x4407: call 0x44d0
0x440c: test al,al
0x440e: jne 0x4420
0x4410: movzx eax,byte ptr [r13]
0x4415: mov ebp,0x1
0x441a: mov dword ptr [rbx],eax
0x441c: nop dword ptr [rax]
0x4420: mov rdx,qword ptr [rsp+0x8]
0x4425: xor rdx,qword ptr fs:0x28
0x442e: mov rax,rbp
0x4431: jne 0x443e
0x4433: add rsp,0x18
0x4437: pop rbx
0x4438: pop rbp
0x4439: pop r12
0x443b: pop r13
0x443d: ret 
0x443e: call 0x12a0
0x4443: nop word ptr cs:[rax+rax]
0x444d: nop dword ptr [rax]
0x4450: push r12
0x4452: push rbp
0x4453: mov rbp,rdi
0x4456: push rbx
0x4457: call 0x1230
0x445c: mov ebx,dword ptr [rbp]
0x445f: mov rdi,rbp
0x4462: mov r12,rax
0x4465: call 0x4570
0x446a: and ebx,0x20
0x446d: test ebx,ebx
0x446f: jne 0x4488
0x4471: test eax,eax
0x4473: je 0x447f
0x4475: test r12,r12
0x4478: mov eax,0xffffffff
0x447d: je 0x44b8
0x447f: pop rbx
0x4480: pop rbp
0x4481: pop r12
0x4483: ret 
0x4488: test eax,eax
0x448a: jne 0x44a8
0x448c: call 0x1200
0x4491: mov dword ptr [rax],0x0
0x4497: mov eax,0xffffffff
0x449c: pop rbx
0x449d: pop rbp
0x449e: pop r12
0x44a0: ret 
0x44a8: pop rbx
0x44a9: mov eax,0xffffffff
0x44ae: pop rbp
0x44af: pop r12
0x44b1: ret 
0x44b8: call 0x1200
0x44bd: cmp dword ptr [rax],0x9
0x44c0: pop rbx
0x44c1: pop rbp
0x44c2: pop r12
0x44c4: setne al
0x44c7: movzx eax,al
0x44ca: neg eax
0x44cc: ret 
0x44d0: sub rsp,0x8
0x44d4: xor esi,esi
0x44d6: call 0x13a0
0x44db: mov rdx,rax
0x44de: mov eax,0x1
0x44e3: test rdx,rdx
0x44e6: je 0x4505
0x44e8: lea rdi,[rip+0xdf1]
0x44ef: mov ecx,0x2
0x44f4: mov rsi,rdx
0x44f7: rep cmpsb [rsi],es:[rdi]
0x44f9: seta cl
0x44fc: sbb cl,0x0
0x44ff: xor eax,eax
0x4501: test cl,cl
0x4503: jne 0x4510
0x4505: add rsp,0x8
0x4509: ret 
0x4510: lea rdi,[rip+0xdcb]
0x4517: mov ecx,0x6
0x451c: mov rsi,rdx
0x451f: rep cmpsb [rsi],es:[rdi]
0x4521: seta al
0x4524: sbb al,0x0
0x4526: test al,al
0x4528: setne al
0x452b: add rsp,0x8
0x452f: ret 
0x4530: sub rsp,0x8
0x4534: mov edi,0xe
0x4539: call 0x1370
0x453e: test rax,rax
0x4541: je 0x4560
0x4543: cmp byte ptr [rax],0x0
0x4546: lea rdx,[rip+0xd9b]
0x454d: cmove rax,rdx
0x4551: add rsp,0x8
0x4555: ret 
0x4560: lea rax,[rip+0xd81]
0x4567: add rsp,0x8
0x456b: ret 
0x4570: push r12
0x4572: push rbp
0x4573: push rbx
0x4574: mov rbx,rdi
0x4577: call 0x1340
0x457c: test eax,eax
0x457e: mov rdi,rbx
0x4581: js 0x45d7
0x4583: call 0x1380
0x4588: test eax,eax
0x458a: jne 0x45b8
0x458c: mov rdi,rbx
0x458f: call 0x45f0
0x4594: test eax,eax
0x4596: je 0x45d4
0x4598: call 0x1200
0x459d: mov r12d,dword ptr [rax]
0x45a0: mov rdi,rbx
0x45a3: mov rbp,rax
0x45a6: call 0x1250
0x45ab: test r12d,r12d
0x45ae: jne 0x45e0
0x45b0: pop rbx
0x45b1: pop rbp
0x45b2: pop r12
0x45b4: ret 
0x45b8: mov rdi,rbx
0x45bb: call 0x1340
0x45c0: xor esi,esi
0x45c2: mov edx,0x1
0x45c7: mov edi,eax
0x45c9: call 0x12e0
0x45ce: cmp rax,-0x1
0x45d2: jne 0x458c
0x45d4: mov rdi,rbx
0x45d7: pop rbx
0x45d8: pop rbp
0x45d9: pop r12
0x45db: jmp 0x1250
0x45e0: mov dword ptr [rbp],r12d
0x45e4: mov eax,0xffffffff
0x45e9: jmp 0x45b0
0x45f0: test rdi,rdi
0x45f3: push rbx
0x45f4: mov rbx,rdi
0x45f7: je 0x460a
0x45f9: call 0x1380
0x45fe: test eax,eax
0x4600: je 0x460a
0x4602: test dword ptr [rbx],0x100
0x4608: jne 0x4618
0x460a: mov rdi,rbx
0x460d: pop rbx
0x460e: jmp 0x1360
0x4618: mov rdi,rbx
0x461b: mov edx,0x1
0x4620: xor esi,esi
0x4622: call 0x4630
0x4627: mov rdi,rbx
0x462a: pop rbx
0x462b: jmp 0x1360
0x4630: mov rax,qword ptr [rdi+0x8]
0x4634: cmp qword ptr [rdi+0x10],rax
0x4638: je 0x4640
0x463a: jmp 0x13d0
0x4640: mov rax,qword ptr [rdi+0x20]
0x4644: cmp qword ptr [rdi+0x28],rax
0x4648: jne 0x463a
0x464a: cmp qword ptr [rdi+0x48],0x0
0x464f: jne 0x463a
0x4651: push r12
0x4653: push rbp
0x4654: mov r12d,edx
0x4657: push rbx
0x4658: mov rbp,rsi
0x465b: mov rbx,rdi
0x465e: call 0x1340
0x4663: mov edx,r12d
0x4666: mov rsi,rbp
0x4669: mov edi,eax
0x466b: call 0x12e0
0x4670: cmp rax,-0x1
0x4674: je 0x4682
0x4676: and dword ptr [rbx],-0x11
0x4679: mov qword ptr [rbx+0x90],rax
0x4680: xor eax,eax
0x4682: pop rbx
0x4683: pop rbp
0x4684: pop r12
0x4686: ret 
0x4690: push r15
0x4692: push r14
0x4694: mov r15,rdx
0x4697: push r13
0x4699: push r12
0x469b: lea r12,[rip+0x20250e]
0x46a2: push rbp
0x46a3: lea rbp,[rip+0x20250e]
0x46aa: push rbx
0x46ab: mov r13d,edi
0x46ae: mov r14,rsi
0x46b1: sub rbp,r12
0x46b4: sub rsp,0x8
0x46b8: sar rbp,0x3
0x46bc: call 0x11b8
0x46c1: test rbp,rbp
0x46c4: je 0x46e6
0x46c6: xor ebx,ebx
0x46c8: nop dword ptr [rax+rax]
0x46d0: mov rdx,r15
0x46d3: mov rsi,r14
0x46d6: mov edi,r13d
0x46d9: call qword ptr [r12+rbx*8]
0x46dd: add rbx,0x1
0x46e1: cmp rbp,rbx
0x46e4: jne 0x46d0
0x46e6: add rsp,0x8
0x46ea: pop rbx
0x46eb: pop rbp
0x46ec: pop r12
0x46ee: pop r13
0x46f0: pop r14
0x46f2: pop r15
0x46f4: ret 
0x4700: rep ret 
