0x23b6: jmp qword ptr [rip+0x2258dc]
0x23d0: jmp qword ptr [rip+0x2258d2]
0x2440: jmp qword ptr [rip+0x22589a]
0x2460: jmp qword ptr [rip+0x22588a]
0x2480: jmp qword ptr [rip+0x22587a]
0x24d0: jmp qword ptr [rip+0x225852]
0x2670: jmp qword ptr [rip+0x225782]
0x2690: jmp qword ptr [rip+0x225772]
0x2760: jmp qword ptr [rip+0x22570a]
0x27d0: jmp qword ptr [rip+0x2256d2]
0x2800: jmp qword ptr [rip+0x2256ba]
0x2860: jmp qword ptr [rip+0x22568a]
0x2870: jmp qword ptr [rip+0x225682]
0x2880: jmp qword ptr [rip+0x22567a]
0x28e0: jmp qword ptr [rip+0x22564a]
0x28f0: jmp qword ptr [rip+0x225642]
0x2920: jmp qword ptr [rip+0x22562a]
0x29a0: jmp qword ptr [rip+0x2255ea]
0x29e0: jmp qword ptr [rip+0x2255ca]
0x2a00: jmp qword ptr [rip+0x2255ba]
0x2a18: jmp qword ptr [rip+0x2255da]
0x2a20: lea rcx,[rip+0x1f039]
0x2a27: lea rsi,[rip+0x1ea7a]
0x2a2e: lea rdi,[rip+0x1eac1]
0x2a35: sub rsp,0x8
0x2a39: mov edx,0xb3
0x2a3e: call 0x2600
0x2a43: nop word ptr cs:[rax+rax]
0x2a4d: nop dword ptr [rax]
0x2ca4: mov dword ptr [rip+0x2254c6],edi
0x2caa: mov qword ptr [rip+0x225493],0x1
0x2cb5: jmp 0x2b48
0x3425: lea rsi,[rip+0x1da94]
0x342c: xor edi,edi
0x342e: mov rbp,rax
0x3431: mov edx,0x5
0x3436: call 0x2510
0x343b: xor esi,esi
0x343d: mov rdx,rax
0x3440: xor edi,edi
0x3442: xor eax,eax
0x3444: mov rcx,rbp
0x3447: call 0x28a0
0x344c: cmp byte ptr [rbx],0x0
0x344f: jne 0x34e1
0x3455: nop dword ptr [rax]
0x3488: lea rdx,[rip+0x1c897]
0x348f: mov rcx,rax
0x3492: mov r9,rbp
0x3495: mov r8,rbx
0x3498: xor esi,esi
0x349a: xor edi,edi
0x349c: xor eax,eax
0x349e: call 0x28a0
0x34a3: mov byte ptr [rsp+0x18],0x0
0x34a8: jmp 0x3000
0x34e1: mov byte ptr [rsp+0x18],0x0
0x34e6: jmp 0x3000
0x356e: lea rsi,[rip+0x1c6e2]
0x3575: mov edx,0x5
0x357a: xor edi,edi
0x357c: mov rbp,rax
0x357f: call 0x2510
0x3584: mov rbx,rax
0x3587: call 0x2410
0x358c: mov esi,dword ptr [rax]
0x358e: mov rcx,rbp
0x3591: mov rdx,rbx
0x3594: xor edi,edi
0x3596: xor eax,eax
0x3598: call 0x28a0
0x359d: mov byte ptr [rsp+0x18],0x0
0x3698: lea rsi,[rip+0x1c5f6]
0x369f: mov edx,0x5
0x36a4: xor edi,edi
0x36a6: mov rbx,rax
0x36a9: call 0x2510
0x36ae: mov esi,dword ptr [r14+0x40]
0x36b2: mov rdx,rax
0x36b5: mov rcx,rbx
0x36b8: xor edi,edi
0x36ba: xor eax,eax
0x36bc: call 0x28a0
0x36c1: jmp 0x31b0
0x3729: cmp byte ptr [rsp+0x1c],0x0
0x372e: je 0x2f09
0x3734: mov rbx,qword ptr [rip+0x2248d5]
0x373b: test rbx,rbx
0x373e: je 0x39d8
0x3744: lea rsi,[rip+0x1d695]
0x374b: mov edx,0x5
0x3750: xor edi,edi
0x3752: call 0x2510
0x3757: xor edi,edi
0x3759: mov rdx,rax
0x375c: mov rcx,rbx
0x375f: xor esi,esi
0x3761: xor eax,eax
0x3763: call 0x28a0
0x3768: mov edi,0x1
0x376d: call 0x4240
0x3772: mov rdi,qword ptr [rip+0x224947]
0x3779: call 0xc360
0x377e: lea rsi,[rip+0x1c3f6]
0x3785: mov edx,0x5
0x378a: xor edi,edi
0x378c: mov qword ptr [rsp+0x8],rax
0x3791: call 0x2510
0x3796: mov rcx,qword ptr [rsp+0x8]
0x379b: mov rdx,rax
0x379e: xor esi,esi
0x37a0: xor edi,edi
0x37a2: xor eax,eax
0x37a4: call 0x28a0
0x37a9: mov byte ptr [rsp+0x8],0x0
0x37ae: jmp 0x2b48
0x38e9: lea rsi,[rip+0x1c34c]
0x38f0: mov edx,0x5
0x38f5: xor edi,edi
0x38f7: mov rbp,rax
0x38fa: call 0x2510
0x38ff: mov rbx,rax
0x3902: call 0x2410
0x3907: mov esi,dword ptr [rax]
0x3909: mov rcx,rbp
0x390c: mov rdx,rbx
0x390f: mov edi,0x1
0x3914: xor eax,eax
0x3916: call 0x28a0
0x3951: jmp 0x3706
0x396e: lea rsi,[rip+0x1c30c]
0x3975: mov edx,0x5
0x397a: xor edi,edi
0x397c: mov rbp,rax
0x397f: call 0x2510
0x3984: mov esi,dword ptr [rbx]
0x3986: mov rdx,rax
0x3989: mov rcx,rbp
0x398c: xor edi,edi
0x398e: xor eax,eax
0x3990: call 0x28a0
0x3995: jmp 0x36e9
0x39aa: lea rsi,[rip+0x1c306]
0x39b1: mov edx,0x5
0x39b6: xor edi,edi
0x39b8: mov rbx,rax
0x39bb: call 0x2510
0x39c0: mov esi,dword ptr [r14+0x40]
0x39c4: mov rdx,rax
0x39c7: mov rcx,rbx
0x39ca: xor edi,edi
0x39cc: xor eax,eax
0x39ce: call 0x28a0
0x39d3: jmp 0x3400
0x39d8: lea rsi,[rip+0x1d3c9]
0x39df: xor edi,edi
0x39e1: mov edx,0x5
0x39e6: call 0x2510
0x39eb: xor esi,esi
0x39ed: mov rdx,rax
0x39f0: xor edi,edi
0x39f2: xor eax,eax
0x39f4: call 0x28a0
0x39f9: mov rbx,qword ptr [rip+0x224610]
0x3a00: test rbx,rbx
0x3a03: jne 0x3744
0x3a09: mov qword ptr [rip+0x2245fc],0x0
0x3a14: jmp 0x2f09
0x3a3a: jmp 0x2f1f
0x3c71: mov esi,dword ptr [r14+0x40]
0x3c75: lea rdx,[rip+0x1d814]
0x3c7c: mov rcx,rax
0x3c7f: xor edi,edi
0x3c81: xor eax,eax
0x3c83: call 0x28a0
0x3c88: jmp 0x31b0
0x3cf9: lea rsi,[rip+0x1d200]
0x3d00: mov rbx,rax
0x3d03: xor edi,edi
0x3d05: mov edx,0x5
0x3d0a: call 0x2510
0x3d0f: mov rcx,rbx
0x3d12: mov rdx,rax
0x3d15: xor esi,esi
0x3d17: xor edi,edi
0x3d19: xor eax,eax
0x3d1b: call 0x28a0
0x3d20: jmp 0x3400
0x3df3: lea rsi,[rip+0x1be31]
0x3dfa: mov rbx,rax
0x3dfd: mov edx,0x5
0x3e02: xor edi,edi
0x3e04: call 0x2510
0x3e09: mov rcx,rbx
0x3e0c: mov rdx,rax
0x3e0f: xor esi,esi
0x3e11: xor edi,edi
0x3e13: xor eax,eax
0x3e15: call 0x28a0
0x3e1a: lea rsi,[rip+0x1d03f]
0x3e21: mov edx,0x5
0x3e26: xor edi,edi
0x3e28: call 0x2510
0x3e2d: mov rdi,qword ptr [rip+0x2242ac]
0x3e34: lea rdx,[rip+0x1e155]
0x3e3b: mov rcx,rax
0x3e3e: mov esi,0x1
0x3e43: xor eax,eax
0x3e45: call 0x2970
0x3e4a: mov edi,0x1
0x3e4f: call 0x4240
0x3e54: mov r8,qword ptr [rip+0x224265]
0x3e5b: mov esi,dword ptr [rsp+0x5c]
0x3e5f: lea rcx,[rip+0x22387a]
0x3e66: mov edx,0x74
0x3e6b: mov edi,eax
0x3e6d: call 0xd7d0
0x3e8f: lea rsi,[rip+0x1be5b]
0x3e96: mov rbx,rax
0x3e99: mov edx,0x5
0x3e9e: xor edi,edi
0x3ea0: call 0x2510
0x3ea5: mov rcx,rbx
0x3ea8: mov rdx,rax
0x3eab: xor esi,esi
0x3ead: mov edi,0x1
0x3eb2: xor eax,eax
0x3eb4: call 0x28a0
0x3f0b: lea rsi,[rip+0x1ce66]
0x3f12: mov edx,0x5
0x3f17: xor edi,edi
0x3f19: call 0x2510
0x3f1e: xor esi,esi
0x3f20: mov rdx,rax
0x3f23: xor edi,edi
0x3f25: xor eax,eax
0x3f27: call 0x28a0
0x3f36: nop word ptr cs:[rax+rax]
0x3f6a: hlt 
0x3f6b: nop dword ptr [rax+rax]
0x3f70: lea rdi,[rip+0x224129]
0x3f77: push rbp
0x3f78: lea rax,[rip+0x224121]
0x3f7f: cmp rax,rdi
0x3f82: mov rbp,rsp
0x3f85: je 0x3fa0
0x3f87: mov rax,qword ptr [rip+0x224042]
0x3f8e: test rax,rax
0x3f91: je 0x3fa0
0x3f93: pop rbp
0x3f94: jmp rax
0x3fa0: pop rbp
0x3fa1: ret 
0x3fb0: lea rdi,[rip+0x2240e9]
0x3fb7: lea rsi,[rip+0x2240e2]
0x3fbe: push rbp
0x3fbf: sub rsi,rdi
0x3fc2: mov rbp,rsp
0x3fc5: sar rsi,0x3
0x3fc9: mov rax,rsi
0x3fcc: shr rax,0x3f
0x3fd0: add rsi,rax
0x3fd3: sar rsi, 1
0x3fd6: je 0x3ff0
0x3fd8: mov rax,qword ptr [rip+0x224011]
0x3fdf: test rax,rax
0x3fe2: je 0x3ff0
0x3fe4: pop rbp
0x3fe5: jmp rax
0x3ff0: pop rbp
0x3ff1: ret 
0x4011: push rbp
0x4012: mov rbp,rsp
0x4015: je 0x4023
0x4017: mov rdi,qword ptr [rip+0x223fea]
0x401e: call 0x2a18
0x4023: call 0x3f70
0x4028: mov byte ptr [rip+0x2240b9],0x1
0x402f: pop rbp
0x4030: ret 
0x4040: push rbp
0x4041: mov rbp,rsp
0x4044: pop rbp
0x4045: jmp 0x3fb0
0x40da: nop word ptr [rax+rax]
0x41da: jmp 0x413d
0x41f9: lea rsi,[rip+0x1b86d]
0x4200: mov r12,rax
0x4203: xor edi,edi
0x4205: mov edx,0x5
0x420a: call 0x2510
0x420f: xor esi,esi
0x4211: mov rdx,rax
0x4214: xor edi,edi
0x4216: mov rcx,r12
0x4219: xor eax,eax
0x421b: call 0x28a0
0x4220: mov rsi,qword ptr [rip+0x223e81]
0x4227: mov rdi,rbx
0x422a: call 0x26a0
0x422f: jmp 0x4186
0x4239: nop dword ptr [rax]
0x429d: lea rsi,[rip+0x1bbbc]
0x42a4: xor edi,edi
0x42a6: call 0x2510
0x42ab: mov rcx,rbx
0x42ae: mov rdx,rbx
0x42b1: mov rsi,rax
0x42b4: mov edi,0x1
0x42b9: xor eax,eax
0x42bb: call 0x2850
0x42c0: mov rbx,qword ptr [rip+0x223de1]
0x42c7: lea rsi,[rip+0x1bbda]
0x42ce: mov edx,0x5
0x42d3: xor edi,edi
0x42d5: call 0x2510
0x42da: mov rsi,rbx
0x42dd: mov rdi,rax
0x42e0: call 0x26a0
0x42e5: mov rbx,qword ptr [rip+0x223dbc]
0x42ec: lea rsi,[rip+0x1bbfd]
0x42f3: mov edx,0x5
0x42f8: xor edi,edi
0x42fa: call 0x2510
0x42ff: mov rsi,rbx
0x4302: mov rdi,rax
0x4305: call 0x26a0
0x430a: mov rbx,qword ptr [rip+0x223d97]
0x4311: lea rsi,[rip+0x1bc28]
0x4318: mov edx,0x5
0x431d: xor edi,edi
0x431f: call 0x2510
0x4324: mov rsi,rbx
0x4327: mov rdi,rax
0x432a: call 0x26a0
0x432f: mov rbx,qword ptr [rip+0x223d72]
0x4336: lea rsi,[rip+0x1bdc3]
0x433d: mov edx,0x5
0x4342: xor edi,edi
0x4344: call 0x2510
0x4349: mov rsi,rbx
0x434c: mov rdi,rax
0x434f: call 0x26a0
0x4354: mov rbx,qword ptr [rip+0x223d4d]
0x435b: lea rsi,[rip+0x1c056]
0x4362: mov edx,0x5
0x4367: xor edi,edi
0x4369: call 0x2510
0x436e: mov rsi,rbx
0x4371: mov rdi,rax
0x4374: call 0x26a0
0x4379: mov rbx,qword ptr [rip+0x223d28]
0x4380: lea rsi,[rip+0x1c1d9]
0x4387: mov edx,0x5
0x438c: xor edi,edi
0x438e: call 0x2510
0x4393: mov rsi,rbx
0x4396: mov rdi,rax
0x4399: call 0x26a0
0x439e: mov rbx,qword ptr [rip+0x223d03]
0x43a5: lea rsi,[rip+0x1c284]
0x43ac: mov edx,0x5
0x43b1: xor edi,edi
0x43b3: call 0x2510
0x43b8: mov rsi,rbx
0x43bb: mov rdi,rax
0x43be: call 0x26a0
0x43c3: mov rbx,qword ptr [rip+0x223cde]
0x43ca: lea rsi,[rip+0x1c37f]
0x43d1: mov edx,0x5
0x43d6: xor edi,edi
0x43d8: call 0x2510
0x43dd: mov rsi,rbx
0x43e0: mov rdi,rax
0x43e3: call 0x26a0
0x43e8: mov rbx,qword ptr [rip+0x223cb9]
0x43ef: lea rsi,[rip+0x1c5c2]
0x43f6: mov edx,0x5
0x43fb: xor edi,edi
0x43fd: call 0x2510
0x4402: mov rsi,rbx
0x4405: mov rdi,rax
0x4408: call 0x26a0
0x440d: mov rbx,qword ptr [rip+0x223c94]
0x4414: lea rsi,[rip+0x1c66d]
0x441b: mov edx,0x5
0x4420: xor edi,edi
0x4422: call 0x2510
0x4427: mov rsi,rbx
0x442a: mov rdi,rax
0x442d: call 0x26a0
0x4432: mov rbx,qword ptr [rip+0x223c6f]
0x4439: lea rsi,[rip+0x1c678]
0x4440: mov edx,0x5
0x4445: xor edi,edi
0x4447: call 0x2510
0x444c: mov rsi,rbx
0x444f: mov rdi,rax
0x4452: call 0x26a0
0x4457: lea rsi,[rip+0x1c692]
0x445e: mov edx,0x5
0x4463: xor edi,edi
0x4465: call 0x2510
0x446a: lea rdx,[rip+0x1b61d]
0x4471: mov rsi,rax
0x4474: mov edi,0x1
0x4479: xor eax,eax
0x447b: call 0x2850
0x4480: mov rbx,qword ptr [rip+0x223c21]
0x4487: lea rsi,[rip+0x1c742]
0x448e: mov edx,0x5
0x4493: xor edi,edi
0x4495: call 0x2510
0x449a: mov rsi,rbx
0x449d: mov rdi,rax
0x44a0: lea rbx,[rip+0x1b5e4]
0x44a7: call 0x26a0
0x44ac: lea rax,[rip+0x1b5de]
0x44b3: lea rcx,[rip+0x1b618]
0x44ba: mov qword ptr [rsp+0x60],0x0
0x44c3: mov qword ptr [rsp+0x68],0x0
0x44cc: mov rdx,rsp
0x44cf: mov qword ptr [rsp],rax
0x44d3: lea rax,[rip+0x1b5b9]
0x44da: mov qword ptr [rsp+0x30],rcx
0x44df: lea rcx,[rip+0x1b5f6]
0x44e6: mov qword ptr [rsp+0x8],rax
0x44eb: lea rax,[rip+0x1b619]
0x44f2: mov qword ptr [rsp+0x40],rcx
0x44f7: lea rcx,[rip+0x1b5e8]
0x44fe: mov qword ptr [rsp+0x10],rax
0x4503: lea rax,[rip+0x1b599]
0x450a: mov qword ptr [rsp+0x50],rcx
0x450f: mov qword ptr [rsp+0x18],rax
0x4514: lea rax,[rip+0x1b59e]
0x451b: mov qword ptr [rsp+0x20],rax
0x4520: lea rax,[rip+0x1b59c]
0x4527: mov qword ptr [rsp+0x28],rax
0x452c: mov qword ptr [rsp+0x38],rax
0x4531: mov qword ptr [rsp+0x48],rax
0x4536: mov qword ptr [rsp+0x58],rax
0x453b: nop dword ptr [rax+rax]
0x4540: add rdx,0x10
0x4544: mov rdi,qword ptr [rdx]
0x4547: test rdi,rdi
0x454a: je 0x455f
0x454c: mov ecx,0x3
0x4551: mov rsi,rbx
0x4554: rep cmpsb [rsi],es:[rdi]
0x4556: seta al
0x4559: sbb al,0x0
0x455b: test al,al
0x455d: jne 0x4540
0x455f: mov r12,qword ptr [rdx+0x8]
0x4563: xor edi,edi
0x4565: mov edx,0x5
0x456a: lea rsi,[rip+0x1b57f]
0x4571: test r12,r12
0x4574: je 0x463b
0x457a: call 0x2510
0x457f: lea rcx,[rip+0x1c722]
0x4586: lea rdx,[rip+0x1b57a]
0x458d: mov rsi,rax
0x4590: mov edi,0x1
0x4595: xor eax,eax
0x4597: call 0x2850
0x459c: xor esi,esi
0x459e: mov edi,0x5
0x45a3: call 0x2840
0x45a8: test rax,rax
0x45ab: je 0x45c9
0x45ad: lea rsi,[rip+0x1b561]
0x45b4: mov edx,0x3
0x45b9: mov rdi,rax
0x45bc: call 0x2420
0x45c1: test eax,eax
0x45c3: jne 0x46d0
0x45c9: lea rsi,[rip+0x1b549]
0x45d0: xor edi,edi
0x45d2: mov edx,0x5
0x45d7: call 0x2510
0x45dc: lea rcx,[rip+0x1b4a8]
0x45e3: lea rdx,[rip+0x1c6be]
0x45ea: mov rsi,rax
0x45ed: mov edi,0x1
0x45f2: xor eax,eax
0x45f4: call 0x2850
0x45f9: cmp r12,rbx
0x45fc: lea rcx,[rip+0x1b4aa]
0x4603: lea rbx,[rip+0x1d9d7]
0x460a: cmove rbx,rcx
0x460e: lea rsi,[rip+0x1c703]
0x4615: xor edi,edi
0x4617: mov edx,0x5
0x461c: call 0x2510
0x4621: mov rcx,rbx
0x4624: mov rsi,rax
0x4627: mov rdx,r12
0x462a: mov edi,0x1
0x462f: xor eax,eax
0x4631: call 0x2850
0x4636: jmp 0x4296
0x463b: call 0x2510
0x4640: lea rcx,[rip+0x1c661]
0x4647: lea rdx,[rip+0x1b4b9]
0x464e: mov rsi,rax
0x4651: mov edi,0x1
0x4656: xor eax,eax
0x4658: call 0x2850
0x465d: xor esi,esi
0x465f: mov edi,0x5
0x4664: call 0x2840
0x4669: test rax,rax
0x466c: je 0x4686
0x466e: lea rsi,[rip+0x1b4a0]
0x4675: mov edx,0x3
0x467a: mov rdi,rax
0x467d: call 0x2420
0x4682: test eax,eax
0x4684: jne 0x46c9
0x4686: lea rsi,[rip+0x1b48c]
0x468d: mov edx,0x5
0x4692: xor edi,edi
0x4694: lea r12,[rip+0x1b3f0]
0x469b: lea rbx,[rip+0x1b40b]
0x46a2: call 0x2510
0x46a7: lea rcx,[rip+0x1b3dd]
0x46ae: lea rdx,[rip+0x1c5f3]
0x46b5: mov rsi,rax
0x46b8: mov edi,0x1
0x46bd: xor eax,eax
0x46bf: call 0x2850
0x46c4: jmp 0x460e
0x46c9: lea r12,[rip+0x1b3bb]
0x46d0: mov r13,qword ptr [rip+0x2239d1]
0x46d7: lea rsi,[rip+0x1c5f2]
0x46de: xor edi,edi
0x46e0: mov edx,0x5
0x46e5: call 0x2510
0x46ea: mov rsi,r13
0x46ed: mov rdi,rax
0x46f0: call 0x26a0
0x46f5: jmp 0x45c9
0x4700: mov edi,0x1
0x4705: jmp 0x4240
0x4863: mov rdx,r12
0x4866: mov rbp,rax
0x4869: mov esi,0x8
0x486e: xor edi,edi
0x4870: call 0xbf70
0x4875: mov r8,rbp
0x4878: mov rdx,rbx
0x487b: mov rcx,rax
0x487e: pop rbx
0x487f: pop rbp
0x4880: pop r12
0x4882: xor esi,esi
0x4884: xor edi,edi
0x4886: xor eax,eax
0x4888: jmp 0x28a0
0x48b0: push r15
0x48b2: push r14
0x48b4: mov r14,rdi
0x48b7: push r13
0x48b9: push r12
0x48bb: xor edi,edi
0x48bd: push rbp
0x48be: push rbx
0x48bf: mov rbp,rsi
0x48c2: lea rsi,[rip+0x1cba8]
0x48c9: mov r12,rdx
0x48cc: mov edx,0x5
0x48d1: sub rsp,0x8
0x48d5: mov rbx,qword ptr [rip+0x223804]
0x48dc: call 0x2510
0x48e1: mov rdi,rax
0x48e4: mov rsi,rbx
0x48e7: call 0x26a0
0x48ec: mov r15,qword ptr [r14]
0x48ef: test r15,r15
0x48f2: je 0x4988
0x48f8: xor r13d,r13d
0x48fb: xor ebx,ebx
0x48fd: jmp 0x4938
0x4900: mov rdi,r15
0x4903: add rbx,0x1
0x4907: mov r13,rbp
0x490a: call 0xc360
0x490f: mov rdi,qword ptr [rip+0x2237ca]
0x4916: lea rdx,[rip+0x1cb69]
0x491d: mov rcx,rax
0x4920: mov esi,0x1
0x4925: xor eax,eax
0x4927: add rbp,r12
0x492a: call 0x2970
0x492f: mov r15,qword ptr [r14+rbx*8]
0x4933: test r15,r15
0x4936: je 0x4988
0x4938: test rbx,rbx
0x493b: je 0x4900
0x493d: mov rdx,r12
0x4940: mov rsi,rbp
0x4943: mov rdi,r13
0x4946: call 0x2680
0x494b: test eax,eax
0x494d: jne 0x4900
0x494f: mov rdi,r15
0x4952: add rbx,0x1
0x4956: add rbp,r12
0x4959: call 0xc360
0x495e: mov rdi,qword ptr [rip+0x22377b]
0x4965: lea rdx,[rip+0x1cb22]
0x496c: mov rcx,rax
0x496f: mov esi,0x1
0x4974: xor eax,eax
0x4976: call 0x2970
0x497b: mov r15,qword ptr [r14+rbx*8]
0x497f: test r15,r15
0x4982: jne 0x4938
0x4984: nop dword ptr [rax]
0x4988: mov rdi,qword ptr [rip+0x223751]
0x498f: mov rax,qword ptr [rdi+0x28]
0x4993: cmp rax,qword ptr [rdi+0x30]
0x4997: jae 0x49b8
0x4999: lea rdx,[rax+0x1]
0x499d: mov qword ptr [rdi+0x28],rdx
0x49a1: mov byte ptr [rax],0xa
0x49a4: add rsp,0x8
0x49a8: pop rbx
0x49a9: pop rbp
0x49aa: pop r12
0x49ac: pop r13
0x49ae: pop r14
0x49b0: pop r15
0x49b2: ret 
0x49b8: add rsp,0x8
0x49bc: mov esi,0xa
0x49c1: pop rbx
0x49c2: pop rbp
0x49c3: pop r12
0x49c5: pop r13
0x49c7: pop r14
0x49c9: pop r15
0x49cb: jmp 0x25c0
0x4a23: mov rdx,r15
0x4a26: mov rsi,rbp
0x4a29: mov rdi,rbx
0x4a2c: call 0x48b0
0x4a31: call r13
0x4a34: mov rax,-0x1
0x4a3b: jmp 0x4a06
0x4a40: push r14
0x4a42: push r13
0x4a44: push r12
0x4a46: push rbp
0x4a47: push rbx
0x4a48: mov r14,qword ptr [rsi]
0x4a4b: test r14,r14
0x4a4e: je 0x4a81
0x4a50: mov r12,rcx
0x4a53: mov r13,rdi
0x4a56: mov rbp,rdx
0x4a59: lea rbx,[rsi+0x8]
0x4a5d: jmp 0x4a6f
0x4a60: mov r14,qword ptr [rbx]
0x4a63: add rbp,r12
0x4a66: add rbx,0x8
0x4a6a: test r14,r14
0x4a6d: je 0x4a81
0x4a6f: mov rdx,r12
0x4a72: mov rsi,rbp
0x4a75: mov rdi,r13
0x4a78: call 0x2680
0x4a7d: test eax,eax
0x4a7f: jne 0x4a60
0x4a81: pop rbx
0x4a82: mov rax,r14
0x4a85: pop rbp
0x4a86: pop r12
0x4a88: pop r13
0x4a8a: pop r14
0x4a8c: ret 
0x4bd0: mov qword ptr [rip+0x2235d1],rdi
0x4bd7: ret 
0x4be0: mov byte ptr [rip+0x2235b9],dil
0x4be7: ret 
0x4bf0: push rbp
0x4bf1: push rbx
0x4bf2: sub rsp,0x8
0x4bf6: mov rdi,qword ptr [rip+0x2234ab]
0x4bfd: call 0x1f320
0x4c02: test eax,eax
0x4c04: je 0x4c1c
0x4c06: call 0x2410
0x4c0b: cmp byte ptr [rip+0x22358e],0x0
0x4c12: mov rbx,rax
0x4c15: je 0x4c33
0x4c17: cmp dword ptr [rax],0x20
0x4c1a: jne 0x4c33
0x4c1c: mov rdi,qword ptr [rip+0x2234bd]
0x4c23: call 0x1f320
0x4c28: test eax,eax
0x4c2a: jne 0x4c72
0x4c2c: add rsp,0x8
0x4c30: pop rbx
0x4c31: pop rbp
0x4c32: ret 
0x4c33: lea rsi,[rip+0x1c859]
0x4c3a: xor edi,edi
0x4c3c: mov edx,0x5
0x4c41: call 0x2510
0x4c46: mov rdi,qword ptr [rip+0x22355b]
0x4c4d: mov rbp,rax
0x4c50: test rdi,rdi
0x4c53: je 0x4c7d
0x4c55: call 0xc160
0x4c5a: mov esi,dword ptr [rbx]
0x4c5c: lea rdx,[rip+0x1c83c]
0x4c63: mov rcx,rax
0x4c66: mov r8,rbp
0x4c69: xor edi,edi
0x4c6b: xor eax,eax
0x4c6d: call 0x28a0
0x4c72: mov edi,dword ptr [rip+0x2233b0]
0x4c78: call 0x2440
0x4c7d: mov esi,dword ptr [rbx]
0x4c7f: lea rdx,[rip+0x1c80a]
0x4c86: mov rcx,rax
0x4c89: xor edi,edi
0x4c8b: xor eax,eax
0x4c8d: call 0x28a0
0x4c92: jmp 0x4c72
0x4cc0: mov rax,rdi
0x4cc3: xor edx,edx
0x4cc5: div rsi
0x4cc8: mov rax,rdx
0x4ccb: ret 
0x4cd0: push rbx
0x4cd1: mov rbx,rdi
0x4cd4: mov rdi,qword ptr [rdi+0x8]
0x4cd8: call 0x87b0
0x4cdd: mov rdi,rbx
0x4ce0: pop rbx
0x4ce1: jmp 0x2a10
0x4d68: nop dword ptr [rax+rax]
0x4d98: mov qword ptr [rbx+0x8],rax
0x4d9c: add rsp,0x10
0x4da0: pop rbx
0x4da1: pop rbp
0x4da2: pop r12
0x4da4: ret 
0x4dfc: test rax,rax
0x4dff: mov rdi,rax
0x4e02: mov qword ptr [rbx],rax
0x4e05: mov rsi,qword ptr [rsp+0x8]
0x4e0a: jne 0x4dd3
0x4e0c: add rsp,0x10
0x4e10: mov rax,-0x1
0x4e17: pop rbx
0x4e18: ret 
0x4f80: jmp qword ptr [rcx]
0x4f90: jmp 0x2a10
0x4fa0: sub rsp,0x8
0x4fa4: call 0x9f40
0x4fa9: test eax,eax
0x4fab: sete al
0x4fae: add rsp,0x8
0x4fb2: ret 
0x4fc0: sub rsp,0x8
0x4fc4: call 0x26d0
0x4fc9: test eax,eax
0x4fcb: sete al
0x4fce: add rsp,0x8
0x4fd2: ret 
0x4fe0: jmp 0x8500
0x4ff0: mov eax,edx
0x4ff2: and eax,0x10
0x4ff5: and edx,0x8
0x4ff8: jne 0x5008
0x4ffa: test eax,eax
0x4ffc: je 0x5050
0x4ffe: jmp 0x9f40
0x5008: push r12
0x500a: push rbp
0x500b: mov rbp,rdi
0x500e: push rbx
0x500f: mov rbx,rsi
0x5012: sub rsp,0x10
0x5016: test eax,eax
0x5018: jne 0x5058
0x501a: call 0x2530
0x501f: mov rsi,rbx
0x5022: mov rdx,rax
0x5025: mov rdi,rbp
0x5028: mov r12,rax
0x502b: call 0x2420
0x5030: test eax,eax
0x5032: jne 0x503f
0x5034: movsx edx,byte ptr [rbx+r12]
0x5039: cmp edx,0x2f
0x503c: cmovne eax,edx
0x503f: add rsp,0x10
0x5043: pop rbx
0x5044: pop rbp
0x5045: pop r12
0x5047: ret 
0x5050: jmp 0x26d0
0x5058: mov rdi,rsi
0x505b: call 0xcc10
0x5060: mov r12,rax
0x5063: mov rdi,rax
0x5066: jmp 0x5089
0x5070: mov byte ptr [rax],0x0
0x5073: mov rsi,r12
0x5076: mov rdi,rbp
0x5079: call 0x9f40
0x507e: test eax,eax
0x5080: jle 0x50a6
0x5082: lea rdi,[rbx+0x1]
0x5086: mov byte ptr [rbx],0x2f
0x5089: mov esi,0x2f
0x508e: call 0x25a0
0x5093: test rax,rax
0x5096: mov rbx,rax
0x5099: jne 0x5070
0x509b: mov rsi,r12
0x509e: mov rdi,rbp
0x50a1: call 0x9f40
0x50a6: mov rdi,r12
0x50a9: mov dword ptr [rsp+0xc],eax
0x50ad: call 0x2a10
0x50b2: mov eax,dword ptr [rsp+0xc]
0x50b6: add rsp,0x10
0x50ba: pop rbx
0x50bb: pop rbp
0x50bc: pop r12
0x50be: ret 
0x50c0: push r15
0x50c2: push r14
0x50c4: xor r14d,r14d
0x50c7: push r13
0x50c9: push r12
0x50cb: lea r12,[rip+0x1c96e]
0x50d2: push rbp
0x50d3: push rbx
0x50d4: mov rbx,rsi
0x50d7: sub rsp,0x68
0x50db: lea rbp,[rsp+0x10]
0x50e0: mov qword ptr [rsp+0x20],rdi
0x50e5: mov byte ptr [rsp+0x10],0x0
0x50ea: mov rax,qword ptr fs:0x28
0x50f3: mov qword ptr [rsp+0x58],rax
0x50f8: xor eax,eax
0x50fa: lea rax,[rbp+0x4]
0x50fe: mov qword ptr [rsp+0x14],0x0
0x5107: mov byte ptr [rsp+0x1c],0x0
0x510c: mov qword ptr [rsp+0x8],rax
0x5111: jmp 0x5146
0x5118: mov edi,r13d
0x511b: call 0x28e0
0x5120: mov rdx,r14
0x5123: cltq 
0x5125: add r15,qword ptr [rsp+0x28]
0x512a: shl rdx,0x5
0x512e: mov byte ptr [rsp+0x1c],0x0
0x5133: sub rdx,r14
0x5136: add rax,rdx
0x5139: xor edx,edx
0x513b: div rbx
0x513e: mov qword ptr [rsp+0x20],r15
0x5143: mov r14,rdx
0x5146: cmp byte ptr [rsp+0x10],0x0
0x514b: jne 0x51b7
0x514d: mov rcx,qword ptr [rsp+0x20]
0x5152: movzx edx,byte ptr [rcx]
0x5155: mov eax,edx
0x5157: shr al,0x5
0x515a: and eax,0x7
0x515d: mov eax,dword ptr [r12+rax*4]
0x5161: btl eax,edx
0x5164: jae 0x51a0
0x5166: mov qword ptr [rsp+0x28],0x1
0x516f: movsx r13d,byte ptr [rcx]
0x5173: mov byte ptr [rsp+0x30],0x1
0x5178: mov byte ptr [rsp+0x1c],0x1
0x517d: mov dword ptr [rsp+0x34],r13d
0x5182: test r13d,r13d
0x5185: je 0x5250
0x518b: cmp byte ptr [rsp+0x30],0x0
0x5190: mov r15,qword ptr [rsp+0x20]
0x5195: jne 0x5118
0x5197: movsx eax,byte ptr [r15]
0x519b: jmp 0x5120
0x51a0: mov rdi,qword ptr [rsp+0x8]
0x51a5: call 0x2990
0x51aa: test eax,eax
0x51ac: je 0x52e2
0x51b2: mov byte ptr [rsp+0x10],0x1
0x51b7: call 0x2520
0x51bc: mov r15,qword ptr [rsp+0x20]
0x51c1: mov rsi,rax
0x51c4: mov rdi,r15
0x51c7: call 0xc380
0x51cc: lea rcx,[rbp+0x4]
0x51d0: lea rdi,[rbp+0x24]
0x51d4: mov rdx,rax
0x51d7: mov rsi,r15
0x51da: call 0x101e0
0x51df: cmp rax,-0x1
0x51e3: mov qword ptr [rsp+0x28],rax
0x51e8: je 0x5280
0x51ee: cmp rax,-0x2
0x51f2: je 0x52a0
0x51f8: test rax,rax
0x51fb: jne 0x52d8
0x5201: mov rax,qword ptr [rsp+0x20]
0x5206: mov qword ptr [rsp+0x28],0x1
0x520f: cmp byte ptr [rax],0x0
0x5212: jne 0x5320
0x5218: mov r13d,dword ptr [rsp+0x34]
0x521d: test r13d,r13d
0x5220: jne 0x5301
0x5226: lea rdi,[rbp+0x4]
0x522a: mov byte ptr [rsp+0x30],0x1
0x522f: call 0x2990
0x5234: test eax,eax
0x5236: je 0x52c8
0x523c: test r13d,r13d
0x523f: mov byte ptr [rsp+0x10],0x0
0x5244: mov byte ptr [rsp+0x1c],0x1
0x5249: jne 0x518b
0x524f: nop 
0x5250: mov rsi,qword ptr [rsp+0x58]
0x5255: xor rsi,qword ptr fs:0x28
0x525e: mov rax,r14
0x5261: jne 0x533f
0x5267: add rsp,0x68
0x526b: pop rbx
0x526c: pop rbp
0x526d: pop r12
0x526f: pop r13
0x5271: pop r14
0x5273: pop r15
0x5275: ret 
0x5280: mov qword ptr [rsp+0x28],0x1
0x5289: mov byte ptr [rsp+0x30],0x0
0x528e: mov r13d,dword ptr [rsp+0x34]
0x5293: mov byte ptr [rsp+0x1c],0x1
0x5298: jmp 0x518b
0x52a0: mov rdi,qword ptr [rsp+0x20]
0x52a5: call 0x2530
0x52aa: mov byte ptr [rsp+0x30],0x0
0x52af: mov qword ptr [rsp+0x28],rax
0x52b4: mov r13d,dword ptr [rsp+0x34]
0x52b9: mov byte ptr [rsp+0x1c],0x1
0x52be: jmp 0x518b
0x52c8: mov byte ptr [rsp+0x1c],0x1
0x52cd: jmp 0x5182
0x52d8: mov r13d,dword ptr [rsp+0x34]
0x52dd: jmp 0x5226
0x52e2: lea rcx,[rip+0x1c427]
0x52e9: lea rsi,[rip+0x1c1b8]
0x52f0: lea rdi,[rip+0x1c1d1]
0x52f7: mov edx,0x96
0x52fc: call 0x2600
0x5301: lea rcx,[rip+0x1c408]
0x5308: lea rsi,[rip+0x1c199]
0x530f: lea rdi,[rip+0x1c1e0]
0x5316: mov edx,0xb3
0x531b: call 0x2600
0x5320: lea rcx,[rip+0x1c3e9]
0x5327: lea rsi,[rip+0x1c17a]
0x532e: lea rdi,[rip+0x1c1aa]
0x5335: mov edx,0xb2
0x533a: call 0x2600
0x533f: call 0x2560
0x5344: nop 
0x5346: nop word ptr cs:[rax+rax]
0x5350: push rbp
0x5351: push rbx
0x5352: mov rbx,rdi
0x5355: mov edi,0x10
0x535a: mov rbp,rsi
0x535d: sub rsp,0x8
0x5361: call 0xc9e0
0x5366: mov rdx,qword ptr [rbx+0x8]
0x536a: mov qword ptr [rax+0x8],rbp
0x536e: mov qword ptr [rbx+0x8],rax
0x5372: mov qword ptr [rax],rdx
0x5375: add rsp,0x8
0x5379: pop rbx
0x537a: pop rbp
0x537b: ret 
0x5380: movzx eax,byte ptr [rdi]
0x5383: mov r9d,esi
0x5386: mov r8d,esi
0x5389: lea rdx,[rip+0x1c180]
0x5390: and r9d,0x20
0x5394: and r8d,0x8000000
0x539b: and esi,0x2
0x539e: cmp al,0x7d
0x53a0: lea rcx,[rdi+0x1]
0x53a4: ja 0x53c8
0x53a6: movsxd rax,dword ptr [rdx+rax*4]
0x53aa: add rax,rdx
0x53ad: jmp rax
0x53c8: movzx eax,byte ptr [rdi+0x1]
0x53cc: mov rdi,rcx
0x53cf: jmp 0x539e
0x5420: push r14
0x5422: push r13
0x5424: mov r14,rdi
0x5427: push r12
0x5429: push rbp
0x542a: push rbx
0x542b: mov rbx,qword ptr [rdi]
0x542e: test rbx,rbx
0x5431: je 0x54aa
0x5433: nop dword ptr [rax+rax]
0x5438: mov eax,dword ptr [rbx+0x8]
0x543b: mov r13,qword ptr [rbx]
0x543e: test eax,eax
0x5440: je 0x54e8
0x5446: cmp eax,0x1
0x5449: jne 0x549a
0x544b: cmp qword ptr [rbx+0x20],0x0
0x5450: mov rdi,qword ptr [rbx+0x10]
0x5454: je 0x5495
0x5456: xor r12d,r12d
0x5459: xor ebp,ebp
0x545b: jmp 0x546e
0x5460: add rbp,0x1
0x5464: add r12,0x48
0x5468: cmp rbp,qword ptr [rbx+0x20]
0x546c: jae 0x5495
0x546e: lea rax,[rdi+r12]
0x5472: test dword ptr [rax],0x8000000
0x5478: je 0x5460
0x547a: lea rdi,[rax+0x8]
0x547e: add rbp,0x1
0x5482: add r12,0x48
0x5486: call 0x1ebe0
0x548b: cmp rbp,qword ptr [rbx+0x20]
0x548f: mov rdi,qword ptr [rbx+0x10]
0x5493: jb 0x546e
0x5495: call 0x2a10
0x549a: mov rdi,rbx
0x549d: mov rbx,r13
0x54a0: call 0x2a10
0x54a5: test r13,r13
0x54a8: jne 0x5438
0x54aa: mov rbx,qword ptr [r14+0x8]
0x54ae: test rbx,rbx
0x54b1: je 0x54d4
0x54b3: nop dword ptr [rax+rax]
0x54b8: mov rdi,qword ptr [rbx+0x8]
0x54bc: mov rbp,qword ptr [rbx]
0x54bf: call 0x2a10
0x54c4: mov rdi,rbx
0x54c7: mov rbx,rbp
0x54ca: call 0x2a10
0x54cf: test rbp,rbp
0x54d2: jne 0x54b8
0x54d4: pop rbx
0x54d5: mov rdi,r14
0x54d8: pop rbp
0x54d9: pop r12
0x54db: pop r13
0x54dd: pop r14
0x54df: jmp 0x2a10
0x54e8: mov rdi,qword ptr [rbx+0x10]
0x54ec: call 0x87b0
0x54f1: mov rdi,rbx
0x54f4: mov rbx,r13
0x54f7: call 0x2a10
0x54fc: test r13,r13
0x54ff: jne 0x5438
0x5505: jmp 0x54aa
0x564c: push rbx
0x5780: push r15
0x5782: push r14
0x5784: push r13
0x5786: push r12
0x5788: mov r13,rsi
0x578b: push rbp
0x578c: push rbx
0x578d: mov ebp,edx
0x578f: mov r12,rdi
0x5792: sub rsp,0x8
0x5796: and edx,0x18000000
0x579c: mov rbx,qword ptr [rdi]
0x579f: je 0x5880
0x57a5: mov esi,ebp
0x57a7: mov rdi,r13
0x57aa: call 0x5380
0x57af: test al,al
0x57b1: je 0x5880
0x57b7: test rbx,rbx
0x57ba: je 0x57c6
0x57bc: cmp dword ptr [rbx+0x8],0x1
0x57c0: je 0x59e8
0x57c6: mov edi,0x28
0x57cb: call 0xcb90
0x57d0: mov rbx,rax
0x57d3: mov dword ptr [rax+0x8],0x1
0x57da: mov dword ptr [rax+0xc],ebp
0x57dd: mov rax,qword ptr [r12]
0x57e1: mov qword ptr [r12],rbx
0x57e5: mov qword ptr [rbx],rax
0x57e8: mov rcx,qword ptr [rbx+0x20]
0x57ec: cmp rcx,qword ptr [rbx+0x18]
0x57f0: mov rdi,qword ptr [rbx+0x10]
0x57f4: je 0x5a00
0x57fa: lea rax,[rcx+rcx*8]
0x57fe: lea r15,[rcx+0x1]
0x5802: test ebp,0x8000000
0x5808: lea r14,[rdi+rax*8]
0x580c: mov qword ptr [rbx+0x20],r15
0x5810: mov dword ptr [r14],ebp
0x5813: je 0x59a0
0x5819: mov r12d,ebp
0x581c: sar r12d,0x3
0x5820: and r12d,0x2
0x5824: or r12d,0x9
0x5828: and ebp,0x8
0x582b: je 0x5a70
0x5831: mov rdi,r13
0x5834: call 0x2530
0x5839: test rax,rax
0x583c: je 0x5868
0x583e: cmp byte ptr [r13+rax-0x1],0x2f
0x5844: lea rbp,[rax-0x1]
0x5848: je 0x5863
0x584a: jmp 0x5a92
0x5850: cmp byte ptr [r13+rbp-0x1],0x2f
0x5856: lea rax,[rbp-0x1]
0x585a: jne 0x5a98
0x5860: mov rbp,rax
0x5863: test rbp,rbp
0x5866: jne 0x5850
0x5868: lea rax,[r15-0x1]
0x586c: mov qword ptr [rbx+0x20],rax
0x5870: add rsp,0x8
0x5874: pop rbx
0x5875: pop rbp
0x5876: pop r12
0x5878: pop r13
0x587a: pop r14
0x587c: pop r15
0x587e: ret 
0x5880: test rbx,rbx
0x5883: je 0x5890
0x5885: mov edx,dword ptr [rbx+0x8]
0x5888: test edx,edx
0x588a: je 0x5938
0x5890: mov edi,0x28
0x5895: call 0xcb90
0x589a: lea rdx,[rip-0x901]
0x58a1: mov rbx,rax
0x58a4: mov dword ptr [rax+0x8],0x0
0x58ab: mov dword ptr [rax+0xc],ebp
0x58ae: lea rcx,[rip-0x8f5]
0x58b5: mov eax,ebp
0x58b7: and eax,0x10
0x58ba: lea rax,[rip-0x801]
0x58c1: lea r8,[rip-0x938]
0x58c8: cmovne rcx,rdx
0x58cc: lea rdx,[rip-0x8f3]
0x58d3: cmovne rdx,rax
0x58d7: xor esi,esi
0x58d9: xor edi,edi
0x58db: call 0x8560
0x58e0: mov qword ptr [rbx+0x10],rax
0x58e4: mov rax,qword ptr [r12]
0x58e8: mov qword ptr [r12],rbx
0x58ec: mov qword ptr [rbx],rax
0x58ef: mov rdi,r13
0x58f2: and ebp,0x10000002
0x58f8: call 0xcc10
0x58fd: cmp ebp,0x10000000
0x5903: mov r12,rax
0x5906: je 0x5950
0x5908: mov rdi,qword ptr [rbx+0x10]
0x590c: mov rsi,r12
0x590f: call 0x8d60
0x5914: cmp r12,rax
0x5917: je 0x5870
0x591d: add rsp,0x8
0x5921: mov rdi,r12
0x5924: pop rbx
0x5925: pop rbp
0x5926: pop r12
0x5928: pop r13
0x592a: pop r14
0x592c: pop r15
0x592e: jmp 0x2a10
0x5938: mov eax,dword ptr [rbx+0xc]
0x593b: xor eax,ebp
0x593d: test eax,0x60000018
0x5942: je 0x58ef
0x5944: jmp 0x5890
0x5950: mov rdx,rax
0x5953: mov rcx,rax
0x5956: jmp 0x596e
0x5960: add rcx,0x1
0x5964: test al,al
0x5966: mov byte ptr [rcx-0x1],al
0x5969: je 0x5908
0x596b: mov rdx,rsi
0x596e: movzx eax,byte ptr [rdx]
0x5971: lea rsi,[rdx+0x1]
0x5975: cmp al,0x5c
0x5977: jne 0x5960
0x5979: cmp byte ptr [rdx+0x1],0x0
0x597d: je 0x5990
0x597f: movzx eax,byte ptr [rdx+0x1]
0x5983: lea rsi,[rdx+0x2]
0x5987: jmp 0x5960
0x5990: add rcx,0x1
0x5994: mov byte ptr [rcx-0x1],0x5c
0x5998: jmp 0x596b
0x59a0: and ebp,0x4000000
0x59a6: je 0x59ce
0x59a8: mov rdi,r13
0x59ab: call 0xcc10
0x59b0: mov edi,0x10
0x59b5: mov r13,rax
0x59b8: call 0xc9e0
0x59bd: mov rdx,qword ptr [r12+0x8]
0x59c2: mov qword ptr [rax+0x8],r13
0x59c6: mov qword ptr [r12+0x8],rax
0x59cb: mov qword ptr [rax],rdx
0x59ce: mov qword ptr [r14+0x8],r13
0x59d2: add rsp,0x8
0x59d6: pop rbx
0x59d7: pop rbp
0x59d8: pop r12
0x59da: pop r13
0x59dc: pop r14
0x59de: pop r15
0x59e0: ret 
0x59e8: mov eax,dword ptr [rbx+0xc]
0x59eb: xor eax,ebp
0x59ed: test eax,0x20000000
0x59f2: je 0x57e8
0x59f8: jmp 0x57c6
0x5a00: test rdi,rdi
0x5a03: je 0x5a40
0x5a05: movabsq rax,0x12f684bda12f683
0x5a0f: cmp rcx,rax
0x5a12: ja 0x5a69
0x5a14: mov rax,rcx
0x5a17: shr rax, 1
0x5a1a: lea rcx,[rcx+rax+0x1]
0x5a1f: lea rsi,[rcx+rcx*8]
0x5a23: mov qword ptr [rbx+0x18],rcx
0x5a27: shl rsi,0x3
0x5a2b: call 0xca40
0x5a30: mov rcx,qword ptr [rbx+0x20]
0x5a34: mov rdi,rax
0x5a37: mov qword ptr [rbx+0x10],rax
0x5a3b: jmp 0x57fa
0x5a40: test rcx,rcx
0x5a43: mov eax,0x1
0x5a48: mov edx,0x48
0x5a4d: cmove rcx,rax
0x5a51: mov rax,rdx
0x5a54: xor esi,esi
0x5a56: mul rcx
0x5a59: jo 0x5ae4
0x5a5f: test rax,rax
0x5a62: js 0x5a69
0x5a64: test rsi,rsi
0x5a67: je 0x5a1f
0x5a69: call 0xcc30
0x5a6e: nop 
0x5a70: lea rdi,[r14+0x8]
0x5a74: mov edx,r12d
0x5a77: mov rsi,r13
0x5a7a: call 0x1ea40
0x5a7f: mov ebp,eax
0x5a81: test ebp,ebp
0x5a83: je 0x5870
0x5a89: mov r15,qword ptr [rbx+0x20]
0x5a8d: jmp 0x5868
0x5a92: mov rbp,rax
0x5a95: nop dword ptr [rax]
0x5a98: lea rdi,[rbp+0x7]
0x5a9c: call 0xc9e0
0x5aa1: mov rdx,rbp
0x5aa4: mov r15,rax
0x5aa7: mov rsi,r13
0x5aaa: mov rdi,rax
0x5aad: add rbp,r15
0x5ab0: call 0x2710
0x5ab5: lea rdi,[r14+0x8]
0x5ab9: mov eax,0x3f29
0x5abe: mov dword ptr [rbp],0x2a2e2f28
0x5ac5: mov word ptr [rbp+0x4],ax
0x5ac9: mov byte ptr [rbp+0x6],0x0
0x5acd: mov edx,r12d
0x5ad0: mov rsi,r15
0x5ad3: call 0x1ea40
0x5ad8: mov rdi,r15
0x5adb: mov ebp,eax
0x5add: call 0x2a10
0x5ae2: jmp 0x5a81
0x5ae4: mov esi,0x1
0x5ae9: jmp 0x5a5f
0x5af0: push r15
0x5af2: push r14
0x5af4: mov r15,rdx
0x5af7: push r13
0x5af9: push r12
0x5afb: mov r13,rsi
0x5afe: push rbp
0x5aff: push rbx
0x5b00: mov ebp,r8d
0x5b03: xor r14d,r14d
0x5b06: xor ebx,ebx
0x5b08: sub rsp,0x48
0x5b0c: mov rax,qword ptr fs:0x28
0x5b15: mov qword ptr [rsp+0x38],rax
0x5b1a: xor eax,eax
0x5b1c: lea rax,[rsp+0x30]
0x5b21: mov qword ptr [rsp+0x8],rdi
0x5b26: mov dword ptr [rsp+0x18],ecx
0x5b2a: mov dword ptr [rsp+0x20],r8d
0x5b2f: mov qword ptr [rsp+0x10],r9
0x5b34: mov qword ptr [rsp+0x30],0x0
0x5b3d: mov qword ptr [rsp],rax
0x5b41: jmp 0x5b50
0x5b48: mov byte ptr [rbx+r14],r12b
0x5b4c: add r14,0x1
0x5b50: mov rax,qword ptr [r15+0x8]
0x5b54: cmp rax,qword ptr [r15+0x10]
0x5b58: jae 0x5b80
0x5b5a: lea rdx,[rax+0x1]
0x5b5e: mov qword ptr [r15+0x8],rdx
0x5b62: movzx r12d,byte ptr [rax]
0x5b66: cmp qword ptr [rsp+0x30],r14
0x5b6b: jne 0x5b48
0x5b6d: mov rsi,qword ptr [rsp]
0x5b71: mov rdi,rbx
0x5b74: call 0xcb40
0x5b79: mov rbx,rax
0x5b7c: jmp 0x5b48
0x5b80: mov rdi,r15
0x5b83: call 0x23d0
0x5b88: cmp eax,-0x1
0x5b8b: mov r12d,eax
0x5b8e: jne 0x5b66
0x5b90: mov r12d,dword ptr [r15]
0x5b93: call 0x2410
0x5b98: mov dword ptr [rsp+0x1c],0x0
0x5ba0: mov qword ptr [rsp+0x28],rax
0x5ba5: and r12d,0x20
0x5ba9: test r12d,r12d
0x5bac: je 0x5bbf
0x5bae: mov r12d,dword ptr [rax]
0x5bb1: xor eax,eax
0x5bb3: test r12d,r12d
0x5bb6: setne al
0x5bb9: neg eax
0x5bbb: mov dword ptr [rsp+0x1c],eax
0x5bbf: lea rsi,[r14+0x1]
0x5bc3: mov rdi,rbx
0x5bc6: call 0xca40
0x5bcb: mov r15,rax
0x5bce: mov eax,dword ptr [rsp+0x20]
0x5bd2: test r14,r14
0x5bd5: mov byte ptr [r15+r14],al
0x5bd9: je 0x5ca0
0x5bdf: xor ebx,ebx
0x5be1: cmp byte ptr [r15+r14-0x1],al
0x5be6: mov edi,0x10
0x5beb: setne bl
0x5bee: add rbx,r14
0x5bf1: call 0xc9e0
0x5bf6: mov rcx,qword ptr [r13+0x8]
0x5bfa: add rbx,r15
0x5bfd: mov qword ptr [rax+0x8],r15
0x5c01: cmp r15,rbx
0x5c04: mov qword ptr [r13+0x8],rax
0x5c08: mov qword ptr [rax],rcx
0x5c0b: jae 0x5c6f
0x5c0d: movzx eax,bpl
0x5c11: mov rsi,r15
0x5c14: mov qword ptr [rsp+0x20],rax
0x5c19: jmp 0x5c28
0x5c20: cmp rbx,r14
0x5c23: mov r15,r14
0x5c26: je 0x5c6f
0x5c28: cmp byte ptr [r15],bpl
0x5c2b: lea r14,[r15+0x1]
0x5c2f: jne 0x5c20
0x5c31: mov qword ptr [rsp],rsi
0x5c35: call 0x29f0
0x5c3a: mov rcx,qword ptr [rsp+0x20]
0x5c3f: mov rax,qword ptr [rax]
0x5c42: mov rsi,qword ptr [rsp]
0x5c46: test byte ptr [rax+rcx*2+0x1],0x20
0x5c4b: jne 0x5cc0
0x5c4d: mov byte ptr [r15],0x0
0x5c51: mov rcx,qword ptr [rsp+0x10]
0x5c56: mov rdi,r13
0x5c59: mov edx,dword ptr [rsp+0x18]
0x5c5d: mov rax,qword ptr [rsp+0x8]
0x5c62: call rax
0x5c64: cmp rbx,r14
0x5c67: mov rsi,r14
0x5c6a: mov r15,r14
0x5c6d: jne 0x5c28
0x5c6f: mov rax,qword ptr [rsp+0x28]
0x5c74: mov rdi,qword ptr [rsp+0x38]
0x5c79: xor rdi,qword ptr fs:0x28
0x5c82: mov dword ptr [rax],r12d
0x5c85: mov eax,dword ptr [rsp+0x1c]
0x5c89: jne 0x5cfe
0x5c8b: add rsp,0x48
0x5c8f: pop rbx
0x5c90: pop rbp
0x5c91: pop r12
0x5c93: pop r13
0x5c95: pop r14
0x5c97: pop r15
0x5c99: ret 
0x5ca0: mov edi,0x10
0x5ca5: call 0xc9e0
0x5caa: mov rdx,qword ptr [r13+0x8]
0x5cae: mov qword ptr [rax+0x8],r15
0x5cb2: mov qword ptr [r13+0x8],rax
0x5cb6: mov qword ptr [rax],rdx
0x5cb9: jmp 0x5c6f
0x5cc0: cmp r15,rsi
0x5cc3: je 0x5c64
0x5cc5: movzx ecx,byte ptr [r14-0x2]
0x5cca: test byte ptr [rax+rcx*2+0x1],0x20
0x5ccf: jne 0x5cf0
0x5cd1: jmp 0x5c4d
0x5ce0: movzx ecx,byte ptr [r15-0x1]
0x5ce5: test byte ptr [rax+rcx*2+0x1],0x20
0x5cea: je 0x5c4d
0x5cf0: sub r15,0x1
0x5cf4: cmp r15,rsi
0x5cf7: jne 0x5ce0
0x5cf9: jmp 0x5c64
0x5cfe: call 0x2560
0x5d03: nop dword ptr [rax]
0x5d06: nop word ptr cs:[rax+rax]
0x5d10: push r12
0x5d12: push rbp
0x5d13: mov r12d,r8d
0x5d16: push rbx
0x5d17: mov rbp,rsi
0x5d1a: sub rsp,0x10
0x5d1e: cmp byte ptr [rdx],0x2d
0x5d21: mov qword ptr [rsp+0x8],rdi
0x5d26: je 0x5d80
0x5d28: lea rsi,[rip+0x1cae8]
0x5d2f: mov rdi,rdx
0x5d32: mov dword ptr [rsp+0x4],ecx
0x5d36: call 0x28d0
0x5d3b: test rax,rax
0x5d3e: mov rbx,rax
0x5d41: mov ecx,dword ptr [rsp+0x4]
0x5d45: je 0x5db0
0x5d47: lea r9,[rsp+0x8]
0x5d4c: lea rdi,[rip-0xdd3]
0x5d53: mov rsi,rbp
0x5d56: movsx r8d,r12b
0x5d5a: mov rdx,rax
0x5d5d: call 0x5af0
0x5d62: mov rdi,rbx
0x5d65: mov ebp,eax
0x5d67: call 0xdca0
0x5d6c: test eax,eax
0x5d6e: jne 0x5db0
0x5d70: add rsp,0x10
0x5d74: mov eax,ebp
0x5d76: pop rbx
0x5d77: pop rbp
0x5d78: pop r12
0x5d7a: ret 
0x5d80: cmp byte ptr [rdx+0x1],0x0
0x5d84: jne 0x5d28
0x5d86: mov rdx,qword ptr [rip+0x222323]
0x5d8d: lea r9,[rsp+0x8]
0x5d92: lea rdi,[rip-0xe19]
0x5d99: movsx r8d,r8b
0x5d9d: call 0x5af0
0x5da2: add rsp,0x10
0x5da6: mov ebp,eax
0x5da8: mov eax,ebp
0x5daa: pop rbx
0x5dab: pop rbp
0x5dac: pop r12
0x5dae: ret 
0x5db0: mov ebp,0xffffffff
0x5db5: jmp 0x5d70
0x5dc0: test rdx,rdx
0x5dc3: je 0x5e10
0x5dc5: push r13
0x5dc7: push r12
0x5dc9: mov r12,rdi
0x5dcc: push rbp
0x5dcd: push rbx
0x5dce: mov rbp,rdx
0x5dd1: mov rbx,rsi
0x5dd4: sub rsp,0x8
0x5dd8: add rbp,rbx
0x5ddb: call 0x29e0
0x5de0: mov r13,rax
0x5de3: nop dword ptr [rax+rax]
0x5de8: movzx ecx,byte ptr [rbx]
0x5deb: mov rax,qword ptr [r13]
0x5def: mov rsi,r12
0x5df2: add rbx,0x1
0x5df6: mov edi,dword ptr [rax+rcx*4]
0x5df9: call 0x2660
0x5dfe: cmp rbx,rbp
0x5e01: jne 0x5de8
0x5e03: add rsp,0x8
0x5e07: pop rbx
0x5e08: pop rbp
0x5e09: pop r12
0x5e0b: pop r13
0x5e0d: ret 
0x5e10: rep ret 
0x6252: mov byte ptr [rax],r13b
0x6255: mov byte ptr [rax+0x1],0x0
0x6259: lea rax,[rsp+0xa0]
0x6261: mov rcx,qword ptr [rsp]
0x6265: mov esi,0x400
0x626a: mov dword ptr [rsp+0x40],r10d
0x626f: mov rdi,rax
0x6272: mov dword ptr [rsp+0x58],r11d
0x6277: mov qword ptr [rsp+0x38],rax
0x627c: call 0x2870
0x6281: test rax,rax
0x6284: je 0x5f90
0x628a: movsxd r10,dword ptr [rsp+0x40]
0x628f: lea r13,[rax-0x1]
0x6293: mov eax,0x0
0x6298: mov rdx,r15
0x629b: not rdx
0x629e: test r10d,r10d
0x62a1: cmovns rax,r10
0x62a5: cmp r13,rax
0x62a8: mov rdi,rax
0x62ab: cmovae rdi,r13
0x62af: cmp rdx,rdi
0x62b2: mov qword ptr [rsp+0x40],rdi
0x62b7: jbe 0x5f3f
0x62bd: test r12,r12
0x62c0: je 0x6343
0x62c6: mov r11d,dword ptr [rsp+0x58]
0x62cb: test r11d,r11d
0x62ce: jne 0x631b
0x62d0: cmp r13,rax
0x62d3: jae 0x631b
0x62d5: mov eax,dword ptr [rsp+0x8]
0x62d9: movsxd rbx,r10d
0x62dc: sub rbx,r13
0x62df: cmp eax,0x30
0x62e2: je 0x72f0
0x62e8: cmp eax,0x2b
0x62eb: je 0x72f0
0x62f1: xor edx,edx
0x62f3: test rbx,rbx
0x62f6: je 0x631b
0x62f8: mov qword ptr [rsp+0x8],rbp
0x62fd: mov rbp,rdx
0x6300: mov rsi,r12
0x6303: mov edi,0x20
0x6308: add rbp,0x1
0x630c: call 0x2660
0x6311: cmp rbx,rbp
0x6314: jne 0x6300
0x6316: mov rbp,qword ptr [rsp+0x8]
0x631b: test r14b,r14b
0x631e: jne 0x72b0
0x6324: cmp byte ptr [rsp+0x34],0x0
0x6329: je 0x7288
0x632f: mov rsi,qword ptr [rsp+0x38]
0x6334: mov rdx,r13
0x6337: mov rdi,r12
0x633a: add rsi,0x1
0x633e: call 0x5e20
0x6343: add r15,qword ptr [rsp+0x40]
0x6348: jmp 0x5f90
0x6465: cmp r11d,0x4f
0x6469: jne 0x7180
0x646f: test al,al
0x6471: je 0x7180
0x6477: mov r13d,edi
0x647a: mov edx,0x2520
0x647f: xor r14d,r14d
0x6482: mov word ptr [rsp+0x9b],dx
0x648a: lea rdx,[rsp+0x9b]
0x6492: mov byte ptr [rsp+0x9d],r11b
0x649a: mov rbp,rbx
0x649d: mov r11d,esi
0x64a0: lea rax,[rdx+0x3]
0x64a4: jmp 0x6252
0x655f: add r15,r13
0x6562: mov rbp,rbx
0x6565: jmp 0x5f90
0x6659: mov rax,qword ptr [rsp+0x38]
0x665e: mov rdx,r15
0x6661: not rdx
0x6664: add rax,0x17
0x6668: sub rax,r14
0x666b: cmp dword ptr [rsp+0x8],0x2d
0x6670: mov qword ptr [rsp+0x40],rax
0x6675: je 0x668a
0x6677: mov r13d,dword ptr [rsp+0x58]
0x667c: sub r13d,dword ptr [rsp+0x40]
0x6681: test r13d,r13d
0x6684: jg 0x77be
0x668a: test r10d,r10d
0x668d: mov ecx,0x0
0x6692: mov rbp,rbx
0x6695: cmovns ecx,r10d
0x6699: movsxd r13,ecx
0x669c: mov rax,qword ptr [rsp+0x40]
0x66a1: cmp rax,r13
0x66a4: mov rbx,rax
0x66a7: cmovb rbx,r13
0x66ab: cmp rbx,rdx
0x66ae: jae 0x5f3f
0x66b4: test r12,r12
0x66b7: je 0x672e
0x66b9: mov edx,dword ptr [rsp+0x58]
0x66bd: test edx,edx
0x66bf: jne 0x6713
0x66c1: cmp rax,r13
0x66c4: jae 0x6713
0x66c6: movsxd r13,r10d
0x66c9: sub r13,rax
0x66cc: mov eax,dword ptr [rsp+0x8]
0x66d0: cmp eax,0x30
0x66d3: je 0x73f0
0x66d9: cmp eax,0x2b
0x66dc: je 0x73f0
0x66e2: xor edx,edx
0x66e4: test r13,r13
0x66e7: je 0x6713
0x66e9: mov qword ptr [rsp+0x8],rbx
0x66ee: mov rbx,rdx
0x66f1: nop dword ptr [rax]
0x66f8: mov rsi,r12
0x66fb: mov edi,0x20
0x6700: add rbx,0x1
0x6704: call 0x2660
0x6709: cmp r13,rbx
0x670c: jne 0x66f8
0x670e: mov rbx,qword ptr [rsp+0x8]
0x6713: cmp byte ptr [rsp+0x34],0x0
0x6718: je 0x72d0
0x671e: mov rdx,qword ptr [rsp+0x40]
0x6723: mov rsi,r14
0x6726: mov rdi,r12
0x6729: call 0x5e20
0x672e: add r15,rbx
0x6731: jmp 0x5f90
0x6768: lea rax,[rsp+0xa0]
0x6770: lea rdi,[rsp+0xb7]
0x6778: mov r11d,0xcccccccd
0x677e: mov qword ptr [rsp+0x38],rax
0x6783: nop dword ptr [rax+rax]
0x6788: test r8b,0x1
0x678c: lea r14,[rdi-0x1]
0x6790: je 0x67a0
0x6792: lea rax,[rdi-0x2]
0x6796: mov byte ptr [rdi-0x1],0x3a
0x679a: mov rdi,r14
0x679d: mov r14,rax
0x67a0: mov eax,ecx
0x67a2: sar r8d, 1
0x67a5: mul r11d
0x67a8: shr edx,0x3
0x67ab: lea eax,[rdx+rdx*4]
0x67ae: add eax,eax
0x67b0: sub ecx,eax
0x67b2: mov eax,r8d
0x67b5: add ecx,0x30
0x67b8: or eax,edx
0x67ba: mov byte ptr [rdi-0x1],cl
0x67bd: mov ecx,edx
0x67bf: mov rdi,r14
0x67c2: jne 0x6788
0x67c4: cmp r10d,esi
0x67c7: cmovge esi,r10d
0x67cb: test r13b,r13b
0x67ce: mov dword ptr [rsp+0x58],esi
0x67d2: jne 0x7190
0x67d8: test r9b,r9b
0x67db: je 0x6659
0x67e1: cmp dword ptr [rsp+0x8],0x2d
0x67e6: mov ebp,0x2b
0x67eb: je 0x759d
0x67f1: mov rax,qword ptr [rsp+0x38]
0x67f6: mov rdx,r15
0x67f9: not rdx
0x67fc: add rax,0x17
0x6800: sub rax,r14
0x6803: mov rdi,rax
0x6806: mov qword ptr [rsp+0x40],rax
0x680b: mov eax,dword ptr [rsp+0x58]
0x680f: sub eax,0x1
0x6812: sub eax,edi
0x6814: test eax,eax
0x6816: mov r13d,eax
0x6819: jle 0x74e0
0x681f: cmp dword ptr [rsp+0x8],0x5f
0x6824: je 0x743c
0x682a: movsxd rax,dword ptr [rsp+0x58]
0x682f: cmp rax,rdx
0x6832: mov rdi,rax
0x6835: jae 0x5f3f
0x683b: test r10d,r10d
0x683e: mov eax,0x0
0x6843: mov ecx,0x1
0x6848: cmovns eax,r10d
0x684c: cltq 
0x684e: test rax,rax
0x6851: cmovne rcx,rax
0x6855: cmp rcx,rdx
0x6858: mov qword ptr [rsp+0x48],rcx
0x685d: jae 0x5f3f
0x6863: test r12,r12
0x6866: je 0x68cc
0x6868: test edi,edi
0x686a: jne 0x68c0
0x686c: cmp rax,0x1
0x6870: jbe 0x68c0
0x6872: mov edi,dword ptr [rsp+0x8]
0x6876: movsxd r10,r10d
0x6879: lea rax,[r10-0x1]
0x687d: cmp edi,0x30
0x6880: mov qword ptr [rsp+0x38],rax
0x6885: je 0x7990
0x688b: cmp edi,0x2b
0x688e: je 0x7990
0x6894: xor edx,edx
0x6896: test rax,rax
0x6899: je 0x68c0
0x689b: mov qword ptr [rsp+0x50],rbx
0x68a0: mov rbx,rdx
0x68a3: mov rsi,r12
0x68a6: mov edi,0x20
0x68ab: add rbx,0x1
0x68af: call 0x2660
0x68b4: cmp qword ptr [rsp+0x38],rbx
0x68b9: jne 0x68a3
0x68bb: mov rbx,qword ptr [rsp+0x50]
0x68c0: movsx edi,bpl
0x68c4: mov rsi,r12
0x68c7: call 0x2660
0x68cc: add r15,qword ptr [rsp+0x48]
0x68d1: mov rbp,rbx
0x68d4: movsxd rbx,r13d
0x68d7: xor r13d,r13d
0x68da: test r12,r12
0x68dd: je 0x68f6
0x68df: nop 
0x68e0: mov rsi,r12
0x68e3: mov edi,0x30
0x68e8: add r13,0x1
0x68ec: call 0x2660
0x68f1: cmp r13,rbx
0x68f4: jne 0x68e0
0x68f6: add r15,rbx
0x68f9: xor r13d,r13d
0x68fc: xor r10d,r10d
0x68ff: mov rdx,r15
0x6902: not rdx
0x6905: jmp 0x669c
0x6ab1: mov eax,0x1
0x6ab6: xor r13d,r13d
0x6ab9: cmp dword ptr [rsp+0x8],0x2b
0x6abe: je 0x7a5d
0x6ac4: xor r9d,r9d
0x6ac7: mov esi,0x2
0x6acc: xor r8d,r8d
0x6acf: jmp 0x6465
0x7180: mov eax,ecx
0x7182: neg eax
0x7184: test r13b,r13b
0x7187: cmovne ecx,eax
0x718a: jmp 0x6768
0x7190: cmp dword ptr [rsp+0x8],0x2d
0x7195: mov ebp,0x2d
0x719a: jne 0x67f1
0x71a0: mov byte ptr [rsp+0x40],0x2d
0x71a5: test r10d,r10d
0x71a8: mov ecx,0x0
0x71ad: mov eax,0x1
0x71b2: cmovns ecx,r10d
0x71b6: movsxd r13,ecx
0x71b9: test r13,r13
0x71bc: cmovne rax,r13
0x71c0: mov rdi,rax
0x71c3: mov qword ptr [rsp+0x8],rax
0x71c8: mov rax,r15
0x71cb: not rax
0x71ce: cmp rax,rdi
0x71d1: jbe 0x5f3f
0x71d7: test r12,r12
0x71da: je 0x7239
0x71dc: mov edi,dword ptr [rsp+0x58]
0x71e0: test edi,edi
0x71e2: jne 0x7222
0x71e4: cmp r13,0x1
0x71e8: jbe 0x7222
0x71ea: movsxd rax,r10d
0x71ed: sub rax,0x1
0x71f1: je 0x7222
0x71f3: mov qword ptr [rsp+0x48],rbx
0x71f8: xor ebp,ebp
0x71fa: mov rbx,rax
0x71fd: mov dword ptr [rsp+0x50],r10d
0x7202: mov rsi,r12
0x7205: mov edi,0x20
0x720a: add rbp,0x1
0x720e: call 0x2660
0x7213: cmp rbx,rbp
0x7216: jne 0x7202
0x7218: mov rbx,qword ptr [rsp+0x48]
0x721d: mov r10d,dword ptr [rsp+0x50]
0x7222: movsx edi,byte ptr [rsp+0x40]
0x7227: mov rsi,r12
0x722a: mov dword ptr [rsp+0x48],r10d
0x722f: call 0x2660
0x7234: mov r10d,dword ptr [rsp+0x48]
0x7239: add r15,qword ptr [rsp+0x8]
0x723e: mov rax,qword ptr [rsp+0x38]
0x7243: mov rbp,rbx
0x7246: mov dword ptr [rsp+0x8],0x2d
0x724e: add rax,0x17
0x7252: sub rax,r14
0x7255: mov rdx,r15
0x7258: mov qword ptr [rsp+0x40],rax
0x725d: not rdx
0x7260: jmp 0x669c
0x7288: mov rdi,qword ptr [rsp+0x38]
0x728d: mov rcx,r12
0x7290: mov edx,0x1
0x7295: mov rsi,r13
0x7298: add rdi,0x1
0x729c: call 0x2960
0x72a1: jmp 0x6343
0x72b0: mov rsi,qword ptr [rsp+0x38]
0x72b5: mov rdx,r13
0x72b8: mov rdi,r12
0x72bb: add rsi,0x1
0x72bf: call 0x5dc0
0x72c4: jmp 0x6343
0x72d0: mov rsi,qword ptr [rsp+0x40]
0x72d5: mov rcx,r12
0x72d8: mov edx,0x1
0x72dd: mov rdi,r14
0x72e0: call 0x2960
0x72e5: jmp 0x672e
0x72f0: test rbx,rbx
0x72f3: je 0x631b
0x72f9: xor edx,edx
0x72fb: mov qword ptr [rsp+0x8],rbp
0x7300: mov rbp,rdx
0x7303: nop dword ptr [rax+rax]
0x7308: mov rsi,r12
0x730b: mov edi,0x30
0x7310: add rbp,0x1
0x7314: call 0x2660
0x7319: cmp rbx,rbp
0x731c: jne 0x7308
0x731e: jmp 0x6316
0x73b7: sub rsp,0x8
0x73bb: mov r9d,r14d
0x73be: mov ecx,ebp
0x73c0: mov eax,dword ptr [rsp+0x508]
0x73c7: mov rdi,r12
0x73ca: push rax
0x73cb: push qword ptr [rsp+0x20]
0x73cf: push qword ptr [rsp+0x30]
0x73d3: mov r8d,dword ptr [rsp+0x28]
0x73d8: mov rdx,qword ptr [rsp+0x20]
0x73dd: mov rsi,qword ptr [rsp+0x58]
0x73e2: call 0x5e80
0x73e7: add rsp,0x20
0x73eb: jmp 0x655f
0x73f0: test r13,r13
0x73f3: je 0x6713
0x73f9: xor edx,edx
0x73fb: mov qword ptr [rsp+0x8],rbx
0x7400: mov rbx,rdx
0x7403: nop dword ptr [rax+rax]
0x7408: mov rsi,r12
0x740b: mov edi,0x30
0x7410: add rbx,0x1
0x7414: call 0x2660
0x7419: cmp r13,rbx
0x741c: jne 0x7408
0x741e: jmp 0x670e
0x743a: xor ebp,ebp
0x743c: movsxd rax,r13d
0x743f: cmp rax,rdx
0x7442: mov qword ptr [rsp+0x8],rax
0x7447: jae 0x5f3f
0x744d: test r12,r12
0x7450: je 0x7495
0x7452: xor edx,edx
0x7454: mov byte ptr [rsp+0x40],bpl
0x7459: mov qword ptr [rsp+0x48],rbx
0x745e: mov rbp,rdx
0x7461: mov rbx,rax
0x7464: mov dword ptr [rsp+0x50],r10d
0x7469: nop dword ptr [rax]
0x7470: mov rsi,r12
0x7473: mov edi,0x20
0x7478: add rbp,0x1
0x747c: call 0x2660
0x7481: cmp rbx,rbp
0x7484: ja 0x7470
0x7486: movzx ebp,byte ptr [rsp+0x40]
0x748b: mov rbx,qword ptr [rsp+0x48]
0x7490: mov r10d,dword ptr [rsp+0x50]
0x7495: add r15,qword ptr [rsp+0x8]
0x749a: mov eax,r10d
0x749d: sub eax,r13d
0x74a0: cmp r10d,r13d
0x74a3: mov r10d,0x0
0x74a9: cmovg r10d,eax
0x74ad: test bpl,bpl
0x74b0: mov rdx,r15
0x74b3: not rdx
0x74b6: jne 0x75e3
0x74bc: mov rax,qword ptr [rsp+0x38]
0x74c1: movsxd r13,r10d
0x74c4: mov rbp,rbx
0x74c7: mov dword ptr [rsp+0x8],0x5f
0x74cf: add rax,0x17
0x74d3: sub rax,r14
0x74d6: mov qword ptr [rsp+0x40],rax
0x74db: jmp 0x669c
0x74e0: test r10d,r10d
0x74e3: mov ecx,0x0
0x74e8: mov eax,0x1
0x74ed: cmovns ecx,r10d
0x74f1: movsxd r13,ecx
0x74f4: test r13,r13
0x74f7: cmovne rax,r13
0x74fb: cmp rax,rdx
0x74fe: mov qword ptr [rsp+0x48],rax
0x7503: jae 0x5f3f
0x7509: test r12,r12
0x750c: je 0x758a
0x750e: mov ecx,dword ptr [rsp+0x58]
0x7512: test ecx,ecx
0x7514: jne 0x7574
0x7516: cmp r13,0x1
0x751a: jbe 0x7574
0x751c: mov edi,dword ptr [rsp+0x8]
0x7520: movsxd rax,r10d
0x7523: sub rax,0x1
0x7527: mov qword ptr [rsp+0x38],rax
0x752c: cmp edi,0x30
0x752f: je 0x79f6
0x7535: cmp edi,0x2b
0x7538: je 0x79f6
0x753e: xor edx,edx
0x7540: test rax,rax
0x7543: je 0x7574
0x7545: mov qword ptr [rsp+0x50],rbx
0x754a: mov dword ptr [rsp+0x5c],r10d
0x754f: mov rbx,rdx
0x7552: mov rsi,r12
0x7555: mov edi,0x20
0x755a: add rbx,0x1
0x755e: call 0x2660
0x7563: cmp qword ptr [rsp+0x38],rbx
0x7568: jne 0x7552
0x756a: mov rbx,qword ptr [rsp+0x50]
0x756f: mov r10d,dword ptr [rsp+0x5c]
0x7574: movsx edi,bpl
0x7578: mov rsi,r12
0x757b: mov dword ptr [rsp+0x38],r10d
0x7580: call 0x2660
0x7585: mov r10d,dword ptr [rsp+0x38]
0x758a: add r15,qword ptr [rsp+0x48]
0x758f: mov rbp,rbx
0x7592: mov rdx,r15
0x7595: not rdx
0x7598: jmp 0x669c
0x759d: mov byte ptr [rsp+0x40],0x2b
0x75a2: jmp 0x71a5
0x75b1: cmp edx,ecx
0x75b3: mov r9d,0x1
0x75b9: mov dword ptr [rsp+0x8],0x2b
0x75c1: jb 0x6acc
0x75c7: cmp r10d,esi
0x75ca: mov dword ptr [rsp+0x8],0x2b
0x75d2: setg r9b
0x75d6: jmp 0x6acc
0x75e3: movsxd rcx,r10d
0x75e6: mov r13d,0x1
0x75ec: test rcx,rcx
0x75ef: cmovne r13,rcx
0x75f3: cmp r13,rdx
0x75f6: mov qword ptr [rsp+0x8],r13
0x75fb: jae 0x5f3f
0x7601: test r12,r12
0x7604: je 0x7675
0x7606: mov esi,dword ptr [rsp+0x58]
0x760a: test esi,esi
0x760c: jne 0x7655
0x760e: cmp r10d,0x1
0x7612: jbe 0x7655
0x7614: lea rax,[rcx-0x1]
0x7618: xor r13d,r13d
0x761b: mov qword ptr [rsp+0x48],rbx
0x7620: mov dword ptr [rsp+0x50],r10d
0x7625: mov rbx,r13
0x7628: mov r13,rcx
0x762b: mov qword ptr [rsp+0x40],rax
0x7630: mov rsi,r12
0x7633: mov edi,0x20
0x7638: add rbx,0x1
0x763c: call 0x2660
0x7641: cmp qword ptr [rsp+0x40],rbx
0x7646: jne 0x7630
0x7648: mov rbx,qword ptr [rsp+0x48]
0x764d: mov r10d,dword ptr [rsp+0x50]
0x7652: mov rcx,r13
0x7655: movsx edi,bpl
0x7659: mov rsi,r12
0x765c: mov dword ptr [rsp+0x48],r10d
0x7661: mov qword ptr [rsp+0x40],rcx
0x7666: call 0x2660
0x766b: mov r10d,dword ptr [rsp+0x48]
0x7670: mov rcx,qword ptr [rsp+0x40]
0x7675: add r15,qword ptr [rsp+0x8]
0x767a: mov rax,qword ptr [rsp+0x38]
0x767f: mov r13,rcx
0x7682: mov rbp,rbx
0x7685: mov dword ptr [rsp+0x8],0x5f
0x768d: add rax,0x17
0x7691: sub rax,r14
0x7694: mov rdx,r15
0x7697: mov qword ptr [rsp+0x40],rax
0x769c: not rdx
0x769f: jmp 0x669c
0x76c1: mov eax,dword ptr [rsp+0x24]
0x76c5: cmp eax,0x2b
0x76c8: je 0x7a4b
0x76ce: mov dword ptr [rsp+0x8],eax
0x76d2: xor r9d,r9d
0x76d5: mov eax,0x1
0x76da: xor r13d,r13d
0x76dd: mov esi,0x2
0x76e2: jmp 0x6acc
0x77be: cmp dword ptr [rsp+0x8],0x5f
0x77c3: je 0x743a
0x77c9: movsxd rax,dword ptr [rsp+0x58]
0x77ce: cmp rax,rdx
0x77d1: jb 0x68d1
0x77d7: jmp 0x5f3f
0x7990: cmp qword ptr [rsp+0x38],0x0
0x7996: je 0x68c0
0x799c: xor edx,edx
0x799e: mov qword ptr [rsp+0x50],rbx
0x79a3: mov rbx,rdx
0x79a6: mov rsi,r12
0x79a9: mov edi,0x30
0x79ae: add rbx,0x1
0x79b2: call 0x2660
0x79b7: cmp qword ptr [rsp+0x38],rbx
0x79bc: jne 0x79a6
0x79be: jmp 0x68bb
0x79f6: cmp qword ptr [rsp+0x38],0x0
0x79fc: je 0x7574
0x7a02: xor edx,edx
0x7a04: mov qword ptr [rsp+0x50],rbx
0x7a09: mov dword ptr [rsp+0x5c],r10d
0x7a0e: mov rbx,rdx
0x7a11: mov rsi,r12
0x7a14: mov edi,0x30
0x7a19: add rbx,0x1
0x7a1d: call 0x2660
0x7a22: cmp qword ptr [rsp+0x38],rbx
0x7a27: jne 0x7a11
0x7a29: jmp 0x756a
0x7a4b: mov eax,0x1
0x7a50: xor r13d,r13d
0x7a53: mov esi,0x2
0x7a58: jmp 0x75c7
0x7a5d: mov esi,0x2
0x7a62: mov edx,0x63
0x7a67: jmp 0x75b1
0x7a7d: add ecx,0x64
0x7a80: cmp dword ptr [rsp+0x8],0x0
0x7a85: je 0x76c1
0x7a8b: jmp 0x6ab1
0x7d90: mov rax,rdi
0x7d93: xor edx,edx
0x7d95: ror rax,0x3
0x7d99: div rsi
0x7d9c: mov rax,rdx
0x7d9f: ret 
0x7da0: cmp rdi,rsi
0x7da3: sete al
0x7da6: ret 
0x7dcd: call 0x2400
0x7dd2: nop dword ptr [rax]
0x7dd6: nop word ptr cs:[rax+rax]
0x7e71: mov rdx,qword ptr [rax+0x8]
0x7e75: mov qword ptr [rbx+0x8],rdx
0x7e79: mov qword ptr [rax],0x0
0x7e80: mov rdx,qword ptr [r12+0x48]
0x7e85: mov qword ptr [rax+0x8],rdx
0x7e89: mov qword ptr [r12+0x48],rax
0x80af: add rsp,0x8
0x80b3: xor eax,eax
0x80b5: pop rbx
0x80b6: pop rbp
0x80b7: pop r12
0x80b9: pop r13
0x80bb: pop r14
0x80bd: pop r15
0x80bf: ret 
0x80c0: mov rax,qword ptr [rdi+0x10]
0x80c4: ret 
0x80d0: mov rax,qword ptr [rdi+0x18]
0x80d4: ret 
0x80e0: mov rax,qword ptr [rdi+0x20]
0x80e4: ret 
0x80f0: mov rsi,qword ptr [rdi]
0x80f3: mov rdi,qword ptr [rdi+0x8]
0x80f7: xor eax,eax
0x80f9: cmp rsi,rdi
0x80fc: jae 0x8137
0x80fe: nop 
0x8100: cmp qword ptr [rsi],0x0
0x8104: je 0x812c
0x8106: mov rdx,qword ptr [rsi+0x8]
0x810a: mov ecx,0x1
0x810f: test rdx,rdx
0x8112: je 0x8125
0x8114: nop dword ptr [rax]
0x8118: mov rdx,qword ptr [rdx+0x8]
0x811c: add rcx,0x1
0x8120: test rdx,rdx
0x8123: jne 0x8118
0x8125: cmp rax,rcx
0x8128: cmovb rax,rcx
0x812c: add rsi,0x10
0x8130: cmp rsi,rdi
0x8133: jb 0x8100
0x8135: rep ret 
0x8137: rep ret 
0x8140: mov rcx,qword ptr [rdi]
0x8143: mov r8,qword ptr [rdi+0x8]
0x8147: xor edx,edx
0x8149: xor esi,esi
0x814b: cmp rcx,r8
0x814e: jae 0x8186
0x8150: cmp qword ptr [rcx],0x0
0x8154: je 0x817d
0x8156: mov rax,qword ptr [rcx+0x8]
0x815a: add rsi,0x1
0x815e: add rdx,0x1
0x8162: test rax,rax
0x8165: je 0x817d
0x8167: nop word ptr [rax+rax]
0x8170: mov rax,qword ptr [rax+0x8]
0x8174: add rdx,0x1
0x8178: test rax,rax
0x817b: jne 0x8170
0x817d: add rcx,0x10
0x8181: cmp rcx,r8
0x8184: jb 0x8150
0x8186: xor eax,eax
0x8188: cmp qword ptr [rdi+0x18],rsi
0x818c: je 0x8190
0x818e: rep ret 
0x8190: cmp qword ptr [rdi+0x20],rdx
0x8194: sete al
0x8197: ret 
0x81a0: push r13
0x81a2: push r12
0x81a4: mov r12,rsi
0x81a7: push rbp
0x81a8: push rbx
0x81a9: xor ebx,ebx
0x81ab: sub rsp,0x8
0x81af: mov rsi,qword ptr [rdi]
0x81b2: mov rcx,qword ptr [rdi+0x20]
0x81b6: mov rbp,qword ptr [rdi+0x10]
0x81ba: mov r13,qword ptr [rdi+0x18]
0x81be: mov rdi,qword ptr [rdi+0x8]
0x81c2: cmp rsi,rdi
0x81c5: jae 0x8205
0x81c7: nop word ptr [rax+rax]
0x81d0: cmp qword ptr [rsi],0x0
0x81d4: je 0x81fc
0x81d6: mov rax,qword ptr [rsi+0x8]
0x81da: mov edx,0x1
0x81df: test rax,rax
0x81e2: je 0x81f5
0x81e4: nop dword ptr [rax]
0x81e8: mov rax,qword ptr [rax+0x8]
0x81ec: add rdx,0x1
0x81f0: test rax,rax
0x81f3: jne 0x81e8
0x81f5: cmp rbx,rdx
0x81f8: cmovb rbx,rdx
0x81fc: add rsi,0x10
0x8200: cmp rsi,rdi
0x8203: jb 0x81d0
0x8205: lea rdx,[rip+0x19722]
0x820c: mov esi,0x1
0x8211: mov rdi,r12
0x8214: xor eax,eax
0x8216: call 0x2970
0x821b: lea rdx,[rip+0x19724]
0x8222: xor eax,eax
0x8224: mov rcx,rbp
0x8227: mov esi,0x1
0x822c: mov rdi,r12
0x822f: call 0x2970
0x8234: test r13,r13
0x8237: js 0x82a0
0x8239: pxor xmm0,xmm0
0x823d: test rbp,rbp
0x8240: cvtsi2sdq xmm0,r13
0x8245: mulsd xmm0,[rip+0x1978b]
0x824d: js 0x82c9
0x824f: pxor xmm1,xmm1
0x8253: cvtsi2sdq xmm1,rbp
0x8258: divsd xmm0,xmm1
0x825c: lea rdx,[rip+0x19715]
0x8263: mov rcx,r13
0x8266: mov rdi,r12
0x8269: mov esi,0x1
0x826e: mov eax,0x1
0x8273: call 0x2970
0x8278: add rsp,0x8
0x827c: mov rcx,rbx
0x827f: mov rdi,r12
0x8282: pop rbx
0x8283: pop rbp
0x8284: pop r12
0x8286: pop r13
0x8288: lea rdx,[rip+0x196cf]
0x828f: mov esi,0x1
0x8294: xor eax,eax
0x8296: jmp 0x2970
0x82a0: mov rax,r13
0x82a3: mov rdx,r13
0x82a6: pxor xmm0,xmm0
0x82aa: shr rax, 1
0x82ad: and edx,0x1
0x82b0: or rax,rdx
0x82b3: test rbp,rbp
0x82b6: cvtsi2sdq xmm0,rax
0x82bb: addsd xmm0,xmm0
0x82bf: mulsd xmm0,[rip+0x19711]
0x82c7: jns 0x824f
0x82c9: mov rax,rbp
0x82cc: pxor xmm1,xmm1
0x82d0: shr rax, 1
0x82d3: and ebp,0x1
0x82d6: or rax,rbp
0x82d9: cvtsi2sdq xmm1,rax
0x82de: addsd xmm1,xmm1
0x82e2: jmp 0x8258
0x8350: cmp qword ptr [rdi+0x20],0x0
0x8355: je 0x8383
0x8357: mov rdx,qword ptr [rdi]
0x835a: mov rcx,qword ptr [rdi+0x8]
0x835e: cmp rdx,rcx
0x8361: jae 0x8388
0x8363: mov rax,qword ptr [rdx]
0x8366: test rax,rax
0x8369: jne 0x8386
0x836b: nop dword ptr [rax+rax]
0x8370: add rdx,0x10
0x8374: cmp rdx,rcx
0x8377: jae 0x8388
0x8379: mov rax,qword ptr [rdx]
0x837c: test rax,rax
0x837f: je 0x8370
0x8381: rep ret 
0x8383: xor eax,eax
0x8385: ret 
0x8386: rep ret 
0x8388: sub rsp,0x8
0x838c: call 0x2400
0x8391: nop dword ptr [rax+rax]
0x8396: nop word ptr cs:[rax+rax]
0x83a0: push rbp
0x83a1: push rbx
0x83a2: mov rbp,rdi
0x83a5: mov rbx,rsi
0x83a8: sub rsp,0x8
0x83ac: call 0x7db0
0x83b1: mov rdx,rax
0x83b4: mov rcx,rax
0x83b7: mov rax,qword ptr [rdx]
0x83ba: mov rdx,qword ptr [rdx+0x8]
0x83be: cmp rax,rbx
0x83c1: je 0x83d9
0x83c3: nop dword ptr [rax+rax]
0x83c8: test rdx,rdx
0x83cb: je 0x83de
0x83cd: mov rax,qword ptr [rdx]
0x83d0: mov rdx,qword ptr [rdx+0x8]
0x83d4: cmp rax,rbx
0x83d7: jne 0x83c8
0x83d9: test rdx,rdx
0x83dc: jne 0x8408
0x83de: mov rdx,qword ptr [rbp+0x8]
0x83e2: jmp 0x83f0
0x83e8: mov rax,qword ptr [rcx]
0x83eb: test rax,rax
0x83ee: jne 0x83fb
0x83f0: add rcx,0x10
0x83f4: cmp rdx,rcx
0x83f7: ja 0x83e8
0x83f9: xor eax,eax
0x83fb: add rsp,0x8
0x83ff: pop rbx
0x8400: pop rbp
0x8401: ret 
0x8408: mov rax,qword ptr [rdx]
0x840b: add rsp,0x8
0x840f: pop rbx
0x8410: pop rbp
0x8411: ret 
0x8420: mov r9,qword ptr [rdi]
0x8423: cmp qword ptr [rdi+0x8],r9
0x8427: jbe 0x8482
0x8429: xor r8d,r8d
0x842c: mov rcx,qword ptr [r9]
0x842f: test rcx,rcx
0x8432: je 0x846d
0x8434: cmp rdx,r8
0x8437: jbe 0x8477
0x8439: mov qword ptr [rsi+r8*8],rcx
0x843d: mov rcx,qword ptr [r9+0x8]
0x8441: lea rax,[r8+0x1]
0x8445: test rcx,rcx
0x8448: je 0x846a
0x844a: nop word ptr [rax+rax]
0x8450: cmp rdx,rax
0x8453: je 0x8480
0x8455: mov r8,qword ptr [rcx]
0x8458: add rax,0x1
0x845c: mov qword ptr [rsi+rax*8-0x8],r8
0x8461: mov rcx,qword ptr [rcx+0x8]
0x8465: test rcx,rcx
0x8468: jne 0x8450
0x846a: mov r8,rax
0x846d: add r9,0x10
0x8471: cmp qword ptr [rdi+0x8],r9
0x8475: ja 0x842c
0x8477: mov rax,r8
0x847a: ret 
0x8480: rep ret 
0x8482: xor eax,eax
0x8484: ret 
0x8490: push r15
0x8492: push r14
0x8494: push r13
0x8496: push r12
0x8498: push rbp
0x8499: push rbx
0x849a: sub rsp,0x8
0x849e: mov r14,qword ptr [rdi]
0x84a1: cmp qword ptr [rdi+0x8],r14
0x84a5: jbe 0x84f6
0x84a7: mov r13,rdx
0x84aa: mov r12,rsi
0x84ad: mov r15,rdi
0x84b0: xor ebp,ebp
0x84b2: mov rdi,qword ptr [r14]
0x84b5: test rdi,rdi
0x84b8: je 0x84da
0x84ba: mov rbx,r14
0x84bd: jmp 0x84c3
0x84c0: mov rdi,qword ptr [rbx]
0x84c3: mov rsi,r13
0x84c6: call r12
0x84c9: test al,al
0x84cb: je 0x84e4
0x84cd: mov rbx,qword ptr [rbx+0x8]
0x84d1: add rbp,0x1
0x84d5: test rbx,rbx
0x84d8: jne 0x84c0
0x84da: add r14,0x10
0x84de: cmp qword ptr [r15+0x8],r14
0x84e2: ja 0x84b2
0x84e4: add rsp,0x8
0x84e8: mov rax,rbp
0x84eb: pop rbx
0x84ec: pop rbp
0x84ed: pop r12
0x84ef: pop r13
0x84f1: pop r14
0x84f3: pop r15
0x84f5: ret 
0x84f6: xor ebp,ebp
0x84f8: jmp 0x84e4
0x8500: movzx ecx,byte ptr [rdi]
0x8503: xor edx,edx
0x8505: test cl,cl
0x8507: je 0x852d
0x8509: nop dword ptr [rax]
0x8510: mov rax,rdx
0x8513: add rdi,0x1
0x8517: shl rax,0x5
0x851b: sub rax,rdx
0x851e: xor edx,edx
0x8520: add rax,rcx
0x8523: movzx ecx,byte ptr [rdi]
0x8526: div rsi
0x8529: test cl,cl
0x852b: jne 0x8510
0x852d: mov rax,rdx
0x8530: ret 
0x8540: movabsq rax,0x3f80000000000000
0x854a: mov byte ptr [rdi+0x10],0x0
0x854e: mov qword ptr [rdi],rax
0x8551: movabsq rax,0x3fb4fdf43f4ccccd
0x855b: mov qword ptr [rdi+0x8],rax
0x855f: ret 
0x85bc: mov qword ptr [rax+0x28],r15
0x85c0: call 0x7f00
0x85c5: test al,al
0x85c7: je 0x8650
0x85cd: cmp byte ptr [r15+0x10],0x0
0x85d2: je 0x86d0
0x86d0: test rbp,rbp
0x86d3: movss xmm1,dword ptr [r15+0x8]
0x86d9: jns 0x8691
0x8720: push r12
0x8722: push rbp
0x8723: mov rbp,rdi
0x8726: push rbx
0x8727: mov r12,qword ptr [rdi]
0x872a: cmp r12,qword ptr [rdi+0x8]
0x872e: jae 0x879b
0x8730: cmp qword ptr [r12],0x0
0x8735: je 0x8791
0x8737: mov rbx,qword ptr [r12+0x8]
0x873c: mov rax,qword ptr [rbp+0x40]
0x8740: test rbx,rbx
0x8743: je 0x8775
0x8745: nop dword ptr [rax]
0x8748: test rax,rax
0x874b: je 0x8756
0x874d: mov rdi,qword ptr [rbx]
0x8750: call rax
0x8752: mov rax,qword ptr [rbp+0x40]
0x8756: mov rdx,qword ptr [rbx+0x8]
0x875a: mov rcx,qword ptr [rbp+0x48]
0x875e: mov qword ptr [rbx],0x0
0x8765: test rdx,rdx
0x8768: mov qword ptr [rbx+0x8],rcx
0x876c: mov qword ptr [rbp+0x48],rbx
0x8770: mov rbx,rdx
0x8773: jne 0x8748
0x8775: test rax,rax
0x8778: je 0x8780
0x877a: mov rdi,qword ptr [r12]
0x877e: call rax
0x8780: mov qword ptr [r12],0x0
0x8788: mov qword ptr [r12+0x8],0x0
0x8791: add r12,0x10
0x8795: cmp qword ptr [rbp+0x8],r12
0x8799: ja 0x8730
0x879b: mov qword ptr [rbp+0x18],0x0
0x87a3: mov qword ptr [rbp+0x20],0x0
0x87ab: pop rbx
0x87ac: pop rbp
0x87ad: pop r12
0x87af: ret 
0x87f0: mov rdi,qword ptr [rbx]
0x87f8: mov rbx,qword ptr [rbx+0x8]
0x87fc: test rbx,rbx
0x87ff: jne 0x87f0
0x8801: mov rax,qword ptr [r12+0x8]
0x89ce: mov rax,qword ptr [rsp+0x48]
0x89d3: mov edx,0x1
0x89d8: mov rsi,r12
0x89db: mov rdi,rbp
0x89de: mov qword ptr [rbp+0x48],rax
0x89e2: call 0x7f80
0x89e7: test al,al
0x89e9: je 0x8ac9
0x89ef: xor edx,edx
0x89f1: mov rsi,r12
0x89f4: mov rdi,rbp
0x89f7: call 0x7f80
0x89fc: test al,al
0x89fe: je 0x8ac9
0x8a04: mov rdi,qword ptr [rsp]
0x8a08: call 0x2a10
0x8a0d: jmp 0x8a12
0x8ac9: call 0x2400
0x8ace: nop 
0x8cb2: nop word ptr [rax+rax]
0x8d54: nop 
0x8d56: nop word ptr cs:[rax+rax]
0x8db9: nop dword ptr [rax]
0x8fc3: nop word ptr cs:[rax+rax]
0x8fcd: nop dword ptr [rax]
0x8fd0: fld dword ptr [rip+0x189fa]
0x8fd6: fld tbyte ptr [rsp+0x8]
0x8fda: fucomi st(1)
0x8fdc: jae 0x9050
0x8fde: fstp st(1)
0x8fe0: fnstcw [rsp-0xa]
0x8fe4: movzx eax,word ptr [rsp-0xa]
0x8fe9: or ah,0xc
0x8fec: mov word ptr [rsp-0xc],ax
0x8ff1: fld st(0)
0x8ff3: fldcw [rsp-0xc]
0x8ff7: fistpll [rsp-0x18]
0x8ffb: fldcw [rsp-0xa]
0x8fff: mov rax,qword ptr [rsp-0x18]
0x9004: mov qword ptr [rsp-0x20],rax
0x9009: test rax,rax
0x900c: fildll [rsp-0x20]
0x9010: jns 0x9018
0x9012: fadd dword ptr [rip+0x189b4]
0x9018: test edi,edi
0x901a: jne 0x9048
0x901c: fxch st(1)
0x901e: fucompi st(1)
0x9020: jp 0x9028
0x9022: je 0x904a
0x9024: fstp st(0)
0x9026: jmp 0x9030
0x9028: fstp st(0)
0x902a: nop word ptr [rax+rax]
0x9030: add rax,0x1
0x9034: mov qword ptr [rsp-0x20],rax
0x9039: test rax,rax
0x903c: fildll [rsp-0x20]
0x9040: js 0x9090
0x9042: jmp 0x904a
0x9048: fstp st(1)
0x904a: rep ret 
0x9050: fnstcw [rsp-0xa]
0x9054: movzx eax,word ptr [rsp-0xa]
0x9059: fsub st(1),st(0)
0x905b: fxch st(1)
0x905d: movabsq rdx,-0x8000000000000000
0x9067: or ah,0xc
0x906a: mov word ptr [rsp-0xc],ax
0x906f: fldcw [rsp-0xc]
0x9073: fistpll [rsp-0x18]
0x9077: fldcw [rsp-0xa]
0x907b: mov rax,qword ptr [rsp-0x18]
0x9080: xor rax,rdx
0x9083: jmp 0x9004
0x9090: fadd dword ptr [rip+0x18936]
0x9096: ret 
0x90a3: push rsi
0x9185: mov qword ptr [rsp+0x18],rcx
0x918a: test rcx,rcx
0x918d: fildll [rsp+0x18]
0x9191: jns 0x9199
0x9193: fadd dword ptr [rip+0x18833]
0x9199: mov rax,qword ptr [rsp+0x10]
0x919e: mov qword ptr [rsp+0x18],rax
0x91a3: test rax,rax
0x91a6: fildll [rsp+0x18]
0x91aa: jns 0x91b2
0x91ac: fadd dword ptr [rip+0x1881a]
0x91b2: fdivrp st(1)
0x91b4: mov qword ptr [rsp+0x18],rbx
0x91b9: test rbx,rbx
0x91bc: fildll [rsp+0x18]
0x91c0: jns 0x91c8
0x91c2: fadd dword ptr [rip+0x18804]
0x91c8: test r12b,0x10
0x91cc: fmulp st(1)
0x91ce: je 0x9398
0x91d4: fild dword ptr [rsp+0x34]
0x91d8: xor ebx,ebx
0x91da: fld st(0)
0x91dc: jmp 0x91e4
0x91e0: fstp st(1)
0x91e2: fxch st(2)
0x91e4: fld st(0)
0x91e6: add ebx,0x1
0x91e9: fmul st(2)
0x91eb: fxch st(3)
0x91ed: fucomi st(3)
0x91ef: jb 0x9200
0x91f1: cmp ebx,0x8
0x91f4: jne 0x91e0
0x91f6: fstp st(2)
0x91f8: fstp st(2)
0x91fa: jmp 0x9204
0x9200: fstp st(2)
0x9202: fstp st(2)
0x9204: mov ecx,dword ptr [rsp+0x30]
0x9208: add rbp,0x1
0x920c: xor eax,eax
0x920e: fdivp st(1)
0x9210: test ecx,ecx
0x9212: sete al
0x9215: cmp r15d,0x1
0x9219: lea rax,[rbp+rax+0x1]
0x921e: mov qword ptr [rsp+0x18],rax
0x9223: je 0x9790
0x9229: fld tbyte ptr [rip+0x18801]
0x922f: fucompi st(1)
0x9231: ja 0x9608
0x9237: fld st(0)
0x9239: fstp tbyte ptr [rsp+0x20]
0x923d: sub rsp,0x10
0x9241: lea rcx,[rip+0x1879e]
0x9248: mov esi,0x1
0x924d: mov rdx,-0x1
0x9254: xor eax,eax
0x9256: mov r14,qword ptr [rsp+0x10]
0x925b: mov rdi,r14
0x925e: fstp tbyte ptr [rsp]
0x9261: call 0x2a00
0x9266: mov rdi,r14
0x9269: call 0x2530
0x926e: pop rcx
0x926f: pop rsi
0x9270: cmp rax,qword ptr [rsp+0x18]
0x9275: mov r14,rax
0x9278: fld tbyte ptr [rsp+0x20]
0x927c: ja 0x9828
0x9282: test r12b,0x8
0x9286: je 0x93f0
0x928c: mov rax,qword ptr [rsp]
0x9290: cmp byte ptr [rax+r14-0x1],0x30
0x9296: jne 0x93f8
0x929c: fld dword ptr [rip+0x1878a]
0x92a2: cmp r15d,0x1
0x92a6: fmul st(1),st(0)
0x92a8: jne 0x9830
0x92ae: jmp 0x97e3
0x92b8: test rcx,rcx
0x92bb: je 0x9185
0x92c1: mov rax,qword ptr [rsp+0x10]
0x92c6: xor edx,edx
0x92c8: div rcx
0x92cb: test rdx,rdx
0x92ce: mov r8,rax
0x92d1: jne 0x9185
0x92d7: mov rax,rbx
0x92da: xor edx,edx
0x92dc: div r8
0x92df: mov rbx,rax
0x92e2: lea rax,[rdx+rdx*4]
0x92e6: xor edx,edx
0x92e8: mov rsi,rbx
0x92eb: add rax,rax
0x92ee: div r8
0x92f1: add rdx,rdx
0x92f4: mov r9d,eax
0x92f7: cmp r8,rdx
0x92fa: jbe 0x9888
0x9300: xor edi,edi
0x9302: test rdx,rdx
0x9305: setne dil
0x9398: cmp r15d,0x1
0x939c: je 0x93ac
0x939e: fld tbyte ptr [rip+0x1868c]
0x93a4: fucompi st(1)
0x93a6: ja 0x9630
0x93ac: sub rsp,0x10
0x93b0: lea rcx,[rip+0x18629]
0x93b7: mov esi,0x1
0x93bc: mov rbx,qword ptr [rsp+0x10]
0x93c1: mov rdx,-0x1
0x93c8: xor eax,eax
0x93ca: fstp tbyte ptr [rsp]
0x93cd: xor ebp,ebp
0x93cf: mov rdi,rbx
0x93d2: call 0x2a00
0x93d7: mov rdi,rbx
0x93da: mov ebx,0xffffffff
0x93df: call 0x2530
0x93e4: pop rsi
0x93e5: pop rdi
0x93e6: mov r14,rax
0x93e9: jmp 0x9400
0x93f0: fstp st(0)
0x93f2: jmp 0x9400
0x93f8: fstp st(0)
0x93fa: nop word ptr [rax+rax]
0x9400: mov r15,qword ptr [rsp+0x8]
0x9405: mov rsi,qword ptr [rsp]
0x9409: mov rdx,r14
0x940c: sub r15,r14
0x940f: sub r14,rbp
0x9412: mov rdi,r15
0x9415: call 0x2890
0x941a: mov r8,r14
0x941d: add r8,r15
0x9526: push rax
0x9608: sub rsp,0x10
0x960c: mov edi,r15d
0x960f: fld st(0)
0x9611: fstp tbyte ptr [rsp]
0x9614: fstp tbyte ptr [rsp+0x30]
0x9618: call 0x8fd0
0x961d: pop rax
0x961e: pop rdx
0x961f: fld tbyte ptr [rsp+0x20]
0x9623: jmp 0x9239
0x9630: sub rsp,0x10
0x9634: mov edi,r15d
0x9637: fstp tbyte ptr [rsp]
0x963a: call 0x8fd0
0x963f: pop r8
0x9641: pop r9
0x9643: jmp 0x93ac
0x975f: mov edx,dword ptr [rsp+0x34]
0x9763: mov ebx,0x1
0x9768: mov eax,0x1
0x976d: imul rax,rdx
0x9771: cmp rcx,rax
0x9774: jbe 0x9439
0x977a: add ebx,0x1
0x977d: cmp ebx,0x8
0x9780: jne 0x976d
0x9782: jmp 0x9439
0x9790: sub rsp,0x10
0x9794: lea rcx,[rip+0x1824b]
0x979b: mov rdx,-0x1
0x97a2: fld st(0)
0x97a4: fstp tbyte ptr [rsp]
0x97a7: mov r14,qword ptr [rsp+0x10]
0x97ac: mov esi,0x1
0x97b1: xor eax,eax
0x97b3: mov rdi,r14
0x97b6: fstp tbyte ptr [rsp+0x30]
0x97ba: call 0x2a00
0x97bf: mov rdi,r14
0x97c2: call 0x2530
0x97c7: mov r14,rax
0x97ca: pop rax
0x97cb: pop rdx
0x97cc: cmp r14,qword ptr [rsp+0x18]
0x97d1: fld tbyte ptr [rsp+0x20]
0x97d5: jbe 0x9282
0x97db: fld dword ptr [rip+0x1824b]
0x97e1: fmul st(1),st(0)
0x97e3: fdivrp st(1)
0x97e5: sub rsp,0x10
0x97e9: lea rcx,[rip+0x181f0]
0x97f0: mov r14,qword ptr [rsp+0x10]
0x97f5: mov rdx,-0x1
0x97fc: mov esi,0x1
0x9801: xor eax,eax
0x9803: xor ebp,ebp
0x9805: mov rdi,r14
0x9808: fstp tbyte ptr [rsp]
0x980b: call 0x2a00
0x9810: mov rdi,r14
0x9813: call 0x2530
0x9818: pop r10
0x981a: mov r14,rax
0x981d: pop r11
0x981f: jmp 0x9400
0x9828: fld dword ptr [rip+0x181fe]
0x982e: fmul st(1),st(0)
0x9830: fld tbyte ptr [rip+0x181fa]
0x9836: fucompi st(2)
0x9838: jbe 0x97e3
0x983a: fstp dword ptr [rsp+0x18]
0x983e: sub rsp,0x10
0x9842: mov edi,r15d
0x9845: fstp tbyte ptr [rsp]
0x9848: call 0x8fd0
0x984d: pop rbp
0x984e: pop r14
0x9850: fld dword ptr [rsp+0x18]
0x9854: jmp 0x97e3
0x9888: setb dil
0x988c: movzx edi,dil
0x9890: add edi,0x2
0x9893: jmp 0x9309
0x9c96: nop word ptr cs:[rax+rax]
0x9ca0: mov rax,qword ptr [rdi]
0x9ca3: xor edx,edx
0x9ca5: div rsi
0x9ca8: mov rax,rdx
0x9cab: ret 
0x9cb0: mov rax,qword ptr [rsi]
0x9cb3: cmp qword ptr [rdi],rax
0x9cb6: sete al
0x9cb9: ret 
0x9cfc: test rax,rax
0x9cff: mov qword ptr [rbx],rax
0x9d02: je 0x9d20
0x9d04: mov qword ptr [rbx+0x8],rbp
0x9d08: mov qword ptr [rbx+0x10],0x0
0x9d10: add rsp,0x8
0x9d14: mov rax,rbx
0x9d17: pop rbx
0x9d18: pop rbp
0x9d19: ret 
0x9d20: mov rdi,rbx
0x9d23: xor ebx,ebx
0x9d25: call 0x2a10
0x9d2a: jmp 0x9d10
0x9d30: push rbx
0x9d31: mov rbx,rdi
0x9d34: mov rdi,qword ptr [rdi]
0x9d37: call 0x87b0
0x9d3c: mov rdi,qword ptr [rbx+0x10]
0x9d40: call 0x2a10
0x9d45: mov rdi,rbx
0x9d48: pop rbx
0x9d49: jmp 0x2a10
0x9e90: push rbx
0x9e91: mov ebx,edi
0x9e93: call 0x2760
0x9e98: test eax,eax
0x9e9a: js 0x9ea0
0x9e9c: pop rbx
0x9e9d: ret 
0x9ea0: mov edi,ebx
0x9ea2: call 0x2480
0x9ea7: test eax,eax
0x9ea9: sete al
0x9eac: movzx eax,al
0x9eaf: pop rbx
0x9eb0: ret 
0x9ec0: push rbp
0x9ec1: push rbx
0x9ec2: mov rbx,rsi
0x9ec5: lea rax,[rbx+0x18]
0x9ec9: mov rbp,rdi
0x9ecc: sub rsp,0x8
0x9ed0: mov rsi,qword ptr [rsi]
0x9ed3: mov rdx,qword ptr [rbx+0x8]
0x9ed7: cmp rsi,rax
0x9eda: je 0x9f00
0x9edc: mov qword ptr [rdi],rsi
0x9edf: movzx eax,byte ptr [rbx+0x10]
0x9ee3: mov qword ptr [rbp+0x8],rdx
0x9ee7: test al,al
0x9ee9: mov byte ptr [rbp+0x10],al
0x9eec: je 0x9ef4
0x9eee: mov eax,dword ptr [rbx+0x14]
0x9ef1: mov dword ptr [rbp+0x14],eax
0x9ef4: add rsp,0x8
0x9ef8: pop rbx
0x9ef9: pop rbp
0x9efa: ret 
0x9f00: lea rcx,[rdi+0x18]
0x9f04: mov rdi,rcx
0x9f07: call 0x2710
0x9f0c: mov rdx,qword ptr [rbx+0x8]
0x9f10: mov qword ptr [rbp],rax
0x9f14: jmp 0x9edf
0x9f20: mov eax,edi
0x9f22: lea rdx,[rip+0x17b17]
0x9f29: mov ecx,edi
0x9f2b: shr al,0x5
0x9f2e: and ecx,0x1f
0x9f31: and eax,0x7
0x9f34: mov eax,dword ptr [rdx+rax*4]
0x9f37: shr eax,cl
0x9f39: and eax,0x1
0x9f3c: ret 
0x9f40: push r15
0x9f42: push r14
0x9f44: push r13
0x9f46: push r12
0x9f48: push rbp
0x9f49: push rbx
0x9f4a: sub rsp,0x98
0x9f51: mov rax,qword ptr fs:0x28
0x9f5a: mov qword ptr [rsp+0x88],rax
0x9f62: xor eax,eax
0x9f64: cmp rdi,rsi
0x9f67: je 0xa2f0
0x9f6d: mov rbp,rdi
0x9f70: mov r12,rsi
0x9f73: call 0x2520
0x9f78: cmp rax,0x1
0x9f7c: ja 0xa018
0x9f82: call 0x29f0
0x9f87: mov r14,qword ptr [rax]
0x9f8a: jmp 0x9fa0
0x9f90: add rbp,0x1
0x9f94: add r12,0x1
0x9f98: cmp bl,dl
0x9f9a: jne 0xa3a0
0x9fa0: movzx r13d,byte ptr [rbp]
0x9fa5: test byte ptr [r14+r13*2+0x1],0x1
0x9fab: mov rbx,r13
0x9fae: je 0x9fbd
0x9fb0: call 0x29e0
0x9fb5: mov rax,qword ptr [rax]
0x9fb8: movzx ebx,byte ptr [rax+r13*4]
0x9fbd: movzx r13d,byte ptr [r12]
0x9fc2: test byte ptr [r14+r13*2+0x1],0x1
0x9fc8: mov rdx,r13
0x9fcb: je 0x9fda
0x9fcd: call 0x29e0
0x9fd2: mov rax,qword ptr [rax]
0x9fd5: movzx edx,byte ptr [rax+r13*4]
0x9fda: test bl,bl
0x9fdc: jne 0x9f90
0x9fde: xor eax,eax
0x9fe0: sub eax,edx
0x9fe2: nop word ptr [rax+rax]
0x9fe8: mov rsi,qword ptr [rsp+0x88]
0x9ff0: xor rsi,qword ptr fs:0x28
0x9ff9: jne 0xa61f
0x9fff: add rsp,0x98
0xa006: pop rbx
0xa007: pop rbp
0xa008: pop r12
0xa00a: pop r13
0xa00c: pop r14
0xa00e: pop r15
0xa010: ret 
0xa018: mov qword ptr [rsp+0x50],r12
0xa01d: mov r12,rsp
0xa020: mov qword ptr [rsp+0x10],rbp
0xa025: mov byte ptr [rsp],0x0
0xa029: mov qword ptr [rsp+0x4],0x0
0xa032: lea r13,[rip+0x17a07]
0xa039: mov byte ptr [rsp+0xc],0x0
0xa03e: mov byte ptr [rsp+0x40],0x0
0xa043: lea r14,[r12+0x4]
0xa048: mov qword ptr [rsp+0x44],0x0
0xa051: mov byte ptr [rsp+0x4c],0x0
0xa056: lea rbp,[rsp+0x40]
0xa05b: jmp 0xa0f9
0xa060: cmp byte ptr [rsp+0x40],0x0
0xa065: jne 0xa256
0xa06b: mov rcx,qword ptr [rsp+0x50]
0xa070: movzx edx,byte ptr [rcx]
0xa073: mov eax,edx
0xa075: shr al,0x5
0xa078: and eax,0x7
0xa07b: mov eax,dword ptr [r13+rax*4]
0xa080: btl eax,edx
0xa083: jae 0xa240
0xa089: mov qword ptr [rsp+0x58],0x1
0xa092: movsx eax,byte ptr [rcx]
0xa095: mov byte ptr [rsp+0x60],0x1
0xa09a: mov byte ptr [rsp+0x4c],0x1
0xa09f: mov dword ptr [rsp+0x64],eax
0xa0a3: mov r15d,dword ptr [rsp+0x64]
0xa0a8: test r15d,r15d
0xa0ab: je 0xa3b0
0xa0b1: cmp byte ptr [rsp+0x20],0x0
0xa0b6: je 0xa3c0
0xa0bc: mov edi,dword ptr [rsp+0x24]
0xa0c0: call 0x28e0
0xa0c5: mov edi,r15d
0xa0c8: mov ebx,eax
0xa0ca: call 0x28e0
0xa0cf: sub ebx,eax
0xa0d1: mov eax,ebx
0xa0d3: test eax,eax
0xa0d5: jne 0x9fe8
0xa0db: mov rax,qword ptr [rsp+0x18]
0xa0e0: add qword ptr [rsp+0x10],rax
0xa0e5: mov rax,qword ptr [rsp+0x58]
0xa0ea: add qword ptr [rsp+0x50],rax
0xa0ef: mov byte ptr [rsp+0xc],0x0
0xa0f4: mov byte ptr [rsp+0x4c],0x0
0xa0f9: cmp byte ptr [rsp],0x0
0xa0fd: jne 0xa1a4
0xa103: mov rcx,qword ptr [rsp+0x10]
0xa108: movzx edx,byte ptr [rcx]
0xa10b: mov eax,edx
0xa10d: shr al,0x5
0xa110: and eax,0x7
0xa113: mov eax,dword ptr [r13+rax*4]
0xa118: btl eax,edx
0xa11b: jae 0xa190
0xa11d: mov qword ptr [rsp+0x18],0x1
0xa126: movsx eax,byte ptr [rcx]
0xa129: mov byte ptr [rsp+0x20],0x1
0xa12e: mov byte ptr [rsp+0xc],0x1
0xa133: mov dword ptr [rsp+0x24],eax
0xa137: mov r9d,dword ptr [rsp+0x24]
0xa13c: test r9d,r9d
0xa13f: je 0xa3e8
0xa145: cmp byte ptr [rsp+0x4c],0x0
0xa14a: je 0xa060
0xa150: cmp byte ptr [rsp+0x60],0x0
0xa155: jne 0xa0a3
0xa15b: cmp byte ptr [rsp+0x20],0x0
0xa160: jne 0xa3d8
0xa166: mov rdx,qword ptr [rsp+0x18]
0xa16b: mov rax,qword ptr [rsp+0x58]
0xa170: mov rdi,qword ptr [rsp+0x10]
0xa175: mov rsi,qword ptr [rsp+0x50]
0xa17a: cmp rdx,rax
0xa17d: jne 0xa4a8
0xa183: call 0x2680
0xa188: jmp 0xa0d3
0xa190: mov rdi,r14
0xa193: call 0x2990
0xa198: test eax,eax
0xa19a: je 0xa600
0xa1a0: mov byte ptr [rsp],0x1
0xa1a4: call 0x2520
0xa1a9: mov rbx,qword ptr [rsp+0x10]
0xa1ae: mov rsi,rax
0xa1b1: mov rdi,rbx
0xa1b4: call 0xc380
0xa1b9: lea rcx,[r12+0x4]
0xa1be: lea rdi,[r12+0x24]
0xa1c3: mov rdx,rax
0xa1c6: mov rsi,rbx
0xa1c9: call 0x101e0
0xa1ce: cmp rax,-0x1
0xa1d2: mov qword ptr [rsp+0x18],rax
0xa1d7: je 0xa300
0xa1dd: cmp rax,-0x2
0xa1e1: je 0xa340
0xa1e7: test rax,rax
0xa1ea: jne 0xa211
0xa1ec: mov rax,qword ptr [rsp+0x10]
0xa1f1: mov qword ptr [rsp+0x18],0x1
0xa1fa: cmp byte ptr [rax],0x0
0xa1fd: jne 0xa624
0xa203: mov r10d,dword ptr [rsp+0x24]
0xa208: test r10d,r10d
0xa20b: jne 0xa5fb
0xa211: lea rdi,[r12+0x4]
0xa216: mov byte ptr [rsp+0x20],0x1
0xa21b: call 0x2990
0xa220: test eax,eax
0xa222: je 0xa380
0xa228: mov byte ptr [rsp],0x0
0xa22c: mov byte ptr [rsp+0xc],0x1
0xa231: jmp 0xa137
0xa240: lea rdi,[rbp+0x4]
0xa244: call 0x2990
0xa249: test eax,eax
0xa24b: je 0xa600
0xa251: mov byte ptr [rsp+0x40],0x1
0xa256: call 0x2520
0xa25b: mov rbx,qword ptr [rsp+0x50]
0xa260: mov rsi,rax
0xa263: mov rdi,rbx
0xa266: call 0xc380
0xa26b: lea rcx,[rbp+0x4]
0xa26f: lea rdi,[rbp+0x24]
0xa273: mov rdx,rax
0xa276: mov rsi,rbx
0xa279: call 0x101e0
0xa27e: cmp rax,-0x1
0xa282: mov qword ptr [rsp+0x58],rax
0xa287: je 0xa320
0xa28d: cmp rax,-0x2
0xa291: je 0xa360
0xa297: test rax,rax
0xa29a: jne 0xa2c1
0xa29c: mov rax,qword ptr [rsp+0x50]
0xa2a1: mov qword ptr [rsp+0x58],0x1
0xa2aa: cmp byte ptr [rax],0x0
0xa2ad: jne 0xa624
0xa2b3: mov r8d,dword ptr [rsp+0x64]
0xa2b8: test r8d,r8d
0xa2bb: jne 0xa5fb
0xa2c1: lea rdi,[rbp+0x4]
0xa2c5: mov byte ptr [rsp+0x60],0x1
0xa2ca: call 0x2990
0xa2cf: test eax,eax
0xa2d1: je 0xa390
0xa2d7: mov byte ptr [rsp+0x40],0x0
0xa2dc: mov byte ptr [rsp+0x4c],0x1
0xa2e1: jmp 0xa0a3
0xa2f0: xor eax,eax
0xa2f2: jmp 0x9fe8
0xa300: mov qword ptr [rsp+0x18],0x1
0xa309: mov byte ptr [rsp+0x20],0x0
0xa30e: mov byte ptr [rsp+0xc],0x1
0xa313: jmp 0xa145
0xa320: mov qword ptr [rsp+0x58],0x1
0xa329: mov byte ptr [rsp+0x60],0x0
0xa32e: mov byte ptr [rsp+0x4c],0x1
0xa333: jmp 0xa15b
0xa340: mov rdi,qword ptr [rsp+0x10]
0xa345: call 0x2530
0xa34a: mov byte ptr [rsp+0x20],0x0
0xa34f: mov qword ptr [rsp+0x18],rax
0xa354: mov byte ptr [rsp+0xc],0x1
0xa359: jmp 0xa145
0xa360: mov rdi,qword ptr [rsp+0x50]
0xa365: call 0x2530
0xa36a: mov byte ptr [rsp+0x60],0x0
0xa36f: mov qword ptr [rsp+0x58],rax
0xa374: mov byte ptr [rsp+0x4c],0x1
0xa379: jmp 0xa15b
0xa380: mov byte ptr [rsp+0xc],0x1
0xa385: jmp 0xa137
0xa390: mov byte ptr [rsp+0x4c],0x1
0xa395: jmp 0xa0a3
0xa3a0: movzx eax,bl
0xa3a3: sub eax,edx
0xa3a5: jmp 0x9fe8
0xa3b0: cmp byte ptr [rsp+0xc],0x0
0xa3b5: je 0xa3ef
0xa3b7: cmp byte ptr [rsp+0x20],0x0
0xa3bc: jne 0xa439
0xa3be: nop 
0xa3c0: mov eax,0x1
0xa3c5: jmp 0x9fe8
0xa3ca: cmp byte ptr [rsp+0x60],0x0
0xa3cf: jne 0xa493
0xa3d5: nop dword ptr [rax]
0xa3d8: mov eax,0xffffffff
0xa3dd: jmp 0x9fe8
0xa3e8: cmp byte ptr [rsp+0xc],0x0
0xa3ed: jne 0xa445
0xa3ef: cmp byte ptr [rsp],0x0
0xa3f3: mov rbx,rsp
0xa3f6: jne 0xa4d8
0xa3fc: mov rcx,qword ptr [rsp+0x10]
0xa401: lea rsi,[rip+0x17638]
0xa408: movzx edx,byte ptr [rcx]
0xa40b: mov eax,edx
0xa40d: shr al,0x5
0xa410: and eax,0x7
0xa413: mov eax,dword ptr [rsi+rax*4]
0xa416: btl eax,edx
0xa419: jae 0xa4c0
0xa41f: mov qword ptr [rsp+0x18],0x1
0xa428: movsx eax,byte ptr [rcx]
0xa42b: mov byte ptr [rsp+0x20],0x1
0xa430: mov byte ptr [rsp+0xc],0x1
0xa435: mov dword ptr [rsp+0x24],eax
0xa439: mov esi,dword ptr [rsp+0x24]
0xa43d: test esi,esi
0xa43f: jne 0xa3c0
0xa445: cmp byte ptr [rsp+0x4c],0x0
0xa44a: jne 0xa3ca
0xa450: cmp byte ptr [rsp+0x40],0x0
0xa455: lea rbx,[rsp+0x40]
0xa45a: jne 0xa598
0xa460: mov rcx,qword ptr [rsp+0x50]
0xa465: lea rsi,[rip+0x175d4]
0xa46c: movzx edx,byte ptr [rcx]
0xa46f: mov eax,edx
0xa471: shr al,0x5
0xa474: and eax,0x7
0xa477: mov eax,dword ptr [rsi+rax*4]
0xa47a: btl eax,edx
0xa47d: jae 0xa580
0xa483: mov qword ptr [rsp+0x58],0x1
0xa48c: movsx eax,byte ptr [rcx]
0xa48f: mov dword ptr [rsp+0x64],eax
0xa493: mov edx,dword ptr [rsp+0x64]
0xa497: xor eax,eax
0xa499: test edx,edx
0xa49b: setne al
0xa49e: neg eax
0xa4a0: jmp 0x9fe8
0xa4a8: jae 0xa561
0xa4ae: call 0x2680
0xa4b3: test eax,eax
0xa4b5: jg 0xa3c0
0xa4bb: jmp 0xa3d8
0xa4c0: mov rbx,rsp
0xa4c3: lea rdi,[rbx+0x4]
0xa4c7: call 0x2990
0xa4cc: test eax,eax
0xa4ce: je 0xa600
0xa4d4: mov byte ptr [rsp],0x1
0xa4d8: call 0x2520
0xa4dd: mov rbp,qword ptr [rsp+0x10]
0xa4e2: mov rsi,rax
0xa4e5: mov rdi,rbp
0xa4e8: call 0xc380
0xa4ed: lea rcx,[rbx+0x4]
0xa4f1: lea rdi,[rbx+0x24]
0xa4f5: mov rdx,rax
0xa4f8: mov rsi,rbp
0xa4fb: call 0x101e0
0xa500: cmp rax,-0x1
0xa504: mov qword ptr [rsp+0x18],rax
0xa509: je 0xa3c0
0xa50f: cmp rax,-0x2
0xa513: je 0xa3c0
0xa519: test rax,rax
0xa51c: jne 0xa541
0xa51e: mov rax,qword ptr [rsp+0x10]
0xa523: mov qword ptr [rsp+0x18],0x1
0xa52c: cmp byte ptr [rax],0x0
0xa52f: jne 0xa624
0xa535: mov edi,dword ptr [rsp+0x24]
0xa539: test edi,edi
0xa53b: jne 0xa5fb
0xa541: lea rdi,[rbx+0x4]
0xa545: mov byte ptr [rsp+0x20],0x1
0xa54a: call 0x2990
0xa54f: test eax,eax
0xa551: je 0xa576
0xa553: mov byte ptr [rsp],0x0
0xa557: mov byte ptr [rsp+0xc],0x1
0xa55c: jmp 0xa439
0xa561: mov rdx,rax
0xa564: call 0x2680
0xa569: test eax,eax
0xa56b: jns 0xa3c0
0xa571: jmp 0xa3d8
0xa576: mov byte ptr [rsp+0xc],0x1
0xa57b: jmp 0xa439
0xa580: lea rdi,[rsp+0x44]
0xa585: lea rbx,[rsp+0x40]
0xa58a: call 0x2990
0xa58f: test eax,eax
0xa591: je 0xa600
0xa593: mov byte ptr [rsp+0x40],0x1
0xa598: call 0x2520
0xa59d: mov rbp,qword ptr [rsp+0x50]
0xa5a2: mov rsi,rax
0xa5a5: mov rdi,rbp
0xa5a8: call 0xc380
0xa5ad: lea rcx,[rbx+0x4]
0xa5b1: lea rdi,[rbx+0x24]
0xa5b5: mov rdx,rax
0xa5b8: mov rsi,rbp
0xa5bb: call 0x101e0
0xa5c0: lea rdx,[rax+0x2]
0xa5c4: mov qword ptr [rsp+0x58],rax
0xa5c9: cmp rdx,0x1
0xa5cd: jbe 0xa3d8
0xa5d3: test rax,rax
0xa5d6: jne 0xa493
0xa5dc: mov rax,qword ptr [rsp+0x50]
0xa5e1: mov qword ptr [rsp+0x58],0x1
0xa5ea: cmp byte ptr [rax],0x0
0xa5ed: jne 0xa624
0xa5ef: mov ecx,dword ptr [rsp+0x64]
0xa5f3: test ecx,ecx
0xa5f5: je 0xa493
0xa5fb: call 0x2a20
0xa600: lea rcx,[rip+0x17459]
0xa607: lea rsi,[rip+0x16e9a]
0xa60e: lea rdi,[rip+0x16eb3]
0xa615: mov edx,0x96
0xa61a: call 0x2600
0xa61f: call 0x2560
0xa624: lea rcx,[rip+0x17435]
0xa62b: lea rsi,[rip+0x16e76]
0xa632: lea rdi,[rip+0x16ea6]
0xa639: mov edx,0xb2
0xa63e: call 0x2600
0xa643: nop word ptr cs:[rax+rax]
0xa64d: nop dword ptr [rax]
0xa6ef: nop 
0xa6f0: push rbp
0xa6f1: push rbx
0xa6f2: mov rbp,rdi
0xa6f5: mov ebx,esi
0xa6f7: sub rsp,0x8
0xa6fb: call 0x1f5c0
0xa700: movzx edx,byte ptr [rax]
0xa703: and edx,-0x21
0xa706: cmp dl,0x55
0xa709: je 0xa780
0xa70b: cmp dl,0x47
0xa70e: je 0xa730
0xa710: lea rax,[rip+0x173b4]
0xa717: lea rdx,[rip+0x16dd6]
0xa71e: cmp ebx,0x9
0xa721: cmovne rax,rdx
0xa725: add rsp,0x8
0xa729: pop rbx
0xa72a: pop rbp
0xa72b: ret 
0xa730: movzx edx,byte ptr [rax+0x1]
0xa734: and edx,-0x21
0xa737: cmp dl,0x42
0xa73a: jne 0xa710
0xa73c: cmp byte ptr [rax+0x2],0x31
0xa740: jne 0xa710
0xa742: cmp byte ptr [rax+0x3],0x38
0xa746: jne 0xa710
0xa748: cmp byte ptr [rax+0x4],0x30
0xa74c: jne 0xa710
0xa74e: cmp byte ptr [rax+0x5],0x33
0xa752: jne 0xa710
0xa754: cmp byte ptr [rax+0x6],0x30
0xa758: jne 0xa710
0xa75a: cmp byte ptr [rax+0x7],0x0
0xa75e: jne 0xa710
0xa760: cmp byte ptr [rbp],0x60
0xa764: lea rax,[rip+0x17359]
0xa76b: lea rdx,[rip+0x17356]
0xa772: cmovne rax,rdx
0xa776: add rsp,0x8
0xa77a: pop rbx
0xa77b: pop rbp
0xa77c: ret 
0xa780: movzx edx,byte ptr [rax+0x1]
0xa784: and edx,-0x21
0xa787: cmp dl,0x54
0xa78a: jne 0xa710
0xa78c: movzx edx,byte ptr [rax+0x2]
0xa790: and edx,-0x21
0xa793: cmp dl,0x46
0xa796: jne 0xa710
0xa79c: cmp byte ptr [rax+0x3],0x2d
0xa7a0: jne 0xa710
0xa7a6: cmp byte ptr [rax+0x4],0x38
0xa7aa: jne 0xa710
0xa7b0: cmp byte ptr [rax+0x5],0x0
0xa7b4: jne 0xa710
0xa7ba: cmp byte ptr [rbp],0x60
0xa7be: lea rax,[rip+0x172f7]
0xa7c5: lea rdx,[rip+0x172f4]
0xa7cc: cmovne rax,rdx
0xa7d0: add rsp,0x8
0xa7d4: pop rbx
0xa7d5: pop rbp
0xa7d6: ret 
0xa8b3: xor r11d,r11d
0xa8b6: mov rax,rbp
0xa8b9: mov r8d,r12d
0xa8bc: mov rbp,r11
0xa8bf: mov r11,rax
0xa8c2: nop word ptr [rax+rax]
0xa8c8: cmp r11,rbp
0xa8cb: setne r12b
0xa8cf: cmp r11,-0x1
0xa8d3: jne 0xa8e2
0xa8d5: mov rax,qword ptr [rsp+0x10]
0xa8da: cmp byte ptr [rax+rbp],0x0
0xa8de: setne r12b
0xa8e2: test r12b,r12b
0xa8e5: je 0xaf40
0xa8eb: cmp dword ptr [rsp+0x8],0x2
0xa8f0: mov rdi,qword ptr [rsp+0x10]
0xa8f5: lea r9,[rdi+rbp]
0xa8f9: setne al
0xa8fc: and al,byte ptr [rsp+0xd]
0xa900: mov r10d,eax
0xa903: je 0xa9b0
0xa909: mov rax,qword ptr [rsp+0x18]
0xa90e: test rax,rax
0xa911: je 0xad40
0xa917: cmp r11,-0x1
0xa91b: lea rbx,[rbp+rax]
0xa920: jne 0xa950
0xa922: cmp rax,0x1
0xa926: jbe 0xa950
0xa928: mov byte ptr [rsp+0x38],r8b
0xa92d: mov byte ptr [rsp+0x30],r10b
0xa932: mov qword ptr [rsp+0x28],r9
0xa937: call 0x2530
0xa93c: movzx r8d,byte ptr [rsp+0x38]
0xa942: movzx r10d,byte ptr [rsp+0x30]
0xa948: mov r11,rax
0xa94b: mov r9,qword ptr [rsp+0x28]
0xa950: cmp rbx,r11
0xa953: mov byte ptr [rsp+0x28],r10b
0xa958: ja 0xaf10
0xa95e: mov rdx,qword ptr [rsp+0x18]
0xa963: mov rsi,qword ptr [rsp+0x48]
0xa968: mov rdi,r9
0xa96b: mov qword ptr [rsp+0x40],r11
0xa970: mov byte ptr [rsp+0x38],r8b
0xa975: mov qword ptr [rsp+0x30],r9
0xa97a: call 0x2680
0xa97f: test eax,eax
0xa981: mov r9,qword ptr [rsp+0x30]
0xa986: movzx r8d,byte ptr [rsp+0x38]
0xa98c: mov r11,qword ptr [rsp+0x40]
0xa991: jne 0xaf10
0xa997: cmp byte ptr [rsp+0xf],0x0
0xa99c: movzx r10d,byte ptr [rsp+0x28]
0xa9a2: jne 0xb925
0xa9a8: nop dword ptr [rax+rax]
0xa9b0: movzx ebx,byte ptr [r9]
0xa9b4: cmp bl,0x7e
0xa9b7: ja 0xacd8
0xa9bd: lea rcx,[rip+0x17188]
0xa9c4: movzx edx,bl
0xa9c7: movsxd rax,dword ptr [rcx+rdx*4]
0xa9cb: add rax,rcx
0xa9ce: jmp rax
0xaa08: cmp byte ptr [rsp+0xd],0x1
0xaa0d: jne 0xab22
0xaa13: test dl,dl
0xaa15: jne 0xab22
0xaa1b: mov rsi,qword ptr [rsp+0x20]
0xaa20: test rsi,rsi
0xaa23: je 0xaa39
0xaa25: mov edx,ebx
0xaa27: shr dl,0x5
0xaa2a: movzx edx,dl
0xaa2d: mov edx,dword ptr [rsi+rdx*4]
0xaa30: btl edx,ebx
0xaa33: jb 0xab83
0xaa39: test r10b,r10b
0xaa3c: jne 0xab83
0xaa42: xor eax,0x1
0xaa45: add rbp,0x1
0xaa49: and eax,r8d
0xaa4c: test al,al
0xaa4e: je 0xaa70
0xaa50: cmp r13,r15
0xaa53: jbe 0xaa5a
0xaa55: mov byte ptr [r14+r15],0x27
0xaa5a: lea rax,[r15+0x1]
0xaa5e: cmp r13,rax
0xaa61: jbe 0xaa69
0xaa63: mov byte ptr [r14+r15+0x1],0x27
0xaa69: add r15,0x2
0xaa6d: xor r8d,r8d
0xaa70: cmp r15,r13
0xaa73: jae 0xaa79
0xaa75: mov byte ptr [r14+r15],bl
0xaa79: movzx edi,byte ptr [rsp+0xe]
0xaa7e: add r15,0x1
0xaa82: mov eax,0x0
0xaa87: test r12b,r12b
0xaa8a: cmove edi,eax
0xaa8d: mov byte ptr [rsp+0xe],dil
0xaa92: jmp 0xa8c8
0xab22: cmp byte ptr [rsp+0xf],0x0
0xab27: jne 0xaa1b
0xab2d: jmp 0xaa39
0xab83: cmp dword ptr [rsp+0x8],0x2
0xab88: sete dl
0xab8b: cmp byte ptr [rsp+0xf],0x0
0xab90: mov eax,edx
0xab92: jne 0xb3e8
0xab98: mov eax,r8d
0xab9b: xor eax,0x1
0xab9e: and al,dl
0xaba0: je 0xabd1
0xaba2: cmp r13,r15
0xaba5: jbe 0xabac
0xaba7: mov byte ptr [r14+r15],0x27
0xabac: lea rdx,[r15+0x1]
0xabb0: cmp r13,rdx
0xabb3: jbe 0xabbb
0xabb5: mov byte ptr [r14+r15+0x1],0x24
0xabbb: lea rdx,[r15+0x2]
0xabbf: cmp r13,rdx
0xabc2: jbe 0xabca
0xabc4: mov byte ptr [r14+r15+0x2],0x27
0xabca: add r15,0x3
0xabce: mov r8d,eax
0xabd1: cmp r13,r15
0xabd4: jbe 0xabdb
0xabd6: mov byte ptr [r14+r15],0x5c
0xabdb: add r15,0x1
0xabdf: add rbp,0x1
0xabe3: jmp 0xaa70
0xacd0: xor r10d,r10d
0xacd3: nop dword ptr [rax+rax]
0xacd8: cmp qword ptr [rsp+0x58],0x1
0xacde: jne 0xb088
0xace4: mov qword ptr [rsp+0x38],r11
0xace9: mov byte ptr [rsp+0x30],r8b
0xacee: mov byte ptr [rsp+0x28],r10b
0xacf3: call 0x29f0
0xacf8: mov rcx,qword ptr [rax]
0xacfb: movzx edx,bl
0xacfe: movzx r10d,byte ptr [rsp+0x28]
0xad04: movzx r8d,byte ptr [rsp+0x30]
0xad0a: mov r11,qword ptr [rsp+0x38]
0xad0f: mov edi,0x1
0xad14: movzx eax,word ptr [rcx+rdx*2]
0xad18: and ax,0x4000
0xad1c: setne r12b
0xad20: sete al
0xad23: and al,byte ptr [rsp+0xd]
0xad27: test al,al
0xad29: jne 0xb6c1
0xad2f: cmp dword ptr [rsp+0x8],0x2
0xad34: sete dl
0xad37: jmp 0xaa08
0xad40: movzx ebx,byte ptr [r9]
0xad44: cmp bl,0x7e
0xad47: ja 0xacd0
0xad49: lea rcx,[rip+0x16ff8]
0xad50: movzx edx,bl
0xad53: movsxd rax,dword ptr [rcx+rdx*4]
0xad57: add rax,rcx
0xad5a: jmp rax
0xaf10: xor r10d,r10d
0xaf13: jmp 0xa9b0
0xaf40: cmp dword ptr [rsp+0x8],0x2
0xaf45: movzx ebx,byte ptr [rsp+0xf]
0xaf4a: mov r12d,r8d
0xaf4d: mov rbp,r11
0xaf50: sete dl
0xaf53: mov eax,ebx
0xaf55: test r15,r15
0xaf58: sete cl
0xaf5b: and eax,edx
0xaf5d: and al,cl
0xaf5f: jne 0xb9c6
0xaf65: mov eax,ebx
0xaf67: xor eax,0x1
0xaf6a: and dl,al
0xaf6c: je 0xb8dc
0xaf72: cmp byte ptr [rsp+0x7c],0x0
0xaf77: je 0xb8da
0xaf7d: cmp byte ptr [rsp+0xe],0x0
0xaf82: jne 0xb97d
0xaf88: test r13,r13
0xaf8b: sete al
0xaf8e: cmp qword ptr [rsp+0x50],0x0
0xaf94: setne dl
0xaf97: and al,dl
0xaf99: je 0xb9bc
0xaf9f: mov r13,qword ptr [rsp+0x50]
0xafa4: lea rbx,[rip+0x16549]
0xafab: mov byte ptr [r14],0x27
0xafaf: mov dword ptr [rsp+0x8],0x2
0xafb7: mov r15d,0x1
0xafbd: mov qword ptr [rsp+0x18],0x1
0xafc6: mov byte ptr [rsp+0xf],0x0
0xafcb: mov qword ptr [rsp+0x48],rbx
0xafd0: mov byte ptr [rsp+0x7c],al
0xafd4: jmp 0xa8b3
0xb088: lea rax,[rsp+0xa0]
0xb090: cmp r11,-0x1
0xb094: mov qword ptr [rsp+0xa0],0x0
0xb0a0: mov qword ptr [rsp+0x28],rax
0xb0a5: jne 0xb0d4
0xb0a7: mov rdi,qword ptr [rsp+0x10]
0xb0ac: mov byte ptr [rsp+0x40],r8b
0xb0b1: mov byte ptr [rsp+0x38],r10b
0xb0b6: mov qword ptr [rsp+0x30],r9
0xb0bb: call 0x2530
0xb0c0: movzx r8d,byte ptr [rsp+0x40]
0xb0c6: movzx r10d,byte ptr [rsp+0x38]
0xb0cc: mov r11,rax
0xb0cf: mov r9,qword ptr [rsp+0x30]
0xb0d4: lea rax,[rsp+0x9c]
0xb0dc: xor ecx,ecx
0xb0de: mov byte ptr [rsp+0x7e],bl
0xb0e2: mov byte ptr [rsp+0x7d],r8b
0xb0e7: mov rbx,rcx
0xb0ea: mov qword ptr [rsp+0x88],r9
0xb0f2: mov qword ptr [rsp+0x38],rax
0xb0f7: mov byte ptr [rsp+0x7f],r10b
0xb0fc: mov qword ptr [rsp+0x80],r15
0xb104: mov qword ptr [rsp+0x40],r14
0xb109: mov qword ptr [rsp+0x70],r13
0xb10e: mov qword ptr [rsp+0x30],r11
0xb113: mov rax,qword ptr [rsp+0x10]
0xb118: lea r14,[rbp+rbx]
0xb11d: mov rdx,qword ptr [rsp+0x30]
0xb122: mov rcx,qword ptr [rsp+0x28]
0xb127: mov rdi,qword ptr [rsp+0x38]
0xb12c: lea r13,[rax+r14]
0xb130: sub rdx,r14
0xb133: mov rsi,r13
0xb136: call 0x101e0
0xb13b: test rax,rax
0xb13e: mov r15,rax
0xb141: je 0xb191
0xb143: cmp rax,-0x1
0xb147: je 0xb765
0xb14d: cmp rax,-0x2
0xb151: je 0xb6f1
0xb157: cmp dword ptr [rsp+0x8],0x2
0xb15c: sete al
0xb15f: and al,byte ptr [rsp+0xf]
0xb163: jne 0xb300
0xb169: mov edi,dword ptr [rsp+0x9c]
0xb170: call 0x29a0
0xb175: mov rdi,qword ptr [rsp+0x28]
0xb17a: test eax,eax
0xb17c: mov eax,0x0
0xb181: cmove r12d,eax
0xb185: add rbx,r15
0xb188: call 0x2990
0xb18d: test eax,eax
0xb18f: je 0xb113
0xb191: mov edx,r12d
0xb194: mov rdi,rbx
0xb197: movzx r8d,byte ptr [rsp+0x7d]
0xb19d: xor edx,0x1
0xb1a0: movzx ebx,byte ptr [rsp+0x7e]
0xb1a5: movzx r10d,byte ptr [rsp+0x7f]
0xb1ab: and dl,byte ptr [rsp+0xd]
0xb1af: mov r15,qword ptr [rsp+0x80]
0xb1b7: mov r14,qword ptr [rsp+0x40]
0xb1bc: mov r13,qword ptr [rsp+0x70]
0xb1c1: mov r11,qword ptr [rsp+0x30]
0xb1c6: cmp rdi,0x1
0xb1ca: jbe 0xb7cb
0xb1d0: mov rcx,rdi
0xb1d3: xor esi,esi
0xb1d5: movzx r9d,byte ptr [rsp+0xf]
0xb1db: add rcx,rbp
0xb1de: mov rdi,qword ptr [rsp+0x10]
0xb1e3: jmp 0xb29e
0xb1f0: cmp dword ptr [rsp+0x8],0x2
0xb1f5: sete al
0xb1f8: test r9b,r9b
0xb1fb: jne 0xb6b0
0xb201: mov esi,r8d
0xb204: xor esi,0x1
0xb207: and al,sil
0xb20a: je 0xb23b
0xb20c: cmp r13,r15
0xb20f: jbe 0xb216
0xb211: mov byte ptr [r14+r15],0x27
0xb216: lea rsi,[r15+0x1]
0xb21a: cmp r13,rsi
0xb21d: jbe 0xb225
0xb21f: mov byte ptr [r14+r15+0x1],0x24
0xb225: lea rsi,[r15+0x2]
0xb229: cmp r13,rsi
0xb22c: jbe 0xb234
0xb22e: mov byte ptr [r14+r15+0x2],0x27
0xb234: add r15,0x3
0xb238: mov r8d,eax
0xb23b: cmp r13,r15
0xb23e: jbe 0xb245
0xb240: mov byte ptr [r14+r15],0x5c
0xb245: lea rax,[r15+0x1]
0xb249: cmp r13,rax
0xb24c: jbe 0xb25b
0xb24e: mov eax,ebx
0xb250: shr al,0x6
0xb253: add eax,0x30
0xb256: mov byte ptr [r14+r15+0x1],al
0xb25b: lea rax,[r15+0x2]
0xb25f: cmp r13,rax
0xb262: jbe 0xb274
0xb264: mov eax,ebx
0xb266: shr al,0x3
0xb269: and eax,0x7
0xb26c: add eax,0x30
0xb26f: mov byte ptr [r14+r15+0x2],al
0xb274: and ebx,0x7
0xb277: add rbp,0x1
0xb27b: add r15,0x3
0xb27f: add ebx,0x30
0xb282: cmp rbp,rcx
0xb285: jae 0xaa70
0xb28b: mov esi,edx
0xb28d: cmp r13,r15
0xb290: jbe 0xb296
0xb292: mov byte ptr [r14+r15],bl
0xb296: movzx ebx,byte ptr [rdi+rbp]
0xb29a: add r15,0x1
0xb29e: test dl,dl
0xb2a0: jne 0xb1f0
0xb2a6: mov eax,esi
0xb2a8: xor eax,0x1
0xb2ab: and eax,r8d
0xb2ae: test r10b,r10b
0xb2b1: je 0xb2c1
0xb2b3: cmp r13,r15
0xb2b6: jbe 0xb2bd
0xb2b8: mov byte ptr [r14+r15],0x5c
0xb2bd: add r15,0x1
0xb2c1: add rbp,0x1
0xb2c5: cmp rbp,rcx
0xb2c8: jae 0xaa4c
0xb2ce: test al,al
0xb2d0: je 0xb6ce
0xb2d6: cmp r13,r15
0xb2d9: jbe 0xb2e0
0xb2db: mov byte ptr [r14+r15],0x27
0xb2e0: lea rax,[r15+0x1]
0xb2e4: cmp r13,rax
0xb2e7: jbe 0xb2ef
0xb2e9: mov byte ptr [r14+r15+0x1],0x27
0xb2ef: add r15,0x2
0xb2f3: xor r10d,r10d
0xb2f6: xor r8d,r8d
0xb2f9: jmp 0xb28d
0xb300: cmp r15,0x1
0xb304: je 0xb169
0xb30a: mov rdi,qword ptr [rsp+0x10]
0xb30f: lea rcx,[rdi+r15]
0xb313: lea rdx,[rdi+r14+0x1]
0xb318: lea r8,[rcx+r14]
0xb31c: jmp 0xb32d
0xb320: add rdx,0x1
0xb324: cmp r8,rdx
0xb327: je 0xb169
0xb32d: movzx ecx,byte ptr [rdx]
0xb330: sub ecx,0x5b
0xb333: cmp cl,0x21
0xb336: ja 0xb320
0xb338: mov esi,0x1
0xb33d: shl rsi,cl
0xb340: mov rcx,rsi
0xb343: movabsq rsi,0x20000002b
0xb34d: test rcx,rsi
0xb350: je 0xb320
0xb352: mov r14,qword ptr [rsp+0x40]
0xb357: mov r13,qword ptr [rsp+0x70]
0xb35c: mov rbp,qword ptr [rsp+0x30]
0xb361: mov dword ptr [rsp+0x8],0x2
0xb369: cmp byte ptr [rsp+0xd],0x0
0xb36e: je 0xb380
0xb370: test al,al
0xb372: mov eax,0x4
0xb377: cmove eax,dword ptr [rsp+0x8]
0xb37c: mov dword ptr [rsp+0x8],eax
0xb380: sub rsp,0x8
0xb384: mov rcx,rbp
0xb387: mov rsi,r13
0xb38a: push qword ptr [rsp+0x68]
0xb38e: push qword ptr [rsp+0x78]
0xb392: mov rdi,r14
0xb395: push 0x0
0xb397: mov r9d,dword ptr [rsp+0x98]
0xb39f: mov r8d,dword ptr [rsp+0x28]
0xb3a4: mov rdx,qword ptr [rsp+0x30]
0xb3a9: and r9d,-0x3
0xb3ad: call 0xa7e0
0xb3b2: add rsp,0x20
0xb3b6: mov r15,rax
0xb3b9: mov rbx,qword ptr [rsp+0xa8]
0xb3c1: xor rbx,qword ptr fs:0x28
0xb3ca: mov rax,r15
0xb3cd: jne 0xb9d3
0xb3d3: add rsp,0xb8
0xb3da: pop rbx
0xb3db: pop rbp
0xb3dc: pop r12
0xb3de: pop r13
0xb3e0: pop r14
0xb3e2: pop r15
0xb3e4: ret 
0xb3e8: mov rbp,r11
0xb3eb: jmp 0xb369
0xb451: test r13,r13
0xb454: jne 0xb9ea
0xb45a: lea rax,[rip+0x16093]
0xb461: mov qword ptr [rsp+0x50],0x0
0xb46a: mov byte ptr [rsp+0xe],0x1
0xb46f: mov byte ptr [rsp+0x7c],0x0
0xb474: xor r12d,r12d
0xb477: mov byte ptr [rsp+0xf],0x0
0xb47c: mov qword ptr [rsp+0x18],0x1
0xb485: mov qword ptr [rsp+0x48],rax
0xb48a: mov r15d,0x1
0xb490: mov dword ptr [rsp+0x8],0x2
0xb498: jmp 0xa8b3
0xb6b0: movzx ebx,byte ptr [rsp+0xf]
0xb6b5: mov rbp,r11
0xb6b8: mov byte ptr [rsp+0xd],bl
0xb6bc: jmp 0xb369
0xb6c1: movzx edx,byte ptr [rsp+0xd]
0xb6c6: xor r12d,r12d
0xb6c9: jmp 0xb1d0
0xb6ce: xor r10d,r10d
0xb6d1: jmp 0xb28d
0xb6f1: mov r11,qword ptr [rsp+0x30]
0xb6f6: mov rsi,r14
0xb6f9: mov rcx,r13
0xb6fc: mov rax,rbx
0xb6ff: mov rdi,rbx
0xb702: movzx r8d,byte ptr [rsp+0x7d]
0xb708: movzx ebx,byte ptr [rsp+0x7e]
0xb70d: mov r9,qword ptr [rsp+0x88]
0xb715: cmp rsi,r11
0xb718: movzx r10d,byte ptr [rsp+0x7f]
0xb71e: mov r15,qword ptr [rsp+0x80]
0xb726: mov r14,qword ptr [rsp+0x40]
0xb72b: mov r13,qword ptr [rsp+0x70]
0xb730: jae 0xb758
0xb732: cmp byte ptr [rcx],0x0
0xb735: jne 0xb747
0xb737: jmp 0xb758
0xb740: cmp byte ptr [r9+rax],0x0
0xb745: je 0xb755
0xb747: add rax,0x1
0xb74b: lea rdx,[rbp+rax]
0xb750: cmp r11,rdx
0xb753: ja 0xb740
0xb755: mov rdi,rax
0xb758: movzx edx,byte ptr [rsp+0xd]
0xb75d: xor r12d,r12d
0xb760: jmp 0xb1c6
0xb765: mov rdi,rbx
0xb768: movzx r8d,byte ptr [rsp+0x7d]
0xb76e: movzx ebx,byte ptr [rsp+0x7e]
0xb773: movzx r10d,byte ptr [rsp+0x7f]
0xb779: mov r15,qword ptr [rsp+0x80]
0xb781: xor r12d,r12d
0xb784: mov r14,qword ptr [rsp+0x40]
0xb789: mov r13,qword ptr [rsp+0x70]
0xb78e: mov r11,qword ptr [rsp+0x30]
0xb793: movzx edx,byte ptr [rsp+0xd]
0xb798: jmp 0xb1c6
0xb7cb: mov eax,edx
0xb7cd: jmp 0xad27
0xb8da: mov eax,edx
0xb8dc: mov rbx,qword ptr [rsp+0x48]
0xb8e1: test rbx,rbx
0xb8e4: je 0xb912
0xb8e6: test al,al
0xb8e8: je 0xb912
0xb8ea: movzx ecx,byte ptr [rbx]
0xb8ed: mov rax,rbx
0xb8f0: test cl,cl
0xb8f2: je 0xb912
0xb8f4: mov rdx,r15
0xb8f7: sub rax,r15
0xb8fa: cmp r13,rdx
0xb8fd: jbe 0xb903
0xb8ff: mov byte ptr [r14+rdx],cl
0xb903: add rdx,0x1
0xb907: movzx ecx,byte ptr [rax+rdx]
0xb90b: test cl,cl
0xb90d: jne 0xb8fa
0xb90f: mov r15,rdx
0xb912: cmp r13,r15
0xb915: jbe 0xb3b9
0xb91b: mov byte ptr [r14+r15],0x0
0xb920: jmp 0xb3b9
0xb925: cmp dword ptr [rsp+0x8],0x2
0xb92a: movzx ebx,byte ptr [rsp+0xf]
0xb92f: mov rbp,r11
0xb932: sete al
0xb935: mov byte ptr [rsp+0xd],bl
0xb939: jmp 0xb369
0xb97d: sub rsp,0x8
0xb981: mov r8d,0x5
0xb987: mov rcx,r11
0xb98a: push qword ptr [rsp+0x68]
0xb98e: push qword ptr [rsp+0x78]
0xb992: mov rdi,r14
0xb995: push qword ptr [rsp+0x38]
0xb999: mov r9d,dword ptr [rsp+0x98]
0xb9a1: mov rdx,qword ptr [rsp+0x30]
0xb9a6: mov rsi,qword ptr [rsp+0x70]
0xb9ab: call 0xa7e0
0xb9b0: add rsp,0x20
0xb9b4: mov r15,rax
0xb9b7: jmp 0xb3b9
0xb9bc: movzx eax,byte ptr [rsp+0x7c]
0xb9c1: jmp 0xb8dc
0xb9c6: mov dword ptr [rsp+0x8],0x2
0xb9ce: jmp 0xb369
0xb9d3: call 0x2560
0xb9d8: mov byte ptr [rsp+0xd],0x0
0xb9dd: jmp 0xb451
0xb9ea: mov byte ptr [rsp+0xe],0x1
0xb9ef: xor eax,eax
0xb9f1: xor r12d,r12d
0xb9f4: mov qword ptr [rsp+0x50],0x0
0xb9fd: jmp 0xafa4
0xba14: nop 
0xba16: nop word ptr cs:[rax+rax]
0xbb0c: add rsp,0x20
0xbb10: mov r11,qword ptr [rsp+0x10]
0xbb15: cmp r11,rax
0xbb18: ja 0xbb81
0xbb1a: lea rsi,[rax+0x1]
0xbb1e: lea rax,[rip+0x21c69b]
0xbb25: cmp r12,rax
0xbb28: mov qword ptr [rbx],rsi
0xbb2b: je 0xbb3f
0xbb2d: mov rdi,r12
0xbb30: mov qword ptr [rsp+0x10],rsi
0xbb35: call 0x2a10
0xbb3a: mov rsi,qword ptr [rsp+0x10]
0xbb3f: mov rdi,rsi
0xbb42: mov qword ptr [rsp+0x10],rsi
0xbb47: call 0xc9e0
0xbb4c: sub rsp,0x8
0xbb50: mov qword ptr [rbx+0x8],rax
0xbb54: mov r8d,dword ptr [rbp]
0xbb58: push qword ptr [rbp+0x30]
0xbb5b: push qword ptr [rbp+0x28]
0xbb5e: mov rcx,r14
0xbb61: push r15
0xbb63: mov r9d,dword ptr [rsp+0x3c]
0xbb68: mov rdi,rax
0xbb6b: mov rdx,qword ptr [rsp+0x28]
0xbb70: mov rsi,qword ptr [rsp+0x30]
0xbb75: mov r12,rax
0xbb78: call 0xa7e0
0xbb7d: add rsp,0x20
0xbb81: mov eax,dword ptr [rsp+0x18]
0xbb85: mov dword ptr [r13],eax
0xbb89: add rsp,0x28
0xbb8d: mov rax,r12
0xbb90: pop rbx
0xbb91: pop rbp
0xbb92: pop r12
0xbb94: pop r13
0xbb96: pop r14
0xbb98: pop r15
0xbb9a: ret 
0xbbc1: call 0x2400
0xbbc6: call 0xcc30
0xbbcb: nop dword ptr [rax+rax]
0xbbd0: push r12
0xbbd2: push rbp
0xbbd3: push rbx
0xbbd4: mov rbx,rdi
0xbbd7: call 0x2410
0xbbdc: mov r12d,dword ptr [rax]
0xbbdf: mov rbp,rax
0xbbe2: lea rax,[rip+0x21c6d7]
0xbbe9: test rbx,rbx
0xbbec: mov esi,0x38
0xbbf1: cmove rbx,rax
0xbbf5: mov rdi,rbx
0xbbf8: call 0xcbe0
0xbbfd: mov dword ptr [rbp],r12d
0xbc01: pop rbx
0xbc02: pop rbp
0xbc03: pop r12
0xbc05: ret 
0xbc10: lea rax,[rip+0x21c6a9]
0xbc17: test rdi,rdi
0xbc1a: cmove rdi,rax
0xbc1e: mov eax,dword ptr [rdi]
0xbc20: ret 
0xbc30: lea rax,[rip+0x21c689]
0xbc37: test rdi,rdi
0xbc3a: cmove rdi,rax
0xbc3e: mov dword ptr [rdi],esi
0xbc40: ret 
0xbc50: lea rax,[rip+0x21c669]
0xbc57: test rdi,rdi
0xbc5a: mov ecx,esi
0xbc5c: cmove rdi,rax
0xbc60: mov eax,esi
0xbc62: and ecx,0x1f
0xbc65: shr al,0x5
0xbc68: movzx eax,al
0xbc6b: lea rdi,[rdi+rax*4+0x8]
0xbc70: mov esi,dword ptr [rdi]
0xbc72: mov eax,esi
0xbc74: shr eax,cl
0xbc76: xor edx,eax
0xbc78: and eax,0x1
0xbc7b: and edx,0x1
0xbc7e: shl edx,cl
0xbc80: xor edx,esi
0xbc82: mov dword ptr [rdi],edx
0xbc84: ret 
0xbc90: lea rax,[rip+0x21c629]
0xbc97: test rdi,rdi
0xbc9a: cmove rdi,rax
0xbc9e: mov eax,dword ptr [rdi+0x4]
0xbca1: mov dword ptr [rdi+0x4],esi
0xbca4: ret 
0xbcb0: lea rax,[rip+0x21c609]
0xbcb7: test rdi,rdi
0xbcba: cmove rdi,rax
0xbcbe: test rsi,rsi
0xbcc1: mov dword ptr [rdi],0xa
0xbcc7: je 0xbcd7
0xbcc9: test rdx,rdx
0xbccc: je 0xbcd7
0xbcce: mov qword ptr [rdi+0x28],rsi
0xbcd2: mov qword ptr [rdi+0x30],rdx
0xbcd6: ret 
0xbcd7: sub rsp,0x8
0xbcdb: call 0x2400
0xbce0: push r15
0xbce2: push r14
0xbce4: lea rax,[rip+0x21c5d5]
0xbceb: push r13
0xbced: push r12
0xbcef: mov r13,rdi
0xbcf2: push rbp
0xbcf3: push rbx
0xbcf4: mov rbx,r8
0xbcf7: mov r14,rsi
0xbcfa: mov r15,rdx
0xbcfd: sub rsp,0x18
0xbd01: test r8,r8
0xbd04: cmove rbx,rax
0xbd08: mov qword ptr [rsp+0x8],rcx
0xbd0d: call 0x2410
0xbd12: mov r12d,dword ptr [rax]
0xbd15: mov rbp,rax
0xbd18: lea rax,[rbx+0x8]
0xbd1c: sub rsp,0x8
0xbd20: mov r9d,dword ptr [rbx+0x4]
0xbd24: push qword ptr [rbx+0x30]
0xbd27: mov r8d,dword ptr [rbx]
0xbd2a: push qword ptr [rbx+0x28]
0xbd2d: mov rdx,r15
0xbd30: push rax
0xbd31: mov rcx,qword ptr [rsp+0x28]
0xbd36: mov rsi,r14
0xbd39: mov rdi,r13
0xbd3c: call 0xa7e0
0xbd41: mov dword ptr [rbp],r12d
0xbd45: add rsp,0x38
0xbd49: pop rbx
0xbd4a: pop rbp
0xbd4b: pop r12
0xbd4d: pop r13
0xbd4f: pop r14
0xbd51: pop r15
0xbd53: ret 
0xbd60: push r15
0xbd62: push r14
0xbd64: lea rax,[rip+0x21c555]
0xbd6b: push r13
0xbd6d: push r12
0xbd6f: mov r12,rdx
0xbd72: push rbp
0xbd73: push rbx
0xbd74: mov rbx,rcx
0xbd77: mov r14,rdi
0xbd7a: mov r15,rsi
0xbd7d: sub rsp,0x38
0xbd81: test rcx,rcx
0xbd84: cmove rbx,rax
0xbd88: xor ebp,ebp
0xbd8a: call 0x2410
0xbd8f: test r12,r12
0xbd92: mov r13,rax
0xbd95: mov eax,dword ptr [rax]
0xbd97: sete bpl
0xbd9b: or ebp,dword ptr [rbx+0x4]
0xbd9e: lea r10,[rbx+0x8]
0xbda2: sub rsp,0x8
0xbda6: mov r8d,dword ptr [rbx]
0xbda9: mov rcx,r15
0xbdac: mov dword ptr [rsp+0x14],eax
0xbdb0: push qword ptr [rbx+0x30]
0xbdb3: mov rdx,r14
0xbdb6: push qword ptr [rbx+0x28]
0xbdb9: push r10
0xbdbb: xor esi,esi
0xbdbd: mov r9d,ebp
0xbdc0: xor edi,edi
0xbdc2: mov qword ptr [rsp+0x40],r10
0xbdc7: call 0xa7e0
0xbdcc: lea rsi,[rax+0x1]
0xbdd0: mov qword ptr [rsp+0x48],rax
0xbdd5: add rsp,0x20
0xbdd9: mov rdi,rsi
0xbddc: mov qword ptr [rsp+0x18],rsi
0xbde1: call 0xc9e0
0xbde6: mov qword ptr [rsp+0x10],rax
0xbdeb: sub rsp,0x8
0xbdef: push qword ptr [rbx+0x30]
0xbdf2: push qword ptr [rbx+0x28]
0xbdf5: mov r10,qword ptr [rsp+0x38]
0xbdfa: mov r9d,ebp
0xbdfd: mov r8d,dword ptr [rbx]
0xbe00: mov rcx,r15
0xbe03: mov rdx,r14
0xbe06: mov rdi,rax
0xbe09: push r10
0xbe0b: mov rsi,qword ptr [rsp+0x38]
0xbe10: call 0xa7e0
0xbe15: mov eax,dword ptr [rsp+0x2c]
0xbe19: add rsp,0x20
0xbe1d: test r12,r12
0xbe20: mov dword ptr [r13],eax
0xbe24: je 0xbe2f
0xbe26: mov r11,qword ptr [rsp+0x28]
0xbe2b: mov qword ptr [r12],r11
0xbe2f: mov rax,qword ptr [rsp+0x10]
0xbe34: add rsp,0x38
0xbe38: pop rbx
0xbe39: pop rbp
0xbe3a: pop r12
0xbe3c: pop r13
0xbe3e: pop r14
0xbe40: pop r15
0xbe42: ret 
0xbe50: mov rcx,rdx
0xbe53: xor edx,edx
0xbe55: jmp 0xbd60
0xbe60: mov eax,dword ptr [rip+0x21c212]
0xbe66: push r12
0xbe68: mov r12,qword ptr [rip+0x21c211]
0xbe6f: push rbp
0xbe70: push rbx
0xbe71: cmp eax,0x1
0xbe74: jle 0xbea1
0xbe76: sub eax,0x2
0xbe79: lea rbx,[r12+0x18]
0xbe7e: shl rax,0x4
0xbe82: lea rbp,[r12+rax+0x28]
0xbe87: nop word ptr [rax+rax]
0xbe90: mov rdi,qword ptr [rbx]
0xbe93: add rbx,0x10
0xbe97: call 0x2a10
0xbe9c: cmp rbx,rbp
0xbe9f: jne 0xbe90
0xbea1: mov rdi,qword ptr [r12+0x8]
0xbea6: lea rbx,[rip+0x21c313]
0xbead: cmp rdi,rbx
0xbeb0: je 0xbec9
0xbeb2: call 0x2a10
0xbeb7: mov qword ptr [rip+0x21c1ce],0x100
0xbec2: mov qword ptr [rip+0x21c1cf],rbx
0xbec9: lea rbx,[rip+0x21c1c0]
0xbed0: cmp r12,rbx
0xbed3: je 0xbee4
0xbed5: mov rdi,r12
0xbed8: call 0x2a10
0xbedd: mov qword ptr [rip+0x21c19c],rbx
0xbee4: pop rbx
0xbee5: mov dword ptr [rip+0x21c189],0x1
0xbeef: pop rbp
0xbef0: pop r12
0xbef2: ret 
0xbf00: lea rcx,[rip+0x21c3b9]
0xbf07: mov rdx,-0x1
0xbf0e: jmp 0xba20
0xbf20: lea rcx,[rip+0x21c399]
0xbf27: jmp 0xba20
0xbf30: lea rcx,[rip+0x21c389]
0xbf37: mov rsi,rdi
0xbf3a: mov rdx,-0x1
0xbf41: xor edi,edi
0xbf43: jmp 0xba20
0xbf50: lea rcx,[rip+0x21c369]
0xbf57: mov rdx,rsi
0xbf5a: mov rsi,rdi
0xbf5d: xor edi,edi
0xbf5f: jmp 0xba20
0xbfdf: mov rcx,qword ptr [rsp+0x38]
0xbfe4: xor rcx,qword ptr fs:0x28
0xbfed: jne 0xbff9
0xbfef: add rsp,0x48
0xbff3: ret 
0xbff4: call 0x2400
0xbff9: call 0x2560
0xbffe: nop 
0xc000: sub rsp,0x48
0xc004: mov rax,rdx
0xc007: mov rdx,rcx
0xc00a: mov rcx,qword ptr fs:0x28
0xc013: mov qword ptr [rsp+0x38],rcx
0xc018: xor ecx,ecx
0xc01a: cmp esi,0xa
0xc01d: je 0xc080
0xc01f: mov dword ptr [rsp],esi
0xc022: mov rcx,rsp
0xc025: mov rsi,rax
0xc028: mov qword ptr [rsp+0x4],0x0
0xc031: mov qword ptr [rsp+0xc],0x0
0xc03a: mov qword ptr [rsp+0x14],0x0
0xc043: mov qword ptr [rsp+0x1c],0x0
0xc04c: mov qword ptr [rsp+0x24],0x0
0xc055: mov qword ptr [rsp+0x2c],0x0
0xc05e: mov dword ptr [rsp+0x34],0x0
0xc066: call 0xba20
0xc06b: mov rdx,qword ptr [rsp+0x38]
0xc070: xor rdx,qword ptr fs:0x28
0xc079: jne 0xc085
0xc07b: add rsp,0x48
0xc07f: ret 
0xc080: call 0x2400
0xc085: call 0x2560
0xc08a: nop word ptr [rax+rax]
0xc0a0: mov rcx,rdx
0xc0a3: mov rdx,rsi
0xc0a6: mov esi,edi
0xc0a8: xor edi,edi
0xc0aa: jmp 0xc000
0xc0b0: sub rsp,0x48
0xc0b4: mov ecx,edx
0xc0b6: mov rax,qword ptr fs:0x28
0xc0bf: mov qword ptr [rsp+0x38],rax
0xc0c4: xor eax,eax
0xc0c6: mov rax,qword ptr [rip+0x21c223]
0xc0cd: mov r8,rsp
0xc0d0: and ecx,0x1f
0xc0d3: movdqa xmm0,xmmword ptr [rip+0x21c1e5]
0xc0db: mov qword ptr [rsp+0x30],rax
0xc0e0: mov eax,edx
0xc0e2: movaps xmmword ptr [rsp],xmm0
0xc0e6: shr al,0x5
0xc0e9: movzx eax,al
0xc0ec: lea r9,[r8+rax*4+0x8]
0xc0f1: movdqa xmm0,xmmword ptr [rip+0x21c1d7]
0xc0f9: movaps xmmword ptr [rsp+0x10],xmm0
0xc0fe: movdqa xmm0,xmmword ptr [rip+0x21c1da]
0xc106: movaps xmmword ptr [rsp+0x20],xmm0
0xc10b: mov edx,dword ptr [r9]
0xc10e: mov eax,edx
0xc110: shr eax,cl
0xc112: not eax
0xc114: and eax,0x1
0xc117: shl eax,cl
0xc119: mov rcx,r8
0xc11c: xor eax,edx
0xc11e: mov rdx,rsi
0xc121: mov rsi,rdi
0xc124: mov dword ptr [r9],eax
0xc127: xor edi,edi
0xc129: call 0xba20
0xc12e: mov rsi,qword ptr [rsp+0x38]
0xc133: xor rsi,qword ptr fs:0x28
0xc13c: jne 0xc143
0xc13e: add rsp,0x48
0xc142: ret 
0xc143: call 0x2560
0xc148: nop dword ptr [rax+rax]
0xc150: movsx edx,sil
0xc154: mov rsi,-0x1
0xc15b: jmp 0xc0b0
0xc160: mov edx,0x3a
0xc165: mov rsi,-0x1
0xc16c: jmp 0xc0b0
0xc180: mov edx,0x3a
0xc185: jmp 0xc0b0
0xc1ff: mov rcx,qword ptr [rsp+0x38]
0xc204: xor rcx,qword ptr fs:0x28
0xc20d: jne 0xc219
0xc20f: add rsp,0x48
0xc213: ret 
0xc214: call 0x2400
0xc219: call 0x2560
0xc21e: nop 
0xc220: sub rsp,0x48
0xc224: mov r9,rcx
0xc227: mov rcx,qword ptr [rip+0x21c0c2]
0xc22e: movdqa xmm0,xmmword ptr [rip+0x21c08a]
0xc236: mov rax,qword ptr fs:0x28
0xc23f: mov qword ptr [rsp+0x38],rax
0xc244: xor eax,eax
0xc246: movaps xmmword ptr [rsp],xmm0
0xc24a: test rsi,rsi
0xc24d: mov qword ptr [rsp+0x30],rcx
0xc252: mov dword ptr [rsp],0xa
0xc259: movdqa xmm0,xmmword ptr [rip+0x21c06f]
0xc261: movaps xmmword ptr [rsp+0x10],xmm0
0xc266: movdqa xmm0,xmmword ptr [rip+0x21c072]
0xc26e: movaps xmmword ptr [rsp+0x20],xmm0
0xc273: je 0xc2a7
0xc275: test rdx,rdx
0xc278: je 0xc2a7
0xc27a: mov qword ptr [rsp+0x28],rsi
0xc27f: mov qword ptr [rsp+0x30],rdx
0xc284: mov rcx,rsp
0xc287: mov rdx,r8
0xc28a: mov rsi,r9
0xc28d: call 0xba20
0xc292: mov rdi,qword ptr [rsp+0x38]
0xc297: xor rdi,qword ptr fs:0x28
0xc2a0: jne 0xc2ac
0xc2a2: add rsp,0x48
0xc2a6: ret 
0xc2a7: call 0x2400
0xc2ac: call 0x2560
0xc2b1: nop dword ptr [rax+rax]
0xc2b6: nop word ptr cs:[rax+rax]
0xc2c0: mov r8,-0x1
0xc2c7: jmp 0xc220
0xc2d0: mov rcx,rdx
0xc2d3: mov r8,-0x1
0xc2da: mov rdx,rsi
0xc2dd: mov rsi,rdi
0xc2e0: xor edi,edi
0xc2e2: jmp 0xc220
0xc2f0: mov r8,rcx
0xc2f3: mov rcx,rdx
0xc2f6: mov rdx,rsi
0xc2f9: mov rsi,rdi
0xc2fc: xor edi,edi
0xc2fe: jmp 0xc220
0xc310: lea rcx,[rip+0x21bd29]
0xc317: jmp 0xba20
0xc320: lea rcx,[rip+0x21bd19]
0xc327: mov rdx,rsi
0xc32a: mov rsi,rdi
0xc32d: xor edi,edi
0xc32f: jmp 0xba20
0xc380: push rbp
0xc381: push rbx
0xc382: mov rdx,rsi
0xc385: mov rbx,rsi
0xc388: xor esi,esi
0xc38a: mov rbp,rdi
0xc38d: sub rsp,0x8
0xc391: call 0x2670
0xc396: mov rdx,rax
0xc399: sub rdx,rbp
0xc39c: add rdx,0x1
0xc3a0: test rax,rax
0xc3a3: mov rax,rbx
0xc3a6: cmovne rax,rdx
0xc3aa: add rsp,0x8
0xc3ae: pop rbx
0xc3af: pop rbp
0xc3b0: ret 
0xc3c0: push r15
0xc3c2: push r14
0xc3c4: push r13
0xc3c6: push r12
0xc3c8: mov r12,r9
0xc3cb: push rbp
0xc3cc: push rbx
0xc3cd: mov rbp,rdi
0xc3d0: mov rbx,r8
0xc3d3: sub rsp,0x28
0xc3d7: test rsi,rsi
0xc3da: je 0xc4f8
0xc3e0: mov r8,rdx
0xc3e3: lea rdx,[rip+0x15b9e]
0xc3ea: mov r9,rcx
0xc3ed: xor eax,eax
0xc3ef: mov rcx,rsi
0xc3f2: mov esi,0x1
0xc3f7: call 0x2970
0xc3fc: lea rsi,[rip+0x15b98]
0xc403: xor edi,edi
0xc405: mov edx,0x5
0xc40a: call 0x2510
0xc40f: lea rdx,[rip+0x15eaa]
0xc416: mov rcx,rax
0xc419: mov r8d,0x7e3
0xc41f: mov esi,0x1
0xc424: mov rdi,rbp
0xc427: xor eax,eax
0xc429: call 0x2970
0xc42e: lea rsi,[rip+0x15bf3]
0xc435: xor edi,edi
0xc437: mov edx,0x5
0xc43c: call 0x2510
0xc441: mov rsi,rbp
0xc444: mov rdi,rax
0xc447: call 0x26a0
0xc44c: cmp r12,0x9
0xc450: ja 0xc790
0xc456: lea rdx,[rip+0x15e27]
0xc45d: movsxd rax,dword ptr [rdx+r12*4]
0xc461: add rax,rdx
0xc464: jmp rax
0xc4b4: mov r9,qword ptr [rsp+0x18]
0xc4b9: mov rdx,rax
0xc4bc: mov rcx,rbx
0xc4bf: mov esi,0x1
0xc4c4: mov rdi,rbp
0xc4c7: xor eax,eax
0xc4c9: push r9
0xc4cb: push r13
0xc4cd: push r12
0xc4cf: push r15
0xc4d1: push r14
0xc4d3: mov r9,qword ptr [rsp+0x30]
0xc4d8: mov r8,qword ptr [rsp+0x38]
0xc4dd: call 0x2970
0xc4e2: add rsp,0x30
0xc4e6: add rsp,0x28
0xc4ea: pop rbx
0xc4eb: pop rbp
0xc4ec: pop r12
0xc4ee: pop r13
0xc4f0: pop r14
0xc4f2: pop r15
0xc4f4: ret 
0xc4f8: mov r8,rcx
0xc4fb: mov rcx,rdx
0xc4fe: lea rdx,[rip+0x15a8f]
0xc505: mov esi,0x1
0xc50a: xor eax,eax
0xc50c: call 0x2970
0xc511: jmp 0xc3fc
0xc562: xor edi,edi
0xc564: call 0x2510
0xc569: mov r10,qword ptr [rsp+0x18]
0xc56e: push r10
0xc570: jmp 0xc4b4
0xc70d: push r12
0xc70f: push r15
0xc711: push r14
0xc713: mov r8,qword ptr [rsp+0x20]
0xc718: mov rcx,rbx
0xc71b: mov rdx,rax
0xc71e: mov rdi,rbp
0xc721: mov esi,0x1
0xc726: xor eax,eax
0xc728: call 0x2970
0xc72d: add rsp,0x20
0xc731: add rsp,0x28
0xc735: pop rbx
0xc736: pop rbp
0xc737: pop r12
0xc739: pop r13
0xc73b: pop r14
0xc73d: pop r15
0xc73f: ret 
0xc779: push r12
0xc77b: push r15
0xc77d: push r14
0xc77f: mov r9,qword ptr [rsp+0x28]
0xc784: jmp 0xc713
0xc790: mov r10,qword ptr [rbx+0x40]
0xc794: mov r9,qword ptr [rbx+0x38]
0xc798: mov edx,0x5
0xc79d: mov rax,qword ptr [rbx+0x10]
0xc7a1: mov r8,qword ptr [rbx+0x8]
0xc7a5: lea rsi,[rip+0x15a54]
0xc7ac: mov r13,qword ptr [rbx+0x30]
0xc7b0: mov r12,qword ptr [rbx+0x28]
0xc7b4: mov r15,qword ptr [rbx+0x20]
0xc7b8: mov r14,qword ptr [rbx+0x18]
0xc7bc: mov qword ptr [rsp+0x18],r10
0xc7c1: mov qword ptr [rsp+0x10],r9
0xc7c6: mov qword ptr [rsp],rax
0xc7ca: mov qword ptr [rsp+0x8],r8
0xc7cf: mov rbx,qword ptr [rbx]
0xc7d2: jmp 0xc562
0xc7e0: xor r9d,r9d
0xc7e3: cmp qword ptr [r8],0x0
0xc7e7: je 0xc7fb
0xc7e9: nop dword ptr [rax]
0xc7f0: add r9,0x1
0xc7f4: cmp qword ptr [r8+r9*8],0x0
0xc7f9: jne 0xc7f0
0xc7fb: jmp 0xc3c0
0xc800: sub rsp,0x68
0xc804: mov r10,r8
0xc807: xor r9d,r9d
0xc80a: mov rax,qword ptr fs:0x28
0xc813: mov qword ptr [rsp+0x58],rax
0xc818: xor eax,eax
0xc81a: mov r8,rsp
0xc81d: nop dword ptr [rax]
0xc820: mov eax,dword ptr [r10]
0xc823: cmp eax,0x2f
0xc826: ja 0xc86a
0xc828: mov r11d,eax
0xc82b: add r11,qword ptr [r10+0x10]
0xc82f: add eax,0x8
0xc832: mov dword ptr [r10],eax
0xc835: mov rax,qword ptr [r11]
0xc838: test rax,rax
0xc83b: mov qword ptr [r8+r9*8],rax
0xc83f: je 0xc84b
0xc841: add r9,0x1
0xc845: cmp r9,0xa
0xc849: jne 0xc820
0xc84b: call 0xc3c0
0xc850: mov rax,qword ptr [rsp+0x58]
0xc855: xor rax,qword ptr fs:0x28
0xc85e: jne 0xc865
0xc860: add rsp,0x68
0xc864: ret 
0xc865: call 0x2560
0xc86a: mov r11,qword ptr [r10+0x8]
0xc86e: lea rax,[r11+0x8]
0xc872: mov qword ptr [r10+0x8],rax
0xc876: jmp 0xc835
0xc880: push rbp
0xc881: push rbx
0xc882: mov r10d,0x20
0xc888: xor r11d,r11d
0xc88b: sub rsp,0xb8
0xc892: mov rax,qword ptr fs:0x28
0xc89b: mov qword ptr [rsp+0x78],rax
0xc8a0: xor eax,eax
0xc8a2: lea rax,[rsp+0xd0]
0xc8aa: mov qword ptr [rsp+0xa0],r8
0xc8b2: lea rbx,[rsp+0xd0]
0xc8ba: lea r8,[rsp+0x20]
0xc8bf: mov qword ptr [rsp+0xa8],r9
0xc8c7: mov dword ptr [rsp+0x8],0x20
0xc8cf: mov qword ptr [rsp+0x10],rax
0xc8d4: lea rax,[rsp+0x80]
0xc8dc: xor r9d,r9d
0xc8df: mov qword ptr [rsp+0x18],rax
0xc8e4: mov rbp,rax
0xc8e7: nop word ptr [rax+rax]
0xc8f0: cmp r10d,0x2f
0xc8f4: ja 0xc94c
0xc8f6: mov eax,r10d
0xc8f9: mov r11d,0x1
0xc8ff: add r10d,0x8
0xc903: add rax,rbp
0xc906: mov rax,qword ptr [rax]
0xc909: test rax,rax
0xc90c: mov qword ptr [r8+r9*8],rax
0xc910: je 0xc91c
0xc912: add r9,0x1
0xc916: cmp r9,0xa
0xc91a: jne 0xc8f0
0xc91c: test r11b,r11b
0xc91f: jne 0xc945
0xc921: call 0xc3c0
0xc926: mov rax,qword ptr [rsp+0x78]
0xc92b: xor rax,qword ptr fs:0x28
0xc934: jne 0xc940
0xc936: add rsp,0xb8
0xc93d: pop rbx
0xc93e: pop rbp
0xc93f: ret 
0xc940: call 0x2560
0xc945: mov dword ptr [rsp+0x8],r10d
0xc94a: jmp 0xc921
0xc94c: mov rax,rbx
0xc94f: add rbx,0x8
0xc953: jmp 0xc906
0xc960: push rbx
0xc961: lea rsi,[rip+0x1567a]
0xc968: mov edx,0x5
0xc96d: xor edi,edi
0xc96f: call 0x2510
0xc974: lea rdx,[rip+0x1567c]
0xc97b: mov rsi,rax
0xc97e: mov edi,0x1
0xc983: xor eax,eax
0xc985: call 0x2850
0xc98a: lea rsi,[rip+0x1567c]
0xc991: mov edx,0x5
0xc996: xor edi,edi
0xc998: call 0x2510
0xc99d: lea rcx,[rip+0x14304]
0xc9a4: lea rdx,[rip+0x1315c]
0xc9ab: mov rsi,rax
0xc9ae: mov edi,0x1
0xc9b3: xor eax,eax
0xc9b5: call 0x2850
0xc9ba: mov rbx,qword ptr [rip+0x21b6e7]
0xc9c1: lea rsi,[rip+0x15878]
0xc9c8: xor edi,edi
0xc9ca: mov edx,0x5
0xc9cf: call 0x2510
0xc9d4: mov rsi,rbx
0xc9d7: mov rdi,rax
0xc9da: pop rbx
0xc9db: jmp 0x26a0
0xc9ee: test rbx,rbx
0xc9f1: jne 0xc9f5
0xc9f5: call 0xcc30
0xc9fa: nop word ptr [rax+rax]
0xca00: mov rax,rdi
0xca03: mul rsi
0xca06: mov rdi,rax
0xca09: seto al
0xca0c: test rdi,rdi
0xca0f: js 0xca1b
0xca11: movzx eax,al
0xca14: test rax,rax
0xca17: jne 0xca1b
0xca19: jmp 0xc9e0
0xca1b: sub rsp,0x8
0xca1f: call 0xcc30
0xca24: nop 
0xca26: nop word ptr cs:[rax+rax]
0xca30: jmp 0xc9e0
0xca5b: test rbx,rbx
0xca5e: jne 0xca71
0xca71: call 0xcc30
0xca76: nop word ptr cs:[rax+rax]
0xca80: mov rax,rsi
0xca83: mul rdx
0xca86: mov rsi,rax
0xca89: seto al
0xca8c: test rsi,rsi
0xca8f: js 0xca9b
0xca91: movzx eax,al
0xca94: test rax,rax
0xca97: jne 0xca9b
0xca99: jmp 0xca40
0xca9b: sub rsp,0x8
0xca9f: call 0xcc30
0xcaa4: nop 
0xcaa6: nop word ptr cs:[rax+rax]
0xcab0: test rdi,rdi
0xcab3: mov r9,rdx
0xcab6: mov rcx,qword ptr [rsi]
0xcab9: je 0xcaf0
0xcabb: xor edx,edx
0xcabd: movabsq rax,0x5555555555555554
0xcac7: div r9
0xcaca: cmp rax,rcx
0xcacd: jbe 0xcb0b
0xcacf: mov rax,rcx
0xcad2: shr rax, 1
0xcad5: lea rcx,[rax+rcx+0x1]
0xcada: mov qword ptr [rsi],rcx
0xcadd: imul rcx,r9
0xcae1: mov rsi,rcx
0xcae4: jmp 0xca40
0xcaf0: test rcx,rcx
0xcaf3: je 0xcb18
0xcaf5: mov rax,rcx
0xcaf8: mul r9
0xcafb: seto dl
0xcafe: test rax,rax
0xcb01: movzx edx,dl
0xcb04: js 0xcb0b
0xcb06: test rdx,rdx
0xcb09: je 0xcada
0xcb0b: sub rsp,0x8
0xcb0f: call 0xcc30
0xcb14: nop dword ptr [rax]
0xcb18: xor edx,edx
0xcb1a: mov eax,0x80
0xcb1f: xor r8d,r8d
0xcb22: div r9
0xcb25: test rax,rax
0xcb28: sete r8b
0xcb2c: lea rcx,[r8+rax]
0xcb30: jmp 0xcaf5
0xcb40: test rdi,rdi
0xcb43: mov rax,qword ptr [rsi]
0xcb46: je 0xcb70
0xcb48: movabsq rdx,0x5555555555555553
0xcb52: cmp rax,rdx
0xcb55: ja 0xcb81
0xcb57: mov rdx,rax
0xcb5a: shr rdx, 1
0xcb5d: lea rax,[rdx+rax+0x1]
0xcb62: mov qword ptr [rsi],rax
0xcb65: mov rsi,rax
0xcb68: jmp 0xca40
0xcb70: test rax,rax
0xcb73: mov edx,0x80
0xcb78: cmove rax,rdx
0xcb7c: test rax,rax
0xcb7f: jns 0xcb62
0xcb81: sub rsp,0x8
0xcb85: call 0xcc30
0xcb8a: nop word ptr [rax+rax]
0xcbde: nop 
0xcc60: call 0x2400
0xcc65: nop word ptr cs:[rax+rax]
0xcc6f: nop 
0xcc9f: nop 
0xccbf: nop 
0xccf0: push r15
0xccf2: push r14
0xccf4: push r13
0xccf6: push r12
0xccf8: push rbp
0xccf9: push rbx
0xccfa: sub rsp,0x28
0xccfe: mov rax,qword ptr fs:0x28
0xcd07: mov qword ptr [rsp+0x18],rax
0xcd0c: xor eax,eax
0xcd0e: cmp edx,0x24
0xcd11: ja 0xd37f
0xcd17: lea rax,[rsp+0x10]
0xcd1c: test rsi,rsi
0xcd1f: mov rbx,rsi
0xcd22: mov r12,rdi
0xcd25: mov ebp,edx
0xcd27: mov r14,rcx
0xcd2a: cmove rbx,rax
0xcd2e: mov r15,r8
0xcd31: call 0x2410
0xcd36: xor ecx,ecx
0xcd38: mov edx,ebp
0xcd3a: mov dword ptr [rax],0x0
0xcd40: mov rsi,rbx
0xcd43: mov rdi,r12
0xcd46: mov r13,rax
0xcd49: call 0x24d0
0xcd4e: mov rcx,qword ptr [rbx]
0xcd51: mov rbp,rax
0xcd54: cmp rcx,r12
0xcd57: je 0xcdb8
0xcd59: mov eax,dword ptr [r13]
0xcd5d: test eax,eax
0xcd5f: jne 0xcda0
0xcd61: xor r12d,r12d
0xcd64: test r15,r15
0xcd67: je 0xcd76
0xcd69: movzx r13d,byte ptr [rcx]
0xcd6d: test r13b,r13b
0xcd70: jne 0xcdf3
0xcd76: mov qword ptr [r14],rbp
0xcd79: mov rdi,qword ptr [rsp+0x18]
0xcd7e: xor rdi,qword ptr fs:0x28
0xcd87: mov eax,r12d
0xcd8a: jne 0xd39e
0xcd90: add rsp,0x28
0xcd94: pop rbx
0xcd95: pop rbp
0xcd96: pop r12
0xcd98: pop r13
0xcd9a: pop r14
0xcd9c: pop r15
0xcd9e: ret 
0xcda0: cmp eax,0x22
0xcda3: mov r12d,0x4
0xcda9: jne 0xcd79
0xcdab: mov r12d,0x1
0xcdb1: jmp 0xcd64
0xcdb8: test r15,r15
0xcdbb: je 0xd250
0xcdc1: movzx r13d,byte ptr [rcx]
0xcdc5: mov qword ptr [rsp+0x8],rcx
0xcdca: mov r12d,0x4
0xcdd0: test r13b,r13b
0xcdd3: je 0xcd79
0xcdd5: movsx esi,r13b
0xcdd9: mov rdi,r15
0xcddc: call 0x25a0
0xcde1: test rax,rax
0xcde4: mov rcx,qword ptr [rsp+0x8]
0xcde9: je 0xcd79
0xcdeb: mov ebp,0x1
0xcdf0: xor r12d,r12d
0xcdf3: movsx esi,r13b
0xcdf7: mov rdi,r15
0xcdfa: mov qword ptr [rsp+0x8],rcx
0xcdff: call 0x25a0
0xce04: test rax,rax
0xce07: mov rcx,qword ptr [rsp+0x8]
0xce0c: je 0xce68
0xce0e: lea eax,[r13-0x45]
0xce12: cmp al,0x2f
0xce14: ja 0xce78
0xce16: movabsq rdx,0x814400308945
0xce20: btq rdx,rax
0xce24: jae 0xce78
0xce26: mov esi,0x30
0xce2b: mov rdi,r15
0xce2e: mov qword ptr [rsp+0x8],rcx
0xce33: call 0x25a0
0xce38: test rax,rax
0xce3b: mov rcx,qword ptr [rsp+0x8]
0xce40: je 0xce78
0xce42: movzx eax,byte ptr [rcx+0x1]
0xce46: cmp al,0x44
0xce48: je 0xce56
0xce4a: cmp al,0x69
0xce4c: je 0xd338
0xce52: cmp al,0x42
0xce54: jne 0xce78
0xce56: mov edi,0x2
0xce5b: mov eax,0x3e8
0xce60: jmp 0xce82
0xce68: mov qword ptr [r14],rbp
0xce6b: or r12d,0x2
0xce6f: jmp 0xcd79
0xce78: mov edi,0x1
0xce7d: mov eax,0x400
0xce82: sub r13d,0x42
0xce86: cmp r13b,0x35
0xce8a: ja 0xce68
0xce8c: lea rsi,[rip+0x154f5]
0xce93: movzx r13d,r13b
0xce97: movsxd rdx,dword ptr [rsi+r13*4]
0xce9b: add rdx,rsi
0xce9e: jmp rdx
0xd250: mov r12d,0x4
0xd256: jmp 0xcd79
0xd338: xor edi,edi
0xd33a: cmp byte ptr [rcx+0x2],0x42
0xd33e: mov eax,0x400
0xd343: sete dil
0xd347: lea edi,[rdi+rdi+0x1]
0xd34b: jmp 0xce82
0xd37f: lea rcx,[rip+0x150da]
0xd386: lea rsi,[rip+0x14fb3]
0xd38d: lea rdi,[rip+0x14fcc]
0xd394: mov edx,0x54
0xd399: call 0x2600
0xd39e: call 0x2560
0xd3a3: nop word ptr cs:[rax+rax]
0xd3ad: nop dword ptr [rax]
0xd3b0: push r15
0xd3b2: push r14
0xd3b4: push r13
0xd3b6: push r12
0xd3b8: push rbp
0xd3b9: push rbx
0xd3ba: sub rsp,0x28
0xd3be: mov rax,qword ptr fs:0x28
0xd3c7: mov qword ptr [rsp+0x18],rax
0xd3cc: xor eax,eax
0xd3ce: cmp edx,0x24
0xd3d1: ja 0xd735
0xd3d7: lea rax,[rsp+0x10]
0xd3dc: mov r15,rsi
0xd3df: test rsi,rsi
0xd3e2: mov rbp,rdi
0xd3e5: mov dword ptr [rsp+0x8],edx
0xd3e9: mov r14,rcx
0xd3ec: mov r13,r8
0xd3ef: cmove r15,rax
0xd3f3: call 0x2410
0xd3f8: mov dword ptr [rax],0x0
0xd3fe: mov r12,rax
0xd401: movzx ebx,byte ptr [rbp]
0xd405: call 0x29f0
0xd40a: mov edx,dword ptr [rsp+0x8]
0xd40e: mov rsi,qword ptr [rax]
0xd411: mov rax,rbp
0xd414: jmp 0xd427
0xd420: add rax,0x1
0xd424: movzx ebx,byte ptr [rax]
0xd427: movzx ecx,bl
0xd42a: test byte ptr [rsi+rcx*2+0x1],0x20
0xd42f: jne 0xd420
0xd431: cmp bl,0x2d
0xd434: je 0xd488
0xd436: mov rsi,r15
0xd439: mov rdi,rbp
0xd43c: call 0x2920
0xd441: mov rcx,qword ptr [r15]
0xd444: mov rbx,rax
0xd447: cmp rcx,rbp
0xd44a: je 0xd478
0xd44c: mov eax,dword ptr [r12]
0xd450: test eax,eax
0xd452: je 0xd4b8
0xd454: cmp eax,0x22
0xd457: mov ebp,0x1
0xd45c: jne 0xd488
0xd45e: test r13,r13
0xd461: je 0xd46c
0xd463: movzx r12d,byte ptr [rcx]
0xd467: test r12b,r12b
0xd46a: jne 0xd4e7
0xd46c: mov qword ptr [r14],rbx
0xd46f: jmp 0xd48d
0xd478: test r13,r13
0xd47b: mov qword ptr [rsp+0x8],rcx
0xd480: jne 0xd4c0
0xd482: nop word ptr [rax+rax]
0xd488: mov ebp,0x4
0xd48d: mov rdi,qword ptr [rsp+0x18]
0xd492: xor rdi,qword ptr fs:0x28
0xd49b: mov eax,ebp
0xd49d: jne 0xd730
0xd4a3: add rsp,0x28
0xd4a7: pop rbx
0xd4a8: pop rbp
0xd4a9: pop r12
0xd4ab: pop r13
0xd4ad: pop r14
0xd4af: pop r15
0xd4b1: ret 
0xd4b8: xor ebp,ebp
0xd4ba: jmp 0xd45e
0xd4c0: movzx r12d,byte ptr [rbp]
0xd4c5: test r12b,r12b
0xd4c8: je 0xd488
0xd4ca: movsx esi,r12b
0xd4ce: mov rdi,r13
0xd4d1: xor ebp,ebp
0xd4d3: call 0x25a0
0xd4d8: test rax,rax
0xd4db: mov ebx,0x1
0xd4e0: mov rcx,qword ptr [rsp+0x8]
0xd4e5: je 0xd488
0xd4e7: movsx esi,r12b
0xd4eb: mov rdi,r13
0xd4ee: mov qword ptr [rsp+0x8],rcx
0xd4f3: call 0x25a0
0xd4f8: test rax,rax
0xd4fb: mov rcx,qword ptr [rsp+0x8]
0xd500: je 0xd5cc
0xd506: lea eax,[r12-0x45]
0xd50b: cmp al,0x2f
0xd50d: ja 0xd560
0xd50f: movabsq rdx,0x814400308945
0xd519: btq rdx,rax
0xd51d: jae 0xd560
0xd51f: mov esi,0x30
0xd524: mov rdi,r13
0xd527: mov qword ptr [rsp+0x8],rcx
0xd52c: call 0x25a0
0xd531: test rax,rax
0xd534: mov rcx,qword ptr [rsp+0x8]
0xd539: je 0xd560
0xd53b: movzx eax,byte ptr [rcx+0x1]
0xd53f: cmp al,0x44
0xd541: je 0xd54f
0xd543: cmp al,0x69
0xd545: je 0xd718
0xd54b: cmp al,0x42
0xd54d: jne 0xd560
0xd54f: mov edi,0x2
0xd554: mov esi,0x3e8
0xd559: jmp 0xd56a
0xd560: mov edi,0x1
0xd565: mov esi,0x400
0xd56a: sub r12d,0x42
0xd56e: cmp r12b,0x35
0xd572: ja 0xd5cc
0xd574: lea rdx,[rip+0x14ef5]
0xd57b: movzx r12d,r12b
0xd57f: movsxd rax,dword ptr [rdx+r12*4]
0xd583: add rax,rdx
0xd586: jmp rax
0xd5b0: movsxd rdi,edi
0xd5b3: mov eax,ebp
0xd5b5: add rcx,rdi
0xd5b8: or eax,0x2
0xd5bb: mov qword ptr [r15],rcx
0xd5be: cmp byte ptr [rcx],0x0
0xd5c1: mov qword ptr [r14],rbx
0xd5c4: cmovne ebp,eax
0xd5c7: jmp 0xd48d
0xd5cc: mov qword ptr [r14],rbx
0xd5cf: or ebp,0x2
0xd5d2: jmp 0xd48d
0xd625: or ebp,r9d
0xd628: jmp 0xd5b0
0xd6bc: mov rax,rbx
0xd6bf: mul rsi
0xd6c2: mov rbx,rax
0xd6c5: jo 0xd754
0xd6cb: sub r8d,0x1
0xd6cf: jne 0xd6bc
0xd6d1: jmp 0xd625
0xd718: xor edi,edi
0xd71a: cmp byte ptr [rcx+0x2],0x42
0xd71e: mov esi,0x400
0xd723: sete dil
0xd727: lea edi,[rdi+rdi+0x1]
0xd72b: jmp 0xd56a
0xd730: call 0x2560
0xd735: lea rcx,[rip+0x14e0c]
0xd73c: lea rsi,[rip+0x14bfd]
0xd743: lea rdi,[rip+0x14c16]
0xd74a: mov edx,0x54
0xd74f: call 0x2600
0xd754: mov r9d,0x1
0xd75a: or rbx,-0x1
0xd75e: jmp 0xd6cb
0xd7d0: push r13
0xd7d2: push r12
0xd7d4: mov r10d,esi
0xd7d7: push rbp
0xd7d8: push rbx
0xd7d9: mov r12,r8
0xd7dc: sub rsp,0x18
0xd7e0: mov rax,qword ptr fs:0x28
0xd7e9: mov qword ptr [rsp+0x8],rax
0xd7ee: xor eax,eax
0xd7f0: cmp edi,0x3
0xd7f3: mov ebp,dword ptr [rip+0x21a82f]
0xd7f9: ja 0xd854
0xd7fb: cmp edi,0x2
0xd7fe: jae 0xd84b
0xd800: sub edi,0x1
0xd803: lea rsi,[rip+0x14d62]
0xd80a: jne 0xd846
0xd80c: test r10d,r10d
0xd80f: movsxd rax,r10d
0xd812: js 0xd862
0xd814: shl rax,0x5
0xd818: lea rbx,[rip+0x14d6a]
0xd81f: mov r13,qword ptr [rcx+rax]
0xd823: mov edx,0x5
0xd828: xor edi,edi
0xd82a: call 0x2510
0xd82f: mov r9,r12
0xd832: mov rdx,rax
0xd835: mov r8,r13
0xd838: mov rcx,rbx
0xd83b: xor esi,esi
0xd83d: mov edi,ebp
0xd83f: xor eax,eax
0xd841: call 0x28a0
0xd846: call 0x2400
0xd84b: lea rsi,[rip+0x14d3e]
0xd852: jmp 0xd80c
0xd854: cmp edi,0x4
0xd857: lea rsi,[rip+0x14cf3]
0xd85e: je 0xd80c
0xd860: jmp 0xd846
0xd862: lea rbx,[rip+0x14d20]
0xd869: mov byte ptr [rsp+0x6],dl
0xd86d: mov byte ptr [rsp+0x7],0x0
0xd872: lea r13,[rsp+0x6]
0xd877: sub rbx,rax
0xd87a: jmp 0xd823
0xd926: cmp eax,0x22
0xd929: mov ebp,0x1
0xd92e: jne 0xd958
0xd952: nop word ptr [rax+rax]
0xda80: movsxd rdi,edi
0xda83: mov eax,ebp
0xda85: add rcx,rdi
0xda88: or eax,0x2
0xda8b: mov qword ptr [r15],rcx
0xda8e: cmp byte ptr [rcx],0x0
0xda91: mov qword ptr [r14],rbx
0xda94: cmovne ebp,eax
0xda97: jmp 0xd95d
0xdaf5: or ebp,r9d
0xdaf8: jmp 0xda80
0xdb8c: mov rax,rbx
0xdb8f: mul rsi
0xdb92: mov rbx,rax
0xdb95: jo 0xdc24
0xdb9b: sub r8d,0x1
0xdb9f: jne 0xdb8c
0xdba1: jmp 0xdaf5
0xdc05: lea rcx,[rip+0x14a84]
0xdc0c: lea rsi,[rip+0x1472d]
0xdc13: lea rdi,[rip+0x14746]
0xdc1a: mov edx,0x54
0xdc1f: call 0x2600
0xdc24: mov r9d,0x1
0xdc2a: or rbx,-0x1
0xdc2e: jmp 0xdb9b
0xddc0: xor eax,eax
0xddc2: mov rdx,qword ptr [rsi+0x8]
0xddc6: cmp qword ptr [rdi+0x8],rdx
0xddca: je 0xddd0
0xddcc: rep ret 
0xddd0: mov rax,qword ptr [rsi]
0xddd3: cmp qword ptr [rdi],rax
0xddd6: sete al
0xddd9: ret 
0xdde0: mov rax,qword ptr [rdi+0x8]
0xdde4: xor edx,edx
0xdde6: div rsi
0xdde9: mov rax,rdx
0xddec: ret 
0xddf0: mov rax,qword ptr [rdi]
0xddf3: xor edx,edx
0xddf5: div rsi
0xddf8: mov rax,rdx
0xddfb: ret 
0xde10: mov rdx,qword ptr [rdi]
0xde13: mov rax,qword ptr [rsi]
0xde16: mov rax,qword ptr [rax+0x80]
0xde1d: cmp qword ptr [rdx+0x80],rax
0xde24: jb 0xde30
0xde26: seta al
0xde29: movzx eax,al
0xde2c: ret 
0xde30: mov eax,0xffffffff
0xde35: ret 
0xe0e0: mov rdi,qword ptr [rbp+0x10]
0xe36c: nop dword ptr [rax]
0xe3d0: mov eax,0x2
0xe3d5: add rsp,0x8
0xe3d9: ret 
0xe446: nop word ptr cs:[rax+rax]
0xe508: mov rdi,qword ptr [rbx]
0xe50b: call 0x2a10
0xe510: mov qword ptr [rbx],0x0
0xe517: xor eax,eax
0xe519: pop rbx
0xe51a: ret 
0xe709: test bl,0x2
0xe70c: mov r15d,r12d
0xe70f: mov byte ptr [rsp+0xf],0x0
0xe714: jne 0xe680
0xe780: mov edi,r12d
0xe783: xor ebx,ebx
0xe785: call 0x2640
0xe78a: jmp 0xe6d5
0xe82a: test bl,0x2
0xe82d: mov r15d,r12d
0xe830: mov byte ptr [rsp+0xf],0x1
0xe835: je 0xe726
0xe83b: jmp 0xe680
0xe9b8: nop dword ptr [rax+rax]
0xeb03: test ah,0x4
0xeb06: je 0xee08
0xec3f: add rdx,qword ptr [rsp+0x18]
0xec44: test byte ptr [r15+0x48],0x4
0xec49: cmove rdx,qword ptr [rsp+0x40]
0xec4f: mov qword ptr [rsp+0x40],rdx
0xecd8: mov rax,qword ptr [r15+0x8]
0xecdc: mov rcx,qword ptr [r15+0x20]
0xece0: test rax,rax
0xece3: je 0xed10
0xece5: nop dword ptr [rax]
0xece8: mov rdx,qword ptr [rax+0x30]
0xecec: lea rsi,[rax+0x108]
0xecf3: cmp rdx,rsi
0xecf6: je 0xed03
0xecf8: sub rdx,qword ptr [rax+0x38]
0xecfc: add rdx,rcx
0xecff: mov qword ptr [rax+0x30],rdx
0xed03: mov qword ptr [rax+0x38],rcx
0xed07: mov rax,qword ptr [rax+0x10]
0xed0b: test rax,rax
0xed0e: jne 0xece8
0xed10: mov rax,qword ptr [rsp+0x10]
0xed15: jmp 0xed23
0xed20: mov rax,rdx
0xed23: cmp qword ptr [rax+0x58],0x0
0xed28: js 0xf076
0xed2e: mov rdx,qword ptr [rax+0x30]
0xed32: lea rsi,[rax+0x108]
0xed39: cmp rdx,rsi
0xed3c: je 0xed49
0xed3e: sub rdx,qword ptr [rax+0x38]
0xed42: add rdx,rcx
0xed45: mov qword ptr [rax+0x30],rdx
0xed49: mov rdx,qword ptr [rax+0x10]
0xed4d: mov qword ptr [rax+0x38],rcx
0xed51: test rdx,rdx
0xed54: jne 0xed20
0xed56: mov rdx,qword ptr [rax+0x8]
0xed5a: jmp 0xed20
0xed60: mov rax,qword ptr [r13+0x38]
0xed64: mov rdi,qword ptr [rsp+0x40]
0xed69: mov qword ptr [r13+0x30],rax
0xed6d: mov rax,qword ptr [r13+0x60]
0xed71: lea rdx,[rax+0x1]
0xed75: call 0x2890
0xed7a: mov eax,dword ptr [r15+0x48]
0xed7e: jmp 0xeafc
0xee08: xor edx,edx
0xee0a: mov rsi,r13
0xee0d: mov rdi,r15
0xee10: call 0xde40
0xee15: mov word ptr [r13+0x70],ax
0xee1a: jmp 0xeb51
0xee6a: test rax,rax
0xee6d: mov qword ptr [rbp+0x18],rax
0xee71: je 0xf190
0xee77: cmp word ptr [rbp+0x70],0xb
0xee7c: je 0xf210
0xee82: mov edi,dword ptr [r15+0x48]
0xee86: test edi,0x100
0xee8c: jne 0xefb0
0xee92: cmp qword ptr [r15+0x40],0x1
0xee97: sbb rax,rax
0xee9a: and eax,0x186a1
0xee9f: sub rax,0x1
0xeea3: cmp dword ptr [rsp+0x58],0x2
0xeea8: mov qword ptr [rsp+0x38],rax
0xeead: je 0xf200
0xeeb3: mov edx,dword ptr [r15+0x48]
0xeeb7: mov eax,dword ptr [rsp+0x64]
0xeebb: and edx,0x38
0xeebe: cmp edx,0x18
0xeec1: je 0xf264
0xeec7: cmp dword ptr [rsp+0x58],0x3
0xeecc: mov r12d,0x1
0xeed2: sete bl
0xeed5: test byte ptr [r15+0x49],0x2
0xeeda: jne 0xf2bc
0xeee0: test eax,eax
0xeee2: jns 0xf248
0xeee8: test bl,bl
0xeeea: je 0xeefb
0xeeec: test r12b,r12b
0xeeef: je 0xeefb
0xeef1: call 0x2410
0xeef6: mov eax,dword ptr [rax]
0xeef8: mov dword ptr [rbp+0x40],eax
0xeefb: or word ptr [rbp+0x72],0x1
0xef00: mov rdi,qword ptr [rbp+0x18]
0xef04: call 0x2650
0xef09: mov edi,dword ptr [r15+0x48]
0xef0d: mov qword ptr [rbp+0x18],0x0
0xef15: test edi,0x200
0xef1b: je 0xef30
0xef1d: mov eax,dword ptr [rsp+0x64]
0xef21: test eax,eax
0xef23: js 0xef30
0xef25: mov edi,eax
0xef27: call 0x2640
0xef2c: mov edi,dword ptr [r15+0x48]
0xef30: mov qword ptr [rbp+0x18],0x0
0xef38: mov byte ptr [rsp+0x5f],0x0
0xef3d: jmp 0xea2b
0xefb0: lea rbx,[r15+0x58]
0xefb4: mov rdx,rbp
0xefb7: mov rsi,rbx
0xefba: call 0xe900
0xefbf: xor edx,edx
0xefc1: mov rsi,rbp
0xefc4: mov rdi,r15
0xefc7: call 0xde40
0xefcc: mov edi,dword ptr [r15+0x48]
0xefd0: mov rdx,rbp
0xefd3: mov rsi,rbx
0xefd6: call 0xe850
0xefdb: test al,al
0xefdd: jne 0xee92
0xefe3: call 0x2410
0xefe8: mov qword ptr [rsp+0x10],0x0
0xeff1: mov dword ptr [rax],0xc
0xeff7: jmp 0xef85
0xf07d: mov rax,qword ptr [rsp+0x18]
0xf082: cmp qword ptr [r15+0x30],rax
0xf086: je 0xf08d
0xf088: test rbx,rbx
0xf08b: jne 0xf093
0xf08d: sub qword ptr [rsp+0x40],0x1
0xf093: mov rax,qword ptr [rsp+0x40]
0xf098: mov byte ptr [rax],0x0
0xf0cc: cmp rbx,0x1
0xf0d0: je 0xef85
0xf0d6: mov rsi,qword ptr [rsp+0x10]
0xf0db: mov rdx,rbx
0xf0de: mov rdi,r15
0xf0e1: call 0xe010
0xf0e6: mov qword ptr [rsp+0x10],rax
0xf0eb: jmp 0xef85
0xf0fb: mov rdi,r15
0xf0fe: call 0xe450
0xf103: test eax,eax
0xf105: setne al
0xf14d: test rbx,rbx
0xf150: mov dword ptr [rbp+0x40],eax
0xf153: jne 0xf289
0xf159: cmp qword ptr [rsp+0x50],0x0
0xf15f: mov eax,0x4
0xf164: jne 0xf289
0xf16a: mov word ptr [rbp+0x70],ax
0xf190: cmp dword ptr [rsp+0x58],0x3
0xf195: jne 0xef7c
0xf200: mov byte ptr [rsp+0x5f],0x0
0xf205: mov edi,dword ptr [r15+0x48]
0xf209: jmp 0xea2b
0xf210: xor edx,edx
0xf212: mov rsi,rbp
0xf215: mov rdi,r15
0xf218: call 0xde40
0xf21d: mov word ptr [rbp+0x70],ax
0xf221: jmp 0xee92
0xf248: xor ecx,ecx
0xf24a: mov edx,eax
0xf24c: mov rsi,rbp
0xf24f: mov rdi,r15
0xf252: call 0xe5d0
0xf257: test eax,eax
0xf259: jne 0xeee8
0xf25f: jmp 0xea22
0xf264: cmp qword ptr [rbp+0x88],0x2
0xf26c: jne 0xeec7
0xf272: mov esi,eax
0xf274: mov rdi,rbp
0xf277: call 0xe370
0xf27c: test eax,eax
0xf27e: jne 0xf2fe
0xf280: mov eax,dword ptr [rsp+0x64]
0xf284: jmp 0xeec7
0xf289: mov eax,0x7
0xf28e: jmp 0xf16a
0xf2bc: mov edi,eax
0xf2be: mov edx,0x3
0xf2c3: mov esi,0x406
0xf2c8: xor eax,eax
0xf2ca: call 0x1f730
0xf2cf: mov dword ptr [rsp+0x64],eax
0xf2d3: jmp 0xeee0
0xf2fe: cmp dword ptr [rsp+0x58],0x3
0xf303: jne 0xf200
0xf309: mov eax,dword ptr [rsp+0x64]
0xf30d: xor r12d,r12d
0xf310: mov ebx,0x1
0xf315: jmp 0xeed5
0xf4b0: mov eax,dword ptr [rbx+0x48]
0xf4b3: shr eax,0xa
0xf4b6: and eax,0x1
0xf4b9: mov byte ptr [rsp+0x16],al
0xf547: mov qword ptr [rcx+0x10],r12
0xf54b: mov r12,rcx
0xf5b5: cmp rbp,0x1
0xf5b9: jbe 0xf5cc
0xf5bb: mov rsi,r12
0xf5be: mov rdx,rbp
0xf5c1: mov rdi,rbx
0xf5c4: call 0xe010
0xf5c9: mov r12,rax
0xf61d: mov edi,dword ptr [rbx+0x2c]
0xf620: lea rdx,[rip+0x13075]
0xf627: call 0xe590
0xf62c: test eax,eax
0xf62e: mov dword ptr [rbx+0x28],eax
0xf631: jns 0xf640
0xf633: or dword ptr [rbx+0x48],0x4
0xf637: nop word ptr [rax+rax]
0xfad4: nop dword ptr [rax]
0xfc2a: movzx eax,word ptr [rbx+0x70]
0xfdc2: mov rbp,qword ptr [r12+0x8]
0xfdc7: jmp 0xfd16
0x10070: sub rsp,0x8
0x10074: call 0x2410
0x10079: mov dword ptr [rax],0x16
0x1007f: mov eax,0x1
0x10084: add rsp,0x8
0x10088: ret 
0x10090: push r14
0x10092: push r13
0x10094: push r12
0x10096: push rbp
0x10097: mov r12d,esi
0x1009a: push rbx
0x1009b: mov rbx,rdi
0x1009e: call 0x2410
0x100a3: test r12d,0xffffefff
0x100aa: mov r13,rax
0x100ad: jne 0x10198
0x100b3: mov rbp,qword ptr [rbx]
0x100b6: mov dword ptr [rax],0x0
0x100bc: test byte ptr [rbx+0x49],0x20
0x100c0: jne 0x10140
0x100c2: movzx eax,word ptr [rbp+0x70]
0x100c6: cmp ax,0x9
0x100ca: je 0x10130
0x100cc: cmp ax,0x1
0x100d0: jne 0x10140
0x100d2: mov rdi,qword ptr [rbx+0x8]
0x100d6: test rdi,rdi
0x100d9: je 0x100e0
0x100db: call 0xe1b0
0x100e0: cmp r12d,0x1000
0x100e7: mov r14d,0x1
0x100ed: jne 0x100fc
0x100ef: or dword ptr [rbx+0x48],0x1000
0x100f6: mov r14d,0x2
0x100fc: cmp qword ptr [rbp+0x58],0x0
0x10101: jne 0x10115
0x10103: mov rax,qword ptr [rbp+0x30]
0x10107: cmp byte ptr [rax],0x2f
0x1010a: je 0x10115
0x1010c: mov esi,dword ptr [rbx+0x48]
0x1010f: test sil,0x4
0x10113: je 0x10150
0x10115: mov esi,r14d
0x10118: mov rdi,rbx
0x1011b: call 0xe9c0
0x10120: mov qword ptr [rbx+0x8],rax
0x10124: pop rbx
0x10125: pop rbp
0x10126: pop r12
0x10128: pop r13
0x1012a: pop r14
0x1012c: ret 
0x10130: pop rbx
0x10131: mov rax,qword ptr [rbp+0x10]
0x10135: pop rbp
0x10136: pop r12
0x10138: pop r13
0x1013a: pop r14
0x1013c: ret 
0x10140: pop rbx
0x10141: xor eax,eax
0x10143: pop rbp
0x10144: pop r12
0x10146: pop r13
0x10148: pop r14
0x1014a: ret 
0x10150: mov edi,dword ptr [rbx+0x2c]
0x10153: lea rdx,[rip+0x12542]
0x1015a: call 0xe590
0x1015f: test eax,eax
0x10161: mov ebp,eax
0x10163: js 0x101b9
0x10165: mov esi,r14d
0x10168: mov rdi,rbx
0x1016b: call 0xe9c0
0x10170: test byte ptr [rbx+0x49],0x2
0x10174: mov qword ptr [rbx+0x8],rax
0x10178: jne 0x101a8
0x1017a: mov edi,ebp
0x1017c: call 0x2820
0x10181: test eax,eax
0x10183: jne 0x101c8
0x10185: mov edi,ebp
0x10187: call 0x2640
0x1018c: mov rax,qword ptr [rbx+0x8]
0x10190: jmp 0x10124
0x10198: mov dword ptr [rax],0x16
0x1019e: xor eax,eax
0x101a0: jmp 0x10124
0x101a8: mov edx,0x1
0x101ad: mov esi,ebp
0x101af: mov rdi,rbx
0x101b2: call 0xe3e0
0x101b7: jmp 0x1018c
0x101b9: mov qword ptr [rbx+0x8],0x0
0x101c1: xor eax,eax
0x101c3: jmp 0x10124
0x101c8: mov ebx,dword ptr [r13]
0x101cc: mov edi,ebp
0x101ce: call 0x2640
0x101d3: xor eax,eax
0x101d5: mov dword ptr [r13],ebx
0x101d9: jmp 0x10124
0x10263: nop word ptr cs:[rax+rax]
0x1026d: nop dword ptr [rax]
0x10b88: nop dword ptr [rax+rax]
0x10b90: mov rax,qword ptr [rsi+0x48]
0x10b94: cmp qword ptr [rsi+0x68],rax
0x10b98: jle 0x10bf0
0x10b9a: mov r8,qword ptr [rsi+0x8]
0x10b9e: cmp dword ptr [rsi+0x90],0x1
0x10ba5: movzx ecx,byte ptr [r8+rax]
0x10baa: mov byte ptr [rdi],cl
0x10bac: jle 0x10bc3
0x10bae: cmp rax,qword ptr [rsi+0x30]
0x10bb2: je 0x10bc3
0x10bb4: mov r9,qword ptr [rsi+0x10]
0x10bb8: cmp dword ptr [r9+rax*4],-0x1
0x10bbd: je 0x10c3f
0x10bc3: cmp cl,0x5c
0x10bc6: je 0x10c30
0x10bc8: cmp cl,0x5b
0x10bcb: je 0x10c00
0x10bcd: cmp cl,0x5d
0x10bd0: je 0x10c70
0x10bd6: cmp cl,0x5e
0x10bd9: je 0x10c60
0x10bdf: cmp cl,0x2d
0x10be2: jne 0x10c3f
0x10be4: mov byte ptr [rdi+0x8],0x16
0x10be8: mov eax,0x1
0x10bed: ret 
0x10bf0: mov byte ptr [rdi+0x8],0x2
0x10bf4: xor eax,eax
0x10bf6: ret 
0x10c00: lea rcx,[rax+0x1]
0x10c04: cmp rcx,qword ptr [rsi+0x58]
0x10c08: jge 0x10c50
0x10c0a: movzx eax,byte ptr [r8+rax+0x1]
0x10c10: cmp al,0x3a
0x10c12: mov byte ptr [rdi],al
0x10c14: je 0x10cb0
0x10c1a: cmp al,0x3d
0x10c1c: je 0x10ca0
0x10c22: cmp al,0x2e
0x10c24: jne 0x10c50
0x10c26: mov byte ptr [rdi+0x8],0x1a
0x10c2a: mov eax,0x2
0x10c2f: ret 
0x10c30: and edx,0x1
0x10c33: je 0x10c3f
0x10c35: lea rdx,[rax+0x1]
0x10c39: cmp rdx,qword ptr [rsi+0x58]
0x10c3d: jl 0x10c80
0x10c3f: mov byte ptr [rdi+0x8],0x1
0x10c43: mov eax,0x1
0x10c48: ret 
0x10c50: mov byte ptr [rdi+0x8],0x1
0x10c54: mov byte ptr [rdi],0x5b
0x10c57: mov eax,0x1
0x10c5c: ret 
0x10c60: mov byte ptr [rdi+0x8],0x19
0x10c64: mov eax,0x1
0x10c69: ret 
0x10c70: mov byte ptr [rdi+0x8],0x15
0x10c74: mov eax,0x1
0x10c79: ret 
0x10c80: mov qword ptr [rsi+0x48],rdx
0x10c84: movzx eax,byte ptr [r8+rax+0x1]
0x10c8a: mov byte ptr [rdi+0x8],0x1
0x10c8e: mov byte ptr [rdi],al
0x10c90: mov eax,0x1
0x10c95: ret 
0x10ca0: mov byte ptr [rdi+0x8],0x1c
0x10ca4: mov eax,0x2
0x10ca9: ret 
0x10cb0: and edx,0x4
0x10cb3: je 0x10c50
0x10cb5: mov byte ptr [rdi+0x8],0x1e
0x10cb9: mov eax,0x2
0x10cbe: ret 
0x10cc0: cmp byte ptr [rsi+0x30],0x11
0x10cc4: je 0x10cd0
0x10cc6: xor eax,eax
0x10cc8: ret 
0x10cd0: cmp rdi,qword ptr [rsi+0x28]
0x10cd4: jne 0x10cc6
0x10cd6: or byte ptr [rsi+0x32],0x8
0x10cda: xor eax,eax
0x10cdc: ret 
0x10f80: push r12
0x10f82: mov r12,rsi
0x10f85: push rbp
0x10f86: mov rbp,rdx
0x10f89: push rbx
0x10f8a: mov rbx,rdi
0x10f8d: jmp 0x10f93
0x10f90: mov rbx,rax
0x10f93: mov rax,qword ptr [rbx+0x8]
0x10f97: test rax,rax
0x10f9a: jne 0x10f90
0x10f9c: mov rax,qword ptr [rbx+0x10]
0x10fa0: test rax,rax
0x10fa3: jne 0x10f90
0x10fa5: mov rsi,rbx
0x10fa8: mov rdi,rbp
0x10fab: call r12
0x10fae: test eax,eax
0x10fb0: jne 0x10fe6
0x10fb2: nop word ptr [rax+rax]
0x10fb8: mov rdx,qword ptr [rbx]
0x10fbb: test rdx,rdx
0x10fbe: je 0x10fe6
0x10fc0: mov rax,qword ptr [rdx+0x10]
0x10fc4: cmp rax,rbx
0x10fc7: mov rbx,rdx
0x10fca: sete sil
0x10fce: test rax,rax
0x10fd1: sete cl
0x10fd4: or sil,cl
0x10fd7: je 0x10f90
0x10fd9: mov rsi,rbx
0x10fdc: mov rdi,rbp
0x10fdf: call r12
0x10fe2: test eax,eax
0x10fe4: je 0x10fb8
0x10fe6: pop rbx
0x10fe7: pop rbp
0x10fe8: pop r12
0x10fea: ret 
0x10ff0: push r12
0x10ff2: mov r12,rsi
0x10ff5: push rbp
0x10ff6: mov rbp,rdx
0x10ff9: push rbx
0x10ffa: mov rbx,rdi
0x10ffd: jmp 0x11003
0x11000: mov rbx,rdx
0x11003: mov rsi,rbx
0x11006: mov rdi,rbp
0x11009: call r12
0x1100c: test eax,eax
0x1100e: jne 0x1103c
0x11010: mov rdx,qword ptr [rbx+0x8]
0x11014: xor ecx,ecx
0x11016: test rdx,rdx
0x11019: jne 0x11000
0x1101b: jmp 0x11023
0x11020: mov rbx,rdx
0x11023: mov rdx,qword ptr [rbx+0x10]
0x11027: cmp rdx,rcx
0x1102a: je 0x11031
0x1102c: test rdx,rdx
0x1102f: jne 0x11000
0x11031: mov rdx,qword ptr [rbx]
0x11034: mov rcx,rbx
0x11037: test rdx,rdx
0x1103a: jne 0x11020
0x1103c: pop rbx
0x1103d: pop rbp
0x1103e: pop r12
0x11040: ret 
0x11150: xor eax,eax
0x11152: jmp 0x1111a
0x11248: mov qword ptr [rbx+0x8],0x0
0x11250: mov qword ptr [rbx],0x0
0x11257: jmp 0x1118e
0x11285: xor eax,eax
0x11287: jmp 0x1118e
0x115b3: nop dword ptr [rax]
0x115b6: nop word ptr cs:[rax+rax]
0x11ba6: mov eax,0xc
0x11bab: jmp 0x1161f
0x11dc0: push rbx
0x11dc1: mov rbx,rdi
0x11dc4: mov rdi,qword ptr [rdi]
0x11dc7: call 0x2a10
0x11dcc: mov rdi,qword ptr [rbx+0x8]
0x11dd0: call 0x2a10
0x11dd5: mov rdi,qword ptr [rbx+0x10]
0x11dd9: call 0x2a10
0x11dde: mov rdi,qword ptr [rbx+0x18]
0x11de2: call 0x2a10
0x11de7: mov rdi,rbx
0x11dea: pop rbx
0x11deb: jmp 0x2a10
0x11df0: mov eax,dword ptr [rdi+0x8]
0x11df3: and eax,0x400ff
0x11df8: cmp eax,0x6
0x11dfb: je 0x11e10
0x11dfd: cmp eax,0x3
0x11e00: je 0x11e08
0x11e02: rep ret 
0x11e08: mov rdi,qword ptr [rdi]
0x11e0b: jmp 0x2a10
0x11e10: mov rdi,qword ptr [rdi]
0x11e13: jmp 0x11dc0
0x11e20: lea rdi,[rsi+0x28]
0x11e24: sub rsp,0x8
0x11e28: call 0x11df0
0x11e2d: xor eax,eax
0x11e2f: add rsp,0x8
0x11e33: ret 
0x11e40: push r15
0x11e42: push r14
0x11e44: mov r14,rsi
0x11e47: push r13
0x11e49: push r12
0x11e4b: push rbp
0x11e4c: push rbx
0x11e4d: mov rbx,rdi
0x11e50: sub rsp,0x18
0x11e54: mov rsi,qword ptr [rdi+0x10]
0x11e58: mov rbp,qword ptr [rdi+0x8]
0x11e5c: cmp rsi,rbp
0x11e5f: jae 0x11f10
0x11e65: mov r12,qword ptr [rdi+0x18]
0x11e69: mov rbp,qword ptr [rdi+0x28]
0x11e6d: mov rax,rsi
0x11e70: mov ecx,edx
0x11e72: shl rax,0x4
0x11e76: add rax,qword ptr [rbx]
0x11e79: and ecx,0xfffc00ff
0x11e7f: mov qword ptr [rax+0x8],rdx
0x11e83: mov dword ptr [rax+0x8],ecx
0x11e86: xor ecx,ecx
0x11e88: cmp dl,0x6
0x11e8b: mov qword ptr [rax],r14
0x11e8e: sete cl
0x11e91: cmp dl,0x5
0x11e94: jne 0x11ea2
0x11e96: xor ecx,ecx
0x11e98: cmp dword ptr [rbx+0xb4],0x1
0x11e9f: setg cl
0x11ea2: movzx edx,byte ptr [rax+0xa]
0x11ea6: shl ecx,0x4
0x11ea9: pxor xmm0,xmm0
0x11ead: and edx,-0x11
0x11eb0: or edx,ecx
0x11eb2: mov byte ptr [rax+0xa],dl
0x11eb5: mov qword ptr [r12+rsi*8],-0x1
0x11ebd: mov rax,qword ptr [rbx+0x10]
0x11ec1: lea rax,[rax+rax*2]
0x11ec5: lea rax,[rbp+rax*8]
0x11eca: movups xmmword ptr [rax],xmm0
0x11ecd: mov qword ptr [rax+0x10],0x0
0x11ed5: mov rax,qword ptr [rbx+0x10]
0x11ed9: lea rdx,[rax+rax*2]
0x11edd: mov rax,qword ptr [rbx+0x30]
0x11ee1: lea rax,[rax+rdx*8]
0x11ee5: movups xmmword ptr [rax],xmm0
0x11ee8: mov qword ptr [rax+0x10],0x0
0x11ef0: mov rax,qword ptr [rbx+0x10]
0x11ef4: lea rdx,[rax+0x1]
0x11ef8: mov qword ptr [rbx+0x10],rdx
0x11efc: add rsp,0x18
0x11f00: pop rbx
0x11f01: pop rbp
0x11f02: pop r12
0x11f04: pop r13
0x11f06: pop r14
0x11f08: pop r15
0x11f0a: ret 
0x11f10: lea r13,[rbp+rbp]
0x11f15: movabsq rax,0xaaaaaaaaaaaaaaa
0x11f1f: cmp r13,rax
0x11f22: ja 0x12002
0x11f28: mov rdi,qword ptr [rdi]
0x11f2b: mov rsi,rbp
0x11f2e: mov qword ptr [rsp+0x8],rdx
0x11f33: shl rsi,0x5
0x11f37: call 0x2830
0x11f3c: test rax,rax
0x11f3f: je 0x12002
0x11f45: mov r15,rbp
0x11f48: mov rdi,qword ptr [rbx+0x18]
0x11f4c: mov qword ptr [rbx],rax
0x11f4f: shl r15,0x4
0x11f53: mov rsi,r15
0x11f56: call 0x2830
0x11f5b: mov rdi,qword ptr [rbx+0x20]
0x11f5f: mov rsi,r15
0x11f62: lea r15,[r13+rbp*4]
0x11f67: mov r12,rax
0x11f6a: shl r15,0x3
0x11f6e: call 0x2830
0x11f73: mov rdi,qword ptr [rbx+0x28]
0x11f77: mov rsi,r15
0x11f7a: mov qword ptr [rsp],rax
0x11f7e: call 0x2830
0x11f83: mov rdi,qword ptr [rbx+0x30]
0x11f87: mov rsi,r15
0x11f8a: mov rbp,rax
0x11f8d: call 0x2830
0x11f92: test r12,r12
0x11f95: mov rcx,qword ptr [rsp]
0x11f99: je 0x11fd0
0x11f9b: test rcx,rcx
0x11f9e: je 0x11fd0
0x11fa0: test rbp,rbp
0x11fa3: je 0x11fd0
0x11fa5: test rax,rax
0x11fa8: mov rdx,qword ptr [rsp+0x8]
0x11fad: je 0x11fd0
0x11faf: mov qword ptr [rbx+0x18],r12
0x11fb3: mov qword ptr [rbx+0x20],rcx
0x11fb7: mov qword ptr [rbx+0x28],rbp
0x11fbb: mov qword ptr [rbx+0x30],rax
0x11fbf: mov qword ptr [rbx+0x8],r13
0x11fc3: mov rsi,qword ptr [rbx+0x10]
0x11fc7: jmp 0x11e6d
0x11fd0: mov rdi,r12
0x11fd3: mov qword ptr [rsp+0x8],rax
0x11fd8: mov qword ptr [rsp],rcx
0x11fdc: call 0x2a10
0x11fe1: mov rcx,qword ptr [rsp]
0x11fe5: mov rdi,rcx
0x11fe8: call 0x2a10
0x11fed: mov rdi,rbp
0x11ff0: call 0x2a10
0x11ff5: mov rax,qword ptr [rsp+0x8]
0x11ffa: mov rdi,rax
0x11ffd: call 0x2a10
0x12002: mov rax,-0x1
0x12009: jmp 0x11efc
0x12010: push r13
0x12012: push r12
0x12014: mov r13,rsi
0x12017: push rbp
0x12018: push rbx
0x12019: shl r13,0x4
0x1201d: mov rbp,rsi
0x12020: mov r12d,edx
0x12023: mov rbx,rdi
0x12026: sub rsp,0x8
0x1202a: mov rax,qword ptr [rdi]
0x1202d: mov rsi,qword ptr [rax+r13]
0x12031: mov rdx,qword ptr [rax+r13+0x8]
0x12036: call 0x11e40
0x1203b: cmp rax,-0x1
0x1203f: je 0x120a4
0x12041: mov edi,r12d
0x12044: mov r8,qword ptr [rbx]
0x12047: mov rsi,rax
0x1204a: and di,0x3ff
0x1204f: shl rsi,0x4
0x12053: mov ecx,edi
0x12055: and ecx,0x3ff
0x1205b: add rsi,r8
0x1205e: shl ecx,0x8
0x12061: mov edx,ecx
0x12063: mov ecx,dword ptr [rsi+0x8]
0x12066: and ecx,0xfffc00ff
0x1206c: or ecx,edx
0x1206e: mov dword ptr [rsi+0x8],ecx
0x12071: mov edx,dword ptr [r8+r13+0x8]
0x12076: and ecx,0xfffc00ff
0x1207c: shr edx,0x8
0x1207f: or edx,edi
0x12081: and edx,0x3ff
0x12087: shl edx,0x8
0x1208a: or edx,ecx
0x1208c: mov ecx,edx
0x1208e: mov dword ptr [rsi+0x8],edx
0x12091: shr ecx,0x10
0x12094: mov edx,ecx
0x12096: or edx,0x4
0x12099: mov byte ptr [rsi+0xa],dl
0x1209c: mov rdx,qword ptr [rbx+0x20]
0x120a0: mov qword ptr [rdx+rax*8],rbp
0x120a4: add rsp,0x8
0x120a8: pop rbx
0x120a9: pop rbp
0x120aa: pop r12
0x120ac: pop r13
0x120ae: ret 
0x120b0: push r15
0x120b2: push r14
0x120b3: push rsi
0x120b4: mov r9,rsi
0x120b7: push r13
0x120b9: push r12
0x120bb: mov r14,rdi
0x120be: push rbp
0x120bf: push rbx
0x120c0: mov r13,rdx
0x120c3: mov ebp,r8d
0x120c6: sub rsp,0x18
0x120ca: mov qword ptr [rsp+0x8],rcx
0x120cf: mov r8,qword ptr [r14]
0x120d2: mov rax,r9
0x120d5: mov rdi,qword ptr [r14+0x28]
0x120d9: shl rax,0x4
0x120dd: mov r12,r13
0x120e0: add rax,r8
0x120e3: cmp byte ptr [rax+0x8],0x4
0x120e7: je 0x122a0
0x120ed: lea r12,[r9+r9*2]
0x120f1: shl r12,0x3
0x120f5: lea rsi,[rdi+r12]
0x120f9: mov rcx,qword ptr [rsi+0x8]
0x120fd: test rcx,rcx
0x12100: je 0x122f9
0x12106: lea rbx,[r13+r13*2]
0x1210b: mov rsi,qword ptr [rsi+0x10]
0x1210f: shl rbx,0x3
0x12113: add rdi,rbx
0x12116: cmp rcx,0x1
0x1211a: mov r15,qword ptr [rsi]
0x1211d: mov qword ptr [rdi+0x8],0x0
0x12125: je 0x12240
0x1212b: mov rdx,qword ptr [r14+0x10]
0x1212f: lea rsi,[rdx-0x1]
0x12133: mov rax,rsi
0x12136: shl rax,0x4
0x1213a: add rax,r8
0x1213d: test byte ptr [rax+0xa],0x4
0x12141: je 0x121f0
0x12147: test rsi,rsi
0x1214a: jle 0x121f0
0x12150: shl rdx,0x4
0x12154: sub r8,rax
0x12157: mov rcx,qword ptr [r14+0x20]
0x1215b: lea r8,[r8+rdx-0x20]
0x12160: jmp 0x1217a
0x12168: add rax,r8
0x1216b: sub rsi,0x1
0x1216f: test byte ptr [rax+0xa],0x4
0x12173: je 0x121f0
0x12175: test rsi,rsi
0x12178: jle 0x121f0
0x1217a: cmp qword ptr [rcx+rsi*8],r15
0x1217e: jne 0x12168
0x12180: mov edx,dword ptr [rax+0x8]
0x12183: shr edx,0x8
0x12186: and edx,0x3ff
0x1218c: cmp ebp,edx
0x1218e: jne 0x12168
0x12190: call 0x11160
0x12195: test al,al
0x12197: je 0x121db
0x12199: mov rax,qword ptr [r14+0x28]
0x1219d: mov edx,ebp
0x1219f: mov rdi,r14
0x121a2: mov rax,qword ptr [rax+r12+0x10]
0x121a7: mov r9,qword ptr [rax+0x8]
0x121ab: mov rsi,r9
0x121ae: mov qword ptr [rsp],r9
0x121b2: call 0x12010
0x121b7: cmp rax,-0x1
0x121bb: mov r13,rax
0x121be: je 0x121db
0x121c0: add rbx,qword ptr [r14+0x28]
0x121c4: mov rsi,r13
0x121c7: mov rdi,rbx
0x121ca: call 0x11160
0x121cf: test al,al
0x121d1: mov r9,qword ptr [rsp]
0x121d5: jne 0x120cf
0x121db: mov eax,0xc
0x121e0: add rsp,0x18
0x121e4: pop rbx
0x121e5: pop rbp
0x121e6: pop r12
0x121e8: pop r13
0x121ea: pop r14
0x121ec: pop r15
0x121ee: ret 
0x121f0: mov edx,ebp
0x121f2: mov rsi,r15
0x121f5: mov rdi,r14
0x121f8: call 0x12010
0x121fd: cmp rax,-0x1
0x12201: mov r13,rax
0x12204: je 0x121db
0x12206: mov rdi,qword ptr [r14+0x28]
0x1220a: mov rsi,r13
0x1220d: add rdi,rbx
0x12210: call 0x11160
0x12215: test al,al
0x12217: je 0x121db
0x12219: mov rcx,qword ptr [rsp+0x8]
0x1221e: mov r8d,ebp
0x12221: mov rdx,r13
0x12224: mov rsi,r15
0x12227: mov rdi,r14
0x1222a: call 0x120b0
0x1222f: test eax,eax
0x12231: je 0x12199
0x12237: jmp 0x121e0
0x12240: cmp r9,qword ptr [rsp+0x8]
0x12245: jne 0x12250
0x12247: cmp r9,r13
0x1224a: jne 0x1230c
0x12250: mov eax,dword ptr [rax+0x8]
0x12253: mov rsi,r15
0x12256: mov rdi,r14
0x12259: shr eax,0x8
0x1225c: and eax,0x3ff
0x12261: or ebp,eax
0x12263: mov edx,ebp
0x12265: call 0x12010
0x1226a: cmp rax,-0x1
0x1226e: mov r13,rax
0x12271: je 0x121db
0x12277: add rbx,qword ptr [r14+0x28]
0x1227b: mov rsi,rax
0x1227e: mov rdi,rbx
0x12281: call 0x11160
0x12286: test al,al
0x12288: je 0x121db
0x1228e: mov r9,r15
0x12291: jmp 0x120cf
0x122a0: mov rax,qword ptr [r14+0x18]
0x122a4: lea rbx,[r13+r13*2]
0x122a9: lea r15,[r9*8]
0x122b1: mov edx,ebp
0x122b3: shl rbx,0x3
0x122b7: mov r9,qword ptr [rax+r9*8]
0x122bb: mov qword ptr [rdi+rbx+0x8],0x0
0x122c4: mov rdi,r14
0x122c7: mov rsi,r9
0x122ca: mov qword ptr [rsp],r9
0x122ce: call 0x12010
0x122d3: cmp rax,-0x1
0x122d7: mov r13,rax
0x122da: mov r9,qword ptr [rsp]
0x122de: je 0x121db
0x122e4: mov rax,qword ptr [r14+0x18]
0x122e8: mov qword ptr [rsp],r9
0x122ec: mov rcx,qword ptr [rax+r15]
0x122f0: mov qword ptr [rax+r12*8],rcx
0x122f4: jmp 0x121c0
0x122f9: mov rax,qword ptr [r14+0x18]
0x122fd: mov rcx,qword ptr [rax+r9*8]
0x12301: mov qword ptr [rax+r13*8],rcx
0x12305: xor eax,eax
0x12307: jmp 0x121e0
0x1230c: mov rsi,r15
0x1230f: call 0x11160
0x12314: mov edx,eax
0x12316: xor eax,eax
0x12318: test dl,dl
0x1231a: jne 0x121e0
0x12320: jmp 0x121db
0x123d0: push r14
0x123d2: push r13
0x123d4: push r12
0x123d6: mov r12,rdi
0x123d9: push rbp
0x123da: push rbx
0x123db: mov rdi,qword ptr [rdi]
0x123de: test rdi,rdi
0x123e1: je 0x1240e
0x123e3: cmp qword ptr [r12+0x10],0x0
0x123e9: je 0x1240e
0x123eb: xor ebx,ebx
0x123ed: jmp 0x123f4
0x123f0: mov rdi,qword ptr [r12]
0x123f4: mov rax,rbx
0x123f7: add rbx,0x1
0x123fb: shl rax,0x4
0x123ff: add rdi,rax
0x12402: call 0x11df0
0x12407: cmp qword ptr [r12+0x10],rbx
0x1240c: ja 0x123f0
0x1240e: mov rdi,qword ptr [r12+0x18]
0x12413: call 0x2a10
0x12418: cmp qword ptr [r12+0x10],0x0
0x1241e: je 0x12473
0x12420: xor ebx,ebx
0x12422: xor ebp,ebp
0x12424: nop dword ptr [rax]
0x12428: mov rax,qword ptr [r12+0x30]
0x1242d: test rax,rax
0x12430: je 0x1243c
0x12432: mov rdi,qword ptr [rax+rbx+0x10]
0x12437: call 0x2a10
0x1243c: mov rax,qword ptr [r12+0x38]
0x12441: test rax,rax
0x12444: je 0x12450
0x12446: mov rdi,qword ptr [rax+rbx+0x10]
0x1244b: call 0x2a10
0x12450: mov rax,qword ptr [r12+0x28]
0x12455: test rax,rax
0x12458: je 0x12464
0x1245a: mov rdi,qword ptr [rax+rbx+0x10]
0x1245f: call 0x2a10
0x12464: add rbp,0x1
0x12468: add rbx,0x18
0x1246c: cmp qword ptr [r12+0x10],rbp
0x12471: ja 0x12428
0x12473: mov rdi,qword ptr [r12+0x28]
0x12478: call 0x2a10
0x1247d: mov rdi,qword ptr [r12+0x30]
0x12482: call 0x2a10
0x12487: mov rdi,qword ptr [r12+0x38]
0x1248c: call 0x2a10
0x12491: mov rdi,qword ptr [r12]
0x12495: call 0x2a10
0x1249a: mov rdi,qword ptr [r12+0x40]
0x1249f: test rdi,rdi
0x124a2: je 0x124f7
0x124a4: xor r14d,r14d
0x124a7: xor r13d,r13d
0x124aa: nop word ptr [rax+rax]
0x124b0: lea rbp,[rdi+r14]
0x124b4: cmp qword ptr [rbp],0x0
0x124b9: jle 0x124d7
0x124bb: xor ebx,ebx
0x124bd: nop dword ptr [rax]
0x124c0: mov rax,qword ptr [rbp+0x10]
0x124c4: mov rdi,qword ptr [rax+rbx*8]
0x124c8: add rbx,0x1
0x124cc: call 0x12330
0x124d1: cmp qword ptr [rbp],rbx
0x124d5: jg 0x124c0
0x124d7: mov rdi,qword ptr [rbp+0x10]
0x124db: add r13,0x1
0x124df: add r14,0x18
0x124e3: call 0x2a10
0x124e8: cmp qword ptr [r12+0x88],r13
0x124f0: mov rdi,qword ptr [r12+0x40]
0x124f5: jae 0x124b0
0x124f7: call 0x2a10
0x124fc: mov rdi,qword ptr [r12+0x78]
0x12501: lea rax,[rip+0x108b8]
0x12508: cmp rdi,rax
0x1250b: je 0x12512
0x1250d: call 0x2a10
0x12512: mov rdi,qword ptr [r12+0xe0]
0x1251a: call 0x2a10
0x1251f: pop rbx
0x12520: mov rdi,r12
0x12523: pop rbp
0x12524: pop r12
0x12526: pop r13
0x12528: pop r14
0x1252a: jmp 0x2a10
0x12860: movzx eax,byte ptr [rsi+0x30]
0x12864: cmp al,0x4
0x12866: je 0x128c0
0x12868: cmp al,0x11
0x1286a: je 0x12870
0x1286c: xor eax,eax
0x1286e: ret 
0x12870: mov rax,qword ptr [rsi+0x8]
0x12874: test rax,rax
0x12877: je 0x1286c
0x12879: cmp byte ptr [rax+0x30],0x11
0x1287d: jne 0x1286c
0x1287f: mov rcx,qword ptr [rax+0x28]
0x12883: mov rax,qword ptr [rax+0x8]
0x12887: test rax,rax
0x1288a: mov qword ptr [rsi+0x8],rax
0x1288e: je 0x12893
0x12890: mov qword ptr [rax],rsi
0x12893: mov rax,qword ptr [rdi+0xe0]
0x1289a: mov rdx,qword ptr [rsi+0x28]
0x1289e: cmp rcx,0x3f
0x128a2: mov rdx,qword ptr [rax+rdx*8]
0x128a6: mov qword ptr [rax+rcx*8],rdx
0x128aa: jg 0x1286c
0x128ac: mov rax,-0x2
0x128b3: rol rax,cl
0x128b6: and qword ptr [rdi+0xa0],rax
0x128bd: jmp 0x1286c
0x128c0: mov rax,qword ptr [rdi+0xe0]
0x128c7: test rax,rax
0x128ca: je 0x1286c
0x128cc: movsxd rdx,dword ptr [rsi+0x28]
0x128d0: mov rcx,qword ptr [rax+rdx*8]
0x128d4: mov eax,0x1
0x128d9: shl eax,cl
0x128db: mov qword ptr [rsi+0x28],rcx
0x128df: cltq 
0x128e1: or qword ptr [rdi+0xa0],rax
0x128e8: xor eax,eax
0x128ea: ret 
0x128f0: movzx eax,byte ptr [rsi+0x30]
0x128f4: mov rdx,qword ptr [rsi+0x8]
0x128f8: cmp al,0xb
0x128fa: je 0x12940
0x128fc: cmp al,0x10
0x128fe: je 0x12928
0x12900: test rdx,rdx
0x12903: je 0x1290d
0x12905: mov rax,qword ptr [rsi+0x20]
0x12909: mov qword ptr [rdx+0x20],rax
0x1290d: mov rax,qword ptr [rsi+0x10]
0x12911: test rax,rax
0x12914: je 0x1291e
0x12916: mov rdx,qword ptr [rsi+0x20]
0x1291a: mov qword ptr [rax+0x20],rdx
0x1291e: xor eax,eax
0x12920: ret 
0x12928: mov rax,qword ptr [rsi+0x10]
0x1292c: mov rcx,qword ptr [rax+0x18]
0x12930: mov qword ptr [rdx+0x20],rcx
0x12934: mov rdx,qword ptr [rsi+0x20]
0x12938: mov qword ptr [rax+0x20],rdx
0x1293c: xor eax,eax
0x1293e: ret 
0x12940: mov qword ptr [rdx+0x20],rsi
0x12944: xor eax,eax
0x12946: ret 
0x12d94: mov eax,0xc
0x12d99: jmp 0x12cac
0x12da0: push r15
0x12da2: push r14
0x12da4: mov r15,rsi
0x12da7: push r13
0x12da9: push r12
0x12dab: push rbp
0x12dac: push rbx
0x12dad: lea rbx,[rdx+rdx*2]
0x12db1: mov rbp,rdx
0x12db4: sub rsp,0x68
0x12db8: mov r12,qword ptr [rsi+0x28]
0x12dbc: shl rbx,0x3
0x12dc0: mov rax,qword ptr fs:0x28
0x12dc9: mov qword ptr [rsp+0x58],rax
0x12dce: xor eax,eax
0x12dd0: mov qword ptr [rsp+0x10],rdi
0x12dd5: mov dword ptr [rsp+0x1c],ecx
0x12dd9: add r12,rbx
0x12ddc: mov rax,qword ptr [r12+0x8]
0x12de1: mov qword ptr [rsp+0x28],0x0
0x12dea: lea rdi,[rax+0x1]
0x12dee: mov qword ptr [rsp+0x20],rdi
0x12df3: shl rdi,0x3
0x12df7: call 0x2780
0x12dfc: test rax,rax
0x12dff: mov qword ptr [rsp+0x30],rax
0x12e04: je 0x13040
0x12e0a: mov rax,qword ptr [r15+0x30]
0x12e0e: mov rdx,qword ptr [r15]
0x12e11: mov r13,rbp
0x12e14: shl r13,0x4
0x12e18: mov qword ptr [rax+rbx+0x8],-0x1
0x12e21: lea rax,[rdx+r13]
0x12e25: mov r8d,dword ptr [rax+0x8]
0x12e29: test r8d,0x3ff00
0x12e30: jne 0x12fd0
0x12e36: test byte ptr [rax+0x8],0x8
0x12e3a: je 0x12f00
0x12e40: mov rsi,qword ptr [r15+0x28]
0x12e44: lea rax,[rsi+rbx]
0x12e48: cmp qword ptr [rax+0x8],0x0
0x12e4d: jle 0x12f00
0x12e53: lea rdx,[rsp+0x20]
0x12e58: mov byte ptr [rsp+0x1b],0x0
0x12e5d: xor r14d,r14d
0x12e60: lea r12,[rsp+0x40]
0x12e65: mov qword ptr [rsp+0x8],rdx
0x12e6a: jmp 0x12e86
0x12e70: mov rsi,qword ptr [r15+0x28]
0x12e74: add r14,0x1
0x12e78: lea rax,[rsi+rbx]
0x12e7c: cmp qword ptr [rax+0x8],r14
0x12e80: jle 0x12f87
0x12e86: mov rax,qword ptr [rax+0x10]
0x12e8a: mov rdx,qword ptr [rax+r14*8]
0x12e8e: mov rax,qword ptr [r15+0x30]
0x12e92: lea r8,[rdx+rdx*2]
0x12e96: lea r13,[r8*8]
0x12e9e: add rax,r13
0x12ea1: mov rcx,qword ptr [rax+0x8]
0x12ea5: cmp rcx,-0x1
0x12ea9: je 0x12f70
0x12eaf: test rcx,rcx
0x12eb2: je 0x13028
0x12eb8: movdqu xmm0,xmmword ptr [rax]
0x12ebc: movaps xmmword ptr [rsp+0x40],xmm0
0x12ec1: mov rax,qword ptr [rax+0x10]
0x12ec5: mov qword ptr [rsp+0x50],rax
0x12eca: mov rdi,qword ptr [rsp+0x8]
0x12ecf: mov rsi,r12
0x12ed2: call 0x12bc0
0x12ed7: test eax,eax
0x12ed9: jne 0x12f46
0x12edb: mov rax,qword ptr [r15+0x30]
0x12edf: cmp qword ptr [rax+r13+0x8],0x0
0x12ee5: jne 0x12e70
0x12ee7: mov rdi,qword ptr [rsp+0x50]
0x12eec: call 0x2a10
0x12ef1: mov byte ptr [rsp+0x1b],0x1
0x12ef6: jmp 0x12e70
0x12f00: lea rdi,[rsp+0x20]
0x12f05: mov rsi,rbp
0x12f08: call 0x11160
0x12f0d: test al,al
0x12f0f: je 0x13040
0x12f15: mov rax,qword ptr [r15+0x30]
0x12f19: movdqa xmm0,xmmword ptr [rsp+0x20]
0x12f1f: movups xmmword ptr [rax+rbx],xmm0
0x12f23: mov rdx,qword ptr [rsp+0x30]
0x12f28: mov qword ptr [rax+rbx+0x10],rdx
0x12f2d: mov rbx,qword ptr [rsp+0x10]
0x12f32: mov rax,qword ptr [rsp+0x30]
0x12f37: movdqa xmm0,xmmword ptr [rsp+0x20]
0x12f3d: movaps xmmword ptr [rbx],xmm0
0x12f40: mov qword ptr [rbx+0x10],rax
0x12f44: xor eax,eax
0x12f46: mov rsi,qword ptr [rsp+0x58]
0x12f4b: xor rsi,qword ptr fs:0x28
0x12f54: jne 0x1304a
0x12f5a: add rsp,0x68
0x12f5e: pop rbx
0x12f5f: pop rbp
0x12f60: pop r12
0x12f62: pop r13
0x12f64: pop r14
0x12f66: pop r15
0x12f68: ret 
0x12f70: lea rax,[rsi+rbx]
0x12f74: add r14,0x1
0x12f78: mov byte ptr [rsp+0x1b],0x1
0x12f7d: cmp qword ptr [rax+0x8],r14
0x12f81: jg 0x12e86
0x12f87: lea rdi,[rsp+0x20]
0x12f8c: mov rsi,rbp
0x12f8f: call 0x11160
0x12f94: test al,al
0x12f96: je 0x13040
0x12f9c: cmp byte ptr [rsp+0x1c],0x1
0x12fa1: mov rax,qword ptr [r15+0x30]
0x12fa5: lea rdx,[rax+rbx]
0x12fa9: je 0x12f19
0x12faf: cmp byte ptr [rsp+0x1b],0x0
0x12fb4: je 0x12f19
0x12fba: mov qword ptr [rdx+0x8],0x0
0x12fc2: jmp 0x12f2d
0x12fd0: cmp qword ptr [r12+0x8],0x0
0x12fd6: je 0x12f00
0x12fdc: mov rcx,qword ptr [r12+0x10]
0x12fe1: mov rcx,qword ptr [rcx]
0x12fe4: shl rcx,0x4
0x12fe8: test byte ptr [rdx+rcx+0xa],0x4
0x12fed: jne 0x12e36
0x12ff3: shr r8d,0x8
0x12ff7: mov rcx,rbp
0x12ffa: mov rdx,rbp
0x12ffd: and r8d,0x3ff
0x13004: mov rsi,rbp
0x13007: mov rdi,r15
0x1300a: call 0x120b0
0x1300f: test eax,eax
0x13011: jne 0x12f46
0x13017: mov rax,qword ptr [r15]
0x1301a: add rax,r13
0x1301d: jmp 0x12e36
0x13028: mov rsi,r15
0x1302b: mov rdi,r12
0x1302e: call 0x12da0
0x13033: test eax,eax
0x13035: je 0x12eca
0x1303b: jmp 0x12f46
0x13040: mov eax,0xc
0x13045: jmp 0x12f46
0x1304a: call 0x2560
0x1304f: nop 
0x1319d: mov eax,0xc
0x131a2: jmp 0x1317e
0x131a9: nop dword ptr [rax]
0x13351: mov eax,0xc
0x13356: jmp 0x1330c
0x13360: push rbx
0x13361: mov rbx,rdi
0x13364: sub rsp,0x20
0x13368: mov eax,dword ptr [rsi]
0x1336a: cmp eax,0xf
0x1336d: je 0x133e8
0x1336f: movsxd r9,eax
0x13372: lea r10d,[rax+0x1]
0x13376: mov rdi,qword ptr [rdi]
0x13379: mov rax,r9
0x1337c: shl rax,0x6
0x13380: add rax,0x8
0x13384: shl r9,0x6
0x13388: mov dword ptr [rsi],r10d
0x1338b: add rax,rdi
0x1338e: lea rsi,[rdi+r9]
0x13392: mov qword ptr [rsi+0x8],0x0
0x1339a: mov qword ptr [rsi+0x10],rdx
0x1339e: lea rdi,[rsi+0x20]
0x133a2: mov qword ptr [rsi+0x18],rcx
0x133a6: movdqu xmm0,xmmword ptr [r8]
0x133ab: movups xmmword ptr [rsi+0x30],xmm0
0x133af: and byte ptr [rdi+0x1a],-0xd
0x133b3: test rdx,rdx
0x133b6: mov qword ptr [rsi+0x20],0x0
0x133be: mov qword ptr [rsi+0x28],0x0
0x133c6: mov qword ptr [rsi+0x40],-0x1
0x133ce: je 0x133d3
0x133d0: mov qword ptr [rdx],rax
0x133d3: test rcx,rcx
0x133d6: je 0x133db
0x133d8: mov qword ptr [rcx],rax
0x133db: add rsp,0x20
0x133df: pop rbx
0x133e0: ret 
0x133e8: mov edi,0x3c8
0x133ed: mov qword ptr [rsp+0x18],r8
0x133f2: mov qword ptr [rsp+0x10],rcx
0x133f7: mov qword ptr [rsp+0x8],rdx
0x133fc: mov qword ptr [rsp],rsi
0x13400: call 0x2780
0x13405: test rax,rax
0x13408: mov rdi,rax
0x1340b: je 0x1343c
0x1340d: mov rax,qword ptr [rbx]
0x13410: mov r10d,0x1
0x13416: mov qword ptr [rbx],rdi
0x13419: xor r9d,r9d
0x1341c: mov r8,qword ptr [rsp+0x18]
0x13421: mov rcx,qword ptr [rsp+0x10]
0x13426: mov rdx,qword ptr [rsp+0x8]
0x1342b: mov rsi,qword ptr [rsp]
0x1342f: mov qword ptr [rdi],rax
0x13432: mov eax,0x8
0x13437: jmp 0x13384
0x1343c: xor eax,eax
0x1343e: jmp 0x133db
0x13440: push r14
0x13442: push r13
0x13444: lea r13,[rsi+0x70]
0x13448: push r12
0x1344a: push rbp
0x1344b: lea r12,[rsi+0x80]
0x13452: push rbx
0x13453: mov rbx,rdi
0x13456: sub rsp,0x10
0x1345a: mov rbp,qword ptr [rdi]
0x1345d: mov rax,qword ptr fs:0x28
0x13466: mov qword ptr [rsp+0x8],rax
0x1346b: xor eax,eax
0x1346d: mov r14,rsp
0x13470: lea r8,[rbx+0x28]
0x13474: xor ecx,ecx
0x13476: xor edx,edx
0x13478: mov rsi,r12
0x1347b: mov rdi,r13
0x1347e: call 0x13360
0x13483: test rax,rax
0x13486: mov qword ptr [r14],rax
0x13489: je 0x134dc
0x1348b: mov qword ptr [rax],rbp
0x1348e: mov rbp,qword ptr [r14]
0x13491: or byte ptr [rbp+0x32],0x4
0x13495: mov rax,qword ptr [rbx+0x8]
0x13499: test rax,rax
0x1349c: je 0x134b0
0x1349e: lea r14,[rbp+0x8]
0x134a2: mov rbx,rax
0x134a5: jmp 0x13470
0x134b0: xor edx,edx
0x134b2: jmp 0x134bb
0x134b8: mov rbx,rax
0x134bb: mov rax,qword ptr [rbx+0x10]
0x134bf: test rax,rax
0x134c2: je 0x134c9
0x134c4: cmp rax,rdx
0x134c7: jne 0x13500
0x134c9: mov rax,qword ptr [rbx]
0x134cc: mov rbp,qword ptr [rbp]
0x134d0: mov rdx,rbx
0x134d3: test rax,rax
0x134d6: jne 0x134b8
0x134d8: mov rax,qword ptr [rsp]
0x134dc: mov rcx,qword ptr [rsp+0x8]
0x134e1: xor rcx,qword ptr fs:0x28
0x134ea: jne 0x1350c
0x134ec: add rsp,0x10
0x134f0: pop rbx
0x134f1: pop rbp
0x134f2: pop r12
0x134f4: pop r13
0x134f6: pop r14
0x134f8: ret 
0x13500: lea r14,[rbp+0x10]
0x13504: mov rbx,rax
0x13507: jmp 0x13470
0x1350c: call 0x2560
0x13511: nop dword ptr [rax+rax]
0x13516: nop word ptr cs:[rax+rax]
0x13520: push r15
0x13522: push r14
0x13524: push r13
0x13526: push r12
0x13528: mov r13,rdx
0x1352b: push rbp
0x1352c: push rbx
0x1352d: sub rsp,0x48
0x13531: mov rbx,qword ptr [rsi]
0x13534: mov rbp,qword ptr [rdx+0x8]
0x13538: mov rax,qword ptr fs:0x28
0x13541: mov qword ptr [rsp+0x38],rax
0x13546: xor eax,eax
0x13548: test byte ptr [rsi+0x38],0x10
0x1354c: mov qword ptr [rsp+0x18],rdi
0x13551: je 0x136c8
0x13557: test rbp,rbp
0x1355a: je 0x135d0
0x1355c: mov rax,qword ptr [rdx+0x28]
0x13560: cmp rax,0x3f
0x13564: jg 0x1369d
0x1356a: mov rdx,qword ptr [rbx+0xa0]
0x13571: btq rdx,rax
0x13575: jae 0x1369d
0x1357b: lea rax,[rbx+0x70]
0x1357f: lea r14,[rsp+0x20]
0x13584: sub rbx,-0x80
0x13588: xor ecx,ecx
0x1358a: xor edx,edx
0x1358c: mov rsi,rbx
0x1358f: mov r15,rax
0x13592: mov r8,r14
0x13595: mov rdi,rax
0x13598: mov byte ptr [rsp+0x28],0x8
0x1359d: mov qword ptr [rsp+0x8],rax
0x135a2: call 0x13360
0x135a7: mov rdi,r15
0x135aa: mov r8,r14
0x135ad: xor ecx,ecx
0x135af: xor edx,edx
0x135b1: mov rsi,rbx
0x135b4: mov r12,rax
0x135b7: mov byte ptr [rsp+0x28],0x9
0x135bc: call 0x13360
0x135c1: mov r15,rax
0x135c4: jmp 0x1371d
0x135d0: lea rax,[rbx+0x70]
0x135d4: lea r14,[rsp+0x20]
0x135d9: sub rbx,-0x80
0x135dd: xor ecx,ecx
0x135df: xor edx,edx
0x135e1: mov rsi,rbx
0x135e4: mov r15,rax
0x135e7: mov r8,r14
0x135ea: mov rdi,rax
0x135ed: mov byte ptr [rsp+0x28],0x8
0x135f2: mov qword ptr [rsp+0x8],rax
0x135f7: call 0x13360
0x135fc: mov rdi,r15
0x135ff: mov r8,r14
0x13602: xor ecx,ecx
0x13604: xor edx,edx
0x13606: mov rsi,rbx
0x13609: mov r12,rax
0x1360c: mov byte ptr [rsp+0x28],0x9
0x13611: call 0x13360
0x13616: mov r11,rax
0x13619: mov r15,rax
0x1361c: mov rdi,qword ptr [rsp+0x8]
0x13621: mov r8,r14
0x13624: mov rcx,r11
0x13627: mov rdx,r12
0x1362a: mov rsi,rbx
0x1362d: mov byte ptr [rsp+0x28],0x10
0x13632: mov qword ptr [rsp+0x10],r11
0x13637: call 0x13360
0x1363c: test rax,rax
0x1363f: mov rbp,rax
0x13642: je 0x13740
0x13648: mov r11,qword ptr [rsp+0x10]
0x1364d: test r11,r11
0x13650: je 0x13740
0x13656: test r12,r12
0x13659: je 0x13740
0x1365f: test r15,r15
0x13662: je 0x13740
0x13668: mov rax,qword ptr [r13+0x28]
0x1366c: mov qword ptr [r15+0x28],rax
0x13670: mov qword ptr [r12+0x28],rax
0x13675: movzx eax,byte ptr [r13+0x32]
0x1367a: movzx edx,byte ptr [r15+0x32]
0x1367f: and eax,0x8
0x13682: and edx,-0x9
0x13685: mov ecx,eax
0x13687: or edx,ecx
0x13689: mov byte ptr [r15+0x32],dl
0x1368d: movzx eax,byte ptr [r12+0x32]
0x13693: and eax,-0x9
0x13696: or eax,ecx
0x13698: mov byte ptr [r12+0x32],al
0x1369d: mov rdi,qword ptr [rsp+0x38]
0x136a2: xor rdi,qword ptr fs:0x28
0x136ab: mov rax,rbp
0x136ae: jne 0x13752
0x136b4: add rsp,0x48
0x136b8: pop rbx
0x136b9: pop rbp
0x136ba: pop r12
0x136bc: pop r13
0x136be: pop r14
0x136c0: pop r15
0x136c2: ret 
0x136c8: lea rax,[rbx+0x70]
0x136cc: lea r14,[rsp+0x20]
0x136d1: sub rbx,-0x80
0x136d5: xor ecx,ecx
0x136d7: xor edx,edx
0x136d9: mov rsi,rbx
0x136dc: mov r15,rax
0x136df: mov r8,r14
0x136e2: mov rdi,rax
0x136e5: mov byte ptr [rsp+0x28],0x8
0x136ea: mov qword ptr [rsp+0x8],rax
0x136ef: call 0x13360
0x136f4: xor ecx,ecx
0x136f6: xor edx,edx
0x136f8: mov rdi,r15
0x136fb: mov r8,r14
0x136fe: mov rsi,rbx
0x13701: mov r12,rax
0x13704: mov byte ptr [rsp+0x28],0x9
0x13709: call 0x13360
0x1370e: test rbp,rbp
0x13711: mov r15,rax
0x13714: mov r11,rax
0x13717: je 0x1361c
0x1371d: mov rdi,qword ptr [rsp+0x8]
0x13722: mov r8,r14
0x13725: mov rcx,r15
0x13728: mov rdx,rbp
0x1372b: mov rsi,rbx
0x1372e: mov byte ptr [rsp+0x28],0x10
0x13733: call 0x13360
0x13738: mov r11,rax
0x1373b: jmp 0x1361c
0x13740: mov rax,qword ptr [rsp+0x18]
0x13745: xor ebp,ebp
0x13747: mov dword ptr [rax],0xc
0x1374d: jmp 0x1369d
0x13752: call 0x2560
0x13757: nop word ptr [rax+rax]
0x13760: push rbp
0x13761: push rbx
0x13762: mov rbp,rdi
0x13765: mov rbx,rsi
0x13768: sub rsp,0x18
0x1376c: mov rdx,qword ptr [rsi+0x8]
0x13770: mov rax,qword ptr fs:0x28
0x13779: mov qword ptr [rsp+0x8],rax
0x1377e: xor eax,eax
0x13780: mov dword ptr [rsp+0x4],0x0
0x13788: test rdx,rdx
0x1378b: je 0x13793
0x1378d: cmp byte ptr [rdx+0x30],0x11
0x13791: je 0x137e0
0x13793: mov rdx,qword ptr [rbx+0x10]
0x13797: test rdx,rdx
0x1379a: je 0x137a2
0x1379c: cmp byte ptr [rdx+0x30],0x11
0x137a0: je 0x137c0
0x137a2: mov rcx,qword ptr [rsp+0x8]
0x137a7: xor rcx,qword ptr fs:0x28
0x137b0: mov eax,dword ptr [rsp+0x4]
0x137b4: jne 0x137fb
0x137b6: add rsp,0x18
0x137ba: pop rbx
0x137bb: pop rbp
0x137bc: ret 
0x137c0: lea rdi,[rsp+0x4]
0x137c5: mov rsi,rbp
0x137c8: call 0x13520
0x137cd: test rax,rax
0x137d0: mov qword ptr [rbx+0x10],rax
0x137d4: je 0x137a2
0x137d6: mov qword ptr [rax],rbx
0x137d9: jmp 0x137a2
0x137e0: lea rdi,[rsp+0x4]
0x137e5: mov rsi,rbp
0x137e8: call 0x13520
0x137ed: test rax,rax
0x137f0: mov qword ptr [rbx+0x8],rax
0x137f4: je 0x13793
0x137f6: mov qword ptr [rax],rbx
0x137f9: jmp 0x13793
0x137fb: call 0x2560
0x13870: mov qword ptr [rbx+0x8],0x0
0x13878: mov qword ptr [rbx],0x0
0x1387f: mov eax,0xc
0x13884: jmp 0x1384a
0x139d8: mov eax,0xc
0x139dd: jmp 0x13962
0x13e94: mov rdi,rbx
0x13e97: call 0x12330
0x13e9c: jmp 0x13e88
0x13f8c: nop dword ptr [rax]
0x1430d: mov qword ptr [rsp+0x58],0x0
0x14316: mov qword ptr [rsp+0x50],0x0
0x1431f: mov eax,0xc
0x14324: jmp 0x14220
0x1432e: nop 
0x14eef: nop 
0x1512b: nop dword ptr [rax+rax]
0x15362: test eax,eax
0x15364: mov dword ptr [rsp+0x6c],eax
0x15368: jne 0x15a68
0x1538a: mov rsi,qword ptr [rsp+0x10]
0x1538f: test rax,rax
0x15392: mov qword ptr [rsi+rbx*8],rax
0x15396: je 0x15b48
0x1539c: cmp byte ptr [rax+0x68],0x0
0x153a0: js 0x15ac0
0x153a6: mov rdi,qword ptr [rsp+0x30]
0x153ab: mov rsi,qword ptr [rsp+0x38]
0x153b0: mov qword ptr [rdi+rbx*8],rax
0x153b4: mov rax,qword ptr [rsp+0x10]
0x153b9: mov rax,qword ptr [rax+rbx*8]
0x153bd: mov qword ptr [rsi+rbx*8],rax
0x153c1: lea rdx,[rsp+0xd0]
0x153c9: xor eax,eax
0x153cb: mov rcx,qword ptr [rdx+rax]
0x153cf: or rcx,qword ptr [r12+rax]
0x153d3: mov qword ptr [rdx+rax],rcx
0x153d7: add rax,0x8
0x153db: cmp rax,0x20
0x153df: jne 0x153cb
0x153e1: add rbx,0x1
0x153e5: add r13,0x18
0x153e9: add r12,0x20
0x153ed: cmp rbx,qword ptr [rsp+0x20]
0x153f2: jne 0x15322
0x153f8: cmp byte ptr [rsp+0x4f],0x0
0x153fd: mov r15,rbp
0x15400: mov rbp,qword ptr [rsp+0x20]
0x15405: mov qword ptr [rsp+0x20],rdx
0x1540a: jne 0x15b59
0x15410: mov esi,0x100
0x15415: mov edi,0x8
0x1541a: call 0x26b0
0x1541f: mov r11,rax
0x15422: mov rax,qword ptr [rsp+0x8]
0x15427: test r11,r11
0x1542a: mov qword ptr [rax+0x58],r11
0x1542e: je 0x15a6d
0x15434: mov rbx,qword ptr [rsp+0x40]
0x15439: mov r12,qword ptr [rsp+0x10]
0x1543e: xor r9d,r9d
0x15441: mov r13,qword ptr [rsp+0x30]
0x15446: mov rdx,qword ptr [rsp+0x20]
0x1544b: add rbx,0x20
0x1544f: mov rax,qword ptr [rdx+r9]
0x15453: test rax,rax
0x15456: je 0x15484
0x15458: mov rsi,r9
0x1545b: mov ecx,0x1
0x15460: shl rsi,0x6
0x15464: add rsi,r11
0x15467: nop word ptr [rax+rax]
0x15470: test al,0x1
0x15472: jne 0x15bd8
0x15478: add rcx,rcx
0x1547b: add rsi,0x8
0x1547f: shr rax, 1
0x15482: jne 0x15470
0x15484: add r9,0x8
0x15488: cmp r9,0x20
0x1548c: jne 0x1544f
0x1548e: test byte ptr [rsp+0xd1],0x4
0x15496: je 0x154d2
0x15498: xor eax,eax
0x1549a: mov rdx,qword ptr [rsp+0x50]
0x1549f: jmp 0x154ae
0x154a1: add rax,0x1
0x154a5: add rdx,0x20
0x154a9: cmp rax,rbp
0x154ac: je 0x154d2
0x154ae: test qword ptr [rdx],0x400
0x154b5: je 0x154a1
0x154b7: mov rbx,qword ptr [rsp+0x38]
0x154bc: cmp byte ptr [rsp+0x4f],0x0
0x154c1: mov rax,qword ptr [rbx+rax*8]
0x154c5: mov qword ptr [r11+0x50],rax
0x154c9: je 0x154d2
0x154cb: mov qword ptr [r11+0x850],rax
0x154d2: mov rdi,qword ptr [rsp+0x10]
0x154d7: call 0x2a10
0x154dc: mov rdi,qword ptr [rsp+0x80]
0x154e4: call 0x2a10
0x154e9: mov rax,qword ptr [rsp+0x18]
0x154ee: mov rbx,qword ptr [rsp+0x58]
0x154f3: lea rbp,[rax+0x10]
0x154f7: add rbx,rbp
0x154fa: mov rdi,qword ptr [rbp]
0x154fe: add rbp,0x18
0x15502: call 0x2a10
0x15507: cmp rbx,rbp
0x1550a: jne 0x154fa
0x1550c: mov rdi,qword ptr [rsp+0x18]
0x15511: call 0x2a10
0x15516: mov eax,0x1
0x1551b: jmp 0x15542
0x1551d: test rbp,rbp
0x15520: mov qword ptr [rbx+0x8],0x0
0x15528: mov qword ptr [rbx],0x0
0x1552f: jne 0x15860
0x15535: mov rdi,qword ptr [rsp+0x18]
0x1553a: call 0x2a10
0x1553f: nop 
0x15a56: mov edx,dword ptr [rsp+0x6c]
0x15a5a: test edx,edx
0x15a5c: je 0x15ae7
0x15a62: nop word ptr [rax+rax]
0x15a68: mov rbp,qword ptr [rsp+0x20]
0x15a6d: mov rdi,qword ptr [rsp+0x10]
0x15a72: call 0x2a10
0x15a77: mov r12,qword ptr [rsp+0x80]
0x15ac0: mov rdi,qword ptr [rsp+0x28]
0x15ac5: mov ecx,0x1
0x15aca: mov rdx,r14
0x15acd: mov rsi,rbp
0x15ad0: call 0x139f0
0x15ad5: mov rdi,qword ptr [rsp+0x30]
0x15ada: test rax,rax
0x15add: mov qword ptr [rdi+rbx*8],rax
0x15ae1: je 0x15a56
0x15ae7: mov rdi,qword ptr [rsp+0x10]
0x15aec: cmp rax,qword ptr [rdi+rbx*8]
0x15af0: je 0x15b0b
0x15af2: movzx edi,byte ptr [rsp+0x4f]
0x15af7: cmp dword ptr [rbp+0xb4],0x2
0x15afe: mov eax,0x1
0x15b03: cmovge edi,eax
0x15b06: mov byte ptr [rsp+0x4f],dil
0x15b0b: mov rdi,qword ptr [rsp+0x28]
0x15b10: mov rsi,rbp
0x15b13: mov ecx,0x2
0x15b18: mov rdx,r14
0x15b1b: call 0x139f0
0x15b20: mov rsi,qword ptr [rsp+0x38]
0x15b25: test rax,rax
0x15b28: mov qword ptr [rsi+rbx*8],rax
0x15b2c: jne 0x153c1
0x15b32: mov eax,dword ptr [rsp+0x6c]
0x15b36: test eax,eax
0x15b38: je 0x153c1
0x15b3e: jmp 0x15a68
0x15b48: mov ecx,dword ptr [rsp+0x6c]
0x15b4c: test ecx,ecx
0x15b4e: je 0x1539c
0x15b54: jmp 0x15a68
0x15b59: mov esi,0x200
0x15b5e: mov edi,0x8
0x15b63: call 0x26b0
0x15b68: mov r11,rax
0x15b6b: mov rax,qword ptr [rsp+0x8]
0x15b70: test r11,r11
0x15b73: mov qword ptr [rax+0x60],r11
0x15b77: je 0x15a6d
0x15b7d: mov r13,qword ptr [rsp+0x40]
0x15b82: mov r10,qword ptr [rsp+0x10]
0x15b87: mov r12,r11
0x15b8a: mov r14,qword ptr [rsp+0x30]
0x15b8f: mov rdx,qword ptr [rsp+0x20]
0x15b94: xor ebx,ebx
0x15b96: add r13,0x20
0x15b9a: mov rax,qword ptr [rdx+rbx]
0x15b9e: test rax,rax
0x15ba1: je 0x15bbf
0x15ba3: mov rsi,r12
0x15ba6: mov ecx,0x1
0x15bab: test al,0x1
0x15bad: jne 0x15c5c
0x15bb3: add rcx,rcx
0x15bb6: add rsi,0x8
0x15bba: shr rax, 1
0x15bbd: jne 0x15bab
0x15bbf: add rbx,0x8
0x15bc3: add r12,0x200
0x15bca: cmp rbx,0x20
0x15bce: jne 0x15b9a
0x15bd0: jmp 0x1548e
0x15bd8: mov rdi,qword ptr [rsp+0x18]
0x15bdd: test qword ptr [rdi+r9+0x1800],rcx
0x15be5: jne 0x15c57
0x15be7: lea rdi,[rbx+r9]
0x15beb: xor r8d,r8d
0x15bee: nop 
0x15bf0: mov r10,qword ptr [rdi]
0x15bf3: add r8,0x1
0x15bf7: add rdi,0x20
0x15bfb: and r10,rcx
0x15bfe: test r10,r10
0x15c01: je 0x15bf0
0x15c03: shl r8,0x3
0x15c07: test qword ptr [r15+r9+0xb8],rcx
0x15c0f: je 0x15c1e
0x15c11: mov rdi,qword ptr [r13+r8]
0x15c16: mov qword ptr [rsi],rdi
0x15c19: jmp 0x15478
0x15c1e: mov rdi,qword ptr [r12+r8]
0x15c22: mov qword ptr [rsi],rdi
0x15c25: jmp 0x15478
0x15c57: xor r8d,r8d
0x15c5a: jmp 0x15c07
0x15c5c: mov rdi,qword ptr [rsp+0x18]
0x15c61: test qword ptr [rdi+rbx+0x1800],rcx
0x15c69: jne 0x15ca0
0x15c6b: lea r9,[r13+rbx]
0x15c70: xor r8d,r8d
0x15c73: mov r15,qword ptr [r9]
0x15c76: add r8,0x1
0x15c7a: add r9,0x20
0x15c7e: mov rdi,r8
0x15c81: and r15,rcx
0x15c84: test r15,r15
0x15c87: je 0x15c73
0x15c89: mov r8,qword ptr [r10+rdi*8]
0x15c8d: mov qword ptr [rsi],r8
0x15c90: mov rdi,qword ptr [r14+rdi*8]
0x15c94: mov qword ptr [rsi+0x800],rdi
0x15c9b: jmp 0x15bb3
0x15ca0: xor edi,edi
0x15ca2: jmp 0x15c89
0x15cd0: cmp byte ptr [rsi+0x30],0x10
0x15cd4: je 0x15d38
0x15cd6: push rbp
0x15cd7: push rbx
0x15cd8: mov rbx,rsi
0x15cdb: mov rbp,rdi
0x15cde: sub rsp,0x8
0x15ce2: mov qword ptr [rbx+0x18],rsi
0x15ce6: mov rdx,qword ptr [rbx+0x30]
0x15cea: mov rsi,qword ptr [rsi+0x28]
0x15cee: call 0x11e40
0x15cf3: cmp rax,-0x1
0x15cf7: mov rdx,rax
0x15cfa: mov qword ptr [rbx+0x38],rax
0x15cfe: je 0x15d50
0x15d00: xor eax,eax
0x15d02: cmp byte ptr [rbx+0x30],0xc
0x15d06: jne 0x15d2c
0x15d08: mov ecx,dword ptr [rbx+0x28]
0x15d0b: shl rdx,0x4
0x15d0f: add rdx,qword ptr [rbp]
0x15d13: and ecx,0x3ff
0x15d19: shl ecx,0x8
0x15d1c: mov esi,ecx
0x15d1e: mov ecx,dword ptr [rdx+0x8]
0x15d21: and ecx,0xfffc00ff
0x15d27: or ecx,esi
0x15d29: mov dword ptr [rdx+0x8],ecx
0x15d2c: add rsp,0x8
0x15d30: pop rbx
0x15d31: pop rbp
0x15d32: ret 
0x15d38: mov rax,qword ptr [rsi+0x8]
0x15d3c: mov rdx,qword ptr [rax+0x18]
0x15d40: mov rax,qword ptr [rax+0x38]
0x15d44: mov qword ptr [rsi+0x18],rdx
0x15d48: mov qword ptr [rsi+0x38],rax
0x15d4c: xor eax,eax
0x15d4e: ret 
0x15d50: mov eax,0xc
0x15d55: jmp 0x15d2c
0x15e44: nop 
0x15e46: nop word ptr cs:[rax+rax]
0x15e50: push rbp
0x15e51: push rbx
0x15e52: mov rbp,rdi
0x15e55: mov rdi,rsi
0x15e58: mov rbx,rsi
0x15e5b: sub rsp,0x8
0x15e5f: call 0x2530
0x15e64: cmp rax,0x1
0x15e68: jne 0x15e90
0x15e6a: movzx ecx,byte ptr [rbx]
0x15e6d: mov rdx,rcx
0x15e70: and ecx,0x3f
0x15e73: shr rdx,0x3
0x15e77: shl rax,cl
0x15e7a: and edx,0x18
0x15e7d: or qword ptr [rbp+rdx],rax
0x15e82: add rsp,0x8
0x15e86: xor eax,eax
0x15e88: pop rbx
0x15e89: pop rbp
0x15e8a: ret 
0x15e90: add rsp,0x8
0x15e94: mov eax,0x3
0x15e99: pop rbx
0x15e9a: pop rbp
0x15e9b: ret 
0x15ea0: push r14
0x15ea2: push r13
0x15ea4: mov r13,rcx
0x15ea7: push r12
0x15ea9: push rbp
0x15eaa: mov r12,r9
0x15ead: push rbx
0x15eae: mov rbp,rdi
0x15eb1: mov rbx,rsi
0x15eb4: sub rsp,0x10
0x15eb8: test qword ptr [rsp+0x40],0x400000
0x15ec1: je 0x15ee8
0x15ec3: lea rdi,[rip+0xc949]
0x15eca: mov ecx,0x6
0x15ecf: mov rsi,r9
0x15ed2: rep cmpsb [rsi],es:[rdi]
0x15ed4: seta al
0x15ed7: sbb al,0x0
0x15ed9: test al,al
0x15edb: jne 0x15fd6
0x15ee1: lea r12,[rip+0xc925]
0x15ee8: mov rcx,qword ptr [r13]
0x15eec: cmp qword ptr [r8],rcx
0x15eef: mov rax,qword ptr [rdx]
0x15ef2: je 0x16009
0x15ef8: lea rdx,[rcx+0x1]
0x15efc: mov rdi,r12
0x15eff: mov qword ptr [r13],rdx
0x15f03: lea r13,[rax+rcx*8]
0x15f07: call 0x2690
0x15f0c: lea rdi,[rip+0xc90c]
0x15f13: mov qword ptr [r13],rax
0x15f17: mov ecx,0x6
0x15f1c: mov rsi,r12
0x15f1f: rep cmpsb [rsi],es:[rdi]
0x15f21: seta al
0x15f24: sbb al,0x0
0x15f26: test al,al
0x15f28: je 0x15f98
0x15f2a: lea rdi,[rip+0xc8f4]
0x15f31: mov ecx,0x6
0x15f36: mov rsi,r12
0x15f39: rep cmpsb [rsi],es:[rdi]
0x15f3b: seta al
0x15f3e: sbb al,0x0
0x15f40: test al,al
0x15f42: jne 0x16048
0x15f48: call 0x29f0
0x15f4d: xor ecx,ecx
0x15f4f: test rbp,rbp
0x15f52: mov rdx,qword ptr [rax]
0x15f55: mov edi,0x1
0x15f5a: jne 0x1621a
0x15f60: test byte ptr [rdx+rcx*2],0x2
0x15f64: je 0x15f77
0x15f66: mov rax,rcx
0x15f69: mov rsi,rdi
0x15f6c: sar rax,0x6
0x15f70: shl rsi,cl
0x15f73: or qword ptr [rbx+rax*8],rsi
0x15f77: add rcx,0x1
0x15f7b: cmp rcx,0x100
0x15f82: jne 0x15f60
0x15f84: xor eax,eax
0x15f86: add rsp,0x10
0x15f8a: pop rbx
0x15f8b: pop rbp
0x15f8c: pop r12
0x15f8e: pop r13
0x15f90: pop r14
0x15f92: ret 
0x15f98: call 0x29f0
0x15f9d: xor ecx,ecx
0x15f9f: test rbp,rbp
0x15fa2: mov rdx,qword ptr [rax]
0x15fa5: mov edi,0x1
0x15faa: jne 0x1619a
0x15fb0: test byte ptr [rdx+rcx*2],0x8
0x15fb4: je 0x15fc7
0x15fb6: mov rax,rcx
0x15fb9: mov rsi,rdi
0x15fbc: sar rax,0x6
0x15fc0: shl rsi,cl
0x15fc3: or qword ptr [rbx+rax*8],rsi
0x15fc7: add rcx,0x1
0x15fcb: cmp rcx,0x100
0x15fd2: jne 0x15fb0
0x15fd4: jmp 0x15f84
0x15fd6: lea rdi,[rip+0xc83c]
0x15fdd: mov ecx,0x6
0x15fe2: mov rsi,r9
0x15fe5: rep cmpsb [rsi],es:[rdi]
0x15fe7: mov rcx,qword ptr [r13]
0x15feb: seta al
0x15fee: sbb al,0x0
0x15ff0: test al,al
0x15ff2: lea rax,[rip+0xc814]
0x15ff9: cmove r12,rax
0x15ffd: cmp qword ptr [r8],rcx
0x16000: mov rax,qword ptr [rdx]
0x16003: jne 0x15ef8
0x16009: lea r14,[rcx+rcx+0x1]
0x1600e: mov rdi,rax
0x16011: mov qword ptr [rsp+0x8],r8
0x16016: mov qword ptr [rsp],rdx
0x1601a: lea rsi,[r14*8]
0x16022: call 0x2830
0x16027: test rax,rax
0x1602a: je 0x16348
0x16030: mov rdx,qword ptr [rsp]
0x16034: mov r8,qword ptr [rsp+0x8]
0x16039: mov qword ptr [rdx],rax
0x1603c: mov qword ptr [r8],r14
0x1603f: mov rcx,qword ptr [r13]
0x16043: jmp 0x15ef8
0x16048: lea rdi,[rip+0xc7ca]
0x1604f: mov ecx,0x6
0x16054: mov rsi,r12
0x16057: rep cmpsb [rsi],es:[rdi]
0x16059: seta al
0x1605c: sbb al,0x0
0x1605e: test al,al
0x16060: je 0x160ca
0x16062: lea rdi,[rip+0xc7c2]
0x16069: mov ecx,0x6
0x1606e: mov rsi,r12
0x16071: rep cmpsb [rsi],es:[rdi]
0x16073: seta al
0x16076: sbb al,0x0
0x16078: test al,al
0x1607a: jne 0x16112
0x16080: call 0x29f0
0x16085: xor ecx,ecx
0x16087: test rbp,rbp
0x1608a: mov rdx,qword ptr [rax]
0x1608d: mov edi,0x1
0x16092: jne 0x163ee
0x16098: nop dword ptr [rax+rax]
0x160a0: test byte ptr [rdx+rcx*2+0x1],0x20
0x160a5: je 0x160b8
0x160a7: mov rax,rcx
0x160aa: mov rsi,rdi
0x160ad: sar rax,0x6
0x160b1: shl rsi,cl
0x160b4: or qword ptr [rbx+rax*8],rsi
0x160b8: add rcx,0x1
0x160bc: cmp rcx,0x100
0x160c3: jne 0x160a0
0x160c5: jmp 0x15f84
0x160ca: call 0x29f0
0x160cf: xor ecx,ecx
0x160d1: test rbp,rbp
0x160d4: mov rdx,qword ptr [rax]
0x160d7: mov edi,0x1
0x160dc: jne 0x162b2
0x160e2: nop word ptr [rax+rax]
0x160e8: test byte ptr [rdx+rcx*2+0x1],0x2
0x160ed: je 0x16100
0x160ef: mov rax,rcx
0x160f2: mov rsi,rdi
0x160f5: sar rax,0x6
0x160f9: shl rsi,cl
0x160fc: or qword ptr [rbx+rax*8],rsi
0x16100: add rcx,0x1
0x16104: cmp rcx,0x100
0x1610b: jne 0x160e8
0x1610d: jmp 0x15f84
0x16112: lea rdi,[rip+0xc6f4]
0x16119: mov ecx,0x6
0x1611e: mov rsi,r12
0x16121: rep cmpsb [rsi],es:[rdi]
0x16123: seta al
0x16126: sbb al,0x0
0x16128: test al,al
0x1612a: je 0x161d3
0x16130: lea rdi,[rip+0xc713]
0x16137: mov ecx,0x6
0x1613c: mov rsi,r12
0x1613f: rep cmpsb [rsi],es:[rdi]
0x16141: seta al
0x16144: sbb al,0x0
0x16146: test al,al
0x16148: jne 0x16253
0x1614e: call 0x29f0
0x16153: xor ecx,ecx
0x16155: test rbp,rbp
0x16158: mov rdx,qword ptr [rax]
0x1615b: mov edi,0x1
0x16160: jne 0x1660a
0x16166: nop word ptr cs:[rax+rax]
0x16170: test byte ptr [rdx+rcx*2+0x1],0x8
0x16175: je 0x16188
0x16177: mov rax,rcx
0x1617a: mov rsi,rdi
0x1617d: sar rax,0x6
0x16181: shl rsi,cl
0x16184: or qword ptr [rbx+rax*8],rsi
0x16188: add rcx,0x1
0x1618c: cmp rcx,0x100
0x16193: jne 0x16170
0x16195: jmp 0x15f84
0x1619a: xor eax,eax
0x1619c: nop dword ptr [rax]
0x161a0: test byte ptr [rdx+rax*2],0x8
0x161a4: je 0x161c2
0x161a6: movzx ecx,byte ptr [rbp+rax]
0x161ab: mov r10,rdi
0x161ae: mov rsi,rcx
0x161b1: and ecx,0x3f
0x161b4: shr rsi,0x3
0x161b8: shl r10,cl
0x161bb: and esi,0x18
0x161be: or qword ptr [rbx+rsi],r10
0x161c2: add rax,0x1
0x161c6: cmp rax,0x100
0x161cc: jne 0x161a0
0x161ce: jmp 0x15f84
0x161d3: call 0x29f0
0x161d8: xor ecx,ecx
0x161da: test rbp,rbp
0x161dd: mov rdx,qword ptr [rax]
0x161e0: mov edi,0x1
0x161e5: jne 0x163b8
0x161eb: nop dword ptr [rax+rax]
0x161f0: test byte ptr [rdx+rcx*2+0x1],0x4
0x161f5: je 0x16208
0x161f7: mov rax,rcx
0x161fa: mov rsi,rdi
0x161fd: sar rax,0x6
0x16201: shl rsi,cl
0x16204: or qword ptr [rbx+rax*8],rsi
0x16208: add rcx,0x1
0x1620c: cmp rcx,0x100
0x16213: jne 0x161f0
0x16215: jmp 0x15f84
0x1621a: xor eax,eax
0x1621c: nop dword ptr [rax]
0x16220: test byte ptr [rdx+rax*2],0x2
0x16224: je 0x16242
0x16226: movzx ecx,byte ptr [rbp+rax]
0x1622b: mov r11,rdi
0x1622e: mov rsi,rcx
0x16231: and ecx,0x3f
0x16234: shr rsi,0x3
0x16238: shl r11,cl
0x1623b: and esi,0x18
0x1623e: or qword ptr [rbx+rsi],r11
0x16242: add rax,0x1
0x16246: cmp rax,0x100
0x1624c: jne 0x16220
0x1624e: jmp 0x15f84
0x16253: lea rdi,[rip+0xc5d7]
0x1625a: mov ecx,0x6
0x1625f: mov rsi,r12
0x16262: rep cmpsb [rsi],es:[rdi]
0x16264: seta al
0x16267: sbb al,0x0
0x16269: test al,al
0x1626b: jne 0x162ec
0x1626d: call 0x29f0
0x16272: xor ecx,ecx
0x16274: test rbp,rbp
0x16277: mov rdx,qword ptr [rax]
0x1627a: mov edi,0x1
0x1627f: jne 0x16677
0x16285: nop dword ptr [rax]
0x16288: test byte ptr [rdx+rcx*2+0x1],0x40
0x1628d: je 0x162a0
0x1628f: mov rax,rcx
0x16292: mov rsi,rdi
0x16295: sar rax,0x6
0x16299: shl rsi,cl
0x1629c: or qword ptr [rbx+rax*8],rsi
0x162a0: add rcx,0x1
0x162a4: cmp rcx,0x100
0x162ab: jne 0x16288
0x162ad: jmp 0x15f84
0x162b2: xor eax,eax
0x162b4: nop dword ptr [rax]
0x162b8: test byte ptr [rdx+rax*2+0x1],0x2
0x162bd: je 0x162db
0x162bf: movzx ecx,byte ptr [rbp+rax]
0x162c4: mov r14,rdi
0x162c7: mov rsi,rcx
0x162ca: and ecx,0x3f
0x162cd: shr rsi,0x3
0x162d1: shl r14,cl
0x162d4: and esi,0x18
0x162d7: or qword ptr [rbx+rsi],r14
0x162db: add rax,0x1
0x162df: cmp rax,0x100
0x162e5: jne 0x162b8
0x162e7: jmp 0x15f84
0x162ec: lea rdi,[rip+0xc520]
0x162f3: mov ecx,0x6
0x162f8: mov rsi,r12
0x162fb: rep cmpsb [rsi],es:[rdi]
0x162fd: seta al
0x16300: sbb al,0x0
0x16302: test al,al
0x16304: jne 0x16352
0x16306: call 0x29f0
0x1630b: xor ecx,ecx
0x1630d: test rbp,rbp
0x16310: mov rax,qword ptr [rax]
0x16313: mov edi,0x1
0x16318: jne 0x16640
0x1631e: test byte ptr [rax+rcx*2+0x1],0x1
0x16323: je 0x16336
0x16325: mov rdx,rcx
0x16328: mov rsi,rdi
0x1632b: sar rdx,0x6
0x1632f: shl rsi,cl
0x16332: or qword ptr [rbx+rdx*8],rsi
0x16336: add rcx,0x1
0x1633a: cmp rcx,0x100
0x16341: jne 0x1631e
0x16343: jmp 0x15f84
0x16348: mov eax,0xc
0x1634d: jmp 0x15f86
0x16352: lea rdi,[rip+0xc4de]
0x16359: mov ecx,0x6
0x1635e: mov rsi,r12
0x16361: rep cmpsb [rsi],es:[rdi]
0x16363: seta al
0x16366: sbb al,0x0
0x16368: test al,al
0x1636a: jne 0x1645e
0x16370: call 0x29f0
0x16375: xor ecx,ecx
0x16377: test rbp,rbp
0x1637a: mov rdx,qword ptr [rax]
0x1637d: mov esi,0x1
0x16382: jne 0x16424
0x16388: test byte ptr [rdx+rcx*2],0x1
0x1638c: je 0x1639f
0x1638e: mov rax,rcx
0x16391: mov rdi,rsi
0x16394: sar rax,0x6
0x16398: shl rdi,cl
0x1639b: or qword ptr [rbx+rax*8],rdi
0x1639f: add rcx,0x1
0x163a3: cmp rcx,0x100
0x163aa: jne 0x16388
0x163ac: jmp 0x15f84
0x163b8: xor eax,eax
0x163ba: test byte ptr [rdx+rax*2+0x1],0x4
0x163bf: je 0x163dd
0x163c1: movzx ecx,byte ptr [rbp+rax]
0x163c6: mov r9,rdi
0x163c9: mov rsi,rcx
0x163cc: and ecx,0x3f
0x163cf: shr rsi,0x3
0x163d3: shl r9,cl
0x163d6: and esi,0x18
0x163d9: or qword ptr [rbx+rsi],r9
0x163dd: add rax,0x1
0x163e1: cmp rax,0x100
0x163e7: jne 0x163ba
0x163e9: jmp 0x15f84
0x163ee: xor eax,eax
0x163f0: test byte ptr [rdx+rax*2+0x1],0x20
0x163f5: je 0x16413
0x163f7: movzx ecx,byte ptr [rbp+rax]
0x163fc: mov r9,rdi
0x163ff: mov rsi,rcx
0x16402: and ecx,0x3f
0x16405: shr rsi,0x3
0x16409: shl r9,cl
0x1640c: and esi,0x18
0x1640f: or qword ptr [rbx+rsi],r9
0x16413: add rax,0x1
0x16417: cmp rax,0x100
0x1641d: jne 0x163f0
0x1641f: jmp 0x15f84
0x16424: xor eax,eax
0x16426: mov edi,0x1
0x1642b: test byte ptr [rdx+rax*2],0x1
0x1642f: je 0x1644d
0x16431: movzx ecx,byte ptr [rbp+rax]
0x16436: mov r14,rdi
0x16439: mov rsi,rcx
0x1643c: and ecx,0x3f
0x1643f: shr rsi,0x3
0x16443: shl r14,cl
0x16446: and esi,0x18
0x16449: or qword ptr [rbx+rsi],r14
0x1644d: add rax,0x1
0x16451: cmp rax,0x100
0x16457: jne 0x1642b
0x16459: jmp 0x15f84
0x1645e: lea rsi,[rip+0xc3d8]
0x16465: mov rdi,r12
0x16468: call 0x26d0
0x1646d: test eax,eax
0x1646f: jne 0x164ea
0x16471: call 0x29f0
0x16476: xor ecx,ecx
0x16478: test rbp,rbp
0x1647b: mov rsi,qword ptr [rax]
0x1647e: mov edx,0x1
0x16483: jne 0x164af
0x16485: cmp word ptr [rsi+rcx*2],0x0
0x1648a: jns 0x1649d
0x1648c: mov rax,rcx
0x1648f: mov rdi,rdx
0x16492: sar rax,0x6
0x16496: shl rdi,cl
0x16499: or qword ptr [rbx+rax*8],rdi
0x1649d: add rcx,0x1
0x164a1: cmp rcx,0x100
0x164a8: jne 0x16485
0x164aa: jmp 0x15f84
0x164af: xor eax,eax
0x164b1: mov edi,0x1
0x164b6: cmp word ptr [rsi+rax*2],0x0
0x164bb: jns 0x164d9
0x164bd: movzx ecx,byte ptr [rbp+rax]
0x164c2: mov r9,rdi
0x164c5: mov rdx,rcx
0x164c8: and ecx,0x3f
0x164cb: shr rdx,0x3
0x164cf: shl r9,cl
0x164d2: and edx,0x18
0x164d5: or qword ptr [rbx+rdx],r9
0x164d9: add rax,0x1
0x164dd: cmp rax,0x100
0x164e3: jne 0x164b6
0x164e5: jmp 0x15f84
0x164ea: lea rsi,[rip+0xc352]
0x164f1: mov rdi,r12
0x164f4: call 0x26d0
0x164f9: test eax,eax
0x164fb: jne 0x16574
0x164fd: call 0x29f0
0x16502: xor ecx,ecx
0x16504: test rbp,rbp
0x16507: mov rsi,qword ptr [rax]
0x1650a: mov edx,0x1
0x1650f: jne 0x1653a
0x16511: test byte ptr [rsi+rcx*2],0x4
0x16515: je 0x16528
0x16517: mov rax,rcx
0x1651a: mov rdi,rdx
0x1651d: sar rax,0x6
0x16521: shl rdi,cl
0x16524: or qword ptr [rbx+rax*8],rdi
0x16528: add rcx,0x1
0x1652c: cmp rcx,0x100
0x16533: jne 0x16511
0x16535: jmp 0x15f84
0x1653a: xor eax,eax
0x1653c: mov edi,0x1
0x16541: test byte ptr [rsi+rax*2],0x4
0x16545: je 0x16563
0x16547: movzx ecx,byte ptr [rbp+rax]
0x1654c: mov r14,rdi
0x1654f: mov rdx,rcx
0x16552: and ecx,0x3f
0x16555: shr rdx,0x3
0x16559: shl r14,cl
0x1655c: and edx,0x18
0x1655f: or qword ptr [rbx+rdx],r14
0x16563: add rax,0x1
0x16567: cmp rax,0x100
0x1656d: jne 0x16541
0x1656f: jmp 0x15f84
0x16574: lea rsi,[rip+0xc2ce]
0x1657b: mov rdi,r12
0x1657e: call 0x26d0
0x16583: test eax,eax
0x16585: jne 0x16600
0x16587: call 0x29f0
0x1658c: xor ecx,ecx
0x1658e: test rbp,rbp
0x16591: mov rsi,qword ptr [rax]
0x16594: mov edx,0x1
0x16599: jne 0x165c5
0x1659b: test byte ptr [rsi+rcx*2+0x1],0x10
0x165a0: je 0x165b3
0x165a2: mov rax,rcx
0x165a5: mov rdi,rdx
0x165a8: sar rax,0x6
0x165ac: shl rdi,cl
0x165af: or qword ptr [rbx+rax*8],rdi
0x165b3: add rcx,0x1
0x165b7: cmp rcx,0x100
0x165be: jne 0x1659b
0x165c0: jmp 0x15f84
0x165c5: xor eax,eax
0x165c7: mov edi,0x1
0x165cc: test byte ptr [rsi+rax*2+0x1],0x10
0x165d1: je 0x165ef
0x165d3: movzx ecx,byte ptr [rbp+rax]
0x165d8: mov r9,rdi
0x165db: mov rdx,rcx
0x165de: and ecx,0x3f
0x165e1: shr rdx,0x3
0x165e5: shl r9,cl
0x165e8: and edx,0x18
0x165eb: or qword ptr [rbx+rdx],r9
0x165ef: add rax,0x1
0x165f3: cmp rax,0x100
0x165f9: jne 0x165cc
0x165fb: jmp 0x15f84
0x16600: mov eax,0x4
0x16605: jmp 0x15f86
0x1660a: xor eax,eax
0x1660c: test byte ptr [rdx+rax*2+0x1],0x8
0x16611: je 0x1662f
0x16613: movzx ecx,byte ptr [rbp+rax]
0x16618: mov r14,rdi
0x1661b: mov rsi,rcx
0x1661e: and ecx,0x3f
0x16621: shr rsi,0x3
0x16625: shl r14,cl
0x16628: and esi,0x18
0x1662b: or qword ptr [rbx+rsi],r14
0x1662f: add rax,0x1
0x16633: cmp rax,0x100
0x16639: jne 0x1660c
0x1663b: jmp 0x15f84
0x16640: xor edx,edx
0x16642: test byte ptr [rax+rdx*2+0x1],0x1
0x16647: je 0x16665
0x16649: movzx ecx,byte ptr [rbp+rdx]
0x1664e: mov r9,rdi
0x16651: mov rsi,rcx
0x16654: and ecx,0x3f
0x16657: shr rsi,0x3
0x1665b: shl r9,cl
0x1665e: and esi,0x18
0x16661: or qword ptr [rbx+rsi],r9
0x16665: add rdx,0x1
0x16669: cmp rdx,0x100
0x16670: jne 0x16642
0x16672: jmp 0x15f84
0x16677: xor eax,eax
0x16679: test byte ptr [rdx+rax*2+0x1],0x40
0x1667e: je 0x1669c
0x16680: movzx ecx,byte ptr [rbp+rax]
0x16685: mov r14,rdi
0x16688: mov rsi,rcx
0x1668b: and ecx,0x3f
0x1668e: shr rsi,0x3
0x16692: shl r14,cl
0x16695: and esi,0x18
0x16698: or qword ptr [rbx+rsi],r14
0x1669c: add rax,0x1
0x166a0: cmp rax,0x100
0x166a6: jne 0x16679
0x166a8: jmp 0x15f84
0x166b0: push r15
0x166b2: push r14
0x166b4: mov r14,rdx
0x166b7: push r13
0x166b9: push r12
0x166bb: mov r13,rcx
0x166be: push rbp
0x166bf: push rbx
0x166c0: mov rbp,rdi
0x166c3: mov edi,0x20
0x166c8: mov r12d,r8d
0x166cb: sub rsp,0x58
0x166cf: mov qword ptr [rsp],rsi
0x166d3: mov esi,0x1
0x166d8: mov qword ptr [rsp+0x8],r9
0x166dd: mov rax,qword ptr fs:0x28
0x166e6: mov qword ptr [rsp+0x48],rax
0x166eb: xor eax,eax
0x166ed: mov qword ptr [rsp+0x18],0x0
0x166f6: call 0x26b0
0x166fb: test rax,rax
0x166fe: je 0x168c0
0x16704: mov esi,0x1
0x16709: mov edi,0x50
0x1670e: mov rbx,rax
0x16711: call 0x26b0
0x16716: test rax,rax
0x16719: mov r15,rax
0x1671c: je 0x168d0
0x16722: movzx eax,byte ptr [rax+0x20]
0x16726: sub rsp,0x8
0x1672a: mov edx,r12d
0x1672d: push 0x0
0x1672f: and edx,0x1
0x16732: mov rdi,qword ptr [rsp+0x10]
0x16737: lea rcx,[r15+0x48]
0x1673b: mov r9,r14
0x1673e: mov rsi,rbx
0x16741: lea r8,[rsp+0x28]
0x16746: and eax,-0x2
0x16749: or eax,edx
0x1674b: lea rdx,[r15+0x18]
0x1674f: mov byte ptr [r15+0x20],al
0x16753: call 0x15ea0
0x16758: test eax,eax
0x1675a: pop rdx
0x1675b: pop rcx
0x1675c: jne 0x168f0
0x16762: movsx rcx,byte ptr [r13]
0x16767: mov esi,0x1
0x1676c: test cl,cl
0x1676e: je 0x167aa
0x16770: lea rax,[rcx+0x3f]
0x16774: test rcx,rcx
0x16777: mov rdx,rcx
0x1677a: cmovns rax,rcx
0x1677e: sar rdx,0x3f
0x16782: add r13,0x1
0x16786: shr rdx,0x3a
0x1678a: sar rax,0x6
0x1678e: add rcx,rdx
0x16791: and ecx,0x3f
0x16794: sub rcx,rdx
0x16797: mov rdx,rsi
0x1679a: shl rdx,cl
0x1679d: movsx rcx,byte ptr [r13]
0x167a2: or qword ptr [rbx+rax*8],rdx
0x167a6: test cl,cl
0x167a8: jne 0x16770
0x167aa: test r12b,r12b
0x167ad: je 0x167c2
0x167af: lea rdx,[rbx+0x20]
0x167b3: mov rax,rbx
0x167b6: not qword ptr [rax]
0x167b9: add rax,0x8
0x167bd: cmp rdx,rax
0x167c0: jne 0x167b6
0x167c2: cmp dword ptr [rbp+0xb4],0x1
0x167c9: jle 0x167e3
0x167cb: mov rcx,qword ptr [rbp+0x78]
0x167cf: xor eax,eax
0x167d1: mov rdx,qword ptr [rcx+rax]
0x167d5: and qword ptr [rbx+rax],rdx
0x167d9: add rax,0x8
0x167dd: cmp rax,0x20
0x167e1: jne 0x167d1
0x167e3: lea r9,[rsp+0x20]
0x167e8: lea r12,[rbp+0x70]
0x167ec: lea r13,[rbp+0x80]
0x167f3: xor ecx,ecx
0x167f5: xor edx,edx
0x167f7: mov byte ptr [rsp+0x28],0x3
0x167fc: mov r8,r9
0x167ff: mov rsi,r13
0x16802: mov rdi,r12
0x16805: mov qword ptr [rsp+0x20],rbx
0x1680a: mov qword ptr [rsp],r9
0x1680e: call 0x13360
0x16813: test rax,rax
0x16816: mov r14,rax
0x16819: je 0x168b0
0x1681f: cmp dword ptr [rbp+0xb4],0x1
0x16826: jle 0x168a0
0x16828: or byte ptr [rbp+0xb0],0x2
0x1682f: mov r9,qword ptr [rsp]
0x16833: xor ecx,ecx
0x16835: xor edx,edx
0x16837: mov rsi,r13
0x1683a: mov rdi,r12
0x1683d: mov byte ptr [rsp+0x28],0x6
0x16842: mov qword ptr [rsp+0x20],r15
0x16847: mov r8,r9
0x1684a: call 0x13360
0x1684f: test rax,rax
0x16852: je 0x168b0
0x16854: lea r8,[rsp+0x30]
0x16859: mov rdx,r14
0x1685c: mov rcx,rax
0x1685f: mov rsi,r13
0x16862: mov rdi,r12
0x16865: mov byte ptr [rsp+0x38],0xa
0x1686a: call 0x13360
0x1686f: mov r14,rax
0x16872: mov rdi,qword ptr [rsp+0x48]
0x16877: xor rdi,qword ptr fs:0x28
0x16880: mov rax,r14
0x16883: jne 0x16915
0x16889: add rsp,0x58
0x1688d: pop rbx
0x1688e: pop rbp
0x1688f: pop r12
0x16891: pop r13
0x16893: pop r14
0x16895: pop r15
0x16897: ret 
0x168a0: mov rdi,r15
0x168a3: call 0x11dc0
0x168a8: jmp 0x16872
0x168b0: mov rdi,rbx
0x168b3: call 0x2a10
0x168b8: mov rdi,r15
0x168bb: call 0x11dc0
0x168c0: mov rax,qword ptr [rsp+0x8]
0x168c5: xor r14d,r14d
0x168c8: mov dword ptr [rax],0xc
0x168ce: jmp 0x16872
0x168d0: mov rdi,rbx
0x168d3: xor r14d,r14d
0x168d6: call 0x2a10
0x168db: mov rax,qword ptr [rsp+0x8]
0x168e0: mov dword ptr [rax],0xc
0x168e6: jmp 0x16872
0x168f0: mov rdi,rbx
0x168f3: mov dword ptr [rsp],eax
0x168f6: xor r14d,r14d
0x168f9: call 0x2a10
0x168fe: mov rdi,r15
0x16901: call 0x11dc0
0x16906: mov rdi,qword ptr [rsp+0x8]
0x1690b: mov eax,dword ptr [rsp]
0x1690e: mov dword ptr [rdi],eax
0x16910: jmp 0x16872
0x16915: call 0x2560
0x1691a: nop word ptr [rax+rax]
0x16920: push r15
0x16922: push r14
0x16924: mov rax,rdi
0x16927: push r13
0x16929: push r12
0x1692b: push rbp
0x1692c: push rbx
0x1692d: xor ebx,ebx
0x1692f: mov rbp,rcx
0x16932: sub rsp,0x178
0x16939: mov rax,qword ptr [rax]
0x1693c: mov qword ptr [rsp+0x30],rdi
0x16941: mov qword ptr [rsp+0x20],rsi
0x16946: mov rdi,qword ptr fs:0x28
0x1694f: mov qword ptr [rsp+0x168],rdi
0x16957: xor edi,edi
0x16959: cmp dword ptr [rax+0xb4],0x1
0x16960: mov qword ptr [rsp+0x28],rdx
0x16965: mov qword ptr [rsp+0x8],rax
0x1696a: jne 0x16983
0x1696c: mov rax,qword ptr [rsp+0x30]
0x16971: mov rax,qword ptr [rax+0x18]
0x16975: mov rbx,rax
0x16978: mov qword ptr [rsp],rax
0x1697c: shr rbx,0x16
0x16980: and ebx,0x1
0x16983: mov rax,qword ptr [rsp+0x20]
0x16988: cmp qword ptr [rax],0x0
0x1698c: jle 0x16d9d
0x16992: lea rax,[rsp+0x58]
0x16997: mov qword ptr [rsp],0x0
0x1699f: mov qword ptr [rsp+0x40],rax
0x169a4: lea rax,[rsp+0x54]
0x169a9: mov qword ptr [rsp+0x48],rax
0x169ae: lea rax,[rsp+0x60]
0x169b3: mov qword ptr [rsp+0x38],rax
0x169b8: jmp 0x169fe
0x169c0: cmp eax,0x3
0x169c3: je 0x16cb6
0x169c9: cmp eax,0x6
0x169cc: je 0x16b58
0x169d2: and edx,-0x3
0x169d5: cmp dl,0x5
0x169d8: je 0x16dd4
0x169de: cmp eax,0x2
0x169e1: je 0x16d34
0x169e7: mov rdi,qword ptr [rsp+0x20]
0x169ec: add qword ptr [rsp],0x1
0x169f1: mov rax,qword ptr [rsp]
0x169f5: cmp rax,qword ptr [rdi]
0x169f8: jge 0x16d9d
0x169fe: mov rax,qword ptr [rsp+0x28]
0x16a03: mov rdi,qword ptr [rsp]
0x16a07: mov rax,qword ptr [rax]
0x16a0a: mov r12,qword ptr [rax+rdi*8]
0x16a0e: mov rax,qword ptr [rsp+0x8]
0x16a13: mov rcx,qword ptr [rax]
0x16a16: mov rax,r12
0x16a19: shl rax,0x4
0x16a1d: mov qword ptr [rsp+0x10],rax
0x16a22: lea rsi,[rcx+rax]
0x16a26: movzx eax,byte ptr [rsi+0x8]
0x16a2a: cmp eax,0x1
0x16a2d: mov edx,eax
0x16a2f: jne 0x169c0
0x16a31: movzx r13d,byte ptr [rsi]
0x16a35: test ebx,ebx
0x16a37: mov byte ptr [rbp+r13],0x1
0x16a3d: je 0x16a50
0x16a3f: call 0x29e0
0x16a44: mov rax,qword ptr [rax]
0x16a47: movsxd rax,dword ptr [rax+r13*4]
0x16a4b: mov byte ptr [rbp+rax],0x1
0x16a50: mov rax,qword ptr [rsp+0x30]
0x16a55: test byte ptr [rax+0x1a],0x40
0x16a59: je 0x169e7
0x16a5b: mov rsi,qword ptr [rsp+0x8]
0x16a60: cmp dword ptr [rsi+0xb4],0x1
0x16a67: jle 0x169e7
0x16a6d: mov rax,qword ptr [rsi]
0x16a70: mov rdi,qword ptr [rsp+0x10]
0x16a75: movzx edx,byte ptr [rax+rdi]
0x16a79: mov byte ptr [rsp+0x60],dl
0x16a7d: lea rdx,[r12+0x1]
0x16a82: cmp qword ptr [rsi+0x10],rdx
0x16a86: jbe 0x16dc6
0x16a8c: lea rcx,[rax+rdi+0x10]
0x16a91: mov eax,dword ptr [rcx+0x8]
0x16a94: and eax,0x2000ff
0x16a99: cmp eax,0x200001
0x16a9e: jne 0x16dc6
0x16aa4: add rdi,0x20
0x16aa8: mov r13,rdi
0x16aab: mov rdi,qword ptr [rsp+0x38]
0x16ab0: lea rax,[rdi+0x1]
0x16ab4: jmp 0x16adb
0x16ac0: mov rcx,qword ptr [rsi]
0x16ac3: add rcx,r13
0x16ac6: add r13,0x10
0x16aca: mov edx,dword ptr [rcx+0x8]
0x16acd: and edx,0x2000ff
0x16ad3: cmp edx,0x200001
0x16ad9: jne 0x16af4
0x16adb: movzx edx,byte ptr [rcx]
0x16ade: add rax,0x1
0x16ae2: mov byte ptr [rax-0x1],dl
0x16ae5: mov rdx,rax
0x16ae8: sub rdx,rdi
0x16aeb: add rdx,r12
0x16aee: cmp qword ptr [rsi+0x10],rdx
0x16af2: ja 0x16ac0
0x16af4: mov rsi,qword ptr [rsp+0x38]
0x16af9: mov rcx,qword ptr [rsp+0x40]
0x16afe: mov rdi,qword ptr [rsp+0x48]
0x16b03: sub rax,rsi
0x16b06: mov qword ptr [rcx],0x0
0x16b0d: mov r12,rax
0x16b10: mov rdx,rax
0x16b13: call 0x101e0
0x16b18: cmp r12,rax
0x16b1b: jne 0x169e7
0x16b21: mov edi,dword ptr [rsp+0x54]
0x16b25: call 0x28e0
0x16b2a: mov rdx,qword ptr [rsp+0x40]
0x16b2f: mov rdi,qword ptr [rsp+0x38]
0x16b34: mov esi,eax
0x16b36: call 0x2790
0x16b3b: cmp rax,-0x1
0x16b3f: je 0x169e7
0x16b45: movzx eax,byte ptr [rsp+0x60]
0x16b4a: mov byte ptr [rbp+rax],0x1
0x16b4f: jmp 0x169e7
0x16b58: mov rax,qword ptr [rsp+0x8]
0x16b5d: mov r12,qword ptr [rsi]
0x16b60: cmp dword ptr [rax+0xb4],0x1
0x16b67: jle 0x16b8d
0x16b69: cmp qword ptr [r12+0x48],0x0
0x16b6f: jne 0x16c6f
0x16b75: test byte ptr [r12+0x20],0x1
0x16b7b: jne 0x16c6f
0x16b81: cmp qword ptr [r12+0x40],0x0
0x16b87: jne 0x16c6f
0x16b8d: xor r13d,r13d
0x16b90: cmp qword ptr [r12+0x28],0x0
0x16b96: jle 0x169e7
0x16b9c: mov r15,r12
0x16b9f: mov r14,qword ptr [rsp+0x40]
0x16ba4: mov r12,rbp
0x16ba7: mov rbp,r13
0x16baa: mov r13d,ebx
0x16bad: jmp 0x16bbd
0x16baf: add rbp,0x1
0x16bb3: cmp rbp,qword ptr [r15+0x28]
0x16bb7: jge 0x16c64
0x16bbd: mov qword ptr [r14],0x0
0x16bc4: mov rax,qword ptr [r15]
0x16bc7: mov rdx,r14
0x16bca: mov rdi,qword ptr [rsp+0x38]
0x16bcf: lea rbx,[rbp*4]
0x16bd7: mov esi,dword ptr [rax+rbp*4]
0x16bda: call 0x2790
0x16bdf: cmp rax,-0x1
0x16be3: je 0x16c0f
0x16be5: movzx edx,byte ptr [rsp+0x60]
0x16bea: test r13d,r13d
0x16bed: mov byte ptr [r12+rdx],0x1
0x16bf2: mov qword ptr [rsp+0x10],rdx
0x16bf7: je 0x16c0f
0x16bf9: call 0x29e0
0x16bfe: mov rdx,qword ptr [rsp+0x10]
0x16c03: mov rax,qword ptr [rax]
0x16c06: movsxd rax,dword ptr [rax+rdx*4]
0x16c0a: mov byte ptr [r12+rax],0x1
0x16c0f: mov rax,qword ptr [rsp+0x30]
0x16c14: test byte ptr [rax+0x1a],0x40
0x16c18: je 0x16baf
0x16c1a: mov rax,qword ptr [rsp+0x8]
0x16c1f: cmp dword ptr [rax+0xb4],0x1
0x16c26: jle 0x16baf
0x16c28: mov rax,qword ptr [r15]
0x16c2b: mov edi,dword ptr [rax+rbx]
0x16c2e: call 0x28e0
0x16c33: mov rdi,qword ptr [rsp+0x38]
0x16c38: mov rdx,r14
0x16c3b: mov esi,eax
0x16c3d: call 0x2790
0x16c42: cmp rax,-0x1
0x16c46: je 0x16baf
0x16c4c: movzx eax,byte ptr [rsp+0x60]
0x16c51: add rbp,0x1
0x16c55: mov byte ptr [r12+rax],0x1
0x16c5a: cmp rbp,qword ptr [r15+0x28]
0x16c5e: jl 0x16bbd
0x16c64: mov ebx,r13d
0x16c67: mov rbp,r12
0x16c6a: jmp 0x169e7
0x16c6f: mov r12,qword ptr [rsp+0x40]
0x16c74: mov r13,qword ptr [rsp+0x48]
0x16c79: mov byte ptr [rsp+0x54],0x0
0x16c7e: nop 
0x16c80: xor edi,edi
0x16c82: mov qword ptr [r12],0x0
0x16c8a: mov rcx,r12
0x16c8d: mov edx,0x1
0x16c92: mov rsi,r13
0x16c95: call 0x101e0
0x16c9a: cmp rax,-0x2
0x16c9e: jne 0x16caa
0x16ca0: movzx eax,byte ptr [rsp+0x54]
0x16ca5: mov byte ptr [rbp+rax],0x1
0x16caa: add byte ptr [rsp+0x54],0x1
0x16caf: jne 0x16c80
0x16cb1: jmp 0x169e7
0x16cb6: mov r13,rbp
0x16cb9: xor r12d,r12d
0x16cbc: mov qword ptr [rsp+0x18],0x0
0x16cc5: mov rax,qword ptr [rsp+0x10]
0x16cca: mov rsi,qword ptr [rsp+0x18]
0x16ccf: xor r14d,r14d
0x16cd2: mov rax,qword ptr [rcx+rax]
0x16cd6: mov r15,qword ptr [rax+rsi]
0x16cda: nop word ptr [rax+rax]
0x16ce0: btq r15,r14
0x16ce4: jae 0x16d05
0x16ce6: test ebx,ebx
0x16ce8: mov byte ptr [r13+r14],0x1
0x16cee: je 0x16d05
0x16cf0: call 0x29e0
0x16cf5: mov rax,qword ptr [rax]
0x16cf8: lea rdx,[r12+r14]
0x16cfc: movsxd rax,dword ptr [rax+rdx*4]
0x16d00: mov byte ptr [rbp+rax],0x1
0x16d05: add r14,0x1
0x16d09: cmp r14,0x40
0x16d0d: jne 0x16ce0
0x16d0f: add r12,0x40
0x16d13: add qword ptr [rsp+0x18],0x8
0x16d19: add r13,0x40
0x16d1d: cmp r12,0x100
0x16d24: je 0x169e7
0x16d2a: mov rax,qword ptr [rsp+0x8]
0x16d2f: mov rcx,qword ptr [rax]
0x16d32: jmp 0x16cc5
0x16d34: movdqa xmm0,xmmword ptr [rip+0xc2c4]
0x16d3c: movups xmmword ptr [rbp],xmm0
0x16d40: movups xmmword ptr [rbp+0x10],xmm0
0x16d44: movups xmmword ptr [rbp+0x20],xmm0
0x16d48: movups xmmword ptr [rbp+0x30],xmm0
0x16d4c: movups xmmword ptr [rbp+0x40],xmm0
0x16d50: movups xmmword ptr [rbp+0x50],xmm0
0x16d54: movups xmmword ptr [rbp+0x60],xmm0
0x16d58: movups xmmword ptr [rbp+0x70],xmm0
0x16d5c: movups xmmword ptr [rbp+0x80],xmm0
0x16d63: movups xmmword ptr [rbp+0x90],xmm0
0x16d6a: movups xmmword ptr [rbp+0xa0],xmm0
0x16d71: movups xmmword ptr [rbp+0xb0],xmm0
0x16d78: movups xmmword ptr [rbp+0xc0],xmm0
0x16d7f: movups xmmword ptr [rbp+0xd0],xmm0
0x16d86: movups xmmword ptr [rbp+0xe0],xmm0
0x16d8d: movups xmmword ptr [rbp+0xf0],xmm0
0x16d94: mov rax,qword ptr [rsp+0x30]
0x16d99: or byte ptr [rax+0x38],0x1
0x16d9d: mov rax,qword ptr [rsp+0x168]
0x16da5: xor rax,qword ptr fs:0x28
0x16dae: jne 0x16e42
0x16db4: add rsp,0x178
0x16dbb: pop rbx
0x16dbc: pop rbp
0x16dbd: pop r12
0x16dbf: pop r13
0x16dc1: pop r14
0x16dc3: pop r15
0x16dc5: ret 
0x16dc6: mov rax,qword ptr [rsp+0x38]
0x16dcb: add rax,0x1
0x16dcf: jmp 0x16af4
0x16dd4: movdqa xmm0,xmmword ptr [rip+0xc224]
0x16ddc: cmp eax,0x2
0x16ddf: movups xmmword ptr [rbp],xmm0
0x16de3: movups xmmword ptr [rbp+0x10],xmm0
0x16de7: movups xmmword ptr [rbp+0x20],xmm0
0x16deb: movups xmmword ptr [rbp+0x30],xmm0
0x16def: movups xmmword ptr [rbp+0x40],xmm0
0x16df3: movups xmmword ptr [rbp+0x50],xmm0
0x16df7: movups xmmword ptr [rbp+0x60],xmm0
0x16dfb: movups xmmword ptr [rbp+0x70],xmm0
0x16dff: movups xmmword ptr [rbp+0x80],xmm0
0x16e06: movups xmmword ptr [rbp+0x90],xmm0
0x16e0d: movups xmmword ptr [rbp+0xa0],xmm0
0x16e14: movups xmmword ptr [rbp+0xb0],xmm0
0x16e1b: movups xmmword ptr [rbp+0xc0],xmm0
0x16e22: movups xmmword ptr [rbp+0xd0],xmm0
0x16e29: movups xmmword ptr [rbp+0xe0],xmm0
0x16e30: movups xmmword ptr [rbp+0xf0],xmm0
0x16e37: jne 0x16d9d
0x16e3d: jmp 0x16d94
0x16e42: call 0x2560
0x16e47: nop word ptr [rax+rax]
0x176d9: iretl 
0x17801: nop dword ptr [rax+rax]
0x17806: nop word ptr cs:[rax+rax]
0x17fd9: mov rdi,qword ptr [rbp-0x88]
0x17fe0: test rdi,rdi
0x17fe3: je 0x17fac
0x17fe5: call 0x15d60
0x17fea: jmp 0x17fac
0x18085: mov rdi,qword ptr [rbp-0x60]
0x18089: call 0x2a10
0x1808e: cmp byte ptr [rbp-0xc9],0x0
0x18095: je 0x17d08
0x180fa: nop word ptr [rax+rax]
0x18280: mov rdi,qword ptr [rbx+0xd8]
0x18287: call 0x2a10
0x1828c: mov eax,0xc
0x18291: jmp 0x1813b
0x18a09: mov eax,0xc
0x18a0e: jmp 0x18618
0x18b81: nop dword ptr [rax+rax]
0x18b86: nop word ptr cs:[rax+rax]
0x18d7c: nop dword ptr [rax]
0x190b4: mov eax,0xc
0x190b9: jmp 0x19095
0x1920b: test r12,r12
0x1920e: mov dword ptr [rsp+0x5c],0x1
0x19216: jne 0x19c39
0x1a10c: nop dword ptr [rax]
0x1a128: mov rdi,r12
0x1a12b: call 0x2a10
0x1b040: push r14
0x1b042: push r13
0x1b044: mov r10,rsi
0x1b047: push r12
0x1b049: push rbp
0x1b04a: movsxd r11,ecx
0x1b04d: push rbx
0x1b04e: mov rbp,rdx
0x1b051: mov rbx,rdi
0x1b054: sub rsp,0x20
0x1b058: mov r12,qword ptr [rsi+0x48]
0x1b05c: mov rax,qword ptr fs:0x28
0x1b065: mov qword ptr [rsp+0x18],rax
0x1b06a: xor eax,eax
0x1b06c: cmp dword ptr [rsi+0x90],0x1
0x1b073: je 0x1b0c8
0x1b075: mov rsi,r12
0x1b078: mov rdi,r10
0x1b07b: call 0x125f0
0x1b080: cmp eax,0x1
0x1b083: jle 0x1b0c8
0x1b085: mov rdx,qword ptr [r10+0x10]
0x1b089: cltq 
0x1b08b: mov dword ptr [rbx],0x1
0x1b091: add rax,r12
0x1b094: mov edx,dword ptr [rdx+r12*4]
0x1b098: mov dword ptr [rbx+0x8],edx
0x1b09b: mov qword ptr [r10+0x48],rax
0x1b09f: xor eax,eax
0x1b0a1: mov rcx,qword ptr [rsp+0x18]
0x1b0a6: xor rcx,qword ptr fs:0x28
0x1b0af: jne 0x1b298
0x1b0b5: add rsp,0x20
0x1b0b9: pop rbx
0x1b0ba: pop rbp
0x1b0bb: pop r12
0x1b0bd: pop r13
0x1b0bf: pop r14
0x1b0c1: ret 
0x1b0c8: movzx eax,byte ptr [rbp+0x8]
0x1b0cc: add r11,r12
0x1b0cf: mov qword ptr [r10+0x48],r11
0x1b0d3: mov edx,eax
0x1b0d5: and edx,-0x5
0x1b0d8: cmp dl,0x1a
0x1b0db: je 0x1b100
0x1b0dd: cmp al,0x1c
0x1b0df: je 0x1b100
0x1b0e1: cmp al,0x16
0x1b0e3: jne 0x1b0ee
0x1b0e5: test r9b,r9b
0x1b0e8: je 0x1b232
0x1b0ee: movzx eax,byte ptr [rbp]
0x1b0f2: mov dword ptr [rbx],0x0
0x1b0f8: mov byte ptr [rbx+0x8],al
0x1b0fb: xor eax,eax
0x1b0fd: jmp 0x1b0a1
0x1b100: mov r12,qword ptr [r10+0x68]
0x1b104: cmp r11,r12
0x1b107: jge 0x1b228
0x1b10d: movzx r13d,byte ptr [rbp]
0x1b112: xor r8d,r8d
0x1b115: jmp 0x1b142
0x1b120: mov rax,qword ptr [rbx+0x8]
0x1b124: mov byte ptr [rax+r8],r9b
0x1b128: add r8,0x1
0x1b12c: cmp r8,0x20
0x1b130: je 0x1b228
0x1b136: movzx eax,byte ptr [rbp+0x8]
0x1b13a: mov r11,qword ptr [r10+0x48]
0x1b13e: mov r12,qword ptr [r10+0x68]
0x1b142: cmp al,0x1e
0x1b144: movsxd r14,r8d
0x1b147: je 0x1b1b0
0x1b149: mov rdx,qword ptr [r10+0x8]
0x1b14d: lea rax,[r11+0x1]
0x1b151: mov qword ptr [r10+0x48],rax
0x1b155: movzx r9d,byte ptr [rdx+r11]
0x1b15a: cmp rax,r12
0x1b15d: jge 0x1b228
0x1b163: cmp r13b,r9b
0x1b166: jne 0x1b120
0x1b168: mov rdx,qword ptr [r10+0x8]
0x1b16c: cmp byte ptr [rdx+rax],0x5d
0x1b170: jne 0x1b120
0x1b172: add rax,0x1
0x1b176: mov qword ptr [r10+0x48],rax
0x1b17a: mov rax,qword ptr [rbx+0x8]
0x1b17e: mov byte ptr [rax+r14],0x0
0x1b183: movzx eax,byte ptr [rbp+0x8]
0x1b187: cmp al,0x1c
0x1b189: je 0x1b28b
0x1b18f: cmp al,0x1e
0x1b191: je 0x1b27e
0x1b197: cmp al,0x1a
0x1b199: je 0x1b271
0x1b19f: xor eax,eax
0x1b1a1: jmp 0x1b0a1
0x1b1b0: cmp byte ptr [r10+0x8b],0x0
0x1b1b8: je 0x1b149
0x1b1ba: cmp byte ptr [r10+0x8c],0x0
0x1b1c2: je 0x1b258
0x1b1c8: cmp r11,qword ptr [r10+0x30]
0x1b1cc: je 0x1b1dd
0x1b1ce: mov rax,qword ptr [r10+0x10]
0x1b1d2: cmp dword ptr [rax+r11*4],-0x1
0x1b1d7: je 0x1b149
0x1b1dd: mov rax,qword ptr [r10+0x18]
0x1b1e1: mov rax,qword ptr [rax+r11*8]
0x1b1e5: add rax,qword ptr [r10]
0x1b1e8: add rax,qword ptr [r10+0x28]
0x1b1ec: movzx r9d,byte ptr [rax]
0x1b1f0: test r9b,-0x80
0x1b1f4: jne 0x1b149
0x1b1fa: cmp dword ptr [r10+0x90],0x1
0x1b202: mov eax,0x1
0x1b207: je 0x1b216
0x1b209: mov rsi,r11
0x1b20c: mov rdi,r10
0x1b20f: call 0x125f0
0x1b214: cltq 
0x1b216: add rax,r11
0x1b219: mov qword ptr [r10+0x48],rax
0x1b21d: jmp 0x1b15a
0x1b228: mov eax,0x7
0x1b22d: jmp 0x1b0a1
0x1b232: mov rdi,rsp
0x1b235: mov rdx,r8
0x1b238: mov rsi,r10
0x1b23b: call 0x10b90
0x1b240: cmp byte ptr [rsp+0x8],0x15
0x1b245: mov eax,0xb
0x1b24a: je 0x1b0ee
0x1b250: jmp 0x1b0a1
0x1b258: lea rax,[r11+0x1]
0x1b25c: add r11,qword ptr [r10]
0x1b25f: mov rdx,qword ptr [r10+0x28]
0x1b263: mov qword ptr [r10+0x48],rax
0x1b267: movzx r9d,byte ptr [r11+rdx]
0x1b26c: jmp 0x1b15a
0x1b271: mov dword ptr [rbx],0x3
0x1b277: xor eax,eax
0x1b279: jmp 0x1b0a1
0x1b27e: mov dword ptr [rbx],0x4
0x1b284: xor eax,eax
0x1b286: jmp 0x1b0a1
0x1b28b: mov dword ptr [rbx],0x2
0x1b291: xor eax,eax
0x1b293: jmp 0x1b0a1
0x1b298: call 0x2560
0x1b29d: nop dword ptr [rax]
0x1b2a0: push r15
0x1b2a2: push r14
0x1b2a4: push r13
0x1b2a6: push r12
0x1b2a8: push rbp
0x1b2a9: push rbx
0x1b2aa: mov rbp,rdi
0x1b2ad: sub rsp,0x38
0x1b2b1: mov r14,qword ptr [rsi+0x48]
0x1b2b5: mov rax,qword ptr fs:0x28
0x1b2be: mov qword ptr [rsp+0x28],rax
0x1b2c3: xor eax,eax
0x1b2c5: cmp qword ptr [rsi+0x68],r14
0x1b2c9: jle 0x1b360
0x1b2cf: movzx r13d,byte ptr [rdi+0xa]
0x1b2d4: mov r15,rdx
0x1b2d7: mov rdx,qword ptr [rsi+0x8]
0x1b2db: mov rbx,rsi
0x1b2de: movzx r12d,byte ptr [rdx+r14]
0x1b2e3: and r13d,-0x61
0x1b2e7: mov byte ptr [rdi+0xa],r13b
0x1b2eb: mov eax,dword ptr [rsi+0x90]
0x1b2f1: mov byte ptr [rdi],r12b
0x1b2f4: cmp eax,0x1
0x1b2f7: jle 0x1b390
0x1b2fd: cmp r14,qword ptr [rsi+0x30]
0x1b301: je 0x1b4a0
0x1b307: mov rcx,qword ptr [rsi+0x10]
0x1b30b: mov ecx,dword ptr [rcx+r14*4]
0x1b30f: cmp ecx,-0x1
0x1b312: je 0x1b3f0
0x1b318: cmp r12b,0x5c
0x1b31c: je 0x1b410
0x1b322: mov byte ptr [rdi+0x8],0x1
0x1b326: mov edi,ecx
0x1b328: mov qword ptr [rsp+0x8],rdx
0x1b32d: mov dword ptr [rsp],ecx
0x1b330: call 0x2770
0x1b335: mov ecx,dword ptr [rsp]
0x1b338: test eax,eax
0x1b33a: setne al
0x1b33d: cmp ecx,0x5f
0x1b340: sete cl
0x1b343: or eax,ecx
0x1b345: shl eax,0x6
0x1b348: or r13d,eax
0x1b34b: mov byte ptr [rbp+0xa],r13b
0x1b34f: mov rdx,qword ptr [rsp+0x8]
0x1b354: jmp 0x1b3cc
0x1b360: mov byte ptr [rdi+0x8],0x2
0x1b364: mov rdi,qword ptr [rsp+0x28]
0x1b369: xor rdi,qword ptr fs:0x28
0x1b372: jne 0x1b998
0x1b378: add rsp,0x38
0x1b37c: pop rbx
0x1b37d: pop rbp
0x1b37e: pop r12
0x1b380: pop r13
0x1b382: pop r14
0x1b384: pop r15
0x1b386: ret 
0x1b390: cmp r12b,0x5c
0x1b394: je 0x1b410
0x1b396: mov byte ptr [rbp+0x8],0x1
0x1b39a: mov qword ptr [rsp],rdx
0x1b39e: call 0x29f0
0x1b3a3: mov rsi,qword ptr [rax]
0x1b3a6: movzx ecx,r12b
0x1b3aa: movzx eax,word ptr [rsi+rcx*2]
0x1b3ae: shr ax,0x3
0x1b3b2: and eax,0x1
0x1b3b5: cmp r12b,0x5f
0x1b3b9: sete cl
0x1b3bc: or eax,ecx
0x1b3be: shl eax,0x6
0x1b3c1: or r13d,eax
0x1b3c4: mov byte ptr [rbp+0xa],r13b
0x1b3c8: mov rdx,qword ptr [rsp]
0x1b3cc: sub r12d,0xa
0x1b3d0: cmp r12b,0x73
0x1b3d4: ja 0x1b50c
0x1b3da: lea rcx,[rip+0x7513]
0x1b3e1: movzx r12d,r12b
0x1b3e5: movsxd rax,dword ptr [rcx+r12*4]
0x1b3e9: add rax,rcx
0x1b3ec: jmp rax
0x1b3f0: or r13d,0x20
0x1b3f4: mov byte ptr [rdi+0x8],0x1
0x1b3f8: mov eax,0x1
0x1b3fd: mov byte ptr [rdi+0xa],r13b
0x1b401: jmp 0x1b364
0x1b410: lea rsi,[r14+0x1]
0x1b414: cmp rsi,qword ptr [rbx+0x58]
0x1b418: jge 0x1b4c0
0x1b41e: cmp byte ptr [rbx+0x8b],0x0
0x1b425: jne 0x1b8b0
0x1b42b: movzx edi,byte ptr [rdx+r14+0x1]
0x1b431: mov r12d,edi
0x1b434: mov dword ptr [rsp+0x8],edi
0x1b438: cmp eax,0x1
0x1b43b: mov byte ptr [rbp],r12b
0x1b43f: mov byte ptr [rbp+0x8],0x1
0x1b443: jle 0x1b890
0x1b449: mov rax,qword ptr [rbx+0x10]
0x1b44d: mov r8d,dword ptr [rax+rsi*4]
0x1b451: mov edi,r8d
0x1b454: mov dword ptr [rsp],r8d
0x1b458: call 0x2770
0x1b45d: mov r8d,dword ptr [rsp]
0x1b461: test eax,eax
0x1b463: setne al
0x1b466: cmp r8d,0x5f
0x1b46a: sete dl
0x1b46d: lea ecx,[r12-0x27]
0x1b472: or eax,edx
0x1b474: shl eax,0x6
0x1b477: or r13d,eax
0x1b47a: cmp cl,0x56
0x1b47d: mov byte ptr [rbp+0xa],r13b
0x1b481: ja 0x1b885
0x1b487: lea rdx,[rip+0x7636]
0x1b48e: movzx ecx,cl
0x1b491: movsxd rax,dword ptr [rdx+rcx*4]
0x1b495: add rax,rdx
0x1b498: jmp rax
0x1b4a0: cmp r12b,0x5c
0x1b4a4: je 0x1b410
0x1b4aa: mov rax,qword ptr [rbx+0x10]
0x1b4ae: mov byte ptr [rbp+0x8],0x1
0x1b4b2: mov ecx,dword ptr [rax+r14*4]
0x1b4b6: jmp 0x1b326
0x1b4c0: mov byte ptr [rbp+0x8],0x24
0x1b4c4: mov eax,0x1
0x1b4c9: jmp 0x1b364
0x1b50c: mov eax,0x1
0x1b511: jmp 0x1b364
0x1b885: mov eax,0x2
0x1b88a: jmp 0x1b364
0x1b890: call 0x29f0
0x1b895: mov rsi,qword ptr [rax]
0x1b898: movzx edx,r12b
0x1b89c: movzx eax,word ptr [rsi+rdx*2]
0x1b8a0: shr ax,0x3
0x1b8a4: and eax,0x1
0x1b8a7: cmp r12b,0x5f
0x1b8ab: jmp 0x1b46a
0x1b8b0: cmp eax,0x1
0x1b8b3: jle 0x1b8e4
0x1b8b5: mov rcx,qword ptr [rbx+0x10]
0x1b8b9: lea rdi,[rsi*4]
0x1b8c1: mov r8d,dword ptr [rcx+rsi*4]
0x1b8c5: cmp r8d,-0x1
0x1b8c9: je 0x1b97f
0x1b8cf: lea r9,[r14+0x2]
0x1b8d3: cmp qword ptr [rbx+0x30],r9
0x1b8d7: je 0x1b8e4
0x1b8d9: cmp dword ptr [rcx+rdi+0x4],-0x1
0x1b8de: je 0x1b97f
0x1b8e4: cmp byte ptr [rbx+0x8c],0x0
0x1b8eb: mov rcx,qword ptr [rbx]
0x1b8ee: mov rdi,qword ptr [rbx+0x28]
0x1b8f2: je 0x1b938
0x1b8f4: mov r8,qword ptr [rbx+0x18]
0x1b8f8: add rcx,rdi
0x1b8fb: add rcx,qword ptr [r8+rsi*8]
0x1b8ff: movzx edi,byte ptr [rcx]
0x1b902: mov r12d,edi
0x1b905: mov dword ptr [rsp+0x8],edi
0x1b909: and edi,0x80
0x1b90f: jne 0x1b42b
0x1b915: jmp 0x1b438
0x1b938: add rcx,rsi
0x1b93b: movzx edi,byte ptr [rcx+rdi]
0x1b93f: mov r12d,edi
0x1b942: mov dword ptr [rsp+0x8],edi
0x1b946: jmp 0x1b438
0x1b97f: movzx eax,byte ptr [rdx+r14+0x1]
0x1b985: mov byte ptr [rbp+0x8],0x1
0x1b989: mov r12d,eax
0x1b98c: mov byte ptr [rbp],al
0x1b98f: mov dword ptr [rsp+0x8],eax
0x1b993: jmp 0x1b451
0x1b998: call 0x2560
0x1b99d: nop dword ptr [rax]
0x1b9a0: push r14
0x1b9a2: mov r14,rdi
0x1b9a5: push r13
0x1b9a7: mov r13,rsi
0x1b9aa: push r12
0x1b9ac: mov r12,-0x2
0x1b9b3: push rbp
0x1b9b4: mov rbp,rdx
0x1b9b7: push rbx
0x1b9b8: mov rbx,-0x1
0x1b9bf: nop 
0x1b9c0: mov rdx,rbp
0x1b9c3: mov rsi,r14
0x1b9c6: mov rdi,r13
0x1b9c9: call 0x1b2a0
0x1b9ce: cltq 
0x1b9d0: add qword ptr [r14+0x48],rax
0x1b9d4: movzx eax,byte ptr [r13+0x8]
0x1b9d9: movzx edx,byte ptr [r13]
0x1b9de: cmp al,0x2
0x1b9e0: je 0x1ba30
0x1b9e2: cmp al,0x18
0x1b9e4: je 0x1ba37
0x1b9e6: cmp dl,0x2c
0x1b9e9: je 0x1ba37
0x1b9eb: cmp al,0x1
0x1b9ed: je 0x1b9f8
0x1b9ef: mov rbx,r12
0x1b9f2: jmp 0x1b9c0
0x1b9f8: lea eax,[rdx-0x30]
0x1b9fb: cmp al,0x9
0x1b9fd: ja 0x1b9ef
0x1b9ff: cmp rbx,-0x2
0x1ba03: je 0x1b9ef
0x1ba05: cmp rbx,-0x1
0x1ba09: je 0x1ba48
0x1ba0b: lea rax,[rbx+rbx*4]
0x1ba0f: lea rbx,[rdx+rax*2]
0x1ba13: mov eax,0x8030
0x1ba18: cmp rbx,0x8030
0x1ba1f: cmovg rbx,rax
0x1ba23: sub rbx,0x30
0x1ba27: jmp 0x1b9c0
0x1ba30: mov rbx,-0x2
0x1ba37: mov rax,rbx
0x1ba3a: pop rbx
0x1ba3b: pop rbp
0x1ba3c: pop r12
0x1ba3e: pop r13
0x1ba40: pop r14
0x1ba42: ret 
0x1ba48: movzx ebx,dl
0x1ba4b: sub ebx,0x30
0x1ba4e: movsxd rbx,ebx
0x1ba51: jmp 0x1b9c0
0x1ba60: push r15
0x1ba62: push r14
0x1ba64: push r13
0x1ba66: push r12
0x1ba68: push rbp
0x1ba69: push rbx
0x1ba6a: sub rsp,0x128
0x1ba71: mov qword ptr [rsp+0x20],rcx
0x1ba76: movzx ecx,byte ptr [rdx+0x8]
0x1ba7a: mov rax,qword ptr fs:0x28
0x1ba83: mov qword ptr [rsp+0x118],rax
0x1ba8b: xor eax,eax
0x1ba8d: mov rax,qword ptr [rsi]
0x1ba90: mov qword ptr [rsp+0x18],rdx
0x1ba95: mov qword ptr [rsp+0x40],r9
0x1ba9a: cmp cl,0x24
0x1ba9d: mov qword ptr [rsp+0x10],rax
0x1baa2: ja 0x1bb60
0x1baa8: mov rbp,rsi
0x1baab: lea rsi,[rip+0x716e]
0x1bab2: movzx edx,cl
0x1bab5: mov r14,rdi
0x1bab8: movsxd rax,dword ptr [rsi+rdx*4]
0x1babc: add rax,rsi
0x1babf: jmp rax
0x1bb60: mov qword ptr [rsp+0x28],0x0
0x1bb69: nop dword ptr [rax]
0x1bb70: mov rdi,qword ptr [rsp+0x118]
0x1bb78: xor rdi,qword ptr fs:0x28
0x1bb81: mov rax,qword ptr [rsp+0x28]
0x1bb86: jne 0x1cefe
0x1bb8c: add rsp,0x128
0x1bb93: pop rbx
0x1bb94: pop rbp
0x1bb95: pop r12
0x1bb97: pop r13
0x1bb99: pop r14
0x1bb9b: pop r15
0x1bb9d: ret 
0x1beeb: mov rdi,qword ptr [rsp+0x28]
0x1bef0: lea rsi,[rip-0xa0d7]
0x1bef7: xor edx,edx
0x1bef9: call 0x10f80
0x1befe: mov qword ptr [rsp+0x28],0x0
0x1bf07: jmp 0x1bb70
0x1c100: mov rax,qword ptr [rsp+0x40]
0x1c105: mov dword ptr [rax],0xa
0x1c10b: cmp qword ptr [rsp+0x28],0x0
0x1c111: jne 0x1beeb
0x1c117: jmp 0x1bb60
0x1cefe: call 0x2560
0x1cf03: mov rax,qword ptr [rsp+0x18]
0x1cf08: cmp byte ptr [rax+0x8],0x2
0x1cf0c: jne 0x1c100
0x1cf12: mov rax,qword ptr [rsp+0x40]
0x1cf17: mov dword ptr [rax],0x9
0x1cf1d: jmp 0x1c10b
0x1cf40: push r15
0x1cf42: push r14
0x1cf44: mov r15,rcx
0x1cf47: push r13
0x1cf49: push r12
0x1cf4b: mov r13,rsi
0x1cf4e: push rbp
0x1cf4f: push rbx
0x1cf50: mov rbx,r9
0x1cf53: mov rbp,rdx
0x1cf56: mov r12,r8
0x1cf59: sub rsp,0x48
0x1cf5d: mov rax,qword ptr fs:0x28
0x1cf66: mov qword ptr [rsp+0x38],rax
0x1cf6b: xor eax,eax
0x1cf6d: mov rax,qword ptr [rsi]
0x1cf70: mov qword ptr [rsp],rdi
0x1cf74: mov qword ptr [rsp+0x10],rax
0x1cf79: call 0x1ba60
0x1cf7e: mov edx,dword ptr [rbx]
0x1cf80: mov r14,rax
0x1cf83: test edx,edx
0x1cf85: je 0x1cf90
0x1cf87: test rax,rax
0x1cf8a: je 0x1d08a
0x1cf90: lea rax,[rsp+0x20]
0x1cf95: mov qword ptr [rsp+0x18],rax
0x1cf9a: nop word ptr [rax+rax]
0x1cfa0: movzx eax,byte ptr [rbp+0x8]
0x1cfa4: mov edx,eax
0x1cfa6: and edx,-0x9
0x1cfa9: cmp dl,0x2
0x1cfac: je 0x1d040
0x1cfb2: cmp al,0x9
0x1cfb4: jne 0x1cfbf
0x1cfb6: test r12,r12
0x1cfb9: jne 0x1d040
0x1cfbf: mov rdi,qword ptr [rsp]
0x1cfc3: mov r9,rbx
0x1cfc6: mov r8,r12
0x1cfc9: mov rcx,r15
0x1cfcc: mov rdx,rbp
0x1cfcf: mov rsi,r13
0x1cfd2: call 0x1ba60
0x1cfd7: mov r9,rax
0x1cfda: mov eax,dword ptr [rbx]
0x1cfdc: test eax,eax
0x1cfde: je 0x1cfe9
0x1cfe0: test r9,r9
0x1cfe3: je 0x1d074
0x1cfe9: test r14,r14
0x1cfec: je 0x1d068
0x1cfee: test r9,r9
0x1cff1: je 0x1d068
0x1cff3: mov rax,qword ptr [rsp+0x10]
0x1cff8: mov r8,qword ptr [rsp+0x18]
0x1cffd: mov rcx,r9
0x1d000: mov rdx,r14
0x1d003: mov qword ptr [rsp+0x8],r9
0x1d008: mov byte ptr [rsp+0x28],0x10
0x1d00d: lea rsi,[rax+0x80]
0x1d014: lea rdi,[rax+0x70]
0x1d018: call 0x13360
0x1d01d: test rax,rax
0x1d020: mov r9,qword ptr [rsp+0x8]
0x1d025: je 0x1d090
0x1d027: mov r14,rax
0x1d02a: movzx eax,byte ptr [rbp+0x8]
0x1d02e: mov edx,eax
0x1d030: and edx,-0x9
0x1d033: cmp dl,0x2
0x1d036: jne 0x1cfb2
0x1d03c: nop dword ptr [rax]
0x1d040: mov rcx,qword ptr [rsp+0x38]
0x1d045: xor rcx,qword ptr fs:0x28
0x1d04e: mov rax,r14
0x1d051: jne 0x1d0bd
0x1d053: add rsp,0x48
0x1d057: pop rbx
0x1d058: pop rbp
0x1d059: pop r12
0x1d05b: pop r13
0x1d05d: pop r14
0x1d05f: pop r15
0x1d061: ret 
0x1d068: test r14,r14
0x1d06b: cmove r14,r9
0x1d06f: jmp 0x1cfa0
0x1d074: test r14,r14
0x1d077: je 0x1d08a
0x1d079: lea rsi,[rip-0xb260]
0x1d080: xor edx,edx
0x1d082: mov rdi,r14
0x1d085: call 0x10f80
0x1d08a: xor r14d,r14d
0x1d08d: jmp 0x1d040
0x1d090: lea rsi,[rip-0xb277]
0x1d097: mov rdi,r9
0x1d09a: xor edx,edx
0x1d09c: call 0x10f80
0x1d0a1: lea rsi,[rip-0xb288]
0x1d0a8: mov rdi,r14
0x1d0ab: xor edx,edx
0x1d0ad: xor r14d,r14d
0x1d0b0: call 0x10f80
0x1d0b5: mov dword ptr [rbx],0xc
0x1d0bb: jmp 0x1d040
0x1d0bd: call 0x2560
0x1d0c2: nop dword ptr [rax]
0x1d0c6: nop word ptr cs:[rax+rax]
0x1d0d0: push r15
0x1d0d2: push r14
0x1d0d4: mov r14,rcx
0x1d0d7: push r13
0x1d0d9: push r12
0x1d0db: mov r13,r9
0x1d0de: push rbp
0x1d0df: push rbx
0x1d0e0: mov rbp,rdx
0x1d0e3: mov r12,rdi
0x1d0e6: sub rsp,0x58
0x1d0ea: mov rbx,qword ptr [rsi]
0x1d0ed: mov rax,qword ptr fs:0x28
0x1d0f6: mov qword ptr [rsp+0x48],rax
0x1d0fb: xor eax,eax
0x1d0fd: mov qword ptr [rsp+0x28],rsi
0x1d102: mov qword ptr [rsp+0x10],r8
0x1d107: mov rax,qword ptr [rbx+0xa8]
0x1d10e: mov qword ptr [rsp+0x20],rax
0x1d113: call 0x1cf40
0x1d118: mov edx,dword ptr [r13]
0x1d11c: mov r15,rax
0x1d11f: test edx,edx
0x1d121: je 0x1d12c
0x1d123: test rax,rax
0x1d126: je 0x1d212
0x1d12c: lea rax,[rsp+0x30]
0x1d131: mov qword ptr [rsp+0x8],rax
0x1d136: jmp 0x1d1c4
0x1d140: cmp al,0x9
0x1d142: jne 0x1d150
0x1d144: cmp qword ptr [rsp+0x10],0x0
0x1d14a: jne 0x1d1f8
0x1d150: mov rax,qword ptr [rbx+0xa8]
0x1d157: mov r8,qword ptr [rsp+0x10]
0x1d15c: mov rcx,r14
0x1d15f: mov rsi,qword ptr [rsp+0x28]
0x1d164: mov r9,r13
0x1d167: mov rdx,rbp
0x1d16a: mov rdi,r12
0x1d16d: mov qword ptr [rsp+0x18],rax
0x1d172: mov rax,qword ptr [rsp+0x20]
0x1d177: mov qword ptr [rbx+0xa8],rax
0x1d17e: call 0x1cf40
0x1d183: mov rcx,rax
0x1d186: mov eax,dword ptr [r13]
0x1d18a: test eax,eax
0x1d18c: je 0x1d193
0x1d18e: test rcx,rcx
0x1d191: je 0x1d1fc
0x1d193: mov rax,qword ptr [rsp+0x18]
0x1d198: or qword ptr [rbx+0xa8],rax
0x1d19f: mov r8,qword ptr [rsp+0x8]
0x1d1a4: lea rsi,[rbx+0x80]
0x1d1ab: lea rdi,[rbx+0x70]
0x1d1af: mov rdx,r15
0x1d1b2: mov byte ptr [rsp+0x38],0xa
0x1d1b7: call 0x13360
0x1d1bc: test rax,rax
0x1d1bf: mov r15,rax
0x1d1c2: je 0x1d240
0x1d1c4: cmp byte ptr [rbp+0x8],0xa
0x1d1c8: jne 0x1d218
0x1d1ca: mov rdx,r14
0x1d1cd: mov rsi,r12
0x1d1d0: mov rdi,rbp
0x1d1d3: or rdx,0x800000
0x1d1da: call 0x1b2a0
0x1d1df: cltq 
0x1d1e1: add qword ptr [r12+0x48],rax
0x1d1e6: movzx eax,byte ptr [rbp+0x8]
0x1d1ea: mov edx,eax
0x1d1ec: and edx,-0x9
0x1d1ef: cmp dl,0x2
0x1d1f2: jne 0x1d140
0x1d1f8: xor ecx,ecx
0x1d1fa: jmp 0x1d19f
0x1d1fc: test r15,r15
0x1d1ff: je 0x1d212
0x1d201: lea rsi,[rip-0xb3e8]
0x1d208: xor edx,edx
0x1d20a: mov rdi,r15
0x1d20d: call 0x10f80
0x1d212: xor r15d,r15d
0x1d215: nop dword ptr [rax]
0x1d218: mov rcx,qword ptr [rsp+0x48]
0x1d21d: xor rcx,qword ptr fs:0x28
0x1d226: mov rax,r15
0x1d229: jne 0x1d24a
0x1d22b: add rsp,0x58
0x1d22f: pop rbx
0x1d230: pop rbp
0x1d231: pop r12
0x1d233: pop r13
0x1d235: pop r14
0x1d237: pop r15
0x1d239: ret 
0x1d240: mov dword ptr [r13],0xc
0x1d248: jmp 0x1d218
0x1d24a: call 0x2560
0x1d24f: nop 
0x1d250: push r15
0x1d252: push r14
0x1d254: push r13
0x1d256: push r12
0x1d258: push rbp
0x1d259: push rbx
0x1d25a: sub rsp,0x128
0x1d261: mov qword ptr [rdi+0x18],rcx
0x1d265: mov qword ptr [rdi+0x10],0x0
0x1d26d: mov rax,qword ptr fs:0x28
0x1d276: mov qword ptr [rsp+0x118],rax
0x1d27e: xor eax,eax
0x1d280: movzx eax,byte ptr [rdi+0x38]
0x1d284: mov qword ptr [rsp+0x8],rdi
0x1d289: mov qword ptr [rsp+0x10],rsi
0x1d28e: mov qword ptr [rsp],rdx
0x1d292: mov qword ptr [rsp+0x18],rcx
0x1d297: mov dword ptr [rsp+0x4c],0x0
0x1d29f: mov qword ptr [rdi+0x30],0x0
0x1d2a7: mov rbx,qword ptr [rdi]
0x1d2aa: mov byte ptr [rsp+0x20],al
0x1d2ae: and eax,-0x70
0x1d2b1: cmp qword ptr [rdi+0x8],0xe7
0x1d2b9: mov byte ptr [rdi+0x38],al
0x1d2bc: jbe 0x1e0b6
0x1d2c2: lea rdi,[rbx+0x8]
0x1d2c6: mov rax,qword ptr [rsp+0x8]
0x1d2cb: mov rcx,rbx
0x1d2ce: and rdi,-0x8
0x1d2d2: sub rcx,rdi
0x1d2d5: mov qword ptr [rax+0x10],0xe8
0x1d2dd: xor eax,eax
0x1d2df: add ecx,0xe8
0x1d2e5: mov qword ptr [rbx],0x0
0x1d2ec: mov qword ptr [rbx+0xe0],0x0
0x1d2f7: shr ecx,0x3
0x1d2fa: rep stos qword ptr es:[rdi],rax
0x1d2fd: movabsq rax,0x555555555555554
0x1d307: mov dword ptr [rbx+0x80],0xf
0x1d311: cmp qword ptr [rsp],rax
0x1d315: ja 0x1d956
0x1d31b: mov r14,qword ptr [rsp]
0x1d31f: lea rax,[r14+0x1]
0x1d323: mov rdi,rax
0x1d326: mov qword ptr [rbx+0x8],rax
0x1d32a: mov qword ptr [rsp+0x28],rax
0x1d32f: shl rdi,0x4
0x1d333: call 0x2780
0x1d338: test r14,r14
0x1d33b: mov qword ptr [rbx],rax
0x1d33e: je 0x1e025
0x1d344: mov esi,0x1
0x1d349: nop dword ptr [rax]
0x1d350: add rsi,rsi
0x1d353: cmp qword ptr [rsp],rsi
0x1d357: jae 0x1d350
0x1d359: lea rbp,[rsi-0x1]
0x1d35d: mov edi,0x18
0x1d362: call 0x26b0
0x1d367: mov qword ptr [rbx+0x88],rbp
0x1d36e: mov qword ptr [rbx+0x40],rax
0x1d372: call 0x2520
0x1d377: mov edi,0xe
0x1d37c: mov dword ptr [rbx+0xb4],eax
0x1d382: call 0x27d0
0x1d387: movzx edx,byte ptr [rax]
0x1d38a: and edx,-0x21
0x1d38d: cmp dl,0x55
0x1d390: jne 0x1d3e0
0x1d392: movzx edx,byte ptr [rax+0x1]
0x1d396: and edx,-0x21
0x1d399: cmp dl,0x54
0x1d39c: jne 0x1d3e0
0x1d39e: movzx edx,byte ptr [rax+0x2]
0x1d3a2: and edx,-0x21
0x1d3a5: cmp dl,0x46
0x1d3a8: jne 0x1d3e0
0x1d3aa: xor edx,edx
0x1d3ac: cmp byte ptr [rax+0x3],0x2d
0x1d3b0: lea rdi,[rip+0x54ab]
0x1d3b7: mov ecx,0x2
0x1d3bc: sete dl
0x1d3bf: lea rsi,[rax+rdx+0x3]
0x1d3c4: rep cmpsb [rsi],es:[rdi]
0x1d3c6: seta al
0x1d3c9: sbb al,0x0
0x1d3cb: test al,al
0x1d3cd: jne 0x1d3e0
0x1d3cf: or byte ptr [rbx+0xb0],0x4
0x1d3d6: nop word ptr cs:[rax+rax]
0x1d3e0: movzx eax,byte ptr [rbx+0xb0]
0x1d3e7: mov edx,eax
0x1d3e9: and edx,-0x9
0x1d3ec: cmp dword ptr [rbx+0xb4],0x1
0x1d3f3: mov byte ptr [rbx+0xb0],dl
0x1d3f9: jle 0x1d40e
0x1d3fb: test al,0x4
0x1d3fd: je 0x1d963
0x1d403: lea rax,[rip+0x59b6]
0x1d40a: mov qword ptr [rbx+0x78],rax
0x1d40e: cmp qword ptr [rbx],0x0
0x1d412: je 0x1d956
0x1d418: cmp qword ptr [rbx+0x40],0x0
0x1d41d: je 0x1d956
0x1d423: mov rax,qword ptr [rsp+0x18]
0x1d428: lea rbp,[rsp+0x80]
0x1d430: mov ecx,0x12
0x1d435: mov dword ptr [rsp+0x4c],0x0
0x1d43d: lea r8,[rbp+0x8]
0x1d441: and eax,0x400000
0x1d446: mov qword ptr [rsp+0x20],rax
0x1d44b: mov rax,qword ptr [rsp+0x8]
0x1d450: setne dl
0x1d453: mov rdi,r8
0x1d456: mov rsi,qword ptr [rax+0x28]
0x1d45a: xor eax,eax
0x1d45c: rep stos qword ptr es:[rdi],rax
0x1d45f: mov rax,qword ptr [rsp+0x10]
0x1d464: mov rdi,qword ptr [rsp]
0x1d468: test rsi,rsi
0x1d46b: mov byte ptr [rsp+0x108],dl
0x1d472: mov ecx,dword ptr [rbx+0xb4]
0x1d478: setne r12b
0x1d47c: mov qword ptr [rsp+0xf8],rsi
0x1d484: mov qword ptr [rsp+0x80],rax
0x1d48c: movzx eax,byte ptr [rbx+0xb0]
0x1d493: or r12d,edx
0x1d496: mov qword ptr [rsp+0xd8],rdi
0x1d49e: mov qword ptr [rsp+0xd0],rdi
0x1d4a6: mov esi,r12d
0x1d4a9: mov byte ptr [rsp+0x10b],r12b
0x1d4b1: mov dword ptr [rsp+0x110],ecx
0x1d4b8: mov qword ptr [rsp+0xe8],rdi
0x1d4c0: mov qword ptr [rsp+0xe0],rdi
0x1d4c8: mov edx,eax
0x1d4ca: shr al,0x3
0x1d4cd: shr dl,0x2
0x1d4d0: and eax,0x1
0x1d4d3: and edx,0x1
0x1d4d6: test rdi,rdi
0x1d4d9: mov byte ptr [rsp+0x10a],al
0x1d4e0: mov byte ptr [rsp+0x109],dl
0x1d4e7: jne 0x1d925
0x1d4ed: test sil,sil
0x1d4f0: je 0x1d4ff
0x1d4f2: mov rax,qword ptr [rsp+0x88]
0x1d4fa: mov qword ptr [rsp+0x10],rax
0x1d4ff: cmp qword ptr [rsp+0x20],0x0
0x1d505: mov rax,qword ptr [rsp+0x10]
0x1d50a: mov qword ptr [rsp+0x88],rax
0x1d512: je 0x1d615
0x1d518: cmp ecx,0x1
0x1d51b: jle 0x1e10d
0x1d521: mov rdi,rbp
0x1d524: call 0x115c0
0x1d529: test eax,eax
0x1d52b: jne 0x1d570
0x1d52d: mov rax,qword ptr [rsp]
0x1d531: cmp rax,qword ptr [rsp+0xb8]
0x1d539: jle 0x1e0f0
0x1d53f: movsxd rax,dword ptr [rbx+0xb4]
0x1d546: mov rsi,qword ptr [rsp+0xc0]
0x1d54e: add rax,qword ptr [rsp+0xb0]
0x1d556: cmp rsi,rax
0x1d559: jg 0x1e0f0
0x1d55f: add rsi,rsi
0x1d562: mov rdi,rbp
0x1d565: call 0x11050
0x1d56a: test eax,eax
0x1d56c: je 0x1d521
0x1d56e: nop 
0x1d570: mov dword ptr [rsp+0x4c],eax
0x1d574: mov rax,qword ptr [rsp+0x8]
0x1d579: mov r13,qword ptr [rax]
0x1d57c: mov rdi,qword ptr [r13+0x70]
0x1d580: test rdi,rdi
0x1d583: je 0x1d598
0x1d585: nop dword ptr [rax]
0x1d588: mov r12,qword ptr [rdi]
0x1d58b: call 0x2a10
0x1d590: test r12,r12
0x1d593: mov rdi,r12
0x1d596: jne 0x1d588
0x1d598: mov rdi,qword ptr [r13+0x20]
0x1d59c: mov qword ptr [r13+0x70],0x0
0x1d5a4: mov dword ptr [r13+0x80],0xf
0x1d5af: mov qword ptr [r13+0x68],0x0
0x1d5b7: call 0x2a10
0x1d5bc: mov qword ptr [r13+0x20],0x0
0x1d5c4: mov rdi,rbp
0x1d5c7: call 0x12390
0x1d5cc: mov rdi,rbx
0x1d5cf: call 0x123d0
0x1d5d4: mov rax,qword ptr [rsp+0x8]
0x1d5d9: mov qword ptr [rax],0x0
0x1d5e0: mov qword ptr [rax+0x8],0x0
0x1d5e8: mov eax,dword ptr [rsp+0x4c]
0x1d5ec: mov rbx,qword ptr [rsp+0x118]
0x1d5f4: xor rbx,qword ptr fs:0x28
0x1d5fd: jne 0x1e340
0x1d603: add rsp,0x128
0x1d60a: pop rbx
0x1d60b: pop rbp
0x1d60c: pop r12
0x1d60e: pop r13
0x1d610: pop r14
0x1d612: pop r15
0x1d614: ret 
0x1d615: cmp ecx,0x1
0x1d618: jg 0x1dfca
0x1d61e: test r12b,r12b
0x1d621: mov rsi,qword ptr [rsp+0xc0]
0x1d629: je 0x1dc44
0x1d62f: cmp qword ptr [rsp+0xd8],rsi
0x1d637: mov rax,qword ptr [rsp+0xb0]
0x1d63f: cmovle rsi,qword ptr [rsp+0xd8]
0x1d648: cmp rsi,rax
0x1d64b: jg 0x1d65d
0x1d64d: jmp 0x1d690
0x1d650: mov rdx,qword ptr [rsp+0x88]
0x1d658: mov qword ptr [rsp+0x10],rdx
0x1d65d: mov rdx,qword ptr [rsp+0x80]
0x1d665: mov rcx,qword ptr [rsp+0xf8]
0x1d66d: add rdx,rax
0x1d670: add rdx,qword ptr [rsp+0xa8]
0x1d678: movzx edx,byte ptr [rdx]
0x1d67b: movzx edx,byte ptr [rcx+rdx]
0x1d67f: mov rcx,qword ptr [rsp+0x10]
0x1d684: mov byte ptr [rcx+rax],dl
0x1d687: add rax,0x1
0x1d68b: cmp rsi,rax
0x1d68e: jne 0x1d650
0x1d690: mov qword ptr [rsp+0xb0],rax
0x1d698: mov qword ptr [rsp+0xb8],rax
0x1d6a0: mov dword ptr [rsp+0x4c],0x0
0x1d6a8: mov r12,qword ptr [rsp+0x8]
0x1d6ad: mov r14,qword ptr [rsp+0x18]
0x1d6b2: lea r13,[rsp+0x50]
0x1d6b7: mov rsi,rbp
0x1d6ba: mov rdi,r13
0x1d6bd: mov qword ptr [rsp+0x28],r13
0x1d6c2: mov r15,qword ptr [r12]
0x1d6c6: mov rdx,r14
0x1d6c9: mov qword ptr [r12+0x30],0x0
0x1d6d2: or rdx,0x800000
0x1d6d9: mov qword ptr [r15+0xd8],r14
0x1d6e0: call 0x1b2a0
0x1d6e5: lea r9,[rsp+0x4c]
0x1d6ea: xor r8d,r8d
0x1d6ed: mov rcx,r14
0x1d6f0: mov rdx,r13
0x1d6f3: mov rsi,r12
0x1d6f6: mov rdi,rbp
0x1d6f9: cltq 
0x1d6fb: add qword ptr [rsp+0xc8],rax
0x1d703: call 0x1d0d0
0x1d708: mov ecx,dword ptr [rsp+0x4c]
0x1d70c: test ecx,ecx
0x1d70e: jne 0x1e137
0x1d714: lea r13,[r15+0x70]
0x1d718: lea r12,[rsp+0x60]
0x1d71d: sub r15,-0x80
0x1d721: xor edx,edx
0x1d723: xor ecx,ecx
0x1d725: mov rsi,r15
0x1d728: mov r8,r12
0x1d72b: mov rdi,r13
0x1d72e: mov qword ptr [rsp],rax
0x1d732: mov byte ptr [rsp+0x68],0x2
0x1d737: call 0x13360
0x1d73c: mov r9,qword ptr [rsp]
0x1d740: mov r11,rax
0x1d743: mov rdx,rax
0x1d746: test r9,r9
0x1d749: je 0x1d772
0x1d74b: mov rcx,r11
0x1d74e: mov rdx,r9
0x1d751: mov r8,r12
0x1d754: mov rsi,r15
0x1d757: mov rdi,r13
0x1d75a: mov qword ptr [rsp],r11
0x1d75e: mov byte ptr [rsp+0x68],0x10
0x1d763: call 0x13360
0x1d768: mov r11,qword ptr [rsp]
0x1d76c: mov rdx,r11
0x1d76f: mov r11,rax
0x1d772: test rdx,rdx
0x1d775: mov rcx,qword ptr [rsp+0x8]
0x1d77a: sete dl
0x1d77d: test r11,r11
0x1d780: sete al
0x1d783: or dl,al
0x1d785: mov r13,qword ptr [rcx]
0x1d788: jne 0x1e122
0x1d78e: mov r15,qword ptr [r13+0x8]
0x1d792: mov qword ptr [rbx+0x68],r11
0x1d796: lea rcx,[r15*8]
0x1d79e: lea r15,[r15+r15*2]
0x1d7a2: mov rdi,rcx
0x1d7a5: mov qword ptr [rsp],rcx
0x1d7a9: shl r15,0x3
0x1d7ad: call 0x2780
0x1d7b2: mov rcx,qword ptr [rsp]
0x1d7b6: mov qword ptr [r13+0x18],rax
0x1d7ba: mov qword ptr [rsp+0x18],rax
0x1d7bf: mov rdi,rcx
0x1d7c2: call 0x2780
0x1d7c7: mov rdi,r15
0x1d7ca: mov qword ptr [r13+0x20],rax
0x1d7ce: mov qword ptr [rsp+0x10],rax
0x1d7d3: call 0x2780
0x1d7d8: mov rdi,r15
0x1d7db: mov qword ptr [r13+0x28],rax
0x1d7df: mov qword ptr [rsp],rax
0x1d7e3: call 0x2780
0x1d7e8: mov rdx,qword ptr [rsp+0x18]
0x1d7ed: mov qword ptr [r13+0x30],rax
0x1d7f1: mov rsi,qword ptr [rsp]
0x1d7f5: mov rcx,qword ptr [rsp+0x10]
0x1d7fa: test rdx,rdx
0x1d7fd: je 0x1dfbd
0x1d803: test rcx,rcx
0x1d806: je 0x1dfbd
0x1d80c: test rsi,rsi
0x1d80f: je 0x1dfbd
0x1d815: test rax,rax
0x1d818: je 0x1dfbd
0x1d81e: mov rax,qword ptr [rsp+0x8]
0x1d823: mov r15,qword ptr [rax+0x30]
0x1d827: lea rdi,[r15*8]
0x1d82f: call 0x2780
0x1d834: test rax,rax
0x1d837: mov qword ptr [r13+0xe0],rax
0x1d83e: je 0x1d8ad
0x1d840: test r15,r15
0x1d843: je 0x1d85d
0x1d845: xor edx,edx
0x1d847: nop word ptr [rax+rax]
0x1d850: mov qword ptr [rax+rdx*8],rdx
0x1d854: add rdx,0x1
0x1d858: cmp rdx,r15
0x1d85b: jne 0x1d850
0x1d85d: mov rdi,qword ptr [r13+0x68]
0x1d861: lea rsi,[rip-0xb008]
0x1d868: mov rdx,r13
0x1d86b: call 0x10ff0
0x1d870: mov rax,qword ptr [rsp+0x8]
0x1d875: mov rdi,qword ptr [r13+0xe0]
0x1d87c: mov rdx,qword ptr [rax+0x30]
0x1d880: test rdx,rdx
0x1d883: je 0x1e174
0x1d889: mov rax,qword ptr [rdi]
0x1d88c: test rax,rax
0x1d88f: je 0x1d89e
0x1d891: jmp 0x1d8ad
0x1d898: cmp qword ptr [rdi+rax*8],rax
0x1d89c: jne 0x1d8ad
0x1d89e: add rax,0x1
0x1d8a2: cmp rdx,rax
0x1d8a5: ja 0x1d898
0x1d8a7: je 0x1e174
0x1d8ad: mov rdi,qword ptr [r13+0x68]
0x1d8b1: mov rdx,qword ptr [rsp+0x8]
0x1d8b6: lea rsi,[rip-0xa15d]
0x1d8bd: call 0x10f80
0x1d8c2: test eax,eax
0x1d8c4: jne 0x1d570
0x1d8ca: mov rdi,qword ptr [r13+0x68]
0x1d8ce: lea rsi,[rip-0x7c05]
0x1d8d5: mov rdx,r13
0x1d8d8: call 0x10f80
0x1d8dd: test eax,eax
0x1d8df: jne 0x1d570
0x1d8e5: mov rdi,qword ptr [r13+0x68]
0x1d8e9: lea rsi,[rip-0xb000]
0x1d8f0: mov rdx,r13
0x1d8f3: call 0x10ff0
0x1d8f8: mov rdx,qword ptr [r13+0x68]
0x1d8fc: lea rsi,[rip+0x53c5]
0x1d903: nop dword ptr [rax+rax]
0x1d908: movzx ecx,byte ptr [rdx+0x30]
0x1d90c: mov rdi,qword ptr [rdx+0x38]
0x1d910: cmp cl,0x10
0x1d913: ja 0x1d9e8
0x1d919: movzx eax,cl
0x1d91c: movsxd rax,dword ptr [rsi+rax*4]
0x1d920: add rax,rsi
0x1d923: jmp rax
0x1d925: mov rsi,qword ptr [rsp+0x28]
0x1d92a: mov rdi,rbp
0x1d92d: call 0x11050
0x1d932: test eax,eax
0x1d934: jne 0x1d570
0x1d93a: movzx esi,byte ptr [rsp+0x10b]
0x1d942: mov ecx,dword ptr [rbx+0xb4]
0x1d948: test sil,sil
0x1d94b: je 0x1d4ff
0x1d951: jmp 0x1d4f2
0x1d956: mov dword ptr [rsp+0x4c],0xc
0x1d95e: jmp 0x1d5cc
0x1d963: mov esi,0x1
0x1d968: mov edi,0x20
0x1d96d: call 0x26b0
0x1d972: test rax,rax
0x1d975: mov qword ptr [rbx+0x78],rax
0x1d979: je 0x1d956
0x1d97b: xor r12d,r12d
0x1d97e: xor ebp,ebp
0x1d980: mov r13d,0x1
0x1d986: xor r15d,r15d
0x1d989: nop dword ptr [rax]
0x1d990: lea r14d,[rbp+r15]
0x1d995: mov edi,r14d
0x1d998: call 0x2880
0x1d99d: cmp eax,-0x1
0x1d9a0: je 0x1d9b5
0x1d9a2: mov rsi,qword ptr [rbx+0x78]
0x1d9a6: mov rdi,r13
0x1d9a9: mov ecx,r15d
0x1d9ac: shl rdi,cl
0x1d9af: add rsi,r12
0x1d9b2: or qword ptr [rsi],rdi
0x1d9b5: test r14d,0xffffff80
0x1d9bc: jne 0x1d9ca
0x1d9be: cmp eax,r14d
0x1d9c1: je 0x1d9ca
0x1d9c3: or byte ptr [rbx+0xb0],0x8
0x1d9ca: add r15,0x1
0x1d9ce: cmp r15,0x40
0x1d9d2: jne 0x1d990
0x1d9d4: add ebp,0x40
0x1d9d7: add r12,0x8
0x1d9db: cmp ebp,0x100
0x1d9e1: jne 0x1d986
0x1d9e3: jmp 0x1d40e
0x1d9e8: and ecx,0x8
0x1d9eb: jne 0x1e302
0x1d9f1: mov rax,qword ptr [rdx+0x20]
0x1d9f5: mov rcx,qword ptr [rax+0x38]
0x1d9f9: mov rax,qword ptr [r13+0x18]
0x1d9fd: mov qword ptr [rax+rdi*8],rcx
0x1da01: mov r15,qword ptr [rdx+0x8]
0x1da05: xor edi,edi
0x1da07: test r15,r15
0x1da0a: je 0x1da1b
0x1da0c: mov rdx,r15
0x1da0f: jmp 0x1d908
0x1da18: mov rdx,rax
0x1da1b: mov r15,qword ptr [rdx+0x10]
0x1da1f: test r15,r15
0x1da22: sete cl
0x1da25: cmp r15,rdi
0x1da28: sete al
0x1da2b: or cl,al
0x1da2d: mov byte ptr [rsp+0x10],cl
0x1da31: je 0x1da0c
0x1da33: mov rax,qword ptr [rdx]
0x1da36: mov rdi,rdx
0x1da39: test rax,rax
0x1da3c: jne 0x1da18
0x1da3e: xor r14d,r14d
0x1da41: xor r15d,r15d
0x1da44: nop dword ptr [rax]
0x1da48: mov rdx,qword ptr [r13+0x10]
0x1da4c: cmp rdx,r15
0x1da4f: je 0x1da76
0x1da51: lea r10,[r15+r15*2]
0x1da55: mov rax,qword ptr [r13+0x30]
0x1da59: shl r10,0x3
0x1da5d: cmp qword ptr [rax+r10+0x8],0x0
0x1da63: je 0x1dc68
0x1da69: mov rdx,qword ptr [r13+0x10]
0x1da6d: add r15,0x1
0x1da71: cmp rdx,r15
0x1da74: jne 0x1da51
0x1da76: test r14b,r14b
0x1da79: je 0x1dcbe
0x1da7f: xor r14d,r14d
0x1da82: xor r15d,r15d
0x1da85: jmp 0x1da51
0x1dc44: mov qword ptr [rsp+0xb0],rsi
0x1dc4c: mov qword ptr [rsp+0xb8],rsi
0x1dc54: mov dword ptr [rsp+0x4c],0x0
0x1dc5c: jmp 0x1d6a8
0x1dc68: mov ecx,0x1
0x1dc6d: mov rdx,r15
0x1dc70: mov rsi,r13
0x1dc73: mov rdi,r12
0x1dc76: mov qword ptr [rsp],r10
0x1dc7a: call 0x12da0
0x1dc7f: test eax,eax
0x1dc81: jne 0x1d570
0x1dc87: mov rax,qword ptr [r13+0x30]
0x1dc8b: mov r10,qword ptr [rsp]
0x1dc8f: add r15,0x1
0x1dc93: cmp qword ptr [rax+r10+0x8],0x0
0x1dc99: jne 0x1da48
0x1dc9f: mov rdi,qword ptr [rsp+0x70]
0x1dca4: call 0x2a10
0x1dca9: cmp qword ptr [r13+0x10],r15
0x1dcad: je 0x1da7f
0x1dcb3: movzx r14d,byte ptr [rsp+0x10]
0x1dcb9: jmp 0x1da51
0x1dcbe: mov rax,qword ptr [rsp+0x8]
0x1dcc3: test byte ptr [rax+0x38],0x10
0x1dcc7: jne 0x1dcda
0x1dcc9: cmp qword ptr [rax+0x30],0x0
0x1dcce: je 0x1dcda
0x1dcd0: test byte ptr [r13+0xb0],0x1
0x1dcd8: jne 0x1dce8
0x1dcda: cmp qword ptr [r13+0x98],0x0
0x1dce2: je 0x1dddb
0x1dce8: lea rdi,[rdx+rdx*2]
0x1dcec: mov qword ptr [rsp],rdx
0x1dcf0: shl rdi,0x3
0x1dcf4: call 0x2780
0x1dcf9: test rax,rax
0x1dcfc: mov qword ptr [r13+0x38],rax
0x1dd00: je 0x1e24c
0x1dd06: mov rdx,qword ptr [rsp]
0x1dd0a: xor esi,esi
0x1dd0c: xor ecx,ecx
0x1dd0e: test rdx,rdx
0x1dd11: jne 0x1dd24
0x1dd13: jmp 0x1dddb
0x1dd20: mov rax,qword ptr [r13+0x38]
0x1dd24: pxor xmm0,xmm0
0x1dd28: add rax,rsi
0x1dd2b: add rcx,0x1
0x1dd2f: mov qword ptr [rax+0x10],0x0
0x1dd37: add rsi,0x18
0x1dd3b: movups xmmword ptr [rax],xmm0
0x1dd3e: mov rax,qword ptr [r13+0x10]
0x1dd42: cmp rcx,rax
0x1dd45: jb 0x1dd20
0x1dd47: test rax,rax
0x1dd4a: je 0x1dddb
0x1dd50: mov rax,qword ptr [r13+0x30]
0x1dd54: mov qword ptr [rsp+0x18],0x0
0x1dd5d: mov qword ptr [rsp+0x10],0x0
0x1dd66: mov rcx,qword ptr [rsp+0x18]
0x1dd6b: lea rdx,[rax+rcx]
0x1dd6f: cmp qword ptr [rdx+0x8],0x0
0x1dd74: mov rcx,qword ptr [rdx+0x10]
0x1dd78: jle 0x1ddc4
0x1dd7a: xor r15d,r15d
0x1dd7d: jmp 0x1dd98
0x1dd80: mov rax,qword ptr [r13+0x30]
0x1dd84: mov rdx,qword ptr [rsp+0x18]
0x1dd89: add r15,0x1
0x1dd8d: mov rcx,qword ptr [rsp]
0x1dd91: cmp r15,qword ptr [rax+rdx+0x8]
0x1dd96: jge 0x1ddc4
0x1dd98: mov rax,qword ptr [rcx+r15*8]
0x1dd9c: mov qword ptr [rsp],rcx
0x1dda0: lea rsi,[rax+rax*2]
0x1dda4: mov rax,qword ptr [r13+0x38]
0x1dda8: lea rdi,[rax+rsi*8]
0x1ddac: mov rsi,qword ptr [rsp+0x10]
0x1ddb1: call 0x110f0
0x1ddb6: test al,al
0x1ddb8: jne 0x1dd80
0x1ddba: mov eax,0xc
0x1ddbf: jmp 0x1d570
0x1ddc4: add qword ptr [rsp+0x10],0x1
0x1ddca: add qword ptr [rsp+0x18],0x18
0x1ddd0: mov rdx,qword ptr [rsp+0x10]
0x1ddd5: cmp rdx,qword ptr [r13+0x10]
0x1ddd9: jb 0x1dd66
0x1dddb: movzx eax,byte ptr [rbx+0xb0]
0x1dde2: mov dword ptr [rsp+0x4c],0x0
0x1ddea: shr al,0x2
0x1dded: cmp qword ptr [rsp+0x20],0x0
0x1ddf3: sete dl
0x1ddf6: and al,dl
0x1ddf8: jne 0x1dfdf
0x1ddfe: mov rax,qword ptr [rbx+0x68]
0x1de02: mov rdi,r12
0x1de05: mov rax,qword ptr [rax+0x18]
0x1de09: mov rax,qword ptr [rax+0x38]
0x1de0d: lea rdx,[rax+rax*2]
0x1de11: mov qword ptr [rbx+0x90],rax
0x1de18: mov rax,qword ptr [rbx+0x30]
0x1de1c: lea rsi,[rax+rdx*8]
0x1de20: call 0x13800
0x1de25: test eax,eax
0x1de27: mov r15d,eax
0x1de2a: mov dword ptr [rsp+0x50],eax
0x1de2e: jne 0x1df4f
0x1de34: cmp qword ptr [rbx+0x98],0x0
0x1de3c: jle 0x1df10
0x1de42: mov r9,qword ptr [rsp+0x68]
0x1de47: test r9,r9
0x1de4a: jle 0x1df10
0x1de50: xor r10d,r10d
0x1de53: lea r13,[r12+0x10]
0x1de58: jmp 0x1de6d
0x1de60: add r10,0x1
0x1de64: cmp r9,r10
0x1de67: jle 0x1df10
0x1de6d: mov rcx,qword ptr [rsp+0x70]
0x1de72: mov rsi,qword ptr [rbx]
0x1de75: mov r8,qword ptr [rcx+r10*8]
0x1de79: mov rdi,r8
0x1de7c: shl rdi,0x4
0x1de80: add rdi,rsi
0x1de83: cmp byte ptr [rdi+0x8],0x4
0x1de87: jne 0x1de60
0x1de89: xor edx,edx
0x1de8b: jmp 0x1de99
0x1de90: add rdx,0x1
0x1de94: cmp r9,rdx
0x1de97: je 0x1de60
0x1de99: mov rax,qword ptr [rcx+rdx*8]
0x1de9d: shl rax,0x4
0x1dea1: add rax,rsi
0x1dea4: cmp byte ptr [rax+0x8],0x9
0x1dea8: jne 0x1de90
0x1deaa: mov r11,qword ptr [rdi]
0x1dead: cmp qword ptr [rax],r11
0x1deb0: jne 0x1de90
0x1deb2: mov rdx,qword ptr [rbx+0x28]
0x1deb6: lea rax,[r8+r8*2]
0x1deba: mov rsi,r13
0x1debd: mov rdi,r9
0x1dec0: lea rax,[rdx+rax*8]
0x1dec4: mov rax,qword ptr [rax+0x10]
0x1dec8: mov r11,qword ptr [rax]
0x1decb: mov rdx,r11
0x1dece: call 0x126a0
0x1ded3: test rax,rax
0x1ded6: jne 0x1de60
0x1ded8: mov rax,qword ptr [rbx+0x30]
0x1dedc: lea rdx,[r11+r11*2]
0x1dee0: mov rdi,r12
0x1dee3: lea rsi,[rax+rdx*8]
0x1dee7: call 0x12bc0
0x1deec: test eax,eax
0x1deee: jne 0x1e230
0x1def4: mov r9,qword ptr [rsp+0x68]
0x1def9: mov r10d,0x1
0x1deff: cmp r9,r10
0x1df02: jg 0x1de6d
0x1df08: nop dword ptr [rax+rax]
0x1df10: mov rdi,qword ptr [rsp+0x28]
0x1df15: xor ecx,ecx
0x1df17: mov rdx,r12
0x1df1a: mov rsi,rbx
0x1df1d: call 0x139f0
0x1df22: test rax,rax
0x1df25: mov qword ptr [rbx+0x48],rax
0x1df29: je 0x1e092
0x1df2f: cmp byte ptr [rax+0x68],0x0
0x1df33: js 0x1e031
0x1df39: mov qword ptr [rbx+0x60],rax
0x1df3d: mov qword ptr [rbx+0x58],rax
0x1df41: mov qword ptr [rbx+0x50],rax
0x1df45: mov rdi,qword ptr [rsp+0x70]
0x1df4a: call 0x2a10
0x1df4f: mov rax,qword ptr [rsp+0x8]
0x1df54: mov dword ptr [rsp+0x4c],r15d
0x1df59: mov r13,qword ptr [rax]
0x1df5c: mov rdi,qword ptr [r13+0x70]
0x1df60: test rdi,rdi
0x1df63: je 0x1df78
0x1df65: nop dword ptr [rax]
0x1df68: mov r12,qword ptr [rdi]
0x1df6b: call 0x2a10
0x1df70: test r12,r12
0x1df73: mov rdi,r12
0x1df76: jne 0x1df68
0x1df78: mov rdi,qword ptr [r13+0x20]
0x1df7c: mov qword ptr [r13+0x70],0x0
0x1df84: mov dword ptr [r13+0x80],0xf
0x1df8f: mov qword ptr [r13+0x68],0x0
0x1df97: call 0x2a10
0x1df9c: mov qword ptr [r13+0x20],0x0
0x1dfa4: mov rdi,rbp
0x1dfa7: call 0x12390
0x1dfac: mov eax,dword ptr [rsp+0x4c]
0x1dfb0: test eax,eax
0x1dfb2: je 0x1d5ec
0x1dfb8: jmp 0x1d5cc
0x1dfbd: mov dword ptr [rsp+0x4c],0xc
0x1dfc5: jmp 0x1d57c
0x1dfca: mov rdi,rbp
0x1dfcd: call 0x113f0
0x1dfd2: mov dword ptr [rsp+0x4c],0x0
0x1dfda: jmp 0x1d6a8
0x1dfdf: mov rcx,qword ptr [rsp+0x8]
0x1dfe4: cmp qword ptr [rcx+0x28],0x0
0x1dfe9: jne 0x1ddfe
0x1dfef: mov r10,qword ptr [rbx+0x10]
0x1dff3: test r10,r10
0x1dff6: je 0x1e2aa
0x1dffc: mov rsi,qword ptr [rbx]
0x1dfff: lea r9,[rip+0x4d06]
0x1e006: xor r8d,r8d
0x1e009: xor edx,edx
0x1e00b: mov rcx,rsi
0x1e00e: cmp byte ptr [rcx+0x8],0xc
0x1e012: ja 0x1e2de
0x1e018: movzx edi,byte ptr [rcx+0x8]
0x1e01c: movsxd rdi,dword ptr [r9+rdi*4]
0x1e020: add rdi,r9
0x1e023: jmp rdi
0x1e025: xor ebp,ebp
0x1e027: mov esi,0x1
0x1e02c: jmp 0x1d35d
0x1e031: mov r14,qword ptr [rsp+0x28]
0x1e036: mov ecx,0x1
0x1e03b: mov rdx,r12
0x1e03e: mov rsi,rbx
0x1e041: mov rdi,r14
0x1e044: call 0x139f0
0x1e049: mov ecx,0x2
0x1e04e: mov rdx,r12
0x1e051: mov rsi,rbx
0x1e054: mov rdi,r14
0x1e057: mov qword ptr [rbx+0x50],rax
0x1e05b: call 0x139f0
0x1e060: mov ecx,0x6
0x1e065: mov qword ptr [rbx+0x58],rax
0x1e069: mov rdx,r12
0x1e06c: mov rsi,rbx
0x1e06f: mov rdi,r14
0x1e072: call 0x139f0
0x1e077: cmp qword ptr [rbx+0x50],0x0
0x1e07c: mov qword ptr [rbx+0x60],rax
0x1e080: je 0x1e092
0x1e082: cmp qword ptr [rbx+0x58],0x0
0x1e087: je 0x1e092
0x1e089: test rax,rax
0x1e08c: jne 0x1df45
0x1e092: mov r15d,dword ptr [rsp+0x50]
0x1e097: jmp 0x1df4f
0x1e0b6: mov rdi,rbx
0x1e0b9: mov esi,0xe8
0x1e0be: call 0x2830
0x1e0c3: test rax,rax
0x1e0c6: mov rbx,rax
0x1e0c9: je 0x1e261
0x1e0cf: mov rax,qword ptr [rsp+0x8]
0x1e0d4: mov qword ptr [rax+0x8],0xe8
0x1e0dc: mov qword ptr [rax],rbx
0x1e0df: jmp 0x1d2c2
0x1e0f0: mov dword ptr [rsp+0x4c],0x0
0x1e0f8: jmp 0x1d6a8
0x1e10d: mov rdi,rbp
0x1e110: call 0x11380
0x1e115: mov dword ptr [rsp+0x4c],0x0
0x1e11d: jmp 0x1d6a8
0x1e122: mov dword ptr [rsp+0x4c],0xc
0x1e12a: mov qword ptr [rbx+0x68],0x0
0x1e132: jmp 0x1d57c
0x1e137: test rax,rax
0x1e13a: je 0x1e26b
0x1e140: lea r13,[r15+0x70]
0x1e144: lea r12,[rsp+0x60]
0x1e149: sub r15,-0x80
0x1e14d: xor ecx,ecx
0x1e14f: xor edx,edx
0x1e151: mov rsi,r15
0x1e154: mov r8,r12
0x1e157: mov rdi,r13
0x1e15a: mov qword ptr [rsp],rax
0x1e15e: mov byte ptr [rsp+0x68],0x2
0x1e163: call 0x13360
0x1e168: mov r9,qword ptr [rsp]
0x1e16c: mov r11,rax
0x1e16f: jmp 0x1d74b
0x1e174: call 0x2a10
0x1e179: mov qword ptr [r13+0xe0],0x0
0x1e184: jmp 0x1d8ad
0x1e230: mov r15d,eax
0x1e233: jmp 0x1df4f
0x1e24c: mov rax,qword ptr [rsp+0x8]
0x1e251: mov dword ptr [rsp+0x4c],0xc
0x1e259: mov r13,qword ptr [rax]
0x1e25c: jmp 0x1d57c
0x1e261: mov eax,0xc
0x1e266: jmp 0x1d5ec
0x1e26b: mov rax,qword ptr [rsp+0x8]
0x1e270: mov qword ptr [rbx+0x68],0x0
0x1e278: mov r13,qword ptr [rax]
0x1e27b: jmp 0x1d57c
0x1e2aa: cmp qword ptr [rbx+0x98],0x0
0x1e2b2: movzx edx,byte ptr [rbx+0xb0]
0x1e2b9: mov dword ptr [rbx+0xb4],0x1
0x1e2c3: setg al
0x1e2c6: and edx,-0x7
0x1e2c9: or eax,r14d
0x1e2cc: and eax,0x1
0x1e2cf: add eax,eax
0x1e2d1: or eax,edx
0x1e2d3: mov byte ptr [rbx+0xb0],al
0x1e2d9: jmp 0x1ddfe
0x1e2de: call 0x2400
0x1e2e3: lea rcx,[rip+0x4a96]
0x1e2ea: lea rsi,[rip+0x44cf]
0x1e2f1: lea rdi,[rip+0x4589]
0x1e2f8: mov edx,0x5b0
0x1e2fd: call 0x2600
0x1e302: lea rcx,[rip+0x4a77]
0x1e309: lea rsi,[rip+0x44b0]
0x1e310: lea rdi,[rip+0x44c9]
0x1e317: mov edx,0x5c2
0x1e31c: call 0x2600
0x1e321: lea rcx,[rip+0x4a58]
0x1e328: lea rsi,[rip+0x4491]
0x1e32f: lea rdi,[rip+0x4541]
0x1e336: mov edx,0x5af
0x1e33b: call 0x2600
0x1e340: call 0x2560
0x1e345: nop 
0x1e346: nop word ptr cs:[rax+rax]
0x1e350: sub rsp,0x8
0x1e354: mov rcx,qword ptr [rip+0x209fa5]
0x1e35b: mov r8,rdi
0x1e35e: mov rdi,rdx
0x1e361: mov rax,rcx
0x1e364: shr rax,0x19
0x1e368: and eax,0x1
0x1e36b: shl eax,0x4
0x1e36e: mov edx,eax
0x1e370: movzx eax,byte ptr [rdi+0x38]
0x1e374: and eax,-0x11
0x1e377: or eax,edx
0x1e379: mov rdx,rsi
0x1e37c: mov rsi,r8
0x1e37f: or eax,-0x80
0x1e382: mov byte ptr [rdi+0x38],al
0x1e385: call 0x1d250
0x1e38a: test eax,eax
0x1e38c: je 0x1e3b8
0x1e38e: lea rdx,[rip+0x4a4b]
0x1e395: cltq 
0x1e397: lea rsi,[rip+0x4ae2]
0x1e39e: xor edi,edi
0x1e3a0: add rsi,qword ptr [rdx+rax*8]
0x1e3a4: mov edx,0x5
0x1e3a9: add rsp,0x8
0x1e3ad: jmp 0x2510
0x1e3b8: xor eax,eax
0x1e3ba: add rsp,0x8
0x1e3be: ret 
0x1e3c0: mov rax,qword ptr [rip+0x209f39]
0x1e3c7: mov qword ptr [rip+0x209f32],rdi
0x1e3ce: ret 
0x1e3d0: push r12
0x1e3d2: push rbp
0x1e3d3: xor eax,eax
0x1e3d5: push rbx
0x1e3d6: mov rbp,qword ptr [rdi+0x20]
0x1e3da: mov rbx,rdi
0x1e3dd: mov r12,qword ptr [rdi]
0x1e3e0: lea rdi,[rbp+0x8]
0x1e3e4: mov rcx,rbp
0x1e3e7: mov qword ptr [rbp],0x0
0x1e3ef: mov qword ptr [rbp+0xf8],0x0
0x1e3fa: and rdi,-0x8
0x1e3fe: sub rcx,rdi
0x1e401: add ecx,0x100
0x1e407: shr ecx,0x3
0x1e40a: rep stos qword ptr es:[rdi],rax
0x1e40d: mov rcx,rbp
0x1e410: mov rdi,rbx
0x1e413: mov rsi,qword ptr [r12+0x48]
0x1e418: lea rdx,[rsi+0x18]
0x1e41c: add rsi,0x10
0x1e420: call 0x16920
0x1e425: mov rax,qword ptr [r12+0x50]
0x1e42a: cmp qword ptr [r12+0x48],rax
0x1e42f: je 0x1e449
0x1e431: lea rdx,[rax+0x18]
0x1e435: lea rsi,[rax+0x10]
0x1e439: mov rcx,rbp
0x1e43c: mov rdi,rbx
0x1e43f: call 0x16920
0x1e444: mov rax,qword ptr [r12+0x48]
0x1e449: mov rsi,qword ptr [r12+0x58]
0x1e44e: cmp rsi,rax
0x1e451: je 0x1e46b
0x1e453: lea rdx,[rsi+0x18]
0x1e457: mov rcx,rbp
0x1e45a: add rsi,0x10
0x1e45e: mov rdi,rbx
0x1e461: call 0x16920
0x1e466: mov rax,qword ptr [r12+0x48]
0x1e46b: mov rsi,qword ptr [r12+0x60]
0x1e470: cmp rsi,rax
0x1e473: je 0x1e488
0x1e475: lea rdx,[rsi+0x18]
0x1e479: mov rcx,rbp
0x1e47c: add rsi,0x10
0x1e480: mov rdi,rbx
0x1e483: call 0x16920
0x1e488: or byte ptr [rbx+0x38],0x8
0x1e48c: xor eax,eax
0x1e48e: pop rbx
0x1e48f: pop rbp
0x1e490: pop r12
0x1e492: ret 
0x1e4a0: push r15
0x1e4a2: push r14
0x1e4a4: mov rax,r8
0x1e4a7: push r13
0x1e4a9: push r12
0x1e4ab: add r8,rcx
0x1e4ae: push rbp
0x1e4af: push rbx
0x1e4b0: sub rsp,0x38
0x1e4b4: test rcx,rcx
0x1e4b7: mov ebx,dword ptr [rsp+0x78]
0x1e4bb: mov r12,qword ptr [rsp+0x70]
0x1e4c0: mov dword ptr [rsp+0x28],ebx
0x1e4c4: js 0x1e800
0x1e4ca: cmp rcx,rdx
0x1e4cd: jg 0x1e800
0x1e4d3: cmp r8,rdx
0x1e4d6: mov rbx,rcx
0x1e4d9: mov r15,rdi
0x1e4dc: jg 0x1e760
0x1e4e2: test rax,rax
0x1e4e5: js 0x1e4f0
0x1e4e7: cmp rcx,r8
0x1e4ea: jg 0x1e760
0x1e4f0: test r8,r8
0x1e4f3: js 0x1e7d8
0x1e4f9: test rax,rax
0x1e4fc: jns 0x1e507
0x1e4fe: cmp rbx,r8
0x1e501: jle 0x1e7d8
0x1e507: movzx eax,byte ptr [r15+0x38]
0x1e50c: mov r13d,eax
0x1e50f: shr r13b,0x5
0x1e513: mov edi,r13d
0x1e516: and edi,0x3
0x1e519: cmp r8,rbx
0x1e51c: mov dword ptr [rsp+0x2c],edi
0x1e520: jle 0x1e531
0x1e522: cmp qword ptr [r15+0x20],0x0
0x1e527: je 0x1e531
0x1e529: test al,0x8
0x1e52b: je 0x1e720
0x1e531: test al,0x10
0x1e533: jne 0x1e700
0x1e539: test r12,r12
0x1e53c: je 0x1e700
0x1e542: and eax,0x6
0x1e545: mov rcx,qword ptr [r15+0x30]
0x1e549: cmp al,0x4
0x1e54b: je 0x1e6e0
0x1e551: lea r14,[rcx+0x1]
0x1e555: mov r13,r14
0x1e558: mov rdi,r14
0x1e55b: shl rdi,0x4
0x1e55f: mov qword ptr [rsp+0x20],r9
0x1e564: mov qword ptr [rsp+0x18],rdx
0x1e569: mov qword ptr [rsp+0x10],rsi
0x1e56e: mov qword ptr [rsp+0x8],r8
0x1e573: call 0x2780
0x1e578: test rax,rax
0x1e57b: mov rbp,rax
0x1e57e: je 0x1e810
0x1e584: sub rsp,0x8
0x1e588: mov rcx,rbx
0x1e58b: mov rdi,r15
0x1e58e: mov eax,dword ptr [rsp+0x34]
0x1e592: push rax
0x1e593: push rbp
0x1e594: push r14
0x1e596: mov r9,qword ptr [rsp+0x40]
0x1e59b: mov r8,qword ptr [rsp+0x28]
0x1e5a0: mov rdx,qword ptr [rsp+0x38]
0x1e5a5: mov rsi,qword ptr [rsp+0x30]
0x1e5aa: call 0x190c0
0x1e5af: add rsp,0x20
0x1e5b3: test eax,eax
0x1e5b5: je 0x1e5e8
0x1e5b7: cmp eax,0x1
0x1e5ba: mov r12,-0x1
0x1e5c1: je 0x1e5ca
0x1e5c3: mov r12,-0x2
0x1e5ca: mov rdi,rbp
0x1e5cd: call 0x2a10
0x1e5d2: add rsp,0x38
0x1e5d6: mov rax,r12
0x1e5d9: pop rbx
0x1e5da: pop rbp
0x1e5db: pop r12
0x1e5dd: pop r13
0x1e5df: pop r14
0x1e5e1: pop r15
0x1e5e3: ret 
0x1e5e8: test r12,r12
0x1e5eb: je 0x1e6b8
0x1e5f1: movzx eax,byte ptr [r15+0x38]
0x1e5f6: lea rdx,[r13+0x1]
0x1e5fa: shr al, 1
0x1e5fc: and eax,0x3
0x1e5ff: je 0x1e770
0x1e605: cmp eax,0x1
0x1e608: je 0x1e820
0x1e60e: cmp eax,0x2
0x1e611: jne 0x1e900
0x1e617: cmp r14,qword ptr [r12]
0x1e61b: ja 0x1e8e1
0x1e621: mov r9d,0x2
0x1e627: test r13,r13
0x1e62a: jle 0x1e898
0x1e630: mov r8,qword ptr [r12+0x8]
0x1e635: mov rdi,qword ptr [r12+0x10]
0x1e63a: lea rsi,[r13*8]
0x1e642: mov rdx,r13
0x1e645: xor eax,eax
0x1e647: nop word ptr [rax+rax]
0x1e650: mov rcx,qword ptr [rbp+rax*2]
0x1e655: mov qword ptr [r8+rax],rcx
0x1e659: mov rcx,qword ptr [rbp+rax*2+0x8]
0x1e65e: mov qword ptr [rdi+rax],rcx
0x1e662: add rax,0x8
0x1e666: cmp rsi,rax
0x1e669: jne 0x1e650
0x1e66b: cmp qword ptr [r12],rdx
0x1e66f: jbe 0x1e69d
0x1e671: mov rsi,qword ptr [r12+0x10]
0x1e676: mov rcx,qword ptr [r12+0x8]
0x1e67b: mov rax,-0x1
0x1e682: nop word ptr [rax+rax]
0x1e688: mov qword ptr [rsi+rdx*8],rax
0x1e68c: add r13,0x1
0x1e690: mov qword ptr [rcx+rdx*8],rax
0x1e694: cmp r13,qword ptr [r12]
0x1e698: mov rdx,r13
0x1e69b: jb 0x1e688
0x1e69d: movzx eax,byte ptr [r15+0x38]
0x1e6a2: lea r13d,[r9+r9]
0x1e6a6: and eax,-0x7
0x1e6a9: or eax,r13d
0x1e6ac: test al,0x6
0x1e6ae: mov byte ptr [r15+0x38],al
0x1e6b2: je 0x1e5c3
0x1e6b8: cmp byte ptr [rsp+0x28],0x0
0x1e6bd: mov r12,qword ptr [rbp]
0x1e6c1: je 0x1e5ca
0x1e6c7: cmp r12,rbx
0x1e6ca: jne 0x1e8c2
0x1e6d0: mov r12,qword ptr [rbp+0x8]
0x1e6d4: sub r12,rbx
0x1e6d7: jmp 0x1e5ca
0x1e6e0: mov r14,qword ptr [r12]
0x1e6e4: cmp r14,rcx
0x1e6e7: ja 0x1e551
0x1e6ed: test r14,r14
0x1e6f0: mov r13,r14
0x1e6f3: jg 0x1e558
0x1e6f9: nop dword ptr [rax]
0x1e700: mov edi,0x10
0x1e705: mov r14d,0x1
0x1e70b: mov r13d,0x1
0x1e711: xor r12d,r12d
0x1e714: jmp 0x1e55f
0x1e720: mov rdi,r15
0x1e723: mov qword ptr [rsp+0x20],r9
0x1e728: mov qword ptr [rsp+0x18],rdx
0x1e72d: mov qword ptr [rsp+0x10],rsi
0x1e732: mov qword ptr [rsp+0x8],r8
0x1e737: call 0x1e3d0
0x1e73c: movzx eax,byte ptr [r15+0x38]
0x1e741: mov r9,qword ptr [rsp+0x20]
0x1e746: mov rdx,qword ptr [rsp+0x18]
0x1e74b: mov rsi,qword ptr [rsp+0x10]
0x1e750: mov r8,qword ptr [rsp+0x8]
0x1e755: jmp 0x1e531
0x1e760: mov r8,rdx
0x1e763: jmp 0x1e507
0x1e770: lea r14,[rdx*8]
0x1e778: mov qword ptr [rsp+0x8],rdx
0x1e77d: mov rdi,r14
0x1e780: call 0x2780
0x1e785: test rax,rax
0x1e788: mov qword ptr [r12+0x8],rax
0x1e78d: mov rdx,qword ptr [rsp+0x8]
0x1e792: je 0x1e8aa
0x1e798: mov rdi,r14
0x1e79b: mov qword ptr [rsp+0x8],rdx
0x1e7a0: mov qword ptr [rsp+0x10],rax
0x1e7a5: call 0x2780
0x1e7aa: test rax,rax
0x1e7ad: mov qword ptr [r12+0x10],rax
0x1e7b2: mov rdx,qword ptr [rsp+0x8]
0x1e7b7: mov rcx,qword ptr [rsp+0x10]
0x1e7bc: je 0x1e8a2
0x1e7c2: mov qword ptr [r12],rdx
0x1e7c6: mov r9d,0x1
0x1e7cc: jmp 0x1e627
0x1e7d8: movzx eax,byte ptr [r15+0x38]
0x1e7dd: xor r8d,r8d
0x1e7e0: mov r13d,eax
0x1e7e3: shr r13b,0x5
0x1e7e7: mov edi,r13d
0x1e7ea: and edi,0x3
0x1e7ed: mov dword ptr [rsp+0x2c],edi
0x1e7f1: jmp 0x1e531
0x1e800: mov r12,-0x1
0x1e807: jmp 0x1e5d2
0x1e810: mov r12,-0x2
0x1e817: jmp 0x1e5d2
0x1e820: cmp qword ptr [r12],rdx
0x1e824: mov r9d,0x1
0x1e82a: jae 0x1e627
0x1e830: lea rcx,[rdx*8]
0x1e838: mov rdi,qword ptr [r12+0x8]
0x1e83d: mov byte ptr [rsp+0x18],r9b
0x1e842: mov qword ptr [rsp+0x10],rdx
0x1e847: mov rsi,rcx
0x1e84a: mov qword ptr [rsp+0x8],rcx
0x1e84f: call 0x2830
0x1e854: test rax,rax
0x1e857: mov r14,rax
0x1e85a: je 0x1e8aa
0x1e85c: mov rcx,qword ptr [rsp+0x8]
0x1e861: mov rdi,qword ptr [r12+0x10]
0x1e866: mov rsi,rcx
0x1e869: call 0x2830
0x1e86e: test rax,rax
0x1e871: mov rdx,qword ptr [rsp+0x10]
0x1e876: movzx r9d,byte ptr [rsp+0x18]
0x1e87c: je 0x1e8b2
0x1e87e: mov qword ptr [r12+0x8],r14
0x1e883: mov qword ptr [r12+0x10],rax
0x1e888: mov qword ptr [r12],rdx
0x1e88c: jmp 0x1e627
0x1e898: xor edx,edx
0x1e89a: xor r13d,r13d
0x1e89d: jmp 0x1e66b
0x1e8a2: mov rdi,rcx
0x1e8a5: call 0x2a10
0x1e8aa: xor r9d,r9d
0x1e8ad: jmp 0x1e69d
0x1e8b2: mov rdi,r14
0x1e8b5: call 0x2a10
0x1e8ba: xor r9d,r9d
0x1e8bd: jmp 0x1e69d
0x1e8c2: lea rcx,[rip+0x4487]
0x1e8c9: lea rsi,[rip+0x3ed0]
0x1e8d0: lea rdi,[rip+0x3fea]
0x1e8d7: mov edx,0x1be
0x1e8dc: call 0x2600
0x1e8e1: lea rcx,[rip+0x4458]
0x1e8e8: lea rsi,[rip+0x3eb1]
0x1e8ef: lea rdi,[rip+0x3fb3]
0x1e8f6: mov edx,0x1fb
0x1e8fb: call 0x2600
0x1e900: lea rcx,[rip+0x4439]
0x1e907: lea rsi,[rip+0x3e92]
0x1e90e: lea rdi,[rip+0x3f77]
0x1e915: mov edx,0x1f9
0x1e91a: call 0x2600
0x1e91f: nop 
0x1e920: push r15
0x1e922: push r14
0x1e924: push r13
0x1e926: push r12
0x1e928: mov r12,rdi
0x1e92b: push rbp
0x1e92c: push rbx
0x1e92d: mov rbp,r8
0x1e930: mov rbx,rdx
0x1e933: mov rdx,rbp
0x1e936: sub rsp,0x28
0x1e93a: shr rdx,0x3f
0x1e93e: mov rax,qword ptr [rsp+0x70]
0x1e943: mov edi,edx
0x1e945: mov r8d,dword ptr [rsp+0x78]
0x1e94a: shr rax,0x3f
0x1e94e: or dil,al
0x1e951: jne 0x1ea20
0x1e957: test rbx,rbx
0x1e95a: js 0x1ea20
0x1e960: mov r15,rbx
0x1e963: add r15,rbp
0x1e966: jo 0x1ea20
0x1e96c: test rbp,rbp
0x1e96f: mov r14,rcx
0x1e972: mov rcx,r9
0x1e975: je 0x1ea30
0x1e97b: xor r13d,r13d
0x1e97e: test rbx,rbx
0x1e981: mov qword ptr [rsp+0x8],rsi
0x1e986: jne 0x1e9d0
0x1e988: movzx r8d,r8b
0x1e98c: mov rdx,r15
0x1e98f: mov rsi,r14
0x1e992: push r8
0x1e994: push qword ptr [rsp+0x70]
0x1e998: mov rdi,r12
0x1e99b: mov r9,qword ptr [rsp+0x80]
0x1e9a3: mov r8,qword ptr [rsp+0x70]
0x1e9a8: call 0x1e4a0
0x1e9ad: mov rdi,r13
0x1e9b0: mov rbx,rax
0x1e9b3: call 0x2a10
0x1e9b8: pop rax
0x1e9b9: pop rdx
0x1e9ba: add rsp,0x28
0x1e9be: mov rax,rbx
0x1e9c1: pop rbx
0x1e9c2: pop rbp
0x1e9c3: pop r12
0x1e9c5: pop r13
0x1e9c7: pop r14
0x1e9c9: pop r15
0x1e9cb: ret 
0x1e9d0: mov rdi,r15
0x1e9d3: mov dword ptr [rsp+0x1c],r8d
0x1e9d8: mov qword ptr [rsp+0x10],r9
0x1e9dd: call 0x2780
0x1e9e2: test rax,rax
0x1e9e5: mov r13,rax
0x1e9e8: je 0x1ea20
0x1e9ea: mov rsi,qword ptr [rsp+0x8]
0x1e9ef: mov rdx,rbx
0x1e9f2: mov rdi,rax
0x1e9f5: call 0x2710
0x1e9fa: lea rdi,[r13+rbx]
0x1e9ff: mov rsi,r14
0x1ea02: mov rdx,rbp
0x1ea05: mov r14,r13
0x1ea08: call 0x2710
0x1ea0d: mov rcx,qword ptr [rsp+0x10]
0x1ea12: mov r8d,dword ptr [rsp+0x1c]
0x1ea17: jmp 0x1e988
0x1ea20: mov rbx,-0x2
0x1ea27: jmp 0x1e9ba
0x1ea30: mov r14,rsi
0x1ea33: xor r13d,r13d
0x1ea36: jmp 0x1e988
0x1ea40: mov eax,edx
0x1ea42: push r14
0x1ea44: push r13
0x1ea46: and eax,0x1
0x1ea49: push r12
0x1ea4b: push rbp
0x1ea4c: cmp eax,0x1
0x1ea4f: push rbx
0x1ea50: mov rbx,rdi
0x1ea53: sbb r14,r14
0x1ea56: mov qword ptr [rdi],0x0
0x1ea5d: mov qword ptr [rdi+0x8],0x0
0x1ea65: and r14d,0xfd4fca
0x1ea6c: mov qword ptr [rdi+0x10],0x0
0x1ea74: mov edi,0x100
0x1ea79: mov r12,rsi
0x1ea7c: mov ebp,edx
0x1ea7e: add r14,0x3b2fc
0x1ea85: call 0x2780
0x1ea8a: test rax,rax
0x1ea8d: mov qword ptr [rbx+0x20],rax
0x1ea91: je 0x1eb40
0x1ea97: mov r13,rbp
0x1ea9a: shl r13,0x15
0x1ea9e: and r13d,0x400000
0x1eaa5: or r13,r14
0x1eaa8: test bpl,0x4
0x1eaac: jne 0x1eb10
0x1eaae: and byte ptr [rbx+0x38],0x7f
0x1eab2: movzx edx,byte ptr [rbx+0x38]
0x1eab6: shr ebp,0x3
0x1eab9: mov rdi,r12
0x1eabc: and ebp,0x1
0x1eabf: mov qword ptr [rbx+0x28],0x0
0x1eac7: shl ebp,0x4
0x1eaca: and edx,-0x11
0x1eacd: or ebp,edx
0x1eacf: mov byte ptr [rbx+0x38],bpl
0x1ead3: call 0x2530
0x1ead8: mov rcx,r13
0x1eadb: mov rdx,rax
0x1eade: mov rsi,r12
0x1eae1: mov rdi,rbx
0x1eae4: call 0x1d250
0x1eae9: cmp eax,0x10
0x1eaec: mov ebp,eax
0x1eaee: je 0x1eb28
0x1eaf0: test eax,eax
0x1eaf2: jne 0x1eb2d
0x1eaf4: mov rdi,rbx
0x1eaf7: call 0x1e3d0
0x1eafc: pop rbx
0x1eafd: mov eax,ebp
0x1eaff: pop rbp
0x1eb00: pop r12
0x1eb02: pop r13
0x1eb04: pop r14
0x1eb06: ret 
0x1eb10: and r13,-0x41
0x1eb14: or byte ptr [rbx+0x38],-0x80
0x1eb18: or r13,0x100
0x1eb1f: jmp 0x1eab2
0x1eb28: mov ebp,0x8
0x1eb2d: mov rdi,qword ptr [rbx+0x20]
0x1eb31: call 0x2a10
0x1eb36: mov qword ptr [rbx+0x20],0x0
0x1eb3e: jmp 0x1eafc
0x1eb40: mov ebp,0xc
0x1eb45: pop rbx
0x1eb46: mov eax,ebp
0x1eb48: pop rbp
0x1eb49: pop r12
0x1eb4b: pop r13
0x1eb4d: pop r14
0x1eb4f: ret 
0x1eb50: push r13
0x1eb52: push r12
0x1eb54: push rbp
0x1eb55: push rbx
0x1eb56: sub rsp,0x8
0x1eb5a: cmp edi,0x10
0x1eb5d: ja 0x1ebc0
0x1eb5f: lea rax,[rip+0x427a]
0x1eb66: movsxd rdi,edi
0x1eb69: lea rsi,[rip+0x4310]
0x1eb70: mov rbp,rdx
0x1eb73: mov edx,0x5
0x1eb78: mov r12,rcx
0x1eb7b: add rsi,qword ptr [rax+rdi*8]
0x1eb7f: xor edi,edi
0x1eb81: call 0x2510
0x1eb86: mov rdi,rax
0x1eb89: mov r13,rax
0x1eb8c: call 0x2530
0x1eb91: test r12,r12
0x1eb94: lea rbx,[rax+0x1]
0x1eb98: je 0x1ebad
0x1eb9a: cmp rbx,r12
0x1eb9d: mov rdx,rbx
0x1eba0: ja 0x1ebc8
0x1eba2: mov rsi,r13
0x1eba5: mov rdi,rbp
0x1eba8: call 0x2710
0x1ebad: add rsp,0x8
0x1ebb1: mov rax,rbx
0x1ebb4: pop rbx
0x1ebb5: pop rbp
0x1ebb6: pop r12
0x1ebb8: pop r13
0x1ebba: ret 
0x1ebc0: call 0x2400
0x1ebc5: nop dword ptr [rax]
0x1ebc8: lea rdx,[r12-0x1]
0x1ebcd: mov byte ptr [rbp+r12-0x1],0x0
0x1ebd3: jmp 0x1eba2
0x1ebe0: push rbx
0x1ebe1: mov rbx,rdi
0x1ebe4: mov rdi,qword ptr [rdi]
0x1ebe7: test rdi,rdi
0x1ebea: je 0x1ebf1
0x1ebec: call 0x123d0
0x1ebf1: mov rdi,qword ptr [rbx+0x20]
0x1ebf5: mov qword ptr [rbx],0x0
0x1ebfc: mov qword ptr [rbx+0x8],0x0
0x1ec04: call 0x2a10
0x1ec09: mov rdi,qword ptr [rbx+0x28]
0x1ec0d: mov qword ptr [rbx+0x20],0x0
0x1ec15: call 0x2a10
0x1ec1a: mov qword ptr [rbx+0x28],0x0
0x1ec22: pop rbx
0x1ec23: ret 
0x1eca8: test byte ptr [rbp+0x38],0x10
0x1ecac: mov rcx,qword ptr [rcx]
0x1ecaf: mov rdx,qword ptr [r12+0x8]
0x1ecb4: jne 0x1ec76
0x1ecc8: mov eax,0x2
0x1eccd: ret 
0x1ecd0: sub rsp,0x8
0x1ecd4: mov r9,rdx
0x1ecd7: push 0x1
0x1ecd9: push r8
0x1ecdb: xor r8d,r8d
0x1ecde: call 0x1e4a0
0x1ece3: add rsp,0x18
0x1ece7: ret 
0x1ecf0: sub rsp,0x8
0x1ecf4: push 0x0
0x1ecf6: push r9
0x1ecf8: mov r9,rdx
0x1ecfb: call 0x1e4a0
0x1ed00: add rsp,0x18
0x1ed04: ret 
0x1ed10: sub rsp,0x8
0x1ed14: push 0x1
0x1ed16: push qword ptr [rsp+0x20]
0x1ed1a: push qword ptr [rsp+0x20]
0x1ed1e: push 0x0
0x1ed20: call 0x1e920
0x1ed25: add rsp,0x28
0x1ed29: ret 
0x1ed30: sub rsp,0x8
0x1ed34: push 0x0
0x1ed36: push qword ptr [rsp+0x28]
0x1ed3a: push qword ptr [rsp+0x28]
0x1ed3e: push qword ptr [rsp+0x28]
0x1ed42: call 0x1e920
0x1ed47: add rsp,0x28
0x1ed4b: ret 
0x1ed50: test rdx,rdx
0x1ed53: jne 0x1ed78
0x1ed55: and byte ptr [rdi+0x38],-0x7
0x1ed59: mov qword ptr [rsi],0x0
0x1ed60: mov qword ptr [rsi+0x10],0x0
0x1ed68: mov qword ptr [rsi+0x8],0x0
0x1ed70: ret 
0x1ed78: movzx eax,byte ptr [rdi+0x38]
0x1ed7c: and eax,-0x7
0x1ed7f: or eax,0x2
0x1ed82: mov byte ptr [rdi+0x38],al
0x1ed85: mov qword ptr [rsi],rdx
0x1ed88: mov qword ptr [rsi+0x8],rcx
0x1ed8c: mov qword ptr [rsi+0x10],r8
0x1ed90: ret 
0x1f110: cmp rdi,0x1
0x1f114: je 0x1f11b
0x1f116: jmp 0x1edd0
0x1f11b: ret 
0x1f1d0: push r12
0x1f1d2: push rbp
0x1f1d3: push rbx
0x1f1d4: mov rbx,rsi
0x1f1d7: sub rsp,0x50
0x1f1db: mov rax,qword ptr fs:0x28
0x1f1e4: mov qword ptr [rsp+0x48],rax
0x1f1e9: xor eax,eax
0x1f1eb: test rdi,rdi
0x1f1ee: je 0x1f2f0
0x1f1f4: mov rbp,rdi
0x1f1f7: call 0x1f030
0x1f1fc: test rax,rax
0x1f1ff: mov r12,rax
0x1f202: je 0x1f300
0x1f208: mov rdi,rbx
0x1f20b: call 0x2800
0x1f210: cmp rax,-0x1
0x1f214: mov qword ptr [rsp+0x8],rax
0x1f219: je 0x1f270
0x1f21a: push rbp
0x1f21b: mov rsi,rbx
0x1f21e: mov rdi,rbp
0x1f221: call 0x1eef0
0x1f226: test al,al
0x1f228: jne 0x1f233
0x1f22a: mov qword ptr [rsp+0x8],-0x1
0x1f233: cmp r12,0x1
0x1f237: je 0x1f249
0x1f239: mov rdi,r12
0x1f23c: call 0x1ee00
0x1f241: test al,al
0x1f243: je 0x1f300
0x1f249: mov rax,qword ptr [rsp+0x8]
0x1f24e: mov rcx,qword ptr [rsp+0x48]
0x1f253: xor rcx,qword ptr fs:0x28
0x1f25c: jne 0x1f30c
0x1f262: add rsp,0x50
0x1f266: pop rbx
0x1f267: pop rbp
0x1f268: pop r12
0x1f26a: ret 
0x1f270: lea rsi,[rsp+0x10]
0x1f275: lea rdi,[rsp+0x8]
0x1f27a: call 0x2430
0x1f27f: test rax,rax
0x1f282: je 0x1f233
0x1f284: mov eax,dword ptr [rbx]
0x1f286: mov edx,dword ptr [rbx+0x4]
0x1f289: xor eax,dword ptr [rsp+0x10]
0x1f28d: xor edx,dword ptr [rsp+0x14]
0x1f291: mov ecx,dword ptr [rsp+0x30]
0x1f295: or eax,edx
0x1f297: mov edx,dword ptr [rbx+0x8]
0x1f29a: xor edx,dword ptr [rsp+0x18]
0x1f29e: or eax,edx
0x1f2a0: mov edx,dword ptr [rbx+0xc]
0x1f2a3: xor edx,dword ptr [rsp+0x1c]
0x1f2a7: or eax,edx
0x1f2a9: mov edx,dword ptr [rbx+0x10]
0x1f2ac: xor edx,dword ptr [rsp+0x20]
0x1f2b0: or eax,edx
0x1f2b2: mov edx,dword ptr [rbx+0x14]
0x1f2b5: xor edx,dword ptr [rsp+0x24]
0x1f2b9: or eax,edx
0x1f2bb: mov edx,dword ptr [rbx+0x20]
0x1f2be: test edx,edx
0x1f2c0: sete dil
0x1f2c4: test ecx,ecx
0x1f2c6: sete sil
0x1f2ca: cmp dil,sil
0x1f2cd: je 0x1f2db
0x1f2cf: test edx,edx
0x1f2d1: js 0x1f2db
0x1f2d3: test ecx,ecx
0x1f2d5: jns 0x1f233
0x1f2db: test eax,eax
0x1f2dd: je 0x1f21b
0x1f2e3: jmp 0x1f233
0x1f2f0: mov rdi,rsi
0x1f2f3: call 0x2860
0x1f2f8: jmp 0x1f24e
0x1f300: mov rax,-0x1
0x1f307: jmp 0x1f24e
0x1f30c: call 0x2560
0x1f311: nop word ptr cs:[rax+rax]
0x1f31b: nop dword ptr [rax+rax]
0x1f320: push r12
0x1f322: push rbp
0x1f323: mov rbp,rdi
0x1f326: push rbx
0x1f327: call 0x2460
0x1f32c: mov ebx,dword ptr [rbp]
0x1f32f: mov rdi,rbp
0x1f332: mov r12,rax
0x1f335: call 0xdca0
0x1f33a: and ebx,0x20
0x1f33d: test ebx,ebx
0x1f33f: jne 0x1f358
0x1f341: test eax,eax
0x1f343: je 0x1f34f
0x1f345: test r12,r12
0x1f348: mov eax,0xffffffff
0x1f34d: je 0x1f388
0x1f34f: pop rbx
0x1f350: pop rbp
0x1f351: pop r12
0x1f353: ret 
0x1f358: test eax,eax
0x1f35a: jne 0x1f378
0x1f35c: call 0x2410
0x1f361: mov dword ptr [rax],0x0
0x1f367: mov eax,0xffffffff
0x1f36c: pop rbx
0x1f36d: pop rbp
0x1f36e: pop r12
0x1f370: ret 
0x1f378: pop rbx
0x1f379: mov eax,0xffffffff
0x1f37e: pop rbp
0x1f37f: pop r12
0x1f381: ret 
0x1f388: call 0x2410
0x1f38d: cmp dword ptr [rax],0x9
0x1f390: pop rbx
0x1f391: pop rbp
0x1f392: pop r12
0x1f394: setne al
0x1f397: movzx eax,al
0x1f39a: neg eax
0x1f39c: ret 
0x1f43a: nop word ptr [rax+rax]
0x1f488: lea rax,[rsp+0x60]
0x1f48d: mov dword ptr [rsp],0x10
0x1f494: mov edx,dword ptr [rsp+0x30]
0x1f498: mov qword ptr [rsp+0x8],rax
0x1f49d: lea rax,[rsp+0x20]
0x1f4a2: mov qword ptr [rsp+0x10],rax
0x1f4a7: jmp 0x1f461
0x1f4ae: nop 
0x1f5be: nop 
0x1f5c0: sub rsp,0x8
0x1f5c4: mov edi,0xe
0x1f5c9: call 0x27d0
0x1f5ce: test rax,rax
0x1f5d1: je 0x1f5f0
0x1f5d3: cmp byte ptr [rax],0x0
0x1f5d6: lea rdx,[rip+0x3a87]
0x1f5dd: cmove rax,rdx
0x1f5e1: add rsp,0x8
0x1f5e5: ret 
0x1f5f0: lea rax,[rip+0x3a6d]
0x1f5f7: add rsp,0x8
0x1f5fb: ret 
0x1f66e: nop 
0x1f68a: test eax,eax
0x1f68c: js 0x1f6e0
0x1f68e: mov edi,eax
0x1f690: mov ebx,eax
0x1f692: call 0x28f0
0x1f697: test rax,rax
0x1f69a: mov rbp,rax
0x1f69d: je 0x1f6b8
0x1f69f: mov dword ptr [r12],ebx
0x1f6a3: add rsp,0x8
0x1f6a7: mov rax,rbp
0x1f6aa: pop rbx
0x1f6ab: pop rbp
0x1f6ac: pop r12
0x1f6ae: pop r13
0x1f6b0: ret 
0x1f6b8: call 0x2410
0x1f6bd: mov r13d,dword ptr [rax]
0x1f6c0: mov r12,rax
0x1f6c3: mov edi,ebx
0x1f6c5: call 0x2640
0x1f6ca: mov rax,rbp
0x1f6cd: mov dword ptr [r12],r13d
0x1f6d1: add rsp,0x8
0x1f6d5: pop rbx
0x1f6d6: pop rbp
0x1f6d7: pop r12
0x1f6d9: pop r13
0x1f6db: ret 
0x1f6e0: add rsp,0x8
0x1f6e4: xor ebp,ebp
0x1f6e6: pop rbx
0x1f6e7: mov rax,rbp
0x1f6ea: pop rbp
0x1f6eb: pop r12
0x1f6ed: pop r13
0x1f6ef: ret 
0x1f781: cmp esi,0x406
0x1f787: jne 0x1f7d0
0x1f789: mov rax,qword ptr [rsp+0x10]
0x1f78e: cmp dword ptr [rip+0x208b63],0x0
0x1f795: mov dword ptr [rsp],0x18
0x1f79c: mov r12d,dword ptr [rax+0x10]
0x1f7a0: mov edx,r12d
0x1f7a3: js 0x1f8d3
0x1f7a9: xor eax,eax
0x1f7ab: mov esi,0x406
0x1f7b0: call 0x24a0
0x1f7b5: test eax,eax
0x1f7b7: mov ebx,eax
0x1f7b9: js 0x1f948
0x1f7bf: mov dword ptr [rip+0x208b2f],0x1
0x1f7c9: jmp 0x1f810
0x1f7d0: cmp esi,0xb
0x1f7d3: je 0x1f800
0x1f7d5: jg 0x1f830
0x1f7d7: cmp esi,0x4
0x1f7da: je 0x1f8b0
0x1f7e0: jg 0x1f8a0
0x1f7e6: cmp esi,0x2
0x1f7e9: je 0x1f8b0
0x1f7ef: jg 0x1f800
0x1f7f1: cmp esi,0x1
0x1f7f4: jne 0x1f858
0x1f7f6: nop word ptr cs:[rax+rax]
0x1f800: mov edi,ebp
0x1f802: xor eax,eax
0x1f804: call 0x24a0
0x1f809: mov ebx,eax
0x1f80b: nop dword ptr [rax+rax]
0x1f830: cmp esi,0x407
0x1f836: jg 0x1f880
0x1f838: cmp esi,0x406
0x1f83e: jge 0x1f8b0
0x1f840: cmp esi,0x401
0x1f846: je 0x1f800
0x1f848: cmp esi,0x402
0x1f84e: je 0x1f8b0
0x1f850: cmp esi,0x400
0x1f856: je 0x1f8b0
0x1f858: mov eax,dword ptr [rsp]
0x1f85b: cmp eax,0x2f
0x1f85e: ja 0x1f99a
0x1f864: add rax,qword ptr [rsp+0x10]
0x1f869: mov rdx,qword ptr [rax]
0x1f86c: mov edi,ebp
0x1f86e: xor eax,eax
0x1f870: call 0x24a0
0x1f875: mov ebx,eax
0x1f877: jmp 0x1f810
0x1f880: cmp esi,0x409
0x1f886: je 0x1f8b0
0x1f888: jl 0x1f800
0x1f88e: cmp esi,0x40a
0x1f894: jne 0x1f858
0x1f896: jmp 0x1f800
0x1f8a0: cmp esi,0x9
0x1f8a3: je 0x1f800
0x1f8a9: jg 0x1f8b0
0x1f8ab: cmp esi,0x8
0x1f8ae: jne 0x1f858
0x1f8b0: mov eax,dword ptr [rsp]
0x1f8b3: cmp eax,0x2f
0x1f8b6: ja 0x1f9a4
0x1f8bc: add rax,qword ptr [rsp+0x10]
0x1f8c1: mov edx,dword ptr [rax]
0x1f8c3: mov edi,ebp
0x1f8c5: xor eax,eax
0x1f8c7: call 0x24a0
0x1f8cc: mov ebx,eax
0x1f8ce: jmp 0x1f810
0x1f8d3: xor esi,esi
0x1f8d5: xor eax,eax
0x1f8d7: call 0x24a0
0x1f8dc: test eax,eax
0x1f8de: mov ebx,eax
0x1f8e0: js 0x1f810
0x1f8e6: cmp dword ptr [rip+0x208a0b],-0x1
0x1f8ed: jne 0x1f810
0x1f8f3: xor eax,eax
0x1f8f5: mov esi,0x1
0x1f8fa: mov edi,ebx
0x1f8fc: call 0x24a0
0x1f901: test eax,eax
0x1f903: js 0x1f921
0x1f905: or eax,0x1
0x1f908: mov esi,0x2
0x1f90d: mov edi,ebx
0x1f90f: mov edx,eax
0x1f911: xor eax,eax
0x1f913: call 0x24a0
0x1f918: cmp eax,-0x1
0x1f91b: jne 0x1f810
0x1f921: call 0x2410
0x1f926: mov r12d,dword ptr [rax]
0x1f929: mov rbp,rax
0x1f92c: mov edi,ebx
0x1f92e: call 0x2640
0x1f933: mov ebx,0xffffffff
0x1f938: mov dword ptr [rbp],r12d
0x1f93c: jmp 0x1f810
0x1f948: call 0x2410
0x1f94d: cmp dword ptr [rax],0x16
0x1f950: jne 0x1f7bf
0x1f956: xor esi,esi
0x1f958: xor eax,eax
0x1f95a: mov edx,r12d
0x1f95d: mov edi,ebp
0x1f95f: call 0x24a0
0x1f964: test eax,eax
0x1f966: mov ebx,eax
0x1f968: js 0x1f810
0x1f96e: mov dword ptr [rip+0x208980],0xffffffff
0x1f978: jmp 0x1f8f3
0x1f99a: mov rax,qword ptr [rsp+0x8]
0x1f99f: jmp 0x1f869
0x1f9a4: mov rax,qword ptr [rsp+0x8]
0x1f9a9: jmp 0x1f8c1
0x1fa30: rep ret 
