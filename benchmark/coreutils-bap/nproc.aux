0x13c0: sub rsp,0x8
0x13c4: mov rax,qword ptr [rip+0x205c1d]
0x13cb: test rax,rax
0x13ce: je 0x13d2
0x13d0: call rax
0x13d2: add rsp,0x8
0x13d6: ret 
0x13e6: jmp qword ptr [rip+0x205a6c]
0x1400: jmp qword ptr [rip+0x205a62]
0x1440: jmp qword ptr [rip+0x205a42]
0x1450: jmp qword ptr [rip+0x205a3a]
0x1470: jmp qword ptr [rip+0x205a2a]
0x14c0: jmp qword ptr [rip+0x205a02]
0x14d0: jmp qword ptr [rip+0x2059fa]
0x14f0: jmp qword ptr [rip+0x2059ea]
0x1520: jmp qword ptr [rip+0x2059d2]
0x1530: jmp qword ptr [rip+0x2059ca]
0x1560: jmp qword ptr [rip+0x2059b2]
0x1580: jmp qword ptr [rip+0x2059a2]
0x1590: jmp qword ptr [rip+0x20599a]
0x15a0: jmp qword ptr [rip+0x205992]
0x15b0: jmp qword ptr [rip+0x20598a]
0x15c0: jmp qword ptr [rip+0x205982]
0x15d0: jmp qword ptr [rip+0x20597a]
0x15e0: jmp qword ptr [rip+0x205972]
0x1630: jmp qword ptr [rip+0x20594a]
0x16b0: jmp qword ptr [rip+0x20590a]
0x16c0: jmp qword ptr [rip+0x205902]
0x16e0: jmp qword ptr [rip+0x205912]
0x180f: nop 
0x1861: lea rsi,[rip+0x3815]
0x1868: mov rbx,rax
0x186b: mov edx,0x5
0x1870: xor edi,edi
0x1872: call 0x14a0
0x1877: mov rcx,rbx
0x187a: mov rdx,rax
0x187d: xor esi,esi
0x187f: xor edi,edi
0x1881: xor eax,eax
0x1883: call 0x1620
0x1899: nop dword ptr [rax]
0x18ca: hlt 
0x18cb: nop dword ptr [rax+rax]
0x18d0: lea rdi,[rip+0x2057a9]
0x18d7: push rbp
0x18d8: lea rax,[rip+0x2057a1]
0x18df: cmp rax,rdi
0x18e2: mov rbp,rsp
0x18e5: je 0x1900
0x18e7: mov rax,qword ptr [rip+0x2056ea]
0x18ee: test rax,rax
0x18f1: je 0x1900
0x18f3: pop rbp
0x18f4: jmp rax
0x1900: pop rbp
0x1901: ret 
0x1910: lea rdi,[rip+0x205769]
0x1917: lea rsi,[rip+0x205762]
0x191e: push rbp
0x191f: sub rsi,rdi
0x1922: mov rbp,rsp
0x1925: sar rsi,0x3
0x1929: mov rax,rsi
0x192c: shr rax,0x3f
0x1930: add rsi,rax
0x1933: sar rsi, 1
0x1936: je 0x1950
0x1938: mov rax,qword ptr [rip+0x2056b1]
0x193f: test rax,rax
0x1942: je 0x1950
0x1944: pop rbp
0x1945: jmp rax
0x1950: pop rbp
0x1951: ret 
0x1971: push rbp
0x1972: mov rbp,rsp
0x1975: je 0x1983
0x1977: mov rdi,qword ptr [rip+0x20568a]
0x197e: call 0x16e0
0x1983: call 0x18d0
0x1988: mov byte ptr [rip+0x205739],0x1
0x198f: pop rbp
0x1990: ret 
0x19a0: push rbp
0x19a1: mov rbp,rsp
0x19a4: pop rbp
0x19a5: jmp 0x1910
0x1d20: mov qword ptr [rip+0x2053b1],rdi
0x1d27: ret 
0x1d30: mov byte ptr [rip+0x205399],dil
0x1d37: ret 
0x1d40: push rbp
0x1d41: push rbx
0x1d42: sub rsp,0x8
0x1d46: mov rdi,qword ptr [rip+0x20533b]
0x1d4d: call 0x4c90
0x1d52: test eax,eax
0x1d54: je 0x1d6c
0x1d56: call 0x1420
0x1d5b: cmp byte ptr [rip+0x20536e],0x0
0x1d62: mov rbx,rax
0x1d65: je 0x1d83
0x1d67: cmp dword ptr [rax],0x20
0x1d6a: jne 0x1d83
0x1d6c: mov rdi,qword ptr [rip+0x20534d]
0x1d73: call 0x4c90
0x1d78: test eax,eax
0x1d7a: jne 0x1dc2
0x1d7c: add rsp,0x8
0x1d80: pop rbx
0x1d81: pop rbp
0x1d82: ret 
0x1d83: lea rsi,[rip+0x3556]
0x1d8a: xor edi,edi
0x1d8c: mov edx,0x5
0x1d91: call 0x14a0
0x1d96: mov rdi,qword ptr [rip+0x20533b]
0x1d9d: mov rbp,rax
0x1da0: test rdi,rdi
0x1da3: je 0x1dcd
0x1da5: call 0x3be0
0x1daa: mov esi,dword ptr [rbx]
0x1dac: lea rdx,[rip+0x3539]
0x1db3: mov rcx,rax
0x1db6: mov r8,rbp
0x1db9: xor edi,edi
0x1dbb: xor eax,eax
0x1dbd: call 0x1620
0x1dc2: mov edi,dword ptr [rip+0x205250]
0x1dc8: call 0x1440
0x1dcd: mov esi,dword ptr [rbx]
0x1dcf: lea rdx,[rip+0x351a]
0x1dd6: mov rcx,rax
0x1dd9: xor edi,edi
0x1ddb: xor eax,eax
0x1ddd: call 0x1620
0x1de2: jmp 0x1dc2
0x1e56: call 0x14d0
0x1e5b: nop dword ptr [rax+rax]
0x1f08: movzx ecx,byte ptr [rdx]
0x1f0b: test cl,cl
0x1f0d: je 0x1ec0
0x1f0f: movsx esi,cl
0x1f12: cmp esi,0x20
0x1f15: ja 0x1f5e
0x1f17: movabsq rdi,0x100003e00
0x1f21: btq rdi,rcx
0x1f25: jae 0x1f5e
0x1f27: add rdx,0x1
0x1f2b: mov r8d,0x1
0x1f31: jmp 0x1f47
0x1f38: mov rsi,r8
0x1f3b: add rdx,0x1
0x1f3f: shl rsi,cl
0x1f42: test rsi,rdi
0x1f45: je 0x1f5e
0x1f47: mov qword ptr [rsp],rdx
0x1f4b: movzx ecx,byte ptr [rdx]
0x1f4e: test cl,cl
0x1f50: je 0x1ec0
0x1f56: movsx esi,cl
0x1f59: cmp esi,0x20
0x1f5c: jbe 0x1f38
0x1f5e: cmp cl,0x2c
0x1f61: jne 0x1ebe
0x1f67: jmp 0x1ec0
0x1f6c: call 0x14d0
0x1f71: nop dword ptr [rax+rax]
0x1f76: nop word ptr cs:[rax+rax]
0x2012: cmp rbp,rbx
0x2015: mov rax,rbx
0x2018: cmovbe rax,rbp
0x201c: add rsp,0x8
0x2020: pop rbx
0x2021: pop rbp
0x2022: ret 
0x216f: nop 
0x2170: push rbp
0x2171: push rbx
0x2172: mov rbp,rdi
0x2175: mov ebx,esi
0x2177: sub rsp,0x8
0x217b: call 0x4d70
0x2180: movzx edx,byte ptr [rax]
0x2183: and edx,-0x21
0x2186: cmp dl,0x55
0x2189: je 0x2200
0x218b: cmp dl,0x47
0x218e: je 0x21b0
0x2190: lea rax,[rip+0x31d4]
0x2197: lea rdx,[rip+0x31cf]
0x219e: cmp ebx,0x9
0x21a1: cmovne rax,rdx
0x21a5: add rsp,0x8
0x21a9: pop rbx
0x21aa: pop rbp
0x21ab: ret 
0x21b0: movzx edx,byte ptr [rax+0x1]
0x21b4: and edx,-0x21
0x21b7: cmp dl,0x42
0x21ba: jne 0x2190
0x21bc: cmp byte ptr [rax+0x2],0x31
0x21c0: jne 0x2190
0x21c2: cmp byte ptr [rax+0x3],0x38
0x21c6: jne 0x2190
0x21c8: cmp byte ptr [rax+0x4],0x30
0x21cc: jne 0x2190
0x21ce: cmp byte ptr [rax+0x5],0x33
0x21d2: jne 0x2190
0x21d4: cmp byte ptr [rax+0x6],0x30
0x21d8: jne 0x2190
0x21da: cmp byte ptr [rax+0x7],0x0
0x21de: jne 0x2190
0x21e0: cmp byte ptr [rbp],0x60
0x21e4: lea rax,[rip+0x3179]
0x21eb: lea rdx,[rip+0x3176]
0x21f2: cmovne rax,rdx
0x21f6: add rsp,0x8
0x21fa: pop rbx
0x21fb: pop rbp
0x21fc: ret 
0x2200: movzx edx,byte ptr [rax+0x1]
0x2204: and edx,-0x21
0x2207: cmp dl,0x54
0x220a: jne 0x2190
0x220c: movzx edx,byte ptr [rax+0x2]
0x2210: and edx,-0x21
0x2213: cmp dl,0x46
0x2216: jne 0x2190
0x221c: cmp byte ptr [rax+0x3],0x2d
0x2220: jne 0x2190
0x2226: cmp byte ptr [rax+0x4],0x38
0x222a: jne 0x2190
0x2230: cmp byte ptr [rax+0x5],0x0
0x2234: jne 0x2190
0x223a: cmp byte ptr [rbp],0x60
0x223e: lea rax,[rip+0x3117]
0x2245: lea rdx,[rip+0x3114]
0x224c: cmovne rax,rdx
0x2250: add rsp,0x8
0x2254: pop rbx
0x2255: pop rbp
0x2256: ret 
0x2333: xor r11d,r11d
0x2336: mov rax,rbp
0x2339: mov r8d,r12d
0x233c: mov rbp,r11
0x233f: mov r11,rax
0x2342: nop word ptr [rax+rax]
0x2348: cmp r11,rbp
0x234b: setne r12b
0x234f: cmp r11,-0x1
0x2353: jne 0x2362
0x2355: mov rax,qword ptr [rsp+0x10]
0x235a: cmp byte ptr [rax+rbp],0x0
0x235e: setne r12b
0x2362: test r12b,r12b
0x2365: je 0x29c0
0x236b: cmp dword ptr [rsp+0x8],0x2
0x2370: mov rdi,qword ptr [rsp+0x10]
0x2375: lea r9,[rdi+rbp]
0x2379: setne al
0x237c: and al,byte ptr [rsp+0xd]
0x2380: mov r10d,eax
0x2383: je 0x2430
0x2389: mov rax,qword ptr [rsp+0x18]
0x238e: test rax,rax
0x2391: je 0x27c0
0x2397: cmp r11,-0x1
0x239b: lea rbx,[rbp+rax]
0x23a0: jne 0x23d0
0x23a2: cmp rax,0x1
0x23a6: jbe 0x23d0
0x23a8: mov byte ptr [rsp+0x38],r8b
0x23ad: mov byte ptr [rsp+0x30],r10b
0x23b2: mov qword ptr [rsp+0x28],r9
0x23b7: call 0x14c0
0x23bc: movzx r8d,byte ptr [rsp+0x38]
0x23c2: movzx r10d,byte ptr [rsp+0x30]
0x23c8: mov r11,rax
0x23cb: mov r9,qword ptr [rsp+0x28]
0x23d0: cmp rbx,r11
0x23d3: mov byte ptr [rsp+0x28],r10b
0x23d8: ja 0x2990
0x23de: mov rdx,qword ptr [rsp+0x18]
0x23e3: mov rsi,qword ptr [rsp+0x48]
0x23e8: mov rdi,r9
0x23eb: mov qword ptr [rsp+0x40],r11
0x23f0: mov byte ptr [rsp+0x38],r8b
0x23f5: mov qword ptr [rsp+0x30],r9
0x23fa: call 0x1560
0x23ff: test eax,eax
0x2401: mov r9,qword ptr [rsp+0x30]
0x2406: movzx r8d,byte ptr [rsp+0x38]
0x240c: mov r11,qword ptr [rsp+0x40]
0x2411: jne 0x2990
0x2417: cmp byte ptr [rsp+0xf],0x0
0x241c: movzx r10d,byte ptr [rsp+0x28]
0x2422: jne 0x33a5
0x2428: nop dword ptr [rax+rax]
0x2430: movzx ebx,byte ptr [r9]
0x2434: cmp bl,0x7e
0x2437: ja 0x2758
0x243d: lea rcx,[rip+0x2fa8]
0x2444: movzx edx,bl
0x2447: movsxd rax,dword ptr [rcx+rdx*4]
0x244b: add rax,rcx
0x244e: jmp rax
0x2488: cmp byte ptr [rsp+0xd],0x1
0x248d: jne 0x25a2
0x2493: test dl,dl
0x2495: jne 0x25a2
0x249b: mov rsi,qword ptr [rsp+0x20]
0x24a0: test rsi,rsi
0x24a3: je 0x24b9
0x24a5: mov edx,ebx
0x24a7: shr dl,0x5
0x24aa: movzx edx,dl
0x24ad: mov edx,dword ptr [rsi+rdx*4]
0x24b0: btl edx,ebx
0x24b3: jb 0x2603
0x24b9: test r10b,r10b
0x24bc: jne 0x2603
0x24c2: xor eax,0x1
0x24c5: add rbp,0x1
0x24c9: and eax,r8d
0x24cc: test al,al
0x24ce: je 0x24f0
0x24d0: cmp r13,r15
0x24d3: jbe 0x24da
0x24d5: mov byte ptr [r14+r15],0x27
0x24da: lea rax,[r15+0x1]
0x24de: cmp r13,rax
0x24e1: jbe 0x24e9
0x24e3: mov byte ptr [r14+r15+0x1],0x27
0x24e9: add r15,0x2
0x24ed: xor r8d,r8d
0x24f0: cmp r15,r13
0x24f3: jae 0x24f9
0x24f5: mov byte ptr [r14+r15],bl
0x24f9: movzx edi,byte ptr [rsp+0xe]
0x24fe: add r15,0x1
0x2502: mov eax,0x0
0x2507: test r12b,r12b
0x250a: cmove edi,eax
0x250d: mov byte ptr [rsp+0xe],dil
0x2512: jmp 0x2348
0x25a2: cmp byte ptr [rsp+0xf],0x0
0x25a7: jne 0x249b
0x25ad: jmp 0x24b9
0x2603: cmp dword ptr [rsp+0x8],0x2
0x2608: sete dl
0x260b: cmp byte ptr [rsp+0xf],0x0
0x2610: mov eax,edx
0x2612: jne 0x2e68
0x2618: mov eax,r8d
0x261b: xor eax,0x1
0x261e: and al,dl
0x2620: je 0x2651
0x2622: cmp r13,r15
0x2625: jbe 0x262c
0x2627: mov byte ptr [r14+r15],0x27
0x262c: lea rdx,[r15+0x1]
0x2630: cmp r13,rdx
0x2633: jbe 0x263b
0x2635: mov byte ptr [r14+r15+0x1],0x24
0x263b: lea rdx,[r15+0x2]
0x263f: cmp r13,rdx
0x2642: jbe 0x264a
0x2644: mov byte ptr [r14+r15+0x2],0x27
0x264a: add r15,0x3
0x264e: mov r8d,eax
0x2651: cmp r13,r15
0x2654: jbe 0x265b
0x2656: mov byte ptr [r14+r15],0x5c
0x265b: add r15,0x1
0x265f: add rbp,0x1
0x2663: jmp 0x24f0
0x2750: xor r10d,r10d
0x2753: nop dword ptr [rax+rax]
0x2758: cmp qword ptr [rsp+0x58],0x1
0x275e: jne 0x2b08
0x2764: mov qword ptr [rsp+0x38],r11
0x2769: mov byte ptr [rsp+0x30],r8b
0x276e: mov byte ptr [rsp+0x28],r10b
0x2773: call 0x16d0
0x2778: mov rcx,qword ptr [rax]
0x277b: movzx edx,bl
0x277e: movzx r10d,byte ptr [rsp+0x28]
0x2784: movzx r8d,byte ptr [rsp+0x30]
0x278a: mov r11,qword ptr [rsp+0x38]
0x278f: mov edi,0x1
0x2794: movzx eax,word ptr [rcx+rdx*2]
0x2798: and ax,0x4000
0x279c: setne r12b
0x27a0: sete al
0x27a3: and al,byte ptr [rsp+0xd]
0x27a7: test al,al
0x27a9: jne 0x3141
0x27af: cmp dword ptr [rsp+0x8],0x2
0x27b4: sete dl
0x27b7: jmp 0x2488
0x27c0: movzx ebx,byte ptr [r9]
0x27c4: cmp bl,0x7e
0x27c7: ja 0x2750
0x27c9: lea rcx,[rip+0x2e18]
0x27d0: movzx edx,bl
0x27d3: movsxd rax,dword ptr [rcx+rdx*4]
0x27d7: add rax,rcx
0x27da: jmp rax
0x2990: xor r10d,r10d
0x2993: jmp 0x2430
0x29c0: cmp dword ptr [rsp+0x8],0x2
0x29c5: movzx ebx,byte ptr [rsp+0xf]
0x29ca: mov r12d,r8d
0x29cd: mov rbp,r11
0x29d0: sete dl
0x29d3: mov eax,ebx
0x29d5: test r15,r15
0x29d8: sete cl
0x29db: and eax,edx
0x29dd: and al,cl
0x29df: jne 0x3446
0x29e5: mov eax,ebx
0x29e7: xor eax,0x1
0x29ea: and dl,al
0x29ec: je 0x335c
0x29f2: cmp byte ptr [rsp+0x7c],0x0
0x29f7: je 0x335a
0x29fd: cmp byte ptr [rsp+0xe],0x0
0x2a02: jne 0x33fd
0x2a08: test r13,r13
0x2a0b: sete al
0x2a0e: cmp qword ptr [rsp+0x50],0x0
0x2a14: setne dl
0x2a17: and al,dl
0x2a19: je 0x343c
0x2a1f: mov r13,qword ptr [rsp+0x50]
0x2a24: lea rbx,[rip+0x2942]
0x2a2b: mov byte ptr [r14],0x27
0x2a2f: mov dword ptr [rsp+0x8],0x2
0x2a37: mov r15d,0x1
0x2a3d: mov qword ptr [rsp+0x18],0x1
0x2a46: mov byte ptr [rsp+0xf],0x0
0x2a4b: mov qword ptr [rsp+0x48],rbx
0x2a50: mov byte ptr [rsp+0x7c],al
0x2a54: jmp 0x2333
0x2b08: lea rax,[rsp+0xa0]
0x2b10: cmp r11,-0x1
0x2b14: mov qword ptr [rsp+0xa0],0x0
0x2b20: mov qword ptr [rsp+0x28],rax
0x2b25: jne 0x2b54
0x2b27: mov rdi,qword ptr [rsp+0x10]
0x2b2c: mov byte ptr [rsp+0x40],r8b
0x2b31: mov byte ptr [rsp+0x38],r10b
0x2b36: mov qword ptr [rsp+0x30],r9
0x2b3b: call 0x14c0
0x2b40: movzx r8d,byte ptr [rsp+0x40]
0x2b46: movzx r10d,byte ptr [rsp+0x38]
0x2b4c: mov r11,rax
0x2b4f: mov r9,qword ptr [rsp+0x30]
0x2b54: lea rax,[rsp+0x9c]
0x2b5c: xor ecx,ecx
0x2b5e: mov byte ptr [rsp+0x7e],bl
0x2b62: mov byte ptr [rsp+0x7d],r8b
0x2b67: mov rbx,rcx
0x2b6a: mov qword ptr [rsp+0x88],r9
0x2b72: mov qword ptr [rsp+0x38],rax
0x2b77: mov byte ptr [rsp+0x7f],r10b
0x2b7c: mov qword ptr [rsp+0x80],r15
0x2b84: mov qword ptr [rsp+0x40],r14
0x2b89: mov qword ptr [rsp+0x70],r13
0x2b8e: mov qword ptr [rsp+0x30],r11
0x2b93: mov rax,qword ptr [rsp+0x10]
0x2b98: lea r14,[rbp+rbx]
0x2b9d: mov rdx,qword ptr [rsp+0x30]
0x2ba2: mov rcx,qword ptr [rsp+0x28]
0x2ba7: mov rdi,qword ptr [rsp+0x38]
0x2bac: lea r13,[rax+r14]
0x2bb0: sub rdx,r14
0x2bb3: mov rsi,r13
0x2bb6: call 0x4c00
0x2bbb: test rax,rax
0x2bbe: mov r15,rax
0x2bc1: je 0x2c11
0x2bc3: cmp rax,-0x1
0x2bc7: je 0x31e5
0x2bcd: cmp rax,-0x2
0x2bd1: je 0x3171
0x2bd7: cmp dword ptr [rsp+0x8],0x2
0x2bdc: sete al
0x2bdf: and al,byte ptr [rsp+0xf]
0x2be3: jne 0x2d80
0x2be9: mov edi,dword ptr [rsp+0x9c]
0x2bf0: call 0x16c0
0x2bf5: mov rdi,qword ptr [rsp+0x28]
0x2bfa: test eax,eax
0x2bfc: mov eax,0x0
0x2c01: cmove r12d,eax
0x2c05: add rbx,r15
0x2c08: call 0x16b0
0x2c0d: test eax,eax
0x2c0f: je 0x2b93
0x2c11: mov edx,r12d
0x2c14: mov rdi,rbx
0x2c17: movzx r8d,byte ptr [rsp+0x7d]
0x2c1d: xor edx,0x1
0x2c20: movzx ebx,byte ptr [rsp+0x7e]
0x2c25: movzx r10d,byte ptr [rsp+0x7f]
0x2c2b: and dl,byte ptr [rsp+0xd]
0x2c2f: mov r15,qword ptr [rsp+0x80]
0x2c37: mov r14,qword ptr [rsp+0x40]
0x2c3c: mov r13,qword ptr [rsp+0x70]
0x2c41: mov r11,qword ptr [rsp+0x30]
0x2c46: cmp rdi,0x1
0x2c4a: jbe 0x324b
0x2c50: mov rcx,rdi
0x2c53: xor esi,esi
0x2c55: movzx r9d,byte ptr [rsp+0xf]
0x2c5b: add rcx,rbp
0x2c5e: mov rdi,qword ptr [rsp+0x10]
0x2c63: jmp 0x2d1e
0x2c70: cmp dword ptr [rsp+0x8],0x2
0x2c75: sete al
0x2c78: test r9b,r9b
0x2c7b: jne 0x3130
0x2c81: mov esi,r8d
0x2c84: xor esi,0x1
0x2c87: and al,sil
0x2c8a: je 0x2cbb
0x2c8c: cmp r13,r15
0x2c8f: jbe 0x2c96
0x2c91: mov byte ptr [r14+r15],0x27
0x2c96: lea rsi,[r15+0x1]
0x2c9a: cmp r13,rsi
0x2c9d: jbe 0x2ca5
0x2c9f: mov byte ptr [r14+r15+0x1],0x24
0x2ca5: lea rsi,[r15+0x2]
0x2ca9: cmp r13,rsi
0x2cac: jbe 0x2cb4
0x2cae: mov byte ptr [r14+r15+0x2],0x27
0x2cb4: add r15,0x3
0x2cb8: mov r8d,eax
0x2cbb: cmp r13,r15
0x2cbe: jbe 0x2cc5
0x2cc0: mov byte ptr [r14+r15],0x5c
0x2cc5: lea rax,[r15+0x1]
0x2cc9: cmp r13,rax
0x2ccc: jbe 0x2cdb
0x2cce: mov eax,ebx
0x2cd0: shr al,0x6
0x2cd3: add eax,0x30
0x2cd6: mov byte ptr [r14+r15+0x1],al
0x2cdb: lea rax,[r15+0x2]
0x2cdf: cmp r13,rax
0x2ce2: jbe 0x2cf4
0x2ce4: mov eax,ebx
0x2ce6: shr al,0x3
0x2ce9: and eax,0x7
0x2cec: add eax,0x30
0x2cef: mov byte ptr [r14+r15+0x2],al
0x2cf4: and ebx,0x7
0x2cf7: add rbp,0x1
0x2cfb: add r15,0x3
0x2cff: add ebx,0x30
0x2d02: cmp rbp,rcx
0x2d05: jae 0x24f0
0x2d0b: mov esi,edx
0x2d0d: cmp r13,r15
0x2d10: jbe 0x2d16
0x2d12: mov byte ptr [r14+r15],bl
0x2d16: movzx ebx,byte ptr [rdi+rbp]
0x2d1a: add r15,0x1
0x2d1e: test dl,dl
0x2d20: jne 0x2c70
0x2d26: mov eax,esi
0x2d28: xor eax,0x1
0x2d2b: and eax,r8d
0x2d2e: test r10b,r10b
0x2d31: je 0x2d41
0x2d33: cmp r13,r15
0x2d36: jbe 0x2d3d
0x2d38: mov byte ptr [r14+r15],0x5c
0x2d3d: add r15,0x1
0x2d41: add rbp,0x1
0x2d45: cmp rbp,rcx
0x2d48: jae 0x24cc
0x2d4e: test al,al
0x2d50: je 0x314e
0x2d56: cmp r13,r15
0x2d59: jbe 0x2d60
0x2d5b: mov byte ptr [r14+r15],0x27
0x2d60: lea rax,[r15+0x1]
0x2d64: cmp r13,rax
0x2d67: jbe 0x2d6f
0x2d69: mov byte ptr [r14+r15+0x1],0x27
0x2d6f: add r15,0x2
0x2d73: xor r10d,r10d
0x2d76: xor r8d,r8d
0x2d79: jmp 0x2d0d
0x2d80: cmp r15,0x1
0x2d84: je 0x2be9
0x2d8a: mov rdi,qword ptr [rsp+0x10]
0x2d8f: lea rcx,[rdi+r15]
0x2d93: lea rdx,[rdi+r14+0x1]
0x2d98: lea r8,[rcx+r14]
0x2d9c: jmp 0x2dad
0x2da0: add rdx,0x1
0x2da4: cmp r8,rdx
0x2da7: je 0x2be9
0x2dad: movzx ecx,byte ptr [rdx]
0x2db0: sub ecx,0x5b
0x2db3: cmp cl,0x21
0x2db6: ja 0x2da0
0x2db8: mov esi,0x1
0x2dbd: shl rsi,cl
0x2dc0: mov rcx,rsi
0x2dc3: movabsq rsi,0x20000002b
0x2dcd: test rcx,rsi
0x2dd0: je 0x2da0
0x2dd2: mov r14,qword ptr [rsp+0x40]
0x2dd7: mov r13,qword ptr [rsp+0x70]
0x2ddc: mov rbp,qword ptr [rsp+0x30]
0x2de1: mov dword ptr [rsp+0x8],0x2
0x2de9: cmp byte ptr [rsp+0xd],0x0
0x2dee: je 0x2e00
0x2df0: test al,al
0x2df2: mov eax,0x4
0x2df7: cmove eax,dword ptr [rsp+0x8]
0x2dfc: mov dword ptr [rsp+0x8],eax
0x2e00: sub rsp,0x8
0x2e04: mov rcx,rbp
0x2e07: mov rsi,r13
0x2e0a: push qword ptr [rsp+0x68]
0x2e0e: push qword ptr [rsp+0x78]
0x2e12: mov rdi,r14
0x2e15: push 0x0
0x2e17: mov r9d,dword ptr [rsp+0x98]
0x2e1f: mov r8d,dword ptr [rsp+0x28]
0x2e24: mov rdx,qword ptr [rsp+0x30]
0x2e29: and r9d,-0x3
0x2e2d: call 0x2260
0x2e32: add rsp,0x20
0x2e36: mov r15,rax
0x2e39: mov rbx,qword ptr [rsp+0xa8]
0x2e41: xor rbx,qword ptr fs:0x28
0x2e4a: mov rax,r15
0x2e4d: jne 0x3453
0x2e53: add rsp,0xb8
0x2e5a: pop rbx
0x2e5b: pop rbp
0x2e5c: pop r12
0x2e5e: pop r13
0x2e60: pop r14
0x2e62: pop r15
0x2e64: ret 
0x2e68: mov rbp,r11
0x2e6b: jmp 0x2de9
0x2ed1: test r13,r13
0x2ed4: jne 0x346a
0x2eda: lea rax,[rip+0x248c]
0x2ee1: mov qword ptr [rsp+0x50],0x0
0x2eea: mov byte ptr [rsp+0xe],0x1
0x2eef: mov byte ptr [rsp+0x7c],0x0
0x2ef4: xor r12d,r12d
0x2ef7: mov byte ptr [rsp+0xf],0x0
0x2efc: mov qword ptr [rsp+0x18],0x1
0x2f05: mov qword ptr [rsp+0x48],rax
0x2f0a: mov r15d,0x1
0x2f10: mov dword ptr [rsp+0x8],0x2
0x2f18: jmp 0x2333
0x3130: movzx ebx,byte ptr [rsp+0xf]
0x3135: mov rbp,r11
0x3138: mov byte ptr [rsp+0xd],bl
0x313c: jmp 0x2de9
0x3141: movzx edx,byte ptr [rsp+0xd]
0x3146: xor r12d,r12d
0x3149: jmp 0x2c50
0x314e: xor r10d,r10d
0x3151: jmp 0x2d0d
0x3171: mov r11,qword ptr [rsp+0x30]
0x3176: mov rsi,r14
0x3179: mov rcx,r13
0x317c: mov rax,rbx
0x317f: mov rdi,rbx
0x3182: movzx r8d,byte ptr [rsp+0x7d]
0x3188: movzx ebx,byte ptr [rsp+0x7e]
0x318d: mov r9,qword ptr [rsp+0x88]
0x3195: cmp rsi,r11
0x3198: movzx r10d,byte ptr [rsp+0x7f]
0x319e: mov r15,qword ptr [rsp+0x80]
0x31a6: mov r14,qword ptr [rsp+0x40]
0x31ab: mov r13,qword ptr [rsp+0x70]
0x31b0: jae 0x31d8
0x31b2: cmp byte ptr [rcx],0x0
0x31b5: jne 0x31c7
0x31b7: jmp 0x31d8
0x31c0: cmp byte ptr [r9+rax],0x0
0x31c5: je 0x31d5
0x31c7: add rax,0x1
0x31cb: lea rdx,[rbp+rax]
0x31d0: cmp r11,rdx
0x31d3: ja 0x31c0
0x31d5: mov rdi,rax
0x31d8: movzx edx,byte ptr [rsp+0xd]
0x31dd: xor r12d,r12d
0x31e0: jmp 0x2c46
0x31e5: mov rdi,rbx
0x31e8: movzx r8d,byte ptr [rsp+0x7d]
0x31ee: movzx ebx,byte ptr [rsp+0x7e]
0x31f3: movzx r10d,byte ptr [rsp+0x7f]
0x31f9: mov r15,qword ptr [rsp+0x80]
0x3201: xor r12d,r12d
0x3204: mov r14,qword ptr [rsp+0x40]
0x3209: mov r13,qword ptr [rsp+0x70]
0x320e: mov r11,qword ptr [rsp+0x30]
0x3213: movzx edx,byte ptr [rsp+0xd]
0x3218: jmp 0x2c46
0x324b: mov eax,edx
0x324d: jmp 0x27a7
0x335a: mov eax,edx
0x335c: mov rbx,qword ptr [rsp+0x48]
0x3361: test rbx,rbx
0x3364: je 0x3392
0x3366: test al,al
0x3368: je 0x3392
0x336a: movzx ecx,byte ptr [rbx]
0x336d: mov rax,rbx
0x3370: test cl,cl
0x3372: je 0x3392
0x3374: mov rdx,r15
0x3377: sub rax,r15
0x337a: cmp r13,rdx
0x337d: jbe 0x3383
0x337f: mov byte ptr [r14+rdx],cl
0x3383: add rdx,0x1
0x3387: movzx ecx,byte ptr [rax+rdx]
0x338b: test cl,cl
0x338d: jne 0x337a
0x338f: mov r15,rdx
0x3392: cmp r13,r15
0x3395: jbe 0x2e39
0x339b: mov byte ptr [r14+r15],0x0
0x33a0: jmp 0x2e39
0x33a5: cmp dword ptr [rsp+0x8],0x2
0x33aa: movzx ebx,byte ptr [rsp+0xf]
0x33af: mov rbp,r11
0x33b2: sete al
0x33b5: mov byte ptr [rsp+0xd],bl
0x33b9: jmp 0x2de9
0x33fd: sub rsp,0x8
0x3401: mov r8d,0x5
0x3407: mov rcx,r11
0x340a: push qword ptr [rsp+0x68]
0x340e: push qword ptr [rsp+0x78]
0x3412: mov rdi,r14
0x3415: push qword ptr [rsp+0x38]
0x3419: mov r9d,dword ptr [rsp+0x98]
0x3421: mov rdx,qword ptr [rsp+0x30]
0x3426: mov rsi,qword ptr [rsp+0x70]
0x342b: call 0x2260
0x3430: add rsp,0x20
0x3434: mov r15,rax
0x3437: jmp 0x2e39
0x343c: movzx eax,byte ptr [rsp+0x7c]
0x3441: jmp 0x335c
0x3446: mov dword ptr [rsp+0x8],0x2
0x344e: jmp 0x2de9
0x3453: call 0x14d0
0x3458: mov byte ptr [rsp+0xd],0x0
0x345d: jmp 0x2ed1
0x346a: mov byte ptr [rsp+0xe],0x1
0x346f: xor eax,eax
0x3471: xor r12d,r12d
0x3474: mov qword ptr [rsp+0x50],0x0
0x347d: jmp 0x2a24
0x3494: nop 
0x3496: nop word ptr cs:[rax+rax]
0x358c: add rsp,0x20
0x3590: mov r11,qword ptr [rsp+0x10]
0x3595: cmp r11,rax
0x3598: ja 0x3601
0x359a: lea rsi,[rax+0x1]
0x359e: lea rax,[rip+0x203b5b]
0x35a5: cmp r12,rax
0x35a8: mov qword ptr [rbx],rsi
0x35ab: je 0x35bf
0x35ad: mov rdi,r12
0x35b0: mov qword ptr [rsp+0x10],rsi
0x35b5: call 0x1400
0x35ba: mov rsi,qword ptr [rsp+0x10]
0x35bf: mov rdi,rsi
0x35c2: mov qword ptr [rsp+0x10],rsi
0x35c7: call 0x4420
0x35cc: sub rsp,0x8
0x35d0: mov qword ptr [rbx+0x8],rax
0x35d4: mov r8d,dword ptr [rbp]
0x35d8: push qword ptr [rbp+0x30]
0x35db: push qword ptr [rbp+0x28]
0x35de: mov rcx,r14
0x35e1: push r15
0x35e3: mov r9d,dword ptr [rsp+0x3c]
0x35e8: mov rdi,rax
0x35eb: mov rdx,qword ptr [rsp+0x28]
0x35f0: mov rsi,qword ptr [rsp+0x30]
0x35f5: mov r12,rax
0x35f8: call 0x2260
0x35fd: add rsp,0x20
0x3601: mov eax,dword ptr [rsp+0x18]
0x3605: mov dword ptr [r13],eax
0x3609: add rsp,0x28
0x360d: mov rax,r12
0x3610: pop rbx
0x3611: pop rbp
0x3612: pop r12
0x3614: pop r13
0x3616: pop r14
0x3618: pop r15
0x361a: ret 
0x3641: call 0x1410
0x3646: call 0x4670
0x364b: nop dword ptr [rax+rax]
0x3650: push r12
0x3652: push rbp
0x3653: push rbx
0x3654: mov rbx,rdi
0x3657: call 0x1420
0x365c: mov r12d,dword ptr [rax]
0x365f: mov rbp,rax
0x3662: lea rax,[rip+0x203b97]
0x3669: test rbx,rbx
0x366c: mov esi,0x38
0x3671: cmove rbx,rax
0x3675: mov rdi,rbx
0x3678: call 0x4620
0x367d: mov dword ptr [rbp],r12d
0x3681: pop rbx
0x3682: pop rbp
0x3683: pop r12
0x3685: ret 
0x3690: lea rax,[rip+0x203b69]
0x3697: test rdi,rdi
0x369a: cmove rdi,rax
0x369e: mov eax,dword ptr [rdi]
0x36a0: ret 
0x36b0: lea rax,[rip+0x203b49]
0x36b7: test rdi,rdi
0x36ba: cmove rdi,rax
0x36be: mov dword ptr [rdi],esi
0x36c0: ret 
0x36d0: lea rax,[rip+0x203b29]
0x36d7: test rdi,rdi
0x36da: mov ecx,esi
0x36dc: cmove rdi,rax
0x36e0: mov eax,esi
0x36e2: and ecx,0x1f
0x36e5: shr al,0x5
0x36e8: movzx eax,al
0x36eb: lea rdi,[rdi+rax*4+0x8]
0x36f0: mov esi,dword ptr [rdi]
0x36f2: mov eax,esi
0x36f4: shr eax,cl
0x36f6: xor edx,eax
0x36f8: and eax,0x1
0x36fb: and edx,0x1
0x36fe: shl edx,cl
0x3700: xor edx,esi
0x3702: mov dword ptr [rdi],edx
0x3704: ret 
0x3710: lea rax,[rip+0x203ae9]
0x3717: test rdi,rdi
0x371a: cmove rdi,rax
0x371e: mov eax,dword ptr [rdi+0x4]
0x3721: mov dword ptr [rdi+0x4],esi
0x3724: ret 
0x3730: lea rax,[rip+0x203ac9]
0x3737: test rdi,rdi
0x373a: cmove rdi,rax
0x373e: test rsi,rsi
0x3741: mov dword ptr [rdi],0xa
0x3747: je 0x3757
0x3749: test rdx,rdx
0x374c: je 0x3757
0x374e: mov qword ptr [rdi+0x28],rsi
0x3752: mov qword ptr [rdi+0x30],rdx
0x3756: ret 
0x3757: sub rsp,0x8
0x375b: call 0x1410
0x3760: push r15
0x3762: push r14
0x3764: lea rax,[rip+0x203a95]
0x376b: push r13
0x376d: push r12
0x376f: mov r13,rdi
0x3772: push rbp
0x3773: push rbx
0x3774: mov rbx,r8
0x3777: mov r14,rsi
0x377a: mov r15,rdx
0x377d: sub rsp,0x18
0x3781: test r8,r8
0x3784: cmove rbx,rax
0x3788: mov qword ptr [rsp+0x8],rcx
0x378d: call 0x1420
0x3792: mov r12d,dword ptr [rax]
0x3795: mov rbp,rax
0x3798: lea rax,[rbx+0x8]
0x379c: sub rsp,0x8
0x37a0: mov r9d,dword ptr [rbx+0x4]
0x37a4: push qword ptr [rbx+0x30]
0x37a7: mov r8d,dword ptr [rbx]
0x37aa: push qword ptr [rbx+0x28]
0x37ad: mov rdx,r15
0x37b0: push rax
0x37b1: mov rcx,qword ptr [rsp+0x28]
0x37b6: mov rsi,r14
0x37b9: mov rdi,r13
0x37bc: call 0x2260
0x37c1: mov dword ptr [rbp],r12d
0x37c5: add rsp,0x38
0x37c9: pop rbx
0x37ca: pop rbp
0x37cb: pop r12
0x37cd: pop r13
0x37cf: pop r14
0x37d1: pop r15
0x37d3: ret 
0x37e0: push r15
0x37e2: push r14
0x37e4: lea rax,[rip+0x203a15]
0x37eb: push r13
0x37ed: push r12
0x37ef: mov r12,rdx
0x37f2: push rbp
0x37f3: push rbx
0x37f4: mov rbx,rcx
0x37f7: mov r14,rdi
0x37fa: mov r15,rsi
0x37fd: sub rsp,0x38
0x3801: test rcx,rcx
0x3804: cmove rbx,rax
0x3808: xor ebp,ebp
0x380a: call 0x1420
0x380f: test r12,r12
0x3812: mov r13,rax
0x3815: mov eax,dword ptr [rax]
0x3817: sete bpl
0x381b: or ebp,dword ptr [rbx+0x4]
0x381e: lea r10,[rbx+0x8]
0x3822: sub rsp,0x8
0x3826: mov r8d,dword ptr [rbx]
0x3829: mov rcx,r15
0x382c: mov dword ptr [rsp+0x14],eax
0x3830: push qword ptr [rbx+0x30]
0x3833: mov rdx,r14
0x3836: push qword ptr [rbx+0x28]
0x3839: push r10
0x383b: xor esi,esi
0x383d: mov r9d,ebp
0x3840: xor edi,edi
0x3842: mov qword ptr [rsp+0x40],r10
0x3847: call 0x2260
0x384c: lea rsi,[rax+0x1]
0x3850: mov qword ptr [rsp+0x48],rax
0x3855: add rsp,0x20
0x3859: mov rdi,rsi
0x385c: mov qword ptr [rsp+0x18],rsi
0x3861: call 0x4420
0x3866: mov qword ptr [rsp+0x10],rax
0x386b: sub rsp,0x8
0x386f: push qword ptr [rbx+0x30]
0x3872: push qword ptr [rbx+0x28]
0x3875: mov r10,qword ptr [rsp+0x38]
0x387a: mov r9d,ebp
0x387d: mov r8d,dword ptr [rbx]
0x3880: mov rcx,r15
0x3883: mov rdx,r14
0x3886: mov rdi,rax
0x3889: push r10
0x388b: mov rsi,qword ptr [rsp+0x38]
0x3890: call 0x2260
0x3895: mov eax,dword ptr [rsp+0x2c]
0x3899: add rsp,0x20
0x389d: test r12,r12
0x38a0: mov dword ptr [r13],eax
0x38a4: je 0x38af
0x38a6: mov r11,qword ptr [rsp+0x28]
0x38ab: mov qword ptr [r12],r11
0x38af: mov rax,qword ptr [rsp+0x10]
0x38b4: add rsp,0x38
0x38b8: pop rbx
0x38b9: pop rbp
0x38ba: pop r12
0x38bc: pop r13
0x38be: pop r14
0x38c0: pop r15
0x38c2: ret 
0x38d0: mov rcx,rdx
0x38d3: xor edx,edx
0x38d5: jmp 0x37e0
0x38e0: mov eax,dword ptr [rip+0x203772]
0x38e6: push r12
0x38e8: mov r12,qword ptr [rip+0x203771]
0x38ef: push rbp
0x38f0: push rbx
0x38f1: cmp eax,0x1
0x38f4: jle 0x3921
0x38f6: sub eax,0x2
0x38f9: lea rbx,[r12+0x18]
0x38fe: shl rax,0x4
0x3902: lea rbp,[r12+rax+0x28]
0x3907: nop word ptr [rax+rax]
0x3910: mov rdi,qword ptr [rbx]
0x3913: add rbx,0x10
0x3917: call 0x1400
0x391c: cmp rbx,rbp
0x391f: jne 0x3910
0x3921: mov rdi,qword ptr [r12+0x8]
0x3926: lea rbx,[rip+0x2037d3]
0x392d: cmp rdi,rbx
0x3930: je 0x3949
0x3932: call 0x1400
0x3937: mov qword ptr [rip+0x20372e],0x100
0x3942: mov qword ptr [rip+0x20372f],rbx
0x3949: lea rbx,[rip+0x203720]
0x3950: cmp r12,rbx
0x3953: je 0x3964
0x3955: mov rdi,r12
0x3958: call 0x1400
0x395d: mov qword ptr [rip+0x2036fc],rbx
0x3964: pop rbx
0x3965: mov dword ptr [rip+0x2036e9],0x1
0x396f: pop rbp
0x3970: pop r12
0x3972: ret 
0x3980: lea rcx,[rip+0x203879]
0x3987: mov rdx,-0x1
0x398e: jmp 0x34a0
0x39a0: lea rcx,[rip+0x203859]
0x39a7: jmp 0x34a0
0x39b0: lea rcx,[rip+0x203849]
0x39b7: mov rsi,rdi
0x39ba: mov rdx,-0x1
0x39c1: xor edi,edi
0x39c3: jmp 0x34a0
0x39d0: lea rcx,[rip+0x203829]
0x39d7: mov rdx,rsi
0x39da: mov rsi,rdi
0x39dd: xor edi,edi
0x39df: jmp 0x34a0
0x39f0: sub rsp,0x48
0x39f4: mov rax,rdx
0x39f7: mov rdx,qword ptr fs:0x28
0x3a00: mov qword ptr [rsp+0x38],rdx
0x3a05: xor edx,edx
0x3a07: cmp esi,0xa
0x3a0a: je 0x3a74
0x3a0c: mov dword ptr [rsp],esi
0x3a0f: mov rcx,rsp
0x3a12: mov rdx,-0x1
0x3a19: mov rsi,rax
0x3a1c: mov qword ptr [rsp+0x4],0x0
0x3a25: mov qword ptr [rsp+0xc],0x0
0x3a2e: mov qword ptr [rsp+0x14],0x0
0x3a37: mov qword ptr [rsp+0x1c],0x0
0x3a40: mov qword ptr [rsp+0x24],0x0
0x3a49: mov qword ptr [rsp+0x2c],0x0
0x3a52: mov dword ptr [rsp+0x34],0x0
0x3a5a: call 0x34a0
0x3a5f: mov rcx,qword ptr [rsp+0x38]
0x3a64: xor rcx,qword ptr fs:0x28
0x3a6d: jne 0x3a79
0x3a6f: add rsp,0x48
0x3a73: ret 
0x3a74: call 0x1410
0x3a79: call 0x14d0
0x3a7e: nop 
0x3a80: sub rsp,0x48
0x3a84: mov rax,rdx
0x3a87: mov rdx,rcx
0x3a8a: mov rcx,qword ptr fs:0x28
0x3a93: mov qword ptr [rsp+0x38],rcx
0x3a98: xor ecx,ecx
0x3a9a: cmp esi,0xa
0x3a9d: je 0x3b00
0x3a9f: mov dword ptr [rsp],esi
0x3aa2: mov rcx,rsp
0x3aa5: mov rsi,rax
0x3aa8: mov qword ptr [rsp+0x4],0x0
0x3ab1: mov qword ptr [rsp+0xc],0x0
0x3aba: mov qword ptr [rsp+0x14],0x0
0x3ac3: mov qword ptr [rsp+0x1c],0x0
0x3acc: mov qword ptr [rsp+0x24],0x0
0x3ad5: mov qword ptr [rsp+0x2c],0x0
0x3ade: mov dword ptr [rsp+0x34],0x0
0x3ae6: call 0x34a0
0x3aeb: mov rdx,qword ptr [rsp+0x38]
0x3af0: xor rdx,qword ptr fs:0x28
0x3af9: jne 0x3b05
0x3afb: add rsp,0x48
0x3aff: ret 
0x3b00: call 0x1410
0x3b05: call 0x14d0
0x3b0a: nop word ptr [rax+rax]
0x3b10: mov rdx,rsi
0x3b13: mov esi,edi
0x3b15: xor edi,edi
0x3b17: jmp 0x39f0
0x3b20: mov rcx,rdx
0x3b23: mov rdx,rsi
0x3b26: mov esi,edi
0x3b28: xor edi,edi
0x3b2a: jmp 0x3a80
0x3b30: sub rsp,0x48
0x3b34: mov ecx,edx
0x3b36: mov rax,qword ptr fs:0x28
0x3b3f: mov qword ptr [rsp+0x38],rax
0x3b44: xor eax,eax
0x3b46: mov rax,qword ptr [rip+0x2036e3]
0x3b4d: mov r8,rsp
0x3b50: and ecx,0x1f
0x3b53: movdqa xmm0,[rip+0x2036a5]
0x3b5b: mov qword ptr [rsp+0x30],rax
0x3b60: mov eax,edx
0x3b62: movaps [rsp],xmm0
0x3b66: shr al,0x5
0x3b69: movzx eax,al
0x3b6c: lea r9,[r8+rax*4+0x8]
0x3b71: movdqa xmm0,[rip+0x203697]
0x3b79: movaps [rsp+0x10],xmm0
0x3b7e: movdqa xmm0,[rip+0x20369a]
0x3b86: movaps [rsp+0x20],xmm0
0x3b8b: mov edx,dword ptr [r9]
0x3b8e: mov eax,edx
0x3b90: shr eax,cl
0x3b92: not eax
0x3b94: and eax,0x1
0x3b97: shl eax,cl
0x3b99: mov rcx,r8
0x3b9c: xor eax,edx
0x3b9e: mov rdx,rsi
0x3ba1: mov rsi,rdi
0x3ba4: mov dword ptr [r9],eax
0x3ba7: xor edi,edi
0x3ba9: call 0x34a0
0x3bae: mov rsi,qword ptr [rsp+0x38]
0x3bb3: xor rsi,qword ptr fs:0x28
0x3bbc: jne 0x3bc3
0x3bbe: add rsp,0x48
0x3bc2: ret 
0x3bc3: call 0x14d0
0x3bc8: nop dword ptr [rax+rax]
0x3bd0: movsx edx,sil
0x3bd4: mov rsi,-0x1
0x3bdb: jmp 0x3b30
0x3be0: mov edx,0x3a
0x3be5: mov rsi,-0x1
0x3bec: jmp 0x3b30
0x3c00: mov edx,0x3a
0x3c05: jmp 0x3b30
0x3c10: sub rsp,0x48
0x3c14: mov rax,rdx
0x3c17: mov rdx,qword ptr fs:0x28
0x3c20: mov qword ptr [rsp+0x38],rdx
0x3c25: xor edx,edx
0x3c27: cmp esi,0xa
0x3c2a: je 0x3c94
0x3c2c: mov dword ptr [rsp],esi
0x3c2f: mov rcx,rsp
0x3c32: mov rdx,-0x1
0x3c39: mov rsi,rax
0x3c3c: mov qword ptr [rsp+0x4],0x0
0x3c45: mov qword ptr [rsp+0xc],0x4000000
0x3c4e: mov qword ptr [rsp+0x14],0x0
0x3c57: mov qword ptr [rsp+0x1c],0x0
0x3c60: mov qword ptr [rsp+0x24],0x0
0x3c69: mov qword ptr [rsp+0x2c],0x0
0x3c72: mov dword ptr [rsp+0x34],0x0
0x3c7a: call 0x34a0
0x3c7f: mov rcx,qword ptr [rsp+0x38]
0x3c84: xor rcx,qword ptr fs:0x28
0x3c8d: jne 0x3c99
0x3c8f: add rsp,0x48
0x3c93: ret 
0x3c94: call 0x1410
0x3c99: call 0x14d0
0x3c9e: nop 
0x3ca0: sub rsp,0x48
0x3ca4: mov r9,rcx
0x3ca7: mov rcx,qword ptr [rip+0x203582]
0x3cae: movdqa xmm0,[rip+0x20354a]
0x3cb6: mov rax,qword ptr fs:0x28
0x3cbf: mov qword ptr [rsp+0x38],rax
0x3cc4: xor eax,eax
0x3cc6: movaps [rsp],xmm0
0x3cca: test rsi,rsi
0x3ccd: mov qword ptr [rsp+0x30],rcx
0x3cd2: mov dword ptr [rsp],0xa
0x3cd9: movdqa xmm0,[rip+0x20352f]
0x3ce1: movaps [rsp+0x10],xmm0
0x3ce6: movdqa xmm0,[rip+0x203532]
0x3cee: movaps [rsp+0x20],xmm0
0x3cf3: je 0x3d27
0x3cf5: test rdx,rdx
0x3cf8: je 0x3d27
0x3cfa: mov qword ptr [rsp+0x28],rsi
0x3cff: mov qword ptr [rsp+0x30],rdx
0x3d04: mov rcx,rsp
0x3d07: mov rdx,r8
0x3d0a: mov rsi,r9
0x3d0d: call 0x34a0
0x3d12: mov rdi,qword ptr [rsp+0x38]
0x3d17: xor rdi,qword ptr fs:0x28
0x3d20: jne 0x3d2c
0x3d22: add rsp,0x48
0x3d26: ret 
0x3d27: call 0x1410
0x3d2c: call 0x14d0
0x3d31: nop dword ptr [rax+rax]
0x3d36: nop word ptr cs:[rax+rax]
0x3d40: mov r8,-0x1
0x3d47: jmp 0x3ca0
0x3d50: mov rcx,rdx
0x3d53: mov r8,-0x1
0x3d5a: mov rdx,rsi
0x3d5d: mov rsi,rdi
0x3d60: xor edi,edi
0x3d62: jmp 0x3ca0
0x3d70: mov r8,rcx
0x3d73: mov rcx,rdx
0x3d76: mov rdx,rsi
0x3d79: mov rsi,rdi
0x3d7c: xor edi,edi
0x3d7e: jmp 0x3ca0
0x3d90: lea rcx,[rip+0x203289]
0x3d97: jmp 0x34a0
0x3da0: lea rcx,[rip+0x203279]
0x3da7: mov rdx,rsi
0x3daa: mov rsi,rdi
0x3dad: xor edi,edi
0x3daf: jmp 0x34a0
0x3dc0: lea rcx,[rip+0x203259]
0x3dc7: mov rdx,-0x1
0x3dce: jmp 0x34a0
0x3f38: mov r8,rcx
0x3f3b: mov rcx,rdx
0x3f3e: lea rdx,[rip+0x18ef]
0x3f45: mov esi,0x1
0x3f4a: xor eax,eax
0x3f4c: call 0x1690
0x3f51: jmp 0x3e3c
0x414d: push r12
0x414f: push r15
0x4151: push r14
0x4153: mov r8,qword ptr [rsp+0x20]
0x4158: mov rcx,rbx
0x415b: mov rdx,rax
0x415e: mov rdi,rbp
0x4161: mov esi,0x1
0x4166: xor eax,eax
0x4168: call 0x1690
0x416d: add rsp,0x20
0x4171: add rsp,0x28
0x4175: pop rbx
0x4176: pop rbp
0x4177: pop r12
0x4179: pop r13
0x417b: pop r14
0x417d: pop r15
0x417f: ret 
0x41b9: push r12
0x41bb: push r15
0x41bd: push r14
0x41bf: mov r9,qword ptr [rsp+0x28]
0x41c4: jmp 0x4153
0x4220: xor r9d,r9d
0x4223: cmp qword ptr [r8],0x0
0x4227: je 0x423b
0x4229: nop dword ptr [rax]
0x4230: add r9,0x1
0x4234: cmp qword ptr [r8+r9*8],0x0
0x4239: jne 0x4230
0x423b: jmp 0x3e00
0x4240: sub rsp,0x68
0x4244: mov r10,r8
0x4247: xor r9d,r9d
0x424a: mov rax,qword ptr fs:0x28
0x4253: mov qword ptr [rsp+0x58],rax
0x4258: xor eax,eax
0x425a: mov r8,rsp
0x425d: nop dword ptr [rax]
0x4260: mov eax,dword ptr [r10]
0x4263: cmp eax,0x2f
0x4266: ja 0x42aa
0x4268: mov r11d,eax
0x426b: add r11,qword ptr [r10+0x10]
0x426f: add eax,0x8
0x4272: mov dword ptr [r10],eax
0x4275: mov rax,qword ptr [r11]
0x4278: test rax,rax
0x427b: mov qword ptr [r8+r9*8],rax
0x427f: je 0x428b
0x4281: add r9,0x1
0x4285: cmp r9,0xa
0x4289: jne 0x4260
0x428b: call 0x3e00
0x4290: mov rax,qword ptr [rsp+0x58]
0x4295: xor rax,qword ptr fs:0x28
0x429e: jne 0x42a5
0x42a0: add rsp,0x68
0x42a4: ret 
0x42a5: call 0x14d0
0x42aa: mov r11,qword ptr [r10+0x8]
0x42ae: lea rax,[r11+0x8]
0x42b2: mov qword ptr [r10+0x8],rax
0x42b6: jmp 0x4275
0x4380: call 0x14d0
0x438c: mov rax,rbx
0x438f: add rbx,0x8
0x4393: jmp 0x4346
0x43a0: push rbx
0x43a1: lea rsi,[rip+0x14da]
0x43a8: mov edx,0x5
0x43ad: xor edi,edi
0x43af: call 0x14a0
0x43b4: lea rdx,[rip+0x14dc]
0x43bb: mov rsi,rax
0x43be: mov edi,0x1
0x43c3: xor eax,eax
0x43c5: call 0x1610
0x43ca: lea rsi,[rip+0x14dc]
0x43d1: mov edx,0x5
0x43d6: xor edi,edi
0x43d8: call 0x14a0
0x43dd: lea rcx,[rip+0xe54]
0x43e4: lea rdx,[rip+0xc2c]
0x43eb: mov rsi,rax
0x43ee: mov edi,0x1
0x43f3: xor eax,eax
0x43f5: call 0x1610
0x43fa: mov rbx,qword ptr [rip+0x202c87]
0x4401: lea rsi,[rip+0x16d8]
0x4408: xor edi,edi
0x440a: mov edx,0x5
0x440f: call 0x14a0
0x4414: mov rsi,rbx
0x4417: mov rdi,rax
0x441a: pop rbx
0x441b: jmp 0x1570
0x4420: push rbx
0x4421: mov rbx,rdi
0x4424: call 0x15b0
0x4429: test rax,rax
0x442c: jne 0x4433
0x442e: test rbx,rbx
0x4431: jne 0x4435
0x4433: pop rbx
0x4434: ret 
0x4435: call 0x4670
0x443a: nop word ptr [rax+rax]
0x4440: mov rax,rdi
0x4443: mul rsi
0x4446: mov rdi,rax
0x4449: seto al
0x444c: test rdi,rdi
0x444f: js 0x445b
0x4451: movzx eax,al
0x4454: test rax,rax
0x4457: jne 0x445b
0x4459: jmp 0x4420
0x445b: sub rsp,0x8
0x445f: call 0x4670
0x4464: nop 
0x4466: nop word ptr cs:[rax+rax]
0x4470: jmp 0x4420
0x4489: test rdi,rdi
0x448c: jne 0x44a8
0x44a8: call 0x1400
0x44ad: xor eax,eax
0x44af: pop rbx
0x44b0: ret 
0x44b6: nop word ptr cs:[rax+rax]
0x44c0: mov rax,rsi
0x44c3: mul rdx
0x44c6: mov rsi,rax
0x44c9: seto al
0x44cc: test rsi,rsi
0x44cf: js 0x44db
0x44d1: movzx eax,al
0x44d4: test rax,rax
0x44d7: jne 0x44db
0x44d9: jmp 0x4480
0x44db: sub rsp,0x8
0x44df: call 0x4670
0x44e4: nop 
0x44e6: nop word ptr cs:[rax+rax]
0x44f0: test rdi,rdi
0x44f3: mov r9,rdx
0x44f6: mov rcx,qword ptr [rsi]
0x44f9: je 0x4530
0x44fb: xor edx,edx
0x44fd: movabsq rax,0x5555555555555554
0x4507: div r9
0x450a: cmp rax,rcx
0x450d: jbe 0x454b
0x450f: mov rax,rcx
0x4512: shr rax, 1
0x4515: lea rcx,[rax+rcx+0x1]
0x451a: mov qword ptr [rsi],rcx
0x451d: imul rcx,r9
0x4521: mov rsi,rcx
0x4524: jmp 0x4480
0x4530: test rcx,rcx
0x4533: je 0x4558
0x4535: mov rax,rcx
0x4538: mul r9
0x453b: seto dl
0x453e: test rax,rax
0x4541: movzx edx,dl
0x4544: js 0x454b
0x4546: test rdx,rdx
0x4549: je 0x451a
0x454b: sub rsp,0x8
0x454f: call 0x4670
0x4554: nop dword ptr [rax]
0x4558: xor edx,edx
0x455a: mov eax,0x80
0x455f: xor r8d,r8d
0x4562: div r9
0x4565: test rax,rax
0x4568: sete r8b
0x456c: lea rcx,[r8+rax]
0x4570: jmp 0x4535
0x4580: test rdi,rdi
0x4583: mov rax,qword ptr [rsi]
0x4586: je 0x45b0
0x4588: movabsq rdx,0x5555555555555553
0x4592: cmp rax,rdx
0x4595: ja 0x45c1
0x4597: mov rdx,rax
0x459a: shr rdx, 1
0x459d: lea rax,[rdx+rax+0x1]
0x45a2: mov qword ptr [rsi],rax
0x45a5: mov rsi,rax
0x45a8: jmp 0x4480
0x45b0: test rax,rax
0x45b3: mov edx,0x80
0x45b8: cmove rax,rdx
0x45bc: test rax,rax
0x45bf: jns 0x45a2
0x45c1: sub rsp,0x8
0x45c5: call 0x4670
0x45ca: nop word ptr [rax+rax]
0x45d0: push rbx
0x45d1: mov rbx,rdi
0x45d4: call 0x4420
0x45d9: mov rdx,rbx
0x45dc: xor esi,esi
0x45de: mov rdi,rax
0x45e1: pop rbx
0x45e2: jmp 0x1550
0x45f0: mov rax,rdi
0x45f3: sub rsp,0x8
0x45f7: mul rsi
0x45fa: seto dl
0x45fd: test rax,rax
0x4600: js 0x4619
0x4602: movzx edx,dl
0x4605: test rdx,rdx
0x4608: jne 0x4619
0x460a: call 0x1580
0x460f: test rax,rax
0x4612: je 0x4619
0x4614: add rsp,0x8
0x4618: ret 
0x4619: call 0x4670
0x461e: nop 
0x4620: push rbp
0x4621: push rbx
0x4622: mov rbp,rdi
0x4625: mov rdi,rsi
0x4628: mov rbx,rsi
0x462b: sub rsp,0x8
0x462f: call 0x4420
0x4634: add rsp,0x8
0x4638: mov rdx,rbx
0x463b: mov rsi,rbp
0x463e: pop rbx
0x463f: pop rbp
0x4640: mov rdi,rax
0x4643: jmp 0x1590
0x4650: push rbx
0x4651: mov rbx,rdi
0x4654: call 0x14c0
0x4659: mov rdi,rbx
0x465c: lea rsi,[rax+0x1]
0x4660: pop rbx
0x4661: jmp 0x4620
0x46a0: call 0x1410
0x46a5: nop word ptr cs:[rax+rax]
0x46af: nop 
0x4722: mov esi,dword ptr [r14]
0x4725: mov r8,rax
0x4728: mov eax,0x0
0x472d: lea rdx,[rip+0xbb8]
0x4734: mov rcx,r13
0x4737: cmp esi,0x16
0x473a: cmove esi,eax
0x473d: test ebx,ebx
0x473f: mov eax,0x1
0x4744: cmove ebx,eax
0x4747: xor eax,eax
0x4749: mov edi,ebx
0x474b: call 0x1620
0x4750: mov rbp,qword ptr [rsp]
0x47ab: call 0x14d0
0x4886: cmp eax,0x22
0x4889: mov ebp,0x1
0x488e: jne 0x48b8
0x48b2: nop word ptr [rax+rax]
0x49e0: movsxd rdi,edi
0x49e3: mov eax,ebp
0x49e5: add rcx,rdi
0x49e8: or eax,0x2
0x49eb: mov qword ptr [r15],rcx
0x49ee: cmp byte ptr [rcx],0x0
0x49f1: mov qword ptr [r14],rbx
0x49f4: cmovne ebp,eax
0x49f7: jmp 0x48bd
0x4a55: or ebp,r9d
0x4a58: jmp 0x49e0
0x4aec: mov rax,rbx
0x4aef: mul rsi
0x4af2: mov rbx,rax
0x4af5: jo 0x4b84
0x4afb: sub r8d,0x1
0x4aff: jne 0x4aec
0x4b01: jmp 0x4a55
0x4b60: call 0x14d0
0x4b65: lea rcx,[rip+0x1154]
0x4b6c: lea rsi,[rip+0x102d]
0x4b73: lea rdi,[rip+0x1046]
0x4b7a: mov edx,0x54
0x4b7f: call 0x1530
0x4b84: mov r9d,0x1
0x4b8a: or rbx,-0x1
0x4b8e: jmp 0x4afb
0x4c00: push r13
0x4c02: push r12
0x4c04: mov r13,rsi
0x4c07: push rbp
0x4c08: push rbx
0x4c09: mov rbx,rdi
0x4c0c: mov r12,rdx
0x4c0f: sub rsp,0x18
0x4c13: mov rax,qword ptr fs:0x28
0x4c1c: mov qword ptr [rsp+0x8],rax
0x4c21: xor eax,eax
0x4c23: lea rax,[rsp+0x4]
0x4c28: test rdi,rdi
0x4c2b: cmove rbx,rax
0x4c2f: mov rdi,rbx
0x4c32: call 0x14f0
0x4c37: cmp rax,-0x3
0x4c3b: mov rbp,rax
0x4c3e: jbe 0x4c60
0x4c40: test r12,r12
0x4c43: je 0x4c60
0x4c45: xor edi,edi
0x4c47: call 0x4d10
0x4c4c: test al,al
0x4c4e: jne 0x4c60
0x4c50: movzx eax,byte ptr [r13]
0x4c55: mov ebp,0x1
0x4c5a: mov dword ptr [rbx],eax
0x4c5c: nop dword ptr [rax]
0x4c60: mov rdx,qword ptr [rsp+0x8]
0x4c65: xor rdx,qword ptr fs:0x28
0x4c6e: mov rax,rbp
0x4c71: jne 0x4c7e
0x4c73: add rsp,0x18
0x4c77: pop rbx
0x4c78: pop rbp
0x4c79: pop r12
0x4c7b: pop r13
0x4c7d: ret 
0x4c7e: call 0x14d0
0x4c83: nop word ptr cs:[rax+rax]
0x4c8d: nop dword ptr [rax]
0x4c90: push r12
0x4c92: push rbp
0x4c93: mov rbp,rdi
0x4c96: push rbx
0x4c97: call 0x1450
0x4c9c: mov ebx,dword ptr [rbp]
0x4c9f: mov rdi,rbp
0x4ca2: mov r12,rax
0x4ca5: call 0x4db0
0x4caa: and ebx,0x20
0x4cad: test ebx,ebx
0x4caf: jne 0x4cc8
0x4cb1: test eax,eax
0x4cb3: je 0x4cbf
0x4cb5: test r12,r12
0x4cb8: mov eax,0xffffffff
0x4cbd: je 0x4cf8
0x4cbf: pop rbx
0x4cc0: pop rbp
0x4cc1: pop r12
0x4cc3: ret 
0x4cc8: test eax,eax
0x4cca: jne 0x4ce8
0x4ccc: call 0x1420
0x4cd1: mov dword ptr [rax],0x0
0x4cd7: mov eax,0xffffffff
0x4cdc: pop rbx
0x4cdd: pop rbp
0x4cde: pop r12
0x4ce0: ret 
0x4ce8: pop rbx
0x4ce9: mov eax,0xffffffff
0x4cee: pop rbp
0x4cef: pop r12
0x4cf1: ret 
0x4cf8: call 0x1420
0x4cfd: cmp dword ptr [rax],0x9
0x4d00: pop rbx
0x4d01: pop rbp
0x4d02: pop r12
0x4d04: setne al
0x4d07: movzx eax,al
0x4d0a: neg eax
0x4d0c: ret 
0x4d10: sub rsp,0x8
0x4d14: xor esi,esi
0x4d16: call 0x1600
0x4d1b: mov rdx,rax
0x4d1e: mov eax,0x1
0x4d23: test rdx,rdx
0x4d26: je 0x4d45
0x4d28: lea rdi,[rip+0xf9c]
0x4d2f: mov ecx,0x2
0x4d34: mov rsi,rdx
0x4d37: rep cmpsb [rsi],es:[rdi]
0x4d39: seta cl
0x4d3c: sbb cl,0x0
0x4d3f: xor eax,eax
0x4d41: test cl,cl
0x4d43: jne 0x4d50
0x4d45: add rsp,0x8
0x4d49: ret 
0x4d50: lea rdi,[rip+0xf76]
0x4d57: mov ecx,0x6
0x4d5c: mov rsi,rdx
0x4d5f: rep cmpsb [rsi],es:[rdi]
0x4d61: seta al
0x4d64: sbb al,0x0
0x4d66: test al,al
0x4d68: setne al
0x4d6b: add rsp,0x8
0x4d6f: ret 
0x4d70: sub rsp,0x8
0x4d74: mov edi,0xe
0x4d79: call 0x15d0
0x4d7e: test rax,rax
0x4d81: je 0x4da0
0x4d83: cmp byte ptr [rax],0x0
0x4d86: lea rdx,[rip+0xf46]
0x4d8d: cmove rax,rdx
0x4d91: add rsp,0x8
0x4d95: ret 
0x4da0: lea rax,[rip+0xf2c]
0x4da7: add rsp,0x8
0x4dab: ret 
0x4db0: push r12
0x4db2: push rbp
0x4db3: push rbx
0x4db4: mov rbx,rdi
0x4db7: call 0x15a0
0x4dbc: test eax,eax
0x4dbe: mov rdi,rbx
0x4dc1: js 0x4e17
0x4dc3: call 0x15e0
0x4dc8: test eax,eax
0x4dca: jne 0x4df8
0x4dcc: mov rdi,rbx
0x4dcf: call 0x4e30
0x4dd4: test eax,eax
0x4dd6: je 0x4e14
0x4dd8: call 0x1420
0x4ddd: mov r12d,dword ptr [rax]
0x4de0: mov rdi,rbx
0x4de3: mov rbp,rax
0x4de6: call 0x1470
0x4deb: test r12d,r12d
0x4dee: jne 0x4e20
0x4df0: pop rbx
0x4df1: pop rbp
0x4df2: pop r12
0x4df4: ret 
0x4df8: mov rdi,rbx
0x4dfb: call 0x15a0
0x4e00: xor esi,esi
0x4e02: mov edx,0x1
0x4e07: mov edi,eax
0x4e09: call 0x1520
0x4e0e: cmp rax,-0x1
0x4e12: jne 0x4dcc
0x4e14: mov rdi,rbx
0x4e17: pop rbx
0x4e18: pop rbp
0x4e19: pop r12
0x4e1b: jmp 0x1470
0x4e20: mov dword ptr [rbp],r12d
0x4e24: mov eax,0xffffffff
0x4e29: jmp 0x4df0
0x4e30: test rdi,rdi
0x4e33: push rbx
0x4e34: mov rbx,rdi
0x4e37: je 0x4e4a
0x4e39: call 0x15e0
0x4e3e: test eax,eax
0x4e40: je 0x4e4a
0x4e42: test dword ptr [rbx],0x100
0x4e48: jne 0x4e58
0x4e4a: mov rdi,rbx
0x4e4d: pop rbx
0x4e4e: jmp 0x15c0
0x4e58: mov rdi,rbx
0x4e5b: mov edx,0x1
0x4e60: xor esi,esi
0x4e62: call 0x4e70
0x4e67: mov rdi,rbx
0x4e6a: pop rbx
0x4e6b: jmp 0x15c0
0x4e70: mov rax,qword ptr [rdi+0x8]
0x4e74: cmp qword ptr [rdi+0x10],rax
0x4e78: je 0x4e80
0x4e7a: jmp 0x1630
0x4e80: mov rax,qword ptr [rdi+0x20]
0x4e84: cmp qword ptr [rdi+0x28],rax
0x4e88: jne 0x4e7a
0x4e8a: cmp qword ptr [rdi+0x48],0x0
0x4e8f: jne 0x4e7a
0x4e91: push r12
0x4e93: push rbp
0x4e94: mov r12d,edx
0x4e97: push rbx
0x4e98: mov rbp,rsi
0x4e9b: mov rbx,rdi
0x4e9e: call 0x15a0
0x4ea3: mov edx,r12d
0x4ea6: mov rsi,rbp
0x4ea9: mov edi,eax
0x4eab: call 0x1520
0x4eb0: cmp rax,-0x1
0x4eb4: je 0x4ec2
0x4eb6: and dword ptr [rbx],-0x11
0x4eb9: mov qword ptr [rbx+0x90],rax
0x4ec0: xor eax,eax
0x4ec2: pop rbx
0x4ec3: pop rbp
0x4ec4: pop r12
0x4ec6: ret 
0x4ed0: push r15
0x4ed2: push r14
0x4ed4: mov r15,rdx
0x4ed7: push r13
0x4ed9: push r12
0x4edb: lea r12,[rip+0x201c6e]
0x4ee2: push rbp
0x4ee3: lea rbp,[rip+0x201c6e]
0x4eea: push rbx
0x4eeb: mov r13d,edi
0x4eee: mov r14,rsi
0x4ef1: sub rbp,r12
0x4ef4: sub rsp,0x8
0x4ef8: sar rbp,0x3
0x4efc: call 0x13c0
0x4f01: test rbp,rbp
0x4f04: je 0x4f26
0x4f06: xor ebx,ebx
0x4f08: nop dword ptr [rax+rax]
0x4f10: mov rdx,r15
0x4f13: mov rsi,r14
0x4f16: mov edi,r13d
0x4f19: call qword ptr [r12+rbx*8]
0x4f1d: add rbx,0x1
0x4f21: cmp rbp,rbx
0x4f24: jne 0x4f10
0x4f26: add rsp,0x8
0x4f2a: pop rbx
0x4f2b: pop rbp
0x4f2c: pop r12
0x4f2e: pop r13
0x4f30: pop r14
0x4f32: pop r15
0x4f34: ret 
0x4f40: rep ret 
