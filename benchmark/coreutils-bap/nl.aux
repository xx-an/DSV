0x1888: sub rsp,0x8
0x188c: mov rax,qword ptr [rip+0x217745]
0x1893: test rax,rax
0x1896: je 0x189a
0x1898: call rax
0x189a: add rsp,0x8
0x189e: ret 
0x18a6: jmp qword ptr [rip+0x21752c]
0x1910: jmp qword ptr [rip+0x2174fa]
0x1930: jmp qword ptr [rip+0x2174ea]
0x1a90: jmp qword ptr [rip+0x21743a]
0x1c50: jmp qword ptr [rip+0x21735a]
0x1c80: jmp qword ptr [rip+0x217362]
0x1e39: nop dword ptr [rax]
0x1e7e: mov edx,0x5
0x1e83: mov r13,rax
0x1e86: lea rsi,[rip+0x12ec3]
0x1e8d: jmp 0x2015
0x1ec6: mov edx,0x5
0x1ecb: mov r13,rax
0x1ece: lea rsi,[rip+0x12ecb]
0x1ed5: jmp 0x2015
0x2006: lea rsi,[rip+0x12d6b]
0x200d: mov r13,rax
0x2010: mov edx,0x5
0x2015: xor edi,edi
0x2017: call 0x19b0
0x201c: mov rcx,r13
0x201f: mov rdx,rax
0x2022: xor esi,esi
0x2024: xor edi,edi
0x2026: xor eax,eax
0x2028: xor r13d,r13d
0x202b: call 0x1bb0
0x2030: jmp 0x1d10
0x22d2: mov edx,0x5
0x22d7: mov r13,rax
0x22da: lea rsi,[rip+0x12b2f]
0x22e1: jmp 0x2015
0x2304: nop word ptr cs:[rax+rax]
0x230e: nop 
0x233a: hlt 
0x233b: nop dword ptr [rax+rax]
0x2340: lea rdi,[rip+0x216d99]
0x2347: push rbp
0x2348: lea rax,[rip+0x216d91]
0x234f: cmp rax,rdi
0x2352: mov rbp,rsp
0x2355: je 0x2370
0x2357: mov rax,qword ptr [rip+0x216c6a]
0x235e: test rax,rax
0x2361: je 0x2370
0x2363: pop rbp
0x2364: jmp rax
0x2370: pop rbp
0x2371: ret 
0x2380: lea rdi,[rip+0x216d59]
0x2387: lea rsi,[rip+0x216d52]
0x238e: push rbp
0x238f: sub rsi,rdi
0x2392: mov rbp,rsp
0x2395: sar rsi,0x3
0x2399: mov rax,rsi
0x239c: shr rax,0x3f
0x23a0: add rsi,rax
0x23a3: sar rsi, 1
0x23a6: je 0x23c0
0x23a8: mov rax,qword ptr [rip+0x216c31]
0x23af: test rax,rax
0x23b2: je 0x23c0
0x23b4: pop rbp
0x23b5: jmp rax
0x23c0: pop rbp
0x23c1: ret 
0x23e1: push rbp
0x23e2: mov rbp,rsp
0x23e5: je 0x23f3
0x23e7: mov rdi,qword ptr [rip+0x216c1a]
0x23ee: call 0x1c80
0x23f3: call 0x2340
0x23f8: mov byte ptr [rip+0x216d29],0x1
0x23ff: pop rbp
0x2400: ret 
0x2410: push rbp
0x2411: mov rbp,rsp
0x2414: pop rbp
0x2415: jmp 0x2380
0x24d5: nop 
0x24d6: nop word ptr cs:[rax+rax]
0x2551: nop dword ptr [rax+rax]
0x2556: nop word ptr cs:[rax+rax]
0x2563: push rsi
0x2862: jmp 0x25c0
0x290e: mov rbx,rax
0x2911: call 0x18f0
0x2916: mov esi,dword ptr [rax]
0x2918: lea rdx,[rip+0x1254d]
0x291f: mov rcx,rbx
0x2922: xor eax,eax
0x2924: xor edi,edi
0x2926: call 0x1bb0
0x292b: add rsp,0x18
0x292f: xor eax,eax
0x2931: pop rbx
0x2932: pop rbp
0x2933: pop r12
0x2935: pop r13
0x2937: pop r14
0x2939: pop r15
0x293b: ret 
0x2968: nop dword ptr [rax+rax]
0x2de0: mov qword ptr [rip+0x2167a9],rdi
0x2de7: ret 
0x2df0: mov byte ptr [rip+0x216791],dil
0x2df7: ret 
0x2e00: push rbp
0x2e01: push rbx
0x2e02: sub rsp,0x8
0x2e06: mov rdi,qword ptr [rip+0x2162db]
0x2e0d: call 0x141e0
0x2e12: test eax,eax
0x2e14: je 0x2e2c
0x2e16: call 0x18f0
0x2e1b: cmp byte ptr [rip+0x216766],0x0
0x2e22: mov rbx,rax
0x2e25: je 0x2e43
0x2e27: cmp dword ptr [rax],0x20
0x2e2a: jne 0x2e43
0x2e2c: mov rdi,qword ptr [rip+0x2162ed]
0x2e33: call 0x141e0
0x2e38: test eax,eax
0x2e3a: jne 0x2e82
0x2e3c: add rsp,0x8
0x2e40: pop rbx
0x2e41: pop rbp
0x2e42: ret 
0x2e43: lea rsi,[rip+0x12012]
0x2e4a: xor edi,edi
0x2e4c: mov edx,0x5
0x2e51: call 0x19b0
0x2e56: mov rdi,qword ptr [rip+0x216733]
0x2e5d: mov rbp,rax
0x2e60: test rdi,rdi
0x2e63: je 0x2e8d
0x2e65: call 0x4b40
0x2e6a: mov esi,dword ptr [rbx]
0x2e6c: lea rdx,[rip+0x11ff5]
0x2e73: mov rcx,rax
0x2e76: mov r8,rbp
0x2e79: xor edi,edi
0x2e7b: xor eax,eax
0x2e7d: call 0x1bb0
0x2e82: mov edi,dword ptr [rip+0x2161e8]
0x2e88: call 0x1910
0x2e8d: mov esi,dword ptr [rbx]
0x2e8f: lea rdx,[rip+0x11fd6]
0x2e96: mov rcx,rax
0x2e99: xor edi,edi
0x2e9b: xor eax,eax
0x2e9d: call 0x1bb0
0x2ea2: jmp 0x2e82
0x2eb0: jmp 0x1a70
0x3020: mov rdi,qword ptr [rdi+0x10]
0x3024: jmp 0x18d0
0x30cf: nop 
0x30d0: push rbp
0x30d1: push rbx
0x30d2: mov rbp,rdi
0x30d5: mov ebx,esi
0x30d7: sub rsp,0x8
0x30db: call 0x142c0
0x30e0: movzx edx,byte ptr [rax]
0x30e3: and edx,-0x21
0x30e6: cmp dl,0x55
0x30e9: je 0x3160
0x30eb: cmp dl,0x47
0x30ee: je 0x3110
0x30f0: lea rax,[rip+0x11dcc]
0x30f7: lea rdx,[rip+0x11dc7]
0x30fe: cmp ebx,0x9
0x3101: cmovne rax,rdx
0x3105: add rsp,0x8
0x3109: pop rbx
0x310a: pop rbp
0x310b: ret 
0x3110: movzx edx,byte ptr [rax+0x1]
0x3114: and edx,-0x21
0x3117: cmp dl,0x42
0x311a: jne 0x30f0
0x311c: cmp byte ptr [rax+0x2],0x31
0x3120: jne 0x30f0
0x3122: cmp byte ptr [rax+0x3],0x38
0x3126: jne 0x30f0
0x3128: cmp byte ptr [rax+0x4],0x30
0x312c: jne 0x30f0
0x312e: cmp byte ptr [rax+0x5],0x33
0x3132: jne 0x30f0
0x3134: cmp byte ptr [rax+0x6],0x30
0x3138: jne 0x30f0
0x313a: cmp byte ptr [rax+0x7],0x0
0x313e: jne 0x30f0
0x3140: cmp byte ptr [rbp],0x60
0x3144: lea rax,[rip+0x11d71]
0x314b: lea rdx,[rip+0x11d6e]
0x3152: cmovne rax,rdx
0x3156: add rsp,0x8
0x315a: pop rbx
0x315b: pop rbp
0x315c: ret 
0x3160: movzx edx,byte ptr [rax+0x1]
0x3164: and edx,-0x21
0x3167: cmp dl,0x54
0x316a: jne 0x30f0
0x316c: movzx edx,byte ptr [rax+0x2]
0x3170: and edx,-0x21
0x3173: cmp dl,0x46
0x3176: jne 0x30f0
0x317c: cmp byte ptr [rax+0x3],0x2d
0x3180: jne 0x30f0
0x3186: cmp byte ptr [rax+0x4],0x38
0x318a: jne 0x30f0
0x3190: cmp byte ptr [rax+0x5],0x0
0x3194: jne 0x30f0
0x319a: cmp byte ptr [rbp],0x60
0x319e: lea rax,[rip+0x11d0f]
0x31a5: lea rdx,[rip+0x11d0c]
0x31ac: cmovne rax,rdx
0x31b0: add rsp,0x8
0x31b4: pop rbx
0x31b5: pop rbp
0x31b6: ret 
0x3293: xor r11d,r11d
0x3296: mov rax,rbp
0x3299: mov r8d,r12d
0x329c: mov rbp,r11
0x329f: mov r11,rax
0x32a2: nop word ptr [rax+rax]
0x32a8: cmp r11,rbp
0x32ab: setne r12b
0x32af: cmp r11,-0x1
0x32b3: jne 0x32c2
0x32b5: mov rax,qword ptr [rsp+0x10]
0x32ba: cmp byte ptr [rax+rbp],0x0
0x32be: setne r12b
0x32c2: test r12b,r12b
0x32c5: je 0x3920
0x32cb: cmp dword ptr [rsp+0x8],0x2
0x32d0: mov rdi,qword ptr [rsp+0x10]
0x32d5: lea r9,[rdi+rbp]
0x32d9: setne al
0x32dc: and al,byte ptr [rsp+0xd]
0x32e0: mov r10d,eax
0x32e3: je 0x3390
0x32e9: mov rax,qword ptr [rsp+0x18]
0x32ee: test rax,rax
0x32f1: je 0x3720
0x32f7: cmp r11,-0x1
0x32fb: lea rbx,[rbp+rax]
0x3300: jne 0x3330
0x3302: cmp rax,0x1
0x3306: jbe 0x3330
0x3308: mov byte ptr [rsp+0x38],r8b
0x330d: mov byte ptr [rsp+0x30],r10b
0x3312: mov qword ptr [rsp+0x28],r9
0x3317: call 0x19d0
0x331c: movzx r8d,byte ptr [rsp+0x38]
0x3322: movzx r10d,byte ptr [rsp+0x30]
0x3328: mov r11,rax
0x332b: mov r9,qword ptr [rsp+0x28]
0x3330: cmp rbx,r11
0x3333: mov byte ptr [rsp+0x28],r10b
0x3338: ja 0x38f0
0x333e: mov rdx,qword ptr [rsp+0x18]
0x3343: mov rsi,qword ptr [rsp+0x48]
0x3348: mov rdi,r9
0x334b: mov qword ptr [rsp+0x40],r11
0x3350: mov byte ptr [rsp+0x38],r8b
0x3355: mov qword ptr [rsp+0x30],r9
0x335a: call 0x1a80
0x335f: test eax,eax
0x3361: mov r9,qword ptr [rsp+0x30]
0x3366: movzx r8d,byte ptr [rsp+0x38]
0x336c: mov r11,qword ptr [rsp+0x40]
0x3371: jne 0x38f0
0x3377: cmp byte ptr [rsp+0xf],0x0
0x337c: movzx r10d,byte ptr [rsp+0x28]
0x3382: jne 0x4305
0x3388: nop dword ptr [rax+rax]
0x3390: movzx ebx,byte ptr [r9]
0x3394: cmp bl,0x7e
0x3397: ja 0x36b8
0x339d: lea rcx,[rip+0x11ba8]
0x33a4: movzx edx,bl
0x33a7: movsxd rax,dword ptr [rcx+rdx*4]
0x33ab: add rax,rcx
0x33ae: jmp rax
0x33e8: cmp byte ptr [rsp+0xd],0x1
0x33ed: jne 0x3502
0x33f3: test dl,dl
0x33f5: jne 0x3502
0x33fb: mov rsi,qword ptr [rsp+0x20]
0x3400: test rsi,rsi
0x3403: je 0x3419
0x3405: mov edx,ebx
0x3407: shr dl,0x5
0x340a: movzx edx,dl
0x340d: mov edx,dword ptr [rsi+rdx*4]
0x3410: btl edx,ebx
0x3413: jb 0x3563
0x3419: test r10b,r10b
0x341c: jne 0x3563
0x3422: xor eax,0x1
0x3425: add rbp,0x1
0x3429: and eax,r8d
0x342c: test al,al
0x342e: je 0x3450
0x3430: cmp r13,r15
0x3433: jbe 0x343a
0x3435: mov byte ptr [r14+r15],0x27
0x343a: lea rax,[r15+0x1]
0x343e: cmp r13,rax
0x3441: jbe 0x3449
0x3443: mov byte ptr [r14+r15+0x1],0x27
0x3449: add r15,0x2
0x344d: xor r8d,r8d
0x3450: cmp r15,r13
0x3453: jae 0x3459
0x3455: mov byte ptr [r14+r15],bl
0x3459: movzx edi,byte ptr [rsp+0xe]
0x345e: add r15,0x1
0x3462: mov eax,0x0
0x3467: test r12b,r12b
0x346a: cmove edi,eax
0x346d: mov byte ptr [rsp+0xe],dil
0x3472: jmp 0x32a8
0x3502: cmp byte ptr [rsp+0xf],0x0
0x3507: jne 0x33fb
0x350d: jmp 0x3419
0x3563: cmp dword ptr [rsp+0x8],0x2
0x3568: sete dl
0x356b: cmp byte ptr [rsp+0xf],0x0
0x3570: mov eax,edx
0x3572: jne 0x3dc8
0x3578: mov eax,r8d
0x357b: xor eax,0x1
0x357e: and al,dl
0x3580: je 0x35b1
0x3582: cmp r13,r15
0x3585: jbe 0x358c
0x3587: mov byte ptr [r14+r15],0x27
0x358c: lea rdx,[r15+0x1]
0x3590: cmp r13,rdx
0x3593: jbe 0x359b
0x3595: mov byte ptr [r14+r15+0x1],0x24
0x359b: lea rdx,[r15+0x2]
0x359f: cmp r13,rdx
0x35a2: jbe 0x35aa
0x35a4: mov byte ptr [r14+r15+0x2],0x27
0x35aa: add r15,0x3
0x35ae: mov r8d,eax
0x35b1: cmp r13,r15
0x35b4: jbe 0x35bb
0x35b6: mov byte ptr [r14+r15],0x5c
0x35bb: add r15,0x1
0x35bf: add rbp,0x1
0x35c3: jmp 0x3450
0x36b0: xor r10d,r10d
0x36b3: nop dword ptr [rax+rax]
0x36b8: cmp qword ptr [rsp+0x58],0x1
0x36be: jne 0x3a68
0x36c4: mov qword ptr [rsp+0x38],r11
0x36c9: mov byte ptr [rsp+0x30],r8b
0x36ce: mov byte ptr [rsp+0x28],r10b
0x36d3: call 0x1c70
0x36d8: mov rcx,qword ptr [rax]
0x36db: movzx edx,bl
0x36de: movzx r10d,byte ptr [rsp+0x28]
0x36e4: movzx r8d,byte ptr [rsp+0x30]
0x36ea: mov r11,qword ptr [rsp+0x38]
0x36ef: mov edi,0x1
0x36f4: movzx eax,word ptr [rcx+rdx*2]
0x36f8: and ax,0x4000
0x36fc: setne r12b
0x3700: sete al
0x3703: and al,byte ptr [rsp+0xd]
0x3707: test al,al
0x3709: jne 0x40a1
0x370f: cmp dword ptr [rsp+0x8],0x2
0x3714: sete dl
0x3717: jmp 0x33e8
0x3720: movzx ebx,byte ptr [r9]
0x3724: cmp bl,0x7e
0x3727: ja 0x36b0
0x3729: lea rcx,[rip+0x11a18]
0x3730: movzx edx,bl
0x3733: movsxd rax,dword ptr [rcx+rdx*4]
0x3737: add rax,rcx
0x373a: jmp rax
0x38f0: xor r10d,r10d
0x38f3: jmp 0x3390
0x3920: cmp dword ptr [rsp+0x8],0x2
0x3925: movzx ebx,byte ptr [rsp+0xf]
0x392a: mov r12d,r8d
0x392d: mov rbp,r11
0x3930: sete dl
0x3933: mov eax,ebx
0x3935: test r15,r15
0x3938: sete cl
0x393b: and eax,edx
0x393d: and al,cl
0x393f: jne 0x43a6
0x3945: mov eax,ebx
0x3947: xor eax,0x1
0x394a: and dl,al
0x394c: je 0x42bc
0x3952: cmp byte ptr [rsp+0x7c],0x0
0x3957: je 0x42ba
0x395d: cmp byte ptr [rsp+0xe],0x0
0x3962: jne 0x435d
0x3968: test r13,r13
0x396b: sete al
0x396e: cmp qword ptr [rsp+0x50],0x0
0x3974: setne dl
0x3977: and al,dl
0x3979: je 0x439c
0x397f: mov r13,qword ptr [rsp+0x50]
0x3984: lea rbx,[rip+0x1153a]
0x398b: mov byte ptr [r14],0x27
0x398f: mov dword ptr [rsp+0x8],0x2
0x3997: mov r15d,0x1
0x399d: mov qword ptr [rsp+0x18],0x1
0x39a6: mov byte ptr [rsp+0xf],0x0
0x39ab: mov qword ptr [rsp+0x48],rbx
0x39b0: mov byte ptr [rsp+0x7c],al
0x39b4: jmp 0x3293
0x3a68: lea rax,[rsp+0xa0]
0x3a70: cmp r11,-0x1
0x3a74: mov qword ptr [rsp+0xa0],0x0
0x3a80: mov qword ptr [rsp+0x28],rax
0x3a85: jne 0x3ab4
0x3a87: mov rdi,qword ptr [rsp+0x10]
0x3a8c: mov byte ptr [rsp+0x40],r8b
0x3a91: mov byte ptr [rsp+0x38],r10b
0x3a96: mov qword ptr [rsp+0x30],r9
0x3a9b: call 0x19d0
0x3aa0: movzx r8d,byte ptr [rsp+0x40]
0x3aa6: movzx r10d,byte ptr [rsp+0x38]
0x3aac: mov r11,rax
0x3aaf: mov r9,qword ptr [rsp+0x30]
0x3ab4: lea rax,[rsp+0x9c]
0x3abc: xor ecx,ecx
0x3abe: mov byte ptr [rsp+0x7e],bl
0x3ac2: mov byte ptr [rsp+0x7d],r8b
0x3ac7: mov rbx,rcx
0x3aca: mov qword ptr [rsp+0x88],r9
0x3ad2: mov qword ptr [rsp+0x38],rax
0x3ad7: mov byte ptr [rsp+0x7f],r10b
0x3adc: mov qword ptr [rsp+0x80],r15
0x3ae4: mov qword ptr [rsp+0x40],r14
0x3ae9: mov qword ptr [rsp+0x70],r13
0x3aee: mov qword ptr [rsp+0x30],r11
0x3af3: mov rax,qword ptr [rsp+0x10]
0x3af8: lea r14,[rbp+rbx]
0x3afd: mov rdx,qword ptr [rsp+0x30]
0x3b02: mov rcx,qword ptr [rsp+0x28]
0x3b07: mov rdi,qword ptr [rsp+0x38]
0x3b0c: lea r13,[rax+r14]
0x3b10: sub rdx,r14
0x3b13: mov rsi,r13
0x3b16: call 0x5f40
0x3b1b: test rax,rax
0x3b1e: mov r15,rax
0x3b21: je 0x3b71
0x3b23: cmp rax,-0x1
0x3b27: je 0x4145
0x3b2d: cmp rax,-0x2
0x3b31: je 0x40d1
0x3b37: cmp dword ptr [rsp+0x8],0x2
0x3b3c: sete al
0x3b3f: and al,byte ptr [rsp+0xf]
0x3b43: jne 0x3ce0
0x3b49: mov edi,dword ptr [rsp+0x9c]
0x3b50: call 0x1c50
0x3b55: mov rdi,qword ptr [rsp+0x28]
0x3b5a: test eax,eax
0x3b5c: mov eax,0x0
0x3b61: cmove r12d,eax
0x3b65: add rbx,r15
0x3b68: call 0x1c40
0x3b6d: test eax,eax
0x3b6f: je 0x3af3
0x3b71: mov edx,r12d
0x3b74: mov rdi,rbx
0x3b77: movzx r8d,byte ptr [rsp+0x7d]
0x3b7d: xor edx,0x1
0x3b80: movzx ebx,byte ptr [rsp+0x7e]
0x3b85: movzx r10d,byte ptr [rsp+0x7f]
0x3b8b: and dl,byte ptr [rsp+0xd]
0x3b8f: mov r15,qword ptr [rsp+0x80]
0x3b97: mov r14,qword ptr [rsp+0x40]
0x3b9c: mov r13,qword ptr [rsp+0x70]
0x3ba1: mov r11,qword ptr [rsp+0x30]
0x3ba6: cmp rdi,0x1
0x3baa: jbe 0x41ab
0x3bb0: mov rcx,rdi
0x3bb3: xor esi,esi
0x3bb5: movzx r9d,byte ptr [rsp+0xf]
0x3bbb: add rcx,rbp
0x3bbe: mov rdi,qword ptr [rsp+0x10]
0x3bc3: jmp 0x3c7e
0x3bd0: cmp dword ptr [rsp+0x8],0x2
0x3bd5: sete al
0x3bd8: test r9b,r9b
0x3bdb: jne 0x4090
0x3be1: mov esi,r8d
0x3be4: xor esi,0x1
0x3be7: and al,sil
0x3bea: je 0x3c1b
0x3bec: cmp r13,r15
0x3bef: jbe 0x3bf6
0x3bf1: mov byte ptr [r14+r15],0x27
0x3bf6: lea rsi,[r15+0x1]
0x3bfa: cmp r13,rsi
0x3bfd: jbe 0x3c05
0x3bff: mov byte ptr [r14+r15+0x1],0x24
0x3c05: lea rsi,[r15+0x2]
0x3c09: cmp r13,rsi
0x3c0c: jbe 0x3c14
0x3c0e: mov byte ptr [r14+r15+0x2],0x27
0x3c14: add r15,0x3
0x3c18: mov r8d,eax
0x3c1b: cmp r13,r15
0x3c1e: jbe 0x3c25
0x3c20: mov byte ptr [r14+r15],0x5c
0x3c25: lea rax,[r15+0x1]
0x3c29: cmp r13,rax
0x3c2c: jbe 0x3c3b
0x3c2e: mov eax,ebx
0x3c30: shr al,0x6
0x3c33: add eax,0x30
0x3c36: mov byte ptr [r14+r15+0x1],al
0x3c3b: lea rax,[r15+0x2]
0x3c3f: cmp r13,rax
0x3c42: jbe 0x3c54
0x3c44: mov eax,ebx
0x3c46: shr al,0x3
0x3c49: and eax,0x7
0x3c4c: add eax,0x30
0x3c4f: mov byte ptr [r14+r15+0x2],al
0x3c54: and ebx,0x7
0x3c57: add rbp,0x1
0x3c5b: add r15,0x3
0x3c5f: add ebx,0x30
0x3c62: cmp rbp,rcx
0x3c65: jae 0x3450
0x3c6b: mov esi,edx
0x3c6d: cmp r13,r15
0x3c70: jbe 0x3c76
0x3c72: mov byte ptr [r14+r15],bl
0x3c76: movzx ebx,byte ptr [rdi+rbp]
0x3c7a: add r15,0x1
0x3c7e: test dl,dl
0x3c80: jne 0x3bd0
0x3c86: mov eax,esi
0x3c88: xor eax,0x1
0x3c8b: and eax,r8d
0x3c8e: test r10b,r10b
0x3c91: je 0x3ca1
0x3c93: cmp r13,r15
0x3c96: jbe 0x3c9d
0x3c98: mov byte ptr [r14+r15],0x5c
0x3c9d: add r15,0x1
0x3ca1: add rbp,0x1
0x3ca5: cmp rbp,rcx
0x3ca8: jae 0x342c
0x3cae: test al,al
0x3cb0: je 0x40ae
0x3cb6: cmp r13,r15
0x3cb9: jbe 0x3cc0
0x3cbb: mov byte ptr [r14+r15],0x27
0x3cc0: lea rax,[r15+0x1]
0x3cc4: cmp r13,rax
0x3cc7: jbe 0x3ccf
0x3cc9: mov byte ptr [r14+r15+0x1],0x27
0x3ccf: add r15,0x2
0x3cd3: xor r10d,r10d
0x3cd6: xor r8d,r8d
0x3cd9: jmp 0x3c6d
0x3ce0: cmp r15,0x1
0x3ce4: je 0x3b49
0x3cea: mov rdi,qword ptr [rsp+0x10]
0x3cef: lea rcx,[rdi+r15]
0x3cf3: lea rdx,[rdi+r14+0x1]
0x3cf8: lea r8,[rcx+r14]
0x3cfc: jmp 0x3d0d
0x3d00: add rdx,0x1
0x3d04: cmp r8,rdx
0x3d07: je 0x3b49
0x3d0d: movzx ecx,byte ptr [rdx]
0x3d10: sub ecx,0x5b
0x3d13: cmp cl,0x21
0x3d16: ja 0x3d00
0x3d18: mov esi,0x1
0x3d1d: shl rsi,cl
0x3d20: mov rcx,rsi
0x3d23: movabsq rsi,0x20000002b
0x3d2d: test rcx,rsi
0x3d30: je 0x3d00
0x3d32: mov r14,qword ptr [rsp+0x40]
0x3d37: mov r13,qword ptr [rsp+0x70]
0x3d3c: mov rbp,qword ptr [rsp+0x30]
0x3d41: mov dword ptr [rsp+0x8],0x2
0x3d49: cmp byte ptr [rsp+0xd],0x0
0x3d4e: je 0x3d60
0x3d50: test al,al
0x3d52: mov eax,0x4
0x3d57: cmove eax,dword ptr [rsp+0x8]
0x3d5c: mov dword ptr [rsp+0x8],eax
0x3d60: sub rsp,0x8
0x3d64: mov rcx,rbp
0x3d67: mov rsi,r13
0x3d6a: push qword ptr [rsp+0x68]
0x3d6e: push qword ptr [rsp+0x78]
0x3d72: mov rdi,r14
0x3d75: push 0x0
0x3d77: mov r9d,dword ptr [rsp+0x98]
0x3d7f: mov r8d,dword ptr [rsp+0x28]
0x3d84: mov rdx,qword ptr [rsp+0x30]
0x3d89: and r9d,-0x3
0x3d8d: call 0x31c0
0x3d92: add rsp,0x20
0x3d96: mov r15,rax
0x3d99: mov rbx,qword ptr [rsp+0xa8]
0x3da1: xor rbx,qword ptr fs:0x28
0x3daa: mov rax,r15
0x3dad: jne 0x43b3
0x3db3: add rsp,0xb8
0x3dba: pop rbx
0x3dbb: pop rbp
0x3dbc: pop r12
0x3dbe: pop r13
0x3dc0: pop r14
0x3dc2: pop r15
0x3dc4: ret 
0x3dc8: mov rbp,r11
0x3dcb: jmp 0x3d49
0x3e31: test r13,r13
0x3e34: jne 0x43ca
0x3e3a: lea rax,[rip+0x11084]
0x3e41: mov qword ptr [rsp+0x50],0x0
0x3e4a: mov byte ptr [rsp+0xe],0x1
0x3e4f: mov byte ptr [rsp+0x7c],0x0
0x3e54: xor r12d,r12d
0x3e57: mov byte ptr [rsp+0xf],0x0
0x3e5c: mov qword ptr [rsp+0x18],0x1
0x3e65: mov qword ptr [rsp+0x48],rax
0x3e6a: mov r15d,0x1
0x3e70: mov dword ptr [rsp+0x8],0x2
0x3e78: jmp 0x3293
0x4090: movzx ebx,byte ptr [rsp+0xf]
0x4095: mov rbp,r11
0x4098: mov byte ptr [rsp+0xd],bl
0x409c: jmp 0x3d49
0x40a1: movzx edx,byte ptr [rsp+0xd]
0x40a6: xor r12d,r12d
0x40a9: jmp 0x3bb0
0x40ae: xor r10d,r10d
0x40b1: jmp 0x3c6d
0x40d1: mov r11,qword ptr [rsp+0x30]
0x40d6: mov rsi,r14
0x40d9: mov rcx,r13
0x40dc: mov rax,rbx
0x40df: mov rdi,rbx
0x40e2: movzx r8d,byte ptr [rsp+0x7d]
0x40e8: movzx ebx,byte ptr [rsp+0x7e]
0x40ed: mov r9,qword ptr [rsp+0x88]
0x40f5: cmp rsi,r11
0x40f8: movzx r10d,byte ptr [rsp+0x7f]
0x40fe: mov r15,qword ptr [rsp+0x80]
0x4106: mov r14,qword ptr [rsp+0x40]
0x410b: mov r13,qword ptr [rsp+0x70]
0x4110: jae 0x4138
0x4112: cmp byte ptr [rcx],0x0
0x4115: jne 0x4127
0x4117: jmp 0x4138
0x4120: cmp byte ptr [r9+rax],0x0
0x4125: je 0x4135
0x4127: add rax,0x1
0x412b: lea rdx,[rbp+rax]
0x4130: cmp r11,rdx
0x4133: ja 0x4120
0x4135: mov rdi,rax
0x4138: movzx edx,byte ptr [rsp+0xd]
0x413d: xor r12d,r12d
0x4140: jmp 0x3ba6
0x4145: mov rdi,rbx
0x4148: movzx r8d,byte ptr [rsp+0x7d]
0x414e: movzx ebx,byte ptr [rsp+0x7e]
0x4153: movzx r10d,byte ptr [rsp+0x7f]
0x4159: mov r15,qword ptr [rsp+0x80]
0x4161: xor r12d,r12d
0x4164: mov r14,qword ptr [rsp+0x40]
0x4169: mov r13,qword ptr [rsp+0x70]
0x416e: mov r11,qword ptr [rsp+0x30]
0x4173: movzx edx,byte ptr [rsp+0xd]
0x4178: jmp 0x3ba6
0x41ab: mov eax,edx
0x41ad: jmp 0x3707
0x42ba: mov eax,edx
0x42bc: mov rbx,qword ptr [rsp+0x48]
0x42c1: test rbx,rbx
0x42c4: je 0x42f2
0x42c6: test al,al
0x42c8: je 0x42f2
0x42ca: movzx ecx,byte ptr [rbx]
0x42cd: mov rax,rbx
0x42d0: test cl,cl
0x42d2: je 0x42f2
0x42d4: mov rdx,r15
0x42d7: sub rax,r15
0x42da: cmp r13,rdx
0x42dd: jbe 0x42e3
0x42df: mov byte ptr [r14+rdx],cl
0x42e3: add rdx,0x1
0x42e7: movzx ecx,byte ptr [rax+rdx]
0x42eb: test cl,cl
0x42ed: jne 0x42da
0x42ef: mov r15,rdx
0x42f2: cmp r13,r15
0x42f5: jbe 0x3d99
0x42fb: mov byte ptr [r14+r15],0x0
0x4300: jmp 0x3d99
0x4305: cmp dword ptr [rsp+0x8],0x2
0x430a: movzx ebx,byte ptr [rsp+0xf]
0x430f: mov rbp,r11
0x4312: sete al
0x4315: mov byte ptr [rsp+0xd],bl
0x4319: jmp 0x3d49
0x435d: sub rsp,0x8
0x4361: mov r8d,0x5
0x4367: mov rcx,r11
0x436a: push qword ptr [rsp+0x68]
0x436e: push qword ptr [rsp+0x78]
0x4372: mov rdi,r14
0x4375: push qword ptr [rsp+0x38]
0x4379: mov r9d,dword ptr [rsp+0x98]
0x4381: mov rdx,qword ptr [rsp+0x30]
0x4386: mov rsi,qword ptr [rsp+0x70]
0x438b: call 0x31c0
0x4390: add rsp,0x20
0x4394: mov r15,rax
0x4397: jmp 0x3d99
0x439c: movzx eax,byte ptr [rsp+0x7c]
0x43a1: jmp 0x42bc
0x43a6: mov dword ptr [rsp+0x8],0x2
0x43ae: jmp 0x3d49
0x43b3: call 0x19e0
0x43b8: mov byte ptr [rsp+0xd],0x0
0x43bd: jmp 0x3e31
0x43ca: mov byte ptr [rsp+0xe],0x1
0x43cf: xor eax,eax
0x43d1: xor r12d,r12d
0x43d4: mov qword ptr [rsp+0x50],0x0
0x43dd: jmp 0x3984
0x43f4: nop 
0x43f6: nop word ptr cs:[rax+rax]
0x44ec: add rsp,0x20
0x44f0: mov r11,qword ptr [rsp+0x10]
0x44f5: cmp r11,rax
0x44f8: ja 0x4561
0x44fa: lea rsi,[rax+0x1]
0x44fe: lea rax,[rip+0x21509b]
0x4505: cmp r12,rax
0x4508: mov qword ptr [rbx],rsi
0x450b: je 0x451f
0x450d: mov rdi,r12
0x4510: mov qword ptr [rsp+0x10],rsi
0x4515: call 0x18d0
0x451a: mov rsi,qword ptr [rsp+0x10]
0x451f: mov rdi,rsi
0x4522: mov qword ptr [rsp+0x10],rsi
0x4527: call 0x5380
0x452c: sub rsp,0x8
0x4530: mov qword ptr [rbx+0x8],rax
0x4534: mov r8d,dword ptr [rbp]
0x4538: push qword ptr [rbp+0x30]
0x453b: push qword ptr [rbp+0x28]
0x453e: mov rcx,r14
0x4541: push r15
0x4543: mov r9d,dword ptr [rsp+0x3c]
0x4548: mov rdi,rax
0x454b: mov rdx,qword ptr [rsp+0x28]
0x4550: mov rsi,qword ptr [rsp+0x30]
0x4555: mov r12,rax
0x4558: call 0x31c0
0x455d: add rsp,0x20
0x4561: mov eax,dword ptr [rsp+0x18]
0x4565: mov dword ptr [r13],eax
0x4569: add rsp,0x28
0x456d: mov rax,r12
0x4570: pop rbx
0x4571: pop rbp
0x4572: pop r12
0x4574: pop r13
0x4576: pop r14
0x4578: pop r15
0x457a: ret 
0x45a1: call 0x18e0
0x45a6: call 0x55d0
0x45ab: nop dword ptr [rax+rax]
0x45b0: push r12
0x45b2: push rbp
0x45b3: push rbx
0x45b4: mov rbx,rdi
0x45b7: call 0x18f0
0x45bc: mov r12d,dword ptr [rax]
0x45bf: mov rbp,rax
0x45c2: lea rax,[rip+0x2150d7]
0x45c9: test rbx,rbx
0x45cc: mov esi,0x38
0x45d1: cmove rbx,rax
0x45d5: mov rdi,rbx
0x45d8: call 0x5580
0x45dd: mov dword ptr [rbp],r12d
0x45e1: pop rbx
0x45e2: pop rbp
0x45e3: pop r12
0x45e5: ret 
0x45f0: lea rax,[rip+0x2150a9]
0x45f7: test rdi,rdi
0x45fa: cmove rdi,rax
0x45fe: mov eax,dword ptr [rdi]
0x4600: ret 
0x4610: lea rax,[rip+0x215089]
0x4617: test rdi,rdi
0x461a: cmove rdi,rax
0x461e: mov dword ptr [rdi],esi
0x4620: ret 
0x4630: lea rax,[rip+0x215069]
0x4637: test rdi,rdi
0x463a: mov ecx,esi
0x463c: cmove rdi,rax
0x4640: mov eax,esi
0x4642: and ecx,0x1f
0x4645: shr al,0x5
0x4648: movzx eax,al
0x464b: lea rdi,[rdi+rax*4+0x8]
0x4650: mov esi,dword ptr [rdi]
0x4652: mov eax,esi
0x4654: shr eax,cl
0x4656: xor edx,eax
0x4658: and eax,0x1
0x465b: and edx,0x1
0x465e: shl edx,cl
0x4660: xor edx,esi
0x4662: mov dword ptr [rdi],edx
0x4664: ret 
0x4670: lea rax,[rip+0x215029]
0x4677: test rdi,rdi
0x467a: cmove rdi,rax
0x467e: mov eax,dword ptr [rdi+0x4]
0x4681: mov dword ptr [rdi+0x4],esi
0x4684: ret 
0x4690: lea rax,[rip+0x215009]
0x4697: test rdi,rdi
0x469a: cmove rdi,rax
0x469e: test rsi,rsi
0x46a1: mov dword ptr [rdi],0xa
0x46a7: je 0x46b7
0x46a9: test rdx,rdx
0x46ac: je 0x46b7
0x46ae: mov qword ptr [rdi+0x28],rsi
0x46b2: mov qword ptr [rdi+0x30],rdx
0x46b6: ret 
0x46b7: sub rsp,0x8
0x46bb: call 0x18e0
0x46c0: push r15
0x46c2: push r14
0x46c4: lea rax,[rip+0x214fd5]
0x46cb: push r13
0x46cd: push r12
0x46cf: mov r13,rdi
0x46d2: push rbp
0x46d3: push rbx
0x46d4: mov rbx,r8
0x46d7: mov r14,rsi
0x46da: mov r15,rdx
0x46dd: sub rsp,0x18
0x46e1: test r8,r8
0x46e4: cmove rbx,rax
0x46e8: mov qword ptr [rsp+0x8],rcx
0x46ed: call 0x18f0
0x46f2: mov r12d,dword ptr [rax]
0x46f5: mov rbp,rax
0x46f8: lea rax,[rbx+0x8]
0x46fc: sub rsp,0x8
0x4700: mov r9d,dword ptr [rbx+0x4]
0x4704: push qword ptr [rbx+0x30]
0x4707: mov r8d,dword ptr [rbx]
0x470a: push qword ptr [rbx+0x28]
0x470d: mov rdx,r15
0x4710: push rax
0x4711: mov rcx,qword ptr [rsp+0x28]
0x4716: mov rsi,r14
0x4719: mov rdi,r13
0x471c: call 0x31c0
0x4721: mov dword ptr [rbp],r12d
0x4725: add rsp,0x38
0x4729: pop rbx
0x472a: pop rbp
0x472b: pop r12
0x472d: pop r13
0x472f: pop r14
0x4731: pop r15
0x4733: ret 
0x4740: push r15
0x4742: push r14
0x4744: lea rax,[rip+0x214f55]
0x474b: push r13
0x474d: push r12
0x474f: mov r12,rdx
0x4752: push rbp
0x4753: push rbx
0x4754: mov rbx,rcx
0x4757: mov r14,rdi
0x475a: mov r15,rsi
0x475d: sub rsp,0x38
0x4761: test rcx,rcx
0x4764: cmove rbx,rax
0x4768: xor ebp,ebp
0x476a: call 0x18f0
0x476f: test r12,r12
0x4772: mov r13,rax
0x4775: mov eax,dword ptr [rax]
0x4777: sete bpl
0x477b: or ebp,dword ptr [rbx+0x4]
0x477e: lea r10,[rbx+0x8]
0x4782: sub rsp,0x8
0x4786: mov r8d,dword ptr [rbx]
0x4789: mov rcx,r15
0x478c: mov dword ptr [rsp+0x14],eax
0x4790: push qword ptr [rbx+0x30]
0x4793: mov rdx,r14
0x4796: push qword ptr [rbx+0x28]
0x4799: push r10
0x479b: xor esi,esi
0x479d: mov r9d,ebp
0x47a0: xor edi,edi
0x47a2: mov qword ptr [rsp+0x40],r10
0x47a7: call 0x31c0
0x47ac: lea rsi,[rax+0x1]
0x47b0: mov qword ptr [rsp+0x48],rax
0x47b5: add rsp,0x20
0x47b9: mov rdi,rsi
0x47bc: mov qword ptr [rsp+0x18],rsi
0x47c1: call 0x5380
0x47c6: mov qword ptr [rsp+0x10],rax
0x47cb: sub rsp,0x8
0x47cf: push qword ptr [rbx+0x30]
0x47d2: push qword ptr [rbx+0x28]
0x47d5: mov r10,qword ptr [rsp+0x38]
0x47da: mov r9d,ebp
0x47dd: mov r8d,dword ptr [rbx]
0x47e0: mov rcx,r15
0x47e3: mov rdx,r14
0x47e6: mov rdi,rax
0x47e9: push r10
0x47eb: mov rsi,qword ptr [rsp+0x38]
0x47f0: call 0x31c0
0x47f5: mov eax,dword ptr [rsp+0x2c]
0x47f9: add rsp,0x20
0x47fd: test r12,r12
0x4800: mov dword ptr [r13],eax
0x4804: je 0x480f
0x4806: mov r11,qword ptr [rsp+0x28]
0x480b: mov qword ptr [r12],r11
0x480f: mov rax,qword ptr [rsp+0x10]
0x4814: add rsp,0x38
0x4818: pop rbx
0x4819: pop rbp
0x481a: pop r12
0x481c: pop r13
0x481e: pop r14
0x4820: pop r15
0x4822: ret 
0x4830: mov rcx,rdx
0x4833: xor edx,edx
0x4835: jmp 0x4740
0x4840: mov eax,dword ptr [rip+0x214872]
0x4846: push r12
0x4848: mov r12,qword ptr [rip+0x214871]
0x484f: push rbp
0x4850: push rbx
0x4851: cmp eax,0x1
0x4854: jle 0x4881
0x4856: sub eax,0x2
0x4859: lea rbx,[r12+0x18]
0x485e: shl rax,0x4
0x4862: lea rbp,[r12+rax+0x28]
0x4867: nop word ptr [rax+rax]
0x4870: mov rdi,qword ptr [rbx]
0x4873: add rbx,0x10
0x4877: call 0x18d0
0x487c: cmp rbx,rbp
0x487f: jne 0x4870
0x4881: mov rdi,qword ptr [r12+0x8]
0x4886: lea rbx,[rip+0x214d13]
0x488d: cmp rdi,rbx
0x4890: je 0x48a9
0x4892: call 0x18d0
0x4897: mov qword ptr [rip+0x21482e],0x100
0x48a2: mov qword ptr [rip+0x21482f],rbx
0x48a9: lea rbx,[rip+0x214820]
0x48b0: cmp r12,rbx
0x48b3: je 0x48c4
0x48b5: mov rdi,r12
0x48b8: call 0x18d0
0x48bd: mov qword ptr [rip+0x2147fc],rbx
0x48c4: pop rbx
0x48c5: mov dword ptr [rip+0x2147e9],0x1
0x48cf: pop rbp
0x48d0: pop r12
0x48d2: ret 
0x48e0: lea rcx,[rip+0x214db9]
0x48e7: mov rdx,-0x1
0x48ee: jmp 0x4400
0x4900: lea rcx,[rip+0x214d99]
0x4907: jmp 0x4400
0x4910: lea rcx,[rip+0x214d89]
0x4917: mov rsi,rdi
0x491a: mov rdx,-0x1
0x4921: xor edi,edi
0x4923: jmp 0x4400
0x4930: lea rcx,[rip+0x214d69]
0x4937: mov rdx,rsi
0x493a: mov rsi,rdi
0x493d: xor edi,edi
0x493f: jmp 0x4400
0x4950: sub rsp,0x48
0x4954: mov rax,rdx
0x4957: mov rdx,qword ptr fs:0x28
0x4960: mov qword ptr [rsp+0x38],rdx
0x4965: xor edx,edx
0x4967: cmp esi,0xa
0x496a: je 0x49d4
0x496c: mov dword ptr [rsp],esi
0x496f: mov rcx,rsp
0x4972: mov rdx,-0x1
0x4979: mov rsi,rax
0x497c: mov qword ptr [rsp+0x4],0x0
0x4985: mov qword ptr [rsp+0xc],0x0
0x498e: mov qword ptr [rsp+0x14],0x0
0x4997: mov qword ptr [rsp+0x1c],0x0
0x49a0: mov qword ptr [rsp+0x24],0x0
0x49a9: mov qword ptr [rsp+0x2c],0x0
0x49b2: mov dword ptr [rsp+0x34],0x0
0x49ba: call 0x4400
0x49bf: mov rcx,qword ptr [rsp+0x38]
0x49c4: xor rcx,qword ptr fs:0x28
0x49cd: jne 0x49d9
0x49cf: add rsp,0x48
0x49d3: ret 
0x49d4: call 0x18e0
0x49d9: call 0x19e0
0x49de: nop 
0x49e0: sub rsp,0x48
0x49e4: mov rax,rdx
0x49e7: mov rdx,rcx
0x49ea: mov rcx,qword ptr fs:0x28
0x49f3: mov qword ptr [rsp+0x38],rcx
0x49f8: xor ecx,ecx
0x49fa: cmp esi,0xa
0x49fd: je 0x4a60
0x49ff: mov dword ptr [rsp],esi
0x4a02: mov rcx,rsp
0x4a05: mov rsi,rax
0x4a08: mov qword ptr [rsp+0x4],0x0
0x4a11: mov qword ptr [rsp+0xc],0x0
0x4a1a: mov qword ptr [rsp+0x14],0x0
0x4a23: mov qword ptr [rsp+0x1c],0x0
0x4a2c: mov qword ptr [rsp+0x24],0x0
0x4a35: mov qword ptr [rsp+0x2c],0x0
0x4a3e: mov dword ptr [rsp+0x34],0x0
0x4a46: call 0x4400
0x4a4b: mov rdx,qword ptr [rsp+0x38]
0x4a50: xor rdx,qword ptr fs:0x28
0x4a59: jne 0x4a65
0x4a5b: add rsp,0x48
0x4a5f: ret 
0x4a60: call 0x18e0
0x4a65: call 0x19e0
0x4a6a: nop word ptr [rax+rax]
0x4a70: mov rdx,rsi
0x4a73: mov esi,edi
0x4a75: xor edi,edi
0x4a77: jmp 0x4950
0x4a80: mov rcx,rdx
0x4a83: mov rdx,rsi
0x4a86: mov esi,edi
0x4a88: xor edi,edi
0x4a8a: jmp 0x49e0
0x4a90: sub rsp,0x48
0x4a94: mov ecx,edx
0x4a96: mov rax,qword ptr fs:0x28
0x4a9f: mov qword ptr [rsp+0x38],rax
0x4aa4: xor eax,eax
0x4aa6: mov rax,qword ptr [rip+0x214c23]
0x4aad: mov r8,rsp
0x4ab0: and ecx,0x1f
0x4ab3: movdqa xmm0,[rip+0x214be5]
0x4abb: mov qword ptr [rsp+0x30],rax
0x4ac0: mov eax,edx
0x4ac2: movaps [rsp],xmm0
0x4ac6: shr al,0x5
0x4ac9: movzx eax,al
0x4acc: lea r9,[r8+rax*4+0x8]
0x4ad1: movdqa xmm0,[rip+0x214bd7]
0x4ad9: movaps [rsp+0x10],xmm0
0x4ade: movdqa xmm0,[rip+0x214bda]
0x4ae6: movaps [rsp+0x20],xmm0
0x4aeb: mov edx,dword ptr [r9]
0x4aee: mov eax,edx
0x4af0: shr eax,cl
0x4af2: not eax
0x4af4: and eax,0x1
0x4af7: shl eax,cl
0x4af9: mov rcx,r8
0x4afc: xor eax,edx
0x4afe: mov rdx,rsi
0x4b01: mov rsi,rdi
0x4b04: mov dword ptr [r9],eax
0x4b07: xor edi,edi
0x4b09: call 0x4400
0x4b0e: mov rsi,qword ptr [rsp+0x38]
0x4b13: xor rsi,qword ptr fs:0x28
0x4b1c: jne 0x4b23
0x4b1e: add rsp,0x48
0x4b22: ret 
0x4b23: call 0x19e0
0x4b28: nop dword ptr [rax+rax]
0x4b30: movsx edx,sil
0x4b34: mov rsi,-0x1
0x4b3b: jmp 0x4a90
0x4b40: mov edx,0x3a
0x4b45: mov rsi,-0x1
0x4b4c: jmp 0x4a90
0x4b60: mov edx,0x3a
0x4b65: jmp 0x4a90
0x4bdf: mov rcx,qword ptr [rsp+0x38]
0x4be4: xor rcx,qword ptr fs:0x28
0x4bed: jne 0x4bf9
0x4bef: add rsp,0x48
0x4bf3: ret 
0x4bf4: call 0x18e0
0x4bf9: call 0x19e0
0x4bfe: nop 
0x4c00: sub rsp,0x48
0x4c04: mov r9,rcx
0x4c07: mov rcx,qword ptr [rip+0x214ac2]
0x4c0e: movdqa xmm0,[rip+0x214a8a]
0x4c16: mov rax,qword ptr fs:0x28
0x4c1f: mov qword ptr [rsp+0x38],rax
0x4c24: xor eax,eax
0x4c26: movaps [rsp],xmm0
0x4c2a: test rsi,rsi
0x4c2d: mov qword ptr [rsp+0x30],rcx
0x4c32: mov dword ptr [rsp],0xa
0x4c39: movdqa xmm0,[rip+0x214a6f]
0x4c41: movaps [rsp+0x10],xmm0
0x4c46: movdqa xmm0,[rip+0x214a72]
0x4c4e: movaps [rsp+0x20],xmm0
0x4c53: je 0x4c87
0x4c55: test rdx,rdx
0x4c58: je 0x4c87
0x4c5a: mov qword ptr [rsp+0x28],rsi
0x4c5f: mov qword ptr [rsp+0x30],rdx
0x4c64: mov rcx,rsp
0x4c67: mov rdx,r8
0x4c6a: mov rsi,r9
0x4c6d: call 0x4400
0x4c72: mov rdi,qword ptr [rsp+0x38]
0x4c77: xor rdi,qword ptr fs:0x28
0x4c80: jne 0x4c8c
0x4c82: add rsp,0x48
0x4c86: ret 
0x4c87: call 0x18e0
0x4c8c: call 0x19e0
0x4c91: nop dword ptr [rax+rax]
0x4c96: nop word ptr cs:[rax+rax]
0x4ca0: mov r8,-0x1
0x4ca7: jmp 0x4c00
0x4cb0: mov rcx,rdx
0x4cb3: mov r8,-0x1
0x4cba: mov rdx,rsi
0x4cbd: mov rsi,rdi
0x4cc0: xor edi,edi
0x4cc2: jmp 0x4c00
0x4cd0: mov r8,rcx
0x4cd3: mov rcx,rdx
0x4cd6: mov rdx,rsi
0x4cd9: mov rsi,rdi
0x4cdc: xor edi,edi
0x4cde: jmp 0x4c00
0x4cf0: lea rcx,[rip+0x214389]
0x4cf7: jmp 0x4400
0x4d00: lea rcx,[rip+0x214379]
0x4d07: mov rdx,rsi
0x4d0a: mov rsi,rdi
0x4d0d: xor edi,edi
0x4d0f: jmp 0x4400
0x4d20: lea rcx,[rip+0x214359]
0x4d27: mov rdx,-0x1
0x4d2e: jmp 0x4400
0x4e98: mov r8,rcx
0x4e9b: mov rcx,rdx
0x4e9e: lea rdx,[rip+0x104ef]
0x4ea5: mov esi,0x1
0x4eaa: xor eax,eax
0x4eac: call 0x1c30
0x4eb1: jmp 0x4d9c
0x50ad: push r12
0x50af: push r15
0x50b1: push r14
0x50b3: mov r8,qword ptr [rsp+0x20]
0x50b8: mov rcx,rbx
0x50bb: mov rdx,rax
0x50be: mov rdi,rbp
0x50c1: mov esi,0x1
0x50c6: xor eax,eax
0x50c8: call 0x1c30
0x50cd: add rsp,0x20
0x50d1: add rsp,0x28
0x50d5: pop rbx
0x50d6: pop rbp
0x50d7: pop r12
0x50d9: pop r13
0x50db: pop r14
0x50dd: pop r15
0x50df: ret 
0x5119: push r12
0x511b: push r15
0x511d: push r14
0x511f: mov r9,qword ptr [rsp+0x28]
0x5124: jmp 0x50b3
0x5180: xor r9d,r9d
0x5183: cmp qword ptr [r8],0x0
0x5187: je 0x519b
0x5189: nop dword ptr [rax]
0x5190: add r9,0x1
0x5194: cmp qword ptr [r8+r9*8],0x0
0x5199: jne 0x5190
0x519b: jmp 0x4d60
0x51a0: sub rsp,0x68
0x51a4: mov r10,r8
0x51a7: xor r9d,r9d
0x51aa: mov rax,qword ptr fs:0x28
0x51b3: mov qword ptr [rsp+0x58],rax
0x51b8: xor eax,eax
0x51ba: mov r8,rsp
0x51bd: nop dword ptr [rax]
0x51c0: mov eax,dword ptr [r10]
0x51c3: cmp eax,0x2f
0x51c6: ja 0x520a
0x51c8: mov r11d,eax
0x51cb: add r11,qword ptr [r10+0x10]
0x51cf: add eax,0x8
0x51d2: mov dword ptr [r10],eax
0x51d5: mov rax,qword ptr [r11]
0x51d8: test rax,rax
0x51db: mov qword ptr [r8+r9*8],rax
0x51df: je 0x51eb
0x51e1: add r9,0x1
0x51e5: cmp r9,0xa
0x51e9: jne 0x51c0
0x51eb: call 0x4d60
0x51f0: mov rax,qword ptr [rsp+0x58]
0x51f5: xor rax,qword ptr fs:0x28
0x51fe: jne 0x5205
0x5200: add rsp,0x68
0x5204: ret 
0x5205: call 0x19e0
0x520a: mov r11,qword ptr [r10+0x8]
0x520e: lea rax,[r11+0x8]
0x5212: mov qword ptr [r10+0x8],rax
0x5216: jmp 0x51d5
0x52e0: call 0x19e0
0x52ec: mov rax,rbx
0x52ef: add rbx,0x8
0x52f3: jmp 0x52a6
0x5300: push rbx
0x5301: lea rsi,[rip+0x100da]
0x5308: mov edx,0x5
0x530d: xor edi,edi
0x530f: call 0x19b0
0x5314: lea rdx,[rip+0x100dc]
0x531b: mov rsi,rax
0x531e: mov edi,0x1
0x5323: xor eax,eax
0x5325: call 0x1b80
0x532a: lea rsi,[rip+0x100dc]
0x5331: mov edx,0x5
0x5336: xor edi,edi
0x5338: call 0x19b0
0x533d: lea rcx,[rip+0xf964]
0x5344: lea rdx,[rip+0xf0e7]
0x534b: mov rsi,rax
0x534e: mov edi,0x1
0x5353: xor eax,eax
0x5355: call 0x1b80
0x535a: mov rbx,qword ptr [rip+0x213d87]
0x5361: lea rsi,[rip+0x102d8]
0x5368: xor edi,edi
0x536a: mov edx,0x5
0x536f: call 0x19b0
0x5374: mov rsi,rbx
0x5377: mov rdi,rax
0x537a: pop rbx
0x537b: jmp 0x1aa0
0x539a: nop word ptr [rax+rax]
0x53a0: mov rax,rdi
0x53a3: mul rsi
0x53a6: mov rdi,rax
0x53a9: seto al
0x53ac: test rdi,rdi
0x53af: js 0x53bb
0x53b1: movzx eax,al
0x53b4: test rax,rax
0x53b7: jne 0x53bb
0x53b9: jmp 0x5380
0x53bb: sub rsp,0x8
0x53bf: call 0x55d0
0x53c4: nop 
0x53c6: nop word ptr cs:[rax+rax]
0x53d0: jmp 0x5380
0x5416: nop word ptr cs:[rax+rax]
0x5420: mov rax,rsi
0x5423: mul rdx
0x5426: mov rsi,rax
0x5429: seto al
0x542c: test rsi,rsi
0x542f: js 0x543b
0x5431: movzx eax,al
0x5434: test rax,rax
0x5437: jne 0x543b
0x5439: jmp 0x53e0
0x543b: sub rsp,0x8
0x543f: call 0x55d0
0x5444: nop 
0x5446: nop word ptr cs:[rax+rax]
0x5450: test rdi,rdi
0x5453: mov r9,rdx
0x5456: mov rcx,qword ptr [rsi]
0x5459: je 0x5490
0x545b: xor edx,edx
0x545d: movabsq rax,0x5555555555555554
0x5467: div r9
0x546a: cmp rax,rcx
0x546d: jbe 0x54ab
0x546f: mov rax,rcx
0x5472: shr rax, 1
0x5475: lea rcx,[rax+rcx+0x1]
0x547a: mov qword ptr [rsi],rcx
0x547d: imul rcx,r9
0x5481: mov rsi,rcx
0x5484: jmp 0x53e0
0x5490: test rcx,rcx
0x5493: je 0x54b8
0x5495: mov rax,rcx
0x5498: mul r9
0x549b: seto dl
0x549e: test rax,rax
0x54a1: movzx edx,dl
0x54a4: js 0x54ab
0x54a6: test rdx,rdx
0x54a9: je 0x547a
0x54ab: sub rsp,0x8
0x54af: call 0x55d0
0x54b4: nop dword ptr [rax]
0x54b8: xor edx,edx
0x54ba: mov eax,0x80
0x54bf: xor r8d,r8d
0x54c2: div r9
0x54c5: test rax,rax
0x54c8: sete r8b
0x54cc: lea rcx,[r8+rax]
0x54d0: jmp 0x5495
0x552a: nop word ptr [rax+rax]
0x5530: push rbx
0x5531: mov rbx,rdi
0x5534: call 0x5380
0x5539: mov rdx,rbx
0x553c: xor esi,esi
0x553e: mov rdi,rax
0x5541: pop rbx
0x5542: jmp 0x1a60
0x5550: mov rax,rdi
0x5553: sub rsp,0x8
0x5557: mul rsi
0x555a: seto dl
0x555d: test rax,rax
0x5560: js 0x5579
0x5562: movzx edx,dl
0x5565: test rdx,rdx
0x5568: jne 0x5579
0x556a: call 0x1ab0
0x556f: test rax,rax
0x5572: je 0x5579
0x5574: add rsp,0x8
0x5578: ret 
0x5579: call 0x55d0
0x557e: nop 
0x5580: push rbp
0x5581: push rbx
0x5582: mov rbp,rdi
0x5585: mov rdi,rsi
0x5588: mov rbx,rsi
0x558b: sub rsp,0x8
0x558f: call 0x5380
0x5594: add rsp,0x8
0x5598: mov rdx,rbx
0x559b: mov rsi,rbp
0x559e: pop rbx
0x559f: pop rbp
0x55a0: mov rdi,rax
0x55a3: jmp 0x1ad0
0x55b0: push rbx
0x55b1: mov rbx,rdi
0x55b4: call 0x19d0
0x55b9: mov rdi,rbx
0x55bc: lea rsi,[rax+0x1]
0x55c0: pop rbx
0x55c1: jmp 0x5580
0x5600: call 0x18e0
0x5605: nop word ptr cs:[rax+rax]
0x560f: nop 
0x5684: mov esi,dword ptr [r14]
0x5687: mov r8,rax
0x568a: mov eax,0x0
0x568f: lea rdx,[rip+0xf7d2]
0x5696: mov rcx,r13
0x5699: cmp esi,0x16
0x569c: cmove esi,eax
0x569f: test ebx,ebx
0x56a1: mov eax,0x1
0x56a6: cmove ebx,eax
0x56a9: xor eax,eax
0x56ab: mov edi,ebx
0x56ad: call 0x1bb0
0x56b2: mov rbp,qword ptr [rsp]
0x571c: call 0x19e0
0x5721: nop dword ptr [rax+rax]
0x5726: nop word ptr cs:[rax+rax]
0x5810: cmp eax,0x22
0x5813: mov r12d,0x4
0x5819: jne 0x57e9
0x581b: mov r12d,0x1
0x5821: jmp 0x57d4
0x5cc0: mov r12d,0x4
0x5cc6: jmp 0x57e9
0x5def: lea rcx,[rip+0xfa2a]
0x5df6: lea rsi,[rip+0xf903]
0x5dfd: lea rdi,[rip+0xf91c]
0x5e04: mov edx,0x54
0x5e09: call 0x1a50
0x5e0e: call 0x19e0
0x5e13: nop word ptr cs:[rax+rax]
0x5e1d: nop dword ptr [rax]
0x5fbe: call 0x19e0
0x5fc3: nop word ptr cs:[rax+rax]
0x5fcd: nop dword ptr [rax]
0x5fd0: mov rax,qword ptr [rsi+0x48]
0x5fd4: cmp qword ptr [rsi+0x68],rax
0x5fd8: jle 0x6030
0x5fda: mov r8,qword ptr [rsi+0x8]
0x5fde: cmp dword ptr [rsi+0x90],0x1
0x5fe5: movzx ecx,byte ptr [r8+rax]
0x5fea: mov byte ptr [rdi],cl
0x5fec: jle 0x6003
0x5fee: cmp rax,qword ptr [rsi+0x30]
0x5ff2: je 0x6003
0x5ff4: mov r9,qword ptr [rsi+0x10]
0x5ff8: cmp dword ptr [r9+rax*4],-0x1
0x5ffd: je 0x607f
0x6003: cmp cl,0x5c
0x6006: je 0x6070
0x6008: cmp cl,0x5b
0x600b: je 0x6040
0x600d: cmp cl,0x5d
0x6010: je 0x60b0
0x6016: cmp cl,0x5e
0x6019: je 0x60a0
0x601f: cmp cl,0x2d
0x6022: jne 0x607f
0x6024: mov byte ptr [rdi+0x8],0x16
0x6028: mov eax,0x1
0x602d: ret 
0x6030: mov byte ptr [rdi+0x8],0x2
0x6034: xor eax,eax
0x6036: ret 
0x6040: lea rcx,[rax+0x1]
0x6044: cmp rcx,qword ptr [rsi+0x58]
0x6048: jge 0x6090
0x604a: movzx eax,byte ptr [r8+rax+0x1]
0x6050: cmp al,0x3a
0x6052: mov byte ptr [rdi],al
0x6054: je 0x60f0
0x605a: cmp al,0x3d
0x605c: je 0x60e0
0x6062: cmp al,0x2e
0x6064: jne 0x6090
0x6066: mov byte ptr [rdi+0x8],0x1a
0x606a: mov eax,0x2
0x606f: ret 
0x6070: and edx,0x1
0x6073: je 0x607f
0x6075: lea rdx,[rax+0x1]
0x6079: cmp rdx,qword ptr [rsi+0x58]
0x607d: jl 0x60c0
0x607f: mov byte ptr [rdi+0x8],0x1
0x6083: mov eax,0x1
0x6088: ret 
0x6090: mov byte ptr [rdi+0x8],0x1
0x6094: mov byte ptr [rdi],0x5b
0x6097: mov eax,0x1
0x609c: ret 
0x60a0: mov byte ptr [rdi+0x8],0x19
0x60a4: mov eax,0x1
0x60a9: ret 
0x60b0: mov byte ptr [rdi+0x8],0x15
0x60b4: mov eax,0x1
0x60b9: ret 
0x60c0: mov qword ptr [rsi+0x48],rdx
0x60c4: movzx eax,byte ptr [r8+rax+0x1]
0x60ca: mov byte ptr [rdi+0x8],0x1
0x60ce: mov byte ptr [rdi],al
0x60d0: mov eax,0x1
0x60d5: ret 
0x60e0: mov byte ptr [rdi+0x8],0x1c
0x60e4: mov eax,0x2
0x60e9: ret 
0x60f0: and edx,0x4
0x60f3: je 0x6090
0x60f5: mov byte ptr [rdi+0x8],0x1e
0x60f9: mov eax,0x2
0x60fe: ret 
0x6100: cmp byte ptr [rsi+0x30],0x11
0x6104: je 0x6110
0x6106: xor eax,eax
0x6108: ret 
0x6110: cmp rdi,qword ptr [rsi+0x28]
0x6114: jne 0x6106
0x6116: or byte ptr [rsi+0x32],0x8
0x611a: xor eax,eax
0x611c: ret 
0x6282: cmp eax,-0x1
0x6285: je 0x61ee
0x628b: test eax,eax
0x628d: jne 0x6297
0x628f: mov esi,dword ptr [rsp+0x8]
0x6293: test esi,esi
0x6295: jne 0x6315
0x6297: cmp r15,0x3f
0x629b: jg 0x62b0
0x629d: movzx eax,word ptr [rsp+0x26]
0x62a2: and word ptr [r13+0x22],ax
0x62a7: nop word ptr [rax+rax]
0x69ee: call 0x19e0
0x69f3: nop dword ptr [rax]
0x69f6: nop word ptr cs:[rax+rax]
0x6ffa: call 0x19e0
0x74f3: push rsi
0x774c: mov rsi,r15
0x774f: call 0x65a0
0x7754: mov edx,eax
0x7756: xor eax,eax
0x7758: test dl,dl
0x775a: jne 0x7620
0x7760: jmp 0x761b
0x848a: call 0x19e0
0x848f: nop 
0x85e4: call 0x19e0
0x85e9: nop dword ptr [rax]
0x8880: push r14
0x8882: push r13
0x8884: lea r13,[rsi+0x70]
0x8888: push r12
0x888a: push rbp
0x888b: lea r12,[rsi+0x80]
0x8892: push rbx
0x8893: mov rbx,rdi
0x8896: sub rsp,0x10
0x889a: mov rbp,qword ptr [rdi]
0x889d: mov rax,qword ptr fs:0x28
0x88a6: mov qword ptr [rsp+0x8],rax
0x88ab: xor eax,eax
0x88ad: mov r14,rsp
0x88b0: lea r8,[rbx+0x28]
0x88b4: xor ecx,ecx
0x88b6: xor edx,edx
0x88b8: mov rsi,r12
0x88bb: mov rdi,r13
0x88be: call 0x87a0
0x88c3: test rax,rax
0x88c6: mov qword ptr [r14],rax
0x88c9: je 0x891c
0x88cb: mov qword ptr [rax],rbp
0x88ce: mov rbp,qword ptr [r14]
0x88d1: or byte ptr [rbp+0x32],0x4
0x88d5: mov rax,qword ptr [rbx+0x8]
0x88d9: test rax,rax
0x88dc: je 0x88f0
0x88de: lea r14,[rbp+0x8]
0x88e2: mov rbx,rax
0x88e5: jmp 0x88b0
0x88f0: xor edx,edx
0x88f2: jmp 0x88fb
0x88f8: mov rbx,rax
0x88fb: mov rax,qword ptr [rbx+0x10]
0x88ff: test rax,rax
0x8902: je 0x8909
0x8904: cmp rax,rdx
0x8907: jne 0x8940
0x8909: mov rax,qword ptr [rbx]
0x890c: mov rbp,qword ptr [rbp]
0x8910: mov rdx,rbx
0x8913: test rax,rax
0x8916: jne 0x88f8
0x8918: mov rax,qword ptr [rsp]
0x891c: mov rcx,qword ptr [rsp+0x8]
0x8921: xor rcx,qword ptr fs:0x28
0x892a: jne 0x894c
0x892c: add rsp,0x10
0x8930: pop rbx
0x8931: pop rbp
0x8932: pop r12
0x8934: pop r13
0x8936: pop r14
0x8938: ret 
0x8940: lea r14,[rbp+0x10]
0x8944: mov rbx,rax
0x8947: jmp 0x88b0
0x894c: call 0x19e0
0x8951: nop dword ptr [rax+rax]
0x8956: nop word ptr cs:[rax+rax]
0x8b92: call 0x19e0
0x8b97: nop word ptr [rax+rax]
0x8c3b: call 0x19e0
0x93c7: call 0x19e0
0x93cc: nop dword ptr [rax]
0x9769: call 0x19e0
0x976e: nop 
0xa32a: call 0x19e0
0xa32f: nop 
0xa566: call 0x19e0
0xa56b: nop dword ptr [rax+rax]
0xb0e4: call 0x19e0
0xb284: nop 
0xb286: nop word ptr cs:[rax+rax]
0xb290: push rbp
0xb291: push rbx
0xb292: mov rbp,rdi
0xb295: mov rdi,rsi
0xb298: mov rbx,rsi
0xb29b: sub rsp,0x8
0xb29f: call 0x19d0
0xb2a4: cmp rax,0x1
0xb2a8: jne 0xb2d0
0xb2aa: movzx ecx,byte ptr [rbx]
0xb2ad: mov rdx,rcx
0xb2b0: and ecx,0x3f
0xb2b3: shr rdx,0x3
0xb2b7: shl rax,cl
0xb2ba: and edx,0x18
0xb2bd: or qword ptr [rbp+rdx],rax
0xb2c2: add rsp,0x8
0xb2c6: xor eax,eax
0xb2c8: pop rbx
0xb2c9: pop rbp
0xb2ca: ret 
0xb2d0: add rsp,0x8
0xb2d4: mov eax,0x3
0xb2d9: pop rbx
0xb2da: pop rbp
0xb2db: ret 
0xb2e0: push r14
0xb2e2: push r13
0xb2e4: mov r13,rcx
0xb2e7: push r12
0xb2e9: push rbp
0xb2ea: mov r12,r9
0xb2ed: push rbx
0xb2ee: mov rbp,rdi
0xb2f1: mov rbx,rsi
0xb2f4: sub rsp,0x10
0xb2f8: test qword ptr [rsp+0x40],0x400000
0xb301: je 0xb328
0xb303: lea rdi,[rip+0xa59d]
0xb30a: mov ecx,0x6
0xb30f: mov rsi,r9
0xb312: rep cmpsb [rsi],es:[rdi]
0xb314: seta al
0xb317: sbb al,0x0
0xb319: test al,al
0xb31b: jne 0xb416
0xb321: lea r12,[rip+0xa579]
0xb328: mov rcx,qword ptr [r13]
0xb32c: cmp qword ptr [r8],rcx
0xb32f: mov rax,qword ptr [rdx]
0xb332: je 0xb449
0xb338: lea rdx,[rcx+0x1]
0xb33c: mov rdi,r12
0xb33f: mov qword ptr [r13],rdx
0xb343: lea r13,[rax+rcx*8]
0xb347: call 0x1a90
0xb34c: lea rdi,[rip+0xa560]
0xb353: mov qword ptr [r13],rax
0xb357: mov ecx,0x6
0xb35c: mov rsi,r12
0xb35f: rep cmpsb [rsi],es:[rdi]
0xb361: seta al
0xb364: sbb al,0x0
0xb366: test al,al
0xb368: je 0xb3d8
0xb36a: lea rdi,[rip+0xa548]
0xb371: mov ecx,0x6
0xb376: mov rsi,r12
0xb379: rep cmpsb [rsi],es:[rdi]
0xb37b: seta al
0xb37e: sbb al,0x0
0xb380: test al,al
0xb382: jne 0xb488
0xb388: call 0x1c70
0xb38d: xor ecx,ecx
0xb38f: test rbp,rbp
0xb392: mov rdx,qword ptr [rax]
0xb395: mov edi,0x1
0xb39a: jne 0xb65a
0xb3a0: test byte ptr [rdx+rcx*2],0x2
0xb3a4: je 0xb3b7
0xb3a6: mov rax,rcx
0xb3a9: mov rsi,rdi
0xb3ac: sar rax,0x6
0xb3b0: shl rsi,cl
0xb3b3: or qword ptr [rbx+rax*8],rsi
0xb3b7: add rcx,0x1
0xb3bb: cmp rcx,0x100
0xb3c2: jne 0xb3a0
0xb3c4: xor eax,eax
0xb3c6: add rsp,0x10
0xb3ca: pop rbx
0xb3cb: pop rbp
0xb3cc: pop r12
0xb3ce: pop r13
0xb3d0: pop r14
0xb3d2: ret 
0xb3d8: call 0x1c70
0xb3dd: xor ecx,ecx
0xb3df: test rbp,rbp
0xb3e2: mov rdx,qword ptr [rax]
0xb3e5: mov edi,0x1
0xb3ea: jne 0xb5da
0xb3f0: test byte ptr [rdx+rcx*2],0x8
0xb3f4: je 0xb407
0xb3f6: mov rax,rcx
0xb3f9: mov rsi,rdi
0xb3fc: sar rax,0x6
0xb400: shl rsi,cl
0xb403: or qword ptr [rbx+rax*8],rsi
0xb407: add rcx,0x1
0xb40b: cmp rcx,0x100
0xb412: jne 0xb3f0
0xb414: jmp 0xb3c4
0xb416: lea rdi,[rip+0xa490]
0xb41d: mov ecx,0x6
0xb422: mov rsi,r9
0xb425: rep cmpsb [rsi],es:[rdi]
0xb427: mov rcx,qword ptr [r13]
0xb42b: seta al
0xb42e: sbb al,0x0
0xb430: test al,al
0xb432: lea rax,[rip+0xa468]
0xb439: cmove r12,rax
0xb43d: cmp qword ptr [r8],rcx
0xb440: mov rax,qword ptr [rdx]
0xb443: jne 0xb338
0xb449: lea r14,[rcx+rcx+0x1]
0xb44e: mov rdi,rax
0xb451: mov qword ptr [rsp+0x8],r8
0xb456: mov qword ptr [rsp],rdx
0xb45a: lea rsi,[r14*8]
0xb462: call 0x1b60
0xb467: test rax,rax
0xb46a: je 0xb788
0xb470: mov rdx,qword ptr [rsp]
0xb474: mov r8,qword ptr [rsp+0x8]
0xb479: mov qword ptr [rdx],rax
0xb47c: mov qword ptr [r8],r14
0xb47f: mov rcx,qword ptr [r13]
0xb483: jmp 0xb338
0xb488: lea rdi,[rip+0xa41e]
0xb48f: mov ecx,0x6
0xb494: mov rsi,r12
0xb497: rep cmpsb [rsi],es:[rdi]
0xb499: seta al
0xb49c: sbb al,0x0
0xb49e: test al,al
0xb4a0: je 0xb50a
0xb4a2: lea rdi,[rip+0xa416]
0xb4a9: mov ecx,0x6
0xb4ae: mov rsi,r12
0xb4b1: rep cmpsb [rsi],es:[rdi]
0xb4b3: seta al
0xb4b6: sbb al,0x0
0xb4b8: test al,al
0xb4ba: jne 0xb552
0xb4c0: call 0x1c70
0xb4c5: xor ecx,ecx
0xb4c7: test rbp,rbp
0xb4ca: mov rdx,qword ptr [rax]
0xb4cd: mov edi,0x1
0xb4d2: jne 0xb82e
0xb4d8: nop dword ptr [rax+rax]
0xb4e0: test byte ptr [rdx+rcx*2+0x1],0x20
0xb4e5: je 0xb4f8
0xb4e7: mov rax,rcx
0xb4ea: mov rsi,rdi
0xb4ed: sar rax,0x6
0xb4f1: shl rsi,cl
0xb4f4: or qword ptr [rbx+rax*8],rsi
0xb4f8: add rcx,0x1
0xb4fc: cmp rcx,0x100
0xb503: jne 0xb4e0
0xb505: jmp 0xb3c4
0xb50a: call 0x1c70
0xb50f: xor ecx,ecx
0xb511: test rbp,rbp
0xb514: mov rdx,qword ptr [rax]
0xb517: mov edi,0x1
0xb51c: jne 0xb6f2
0xb522: nop word ptr [rax+rax]
0xb528: test byte ptr [rdx+rcx*2+0x1],0x2
0xb52d: je 0xb540
0xb52f: mov rax,rcx
0xb532: mov rsi,rdi
0xb535: sar rax,0x6
0xb539: shl rsi,cl
0xb53c: or qword ptr [rbx+rax*8],rsi
0xb540: add rcx,0x1
0xb544: cmp rcx,0x100
0xb54b: jne 0xb528
0xb54d: jmp 0xb3c4
0xb552: lea rdi,[rip+0xa348]
0xb559: mov ecx,0x6
0xb55e: mov rsi,r12
0xb561: rep cmpsb [rsi],es:[rdi]
0xb563: seta al
0xb566: sbb al,0x0
0xb568: test al,al
0xb56a: je 0xb613
0xb570: lea rdi,[rip+0xa367]
0xb577: mov ecx,0x6
0xb57c: mov rsi,r12
0xb57f: rep cmpsb [rsi],es:[rdi]
0xb581: seta al
0xb584: sbb al,0x0
0xb586: test al,al
0xb588: jne 0xb693
0xb58e: call 0x1c70
0xb593: xor ecx,ecx
0xb595: test rbp,rbp
0xb598: mov rdx,qword ptr [rax]
0xb59b: mov edi,0x1
0xb5a0: jne 0xba4a
0xb5a6: nop word ptr cs:[rax+rax]
0xb5b0: test byte ptr [rdx+rcx*2+0x1],0x8
0xb5b5: je 0xb5c8
0xb5b7: mov rax,rcx
0xb5ba: mov rsi,rdi
0xb5bd: sar rax,0x6
0xb5c1: shl rsi,cl
0xb5c4: or qword ptr [rbx+rax*8],rsi
0xb5c8: add rcx,0x1
0xb5cc: cmp rcx,0x100
0xb5d3: jne 0xb5b0
0xb5d5: jmp 0xb3c4
0xb5da: xor eax,eax
0xb5dc: nop dword ptr [rax]
0xb5e0: test byte ptr [rdx+rax*2],0x8
0xb5e4: je 0xb602
0xb5e6: movzx ecx,byte ptr [rbp+rax]
0xb5eb: mov r10,rdi
0xb5ee: mov rsi,rcx
0xb5f1: and ecx,0x3f
0xb5f4: shr rsi,0x3
0xb5f8: shl r10,cl
0xb5fb: and esi,0x18
0xb5fe: or qword ptr [rbx+rsi],r10
0xb602: add rax,0x1
0xb606: cmp rax,0x100
0xb60c: jne 0xb5e0
0xb60e: jmp 0xb3c4
0xb613: call 0x1c70
0xb618: xor ecx,ecx
0xb61a: test rbp,rbp
0xb61d: mov rdx,qword ptr [rax]
0xb620: mov edi,0x1
0xb625: jne 0xb7f8
0xb62b: nop dword ptr [rax+rax]
0xb630: test byte ptr [rdx+rcx*2+0x1],0x4
0xb635: je 0xb648
0xb637: mov rax,rcx
0xb63a: mov rsi,rdi
0xb63d: sar rax,0x6
0xb641: shl rsi,cl
0xb644: or qword ptr [rbx+rax*8],rsi
0xb648: add rcx,0x1
0xb64c: cmp rcx,0x100
0xb653: jne 0xb630
0xb655: jmp 0xb3c4
0xb65a: xor eax,eax
0xb65c: nop dword ptr [rax]
0xb660: test byte ptr [rdx+rax*2],0x2
0xb664: je 0xb682
0xb666: movzx ecx,byte ptr [rbp+rax]
0xb66b: mov r11,rdi
0xb66e: mov rsi,rcx
0xb671: and ecx,0x3f
0xb674: shr rsi,0x3
0xb678: shl r11,cl
0xb67b: and esi,0x18
0xb67e: or qword ptr [rbx+rsi],r11
0xb682: add rax,0x1
0xb686: cmp rax,0x100
0xb68c: jne 0xb660
0xb68e: jmp 0xb3c4
0xb693: lea rdi,[rip+0xa22b]
0xb69a: mov ecx,0x6
0xb69f: mov rsi,r12
0xb6a2: rep cmpsb [rsi],es:[rdi]
0xb6a4: seta al
0xb6a7: sbb al,0x0
0xb6a9: test al,al
0xb6ab: jne 0xb72c
0xb6ad: call 0x1c70
0xb6b2: xor ecx,ecx
0xb6b4: test rbp,rbp
0xb6b7: mov rdx,qword ptr [rax]
0xb6ba: mov edi,0x1
0xb6bf: jne 0xbab7
0xb6c5: nop dword ptr [rax]
0xb6c8: test byte ptr [rdx+rcx*2+0x1],0x40
0xb6cd: je 0xb6e0
0xb6cf: mov rax,rcx
0xb6d2: mov rsi,rdi
0xb6d5: sar rax,0x6
0xb6d9: shl rsi,cl
0xb6dc: or qword ptr [rbx+rax*8],rsi
0xb6e0: add rcx,0x1
0xb6e4: cmp rcx,0x100
0xb6eb: jne 0xb6c8
0xb6ed: jmp 0xb3c4
0xb6f2: xor eax,eax
0xb6f4: nop dword ptr [rax]
0xb6f8: test byte ptr [rdx+rax*2+0x1],0x2
0xb6fd: je 0xb71b
0xb6ff: movzx ecx,byte ptr [rbp+rax]
0xb704: mov r14,rdi
0xb707: mov rsi,rcx
0xb70a: and ecx,0x3f
0xb70d: shr rsi,0x3
0xb711: shl r14,cl
0xb714: and esi,0x18
0xb717: or qword ptr [rbx+rsi],r14
0xb71b: add rax,0x1
0xb71f: cmp rax,0x100
0xb725: jne 0xb6f8
0xb727: jmp 0xb3c4
0xb72c: lea rdi,[rip+0xa174]
0xb733: mov ecx,0x6
0xb738: mov rsi,r12
0xb73b: rep cmpsb [rsi],es:[rdi]
0xb73d: seta al
0xb740: sbb al,0x0
0xb742: test al,al
0xb744: jne 0xb792
0xb746: call 0x1c70
0xb74b: xor ecx,ecx
0xb74d: test rbp,rbp
0xb750: mov rax,qword ptr [rax]
0xb753: mov edi,0x1
0xb758: jne 0xba80
0xb75e: test byte ptr [rax+rcx*2+0x1],0x1
0xb763: je 0xb776
0xb765: mov rdx,rcx
0xb768: mov rsi,rdi
0xb76b: sar rdx,0x6
0xb76f: shl rsi,cl
0xb772: or qword ptr [rbx+rdx*8],rsi
0xb776: add rcx,0x1
0xb77a: cmp rcx,0x100
0xb781: jne 0xb75e
0xb783: jmp 0xb3c4
0xb788: mov eax,0xc
0xb78d: jmp 0xb3c6
0xb792: lea rdi,[rip+0xa132]
0xb799: mov ecx,0x6
0xb79e: mov rsi,r12
0xb7a1: rep cmpsb [rsi],es:[rdi]
0xb7a3: seta al
0xb7a6: sbb al,0x0
0xb7a8: test al,al
0xb7aa: jne 0xb89e
0xb7b0: call 0x1c70
0xb7b5: xor ecx,ecx
0xb7b7: test rbp,rbp
0xb7ba: mov rdx,qword ptr [rax]
0xb7bd: mov esi,0x1
0xb7c2: jne 0xb864
0xb7c8: test byte ptr [rdx+rcx*2],0x1
0xb7cc: je 0xb7df
0xb7ce: mov rax,rcx
0xb7d1: mov rdi,rsi
0xb7d4: sar rax,0x6
0xb7d8: shl rdi,cl
0xb7db: or qword ptr [rbx+rax*8],rdi
0xb7df: add rcx,0x1
0xb7e3: cmp rcx,0x100
0xb7ea: jne 0xb7c8
0xb7ec: jmp 0xb3c4
0xb7f8: xor eax,eax
0xb7fa: test byte ptr [rdx+rax*2+0x1],0x4
0xb7ff: je 0xb81d
0xb801: movzx ecx,byte ptr [rbp+rax]
0xb806: mov r9,rdi
0xb809: mov rsi,rcx
0xb80c: and ecx,0x3f
0xb80f: shr rsi,0x3
0xb813: shl r9,cl
0xb816: and esi,0x18
0xb819: or qword ptr [rbx+rsi],r9
0xb81d: add rax,0x1
0xb821: cmp rax,0x100
0xb827: jne 0xb7fa
0xb829: jmp 0xb3c4
0xb82e: xor eax,eax
0xb830: test byte ptr [rdx+rax*2+0x1],0x20
0xb835: je 0xb853
0xb837: movzx ecx,byte ptr [rbp+rax]
0xb83c: mov r9,rdi
0xb83f: mov rsi,rcx
0xb842: and ecx,0x3f
0xb845: shr rsi,0x3
0xb849: shl r9,cl
0xb84c: and esi,0x18
0xb84f: or qword ptr [rbx+rsi],r9
0xb853: add rax,0x1
0xb857: cmp rax,0x100
0xb85d: jne 0xb830
0xb85f: jmp 0xb3c4
0xb864: xor eax,eax
0xb866: mov edi,0x1
0xb86b: test byte ptr [rdx+rax*2],0x1
0xb86f: je 0xb88d
0xb871: movzx ecx,byte ptr [rbp+rax]
0xb876: mov r14,rdi
0xb879: mov rsi,rcx
0xb87c: and ecx,0x3f
0xb87f: shr rsi,0x3
0xb883: shl r14,cl
0xb886: and esi,0x18
0xb889: or qword ptr [rbx+rsi],r14
0xb88d: add rax,0x1
0xb891: cmp rax,0x100
0xb897: jne 0xb86b
0xb899: jmp 0xb3c4
0xb89e: lea rsi,[rip+0xa02c]
0xb8a5: mov rdi,r12
0xb8a8: call 0x1ac0
0xb8ad: test eax,eax
0xb8af: jne 0xb92a
0xb8b1: call 0x1c70
0xb8b6: xor ecx,ecx
0xb8b8: test rbp,rbp
0xb8bb: mov rsi,qword ptr [rax]
0xb8be: mov edx,0x1
0xb8c3: jne 0xb8ef
0xb8c5: cmp word ptr [rsi+rcx*2],0x0
0xb8ca: jns 0xb8dd
0xb8cc: mov rax,rcx
0xb8cf: mov rdi,rdx
0xb8d2: sar rax,0x6
0xb8d6: shl rdi,cl
0xb8d9: or qword ptr [rbx+rax*8],rdi
0xb8dd: add rcx,0x1
0xb8e1: cmp rcx,0x100
0xb8e8: jne 0xb8c5
0xb8ea: jmp 0xb3c4
0xb8ef: xor eax,eax
0xb8f1: mov edi,0x1
0xb8f6: cmp word ptr [rsi+rax*2],0x0
0xb8fb: jns 0xb919
0xb8fd: movzx ecx,byte ptr [rbp+rax]
0xb902: mov r9,rdi
0xb905: mov rdx,rcx
0xb908: and ecx,0x3f
0xb90b: shr rdx,0x3
0xb90f: shl r9,cl
0xb912: and edx,0x18
0xb915: or qword ptr [rbx+rdx],r9
0xb919: add rax,0x1
0xb91d: cmp rax,0x100
0xb923: jne 0xb8f6
0xb925: jmp 0xb3c4
0xb92a: lea rsi,[rip+0x9fa6]
0xb931: mov rdi,r12
0xb934: call 0x1ac0
0xb939: test eax,eax
0xb93b: jne 0xb9b4
0xb93d: call 0x1c70
0xb942: xor ecx,ecx
0xb944: test rbp,rbp
0xb947: mov rsi,qword ptr [rax]
0xb94a: mov edx,0x1
0xb94f: jne 0xb97a
0xb951: test byte ptr [rsi+rcx*2],0x4
0xb955: je 0xb968
0xb957: mov rax,rcx
0xb95a: mov rdi,rdx
0xb95d: sar rax,0x6
0xb961: shl rdi,cl
0xb964: or qword ptr [rbx+rax*8],rdi
0xb968: add rcx,0x1
0xb96c: cmp rcx,0x100
0xb973: jne 0xb951
0xb975: jmp 0xb3c4
0xb97a: xor eax,eax
0xb97c: mov edi,0x1
0xb981: test byte ptr [rsi+rax*2],0x4
0xb985: je 0xb9a3
0xb987: movzx ecx,byte ptr [rbp+rax]
0xb98c: mov r14,rdi
0xb98f: mov rdx,rcx
0xb992: and ecx,0x3f
0xb995: shr rdx,0x3
0xb999: shl r14,cl
0xb99c: and edx,0x18
0xb99f: or qword ptr [rbx+rdx],r14
0xb9a3: add rax,0x1
0xb9a7: cmp rax,0x100
0xb9ad: jne 0xb981
0xb9af: jmp 0xb3c4
0xb9b4: lea rsi,[rip+0x9f22]
0xb9bb: mov rdi,r12
0xb9be: call 0x1ac0
0xb9c3: test eax,eax
0xb9c5: jne 0xba40
0xb9c7: call 0x1c70
0xb9cc: xor ecx,ecx
0xb9ce: test rbp,rbp
0xb9d1: mov rsi,qword ptr [rax]
0xb9d4: mov edx,0x1
0xb9d9: jne 0xba05
0xb9db: test byte ptr [rsi+rcx*2+0x1],0x10
0xb9e0: je 0xb9f3
0xb9e2: mov rax,rcx
0xb9e5: mov rdi,rdx
0xb9e8: sar rax,0x6
0xb9ec: shl rdi,cl
0xb9ef: or qword ptr [rbx+rax*8],rdi
0xb9f3: add rcx,0x1
0xb9f7: cmp rcx,0x100
0xb9fe: jne 0xb9db
0xba00: jmp 0xb3c4
0xba05: xor eax,eax
0xba07: mov edi,0x1
0xba0c: test byte ptr [rsi+rax*2+0x1],0x10
0xba11: je 0xba2f
0xba13: movzx ecx,byte ptr [rbp+rax]
0xba18: mov r9,rdi
0xba1b: mov rdx,rcx
0xba1e: and ecx,0x3f
0xba21: shr rdx,0x3
0xba25: shl r9,cl
0xba28: and edx,0x18
0xba2b: or qword ptr [rbx+rdx],r9
0xba2f: add rax,0x1
0xba33: cmp rax,0x100
0xba39: jne 0xba0c
0xba3b: jmp 0xb3c4
0xba40: mov eax,0x4
0xba45: jmp 0xb3c6
0xba4a: xor eax,eax
0xba4c: test byte ptr [rdx+rax*2+0x1],0x8
0xba51: je 0xba6f
0xba53: movzx ecx,byte ptr [rbp+rax]
0xba58: mov r14,rdi
0xba5b: mov rsi,rcx
0xba5e: and ecx,0x3f
0xba61: shr rsi,0x3
0xba65: shl r14,cl
0xba68: and esi,0x18
0xba6b: or qword ptr [rbx+rsi],r14
0xba6f: add rax,0x1
0xba73: cmp rax,0x100
0xba79: jne 0xba4c
0xba7b: jmp 0xb3c4
0xba80: xor edx,edx
0xba82: test byte ptr [rax+rdx*2+0x1],0x1
0xba87: je 0xbaa5
0xba89: movzx ecx,byte ptr [rbp+rdx]
0xba8e: mov r9,rdi
0xba91: mov rsi,rcx
0xba94: and ecx,0x3f
0xba97: shr rsi,0x3
0xba9b: shl r9,cl
0xba9e: and esi,0x18
0xbaa1: or qword ptr [rbx+rsi],r9
0xbaa5: add rdx,0x1
0xbaa9: cmp rdx,0x100
0xbab0: jne 0xba82
0xbab2: jmp 0xb3c4
0xbab7: xor eax,eax
0xbab9: test byte ptr [rdx+rax*2+0x1],0x40
0xbabe: je 0xbadc
0xbac0: movzx ecx,byte ptr [rbp+rax]
0xbac5: mov r14,rdi
0xbac8: mov rsi,rcx
0xbacb: and ecx,0x3f
0xbace: shr rsi,0x3
0xbad2: shl r14,cl
0xbad5: and esi,0x18
0xbad8: or qword ptr [rbx+rsi],r14
0xbadc: add rax,0x1
0xbae0: cmp rax,0x100
0xbae6: jne 0xbab9
0xbae8: jmp 0xb3c4
0xbaf0: push r15
0xbaf2: push r14
0xbaf4: mov r14,rdx
0xbaf7: push r13
0xbaf9: push r12
0xbafb: mov r13,rcx
0xbafe: push rbp
0xbaff: push rbx
0xbb00: mov rbp,rdi
0xbb03: mov edi,0x20
0xbb08: mov r12d,r8d
0xbb0b: sub rsp,0x58
0xbb0f: mov qword ptr [rsp],rsi
0xbb13: mov esi,0x1
0xbb18: mov qword ptr [rsp+0x8],r9
0xbb1d: mov rax,qword ptr fs:0x28
0xbb26: mov qword ptr [rsp+0x48],rax
0xbb2b: xor eax,eax
0xbb2d: mov qword ptr [rsp+0x18],0x0
0xbb36: call 0x1ab0
0xbb3b: test rax,rax
0xbb3e: je 0xbd00
0xbb44: mov esi,0x1
0xbb49: mov edi,0x50
0xbb4e: mov rbx,rax
0xbb51: call 0x1ab0
0xbb56: test rax,rax
0xbb59: mov r15,rax
0xbb5c: je 0xbd10
0xbb62: movzx eax,byte ptr [rax+0x20]
0xbb66: sub rsp,0x8
0xbb6a: mov edx,r12d
0xbb6d: push 0x0
0xbb6f: and edx,0x1
0xbb72: mov rdi,qword ptr [rsp+0x10]
0xbb77: lea rcx,[r15+0x48]
0xbb7b: mov r9,r14
0xbb7e: mov rsi,rbx
0xbb81: lea r8,[rsp+0x28]
0xbb86: and eax,-0x2
0xbb89: or eax,edx
0xbb8b: lea rdx,[r15+0x18]
0xbb8f: mov byte ptr [r15+0x20],al
0xbb93: call 0xb2e0
0xbb98: test eax,eax
0xbb9a: pop rdx
0xbb9b: pop rcx
0xbb9c: jne 0xbd30
0xbba2: movsx rcx,byte ptr [r13]
0xbba7: mov esi,0x1
0xbbac: test cl,cl
0xbbae: je 0xbbea
0xbbb0: lea rax,[rcx+0x3f]
0xbbb4: test rcx,rcx
0xbbb7: mov rdx,rcx
0xbbba: cmovns rax,rcx
0xbbbe: sar rdx,0x3f
0xbbc2: add r13,0x1
0xbbc6: shr rdx,0x3a
0xbbca: sar rax,0x6
0xbbce: add rcx,rdx
0xbbd1: and ecx,0x3f
0xbbd4: sub rcx,rdx
0xbbd7: mov rdx,rsi
0xbbda: shl rdx,cl
0xbbdd: movsx rcx,byte ptr [r13]
0xbbe2: or qword ptr [rbx+rax*8],rdx
0xbbe6: test cl,cl
0xbbe8: jne 0xbbb0
0xbbea: test r12b,r12b
0xbbed: je 0xbc02
0xbbef: lea rdx,[rbx+0x20]
0xbbf3: mov rax,rbx
0xbbf6: not qword ptr [rax]
0xbbf9: add rax,0x8
0xbbfd: cmp rdx,rax
0xbc00: jne 0xbbf6
0xbc02: cmp dword ptr [rbp+0xb4],0x1
0xbc09: jle 0xbc23
0xbc0b: mov rcx,qword ptr [rbp+0x78]
0xbc0f: xor eax,eax
0xbc11: mov rdx,qword ptr [rcx+rax]
0xbc15: and qword ptr [rbx+rax],rdx
0xbc19: add rax,0x8
0xbc1d: cmp rax,0x20
0xbc21: jne 0xbc11
0xbc23: lea r9,[rsp+0x20]
0xbc28: lea r12,[rbp+0x70]
0xbc2c: lea r13,[rbp+0x80]
0xbc33: xor ecx,ecx
0xbc35: xor edx,edx
0xbc37: mov byte ptr [rsp+0x28],0x3
0xbc3c: mov r8,r9
0xbc3f: mov rsi,r13
0xbc42: mov rdi,r12
0xbc45: mov qword ptr [rsp+0x20],rbx
0xbc4a: mov qword ptr [rsp],r9
0xbc4e: call 0x87a0
0xbc53: test rax,rax
0xbc56: mov r14,rax
0xbc59: je 0xbcf0
0xbc5f: cmp dword ptr [rbp+0xb4],0x1
0xbc66: jle 0xbce0
0xbc68: or byte ptr [rbp+0xb0],0x2
0xbc6f: mov r9,qword ptr [rsp]
0xbc73: xor ecx,ecx
0xbc75: xor edx,edx
0xbc77: mov rsi,r13
0xbc7a: mov rdi,r12
0xbc7d: mov byte ptr [rsp+0x28],0x6
0xbc82: mov qword ptr [rsp+0x20],r15
0xbc87: mov r8,r9
0xbc8a: call 0x87a0
0xbc8f: test rax,rax
0xbc92: je 0xbcf0
0xbc94: lea r8,[rsp+0x30]
0xbc99: mov rdx,r14
0xbc9c: mov rcx,rax
0xbc9f: mov rsi,r13
0xbca2: mov rdi,r12
0xbca5: mov byte ptr [rsp+0x38],0xa
0xbcaa: call 0x87a0
0xbcaf: mov r14,rax
0xbcb2: mov rdi,qword ptr [rsp+0x48]
0xbcb7: xor rdi,qword ptr fs:0x28
0xbcc0: mov rax,r14
0xbcc3: jne 0xbd55
0xbcc9: add rsp,0x58
0xbccd: pop rbx
0xbcce: pop rbp
0xbccf: pop r12
0xbcd1: pop r13
0xbcd3: pop r14
0xbcd5: pop r15
0xbcd7: ret 
0xbce0: mov rdi,r15
0xbce3: call 0x7200
0xbce8: jmp 0xbcb2
0xbcf0: mov rdi,rbx
0xbcf3: call 0x18d0
0xbcf8: mov rdi,r15
0xbcfb: call 0x7200
0xbd00: mov rax,qword ptr [rsp+0x8]
0xbd05: xor r14d,r14d
0xbd08: mov dword ptr [rax],0xc
0xbd0e: jmp 0xbcb2
0xbd10: mov rdi,rbx
0xbd13: xor r14d,r14d
0xbd16: call 0x18d0
0xbd1b: mov rax,qword ptr [rsp+0x8]
0xbd20: mov dword ptr [rax],0xc
0xbd26: jmp 0xbcb2
0xbd30: mov rdi,rbx
0xbd33: mov dword ptr [rsp],eax
0xbd36: xor r14d,r14d
0xbd39: call 0x18d0
0xbd3e: mov rdi,r15
0xbd41: call 0x7200
0xbd46: mov rdi,qword ptr [rsp+0x8]
0xbd4b: mov eax,dword ptr [rsp]
0xbd4e: mov dword ptr [rdi],eax
0xbd50: jmp 0xbcb2
0xbd55: call 0x19e0
0xbd5a: nop word ptr [rax+rax]
0xc282: call 0x19e0
0xc287: nop word ptr [rax+rax]
0xcb19: iretl 
0xcc3c: call 0x19e0
0xcc41: nop dword ptr [rax+rax]
0xcc46: nop word ptr cs:[rax+rax]
0xd356: mov rdi,qword ptr [rbp-0x88]
0xd35d: test rdi,rdi
0xd360: je 0xd367
0xd3f6: mov rdi,qword ptr [rbp-0xb8]
0xd3fd: call 0x1b00
0xd402: test rax,rax
0xd405: mov qword ptr [rbp-0xc0],rax
0xd40c: mov byte ptr [rbp-0xc9],0x1
0xd413: jne 0xcd27
0xd419: mov rdi,qword ptr [rbp-0x88]
0xd420: test rdi,rdi
0xd423: je 0xd3ec
0xd425: call 0xb1a0
0xd42a: jmp 0xd3ec
0xd448: jmp 0xd367
0xd4b2: mov rdi,qword ptr [rbp-0xc0]
0xd4b9: call 0x18d0
0xd4be: xor eax,eax
0xd4c0: jmp 0xd369
0xd53a: nop word ptr [rax+rax]
0xdfbc: call 0x19e0
0xdfc1: nop dword ptr [rax+rax]
0xdfc6: nop word ptr cs:[rax+rax]
0xe1b7: call 0x19e0
0xe1bc: nop dword ptr [rax]
0xe4fb: call 0x19e0
0xe64b: test r12,r12
0xe64e: mov dword ptr [rsp+0x5c],0x1
0xe656: jne 0xf079
0xf54c: nop dword ptr [rax]
0xf856: test eax,eax
0xf858: jne 0xfb2d
0xf85e: mov rax,qword ptr [rbx]
0xfc2b: call 0x19e0
0x1047b: call 0x19e0
0x10480: push r14
0x10482: push r13
0x10484: mov r10,rsi
0x10487: push r12
0x10489: push rbp
0x1048a: movsxd r11,ecx
0x1048d: push rbx
0x1048e: mov rbp,rdx
0x10491: mov rbx,rdi
0x10494: sub rsp,0x20
0x10498: mov r12,qword ptr [rsi+0x48]
0x1049c: mov rax,qword ptr fs:0x28
0x104a5: mov qword ptr [rsp+0x18],rax
0x104aa: xor eax,eax
0x104ac: cmp dword ptr [rsi+0x90],0x1
0x104b3: je 0x10508
0x104b5: mov rsi,r12
0x104b8: mov rdi,r10
0x104bb: call 0x7a30
0x104c0: cmp eax,0x1
0x104c3: jle 0x10508
0x104c5: mov rdx,qword ptr [r10+0x10]
0x104c9: cltq 
0x104cb: mov dword ptr [rbx],0x1
0x104d1: add rax,r12
0x104d4: mov edx,dword ptr [rdx+r12*4]
0x104d8: mov dword ptr [rbx+0x8],edx
0x104db: mov qword ptr [r10+0x48],rax
0x104df: xor eax,eax
0x104e1: mov rcx,qword ptr [rsp+0x18]
0x104e6: xor rcx,qword ptr fs:0x28
0x104ef: jne 0x106d8
0x104f5: add rsp,0x20
0x104f9: pop rbx
0x104fa: pop rbp
0x104fb: pop r12
0x104fd: pop r13
0x104ff: pop r14
0x10501: ret 
0x10508: movzx eax,byte ptr [rbp+0x8]
0x1050c: add r11,r12
0x1050f: mov qword ptr [r10+0x48],r11
0x10513: mov edx,eax
0x10515: and edx,-0x5
0x10518: cmp dl,0x1a
0x1051b: je 0x10540
0x1051d: cmp al,0x1c
0x1051f: je 0x10540
0x10521: cmp al,0x16
0x10523: jne 0x1052e
0x10525: test r9b,r9b
0x10528: je 0x10672
0x1052e: movzx eax,byte ptr [rbp]
0x10532: mov dword ptr [rbx],0x0
0x10538: mov byte ptr [rbx+0x8],al
0x1053b: xor eax,eax
0x1053d: jmp 0x104e1
0x10540: mov r12,qword ptr [r10+0x68]
0x10544: cmp r11,r12
0x10547: jge 0x10668
0x1054d: movzx r13d,byte ptr [rbp]
0x10552: xor r8d,r8d
0x10555: jmp 0x10582
0x10560: mov rax,qword ptr [rbx+0x8]
0x10564: mov byte ptr [rax+r8],r9b
0x10568: add r8,0x1
0x1056c: cmp r8,0x20
0x10570: je 0x10668
0x10576: movzx eax,byte ptr [rbp+0x8]
0x1057a: mov r11,qword ptr [r10+0x48]
0x1057e: mov r12,qword ptr [r10+0x68]
0x10582: cmp al,0x1e
0x10584: movsxd r14,r8d
0x10587: je 0x105f0
0x10589: mov rdx,qword ptr [r10+0x8]
0x1058d: lea rax,[r11+0x1]
0x10591: mov qword ptr [r10+0x48],rax
0x10595: movzx r9d,byte ptr [rdx+r11]
0x1059a: cmp rax,r12
0x1059d: jge 0x10668
0x105a3: cmp r13b,r9b
0x105a6: jne 0x10560
0x105a8: mov rdx,qword ptr [r10+0x8]
0x105ac: cmp byte ptr [rdx+rax],0x5d
0x105b0: jne 0x10560
0x105b2: add rax,0x1
0x105b6: mov qword ptr [r10+0x48],rax
0x105ba: mov rax,qword ptr [rbx+0x8]
0x105be: mov byte ptr [rax+r14],0x0
0x105c3: movzx eax,byte ptr [rbp+0x8]
0x105c7: cmp al,0x1c
0x105c9: je 0x106cb
0x105cf: cmp al,0x1e
0x105d1: je 0x106be
0x105d7: cmp al,0x1a
0x105d9: je 0x106b1
0x105df: xor eax,eax
0x105e1: jmp 0x104e1
0x105f0: cmp byte ptr [r10+0x8b],0x0
0x105f8: je 0x10589
0x105fa: cmp byte ptr [r10+0x8c],0x0
0x10602: je 0x10698
0x10608: cmp r11,qword ptr [r10+0x30]
0x1060c: je 0x1061d
0x1060e: mov rax,qword ptr [r10+0x10]
0x10612: cmp dword ptr [rax+r11*4],-0x1
0x10617: je 0x10589
0x1061d: mov rax,qword ptr [r10+0x18]
0x10621: mov rax,qword ptr [rax+r11*8]
0x10625: add rax,qword ptr [r10]
0x10628: add rax,qword ptr [r10+0x28]
0x1062c: movzx r9d,byte ptr [rax]
0x10630: test r9b,-0x80
0x10634: jne 0x10589
0x1063a: cmp dword ptr [r10+0x90],0x1
0x10642: mov eax,0x1
0x10647: je 0x10656
0x10649: mov rsi,r11
0x1064c: mov rdi,r10
0x1064f: call 0x7a30
0x10654: cltq 
0x10656: add rax,r11
0x10659: mov qword ptr [r10+0x48],rax
0x1065d: jmp 0x1059a
0x10668: mov eax,0x7
0x1066d: jmp 0x104e1
0x10672: mov rdi,rsp
0x10675: mov rdx,r8
0x10678: mov rsi,r10
0x1067b: call 0x5fd0
0x10680: cmp byte ptr [rsp+0x8],0x15
0x10685: mov eax,0xb
0x1068a: je 0x1052e
0x10690: jmp 0x104e1
0x10698: lea rax,[r11+0x1]
0x1069c: add r11,qword ptr [r10]
0x1069f: mov rdx,qword ptr [r10+0x28]
0x106a3: mov qword ptr [r10+0x48],rax
0x106a7: movzx r9d,byte ptr [r11+rdx]
0x106ac: jmp 0x1059a
0x106b1: mov dword ptr [rbx],0x3
0x106b7: xor eax,eax
0x106b9: jmp 0x104e1
0x106be: mov dword ptr [rbx],0x4
0x106c4: xor eax,eax
0x106c6: jmp 0x104e1
0x106cb: mov dword ptr [rbx],0x2
0x106d1: xor eax,eax
0x106d3: jmp 0x104e1
0x106d8: call 0x19e0
0x106dd: nop dword ptr [rax]
0x10dd8: call 0x19e0
0x10ddd: nop dword ptr [rax]
0x10de0: push r14
0x10de2: mov r14,rdi
0x10de5: push r13
0x10de7: mov r13,rsi
0x10dea: push r12
0x10dec: mov r12,-0x2
0x10df3: push rbp
0x10df4: mov rbp,rdx
0x10df7: push rbx
0x10df8: mov rbx,-0x1
0x10dff: nop 
0x10e00: mov rdx,rbp
0x10e03: mov rsi,r14
0x10e06: mov rdi,r13
0x10e09: call 0x106e0
0x10e0e: cltq 
0x10e10: add qword ptr [r14+0x48],rax
0x10e14: movzx eax,byte ptr [r13+0x8]
0x10e19: movzx edx,byte ptr [r13]
0x10e1e: cmp al,0x2
0x10e20: je 0x10e70
0x10e22: cmp al,0x18
0x10e24: je 0x10e77
0x10e26: cmp dl,0x2c
0x10e29: je 0x10e77
0x10e2b: cmp al,0x1
0x10e2d: je 0x10e38
0x10e2f: mov rbx,r12
0x10e32: jmp 0x10e00
0x10e38: lea eax,[rdx-0x30]
0x10e3b: cmp al,0x9
0x10e3d: ja 0x10e2f
0x10e3f: cmp rbx,-0x2
0x10e43: je 0x10e2f
0x10e45: cmp rbx,-0x1
0x10e49: je 0x10e88
0x10e4b: lea rax,[rbx+rbx*4]
0x10e4f: lea rbx,[rdx+rax*2]
0x10e53: mov eax,0x8030
0x10e58: cmp rbx,0x8030
0x10e5f: cmovg rbx,rax
0x10e63: sub rbx,0x30
0x10e67: jmp 0x10e00
0x10e70: mov rbx,-0x2
0x10e77: mov rax,rbx
0x10e7a: pop rbx
0x10e7b: pop rbp
0x10e7c: pop r12
0x10e7e: pop r13
0x10e80: pop r14
0x10e82: ret 
0x10e88: movzx ebx,dl
0x10e8b: sub ebx,0x30
0x10e8e: movsxd rbx,ebx
0x10e91: jmp 0x10e00
0x1132b: mov rdi,qword ptr [rsp+0x28]
0x11330: lea rsi,[rip-0xa0d7]
0x11337: xor edx,edx
0x11339: call 0x63c0
0x1133e: mov qword ptr [rsp+0x28],0x0
0x11347: jmp 0x10fb0
0x11540: mov rax,qword ptr [rsp+0x40]
0x11545: mov dword ptr [rax],0xa
0x1154b: cmp qword ptr [rsp+0x28],0x0
0x11551: jne 0x1132b
0x11557: jmp 0x10fa0
0x1233e: call 0x19e0
0x12343: mov rax,qword ptr [rsp+0x18]
0x12348: cmp byte ptr [rax+0x8],0x2
0x1234c: jne 0x11540
0x12352: mov rax,qword ptr [rsp+0x40]
0x12357: mov dword ptr [rax],0x9
0x1235d: jmp 0x1154b
0x123c7: test rax,rax
0x123ca: je 0x124ca
0x12420: test r9,r9
0x12423: je 0x124b4
0x124b4: test r14,r14
0x124b7: je 0x124ca
0x124b9: lea rsi,[rip-0xb260]
0x124c0: xor edx,edx
0x124c2: mov rdi,r14
0x124c5: call 0x63c0
0x124ca: xor r14d,r14d
0x124cd: jmp 0x12480
0x124fd: call 0x19e0
0x12502: nop dword ptr [rax]
0x12506: nop word ptr cs:[rax+rax]
0x1268a: call 0x19e0
0x1268f: nop 
0x12958: cmp ecx,0x1
0x1295b: jle 0x1354d
0x12961: mov rdi,rbp
0x12964: call 0x6a00
0x12969: test eax,eax
0x1296b: jne 0x129b0
0x1296d: mov rax,qword ptr [rsp]
0x12971: cmp rax,qword ptr [rsp+0xb8]
0x12979: jle 0x13530
0x1297f: movsxd rax,dword ptr [rbx+0xb4]
0x12986: mov rsi,qword ptr [rsp+0xc0]
0x1298e: add rax,qword ptr [rsp+0xb0]
0x12996: cmp rsi,rax
0x12999: jg 0x13530
0x1299f: add rsi,rsi
0x129a2: mov rdi,rbp
0x129a5: call 0x6490
0x129aa: test eax,eax
0x129ac: je 0x12961
0x129ae: nop 
0x12c85: xor edx,edx
0x12c87: nop word ptr [rax+rax]
0x12c90: mov qword ptr [rax+rdx*8],rdx
0x12c94: add rdx,0x1
0x12c98: cmp rdx,r15
0x12c9b: jne 0x12c90
0x12cc9: mov rax,qword ptr [rdi]
0x12ccc: test rax,rax
0x12ccf: je 0x12cde
0x12cd1: jmp 0x12ced
0x12cd8: cmp qword ptr [rdi+rax*8],rax
0x12cdc: jne 0x12ced
0x12cde: add rax,0x1
0x12ce2: cmp rdx,rax
0x12ce5: ja 0x12cd8
0x12ce7: je 0x135b4
0x13110: test byte ptr [r13+0xb0],0x1
0x13118: jne 0x13128
0x13530: mov dword ptr [rsp+0x4c],0x0
0x13538: jmp 0x12ae8
0x1354d: mov rdi,rbp
0x13550: call 0x67c0
0x13555: mov dword ptr [rsp+0x4c],0x0
0x1355d: jmp 0x12ae8
0x13723: lea rcx,[rip+0x26f6]
0x1372a: lea rsi,[rip+0x211f]
0x13731: lea rdi,[rip+0x21dd]
0x13738: mov edx,0x5b0
0x1373d: call 0x1a50
0x13761: lea rcx,[rip+0x26b8]
0x13768: lea rsi,[rip+0x20e1]
0x1376f: lea rdi,[rip+0x2195]
0x13776: mov edx,0x5af
0x1377b: call 0x1a50
0x13780: call 0x19e0
0x13785: nop 
0x13786: nop word ptr cs:[rax+rax]
0x13800: mov rax,qword ptr [rip+0x205ed1]
0x13807: mov qword ptr [rip+0x205eca],rdi
0x13808: mov dword ptr [rip+0x205eca],edi
0x1380e: ret 
0x13d5f: nop 
0x13d60: push r15
0x13d62: push r14
0x13d64: push r13
0x13d66: push r12
0x13d68: mov r12,rdi
0x13d6b: push rbp
0x13d6c: push rbx
0x13d6d: mov rbp,r8
0x13d70: mov rbx,rdx
0x13d73: mov rdx,rbp
0x13d76: sub rsp,0x28
0x13d7a: shr rdx,0x3f
0x13d7e: mov rax,qword ptr [rsp+0x70]
0x13d83: mov edi,edx
0x13d85: mov r8d,dword ptr [rsp+0x78]
0x13d8a: shr rax,0x3f
0x13d8e: or dil,al
0x13d91: jne 0x13e60
0x13d97: test rbx,rbx
0x13d9a: js 0x13e60
0x13da0: mov r15,rbx
0x13da3: add r15,rbp
0x13da6: jo 0x13e60
0x13dac: test rbp,rbp
0x13daf: mov r14,rcx
0x13db2: mov rcx,r9
0x13db5: je 0x13e70
0x13dbb: xor r13d,r13d
0x13dbe: test rbx,rbx
0x13dc1: mov qword ptr [rsp+0x8],rsi
0x13dc6: jne 0x13e10
0x13dc8: movzx r8d,r8b
0x13dcc: mov rdx,r15
0x13dcf: mov rsi,r14
0x13dd2: push r8
0x13dd4: push qword ptr [rsp+0x70]
0x13dd8: mov rdi,r12
0x13ddb: mov r9,qword ptr [rsp+0x80]
0x13de3: mov r8,qword ptr [rsp+0x70]
0x13de8: call 0x138e0
0x13ded: mov rdi,r13
0x13df0: mov rbx,rax
0x13df3: call 0x18d0
0x13df8: pop rax
0x13df9: pop rdx
0x13dfa: add rsp,0x28
0x13dfe: mov rax,rbx
0x13e01: pop rbx
0x13e02: pop rbp
0x13e03: pop r12
0x13e05: pop r13
0x13e07: pop r14
0x13e09: pop r15
0x13e0b: ret 
0x13e10: mov rdi,r15
0x13e13: mov dword ptr [rsp+0x1c],r8d
0x13e18: mov qword ptr [rsp+0x10],r9
0x13e1d: call 0x1b00
0x13e22: test rax,rax
0x13e25: mov r13,rax
0x13e28: je 0x13e60
0x13e2a: mov rsi,qword ptr [rsp+0x8]
0x13e2f: mov rdx,rbx
0x13e32: mov rdi,rax
0x13e35: call 0x1ad0
0x13e3a: lea rdi,[r13+rbx]
0x13e3f: mov rsi,r14
0x13e42: mov rdx,rbp
0x13e45: mov r14,r13
0x13e48: call 0x1ad0
0x13e4d: mov rcx,qword ptr [rsp+0x10]
0x13e52: mov r8d,dword ptr [rsp+0x1c]
0x13e57: jmp 0x13dc8
0x13e60: mov rbx,-0x2
0x13e67: jmp 0x13dfa
0x13e70: mov r14,rsi
0x13e73: xor r13d,r13d
0x13e76: jmp 0x13dc8
0x13e80: mov eax,edx
0x13e82: push r14
0x13e84: push r13
0x13e86: and eax,0x1
0x13e89: push r12
0x13e8b: push rbp
0x13e8c: cmp eax,0x1
0x13e8f: push rbx
0x13e90: mov rbx,rdi
0x13e93: sbb r14,r14
0x13e96: mov qword ptr [rdi],0x0
0x13e9d: mov qword ptr [rdi+0x8],0x0
0x13ea5: and r14d,0xfd4fca
0x13eac: mov qword ptr [rdi+0x10],0x0
0x13eb4: mov edi,0x100
0x13eb9: mov r12,rsi
0x13ebc: mov ebp,edx
0x13ebe: add r14,0x3b2fc
0x13ec5: call 0x1b00
0x13eca: test rax,rax
0x13ecd: mov qword ptr [rbx+0x20],rax
0x13ed1: je 0x13f80
0x13ed7: mov r13,rbp
0x13eda: shl r13,0x15
0x13ede: and r13d,0x400000
0x13ee5: or r13,r14
0x13ee8: test bpl,0x4
0x13eec: jne 0x13f50
0x13eee: and byte ptr [rbx+0x38],0x7f
0x13ef2: movzx edx,byte ptr [rbx+0x38]
0x13ef6: shr ebp,0x3
0x13ef9: mov rdi,r12
0x13efc: and ebp,0x1
0x13eff: mov qword ptr [rbx+0x28],0x0
0x13f07: shl ebp,0x4
0x13f0a: and edx,-0x11
0x13f0d: or ebp,edx
0x13f0f: mov byte ptr [rbx+0x38],bpl
0x13f13: call 0x19d0
0x13f18: mov rcx,r13
0x13f1b: mov rdx,rax
0x13f1e: mov rsi,r12
0x13f21: mov rdi,rbx
0x13f24: call 0x12690
0x13f29: cmp eax,0x10
0x13f2c: mov ebp,eax
0x13f2e: je 0x13f68
0x13f30: test eax,eax
0x13f32: jne 0x13f6d
0x13f34: mov rdi,rbx
0x13f37: call 0x13810
0x13f3c: pop rbx
0x13f3d: mov eax,ebp
0x13f3f: pop rbp
0x13f40: pop r12
0x13f42: pop r13
0x13f44: pop r14
0x13f46: ret 
0x13f50: and r13,-0x41
0x13f54: or byte ptr [rbx+0x38],-0x80
0x13f58: or r13,0x100
0x13f5f: jmp 0x13ef2
0x13f68: mov ebp,0x8
0x13f6d: mov rdi,qword ptr [rbx+0x20]
0x13f71: call 0x18d0
0x13f76: mov qword ptr [rbx+0x20],0x0
0x13f7e: jmp 0x13f3c
0x13f80: mov ebp,0xc
0x13f85: pop rbx
0x13f86: mov eax,ebp
0x13f88: pop rbp
0x13f89: pop r12
0x13f8b: pop r13
0x13f8d: pop r14
0x13f8f: ret 
0x13f90: push r13
0x13f92: push r12
0x13f94: push rbp
0x13f95: push rbx
0x13f96: sub rsp,0x8
0x13f9a: cmp edi,0x10
0x13f9d: ja 0x14000
0x13f9f: lea rax,[rip+0x1eda]
0x13fa6: movsxd rdi,edi
0x13fa9: lea rsi,[rip+0x1f70]
0x13fb0: mov rbp,rdx
0x13fb3: mov edx,0x5
0x13fb8: mov r12,rcx
0x13fbb: add rsi,qword ptr [rax+rdi*8]
0x13fbf: xor edi,edi
0x13fc1: call 0x19b0
0x13fc6: mov rdi,rax
0x13fc9: mov r13,rax
0x13fcc: call 0x19d0
0x13fd1: test r12,r12
0x13fd4: lea rbx,[rax+0x1]
0x13fd8: je 0x13fed
0x13fda: cmp rbx,r12
0x13fdd: mov rdx,rbx
0x13fe0: ja 0x14008
0x13fe2: mov rsi,r13
0x13fe5: mov rdi,rbp
0x13fe8: call 0x1ad0
0x13fed: add rsp,0x8
0x13ff1: mov rax,rbx
0x13ff4: pop rbx
0x13ff5: pop rbp
0x13ff6: pop r12
0x13ff8: pop r13
0x13ffa: ret 
0x14000: call 0x18e0
0x14005: nop dword ptr [rax]
0x14008: lea rdx,[r12-0x1]
0x1400d: mov byte ptr [rbp+r12-0x1],0x0
0x14013: jmp 0x13fe2
0x14020: push rbx
0x14021: mov rbx,rdi
0x14024: mov rdi,qword ptr [rdi]
0x14027: test rdi,rdi
0x1402a: je 0x14031
0x1402c: call 0x7810
0x14031: mov rdi,qword ptr [rbx+0x20]
0x14035: mov qword ptr [rbx],0x0
0x1403c: mov qword ptr [rbx+0x8],0x0
0x14044: call 0x18d0
0x14049: mov rdi,qword ptr [rbx+0x28]
0x1404d: mov qword ptr [rbx+0x20],0x0
0x14055: call 0x18d0
0x1405a: mov qword ptr [rbx+0x28],0x0
0x14062: pop rbx
0x14063: ret 
0x14070: test r8d,0xfffffff8
0x14077: jne 0x14108
0x1407d: push r13
0x1407f: push r12
0x14081: mov r13,rdx
0x14084: push rbp
0x14085: push rbx
0x14086: mov r12,rcx
0x14089: mov ebx,r8d
0x1408c: mov rbp,rdi
0x1408f: sub rsp,0x18
0x14093: test r8b,0x4
0x14097: jne 0x140e8
0x14099: mov rdi,rsi
0x1409c: mov qword ptr [rsp+0x8],rsi
0x140a1: call 0x19d0
0x140a6: xor ecx,ecx
0x140a8: test byte ptr [rbp+0x38],0x10
0x140ac: mov rdx,rax
0x140af: mov rsi,qword ptr [rsp+0x8]
0x140b4: je 0x140f6
0x140b6: sub rsp,0x8
0x140ba: push rbx
0x140bb: push 0x0
0x140bd: push 0x0
0x140bf: mov rdi,rbp
0x140c2: mov r9,rdx
0x140c5: mov r8,rdx
0x140c8: call 0xe500
0x140cd: add rsp,0x20
0x140d1: test eax,eax
0x140d3: setne al
0x140d6: add rsp,0x18
0x140da: pop rbx
0x140db: movzx eax,al
0x140de: pop rbp
0x140df: pop r12
0x140e1: pop r13
0x140e3: ret 
0x140e8: test byte ptr [rbp+0x38],0x10
0x140ec: mov rcx,qword ptr [rcx]
0x140ef: mov rdx,qword ptr [r12+0x8]
0x140f4: jne 0x140b6
0x140f6: sub rsp,0x8
0x140fa: push rbx
0x140fb: push r12
0x140fd: push r13
0x140ff: jmp 0x140bf
0x14108: mov eax,0x2
0x1410d: ret 
0x14110: sub rsp,0x8
0x14114: mov r9,rdx
0x14117: push 0x1
0x14119: push r8
0x1411b: xor r8d,r8d
0x1411e: call 0x138e0
0x14123: add rsp,0x18
0x14127: ret 
0x14150: sub rsp,0x8
0x14154: push 0x1
0x14156: push qword ptr [rsp+0x20]
0x1415a: push qword ptr [rsp+0x20]
0x1415e: push 0x0
0x14160: call 0x13d60
0x14165: add rsp,0x28
0x14169: ret 
0x14170: sub rsp,0x8
0x14174: push 0x0
0x14176: push qword ptr [rsp+0x28]
0x1417a: push qword ptr [rsp+0x28]
0x1417e: push qword ptr [rsp+0x28]
0x14182: call 0x13d60
0x14187: add rsp,0x28
0x1418b: ret 
0x14190: test rdx,rdx
0x14193: jne 0x141b8
0x14195: and byte ptr [rdi+0x38],-0x7
0x14199: mov qword ptr [rsi],0x0
0x141a0: mov qword ptr [rsi+0x10],0x0
0x141a8: mov qword ptr [rsi+0x8],0x0
0x141b0: ret 
0x141b8: movzx eax,byte ptr [rdi+0x38]
0x141bc: and eax,-0x7
0x141bf: or eax,0x2
0x141c2: mov byte ptr [rdi+0x38],al
0x141c5: mov qword ptr [rsi],rdx
0x141c8: mov qword ptr [rsi+0x8],rcx
0x141cc: mov qword ptr [rsi+0x10],r8
0x141d0: ret 
0x141e0: push r12
0x141e2: push rbp
0x141e3: mov rbp,rdi
0x141e6: push rbx
0x141e7: call 0x1930
0x141ec: mov ebx,dword ptr [rbp]
0x141ef: mov rdi,rbp
0x141f2: mov r12,rax
0x141f5: call 0x5e20
0x141fa: and ebx,0x20
0x141fd: test ebx,ebx
0x141ff: jne 0x14218
0x14201: test eax,eax
0x14203: je 0x1420f
0x14205: test r12,r12
0x14208: mov eax,0xffffffff
0x1420d: je 0x14248
0x1420f: pop rbx
0x14210: pop rbp
0x14211: pop r12
0x14213: ret 
0x14218: test eax,eax
0x1421a: jne 0x14238
0x1421c: call 0x18f0
0x14221: mov dword ptr [rax],0x0
0x14227: mov eax,0xffffffff
0x1422c: pop rbx
0x1422d: pop rbp
0x1422e: pop r12
0x14230: ret 
0x14238: pop rbx
0x14239: mov eax,0xffffffff
0x1423e: pop rbp
0x1423f: pop r12
0x14241: ret 
0x14248: call 0x18f0
0x1424d: cmp dword ptr [rax],0x9
0x14250: pop rbx
0x14251: pop rbp
0x14252: pop r12
0x14254: setne al
0x14257: movzx eax,al
0x1425a: neg eax
0x1425c: ret 
0x142c0: sub rsp,0x8
0x142c4: mov edi,0xe
0x142c9: call 0x1b30
0x142ce: test rax,rax
0x142d1: je 0x142f0
0x142d3: cmp byte ptr [rax],0x0
0x142d6: lea rdx,[rip+0x1ddb]
0x142dd: cmove rax,rdx
0x142e1: add rsp,0x8
0x142e5: ret 
0x142f0: lea rax,[rip+0x1dc1]
0x142f7: add rsp,0x8
0x142fb: ret 
0x14300: push r15
0x14302: push r14
0x14304: mov r15,rdx
0x14307: push r13
0x14309: push r12
0x1430b: lea r12,[rip+0x20469e]
0x14312: push rbp
0x14313: lea rbp,[rip+0x20469e]
0x1431a: push rbx
0x1431b: mov r13d,edi
0x1431e: mov r14,rsi
0x14321: sub rbp,r12
0x14324: sub rsp,0x8
0x14328: sar rbp,0x3
0x1432c: call 0x1888
0x14331: test rbp,rbp
0x14334: je 0x14356
0x14336: xor ebx,ebx
0x14338: nop dword ptr [rax+rax]
0x14340: mov rdx,r15
0x14343: mov rsi,r14
0x14346: mov edi,r13d
0x14349: call qword ptr [r12+rbx*8]
0x1434d: add rbx,0x1
0x14351: cmp rbp,rbx
0x14354: jne 0x14340
0x14356: add rsp,0x8
0x1435a: pop rbx
0x1435b: pop rbp
0x1435c: pop r12
0x1435e: pop r13
0x14360: pop r14
0x14362: pop r15
0x14364: ret 
0x14370: rep ret 
