0x1300: sub rsp,0x8
0x1304: mov rax,qword ptr [rip+0x206ccd]
0x130b: test rax,rax
0x130e: je 0x1312
0x1310: call rax
0x1312: add rsp,0x8
0x1316: ret 
0x1326: jmp qword ptr [rip+0x206b2c]
0x1330: jmp qword ptr [rip+0x206b2a]
0x1380: jmp qword ptr [rip+0x206b02]
0x1390: jmp qword ptr [rip+0x206afa]
0x13b0: jmp qword ptr [rip+0x206aea]
0x13f0: jmp qword ptr [rip+0x206aca]
0x1400: jmp qword ptr [rip+0x206ac2]
0x1420: jmp qword ptr [rip+0x206ab2]
0x1450: jmp qword ptr [rip+0x206a9a]
0x1460: jmp qword ptr [rip+0x206a92]
0x1490: jmp qword ptr [rip+0x206a7a]
0x14b0: jmp qword ptr [rip+0x206a6a]
0x14d0: jmp qword ptr [rip+0x206a5a]
0x14e0: jmp qword ptr [rip+0x206a52]
0x14f0: jmp qword ptr [rip+0x206a4a]
0x1500: jmp qword ptr [rip+0x206a42]
0x1510: jmp qword ptr [rip+0x206a3a]
0x1520: jmp qword ptr [rip+0x206a32]
0x1570: jmp qword ptr [rip+0x206a0a]
0x15d0: jmp qword ptr [rip+0x2069da]
0x15e0: jmp qword ptr [rip+0x2069d2]
0x15f0: jmp qword ptr [rip+0x2069ca]
0x1600: jmp qword ptr [rip+0x2069e2]
0x17bb: nop dword ptr [rax+rax]
0x17fb: nop dword ptr [rax+rax]
0x184b: lea rsi,[rip+0x381c]
0x1852: mov edx,0x5
0x1857: xor edi,edi
0x1859: call 0x13d0
0x185e: mov esi,dword ptr [r12]
0x1862: mov rdx,rax
0x1865: mov edi,0x7d
0x186a: xor eax,eax
0x186c: call 0x1560
0x18ba: mov rax,qword ptr [rip+0x2067ff]
0x18c1: test byte ptr [rax],0x20
0x18c4: je 0x18cd
0x18c6: mov ebx,0x7d
0x18cb: jmp 0x190e
0x18f4: mov esi,dword ptr [r12]
0x18f8: lea rdx,[rip+0x3b91]
0x18ff: mov rcx,rax
0x1902: xor edi,edi
0x1904: xor eax,eax
0x1906: add ebx,0x7e
0x1909: call 0x1560
0x194a: lea rsi,[rip+0x371d]
0x1951: mov edx,0x5
0x1956: xor edi,edi
0x1958: call 0x13d0
0x195d: mov esi,dword ptr [r13]
0x1961: mov rdx,rax
0x1964: mov edi,0x7d
0x1969: xor eax,eax
0x196b: call 0x1560
0x1989: xor edi,edi
0x198b: jmp 0x18b0
0x1997: call 0x1400
0x19a4: lea rsi,[rip+0x36ad]
0x19ab: mov rbx,rax
0x19ae: mov edx,0x5
0x19b3: xor edi,edi
0x19b5: call 0x13d0
0x19ba: mov rcx,rbx
0x19bd: mov rdx,rax
0x19c0: xor esi,esi
0x19c2: mov edi,0x7d
0x19c7: xor eax,eax
0x19c9: call 0x1560
0x19ce: nop 
0x19fa: hlt 
0x19fb: nop dword ptr [rax+rax]
0x1a00: lea rdi,[rip+0x206679]
0x1a07: push rbp
0x1a08: lea rax,[rip+0x206671]
0x1a0f: cmp rax,rdi
0x1a12: mov rbp,rsp
0x1a15: je 0x1a30
0x1a17: mov rax,qword ptr [rip+0x2065aa]
0x1a1e: test rax,rax
0x1a21: je 0x1a30
0x1a23: pop rbp
0x1a24: jmp rax
0x1a30: pop rbp
0x1a31: ret 
0x1a40: lea rdi,[rip+0x206639]
0x1a47: lea rsi,[rip+0x206632]
0x1a4e: push rbp
0x1a4f: sub rsi,rdi
0x1a52: mov rbp,rsp
0x1a55: sar rsi,0x3
0x1a59: mov rax,rsi
0x1a5c: shr rax,0x3f
0x1a60: add rsi,rax
0x1a63: sar rsi, 1
0x1a66: je 0x1a80
0x1a68: mov rax,qword ptr [rip+0x206571]
0x1a6f: test rax,rax
0x1a72: je 0x1a80
0x1a74: pop rbp
0x1a75: jmp rax
0x1a80: pop rbp
0x1a81: ret 
0x1aa1: push rbp
0x1aa2: mov rbp,rsp
0x1aa5: je 0x1ab3
0x1aa7: mov rdi,qword ptr [rip+0x20655a]
0x1aae: call 0x1600
0x1ab3: call 0x1a00
0x1ab8: mov byte ptr [rip+0x206609],0x1
0x1abf: pop rbp
0x1ac0: ret 
0x1ad0: push rbp
0x1ad1: mov rbp,rsp
0x1ad4: pop rbp
0x1ad5: jmp 0x1a40
0x1ea0: mov qword ptr [rip+0x206231],rdi
0x1ea7: ret 
0x1eb0: mov byte ptr [rip+0x206219],dil
0x1eb7: ret 
0x1ec0: push rbp
0x1ec1: push rbx
0x1ec2: sub rsp,0x8
0x1ec6: mov rdi,qword ptr [rip+0x2061bb]
0x1ecd: call 0x4ca0
0x1ed2: test eax,eax
0x1ed4: je 0x1eec
0x1ed6: call 0x1350
0x1edb: cmp byte ptr [rip+0x2061ee],0x0
0x1ee2: mov rbx,rax
0x1ee5: je 0x1f03
0x1ee7: cmp dword ptr [rax],0x20
0x1eea: jne 0x1f03
0x1eec: mov rdi,qword ptr [rip+0x2061cd]
0x1ef3: call 0x4ca0
0x1ef8: test eax,eax
0x1efa: jne 0x1f42
0x1efc: add rsp,0x8
0x1f00: pop rbx
0x1f01: pop rbp
0x1f02: ret 
0x1f03: lea rsi,[rip+0x3576]
0x1f0a: xor edi,edi
0x1f0c: mov edx,0x5
0x1f11: call 0x13d0
0x1f16: mov rdi,qword ptr [rip+0x2061bb]
0x1f1d: mov rbp,rax
0x1f20: test rdi,rdi
0x1f23: je 0x1f4d
0x1f25: call 0x3a80
0x1f2a: mov esi,dword ptr [rbx]
0x1f2c: lea rdx,[rip+0x3559]
0x1f33: mov rcx,rax
0x1f36: mov r8,rbp
0x1f39: xor edi,edi
0x1f3b: xor eax,eax
0x1f3d: call 0x1560
0x1f42: mov edi,dword ptr [rip+0x2060d0]
0x1f48: call 0x1380
0x1f4d: mov esi,dword ptr [rbx]
0x1f4f: lea rdx,[rip+0x353a]
0x1f56: mov rcx,rax
0x1f59: xor edi,edi
0x1f5b: xor eax,eax
0x1f5d: call 0x1560
0x1f62: jmp 0x1f42
0x200f: nop 
0x2010: push rbp
0x2011: push rbx
0x2012: mov rbp,rdi
0x2015: mov ebx,esi
0x2017: sub rsp,0x8
0x201b: call 0x4d80
0x2020: movzx edx,byte ptr [rax]
0x2023: and edx,-0x21
0x2026: cmp dl,0x55
0x2029: je 0x20a0
0x202b: cmp dl,0x47
0x202e: je 0x2050
0x2030: lea rax,[rip+0x34b4]
0x2037: lea rdx,[rip+0x34af]
0x203e: cmp ebx,0x9
0x2041: cmovne rax,rdx
0x2045: add rsp,0x8
0x2049: pop rbx
0x204a: pop rbp
0x204b: ret 
0x2050: movzx edx,byte ptr [rax+0x1]
0x2054: and edx,-0x21
0x2057: cmp dl,0x42
0x205a: jne 0x2030
0x205c: cmp byte ptr [rax+0x2],0x31
0x2060: jne 0x2030
0x2062: cmp byte ptr [rax+0x3],0x38
0x2066: jne 0x2030
0x2068: cmp byte ptr [rax+0x4],0x30
0x206c: jne 0x2030
0x206e: cmp byte ptr [rax+0x5],0x33
0x2072: jne 0x2030
0x2074: cmp byte ptr [rax+0x6],0x30
0x2078: jne 0x2030
0x207a: cmp byte ptr [rax+0x7],0x0
0x207e: jne 0x2030
0x2080: cmp byte ptr [rbp],0x60
0x2084: lea rax,[rip+0x3459]
0x208b: lea rdx,[rip+0x3456]
0x2092: cmovne rax,rdx
0x2096: add rsp,0x8
0x209a: pop rbx
0x209b: pop rbp
0x209c: ret 
0x20a0: movzx edx,byte ptr [rax+0x1]
0x20a4: and edx,-0x21
0x20a7: cmp dl,0x54
0x20aa: jne 0x2030
0x20ac: movzx edx,byte ptr [rax+0x2]
0x20b0: and edx,-0x21
0x20b3: cmp dl,0x46
0x20b6: jne 0x2030
0x20bc: cmp byte ptr [rax+0x3],0x2d
0x20c0: jne 0x2030
0x20c6: cmp byte ptr [rax+0x4],0x38
0x20ca: jne 0x2030
0x20d0: cmp byte ptr [rax+0x5],0x0
0x20d4: jne 0x2030
0x20da: cmp byte ptr [rbp],0x60
0x20de: lea rax,[rip+0x33f7]
0x20e5: lea rdx,[rip+0x33f4]
0x20ec: cmovne rax,rdx
0x20f0: add rsp,0x8
0x20f4: pop rbx
0x20f5: pop rbp
0x20f6: ret 
0x21d3: xor r11d,r11d
0x21d6: mov rax,rbp
0x21d9: mov r8d,r12d
0x21dc: mov rbp,r11
0x21df: mov r11,rax
0x21e2: nop word ptr [rax+rax]
0x21e8: cmp r11,rbp
0x21eb: setne r12b
0x21ef: cmp r11,-0x1
0x21f3: jne 0x2202
0x21f5: mov rax,qword ptr [rsp+0x10]
0x21fa: cmp byte ptr [rax+rbp],0x0
0x21fe: setne r12b
0x2202: test r12b,r12b
0x2205: je 0x2860
0x220b: cmp dword ptr [rsp+0x8],0x2
0x2210: mov rdi,qword ptr [rsp+0x10]
0x2215: lea r9,[rdi+rbp]
0x2219: setne al
0x221c: and al,byte ptr [rsp+0xd]
0x2220: mov r10d,eax
0x2223: je 0x22d0
0x2229: mov rax,qword ptr [rsp+0x18]
0x222e: test rax,rax
0x2231: je 0x2660
0x2237: cmp r11,-0x1
0x223b: lea rbx,[rbp+rax]
0x2240: jne 0x2270
0x2242: cmp rax,0x1
0x2246: jbe 0x2270
0x2248: mov byte ptr [rsp+0x38],r8b
0x224d: mov byte ptr [rsp+0x30],r10b
0x2252: mov qword ptr [rsp+0x28],r9
0x2257: call 0x13f0
0x225c: movzx r8d,byte ptr [rsp+0x38]
0x2262: movzx r10d,byte ptr [rsp+0x30]
0x2268: mov r11,rax
0x226b: mov r9,qword ptr [rsp+0x28]
0x2270: cmp rbx,r11
0x2273: mov byte ptr [rsp+0x28],r10b
0x2278: ja 0x2830
0x227e: mov rdx,qword ptr [rsp+0x18]
0x2283: mov rsi,qword ptr [rsp+0x48]
0x2288: mov rdi,r9
0x228b: mov qword ptr [rsp+0x40],r11
0x2290: mov byte ptr [rsp+0x38],r8b
0x2295: mov qword ptr [rsp+0x30],r9
0x229a: call 0x1490
0x229f: test eax,eax
0x22a1: mov r9,qword ptr [rsp+0x30]
0x22a6: movzx r8d,byte ptr [rsp+0x38]
0x22ac: mov r11,qword ptr [rsp+0x40]
0x22b1: jne 0x2830
0x22b7: cmp byte ptr [rsp+0xf],0x0
0x22bc: movzx r10d,byte ptr [rsp+0x28]
0x22c2: jne 0x3245
0x22c8: nop dword ptr [rax+rax]
0x22d0: movzx ebx,byte ptr [r9]
0x22d4: cmp bl,0x7e
0x22d7: ja 0x25f8
0x22dd: lea rcx,[rip+0x3288]
0x22e4: movzx edx,bl
0x22e7: movsxd rax,dword ptr [rcx+rdx*4]
0x22eb: add rax,rcx
0x22ee: jmp rax
0x2328: cmp byte ptr [rsp+0xd],0x1
0x232d: jne 0x2442
0x2333: test dl,dl
0x2335: jne 0x2442
0x233b: mov rsi,qword ptr [rsp+0x20]
0x2340: test rsi,rsi
0x2343: je 0x2359
0x2345: mov edx,ebx
0x2347: shr dl,0x5
0x234a: movzx edx,dl
0x234d: mov edx,dword ptr [rsi+rdx*4]
0x2350: btl edx,ebx
0x2353: jb 0x24a3
0x2359: test r10b,r10b
0x235c: jne 0x24a3
0x2362: xor eax,0x1
0x2365: add rbp,0x1
0x2369: and eax,r8d
0x236c: test al,al
0x236e: je 0x2390
0x2370: cmp r13,r15
0x2373: jbe 0x237a
0x2375: mov byte ptr [r14+r15],0x27
0x237a: lea rax,[r15+0x1]
0x237e: cmp r13,rax
0x2381: jbe 0x2389
0x2383: mov byte ptr [r14+r15+0x1],0x27
0x2389: add r15,0x2
0x238d: xor r8d,r8d
0x2390: cmp r15,r13
0x2393: jae 0x2399
0x2395: mov byte ptr [r14+r15],bl
0x2399: movzx edi,byte ptr [rsp+0xe]
0x239e: add r15,0x1
0x23a2: mov eax,0x0
0x23a7: test r12b,r12b
0x23aa: cmove edi,eax
0x23ad: mov byte ptr [rsp+0xe],dil
0x23b2: jmp 0x21e8
0x2442: cmp byte ptr [rsp+0xf],0x0
0x2447: jne 0x233b
0x244d: jmp 0x2359
0x24a3: cmp dword ptr [rsp+0x8],0x2
0x24a8: sete dl
0x24ab: cmp byte ptr [rsp+0xf],0x0
0x24b0: mov eax,edx
0x24b2: jne 0x2d08
0x24b8: mov eax,r8d
0x24bb: xor eax,0x1
0x24be: and al,dl
0x24c0: je 0x24f1
0x24c2: cmp r13,r15
0x24c5: jbe 0x24cc
0x24c7: mov byte ptr [r14+r15],0x27
0x24cc: lea rdx,[r15+0x1]
0x24d0: cmp r13,rdx
0x24d3: jbe 0x24db
0x24d5: mov byte ptr [r14+r15+0x1],0x24
0x24db: lea rdx,[r15+0x2]
0x24df: cmp r13,rdx
0x24e2: jbe 0x24ea
0x24e4: mov byte ptr [r14+r15+0x2],0x27
0x24ea: add r15,0x3
0x24ee: mov r8d,eax
0x24f1: cmp r13,r15
0x24f4: jbe 0x24fb
0x24f6: mov byte ptr [r14+r15],0x5c
0x24fb: add r15,0x1
0x24ff: add rbp,0x1
0x2503: jmp 0x2390
0x25f0: xor r10d,r10d
0x25f3: nop dword ptr [rax+rax]
0x25f8: cmp qword ptr [rsp+0x58],0x1
0x25fe: jne 0x29a8
0x2604: mov qword ptr [rsp+0x38],r11
0x2609: mov byte ptr [rsp+0x30],r8b
0x260e: mov byte ptr [rsp+0x28],r10b
0x2613: call 0x15f0
0x2618: mov rcx,qword ptr [rax]
0x261b: movzx edx,bl
0x261e: movzx r10d,byte ptr [rsp+0x28]
0x2624: movzx r8d,byte ptr [rsp+0x30]
0x262a: mov r11,qword ptr [rsp+0x38]
0x262f: mov edi,0x1
0x2634: movzx eax,word ptr [rcx+rdx*2]
0x2638: and ax,0x4000
0x263c: setne r12b
0x2640: sete al
0x2643: and al,byte ptr [rsp+0xd]
0x2647: test al,al
0x2649: jne 0x2fe1
0x264f: cmp dword ptr [rsp+0x8],0x2
0x2654: sete dl
0x2657: jmp 0x2328
0x2660: movzx ebx,byte ptr [r9]
0x2664: cmp bl,0x7e
0x2667: ja 0x25f0
0x2669: lea rcx,[rip+0x30f8]
0x2670: movzx edx,bl
0x2673: movsxd rax,dword ptr [rcx+rdx*4]
0x2677: add rax,rcx
0x267a: jmp rax
0x2830: xor r10d,r10d
0x2833: jmp 0x22d0
0x2860: cmp dword ptr [rsp+0x8],0x2
0x2865: movzx ebx,byte ptr [rsp+0xf]
0x286a: mov r12d,r8d
0x286d: mov rbp,r11
0x2870: sete dl
0x2873: mov eax,ebx
0x2875: test r15,r15
0x2878: sete cl
0x287b: and eax,edx
0x287d: and al,cl
0x287f: jne 0x32e6
0x2885: mov eax,ebx
0x2887: xor eax,0x1
0x288a: and dl,al
0x288c: je 0x31fc
0x2892: cmp byte ptr [rsp+0x7c],0x0
0x2897: je 0x31fa
0x289d: cmp byte ptr [rsp+0xe],0x0
0x28a2: jne 0x329d
0x28a8: test r13,r13
0x28ab: sete al
0x28ae: cmp qword ptr [rsp+0x50],0x0
0x28b4: setne dl
0x28b7: and al,dl
0x28b9: je 0x32dc
0x28bf: mov r13,qword ptr [rsp+0x50]
0x28c4: lea rbx,[rip+0x2c22]
0x28cb: mov byte ptr [r14],0x27
0x28cf: mov dword ptr [rsp+0x8],0x2
0x28d7: mov r15d,0x1
0x28dd: mov qword ptr [rsp+0x18],0x1
0x28e6: mov byte ptr [rsp+0xf],0x0
0x28eb: mov qword ptr [rsp+0x48],rbx
0x28f0: mov byte ptr [rsp+0x7c],al
0x28f4: jmp 0x21d3
0x29a8: lea rax,[rsp+0xa0]
0x29b0: cmp r11,-0x1
0x29b4: mov qword ptr [rsp+0xa0],0x0
0x29c0: mov qword ptr [rsp+0x28],rax
0x29c5: jne 0x29f4
0x29c7: mov rdi,qword ptr [rsp+0x10]
0x29cc: mov byte ptr [rsp+0x40],r8b
0x29d1: mov byte ptr [rsp+0x38],r10b
0x29d6: mov qword ptr [rsp+0x30],r9
0x29db: call 0x13f0
0x29e0: movzx r8d,byte ptr [rsp+0x40]
0x29e6: movzx r10d,byte ptr [rsp+0x38]
0x29ec: mov r11,rax
0x29ef: mov r9,qword ptr [rsp+0x30]
0x29f4: lea rax,[rsp+0x9c]
0x29fc: xor ecx,ecx
0x29fe: mov byte ptr [rsp+0x7e],bl
0x2a02: mov byte ptr [rsp+0x7d],r8b
0x2a07: mov rbx,rcx
0x2a0a: mov qword ptr [rsp+0x88],r9
0x2a12: mov qword ptr [rsp+0x38],rax
0x2a17: mov byte ptr [rsp+0x7f],r10b
0x2a1c: mov qword ptr [rsp+0x80],r15
0x2a24: mov qword ptr [rsp+0x40],r14
0x2a29: mov qword ptr [rsp+0x70],r13
0x2a2e: mov qword ptr [rsp+0x30],r11
0x2a33: mov rax,qword ptr [rsp+0x10]
0x2a38: lea r14,[rbp+rbx]
0x2a3d: mov rdx,qword ptr [rsp+0x30]
0x2a42: mov rcx,qword ptr [rsp+0x28]
0x2a47: mov rdi,qword ptr [rsp+0x38]
0x2a4c: lea r13,[rax+r14]
0x2a50: sub rdx,r14
0x2a53: mov rsi,r13
0x2a56: call 0x4c10
0x2a5b: test rax,rax
0x2a5e: mov r15,rax
0x2a61: je 0x2ab1
0x2a63: cmp rax,-0x1
0x2a67: je 0x3085
0x2a6d: cmp rax,-0x2
0x2a71: je 0x3011
0x2a77: cmp dword ptr [rsp+0x8],0x2
0x2a7c: sete al
0x2a7f: and al,byte ptr [rsp+0xf]
0x2a83: jne 0x2c20
0x2a89: mov edi,dword ptr [rsp+0x9c]
0x2a90: call 0x15e0
0x2a95: mov rdi,qword ptr [rsp+0x28]
0x2a9a: test eax,eax
0x2a9c: mov eax,0x0
0x2aa1: cmove r12d,eax
0x2aa5: add rbx,r15
0x2aa8: call 0x15d0
0x2aad: test eax,eax
0x2aaf: je 0x2a33
0x2ab1: mov edx,r12d
0x2ab4: mov rdi,rbx
0x2ab7: movzx r8d,byte ptr [rsp+0x7d]
0x2abd: xor edx,0x1
0x2ac0: movzx ebx,byte ptr [rsp+0x7e]
0x2ac5: movzx r10d,byte ptr [rsp+0x7f]
0x2acb: and dl,byte ptr [rsp+0xd]
0x2acf: mov r15,qword ptr [rsp+0x80]
0x2ad7: mov r14,qword ptr [rsp+0x40]
0x2adc: mov r13,qword ptr [rsp+0x70]
0x2ae1: mov r11,qword ptr [rsp+0x30]
0x2ae6: cmp rdi,0x1
0x2aea: jbe 0x30eb
0x2af0: mov rcx,rdi
0x2af3: xor esi,esi
0x2af5: movzx r9d,byte ptr [rsp+0xf]
0x2afb: add rcx,rbp
0x2afe: mov rdi,qword ptr [rsp+0x10]
0x2b03: jmp 0x2bbe
0x2b10: cmp dword ptr [rsp+0x8],0x2
0x2b15: sete al
0x2b18: test r9b,r9b
0x2b1b: jne 0x2fd0
0x2b21: mov esi,r8d
0x2b24: xor esi,0x1
0x2b27: and al,sil
0x2b2a: je 0x2b5b
0x2b2c: cmp r13,r15
0x2b2f: jbe 0x2b36
0x2b31: mov byte ptr [r14+r15],0x27
0x2b36: lea rsi,[r15+0x1]
0x2b3a: cmp r13,rsi
0x2b3d: jbe 0x2b45
0x2b3f: mov byte ptr [r14+r15+0x1],0x24
0x2b45: lea rsi,[r15+0x2]
0x2b49: cmp r13,rsi
0x2b4c: jbe 0x2b54
0x2b4e: mov byte ptr [r14+r15+0x2],0x27
0x2b54: add r15,0x3
0x2b58: mov r8d,eax
0x2b5b: cmp r13,r15
0x2b5e: jbe 0x2b65
0x2b60: mov byte ptr [r14+r15],0x5c
0x2b65: lea rax,[r15+0x1]
0x2b69: cmp r13,rax
0x2b6c: jbe 0x2b7b
0x2b6e: mov eax,ebx
0x2b70: shr al,0x6
0x2b73: add eax,0x30
0x2b76: mov byte ptr [r14+r15+0x1],al
0x2b7b: lea rax,[r15+0x2]
0x2b7f: cmp r13,rax
0x2b82: jbe 0x2b94
0x2b84: mov eax,ebx
0x2b86: shr al,0x3
0x2b89: and eax,0x7
0x2b8c: add eax,0x30
0x2b8f: mov byte ptr [r14+r15+0x2],al
0x2b94: and ebx,0x7
0x2b97: add rbp,0x1
0x2b9b: add r15,0x3
0x2b9f: add ebx,0x30
0x2ba2: cmp rbp,rcx
0x2ba5: jae 0x2390
0x2bab: mov esi,edx
0x2bad: cmp r13,r15
0x2bb0: jbe 0x2bb6
0x2bb2: mov byte ptr [r14+r15],bl
0x2bb6: movzx ebx,byte ptr [rdi+rbp]
0x2bba: add r15,0x1
0x2bbe: test dl,dl
0x2bc0: jne 0x2b10
0x2bc6: mov eax,esi
0x2bc8: xor eax,0x1
0x2bcb: and eax,r8d
0x2bce: test r10b,r10b
0x2bd1: je 0x2be1
0x2bd3: cmp r13,r15
0x2bd6: jbe 0x2bdd
0x2bd8: mov byte ptr [r14+r15],0x5c
0x2bdd: add r15,0x1
0x2be1: add rbp,0x1
0x2be5: cmp rbp,rcx
0x2be8: jae 0x236c
0x2bee: test al,al
0x2bf0: je 0x2fee
0x2bf6: cmp r13,r15
0x2bf9: jbe 0x2c00
0x2bfb: mov byte ptr [r14+r15],0x27
0x2c00: lea rax,[r15+0x1]
0x2c04: cmp r13,rax
0x2c07: jbe 0x2c0f
0x2c09: mov byte ptr [r14+r15+0x1],0x27
0x2c0f: add r15,0x2
0x2c13: xor r10d,r10d
0x2c16: xor r8d,r8d
0x2c19: jmp 0x2bad
0x2c20: cmp r15,0x1
0x2c24: je 0x2a89
0x2c2a: mov rdi,qword ptr [rsp+0x10]
0x2c2f: lea rcx,[rdi+r15]
0x2c33: lea rdx,[rdi+r14+0x1]
0x2c38: lea r8,[rcx+r14]
0x2c3c: jmp 0x2c4d
0x2c40: add rdx,0x1
0x2c44: cmp r8,rdx
0x2c47: je 0x2a89
0x2c4d: movzx ecx,byte ptr [rdx]
0x2c50: sub ecx,0x5b
0x2c53: cmp cl,0x21
0x2c56: ja 0x2c40
0x2c58: mov esi,0x1
0x2c5d: shl rsi,cl
0x2c60: mov rcx,rsi
0x2c63: movabsq rsi,0x20000002b
0x2c6d: test rcx,rsi
0x2c70: je 0x2c40
0x2c72: mov r14,qword ptr [rsp+0x40]
0x2c77: mov r13,qword ptr [rsp+0x70]
0x2c7c: mov rbp,qword ptr [rsp+0x30]
0x2c81: mov dword ptr [rsp+0x8],0x2
0x2c89: cmp byte ptr [rsp+0xd],0x0
0x2c8e: je 0x2ca0
0x2c90: test al,al
0x2c92: mov eax,0x4
0x2c97: cmove eax,dword ptr [rsp+0x8]
0x2c9c: mov dword ptr [rsp+0x8],eax
0x2ca0: sub rsp,0x8
0x2ca4: mov rcx,rbp
0x2ca7: mov rsi,r13
0x2caa: push qword ptr [rsp+0x68]
0x2cae: push qword ptr [rsp+0x78]
0x2cb2: mov rdi,r14
0x2cb5: push 0x0
0x2cb7: mov r9d,dword ptr [rsp+0x98]
0x2cbf: mov r8d,dword ptr [rsp+0x28]
0x2cc4: mov rdx,qword ptr [rsp+0x30]
0x2cc9: and r9d,-0x3
0x2ccd: call 0x2100
0x2cd2: add rsp,0x20
0x2cd6: mov r15,rax
0x2cd9: mov rbx,qword ptr [rsp+0xa8]
0x2ce1: xor rbx,qword ptr fs:0x28
0x2cea: mov rax,r15
0x2ced: jne 0x32f3
0x2cf3: add rsp,0xb8
0x2cfa: pop rbx
0x2cfb: pop rbp
0x2cfc: pop r12
0x2cfe: pop r13
0x2d00: pop r14
0x2d02: pop r15
0x2d04: ret 
0x2d08: mov rbp,r11
0x2d0b: jmp 0x2c89
0x2d71: test r13,r13
0x2d74: jne 0x330a
0x2d7a: lea rax,[rip+0x276c]
0x2d81: mov qword ptr [rsp+0x50],0x0
0x2d8a: mov byte ptr [rsp+0xe],0x1
0x2d8f: mov byte ptr [rsp+0x7c],0x0
0x2d94: xor r12d,r12d
0x2d97: mov byte ptr [rsp+0xf],0x0
0x2d9c: mov qword ptr [rsp+0x18],0x1
0x2da5: mov qword ptr [rsp+0x48],rax
0x2daa: mov r15d,0x1
0x2db0: mov dword ptr [rsp+0x8],0x2
0x2db8: jmp 0x21d3
0x2fd0: movzx ebx,byte ptr [rsp+0xf]
0x2fd5: mov rbp,r11
0x2fd8: mov byte ptr [rsp+0xd],bl
0x2fdc: jmp 0x2c89
0x2fe1: movzx edx,byte ptr [rsp+0xd]
0x2fe6: xor r12d,r12d
0x2fe9: jmp 0x2af0
0x2fee: xor r10d,r10d
0x2ff1: jmp 0x2bad
0x3011: mov r11,qword ptr [rsp+0x30]
0x3016: mov rsi,r14
0x3019: mov rcx,r13
0x301c: mov rax,rbx
0x301f: mov rdi,rbx
0x3022: movzx r8d,byte ptr [rsp+0x7d]
0x3028: movzx ebx,byte ptr [rsp+0x7e]
0x302d: mov r9,qword ptr [rsp+0x88]
0x3035: cmp rsi,r11
0x3038: movzx r10d,byte ptr [rsp+0x7f]
0x303e: mov r15,qword ptr [rsp+0x80]
0x3046: mov r14,qword ptr [rsp+0x40]
0x304b: mov r13,qword ptr [rsp+0x70]
0x3050: jae 0x3078
0x3052: cmp byte ptr [rcx],0x0
0x3055: jne 0x3067
0x3057: jmp 0x3078
0x3060: cmp byte ptr [r9+rax],0x0
0x3065: je 0x3075
0x3067: add rax,0x1
0x306b: lea rdx,[rbp+rax]
0x3070: cmp r11,rdx
0x3073: ja 0x3060
0x3075: mov rdi,rax
0x3078: movzx edx,byte ptr [rsp+0xd]
0x307d: xor r12d,r12d
0x3080: jmp 0x2ae6
0x3085: mov rdi,rbx
0x3088: movzx r8d,byte ptr [rsp+0x7d]
0x308e: movzx ebx,byte ptr [rsp+0x7e]
0x3093: movzx r10d,byte ptr [rsp+0x7f]
0x3099: mov r15,qword ptr [rsp+0x80]
0x30a1: xor r12d,r12d
0x30a4: mov r14,qword ptr [rsp+0x40]
0x30a9: mov r13,qword ptr [rsp+0x70]
0x30ae: mov r11,qword ptr [rsp+0x30]
0x30b3: movzx edx,byte ptr [rsp+0xd]
0x30b8: jmp 0x2ae6
0x30eb: mov eax,edx
0x30ed: jmp 0x2647
0x31fa: mov eax,edx
0x31fc: mov rbx,qword ptr [rsp+0x48]
0x3201: test rbx,rbx
0x3204: je 0x3232
0x3206: test al,al
0x3208: je 0x3232
0x320a: movzx ecx,byte ptr [rbx]
0x320d: mov rax,rbx
0x3210: test cl,cl
0x3212: je 0x3232
0x3214: mov rdx,r15
0x3217: sub rax,r15
0x321a: cmp r13,rdx
0x321d: jbe 0x3223
0x321f: mov byte ptr [r14+rdx],cl
0x3223: add rdx,0x1
0x3227: movzx ecx,byte ptr [rax+rdx]
0x322b: test cl,cl
0x322d: jne 0x321a
0x322f: mov r15,rdx
0x3232: cmp r13,r15
0x3235: jbe 0x2cd9
0x323b: mov byte ptr [r14+r15],0x0
0x3240: jmp 0x2cd9
0x3245: cmp dword ptr [rsp+0x8],0x2
0x324a: movzx ebx,byte ptr [rsp+0xf]
0x324f: mov rbp,r11
0x3252: sete al
0x3255: mov byte ptr [rsp+0xd],bl
0x3259: jmp 0x2c89
0x329d: sub rsp,0x8
0x32a1: mov r8d,0x5
0x32a7: mov rcx,r11
0x32aa: push qword ptr [rsp+0x68]
0x32ae: push qword ptr [rsp+0x78]
0x32b2: mov rdi,r14
0x32b5: push qword ptr [rsp+0x38]
0x32b9: mov r9d,dword ptr [rsp+0x98]
0x32c1: mov rdx,qword ptr [rsp+0x30]
0x32c6: mov rsi,qword ptr [rsp+0x70]
0x32cb: call 0x2100
0x32d0: add rsp,0x20
0x32d4: mov r15,rax
0x32d7: jmp 0x2cd9
0x32dc: movzx eax,byte ptr [rsp+0x7c]
0x32e1: jmp 0x31fc
0x32e6: mov dword ptr [rsp+0x8],0x2
0x32ee: jmp 0x2c89
0x32f3: call 0x1400
0x32f8: mov byte ptr [rsp+0xd],0x0
0x32fd: jmp 0x2d71
0x330a: mov byte ptr [rsp+0xe],0x1
0x330f: xor eax,eax
0x3311: xor r12d,r12d
0x3314: mov qword ptr [rsp+0x50],0x0
0x331d: jmp 0x28c4
0x3334: nop 
0x3336: nop word ptr cs:[rax+rax]
0x342c: add rsp,0x20
0x3430: mov r11,qword ptr [rsp+0x10]
0x3435: cmp r11,rax
0x3438: ja 0x34a1
0x343a: lea rsi,[rax+0x1]
0x343e: lea rax,[rip+0x204cbb]
0x3445: cmp r12,rax
0x3448: mov qword ptr [rbx],rsi
0x344b: je 0x345f
0x344d: mov rdi,r12
0x3450: mov qword ptr [rsp+0x10],rsi
0x3455: call 0x1330
0x345a: mov rsi,qword ptr [rsp+0x10]
0x345f: mov rdi,rsi
0x3462: mov qword ptr [rsp+0x10],rsi
0x3467: call 0x42c0
0x346c: sub rsp,0x8
0x3470: mov qword ptr [rbx+0x8],rax
0x3474: mov r8d,dword ptr [rbp]
0x3478: push qword ptr [rbp+0x30]
0x347b: push qword ptr [rbp+0x28]
0x347e: mov rcx,r14
0x3481: push r15
0x3483: mov r9d,dword ptr [rsp+0x3c]
0x3488: mov rdi,rax
0x348b: mov rdx,qword ptr [rsp+0x28]
0x3490: mov rsi,qword ptr [rsp+0x30]
0x3495: mov r12,rax
0x3498: call 0x2100
0x349d: add rsp,0x20
0x34a1: mov eax,dword ptr [rsp+0x18]
0x34a5: mov dword ptr [r13],eax
0x34a9: add rsp,0x28
0x34ad: mov rax,r12
0x34b0: pop rbx
0x34b1: pop rbp
0x34b2: pop r12
0x34b4: pop r13
0x34b6: pop r14
0x34b8: pop r15
0x34ba: ret 
0x34e1: call 0x1340
0x34e6: call 0x4510
0x34eb: nop dword ptr [rax+rax]
0x34f0: push r12
0x34f2: push rbp
0x34f3: push rbx
0x34f4: mov rbx,rdi
0x34f7: call 0x1350
0x34fc: mov r12d,dword ptr [rax]
0x34ff: mov rbp,rax
0x3502: lea rax,[rip+0x204cf7]
0x3509: test rbx,rbx
0x350c: mov esi,0x38
0x3511: cmove rbx,rax
0x3515: mov rdi,rbx
0x3518: call 0x44c0
0x351d: mov dword ptr [rbp],r12d
0x3521: pop rbx
0x3522: pop rbp
0x3523: pop r12
0x3525: ret 
0x3530: lea rax,[rip+0x204cc9]
0x3537: test rdi,rdi
0x353a: cmove rdi,rax
0x353e: mov eax,dword ptr [rdi]
0x3540: ret 
0x3550: lea rax,[rip+0x204ca9]
0x3557: test rdi,rdi
0x355a: cmove rdi,rax
0x355e: mov dword ptr [rdi],esi
0x3560: ret 
0x3570: lea rax,[rip+0x204c89]
0x3577: test rdi,rdi
0x357a: mov ecx,esi
0x357c: cmove rdi,rax
0x3580: mov eax,esi
0x3582: and ecx,0x1f
0x3585: shr al,0x5
0x3588: movzx eax,al
0x358b: lea rdi,[rdi+rax*4+0x8]
0x3590: mov esi,dword ptr [rdi]
0x3592: mov eax,esi
0x3594: shr eax,cl
0x3596: xor edx,eax
0x3598: and eax,0x1
0x359b: and edx,0x1
0x359e: shl edx,cl
0x35a0: xor edx,esi
0x35a2: mov dword ptr [rdi],edx
0x35a4: ret 
0x35b0: lea rax,[rip+0x204c49]
0x35b7: test rdi,rdi
0x35ba: cmove rdi,rax
0x35be: mov eax,dword ptr [rdi+0x4]
0x35c1: mov dword ptr [rdi+0x4],esi
0x35c4: ret 
0x35d0: lea rax,[rip+0x204c29]
0x35d7: test rdi,rdi
0x35da: cmove rdi,rax
0x35de: test rsi,rsi
0x35e1: mov dword ptr [rdi],0xa
0x35e7: je 0x35f7
0x35e9: test rdx,rdx
0x35ec: je 0x35f7
0x35ee: mov qword ptr [rdi+0x28],rsi
0x35f2: mov qword ptr [rdi+0x30],rdx
0x35f6: ret 
0x35f7: sub rsp,0x8
0x35fb: call 0x1340
0x3600: push r15
0x3602: push r14
0x3604: lea rax,[rip+0x204bf5]
0x360b: push r13
0x360d: push r12
0x360f: mov r13,rdi
0x3612: push rbp
0x3613: push rbx
0x3614: mov rbx,r8
0x3617: mov r14,rsi
0x361a: mov r15,rdx
0x361d: sub rsp,0x18
0x3621: test r8,r8
0x3624: cmove rbx,rax
0x3628: mov qword ptr [rsp+0x8],rcx
0x362d: call 0x1350
0x3632: mov r12d,dword ptr [rax]
0x3635: mov rbp,rax
0x3638: lea rax,[rbx+0x8]
0x363c: sub rsp,0x8
0x3640: mov r9d,dword ptr [rbx+0x4]
0x3644: push qword ptr [rbx+0x30]
0x3647: mov r8d,dword ptr [rbx]
0x364a: push qword ptr [rbx+0x28]
0x364d: mov rdx,r15
0x3650: push rax
0x3651: mov rcx,qword ptr [rsp+0x28]
0x3656: mov rsi,r14
0x3659: mov rdi,r13
0x365c: call 0x2100
0x3661: mov dword ptr [rbp],r12d
0x3665: add rsp,0x38
0x3669: pop rbx
0x366a: pop rbp
0x366b: pop r12
0x366d: pop r13
0x366f: pop r14
0x3671: pop r15
0x3673: ret 
0x3680: push r15
0x3682: push r14
0x3684: lea rax,[rip+0x204b75]
0x368b: push r13
0x368d: push r12
0x368f: mov r12,rdx
0x3692: push rbp
0x3693: push rbx
0x3694: mov rbx,rcx
0x3697: mov r14,rdi
0x369a: mov r15,rsi
0x369d: sub rsp,0x38
0x36a1: test rcx,rcx
0x36a4: cmove rbx,rax
0x36a8: xor ebp,ebp
0x36aa: call 0x1350
0x36af: test r12,r12
0x36b2: mov r13,rax
0x36b5: mov eax,dword ptr [rax]
0x36b7: sete bpl
0x36bb: or ebp,dword ptr [rbx+0x4]
0x36be: lea r10,[rbx+0x8]
0x36c2: sub rsp,0x8
0x36c6: mov r8d,dword ptr [rbx]
0x36c9: mov rcx,r15
0x36cc: mov dword ptr [rsp+0x14],eax
0x36d0: push qword ptr [rbx+0x30]
0x36d3: mov rdx,r14
0x36d6: push qword ptr [rbx+0x28]
0x36d9: push r10
0x36db: xor esi,esi
0x36dd: mov r9d,ebp
0x36e0: xor edi,edi
0x36e2: mov qword ptr [rsp+0x40],r10
0x36e7: call 0x2100
0x36ec: lea rsi,[rax+0x1]
0x36f0: mov qword ptr [rsp+0x48],rax
0x36f5: add rsp,0x20
0x36f9: mov rdi,rsi
0x36fc: mov qword ptr [rsp+0x18],rsi
0x3701: call 0x42c0
0x3706: mov qword ptr [rsp+0x10],rax
0x370b: sub rsp,0x8
0x370f: push qword ptr [rbx+0x30]
0x3712: push qword ptr [rbx+0x28]
0x3715: mov r10,qword ptr [rsp+0x38]
0x371a: mov r9d,ebp
0x371d: mov r8d,dword ptr [rbx]
0x3720: mov rcx,r15
0x3723: mov rdx,r14
0x3726: mov rdi,rax
0x3729: push r10
0x372b: mov rsi,qword ptr [rsp+0x38]
0x3730: call 0x2100
0x3735: mov eax,dword ptr [rsp+0x2c]
0x3739: add rsp,0x20
0x373d: test r12,r12
0x3740: mov dword ptr [r13],eax
0x3744: je 0x374f
0x3746: mov r11,qword ptr [rsp+0x28]
0x374b: mov qword ptr [r12],r11
0x374f: mov rax,qword ptr [rsp+0x10]
0x3754: add rsp,0x38
0x3758: pop rbx
0x3759: pop rbp
0x375a: pop r12
0x375c: pop r13
0x375e: pop r14
0x3760: pop r15
0x3762: ret 
0x3770: mov rcx,rdx
0x3773: xor edx,edx
0x3775: jmp 0x3680
0x3780: mov eax,dword ptr [rip+0x2048d2]
0x3786: push r12
0x3788: mov r12,qword ptr [rip+0x2048d1]
0x378f: push rbp
0x3790: push rbx
0x3791: cmp eax,0x1
0x3794: jle 0x37c1
0x3796: sub eax,0x2
0x3799: lea rbx,[r12+0x18]
0x379e: shl rax,0x4
0x37a2: lea rbp,[r12+rax+0x28]
0x37a7: nop word ptr [rax+rax]
0x37b0: mov rdi,qword ptr [rbx]
0x37b3: add rbx,0x10
0x37b7: call 0x1330
0x37bc: cmp rbx,rbp
0x37bf: jne 0x37b0
0x37c1: mov rdi,qword ptr [r12+0x8]
0x37c6: lea rbx,[rip+0x204933]
0x37cd: cmp rdi,rbx
0x37d0: je 0x37e9
0x37d2: call 0x1330
0x37d7: mov qword ptr [rip+0x20488e],0x100
0x37e2: mov qword ptr [rip+0x20488f],rbx
0x37e9: lea rbx,[rip+0x204880]
0x37f0: cmp r12,rbx
0x37f3: je 0x3804
0x37f5: mov rdi,r12
0x37f8: call 0x1330
0x37fd: mov qword ptr [rip+0x20485c],rbx
0x3804: pop rbx
0x3805: mov dword ptr [rip+0x204849],0x1
0x380f: pop rbp
0x3810: pop r12
0x3812: ret 
0x3820: lea rcx,[rip+0x2049d9]
0x3827: mov rdx,-0x1
0x382e: jmp 0x3340
0x3840: lea rcx,[rip+0x2049b9]
0x3847: jmp 0x3340
0x3850: lea rcx,[rip+0x2049a9]
0x3857: mov rsi,rdi
0x385a: mov rdx,-0x1
0x3861: xor edi,edi
0x3863: jmp 0x3340
0x3870: lea rcx,[rip+0x204989]
0x3877: mov rdx,rsi
0x387a: mov rsi,rdi
0x387d: xor edi,edi
0x387f: jmp 0x3340
0x3890: sub rsp,0x48
0x3894: mov rax,rdx
0x3897: mov rdx,qword ptr fs:0x28
0x38a0: mov qword ptr [rsp+0x38],rdx
0x38a5: xor edx,edx
0x38a7: cmp esi,0xa
0x38aa: je 0x3914
0x38ac: mov dword ptr [rsp],esi
0x38af: mov rcx,rsp
0x38b2: mov rdx,-0x1
0x38b9: mov rsi,rax
0x38bc: mov qword ptr [rsp+0x4],0x0
0x38c5: mov qword ptr [rsp+0xc],0x0
0x38ce: mov qword ptr [rsp+0x14],0x0
0x38d7: mov qword ptr [rsp+0x1c],0x0
0x38e0: mov qword ptr [rsp+0x24],0x0
0x38e9: mov qword ptr [rsp+0x2c],0x0
0x38f2: mov dword ptr [rsp+0x34],0x0
0x38fa: call 0x3340
0x38ff: mov rcx,qword ptr [rsp+0x38]
0x3904: xor rcx,qword ptr fs:0x28
0x390d: jne 0x3919
0x390f: add rsp,0x48
0x3913: ret 
0x3914: call 0x1340
0x3919: call 0x1400
0x391e: nop 
0x3920: sub rsp,0x48
0x3924: mov rax,rdx
0x3927: mov rdx,rcx
0x392a: mov rcx,qword ptr fs:0x28
0x3933: mov qword ptr [rsp+0x38],rcx
0x3938: xor ecx,ecx
0x393a: cmp esi,0xa
0x393d: je 0x39a0
0x393f: mov dword ptr [rsp],esi
0x3942: mov rcx,rsp
0x3945: mov rsi,rax
0x3948: mov qword ptr [rsp+0x4],0x0
0x3951: mov qword ptr [rsp+0xc],0x0
0x395a: mov qword ptr [rsp+0x14],0x0
0x3963: mov qword ptr [rsp+0x1c],0x0
0x396c: mov qword ptr [rsp+0x24],0x0
0x3975: mov qword ptr [rsp+0x2c],0x0
0x397e: mov dword ptr [rsp+0x34],0x0
0x3986: call 0x3340
0x398b: mov rdx,qword ptr [rsp+0x38]
0x3990: xor rdx,qword ptr fs:0x28
0x3999: jne 0x39a5
0x399b: add rsp,0x48
0x399f: ret 
0x39a0: call 0x1340
0x39a5: call 0x1400
0x39aa: nop word ptr [rax+rax]
0x39b0: mov rdx,rsi
0x39b3: mov esi,edi
0x39b5: xor edi,edi
0x39b7: jmp 0x3890
0x39c0: mov rcx,rdx
0x39c3: mov rdx,rsi
0x39c6: mov esi,edi
0x39c8: xor edi,edi
0x39ca: jmp 0x3920
0x39d0: sub rsp,0x48
0x39d4: mov ecx,edx
0x39d6: mov rax,qword ptr fs:0x28
0x39df: mov qword ptr [rsp+0x38],rax
0x39e4: xor eax,eax
0x39e6: mov rax,qword ptr [rip+0x204843]
0x39ed: mov r8,rsp
0x39f0: and ecx,0x1f
0x39f3: movdqa xmm0,[rip+0x204805]
0x39fb: mov qword ptr [rsp+0x30],rax
0x3a00: mov eax,edx
0x3a02: movaps [rsp],xmm0
0x3a06: shr al,0x5
0x3a09: movzx eax,al
0x3a0c: lea r9,[r8+rax*4+0x8]
0x3a11: movdqa xmm0,[rip+0x2047f7]
0x3a19: movaps [rsp+0x10],xmm0
0x3a1e: movdqa xmm0,[rip+0x2047fa]
0x3a26: movaps [rsp+0x20],xmm0
0x3a2b: mov edx,dword ptr [r9]
0x3a2e: mov eax,edx
0x3a30: shr eax,cl
0x3a32: not eax
0x3a34: and eax,0x1
0x3a37: shl eax,cl
0x3a39: mov rcx,r8
0x3a3c: xor eax,edx
0x3a3e: mov rdx,rsi
0x3a41: mov rsi,rdi
0x3a44: mov dword ptr [r9],eax
0x3a47: xor edi,edi
0x3a49: call 0x3340
0x3a4e: mov rsi,qword ptr [rsp+0x38]
0x3a53: xor rsi,qword ptr fs:0x28
0x3a5c: jne 0x3a63
0x3a5e: add rsp,0x48
0x3a62: ret 
0x3a63: call 0x1400
0x3a68: nop dword ptr [rax+rax]
0x3a70: movsx edx,sil
0x3a74: mov rsi,-0x1
0x3a7b: jmp 0x39d0
0x3a80: mov edx,0x3a
0x3a85: mov rsi,-0x1
0x3a8c: jmp 0x39d0
0x3aa0: mov edx,0x3a
0x3aa5: jmp 0x39d0
0x3ab0: sub rsp,0x48
0x3ab4: mov rax,rdx
0x3ab7: mov rdx,qword ptr fs:0x28
0x3ac0: mov qword ptr [rsp+0x38],rdx
0x3ac5: xor edx,edx
0x3ac7: cmp esi,0xa
0x3aca: je 0x3b34
0x3acc: mov dword ptr [rsp],esi
0x3acf: mov rcx,rsp
0x3ad2: mov rdx,-0x1
0x3ad9: mov rsi,rax
0x3adc: mov qword ptr [rsp+0x4],0x0
0x3ae5: mov qword ptr [rsp+0xc],0x4000000
0x3aee: mov qword ptr [rsp+0x14],0x0
0x3af7: mov qword ptr [rsp+0x1c],0x0
0x3b00: mov qword ptr [rsp+0x24],0x0
0x3b09: mov qword ptr [rsp+0x2c],0x0
0x3b12: mov dword ptr [rsp+0x34],0x0
0x3b1a: call 0x3340
0x3b1f: mov rcx,qword ptr [rsp+0x38]
0x3b24: xor rcx,qword ptr fs:0x28
0x3b2d: jne 0x3b39
0x3b2f: add rsp,0x48
0x3b33: ret 
0x3b34: call 0x1340
0x3b39: call 0x1400
0x3b3e: nop 
0x3b40: sub rsp,0x48
0x3b44: mov r9,rcx
0x3b47: mov rcx,qword ptr [rip+0x2046e2]
0x3b4e: movdqa xmm0,[rip+0x2046aa]
0x3b56: mov rax,qword ptr fs:0x28
0x3b5f: mov qword ptr [rsp+0x38],rax
0x3b64: xor eax,eax
0x3b66: movaps [rsp],xmm0
0x3b6a: test rsi,rsi
0x3b6d: mov qword ptr [rsp+0x30],rcx
0x3b72: mov dword ptr [rsp],0xa
0x3b79: movdqa xmm0,[rip+0x20468f]
0x3b81: movaps [rsp+0x10],xmm0
0x3b86: movdqa xmm0,[rip+0x204692]
0x3b8e: movaps [rsp+0x20],xmm0
0x3b93: je 0x3bc7
0x3b95: test rdx,rdx
0x3b98: je 0x3bc7
0x3b9a: mov qword ptr [rsp+0x28],rsi
0x3b9f: mov qword ptr [rsp+0x30],rdx
0x3ba4: mov rcx,rsp
0x3ba7: mov rdx,r8
0x3baa: mov rsi,r9
0x3bad: call 0x3340
0x3bb2: mov rdi,qword ptr [rsp+0x38]
0x3bb7: xor rdi,qword ptr fs:0x28
0x3bc0: jne 0x3bcc
0x3bc2: add rsp,0x48
0x3bc6: ret 
0x3bc7: call 0x1340
0x3bcc: call 0x1400
0x3bd1: nop dword ptr [rax+rax]
0x3bd6: nop word ptr cs:[rax+rax]
0x3be0: mov r8,-0x1
0x3be7: jmp 0x3b40
0x3bf0: mov rcx,rdx
0x3bf3: mov r8,-0x1
0x3bfa: mov rdx,rsi
0x3bfd: mov rsi,rdi
0x3c00: xor edi,edi
0x3c02: jmp 0x3b40
0x3c10: mov r8,rcx
0x3c13: mov rcx,rdx
0x3c16: mov rdx,rsi
0x3c19: mov rsi,rdi
0x3c1c: xor edi,edi
0x3c1e: jmp 0x3b40
0x3c30: lea rcx,[rip+0x2043e9]
0x3c37: jmp 0x3340
0x3c40: lea rcx,[rip+0x2043d9]
0x3c47: mov rdx,rsi
0x3c4a: mov rsi,rdi
0x3c4d: xor edi,edi
0x3c4f: jmp 0x3340
0x3c60: lea rcx,[rip+0x2043b9]
0x3c67: mov rdx,-0x1
0x3c6e: jmp 0x3340
0x3dd8: mov r8,rcx
0x3ddb: mov rcx,rdx
0x3dde: lea rdx,[rip+0x1bcf]
0x3de5: mov esi,0x1
0x3dea: xor eax,eax
0x3dec: call 0x15c0
0x3df1: jmp 0x3cdc
0x3fed: push r12
0x3fef: push r15
0x3ff1: push r14
0x3ff3: mov r8,qword ptr [rsp+0x20]
0x3ff8: mov rcx,rbx
0x3ffb: mov rdx,rax
0x3ffe: mov rdi,rbp
0x4001: mov esi,0x1
0x4006: xor eax,eax
0x4008: call 0x15c0
0x400d: add rsp,0x20
0x4011: add rsp,0x28
0x4015: pop rbx
0x4016: pop rbp
0x4017: pop r12
0x4019: pop r13
0x401b: pop r14
0x401d: pop r15
0x401f: ret 
0x4059: push r12
0x405b: push r15
0x405d: push r14
0x405f: mov r9,qword ptr [rsp+0x28]
0x4064: jmp 0x3ff3
0x40c0: xor r9d,r9d
0x40c3: cmp qword ptr [r8],0x0
0x40c7: je 0x40db
0x40c9: nop dword ptr [rax]
0x40d0: add r9,0x1
0x40d4: cmp qword ptr [r8+r9*8],0x0
0x40d9: jne 0x40d0
0x40db: jmp 0x3ca0
0x40e0: sub rsp,0x68
0x40e4: mov r10,r8
0x40e7: xor r9d,r9d
0x40ea: mov rax,qword ptr fs:0x28
0x40f3: mov qword ptr [rsp+0x58],rax
0x40f8: xor eax,eax
0x40fa: mov r8,rsp
0x40fd: nop dword ptr [rax]
0x4100: mov eax,dword ptr [r10]
0x4103: cmp eax,0x2f
0x4106: ja 0x414a
0x4108: mov r11d,eax
0x410b: add r11,qword ptr [r10+0x10]
0x410f: add eax,0x8
0x4112: mov dword ptr [r10],eax
0x4115: mov rax,qword ptr [r11]
0x4118: test rax,rax
0x411b: mov qword ptr [r8+r9*8],rax
0x411f: je 0x412b
0x4121: add r9,0x1
0x4125: cmp r9,0xa
0x4129: jne 0x4100
0x412b: call 0x3ca0
0x4130: mov rax,qword ptr [rsp+0x58]
0x4135: xor rax,qword ptr fs:0x28
0x413e: jne 0x4145
0x4140: add rsp,0x68
0x4144: ret 
0x4145: call 0x1400
0x414a: mov r11,qword ptr [r10+0x8]
0x414e: lea rax,[r11+0x8]
0x4152: mov qword ptr [r10+0x8],rax
0x4156: jmp 0x4115
0x4220: call 0x1400
0x422c: mov rax,rbx
0x422f: add rbx,0x8
0x4233: jmp 0x41e6
0x4240: push rbx
0x4241: lea rsi,[rip+0x17ba]
0x4248: mov edx,0x5
0x424d: xor edi,edi
0x424f: call 0x13d0
0x4254: lea rdx,[rip+0x17bc]
0x425b: mov rsi,rax
0x425e: mov edi,0x1
0x4263: xor eax,eax
0x4265: call 0x1550
0x426a: lea rsi,[rip+0x17bc]
0x4271: mov edx,0x5
0x4276: xor edi,edi
0x4278: call 0x13d0
0x427d: lea rcx,[rip+0x1124]
0x4284: lea rdx,[rip+0xd74]
0x428b: mov rsi,rax
0x428e: mov edi,0x1
0x4293: xor eax,eax
0x4295: call 0x1550
0x429a: mov rbx,qword ptr [rip+0x203de7]
0x42a1: lea rsi,[rip+0x19b8]
0x42a8: xor edi,edi
0x42aa: mov edx,0x5
0x42af: call 0x13d0
0x42b4: mov rsi,rbx
0x42b7: mov rdi,rax
0x42ba: pop rbx
0x42bb: jmp 0x14a0
0x42c0: push rbx
0x42c1: mov rbx,rdi
0x42c4: call 0x14f0
0x42c9: test rax,rax
0x42cc: jne 0x42d3
0x42ce: test rbx,rbx
0x42d1: jne 0x42d5
0x42d3: pop rbx
0x42d4: ret 
0x42d5: call 0x4510
0x42da: nop word ptr [rax+rax]
0x42e0: mov rax,rdi
0x42e3: mul rsi
0x42e6: mov rdi,rax
0x42e9: seto al
0x42ec: test rdi,rdi
0x42ef: js 0x42fb
0x42f1: movzx eax,al
0x42f4: test rax,rax
0x42f7: jne 0x42fb
0x42f9: jmp 0x42c0
0x42fb: sub rsp,0x8
0x42ff: call 0x4510
0x4304: nop 
0x4306: nop word ptr cs:[rax+rax]
0x4310: jmp 0x42c0
0x4329: test rdi,rdi
0x432c: jne 0x4348
0x4348: call 0x1330
0x434d: xor eax,eax
0x434f: pop rbx
0x4350: ret 
0x4356: nop word ptr cs:[rax+rax]
0x4360: mov rax,rsi
0x4363: mul rdx
0x4366: mov rsi,rax
0x4369: seto al
0x436c: test rsi,rsi
0x436f: js 0x437b
0x4371: movzx eax,al
0x4374: test rax,rax
0x4377: jne 0x437b
0x4379: jmp 0x4320
0x437b: sub rsp,0x8
0x437f: call 0x4510
0x4384: nop 
0x4386: nop word ptr cs:[rax+rax]
0x4390: test rdi,rdi
0x4393: mov r9,rdx
0x4396: mov rcx,qword ptr [rsi]
0x4399: je 0x43d0
0x439b: xor edx,edx
0x439d: movabsq rax,0x5555555555555554
0x43a7: div r9
0x43aa: cmp rax,rcx
0x43ad: jbe 0x43eb
0x43af: mov rax,rcx
0x43b2: shr rax, 1
0x43b5: lea rcx,[rax+rcx+0x1]
0x43ba: mov qword ptr [rsi],rcx
0x43bd: imul rcx,r9
0x43c1: mov rsi,rcx
0x43c4: jmp 0x4320
0x43d0: test rcx,rcx
0x43d3: je 0x43f8
0x43d5: mov rax,rcx
0x43d8: mul r9
0x43db: seto dl
0x43de: test rax,rax
0x43e1: movzx edx,dl
0x43e4: js 0x43eb
0x43e6: test rdx,rdx
0x43e9: je 0x43ba
0x43eb: sub rsp,0x8
0x43ef: call 0x4510
0x43f4: nop dword ptr [rax]
0x43f8: xor edx,edx
0x43fa: mov eax,0x80
0x43ff: xor r8d,r8d
0x4402: div r9
0x4405: test rax,rax
0x4408: sete r8b
0x440c: lea rcx,[r8+rax]
0x4410: jmp 0x43d5
0x4420: test rdi,rdi
0x4423: mov rax,qword ptr [rsi]
0x4426: je 0x4450
0x4428: movabsq rdx,0x5555555555555553
0x4432: cmp rax,rdx
0x4435: ja 0x4461
0x4437: mov rdx,rax
0x443a: shr rdx, 1
0x443d: lea rax,[rdx+rax+0x1]
0x4442: mov qword ptr [rsi],rax
0x4445: mov rsi,rax
0x4448: jmp 0x4320
0x4450: test rax,rax
0x4453: mov edx,0x80
0x4458: cmove rax,rdx
0x445c: test rax,rax
0x445f: jns 0x4442
0x4461: sub rsp,0x8
0x4465: call 0x4510
0x446a: nop word ptr [rax+rax]
0x4470: push rbx
0x4471: mov rbx,rdi
0x4474: call 0x42c0
0x4479: mov rdx,rbx
0x447c: xor esi,esi
0x447e: mov rdi,rax
0x4481: pop rbx
0x4482: jmp 0x1480
0x4490: mov rax,rdi
0x4493: sub rsp,0x8
0x4497: mul rsi
0x449a: seto dl
0x449d: test rax,rax
0x44a0: js 0x44b9
0x44a2: movzx edx,dl
0x44a5: test rdx,rdx
0x44a8: jne 0x44b9
0x44aa: call 0x14b0
0x44af: test rax,rax
0x44b2: je 0x44b9
0x44b4: add rsp,0x8
0x44b8: ret 
0x44b9: call 0x4510
0x44be: nop 
0x44c0: push rbp
0x44c1: push rbx
0x44c2: mov rbp,rdi
0x44c5: mov rdi,rsi
0x44c8: mov rbx,rsi
0x44cb: sub rsp,0x8
0x44cf: call 0x42c0
0x44d4: add rsp,0x8
0x44d8: mov rdx,rbx
0x44db: mov rsi,rbp
0x44de: pop rbx
0x44df: pop rbp
0x44e0: mov rdi,rax
0x44e3: jmp 0x14d0
0x44f0: push rbx
0x44f1: mov rbx,rdi
0x44f4: call 0x13f0
0x44f9: mov rdi,rbx
0x44fc: lea rsi,[rax+0x1]
0x4500: pop rbx
0x4501: jmp 0x44c0
0x4540: call 0x1340
0x4545: nop word ptr cs:[rax+rax]
0x454f: nop 
0x4600: cmp eax,0x22
0x4603: mov r12d,0x4
0x4609: jne 0x45d7
0x460b: mov r12d,0x1
0x4611: jmp 0x45c2
0x4ab0: mov r12d,0x4
0x4ab6: jmp 0x45d7
0x4bdf: lea rcx,[rip+0x125a]
0x4be6: lea rsi,[rip+0x1133]
0x4bed: lea rdi,[rip+0x114c]
0x4bf4: mov edx,0x54
0x4bf9: call 0x1460
0x4bfe: call 0x1400
0x4c03: nop word ptr cs:[rax+rax]
0x4c0d: nop dword ptr [rax]
0x4c10: push r13
0x4c12: push r12
0x4c14: mov r13,rsi
0x4c17: push rbp
0x4c18: push rbx
0x4c19: mov rbx,rdi
0x4c1c: mov r12,rdx
0x4c1f: sub rsp,0x18
0x4c23: mov rax,qword ptr fs:0x28
0x4c2c: mov qword ptr [rsp+0x8],rax
0x4c31: xor eax,eax
0x4c33: lea rax,[rsp+0x4]
0x4c38: test rdi,rdi
0x4c3b: cmove rbx,rax
0x4c3f: mov rdi,rbx
0x4c42: call 0x1420
0x4c47: cmp rax,-0x3
0x4c4b: mov rbp,rax
0x4c4e: jbe 0x4c70
0x4c50: test r12,r12
0x4c53: je 0x4c70
0x4c55: xor edi,edi
0x4c57: call 0x4d20
0x4c5c: test al,al
0x4c5e: jne 0x4c70
0x4c60: movzx eax,byte ptr [r13]
0x4c65: mov ebp,0x1
0x4c6a: mov dword ptr [rbx],eax
0x4c6c: nop dword ptr [rax]
0x4c70: mov rdx,qword ptr [rsp+0x8]
0x4c75: xor rdx,qword ptr fs:0x28
0x4c7e: mov rax,rbp
0x4c81: jne 0x4c8e
0x4c83: add rsp,0x18
0x4c87: pop rbx
0x4c88: pop rbp
0x4c89: pop r12
0x4c8b: pop r13
0x4c8d: ret 
0x4c8e: call 0x1400
0x4c93: nop word ptr cs:[rax+rax]
0x4c9d: nop dword ptr [rax]
0x4ca0: push r12
0x4ca2: push rbp
0x4ca3: mov rbp,rdi
0x4ca6: push rbx
0x4ca7: call 0x1390
0x4cac: mov ebx,dword ptr [rbp]
0x4caf: mov rdi,rbp
0x4cb2: mov r12,rax
0x4cb5: call 0x4dc0
0x4cba: and ebx,0x20
0x4cbd: test ebx,ebx
0x4cbf: jne 0x4cd8
0x4cc1: test eax,eax
0x4cc3: je 0x4ccf
0x4cc5: test r12,r12
0x4cc8: mov eax,0xffffffff
0x4ccd: je 0x4d08
0x4ccf: pop rbx
0x4cd0: pop rbp
0x4cd1: pop r12
0x4cd3: ret 
0x4cd8: test eax,eax
0x4cda: jne 0x4cf8
0x4cdc: call 0x1350
0x4ce1: mov dword ptr [rax],0x0
0x4ce7: mov eax,0xffffffff
0x4cec: pop rbx
0x4ced: pop rbp
0x4cee: pop r12
0x4cf0: ret 
0x4cf8: pop rbx
0x4cf9: mov eax,0xffffffff
0x4cfe: pop rbp
0x4cff: pop r12
0x4d01: ret 
0x4d08: call 0x1350
0x4d0d: cmp dword ptr [rax],0x9
0x4d10: pop rbx
0x4d11: pop rbp
0x4d12: pop r12
0x4d14: setne al
0x4d17: movzx eax,al
0x4d1a: neg eax
0x4d1c: ret 
0x4d20: sub rsp,0x8
0x4d24: xor esi,esi
0x4d26: call 0x1540
0x4d2b: mov rdx,rax
0x4d2e: mov eax,0x1
0x4d33: test rdx,rdx
0x4d36: je 0x4d55
0x4d38: lea rdi,[rip+0x1109]
0x4d3f: mov ecx,0x2
0x4d44: mov rsi,rdx
0x4d47: rep cmpsb [rsi],es:[rdi]
0x4d49: seta cl
0x4d4c: sbb cl,0x0
0x4d4f: xor eax,eax
0x4d51: test cl,cl
0x4d53: jne 0x4d60
0x4d55: add rsp,0x8
0x4d59: ret 
0x4d60: lea rdi,[rip+0x10e3]
0x4d67: mov ecx,0x6
0x4d6c: mov rsi,rdx
0x4d6f: rep cmpsb [rsi],es:[rdi]
0x4d71: seta al
0x4d74: sbb al,0x0
0x4d76: test al,al
0x4d78: setne al
0x4d7b: add rsp,0x8
0x4d7f: ret 
0x4d80: sub rsp,0x8
0x4d84: mov edi,0xe
0x4d89: call 0x1510
0x4d8e: test rax,rax
0x4d91: je 0x4db0
0x4d93: cmp byte ptr [rax],0x0
0x4d96: lea rdx,[rip+0x10b3]
0x4d9d: cmove rax,rdx
0x4da1: add rsp,0x8
0x4da5: ret 
0x4db0: lea rax,[rip+0x1099]
0x4db7: add rsp,0x8
0x4dbb: ret 
0x4dc0: push r12
0x4dc2: push rbp
0x4dc3: push rbx
0x4dc4: mov rbx,rdi
0x4dc7: call 0x14e0
0x4dcc: test eax,eax
0x4dce: mov rdi,rbx
0x4dd1: js 0x4e27
0x4dd3: call 0x1520
0x4dd8: test eax,eax
0x4dda: jne 0x4e08
0x4ddc: mov rdi,rbx
0x4ddf: call 0x4e40
0x4de4: test eax,eax
0x4de6: je 0x4e24
0x4de8: call 0x1350
0x4ded: mov r12d,dword ptr [rax]
0x4df0: mov rdi,rbx
0x4df3: mov rbp,rax
0x4df6: call 0x13b0
0x4dfb: test r12d,r12d
0x4dfe: jne 0x4e30
0x4e00: pop rbx
0x4e01: pop rbp
0x4e02: pop r12
0x4e04: ret 
0x4e08: mov rdi,rbx
0x4e0b: call 0x14e0
0x4e10: xor esi,esi
0x4e12: mov edx,0x1
0x4e17: mov edi,eax
0x4e19: call 0x1450
0x4e1e: cmp rax,-0x1
0x4e22: jne 0x4ddc
0x4e24: mov rdi,rbx
0x4e27: pop rbx
0x4e28: pop rbp
0x4e29: pop r12
0x4e2b: jmp 0x13b0
0x4e30: mov dword ptr [rbp],r12d
0x4e34: mov eax,0xffffffff
0x4e39: jmp 0x4e00
0x4e40: test rdi,rdi
0x4e43: push rbx
0x4e44: mov rbx,rdi
0x4e47: je 0x4e5a
0x4e49: call 0x1520
0x4e4e: test eax,eax
0x4e50: je 0x4e5a
0x4e52: test dword ptr [rbx],0x100
0x4e58: jne 0x4e68
0x4e5a: mov rdi,rbx
0x4e5d: pop rbx
0x4e5e: jmp 0x1500
0x4e68: mov rdi,rbx
0x4e6b: mov edx,0x1
0x4e70: xor esi,esi
0x4e72: call 0x4e80
0x4e77: mov rdi,rbx
0x4e7a: pop rbx
0x4e7b: jmp 0x1500
0x4e80: mov rax,qword ptr [rdi+0x8]
0x4e84: cmp qword ptr [rdi+0x10],rax
0x4e88: je 0x4e90
0x4e8a: jmp 0x1570
0x4e90: mov rax,qword ptr [rdi+0x20]
0x4e94: cmp qword ptr [rdi+0x28],rax
0x4e98: jne 0x4e8a
0x4e9a: cmp qword ptr [rdi+0x48],0x0
0x4e9f: jne 0x4e8a
0x4ea1: push r12
0x4ea3: push rbp
0x4ea4: mov r12d,edx
0x4ea7: push rbx
0x4ea8: mov rbp,rsi
0x4eab: mov rbx,rdi
0x4eae: call 0x14e0
0x4eb3: mov edx,r12d
0x4eb6: mov rsi,rbp
0x4eb9: mov edi,eax
0x4ebb: call 0x1450
0x4ec0: cmp rax,-0x1
0x4ec4: je 0x4ed2
0x4ec6: and dword ptr [rbx],-0x11
0x4ec9: mov qword ptr [rbx+0x90],rax
0x4ed0: xor eax,eax
0x4ed2: pop rbx
0x4ed3: pop rbp
0x4ed4: pop r12
0x4ed6: ret 
0x4ee0: push r15
0x4ee2: push r14
0x4ee4: mov r15,rdx
0x4ee7: push r13
0x4ee9: push r12
0x4eeb: lea r12,[rip+0x202c7e]
0x4ef2: push rbp
0x4ef3: lea rbp,[rip+0x202c7e]
0x4efa: push rbx
0x4efb: mov r13d,edi
0x4efe: mov r14,rsi
0x4f01: sub rbp,r12
0x4f04: sub rsp,0x8
0x4f08: sar rbp,0x3
0x4f0c: call 0x1300
0x4f11: test rbp,rbp
0x4f14: je 0x4f36
0x4f16: xor ebx,ebx
0x4f18: nop dword ptr [rax+rax]
0x4f20: mov rdx,r15
0x4f23: mov rsi,r14
0x4f26: mov edi,r13d
0x4f29: call qword ptr [r12+rbx*8]
0x4f2d: add rbx,0x1
0x4f31: cmp rbp,rbx
0x4f34: jne 0x4f20
0x4f36: add rsp,0x8
0x4f3a: pop rbx
0x4f3b: pop rbp
0x4f3c: pop r12
0x4f3e: pop r13
0x4f40: pop r14
0x4f42: pop r15
0x4f44: ret 
0x4f50: rep ret 
