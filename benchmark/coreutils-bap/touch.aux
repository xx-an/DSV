0x26b0: sub rsp,0x8
0x26b4: mov rax,qword ptr [rip+0x21292d]
0x26bb: test rax,rax
0x26be: je 0x26c2
0x26c0: call rax
0x26c2: add rsp,0x8
0x26c6: ret 
0x26d6: jmp qword ptr [rip+0x2126bc]
0x26e0: jmp qword ptr [rip+0x2126ba]
0x2700: jmp qword ptr [rip+0x2126aa]
0x2780: jmp qword ptr [rip+0x21266a]
0x2790: jmp qword ptr [rip+0x212662]
0x27d0: jmp qword ptr [rip+0x212642]
0x2830: jmp qword ptr [rip+0x212612]
0x2850: jmp qword ptr [rip+0x212602]
0x2880: jmp qword ptr [rip+0x2125ea]
0x2890: jmp qword ptr [rip+0x2125e2]
0x28c0: jmp qword ptr [rip+0x2125ca]
0x28e0: jmp qword ptr [rip+0x2125ba]
0x2910: jmp qword ptr [rip+0x2125a2]
0x2940: jmp qword ptr [rip+0x21258a]
0x29a0: jmp qword ptr [rip+0x21255a]
0x29b0: jmp qword ptr [rip+0x212552]
0x29e0: jmp qword ptr [rip+0x21253a]
0x29f0: jmp qword ptr [rip+0x212532]
0x2a10: jmp qword ptr [rip+0x212522]
0x2a60: jmp qword ptr [rip+0x2124fa]
0x2a90: jmp qword ptr [rip+0x2124e2]
0x2b00: jmp qword ptr [rip+0x2124aa]
0x2b10: jmp qword ptr [rip+0x2124a2]
0x2b20: jmp qword ptr [rip+0x21249a]
0x2b30: jmp qword ptr [rip+0x212492]
0x2b40: jmp qword ptr [rip+0x21248a]
0x2b50: jmp qword ptr [rip+0x2124a2]
0x2b60: mov eax,edi
0x2b62: mov ecx,0x64
0x2b67: push rbx
0x2b68: cltd 
0x2b69: mov rbx,rsi
0x2b6c: idiv ecx
0x2b6e: xor ecx,ecx
0x2b70: lea r8d,[rax+0x13]
0x2b74: mov esi,edx
0x2b76: sar esi,0x1f
0x2b79: mov eax,r8d
0x2b7c: xor edx,esi
0x2b7e: sar eax,0x1f
0x2b81: xor r8d,eax
0x2b84: cmp edi,0xfffff894
0x2b8a: lea rdi,[rip+0xd52c]
0x2b91: setge cl
0x2b94: sub edx,esi
0x2b96: sub r8d,eax
0x2b99: add rcx,rdi
0x2b9c: mov r9d,edx
0x2b9f: mov rdi,rbx
0x2ba2: or rdx,-0x1
0x2ba6: mov esi,0x1
0x2bab: xor eax,eax
0x2bad: call 0x2b40
0x2bb2: mov rax,rbx
0x2bb5: pop rbx
0x2bb6: ret 
0x2d9a: nop word ptr [rax+rax]
0x2f01: lea rsi,[rip+0xc9c8]
0x2f08: mov edx,0x5
0x2f0d: xor edi,edi
0x2f0f: mov r14,rax
0x2f12: call 0x27f0
0x2f17: mov r13,rax
0x2f1a: call 0x2750
0x2f1f: mov esi,dword ptr [rax]
0x2f21: mov rcx,r14
0x2f24: mov rdx,r13
0x2f27: xor edi,edi
0x2f29: xor eax,eax
0x2f2b: call 0x2a70
0x2f30: xor r10d,r10d
0x3046: lea rsi,[rip+0xc873]
0x304d: mov r13,rax
0x3050: mov edx,0x5
0x3055: xor edi,edi
0x3057: call 0x27f0
0x305c: mov rcx,r13
0x305f: mov rdx,rax
0x3062: mov esi,r14d
0x3065: xor edi,edi
0x3067: xor eax,eax
0x3069: call 0x2a70
0x306e: xor r10d,r10d
0x3071: jmp 0x2f33
0x31e1: lea rsi,[rip+0xc6c5]
0x31e8: mov edx,0x5
0x31ed: xor edi,edi
0x31ef: mov r14,rax
0x31f2: call 0x27f0
0x31f7: mov r13,rax
0x31fa: call 0x2750
0x31ff: mov esi,dword ptr [rax]
0x3201: mov rcx,r14
0x3204: mov rdx,r13
0x3207: xor edi,edi
0x3209: xor eax,eax
0x320b: call 0x2a70
0x3210: movzx r10d,byte ptr [rsp+0x10]
0x3216: jmp 0x2f33
0x336b: mov qword ptr [rip+0x211db2],0x0
0x3376: lea rdi,[rip+0xc4d4]
0x337d: movdqa xmm0,[rip+0x211d9b]
0x3385: movaps [rip+0x211da4],xmm0
0x338c: call 0x26f0
0x3391: test rax,rax
0x3394: je 0x343a
0x339a: add dword ptr [rip+0x211d0f],0x1
0x33a1: jmp 0x2e66
0x33e0: call 0x2830
0x3410: lea rsi,[rip+0xc30d]
0x3417: mov rbx,rax
0x341a: mov edx,0x5
0x341f: xor edi,edi
0x3421: call 0x27f0
0x3426: mov rcx,rbx
0x3429: mov rdx,rax
0x342c: xor esi,esi
0x342e: mov edi,0x1
0x3433: xor eax,eax
0x3435: call 0x2a70
0x343a: lea rdi,[rip+0x211cdf]
0x3441: call 0x2730
0x3446: test rax,rax
0x3449: je 0x339a
0x344f: mov r10d,dword ptr [rax]
0x3452: mov r9d,dword ptr [rax+0x4]
0x3456: lea rsi,[rip+0xcb73]
0x345d: mov r15d,dword ptr [rax+0x8]
0x3461: mov r14d,dword ptr [rax+0xc]
0x3465: xor edi,edi
0x3467: mov edx,dword ptr [rax+0x10]
0x346a: movsxd r13,dword ptr [rax+0x14]
0x346e: movsxd rax,dword ptr [rip+0x211c3b]
0x3475: mov dword ptr [rsp+0x1c],r10d
0x347a: mov dword ptr [rsp+0x18],r9d
0x347f: add edx,0x1
0x3482: mov dword ptr [rsp+0xc],edx
0x3486: mov edx,0x5
0x348b: add r13,0x76c
0x3492: mov rcx,qword ptr [rbp+rax*8]
0x3497: mov qword ptr [rsp+0x10],rcx
0x349c: call 0x27f0
0x34a1: mov r10d,dword ptr [rsp+0x1c]
0x34a6: mov rdx,rax
0x34a9: mov r8,r13
0x34ac: xor esi,esi
0x34ae: xor edi,edi
0x34b0: xor eax,eax
0x34b2: push r10
0x34b4: mov r9d,dword ptr [rsp+0x20]
0x34b9: push r9
0x34bb: push r15
0x34bd: push r14
0x34bf: mov r9d,dword ptr [rsp+0x2c]
0x34c4: mov rcx,qword ptr [rsp+0x30]
0x34c9: call 0x2a70
0x34ce: add rsp,0x20
0x34d2: jmp 0x339a
0x34e4: lea rsi,[rip+0xcac5]
0x34eb: mov edx,0x5
0x34f0: xor edi,edi
0x34f2: mov rbp,rax
0x34f5: call 0x27f0
0x34fa: mov rbx,rax
0x34fd: call 0x2750
0x3502: mov esi,dword ptr [rax]
0x3504: mov rcx,rbp
0x3507: mov rdx,rbx
0x350a: mov edi,0x1
0x350f: xor eax,eax
0x3511: call 0x2a70
0x355a: hlt 
0x355b: nop dword ptr [rax+rax]
0x3560: lea rdi,[rip+0x211b39]
0x3567: push rbp
0x3568: lea rax,[rip+0x211b31]
0x356f: cmp rax,rdi
0x3572: mov rbp,rsp
0x3575: je 0x3590
0x3577: mov rax,qword ptr [rip+0x211a5a]
0x357e: test rax,rax
0x3581: je 0x3590
0x3583: pop rbp
0x3584: jmp rax
0x3590: pop rbp
0x3591: ret 
0x35a0: lea rdi,[rip+0x211af9]
0x35a7: lea rsi,[rip+0x211af2]
0x35ae: push rbp
0x35af: sub rsi,rdi
0x35b2: mov rbp,rsp
0x35b5: sar rsi,0x3
0x35b9: mov rax,rsi
0x35bc: shr rax,0x3f
0x35c0: add rsi,rax
0x35c3: sar rsi, 1
0x35c6: je 0x35e0
0x35c8: mov rax,qword ptr [rip+0x211a21]
0x35cf: test rax,rax
0x35d2: je 0x35e0
0x35d4: pop rbp
0x35d5: jmp rax
0x35e0: pop rbp
0x35e1: ret 
0x3601: push rbp
0x3602: mov rbp,rsp
0x3605: je 0x3613
0x3607: mov rdi,qword ptr [rip+0x2119fa]
0x360e: call 0x2b50
0x3613: call 0x3560
0x3618: mov byte ptr [rip+0x211ac9],0x1
0x361f: pop rbp
0x3620: ret 
0x3630: push rbp
0x3631: mov rbp,rsp
0x3634: pop rbp
0x3635: jmp 0x35a0
0x3657: lea rsi,[rip+0xc0c6]
0x365e: mov rbx,rax
0x3661: mov edx,0x5
0x3666: xor edi,edi
0x3668: call 0x27f0
0x366d: mov rcx,rbx
0x3670: mov rdx,rax
0x3673: xor esi,esi
0x3675: mov edi,0x1
0x367a: xor eax,eax
0x367c: call 0x2a70
0x3681: nop dword ptr [rax+rax]
0x3686: nop word ptr cs:[rax+rax]
0x3a90: mov edi,0x1
0x3a95: jmp 0x3690
0x3ba0: mov byte ptr [rsp+0x17],0x1
0x3ba5: jmp 0x3b27
0x3bf3: mov rdx,r12
0x3bf6: mov rbp,rax
0x3bf9: mov esi,0x8
0x3bfe: xor edi,edi
0x3c00: call 0xa4a0
0x3c05: mov r8,rbp
0x3c08: mov rdx,rbx
0x3c0b: mov rcx,rax
0x3c0e: pop rbx
0x3c0f: pop rbp
0x3c10: pop r12
0x3c12: xor esi,esi
0x3c14: xor edi,edi
0x3c16: xor eax,eax
0x3c18: jmp 0x2a70
0x3c40: push r15
0x3c42: push r14
0x3c44: mov r14,rdi
0x3c47: push r13
0x3c49: push r12
0x3c4b: xor edi,edi
0x3c4d: push rbp
0x3c4e: push rbx
0x3c4f: mov rbp,rsi
0x3c52: lea rsi,[rip+0xc428]
0x3c59: mov r12,rdx
0x3c5c: mov edx,0x5
0x3c61: sub rsp,0x8
0x3c65: mov rbx,qword ptr [rip+0x211474]
0x3c6c: call 0x27f0
0x3c71: mov rdi,rax
0x3c74: mov rsi,rbx
0x3c77: call 0x2930
0x3c7c: mov r15,qword ptr [r14]
0x3c7f: test r15,r15
0x3c82: je 0x3d18
0x3c88: xor r13d,r13d
0x3c8b: xor ebx,ebx
0x3c8d: jmp 0x3cc8
0x3c90: mov rdi,r15
0x3c93: add rbx,0x1
0x3c97: mov r13,rbp
0x3c9a: call 0xa890
0x3c9f: mov rdi,qword ptr [rip+0x21143a]
0x3ca6: lea rdx,[rip+0xc3e9]
0x3cad: mov rcx,rax
0x3cb0: mov esi,0x1
0x3cb5: xor eax,eax
0x3cb7: add rbp,r12
0x3cba: call 0x2af0
0x3cbf: mov r15,qword ptr [r14+rbx*8]
0x3cc3: test r15,r15
0x3cc6: je 0x3d18
0x3cc8: test rbx,rbx
0x3ccb: je 0x3c90
0x3ccd: mov rdx,r12
0x3cd0: mov rsi,rbp
0x3cd3: mov rdi,r13
0x3cd6: call 0x2920
0x3cdb: test eax,eax
0x3cdd: jne 0x3c90
0x3cdf: mov rdi,r15
0x3ce2: add rbx,0x1
0x3ce6: add rbp,r12
0x3ce9: call 0xa890
0x3cee: mov rdi,qword ptr [rip+0x2113eb]
0x3cf5: lea rdx,[rip+0xc3a2]
0x3cfc: mov rcx,rax
0x3cff: mov esi,0x1
0x3d04: xor eax,eax
0x3d06: call 0x2af0
0x3d0b: mov r15,qword ptr [r14+rbx*8]
0x3d0f: test r15,r15
0x3d12: jne 0x3cc8
0x3d14: nop dword ptr [rax]
0x3d18: mov rdi,qword ptr [rip+0x2113c1]
0x3d1f: mov rax,qword ptr [rdi+0x28]
0x3d23: cmp rax,qword ptr [rdi+0x30]
0x3d27: jae 0x3d48
0x3d29: lea rdx,[rax+0x1]
0x3d2d: mov qword ptr [rdi+0x28],rdx
0x3d31: mov byte ptr [rax],0xa
0x3d34: add rsp,0x8
0x3d38: pop rbx
0x3d39: pop rbp
0x3d3a: pop r12
0x3d3c: pop r13
0x3d3e: pop r14
0x3d40: pop r15
0x3d42: ret 
0x3d48: add rsp,0x8
0x3d4c: mov esi,0xa
0x3d51: pop rbx
0x3d52: pop rbp
0x3d53: pop r12
0x3d55: pop r13
0x3d57: pop r14
0x3d59: pop r15
0x3d5b: jmp 0x2890
0x3db3: mov rdx,r15
0x3db6: mov rsi,rbp
0x3db9: mov rdi,rbx
0x3dbc: call 0x3c40
0x3dc1: call r13
0x3dc4: mov rax,-0x1
0x3dcb: jmp 0x3d96
0x3dd0: push r14
0x3dd2: push r13
0x3dd4: push r12
0x3dd6: push rbp
0x3dd7: push rbx
0x3dd8: mov r14,qword ptr [rsi]
0x3ddb: test r14,r14
0x3dde: je 0x3e11
0x3de0: mov r12,rcx
0x3de3: mov r13,rdi
0x3de6: mov rbp,rdx
0x3de9: lea rbx,[rsi+0x8]
0x3ded: jmp 0x3dff
0x3df0: mov r14,qword ptr [rbx]
0x3df3: add rbp,r12
0x3df6: add rbx,0x8
0x3dfa: test r14,r14
0x3dfd: je 0x3e11
0x3dff: mov rdx,r12
0x3e02: mov rsi,rbp
0x3e05: mov rdi,r13
0x3e08: call 0x2920
0x3e0d: test eax,eax
0x3e0f: jne 0x3df0
0x3e11: pop rbx
0x3e12: mov rax,r14
0x3e15: pop rbp
0x3e16: pop r12
0x3e18: pop r13
0x3e1a: pop r14
0x3e1c: ret 
0x3e20: mov qword ptr [rip+0x211329],rdi
0x3e27: ret 
0x3e30: mov byte ptr [rip+0x211311],dil
0x3e37: ret 
0x3e40: push rbp
0x3e41: push rbx
0x3e42: sub rsp,0x8
0x3e46: mov rdi,qword ptr [rip+0x21125b]
0x3e4d: call 0xb870
0x3e52: test eax,eax
0x3e54: je 0x3e6c
0x3e56: call 0x2750
0x3e5b: cmp byte ptr [rip+0x2112e6],0x0
0x3e62: mov rbx,rax
0x3e65: je 0x3e83
0x3e67: cmp dword ptr [rax],0x20
0x3e6a: jne 0x3e83
0x3e6c: mov rdi,qword ptr [rip+0x21126d]
0x3e73: call 0xb870
0x3e78: test eax,eax
0x3e7a: jne 0x3ec2
0x3e7c: add rsp,0x8
0x3e80: pop rbx
0x3e81: pop rbp
0x3e82: ret 
0x3e83: lea rsi,[rip+0xc219]
0x3e8a: xor edi,edi
0x3e8c: mov edx,0x5
0x3e91: call 0x27f0
0x3e96: mov rdi,qword ptr [rip+0x2112b3]
0x3e9d: mov rbp,rax
0x3ea0: test rdi,rdi
0x3ea3: je 0x3ecd
0x3ea5: call 0xa690
0x3eaa: mov esi,dword ptr [rbx]
0x3eac: lea rdx,[rip+0xc1fc]
0x3eb3: mov rcx,rax
0x3eb6: mov r8,rbp
0x3eb9: xor edi,edi
0x3ebb: xor eax,eax
0x3ebd: call 0x2a70
0x3ec2: mov edi,dword ptr [rip+0x211158]
0x3ec8: call 0x2780
0x3ecd: mov esi,dword ptr [rbx]
0x3ecf: lea rdx,[rip+0xc1ca]
0x3ed6: mov rcx,rax
0x3ed9: xor edi,edi
0x3edb: xor eax,eax
0x3edd: call 0x2a70
0x3ee2: jmp 0x3ec2
0x3ff0: sub rsp,0x28
0x3ff4: xor edi,edi
0x3ff6: mov rsi,rsp
0x3ff9: mov rax,qword ptr fs:0x28
0x4002: mov qword ptr [rsp+0x18],rax
0x4007: xor eax,eax
0x4009: call 0x27a0
0x400e: mov rcx,qword ptr [rsp+0x18]
0x4013: xor rcx,qword ptr fs:0x28
0x401c: mov rax,qword ptr [rsp]
0x4020: mov rdx,qword ptr [rsp+0x8]
0x4025: jne 0x402c
0x4027: add rsp,0x28
0x402b: ret 
0x402c: call 0x2830
0x4031: nop word ptr cs:[rax+rax]
0x403b: nop dword ptr [rax+rax]
0x4040: mov rax,qword ptr [rdi+0xa8]
0x4047: mov r8,qword ptr [rsp+0x10]
0x404c: mov r9,qword ptr [rsp+0x18]
0x4051: test rax,rax
0x4054: je 0x4098
0x4056: cmp qword ptr [rdi+0x30],0x0
0x405b: jne 0x4098
0x405d: cmp byte ptr [rdi+0xa1],0x0
0x4064: jne 0x4098
0x4066: cmp qword ptr [rdi+0xc8],0x0
0x406e: jne 0x407a
0x4070: cmp r9,0x2
0x4074: jle 0x4198
0x407a: mov rax,qword ptr [rsp+0x18]
0x407f: mov byte ptr [rdi+0xd8],0x1
0x4086: movdqu xmm0,[rsp+0x8]
0x408c: mov qword ptr [rdi+0x30],rax
0x4090: movups [rdi+0x20],xmm0
0x4094: ret 
0x4098: cmp r9,0x4
0x409c: jg 0x4100
0x409e: add qword ptr [rdi+0xc8],0x1
0x40a6: cmp r9,0x2
0x40aa: jle 0x41a8
0x40b0: mov rax,r8
0x40b3: movabsq rdx,-0x5c28f5c28f5c28f5
0x40bd: imul rdx
0x40c0: mov rax,r8
0x40c3: sar rax,0x3f
0x40c7: add rdx,r8
0x40ca: sar rdx,0x6
0x40ce: sub rdx,rax
0x40d1: lea rax,[rdx+rdx*4]
0x40d5: mov qword ptr [rdi+0x48],rdx
0x40d9: lea rax,[rax+rax*4]
0x40dd: shl rax,0x2
0x40e1: sub r8,rax
0x40e4: mov qword ptr [rdi+0x50],r8
0x40e8: mov qword ptr [rdi+0x58],0x0
0x40f0: mov qword ptr [rdi+0x60],0x0
0x40f8: mov dword ptr [rdi+0x1c],0x2
0x40ff: ret 
0x4100: add rax,0x1
0x4104: movabsq rsi,-0x5c28f5c28f5c28f5
0x410e: mov r10,r8
0x4111: mov qword ptr [rdi+0xa8],rax
0x4118: mov rax,r8
0x411b: sar r10,0x3f
0x411f: imul rsi
0x4122: sub r9,0x4
0x4126: mov qword ptr [rdi+0x30],r9
0x412a: lea rcx,[rdx+r8]
0x412e: mov rdx,r8
0x4131: sar rcx,0x6
0x4135: sub rcx,r10
0x4138: lea rax,[rcx+rcx*4]
0x413c: lea rax,[rax+rax*4]
0x4140: shl rax,0x2
0x4144: sub rdx,rax
0x4147: mov rax,rcx
0x414a: mov qword ptr [rdi+0x40],rdx
0x414e: imul rsi
0x4151: mov rax,rcx
0x4154: sar rax,0x3f
0x4158: lea rsi,[rdx+rcx]
0x415c: movabsq rdx,0x346dc5d63886594b
0x4166: sar rsi,0x6
0x416a: sub rsi,rax
0x416d: lea rax,[rsi+rsi*4]
0x4171: lea rax,[rax+rax*4]
0x4175: shl rax,0x2
0x4179: sub rcx,rax
0x417c: mov rax,r8
0x417f: imul rdx
0x4182: mov qword ptr [rdi+0x38],rcx
0x4186: sar rdx,0xb
0x418a: sub rdx,r10
0x418d: mov qword ptr [rdi+0x28],rdx
0x4191: ret 
0x4198: mov qword ptr [rdi+0xc8],0x1
0x41a3: nop dword ptr [rax+rax]
0x41a8: mov qword ptr [rdi+0x48],r8
0x41ac: mov qword ptr [rdi+0x50],0x0
0x41b4: jmp 0x40e8
0x41c0: mov eax,edi
0x41c2: mov edx,0x91a2b3c5
0x41c7: push r12
0x41c9: imul edx
0x41cb: push rbp
0x41cc: push rbx
0x41cd: mov eax,edi
0x41cf: mov ecx,edi
0x41d1: mov r12,rsi
0x41d4: sar eax,0x1f
0x41d7: sar ecx,0x1f
0x41da: mov ebp,edi
0x41dc: lea ebx,[rdx+rdi]
0x41df: and ecx,0x2
0x41e2: mov rdx,-0x1
0x41e9: lea r8d,[rcx+0x2b]
0x41ed: lea rcx,[rip+0xbec2]
0x41f4: mov esi,0x1
0x41f9: sar ebx,0xb
0x41fc: mov rdi,r12
0x41ff: sub ebx,eax
0x4201: mov eax,ebx
0x4203: sar eax,0x1f
0x4206: mov r9d,eax
0x4209: xor r9d,ebx
0x420c: imul ebx,ebx,0xe10
0x4212: sub r9d,eax
0x4215: xor eax,eax
0x4217: call 0x2b40
0x421c: sub ebp,ebx
0x421e: je 0x4282
0x4220: cltq 
0x4222: mov ecx,0x88888889
0x4227: mov r8d,0xcccccccd
0x422d: lea rsi,[r12+rax]
0x4231: mov eax,ebp
0x4233: sar eax,0x1f
0x4236: xor ebp,eax
0x4238: mov byte ptr [rsi],0x3a
0x423b: sub ebp,eax
0x423d: mov eax,ebp
0x423f: mul ecx
0x4241: mov eax,ebp
0x4243: mov ecx,edx
0x4245: mov edi,edx
0x4247: mov edx,0x1b4e81b5
0x424c: mul edx
0x424e: shr ecx,0x5
0x4251: shr edi,0x5
0x4254: mov eax,ecx
0x4256: shr edx,0x6
0x4259: add edx,0x30
0x425c: mov byte ptr [rsi+0x1],dl
0x425f: mul r8d
0x4262: imul edi,edi,0x3c
0x4265: shr edx,0x3
0x4268: lea eax,[rdx+rdx*4]
0x426b: add eax,eax
0x426d: sub ecx,eax
0x426f: lea rax,[rsi+0x3]
0x4273: add ecx,0x30
0x4276: sub ebp,edi
0x4278: mov byte ptr [rsi+0x2],cl
0x427b: mov edi,ebp
0x427d: jne 0x4290
0x427f: mov byte ptr [rax],0x0
0x4282: mov rax,r12
0x4285: pop rbx
0x4286: pop rbp
0x4287: pop r12
0x4289: ret 
0x4290: mov eax,ebp
0x4292: mov byte ptr [rsi+0x3],0x3a
0x4296: mul r8d
0x4299: shr edx,0x3
0x429c: lea eax,[rdx+0x30]
0x429f: lea edx,[rdx+rdx*4]
0x42a2: add edx,edx
0x42a4: mov byte ptr [rsi+0x4],al
0x42a7: lea rax,[rsi+0x6]
0x42ab: sub edi,edx
0x42ad: add edi,0x30
0x42b0: mov byte ptr [rsi+0x5],dil
0x42b4: jmp 0x427f
0x42c0: push rbx
0x42c1: mov rbx,rdi
0x42c4: sub rsp,0xd0
0x42cb: test al,al
0x42cd: mov qword ptr [rsp+0x28],rsi
0x42d2: mov qword ptr [rsp+0x30],rdx
0x42d7: mov qword ptr [rsp+0x38],rcx
0x42dc: mov qword ptr [rsp+0x40],r8
0x42e1: mov qword ptr [rsp+0x48],r9
0x42e6: je 0x431f
0x42e8: movaps [rsp+0x50],xmm0
0x42ed: movaps [rsp+0x60],xmm1
0x42f2: movaps [rsp+0x70],xmm2
0x42f7: movaps [rsp+0x80],xmm3
0x42ff: movaps [rsp+0x90],xmm4
0x4307: movaps [rsp+0xa0],xmm5
0x430f: movaps [rsp+0xb0],xmm6
0x4317: movaps [rsp+0xc0],xmm7
0x431f: lea rdi,[rip+0xbda1]
0x4326: mov edx,0x6
0x432b: mov esi,0x1
0x4330: mov rax,qword ptr fs:0x28
0x4339: mov qword ptr [rsp+0x18],rax
0x433e: xor eax,eax
0x4340: mov rcx,qword ptr [rip+0x210d99]
0x4347: call 0x2ae0
0x434c: lea rax,[rsp+0xe0]
0x4354: mov rdi,qword ptr [rip+0x210d85]
0x435b: mov rdx,rsp
0x435e: mov rsi,rbx
0x4361: mov dword ptr [rsp],0x8
0x4368: mov dword ptr [rsp+0x4],0x30
0x4370: mov qword ptr [rsp+0x8],rax
0x4375: lea rax,[rsp+0x20]
0x437a: mov qword ptr [rsp+0x10],rax
0x437f: call 0xb770
0x4384: mov rax,qword ptr [rsp+0x18]
0x4389: xor rax,qword ptr fs:0x28
0x4392: jne 0x439d
0x4394: add rsp,0xd0
0x439b: pop rbx
0x439c: ret 
0x439d: call 0x2830
0x43a2: nop dword ptr [rax]
0x43a6: nop word ptr cs:[rax+rax]
0x43b0: mov r8,rdx
0x43b3: xor edi,0x1
0x43b6: lea rdx,[rip+0xbd11]
0x43bd: movzx edi,dil
0x43c1: sub rsp,0x8
0x43c5: mov rcx,rsi
0x43c8: add rdx,rdi
0x43cb: mov rdi,qword ptr [rip+0x210d0e]
0x43d2: mov esi,0x1
0x43d7: xor eax,eax
0x43d9: call 0x2af0
0x43de: mov eax,0x1
0x43e3: add rsp,0x8
0x43e7: ret 
0x43f0: cmp rcx,0x2
0x43f4: mov r9,rdx
0x43f7: jg 0x4440
0x43f9: test r8,r8
0x43fc: js 0x4490
0x4402: xor ecx,ecx
0x4404: imul r9,r9,0x3c
0x4408: seto cl
0x440b: test sil,sil
0x440e: jne 0x4480
0x4410: xor edx,edx
0x4412: add r9,r8
0x4415: seto dl
0x4418: xor eax,eax
0x441a: or ecx,edx
0x441c: jne 0x443c
0x441e: lea rdx,[r9+0x5a0]
0x4425: xor eax,eax
0x4427: cmp rdx,0xb40
0x442e: ja 0x443c
0x4430: imul r9d,r9d,0x3c
0x4434: mov eax,0x1
0x4439: mov dword ptr [rdi],r9d
0x443c: rep ret 
0x4440: test r8,r8
0x4443: jns 0x4402
0x4445: mov rax,r9
0x4448: movabsq rdx,-0x5c28f5c28f5c28f5
0x4452: imul rdx
0x4455: mov rax,r9
0x4458: sar rax,0x3f
0x445c: lea rcx,[rdx+r9]
0x4460: sar rcx,0x6
0x4464: sub rcx,rax
0x4467: lea rax,[rcx+rcx*4]
0x446b: mov rcx,r9
0x446e: lea rax,[rax+rax*4]
0x4472: shl rax,0x2
0x4476: sub rcx,rax
0x4479: jmp 0x449e
0x4480: xor edx,edx
0x4482: sub r9,r8
0x4485: seto dl
0x4488: jmp 0x4418
0x4490: lea rax,[rdx+rdx*4]
0x4494: xor ecx,ecx
0x4496: lea r9,[rax+rax*4]
0x449a: shl r9,0x2
0x449e: mov rax,r9
0x44a1: movabsq rdx,-0x5c28f5c28f5c28f5
0x44ab: imul rdx
0x44ae: add rdx,r9
0x44b1: sar r9,0x3f
0x44b5: sar rdx,0x6
0x44b9: sub rdx,r9
0x44bc: mov rax,rdx
0x44bf: shl rax,0x4
0x44c3: sub rax,rdx
0x44c6: lea r9,[rcx+rax*4]
0x44ca: jmp 0x441e
0x44d0: mov eax,dword ptr [rdi]
0x44d2: mov edx,dword ptr [rdi+0x4]
0x44d5: xor eax,dword ptr [rsi]
0x44d7: xor edx,dword ptr [rsi+0x4]
0x44da: or eax,edx
0x44dc: mov edx,dword ptr [rdi+0x8]
0x44df: xor edx,dword ptr [rsi+0x8]
0x44e2: or eax,edx
0x44e4: mov edx,dword ptr [rdi+0xc]
0x44e7: xor edx,dword ptr [rsi+0xc]
0x44ea: or eax,edx
0x44ec: mov edx,dword ptr [rdi+0x10]
0x44ef: xor edx,dword ptr [rsi+0x10]
0x44f2: or eax,edx
0x44f4: mov edx,dword ptr [rdi+0x14]
0x44f7: xor edx,dword ptr [rsi+0x14]
0x44fa: or eax,edx
0x44fc: sete al
0x44ff: ret 
0x4500: push r12
0x4502: mov r12,rdi
0x4505: push rbp
0x4506: mov rbp,rsi
0x4509: push rbx
0x450a: lea rsi,[rip+0xbbc6]
0x4511: lea rbx,[rip+0x2101c8]
0x4518: jmp 0x452c
0x4520: add rbx,0x10
0x4524: mov rsi,qword ptr [rbx]
0x4527: test rsi,rsi
0x452a: je 0x4540
0x452c: mov rdi,rbp
0x452f: call 0x2950
0x4534: test eax,eax
0x4536: jne 0x4520
0x4538: mov rax,rbx
0x453b: pop rbx
0x453c: pop rbp
0x453d: pop r12
0x453f: ret 
0x4540: mov rsi,qword ptr [r12+0xe8]
0x4548: lea rbx,[r12+0xe8]
0x4550: test rsi,rsi
0x4553: jne 0x459c
0x4555: nop dword ptr [rax]
0x4558: lea rbx,[rip+0x20fe81]
0x455f: lea rsi,[rip+0xbb75]
0x4566: jmp 0x457c
0x4570: add rbx,0x10
0x4574: mov rsi,qword ptr [rbx]
0x4577: test rsi,rsi
0x457a: je 0x45b0
0x457c: mov rdi,rbp
0x457f: call 0x2950
0x4584: test eax,eax
0x4586: jne 0x4570
0x4588: jmp 0x4538
0x4590: add rbx,0x10
0x4594: mov rsi,qword ptr [rbx]
0x4597: test rsi,rsi
0x459a: je 0x4558
0x459c: mov rdi,rbp
0x459f: call 0x2950
0x45a4: test eax,eax
0x45a6: jne 0x4590
0x45a8: mov rax,rbx
0x45ab: pop rbx
0x45ac: pop rbp
0x45ad: pop r12
0x45af: ret 
0x45b0: xor ebx,ebx
0x45b2: mov rax,rbx
0x45b5: pop rbx
0x45b6: pop rbp
0x45b7: pop r12
0x45b9: ret 
0x45c0: push rbp
0x45c1: push rbx
0x45c2: mov rbx,rsi
0x45c5: lea rsi,[rip+0xbb13]
0x45cc: mov rbp,rdi
0x45cf: mov edx,0x5
0x45d4: sub rsp,0x8
0x45d8: xor edi,edi
0x45da: call 0x27f0
0x45df: mov rsi,rbp
0x45e2: mov rdi,rax
0x45e5: xor eax,eax
0x45e7: call 0x42c0
0x45ec: mov rsi,qword ptr [rbx+0x68]
0x45f0: test rsi,rsi
0x45f3: jne 0x4780
0x45f9: mov rsi,qword ptr [rbx+0x70]
0x45fd: test rsi,rsi
0x4600: je 0x4680
0x4602: xor edi,edi
0x4604: lea rdx,[rip+0xbafd]
0x460b: call 0x43b0
0x4610: mov rsi,qword ptr [rbx+0x78]
0x4614: movzx edi,al
0x4617: test rsi,rsi
0x461a: jne 0x46f0
0x4620: mov rsi,qword ptr [rbx+0x80]
0x4627: test rsi,rsi
0x462a: jne 0x470f
0x4630: mov rsi,qword ptr [rbx+0x88]
0x4637: test rsi,rsi
0x463a: jne 0x472e
0x4640: mov rsi,qword ptr [rbx+0x90]
0x4647: test rsi,rsi
0x464a: jne 0x474d
0x4650: movsxd rsi,dword ptr [rbx+0x98]
0x4657: test rsi,rsi
0x465a: jne 0x476c
0x4660: mov rsi,qword ptr [rip+0x210a79]
0x4667: add rsp,0x8
0x466b: mov edi,0xa
0x4670: pop rbx
0x4671: pop rbp
0x4672: jmp 0x2910
0x4680: mov rsi,qword ptr [rbx+0x78]
0x4684: xor edi,edi
0x4686: test rsi,rsi
0x4689: jne 0x46f0
0x468b: cmp qword ptr [rbx+0x80],0x0
0x4693: jne 0x4620
0x4695: cmp qword ptr [rbx+0x88],0x0
0x469d: jne 0x4620
0x469f: cmp qword ptr [rbx+0x90],0x0
0x46a7: jne 0x4620
0x46ad: mov eax,dword ptr [rbx+0x98]
0x46b3: test eax,eax
0x46b5: jne 0x4620
0x46bb: mov rbx,qword ptr [rip+0x210a1e]
0x46c2: lea rsi,[rip+0xba27]
0x46c9: xor edi,edi
0x46cb: mov edx,0x5
0x46d0: call 0x27f0
0x46d5: add rsp,0x8
0x46d9: mov rsi,rbx
0x46dc: mov rdi,rax
0x46df: pop rbx
0x46e0: pop rbp
0x46e1: jmp 0x28e0
0x46f0: lea rdx,[rip+0xba1a]
0x46f7: call 0x43b0
0x46fc: mov rsi,qword ptr [rbx+0x80]
0x4703: movzx edi,al
0x4706: test rsi,rsi
0x4709: je 0x4630
0x470f: lea rdx,[rip+0xba02]
0x4716: call 0x43b0
0x471b: mov rsi,qword ptr [rbx+0x88]
0x4722: movzx edi,al
0x4725: test rsi,rsi
0x4728: je 0x4640
0x472e: lea rdx,[rip+0xb9eb]
0x4735: call 0x43b0
0x473a: mov rsi,qword ptr [rbx+0x90]
0x4741: movzx edi,al
0x4744: test rsi,rsi
0x4747: je 0x4650
0x474d: lea rdx,[rip+0xbab1]
0x4754: call 0x43b0
0x4759: movsxd rsi,dword ptr [rbx+0x98]
0x4760: movzx edi,al
0x4763: test rsi,rsi
0x4766: je 0x4660
0x476c: lea rdx,[rip+0xb9b5]
0x4773: call 0x43b0
0x4778: jmp 0x4660
0x4780: lea rdx,[rip+0xb979]
0x4787: xor edi,edi
0x4789: call 0x43b0
0x478e: mov rsi,qword ptr [rbx+0x70]
0x4792: movzx edi,al
0x4795: test rsi,rsi
0x4798: jne 0x4604
0x479e: mov rsi,qword ptr [rbx+0x78]
0x47a2: jmp 0x4617
0x47b0: push r12
0x47b2: push rbp
0x47b3: mov rcx,rdi
0x47b6: push rbx
0x47b7: mov rbx,rdx
0x47ba: lea rdx,[rip+0xb973]
0x47c1: mov r12,rsi
0x47c4: xor r9d,r9d
0x47c7: xor r8d,r8d
0x47ca: sub rsp,0x30
0x47ce: mov esi,0x64
0x47d3: mov rdi,rbx
0x47d6: mov rax,qword ptr fs:0x28
0x47df: mov qword ptr [rsp+0x28],rax
0x47e4: xor eax,eax
0x47e6: call 0xd4f0
0x47eb: test r12,r12
0x47ee: je 0x4803
0x47f0: cmp eax,0x63
0x47f3: mov rbp,rax
0x47f6: jg 0x4803
0x47f8: cmp qword ptr [r12+0xd0],0x0
0x4801: jne 0x4820
0x4803: mov rdx,qword ptr [rsp+0x28]
0x4808: xor rdx,qword ptr fs:0x28
0x4811: mov rax,rbx
0x4814: jne 0x485c
0x4816: add rsp,0x30
0x481a: pop rbx
0x481b: pop rbp
0x481c: pop r12
0x481e: ret 
0x4820: mov edi,dword ptr [r12+0x18]
0x4825: mov rsi,rsp
0x4828: call 0x41c0
0x482d: mov esi,0x64
0x4832: movsxd rdi,ebp
0x4835: lea r8,[rip+0xb912]
0x483c: sub esi,ebp
0x483e: mov r9,rax
0x4841: add rdi,rbx
0x4844: movsxd rsi,esi
0x4847: mov rcx,-0x1
0x484e: mov edx,0x1
0x4853: xor eax,eax
0x4855: call 0x2700
0x485a: jmp 0x4803
0x485c: call 0x2830
0x4861: nop dword ptr [rax+rax]
0x4866: nop word ptr cs:[rax+rax]
0x4870: push rbp
0x4871: push rbx
0x4872: mov rbp,rsi
0x4875: mov rbx,rdi
0x4878: sub rsp,0x8
0x487c: cmp byte ptr [rdi+0xe0],0x0
0x4883: je 0x48d8
0x4885: mov r9,qword ptr [rdi+0x8]
0x4889: lea rax,[r9+0x1]
0x488d: cmp rax,0xd
0x4891: jbe 0x4928
0x4897: lea r8,[rip+0xb924]
0x489e: mov rcx,-0x1
0x48a5: mov edx,0x1
0x48aa: mov esi,0x64
0x48af: mov rdi,rbp
0x48b2: xor eax,eax
0x48b4: call 0x2700
0x48b9: movsxd rdx,dword ptr [rbx+0x10]
0x48bd: cmp edx,0x6
0x48c0: ja 0x48cb
0x48c2: cmp eax,0x63
0x48c5: jbe 0x4955
0x48cb: add rsp,0x8
0x48cf: mov rax,rbp
0x48d2: pop rbx
0x48d3: pop rbp
0x48d4: ret 
0x48d8: mov byte ptr [rsi],0x0
0x48db: movsxd rdx,dword ptr [rdi+0x10]
0x48df: cmp edx,0x6
0x48e2: ja 0x48cb
0x48e4: mov rdi,rsi
0x48e7: mov ecx,0x1
0x48ec: mov esi,0x64
0x48f1: lea rax,[rip+0xc728]
0x48f8: lea r9,[rax+rdx*4]
0x48fc: lea rax,[rip+0xb79c]
0x4903: mov edx,0x1
0x4908: lea r8,[rax+rcx]
0x490c: mov rcx,-0x1
0x4913: xor eax,eax
0x4915: call 0x2700
0x491a: add rsp,0x8
0x491e: mov rax,rbp
0x4921: pop rbx
0x4922: pop rbp
0x4923: ret 
0x4928: lea rdx,[rax+rax*4]
0x492c: mov esi,0x64
0x4931: mov rdi,rbp
0x4934: lea rcx,[rax+rdx*2]
0x4938: lea rax,[rip+0xc701]
0x493f: lea rdx,[rip+0xb75a]
0x4946: add rcx,rax
0x4949: xor eax,eax
0x494b: call 0x2880
0x4950: jmp 0x48b9
0x4955: xor ecx,ecx
0x4957: mov esi,0x64
0x495c: test eax,eax
0x495e: sete cl
0x4961: sub esi,eax
0x4963: cltq 
0x4965: movsxd rsi,esi
0x4968: lea rdi,[rbp+rax]
0x496d: jmp 0x48f1
0x4970: push r13
0x4972: push r12
0x4974: mov edx,0x5
0x4979: push rbp
0x497a: push rbx
0x497b: mov rbx,rsi
0x497e: lea rsi,[rip+0xb75a]
0x4985: mov rbp,rdi
0x4988: xor edi,edi
0x498a: sub rsp,0x78
0x498e: mov rax,qword ptr fs:0x28
0x4997: mov qword ptr [rsp+0x68],rax
0x499c: xor eax,eax
0x499e: call 0x27f0
0x49a3: mov rsi,rbp
0x49a6: mov rdi,rax
0x49a9: xor eax,eax
0x49ab: call 0x42c0
0x49b0: cmp qword ptr [rbx+0xa8],0x0
0x49b8: je 0x49c7
0x49ba: cmp byte ptr [rbx+0xda],0x0
0x49c1: je 0x4bc0
0x49c7: movzx eax,byte ptr [rbx+0xdf]
0x49ce: cmp byte ptr [rbx+0xd8],al
0x49d4: je 0x4bb4
0x49da: lea rsi,[rip+0xb79a]
0x49e1: mov rbp,qword ptr [rbx+0x28]
0x49e5: mov edx,0x5
0x49ea: xor edi,edi
0x49ec: call 0x27f0
0x49f1: mov rdi,qword ptr [rip+0x2106e8]
0x49f8: mov rdx,rax
0x49fb: mov rcx,rbp
0x49fe: mov esi,0x1
0x4a03: xor eax,eax
0x4a05: call 0x2af0
0x4a0a: movzx eax,byte ptr [rbx+0xd8]
0x4a11: mov edx,0x1
0x4a16: mov byte ptr [rbx+0xdf],al
0x4a1c: cmp qword ptr [rbx+0xc8],0x0
0x4a24: je 0x4a33
0x4a26: cmp byte ptr [rbx+0xdd],0x0
0x4a2d: je 0x4c20
0x4a33: cmp qword ptr [rbx+0xb0],0x0
0x4a3b: je 0x4aa2
0x4a3d: cmp byte ptr [rbx+0xdb],0x0
0x4a44: jne 0x4aa2
0x4a46: test dl,dl
0x4a48: jne 0x4c8f
0x4a4e: mov rsi,rsp
0x4a51: mov rdi,rbx
0x4a54: mov r13d,dword ptr [rbx+0x10]
0x4a58: mov r12,qword ptr [rbx+0x8]
0x4a5c: call 0x4870
0x4a61: lea rsi,[rip+0xbc90]
0x4a68: mov edx,0x5
0x4a6d: xor edi,edi
0x4a6f: mov rbp,rax
0x4a72: call 0x27f0
0x4a77: mov rdi,qword ptr [rip+0x210662]
0x4a7e: mov rdx,rax
0x4a81: mov r9d,r13d
0x4a84: mov r8,r12
0x4a87: mov rcx,rbp
0x4a8a: mov esi,0x1
0x4a8f: xor eax,eax
0x4a91: call 0x2af0
0x4a96: mov byte ptr [rbx+0xdb],0x1
0x4a9d: mov edx,0x1
0x4aa2: cmp qword ptr [rbx+0xb8],0x0
0x4aaa: je 0x4b30
0x4ab0: cmp byte ptr [rbx+0xdc],0x0
0x4ab7: jne 0x4b30
0x4ab9: cmp qword ptr [rbx+0xc0],0x0
0x4ac1: lea rax,[rip+0xb68d]
0x4ac8: lea r8,[rip+0xb8a7]
0x4acf: mov ecx,dword ptr [rbx+0x14]
0x4ad2: mov rdi,qword ptr [rip+0x210607]
0x4ad9: mov esi,0x1
0x4ade: cmovne r8,rax
0x4ae2: xor edx,0x1
0x4ae5: lea rax,[rip+0xb6b7]
0x4aec: movzx edx,dl
0x4aef: add rdx,rax
0x4af2: xor eax,eax
0x4af4: call 0x2af0
0x4af9: cmp qword ptr [rbx+0xd0],0x0
0x4b01: mov byte ptr [rbx+0xdc],0x1
0x4b08: jne 0x4ca8
0x4b0e: cmp byte ptr [rbx+0xa0],0x0
0x4b15: je 0x4b84
0x4b17: mov rbx,qword ptr [rbx+0x58]
0x4b1b: mov rsi,qword ptr [rip+0x2105be]
0x4b22: mov edi,0x20
0x4b27: call 0x2910
0x4b2c: jmp 0x4b58
0x4b30: cmp qword ptr [rbx+0xd0],0x0
0x4b38: je 0x4b47
0x4b3a: cmp byte ptr [rbx+0xde],0x0
0x4b41: je 0x4cc0
0x4b47: cmp byte ptr [rbx+0xa0],0x0
0x4b4e: je 0x4b84
0x4b50: test dl,dl
0x4b52: mov rbx,qword ptr [rbx+0x58]
0x4b56: jne 0x4b1b
0x4b58: lea rsi,[rip+0xb650]
0x4b5f: mov edx,0x5
0x4b64: xor edi,edi
0x4b66: call 0x27f0
0x4b6b: mov rdi,qword ptr [rip+0x21056e]
0x4b72: mov rdx,rax
0x4b75: mov rcx,rbx
0x4b78: mov esi,0x1
0x4b7d: xor eax,eax
0x4b7f: call 0x2af0
0x4b84: mov rsi,qword ptr [rip+0x210555]
0x4b8b: mov edi,0xa
0x4b90: call 0x2910
0x4b95: mov rax,qword ptr [rsp+0x68]
0x4b9a: xor rax,qword ptr fs:0x28
0x4ba3: jne 0x4d42
0x4ba9: add rsp,0x78
0x4bad: pop rbx
0x4bae: pop rbp
0x4baf: pop r12
0x4bb1: pop r13
0x4bb3: ret 
0x4bb4: xor edx,edx
0x4bb6: jmp 0x4a1c
0x4bc0: mov rcx,qword ptr [rbx+0x28]
0x4bc4: mov r9,qword ptr [rbx+0x40]
0x4bc8: lea rdx,[rip+0xb592]
0x4bcf: mov r8,qword ptr [rbx+0x38]
0x4bd3: mov rdi,qword ptr [rip+0x210506]
0x4bda: xor eax,eax
0x4bdc: mov esi,0x1
0x4be1: call 0x2af0
0x4be6: movzx eax,byte ptr [rbx+0xdf]
0x4bed: mov byte ptr [rbx+0xda],0x1
0x4bf4: mov edx,0x1
0x4bf9: cmp byte ptr [rbx+0xd8],al
0x4bff: je 0x4a1c
0x4c05: mov rsi,qword ptr [rip+0x2104d4]
0x4c0c: mov edi,0x20
0x4c11: call 0x2910
0x4c16: jmp 0x49da
0x4c20: mov rcx,qword ptr [rbx+0x48]
0x4c24: xor edx,0x1
0x4c27: lea rax,[rip+0xb559]
0x4c2e: mov r9,qword ptr [rbx+0x58]
0x4c32: mov r8,qword ptr [rbx+0x50]
0x4c36: movzx edx,dl
0x4c39: mov rdi,qword ptr [rip+0x2104a0]
0x4c40: add rdx,rax
0x4c43: mov esi,0x1
0x4c48: xor eax,eax
0x4c4a: call 0x2af0
0x4c4f: mov rcx,qword ptr [rbx+0x60]
0x4c53: test rcx,rcx
0x4c56: jne 0x4d00
0x4c5c: cmp dword ptr [rbx+0x1c],0x1
0x4c60: je 0x4d20
0x4c66: cmp qword ptr [rbx+0xb0],0x0
0x4c6e: mov byte ptr [rbx+0xdd],0x1
0x4c75: mov edx,0x1
0x4c7a: je 0x4aa2
0x4c80: movzx edx,byte ptr [rbx+0xdb]
0x4c87: test dl,dl
0x4c89: jne 0x4aa2
0x4c8f: mov rsi,qword ptr [rip+0x21044a]
0x4c96: mov edi,0x20
0x4c9b: call 0x2910
0x4ca0: jmp 0x4a4e
0x4ca8: cmp byte ptr [rbx+0xde],0x0
0x4caf: jne 0x4b0e
0x4cb5: lea rbp,[rip+0xb49e]
0x4cbc: jmp 0x4cd0
0x4cc0: xor edx,0x1
0x4cc3: movzx ebp,dl
0x4cc6: lea rdx,[rip+0xb48d]
0x4ccd: add rbp,rdx
0x4cd0: mov edi,dword ptr [rbx+0x18]
0x4cd3: mov rsi,rsp
0x4cd6: call 0x41c0
0x4cdb: mov rdi,qword ptr [rip+0x2103fe]
0x4ce2: mov rcx,rax
0x4ce5: mov rdx,rbp
0x4ce8: mov esi,0x1
0x4ced: xor eax,eax
0x4cef: call 0x2af0
0x4cf4: mov byte ptr [rbx+0xde],0x1
0x4cfb: jmp 0x4b0e
0x4d00: mov rdi,qword ptr [rip+0x2103d9]
0x4d07: lea rdx,[rip+0xb48c]
0x4d0e: mov esi,0x1
0x4d13: xor eax,eax
0x4d15: call 0x2af0
0x4d1a: jmp 0x4c5c
0x4d20: mov rcx,qword ptr [rip+0x2103b9]
0x4d27: lea rdi,[rip+0xb472]
0x4d2e: mov edx,0x2
0x4d33: mov esi,0x1
0x4d38: call 0x2ae0
0x4d3d: jmp 0x4c66
0x4d42: call 0x2830
0x4d47: nop word ptr [rax+rax]
0x5613: mov rdx,r14
0x5616: movzx ecx,al
0x5619: sub eax,0x61
0x561c: lea esi,[rcx-0x20]
0x561f: cmp al,0x1a
0x5621: cmovb ecx,esi
0x5624: add rdx,0x1
0x5628: mov byte ptr [rdx-0x1],cl
0x562b: movzx eax,byte ptr [rdx]
0x562e: test al,al
0x5630: jne 0x5616
0x6610: mov edx,eax
0x6612: mov r9d,0x1
0x6618: shr edx,0x10
0x661b: test eax,0x8080
0x6620: cmove eax,edx
0x6623: lea rdx,[rbp+0x2]
0x6627: mov edi,eax
0x6629: cmove rbp,rdx
0x662d: add dil,al
0x6630: sbb rbp,0x3
0x6634: sub rbp,r14
0x6637: cmp rbp,0x3
0x663b: je 0x664a
0x663d: xor r9d,r9d
0x6640: cmp rbp,0x4
0x6644: je 0x6811
0x664a: lea rcx,[rip+0x20e2ef]
0x6651: lea rsi,[rip+0x9b71]
0x6658: mov dword ptr [rsp+0x8],ebx
0x665c: mov qword ptr [rsp+0x20],rbp
0x6661: mov dword ptr [rsp+0x10],r8d
0x6666: mov ebx,r9d
0x6669: mov rbp,rcx
0x666c: mov qword ptr [rsp+0x18],r11
0x6671: test ebx,ebx
0x6673: je 0x67e8
0x6679: mov edx,0x3
0x667e: mov rdi,r14
0x6681: call 0x2760
0x6686: test eax,eax
0x6688: sete al
0x668b: test al,al
0x668d: jne 0x67fa
0x6693: add rbp,0x10
0x6697: mov rsi,qword ptr [rbp]
0x669b: test rsi,rsi
0x669e: jne 0x6671
0x66a0: mov r11,qword ptr [rsp+0x18]
0x66a5: mov r8d,dword ptr [rsp+0x10]
0x66aa: mov rsi,r14
0x66ad: movsxd rbx,dword ptr [rsp+0x8]
0x66b2: mov byte ptr [rsp+0x8],al
0x66b6: mov rbp,qword ptr [rsp+0x20]
0x66bb: mov rdi,r11
0x66be: mov dword ptr [rsp+0x28],r8d
0x66c3: mov qword ptr [rsp+0x10],r11
0x66c8: call 0x4500
0x66cd: test rax,rax
0x66d0: mov rcx,rax
0x66d3: mov r11,qword ptr [rsp+0x10]
0x66d8: mov r8d,dword ptr [rsp+0x28]
0x66dd: jne 0x5679
0x66e3: lea rsi,[rip+0x9a6c]
0x66ea: mov rdi,r14
0x66ed: mov qword ptr [rsp+0x18],r11
0x66f2: mov dword ptr [rsp+0x10],r8d
0x66f7: call 0x2950
0x66fc: test eax,eax
0x66fe: mov r8d,dword ptr [rsp+0x10]
0x6703: mov r11,qword ptr [rsp+0x18]
0x6708: je 0x6835
0x670e: lea rcx,[rip+0x20e16b]
0x6715: lea rsi,[rip+0x9ab5]
0x671c: mov rdi,r14
0x671f: mov qword ptr [rsp+0x20],r11
0x6724: mov qword ptr [rsp+0x18],rcx
0x6729: mov dword ptr [rsp+0x10],r8d
0x672e: call 0x2950
0x6733: test eax,eax
0x6735: mov r8d,dword ptr [rsp+0x10]
0x673a: mov rcx,qword ptr [rsp+0x18]
0x673f: mov r11,qword ptr [rsp+0x20]
0x6744: je 0x5679
0x674a: add rcx,0x10
0x674e: mov rsi,qword ptr [rcx]
0x6751: test rsi,rsi
0x6754: jne 0x671c
0x6756: lea rdx,[r14+rbp-0x1]
0x675b: cmp byte ptr [rdx],0x53
0x675e: je 0x6841
0x6764: lea rcx,[rip+0x20dfb5]
0x676b: lea rsi,[rip+0x9a64]
0x6772: mov rdi,r14
0x6775: mov qword ptr [rsp+0x20],r11
0x677a: mov qword ptr [rsp+0x18],rcx
0x677f: mov dword ptr [rsp+0x10],r8d
0x6784: call 0x2950
0x6789: test eax,eax
0x678b: mov r8d,dword ptr [rsp+0x10]
0x6790: mov rcx,qword ptr [rsp+0x18]
0x6795: mov r11,qword ptr [rsp+0x20]
0x679a: je 0x5679
0x67a0: add rcx,0x10
0x67a4: mov rsi,qword ptr [rcx]
0x67a7: test rsi,rsi
0x67aa: jne 0x6772
0x67ac: sub rbp,0x1
0x67b0: movzx edx,byte ptr [rsp+0x5a0]
0x67b8: je 0x692c
0x67be: mov rax,r14
0x67c1: mov rdx,r14
0x67c4: movzx ecx,byte ptr [rax]
0x67c7: test cl,cl
0x67c9: mov byte ptr [rdx],cl
0x67cb: je 0x68a8
0x67d1: cmp byte ptr [rax],0x2e
0x67d4: je 0x689e
0x67da: add rdx,0x1
0x67de: add rax,0x1
0x67e2: jmp 0x67c4
0x67e8: mov rdi,r14
0x67eb: call 0x2950
0x67f0: test eax,eax
0x67f2: sete al
0x67f5: jmp 0x668b
0x67fa: movsxd rbx,dword ptr [rsp+0x8]
0x67ff: mov r8d,dword ptr [rsp+0x10]
0x6804: mov rcx,rbp
0x6807: mov r11,qword ptr [rsp+0x18]
0x680c: jmp 0x5679
0x6811: xor r9d,r9d
0x6814: cmp byte ptr [rsp+0x5a3],0x2e
0x681c: sete r9b
0x6820: jmp 0x664a
0x6830: call 0x2830
0x6835: lea rcx,[rip+0x20e294]
0x683c: jmp 0x5679
0x6841: lea rcx,[rip+0x20e038]
0x6848: lea rsi,[rip+0x9982]
0x684f: mov byte ptr [rdx],0x0
0x6852: mov rdi,r14
0x6855: mov qword ptr [rsp+0x28],r11
0x685a: mov qword ptr [rsp+0x20],rcx
0x685f: mov dword ptr [rsp+0x10],r8d
0x6864: mov qword ptr [rsp+0x18],rdx
0x6869: call 0x2950
0x686e: test eax,eax
0x6870: mov r8d,dword ptr [rsp+0x10]
0x6875: mov rcx,qword ptr [rsp+0x20]
0x687a: mov r11,qword ptr [rsp+0x28]
0x687f: je 0x5679
0x6885: add rcx,0x10
0x6889: mov rsi,qword ptr [rcx]
0x688c: mov rdx,qword ptr [rsp+0x18]
0x6891: test rsi,rsi
0x6894: jne 0x6852
0x6896: mov byte ptr [rdx],0x53
0x6899: jmp 0x6764
0x689e: mov byte ptr [rsp+0x8],0x1
0x68a3: jmp 0x67de
0x68a8: cmp byte ptr [rsp+0x8],0x0
0x68ad: je 0x68da
0x68af: mov rdi,r11
0x68b2: mov rsi,r14
0x68b5: mov dword ptr [rsp+0x10],r8d
0x68ba: mov qword ptr [rsp+0x8],r11
0x68bf: call 0x4500
0x68c4: test rax,rax
0x68c7: mov rcx,rax
0x68ca: mov r11,qword ptr [rsp+0x8]
0x68cf: mov r8d,dword ptr [rsp+0x10]
0x68d4: jne 0x5679
0x68da: cmp byte ptr [r11+0xd9],0x0
0x68e2: je 0x6387
0x68e8: lea rsi,[rip+0x98f2]
0x68ef: mov edx,0x5
0x68f4: xor edi,edi
0x68f6: mov qword ptr [rsp+0x10],r11
0x68fb: mov dword ptr [rsp+0x8],r8d
0x6900: call 0x27f0
0x6905: mov rsi,r14
0x6908: mov rdi,rax
0x690b: xor eax,eax
0x690d: call 0x42c0
0x6912: mov eax,0x2
0x6917: mov r9d,0x3f
0x691d: mov r8d,dword ptr [rsp+0x8]
0x6922: mov r11,qword ptr [rsp+0x10]
0x6927: jmp 0x542e
0x692c: lea rcx,[rip+0x20d90d]
0x6933: lea rax,[rip+0x98a5]
0x693a: cmp byte ptr [rax],dl
0x693c: je 0x5679
0x6942: add rcx,0x10
0x6946: mov rax,qword ptr [rcx]
0x6949: test rax,rax
0x694c: jne 0x693a
0x694e: jmp 0x67be
0x6df6: add rbp,qword ptr [rsp+0x30]
0x6dfb: mov rbx,qword ptr [rsp+0x1b0]
0x6e03: mov edx,0x5
0x6e08: cmp rbx,rbp
0x6e0b: jb 0x7228
0x6e11: lea rsi,[rip+0x9431]
0x6e18: xor edi,edi
0x6e1a: call 0x27f0
0x6e1f: mov rdi,rax
0x6e22: mov rsi,rbx
0x6e25: xor eax,eax
0x6e27: xor r12d,r12d
0x6e2a: call 0x42c0
0x6e2f: jmp 0x6d9e
0x6f58: mov rax,qword ptr [rsp+0x28]
0x6f5d: movdqu xmm0,[rsp+0x208]
0x6f66: movups [rax],xmm0
0x6f69: jmp 0x6d9e
0x6f70: lea r14,[rsp+0x60]
0x6f75: mov rdi,r14
0x6f78: call 0x3fe0
0x6f7d: jmp 0x69b2
0x6f88: lea rsi,[rip+0x92d1]
0x6f8f: mov edx,0x5
0x6f94: xor edi,edi
0x6f96: call 0x27f0
0x6f9b: mov rdi,rax
0x6f9e: xor eax,eax
0x6fa0: call 0x42c0
0x6fa5: cmp byte ptr [rsp+0x250],0x0
0x6fad: mov edx,0x5
0x6fb2: lea rsi,[rip+0x92b8]
0x6fb9: jne 0x7020
0x6fbb: cmp qword ptr [rsp+0x280],0x0
0x6fc4: mov edx,0x5
0x6fc9: lea rsi,[rip+0x92ba]
0x6fd0: jne 0x7020
0x6fd2: mov rbx,qword ptr [rsp+0x10]
0x6fd7: test rbx,rbx
0x6fda: je 0x7014
0x6fdc: cmp qword ptr [rsp],r15
0x6fe0: je 0x747f
0x6fe6: lea rsi,[rip+0x92b5]
0x6fed: mov edx,0x5
0x6ff2: xor edi,edi
0x6ff4: call 0x27f0
0x6ff9: mov rcx,rbx
0x6ffc: mov rdi,qword ptr [rip+0x20e0dd]
0x7003: mov rdx,rax
0x7006: mov esi,0x1
0x700b: xor eax,eax
0x700d: call 0x2af0
0x7012: jmp 0x703d
0x7014: lea rsi,[rip+0x92bd]
0x701b: mov edx,0x5
0x7020: xor edi,edi
0x7022: call 0x27f0
0x7027: mov rdi,qword ptr [rip+0x20e0b2]
0x702e: mov rdx,rax
0x7031: mov esi,0x1
0x7036: xor eax,eax
0x7038: call 0x2af0
0x703d: cmp qword ptr [rsp+0x268],0x0
0x7046: mov rax,qword ptr [rsp+0x280]
0x704e: je 0x7090
0x7050: test rax,rax
0x7053: jne 0x7356
0x7059: mov r8d,dword ptr [rsp+0x1c4]
0x7061: mov rsi,qword ptr [rip+0x20e078]
0x7068: test r8d,r8d
0x706b: jle 0x70a0
0x706d: lea rdi,[rip+0x9279]
0x7074: mov rcx,rsi
0x7077: mov edx,0x5
0x707c: mov esi,0x1
0x7081: call 0x2ae0
0x7086: mov rax,qword ptr [rsp+0x280]
0x708e: nop 
0x7090: test rax,rax
0x7093: jne 0x7356
0x7099: mov rsi,qword ptr [rip+0x20e040]
0x70a0: mov edi,0xa
0x70a5: call 0x2910
0x70aa: cmp byte ptr [rsp+0x250],0x0
0x70b2: movzx r12d,byte ptr [rsp+0x289]
0x70bb: je 0x7248
0x70c1: mov rax,qword ptr [rsp+0x28]
0x70c6: movdqu xmm0,[rsp+0x208]
0x70cf: movups [rax],xmm0
0x70d2: test r12b,r12b
0x70d5: je 0x7393
0x70db: mov edx,0x5
0x70e0: lea rsi,[rip+0x9395]
0x70e7: cmp qword ptr [rsp+0x10],0x0
0x70ed: je 0x72f2
0x70f3: mov rsi,qword ptr [rsp+0x10]
0x70f8: lea rdi,[rip+0x91ba]
0x70ff: mov ecx,0x5
0x7104: mov edx,0x5
0x7109: rep cmpsb [rsi],es:[rdi]
0x710b: seta al
0x710e: sbb al,0x0
0x7110: test al,al
0x7112: je 0x72eb
0x7118: lea rsi,[rip+0x9d51]
0x711f: xor edi,edi
0x7121: call 0x27f0
0x7126: mov rsi,qword ptr [rsp+0x10]
0x712b: mov rdi,rax
0x712e: xor eax,eax
0x7130: call 0x42c0
0x7135: mov r14,qword ptr [rsp+0x28]
0x713a: lea rsi,[rip+0x9d57]
0x7141: xor edi,edi
0x7143: mov edx,0x5
0x7148: mov rbx,qword ptr [r14]
0x714b: mov rbp,qword ptr [r14+0x8]
0x714f: call 0x27f0
0x7154: mov rdi,rax
0x7157: xor eax,eax
0x7159: mov rsi,rbx
0x715c: lea rbx,[rsp+0x130]
0x7164: mov edx,ebp
0x7166: call 0x42c0
0x716b: mov rsi,rbx
0x716e: mov rdi,r14
0x7171: call 0x28b0
0x7176: test rax,rax
0x7179: je 0x71b0
0x717b: lea rdx,[rsp+0x300]
0x7183: mov rdi,rbx
0x7186: xor esi,esi
0x7188: call 0x47b0
0x718d: lea rsi,[rip+0x931c]
0x7194: mov rbx,rax
0x7197: xor edi,edi
0x7199: mov edx,0x5
0x719e: call 0x27f0
0x71a3: mov rsi,rbx
0x71a6: mov rdi,rax
0x71a9: xor eax,eax
0x71ab: call 0x42c0
0x71b0: lea rbx,[rsp+0x170]
0x71b8: mov rsi,qword ptr [rsp+0x28]
0x71bd: mov rdi,r15
0x71c0: mov rdx,rbx
0x71c3: call 0xb570
0x71c8: test rax,rax
0x71cb: je 0x6d9e
0x71d1: mov edi,dword ptr [rsp+0x198]
0x71d8: lea rsi,[rsp+0x2e0]
0x71e0: call 0x41c0
0x71e5: lea rdx,[rsp+0x300]
0x71ed: xor esi,esi
0x71ef: mov rdi,rbx
0x71f2: mov rbp,rax
0x71f5: call 0x47b0
0x71fa: lea rsi,[rip+0x92c0]
0x7201: mov rbx,rax
0x7204: xor edi,edi
0x7206: mov edx,0x5
0x720b: call 0x27f0
0x7210: mov rdx,rbp
0x7213: mov rdi,rax
0x7216: mov rsi,rbx
0x7219: xor eax,eax
0x721b: call 0x42c0
0x7220: jmp 0x6d9e
0x7228: lea rsi,[rip+0x9569]
0x722f: xor edi,edi
0x7231: call 0x27f0
0x7236: mov rdi,rax
0x7239: jmp 0x6e22
0x7248: mov rsi,qword ptr [rsp+0x278]
0x7250: mov rcx,qword ptr [rsp+0x258]
0x7258: mov rdx,qword ptr [rsp+0x280]
0x7260: add rdx,qword ptr [rsp+0x268]
0x7268: mov rax,rsi
0x726b: or rax,rcx
0x726e: or rax,qword ptr [rsp+0x260]
0x7276: or rax,qword ptr [rsp+0x270]
0x727e: or rax,rdx
0x7281: cmp rax,0x1
0x7285: jle 0x73c9
0x728b: test r12b,r12b
0x728e: je 0x6d9b
0x7294: cmp rsi,0x1
0x7298: jg 0x733b
0x729e: cmp rcx,0x1
0x72a2: jg 0x7328
0x72a8: cmp qword ptr [rsp+0x260],0x1
0x72b1: jg 0x7318
0x72b3: cmp qword ptr [rsp+0x270],0x1
0x72bc: jg 0x7308
0x72be: mov rax,qword ptr [rsp+0x280]
0x72c6: add rax,qword ptr [rsp+0x268]
0x72ce: cmp rax,0x1
0x72d2: jle 0x6d9b
0x72d8: lea rdi,[rip+0x95b1]
0x72df: xor eax,eax
0x72e1: call 0x42c0
0x72e6: jmp 0x6d9b
0x72eb: lea rsi,[rip+0x91a4]
0x72f2: xor edi,edi
0x72f4: call 0x27f0
0x72f9: mov rdi,rax
0x72fc: xor eax,eax
0x72fe: call 0x42c0
0x7303: jmp 0x7135
0x7308: lea rdi,[rip+0x9551]
0x730f: xor eax,eax
0x7311: call 0x42c0
0x7316: jmp 0x72be
0x7318: lea rdi,[rip+0x9519]
0x731f: xor eax,eax
0x7321: call 0x42c0
0x7326: jmp 0x72b3
0x7328: lea rdi,[rip+0x94e1]
0x732f: xor eax,eax
0x7331: call 0x42c0
0x7336: jmp 0x72a8
0x733b: lea rdi,[rip+0x94a6]
0x7342: xor eax,eax
0x7344: call 0x42c0
0x7349: mov rcx,qword ptr [rsp+0x258]
0x7351: jmp 0x729e
0x7356: mov edi,dword ptr [rsp+0x1c8]
0x735d: lea rsi,[rsp+0x2e0]
0x7365: call 0x41c0
0x736a: mov rdi,qword ptr [rip+0x20dd6f]
0x7371: lea rdx,[rip+0x8f6f]
0x7378: mov rcx,rax
0x737b: mov esi,0x1
0x7380: xor eax,eax
0x7382: call 0x2af0
0x7387: mov rsi,qword ptr [rip+0x20dd52]
0x738e: jmp 0x70a0
0x7393: mov r12d,0x1
0x7399: jmp 0x6d9e
0x742d: lea rsi,[rip+0x8ebf]
0x7434: xor edi,edi
0x7436: mov edx,0x5
0x743b: call 0x27f0
0x7440: mov rsi,rbp
0x7443: mov rdi,rax
0x7446: xor eax,eax
0x7448: call 0x42c0
0x7469: xor edi,edi
0x746b: call 0x27f0
0x7470: mov rdi,rax
0x7473: xor eax,eax
0x7475: call 0x42c0
0x747a: jmp 0x6d9b
0x747f: mov rsi,qword ptr [rsp+0x10]
0x7484: lea rdi,[rip+0x8e2e]
0x748b: mov ecx,0x5
0x7490: mov edx,0x5
0x7495: rep cmpsb [rsi],es:[rdi]
0x7497: lea rsi,[rip+0x9322]
0x749e: seta al
0x74a1: sbb al,0x0
0x74a3: test al,al
0x74a5: je 0x7020
0x74ab: lea rsi,[rip+0x8e0c]
0x74b2: xor edi,edi
0x74b4: call 0x27f0
0x74b9: mov rcx,qword ptr [rsp+0x10]
0x74be: jmp 0x6ffc
0x7539: cmp qword ptr [rsp+0x258],0x0
0x7542: jne 0x7c42
0x7548: cmp qword ptr [rsp+0x260],0x0
0x7551: je 0x7b93
0x7557: test al,al
0x7559: mov qword ptr [rsp+0x70],0x0
0x7562: mov dword ptr [rsp+0x78],0x0
0x756a: mov qword ptr [rsp+0x210],0x0
0x7576: jne 0x7c63
0x757c: mov dword ptr [rsp+0x90],0xffffffff
0x761d: lea rdi,[rsp+0xb0]
0x7625: mov rsi,rbp
0x7628: call 0x44d0
0x762d: test al,al
0x762f: jne 0x7a58
0x76db: cmp r14d,ebp
0x76de: jne 0x822d
0x76e4: mov ebx,dword ptr [rsp+0x28]
0x76e8: cmp r11d,ebx
0x76eb: jne 0x822d
0x76f1: test al,al
0x76f3: je 0x6d9b
0x76f9: lea rsi,[rip+0x92a8]
0x7700: mov edx,0x5
0x7705: xor edi,edi
0x7707: lea rbx,[rsp+0x3e0]
0x770f: call 0x27f0
0x7714: mov rdi,rax
0x7717: xor eax,eax
0x7719: call 0x42c0
0x771e: lea rdi,[rsp+0xb0]
0x7726: mov rdx,rbx
0x7729: mov rsi,r13
0x772c: call 0x47b0
0x7731: lea rsi,[rip+0x8c21]
0x7738: mov r12,rax
0x773b: mov edx,0x5
0x7740: xor edi,edi
0x7742: call 0x27f0
0x7747: mov rsi,r12
0x774a: mov rdi,rax
0x774d: xor eax,eax
0x774f: call 0x42c0
0x7754: mov rdi,qword ptr [rsp+0x18]
0x7759: mov rdx,rbx
0x775c: mov rsi,r13
0x775f: call 0x47b0
0x7764: lea rsi,[rip+0x8c0c]
0x776b: mov r12,rax
0x776e: mov edx,0x5
0x7773: xor edi,edi
0x7775: call 0x27f0
0x777a: mov rsi,r12
0x777d: mov rdi,rax
0x7780: xor eax,eax
0x7782: call 0x42c0
0x7787: lea rsi,[rip+0x8be8]
0x778e: mov r12d,0x1
0x7794: mov rax,rsi
0x7797: mov r11d,dword ptr [rsp+0x40]
0x779c: cmp dword ptr [rsp+0x38],r11d
0x77a1: lea rcx,[rip+0x8bce]
0x77a8: lea rdx,[rip+0x8a92]
0x77af: mov r11d,dword ptr [rsp+0x20]
0x77b4: lea r9,[rip+0x8a84]
0x77bb: mov r8,rcx
0x77be: mov rdi,rcx
0x77c1: cmovne r8,rdx
0x77c5: cmp dword ptr [rsp+0x10],r11d
0x77ca: mov r11d,dword ptr [rsp+0x28]
0x77cf: cmovne rdi,rdx
0x77d3: cmp r14d,ebp
0x77d6: cmove rdx,rcx
0x77da: cmp dword ptr [rsp+0x44],r11d
0x77df: cmove r9,rcx
0x77e3: sub rsp,0x8
0x77e7: mov ecx,0x64
0x77ec: push rsi
0x77ed: push rax
0x77ee: mov esi,0x64
0x77f3: push r8
0x77f5: lea r8,[rip+0x91d4]
0x77fc: push rdi
0x77fd: push rdx
0x77fe: mov rdi,rbx
0x7801: mov edx,0x1
0x7806: xor eax,eax
0x7808: call 0x2700
0x780d: add rsp,0x30
0x7811: mov eax,0x34
0x7816: jmp 0x7822
0x7818: sub rax,0x1
0x781c: cmp byte ptr [rbx+rax],0x20
0x7820: jne 0x7828
0x7822: test eax,eax
0x7824: mov edx,eax
0x7826: jne 0x7818
0x7828: movsxd rax,edx
0x782b: lea rdi,[rip+0x8ba6]
0x7832: mov rsi,rbx
0x7835: mov byte ptr [rsp+rax+0x3e0],0x0
0x783d: xor eax,eax
0x783f: call 0x42c0
0x7844: lea rsi,[rip+0x8b4a]
0x784b: xor edi,edi
0x784d: mov edx,0x5
0x7852: call 0x27f0
0x7857: mov rdi,rax
0x785a: xor eax,eax
0x785c: call 0x42c0
0x7861: test r12d,r12d
0x7864: je 0x7883
0x7866: lea rsi,[rip+0x91a3]
0x786d: xor edi,edi
0x786f: mov edx,0x5
0x7874: call 0x27f0
0x7879: mov rdi,rax
0x787c: xor eax,eax
0x787e: call 0x42c0
0x7883: mov ebx,dword ptr [rsp+0x20]
0x7887: cmp dword ptr [rsp+0x10],ebx
0x788b: je 0x78af
0x788d: cmp r14d,ebp
0x7890: je 0x78af
0x7892: lea rsi,[rip+0x91af]
0x7899: xor edi,edi
0x789b: mov edx,0x5
0x78a0: call 0x27f0
0x78a5: mov rdi,rax
0x78a8: xor eax,eax
0x78aa: call 0x42c0
0x78af: lea rsi,[rip+0x91ba]
0x78b6: mov edx,0x5
0x78bb: xor edi,edi
0x78bd: call 0x27f0
0x78c2: mov rdi,rax
0x78c5: xor eax,eax
0x78c7: call 0x42c0
0x78cc: cmp qword ptr [rsp+0x30],0x0
0x78d2: mov edx,0x5
0x78d7: je 0x86b6
0x78dd: lea rsi,[rip+0x8ac9]
0x78e4: xor edi,edi
0x78e6: call 0x27f0
0x78eb: lea rdi,[rip+0x8adf]
0x78f2: mov rsi,rax
0x78f5: xor eax,eax
0x78f7: call 0x42c0
0x78fc: jmp 0x6d9b
0x7938: cmp rbp,0x44
0x793c: mov ebx,0x76c
0x7941: mov eax,0x7d0
0x7946: cmovle rbx,rax
0x794a: add rbx,rbp
0x794d: test r12b,r12b
0x7950: jne 0x7b68
0x7956: mov rbp,rbx
0x7959: jmp 0x73e9
0x795e: mov edi,dword ptr [rsp+0x1c8]
0x7965: lea rsi,[rsp+0x3e3]
0x796d: lea rbp,[rsp+0x3e0]
0x7975: mov word ptr [rsp+0x3e0],0x5858
0x797f: mov byte ptr [rsp+0x3e2],0x58
0x7987: call 0x41c0
0x798c: mov rdi,rbp
0x798f: call 0xb2b0
0x7994: test rax,rax
0x7997: mov rdx,rax
0x799a: je 0x84a7
0x79a0: mov eax,dword ptr [rsp+0xb0]
0x79a7: mov rsi,qword ptr [rsp+0x18]
0x79ac: mov rdi,rdx
0x79af: mov qword ptr [rsp+0x20],rdx
0x79b4: mov dword ptr [rsp+0x88],0xffffffff
0x79bf: mov dword ptr [rsp+0x70],eax
0x79c3: mov eax,dword ptr [rsp+0xb4]
0x79ca: mov dword ptr [rsp+0x74],eax
0x79ce: mov eax,dword ptr [rsp+0xb8]
0x79d5: mov dword ptr [rsp+0x78],eax
0x79d9: mov eax,dword ptr [rsp+0xbc]
0x79e0: mov dword ptr [rsp+0x7c],eax
0x79e4: mov eax,dword ptr [rsp+0xc0]
0x79eb: mov dword ptr [rsp+0x80],eax
0x79f2: mov eax,dword ptr [rsp+0xc4]
0x79f9: mov dword ptr [rsp+0x84],eax
0x7a00: mov eax,dword ptr [rsp+0xd0]
0x7a07: mov dword ptr [rsp+0x90],eax
0x7a0e: call 0xb620
0x7a13: cmp dword ptr [rsp+0x88],0x0
0x7a1b: mov r14,rax
0x7a1e: mov rdx,qword ptr [rsp+0x20]
0x7a23: js 0x8574
0x7a29: mov rsi,qword ptr [rsp+0x18]
0x7a2e: lea rdi,[rsp+0xb0]
0x7a36: mov qword ptr [rsp+0x20],rdx
0x7a3b: call 0x44d0
0x7a40: mov rdx,qword ptr [rsp+0x20]
0x7a45: mov ebp,eax
0x7a47: mov rdi,rdx
0x7a4a: call 0xb560
0x7a4f: test bpl,bpl
0x7a52: je 0x764b
0x7a58: cmp qword ptr [rsp+0x260],0x0
0x7a61: je 0x7cf7
0x7a67: cmp qword ptr [rsp+0x258],0x0
0x7a70: jne 0x7e3e
0x7a76: mov rax,qword ptr [rsp+0x1b8]
0x7a7e: test rax,rax
0x7a81: jle 0x7a98
0x7a83: xor r12d,r12d
0x7a86: mov esi,dword ptr [rsp+0x1c0]
0x7a8d: cmp dword ptr [rsp+0x88],esi
0x7a94: setne r12b
0x7a98: sub rax,r12
0x7a9b: imul rcx,rax,0x7
0x7a9f: jo 0x7aea
0x7aa1: mov eax,dword ptr [rsp+0x1c0]
0x7aa8: sub eax,dword ptr [rsp+0x88]
0x7aaf: mov esi,0x7
0x7ab4: add eax,0x7
0x7ab7: cltd 
0x7ab8: idiv esi
0x7aba: movsxd rax,edx
0x7abd: add rax,rcx
0x7ac0: jo 0x7aea
0x7ac2: movsxd rdx,dword ptr [rsp+0x7c]
0x7ac7: add rax,rdx
0x7aca: seto dl
0x7acd: movsxd rcx,eax
0x7ad0: mov dword ptr [rsp+0x7c],eax
0x7ad4: cmp rax,rcx
0x7ad7: movzx edx,dl
0x7ada: mov ecx,0x1
0x7adf: cmovne edx,ecx
0x7ae2: test edx,edx
0x7ae4: je 0x7c73
0x7aea: cmp byte ptr [rsp+0x289],0x0
0x7af2: je 0x6d9b
0x7af8: mov rdi,qword ptr [rsp+0x18]
0x7afd: lea rdx,[rsp+0x300]
0x7b05: mov rsi,r13
0x7b08: call 0x47b0
0x7b0d: lea rsi,[rsp+0x3e0]
0x7b15: mov r14d,dword ptr [rsp+0x1c0]
0x7b1d: mov rbp,qword ptr [rsp+0x1b8]
0x7b25: mov rdi,r13
0x7b28: mov r12,rax
0x7b2b: call 0x4870
0x7b30: lea rsi,[rip+0x8f61]
0x7b37: mov rbx,rax
0x7b3a: xor edi,edi
0x7b3c: mov edx,0x5
0x7b41: call 0x27f0
0x7b46: mov r8,r12
0x7b49: mov rdi,rax
0x7b4c: mov ecx,r14d
0x7b4f: mov rdx,rbp
0x7b52: mov rsi,rbx
0x7b55: xor eax,eax
0x7b57: call 0x42c0
0x7b5c: jmp 0x6d9b
0x7b68: lea rsi,[rip+0x8d49]
0x7b6f: mov edx,0x5
0x7b74: xor edi,edi
0x7b76: call 0x27f0
0x7b7b: mov rsi,rbp
0x7b7e: mov rdi,rax
0x7b81: mov rdx,rbx
0x7b84: xor eax,eax
0x7b86: mov rbp,rbx
0x7b89: call 0x42c0
0x7b8e: jmp 0x73e9
0x7b93: mov r9d,dword ptr [rsp+0x1cc]
0x7b9b: mov rbp,qword ptr [rsp+0x1f8]
0x7ba3: test r9d,r9d
0x7ba6: je 0x8208
0x7bac: cmp r9d,0x1
0x7bb0: jne 0x7c2e
0x7bb2: lea rdx,[rbp-0x1]
0x7bb6: lea r9d,[rbp+0xc]
0x7bba: cmp rdx,0xa
0x7bbe: jbe 0x7c3b
0x7bc0: cmp rbp,0xc
0x7bc4: jne 0x8662
0x7bca: mov dword ptr [rsp+0x78],0xc
0x7bd2: mov r9d,0xc
0x7bd8: mov rdx,qword ptr [rsp+0x200]
0x7be0: mov rcx,qword ptr [rsp+0x208]
0x7be8: test al,al
0x7bea: mov dword ptr [rsp+0x74],edx
0x7bee: mov dword ptr [rsp+0x70],ecx
0x7bf2: jne 0x81a8
0x7c16: jmp 0x757c
0x7c1b: mov eax,dword ptr [rsp+0x1c4]
0x7c22: mov dword ptr [rsp+0x90],eax
0x7c29: jmp 0x759d
0x7c2e: cmp rbp,0x17
0x7c32: ja 0x84da
0x7c38: mov r9d,ebp
0x7c3b: mov dword ptr [rsp+0x78],r9d
0x7c40: jmp 0x7bd8
0x7c63: lea rdi,[rip+0x8d06]
0x7c6a: xor eax,eax
0x7c6c: call 0x42c0
0x7c71: jmp 0x7bf8
0x7c73: mov rsi,qword ptr [rsp+0x18]
0x7c78: mov rdi,r15
0x7c7b: mov dword ptr [rsp+0x90],0xffffffff
0x7c86: call 0xb620
0x7c8b: cmp rax,-0x1
0x7c8f: mov r14,rax
0x7c92: je 0x7aea
0x7c98: cmp byte ptr [rsp+0x289],0x0
0x7ca0: je 0x7e4e
0x7ca6: lea rbp,[rsp+0x300]
0x7cae: mov rdi,qword ptr [rsp+0x18]
0x7cb3: mov rsi,r13
0x7cb6: mov rdx,rbp
0x7cb9: call 0x47b0
0x7cbe: lea rsi,[rsp+0x3e0]
0x7cc6: mov rdi,r13
0x7cc9: mov rbp,rax
0x7ccc: call 0x4870
0x7cd1: lea rsi,[rip+0x8704]
0x7cd8: mov r12,rax
0x7cdb: mov edx,0x5
0x7ce0: xor edi,edi
0x7ce2: call 0x27f0
0x7ce7: mov rdx,rbp
0x7cea: mov rdi,rax
0x7ced: mov rsi,r12
0x7cf0: xor eax,eax
0x7cf2: call 0x42c0
0x7cf7: cmp byte ptr [rsp+0x289],0x0
0x7cff: je 0x7e4e
0x7d05: cmp qword ptr [rsp+0x258],0x0
0x7d0e: mov rax,qword ptr [rsp+0x260]
0x7d16: jne 0x815f
0x7d1c: test rax,rax
0x7d1f: je 0x8581
0x7d25: lea rbp,[rsp+0x300]
0x7d2d: mov rdi,qword ptr [rsp+0x18]
0x7d32: mov rdx,rbp
0x7d35: mov rsi,r13
0x7d38: call 0x47b0
0x7d3d: lea rsi,[rip+0x86cb]
0x7d44: mov rbx,rax
0x7d47: mov edx,0x5
0x7d4c: xor edi,edi
0x7d4e: call 0x27f0
0x7d53: mov rsi,rbx
0x7d56: mov rdi,rax
0x7d59: xor eax,eax
0x7d5b: call 0x42c0
0x7d60: mov rax,qword ptr [rsp+0x218]
0x7d68: mov rdx,qword ptr [rsp+0x220]
0x7d70: movzx ebx,byte ptr [rsp+0x289]
0x7d78: or rdx,rax
0x7d7b: mov rsi,rdx
0x7d7e: or rsi,qword ptr [rsp+0x228]
0x7d86: je 0x7e6b
0x7d8c: test bl,bl
0x7d8e: je 0x7ed5
0x7d94: test rdx,rdx
0x7d97: je 0x8689
0x7d9d: cmp dword ptr [rsp+0x7c],0xf
0x7da2: je 0x7dc1
0x7da4: lea rsi,[rip+0x8dad]
0x7dab: xor edi,edi
0x7dad: mov edx,0x5
0x7db2: call 0x27f0
0x7db7: mov rdi,rax
0x7dba: xor eax,eax
0x7dbc: call 0x42c0
0x7dc1: cmp qword ptr [rsp+0x228],0x0
0x7dca: jne 0x8689
0x7dd0: movsxd rdx,dword ptr [rsp+0x84]
0x7dd8: xor eax,eax
0x7dda: mov rcx,rdx
0x7ddd: add rcx,qword ptr [rsp+0x218]
0x7de5: movsxd rdx,ecx
0x7de8: seto al
0x7deb: mov dword ptr [rsp+0x20],ecx
0x7def: cmp rcx,rdx
0x7df2: mov edx,0x1
0x7df7: cmovne eax,edx
0x7dfa: test eax,eax
0x7dfc: je 0x7f00
0x7e02: cmp byte ptr [rsp+0x289],0x0
0x7e0a: je 0x6d9b
0x7e10: lea rsi,[rip+0x8612]
0x7e17: xor edi,edi
0x7e19: mov edx,0x5
0x7e1e: call 0x27f0
0x7e23: lea rsi,[rip+0x860d]
0x7e2a: mov rdi,rax
0x7e2d: mov edx,0x877
0x7e32: xor eax,eax
0x7e34: call 0x42c0
0x7e39: jmp 0x6d9b
0x7e3e: movzx ebx,byte ptr [rsp+0x289]
0x7e46: test bl,bl
0x7e48: jne 0x8168
0x7e4e: mov rax,qword ptr [rsp+0x218]
0x7e56: mov rdx,qword ptr [rsp+0x220]
0x7e5e: or rdx,rax
0x7e61: or rdx,qword ptr [rsp+0x228]
0x7e69: jne 0x7ed5
0x7e6b: cmp qword ptr [rsp+0x280],0x0
0x7e74: je 0x8311
0x7e7a: movsxd rax,dword ptr [rsp+0x1c8]
0x7e82: xor edx,edx
0x7e84: mov rbp,rax
0x7e87: sub rax,qword ptr [rsp+0x98]
0x7e8f: seto dl
0x7e92: sub r14,rax
0x7e95: seto al
0x7e98: movzx eax,al
0x7e9b: or rdx,rax
0x7e9e: je 0x8311
0x7ea4: test bl,bl
0x7ea6: je 0x6d9b
0x7eac: lea rsi,[rip+0x8ea5]
0x7eb3: xor edi,edi
0x7eb5: mov edx,0x5
0x7eba: call 0x27f0
0x7ebf: mov esi,ebp
0x7ec1: mov rdi,rax
0x7ec4: xor eax,eax
0x7ec6: call 0x42c0
0x7ecb: jmp 0x6d9b
0x7ed0: call 0x2830
0x7ed5: movsxd rdx,dword ptr [rsp+0x84]
0x7edd: add rax,rdx
0x7ee0: seto dl
0x7ee3: movsxd rcx,eax
0x7ee6: mov dword ptr [rsp+0x20],eax
0x7eea: cmp rax,rcx
0x7eed: movzx edx,dl
0x7ef0: mov ecx,0x1
0x7ef5: cmovne edx,ecx
0x7ef8: test edx,edx
0x7efa: jne 0x6d9b
0x7f00: movsxd r12,dword ptr [rsp+0x80]
0x7f08: xor eax,eax
0x7f0a: add r12,qword ptr [rsp+0x220]
0x7f12: movsxd rdx,r12d
0x7f15: seto al
0x7f18: cmp r12,rdx
0x7f1b: jne 0x7e02
0x7f21: test eax,eax
0x7f23: jne 0x7e02
0x7f29: movsxd rbp,dword ptr [rsp+0x7c]
0x7f2e: xor eax,eax
0x7f30: add rbp,qword ptr [rsp+0x228]
0x7f38: movsxd rdx,ebp
0x7f3b: seto al
0x7f3e: cmp rbp,rdx
0x7f41: jne 0x7e02
0x7f47: test eax,eax
0x7f49: jne 0x7e02
0x7f4f: mov eax,dword ptr [rsp+0x20]
0x7f53: mov rsi,qword ptr [rsp+0x18]
0x7f58: mov rdi,r15
0x7f5b: mov dword ptr [rsp+0x80],r12d
0x7f63: mov dword ptr [rsp+0x7c],ebp
0x7f67: mov dword ptr [rsp+0x84],eax
0x7f6e: mov eax,dword ptr [rsp+0xb8]
0x7f75: mov dword ptr [rsp+0x78],eax
0x7f79: mov eax,dword ptr [rsp+0xb4]
0x7f80: mov dword ptr [rsp+0x74],eax
0x7f84: mov eax,dword ptr [rsp+0xb0]
0x7f8b: mov dword ptr [rsp+0x70],eax
0x7f8f: mov eax,dword ptr [rsp+0xd0]
0x7f96: mov dword ptr [rsp+0x90],eax
0x7f9d: call 0xb620
0x7fa2: cmp rax,-0x1
0x7fa6: mov r14,rax
0x7fa9: je 0x8617
0x7faf: movzx ebx,byte ptr [rsp+0x289]
0x7fb7: test bl,bl
0x7fb9: je 0x7e6b
0x7fbf: mov rcx,qword ptr [rsp+0x228]
0x7fc7: mov rax,qword ptr [rsp+0x218]
0x7fcf: lea rsi,[rip+0x8c72]
0x7fd6: mov rbx,qword ptr [rsp+0x220]
0x7fde: xor edi,edi
0x7fe0: mov edx,0x5
0x7fe5: mov qword ptr [rsp+0x38],rcx
0x7fea: mov qword ptr [rsp+0x30],rax
0x7fef: call 0x27f0
0x7ff4: mov rcx,qword ptr [rsp+0x38]
0x7ff9: mov rsi,qword ptr [rsp+0x30]
0x7ffe: mov rdx,rbx
0x8001: mov rdi,rax
0x8004: xor eax,eax
0x8006: call 0x42c0
0x800b: mov rdi,qword ptr [rsp+0x18]
0x8010: lea rdx,[rsp+0x300]
0x8018: mov rsi,r13
0x801b: call 0x47b0
0x8020: lea rsi,[rip+0x8421]
0x8027: xor edi,edi
0x8029: mov rbx,rax
0x802c: mov edx,0x5
0x8031: call 0x27f0
0x8036: mov rsi,rbx
0x8039: mov rdi,rax
0x803c: xor eax,eax
0x803e: call 0x42c0
0x8043: mov eax,dword ptr [rsp+0xd0]
0x804a: cmp eax,-0x1
0x804d: je 0x8075
0x804f: cmp eax,dword ptr [rsp+0x90]
0x8056: je 0x8075
0x8058: lea rsi,[rip+0x8c29]
0x805f: xor edi,edi
0x8061: mov edx,0x5
0x8066: call 0x27f0
0x806b: mov rdi,rax
0x806e: xor eax,eax
0x8070: call 0x42c0
0x8075: cmp qword ptr [rsp+0x228],0x0
0x807e: jne 0x8152
0x8084: cmp ebp,dword ptr [rsp+0x7c]
0x8088: jne 0x80a7
0x808a: cmp qword ptr [rsp+0x220],0x0
0x8093: jne 0x8152
0x8099: cmp r12d,dword ptr [rsp+0x80]
0x80a1: je 0x8152
0x80a7: lea rsi,[rip+0x8c1a]
0x80ae: mov edx,0x5
0x80b3: xor edi,edi
0x80b5: call 0x27f0
0x80ba: mov rdi,rax
0x80bd: xor eax,eax
0x80bf: call 0x42c0
0x80c4: lea r8,[rsp+0x2d3]
0x80cc: mov edi,dword ptr [rsp+0x20]
0x80d0: mov rsi,r8
0x80d3: mov qword ptr [rsp+0x30],r8
0x80d8: call 0x2b60
0x80dd: lea rsi,[rip+0x8c24]
0x80e4: mov edx,0x5
0x80e9: xor edi,edi
0x80eb: mov rbx,rax
0x80ee: call 0x27f0
0x80f3: lea edx,[r12+0x1]
0x80f8: mov ecx,ebp
0x80fa: mov rsi,rbx
0x80fd: mov rdi,rax
0x8100: xor eax,eax
0x8102: call 0x42c0
0x8107: mov r8,qword ptr [rsp+0x30]
0x810c: mov eax,dword ptr [rsp+0x80]
0x8113: mov edi,dword ptr [rsp+0x84]
0x811a: mov r12d,dword ptr [rsp+0x7c]
0x811f: mov rsi,r8
0x8122: lea ebx,[rax+0x1]
0x8125: call 0x2b60
0x812a: lea rsi,[rip+0x8bff]
0x8131: mov rbp,rax
0x8134: mov edx,0x5
0x8139: xor edi,edi
0x813b: call 0x27f0
0x8140: mov ecx,r12d
0x8143: mov rdi,rax
0x8146: mov edx,ebx
0x8148: mov rsi,rbp
0x814b: xor eax,eax
0x814d: call 0x42c0
0x8152: movzx ebx,byte ptr [rsp+0x289]
0x815a: jmp 0x7e6b
0x815f: test rax,rax
0x8162: je 0x7d25
0x8168: lea rbp,[rsp+0x300]
0x8170: lea rsi,[rsp+0x3e0]
0x8178: mov rdi,r13
0x817b: call 0x4870
0x8180: lea rsi,[rip+0x8991]
0x8187: mov rbx,rax
0x818a: xor edi,edi
0x818c: mov edx,0x5
0x8191: call 0x27f0
0x8196: mov rsi,rbx
0x8199: mov rdi,rax
0x819c: xor eax,eax
0x819e: call 0x42c0
0x81a3: jmp 0x7d2d
0x81a8: lea rbp,[rsp+0x300]
0x81b0: lea r8,[rip+0x8175]
0x81b7: push rcx
0x81b8: push rdx
0x81b9: mov esi,0x64
0x81be: mov edx,0x1
0x81c3: mov rdi,rbp
0x81c6: xor eax,eax
0x81c8: mov ecx,0x64
0x81cd: call 0x2700
0x81d2: pop rsi
0x81d3: pop rdi
0x81d4: cmp qword ptr [rsp+0x278],0x0
0x81dd: mov edx,0x5
0x81e2: je 0x8676
0x81e8: lea rsi,[rip+0x8721]
0x81ef: xor edi,edi
0x81f1: call 0x27f0
0x81f6: mov rdi,rax
0x81f9: mov rsi,rbp
0x81fc: xor eax,eax
0x81fe: call 0x42c0
0x8203: jmp 0x7bf8
0x8208: lea rdx,[rbp-0x1]
0x820c: cmp rdx,0xa
0x8210: jbe 0x7c38
0x8216: cmp rbp,0xc
0x821a: jne 0x8519
0x8220: mov dword ptr [rsp+0x78],0x0
0x8228: jmp 0x7bd8
0x8235: lea rsi,[rip+0x876c]
0x823c: mov edx,0x5
0x8241: xor edi,edi
0x8243: mov dword ptr [rsp+0x5c],ecx
0x8247: mov dword ptr [rsp+0x58],r8d
0x824c: lea rbx,[rsp+0x3e0]
0x8254: mov dword ptr [rsp+0x54],r9d
0x8259: mov dword ptr [rsp+0x50],r10d
0x825e: call 0x27f0
0x8263: mov rdi,rax
0x8266: xor eax,eax
0x8268: call 0x42c0
0x826d: lea rdi,[rsp+0xb0]
0x8275: mov rsi,r13
0x8278: mov rdx,rbx
0x827b: call 0x47b0
0x8280: lea rsi,[rip+0x80d2]
0x8287: mov edx,0x5
0x828c: xor edi,edi
0x828e: mov qword ptr [rsp+0x48],rax
0x8293: call 0x27f0
0x8298: mov rsi,qword ptr [rsp+0x48]
0x829d: mov rdi,rax
0x82a0: xor eax,eax
0x82a2: call 0x42c0
0x82a7: mov rdi,qword ptr [rsp+0x18]
0x82ac: mov rsi,r13
0x82af: mov rdx,rbx
0x82b2: call 0x47b0
0x82b7: lea rsi,[rip+0x80b9]
0x82be: mov edx,0x5
0x82c3: xor edi,edi
0x82c5: mov r13,rax
0x82c8: call 0x27f0
0x82cd: mov rsi,r13
0x82d0: mov rdi,rax
0x82d3: xor eax,eax
0x82d5: call 0x42c0
0x82da: mov r10d,dword ptr [rsp+0x50]
0x82df: mov r9d,dword ptr [rsp+0x54]
0x82e4: lea rdx,[rip+0x808b]
0x82eb: mov r8d,dword ptr [rsp+0x58]
0x82f0: mov ecx,dword ptr [rsp+0x5c]
0x82f4: lea rax,[rip+0x7f46]
0x82fb: mov rsi,rdx
0x82fe: cmp r10d,r9d
0x8301: cmovne rsi,rax
0x8305: cmp r8d,ecx
0x8308: cmove rax,rdx
0x830c: jmp 0x7797
0x8311: test bl,bl
0x8313: jne 0x8534
0x8319: mov rbp,qword ptr [rsp+0x230]
0x8321: movzx r12d,byte ptr [rsp+0x289]
0x832a: imul r9,rbp,0xe10
0x8331: jo 0x848d
0x8337: add r9,r14
0x833a: jo 0x848d
0x8340: mov r13,qword ptr [rsp+0x238]
0x8348: imul rax,r13,0x3c
0x834c: jo 0x848d
0x8352: add r9,rax
0x8355: jo 0x848d
0x835b: mov r14,qword ptr [rsp+0x240]
0x8363: add r9,r14
0x8366: jo 0x848d
0x836c: movsxd rsi,dword ptr [rsp+0x248]
0x8374: mov rcx,qword ptr [rsp+0x210]
0x837c: mov r8d,0x3b9aca00
0x8382: mov rbx,r9
0x8385: add rcx,rsi
0x8388: mov rax,rcx
0x838b: cqto 
0x838d: idiv r8
0x8390: lea rax,[rdx+0x3b9aca00]
0x8397: cqto 
0x8399: idiv r8
0x839c: mov rax,rcx
0x839f: sub rax,rdx
0x83a2: mov rdi,rdx
0x83a5: cqto 
0x83a7: idiv r8
0x83aa: cltq 
0x83ac: add rbx,rax
0x83af: jo 0x848d
0x83b5: mov rax,qword ptr [rsp+0x28]
0x83ba: test r12b,r12b
0x83bd: mov qword ptr [rax],rbx
0x83c0: mov qword ptr [rax+0x8],rdi
0x83c4: je 0x70d2
0x83ca: mov rax,rbp
0x83cd: or rax,r13
0x83d0: or rax,r14
0x83d3: or rax,rsi
0x83d6: je 0x70d2
0x83dc: mov dword ptr [rsp+0x18],esi
0x83e0: lea rsi,[rip+0x89d1]
0x83e7: xor edi,edi
0x83e9: mov edx,0x5
0x83ee: call 0x27f0
0x83f3: mov r10d,dword ptr [rsp+0x18]
0x83f8: mov rcx,r14
0x83fb: mov rdi,rax
0x83fe: mov rdx,r13
0x8401: xor eax,eax
0x8403: mov rsi,rbp
0x8406: mov r8d,r10d
0x8409: call 0x42c0
0x840e: lea rsi,[rip+0x89f3]
0x8415: xor edi,edi
0x8417: mov edx,0x5
0x841c: call 0x27f0
0x8421: mov rsi,rbx
0x8424: mov rdi,rax
0x8427: xor eax,eax
0x8429: call 0x42c0
0x842e: cmp dword ptr [rsp+0x90],-0x1
0x8436: je 0x847f
0x8438: mov rsi,qword ptr [rsp+0x28]
0x843d: lea rdx,[rsp+0x170]
0x8445: mov rdi,r15
0x8448: call 0xb570
0x844d: test rax,rax
0x8450: je 0x847f
0x8452: mov eax,dword ptr [rsp+0x190]
0x8459: cmp dword ptr [rsp+0x90],eax
0x8460: je 0x847f
0x8462: lea rsi,[rip+0x89c7]
0x8469: xor edi,edi
0x846b: mov edx,0x5
0x8470: call 0x27f0
0x8475: mov rdi,rax
0x8478: xor eax,eax
0x847a: call 0x42c0
0x847f: movzx r12d,byte ptr [rsp+0x289]
0x8488: jmp 0x70d2
0x848d: test r12b,r12b
0x8490: je 0x6d9b
0x8496: mov edx,0x5
0x849b: lea rsi,[rip+0x88e6]
0x84a2: jmp 0x7469
0x84a7: cmp byte ptr [rsp+0x289],0x0
0x84af: je 0x6d9b
0x84b5: lea rsi,[rip+0x7e7f]
0x84bc: xor edi,edi
0x84be: mov edx,0x5
0x84c3: call 0x27f0
0x84c8: mov rsi,rbp
0x84cb: mov rdi,rax
0x84ce: xor eax,eax
0x84d0: call 0x42c0
0x84d5: jmp 0x6d9b
0x84da: lea rbx,[rip+0x7e95]
0x84e1: mov dword ptr [rsp+0x78],0xffffffff
0x84e9: test al,al
0x84eb: je 0x6d9b
0x84f1: lea rsi,[rip+0x7e19]
0x84f8: xor edi,edi
0x84fa: mov edx,0x5
0x84ff: call 0x27f0
0x8504: mov rdx,rbx
0x8507: mov rdi,rax
0x850a: mov rsi,rbp
0x850d: xor eax,eax
0x850f: call 0x42c0
0x8514: jmp 0x6d9b
0x8519: mov dword ptr [rsp+0x78],0xffffffff
0x8521: lea rbx,[rip+0x7d14]
0x8528: jmp 0x84e9
0x8534: mov rdi,qword ptr [rsp+0x18]
0x8539: lea rdx,[rsp+0x300]
0x8541: mov rsi,r13
0x8544: call 0x47b0
0x8549: lea rsi,[rip+0x7f12]
0x8550: mov rbx,rax
0x8553: xor edi,edi
0x8555: mov edx,0x5
0x855a: call 0x27f0
0x855f: mov rdx,r14
0x8562: mov rdi,rax
0x8565: mov rsi,rbx
0x8568: xor eax,eax
0x856a: call 0x42c0
0x856f: jmp 0x8319
0x8574: mov rdi,rdx
0x8577: call 0xb560
0x857c: jmp 0x764b
0x8581: mov eax,dword ptr [rsp+0x80]
0x8588: mov edi,dword ptr [rsp+0x84]
0x858f: lea rsi,[rsp+0x2d3]
0x8597: mov r12d,dword ptr [rsp+0x7c]
0x859c: lea rbp,[rsp+0x300]
0x85a4: lea ebx,[rax+0x1]
0x85a7: call 0x2b60
0x85ac: push r12
0x85ae: lea r8,[rip+0x7e45]
0x85b5: push rbx
0x85b6: mov r9,rax
0x85b9: mov ecx,0x64
0x85be: mov edx,0x1
0x85c3: mov esi,0x64
0x85c8: mov rdi,rbp
0x85cb: xor eax,eax
0x85cd: call 0x2700
0x85d2: lea rsi,[rip+0x850f]
0x85d9: mov edx,0x5
0x85de: xor edi,edi
0x85e0: call 0x27f0
0x85e5: mov rsi,rbp
0x85e8: mov rdi,rax
0x85eb: xor eax,eax
0x85ed: call 0x42c0
0x85f2: pop rax
0x85f3: pop rdx
0x85f4: cmp qword ptr [rsp+0x260],0x0
0x85fd: je 0x7d2d
0x8603: cmp qword ptr [rsp+0x258],0x0
0x860c: jne 0x8170
0x8612: jmp 0x7d2d
0x8617: cmp byte ptr [rsp+0x289],0x0
0x861f: je 0x6d9b
0x8625: mov rdi,qword ptr [rsp+0x18]
0x862a: lea rdx,[rsp+0x300]
0x8632: mov rsi,r13
0x8635: call 0x47b0
0x863a: lea rsi,[rip+0x85c7]
0x8641: mov rbx,rax
0x8644: xor edi,edi
0x8646: mov edx,0x5
0x864b: call 0x27f0
0x8650: mov rsi,rbx
0x8653: mov rdi,rax
0x8656: xor eax,eax
0x8658: call 0x42c0
0x865d: jmp 0x6d9b
0x8662: mov dword ptr [rsp+0x78],0xffffffff
0x866a: lea rbx,[rip+0x7b2f]
0x8671: jmp 0x84e9
0x8676: lea rsi,[rip+0x82c3]
0x867d: xor edi,edi
0x867f: call 0x27f0
0x8684: jmp 0x81f6
0x8689: cmp dword ptr [rsp+0x78],0xc
0x868e: je 0x7dd0
0x8694: lea rsi,[rip+0x8525]
0x869b: xor edi,edi
0x869d: mov edx,0x5
0x86a2: call 0x27f0
0x86a7: mov rdi,rax
0x86aa: xor eax,eax
0x86ac: call 0x42c0
0x86b1: jmp 0x7dd0
0x86b6: lea rsi,[rip+0x7d03]
0x86bd: xor edi,edi
0x86bf: call 0x27f0
0x86c4: jmp 0x78eb
0x87ec: call 0x2830
0x87f6: nop word ptr cs:[rax+rax]
0x89de: mov edx,dword ptr [rsp+0x24]
0x89e2: mov ecx,dword ptr [rsp+0x20]
0x89e6: xor edx,dword ptr [rsp+0x64]
0x89ea: xor ecx,dword ptr [rsp+0x60]
0x89ee: mov esi,dword ptr [rsp+0x10]
0x89f2: or edx,ecx
0x89f4: mov ecx,dword ptr [rsp+0x1c]
0x89f8: xor ecx,dword ptr [rsp+0x5c]
0x89fc: or edx,ecx
0x89fe: mov ecx,dword ptr [rsp+0x18]
0x8a02: xor ecx,dword ptr [rsp+0x58]
0x8a06: or edx,ecx
0x8a08: mov ecx,dword ptr [rsp+0x14]
0x8a0c: xor ecx,dword ptr [rsp+0x54]
0x8a10: or edx,ecx
0x8a12: mov ecx,dword ptr [rsp+0x50]
0x8a16: xor ecx,esi
0x8a18: or edx,ecx
0x8a1a: je 0x8a60
0x8a1c: cmp esi,0x3c
0x8a1f: jne 0x8864
0x8a25: lea r14,[rsp+0xb0]
0x8a2d: mov edx,0x10
0x8a32: mov rsi,rbx
0x8a35: mov rdi,r14
0x8a38: call 0x29b0
0x8a3d: mov edx,0x3935
0x8a42: lea rdi,[rsp+0x8]
0x8a47: mov byte ptr [rax],0x0
0x8a4a: mov word ptr [rax-0x2],dx
0x8a4e: mov rsi,r14
0x8a51: mov edx,ebp
0x8a53: call 0x8800
0x8a58: test al,al
0x8a5a: je 0x8864
0x8a60: mov qword ptr [r12],r13
0x8a64: mov eax,0x1
0x8a69: jmp 0x8864
0x8adf: call 0x2830
0x8ae4: nop word ptr cs:[rax+rax]
0x8aee: nop 
0x8b79: call 0x2830
0x8b7e: nop 
0x8c1f: nop 
0x8c20: push rbp
0x8c21: push rbx
0x8c22: mov rbp,rdi
0x8c25: mov ebx,esi
0x8c27: sub rsp,0x8
0x8c2b: call 0xb950
0x8c30: movzx edx,byte ptr [rax]
0x8c33: and edx,-0x21
0x8c36: cmp dl,0x55
0x8c39: je 0x8cb0
0x8c3b: cmp dl,0x47
0x8c3e: je 0x8c60
0x8c40: lea rax,[rip+0x7600]
0x8c47: lea rdx,[rip+0x890d]
0x8c4e: cmp ebx,0x9
0x8c51: cmovne rax,rdx
0x8c55: add rsp,0x8
0x8c59: pop rbx
0x8c5a: pop rbp
0x8c5b: ret 
0x8c60: movzx edx,byte ptr [rax+0x1]
0x8c64: and edx,-0x21
0x8c67: cmp dl,0x42
0x8c6a: jne 0x8c40
0x8c6c: cmp byte ptr [rax+0x2],0x31
0x8c70: jne 0x8c40
0x8c72: cmp byte ptr [rax+0x3],0x38
0x8c76: jne 0x8c40
0x8c78: cmp byte ptr [rax+0x4],0x30
0x8c7c: jne 0x8c40
0x8c7e: cmp byte ptr [rax+0x5],0x33
0x8c82: jne 0x8c40
0x8c84: cmp byte ptr [rax+0x6],0x30
0x8c88: jne 0x8c40
0x8c8a: cmp byte ptr [rax+0x7],0x0
0x8c8e: jne 0x8c40
0x8c90: cmp byte ptr [rbp],0x60
0x8c94: lea rax,[rip+0x88b9]
0x8c9b: lea rdx,[rip+0x88b6]
0x8ca2: cmovne rax,rdx
0x8ca6: add rsp,0x8
0x8caa: pop rbx
0x8cab: pop rbp
0x8cac: ret 
0x8cb0: movzx edx,byte ptr [rax+0x1]
0x8cb4: and edx,-0x21
0x8cb7: cmp dl,0x54
0x8cba: jne 0x8c40
0x8cbc: movzx edx,byte ptr [rax+0x2]
0x8cc0: and edx,-0x21
0x8cc3: cmp dl,0x46
0x8cc6: jne 0x8c40
0x8ccc: cmp byte ptr [rax+0x3],0x2d
0x8cd0: jne 0x8c40
0x8cd6: cmp byte ptr [rax+0x4],0x38
0x8cda: jne 0x8c40
0x8ce0: cmp byte ptr [rax+0x5],0x0
0x8ce4: jne 0x8c40
0x8cea: cmp byte ptr [rbp],0x60
0x8cee: lea rax,[rip+0x8857]
0x8cf5: lea rdx,[rip+0x8854]
0x8cfc: cmovne rax,rdx
0x8d00: add rsp,0x8
0x8d04: pop rbx
0x8d05: pop rbp
0x8d06: ret 
0x8de3: xor r11d,r11d
0x8de6: mov rax,rbp
0x8de9: mov r8d,r12d
0x8dec: mov rbp,r11
0x8def: mov r11,rax
0x8df2: nop word ptr [rax+rax]
0x8df8: cmp r11,rbp
0x8dfb: setne r12b
0x8dff: cmp r11,-0x1
0x8e03: jne 0x8e12
0x8e05: mov rax,qword ptr [rsp+0x10]
0x8e0a: cmp byte ptr [rax+rbp],0x0
0x8e0e: setne r12b
0x8e12: test r12b,r12b
0x8e15: je 0x9470
0x8e1b: cmp dword ptr [rsp+0x8],0x2
0x8e20: mov rdi,qword ptr [rsp+0x10]
0x8e25: lea r9,[rdi+rbp]
0x8e29: setne al
0x8e2c: and al,byte ptr [rsp+0xd]
0x8e30: mov r10d,eax
0x8e33: je 0x8ee0
0x8e39: mov rax,qword ptr [rsp+0x18]
0x8e3e: test rax,rax
0x8e41: je 0x9270
0x8e47: cmp r11,-0x1
0x8e4b: lea rbx,[rbp+rax]
0x8e50: jne 0x8e80
0x8e52: cmp rax,0x1
0x8e56: jbe 0x8e80
0x8e58: mov byte ptr [rsp+0x38],r8b
0x8e5d: mov byte ptr [rsp+0x30],r10b
0x8e62: mov qword ptr [rsp+0x28],r9
0x8e67: call 0x2810
0x8e6c: movzx r8d,byte ptr [rsp+0x38]
0x8e72: movzx r10d,byte ptr [rsp+0x30]
0x8e78: mov r11,rax
0x8e7b: mov r9,qword ptr [rsp+0x28]
0x8e80: cmp rbx,r11
0x8e83: mov byte ptr [rsp+0x28],r10b
0x8e88: ja 0x9440
0x8e8e: mov rdx,qword ptr [rsp+0x18]
0x8e93: mov rsi,qword ptr [rsp+0x48]
0x8e98: mov rdi,r9
0x8e9b: mov qword ptr [rsp+0x40],r11
0x8ea0: mov byte ptr [rsp+0x38],r8b
0x8ea5: mov qword ptr [rsp+0x30],r9
0x8eaa: call 0x2920
0x8eaf: test eax,eax
0x8eb1: mov r9,qword ptr [rsp+0x30]
0x8eb6: movzx r8d,byte ptr [rsp+0x38]
0x8ebc: mov r11,qword ptr [rsp+0x40]
0x8ec1: jne 0x9440
0x8ec7: cmp byte ptr [rsp+0xf],0x0
0x8ecc: movzx r10d,byte ptr [rsp+0x28]
0x8ed2: jne 0x9e55
0x8ed8: nop dword ptr [rax+rax]
0x8ee0: movzx ebx,byte ptr [r9]
0x8ee4: cmp bl,0x7e
0x8ee7: ja 0x9208
0x8eed: lea rcx,[rip+0x86f8]
0x8ef4: movzx edx,bl
0x8ef7: movsxd rax,dword ptr [rcx+rdx*4]
0x8efb: add rax,rcx
0x8efe: jmp rax
0x8f38: cmp byte ptr [rsp+0xd],0x1
0x8f3d: jne 0x9052
0x8f43: test dl,dl
0x8f45: jne 0x9052
0x8f4b: mov rsi,qword ptr [rsp+0x20]
0x8f50: test rsi,rsi
0x8f53: je 0x8f69
0x8f55: mov edx,ebx
0x8f57: shr dl,0x5
0x8f5a: movzx edx,dl
0x8f5d: mov edx,dword ptr [rsi+rdx*4]
0x8f60: btl edx,ebx
0x8f63: jb 0x90b3
0x8f69: test r10b,r10b
0x8f6c: jne 0x90b3
0x8f72: xor eax,0x1
0x8f75: add rbp,0x1
0x8f79: and eax,r8d
0x8f7c: test al,al
0x8f7e: je 0x8fa0
0x8f80: cmp r13,r15
0x8f83: jbe 0x8f8a
0x8f85: mov byte ptr [r14+r15],0x27
0x8f8a: lea rax,[r15+0x1]
0x8f8e: cmp r13,rax
0x8f91: jbe 0x8f99
0x8f93: mov byte ptr [r14+r15+0x1],0x27
0x8f99: add r15,0x2
0x8f9d: xor r8d,r8d
0x8fa0: cmp r15,r13
0x8fa3: jae 0x8fa9
0x8fa5: mov byte ptr [r14+r15],bl
0x8fa9: movzx edi,byte ptr [rsp+0xe]
0x8fae: add r15,0x1
0x8fb2: mov eax,0x0
0x8fb7: test r12b,r12b
0x8fba: cmove edi,eax
0x8fbd: mov byte ptr [rsp+0xe],dil
0x8fc2: jmp 0x8df8
0x9052: cmp byte ptr [rsp+0xf],0x0
0x9057: jne 0x8f4b
0x905d: jmp 0x8f69
0x90b3: cmp dword ptr [rsp+0x8],0x2
0x90b8: sete dl
0x90bb: cmp byte ptr [rsp+0xf],0x0
0x90c0: mov eax,edx
0x90c2: jne 0x9918
0x90c8: mov eax,r8d
0x90cb: xor eax,0x1
0x90ce: and al,dl
0x90d0: je 0x9101
0x90d2: cmp r13,r15
0x90d5: jbe 0x90dc
0x90d7: mov byte ptr [r14+r15],0x27
0x90dc: lea rdx,[r15+0x1]
0x90e0: cmp r13,rdx
0x90e3: jbe 0x90eb
0x90e5: mov byte ptr [r14+r15+0x1],0x24
0x90eb: lea rdx,[r15+0x2]
0x90ef: cmp r13,rdx
0x90f2: jbe 0x90fa
0x90f4: mov byte ptr [r14+r15+0x2],0x27
0x90fa: add r15,0x3
0x90fe: mov r8d,eax
0x9101: cmp r13,r15
0x9104: jbe 0x910b
0x9106: mov byte ptr [r14+r15],0x5c
0x910b: add r15,0x1
0x910f: add rbp,0x1
0x9113: jmp 0x8fa0
0x9200: xor r10d,r10d
0x9203: nop dword ptr [rax+rax]
0x9208: cmp qword ptr [rsp+0x58],0x1
0x920e: jne 0x95b8
0x9214: mov qword ptr [rsp+0x38],r11
0x9219: mov byte ptr [rsp+0x30],r8b
0x921e: mov byte ptr [rsp+0x28],r10b
0x9223: call 0x2b30
0x9228: mov rcx,qword ptr [rax]
0x922b: movzx edx,bl
0x922e: movzx r10d,byte ptr [rsp+0x28]
0x9234: movzx r8d,byte ptr [rsp+0x30]
0x923a: mov r11,qword ptr [rsp+0x38]
0x923f: mov edi,0x1
0x9244: movzx eax,word ptr [rcx+rdx*2]
0x9248: and ax,0x4000
0x924c: setne r12b
0x9250: sete al
0x9253: and al,byte ptr [rsp+0xd]
0x9257: test al,al
0x9259: jne 0x9bf1
0x925f: cmp dword ptr [rsp+0x8],0x2
0x9264: sete dl
0x9267: jmp 0x8f38
0x9270: movzx ebx,byte ptr [r9]
0x9274: cmp bl,0x7e
0x9277: ja 0x9200
0x9279: lea rcx,[rip+0x8568]
0x9280: movzx edx,bl
0x9283: movsxd rax,dword ptr [rcx+rdx*4]
0x9287: add rax,rcx
0x928a: jmp rax
0x9440: xor r10d,r10d
0x9443: jmp 0x8ee0
0x9470: cmp dword ptr [rsp+0x8],0x2
0x9475: movzx ebx,byte ptr [rsp+0xf]
0x947a: mov r12d,r8d
0x947d: mov rbp,r11
0x9480: sete dl
0x9483: mov eax,ebx
0x9485: test r15,r15
0x9488: sete cl
0x948b: and eax,edx
0x948d: and al,cl
0x948f: jne 0x9ef6
0x9495: mov eax,ebx
0x9497: xor eax,0x1
0x949a: and dl,al
0x949c: je 0x9e0c
0x94a2: cmp byte ptr [rsp+0x7c],0x0
0x94a7: je 0x9e0a
0x94ad: cmp byte ptr [rsp+0xe],0x0
0x94b2: jne 0x9ead
0x94b8: test r13,r13
0x94bb: sete al
0x94be: cmp qword ptr [rsp+0x50],0x0
0x94c4: setne dl
0x94c7: and al,dl
0x94c9: je 0x9eec
0x94cf: mov r13,qword ptr [rsp+0x50]
0x94d4: lea rbx,[rip+0x8080]
0x94db: mov byte ptr [r14],0x27
0x94df: mov dword ptr [rsp+0x8],0x2
0x94e7: mov r15d,0x1
0x94ed: mov qword ptr [rsp+0x18],0x1
0x94f6: mov byte ptr [rsp+0xf],0x0
0x94fb: mov qword ptr [rsp+0x48],rbx
0x9500: mov byte ptr [rsp+0x7c],al
0x9504: jmp 0x8de3
0x95b8: lea rax,[rsp+0xa0]
0x95c0: cmp r11,-0x1
0x95c4: mov qword ptr [rsp+0xa0],0x0
0x95d0: mov qword ptr [rsp+0x28],rax
0x95d5: jne 0x9604
0x95d7: mov rdi,qword ptr [rsp+0x10]
0x95dc: mov byte ptr [rsp+0x40],r8b
0x95e1: mov byte ptr [rsp+0x38],r10b
0x95e6: mov qword ptr [rsp+0x30],r9
0x95eb: call 0x2810
0x95f0: movzx r8d,byte ptr [rsp+0x40]
0x95f6: movzx r10d,byte ptr [rsp+0x38]
0x95fc: mov r11,rax
0x95ff: mov r9,qword ptr [rsp+0x30]
0x9604: lea rax,[rsp+0x9c]
0x960c: xor ecx,ecx
0x960e: mov byte ptr [rsp+0x7e],bl
0x9612: mov byte ptr [rsp+0x7d],r8b
0x9617: mov rbx,rcx
0x961a: mov qword ptr [rsp+0x88],r9
0x9622: mov qword ptr [rsp+0x38],rax
0x9627: mov byte ptr [rsp+0x7f],r10b
0x962c: mov qword ptr [rsp+0x80],r15
0x9634: mov qword ptr [rsp+0x40],r14
0x9639: mov qword ptr [rsp+0x70],r13
0x963e: mov qword ptr [rsp+0x30],r11
0x9643: mov rax,qword ptr [rsp+0x10]
0x9648: lea r14,[rbp+rbx]
0x964d: mov rdx,qword ptr [rsp+0x30]
0x9652: mov rcx,qword ptr [rsp+0x28]
0x9657: mov rdi,qword ptr [rsp+0x38]
0x965c: lea r13,[rax+r14]
0x9660: sub rdx,r14
0x9663: mov rsi,r13
0x9666: call 0xb160
0x966b: test rax,rax
0x966e: mov r15,rax
0x9671: je 0x96c1
0x9673: cmp rax,-0x1
0x9677: je 0x9c95
0x967d: cmp rax,-0x2
0x9681: je 0x9c21
0x9687: cmp dword ptr [rsp+0x8],0x2
0x968c: sete al
0x968f: and al,byte ptr [rsp+0xf]
0x9693: jne 0x9830
0x9699: mov edi,dword ptr [rsp+0x9c]
0x96a0: call 0x2b10
0x96a5: mov rdi,qword ptr [rsp+0x28]
0x96aa: test eax,eax
0x96ac: mov eax,0x0
0x96b1: cmove r12d,eax
0x96b5: add rbx,r15
0x96b8: call 0x2b00
0x96bd: test eax,eax
0x96bf: je 0x9643
0x96c1: mov edx,r12d
0x96c4: mov rdi,rbx
0x96c7: movzx r8d,byte ptr [rsp+0x7d]
0x96cd: xor edx,0x1
0x96d0: movzx ebx,byte ptr [rsp+0x7e]
0x96d5: movzx r10d,byte ptr [rsp+0x7f]
0x96db: and dl,byte ptr [rsp+0xd]
0x96df: mov r15,qword ptr [rsp+0x80]
0x96e7: mov r14,qword ptr [rsp+0x40]
0x96ec: mov r13,qword ptr [rsp+0x70]
0x96f1: mov r11,qword ptr [rsp+0x30]
0x96f6: cmp rdi,0x1
0x96fa: jbe 0x9cfb
0x9700: mov rcx,rdi
0x9703: xor esi,esi
0x9705: movzx r9d,byte ptr [rsp+0xf]
0x970b: add rcx,rbp
0x970e: mov rdi,qword ptr [rsp+0x10]
0x9713: jmp 0x97ce
0x9720: cmp dword ptr [rsp+0x8],0x2
0x9725: sete al
0x9728: test r9b,r9b
0x972b: jne 0x9be0
0x9731: mov esi,r8d
0x9734: xor esi,0x1
0x9737: and al,sil
0x973a: je 0x976b
0x973c: cmp r13,r15
0x973f: jbe 0x9746
0x9741: mov byte ptr [r14+r15],0x27
0x9746: lea rsi,[r15+0x1]
0x974a: cmp r13,rsi
0x974d: jbe 0x9755
0x974f: mov byte ptr [r14+r15+0x1],0x24
0x9755: lea rsi,[r15+0x2]
0x9759: cmp r13,rsi
0x975c: jbe 0x9764
0x975e: mov byte ptr [r14+r15+0x2],0x27
0x9764: add r15,0x3
0x9768: mov r8d,eax
0x976b: cmp r13,r15
0x976e: jbe 0x9775
0x9770: mov byte ptr [r14+r15],0x5c
0x9775: lea rax,[r15+0x1]
0x9779: cmp r13,rax
0x977c: jbe 0x978b
0x977e: mov eax,ebx
0x9780: shr al,0x6
0x9783: add eax,0x30
0x9786: mov byte ptr [r14+r15+0x1],al
0x978b: lea rax,[r15+0x2]
0x978f: cmp r13,rax
0x9792: jbe 0x97a4
0x9794: mov eax,ebx
0x9796: shr al,0x3
0x9799: and eax,0x7
0x979c: add eax,0x30
0x979f: mov byte ptr [r14+r15+0x2],al
0x97a4: and ebx,0x7
0x97a7: add rbp,0x1
0x97ab: add r15,0x3
0x97af: add ebx,0x30
0x97b2: cmp rbp,rcx
0x97b5: jae 0x8fa0
0x97bb: mov esi,edx
0x97bd: cmp r13,r15
0x97c0: jbe 0x97c6
0x97c2: mov byte ptr [r14+r15],bl
0x97c6: movzx ebx,byte ptr [rdi+rbp]
0x97ca: add r15,0x1
0x97ce: test dl,dl
0x97d0: jne 0x9720
0x97d6: mov eax,esi
0x97d8: xor eax,0x1
0x97db: and eax,r8d
0x97de: test r10b,r10b
0x97e1: je 0x97f1
0x97e3: cmp r13,r15
0x97e6: jbe 0x97ed
0x97e8: mov byte ptr [r14+r15],0x5c
0x97ed: add r15,0x1
0x97f1: add rbp,0x1
0x97f5: cmp rbp,rcx
0x97f8: jae 0x8f7c
0x97fe: test al,al
0x9800: je 0x9bfe
0x9806: cmp r13,r15
0x9809: jbe 0x9810
0x980b: mov byte ptr [r14+r15],0x27
0x9810: lea rax,[r15+0x1]
0x9814: cmp r13,rax
0x9817: jbe 0x981f
0x9819: mov byte ptr [r14+r15+0x1],0x27
0x981f: add r15,0x2
0x9823: xor r10d,r10d
0x9826: xor r8d,r8d
0x9829: jmp 0x97bd
0x9830: cmp r15,0x1
0x9834: je 0x9699
0x983a: mov rdi,qword ptr [rsp+0x10]
0x983f: lea rcx,[rdi+r15]
0x9843: lea rdx,[rdi+r14+0x1]
0x9848: lea r8,[rcx+r14]
0x984c: jmp 0x985d
0x9850: add rdx,0x1
0x9854: cmp r8,rdx
0x9857: je 0x9699
0x985d: movzx ecx,byte ptr [rdx]
0x9860: sub ecx,0x5b
0x9863: cmp cl,0x21
0x9866: ja 0x9850
0x9868: mov esi,0x1
0x986d: shl rsi,cl
0x9870: mov rcx,rsi
0x9873: movabsq rsi,0x20000002b
0x987d: test rcx,rsi
0x9880: je 0x9850
0x9882: mov r14,qword ptr [rsp+0x40]
0x9887: mov r13,qword ptr [rsp+0x70]
0x988c: mov rbp,qword ptr [rsp+0x30]
0x9891: mov dword ptr [rsp+0x8],0x2
0x9899: cmp byte ptr [rsp+0xd],0x0
0x989e: je 0x98b0
0x98a0: test al,al
0x98a2: mov eax,0x4
0x98a7: cmove eax,dword ptr [rsp+0x8]
0x98ac: mov dword ptr [rsp+0x8],eax
0x98b0: sub rsp,0x8
0x98b4: mov rcx,rbp
0x98b7: mov rsi,r13
0x98ba: push qword ptr [rsp+0x68]
0x98be: push qword ptr [rsp+0x78]
0x98c2: mov rdi,r14
0x98c5: push 0x0
0x98c7: mov r9d,dword ptr [rsp+0x98]
0x98cf: mov r8d,dword ptr [rsp+0x28]
0x98d4: mov rdx,qword ptr [rsp+0x30]
0x98d9: and r9d,-0x3
0x98dd: call 0x8d10
0x98e2: add rsp,0x20
0x98e6: mov r15,rax
0x98e9: mov rbx,qword ptr [rsp+0xa8]
0x98f1: xor rbx,qword ptr fs:0x28
0x98fa: mov rax,r15
0x98fd: jne 0x9f03
0x9903: add rsp,0xb8
0x990a: pop rbx
0x990b: pop rbp
0x990c: pop r12
0x990e: pop r13
0x9910: pop r14
0x9912: pop r15
0x9914: ret 
0x9918: mov rbp,r11
0x991b: jmp 0x9899
0x9981: test r13,r13
0x9984: jne 0x9f1a
0x998a: lea rax,[rip+0x7bca]
0x9991: mov qword ptr [rsp+0x50],0x0
0x999a: mov byte ptr [rsp+0xe],0x1
0x999f: mov byte ptr [rsp+0x7c],0x0
0x99a4: xor r12d,r12d
0x99a7: mov byte ptr [rsp+0xf],0x0
0x99ac: mov qword ptr [rsp+0x18],0x1
0x99b5: mov qword ptr [rsp+0x48],rax
0x99ba: mov r15d,0x1
0x99c0: mov dword ptr [rsp+0x8],0x2
0x99c8: jmp 0x8de3
0x9be0: movzx ebx,byte ptr [rsp+0xf]
0x9be5: mov rbp,r11
0x9be8: mov byte ptr [rsp+0xd],bl
0x9bec: jmp 0x9899
0x9bf1: movzx edx,byte ptr [rsp+0xd]
0x9bf6: xor r12d,r12d
0x9bf9: jmp 0x9700
0x9bfe: xor r10d,r10d
0x9c01: jmp 0x97bd
0x9c21: mov r11,qword ptr [rsp+0x30]
0x9c26: mov rsi,r14
0x9c29: mov rcx,r13
0x9c2c: mov rax,rbx
0x9c2f: mov rdi,rbx
0x9c32: movzx r8d,byte ptr [rsp+0x7d]
0x9c38: movzx ebx,byte ptr [rsp+0x7e]
0x9c3d: mov r9,qword ptr [rsp+0x88]
0x9c45: cmp rsi,r11
0x9c48: movzx r10d,byte ptr [rsp+0x7f]
0x9c4e: mov r15,qword ptr [rsp+0x80]
0x9c56: mov r14,qword ptr [rsp+0x40]
0x9c5b: mov r13,qword ptr [rsp+0x70]
0x9c60: jae 0x9c88
0x9c62: cmp byte ptr [rcx],0x0
0x9c65: jne 0x9c77
0x9c67: jmp 0x9c88
0x9c70: cmp byte ptr [r9+rax],0x0
0x9c75: je 0x9c85
0x9c77: add rax,0x1
0x9c7b: lea rdx,[rbp+rax]
0x9c80: cmp r11,rdx
0x9c83: ja 0x9c70
0x9c85: mov rdi,rax
0x9c88: movzx edx,byte ptr [rsp+0xd]
0x9c8d: xor r12d,r12d
0x9c90: jmp 0x96f6
0x9c95: mov rdi,rbx
0x9c98: movzx r8d,byte ptr [rsp+0x7d]
0x9c9e: movzx ebx,byte ptr [rsp+0x7e]
0x9ca3: movzx r10d,byte ptr [rsp+0x7f]
0x9ca9: mov r15,qword ptr [rsp+0x80]
0x9cb1: xor r12d,r12d
0x9cb4: mov r14,qword ptr [rsp+0x40]
0x9cb9: mov r13,qword ptr [rsp+0x70]
0x9cbe: mov r11,qword ptr [rsp+0x30]
0x9cc3: movzx edx,byte ptr [rsp+0xd]
0x9cc8: jmp 0x96f6
0x9cfb: mov eax,edx
0x9cfd: jmp 0x9257
0x9e0a: mov eax,edx
0x9e0c: mov rbx,qword ptr [rsp+0x48]
0x9e11: test rbx,rbx
0x9e14: je 0x9e42
0x9e16: test al,al
0x9e18: je 0x9e42
0x9e1a: movzx ecx,byte ptr [rbx]
0x9e1d: mov rax,rbx
0x9e20: test cl,cl
0x9e22: je 0x9e42
0x9e24: mov rdx,r15
0x9e27: sub rax,r15
0x9e2a: cmp r13,rdx
0x9e2d: jbe 0x9e33
0x9e2f: mov byte ptr [r14+rdx],cl
0x9e33: add rdx,0x1
0x9e37: movzx ecx,byte ptr [rax+rdx]
0x9e3b: test cl,cl
0x9e3d: jne 0x9e2a
0x9e3f: mov r15,rdx
0x9e42: cmp r13,r15
0x9e45: jbe 0x98e9
0x9e4b: mov byte ptr [r14+r15],0x0
0x9e50: jmp 0x98e9
0x9e55: cmp dword ptr [rsp+0x8],0x2
0x9e5a: movzx ebx,byte ptr [rsp+0xf]
0x9e5f: mov rbp,r11
0x9e62: sete al
0x9e65: mov byte ptr [rsp+0xd],bl
0x9e69: jmp 0x9899
0x9ead: sub rsp,0x8
0x9eb1: mov r8d,0x5
0x9eb7: mov rcx,r11
0x9eba: push qword ptr [rsp+0x68]
0x9ebe: push qword ptr [rsp+0x78]
0x9ec2: mov rdi,r14
0x9ec5: push qword ptr [rsp+0x38]
0x9ec9: mov r9d,dword ptr [rsp+0x98]
0x9ed1: mov rdx,qword ptr [rsp+0x30]
0x9ed6: mov rsi,qword ptr [rsp+0x70]
0x9edb: call 0x8d10
0x9ee0: add rsp,0x20
0x9ee4: mov r15,rax
0x9ee7: jmp 0x98e9
0x9eec: movzx eax,byte ptr [rsp+0x7c]
0x9ef1: jmp 0x9e0c
0x9ef6: mov dword ptr [rsp+0x8],0x2
0x9efe: jmp 0x9899
0x9f03: call 0x2830
0x9f08: mov byte ptr [rsp+0xd],0x0
0x9f0d: jmp 0x9981
0x9f1a: mov byte ptr [rsp+0xe],0x1
0x9f1f: xor eax,eax
0x9f21: xor r12d,r12d
0x9f24: mov qword ptr [rsp+0x50],0x0
0x9f2d: jmp 0x94d4
0x9f44: nop 
0x9f46: nop word ptr cs:[rax+rax]
0xa03c: add rsp,0x20
0xa040: mov r11,qword ptr [rsp+0x10]
0xa045: cmp r11,rax
0xa048: ja 0xa0b1
0xa04a: lea rsi,[rax+0x1]
0xa04e: lea rax,[rip+0x20b10b]
0xa055: cmp r12,rax
0xa058: mov qword ptr [rbx],rsi
0xa05b: je 0xa06f
0xa05d: mov rdi,r12
0xa060: mov qword ptr [rsp+0x10],rsi
0xa065: call 0x2710
0xa06a: mov rsi,qword ptr [rsp+0x10]
0xa06f: mov rdi,rsi
0xa072: mov qword ptr [rsp+0x10],rsi
0xa077: call 0xaed0
0xa07c: sub rsp,0x8
0xa080: mov qword ptr [rbx+0x8],rax
0xa084: mov r8d,dword ptr [rbp]
0xa088: push qword ptr [rbp+0x30]
0xa08b: push qword ptr [rbp+0x28]
0xa08e: mov rcx,r14
0xa091: push r15
0xa093: mov r9d,dword ptr [rsp+0x3c]
0xa098: mov rdi,rax
0xa09b: mov rdx,qword ptr [rsp+0x28]
0xa0a0: mov rsi,qword ptr [rsp+0x30]
0xa0a5: mov r12,rax
0xa0a8: call 0x8d10
0xa0ad: add rsp,0x20
0xa0b1: mov eax,dword ptr [rsp+0x18]
0xa0b5: mov dword ptr [r13],eax
0xa0b9: add rsp,0x28
0xa0bd: mov rax,r12
0xa0c0: pop rbx
0xa0c1: pop rbp
0xa0c2: pop r12
0xa0c4: pop r13
0xa0c6: pop r14
0xa0c8: pop r15
0xa0ca: ret 
0xa0fb: nop dword ptr [rax+rax]
0xa100: push r12
0xa102: push rbp
0xa103: push rbx
0xa104: mov rbx,rdi
0xa107: call 0x2750
0xa10c: mov r12d,dword ptr [rax]
0xa10f: mov rbp,rax
0xa112: lea rax,[rip+0x20b147]
0xa119: test rbx,rbx
0xa11c: mov esi,0x38
0xa121: cmove rbx,rax
0xa125: mov rdi,rbx
0xa128: call 0xb0d0
0xa12d: mov dword ptr [rbp],r12d
0xa131: pop rbx
0xa132: pop rbp
0xa133: pop r12
0xa135: ret 
0xa140: lea rax,[rip+0x20b119]
0xa147: test rdi,rdi
0xa14a: cmove rdi,rax
0xa14e: mov eax,dword ptr [rdi]
0xa150: ret 
0xa160: lea rax,[rip+0x20b0f9]
0xa167: test rdi,rdi
0xa16a: cmove rdi,rax
0xa16e: mov dword ptr [rdi],esi
0xa170: ret 
0xa180: lea rax,[rip+0x20b0d9]
0xa187: test rdi,rdi
0xa18a: mov ecx,esi
0xa18c: cmove rdi,rax
0xa190: mov eax,esi
0xa192: and ecx,0x1f
0xa195: shr al,0x5
0xa198: movzx eax,al
0xa19b: lea rdi,[rdi+rax*4+0x8]
0xa1a0: mov esi,dword ptr [rdi]
0xa1a2: mov eax,esi
0xa1a4: shr eax,cl
0xa1a6: xor edx,eax
0xa1a8: and eax,0x1
0xa1ab: and edx,0x1
0xa1ae: shl edx,cl
0xa1b0: xor edx,esi
0xa1b2: mov dword ptr [rdi],edx
0xa1b4: ret 
0xa1c0: lea rax,[rip+0x20b099]
0xa1c7: test rdi,rdi
0xa1ca: cmove rdi,rax
0xa1ce: mov eax,dword ptr [rdi+0x4]
0xa1d1: mov dword ptr [rdi+0x4],esi
0xa1d4: ret 
0xa1e0: lea rax,[rip+0x20b079]
0xa1e7: test rdi,rdi
0xa1ea: cmove rdi,rax
0xa1ee: test rsi,rsi
0xa1f1: mov dword ptr [rdi],0xa
0xa1f7: je 0xa207
0xa1f9: test rdx,rdx
0xa1fc: je 0xa207
0xa1fe: mov qword ptr [rdi+0x28],rsi
0xa202: mov qword ptr [rdi+0x30],rdx
0xa206: ret 
0xa207: sub rsp,0x8
0xa20b: call 0x2740
0xa210: push r15
0xa212: push r14
0xa214: lea rax,[rip+0x20b045]
0xa21b: push r13
0xa21d: push r12
0xa21f: mov r13,rdi
0xa222: push rbp
0xa223: push rbx
0xa224: mov rbx,r8
0xa227: mov r14,rsi
0xa22a: mov r15,rdx
0xa22d: sub rsp,0x18
0xa231: test r8,r8
0xa234: cmove rbx,rax
0xa238: mov qword ptr [rsp+0x8],rcx
0xa23d: call 0x2750
0xa242: mov r12d,dword ptr [rax]
0xa245: mov rbp,rax
0xa248: lea rax,[rbx+0x8]
0xa24c: sub rsp,0x8
0xa250: mov r9d,dword ptr [rbx+0x4]
0xa254: push qword ptr [rbx+0x30]
0xa257: mov r8d,dword ptr [rbx]
0xa25a: push qword ptr [rbx+0x28]
0xa25d: mov rdx,r15
0xa260: push rax
0xa261: mov rcx,qword ptr [rsp+0x28]
0xa266: mov rsi,r14
0xa269: mov rdi,r13
0xa26c: call 0x8d10
0xa271: mov dword ptr [rbp],r12d
0xa275: add rsp,0x38
0xa279: pop rbx
0xa27a: pop rbp
0xa27b: pop r12
0xa27d: pop r13
0xa27f: pop r14
0xa281: pop r15
0xa283: ret 
0xa290: push r15
0xa292: push r14
0xa294: lea rax,[rip+0x20afc5]
0xa29b: push r13
0xa29d: push r12
0xa29f: mov r12,rdx
0xa2a2: push rbp
0xa2a3: push rbx
0xa2a4: mov rbx,rcx
0xa2a7: mov r14,rdi
0xa2aa: mov r15,rsi
0xa2ad: sub rsp,0x38
0xa2b1: test rcx,rcx
0xa2b4: cmove rbx,rax
0xa2b8: xor ebp,ebp
0xa2ba: call 0x2750
0xa2bf: test r12,r12
0xa2c2: mov r13,rax
0xa2c5: mov eax,dword ptr [rax]
0xa2c7: sete bpl
0xa2cb: or ebp,dword ptr [rbx+0x4]
0xa2ce: lea r10,[rbx+0x8]
0xa2d2: sub rsp,0x8
0xa2d6: mov r8d,dword ptr [rbx]
0xa2d9: mov rcx,r15
0xa2dc: mov dword ptr [rsp+0x14],eax
0xa2e0: push qword ptr [rbx+0x30]
0xa2e3: mov rdx,r14
0xa2e6: push qword ptr [rbx+0x28]
0xa2e9: push r10
0xa2eb: xor esi,esi
0xa2ed: mov r9d,ebp
0xa2f0: xor edi,edi
0xa2f2: mov qword ptr [rsp+0x40],r10
0xa2f7: call 0x8d10
0xa2fc: lea rsi,[rax+0x1]
0xa300: mov qword ptr [rsp+0x48],rax
0xa305: add rsp,0x20
0xa309: mov rdi,rsi
0xa30c: mov qword ptr [rsp+0x18],rsi
0xa311: call 0xaed0
0xa316: mov qword ptr [rsp+0x10],rax
0xa31b: sub rsp,0x8
0xa31f: push qword ptr [rbx+0x30]
0xa322: push qword ptr [rbx+0x28]
0xa325: mov r10,qword ptr [rsp+0x38]
0xa32a: mov r9d,ebp
0xa32d: mov r8d,dword ptr [rbx]
0xa330: mov rcx,r15
0xa333: mov rdx,r14
0xa336: mov rdi,rax
0xa339: push r10
0xa33b: mov rsi,qword ptr [rsp+0x38]
0xa340: call 0x8d10
0xa345: mov eax,dword ptr [rsp+0x2c]
0xa349: add rsp,0x20
0xa34d: test r12,r12
0xa350: mov dword ptr [r13],eax
0xa354: je 0xa35f
0xa356: mov r11,qword ptr [rsp+0x28]
0xa35b: mov qword ptr [r12],r11
0xa35f: mov rax,qword ptr [rsp+0x10]
0xa364: add rsp,0x38
0xa368: pop rbx
0xa369: pop rbp
0xa36a: pop r12
0xa36c: pop r13
0xa36e: pop r14
0xa370: pop r15
0xa372: ret 
0xa380: mov rcx,rdx
0xa383: xor edx,edx
0xa385: jmp 0xa290
0xa390: mov eax,dword ptr [rip+0x20ace2]
0xa396: push r12
0xa398: mov r12,qword ptr [rip+0x20ace1]
0xa39f: push rbp
0xa3a0: push rbx
0xa3a1: cmp eax,0x1
0xa3a4: jle 0xa3d1
0xa3a6: sub eax,0x2
0xa3a9: lea rbx,[r12+0x18]
0xa3ae: shl rax,0x4
0xa3b2: lea rbp,[r12+rax+0x28]
0xa3b7: nop word ptr [rax+rax]
0xa3c0: mov rdi,qword ptr [rbx]
0xa3c3: add rbx,0x10
0xa3c7: call 0x2710
0xa3cc: cmp rbx,rbp
0xa3cf: jne 0xa3c0
0xa3d1: mov rdi,qword ptr [r12+0x8]
0xa3d6: lea rbx,[rip+0x20ad83]
0xa3dd: cmp rdi,rbx
0xa3e0: je 0xa3f9
0xa3e2: call 0x2710
0xa3e7: mov qword ptr [rip+0x20ac9e],0x100
0xa3f2: mov qword ptr [rip+0x20ac9f],rbx
0xa3f9: lea rbx,[rip+0x20ac90]
0xa400: cmp r12,rbx
0xa403: je 0xa414
0xa405: mov rdi,r12
0xa408: call 0x2710
0xa40d: mov qword ptr [rip+0x20ac6c],rbx
0xa414: pop rbx
0xa415: mov dword ptr [rip+0x20ac59],0x1
0xa41f: pop rbp
0xa420: pop r12
0xa422: ret 
0xa430: lea rcx,[rip+0x20ae29]
0xa437: mov rdx,-0x1
0xa43e: jmp 0x9f50
0xa450: lea rcx,[rip+0x20ae09]
0xa457: jmp 0x9f50
0xa460: lea rcx,[rip+0x20adf9]
0xa467: mov rsi,rdi
0xa46a: mov rdx,-0x1
0xa471: xor edi,edi
0xa473: jmp 0x9f50
0xa480: lea rcx,[rip+0x20add9]
0xa487: mov rdx,rsi
0xa48a: mov rsi,rdi
0xa48d: xor edi,edi
0xa48f: jmp 0x9f50
0xa50f: mov rcx,qword ptr [rsp+0x38]
0xa514: xor rcx,qword ptr fs:0x28
0xa51d: jne 0xa529
0xa51f: add rsp,0x48
0xa523: ret 
0xa524: call 0x2740
0xa529: call 0x2830
0xa52e: nop 
0xa530: sub rsp,0x48
0xa534: mov rax,rdx
0xa537: mov rdx,rcx
0xa53a: mov rcx,qword ptr fs:0x28
0xa543: mov qword ptr [rsp+0x38],rcx
0xa548: xor ecx,ecx
0xa54a: cmp esi,0xa
0xa54d: je 0xa5b0
0xa54f: mov dword ptr [rsp],esi
0xa552: mov rcx,rsp
0xa555: mov rsi,rax
0xa558: mov qword ptr [rsp+0x4],0x0
0xa561: mov qword ptr [rsp+0xc],0x0
0xa56a: mov qword ptr [rsp+0x14],0x0
0xa573: mov qword ptr [rsp+0x1c],0x0
0xa57c: mov qword ptr [rsp+0x24],0x0
0xa585: mov qword ptr [rsp+0x2c],0x0
0xa58e: mov dword ptr [rsp+0x34],0x0
0xa596: call 0x9f50
0xa59b: mov rdx,qword ptr [rsp+0x38]
0xa5a0: xor rdx,qword ptr fs:0x28
0xa5a9: jne 0xa5b5
0xa5ab: add rsp,0x48
0xa5af: ret 
0xa5b0: call 0x2740
0xa5b5: call 0x2830
0xa5ba: nop word ptr [rax+rax]
0xa5d0: mov rcx,rdx
0xa5d3: mov rdx,rsi
0xa5d6: mov esi,edi
0xa5d8: xor edi,edi
0xa5da: jmp 0xa530
0xa5e0: sub rsp,0x48
0xa5e4: mov ecx,edx
0xa5e6: mov rax,qword ptr fs:0x28
0xa5ef: mov qword ptr [rsp+0x38],rax
0xa5f4: xor eax,eax
0xa5f6: mov rax,qword ptr [rip+0x20ac93]
0xa5fd: mov r8,rsp
0xa600: and ecx,0x1f
0xa603: movdqa xmm0,[rip+0x20ac55]
0xa60b: mov qword ptr [rsp+0x30],rax
0xa610: mov eax,edx
0xa612: movaps [rsp],xmm0
0xa616: shr al,0x5
0xa619: movzx eax,al
0xa61c: lea r9,[r8+rax*4+0x8]
0xa621: movdqa xmm0,[rip+0x20ac47]
0xa629: movaps [rsp+0x10],xmm0
0xa62e: movdqa xmm0,[rip+0x20ac4a]
0xa636: movaps [rsp+0x20],xmm0
0xa63b: mov edx,dword ptr [r9]
0xa63e: mov eax,edx
0xa640: shr eax,cl
0xa642: not eax
0xa644: and eax,0x1
0xa647: shl eax,cl
0xa649: mov rcx,r8
0xa64c: xor eax,edx
0xa64e: mov rdx,rsi
0xa651: mov rsi,rdi
0xa654: mov dword ptr [r9],eax
0xa657: xor edi,edi
0xa659: call 0x9f50
0xa65e: mov rsi,qword ptr [rsp+0x38]
0xa663: xor rsi,qword ptr fs:0x28
0xa66c: jne 0xa673
0xa66e: add rsp,0x48
0xa672: ret 
0xa673: call 0x2830
0xa678: nop dword ptr [rax+rax]
0xa680: movsx edx,sil
0xa684: mov rsi,-0x1
0xa68b: jmp 0xa5e0
0xa690: mov edx,0x3a
0xa695: mov rsi,-0x1
0xa69c: jmp 0xa5e0
0xa6b0: mov edx,0x3a
0xa6b5: jmp 0xa5e0
0xa6c0: sub rsp,0x48
0xa6c4: mov rax,rdx
0xa6c7: mov rdx,qword ptr fs:0x28
0xa6d0: mov qword ptr [rsp+0x38],rdx
0xa6d5: xor edx,edx
0xa6d7: cmp esi,0xa
0xa6da: je 0xa744
0xa6dc: mov dword ptr [rsp],esi
0xa6df: mov rcx,rsp
0xa6e2: mov rdx,-0x1
0xa6e9: mov rsi,rax
0xa6ec: mov qword ptr [rsp+0x4],0x0
0xa6f5: mov qword ptr [rsp+0xc],0x4000000
0xa6fe: mov qword ptr [rsp+0x14],0x0
0xa707: mov qword ptr [rsp+0x1c],0x0
0xa710: mov qword ptr [rsp+0x24],0x0
0xa719: mov qword ptr [rsp+0x2c],0x0
0xa722: mov dword ptr [rsp+0x34],0x0
0xa72a: call 0x9f50
0xa72f: mov rcx,qword ptr [rsp+0x38]
0xa734: xor rcx,qword ptr fs:0x28
0xa73d: jne 0xa749
0xa73f: add rsp,0x48
0xa743: ret 
0xa744: call 0x2740
0xa749: call 0x2830
0xa74e: nop 
0xa750: sub rsp,0x48
0xa754: mov r9,rcx
0xa757: mov rcx,qword ptr [rip+0x20ab32]
0xa75e: movdqa xmm0,[rip+0x20aafa]
0xa766: mov rax,qword ptr fs:0x28
0xa76f: mov qword ptr [rsp+0x38],rax
0xa774: xor eax,eax
0xa776: movaps [rsp],xmm0
0xa77a: test rsi,rsi
0xa77d: mov qword ptr [rsp+0x30],rcx
0xa782: mov dword ptr [rsp],0xa
0xa789: movdqa xmm0,[rip+0x20aadf]
0xa791: movaps [rsp+0x10],xmm0
0xa796: movdqa xmm0,[rip+0x20aae2]
0xa79e: movaps [rsp+0x20],xmm0
0xa7a3: je 0xa7d7
0xa7a5: test rdx,rdx
0xa7a8: je 0xa7d7
0xa7aa: mov qword ptr [rsp+0x28],rsi
0xa7af: mov qword ptr [rsp+0x30],rdx
0xa7b4: mov rcx,rsp
0xa7b7: mov rdx,r8
0xa7ba: mov rsi,r9
0xa7bd: call 0x9f50
0xa7c2: mov rdi,qword ptr [rsp+0x38]
0xa7c7: xor rdi,qword ptr fs:0x28
0xa7d0: jne 0xa7dc
0xa7d2: add rsp,0x48
0xa7d6: ret 
0xa7d7: call 0x2740
0xa7dc: call 0x2830
0xa7e1: nop dword ptr [rax+rax]
0xa7e6: nop word ptr cs:[rax+rax]
0xa7f0: mov r8,-0x1
0xa7f7: jmp 0xa750
0xa800: mov rcx,rdx
0xa803: mov r8,-0x1
0xa80a: mov rdx,rsi
0xa80d: mov rsi,rdi
0xa810: xor edi,edi
0xa812: jmp 0xa750
0xa820: mov r8,rcx
0xa823: mov rcx,rdx
0xa826: mov rdx,rsi
0xa829: mov rsi,rdi
0xa82c: xor edi,edi
0xa82e: jmp 0xa750
0xa840: lea rcx,[rip+0x20a7f9]
0xa847: jmp 0x9f50
0xa850: lea rcx,[rip+0x20a7e9]
0xa857: mov rdx,rsi
0xa85a: mov rsi,rdi
0xa85d: xor edi,edi
0xa85f: jmp 0x9f50
0xa9e8: mov r8,rcx
0xa9eb: mov rcx,rdx
0xa9ee: lea rdx,[rip+0x703f]
0xa9f5: mov esi,0x1
0xa9fa: xor eax,eax
0xa9fc: call 0x2af0
0xaa01: jmp 0xa8ec
0xaa9c: jmp 0x2af0
0xabfd: push r12
0xabff: push r15
0xac01: push r14
0xac03: mov r8,qword ptr [rsp+0x20]
0xac08: mov rcx,rbx
0xac0b: mov rdx,rax
0xac0e: mov rdi,rbp
0xac11: mov esi,0x1
0xac16: xor eax,eax
0xac18: call 0x2af0
0xac1d: add rsp,0x20
0xac21: add rsp,0x28
0xac25: pop rbx
0xac26: pop rbp
0xac27: pop r12
0xac29: pop r13
0xac2b: pop r14
0xac2d: pop r15
0xac2f: ret 
0xac69: push r12
0xac6b: push r15
0xac6d: push r14
0xac6f: mov r9,qword ptr [rsp+0x28]
0xac74: jmp 0xac03
0xacd0: xor r9d,r9d
0xacd3: cmp qword ptr [r8],0x0
0xacd7: je 0xaceb
0xacd9: nop dword ptr [rax]
0xace0: add r9,0x1
0xace4: cmp qword ptr [r8+r9*8],0x0
0xace9: jne 0xace0
0xaceb: jmp 0xa8b0
0xacf0: sub rsp,0x68
0xacf4: mov r10,r8
0xacf7: xor r9d,r9d
0xacfa: mov rax,qword ptr fs:0x28
0xad03: mov qword ptr [rsp+0x58],rax
0xad08: xor eax,eax
0xad0a: mov r8,rsp
0xad0d: nop dword ptr [rax]
0xad10: mov eax,dword ptr [r10]
0xad13: cmp eax,0x2f
0xad16: ja 0xad5a
0xad18: mov r11d,eax
0xad1b: add r11,qword ptr [r10+0x10]
0xad1f: add eax,0x8
0xad22: mov dword ptr [r10],eax
0xad25: mov rax,qword ptr [r11]
0xad28: test rax,rax
0xad2b: mov qword ptr [r8+r9*8],rax
0xad2f: je 0xad3b
0xad31: add r9,0x1
0xad35: cmp r9,0xa
0xad39: jne 0xad10
0xad3b: call 0xa8b0
0xad40: mov rax,qword ptr [rsp+0x58]
0xad45: xor rax,qword ptr fs:0x28
0xad4e: jne 0xad55
0xad50: add rsp,0x68
0xad54: ret 
0xad55: call 0x2830
0xad5a: mov r11,qword ptr [r10+0x8]
0xad5e: lea rax,[r11+0x8]
0xad62: mov qword ptr [r10+0x8],rax
0xad66: jmp 0xad25
0xae30: call 0x2830
0xae3c: mov rax,rbx
0xae3f: add rbx,0x8
0xae43: jmp 0xadf6
0xae50: push rbx
0xae51: lea rsi,[rip+0x6c2a]
0xae58: mov edx,0x5
0xae5d: xor edi,edi
0xae5f: call 0x27f0
0xae64: lea rdx,[rip+0x6c2c]
0xae6b: mov rsi,rax
0xae6e: mov edi,0x1
0xae73: xor eax,eax
0xae75: call 0x2a40
0xae7a: lea rsi,[rip+0x6c2c]
0xae81: mov edx,0x5
0xae86: xor edi,edi
0xae88: call 0x27f0
0xae8d: lea rcx,[rip+0x5044]
0xae94: lea rdx,[rip+0x491c]
0xae9b: mov rsi,rax
0xae9e: mov edi,0x1
0xaea3: xor eax,eax
0xaea5: call 0x2a40
0xaeaa: mov rbx,qword ptr [rip+0x20a1f7]
0xaeb1: lea rsi,[rip+0x6e28]
0xaeb8: xor edi,edi
0xaeba: mov edx,0x5
0xaebf: call 0x27f0
0xaec4: mov rsi,rbx
0xaec7: mov rdi,rax
0xaeca: pop rbx
0xaecb: jmp 0x2930
0xaed0: push rbx
0xaed1: mov rbx,rdi
0xaed4: call 0x29d0
0xaed9: test rax,rax
0xaedc: jne 0xaee3
0xaede: test rbx,rbx
0xaee1: jne 0xaee5
0xaee3: pop rbx
0xaee4: ret 
0xaee5: call 0xb120
0xaeea: nop word ptr [rax+rax]
0xaef0: mov rax,rdi
0xaef3: mul rsi
0xaef6: mov rdi,rax
0xaef9: seto al
0xaefc: test rdi,rdi
0xaeff: js 0xaf0b
0xaf01: movzx eax,al
0xaf04: test rax,rax
0xaf07: jne 0xaf0b
0xaf09: jmp 0xaed0
0xaf0b: sub rsp,0x8
0xaf0f: call 0xb120
0xaf14: nop 
0xaf16: nop word ptr cs:[rax+rax]
0xaf20: jmp 0xaed0
0xaf66: nop word ptr cs:[rax+rax]
0xaf70: mov rax,rsi
0xaf73: mul rdx
0xaf76: mov rsi,rax
0xaf79: seto al
0xaf7c: test rsi,rsi
0xaf7f: js 0xaf8b
0xaf81: movzx eax,al
0xaf84: test rax,rax
0xaf87: jne 0xaf8b
0xaf89: jmp 0xaf30
0xaf8b: sub rsp,0x8
0xaf8f: call 0xb120
0xaf94: nop 
0xaf96: nop word ptr cs:[rax+rax]
0xafa0: test rdi,rdi
0xafa3: mov r9,rdx
0xafa6: mov rcx,qword ptr [rsi]
0xafa9: je 0xafe0
0xafab: xor edx,edx
0xafad: movabsq rax,0x5555555555555554
0xafb7: div r9
0xafba: cmp rax,rcx
0xafbd: jbe 0xaffb
0xafbf: mov rax,rcx
0xafc2: shr rax, 1
0xafc5: lea rcx,[rax+rcx+0x1]
0xafca: mov qword ptr [rsi],rcx
0xafcd: imul rcx,r9
0xafd1: mov rsi,rcx
0xafd4: jmp 0xaf30
0xafe0: test rcx,rcx
0xafe3: je 0xb008
0xafe5: mov rax,rcx
0xafe8: mul r9
0xafeb: seto dl
0xafee: test rax,rax
0xaff1: movzx edx,dl
0xaff4: js 0xaffb
0xaff6: test rdx,rdx
0xaff9: je 0xafca
0xaffb: sub rsp,0x8
0xafff: call 0xb120
0xb004: nop dword ptr [rax]
0xb008: xor edx,edx
0xb00a: mov eax,0x80
0xb00f: xor r8d,r8d
0xb012: div r9
0xb015: test rax,rax
0xb018: sete r8b
0xb01c: lea rcx,[r8+rax]
0xb020: jmp 0xafe5
0xb030: test rdi,rdi
0xb033: mov rax,qword ptr [rsi]
0xb036: je 0xb060
0xb038: movabsq rdx,0x5555555555555553
0xb042: cmp rax,rdx
0xb045: ja 0xb071
0xb047: mov rdx,rax
0xb04a: shr rdx, 1
0xb04d: lea rax,[rdx+rax+0x1]
0xb052: mov qword ptr [rsi],rax
0xb055: mov rsi,rax
0xb058: jmp 0xaf30
0xb060: test rax,rax
0xb063: mov edx,0x80
0xb068: cmove rax,rdx
0xb06c: test rax,rax
0xb06f: jns 0xb052
0xb071: sub rsp,0x8
0xb075: call 0xb120
0xb07a: nop word ptr [rax+rax]
0xb080: push rbx
0xb081: mov rbx,rdi
0xb084: call 0xaed0
0xb089: mov rdx,rbx
0xb08c: xor esi,esi
0xb08e: mov rdi,rax
0xb091: pop rbx
0xb092: jmp 0x28f0
0xb0a0: mov rax,rdi
0xb0a3: sub rsp,0x8
0xb0a7: mul rsi
0xb0aa: seto dl
0xb0ad: test rax,rax
0xb0b0: js 0xb0c9
0xb0b2: movzx edx,dl
0xb0b5: test rdx,rdx
0xb0b8: jne 0xb0c9
0xb0ba: call 0x2940
0xb0bf: test rax,rax
0xb0c2: je 0xb0c9
0xb0c4: add rsp,0x8
0xb0c8: ret 
0xb0c9: call 0xb120
0xb0ce: nop 
0xb0d0: push rbp
0xb0d1: push rbx
0xb0d2: mov rbp,rdi
0xb0d5: mov rdi,rsi
0xb0d8: mov rbx,rsi
0xb0db: sub rsp,0x8
0xb0df: call 0xaed0
0xb0e4: add rsp,0x8
0xb0e8: mov rdx,rbx
0xb0eb: mov rsi,rbp
0xb0ee: pop rbx
0xb0ef: pop rbp
0xb0f0: mov rdi,rax
0xb0f3: jmp 0x2970
0xb100: push rbx
0xb101: mov rbx,rdi
0xb104: call 0x2810
0xb109: mov rdi,rbx
0xb10c: lea rsi,[rax+0x1]
0xb110: pop rbx
0xb111: jmp 0xb0d0
0xb150: call 0x2740
0xb155: nop word ptr cs:[rax+rax]
0xb15f: nop 
0xb160: push r13
0xb162: push r12
0xb164: mov r13,rsi
0xb167: push rbp
0xb168: push rbx
0xb169: mov rbx,rdi
0xb16c: mov r12,rdx
0xb16f: sub rsp,0x18
0xb173: mov rax,qword ptr fs:0x28
0xb17c: mov qword ptr [rsp+0x8],rax
0xb181: xor eax,eax
0xb183: lea rax,[rsp+0x4]
0xb188: test rdi,rdi
0xb18b: cmove rbx,rax
0xb18f: mov rdi,rbx
0xb192: call 0x2850
0xb197: cmp rax,-0x3
0xb19b: mov rbp,rax
0xb19e: jbe 0xb1c0
0xb1a0: test r12,r12
0xb1a3: je 0xb1c0
0xb1a5: xor edi,edi
0xb1a7: call 0xb8f0
0xb1ac: test al,al
0xb1ae: jne 0xb1c0
0xb1b0: movzx eax,byte ptr [r13]
0xb1b5: mov ebp,0x1
0xb1ba: mov dword ptr [rbx],eax
0xb1bc: nop dword ptr [rax]
0xb1c0: mov rdx,qword ptr [rsp+0x8]
0xb1c5: xor rdx,qword ptr fs:0x28
0xb1ce: mov rax,rbp
0xb1d1: jne 0xb1de
0xb1d3: add rsp,0x18
0xb1d7: pop rbx
0xb1d8: pop rbp
0xb1d9: pop r12
0xb1db: pop r13
0xb1dd: ret 
0xb1de: call 0x2830
0xb1e3: nop word ptr cs:[rax+rax]
0xb1ed: nop dword ptr [rax]
0xb66a: push rbp
0xb75c: call 0x2830
0xb761: nop word ptr cs:[rax+rax]
0xb76b: nop dword ptr [rax+rax]
0xb770: push r13
0xb772: push r12
0xb774: mov rax,rsi
0xb777: push rbp
0xb778: push rbx
0xb779: mov r13,rdi
0xb77c: sub rsp,0x7f8
0xb783: lea r12,[rsp+0x10]
0xb788: lea rsi,[rsp+0x8]
0xb78d: mov qword ptr [rsp+0x8],0x7d0
0xb796: mov rcx,qword ptr fs:0x28
0xb79f: mov qword ptr [rsp+0x7e8],rcx
0xb7a7: xor ecx,ecx
0xb7a9: mov rdi,r12
0xb7ac: mov rcx,rdx
0xb7af: mov rdx,rax
0xb7b2: call 0xd670
0xb7b7: test rax,rax
0xb7ba: mov rbx,qword ptr [rsp+0x8]
0xb7bf: je 0xb84e
0xb7c5: mov rcx,r13
0xb7c8: mov rdx,rbx
0xb7cb: mov esi,0x1
0xb7d0: mov rdi,rax
0xb7d3: mov rbp,rax
0xb7d6: call 0x2ae0
0xb7db: cmp rax,rbx
0xb7de: jb 0xb820
0xb7e0: cmp rbp,r12
0xb7e3: je 0xb7ed
0xb7e5: mov rdi,rbp
0xb7e8: call 0x2710
0xb7ed: cmp rbx,0x7fffffff
0xb7f4: ja 0xb843
0xb7f6: mov rcx,qword ptr [rsp+0x7e8]
0xb7fe: xor rcx,qword ptr fs:0x28
0xb807: mov eax,ebx
0xb809: jne 0xb85d
0xb80b: add rsp,0x7f8
0xb812: pop rbx
0xb813: pop rbp
0xb814: pop r12
0xb816: pop r13
0xb818: ret 
0xb820: cmp rbp,r12
0xb823: mov ebx,0xffffffff
0xb828: je 0xb7f6
0xb82a: call 0x2750
0xb82f: mov r13d,dword ptr [rax]
0xb832: mov r12,rax
0xb835: mov rdi,rbp
0xb838: call 0x2710
0xb83d: mov dword ptr [r12],r13d
0xb841: jmp 0xb7f6
0xb843: call 0x2750
0xb848: mov dword ptr [rax],0x4b
0xb84e: mov rdi,r13
0xb851: mov ebx,0xffffffff
0xb856: call 0xd660
0xb85b: jmp 0xb7f6
0xb85d: call 0x2830
0xb862: nop word ptr cs:[rax+rax]
0xb86c: nop dword ptr [rax]
0xb870: push r12
0xb872: push rbp
0xb873: mov rbp,rdi
0xb876: push rbx
0xb877: call 0x2790
0xb87c: mov ebx,dword ptr [rbp]
0xb87f: mov rdi,rbp
0xb882: mov r12,rax
0xb885: call 0xd540
0xb88a: and ebx,0x20
0xb88d: test ebx,ebx
0xb88f: jne 0xb8a8
0xb891: test eax,eax
0xb893: je 0xb89f
0xb895: test r12,r12
0xb898: mov eax,0xffffffff
0xb89d: je 0xb8d8
0xb89f: pop rbx
0xb8a0: pop rbp
0xb8a1: pop r12
0xb8a3: ret 
0xb8a8: test eax,eax
0xb8aa: jne 0xb8c8
0xb8ac: call 0x2750
0xb8b1: mov dword ptr [rax],0x0
0xb8b7: mov eax,0xffffffff
0xb8bc: pop rbx
0xb8bd: pop rbp
0xb8be: pop r12
0xb8c0: ret 
0xb8c8: pop rbx
0xb8c9: mov eax,0xffffffff
0xb8ce: pop rbp
0xb8cf: pop r12
0xb8d1: ret 
0xb8d8: call 0x2750
0xb8dd: cmp dword ptr [rax],0x9
0xb8e0: pop rbx
0xb8e1: pop rbp
0xb8e2: pop r12
0xb8e4: setne al
0xb8e7: movzx eax,al
0xb8ea: neg eax
0xb8ec: ret 
0xb8f0: sub rsp,0x8
0xb8f4: xor esi,esi
0xb8f6: call 0x2a30
0xb8fb: mov rdx,rax
0xb8fe: mov eax,0x1
0xb903: test rdx,rdx
0xb906: je 0xb925
0xb908: lea rdi,[rip+0x4d35]
0xb90f: mov ecx,0x2
0xb914: mov rsi,rdx
0xb917: rep cmpsb [rsi],es:[rdi]
0xb919: seta cl
0xb91c: sbb cl,0x0
0xb91f: xor eax,eax
0xb921: test cl,cl
0xb923: jne 0xb930
0xb925: add rsp,0x8
0xb929: ret 
0xb930: lea rdi,[rip+0x6469]
0xb937: mov ecx,0x6
0xb93c: mov rsi,rdx
0xb93f: rep cmpsb [rsi],es:[rdi]
0xb941: seta al
0xb944: sbb al,0x0
0xb946: test al,al
0xb948: setne al
0xb94b: add rsp,0x8
0xb94f: ret 
0xb950: sub rsp,0x8
0xb954: mov edi,0xe
0xb959: call 0x29f0
0xb95e: test rax,rax
0xb961: je 0xb980
0xb963: cmp byte ptr [rax],0x0
0xb966: lea rdx,[rip+0x6439]
0xb96d: cmove rax,rdx
0xb971: add rsp,0x8
0xb975: ret 
0xb980: lea rax,[rip+0x641f]
0xb987: add rsp,0x8
0xb98b: ret 
0xb990: test rdx,rdx
0xb993: push r12
0xb995: push rbp
0xb996: mov rbp,rdi
0xb999: push rbx
0xb99a: je 0xb9c9
0xb99c: mov r12,rsi
0xb99f: lea rbx,[rdx-0x1]
0xb9a3: call 0x2b20
0xb9a8: nop dword ptr [rax+rax]
0xb9b0: movzx ecx,byte ptr [r12+rbx]
0xb9b5: mov rdx,qword ptr [rax]
0xb9b8: mov edx,dword ptr [rdx+rcx*4]
0xb9bb: mov byte ptr [rbp+rbx],dl
0xb9bf: sub rbx,0x1
0xb9c3: cmp rbx,-0x1
0xb9c7: jne 0xb9b0
0xb9c9: mov rax,rbp
0xb9cc: pop rbx
0xb9cd: pop rbp
0xb9ce: pop r12
0xb9d0: ret 
0xb9e0: test rdx,rdx
0xb9e3: push r12
0xb9e5: push rbp
0xb9e6: mov rbp,rdi
0xb9e9: push rbx
0xb9ea: je 0xba19
0xb9ec: mov r12,rsi
0xb9ef: lea rbx,[rdx-0x1]
0xb9f3: call 0x26e0
0xb9f8: nop dword ptr [rax+rax]
0xba00: movzx ecx,byte ptr [r12+rbx]
0xba05: mov rdx,qword ptr [rax]
0xba08: mov edx,dword ptr [rdx+rcx*4]
0xba0b: mov byte ptr [rbp+rbx],dl
0xba0f: sub rbx,0x1
0xba13: cmp rbx,-0x1
0xba17: jne 0xba00
0xba19: mov rax,rbp
0xba1c: pop rbx
0xba1d: pop rbp
0xba1e: pop r12
0xba20: ret 
0xba30: push r15
0xba32: push r14
0xba34: mov r11,rdx
0xba37: push r13
0xba39: push r12
0xba3b: mov r13,rcx
0xba3e: push rbp
0xba3f: push rbx
0xba40: mov rbp,rdi
0xba43: sub rsp,0x4c8
0xba4a: mov rdi,qword ptr [rcx+0x30]
0xba4e: mov r15d,dword ptr [rcx+0x8]
0xba52: mov rax,qword ptr [rsp+0x508]
0xba5a: mov qword ptr [rsp+0x8],rsi
0xba5f: mov dword ptr [rsp+0x2c],r9d
0xba64: movsxd r10,dword ptr [rsp+0x500]
0xba6c: mov byte ptr [rsp+0x2b],r8b
0xba71: mov qword ptr [rsp+0x18],rax
0xba76: mov rax,qword ptr [rsp+0x510]
0xba7e: mov qword ptr [rsp+0x10],rax
0xba83: mov rax,qword ptr fs:0x28
0xba8c: mov qword ptr [rsp+0x4b8],rax
0xba94: xor eax,eax
0xba96: lea rax,[rip+0x48d9]
0xba9d: test rdi,rdi
0xbaa0: cmovne rax,rdi
0xbaa4: cmp r15d,0xc
0xbaa8: mov qword ptr [rsp+0x20],rax
0xbaad: jle 0xbba0
0xbab3: sub r15d,0xc
0xbab7: movzx eax,byte ptr [r11]
0xbabb: xor r14d,r14d
0xbabe: test al,al
0xbac0: je 0xbb7c
0xbac6: mov dword ptr [rsp+0x68],r15d
0xbacb: mov rbx,r11
0xbace: cmp al,0x25
0xbad0: je 0xbbb8
0xbad6: test r10d,r10d
0xbad9: mov r12d,0x0
0xbadf: mov eax,0x1
0xbae4: cmovns r12,r10
0xbae8: test r12,r12
0xbaeb: cmove r12,rax
0xbaef: mov rax,qword ptr [rsp+0x8]
0xbaf4: sub rax,r14
0xbaf7: cmp rax,r12
0xbafa: ja 0xbb30
0xbafc: xor r14d,r14d
0xbaff: mov rbx,qword ptr [rsp+0x4b8]
0xbb07: xor rbx,qword ptr fs:0x28
0xbb10: mov rax,r14
0xbb13: jne 0xd4c5
0xbb19: add rsp,0x4c8
0xbb20: pop rbx
0xbb21: pop rbp
0xbb22: pop r12
0xbb24: pop r13
0xbb26: pop r14
0xbb28: pop r15
0xbb2a: ret 
0xbb30: test rbp,rbp
0xbb33: je 0xbb5c
0xbb35: cmp r10d,0x1
0xbb39: jle 0xbb52
0xbb3b: lea r15,[r10-0x1]
0xbb3f: mov rdi,rbp
0xbb42: mov esi,0x20
0xbb47: mov rdx,r15
0xbb4a: add rbp,r15
0xbb4d: call 0x28f0
0xbb52: movzx eax,byte ptr [rbx]
0xbb55: add rbp,0x1
0xbb59: mov byte ptr [rbp-0x1],al
0xbb5c: add r14,r12
0xbb5f: mov r12,rbx
0xbb62: movzx eax,byte ptr [r12+0x1]
0xbb68: lea rbx,[r12+0x1]
0xbb6d: mov r10,-0x1
0xbb74: test al,al
0xbb76: jne 0xbace
0xbb7c: test rbp,rbp
0xbb7f: je 0xbaff
0xbb85: cmp qword ptr [rsp+0x8],0x0
0xbb8b: je 0xbaff
0xbb91: mov byte ptr [rbp],0x0
0xbb95: jmp 0xbaff
0xbba0: test r15d,r15d
0xbba3: mov eax,0xc
0xbba8: cmove r15d,eax
0xbbac: jmp 0xbab7
0xbbb8: movzx eax,byte ptr [rsp+0x2b]
0xbbbd: xor r8d,r8d
0xbbc0: xor r15d,r15d
0xbbc3: mov edx,0x1
0xbbc8: mov byte ptr [rsp+0x30],al
0xbbcc: add rbx,0x1
0xbbd0: movsx eax,byte ptr [rbx]
0xbbd3: lea ecx,[rax-0x23]
0xbbd6: mov esi,eax
0xbbd8: mov r9d,eax
0xbbdb: cmp cl,0x3c
0xbbde: ja 0xbc0c
0xbbe0: mov rdi,rdx
0xbbe3: movabsq r11,0x1000000000002500
0xbbed: shl rdi,cl
0xbbf0: test rdi,r11
0xbbf3: jne 0xbc60
0xbbf5: test cl,cl
0xbbf7: je 0xbc70
0xbbf9: movabsq rcx,0x800000000000000
0xbc03: test rdi,rcx
0xbc06: jne 0xbd60
0xbc0c: lea edx,[rax-0x30]
0xbc0f: cmp edx,0x9
0xbc12: jbe 0xbd70
0xbc18: cmp sil,0x45
0xbc1c: je 0xbc48
0xbc1e: xor r11d,r11d
0xbc21: cmp sil,0x4f
0xbc25: je 0xbc48
0xbc27: cmp sil,0x7a
0xbc2b: ja 0xbc80
0xbc2d: lea rdx,[rip+0x6190]
0xbc34: movzx eax,sil
0xbc38: movsxd rax,dword ptr [rdx+rax*4]
0xbc3c: add rax,rdx
0xbc3f: jmp rax
0xbc48: movsx r9d,byte ptr [rbx+0x1]
0xbc4d: mov r11d,eax
0xbc50: add rbx,0x1
0xbc54: mov esi,r9d
0xbc57: jmp 0xbc27
0xbc60: mov r15d,eax
0xbc63: jmp 0xbbcc
0xbc70: mov r8d,0x1
0xbc76: jmp 0xbbcc
0xbc80: lea rax,[rbx-0x1]
0xbc84: mov r8d,0x1
0xbc8a: mov r9,rax
0xbc8d: lea rax,[rax-0x1]
0xbc91: add r8d,0x1
0xbc95: cmp byte ptr [rax+0x1],0x25
0xbc99: jne 0xbc8a
0xbc9b: mov rdx,qword ptr [rsp+0x8]
0xbca0: mov eax,0x0
0xbca5: movsxd r8,r8d
0xbca8: mov rcx,r8
0xbcab: mov r12,rbx
0xbcae: sub rdx,r14
0xbcb1: test r10d,r10d
0xbcb4: cmovns eax,r10d
0xbcb8: cltq 
0xbcba: cmp rax,r8
0xbcbd: cmovae rcx,rax
0xbcc1: cmp rcx,rdx
0xbcc4: jae 0xbafc
0xbcca: test rbp,rbp
0xbccd: je 0xbd55
0xbcd3: cmp rax,r8
0xbcd6: jbe 0xbd25
0xbcd8: movsxd rdx,r10d
0xbcdb: mov qword ptr [rsp+0x48],r8
0xbce0: mov qword ptr [rsp+0x40],rcx
0xbce5: sub rdx,r8
0xbce8: cmp r15d,0x30
0xbcec: mov qword ptr [rsp+0x38],r9
0xbcf1: lea rbx,[rbp+rdx]
0xbcf6: je 0xcf66
0xbcfc: cmp r15d,0x2b
0xbd00: je 0xcf66
0xbd06: mov rdi,rbp
0xbd09: mov esi,0x20
0xbd0e: mov rbp,rbx
0xbd11: call 0x28f0
0xbd16: mov r8,qword ptr [rsp+0x48]
0xbd1b: mov rcx,qword ptr [rsp+0x40]
0xbd20: mov r9,qword ptr [rsp+0x38]
0xbd25: cmp byte ptr [rsp+0x30],0x0
0xbd2a: mov qword ptr [rsp+0x38],rcx
0xbd2f: mov rdx,r8
0xbd32: mov qword ptr [rsp+0x30],r8
0xbd37: mov rsi,r9
0xbd3a: mov rdi,rbp
0xbd3d: je 0xcf10
0xbd43: call 0xb9e0
0xbd48: mov r8,qword ptr [rsp+0x30]
0xbd4d: mov rcx,qword ptr [rsp+0x38]
0xbd52: add rbp,r8
0xbd55: add r14,rcx
0xbd58: jmp 0xbb62
0xbd60: mov byte ptr [rsp+0x30],0x1
0xbd65: jmp 0xbbcc
0xbd70: xor r10d,r10d
0xbd73: movsx eax,byte ptr [rbx+0x1]
0xbd77: cmp r10d,0xccccccc
0xbd7e: lea rcx,[rbx+0x1]
0xbd82: mov esi,eax
0xbd84: lea edx,[rax-0x30]
0xbd87: jg 0xbdb6
0xbd89: movsx edi,byte ptr [rbx]
0xbd8c: je 0xbdb0
0xbd8e: lea r9d,[r10+r10*4]
0xbd92: mov rbx,rcx
0xbd95: lea r10d,[rdi+r9*2-0x30]
0xbd9a: cmp edx,0x9
0xbd9d: jbe 0xbd73
0xbd9f: mov r9d,eax
0xbda2: jmp 0xbc18
0xbdb0: cmp dil,0x37
0xbdb4: jle 0xbd8e
0xbdb6: cmp edx,0x9
0xbdb9: ja 0xbdd0
0xbdbb: movsx eax,byte ptr [rbx+0x2]
0xbdbf: mov r10d,0x7fffffff
0xbdc5: add rbx,0x2
0xbdc9: mov esi,eax
0xbdcb: lea edx,[rax-0x30]
0xbdce: jmp 0xbd9a
0xbdd0: mov r9d,eax
0xbdd3: mov rbx,rcx
0xbdd6: mov r10d,0x7fffffff
0xbddc: jmp 0xbc18
0xbe1a: lea r9,[rsp+0xb0]
0xbe22: mov byte ptr [rax],sil
0xbe25: mov byte ptr [rax+0x1],0x0
0xbe29: mov rcx,r13
0xbe2c: mov esi,0x400
0xbe31: mov dword ptr [rsp+0x38],r10d
0xbe36: mov rdi,r9
0xbe39: mov byte ptr [rsp+0x50],r8b
0xbe3e: mov dword ptr [rsp+0x48],r11d
0xbe43: mov qword ptr [rsp+0x40],r9
0xbe48: call 0x2a60
0xbe4d: test rax,rax
0xbe50: je 0xbb62
0xbe56: movsxd r10,dword ptr [rsp+0x38]
0xbe5b: lea rcx,[rax-0x1]
0xbe5f: mov rdx,qword ptr [rsp+0x8]
0xbe64: mov eax,0x0
0xbe69: test r10d,r10d
0xbe6c: cmovns rax,r10
0xbe70: cmp rcx,rax
0xbe73: mov rbx,rax
0xbe76: cmovae rbx,rcx
0xbe7a: sub rdx,r14
0xbe7d: cmp rdx,rbx
0xbe80: jbe 0xbafc
0xbe86: test rbp,rbp
0xbe89: je 0xbf2e
0xbe8f: mov r11d,dword ptr [rsp+0x48]
0xbe94: mov r9,qword ptr [rsp+0x40]
0xbe99: movzx r8d,byte ptr [rsp+0x50]
0xbe9f: test r11d,r11d
0xbea2: jne 0xbefe
0xbea4: cmp rcx,rax
0xbea7: jae 0xbefe
0xbea9: movsxd rdx,r10d
0xbeac: mov qword ptr [rsp+0x50],r9
0xbeb1: mov qword ptr [rsp+0x48],rcx
0xbeb6: sub rdx,rcx
0xbeb9: cmp r15d,0x30
0xbebd: mov byte ptr [rsp+0x40],r8b
0xbec2: lea rax,[rbp+rdx]
0xbec7: mov qword ptr [rsp+0x38],rax
0xbecc: je 0xcf3f
0xbed2: cmp r15d,0x2b
0xbed6: je 0xcf3f
0xbedc: mov rdi,rbp
0xbedf: mov esi,0x20
0xbee4: call 0x28f0
0xbee9: movzx r8d,byte ptr [rsp+0x40]
0xbeef: mov rbp,qword ptr [rsp+0x38]
0xbef4: mov r9,qword ptr [rsp+0x50]
0xbef9: mov rcx,qword ptr [rsp+0x48]
0xbefe: test r8b,r8b
0xbf01: lea rsi,[r9+0x1]
0xbf05: mov rdx,rcx
0xbf08: jne 0xcf28
0xbf0e: cmp byte ptr [rsp+0x30],0x0
0xbf13: mov rdi,rbp
0xbf16: mov qword ptr [rsp+0x30],rcx
0xbf1b: je 0xc791
0xbf21: call 0xb9e0
0xbf26: mov rcx,qword ptr [rsp+0x30]
0xbf2b: add rbp,rcx
0xbf2e: add r14,rbx
0xbf31: jmp 0xbb62
0xbfa7: cmp r11d,0x4f
0xbfab: jne 0xce30
0xbfb1: test al,al
0xbfb3: je 0xce30
0xbfb9: mov esi,r9d
0xbfbc: mov edx,0x2520
0xbfc1: xor r8d,r8d
0xbfc4: mov word ptr [rsp+0xab],dx
0xbfcc: lea rdx,[rsp+0xab]
0xbfd4: mov byte ptr [rsp+0xad],r11b
0xbfdc: mov r12,rbx
0xbfdf: mov r11d,edi
0xbfe2: lea rax,[rdx+0x3]
0xbfe6: jmp 0xbe1a
0xc0a2: movzx r8d,byte ptr [rsp+0x30]
0xc0a8: mov eax,dword ptr [rsp+0x518]
0xc0af: mov rsi,-0x1
0xc0b6: mov dword ptr [rsp+0x48],r10d
0xc0bb: xor edi,edi
0xc0bd: mov r9d,r15d
0xc0c0: mov rcx,r13
0xc0c3: mov dword ptr [rsp+0x30],r8d
0xc0c8: push rax
0xc0c9: push qword ptr [rsp+0x18]
0xc0cd: push qword ptr [rsp+0x28]
0xc0d1: mov eax,dword ptr [rsp+0x50]
0xc0d5: push rax
0xc0d6: mov rdx,qword ptr [rsp+0x60]
0xc0db: call 0xba30
0xc0e0: add rsp,0x20
0xc0e4: movsxd r10,dword ptr [rsp+0x48]
0xc0e9: mov r11,rax
0xc0ec: mov rsi,qword ptr [rsp+0x8]
0xc0f1: mov eax,0x0
0xc0f6: test r10d,r10d
0xc0f9: cmovns rax,r10
0xc0fd: cmp r11,rax
0xc100: mov r12,rax
0xc103: cmovae r12,r11
0xc107: sub rsi,r14
0xc10a: cmp rsi,r12
0xc10d: mov qword ptr [rsp+0x48],rsi
0xc112: jbe 0xbafc
0xc118: test rbp,rbp
0xc11b: je 0xbb5c
0xc121: cmp r11,rax
0xc124: jae 0xc166
0xc126: movsxd rdx,r10d
0xc129: mov qword ptr [rsp+0x58],r11
0xc12e: sub rdx,r11
0xc131: cmp r15d,0x30
0xc135: lea rax,[rbp+rdx]
0xc13a: mov qword ptr [rsp+0x50],rax
0xc13f: je 0xd23c
0xc145: cmp r15d,0x2b
0xc149: je 0xd23c
0xc14f: mov rdi,rbp
0xc152: mov esi,0x20
0xc157: call 0x28f0
0xc15c: mov rbp,qword ptr [rsp+0x50]
0xc161: mov r11,qword ptr [rsp+0x58]
0xc166: mov eax,dword ptr [rsp+0x518]
0xc16d: mov qword ptr [rsp+0x50],r11
0xc172: mov rdi,rbp
0xc175: mov r9d,r15d
0xc178: mov rcx,r13
0xc17b: push rax
0xc17c: push qword ptr [rsp+0x18]
0xc180: push qword ptr [rsp+0x28]
0xc184: mov eax,dword ptr [rsp+0x50]
0xc188: push rax
0xc189: mov r8d,dword ptr [rsp+0x50]
0xc18e: mov rdx,qword ptr [rsp+0x60]
0xc193: mov rsi,qword ptr [rsp+0x68]
0xc198: call 0xba30
0xc19d: mov r11,qword ptr [rsp+0x70]
0xc1a2: add rsp,0x20
0xc1a6: add rbp,r11
0xc1a9: jmp 0xbb5c
0xc2d9: xor esi,esi
0xc2db: jmp 0xbfa7
0xc412: mov eax,0x1
0xc417: mov byte ptr [rsp+0x38],0x0
0xc41c: cmp r15d,0x2b
0xc420: je 0xcb93
0xc426: mov byte ptr [rsp+0x40],0x0
0xc42b: mov edi,0x2
0xc430: xor esi,esi
0xc432: jmp 0xbfa7
0xc560: lea r9,[rsp+0xb0]
0xc568: mov r12d,0xcccccccd
0xc56e: lea r11,[r9+0x17]
0xc572: nop word ptr [rax+rax]
0xc578: test sil,0x1
0xc57c: lea r8,[r11-0x1]
0xc580: je 0xc591
0xc582: lea rax,[r11-0x2]
0xc586: mov byte ptr [r11-0x1],0x3a
0xc58b: mov r11,r8
0xc58e: mov r8,rax
0xc591: mov eax,ecx
0xc593: sar esi, 1
0xc595: mul r12d
0xc598: shr edx,0x3
0xc59b: lea eax,[rdx+rdx*4]
0xc59e: add eax,eax
0xc5a0: sub ecx,eax
0xc5a2: mov eax,esi
0xc5a4: add ecx,0x30
0xc5a7: or eax,edx
0xc5a9: mov byte ptr [r11-0x1],cl
0xc5ad: mov ecx,edx
0xc5af: mov r11,r8
0xc5b2: jne 0xc578
0xc5b4: cmp r10d,edi
0xc5b7: cmovge edi,r10d
0xc5bb: cmp byte ptr [rsp+0x38],0x0
0xc5c0: mov dword ptr [rsp+0x48],edi
0xc5c4: jne 0xce48
0xc5ca: cmp byte ptr [rsp+0x40],0x0
0xc5cf: je 0xc869
0xc5d5: cmp r15d,0x2d
0xc5d9: je 0xd103
0xc5df: mov byte ptr [rsp+0x38],0x2b
0xc5e4: mov eax,dword ptr [rsp+0x48]
0xc5e8: lea rcx,[r9+0x17]
0xc5ec: mov rdx,qword ptr [rsp+0x8]
0xc5f1: sub rcx,r8
0xc5f4: lea r12d,[rax-0x1]
0xc5f8: sub rdx,r14
0xc5fb: sub r12d,ecx
0xc5fe: test r12d,r12d
0xc601: jle 0xd04c
0xc607: cmp r15d,0x5f
0xc60b: je 0xcfc6
0xc611: movsxd rax,dword ptr [rsp+0x48]
0xc616: cmp rax,rdx
0xc619: mov rdi,rax
0xc61c: jae 0xbafc
0xc622: test r10d,r10d
0xc625: mov eax,0x0
0xc62a: mov esi,0x1
0xc62f: cmovns eax,r10d
0xc633: cltq 
0xc635: test rax,rax
0xc638: cmovne rsi,rax
0xc63c: cmp rsi,rdx
0xc63f: jae 0xbafc
0xc645: add r14,rsi
0xc648: test rbp,rbp
0xc64b: movsxd r9,r12d
0xc64e: mov r12,rbx
0xc651: je 0xc6f4
0xc657: test edi,edi
0xc659: jne 0xc6af
0xc65b: cmp rax,0x1
0xc65f: jbe 0xc6af
0xc661: movsxd rdx,r10d
0xc664: mov qword ptr [rsp+0x58],r8
0xc669: mov qword ptr [rsp+0x50],r9
0xc66e: sub rdx,0x1
0xc672: cmp r15d,0x30
0xc676: mov qword ptr [rsp+0x40],rcx
0xc67b: lea r12,[rbp+rdx]
0xc680: je 0xd451
0xc686: cmp r15d,0x2b
0xc68a: je 0xd451
0xc690: mov rdi,rbp
0xc693: mov esi,0x20
0xc698: mov rbp,r12
0xc69b: call 0x28f0
0xc6a0: mov r8,qword ptr [rsp+0x58]
0xc6a5: mov r9,qword ptr [rsp+0x50]
0xc6aa: mov rcx,qword ptr [rsp+0x40]
0xc6af: movzx eax,byte ptr [rsp+0x38]
0xc6b4: add rbp,0x1
0xc6b8: mov r12,rbx
0xc6bb: mov byte ptr [rbp-0x1],al
0xc6be: test rbp,rbp
0xc6c1: je 0xc6f4
0xc6c3: mov rdx,r9
0xc6c6: mov rdi,rbp
0xc6c9: mov esi,0x30
0xc6ce: mov qword ptr [rsp+0x50],r8
0xc6d3: mov qword ptr [rsp+0x40],rcx
0xc6d8: mov qword ptr [rsp+0x38],r9
0xc6dd: call 0x28f0
0xc6e2: mov r9,qword ptr [rsp+0x38]
0xc6e7: mov r8,qword ptr [rsp+0x50]
0xc6ec: mov rcx,qword ptr [rsp+0x40]
0xc6f1: add rbp,r9
0xc6f4: mov rdx,qword ptr [rsp+0x8]
0xc6f9: add r14,r9
0xc6fc: xor r11d,r11d
0xc6ff: xor r10d,r10d
0xc702: sub rdx,r14
0xc705: cmp rcx,r11
0xc708: mov rbx,r11
0xc70b: cmovae rbx,rcx
0xc70f: cmp rbx,rdx
0xc712: jae 0xbafc
0xc718: test rbp,rbp
0xc71b: je 0xbf2e
0xc721: mov esi,dword ptr [rsp+0x48]
0xc725: test esi,esi
0xc727: jne 0xc778
0xc729: cmp rcx,r11
0xc72c: jae 0xc778
0xc72e: movsxd rdx,r10d
0xc731: mov qword ptr [rsp+0x48],r8
0xc736: mov qword ptr [rsp+0x40],rcx
0xc73b: sub rdx,rcx
0xc73e: cmp r15d,0x30
0xc742: lea rax,[rbp+rdx]
0xc747: mov qword ptr [rsp+0x38],rax
0xc74c: je 0xcf8a
0xc752: cmp r15d,0x2b
0xc756: je 0xcf8a
0xc75c: mov rdi,rbp
0xc75f: mov esi,0x20
0xc764: call 0x28f0
0xc769: mov rbp,qword ptr [rsp+0x38]
0xc76e: mov r8,qword ptr [rsp+0x48]
0xc773: mov rcx,qword ptr [rsp+0x40]
0xc778: cmp byte ptr [rsp+0x30],0x0
0xc77d: mov rdx,rcx
0xc780: mov qword ptr [rsp+0x30],rcx
0xc785: mov rsi,r8
0xc788: mov rdi,rbp
0xc78b: jne 0xbf21
0xc791: call 0x2970
0xc796: mov rcx,qword ptr [rsp+0x30]
0xc79b: jmp 0xbf2b
0xc869: mov rdx,qword ptr [rsp+0x8]
0xc86e: lea rcx,[r9+0x17]
0xc872: sub rcx,r8
0xc875: sub rdx,r14
0xc878: cmp r15d,0x2d
0xc87c: je 0xc88f
0xc87e: mov r12d,dword ptr [rsp+0x48]
0xc883: sub r12d,ecx
0xc886: test r12d,r12d
0xc889: jg 0xd219
0xc88f: test r10d,r10d
0xc892: mov r11d,0x0
0xc898: mov r12,rbx
0xc89b: cmovns r11d,r10d
0xc89f: movsxd r11,r11d
0xc8a2: jmp 0xc705
0xca3a: mov r15d,dword ptr [rsp+0x2c]
0xca3f: mov eax,0x1
0xca44: cmp r15d,0x2b
0xca48: je 0xd4aa
0xca4e: mov byte ptr [rsp+0x40],0x0
0xca53: mov byte ptr [rsp+0x38],0x0
0xca58: mov edi,0x2
0xca5d: xor esi,esi
0xca5f: jmp 0xbfa7
0xcb93: mov edi,0x2
0xcb98: mov edx,0x63
0xcb9d: cmp edx,ecx
0xcb9f: mov byte ptr [rsp+0x40],0x1
0xcba4: mov r15d,0x2b
0xcbaa: jb 0xc2d9
0xcbb0: cmp r10d,edi
0xcbb3: mov r15d,0x2b
0xcbb9: setg qword ptr [rsp+0x40]
0xcbbe: xor esi,esi
0xcbc0: jmp 0xbfa7
0xcbe2: jmp 0xc0a2
0xce30: mov eax,ecx
0xce32: neg eax
0xce34: cmp byte ptr [rsp+0x38],0x0
0xce39: cmovne ecx,eax
0xce3c: jmp 0xc560
0xce48: cmp r15d,0x2d
0xce4c: mov byte ptr [rsp+0x38],0x2d
0xce51: jne 0xc5e4
0xce57: test r10d,r10d
0xce5a: mov r11d,0x0
0xce60: mov rax,qword ptr [rsp+0x8]
0xce65: cmovns r11d,r10d
0xce69: mov r12d,0x1
0xce6f: movsxd r11,r11d
0xce72: test r11,r11
0xce75: cmovne r12,r11
0xce79: sub rax,r14
0xce7c: cmp rax,r12
0xce7f: jbe 0xbafc
0xce85: test rbp,rbp
0xce88: je 0xceec
0xce8a: mov eax,dword ptr [rsp+0x48]
0xce8e: test eax,eax
0xce90: jne 0xcee4
0xce92: cmp r11,0x1
0xce96: jbe 0xcee4
0xce98: movsxd rax,r10d
0xce9b: mov rdi,rbp
0xce9e: mov esi,0x20
0xcea3: lea rcx,[rax-0x1]
0xcea7: mov qword ptr [rsp+0x60],r9
0xceac: mov qword ptr [rsp+0x58],r8
0xceb1: mov qword ptr [rsp+0x50],r11
0xceb6: mov dword ptr [rsp+0x40],r10d
0xcebb: mov rdx,rcx
0xcebe: mov qword ptr [rsp+0x38],rcx
0xcec3: call 0x28f0
0xcec8: mov rcx,qword ptr [rsp+0x38]
0xcecd: mov r9,qword ptr [rsp+0x60]
0xced2: mov r8,qword ptr [rsp+0x58]
0xced7: mov r11,qword ptr [rsp+0x50]
0xcedc: mov r10d,dword ptr [rsp+0x40]
0xcee1: add rbp,rcx
0xcee4: mov byte ptr [rbp],r15b
0xcee8: add rbp,0x1
0xceec: mov rdx,qword ptr [rsp+0x8]
0xcef1: lea rcx,[r9+0x17]
0xcef5: add r14,r12
0xcef8: mov r15d,0x2d
0xcefe: mov r12,rbx
0xcf01: sub rcx,r8
0xcf04: sub rdx,r14
0xcf07: jmp 0xc705
0xcf10: call 0x2970
0xcf15: mov rcx,qword ptr [rsp+0x38]
0xcf1a: mov r8,qword ptr [rsp+0x30]
0xcf1f: jmp 0xbd52
0xcf28: mov rdi,rbp
0xcf2b: mov qword ptr [rsp+0x30],rcx
0xcf30: call 0xb990
0xcf35: mov rcx,qword ptr [rsp+0x30]
0xcf3a: jmp 0xbf2b
0xcf3f: mov rdi,rbp
0xcf42: mov esi,0x30
0xcf47: call 0x28f0
0xcf4c: mov rbp,qword ptr [rsp+0x38]
0xcf51: movzx r8d,byte ptr [rsp+0x40]
0xcf57: mov rcx,qword ptr [rsp+0x48]
0xcf5c: mov r9,qword ptr [rsp+0x50]
0xcf61: jmp 0xbefe
0xcf66: mov rdi,rbp
0xcf69: mov esi,0x30
0xcf6e: mov rbp,rbx
0xcf71: call 0x28f0
0xcf76: mov r9,qword ptr [rsp+0x38]
0xcf7b: mov rcx,qword ptr [rsp+0x40]
0xcf80: mov r8,qword ptr [rsp+0x48]
0xcf85: jmp 0xbd25
0xcf8a: mov rdi,rbp
0xcf8d: mov esi,0x30
0xcf92: call 0x28f0
0xcf97: mov rbp,qword ptr [rsp+0x38]
0xcf9c: mov rcx,qword ptr [rsp+0x40]
0xcfa1: mov r8,qword ptr [rsp+0x48]
0xcfa6: jmp 0xc778
0xcfc1: mov byte ptr [rsp+0x38],0x0
0xcfc6: movsxd r15,r12d
0xcfc9: cmp r15,rdx
0xcfcc: jae 0xbafc
0xcfd2: test rbp,rbp
0xcfd5: je 0xd008
0xcfd7: mov rdi,rbp
0xcfda: mov rdx,r15
0xcfdd: mov esi,0x20
0xcfe2: mov dword ptr [rsp+0x58],r10d
0xcfe7: mov qword ptr [rsp+0x50],r9
0xcfec: add rbp,r15
0xcfef: mov qword ptr [rsp+0x40],r8
0xcff4: call 0x28f0
0xcff9: mov r10d,dword ptr [rsp+0x58]
0xcffe: mov r9,qword ptr [rsp+0x50]
0xd003: mov r8,qword ptr [rsp+0x40]
0xd008: mov rdx,qword ptr [rsp+0x8]
0xd00d: mov eax,r10d
0xd010: add r14,r15
0xd013: sub eax,r12d
0xd016: cmp r10d,r12d
0xd019: mov r10d,0x0
0xd01f: cmovg r10d,eax
0xd023: sub rdx,r14
0xd026: cmp byte ptr [rsp+0x38],0x0
0xd02b: jne 0xd152
0xd031: add r9,0x17
0xd035: movsxd r11,r10d
0xd038: mov r12,rbx
0xd03b: mov rcx,r9
0xd03e: mov r15d,0x5f
0xd044: sub rcx,r8
0xd047: jmp 0xc705
0xd04c: test r10d,r10d
0xd04f: mov r11d,0x0
0xd055: mov r12d,0x1
0xd05b: cmovns r11d,r10d
0xd05f: movsxd r11,r11d
0xd062: test r11,r11
0xd065: cmovne r12,r11
0xd069: cmp r12,rdx
0xd06c: jae 0xbafc
0xd072: test rbp,rbp
0xd075: je 0xd0f0
0xd077: mov edi,dword ptr [rsp+0x48]
0xd07b: test edi,edi
0xd07d: jne 0xd0e4
0xd07f: cmp r11,0x1
0xd083: jbe 0xd0e4
0xd085: movsxd rdx,r10d
0xd088: mov dword ptr [rsp+0x6c],r10d
0xd08d: mov qword ptr [rsp+0x60],r8
0xd092: sub rdx,0x1
0xd096: cmp r15d,0x30
0xd09a: mov qword ptr [rsp+0x58],rcx
0xd09f: lea rax,[rbp+rdx]
0xd0a4: mov qword ptr [rsp+0x50],r11
0xd0a9: mov qword ptr [rsp+0x40],rax
0xd0ae: je 0xd47f
0xd0b4: cmp r15d,0x2b
0xd0b8: je 0xd47f
0xd0be: mov rdi,rbp
0xd0c1: mov esi,0x20
0xd0c6: call 0x28f0
0xd0cb: mov rbp,qword ptr [rsp+0x40]
0xd0d0: mov r10d,dword ptr [rsp+0x6c]
0xd0d5: mov r8,qword ptr [rsp+0x60]
0xd0da: mov rcx,qword ptr [rsp+0x58]
0xd0df: mov r11,qword ptr [rsp+0x50]
0xd0e4: movzx eax,byte ptr [rsp+0x38]
0xd0e9: add rbp,0x1
0xd0ed: mov byte ptr [rbp-0x1],al
0xd0f0: mov rdx,qword ptr [rsp+0x8]
0xd0f5: add r14,r12
0xd0f8: mov r12,rbx
0xd0fb: sub rdx,r14
0xd0fe: jmp 0xc705
0xd103: mov r15d,0x2b
0xd109: jmp 0xce57
0xd152: movsxd r15,r10d
0xd155: mov r12d,0x1
0xd15b: test r15,r15
0xd15e: cmovne r12,r15
0xd162: cmp r12,rdx
0xd165: jae 0xbafc
0xd16b: test rbp,rbp
0xd16e: je 0xd1cb
0xd170: mov r11d,dword ptr [rsp+0x48]
0xd175: test r11d,r11d
0xd178: jne 0xd1bf
0xd17a: cmp r15,0x1
0xd17e: jbe 0xd1bf
0xd180: lea rcx,[r15-0x1]
0xd184: mov rdi,rbp
0xd187: mov esi,0x20
0xd18c: mov dword ptr [rsp+0x60],r10d
0xd191: mov qword ptr [rsp+0x58],r9
0xd196: mov rdx,rcx
0xd199: mov qword ptr [rsp+0x50],r8
0xd19e: mov qword ptr [rsp+0x40],rcx
0xd1a3: call 0x28f0
0xd1a8: mov rcx,qword ptr [rsp+0x40]
0xd1ad: mov r10d,dword ptr [rsp+0x60]
0xd1b2: mov r9,qword ptr [rsp+0x58]
0xd1b7: mov r8,qword ptr [rsp+0x50]
0xd1bc: add rbp,rcx
0xd1bf: movzx eax,byte ptr [rsp+0x38]
0xd1c4: add rbp,0x1
0xd1c8: mov byte ptr [rbp-0x1],al
0xd1cb: mov rdx,qword ptr [rsp+0x8]
0xd1d0: add r9,0x17
0xd1d4: add r14,r12
0xd1d7: mov rcx,r9
0xd1da: mov r11,r15
0xd1dd: mov r12,rbx
0xd1e0: sub rcx,r8
0xd1e3: mov r15d,0x5f
0xd1e9: sub rdx,r14
0xd1ec: jmp 0xc705
0xd219: cmp r15d,0x5f
0xd21d: je 0xcfc1
0xd223: movsxd rax,dword ptr [rsp+0x48]
0xd228: cmp rax,rdx
0xd22b: jae 0xbafc
0xd231: movsxd r9,r12d
0xd234: mov r12,rbx
0xd237: jmp 0xc6be
0xd23c: mov rdi,rbp
0xd23f: mov esi,0x30
0xd244: call 0x28f0
0xd249: mov rbp,qword ptr [rsp+0x50]
0xd24e: mov r11,qword ptr [rsp+0x58]
0xd253: jmp 0xc166
0xd451: mov rdi,rbp
0xd454: mov esi,0x30
0xd459: mov rbp,r12
0xd45c: call 0x28f0
0xd461: mov rcx,qword ptr [rsp+0x40]
0xd466: mov r9,qword ptr [rsp+0x50]
0xd46b: mov r8,qword ptr [rsp+0x58]
0xd470: jmp 0xc6af
0xd47f: mov rdi,rbp
0xd482: mov esi,0x30
0xd487: call 0x28f0
0xd48c: mov rbp,qword ptr [rsp+0x40]
0xd491: mov r11,qword ptr [rsp+0x50]
0xd496: mov rcx,qword ptr [rsp+0x58]
0xd49b: mov r8,qword ptr [rsp+0x60]
0xd4a0: mov r10d,dword ptr [rsp+0x6c]
0xd4a5: jmp 0xd0e4
0xd4aa: mov byte ptr [rsp+0x38],0x0
0xd4af: mov edi,0x2
0xd4b4: jmp 0xcbb0
0xd4c5: call 0x2830
0xd4ca: add ecx,0x64
0xd4cd: test r15d,r15d
0xd4d0: je 0xca3a
0xd4d6: jmp 0xc412
0xd4f0: sub rsp,0x18
0xd4f4: mov rax,qword ptr fs:0x28
0xd4fd: mov qword ptr [rsp+0x8],rax
0xd502: xor eax,eax
0xd504: mov byte ptr [rsp+0x7],0x0
0xd509: push r9
0xd50b: xor r9d,r9d
0xd50e: push r8
0xd510: xor r8d,r8d
0xd513: lea rax,[rsp+0x17]
0xd518: push rax
0xd519: push -0x1
0xd51b: call 0xba30
0xd520: add rsp,0x20
0xd524: mov rdx,qword ptr [rsp+0x8]
0xd529: xor rdx,qword ptr fs:0x28
0xd532: jne 0xd539
0xd534: add rsp,0x18
0xd538: ret 
0xd539: call 0x2830
0xd53e: nop 
0xd540: push r12
0xd542: push rbp
0xd543: push rbx
0xd544: mov rbx,rdi
0xd547: call 0x29a0
0xd54c: test eax,eax
0xd54e: mov rdi,rbx
0xd551: js 0xd5a7
0xd553: call 0x2a10
0xd558: test eax,eax
0xd55a: jne 0xd588
0xd55c: mov rdi,rbx
0xd55f: call 0xd5c0
0xd564: test eax,eax
0xd566: je 0xd5a4
0xd568: call 0x2750
0xd56d: mov r12d,dword ptr [rax]
0xd570: mov rdi,rbx
0xd573: mov rbp,rax
0xd576: call 0x27d0
0xd57b: test r12d,r12d
0xd57e: jne 0xd5b0
0xd580: pop rbx
0xd581: pop rbp
0xd582: pop r12
0xd584: ret 
0xd588: mov rdi,rbx
0xd58b: call 0x29a0
0xd590: xor esi,esi
0xd592: mov edx,0x1
0xd597: mov edi,eax
0xd599: call 0x28c0
0xd59e: cmp rax,-0x1
0xd5a2: jne 0xd55c
0xd5a4: mov rdi,rbx
0xd5a7: pop rbx
0xd5a8: pop rbp
0xd5a9: pop r12
0xd5ab: jmp 0x27d0
0xd5b0: mov dword ptr [rbp],r12d
0xd5b4: mov eax,0xffffffff
0xd5b9: jmp 0xd580
0xd5c0: test rdi,rdi
0xd5c3: push rbx
0xd5c4: mov rbx,rdi
0xd5c7: je 0xd5da
0xd5c9: call 0x2a10
0xd5ce: test eax,eax
0xd5d0: je 0xd5da
0xd5d2: test dword ptr [rbx],0x100
0xd5d8: jne 0xd5e8
0xd5da: mov rdi,rbx
0xd5dd: pop rbx
0xd5de: jmp 0x29e0
0xd5e8: mov rdi,rbx
0xd5eb: mov edx,0x1
0xd5f0: xor esi,esi
0xd5f2: call 0xd600
0xd5f7: mov rdi,rbx
0xd5fa: pop rbx
0xd5fb: jmp 0x29e0
0xd600: mov rax,qword ptr [rdi+0x8]
0xd604: cmp qword ptr [rdi+0x10],rax
0xd608: je 0xd610
0xd60a: jmp 0x2a90
0xd610: mov rax,qword ptr [rdi+0x20]
0xd614: cmp qword ptr [rdi+0x28],rax
0xd618: jne 0xd60a
0xd61a: cmp qword ptr [rdi+0x48],0x0
0xd61f: jne 0xd60a
0xd621: push r12
0xd623: push rbp
0xd624: mov r12d,edx
0xd627: push rbx
0xd628: mov rbp,rsi
0xd62b: mov rbx,rdi
0xd62e: call 0x29a0
0xd633: mov edx,r12d
0xd636: mov rsi,rbp
0xd639: mov edi,eax
0xd63b: call 0x28c0
0xd640: cmp rax,-0x1
0xd644: je 0xd652
0xd646: and dword ptr [rbx],-0x11
0xd649: mov qword ptr [rbx+0x90],rax
0xd650: xor eax,eax
0xd652: pop rbx
0xd653: pop rbp
0xd654: pop r12
0xd656: ret 
0xd660: or dword ptr [rdi],0x20
0xd663: ret 
0xd670: push rbp
0xd671: mov rbp,rsp
0xd674: push r15
0xd676: push r14
0xd678: push r13
0xd67a: push r12
0xd67c: lea r14,[rbp-0x3b0]
0xd683: push rbx
0xd684: mov rbx,rdx
0xd687: mov r12,rcx
0xd68a: mov rdx,r14
0xd68d: sub rsp,0x408
0xd694: mov qword ptr [rbp-0x418],rsi
0xd69b: lea rsi,[rbp-0x2c0]
0xd6a2: mov qword ptr [rbp-0x3e8],rdi
0xd6a9: mov rdi,rbx
0xd6ac: mov qword ptr [rbp-0x410],r14
0xd6b3: mov rax,qword ptr fs:0x28
0xd6bc: mov qword ptr [rbp-0x38],rax
0xd6c0: xor eax,eax
0xd6c2: mov qword ptr [rbp-0x408],rsi
0xd6c9: call 0xe990
0xd6ce: test eax,eax
0xd6d0: js 0xe538
0xd6d6: mov rsi,r14
0xd6d9: mov rdi,r12
0xd6dc: call 0xe790
0xd6e1: test eax,eax
0xd6e3: js 0xe5a0
0xd6e9: mov rax,qword ptr [rbp-0x2b0]
0xd6f0: mov rdx,-0x1
0xd6f7: add rax,0x7
0xd6fb: cmp rax,0x6
0xd6ff: cmovbe rax,rdx
0xd703: add rax,qword ptr [rbp-0x2a8]
0xd70a: jb 0xe138
0xd710: mov rdi,rax
0xd713: xor r8d,r8d
0xd716: add rdi,0x6
0xd71a: setb r8b
0xd71e: jb 0xe138
0xd724: cmp rdi,0xf9f
0xd72b: jbe 0xd878
0xd731: cmp rdi,-0x1
0xd735: mov qword ptr [rbp-0x3c8],r8
0xd73c: je 0xe138
0xd742: call 0x29d0
0xd747: test rax,rax
0xd74a: mov qword ptr [rbp-0x3d8],rax
0xd751: je 0xe138
0xd757: mov r8,qword ptr [rbp-0x3c8]
0xd75e: mov qword ptr [rbp-0x420],rax
0xd765: xor r12d,r12d
0xd768: cmp qword ptr [rbp-0x3e8],0x0
0xd770: je 0xd77c
0xd772: mov rax,qword ptr [rbp-0x418]
0xd779: mov r12,qword ptr [rax]
0xd77c: mov r13,qword ptr [rbp-0x2b8]
0xd783: lea rax,[rbp-0x3bc]
0xd78a: mov r15,qword ptr [rbp-0x3e8]
0xd791: mov qword ptr [rbp-0x400],0x0
0xd79c: mov qword ptr [rbp-0x3f0],rax
0xd7a3: mov rax,rbx
0xd7a6: mov rbx,r8
0xd7a9: mov rcx,qword ptr [r13]
0xd7ad: mov r8,rax
0xd7b0: cmp rcx,r8
0xd7b3: je 0xe121
0xd7b9: sub rcx,r8
0xd7bc: mov rax,rbx
0xd7bf: add rax,rcx
0xd7c2: mov r14,rax
0xd7c5: jae 0xd8a8
0xd7cb: cmp r12,-0x1
0xd7cf: je 0xe2a0
0xd7d5: call 0x2750
0xd7da: mov qword ptr [rbp-0x3c8],rax
0xd7e1: cmp r15,qword ptr [rbp-0x3e8]
0xd7e8: je 0xd7f3
0xd7ea: test r15,r15
0xd7ed: jne 0xe2d0
0xd7f3: mov rax,qword ptr [rbp-0x420]
0xd7fa: test rax,rax
0xd7fd: je 0xd807
0xd7ff: mov rdi,rax
0xd802: call 0x2710
0xd807: mov rax,qword ptr [rbp-0x408]
0xd80e: mov rdi,qword ptr [rbp-0x2b8]
0xd815: add rax,0x20
0xd819: cmp rdi,rax
0xd81c: je 0xd823
0xd81e: call 0x2710
0xd823: mov rax,qword ptr [rbp-0x410]
0xd82a: mov rdi,qword ptr [rbp-0x3a8]
0xd831: add rax,0x10
0xd835: cmp rdi,rax
0xd838: je 0xd83f
0xd83a: call 0x2710
0xd83f: mov rax,qword ptr [rbp-0x3c8]
0xd846: xor r15d,r15d
0xd849: mov dword ptr [rax],0xc
0xd84f: mov rdi,qword ptr [rbp-0x38]
0xd853: xor rdi,qword ptr fs:0x28
0xd85c: mov rax,r15
0xd85f: jne 0xe767
0xd865: lea rsp,[rbp-0x28]
0xd869: pop rbx
0xd86a: pop r12
0xd86c: pop r13
0xd86e: pop r14
0xd870: pop r15
0xd872: pop rbp
0xd873: ret 
0xd878: add rax,0x24
0xd87c: mov qword ptr [rbp-0x420],0x0
0xd887: and rax,-0x10
0xd88b: sub rsp,rax
0xd88e: lea rax,[rsp+0xf]
0xd893: and rax,-0x10
0xd897: mov qword ptr [rbp-0x3d8],rax
0xd89e: jmp 0xd765
0xd8a8: cmp r12,rax
0xd8ab: jae 0xd914
0xd8ad: test r12,r12
0xd8b0: jne 0xe1e0
0xd8b6: cmp rax,0xc
0xd8ba: ja 0xe1f2
0xd8c0: mov r12d,0xc
0xd8c6: cmp r15,qword ptr [rbp-0x3e8]
0xd8cd: sete dl
0xd8d0: test r15,r15
0xd8d3: je 0xe218
0xd8d9: test dl,dl
0xd8db: jne 0xe218
0xd8e1: mov rsi,r12
0xd8e4: mov rdi,r15
0xd8e7: mov qword ptr [rbp-0x3d0],r8
0xd8ee: mov qword ptr [rbp-0x3c8],rcx
0xd8f5: call 0x2a20
0xd8fa: test rax,rax
0xd8fd: mov rcx,qword ptr [rbp-0x3c8]
0xd904: mov r8,qword ptr [rbp-0x3d0]
0xd90b: je 0xe2bb
0xd911: mov r15,rax
0xd914: lea rdi,[r15+rbx]
0xd918: mov rdx,rcx
0xd91b: mov rsi,r8
0xd91e: call 0x2970
0xd923: mov rax,qword ptr [rbp-0x400]
0xd92a: cmp qword ptr [rbp-0x2c0],rax
0xd931: je 0xe5eb
0xd937: movzx edx,byte ptr [r13+0x48]
0xd93c: mov rax,qword ptr [r13+0x50]
0xd940: cmp dl,0x25
0xd943: je 0xe0d8
0xd949: cmp rax,-0x1
0xd94d: je 0xe596
0xd953: mov r8,qword ptr [rbp-0x3a8]
0xd95a: shl rax,0x5
0xd95e: add rax,r8
0xd961: cmp dl,0x6e
0xd964: mov edi,dword ptr [rax]
0xd966: mov dword ptr [rbp-0x3d0],edi
0xd96c: je 0xe150
0xd972: mov eax,dword ptr [r13+0x10]
0xd976: mov rdi,qword ptr [rbp-0x3d8]
0xd97d: test al,0x1
0xd97f: mov byte ptr [rdi],0x25
0xd982: lea rbx,[rdi+0x1]
0xd986: je 0xd997
0xd988: mov rdi,qword ptr [rbp-0x3d8]
0xd98f: lea rbx,[rdi+0x2]
0xd993: mov byte ptr [rdi+0x1],0x27
0xd997: test al,0x2
0xd999: je 0xd9a2
0xd99b: mov byte ptr [rbx],0x2d
0xd99e: add rbx,0x1
0xd9a2: test al,0x4
0xd9a4: je 0xd9ad
0xd9a6: mov byte ptr [rbx],0x2b
0xd9a9: add rbx,0x1
0xd9ad: test al,0x8
0xd9af: je 0xd9b8
0xd9b1: mov byte ptr [rbx],0x20
0xd9b4: add rbx,0x1
0xd9b8: test al,0x10
0xd9ba: je 0xd9c3
0xd9bc: mov byte ptr [rbx],0x23
0xd9bf: add rbx,0x1
0xd9c3: test al,0x40
0xd9c5: je 0xd9ce
0xd9c7: mov byte ptr [rbx],0x49
0xd9ca: add rbx,0x1
0xd9ce: test al,0x20
0xd9d0: je 0xd9d9
0xd9d2: mov byte ptr [rbx],0x30
0xd9d5: add rbx,0x1
0xd9d9: mov rsi,qword ptr [r13+0x18]
0xd9dd: mov rdx,qword ptr [r13+0x20]
0xd9e1: cmp rsi,rdx
0xd9e4: je 0xda16
0xd9e6: mov rcx,rdx
0xd9e9: mov rdi,rbx
0xd9ec: mov qword ptr [rbp-0x3e0],r8
0xd9f3: sub rcx,rsi
0xd9f6: mov rdx,rcx
0xd9f9: mov qword ptr [rbp-0x3c8],rcx
0xda00: call 0x2970
0xda05: mov rcx,qword ptr [rbp-0x3c8]
0xda0c: mov r8,qword ptr [rbp-0x3e0]
0xda13: add rbx,rcx
0xda16: mov rsi,qword ptr [r13+0x30]
0xda1a: mov rdx,qword ptr [r13+0x38]
0xda1e: cmp rsi,rdx
0xda21: je 0xda53
0xda23: mov rcx,rdx
0xda26: mov rdi,rbx
0xda29: mov qword ptr [rbp-0x3e0],r8
0xda30: sub rcx,rsi
0xda33: mov rdx,rcx
0xda36: mov qword ptr [rbp-0x3c8],rcx
0xda3d: call 0x2970
0xda42: mov rcx,qword ptr [rbp-0x3c8]
0xda49: mov r8,qword ptr [rbp-0x3e0]
0xda50: add rbx,rcx
0xda53: mov edi,dword ptr [rbp-0x3d0]
0xda59: cmp edi,0x10
0xda5c: ja 0xda8b
0xda5e: mov eax,0x1
0xda63: mov ecx,edi
0xda65: shl rax,cl
0xda68: test eax,0x14180
0xda6d: jne 0xda84
0xda6f: test ah,0x10
0xda72: jne 0xe3d0
0xda78: test ah,0x6
0xda7b: je 0xda8b
0xda7d: mov byte ptr [rbx],0x6c
0xda80: add rbx,0x1
0xda84: mov byte ptr [rbx],0x6c
0xda87: add rbx,0x1
0xda8b: movzx eax,byte ptr [r13+0x48]
0xda90: mov byte ptr [rbx+0x1],0x0
0xda94: mov byte ptr [rbx],al
0xda96: mov rax,qword ptr [r13+0x28]
0xda9a: cmp rax,-0x1
0xda9e: je 0xe1d0
0xdaa4: shl rax,0x5
0xdaa8: add rax,r8
0xdaab: cmp dword ptr [rax],0x5
0xdaae: jne 0xe596
0xdab4: mov eax,dword ptr [rax+0x10]
0xdab7: mov dword ptr [rbp-0x3e0],0x1
0xdac1: mov dword ptr [rbp-0x3b8],eax
0xdac7: mov rax,qword ptr [r13+0x40]
0xdacb: cmp rax,-0x1
0xdacf: je 0xdafc
0xdad1: shl rax,0x5
0xdad5: add r8,rax
0xdad8: cmp dword ptr [r8],0x5
0xdadc: jne 0xe596
0xdae2: mov eax,dword ptr [rbp-0x3e0]
0xdae8: mov edx,dword ptr [r8+0x10]
0xdaec: mov dword ptr [rbp+rax*4-0x3b8],edx
0xdaf3: lea eax,[rax+0x1]
0xdaf6: mov dword ptr [rbp-0x3e0],eax
0xdafc: mov rax,r14
0xdaff: xor edx,edx
0xdb01: add rax,0x2
0xdb05: jb 0xe76c
0xdb0b: cmp r12,rax
0xdb0e: jae 0xdb5b
0xdb10: test r12,r12
0xdb13: jne 0xe338
0xdb19: cmp rax,0xc
0xdb1d: ja 0xe350
0xdb23: mov r12d,0xc
0xdb29: cmp r15,qword ptr [rbp-0x3e8]
0xdb30: sete dl
0xdb33: test r15,r15
0xdb36: je 0xe380
0xdb3c: test dl,dl
0xdb3e: jne 0xe380
0xdb44: mov rsi,r12
0xdb47: mov rdi,r15
0xdb4a: call 0x2a20
0xdb4f: test rax,rax
0xdb52: je 0xd7d5
0xdb58: mov r15,rax
0xdb5b: mov byte ptr [r15+r14],0x0
0xdb60: call 0x2750
0xdb65: mov qword ptr [rbp-0x3c8],rax
0xdb6c: mov eax,dword ptr [rax]
0xdb6e: mov qword ptr [rbp-0x3f8],rbx
0xdb75: mov dword ptr [rbp-0x424],eax
0xdb7b: nop dword ptr [rax+rax]
0xdb80: mov rax,qword ptr [rbp-0x3c8]
0xdb87: mov rbx,r12
0xdb8a: mov r10d,0x7fffffff
0xdb90: sub rbx,r14
0xdb93: mov dword ptr [rbp-0x3bc],0xffffffff
0xdb9d: cmp rbx,0x7fffffff
0xdba4: mov dword ptr [rax],0x0
0xdbaa: mov eax,dword ptr [rbp-0x3d0]
0xdbb0: cmovbe r10,rbx
0xdbb4: cmp eax,0x11
0xdbb7: ja 0xe596
0xdbbd: lea rsi,[rip+0x43ec]
0xdbc4: movsxd rax,dword ptr [rsi+rax*4]
0xdbc8: add rax,rsi
0xdbcb: jmp rax
0xe0d8: cmp rax,-0x1
0xe0dc: jne 0xe596
0xe0e2: mov rax,r14
0xe0e5: add rax,0x1
0xe0e9: mov rbx,rax
0xe0ec: jae 0xe178
0xe0f2: cmp r12,-0x1
0xe0f6: jne 0xd7d5
0xe0fc: mov rbx,r12
0xe0ff: mov byte ptr [r15+r14],0x25
0xe104: mov r8,qword ptr [r13+0x8]
0xe108: add r13,0x58
0xe10c: mov rcx,qword ptr [r13]
0xe110: add qword ptr [rbp-0x400],0x1
0xe118: cmp rcx,r8
0xe11b: jne 0xd7b9
0xe121: mov r14,rbx
0xe124: jmp 0xd923
0xe138: call 0x2750
0xe13d: mov qword ptr [rbp-0x3c8],rax
0xe144: jmp 0xd807
0xe150: mov edx,edi
0xe152: sub edx,0x12
0xe155: cmp edx,0x4
0xe158: ja 0xe596
0xe15e: lea rdi,[rip+0x3e93]
0xe165: mov rax,qword ptr [rax+0x10]
0xe169: movsxd rdx,dword ptr [rdi+rdx*4]
0xe16d: add rdx,rdi
0xe170: jmp rdx
0xe178: cmp r12,rax
0xe17b: jae 0xe0ff
0xe17d: test r12,r12
0xe180: jne 0xe550
0xe186: cmp rax,0xc
0xe18a: ja 0xe562
0xe190: mov r12d,0xc
0xe196: cmp r15,qword ptr [rbp-0x3e8]
0xe19d: sete dl
0xe1a0: test r15,r15
0xe1a3: je 0xe410
0xe1a9: test dl,dl
0xe1ab: jne 0xe410
0xe1b1: mov rsi,r12
0xe1b4: mov rdi,r15
0xe1b7: call 0x2a20
0xe1bc: test rax,rax
0xe1bf: je 0xe2bb
0xe1c5: mov r15,rax
0xe1c8: jmp 0xe0ff
0xe1d0: mov dword ptr [rbp-0x3e0],0x0
0xe1da: jmp 0xdac7
0xe1e0: js 0xd7d5
0xe1e6: add r12,r12
0xe1e9: cmp r12,rax
0xe1ec: jae 0xd8c6
0xe1f2: cmp rax,-0x1
0xe1f6: je 0xd7d5
0xe1fc: cmp r15,qword ptr [rbp-0x3e8]
0xe203: mov r12,rax
0xe206: sete dl
0xe209: test r15,r15
0xe20c: jne 0xd8d9
0xe212: nop word ptr [rax+rax]
0xe218: mov rdi,r12
0xe21b: mov qword ptr [rbp-0x3e0],r8
0xe222: mov byte ptr [rbp-0x3d0],dl
0xe228: mov qword ptr [rbp-0x3c8],rcx
0xe22f: call 0x29d0
0xe234: test rax,rax
0xe237: mov r9,rax
0xe23a: mov rcx,qword ptr [rbp-0x3c8]
0xe241: movzx edx,byte ptr [rbp-0x3d0]
0xe248: mov r8,qword ptr [rbp-0x3e0]
0xe24f: je 0xd7d5
0xe255: test rbx,rbx
0xe258: je 0xe460
0xe25e: test dl,dl
0xe260: je 0xe460
0xe266: mov rsi,r15
0xe269: mov rdx,rbx
0xe26c: mov rdi,rax
0xe26f: mov qword ptr [rbp-0x3d0],r8
0xe276: mov qword ptr [rbp-0x3c8],rcx
0xe27d: call 0x2970
0xe282: mov rcx,qword ptr [rbp-0x3c8]
0xe289: mov r15,rax
0xe28c: mov r8,qword ptr [rbp-0x3d0]
0xe293: jmp 0xd914
0xe2a0: mov r14,r12
0xe2a3: jmp 0xd914
0xe2bb: call 0x2750
0xe2c0: mov qword ptr [rbp-0x3c8],rax
0xe2c7: nop word ptr [rax+rax]
0xe2d0: mov rdi,r15
0xe2d3: call 0x2710
0xe2d8: jmp 0xd7f3
0xe338: js 0xd7d5
0xe33e: add r12,r12
0xe341: cmp r12,rax
0xe344: jae 0xdb29
0xe34a: nop word ptr [rax+rax]
0xe350: test rdx,rdx
0xe353: jne 0xd7d5
0xe359: cmp rax,-0x1
0xe35d: je 0xd7d5
0xe363: cmp r15,qword ptr [rbp-0x3e8]
0xe36a: mov r12,rax
0xe36d: sete dl
0xe370: test r15,r15
0xe373: jne 0xdb3c
0xe379: nop dword ptr [rax]
0xe380: mov rdi,r12
0xe383: mov byte ptr [rbp-0x3c8],dl
0xe389: call 0x29d0
0xe38e: test rax,rax
0xe391: mov rcx,rax
0xe394: movzx edx,byte ptr [rbp-0x3c8]
0xe39b: je 0xd7d5
0xe3a1: test r14,r14
0xe3a4: je 0xe540
0xe3aa: test dl,dl
0xe3ac: je 0xe540
0xe3b2: mov rsi,r15
0xe3b5: mov rdx,r14
0xe3b8: mov rdi,rax
0xe3bb: call 0x2970
0xe3c0: mov r15,rax
0xe3c3: jmp 0xdb5b
0xe3d0: mov byte ptr [rbx],0x4c
0xe3d3: add rbx,0x1
0xe3d7: jmp 0xda8b
0xe410: mov rdi,r12
0xe413: mov byte ptr [rbp-0x3c8],dl
0xe419: call 0x29d0
0xe41e: test rax,rax
0xe421: mov rcx,rax
0xe424: movzx edx,byte ptr [rbp-0x3c8]
0xe42b: je 0xd7d5
0xe431: test r14,r14
0xe434: je 0xe574
0xe43a: test dl,dl
0xe43c: je 0xe574
0xe442: mov rsi,r15
0xe445: mov rdx,r14
0xe448: mov rdi,rax
0xe44b: call 0x2970
0xe450: mov r15,rax
0xe453: jmp 0xe0ff
0xe460: mov r15,r9
0xe463: jmp 0xd914
0xe538: xor r15d,r15d
0xe53b: jmp 0xd84f
0xe540: mov r15,rcx
0xe543: jmp 0xdb5b
0xe550: js 0xd7d5
0xe556: add r12,r12
0xe559: cmp r12,rax
0xe55c: jae 0xe196
0xe562: cmp rax,-0x1
0xe566: je 0xd7d5
0xe56c: mov r12,rax
0xe56f: jmp 0xe196
0xe574: mov r15,rcx
0xe577: jmp 0xe0ff
0xe596: call 0x2740
0xe59b: nop dword ptr [rax+rax]
0xe5a0: mov rax,qword ptr [rbp-0x408]
0xe5a7: mov rdi,qword ptr [rbp-0x2b8]
0xe5ae: add rax,0x20
0xe5b2: cmp rdi,rax
0xe5b5: je 0xe5bc
0xe5b7: call 0x2710
0xe5bc: mov rax,qword ptr [rbp-0x410]
0xe5c3: mov rdi,qword ptr [rbp-0x3a8]
0xe5ca: add rax,0x10
0xe5ce: cmp rdi,rax
0xe5d1: je 0xe5d8
0xe5d3: call 0x2710
0xe5d8: call 0x2750
0xe5dd: xor r15d,r15d
0xe5e0: mov dword ptr [rax],0x16
0xe5e6: jmp 0xd84f
0xe5eb: mov rbx,r14
0xe5ee: xor eax,eax
0xe5f0: add rbx,0x1
0xe5f4: jb 0xe700
0xe5fa: cmp r12,rbx
0xe5fd: jae 0xe64c
0xe5ff: test r12,r12
0xe602: jne 0xe739
0xe608: cmp rbx,0xc
0xe60c: ja 0xe71e
0xe612: mov r12d,0xc
0xe618: cmp r15,qword ptr [rbp-0x3e8]
0xe61f: sete r13b
0xe623: test r15,r15
0xe626: je 0xe6cc
0xe62c: test r13b,r13b
0xe62f: jne 0xe6cc
0xe635: mov rsi,r12
0xe638: mov rdi,r15
0xe63b: call 0x2a20
0xe640: test rax,rax
0xe643: je 0xe2bb
0xe649: mov r15,rax
0xe64c: cmp r15,qword ptr [rbp-0x3e8]
0xe653: mov byte ptr [r15+r14],0x0
0xe658: je 0xe671
0xe65a: cmp r12,rbx
0xe65d: jbe 0xe671
0xe65f: mov rdi,r15
0xe662: mov rsi,rbx
0xe665: call 0x2a20
0xe66a: test rax,rax
0xe66d: cmovne r15,rax
0xe671: mov rax,qword ptr [rbp-0x420]
0xe678: test rax,rax
0xe67b: je 0xe685
0xe67d: mov rdi,rax
0xe680: call 0x2710
0xe685: mov rax,qword ptr [rbp-0x408]
0xe68c: mov rdi,qword ptr [rbp-0x2b8]
0xe693: add rax,0x20
0xe697: cmp rdi,rax
0xe69a: je 0xe6a1
0xe69c: call 0x2710
0xe6a1: mov rax,qword ptr [rbp-0x410]
0xe6a8: mov rdi,qword ptr [rbp-0x3a8]
0xe6af: add rax,0x10
0xe6b3: cmp rdi,rax
0xe6b6: je 0xe6bd
0xe6b8: call 0x2710
0xe6bd: mov rax,qword ptr [rbp-0x418]
0xe6c4: mov qword ptr [rax],r14
0xe6c7: jmp 0xd84f
0xe6cc: mov rdi,r12
0xe6cf: call 0x29d0
0xe6d4: test rax,rax
0xe6d7: mov rcx,rax
0xe6da: je 0xd7d5
0xe6e0: test r14,r14
0xe6e3: je 0xe750
0xe6e5: test r13b,r13b
0xe6e8: je 0xe750
0xe6ea: mov rsi,r15
0xe6ed: mov rdx,r14
0xe6f0: mov rdi,rax
0xe6f3: call 0x2970
0xe6f8: mov r15,rax
0xe6fb: jmp 0xe64c
0xe700: cmp r12,-0x1
0xe704: mov eax,0x1
0xe709: je 0xe64c
0xe70f: test r12,r12
0xe712: je 0xd7d5
0xe718: js 0xd7d5
0xe71e: test rax,rax
0xe721: jne 0xd7d5
0xe727: cmp rbx,-0x1
0xe72b: je 0xd7d5
0xe731: mov r12,rbx
0xe734: jmp 0xe618
0xe739: js 0xd7d5
0xe73f: add r12,r12
0xe742: cmp r12,rbx
0xe745: jae 0xe618
0xe74b: jmp 0xe71e
0xe750: mov r15,rcx
0xe753: jmp 0xe64c
0xe767: call 0x2830
0xe76c: cmp r12,-0x1
0xe770: mov edx,0x1
0xe775: je 0xdb5b
0xe77b: test r12,r12
0xe77e: je 0xd7d5
0xe784: jns 0xe350
0xe78a: jmp 0xd7d5
0xe790: cmp qword ptr [rsi],0x0
0xe794: mov rax,qword ptr [rsi+0x8]
0xe798: je 0xe7fd
0xe79a: lea r8,[rip+0x387f]
0xe7a1: lea r10,[rip+0x38d8]
0xe7a8: lea r9,[rip+0x385d]
0xe7af: xor ecx,ecx
0xe7b1: nop dword ptr [rax]
0xe7b8: cmp dword ptr [rax],0x16
0xe7bb: ja 0xe800
0xe7bd: mov edx,dword ptr [rax]
0xe7bf: movsxd rdx,dword ptr [r8+rdx*4]
0xe7c3: add rdx,r8
0xe7c6: jmp rdx
0xe7fd: xor eax,eax
0xe7ff: ret 
0xe800: mov eax,0xffffffff
0xe805: ret 
0xe990: push r15
0xe992: push r14
0xe994: lea rcx,[rsi+0x20]
0xe998: push r13
0xe99a: push r12
0xe99c: lea rax,[rdx+0x10]
0xe9a0: push rbp
0xe9a1: push rbx
0xe9a2: mov r14,rsi
0xe9a5: mov r15,rdx
0xe9a8: xor ebx,ebx
0xe9aa: mov r9d,0x7
0xe9b0: sub rsp,0x58
0xe9b4: mov r10d,0x7
0xe9ba: mov qword ptr [rsi],0x0
0xe9c1: mov qword ptr [rsi+0x8],rcx
0xe9c5: mov qword ptr [rsp+0x28],rcx
0xe9ca: mov r8,-0x1
0xe9d1: mov qword ptr [rdx],0x0
0xe9d8: mov qword ptr [rsp+0x8],rax
0xe9dd: mov qword ptr [rdx+0x8],rax
0xe9e1: mov qword ptr [rsp+0x18],0x0
0xe9ea: mov qword ptr [rsp+0x10],0x0
0xe9f3: mov qword ptr [rsp+0x20],0x0
0xe9fc: jmp 0xea0b
0xea00: cmp al,0x25
0xea02: lea rbp,[rdi+0x1]
0xea06: je 0xea48
0xea08: mov rdi,rbp
0xea0b: movzx eax,byte ptr [rdi]
0xea0e: test al,al
0xea10: jne 0xea00
0xea12: lea rax,[rbx+rbx*4]
0xea16: lea rax,[rbx+rax*2]
0xea1a: mov qword ptr [rcx+rax*8],rdi
0xea1e: mov rax,qword ptr [rsp+0x10]
0xea23: mov qword ptr [r14+0x10],rax
0xea27: mov rax,qword ptr [rsp+0x18]
0xea2c: mov qword ptr [r14+0x18],rax
0xea30: xor eax,eax
0xea32: add rsp,0x58
0xea36: pop rbx
0xea37: pop rbp
0xea38: pop r12
0xea3a: pop r13
0xea3c: pop r14
0xea3e: pop r15
0xea40: ret 
0xea48: lea rax,[rbx+rbx*4]
0xea4c: mov r13,r8
0xea4f: lea rax,[rbx+rax*2]
0xea53: lea r12,[rcx+rax*8]
0xea57: mov qword ptr [r12],rdi
0xea5b: mov dword ptr [r12+0x10],0x0
0xea64: mov qword ptr [r12+0x18],0x0
0xea6d: mov qword ptr [r12+0x20],0x0
0xea76: mov qword ptr [r12+0x28],r8
0xea7b: mov qword ptr [r12+0x30],0x0
0xea84: mov qword ptr [r12+0x38],0x0
0xea8d: mov qword ptr [r12+0x40],r8
0xea92: mov qword ptr [r12+0x50],r8
0xea97: movzx ebx,byte ptr [rdi+0x1]
0xea9b: lea eax,[rbx-0x30]
0xea9e: cmp al,0x9
0xeaa0: ja 0xeade
0xeaa2: jmp 0xeeda
0xeab0: cmp bl,0x2d
0xeab3: je 0xeaf8
0xeab5: cmp bl,0x2b
0xeab8: je 0xeb00
0xeaba: cmp bl,0x20
0xeabd: je 0xeb10
0xeabf: cmp bl,0x23
0xeac2: je 0xeb20
0xeac4: cmp bl,0x30
0xeac7: je 0xeb30
0xeac9: cmp bl,0x49
0xeacc: jne 0xeb40
0xeace: or dword ptr [r12+0x10],0x40
0xead4: nop dword ptr [rax]
0xead8: movzx ebx,byte ptr [rax]
0xeadb: mov rbp,rax
0xeade: lea rax,[rbp+0x1]
0xeae2: cmp bl,0x27
0xeae5: mov rdx,rax
0xeae8: jne 0xeab0
0xeaea: or dword ptr [r12+0x10],0x1
0xeaf0: jmp 0xead8
0xeaf8: or dword ptr [r12+0x10],0x2
0xeafe: jmp 0xead8
0xeb00: or dword ptr [r12+0x10],0x4
0xeb06: jmp 0xead8
0xeb10: or dword ptr [r12+0x10],0x8
0xeb16: jmp 0xead8
0xeb20: or dword ptr [r12+0x10],0x10
0xeb26: jmp 0xead8
0xeb30: or dword ptr [r12+0x10],0x20
0xeb36: jmp 0xead8
0xeb40: cmp bl,0x2a
0xeb43: je 0xecf9
0xeb49: lea ecx,[rbx-0x30]
0xeb4c: cmp cl,0x9
0xeb4f: jbe 0xef67
0xeb55: cmp bl,0x2e
0xeb58: je 0xee2f
0xeb5e: xor eax,eax
0xeb60: mov esi,0x1
0xeb65: jmp 0xeb97
0xeb70: cmp bl,0x4c
0xeb73: je 0xebb0
0xeb75: cmp bl,0x6c
0xeb78: je 0xeb90
0xeb7a: cmp bl,0x6a
0xeb7d: je 0xeb90
0xeb7f: mov edx,ebx
0xeb81: and edx,-0x21
0xeb84: cmp dl,0x5a
0xeb87: je 0xeb90
0xeb89: cmp bl,0x74
0xeb8c: jne 0xebb8
0xeb8e: nop 
0xeb90: add eax,0x8
0xeb93: movzx ebx,byte ptr [rbp]
0xeb97: add rbp,0x1
0xeb9b: cmp bl,0x68
0xeb9e: jne 0xeb70
0xeba0: mov ecx,eax
0xeba2: mov edx,esi
0xeba4: and ecx,0x1
0xeba7: shl edx,cl
0xeba9: or eax,edx
0xebab: jmp 0xeb93
0xebb0: or eax,0x4
0xebb3: jmp 0xeb93
0xebb8: lea edx,[rbx-0x25]
0xebbb: cmp dl,0x53
0xebbe: ja 0xf1db
0xebc4: lea rcx,[rip+0x34d1]
0xebcb: movzx edx,dl
0xebce: movsxd rdx,dword ptr [rcx+rdx*4]
0xebd2: add rdx,rcx
0xebd5: jmp rdx
0xecf9: mov rsi,qword ptr [rsp+0x10]
0xecfe: mov ecx,0x1
0xed03: mov qword ptr [r12+0x18],rbp
0xed08: mov qword ptr [r12+0x20],rax
0xed0d: test rsi,rsi
0xed10: cmovne rcx,rsi
0xed14: mov qword ptr [rsp+0x10],rcx
0xed19: movzx ecx,byte ptr [rbp+0x1]
0xed1d: lea esi,[rcx-0x30]
0xed20: cmp sil,0x9
0xed24: jbe 0xf005
0xed2a: mov rsi,qword ptr [rsp+0x20]
0xed2f: cmp rsi,-0x1
0xed33: lea rdx,[rsi+0x1]
0xed37: mov qword ptr [r12+0x28],rsi
0xed3c: je 0xf1db
0xed42: mov rbx,qword ptr [rsp+0x20]
0xed47: mov rbp,rax
0xed4a: mov qword ptr [rsp+0x20],rdx
0xed4f: cmp r9,rbx
0xed52: mov rcx,qword ptr [r15+0x8]
0xed56: ja 0xf3d2
0xed5c: add r9,r9
0xed5f: lea rax,[rbx+0x1]
0xed63: cmp r9,rbx
0xed66: cmovbe r9,rax
0xed6a: movabsq rax,0x7ffffffffffffff
0xed74: cmp r9,rax
0xed77: ja 0xf61b
0xed7d: mov rsi,r9
0xed80: mov qword ptr [rsp+0x40],r9
0xed85: mov qword ptr [rsp+0x38],r10
0xed8a: shl rsi,0x5
0xed8e: cmp qword ptr [rsp+0x8],rcx
0xed93: mov qword ptr [rsp+0x30],r8
0xed98: je 0xf4b1
0xed9e: mov rdi,rcx
0xeda1: call 0x2a20
0xeda6: mov rdx,qword ptr [r15+0x8]
0xedaa: mov r8,qword ptr [rsp+0x30]
0xedaf: mov rcx,rax
0xedb2: mov r10,qword ptr [rsp+0x38]
0xedb7: mov r9,qword ptr [rsp+0x40]
0xedbc: test rcx,rcx
0xedbf: je 0xf677
0xedc5: cmp qword ptr [rsp+0x8],rdx
0xedca: mov rax,qword ptr [r15]
0xedcd: je 0xf58b
0xedd3: mov qword ptr [r15+0x8],rcx
0xedd7: mov rdx,rax
0xedda: shl rdx,0x5
0xedde: add rdx,rcx
0xede1: cmp rax,rbx
0xede4: ja 0xee06
0xede6: nop word ptr cs:[rax+rax]
0xedf0: add rax,0x1
0xedf4: mov dword ptr [rdx],0x0
0xedfa: add rdx,0x20
0xedfe: cmp rax,rbx
0xee01: jbe 0xedf0
0xee03: mov qword ptr [r15],rax
0xee06: shl rbx,0x5
0xee0a: lea rax,[rcx+rbx]
0xee0e: mov edx,dword ptr [rax]
0xee10: test edx,edx
0xee12: jne 0xf2eb
0xee18: mov dword ptr [rax],0x5
0xee1e: movzx ebx,byte ptr [rbp]
0xee22: lea rdx,[rbp+0x1]
0xee26: cmp bl,0x2e
0xee29: jne 0xeb5e
0xee2f: cmp byte ptr [rbp+0x1],0x2a
0xee33: mov qword ptr [r12+0x30],rbp
0xee38: jne 0xefbe
0xee3e: mov rsi,qword ptr [rsp+0x18]
0xee43: lea r11,[rbp+0x2]
0xee47: mov eax,0x2
0xee4c: mov qword ptr [r12+0x38],r11
0xee51: cmp rsi,0x2
0xee55: cmovae rax,rsi
0xee59: mov qword ptr [rsp+0x18],rax
0xee5e: movsx eax,byte ptr [rbp+0x2]
0xee62: lea edx,[rax-0x30]
0xee65: cmp dl,0x9
0xee68: jbe 0xf4fc
0xee6e: mov rbx,qword ptr [r12+0x40]
0xee73: cmp rbx,-0x1
0xee77: je 0xf4d5
0xee7d: cmp r9,rbx
0xee80: mov rcx,qword ptr [r15+0x8]
0xee84: jbe 0xf3ef
0xee8a: mov rax,qword ptr [r15]
0xee8d: mov rdx,rax
0xee90: shl rdx,0x5
0xee94: add rdx,rcx
0xee97: cmp rax,rbx
0xee9a: ja 0xeeb6
0xee9c: nop dword ptr [rax]
0xeea0: add rax,0x1
0xeea4: mov dword ptr [rdx],0x0
0xeeaa: add rdx,0x20
0xeeae: cmp rax,rbx
0xeeb1: jbe 0xeea0
0xeeb3: mov qword ptr [r15],rax
0xeeb6: shl rbx,0x5
0xeeba: lea rax,[rcx+rbx]
0xeebe: mov edx,dword ptr [rax]
0xeec0: test edx,edx
0xeec2: jne 0xf3da
0xeec8: mov dword ptr [rax],0x5
0xeece: mov rbp,r11
0xeed1: movzx ebx,byte ptr [r11]
0xeed5: jmp 0xeb5e
0xeeda: mov rax,rbp
0xeedd: nop dword ptr [rax]
0xeee0: add rax,0x1
0xeee4: movzx edx,byte ptr [rax]
0xeee7: lea ecx,[rdx-0x30]
0xeeea: cmp cl,0x9
0xeeed: jbe 0xeee0
0xeeef: cmp dl,0x24
0xeef2: mov r13,r8
0xeef5: jne 0xeade
0xeefb: xor edx,edx
0xeefd: movsx eax,bl
0xef00: movabsq rdi,0x1999999999999999
0xef0a: mov rsi,r8
0xef0d: sub eax,0x30
0xef10: cmp rdx,rdi
0xef13: cltq 
0xef15: ja 0xef1e
0xef17: lea rsi,[rdx+rdx*4]
0xef1b: add rsi,rsi
0xef1e: mov rcx,rbp
0xef21: add rax,rsi
0xef24: movzx ebx,byte ptr [rbp+0x1]
0xef28: setb sil
0xef2c: add rbp,0x1
0xef30: mov rdx,rax
0xef33: movzx esi,sil
0xef37: test rsi,rsi
0xef3a: lea edi,[rbx-0x30]
0xef3d: jne 0xf2ce
0xef43: cmp dil,0x9
0xef47: jbe 0xeefd
0xef49: mov r13,rax
0xef4c: sub r13,0x1
0xef50: cmp r13,-0x3
0xef54: ja 0xf1db
0xef5a: lea rbp,[rcx+0x2]
0xef5e: movzx ebx,byte ptr [rcx+0x2]
0xef62: jmp 0xeade
0xef67: mov qword ptr [r12+0x18],rbp
0xef6c: movzx edi,byte ptr [rbp]
0xef70: mov rsi,rbp
0xef73: lea ecx,[rdi-0x30]
0xef76: cmp cl,0x9
0xef79: jbe 0xef87
0xef7b: jmp 0xefb0
0xef80: mov rbp,rax
0xef83: add rax,0x1
0xef87: movzx edi,byte ptr [rax]
0xef8a: lea edx,[rdi-0x30]
0xef8d: cmp dl,0x9
0xef90: jbe 0xef80
0xef92: mov rcx,rax
0xef95: lea rdx,[rbp+0x2]
0xef99: mov rbp,rax
0xef9c: sub rcx,rsi
0xef9f: mov rsi,qword ptr [rsp+0x10]
0xefa4: cmp rsi,rcx
0xefa7: cmovae rcx,rsi
0xefab: mov qword ptr [rsp+0x10],rcx
0xefb0: mov qword ptr [r12+0x20],rbp
0xefb5: movzx ebx,byte ptr [rbp]
0xefb9: jmp 0xeb55
0xefbe: movzx eax,byte ptr [rbp+0x1]
0xefc2: sub eax,0x30
0xefc5: cmp al,0x9
0xefc7: ja 0xefde
0xefc9: nop dword ptr [rax]
0xefd0: add rdx,0x1
0xefd4: movzx eax,byte ptr [rdx]
0xefd7: sub eax,0x30
0xefda: cmp al,0x9
0xefdc: jbe 0xefd0
0xefde: mov rsi,qword ptr [rsp+0x18]
0xefe3: mov rax,rdx
0xefe6: mov qword ptr [r12+0x38],rdx
0xefeb: sub rax,rbp
0xefee: movzx ebx,byte ptr [rdx]
0xeff1: mov rbp,rdx
0xeff4: cmp rsi,rax
0xeff7: cmovae rax,rsi
0xeffb: mov qword ptr [rsp+0x18],rax
0xf000: jmp 0xeb5e
0xf005: mov rsi,rax
0xf008: add rsi,0x1
0xf00c: movzx edi,byte ptr [rsi]
0xf00f: lea r11d,[rdi-0x30]
0xf013: cmp r11b,0x9
0xf017: jbe 0xf008
0xf019: cmp dil,0x24
0xf01d: jne 0xed2a
0xf023: xor esi,esi
0xf025: movsx eax,cl
0xf028: movabsq rdi,0x1999999999999999
0xf032: mov rcx,r8
0xf035: sub eax,0x30
0xf038: cmp rsi,rdi
0xf03b: cltq 
0xf03d: ja 0xf046
0xf03f: lea rcx,[rsi+rsi*4]
0xf043: add rcx,rcx
0xf046: mov rbp,rdx
0xf049: xor r11d,r11d
0xf04c: add rax,rcx
0xf04f: movzx ecx,byte ptr [rdx+0x1]
0xf053: setb r11b
0xf057: add rdx,0x1
0xf05b: mov rsi,rax
0xf05e: test r11,r11
0xf061: lea edi,[rcx-0x30]
0xf064: jne 0xf56e
0xf06a: cmp dil,0x9
0xf06e: jbe 0xf025
0xf070: lea rbx,[rax-0x1]
0xf074: cmp rbx,-0x3
0xf078: ja 0xf1db
0xf07e: mov qword ptr [r12+0x28],rbx
0xf083: add rbp,0x2
0xf087: jmp 0xed4f
0xf1db: mov rcx,qword ptr [r15+0x8]
0xf1df: cmp qword ptr [rsp+0x8],rcx
0xf1e4: je 0xf1ee
0xf1e6: mov rdi,rcx
0xf1e9: call 0x2710
0xf1ee: mov rdi,qword ptr [r14+0x8]
0xf1f2: cmp qword ptr [rsp+0x28],rdi
0xf1f7: je 0xf1fe
0xf1f9: call 0x2710
0xf1fe: call 0x2750
0xf203: mov dword ptr [rax],0x16
0xf209: mov eax,0xffffffff
0xf20e: jmp 0xea32
0xf2ce: cmp dil,0x9
0xf2d2: ja 0xf1db
0xf2d8: movsx eax,bl
0xf2db: mov rsi,r8
0xf2de: mov rcx,rbp
0xf2e1: sub eax,0x30
0xf2e4: cltq 
0xf2e6: jmp 0xef21
0xf2eb: cmp edx,0x5
0xf2ee: jne 0xf1df
0xf2f4: movzx ebx,byte ptr [rbp]
0xf2f8: lea rdx,[rbp+0x1]
0xf2fc: jmp 0xeb55
0xf3d2: mov rax,qword ptr [r15]
0xf3d5: jmp 0xedd7
0xf3da: cmp edx,0x5
0xf3dd: jne 0xf1df
0xf3e3: movzx ebx,byte ptr [r11]
0xf3e7: mov rbp,r11
0xf3ea: jmp 0xeb5e
0xf3ef: add r9,r9
0xf3f2: lea rax,[rbx+0x1]
0xf3f6: cmp r9,rbx
0xf3f9: cmovbe r9,rax
0xf3fd: movabsq rax,0x7ffffffffffffff
0xf407: cmp r9,rax
0xf40a: ja 0xf61b
0xf410: mov rsi,r9
0xf413: mov qword ptr [rsp+0x48],r9
0xf418: mov qword ptr [rsp+0x40],r10
0xf41d: shl rsi,0x5
0xf421: cmp qword ptr [rsp+0x8],rcx
0xf426: mov qword ptr [rsp+0x38],r8
0xf42b: mov qword ptr [rsp+0x30],r11
0xf430: je 0xf5ee
0xf436: mov rdi,rcx
0xf439: call 0x2a20
0xf43e: mov rdx,qword ptr [r15+0x8]
0xf442: mov r11,qword ptr [rsp+0x30]
0xf447: mov rcx,rax
0xf44a: mov r8,qword ptr [rsp+0x38]
0xf44f: mov r10,qword ptr [rsp+0x40]
0xf454: mov r9,qword ptr [rsp+0x48]
0xf459: test rcx,rcx
0xf45c: je 0xf677
0xf462: cmp qword ptr [rsp+0x8],rdx
0xf467: mov rax,qword ptr [r15]
0xf46a: je 0xf630
0xf470: mov qword ptr [r15+0x8],rcx
0xf474: jmp 0xee8d
0xf484: mov rdi,rcx
0xf487: call 0x2710
0xf48c: mov rdi,qword ptr [r14+0x8]
0xf490: cmp qword ptr [rsp+0x28],rdi
0xf495: je 0xf49c
0xf497: call 0x2710
0xf49c: call 0x2750
0xf4a1: mov dword ptr [rax],0xc
0xf4a7: mov eax,0xffffffff
0xf4ac: jmp 0xea32
0xf4b1: mov rdi,rsi
0xf4b4: call 0x29d0
0xf4b9: mov rdx,qword ptr [rsp+0x8]
0xf4be: mov rcx,rax
0xf4c1: mov r9,qword ptr [rsp+0x40]
0xf4c6: mov r10,qword ptr [rsp+0x38]
0xf4cb: mov r8,qword ptr [rsp+0x30]
0xf4d0: jmp 0xedbc
0xf4d5: mov rsi,qword ptr [rsp+0x20]
0xf4da: cmp rsi,-0x1
0xf4de: lea rax,[rsi+0x1]
0xf4e2: mov qword ptr [r12+0x40],rsi
0xf4e7: je 0xf1db
0xf4ed: mov rbx,qword ptr [rsp+0x20]
0xf4f2: mov qword ptr [rsp+0x20],rax
0xf4f7: jmp 0xee7d
0xf4fc: mov rdx,r11
0xf4ff: add rdx,0x1
0xf503: movzx ecx,byte ptr [rdx]
0xf506: lea esi,[rcx-0x30]
0xf509: cmp sil,0x9
0xf50d: jbe 0xf4ff
0xf50f: cmp cl,0x24
0xf512: jne 0xee6e
0xf518: xor ecx,ecx
0xf51a: movabsq rsi,0x1999999999999999
0xf524: sub eax,0x30
0xf527: mov rdx,r8
0xf52a: cmp rcx,rsi
0xf52d: cltq 
0xf52f: ja 0xf538
0xf531: lea rdx,[rcx+rcx*4]
0xf535: add rdx,rdx
0xf538: mov rsi,r11
0xf53b: xor ebx,ebx
0xf53d: add rdx,rax
0xf540: movsx eax,byte ptr [r11+0x1]
0xf545: setb bl
0xf548: add r11,0x1
0xf54c: mov rcx,rdx
0xf54f: test rbx,rbx
0xf552: lea edi,[rax-0x30]
0xf555: je 0xf5c8
0xf557: cmp dil,0x9
0xf55b: ja 0xf1db
0xf561: sub eax,0x30
0xf564: mov rdx,r8
0xf567: mov rsi,r11
0xf56a: cltq 
0xf56c: jmp 0xf53b
0xf56e: cmp dil,0x9
0xf572: ja 0xf1db
0xf578: movsx eax,cl
0xf57b: mov rbp,rdx
0xf57e: mov rcx,r8
0xf581: sub eax,0x30
0xf584: cltq 
0xf586: jmp 0xf049
0xf58b: mov rsi,qword ptr [rsp+0x8]
0xf590: shl rax,0x5
0xf594: mov rdi,rcx
0xf597: mov rdx,rax
0xf59a: mov qword ptr [rsp+0x40],r9
0xf59f: mov qword ptr [rsp+0x38],r10
0xf5a4: mov qword ptr [rsp+0x30],r8
0xf5a9: call 0x2970
0xf5ae: mov r9,qword ptr [rsp+0x40]
0xf5b3: mov rcx,rax
0xf5b6: mov r10,qword ptr [rsp+0x38]
0xf5bb: mov rax,qword ptr [r15]
0xf5be: mov r8,qword ptr [rsp+0x30]
0xf5c3: jmp 0xedd3
0xf5c8: cmp dil,0x9
0xf5cc: jbe 0xf51a
0xf5d2: lea rbx,[rdx-0x1]
0xf5d6: cmp rbx,-0x3
0xf5da: ja 0xf1db
0xf5e0: mov qword ptr [r12+0x40],rbx
0xf5e5: lea r11,[rsi+0x2]
0xf5e9: jmp 0xee7d
0xf5ee: mov rdi,rsi
0xf5f1: call 0x29d0
0xf5f6: mov rdx,qword ptr [rsp+0x8]
0xf5fb: mov rcx,rax
0xf5fe: mov r9,qword ptr [rsp+0x48]
0xf603: mov r10,qword ptr [rsp+0x40]
0xf608: mov r8,qword ptr [rsp+0x38]
0xf60d: mov r11,qword ptr [rsp+0x30]
0xf612: jmp 0xf459
0xf61b: cmp qword ptr [rsp+0x8],rcx
0xf620: jne 0xf484
0xf626: jmp 0xf48c
0xf630: mov rsi,qword ptr [rsp+0x8]
0xf635: shl rax,0x5
0xf639: mov rdi,rcx
0xf63c: mov rdx,rax
0xf63f: mov qword ptr [rsp+0x48],r9
0xf644: mov qword ptr [rsp+0x40],r10
0xf649: mov qword ptr [rsp+0x38],r8
0xf64e: mov qword ptr [rsp+0x30],r11
0xf653: call 0x2970
0xf658: mov r9,qword ptr [rsp+0x48]
0xf65d: mov rcx,rax
0xf660: mov r10,qword ptr [rsp+0x40]
0xf665: mov rax,qword ptr [r15]
0xf668: mov r8,qword ptr [rsp+0x38]
0xf66d: mov r11,qword ptr [rsp+0x30]
0xf672: jmp 0xf470
0xf677: mov rcx,rdx
0xf67a: jmp 0xf61b
0xf680: push r15
0xf682: push r14
0xf684: mov r15,rdx
0xf687: push r13
0xf689: push r12
0xf68b: lea r12,[rip+0x204a5e]
0xf692: push rbp
0xf693: lea rbp,[rip+0x204a5e]
0xf69a: push rbx
0xf69b: mov r13d,edi
0xf69e: mov r14,rsi
0xf6a1: sub rbp,r12
0xf6a4: sub rsp,0x8
0xf6a8: sar rbp,0x3
0xf6ac: call 0x26b0
0xf6b1: test rbp,rbp
0xf6b4: je 0xf6d6
0xf6b6: xor ebx,ebx
0xf6b8: nop dword ptr [rax+rax]
0xf6c0: mov rdx,r15
0xf6c3: mov rsi,r14
0xf6c6: mov edi,r13d
0xf6c9: call qword ptr [r12+rbx*8]
0xf6cd: add rbx,0x1
0xf6d1: cmp rbp,rbx
0xf6d4: jne 0xf6c0
0xf6d6: add rsp,0x8
0xf6da: pop rbx
0xf6db: pop rbp
0xf6dc: pop r12
0xf6de: pop r13
0xf6e0: pop r14
0xf6e2: pop r15
0xf6e4: ret 
0xf6f0: rep ret 
