0x12f0: sub rsp,0x8
0x12f4: mov rax,qword ptr [rip+0x205ce5]
0x12fb: test rax,rax
0x12fe: je 0x1302
0x1300: call rax
0x1302: add rsp,0x8
0x1306: ret 
0x1316: jmp qword ptr [rip+0x205b3c]
0x1320: jmp qword ptr [rip+0x205b3a]
0x1370: jmp qword ptr [rip+0x205b12]
0x1380: jmp qword ptr [rip+0x205b0a]
0x13b0: jmp qword ptr [rip+0x205af2]
0x13f0: jmp qword ptr [rip+0x205ad2]
0x1410: jmp qword ptr [rip+0x205ac2]
0x1430: jmp qword ptr [rip+0x205ab2]
0x1450: jmp qword ptr [rip+0x205aa2]
0x1480: jmp qword ptr [rip+0x205a8a]
0x14a0: jmp qword ptr [rip+0x205a7a]
0x14b0: jmp qword ptr [rip+0x205a72]
0x14c0: jmp qword ptr [rip+0x205a6a]
0x14e0: jmp qword ptr [rip+0x205a5a]
0x14f0: jmp qword ptr [rip+0x205a52]
0x1500: jmp qword ptr [rip+0x205a4a]
0x1510: jmp qword ptr [rip+0x205a42]
0x1580: jmp qword ptr [rip+0x205a0a]
0x15d0: jmp qword ptr [rip+0x2059e2]
0x15e0: jmp qword ptr [rip+0x2059da]
0x15f0: jmp qword ptr [rip+0x2059d2]
0x1600: jmp qword ptr [rip+0x2059ea]
0x16f9: nop dword ptr [rax]
0x1828: lea rsi,[rip+0x33d5]
0x182f: mov r12,rax
0x1832: mov edx,0x5
0x1837: xor edi,edi
0x1839: call 0x13d0
0x183e: mov esi,r15d
0x1841: mov rdx,rax
0x1844: mov rcx,r12
0x1847: xor edi,edi
0x1849: xor eax,eax
0x184b: xor r15d,r15d
0x184e: call 0x1550
0x1853: jmp 0x17c2
0x1865: lea rsi,[rip+0x369c]
0x186c: mov edx,0x5
0x1871: xor edi,edi
0x1873: mov qword ptr [rsp],rax
0x1877: call 0x13d0
0x187c: mov r15,rax
0x187f: call 0x1340
0x1884: mov rcx,qword ptr [rsp]
0x1888: mov rdx,r15
0x188b: mov esi,dword ptr [rax]
0x188d: xor edi,edi
0x188f: xor eax,eax
0x1891: xor r15d,r15d
0x1894: call 0x1550
0x1899: jmp 0x17b2
0x18d0: lea rsi,[rip+0x334f]
0x18d7: mov edx,0x5
0x18dc: xor edi,edi
0x18de: mov r14,rax
0x18e1: call 0x13d0
0x18e6: mov r12,rax
0x18e9: call 0x1340
0x18ee: mov esi,dword ptr [rax]
0x18f0: mov rcx,r14
0x18f3: mov rdx,r12
0x18f6: xor edi,edi
0x18f8: xor eax,eax
0x18fa: call 0x1550
0x18ff: jmp 0x17c2
0x1911: lea rsi,[rip+0x32fd]
0x1918: mov edx,0x5
0x191d: mov r15,rax
0x1920: xor edi,edi
0x1922: call 0x13d0
0x1927: mov qword ptr [rsp],rax
0x192b: call 0x1340
0x1930: mov rcx,r15
0x1933: mov rdx,qword ptr [rsp]
0x1937: jmp 0x188b
0x19bc: nop dword ptr [rax]
0x19ea: hlt 
0x19eb: nop dword ptr [rax+rax]
0x19f0: lea rdi,[rip+0x205689]
0x19f7: push rbp
0x19f8: lea rax,[rip+0x205681]
0x19ff: cmp rax,rdi
0x1a02: mov rbp,rsp
0x1a05: je 0x1a20
0x1a07: mov rax,qword ptr [rip+0x2055c2]
0x1a0e: test rax,rax
0x1a11: je 0x1a20
0x1a13: pop rbp
0x1a14: jmp rax
0x1a20: pop rbp
0x1a21: ret 
0x1a30: lea rdi,[rip+0x205649]
0x1a37: lea rsi,[rip+0x205642]
0x1a3e: push rbp
0x1a3f: sub rsi,rdi
0x1a42: mov rbp,rsp
0x1a45: sar rsi,0x3
0x1a49: mov rax,rsi
0x1a4c: shr rax,0x3f
0x1a50: add rsi,rax
0x1a53: sar rsi, 1
0x1a56: je 0x1a70
0x1a58: mov rax,qword ptr [rip+0x205589]
0x1a5f: test rax,rax
0x1a62: je 0x1a70
0x1a64: pop rbp
0x1a65: jmp rax
0x1a70: pop rbp
0x1a71: ret 
0x1a91: push rbp
0x1a92: mov rbp,rsp
0x1a95: je 0x1aa3
0x1a97: mov rdi,qword ptr [rip+0x20556a]
0x1a9e: call 0x1600
0x1aa3: call 0x19f0
0x1aa8: mov byte ptr [rip+0x2055f9],0x1
0x1aaf: pop rbp
0x1ab0: ret 
0x1ac0: push rbp
0x1ac1: mov rbp,rsp
0x1ac4: pop rbp
0x1ac5: jmp 0x1a30
0x1e60: mov qword ptr [rip+0x205251],rdi
0x1e67: ret 
0x1e70: mov byte ptr [rip+0x205239],dil
0x1e77: ret 
0x1e80: push rbp
0x1e81: push rbx
0x1e82: sub rsp,0x8
0x1e86: mov rdi,qword ptr [rip+0x2051fb]
0x1e8d: call 0x4820
0x1e92: test eax,eax
0x1e94: je 0x1eac
0x1e96: call 0x1340
0x1e9b: cmp byte ptr [rip+0x20520e],0x0
0x1ea2: mov rbx,rax
0x1ea5: je 0x1ec3
0x1ea7: cmp dword ptr [rax],0x20
0x1eaa: jne 0x1ec3
0x1eac: mov rdi,qword ptr [rip+0x2051ed]
0x1eb3: call 0x4820
0x1eb8: test eax,eax
0x1eba: jne 0x1f02
0x1ebc: add rsp,0x8
0x1ec0: pop rbx
0x1ec1: pop rbp
0x1ec2: ret 
0x1ec3: lea rsi,[rip+0x3067]
0x1eca: xor edi,edi
0x1ecc: mov edx,0x5
0x1ed1: call 0x13d0
0x1ed6: mov rdi,qword ptr [rip+0x2051db]
0x1edd: mov rbp,rax
0x1ee0: test rdi,rdi
0x1ee3: je 0x1f0d
0x1ee5: call 0x3a40
0x1eea: mov esi,dword ptr [rbx]
0x1eec: lea rdx,[rip+0x304a]
0x1ef3: mov rcx,rax
0x1ef6: mov r8,rbp
0x1ef9: xor edi,edi
0x1efb: xor eax,eax
0x1efd: call 0x1550
0x1f02: mov edi,dword ptr [rip+0x205110]
0x1f08: call 0x1370
0x1f0d: mov esi,dword ptr [rbx]
0x1f0f: lea rdx,[rip+0x302b]
0x1f16: mov rcx,rax
0x1f19: xor edi,edi
0x1f1b: xor eax,eax
0x1f1d: call 0x1550
0x1f22: jmp 0x1f02
0x1fcf: nop 
0x1fd0: push rbp
0x1fd1: push rbx
0x1fd2: mov rbp,rdi
0x1fd5: mov ebx,esi
0x1fd7: sub rsp,0x8
0x1fdb: call 0x4900
0x1fe0: movzx edx,byte ptr [rax]
0x1fe3: and edx,-0x21
0x1fe6: cmp dl,0x55
0x1fe9: je 0x2060
0x1feb: cmp dl,0x47
0x1fee: je 0x2010
0x1ff0: lea rax,[rip+0x2fa4]
0x1ff7: lea rdx,[rip+0x2f9f]
0x1ffe: cmp ebx,0x9
0x2001: cmovne rax,rdx
0x2005: add rsp,0x8
0x2009: pop rbx
0x200a: pop rbp
0x200b: ret 
0x2010: movzx edx,byte ptr [rax+0x1]
0x2014: and edx,-0x21
0x2017: cmp dl,0x42
0x201a: jne 0x1ff0
0x201c: cmp byte ptr [rax+0x2],0x31
0x2020: jne 0x1ff0
0x2022: cmp byte ptr [rax+0x3],0x38
0x2026: jne 0x1ff0
0x2028: cmp byte ptr [rax+0x4],0x30
0x202c: jne 0x1ff0
0x202e: cmp byte ptr [rax+0x5],0x33
0x2032: jne 0x1ff0
0x2034: cmp byte ptr [rax+0x6],0x30
0x2038: jne 0x1ff0
0x203a: cmp byte ptr [rax+0x7],0x0
0x203e: jne 0x1ff0
0x2040: cmp byte ptr [rbp],0x60
0x2044: lea rax,[rip+0x2f49]
0x204b: lea rdx,[rip+0x2f46]
0x2052: cmovne rax,rdx
0x2056: add rsp,0x8
0x205a: pop rbx
0x205b: pop rbp
0x205c: ret 
0x2060: movzx edx,byte ptr [rax+0x1]
0x2064: and edx,-0x21
0x2067: cmp dl,0x54
0x206a: jne 0x1ff0
0x206c: movzx edx,byte ptr [rax+0x2]
0x2070: and edx,-0x21
0x2073: cmp dl,0x46
0x2076: jne 0x1ff0
0x207c: cmp byte ptr [rax+0x3],0x2d
0x2080: jne 0x1ff0
0x2086: cmp byte ptr [rax+0x4],0x38
0x208a: jne 0x1ff0
0x2090: cmp byte ptr [rax+0x5],0x0
0x2094: jne 0x1ff0
0x209a: cmp byte ptr [rbp],0x60
0x209e: lea rax,[rip+0x2ee7]
0x20a5: lea rdx,[rip+0x2ee4]
0x20ac: cmovne rax,rdx
0x20b0: add rsp,0x8
0x20b4: pop rbx
0x20b5: pop rbp
0x20b6: ret 
0x2193: xor r11d,r11d
0x2196: mov rax,rbp
0x2199: mov r8d,r12d
0x219c: mov rbp,r11
0x219f: mov r11,rax
0x21a2: nop word ptr [rax+rax]
0x21a8: cmp r11,rbp
0x21ab: setne r12b
0x21af: cmp r11,-0x1
0x21b3: jne 0x21c2
0x21b5: mov rax,qword ptr [rsp+0x10]
0x21ba: cmp byte ptr [rax+rbp],0x0
0x21be: setne r12b
0x21c2: test r12b,r12b
0x21c5: je 0x2820
0x21cb: cmp dword ptr [rsp+0x8],0x2
0x21d0: mov rdi,qword ptr [rsp+0x10]
0x21d5: lea r9,[rdi+rbp]
0x21d9: setne al
0x21dc: and al,byte ptr [rsp+0xd]
0x21e0: mov r10d,eax
0x21e3: je 0x2290
0x21e9: mov rax,qword ptr [rsp+0x18]
0x21ee: test rax,rax
0x21f1: je 0x2620
0x21f7: cmp r11,-0x1
0x21fb: lea rbx,[rbp+rax]
0x2200: jne 0x2230
0x2202: cmp rax,0x1
0x2206: jbe 0x2230
0x2208: mov byte ptr [rsp+0x38],r8b
0x220d: mov byte ptr [rsp+0x30],r10b
0x2212: mov qword ptr [rsp+0x28],r9
0x2217: call 0x13f0
0x221c: movzx r8d,byte ptr [rsp+0x38]
0x2222: movzx r10d,byte ptr [rsp+0x30]
0x2228: mov r11,rax
0x222b: mov r9,qword ptr [rsp+0x28]
0x2230: cmp rbx,r11
0x2233: mov byte ptr [rsp+0x28],r10b
0x2238: ja 0x27f0
0x223e: mov rdx,qword ptr [rsp+0x18]
0x2243: mov rsi,qword ptr [rsp+0x48]
0x2248: mov rdi,r9
0x224b: mov qword ptr [rsp+0x40],r11
0x2250: mov byte ptr [rsp+0x38],r8b
0x2255: mov qword ptr [rsp+0x30],r9
0x225a: call 0x1480
0x225f: test eax,eax
0x2261: mov r9,qword ptr [rsp+0x30]
0x2266: movzx r8d,byte ptr [rsp+0x38]
0x226c: mov r11,qword ptr [rsp+0x40]
0x2271: jne 0x27f0
0x2277: cmp byte ptr [rsp+0xf],0x0
0x227c: movzx r10d,byte ptr [rsp+0x28]
0x2282: jne 0x3205
0x2288: nop dword ptr [rax+rax]
0x2290: movzx ebx,byte ptr [r9]
0x2294: cmp bl,0x7e
0x2297: ja 0x25b8
0x229d: lea rcx,[rip+0x2d88]
0x22a4: movzx edx,bl
0x22a7: movsxd rax,dword ptr [rcx+rdx*4]
0x22ab: add rax,rcx
0x22ae: jmp rax
0x22e8: cmp byte ptr [rsp+0xd],0x1
0x22ed: jne 0x2402
0x22f3: test dl,dl
0x22f5: jne 0x2402
0x22fb: mov rsi,qword ptr [rsp+0x20]
0x2300: test rsi,rsi
0x2303: je 0x2319
0x2305: mov edx,ebx
0x2307: shr dl,0x5
0x230a: movzx edx,dl
0x230d: mov edx,dword ptr [rsi+rdx*4]
0x2310: btl edx,ebx
0x2313: jb 0x2463
0x2319: test r10b,r10b
0x231c: jne 0x2463
0x2322: xor eax,0x1
0x2325: add rbp,0x1
0x2329: and eax,r8d
0x232c: test al,al
0x232e: je 0x2350
0x2330: cmp r13,r15
0x2333: jbe 0x233a
0x2335: mov byte ptr [r14+r15],0x27
0x233a: lea rax,[r15+0x1]
0x233e: cmp r13,rax
0x2341: jbe 0x2349
0x2343: mov byte ptr [r14+r15+0x1],0x27
0x2349: add r15,0x2
0x234d: xor r8d,r8d
0x2350: cmp r15,r13
0x2353: jae 0x2359
0x2355: mov byte ptr [r14+r15],bl
0x2359: movzx edi,byte ptr [rsp+0xe]
0x235e: add r15,0x1
0x2362: mov eax,0x0
0x2367: test r12b,r12b
0x236a: cmove edi,eax
0x236d: mov byte ptr [rsp+0xe],dil
0x2372: jmp 0x21a8
0x2402: cmp byte ptr [rsp+0xf],0x0
0x2407: jne 0x22fb
0x240d: jmp 0x2319
0x2463: cmp dword ptr [rsp+0x8],0x2
0x2468: sete dl
0x246b: cmp byte ptr [rsp+0xf],0x0
0x2470: mov eax,edx
0x2472: jne 0x2cc8
0x2478: mov eax,r8d
0x247b: xor eax,0x1
0x247e: and al,dl
0x2480: je 0x24b1
0x2482: cmp r13,r15
0x2485: jbe 0x248c
0x2487: mov byte ptr [r14+r15],0x27
0x248c: lea rdx,[r15+0x1]
0x2490: cmp r13,rdx
0x2493: jbe 0x249b
0x2495: mov byte ptr [r14+r15+0x1],0x24
0x249b: lea rdx,[r15+0x2]
0x249f: cmp r13,rdx
0x24a2: jbe 0x24aa
0x24a4: mov byte ptr [r14+r15+0x2],0x27
0x24aa: add r15,0x3
0x24ae: mov r8d,eax
0x24b1: cmp r13,r15
0x24b4: jbe 0x24bb
0x24b6: mov byte ptr [r14+r15],0x5c
0x24bb: add r15,0x1
0x24bf: add rbp,0x1
0x24c3: jmp 0x2350
0x25b0: xor r10d,r10d
0x25b3: nop dword ptr [rax+rax]
0x25b8: cmp qword ptr [rsp+0x58],0x1
0x25be: jne 0x2968
0x25c4: mov qword ptr [rsp+0x38],r11
0x25c9: mov byte ptr [rsp+0x30],r8b
0x25ce: mov byte ptr [rsp+0x28],r10b
0x25d3: call 0x15f0
0x25d8: mov rcx,qword ptr [rax]
0x25db: movzx edx,bl
0x25de: movzx r10d,byte ptr [rsp+0x28]
0x25e4: movzx r8d,byte ptr [rsp+0x30]
0x25ea: mov r11,qword ptr [rsp+0x38]
0x25ef: mov edi,0x1
0x25f4: movzx eax,word ptr [rcx+rdx*2]
0x25f8: and ax,0x4000
0x25fc: setne r12b
0x2600: sete al
0x2603: and al,byte ptr [rsp+0xd]
0x2607: test al,al
0x2609: jne 0x2fa1
0x260f: cmp dword ptr [rsp+0x8],0x2
0x2614: sete dl
0x2617: jmp 0x22e8
0x2620: movzx ebx,byte ptr [r9]
0x2624: cmp bl,0x7e
0x2627: ja 0x25b0
0x2629: lea rcx,[rip+0x2bf8]
0x2630: movzx edx,bl
0x2633: movsxd rax,dword ptr [rcx+rdx*4]
0x2637: add rax,rcx
0x263a: jmp rax
0x27f0: xor r10d,r10d
0x27f3: jmp 0x2290
0x2820: cmp dword ptr [rsp+0x8],0x2
0x2825: movzx ebx,byte ptr [rsp+0xf]
0x282a: mov r12d,r8d
0x282d: mov rbp,r11
0x2830: sete dl
0x2833: mov eax,ebx
0x2835: test r15,r15
0x2838: sete cl
0x283b: and eax,edx
0x283d: and al,cl
0x283f: jne 0x32a6
0x2845: mov eax,ebx
0x2847: xor eax,0x1
0x284a: and dl,al
0x284c: je 0x31bc
0x2852: cmp byte ptr [rsp+0x7c],0x0
0x2857: je 0x31ba
0x285d: cmp byte ptr [rsp+0xe],0x0
0x2862: jne 0x325d
0x2868: test r13,r13
0x286b: sete al
0x286e: cmp qword ptr [rsp+0x50],0x0
0x2874: setne dl
0x2877: and al,dl
0x2879: je 0x329c
0x287f: mov r13,qword ptr [rsp+0x50]
0x2884: lea rbx,[rip+0x2712]
0x288b: mov byte ptr [r14],0x27
0x288f: mov dword ptr [rsp+0x8],0x2
0x2897: mov r15d,0x1
0x289d: mov qword ptr [rsp+0x18],0x1
0x28a6: mov byte ptr [rsp+0xf],0x0
0x28ab: mov qword ptr [rsp+0x48],rbx
0x28b0: mov byte ptr [rsp+0x7c],al
0x28b4: jmp 0x2193
0x2968: lea rax,[rsp+0xa0]
0x2970: cmp r11,-0x1
0x2974: mov qword ptr [rsp+0xa0],0x0
0x2980: mov qword ptr [rsp+0x28],rax
0x2985: jne 0x29b4
0x2987: mov rdi,qword ptr [rsp+0x10]
0x298c: mov byte ptr [rsp+0x40],r8b
0x2991: mov byte ptr [rsp+0x38],r10b
0x2996: mov qword ptr [rsp+0x30],r9
0x299b: call 0x13f0
0x29a0: movzx r8d,byte ptr [rsp+0x40]
0x29a6: movzx r10d,byte ptr [rsp+0x38]
0x29ac: mov r11,rax
0x29af: mov r9,qword ptr [rsp+0x30]
0x29b4: lea rax,[rsp+0x9c]
0x29bc: xor ecx,ecx
0x29be: mov byte ptr [rsp+0x7e],bl
0x29c2: mov byte ptr [rsp+0x7d],r8b
0x29c7: mov rbx,rcx
0x29ca: mov qword ptr [rsp+0x88],r9
0x29d2: mov qword ptr [rsp+0x38],rax
0x29d7: mov byte ptr [rsp+0x7f],r10b
0x29dc: mov qword ptr [rsp+0x80],r15
0x29e4: mov qword ptr [rsp+0x40],r14
0x29e9: mov qword ptr [rsp+0x70],r13
0x29ee: mov qword ptr [rsp+0x30],r11
0x29f3: mov rax,qword ptr [rsp+0x10]
0x29f8: lea r14,[rbp+rbx]
0x29fd: mov rdx,qword ptr [rsp+0x30]
0x2a02: mov rcx,qword ptr [rsp+0x28]
0x2a07: mov rdi,qword ptr [rsp+0x38]
0x2a0c: lea r13,[rax+r14]
0x2a10: sub rdx,r14
0x2a13: mov rsi,r13
0x2a16: call 0x4790
0x2a1b: test rax,rax
0x2a1e: mov r15,rax
0x2a21: je 0x2a71
0x2a23: cmp rax,-0x1
0x2a27: je 0x3045
0x2a2d: cmp rax,-0x2
0x2a31: je 0x2fd1
0x2a37: cmp dword ptr [rsp+0x8],0x2
0x2a3c: sete al
0x2a3f: and al,byte ptr [rsp+0xf]
0x2a43: jne 0x2be0
0x2a49: mov edi,dword ptr [rsp+0x9c]
0x2a50: call 0x15e0
0x2a55: mov rdi,qword ptr [rsp+0x28]
0x2a5a: test eax,eax
0x2a5c: mov eax,0x0
0x2a61: cmove r12d,eax
0x2a65: add rbx,r15
0x2a68: call 0x15d0
0x2a6d: test eax,eax
0x2a6f: je 0x29f3
0x2a71: mov edx,r12d
0x2a74: mov rdi,rbx
0x2a77: movzx r8d,byte ptr [rsp+0x7d]
0x2a7d: xor edx,0x1
0x2a80: movzx ebx,byte ptr [rsp+0x7e]
0x2a85: movzx r10d,byte ptr [rsp+0x7f]
0x2a8b: and dl,byte ptr [rsp+0xd]
0x2a8f: mov r15,qword ptr [rsp+0x80]
0x2a97: mov r14,qword ptr [rsp+0x40]
0x2a9c: mov r13,qword ptr [rsp+0x70]
0x2aa1: mov r11,qword ptr [rsp+0x30]
0x2aa6: cmp rdi,0x1
0x2aaa: jbe 0x30ab
0x2ab0: mov rcx,rdi
0x2ab3: xor esi,esi
0x2ab5: movzx r9d,byte ptr [rsp+0xf]
0x2abb: add rcx,rbp
0x2abe: mov rdi,qword ptr [rsp+0x10]
0x2ac3: jmp 0x2b7e
0x2ad0: cmp dword ptr [rsp+0x8],0x2
0x2ad5: sete al
0x2ad8: test r9b,r9b
0x2adb: jne 0x2f90
0x2ae1: mov esi,r8d
0x2ae4: xor esi,0x1
0x2ae7: and al,sil
0x2aea: je 0x2b1b
0x2aec: cmp r13,r15
0x2aef: jbe 0x2af6
0x2af1: mov byte ptr [r14+r15],0x27
0x2af6: lea rsi,[r15+0x1]
0x2afa: cmp r13,rsi
0x2afd: jbe 0x2b05
0x2aff: mov byte ptr [r14+r15+0x1],0x24
0x2b05: lea rsi,[r15+0x2]
0x2b09: cmp r13,rsi
0x2b0c: jbe 0x2b14
0x2b0e: mov byte ptr [r14+r15+0x2],0x27
0x2b14: add r15,0x3
0x2b18: mov r8d,eax
0x2b1b: cmp r13,r15
0x2b1e: jbe 0x2b25
0x2b20: mov byte ptr [r14+r15],0x5c
0x2b25: lea rax,[r15+0x1]
0x2b29: cmp r13,rax
0x2b2c: jbe 0x2b3b
0x2b2e: mov eax,ebx
0x2b30: shr al,0x6
0x2b33: add eax,0x30
0x2b36: mov byte ptr [r14+r15+0x1],al
0x2b3b: lea rax,[r15+0x2]
0x2b3f: cmp r13,rax
0x2b42: jbe 0x2b54
0x2b44: mov eax,ebx
0x2b46: shr al,0x3
0x2b49: and eax,0x7
0x2b4c: add eax,0x30
0x2b4f: mov byte ptr [r14+r15+0x2],al
0x2b54: and ebx,0x7
0x2b57: add rbp,0x1
0x2b5b: add r15,0x3
0x2b5f: add ebx,0x30
0x2b62: cmp rbp,rcx
0x2b65: jae 0x2350
0x2b6b: mov esi,edx
0x2b6d: cmp r13,r15
0x2b70: jbe 0x2b76
0x2b72: mov byte ptr [r14+r15],bl
0x2b76: movzx ebx,byte ptr [rdi+rbp]
0x2b7a: add r15,0x1
0x2b7e: test dl,dl
0x2b80: jne 0x2ad0
0x2b86: mov eax,esi
0x2b88: xor eax,0x1
0x2b8b: and eax,r8d
0x2b8e: test r10b,r10b
0x2b91: je 0x2ba1
0x2b93: cmp r13,r15
0x2b96: jbe 0x2b9d
0x2b98: mov byte ptr [r14+r15],0x5c
0x2b9d: add r15,0x1
0x2ba1: add rbp,0x1
0x2ba5: cmp rbp,rcx
0x2ba8: jae 0x232c
0x2bae: test al,al
0x2bb0: je 0x2fae
0x2bb6: cmp r13,r15
0x2bb9: jbe 0x2bc0
0x2bbb: mov byte ptr [r14+r15],0x27
0x2bc0: lea rax,[r15+0x1]
0x2bc4: cmp r13,rax
0x2bc7: jbe 0x2bcf
0x2bc9: mov byte ptr [r14+r15+0x1],0x27
0x2bcf: add r15,0x2
0x2bd3: xor r10d,r10d
0x2bd6: xor r8d,r8d
0x2bd9: jmp 0x2b6d
0x2be0: cmp r15,0x1
0x2be4: je 0x2a49
0x2bea: mov rdi,qword ptr [rsp+0x10]
0x2bef: lea rcx,[rdi+r15]
0x2bf3: lea rdx,[rdi+r14+0x1]
0x2bf8: lea r8,[rcx+r14]
0x2bfc: jmp 0x2c0d
0x2c00: add rdx,0x1
0x2c04: cmp r8,rdx
0x2c07: je 0x2a49
0x2c0d: movzx ecx,byte ptr [rdx]
0x2c10: sub ecx,0x5b
0x2c13: cmp cl,0x21
0x2c16: ja 0x2c00
0x2c18: mov esi,0x1
0x2c1d: shl rsi,cl
0x2c20: mov rcx,rsi
0x2c23: movabsq rsi,0x20000002b
0x2c2d: test rcx,rsi
0x2c30: je 0x2c00
0x2c32: mov r14,qword ptr [rsp+0x40]
0x2c37: mov r13,qword ptr [rsp+0x70]
0x2c3c: mov rbp,qword ptr [rsp+0x30]
0x2c41: mov dword ptr [rsp+0x8],0x2
0x2c49: cmp byte ptr [rsp+0xd],0x0
0x2c4e: je 0x2c60
0x2c50: test al,al
0x2c52: mov eax,0x4
0x2c57: cmove eax,dword ptr [rsp+0x8]
0x2c5c: mov dword ptr [rsp+0x8],eax
0x2c60: sub rsp,0x8
0x2c64: mov rcx,rbp
0x2c67: mov rsi,r13
0x2c6a: push qword ptr [rsp+0x68]
0x2c6e: push qword ptr [rsp+0x78]
0x2c72: mov rdi,r14
0x2c75: push 0x0
0x2c77: mov r9d,dword ptr [rsp+0x98]
0x2c7f: mov r8d,dword ptr [rsp+0x28]
0x2c84: mov rdx,qword ptr [rsp+0x30]
0x2c89: and r9d,-0x3
0x2c8d: call 0x20c0
0x2c92: add rsp,0x20
0x2c96: mov r15,rax
0x2c99: mov rbx,qword ptr [rsp+0xa8]
0x2ca1: xor rbx,qword ptr fs:0x28
0x2caa: mov rax,r15
0x2cad: jne 0x32b3
0x2cb3: add rsp,0xb8
0x2cba: pop rbx
0x2cbb: pop rbp
0x2cbc: pop r12
0x2cbe: pop r13
0x2cc0: pop r14
0x2cc2: pop r15
0x2cc4: ret 
0x2cc8: mov rbp,r11
0x2ccb: jmp 0x2c49
0x2d31: test r13,r13
0x2d34: jne 0x32ca
0x2d3a: lea rax,[rip+0x225c]
0x2d41: mov qword ptr [rsp+0x50],0x0
0x2d4a: mov byte ptr [rsp+0xe],0x1
0x2d4f: mov byte ptr [rsp+0x7c],0x0
0x2d54: xor r12d,r12d
0x2d57: mov byte ptr [rsp+0xf],0x0
0x2d5c: mov qword ptr [rsp+0x18],0x1
0x2d65: mov qword ptr [rsp+0x48],rax
0x2d6a: mov r15d,0x1
0x2d70: mov dword ptr [rsp+0x8],0x2
0x2d78: jmp 0x2193
0x2f90: movzx ebx,byte ptr [rsp+0xf]
0x2f95: mov rbp,r11
0x2f98: mov byte ptr [rsp+0xd],bl
0x2f9c: jmp 0x2c49
0x2fa1: movzx edx,byte ptr [rsp+0xd]
0x2fa6: xor r12d,r12d
0x2fa9: jmp 0x2ab0
0x2fae: xor r10d,r10d
0x2fb1: jmp 0x2b6d
0x2fd1: mov r11,qword ptr [rsp+0x30]
0x2fd6: mov rsi,r14
0x2fd9: mov rcx,r13
0x2fdc: mov rax,rbx
0x2fdf: mov rdi,rbx
0x2fe2: movzx r8d,byte ptr [rsp+0x7d]
0x2fe8: movzx ebx,byte ptr [rsp+0x7e]
0x2fed: mov r9,qword ptr [rsp+0x88]
0x2ff5: cmp rsi,r11
0x2ff8: movzx r10d,byte ptr [rsp+0x7f]
0x2ffe: mov r15,qword ptr [rsp+0x80]
0x3006: mov r14,qword ptr [rsp+0x40]
0x300b: mov r13,qword ptr [rsp+0x70]
0x3010: jae 0x3038
0x3012: cmp byte ptr [rcx],0x0
0x3015: jne 0x3027
0x3017: jmp 0x3038
0x3020: cmp byte ptr [r9+rax],0x0
0x3025: je 0x3035
0x3027: add rax,0x1
0x302b: lea rdx,[rbp+rax]
0x3030: cmp r11,rdx
0x3033: ja 0x3020
0x3035: mov rdi,rax
0x3038: movzx edx,byte ptr [rsp+0xd]
0x303d: xor r12d,r12d
0x3040: jmp 0x2aa6
0x3045: mov rdi,rbx
0x3048: movzx r8d,byte ptr [rsp+0x7d]
0x304e: movzx ebx,byte ptr [rsp+0x7e]
0x3053: movzx r10d,byte ptr [rsp+0x7f]
0x3059: mov r15,qword ptr [rsp+0x80]
0x3061: xor r12d,r12d
0x3064: mov r14,qword ptr [rsp+0x40]
0x3069: mov r13,qword ptr [rsp+0x70]
0x306e: mov r11,qword ptr [rsp+0x30]
0x3073: movzx edx,byte ptr [rsp+0xd]
0x3078: jmp 0x2aa6
0x30ab: mov eax,edx
0x30ad: jmp 0x2607
0x31ba: mov eax,edx
0x31bc: mov rbx,qword ptr [rsp+0x48]
0x31c1: test rbx,rbx
0x31c4: je 0x31f2
0x31c6: test al,al
0x31c8: je 0x31f2
0x31ca: movzx ecx,byte ptr [rbx]
0x31cd: mov rax,rbx
0x31d0: test cl,cl
0x31d2: je 0x31f2
0x31d4: mov rdx,r15
0x31d7: sub rax,r15
0x31da: cmp r13,rdx
0x31dd: jbe 0x31e3
0x31df: mov byte ptr [r14+rdx],cl
0x31e3: add rdx,0x1
0x31e7: movzx ecx,byte ptr [rax+rdx]
0x31eb: test cl,cl
0x31ed: jne 0x31da
0x31ef: mov r15,rdx
0x31f2: cmp r13,r15
0x31f5: jbe 0x2c99
0x31fb: mov byte ptr [r14+r15],0x0
0x3200: jmp 0x2c99
0x3205: cmp dword ptr [rsp+0x8],0x2
0x320a: movzx ebx,byte ptr [rsp+0xf]
0x320f: mov rbp,r11
0x3212: sete al
0x3215: mov byte ptr [rsp+0xd],bl
0x3219: jmp 0x2c49
0x325d: sub rsp,0x8
0x3261: mov r8d,0x5
0x3267: mov rcx,r11
0x326a: push qword ptr [rsp+0x68]
0x326e: push qword ptr [rsp+0x78]
0x3272: mov rdi,r14
0x3275: push qword ptr [rsp+0x38]
0x3279: mov r9d,dword ptr [rsp+0x98]
0x3281: mov rdx,qword ptr [rsp+0x30]
0x3286: mov rsi,qword ptr [rsp+0x70]
0x328b: call 0x20c0
0x3290: add rsp,0x20
0x3294: mov r15,rax
0x3297: jmp 0x2c99
0x329c: movzx eax,byte ptr [rsp+0x7c]
0x32a1: jmp 0x31bc
0x32a6: mov dword ptr [rsp+0x8],0x2
0x32ae: jmp 0x2c49
0x32b3: call 0x1410
0x32b8: mov byte ptr [rsp+0xd],0x0
0x32bd: jmp 0x2d31
0x32ca: mov byte ptr [rsp+0xe],0x1
0x32cf: xor eax,eax
0x32d1: xor r12d,r12d
0x32d4: mov qword ptr [rsp+0x50],0x0
0x32dd: jmp 0x2884
0x32ef: call 0x1330
0x32f4: nop 
0x32f6: nop word ptr cs:[rax+rax]
0x33ec: add rsp,0x20
0x33f0: mov r11,qword ptr [rsp+0x10]
0x33f5: cmp r11,rax
0x33f8: ja 0x3461
0x33fa: lea rsi,[rax+0x1]
0x33fe: lea rax,[rip+0x203cdb]
0x3405: cmp r12,rax
0x3408: mov qword ptr [rbx],rsi
0x340b: je 0x341f
0x340d: mov rdi,r12
0x3410: mov qword ptr [rsp+0x10],rsi
0x3415: call 0x1320
0x341a: mov rsi,qword ptr [rsp+0x10]
0x341f: mov rdi,rsi
0x3422: mov qword ptr [rsp+0x10],rsi
0x3427: call 0x4280
0x342c: sub rsp,0x8
0x3430: mov qword ptr [rbx+0x8],rax
0x3434: mov r8d,dword ptr [rbp]
0x3438: push qword ptr [rbp+0x30]
0x343b: push qword ptr [rbp+0x28]
0x343e: mov rcx,r14
0x3441: push r15
0x3443: mov r9d,dword ptr [rsp+0x3c]
0x3448: mov rdi,rax
0x344b: mov rdx,qword ptr [rsp+0x28]
0x3450: mov rsi,qword ptr [rsp+0x30]
0x3455: mov r12,rax
0x3458: call 0x20c0
0x345d: add rsp,0x20
0x3461: mov eax,dword ptr [rsp+0x18]
0x3465: mov dword ptr [r13],eax
0x3469: add rsp,0x28
0x346d: mov rax,r12
0x3470: pop rbx
0x3471: pop rbp
0x3472: pop r12
0x3474: pop r13
0x3476: pop r14
0x3478: pop r15
0x347a: ret 
0x34a1: call 0x1330
0x34a6: call 0x44d0
0x34ab: nop dword ptr [rax+rax]
0x34b0: push r12
0x34b2: push rbp
0x34b3: push rbx
0x34b4: mov rbx,rdi
0x34b7: call 0x1340
0x34bc: mov r12d,dword ptr [rax]
0x34bf: mov rbp,rax
0x34c2: lea rax,[rip+0x203d17]
0x34c9: test rbx,rbx
0x34cc: mov esi,0x38
0x34d1: cmove rbx,rax
0x34d5: mov rdi,rbx
0x34d8: call 0x4480
0x34dd: mov dword ptr [rbp],r12d
0x34e1: pop rbx
0x34e2: pop rbp
0x34e3: pop r12
0x34e5: ret 
0x34f0: lea rax,[rip+0x203ce9]
0x34f7: test rdi,rdi
0x34fa: cmove rdi,rax
0x34fe: mov eax,dword ptr [rdi]
0x3500: ret 
0x3510: lea rax,[rip+0x203cc9]
0x3517: test rdi,rdi
0x351a: cmove rdi,rax
0x351e: mov dword ptr [rdi],esi
0x3520: ret 
0x3530: lea rax,[rip+0x203ca9]
0x3537: test rdi,rdi
0x353a: mov ecx,esi
0x353c: cmove rdi,rax
0x3540: mov eax,esi
0x3542: and ecx,0x1f
0x3545: shr al,0x5
0x3548: movzx eax,al
0x354b: lea rdi,[rdi+rax*4+0x8]
0x3550: mov esi,dword ptr [rdi]
0x3552: mov eax,esi
0x3554: shr eax,cl
0x3556: xor edx,eax
0x3558: and eax,0x1
0x355b: and edx,0x1
0x355e: shl edx,cl
0x3560: xor edx,esi
0x3562: mov dword ptr [rdi],edx
0x3564: ret 
0x3570: lea rax,[rip+0x203c69]
0x3577: test rdi,rdi
0x357a: cmove rdi,rax
0x357e: mov eax,dword ptr [rdi+0x4]
0x3581: mov dword ptr [rdi+0x4],esi
0x3584: ret 
0x3590: lea rax,[rip+0x203c49]
0x3597: test rdi,rdi
0x359a: cmove rdi,rax
0x359e: test rsi,rsi
0x35a1: mov dword ptr [rdi],0xa
0x35a7: je 0x35b7
0x35a9: test rdx,rdx
0x35ac: je 0x35b7
0x35ae: mov qword ptr [rdi+0x28],rsi
0x35b2: mov qword ptr [rdi+0x30],rdx
0x35b6: ret 
0x35b7: sub rsp,0x8
0x35bb: call 0x1330
0x35c0: push r15
0x35c2: push r14
0x35c4: lea rax,[rip+0x203c15]
0x35cb: push r13
0x35cd: push r12
0x35cf: mov r13,rdi
0x35d2: push rbp
0x35d3: push rbx
0x35d4: mov rbx,r8
0x35d7: mov r14,rsi
0x35da: mov r15,rdx
0x35dd: sub rsp,0x18
0x35e1: test r8,r8
0x35e4: cmove rbx,rax
0x35e8: mov qword ptr [rsp+0x8],rcx
0x35ed: call 0x1340
0x35f2: mov r12d,dword ptr [rax]
0x35f5: mov rbp,rax
0x35f8: lea rax,[rbx+0x8]
0x35fc: sub rsp,0x8
0x3600: mov r9d,dword ptr [rbx+0x4]
0x3604: push qword ptr [rbx+0x30]
0x3607: mov r8d,dword ptr [rbx]
0x360a: push qword ptr [rbx+0x28]
0x360d: mov rdx,r15
0x3610: push rax
0x3611: mov rcx,qword ptr [rsp+0x28]
0x3616: mov rsi,r14
0x3619: mov rdi,r13
0x361c: call 0x20c0
0x3621: mov dword ptr [rbp],r12d
0x3625: add rsp,0x38
0x3629: pop rbx
0x362a: pop rbp
0x362b: pop r12
0x362d: pop r13
0x362f: pop r14
0x3631: pop r15
0x3633: ret 
0x3640: push r15
0x3642: push r14
0x3644: lea rax,[rip+0x203b95]
0x364b: push r13
0x364d: push r12
0x364f: mov r12,rdx
0x3652: push rbp
0x3653: push rbx
0x3654: mov rbx,rcx
0x3657: mov r14,rdi
0x365a: mov r15,rsi
0x365d: sub rsp,0x38
0x3661: test rcx,rcx
0x3664: cmove rbx,rax
0x3668: xor ebp,ebp
0x366a: call 0x1340
0x366f: test r12,r12
0x3672: mov r13,rax
0x3675: mov eax,dword ptr [rax]
0x3677: sete bpl
0x367b: or ebp,dword ptr [rbx+0x4]
0x367e: lea r10,[rbx+0x8]
0x3682: sub rsp,0x8
0x3686: mov r8d,dword ptr [rbx]
0x3689: mov rcx,r15
0x368c: mov dword ptr [rsp+0x14],eax
0x3690: push qword ptr [rbx+0x30]
0x3693: mov rdx,r14
0x3696: push qword ptr [rbx+0x28]
0x3699: push r10
0x369b: xor esi,esi
0x369d: mov r9d,ebp
0x36a0: xor edi,edi
0x36a2: mov qword ptr [rsp+0x40],r10
0x36a7: call 0x20c0
0x36ac: lea rsi,[rax+0x1]
0x36b0: mov qword ptr [rsp+0x48],rax
0x36b5: add rsp,0x20
0x36b9: mov rdi,rsi
0x36bc: mov qword ptr [rsp+0x18],rsi
0x36c1: call 0x4280
0x36c6: mov qword ptr [rsp+0x10],rax
0x36cb: sub rsp,0x8
0x36cf: push qword ptr [rbx+0x30]
0x36d2: push qword ptr [rbx+0x28]
0x36d5: mov r10,qword ptr [rsp+0x38]
0x36da: mov r9d,ebp
0x36dd: mov r8d,dword ptr [rbx]
0x36e0: mov rcx,r15
0x36e3: mov rdx,r14
0x36e6: mov rdi,rax
0x36e9: push r10
0x36eb: mov rsi,qword ptr [rsp+0x38]
0x36f0: call 0x20c0
0x36f5: mov eax,dword ptr [rsp+0x2c]
0x36f9: add rsp,0x20
0x36fd: test r12,r12
0x3700: mov dword ptr [r13],eax
0x3704: je 0x370f
0x3706: mov r11,qword ptr [rsp+0x28]
0x370b: mov qword ptr [r12],r11
0x370f: mov rax,qword ptr [rsp+0x10]
0x3714: add rsp,0x38
0x3718: pop rbx
0x3719: pop rbp
0x371a: pop r12
0x371c: pop r13
0x371e: pop r14
0x3720: pop r15
0x3722: ret 
0x3730: mov rcx,rdx
0x3733: xor edx,edx
0x3735: jmp 0x3640
0x3740: mov eax,dword ptr [rip+0x203912]
0x3746: push r12
0x3748: mov r12,qword ptr [rip+0x203911]
0x374f: push rbp
0x3750: push rbx
0x3751: cmp eax,0x1
0x3754: jle 0x3781
0x3756: sub eax,0x2
0x3759: lea rbx,[r12+0x18]
0x375e: shl rax,0x4
0x3762: lea rbp,[r12+rax+0x28]
0x3767: nop word ptr [rax+rax]
0x3770: mov rdi,qword ptr [rbx]
0x3773: add rbx,0x10
0x3777: call 0x1320
0x377c: cmp rbx,rbp
0x377f: jne 0x3770
0x3781: mov rdi,qword ptr [r12+0x8]
0x3786: lea rbx,[rip+0x203953]
0x378d: cmp rdi,rbx
0x3790: je 0x37a9
0x3792: call 0x1320
0x3797: mov qword ptr [rip+0x2038ce],0x100
0x37a2: mov qword ptr [rip+0x2038cf],rbx
0x37a9: lea rbx,[rip+0x2038c0]
0x37b0: cmp r12,rbx
0x37b3: je 0x37c4
0x37b5: mov rdi,r12
0x37b8: call 0x1320
0x37bd: mov qword ptr [rip+0x20389c],rbx
0x37c4: pop rbx
0x37c5: mov dword ptr [rip+0x203889],0x1
0x37cf: pop rbp
0x37d0: pop r12
0x37d2: ret 
0x37e0: lea rcx,[rip+0x2039f9]
0x37e7: mov rdx,-0x1
0x37ee: jmp 0x3300
0x3800: lea rcx,[rip+0x2039d9]
0x3807: jmp 0x3300
0x3810: lea rcx,[rip+0x2039c9]
0x3817: mov rsi,rdi
0x381a: mov rdx,-0x1
0x3821: xor edi,edi
0x3823: jmp 0x3300
0x3830: lea rcx,[rip+0x2039a9]
0x3837: mov rdx,rsi
0x383a: mov rsi,rdi
0x383d: xor edi,edi
0x383f: jmp 0x3300
0x38bf: mov rcx,qword ptr [rsp+0x38]
0x38c4: xor rcx,qword ptr fs:0x28
0x38cd: jne 0x38d9
0x38cf: add rsp,0x48
0x38d3: ret 
0x38d4: call 0x1330
0x38d9: call 0x1410
0x38de: nop 
0x38e0: sub rsp,0x48
0x38e4: mov rax,rdx
0x38e7: mov rdx,rcx
0x38ea: mov rcx,qword ptr fs:0x28
0x38f3: mov qword ptr [rsp+0x38],rcx
0x38f8: xor ecx,ecx
0x38fa: cmp esi,0xa
0x38fd: je 0x3960
0x38ff: mov dword ptr [rsp],esi
0x3902: mov rcx,rsp
0x3905: mov rsi,rax
0x3908: mov qword ptr [rsp+0x4],0x0
0x3911: mov qword ptr [rsp+0xc],0x0
0x391a: mov qword ptr [rsp+0x14],0x0
0x3923: mov qword ptr [rsp+0x1c],0x0
0x392c: mov qword ptr [rsp+0x24],0x0
0x3935: mov qword ptr [rsp+0x2c],0x0
0x393e: mov dword ptr [rsp+0x34],0x0
0x3946: call 0x3300
0x394b: mov rdx,qword ptr [rsp+0x38]
0x3950: xor rdx,qword ptr fs:0x28
0x3959: jne 0x3965
0x395b: add rsp,0x48
0x395f: ret 
0x3960: call 0x1330
0x3965: call 0x1410
0x396a: nop word ptr [rax+rax]
0x3980: mov rcx,rdx
0x3983: mov rdx,rsi
0x3986: mov esi,edi
0x3988: xor edi,edi
0x398a: jmp 0x38e0
0x3990: sub rsp,0x48
0x3994: mov ecx,edx
0x3996: mov rax,qword ptr fs:0x28
0x399f: mov qword ptr [rsp+0x38],rax
0x39a4: xor eax,eax
0x39a6: mov rax,qword ptr [rip+0x203863]
0x39ad: mov r8,rsp
0x39b0: and ecx,0x1f
0x39b3: movdqa xmm0,[rip+0x203825]
0x39bb: mov qword ptr [rsp+0x30],rax
0x39c0: mov eax,edx
0x39c2: movaps [rsp],xmm0
0x39c6: shr al,0x5
0x39c9: movzx eax,al
0x39cc: lea r9,[r8+rax*4+0x8]
0x39d1: movdqa xmm0,[rip+0x203817]
0x39d9: movaps [rsp+0x10],xmm0
0x39de: movdqa xmm0,[rip+0x20381a]
0x39e6: movaps [rsp+0x20],xmm0
0x39eb: mov edx,dword ptr [r9]
0x39ee: mov eax,edx
0x39f0: shr eax,cl
0x39f2: not eax
0x39f4: and eax,0x1
0x39f7: shl eax,cl
0x39f9: mov rcx,r8
0x39fc: xor eax,edx
0x39fe: mov rdx,rsi
0x3a01: mov rsi,rdi
0x3a04: mov dword ptr [r9],eax
0x3a07: xor edi,edi
0x3a09: call 0x3300
0x3a0e: mov rsi,qword ptr [rsp+0x38]
0x3a13: xor rsi,qword ptr fs:0x28
0x3a1c: jne 0x3a23
0x3a1e: add rsp,0x48
0x3a22: ret 
0x3a23: call 0x1410
0x3a28: nop dword ptr [rax+rax]
0x3a30: movsx edx,sil
0x3a34: mov rsi,-0x1
0x3a3b: jmp 0x3990
0x3a40: mov edx,0x3a
0x3a45: mov rsi,-0x1
0x3a4c: jmp 0x3990
0x3a60: mov edx,0x3a
0x3a65: jmp 0x3990
0x3a70: sub rsp,0x48
0x3a74: mov rax,rdx
0x3a77: mov rdx,qword ptr fs:0x28
0x3a80: mov qword ptr [rsp+0x38],rdx
0x3a85: xor edx,edx
0x3a87: cmp esi,0xa
0x3a8a: je 0x3af4
0x3a8c: mov dword ptr [rsp],esi
0x3a8f: mov rcx,rsp
0x3a92: mov rdx,-0x1
0x3a99: mov rsi,rax
0x3a9c: mov qword ptr [rsp+0x4],0x0
0x3aa5: mov qword ptr [rsp+0xc],0x4000000
0x3aae: mov qword ptr [rsp+0x14],0x0
0x3ab7: mov qword ptr [rsp+0x1c],0x0
0x3ac0: mov qword ptr [rsp+0x24],0x0
0x3ac9: mov qword ptr [rsp+0x2c],0x0
0x3ad2: mov dword ptr [rsp+0x34],0x0
0x3ada: call 0x3300
0x3adf: mov rcx,qword ptr [rsp+0x38]
0x3ae4: xor rcx,qword ptr fs:0x28
0x3aed: jne 0x3af9
0x3aef: add rsp,0x48
0x3af3: ret 
0x3af4: call 0x1330
0x3af9: call 0x1410
0x3afe: nop 
0x3b00: sub rsp,0x48
0x3b04: mov r9,rcx
0x3b07: mov rcx,qword ptr [rip+0x203702]
0x3b0e: movdqa xmm0,[rip+0x2036ca]
0x3b16: mov rax,qword ptr fs:0x28
0x3b1f: mov qword ptr [rsp+0x38],rax
0x3b24: xor eax,eax
0x3b26: movaps [rsp],xmm0
0x3b2a: test rsi,rsi
0x3b2d: mov qword ptr [rsp+0x30],rcx
0x3b32: mov dword ptr [rsp],0xa
0x3b39: movdqa xmm0,[rip+0x2036af]
0x3b41: movaps [rsp+0x10],xmm0
0x3b46: movdqa xmm0,[rip+0x2036b2]
0x3b4e: movaps [rsp+0x20],xmm0
0x3b53: je 0x3b87
0x3b55: test rdx,rdx
0x3b58: je 0x3b87
0x3b5a: mov qword ptr [rsp+0x28],rsi
0x3b5f: mov qword ptr [rsp+0x30],rdx
0x3b64: mov rcx,rsp
0x3b67: mov rdx,r8
0x3b6a: mov rsi,r9
0x3b6d: call 0x3300
0x3b72: mov rdi,qword ptr [rsp+0x38]
0x3b77: xor rdi,qword ptr fs:0x28
0x3b80: jne 0x3b8c
0x3b82: add rsp,0x48
0x3b86: ret 
0x3b87: call 0x1330
0x3b8c: call 0x1410
0x3b91: nop dword ptr [rax+rax]
0x3b96: nop word ptr cs:[rax+rax]
0x3ba0: mov r8,-0x1
0x3ba7: jmp 0x3b00
0x3bb0: mov rcx,rdx
0x3bb3: mov r8,-0x1
0x3bba: mov rdx,rsi
0x3bbd: mov rsi,rdi
0x3bc0: xor edi,edi
0x3bc2: jmp 0x3b00
0x3bd0: mov r8,rcx
0x3bd3: mov rcx,rdx
0x3bd6: mov rdx,rsi
0x3bd9: mov rsi,rdi
0x3bdc: xor edi,edi
0x3bde: jmp 0x3b00
0x3bf0: lea rcx,[rip+0x203429]
0x3bf7: jmp 0x3300
0x3c00: lea rcx,[rip+0x203419]
0x3c07: mov rdx,rsi
0x3c0a: mov rsi,rdi
0x3c0d: xor edi,edi
0x3c0f: jmp 0x3300
0x3c20: lea rcx,[rip+0x2033f9]
0x3c27: mov rdx,-0x1
0x3c2e: jmp 0x3300
0x3c40: lea rcx,[rip+0x2033d9]
0x3c47: mov rsi,rdi
0x3c4a: mov rdx,-0x1
0x3c51: xor edi,edi
0x3c53: jmp 0x3300
0x3d98: mov r8,rcx
0x3d9b: mov rcx,rdx
0x3d9e: lea rdx,[rip+0x16cf]
0x3da5: mov esi,0x1
0x3daa: xor eax,eax
0x3dac: call 0x15c0
0x3db1: jmp 0x3c9c
0x3fad: push r12
0x3faf: push r15
0x3fb1: push r14
0x3fb3: mov r8,qword ptr [rsp+0x20]
0x3fb8: mov rcx,rbx
0x3fbb: mov rdx,rax
0x3fbe: mov rdi,rbp
0x3fc1: mov esi,0x1
0x3fc6: xor eax,eax
0x3fc8: call 0x15c0
0x3fcd: add rsp,0x20
0x3fd1: add rsp,0x28
0x3fd5: pop rbx
0x3fd6: pop rbp
0x3fd7: pop r12
0x3fd9: pop r13
0x3fdb: pop r14
0x3fdd: pop r15
0x3fdf: ret 
0x4019: push r12
0x401b: push r15
0x401d: push r14
0x401f: mov r9,qword ptr [rsp+0x28]
0x4024: jmp 0x3fb3
0x4080: xor r9d,r9d
0x4083: cmp qword ptr [r8],0x0
0x4087: je 0x409b
0x4089: nop dword ptr [rax]
0x4090: add r9,0x1
0x4094: cmp qword ptr [r8+r9*8],0x0
0x4099: jne 0x4090
0x409b: jmp 0x3c60
0x40a0: sub rsp,0x68
0x40a4: mov r10,r8
0x40a7: xor r9d,r9d
0x40aa: mov rax,qword ptr fs:0x28
0x40b3: mov qword ptr [rsp+0x58],rax
0x40b8: xor eax,eax
0x40ba: mov r8,rsp
0x40bd: nop dword ptr [rax]
0x40c0: mov eax,dword ptr [r10]
0x40c3: cmp eax,0x2f
0x40c6: ja 0x410a
0x40c8: mov r11d,eax
0x40cb: add r11,qword ptr [r10+0x10]
0x40cf: add eax,0x8
0x40d2: mov dword ptr [r10],eax
0x40d5: mov rax,qword ptr [r11]
0x40d8: test rax,rax
0x40db: mov qword ptr [r8+r9*8],rax
0x40df: je 0x40eb
0x40e1: add r9,0x1
0x40e5: cmp r9,0xa
0x40e9: jne 0x40c0
0x40eb: call 0x3c60
0x40f0: mov rax,qword ptr [rsp+0x58]
0x40f5: xor rax,qword ptr fs:0x28
0x40fe: jne 0x4105
0x4100: add rsp,0x68
0x4104: ret 
0x4105: call 0x1410
0x410a: mov r11,qword ptr [r10+0x8]
0x410e: lea rax,[r11+0x8]
0x4112: mov qword ptr [r10+0x8],rax
0x4116: jmp 0x40d5
0x41e0: call 0x1410
0x41ec: mov rax,rbx
0x41ef: add rbx,0x8
0x41f3: jmp 0x41a6
0x4200: push rbx
0x4201: lea rsi,[rip+0x12ba]
0x4208: mov edx,0x5
0x420d: xor edi,edi
0x420f: call 0x13d0
0x4214: lea rdx,[rip+0x12bc]
0x421b: mov rsi,rax
0x421e: mov edi,0x1
0x4223: xor eax,eax
0x4225: call 0x1540
0x422a: lea rsi,[rip+0x12bc]
0x4231: mov edx,0x5
0x4236: xor edi,edi
0x4238: call 0x13d0
0x423d: lea rcx,[rip+0xbc4]
0x4244: lea rdx,[rip+0x952]
0x424b: mov rsi,rax
0x424e: mov edi,0x1
0x4253: xor eax,eax
0x4255: call 0x1540
0x425a: mov rbx,qword ptr [rip+0x202e27]
0x4261: lea rsi,[rip+0x14b8]
0x4268: xor edi,edi
0x426a: mov edx,0x5
0x426f: call 0x13d0
0x4274: mov rsi,rbx
0x4277: mov rdi,rax
0x427a: pop rbx
0x427b: jmp 0x1490
0x4280: push rbx
0x4281: mov rbx,rdi
0x4284: call 0x14e0
0x4289: test rax,rax
0x428c: jne 0x4293
0x428e: test rbx,rbx
0x4291: jne 0x4295
0x4293: pop rbx
0x4294: ret 
0x4295: call 0x44d0
0x429a: nop word ptr [rax+rax]
0x42a0: mov rax,rdi
0x42a3: mul rsi
0x42a6: mov rdi,rax
0x42a9: seto al
0x42ac: test rdi,rdi
0x42af: js 0x42bb
0x42b1: movzx eax,al
0x42b4: test rax,rax
0x42b7: jne 0x42bb
0x42b9: jmp 0x4280
0x42bb: sub rsp,0x8
0x42bf: call 0x44d0
0x42c4: nop 
0x42c6: nop word ptr cs:[rax+rax]
0x42d0: jmp 0x4280
0x42e9: test rdi,rdi
0x42ec: jne 0x4308
0x4308: call 0x1320
0x430d: xor eax,eax
0x430f: pop rbx
0x4310: ret 
0x4316: nop word ptr cs:[rax+rax]
0x4320: mov rax,rsi
0x4323: mul rdx
0x4326: mov rsi,rax
0x4329: seto al
0x432c: test rsi,rsi
0x432f: js 0x433b
0x4331: movzx eax,al
0x4334: test rax,rax
0x4337: jne 0x433b
0x4339: jmp 0x42e0
0x433b: sub rsp,0x8
0x433f: call 0x44d0
0x4344: nop 
0x4346: nop word ptr cs:[rax+rax]
0x4350: test rdi,rdi
0x4353: mov r9,rdx
0x4356: mov rcx,qword ptr [rsi]
0x4359: je 0x4390
0x435b: xor edx,edx
0x435d: movabsq rax,0x5555555555555554
0x4367: div r9
0x436a: cmp rax,rcx
0x436d: jbe 0x43ab
0x436f: mov rax,rcx
0x4372: shr rax, 1
0x4375: lea rcx,[rax+rcx+0x1]
0x437a: mov qword ptr [rsi],rcx
0x437d: imul rcx,r9
0x4381: mov rsi,rcx
0x4384: jmp 0x42e0
0x4390: test rcx,rcx
0x4393: je 0x43b8
0x4395: mov rax,rcx
0x4398: mul r9
0x439b: seto dl
0x439e: test rax,rax
0x43a1: movzx edx,dl
0x43a4: js 0x43ab
0x43a6: test rdx,rdx
0x43a9: je 0x437a
0x43ab: sub rsp,0x8
0x43af: call 0x44d0
0x43b4: nop dword ptr [rax]
0x43b8: xor edx,edx
0x43ba: mov eax,0x80
0x43bf: xor r8d,r8d
0x43c2: div r9
0x43c5: test rax,rax
0x43c8: sete r8b
0x43cc: lea rcx,[r8+rax]
0x43d0: jmp 0x4395
0x43e0: test rdi,rdi
0x43e3: mov rax,qword ptr [rsi]
0x43e6: je 0x4410
0x43e8: movabsq rdx,0x5555555555555553
0x43f2: cmp rax,rdx
0x43f5: ja 0x4421
0x43f7: mov rdx,rax
0x43fa: shr rdx, 1
0x43fd: lea rax,[rdx+rax+0x1]
0x4402: mov qword ptr [rsi],rax
0x4405: mov rsi,rax
0x4408: jmp 0x42e0
0x4410: test rax,rax
0x4413: mov edx,0x80
0x4418: cmove rax,rdx
0x441c: test rax,rax
0x441f: jns 0x4402
0x4421: sub rsp,0x8
0x4425: call 0x44d0
0x442a: nop word ptr [rax+rax]
0x4430: push rbx
0x4431: mov rbx,rdi
0x4434: call 0x4280
0x4439: mov rdx,rbx
0x443c: xor esi,esi
0x443e: mov rdi,rax
0x4441: pop rbx
0x4442: jmp 0x1460
0x4450: mov rax,rdi
0x4453: sub rsp,0x8
0x4457: mul rsi
0x445a: seto dl
0x445d: test rax,rax
0x4460: js 0x4479
0x4462: movzx edx,dl
0x4465: test rdx,rdx
0x4468: jne 0x4479
0x446a: call 0x14a0
0x446f: test rax,rax
0x4472: je 0x4479
0x4474: add rsp,0x8
0x4478: ret 
0x4479: call 0x44d0
0x447e: nop 
0x4480: push rbp
0x4481: push rbx
0x4482: mov rbp,rdi
0x4485: mov rdi,rsi
0x4488: mov rbx,rsi
0x448b: sub rsp,0x8
0x448f: call 0x4280
0x4494: add rsp,0x8
0x4498: mov rdx,rbx
0x449b: mov rsi,rbp
0x449e: pop rbx
0x449f: pop rbp
0x44a0: mov rdi,rax
0x44a3: jmp 0x14b0
0x44b0: push rbx
0x44b1: mov rbx,rdi
0x44b4: call 0x13f0
0x44b9: mov rdi,rbx
0x44bc: lea rsi,[rax+0x1]
0x44c0: pop rbx
0x44c1: jmp 0x4480
0x4500: call 0x1330
0x4505: nop word ptr cs:[rax+rax]
0x450f: nop 
0x475d: call 0x1410
0x477a: mov rax,qword ptr [rsp+0x8]
0x477f: jmp 0x4649
0x4784: mov rax,qword ptr [rsp+0x8]
0x4789: jmp 0x46a1
0x4790: push r13
0x4792: push r12
0x4794: mov r13,rsi
0x4797: push rbp
0x4798: push rbx
0x4799: mov rbx,rdi
0x479c: mov r12,rdx
0x479f: sub rsp,0x18
0x47a3: mov rax,qword ptr fs:0x28
0x47ac: mov qword ptr [rsp+0x8],rax
0x47b1: xor eax,eax
0x47b3: lea rax,[rsp+0x4]
0x47b8: test rdi,rdi
0x47bb: cmove rbx,rax
0x47bf: mov rdi,rbx
0x47c2: call 0x1430
0x47c7: cmp rax,-0x3
0x47cb: mov rbp,rax
0x47ce: jbe 0x47f0
0x47d0: test r12,r12
0x47d3: je 0x47f0
0x47d5: xor edi,edi
0x47d7: call 0x48a0
0x47dc: test al,al
0x47de: jne 0x47f0
0x47e0: movzx eax,byte ptr [r13]
0x47e5: mov ebp,0x1
0x47ea: mov dword ptr [rbx],eax
0x47ec: nop dword ptr [rax]
0x47f0: mov rdx,qword ptr [rsp+0x8]
0x47f5: xor rdx,qword ptr fs:0x28
0x47fe: mov rax,rbp
0x4801: jne 0x480e
0x4803: add rsp,0x18
0x4807: pop rbx
0x4808: pop rbp
0x4809: pop r12
0x480b: pop r13
0x480d: ret 
0x480e: call 0x1410
0x4813: nop word ptr cs:[rax+rax]
0x481d: nop dword ptr [rax]
0x4820: push r12
0x4822: push rbp
0x4823: mov rbp,rdi
0x4826: push rbx
0x4827: call 0x1380
0x482c: mov ebx,dword ptr [rbp]
0x482f: mov rdi,rbp
0x4832: mov r12,rax
0x4835: call 0x4940
0x483a: and ebx,0x20
0x483d: test ebx,ebx
0x483f: jne 0x4858
0x4841: test eax,eax
0x4843: je 0x484f
0x4845: test r12,r12
0x4848: mov eax,0xffffffff
0x484d: je 0x4888
0x484f: pop rbx
0x4850: pop rbp
0x4851: pop r12
0x4853: ret 
0x4858: test eax,eax
0x485a: jne 0x4878
0x485c: call 0x1340
0x4861: mov dword ptr [rax],0x0
0x4867: mov eax,0xffffffff
0x486c: pop rbx
0x486d: pop rbp
0x486e: pop r12
0x4870: ret 
0x4878: pop rbx
0x4879: mov eax,0xffffffff
0x487e: pop rbp
0x487f: pop r12
0x4881: ret 
0x4888: call 0x1340
0x488d: cmp dword ptr [rax],0x9
0x4890: pop rbx
0x4891: pop rbp
0x4892: pop r12
0x4894: setne al
0x4897: movzx eax,al
0x489a: neg eax
0x489c: ret 
0x48a0: sub rsp,0x8
0x48a4: xor esi,esi
0x48a6: call 0x1530
0x48ab: mov rdx,rax
0x48ae: mov eax,0x1
0x48b3: test rdx,rdx
0x48b6: je 0x48d5
0x48b8: lea rdi,[rip+0xf21]
0x48bf: mov ecx,0x2
0x48c4: mov rsi,rdx
0x48c7: rep cmpsb [rsi],es:[rdi]
0x48c9: seta cl
0x48cc: sbb cl,0x0
0x48cf: xor eax,eax
0x48d1: test cl,cl
0x48d3: jne 0x48e0
0x48d5: add rsp,0x8
0x48d9: ret 
0x48e0: lea rdi,[rip+0xefb]
0x48e7: mov ecx,0x6
0x48ec: mov rsi,rdx
0x48ef: rep cmpsb [rsi],es:[rdi]
0x48f1: seta al
0x48f4: sbb al,0x0
0x48f6: test al,al
0x48f8: setne al
0x48fb: add rsp,0x8
0x48ff: ret 
0x4900: sub rsp,0x8
0x4904: mov edi,0xe
0x4909: call 0x1500
0x490e: test rax,rax
0x4911: je 0x4930
0x4913: cmp byte ptr [rax],0x0
0x4916: lea rdx,[rip+0xecb]
0x491d: cmove rax,rdx
0x4921: add rsp,0x8
0x4925: ret 
0x4930: lea rax,[rip+0xeb1]
0x4937: add rsp,0x8
0x493b: ret 
0x4940: push r12
0x4942: push rbp
0x4943: push rbx
0x4944: mov rbx,rdi
0x4947: call 0x14c0
0x494c: test eax,eax
0x494e: mov rdi,rbx
0x4951: js 0x49a7
0x4953: call 0x1510
0x4958: test eax,eax
0x495a: jne 0x4988
0x495c: mov rdi,rbx
0x495f: call 0x49c0
0x4964: test eax,eax
0x4966: je 0x49a4
0x4968: call 0x1340
0x496d: mov r12d,dword ptr [rax]
0x4970: mov rdi,rbx
0x4973: mov rbp,rax
0x4976: call 0x13b0
0x497b: test r12d,r12d
0x497e: jne 0x49b0
0x4980: pop rbx
0x4981: pop rbp
0x4982: pop r12
0x4984: ret 
0x4988: mov rdi,rbx
0x498b: call 0x14c0
0x4990: xor esi,esi
0x4992: mov edx,0x1
0x4997: mov edi,eax
0x4999: call 0x1450
0x499e: cmp rax,-0x1
0x49a2: jne 0x495c
0x49a4: mov rdi,rbx
0x49a7: pop rbx
0x49a8: pop rbp
0x49a9: pop r12
0x49ab: jmp 0x13b0
0x49b0: mov dword ptr [rbp],r12d
0x49b4: mov eax,0xffffffff
0x49b9: jmp 0x4980
0x49c0: test rdi,rdi
0x49c3: push rbx
0x49c4: mov rbx,rdi
0x49c7: je 0x49da
0x49c9: call 0x1510
0x49ce: test eax,eax
0x49d0: je 0x49da
0x49d2: test dword ptr [rbx],0x100
0x49d8: jne 0x49e8
0x49da: mov rdi,rbx
0x49dd: pop rbx
0x49de: jmp 0x14f0
0x49e8: mov rdi,rbx
0x49eb: mov edx,0x1
0x49f0: xor esi,esi
0x49f2: call 0x4a00
0x49f7: mov rdi,rbx
0x49fa: pop rbx
0x49fb: jmp 0x14f0
0x4a00: mov rax,qword ptr [rdi+0x8]
0x4a04: cmp qword ptr [rdi+0x10],rax
0x4a08: je 0x4a10
0x4a0a: jmp 0x1580
0x4a10: mov rax,qword ptr [rdi+0x20]
0x4a14: cmp qword ptr [rdi+0x28],rax
0x4a18: jne 0x4a0a
0x4a1a: cmp qword ptr [rdi+0x48],0x0
0x4a1f: jne 0x4a0a
0x4a21: push r12
0x4a23: push rbp
0x4a24: mov r12d,edx
0x4a27: push rbx
0x4a28: mov rbp,rsi
0x4a2b: mov rbx,rdi
0x4a2e: call 0x14c0
0x4a33: mov edx,r12d
0x4a36: mov rsi,rbp
0x4a39: mov edi,eax
0x4a3b: call 0x1450
0x4a40: cmp rax,-0x1
0x4a44: je 0x4a52
0x4a46: and dword ptr [rbx],-0x11
0x4a49: mov qword ptr [rbx+0x90],rax
0x4a50: xor eax,eax
0x4a52: pop rbx
0x4a53: pop rbp
0x4a54: pop r12
0x4a56: ret 
0x4a60: push r15
0x4a62: push r14
0x4a64: mov r15,rdx
0x4a67: push r13
0x4a69: push r12
0x4a6b: lea r12,[rip+0x2020de]
0x4a72: push rbp
0x4a73: lea rbp,[rip+0x2020de]
0x4a7a: push rbx
0x4a7b: mov r13d,edi
0x4a7e: mov r14,rsi
0x4a81: sub rbp,r12
0x4a84: sub rsp,0x8
0x4a88: sar rbp,0x3
0x4a8c: call 0x12f0
0x4a91: test rbp,rbp
0x4a94: je 0x4ab6
0x4a96: xor ebx,ebx
0x4a98: nop dword ptr [rax+rax]
0x4aa0: mov rdx,r15
0x4aa3: mov rsi,r14
0x4aa6: mov edi,r13d
0x4aa9: call qword ptr [r12+rbx*8]
0x4aad: add rbx,0x1
0x4ab1: cmp rbp,rbx
0x4ab4: jne 0x4aa0
0x4ab6: add rsp,0x8
0x4aba: pop rbx
0x4abb: pop rbp
0x4abc: pop r12
0x4abe: pop r13
0x4ac0: pop r14
0x4ac2: pop r15
0x4ac4: ret 
0x4ad0: rep ret 
