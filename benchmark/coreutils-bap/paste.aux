0x1378: sub rsp,0x8
0x137c: mov rax,qword ptr [rip+0x206c55]
0x1383: test rax,rax
0x1386: je 0x138a
0x1388: call rax
0x138a: add rsp,0x8
0x138e: ret 
0x1396: jmp qword ptr [rip+0x206abc]
0x13f0: jmp qword ptr [rip+0x206a92]
0x1400: jmp qword ptr [rip+0x206a8a]
0x1480: jmp qword ptr [rip+0x206a4a]
0x14a0: jmp qword ptr [rip+0x206a3a]
0x1500: jmp qword ptr [rip+0x206a0a]
0x1520: jmp qword ptr [rip+0x2069fa]
0x1570: jmp qword ptr [rip+0x2069d2]
0x1640: jmp qword ptr [rip+0x20696a]
0x1650: jmp qword ptr [rip+0x206962]
0x1660: jmp qword ptr [rip+0x20695a]
0x1670: jmp qword ptr [rip+0x206972]
0x16ad: nop dword ptr [rax]
0x17b1: nop dword ptr [rax]
0x18f4: lea rsi,[rip+0x3d5d]
0x18fb: mov rbx,rax
0x18fe: mov edx,0x5
0x1903: xor edi,edi
0x1905: call 0x1450
0x190a: mov rcx,rbx
0x190d: mov rdx,rax
0x1910: xor esi,esi
0x1912: mov edi,0x1
0x1917: xor eax,eax
0x1919: call 0x15d0
0x19a1: nop word ptr cs:[rax+rax]
0x19ab: nop dword ptr [rax+rax]
0x19da: hlt 
0x19db: nop dword ptr [rax+rax]
0x19e0: lea rdi,[rip+0x2066b9]
0x19e7: push rbp
0x19e8: lea rax,[rip+0x2066b1]
0x19ef: cmp rax,rdi
0x19f2: mov rbp,rsp
0x19f5: je 0x1a10
0x19f7: mov rax,qword ptr [rip+0x2065ca]
0x19fe: test rax,rax
0x1a01: je 0x1a10
0x1a03: pop rbp
0x1a04: jmp rax
0x1a10: pop rbp
0x1a11: ret 
0x1a20: lea rdi,[rip+0x206679]
0x1a27: lea rsi,[rip+0x206672]
0x1a2e: push rbp
0x1a2f: sub rsi,rdi
0x1a32: mov rbp,rsp
0x1a35: sar rsi,0x3
0x1a39: mov rax,rsi
0x1a3c: shr rax,0x3f
0x1a40: add rsi,rax
0x1a43: sar rsi, 1
0x1a46: je 0x1a60
0x1a48: mov rax,qword ptr [rip+0x206591]
0x1a4f: test rax,rax
0x1a52: je 0x1a60
0x1a54: pop rbp
0x1a55: jmp rax
0x1a60: pop rbp
0x1a61: ret 
0x1a81: push rbp
0x1a82: mov rbp,rsp
0x1a85: je 0x1a93
0x1a87: mov rdi,qword ptr [rip+0x20657a]
0x1a8e: call 0x1670
0x1a93: call 0x19e0
0x1a98: mov byte ptr [rip+0x206649],0x1
0x1a9f: pop rbp
0x1aa0: ret 
0x1ab0: push rbp
0x1ab1: mov rbp,rsp
0x1ab4: pop rbp
0x1ab5: jmp 0x1a20
0x1cf0: test eax,eax
0x1cf2: jns 0x1cab
0x1cf9: nop dword ptr [rax]
0x1eb6: mov esi,dword ptr [rsp+0x28]
0x1eba: lea rdx,[rip+0x37d4]
0x1ec1: xor edi,edi
0x1ec3: mov rcx,rax
0x1ec6: xor eax,eax
0x1ec8: call 0x15d0
0x1ecd: cmp r13,qword ptr [rip+0x2061dc]
0x1ed4: mov byte ptr [rsp+0x2f],0x0
0x1ed9: mov rdi,r13
0x1edc: jne 0x1d1b
0x1f76: mov rcx,rax
0x1f79: mov rax,qword ptr [rsp+0x18]
0x1f7e: lea rdx,[rip+0x3710]
0x1f85: xor edi,edi
0x1f87: mov esi,dword ptr [rax]
0x1f89: xor eax,eax
0x1f8b: call 0x15d0
0x1f90: mov byte ptr [rsp+0x2f],0x0
0x1f95: jmp 0x1d29
0x1fa2: test eax,eax
0x1fa4: jns 0x1dfe
0x1faa: jmp 0x1cf4
0x1fbb: test eax,eax
0x1fbd: jns 0x1e64
0x1fc3: jmp 0x1cf4
0x1fd8: test eax,eax
0x1fda: jns 0x1db7
0x1fe0: jmp 0x1cf4
0x2025: mov rbx,rax
0x2028: call 0x13d0
0x202d: mov esi,dword ptr [rax]
0x202f: lea rdx,[rip+0x365f]
0x2036: mov rcx,rbx
0x2039: mov edi,0x1
0x203e: xor eax,eax
0x2040: call 0x15d0
0x2069: nop dword ptr [rax]
0x2279: mov rcx,rax
0x227c: mov rax,qword ptr [rsp]
0x2280: lea rdx,[rip+0x340e]
0x2287: xor edi,edi
0x2289: mov esi,dword ptr [rax]
0x228b: xor eax,eax
0x228d: call 0x15d0
0x2292: mov byte ptr [rsp+0xb],0x0
0x2297: jmp 0x223a
0x22f5: lea rdx,[rip+0x3399]
0x22fc: mov rcx,rax
0x22ff: mov esi,r13d
0x2302: xor edi,edi
0x2304: xor eax,eax
0x2306: call 0x15d0
0x230b: mov byte ptr [rsp+0xb],0x0
0x2310: jmp 0x222d
0x2320: test eax,eax
0x2322: jns 0x2115
0x2328: call 0x1680
0x232d: nop dword ptr [rax]
0x233c: test eax,eax
0x233e: mov edx,dword ptr [rsp+0xc]
0x2342: jns 0x2212
0x2348: jmp 0x2328
0x2358: test eax,eax
0x235a: jns 0x2223
0x2360: jmp 0x2328
0x2370: test eax,eax
0x2372: jns 0x2108
0x2378: jmp 0x2328
0x2780: mov qword ptr [rip+0x205989],rdi
0x2787: ret 
0x2790: mov byte ptr [rip+0x205971],dil
0x2797: ret 
0x27a0: push rbp
0x27a1: push rbx
0x27a2: sub rsp,0x8
0x27a6: mov rdi,qword ptr [rip+0x2058fb]
0x27ad: call 0x5020
0x27b2: test eax,eax
0x27b4: je 0x27cc
0x27b6: call 0x13d0
0x27bb: cmp byte ptr [rip+0x205946],0x0
0x27c2: mov rbx,rax
0x27c5: je 0x27e3
0x27c7: cmp dword ptr [rax],0x20
0x27ca: jne 0x27e3
0x27cc: mov rdi,qword ptr [rip+0x20590d]
0x27d3: call 0x5020
0x27d8: test eax,eax
0x27da: jne 0x2822
0x27dc: add rsp,0x8
0x27e0: pop rbx
0x27e1: pop rbp
0x27e2: ret 
0x27e3: lea rsi,[rip+0x29fa]
0x27ea: xor edi,edi
0x27ec: mov edx,0x5
0x27f1: call 0x1450
0x27f6: mov rdi,qword ptr [rip+0x205913]
0x27fd: mov rbp,rax
0x2800: test rdi,rdi
0x2803: je 0x282d
0x2805: call 0x43a0
0x280a: mov esi,dword ptr [rbx]
0x280c: lea rdx,[rip+0x2e7e]
0x2813: mov rcx,rax
0x2816: mov r8,rbp
0x2819: xor edi,edi
0x281b: xor eax,eax
0x281d: call 0x15d0
0x2822: mov edi,dword ptr [rip+0x2057f8]
0x2828: call 0x13f0
0x282d: mov esi,dword ptr [rbx]
0x282f: lea rdx,[rip+0x2e5f]
0x2836: mov rcx,rax
0x2839: xor edi,edi
0x283b: xor eax,eax
0x283d: call 0x15d0
0x2842: jmp 0x2822
0x2850: jmp 0x14f0
0x292f: nop 
0x2930: push rbp
0x2931: push rbx
0x2932: mov rbp,rdi
0x2935: mov ebx,esi
0x2937: sub rsp,0x8
0x293b: call 0x5100
0x2940: movzx edx,byte ptr [rax]
0x2943: and edx,-0x21
0x2946: cmp dl,0x55
0x2949: je 0x29c0
0x294b: cmp dl,0x47
0x294e: je 0x2970
0x2950: lea rax,[rip+0x2d94]
0x2957: lea rdx,[rip+0x2d8f]
0x295e: cmp ebx,0x9
0x2961: cmovne rax,rdx
0x2965: add rsp,0x8
0x2969: pop rbx
0x296a: pop rbp
0x296b: ret 
0x2970: movzx edx,byte ptr [rax+0x1]
0x2974: and edx,-0x21
0x2977: cmp dl,0x42
0x297a: jne 0x2950
0x297c: cmp byte ptr [rax+0x2],0x31
0x2980: jne 0x2950
0x2982: cmp byte ptr [rax+0x3],0x38
0x2986: jne 0x2950
0x2988: cmp byte ptr [rax+0x4],0x30
0x298c: jne 0x2950
0x298e: cmp byte ptr [rax+0x5],0x33
0x2992: jne 0x2950
0x2994: cmp byte ptr [rax+0x6],0x30
0x2998: jne 0x2950
0x299a: cmp byte ptr [rax+0x7],0x0
0x299e: jne 0x2950
0x29a0: cmp byte ptr [rbp],0x60
0x29a4: lea rax,[rip+0x2d39]
0x29ab: lea rdx,[rip+0x2d36]
0x29b2: cmovne rax,rdx
0x29b6: add rsp,0x8
0x29ba: pop rbx
0x29bb: pop rbp
0x29bc: ret 
0x29c0: movzx edx,byte ptr [rax+0x1]
0x29c4: and edx,-0x21
0x29c7: cmp dl,0x54
0x29ca: jne 0x2950
0x29cc: movzx edx,byte ptr [rax+0x2]
0x29d0: and edx,-0x21
0x29d3: cmp dl,0x46
0x29d6: jne 0x2950
0x29dc: cmp byte ptr [rax+0x3],0x2d
0x29e0: jne 0x2950
0x29e6: cmp byte ptr [rax+0x4],0x38
0x29ea: jne 0x2950
0x29f0: cmp byte ptr [rax+0x5],0x0
0x29f4: jne 0x2950
0x29fa: cmp byte ptr [rbp],0x60
0x29fe: lea rax,[rip+0x2cd7]
0x2a05: lea rdx,[rip+0x2cd4]
0x2a0c: cmovne rax,rdx
0x2a10: add rsp,0x8
0x2a14: pop rbx
0x2a15: pop rbp
0x2a16: ret 
0x2af3: xor r11d,r11d
0x2af6: mov rax,rbp
0x2af9: mov r8d,r12d
0x2afc: mov rbp,r11
0x2aff: mov r11,rax
0x2b02: nop word ptr [rax+rax]
0x2b08: cmp r11,rbp
0x2b0b: setne r12b
0x2b0f: cmp r11,-0x1
0x2b13: jne 0x2b22
0x2b15: mov rax,qword ptr [rsp+0x10]
0x2b1a: cmp byte ptr [rax+rbp],0x0
0x2b1e: setne r12b
0x2b22: test r12b,r12b
0x2b25: je 0x3180
0x2b2b: cmp dword ptr [rsp+0x8],0x2
0x2b30: mov rdi,qword ptr [rsp+0x10]
0x2b35: lea r9,[rdi+rbp]
0x2b39: setne al
0x2b3c: and al,byte ptr [rsp+0xd]
0x2b40: mov r10d,eax
0x2b43: je 0x2bf0
0x2b49: mov rax,qword ptr [rsp+0x18]
0x2b4e: test rax,rax
0x2b51: je 0x2f80
0x2b57: cmp r11,-0x1
0x2b5b: lea rbx,[rbp+rax]
0x2b60: jne 0x2b90
0x2b62: cmp rax,0x1
0x2b66: jbe 0x2b90
0x2b68: mov byte ptr [rsp+0x38],r8b
0x2b6d: mov byte ptr [rsp+0x30],r10b
0x2b72: mov qword ptr [rsp+0x28],r9
0x2b77: call 0x1470
0x2b7c: movzx r8d,byte ptr [rsp+0x38]
0x2b82: movzx r10d,byte ptr [rsp+0x30]
0x2b88: mov r11,rax
0x2b8b: mov r9,qword ptr [rsp+0x28]
0x2b90: cmp rbx,r11
0x2b93: mov byte ptr [rsp+0x28],r10b
0x2b98: ja 0x3150
0x2b9e: mov rdx,qword ptr [rsp+0x18]
0x2ba3: mov rsi,qword ptr [rsp+0x48]
0x2ba8: mov rdi,r9
0x2bab: mov qword ptr [rsp+0x40],r11
0x2bb0: mov byte ptr [rsp+0x38],r8b
0x2bb5: mov qword ptr [rsp+0x30],r9
0x2bba: call 0x1500
0x2bbf: test eax,eax
0x2bc1: mov r9,qword ptr [rsp+0x30]
0x2bc6: movzx r8d,byte ptr [rsp+0x38]
0x2bcc: mov r11,qword ptr [rsp+0x40]
0x2bd1: jne 0x3150
0x2bd7: cmp byte ptr [rsp+0xf],0x0
0x2bdc: movzx r10d,byte ptr [rsp+0x28]
0x2be2: jne 0x3b65
0x2be8: nop dword ptr [rax+rax]
0x2bf0: movzx ebx,byte ptr [r9]
0x2bf4: cmp bl,0x7e
0x2bf7: ja 0x2f18
0x2bfd: lea rcx,[rip+0x2b68]
0x2c04: movzx edx,bl
0x2c07: movsxd rax,dword ptr [rcx+rdx*4]
0x2c0b: add rax,rcx
0x2c0e: jmp rax
0x2c48: cmp byte ptr [rsp+0xd],0x1
0x2c4d: jne 0x2d62
0x2c53: test dl,dl
0x2c55: jne 0x2d62
0x2c5b: mov rsi,qword ptr [rsp+0x20]
0x2c60: test rsi,rsi
0x2c63: je 0x2c79
0x2c65: mov edx,ebx
0x2c67: shr dl,0x5
0x2c6a: movzx edx,dl
0x2c6d: mov edx,dword ptr [rsi+rdx*4]
0x2c70: btl edx,ebx
0x2c73: jb 0x2dc3
0x2c79: test r10b,r10b
0x2c7c: jne 0x2dc3
0x2c82: xor eax,0x1
0x2c85: add rbp,0x1
0x2c89: and eax,r8d
0x2c8c: test al,al
0x2c8e: je 0x2cb0
0x2c90: cmp r13,r15
0x2c93: jbe 0x2c9a
0x2c95: mov byte ptr [r14+r15],0x27
0x2c9a: lea rax,[r15+0x1]
0x2c9e: cmp r13,rax
0x2ca1: jbe 0x2ca9
0x2ca3: mov byte ptr [r14+r15+0x1],0x27
0x2ca9: add r15,0x2
0x2cad: xor r8d,r8d
0x2cb0: cmp r15,r13
0x2cb3: jae 0x2cb9
0x2cb5: mov byte ptr [r14+r15],bl
0x2cb9: movzx edi,byte ptr [rsp+0xe]
0x2cbe: add r15,0x1
0x2cc2: mov eax,0x0
0x2cc7: test r12b,r12b
0x2cca: cmove edi,eax
0x2ccd: mov byte ptr [rsp+0xe],dil
0x2cd2: jmp 0x2b08
0x2d62: cmp byte ptr [rsp+0xf],0x0
0x2d67: jne 0x2c5b
0x2d6d: jmp 0x2c79
0x2dc3: cmp dword ptr [rsp+0x8],0x2
0x2dc8: sete dl
0x2dcb: cmp byte ptr [rsp+0xf],0x0
0x2dd0: mov eax,edx
0x2dd2: jne 0x3628
0x2dd8: mov eax,r8d
0x2ddb: xor eax,0x1
0x2dde: and al,dl
0x2de0: je 0x2e11
0x2de2: cmp r13,r15
0x2de5: jbe 0x2dec
0x2de7: mov byte ptr [r14+r15],0x27
0x2dec: lea rdx,[r15+0x1]
0x2df0: cmp r13,rdx
0x2df3: jbe 0x2dfb
0x2df5: mov byte ptr [r14+r15+0x1],0x24
0x2dfb: lea rdx,[r15+0x2]
0x2dff: cmp r13,rdx
0x2e02: jbe 0x2e0a
0x2e04: mov byte ptr [r14+r15+0x2],0x27
0x2e0a: add r15,0x3
0x2e0e: mov r8d,eax
0x2e11: cmp r13,r15
0x2e14: jbe 0x2e1b
0x2e16: mov byte ptr [r14+r15],0x5c
0x2e1b: add r15,0x1
0x2e1f: add rbp,0x1
0x2e23: jmp 0x2cb0
0x2f10: xor r10d,r10d
0x2f13: nop dword ptr [rax+rax]
0x2f18: cmp qword ptr [rsp+0x58],0x1
0x2f1e: jne 0x32c8
0x2f24: mov qword ptr [rsp+0x38],r11
0x2f29: mov byte ptr [rsp+0x30],r8b
0x2f2e: mov byte ptr [rsp+0x28],r10b
0x2f33: call 0x1660
0x2f38: mov rcx,qword ptr [rax]
0x2f3b: movzx edx,bl
0x2f3e: movzx r10d,byte ptr [rsp+0x28]
0x2f44: movzx r8d,byte ptr [rsp+0x30]
0x2f4a: mov r11,qword ptr [rsp+0x38]
0x2f4f: mov edi,0x1
0x2f54: movzx eax,word ptr [rcx+rdx*2]
0x2f58: and ax,0x4000
0x2f5c: setne r12b
0x2f60: sete al
0x2f63: and al,byte ptr [rsp+0xd]
0x2f67: test al,al
0x2f69: jne 0x3901
0x2f6f: cmp dword ptr [rsp+0x8],0x2
0x2f74: sete dl
0x2f77: jmp 0x2c48
0x2f80: movzx ebx,byte ptr [r9]
0x2f84: cmp bl,0x7e
0x2f87: ja 0x2f10
0x2f89: lea rcx,[rip+0x29d8]
0x2f90: movzx edx,bl
0x2f93: movsxd rax,dword ptr [rcx+rdx*4]
0x2f97: add rax,rcx
0x2f9a: jmp rax
0x3150: xor r10d,r10d
0x3153: jmp 0x2bf0
0x3180: cmp dword ptr [rsp+0x8],0x2
0x3185: movzx ebx,byte ptr [rsp+0xf]
0x318a: mov r12d,r8d
0x318d: mov rbp,r11
0x3190: sete dl
0x3193: mov eax,ebx
0x3195: test r15,r15
0x3198: sete cl
0x319b: and eax,edx
0x319d: and al,cl
0x319f: jne 0x3c06
0x31a5: mov eax,ebx
0x31a7: xor eax,0x1
0x31aa: and dl,al
0x31ac: je 0x3b1c
0x31b2: cmp byte ptr [rsp+0x7c],0x0
0x31b7: je 0x3b1a
0x31bd: cmp byte ptr [rsp+0xe],0x0
0x31c2: jne 0x3bbd
0x31c8: test r13,r13
0x31cb: sete al
0x31ce: cmp qword ptr [rsp+0x50],0x0
0x31d4: setne dl
0x31d7: and al,dl
0x31d9: je 0x3bfc
0x31df: mov r13,qword ptr [rsp+0x50]
0x31e4: lea rbx,[rip+0x2502]
0x31eb: mov byte ptr [r14],0x27
0x31ef: mov dword ptr [rsp+0x8],0x2
0x31f7: mov r15d,0x1
0x31fd: mov qword ptr [rsp+0x18],0x1
0x3206: mov byte ptr [rsp+0xf],0x0
0x320b: mov qword ptr [rsp+0x48],rbx
0x3210: mov byte ptr [rsp+0x7c],al
0x3214: jmp 0x2af3
0x32c8: lea rax,[rsp+0xa0]
0x32d0: cmp r11,-0x1
0x32d4: mov qword ptr [rsp+0xa0],0x0
0x32e0: mov qword ptr [rsp+0x28],rax
0x32e5: jne 0x3314
0x32e7: mov rdi,qword ptr [rsp+0x10]
0x32ec: mov byte ptr [rsp+0x40],r8b
0x32f1: mov byte ptr [rsp+0x38],r10b
0x32f6: mov qword ptr [rsp+0x30],r9
0x32fb: call 0x1470
0x3300: movzx r8d,byte ptr [rsp+0x40]
0x3306: movzx r10d,byte ptr [rsp+0x38]
0x330c: mov r11,rax
0x330f: mov r9,qword ptr [rsp+0x30]
0x3314: lea rax,[rsp+0x9c]
0x331c: xor ecx,ecx
0x331e: mov byte ptr [rsp+0x7e],bl
0x3322: mov byte ptr [rsp+0x7d],r8b
0x3327: mov rbx,rcx
0x332a: mov qword ptr [rsp+0x88],r9
0x3332: mov qword ptr [rsp+0x38],rax
0x3337: mov byte ptr [rsp+0x7f],r10b
0x333c: mov qword ptr [rsp+0x80],r15
0x3344: mov qword ptr [rsp+0x40],r14
0x3349: mov qword ptr [rsp+0x70],r13
0x334e: mov qword ptr [rsp+0x30],r11
0x3353: mov rax,qword ptr [rsp+0x10]
0x3358: lea r14,[rbp+rbx]
0x335d: mov rdx,qword ptr [rsp+0x30]
0x3362: mov rcx,qword ptr [rsp+0x28]
0x3367: mov rdi,qword ptr [rsp+0x38]
0x336c: lea r13,[rax+r14]
0x3370: sub rdx,r14
0x3373: mov rsi,r13
0x3376: call 0x4f90
0x337b: test rax,rax
0x337e: mov r15,rax
0x3381: je 0x33d1
0x3383: cmp rax,-0x1
0x3387: je 0x39a5
0x338d: cmp rax,-0x2
0x3391: je 0x3931
0x3397: cmp dword ptr [rsp+0x8],0x2
0x339c: sete al
0x339f: and al,byte ptr [rsp+0xf]
0x33a3: jne 0x3540
0x33a9: mov edi,dword ptr [rsp+0x9c]
0x33b0: call 0x1650
0x33b5: mov rdi,qword ptr [rsp+0x28]
0x33ba: test eax,eax
0x33bc: mov eax,0x0
0x33c1: cmove r12d,eax
0x33c5: add rbx,r15
0x33c8: call 0x1640
0x33cd: test eax,eax
0x33cf: je 0x3353
0x33d1: mov edx,r12d
0x33d4: mov rdi,rbx
0x33d7: movzx r8d,byte ptr [rsp+0x7d]
0x33dd: xor edx,0x1
0x33e0: movzx ebx,byte ptr [rsp+0x7e]
0x33e5: movzx r10d,byte ptr [rsp+0x7f]
0x33eb: and dl,byte ptr [rsp+0xd]
0x33ef: mov r15,qword ptr [rsp+0x80]
0x33f7: mov r14,qword ptr [rsp+0x40]
0x33fc: mov r13,qword ptr [rsp+0x70]
0x3401: mov r11,qword ptr [rsp+0x30]
0x3406: cmp rdi,0x1
0x340a: jbe 0x3a0b
0x3410: mov rcx,rdi
0x3413: xor esi,esi
0x3415: movzx r9d,byte ptr [rsp+0xf]
0x341b: add rcx,rbp
0x341e: mov rdi,qword ptr [rsp+0x10]
0x3423: jmp 0x34de
0x3430: cmp dword ptr [rsp+0x8],0x2
0x3435: sete al
0x3438: test r9b,r9b
0x343b: jne 0x38f0
0x3441: mov esi,r8d
0x3444: xor esi,0x1
0x3447: and al,sil
0x344a: je 0x347b
0x344c: cmp r13,r15
0x344f: jbe 0x3456
0x3451: mov byte ptr [r14+r15],0x27
0x3456: lea rsi,[r15+0x1]
0x345a: cmp r13,rsi
0x345d: jbe 0x3465
0x345f: mov byte ptr [r14+r15+0x1],0x24
0x3465: lea rsi,[r15+0x2]
0x3469: cmp r13,rsi
0x346c: jbe 0x3474
0x346e: mov byte ptr [r14+r15+0x2],0x27
0x3474: add r15,0x3
0x3478: mov r8d,eax
0x347b: cmp r13,r15
0x347e: jbe 0x3485
0x3480: mov byte ptr [r14+r15],0x5c
0x3485: lea rax,[r15+0x1]
0x3489: cmp r13,rax
0x348c: jbe 0x349b
0x348e: mov eax,ebx
0x3490: shr al,0x6
0x3493: add eax,0x30
0x3496: mov byte ptr [r14+r15+0x1],al
0x349b: lea rax,[r15+0x2]
0x349f: cmp r13,rax
0x34a2: jbe 0x34b4
0x34a4: mov eax,ebx
0x34a6: shr al,0x3
0x34a9: and eax,0x7
0x34ac: add eax,0x30
0x34af: mov byte ptr [r14+r15+0x2],al
0x34b4: and ebx,0x7
0x34b7: add rbp,0x1
0x34bb: add r15,0x3
0x34bf: add ebx,0x30
0x34c2: cmp rbp,rcx
0x34c5: jae 0x2cb0
0x34cb: mov esi,edx
0x34cd: cmp r13,r15
0x34d0: jbe 0x34d6
0x34d2: mov byte ptr [r14+r15],bl
0x34d6: movzx ebx,byte ptr [rdi+rbp]
0x34da: add r15,0x1
0x34de: test dl,dl
0x34e0: jne 0x3430
0x34e6: mov eax,esi
0x34e8: xor eax,0x1
0x34eb: and eax,r8d
0x34ee: test r10b,r10b
0x34f1: je 0x3501
0x34f3: cmp r13,r15
0x34f6: jbe 0x34fd
0x34f8: mov byte ptr [r14+r15],0x5c
0x34fd: add r15,0x1
0x3501: add rbp,0x1
0x3505: cmp rbp,rcx
0x3508: jae 0x2c8c
0x350e: test al,al
0x3510: je 0x390e
0x3516: cmp r13,r15
0x3519: jbe 0x3520
0x351b: mov byte ptr [r14+r15],0x27
0x3520: lea rax,[r15+0x1]
0x3524: cmp r13,rax
0x3527: jbe 0x352f
0x3529: mov byte ptr [r14+r15+0x1],0x27
0x352f: add r15,0x2
0x3533: xor r10d,r10d
0x3536: xor r8d,r8d
0x3539: jmp 0x34cd
0x3540: cmp r15,0x1
0x3544: je 0x33a9
0x354a: mov rdi,qword ptr [rsp+0x10]
0x354f: lea rcx,[rdi+r15]
0x3553: lea rdx,[rdi+r14+0x1]
0x3558: lea r8,[rcx+r14]
0x355c: jmp 0x356d
0x3560: add rdx,0x1
0x3564: cmp r8,rdx
0x3567: je 0x33a9
0x356d: movzx ecx,byte ptr [rdx]
0x3570: sub ecx,0x5b
0x3573: cmp cl,0x21
0x3576: ja 0x3560
0x3578: mov esi,0x1
0x357d: shl rsi,cl
0x3580: mov rcx,rsi
0x3583: movabsq rsi,0x20000002b
0x358d: test rcx,rsi
0x3590: je 0x3560
0x3592: mov r14,qword ptr [rsp+0x40]
0x3597: mov r13,qword ptr [rsp+0x70]
0x359c: mov rbp,qword ptr [rsp+0x30]
0x35a1: mov dword ptr [rsp+0x8],0x2
0x35a9: cmp byte ptr [rsp+0xd],0x0
0x35ae: je 0x35c0
0x35b0: test al,al
0x35b2: mov eax,0x4
0x35b7: cmove eax,dword ptr [rsp+0x8]
0x35bc: mov dword ptr [rsp+0x8],eax
0x35c0: sub rsp,0x8
0x35c4: mov rcx,rbp
0x35c7: mov rsi,r13
0x35ca: push qword ptr [rsp+0x68]
0x35ce: push qword ptr [rsp+0x78]
0x35d2: mov rdi,r14
0x35d5: push 0x0
0x35d7: mov r9d,dword ptr [rsp+0x98]
0x35df: mov r8d,dword ptr [rsp+0x28]
0x35e4: mov rdx,qword ptr [rsp+0x30]
0x35e9: and r9d,-0x3
0x35ed: call 0x2a20
0x35f2: add rsp,0x20
0x35f6: mov r15,rax
0x35f9: mov rbx,qword ptr [rsp+0xa8]
0x3601: xor rbx,qword ptr fs:0x28
0x360a: mov rax,r15
0x360d: jne 0x3c13
0x3613: add rsp,0xb8
0x361a: pop rbx
0x361b: pop rbp
0x361c: pop r12
0x361e: pop r13
0x3620: pop r14
0x3622: pop r15
0x3624: ret 
0x3628: mov rbp,r11
0x362b: jmp 0x35a9
0x3691: test r13,r13
0x3694: jne 0x3c2a
0x369a: lea rax,[rip+0x204c]
0x36a1: mov qword ptr [rsp+0x50],0x0
0x36aa: mov byte ptr [rsp+0xe],0x1
0x36af: mov byte ptr [rsp+0x7c],0x0
0x36b4: xor r12d,r12d
0x36b7: mov byte ptr [rsp+0xf],0x0
0x36bc: mov qword ptr [rsp+0x18],0x1
0x36c5: mov qword ptr [rsp+0x48],rax
0x36ca: mov r15d,0x1
0x36d0: mov dword ptr [rsp+0x8],0x2
0x36d8: jmp 0x2af3
0x38f0: movzx ebx,byte ptr [rsp+0xf]
0x38f5: mov rbp,r11
0x38f8: mov byte ptr [rsp+0xd],bl
0x38fc: jmp 0x35a9
0x3901: movzx edx,byte ptr [rsp+0xd]
0x3906: xor r12d,r12d
0x3909: jmp 0x3410
0x390e: xor r10d,r10d
0x3911: jmp 0x34cd
0x3931: mov r11,qword ptr [rsp+0x30]
0x3936: mov rsi,r14
0x3939: mov rcx,r13
0x393c: mov rax,rbx
0x393f: mov rdi,rbx
0x3942: movzx r8d,byte ptr [rsp+0x7d]
0x3948: movzx ebx,byte ptr [rsp+0x7e]
0x394d: mov r9,qword ptr [rsp+0x88]
0x3955: cmp rsi,r11
0x3958: movzx r10d,byte ptr [rsp+0x7f]
0x395e: mov r15,qword ptr [rsp+0x80]
0x3966: mov r14,qword ptr [rsp+0x40]
0x396b: mov r13,qword ptr [rsp+0x70]
0x3970: jae 0x3998
0x3972: cmp byte ptr [rcx],0x0
0x3975: jne 0x3987
0x3977: jmp 0x3998
0x3980: cmp byte ptr [r9+rax],0x0
0x3985: je 0x3995
0x3987: add rax,0x1
0x398b: lea rdx,[rbp+rax]
0x3990: cmp r11,rdx
0x3993: ja 0x3980
0x3995: mov rdi,rax
0x3998: movzx edx,byte ptr [rsp+0xd]
0x399d: xor r12d,r12d
0x39a0: jmp 0x3406
0x39a5: mov rdi,rbx
0x39a8: movzx r8d,byte ptr [rsp+0x7d]
0x39ae: movzx ebx,byte ptr [rsp+0x7e]
0x39b3: movzx r10d,byte ptr [rsp+0x7f]
0x39b9: mov r15,qword ptr [rsp+0x80]
0x39c1: xor r12d,r12d
0x39c4: mov r14,qword ptr [rsp+0x40]
0x39c9: mov r13,qword ptr [rsp+0x70]
0x39ce: mov r11,qword ptr [rsp+0x30]
0x39d3: movzx edx,byte ptr [rsp+0xd]
0x39d8: jmp 0x3406
0x3a0b: mov eax,edx
0x3a0d: jmp 0x2f67
0x3b1a: mov eax,edx
0x3b1c: mov rbx,qword ptr [rsp+0x48]
0x3b21: test rbx,rbx
0x3b24: je 0x3b52
0x3b26: test al,al
0x3b28: je 0x3b52
0x3b2a: movzx ecx,byte ptr [rbx]
0x3b2d: mov rax,rbx
0x3b30: test cl,cl
0x3b32: je 0x3b52
0x3b34: mov rdx,r15
0x3b37: sub rax,r15
0x3b3a: cmp r13,rdx
0x3b3d: jbe 0x3b43
0x3b3f: mov byte ptr [r14+rdx],cl
0x3b43: add rdx,0x1
0x3b47: movzx ecx,byte ptr [rax+rdx]
0x3b4b: test cl,cl
0x3b4d: jne 0x3b3a
0x3b4f: mov r15,rdx
0x3b52: cmp r13,r15
0x3b55: jbe 0x35f9
0x3b5b: mov byte ptr [r14+r15],0x0
0x3b60: jmp 0x35f9
0x3b65: cmp dword ptr [rsp+0x8],0x2
0x3b6a: movzx ebx,byte ptr [rsp+0xf]
0x3b6f: mov rbp,r11
0x3b72: sete al
0x3b75: mov byte ptr [rsp+0xd],bl
0x3b79: jmp 0x35a9
0x3bbd: sub rsp,0x8
0x3bc1: mov r8d,0x5
0x3bc7: mov rcx,r11
0x3bca: push qword ptr [rsp+0x68]
0x3bce: push qword ptr [rsp+0x78]
0x3bd2: mov rdi,r14
0x3bd5: push qword ptr [rsp+0x38]
0x3bd9: mov r9d,dword ptr [rsp+0x98]
0x3be1: mov rdx,qword ptr [rsp+0x30]
0x3be6: mov rsi,qword ptr [rsp+0x70]
0x3beb: call 0x2a20
0x3bf0: add rsp,0x20
0x3bf4: mov r15,rax
0x3bf7: jmp 0x35f9
0x3bfc: movzx eax,byte ptr [rsp+0x7c]
0x3c01: jmp 0x3b1c
0x3c06: mov dword ptr [rsp+0x8],0x2
0x3c0e: jmp 0x35a9
0x3c13: call 0x1480
0x3c18: mov byte ptr [rsp+0xd],0x0
0x3c1d: jmp 0x3691
0x3c2a: mov byte ptr [rsp+0xe],0x1
0x3c2f: xor eax,eax
0x3c31: xor r12d,r12d
0x3c34: mov qword ptr [rsp+0x50],0x0
0x3c3d: jmp 0x31e4
0x3c54: nop 
0x3c56: nop word ptr cs:[rax+rax]
0x3d4c: add rsp,0x20
0x3d50: mov r11,qword ptr [rsp+0x10]
0x3d55: cmp r11,rax
0x3d58: ja 0x3dc1
0x3d5a: lea rsi,[rax+0x1]
0x3d5e: lea rax,[rip+0x2043bb]
0x3d65: cmp r12,rax
0x3d68: mov qword ptr [rbx],rsi
0x3d6b: je 0x3d7f
0x3d6d: mov rdi,r12
0x3d70: mov qword ptr [rsp+0x10],rsi
0x3d75: call 0x13b0
0x3d7a: mov rsi,qword ptr [rsp+0x10]
0x3d7f: mov rdi,rsi
0x3d82: mov qword ptr [rsp+0x10],rsi
0x3d87: call 0x4be0
0x3d8c: sub rsp,0x8
0x3d90: mov qword ptr [rbx+0x8],rax
0x3d94: mov r8d,dword ptr [rbp]
0x3d98: push qword ptr [rbp+0x30]
0x3d9b: push qword ptr [rbp+0x28]
0x3d9e: mov rcx,r14
0x3da1: push r15
0x3da3: mov r9d,dword ptr [rsp+0x3c]
0x3da8: mov rdi,rax
0x3dab: mov rdx,qword ptr [rsp+0x28]
0x3db0: mov rsi,qword ptr [rsp+0x30]
0x3db5: mov r12,rax
0x3db8: call 0x2a20
0x3dbd: add rsp,0x20
0x3dc1: mov eax,dword ptr [rsp+0x18]
0x3dc5: mov dword ptr [r13],eax
0x3dc9: add rsp,0x28
0x3dcd: mov rax,r12
0x3dd0: pop rbx
0x3dd1: pop rbp
0x3dd2: pop r12
0x3dd4: pop r13
0x3dd6: pop r14
0x3dd8: pop r15
0x3dda: ret 
0x3e01: call 0x13c0
0x3e06: call 0x4e30
0x3e0b: nop dword ptr [rax+rax]
0x3e10: push r12
0x3e12: push rbp
0x3e13: push rbx
0x3e14: mov rbx,rdi
0x3e17: call 0x13d0
0x3e1c: mov r12d,dword ptr [rax]
0x3e1f: mov rbp,rax
0x3e22: lea rax,[rip+0x2043f7]
0x3e29: test rbx,rbx
0x3e2c: mov esi,0x38
0x3e31: cmove rbx,rax
0x3e35: mov rdi,rbx
0x3e38: call 0x4de0
0x3e3d: mov dword ptr [rbp],r12d
0x3e41: pop rbx
0x3e42: pop rbp
0x3e43: pop r12
0x3e45: ret 
0x3e50: lea rax,[rip+0x2043c9]
0x3e57: test rdi,rdi
0x3e5a: cmove rdi,rax
0x3e5e: mov eax,dword ptr [rdi]
0x3e60: ret 
0x3e70: lea rax,[rip+0x2043a9]
0x3e77: test rdi,rdi
0x3e7a: cmove rdi,rax
0x3e7e: mov dword ptr [rdi],esi
0x3e80: ret 
0x3e90: lea rax,[rip+0x204389]
0x3e97: test rdi,rdi
0x3e9a: mov ecx,esi
0x3e9c: cmove rdi,rax
0x3ea0: mov eax,esi
0x3ea2: and ecx,0x1f
0x3ea5: shr al,0x5
0x3ea8: movzx eax,al
0x3eab: lea rdi,[rdi+rax*4+0x8]
0x3eb0: mov esi,dword ptr [rdi]
0x3eb2: mov eax,esi
0x3eb4: shr eax,cl
0x3eb6: xor edx,eax
0x3eb8: and eax,0x1
0x3ebb: and edx,0x1
0x3ebe: shl edx,cl
0x3ec0: xor edx,esi
0x3ec2: mov dword ptr [rdi],edx
0x3ec4: ret 
0x3ed0: lea rax,[rip+0x204349]
0x3ed7: test rdi,rdi
0x3eda: cmove rdi,rax
0x3ede: mov eax,dword ptr [rdi+0x4]
0x3ee1: mov dword ptr [rdi+0x4],esi
0x3ee4: ret 
0x3ef0: lea rax,[rip+0x204329]
0x3ef7: test rdi,rdi
0x3efa: cmove rdi,rax
0x3efe: test rsi,rsi
0x3f01: mov dword ptr [rdi],0xa
0x3f07: je 0x3f17
0x3f09: test rdx,rdx
0x3f0c: je 0x3f17
0x3f0e: mov qword ptr [rdi+0x28],rsi
0x3f12: mov qword ptr [rdi+0x30],rdx
0x3f16: ret 
0x3f17: sub rsp,0x8
0x3f1b: call 0x13c0
0x3f20: push r15
0x3f22: push r14
0x3f24: lea rax,[rip+0x2042f5]
0x3f2b: push r13
0x3f2d: push r12
0x3f2f: mov r13,rdi
0x3f32: push rbp
0x3f33: push rbx
0x3f34: mov rbx,r8
0x3f37: mov r14,rsi
0x3f3a: mov r15,rdx
0x3f3d: sub rsp,0x18
0x3f41: test r8,r8
0x3f44: cmove rbx,rax
0x3f48: mov qword ptr [rsp+0x8],rcx
0x3f4d: call 0x13d0
0x3f52: mov r12d,dword ptr [rax]
0x3f55: mov rbp,rax
0x3f58: lea rax,[rbx+0x8]
0x3f5c: sub rsp,0x8
0x3f60: mov r9d,dword ptr [rbx+0x4]
0x3f64: push qword ptr [rbx+0x30]
0x3f67: mov r8d,dword ptr [rbx]
0x3f6a: push qword ptr [rbx+0x28]
0x3f6d: mov rdx,r15
0x3f70: push rax
0x3f71: mov rcx,qword ptr [rsp+0x28]
0x3f76: mov rsi,r14
0x3f79: mov rdi,r13
0x3f7c: call 0x2a20
0x3f81: mov dword ptr [rbp],r12d
0x3f85: add rsp,0x38
0x3f89: pop rbx
0x3f8a: pop rbp
0x3f8b: pop r12
0x3f8d: pop r13
0x3f8f: pop r14
0x3f91: pop r15
0x3f93: ret 
0x3fa0: push r15
0x3fa2: push r14
0x3fa4: lea rax,[rip+0x204275]
0x3fab: push r13
0x3fad: push r12
0x3faf: mov r12,rdx
0x3fb2: push rbp
0x3fb3: push rbx
0x3fb4: mov rbx,rcx
0x3fb7: mov r14,rdi
0x3fba: mov r15,rsi
0x3fbd: sub rsp,0x38
0x3fc1: test rcx,rcx
0x3fc4: cmove rbx,rax
0x3fc8: xor ebp,ebp
0x3fca: call 0x13d0
0x3fcf: test r12,r12
0x3fd2: mov r13,rax
0x3fd5: mov eax,dword ptr [rax]
0x3fd7: sete bpl
0x3fdb: or ebp,dword ptr [rbx+0x4]
0x3fde: lea r10,[rbx+0x8]
0x3fe2: sub rsp,0x8
0x3fe6: mov r8d,dword ptr [rbx]
0x3fe9: mov rcx,r15
0x3fec: mov dword ptr [rsp+0x14],eax
0x3ff0: push qword ptr [rbx+0x30]
0x3ff3: mov rdx,r14
0x3ff6: push qword ptr [rbx+0x28]
0x3ff9: push r10
0x3ffb: xor esi,esi
0x3ffd: mov r9d,ebp
0x4000: xor edi,edi
0x4002: mov qword ptr [rsp+0x40],r10
0x4007: call 0x2a20
0x400c: lea rsi,[rax+0x1]
0x4010: mov qword ptr [rsp+0x48],rax
0x4015: add rsp,0x20
0x4019: mov rdi,rsi
0x401c: mov qword ptr [rsp+0x18],rsi
0x4021: call 0x4be0
0x4026: mov qword ptr [rsp+0x10],rax
0x402b: sub rsp,0x8
0x402f: push qword ptr [rbx+0x30]
0x4032: push qword ptr [rbx+0x28]
0x4035: mov r10,qword ptr [rsp+0x38]
0x403a: mov r9d,ebp
0x403d: mov r8d,dword ptr [rbx]
0x4040: mov rcx,r15
0x4043: mov rdx,r14
0x4046: mov rdi,rax
0x4049: push r10
0x404b: mov rsi,qword ptr [rsp+0x38]
0x4050: call 0x2a20
0x4055: mov eax,dword ptr [rsp+0x2c]
0x4059: add rsp,0x20
0x405d: test r12,r12
0x4060: mov dword ptr [r13],eax
0x4064: je 0x406f
0x4066: mov r11,qword ptr [rsp+0x28]
0x406b: mov qword ptr [r12],r11
0x406f: mov rax,qword ptr [rsp+0x10]
0x4074: add rsp,0x38
0x4078: pop rbx
0x4079: pop rbp
0x407a: pop r12
0x407c: pop r13
0x407e: pop r14
0x4080: pop r15
0x4082: ret 
0x4090: mov rcx,rdx
0x4093: xor edx,edx
0x4095: jmp 0x3fa0
0x40a0: mov eax,dword ptr [rip+0x203fd2]
0x40a6: push r12
0x40a8: mov r12,qword ptr [rip+0x203fd1]
0x40af: push rbp
0x40b0: push rbx
0x40b1: cmp eax,0x1
0x40b4: jle 0x40e1
0x40b6: sub eax,0x2
0x40b9: lea rbx,[r12+0x18]
0x40be: shl rax,0x4
0x40c2: lea rbp,[r12+rax+0x28]
0x40c7: nop word ptr [rax+rax]
0x40d0: mov rdi,qword ptr [rbx]
0x40d3: add rbx,0x10
0x40d7: call 0x13b0
0x40dc: cmp rbx,rbp
0x40df: jne 0x40d0
0x40e1: mov rdi,qword ptr [r12+0x8]
0x40e6: lea rbx,[rip+0x204033]
0x40ed: cmp rdi,rbx
0x40f0: je 0x4109
0x40f2: call 0x13b0
0x40f7: mov qword ptr [rip+0x203f8e],0x100
0x4102: mov qword ptr [rip+0x203f8f],rbx
0x4109: lea rbx,[rip+0x203f80]
0x4110: cmp r12,rbx
0x4113: je 0x4124
0x4115: mov rdi,r12
0x4118: call 0x13b0
0x411d: mov qword ptr [rip+0x203f5c],rbx
0x4124: pop rbx
0x4125: mov dword ptr [rip+0x203f49],0x1
0x412f: pop rbp
0x4130: pop r12
0x4132: ret 
0x4140: lea rcx,[rip+0x2040d9]
0x4147: mov rdx,-0x1
0x414e: jmp 0x3c60
0x4160: lea rcx,[rip+0x2040b9]
0x4167: jmp 0x3c60
0x4170: lea rcx,[rip+0x2040a9]
0x4177: mov rsi,rdi
0x417a: mov rdx,-0x1
0x4181: xor edi,edi
0x4183: jmp 0x3c60
0x4190: lea rcx,[rip+0x204089]
0x4197: mov rdx,rsi
0x419a: mov rsi,rdi
0x419d: xor edi,edi
0x419f: jmp 0x3c60
0x41b0: sub rsp,0x48
0x41b4: mov rax,rdx
0x41b7: mov rdx,qword ptr fs:0x28
0x41c0: mov qword ptr [rsp+0x38],rdx
0x41c5: xor edx,edx
0x41c7: cmp esi,0xa
0x41ca: je 0x4234
0x41cc: mov dword ptr [rsp],esi
0x41cf: mov rcx,rsp
0x41d2: mov rdx,-0x1
0x41d9: mov rsi,rax
0x41dc: mov qword ptr [rsp+0x4],0x0
0x41e5: mov qword ptr [rsp+0xc],0x0
0x41ee: mov qword ptr [rsp+0x14],0x0
0x41f7: mov qword ptr [rsp+0x1c],0x0
0x4200: mov qword ptr [rsp+0x24],0x0
0x4209: mov qword ptr [rsp+0x2c],0x0
0x4212: mov dword ptr [rsp+0x34],0x0
0x421a: call 0x3c60
0x421f: mov rcx,qword ptr [rsp+0x38]
0x4224: xor rcx,qword ptr fs:0x28
0x422d: jne 0x4239
0x422f: add rsp,0x48
0x4233: ret 
0x4234: call 0x13c0
0x4239: call 0x1480
0x423e: nop 
0x4240: sub rsp,0x48
0x4244: mov rax,rdx
0x4247: mov rdx,rcx
0x424a: mov rcx,qword ptr fs:0x28
0x4253: mov qword ptr [rsp+0x38],rcx
0x4258: xor ecx,ecx
0x425a: cmp esi,0xa
0x425d: je 0x42c0
0x425f: mov dword ptr [rsp],esi
0x4262: mov rcx,rsp
0x4265: mov rsi,rax
0x4268: mov qword ptr [rsp+0x4],0x0
0x4271: mov qword ptr [rsp+0xc],0x0
0x427a: mov qword ptr [rsp+0x14],0x0
0x4283: mov qword ptr [rsp+0x1c],0x0
0x428c: mov qword ptr [rsp+0x24],0x0
0x4295: mov qword ptr [rsp+0x2c],0x0
0x429e: mov dword ptr [rsp+0x34],0x0
0x42a6: call 0x3c60
0x42ab: mov rdx,qword ptr [rsp+0x38]
0x42b0: xor rdx,qword ptr fs:0x28
0x42b9: jne 0x42c5
0x42bb: add rsp,0x48
0x42bf: ret 
0x42c0: call 0x13c0
0x42c5: call 0x1480
0x42ca: nop word ptr [rax+rax]
0x42d0: mov rdx,rsi
0x42d3: mov esi,edi
0x42d5: xor edi,edi
0x42d7: jmp 0x41b0
0x42e0: mov rcx,rdx
0x42e3: mov rdx,rsi
0x42e6: mov esi,edi
0x42e8: xor edi,edi
0x42ea: jmp 0x4240
0x42f0: sub rsp,0x48
0x42f4: mov ecx,edx
0x42f6: mov rax,qword ptr fs:0x28
0x42ff: mov qword ptr [rsp+0x38],rax
0x4304: xor eax,eax
0x4306: mov rax,qword ptr [rip+0x203f43]
0x430d: mov r8,rsp
0x4310: and ecx,0x1f
0x4313: movdqa xmm0,[rip+0x203f05]
0x431b: mov qword ptr [rsp+0x30],rax
0x4320: mov eax,edx
0x4322: movaps [rsp],xmm0
0x4326: shr al,0x5
0x4329: movzx eax,al
0x432c: lea r9,[r8+rax*4+0x8]
0x4331: movdqa xmm0,[rip+0x203ef7]
0x4339: movaps [rsp+0x10],xmm0
0x433e: movdqa xmm0,[rip+0x203efa]
0x4346: movaps [rsp+0x20],xmm0
0x434b: mov edx,dword ptr [r9]
0x434e: mov eax,edx
0x4350: shr eax,cl
0x4352: not eax
0x4354: and eax,0x1
0x4357: shl eax,cl
0x4359: mov rcx,r8
0x435c: xor eax,edx
0x435e: mov rdx,rsi
0x4361: mov rsi,rdi
0x4364: mov dword ptr [r9],eax
0x4367: xor edi,edi
0x4369: call 0x3c60
0x436e: mov rsi,qword ptr [rsp+0x38]
0x4373: xor rsi,qword ptr fs:0x28
0x437c: jne 0x4383
0x437e: add rsp,0x48
0x4382: ret 
0x4383: call 0x1480
0x4388: nop dword ptr [rax+rax]
0x4390: movsx edx,sil
0x4394: mov rsi,-0x1
0x439b: jmp 0x42f0
0x43a0: mov edx,0x3a
0x43a5: mov rsi,-0x1
0x43ac: jmp 0x42f0
0x43c0: mov edx,0x3a
0x43c5: jmp 0x42f0
0x443f: mov rcx,qword ptr [rsp+0x38]
0x4444: xor rcx,qword ptr fs:0x28
0x444d: jne 0x4459
0x444f: add rsp,0x48
0x4453: ret 
0x4459: call 0x1480
0x445e: nop 
0x4460: sub rsp,0x48
0x4464: mov r9,rcx
0x4467: mov rcx,qword ptr [rip+0x203de2]
0x446e: movdqa xmm0,[rip+0x203daa]
0x4476: mov rax,qword ptr fs:0x28
0x447f: mov qword ptr [rsp+0x38],rax
0x4484: xor eax,eax
0x4486: movaps [rsp],xmm0
0x448a: test rsi,rsi
0x448d: mov qword ptr [rsp+0x30],rcx
0x4492: mov dword ptr [rsp],0xa
0x4499: movdqa xmm0,[rip+0x203d8f]
0x44a1: movaps [rsp+0x10],xmm0
0x44a6: movdqa xmm0,[rip+0x203d92]
0x44ae: movaps [rsp+0x20],xmm0
0x44b3: je 0x44e7
0x44b5: test rdx,rdx
0x44b8: je 0x44e7
0x44ba: mov qword ptr [rsp+0x28],rsi
0x44bf: mov qword ptr [rsp+0x30],rdx
0x44c4: mov rcx,rsp
0x44c7: mov rdx,r8
0x44ca: mov rsi,r9
0x44cd: call 0x3c60
0x44d2: mov rdi,qword ptr [rsp+0x38]
0x44d7: xor rdi,qword ptr fs:0x28
0x44e0: jne 0x44ec
0x44e2: add rsp,0x48
0x44e6: ret 
0x44e7: call 0x13c0
0x44ec: call 0x1480
0x44f1: nop dword ptr [rax+rax]
0x44f6: nop word ptr cs:[rax+rax]
0x4500: mov r8,-0x1
0x4507: jmp 0x4460
0x4510: mov rcx,rdx
0x4513: mov r8,-0x1
0x451a: mov rdx,rsi
0x451d: mov rsi,rdi
0x4520: xor edi,edi
0x4522: jmp 0x4460
0x4530: mov r8,rcx
0x4533: mov rcx,rdx
0x4536: mov rdx,rsi
0x4539: mov rsi,rdi
0x453c: xor edi,edi
0x453e: jmp 0x4460
0x4550: lea rcx,[rip+0x203ae9]
0x4557: jmp 0x3c60
0x4560: lea rcx,[rip+0x203ad9]
0x4567: mov rdx,rsi
0x456a: mov rsi,rdi
0x456d: xor edi,edi
0x456f: jmp 0x3c60
0x4580: lea rcx,[rip+0x203ab9]
0x4587: mov rdx,-0x1
0x458e: jmp 0x3c60
0x45a0: lea rcx,[rip+0x203a99]
0x45a7: mov rsi,rdi
0x45aa: mov rdx,-0x1
0x45b1: xor edi,edi
0x45b3: jmp 0x3c60
0x46f8: mov r8,rcx
0x46fb: mov rcx,rdx
0x46fe: lea rdx,[rip+0x14af]
0x4705: mov esi,0x1
0x470a: xor eax,eax
0x470c: call 0x1630
0x4711: jmp 0x45fc
0x490d: push r12
0x490f: push r15
0x4911: push r14
0x4913: mov r8,qword ptr [rsp+0x20]
0x4918: mov rcx,rbx
0x491b: mov rdx,rax
0x491e: mov rdi,rbp
0x4921: mov esi,0x1
0x4926: xor eax,eax
0x4928: call 0x1630
0x492d: add rsp,0x20
0x4931: add rsp,0x28
0x4935: pop rbx
0x4936: pop rbp
0x4937: pop r12
0x4939: pop r13
0x493b: pop r14
0x493d: pop r15
0x493f: ret 
0x4979: push r12
0x497b: push r15
0x497d: push r14
0x497f: mov r9,qword ptr [rsp+0x28]
0x4984: jmp 0x4913
0x49e0: xor r9d,r9d
0x49e3: cmp qword ptr [r8],0x0
0x49e7: je 0x49fb
0x49e9: nop dword ptr [rax]
0x49f0: add r9,0x1
0x49f4: cmp qword ptr [r8+r9*8],0x0
0x49f9: jne 0x49f0
0x49fb: jmp 0x45c0
0x4a00: sub rsp,0x68
0x4a04: mov r10,r8
0x4a07: xor r9d,r9d
0x4a0a: mov rax,qword ptr fs:0x28
0x4a13: mov qword ptr [rsp+0x58],rax
0x4a18: xor eax,eax
0x4a1a: mov r8,rsp
0x4a1d: nop dword ptr [rax]
0x4a20: mov eax,dword ptr [r10]
0x4a23: cmp eax,0x2f
0x4a26: ja 0x4a6a
0x4a28: mov r11d,eax
0x4a2b: add r11,qword ptr [r10+0x10]
0x4a2f: add eax,0x8
0x4a32: mov dword ptr [r10],eax
0x4a35: mov rax,qword ptr [r11]
0x4a38: test rax,rax
0x4a3b: mov qword ptr [r8+r9*8],rax
0x4a3f: je 0x4a4b
0x4a41: add r9,0x1
0x4a45: cmp r9,0xa
0x4a49: jne 0x4a20
0x4a4b: call 0x45c0
0x4a50: mov rax,qword ptr [rsp+0x58]
0x4a55: xor rax,qword ptr fs:0x28
0x4a5e: jne 0x4a65
0x4a60: add rsp,0x68
0x4a64: ret 
0x4a65: call 0x1480
0x4a6a: mov r11,qword ptr [r10+0x8]
0x4a6e: lea rax,[r11+0x8]
0x4a72: mov qword ptr [r10+0x8],rax
0x4a76: jmp 0x4a35
0x4b40: call 0x1480
0x4b4c: mov rax,rbx
0x4b4f: add rbx,0x8
0x4b53: jmp 0x4b06
0x4b60: push rbx
0x4b61: lea rsi,[rip+0x109a]
0x4b68: mov edx,0x5
0x4b6d: xor edi,edi
0x4b6f: call 0x1450
0x4b74: lea rdx,[rip+0x109c]
0x4b7b: mov rsi,rax
0x4b7e: mov edi,0x1
0x4b83: xor eax,eax
0x4b85: call 0x15c0
0x4b8a: lea rsi,[rip+0x109c]
0x4b91: mov edx,0x5
0x4b96: xor edi,edi
0x4b98: call 0x1450
0x4b9d: lea rcx,[rip+0xa0c]
0x4ba4: lea rdx,[rip+0x6da]
0x4bab: mov rsi,rax
0x4bae: mov edi,0x1
0x4bb3: xor eax,eax
0x4bb5: call 0x15c0
0x4bba: mov rbx,qword ptr [rip+0x2034e7]
0x4bc1: lea rsi,[rip+0x1298]
0x4bc8: xor edi,edi
0x4bca: mov edx,0x5
0x4bcf: call 0x1450
0x4bd4: mov rsi,rbx
0x4bd7: mov rdi,rax
0x4bda: pop rbx
0x4bdb: jmp 0x1510
0x4bfa: nop word ptr [rax+rax]
0x4c00: mov rax,rdi
0x4c03: mul rsi
0x4c06: mov rdi,rax
0x4c09: seto al
0x4c0c: test rdi,rdi
0x4c0f: js 0x4c1b
0x4c11: movzx eax,al
0x4c14: test rax,rax
0x4c17: jne 0x4c1b
0x4c19: jmp 0x4be0
0x4c1b: sub rsp,0x8
0x4c1f: call 0x4e30
0x4c24: nop 
0x4c26: nop word ptr cs:[rax+rax]
0x4c30: jmp 0x4be0
0x4c49: test rdi,rdi
0x4c4c: jne 0x4c68
0x4c68: call 0x13b0
0x4c6d: xor eax,eax
0x4c6f: pop rbx
0x4c70: ret 
0x4c76: nop word ptr cs:[rax+rax]
0x4c80: mov rax,rsi
0x4c83: mul rdx
0x4c86: mov rsi,rax
0x4c89: seto al
0x4c8c: test rsi,rsi
0x4c8f: js 0x4c9b
0x4c91: movzx eax,al
0x4c94: test rax,rax
0x4c97: jne 0x4c9b
0x4c99: jmp 0x4c40
0x4c9b: sub rsp,0x8
0x4c9f: call 0x4e30
0x4ca4: nop 
0x4ca6: nop word ptr cs:[rax+rax]
0x4cb0: test rdi,rdi
0x4cb3: mov r9,rdx
0x4cb6: mov rcx,qword ptr [rsi]
0x4cb9: je 0x4cf0
0x4cbb: xor edx,edx
0x4cbd: movabsq rax,0x5555555555555554
0x4cc7: div r9
0x4cca: cmp rax,rcx
0x4ccd: jbe 0x4d0b
0x4ccf: mov rax,rcx
0x4cd2: shr rax, 1
0x4cd5: lea rcx,[rax+rcx+0x1]
0x4cda: mov qword ptr [rsi],rcx
0x4cdd: imul rcx,r9
0x4ce1: mov rsi,rcx
0x4ce4: jmp 0x4c40
0x4cf0: test rcx,rcx
0x4cf3: je 0x4d18
0x4cf5: mov rax,rcx
0x4cf8: mul r9
0x4cfb: seto dl
0x4cfe: test rax,rax
0x4d01: movzx edx,dl
0x4d04: js 0x4d0b
0x4d06: test rdx,rdx
0x4d09: je 0x4cda
0x4d0b: sub rsp,0x8
0x4d0f: call 0x4e30
0x4d14: nop dword ptr [rax]
0x4d18: xor edx,edx
0x4d1a: mov eax,0x80
0x4d1f: xor r8d,r8d
0x4d22: div r9
0x4d25: test rax,rax
0x4d28: sete r8b
0x4d2c: lea rcx,[r8+rax]
0x4d30: jmp 0x4cf5
0x4d40: test rdi,rdi
0x4d43: mov rax,qword ptr [rsi]
0x4d46: je 0x4d70
0x4d48: movabsq rdx,0x5555555555555553
0x4d52: cmp rax,rdx
0x4d55: ja 0x4d81
0x4d57: mov rdx,rax
0x4d5a: shr rdx, 1
0x4d5d: lea rax,[rdx+rax+0x1]
0x4d62: mov qword ptr [rsi],rax
0x4d65: mov rsi,rax
0x4d68: jmp 0x4c40
0x4d70: test rax,rax
0x4d73: mov edx,0x80
0x4d78: cmove rax,rdx
0x4d7c: test rax,rax
0x4d7f: jns 0x4d62
0x4d81: sub rsp,0x8
0x4d85: call 0x4e30
0x4d8a: nop word ptr [rax+rax]
0x4d90: push rbx
0x4d91: mov rbx,rdi
0x4d94: call 0x4be0
0x4d99: mov rdx,rbx
0x4d9c: xor esi,esi
0x4d9e: mov rdi,rax
0x4da1: pop rbx
0x4da2: jmp 0x14e0
0x4db0: mov rax,rdi
0x4db3: sub rsp,0x8
0x4db7: mul rsi
0x4dba: seto dl
0x4dbd: test rax,rax
0x4dc0: js 0x4dd9
0x4dc2: movzx edx,dl
0x4dc5: test rdx,rdx
0x4dc8: jne 0x4dd9
0x4dca: call 0x1520
0x4dcf: test rax,rax
0x4dd2: je 0x4dd9
0x4dd4: add rsp,0x8
0x4dd8: ret 
0x4dd9: call 0x4e30
0x4dde: nop 
0x4e60: call 0x13c0
0x4e65: nop word ptr cs:[rax+rax]
0x4e6f: nop 
0x4f90: push r13
0x4f92: push r12
0x4f94: mov r13,rsi
0x4f97: push rbp
0x4f98: push rbx
0x4f99: mov rbx,rdi
0x4f9c: mov r12,rdx
0x4f9f: sub rsp,0x18
0x4fa3: mov rax,qword ptr fs:0x28
0x4fac: mov qword ptr [rsp+0x8],rax
0x4fb1: xor eax,eax
0x4fb3: lea rax,[rsp+0x4]
0x4fb8: test rdi,rdi
0x4fbb: cmove rbx,rax
0x4fbf: mov rdi,rbx
0x4fc2: call 0x14a0
0x4fc7: cmp rax,-0x3
0x4fcb: mov rbp,rax
0x4fce: jbe 0x4ff0
0x4fd0: test r12,r12
0x4fd3: je 0x4ff0
0x4fd5: xor edi,edi
0x4fd7: call 0x50a0
0x4fdc: test al,al
0x4fde: jne 0x4ff0
0x4fe0: movzx eax,byte ptr [r13]
0x4fe5: mov ebp,0x1
0x4fea: mov dword ptr [rbx],eax
0x4fec: nop dword ptr [rax]
0x4ff0: mov rdx,qword ptr [rsp+0x8]
0x4ff5: xor rdx,qword ptr fs:0x28
0x4ffe: mov rax,rbp
0x5001: jne 0x500e
0x5003: add rsp,0x18
0x5007: pop rbx
0x5008: pop rbp
0x5009: pop r12
0x500b: pop r13
0x500d: ret 
0x500e: call 0x1480
0x5013: nop word ptr cs:[rax+rax]
0x501d: nop dword ptr [rax]
0x5020: push r12
0x5022: push rbp
0x5023: mov rbp,rdi
0x5026: push rbx
0x5027: call 0x1400
0x502c: mov ebx,dword ptr [rbp]
0x502f: mov rdi,rbp
0x5032: mov r12,rax
0x5035: call 0x4e70
0x503a: and ebx,0x20
0x503d: test ebx,ebx
0x503f: jne 0x5058
0x5041: test eax,eax
0x5043: je 0x504f
0x5045: test r12,r12
0x5048: mov eax,0xffffffff
0x504d: je 0x5088
0x504f: pop rbx
0x5050: pop rbp
0x5051: pop r12
0x5053: ret 
0x5058: test eax,eax
0x505a: jne 0x5078
0x505c: call 0x13d0
0x5061: mov dword ptr [rax],0x0
0x5067: mov eax,0xffffffff
0x506c: pop rbx
0x506d: pop rbp
0x506e: pop r12
0x5070: ret 
0x5078: pop rbx
0x5079: mov eax,0xffffffff
0x507e: pop rbp
0x507f: pop r12
0x5081: ret 
0x5088: call 0x13d0
0x508d: cmp dword ptr [rax],0x9
0x5090: pop rbx
0x5091: pop rbp
0x5092: pop r12
0x5094: setne al
0x5097: movzx eax,al
0x509a: neg eax
0x509c: ret 
0x50a0: sub rsp,0x8
0x50a4: xor esi,esi
0x50a6: call 0x15b0
0x50ab: mov rdx,rax
0x50ae: mov eax,0x1
0x50b3: test rdx,rdx
0x50b6: je 0x50d5
0x50b8: lea rdi,[rip+0xe61]
0x50bf: mov ecx,0x2
0x50c4: mov rsi,rdx
0x50c7: rep cmpsb [rsi],es:[rdi]
0x50c9: seta cl
0x50cc: sbb cl,0x0
0x50cf: xor eax,eax
0x50d1: test cl,cl
0x50d3: jne 0x50e0
0x50d5: add rsp,0x8
0x50d9: ret 
0x50e0: lea rdi,[rip+0xe3b]
0x50e7: mov ecx,0x6
0x50ec: mov rsi,rdx
0x50ef: rep cmpsb [rsi],es:[rdi]
0x50f1: seta al
0x50f4: sbb al,0x0
0x50f6: test al,al
0x50f8: setne al
0x50fb: add rsp,0x8
0x50ff: ret 
0x5100: sub rsp,0x8
0x5104: mov edi,0xe
0x5109: call 0x1570
0x510e: test rax,rax
0x5111: je 0x5130
0x5113: cmp byte ptr [rax],0x0
0x5116: lea rdx,[rip+0xe0b]
0x511d: cmove rax,rdx
0x5121: add rsp,0x8
0x5125: ret 
0x5130: lea rax,[rip+0xdf1]
0x5137: add rsp,0x8
0x513b: ret 
0x5140: push r15
0x5142: push r14
0x5144: mov r15,rdx
0x5147: push r13
0x5149: push r12
0x514b: lea r12,[rip+0x2029de]
0x5152: push rbp
0x5153: lea rbp,[rip+0x2029de]
0x515a: push rbx
0x515b: mov r13d,edi
0x515e: mov r14,rsi
0x5161: sub rbp,r12
0x5164: sub rsp,0x8
0x5168: sar rbp,0x3
0x516c: call 0x1378
0x5171: test rbp,rbp
0x5174: je 0x5196
0x5176: xor ebx,ebx
0x5178: nop dword ptr [rax+rax]
0x5180: mov rdx,r15
0x5183: mov rsi,r14
0x5186: mov edi,r13d
0x5189: call qword ptr [r12+rbx*8]
0x518d: add rbx,0x1
0x5191: cmp rbp,rbx
0x5194: jne 0x5180
0x5196: add rsp,0x8
0x519a: pop rbx
0x519b: pop rbp
0x519c: pop r12
0x519e: pop r13
0x51a0: pop r14
0x51a2: pop r15
0x51a4: ret 
0x51b0: rep ret 
