0x1706: jmp qword ptr [rip+0x20a6cc]
0x1710: jmp qword ptr [rip+0x20a6ca]
0x1720: jmp qword ptr [rip+0x20a6c2]
0x1770: jmp qword ptr [rip+0x20a69a]
0x1780: jmp qword ptr [rip+0x20a692]
0x17d0: jmp qword ptr [rip+0x20a66a]
0x1810: jmp qword ptr [rip+0x20a64a]
0x1850: jmp qword ptr [rip+0x20a62a]
0x1860: jmp qword ptr [rip+0x20a622]
0x1880: jmp qword ptr [rip+0x20a612]
0x18c0: jmp qword ptr [rip+0x20a5f2]
0x18e0: jmp qword ptr [rip+0x20a5e2]
0x1900: jmp qword ptr [rip+0x20a5d2]
0x1910: jmp qword ptr [rip+0x20a5ca]
0x1940: jmp qword ptr [rip+0x20a5b2]
0x1950: jmp qword ptr [rip+0x20a5aa]
0x1960: jmp qword ptr [rip+0x20a5a2]
0x1970: jmp qword ptr [rip+0x20a59a]
0x1980: jmp qword ptr [rip+0x20a592]
0x19a0: jmp qword ptr [rip+0x20a582]
0x19b0: jmp qword ptr [rip+0x20a57a]
0x19f0: jmp qword ptr [rip+0x20a55a]
0x1a00: jmp qword ptr [rip+0x20a552]
0x1a20: jmp qword ptr [rip+0x20a542]
0x1a40: jmp qword ptr [rip+0x20a532]
0x1a50: jmp qword ptr [rip+0x20a52a]
0x1aa0: jmp qword ptr [rip+0x20a502]
0x1ab0: jmp qword ptr [rip+0x20a4fa]
0x1ad0: jmp qword ptr [rip+0x20a4ea]
0x1ae0: jmp qword ptr [rip+0x20a502]
0x1bca: nop word ptr [rax+rax]
0x1c1f: nop 
0x1c4f: jmp 0x1b7e
0x1cd8: mov rcx,qword ptr [rsp+0x28]
0x1cdd: xor rcx,qword ptr fs:0x28
0x1ce6: jne 0x1d96
0x1cec: add rsp,0x30
0x1cf0: pop rbx
0x1cf1: pop rbp
0x1cf2: pop r12
0x1cf4: pop r13
0x1cf6: pop r14
0x1cf8: ret 
0x1d6c: lea rsi,[rip+0x6acd]
0x1d73: mov rbx,rax
0x1d76: mov edx,0x5
0x1d7b: xor edi,edi
0x1d7d: call 0x17f0
0x1d82: mov rcx,rbx
0x1d85: mov rdx,rax
0x1d88: xor esi,esi
0x1d8a: mov edi,0x1
0x1d8f: xor eax,eax
0x1d91: call 0x1a10
0x1d96: call 0x1830
0x1dbc: jmp 0x1bc0
0x1dfa: hlt 
0x1dfb: nop dword ptr [rax+rax]
0x1e00: lea rdi,[rip+0x20a279]
0x1e07: push rbp
0x1e08: lea rax,[rip+0x20a271]
0x1e0f: cmp rax,rdi
0x1e12: mov rbp,rsp
0x1e15: je 0x1e30
0x1e17: mov rax,qword ptr [rip+0x20a1aa]
0x1e1e: test rax,rax
0x1e21: je 0x1e30
0x1e23: pop rbp
0x1e24: jmp rax
0x1e30: pop rbp
0x1e31: ret 
0x1e40: lea rdi,[rip+0x20a239]
0x1e47: lea rsi,[rip+0x20a232]
0x1e4e: push rbp
0x1e4f: sub rsi,rdi
0x1e52: mov rbp,rsp
0x1e55: sar rsi,0x3
0x1e59: mov rax,rsi
0x1e5c: shr rax,0x3f
0x1e60: add rsi,rax
0x1e63: sar rsi, 1
0x1e66: je 0x1e80
0x1e68: mov rax,qword ptr [rip+0x20a171]
0x1e6f: test rax,rax
0x1e72: je 0x1e80
0x1e74: pop rbp
0x1e75: jmp rax
0x1e80: pop rbp
0x1e81: ret 
0x1ea1: push rbp
0x1ea2: mov rbp,rsp
0x1ea5: je 0x1eb3
0x1ea7: mov rdi,qword ptr [rip+0x20a15a]
0x1eae: call 0x1ae0
0x1eb3: call 0x1e00
0x1eb8: mov byte ptr [rip+0x20a209],0x1
0x1ebf: pop rbp
0x1ec0: ret 
0x1ed0: push rbp
0x1ed1: mov rbp,rsp
0x1ed4: pop rbp
0x1ed5: jmp 0x1e40
0x1ef2: test rdx,rdx
0x1ef5: je 0x1f48
0x1f28: cmp qword ptr [rbx],0x0
0x1f2c: je 0x1f39
0x1f2e: call 0x1750
0x1f33: mov dword ptr [rax],0x5f
0x1f48: mov qword ptr [rsp+0x18],rsi
0x1f4d: mov qword ptr [rsp+0x10],rdi
0x1f52: mov qword ptr [rsp+0x8],rdx
0x1f57: call 0x1750
0x1f5c: mov rsi,qword ptr [rsp+0x18]
0x1f61: mov dword ptr [rax],0x5f
0x1f67: mov rdi,qword ptr [rsp+0x10]
0x1f6c: mov rdx,qword ptr [rsp+0x8]
0x1f71: jmp 0x1ef7
0x1f91: mov rsi,qword ptr [rbx+0x18]
0x1f95: mov rdi,qword ptr [rip+0x20a0ec]
0x1f9c: mov rdx,rax
0x1f9f: pop rbx
0x1fa0: xor eax,eax
0x1fa2: jmp 0x2430
0x1fe7: call 0x1750
0x1fec: mov dword ptr [rax],0x5f
0x2430: push rbp
0x2431: push rbx
0x2432: mov rbp,rsi
0x2435: mov rbx,rdi
0x2438: sub rsp,0xd8
0x243f: test al,al
0x2441: mov qword ptr [rsp+0x30],rdx
0x2446: mov qword ptr [rsp+0x38],rcx
0x244b: mov qword ptr [rsp+0x40],r8
0x2450: mov qword ptr [rsp+0x48],r9
0x2455: je 0x248e
0x2457: movaps xmmword ptr [rsp+0x50],xmm0
0x245c: movaps xmmword ptr [rsp+0x60],xmm1
0x2461: movaps xmmword ptr [rsp+0x70],xmm2
0x2466: movaps xmmword ptr [rsp+0x80],xmm3
0x246e: movaps xmmword ptr [rsp+0x90],xmm4
0x2476: movaps xmmword ptr [rsp+0xa0],xmm5
0x247e: movaps xmmword ptr [rsp+0xb0],xmm6
0x2486: movaps xmmword ptr [rsp+0xc0],xmm7
0x248e: mov rsi,rbx
0x2491: mov rax,qword ptr fs:0x28
0x249a: mov qword ptr [rsp+0x18],rax
0x249f: xor eax,eax
0x24a1: mov rdi,qword ptr [rip+0x209c38]
0x24a8: call 0x18d0
0x24ad: lea rdi,[rip+0x67dd]
0x24b4: mov rcx,rbx
0x24b7: mov edx,0x2
0x24bc: mov esi,0x1
0x24c1: call 0x19a0
0x24c6: lea rax,[rsp+0xf0]
0x24ce: mov rdx,rsp
0x24d1: mov rsi,rbp
0x24d4: mov rdi,rbx
0x24d7: mov dword ptr [rsp],0x10
0x24de: mov dword ptr [rsp+0x4],0x30
0x24e6: mov qword ptr [rsp+0x8],rax
0x24eb: lea rax,[rsp+0x20]
0x24f0: mov qword ptr [rsp+0x10],rax
0x24f5: call 0x5c60
0x24fa: mov rax,qword ptr [rbx+0x28]
0x24fe: cmp rax,qword ptr [rbx+0x30]
0x2502: jae 0x2530
0x2504: lea rdx,[rax+0x1]
0x2508: mov qword ptr [rbx+0x28],rdx
0x250c: mov byte ptr [rax],0xa
0x250f: mov rax,qword ptr [rsp+0x18]
0x2514: xor rax,qword ptr fs:0x28
0x251d: jne 0x253f
0x251f: add rsp,0xd8
0x2526: pop rbx
0x2527: pop rbp
0x2528: ret 
0x2530: mov esi,0xa
0x2535: mov rdi,rbx
0x2538: call 0x1860
0x253d: jmp 0x250f
0x253f: call 0x1830
0x2544: nop word ptr cs:[rax+rax]
0x254e: nop 
0x2550: mov qword ptr [rip+0x209b81],rdi
0x2557: ret 
0x2560: mov byte ptr [rip+0x209b69],dil
0x2567: ret 
0x2570: push rbp
0x2571: push rbx
0x2572: sub rsp,0x8
0x2576: mov rdi,qword ptr [rip+0x209b0b]
0x257d: call 0x5d60
0x2582: test eax,eax
0x2584: je 0x259c
0x2586: call 0x1750
0x258b: cmp byte ptr [rip+0x209b3e],0x0
0x2592: mov rbx,rax
0x2595: je 0x25b3
0x2597: cmp dword ptr [rax],0x20
0x259a: jne 0x25b3
0x259c: mov rdi,qword ptr [rip+0x209b1d]
0x25a3: call 0x5d60
0x25a8: test eax,eax
0x25aa: jne 0x25f2
0x25ac: add rsp,0x8
0x25b0: pop rbx
0x25b1: pop rbp
0x25b2: ret 
0x25b3: lea rsi,[rip+0x66df]
0x25ba: xor edi,edi
0x25bc: mov edx,0x5
0x25c1: call 0x17f0
0x25c6: mov rdi,qword ptr [rip+0x209b0b]
0x25cd: mov rbp,rax
0x25d0: test rdi,rdi
0x25d3: je 0x25fd
0x25d5: call 0x4ab0
0x25da: mov esi,dword ptr [rbx]
0x25dc: lea rdx,[rip+0x66c2]
0x25e3: mov rcx,rax
0x25e6: mov r8,rbp
0x25e9: xor edi,edi
0x25eb: xor eax,eax
0x25ed: call 0x1a10
0x25f2: mov edi,dword ptr [rip+0x209a20]
0x25f8: call 0x1770
0x25fd: mov esi,dword ptr [rbx]
0x25ff: lea rdx,[rip+0x66a3]
0x2606: mov rcx,rax
0x2609: xor edi,edi
0x260b: xor eax,eax
0x260d: call 0x1a10
0x2612: jmp 0x25f2
0x26d9: mov eax,r12d
0x26dc: and eax,-0x40
0x26df: mov dword ptr [rsp+0x8],eax
0x26e3: mov esi,dword ptr [rsp+0x8]
0x26e7: mov rdi,qword ptr [rsp]
0x26eb: mov qword ptr [rsp+0x10],r9
0x26f0: call 0x1790
0x26f5: test eax,eax
0x26f7: mov ebp,eax
0x26f9: mov r9,qword ptr [rsp+0x10]
0x26fe: je 0x2890
0x276f: lea rsi,[rip+0x6538]
0x2776: mov edx,0x5
0x277b: xor edi,edi
0x277d: mov rbx,rax
0x2780: call 0x17f0
0x2785: mov esi,dword ptr [r15]
0x2788: mov rdx,rax
0x278b: mov rcx,rbx
0x278e: xor edi,edi
0x2790: xor eax,eax
0x2792: call 0x1a10
0x2797: jmp 0x27ed
0x27a0: mov qword ptr [rsp],rbx
0x27a4: jmp 0x26a0
0x27c6: lea rsi,[rip+0x64f0]
0x27cd: mov rbx,rax
0x27d0: mov edx,0x5
0x27d5: xor edi,edi
0x27d7: call 0x17f0
0x27dc: mov rcx,rbx
0x27df: mov rdx,rax
0x27e2: mov esi,ebp
0x27e4: xor edi,edi
0x27e6: xor eax,eax
0x27e8: call 0x1a10
0x2880: mov eax,r12d
0x2883: and eax,-0x13
0x2886: mov dword ptr [rsp+0x8],eax
0x288a: jmp 0x26e3
0x2890: mov rsi,r15
0x2893: mov rdi,rbx
0x2896: call r9
0x2899: mov edx,0x3
0x289e: mov r15,qword ptr [rsp]
0x28a2: lea rcx,[rsp+0x20]
0x28a7: mov rdi,r14
0x28aa: mov rsi,r15
0x28ad: call 0x4d00
0x28b2: cmp eax,-0x1
0x28b5: jl 0x286c
0x28b7: test eax,eax
0x28b9: lea rax,[rip+0x63ec]
0x28c0: mov r9d,r12d
0x28c3: cmovne rax,r15
0x28c7: sub rsp,0x8
0x28cb: mov edx,dword ptr [rsp+0x108]
0x28d2: mov rsi,rax
0x28d5: push rdx
0x28d6: mov r8d,dword ptr [rsp+0x120]
0x28de: mov ecx,dword ptr [rsp+0x118]
0x28e5: mov edx,dword ptr [rsp+0x18]
0x28e9: mov edi,dword ptr [rsp+0x30]
0x28ed: call 0x6060
0x28f2: test eax,eax
0x28f4: pop rdx
0x28f5: pop rcx
0x28f6: je 0x286c
0x28fc: test ebp,ebp
0x28fe: je 0x29c8
0x2904: cmp ebp,0x2
0x2907: je 0x27bb
0x290d: test r13,r13
0x2910: je 0x27bb
0x2916: call 0x1750
0x291b: cmp dword ptr [rax],0x14
0x291e: mov r12,rax
0x2921: je 0x27bb
0x2927: mov rdi,rbx
0x292a: call 0x4cb0
0x292f: cmp byte ptr [rsp+0x1f],0x0
0x2934: mov rbx,rax
0x2937: lea rsi,[rip+0x63ba]
0x293e: lea rax,[rip+0x6393]
0x2945: mov edx,0x5
0x294a: cmovne rsi,rax
0x294e: xor edi,edi
0x2950: call 0x17f0
0x2955: mov esi,dword ptr [r12]
0x2959: mov rdx,rax
0x295c: mov rcx,rbx
0x295f: xor edi,edi
0x2961: xor eax,eax
0x2963: xor r12d,r12d
0x2966: call 0x1a10
0x296b: jmp 0x27ed
0x29b0: mov dword ptr [rsp+0x8],0xffffffff
0x29b8: mov edx,0x2
0x29bd: jmp 0x289e
0x29c8: call 0x1750
0x29cd: mov r12,rax
0x29d0: jmp 0x2927
0x29da: mov dword ptr [rsp+0x8],r12d
0x29df: mov edx,0x3
0x29e4: jmp 0x289e
0x2d6e: nop 
0x2da0: push rbx
0x2da1: mov rsi,rdi
0x2da4: mov edi,0x1
0x2da9: sub rsp,0xa0
0x2db0: mov rdx,rsp
0x2db3: mov rax,qword ptr fs:0x28
0x2dbc: mov qword ptr [rsp+0x98],rax
0x2dc4: xor eax,eax
0x2dc6: call 0x1920
0x2dcb: test eax,eax
0x2dcd: jne 0x2e20
0x2dcf: mov ebx,dword ptr [rsp+0x18]
0x2dd3: mov edi,0x20
0x2dd8: call 0x5940
0x2ddd: mov edx,0x13d
0x2de2: mov dword ptr [rax+0x4],0xfff
0x2de9: mov dword ptr [rax+0xc],0xfff
0x2df0: mov word ptr [rax],dx
0x2df3: mov dword ptr [rax+0x8],ebx
0x2df6: mov byte ptr [rax+0x11],0x0
0x2dfa: mov rcx,qword ptr [rsp+0x98]
0x2e02: xor rcx,qword ptr fs:0x28
0x2e0b: jne 0x2e24
0x2e0d: add rsp,0xa0
0x2e14: pop rbx
0x2e15: ret 
0x2e20: xor eax,eax
0x2e22: jmp 0x2dfa
0x2e24: call 0x1830
0x2e29: nop dword ptr [rax]
0x303f: nop 
0x3040: push rbp
0x3041: push rbx
0x3042: mov rbp,rdi
0x3045: mov ebx,esi
0x3047: sub rsp,0x8
0x304b: call 0x5eb0
0x3050: movzx edx,byte ptr [rax]
0x3053: and edx,-0x21
0x3056: cmp dl,0x55
0x3059: je 0x30d0
0x305b: cmp dl,0x47
0x305e: je 0x3080
0x3060: lea rax,[rip+0x5d94]
0x3067: lea rdx,[rip+0x5d8f]
0x306e: cmp ebx,0x9
0x3071: cmovne rax,rdx
0x3075: add rsp,0x8
0x3079: pop rbx
0x307a: pop rbp
0x307b: ret 
0x3080: movzx edx,byte ptr [rax+0x1]
0x3084: and edx,-0x21
0x3087: cmp dl,0x42
0x308a: jne 0x3060
0x308c: cmp byte ptr [rax+0x2],0x31
0x3090: jne 0x3060
0x3092: cmp byte ptr [rax+0x3],0x38
0x3096: jne 0x3060
0x3098: cmp byte ptr [rax+0x4],0x30
0x309c: jne 0x3060
0x309e: cmp byte ptr [rax+0x5],0x33
0x30a2: jne 0x3060
0x30a4: cmp byte ptr [rax+0x6],0x30
0x30a8: jne 0x3060
0x30aa: cmp byte ptr [rax+0x7],0x0
0x30ae: jne 0x3060
0x30b0: cmp byte ptr [rbp],0x60
0x30b4: lea rax,[rip+0x5d39]
0x30bb: lea rdx,[rip+0x5d36]
0x30c2: cmovne rax,rdx
0x30c6: add rsp,0x8
0x30ca: pop rbx
0x30cb: pop rbp
0x30cc: ret 
0x30d0: movzx edx,byte ptr [rax+0x1]
0x30d4: and edx,-0x21
0x30d7: cmp dl,0x54
0x30da: jne 0x3060
0x30dc: movzx edx,byte ptr [rax+0x2]
0x30e0: and edx,-0x21
0x30e3: cmp dl,0x46
0x30e6: jne 0x3060
0x30ec: cmp byte ptr [rax+0x3],0x2d
0x30f0: jne 0x3060
0x30f6: cmp byte ptr [rax+0x4],0x38
0x30fa: jne 0x3060
0x3100: cmp byte ptr [rax+0x5],0x0
0x3104: jne 0x3060
0x310a: cmp byte ptr [rbp],0x60
0x310e: lea rax,[rip+0x5cd7]
0x3115: lea rdx,[rip+0x5cd4]
0x311c: cmovne rax,rdx
0x3120: add rsp,0x8
0x3124: pop rbx
0x3125: pop rbp
0x3126: ret 
0x3203: xor r11d,r11d
0x3206: mov rax,rbp
0x3209: mov r8d,r12d
0x320c: mov rbp,r11
0x320f: mov r11,rax
0x3212: nop word ptr [rax+rax]
0x3218: cmp r11,rbp
0x321b: setne r12b
0x321f: cmp r11,-0x1
0x3223: jne 0x3232
0x3225: mov rax,qword ptr [rsp+0x10]
0x322a: cmp byte ptr [rax+rbp],0x0
0x322e: setne r12b
0x3232: test r12b,r12b
0x3235: je 0x3890
0x323b: cmp dword ptr [rsp+0x8],0x2
0x3240: mov rdi,qword ptr [rsp+0x10]
0x3245: lea r9,[rdi+rbp]
0x3249: setne al
0x324c: and al,byte ptr [rsp+0xd]
0x3250: mov r10d,eax
0x3253: je 0x3300
0x3259: mov rax,qword ptr [rsp+0x18]
0x325e: test rax,rax
0x3261: je 0x3690
0x3267: cmp r11,-0x1
0x326b: lea rbx,[rbp+rax]
0x3270: jne 0x32a0
0x3272: cmp rax,0x1
0x3276: jbe 0x32a0
0x3278: mov byte ptr [rsp+0x38],r8b
0x327d: mov byte ptr [rsp+0x30],r10b
0x3282: mov qword ptr [rsp+0x28],r9
0x3287: call 0x1810
0x328c: movzx r8d,byte ptr [rsp+0x38]
0x3292: movzx r10d,byte ptr [rsp+0x30]
0x3298: mov r11,rax
0x329b: mov r9,qword ptr [rsp+0x28]
0x32a0: cmp rbx,r11
0x32a3: mov byte ptr [rsp+0x28],r10b
0x32a8: ja 0x3860
0x32ae: mov rdx,qword ptr [rsp+0x18]
0x32b3: mov rsi,qword ptr [rsp+0x48]
0x32b8: mov rdi,r9
0x32bb: mov qword ptr [rsp+0x40],r11
0x32c0: mov byte ptr [rsp+0x38],r8b
0x32c5: mov qword ptr [rsp+0x30],r9
0x32ca: call 0x18c0
0x32cf: test eax,eax
0x32d1: mov r9,qword ptr [rsp+0x30]
0x32d6: movzx r8d,byte ptr [rsp+0x38]
0x32dc: mov r11,qword ptr [rsp+0x40]
0x32e1: jne 0x3860
0x32e7: cmp byte ptr [rsp+0xf],0x0
0x32ec: movzx r10d,byte ptr [rsp+0x28]
0x32f2: jne 0x4275
0x32f8: nop dword ptr [rax+rax]
0x3300: movzx ebx,byte ptr [r9]
0x3304: cmp bl,0x7e
0x3307: ja 0x3628
0x330d: lea rcx,[rip+0x5b78]
0x3314: movzx edx,bl
0x3317: movsxd rax,dword ptr [rcx+rdx*4]
0x331b: add rax,rcx
0x331e: jmp rax
0x3358: cmp byte ptr [rsp+0xd],0x1
0x335d: jne 0x3472
0x3363: test dl,dl
0x3365: jne 0x3472
0x336b: mov rsi,qword ptr [rsp+0x20]
0x3370: test rsi,rsi
0x3373: je 0x3389
0x3375: mov edx,ebx
0x3377: shr dl,0x5
0x337a: movzx edx,dl
0x337d: mov edx,dword ptr [rsi+rdx*4]
0x3380: btl edx,ebx
0x3383: jb 0x34d3
0x3389: test r10b,r10b
0x338c: jne 0x34d3
0x3392: xor eax,0x1
0x3395: add rbp,0x1
0x3399: and eax,r8d
0x339c: test al,al
0x339e: je 0x33c0
0x33a0: cmp r13,r15
0x33a3: jbe 0x33aa
0x33a5: mov byte ptr [r14+r15],0x27
0x33aa: lea rax,[r15+0x1]
0x33ae: cmp r13,rax
0x33b1: jbe 0x33b9
0x33b3: mov byte ptr [r14+r15+0x1],0x27
0x33b9: add r15,0x2
0x33bd: xor r8d,r8d
0x33c0: cmp r15,r13
0x33c3: jae 0x33c9
0x33c5: mov byte ptr [r14+r15],bl
0x33c9: movzx edi,byte ptr [rsp+0xe]
0x33ce: add r15,0x1
0x33d2: mov eax,0x0
0x33d7: test r12b,r12b
0x33da: cmove edi,eax
0x33dd: mov byte ptr [rsp+0xe],dil
0x33e2: jmp 0x3218
0x3472: cmp byte ptr [rsp+0xf],0x0
0x3477: jne 0x336b
0x347d: jmp 0x3389
0x34d3: cmp dword ptr [rsp+0x8],0x2
0x34d8: sete dl
0x34db: cmp byte ptr [rsp+0xf],0x0
0x34e0: mov eax,edx
0x34e2: jne 0x3d38
0x34e8: mov eax,r8d
0x34eb: xor eax,0x1
0x34ee: and al,dl
0x34f0: je 0x3521
0x34f2: cmp r13,r15
0x34f5: jbe 0x34fc
0x34f7: mov byte ptr [r14+r15],0x27
0x34fc: lea rdx,[r15+0x1]
0x3500: cmp r13,rdx
0x3503: jbe 0x350b
0x3505: mov byte ptr [r14+r15+0x1],0x24
0x350b: lea rdx,[r15+0x2]
0x350f: cmp r13,rdx
0x3512: jbe 0x351a
0x3514: mov byte ptr [r14+r15+0x2],0x27
0x351a: add r15,0x3
0x351e: mov r8d,eax
0x3521: cmp r13,r15
0x3524: jbe 0x352b
0x3526: mov byte ptr [r14+r15],0x5c
0x352b: add r15,0x1
0x352f: add rbp,0x1
0x3533: jmp 0x33c0
0x3620: xor r10d,r10d
0x3623: nop dword ptr [rax+rax]
0x3628: cmp qword ptr [rsp+0x58],0x1
0x362e: jne 0x39d8
0x3634: mov qword ptr [rsp+0x38],r11
0x3639: mov byte ptr [rsp+0x30],r8b
0x363e: mov byte ptr [rsp+0x28],r10b
0x3643: call 0x1ad0
0x3648: mov rcx,qword ptr [rax]
0x364b: movzx edx,bl
0x364e: movzx r10d,byte ptr [rsp+0x28]
0x3654: movzx r8d,byte ptr [rsp+0x30]
0x365a: mov r11,qword ptr [rsp+0x38]
0x365f: mov edi,0x1
0x3664: movzx eax,word ptr [rcx+rdx*2]
0x3668: and ax,0x4000
0x366c: setne r12b
0x3670: sete al
0x3673: and al,byte ptr [rsp+0xd]
0x3677: test al,al
0x3679: jne 0x4011
0x367f: cmp dword ptr [rsp+0x8],0x2
0x3684: sete dl
0x3687: jmp 0x3358
0x3690: movzx ebx,byte ptr [r9]
0x3694: cmp bl,0x7e
0x3697: ja 0x3620
0x3699: lea rcx,[rip+0x59e8]
0x36a0: movzx edx,bl
0x36a3: movsxd rax,dword ptr [rcx+rdx*4]
0x36a7: add rax,rcx
0x36aa: jmp rax
0x3860: xor r10d,r10d
0x3863: jmp 0x3300
0x3890: cmp dword ptr [rsp+0x8],0x2
0x3895: movzx ebx,byte ptr [rsp+0xf]
0x389a: mov r12d,r8d
0x389d: mov rbp,r11
0x38a0: sete dl
0x38a3: mov eax,ebx
0x38a5: test r15,r15
0x38a8: sete cl
0x38ab: and eax,edx
0x38ad: and al,cl
0x38af: jne 0x4316
0x38b5: mov eax,ebx
0x38b7: xor eax,0x1
0x38ba: and dl,al
0x38bc: je 0x422c
0x38c2: cmp byte ptr [rsp+0x7c],0x0
0x38c7: je 0x422a
0x38cd: cmp byte ptr [rsp+0xe],0x0
0x38d2: jne 0x42cd
0x38d8: test r13,r13
0x38db: sete al
0x38de: cmp qword ptr [rsp+0x50],0x0
0x38e4: setne dl
0x38e7: and al,dl
0x38e9: je 0x430c
0x38ef: mov r13,qword ptr [rsp+0x50]
0x38f4: lea rbx,[rip+0x5502]
0x38fb: mov byte ptr [r14],0x27
0x38ff: mov dword ptr [rsp+0x8],0x2
0x3907: mov r15d,0x1
0x390d: mov qword ptr [rsp+0x18],0x1
0x3916: mov byte ptr [rsp+0xf],0x0
0x391b: mov qword ptr [rsp+0x48],rbx
0x3920: mov byte ptr [rsp+0x7c],al
0x3924: jmp 0x3203
0x39d8: lea rax,[rsp+0xa0]
0x39e0: cmp r11,-0x1
0x39e4: mov qword ptr [rsp+0xa0],0x0
0x39f0: mov qword ptr [rsp+0x28],rax
0x39f5: jne 0x3a24
0x39f7: mov rdi,qword ptr [rsp+0x10]
0x39fc: mov byte ptr [rsp+0x40],r8b
0x3a01: mov byte ptr [rsp+0x38],r10b
0x3a06: mov qword ptr [rsp+0x30],r9
0x3a0b: call 0x1810
0x3a10: movzx r8d,byte ptr [rsp+0x40]
0x3a16: movzx r10d,byte ptr [rsp+0x38]
0x3a1c: mov r11,rax
0x3a1f: mov r9,qword ptr [rsp+0x30]
0x3a24: lea rax,[rsp+0x9c]
0x3a2c: xor ecx,ecx
0x3a2e: mov byte ptr [rsp+0x7e],bl
0x3a32: mov byte ptr [rsp+0x7d],r8b
0x3a37: mov rbx,rcx
0x3a3a: mov qword ptr [rsp+0x88],r9
0x3a42: mov qword ptr [rsp+0x38],rax
0x3a47: mov byte ptr [rsp+0x7f],r10b
0x3a4c: mov qword ptr [rsp+0x80],r15
0x3a54: mov qword ptr [rsp+0x40],r14
0x3a59: mov qword ptr [rsp+0x70],r13
0x3a5e: mov qword ptr [rsp+0x30],r11
0x3a63: mov rax,qword ptr [rsp+0x10]
0x3a68: lea r14,[rbp+rbx]
0x3a6d: mov rdx,qword ptr [rsp+0x30]
0x3a72: mov rcx,qword ptr [rsp+0x28]
0x3a77: mov rdi,qword ptr [rsp+0x38]
0x3a7c: lea r13,[rax+r14]
0x3a80: sub rdx,r14
0x3a83: mov rsi,r13
0x3a86: call 0x5bd0
0x3a8b: test rax,rax
0x3a8e: mov r15,rax
0x3a91: je 0x3ae1
0x3a93: cmp rax,-0x1
0x3a97: je 0x40b5
0x3a9d: cmp rax,-0x2
0x3aa1: je 0x4041
0x3aa7: cmp dword ptr [rsp+0x8],0x2
0x3aac: sete al
0x3aaf: and al,byte ptr [rsp+0xf]
0x3ab3: jne 0x3c50
0x3ab9: mov edi,dword ptr [rsp+0x9c]
0x3ac0: call 0x1ab0
0x3ac5: mov rdi,qword ptr [rsp+0x28]
0x3aca: test eax,eax
0x3acc: mov eax,0x0
0x3ad1: cmove r12d,eax
0x3ad5: add rbx,r15
0x3ad8: call 0x1aa0
0x3add: test eax,eax
0x3adf: je 0x3a63
0x3ae1: mov edx,r12d
0x3ae4: mov rdi,rbx
0x3ae7: movzx r8d,byte ptr [rsp+0x7d]
0x3aed: xor edx,0x1
0x3af0: movzx ebx,byte ptr [rsp+0x7e]
0x3af5: movzx r10d,byte ptr [rsp+0x7f]
0x3afb: and dl,byte ptr [rsp+0xd]
0x3aff: mov r15,qword ptr [rsp+0x80]
0x3b07: mov r14,qword ptr [rsp+0x40]
0x3b0c: mov r13,qword ptr [rsp+0x70]
0x3b11: mov r11,qword ptr [rsp+0x30]
0x3b16: cmp rdi,0x1
0x3b1a: jbe 0x411b
0x3b20: mov rcx,rdi
0x3b23: xor esi,esi
0x3b25: movzx r9d,byte ptr [rsp+0xf]
0x3b2b: add rcx,rbp
0x3b2e: mov rdi,qword ptr [rsp+0x10]
0x3b33: jmp 0x3bee
0x3b40: cmp dword ptr [rsp+0x8],0x2
0x3b45: sete al
0x3b48: test r9b,r9b
0x3b4b: jne 0x4000
0x3b51: mov esi,r8d
0x3b54: xor esi,0x1
0x3b57: and al,sil
0x3b5a: je 0x3b8b
0x3b5c: cmp r13,r15
0x3b5f: jbe 0x3b66
0x3b61: mov byte ptr [r14+r15],0x27
0x3b66: lea rsi,[r15+0x1]
0x3b6a: cmp r13,rsi
0x3b6d: jbe 0x3b75
0x3b6f: mov byte ptr [r14+r15+0x1],0x24
0x3b75: lea rsi,[r15+0x2]
0x3b79: cmp r13,rsi
0x3b7c: jbe 0x3b84
0x3b7e: mov byte ptr [r14+r15+0x2],0x27
0x3b84: add r15,0x3
0x3b88: mov r8d,eax
0x3b8b: cmp r13,r15
0x3b8e: jbe 0x3b95
0x3b90: mov byte ptr [r14+r15],0x5c
0x3b95: lea rax,[r15+0x1]
0x3b99: cmp r13,rax
0x3b9c: jbe 0x3bab
0x3b9e: mov eax,ebx
0x3ba0: shr al,0x6
0x3ba3: add eax,0x30
0x3ba6: mov byte ptr [r14+r15+0x1],al
0x3bab: lea rax,[r15+0x2]
0x3baf: cmp r13,rax
0x3bb2: jbe 0x3bc4
0x3bb4: mov eax,ebx
0x3bb6: shr al,0x3
0x3bb9: and eax,0x7
0x3bbc: add eax,0x30
0x3bbf: mov byte ptr [r14+r15+0x2],al
0x3bc4: and ebx,0x7
0x3bc7: add rbp,0x1
0x3bcb: add r15,0x3
0x3bcf: add ebx,0x30
0x3bd2: cmp rbp,rcx
0x3bd5: jae 0x33c0
0x3bdb: mov esi,edx
0x3bdd: cmp r13,r15
0x3be0: jbe 0x3be6
0x3be2: mov byte ptr [r14+r15],bl
0x3be6: movzx ebx,byte ptr [rdi+rbp]
0x3bea: add r15,0x1
0x3bee: test dl,dl
0x3bf0: jne 0x3b40
0x3bf6: mov eax,esi
0x3bf8: xor eax,0x1
0x3bfb: and eax,r8d
0x3bfe: test r10b,r10b
0x3c01: je 0x3c11
0x3c03: cmp r13,r15
0x3c06: jbe 0x3c0d
0x3c08: mov byte ptr [r14+r15],0x5c
0x3c0d: add r15,0x1
0x3c11: add rbp,0x1
0x3c15: cmp rbp,rcx
0x3c18: jae 0x339c
0x3c1e: test al,al
0x3c20: je 0x401e
0x3c26: cmp r13,r15
0x3c29: jbe 0x3c30
0x3c2b: mov byte ptr [r14+r15],0x27
0x3c30: lea rax,[r15+0x1]
0x3c34: cmp r13,rax
0x3c37: jbe 0x3c3f
0x3c39: mov byte ptr [r14+r15+0x1],0x27
0x3c3f: add r15,0x2
0x3c43: xor r10d,r10d
0x3c46: xor r8d,r8d
0x3c49: jmp 0x3bdd
0x3c50: cmp r15,0x1
0x3c54: je 0x3ab9
0x3c5a: mov rdi,qword ptr [rsp+0x10]
0x3c5f: lea rcx,[rdi+r15]
0x3c63: lea rdx,[rdi+r14+0x1]
0x3c68: lea r8,[rcx+r14]
0x3c6c: jmp 0x3c7d
0x3c70: add rdx,0x1
0x3c74: cmp r8,rdx
0x3c77: je 0x3ab9
0x3c7d: movzx ecx,byte ptr [rdx]
0x3c80: sub ecx,0x5b
0x3c83: cmp cl,0x21
0x3c86: ja 0x3c70
0x3c88: mov esi,0x1
0x3c8d: shl rsi,cl
0x3c90: mov rcx,rsi
0x3c93: movabsq rsi,0x20000002b
0x3c9d: test rcx,rsi
0x3ca0: je 0x3c70
0x3ca2: mov r14,qword ptr [rsp+0x40]
0x3ca7: mov r13,qword ptr [rsp+0x70]
0x3cac: mov rbp,qword ptr [rsp+0x30]
0x3cb1: mov dword ptr [rsp+0x8],0x2
0x3cb9: cmp byte ptr [rsp+0xd],0x0
0x3cbe: je 0x3cd0
0x3cc0: test al,al
0x3cc2: mov eax,0x4
0x3cc7: cmove eax,dword ptr [rsp+0x8]
0x3ccc: mov dword ptr [rsp+0x8],eax
0x3cd0: sub rsp,0x8
0x3cd4: mov rcx,rbp
0x3cd7: mov rsi,r13
0x3cda: push qword ptr [rsp+0x68]
0x3cde: push qword ptr [rsp+0x78]
0x3ce2: mov rdi,r14
0x3ce5: push 0x0
0x3ce7: mov r9d,dword ptr [rsp+0x98]
0x3cef: mov r8d,dword ptr [rsp+0x28]
0x3cf4: mov rdx,qword ptr [rsp+0x30]
0x3cf9: and r9d,-0x3
0x3cfd: call 0x3130
0x3d02: add rsp,0x20
0x3d06: mov r15,rax
0x3d09: mov rbx,qword ptr [rsp+0xa8]
0x3d11: xor rbx,qword ptr fs:0x28
0x3d1a: mov rax,r15
0x3d1d: jne 0x4323
0x3d23: add rsp,0xb8
0x3d2a: pop rbx
0x3d2b: pop rbp
0x3d2c: pop r12
0x3d2e: pop r13
0x3d30: pop r14
0x3d32: pop r15
0x3d34: ret 
0x3d38: mov rbp,r11
0x3d3b: jmp 0x3cb9
0x3da1: test r13,r13
0x3da4: jne 0x433a
0x3daa: lea rax,[rip+0x504c]
0x3db1: mov qword ptr [rsp+0x50],0x0
0x3dba: mov byte ptr [rsp+0xe],0x1
0x3dbf: mov byte ptr [rsp+0x7c],0x0
0x3dc4: xor r12d,r12d
0x3dc7: mov byte ptr [rsp+0xf],0x0
0x3dcc: mov qword ptr [rsp+0x18],0x1
0x3dd5: mov qword ptr [rsp+0x48],rax
0x3dda: mov r15d,0x1
0x3de0: mov dword ptr [rsp+0x8],0x2
0x3de8: jmp 0x3203
0x4000: movzx ebx,byte ptr [rsp+0xf]
0x4005: mov rbp,r11
0x4008: mov byte ptr [rsp+0xd],bl
0x400c: jmp 0x3cb9
0x4011: movzx edx,byte ptr [rsp+0xd]
0x4016: xor r12d,r12d
0x4019: jmp 0x3b20
0x401e: xor r10d,r10d
0x4021: jmp 0x3bdd
0x4041: mov r11,qword ptr [rsp+0x30]
0x4046: mov rsi,r14
0x4049: mov rcx,r13
0x404c: mov rax,rbx
0x404f: mov rdi,rbx
0x4052: movzx r8d,byte ptr [rsp+0x7d]
0x4058: movzx ebx,byte ptr [rsp+0x7e]
0x405d: mov r9,qword ptr [rsp+0x88]
0x4065: cmp rsi,r11
0x4068: movzx r10d,byte ptr [rsp+0x7f]
0x406e: mov r15,qword ptr [rsp+0x80]
0x4076: mov r14,qword ptr [rsp+0x40]
0x407b: mov r13,qword ptr [rsp+0x70]
0x4080: jae 0x40a8
0x4082: cmp byte ptr [rcx],0x0
0x4085: jne 0x4097
0x4087: jmp 0x40a8
0x4090: cmp byte ptr [r9+rax],0x0
0x4095: je 0x40a5
0x4097: add rax,0x1
0x409b: lea rdx,[rbp+rax]
0x40a0: cmp r11,rdx
0x40a3: ja 0x4090
0x40a5: mov rdi,rax
0x40a8: movzx edx,byte ptr [rsp+0xd]
0x40ad: xor r12d,r12d
0x40b0: jmp 0x3b16
0x40b5: mov rdi,rbx
0x40b8: movzx r8d,byte ptr [rsp+0x7d]
0x40be: movzx ebx,byte ptr [rsp+0x7e]
0x40c3: movzx r10d,byte ptr [rsp+0x7f]
0x40c9: mov r15,qword ptr [rsp+0x80]
0x40d1: xor r12d,r12d
0x40d4: mov r14,qword ptr [rsp+0x40]
0x40d9: mov r13,qword ptr [rsp+0x70]
0x40de: mov r11,qword ptr [rsp+0x30]
0x40e3: movzx edx,byte ptr [rsp+0xd]
0x40e8: jmp 0x3b16
0x411b: mov eax,edx
0x411d: jmp 0x3677
0x422a: mov eax,edx
0x422c: mov rbx,qword ptr [rsp+0x48]
0x4231: test rbx,rbx
0x4234: je 0x4262
0x4236: test al,al
0x4238: je 0x4262
0x423a: movzx ecx,byte ptr [rbx]
0x423d: mov rax,rbx
0x4240: test cl,cl
0x4242: je 0x4262
0x4244: mov rdx,r15
0x4247: sub rax,r15
0x424a: cmp r13,rdx
0x424d: jbe 0x4253
0x424f: mov byte ptr [r14+rdx],cl
0x4253: add rdx,0x1
0x4257: movzx ecx,byte ptr [rax+rdx]
0x425b: test cl,cl
0x425d: jne 0x424a
0x425f: mov r15,rdx
0x4262: cmp r13,r15
0x4265: jbe 0x3d09
0x426b: mov byte ptr [r14+r15],0x0
0x4270: jmp 0x3d09
0x4275: cmp dword ptr [rsp+0x8],0x2
0x427a: movzx ebx,byte ptr [rsp+0xf]
0x427f: mov rbp,r11
0x4282: sete al
0x4285: mov byte ptr [rsp+0xd],bl
0x4289: jmp 0x3cb9
0x42cd: sub rsp,0x8
0x42d1: mov r8d,0x5
0x42d7: mov rcx,r11
0x42da: push qword ptr [rsp+0x68]
0x42de: push qword ptr [rsp+0x78]
0x42e2: mov rdi,r14
0x42e5: push qword ptr [rsp+0x38]
0x42e9: mov r9d,dword ptr [rsp+0x98]
0x42f1: mov rdx,qword ptr [rsp+0x30]
0x42f6: mov rsi,qword ptr [rsp+0x70]
0x42fb: call 0x3130
0x4300: add rsp,0x20
0x4304: mov r15,rax
0x4307: jmp 0x3d09
0x430c: movzx eax,byte ptr [rsp+0x7c]
0x4311: jmp 0x422c
0x4316: mov dword ptr [rsp+0x8],0x2
0x431e: jmp 0x3cb9
0x4323: call 0x1830
0x4328: mov byte ptr [rsp+0xd],0x0
0x432d: jmp 0x3da1
0x433a: mov byte ptr [rsp+0xe],0x1
0x433f: xor eax,eax
0x4341: xor r12d,r12d
0x4344: mov qword ptr [rsp+0x50],0x0
0x434d: jmp 0x38f4
0x4364: nop 
0x4366: nop word ptr cs:[rax+rax]
0x445c: add rsp,0x20
0x4460: mov r11,qword ptr [rsp+0x10]
0x4465: cmp r11,rax
0x4468: ja 0x44d1
0x446a: lea rsi,[rax+0x1]
0x446e: lea rax,[rip+0x207c8b]
0x4475: cmp r12,rax
0x4478: mov qword ptr [rbx],rsi
0x447b: je 0x448f
0x447d: mov rdi,r12
0x4480: mov qword ptr [rsp+0x10],rsi
0x4485: call 0x1730
0x448a: mov rsi,qword ptr [rsp+0x10]
0x448f: mov rdi,rsi
0x4492: mov qword ptr [rsp+0x10],rsi
0x4497: call 0x5940
0x449c: sub rsp,0x8
0x44a0: mov qword ptr [rbx+0x8],rax
0x44a4: mov r8d,dword ptr [rbp]
0x44a8: push qword ptr [rbp+0x30]
0x44ab: push qword ptr [rbp+0x28]
0x44ae: mov rcx,r14
0x44b1: push r15
0x44b3: mov r9d,dword ptr [rsp+0x3c]
0x44b8: mov rdi,rax
0x44bb: mov rdx,qword ptr [rsp+0x28]
0x44c0: mov rsi,qword ptr [rsp+0x30]
0x44c5: mov r12,rax
0x44c8: call 0x3130
0x44cd: add rsp,0x20
0x44d1: mov eax,dword ptr [rsp+0x18]
0x44d5: mov dword ptr [r13],eax
0x44d9: add rsp,0x28
0x44dd: mov rax,r12
0x44e0: pop rbx
0x44e1: pop rbp
0x44e2: pop r12
0x44e4: pop r13
0x44e6: pop r14
0x44e8: pop r15
0x44ea: ret 
0x4511: call 0x1740
0x4516: call 0x5b90
0x451b: nop dword ptr [rax+rax]
0x4520: push r12
0x4522: push rbp
0x4523: push rbx
0x4524: mov rbx,rdi
0x4527: call 0x1750
0x452c: mov r12d,dword ptr [rax]
0x452f: mov rbp,rax
0x4532: lea rax,[rip+0x207cc7]
0x4539: test rbx,rbx
0x453c: mov esi,0x38
0x4541: cmove rbx,rax
0x4545: mov rdi,rbx
0x4548: call 0x5b40
0x454d: mov dword ptr [rbp],r12d
0x4551: pop rbx
0x4552: pop rbp
0x4553: pop r12
0x4555: ret 
0x4560: lea rax,[rip+0x207c99]
0x4567: test rdi,rdi
0x456a: cmove rdi,rax
0x456e: mov eax,dword ptr [rdi]
0x4570: ret 
0x4580: lea rax,[rip+0x207c79]
0x4587: test rdi,rdi
0x458a: cmove rdi,rax
0x458e: mov dword ptr [rdi],esi
0x4590: ret 
0x45a0: lea rax,[rip+0x207c59]
0x45a7: test rdi,rdi
0x45aa: mov ecx,esi
0x45ac: cmove rdi,rax
0x45b0: mov eax,esi
0x45b2: and ecx,0x1f
0x45b5: shr al,0x5
0x45b8: movzx eax,al
0x45bb: lea rdi,[rdi+rax*4+0x8]
0x45c0: mov esi,dword ptr [rdi]
0x45c2: mov eax,esi
0x45c4: shr eax,cl
0x45c6: xor edx,eax
0x45c8: and eax,0x1
0x45cb: and edx,0x1
0x45ce: shl edx,cl
0x45d0: xor edx,esi
0x45d2: mov dword ptr [rdi],edx
0x45d4: ret 
0x45e0: lea rax,[rip+0x207c19]
0x45e7: test rdi,rdi
0x45ea: cmove rdi,rax
0x45ee: mov eax,dword ptr [rdi+0x4]
0x45f1: mov dword ptr [rdi+0x4],esi
0x45f4: ret 
0x4600: lea rax,[rip+0x207bf9]
0x4607: test rdi,rdi
0x460a: cmove rdi,rax
0x460e: test rsi,rsi
0x4611: mov dword ptr [rdi],0xa
0x4617: je 0x4627
0x4619: test rdx,rdx
0x461c: je 0x4627
0x461e: mov qword ptr [rdi+0x28],rsi
0x4622: mov qword ptr [rdi+0x30],rdx
0x4626: ret 
0x4627: sub rsp,0x8
0x462b: call 0x1740
0x4630: push r15
0x4632: push r14
0x4634: lea rax,[rip+0x207bc5]
0x463b: push r13
0x463d: push r12
0x463f: mov r13,rdi
0x4642: push rbp
0x4643: push rbx
0x4644: mov rbx,r8
0x4647: mov r14,rsi
0x464a: mov r15,rdx
0x464d: sub rsp,0x18
0x4651: test r8,r8
0x4654: cmove rbx,rax
0x4658: mov qword ptr [rsp+0x8],rcx
0x465d: call 0x1750
0x4662: mov r12d,dword ptr [rax]
0x4665: mov rbp,rax
0x4668: lea rax,[rbx+0x8]
0x466c: sub rsp,0x8
0x4670: mov r9d,dword ptr [rbx+0x4]
0x4674: push qword ptr [rbx+0x30]
0x4677: mov r8d,dword ptr [rbx]
0x467a: push qword ptr [rbx+0x28]
0x467d: mov rdx,r15
0x4680: push rax
0x4681: mov rcx,qword ptr [rsp+0x28]
0x4686: mov rsi,r14
0x4689: mov rdi,r13
0x468c: call 0x3130
0x4691: mov dword ptr [rbp],r12d
0x4695: add rsp,0x38
0x4699: pop rbx
0x469a: pop rbp
0x469b: pop r12
0x469d: pop r13
0x469f: pop r14
0x46a1: pop r15
0x46a3: ret 
0x46b0: push r15
0x46b2: push r14
0x46b4: lea rax,[rip+0x207b45]
0x46bb: push r13
0x46bd: push r12
0x46bf: mov r12,rdx
0x46c2: push rbp
0x46c3: push rbx
0x46c4: mov rbx,rcx
0x46c7: mov r14,rdi
0x46ca: mov r15,rsi
0x46cd: sub rsp,0x38
0x46d1: test rcx,rcx
0x46d4: cmove rbx,rax
0x46d8: xor ebp,ebp
0x46da: call 0x1750
0x46df: test r12,r12
0x46e2: mov r13,rax
0x46e5: mov eax,dword ptr [rax]
0x46e7: sete bpl
0x46eb: or ebp,dword ptr [rbx+0x4]
0x46ee: lea r10,[rbx+0x8]
0x46f2: sub rsp,0x8
0x46f6: mov r8d,dword ptr [rbx]
0x46f9: mov rcx,r15
0x46fc: mov dword ptr [rsp+0x14],eax
0x4700: push qword ptr [rbx+0x30]
0x4703: mov rdx,r14
0x4706: push qword ptr [rbx+0x28]
0x4709: push r10
0x470b: xor esi,esi
0x470d: mov r9d,ebp
0x4710: xor edi,edi
0x4712: mov qword ptr [rsp+0x40],r10
0x4717: call 0x3130
0x471c: lea rsi,[rax+0x1]
0x4720: mov qword ptr [rsp+0x48],rax
0x4725: add rsp,0x20
0x4729: mov rdi,rsi
0x472c: mov qword ptr [rsp+0x18],rsi
0x4731: call 0x5940
0x4736: mov qword ptr [rsp+0x10],rax
0x473b: sub rsp,0x8
0x473f: push qword ptr [rbx+0x30]
0x4742: push qword ptr [rbx+0x28]
0x4745: mov r10,qword ptr [rsp+0x38]
0x474a: mov r9d,ebp
0x474d: mov r8d,dword ptr [rbx]
0x4750: mov rcx,r15
0x4753: mov rdx,r14
0x4756: mov rdi,rax
0x4759: push r10
0x475b: mov rsi,qword ptr [rsp+0x38]
0x4760: call 0x3130
0x4765: mov eax,dword ptr [rsp+0x2c]
0x4769: add rsp,0x20
0x476d: test r12,r12
0x4770: mov dword ptr [r13],eax
0x4774: je 0x477f
0x4776: mov r11,qword ptr [rsp+0x28]
0x477b: mov qword ptr [r12],r11
0x477f: mov rax,qword ptr [rsp+0x10]
0x4784: add rsp,0x38
0x4788: pop rbx
0x4789: pop rbp
0x478a: pop r12
0x478c: pop r13
0x478e: pop r14
0x4790: pop r15
0x4792: ret 
0x47a0: mov rcx,rdx
0x47a3: xor edx,edx
0x47a5: jmp 0x46b0
0x47b0: mov eax,dword ptr [rip+0x2078a2]
0x47b6: push r12
0x47b8: mov r12,qword ptr [rip+0x2078a1]
0x47bf: push rbp
0x47c0: push rbx
0x47c1: cmp eax,0x1
0x47c4: jle 0x47f1
0x47c6: sub eax,0x2
0x47c9: lea rbx,[r12+0x18]
0x47ce: shl rax,0x4
0x47d2: lea rbp,[r12+rax+0x28]
0x47d7: nop word ptr [rax+rax]
0x47e0: mov rdi,qword ptr [rbx]
0x47e3: add rbx,0x10
0x47e7: call 0x1730
0x47ec: cmp rbx,rbp
0x47ef: jne 0x47e0
0x47f1: mov rdi,qword ptr [r12+0x8]
0x47f6: lea rbx,[rip+0x207903]
0x47fd: cmp rdi,rbx
0x4800: je 0x4819
0x4802: call 0x1730
0x4807: mov qword ptr [rip+0x20785e],0x100
0x4812: mov qword ptr [rip+0x20785f],rbx
0x4819: lea rbx,[rip+0x207850]
0x4820: cmp r12,rbx
0x4823: je 0x4834
0x4825: mov rdi,r12
0x4828: call 0x1730
0x482d: mov qword ptr [rip+0x20782c],rbx
0x4834: pop rbx
0x4835: mov dword ptr [rip+0x207819],0x1
0x483f: pop rbp
0x4840: pop r12
0x4842: ret 
0x4850: lea rcx,[rip+0x2079a9]
0x4857: mov rdx,-0x1
0x485e: jmp 0x4370
0x4870: lea rcx,[rip+0x207989]
0x4877: jmp 0x4370
0x4880: lea rcx,[rip+0x207979]
0x4887: mov rsi,rdi
0x488a: mov rdx,-0x1
0x4891: xor edi,edi
0x4893: jmp 0x4370
0x48a0: lea rcx,[rip+0x207959]
0x48a7: mov rdx,rsi
0x48aa: mov rsi,rdi
0x48ad: xor edi,edi
0x48af: jmp 0x4370
0x492f: mov rcx,qword ptr [rsp+0x38]
0x4934: xor rcx,qword ptr fs:0x28
0x493d: jne 0x4949
0x493f: add rsp,0x48
0x4943: ret 
0x4944: call 0x1740
0x4949: call 0x1830
0x494e: nop 
0x4950: sub rsp,0x48
0x4954: mov rax,rdx
0x4957: mov rdx,rcx
0x495a: mov rcx,qword ptr fs:0x28
0x4963: mov qword ptr [rsp+0x38],rcx
0x4968: xor ecx,ecx
0x496a: cmp esi,0xa
0x496d: je 0x49d0
0x496f: mov dword ptr [rsp],esi
0x4972: mov rcx,rsp
0x4975: mov rsi,rax
0x4978: mov qword ptr [rsp+0x4],0x0
0x4981: mov qword ptr [rsp+0xc],0x0
0x498a: mov qword ptr [rsp+0x14],0x0
0x4993: mov qword ptr [rsp+0x1c],0x0
0x499c: mov qword ptr [rsp+0x24],0x0
0x49a5: mov qword ptr [rsp+0x2c],0x0
0x49ae: mov dword ptr [rsp+0x34],0x0
0x49b6: call 0x4370
0x49bb: mov rdx,qword ptr [rsp+0x38]
0x49c0: xor rdx,qword ptr fs:0x28
0x49c9: jne 0x49d5
0x49cb: add rsp,0x48
0x49cf: ret 
0x49d0: call 0x1740
0x49d5: call 0x1830
0x49da: nop word ptr [rax+rax]
0x49f0: mov rcx,rdx
0x49f3: mov rdx,rsi
0x49f6: mov esi,edi
0x49f8: xor edi,edi
0x49fa: jmp 0x4950
0x4a00: sub rsp,0x48
0x4a04: mov ecx,edx
0x4a06: mov rax,qword ptr fs:0x28
0x4a0f: mov qword ptr [rsp+0x38],rax
0x4a14: xor eax,eax
0x4a16: mov rax,qword ptr [rip+0x207813]
0x4a1d: mov r8,rsp
0x4a20: and ecx,0x1f
0x4a23: movdqa xmm0,xmmword ptr [rip+0x2077d5]
0x4a2b: mov qword ptr [rsp+0x30],rax
0x4a30: mov eax,edx
0x4a32: movaps xmmword ptr [rsp],xmm0
0x4a36: shr al,0x5
0x4a39: movzx eax,al
0x4a3c: lea r9,[r8+rax*4+0x8]
0x4a41: movdqa xmm0,xmmword ptr [rip+0x2077c7]
0x4a49: movaps xmmword ptr [rsp+0x10],xmm0
0x4a4e: movdqa xmm0,xmmword ptr [rip+0x2077ca]
0x4a56: movaps xmmword ptr [rsp+0x20],xmm0
0x4a5b: mov edx,dword ptr [r9]
0x4a5e: mov eax,edx
0x4a60: shr eax,cl
0x4a62: not eax
0x4a64: and eax,0x1
0x4a67: shl eax,cl
0x4a69: mov rcx,r8
0x4a6c: xor eax,edx
0x4a6e: mov rdx,rsi
0x4a71: mov rsi,rdi
0x4a74: mov dword ptr [r9],eax
0x4a77: xor edi,edi
0x4a79: call 0x4370
0x4a7e: mov rsi,qword ptr [rsp+0x38]
0x4a83: xor rsi,qword ptr fs:0x28
0x4a8c: jne 0x4a93
0x4a8e: add rsp,0x48
0x4a92: ret 
0x4a93: call 0x1830
0x4a98: nop dword ptr [rax+rax]
0x4aa0: movsx edx,sil
0x4aa4: mov rsi,-0x1
0x4aab: jmp 0x4a00
0x4ab0: mov edx,0x3a
0x4ab5: mov rsi,-0x1
0x4abc: jmp 0x4a00
0x4ad0: mov edx,0x3a
0x4ad5: jmp 0x4a00
0x4ae0: sub rsp,0x48
0x4ae4: mov rax,rdx
0x4ae7: mov rdx,qword ptr fs:0x28
0x4af0: mov qword ptr [rsp+0x38],rdx
0x4af5: xor edx,edx
0x4af7: cmp esi,0xa
0x4afa: je 0x4b64
0x4afc: mov dword ptr [rsp],esi
0x4aff: mov rcx,rsp
0x4b02: mov rdx,-0x1
0x4b09: mov rsi,rax
0x4b0c: mov qword ptr [rsp+0x4],0x0
0x4b15: mov qword ptr [rsp+0xc],0x4000000
0x4b1e: mov qword ptr [rsp+0x14],0x0
0x4b27: mov qword ptr [rsp+0x1c],0x0
0x4b30: mov qword ptr [rsp+0x24],0x0
0x4b39: mov qword ptr [rsp+0x2c],0x0
0x4b42: mov dword ptr [rsp+0x34],0x0
0x4b4a: call 0x4370
0x4b4f: mov rcx,qword ptr [rsp+0x38]
0x4b54: xor rcx,qword ptr fs:0x28
0x4b5d: jne 0x4b69
0x4b5f: add rsp,0x48
0x4b63: ret 
0x4b64: call 0x1740
0x4b69: call 0x1830
0x4b6e: nop 
0x4b70: sub rsp,0x48
0x4b74: mov r9,rcx
0x4b77: mov rcx,qword ptr [rip+0x2076b2]
0x4b7e: movdqa xmm0,xmmword ptr [rip+0x20767a]
0x4b86: mov rax,qword ptr fs:0x28
0x4b8f: mov qword ptr [rsp+0x38],rax
0x4b94: xor eax,eax
0x4b96: movaps xmmword ptr [rsp],xmm0
0x4b9a: test rsi,rsi
0x4b9d: mov qword ptr [rsp+0x30],rcx
0x4ba2: mov dword ptr [rsp],0xa
0x4ba9: movdqa xmm0,xmmword ptr [rip+0x20765f]
0x4bb1: movaps xmmword ptr [rsp+0x10],xmm0
0x4bb6: movdqa xmm0,xmmword ptr [rip+0x207662]
0x4bbe: movaps xmmword ptr [rsp+0x20],xmm0
0x4bc3: je 0x4bf7
0x4bc5: test rdx,rdx
0x4bc8: je 0x4bf7
0x4bca: mov qword ptr [rsp+0x28],rsi
0x4bcf: mov qword ptr [rsp+0x30],rdx
0x4bd4: mov rcx,rsp
0x4bd7: mov rdx,r8
0x4bda: mov rsi,r9
0x4bdd: call 0x4370
0x4be2: mov rdi,qword ptr [rsp+0x38]
0x4be7: xor rdi,qword ptr fs:0x28
0x4bf0: jne 0x4bfc
0x4bf2: add rsp,0x48
0x4bf6: ret 
0x4bf7: call 0x1740
0x4bfc: call 0x1830
0x4c01: nop dword ptr [rax+rax]
0x4c06: nop word ptr cs:[rax+rax]
0x4c10: mov r8,-0x1
0x4c17: jmp 0x4b70
0x4c20: mov rcx,rdx
0x4c23: mov r8,-0x1
0x4c2a: mov rdx,rsi
0x4c2d: mov rsi,rdi
0x4c30: xor edi,edi
0x4c32: jmp 0x4b70
0x4c40: mov r8,rcx
0x4c43: mov rcx,rdx
0x4c46: mov rdx,rsi
0x4c49: mov rsi,rdi
0x4c4c: xor edi,edi
0x4c4e: jmp 0x4b70
0x4c60: lea rcx,[rip+0x2073b9]
0x4c67: jmp 0x4370
0x4c70: lea rcx,[rip+0x2073a9]
0x4c77: mov rdx,rsi
0x4c7a: mov rsi,rdi
0x4c7d: xor edi,edi
0x4c7f: jmp 0x4370
0x4c90: lea rcx,[rip+0x207389]
0x4c97: mov rdx,-0x1
0x4c9e: jmp 0x4370
0x4cd0: mov dword ptr [rdi],0x0
0x4cd6: ret 
0x4ce0: xor eax,eax
0x4ce2: cmp dword ptr [rdi],0x4
0x4ce5: je 0x4cf0
0x4ce7: rep ret 
0x4cf0: mov eax,dword ptr [rdi+0x4]
0x4cf3: ret 
0x4d1d: mov esi,edx
0x4d1f: mov rdi,r13
0x4d22: shl esi,0x11
0x4d25: and esi,0x20000
0x4d2b: or esi,0x10900
0x4d31: call 0x17c0
0x4d36: mov dword ptr [rbp],eax
0x4d39: mov ebx,eax
0x4d3b: call 0x1750
0x4d40: mov eax,dword ptr [rax]
0x4d42: mov dword ptr [rbp+0x4],eax
0x4fa9: nop dword ptr [rax]
0x50fc: mov edi,esi
0x50fe: call 0x1770
0x5103: nop dword ptr [rax]
0x5106: nop word ptr cs:[rax+rax]
0x5185: nop 
0x5186: nop word ptr cs:[rax+rax]
0x5193: push rsi
0x5225: cmp dword ptr [rsp+0x18],r13d
0x522a: jle 0x526b
0x522c: mov ecx,dword ptr [rsp+0x1c]
0x5230: mov rdi,qword ptr [rsp+0x10]
0x5235: movsxd rax,r13d
0x5238: sub ecx,r13d
0x523b: lea r14,[rdi+rax*8]
0x523f: mov r13,rcx
0x5242: add r13,rax
0x5245: lea r13,[rdi+r13*8+0x8]
0x524a: nop word ptr [rax+rax]
0x5250: mov rdi,qword ptr [r14]
0x5253: mov rdx,r12
0x5256: mov rsi,rbx
0x5259: call rbp
0x525b: cmp r15d,eax
0x525e: cmovl r15d,eax
0x5262: add r14,0x8
0x5266: cmp r14,r13
0x5269: jne 0x5250
0x526b: mov rcx,qword ptr [rsp+0x28]
0x5270: xor rcx,qword ptr fs:0x28
0x5279: mov eax,r15d
0x527c: jne 0x5317
0x5282: add rsp,0x38
0x5286: pop rbx
0x5287: pop rbp
0x5288: pop r12
0x528a: pop r13
0x528c: pop r14
0x528e: pop r15
0x5290: ret 
0x52ee: cmp r15d,eax
0x52f1: cmovl r15d,eax
0x5317: call 0x1830
0x531c: nop dword ptr [rax]
0x5458: mov r8,rcx
0x545b: mov rcx,rdx
0x545e: lea rdx,[rip+0x3f54]
0x5465: mov esi,0x1
0x546a: xor eax,eax
0x546c: call 0x1a90
0x5471: jmp 0x535c
0x566d: push r12
0x566f: push r15
0x5671: push r14
0x5673: mov r8,qword ptr [rsp+0x20]
0x5678: mov rcx,rbx
0x567b: mov rdx,rax
0x567e: mov rdi,rbp
0x5681: mov esi,0x1
0x5686: xor eax,eax
0x5688: call 0x1a90
0x568d: add rsp,0x20
0x5691: add rsp,0x28
0x5695: pop rbx
0x5696: pop rbp
0x5697: pop r12
0x5699: pop r13
0x569b: pop r14
0x569d: pop r15
0x569f: ret 
0x56d9: push r12
0x56db: push r15
0x56dd: push r14
0x56df: mov r9,qword ptr [rsp+0x28]
0x56e4: jmp 0x5673
0x5740: xor r9d,r9d
0x5743: cmp qword ptr [r8],0x0
0x5747: je 0x575b
0x5749: nop dword ptr [rax]
0x5750: add r9,0x1
0x5754: cmp qword ptr [r8+r9*8],0x0
0x5759: jne 0x5750
0x575b: jmp 0x5320
0x5760: sub rsp,0x68
0x5764: mov r10,r8
0x5767: xor r9d,r9d
0x576a: mov rax,qword ptr fs:0x28
0x5773: mov qword ptr [rsp+0x58],rax
0x5778: xor eax,eax
0x577a: mov r8,rsp
0x577d: nop dword ptr [rax]
0x5780: mov eax,dword ptr [r10]
0x5783: cmp eax,0x2f
0x5786: ja 0x57ca
0x5788: mov r11d,eax
0x578b: add r11,qword ptr [r10+0x10]
0x578f: add eax,0x8
0x5792: mov dword ptr [r10],eax
0x5795: mov rax,qword ptr [r11]
0x5798: test rax,rax
0x579b: mov qword ptr [r8+r9*8],rax
0x579f: je 0x57ab
0x57a1: add r9,0x1
0x57a5: cmp r9,0xa
0x57a9: jne 0x5780
0x57ab: call 0x5320
0x57b0: mov rax,qword ptr [rsp+0x58]
0x57b5: xor rax,qword ptr fs:0x28
0x57be: jne 0x57c5
0x57c0: add rsp,0x68
0x57c4: ret 
0x57c5: call 0x1830
0x57ca: mov r11,qword ptr [r10+0x8]
0x57ce: lea rax,[r11+0x8]
0x57d2: mov qword ptr [r10+0x8],rax
0x57d6: jmp 0x5795
0x58c0: push rbx
0x58c1: lea rsi,[rip+0x3b3f]
0x58c8: mov edx,0x5
0x58cd: xor edi,edi
0x58cf: call 0x17f0
0x58d4: lea rdx,[rip+0x3b41]
0x58db: mov rsi,rax
0x58de: mov edi,0x1
0x58e3: xor eax,eax
0x58e5: call 0x19e0
0x58ea: lea rsi,[rip+0x3b41]
0x58f1: mov edx,0x5
0x58f6: xor edi,edi
0x58f8: call 0x17f0
0x58fd: lea rcx,[rip+0x329c]
0x5904: lea rdx,[rip+0x2eb5]
0x590b: mov rsi,rax
0x590e: mov edi,0x1
0x5913: xor eax,eax
0x5915: call 0x19e0
0x591a: mov rbx,qword ptr [rip+0x206767]
0x5921: lea rsi,[rip+0x3d38]
0x5928: xor edi,edi
0x592a: mov edx,0x5
0x592f: call 0x17f0
0x5934: mov rsi,rbx
0x5937: mov rdi,rax
0x593a: pop rbx
0x593b: jmp 0x18d0
0x594e: test rbx,rbx
0x5951: jne 0x5955
0x5955: call 0x5b90
0x595a: nop word ptr [rax+rax]
0x5960: mov rax,rdi
0x5963: mul rsi
0x5966: mov rdi,rax
0x5969: seto al
0x596c: test rdi,rdi
0x596f: js 0x597b
0x5971: movzx eax,al
0x5974: test rax,rax
0x5977: jne 0x597b
0x5979: jmp 0x5940
0x597b: sub rsp,0x8
0x597f: call 0x5b90
0x5984: nop 
0x5986: nop word ptr cs:[rax+rax]
0x5990: jmp 0x5940
0x59a9: test rdi,rdi
0x59ac: jne 0x59c8
0x59bb: test rbx,rbx
0x59be: jne 0x59d1
0x59c8: call 0x1730
0x59cd: xor eax,eax
0x59cf: pop rbx
0x59d0: ret 
0x59d1: call 0x5b90
0x59d6: nop word ptr cs:[rax+rax]
0x59e0: mov rax,rsi
0x59e3: mul rdx
0x59e6: mov rsi,rax
0x59e9: seto al
0x59ec: test rsi,rsi
0x59ef: js 0x59fb
0x59f1: movzx eax,al
0x59f4: test rax,rax
0x59f7: jne 0x59fb
0x59f9: jmp 0x59a0
0x59fb: sub rsp,0x8
0x59ff: call 0x5b90
0x5a04: nop 
0x5a06: nop word ptr cs:[rax+rax]
0x5a10: test rdi,rdi
0x5a13: mov r9,rdx
0x5a16: mov rcx,qword ptr [rsi]
0x5a19: je 0x5a50
0x5a1b: xor edx,edx
0x5a1d: movabsq rax,0x5555555555555554
0x5a27: div r9
0x5a2a: cmp rax,rcx
0x5a2d: jbe 0x5a6b
0x5a2f: mov rax,rcx
0x5a32: shr rax, 1
0x5a35: lea rcx,[rax+rcx+0x1]
0x5a3a: mov qword ptr [rsi],rcx
0x5a3d: imul rcx,r9
0x5a41: mov rsi,rcx
0x5a44: jmp 0x59a0
0x5a50: test rcx,rcx
0x5a53: je 0x5a78
0x5a55: mov rax,rcx
0x5a58: mul r9
0x5a5b: seto dl
0x5a5e: test rax,rax
0x5a61: movzx edx,dl
0x5a64: js 0x5a6b
0x5a66: test rdx,rdx
0x5a69: je 0x5a3a
0x5a6b: sub rsp,0x8
0x5a6f: call 0x5b90
0x5a74: nop dword ptr [rax]
0x5a78: xor edx,edx
0x5a7a: mov eax,0x80
0x5a7f: xor r8d,r8d
0x5a82: div r9
0x5a85: test rax,rax
0x5a88: sete r8b
0x5a8c: lea rcx,[r8+rax]
0x5a90: jmp 0x5a55
0x5aa0: test rdi,rdi
0x5aa3: mov rax,qword ptr [rsi]
0x5aa6: je 0x5ad0
0x5aa8: movabsq rdx,0x5555555555555553
0x5ab2: cmp rax,rdx
0x5ab5: ja 0x5ae1
0x5ab7: mov rdx,rax
0x5aba: shr rdx, 1
0x5abd: lea rax,[rdx+rax+0x1]
0x5ac2: mov qword ptr [rsi],rax
0x5ac5: mov rsi,rax
0x5ac8: jmp 0x59a0
0x5ad0: test rax,rax
0x5ad3: mov edx,0x80
0x5ad8: cmove rax,rdx
0x5adc: test rax,rax
0x5adf: jns 0x5ac2
0x5ae1: sub rsp,0x8
0x5ae5: call 0x5b90
0x5aea: nop word ptr [rax+rax]
0x5af0: push rbx
0x5af1: mov rbx,rdi
0x5af4: call 0x5940
0x5af9: mov rdx,rbx
0x5afc: xor esi,esi
0x5afe: mov rdi,rax
0x5b01: pop rbx
0x5b02: jmp 0x18a0
0x5b10: mov rax,rdi
0x5b13: sub rsp,0x8
0x5b17: mul rsi
0x5b1a: seto dl
0x5b1d: test rax,rax
0x5b20: js 0x5b39
0x5b22: movzx edx,dl
0x5b25: test rdx,rdx
0x5b28: jne 0x5b39
0x5b2a: call 0x18e0
0x5b2f: test rax,rax
0x5b32: je 0x5b39
0x5b34: add rsp,0x8
0x5b38: ret 
0x5b39: call 0x5b90
0x5b3e: nop 
0x5b40: push rbp
0x5b41: push rbx
0x5b42: mov rbp,rdi
0x5b45: mov rdi,rsi
0x5b48: mov rbx,rsi
0x5b4b: sub rsp,0x8
0x5b4f: call 0x5940
0x5b54: add rsp,0x8
0x5b58: mov rdx,rbx
0x5b5b: mov rsi,rbp
0x5b5e: pop rbx
0x5b5f: pop rbp
0x5b60: mov rdi,rax
0x5b63: jmp 0x1900
0x5b70: push rbx
0x5b71: mov rbx,rdi
0x5b74: call 0x1810
0x5b79: mov rdi,rbx
0x5b7c: lea rsi,[rax+0x1]
0x5b80: pop rbx
0x5b81: jmp 0x5b40
0x5bc0: call 0x1740
0x5bc5: nop word ptr cs:[rax+rax]
0x5bcf: nop 
0x5bd0: push r13
0x5bd2: push r12
0x5bd4: mov r13,rsi
0x5bd7: push rbp
0x5bd8: push rbx
0x5bd9: mov rbx,rdi
0x5bdc: mov r12,rdx
0x5bdf: sub rsp,0x18
0x5be3: mov rax,qword ptr fs:0x28
0x5bec: mov qword ptr [rsp+0x8],rax
0x5bf1: xor eax,eax
0x5bf3: lea rax,[rsp+0x4]
0x5bf8: test rdi,rdi
0x5bfb: cmove rbx,rax
0x5bff: mov rdi,rbx
0x5c02: call 0x1850
0x5c07: cmp rax,-0x3
0x5c0b: mov rbp,rax
0x5c0e: jbe 0x5c30
0x5c10: test r12,r12
0x5c13: je 0x5c30
0x5c15: xor edi,edi
0x5c17: call 0x5e50
0x5c1c: test al,al
0x5c1e: jne 0x5c30
0x5c20: movzx eax,byte ptr [r13]
0x5c25: mov ebp,0x1
0x5c2a: mov dword ptr [rbx],eax
0x5c2c: nop dword ptr [rax]
0x5c30: mov rdx,qword ptr [rsp+0x8]
0x5c35: xor rdx,qword ptr fs:0x28
0x5c3e: mov rax,rbp
0x5c41: jne 0x5c4e
0x5c43: add rsp,0x18
0x5c47: pop rbx
0x5c48: pop rbp
0x5c49: pop r12
0x5c4b: pop r13
0x5c4d: ret 
0x5c4e: call 0x1830
0x5c53: nop word ptr cs:[rax+rax]
0x5c5d: nop dword ptr [rax]
0x5c60: push r13
0x5c62: push r12
0x5c64: mov rax,rsi
0x5c67: push rbp
0x5c68: push rbx
0x5c69: mov r13,rdi
0x5c6c: sub rsp,0x7f8
0x5c73: lea r12,[rsp+0x10]
0x5c78: lea rsi,[rsp+0x8]
0x5c7d: mov qword ptr [rsp+0x8],0x7d0
0x5c86: mov rcx,qword ptr fs:0x28
0x5c8f: mov qword ptr [rsp+0x7e8],rcx
0x5c97: xor ecx,ecx
0x5c99: mov rdi,r12
0x5c9c: mov rcx,rdx
0x5c9f: mov rdx,rax
0x5ca2: call 0x63f0
0x5ca7: test rax,rax
0x5caa: mov rbx,qword ptr [rsp+0x8]
0x5caf: je 0x5d3e
0x5cb5: mov rcx,r13
0x5cb8: mov rdx,rbx
0x5cbb: mov esi,0x1
0x5cc0: mov rdi,rax
0x5cc3: mov rbp,rax
0x5cc6: call 0x1a80
0x5ccb: cmp rax,rbx
0x5cce: jb 0x5d10
0x5cd0: cmp rbp,r12
0x5cd3: je 0x5cdd
0x5cd5: mov rdi,rbp
0x5cd8: call 0x1730
0x5cdd: cmp rbx,0x7fffffff
0x5ce4: ja 0x5d33
0x5ce6: mov rcx,qword ptr [rsp+0x7e8]
0x5cee: xor rcx,qword ptr fs:0x28
0x5cf7: mov eax,ebx
0x5cf9: jne 0x5d4d
0x5cfb: add rsp,0x7f8
0x5d02: pop rbx
0x5d03: pop rbp
0x5d04: pop r12
0x5d06: pop r13
0x5d08: ret 
0x5d10: cmp rbp,r12
0x5d13: mov ebx,0xffffffff
0x5d18: je 0x5ce6
0x5d1a: call 0x1750
0x5d1f: mov r13d,dword ptr [rax]
0x5d22: mov r12,rax
0x5d25: mov rdi,rbp
0x5d28: call 0x1730
0x5d2d: mov dword ptr [r12],r13d
0x5d31: jmp 0x5ce6
0x5d33: call 0x1750
0x5d38: mov dword ptr [rax],0x4b
0x5d3e: mov rdi,r13
0x5d41: mov ebx,0xffffffff
0x5d46: call 0x63e0
0x5d4b: jmp 0x5ce6
0x5d4d: call 0x1830
0x5d52: nop word ptr cs:[rax+rax]
0x5d5c: nop dword ptr [rax]
0x5d60: push r12
0x5d62: push rbp
0x5d63: mov rbp,rdi
0x5d66: push rbx
0x5d67: call 0x1780
0x5d6c: mov ebx,dword ptr [rbp]
0x5d6f: mov rdi,rbp
0x5d72: mov r12,rax
0x5d75: call 0x62c0
0x5d7a: and ebx,0x20
0x5d7d: test ebx,ebx
0x5d7f: jne 0x5d98
0x5d81: test eax,eax
0x5d83: je 0x5d8f
0x5d85: test r12,r12
0x5d88: mov eax,0xffffffff
0x5d8d: je 0x5dc8
0x5d8f: pop rbx
0x5d90: pop rbp
0x5d91: pop r12
0x5d93: ret 
0x5d98: test eax,eax
0x5d9a: jne 0x5db8
0x5d9c: call 0x1750
0x5da1: mov dword ptr [rax],0x0
0x5da7: mov eax,0xffffffff
0x5dac: pop rbx
0x5dad: pop rbp
0x5dae: pop r12
0x5db0: ret 
0x5db8: pop rbx
0x5db9: mov eax,0xffffffff
0x5dbe: pop rbp
0x5dbf: pop r12
0x5dc1: ret 
0x5dc8: call 0x1750
0x5dcd: cmp dword ptr [rax],0x9
0x5dd0: pop rbx
0x5dd1: pop rbp
0x5dd2: pop r12
0x5dd4: setne al
0x5dd7: movzx eax,al
0x5dda: neg eax
0x5ddc: ret 
0x5e28: lea rax,[rsp+0x60]
0x5e2d: mov dword ptr [rsp],0x10
0x5e34: mov edx,dword ptr [rsp+0x30]
0x5e38: mov qword ptr [rsp+0x8],rax
0x5e3d: lea rax,[rsp+0x20]
0x5e42: mov qword ptr [rsp+0x10],rax
0x5e47: jmp 0x5e01
0x5e4e: nop 
0x5e50: sub rsp,0x8
0x5e54: xor esi,esi
0x5e56: call 0x19d0
0x5e5b: mov rdx,rax
0x5e5e: mov eax,0x1
0x5e63: test rdx,rdx
0x5e66: je 0x5e85
0x5e68: lea rdi,[rip+0x38b1]
0x5e6f: mov ecx,0x2
0x5e74: mov rsi,rdx
0x5e77: rep cmpsb [rsi],es:[rdi]
0x5e79: seta cl
0x5e7c: sbb cl,0x0
0x5e7f: xor eax,eax
0x5e81: test cl,cl
0x5e83: jne 0x5e90
0x5e85: add rsp,0x8
0x5e89: ret 
0x5e90: lea rdi,[rip+0x388b]
0x5e97: mov ecx,0x6
0x5e9c: mov rsi,rdx
0x5e9f: rep cmpsb [rsi],es:[rdi]
0x5ea1: seta al
0x5ea4: sbb al,0x0
0x5ea6: test al,al
0x5ea8: setne al
0x5eab: add rsp,0x8
0x5eaf: ret 
0x5eb0: sub rsp,0x8
0x5eb4: mov edi,0xe
0x5eb9: call 0x1950
0x5ebe: test rax,rax
0x5ec1: je 0x5ee0
0x5ec3: cmp byte ptr [rax],0x0
0x5ec6: lea rdx,[rip+0x385b]
0x5ecd: cmove rax,rdx
0x5ed1: add rsp,0x8
0x5ed5: ret 
0x5ee0: lea rax,[rip+0x3841]
0x5ee7: add rsp,0x8
0x5eeb: ret 
0x6060: push r15
0x6062: push r14
0x6064: mov r15d,edx
0x6067: push r13
0x6069: push r12
0x606b: mov r13d,ecx
0x606e: push rbp
0x606f: push rbx
0x6070: mov ebp,edi
0x6072: mov r12,rsi
0x6075: mov r14d,r9d
0x6078: sub rsp,0xb8
0x607f: mov rax,qword ptr fs:0x28
0x6088: mov qword ptr [rsp+0xa8],rax
0x6090: xor eax,eax
0x6092: test edi,edi
0x6094: mov dword ptr [rsp+0xc],r8d
0x6099: lea rdx,[rsp+0x10]
0x609e: js 0x6170
0x60a4: mov esi,edi
0x60a6: mov edi,0x1
0x60ab: call 0x1960
0x60b0: test eax,eax
0x60b2: mov ebx,eax
0x60b4: mov r8d,dword ptr [rsp+0xc]
0x60b9: jne 0x6260
0x60bf: mov ecx,dword ptr [rsp+0x28]
0x60c3: mov eax,ecx
0x60c5: and eax,0xf000
0x60ca: cmp eax,0x4000
0x60cf: jne 0x6120
0x60d1: cmp r13d,-0x1
0x60d5: je 0x61b0
0x60db: cmp dword ptr [rsp+0x2c],r13d
0x60e0: je 0x61b0
0x60e6: test ebp,ebp
0x60e8: mov dword ptr [rsp+0xc],ecx
0x60ec: mov edx,r8d
0x60ef: mov esi,r13d
0x60f2: jns 0x6200
0x60f8: cmp r15d,-0x1
0x60fc: mov rdi,r12
0x60ff: je 0x6240
0x6105: call 0x1970
0x610a: mov ecx,dword ptr [rsp+0xc]
0x610e: mov ebx,eax
0x6110: test ebx,ebx
0x6112: jne 0x6144
0x6114: jmp 0x6211
0x6120: call 0x1750
0x6125: mov r13d,0x14
0x612b: mov r12,rax
0x612e: mov dword ptr [rax],0x14
0x6134: mov ebx,0xffffffff
0x6139: mov edi,ebp
0x613b: call 0x18b0
0x6140: mov dword ptr [r12],r13d
0x6144: mov rcx,qword ptr [rsp+0xa8]
0x614c: xor rcx,qword ptr fs:0x28
0x6155: mov eax,ebx
0x6157: jne 0x6270
0x615d: add rsp,0xb8
0x6164: pop rbx
0x6165: pop rbp
0x6166: pop r12
0x6168: pop r13
0x616a: pop r14
0x616c: pop r15
0x616e: ret 
0x6170: mov edi,0x1
0x6175: call 0x1920
0x617a: test eax,eax
0x617c: mov ebx,eax
0x617e: mov r8d,dword ptr [rsp+0xc]
0x6183: jne 0x6144
0x6185: mov ecx,dword ptr [rsp+0x28]
0x6189: mov eax,ecx
0x618b: and eax,0xf000
0x6190: cmp eax,0x4000
0x6195: je 0x60d1
0x619b: call 0x1750
0x61a0: or ebx,-0x1
0x61a3: mov dword ptr [rax],0x14
0x61a9: jmp 0x6144
0x61b0: cmp r8d,-0x1
0x61b4: je 0x61c1
0x61b6: cmp dword ptr [rsp+0x30],r8d
0x61bb: jne 0x60e6
0x61c1: xor edx,edx
0x61c3: mov eax,ecx
0x61c5: xor eax,r14d
0x61c8: or eax,edx
0x61ca: test dword ptr [rsp+0xf0],eax
0x61d1: je 0x6220
0x61d3: mov esi,dword ptr [rsp+0xf0]
0x61da: and ecx,0xfff
0x61e0: not esi
0x61e2: and esi,ecx
0x61e4: or esi,r14d
0x61e7: test ebp,ebp
0x61e9: jns 0x6250
0x61eb: mov rdi,r12
0x61ee: call 0x1a00
0x61f3: mov ebx,eax
0x61f5: jmp 0x6144
0x6200: mov edi,ebp
0x6202: call 0x1a50
0x6207: test eax,eax
0x6209: mov ebx,eax
0x620b: mov ecx,dword ptr [rsp+0xc]
0x620f: jne 0x6260
0x6211: test cl,0x49
0x6214: je 0x61c1
0x6216: mov edx,ecx
0x6218: and edx,0xc00
0x621e: jmp 0x61c3
0x6220: xor ebx,ebx
0x6222: test ebp,ebp
0x6224: js 0x6144
0x622a: nop word ptr [rax+rax]
0x6230: mov edi,ebp
0x6232: call 0x18b0
0x6237: mov ebx,eax
0x6239: jmp 0x6144
0x6240: call 0x19b0
0x6245: mov ecx,dword ptr [rsp+0xc]
0x6249: mov ebx,eax
0x624b: jmp 0x6110
0x6250: mov edi,ebp
0x6252: call 0x19f0
0x6257: test eax,eax
0x6259: mov ebx,eax
0x625b: je 0x6230
0x625d: nop dword ptr [rax]
0x6260: call 0x1750
0x6265: mov r12,rax
0x6268: mov r13d,dword ptr [rax]
0x626b: jmp 0x6139
0x6270: call 0x1830
0x6275: nop word ptr cs:[rax+rax]
0x627f: nop 
0x62c0: push r12
0x62c2: push rbp
0x62c3: push rbx
0x62c4: mov rbx,rdi
0x62c7: call 0x1910
0x62cc: test eax,eax
0x62ce: mov rdi,rbx
0x62d1: js 0x6327
0x62d3: call 0x1980
0x62d8: test eax,eax
0x62da: jne 0x6308
0x62dc: mov rdi,rbx
0x62df: call 0x6340
0x62e4: test eax,eax
0x62e6: je 0x6324
0x62e8: call 0x1750
0x62ed: mov r12d,dword ptr [rax]
0x62f0: mov rdi,rbx
0x62f3: mov rbp,rax
0x62f6: call 0x17d0
0x62fb: test r12d,r12d
0x62fe: jne 0x6330
0x6300: pop rbx
0x6301: pop rbp
0x6302: pop r12
0x6304: ret 
0x6308: mov rdi,rbx
0x630b: call 0x1910
0x6310: xor esi,esi
0x6312: mov edx,0x1
0x6317: mov edi,eax
0x6319: call 0x1880
0x631e: cmp rax,-0x1
0x6322: jne 0x62dc
0x6324: mov rdi,rbx
0x6327: pop rbx
0x6328: pop rbp
0x6329: pop r12
0x632b: jmp 0x17d0
0x6330: mov dword ptr [rbp],r12d
0x6334: mov eax,0xffffffff
0x6339: jmp 0x6300
0x6340: test rdi,rdi
0x6343: push rbx
0x6344: mov rbx,rdi
0x6347: je 0x635a
0x6349: call 0x1980
0x634e: test eax,eax
0x6350: je 0x635a
0x6352: test dword ptr [rbx],0x100
0x6358: jne 0x6368
0x635a: mov rdi,rbx
0x635d: pop rbx
0x635e: jmp 0x1940
0x6368: mov rdi,rbx
0x636b: mov edx,0x1
0x6370: xor esi,esi
0x6372: call 0x6380
0x6377: mov rdi,rbx
0x637a: pop rbx
0x637b: jmp 0x1940
0x6380: mov rax,qword ptr [rdi+0x8]
0x6384: cmp qword ptr [rdi+0x10],rax
0x6388: je 0x6390
0x638a: jmp 0x1a40
0x6390: mov rax,qword ptr [rdi+0x20]
0x6394: cmp qword ptr [rdi+0x28],rax
0x6398: jne 0x638a
0x639a: cmp qword ptr [rdi+0x48],0x0
0x639f: jne 0x638a
0x63a1: push r12
0x63a3: push rbp
0x63a4: mov r12d,edx
0x63a7: push rbx
0x63a8: mov rbp,rsi
0x63ab: mov rbx,rdi
0x63ae: call 0x1910
0x63b3: mov edx,r12d
0x63b6: mov rsi,rbp
0x63b9: mov edi,eax
0x63bb: call 0x1880
0x63c0: cmp rax,-0x1
0x63c4: je 0x63d2
0x63c6: and dword ptr [rbx],-0x11
0x63c9: mov qword ptr [rbx+0x90],rax
0x63d0: xor eax,eax
0x63d2: pop rbx
0x63d3: pop rbp
0x63d4: pop r12
0x63d6: ret 
0x63e0: or dword ptr [rdi],0x20
0x63e3: ret 
0x63f0: push rbp
0x63f1: mov rbp,rsp
0x63f4: push r15
0x63f6: push r14
0x63f8: push r13
0x63fa: push r12
0x63fc: lea r14,[rbp-0x3b0]
0x6403: push rbx
0x6404: mov rbx,rdx
0x6407: mov r12,rcx
0x640a: mov rdx,r14
0x640d: sub rsp,0x408
0x6414: mov qword ptr [rbp-0x418],rsi
0x641b: lea rsi,[rbp-0x2c0]
0x6422: mov qword ptr [rbp-0x3e8],rdi
0x6429: mov rdi,rbx
0x642c: mov qword ptr [rbp-0x410],r14
0x6433: mov rax,qword ptr fs:0x28
0x643c: mov qword ptr [rbp-0x38],rax
0x6440: xor eax,eax
0x6442: mov qword ptr [rbp-0x408],rsi
0x6449: call 0x79a0
0x644e: test eax,eax
0x6450: js 0x72b8
0x6456: mov rsi,r14
0x6459: mov rdi,r12
0x645c: call 0x77a0
0x6461: test eax,eax
0x6463: js 0x7320
0x6469: mov rax,qword ptr [rbp-0x2b0]
0x6470: mov rdx,-0x1
0x6477: add rax,0x7
0x647b: cmp rax,0x6
0x647f: cmovbe rax,rdx
0x6483: add rax,qword ptr [rbp-0x2a8]
0x648a: jb 0x6eb8
0x6490: mov rdi,rax
0x6493: xor r8d,r8d
0x6496: add rdi,0x6
0x649a: setb r8b
0x649e: jb 0x6eb8
0x64a4: cmp rdi,0xf9f
0x64ab: jbe 0x65f8
0x64b1: cmp rdi,-0x1
0x64b5: mov qword ptr [rbp-0x3c8],r8
0x64bc: je 0x6eb8
0x64c2: call 0x1930
0x64c7: test rax,rax
0x64ca: mov qword ptr [rbp-0x3d8],rax
0x64d1: je 0x6eb8
0x64d7: mov r8,qword ptr [rbp-0x3c8]
0x64de: mov qword ptr [rbp-0x420],rax
0x64e5: xor r12d,r12d
0x64e8: cmp qword ptr [rbp-0x3e8],0x0
0x64f0: je 0x64fc
0x64f2: mov rax,qword ptr [rbp-0x418]
0x64f9: mov r12,qword ptr [rax]
0x64fc: mov r13,qword ptr [rbp-0x2b8]
0x6503: lea rax,[rbp-0x3bc]
0x650a: mov r15,qword ptr [rbp-0x3e8]
0x6511: mov qword ptr [rbp-0x400],0x0
0x651c: mov qword ptr [rbp-0x3f0],rax
0x6523: mov rax,rbx
0x6526: mov rbx,r8
0x6529: mov rcx,qword ptr [r13]
0x652d: mov r8,rax
0x6530: cmp rcx,r8
0x6533: je 0x6ea1
0x6539: sub rcx,r8
0x653c: mov rax,rbx
0x653f: add rax,rcx
0x6542: mov r14,rax
0x6545: jae 0x6628
0x654b: cmp r12,-0x1
0x654f: je 0x7020
0x6555: call 0x1750
0x655a: mov qword ptr [rbp-0x3c8],rax
0x6561: cmp r15,qword ptr [rbp-0x3e8]
0x6568: je 0x6573
0x656a: test r15,r15
0x656d: jne 0x7050
0x6573: mov rax,qword ptr [rbp-0x420]
0x657a: test rax,rax
0x657d: je 0x6587
0x657f: mov rdi,rax
0x6582: call 0x1730
0x6587: mov rax,qword ptr [rbp-0x408]
0x658e: mov rdi,qword ptr [rbp-0x2b8]
0x6595: add rax,0x20
0x6599: cmp rdi,rax
0x659c: je 0x65a3
0x659e: call 0x1730
0x65a3: mov rax,qword ptr [rbp-0x410]
0x65aa: mov rdi,qword ptr [rbp-0x3a8]
0x65b1: add rax,0x10
0x65b5: cmp rdi,rax
0x65b8: je 0x65bf
0x65ba: call 0x1730
0x65bf: mov rax,qword ptr [rbp-0x3c8]
0x65c6: xor r15d,r15d
0x65c9: mov dword ptr [rax],0xc
0x65cf: mov rdi,qword ptr [rbp-0x38]
0x65d3: xor rdi,qword ptr fs:0x28
0x65dc: mov rax,r15
0x65df: jne 0x74e7
0x65e5: lea rsp,[rbp-0x28]
0x65e9: pop rbx
0x65ea: pop r12
0x65ec: pop r13
0x65ee: pop r14
0x65f0: pop r15
0x65f2: pop rbp
0x65f3: ret 
0x65f8: add rax,0x24
0x65fc: mov qword ptr [rbp-0x420],0x0
0x6607: and rax,-0x10
0x660b: sub rsp,rax
0x660e: lea rax,[rsp+0xf]
0x6613: and rax,-0x10
0x6617: mov qword ptr [rbp-0x3d8],rax
0x661e: jmp 0x64e5
0x6628: cmp r12,rax
0x662b: jae 0x6694
0x662d: test r12,r12
0x6630: jne 0x6f60
0x6636: cmp rax,0xc
0x663a: ja 0x6f72
0x6640: mov r12d,0xc
0x6646: cmp r15,qword ptr [rbp-0x3e8]
0x664d: sete dl
0x6650: test r15,r15
0x6653: je 0x6f98
0x6659: test dl,dl
0x665b: jne 0x6f98
0x6661: mov rsi,r12
0x6664: mov rdi,r15
0x6667: mov qword ptr [rbp-0x3d0],r8
0x666e: mov qword ptr [rbp-0x3c8],rcx
0x6675: call 0x19c0
0x667a: test rax,rax
0x667d: mov rcx,qword ptr [rbp-0x3c8]
0x6684: mov r8,qword ptr [rbp-0x3d0]
0x668b: je 0x703b
0x6691: mov r15,rax
0x6694: lea rdi,[r15+rbx]
0x6698: mov rdx,rcx
0x669b: mov rsi,r8
0x669e: call 0x1900
0x66a3: mov rax,qword ptr [rbp-0x400]
0x66aa: cmp qword ptr [rbp-0x2c0],rax
0x66b1: je 0x736b
0x66b7: movzx edx,byte ptr [r13+0x48]
0x66bc: mov rax,qword ptr [r13+0x50]
0x66c0: cmp dl,0x25
0x66c3: je 0x6e58
0x66c9: cmp rax,-0x1
0x66cd: je 0x7316
0x66d3: mov r8,qword ptr [rbp-0x3a8]
0x66da: shl rax,0x5
0x66de: add rax,r8
0x66e1: cmp dl,0x6e
0x66e4: mov edi,dword ptr [rax]
0x66e6: mov dword ptr [rbp-0x3d0],edi
0x66ec: je 0x6ed0
0x66f2: mov eax,dword ptr [r13+0x10]
0x66f6: mov rdi,qword ptr [rbp-0x3d8]
0x66fd: test al,0x1
0x66ff: mov byte ptr [rdi],0x25
0x6702: lea rbx,[rdi+0x1]
0x6706: je 0x6717
0x6708: mov rdi,qword ptr [rbp-0x3d8]
0x670f: lea rbx,[rdi+0x2]
0x6713: mov byte ptr [rdi+0x1],0x27
0x6717: test al,0x2
0x6719: je 0x6722
0x671b: mov byte ptr [rbx],0x2d
0x671e: add rbx,0x1
0x6722: test al,0x4
0x6724: je 0x672d
0x6726: mov byte ptr [rbx],0x2b
0x6729: add rbx,0x1
0x672d: test al,0x8
0x672f: je 0x6738
0x6731: mov byte ptr [rbx],0x20
0x6734: add rbx,0x1
0x6738: test al,0x10
0x673a: je 0x6743
0x673c: mov byte ptr [rbx],0x23
0x673f: add rbx,0x1
0x6743: test al,0x40
0x6745: je 0x674e
0x6747: mov byte ptr [rbx],0x49
0x674a: add rbx,0x1
0x674e: test al,0x20
0x6750: je 0x6759
0x6752: mov byte ptr [rbx],0x30
0x6755: add rbx,0x1
0x6759: mov rsi,qword ptr [r13+0x18]
0x675d: mov rdx,qword ptr [r13+0x20]
0x6761: cmp rsi,rdx
0x6764: je 0x6796
0x6766: mov rcx,rdx
0x6769: mov rdi,rbx
0x676c: mov qword ptr [rbp-0x3e0],r8
0x6773: sub rcx,rsi
0x6776: mov rdx,rcx
0x6779: mov qword ptr [rbp-0x3c8],rcx
0x6780: call 0x1900
0x6785: mov rcx,qword ptr [rbp-0x3c8]
0x678c: mov r8,qword ptr [rbp-0x3e0]
0x6793: add rbx,rcx
0x6796: mov rsi,qword ptr [r13+0x30]
0x679a: mov rdx,qword ptr [r13+0x38]
0x679e: cmp rsi,rdx
0x67a1: je 0x67d3
0x67a3: mov rcx,rdx
0x67a6: mov rdi,rbx
0x67a9: mov qword ptr [rbp-0x3e0],r8
0x67b0: sub rcx,rsi
0x67b3: mov rdx,rcx
0x67b6: mov qword ptr [rbp-0x3c8],rcx
0x67bd: call 0x1900
0x67c2: mov rcx,qword ptr [rbp-0x3c8]
0x67c9: mov r8,qword ptr [rbp-0x3e0]
0x67d0: add rbx,rcx
0x67d3: mov edi,dword ptr [rbp-0x3d0]
0x67d9: cmp edi,0x10
0x67dc: ja 0x680b
0x67de: mov eax,0x1
0x67e3: mov ecx,edi
0x67e5: shl rax,cl
0x67e8: test eax,0x14180
0x67ed: jne 0x6804
0x67ef: test ah,0x10
0x67f2: jne 0x7150
0x67f8: test ah,0x6
0x67fb: je 0x680b
0x67fd: mov byte ptr [rbx],0x6c
0x6800: add rbx,0x1
0x6804: mov byte ptr [rbx],0x6c
0x6807: add rbx,0x1
0x680b: movzx eax,byte ptr [r13+0x48]
0x6810: mov byte ptr [rbx+0x1],0x0
0x6814: mov byte ptr [rbx],al
0x6816: mov rax,qword ptr [r13+0x28]
0x681a: cmp rax,-0x1
0x681e: je 0x6f50
0x6824: shl rax,0x5
0x6828: add rax,r8
0x682b: cmp dword ptr [rax],0x5
0x682e: jne 0x7316
0x6834: mov eax,dword ptr [rax+0x10]
0x6837: mov dword ptr [rbp-0x3e0],0x1
0x6841: mov dword ptr [rbp-0x3b8],eax
0x6847: mov rax,qword ptr [r13+0x40]
0x684b: cmp rax,-0x1
0x684f: je 0x687c
0x6851: shl rax,0x5
0x6855: add r8,rax
0x6858: cmp dword ptr [r8],0x5
0x685c: jne 0x7316
0x6862: mov eax,dword ptr [rbp-0x3e0]
0x6868: mov edx,dword ptr [r8+0x10]
0x686c: mov dword ptr [rbp+rax*4-0x3b8],edx
0x6873: lea eax,[rax+0x1]
0x6876: mov dword ptr [rbp-0x3e0],eax
0x687c: mov rax,r14
0x687f: xor edx,edx
0x6881: add rax,0x2
0x6885: jb 0x74ec
0x688b: cmp r12,rax
0x688e: jae 0x68db
0x6890: test r12,r12
0x6893: jne 0x70b8
0x6899: cmp rax,0xc
0x689d: ja 0x70d0
0x68a3: mov r12d,0xc
0x68a9: cmp r15,qword ptr [rbp-0x3e8]
0x68b0: sete dl
0x68b3: test r15,r15
0x68b6: je 0x7100
0x68bc: test dl,dl
0x68be: jne 0x7100
0x68c4: mov rsi,r12
0x68c7: mov rdi,r15
0x68ca: call 0x19c0
0x68cf: test rax,rax
0x68d2: je 0x6555
0x68d8: mov r15,rax
0x68db: mov byte ptr [r15+r14],0x0
0x68e0: call 0x1750
0x68e5: mov qword ptr [rbp-0x3c8],rax
0x68ec: mov eax,dword ptr [rax]
0x68ee: mov qword ptr [rbp-0x3f8],rbx
0x68f5: mov dword ptr [rbp-0x424],eax
0x68fb: nop dword ptr [rax+rax]
0x6900: mov rax,qword ptr [rbp-0x3c8]
0x6907: mov rbx,r12
0x690a: mov r10d,0x7fffffff
0x6910: sub rbx,r14
0x6913: mov dword ptr [rbp-0x3bc],0xffffffff
0x691d: cmp rbx,0x7fffffff
0x6924: mov dword ptr [rax],0x0
0x692a: mov eax,dword ptr [rbp-0x3d0]
0x6930: cmovbe r10,rbx
0x6934: cmp eax,0x11
0x6937: ja 0x7316
0x693d: lea rsi,[rip+0x2dec]
0x6944: movsxd rax,dword ptr [rsi+rax*4]
0x6948: add rax,rsi
0x694b: jmp rax
0x6e58: cmp rax,-0x1
0x6e5c: jne 0x7316
0x6e62: mov rax,r14
0x6e65: add rax,0x1
0x6e69: mov rbx,rax
0x6e6c: jae 0x6ef8
0x6e72: cmp r12,-0x1
0x6e76: jne 0x6555
0x6e7c: mov rbx,r12
0x6e7f: mov byte ptr [r15+r14],0x25
0x6e84: mov r8,qword ptr [r13+0x8]
0x6e88: add r13,0x58
0x6e8c: mov rcx,qword ptr [r13]
0x6e90: add qword ptr [rbp-0x400],0x1
0x6e98: cmp rcx,r8
0x6e9b: jne 0x6539
0x6ea1: mov r14,rbx
0x6ea4: jmp 0x66a3
0x6eb8: call 0x1750
0x6ebd: mov qword ptr [rbp-0x3c8],rax
0x6ec4: jmp 0x6587
0x6ed0: mov edx,edi
0x6ed2: sub edx,0x12
0x6ed5: cmp edx,0x4
0x6ed8: ja 0x7316
0x6ede: lea rdi,[rip+0x2893]
0x6ee5: mov rax,qword ptr [rax+0x10]
0x6ee9: movsxd rdx,dword ptr [rdi+rdx*4]
0x6eed: add rdx,rdi
0x6ef0: jmp rdx
0x6ef8: cmp r12,rax
0x6efb: jae 0x6e7f
0x6efd: test r12,r12
0x6f00: jne 0x72d0
0x6f06: cmp rax,0xc
0x6f0a: ja 0x72e2
0x6f10: mov r12d,0xc
0x6f16: cmp r15,qword ptr [rbp-0x3e8]
0x6f1d: sete dl
0x6f20: test r15,r15
0x6f23: je 0x7190
0x6f29: test dl,dl
0x6f2b: jne 0x7190
0x6f31: mov rsi,r12
0x6f34: mov rdi,r15
0x6f37: call 0x19c0
0x6f3c: test rax,rax
0x6f3f: je 0x703b
0x6f45: mov r15,rax
0x6f48: jmp 0x6e7f
0x6f50: mov dword ptr [rbp-0x3e0],0x0
0x6f5a: jmp 0x6847
0x6f60: js 0x6555
0x6f66: add r12,r12
0x6f69: cmp r12,rax
0x6f6c: jae 0x6646
0x6f72: cmp rax,-0x1
0x6f76: je 0x6555
0x6f7c: cmp r15,qword ptr [rbp-0x3e8]
0x6f83: mov r12,rax
0x6f86: sete dl
0x6f89: test r15,r15
0x6f8c: jne 0x6659
0x6f92: nop word ptr [rax+rax]
0x6f98: mov rdi,r12
0x6f9b: mov qword ptr [rbp-0x3e0],r8
0x6fa2: mov byte ptr [rbp-0x3d0],dl
0x6fa8: mov qword ptr [rbp-0x3c8],rcx
0x6faf: call 0x1930
0x6fb4: test rax,rax
0x6fb7: mov r9,rax
0x6fba: mov rcx,qword ptr [rbp-0x3c8]
0x6fc1: movzx edx,byte ptr [rbp-0x3d0]
0x6fc8: mov r8,qword ptr [rbp-0x3e0]
0x6fcf: je 0x6555
0x6fd5: test rbx,rbx
0x6fd8: je 0x71e0
0x6fde: test dl,dl
0x6fe0: je 0x71e0
0x6fe6: mov rsi,r15
0x6fe9: mov rdx,rbx
0x6fec: mov rdi,rax
0x6fef: mov qword ptr [rbp-0x3d0],r8
0x6ff6: mov qword ptr [rbp-0x3c8],rcx
0x6ffd: call 0x1900
0x7002: mov rcx,qword ptr [rbp-0x3c8]
0x7009: mov r15,rax
0x700c: mov r8,qword ptr [rbp-0x3d0]
0x7013: jmp 0x6694
0x7020: mov r14,r12
0x7023: jmp 0x6694
0x703b: call 0x1750
0x7040: mov qword ptr [rbp-0x3c8],rax
0x7047: nop word ptr [rax+rax]
0x7050: mov rdi,r15
0x7053: call 0x1730
0x7058: jmp 0x6573
0x70b8: js 0x6555
0x70be: add r12,r12
0x70c1: cmp r12,rax
0x70c4: jae 0x68a9
0x70ca: nop word ptr [rax+rax]
0x70d0: test rdx,rdx
0x70d3: jne 0x6555
0x70d9: cmp rax,-0x1
0x70dd: je 0x6555
0x70e3: cmp r15,qword ptr [rbp-0x3e8]
0x70ea: mov r12,rax
0x70ed: sete dl
0x70f0: test r15,r15
0x70f3: jne 0x68bc
0x70f9: nop dword ptr [rax]
0x7100: mov rdi,r12
0x7103: mov byte ptr [rbp-0x3c8],dl
0x7109: call 0x1930
0x710e: test rax,rax
0x7111: mov rcx,rax
0x7114: movzx edx,byte ptr [rbp-0x3c8]
0x711b: je 0x6555
0x7121: test r14,r14
0x7124: je 0x72c0
0x712a: test dl,dl
0x712c: je 0x72c0
0x7132: mov rsi,r15
0x7135: mov rdx,r14
0x7138: mov rdi,rax
0x713b: call 0x1900
0x7140: mov r15,rax
0x7143: jmp 0x68db
0x7150: mov byte ptr [rbx],0x4c
0x7153: add rbx,0x1
0x7157: jmp 0x680b
0x7190: mov rdi,r12
0x7193: mov byte ptr [rbp-0x3c8],dl
0x7199: call 0x1930
0x719e: test rax,rax
0x71a1: mov rcx,rax
0x71a4: movzx edx,byte ptr [rbp-0x3c8]
0x71ab: je 0x6555
0x71b1: test r14,r14
0x71b4: je 0x72f4
0x71ba: test dl,dl
0x71bc: je 0x72f4
0x71c2: mov rsi,r15
0x71c5: mov rdx,r14
0x71c8: mov rdi,rax
0x71cb: call 0x1900
0x71d0: mov r15,rax
0x71d3: jmp 0x6e7f
0x71e0: mov r15,r9
0x71e3: jmp 0x6694
0x72b8: xor r15d,r15d
0x72bb: jmp 0x65cf
0x72c0: mov r15,rcx
0x72c3: jmp 0x68db
0x72d0: js 0x6555
0x72d6: add r12,r12
0x72d9: cmp r12,rax
0x72dc: jae 0x6f16
0x72e2: cmp rax,-0x1
0x72e6: je 0x6555
0x72ec: mov r12,rax
0x72ef: jmp 0x6f16
0x72f4: mov r15,rcx
0x72f7: jmp 0x6e7f
0x7316: call 0x1740
0x731b: nop dword ptr [rax+rax]
0x7320: mov rax,qword ptr [rbp-0x408]
0x7327: mov rdi,qword ptr [rbp-0x2b8]
0x732e: add rax,0x20
0x7332: cmp rdi,rax
0x7335: je 0x733c
0x7337: call 0x1730
0x733c: mov rax,qword ptr [rbp-0x410]
0x7343: mov rdi,qword ptr [rbp-0x3a8]
0x734a: add rax,0x10
0x734e: cmp rdi,rax
0x7351: je 0x7358
0x7353: call 0x1730
0x7358: call 0x1750
0x735d: xor r15d,r15d
0x7360: mov dword ptr [rax],0x16
0x7366: jmp 0x65cf
0x736b: mov rbx,r14
0x736e: xor eax,eax
0x7370: add rbx,0x1
0x7374: jb 0x7480
0x737a: cmp r12,rbx
0x737d: jae 0x73cc
0x737f: test r12,r12
0x7382: jne 0x74b9
0x7388: cmp rbx,0xc
0x738c: ja 0x749e
0x7392: mov r12d,0xc
0x7398: cmp r15,qword ptr [rbp-0x3e8]
0x739f: sete r13b
0x73a3: test r15,r15
0x73a6: je 0x744c
0x73ac: test r13b,r13b
0x73af: jne 0x744c
0x73b5: mov rsi,r12
0x73b8: mov rdi,r15
0x73bb: call 0x19c0
0x73c0: test rax,rax
0x73c3: je 0x703b
0x73c9: mov r15,rax
0x73cc: cmp r15,qword ptr [rbp-0x3e8]
0x73d3: mov byte ptr [r15+r14],0x0
0x73d8: je 0x73f1
0x73da: cmp r12,rbx
0x73dd: jbe 0x73f1
0x73df: mov rdi,r15
0x73e2: mov rsi,rbx
0x73e5: call 0x19c0
0x73ea: test rax,rax
0x73ed: cmovne r15,rax
0x73f1: mov rax,qword ptr [rbp-0x420]
0x73f8: test rax,rax
0x73fb: je 0x7405
0x73fd: mov rdi,rax
0x7400: call 0x1730
0x7405: mov rax,qword ptr [rbp-0x408]
0x740c: mov rdi,qword ptr [rbp-0x2b8]
0x7413: add rax,0x20
0x7417: cmp rdi,rax
0x741a: je 0x7421
0x741c: call 0x1730
0x7421: mov rax,qword ptr [rbp-0x410]
0x7428: mov rdi,qword ptr [rbp-0x3a8]
0x742f: add rax,0x10
0x7433: cmp rdi,rax
0x7436: je 0x743d
0x7438: call 0x1730
0x743d: mov rax,qword ptr [rbp-0x418]
0x7444: mov qword ptr [rax],r14
0x7447: jmp 0x65cf
0x744c: mov rdi,r12
0x744f: call 0x1930
0x7454: test rax,rax
0x7457: mov rcx,rax
0x745a: je 0x6555
0x7460: test r14,r14
0x7463: je 0x74d0
0x7465: test r13b,r13b
0x7468: je 0x74d0
0x746a: mov rsi,r15
0x746d: mov rdx,r14
0x7470: mov rdi,rax
0x7473: call 0x1900
0x7478: mov r15,rax
0x747b: jmp 0x73cc
0x7480: cmp r12,-0x1
0x7484: mov eax,0x1
0x7489: je 0x73cc
0x748f: test r12,r12
0x7492: je 0x6555
0x7498: js 0x6555
0x749e: test rax,rax
0x74a1: jne 0x6555
0x74a7: cmp rbx,-0x1
0x74ab: je 0x6555
0x74b1: mov r12,rbx
0x74b4: jmp 0x7398
0x74b9: js 0x6555
0x74bf: add r12,r12
0x74c2: cmp r12,rbx
0x74c5: jae 0x7398
0x74cb: jmp 0x749e
0x74d0: mov r15,rcx
0x74d3: jmp 0x73cc
0x74e7: call 0x1830
0x74ec: cmp r12,-0x1
0x74f0: mov edx,0x1
0x74f5: je 0x68db
0x74fb: test r12,r12
0x74fe: je 0x6555
0x7504: jns 0x70d0
0x750a: jmp 0x6555
0x7571: cmp esi,0x406
0x7577: jne 0x75c0
0x7579: mov rax,qword ptr [rsp+0x10]
0x757e: cmp dword ptr [rip+0x204cb3],0x0
0x7585: mov dword ptr [rsp],0x18
0x758c: mov r12d,dword ptr [rax+0x10]
0x7590: mov edx,r12d
0x7593: js 0x76c3
0x7599: xor eax,eax
0x759b: mov esi,0x406
0x75a0: call 0x17a0
0x75a5: test eax,eax
0x75a7: mov ebx,eax
0x75a9: js 0x7738
0x75af: mov dword ptr [rip+0x204c7f],0x1
0x75b9: jmp 0x7600
0x75c0: cmp esi,0xb
0x75c3: je 0x75f0
0x75c5: jg 0x7620
0x75c7: cmp esi,0x4
0x75ca: je 0x76a0
0x75d0: jg 0x7690
0x75d6: cmp esi,0x2
0x75d9: je 0x76a0
0x75df: jg 0x75f0
0x75e1: cmp esi,0x1
0x75e4: jne 0x7648
0x75e6: nop word ptr cs:[rax+rax]
0x75f0: mov edi,ebp
0x75f2: xor eax,eax
0x75f4: call 0x17a0
0x75f9: mov ebx,eax
0x75fb: nop dword ptr [rax+rax]
0x7620: cmp esi,0x407
0x7626: jg 0x7670
0x7628: cmp esi,0x406
0x762e: jge 0x76a0
0x7630: cmp esi,0x401
0x7636: je 0x75f0
0x7638: cmp esi,0x402
0x763e: je 0x76a0
0x7640: cmp esi,0x400
0x7646: je 0x76a0
0x7648: mov eax,dword ptr [rsp]
0x764b: cmp eax,0x2f
0x764e: ja 0x778a
0x7654: add rax,qword ptr [rsp+0x10]
0x7659: mov rdx,qword ptr [rax]
0x765c: mov edi,ebp
0x765e: xor eax,eax
0x7660: call 0x17a0
0x7665: mov ebx,eax
0x7667: jmp 0x7600
0x7670: cmp esi,0x409
0x7676: je 0x76a0
0x7678: jl 0x75f0
0x767e: cmp esi,0x40a
0x7684: jne 0x7648
0x7686: jmp 0x75f0
0x7690: cmp esi,0x9
0x7693: je 0x75f0
0x7699: jg 0x76a0
0x769b: cmp esi,0x8
0x769e: jne 0x7648
0x76a0: mov eax,dword ptr [rsp]
0x76a3: cmp eax,0x2f
0x76a6: ja 0x7794
0x76ac: add rax,qword ptr [rsp+0x10]
0x76b1: mov edx,dword ptr [rax]
0x76b3: mov edi,ebp
0x76b5: xor eax,eax
0x76b7: call 0x17a0
0x76bc: mov ebx,eax
0x76be: jmp 0x7600
0x76c3: xor esi,esi
0x76c5: xor eax,eax
0x76c7: call 0x17a0
0x76cc: test eax,eax
0x76ce: mov ebx,eax
0x76d0: js 0x7600
0x76d6: cmp dword ptr [rip+0x204b5b],-0x1
0x76dd: jne 0x7600
0x76e3: xor eax,eax
0x76e5: mov esi,0x1
0x76ea: mov edi,ebx
0x76ec: call 0x17a0
0x76f1: test eax,eax
0x76f3: js 0x7711
0x76f5: or eax,0x1
0x76f8: mov esi,0x2
0x76fd: mov edi,ebx
0x76ff: mov edx,eax
0x7701: xor eax,eax
0x7703: call 0x17a0
0x7708: cmp eax,-0x1
0x770b: jne 0x7600
0x7711: call 0x1750
0x7716: mov r12d,dword ptr [rax]
0x7719: mov rbp,rax
0x771c: mov edi,ebx
0x771e: call 0x18b0
0x7723: mov ebx,0xffffffff
0x7728: mov dword ptr [rbp],r12d
0x772c: jmp 0x7600
0x7738: call 0x1750
0x773d: cmp dword ptr [rax],0x16
0x7740: jne 0x75af
0x7746: xor esi,esi
0x7748: xor eax,eax
0x774a: mov edx,r12d
0x774d: mov edi,ebp
0x774f: call 0x17a0
0x7754: test eax,eax
0x7756: mov ebx,eax
0x7758: js 0x7600
0x775e: mov dword ptr [rip+0x204ad0],0xffffffff
0x7768: jmp 0x76e3
0x778a: mov rax,qword ptr [rsp+0x8]
0x778f: jmp 0x7659
0x7794: mov rax,qword ptr [rsp+0x8]
0x7799: jmp 0x76b1
0x77a0: cmp qword ptr [rsi],0x0
0x77a4: mov rax,qword ptr [rsi+0x8]
0x77a8: je 0x780d
0x77aa: lea r8,[rip+0x1fef]
0x77b1: lea r10,[rip+0x2048]
0x77b8: lea r9,[rip+0x1fcd]
0x77bf: xor ecx,ecx
0x77c1: nop dword ptr [rax]
0x77c8: cmp dword ptr [rax],0x16
0x77cb: ja 0x7810
0x77cd: mov edx,dword ptr [rax]
0x77cf: movsxd rdx,dword ptr [r8+rdx*4]
0x77d3: add rdx,r8
0x77d6: jmp rdx
0x780d: xor eax,eax
0x780f: ret 
0x7810: mov eax,0xffffffff
0x7815: ret 
0x79a0: push r15
0x79a2: push r14
0x79a4: lea rcx,[rsi+0x20]
0x79a8: push r13
0x79aa: push r12
0x79ac: lea rax,[rdx+0x10]
0x79b0: push rbp
0x79b1: push rbx
0x79b2: mov r14,rsi
0x79b5: mov r15,rdx
0x79b8: xor ebx,ebx
0x79ba: mov r9d,0x7
0x79c0: sub rsp,0x58
0x79c4: mov r10d,0x7
0x79ca: mov qword ptr [rsi],0x0
0x79d1: mov qword ptr [rsi+0x8],rcx
0x79d5: mov qword ptr [rsp+0x28],rcx
0x79da: mov r8,-0x1
0x79e1: mov qword ptr [rdx],0x0
0x79e8: mov qword ptr [rsp+0x8],rax
0x79ed: mov qword ptr [rdx+0x8],rax
0x79f1: mov qword ptr [rsp+0x18],0x0
0x79fa: mov qword ptr [rsp+0x10],0x0
0x7a03: mov qword ptr [rsp+0x20],0x0
0x7a0c: jmp 0x7a1b
0x7a10: cmp al,0x25
0x7a12: lea rbp,[rdi+0x1]
0x7a16: je 0x7a58
0x7a18: mov rdi,rbp
0x7a1b: movzx eax,byte ptr [rdi]
0x7a1e: test al,al
0x7a20: jne 0x7a10
0x7a22: lea rax,[rbx+rbx*4]
0x7a26: lea rax,[rbx+rax*2]
0x7a2a: mov qword ptr [rcx+rax*8],rdi
0x7a2e: mov rax,qword ptr [rsp+0x10]
0x7a33: mov qword ptr [r14+0x10],rax
0x7a37: mov rax,qword ptr [rsp+0x18]
0x7a3c: mov qword ptr [r14+0x18],rax
0x7a40: xor eax,eax
0x7a42: add rsp,0x58
0x7a46: pop rbx
0x7a47: pop rbp
0x7a48: pop r12
0x7a4a: pop r13
0x7a4c: pop r14
0x7a4e: pop r15
0x7a50: ret 
0x7a58: lea rax,[rbx+rbx*4]
0x7a5c: mov r13,r8
0x7a5f: lea rax,[rbx+rax*2]
0x7a63: lea r12,[rcx+rax*8]
0x7a67: mov qword ptr [r12],rdi
0x7a6b: mov dword ptr [r12+0x10],0x0
0x7a74: mov qword ptr [r12+0x18],0x0
0x7a7d: mov qword ptr [r12+0x20],0x0
0x7a86: mov qword ptr [r12+0x28],r8
0x7a8b: mov qword ptr [r12+0x30],0x0
0x7a94: mov qword ptr [r12+0x38],0x0
0x7a9d: mov qword ptr [r12+0x40],r8
0x7aa2: mov qword ptr [r12+0x50],r8
0x7aa7: movzx ebx,byte ptr [rdi+0x1]
0x7aab: lea eax,[rbx-0x30]
0x7aae: cmp al,0x9
0x7ab0: ja 0x7aee
0x7ab2: jmp 0x7eea
0x7ac0: cmp bl,0x2d
0x7ac3: je 0x7b08
0x7ac5: cmp bl,0x2b
0x7ac8: je 0x7b10
0x7aca: cmp bl,0x20
0x7acd: je 0x7b20
0x7acf: cmp bl,0x23
0x7ad2: je 0x7b30
0x7ad4: cmp bl,0x30
0x7ad7: je 0x7b40
0x7ad9: cmp bl,0x49
0x7adc: jne 0x7b50
0x7ade: or dword ptr [r12+0x10],0x40
0x7ae4: nop dword ptr [rax]
0x7ae8: movzx ebx,byte ptr [rax]
0x7aeb: mov rbp,rax
0x7aee: lea rax,[rbp+0x1]
0x7af2: cmp bl,0x27
0x7af5: mov rdx,rax
0x7af8: jne 0x7ac0
0x7afa: or dword ptr [r12+0x10],0x1
0x7b00: jmp 0x7ae8
0x7b08: or dword ptr [r12+0x10],0x2
0x7b0e: jmp 0x7ae8
0x7b10: or dword ptr [r12+0x10],0x4
0x7b16: jmp 0x7ae8
0x7b20: or dword ptr [r12+0x10],0x8
0x7b26: jmp 0x7ae8
0x7b30: or dword ptr [r12+0x10],0x10
0x7b36: jmp 0x7ae8
0x7b40: or dword ptr [r12+0x10],0x20
0x7b46: jmp 0x7ae8
0x7b50: cmp bl,0x2a
0x7b53: je 0x7d09
0x7b59: lea ecx,[rbx-0x30]
0x7b5c: cmp cl,0x9
0x7b5f: jbe 0x7f77
0x7b65: cmp bl,0x2e
0x7b68: je 0x7e3f
0x7b6e: xor eax,eax
0x7b70: mov esi,0x1
0x7b75: jmp 0x7ba7
0x7b80: cmp bl,0x4c
0x7b83: je 0x7bc0
0x7b85: cmp bl,0x6c
0x7b88: je 0x7ba0
0x7b8a: cmp bl,0x6a
0x7b8d: je 0x7ba0
0x7b8f: mov edx,ebx
0x7b91: and edx,-0x21
0x7b94: cmp dl,0x5a
0x7b97: je 0x7ba0
0x7b99: cmp bl,0x74
0x7b9c: jne 0x7bc8
0x7b9e: nop 
0x7ba0: add eax,0x8
0x7ba3: movzx ebx,byte ptr [rbp]
0x7ba7: add rbp,0x1
0x7bab: cmp bl,0x68
0x7bae: jne 0x7b80
0x7bb0: mov ecx,eax
0x7bb2: mov edx,esi
0x7bb4: and ecx,0x1
0x7bb7: shl edx,cl
0x7bb9: or eax,edx
0x7bbb: jmp 0x7ba3
0x7bc0: or eax,0x4
0x7bc3: jmp 0x7ba3
0x7bc8: lea edx,[rbx-0x25]
0x7bcb: cmp dl,0x53
0x7bce: ja 0x81eb
0x7bd4: lea rcx,[rip+0x1c41]
0x7bdb: movzx edx,dl
0x7bde: movsxd rdx,dword ptr [rcx+rdx*4]
0x7be2: add rdx,rcx
0x7be5: jmp rdx
0x7d09: mov rsi,qword ptr [rsp+0x10]
0x7d0e: mov ecx,0x1
0x7d13: mov qword ptr [r12+0x18],rbp
0x7d18: mov qword ptr [r12+0x20],rax
0x7d1d: test rsi,rsi
0x7d20: cmovne rcx,rsi
0x7d24: mov qword ptr [rsp+0x10],rcx
0x7d29: movzx ecx,byte ptr [rbp+0x1]
0x7d2d: lea esi,[rcx-0x30]
0x7d30: cmp sil,0x9
0x7d34: jbe 0x8015
0x7d3a: mov rsi,qword ptr [rsp+0x20]
0x7d3f: cmp rsi,-0x1
0x7d43: lea rdx,[rsi+0x1]
0x7d47: mov qword ptr [r12+0x28],rsi
0x7d4c: je 0x81eb
0x7d52: mov rbx,qword ptr [rsp+0x20]
0x7d57: mov rbp,rax
0x7d5a: mov qword ptr [rsp+0x20],rdx
0x7d5f: cmp r9,rbx
0x7d62: mov rcx,qword ptr [r15+0x8]
0x7d66: ja 0x83e2
0x7d6c: add r9,r9
0x7d6f: lea rax,[rbx+0x1]
0x7d73: cmp r9,rbx
0x7d76: cmovbe r9,rax
0x7d7a: movabsq rax,0x7ffffffffffffff
0x7d84: cmp r9,rax
0x7d87: ja 0x862b
0x7d8d: mov rsi,r9
0x7d90: mov qword ptr [rsp+0x40],r9
0x7d95: mov qword ptr [rsp+0x38],r10
0x7d9a: shl rsi,0x5
0x7d9e: cmp qword ptr [rsp+0x8],rcx
0x7da3: mov qword ptr [rsp+0x30],r8
0x7da8: je 0x84c1
0x7dae: mov rdi,rcx
0x7db1: call 0x19c0
0x7db6: mov rdx,qword ptr [r15+0x8]
0x7dba: mov r8,qword ptr [rsp+0x30]
0x7dbf: mov rcx,rax
0x7dc2: mov r10,qword ptr [rsp+0x38]
0x7dc7: mov r9,qword ptr [rsp+0x40]
0x7dcc: test rcx,rcx
0x7dcf: je 0x8687
0x7dd5: cmp qword ptr [rsp+0x8],rdx
0x7dda: mov rax,qword ptr [r15]
0x7ddd: je 0x859b
0x7de3: mov qword ptr [r15+0x8],rcx
0x7de7: mov rdx,rax
0x7dea: shl rdx,0x5
0x7dee: add rdx,rcx
0x7df1: cmp rax,rbx
0x7df4: ja 0x7e16
0x7df6: nop word ptr cs:[rax+rax]
0x7e00: add rax,0x1
0x7e04: mov dword ptr [rdx],0x0
0x7e0a: add rdx,0x20
0x7e0e: cmp rax,rbx
0x7e11: jbe 0x7e00
0x7e13: mov qword ptr [r15],rax
0x7e16: shl rbx,0x5
0x7e1a: lea rax,[rcx+rbx]
0x7e1e: mov edx,dword ptr [rax]
0x7e20: test edx,edx
0x7e22: jne 0x82fb
0x7e28: mov dword ptr [rax],0x5
0x7e2e: movzx ebx,byte ptr [rbp]
0x7e32: lea rdx,[rbp+0x1]
0x7e36: cmp bl,0x2e
0x7e39: jne 0x7b6e
0x7e3f: cmp byte ptr [rbp+0x1],0x2a
0x7e43: mov qword ptr [r12+0x30],rbp
0x7e48: jne 0x7fce
0x7e4e: mov rsi,qword ptr [rsp+0x18]
0x7e53: lea r11,[rbp+0x2]
0x7e57: mov eax,0x2
0x7e5c: mov qword ptr [r12+0x38],r11
0x7e61: cmp rsi,0x2
0x7e65: cmovae rax,rsi
0x7e69: mov qword ptr [rsp+0x18],rax
0x7e6e: movsx eax,byte ptr [rbp+0x2]
0x7e72: lea edx,[rax-0x30]
0x7e75: cmp dl,0x9
0x7e78: jbe 0x850c
0x7e7e: mov rbx,qword ptr [r12+0x40]
0x7e83: cmp rbx,-0x1
0x7e87: je 0x84e5
0x7e8d: cmp r9,rbx
0x7e90: mov rcx,qword ptr [r15+0x8]
0x7e94: jbe 0x83ff
0x7e9a: mov rax,qword ptr [r15]
0x7e9d: mov rdx,rax
0x7ea0: shl rdx,0x5
0x7ea4: add rdx,rcx
0x7ea7: cmp rax,rbx
0x7eaa: ja 0x7ec6
0x7eac: nop dword ptr [rax]
0x7eb0: add rax,0x1
0x7eb4: mov dword ptr [rdx],0x0
0x7eba: add rdx,0x20
0x7ebe: cmp rax,rbx
0x7ec1: jbe 0x7eb0
0x7ec3: mov qword ptr [r15],rax
0x7ec6: shl rbx,0x5
0x7eca: lea rax,[rcx+rbx]
0x7ece: mov edx,dword ptr [rax]
0x7ed0: test edx,edx
0x7ed2: jne 0x83ea
0x7ed8: mov dword ptr [rax],0x5
0x7ede: mov rbp,r11
0x7ee1: movzx ebx,byte ptr [r11]
0x7ee5: jmp 0x7b6e
0x7eea: mov rax,rbp
0x7eed: nop dword ptr [rax]
0x7ef0: add rax,0x1
0x7ef4: movzx edx,byte ptr [rax]
0x7ef7: lea ecx,[rdx-0x30]
0x7efa: cmp cl,0x9
0x7efd: jbe 0x7ef0
0x7eff: cmp dl,0x24
0x7f02: mov r13,r8
0x7f05: jne 0x7aee
0x7f0b: xor edx,edx
0x7f0d: movsx eax,bl
0x7f10: movabsq rdi,0x1999999999999999
0x7f1a: mov rsi,r8
0x7f1d: sub eax,0x30
0x7f20: cmp rdx,rdi
0x7f23: cltq 
0x7f25: ja 0x7f2e
0x7f27: lea rsi,[rdx+rdx*4]
0x7f2b: add rsi,rsi
0x7f2e: mov rcx,rbp
0x7f31: add rax,rsi
0x7f34: movzx ebx,byte ptr [rbp+0x1]
0x7f38: setb sil
0x7f3c: add rbp,0x1
0x7f40: mov rdx,rax
0x7f43: movzx esi,sil
0x7f47: test rsi,rsi
0x7f4a: lea edi,[rbx-0x30]
0x7f4d: jne 0x82de
0x7f53: cmp dil,0x9
0x7f57: jbe 0x7f0d
0x7f59: mov r13,rax
0x7f5c: sub r13,0x1
0x7f60: cmp r13,-0x3
0x7f64: ja 0x81eb
0x7f6a: lea rbp,[rcx+0x2]
0x7f6e: movzx ebx,byte ptr [rcx+0x2]
0x7f72: jmp 0x7aee
0x7f77: mov qword ptr [r12+0x18],rbp
0x7f7c: movzx edi,byte ptr [rbp]
0x7f80: mov rsi,rbp
0x7f83: lea ecx,[rdi-0x30]
0x7f86: cmp cl,0x9
0x7f89: jbe 0x7f97
0x7f8b: jmp 0x7fc0
0x7f90: mov rbp,rax
0x7f93: add rax,0x1
0x7f97: movzx edi,byte ptr [rax]
0x7f9a: lea edx,[rdi-0x30]
0x7f9d: cmp dl,0x9
0x7fa0: jbe 0x7f90
0x7fa2: mov rcx,rax
0x7fa5: lea rdx,[rbp+0x2]
0x7fa9: mov rbp,rax
0x7fac: sub rcx,rsi
0x7faf: mov rsi,qword ptr [rsp+0x10]
0x7fb4: cmp rsi,rcx
0x7fb7: cmovae rcx,rsi
0x7fbb: mov qword ptr [rsp+0x10],rcx
0x7fc0: mov qword ptr [r12+0x20],rbp
0x7fc5: movzx ebx,byte ptr [rbp]
0x7fc9: jmp 0x7b65
0x7fce: movzx eax,byte ptr [rbp+0x1]
0x7fd2: sub eax,0x30
0x7fd5: cmp al,0x9
0x7fd7: ja 0x7fee
0x7fd9: nop dword ptr [rax]
0x7fe0: add rdx,0x1
0x7fe4: movzx eax,byte ptr [rdx]
0x7fe7: sub eax,0x30
0x7fea: cmp al,0x9
0x7fec: jbe 0x7fe0
0x7fee: mov rsi,qword ptr [rsp+0x18]
0x7ff3: mov rax,rdx
0x7ff6: mov qword ptr [r12+0x38],rdx
0x7ffb: sub rax,rbp
0x7ffe: movzx ebx,byte ptr [rdx]
0x8001: mov rbp,rdx
0x8004: cmp rsi,rax
0x8007: cmovae rax,rsi
0x800b: mov qword ptr [rsp+0x18],rax
0x8010: jmp 0x7b6e
0x8015: mov rsi,rax
0x8018: add rsi,0x1
0x801c: movzx edi,byte ptr [rsi]
0x801f: lea r11d,[rdi-0x30]
0x8023: cmp r11b,0x9
0x8027: jbe 0x8018
0x8029: cmp dil,0x24
0x802d: jne 0x7d3a
0x8033: xor esi,esi
0x8035: movsx eax,cl
0x8038: movabsq rdi,0x1999999999999999
0x8042: mov rcx,r8
0x8045: sub eax,0x30
0x8048: cmp rsi,rdi
0x804b: cltq 
0x804d: ja 0x8056
0x804f: lea rcx,[rsi+rsi*4]
0x8053: add rcx,rcx
0x8056: mov rbp,rdx
0x8059: xor r11d,r11d
0x805c: add rax,rcx
0x805f: movzx ecx,byte ptr [rdx+0x1]
0x8063: setb r11b
0x8067: add rdx,0x1
0x806b: mov rsi,rax
0x806e: test r11,r11
0x8071: lea edi,[rcx-0x30]
0x8074: jne 0x857e
0x807a: cmp dil,0x9
0x807e: jbe 0x8035
0x8080: lea rbx,[rax-0x1]
0x8084: cmp rbx,-0x3
0x8088: ja 0x81eb
0x808e: mov qword ptr [r12+0x28],rbx
0x8093: add rbp,0x2
0x8097: jmp 0x7d5f
0x81eb: mov rcx,qword ptr [r15+0x8]
0x81ef: cmp qword ptr [rsp+0x8],rcx
0x81f4: je 0x81fe
0x81f6: mov rdi,rcx
0x81f9: call 0x1730
0x81fe: mov rdi,qword ptr [r14+0x8]
0x8202: cmp qword ptr [rsp+0x28],rdi
0x8207: je 0x820e
0x8209: call 0x1730
0x820e: call 0x1750
0x8213: mov dword ptr [rax],0x16
0x8219: mov eax,0xffffffff
0x821e: jmp 0x7a42
0x82de: cmp dil,0x9
0x82e2: ja 0x81eb
0x82e8: movsx eax,bl
0x82eb: mov rsi,r8
0x82ee: mov rcx,rbp
0x82f1: sub eax,0x30
0x82f4: cltq 
0x82f6: jmp 0x7f31
0x82fb: cmp edx,0x5
0x82fe: jne 0x81ef
0x8304: movzx ebx,byte ptr [rbp]
0x8308: lea rdx,[rbp+0x1]
0x830c: jmp 0x7b65
0x83e2: mov rax,qword ptr [r15]
0x83e5: jmp 0x7de7
0x83ea: cmp edx,0x5
0x83ed: jne 0x81ef
0x83f3: movzx ebx,byte ptr [r11]
0x83f7: mov rbp,r11
0x83fa: jmp 0x7b6e
0x83ff: add r9,r9
0x8402: lea rax,[rbx+0x1]
0x8406: cmp r9,rbx
0x8409: cmovbe r9,rax
0x840d: movabsq rax,0x7ffffffffffffff
0x8417: cmp r9,rax
0x841a: ja 0x862b
0x8420: mov rsi,r9
0x8423: mov qword ptr [rsp+0x48],r9
0x8428: mov qword ptr [rsp+0x40],r10
0x842d: shl rsi,0x5
0x8431: cmp qword ptr [rsp+0x8],rcx
0x8436: mov qword ptr [rsp+0x38],r8
0x843b: mov qword ptr [rsp+0x30],r11
0x8440: je 0x85fe
0x8446: mov rdi,rcx
0x8449: call 0x19c0
0x844e: mov rdx,qword ptr [r15+0x8]
0x8452: mov r11,qword ptr [rsp+0x30]
0x8457: mov rcx,rax
0x845a: mov r8,qword ptr [rsp+0x38]
0x845f: mov r10,qword ptr [rsp+0x40]
0x8464: mov r9,qword ptr [rsp+0x48]
0x8469: test rcx,rcx
0x846c: je 0x8687
0x8472: cmp qword ptr [rsp+0x8],rdx
0x8477: mov rax,qword ptr [r15]
0x847a: je 0x8640
0x8480: mov qword ptr [r15+0x8],rcx
0x8484: jmp 0x7e9d
0x8494: mov rdi,rcx
0x8497: call 0x1730
0x849c: mov rdi,qword ptr [r14+0x8]
0x84a0: cmp qword ptr [rsp+0x28],rdi
0x84a5: je 0x84ac
0x84a7: call 0x1730
0x84ac: call 0x1750
0x84b1: mov dword ptr [rax],0xc
0x84b7: mov eax,0xffffffff
0x84bc: jmp 0x7a42
0x84c1: mov rdi,rsi
0x84c4: call 0x1930
0x84c9: mov rdx,qword ptr [rsp+0x8]
0x84ce: mov rcx,rax
0x84d1: mov r9,qword ptr [rsp+0x40]
0x84d6: mov r10,qword ptr [rsp+0x38]
0x84db: mov r8,qword ptr [rsp+0x30]
0x84e0: jmp 0x7dcc
0x84e5: mov rsi,qword ptr [rsp+0x20]
0x84ea: cmp rsi,-0x1
0x84ee: lea rax,[rsi+0x1]
0x84f2: mov qword ptr [r12+0x40],rsi
0x84f7: je 0x81eb
0x84fd: mov rbx,qword ptr [rsp+0x20]
0x8502: mov qword ptr [rsp+0x20],rax
0x8507: jmp 0x7e8d
0x850c: mov rdx,r11
0x850f: add rdx,0x1
0x8513: movzx ecx,byte ptr [rdx]
0x8516: lea esi,[rcx-0x30]
0x8519: cmp sil,0x9
0x851d: jbe 0x850f
0x851f: cmp cl,0x24
0x8522: jne 0x7e7e
0x8528: xor ecx,ecx
0x852a: movabsq rsi,0x1999999999999999
0x8534: sub eax,0x30
0x8537: mov rdx,r8
0x853a: cmp rcx,rsi
0x853d: cltq 
0x853f: ja 0x8548
0x8541: lea rdx,[rcx+rcx*4]
0x8545: add rdx,rdx
0x8548: mov rsi,r11
0x854b: xor ebx,ebx
0x854d: add rdx,rax
0x8550: movsx eax,byte ptr [r11+0x1]
0x8555: setb bl
0x8558: add r11,0x1
0x855c: mov rcx,rdx
0x855f: test rbx,rbx
0x8562: lea edi,[rax-0x30]
0x8565: je 0x85d8
0x8567: cmp dil,0x9
0x856b: ja 0x81eb
0x8571: sub eax,0x30
0x8574: mov rdx,r8
0x8577: mov rsi,r11
0x857a: cltq 
0x857c: jmp 0x854b
0x857e: cmp dil,0x9
0x8582: ja 0x81eb
0x8588: movsx eax,cl
0x858b: mov rbp,rdx
0x858e: mov rcx,r8
0x8591: sub eax,0x30
0x8594: cltq 
0x8596: jmp 0x8059
0x859b: mov rsi,qword ptr [rsp+0x8]
0x85a0: shl rax,0x5
0x85a4: mov rdi,rcx
0x85a7: mov rdx,rax
0x85aa: mov qword ptr [rsp+0x40],r9
0x85af: mov qword ptr [rsp+0x38],r10
0x85b4: mov qword ptr [rsp+0x30],r8
0x85b9: call 0x1900
0x85be: mov r9,qword ptr [rsp+0x40]
0x85c3: mov rcx,rax
0x85c6: mov r10,qword ptr [rsp+0x38]
0x85cb: mov rax,qword ptr [r15]
0x85ce: mov r8,qword ptr [rsp+0x30]
0x85d3: jmp 0x7de3
0x85d8: cmp dil,0x9
0x85dc: jbe 0x852a
0x85e2: lea rbx,[rdx-0x1]
0x85e6: cmp rbx,-0x3
0x85ea: ja 0x81eb
0x85f0: mov qword ptr [r12+0x40],rbx
0x85f5: lea r11,[rsi+0x2]
0x85f9: jmp 0x7e8d
0x85fe: mov rdi,rsi
0x8601: call 0x1930
0x8606: mov rdx,qword ptr [rsp+0x8]
0x860b: mov rcx,rax
0x860e: mov r9,qword ptr [rsp+0x48]
0x8613: mov r10,qword ptr [rsp+0x40]
0x8618: mov r8,qword ptr [rsp+0x38]
0x861d: mov r11,qword ptr [rsp+0x30]
0x8622: jmp 0x8469
0x862b: cmp qword ptr [rsp+0x8],rcx
0x8630: jne 0x8494
0x8636: jmp 0x849c
0x8640: mov rsi,qword ptr [rsp+0x8]
0x8645: shl rax,0x5
0x8649: mov rdi,rcx
0x864c: mov rdx,rax
0x864f: mov qword ptr [rsp+0x48],r9
0x8654: mov qword ptr [rsp+0x40],r10
0x8659: mov qword ptr [rsp+0x38],r8
0x865e: mov qword ptr [rsp+0x30],r11
0x8663: call 0x1900
0x8668: mov r9,qword ptr [rsp+0x48]
0x866d: mov rcx,rax
0x8670: mov r10,qword ptr [rsp+0x40]
0x8675: mov rax,qword ptr [r15]
0x8678: mov r8,qword ptr [rsp+0x38]
0x867d: mov r11,qword ptr [rsp+0x30]
0x8682: jmp 0x8480
0x8687: mov rcx,rdx
0x868a: jmp 0x862b
0x8700: rep ret 
0x8d27: jmp qword ptr [rip+0x25ffff9f]
0x8d2b: jmp qword ptr [rip+0x25ffff9f]
0x8d2f: jmp qword ptr [rip+0x25ffff9f]
0x8d33: jmp qword ptr [rip+0x25ffff9f]
0x8d37: jmp qword ptr [rip+0x25ffff9f]
0x8d3b: jmp qword ptr [rip+0x25ffff9f]
0x8d3f: jmp qword ptr [rip+0x25ffff9f]
0x8d43: jmp qword ptr [rip+0x25ffff9f]
0x8d47: jmp qword ptr [rip+0x25ffff9f]
0x8d4b: jmp qword ptr [rip+0x25ffff9f]
0x8d4f: jmp qword ptr [rip+0x25ffff9f]
0x8d53: jmp qword ptr [rip+0x25ffff9f]
0x8d57: jmp qword ptr [rip+0x25ffff9f]
0x8d5b: jmp qword ptr [rip+0x25ffff9f]
0x8d5f: jmp qword ptr [rip+0x25ffff9f]
0x8d63: jmp qword ptr [rip+0x25ffff9f]
0x8d67: jmp qword ptr [rip+0x25ffff9f]
0x8d6b: jmp qword ptr [rip+0x25ffff9f]
0x8d6f: jmp qword ptr [rip+0x25ffff9f]
0x8d73: jmp qword ptr [rip+0x25ffff9f]
0x8d77: jmp qword ptr [rip+0x25ffff9f]
0x8d7b: jmp qword ptr [rip+0x25ffff9f]
0x8d7f: jmp qword ptr [rip+0x25ffff9f]
0x8d83: jmp qword ptr [rip+0x25ffff9f]
0x8d87: jmp qword ptr [rip+0x7cffff9f]
0x8d97: jmp qword ptr [rip+0x25ffff9f]
0x8d9b: jmp qword ptr [rip+0x4cffff9f]
