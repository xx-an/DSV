0x1b30: sub rsp,0x8
0x1b34: mov rax,qword ptr [rip+0x20f49d]
0x1b3b: test rax,rax
0x1b3e: je 0x1b42
0x1b40: call rax
0x1b42: add rsp,0x8
0x1b46: ret 
0x1b56: jmp qword ptr [rip+0x20f23c]
0x1bc0: jmp qword ptr [rip+0x20f20a]
0x1be0: jmp qword ptr [rip+0x20f1fa]
0x1bf0: jmp qword ptr [rip+0x20f1f2]
0x1cb0: jmp qword ptr [rip+0x20f192]
0x1d30: jmp qword ptr [rip+0x20f152]
0x1d40: jmp qword ptr [rip+0x20f14a]
0x1d80: jmp qword ptr [rip+0x20f12a]
0x1d90: jmp qword ptr [rip+0x20f122]
0x1da0: jmp qword ptr [rip+0x20f11a]
0x1dc0: jmp qword ptr [rip+0x20f10a]
0x1e30: jmp qword ptr [rip+0x20f0d2]
0x1e60: jmp qword ptr [rip+0x20f0ba]
0x1ec0: jmp qword ptr [rip+0x20f08a]
0x1ed0: jmp qword ptr [rip+0x20f082]
0x1f70: jmp qword ptr [rip+0x20f032]
0x1f80: jmp qword ptr [rip+0x20f02a]
0x1fb0: jmp qword ptr [rip+0x20f032]
0x21a4: cmp byte ptr [rsp+0x2e],0x0
0x21a9: je 0x2727
0x21af: test dil,dil
0x21b2: jne 0x21c1
0x21b4: cmp byte ptr [rip+0x20f040],0x0
0x21bb: je 0x283e
0x21c1: cmp byte ptr [rsp+0x2f],0x0
0x21c6: mov byte ptr [rip+0x20f020],0x1
0x21cd: je 0x21d6
0x21cf: mov byte ptr [rip+0x20efba],0x1
0x2300: xor ebx,ebx
0x2302: jmp 0x2090
0x26ae: mov rax,qword ptr [rip+0x20ea4b]
0x26b5: jne 0x26c0
0x26b7: cmp byte ptr [rax],0x2b
0x26ba: je 0x27ba
0x26c0: mov edx,dword ptr [rsp+0x28]
0x26c4: mov rsi,qword ptr [rsp+0x20]
0x26c9: xor ebx,ebx
0x26cb: mov qword ptr [rsi+rdx*8],rax
0x26cf: lea eax,[rdx+0x1]
0x26d2: mov dword ptr [rsp+0x28],eax
0x26d6: jmp 0x2090
0x2727: cmp byte ptr [rip+0x20ea62],0x1
0x272e: je 0x21d6
0x2734: cmp byte ptr [rsp+0x2f],0x0
0x2739: je 0x21d6
0x273f: test dil,dil
0x2742: jne 0x2751
0x2744: cmp byte ptr [rip+0x20eab0],0x0
0x274b: je 0x21d6
0x2751: cmp byte ptr [rip+0x20ea95],0x0
0x2758: jne 0x21cf
0x275e: cmp dword ptr [rip+0x20ea27],0x0
0x2765: mov byte ptr [rip+0x20ea80],0x1
0x276c: jg 0x21cf
0x2772: jmp 0x21d6
0x27ba: lea rdx,[rax+0x1]
0x27be: mov esi,0x2b
0x27c3: mov edi,0xfffffffe
0x27c8: call 0x2b80
0x27cd: test al,al
0x27cf: jne 0x2300
0x27d5: mov rax,qword ptr [rip+0x20e924]
0x27dc: jmp 0x26c0
0x283e: mov byte ptr [rip+0x20e9a7],0x1
0x2845: jmp 0x21d6
0x287f: lea rsi,[rip+0xa9aa]
0x2886: mov edx,0x5
0x288b: xor edi,edi
0x288d: call 0x1c80
0x2892: xor esi,esi
0x2894: mov rdx,rax
0x2897: mov edi,0x1
0x289c: xor eax,eax
0x289e: call 0x1ee0
0x28a3: mov rdi,qword ptr [rip+0x20e856]
0x28a6: push rsi
0x28a7: call 0x11e828cc
0x28aa: call 0x96c0
0x28ac: outsb dx,[rsi]
0x28ad: add byte ptr [rax],al
0x28af: lea rsi,[rip+0x9722]
0x28b6: mov rbx,rax
0x28b9: mov edx,0x5
0x28be: xor edi,edi
0x28c0: call 0x1c80
0x28c5: mov rcx,rbx
0x28c8: mov rdx,rax
0x28cb: xor esi,esi
0x28cd: mov edi,0x1
0x28d2: xor eax,eax
0x28d4: call 0x1ee0
0x28d9: call 0x1cb0
0x2902: nop word ptr cs:[rax+rax]
0x290c: nop dword ptr [rax]
0x293a: hlt 
0x293b: nop dword ptr [rax+rax]
0x2940: lea rdi,[rip+0x20e799]
0x2947: push rbp
0x2948: lea rax,[rip+0x20e791]
0x294f: cmp rax,rdi
0x2952: mov rbp,rsp
0x2955: je 0x2970
0x2957: mov rax,qword ptr [rip+0x20e66a]
0x295e: test rax,rax
0x2961: je 0x2970
0x2963: pop rbp
0x2964: jmp rax
0x2970: pop rbp
0x2971: ret 
0x2980: lea rdi,[rip+0x20e759]
0x2987: lea rsi,[rip+0x20e752]
0x298e: push rbp
0x298f: sub rsi,rdi
0x2992: mov rbp,rsp
0x2995: sar rsi,0x3
0x2999: mov rax,rsi
0x299c: shr rax,0x3f
0x29a0: add rsi,rax
0x29a3: sar rsi, 1
0x29a6: je 0x29c0
0x29a8: mov rax,qword ptr [rip+0x20e631]
0x29af: test rax,rax
0x29b2: je 0x29c0
0x29b4: pop rbp
0x29b5: jmp rax
0x29c0: pop rbp
0x29c1: ret 
0x29e1: push rbp
0x29e2: mov rbp,rsp
0x29e5: je 0x29f3
0x29e7: mov rdi,qword ptr [rip+0x20e61a]
0x29ee: call 0x1fb0
0x29f3: call 0x2940
0x29f8: mov byte ptr [rip+0x20e729],0x1
0x29ff: pop rbp
0x2a00: ret 
0x2a10: push rbp
0x2a11: mov rbp,rsp
0x2a14: pop rbp
0x2a15: jmp 0x2980
0x2a63: mov edi,dword ptr [rdx+0x20]
0x2a66: test edi,edi
0x2a68: jle 0x2a6d
0x2b00: mov ecx,dword ptr [rip+0x20e712]
0x2b06: push rbx
0x2b07: mov ebx,edi
0x2b09: cmp rcx,qword ptr [rip+0x20e700]
0x2b10: mov rax,qword ptr [rip+0x20e709]
0x2b17: mov rdx,rcx
0x2b1a: jb 0x2b3b
0x2b1c: lea rsi,[rip+0x20e6ed]
0x2b23: mov rdi,rax
0x2b26: call 0x9e70
0x2b2b: mov ecx,dword ptr [rip+0x20e6e7]
0x2b31: mov qword ptr [rip+0x20e6e8],rax
0x2b38: mov rdx,rcx
0x2b3b: add edx,0x1
0x2b3e: mov byte ptr [rax+rcx],bl
0x2b41: mov dword ptr [rip+0x20e6d1],edx
0x2b47: pop rbx
0x2b48: ret 
0x2b78: nop dword ptr [rax+rax]
0x2b80: push r14
0x2b82: push r13
0x2b84: lea r8,[rip+0x935a]
0x2b8b: push r12
0x2b8d: push rbp
0x2b8e: mov r14d,edi
0x2b91: push rbx
0x2b92: mov rbx,rdx
0x2b95: mov r13d,esi
0x2b98: mov edx,0xa
0x2b9d: mov rdi,rbx
0x2ba0: sub rsp,0x20
0x2ba4: lea rcx,[rsp+0x8]
0x2ba9: mov r12,rsp
0x2bac: mov qword ptr [rsp+0x10],-0x1
0x2bb5: mov rsi,r12
0x2bb8: mov rax,qword ptr fs:0x28
0x2bc1: mov qword ptr [rsp+0x18],rax
0x2bc6: xor eax,eax
0x2bc8: call 0xaf20
0x2bcd: test eax,0xfffffffd
0x2bd2: jne 0x2c88
0x2bd8: mov rdi,qword ptr [rsp]
0x2bdc: cmp rdi,rbx
0x2bdf: je 0x2c58
0x2be1: cmp qword ptr [rsp+0x8],0x0
0x2be7: je 0x2c58
0x2be9: movzx eax,byte ptr [rdi]
0x2bec: cmp al,0x3a
0x2bee: je 0x2c18
0x2bf0: test al,al
0x2bf2: jne 0x2c58
0x2bf4: mov rax,qword ptr [rsp+0x8]
0x2bf9: mov qword ptr [rip+0x20e5c8],rax
0x2c00: mov rax,qword ptr [rsp+0x10]
0x2c05: mov qword ptr [rip+0x20e41c],rax
0x2c0c: mov eax,0x1
0x2c11: jmp 0x2c5a
0x2c18: lea rbp,[rdi+0x1]
0x2c1c: lea rcx,[rsp+0x10]
0x2c21: lea r8,[rip+0x92bd]
0x2c28: mov edx,0xa
0x2c2d: mov rsi,r12
0x2c30: mov rdi,rbp
0x2c33: call 0xaf20
0x2c38: test eax,eax
0x2c3a: jne 0x2c88
0x2c3c: mov rax,qword ptr [rsp]
0x2c40: cmp rax,rbp
0x2c43: je 0x2c58
0x2c45: mov rdx,qword ptr [rsp+0x8]
0x2c4a: cmp qword ptr [rsp+0x10],rdx
0x2c4f: jae 0x2c80
0x2c51: nop dword ptr [rax]
0x2c58: xor eax,eax
0x2c5a: mov rsi,qword ptr [rsp+0x18]
0x2c5f: xor rsi,qword ptr fs:0x28
0x2c68: jne 0x2ca0
0x2c6a: add rsp,0x20
0x2c6e: pop rbx
0x2c6f: pop rbp
0x2c70: pop r12
0x2c72: pop r13
0x2c74: pop r14
0x2c76: ret 
0x2c80: movzx eax,byte ptr [rax]
0x2c83: jmp 0x2bf0
0x2c88: lea rcx,[rip+0x20db51]
0x2c8f: movsx edx,r13b
0x2c93: mov r8,rbx
0x2c96: mov esi,r14d
0x2c99: mov edi,eax
0x2c9b: call 0xae70
0x2ca0: call 0x1cb0
0x2ca5: nop 
0x2ca6: nop word ptr cs:[rax+rax]
0x2cb0: push rbx
0x2cb1: mov rbx,rdi
0x2cb4: call 0x1ca0
0x2cb9: cmp rax,0x7fffffff
0x2cbf: ja 0x2cd0
0x2cc1: mov qword ptr [rip+0x20e388],rbx
0x2cc8: mov dword ptr [rip+0x20e4be],eax
0x2cce: pop rbx
0x2ccf: ret 
0x2cd0: call 0x2b50
0x2cd5: nop 
0x2cd6: nop word ptr cs:[rax+rax]
0x2f44: call 0x1cb0
0x2f49: nop dword ptr [rax]
0x2fba: jmp 0x2f67
0x3075: mov ebp,ebx
0x3077: jmp 0x301a
0x308a: jmp 0x3024
0x3175: jmp 0x310b
0x32c6: call 0x1cb0
0x32cb: nop dword ptr [rax+rax]
0x34d7: call 0x1cb0
0x34dc: nop dword ptr [rax]
0x39e0: mov rbx,rax
0x39e3: call 0x1bb0
0x39e8: mov esi,dword ptr [rax]
0x39ea: lea rdx,[rip+0x9e59]
0x39f1: mov rcx,rbx
0x39f4: mov edi,0x1
0x39f9: xor eax,eax
0x39fb: call 0x1ee0
0x3a10: mov rbx,rax
0x3a13: call 0x1bb0
0x3a18: mov esi,dword ptr [rax]
0x3a1a: lea rdx,[rip+0x9e29]
0x3a21: mov rcx,rbx
0x3a24: mov edi,0x1
0x3a29: xor eax,eax
0x3a2b: call 0x1ee0
0x3ea0: cmp dword ptr [rbx+0x10],0x3
0x3ea4: jne 0x4060
0x4060: mov rdi,rbx
0x4063: call 0x3930
0x4068: pop rbx
0x4069: mov eax,0x1
0x406e: pop rbp
0x406f: pop r12
0x4071: pop r13
0x4073: pop r14
0x4075: ret 
0x42ad: mov rbp,rax
0x42b0: call 0x1bb0
0x42b5: mov esi,dword ptr [rax]
0x42b7: lea rdx,[rip+0x958c]
0x42be: mov rcx,rbp
0x42c1: xor eax,eax
0x42c3: xor edi,edi
0x42c5: call 0x1ee0
0x42ca: add rsp,0x8
0x42ce: mov eax,ebx
0x42d0: pop rbx
0x42d1: pop rbp
0x42d2: ret 
0x4dd5: jmp 0x49f8
0x4e1f: jmp 0x4a37
0x4e70: jmp 0x4e4b
0x51a4: mov edi,dword ptr [rip+0x20c016]
0x51aa: test edi,edi
0x51ac: jg 0x4fa5
0x51b2: add rsp,0x18
0x51b6: pop rbx
0x51b7: pop rbp
0x51b8: pop r12
0x51ba: pop r13
0x51bc: pop r14
0x51be: pop r15
0x51c0: ret 
0x5218: jmp 0x4ad1
0x5227: jmp 0x4ad8
0x52fd: lea rsi,[rip+0x6e7c]
0x5304: xor edi,edi
0x5306: call 0x1c80
0x530b: mov rdx,rbx
0x530e: mov rsi,rax
0x5311: mov edi,0x1
0x5316: xor eax,eax
0x5318: call 0x1eb0
0x531d: mov rbx,qword ptr [rip+0x20bdc4]
0x5324: lea rsi,[rip+0x6e7d]
0x532b: mov edx,0x5
0x5330: xor edi,edi
0x5332: call 0x1c80
0x5337: mov rsi,rbx
0x533a: mov rdi,rax
0x533d: call 0x1d90
0x5342: mov rbx,qword ptr [rip+0x20bd9f]
0x5349: lea rsi,[rip+0x6e88]
0x5350: mov edx,0x5
0x5355: xor edi,edi
0x5357: call 0x1c80
0x535c: mov rsi,rbx
0x535f: mov rdi,rax
0x5362: call 0x1d90
0x5367: mov rbx,qword ptr [rip+0x20bd7a]
0x536e: lea rsi,[rip+0x6e9b]
0x5375: mov edx,0x5
0x537a: xor edi,edi
0x537c: call 0x1c80
0x5381: mov rsi,rbx
0x5384: mov rdi,rax
0x5387: call 0x1d90
0x538c: mov rbx,qword ptr [rip+0x20bd55]
0x5393: lea rsi,[rip+0x6ec6]
0x539a: mov edx,0x5
0x539f: xor edi,edi
0x53a1: call 0x1c80
0x53a6: mov rsi,rbx
0x53a9: mov rdi,rax
0x53ac: call 0x1d90
0x53b1: mov rbx,qword ptr [rip+0x20bd30]
0x53b8: lea rsi,[rip+0x6ff1]
0x53bf: mov edx,0x5
0x53c4: xor edi,edi
0x53c6: call 0x1c80
0x53cb: mov rsi,rbx
0x53ce: mov rdi,rax
0x53d1: call 0x1d90
0x53d6: mov rbx,qword ptr [rip+0x20bd0b]
0x53dd: lea rsi,[rip+0x70dc]
0x53e4: mov edx,0x5
0x53e9: xor edi,edi
0x53eb: call 0x1c80
0x53f0: mov rsi,rbx
0x53f3: mov rdi,rax
0x53f6: call 0x1d90
0x53fb: mov rbx,qword ptr [rip+0x20bce6]
0x5402: lea rsi,[rip+0x7247]
0x5409: mov edx,0x5
0x540e: xor edi,edi
0x5410: call 0x1c80
0x5415: mov rsi,rbx
0x5418: mov rdi,rax
0x541b: call 0x1d90
0x5420: mov rbx,qword ptr [rip+0x20bcc1]
0x5427: lea rsi,[rip+0x73d2]
0x542e: mov edx,0x5
0x5433: xor edi,edi
0x5435: call 0x1c80
0x543a: mov rsi,rbx
0x543d: mov rdi,rax
0x5440: call 0x1d90
0x5445: mov rbx,qword ptr [rip+0x20bc9c]
0x544c: lea rsi,[rip+0x748d]
0x5453: mov edx,0x5
0x5458: xor edi,edi
0x545a: call 0x1c80
0x545f: mov rsi,rbx
0x5462: mov rdi,rax
0x5465: call 0x1d90
0x546a: mov rbx,qword ptr [rip+0x20bc77]
0x5471: lea rsi,[rip+0x74f8]
0x5478: mov edx,0x5
0x547d: xor edi,edi
0x547f: call 0x1c80
0x5484: mov rsi,rbx
0x5487: mov rdi,rax
0x548a: call 0x1d90
0x548f: mov rbx,qword ptr [rip+0x20bc52]
0x5496: lea rsi,[rip+0x7633]
0x549d: mov edx,0x5
0x54a2: xor edi,edi
0x54a4: call 0x1c80
0x54a9: mov rsi,rbx
0x54ac: mov rdi,rax
0x54af: call 0x1d90
0x54b4: mov rbx,qword ptr [rip+0x20bc2d]
0x54bb: lea rsi,[rip+0x770e]
0x54c2: mov edx,0x5
0x54c7: xor edi,edi
0x54c9: call 0x1c80
0x54ce: mov rsi,rbx
0x54d1: mov rdi,rax
0x54d4: call 0x1d90
0x54d9: mov rbx,qword ptr [rip+0x20bc08]
0x54e0: lea rsi,[rip+0x7831]
0x54e7: mov edx,0x5
0x54ec: xor edi,edi
0x54ee: call 0x1c80
0x54f3: mov rsi,rbx
0x54f6: mov rdi,rax
0x54f9: call 0x1d90
0x54fe: mov rbx,qword ptr [rip+0x20bbe3]
0x5505: lea rsi,[rip+0x78fc]
0x550c: mov edx,0x5
0x5511: xor edi,edi
0x5513: call 0x1c80
0x5518: mov rsi,rbx
0x551b: mov rdi,rax
0x551e: call 0x1d90
0x5523: mov rbx,qword ptr [rip+0x20bbbe]
0x552a: lea rsi,[rip+0x793f]
0x5531: mov edx,0x5
0x5536: xor edi,edi
0x5538: call 0x1c80
0x553d: mov rsi,rbx
0x5540: mov rdi,rax
0x5543: call 0x1d90
0x5548: mov rbx,qword ptr [rip+0x20bb99]
0x554f: lea rsi,[rip+0x7ab2]
0x5556: mov edx,0x5
0x555b: xor edi,edi
0x555d: call 0x1c80
0x5562: mov rsi,rbx
0x5565: mov rdi,rax
0x5568: call 0x1d90
0x556d: mov rbx,qword ptr [rip+0x20bb74]
0x5574: lea rsi,[rip+0x7b65]
0x557b: mov edx,0x5
0x5580: xor edi,edi
0x5582: call 0x1c80
0x5587: mov rsi,rbx
0x558a: mov rdi,rax
0x558d: call 0x1d90
0x5592: mov rbx,qword ptr [rip+0x20bb4f]
0x5599: lea rsi,[rip+0x7b70]
0x55a0: mov edx,0x5
0x55a5: xor edi,edi
0x55a7: call 0x1c80
0x55ac: mov rsi,rbx
0x55af: mov rdi,rax
0x55b2: lea rbx,[rip+0x6943]
0x55b9: call 0x1d90
0x55be: lea rax,[rip+0x693a]
0x55c5: lea rcx,[rip+0x6974]
0x55cc: mov qword ptr [rsp+0x60],0x0
0x55d5: mov qword ptr [rsp+0x68],0x0
0x55de: mov rdx,rsp
0x55e1: mov qword ptr [rsp],rax
0x55e5: lea rax,[rip+0x6915]
0x55ec: mov qword ptr [rsp+0x30],rcx
0x55f1: lea rcx,[rip+0x6952]
0x55f8: mov qword ptr [rsp+0x8],rax
0x55fd: lea rax,[rip+0x6975]
0x5604: mov qword ptr [rsp+0x40],rcx
0x5609: lea rcx,[rip+0x6944]
0x5610: mov qword ptr [rsp+0x10],rax
0x5615: lea rax,[rip+0x68f5]
0x561c: mov qword ptr [rsp+0x50],rcx
0x5621: mov qword ptr [rsp+0x18],rax
0x5626: lea rax,[rip+0x68fa]
0x562d: mov qword ptr [rsp+0x20],rax
0x5632: lea rax,[rip+0x68f8]
0x5639: mov qword ptr [rsp+0x28],rax
0x563e: mov qword ptr [rsp+0x38],rax
0x5643: mov qword ptr [rsp+0x48],rax
0x5648: mov qword ptr [rsp+0x58],rax
0x564d: nop dword ptr [rax]
0x5650: add rdx,0x10
0x5654: mov rdi,qword ptr [rdx]
0x5657: test rdi,rdi
0x565a: je 0x566f
0x565c: mov ecx,0x3
0x5661: mov rsi,rbx
0x5664: rep cmpsb [rsi],es:[rdi]
0x5666: seta al
0x5669: sbb al,0x0
0x566b: test al,al
0x566d: jne 0x5650
0x566f: mov r12,qword ptr [rdx+0x8]
0x5673: xor edi,edi
0x5675: mov edx,0x5
0x567a: lea rsi,[rip+0x68dd]
0x5681: test r12,r12
0x5684: je 0x574b
0x568a: call 0x1c80
0x568f: lea rcx,[rip+0x7ab2]
0x5696: lea rdx,[rip+0x68d8]
0x569d: mov rsi,rax
0x56a0: mov edi,0x1
0x56a5: xor eax,eax
0x56a7: call 0x1eb0
0x56ac: xor esi,esi
0x56ae: mov edi,0x5
0x56b3: call 0x1ea0
0x56b8: test rax,rax
0x56bb: je 0x56d9
0x56bd: lea rsi,[rip+0x68bf]
0x56c4: mov edx,0x3
0x56c9: mov rdi,rax
0x56cc: call 0x1bc0
0x56d1: test eax,eax
0x56d3: jne 0x57e0
0x56d9: lea rsi,[rip+0x68a7]
0x56e0: xor edi,edi
0x56e2: mov edx,0x5
0x56e7: call 0x1c80
0x56ec: lea rcx,[rip+0x6809]
0x56f3: lea rdx,[rip+0x7a4e]
0x56fa: mov rsi,rax
0x56fd: mov edi,0x1
0x5702: xor eax,eax
0x5704: call 0x1eb0
0x5709: cmp r12,rbx
0x570c: lea rcx,[rip+0x6808]
0x5713: lea rbx,[rip+0x67cb]
0x571a: cmove rbx,rcx
0x571e: lea rsi,[rip+0x7a93]
0x5725: xor edi,edi
0x5727: mov edx,0x5
0x572c: call 0x1c80
0x5731: mov rcx,rbx
0x5734: mov rsi,rax
0x5737: mov rdx,r12
0x573a: mov edi,0x1
0x573f: xor eax,eax
0x5741: call 0x1eb0
0x5746: jmp 0x52f6
0x574b: call 0x1c80
0x5750: lea rcx,[rip+0x79f1]
0x5757: lea rdx,[rip+0x6817]
0x575e: mov rsi,rax
0x5761: mov edi,0x1
0x5766: xor eax,eax
0x5768: call 0x1eb0
0x576d: xor esi,esi
0x576f: mov edi,0x5
0x5774: call 0x1ea0
0x5779: test rax,rax
0x577c: je 0x5796
0x577e: lea rsi,[rip+0x67fe]
0x5785: mov edx,0x3
0x578a: mov rdi,rax
0x578d: call 0x1bc0
0x5792: test eax,eax
0x5794: jne 0x57d9
0x5796: lea rsi,[rip+0x67ea]
0x579d: mov edx,0x5
0x57a2: xor edi,edi
0x57a4: lea r12,[rip+0x6751]
0x57ab: lea rbx,[rip+0x6769]
0x57b2: call 0x1c80
0x57b7: lea rcx,[rip+0x673e]
0x57be: lea rdx,[rip+0x7983]
0x57c5: mov rsi,rax
0x57c8: mov edi,0x1
0x57cd: xor eax,eax
0x57cf: call 0x1eb0
0x57d4: jmp 0x571e
0x57d9: lea r12,[rip+0x671c]
0x57e0: mov r13,qword ptr [rip+0x20b901]
0x57e7: lea rsi,[rip+0x7982]
0x57ee: xor edi,edi
0x57f0: mov edx,0x5
0x57f5: call 0x1c80
0x57fa: mov rsi,r13
0x57fd: mov rdi,rax
0x5800: call 0x1d90
0x5805: jmp 0x56d9
0x5810: push r12
0x5812: push rbp
0x5813: mov r12d,esi
0x5816: push rbx
0x5817: mov rbp,rcx
0x581a: mov rbx,rdi
0x581d: sub rsp,0x10
0x5821: movsx esi,byte ptr [rdi]
0x5824: mov rax,qword ptr fs:0x28
0x582d: mov qword ptr [rsp+0x8],rax
0x5832: xor eax,eax
0x5834: mov eax,esi
0x5836: sub esi,0x30
0x5839: cmp esi,0x9
0x583c: jbe 0x5848
0x583e: mov byte ptr [rdx],al
0x5840: movzx eax,byte ptr [rdi+0x1]
0x5844: add rbx,0x1
0x5848: test al,al
0x584a: jne 0x5870
0x584c: mov rax,qword ptr [rsp+0x8]
0x5851: xor rax,qword ptr fs:0x28
0x585a: jne 0x58fa
0x5860: add rsp,0x10
0x5864: pop rbx
0x5865: pop rbp
0x5866: pop r12
0x5868: ret 
0x5870: lea r8,[rip+0x666e]
0x5877: xor esi,esi
0x5879: mov rcx,rsp
0x587c: mov edx,0xa
0x5881: mov rdi,rbx
0x5884: call 0xa7b0
0x5889: test eax,eax
0x588b: jne 0x58a3
0x588d: mov rax,qword ptr [rsp]
0x5891: lea rdx,[rax-0x1]
0x5895: cmp rdx,0x7ffffffe
0x589c: ja 0x58a3
0x589e: mov dword ptr [rbp],eax
0x58a1: jmp 0x584c
0x58a3: mov rdi,rbx
0x58a6: movsx r12d,r12b
0x58aa: call 0x96c0
0x58af: lea rsi,[rip+0x793a]
0x58b6: xor edi,edi
0x58b8: mov edx,0x5
0x58bd: mov rbp,rax
0x58c0: call 0x1c80
0x58c5: cmp qword ptr [rsp],0x7fffffff
0x58cd: mov rbx,rax
0x58d0: mov esi,0x4b
0x58d5: jg 0x58de
0x58d7: call 0x1bb0
0x58dc: mov esi,dword ptr [rax]
0x58de: xor edi,edi
0x58e0: mov r8,rbp
0x58e3: mov ecx,r12d
0x58e6: mov rdx,rbx
0x58e9: xor eax,eax
0x58eb: call 0x1ee0
0x58f0: mov edi,0x1
0x58f5: call 0x52a0
0x58fa: call 0x1cb0
0x58ff: nop 
0x5900: mov qword ptr [rip+0x20b931],rdi
0x5907: ret 
0x5910: mov byte ptr [rip+0x20b919],dil
0x5917: ret 
0x5920: push rbp
0x5921: push rbx
0x5922: sub rsp,0x8
0x5926: mov rdi,qword ptr [rip+0x20b7bb]
0x592d: call 0xbcf0
0x5932: test eax,eax
0x5934: je 0x594c
0x5936: call 0x1bb0
0x593b: cmp byte ptr [rip+0x20b8ee],0x0
0x5942: mov rbx,rax
0x5945: je 0x5963
0x5947: cmp dword ptr [rax],0x20
0x594a: jne 0x5963
0x594c: mov rdi,qword ptr [rip+0x20b7cd]
0x5953: call 0xbcf0
0x5958: test eax,eax
0x595a: jne 0x59a2
0x595c: add rsp,0x8
0x5960: pop rbx
0x5961: pop rbp
0x5962: ret 
0x5963: lea rsi,[rip+0x7ed0]
0x596a: xor edi,edi
0x596c: mov edx,0x5
0x5971: call 0x1c80
0x5976: mov rdi,qword ptr [rip+0x20b8bb]
0x597d: mov rbp,rax
0x5980: test rdi,rdi
0x5983: je 0x59ad
0x5985: call 0x94c0
0x598a: mov esi,dword ptr [rbx]
0x598c: lea rdx,[rip+0x7eb3]
0x5993: mov rcx,rax
0x5996: mov r8,rbp
0x5999: xor edi,edi
0x599b: xor eax,eax
0x599d: call 0x1ee0
0x59a2: mov edi,dword ptr [rip+0x20b6b8]
0x59a8: call 0x1be0
0x59ad: mov esi,dword ptr [rbx]
0x59af: lea rdx,[rip+0x7e94]
0x59b6: mov rcx,rax
0x59b9: xor edi,edi
0x59bb: xor eax,eax
0x59bd: call 0x1ee0
0x59c2: jmp 0x59a2
0x59d0: jmp 0x1d70
0x5ac0: sub rsp,0x28
0x5ac4: xor edi,edi
0x5ac6: mov rsi,rsp
0x5ac9: mov rax,qword ptr fs:0x28
0x5ad2: mov qword ptr [rsp+0x18],rax
0x5ad7: xor eax,eax
0x5ad9: call 0x1c20
0x5ade: mov rcx,qword ptr [rsp+0x18]
0x5ae3: xor rcx,qword ptr fs:0x28
0x5aec: mov rax,qword ptr [rsp]
0x5af0: mov rdx,qword ptr [rsp+0x8]
0x5af5: jne 0x5afc
0x5af7: add rsp,0x28
0x5afb: ret 
0x5afc: call 0x1cb0
0x5b01: nop word ptr cs:[rax+rax]
0x5b0b: nop dword ptr [rax+rax]
0x5d33: nop dword ptr [rax+rax]
0x5d38: mov ebp,0xffffffff
0x5dca: call 0x1cb0
0x5dcf: nop 
0x5e00: test rdx,rdx
0x5e03: push r12
0x5e05: push rbp
0x5e06: mov rbp,rdi
0x5e09: push rbx
0x5e0a: je 0x5e39
0x5e0c: mov r12,rsi
0x5e0f: lea rbx,[rdx-0x1]
0x5e13: call 0x1f80
0x5e18: nop dword ptr [rax+rax]
0x5e20: movzx ecx,byte ptr [r12+rbx]
0x5e25: mov rdx,qword ptr [rax]
0x5e28: mov edx,dword ptr [rdx+rcx*4]
0x5e2b: mov byte ptr [rbp+rbx],dl
0x5e2f: sub rbx,0x1
0x5e33: cmp rbx,-0x1
0x5e37: jne 0x5e20
0x5e39: mov rax,rbp
0x5e3c: pop rbx
0x5e3d: pop rbp
0x5e3e: pop r12
0x5e40: ret 
0x628a: lea r9,[rsp+0xb0]
0x6292: mov byte ptr [rax],sil
0x6295: mov byte ptr [rax+0x1],0x0
0x6299: mov rcx,r13
0x629c: mov esi,0x400
0x62a1: mov dword ptr [rsp+0x38],r10d
0x62a6: mov rdi,r9
0x62a9: mov byte ptr [rsp+0x50],r8b
0x62ae: mov dword ptr [rsp+0x48],r11d
0x62b3: mov qword ptr [rsp+0x40],r9
0x62b8: call 0x1ed0
0x62bd: test rax,rax
0x62c0: je 0x5fd2
0x62c6: movsxd r10,dword ptr [rsp+0x38]
0x62cb: lea rcx,[rax-0x1]
0x62cf: mov rdx,qword ptr [rsp+0x8]
0x62d4: mov eax,0x0
0x62d9: test r10d,r10d
0x62dc: cmovns rax,r10
0x62e0: cmp rcx,rax
0x62e3: mov rbx,rax
0x62e6: cmovae rbx,rcx
0x62ea: sub rdx,r14
0x62ed: cmp rdx,rbx
0x62f0: jbe 0x5f6c
0x62f6: test rbp,rbp
0x62f9: je 0x639e
0x62ff: mov r11d,dword ptr [rsp+0x48]
0x6304: mov r9,qword ptr [rsp+0x40]
0x6309: movzx r8d,byte ptr [rsp+0x50]
0x630f: test r11d,r11d
0x6312: jne 0x636e
0x6314: cmp rcx,rax
0x6317: jae 0x636e
0x6319: movsxd rdx,r10d
0x631c: mov qword ptr [rsp+0x50],r9
0x6321: mov qword ptr [rsp+0x48],rcx
0x6326: sub rdx,rcx
0x6329: cmp r15d,0x30
0x632d: mov byte ptr [rsp+0x40],r8b
0x6332: lea rax,[rbp+rdx]
0x6337: mov qword ptr [rsp+0x38],rax
0x633c: je 0x73af
0x6342: cmp r15d,0x2b
0x6346: je 0x73af
0x634c: mov rdi,rbp
0x634f: mov esi,0x20
0x6354: call 0x1d50
0x6359: movzx r8d,byte ptr [rsp+0x40]
0x635f: mov rbp,qword ptr [rsp+0x38]
0x6364: mov r9,qword ptr [rsp+0x50]
0x6369: mov rcx,qword ptr [rsp+0x48]
0x636e: test r8b,r8b
0x6371: lea rsi,[r9+0x1]
0x6375: mov rdx,rcx
0x6378: jne 0x7398
0x637e: cmp byte ptr [rsp+0x30],0x0
0x6383: mov rdi,rbp
0x6386: mov qword ptr [rsp+0x30],rcx
0x638b: je 0x6c01
0x6391: call 0x5e50
0x6396: mov rcx,qword ptr [rsp+0x30]
0x639b: add rbp,rcx
0x639e: add r14,rbx
0x63a1: jmp 0x5fd2
0x6417: cmp r11d,0x4f
0x641b: jne 0x72a0
0x6421: test al,al
0x6423: je 0x72a0
0x6429: mov esi,r9d
0x642c: mov edx,0x2520
0x6431: xor r8d,r8d
0x6434: mov word ptr [rsp+0xab],dx
0x643c: lea rdx,[rsp+0xab]
0x6444: mov byte ptr [rsp+0xad],r11b
0x644c: mov r12,rbx
0x644f: mov r11d,edi
0x6452: lea rax,[rdx+0x3]
0x6456: jmp 0x628a
0x6512: movzx r8d,byte ptr [rsp+0x30]
0x6518: mov eax,dword ptr [rsp+0x518]
0x651f: mov rsi,-0x1
0x6526: mov dword ptr [rsp+0x48],r10d
0x652b: xor edi,edi
0x652d: mov r9d,r15d
0x6530: mov rcx,r13
0x6533: mov dword ptr [rsp+0x30],r8d
0x6538: push rax
0x6539: push qword ptr [rsp+0x18]
0x653d: push qword ptr [rsp+0x28]
0x6541: mov eax,dword ptr [rsp+0x50]
0x6545: push rax
0x6546: mov rdx,qword ptr [rsp+0x60]
0x654b: call 0x5ea0
0x6550: add rsp,0x20
0x6554: movsxd r10,dword ptr [rsp+0x48]
0x6559: mov r11,rax
0x655c: mov rsi,qword ptr [rsp+0x8]
0x6561: mov eax,0x0
0x6566: test r10d,r10d
0x6569: cmovns rax,r10
0x656d: cmp r11,rax
0x6570: mov r12,rax
0x6573: cmovae r12,r11
0x6577: sub rsi,r14
0x657a: cmp rsi,r12
0x657d: mov qword ptr [rsp+0x48],rsi
0x6582: jbe 0x5f6c
0x6588: test rbp,rbp
0x658b: je 0x5fcc
0x6591: cmp r11,rax
0x6594: jae 0x65d6
0x6596: movsxd rdx,r10d
0x6599: mov qword ptr [rsp+0x58],r11
0x659e: sub rdx,r11
0x65a1: cmp r15d,0x30
0x65a5: lea rax,[rbp+rdx]
0x65aa: mov qword ptr [rsp+0x50],rax
0x65af: je 0x76ac
0x65b5: cmp r15d,0x2b
0x65b9: je 0x76ac
0x65bf: mov rdi,rbp
0x65c2: mov esi,0x20
0x65c7: call 0x1d50
0x65cc: mov rbp,qword ptr [rsp+0x50]
0x65d1: mov r11,qword ptr [rsp+0x58]
0x65d6: mov eax,dword ptr [rsp+0x518]
0x65dd: mov qword ptr [rsp+0x50],r11
0x65e2: mov rdi,rbp
0x65e5: mov r9d,r15d
0x65e8: mov rcx,r13
0x65eb: push rax
0x65ec: push qword ptr [rsp+0x18]
0x65f0: push qword ptr [rsp+0x28]
0x65f4: mov eax,dword ptr [rsp+0x50]
0x65f8: push rax
0x65f9: mov r8d,dword ptr [rsp+0x50]
0x65fe: mov rdx,qword ptr [rsp+0x60]
0x6603: mov rsi,qword ptr [rsp+0x68]
0x6608: call 0x5ea0
0x660d: mov r11,qword ptr [rsp+0x70]
0x6612: add rsp,0x20
0x6616: add rbp,r11
0x6619: jmp 0x5fcc
0x6749: xor esi,esi
0x674b: jmp 0x6417
0x6882: mov eax,0x1
0x6887: mov byte ptr [rsp+0x38],0x0
0x688c: cmp r15d,0x2b
0x6890: je 0x7003
0x6896: mov byte ptr [rsp+0x40],0x0
0x689b: mov edi,0x2
0x68a0: xor esi,esi
0x68a2: jmp 0x6417
0x69d0: lea r9,[rsp+0xb0]
0x69d8: mov r12d,0xcccccccd
0x69de: lea r11,[r9+0x17]
0x69e2: nop word ptr [rax+rax]
0x69e8: test sil,0x1
0x69ec: lea r8,[r11-0x1]
0x69f0: je 0x6a01
0x69f2: lea rax,[r11-0x2]
0x69f6: mov byte ptr [r11-0x1],0x3a
0x69fb: mov r11,r8
0x69fe: mov r8,rax
0x6a01: mov eax,ecx
0x6a03: sar esi, 1
0x6a05: mul r12d
0x6a08: shr edx,0x3
0x6a0b: lea eax,[rdx+rdx*4]
0x6a0e: add eax,eax
0x6a10: sub ecx,eax
0x6a12: mov eax,esi
0x6a14: add ecx,0x30
0x6a17: or eax,edx
0x6a19: mov byte ptr [r11-0x1],cl
0x6a1d: mov ecx,edx
0x6a1f: mov r11,r8
0x6a22: jne 0x69e8
0x6a24: cmp r10d,edi
0x6a27: cmovge edi,r10d
0x6a2b: cmp byte ptr [rsp+0x38],0x0
0x6a30: mov dword ptr [rsp+0x48],edi
0x6a34: jne 0x72b8
0x6a3a: cmp byte ptr [rsp+0x40],0x0
0x6a3f: je 0x6cd9
0x6a45: cmp r15d,0x2d
0x6a49: je 0x7573
0x6a4f: mov byte ptr [rsp+0x38],0x2b
0x6a54: mov eax,dword ptr [rsp+0x48]
0x6a58: lea rcx,[r9+0x17]
0x6a5c: mov rdx,qword ptr [rsp+0x8]
0x6a61: sub rcx,r8
0x6a64: lea r12d,[rax-0x1]
0x6a68: sub rdx,r14
0x6a6b: sub r12d,ecx
0x6a6e: test r12d,r12d
0x6a71: jle 0x74bc
0x6a77: cmp r15d,0x5f
0x6a7b: je 0x7436
0x6a81: movsxd rax,dword ptr [rsp+0x48]
0x6a86: cmp rax,rdx
0x6a89: mov rdi,rax
0x6a8c: jae 0x5f6c
0x6a92: test r10d,r10d
0x6a95: mov eax,0x0
0x6a9a: mov esi,0x1
0x6a9f: cmovns eax,r10d
0x6aa3: cltq 
0x6aa5: test rax,rax
0x6aa8: cmovne rsi,rax
0x6aac: cmp rsi,rdx
0x6aaf: jae 0x5f6c
0x6ab5: add r14,rsi
0x6ab8: test rbp,rbp
0x6abb: movsxd r9,r12d
0x6abe: mov r12,rbx
0x6ac1: je 0x6b64
0x6ac7: test edi,edi
0x6ac9: jne 0x6b1f
0x6acb: cmp rax,0x1
0x6acf: jbe 0x6b1f
0x6ad1: movsxd rdx,r10d
0x6ad4: mov qword ptr [rsp+0x58],r8
0x6ad9: mov qword ptr [rsp+0x50],r9
0x6ade: sub rdx,0x1
0x6ae2: cmp r15d,0x30
0x6ae6: mov qword ptr [rsp+0x40],rcx
0x6aeb: lea r12,[rbp+rdx]
0x6af0: je 0x78c1
0x6af6: cmp r15d,0x2b
0x6afa: je 0x78c1
0x6b00: mov rdi,rbp
0x6b03: mov esi,0x20
0x6b08: mov rbp,r12
0x6b0b: call 0x1d50
0x6b10: mov r8,qword ptr [rsp+0x58]
0x6b15: mov r9,qword ptr [rsp+0x50]
0x6b1a: mov rcx,qword ptr [rsp+0x40]
0x6b1f: movzx eax,byte ptr [rsp+0x38]
0x6b24: add rbp,0x1
0x6b28: mov r12,rbx
0x6b2b: mov byte ptr [rbp-0x1],al
0x6b2e: test rbp,rbp
0x6b31: je 0x6b64
0x6b33: mov rdx,r9
0x6b36: mov rdi,rbp
0x6b39: mov esi,0x30
0x6b3e: mov qword ptr [rsp+0x50],r8
0x6b43: mov qword ptr [rsp+0x40],rcx
0x6b48: mov qword ptr [rsp+0x38],r9
0x6b4d: call 0x1d50
0x6b52: mov r9,qword ptr [rsp+0x38]
0x6b57: mov r8,qword ptr [rsp+0x50]
0x6b5c: mov rcx,qword ptr [rsp+0x40]
0x6b61: add rbp,r9
0x6b64: mov rdx,qword ptr [rsp+0x8]
0x6b69: add r14,r9
0x6b6c: xor r11d,r11d
0x6b6f: xor r10d,r10d
0x6b72: sub rdx,r14
0x6b75: cmp rcx,r11
0x6b78: mov rbx,r11
0x6b7b: cmovae rbx,rcx
0x6b7f: cmp rbx,rdx
0x6b82: jae 0x5f6c
0x6b88: test rbp,rbp
0x6b8b: je 0x639e
0x6b91: mov esi,dword ptr [rsp+0x48]
0x6b95: test esi,esi
0x6b97: jne 0x6be8
0x6b99: cmp rcx,r11
0x6b9c: jae 0x6be8
0x6b9e: movsxd rdx,r10d
0x6ba1: mov qword ptr [rsp+0x48],r8
0x6ba6: mov qword ptr [rsp+0x40],rcx
0x6bab: sub rdx,rcx
0x6bae: cmp r15d,0x30
0x6bb2: lea rax,[rbp+rdx]
0x6bb7: mov qword ptr [rsp+0x38],rax
0x6bbc: je 0x73fa
0x6bc2: cmp r15d,0x2b
0x6bc6: je 0x73fa
0x6bcc: mov rdi,rbp
0x6bcf: mov esi,0x20
0x6bd4: call 0x1d50
0x6bd9: mov rbp,qword ptr [rsp+0x38]
0x6bde: mov r8,qword ptr [rsp+0x48]
0x6be3: mov rcx,qword ptr [rsp+0x40]
0x6be8: cmp byte ptr [rsp+0x30],0x0
0x6bed: mov rdx,rcx
0x6bf0: mov qword ptr [rsp+0x30],rcx
0x6bf5: mov rsi,r8
0x6bf8: mov rdi,rbp
0x6bfb: jne 0x6391
0x6c01: call 0x1dd0
0x6c06: mov rcx,qword ptr [rsp+0x30]
0x6c0b: jmp 0x639b
0x6cd9: mov rdx,qword ptr [rsp+0x8]
0x6cde: lea rcx,[r9+0x17]
0x6ce2: sub rcx,r8
0x6ce5: sub rdx,r14
0x6ce8: cmp r15d,0x2d
0x6cec: je 0x6cff
0x6cee: mov r12d,dword ptr [rsp+0x48]
0x6cf3: sub r12d,ecx
0x6cf6: test r12d,r12d
0x6cf9: jg 0x7689
0x6cff: test r10d,r10d
0x6d02: mov r11d,0x0
0x6d08: mov r12,rbx
0x6d0b: cmovns r11d,r10d
0x6d0f: movsxd r11,r11d
0x6d12: jmp 0x6b75
0x6eaa: mov r15d,dword ptr [rsp+0x2c]
0x6eaf: mov eax,0x1
0x6eb4: cmp r15d,0x2b
0x6eb8: je 0x791a
0x6ebe: mov byte ptr [rsp+0x40],0x0
0x6ec3: mov byte ptr [rsp+0x38],0x0
0x6ec8: mov edi,0x2
0x6ecd: xor esi,esi
0x6ecf: jmp 0x6417
0x7003: mov edi,0x2
0x7008: mov edx,0x63
0x700d: cmp edx,ecx
0x700f: mov byte ptr [rsp+0x40],0x1
0x7014: mov r15d,0x2b
0x701a: jb 0x6749
0x7020: cmp r10d,edi
0x7023: mov r15d,0x2b
0x7029: setg qword ptr [rsp+0x40]
0x702e: xor esi,esi
0x7030: jmp 0x6417
0x7052: jmp 0x6512
0x72a0: mov eax,ecx
0x72a2: neg eax
0x72a4: cmp byte ptr [rsp+0x38],0x0
0x72a9: cmovne ecx,eax
0x72ac: jmp 0x69d0
0x72b8: cmp r15d,0x2d
0x72bc: mov byte ptr [rsp+0x38],0x2d
0x72c1: jne 0x6a54
0x72c7: test r10d,r10d
0x72ca: mov r11d,0x0
0x72d0: mov rax,qword ptr [rsp+0x8]
0x72d5: cmovns r11d,r10d
0x72d9: mov r12d,0x1
0x72df: movsxd r11,r11d
0x72e2: test r11,r11
0x72e5: cmovne r12,r11
0x72e9: sub rax,r14
0x72ec: cmp rax,r12
0x72ef: jbe 0x5f6c
0x72f5: test rbp,rbp
0x72f8: je 0x735c
0x72fa: mov eax,dword ptr [rsp+0x48]
0x72fe: test eax,eax
0x7300: jne 0x7354
0x7302: cmp r11,0x1
0x7306: jbe 0x7354
0x7308: movsxd rax,r10d
0x730b: mov rdi,rbp
0x730e: mov esi,0x20
0x7313: lea rcx,[rax-0x1]
0x7317: mov qword ptr [rsp+0x60],r9
0x731c: mov qword ptr [rsp+0x58],r8
0x7321: mov qword ptr [rsp+0x50],r11
0x7326: mov dword ptr [rsp+0x40],r10d
0x732b: mov rdx,rcx
0x732e: mov qword ptr [rsp+0x38],rcx
0x7333: call 0x1d50
0x7338: mov rcx,qword ptr [rsp+0x38]
0x733d: mov r9,qword ptr [rsp+0x60]
0x7342: mov r8,qword ptr [rsp+0x58]
0x7347: mov r11,qword ptr [rsp+0x50]
0x734c: mov r10d,dword ptr [rsp+0x40]
0x7351: add rbp,rcx
0x7354: mov byte ptr [rbp],r15b
0x7358: add rbp,0x1
0x735c: mov rdx,qword ptr [rsp+0x8]
0x7361: lea rcx,[r9+0x17]
0x7365: add r14,r12
0x7368: mov r15d,0x2d
0x736e: mov r12,rbx
0x7371: sub rcx,r8
0x7374: sub rdx,r14
0x7377: jmp 0x6b75
0x7398: mov rdi,rbp
0x739b: mov qword ptr [rsp+0x30],rcx
0x73a0: call 0x5e00
0x73a5: mov rcx,qword ptr [rsp+0x30]
0x73aa: jmp 0x639b
0x73af: mov rdi,rbp
0x73b2: mov esi,0x30
0x73b7: call 0x1d50
0x73bc: mov rbp,qword ptr [rsp+0x38]
0x73c1: movzx r8d,byte ptr [rsp+0x40]
0x73c7: mov rcx,qword ptr [rsp+0x48]
0x73cc: mov r9,qword ptr [rsp+0x50]
0x73d1: jmp 0x636e
0x73fa: mov rdi,rbp
0x73fd: mov esi,0x30
0x7402: call 0x1d50
0x7407: mov rbp,qword ptr [rsp+0x38]
0x740c: mov rcx,qword ptr [rsp+0x40]
0x7411: mov r8,qword ptr [rsp+0x48]
0x7416: jmp 0x6be8
0x7431: mov byte ptr [rsp+0x38],0x0
0x7436: movsxd r15,r12d
0x7439: cmp r15,rdx
0x743c: jae 0x5f6c
0x7442: test rbp,rbp
0x7445: je 0x7478
0x7447: mov rdi,rbp
0x744a: mov rdx,r15
0x744d: mov esi,0x20
0x7452: mov dword ptr [rsp+0x58],r10d
0x7457: mov qword ptr [rsp+0x50],r9
0x745c: add rbp,r15
0x745f: mov qword ptr [rsp+0x40],r8
0x7464: call 0x1d50
0x7469: mov r10d,dword ptr [rsp+0x58]
0x746e: mov r9,qword ptr [rsp+0x50]
0x7473: mov r8,qword ptr [rsp+0x40]
0x7478: mov rdx,qword ptr [rsp+0x8]
0x747d: mov eax,r10d
0x7480: add r14,r15
0x7483: sub eax,r12d
0x7486: cmp r10d,r12d
0x7489: mov r10d,0x0
0x748f: cmovg r10d,eax
0x7493: sub rdx,r14
0x7496: cmp byte ptr [rsp+0x38],0x0
0x749b: jne 0x75c2
0x74a1: add r9,0x17
0x74a5: movsxd r11,r10d
0x74a8: mov r12,rbx
0x74ab: mov rcx,r9
0x74ae: mov r15d,0x5f
0x74b4: sub rcx,r8
0x74b7: jmp 0x6b75
0x74bc: test r10d,r10d
0x74bf: mov r11d,0x0
0x74c5: mov r12d,0x1
0x74cb: cmovns r11d,r10d
0x74cf: movsxd r11,r11d
0x74d2: test r11,r11
0x74d5: cmovne r12,r11
0x74d9: cmp r12,rdx
0x74dc: jae 0x5f6c
0x74e2: test rbp,rbp
0x74e5: je 0x7560
0x74e7: mov edi,dword ptr [rsp+0x48]
0x74eb: test edi,edi
0x74ed: jne 0x7554
0x74ef: cmp r11,0x1
0x74f3: jbe 0x7554
0x74f5: movsxd rdx,r10d
0x74f8: mov dword ptr [rsp+0x6c],r10d
0x74fd: mov qword ptr [rsp+0x60],r8
0x7502: sub rdx,0x1
0x7506: cmp r15d,0x30
0x750a: mov qword ptr [rsp+0x58],rcx
0x750f: lea rax,[rbp+rdx]
0x7514: mov qword ptr [rsp+0x50],r11
0x7519: mov qword ptr [rsp+0x40],rax
0x751e: je 0x78ef
0x7524: cmp r15d,0x2b
0x7528: je 0x78ef
0x752e: mov rdi,rbp
0x7531: mov esi,0x20
0x7536: call 0x1d50
0x753b: mov rbp,qword ptr [rsp+0x40]
0x7540: mov r10d,dword ptr [rsp+0x6c]
0x7545: mov r8,qword ptr [rsp+0x60]
0x754a: mov rcx,qword ptr [rsp+0x58]
0x754f: mov r11,qword ptr [rsp+0x50]
0x7554: movzx eax,byte ptr [rsp+0x38]
0x7559: add rbp,0x1
0x755d: mov byte ptr [rbp-0x1],al
0x7560: mov rdx,qword ptr [rsp+0x8]
0x7565: add r14,r12
0x7568: mov r12,rbx
0x756b: sub rdx,r14
0x756e: jmp 0x6b75
0x7573: mov r15d,0x2b
0x7579: jmp 0x72c7
0x75c2: movsxd r15,r10d
0x75c5: mov r12d,0x1
0x75cb: test r15,r15
0x75ce: cmovne r12,r15
0x75d2: cmp r12,rdx
0x75d5: jae 0x5f6c
0x75db: test rbp,rbp
0x75de: je 0x763b
0x75e0: mov r11d,dword ptr [rsp+0x48]
0x75e5: test r11d,r11d
0x75e8: jne 0x762f
0x75ea: cmp r15,0x1
0x75ee: jbe 0x762f
0x75f0: lea rcx,[r15-0x1]
0x75f4: mov rdi,rbp
0x75f7: mov esi,0x20
0x75fc: mov dword ptr [rsp+0x60],r10d
0x7601: mov qword ptr [rsp+0x58],r9
0x7606: mov rdx,rcx
0x7609: mov qword ptr [rsp+0x50],r8
0x760e: mov qword ptr [rsp+0x40],rcx
0x7613: call 0x1d50
0x7618: mov rcx,qword ptr [rsp+0x40]
0x761d: mov r10d,dword ptr [rsp+0x60]
0x7622: mov r9,qword ptr [rsp+0x58]
0x7627: mov r8,qword ptr [rsp+0x50]
0x762c: add rbp,rcx
0x762f: movzx eax,byte ptr [rsp+0x38]
0x7634: add rbp,0x1
0x7638: mov byte ptr [rbp-0x1],al
0x763b: mov rdx,qword ptr [rsp+0x8]
0x7640: add r9,0x17
0x7644: add r14,r12
0x7647: mov rcx,r9
0x764a: mov r11,r15
0x764d: mov r12,rbx
0x7650: sub rcx,r8
0x7653: mov r15d,0x5f
0x7659: sub rdx,r14
0x765c: jmp 0x6b75
0x7689: cmp r15d,0x5f
0x768d: je 0x7431
0x7693: movsxd rax,dword ptr [rsp+0x48]
0x7698: cmp rax,rdx
0x769b: jae 0x5f6c
0x76a1: movsxd r9,r12d
0x76a4: mov r12,rbx
0x76a7: jmp 0x6b2e
0x76ac: mov rdi,rbp
0x76af: mov esi,0x30
0x76b4: call 0x1d50
0x76b9: mov rbp,qword ptr [rsp+0x50]
0x76be: mov r11,qword ptr [rsp+0x58]
0x76c3: jmp 0x65d6
0x78c1: mov rdi,rbp
0x78c4: mov esi,0x30
0x78c9: mov rbp,r12
0x78cc: call 0x1d50
0x78d1: mov rcx,qword ptr [rsp+0x40]
0x78d6: mov r9,qword ptr [rsp+0x50]
0x78db: mov r8,qword ptr [rsp+0x58]
0x78e0: jmp 0x6b1f
0x78ef: mov rdi,rbp
0x78f2: mov esi,0x30
0x78f7: call 0x1d50
0x78fc: mov rbp,qword ptr [rsp+0x40]
0x7901: mov r11,qword ptr [rsp+0x50]
0x7906: mov rcx,qword ptr [rsp+0x58]
0x790b: mov r8,qword ptr [rsp+0x60]
0x7910: mov r10d,dword ptr [rsp+0x6c]
0x7915: jmp 0x7554
0x791a: mov byte ptr [rsp+0x38],0x0
0x791f: mov edi,0x2
0x7924: jmp 0x7020
0x7935: call 0x1cb0
0x793a: add ecx,0x64
0x793d: test r15d,r15d
0x7940: je 0x6eaa
0x7946: jmp 0x6882
0x79a9: call 0x1cb0
0x79ae: nop 
0x7a4f: nop 
0x7a50: push rbp
0x7a51: push rbx
0x7a52: mov rbp,rdi
0x7a55: mov ebx,esi
0x7a57: sub rsp,0x8
0x7a5b: call 0xbd70
0x7a60: movzx edx,byte ptr [rax]
0x7a63: and edx,-0x21
0x7a66: cmp dl,0x55
0x7a69: je 0x7ae0
0x7a6b: cmp dl,0x47
0x7a6e: je 0x7a90
0x7a70: lea rax,[rip+0x603c]
0x7a77: lea rdx,[rip+0x6aab]
0x7a7e: cmp ebx,0x9
0x7a81: cmovne rax,rdx
0x7a85: add rsp,0x8
0x7a89: pop rbx
0x7a8a: pop rbp
0x7a8b: ret 
0x7a90: movzx edx,byte ptr [rax+0x1]
0x7a94: and edx,-0x21
0x7a97: cmp dl,0x42
0x7a9a: jne 0x7a70
0x7a9c: cmp byte ptr [rax+0x2],0x31
0x7aa0: jne 0x7a70
0x7aa2: cmp byte ptr [rax+0x3],0x38
0x7aa6: jne 0x7a70
0x7aa8: cmp byte ptr [rax+0x4],0x30
0x7aac: jne 0x7a70
0x7aae: cmp byte ptr [rax+0x5],0x33
0x7ab2: jne 0x7a70
0x7ab4: cmp byte ptr [rax+0x6],0x30
0x7ab8: jne 0x7a70
0x7aba: cmp byte ptr [rax+0x7],0x0
0x7abe: jne 0x7a70
0x7ac0: cmp byte ptr [rbp],0x60
0x7ac4: lea rax,[rip+0x5fe1]
0x7acb: lea rdx,[rip+0x5fde]
0x7ad2: cmovne rax,rdx
0x7ad6: add rsp,0x8
0x7ada: pop rbx
0x7adb: pop rbp
0x7adc: ret 
0x7ae0: movzx edx,byte ptr [rax+0x1]
0x7ae4: and edx,-0x21
0x7ae7: cmp dl,0x54
0x7aea: jne 0x7a70
0x7aec: movzx edx,byte ptr [rax+0x2]
0x7af0: and edx,-0x21
0x7af3: cmp dl,0x46
0x7af6: jne 0x7a70
0x7afc: cmp byte ptr [rax+0x3],0x2d
0x7b00: jne 0x7a70
0x7b06: cmp byte ptr [rax+0x4],0x38
0x7b0a: jne 0x7a70
0x7b10: cmp byte ptr [rax+0x5],0x0
0x7b14: jne 0x7a70
0x7b1a: cmp byte ptr [rbp],0x60
0x7b1e: lea rax,[rip+0x5f7f]
0x7b25: lea rdx,[rip+0x5f7c]
0x7b2c: cmovne rax,rdx
0x7b30: add rsp,0x8
0x7b34: pop rbx
0x7b35: pop rbp
0x7b36: ret 
0x7c13: xor r11d,r11d
0x7c16: mov rax,rbp
0x7c19: mov r8d,r12d
0x7c1c: mov rbp,r11
0x7c1f: mov r11,rax
0x7c22: nop word ptr [rax+rax]
0x7c28: cmp r11,rbp
0x7c2b: setne r12b
0x7c2f: cmp r11,-0x1
0x7c33: jne 0x7c42
0x7c35: mov rax,qword ptr [rsp+0x10]
0x7c3a: cmp byte ptr [rax+rbp],0x0
0x7c3e: setne r12b
0x7c42: test r12b,r12b
0x7c45: je 0x82a0
0x7c4b: cmp dword ptr [rsp+0x8],0x2
0x7c50: mov rdi,qword ptr [rsp+0x10]
0x7c55: lea r9,[rdi+rbp]
0x7c59: setne al
0x7c5c: and al,byte ptr [rsp+0xd]
0x7c60: mov r10d,eax
0x7c63: je 0x7d10
0x7c69: mov rax,qword ptr [rsp+0x18]
0x7c6e: test rax,rax
0x7c71: je 0x80a0
0x7c77: cmp r11,-0x1
0x7c7b: lea rbx,[rbp+rax]
0x7c80: jne 0x7cb0
0x7c82: cmp rax,0x1
0x7c86: jbe 0x7cb0
0x7c88: mov byte ptr [rsp+0x38],r8b
0x7c8d: mov byte ptr [rsp+0x30],r10b
0x7c92: mov qword ptr [rsp+0x28],r9
0x7c97: call 0x1ca0
0x7c9c: movzx r8d,byte ptr [rsp+0x38]
0x7ca2: movzx r10d,byte ptr [rsp+0x30]
0x7ca8: mov r11,rax
0x7cab: mov r9,qword ptr [rsp+0x28]
0x7cb0: cmp rbx,r11
0x7cb3: mov byte ptr [rsp+0x28],r10b
0x7cb8: ja 0x8270
0x7cbe: mov rdx,qword ptr [rsp+0x18]
0x7cc3: mov rsi,qword ptr [rsp+0x48]
0x7cc8: mov rdi,r9
0x7ccb: mov qword ptr [rsp+0x40],r11
0x7cd0: mov byte ptr [rsp+0x38],r8b
0x7cd5: mov qword ptr [rsp+0x30],r9
0x7cda: call 0x1d80
0x7cdf: test eax,eax
0x7ce1: mov r9,qword ptr [rsp+0x30]
0x7ce6: movzx r8d,byte ptr [rsp+0x38]
0x7cec: mov r11,qword ptr [rsp+0x40]
0x7cf1: jne 0x8270
0x7cf7: cmp byte ptr [rsp+0xf],0x0
0x7cfc: movzx r10d,byte ptr [rsp+0x28]
0x7d02: jne 0x8c85
0x7d08: nop dword ptr [rax+rax]
0x7d10: movzx ebx,byte ptr [r9]
0x7d14: cmp bl,0x7e
0x7d17: ja 0x8038
0x7d1d: lea rcx,[rip+0x5e28]
0x7d24: movzx edx,bl
0x7d27: movsxd rax,dword ptr [rcx+rdx*4]
0x7d2b: add rax,rcx
0x7d2e: jmp rax
0x7d68: cmp byte ptr [rsp+0xd],0x1
0x7d6d: jne 0x7e82
0x7d73: test dl,dl
0x7d75: jne 0x7e82
0x7d7b: mov rsi,qword ptr [rsp+0x20]
0x7d80: test rsi,rsi
0x7d83: je 0x7d99
0x7d85: mov edx,ebx
0x7d87: shr dl,0x5
0x7d8a: movzx edx,dl
0x7d8d: mov edx,dword ptr [rsi+rdx*4]
0x7d90: btl edx,ebx
0x7d93: jb 0x7ee3
0x7d99: test r10b,r10b
0x7d9c: jne 0x7ee3
0x7da2: xor eax,0x1
0x7da5: add rbp,0x1
0x7da9: and eax,r8d
0x7dac: test al,al
0x7dae: je 0x7dd0
0x7db0: cmp r13,r15
0x7db3: jbe 0x7dba
0x7db5: mov byte ptr [r14+r15],0x27
0x7dba: lea rax,[r15+0x1]
0x7dbe: cmp r13,rax
0x7dc1: jbe 0x7dc9
0x7dc3: mov byte ptr [r14+r15+0x1],0x27
0x7dc9: add r15,0x2
0x7dcd: xor r8d,r8d
0x7dd0: cmp r15,r13
0x7dd3: jae 0x7dd9
0x7dd5: mov byte ptr [r14+r15],bl
0x7dd9: movzx edi,byte ptr [rsp+0xe]
0x7dde: add r15,0x1
0x7de2: mov eax,0x0
0x7de7: test r12b,r12b
0x7dea: cmove edi,eax
0x7ded: mov byte ptr [rsp+0xe],dil
0x7df2: jmp 0x7c28
0x7e82: cmp byte ptr [rsp+0xf],0x0
0x7e87: jne 0x7d7b
0x7e8d: jmp 0x7d99
0x7ee3: cmp dword ptr [rsp+0x8],0x2
0x7ee8: sete dl
0x7eeb: cmp byte ptr [rsp+0xf],0x0
0x7ef0: mov eax,edx
0x7ef2: jne 0x8748
0x7ef8: mov eax,r8d
0x7efb: xor eax,0x1
0x7efe: and al,dl
0x7f00: je 0x7f31
0x7f02: cmp r13,r15
0x7f05: jbe 0x7f0c
0x7f07: mov byte ptr [r14+r15],0x27
0x7f0c: lea rdx,[r15+0x1]
0x7f10: cmp r13,rdx
0x7f13: jbe 0x7f1b
0x7f15: mov byte ptr [r14+r15+0x1],0x24
0x7f1b: lea rdx,[r15+0x2]
0x7f1f: cmp r13,rdx
0x7f22: jbe 0x7f2a
0x7f24: mov byte ptr [r14+r15+0x2],0x27
0x7f2a: add r15,0x3
0x7f2e: mov r8d,eax
0x7f31: cmp r13,r15
0x7f34: jbe 0x7f3b
0x7f36: mov byte ptr [r14+r15],0x5c
0x7f3b: add r15,0x1
0x7f3f: add rbp,0x1
0x7f43: jmp 0x7dd0
0x8030: xor r10d,r10d
0x8033: nop dword ptr [rax+rax]
0x8038: cmp qword ptr [rsp+0x58],0x1
0x803e: jne 0x83e8
0x8044: mov qword ptr [rsp+0x38],r11
0x8049: mov byte ptr [rsp+0x30],r8b
0x804e: mov byte ptr [rsp+0x28],r10b
0x8053: call 0x1f90
0x8058: mov rcx,qword ptr [rax]
0x805b: movzx edx,bl
0x805e: movzx r10d,byte ptr [rsp+0x28]
0x8064: movzx r8d,byte ptr [rsp+0x30]
0x806a: mov r11,qword ptr [rsp+0x38]
0x806f: mov edi,0x1
0x8074: movzx eax,word ptr [rcx+rdx*2]
0x8078: and ax,0x4000
0x807c: setne r12b
0x8080: sete al
0x8083: and al,byte ptr [rsp+0xd]
0x8087: test al,al
0x8089: jne 0x8a21
0x808f: cmp dword ptr [rsp+0x8],0x2
0x8094: sete dl
0x8097: jmp 0x7d68
0x80a0: movzx ebx,byte ptr [r9]
0x80a4: cmp bl,0x7e
0x80a7: ja 0x8030
0x80a9: lea rcx,[rip+0x5c98]
0x80b0: movzx edx,bl
0x80b3: movsxd rax,dword ptr [rcx+rdx*4]
0x80b7: add rax,rcx
0x80ba: jmp rax
0x8270: xor r10d,r10d
0x8273: jmp 0x7d10
0x82a0: cmp dword ptr [rsp+0x8],0x2
0x82a5: movzx ebx,byte ptr [rsp+0xf]
0x82aa: mov r12d,r8d
0x82ad: mov rbp,r11
0x82b0: sete dl
0x82b3: mov eax,ebx
0x82b5: test r15,r15
0x82b8: sete cl
0x82bb: and eax,edx
0x82bd: and al,cl
0x82bf: jne 0x8d26
0x82c5: mov eax,ebx
0x82c7: xor eax,0x1
0x82ca: and dl,al
0x82cc: je 0x8c3c
0x82d2: cmp byte ptr [rsp+0x7c],0x0
0x82d7: je 0x8c3a
0x82dd: cmp byte ptr [rsp+0xe],0x0
0x82e2: jne 0x8cdd
0x82e8: test r13,r13
0x82eb: sete al
0x82ee: cmp qword ptr [rsp+0x50],0x0
0x82f4: setne dl
0x82f7: and al,dl
0x82f9: je 0x8d1c
0x82ff: mov r13,qword ptr [rsp+0x50]
0x8304: lea rbx,[rip+0x621e]
0x830b: mov byte ptr [r14],0x27
0x830f: mov dword ptr [rsp+0x8],0x2
0x8317: mov r15d,0x1
0x831d: mov qword ptr [rsp+0x18],0x1
0x8326: mov byte ptr [rsp+0xf],0x0
0x832b: mov qword ptr [rsp+0x48],rbx
0x8330: mov byte ptr [rsp+0x7c],al
0x8334: jmp 0x7c13
0x83e8: lea rax,[rsp+0xa0]
0x83f0: cmp r11,-0x1
0x83f4: mov qword ptr [rsp+0xa0],0x0
0x8400: mov qword ptr [rsp+0x28],rax
0x8405: jne 0x8434
0x8407: mov rdi,qword ptr [rsp+0x10]
0x840c: mov byte ptr [rsp+0x40],r8b
0x8411: mov byte ptr [rsp+0x38],r10b
0x8416: mov qword ptr [rsp+0x30],r9
0x841b: call 0x1ca0
0x8420: movzx r8d,byte ptr [rsp+0x40]
0x8426: movzx r10d,byte ptr [rsp+0x38]
0x842c: mov r11,rax
0x842f: mov r9,qword ptr [rsp+0x30]
0x8434: lea rax,[rsp+0x9c]
0x843c: xor ecx,ecx
0x843e: mov byte ptr [rsp+0x7e],bl
0x8442: mov byte ptr [rsp+0x7d],r8b
0x8447: mov rbx,rcx
0x844a: mov qword ptr [rsp+0x88],r9
0x8452: mov qword ptr [rsp+0x38],rax
0x8457: mov byte ptr [rsp+0x7f],r10b
0x845c: mov qword ptr [rsp+0x80],r15
0x8464: mov qword ptr [rsp+0x40],r14
0x8469: mov qword ptr [rsp+0x70],r13
0x846e: mov qword ptr [rsp+0x30],r11
0x8473: mov rax,qword ptr [rsp+0x10]
0x8478: lea r14,[rbp+rbx]
0x847d: mov rdx,qword ptr [rsp+0x30]
0x8482: mov rcx,qword ptr [rsp+0x28]
0x8487: mov rdi,qword ptr [rsp+0x38]
0x848c: lea r13,[rax+r14]
0x8490: sub rdx,r14
0x8493: mov rsi,r13
0x8496: call 0xb6e0
0x849b: test rax,rax
0x849e: mov r15,rax
0x84a1: je 0x84f1
0x84a3: cmp rax,-0x1
0x84a7: je 0x8ac5
0x84ad: cmp rax,-0x2
0x84b1: je 0x8a51
0x84b7: cmp dword ptr [rsp+0x8],0x2
0x84bc: sete al
0x84bf: and al,byte ptr [rsp+0xf]
0x84c3: jne 0x8660
0x84c9: mov edi,dword ptr [rsp+0x9c]
0x84d0: call 0x1f70
0x84d5: mov rdi,qword ptr [rsp+0x28]
0x84da: test eax,eax
0x84dc: mov eax,0x0
0x84e1: cmove r12d,eax
0x84e5: add rbx,r15
0x84e8: call 0x1f60
0x84ed: test eax,eax
0x84ef: je 0x8473
0x84f1: mov edx,r12d
0x84f4: mov rdi,rbx
0x84f7: movzx r8d,byte ptr [rsp+0x7d]
0x84fd: xor edx,0x1
0x8500: movzx ebx,byte ptr [rsp+0x7e]
0x8505: movzx r10d,byte ptr [rsp+0x7f]
0x850b: and dl,byte ptr [rsp+0xd]
0x850f: mov r15,qword ptr [rsp+0x80]
0x8517: mov r14,qword ptr [rsp+0x40]
0x851c: mov r13,qword ptr [rsp+0x70]
0x8521: mov r11,qword ptr [rsp+0x30]
0x8526: cmp rdi,0x1
0x852a: jbe 0x8b2b
0x8530: mov rcx,rdi
0x8533: xor esi,esi
0x8535: movzx r9d,byte ptr [rsp+0xf]
0x853b: add rcx,rbp
0x853e: mov rdi,qword ptr [rsp+0x10]
0x8543: jmp 0x85fe
0x8550: cmp dword ptr [rsp+0x8],0x2
0x8555: sete al
0x8558: test r9b,r9b
0x855b: jne 0x8a10
0x8561: mov esi,r8d
0x8564: xor esi,0x1
0x8567: and al,sil
0x856a: je 0x859b
0x856c: cmp r13,r15
0x856f: jbe 0x8576
0x8571: mov byte ptr [r14+r15],0x27
0x8576: lea rsi,[r15+0x1]
0x857a: cmp r13,rsi
0x857d: jbe 0x8585
0x857f: mov byte ptr [r14+r15+0x1],0x24
0x8585: lea rsi,[r15+0x2]
0x8589: cmp r13,rsi
0x858c: jbe 0x8594
0x858e: mov byte ptr [r14+r15+0x2],0x27
0x8594: add r15,0x3
0x8598: mov r8d,eax
0x859b: cmp r13,r15
0x859e: jbe 0x85a5
0x85a0: mov byte ptr [r14+r15],0x5c
0x85a5: lea rax,[r15+0x1]
0x85a9: cmp r13,rax
0x85ac: jbe 0x85bb
0x85ae: mov eax,ebx
0x85b0: shr al,0x6
0x85b3: add eax,0x30
0x85b6: mov byte ptr [r14+r15+0x1],al
0x85bb: lea rax,[r15+0x2]
0x85bf: cmp r13,rax
0x85c2: jbe 0x85d4
0x85c4: mov eax,ebx
0x85c6: shr al,0x3
0x85c9: and eax,0x7
0x85cc: add eax,0x30
0x85cf: mov byte ptr [r14+r15+0x2],al
0x85d4: and ebx,0x7
0x85d7: add rbp,0x1
0x85db: add r15,0x3
0x85df: add ebx,0x30
0x85e2: cmp rbp,rcx
0x85e5: jae 0x7dd0
0x85eb: mov esi,edx
0x85ed: cmp r13,r15
0x85f0: jbe 0x85f6
0x85f2: mov byte ptr [r14+r15],bl
0x85f6: movzx ebx,byte ptr [rdi+rbp]
0x85fa: add r15,0x1
0x85fe: test dl,dl
0x8600: jne 0x8550
0x8606: mov eax,esi
0x8608: xor eax,0x1
0x860b: and eax,r8d
0x860e: test r10b,r10b
0x8611: je 0x8621
0x8613: cmp r13,r15
0x8616: jbe 0x861d
0x8618: mov byte ptr [r14+r15],0x5c
0x861d: add r15,0x1
0x8621: add rbp,0x1
0x8625: cmp rbp,rcx
0x8628: jae 0x7dac
0x862e: test al,al
0x8630: je 0x8a2e
0x8636: cmp r13,r15
0x8639: jbe 0x8640
0x863b: mov byte ptr [r14+r15],0x27
0x8640: lea rax,[r15+0x1]
0x8644: cmp r13,rax
0x8647: jbe 0x864f
0x8649: mov byte ptr [r14+r15+0x1],0x27
0x864f: add r15,0x2
0x8653: xor r10d,r10d
0x8656: xor r8d,r8d
0x8659: jmp 0x85ed
0x8660: cmp r15,0x1
0x8664: je 0x84c9
0x866a: mov rdi,qword ptr [rsp+0x10]
0x866f: lea rcx,[rdi+r15]
0x8673: lea rdx,[rdi+r14+0x1]
0x8678: lea r8,[rcx+r14]
0x867c: jmp 0x868d
0x8680: add rdx,0x1
0x8684: cmp r8,rdx
0x8687: je 0x84c9
0x868d: movzx ecx,byte ptr [rdx]
0x8690: sub ecx,0x5b
0x8693: cmp cl,0x21
0x8696: ja 0x8680
0x8698: mov esi,0x1
0x869d: shl rsi,cl
0x86a0: mov rcx,rsi
0x86a3: movabsq rsi,0x20000002b
0x86ad: test rcx,rsi
0x86b0: je 0x8680
0x86b2: mov r14,qword ptr [rsp+0x40]
0x86b7: mov r13,qword ptr [rsp+0x70]
0x86bc: mov rbp,qword ptr [rsp+0x30]
0x86c1: mov dword ptr [rsp+0x8],0x2
0x86c9: cmp byte ptr [rsp+0xd],0x0
0x86ce: je 0x86e0
0x86d0: test al,al
0x86d2: mov eax,0x4
0x86d7: cmove eax,dword ptr [rsp+0x8]
0x86dc: mov dword ptr [rsp+0x8],eax
0x86e0: sub rsp,0x8
0x86e4: mov rcx,rbp
0x86e7: mov rsi,r13
0x86ea: push qword ptr [rsp+0x68]
0x86ee: push qword ptr [rsp+0x78]
0x86f2: mov rdi,r14
0x86f5: push 0x0
0x86f7: mov r9d,dword ptr [rsp+0x98]
0x86ff: mov r8d,dword ptr [rsp+0x28]
0x8704: mov rdx,qword ptr [rsp+0x30]
0x8709: and r9d,-0x3
0x870d: call 0x7b40
0x8712: add rsp,0x20
0x8716: mov r15,rax
0x8719: mov rbx,qword ptr [rsp+0xa8]
0x8721: xor rbx,qword ptr fs:0x28
0x872a: mov rax,r15
0x872d: jne 0x8d33
0x8733: add rsp,0xb8
0x873a: pop rbx
0x873b: pop rbp
0x873c: pop r12
0x873e: pop r13
0x8740: pop r14
0x8742: pop r15
0x8744: ret 
0x8748: mov rbp,r11
0x874b: jmp 0x86c9
0x87b1: test r13,r13
0x87b4: jne 0x8d4a
0x87ba: lea rax,[rip+0x5d68]
0x87c1: mov qword ptr [rsp+0x50],0x0
0x87ca: mov byte ptr [rsp+0xe],0x1
0x87cf: mov byte ptr [rsp+0x7c],0x0
0x87d4: xor r12d,r12d
0x87d7: mov byte ptr [rsp+0xf],0x0
0x87dc: mov qword ptr [rsp+0x18],0x1
0x87e5: mov qword ptr [rsp+0x48],rax
0x87ea: mov r15d,0x1
0x87f0: mov dword ptr [rsp+0x8],0x2
0x87f8: jmp 0x7c13
0x8a10: movzx ebx,byte ptr [rsp+0xf]
0x8a15: mov rbp,r11
0x8a18: mov byte ptr [rsp+0xd],bl
0x8a1c: jmp 0x86c9
0x8a21: movzx edx,byte ptr [rsp+0xd]
0x8a26: xor r12d,r12d
0x8a29: jmp 0x8530
0x8a2e: xor r10d,r10d
0x8a31: jmp 0x85ed
0x8a51: mov r11,qword ptr [rsp+0x30]
0x8a56: mov rsi,r14
0x8a59: mov rcx,r13
0x8a5c: mov rax,rbx
0x8a5f: mov rdi,rbx
0x8a62: movzx r8d,byte ptr [rsp+0x7d]
0x8a68: movzx ebx,byte ptr [rsp+0x7e]
0x8a6d: mov r9,qword ptr [rsp+0x88]
0x8a75: cmp rsi,r11
0x8a78: movzx r10d,byte ptr [rsp+0x7f]
0x8a7e: mov r15,qword ptr [rsp+0x80]
0x8a86: mov r14,qword ptr [rsp+0x40]
0x8a8b: mov r13,qword ptr [rsp+0x70]
0x8a90: jae 0x8ab8
0x8a92: cmp byte ptr [rcx],0x0
0x8a95: jne 0x8aa7
0x8a97: jmp 0x8ab8
0x8aa0: cmp byte ptr [r9+rax],0x0
0x8aa5: je 0x8ab5
0x8aa7: add rax,0x1
0x8aab: lea rdx,[rbp+rax]
0x8ab0: cmp r11,rdx
0x8ab3: ja 0x8aa0
0x8ab5: mov rdi,rax
0x8ab8: movzx edx,byte ptr [rsp+0xd]
0x8abd: xor r12d,r12d
0x8ac0: jmp 0x8526
0x8ac5: mov rdi,rbx
0x8ac8: movzx r8d,byte ptr [rsp+0x7d]
0x8ace: movzx ebx,byte ptr [rsp+0x7e]
0x8ad3: movzx r10d,byte ptr [rsp+0x7f]
0x8ad9: mov r15,qword ptr [rsp+0x80]
0x8ae1: xor r12d,r12d
0x8ae4: mov r14,qword ptr [rsp+0x40]
0x8ae9: mov r13,qword ptr [rsp+0x70]
0x8aee: mov r11,qword ptr [rsp+0x30]
0x8af3: movzx edx,byte ptr [rsp+0xd]
0x8af8: jmp 0x8526
0x8b2b: mov eax,edx
0x8b2d: jmp 0x8087
0x8c3a: mov eax,edx
0x8c3c: mov rbx,qword ptr [rsp+0x48]
0x8c41: test rbx,rbx
0x8c44: je 0x8c72
0x8c46: test al,al
0x8c48: je 0x8c72
0x8c4a: movzx ecx,byte ptr [rbx]
0x8c4d: mov rax,rbx
0x8c50: test cl,cl
0x8c52: je 0x8c72
0x8c54: mov rdx,r15
0x8c57: sub rax,r15
0x8c5a: cmp r13,rdx
0x8c5d: jbe 0x8c63
0x8c5f: mov byte ptr [r14+rdx],cl
0x8c63: add rdx,0x1
0x8c67: movzx ecx,byte ptr [rax+rdx]
0x8c6b: test cl,cl
0x8c6d: jne 0x8c5a
0x8c6f: mov r15,rdx
0x8c72: cmp r13,r15
0x8c75: jbe 0x8719
0x8c7b: mov byte ptr [r14+r15],0x0
0x8c80: jmp 0x8719
0x8c85: cmp dword ptr [rsp+0x8],0x2
0x8c8a: movzx ebx,byte ptr [rsp+0xf]
0x8c8f: mov rbp,r11
0x8c92: sete al
0x8c95: mov byte ptr [rsp+0xd],bl
0x8c99: jmp 0x86c9
0x8cdd: sub rsp,0x8
0x8ce1: mov r8d,0x5
0x8ce7: mov rcx,r11
0x8cea: push qword ptr [rsp+0x68]
0x8cee: push qword ptr [rsp+0x78]
0x8cf2: mov rdi,r14
0x8cf5: push qword ptr [rsp+0x38]
0x8cf9: mov r9d,dword ptr [rsp+0x98]
0x8d01: mov rdx,qword ptr [rsp+0x30]
0x8d06: mov rsi,qword ptr [rsp+0x70]
0x8d0b: call 0x7b40
0x8d10: add rsp,0x20
0x8d14: mov r15,rax
0x8d17: jmp 0x8719
0x8d1c: movzx eax,byte ptr [rsp+0x7c]
0x8d21: jmp 0x8c3c
0x8d26: mov dword ptr [rsp+0x8],0x2
0x8d2e: jmp 0x86c9
0x8d33: call 0x1cb0
0x8d38: mov byte ptr [rsp+0xd],0x0
0x8d3d: jmp 0x87b1
0x8d4a: mov byte ptr [rsp+0xe],0x1
0x8d4f: xor eax,eax
0x8d51: xor r12d,r12d
0x8d54: mov qword ptr [rsp+0x50],0x0
0x8d5d: jmp 0x8304
0x8d74: nop 
0x8d76: nop word ptr cs:[rax+rax]
0x8e6c: add rsp,0x20
0x8e70: mov r11,qword ptr [rsp+0x10]
0x8e75: cmp r11,rax
0x8e78: ja 0x8ee1
0x8e7a: lea rsi,[rax+0x1]
0x8e7e: lea rax,[rip+0x2083db]
0x8e85: cmp r12,rax
0x8e88: mov qword ptr [rbx],rsi
0x8e8b: je 0x8e9f
0x8e8d: mov rdi,r12
0x8e90: mov qword ptr [rsp+0x10],rsi
0x8e95: call 0x1b90
0x8e9a: mov rsi,qword ptr [rsp+0x10]
0x8e9f: mov rdi,rsi
0x8ea2: mov qword ptr [rsp+0x10],rsi
0x8ea7: call 0x9d10
0x8eac: sub rsp,0x8
0x8eb0: mov qword ptr [rbx+0x8],rax
0x8eb4: mov r8d,dword ptr [rbp]
0x8eb8: push qword ptr [rbp+0x30]
0x8ebb: push qword ptr [rbp+0x28]
0x8ebe: mov rcx,r14
0x8ec1: push r15
0x8ec3: mov r9d,dword ptr [rsp+0x3c]
0x8ec8: mov rdi,rax
0x8ecb: mov rdx,qword ptr [rsp+0x28]
0x8ed0: mov rsi,qword ptr [rsp+0x30]
0x8ed5: mov r12,rax
0x8ed8: call 0x7b40
0x8edd: add rsp,0x20
0x8ee1: mov eax,dword ptr [rsp+0x18]
0x8ee5: mov dword ptr [r13],eax
0x8ee9: add rsp,0x28
0x8eed: mov rax,r12
0x8ef0: pop rbx
0x8ef1: pop rbp
0x8ef2: pop r12
0x8ef4: pop r13
0x8ef6: pop r14
0x8ef8: pop r15
0x8efa: ret 
0x8f2b: nop dword ptr [rax+rax]
0x8f30: push r12
0x8f32: push rbp
0x8f33: push rbx
0x8f34: mov rbx,rdi
0x8f37: call 0x1bb0
0x8f3c: mov r12d,dword ptr [rax]
0x8f3f: mov rbp,rax
0x8f42: lea rax,[rip+0x208417]
0x8f49: test rbx,rbx
0x8f4c: mov esi,0x38
0x8f51: cmove rbx,rax
0x8f55: mov rdi,rbx
0x8f58: call 0x9f10
0x8f5d: mov dword ptr [rbp],r12d
0x8f61: pop rbx
0x8f62: pop rbp
0x8f63: pop r12
0x8f65: ret 
0x8f70: lea rax,[rip+0x2083e9]
0x8f77: test rdi,rdi
0x8f7a: cmove rdi,rax
0x8f7e: mov eax,dword ptr [rdi]
0x8f80: ret 
0x8f90: lea rax,[rip+0x2083c9]
0x8f97: test rdi,rdi
0x8f9a: cmove rdi,rax
0x8f9e: mov dword ptr [rdi],esi
0x8fa0: ret 
0x8fb0: lea rax,[rip+0x2083a9]
0x8fb7: test rdi,rdi
0x8fba: mov ecx,esi
0x8fbc: cmove rdi,rax
0x8fc0: mov eax,esi
0x8fc2: and ecx,0x1f
0x8fc5: shr al,0x5
0x8fc8: movzx eax,al
0x8fcb: lea rdi,[rdi+rax*4+0x8]
0x8fd0: mov esi,dword ptr [rdi]
0x8fd2: mov eax,esi
0x8fd4: shr eax,cl
0x8fd6: xor edx,eax
0x8fd8: and eax,0x1
0x8fdb: and edx,0x1
0x8fde: shl edx,cl
0x8fe0: xor edx,esi
0x8fe2: mov dword ptr [rdi],edx
0x8fe4: ret 
0x8ff0: lea rax,[rip+0x208369]
0x8ff7: test rdi,rdi
0x8ffa: cmove rdi,rax
0x8ffe: mov eax,dword ptr [rdi+0x4]
0x9001: mov dword ptr [rdi+0x4],esi
0x9004: ret 
0x9010: lea rax,[rip+0x208349]
0x9017: test rdi,rdi
0x901a: cmove rdi,rax
0x901e: test rsi,rsi
0x9021: mov dword ptr [rdi],0xa
0x9027: je 0x9037
0x9029: test rdx,rdx
0x902c: je 0x9037
0x902e: mov qword ptr [rdi+0x28],rsi
0x9032: mov qword ptr [rdi+0x30],rdx
0x9036: ret 
0x9037: sub rsp,0x8
0x903b: call 0x1ba0
0x9040: push r15
0x9042: push r14
0x9044: lea rax,[rip+0x208315]
0x904b: push r13
0x904d: push r12
0x904f: mov r13,rdi
0x9052: push rbp
0x9053: push rbx
0x9054: mov rbx,r8
0x9057: mov r14,rsi
0x905a: mov r15,rdx
0x905d: sub rsp,0x18
0x9061: test r8,r8
0x9064: cmove rbx,rax
0x9068: mov qword ptr [rsp+0x8],rcx
0x906d: call 0x1bb0
0x9072: mov r12d,dword ptr [rax]
0x9075: mov rbp,rax
0x9078: lea rax,[rbx+0x8]
0x907c: sub rsp,0x8
0x9080: mov r9d,dword ptr [rbx+0x4]
0x9084: push qword ptr [rbx+0x30]
0x9087: mov r8d,dword ptr [rbx]
0x908a: push qword ptr [rbx+0x28]
0x908d: mov rdx,r15
0x9090: push rax
0x9091: mov rcx,qword ptr [rsp+0x28]
0x9096: mov rsi,r14
0x9099: mov rdi,r13
0x909c: call 0x7b40
0x90a1: mov dword ptr [rbp],r12d
0x90a5: add rsp,0x38
0x90a9: pop rbx
0x90aa: pop rbp
0x90ab: pop r12
0x90ad: pop r13
0x90af: pop r14
0x90b1: pop r15
0x90b3: ret 
0x90c0: push r15
0x90c2: push r14
0x90c4: lea rax,[rip+0x208295]
0x90cb: push r13
0x90cd: push r12
0x90cf: mov r12,rdx
0x90d2: push rbp
0x90d3: push rbx
0x90d4: mov rbx,rcx
0x90d7: mov r14,rdi
0x90da: mov r15,rsi
0x90dd: sub rsp,0x38
0x90e1: test rcx,rcx
0x90e4: cmove rbx,rax
0x90e8: xor ebp,ebp
0x90ea: call 0x1bb0
0x90ef: test r12,r12
0x90f2: mov r13,rax
0x90f5: mov eax,dword ptr [rax]
0x90f7: sete bpl
0x90fb: or ebp,dword ptr [rbx+0x4]
0x90fe: lea r10,[rbx+0x8]
0x9102: sub rsp,0x8
0x9106: mov r8d,dword ptr [rbx]
0x9109: mov rcx,r15
0x910c: mov dword ptr [rsp+0x14],eax
0x9110: push qword ptr [rbx+0x30]
0x9113: mov rdx,r14
0x9116: push qword ptr [rbx+0x28]
0x9119: push r10
0x911b: xor esi,esi
0x911d: mov r9d,ebp
0x9120: xor edi,edi
0x9122: mov qword ptr [rsp+0x40],r10
0x9127: call 0x7b40
0x912c: lea rsi,[rax+0x1]
0x9130: mov qword ptr [rsp+0x48],rax
0x9135: add rsp,0x20
0x9139: mov rdi,rsi
0x913c: mov qword ptr [rsp+0x18],rsi
0x9141: call 0x9d10
0x9146: mov qword ptr [rsp+0x10],rax
0x914b: sub rsp,0x8
0x914f: push qword ptr [rbx+0x30]
0x9152: push qword ptr [rbx+0x28]
0x9155: mov r10,qword ptr [rsp+0x38]
0x915a: mov r9d,ebp
0x915d: mov r8d,dword ptr [rbx]
0x9160: mov rcx,r15
0x9163: mov rdx,r14
0x9166: mov rdi,rax
0x9169: push r10
0x916b: mov rsi,qword ptr [rsp+0x38]
0x9170: call 0x7b40
0x9175: mov eax,dword ptr [rsp+0x2c]
0x9179: add rsp,0x20
0x917d: test r12,r12
0x9180: mov dword ptr [r13],eax
0x9184: je 0x918f
0x9186: mov r11,qword ptr [rsp+0x28]
0x918b: mov qword ptr [r12],r11
0x918f: mov rax,qword ptr [rsp+0x10]
0x9194: add rsp,0x38
0x9198: pop rbx
0x9199: pop rbp
0x919a: pop r12
0x919c: pop r13
0x919e: pop r14
0x91a0: pop r15
0x91a2: ret 
0x91b0: mov rcx,rdx
0x91b3: xor edx,edx
0x91b5: jmp 0x90c0
0x91c0: mov eax,dword ptr [rip+0x207ef2]
0x91c6: push r12
0x91c8: mov r12,qword ptr [rip+0x207ef1]
0x91cf: push rbp
0x91d0: push rbx
0x91d1: cmp eax,0x1
0x91d4: jle 0x9201
0x91d6: sub eax,0x2
0x91d9: lea rbx,[r12+0x18]
0x91de: shl rax,0x4
0x91e2: lea rbp,[r12+rax+0x28]
0x91e7: nop word ptr [rax+rax]
0x91f0: mov rdi,qword ptr [rbx]
0x91f3: add rbx,0x10
0x91f7: call 0x1b90
0x91fc: cmp rbx,rbp
0x91ff: jne 0x91f0
0x9201: mov rdi,qword ptr [r12+0x8]
0x9206: lea rbx,[rip+0x208053]
0x920d: cmp rdi,rbx
0x9210: je 0x9229
0x9212: call 0x1b90
0x9217: mov qword ptr [rip+0x207eae],0x100
0x9222: mov qword ptr [rip+0x207eaf],rbx
0x9229: lea rbx,[rip+0x207ea0]
0x9230: cmp r12,rbx
0x9233: je 0x9244
0x9235: mov rdi,r12
0x9238: call 0x1b90
0x923d: mov qword ptr [rip+0x207e7c],rbx
0x9244: pop rbx
0x9245: mov dword ptr [rip+0x207e69],0x1
0x924f: pop rbp
0x9250: pop r12
0x9252: ret 
0x9260: lea rcx,[rip+0x2080f9]
0x9267: mov rdx,-0x1
0x926e: jmp 0x8d80
0x9280: lea rcx,[rip+0x2080d9]
0x9287: jmp 0x8d80
0x9290: lea rcx,[rip+0x2080c9]
0x9297: mov rsi,rdi
0x929a: mov rdx,-0x1
0x92a1: xor edi,edi
0x92a3: jmp 0x8d80
0x92b0: lea rcx,[rip+0x2080a9]
0x92b7: mov rdx,rsi
0x92ba: mov rsi,rdi
0x92bd: xor edi,edi
0x92bf: jmp 0x8d80
0x92d0: sub rsp,0x48
0x92d4: mov rax,rdx
0x92d7: mov rdx,qword ptr fs:0x28
0x92e0: mov qword ptr [rsp+0x38],rdx
0x92e5: xor edx,edx
0x92e7: cmp esi,0xa
0x92ea: je 0x9354
0x92ec: mov dword ptr [rsp],esi
0x92ef: mov rcx,rsp
0x92f2: mov rdx,-0x1
0x92f9: mov rsi,rax
0x92fc: mov qword ptr [rsp+0x4],0x0
0x9305: mov qword ptr [rsp+0xc],0x0
0x930e: mov qword ptr [rsp+0x14],0x0
0x9317: mov qword ptr [rsp+0x1c],0x0
0x9320: mov qword ptr [rsp+0x24],0x0
0x9329: mov qword ptr [rsp+0x2c],0x0
0x9332: mov dword ptr [rsp+0x34],0x0
0x933a: call 0x8d80
0x933f: mov rcx,qword ptr [rsp+0x38]
0x9344: xor rcx,qword ptr fs:0x28
0x934d: jne 0x9359
0x934f: add rsp,0x48
0x9353: ret 
0x9354: call 0x1ba0
0x9359: call 0x1cb0
0x935e: nop 
0x9360: sub rsp,0x48
0x9364: mov rax,rdx
0x9367: mov rdx,rcx
0x936a: mov rcx,qword ptr fs:0x28
0x9373: mov qword ptr [rsp+0x38],rcx
0x9378: xor ecx,ecx
0x937a: cmp esi,0xa
0x937d: je 0x93e0
0x937f: mov dword ptr [rsp],esi
0x9382: mov rcx,rsp
0x9385: mov rsi,rax
0x9388: mov qword ptr [rsp+0x4],0x0
0x9391: mov qword ptr [rsp+0xc],0x0
0x939a: mov qword ptr [rsp+0x14],0x0
0x93a3: mov qword ptr [rsp+0x1c],0x0
0x93ac: mov qword ptr [rsp+0x24],0x0
0x93b5: mov qword ptr [rsp+0x2c],0x0
0x93be: mov dword ptr [rsp+0x34],0x0
0x93c6: call 0x8d80
0x93cb: mov rdx,qword ptr [rsp+0x38]
0x93d0: xor rdx,qword ptr fs:0x28
0x93d9: jne 0x93e5
0x93db: add rsp,0x48
0x93df: ret 
0x93e0: call 0x1ba0
0x93e5: call 0x1cb0
0x93ea: nop word ptr [rax+rax]
0x93f0: mov rdx,rsi
0x93f3: mov esi,edi
0x93f5: xor edi,edi
0x93f7: jmp 0x92d0
0x9400: mov rcx,rdx
0x9403: mov rdx,rsi
0x9406: mov esi,edi
0x9408: xor edi,edi
0x940a: jmp 0x9360
0x9410: sub rsp,0x48
0x9414: mov ecx,edx
0x9416: mov rax,qword ptr fs:0x28
0x941f: mov qword ptr [rsp+0x38],rax
0x9424: xor eax,eax
0x9426: mov rax,qword ptr [rip+0x207f63]
0x942d: mov r8,rsp
0x9430: and ecx,0x1f
0x9433: movdqa xmm0,[rip+0x207f25]
0x943b: mov qword ptr [rsp+0x30],rax
0x9440: mov eax,edx
0x9442: movaps [rsp],xmm0
0x9446: shr al,0x5
0x9449: movzx eax,al
0x944c: lea r9,[r8+rax*4+0x8]
0x9451: movdqa xmm0,[rip+0x207f17]
0x9459: movaps [rsp+0x10],xmm0
0x945e: movdqa xmm0,[rip+0x207f1a]
0x9466: movaps [rsp+0x20],xmm0
0x946b: mov edx,dword ptr [r9]
0x946e: mov eax,edx
0x9470: shr eax,cl
0x9472: not eax
0x9474: and eax,0x1
0x9477: shl eax,cl
0x9479: mov rcx,r8
0x947c: xor eax,edx
0x947e: mov rdx,rsi
0x9481: mov rsi,rdi
0x9484: mov dword ptr [r9],eax
0x9487: xor edi,edi
0x9489: call 0x8d80
0x948e: mov rsi,qword ptr [rsp+0x38]
0x9493: xor rsi,qword ptr fs:0x28
0x949c: jne 0x94a3
0x949e: add rsp,0x48
0x94a2: ret 
0x94a3: call 0x1cb0
0x94a8: nop dword ptr [rax+rax]
0x94b0: movsx edx,sil
0x94b4: mov rsi,-0x1
0x94bb: jmp 0x9410
0x94c0: mov edx,0x3a
0x94c5: mov rsi,-0x1
0x94cc: jmp 0x9410
0x94e0: mov edx,0x3a
0x94e5: jmp 0x9410
0x955f: mov rcx,qword ptr [rsp+0x38]
0x9564: xor rcx,qword ptr fs:0x28
0x956d: jne 0x9579
0x956f: add rsp,0x48
0x9573: ret 
0x9574: call 0x1ba0
0x9579: call 0x1cb0
0x957e: nop 
0x9580: sub rsp,0x48
0x9584: mov r9,rcx
0x9587: mov rcx,qword ptr [rip+0x207e02]
0x958e: movdqa xmm0,[rip+0x207dca]
0x9596: mov rax,qword ptr fs:0x28
0x959f: mov qword ptr [rsp+0x38],rax
0x95a4: xor eax,eax
0x95a6: movaps [rsp],xmm0
0x95aa: test rsi,rsi
0x95ad: mov qword ptr [rsp+0x30],rcx
0x95b2: mov dword ptr [rsp],0xa
0x95b9: movdqa xmm0,[rip+0x207daf]
0x95c1: movaps [rsp+0x10],xmm0
0x95c6: movdqa xmm0,[rip+0x207db2]
0x95ce: movaps [rsp+0x20],xmm0
0x95d3: je 0x9607
0x95d5: test rdx,rdx
0x95d8: je 0x9607
0x95da: mov qword ptr [rsp+0x28],rsi
0x95df: mov qword ptr [rsp+0x30],rdx
0x95e4: mov rcx,rsp
0x95e7: mov rdx,r8
0x95ea: mov rsi,r9
0x95ed: call 0x8d80
0x95f2: mov rdi,qword ptr [rsp+0x38]
0x95f7: xor rdi,qword ptr fs:0x28
0x9600: jne 0x960c
0x9602: add rsp,0x48
0x9606: ret 
0x9607: call 0x1ba0
0x960c: call 0x1cb0
0x9611: nop dword ptr [rax+rax]
0x9616: nop word ptr cs:[rax+rax]
0x9620: mov r8,-0x1
0x9627: jmp 0x9580
0x9630: mov rcx,rdx
0x9633: mov r8,-0x1
0x963a: mov rdx,rsi
0x963d: mov rsi,rdi
0x9640: xor edi,edi
0x9642: jmp 0x9580
0x9650: mov r8,rcx
0x9653: mov rcx,rdx
0x9656: mov rdx,rsi
0x9659: mov rsi,rdi
0x965c: xor edi,edi
0x965e: jmp 0x9580
0x9670: lea rcx,[rip+0x207a09]
0x9677: jmp 0x8d80
0x9680: lea rcx,[rip+0x2079f9]
0x9687: mov rdx,rsi
0x968a: mov rsi,rdi
0x968d: xor edi,edi
0x968f: jmp 0x8d80
0x96a0: lea rcx,[rip+0x2079d9]
0x96a7: mov rdx,-0x1
0x96ae: jmp 0x8d80
0x96f0: push r15
0x96f2: push r14
0x96f4: push r13
0x96f6: push r12
0x96f8: mov r12,r9
0x96fb: push rbp
0x96fc: push rbx
0x96fd: mov rbp,rdi
0x9700: mov rbx,r8
0x9703: sub rsp,0x28
0x9707: test rsi,rsi
0x970a: je 0x9828
0x9710: mov r8,rdx
0x9713: lea rdx,[rip+0x486e]
0x971a: mov r9,rcx
0x971d: xor eax,eax
0x971f: mov rcx,rsi
0x9722: mov esi,0x1
0x9727: call 0x1f50
0x972c: lea rsi,[rip+0x4868]
0x9733: xor edi,edi
0x9735: mov edx,0x5
0x973a: call 0x1c80
0x973f: lea rdx,[rip+0x4b7a]
0x9746: mov rcx,rax
0x9749: mov r8d,0x7e3
0x974f: mov esi,0x1
0x9754: mov rdi,rbp
0x9757: xor eax,eax
0x9759: call 0x1f50
0x975e: lea rsi,[rip+0x48c3]
0x9765: xor edi,edi
0x9767: mov edx,0x5
0x976c: call 0x1c80
0x9771: mov rsi,rbp
0x9774: mov rdi,rax
0x9777: call 0x1d90
0x977c: cmp r12,0x9
0x9780: ja 0x9ac0
0x9786: lea rdx,[rip+0x4af7]
0x978d: movsxd rax,dword ptr [rdx+r12*4]
0x9791: add rax,rdx
0x9794: jmp rax
0x97e4: mov r9,qword ptr [rsp+0x18]
0x97e9: mov rdx,rax
0x97ec: mov rcx,rbx
0x97ef: mov esi,0x1
0x97f4: mov rdi,rbp
0x97f7: xor eax,eax
0x97f9: push r9
0x97fb: push r13
0x97fd: push r12
0x97ff: push r15
0x9801: push r14
0x9803: mov r9,qword ptr [rsp+0x30]
0x9808: mov r8,qword ptr [rsp+0x38]
0x980d: call 0x1f50
0x9812: add rsp,0x30
0x9816: add rsp,0x28
0x981a: pop rbx
0x981b: pop rbp
0x981c: pop r12
0x981e: pop r13
0x9820: pop r14
0x9822: pop r15
0x9824: ret 
0x9828: mov r8,rcx
0x982b: mov rcx,rdx
0x982e: lea rdx,[rip+0x475f]
0x9835: mov esi,0x1
0x983a: xor eax,eax
0x983c: call 0x1f50
0x9841: jmp 0x972c
0x9892: xor edi,edi
0x9894: call 0x1c80
0x9899: mov r10,qword ptr [rsp+0x18]
0x989e: push r10
0x98a0: jmp 0x97e4
0x9a3d: push r12
0x9a3f: push r15
0x9a41: push r14
0x9a43: mov r8,qword ptr [rsp+0x20]
0x9a48: mov rcx,rbx
0x9a4b: mov rdx,rax
0x9a4e: mov rdi,rbp
0x9a51: mov esi,0x1
0x9a56: xor eax,eax
0x9a58: call 0x1f50
0x9a5d: add rsp,0x20
0x9a61: add rsp,0x28
0x9a65: pop rbx
0x9a66: pop rbp
0x9a67: pop r12
0x9a69: pop r13
0x9a6b: pop r14
0x9a6d: pop r15
0x9a6f: ret 
0x9aa9: push r12
0x9aab: push r15
0x9aad: push r14
0x9aaf: mov r9,qword ptr [rsp+0x28]
0x9ab4: jmp 0x9a43
0x9ac0: mov r10,qword ptr [rbx+0x40]
0x9ac4: mov r9,qword ptr [rbx+0x38]
0x9ac8: mov edx,0x5
0x9acd: mov rax,qword ptr [rbx+0x10]
0x9ad1: mov r8,qword ptr [rbx+0x8]
0x9ad5: lea rsi,[rip+0x4724]
0x9adc: mov r13,qword ptr [rbx+0x30]
0x9ae0: mov r12,qword ptr [rbx+0x28]
0x9ae4: mov r15,qword ptr [rbx+0x20]
0x9ae8: mov r14,qword ptr [rbx+0x18]
0x9aec: mov qword ptr [rsp+0x18],r10
0x9af1: mov qword ptr [rsp+0x10],r9
0x9af6: mov qword ptr [rsp],rax
0x9afa: mov qword ptr [rsp+0x8],r8
0x9aff: mov rbx,qword ptr [rbx]
0x9b02: jmp 0x9892
0x9b10: xor r9d,r9d
0x9b13: cmp qword ptr [r8],0x0
0x9b17: je 0x9b2b
0x9b19: nop dword ptr [rax]
0x9b20: add r9,0x1
0x9b24: cmp qword ptr [r8+r9*8],0x0
0x9b29: jne 0x9b20
0x9b2b: jmp 0x96f0
0x9b30: sub rsp,0x68
0x9b34: mov r10,r8
0x9b37: xor r9d,r9d
0x9b3a: mov rax,qword ptr fs:0x28
0x9b43: mov qword ptr [rsp+0x58],rax
0x9b48: xor eax,eax
0x9b4a: mov r8,rsp
0x9b4d: nop dword ptr [rax]
0x9b50: mov eax,dword ptr [r10]
0x9b53: cmp eax,0x2f
0x9b56: ja 0x9b9a
0x9b58: mov r11d,eax
0x9b5b: add r11,qword ptr [r10+0x10]
0x9b5f: add eax,0x8
0x9b62: mov dword ptr [r10],eax
0x9b65: mov rax,qword ptr [r11]
0x9b68: test rax,rax
0x9b6b: mov qword ptr [r8+r9*8],rax
0x9b6f: je 0x9b7b
0x9b71: add r9,0x1
0x9b75: cmp r9,0xa
0x9b79: jne 0x9b50
0x9b7b: call 0x96f0
0x9b80: mov rax,qword ptr [rsp+0x58]
0x9b85: xor rax,qword ptr fs:0x28
0x9b8e: jne 0x9b95
0x9b90: add rsp,0x68
0x9b94: ret 
0x9b95: call 0x1cb0
0x9b9a: mov r11,qword ptr [r10+0x8]
0x9b9e: lea rax,[r11+0x8]
0x9ba2: mov qword ptr [r10+0x8],rax
0x9ba6: jmp 0x9b65
0x9bb0: push rbp
0x9bb1: push rbx
0x9bb2: mov r10d,0x20
0x9bb8: xor r11d,r11d
0x9bbb: sub rsp,0xb8
0x9bc2: mov rax,qword ptr fs:0x28
0x9bcb: mov qword ptr [rsp+0x78],rax
0x9bd0: xor eax,eax
0x9bd2: lea rax,[rsp+0xd0]
0x9bda: mov qword ptr [rsp+0xa0],r8
0x9be2: lea rbx,[rsp+0xd0]
0x9bea: lea r8,[rsp+0x20]
0x9bef: mov qword ptr [rsp+0xa8],r9
0x9bf7: mov dword ptr [rsp+0x8],0x20
0x9bff: mov qword ptr [rsp+0x10],rax
0x9c04: lea rax,[rsp+0x80]
0x9c0c: xor r9d,r9d
0x9c0f: mov qword ptr [rsp+0x18],rax
0x9c14: mov rbp,rax
0x9c17: nop word ptr [rax+rax]
0x9c20: cmp r10d,0x2f
0x9c24: ja 0x9c7c
0x9c26: mov eax,r10d
0x9c29: mov r11d,0x1
0x9c2f: add r10d,0x8
0x9c33: add rax,rbp
0x9c36: mov rax,qword ptr [rax]
0x9c39: test rax,rax
0x9c3c: mov qword ptr [r8+r9*8],rax
0x9c40: je 0x9c4c
0x9c42: add r9,0x1
0x9c46: cmp r9,0xa
0x9c4a: jne 0x9c20
0x9c4c: test r11b,r11b
0x9c4f: jne 0x9c75
0x9c51: call 0x96f0
0x9c56: mov rax,qword ptr [rsp+0x78]
0x9c5b: xor rax,qword ptr fs:0x28
0x9c64: jne 0x9c70
0x9c66: add rsp,0xb8
0x9c6d: pop rbx
0x9c6e: pop rbp
0x9c6f: ret 
0x9c70: call 0x1cb0
0x9c75: mov dword ptr [rsp+0x8],r10d
0x9c7a: jmp 0x9c51
0x9c7c: mov rax,rbx
0x9c7f: add rbx,0x8
0x9c83: jmp 0x9c36
0x9c90: push rbx
0x9c91: lea rsi,[rip+0x434a]
0x9c98: mov edx,0x5
0x9c9d: xor edi,edi
0x9c9f: call 0x1c80
0x9ca4: lea rdx,[rip+0x434c]
0x9cab: mov rsi,rax
0x9cae: mov edi,0x1
0x9cb3: xor eax,eax
0x9cb5: call 0x1eb0
0x9cba: lea rsi,[rip+0x434c]
0x9cc1: mov edx,0x5
0x9cc6: xor edi,edi
0x9cc8: call 0x1c80
0x9ccd: lea rcx,[rip+0x3474]
0x9cd4: lea rdx,[rip+0x229a]
0x9cdb: mov rsi,rax
0x9cde: mov edi,0x1
0x9ce3: xor eax,eax
0x9ce5: call 0x1eb0
0x9cea: mov rbx,qword ptr [rip+0x2073f7]
0x9cf1: lea rsi,[rip+0x4548]
0x9cf8: xor edi,edi
0x9cfa: mov edx,0x5
0x9cff: call 0x1c80
0x9d04: mov rsi,rbx
0x9d07: mov rdi,rax
0x9d0a: pop rbx
0x9d0b: jmp 0x1d90
0x9d2a: nop word ptr [rax+rax]
0x9d30: mov rax,rdi
0x9d33: mul rsi
0x9d36: mov rdi,rax
0x9d39: seto al
0x9d3c: test rdi,rdi
0x9d3f: js 0x9d4b
0x9d41: movzx eax,al
0x9d44: test rax,rax
0x9d47: jne 0x9d4b
0x9d49: jmp 0x9d10
0x9d4b: sub rsp,0x8
0x9d4f: call 0x9f60
0x9d54: nop 
0x9d56: nop word ptr cs:[rax+rax]
0x9d60: jmp 0x9d10
0x9da6: nop word ptr cs:[rax+rax]
0x9db0: mov rax,rsi
0x9db3: mul rdx
0x9db6: mov rsi,rax
0x9db9: seto al
0x9dbc: test rsi,rsi
0x9dbf: js 0x9dcb
0x9dc1: movzx eax,al
0x9dc4: test rax,rax
0x9dc7: jne 0x9dcb
0x9dc9: jmp 0x9d70
0x9dcb: sub rsp,0x8
0x9dcf: call 0x9f60
0x9dd4: nop 
0x9dd6: nop word ptr cs:[rax+rax]
0x9de0: test rdi,rdi
0x9de3: mov r9,rdx
0x9de6: mov rcx,qword ptr [rsi]
0x9de9: je 0x9e20
0x9deb: xor edx,edx
0x9ded: movabsq rax,0x5555555555555554
0x9df7: div r9
0x9dfa: cmp rax,rcx
0x9dfd: jbe 0x9e3b
0x9dff: mov rax,rcx
0x9e02: shr rax, 1
0x9e05: lea rcx,[rax+rcx+0x1]
0x9e0a: mov qword ptr [rsi],rcx
0x9e0d: imul rcx,r9
0x9e11: mov rsi,rcx
0x9e14: jmp 0x9d70
0x9e20: test rcx,rcx
0x9e23: je 0x9e48
0x9e25: mov rax,rcx
0x9e28: mul r9
0x9e2b: seto dl
0x9e2e: test rax,rax
0x9e31: movzx edx,dl
0x9e34: js 0x9e3b
0x9e36: test rdx,rdx
0x9e39: je 0x9e0a
0x9e3b: sub rsp,0x8
0x9e3f: call 0x9f60
0x9e44: nop dword ptr [rax]
0x9e48: xor edx,edx
0x9e4a: mov eax,0x80
0x9e4f: xor r8d,r8d
0x9e52: div r9
0x9e55: test rax,rax
0x9e58: sete r8b
0x9e5c: lea rcx,[r8+rax]
0x9e60: jmp 0x9e25
0x9eba: nop word ptr [rax+rax]
0x9ec0: push rbx
0x9ec1: mov rbx,rdi
0x9ec4: call 0x9d10
0x9ec9: mov rdx,rbx
0x9ecc: xor esi,esi
0x9ece: mov rdi,rax
0x9ed1: pop rbx
0x9ed2: jmp 0x1d50
0x9ee0: mov rax,rdi
0x9ee3: sub rsp,0x8
0x9ee7: mul rsi
0x9eea: seto dl
0x9eed: test rax,rax
0x9ef0: js 0x9f09
0x9ef2: movzx edx,dl
0x9ef5: test rdx,rdx
0x9ef8: jne 0x9f09
0x9efa: call 0x1da0
0x9eff: test rax,rax
0x9f02: je 0x9f09
0x9f04: add rsp,0x8
0x9f08: ret 
0x9f09: call 0x9f60
0x9f0e: nop 
0x9f10: push rbp
0x9f11: push rbx
0x9f12: mov rbp,rdi
0x9f15: mov rdi,rsi
0x9f18: mov rbx,rsi
0x9f1b: sub rsp,0x8
0x9f1f: call 0x9d10
0x9f24: add rsp,0x8
0x9f28: mov rdx,rbx
0x9f2b: mov rsi,rbp
0x9f2e: pop rbx
0x9f2f: pop rbp
0x9f30: mov rdi,rax
0x9f33: jmp 0x1dd0
0x9f40: push rbx
0x9f41: mov rbx,rdi
0x9f44: call 0x1ca0
0x9f49: mov rdi,rbx
0x9f4c: lea rsi,[rax+0x1]
0x9f50: pop rbx
0x9f51: jmp 0x9f10
0x9f90: call 0x1ba0
0x9f95: nop word ptr cs:[rax+rax]
0x9f9f: nop 
0xa014: mov esi,dword ptr [r14]
0xa017: mov r8,rax
0xa01a: mov eax,0x0
0xa01f: lea rdx,[rip+0x3820]
0xa026: mov rcx,r13
0xa029: cmp esi,0x16
0xa02c: cmove esi,eax
0xa02f: test ebx,ebx
0xa031: mov eax,0x1
0xa036: cmove ebx,eax
0xa039: xor eax,eax
0xa03b: mov edi,ebx
0xa03d: call 0x1ee0
0xa042: mov rbp,qword ptr [rsp]
0xa0ac: call 0x1cb0
0xa0b1: nop dword ptr [rax+rax]
0xa0b6: nop word ptr cs:[rax+rax]
0xa1a0: cmp eax,0x22
0xa1a3: mov r12d,0x4
0xa1a9: jne 0xa179
0xa1ab: mov r12d,0x1
0xa1b1: jmp 0xa164
0xa650: mov r12d,0x4
0xa656: jmp 0xa179
0xa77f: lea rcx,[rip+0x3c9a]
0xa786: lea rsi,[rip+0x3b73]
0xa78d: lea rdi,[rip+0x3b8c]
0xa794: mov edx,0x54
0xa799: call 0x1d30
0xa79e: call 0x1cb0
0xa7a3: nop word ptr cs:[rax+rax]
0xa7ad: nop dword ptr [rax]
0xa7b0: push r15
0xa7b2: push r14
0xa7b4: push r13
0xa7b6: push r12
0xa7b8: push rbp
0xa7b9: push rbx
0xa7ba: sub rsp,0x28
0xa7be: mov rax,qword ptr fs:0x28
0xa7c7: mov qword ptr [rsp+0x18],rax
0xa7cc: xor eax,eax
0xa7ce: cmp edx,0x24
0xa7d1: ja 0xae3f
0xa7d7: lea rax,[rsp+0x10]
0xa7dc: test rsi,rsi
0xa7df: mov rbx,rsi
0xa7e2: mov r12,rdi
0xa7e5: mov ebp,edx
0xa7e7: mov r14,rcx
0xa7ea: cmove rbx,rax
0xa7ee: mov r15,r8
0xa7f1: call 0x1bb0
0xa7f6: mov edx,ebp
0xa7f8: mov dword ptr [rax],0x0
0xa7fe: mov rsi,rbx
0xa801: mov rdi,r12
0xa804: mov r13,rax
0xa807: call 0x1dc0
0xa80c: mov rcx,qword ptr [rbx]
0xa80f: mov rbp,rax
0xa812: cmp rcx,r12
0xa815: je 0xa878
0xa817: mov eax,dword ptr [r13]
0xa81b: test eax,eax
0xa81d: jne 0xa860
0xa81f: xor r12d,r12d
0xa822: test r15,r15
0xa825: je 0xa834
0xa827: movzx r13d,byte ptr [rcx]
0xa82b: test r13b,r13b
0xa82e: jne 0xa8b3
0xa834: mov qword ptr [r14],rbp
0xa837: mov rdi,qword ptr [rsp+0x18]
0xa83c: xor rdi,qword ptr fs:0x28
0xa845: mov eax,r12d
0xa848: jne 0xae5e
0xa84e: add rsp,0x28
0xa852: pop rbx
0xa853: pop rbp
0xa854: pop r12
0xa856: pop r13
0xa858: pop r14
0xa85a: pop r15
0xa85c: ret 
0xa860: cmp eax,0x22
0xa863: mov r12d,0x4
0xa869: jne 0xa837
0xa86b: mov r12d,0x1
0xa871: jmp 0xa822
0xa878: test r15,r15
0xa87b: je 0xad10
0xa881: movzx r13d,byte ptr [rcx]
0xa885: mov qword ptr [rsp+0x8],rcx
0xa88a: mov r12d,0x4
0xa890: test r13b,r13b
0xa893: je 0xa837
0xa895: movsx esi,r13b
0xa899: mov rdi,r15
0xa89c: call 0x1ce0
0xa8a1: test rax,rax
0xa8a4: mov rcx,qword ptr [rsp+0x8]
0xa8a9: je 0xa837
0xa8ab: mov ebp,0x1
0xa8b0: xor r12d,r12d
0xa8b3: movsx esi,r13b
0xa8b7: mov rdi,r15
0xa8ba: mov qword ptr [rsp+0x8],rcx
0xa8bf: call 0x1ce0
0xa8c4: test rax,rax
0xa8c7: mov rcx,qword ptr [rsp+0x8]
0xa8cc: je 0xa928
0xa8ce: lea eax,[r13-0x45]
0xa8d2: cmp al,0x2f
0xa8d4: ja 0xa938
0xa8d6: movabsq rdx,0x814400308945
0xa8e0: btq rdx,rax
0xa8e4: jae 0xa938
0xa8e6: mov esi,0x30
0xa8eb: mov rdi,r15
0xa8ee: mov qword ptr [rsp+0x8],rcx
0xa8f3: call 0x1ce0
0xa8f8: test rax,rax
0xa8fb: mov rcx,qword ptr [rsp+0x8]
0xa900: je 0xa938
0xa902: movzx eax,byte ptr [rcx+0x1]
0xa906: cmp al,0x44
0xa908: je 0xa916
0xa90a: cmp al,0x69
0xa90c: je 0xadf8
0xa912: cmp al,0x42
0xa914: jne 0xa938
0xa916: mov edi,0x2
0xa91b: mov eax,0x3e8
0xa920: jmp 0xa942
0xa928: mov qword ptr [r14],rbp
0xa92b: or r12d,0x2
0xa92f: jmp 0xa837
0xa938: mov edi,0x1
0xa93d: mov eax,0x400
0xa942: sub r13d,0x42
0xa946: cmp r13b,0x35
0xa94a: ja 0xa928
0xa94c: lea rsi,[rip+0x3add]
0xa953: movzx r13d,r13b
0xa957: movsxd rdx,dword ptr [rsi+r13*4]
0xa95b: add rdx,rsi
0xa95e: jmp rdx
0xad10: mov r12d,0x4
0xad16: jmp 0xa837
0xadf8: xor edi,edi
0xadfa: cmp byte ptr [rcx+0x2],0x42
0xadfe: mov eax,0x400
0xae03: sete dil
0xae07: lea edi,[rdi+rdi+0x1]
0xae0b: jmp 0xa942
0xae3f: lea rcx,[rip+0x36c2]
0xae46: lea rsi,[rip+0x34b3]
0xae4d: lea rdi,[rip+0x34cc]
0xae54: mov edx,0x54
0xae59: call 0x1d30
0xae5e: call 0x1cb0
0xae63: nop word ptr cs:[rax+rax]
0xae6d: nop dword ptr [rax]
0xae70: push r13
0xae72: push r12
0xae74: mov r10d,esi
0xae77: push rbp
0xae78: push rbx
0xae79: mov r12,r8
0xae7c: sub rsp,0x18
0xae80: mov rax,qword ptr fs:0x28
0xae89: mov qword ptr [rsp+0x8],rax
0xae8e: xor eax,eax
0xae90: cmp edi,0x3
0xae93: mov ebp,dword ptr [rip+0x2061c7]
0xae99: ja 0xaef4
0xae9b: cmp edi,0x2
0xae9e: jae 0xaeeb
0xaea0: sub edi,0x1
0xaea3: lea rsi,[rip+0x3681]
0xaeaa: jne 0xaee6
0xaeac: test r10d,r10d
0xaeaf: movsxd rax,r10d
0xaeb2: js 0xaf02
0xaeb4: shl rax,0x5
0xaeb8: lea rbx,[rip+0x3689]
0xaebf: mov r13,qword ptr [rcx+rax]
0xaec3: mov edx,0x5
0xaec8: xor edi,edi
0xaeca: call 0x1c80
0xaecf: mov r9,r12
0xaed2: mov rdx,rax
0xaed5: mov r8,r13
0xaed8: mov rcx,rbx
0xaedb: xor esi,esi
0xaedd: mov edi,ebp
0xaedf: xor eax,eax
0xaee1: call 0x1ee0
0xaee6: call 0x1ba0
0xaeeb: lea rsi,[rip+0x365e]
0xaef2: jmp 0xaeac
0xaef4: cmp edi,0x4
0xaef7: lea rsi,[rip+0x3612]
0xaefe: je 0xaeac
0xaf00: jmp 0xaee6
0xaf02: lea rbx,[rip+0x363f]
0xaf09: mov byte ptr [rsp+0x6],dl
0xaf0d: mov byte ptr [rsp+0x7],0x0
0xaf12: lea r13,[rsp+0x6]
0xaf17: sub rbx,rax
0xaf1a: jmp 0xaec3
0xaf20: push r15
0xaf22: push r14
0xaf24: push r13
0xaf26: push r12
0xaf28: push rbp
0xaf29: push rbx
0xaf2a: sub rsp,0x28
0xaf2e: mov rax,qword ptr fs:0x28
0xaf37: mov qword ptr [rsp+0x18],rax
0xaf3c: xor eax,eax
0xaf3e: cmp edx,0x24
0xaf41: ja 0xb2a5
0xaf47: lea rax,[rsp+0x10]
0xaf4c: mov r15,rsi
0xaf4f: test rsi,rsi
0xaf52: mov rbp,rdi
0xaf55: mov dword ptr [rsp+0x8],edx
0xaf59: mov r14,rcx
0xaf5c: mov r13,r8
0xaf5f: cmove r15,rax
0xaf63: call 0x1bb0
0xaf68: mov dword ptr [rax],0x0
0xaf6e: mov r12,rax
0xaf71: movzx ebx,byte ptr [rbp]
0xaf75: call 0x1f90
0xaf7a: mov edx,dword ptr [rsp+0x8]
0xaf7e: mov rsi,qword ptr [rax]
0xaf81: mov rax,rbp
0xaf84: jmp 0xaf97
0xaf90: add rax,0x1
0xaf94: movzx ebx,byte ptr [rax]
0xaf97: movzx ecx,bl
0xaf9a: test byte ptr [rsi+rcx*2+0x1],0x20
0xaf9f: jne 0xaf90
0xafa1: cmp bl,0x2d
0xafa4: je 0xaff8
0xafa6: xor ecx,ecx
0xafa8: mov rsi,r15
0xafab: mov rdi,rbp
0xafae: call 0x1d40
0xafb3: mov rcx,qword ptr [r15]
0xafb6: mov rbx,rax
0xafb9: cmp rcx,rbp
0xafbc: je 0xafe8
0xafbe: mov eax,dword ptr [r12]
0xafc2: test eax,eax
0xafc4: je 0xb028
0xafc6: cmp eax,0x22
0xafc9: mov ebp,0x1
0xafce: jne 0xaff8
0xafd0: test r13,r13
0xafd3: je 0xafde
0xafd5: movzx r12d,byte ptr [rcx]
0xafd9: test r12b,r12b
0xafdc: jne 0xb057
0xafde: mov qword ptr [r14],rbx
0xafe1: jmp 0xaffd
0xafe8: test r13,r13
0xafeb: mov qword ptr [rsp+0x8],rcx
0xaff0: jne 0xb030
0xaff2: nop word ptr [rax+rax]
0xaff8: mov ebp,0x4
0xaffd: mov rdi,qword ptr [rsp+0x18]
0xb002: xor rdi,qword ptr fs:0x28
0xb00b: mov eax,ebp
0xb00d: jne 0xb2a0
0xb013: add rsp,0x28
0xb017: pop rbx
0xb018: pop rbp
0xb019: pop r12
0xb01b: pop r13
0xb01d: pop r14
0xb01f: pop r15
0xb021: ret 
0xb028: xor ebp,ebp
0xb02a: jmp 0xafd0
0xb030: movzx r12d,byte ptr [rbp]
0xb035: test r12b,r12b
0xb038: je 0xaff8
0xb03a: movsx esi,r12b
0xb03e: mov rdi,r13
0xb041: xor ebp,ebp
0xb043: call 0x1ce0
0xb048: test rax,rax
0xb04b: mov ebx,0x1
0xb050: mov rcx,qword ptr [rsp+0x8]
0xb055: je 0xaff8
0xb057: movsx esi,r12b
0xb05b: mov rdi,r13
0xb05e: mov qword ptr [rsp+0x8],rcx
0xb063: call 0x1ce0
0xb068: test rax,rax
0xb06b: mov rcx,qword ptr [rsp+0x8]
0xb070: je 0xb13c
0xb076: lea eax,[r12-0x45]
0xb07b: cmp al,0x2f
0xb07d: ja 0xb0d0
0xb07f: movabsq rdx,0x814400308945
0xb089: btq rdx,rax
0xb08d: jae 0xb0d0
0xb08f: mov esi,0x30
0xb094: mov rdi,r13
0xb097: mov qword ptr [rsp+0x8],rcx
0xb09c: call 0x1ce0
0xb0a1: test rax,rax
0xb0a4: mov rcx,qword ptr [rsp+0x8]
0xb0a9: je 0xb0d0
0xb0ab: movzx eax,byte ptr [rcx+0x1]
0xb0af: cmp al,0x44
0xb0b1: je 0xb0bf
0xb0b3: cmp al,0x69
0xb0b5: je 0xb288
0xb0bb: cmp al,0x42
0xb0bd: jne 0xb0d0
0xb0bf: mov edi,0x2
0xb0c4: mov esi,0x3e8
0xb0c9: jmp 0xb0da
0xb0d0: mov edi,0x1
0xb0d5: mov esi,0x400
0xb0da: sub r12d,0x42
0xb0de: cmp r12b,0x35
0xb0e2: ja 0xb13c
0xb0e4: lea rdx,[rip+0x348d]
0xb0eb: movzx r12d,r12b
0xb0ef: movsxd rax,dword ptr [rdx+r12*4]
0xb0f3: add rax,rdx
0xb0f6: jmp rax
0xb120: movsxd rdi,edi
0xb123: mov eax,ebp
0xb125: add rcx,rdi
0xb128: or eax,0x2
0xb12b: mov qword ptr [r15],rcx
0xb12e: cmp byte ptr [rcx],0x0
0xb131: mov qword ptr [r14],rbx
0xb134: cmovne ebp,eax
0xb137: jmp 0xaffd
0xb13c: mov qword ptr [r14],rbx
0xb13f: or ebp,0x2
0xb142: jmp 0xaffd
0xb195: or ebp,r9d
0xb198: jmp 0xb120
0xb22c: mov rax,rbx
0xb22f: mul rsi
0xb232: mov rbx,rax
0xb235: jo 0xb2c4
0xb23b: sub r8d,0x1
0xb23f: jne 0xb22c
0xb241: jmp 0xb195
0xb288: xor edi,edi
0xb28a: cmp byte ptr [rcx+0x2],0x42
0xb28e: mov esi,0x400
0xb293: sete dil
0xb297: lea edi,[rdi+rdi+0x1]
0xb29b: jmp 0xb0da
0xb2a0: call 0x1cb0
0xb2a5: lea rcx,[rip+0x33a4]
0xb2ac: lea rsi,[rip+0x304d]
0xb2b3: lea rdi,[rip+0x3066]
0xb2ba: mov edx,0x54
0xb2bf: call 0x1d30
0xb2c4: mov r9d,0x1
0xb2ca: or rbx,-0x1
0xb2ce: jmp 0xb23b
0xb411: cmp esi,0x406
0xb417: jne 0xb460
0xb419: mov rax,qword ptr [rsp+0x10]
0xb41e: cmp dword ptr [rip+0x205f73],0x0
0xb425: mov dword ptr [rsp],0x18
0xb42c: mov r12d,dword ptr [rax+0x10]
0xb430: mov edx,r12d
0xb433: js 0xb563
0xb439: xor eax,eax
0xb43b: mov esi,0x406
0xb440: call 0x1c10
0xb445: test eax,eax
0xb447: mov ebx,eax
0xb449: js 0xb5d8
0xb44f: mov dword ptr [rip+0x205f3f],0x1
0xb459: jmp 0xb4a0
0xb460: cmp esi,0xb
0xb463: je 0xb490
0xb465: jg 0xb4c0
0xb467: cmp esi,0x4
0xb46a: je 0xb540
0xb470: jg 0xb530
0xb476: cmp esi,0x2
0xb479: je 0xb540
0xb47f: jg 0xb490
0xb481: cmp esi,0x1
0xb484: jne 0xb4e8
0xb486: nop word ptr cs:[rax+rax]
0xb490: mov edi,ebp
0xb492: xor eax,eax
0xb494: call 0x1c10
0xb499: mov ebx,eax
0xb49b: nop dword ptr [rax+rax]
0xb4c0: cmp esi,0x407
0xb4c6: jg 0xb510
0xb4c8: cmp esi,0x406
0xb4ce: jge 0xb540
0xb4d0: cmp esi,0x401
0xb4d6: je 0xb490
0xb4d8: cmp esi,0x402
0xb4de: je 0xb540
0xb4e0: cmp esi,0x400
0xb4e6: je 0xb540
0xb4e8: mov eax,dword ptr [rsp]
0xb4eb: cmp eax,0x2f
0xb4ee: ja 0xb62a
0xb4f4: add rax,qword ptr [rsp+0x10]
0xb4f9: mov rdx,qword ptr [rax]
0xb4fc: mov edi,ebp
0xb4fe: xor eax,eax
0xb500: call 0x1c10
0xb505: mov ebx,eax
0xb507: jmp 0xb4a0
0xb510: cmp esi,0x409
0xb516: je 0xb540
0xb518: jl 0xb490
0xb51e: cmp esi,0x40a
0xb524: jne 0xb4e8
0xb526: jmp 0xb490
0xb530: cmp esi,0x9
0xb533: je 0xb490
0xb539: jg 0xb540
0xb53b: cmp esi,0x8
0xb53e: jne 0xb4e8
0xb540: mov eax,dword ptr [rsp]
0xb543: cmp eax,0x2f
0xb546: ja 0xb634
0xb54c: add rax,qword ptr [rsp+0x10]
0xb551: mov edx,dword ptr [rax]
0xb553: mov edi,ebp
0xb555: xor eax,eax
0xb557: call 0x1c10
0xb55c: mov ebx,eax
0xb55e: jmp 0xb4a0
0xb563: xor esi,esi
0xb565: xor eax,eax
0xb567: call 0x1c10
0xb56c: test eax,eax
0xb56e: mov ebx,eax
0xb570: js 0xb4a0
0xb576: cmp dword ptr [rip+0x205e1b],-0x1
0xb57d: jne 0xb4a0
0xb583: xor eax,eax
0xb585: mov esi,0x1
0xb58a: mov edi,ebx
0xb58c: call 0x1c10
0xb591: test eax,eax
0xb593: js 0xb5b1
0xb595: or eax,0x1
0xb598: mov esi,0x2
0xb59d: mov edi,ebx
0xb59f: mov edx,eax
0xb5a1: xor eax,eax
0xb5a3: call 0x1c10
0xb5a8: cmp eax,-0x1
0xb5ab: jne 0xb4a0
0xb5b1: call 0x1bb0
0xb5b6: mov r12d,dword ptr [rax]
0xb5b9: mov rbp,rax
0xb5bc: mov edi,ebx
0xb5be: call 0x1d60
0xb5c3: mov ebx,0xffffffff
0xb5c8: mov dword ptr [rbp],r12d
0xb5cc: jmp 0xb4a0
0xb5d8: call 0x1bb0
0xb5dd: cmp dword ptr [rax],0x16
0xb5e0: jne 0xb44f
0xb5e6: xor esi,esi
0xb5e8: xor eax,eax
0xb5ea: mov edx,r12d
0xb5ed: mov edi,ebp
0xb5ef: call 0x1c10
0xb5f4: test eax,eax
0xb5f6: mov ebx,eax
0xb5f8: js 0xb4a0
0xb5fe: mov dword ptr [rip+0x205d90],0xffffffff
0xb608: jmp 0xb583
0xb60d: call 0x1cb0
0xb62a: mov rax,qword ptr [rsp+0x8]
0xb62f: jmp 0xb4f9
0xb634: mov rax,qword ptr [rsp+0x8]
0xb639: jmp 0xb551
0xb75e: call 0x1cb0
0xb763: nop word ptr cs:[rax+rax]
0xb76d: nop dword ptr [rax]
0xbae0: cmp rdi,0x1
0xbae4: je 0xbaeb
0xbae6: jmp 0xb7a0
0xbaeb: ret 
0xbba0: push r12
0xbba2: push rbp
0xbba3: push rbx
0xbba4: mov rbx,rsi
0xbba7: sub rsp,0x50
0xbbab: mov rax,qword ptr fs:0x28
0xbbb4: mov qword ptr [rsp+0x48],rax
0xbbb9: xor eax,eax
0xbbbb: test rdi,rdi
0xbbbe: je 0xbcc0
0xbbc4: mov rbp,rdi
0xbbc7: call 0xba00
0xbbcc: test rax,rax
0xbbcf: mov r12,rax
0xbbd2: je 0xbcd0
0xbbd8: mov rdi,rbx
0xbbdb: call 0x1e60
0xbbe0: cmp rax,-0x1
0xbbe4: mov qword ptr [rsp+0x8],rax
0xbbe9: je 0xbc40
0xbbea: push rbp
0xbbeb: mov rsi,rbx
0xbbee: mov rdi,rbp
0xbbf1: call 0xb8c0
0xbbf6: test al,al
0xbbf8: jne 0xbc03
0xbbfa: mov qword ptr [rsp+0x8],-0x1
0xbc03: cmp r12,0x1
0xbc07: je 0xbc19
0xbc09: mov rdi,r12
0xbc0c: call 0xb7d0
0xbc11: test al,al
0xbc13: je 0xbcd0
0xbc19: mov rax,qword ptr [rsp+0x8]
0xbc1e: mov rcx,qword ptr [rsp+0x48]
0xbc23: xor rcx,qword ptr fs:0x28
0xbc2c: jne 0xbcdc
0xbc32: add rsp,0x50
0xbc36: pop rbx
0xbc37: pop rbp
0xbc38: pop r12
0xbc3a: ret 
0xbc40: lea rsi,[rsp+0x10]
0xbc45: lea rdi,[rsp+0x8]
0xbc4a: call 0x1bd0
0xbc4f: test rax,rax
0xbc52: je 0xbc03
0xbc54: mov eax,dword ptr [rbx]
0xbc56: mov edx,dword ptr [rbx+0x4]
0xbc59: xor eax,dword ptr [rsp+0x10]
0xbc5d: xor edx,dword ptr [rsp+0x14]
0xbc61: mov ecx,dword ptr [rsp+0x30]
0xbc65: or eax,edx
0xbc67: mov edx,dword ptr [rbx+0x8]
0xbc6a: xor edx,dword ptr [rsp+0x18]
0xbc6e: or eax,edx
0xbc70: mov edx,dword ptr [rbx+0xc]
0xbc73: xor edx,dword ptr [rsp+0x1c]
0xbc77: or eax,edx
0xbc79: mov edx,dword ptr [rbx+0x10]
0xbc7c: xor edx,dword ptr [rsp+0x20]
0xbc80: or eax,edx
0xbc82: mov edx,dword ptr [rbx+0x14]
0xbc85: xor edx,dword ptr [rsp+0x24]
0xbc89: or eax,edx
0xbc8b: mov edx,dword ptr [rbx+0x20]
0xbc8e: test edx,edx
0xbc90: sete dil
0xbc94: test ecx,ecx
0xbc96: sete sil
0xbc9a: cmp dil,sil
0xbc9d: je 0xbcab
0xbc9f: test edx,edx
0xbca1: js 0xbcab
0xbca3: test ecx,ecx
0xbca5: jns 0xbc03
0xbcab: test eax,eax
0xbcad: je 0xbbeb
0xbcb3: jmp 0xbc03
0xbcc0: mov rdi,rsi
0xbcc3: call 0x1ec0
0xbcc8: jmp 0xbc1e
0xbcd0: mov rax,-0x1
0xbcd7: jmp 0xbc1e
0xbcdc: call 0x1cb0
0xbce1: nop word ptr cs:[rax+rax]
0xbceb: nop dword ptr [rax+rax]
0xbcf0: push r12
0xbcf2: push rbp
0xbcf3: mov rbp,rdi
0xbcf6: push rbx
0xbcf7: call 0x1bf0
0xbcfc: mov ebx,dword ptr [rbp]
0xbcff: mov rdi,rbp
0xbd02: mov r12,rax
0xbd05: call 0xb340
0xbd0a: and ebx,0x20
0xbd0d: test ebx,ebx
0xbd0f: jne 0xbd28
0xbd11: test eax,eax
0xbd13: je 0xbd1f
0xbd15: test r12,r12
0xbd18: mov eax,0xffffffff
0xbd1d: je 0xbd58
0xbd1f: pop rbx
0xbd20: pop rbp
0xbd21: pop r12
0xbd23: ret 
0xbd28: test eax,eax
0xbd2a: jne 0xbd48
0xbd2c: call 0x1bb0
0xbd31: mov dword ptr [rax],0x0
0xbd37: mov eax,0xffffffff
0xbd3c: pop rbx
0xbd3d: pop rbp
0xbd3e: pop r12
0xbd40: ret 
0xbd48: pop rbx
0xbd49: mov eax,0xffffffff
0xbd4e: pop rbp
0xbd4f: pop r12
0xbd51: ret 
0xbd58: call 0x1bb0
0xbd5d: cmp dword ptr [rax],0x9
0xbd60: pop rbx
0xbd61: pop rbp
0xbd62: pop r12
0xbd64: setne al
0xbd67: movzx eax,al
0xbd6a: neg eax
0xbd6c: ret 
0xbd70: sub rsp,0x8
0xbd74: mov edi,0xe
0xbd79: call 0x1e30
0xbd7e: test rax,rax
0xbd81: je 0xbda0
0xbd83: cmp byte ptr [rax],0x0
0xbd86: lea rdx,[rip+0x28ce]
0xbd8d: cmove rax,rdx
0xbd91: add rsp,0x8
0xbd95: ret 
0xbda0: lea rax,[rip+0x28b4]
0xbda7: add rsp,0x8
0xbdab: ret 
0xbdb0: push r15
0xbdb2: push r14
0xbdb4: mov r15,rdx
0xbdb7: push r13
0xbdb9: push r12
0xbdbb: lea r12,[rip+0x204a0e]
0xbdc2: push rbp
0xbdc3: lea rbp,[rip+0x204a0e]
0xbdca: push rbx
0xbdcb: mov r13d,edi
0xbdce: mov r14,rsi
0xbdd1: sub rbp,r12
0xbdd4: sub rsp,0x8
0xbdd8: sar rbp,0x3
0xbddc: call 0x1b30
0xbde1: test rbp,rbp
0xbde4: je 0xbe06
0xbde6: xor ebx,ebx
0xbde8: nop dword ptr [rax+rax]
0xbdf0: mov rdx,r15
0xbdf3: mov rsi,r14
0xbdf6: mov edi,r13d
0xbdf9: call qword ptr [r12+rbx*8]
0xbdfd: add rbx,0x1
0xbe01: cmp rbp,rbx
0xbe04: jne 0xbdf0
0xbe06: add rsp,0x8
0xbe0a: pop rbx
0xbe0b: pop rbp
0xbe0c: pop r12
0xbe0e: pop r13
0xbe10: pop r14
0xbe12: pop r15
0xbe14: ret 
0xbe20: rep ret 
0xeb3b: jmp qword ptr [rip+0x1]
