0x17c8: sub rsp,0x8
0x17cc: mov rax,qword ptr [rip+0x20b815]
0x17d3: test rax,rax
0x17d6: je 0x17da
0x17d8: call rax
0x17da: add rsp,0x8
0x17de: ret 
0x17e6: jmp qword ptr [rip+0x20b60c]
0x1830: jmp qword ptr [rip+0x20b5ea]
0x1840: jmp qword ptr [rip+0x20b5e2]
0x18e0: jmp qword ptr [rip+0x20b592]
0x1900: jmp qword ptr [rip+0x20b582]
0x1950: jmp qword ptr [rip+0x20b55a]
0x19a0: jmp qword ptr [rip+0x20b532]
0x19c0: jmp qword ptr [rip+0x20b522]
0x19f0: jmp qword ptr [rip+0x20b50a]
0x1a50: jmp qword ptr [rip+0x20b4da]
0x1b60: jmp qword ptr [rip+0x20b452]
0x1b70: jmp qword ptr [rip+0x20b44a]
0x1ba0: jmp qword ptr [rip+0x20b452]
0x1ce4: nop dword ptr [rax]
0x1d61: nop dword ptr [rax]
0x1e43: lea rsi,[rip+0x7480]
0x1e4a: mov rbx,rax
0x1e4d: mov edx,0x5
0x1e52: xor edi,edi
0x1e54: call 0x18b0
0x1e59: mov rcx,rbx
0x1e5c: mov rdx,rax
0x1e5f: xor esi,esi
0x1e61: xor edi,edi
0x1e63: xor eax,eax
0x1e65: call 0x1ad0
0x1e6a: lea rsi,[rip+0x746c]
0x1e71: mov edx,0x5
0x1e76: xor edi,edi
0x1e78: call 0x18b0
0x1e7d: xor esi,esi
0x1e7f: mov rdx,rax
0x1e82: mov edi,0x1
0x1e87: xor eax,eax
0x1e89: call 0x1ad0
0x1e8e: nop 
0x2239: lea rsi,[rip+0x70ed]
0x2240: mov rbx,rax
0x2243: mov edx,0x5
0x2248: xor edi,edi
0x224a: call 0x18b0
0x224f: mov rcx,rbx
0x2252: mov rdx,rax
0x2255: xor esi,esi
0x2257: mov edi,0x1
0x225c: xor eax,eax
0x225e: call 0x1ad0
0x22a5: jmp 0x1cda
0x2471: lea rsi,[rip+0x78a0]
0x2478: xor edi,edi
0x247a: mov edx,0x5
0x247f: mov rbx,rax
0x2482: call 0x18b0
0x2487: lea r9,[rip+0x6d62]
0x248e: mov rdx,rax
0x2491: xor esi,esi
0x2493: xor edi,edi
0x2495: xor eax,eax
0x2497: mov r8,r12
0x249a: mov rcx,rbx
0x249d: call 0x1ad0
0x24a2: test byte ptr [r13],0x30
0x24a7: je 0x221e
0x271e: mov rbx,rax
0x2721: call 0x1810
0x2726: mov esi,dword ptr [rax]
0x2728: lea rdx,[rip+0x77dd]
0x272f: xor eax,eax
0x2731: mov rcx,rbx
0x2734: xor edi,edi
0x2736: call 0x1ad0
0x273b: xor eax,eax
0x273d: jmp 0x25df
0x28cf: lea rsi,[rip+0x6a91]
0x28d6: mov rbx,rax
0x28d9: mov edx,0x5
0x28de: xor edi,edi
0x28e0: call 0x18b0
0x28e5: mov rcx,rbx
0x28e8: mov rdx,rax
0x28eb: xor esi,esi
0x28ed: xor eax,eax
0x28ef: xor edi,edi
0x28f1: call 0x1ad0
0x28f6: xor eax,eax
0x28f8: jmp 0x25df
0x2935: lea rsi,[rip+0x740c]
0x293c: xor edi,edi
0x293e: mov edx,0x5
0x2943: mov rbp,rax
0x2946: call 0x18b0
0x294b: lea r8,[rip+0x689e]
0x2952: mov rdx,rax
0x2955: mov rcx,rbp
0x2958: xor esi,esi
0x295a: xor edi,edi
0x295c: xor eax,eax
0x295e: call 0x1ad0
0x2963: jmp 0x25da
0x2c1e: mov rdi,qword ptr [rip+0x20a483]
0x2c25: mov rax,qword ptr [rdi+0x28]
0x2c29: cmp rax,qword ptr [rdi+0x30]
0x2c2d: jae 0x2eb6
0x2c33: lea rdx,[rax+0x1]
0x2c37: mov qword ptr [rdi+0x28],rdx
0x2c3b: mov byte ptr [rax],0x5c
0x2c8e: lea rsi,[rip+0x66e1]
0x2c95: mov rbp,rax
0x2c98: xor edi,edi
0x2c9a: mov edx,0x5
0x2c9f: call 0x18b0
0x2ca4: mov rcx,rbp
0x2ca7: mov rdx,rax
0x2caa: xor esi,esi
0x2cac: xor edi,edi
0x2cae: xor eax,eax
0x2cb0: call 0x1ad0
0x2cb5: jmp 0x25da
0x2d01: movzx r12d,byte ptr [rsp+0x78]
0x2d07: jmp 0x296d
0x2e1c: mov rdi,qword ptr [rip+0x20a285]
0x2e23: mov rax,qword ptr [rdi+0x28]
0x2e27: cmp rax,qword ptr [rdi+0x30]
0x2e2b: jae 0x2ee2
0x2e31: lea rcx,[rax+0x1]
0x2e35: mov qword ptr [rdi+0x28],rcx
0x2e39: mov byte ptr [rax],0x5c
0x2e3c: mov esi,0x1
0x2e41: mov rdi,rbp
0x2e44: mov qword ptr [rsp+0x20],rdx
0x2e49: call 0x31f0
0x2e4e: mov rdx,qword ptr [rsp+0x20]
0x2e53: cmp rdx,r15
0x2e56: jne 0x2dd2
0x2ea4: movzx eax,byte ptr [rsp+0x79]
0x2ea9: jmp 0x260a
0x2eb6: mov esi,0x5c
0x2ebb: call 0x1920
0x2ec0: jmp 0x2c3e
0x2ece: jmp 0x2a6d
0x2edd: jmp 0x2a48
0x2ee2: mov esi,0x5c
0x2ee7: mov qword ptr [rsp+0x20],rdx
0x2eec: call 0x1920
0x2ef1: mov rdx,qword ptr [rsp+0x20]
0x2ef6: jmp 0x2e3c
0x2f15: lea rsi,[rip+0x63ae]
0x2f1c: mov rbx,rax
0x2f1f: mov edx,0x5
0x2f24: xor edi,edi
0x2f26: call 0x18b0
0x2f2b: mov rcx,rbx
0x2f2e: mov rdx,rax
0x2f31: xor esi,esi
0x2f33: xor edi,edi
0x2f35: xor eax,eax
0x2f37: call 0x1ad0
0x2f3c: mov edx,dword ptr [rip+0x20a1b6]
0x2f42: lea rax,[rip+0x209c47]
0x2f49: mov rdi,qword ptr [rax+rdx*8]
0x2f4d: call 0x79a0
0x2f52: lea rsi,[rip+0x6b4f]
0x2f59: mov rbx,rax
0x2f5c: mov edx,0x5
0x2f61: xor edi,edi
0x2f63: call 0x18b0
0x2f68: mov r8d,0x200
0x2f6e: mov rdx,rax
0x2f71: mov rcx,rbx
0x2f74: xor esi,esi
0x2f76: mov edi,0x1
0x2f7b: xor eax,eax
0x2f7d: call 0x1ad0
0x2f82: call 0x18e0
0x302a: hlt 
0x302b: nop dword ptr [rax+rax]
0x3030: lea rdi,[rip+0x20a069]
0x3037: push rbp
0x3038: lea rax,[rip+0x20a061]
0x303f: cmp rax,rdi
0x3042: mov rbp,rsp
0x3045: je 0x3060
0x3047: mov rax,qword ptr [rip+0x209f8a]
0x304e: test rax,rax
0x3051: je 0x3060
0x3053: pop rbp
0x3054: jmp rax
0x3060: pop rbp
0x3061: ret 
0x3070: lea rdi,[rip+0x20a029]
0x3077: lea rsi,[rip+0x20a022]
0x307e: push rbp
0x307f: sub rsi,rdi
0x3082: mov rbp,rsp
0x3085: sar rsi,0x3
0x3089: mov rax,rsi
0x308c: shr rax,0x3f
0x3090: add rsi,rax
0x3093: sar rsi, 1
0x3096: je 0x30b0
0x3098: mov rax,qword ptr [rip+0x209f51]
0x309f: test rax,rax
0x30a2: je 0x30b0
0x30a4: pop rbp
0x30a5: jmp rax
0x30b0: pop rbp
0x30b1: ret 
0x30d1: push rbp
0x30d2: mov rbp,rsp
0x30d5: je 0x30e3
0x30d7: mov rdi,qword ptr [rip+0x209f2a]
0x30de: call 0x1ba0
0x30e3: call 0x3030
0x30e8: mov byte ptr [rip+0x209ff9],0x1
0x30ef: pop rbp
0x30f0: ret 
0x3100: push rbp
0x3101: mov rbp,rsp
0x3104: pop rbp
0x3105: jmp 0x3070
0x31e0: mov rax,rdi
0x31e3: cmp byte ptr [rax],0x0
0x31e6: sete al
0x31e9: add rsp,0x8
0x31ed: pop rbx
0x31ee: pop rbp
0x31ef: ret 
0x32b0: jmp 0x322e
0x334f: mov rbp,rax
0x3352: xor r12d,r12d
0x3355: call 0x1810
0x335a: mov esi,dword ptr [rax]
0x335c: lea rdx,[rip+0x6ba9]
0x3363: xor edi,edi
0x3365: xor eax,eax
0x3367: mov rcx,rbp
0x336a: call 0x1ad0
0x336f: cmp qword ptr [rip+0x209d3a],rbx
0x3376: je 0x332c
0x3378: mov rdi,rbx
0x337b: call 0x8bf0
0x3380: add rsp,0x8
0x3384: mov eax,r12d
0x3387: pop rbx
0x3388: pop rbp
0x3389: pop r12
0x338b: pop r13
0x338d: ret 
0x33f4: mov rbx,rax
0x33f7: xor r12d,r12d
0x33fa: call 0x1810
0x33ff: mov esi,dword ptr [rax]
0x3401: lea rdx,[rip+0x6b04]
0x3408: mov rcx,rbx
0x340b: xor edi,edi
0x340d: xor eax,eax
0x340f: call 0x1ad0
0x3414: jmp 0x332c
0x3449: mov esi,dword ptr [rbx]
0x344b: lea rdx,[rip+0x6aba]
0x3452: mov rcx,rax
0x3455: xor edi,edi
0x3457: xor eax,eax
0x3459: xor r12d,r12d
0x345c: call 0x1ad0
0x3461: jmp 0x332c
0x4fe7: call 0x18e0
0x4fec: nop dword ptr [rax]
0x5257: call 0x18e0
0x525c: nop dword ptr [rax]
0x5260: push rbp
0x5261: push rbx
0x5262: sub rsp,0xd8
0x5269: mov rax,qword ptr fs:0x28
0x5272: mov qword ptr [rsp+0xc8],rax
0x527a: xor eax,eax
0x527c: lea rax,[rsi-0x1]
0x5280: cmp rax,0x3f
0x5284: ja 0x5360
0x528a: lea rax,[rcx-0x1]
0x528e: mov r9,rcx
0x5291: cmp rax,0x3f
0x5295: ja 0x5360
0x529b: test rdx,rdx
0x529e: mov r10,rdx
0x52a1: je 0x5360
0x52a7: pxor xmm0,xmm0
0x52ab: xor eax,eax
0x52ad: mov byte ptr [rsp],sil
0x52b1: mov rsi,rsp
0x52b4: mov qword ptr [rsp+0x12],0x0
0x52bd: mov rbp,rdi
0x52c0: mov dword ptr [rsi+0x1a],0x0
0x52c7: mov word ptr [rsi+0x1e],ax
0x52cb: mov byte ptr [rsp+0x1],cl
0x52cf: mov qword ptr [rsp+0x2],0x101
0x52d8: mov qword ptr [rsp+0xa],0x0
0x52e1: movaps [rsp+0x20],xmm0
0x52e6: movaps [rsp+0x30],xmm0
0x52eb: call 0x5100
0x52f0: test eax,eax
0x52f2: js 0x5360
0x52f4: lea rbx,[rsp+0x40]
0x52f9: xor eax,eax
0x52fb: mov ecx,0x10
0x5300: mov rdx,r9
0x5303: mov rsi,r10
0x5306: mov rdi,rbx
0x5309: rep stos qword ptr es:[rdi],rax
0x530c: mov ecx,0x80
0x5311: mov rdi,rbx
0x5314: call 0x19f0
0x5319: mov edx,0x80
0x531e: mov rsi,rbx
0x5321: mov rdi,rbp
0x5324: call 0x4ff0
0x5329: mov rax,qword ptr [rip+0x207ce8]
0x5330: mov edx,0x80
0x5335: xor esi,esi
0x5337: mov rdi,rbx
0x533a: call rax
0x533c: xor eax,eax
0x533e: mov rdx,qword ptr [rsp+0xc8]
0x5346: xor rdx,qword ptr fs:0x28
0x534f: jne 0x5367
0x5351: add rsp,0xd8
0x5358: pop rbx
0x5359: pop rbp
0x535a: ret 
0x5360: mov eax,0xffffffff
0x5365: jmp 0x533e
0x5367: call 0x18e0
0x536c: nop dword ptr [rax]
0x54fc: call 0x18e0
0x5501: nop dword ptr [rax+rax]
0x5506: nop word ptr cs:[rax+rax]
0x5510: push r14
0x5512: push r13
0x5514: mov r14,rdx
0x5517: push r12
0x5519: push rbp
0x551a: push rbx
0x551b: sub rsp,0x100
0x5522: mov rax,qword ptr fs:0x28
0x552b: mov qword ptr [rsp+0xf8],rax
0x5533: xor eax,eax
0x5535: test rdx,rdx
0x5538: sete dl
0x553b: test rcx,rcx
0x553e: setne al
0x5541: test dl,al
0x5543: jne 0x55e0
0x5549: test rdi,rdi
0x554c: mov r13,rdi
0x554f: je 0x55e0
0x5555: test r8,r8
0x5558: mov rbx,rsi
0x555b: mov rbp,rcx
0x555e: jne 0x5565
0x5560: test r9,r9
0x5563: jne 0x55e0
0x5565: lea rax,[rbx-0x1]
0x5569: cmp rax,0x3f
0x556d: ja 0x55e0
0x556f: cmp r9,0x40
0x5573: ja 0x55e0
0x5575: test r9,r9
0x5578: mov r12,rsp
0x557b: jne 0x55c8
0x557d: mov rsi,rbx
0x5580: mov rdi,r12
0x5583: call 0x51d0
0x5588: test eax,eax
0x558a: js 0x55e0
0x558c: test rbp,rbp
0x558f: jne 0x55f0
0x5591: mov rdx,rbx
0x5594: mov rsi,r13
0x5597: mov rdi,r12
0x559a: call 0x5390
0x559f: xor eax,eax
0x55a1: mov rcx,qword ptr [rsp+0xf8]
0x55a9: xor rcx,qword ptr fs:0x28
0x55b2: jne 0x5600
0x55b4: add rsp,0x100
0x55bb: pop rbx
0x55bc: pop rbp
0x55bd: pop r12
0x55bf: pop r13
0x55c1: pop r14
0x55c3: ret 
0x55c8: mov rcx,r9
0x55cb: mov rdx,r8
0x55ce: mov rsi,rbx
0x55d1: mov rdi,r12
0x55d4: call 0x5260
0x55d9: test eax,eax
0x55db: jns 0x558c
0x55dd: nop dword ptr [rax]
0x55e0: mov eax,0xffffffff
0x55e5: jmp 0x55a1
0x55f0: mov rdx,rbp
0x55f3: mov rsi,r14
0x55f6: mov rdi,r12
0x55f9: call 0x4ff0
0x55fe: jmp 0x5591
0x5600: call 0x18e0
0x5605: nop 
0x5606: nop word ptr cs:[rax+rax]
0x5610: jmp 0x5510
0x573f: call 0x18e0
0x5744: nop word ptr cs:[rax+rax]
0x574e: nop 
0x5750: mov edi,0x1
0x5755: jmp 0x3480
0x57be: mov rdi,qword ptr [rsp]
0x57c2: mov rdx,r13
0x57c5: mov rsi,rbp
0x57c8: imul rdi,r13
0x57cc: add rdi,rax
0x57cf: call 0x19a0
0x57d4: test eax,eax
0x57d6: movzx eax,byte ptr [rsp+0x17]
0x57db: mov ecx,0x1
0x57e0: cmovne eax,ecx
0x57e3: mov byte ptr [rsp+0x17],al
0x5880: cmp rdx,-0x1
0x5884: push r12
0x5886: mov edx,0x5
0x588b: push rbp
0x588c: mov r12,rsi
0x588f: push rbx
0x5890: mov rbp,rdi
0x5893: je 0x58e0
0x5895: lea rsi,[rip+0x4634]
0x589c: xor edi,edi
0x589e: call 0x18b0
0x58a3: mov rbx,rax
0x58a6: mov rsi,rbp
0x58a9: mov edi,0x1
0x58ae: call 0x7980
0x58b3: mov rdx,r12
0x58b6: mov rbp,rax
0x58b9: mov esi,0x8
0x58be: xor edi,edi
0x58c0: call 0x75b0
0x58c5: mov r8,rbp
0x58c8: mov rdx,rbx
0x58cb: mov rcx,rax
0x58ce: pop rbx
0x58cf: pop rbp
0x58d0: pop r12
0x58d2: xor esi,esi
0x58d4: xor edi,edi
0x58d6: xor eax,eax
0x58d8: jmp 0x1ad0
0x58e0: lea rsi,[rip+0x45ce]
0x58e7: xor edi,edi
0x58e9: call 0x18b0
0x58ee: mov rbx,rax
0x58f1: jmp 0x58a6
0x5900: push r15
0x5902: push r14
0x5904: mov r14,rdi
0x5907: push r13
0x5909: push r12
0x590b: xor edi,edi
0x590d: push rbp
0x590e: push rbx
0x590f: mov rbp,rsi
0x5912: lea rsi,[rip+0x45d4]
0x5919: mov r12,rdx
0x591c: mov edx,0x5
0x5921: sub rsp,0x8
0x5925: mov rbx,qword ptr [rip+0x2077b4]
0x592c: call 0x18b0
0x5931: mov rdi,rax
0x5934: mov rsi,rbx
0x5937: call 0x19b0
0x593c: mov r15,qword ptr [r14]
0x593f: test r15,r15
0x5942: je 0x59d8
0x5948: xor r13d,r13d
0x594b: xor ebx,ebx
0x594d: jmp 0x5988
0x5950: mov rdi,r15
0x5953: add rbx,0x1
0x5957: mov r13,rbp
0x595a: call 0x79a0
0x595f: mov rdi,qword ptr [rip+0x20777a]
0x5966: lea rdx,[rip+0x4595]
0x596d: mov rcx,rax
0x5970: mov esi,0x1
0x5975: xor eax,eax
0x5977: add rbp,r12
0x597a: call 0x1b50
0x597f: mov r15,qword ptr [r14+rbx*8]
0x5983: test r15,r15
0x5986: je 0x59d8
0x5988: test rbx,rbx
0x598b: je 0x5950
0x598d: mov rdx,r12
0x5990: mov rsi,rbp
0x5993: mov rdi,r13
0x5996: call 0x19a0
0x599b: test eax,eax
0x599d: jne 0x5950
0x599f: mov rdi,r15
0x59a2: add rbx,0x1
0x59a6: add rbp,r12
0x59a9: call 0x79a0
0x59ae: mov rdi,qword ptr [rip+0x20772b]
0x59b5: lea rdx,[rip+0x454e]
0x59bc: mov rcx,rax
0x59bf: mov esi,0x1
0x59c4: xor eax,eax
0x59c6: call 0x1b50
0x59cb: mov r15,qword ptr [r14+rbx*8]
0x59cf: test r15,r15
0x59d2: jne 0x5988
0x59d4: nop dword ptr [rax]
0x59d8: mov rdi,qword ptr [rip+0x207701]
0x59df: mov rax,qword ptr [rdi+0x28]
0x59e3: cmp rax,qword ptr [rdi+0x30]
0x59e7: jae 0x5a08
0x59e9: lea rdx,[rax+0x1]
0x59ed: mov qword ptr [rdi+0x28],rdx
0x59f1: mov byte ptr [rax],0xa
0x59f4: add rsp,0x8
0x59f8: pop rbx
0x59f9: pop rbp
0x59fa: pop r12
0x59fc: pop r13
0x59fe: pop r14
0x5a00: pop r15
0x5a02: ret 
0x5a08: add rsp,0x8
0x5a0c: mov esi,0xa
0x5a11: pop rbx
0x5a12: pop rbp
0x5a13: pop r12
0x5a15: pop r13
0x5a17: pop r14
0x5a19: pop r15
0x5a1b: jmp 0x1920
0x5a20: push r15
0x5a22: push r14
0x5a24: mov r14,rdi
0x5a27: push r13
0x5a29: push r12
0x5a2b: mov r12,rsi
0x5a2e: push rbp
0x5a2f: push rbx
0x5a30: mov rbp,rcx
0x5a33: mov rbx,rdx
0x5a36: mov rcx,r8
0x5a39: mov rdx,rbp
0x5a3c: sub rsp,0x8
0x5a40: mov rsi,rbx
0x5a43: mov rdi,r12
0x5a46: mov r15,r8
0x5a49: mov r13,r9
0x5a4c: call 0x5760
0x5a51: test rax,rax
0x5a54: js 0x5a65
0x5a56: add rsp,0x8
0x5a5a: pop rbx
0x5a5b: pop rbp
0x5a5c: pop r12
0x5a5e: pop r13
0x5a60: pop r14
0x5a62: pop r15
0x5a64: ret 
0x5a65: mov rdx,rax
0x5a68: mov rsi,r12
0x5a6b: mov rdi,r14
0x5a6e: call 0x5880
0x5a73: mov rdx,r15
0x5a76: mov rsi,rbp
0x5a79: mov rdi,rbx
0x5a7c: call 0x5900
0x5a81: call r13
0x5a84: mov rax,-0x1
0x5a8b: jmp 0x5a56
0x5a90: push r14
0x5a92: push r13
0x5a94: push r12
0x5a96: push rbp
0x5a97: push rbx
0x5a98: mov r14,qword ptr [rsi]
0x5a9b: test r14,r14
0x5a9e: je 0x5ad1
0x5aa0: mov r12,rcx
0x5aa3: mov r13,rdi
0x5aa6: mov rbp,rdx
0x5aa9: lea rbx,[rsi+0x8]
0x5aad: jmp 0x5abf
0x5ab0: mov r14,qword ptr [rbx]
0x5ab3: add rbp,r12
0x5ab6: add rbx,0x8
0x5aba: test r14,r14
0x5abd: je 0x5ad1
0x5abf: mov rdx,r12
0x5ac2: mov rsi,rbp
0x5ac5: mov rdi,r13
0x5ac8: call 0x19a0
0x5acd: test eax,eax
0x5acf: jne 0x5ab0
0x5ad1: pop rbx
0x5ad2: mov rax,r14
0x5ad5: pop rbp
0x5ad6: pop r12
0x5ad8: pop r13
0x5ada: pop r14
0x5adc: ret 
0x5ae0: mov qword ptr [rip+0x207641],rdi
0x5ae7: ret 
0x5af0: mov byte ptr [rip+0x207629],dil
0x5af7: ret 
0x5b00: push rbp
0x5b01: push rbx
0x5b02: sub rsp,0x8
0x5b06: mov rdi,qword ptr [rip+0x20759b]
0x5b0d: call 0x9020
0x5b12: test eax,eax
0x5b14: je 0x5b2c
0x5b16: call 0x1810
0x5b1b: cmp byte ptr [rip+0x2075fe],0x0
0x5b22: mov rbx,rax
0x5b25: je 0x5b43
0x5b27: cmp dword ptr [rax],0x20
0x5b2a: jne 0x5b43
0x5b2c: mov rdi,qword ptr [rip+0x2075ad]
0x5b33: call 0x9020
0x5b38: test eax,eax
0x5b3a: jne 0x5b82
0x5b3c: add rsp,0x8
0x5b40: pop rbx
0x5b41: pop rbp
0x5b42: ret 
0x5b43: lea rsi,[rip+0x43c5]
0x5b4a: xor edi,edi
0x5b4c: mov edx,0x5
0x5b51: call 0x18b0
0x5b56: mov rdi,qword ptr [rip+0x2075cb]
0x5b5d: mov rbp,rax
0x5b60: test rdi,rdi
0x5b63: je 0x5b8d
0x5b65: call 0x77a0
0x5b6a: mov esi,dword ptr [rbx]
0x5b6c: lea rdx,[rip+0x43a8]
0x5b73: mov rcx,rax
0x5b76: mov r8,rbp
0x5b79: xor edi,edi
0x5b7b: xor eax,eax
0x5b7d: call 0x1ad0
0x5b82: mov edi,dword ptr [rip+0x2074a8]
0x5b88: call 0x1830
0x5b8d: mov esi,dword ptr [rbx]
0x5b8f: lea rdx,[rip+0x4376]
0x5b96: mov rcx,rax
0x5b99: xor edi,edi
0x5b9b: xor eax,eax
0x5b9d: call 0x1ad0
0x5ba2: jmp 0x5b82
0x5bb0: jmp 0x1990
0x5d2f: nop 
0x5d30: push rbp
0x5d31: push rbx
0x5d32: mov rbp,rdi
0x5d35: mov ebx,esi
0x5d37: sub rsp,0x8
0x5d3b: call 0x9100
0x5d40: movzx edx,byte ptr [rax]
0x5d43: and edx,-0x21
0x5d46: cmp dl,0x55
0x5d49: je 0x5dc0
0x5d4b: cmp dl,0x47
0x5d4e: je 0x5d70
0x5d50: lea rax,[rip+0x4224]
0x5d57: lea rdx,[rip+0x421f]
0x5d5e: cmp ebx,0x9
0x5d61: cmovne rax,rdx
0x5d65: add rsp,0x8
0x5d69: pop rbx
0x5d6a: pop rbp
0x5d6b: ret 
0x5d70: movzx edx,byte ptr [rax+0x1]
0x5d74: and edx,-0x21
0x5d77: cmp dl,0x42
0x5d7a: jne 0x5d50
0x5d7c: cmp byte ptr [rax+0x2],0x31
0x5d80: jne 0x5d50
0x5d82: cmp byte ptr [rax+0x3],0x38
0x5d86: jne 0x5d50
0x5d88: cmp byte ptr [rax+0x4],0x30
0x5d8c: jne 0x5d50
0x5d8e: cmp byte ptr [rax+0x5],0x33
0x5d92: jne 0x5d50
0x5d94: cmp byte ptr [rax+0x6],0x30
0x5d98: jne 0x5d50
0x5d9a: cmp byte ptr [rax+0x7],0x0
0x5d9e: jne 0x5d50
0x5da0: cmp byte ptr [rbp],0x60
0x5da4: lea rax,[rip+0x41c9]
0x5dab: lea rdx,[rip+0x41c6]
0x5db2: cmovne rax,rdx
0x5db6: add rsp,0x8
0x5dba: pop rbx
0x5dbb: pop rbp
0x5dbc: ret 
0x5dc0: movzx edx,byte ptr [rax+0x1]
0x5dc4: and edx,-0x21
0x5dc7: cmp dl,0x54
0x5dca: jne 0x5d50
0x5dcc: movzx edx,byte ptr [rax+0x2]
0x5dd0: and edx,-0x21
0x5dd3: cmp dl,0x46
0x5dd6: jne 0x5d50
0x5ddc: cmp byte ptr [rax+0x3],0x2d
0x5de0: jne 0x5d50
0x5de6: cmp byte ptr [rax+0x4],0x38
0x5dea: jne 0x5d50
0x5df0: cmp byte ptr [rax+0x5],0x0
0x5df4: jne 0x5d50
0x5dfa: cmp byte ptr [rbp],0x60
0x5dfe: lea rax,[rip+0x4167]
0x5e05: lea rdx,[rip+0x4164]
0x5e0c: cmovne rax,rdx
0x5e10: add rsp,0x8
0x5e14: pop rbx
0x5e15: pop rbp
0x5e16: ret 
0x5ef3: xor r11d,r11d
0x5ef6: mov rax,rbp
0x5ef9: mov r8d,r12d
0x5efc: mov rbp,r11
0x5eff: mov r11,rax
0x5f02: nop word ptr [rax+rax]
0x5f08: cmp r11,rbp
0x5f0b: setne r12b
0x5f0f: cmp r11,-0x1
0x5f13: jne 0x5f22
0x5f15: mov rax,qword ptr [rsp+0x10]
0x5f1a: cmp byte ptr [rax+rbp],0x0
0x5f1e: setne r12b
0x5f22: test r12b,r12b
0x5f25: je 0x6580
0x5f2b: cmp dword ptr [rsp+0x8],0x2
0x5f30: mov rdi,qword ptr [rsp+0x10]
0x5f35: lea r9,[rdi+rbp]
0x5f39: setne al
0x5f3c: and al,byte ptr [rsp+0xd]
0x5f40: mov r10d,eax
0x5f43: je 0x5ff0
0x5f49: mov rax,qword ptr [rsp+0x18]
0x5f4e: test rax,rax
0x5f51: je 0x6380
0x5f57: cmp r11,-0x1
0x5f5b: lea rbx,[rbp+rax]
0x5f60: jne 0x5f90
0x5f62: cmp rax,0x1
0x5f66: jbe 0x5f90
0x5f68: mov byte ptr [rsp+0x38],r8b
0x5f6d: mov byte ptr [rsp+0x30],r10b
0x5f72: mov qword ptr [rsp+0x28],r9
0x5f77: call 0x18d0
0x5f7c: movzx r8d,byte ptr [rsp+0x38]
0x5f82: movzx r10d,byte ptr [rsp+0x30]
0x5f88: mov r11,rax
0x5f8b: mov r9,qword ptr [rsp+0x28]
0x5f90: cmp rbx,r11
0x5f93: mov byte ptr [rsp+0x28],r10b
0x5f98: ja 0x6550
0x5f9e: mov rdx,qword ptr [rsp+0x18]
0x5fa3: mov rsi,qword ptr [rsp+0x48]
0x5fa8: mov rdi,r9
0x5fab: mov qword ptr [rsp+0x40],r11
0x5fb0: mov byte ptr [rsp+0x38],r8b
0x5fb5: mov qword ptr [rsp+0x30],r9
0x5fba: call 0x19a0
0x5fbf: test eax,eax
0x5fc1: mov r9,qword ptr [rsp+0x30]
0x5fc6: movzx r8d,byte ptr [rsp+0x38]
0x5fcc: mov r11,qword ptr [rsp+0x40]
0x5fd1: jne 0x6550
0x5fd7: cmp byte ptr [rsp+0xf],0x0
0x5fdc: movzx r10d,byte ptr [rsp+0x28]
0x5fe2: jne 0x6f65
0x5fe8: nop dword ptr [rax+rax]
0x5ff0: movzx ebx,byte ptr [r9]
0x5ff4: cmp bl,0x7e
0x5ff7: ja 0x6318
0x5ffd: lea rcx,[rip+0x4008]
0x6004: movzx edx,bl
0x6007: movsxd rax,dword ptr [rcx+rdx*4]
0x600b: add rax,rcx
0x600e: jmp rax
0x6048: cmp byte ptr [rsp+0xd],0x1
0x604d: jne 0x6162
0x6053: test dl,dl
0x6055: jne 0x6162
0x605b: mov rsi,qword ptr [rsp+0x20]
0x6060: test rsi,rsi
0x6063: je 0x6079
0x6065: mov edx,ebx
0x6067: shr dl,0x5
0x606a: movzx edx,dl
0x606d: mov edx,dword ptr [rsi+rdx*4]
0x6070: btl edx,ebx
0x6073: jb 0x61c3
0x6079: test r10b,r10b
0x607c: jne 0x61c3
0x6082: xor eax,0x1
0x6085: add rbp,0x1
0x6089: and eax,r8d
0x608c: test al,al
0x608e: je 0x60b0
0x6090: cmp r13,r15
0x6093: jbe 0x609a
0x6095: mov byte ptr [r14+r15],0x27
0x609a: lea rax,[r15+0x1]
0x609e: cmp r13,rax
0x60a1: jbe 0x60a9
0x60a3: mov byte ptr [r14+r15+0x1],0x27
0x60a9: add r15,0x2
0x60ad: xor r8d,r8d
0x60b0: cmp r15,r13
0x60b3: jae 0x60b9
0x60b5: mov byte ptr [r14+r15],bl
0x60b9: movzx edi,byte ptr [rsp+0xe]
0x60be: add r15,0x1
0x60c2: mov eax,0x0
0x60c7: test r12b,r12b
0x60ca: cmove edi,eax
0x60cd: mov byte ptr [rsp+0xe],dil
0x60d2: jmp 0x5f08
0x6162: cmp byte ptr [rsp+0xf],0x0
0x6167: jne 0x605b
0x616d: jmp 0x6079
0x61c3: cmp dword ptr [rsp+0x8],0x2
0x61c8: sete dl
0x61cb: cmp byte ptr [rsp+0xf],0x0
0x61d0: mov eax,edx
0x61d2: jne 0x6a28
0x61d8: mov eax,r8d
0x61db: xor eax,0x1
0x61de: and al,dl
0x61e0: je 0x6211
0x61e2: cmp r13,r15
0x61e5: jbe 0x61ec
0x61e7: mov byte ptr [r14+r15],0x27
0x61ec: lea rdx,[r15+0x1]
0x61f0: cmp r13,rdx
0x61f3: jbe 0x61fb
0x61f5: mov byte ptr [r14+r15+0x1],0x24
0x61fb: lea rdx,[r15+0x2]
0x61ff: cmp r13,rdx
0x6202: jbe 0x620a
0x6204: mov byte ptr [r14+r15+0x2],0x27
0x620a: add r15,0x3
0x620e: mov r8d,eax
0x6211: cmp r13,r15
0x6214: jbe 0x621b
0x6216: mov byte ptr [r14+r15],0x5c
0x621b: add r15,0x1
0x621f: add rbp,0x1
0x6223: jmp 0x60b0
0x6310: xor r10d,r10d
0x6313: nop dword ptr [rax+rax]
0x6318: cmp qword ptr [rsp+0x58],0x1
0x631e: jne 0x66c8
0x6324: mov qword ptr [rsp+0x38],r11
0x6329: mov byte ptr [rsp+0x30],r8b
0x632e: mov byte ptr [rsp+0x28],r10b
0x6333: call 0x1b90
0x6338: mov rcx,qword ptr [rax]
0x633b: movzx edx,bl
0x633e: movzx r10d,byte ptr [rsp+0x28]
0x6344: movzx r8d,byte ptr [rsp+0x30]
0x634a: mov r11,qword ptr [rsp+0x38]
0x634f: mov edi,0x1
0x6354: movzx eax,word ptr [rcx+rdx*2]
0x6358: and ax,0x4000
0x635c: setne r12b
0x6360: sete al
0x6363: and al,byte ptr [rsp+0xd]
0x6367: test al,al
0x6369: jne 0x6d01
0x636f: cmp dword ptr [rsp+0x8],0x2
0x6374: sete dl
0x6377: jmp 0x6048
0x6380: movzx ebx,byte ptr [r9]
0x6384: cmp bl,0x7e
0x6387: ja 0x6310
0x6389: lea rcx,[rip+0x3e78]
0x6390: movzx edx,bl
0x6393: movsxd rax,dword ptr [rcx+rdx*4]
0x6397: add rax,rcx
0x639a: jmp rax
0x6550: xor r10d,r10d
0x6553: jmp 0x5ff0
0x6580: cmp dword ptr [rsp+0x8],0x2
0x6585: movzx ebx,byte ptr [rsp+0xf]
0x658a: mov r12d,r8d
0x658d: mov rbp,r11
0x6590: sete dl
0x6593: mov eax,ebx
0x6595: test r15,r15
0x6598: sete cl
0x659b: and eax,edx
0x659d: and al,cl
0x659f: jne 0x7006
0x65a5: mov eax,ebx
0x65a7: xor eax,0x1
0x65aa: and dl,al
0x65ac: je 0x6f1c
0x65b2: cmp byte ptr [rsp+0x7c],0x0
0x65b7: je 0x6f1a
0x65bd: cmp byte ptr [rsp+0xe],0x0
0x65c2: jne 0x6fbd
0x65c8: test r13,r13
0x65cb: sete al
0x65ce: cmp qword ptr [rsp+0x50],0x0
0x65d4: setne dl
0x65d7: and al,dl
0x65d9: je 0x6ffc
0x65df: mov r13,qword ptr [rsp+0x50]
0x65e4: lea rbx,[rip+0x3992]
0x65eb: mov byte ptr [r14],0x27
0x65ef: mov dword ptr [rsp+0x8],0x2
0x65f7: mov r15d,0x1
0x65fd: mov qword ptr [rsp+0x18],0x1
0x6606: mov byte ptr [rsp+0xf],0x0
0x660b: mov qword ptr [rsp+0x48],rbx
0x6610: mov byte ptr [rsp+0x7c],al
0x6614: jmp 0x5ef3
0x66c8: lea rax,[rsp+0xa0]
0x66d0: cmp r11,-0x1
0x66d4: mov qword ptr [rsp+0xa0],0x0
0x66e0: mov qword ptr [rsp+0x28],rax
0x66e5: jne 0x6714
0x66e7: mov rdi,qword ptr [rsp+0x10]
0x66ec: mov byte ptr [rsp+0x40],r8b
0x66f1: mov byte ptr [rsp+0x38],r10b
0x66f6: mov qword ptr [rsp+0x30],r9
0x66fb: call 0x18d0
0x6700: movzx r8d,byte ptr [rsp+0x40]
0x6706: movzx r10d,byte ptr [rsp+0x38]
0x670c: mov r11,rax
0x670f: mov r9,qword ptr [rsp+0x30]
0x6714: lea rax,[rsp+0x9c]
0x671c: xor ecx,ecx
0x671e: mov byte ptr [rsp+0x7e],bl
0x6722: mov byte ptr [rsp+0x7d],r8b
0x6727: mov rbx,rcx
0x672a: mov qword ptr [rsp+0x88],r9
0x6732: mov qword ptr [rsp+0x38],rax
0x6737: mov byte ptr [rsp+0x7f],r10b
0x673c: mov qword ptr [rsp+0x80],r15
0x6744: mov qword ptr [rsp+0x40],r14
0x6749: mov qword ptr [rsp+0x70],r13
0x674e: mov qword ptr [rsp+0x30],r11
0x6753: mov rax,qword ptr [rsp+0x10]
0x6758: lea r14,[rbp+rbx]
0x675d: mov rdx,qword ptr [rsp+0x30]
0x6762: mov rcx,qword ptr [rsp+0x28]
0x6767: mov rdi,qword ptr [rsp+0x38]
0x676c: lea r13,[rax+r14]
0x6770: sub rdx,r14
0x6773: mov rsi,r13
0x6776: call 0x8f90
0x677b: test rax,rax
0x677e: mov r15,rax
0x6781: je 0x67d1
0x6783: cmp rax,-0x1
0x6787: je 0x6da5
0x678d: cmp rax,-0x2
0x6791: je 0x6d31
0x6797: cmp dword ptr [rsp+0x8],0x2
0x679c: sete al
0x679f: and al,byte ptr [rsp+0xf]
0x67a3: jne 0x6940
0x67a9: mov edi,dword ptr [rsp+0x9c]
0x67b0: call 0x1b70
0x67b5: mov rdi,qword ptr [rsp+0x28]
0x67ba: test eax,eax
0x67bc: mov eax,0x0
0x67c1: cmove r12d,eax
0x67c5: add rbx,r15
0x67c8: call 0x1b60
0x67cd: test eax,eax
0x67cf: je 0x6753
0x67d1: mov edx,r12d
0x67d4: mov rdi,rbx
0x67d7: movzx r8d,byte ptr [rsp+0x7d]
0x67dd: xor edx,0x1
0x67e0: movzx ebx,byte ptr [rsp+0x7e]
0x67e5: movzx r10d,byte ptr [rsp+0x7f]
0x67eb: and dl,byte ptr [rsp+0xd]
0x67ef: mov r15,qword ptr [rsp+0x80]
0x67f7: mov r14,qword ptr [rsp+0x40]
0x67fc: mov r13,qword ptr [rsp+0x70]
0x6801: mov r11,qword ptr [rsp+0x30]
0x6806: cmp rdi,0x1
0x680a: jbe 0x6e0b
0x6810: mov rcx,rdi
0x6813: xor esi,esi
0x6815: movzx r9d,byte ptr [rsp+0xf]
0x681b: add rcx,rbp
0x681e: mov rdi,qword ptr [rsp+0x10]
0x6823: jmp 0x68de
0x6830: cmp dword ptr [rsp+0x8],0x2
0x6835: sete al
0x6838: test r9b,r9b
0x683b: jne 0x6cf0
0x6841: mov esi,r8d
0x6844: xor esi,0x1
0x6847: and al,sil
0x684a: je 0x687b
0x684c: cmp r13,r15
0x684f: jbe 0x6856
0x6851: mov byte ptr [r14+r15],0x27
0x6856: lea rsi,[r15+0x1]
0x685a: cmp r13,rsi
0x685d: jbe 0x6865
0x685f: mov byte ptr [r14+r15+0x1],0x24
0x6865: lea rsi,[r15+0x2]
0x6869: cmp r13,rsi
0x686c: jbe 0x6874
0x686e: mov byte ptr [r14+r15+0x2],0x27
0x6874: add r15,0x3
0x6878: mov r8d,eax
0x687b: cmp r13,r15
0x687e: jbe 0x6885
0x6880: mov byte ptr [r14+r15],0x5c
0x6885: lea rax,[r15+0x1]
0x6889: cmp r13,rax
0x688c: jbe 0x689b
0x688e: mov eax,ebx
0x6890: shr al,0x6
0x6893: add eax,0x30
0x6896: mov byte ptr [r14+r15+0x1],al
0x689b: lea rax,[r15+0x2]
0x689f: cmp r13,rax
0x68a2: jbe 0x68b4
0x68a4: mov eax,ebx
0x68a6: shr al,0x3
0x68a9: and eax,0x7
0x68ac: add eax,0x30
0x68af: mov byte ptr [r14+r15+0x2],al
0x68b4: and ebx,0x7
0x68b7: add rbp,0x1
0x68bb: add r15,0x3
0x68bf: add ebx,0x30
0x68c2: cmp rbp,rcx
0x68c5: jae 0x60b0
0x68cb: mov esi,edx
0x68cd: cmp r13,r15
0x68d0: jbe 0x68d6
0x68d2: mov byte ptr [r14+r15],bl
0x68d6: movzx ebx,byte ptr [rdi+rbp]
0x68da: add r15,0x1
0x68de: test dl,dl
0x68e0: jne 0x6830
0x68e6: mov eax,esi
0x68e8: xor eax,0x1
0x68eb: and eax,r8d
0x68ee: test r10b,r10b
0x68f1: je 0x6901
0x68f3: cmp r13,r15
0x68f6: jbe 0x68fd
0x68f8: mov byte ptr [r14+r15],0x5c
0x68fd: add r15,0x1
0x6901: add rbp,0x1
0x6905: cmp rbp,rcx
0x6908: jae 0x608c
0x690e: test al,al
0x6910: je 0x6d0e
0x6916: cmp r13,r15
0x6919: jbe 0x6920
0x691b: mov byte ptr [r14+r15],0x27
0x6920: lea rax,[r15+0x1]
0x6924: cmp r13,rax
0x6927: jbe 0x692f
0x6929: mov byte ptr [r14+r15+0x1],0x27
0x692f: add r15,0x2
0x6933: xor r10d,r10d
0x6936: xor r8d,r8d
0x6939: jmp 0x68cd
0x6940: cmp r15,0x1
0x6944: je 0x67a9
0x694a: mov rdi,qword ptr [rsp+0x10]
0x694f: lea rcx,[rdi+r15]
0x6953: lea rdx,[rdi+r14+0x1]
0x6958: lea r8,[rcx+r14]
0x695c: jmp 0x696d
0x6960: add rdx,0x1
0x6964: cmp r8,rdx
0x6967: je 0x67a9
0x696d: movzx ecx,byte ptr [rdx]
0x6970: sub ecx,0x5b
0x6973: cmp cl,0x21
0x6976: ja 0x6960
0x6978: mov esi,0x1
0x697d: shl rsi,cl
0x6980: mov rcx,rsi
0x6983: movabsq rsi,0x20000002b
0x698d: test rcx,rsi
0x6990: je 0x6960
0x6992: mov r14,qword ptr [rsp+0x40]
0x6997: mov r13,qword ptr [rsp+0x70]
0x699c: mov rbp,qword ptr [rsp+0x30]
0x69a1: mov dword ptr [rsp+0x8],0x2
0x69a9: cmp byte ptr [rsp+0xd],0x0
0x69ae: je 0x69c0
0x69b0: test al,al
0x69b2: mov eax,0x4
0x69b7: cmove eax,dword ptr [rsp+0x8]
0x69bc: mov dword ptr [rsp+0x8],eax
0x69c0: sub rsp,0x8
0x69c4: mov rcx,rbp
0x69c7: mov rsi,r13
0x69ca: push qword ptr [rsp+0x68]
0x69ce: push qword ptr [rsp+0x78]
0x69d2: mov rdi,r14
0x69d5: push 0x0
0x69d7: mov r9d,dword ptr [rsp+0x98]
0x69df: mov r8d,dword ptr [rsp+0x28]
0x69e4: mov rdx,qword ptr [rsp+0x30]
0x69e9: and r9d,-0x3
0x69ed: call 0x5e20
0x69f2: add rsp,0x20
0x69f6: mov r15,rax
0x69f9: mov rbx,qword ptr [rsp+0xa8]
0x6a01: xor rbx,qword ptr fs:0x28
0x6a0a: mov rax,r15
0x6a0d: jne 0x7013
0x6a13: add rsp,0xb8
0x6a1a: pop rbx
0x6a1b: pop rbp
0x6a1c: pop r12
0x6a1e: pop r13
0x6a20: pop r14
0x6a22: pop r15
0x6a24: ret 
0x6a28: mov rbp,r11
0x6a2b: jmp 0x69a9
0x6a91: test r13,r13
0x6a94: jne 0x702a
0x6a9a: lea rax,[rip+0x34dc]
0x6aa1: mov qword ptr [rsp+0x50],0x0
0x6aaa: mov byte ptr [rsp+0xe],0x1
0x6aaf: mov byte ptr [rsp+0x7c],0x0
0x6ab4: xor r12d,r12d
0x6ab7: mov byte ptr [rsp+0xf],0x0
0x6abc: mov qword ptr [rsp+0x18],0x1
0x6ac5: mov qword ptr [rsp+0x48],rax
0x6aca: mov r15d,0x1
0x6ad0: mov dword ptr [rsp+0x8],0x2
0x6ad8: jmp 0x5ef3
0x6cf0: movzx ebx,byte ptr [rsp+0xf]
0x6cf5: mov rbp,r11
0x6cf8: mov byte ptr [rsp+0xd],bl
0x6cfc: jmp 0x69a9
0x6d01: movzx edx,byte ptr [rsp+0xd]
0x6d06: xor r12d,r12d
0x6d09: jmp 0x6810
0x6d0e: xor r10d,r10d
0x6d11: jmp 0x68cd
0x6d31: mov r11,qword ptr [rsp+0x30]
0x6d36: mov rsi,r14
0x6d39: mov rcx,r13
0x6d3c: mov rax,rbx
0x6d3f: mov rdi,rbx
0x6d42: movzx r8d,byte ptr [rsp+0x7d]
0x6d48: movzx ebx,byte ptr [rsp+0x7e]
0x6d4d: mov r9,qword ptr [rsp+0x88]
0x6d55: cmp rsi,r11
0x6d58: movzx r10d,byte ptr [rsp+0x7f]
0x6d5e: mov r15,qword ptr [rsp+0x80]
0x6d66: mov r14,qword ptr [rsp+0x40]
0x6d6b: mov r13,qword ptr [rsp+0x70]
0x6d70: jae 0x6d98
0x6d72: cmp byte ptr [rcx],0x0
0x6d75: jne 0x6d87
0x6d77: jmp 0x6d98
0x6d80: cmp byte ptr [r9+rax],0x0
0x6d85: je 0x6d95
0x6d87: add rax,0x1
0x6d8b: lea rdx,[rbp+rax]
0x6d90: cmp r11,rdx
0x6d93: ja 0x6d80
0x6d95: mov rdi,rax
0x6d98: movzx edx,byte ptr [rsp+0xd]
0x6d9d: xor r12d,r12d
0x6da0: jmp 0x6806
0x6da5: mov rdi,rbx
0x6da8: movzx r8d,byte ptr [rsp+0x7d]
0x6dae: movzx ebx,byte ptr [rsp+0x7e]
0x6db3: movzx r10d,byte ptr [rsp+0x7f]
0x6db9: mov r15,qword ptr [rsp+0x80]
0x6dc1: xor r12d,r12d
0x6dc4: mov r14,qword ptr [rsp+0x40]
0x6dc9: mov r13,qword ptr [rsp+0x70]
0x6dce: mov r11,qword ptr [rsp+0x30]
0x6dd3: movzx edx,byte ptr [rsp+0xd]
0x6dd8: jmp 0x6806
0x6e0b: mov eax,edx
0x6e0d: jmp 0x6367
0x6f1a: mov eax,edx
0x6f1c: mov rbx,qword ptr [rsp+0x48]
0x6f21: test rbx,rbx
0x6f24: je 0x6f52
0x6f26: test al,al
0x6f28: je 0x6f52
0x6f2a: movzx ecx,byte ptr [rbx]
0x6f2d: mov rax,rbx
0x6f30: test cl,cl
0x6f32: je 0x6f52
0x6f34: mov rdx,r15
0x6f37: sub rax,r15
0x6f3a: cmp r13,rdx
0x6f3d: jbe 0x6f43
0x6f3f: mov byte ptr [r14+rdx],cl
0x6f43: add rdx,0x1
0x6f47: movzx ecx,byte ptr [rax+rdx]
0x6f4b: test cl,cl
0x6f4d: jne 0x6f3a
0x6f4f: mov r15,rdx
0x6f52: cmp r13,r15
0x6f55: jbe 0x69f9
0x6f5b: mov byte ptr [r14+r15],0x0
0x6f60: jmp 0x69f9
0x6f65: cmp dword ptr [rsp+0x8],0x2
0x6f6a: movzx ebx,byte ptr [rsp+0xf]
0x6f6f: mov rbp,r11
0x6f72: sete al
0x6f75: mov byte ptr [rsp+0xd],bl
0x6f79: jmp 0x69a9
0x6fbd: sub rsp,0x8
0x6fc1: mov r8d,0x5
0x6fc7: mov rcx,r11
0x6fca: push qword ptr [rsp+0x68]
0x6fce: push qword ptr [rsp+0x78]
0x6fd2: mov rdi,r14
0x6fd5: push qword ptr [rsp+0x38]
0x6fd9: mov r9d,dword ptr [rsp+0x98]
0x6fe1: mov rdx,qword ptr [rsp+0x30]
0x6fe6: mov rsi,qword ptr [rsp+0x70]
0x6feb: call 0x5e20
0x6ff0: add rsp,0x20
0x6ff4: mov r15,rax
0x6ff7: jmp 0x69f9
0x6ffc: movzx eax,byte ptr [rsp+0x7c]
0x7001: jmp 0x6f1c
0x7006: mov dword ptr [rsp+0x8],0x2
0x700e: jmp 0x69a9
0x7013: call 0x18e0
0x7018: mov byte ptr [rsp+0xd],0x0
0x701d: jmp 0x6a91
0x702a: mov byte ptr [rsp+0xe],0x1
0x702f: xor eax,eax
0x7031: xor r12d,r12d
0x7034: mov qword ptr [rsp+0x50],0x0
0x703d: jmp 0x65e4
0x7054: nop 
0x7056: nop word ptr cs:[rax+rax]
0x714c: add rsp,0x20
0x7150: mov r11,qword ptr [rsp+0x10]
0x7155: cmp r11,rax
0x7158: ja 0x71c1
0x715a: lea rsi,[rax+0x1]
0x715e: lea rax,[rip+0x205fdb]
0x7165: cmp r12,rax
0x7168: mov qword ptr [rbx],rsi
0x716b: je 0x717f
0x716d: mov rdi,r12
0x7170: mov qword ptr [rsp+0x10],rsi
0x7175: call 0x17f0
0x717a: mov rsi,qword ptr [rsp+0x10]
0x717f: mov rdi,rsi
0x7182: mov qword ptr [rsp+0x10],rsi
0x7187: call 0x7ff0
0x718c: sub rsp,0x8
0x7190: mov qword ptr [rbx+0x8],rax
0x7194: mov r8d,dword ptr [rbp]
0x7198: push qword ptr [rbp+0x30]
0x719b: push qword ptr [rbp+0x28]
0x719e: mov rcx,r14
0x71a1: push r15
0x71a3: mov r9d,dword ptr [rsp+0x3c]
0x71a8: mov rdi,rax
0x71ab: mov rdx,qword ptr [rsp+0x28]
0x71b0: mov rsi,qword ptr [rsp+0x30]
0x71b5: mov r12,rax
0x71b8: call 0x5e20
0x71bd: add rsp,0x20
0x71c1: mov eax,dword ptr [rsp+0x18]
0x71c5: mov dword ptr [r13],eax
0x71c9: add rsp,0x28
0x71cd: mov rax,r12
0x71d0: pop rbx
0x71d1: pop rbp
0x71d2: pop r12
0x71d4: pop r13
0x71d6: pop r14
0x71d8: pop r15
0x71da: ret 
0x7201: call 0x1800
0x7206: call 0x8240
0x720b: nop dword ptr [rax+rax]
0x7210: push r12
0x7212: push rbp
0x7213: push rbx
0x7214: mov rbx,rdi
0x7217: call 0x1810
0x721c: mov r12d,dword ptr [rax]
0x721f: mov rbp,rax
0x7222: lea rax,[rip+0x206017]
0x7229: test rbx,rbx
0x722c: mov esi,0x38
0x7231: cmove rbx,rax
0x7235: mov rdi,rbx
0x7238: call 0x81f0
0x723d: mov dword ptr [rbp],r12d
0x7241: pop rbx
0x7242: pop rbp
0x7243: pop r12
0x7245: ret 
0x7250: lea rax,[rip+0x205fe9]
0x7257: test rdi,rdi
0x725a: cmove rdi,rax
0x725e: mov eax,dword ptr [rdi]
0x7260: ret 
0x7270: lea rax,[rip+0x205fc9]
0x7277: test rdi,rdi
0x727a: cmove rdi,rax
0x727e: mov dword ptr [rdi],esi
0x7280: ret 
0x7290: lea rax,[rip+0x205fa9]
0x7297: test rdi,rdi
0x729a: mov ecx,esi
0x729c: cmove rdi,rax
0x72a0: mov eax,esi
0x72a2: and ecx,0x1f
0x72a5: shr al,0x5
0x72a8: movzx eax,al
0x72ab: lea rdi,[rdi+rax*4+0x8]
0x72b0: mov esi,dword ptr [rdi]
0x72b2: mov eax,esi
0x72b4: shr eax,cl
0x72b6: xor edx,eax
0x72b8: and eax,0x1
0x72bb: and edx,0x1
0x72be: shl edx,cl
0x72c0: xor edx,esi
0x72c2: mov dword ptr [rdi],edx
0x72c4: ret 
0x72d0: lea rax,[rip+0x205f69]
0x72d7: test rdi,rdi
0x72da: cmove rdi,rax
0x72de: mov eax,dword ptr [rdi+0x4]
0x72e1: mov dword ptr [rdi+0x4],esi
0x72e4: ret 
0x72f0: lea rax,[rip+0x205f49]
0x72f7: test rdi,rdi
0x72fa: cmove rdi,rax
0x72fe: test rsi,rsi
0x7301: mov dword ptr [rdi],0xa
0x7307: je 0x7317
0x7309: test rdx,rdx
0x730c: je 0x7317
0x730e: mov qword ptr [rdi+0x28],rsi
0x7312: mov qword ptr [rdi+0x30],rdx
0x7316: ret 
0x7317: sub rsp,0x8
0x731b: call 0x1800
0x7320: push r15
0x7322: push r14
0x7324: lea rax,[rip+0x205f15]
0x732b: push r13
0x732d: push r12
0x732f: mov r13,rdi
0x7332: push rbp
0x7333: push rbx
0x7334: mov rbx,r8
0x7337: mov r14,rsi
0x733a: mov r15,rdx
0x733d: sub rsp,0x18
0x7341: test r8,r8
0x7344: cmove rbx,rax
0x7348: mov qword ptr [rsp+0x8],rcx
0x734d: call 0x1810
0x7352: mov r12d,dword ptr [rax]
0x7355: mov rbp,rax
0x7358: lea rax,[rbx+0x8]
0x735c: sub rsp,0x8
0x7360: mov r9d,dword ptr [rbx+0x4]
0x7364: push qword ptr [rbx+0x30]
0x7367: mov r8d,dword ptr [rbx]
0x736a: push qword ptr [rbx+0x28]
0x736d: mov rdx,r15
0x7370: push rax
0x7371: mov rcx,qword ptr [rsp+0x28]
0x7376: mov rsi,r14
0x7379: mov rdi,r13
0x737c: call 0x5e20
0x7381: mov dword ptr [rbp],r12d
0x7385: add rsp,0x38
0x7389: pop rbx
0x738a: pop rbp
0x738b: pop r12
0x738d: pop r13
0x738f: pop r14
0x7391: pop r15
0x7393: ret 
0x73a0: push r15
0x73a2: push r14
0x73a4: lea rax,[rip+0x205e95]
0x73ab: push r13
0x73ad: push r12
0x73af: mov r12,rdx
0x73b2: push rbp
0x73b3: push rbx
0x73b4: mov rbx,rcx
0x73b7: mov r14,rdi
0x73ba: mov r15,rsi
0x73bd: sub rsp,0x38
0x73c1: test rcx,rcx
0x73c4: cmove rbx,rax
0x73c8: xor ebp,ebp
0x73ca: call 0x1810
0x73cf: test r12,r12
0x73d2: mov r13,rax
0x73d5: mov eax,dword ptr [rax]
0x73d7: sete bpl
0x73db: or ebp,dword ptr [rbx+0x4]
0x73de: lea r10,[rbx+0x8]
0x73e2: sub rsp,0x8
0x73e6: mov r8d,dword ptr [rbx]
0x73e9: mov rcx,r15
0x73ec: mov dword ptr [rsp+0x14],eax
0x73f0: push qword ptr [rbx+0x30]
0x73f3: mov rdx,r14
0x73f6: push qword ptr [rbx+0x28]
0x73f9: push r10
0x73fb: xor esi,esi
0x73fd: mov r9d,ebp
0x7400: xor edi,edi
0x7402: mov qword ptr [rsp+0x40],r10
0x7407: call 0x5e20
0x740c: lea rsi,[rax+0x1]
0x7410: mov qword ptr [rsp+0x48],rax
0x7415: add rsp,0x20
0x7419: mov rdi,rsi
0x741c: mov qword ptr [rsp+0x18],rsi
0x7421: call 0x7ff0
0x7426: mov qword ptr [rsp+0x10],rax
0x742b: sub rsp,0x8
0x742f: push qword ptr [rbx+0x30]
0x7432: push qword ptr [rbx+0x28]
0x7435: mov r10,qword ptr [rsp+0x38]
0x743a: mov r9d,ebp
0x743d: mov r8d,dword ptr [rbx]
0x7440: mov rcx,r15
0x7443: mov rdx,r14
0x7446: mov rdi,rax
0x7449: push r10
0x744b: mov rsi,qword ptr [rsp+0x38]
0x7450: call 0x5e20
0x7455: mov eax,dword ptr [rsp+0x2c]
0x7459: add rsp,0x20
0x745d: test r12,r12
0x7460: mov dword ptr [r13],eax
0x7464: je 0x746f
0x7466: mov r11,qword ptr [rsp+0x28]
0x746b: mov qword ptr [r12],r11
0x746f: mov rax,qword ptr [rsp+0x10]
0x7474: add rsp,0x38
0x7478: pop rbx
0x7479: pop rbp
0x747a: pop r12
0x747c: pop r13
0x747e: pop r14
0x7480: pop r15
0x7482: ret 
0x7490: mov rcx,rdx
0x7493: xor edx,edx
0x7495: jmp 0x73a0
0x74a0: mov eax,dword ptr [rip+0x205bd2]
0x74a6: push r12
0x74a8: mov r12,qword ptr [rip+0x205bd1]
0x74af: push rbp
0x74b0: push rbx
0x74b1: cmp eax,0x1
0x74b4: jle 0x74e1
0x74b6: sub eax,0x2
0x74b9: lea rbx,[r12+0x18]
0x74be: shl rax,0x4
0x74c2: lea rbp,[r12+rax+0x28]
0x74c7: nop word ptr [rax+rax]
0x74d0: mov rdi,qword ptr [rbx]
0x74d3: add rbx,0x10
0x74d7: call 0x17f0
0x74dc: cmp rbx,rbp
0x74df: jne 0x74d0
0x74e1: mov rdi,qword ptr [r12+0x8]
0x74e6: lea rbx,[rip+0x205c53]
0x74ed: cmp rdi,rbx
0x74f0: je 0x7509
0x74f2: call 0x17f0
0x74f7: mov qword ptr [rip+0x205b8e],0x100
0x7502: mov qword ptr [rip+0x205b8f],rbx
0x7509: lea rbx,[rip+0x205b80]
0x7510: cmp r12,rbx
0x7513: je 0x7524
0x7515: mov rdi,r12
0x7518: call 0x17f0
0x751d: mov qword ptr [rip+0x205b5c],rbx
0x7524: pop rbx
0x7525: mov dword ptr [rip+0x205b49],0x1
0x752f: pop rbp
0x7530: pop r12
0x7532: ret 
0x7540: lea rcx,[rip+0x205cf9]
0x7547: mov rdx,-0x1
0x754e: jmp 0x7060
0x7560: lea rcx,[rip+0x205cd9]
0x7567: jmp 0x7060
0x7570: lea rcx,[rip+0x205cc9]
0x7577: mov rsi,rdi
0x757a: mov rdx,-0x1
0x7581: xor edi,edi
0x7583: jmp 0x7060
0x7590: lea rcx,[rip+0x205ca9]
0x7597: mov rdx,rsi
0x759a: mov rsi,rdi
0x759d: xor edi,edi
0x759f: jmp 0x7060
0x75b0: sub rsp,0x48
0x75b4: mov rax,rdx
0x75b7: mov rdx,qword ptr fs:0x28
0x75c0: mov qword ptr [rsp+0x38],rdx
0x75c5: xor edx,edx
0x75c7: cmp esi,0xa
0x75ca: je 0x7634
0x75cc: mov dword ptr [rsp],esi
0x75cf: mov rcx,rsp
0x75d2: mov rdx,-0x1
0x75d9: mov rsi,rax
0x75dc: mov qword ptr [rsp+0x4],0x0
0x75e5: mov qword ptr [rsp+0xc],0x0
0x75ee: mov qword ptr [rsp+0x14],0x0
0x75f7: mov qword ptr [rsp+0x1c],0x0
0x7600: mov qword ptr [rsp+0x24],0x0
0x7609: mov qword ptr [rsp+0x2c],0x0
0x7612: mov dword ptr [rsp+0x34],0x0
0x761a: call 0x7060
0x761f: mov rcx,qword ptr [rsp+0x38]
0x7624: xor rcx,qword ptr fs:0x28
0x762d: jne 0x7639
0x762f: add rsp,0x48
0x7633: ret 
0x7634: call 0x1800
0x7639: call 0x18e0
0x763e: nop 
0x7640: sub rsp,0x48
0x7644: mov rax,rdx
0x7647: mov rdx,rcx
0x764a: mov rcx,qword ptr fs:0x28
0x7653: mov qword ptr [rsp+0x38],rcx
0x7658: xor ecx,ecx
0x765a: cmp esi,0xa
0x765d: je 0x76c0
0x765f: mov dword ptr [rsp],esi
0x7662: mov rcx,rsp
0x7665: mov rsi,rax
0x7668: mov qword ptr [rsp+0x4],0x0
0x7671: mov qword ptr [rsp+0xc],0x0
0x767a: mov qword ptr [rsp+0x14],0x0
0x7683: mov qword ptr [rsp+0x1c],0x0
0x768c: mov qword ptr [rsp+0x24],0x0
0x7695: mov qword ptr [rsp+0x2c],0x0
0x769e: mov dword ptr [rsp+0x34],0x0
0x76a6: call 0x7060
0x76ab: mov rdx,qword ptr [rsp+0x38]
0x76b0: xor rdx,qword ptr fs:0x28
0x76b9: jne 0x76c5
0x76bb: add rsp,0x48
0x76bf: ret 
0x76c0: call 0x1800
0x76c5: call 0x18e0
0x76ca: nop word ptr [rax+rax]
0x76d0: mov rdx,rsi
0x76d3: mov esi,edi
0x76d5: xor edi,edi
0x76d7: jmp 0x75b0
0x76e0: mov rcx,rdx
0x76e3: mov rdx,rsi
0x76e6: mov esi,edi
0x76e8: xor edi,edi
0x76ea: jmp 0x7640
0x76f0: sub rsp,0x48
0x76f4: mov ecx,edx
0x76f6: mov rax,qword ptr fs:0x28
0x76ff: mov qword ptr [rsp+0x38],rax
0x7704: xor eax,eax
0x7706: mov rax,qword ptr [rip+0x205b63]
0x770d: mov r8,rsp
0x7710: and ecx,0x1f
0x7713: movdqa xmm0,[rip+0x205b25]
0x771b: mov qword ptr [rsp+0x30],rax
0x7720: mov eax,edx
0x7722: movaps [rsp],xmm0
0x7726: shr al,0x5
0x7729: movzx eax,al
0x772c: lea r9,[r8+rax*4+0x8]
0x7731: movdqa xmm0,[rip+0x205b17]
0x7739: movaps [rsp+0x10],xmm0
0x773e: movdqa xmm0,[rip+0x205b1a]
0x7746: movaps [rsp+0x20],xmm0
0x774b: mov edx,dword ptr [r9]
0x774e: mov eax,edx
0x7750: shr eax,cl
0x7752: not eax
0x7754: and eax,0x1
0x7757: shl eax,cl
0x7759: mov rcx,r8
0x775c: xor eax,edx
0x775e: mov rdx,rsi
0x7761: mov rsi,rdi
0x7764: mov dword ptr [r9],eax
0x7767: xor edi,edi
0x7769: call 0x7060
0x776e: mov rsi,qword ptr [rsp+0x38]
0x7773: xor rsi,qword ptr fs:0x28
0x777c: jne 0x7783
0x777e: add rsp,0x48
0x7782: ret 
0x7783: call 0x18e0
0x7788: nop dword ptr [rax+rax]
0x7790: movsx edx,sil
0x7794: mov rsi,-0x1
0x779b: jmp 0x76f0
0x77a0: mov edx,0x3a
0x77a5: mov rsi,-0x1
0x77ac: jmp 0x76f0
0x77c0: mov edx,0x3a
0x77c5: jmp 0x76f0
0x783f: mov rcx,qword ptr [rsp+0x38]
0x7844: xor rcx,qword ptr fs:0x28
0x784d: jne 0x7859
0x784f: add rsp,0x48
0x7853: ret 
0x7854: call 0x1800
0x7859: call 0x18e0
0x785e: nop 
0x7860: sub rsp,0x48
0x7864: mov r9,rcx
0x7867: mov rcx,qword ptr [rip+0x205a02]
0x786e: movdqa xmm0,[rip+0x2059ca]
0x7876: mov rax,qword ptr fs:0x28
0x787f: mov qword ptr [rsp+0x38],rax
0x7884: xor eax,eax
0x7886: movaps [rsp],xmm0
0x788a: test rsi,rsi
0x788d: mov qword ptr [rsp+0x30],rcx
0x7892: mov dword ptr [rsp],0xa
0x7899: movdqa xmm0,[rip+0x2059af]
0x78a1: movaps [rsp+0x10],xmm0
0x78a6: movdqa xmm0,[rip+0x2059b2]
0x78ae: movaps [rsp+0x20],xmm0
0x78b3: je 0x78e7
0x78b5: test rdx,rdx
0x78b8: je 0x78e7
0x78ba: mov qword ptr [rsp+0x28],rsi
0x78bf: mov qword ptr [rsp+0x30],rdx
0x78c4: mov rcx,rsp
0x78c7: mov rdx,r8
0x78ca: mov rsi,r9
0x78cd: call 0x7060
0x78d2: mov rdi,qword ptr [rsp+0x38]
0x78d7: xor rdi,qword ptr fs:0x28
0x78e0: jne 0x78ec
0x78e2: add rsp,0x48
0x78e6: ret 
0x78e7: call 0x1800
0x78ec: call 0x18e0
0x78f1: nop dword ptr [rax+rax]
0x78f6: nop word ptr cs:[rax+rax]
0x7900: mov r8,-0x1
0x7907: jmp 0x7860
0x7910: mov rcx,rdx
0x7913: mov r8,-0x1
0x791a: mov rdx,rsi
0x791d: mov rsi,rdi
0x7920: xor edi,edi
0x7922: jmp 0x7860
0x7930: mov r8,rcx
0x7933: mov rcx,rdx
0x7936: mov rdx,rsi
0x7939: mov rsi,rdi
0x793c: xor edi,edi
0x793e: jmp 0x7860
0x7950: lea rcx,[rip+0x2056e9]
0x7957: jmp 0x7060
0x7960: lea rcx,[rip+0x2056d9]
0x7967: mov rdx,rsi
0x796a: mov rsi,rdi
0x796d: xor edi,edi
0x796f: jmp 0x7060
0x7980: lea rcx,[rip+0x2056b9]
0x7987: mov rdx,-0x1
0x798e: jmp 0x7060
0x7b08: mov r8,rcx
0x7b0b: mov rcx,rdx
0x7b0e: lea rdx,[rip+0x293f]
0x7b15: mov esi,0x1
0x7b1a: xor eax,eax
0x7b1c: call 0x1b50
0x7b21: jmp 0x7a0c
0x7d1d: push r12
0x7d1f: push r15
0x7d21: push r14
0x7d23: mov r8,qword ptr [rsp+0x20]
0x7d28: mov rcx,rbx
0x7d2b: mov rdx,rax
0x7d2e: mov rdi,rbp
0x7d31: mov esi,0x1
0x7d36: xor eax,eax
0x7d38: call 0x1b50
0x7d3d: add rsp,0x20
0x7d41: add rsp,0x28
0x7d45: pop rbx
0x7d46: pop rbp
0x7d47: pop r12
0x7d49: pop r13
0x7d4b: pop r14
0x7d4d: pop r15
0x7d4f: ret 
0x7d89: push r12
0x7d8b: push r15
0x7d8d: push r14
0x7d8f: mov r9,qword ptr [rsp+0x28]
0x7d94: jmp 0x7d23
0x7df0: xor r9d,r9d
0x7df3: cmp qword ptr [r8],0x0
0x7df7: je 0x7e0b
0x7df9: nop dword ptr [rax]
0x7e00: add r9,0x1
0x7e04: cmp qword ptr [r8+r9*8],0x0
0x7e09: jne 0x7e00
0x7e0b: jmp 0x79d0
0x7e10: sub rsp,0x68
0x7e14: mov r10,r8
0x7e17: xor r9d,r9d
0x7e1a: mov rax,qword ptr fs:0x28
0x7e23: mov qword ptr [rsp+0x58],rax
0x7e28: xor eax,eax
0x7e2a: mov r8,rsp
0x7e2d: nop dword ptr [rax]
0x7e30: mov eax,dword ptr [r10]
0x7e33: cmp eax,0x2f
0x7e36: ja 0x7e7a
0x7e38: mov r11d,eax
0x7e3b: add r11,qword ptr [r10+0x10]
0x7e3f: add eax,0x8
0x7e42: mov dword ptr [r10],eax
0x7e45: mov rax,qword ptr [r11]
0x7e48: test rax,rax
0x7e4b: mov qword ptr [r8+r9*8],rax
0x7e4f: je 0x7e5b
0x7e51: add r9,0x1
0x7e55: cmp r9,0xa
0x7e59: jne 0x7e30
0x7e5b: call 0x79d0
0x7e60: mov rax,qword ptr [rsp+0x58]
0x7e65: xor rax,qword ptr fs:0x28
0x7e6e: jne 0x7e75
0x7e70: add rsp,0x68
0x7e74: ret 
0x7e75: call 0x18e0
0x7e7a: mov r11,qword ptr [r10+0x8]
0x7e7e: lea rax,[r11+0x8]
0x7e82: mov qword ptr [r10+0x8],rax
0x7e86: jmp 0x7e45
0x7f50: call 0x18e0
0x7f5c: mov rax,rbx
0x7f5f: add rbx,0x8
0x7f63: jmp 0x7f16
0x7f70: push rbx
0x7f71: lea rsi,[rip+0x252a]
0x7f78: mov edx,0x5
0x7f7d: xor edi,edi
0x7f7f: call 0x18b0
0x7f84: lea rdx,[rip+0x252c]
0x7f8b: mov rsi,rax
0x7f8e: mov edi,0x1
0x7f93: xor eax,eax
0x7f95: call 0x1ab0
0x7f9a: lea rsi,[rip+0x252c]
0x7fa1: mov edx,0x5
0x7fa6: xor edi,edi
0x7fa8: call 0x18b0
0x7fad: lea rcx,[rip+0x1a4c]
0x7fb4: lea rdx,[rip+0x12bb]
0x7fbb: mov rsi,rax
0x7fbe: mov edi,0x1
0x7fc3: xor eax,eax
0x7fc5: call 0x1ab0
0x7fca: mov rbx,qword ptr [rip+0x2050d7]
0x7fd1: lea rsi,[rip+0x2728]
0x7fd8: xor edi,edi
0x7fda: mov edx,0x5
0x7fdf: call 0x18b0
0x7fe4: mov rsi,rbx
0x7fe7: mov rdi,rax
0x7fea: pop rbx
0x7feb: jmp 0x19b0
0x7ff0: push rbx
0x7ff1: mov rbx,rdi
0x7ff4: call 0x1a30
0x7ff9: test rax,rax
0x7ffc: jne 0x8003
0x7ffe: test rbx,rbx
0x8001: jne 0x8005
0x8003: pop rbx
0x8004: ret 
0x8005: call 0x8240
0x800a: nop word ptr [rax+rax]
0x8010: mov rax,rdi
0x8013: mul rsi
0x8016: mov rdi,rax
0x8019: seto al
0x801c: test rdi,rdi
0x801f: js 0x802b
0x8021: movzx eax,al
0x8024: test rax,rax
0x8027: jne 0x802b
0x8029: jmp 0x7ff0
0x802b: sub rsp,0x8
0x802f: call 0x8240
0x8034: nop 
0x8036: nop word ptr cs:[rax+rax]
0x8040: jmp 0x7ff0
0x8059: test rdi,rdi
0x805c: jne 0x8078
0x8078: call 0x17f0
0x807d: xor eax,eax
0x807f: pop rbx
0x8080: ret 
0x8086: nop word ptr cs:[rax+rax]
0x8090: mov rax,rsi
0x8093: mul rdx
0x8096: mov rsi,rax
0x8099: seto al
0x809c: test rsi,rsi
0x809f: js 0x80ab
0x80a1: movzx eax,al
0x80a4: test rax,rax
0x80a7: jne 0x80ab
0x80a9: jmp 0x8050
0x80ab: sub rsp,0x8
0x80af: call 0x8240
0x80b4: nop 
0x80b6: nop word ptr cs:[rax+rax]
0x80c0: test rdi,rdi
0x80c3: mov r9,rdx
0x80c6: mov rcx,qword ptr [rsi]
0x80c9: je 0x8100
0x80cb: xor edx,edx
0x80cd: movabsq rax,0x5555555555555554
0x80d7: div r9
0x80da: cmp rax,rcx
0x80dd: jbe 0x811b
0x80df: mov rax,rcx
0x80e2: shr rax, 1
0x80e5: lea rcx,[rax+rcx+0x1]
0x80ea: mov qword ptr [rsi],rcx
0x80ed: imul rcx,r9
0x80f1: mov rsi,rcx
0x80f4: jmp 0x8050
0x8100: test rcx,rcx
0x8103: je 0x8128
0x8105: mov rax,rcx
0x8108: mul r9
0x810b: seto dl
0x810e: test rax,rax
0x8111: movzx edx,dl
0x8114: js 0x811b
0x8116: test rdx,rdx
0x8119: je 0x80ea
0x811b: sub rsp,0x8
0x811f: call 0x8240
0x8124: nop dword ptr [rax]
0x8128: xor edx,edx
0x812a: mov eax,0x80
0x812f: xor r8d,r8d
0x8132: div r9
0x8135: test rax,rax
0x8138: sete r8b
0x813c: lea rcx,[r8+rax]
0x8140: jmp 0x8105
0x8150: test rdi,rdi
0x8153: mov rax,qword ptr [rsi]
0x8156: je 0x8180
0x8158: movabsq rdx,0x5555555555555553
0x8162: cmp rax,rdx
0x8165: ja 0x8191
0x8167: mov rdx,rax
0x816a: shr rdx, 1
0x816d: lea rax,[rdx+rax+0x1]
0x8172: mov qword ptr [rsi],rax
0x8175: mov rsi,rax
0x8178: jmp 0x8050
0x8180: test rax,rax
0x8183: mov edx,0x80
0x8188: cmove rax,rdx
0x818c: test rax,rax
0x818f: jns 0x8172
0x8191: sub rsp,0x8
0x8195: call 0x8240
0x819a: nop word ptr [rax+rax]
0x81a0: push rbx
0x81a1: mov rbx,rdi
0x81a4: call 0x7ff0
0x81a9: mov rdx,rbx
0x81ac: xor esi,esi
0x81ae: mov rdi,rax
0x81b1: pop rbx
0x81b2: jmp 0x1970
0x81c0: mov rax,rdi
0x81c3: sub rsp,0x8
0x81c7: mul rsi
0x81ca: seto dl
0x81cd: test rax,rax
0x81d0: js 0x81e9
0x81d2: movzx edx,dl
0x81d5: test rdx,rdx
0x81d8: jne 0x81e9
0x81da: call 0x19c0
0x81df: test rax,rax
0x81e2: je 0x81e9
0x81e4: add rsp,0x8
0x81e8: ret 
0x81e9: call 0x8240
0x81ee: nop 
0x81f0: push rbp
0x81f1: push rbx
0x81f2: mov rbp,rdi
0x81f5: mov rdi,rsi
0x81f8: mov rbx,rsi
0x81fb: sub rsp,0x8
0x81ff: call 0x7ff0
0x8204: add rsp,0x8
0x8208: mov rdx,rbx
0x820b: mov rsi,rbp
0x820e: pop rbx
0x820f: pop rbp
0x8210: mov rdi,rax
0x8213: jmp 0x1a10
0x8220: push rbx
0x8221: mov rbx,rdi
0x8224: call 0x18d0
0x8229: mov rdi,rbx
0x822c: lea rsi,[rax+0x1]
0x8230: pop rbx
0x8231: jmp 0x81f0
0x8270: call 0x1800
0x8275: nop word ptr cs:[rax+rax]
0x827f: nop 
0x82f2: mov esi,dword ptr [r14]
0x82f5: mov r8,rax
0x82f8: mov eax,0x0
0x82fd: lea rdx,[rip+0x1c17]
0x8304: mov rcx,r13
0x8307: cmp esi,0x16
0x830a: cmove esi,eax
0x830d: test ebx,ebx
0x830f: mov eax,0x1
0x8314: cmove ebx,eax
0x8317: xor eax,eax
0x8319: mov edi,ebx
0x831b: call 0x1ad0
0x8320: mov rbp,qword ptr [rsp]
0x837b: call 0x18e0
0x8454: cmp eax,0x22
0x8457: mov ebp,0x1
0x845c: jne 0x8488
0x8463: movzx r12d,byte ptr [rcx]
0x8467: test r12b,r12b
0x846a: jne 0x84e7
0x84c0: movzx r12d,byte ptr [rbp]
0x84c5: test r12b,r12b
0x84c8: je 0x8488
0x84ca: movsx esi,r12b
0x84ce: mov rdi,r13
0x84d1: xor ebp,ebp
0x84d3: call 0x1910
0x84d8: test rax,rax
0x84db: mov ebx,0x1
0x84e0: mov rcx,qword ptr [rsp+0x8]
0x84e5: je 0x8488
0x84e7: movsx esi,r12b
0x84eb: mov rdi,r13
0x84ee: mov qword ptr [rsp+0x8],rcx
0x84f3: call 0x1910
0x84f8: test rax,rax
0x84fb: mov rcx,qword ptr [rsp+0x8]
0x8500: je 0x85cc
0x8506: lea eax,[r12-0x45]
0x850b: cmp al,0x2f
0x850d: ja 0x8560
0x850f: movabsq rdx,0x814400308945
0x8519: btq rdx,rax
0x851d: jae 0x8560
0x851f: mov esi,0x30
0x8524: mov rdi,r13
0x8527: mov qword ptr [rsp+0x8],rcx
0x852c: call 0x1910
0x8531: test rax,rax
0x8534: mov rcx,qword ptr [rsp+0x8]
0x8539: je 0x8560
0x853b: movzx eax,byte ptr [rcx+0x1]
0x853f: cmp al,0x44
0x8541: je 0x854f
0x8543: cmp al,0x69
0x8545: je 0x8718
0x854b: cmp al,0x42
0x854d: jne 0x8560
0x854f: mov edi,0x2
0x8554: mov esi,0x3e8
0x8559: jmp 0x856a
0x8560: mov edi,0x1
0x8565: mov esi,0x400
0x856a: sub r12d,0x42
0x856e: cmp r12b,0x35
0x8572: ja 0x85cc
0x8574: lea rdx,[rip+0x228d]
0x857b: movzx r12d,r12b
0x857f: movsxd rax,dword ptr [rdx+r12*4]
0x8583: add rax,rdx
0x8586: jmp rax
0x85b0: movsxd rdi,edi
0x85b3: mov eax,ebp
0x85b5: add rcx,rdi
0x85b8: or eax,0x2
0x85bb: mov qword ptr [r15],rcx
0x85be: cmp byte ptr [rcx],0x0
0x85c1: mov qword ptr [r14],rbx
0x85c4: cmovne ebp,eax
0x85c7: jmp 0x848d
0x85cc: mov qword ptr [r14],rbx
0x85cf: or ebp,0x2
0x85d2: jmp 0x848d
0x8625: or ebp,r9d
0x8628: jmp 0x85b0
0x86bc: mov rax,rbx
0x86bf: mul rsi
0x86c2: mov rbx,rax
0x86c5: jo 0x8754
0x86cb: sub r8d,0x1
0x86cf: jne 0x86bc
0x86d1: jmp 0x8625
0x8718: xor edi,edi
0x871a: cmp byte ptr [rcx+0x2],0x42
0x871e: mov esi,0x400
0x8723: sete dil
0x8727: lea edi,[rdi+rdi+0x1]
0x872b: jmp 0x856a
0x8730: call 0x18e0
0x8735: lea rcx,[rip+0x21a4]
0x873c: lea rsi,[rip+0x207d]
0x8743: lea rdi,[rip+0x2096]
0x874a: mov edx,0x54
0x874f: call 0x1950
0x8754: mov r9d,0x1
0x875a: or rbx,-0x1
0x875e: jmp 0x86cb
0x8876: cmp eax,0x22
0x8879: mov ebp,0x1
0x887e: jne 0x88a8
0x88a2: nop word ptr [rax+rax]
0x89d0: movsxd rdi,edi
0x89d3: mov eax,ebp
0x89d5: add rcx,rdi
0x89d8: or eax,0x2
0x89db: mov qword ptr [r15],rcx
0x89de: cmp byte ptr [rcx],0x0
0x89e1: mov qword ptr [r14],rbx
0x89e4: cmovne ebp,eax
0x89e7: jmp 0x88ad
0x8a45: or ebp,r9d
0x8a48: jmp 0x89d0
0x8adc: mov rax,rbx
0x8adf: mul rsi
0x8ae2: mov rbx,rax
0x8ae5: jo 0x8b74
0x8aeb: sub r8d,0x1
0x8aef: jne 0x8adc
0x8af1: jmp 0x8a45
0x8b50: call 0x18e0
0x8b55: lea rcx,[rip+0x1e6c]
0x8b5c: lea rsi,[rip+0x1c5d]
0x8b63: lea rdi,[rip+0x1c76]
0x8b6a: mov edx,0x54
0x8b6f: call 0x1950
0x8b74: mov r9d,0x1
0x8b7a: or rbx,-0x1
0x8b7e: jmp 0x8aeb
0x8cc1: cmp esi,0x406
0x8cc7: jne 0x8d10
0x8cc9: mov rax,qword ptr [rsp+0x10]
0x8cce: cmp dword ptr [rip+0x2045a3],0x0
0x8cd5: mov dword ptr [rsp],0x18
0x8cdc: mov r12d,dword ptr [rax+0x10]
0x8ce0: mov edx,r12d
0x8ce3: js 0x8e13
0x8ce9: xor eax,eax
0x8ceb: mov esi,0x406
0x8cf0: call 0x1870
0x8cf5: test eax,eax
0x8cf7: mov ebx,eax
0x8cf9: js 0x8e88
0x8cff: mov dword ptr [rip+0x20456f],0x1
0x8d09: jmp 0x8d50
0x8d10: cmp esi,0xb
0x8d13: je 0x8d40
0x8d15: jg 0x8d70
0x8d17: cmp esi,0x4
0x8d1a: je 0x8df0
0x8d20: jg 0x8de0
0x8d26: cmp esi,0x2
0x8d29: je 0x8df0
0x8d2f: jg 0x8d40
0x8d31: cmp esi,0x1
0x8d34: jne 0x8d98
0x8d36: nop word ptr cs:[rax+rax]
0x8d40: mov edi,ebp
0x8d42: xor eax,eax
0x8d44: call 0x1870
0x8d49: mov ebx,eax
0x8d4b: nop dword ptr [rax+rax]
0x8d70: cmp esi,0x407
0x8d76: jg 0x8dc0
0x8d78: cmp esi,0x406
0x8d7e: jge 0x8df0
0x8d80: cmp esi,0x401
0x8d86: je 0x8d40
0x8d88: cmp esi,0x402
0x8d8e: je 0x8df0
0x8d90: cmp esi,0x400
0x8d96: je 0x8df0
0x8d98: mov eax,dword ptr [rsp]
0x8d9b: cmp eax,0x2f
0x8d9e: ja 0x8eda
0x8da4: add rax,qword ptr [rsp+0x10]
0x8da9: mov rdx,qword ptr [rax]
0x8dac: mov edi,ebp
0x8dae: xor eax,eax
0x8db0: call 0x1870
0x8db5: mov ebx,eax
0x8db7: jmp 0x8d50
0x8dc0: cmp esi,0x409
0x8dc6: je 0x8df0
0x8dc8: jl 0x8d40
0x8dce: cmp esi,0x40a
0x8dd4: jne 0x8d98
0x8dd6: jmp 0x8d40
0x8de0: cmp esi,0x9
0x8de3: je 0x8d40
0x8de9: jg 0x8df0
0x8deb: cmp esi,0x8
0x8dee: jne 0x8d98
0x8df0: mov eax,dword ptr [rsp]
0x8df3: cmp eax,0x2f
0x8df6: ja 0x8ee4
0x8dfc: add rax,qword ptr [rsp+0x10]
0x8e01: mov edx,dword ptr [rax]
0x8e03: mov edi,ebp
0x8e05: xor eax,eax
0x8e07: call 0x1870
0x8e0c: mov ebx,eax
0x8e0e: jmp 0x8d50
0x8e13: xor esi,esi
0x8e15: xor eax,eax
0x8e17: call 0x1870
0x8e1c: test eax,eax
0x8e1e: mov ebx,eax
0x8e20: js 0x8d50
0x8e26: cmp dword ptr [rip+0x20444b],-0x1
0x8e2d: jne 0x8d50
0x8e33: xor eax,eax
0x8e35: mov esi,0x1
0x8e3a: mov edi,ebx
0x8e3c: call 0x1870
0x8e41: test eax,eax
0x8e43: js 0x8e61
0x8e45: or eax,0x1
0x8e48: mov esi,0x2
0x8e4d: mov edi,ebx
0x8e4f: mov edx,eax
0x8e51: xor eax,eax
0x8e53: call 0x1870
0x8e58: cmp eax,-0x1
0x8e5b: jne 0x8d50
0x8e61: call 0x1810
0x8e66: mov r12d,dword ptr [rax]
0x8e69: mov rbp,rax
0x8e6c: mov edi,ebx
0x8e6e: call 0x1980
0x8e73: mov ebx,0xffffffff
0x8e78: mov dword ptr [rbp],r12d
0x8e7c: jmp 0x8d50
0x8e88: call 0x1810
0x8e8d: cmp dword ptr [rax],0x16
0x8e90: jne 0x8cff
0x8e96: xor esi,esi
0x8e98: xor eax,eax
0x8e9a: mov edx,r12d
0x8e9d: mov edi,ebp
0x8e9f: call 0x1870
0x8ea4: test eax,eax
0x8ea6: mov ebx,eax
0x8ea8: js 0x8d50
0x8eae: mov dword ptr [rip+0x2043c0],0xffffffff
0x8eb8: jmp 0x8e33
0x8ebd: call 0x18e0
0x8eda: mov rax,qword ptr [rsp+0x8]
0x8edf: jmp 0x8da9
0x8ee4: mov rax,qword ptr [rsp+0x8]
0x8ee9: jmp 0x8e01
0x8f90: push r13
0x8f92: push r12
0x8f94: mov r13,rsi
0x8f97: push rbp
0x8f98: push rbx
0x8f99: mov rbx,rdi
0x8f9c: mov r12,rdx
0x8f9f: sub rsp,0x18
0x8fa3: mov rax,qword ptr fs:0x28
0x8fac: mov qword ptr [rsp+0x8],rax
0x8fb1: xor eax,eax
0x8fb3: lea rax,[rsp+0x4]
0x8fb8: test rdi,rdi
0x8fbb: cmove rbx,rax
0x8fbf: mov rdi,rbx
0x8fc2: call 0x1900
0x8fc7: cmp rax,-0x3
0x8fcb: mov rbp,rax
0x8fce: jbe 0x8ff0
0x8fd0: test r12,r12
0x8fd3: je 0x8ff0
0x8fd5: xor edi,edi
0x8fd7: call 0x90a0
0x8fdc: test al,al
0x8fde: jne 0x8ff0
0x8fe0: movzx eax,byte ptr [r13]
0x8fe5: mov ebp,0x1
0x8fea: mov dword ptr [rbx],eax
0x8fec: nop dword ptr [rax]
0x8ff0: mov rdx,qword ptr [rsp+0x8]
0x8ff5: xor rdx,qword ptr fs:0x28
0x8ffe: mov rax,rbp
0x9001: jne 0x900e
0x9003: add rsp,0x18
0x9007: pop rbx
0x9008: pop rbp
0x9009: pop r12
0x900b: pop r13
0x900d: ret 
0x900e: call 0x18e0
0x9013: nop word ptr cs:[rax+rax]
0x901d: nop dword ptr [rax]
0x9020: push r12
0x9022: push rbp
0x9023: mov rbp,rdi
0x9026: push rbx
0x9027: call 0x1840
0x902c: mov ebx,dword ptr [rbp]
0x902f: mov rdi,rbp
0x9032: mov r12,rax
0x9035: call 0x8bf0
0x903a: and ebx,0x20
0x903d: test ebx,ebx
0x903f: jne 0x9058
0x9041: test eax,eax
0x9043: je 0x904f
0x9045: test r12,r12
0x9048: mov eax,0xffffffff
0x904d: je 0x9088
0x904f: pop rbx
0x9050: pop rbp
0x9051: pop r12
0x9053: ret 
0x9058: test eax,eax
0x905a: jne 0x9078
0x905c: call 0x1810
0x9061: mov dword ptr [rax],0x0
0x9067: mov eax,0xffffffff
0x906c: pop rbx
0x906d: pop rbp
0x906e: pop r12
0x9070: ret 
0x9078: pop rbx
0x9079: mov eax,0xffffffff
0x907e: pop rbp
0x907f: pop r12
0x9081: ret 
0x9088: call 0x1810
0x908d: cmp dword ptr [rax],0x9
0x9090: pop rbx
0x9091: pop rbp
0x9092: pop r12
0x9094: setne al
0x9097: movzx eax,al
0x909a: neg eax
0x909c: ret 
0x90a0: sub rsp,0x8
0x90a4: xor esi,esi
0x90a6: call 0x1aa0
0x90ab: mov rdx,rax
0x90ae: mov eax,0x1
0x90b3: test rdx,rdx
0x90b6: je 0x90d5
0x90b8: lea rdi,[rip+0x1914]
0x90bf: mov ecx,0x2
0x90c4: mov rsi,rdx
0x90c7: rep cmpsb [rsi],es:[rdi]
0x90c9: seta cl
0x90cc: sbb cl,0x0
0x90cf: xor eax,eax
0x90d1: test cl,cl
0x90d3: jne 0x90e0
0x90d5: add rsp,0x8
0x90d9: ret 
0x90e0: lea rdi,[rip+0x18ee]
0x90e7: mov ecx,0x6
0x90ec: mov rsi,rdx
0x90ef: rep cmpsb [rsi],es:[rdi]
0x90f1: seta al
0x90f4: sbb al,0x0
0x90f6: test al,al
0x90f8: setne al
0x90fb: add rsp,0x8
0x90ff: ret 
0x9100: sub rsp,0x8
0x9104: mov edi,0xe
0x9109: call 0x1a50
0x910e: test rax,rax
0x9111: je 0x9130
0x9113: cmp byte ptr [rax],0x0
0x9116: lea rdx,[rip+0x18be]
0x911d: cmove rax,rdx
0x9121: add rsp,0x8
0x9125: ret 
0x9130: lea rax,[rip+0x18a4]
0x9137: add rsp,0x8
0x913b: ret 
0x9140: push r15
0x9142: push r14
0x9144: mov r15,rdx
0x9147: push r13
0x9149: push r12
0x914b: lea r12,[rip+0x20385e]
0x9152: push rbp
0x9153: lea rbp,[rip+0x20385e]
0x915a: push rbx
0x915b: mov r13d,edi
0x915e: mov r14,rsi
0x9161: sub rbp,r12
0x9164: sub rsp,0x8
0x9168: sar rbp,0x3
0x916c: call 0x17c8
0x9171: test rbp,rbp
0x9174: je 0x9196
0x9176: xor ebx,ebx
0x9178: nop dword ptr [rax+rax]
0x9180: mov rdx,r15
0x9183: mov rsi,r14
0x9186: mov edi,r13d
0x9189: call qword ptr [r12+rbx*8]
0x918d: add rbx,0x1
0x9191: cmp rbp,rbx
0x9194: jne 0x9180
0x9196: add rsp,0x8
0x919a: pop rbx
0x919b: pop rbp
0x919c: pop r12
0x919e: pop r13
0x91a0: pop r14
0x91a2: pop r15
0x91a4: ret 
0x91b0: rep ret 
