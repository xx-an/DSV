0x1970: sub rsp,0x8
0x1974: mov rax,qword ptr [rip+0x20d65d]
0x197b: test rax,rax
0x197e: je 0x1982
0x1980: call rax
0x1982: add rsp,0x8
0x1986: ret 
0x1996: jmp qword ptr [rip+0x20d3fc]
0x19e0: jmp qword ptr [rip+0x20d3da]
0x1a00: jmp qword ptr [rip+0x20d3ca]
0x1a40: jmp qword ptr [rip+0x20d3aa]
0x1ad0: jmp qword ptr [rip+0x20d362]
0x1af0: jmp qword ptr [rip+0x20d352]
0x1b40: jmp qword ptr [rip+0x20d32a]
0x1ba0: jmp qword ptr [rip+0x20d2fa]
0x1c10: jmp qword ptr [rip+0x20d2c2]
0x1c50: jmp qword ptr [rip+0x20d2a2]
0x1c60: jmp qword ptr [rip+0x20d29a]
0x1c90: jmp qword ptr [rip+0x20d282]
0x1ca0: jmp qword ptr [rip+0x20d27a]
0x1d00: jmp qword ptr [rip+0x20d24a]
0x1d10: jmp qword ptr [rip+0x20d242]
0x1db0: jmp qword ptr [rip+0x20d1f2]
0x1dc0: jmp qword ptr [rip+0x20d1ea]
0x1de8: jmp qword ptr [rip+0x20d1fa]
0x1f0f: nop 
0x1fd1: nop dword ptr [rax]
0x203b: mov rcx,qword ptr [rsp]
0x203f: lea rdx,[rip+0x8adf]
0x2046: mov r8,rax
0x2049: xor esi,esi
0x204b: mov edi,0x1
0x2050: xor eax,eax
0x2052: call 0x1cf0
0x2057: nop word ptr [rax+rax]
0x2236: lea rsi,[rip+0x943b]
0x223d: mov edx,0x5
0x2242: xor edi,edi
0x2244: mov rbp,rax
0x2247: call 0x1a80
0x224c: mov rbx,rax
0x224f: call 0x19c0
0x2254: mov esi,dword ptr [rax]
0x2256: mov rcx,rbp
0x2259: mov rdx,rbx
0x225c: mov edi,0x1
0x2261: xor eax,eax
0x2263: call 0x1cf0
0x229d: lea rdx,[rip+0x8881]
0x22a4: mov r8,rax
0x22a7: mov rcx,rbp
0x22aa: xor esi,esi
0x22ac: mov edi,0x1
0x22b1: xor eax,eax
0x22b3: call 0x1cf0
0x22dc: call 0x1ad0
0x22ee: lea rsi,[rip+0x9383]
0x22f5: mov edx,0x5
0x22fa: xor edi,edi
0x22fc: mov rbp,rax
0x22ff: call 0x1a80
0x2304: mov rbx,rax
0x2307: call 0x19c0
0x230c: mov esi,dword ptr [rax]
0x230e: mov rcx,rbp
0x2311: mov rdx,rbx
0x2314: mov edi,0x1
0x2319: xor eax,eax
0x231b: call 0x1cf0
0x2345: jmp 0x1f05
0x2354: lea rsi,[rip+0x8807]
0x235b: mov rbx,rax
0x235e: xor edi,edi
0x2360: mov edx,0x5
0x2365: call 0x1a80
0x236a: mov rcx,rbx
0x236d: mov rdx,rax
0x2370: xor esi,esi
0x2372: xor edi,edi
0x2374: xor eax,eax
0x2376: call 0x1cf0
0x237b: jmp 0x1f05
0x23aa: hlt 
0x23ab: nop dword ptr [rax+rax]
0x23b0: lea rdi,[rip+0x20ccc9]
0x23b7: push rbp
0x23b8: lea rax,[rip+0x20ccc1]
0x23bf: cmp rax,rdi
0x23c2: mov rbp,rsp
0x23c5: je 0x23e0
0x23c7: mov rax,qword ptr [rip+0x20cbfa]
0x23ce: test rax,rax
0x23d1: je 0x23e0
0x23d3: pop rbp
0x23d4: jmp rax
0x23e0: pop rbp
0x23e1: ret 
0x23f0: lea rdi,[rip+0x20cc89]
0x23f7: lea rsi,[rip+0x20cc82]
0x23fe: push rbp
0x23ff: sub rsi,rdi
0x2402: mov rbp,rsp
0x2405: sar rsi,0x3
0x2409: mov rax,rsi
0x240c: shr rax,0x3f
0x2410: add rsi,rax
0x2413: sar rsi, 1
0x2416: je 0x2430
0x2418: mov rax,qword ptr [rip+0x20cbc1]
0x241f: test rax,rax
0x2422: je 0x2430
0x2424: pop rbp
0x2425: jmp rax
0x2430: pop rbp
0x2431: ret 
0x2451: push rbp
0x2452: mov rbp,rsp
0x2455: je 0x2463
0x2457: mov rdi,qword ptr [rip+0x20cbaa]
0x245e: call 0x1de8
0x2463: call 0x23b0
0x2468: mov byte ptr [rip+0x20cc59],0x1
0x246f: pop rbp
0x2470: ret 
0x2480: push rbp
0x2481: mov rbp,rsp
0x2484: pop rbp
0x2485: jmp 0x23f0
0x2a10: push rbx
0x2a11: mov rbx,rdi
0x2a14: mov rdi,qword ptr [rdi+0x18]
0x2a18: call 0x1de0
0x2a1d: mov rdi,qword ptr [rbx+0x20]
0x2a21: pop rbx
0x2a22: jmp 0x1de0
0x2a7f: call 0x1ad0
0x2a84: nop 
0x2a86: nop word ptr cs:[rax+rax]
0x2adf: call 0x1ad0
0x2ae4: nop 
0x2ae6: nop word ptr cs:[rax+rax]
0x2d1f: mov r14,qword ptr [rsp+0x20]
0x2d24: mov r8,qword ptr [rsp+0x18]
0x2d29: mov rdx,rax
0x2d2c: mov rsi,r12
0x2d2f: mov edi,0x1
0x2d34: xor eax,eax
0x2d36: mov rcx,r14
0x2d39: call 0x1cd0
0x2d3e: mov rdi,r14
0x2d41: call 0x1de0
0x2d46: mov rdi,qword ptr [rsp+0x18]
0x2d4b: call 0x1de0
0x2d50: mov rdi,qword ptr [rsp+0x10]
0x2d55: call 0x1de0
0x2d5a: mov rdi,r13
0x2d5d: call 0x1de0
0x3078: lea rsi,[rip+0x8701]
0x307f: mov rbx,rax
0x3082: mov edx,0x5
0x3087: xor edi,edi
0x3089: call 0x1a80
0x308e: mov rcx,rbx
0x3091: mov rdx,rax
0x3094: xor esi,esi
0x3096: xor edi,edi
0x3098: xor eax,eax
0x309a: call 0x1cf0
0x309f: lea rsi,[rip+0x874a]
0x30a6: mov edx,0x5
0x30ab: xor edi,edi
0x30ad: xor r15d,r15d
0x30b0: call 0x1a80
0x30b5: xor esi,esi
0x30b7: mov rdx,rax
0x30ba: xor edi,edi
0x30bc: xor eax,eax
0x30be: call 0x1cf0
0x30c3: jmp 0x2fe0
0x3287: cmp dword ptr [rsp+0x10],-0x1
0x328c: mov r14,rax
0x328f: mov edx,0x5
0x3294: je 0x3408
0x329a: lea rsi,[rip+0x8436]
0x32a1: xor edi,edi
0x32a3: call 0x1a80
0x32a8: mov r12,rax
0x32ab: call 0x19c0
0x32b0: mov esi,dword ptr [rax]
0x32b2: xor edi,edi
0x32b4: xor eax,eax
0x32b6: mov rcx,r14
0x32b9: mov rdx,r12
0x32bc: call 0x1cf0
0x32c1: mov eax,dword ptr [rbx]
0x32c3: cmp eax,0x2
0x32c6: jne 0x2c7b
0x32cc: jmp 0x2d62
0x3408: lea rsi,[rip+0x82e1]
0x340f: xor edi,edi
0x3411: call 0x1a80
0x3416: mov r12,rax
0x3419: jmp 0x32ab
0x34ea: lea rsi,[rip+0x853f]
0x34f1: mov r12,rax
0x34f4: xor edi,edi
0x34f6: mov edx,0x5
0x34fb: call 0x1a80
0x3500: mov rdx,r12
0x3503: mov rsi,rax
0x3506: mov edi,0x1
0x350b: xor eax,eax
0x350d: call 0x1cd0
0x3512: jmp 0x2d50
0x3595: mov edx,0x5
0x359a: mov r14,rax
0x359d: lea rsi,[rip+0x811d]
0x35a4: jmp 0x340f
0x3657: mov rdx,qword ptr [rsp+0x8]
0x365c: xor edi,edi
0x365e: mov esi,0x4
0x3663: mov rbp,rax
0x3666: call 0x53e0
0x366b: lea rsi,[rip+0x813e]
0x3672: mov rbx,rax
0x3675: xor edi,edi
0x3677: mov edx,0x5
0x367c: call 0x1a80
0x3681: mov r8,rbp
0x3684: mov rdx,rax
0x3687: mov rcx,rbx
0x368a: xor esi,esi
0x368c: xor edi,edi
0x368e: xor eax,eax
0x3690: call 0x1cf0
0x3695: jmp 0x309f
0x382a: call 0x1ad0
0x399b: jmp 0x3919
0x39a0: mov qword ptr [rip+0x20b749],rdi
0x39a7: ret 
0x39b0: mov byte ptr [rip+0x20b731],dil
0x39b7: ret 
0x39c0: push rbp
0x39c1: push rbx
0x39c2: sub rsp,0x8
0x39c6: mov rdi,qword ptr [rip+0x20b6bb]
0x39cd: call 0x8f10
0x39d2: test eax,eax
0x39d4: je 0x39ec
0x39d6: call 0x19c0
0x39db: cmp byte ptr [rip+0x20b706],0x0
0x39e2: mov rbx,rax
0x39e5: je 0x3a03
0x39e7: cmp dword ptr [rax],0x20
0x39ea: jne 0x3a03
0x39ec: mov rdi,qword ptr [rip+0x20b6cd]
0x39f3: call 0x8f10
0x39f8: test eax,eax
0x39fa: jne 0x3a42
0x39fc: add rsp,0x8
0x3a00: pop rbx
0x3a01: pop rbp
0x3a02: ret 
0x3a03: lea rsi,[rip+0x808f]
0x3a0a: xor edi,edi
0x3a0c: mov edx,0x5
0x3a11: call 0x1a80
0x3a16: mov rdi,qword ptr [rip+0x20b6d3]
0x3a1d: mov rbp,rax
0x3a20: test rdi,rdi
0x3a23: je 0x3a4d
0x3a25: call 0x55d0
0x3a2a: mov esi,dword ptr [rbx]
0x3a2c: lea rdx,[rip+0x70f2]
0x3a33: mov rcx,rax
0x3a36: mov r8,rbp
0x3a39: xor edi,edi
0x3a3b: xor eax,eax
0x3a3d: call 0x1cf0
0x3a42: mov edi,dword ptr [rip+0x20b5d0]
0x3a48: call 0x19e0
0x3a4d: mov esi,dword ptr [rbx]
0x3a4f: lea rdx,[rip+0x70d3]
0x3a56: mov rcx,rax
0x3a59: xor edi,edi
0x3a5b: xor eax,eax
0x3a5d: call 0x1cf0
0x3a62: jmp 0x3a42
0x3b5f: nop 
0x3b60: push rbp
0x3b61: push rbx
0x3b62: mov rbp,rdi
0x3b65: mov ebx,esi
0x3b67: sub rsp,0x8
0x3b6b: call 0xa490
0x3b70: movzx edx,byte ptr [rax]
0x3b73: and edx,-0x21
0x3b76: cmp dl,0x55
0x3b79: je 0x3bf0
0x3b7b: cmp dl,0x47
0x3b7e: je 0x3ba0
0x3b80: lea rax,[rip+0x7f74]
0x3b87: lea rdx,[rip+0x7f6f]
0x3b8e: cmp ebx,0x9
0x3b91: cmovne rax,rdx
0x3b95: add rsp,0x8
0x3b99: pop rbx
0x3b9a: pop rbp
0x3b9b: ret 
0x3ba0: movzx edx,byte ptr [rax+0x1]
0x3ba4: and edx,-0x21
0x3ba7: cmp dl,0x42
0x3baa: jne 0x3b80
0x3bac: cmp byte ptr [rax+0x2],0x31
0x3bb0: jne 0x3b80
0x3bb2: cmp byte ptr [rax+0x3],0x38
0x3bb6: jne 0x3b80
0x3bb8: cmp byte ptr [rax+0x4],0x30
0x3bbc: jne 0x3b80
0x3bbe: cmp byte ptr [rax+0x5],0x33
0x3bc2: jne 0x3b80
0x3bc4: cmp byte ptr [rax+0x6],0x30
0x3bc8: jne 0x3b80
0x3bca: cmp byte ptr [rax+0x7],0x0
0x3bce: jne 0x3b80
0x3bd0: cmp byte ptr [rbp],0x60
0x3bd4: lea rax,[rip+0x7f19]
0x3bdb: lea rdx,[rip+0x7f16]
0x3be2: cmovne rax,rdx
0x3be6: add rsp,0x8
0x3bea: pop rbx
0x3beb: pop rbp
0x3bec: ret 
0x3bf0: movzx edx,byte ptr [rax+0x1]
0x3bf4: and edx,-0x21
0x3bf7: cmp dl,0x54
0x3bfa: jne 0x3b80
0x3bfc: movzx edx,byte ptr [rax+0x2]
0x3c00: and edx,-0x21
0x3c03: cmp dl,0x46
0x3c06: jne 0x3b80
0x3c0c: cmp byte ptr [rax+0x3],0x2d
0x3c10: jne 0x3b80
0x3c16: cmp byte ptr [rax+0x4],0x38
0x3c1a: jne 0x3b80
0x3c20: cmp byte ptr [rax+0x5],0x0
0x3c24: jne 0x3b80
0x3c2a: cmp byte ptr [rbp],0x60
0x3c2e: lea rax,[rip+0x7eb7]
0x3c35: lea rdx,[rip+0x7eb4]
0x3c3c: cmovne rax,rdx
0x3c40: add rsp,0x8
0x3c44: pop rbx
0x3c45: pop rbp
0x3c46: ret 
0x3d23: xor r11d,r11d
0x3d26: mov rax,rbp
0x3d29: mov r8d,r12d
0x3d2c: mov rbp,r11
0x3d2f: mov r11,rax
0x3d32: nop word ptr [rax+rax]
0x3d38: cmp r11,rbp
0x3d3b: setne r12b
0x3d3f: cmp r11,-0x1
0x3d43: jne 0x3d52
0x3d45: mov rax,qword ptr [rsp+0x10]
0x3d4a: cmp byte ptr [rax+rbp],0x0
0x3d4e: setne r12b
0x3d52: test r12b,r12b
0x3d55: je 0x43b0
0x3d5b: cmp dword ptr [rsp+0x8],0x2
0x3d60: mov rdi,qword ptr [rsp+0x10]
0x3d65: lea r9,[rdi+rbp]
0x3d69: setne al
0x3d6c: and al,byte ptr [rsp+0xd]
0x3d70: mov r10d,eax
0x3d73: je 0x3e20
0x3d79: mov rax,qword ptr [rsp+0x18]
0x3d7e: test rax,rax
0x3d81: je 0x41b0
0x3d87: cmp r11,-0x1
0x3d8b: lea rbx,[rbp+rax]
0x3d90: jne 0x3dc0
0x3d92: cmp rax,0x1
0x3d96: jbe 0x3dc0
0x3d98: mov byte ptr [rsp+0x38],r8b
0x3d9d: mov byte ptr [rsp+0x30],r10b
0x3da2: mov qword ptr [rsp+0x28],r9
0x3da7: call 0x1aa0
0x3dac: movzx r8d,byte ptr [rsp+0x38]
0x3db2: movzx r10d,byte ptr [rsp+0x30]
0x3db8: mov r11,rax
0x3dbb: mov r9,qword ptr [rsp+0x28]
0x3dc0: cmp rbx,r11
0x3dc3: mov byte ptr [rsp+0x28],r10b
0x3dc8: ja 0x4380
0x3dce: mov rdx,qword ptr [rsp+0x18]
0x3dd3: mov rsi,qword ptr [rsp+0x48]
0x3dd8: mov rdi,r9
0x3ddb: mov qword ptr [rsp+0x40],r11
0x3de0: mov byte ptr [rsp+0x38],r8b
0x3de5: mov qword ptr [rsp+0x30],r9
0x3dea: call 0x1ba0
0x3def: test eax,eax
0x3df1: mov r9,qword ptr [rsp+0x30]
0x3df6: movzx r8d,byte ptr [rsp+0x38]
0x3dfc: mov r11,qword ptr [rsp+0x40]
0x3e01: jne 0x4380
0x3e07: cmp byte ptr [rsp+0xf],0x0
0x3e0c: movzx r10d,byte ptr [rsp+0x28]
0x3e12: jne 0x4d95
0x3e18: nop dword ptr [rax+rax]
0x3e20: movzx ebx,byte ptr [r9]
0x3e24: cmp bl,0x7e
0x3e27: ja 0x4148
0x3e2d: lea rcx,[rip+0x7d58]
0x3e34: movzx edx,bl
0x3e37: movsxd rax,dword ptr [rcx+rdx*4]
0x3e3b: add rax,rcx
0x3e3e: jmp rax
0x3e78: cmp byte ptr [rsp+0xd],0x1
0x3e7d: jne 0x3f92
0x3e83: test dl,dl
0x3e85: jne 0x3f92
0x3e8b: mov rsi,qword ptr [rsp+0x20]
0x3e90: test rsi,rsi
0x3e93: je 0x3ea9
0x3e95: mov edx,ebx
0x3e97: shr dl,0x5
0x3e9a: movzx edx,dl
0x3e9d: mov edx,dword ptr [rsi+rdx*4]
0x3ea0: btl edx,ebx
0x3ea3: jb 0x3ff3
0x3ea9: test r10b,r10b
0x3eac: jne 0x3ff3
0x3eb2: xor eax,0x1
0x3eb5: add rbp,0x1
0x3eb9: and eax,r8d
0x3ebc: test al,al
0x3ebe: je 0x3ee0
0x3ec0: cmp r13,r15
0x3ec3: jbe 0x3eca
0x3ec5: mov byte ptr [r14+r15],0x27
0x3eca: lea rax,[r15+0x1]
0x3ece: cmp r13,rax
0x3ed1: jbe 0x3ed9
0x3ed3: mov byte ptr [r14+r15+0x1],0x27
0x3ed9: add r15,0x2
0x3edd: xor r8d,r8d
0x3ee0: cmp r15,r13
0x3ee3: jae 0x3ee9
0x3ee5: mov byte ptr [r14+r15],bl
0x3ee9: movzx edi,byte ptr [rsp+0xe]
0x3eee: add r15,0x1
0x3ef2: mov eax,0x0
0x3ef7: test r12b,r12b
0x3efa: cmove edi,eax
0x3efd: mov byte ptr [rsp+0xe],dil
0x3f02: jmp 0x3d38
0x3f92: cmp byte ptr [rsp+0xf],0x0
0x3f97: jne 0x3e8b
0x3f9d: jmp 0x3ea9
0x3ff3: cmp dword ptr [rsp+0x8],0x2
0x3ff8: sete dl
0x3ffb: cmp byte ptr [rsp+0xf],0x0
0x4000: mov eax,edx
0x4002: jne 0x4858
0x4008: mov eax,r8d
0x400b: xor eax,0x1
0x400e: and al,dl
0x4010: je 0x4041
0x4012: cmp r13,r15
0x4015: jbe 0x401c
0x4017: mov byte ptr [r14+r15],0x27
0x401c: lea rdx,[r15+0x1]
0x4020: cmp r13,rdx
0x4023: jbe 0x402b
0x4025: mov byte ptr [r14+r15+0x1],0x24
0x402b: lea rdx,[r15+0x2]
0x402f: cmp r13,rdx
0x4032: jbe 0x403a
0x4034: mov byte ptr [r14+r15+0x2],0x27
0x403a: add r15,0x3
0x403e: mov r8d,eax
0x4041: cmp r13,r15
0x4044: jbe 0x404b
0x4046: mov byte ptr [r14+r15],0x5c
0x404b: add r15,0x1
0x404f: add rbp,0x1
0x4053: jmp 0x3ee0
0x4140: xor r10d,r10d
0x4143: nop dword ptr [rax+rax]
0x4148: cmp qword ptr [rsp+0x58],0x1
0x414e: jne 0x44f8
0x4154: mov qword ptr [rsp+0x38],r11
0x4159: mov byte ptr [rsp+0x30],r8b
0x415e: mov byte ptr [rsp+0x28],r10b
0x4163: call 0x1dd0
0x4168: mov rcx,qword ptr [rax]
0x416b: movzx edx,bl
0x416e: movzx r10d,byte ptr [rsp+0x28]
0x4174: movzx r8d,byte ptr [rsp+0x30]
0x417a: mov r11,qword ptr [rsp+0x38]
0x417f: mov edi,0x1
0x4184: movzx eax,word ptr [rcx+rdx*2]
0x4188: and ax,0x4000
0x418c: setne r12b
0x4190: sete al
0x4193: and al,byte ptr [rsp+0xd]
0x4197: test al,al
0x4199: jne 0x4b31
0x419f: cmp dword ptr [rsp+0x8],0x2
0x41a4: sete dl
0x41a7: jmp 0x3e78
0x41b0: movzx ebx,byte ptr [r9]
0x41b4: cmp bl,0x7e
0x41b7: ja 0x4140
0x41b9: lea rcx,[rip+0x7bc8]
0x41c0: movzx edx,bl
0x41c3: movsxd rax,dword ptr [rcx+rdx*4]
0x41c7: add rax,rcx
0x41ca: jmp rax
0x4380: xor r10d,r10d
0x4383: jmp 0x3e20
0x43b0: cmp dword ptr [rsp+0x8],0x2
0x43b5: movzx ebx,byte ptr [rsp+0xf]
0x43ba: mov r12d,r8d
0x43bd: mov rbp,r11
0x43c0: sete dl
0x43c3: mov eax,ebx
0x43c5: test r15,r15
0x43c8: sete cl
0x43cb: and eax,edx
0x43cd: and al,cl
0x43cf: jne 0x4e36
0x43d5: mov eax,ebx
0x43d7: xor eax,0x1
0x43da: and dl,al
0x43dc: je 0x4d4c
0x43e2: cmp byte ptr [rsp+0x7c],0x0
0x43e7: je 0x4d4a
0x43ed: cmp byte ptr [rsp+0xe],0x0
0x43f2: jne 0x4ded
0x43f8: test r13,r13
0x43fb: sete al
0x43fe: cmp qword ptr [rsp+0x50],0x0
0x4404: setne dl
0x4407: and al,dl
0x4409: je 0x4e2c
0x440f: mov r13,qword ptr [rsp+0x50]
0x4414: lea rbx,[rip+0x76e2]
0x441b: mov byte ptr [r14],0x27
0x441f: mov dword ptr [rsp+0x8],0x2
0x4427: mov r15d,0x1
0x442d: mov qword ptr [rsp+0x18],0x1
0x4436: mov byte ptr [rsp+0xf],0x0
0x443b: mov qword ptr [rsp+0x48],rbx
0x4440: mov byte ptr [rsp+0x7c],al
0x4444: jmp 0x3d23
0x44f8: lea rax,[rsp+0xa0]
0x4500: cmp r11,-0x1
0x4504: mov qword ptr [rsp+0xa0],0x0
0x4510: mov qword ptr [rsp+0x28],rax
0x4515: jne 0x4544
0x4517: mov rdi,qword ptr [rsp+0x10]
0x451c: mov byte ptr [rsp+0x40],r8b
0x4521: mov byte ptr [rsp+0x38],r10b
0x4526: mov qword ptr [rsp+0x30],r9
0x452b: call 0x1aa0
0x4530: movzx r8d,byte ptr [rsp+0x40]
0x4536: movzx r10d,byte ptr [rsp+0x38]
0x453c: mov r11,rax
0x453f: mov r9,qword ptr [rsp+0x30]
0x4544: lea rax,[rsp+0x9c]
0x454c: xor ecx,ecx
0x454e: mov byte ptr [rsp+0x7e],bl
0x4552: mov byte ptr [rsp+0x7d],r8b
0x4557: mov rbx,rcx
0x455a: mov qword ptr [rsp+0x88],r9
0x4562: mov qword ptr [rsp+0x38],rax
0x4567: mov byte ptr [rsp+0x7f],r10b
0x456c: mov qword ptr [rsp+0x80],r15
0x4574: mov qword ptr [rsp+0x40],r14
0x4579: mov qword ptr [rsp+0x70],r13
0x457e: mov qword ptr [rsp+0x30],r11
0x4583: mov rax,qword ptr [rsp+0x10]
0x4588: lea r14,[rbp+rbx]
0x458d: mov rdx,qword ptr [rsp+0x30]
0x4592: mov rcx,qword ptr [rsp+0x28]
0x4597: mov rdi,qword ptr [rsp+0x38]
0x459c: lea r13,[rax+r14]
0x45a0: sub rdx,r14
0x45a3: mov rsi,r13
0x45a6: call 0x8e80
0x45ab: test rax,rax
0x45ae: mov r15,rax
0x45b1: je 0x4601
0x45b3: cmp rax,-0x1
0x45b7: je 0x4bd5
0x45bd: cmp rax,-0x2
0x45c1: je 0x4b61
0x45c7: cmp dword ptr [rsp+0x8],0x2
0x45cc: sete al
0x45cf: and al,byte ptr [rsp+0xf]
0x45d3: jne 0x4770
0x45d9: mov edi,dword ptr [rsp+0x9c]
0x45e0: call 0x1dc0
0x45e5: mov rdi,qword ptr [rsp+0x28]
0x45ea: test eax,eax
0x45ec: mov eax,0x0
0x45f1: cmove r12d,eax
0x45f5: add rbx,r15
0x45f8: call 0x1db0
0x45fd: test eax,eax
0x45ff: je 0x4583
0x4601: mov edx,r12d
0x4604: mov rdi,rbx
0x4607: movzx r8d,byte ptr [rsp+0x7d]
0x460d: xor edx,0x1
0x4610: movzx ebx,byte ptr [rsp+0x7e]
0x4615: movzx r10d,byte ptr [rsp+0x7f]
0x461b: and dl,byte ptr [rsp+0xd]
0x461f: mov r15,qword ptr [rsp+0x80]
0x4627: mov r14,qword ptr [rsp+0x40]
0x462c: mov r13,qword ptr [rsp+0x70]
0x4631: mov r11,qword ptr [rsp+0x30]
0x4636: cmp rdi,0x1
0x463a: jbe 0x4c3b
0x4640: mov rcx,rdi
0x4643: xor esi,esi
0x4645: movzx r9d,byte ptr [rsp+0xf]
0x464b: add rcx,rbp
0x464e: mov rdi,qword ptr [rsp+0x10]
0x4653: jmp 0x470e
0x4660: cmp dword ptr [rsp+0x8],0x2
0x4665: sete al
0x4668: test r9b,r9b
0x466b: jne 0x4b20
0x4671: mov esi,r8d
0x4674: xor esi,0x1
0x4677: and al,sil
0x467a: je 0x46ab
0x467c: cmp r13,r15
0x467f: jbe 0x4686
0x4681: mov byte ptr [r14+r15],0x27
0x4686: lea rsi,[r15+0x1]
0x468a: cmp r13,rsi
0x468d: jbe 0x4695
0x468f: mov byte ptr [r14+r15+0x1],0x24
0x4695: lea rsi,[r15+0x2]
0x4699: cmp r13,rsi
0x469c: jbe 0x46a4
0x469e: mov byte ptr [r14+r15+0x2],0x27
0x46a4: add r15,0x3
0x46a8: mov r8d,eax
0x46ab: cmp r13,r15
0x46ae: jbe 0x46b5
0x46b0: mov byte ptr [r14+r15],0x5c
0x46b5: lea rax,[r15+0x1]
0x46b9: cmp r13,rax
0x46bc: jbe 0x46cb
0x46be: mov eax,ebx
0x46c0: shr al,0x6
0x46c3: add eax,0x30
0x46c6: mov byte ptr [r14+r15+0x1],al
0x46cb: lea rax,[r15+0x2]
0x46cf: cmp r13,rax
0x46d2: jbe 0x46e4
0x46d4: mov eax,ebx
0x46d6: shr al,0x3
0x46d9: and eax,0x7
0x46dc: add eax,0x30
0x46df: mov byte ptr [r14+r15+0x2],al
0x46e4: and ebx,0x7
0x46e7: add rbp,0x1
0x46eb: add r15,0x3
0x46ef: add ebx,0x30
0x46f2: cmp rbp,rcx
0x46f5: jae 0x3ee0
0x46fb: mov esi,edx
0x46fd: cmp r13,r15
0x4700: jbe 0x4706
0x4702: mov byte ptr [r14+r15],bl
0x4706: movzx ebx,byte ptr [rdi+rbp]
0x470a: add r15,0x1
0x470e: test dl,dl
0x4710: jne 0x4660
0x4716: mov eax,esi
0x4718: xor eax,0x1
0x471b: and eax,r8d
0x471e: test r10b,r10b
0x4721: je 0x4731
0x4723: cmp r13,r15
0x4726: jbe 0x472d
0x4728: mov byte ptr [r14+r15],0x5c
0x472d: add r15,0x1
0x4731: add rbp,0x1
0x4735: cmp rbp,rcx
0x4738: jae 0x3ebc
0x473e: test al,al
0x4740: je 0x4b3e
0x4746: cmp r13,r15
0x4749: jbe 0x4750
0x474b: mov byte ptr [r14+r15],0x27
0x4750: lea rax,[r15+0x1]
0x4754: cmp r13,rax
0x4757: jbe 0x475f
0x4759: mov byte ptr [r14+r15+0x1],0x27
0x475f: add r15,0x2
0x4763: xor r10d,r10d
0x4766: xor r8d,r8d
0x4769: jmp 0x46fd
0x4770: cmp r15,0x1
0x4774: je 0x45d9
0x477a: mov rdi,qword ptr [rsp+0x10]
0x477f: lea rcx,[rdi+r15]
0x4783: lea rdx,[rdi+r14+0x1]
0x4788: lea r8,[rcx+r14]
0x478c: jmp 0x479d
0x4790: add rdx,0x1
0x4794: cmp r8,rdx
0x4797: je 0x45d9
0x479d: movzx ecx,byte ptr [rdx]
0x47a0: sub ecx,0x5b
0x47a3: cmp cl,0x21
0x47a6: ja 0x4790
0x47a8: mov esi,0x1
0x47ad: shl rsi,cl
0x47b0: mov rcx,rsi
0x47b3: movabsq rsi,0x20000002b
0x47bd: test rcx,rsi
0x47c0: je 0x4790
0x47c2: mov r14,qword ptr [rsp+0x40]
0x47c7: mov r13,qword ptr [rsp+0x70]
0x47cc: mov rbp,qword ptr [rsp+0x30]
0x47d1: mov dword ptr [rsp+0x8],0x2
0x47d9: cmp byte ptr [rsp+0xd],0x0
0x47de: je 0x47f0
0x47e0: test al,al
0x47e2: mov eax,0x4
0x47e7: cmove eax,dword ptr [rsp+0x8]
0x47ec: mov dword ptr [rsp+0x8],eax
0x47f0: sub rsp,0x8
0x47f4: mov rcx,rbp
0x47f7: mov rsi,r13
0x47fa: push qword ptr [rsp+0x68]
0x47fe: push qword ptr [rsp+0x78]
0x4802: mov rdi,r14
0x4805: push 0x0
0x4807: mov r9d,dword ptr [rsp+0x98]
0x480f: mov r8d,dword ptr [rsp+0x28]
0x4814: mov rdx,qword ptr [rsp+0x30]
0x4819: and r9d,-0x3
0x481d: call 0x3c50
0x4822: add rsp,0x20
0x4826: mov r15,rax
0x4829: mov rbx,qword ptr [rsp+0xa8]
0x4831: xor rbx,qword ptr fs:0x28
0x483a: mov rax,r15
0x483d: jne 0x4e43
0x4843: add rsp,0xb8
0x484a: pop rbx
0x484b: pop rbp
0x484c: pop r12
0x484e: pop r13
0x4850: pop r14
0x4852: pop r15
0x4854: ret 
0x4858: mov rbp,r11
0x485b: jmp 0x47d9
0x48c1: test r13,r13
0x48c4: jne 0x4e5a
0x48ca: lea rax,[rip+0x722c]
0x48d1: mov qword ptr [rsp+0x50],0x0
0x48da: mov byte ptr [rsp+0xe],0x1
0x48df: mov byte ptr [rsp+0x7c],0x0
0x48e4: xor r12d,r12d
0x48e7: mov byte ptr [rsp+0xf],0x0
0x48ec: mov qword ptr [rsp+0x18],0x1
0x48f5: mov qword ptr [rsp+0x48],rax
0x48fa: mov r15d,0x1
0x4900: mov dword ptr [rsp+0x8],0x2
0x4908: jmp 0x3d23
0x4b20: movzx ebx,byte ptr [rsp+0xf]
0x4b25: mov rbp,r11
0x4b28: mov byte ptr [rsp+0xd],bl
0x4b2c: jmp 0x47d9
0x4b31: movzx edx,byte ptr [rsp+0xd]
0x4b36: xor r12d,r12d
0x4b39: jmp 0x4640
0x4b3e: xor r10d,r10d
0x4b41: jmp 0x46fd
0x4b61: mov r11,qword ptr [rsp+0x30]
0x4b66: mov rsi,r14
0x4b69: mov rcx,r13
0x4b6c: mov rax,rbx
0x4b6f: mov rdi,rbx
0x4b72: movzx r8d,byte ptr [rsp+0x7d]
0x4b78: movzx ebx,byte ptr [rsp+0x7e]
0x4b7d: mov r9,qword ptr [rsp+0x88]
0x4b85: cmp rsi,r11
0x4b88: movzx r10d,byte ptr [rsp+0x7f]
0x4b8e: mov r15,qword ptr [rsp+0x80]
0x4b96: mov r14,qword ptr [rsp+0x40]
0x4b9b: mov r13,qword ptr [rsp+0x70]
0x4ba0: jae 0x4bc8
0x4ba2: cmp byte ptr [rcx],0x0
0x4ba5: jne 0x4bb7
0x4ba7: jmp 0x4bc8
0x4bb0: cmp byte ptr [r9+rax],0x0
0x4bb5: je 0x4bc5
0x4bb7: add rax,0x1
0x4bbb: lea rdx,[rbp+rax]
0x4bc0: cmp r11,rdx
0x4bc3: ja 0x4bb0
0x4bc5: mov rdi,rax
0x4bc8: movzx edx,byte ptr [rsp+0xd]
0x4bcd: xor r12d,r12d
0x4bd0: jmp 0x4636
0x4bd5: mov rdi,rbx
0x4bd8: movzx r8d,byte ptr [rsp+0x7d]
0x4bde: movzx ebx,byte ptr [rsp+0x7e]
0x4be3: movzx r10d,byte ptr [rsp+0x7f]
0x4be9: mov r15,qword ptr [rsp+0x80]
0x4bf1: xor r12d,r12d
0x4bf4: mov r14,qword ptr [rsp+0x40]
0x4bf9: mov r13,qword ptr [rsp+0x70]
0x4bfe: mov r11,qword ptr [rsp+0x30]
0x4c03: movzx edx,byte ptr [rsp+0xd]
0x4c08: jmp 0x4636
0x4c3b: mov eax,edx
0x4c3d: jmp 0x4197
0x4d4a: mov eax,edx
0x4d4c: mov rbx,qword ptr [rsp+0x48]
0x4d51: test rbx,rbx
0x4d54: je 0x4d82
0x4d56: test al,al
0x4d58: je 0x4d82
0x4d5a: movzx ecx,byte ptr [rbx]
0x4d5d: mov rax,rbx
0x4d60: test cl,cl
0x4d62: je 0x4d82
0x4d64: mov rdx,r15
0x4d67: sub rax,r15
0x4d6a: cmp r13,rdx
0x4d6d: jbe 0x4d73
0x4d6f: mov byte ptr [r14+rdx],cl
0x4d73: add rdx,0x1
0x4d77: movzx ecx,byte ptr [rax+rdx]
0x4d7b: test cl,cl
0x4d7d: jne 0x4d6a
0x4d7f: mov r15,rdx
0x4d82: cmp r13,r15
0x4d85: jbe 0x4829
0x4d8b: mov byte ptr [r14+r15],0x0
0x4d90: jmp 0x4829
0x4d95: cmp dword ptr [rsp+0x8],0x2
0x4d9a: movzx ebx,byte ptr [rsp+0xf]
0x4d9f: mov rbp,r11
0x4da2: sete al
0x4da5: mov byte ptr [rsp+0xd],bl
0x4da9: jmp 0x47d9
0x4ded: sub rsp,0x8
0x4df1: mov r8d,0x5
0x4df7: mov rcx,r11
0x4dfa: push qword ptr [rsp+0x68]
0x4dfe: push qword ptr [rsp+0x78]
0x4e02: mov rdi,r14
0x4e05: push qword ptr [rsp+0x38]
0x4e09: mov r9d,dword ptr [rsp+0x98]
0x4e11: mov rdx,qword ptr [rsp+0x30]
0x4e16: mov rsi,qword ptr [rsp+0x70]
0x4e1b: call 0x3c50
0x4e20: add rsp,0x20
0x4e24: mov r15,rax
0x4e27: jmp 0x4829
0x4e2c: movzx eax,byte ptr [rsp+0x7c]
0x4e31: jmp 0x4d4c
0x4e36: mov dword ptr [rsp+0x8],0x2
0x4e3e: jmp 0x47d9
0x4e43: call 0x1ad0
0x4e48: mov byte ptr [rsp+0xd],0x0
0x4e4d: jmp 0x48c1
0x4e5a: mov byte ptr [rsp+0xe],0x1
0x4e5f: xor eax,eax
0x4e61: xor r12d,r12d
0x4e64: mov qword ptr [rsp+0x50],0x0
0x4e6d: jmp 0x4414
0x4e84: nop 
0x4e86: nop word ptr cs:[rax+rax]
0x4f7c: add rsp,0x20
0x4f80: mov r11,qword ptr [rsp+0x10]
0x4f85: cmp r11,rax
0x4f88: ja 0x4ff1
0x4f8a: lea rsi,[rax+0x1]
0x4f8e: lea rax,[rip+0x20a16b]
0x4f95: cmp r12,rax
0x4f98: mov qword ptr [rbx],rsi
0x4f9b: je 0x4faf
0x4f9d: mov rdi,r12
0x4fa0: mov qword ptr [rsp+0x10],rsi
0x4fa5: call 0x1de0
0x4faa: mov rsi,qword ptr [rsp+0x10]
0x4faf: mov rdi,rsi
0x4fb2: mov qword ptr [rsp+0x10],rsi
0x4fb7: call 0x6330
0x4fbc: sub rsp,0x8
0x4fc0: mov qword ptr [rbx+0x8],rax
0x4fc4: mov r8d,dword ptr [rbp]
0x4fc8: push qword ptr [rbp+0x30]
0x4fcb: push qword ptr [rbp+0x28]
0x4fce: mov rcx,r14
0x4fd1: push r15
0x4fd3: mov r9d,dword ptr [rsp+0x3c]
0x4fd8: mov rdi,rax
0x4fdb: mov rdx,qword ptr [rsp+0x28]
0x4fe0: mov rsi,qword ptr [rsp+0x30]
0x4fe5: mov r12,rax
0x4fe8: call 0x3c50
0x4fed: add rsp,0x20
0x4ff1: mov eax,dword ptr [rsp+0x18]
0x4ff5: mov dword ptr [r13],eax
0x4ff9: add rsp,0x28
0x4ffd: mov rax,r12
0x5000: pop rbx
0x5001: pop rbp
0x5002: pop r12
0x5004: pop r13
0x5006: pop r14
0x5008: pop r15
0x500a: ret 
0x503b: nop dword ptr [rax+rax]
0x5040: push r12
0x5042: push rbp
0x5043: push rbx
0x5044: mov rbx,rdi
0x5047: call 0x19c0
0x504c: mov r12d,dword ptr [rax]
0x504f: mov rbp,rax
0x5052: lea rax,[rip+0x20a1a7]
0x5059: test rbx,rbx
0x505c: mov esi,0x38
0x5061: cmove rbx,rax
0x5065: mov rdi,rbx
0x5068: call 0x6530
0x506d: mov dword ptr [rbp],r12d
0x5071: pop rbx
0x5072: pop rbp
0x5073: pop r12
0x5075: ret 
0x5080: lea rax,[rip+0x20a179]
0x5087: test rdi,rdi
0x508a: cmove rdi,rax
0x508e: mov eax,dword ptr [rdi]
0x5090: ret 
0x50a0: lea rax,[rip+0x20a159]
0x50a7: test rdi,rdi
0x50aa: cmove rdi,rax
0x50ae: mov dword ptr [rdi],esi
0x50b0: ret 
0x50c0: lea rax,[rip+0x20a139]
0x50c7: test rdi,rdi
0x50ca: mov ecx,esi
0x50cc: cmove rdi,rax
0x50d0: mov eax,esi
0x50d2: and ecx,0x1f
0x50d5: shr al,0x5
0x50d8: movzx eax,al
0x50db: lea rdi,[rdi+rax*4+0x8]
0x50e0: mov esi,dword ptr [rdi]
0x50e2: mov eax,esi
0x50e4: shr eax,cl
0x50e6: xor edx,eax
0x50e8: and eax,0x1
0x50eb: and edx,0x1
0x50ee: shl edx,cl
0x50f0: xor edx,esi
0x50f2: mov dword ptr [rdi],edx
0x50f4: ret 
0x5100: lea rax,[rip+0x20a0f9]
0x5107: test rdi,rdi
0x510a: cmove rdi,rax
0x510e: mov eax,dword ptr [rdi+0x4]
0x5111: mov dword ptr [rdi+0x4],esi
0x5114: ret 
0x5120: lea rax,[rip+0x20a0d9]
0x5127: test rdi,rdi
0x512a: cmove rdi,rax
0x512e: test rsi,rsi
0x5131: mov dword ptr [rdi],0xa
0x5137: je 0x5147
0x5139: test rdx,rdx
0x513c: je 0x5147
0x513e: mov qword ptr [rdi+0x28],rsi
0x5142: mov qword ptr [rdi+0x30],rdx
0x5146: ret 
0x5147: sub rsp,0x8
0x514b: call 0x19b0
0x5150: push r15
0x5152: push r14
0x5154: lea rax,[rip+0x20a0a5]
0x515b: push r13
0x515d: push r12
0x515f: mov r13,rdi
0x5162: push rbp
0x5163: push rbx
0x5164: mov rbx,r8
0x5167: mov r14,rsi
0x516a: mov r15,rdx
0x516d: sub rsp,0x18
0x5171: test r8,r8
0x5174: cmove rbx,rax
0x5178: mov qword ptr [rsp+0x8],rcx
0x517d: call 0x19c0
0x5182: mov r12d,dword ptr [rax]
0x5185: mov rbp,rax
0x5188: lea rax,[rbx+0x8]
0x518c: sub rsp,0x8
0x5190: mov r9d,dword ptr [rbx+0x4]
0x5194: push qword ptr [rbx+0x30]
0x5197: mov r8d,dword ptr [rbx]
0x519a: push qword ptr [rbx+0x28]
0x519d: mov rdx,r15
0x51a0: push rax
0x51a1: mov rcx,qword ptr [rsp+0x28]
0x51a6: mov rsi,r14
0x51a9: mov rdi,r13
0x51ac: call 0x3c50
0x51b1: mov dword ptr [rbp],r12d
0x51b5: add rsp,0x38
0x51b9: pop rbx
0x51ba: pop rbp
0x51bb: pop r12
0x51bd: pop r13
0x51bf: pop r14
0x51c1: pop r15
0x51c3: ret 
0x51d0: push r15
0x51d2: push r14
0x51d4: lea rax,[rip+0x20a025]
0x51db: push r13
0x51dd: push r12
0x51df: mov r12,rdx
0x51e2: push rbp
0x51e3: push rbx
0x51e4: mov rbx,rcx
0x51e7: mov r14,rdi
0x51ea: mov r15,rsi
0x51ed: sub rsp,0x38
0x51f1: test rcx,rcx
0x51f4: cmove rbx,rax
0x51f8: xor ebp,ebp
0x51fa: call 0x19c0
0x51ff: test r12,r12
0x5202: mov r13,rax
0x5205: mov eax,dword ptr [rax]
0x5207: sete bpl
0x520b: or ebp,dword ptr [rbx+0x4]
0x520e: lea r10,[rbx+0x8]
0x5212: sub rsp,0x8
0x5216: mov r8d,dword ptr [rbx]
0x5219: mov rcx,r15
0x521c: mov dword ptr [rsp+0x14],eax
0x5220: push qword ptr [rbx+0x30]
0x5223: mov rdx,r14
0x5226: push qword ptr [rbx+0x28]
0x5229: push r10
0x522b: xor esi,esi
0x522d: mov r9d,ebp
0x5230: xor edi,edi
0x5232: mov qword ptr [rsp+0x40],r10
0x5237: call 0x3c50
0x523c: lea rsi,[rax+0x1]
0x5240: mov qword ptr [rsp+0x48],rax
0x5245: add rsp,0x20
0x5249: mov rdi,rsi
0x524c: mov qword ptr [rsp+0x18],rsi
0x5251: call 0x6330
0x5256: mov qword ptr [rsp+0x10],rax
0x525b: sub rsp,0x8
0x525f: push qword ptr [rbx+0x30]
0x5262: push qword ptr [rbx+0x28]
0x5265: mov r10,qword ptr [rsp+0x38]
0x526a: mov r9d,ebp
0x526d: mov r8d,dword ptr [rbx]
0x5270: mov rcx,r15
0x5273: mov rdx,r14
0x5276: mov rdi,rax
0x5279: push r10
0x527b: mov rsi,qword ptr [rsp+0x38]
0x5280: call 0x3c50
0x5285: mov eax,dword ptr [rsp+0x2c]
0x5289: add rsp,0x20
0x528d: test r12,r12
0x5290: mov dword ptr [r13],eax
0x5294: je 0x529f
0x5296: mov r11,qword ptr [rsp+0x28]
0x529b: mov qword ptr [r12],r11
0x529f: mov rax,qword ptr [rsp+0x10]
0x52a4: add rsp,0x38
0x52a8: pop rbx
0x52a9: pop rbp
0x52aa: pop r12
0x52ac: pop r13
0x52ae: pop r14
0x52b0: pop r15
0x52b2: ret 
0x52c0: mov rcx,rdx
0x52c3: xor edx,edx
0x52c5: jmp 0x51d0
0x52d0: mov eax,dword ptr [rip+0x209d82]
0x52d6: push r12
0x52d8: mov r12,qword ptr [rip+0x209d81]
0x52df: push rbp
0x52e0: push rbx
0x52e1: cmp eax,0x1
0x52e4: jle 0x5311
0x52e6: sub eax,0x2
0x52e9: lea rbx,[r12+0x18]
0x52ee: shl rax,0x4
0x52f2: lea rbp,[r12+rax+0x28]
0x52f7: nop word ptr [rax+rax]
0x5300: mov rdi,qword ptr [rbx]
0x5303: add rbx,0x10
0x5307: call 0x1de0
0x530c: cmp rbx,rbp
0x530f: jne 0x5300
0x5311: mov rdi,qword ptr [r12+0x8]
0x5316: lea rbx,[rip+0x209de3]
0x531d: cmp rdi,rbx
0x5320: je 0x5339
0x5322: call 0x1de0
0x5327: mov qword ptr [rip+0x209d3e],0x100
0x5332: mov qword ptr [rip+0x209d3f],rbx
0x5339: lea rbx,[rip+0x209d30]
0x5340: cmp r12,rbx
0x5343: je 0x5354
0x5345: mov rdi,r12
0x5348: call 0x1de0
0x534d: mov qword ptr [rip+0x209d0c],rbx
0x5354: pop rbx
0x5355: mov dword ptr [rip+0x209cf9],0x1
0x535f: pop rbp
0x5360: pop r12
0x5362: ret 
0x5370: lea rcx,[rip+0x209e89]
0x5377: mov rdx,-0x1
0x537e: jmp 0x4e90
0x5390: lea rcx,[rip+0x209e69]
0x5397: jmp 0x4e90
0x53a0: lea rcx,[rip+0x209e59]
0x53a7: mov rsi,rdi
0x53aa: mov rdx,-0x1
0x53b1: xor edi,edi
0x53b3: jmp 0x4e90
0x53c0: lea rcx,[rip+0x209e39]
0x53c7: mov rdx,rsi
0x53ca: mov rsi,rdi
0x53cd: xor edi,edi
0x53cf: jmp 0x4e90
0x544f: mov rcx,qword ptr [rsp+0x38]
0x5454: xor rcx,qword ptr fs:0x28
0x545d: jne 0x5469
0x545f: add rsp,0x48
0x5463: ret 
0x5464: call 0x19b0
0x5469: call 0x1ad0
0x546e: nop 
0x5470: sub rsp,0x48
0x5474: mov rax,rdx
0x5477: mov rdx,rcx
0x547a: mov rcx,qword ptr fs:0x28
0x5483: mov qword ptr [rsp+0x38],rcx
0x5488: xor ecx,ecx
0x548a: cmp esi,0xa
0x548d: je 0x54f0
0x548f: mov dword ptr [rsp],esi
0x5492: mov rcx,rsp
0x5495: mov rsi,rax
0x5498: mov qword ptr [rsp+0x4],0x0
0x54a1: mov qword ptr [rsp+0xc],0x0
0x54aa: mov qword ptr [rsp+0x14],0x0
0x54b3: mov qword ptr [rsp+0x1c],0x0
0x54bc: mov qword ptr [rsp+0x24],0x0
0x54c5: mov qword ptr [rsp+0x2c],0x0
0x54ce: mov dword ptr [rsp+0x34],0x0
0x54d6: call 0x4e90
0x54db: mov rdx,qword ptr [rsp+0x38]
0x54e0: xor rdx,qword ptr fs:0x28
0x54e9: jne 0x54f5
0x54eb: add rsp,0x48
0x54ef: ret 
0x54f0: call 0x19b0
0x54f5: call 0x1ad0
0x54fa: nop word ptr [rax+rax]
0x5510: mov rcx,rdx
0x5513: mov rdx,rsi
0x5516: mov esi,edi
0x5518: xor edi,edi
0x551a: jmp 0x5470
0x5520: sub rsp,0x48
0x5524: mov ecx,edx
0x5526: mov rax,qword ptr fs:0x28
0x552f: mov qword ptr [rsp+0x38],rax
0x5534: xor eax,eax
0x5536: mov rax,qword ptr [rip+0x209cf3]
0x553d: mov r8,rsp
0x5540: and ecx,0x1f
0x5543: movdqa xmm0,[rip+0x209cb5]
0x554b: mov qword ptr [rsp+0x30],rax
0x5550: mov eax,edx
0x5552: movaps [rsp],xmm0
0x5556: shr al,0x5
0x5559: movzx eax,al
0x555c: lea r9,[r8+rax*4+0x8]
0x5561: movdqa xmm0,[rip+0x209ca7]
0x5569: movaps [rsp+0x10],xmm0
0x556e: movdqa xmm0,[rip+0x209caa]
0x5576: movaps [rsp+0x20],xmm0
0x557b: mov edx,dword ptr [r9]
0x557e: mov eax,edx
0x5580: shr eax,cl
0x5582: not eax
0x5584: and eax,0x1
0x5587: shl eax,cl
0x5589: mov rcx,r8
0x558c: xor eax,edx
0x558e: mov rdx,rsi
0x5591: mov rsi,rdi
0x5594: mov dword ptr [r9],eax
0x5597: xor edi,edi
0x5599: call 0x4e90
0x559e: mov rsi,qword ptr [rsp+0x38]
0x55a3: xor rsi,qword ptr fs:0x28
0x55ac: jne 0x55b3
0x55ae: add rsp,0x48
0x55b2: ret 
0x55b3: call 0x1ad0
0x55b8: nop dword ptr [rax+rax]
0x55c0: movsx edx,sil
0x55c4: mov rsi,-0x1
0x55cb: jmp 0x5520
0x55d0: mov edx,0x3a
0x55d5: mov rsi,-0x1
0x55dc: jmp 0x5520
0x55f0: mov edx,0x3a
0x55f5: jmp 0x5520
0x5600: sub rsp,0x48
0x5604: mov rax,rdx
0x5607: mov rdx,qword ptr fs:0x28
0x5610: mov qword ptr [rsp+0x38],rdx
0x5615: xor edx,edx
0x5617: cmp esi,0xa
0x561a: je 0x5684
0x561c: mov dword ptr [rsp],esi
0x561f: mov rcx,rsp
0x5622: mov rdx,-0x1
0x5629: mov rsi,rax
0x562c: mov qword ptr [rsp+0x4],0x0
0x5635: mov qword ptr [rsp+0xc],0x4000000
0x563e: mov qword ptr [rsp+0x14],0x0
0x5647: mov qword ptr [rsp+0x1c],0x0
0x5650: mov qword ptr [rsp+0x24],0x0
0x5659: mov qword ptr [rsp+0x2c],0x0
0x5662: mov dword ptr [rsp+0x34],0x0
0x566a: call 0x4e90
0x566f: mov rcx,qword ptr [rsp+0x38]
0x5674: xor rcx,qword ptr fs:0x28
0x567d: jne 0x5689
0x567f: add rsp,0x48
0x5683: ret 
0x5684: call 0x19b0
0x5689: call 0x1ad0
0x568e: nop 
0x5690: sub rsp,0x48
0x5694: mov r9,rcx
0x5697: mov rcx,qword ptr [rip+0x209b92]
0x569e: movdqa xmm0,[rip+0x209b5a]
0x56a6: mov rax,qword ptr fs:0x28
0x56af: mov qword ptr [rsp+0x38],rax
0x56b4: xor eax,eax
0x56b6: movaps [rsp],xmm0
0x56ba: test rsi,rsi
0x56bd: mov qword ptr [rsp+0x30],rcx
0x56c2: mov dword ptr [rsp],0xa
0x56c9: movdqa xmm0,[rip+0x209b3f]
0x56d1: movaps [rsp+0x10],xmm0
0x56d6: movdqa xmm0,[rip+0x209b42]
0x56de: movaps [rsp+0x20],xmm0
0x56e3: je 0x5717
0x56e5: test rdx,rdx
0x56e8: je 0x5717
0x56ea: mov qword ptr [rsp+0x28],rsi
0x56ef: mov qword ptr [rsp+0x30],rdx
0x56f4: mov rcx,rsp
0x56f7: mov rdx,r8
0x56fa: mov rsi,r9
0x56fd: call 0x4e90
0x5702: mov rdi,qword ptr [rsp+0x38]
0x5707: xor rdi,qword ptr fs:0x28
0x5710: jne 0x571c
0x5712: add rsp,0x48
0x5716: ret 
0x5717: call 0x19b0
0x571c: call 0x1ad0
0x5721: nop dword ptr [rax+rax]
0x5726: nop word ptr cs:[rax+rax]
0x5730: mov r8,-0x1
0x5737: jmp 0x5690
0x5740: mov rcx,rdx
0x5743: mov r8,-0x1
0x574a: mov rdx,rsi
0x574d: mov rsi,rdi
0x5750: xor edi,edi
0x5752: jmp 0x5690
0x5760: mov r8,rcx
0x5763: mov rcx,rdx
0x5766: mov rdx,rsi
0x5769: mov rsi,rdi
0x576c: xor edi,edi
0x576e: jmp 0x5690
0x5780: lea rcx,[rip+0x209899]
0x5787: jmp 0x4e90
0x5790: lea rcx,[rip+0x209889]
0x5797: mov rdx,rsi
0x579a: mov rsi,rdi
0x579d: xor edi,edi
0x579f: jmp 0x4e90
0x57b0: lea rcx,[rip+0x209869]
0x57b7: mov rdx,-0x1
0x57be: jmp 0x4e90
0x585c: call 0x1ad0
0x5861: nop word ptr cs:[rax+rax]
0x586b: nop dword ptr [rax+rax]
0x5c25: call 0x1ad0
0x5cf0: mov r9,r8
0x5cf3: mov rdx,rsi
0x5cf6: mov r8,rcx
0x5cf9: xor esi,esi
0x5cfb: xor ecx,ecx
0x5cfd: jmp 0x5870
0x5e48: mov r8,rcx
0x5e4b: mov rcx,rdx
0x5e4e: lea rdx,[rip+0x61a7]
0x5e55: mov esi,0x1
0x5e5a: xor eax,eax
0x5e5c: call 0x1da0
0x5e61: jmp 0x5d4c
0x605d: push r12
0x605f: push r15
0x6061: push r14
0x6063: mov r8,qword ptr [rsp+0x20]
0x6068: mov rcx,rbx
0x606b: mov rdx,rax
0x606e: mov rdi,rbp
0x6071: mov esi,0x1
0x6076: xor eax,eax
0x6078: call 0x1da0
0x607d: add rsp,0x20
0x6081: add rsp,0x28
0x6085: pop rbx
0x6086: pop rbp
0x6087: pop r12
0x6089: pop r13
0x608b: pop r14
0x608d: pop r15
0x608f: ret 
0x60c9: push r12
0x60cb: push r15
0x60cd: push r14
0x60cf: mov r9,qword ptr [rsp+0x28]
0x60d4: jmp 0x6063
0x6130: xor r9d,r9d
0x6133: cmp qword ptr [r8],0x0
0x6137: je 0x614b
0x6139: nop dword ptr [rax]
0x6140: add r9,0x1
0x6144: cmp qword ptr [r8+r9*8],0x0
0x6149: jne 0x6140
0x614b: jmp 0x5d10
0x6150: sub rsp,0x68
0x6154: mov r10,r8
0x6157: xor r9d,r9d
0x615a: mov rax,qword ptr fs:0x28
0x6163: mov qword ptr [rsp+0x58],rax
0x6168: xor eax,eax
0x616a: mov r8,rsp
0x616d: nop dword ptr [rax]
0x6170: mov eax,dword ptr [r10]
0x6173: cmp eax,0x2f
0x6176: ja 0x61ba
0x6178: mov r11d,eax
0x617b: add r11,qword ptr [r10+0x10]
0x617f: add eax,0x8
0x6182: mov dword ptr [r10],eax
0x6185: mov rax,qword ptr [r11]
0x6188: test rax,rax
0x618b: mov qword ptr [r8+r9*8],rax
0x618f: je 0x619b
0x6191: add r9,0x1
0x6195: cmp r9,0xa
0x6199: jne 0x6170
0x619b: call 0x5d10
0x61a0: mov rax,qword ptr [rsp+0x58]
0x61a5: xor rax,qword ptr fs:0x28
0x61ae: jne 0x61b5
0x61b0: add rsp,0x68
0x61b4: ret 
0x61b5: call 0x1ad0
0x61ba: mov r11,qword ptr [r10+0x8]
0x61be: lea rax,[r11+0x8]
0x61c2: mov qword ptr [r10+0x8],rax
0x61c6: jmp 0x6185
0x6290: call 0x1ad0
0x629c: mov rax,rbx
0x629f: add rbx,0x8
0x62a3: jmp 0x6256
0x62b0: push rbx
0x62b1: lea rsi,[rip+0x5d92]
0x62b8: mov edx,0x5
0x62bd: xor edi,edi
0x62bf: call 0x1a80
0x62c4: lea rdx,[rip+0x5d94]
0x62cb: mov rsi,rax
0x62ce: mov edi,0x1
0x62d3: xor eax,eax
0x62d5: call 0x1cd0
0x62da: lea rsi,[rip+0x5d94]
0x62e1: mov edx,0x5
0x62e6: xor edi,edi
0x62e8: call 0x1a80
0x62ed: lea rcx,[rip+0x52ac]
0x62f4: lea rdx,[rip+0x47e5]
0x62fb: mov rsi,rax
0x62fe: mov edi,0x1
0x6303: xor eax,eax
0x6305: call 0x1cd0
0x630a: mov rbx,qword ptr [rip+0x208d77]
0x6311: lea rsi,[rip+0x5f90]
0x6318: xor edi,edi
0x631a: mov edx,0x5
0x631f: call 0x1a80
0x6324: mov rsi,rbx
0x6327: mov rdi,rax
0x632a: pop rbx
0x632b: jmp 0x1bb0
0x634a: nop word ptr [rax+rax]
0x6350: mov rax,rdi
0x6353: mul rsi
0x6356: mov rdi,rax
0x6359: seto al
0x635c: test rdi,rdi
0x635f: js 0x636b
0x6361: movzx eax,al
0x6364: test rax,rax
0x6367: jne 0x636b
0x6369: jmp 0x6330
0x636b: sub rsp,0x8
0x636f: call 0x6580
0x6374: nop 
0x6376: nop word ptr cs:[rax+rax]
0x6380: jmp 0x6330
0x63c6: nop word ptr cs:[rax+rax]
0x63d0: mov rax,rsi
0x63d3: mul rdx
0x63d6: mov rsi,rax
0x63d9: seto al
0x63dc: test rsi,rsi
0x63df: js 0x63eb
0x63e1: movzx eax,al
0x63e4: test rax,rax
0x63e7: jne 0x63eb
0x63e9: jmp 0x6390
0x63eb: sub rsp,0x8
0x63ef: call 0x6580
0x63f4: nop 
0x63f6: nop word ptr cs:[rax+rax]
0x6400: test rdi,rdi
0x6403: mov r9,rdx
0x6406: mov rcx,qword ptr [rsi]
0x6409: je 0x6440
0x640b: xor edx,edx
0x640d: movabsq rax,0x5555555555555554
0x6417: div r9
0x641a: cmp rax,rcx
0x641d: jbe 0x645b
0x641f: mov rax,rcx
0x6422: shr rax, 1
0x6425: lea rcx,[rax+rcx+0x1]
0x642a: mov qword ptr [rsi],rcx
0x642d: imul rcx,r9
0x6431: mov rsi,rcx
0x6434: jmp 0x6390
0x6440: test rcx,rcx
0x6443: je 0x6468
0x6445: mov rax,rcx
0x6448: mul r9
0x644b: seto dl
0x644e: test rax,rax
0x6451: movzx edx,dl
0x6454: js 0x645b
0x6456: test rdx,rdx
0x6459: je 0x642a
0x645b: sub rsp,0x8
0x645f: call 0x6580
0x6464: nop dword ptr [rax]
0x6468: xor edx,edx
0x646a: mov eax,0x80
0x646f: xor r8d,r8d
0x6472: div r9
0x6475: test rax,rax
0x6478: sete r8b
0x647c: lea rcx,[r8+rax]
0x6480: jmp 0x6445
0x6490: test rdi,rdi
0x6493: mov rax,qword ptr [rsi]
0x6496: je 0x64c0
0x6498: movabsq rdx,0x5555555555555553
0x64a2: cmp rax,rdx
0x64a5: ja 0x64d1
0x64a7: mov rdx,rax
0x64aa: shr rdx, 1
0x64ad: lea rax,[rdx+rax+0x1]
0x64b2: mov qword ptr [rsi],rax
0x64b5: mov rsi,rax
0x64b8: jmp 0x6390
0x64c0: test rax,rax
0x64c3: mov edx,0x80
0x64c8: cmove rax,rdx
0x64cc: test rax,rax
0x64cf: jns 0x64b2
0x64d1: sub rsp,0x8
0x64d5: call 0x6580
0x64da: nop word ptr [rax+rax]
0x64e0: push rbx
0x64e1: mov rbx,rdi
0x64e4: call 0x6330
0x64e9: mov rdx,rbx
0x64ec: xor esi,esi
0x64ee: mov rdi,rax
0x64f1: pop rbx
0x64f2: jmp 0x1b60
0x6500: mov rax,rdi
0x6503: sub rsp,0x8
0x6507: mul rsi
0x650a: seto dl
0x650d: test rax,rax
0x6510: js 0x6529
0x6512: movzx edx,dl
0x6515: test rdx,rdx
0x6518: jne 0x6529
0x651a: call 0x1bc0
0x651f: test rax,rax
0x6522: je 0x6529
0x6524: add rsp,0x8
0x6528: ret 
0x6529: call 0x6580
0x652e: nop 
0x65b0: call 0x19b0
0x65b5: nop word ptr cs:[rax+rax]
0x65bf: nop 
0x65ef: nop 
0x660f: nop 
0x6610: mov edx,dword ptr [rdi+0x48]
0x6613: mov eax,0x1
0x6618: and edx,0x11
0x661b: cmp edx,0x10
0x661e: je 0x6627
0x6620: xor eax,eax
0x6622: cmp edx,0x11
0x6625: je 0x6630
0x6627: rep ret 
0x6630: cmp qword ptr [rsi+0x58],0x0
0x6635: setne al
0x6638: ret 
0x66e4: cmp eax,0x22
0x66e7: mov ebp,0x1
0x66ec: jne 0x6718
0x6712: nop word ptr [rax+rax]
0x6840: movsxd rdi,edi
0x6843: mov eax,ebp
0x6845: add rcx,rdi
0x6848: or eax,0x2
0x684b: mov qword ptr [r15],rcx
0x684e: cmp byte ptr [rcx],0x0
0x6851: mov qword ptr [r14],rbx
0x6854: cmovne ebp,eax
0x6857: jmp 0x671d
0x68b5: or ebp,r9d
0x68b8: jmp 0x6840
0x694c: mov rax,rbx
0x694f: mul rsi
0x6952: mov rbx,rax
0x6955: jo 0x69e4
0x695b: sub r8d,0x1
0x695f: jne 0x694c
0x6961: jmp 0x68b5
0x69c0: call 0x1ad0
0x69c5: lea rcx,[rip+0x5af4]
0x69cc: lea rsi,[rip+0x59cd]
0x69d3: lea rdi,[rip+0x59e6]
0x69da: mov edx,0x54
0x69df: call 0x1b50
0x69e4: mov r9d,0x1
0x69ea: or rbx,-0x1
0x69ee: jmp 0x695b
0x6a90: mov rax,qword ptr [rdi]
0x6a93: xor edx,edx
0x6a95: div rsi
0x6a98: mov rax,rdx
0x6a9b: ret 
0x6ab0: mov rdx,qword ptr [rdi]
0x6ab3: mov rax,qword ptr [rsi]
0x6ab6: mov rax,qword ptr [rax+0x80]
0x6abd: cmp qword ptr [rdx+0x80],rax
0x6ac4: jb 0x6ad0
0x6ac6: seta al
0x6ac9: movzx eax,al
0x6acc: ret 
0x6ad0: mov eax,0xffffffff
0x6ad5: ret 
0x7002: call 0x1ad0
0x700c: nop dword ptr [rax]
0x70bd: mov edi,eax
0x70bf: call 0x1b70
0x70c4: mov dword ptr [rbx+0x2c],ebp
0x70c7: add rsp,0x8
0x70cb: pop rbx
0x70cc: pop rbp
0x70cd: ret 
0x70d0: mov edi,esi
0x70d2: call 0x1b70
0x70d7: mov dword ptr [rbx+0x2c],ebp
0x70da: add rsp,0x8
0x70de: pop rbx
0x70df: pop rbp
0x70e0: ret 
0x70e1: call 0x19b0
0x70e6: nop word ptr cs:[rax+rax]
0x7108: mov edi,dword ptr [rdi+0x28]
0x710b: xor ebp,ebp
0x710d: call 0x1ca0
0x7112: test eax,eax
0x7114: setne bpl
0x724c: mov rdi,rax
0x724f: mov esi,edx
0x7251: xor eax,eax
0x7253: jmp 0x9030
0x73e9: mov edi,r15d
0x73ec: call 0x1ca0
0x73f1: mov ebx,eax
0x73f3: jmp 0x733f
0x74c5: call 0x1ad0
0x764e: call 0x1ad0
0x7658: nop dword ptr [rax+rax]
0x76b9: mov qword ptr [rsp+0x38],-0x1
0x77a3: test ah,0x4
0x77a6: je 0x7aa8
0x79de: sub rdx,qword ptr [rax+0x38]
0x79e2: add rdx,rcx
0x79e5: mov qword ptr [rax+0x30],rdx
0x7aa8: xor edx,edx
0x7aaa: mov rsi,r13
0x7aad: mov rdi,r15
0x7ab0: call 0x6ae0
0x7ab5: mov word ptr [r13+0x70],ax
0x7aba: jmp 0x77f1
0x7d6c: cmp rbx,0x1
0x7d70: je 0x7c25
0x7d76: mov rsi,qword ptr [rsp+0x10]
0x7d7b: mov rdx,rbx
0x7d7e: mov rdi,r15
0x7d81: call 0x6cb0
0x7d86: mov qword ptr [rsp+0x10],rax
0x7d8b: jmp 0x7c25
0x7ded: test rbx,rbx
0x7df0: mov dword ptr [rbp+0x40],eax
0x7df3: jne 0x7f29
0x7df9: cmp qword ptr [rsp+0x50],0x0
0x7dff: mov eax,0x4
0x7e04: jne 0x7f29
0x7e0a: mov word ptr [rbp+0x70],ax
0x7f29: mov eax,0x7
0x7f2e: jmp 0x7e0a
0x8011: call 0x1ad0
0x8255: cmp rbp,0x1
0x8259: jbe 0x826c
0x825b: mov rsi,r12
0x825e: mov rdx,rbp
0x8261: mov rdi,rbx
0x8264: call 0x6cb0
0x8269: mov r12,rax
0x82bd: mov edi,dword ptr [rbx+0x2c]
0x82c0: lea rdx,[rip+0x4203]
0x82c7: call 0x7230
0x82cc: test eax,eax
0x82ce: mov dword ptr [rbx+0x28],eax
0x82d1: jns 0x82e0
0x82d3: or dword ptr [rbx+0x48],0x4
0x82d7: nop word ptr [rax+rax]
0x84d0: test al,0x4
0x84d2: jne 0x8476
0x84d4: mov edi,dword ptr [rbp+0x28]
0x84d7: call 0x1ca0
0x84dc: test eax,eax
0x84de: jne 0x8530
0x84e0: mov edi,dword ptr [rbp+0x28]
0x84e3: call 0x1b70
0x84e8: test eax,eax
0x84ea: je 0x8476
0x84ec: call 0x19c0
0x84f1: mov r12,rax
0x84f4: jmp 0x8558
0x8500: call 0x1b70
0x8505: test eax,eax
0x8507: je 0x8476
0x850d: call 0x19c0
0x8512: mov ebx,dword ptr [rax]
0x8514: jmp 0x8478
0x8530: call 0x19c0
0x8535: mov edi,dword ptr [rbp+0x28]
0x8538: mov r12,rax
0x853b: mov ebx,dword ptr [rax]
0x853d: call 0x1b70
0x8542: test eax,eax
0x8544: je 0x8478
0x854a: test ebx,ebx
0x854c: jne 0x8478
0x8552: nop word ptr [rax+rax]
0x8558: mov ebx,dword ptr [r12]
0x855c: jmp 0x8478
0x8561: call 0x19c0
0x8566: mov dword ptr [rax],ebx
0x8568: mov ebx,0xffffffff
0x856d: jmp 0x84b6
0x8774: nop dword ptr [rax]
0x8c0d: call 0x1ca0
0x8c12: test eax,eax
0x8c14: je 0x8c29
0x8c16: call 0x19c0
0x8c1b: mov eax,dword ptr [rax]
0x8c1d: mov dword ptr [rbx+0x40],eax
0x8c20: or dword ptr [r12+0x48],0x2000
0x8c29: mov edi,dword ptr [rbx+0x44]
0x8c2c: jmp 0x866e
0x8d10: sub rsp,0x8
0x8d14: call 0x19c0
0x8d19: mov dword ptr [rax],0x16
0x8d1f: mov eax,0x1
0x8d24: add rsp,0x8
0x8d28: ret 
0x8d30: push r14
0x8d32: push r13
0x8d34: push r12
0x8d36: push rbp
0x8d37: mov r12d,esi
0x8d3a: push rbx
0x8d3b: mov rbx,rdi
0x8d3e: call 0x19c0
0x8d43: test r12d,0xffffefff
0x8d4a: mov r13,rax
0x8d4d: jne 0x8e38
0x8d53: mov rbp,qword ptr [rbx]
0x8d56: mov dword ptr [rax],0x0
0x8d5c: test byte ptr [rbx+0x49],0x20
0x8d60: jne 0x8de0
0x8d62: movzx eax,word ptr [rbp+0x70]
0x8d66: cmp ax,0x9
0x8d6a: je 0x8dd0
0x8d6c: cmp ax,0x1
0x8d70: jne 0x8de0
0x8d72: mov rdi,qword ptr [rbx+0x8]
0x8d76: test rdi,rdi
0x8d79: je 0x8d80
0x8d7b: call 0x6e50
0x8d80: cmp r12d,0x1000
0x8d87: mov r14d,0x1
0x8d8d: jne 0x8d9c
0x8d8f: or dword ptr [rbx+0x48],0x1000
0x8d96: mov r14d,0x2
0x8d9c: cmp qword ptr [rbp+0x58],0x0
0x8da1: jne 0x8db5
0x8da3: mov rax,qword ptr [rbp+0x30]
0x8da7: cmp byte ptr [rax],0x2f
0x8daa: je 0x8db5
0x8dac: mov esi,dword ptr [rbx+0x48]
0x8daf: test sil,0x4
0x8db3: je 0x8df0
0x8db5: mov esi,r14d
0x8db8: mov rdi,rbx
0x8dbb: call 0x7660
0x8dc0: mov qword ptr [rbx+0x8],rax
0x8dc4: pop rbx
0x8dc5: pop rbp
0x8dc6: pop r12
0x8dc8: pop r13
0x8dca: pop r14
0x8dcc: ret 
0x8dd0: pop rbx
0x8dd1: mov rax,qword ptr [rbp+0x10]
0x8dd5: pop rbp
0x8dd6: pop r12
0x8dd8: pop r13
0x8dda: pop r14
0x8ddc: ret 
0x8de0: pop rbx
0x8de1: xor eax,eax
0x8de3: pop rbp
0x8de4: pop r12
0x8de6: pop r13
0x8de8: pop r14
0x8dea: ret 
0x8df0: mov edi,dword ptr [rbx+0x2c]
0x8df3: lea rdx,[rip+0x36d0]
0x8dfa: call 0x7230
0x8dff: test eax,eax
0x8e01: mov ebp,eax
0x8e03: js 0x8e59
0x8e05: mov esi,r14d
0x8e08: mov rdi,rbx
0x8e0b: call 0x7660
0x8e10: test byte ptr [rbx+0x49],0x2
0x8e14: mov qword ptr [rbx+0x8],rax
0x8e18: jne 0x8e48
0x8e1a: mov edi,ebp
0x8e1c: call 0x1ca0
0x8e21: test eax,eax
0x8e23: jne 0x8e68
0x8e25: mov edi,ebp
0x8e27: call 0x1b70
0x8e2c: mov rax,qword ptr [rbx+0x8]
0x8e30: jmp 0x8dc4
0x8e38: mov dword ptr [rax],0x16
0x8e3e: xor eax,eax
0x8e40: jmp 0x8dc4
0x8e48: mov edx,0x1
0x8e4d: mov esi,ebp
0x8e4f: mov rdi,rbx
0x8e52: call 0x7080
0x8e57: jmp 0x8e2c
0x8e59: mov qword ptr [rbx+0x8],0x0
0x8e61: xor eax,eax
0x8e63: jmp 0x8dc4
0x8e68: mov ebx,dword ptr [r13]
0x8e6c: mov edi,ebp
0x8e6e: call 0x1b70
0x8e73: xor eax,eax
0x8e75: mov dword ptr [r13],ebx
0x8e79: jmp 0x8dc4
0x8e80: push r13
0x8e82: push r12
0x8e84: mov r13,rsi
0x8e87: push rbp
0x8e88: push rbx
0x8e89: mov rbx,rdi
0x8e8c: mov r12,rdx
0x8e8f: sub rsp,0x18
0x8e93: mov rax,qword ptr fs:0x28
0x8e9c: mov qword ptr [rsp+0x8],rax
0x8ea1: xor eax,eax
0x8ea3: lea rax,[rsp+0x4]
0x8ea8: test rdi,rdi
0x8eab: cmove rbx,rax
0x8eaf: mov rdi,rbx
0x8eb2: call 0x1af0
0x8eb7: cmp rax,-0x3
0x8ebb: mov rbp,rax
0x8ebe: jbe 0x8ee0
0x8ec0: test r12,r12
0x8ec3: je 0x8ee0
0x8ec5: xor edi,edi
0x8ec7: call 0x90a0
0x8ecc: test al,al
0x8ece: jne 0x8ee0
0x8ed0: movzx eax,byte ptr [r13]
0x8ed5: mov ebp,0x1
0x8eda: mov dword ptr [rbx],eax
0x8edc: nop dword ptr [rax]
0x8ee0: mov rdx,qword ptr [rsp+0x8]
0x8ee5: xor rdx,qword ptr fs:0x28
0x8eee: mov rax,rbp
0x8ef1: jne 0x8efe
0x8ef3: add rsp,0x18
0x8ef7: pop rbx
0x8ef8: pop rbp
0x8ef9: pop r12
0x8efb: pop r13
0x8efd: ret 
0x8efe: call 0x1ad0
0x8f03: nop word ptr cs:[rax+rax]
0x8f0d: nop dword ptr [rax]
0x8f10: push r12
0x8f12: push rbp
0x8f13: mov rbp,rdi
0x8f16: push rbx
0x8f17: call 0x1a00
0x8f1c: mov ebx,dword ptr [rbp]
0x8f1f: mov rdi,rbp
0x8f22: mov r12,rax
0x8f25: call 0xa600
0x8f2a: and ebx,0x20
0x8f2d: test ebx,ebx
0x8f2f: jne 0x8f48
0x8f31: test eax,eax
0x8f33: je 0x8f3f
0x8f35: test r12,r12
0x8f38: mov eax,0xffffffff
0x8f3d: je 0x8f78
0x8f3f: pop rbx
0x8f40: pop rbp
0x8f41: pop r12
0x8f43: ret 
0x8f48: test eax,eax
0x8f4a: jne 0x8f68
0x8f4c: call 0x19c0
0x8f51: mov dword ptr [rax],0x0
0x8f57: mov eax,0xffffffff
0x8f5c: pop rbx
0x8f5d: pop rbp
0x8f5e: pop r12
0x8f60: ret 
0x8f68: pop rbx
0x8f69: mov eax,0xffffffff
0x8f6e: pop rbp
0x8f6f: pop r12
0x8f71: ret 
0x8f78: call 0x19c0
0x8f7d: cmp dword ptr [rax],0x9
0x8f80: pop rbx
0x8f81: pop rbp
0x8f82: pop r12
0x8f84: setne al
0x8f87: movzx eax,al
0x8f8a: neg eax
0x8f8c: ret 
0x8fd0: mov qword ptr [rdi+0x10],0x1
0x902a: nop word ptr [rax+rax]
0x9030: sub rsp,0x58
0x9034: mov qword ptr [rsp+0x30],rdx
0x9039: xor edx,edx
0x903b: mov rax,qword ptr fs:0x28
0x9044: mov qword ptr [rsp+0x18],rax
0x9049: xor eax,eax
0x904b: test sil,0x40
0x904f: jne 0x9078
0x9051: xor eax,eax
0x9053: call 0x1d00
0x9058: mov edi,eax
0x905a: call 0xa5c0
0x905f: mov rcx,qword ptr [rsp+0x18]
0x9064: xor rcx,qword ptr fs:0x28
0x906d: jne 0x9099
0x906f: add rsp,0x58
0x9073: ret 
0x9078: lea rax,[rsp+0x60]
0x907d: mov dword ptr [rsp],0x10
0x9084: mov edx,dword ptr [rsp+0x30]
0x9088: mov qword ptr [rsp+0x8],rax
0x908d: lea rax,[rsp+0x20]
0x9092: mov qword ptr [rsp+0x10],rax
0x9097: jmp 0x9051
0x9099: call 0x1ad0
0x909e: nop 
0x90a0: sub rsp,0x8
0x90a4: xor esi,esi
0x90a6: call 0x1cc0
0x90ab: mov rdx,rax
0x90ae: mov eax,0x1
0x90b3: test rdx,rdx
0x90b6: je 0x90d5
0x90b8: lea rdi,[rip+0x349d]
0x90bf: mov ecx,0x2
0x90c4: mov rsi,rdx
0x90c7: rep cmpsb [rsi],es:[rdi]
0x90c9: seta cl
0x90cc: sbb cl,0x0
0x90cf: xor eax,eax
0x90d1: test cl,cl
0x90d3: jne 0x90e0
0x90d5: add rsp,0x8
0x90d9: ret 
0x90e0: lea rdi,[rip+0x3477]
0x90e7: mov ecx,0x6
0x90ec: mov rsi,rdx
0x90ef: rep cmpsb [rsi],es:[rdi]
0x90f1: seta al
0x90f4: sbb al,0x0
0x90f6: test al,al
0x90f8: setne al
0x90fb: add rsp,0x8
0x90ff: ret 
0x91a0: mov rax,rdi
0x91a3: xor edx,edx
0x91a5: ror rax,0x3
0x91a9: div rsi
0x91ac: mov rax,rdx
0x91af: ret 
0x91b0: cmp rdi,rsi
0x91b3: sete al
0x91b6: ret 
0x91e2: nop dword ptr [rax]
0x91e6: nop word ptr cs:[rax+rax]
0x94d0: mov rax,qword ptr [rdi+0x10]
0x94d4: ret 
0x94e0: mov rax,qword ptr [rdi+0x18]
0x94e4: ret 
0x94f0: mov rax,qword ptr [rdi+0x20]
0x94f4: ret 
0x9500: mov rsi,qword ptr [rdi]
0x9503: mov rdi,qword ptr [rdi+0x8]
0x9507: xor eax,eax
0x9509: cmp rsi,rdi
0x950c: jae 0x9547
0x950e: nop 
0x9510: cmp qword ptr [rsi],0x0
0x9514: je 0x953c
0x9516: mov rdx,qword ptr [rsi+0x8]
0x951a: mov ecx,0x1
0x951f: test rdx,rdx
0x9522: je 0x9535
0x9524: nop dword ptr [rax]
0x9528: mov rdx,qword ptr [rdx+0x8]
0x952c: add rcx,0x1
0x9530: test rdx,rdx
0x9533: jne 0x9528
0x9535: cmp rax,rcx
0x9538: cmovb rax,rcx
0x953c: add rsi,0x10
0x9540: cmp rsi,rdi
0x9543: jb 0x9510
0x9545: rep ret 
0x9547: rep ret 
0x9550: mov rcx,qword ptr [rdi]
0x9553: mov r8,qword ptr [rdi+0x8]
0x9557: xor edx,edx
0x9559: xor esi,esi
0x955b: cmp rcx,r8
0x955e: jae 0x9596
0x9560: cmp qword ptr [rcx],0x0
0x9564: je 0x958d
0x9566: mov rax,qword ptr [rcx+0x8]
0x956a: add rsi,0x1
0x956e: add rdx,0x1
0x9572: test rax,rax
0x9575: je 0x958d
0x9577: nop word ptr [rax+rax]
0x9580: mov rax,qword ptr [rax+0x8]
0x9584: add rdx,0x1
0x9588: test rax,rax
0x958b: jne 0x9580
0x958d: add rcx,0x10
0x9591: cmp rcx,r8
0x9594: jb 0x9560
0x9596: xor eax,eax
0x9598: cmp qword ptr [rdi+0x18],rsi
0x959c: je 0x95a0
0x959e: rep ret 
0x95a0: cmp qword ptr [rdi+0x20],rdx
0x95a4: sete al
0x95a7: ret 
0x95b0: push r13
0x95b2: push r12
0x95b4: mov r12,rsi
0x95b7: push rbp
0x95b8: push rbx
0x95b9: xor ebx,ebx
0x95bb: sub rsp,0x8
0x95bf: mov rsi,qword ptr [rdi]
0x95c2: mov rcx,qword ptr [rdi+0x20]
0x95c6: mov rbp,qword ptr [rdi+0x10]
0x95ca: mov r13,qword ptr [rdi+0x18]
0x95ce: mov rdi,qword ptr [rdi+0x8]
0x95d2: cmp rsi,rdi
0x95d5: jae 0x9615
0x95d7: nop word ptr [rax+rax]
0x95e0: cmp qword ptr [rsi],0x0
0x95e4: je 0x960c
0x95e6: mov rax,qword ptr [rsi+0x8]
0x95ea: mov edx,0x1
0x95ef: test rax,rax
0x95f2: je 0x9605
0x95f4: nop dword ptr [rax]
0x95f8: mov rax,qword ptr [rax+0x8]
0x95fc: add rdx,0x1
0x9600: test rax,rax
0x9603: jne 0x95f8
0x9605: cmp rbx,rdx
0x9608: cmovb rbx,rdx
0x960c: add rsi,0x10
0x9610: cmp rsi,rdi
0x9613: jb 0x95e0
0x9615: lea rdx,[rip+0x2f48]
0x961c: mov esi,0x1
0x9621: mov rdi,r12
0x9624: xor eax,eax
0x9626: call 0x1da0
0x962b: lea rdx,[rip+0x2f4a]
0x9632: xor eax,eax
0x9634: mov rcx,rbp
0x9637: mov esi,0x1
0x963c: mov rdi,r12
0x963f: call 0x1da0
0x9644: test r13,r13
0x9647: js 0x96b0
0x9649: pxor xmm0,xmm0
0x964d: test rbp,rbp
0x9650: cvtsi2sdq xmm0,r13
0x9655: mulsd xmm0,[rip+0x2fbb]
0x965d: js 0x96d9
0x965f: pxor xmm1,xmm1
0x9663: cvtsi2sdq xmm1,rbp
0x9668: divsd xmm0,xmm1
0x966c: lea rdx,[rip+0x2f3d]
0x9673: mov rcx,r13
0x9676: mov rdi,r12
0x9679: mov esi,0x1
0x967e: mov eax,0x1
0x9683: call 0x1da0
0x9688: add rsp,0x8
0x968c: mov rcx,rbx
0x968f: mov rdi,r12
0x9692: pop rbx
0x9693: pop rbp
0x9694: pop r12
0x9696: pop r13
0x9698: lea rdx,[rip+0x2ef5]
0x969f: mov esi,0x1
0x96a4: xor eax,eax
0x96a6: jmp 0x1da0
0x96b0: mov rax,r13
0x96b3: mov rdx,r13
0x96b6: pxor xmm0,xmm0
0x96ba: shr rax, 1
0x96bd: and edx,0x1
0x96c0: or rax,rdx
0x96c3: test rbp,rbp
0x96c6: cvtsi2sdq xmm0,rax
0x96cb: addsd xmm0,xmm0
0x96cf: mulsd xmm0,[rip+0x2f41]
0x96d7: jns 0x965f
0x96d9: mov rax,rbp
0x96dc: pxor xmm1,xmm1
0x96e0: shr rax, 1
0x96e3: and ebp,0x1
0x96e6: or rax,rbp
0x96e9: cvtsi2sdq xmm1,rax
0x96ee: addsd xmm1,xmm1
0x96f2: jmp 0x9668
0x9760: cmp qword ptr [rdi+0x20],0x0
0x9765: je 0x9793
0x9767: mov rdx,qword ptr [rdi]
0x976a: mov rcx,qword ptr [rdi+0x8]
0x976e: cmp rdx,rcx
0x9771: jae 0x9798
0x9773: mov rax,qword ptr [rdx]
0x9776: test rax,rax
0x9779: jne 0x9796
0x977b: nop dword ptr [rax+rax]
0x9780: add rdx,0x10
0x9784: cmp rdx,rcx
0x9787: jae 0x9798
0x9789: mov rax,qword ptr [rdx]
0x978c: test rax,rax
0x978f: je 0x9780
0x9791: rep ret 
0x9793: xor eax,eax
0x9795: ret 
0x9796: rep ret 
0x9798: sub rsp,0x8
0x979c: call 0x19b0
0x97a1: nop dword ptr [rax+rax]
0x97a6: nop word ptr cs:[rax+rax]
0x97b0: push rbp
0x97b1: push rbx
0x97b2: mov rbp,rdi
0x97b5: mov rbx,rsi
0x97b8: sub rsp,0x8
0x97bc: call 0x91c0
0x97c1: mov rdx,rax
0x97c4: mov rcx,rax
0x97c7: mov rax,qword ptr [rdx]
0x97ca: mov rdx,qword ptr [rdx+0x8]
0x97ce: cmp rax,rbx
0x97d1: je 0x97e9
0x97d3: nop dword ptr [rax+rax]
0x97d8: test rdx,rdx
0x97db: je 0x97ee
0x97dd: mov rax,qword ptr [rdx]
0x97e0: mov rdx,qword ptr [rdx+0x8]
0x97e4: cmp rax,rbx
0x97e7: jne 0x97d8
0x97e9: test rdx,rdx
0x97ec: jne 0x9818
0x97ee: mov rdx,qword ptr [rbp+0x8]
0x97f2: jmp 0x9800
0x97f8: mov rax,qword ptr [rcx]
0x97fb: test rax,rax
0x97fe: jne 0x980b
0x9800: add rcx,0x10
0x9804: cmp rdx,rcx
0x9807: ja 0x97f8
0x9809: xor eax,eax
0x980b: add rsp,0x8
0x980f: pop rbx
0x9810: pop rbp
0x9811: ret 
0x9818: mov rax,qword ptr [rdx]
0x981b: add rsp,0x8
0x981f: pop rbx
0x9820: pop rbp
0x9821: ret 
0x9830: mov r9,qword ptr [rdi]
0x9833: cmp qword ptr [rdi+0x8],r9
0x9837: jbe 0x9892
0x9839: xor r8d,r8d
0x983c: mov rcx,qword ptr [r9]
0x983f: test rcx,rcx
0x9842: je 0x987d
0x9844: cmp rdx,r8
0x9847: jbe 0x9887
0x9849: mov qword ptr [rsi+r8*8],rcx
0x984d: mov rcx,qword ptr [r9+0x8]
0x9851: lea rax,[r8+0x1]
0x9855: test rcx,rcx
0x9858: je 0x987a
0x985a: nop word ptr [rax+rax]
0x9860: cmp rdx,rax
0x9863: je 0x9890
0x9865: mov r8,qword ptr [rcx]
0x9868: add rax,0x1
0x986c: mov qword ptr [rsi+rax*8-0x8],r8
0x9871: mov rcx,qword ptr [rcx+0x8]
0x9875: test rcx,rcx
0x9878: jne 0x9860
0x987a: mov r8,rax
0x987d: add r9,0x10
0x9881: cmp qword ptr [rdi+0x8],r9
0x9885: ja 0x983c
0x9887: mov rax,r8
0x988a: ret 
0x9890: rep ret 
0x9892: xor eax,eax
0x9894: ret 
0x98a0: push r15
0x98a2: push r14
0x98a4: push r13
0x98a6: push r12
0x98a8: push rbp
0x98a9: push rbx
0x98aa: sub rsp,0x8
0x98ae: mov r14,qword ptr [rdi]
0x98b1: cmp qword ptr [rdi+0x8],r14
0x98b5: jbe 0x9906
0x98b7: mov r13,rdx
0x98ba: mov r12,rsi
0x98bd: mov r15,rdi
0x98c0: xor ebp,ebp
0x98c2: mov rdi,qword ptr [r14]
0x98c5: test rdi,rdi
0x98c8: je 0x98ea
0x98ca: mov rbx,r14
0x98cd: jmp 0x98d3
0x98d0: mov rdi,qword ptr [rbx]
0x98d3: mov rsi,r13
0x98d6: call r12
0x98d9: test al,al
0x98db: je 0x98f4
0x98dd: mov rbx,qword ptr [rbx+0x8]
0x98e1: add rbp,0x1
0x98e5: test rbx,rbx
0x98e8: jne 0x98d0
0x98ea: add r14,0x10
0x98ee: cmp qword ptr [r15+0x8],r14
0x98f2: ja 0x98c2
0x98f4: add rsp,0x8
0x98f8: mov rax,rbp
0x98fb: pop rbx
0x98fc: pop rbp
0x98fd: pop r12
0x98ff: pop r13
0x9901: pop r14
0x9903: pop r15
0x9905: ret 
0x9906: xor ebp,ebp
0x9908: jmp 0x98f4
0x9910: movzx ecx,byte ptr [rdi]
0x9913: xor edx,edx
0x9915: test cl,cl
0x9917: je 0x993d
0x9919: nop dword ptr [rax]
0x9920: mov rax,rdx
0x9923: add rdi,0x1
0x9927: shl rax,0x5
0x992b: sub rax,rdx
0x992e: xor edx,edx
0x9930: add rax,rcx
0x9933: movzx ecx,byte ptr [rdi]
0x9936: div rsi
0x9939: test cl,cl
0x993b: jne 0x9920
0x993d: mov rax,rdx
0x9940: ret 
0x9950: movabsq rax,0x3f80000000000000
0x995a: mov byte ptr [rdi+0x10],0x0
0x995e: mov qword ptr [rdi],rax
0x9961: movabsq rax,0x3fb4fdf43f4ccccd
0x996b: mov qword ptr [rdi+0x8],rax
0x996f: ret 
0x99cc: mov qword ptr [rax+0x28],r15
0x99d0: call 0x9310
0x99d5: test al,al
0x99d7: je 0x9a60
0x99dd: cmp byte ptr [r15+0x10],0x0
0x99e2: je 0x9ae0
0x9ae0: test rbp,rbp
0x9ae3: movxd xmm1,[r15+0x8]
0x9ae9: jns 0x9aa1
0x9b30: push r12
0x9b32: push rbp
0x9b33: mov rbp,rdi
0x9b36: push rbx
0x9b37: mov r12,qword ptr [rdi]
0x9b3a: cmp r12,qword ptr [rdi+0x8]
0x9b3e: jae 0x9bab
0x9b40: cmp qword ptr [r12],0x0
0x9b45: je 0x9ba1
0x9b47: mov rbx,qword ptr [r12+0x8]
0x9b4c: mov rax,qword ptr [rbp+0x40]
0x9b50: test rbx,rbx
0x9b53: je 0x9b85
0x9b55: nop dword ptr [rax]
0x9b58: test rax,rax
0x9b5b: je 0x9b66
0x9b5d: mov rdi,qword ptr [rbx]
0x9b60: call rax
0x9b62: mov rax,qword ptr [rbp+0x40]
0x9b66: mov rdx,qword ptr [rbx+0x8]
0x9b6a: mov rcx,qword ptr [rbp+0x48]
0x9b6e: mov qword ptr [rbx],0x0
0x9b75: test rdx,rdx
0x9b78: mov qword ptr [rbx+0x8],rcx
0x9b7c: mov qword ptr [rbp+0x48],rbx
0x9b80: mov rbx,rdx
0x9b83: jne 0x9b58
0x9b85: test rax,rax
0x9b88: je 0x9b90
0x9b8a: mov rdi,qword ptr [r12]
0x9b8e: call rax
0x9b90: mov qword ptr [r12],0x0
0x9b98: mov qword ptr [r12+0x8],0x0
0x9ba1: add r12,0x10
0x9ba5: cmp qword ptr [rbp+0x8],r12
0x9ba9: ja 0x9b40
0x9bab: mov qword ptr [rbp+0x18],0x0
0x9bb3: mov qword ptr [rbp+0x20],0x0
0x9bbb: pop rbx
0x9bbc: pop rbp
0x9bbd: pop r12
0x9bbf: ret 
0x9eca: call 0x1ad0
0x9ede: nop 
0xa0c2: nop word ptr [rax+rax]
0xa15f: call 0x1ad0
0xa164: nop 
0xa166: nop word ptr cs:[rax+rax]
0xa1c4: call 0x1ad0
0xa1c9: nop dword ptr [rax]
0xa3ce: call 0x1ad0
0xa3d3: nop word ptr cs:[rax+rax]
0xa3dd: nop dword ptr [rax]
0xa48e: nop 
0xa490: sub rsp,0x8
0xa494: mov edi,0xe
0xa499: call 0x1c60
0xa49e: test rax,rax
0xa4a1: je 0xa4c0
0xa4a3: cmp byte ptr [rax],0x0
0xa4a6: lea rdx,[rip+0x2173]
0xa4ad: cmove rax,rdx
0xa4b1: add rsp,0x8
0xa4b5: ret 
0xa4c0: lea rax,[rip+0x2159]
0xa4c7: add rsp,0x8
0xa4cb: ret 
0xa518: lea rax,[rsp+0x60]
0xa51d: mov dword ptr [rsp],0x18
0xa524: mov ecx,dword ptr [rsp+0x38]
0xa528: mov qword ptr [rsp+0x8],rax
0xa52d: lea rax,[rsp+0x20]
0xa532: mov qword ptr [rsp+0x10],rax
0xa537: jmp 0xa4f0
0xa539: call 0x1ad0
0xa53e: nop 
0xa600: push r12
0xa602: push rbp
0xa603: push rbx
0xa604: mov rbx,rdi
0xa607: call 0x1c10
0xa60c: test eax,eax
0xa60e: mov rdi,rbx
0xa611: js 0xa667
0xa613: call 0x1c90
0xa618: test eax,eax
0xa61a: jne 0xa648
0xa61c: mov rdi,rbx
0xa61f: call 0xa900
0xa624: test eax,eax
0xa626: je 0xa664
0xa628: call 0x19c0
0xa62d: mov r12d,dword ptr [rax]
0xa630: mov rdi,rbx
0xa633: mov rbp,rax
0xa636: call 0x1a40
0xa63b: test r12d,r12d
0xa63e: jne 0xa670
0xa640: pop rbx
0xa641: pop rbp
0xa642: pop r12
0xa644: ret 
0xa648: mov rdi,rbx
0xa64b: call 0x1c10
0xa650: xor esi,esi
0xa652: mov edx,0x1
0xa657: mov edi,eax
0xa659: call 0x1b40
0xa65e: cmp rax,-0x1
0xa662: jne 0xa61c
0xa664: mov rdi,rbx
0xa667: pop rbx
0xa668: pop rbp
0xa669: pop r12
0xa66b: jmp 0x1a40
0xa670: mov dword ptr [rbp],r12d
0xa674: mov eax,0xffffffff
0xa679: jmp 0xa640
0xa8cd: call 0x1ad0
0xa8ea: mov rax,qword ptr [rsp+0x8]
0xa8ef: jmp 0xa7b9
0xa8f4: mov rax,qword ptr [rsp+0x8]
0xa8f9: jmp 0xa811
0xa900: test rdi,rdi
0xa903: push rbx
0xa904: mov rbx,rdi
0xa907: je 0xa91a
0xa909: call 0x1c90
0xa90e: test eax,eax
0xa910: je 0xa91a
0xa912: test dword ptr [rbx],0x100
0xa918: jne 0xa928
0xa91a: mov rdi,rbx
0xa91d: pop rbx
0xa91e: jmp 0x1c50
0xa928: mov rdi,rbx
0xa92b: mov edx,0x1
0xa930: xor esi,esi
0xa932: call 0xa940
0xa937: mov rdi,rbx
0xa93a: pop rbx
0xa93b: jmp 0x1c50
0xa940: mov rax,qword ptr [rdi+0x8]
0xa944: cmp qword ptr [rdi+0x10],rax
0xa948: je 0xa950
0xa94a: jmp 0x1d10
0xa950: mov rax,qword ptr [rdi+0x20]
0xa954: cmp qword ptr [rdi+0x28],rax
0xa958: jne 0xa94a
0xa95a: cmp qword ptr [rdi+0x48],0x0
0xa95f: jne 0xa94a
0xa961: push r12
0xa963: push rbp
0xa964: mov r12d,edx
0xa967: push rbx
0xa968: mov rbp,rsi
0xa96b: mov rbx,rdi
0xa96e: call 0x1c10
0xa973: mov edx,r12d
0xa976: mov rsi,rbp
0xa979: mov edi,eax
0xa97b: call 0x1b40
0xa980: cmp rax,-0x1
0xa984: je 0xa992
0xa986: and dword ptr [rbx],-0x11
0xa989: mov qword ptr [rbx+0x90],rax
0xa990: xor eax,eax
0xa992: pop rbx
0xa993: pop rbp
0xa994: pop r12
0xa996: ret 
0xa9b0: push r15
0xa9b2: push r14
0xa9b4: mov r15,rdx
0xa9b7: push r13
0xa9b9: push r12
0xa9bb: lea r12,[rip+0x203fae]
0xa9c2: push rbp
0xa9c3: lea rbp,[rip+0x203fae]
0xa9ca: push rbx
0xa9cb: mov r13d,edi
0xa9ce: mov r14,rsi
0xa9d1: sub rbp,r12
0xa9d4: sub rsp,0x8
0xa9d8: sar rbp,0x3
0xa9dc: call 0x1970
0xa9e1: test rbp,rbp
0xa9e4: je 0xaa06
0xa9e6: xor ebx,ebx
0xa9e8: nop dword ptr [rax+rax]
0xa9f0: mov rdx,r15
0xa9f3: mov rsi,r14
0xa9f6: mov edi,r13d
0xa9f9: call qword ptr [r12+rbx*8]
0xa9fd: add rbx,0x1
0xaa01: cmp rbp,rbx
0xaa04: jne 0xa9f0
0xaa06: add rsp,0x8
0xaa0a: pop rbx
0xaa0b: pop rbp
0xaa0c: pop r12
0xaa0e: pop r13
0xaa10: pop r14
0xaa12: pop r15
0xaa14: ret 
0xaa20: rep ret 
