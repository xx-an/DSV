0x28c0: sub rsp,0x8
0x28c4: mov rax,qword ptr [rip+0x21a71d]
0x28cb: test rax,rax
0x28ce: je 0x28d2
0x28d0: call rax
0x28d2: add rsp,0x8
0x28d6: ret 
0x28e6: jmp qword ptr [rip+0x21a2ec]
0x2900: jmp qword ptr [rip+0x21a2e2]
0x2910: jmp qword ptr [rip+0x21a2da]
0x2920: jmp qword ptr [rip+0x21a2d2]
0x2940: jmp qword ptr [rip+0x21a2c2]
0x2980: jmp qword ptr [rip+0x21a2a2]
0x2990: jmp qword ptr [rip+0x21a29a]
0x29a0: jmp qword ptr [rip+0x21a292]
0x29b0: jmp qword ptr [rip+0x21a28a]
0x29c0: jmp qword ptr [rip+0x21a282]
0x29d0: jmp qword ptr [rip+0x21a27a]
0x29e0: jmp qword ptr [rip+0x21a272]
0x29f0: jmp qword ptr [rip+0x21a26a]
0x2a00: jmp qword ptr [rip+0x21a262]
0x2a20: jmp qword ptr [rip+0x21a252]
0x2a30: jmp qword ptr [rip+0x21a24a]
0x2a40: jmp qword ptr [rip+0x21a242]
0x2a60: jmp qword ptr [rip+0x21a232]
0x2a70: jmp qword ptr [rip+0x21a22a]
0x2a80: jmp qword ptr [rip+0x21a222]
0x2a90: jmp qword ptr [rip+0x21a21a]
0x2ab0: jmp qword ptr [rip+0x21a20a]
0x2ac0: jmp qword ptr [rip+0x21a202]
0x2ae0: jmp qword ptr [rip+0x21a1f2]
0x2b10: jmp qword ptr [rip+0x21a1da]
0x2b20: jmp qword ptr [rip+0x21a1d2]
0x2b60: jmp qword ptr [rip+0x21a1b2]
0x2b70: jmp qword ptr [rip+0x21a1aa]
0x2ba0: jmp qword ptr [rip+0x21a192]
0x2bd0: jmp qword ptr [rip+0x21a17a]
0x2be0: jmp qword ptr [rip+0x21a172]
0x2bf0: jmp qword ptr [rip+0x21a16a]
0x2c10: jmp qword ptr [rip+0x21a15a]
0x2c20: jmp qword ptr [rip+0x21a152]
0x2c40: jmp qword ptr [rip+0x21a142]
0x2c50: jmp qword ptr [rip+0x21a13a]
0x2c60: jmp qword ptr [rip+0x21a132]
0x2c70: jmp qword ptr [rip+0x21a12a]
0x2ce0: jmp qword ptr [rip+0x21a0f2]
0x2cf0: jmp qword ptr [rip+0x21a0ea]
0x2d10: jmp qword ptr [rip+0x21a0da]
0x2d30: jmp qword ptr [rip+0x21a0ca]
0x2d40: jmp qword ptr [rip+0x21a0c2]
0x2d50: jmp qword ptr [rip+0x21a0ba]
0x2d60: jmp qword ptr [rip+0x21a0b2]
0x2da0: jmp qword ptr [rip+0x21a092]
0x2db0: jmp qword ptr [rip+0x21a08a]
0x2de0: jmp qword ptr [rip+0x21a072]
0x2e00: jmp qword ptr [rip+0x21a062]
0x2e10: jmp qword ptr [rip+0x21a05a]
0x2e50: jmp qword ptr [rip+0x21a03a]
0x2e60: jmp qword ptr [rip+0x21a032]
0x2e70: jmp qword ptr [rip+0x21a02a]
0x2e80: jmp qword ptr [rip+0x21a022]
0x2e90: jmp qword ptr [rip+0x21a01a]
0x2ea0: jmp qword ptr [rip+0x21a012]
0x2eb0: jmp qword ptr [rip+0x21a00a]
0x2ec0: jmp qword ptr [rip+0x21a002]
0x2f00: jmp qword ptr [rip+0x219fe2]
0x2f20: jmp qword ptr [rip+0x219fd2]
0x2f50: jmp qword ptr [rip+0x219fba]
0x2f70: jmp qword ptr [rip+0x219faa]
0x2f80: jmp qword ptr [rip+0x219fa2]
0x2f90: jmp qword ptr [rip+0x219f9a]
0x2fb0: jmp qword ptr [rip+0x219f8a]
0x2fd0: jmp qword ptr [rip+0x219f7a]
0x3000: jmp qword ptr [rip+0x219f62]
0x3020: jmp qword ptr [rip+0x219f52]
0x3040: jmp qword ptr [rip+0x219f42]
0x3060: jmp qword ptr [rip+0x219f32]
0x3070: jmp qword ptr [rip+0x219f2a]
0x3090: jmp qword ptr [rip+0x219f1a]
0x30d8: jmp qword ptr [rip+0x219f1a]
0x3129: nop dword ptr [rax]
0x3386: nop word ptr cs:[rax+rax]
0x343b: test rax,rax
0x343e: mov byte ptr [rip+0x219bdb],0x0
0x3445: je 0x3a4a
0x344b: mov qword ptr [rsp+0x28],rax
0x3450: jmp 0x32f0
0x351e: mov byte ptr [rsp+0x65],0x1
0x3523: mov byte ptr [rip+0x219af6],0x0
0x352a: jmp 0x32f0
0x358f: jmp 0x32f0
0x3609: cmp byte ptr [rsp+0x61],0x0
0x360e: jne 0x3d1a
0x3614: cmp qword ptr [rsp+0x28],0x0
0x361a: jne 0x3d1a
0x3804: test al,al
0x3806: je 0x37a2
0x38c6: call 0x2950
0x38cb: mov rdi,qword ptr [rsp+0x28]
0x38d0: mov dword ptr [rax],0x5f
0x38d6: mov rbx,rax
0x38d9: call 0xf6c0
0x38de: lea rsi,[rip+0x13beb]
0x38e5: mov edx,0x5
0x38ea: xor edi,edi
0x38ec: mov rbp,rax
0x38ef: call 0x2ad0
0x38f4: mov esi,dword ptr [rbx]
0x38f6: mov rdx,rax
0x38f9: mov rcx,rbp
0x38fc: mov edi,0x1
0x3901: xor eax,eax
0x3903: call 0x2f30
0x3a1f: mov r13d,eax
0x3a22: jmp 0x388e
0x3a4a: mov byte ptr [rsp+0x61],0x1
0x3a4f: jmp 0x32f0
0x3a75: jmp 0x36dc
0x3a9b: jmp 0x3719
0x3ab5: test al,al
0x3ab7: je 0x3acd
0x3ab9: mov rdx,qword ptr [rsp+0x8]
0x3abe: mov rsi,rbp
0x3ac1: mov rdi,rbx
0x3ac4: call 0x4260
0x3ac9: movzx r13d,al
0x3acd: and r13d,0x1
0x3ad1: mov eax,r13d
0x3ad4: xor eax,0x1
0x3ad7: jmp 0x388a
0x3d15: jmp 0x337c
0x3d1a: lea rsi,[rip+0x1377f]
0x3d21: mov edx,0x5
0x3d26: xor edi,edi
0x3d28: call 0x2ad0
0x3d2d: xor esi,esi
0x3d2f: mov rdx,rax
0x3d32: mov edi,0x1
0x3d37: xor eax,eax
0x3d39: call 0x2f30
0x3d96: jmp 0x337c
0x3e04: call 0x2b30
0x3e2d: nop dword ptr [rax]
0x3e5a: hlt 
0x3e5b: nop dword ptr [rax+rax]
0x3e60: lea rdi,[rip+0x219261]
0x3e67: push rbp
0x3e68: lea rax,[rip+0x219259]
0x3e6f: cmp rax,rdi
0x3e72: mov rbp,rsp
0x3e75: je 0x3e90
0x3e77: mov rax,qword ptr [rip+0x21915a]
0x3e7e: test rax,rax
0x3e81: je 0x3e90
0x3e83: pop rbp
0x3e84: jmp rax
0x3e90: pop rbp
0x3e91: ret 
0x3ea0: lea rdi,[rip+0x219221]
0x3ea7: lea rsi,[rip+0x21921a]
0x3eae: push rbp
0x3eaf: sub rsi,rdi
0x3eb2: mov rbp,rsp
0x3eb5: sar rsi,0x3
0x3eb9: mov rax,rsi
0x3ebc: shr rax,0x3f
0x3ec0: add rsi,rax
0x3ec3: sar rsi
0x3ec6: je 0x3ee0
0x3ec8: mov rax,qword ptr [rip+0x219121]
0x3ecf: test rax,rax
0x3ed2: je 0x3ee0
0x3ed4: pop rbp
0x3ed5: jmp rax
0x3ee0: pop rbp
0x3ee1: ret 
0x3f01: push rbp
0x3f02: mov rbp,rsp
0x3f05: je 0x3f13
0x3f07: mov rdi,qword ptr [rip+0x2190fa]
0x3f0e: call 0x30d8
0x3f13: call 0x3e60
0x3f18: mov byte ptr [rip+0x219209],0x1
0x3f1f: pop rbp
0x3f20: ret 
0x3f30: push rbp
0x3f31: mov rbp,rsp
0x3f34: pop rbp
0x3f35: jmp 0x3ea0
0x3fd2: mov esi,0x1
0x3fd7: mov rdi,rbp
0x3fda: call 0x102f0
0x3fdf: mov rdi,rbp
0x3fe2: call 0x10450
0x3fe7: xor eax,eax
0x3fe9: mov rbx,qword ptr [rsp+0x18]
0x3fee: xor rbx,qword ptr fs:0x28
0x3ff7: jne 0x40ca
0x3ffd: add rsp,0x28
0x4001: pop rbx
0x4002: pop rbp
0x4003: pop r12
0x4005: pop r13
0x4007: ret 
0x4033: mov rdx,qword ptr [rsp+0x8]
0x4038: mov rsi,rbp
0x403b: mov rdi,rbx
0x403e: mov rcx,rdx
0x4041: lea rdx,[rip+0x1a8]
0x4048: call 0xcd60
0x404d: cmp rax,-0x1
0x4051: je 0x40cf
0x4053: mov eax,0x1
0x4058: jmp 0x3fe9
0x4064: mov r13d,eax
0x4067: call 0x2950
0x406c: mov rdi,rbp
0x406f: mov r12d,dword ptr [rax]
0x4072: call 0x10450
0x4077: xor eax,eax
0x4079: cmp r13d,0x0
0x407d: jg 0x3fe9
0x4083: mov eax,0x1
0x4088: jge 0x3fe9
0x408e: mov rsi,rbx
0x4091: mov edi,0x4
0x4096: call 0xf3f0
0x409b: lea rsi,[rip+0x12322]
0x40a2: mov rbx,rax
0x40a5: mov edx,0x5
0x40aa: xor edi,edi
0x40ac: call 0x2ad0
0x40b1: mov rcx,rbx
0x40b4: mov rdx,rax
0x40b7: mov esi,r12d
0x40ba: xor eax,eax
0x40bc: xor edi,edi
0x40be: call 0x2f30
0x40c3: xor eax,eax
0x40c5: jmp 0x3fe9
0x40ca: call 0x2b30
0x40cf: mov rsi,rbx
0x40d2: mov edi,0x4
0x40d7: call 0xf3f0
0x40dc: lea rsi,[rip+0x122e1]
0x40e3: mov edx,0x5
0x40e8: xor edi,edi
0x40ea: mov rbp,rax
0x40ed: call 0x2ad0
0x40f2: mov rbx,rax
0x40f5: call 0x2950
0x40fa: mov esi,dword ptr [rax]
0x40fc: mov rcx,rbp
0x40ff: xor eax,eax
0x4101: mov rdx,rbx
0x4104: xor edi,edi
0x4106: call 0x2f30
0x410b: xor eax,eax
0x410d: jmp 0x3fe9
0x4171: call 0x2950
0x4176: mov dword ptr [rax],0x5f
0x4190: push rbx
0x4191: mov rsi,rdi
0x4194: mov edi,0x4
0x4199: call 0xf3f0
0x419e: lea rsi,[rip+0x1223a]
0x41a5: mov rbx,rax
0x41a8: mov edx,0x5
0x41ad: xor edi,edi
0x41af: call 0x2ad0
0x41b4: mov rdx,rbx
0x41b7: mov rdi,qword ptr [rip+0x218f2a]
0x41be: mov rsi,rax
0x41c1: pop rbx
0x41c2: xor eax,eax
0x41c4: jmp 0x4d70
0x41d0: cmp byte ptr [rsi+0x2e],0x0
0x41d4: jne 0x41e0
0x41d6: rep ret 
0x41e0: jmp 0x4190
0x41f0: push r12
0x41f2: push rbp
0x41f3: mov r12,rdi
0x41f6: push rbx
0x41f7: mov rbp,rsi
0x41fa: mov rbx,rdx
0x41fd: sub rsp,0x10
0x4201: cmp byte ptr [rdx+0x21],0x0
0x4205: je 0x4212
0x4207: call 0x2950
0x420c: mov dword ptr [rax],0x5f
0x4212: mov esi,0x1ed
0x4217: mov rdi,rbp
0x421a: call 0x29c0
0x421f: test eax,eax
0x4221: jne 0x4229
0x4223: cmp byte ptr [rbx+0x2e],0x0
0x4227: jne 0x4238
0x4229: add rsp,0x10
0x422d: pop rbx
0x422e: pop rbp
0x422f: pop r12
0x4231: ret 
0x4238: mov rdi,r12
0x423b: mov dword ptr [rsp+0xc],eax
0x423f: call 0x4190
0x4244: mov eax,dword ptr [rsp+0xc]
0x4248: add rsp,0x10
0x424c: pop rbx
0x424d: pop rbp
0x424e: pop r12
0x4250: ret 
0x42e2: test al,al
0x42e4: jne 0x4323
0x42e6: xor ebx,ebx
0x43d5: jmp 0x42e6
0x443b: lea rdx,[rsp+0x140]
0x4443: mov rsi,rbp
0x4446: mov edi,0x1
0x444b: call 0x2b00
0x4450: test eax,eax
0x4452: jne 0x42e8
0x4458: cmp byte ptr [rip+0x218bb1],0x0
0x445f: je 0x446b
0x4461: cmp byte ptr [rbp],0x2f
0x4465: je 0x47d1
0x446b: mov byte ptr [rip+0x218b9e],0x0
0x4472: call 0x2950
0x4477: mov dword ptr [rax],0x5f
0x447d: jmp 0x42e8
0x4575: cmp byte ptr [rbx+0x25],0x0
0x4579: jne 0x490a
0x4686: cmp byte ptr [rip+0x218993],0x0
0x468d: je 0x42e8
0x4693: jmp 0x442e
0x471a: jmp 0x4749
0x4749: mov rdi,rbp
0x474c: call 0x2960
0x4751: test eax,eax
0x4753: je 0x42e6
0x4759: mov rsi,rbp
0x475c: mov edi,0x4
0x4761: call 0xf3f0
0x4766: lea rsi,[rip+0x11ccf]
0x476d: mov edx,0x5
0x4772: xor edi,edi
0x4774: mov rbp,rax
0x4777: call 0x2ad0
0x477c: mov rbx,rax
0x477f: call 0x2950
0x4784: mov esi,dword ptr [rax]
0x4786: mov rcx,rbp
0x4789: mov rdx,rbx
0x478c: mov edi,0x1
0x4791: xor eax,eax
0x4793: call 0x2f30
0x4798: nop dword ptr [rax+rax]
0x47d1: movzx edx,byte ptr [rbp+0x1]
0x47d5: lea rax,[rbp+0x1]
0x47d9: cmp dl,0x2f
0x47dc: jne 0x47ec
0x47de: nop 
0x47e0: add rax,0x1
0x47e4: movzx edx,byte ptr [rax]
0x47e7: cmp dl,0x2f
0x47ea: je 0x47e0
0x47ec: test dl,dl
0x47ee: je 0x446b
0x47f4: mov rdx,rax
0x47f7: jmp 0x47fe
0x47f9: cmp cl,0x2f
0x47fc: je 0x4809
0x47fe: add rdx,0x1
0x4802: movzx ecx,byte ptr [rdx]
0x4805: test cl,cl
0x4807: jne 0x47f9
0x4809: lea rbp,[rax-0x1]
0x480d: sub rdx,rbp
0x4810: lea rdi,[rdx+0x2]
0x4814: mov r12,rdx
0x4817: call 0x2df0
0x481c: test rax,rax
0x481f: mov r13,rax
0x4822: je 0x446b
0x4828: mov rdx,r12
0x482b: mov rsi,rbp
0x482e: mov rdi,rax
0x4831: call 0x2ea0
0x4836: mov rdi,r13
0x4839: mov word ptr [rax],0x2f
0x483e: call 0x30d0
0x4843: jmp 0x446b
0x4848: call 0x2b30
0x48cc: jmp 0x42ca
0x4905: jmp 0x42ca
0x490a: call 0x2950
0x490f: mov dword ptr [rax],0x5f
0x4915: jmp 0x42ca
0x4d70: push rbp
0x4d71: push rbx
0x4d72: mov rbp,rsi
0x4d75: mov rbx,rdi
0x4d78: sub rsp,0xd8
0x4d7f: test al,al
0x4d81: mov qword ptr [rsp+0x30],rdx
0x4d86: mov qword ptr [rsp+0x38],rcx
0x4d8b: mov qword ptr [rsp+0x40],r8
0x4d90: mov qword ptr [rsp+0x48],r9
0x4d95: je 0x4dce
0x4d97: movaps [rsp+0x50],xmm0
0x4d9c: movaps [rsp+0x60],xmm1
0x4da1: movaps [rsp+0x70],xmm2
0x4da6: movaps [rsp+0x80],xmm3
0x4dae: movaps [rsp+0x90],xmm4
0x4db6: movaps [rsp+0xa0],xmm5
0x4dbe: movaps [rsp+0xb0],xmm6
0x4dc6: movaps [rsp+0xc0],xmm7
0x4dce: mov rsi,rbx
0x4dd1: mov rax,qword ptr fs:0x28
0x4dda: mov qword ptr [rsp+0x18],rax
0x4ddf: xor eax,eax
0x4de1: mov rdi,qword ptr [rip+0x21a7d8]
0x4de8: call 0x2cb0
0x4ded: lea rdi,[rip+0x128b2]
0x4df4: mov rcx,rbx
0x4df7: mov edx,0x2
0x4dfc: mov esi,0x1
0x4e01: call 0x2e70
0x4e06: lea rax,[rsp+0xf0]
0x4e0e: mov rdx,rsp
0x4e11: mov rsi,rbp
0x4e14: mov rdi,rbx
0x4e17: mov dword ptr [rsp],0x10
0x4e1e: mov dword ptr [rsp+0x4],0x30
0x4e26: mov qword ptr [rsp+0x8],rax
0x4e2b: lea rax,[rsp+0x20]
0x4e30: mov qword ptr [rsp+0x10],rax
0x4e35: call 0x128c0
0x4e3a: mov rax,qword ptr [rbx+0x28]
0x4e3e: cmp rax,qword ptr [rbx+0x30]
0x4e42: jae 0x4e70
0x4e44: lea rdx,[rax+0x1]
0x4e48: mov qword ptr [rbx+0x28],rdx
0x4e4c: mov byte ptr [rax],0xa
0x4e4f: mov rax,qword ptr [rsp+0x18]
0x4e54: xor rax,qword ptr fs:0x28
0x4e5d: jne 0x4e7f
0x4e5f: add rsp,0xd8
0x4e66: pop rbx
0x4e67: pop rbp
0x4e68: ret 
0x4e70: mov esi,0xa
0x4e75: mov rdi,rbx
0x4e78: call 0x2b90
0x4e7d: jmp 0x4e4f
0x4e7f: call 0x2b30
0x4e84: nop word ptr cs:[rax+rax]
0x4e8e: nop 
0x4e90: and esi,0xf000
0x4e96: cmp esi,0xa000
0x4e9c: je 0x4eb8
0x4e9e: push rbx
0x4e9f: mov rbx,rdi
0x4ea2: call 0x11fd0
0x4ea7: test al,al
0x4ea9: je 0x4ec0
0x4eab: mov eax,0x1
0x4eb0: pop rbx
0x4eb1: ret 
0x4eb8: mov eax,0x1
0x4ebd: ret 
0x4ec0: mov rdi,rbx
0x4ec3: mov esi,0x2
0x4ec8: call 0x2fd0
0x4ecd: test eax,eax
0x4ecf: sete al
0x4ed2: pop rbx
0x4ed3: ret 
0x4f00: sub rbx,rax
0x4f03: je 0x4f38
0x4f05: cmp qword ptr [rip+0x21812c],rbx
0x4f0c: mov rbp,rbx
0x4f0f: mov rsi,qword ptr [rip+0x21a66a]
0x4f16: cmovbe rbp,qword ptr [rip+0x21811a]
0x4f1e: mov edi,r12d
0x4f21: mov rdx,rbp
0x4f24: call 0xb930
0x4f29: cmp rax,rbp
0x4f2c: je 0x4f00
0x4f2e: pop rbx
0x4f2f: xor eax,eax
0x4f31: pop rbp
0x4f32: pop r12
0x4f34: ret 
0x5090: push r13
0x5092: push r12
0x5094: movzx r9d,dl
0x5098: push rbp
0x5099: push rbx
0x509a: mov edx,0xffffff9c
0x509f: mov r13,rdi
0x50a2: mov r12,rsi
0x50a5: mov ebp,ecx
0x50a7: sub rsp,0x10
0x50ab: test r8b,r8b
0x50ae: mov rcx,rsi
0x50b1: setne r8b
0x50b5: push -0x1
0x50b7: mov rsi,rdi
0x50ba: movzx r8d,r8b
0x50be: mov edi,edx
0x50c0: shl r8d,0xa
0x50c4: call 0xa470
0x50c9: test eax,eax
0x50cb: mov ebx,eax
0x50cd: pop rdx
0x50ce: pop rcx
0x50cf: jg 0x5138
0x50d1: shr ebx,0x1f
0x50d4: and bl,bpl
0x50d7: jne 0x50f0
0x50d9: add rsp,0x8
0x50dd: mov ebx,0x1
0x50e2: mov eax,ebx
0x50e4: pop rbx
0x50e5: pop rbp
0x50e6: pop r12
0x50e8: pop r13
0x50ea: ret 
0x50f0: mov rsi,r12
0x50f3: mov edi,0x4
0x50f8: call 0xf3f0
0x50fd: lea rsi,[rip+0x12c0c]
0x5104: mov rbp,rax
0x5107: mov edx,0x5
0x510c: xor edi,edi
0x510e: call 0x2ad0
0x5113: mov rdx,rbp
0x5116: mov rsi,rax
0x5119: mov edi,0x1
0x511e: xor eax,eax
0x5120: call 0x2ee0
0x5125: add rsp,0x8
0x5129: mov eax,ebx
0x512b: pop rbx
0x512c: pop rbp
0x512d: pop r12
0x512f: pop r13
0x5131: ret 
0x5138: mov rdx,r13
0x513b: mov esi,0x4
0x5140: mov edi,0x1
0x5145: call 0xf2d0
0x514a: mov rdx,r12
0x514d: mov esi,0x4
0x5152: xor edi,edi
0x5154: mov r13,rax
0x5157: call 0xf2d0
0x515c: lea rsi,[rip+0x12585]
0x5163: mov rbp,rax
0x5166: mov edx,0x5
0x516b: xor edi,edi
0x516d: call 0x2ad0
0x5172: mov r8,r13
0x5175: mov rcx,rbp
0x5178: mov rdx,rax
0x517b: mov esi,ebx
0x517d: xor eax,eax
0x517f: xor edi,edi
0x5181: call 0x2f30
0x5186: xor ebx,ebx
0x5188: add rsp,0x8
0x518c: mov eax,ebx
0x518e: pop rbx
0x518f: pop rbp
0x5190: pop r12
0x5192: pop r13
0x5194: ret 
0x51a0: push r14
0x51a2: push r13
0x51a4: mov r13,rdi
0x51a7: push r12
0x51a9: push rbp
0x51aa: mov rbp,rdx
0x51ad: push rbx
0x51ae: mov rbx,rsi
0x51b1: mov rdi,rbx
0x51b4: sub rsp,0x20
0x51b8: mov esi,dword ptr [rdx]
0x51ba: mov rax,qword ptr fs:0x28
0x51c3: mov qword ptr [rsp+0x18],rax
0x51c8: xor eax,eax
0x51ca: call 0x4e90
0x51cf: test al,al
0x51d1: jne 0x5268
0x51d7: mov edi,dword ptr [rbp]
0x51da: lea r12,[rsp+0xc]
0x51df: mov rsi,r12
0x51e2: call 0xb5f0
0x51e7: mov ebp,dword ptr [rbp]
0x51ea: mov rsi,rbx
0x51ed: mov edi,0x4
0x51f2: mov byte ptr [rsp+0x16],0x0
0x51f7: call 0xf3f0
0x51fc: and ebp,0xfff
0x5202: cmp byte ptr [r13+0x18],0x0
0x5207: mov r14,rax
0x520a: mov rbx,qword ptr [rip+0x21a3af]
0x5211: mov edx,0x5
0x5216: jne 0x5226
0x5218: test dword ptr [r13+0x14],0xffff00
0x5220: je 0x52d0
0x5226: lea rsi,[rip+0x124e3]
0x522d: xor edi,edi
0x522f: call 0x2ad0
0x5234: mov rdx,rax
0x5237: sub rsp,0x8
0x523b: add r12,0x1
0x523f: mov rdi,qword ptr [rip+0x217eda]
0x5246: push r12
0x5248: mov r9,rbp
0x524b: mov r8,r14
0x524e: mov rcx,rbx
0x5251: mov esi,0x1
0x5256: xor eax,eax
0x5258: call 0x3050
0x525d: pop rax
0x525e: pop rdx
0x525f: jmp 0x52ae
0x5268: mov rsi,rbx
0x526b: mov edi,0x4
0x5270: call 0xf3f0
0x5275: lea rsi,[rip+0x12aa0]
0x527c: mov rbx,qword ptr [rip+0x21a33d]
0x5283: mov edx,0x5
0x5288: xor edi,edi
0x528a: mov rbp,rax
0x528d: call 0x2ad0
0x5292: mov rdi,qword ptr [rip+0x217e87]
0x5299: mov rdx,rax
0x529c: mov r8,rbp
0x529f: mov rcx,rbx
0x52a2: mov esi,0x1
0x52a7: xor eax,eax
0x52a9: call 0x3050
0x52ae: call 0x126c0
0x52b3: mov rcx,qword ptr [rsp+0x18]
0x52b8: xor rcx,qword ptr fs:0x28
0x52c1: jne 0x52e6
0x52c3: add rsp,0x20
0x52c7: pop rbx
0x52c8: pop rbp
0x52c9: pop r12
0x52cb: pop r13
0x52cd: pop r14
0x52cf: ret 
0x52d0: lea rsi,[rip+0x12469]
0x52d7: xor edi,edi
0x52d9: call 0x2ad0
0x52de: mov rdx,rax
0x52e1: jmp 0x5237
0x52e6: call 0x2b30
0x52eb: nop dword ptr [rax+rax]
0x5380: add rsp,0x8
0x5384: xor eax,eax
0x5386: pop rbx
0x5387: pop rbp
0x5388: pop r12
0x538a: pop r13
0x538c: ret 
0x5759: jmp 0x54b5
0x57ae: jmp 0x54b5
0x57d4: mov r13,rdi
0x57d7: call 0x2950
0x57dc: cmp byte ptr [rbp+0x23],0x0
0x57e0: mov r12,rax
0x57e3: jne 0x5860
0x57e5: mov rsi,r13
0x57e8: mov edi,0x4
0x57ed: mov dword ptr [r12],0x5f
0x57f5: call 0xf3f0
0x57fa: lea rsi,[rip+0x11f77]
0x5801: mov edx,0x5
0x5806: xor edi,edi
0x5808: mov rbx,rax
0x580b: call 0x2ad0
0x5810: mov esi,dword ptr [r12]
0x5814: mov rcx,rbx
0x5817: mov rdx,rax
0x581a: xor edi,edi
0x581c: xor eax,eax
0x581e: call 0x2f30
0x5823: movzx ebx,byte ptr [rbp+0x26]
0x5827: add rsp,0x8
0x582b: xor ebx,0x1
0x582e: mov eax,ebx
0x5830: pop rbx
0x5831: pop rbp
0x5832: pop r12
0x5834: pop r13
0x5836: ret 
0x5860: movzx ebx,byte ptr [rbp+0x26]
0x5864: test bl,bl
0x5866: jne 0x57e5
0x586c: mov dword ptr [rax],0x5f
0x5872: jmp 0x5827
0x5878: call 0x2950
0x587d: mov dword ptr [rax],0x5f
0x5883: add rsp,0x8
0x5887: mov eax,ebx
0x5889: pop rbx
0x588a: pop rbp
0x588b: pop r12
0x588d: pop r13
0x588f: ret 
0x58ea: pop rbx
0x58eb: xor eax,eax
0x58ed: pop rbp
0x58ee: pop r12
0x58f0: ret 
0x5940: lea r8,[rip+0x73f9]
0x5947: lea rcx,[rip+0x7382]
0x594e: xor esi,esi
0x5950: lea rdx,[rip+0x7369]
0x5957: push rbx
0x5958: mov rbx,rdi
0x595b: mov edi,0x3d
0x5960: call 0xc220
0x5965: mov qword ptr [rbx+0x48],rax
0x5969: pop rbx
0x596a: ret 
0x5a40: mov edi,ebx
0x5a42: call 0x2f80
0x5a47: test eax,eax
0x5a49: je 0x5a9c
0x5a4b: call 0x2950
0x5a50: mov r14d,dword ptr [rax]
0x5a53: mov r15,rax
0x5a56: cmp r14d,0x1
0x5a5a: je 0x5bc8
0x5a60: cmp r14d,0x16
0x5a64: je 0x5bc8
0x5b6a: jmp 0x5bac
0x5bc8: mov edx,r12d
0x5bcb: mov esi,0xffffffff
0x5bd0: mov edi,ebx
0x5bd2: call 0x2f80
0x5bd7: mov dword ptr [r15],r14d
0x5bda: jmp 0x5a6a
0x5ca2: test r15d,r15d
0x5ca5: js 0x5f40
0x5cab: mov rax,qword ptr [rbp-0x320]
0x5cb2: test r15d,r15d
0x5cb5: sete r14b
0x5cb9: test rax,rax
0x5cbc: je 0x5cc1
0x5cbe: mov byte ptr [rax],r14b
0x5d7c: cmp eax,0x3
0x5d7f: sete al
0x5d82: movzx eax,al
0x5d85: and eax,r13d
0x5d88: mov dword ptr [rbp-0x328],eax
0x5e35: cmp dword ptr [rbx+0x4],0x2
0x5e39: je 0x71b0
0x5e49: mov eax,dword ptr [rbp-0x314]
0x5e4f: and eax,0xf000
0x5e54: cmp eax,0x4000
0x5e59: je 0x7280
0x5e5f: xor ecx,ecx
0x5e61: cmp byte ptr [rbx+0x1f],0x0
0x5e65: je 0x5e85
0x5e67: cmp byte ptr [rbx+0x18],0x0
0x5e6b: mov ecx,0x1
0x5e70: je 0x5e85
0x5e72: xor ecx,ecx
0x5e74: mov rax,qword ptr [rbp-0x280]
0x5e7b: cmp qword ptr [rbp-0x1f0],rax
0x5e82: setne cl
0x5e85: lea r10,[rbp-0x280]
0x5e8c: mov rdi,qword ptr [rbp-0x308]
0x5e93: lea rsi,[rbp-0x1f0]
0x5e9a: mov byte ptr [rbp-0x358],r9b
0x5ea1: mov byte ptr [rbp-0x350],r8b
0x5ea8: mov rdx,r10
0x5eab: call 0x11120
0x5eb0: test eax,eax
0x5eb2: movzx r8d,byte ptr [rbp-0x350]
0x5eba: movzx r9d,byte ptr [rbp-0x358]
0x5ec2: js 0x6e10
0x5ec8: mov rax,qword ptr [rbp-0x320]
0x5ecf: test rax,rax
0x5ed2: je 0x5ed7
0x5ed4: mov byte ptr [rax],0x1
0x5ed7: mov rdx,qword ptr [rbp-0x280]
0x5ede: mov rsi,qword ptr [rbp-0x278]
0x5ee5: mov rdi,qword ptr [rbp-0x308]
0x5eec: call 0x9fc0
0x5ef1: test rax,rax
0x5ef4: je 0x6460
0x5efa: movzx ecx,byte ptr [rbx+0x2e]
0x5efe: mov r8d,dword ptr [rbp-0x328]
0x5f05: mov edx,0x1
0x5f0a: mov rsi,qword ptr [rbp-0x308]
0x5f11: mov rdi,rax
0x5f14: call 0x5090
0x5f19: test al,al
0x5f1b: jne 0x6460
0x5f21: cmp byte ptr [rbx+0x25],0x0
0x5f25: jne 0x6d30
0x5f2b: nop dword ptr [rax+rax]
0x5f40: mov edx,0xffffff9c
0x5f45: mov rcx,rsi
0x5f48: mov r8d,0x1
0x5f4e: mov rsi,rdi
0x5f51: mov edi,edx
0x5f53: call 0xf6e0
0x5f58: test eax,eax
0x5f5a: jne 0x6ad0
0x5f60: mov rax,qword ptr [rbp-0x320]
0x5f67: mov r14d,r12d
0x5f6a: test rax,rax
0x5f6d: je 0x5f78
0x5f6f: mov byte ptr [rax],0x1
0x5f72: nop word ptr [rax+rax]
0x5f78: cmp byte ptr [rbx+0x31],0x0
0x5f7c: jne 0x5f90
0x5f7e: mov r12,qword ptr [rbp-0x308]
0x5f85: xor r15d,r15d
0x5f88: jmp 0x5cdb
0x5f90: xor r15d,r15d
0x5f93: jmp 0x5d28
0x5fa0: xor r9d,r9d
0x5fa3: mov qword ptr [rbp-0x350],0x0
0x6063: jmp 0x6466
0x608f: mov eax,dword ptr [rbp-0x314]
0x6095: and eax,0xf000
0x609a: cmp eax,0x4000
0x609f: je 0x6c70
0x6164: cmp byte ptr [rbx+0x16],0x0
0x6168: mov edx,0x1
0x616d: jne 0x6178
0x616f: xor edx,edx
0x6171: cmp dword ptr [rbx+0x8],0x3
0x6175: sete dl
0x6178: mov r8d,dword ptr [rbp-0x328]
0x617f: mov rsi,qword ptr [rbp-0x308]
0x6186: xor ecx,ecx
0x6188: mov rdi,qword ptr [rbp-0x310]
0x618f: call 0x5090
0x6194: test al,al
0x6196: je 0x6bb0
0x619c: xor r8d,r8d
0x62ea: cmp byte ptr [rbx+0x24],0x0
0x62ee: jne 0x5f30
0x62f4: nop dword ptr [rax]
0x642a: cmp byte ptr [rbx+0x2e],0x0
0x642e: jne 0x6fb0
0x6434: cmp byte ptr [rbx+0x21],0x0
0x6438: jne 0x6f90
0x643e: mov rax,qword ptr [rbp-0x320]
0x6445: test rax,rax
0x6448: je 0x644d
0x644a: mov byte ptr [rax],0x1
0x644d: test r13b,r13b
0x6450: je 0x6460
0x6452: cmp byte ptr [rbx+0x31],0x0
0x6456: je 0x6ec8
0x645c: nop dword ptr [rax]
0x6460: mov r12d,0x1
0x64d8: cmp dword ptr [rbx+0x8],0x2
0x64dc: je 0x5d28
0x64e2: jmp 0x5cdb
0x64f0: call 0x2b00
0x64f5: test eax,eax
0x64f7: mov rsi,r12
0x64fa: setne al
0x64fd: test al,al
0x64ff: je 0x5d0c
0x6541: jmp 0x6466
0x6550: cmp qword ptr [rbp-0x270],0x1
0x6558: je 0x7588
0x655e: cmp byte ptr [rbx+0x22],0x0
0x6562: mov qword ptr [rbp-0x358],0x0
0x656d: je 0x6579
0x656f: cmp byte ptr [rbx+0x17],0x0
0x6573: je 0x6d38
0x6579: cmp r15d,0x11
0x657d: jne 0x65ab
0x657f: mov rsi,qword ptr [rbp-0x308]
0x6586: mov rdi,qword ptr [rbp-0x310]
0x658d: call 0x2fa0
0x6592: test eax,eax
0x6594: je 0x642a
0x659a: call 0x2950
0x659f: mov r15d,dword ptr [rax]
0x65a2: test r15d,r15d
0x65a5: je 0x642a
0x65ab: cmp r15d,0x16
0x65af: je 0x75d0
0x65b5: cmp r15d,0x12
0x65b9: jne 0x6d88
0x65bf: mov r12d,dword ptr [rbp-0x314]
0x65c6: mov rdi,qword ptr [rbp-0x308]
0x65cd: and r12d,0xf000
0x65d4: cmp r12d,0x4000
0x65db: je 0x7640
0x65e1: call 0x2960
0x65e6: test eax,eax
0x65e8: je 0x65fb
0x65ea: call 0x2950
0x65ef: cmp dword ptr [rax],0x2
0x65f2: mov r14,rax
0x65f5: jne 0x765e
0x65fb: cmp r12d,0x4000
0x6602: setne dl
0x6605: and dl,byte ptr [rbx+0x2e]
0x6608: mov r14d,edx
0x660b: jne 0x7f50
0x6611: mov dword ptr [rbp-0x320],0x1
0x661b: mov r14d,0x1
0x6621: jmp 0x60d0
0x6700: cmp dword ptr [rbx+0x8],0x2
0x6704: jne 0x5da1
0x670a: xor r8d,r8d
0x670d: xor r9d,r9d
0x6710: jmp 0x5e3f
0x6718: mov ecx,dword ptr [rbp-0x320]
0x671e: mov edx,dword ptr [rbp-0x314]
0x6724: mov r8,rbx
0x6727: mov rsi,qword ptr [rbp-0x308]
0x672e: mov rdi,qword ptr [rbp-0x310]
0x6735: call 0x57c0
0x673a: test al,al
0x673c: je 0x5f30
0x6742: mov r15d,dword ptr [rbp-0x314]
0x6749: mov eax,r12d
0x674c: and eax,0x3f
0x674f: mov dword ptr [rbp-0x35c],eax
0x6755: and r15d,0xf000
0x675c: cmp r15d,0x4000
0x6763: jne 0x6148
0x6769: mov rax,qword ptr [rbp-0x330]
0x6770: mov rdx,qword ptr [rbp-0x278]
0x6777: mov rcx,qword ptr [rbp-0x280]
0x677e: test rax,rax
0x6781: jne 0x679c
0x6783: jmp 0x7080
0x6790: mov rax,qword ptr [rax]
0x6793: test rax,rax
0x6796: je 0x7080
0x679c: cmp qword ptr [rax+0x8],rdx
0x67a0: jne 0x6790
0x67a2: cmp qword ptr [rax+0x10],rcx
0x67a6: jne 0x6790
0x67a8: mov rsi,qword ptr [rbp-0x310]
0x67af: mov edi,0x4
0x67b4: call 0xf3f0
0x67b9: lea rsi,[rip+0x113c8]
0x67c0: mov r12,rax
0x67c3: mov edx,0x5
0x67c8: xor edi,edi
0x67ca: call 0x2ad0
0x67cf: mov rcx,r12
0x67d2: mov rdx,rax
0x67d5: xor esi,esi
0x67d7: xor edi,edi
0x67d9: xor eax,eax
0x67db: call 0x2f30
0x67e0: jmp 0x6bb0
0x6819: lea rsi,[rip+0x10fd8]
0x6820: xor edi,edi
0x6822: call 0x2ad0
0x6827: mov rdx,rax
0x6838: jmp 0x6466
0x686d: mov rsi,qword ptr [rbp-0x308]
0x6874: lea rdx,[rbp-0x1d8]
0x687b: mov rdi,rbx
0x687e: mov byte ptr [rbp-0x358],r9b
0x6885: mov byte ptr [rbp-0x350],r8b
0x688c: call 0x51a0
0x6891: test al,al
0x6893: movzx r8d,byte ptr [rbp-0x350]
0x689b: movzx r9d,byte ptr [rbp-0x358]
0x68a3: je 0x6460
0x68a9: nop dword ptr [rax]
0x6904: cmp byte ptr [rbx+0x18],0x0
0x6908: jne 0x7ba7
0x690e: mov rdi,qword ptr [rbp-0x310]
0x6915: mov byte ptr [rbp-0x358],r9b
0x691c: mov byte ptr [rbp-0x350],r8b
0x6923: call 0xb3a0
0x6928: cmp byte ptr [rax],0x2e
0x692b: mov r14,rax
0x692e: movzx r8d,byte ptr [rbp-0x350]
0x6936: movzx r9d,byte ptr [rbp-0x358]
0x693e: jne 0x6967
0x6940: xor eax,eax
0x6942: xor edx,edx
0x6944: cmp byte ptr [r14+0x1],0x2e
0x6949: sete dl
0x694c: movzx edx,byte ptr [r14+rdx+0x1]
0x6952: test dl,dl
0x6954: je 0x7428
0x695a: cmp dl,0x2f
0x695d: je 0x7428
0x6963: test al,al
0x6965: jne 0x697d
0x6967: mov eax,dword ptr [rbp-0x1d8]
0x696d: and eax,0xf000
0x6972: cmp eax,0x4000
0x6977: je 0x7447
0x697d: cmp r15d,0x3
0x6981: je 0x69e9
0x6983: mov rdi,r14
0x6986: mov byte ptr [rbp-0x35c],r9b
0x698d: call 0x2af0
0x6992: mov rdi,qword ptr [rbp-0x308]
0x6999: mov qword ptr [rbp-0x350],rax
0x69a0: call 0xb3a0
0x69a5: mov rdi,rax
0x69a8: mov qword ptr [rbp-0x358],rax
0x69af: call 0x2af0
0x69b4: mov r15,qword ptr [rip+0x218be5]
0x69bb: mov r12,rax
0x69be: mov rdi,r15
0x69c1: call 0x2af0
0x69c6: mov r8,rax
0x69c9: lea rax,[r12+rax]
0x69cd: cmp qword ptr [rbp-0x350],rax
0x69d4: mov rsi,qword ptr [rbp-0x358]
0x69db: movzx r9d,byte ptr [rbp-0x35c]
0x69e3: je 0x843e
0x69e9: mov edx,dword ptr [rbx]
0x69eb: mov rsi,qword ptr [rbp-0x308]
0x69f2: mov edi,0xffffff9c
0x69f7: mov byte ptr [rbp-0x350],r9b
0x69fe: call 0xaf80
0x6a03: test rax,rax
0x6a06: mov r12,rax
0x6a09: movzx r9d,byte ptr [rbp-0x350]
0x6a11: je 0x8331
0x6a17: mov rdi,rax
0x6a1a: mov byte ptr [rbp-0x358],r9b
0x6a21: mov r14d,0x1
0x6a27: call 0x2af0
0x6a2c: lea rdx,[rax+0x1]
0x6a30: add rax,0x1f
0x6a34: mov rsi,r12
0x6a37: and rax,-0x10
0x6a3b: mov r15d,0x11
0x6a41: sub rsp,rax
0x6a44: lea rdi,[rsp+0xf]
0x6a49: and rdi,-0x10
0x6a4d: call 0x2d80
0x6a52: mov rdi,r12
0x6a55: mov qword ptr [rbp-0x350],rax
0x6a5c: call 0x30d0
0x6a61: movzx r9d,byte ptr [rbp-0x358]
0x6a69: jmp 0x5fae
0x6ac4: jmp 0x6466
0x6ad0: call 0x2950
0x6ad5: mov r15d,dword ptr [rax]
0x6ad8: jmp 0x5cab
0x6ae0: mov rax,qword ptr [rbp-0x310]
0x6ae7: cmp byte ptr [rax],0x2f
0x6aea: je 0x6b24
0x6aec: mov rdi,qword ptr [rbp-0x308]
0x6af3: call 0xb2c0
0x6af8: lea r8,[rip+0x11364]
0x6aff: mov rdi,rax
0x6b02: mov ecx,0x2
0x6b07: mov r12,rax
0x6b0a: mov rsi,r8
0x6b0d: rep cmpsb [rsi],es:[rdi]
0x6b0f: seta al
0x6b12: sbb al,0x0
0x6b14: test al,al
0x6b16: jne 0x7df8
0x6b1c: mov rdi,r12
0x6b1f: call 0x30d0
0x6b24: movzx ecx,byte ptr [rbx+0x16]
0x6b28: mov rdx,qword ptr [rbp-0x308]
0x6b2f: mov r8d,0xffffffff
0x6b35: mov rdi,qword ptr [rbp-0x310]
0x6b3c: mov esi,0xffffff9c
0x6b41: call 0xa5e0
0x6b46: xor r8d,r8d
0x6b49: test eax,eax
0x6b4b: mov r12d,eax
0x6b4e: jle 0x619f
0x6b54: mov rdx,qword ptr [rbp-0x310]
0x6b5b: mov esi,0x4
0x6b60: mov edi,0x1
0x6b65: call 0xf2d0
0x6b6a: mov rdx,qword ptr [rbp-0x308]
0x6b71: mov esi,0x4
0x6b76: xor edi,edi
0x6b78: mov r13,rax
0x6b7b: call 0xf2d0
0x6b80: lea rsi,[rip+0x10f59]
0x6b87: mov r14,rax
0x6b8a: mov edx,0x5
0x6b8f: xor edi,edi
0x6b91: call 0x2ad0
0x6b96: mov r8,r13
0x6b99: mov rdx,rax
0x6b9c: mov rcx,r14
0x6b9f: mov esi,r12d
0x6ba2: xor edi,edi
0x6ba4: xor eax,eax
0x6ba6: call 0x2f30
0x6bab: nop dword ptr [rax+rax]
0x6c58: cmp byte ptr [rbx+0x2e],0x0
0x6c5c: jne 0x6630
0x6c62: test r15d,r15d
0x6c65: je 0x60bb
0x6c6b: jmp 0x6089
0x6c70: test r13b,r13b
0x6c73: mov rdx,qword ptr [rbp-0x280]
0x6c7a: mov rdi,qword ptr [rbp-0x278]
0x6c81: je 0x7530
0x6c87: mov rsi,rdi
0x6c8a: mov rdi,qword ptr [rbp-0x308]
0x6c91: call 0x9fc0
0x6c96: mov qword ptr [rbp-0x358],rax
0x6c9d: cmp qword ptr [rbp-0x358],0x0
0x6ca5: je 0x71a0
0x6cab: mov rsi,qword ptr [rbp-0x358]
0x6cb2: mov rdi,qword ptr [rbp-0x310]
0x6cb9: call 0xfbe0
0x6cbe: test al,al
0x6cc0: je 0x7c00
0x6cc6: mov rdx,qword ptr [rip+0x2188bb]
0x6ccd: mov esi,0x4
0x6cd2: mov edi,0x1
0x6cd7: call 0xf2d0
0x6cdc: mov rdx,qword ptr [rip+0x2188ad]
0x6ce3: mov esi,0x4
0x6ce8: xor edi,edi
0x6cea: mov r13,rax
0x6ced: call 0xf2d0
0x6cf2: lea rsi,[rip+0x10cdf]
0x6cf9: mov r12,rax
0x6cfc: mov edx,0x5
0x6d01: xor edi,edi
0x6d03: call 0x2ad0
0x6d08: mov r8,r13
0x6d0b: mov rdx,rax
0x6d0e: mov rcx,r12
0x6d11: xor eax,eax
0x6d13: xor esi,esi
0x6d15: xor edi,edi
0x6d17: call 0x2f30
0x6d1c: mov rax,qword ptr [rbp-0x340]
0x6d23: mov byte ptr [rax],0x1
0x6d26: cmp byte ptr [rbx+0x25],0x0
0x6d2a: je 0x6bc8
0x6d35: nop dword ptr [rax]
0x6d38: cmp qword ptr [rbp-0x270],0x1
0x6d40: ja 0x7128
0x6d46: test r13b,r13b
0x6d49: mov edx,dword ptr [rbx+0x4]
0x6d4c: je 0x6d57
0x6d4e: cmp edx,0x3
0x6d51: je 0x7128
0x6d57: cmp edx,0x4
0x6d5a: mov qword ptr [rbp-0x358],0x0
0x6d65: je 0x7128
0x6d6b: test al,al
0x6d6d: jne 0x6579
0x6d73: movzx eax,r14b
0x6d77: mov dword ptr [rbp-0x320],eax
0x6d7d: jmp 0x60d0
0x6d88: mov rdx,qword ptr [rbp-0x308]
0x6d8f: mov esi,0x4
0x6d94: mov edi,0x1
0x6d99: call 0xf2d0
0x6d9e: mov rdx,qword ptr [rbp-0x310]
0x6da5: mov esi,0x4
0x6daa: xor edi,edi
0x6dac: mov r12,rax
0x6daf: call 0xf2d0
0x6db4: lea rsi,[rip+0x11049]
0x6dbb: mov rbx,rax
0x6dbe: mov edx,0x5
0x6dc3: xor edi,edi
0x6dc5: call 0x2ad0
0x6dca: mov r8,r12
0x6dcd: mov rcx,rbx
0x6dd0: mov rdx,rax
0x6dd3: mov esi,r15d
0x6dd6: xor edi,edi
0x6dd8: xor eax,eax
0x6dda: call 0x2f30
0x6ddf: mov rsi,qword ptr [rbp-0x280]
0x6de6: mov rdi,qword ptr [rbp-0x278]
0x6ded: call 0x9ef0
0x6df2: jmp 0x5f30
0x6e00: xor r8d,r8d
0x6e03: jmp 0x64b2
0x6e10: cmp byte ptr [rbx+0x18],0x0
0x6e14: je 0x685c
0x6e1a: nop word ptr [rax+rax]
0x6e20: mov eax,dword ptr [rbx+0x8]
0x6e23: cmp eax,0x2
0x6e26: je 0x6ea4
0x6e28: cmp eax,0x3
0x6e2b: je 0x6e78
0x6e2d: cmp eax,0x4
0x6e30: jne 0x68b0
0x6e36: cmp byte ptr [rbx+0x2f],0x0
0x6e3a: je 0x68b0
0x6e40: mov esi,dword ptr [rbp-0x1d8]
0x6e46: mov rdi,qword ptr [rbp-0x308]
0x6e4d: mov byte ptr [rbp-0x358],r9b
0x6e54: mov byte ptr [rbp-0x350],r8b
0x6e5b: call 0x4e90
0x6e60: test al,al
0x6e62: movzx r8d,byte ptr [rbp-0x350]
0x6e6a: movzx r9d,byte ptr [rbp-0x358]
0x6e72: jne 0x68b0
0x6e78: mov rsi,qword ptr [rbp-0x308]
0x6e7f: lea rdx,[rbp-0x1d8]
0x6e86: mov rdi,rbx
0x6e89: mov byte ptr [rbp-0x358],r9b
0x6e90: mov byte ptr [rbp-0x350],r8b
0x6e97: call 0x51a0
0x6e9c: test al,al
0x6e9e: jne 0x82b0
0x6ea4: cmp qword ptr [rbp-0x320],0x0
0x6eac: je 0x6460
0x6eb2: mov rax,qword ptr [rbp-0x320]
0x6eb9: mov byte ptr [rax],0x1
0x6ebc: jmp 0x6460
0x6ec8: mov rdi,qword ptr [rbx+0x40]
0x6ecc: mov rsi,qword ptr [rbp-0x308]
0x6ed3: lea rdx,[rbp-0x280]
0x6eda: mov r12d,r13d
0x6edd: call 0xb500
0x6ee2: jmp 0x6466
0x6f03: mov r15d,dword ptr [rbx]
0x6f06: test r15d,r15d
0x6f09: jne 0x7ba7
0x6f4a: jmp 0x6466
0x6f50: mov ecx,dword ptr [rbp-0x320]
0x6f56: mov edx,dword ptr [rbp-0x314]
0x6f5c: mov r8,rbx
0x6f5f: mov rsi,qword ptr [rbp-0x308]
0x6f66: mov rdi,qword ptr [rbp-0x310]
0x6f6d: call 0x57c0
0x6f72: test al,al
0x6f74: je 0x5f30
0x6f7a: mov eax,r12d
0x6f7d: and eax,0x12
0x6f80: mov dword ptr [rbp-0x35c],eax
0x6f86: jmp 0x6769
0x6f90: mov rdi,qword ptr [rbp-0x308]
0x6f97: mov rcx,rbx
0x6f9a: mov edx,0x1
0x6f9f: xor esi,esi
0x6fa1: call 0x5890
0x6fa6: jmp 0x643e
0x6fb0: lea rsi,[rip+0x10e44]
0x6fb7: mov edx,0x5
0x6fbc: xor edi,edi
0x6fbe: call 0x2ad0
0x6fc3: mov edi,0x1
0x6fc8: mov rsi,rax
0x6fcb: xor eax,eax
0x6fcd: call 0x2ee0
0x6fd2: mov rdx,qword ptr [rbp-0x350]
0x6fd9: mov rsi,qword ptr [rbp-0x308]
0x6fe0: mov rdi,qword ptr [rbp-0x310]
0x6fe7: call 0x4fd0
0x6fec: jmp 0x6434
0x7080: sub rsp,0x30
0x7084: mov rsi,qword ptr [rbp-0x330]
0x708b: lea rax,[rsp+0xf]
0x7090: and rax,-0x10
0x7094: test r14b,r14b
0x7097: mov qword ptr [rbp-0x328],rax
0x709e: mov qword ptr [rax],rsi
0x70a1: mov qword ptr [rax+0x8],rdx
0x70a5: mov qword ptr [rax+0x10],rcx
0x70a9: jne 0x70c1
0x70ab: mov eax,dword ptr [rbp-0x1d8]
0x70b1: and eax,0xf000
0x70b6: cmp eax,0x4000
0x70bb: je 0x8118
0x70c1: mov esi,dword ptr [rbp-0x35c]
0x70c7: mov r15,qword ptr [rbp-0x308]
0x70ce: not esi
0x70d0: mov rdi,r15
0x70d3: and esi,r12d
0x70d6: call 0x29c0
0x70db: test eax,eax
0x70dd: je 0x78a0
0x70e3: mov rsi,r15
0x70e6: mov edi,0x4
0x70eb: call 0xf3f0
0x70f0: lea rsi,[rip+0xf2cd]
0x70f7: mov r13,rax
0x70fa: mov edx,0x5
0x711f: jmp 0x6bb0
0x7128: mov rdx,qword ptr [rbp-0x280]
0x712f: mov rsi,qword ptr [rbp-0x278]
0x7136: mov rdi,qword ptr [rbp-0x308]
0x713d: call 0x9fc0
0x7142: mov qword ptr [rbp-0x358],rax
0x7149: cmp qword ptr [rbp-0x358],0x0
0x7151: je 0x71a0
0x7153: mov eax,dword ptr [rbp-0x314]
0x7159: and eax,0xf000
0x715e: cmp eax,0x4000
0x7163: je 0x6cab
0x7169: movzx ecx,byte ptr [rbx+0x2e]
0x716d: mov r8d,dword ptr [rbp-0x328]
0x7174: mov edx,0x1
0x7179: mov rsi,qword ptr [rbp-0x308]
0x7180: mov rdi,qword ptr [rbp-0x358]
0x7187: call 0x5090
0x718c: test al,al
0x718e: je 0x6d26
0x7194: jmp 0x6460
0x71a0: movzx eax,byte ptr [rbx+0x18]
0x71a4: jmp 0x6d6b
0x71b0: xor ecx,ecx
0x71b2: xor r15d,r15d
0x71b5: mov eax,dword ptr [rbp-0x268]
0x71bb: lea rdx,[rbp-0x280]
0x71c2: and eax,0xf000
0x71c7: cmp eax,0xa000
0x71cc: je 0x7e73
0x71dc: test cl,cl
0x71de: jne 0x8272
0x71e4: cmp byte ptr [rbx+0x18],0x0
0x71e8: jne 0x706e
0x71ee: cmp dword ptr [rbx+0x4],0x2
0x71f2: je 0x706e
0x71f8: mov eax,dword ptr [rdx+0x18]
0x71fb: and eax,0xf000
0x7200: cmp eax,0xa000
0x7205: jne 0x706e
0x720b: mov eax,dword ptr [r12+0x18]
0x7210: and eax,0xf000
0x7215: cmp eax,0xa000
0x721a: je 0x706e
0x7276: jmp 0x5f30
0x7280: cmp byte ptr [rbx+0x18],0x0
0x7284: je 0x68b0
0x728a: jmp 0x6e20
0x72f9: mov eax,dword ptr [rbp-0x268]
0x72ff: and eax,0xf000
0x7304: cmp eax,0xa000
0x7309: jne 0x76e2
0x730f: cmp qword ptr [r12+0x10],0x1
0x7315: jbe 0x76e2
0x731b: mov rdi,qword ptr [rbp-0x310]
0x7322: mov byte ptr [rbp-0x35c],r9b
0x7329: mov byte ptr [rbp-0x358],r8b
0x7330: mov qword ptr [rbp-0x350],rdx
0x7337: call 0x2c20
0x733c: test rax,rax
0x733f: mov r15,rax
0x7342: mov rdx,qword ptr [rbp-0x350]
0x7349: movzx r8d,byte ptr [rbp-0x358]
0x7351: movzx r9d,byte ptr [rbp-0x35c]
0x7359: je 0x76e2
0x735f: mov rsi,qword ptr [rbp-0x308]
0x7366: mov rdi,rax
0x7369: mov byte ptr [rbp-0x358],r9b
0x7370: mov byte ptr [rbp-0x350],r8b
0x7377: call 0xfbe0
0x737c: mov rdi,r15
0x737f: xor eax,0x1
0x7382: mov r12d,eax
0x7385: call 0x30d0
0x738a: movzx r8d,byte ptr [rbp-0x350]
0x7392: movzx r9d,byte ptr [rbp-0x358]
0x739a: xor eax,eax
0x739c: test r12b,r12b
0x739f: je 0x7220
0x73a5: nop dword ptr [rax]
0x73a8: mov r14d,eax
0x73ab: jmp 0x5e3f
0x74ca: cmp r15d,0x1000
0x74d1: je 0x8592
0x74d7: mov eax,r15d
0x74da: and ah,-0x41
0x74dd: cmp eax,0x2000
0x74e2: je 0x81cc
0x74e8: cmp r15d,0xc000
0x74ef: je 0x81cc
0x74f5: cmp r15d,0xa000
0x74fc: je 0x8880
0x7502: mov rsi,qword ptr [rbp-0x310]
0x7509: mov edi,0x4
0x750e: call 0xf3f0
0x7513: mov edx,0x5
0x7518: mov r12,rax
0x751b: lea rsi,[rip+0x10a66]
0x7522: jmp 0x67c8
0x7530: mov rsi,rdx
0x7533: call 0x9f60
0x7538: mov qword ptr [rbp-0x358],rax
0x753f: jmp 0x6c9d
0x7580: jmp 0x6466
0x7588: mov rsi,qword ptr [rbp-0x280]
0x758f: mov rdi,qword ptr [rbp-0x278]
0x7596: call 0x9f60
0x759b: mov qword ptr [rbp-0x358],rax
0x75a2: jmp 0x7149
0x75d0: mov rdx,qword ptr [rip+0x217fb1]
0x75d7: mov esi,0x4
0x75dc: mov edi,0x1
0x75e1: call 0xf2d0
0x75e6: mov rdx,qword ptr [rip+0x217fa3]
0x75ed: mov esi,0x4
0x75f2: xor edi,edi
0x75f4: mov r12,rax
0x75f7: call 0xf2d0
0x75fc: lea rsi,[rip+0x1046d]
0x7603: mov rbx,rax
0x7606: mov edx,0x5
0x760b: xor edi,edi
0x760d: call 0x2ad0
0x7612: mov r8,r12
0x7615: mov rdx,rax
0x7618: mov rcx,rbx
0x761b: xor eax,eax
0x761d: xor esi,esi
0x761f: xor edi,edi
0x7621: call 0x2f30
0x7626: mov rax,qword ptr [rbp-0x340]
0x762d: mov r12d,0x1
0x7633: mov byte ptr [rax],0x1
0x7636: jmp 0x6466
0x7640: call 0x2ac0
0x7645: test eax,eax
0x7647: je 0x6611
0x764d: call 0x2950
0x7652: cmp dword ptr [rax],0x2
0x7655: mov r14,rax
0x7658: je 0x6611
0x765e: mov rdx,qword ptr [rbp-0x308]
0x7665: mov esi,0x4
0x766a: mov edi,0x1
0x766f: call 0xf2d0
0x7674: mov rdx,qword ptr [rbp-0x310]
0x767b: mov esi,0x4
0x7680: xor edi,edi
0x7682: mov r12,rax
0x7685: call 0xf2d0
0x768a: lea rsi,[rip+0x1040f]
0x7691: mov rbx,rax
0x7694: mov edx,0x5
0x7699: xor edi,edi
0x769b: call 0x2ad0
0x76a0: mov r8,r12
0x76a3: mov rcx,rbx
0x76a6: mov rdx,rax
0x76a9: mov esi,dword ptr [r14]
0x76ac: jmp 0x6dd6
0x76cf: mov eax,dword ptr [rdx+0x18]
0x76d2: and eax,0xf000
0x76d7: cmp eax,0xa000
0x76dc: jne 0x86c5
0x76e8: mov eax,dword ptr [r12+0x18]
0x76ed: and eax,0xf000
0x76f2: cmp eax,0xa000
0x76f7: je 0x5e3f
0x7707: mov eax,dword ptr [rdx+0x18]
0x770a: and eax,0xf000
0x770f: cmp eax,0xa000
0x7714: je 0x918c
0x771a: movdqa xmm0,[rdx]
0x771e: movaps [rbp-0xd0],xmm0
0x7725: movdqa xmm0,[rdx+0x10]
0x772a: movaps [rbp-0xc0],xmm0
0x7731: movdqa xmm0,[rdx+0x20]
0x7736: movaps [rbp-0xb0],xmm0
0x773d: movdqa xmm0,[rdx+0x30]
0x7742: movaps [rbp-0xa0],xmm0
0x7749: movdqa xmm0,[rdx+0x40]
0x774e: movaps [rbp-0x90],xmm0
0x7755: movdqa xmm0,[rdx+0x50]
0x775a: movaps [rbp-0x80],xmm0
0x775e: movdqa xmm0,[rdx+0x60]
0x7763: movaps [rbp-0x70],xmm0
0x7767: movdqa xmm0,[rdx+0x70]
0x776c: movaps [rbp-0x60],xmm0
0x7770: movdqa xmm0,[rdx+0x80]
0x7778: movaps [rbp-0x50],xmm0
0x777c: mov eax,dword ptr [r12+0x18]
0x7781: and eax,0xf000
0x7786: cmp eax,0xa000
0x778b: je 0x9149
0x7791: movdqa xmm0,[r12]
0x7797: movaps [rbp-0x160],xmm0
0x779e: movdqa xmm0,[r12+0x10]
0x77a5: movaps [rbp-0x150],xmm0
0x77ac: movdqa xmm0,[r12+0x20]
0x77b3: movaps [rbp-0x140],xmm0
0x77ba: movdqa xmm0,[r12+0x30]
0x77c1: movaps [rbp-0x130],xmm0
0x77c8: movdqa xmm0,[r12+0x40]
0x77cf: movaps [rbp-0x120],xmm0
0x77d6: movdqa xmm0,[r12+0x50]
0x77dd: movaps [rbp-0x110],xmm0
0x77e4: movdqa xmm0,[r12+0x60]
0x77eb: movaps [rbp-0x100],xmm0
0x77f2: movdqa xmm0,[r12+0x70]
0x77f9: movaps [rbp-0xf0],xmm0
0x7800: movdqa xmm0,[r12+0x80]
0x780a: movaps [rbp-0xe0],xmm0
0x7811: mov rax,qword ptr [rbp-0x158]
0x7818: cmp qword ptr [rbp-0xc8],rax
0x781f: jne 0x5e3f
0x7825: mov rax,qword ptr [rbp-0x160]
0x782c: cmp qword ptr [rbp-0xd0],rax
0x7833: jne 0x5e3f
0x7839: cmp byte ptr [rbx+0x17],0x0
0x783d: je 0x7220
0x7843: mov eax,dword ptr [r12+0x18]
0x7848: and eax,0xf000
0x784d: cmp eax,0xa000
0x7852: setne r14b
0x7856: jmp 0x5e3f
0x78a0: mov rsi,qword ptr [rbp-0x308]
0x78a7: lea rdx,[rbp-0x1f0]
0x78ae: mov edi,0x1
0x78b3: call 0x2b00
0x78b8: test eax,eax
0x78ba: jne 0x82c5
0x78c0: mov r12d,dword ptr [rbp-0x1d8]
0x78c7: mov byte ptr [rbp-0x330],0x0
0x78ce: mov eax,r12d
0x78d1: and eax,0x1c0
0x78d6: cmp eax,0x1c0
0x78db: je 0x7908
0x78dd: mov rdi,qword ptr [rbp-0x308]
0x78e4: mov esi,r12d
0x78e7: or esi,0x1c0
0x78ed: call 0x2f10
0x78f2: test eax,eax
0x78f4: mov dword ptr [rbp-0x38c],r12d
0x78fb: mov byte ptr [rbp-0x330],0x1
0x7902: jne 0x8923
0x7908: mov rax,qword ptr [rbp-0x338]
0x790f: cmp byte ptr [rax],0x0
0x7912: je 0x870c
0x7918: cmp byte ptr [rbx+0x2e],0x0
0x791c: je 0x7968
0x791e: cmp byte ptr [rbx+0x18],0x0
0x7922: je 0x87cd
0x7928: mov rsi,qword ptr [rbp-0x308]
0x792f: mov edi,0x4
0x7934: call 0xf3f0
0x7939: lea rsi,[rip+0x104fc]
0x7940: mov r12,rax
0x7943: mov edx,0x5
0x7948: xor edi,edi
0x794a: call 0x2ad0
0x794f: mov rdx,r12
0x7952: mov rsi,rax
0x7955: mov edi,0x1
0x795a: xor eax,eax
0x795c: call 0x2ee0
0x7961: nop dword ptr [rax]
0x7968: mov rax,qword ptr [rbp-0x348]
0x796f: test rax,rax
0x7972: setne r12b
0x7976: and r12b,byte ptr [rbx+0x1c]
0x797a: jne 0x815b
0x7980: movdqu xmm0,[rbx]
0x7984: mov esi,0x2
0x7989: mov rdi,qword ptr [rbp-0x310]
0x7990: movaps [rbp-0x2f0],xmm0
0x7997: movdqu xmm0,[rbx+0x10]
0x799c: movaps [rbp-0x2e0],xmm0
0x79a3: movdqu xmm0,[rbx+0x20]
0x79a8: movaps [rbp-0x2d0],xmm0
0x79af: movdqu xmm0,[rbx+0x30]
0x79b4: movaps [rbp-0x2c0],xmm0
0x79bb: movdqu xmm0,[rbx+0x40]
0x79c0: movaps [rbp-0x2b0],xmm0
0x79c7: call 0xffb0
0x79cc: test rax,rax
0x79cf: mov qword ptr [rbp-0x368],rax
0x79d6: je 0x8838
0x79dc: cmp dword ptr [rbx+0x4],0x3
0x79e0: jne 0x79ec
0x79e2: mov dword ptr [rbp-0x2ec],0x2
0x79ec: mov rax,qword ptr [rbp-0x368]
0x79f3: cmp byte ptr [rax],0x0
0x79f6: je 0x8f35
0x79fc: lea rax,[rbp-0x2f0]
0x7a03: lea r10,[rbp-0x280]
0x7a0a: mov dword ptr [rbp-0x380],r13d
0x7a11: mov r15,qword ptr [rbp-0x368]
0x7a18: mov r13,qword ptr [rbp-0x340]
0x7a1f: mov r12d,0x1
0x7a25: mov qword ptr [rbp-0x348],rax
0x7a2c: lea rax,[rbp-0x2f9]
0x7a33: mov byte ptr [rbp-0x315],0x0
0x7a3a: mov byte ptr [rbp-0x370],r14b
0x7a41: mov qword ptr [rbp-0x378],rbx
0x7a48: mov qword ptr [rbp-0x350],rax
0x7a4f: lea rax,[rbp-0x2f8]
0x7a56: mov qword ptr [rbp-0x340],r10
0x7a5d: mov qword ptr [rbp-0x358],rax
0x7a64: jmp 0x7a94
0x7a70: movzx eax,byte ptr [rbp-0x2f8]
0x7a77: mov rdi,r15
0x7a7a: or byte ptr [rbp-0x315],al
0x7a80: call 0x2af0
0x7a85: lea r15,[r15+rax+0x1]
0x7a8a: cmp byte ptr [r15],0x0
0x7a8e: je 0x7b31
0x7a94: mov rdi,qword ptr [rbp-0x310]
0x7a9b: xor edx,edx
0x7a9d: mov rsi,r15
0x7aa0: call 0xb790
0x7aa5: mov rdi,qword ptr [rbp-0x308]
0x7aac: xor edx,edx
0x7aae: mov rsi,r15
0x7ab1: mov rbx,rax
0x7ab4: call 0xb790
0x7ab9: mov r14,rax
0x7abc: mov rax,qword ptr [rbp-0x338]
0x7ac3: mov r9,qword ptr [rbp-0x348]
0x7aca: mov r8,qword ptr [rbp-0x328]
0x7ad1: mov rcx,qword ptr [rbp-0x340]
0x7ad8: mov rsi,r14
0x7adb: mov edx,dword ptr [rbp-0x320]
0x7ae1: mov rdi,rbx
0x7ae4: movzx eax,byte ptr [rax]
0x7ae7: push 0x0
0x7ae9: push qword ptr [rbp-0x350]
0x7aef: push qword ptr [rbp-0x358]
0x7af5: push 0x0
0x7af7: mov byte ptr [rbp-0x2f8],al
0x7afd: call 0x5c20
0x7b02: and r12d,eax
0x7b05: movzx eax,byte ptr [rbp-0x2f9]
0x7b0c: add rsp,0x20
0x7b10: or byte ptr [r13],al
0x7b14: mov rdi,r14
0x7b17: call 0x30d0
0x7b1c: mov rdi,rbx
0x7b1f: call 0x30d0
0x7b24: cmp byte ptr [rbp-0x2f9],0x0
0x7b2b: je 0x7a70
0x7b31: movzx r14d,byte ptr [rbp-0x370]
0x7b39: mov rbx,qword ptr [rbp-0x378]
0x7b40: mov r13d,dword ptr [rbp-0x380]
0x7b47: mov rdi,qword ptr [rbp-0x368]
0x7b4e: call 0x30d0
0x7b53: movzx ecx,byte ptr [rbp-0x315]
0x7b5a: mov rax,qword ptr [rbp-0x338]
0x7b61: mov byte ptr [rax],cl
0x7b63: test r13b,r13b
0x7b66: jne 0x8142
0x7b6c: movzx eax,byte ptr [rbp-0x330]
0x7b73: mov byte ptr [rbp-0x320],0x0
0x7b7a: mov byte ptr [rbp-0x315],al
0x7b80: jmp 0x623a
0x7b92: mov r15d,dword ptr [rbx]
0x7b95: test r15d,r15d
0x7b98: je 0x7f9b
0x7b9e: test r13b,r13b
0x7ba1: jne 0x68fa
0x7ba7: mov edx,dword ptr [rbp-0x268]
0x7bad: and edx,0xf000
0x7bb3: cmp edx,0x4000
0x7bb9: je 0x8176
0x7bbf: mov rdi,qword ptr [rbp-0x310]
0x7bc6: mov byte ptr [rbp-0x358],r9b
0x7bcd: mov byte ptr [rbp-0x350],r8b
0x7bd4: call 0xb3a0
0x7bd9: cmp byte ptr [rax],0x2e
0x7bdc: mov r14,rax
0x7bdf: movzx r8d,byte ptr [rbp-0x350]
0x7be7: movzx r9d,byte ptr [rbp-0x358]
0x7bef: jne 0x697d
0x7bf5: mov eax,0x1
0x7bfa: jmp 0x6942
0x7c00: mov rsi,qword ptr [rbp-0x358]
0x7c07: mov rdi,qword ptr [rbp-0x308]
0x7c0e: call 0xfbe0
0x7c13: test al,al
0x7c15: jne 0x82ea
0x7c1b: mov eax,dword ptr [rbx+0x4]
0x7c1e: cmp eax,0x4
0x7c21: je 0x71a0
0x7c27: cmp eax,0x3
0x7c2a: jne 0x7c35
0x7c2c: test r13b,r13b
0x7c2f: jne 0x71a0
0x7c35: mov rdx,qword ptr [rbp-0x358]
0x7c3c: mov esi,0x4
0x7c41: mov edi,0x1
0x7c46: call 0xf2d0
0x7c4b: mov rdx,qword ptr [rbp-0x308]
0x7c52: xor edi,edi
0x7c54: mov esi,0x4
0x7c59: mov r13,rax
0x7c5c: call 0xf2d0
0x7c61: lea rsi,[rip+0xfdd8]
0x7c68: mov r12,rax
0x7c6b: xor edi,edi
0x7c6d: mov edx,0x5
0x7c72: call 0x2ad0
0x7c77: mov r8,r13
0x7c7a: mov rdx,rax
0x7c7d: mov rcx,r12
0x7c80: xor esi,esi
0x7c82: xor edi,edi
0x7c84: xor eax,eax
0x7c86: call 0x2f30
0x7c8b: jmp 0x6d26
0x7c90: cmp byte ptr [rbx+0x17],0x0
0x7c94: je 0x6d38
0x7c9a: mov qword ptr [rbp-0x358],0x0
0x7ca5: jmp 0x6d73
0x7d32: mov rsi,qword ptr [rbp-0x310]
0x7d39: mov edi,0x4
0x7d3e: call 0xf3f0
0x7d43: lea rsi,[rip+0xfdbe]
0x7d4a: mov r12,rax
0x7d4d: mov edx,0x5
0x7d52: xor edi,edi
0x7d54: call 0x2ad0
0x7d59: mov rcx,r12
0x7d5c: mov rdx,rax
0x7d5f: xor esi,esi
0x7d6a: xor r8d,r8d
0x7d6d: mov qword ptr [rbp-0x330],0x0
0x7dd0: mov eax,dword ptr [rbp-0x268]
0x7dd6: and eax,0xf000
0x7ddb: cmp eax,0x4000
0x7de0: je 0x8170
0x7de6: test r15d,r15d
0x7de9: je 0x7447
0x7def: jmp 0x7bbf
0x7df8: lea rdx,[rbp-0x160]
0x7dff: mov rsi,r8
0x7e02: mov edi,0x1
0x7e07: call 0x2dd0
0x7e0c: test eax,eax
0x7e0e: jne 0x6b1c
0x7e14: lea rdx,[rbp-0xd0]
0x7e1b: mov rsi,r12
0x7e1e: mov edi,0x1
0x7e23: call 0x2dd0
0x7e28: test eax,eax
0x7e2a: jne 0x6b1c
0x7e30: mov rax,qword ptr [rbp-0xc8]
0x7e37: cmp qword ptr [rbp-0x158],rax
0x7e3e: je 0x8f47
0x7e44: mov rdi,r12
0x7e47: call 0x30d0
0x7e4c: mov rdx,qword ptr [rbp-0x308]
0x7e53: mov esi,0x3
0x7e58: xor edi,edi
0x7e5a: call 0xf4f0
0x7e5f: mov edx,0x5
0x7e64: mov r12,rax
0x7e67: lea rsi,[rip+0xfd42]
0x7e6e: jmp 0x67c8
0x7e73: mov eax,dword ptr [rbp-0x1d8]
0x7e79: lea rdx,[rbp-0x280]
0x7e80: and eax,0xf000
0x7e85: cmp eax,0xa000
0x7e8a: jne 0x71d2
0x7e90: mov rsi,qword ptr [rbp-0x308]
0x7e97: mov rdi,qword ptr [rbp-0x310]
0x7e9e: mov byte ptr [rbp-0x358],r9b
0x7ea5: mov byte ptr [rbp-0x350],r8b
0x7eac: call 0xfbe0
0x7eb1: test al,al
0x7eb3: jne 0x7220
0x7eb9: mov edi,dword ptr [rbx]
0x7ebb: movzx r8d,byte ptr [rbp-0x350]
0x7ec3: movzx r9d,byte ptr [rbp-0x358]
0x7ecb: test edi,edi
0x7ecd: jne 0x706e
0x7ed3: test r15d,r15d
0x7ed6: je 0x706e
0x7edc: movzx r12d,byte ptr [rbx+0x18]
0x7ee1: mov eax,0x1
0x7ee6: xor r12d,0x1
0x7eea: jmp 0x739c
0x7f50: lea rsi,[rip+0xfec2]
0x7f57: mov edx,0x5
0x7f5c: xor edi,edi
0x7f5e: call 0x2ad0
0x7f63: mov edi,0x1
0x7f68: mov rsi,rax
0x7f6b: xor eax,eax
0x7f6d: call 0x2ee0
0x7f72: mov rdx,qword ptr [rbp-0x350]
0x7f79: mov rsi,qword ptr [rbp-0x308]
0x7f80: mov rdi,qword ptr [rbp-0x310]
0x7f87: call 0x4fd0
0x7f8c: mov dword ptr [rbp-0x320],0x1
0x7f96: jmp 0x60d0
0x7fe1: cmp byte ptr [rbx+0x22],0x0
0x7fe5: je 0x83c6
0x7feb: cmp qword ptr [rbp-0x1e0],0x1
0x7ff3: jbe 0x83c6
0x806d: jmp 0x6466
0x8118: movabsq rax,0xff000000ff00
0x8122: test qword ptr [rbx+0x20],rax
0x8126: jne 0x86e0
0x812c: mov byte ptr [rbp-0x330],0x0
0x8133: mov dword ptr [rbp-0x35c],0x0
0x813d: jmp 0x7968
0x8142: mov byte ptr [rbp-0x315],r12b
0x8149: xor r15d,r15d
0x814c: xor r8d,r8d
0x814f: mov byte ptr [rbp-0x320],0x0
0x8156: jmp 0x61d4
0x815b: mov rcx,qword ptr [rbp-0x280]
0x8162: cmp qword ptr [rax],rcx
0x8165: jne 0x7b63
0x816b: jmp 0x7980
0x8170: mov eax,dword ptr [rbp-0x1d8]
0x8176: and eax,0xf000
0x817b: cmp eax,0x4000
0x8180: je 0x7de6
0x8186: test r15d,r15d
0x8189: jne 0x7bbf
0x818f: mov rdx,qword ptr [rbp-0x308]
0x8196: mov esi,0x3
0x819b: xor edi,edi
0x819d: call 0xf4f0
0x81a2: mov rdx,qword ptr [rbp-0x310]
0x81a9: mov esi,0x3
0x81ae: xor edi,edi
0x81b0: mov r12,rax
0x81b3: call 0xf4f0
0x81b8: mov edx,0x5
0x81bd: mov rbx,rax
0x81c0: lea rsi,[rip+0xf731]
0x81c7: jmp 0x725b
0x81cc: mov edx,dword ptr [rbp-0x35c]
0x81d2: mov rax,qword ptr [rbp-0x258]
0x81d9: lea rcx,[rbp-0x2f0]
0x81e0: mov rsi,qword ptr [rbp-0x308]
0x81e7: xor edi,edi
0x81e9: mov byte ptr [rbp-0x328],r8b
0x81f0: not edx
0x81f2: and edx,dword ptr [rbp-0x314]
0x81f8: mov qword ptr [rbp-0x2f0],rax
0x81ff: call 0x2da0
0x8204: test eax,eax
0x8206: mov byte ptr [rbp-0x320],0x0
0x820d: movzx r8d,byte ptr [rbp-0x328]
0x8215: je 0x619f
0x821b: mov rsi,qword ptr [rbp-0x308]
0x8222: mov edi,0x4
0x8227: call 0xf3f0
0x822c: mov edx,0x5
0x8231: mov r13,rax
0x8234: lea rsi,[rip+0xfd12]
0x823b: jmp 0x70ff
0x8272: mov rsi,qword ptr [rbp-0x308]
0x8279: mov rdi,qword ptr [rbp-0x310]
0x8280: mov byte ptr [rbp-0x358],r9b
0x8287: mov byte ptr [rbp-0x350],r8b
0x828e: call 0xfbe0
0x8293: xor eax,0x1
0x8296: movzx r8d,byte ptr [rbp-0x350]
0x829e: movzx r9d,byte ptr [rbp-0x358]
0x82a6: mov r12d,eax
0x82a9: xor eax,eax
0x82ab: jmp 0x739c
0x82b0: movzx r8d,byte ptr [rbp-0x350]
0x82b8: movzx r9d,byte ptr [rbp-0x358]
0x82c0: jmp 0x68b0
0x82c5: mov rsi,qword ptr [rbp-0x308]
0x82cc: mov edi,0x4
0x82d1: call 0xf3f0
0x82d6: mov edx,0x5
0x82db: mov r13,rax
0x82de: lea rsi,[rip+0xe110]
0x82e5: jmp 0x70ff
0x82ea: mov rsi,qword ptr [rip+0x21729f]
0x82f1: mov edi,0x4
0x82f6: call 0xf3f0
0x82fb: lea rsi,[rip+0xf706]
0x8302: xor edi,edi
0x8304: mov r12,rax
0x8307: mov edx,0x5
0x830c: call 0x2ad0
0x8311: xor esi,esi
0x8313: mov rdx,rax
0x8316: xor edi,edi
0x8318: xor eax,eax
0x831a: mov rcx,r12
0x831d: call 0x2f30
0x8322: cmp byte ptr [rbx+0x18],0x0
0x8326: jne 0x6ea4
0x832c: jmp 0x6460
0x8331: mov byte ptr [rbp-0x350],r9b
0x8338: call 0x2950
0x833d: cmp dword ptr [rax],0x2
0x8340: mov r12,rax
0x8343: movzx r9d,byte ptr [rbp-0x350]
0x834b: je 0x87b1
0x8351: mov rsi,qword ptr [rbp-0x308]
0x8358: mov edi,0x4
0x835d: call 0xf3f0
0x8362: lea rsi,[rip+0xfa70]
0x8369: mov edx,0x5
0x836e: xor edi,edi
0x8370: mov rbx,rax
0x8373: call 0x2ad0
0x8378: mov esi,dword ptr [r12]
0x837c: mov rdx,rax
0x837f: mov rcx,rbx
0x8382: xor edi,edi
0x8384: xor eax,eax
0x8386: xor r12d,r12d
0x8389: call 0x2f30
0x838e: jmp 0x6466
0x83aa: mov qword ptr [rbp-0x350],0x0
0x83b5: mov r14d,0x1
0x83bb: mov r15d,0x11
0x83c1: jmp 0x6089
0x83c6: cmp dword ptr [rbx+0x4],0x2
0x83ca: jne 0x7447
0x83d0: mov eax,dword ptr [rbp-0x268]
0x83d6: and eax,0xf000
0x83db: cmp eax,0x8000
0x83e0: jne 0x7ff9
0x83e6: jmp 0x7447
0x843e: mov rdx,r12
0x8441: mov rdi,r14
0x8444: mov byte ptr [rbp-0x350],r9b
0x844b: mov qword ptr [rbp-0x358],r8
0x8452: call 0x2c90
0x8457: test eax,eax
0x8459: movzx r9d,byte ptr [rbp-0x350]
0x8461: jne 0x69e9
0x8467: lea rdi,[r14+r12]
0x846b: mov rsi,r15
0x846e: call 0x2cf0
0x8473: test eax,eax
0x8475: movzx r9d,byte ptr [rbp-0x350]
0x847d: mov r8,qword ptr [rbp-0x358]
0x8484: jne 0x69e9
0x848a: mov rdi,qword ptr [rbp-0x308]
0x8491: or rcx,-0x1
0x8495: repne scasb al,es:[rdi]
0x8497: mov rax,rcx
0x849a: not rax
0x849d: lea r14,[rax-0x1]
0x84a1: lea rdi,[r14+r8+0x1]
0x84a6: call 0x12010
0x84ab: mov r15,qword ptr [rip+0x2170ee]
0x84b2: mov rsi,qword ptr [rbp-0x308]
0x84b9: mov rdx,r14
0x84bc: mov rdi,rax
0x84bf: mov r12,rax
0x84c2: call 0x2f20
0x84c7: mov rsi,r15
0x84ca: mov rdi,rax
0x84cd: call 0x2990
0x84d2: lea rdx,[rbp-0xd0]
0x84d9: mov rsi,r12
0x84dc: mov edi,0x1
0x84e1: call 0x2dd0
0x84e6: mov rdi,r12
0x84e9: mov r15d,eax
0x84ec: call 0x30d0
0x84f1: test r15d,r15d
0x84f4: movzx r9d,byte ptr [rbp-0x350]
0x84fc: jne 0x69e9
0x8502: mov rax,qword ptr [rbp-0xc8]
0x8509: cmp qword ptr [rbp-0x278],rax
0x8510: jne 0x69e9
0x8516: mov rax,qword ptr [rbp-0xd0]
0x851d: cmp qword ptr [rbp-0x280],rax
0x8524: jne 0x69e9
0x852a: cmp byte ptr [rbx+0x18],0x0
0x852e: je 0x8796
0x8534: lea rsi,[rip+0xf3f5]
0x853b: mov edx,0x5
0x8540: xor edi,edi
0x8542: call 0x2ad0
0x8547: mov rbx,rax
0x854a: mov rdx,qword ptr [rbp-0x310]
0x8551: mov esi,0x4
0x8556: mov edi,0x1
0x855b: call 0xf2d0
0x8560: mov rdx,qword ptr [rbp-0x308]
0x8567: mov r12,rax
0x856a: mov esi,0x4
0x856f: xor edi,edi
0x8571: call 0xf2d0
0x8576: mov r8,r12
0x8579: mov rcx,rax
0x857c: mov rdx,rbx
0x857f: xor esi,esi
0x8581: xor edi,edi
0x8583: xor eax,eax
0x8585: call 0x2f30
0x858a: xor r12d,r12d
0x858d: jmp 0x6466
0x8592: mov r12d,dword ptr [rbp-0x35c]
0x8599: mov rsi,qword ptr [rbp-0x308]
0x85a0: lea rcx,[rbp-0x2f8]
0x85a7: xor edi,edi
0x85a9: mov byte ptr [rbp-0x320],r8b
0x85b0: mov qword ptr [rbp-0x2f8],0x0
0x85bb: not r12d
0x85be: and r12d,dword ptr [rbp-0x314]
0x85c5: mov edx,r12d
0x85c8: call 0x2da0
0x85cd: test eax,eax
0x85cf: movzx r8d,byte ptr [rbp-0x320]
0x85d7: je 0x619f
0x85dd: mov rdi,qword ptr [rbp-0x308]
0x85e4: mov esi,r12d
0x85e7: and esi,0xffffefff
0x85ed: call 0x2d60
0x85f2: test eax,eax
0x85f4: movzx r8d,byte ptr [rbp-0x320]
0x85fc: je 0x619f
0x8602: mov rsi,qword ptr [rbp-0x308]
0x8609: mov edi,0x4
0x860e: call 0xf3f0
0x8613: mov edx,0x5
0x8618: mov r13,rax
0x861b: lea rsi,[rip+0xf915]
0x8622: jmp 0x70ff
0x866b: mov rsi,qword ptr [rbp-0x308]
0x8672: mov rdi,qword ptr [rbp-0x310]
0x8679: mov byte ptr [rbp-0x35c],r9b
0x8680: mov byte ptr [rbp-0x358],r8b
0x8687: mov qword ptr [rbp-0x350],rdx
0x868e: call 0xfbe0
0x8693: test al,al
0x8695: mov rdx,qword ptr [rbp-0x350]
0x869c: movzx r8d,byte ptr [rbp-0x358]
0x86a4: movzx r9d,byte ptr [rbp-0x35c]
0x86ac: je 0x8f27
0x86b2: mov eax,dword ptr [rdx+0x18]
0x86b5: and eax,0xf000
0x86ba: cmp eax,0xa000
0x86bf: je 0x72ec
0x86c5: mov eax,dword ptr [r12+0x18]
0x86ca: and eax,0xf000
0x86cf: cmp eax,0xa000
0x86d4: je 0x72ec
0x86da: jmp 0x72c4
0x86e0: movzx esi,byte ptr [rbx+0x25]
0x86e4: mov rdi,qword ptr [rbp-0x308]
0x86eb: xor edx,edx
0x86ed: mov rcx,rbx
0x86f0: call 0x5890
0x86f5: test al,al
0x86f7: jne 0x812c
0x86fd: cmp byte ptr [rbx+0x26],0x0
0x8701: jne 0x6bb0
0x8707: jmp 0x812c
0x870c: mov rdx,qword ptr [rbp-0x1f0]
0x8713: mov rsi,qword ptr [rbp-0x1e8]
0x871a: mov rdi,qword ptr [rbp-0x308]
0x8721: call 0x9fc0
0x8726: mov rax,qword ptr [rbp-0x338]
0x872d: mov byte ptr [rax],0x1
0x8730: jmp 0x7918
0x8796: lea rsi,[rip+0xf1cb]
0x879d: mov edx,0x5
0x87a2: xor edi,edi
0x87a4: call 0x2ad0
0x87a9: mov rbx,rax
0x87ac: jmp 0x854a
0x87b1: mov qword ptr [rbp-0x350],0x0
0x87bc: mov r14d,0x1
0x87c2: mov r15d,0x11
0x87c8: jmp 0x5fae
0x87cd: mov rsi,qword ptr [rbp-0x308]
0x87d4: mov rdi,qword ptr [rbp-0x310]
0x87db: xor edx,edx
0x87dd: call 0x4fd0
0x87e2: jmp 0x7968
0x8827: mov rdi,qword ptr [rbp-0x330]
0x882e: call 0x30d0
0x8833: jmp 0x6bb0
0x8838: mov rsi,qword ptr [rbp-0x310]
0x883f: mov edi,0x4
0x8844: call 0xf3f0
0x8849: lea rsi,[rip+0xf602]
0x8850: mov edx,0x5
0x8855: xor edi,edi
0x8857: mov r12,rax
0x885a: call 0x2ad0
0x885f: mov r15,rax
0x8862: call 0x2950
0x8867: mov esi,dword ptr [rax]
0x8869: mov rcx,r12
0x886c: mov rdx,r15
0x886f: xor edi,edi
0x8871: xor eax,eax
0x8873: xor r12d,r12d
0x8876: call 0x2f30
0x887b: jmp 0x7b63
0x8880: mov rsi,qword ptr [rbp-0x250]
0x8887: mov rdi,qword ptr [rbp-0x310]
0x888e: call 0xa820
0x8893: test rax,rax
0x8896: mov r12,rax
0x8899: je 0x90e3
0x889f: movzx ecx,byte ptr [rbx+0x16]
0x88a3: mov rdx,qword ptr [rbp-0x308]
0x88aa: mov r8d,0xffffffff
0x88b0: mov esi,0xffffff9c
0x88b5: mov rdi,rax
0x88b8: call 0xa5e0
0x88bd: test eax,eax
0x88bf: mov dword ptr [rbp-0x320],eax
0x88c5: jle 0x9108
0x88cb: cmp byte ptr [rbx+0x2d],0x1
0x88cf: jne 0x88da
0x88d1: test r14b,r14b
0x88d4: je 0x94b9
0x88da: mov rdi,r12
0x88dd: call 0x30d0
0x88e2: mov rsi,qword ptr [rbp-0x308]
0x88e9: mov edi,0x4
0x88ee: call 0xf3f0
0x88f3: lea rsi,[rip+0xf2f6]
0x88fa: xor edi,edi
0x88fc: mov edx,0x5
0x8901: mov r12,rax
0x8904: call 0x2ad0
0x8909: mov esi,dword ptr [rbp-0x320]
0x890f: mov rdx,rax
0x8912: mov rcx,r12
0x8915: xor edi,edi
0x8917: xor eax,eax
0x8919: call 0x2f30
0x891e: jmp 0x6bb0
0x8923: mov rsi,qword ptr [rbp-0x308]
0x892a: mov edi,0x4
0x892f: call 0xf3f0
0x8934: mov edx,0x5
0x8939: mov r13,rax
0x893c: lea rsi,[rip+0xf4de]
0x8943: jmp 0x70ff
0x8dd3: lea eax,[r13+0x1]
0x8dd7: cmp rax,qword ptr [rbp-0x2d8]
0x8dde: mov rcx,r12
0x8de1: mov rdx,rbx
0x8de4: mov r13,rax
0x8de7: jae 0x97ee
0x8f1f: xor r8d,r8d
0x8f22: jmp 0x7d78
0x8f27: movzx r12d,byte ptr [rbx+0x18]
0x8f2c: xor r12d,0x1
0x8f30: jmp 0x739c
0x8f35: mov byte ptr [rbp-0x315],0x0
0x8f3c: mov r12d,0x1
0x8f42: jmp 0x7b47
0x8f47: mov rax,qword ptr [rbp-0xd0]
0x8f4e: cmp qword ptr [rbp-0x160],rax
0x8f55: jne 0x7e44
0x8f5b: jmp 0x6b1c
0x8f60: mov rdi,qword ptr [rbp-0x308]
0x8f67: call 0x2960
0x8f6c: test eax,eax
0x8f6e: jne 0x9ba6
0x8f74: cmp byte ptr [rbx+0x2e],0x0
0x8f78: je 0x8fb3
0x8f7a: mov rsi,qword ptr [rbp-0x308]
0x8f81: mov edi,0x4
0x8f86: call 0xf3f0
0x8f8b: lea rsi,[rip+0xed7e]
0x8f92: mov r12,rax
0x8f95: mov edx,0x5
0x8f9a: xor edi,edi
0x8f9c: call 0x2ad0
0x8fa1: mov rdx,r12
0x8fa4: mov rsi,rax
0x8fa7: mov edi,0x1
0x8fac: xor eax,eax
0x8fae: call 0x2ee0
0x8fb3: movzx r14d,byte ptr [rbx+0x21]
0x8fb8: mov eax,dword ptr [rbp-0x35c]
0x8fbe: mov dword ptr [rbp-0x378],eax
0x8fc4: test r14b,r14b
0x8fc7: je 0x900c
0x8fc9: mov edx,dword ptr [rbp-0x3a4]
0x8fcf: mov rsi,qword ptr [rbp-0x308]
0x8fd6: mov r8,rbx
0x8fd9: mov rdi,qword ptr [rbp-0x310]
0x8fe0: mov ecx,0x1
0x8fe5: call 0x57c0
0x8fea: test al,al
0x8fec: mov r8d,eax
0x8fef: mov qword ptr [rbp-0x330],0x0
0x8ffa: je 0x7d78
0x904a: mov eax,esi
0x90c5: movzx r9d,byte ptr [rbp-0x330]
0x90cd: xor r8d,r8d
0x90d0: mov qword ptr [rbp-0x330],0x0
0x90db: mov r14d,r9d
0x90de: jmp 0x7d78
0x90e3: mov rsi,qword ptr [rbp-0x310]
0x90ea: mov edi,0x4
0x90ef: call 0xf3f0
0x90f4: mov edx,0x5
0x90f9: mov r13,rax
0x90fc: lea rsi,[rip+0xee68]
0x9103: jmp 0x70ff
0x9108: mov rdi,r12
0x910b: call 0x30d0
0x9110: movzx r8d,byte ptr [rbx+0x25]
0x9115: test r8b,r8b
0x9118: jne 0x6d30
0x911e: movzx eax,byte ptr [rbx+0x1d]
0x9122: test al,al
0x9124: mov byte ptr [rbp-0x320],al
0x912a: jne 0x93a3
0x9130: movzx r8d,byte ptr [rbp-0x320]
0x9138: mov byte ptr [rbp-0x320],0x1
0x913f: jmp 0x619f
0x9149: mov rsi,qword ptr [rbp-0x308]
0x9150: lea rdx,[rbp-0x160]
0x9157: mov edi,0x1
0x915c: mov byte ptr [rbp-0x358],r9b
0x9163: mov byte ptr [rbp-0x350],r8b
0x916a: call 0x2dd0
0x916f: test eax,eax
0x9171: movzx r8d,byte ptr [rbp-0x350]
0x9179: movzx r9d,byte ptr [rbp-0x358]
0x9181: je 0x7811
0x9187: jmp 0x5e3f
0x918c: mov rsi,qword ptr [rbp-0x310]
0x9193: lea rdx,[rbp-0xd0]
0x919a: mov edi,0x1
0x919f: mov byte ptr [rbp-0x358],r9b
0x91a6: mov byte ptr [rbp-0x350],r8b
0x91ad: call 0x2dd0
0x91b2: test eax,eax
0x91b4: movzx r8d,byte ptr [rbp-0x350]
0x91bc: movzx r9d,byte ptr [rbp-0x358]
0x91c4: je 0x777c
0x91ca: jmp 0x5e3f
0x9206: mov r9,qword ptr [rbp-0x368]
0x920d: mov edx,dword ptr [rbp-0x328]
0x9213: lea rcx,[rbp-0x280]
0x921a: mov rsi,qword ptr [rbp-0x308]
0x9221: movzx r8d,r14b
0x9225: mov rdi,rbx
0x9228: call 0x59e0
0x922d: cmp eax,-0x1
0x9230: je 0x8eb2
0x9236: test eax,eax
0x9238: jne 0x9244
0x923a: and dword ptr [rbp-0x340],0xfffff1ff
0x93a3: mov edx,dword ptr [rbp-0x260]
0x93a9: mov esi,dword ptr [rbp-0x264]
0x93af: mov rdi,qword ptr [rbp-0x308]
0x93b6: mov byte ptr [rbp-0x328],r8b
0x93bd: call 0x2e40
0x93c2: test eax,eax
0x93c4: movzx r8d,byte ptr [rbp-0x328]
0x93cc: je 0x619f
0x93d2: mov rdi,rbx
0x93d5: call 0x59b0
0x93da: test al,al
0x93dc: movzx r8d,byte ptr [rbp-0x328]
0x93e4: je 0x9be4
0x93ea: mov byte ptr [rbp-0x320],al
0x93f0: jmp 0x619f
0x9431: movzx r8d,byte ptr [rbx+0x30]
0x9436: test r8b,r8b
0x9439: je 0x9c27
0x943f: mov edx,dword ptr [rbp-0x330]
0x9445: mov rdi,qword ptr [rbp-0x308]
0x944c: mov esi,0x41
0x9451: xor eax,eax
0x9453: call 0xb490
0x9458: mov r8d,dword ptr [r12]
0x945c: mov dword ptr [rbp-0x328],eax
0x94b9: mov eax,dword ptr [rbp-0x1d8]
0x94bf: and eax,0xf000
0x94c4: cmp eax,0xa000
0x94c9: jne 0x88da
0x94cf: or rcx,-0x1
0x94d3: mov eax,r14d
0x94d6: mov rdi,r12
0x94d9: repne scasb al,es:[rdi]
0x94db: mov rsi,qword ptr [rbp-0x1c0]
0x94e2: not rcx
0x94e5: lea rax,[rcx-0x1]
0x94e9: cmp rsi,rax
0x94ec: jne 0x88da
0x94f2: mov rdi,qword ptr [rbp-0x308]
0x94f9: call 0xa820
0x94fe: test rax,rax
0x9501: je 0x88da
0x9507: mov rdi,rax
0x950a: mov rsi,r12
0x950d: mov qword ptr [rbp-0x328],rax
0x9514: call 0x2cf0
0x9519: mov rdx,qword ptr [rbp-0x328]
0x9520: test eax,eax
0x9522: mov rdi,rdx
0x9525: jne 0x9d22
0x952b: call 0x30d0
0x9530: mov rdi,r12
0x9533: call 0x30d0
0x9538: jmp 0x9110
0x95c8: mov edi,dword ptr [rbp-0x328]
0x95ce: mov rsi,rcx
0x95d1: call 0x4ee0
0x95d6: test al,al
0x95d8: je 0x9af3
0x95de: xor r8d,r8d
0x95e1: jmp 0x8d4d
0x9687: cmp byte ptr [rbx+0x24],0x0
0x968b: je 0x91e4
0x9691: jmp 0x8eb2
0x96de: xor r8d,r8d
0x96e1: mov qword ptr [rbp-0x330],0x0
0x96ec: jmp 0x8eb5
0x97e2: jmp 0x8eb2
0x98e8: jmp 0x979a
0x9901: add rax,0x1
0x9905: mov qword ptr [rbp-0x370],rax
0x990c: jmp 0x8c23
0x992c: cmp byte ptr [rbp-0x2d0],0x0
0x9933: je 0x9b50
0x9939: xor r9d,r9d
0x993c: cmp dword ptr [rbx+0xc],0x3
0x9940: mov eax,0x0
0x9945: sete r9b
0x9949: cmp byte ptr [rbp-0x3a5],0x0
0x9950: cmovne rax,qword ptr [rbp-0x398]
0x9958: mov qword ptr [rbp-0x398],rax
0x995f: jmp 0x9721
0x9964: mov edx,dword ptr [rbp-0x320]
0x996a: mov edi,dword ptr [rbp-0x328]
0x9970: xor eax,eax
0x9972: mov esi,0x40049409
0x9977: call 0x2c10
0x997c: test eax,eax
0x997e: je 0x91cf
0x9984: cmp dword ptr [rbx+0x38],0x2
0x9988: jne 0x8b0c
0x998e: mov rdx,qword ptr [rbp-0x310]
0x9995: mov esi,0x4
0x999a: mov edi,0x1
0x999f: call 0xf2d0
0x99a4: mov rdx,qword ptr [rbp-0x308]
0x99ab: mov esi,0x4
0x99b0: xor edi,edi
0x99b2: mov r12,rax
0x99b5: call 0xf2d0
0x99ba: lea rsi,[rip+0xe4ed]
0x99c1: mov edx,0x5
0x99c6: xor edi,edi
0x99c8: mov qword ptr [rbp-0x338],rax
0x99cf: call 0x2ad0
0x99d4: mov qword ptr [rbp-0x330],rax
0x99db: call 0x2950
0x99e0: mov rcx,qword ptr [rbp-0x338]
0x99e7: mov esi,dword ptr [rax]
0x99e9: mov r8,r12
0x99ec: mov rdx,qword ptr [rbp-0x330]
0x99f3: xor edi,edi
0x99f5: xor eax,eax
0x99f7: call 0x2f30
0x99fc: xor r8d,r8d
0x99ff: mov qword ptr [rbp-0x330],0x0
0x9a0a: jmp 0x8eb5
0x9a9e: mov rax,qword ptr [rbp-0x370]
0x9aa5: lea rdi,[r12+rax]
0x9aa9: call 0x12010
0x9aae: lea rcx,[rax+r12-0x1]
0x9ab3: xor edx,edx
0x9ab5: mov qword ptr [rbp-0x330],rax
0x9abc: mov rax,rcx
0x9abf: div r12
0x9ac2: sub rcx,rdx
0x9ac5: cmp dword ptr [rbp-0x348],0x0
0x9acc: mov qword ptr [rbp-0x3b0],rcx
0x9ad3: jne 0x9a5f
0x9ad5: xor r9d,r9d
0x9ad8: cmp dword ptr [rbx+0xc],0x3
0x9adc: lea rax,[rbp-0x2f0]
0x9ae3: mov qword ptr [rbp-0x348],rax
0x9aea: sete r9b
0x9aee: jmp 0x9721
0x9af3: mov rdx,qword ptr [rbp-0x308]
0x9afa: mov esi,0x3
0x9aff: xor edi,edi
0x9b01: mov rbx,qword ptr [rbp-0x388]
0x9b08: mov r13d,dword ptr [rbp-0x360]
0x9b0f: call 0xf4f0
0x9b14: lea rsi,[rip+0xe3ae]
0x9b1b: mov r12,rax
0x9b1e: mov edx,0x5
0x9b4b: jmp 0x8ea6
0x9b50: mov rdx,qword ptr [rbp-0x310]
0x9b57: mov esi,0x3
0x9b5c: xor edi,edi
0x9b5e: call 0xf4f0
0x9b63: mov edx,0x5
0x9b68: mov r12,rax
0x9b6b: lea rsi,[rip+0xdff6]
0x9b72: jmp 0x97ba
0x9ba6: mov rsi,qword ptr [rbp-0x308]
0x9bad: mov edi,0x4
0x9bb2: call 0xf3f0
0x9bb7: lea rsi,[rip+0xe22c]
0x9bbe: mov edx,0x5
0x9bc3: xor edi,edi
0x9bc5: mov qword ptr [rbp-0x328],rax
0x9bcc: call 0x2ad0
0x9bd1: mov rcx,qword ptr [rbp-0x328]
0x9bd8: mov rdx,rax
0x9bdb: mov esi,dword ptr [r12]
0x9bdf: jmp 0x7d61
0x9be4: lea rsi,[rip+0xdbe5]
0x9beb: xor edi,edi
0x9bed: mov edx,0x5
0x9bf2: call 0x2ad0
0x9bf7: mov r12,rax
0x9bfa: call 0x2950
0x9bff: mov rcx,qword ptr [rbp-0x308]
0x9c06: mov esi,dword ptr [rax]
0x9c08: xor edi,edi
0x9c0a: xor eax,eax
0x9c0c: mov rdx,r12
0x9c0f: call 0x2f30
0x9c14: movzx r8d,byte ptr [rbx+0x24]
0x9c19: test r8b,r8b
0x9c1c: jne 0x6bb0
0x9c22: jmp 0x619f
0x9c27: mov rsi,qword ptr [rbp-0x308]
0x9c2e: mov edi,0x4
0x9c33: mov byte ptr [rbp-0x328],r8b
0x9c3a: call 0xf3f0
0x9c3f: lea rsi,[rip+0xdefa]
0x9c46: mov r12,rax
0x9c49: mov edx,0x5
0x9c4e: xor edi,edi
0x9c50: call 0x2ad0
0x9c55: mov rcx,r12
0x9c58: mov rdx,rax
0x9c5b: xor esi,esi
0x9c5d: xor edi,edi
0x9c5f: xor eax,eax
0x9c61: call 0x2f30
0x9c66: mov qword ptr [rbp-0x330],0x0
0x9c71: movzx r8d,byte ptr [rbp-0x328]
0x9c79: jmp 0x7d78
0x9d22: call 0x30d0
0x9d27: jmp 0x88da
0x9d80: cmp r10d,0x2
0x9d84: je 0x9df5
0x9db5: add rsp,0x20
0x9db9: mov rsi,qword ptr [rsp+0x8]
0x9dbe: xor rsi,qword ptr fs:0x28
0x9dc7: jne 0x9e14
0x9dc9: add rsp,0x18
0x9dcd: ret 
0x9dd0: cmp byte ptr [rcx+0x2c],0x0
0x9dd4: je 0x9d7b
0x9dd6: lea rcx,[rip+0xe21b]
0x9ddd: lea rsi,[rip+0xe1e6]
0x9de4: lea rdi,[rip+0xde9d]
0x9deb: mov edx,0xb8a
0x9df0: call 0x2be0
0x9df5: lea rcx,[rip+0xe1fc]
0x9dfc: lea rsi,[rip+0xe1c7]
0x9e03: lea rdi,[rip+0xdea6]
0x9e0a: mov edx,0xb8d
0x9e0f: call 0x2be0
0x9e14: call 0x2b30
0x9e19: lea rcx,[rip+0xe1d8]
0x9e20: lea rsi,[rip+0xe1a3]
0x9e27: lea rdi,[rip+0xde32]
0x9e2e: mov edx,0xb89
0x9e33: call 0x2be0
0x9e38: lea rcx,[rip+0xe1b9]
0x9e3f: lea rsi,[rip+0xe184]
0x9e46: lea rdi,[rip+0xddeb]
0x9e4d: mov edx,0xb88
0x9e52: call 0x2be0
0x9e57: lea rcx,[rip+0xe19a]
0x9e5e: lea rsi,[rip+0xe165]
0x9e65: lea rdi,[rip+0xdda4]
0x9e6c: mov edx,0xb87
0x9e71: call 0x2be0
0x9e76: lea rcx,[rip+0xe17b]
0x9e7d: lea rsi,[rip+0xe146]
0x9e84: lea rdi,[rip+0xe15c]
0x9e8b: mov edx,0xb86
0x9e90: call 0x2be0
0x9e95: nop word ptr cs:[rax+rax]
0x9e9f: nop 
0x9ea0: mov rax,qword ptr [rdi]
0x9ea3: xor edx,edx
0x9ea5: div rsi
0x9ea8: mov rax,rdx
0x9eab: ret 
0x9eb0: xor eax,eax
0x9eb2: mov rdx,qword ptr [rsi]
0x9eb5: cmp qword ptr [rdi],rdx
0x9eb8: je 0x9ec0
0x9eba: rep ret 
0x9ec0: mov rax,qword ptr [rsi+0x8]
0x9ec4: cmp qword ptr [rdi+0x8],rax
0x9ec8: sete al
0x9ecb: ret 
0x9ed0: push rbx
0x9ed1: mov rbx,rdi
0x9ed4: mov rdi,qword ptr [rdi+0x10]
0x9ed8: call 0x30d0
0x9edd: mov rdi,rbx
0x9ee0: pop rbx
0x9ee1: jmp 0x30d0
0x9f55: call 0x2b30
0x9f5a: nop word ptr [rax+rax]
0x9f60: sub rsp,0x28
0x9f64: mov qword ptr [rsp],rdi
0x9f68: mov rdi,qword ptr [rip+0x215629]
0x9f6f: mov qword ptr [rsp+0x8],rsi
0x9f74: mov rsi,rsp
0x9f77: mov rax,qword ptr fs:0x28
0x9f80: mov qword ptr [rsp+0x18],rax
0x9f85: xor eax,eax
0x9f87: call 0xbfb0
0x9f8c: test rax,rax
0x9f8f: je 0x9fb0
0x9f91: mov rax,qword ptr [rax+0x10]
0x9f95: mov rdx,qword ptr [rsp+0x18]
0x9f9a: xor rdx,qword ptr fs:0x28
0x9fa3: jne 0x9fb4
0x9fa5: add rsp,0x28
0x9fa9: ret 
0x9fb0: xor eax,eax
0x9fb2: jmp 0x9f95
0x9fb4: call 0x2b30
0x9fb9: nop dword ptr [rax]
0x9fc0: push r13
0x9fc2: push r12
0x9fc4: mov r13,rdi
0x9fc7: push rbp
0x9fc8: push rbx
0x9fc9: mov edi,0x18
0x9fce: mov r12,rsi
0x9fd1: mov rbp,rdx
0x9fd4: sub rsp,0x8
0x9fd8: call 0x12010
0x9fdd: mov rdi,r13
0x9fe0: mov rbx,rax
0x9fe3: call 0x12240
0x9fe8: mov rdi,qword ptr [rip+0x2155a9]
0x9fef: mov rsi,rbx
0x9ff2: mov qword ptr [rbx+0x10],rax
0x9ff6: mov qword ptr [rbx],r12
0x9ff9: mov qword ptr [rbx+0x8],rbp
0x9ffd: call 0xca20
0x10003: xor ebp,ebp
0x10005: mov dword ptr [rbx],r12d
0x10008: jmp 0xffdc
0x10010: mov dword ptr [rdi],0x0
0x10016: ret 
0x10020: xor eax,eax
0x10022: cmp dword ptr [rdi],0x4
0x10025: je 0x10030
0x10027: rep ret 
0x10030: mov eax,dword ptr [rdi+0x4]
0x10033: ret 
0x10040: test rcx,rcx
0x10043: push r14
0x10045: mov r14d,edx
0x10048: push r13
0x1004a: mov r13,rsi
0x1004d: push r12
0x1004f: mov r12,rdi
0x10052: push rbp
0x10053: mov rbp,rcx
0x10056: push rbx
0x10057: je 0x10178
0x1005d: mov esi,edx
0x1005f: mov rdi,r13
0x10062: shl esi,0x11
0x10065: and esi,0x20000
0x1006b: or esi,0x10900
0x10071: call 0x2a70
0x10076: mov dword ptr [rbp],eax
0x10079: mov ebx,eax
0x1007b: call 0x2950
0x10080: mov eax,dword ptr [rax]
0x10082: mov dword ptr [rbp+0x4],eax
0x10085: test ebx,ebx
0x10087: js 0x100c8
0x10089: and r14d,0x2
0x1008d: je 0x100d6
0x1008f: test rbp,rbp
0x10092: sete al
0x10095: xor r14d,r14d
0x10098: test ebx,ebx
0x1009a: js 0x100b6
0x1009c: test al,al
0x1009e: je 0x100b6
0x100a0: call 0x2950
0x100a5: mov r12d,dword ptr [rax]
0x100a8: mov rbp,rax
0x100ab: mov edi,ebx
0x100ad: call 0x2c30
0x100b2: mov dword ptr [rbp],r12d
0x100b6: pop rbx
0x100b7: mov eax,r14d
0x100ba: pop rbp
0x100bb: pop r12
0x100bd: pop r13
0x100bf: pop r14
0x100c1: ret 
0x100c8: call 0x2950
0x100cd: cmp dword ptr [rax],0xd
0x100d0: jne 0x102a0
0x100d6: mov ecx,dword ptr [r12]
0x100da: cmp ecx,0x5
0x100dd: ja 0x102ca
0x100e3: mov eax,0x1
0x100e8: shl rax,cl
0x100eb: test al,0x36
0x100ed: jne 0x10124
0x100ef: test al,0x8
0x100f1: jne 0x101c0
0x100f7: test ecx,ecx
0x100f9: jne 0x102ca
0x100ff: lea rdi,[rip+0x7d5d]
0x10106: xor esi,esi
0x10108: xor eax,eax
0x1010a: call 0xb490
0x1010f: test eax,eax
0x10111: js 0x10220
0x10117: mov dword ptr [r12],0x1
0x1011f: mov dword ptr [r12+0x4],eax
0x10124: test ebx,ebx
0x10126: js 0x10158
0x10128: mov edi,ebx
0x1012a: call 0x2e60
0x1012f: test eax,eax
0x10131: mov r14d,eax
0x10134: jne 0x101b0
0x10136: cmp dword ptr [r12],0x5
0x1013b: ja 0x102ab
0x10141: mov eax,dword ptr [r12]
0x10145: lea rdx,[rip+0x8704]
0x1014c: movsxd rax,dword ptr [rdx+rax*4]
0x10150: add rax,rdx
0x10153: jmp rax
0x10158: mov rdi,r13
0x1015b: call 0x2b20
0x10160: test eax,eax
0x10162: mov r14d,eax
0x10165: je 0x10136
0x10167: pop rbx
0x10168: mov eax,r14d
0x1016b: pop rbp
0x1016c: pop r12
0x1016e: pop r13
0x10170: pop r14
0x10172: ret 
0x10178: test dl,0x1
0x1017b: mov ebx,0xffffffff
0x10180: je 0x100d6
0x10186: mov esi,edx
0x10188: mov rdi,r13
0x1018b: shl esi,0x11
0x1018e: and esi,0x20000
0x10194: or esi,0x10900
0x1019a: call 0x2a70
0x1019f: mov ebx,eax
0x101a1: jmp 0x10085
0x101b0: test rbp,rbp
0x101b3: sete al
0x101b6: jmp 0x10098
0x101c0: mov edx,dword ptr [r12+0x4]
0x101c5: test edx,edx
0x101c7: js 0x10259
0x101cd: test ebx,ebx
0x101cf: jns 0x10128
0x101d5: jmp 0x10158
0x10220: call 0x2950
0x10225: mov eax,dword ptr [rax]
0x10227: cmp eax,0xd
0x1022a: je 0x10248
0x1022c: cmp eax,0x74
0x1022f: je 0x10248
0x10231: mov dword ptr [r12],0x4
0x10239: mov dword ptr [r12+0x4],eax
0x1023e: jmp 0x10124
0x10248: mov dword ptr [r12],0x3
0x10250: mov dword ptr [r12+0x4],0xffffffff
0x10259: call 0x30a0
0x1025e: cmp eax,0x0
0x10261: mov dword ptr [r12+0x4],eax
0x10266: je 0x10124
0x1026c: mov eax,0x1
0x10271: mov r14d,0xfffffffe
0x10277: jg 0x10098
0x1027d: mov dword ptr [r12],0x4
0x10285: call 0x2950
0x1028a: mov eax,dword ptr [rax]
0x1028c: mov dword ptr [r12+0x4],eax
0x10291: jmp 0x10124
0x102a0: mov r14d,0xffffffff
0x102a6: jmp 0x100b6
0x102ab: lea rcx,[rip+0x860e]
0x102b2: lea rsi,[rip+0x8577]
0x102b9: lea rdi,[rip+0x8567]
0x102c0: mov edx,0x9f
0x102c5: call 0x2be0
0x102ca: lea rcx,[rip+0x85df]
0x102d1: lea rsi,[rip+0x8558]
0x102d8: lea rdi,[rip+0x8548]
0x102df: mov edx,0x63
0x102e4: call 0x2be0
0x102e9: nop dword ptr [rax]
0x1041d: lea rcx,[rip+0x847c]
0x10424: lea rsi,[rip+0x8405]
0x1042b: lea rdi,[rip+0x83f5]
0x10432: mov edx,0xe2
0x10437: call 0x2be0
0x1043c: mov edi,esi
0x1043e: call 0x2980
0x10443: nop dword ptr [rax]
0x10446: nop word ptr cs:[rax+rax]
0x104a6: lea rcx,[rip+0x83e3]
0x104ad: lea rsi,[rip+0x837c]
0x104b4: lea rdi,[rip+0x836c]
0x104bb: mov edx,0xfb
0x104c0: call 0x2be0
0x104c5: nop 
0x104c6: nop word ptr cs:[rax+rax]
0x104d3: push rsi
0x10565: cmp dword ptr [rsp+0x18],r13d
0x1056a: jle 0x105ab
0x1056c: mov ecx,dword ptr [rsp+0x1c]
0x10570: mov rdi,qword ptr [rsp+0x10]
0x10575: movsxd rax,r13d
0x10578: sub ecx,r13d
0x1057b: lea r14,[rdi+rax*8]
0x1057f: mov r13,rcx
0x10582: add r13,rax
0x10585: lea r13,[rdi+r13*8+0x8]
0x1058a: nop word ptr [rax+rax]
0x10590: mov rdi,qword ptr [r14]
0x10593: mov rdx,r12
0x10596: mov rsi,rbx
0x10599: call rbp
0x1059b: cmp r15d,eax
0x1059e: cmovl r15d,eax
0x105a2: add r14,0x8
0x105a6: cmp r14,r13
0x105a9: jne 0x10590
0x105ab: mov rcx,qword ptr [rsp+0x28]
0x105b0: xor rcx,qword ptr fs:0x28
0x105b9: mov eax,r15d
0x105bc: jne 0x10657
0x105c2: add rsp,0x38
0x105c6: pop rbx
0x105c7: pop rbp
0x105c8: pop r12
0x105ca: pop r13
0x105cc: pop r14
0x105ce: pop r15
0x105d0: ret 
0x1062e: cmp r15d,eax
0x10631: cmovl r15d,eax
0x1064d: mov eax,dword ptr [rsp+0x24]
0x10651: test eax,eax
0x10653: jg 0x1061a
0x10655: jmp 0x10608
0x10657: call 0x2b30
0x1065c: nop dword ptr [rax]
0x10660: push rbx
0x10661: mov rsi,rdi
0x10664: mov edi,0x1
0x10669: sub rsp,0xa0
0x10670: mov rdx,rsp
0x10673: mov rax,qword ptr fs:0x28
0x1067c: mov qword ptr [rsp+0x98],rax
0x10684: xor eax,eax
0x10686: call 0x2b00
0x1068b: mov ebx,eax
0x1068d: call 0x2950
0x10692: test ebx,ebx
0x10694: je 0x106b0
0x10696: mov edx,dword ptr [rax]
0x10698: cmp edx,0x4b
0x1069b: je 0x106b0
0x1069d: xor eax,eax
0x1069f: cmp edx,0x2
0x106a2: setne al
0x106a5: neg eax
0x106a7: jmp 0x106bb
0x106b0: mov dword ptr [rax],0x11
0x106b6: mov eax,0xffffffff
0x106bb: mov rcx,qword ptr [rsp+0x98]
0x106c3: xor rcx,qword ptr fs:0x28
0x106cc: jne 0x106d7
0x106ce: add rsp,0xa0
0x106d5: pop rbx
0x106d6: ret 
0x106d7: call 0x2b30
0x106dc: nop dword ptr [rax]
0x106e0: mov esi,0x1c0
0x106e5: jmp 0x29c0
0x106f0: mov esi,dword ptr [rsi]
0x106f2: mov edx,0x180
0x106f7: xor eax,eax
0x106f9: and sil,0x3c
0x106fd: or sil,-0x3e
0x10701: jmp 0x2f60
0x10710: push r15
0x10712: push r14
0x10714: mov r15,rdi
0x10717: push r13
0x10719: push r12
0x1071b: mov r14,r8
0x1071e: push rbp
0x1071f: push rbx
0x10720: mov ebp,esi
0x10722: sub rsp,0x38
0x10726: mov qword ptr [rsp+0x18],rdx
0x1072b: mov qword ptr [rsp],rdi
0x1072f: mov qword ptr [rsp+0x20],rcx
0x10734: call 0x2950
0x10739: mov qword ptr [rsp+0x8],rax
0x1073e: mov eax,dword ptr [rax]
0x10740: mov rdi,r15
0x10743: mov dword ptr [rsp+0x2c],eax
0x10747: call 0x2af0
0x1074c: movsxd rsi,ebp
0x1074f: lea rdx,[rsi+r14]
0x10753: cmp rdx,rax
0x10756: ja 0x1086b
0x1075c: sub rax,r14
0x1075f: mov rbx,rax
0x10762: sub rbx,rsi
0x10765: lea rsi,[rip+0x796f]
0x1076c: lea rax,[r15+rbx]
0x10770: mov rdi,rax
0x10773: mov qword ptr [rsp+0x10],rax
0x10778: call 0x2c50
0x1077d: cmp r14,rax
0x10780: ja 0x1086b
0x10786: xor edi,edi
0x10788: mov rsi,r14
0x1078b: call 0x132e0
0x10790: test rax,rax
0x10793: mov rbp,rax
0x10796: je 0x1087d
0x1079c: mov rax,qword ptr [rsp]
0x107a0: lea r12,[rip+0x8199]
0x107a7: mov r13d,0x3a2f8
0x107ad: add rax,r14
0x107b0: add rbx,rax
0x107b3: nop dword ptr [rax+rax]
0x107b8: test r14,r14
0x107bb: mov r15,qword ptr [rsp+0x10]
0x107c0: je 0x107e7
0x107c2: nop word ptr [rax+rax]
0x107c8: mov esi,0x3d
0x107cd: mov rdi,rbp
0x107d0: add r15,0x1
0x107d4: call 0x13330
0x107d9: movzx eax,byte ptr [r12+rax]
0x107de: mov byte ptr [r15-0x1],al
0x107e2: cmp r15,rbx
0x107e5: jne 0x107c8
0x107e7: mov rsi,qword ptr [rsp+0x18]
0x107ec: mov rdi,qword ptr [rsp]
0x107f0: mov rax,qword ptr [rsp+0x20]
0x107f5: call rax
0x107f7: test eax,eax
0x107f9: mov edx,eax
0x107fb: jns 0x10829
0x107fd: mov rax,qword ptr [rsp+0x8]
0x10802: mov ecx,dword ptr [rax]
0x10804: cmp ecx,0x11
0x10807: jne 0x10864
0x10809: sub r13d,0x1
0x1080d: jne 0x107b8
0x1080f: mov rdi,rbp
0x10812: call 0x13470
0x10817: mov rax,qword ptr [rsp+0x8]
0x1081c: mov edx,0xffffffff
0x10821: mov dword ptr [rax],0x11
0x10827: jmp 0x10853
0x10829: mov rcx,qword ptr [rsp+0x8]
0x1082e: mov eax,dword ptr [rsp+0x2c]
0x10832: mov dword ptr [rcx],eax
0x10834: mov ecx,eax
0x10836: mov rdi,rbp
0x10839: mov dword ptr [rsp+0x10],edx
0x1083d: mov dword ptr [rsp],ecx
0x10840: call 0x13470
0x10845: mov rax,qword ptr [rsp+0x8]
0x1084a: mov ecx,dword ptr [rsp]
0x1084d: mov edx,dword ptr [rsp+0x10]
0x10851: mov dword ptr [rax],ecx
0x10853: add rsp,0x38
0x10857: mov eax,edx
0x10859: pop rbx
0x1085a: pop rbp
0x1085b: pop r12
0x1085d: pop r13
0x1085f: pop r14
0x10861: pop r15
0x10863: ret 
0x10864: mov edx,0xffffffff
0x10869: jmp 0x10836
0x1086b: mov rax,qword ptr [rsp+0x8]
0x10870: mov edx,0xffffffff
0x10875: mov dword ptr [rax],0x16
0x1087b: jmp 0x10853
0x1087d: mov edx,0xffffffff
0x10882: jmp 0x10853
0x10890: sub rsp,0x18
0x10894: cmp ecx,0x1
0x10897: mov dword ptr [rsp+0xc],edx
0x1089b: je 0x10900
0x1089d: cmp ecx,0x2
0x108a0: je 0x108c8
0x108a2: test ecx,ecx
0x108a4: je 0x108e0
0x108a6: lea rcx,[rip+0x8073]
0x108ad: lea rsi,[rip+0x801c]
0x108b4: lea rdi,[rip+0x803d]
0x108bb: mov edx,0x147
0x108c0: call 0x2be0
0x108c5: nop dword ptr [rax]
0x108c8: lea rdx,[rsp+0xc]
0x108cd: lea rcx,[rip-0x274]
0x108d4: call 0x10710
0x108d9: add rsp,0x18
0x108dd: ret 
0x108e0: lea rdx,[rsp+0xc]
0x108e5: lea rcx,[rip-0x1fc]
0x108ec: call 0x10710
0x108f1: add rsp,0x18
0x108f5: ret 
0x10900: lea rdx,[rsp+0xc]
0x10905: lea rcx,[rip-0x22c]
0x1090c: call 0x10710
0x10911: add rsp,0x18
0x10915: ret 
0x10920: mov r8d,0x6
0x10926: jmp 0x10890
0x10930: mov r8d,0x6
0x10936: jmp 0x10710
0x10940: push r13
0x10942: push r12
0x10944: push rbp
0x10945: push rbx
0x10946: mov ebx,edi
0x10948: sub rsp,0x8
0x1094c: cmp edi,0x2
0x1094f: ja 0x10972
0x10951: call 0x13f40
0x10956: mov r12d,eax
0x10959: call 0x2950
0x1095e: mov r13d,dword ptr [rax]
0x10961: mov rbp,rax
0x10964: mov edi,ebx
0x10966: call 0x2c30
0x1096b: mov ebx,r12d
0x1096e: mov dword ptr [rbp],r13d
0x10972: add rsp,0x8
0x10976: mov eax,ebx
0x10978: pop rbx
0x10979: pop rbp
0x1097a: pop r12
0x1097c: pop r13
0x1097e: ret 
0x10980: mov rax,qword ptr [rdi]
0x10983: xor edx,edx
0x10985: div rsi
0x10988: mov rax,rdx
0x1098b: ret 
0x10990: mov rax,qword ptr [rsi]
0x10993: cmp qword ptr [rdi],rax
0x10996: sete al
0x10999: ret 
0x109a0: push r15
0x109a2: push r14
0x109a4: push r13
0x109a6: push r12
0x109a8: push rbp
0x109a9: push rbx
0x109aa: mov ebx,r8d
0x109ad: and ebx,0x1
0x109b0: sub rsp,0x128
0x109b7: mov r13,qword ptr [rcx+0x60]
0x109bb: mov r14,qword ptr [rdx+0x58]
0x109bf: mov rax,qword ptr fs:0x28
0x109c8: mov qword ptr [rsp+0x118],rax
0x109d0: xor eax,eax
0x109d2: test ebx,ebx
0x109d4: mov r12,qword ptr [rcx+0x58]
0x109d8: mov r15,qword ptr [rdx+0x60]
0x109dc: mov r9d,r13d
0x109df: je 0x10ac8
0x109e5: cmp r14,r12
0x109e8: mov r10d,edi
0x109eb: sete qword ptr [rsp+0x38]
0x109f0: movzx edi,byte ptr [rsp+0x38]
0x109f5: cmp r15d,r13d
0x109f8: sete al
0x109fb: and al,dil
0x109fe: mov byte ptr [rsp+0x8],al
0x10a02: jne 0x10b10
0x10a08: lea rax,[r12-0x1]
0x10a0d: cmp rax,r14
0x10a10: jg 0x10b18
0x10a16: lea rax,[r14-0x1]
0x10a1a: cmp rax,r12
0x10a1d: jg 0x10adf
0x10a23: mov rbp,rdx
0x10a26: mov rdx,qword ptr [rip+0x20ecf3]
0x10a2d: mov r11,rsi
0x10a30: test rdx,rdx
0x10a33: je 0x10fd0
0x10a39: mov rsi,qword ptr [rip+0x20ecd8]
0x10a40: test rsi,rsi
0x10a43: je 0x10b20
0x10a49: mov rax,qword ptr [rbp]
0x10a4d: mov rdi,rdx
0x10a50: mov qword ptr [rsp+0x28],r11
0x10a55: mov dword ptr [rsp+0x20],r10d
0x10a5a: mov dword ptr [rsp+0x18],r9d
0x10a5f: mov qword ptr [rsi],rax
0x10a62: call 0xca20
0x10a67: test rax,rax
0x10a6a: mov qword ptr [rsp+0x10],rax
0x10a6f: mov r9d,dword ptr [rsp+0x18]
0x10a74: mov r10d,dword ptr [rsp+0x20]
0x10a79: mov r11,qword ptr [rsp+0x28]
0x10a7e: je 0x10b78
0x10a84: cmp qword ptr [rip+0x20ec8d],rax
0x10a8b: je 0x11030
0x10a91: mov rax,qword ptr [rsp+0x10]
0x10a96: cmp byte ptr [rax+0xc],0x0
0x10a9a: mov esi,dword ptr [rax+0x8]
0x10a9d: mov dword ptr [rsp+0x18],esi
0x10aa1: je 0x10bfa
0x10aa7: xor eax,eax
0x10aa9: cmp esi,0x77359400
0x10aaf: sete al
0x10ab2: not eax
0x10ab4: cltq 
0x10ab6: and r12,rax
0x10ab9: mov eax,r9d
0x10abc: mov r9d,r13d
0x10abf: cltd 
0x10ac0: idiv esi
0x10ac2: sub r9d,edx
0x10ac5: nop dword ptr [rax]
0x10ac8: cmp r12,r14
0x10acb: jg 0x10b18
0x10acd: mov ebx,0x1
0x10ad2: jl 0x10adf
0x10ad4: cmp r9d,r15d
0x10ad7: jg 0x10b18
0x10ad9: setl bl
0x10adc: movzx ebx,bl
0x10adf: mov rsi,qword ptr [rsp+0x118]
0x10ae7: xor rsi,qword ptr fs:0x28
0x10af0: mov eax,ebx
0x10af2: jne 0x110c8
0x10af8: add rsp,0x128
0x10aff: pop rbx
0x10b00: pop rbp
0x10b01: pop r12
0x10b03: pop r13
0x10b05: pop r14
0x10b07: pop r15
0x10b09: ret 
0x10b10: xor ebx,ebx
0x10b12: jmp 0x10adf
0x10b18: mov ebx,0xffffffff
0x10b1d: jmp 0x10adf
0x10b20: mov edi,0x10
0x10b25: mov qword ptr [rsp+0x28],r11
0x10b2a: mov dword ptr [rsp+0x20],r10d
0x10b2f: mov dword ptr [rsp+0x18],r9d
0x10b34: mov qword ptr [rsp+0x10],rdx
0x10b39: call 0x2df0
0x10b3e: test rax,rax
0x10b41: mov rsi,rax
0x10b44: mov qword ptr [rip+0x20ebcd],rax
0x10b4b: mov rdx,qword ptr [rsp+0x10]
0x10b50: mov r9d,dword ptr [rsp+0x18]
0x10b55: mov r10d,dword ptr [rsp+0x20]
0x10b5a: mov r11,qword ptr [rsp+0x28]
0x10b5f: je 0x10b88
0x10b61: mov dword ptr [rax+0x8],0x77359400
0x10b68: mov byte ptr [rax+0xc],0x0
0x10b6c: jmp 0x10a49
0x10b78: mov rdx,qword ptr [rip+0x20eba1]
0x10b7f: test rdx,rdx
0x10b82: je 0x11022
0x10b88: lea rcx,[rsp+0x50]
0x10b8d: mov rax,qword ptr [rbp]
0x10b91: mov rdi,rdx
0x10b94: mov qword ptr [rsp+0x30],r11
0x10b99: mov dword ptr [rsp+0x28],r10d
0x10b9e: mov rsi,rcx
0x10ba1: mov dword ptr [rsp+0x20],r9d
0x10ba6: mov qword ptr [rsp+0x18],rcx
0x10bab: mov qword ptr [rsp+0x50],rax
0x10bb0: call 0xbfb0
0x10bb5: test rax,rax
0x10bb8: mov qword ptr [rsp+0x10],rax
0x10bbd: mov rcx,qword ptr [rsp+0x18]
0x10bc2: mov r9d,dword ptr [rsp+0x20]
0x10bc7: mov r10d,dword ptr [rsp+0x28]
0x10bcc: mov r11,qword ptr [rsp+0x30]
0x10bd1: jne 0x10a91
0x10bd7: nop word ptr [rax+rax]
0x10be0: mov dword ptr [rsp+0x58],0x77359400
0x10be8: mov byte ptr [rsp+0x5c],0x0
0x10bed: mov dword ptr [rsp+0x18],0x77359400
0x10bf5: mov qword ptr [rsp+0x10],rcx
0x10bfa: mov rcx,qword ptr [rbp+0x50]
0x10bfe: mov eax,0x66666667
0x10c03: mov rsi,qword ptr [rbp+0x70]
0x10c07: imul ecx
0x10c09: mov eax,ecx
0x10c0b: mov qword ptr [rsp+0x28],rcx
0x10c10: sar eax,0x1f
0x10c13: sar edx,0x2
0x10c16: sub edx,eax
0x10c18: lea eax,[rdx+rdx*4]
0x10c1b: mov dword ptr [rsp+0x20],edx
0x10c1f: add eax,eax
0x10c21: sub ecx,eax
0x10c23: mov eax,0x66666667
0x10c28: imul esi
0x10c2a: mov eax,esi
0x10c2c: sar eax,0x1f
0x10c2f: sar edx,0x2
0x10c32: mov edi,edx
0x10c34: sub edi,eax
0x10c36: lea eax,[rdi+rdi*4]
0x10c39: add eax,eax
0x10c3b: sub esi,eax
0x10c3d: mov eax,0x66666667
0x10c42: imul r15d
0x10c45: mov eax,r15d
0x10c48: or ecx,esi
0x10c4a: sar eax,0x1f
0x10c4d: mov esi,r15d
0x10c50: sar edx,0x2
0x10c53: mov r8d,edx
0x10c56: sub r8d,eax
0x10c59: lea eax,[r8+r8*4]
0x10c5d: add eax,eax
0x10c5f: sub esi,eax
0x10c61: or ecx,esi
0x10c63: jne 0x10fb8
0x10c69: cmp dword ptr [rsp+0x18],0xa
0x10c6e: mov rax,qword ptr [rbp+0x48]
0x10c72: mov ecx,edi
0x10c74: mov edx,dword ptr [rsp+0x20]
0x10c78: mov esi,r8d
0x10c7b: mov qword ptr [rsp+0x48],rax
0x10c80: mov dword ptr [rsp+0x30],edx
0x10c84: jle 0x11098
0x10c8a: mov eax,0x66666667
0x10c8f: imul edi
0x10c91: mov eax,edi
0x10c93: sar eax,0x1f
0x10c96: sar edx,0x2
0x10c99: sub edx,eax
0x10c9b: lea eax,[rdx+rdx*4]
0x10c9e: add eax,eax
0x10ca0: sub edi,eax
0x10ca2: mov eax,0x66666667
0x10ca7: imul dword ptr [rsp+0x20]
0x10cab: mov eax,dword ptr [rsp+0x20]
0x10caf: sar eax,0x1f
0x10cb2: sar edx,0x2
0x10cb5: sub edx,eax
0x10cb7: lea eax,[rdx+rdx*4]
0x10cba: mov edx,dword ptr [rsp+0x20]
0x10cbe: mov dword ptr [rsp+0x20],0xa
0x10cc6: add eax,eax
0x10cc8: sub edx,eax
0x10cca: mov eax,0x66666667
0x10ccf: or edi,edx
0x10cd1: imul r8d
0x10cd4: mov eax,r8d
0x10cd7: mov dword ptr [rsp+0x3c],edi
0x10cdb: sar eax,0x1f
0x10cde: mov edi,0x66666667
0x10ce3: sar edx,0x2
0x10ce6: sub edx,eax
0x10ce8: lea eax,[rdx+rdx*4]
0x10ceb: mov edx,0x8
0x10cf0: add eax,eax
0x10cf2: sub r8d,eax
0x10cf5: mov eax,dword ptr [rsp+0x3c]
0x10cf9: or eax,r8d
0x10cfc: jne 0x110b4
0x10d02: mov dword ptr [rsp+0x3c],r9d
0x10d07: mov qword ptr [rsp+0x40],r14
0x10d0c: mov r9d,0xa
0x10d12: mov r8d,dword ptr [rsp+0x30]
0x10d17: mov qword ptr [rsp+0x20],r12
0x10d1c: mov r14d,edx
0x10d1f: mov qword ptr [rsp+0x30],rbp
0x10d24: mov eax,r8d
0x10d27: sar r8d,0x1f
0x10d2b: lea ebp,[r9+r9*4]
0x10d2f: imul edi
0x10d31: mov eax,ecx
0x10d33: sar ecx,0x1f
0x10d36: add ebp,ebp
0x10d38: mov r9d,ebp
0x10d3b: sar edx,0x2
0x10d3e: sub edx,r8d
0x10d41: mov r8d,edx
0x10d44: imul edi
0x10d46: mov eax,esi
0x10d48: sar esi,0x1f
0x10d4b: sar edx,0x2
0x10d4e: sub edx,ecx
0x10d50: mov ecx,edx
0x10d52: imul edi
0x10d54: sar edx,0x2
0x10d57: sub edx,esi
0x10d59: cmp ebp,dword ptr [rsp+0x18]
0x10d5d: mov esi,edx
0x10d5f: jge 0x11040
0x10d65: mov eax,r8d
0x10d68: mov r12d,r8d
0x10d6b: imul edi
0x10d6d: mov eax,r8d
0x10d70: sar eax,0x1f
0x10d73: sar edx,0x2
0x10d76: sub edx,eax
0x10d78: lea eax,[rdx+rdx*4]
0x10d7b: add eax,eax
0x10d7d: sub r12d,eax
0x10d80: mov eax,ecx
0x10d82: imul edi
0x10d84: mov eax,ecx
0x10d86: sar eax,0x1f
0x10d89: sar edx,0x2
0x10d8c: sub edx,eax
0x10d8e: lea eax,[rdx+rdx*4]
0x10d91: mov edx,ecx
0x10d93: add eax,eax
0x10d95: sub edx,eax
0x10d97: mov eax,esi
0x10d99: or r12d,edx
0x10d9c: imul edi
0x10d9e: mov eax,esi
0x10da0: sar eax,0x1f
0x10da3: sar edx,0x2
0x10da6: sub edx,eax
0x10da8: lea eax,[rdx+rdx*4]
0x10dab: mov edx,esi
0x10dad: add eax,eax
0x10daf: sub edx,eax
0x10db1: or r12d,edx
0x10db4: jne 0x11040
0x10dba: sub r14d,0x1
0x10dbe: jne 0x10d24
0x10dc4: mov r14,qword ptr [rsp+0x40]
0x10dc9: mov rbp,qword ptr [rsp+0x30]
0x10dce: mov rax,qword ptr [rsp+0x48]
0x10dd3: mov r12,qword ptr [rsp+0x20]
0x10dd8: mov r9d,dword ptr [rsp+0x3c]
0x10ddd: or rax,r14
0x10de0: or rax,qword ptr [rbp+0x68]
0x10de4: test al,0x1
0x10de6: mov rax,qword ptr [rsp+0x10]
0x10deb: je 0x11078
0x10df1: mov dword ptr [rax+0x8],0x3b9aca00
0x10df8: mov dword ptr [rsp+0x20],0x3b9aca00
0x10e00: mov rax,r12
0x10e03: cmp r14,r12
0x10e06: jg 0x10adf
0x10e0c: cmp r15d,r13d
0x10e0f: jl 0x10e1c
0x10e11: cmp byte ptr [rsp+0x38],0x0
0x10e16: jne 0x10adf
0x10e1c: cmp r14,rax
0x10e1f: jl 0x10b18
0x10e25: jne 0x10e3d
0x10e27: mov eax,r9d
0x10e2a: cltd 
0x10e2b: idiv dword ptr [rsp+0x20]
0x10e2f: mov eax,r13d
0x10e32: sub eax,edx
0x10e34: cmp eax,r15d
0x10e37: jg 0x10b18
0x10e3d: mov rax,qword ptr [rsp+0x48]
0x10e42: mov edx,0x38e38e39
0x10e47: lea rbp,[rsp+0x60]
0x10e4c: mov rsi,r11
0x10e4f: mov edi,r10d
0x10e52: mov ecx,0x100
0x10e57: mov dword ptr [rsp+0x18],r9d
0x10e5c: mov dword ptr [rsp+0x38],r10d
0x10e61: mov qword ptr [rsp+0x60],rax
0x10e66: movsxd rax,dword ptr [rsp+0x28]
0x10e6b: mov qword ptr [rsp+0x68],rax
0x10e70: movzx eax,byte ptr [rsp+0x8]
0x10e75: mov qword ptr [rsp+0x8],r11
0x10e7a: or rax,r14
0x10e7d: mov qword ptr [rsp+0x70],rax
0x10e82: mov eax,dword ptr [rsp+0x20]
0x10e86: mul edx
0x10e88: mov eax,edx
0x10e8a: mov rdx,rbp
0x10e8d: shr eax
0x10e8f: add eax,r15d
0x10e92: cltq 
0x10e94: mov qword ptr [rsp+0x78],rax
0x10e99: call 0x2930
0x10e9e: test eax,eax
0x10ea0: mov r10d,dword ptr [rsp+0x38]
0x10ea5: mov r11,qword ptr [rsp+0x8]
0x10eaa: mov r9d,dword ptr [rsp+0x18]
0x10eaf: je 0x10ebb
0x10eb1: mov ebx,0xfffffffe
0x10eb6: jmp 0x10adf
0x10ebb: lea rcx,[rsp+0x80]
0x10ec3: mov rdx,r11
0x10ec6: mov r8d,0x100
0x10ecc: mov esi,r10d
0x10ecf: mov edi,0x1
0x10ed4: mov dword ptr [rsp+0x18],r9d
0x10ed9: mov qword ptr [rsp+0x8],r11
0x10ede: mov dword ptr [rsp+0x38],r10d
0x10ee3: call 0x2b80
0x10ee8: mov rcx,qword ptr [rsp+0xe0]
0x10ef0: mov r8d,eax
0x10ef3: mov rax,qword ptr [rsp+0xd8]
0x10efb: movsxd rdx,r15d
0x10efe: mov r10d,dword ptr [rsp+0x38]
0x10f03: mov r11,qword ptr [rsp+0x8]
0x10f08: mov r9d,dword ptr [rsp+0x18]
0x10f0d: xor rcx,rdx
0x10f10: xor rax,r14
0x10f13: or rax,rcx
0x10f16: movsxd rcx,r8d
0x10f19: or rax,rcx
0x10f1c: jne 0x110cd
0x10f22: mov ecx,dword ptr [rsp+0xd8]
0x10f29: mov esi,0xa
0x10f2e: and ecx,0x1
0x10f31: imul ecx,ecx,0x3b9aca00
0x10f37: add ecx,dword ptr [rsp+0xe0]
0x10f3e: mov eax,ecx
0x10f40: cltd 
0x10f41: idiv esi
0x10f43: test edx,edx
0x10f45: jne 0x11115
0x10f4b: cmp dword ptr [rsp+0x20],0xa
0x10f50: je 0x10f8d
0x10f52: mov r8d,0x9
0x10f58: mov esi,0xa
0x10f5d: mov edi,0xa
0x10f62: jmp 0x10f6d
0x10f64: imul esi,esi,0xa
0x10f67: cmp esi,dword ptr [rsp+0x20]
0x10f6b: je 0x10f8d
0x10f6d: mov eax,ecx
0x10f6f: cltd 
0x10f70: idiv edi
0x10f72: cltd 
0x10f73: mov ecx,eax
0x10f75: idiv edi
0x10f77: test edx,edx
0x10f79: jne 0x1110c
0x10f7f: sub r8d,0x1
0x10f83: jne 0x10f64
0x10f85: mov dword ptr [rsp+0x20],0x77359400
0x10f8d: mov esi,dword ptr [rsp+0x20]
0x10f91: xor eax,eax
0x10f93: cmp esi,0x77359400
0x10f99: mov ebx,esi
0x10f9b: sete al
0x10f9e: not eax
0x10fa0: cltq 
0x10fa2: and r12,rax
0x10fa5: mov eax,r9d
0x10fa8: mov r9d,r13d
0x10fab: cltd 
0x10fac: idiv esi
0x10fae: sub r9d,edx
0x10fb1: nop dword ptr [rax]
0x10fb8: mov rax,qword ptr [rsp+0x10]
0x10fbd: mov dword ptr [rax+0x8],ebx
0x10fc0: mov byte ptr [rax+0xc],0x1
0x10fc4: jmp 0x10ac8
0x10fd0: mov r8,qword ptr [rip+0x20bff9]
0x10fd7: lea rdx,[rip-0x65e]
0x10fde: lea rcx,[rip-0x655]
0x10fe5: mov qword ptr [rsp+0x20],rsi
0x10fea: mov edi,0x10
0x10fef: xor esi,esi
0x10ff1: mov dword ptr [rsp+0x18],r10d
0x10ff6: mov dword ptr [rsp+0x10],r13d
0x10ffb: call 0xc220
0x11000: test rax,rax
0x11003: mov rdx,rax
0x11006: mov qword ptr [rip+0x20e713],rax
0x1100d: mov r9d,dword ptr [rsp+0x10]
0x11012: mov r10d,dword ptr [rsp+0x18]
0x11017: mov r11,qword ptr [rsp+0x20]
0x1101c: jne 0x10a39
0x11022: lea rcx,[rsp+0x50]
0x11027: jmp 0x10be0
0x11030: mov qword ptr [rip+0x20e6dd],0x0
0x1103b: jmp 0x10a91
0x11040: cmp ebp,0x77359400
0x11046: mov r12,qword ptr [rsp+0x20]
0x1104b: mov rsi,qword ptr [rsp+0x10]
0x11050: sete qword ptr [rsp+0x8]
0x11055: movzx eax,byte ptr [rsp+0x8]
0x1105a: mov dword ptr [rsp+0x20],r9d
0x1105f: mov r14,qword ptr [rsp+0x40]
0x11064: mov r9d,dword ptr [rsp+0x3c]
0x11069: mov dword ptr [rsi+0x8],ebp
0x1106c: not eax
0x1106e: cltq 
0x11070: and rax,r12
0x11073: jmp 0x10e03
0x11078: mov dword ptr [rax+0x8],0x77359400
0x1107f: mov rax,r12
0x11082: mov byte ptr [rsp+0x8],0x1
0x11087: and rax,-0x2
0x1108b: mov dword ptr [rsp+0x20],0x77359400
0x11093: jmp 0x10e03
0x11098: mov rax,qword ptr [rsp+0x10]
0x1109d: mov dword ptr [rsp+0x20],0xa
0x110a5: mov dword ptr [rax+0x8],0xa
0x110ac: mov rax,r12
0x110af: jmp 0x10e03
0x110b4: mov rax,qword ptr [rsp+0x10]
0x110b9: mov dword ptr [rax+0x8],0xa
0x110c0: mov rax,r12
0x110c3: jmp 0x10e03
0x110c8: call 0x2b30
0x110cd: mov qword ptr [rsp+0x78],rdx
0x110d2: mov ecx,0x100
0x110d7: mov rdx,rbp
0x110da: mov rsi,r11
0x110dd: mov edi,r10d
0x110e0: mov dword ptr [rsp+0x8],r8d
0x110e5: mov dword ptr [rsp+0x38],r9d
0x110ea: mov qword ptr [rsp+0x70],r14
0x110ef: call 0x2930
0x110f4: mov r8d,dword ptr [rsp+0x8]
0x110f9: mov r9d,dword ptr [rsp+0x38]
0x110fe: test r8d,r8d
0x11101: jne 0x10eb1
0x11107: jmp 0x10f22
0x1110c: mov dword ptr [rsp+0x20],esi
0x11110: jmp 0x10f8d
0x11115: mov dword ptr [rsp+0x20],ebx
0x11119: jmp 0x10f8d
0x11120: mov r8d,ecx
0x11123: mov rcx,rdx
0x11126: mov rdx,rsi
0x11129: mov rsi,rdi
0x1112c: mov edi,0xffffff9c
0x11131: jmp 0x109a0
0x112d0: mov ecx,0x100
0x112d5: jmp 0x2930
0x115d0: mov qword ptr [rsp+0x8],0x0
0x115d9: xor r13d,r13d
0x115dc: jmp 0x1133d
0x11640: xor r13d,r13d
0x11643: jmp 0x1140a
0x11726: call 0x2b30
0x11870: mov ecx,dword ptr [rip+0x20deb2]
0x11876: xor edx,edx
0x11878: xor ebx,ebx
0x1187a: mov qword ptr [rsp+0x8],0x0
0x11883: test ecx,ecx
0x11885: jns 0x117be
0x1188b: mov dword ptr [rip+0x20de93],0xffffffff
0x1195e: jmp 0x11820
0x11996: call 0x2b30
0x11ae8: mov r8,rcx
0x11aeb: mov rcx,rdx
0x11aee: lea rdx,[rip+0x6e96]
0x11af5: mov esi,0x1
0x11afa: xor eax,eax
0x11afc: call 0x3050
0x11b01: jmp 0x119ec
0x11cfd: push r12
0x11cff: push r15
0x11d01: push r14
0x11d03: mov r8,qword ptr [rsp+0x20]
0x11d08: mov rcx,rbx
0x11d0b: mov rdx,rax
0x11d0e: mov rdi,rbp
0x11d11: mov esi,0x1
0x11d16: xor eax,eax
0x11d18: call 0x3050
0x11d1d: add rsp,0x20
0x11d21: add rsp,0x28
0x11d25: pop rbx
0x11d26: pop rbp
0x11d27: pop r12
0x11d29: pop r13
0x11d2b: pop r14
0x11d2d: pop r15
0x11d2f: ret 
0x11d69: push r12
0x11d6b: push r15
0x11d6d: push r14
0x11d6f: mov r9,qword ptr [rsp+0x28]
0x11d74: jmp 0x11d03
0x11dd0: xor r9d,r9d
0x11dd3: cmp qword ptr [r8],0x0
0x11dd7: je 0x11deb
0x11dd9: nop dword ptr [rax]
0x11de0: add r9,0x1
0x11de4: cmp qword ptr [r8+r9*8],0x0
0x11de9: jne 0x11de0
0x11deb: jmp 0x119b0
0x11df0: sub rsp,0x68
0x11df4: mov r10,r8
0x11df7: xor r9d,r9d
0x11dfa: mov rax,qword ptr fs:0x28
0x11e03: mov qword ptr [rsp+0x58],rax
0x11e08: xor eax,eax
0x11e0a: mov r8,rsp
0x11e0d: nop dword ptr [rax]
0x11e10: mov eax,dword ptr [r10]
0x11e13: cmp eax,0x2f
0x11e16: ja 0x11e5a
0x11e18: mov r11d,eax
0x11e1b: add r11,qword ptr [r10+0x10]
0x11e1f: add eax,0x8
0x11e22: mov dword ptr [r10],eax
0x11e25: mov rax,qword ptr [r11]
0x11e28: test rax,rax
0x11e2b: mov qword ptr [r8+r9*8],rax
0x11e2f: je 0x11e3b
0x11e31: add r9,0x1
0x11e35: cmp r9,0xa
0x11e39: jne 0x11e10
0x11e3b: call 0x119b0
0x11e40: mov rax,qword ptr [rsp+0x58]
0x11e45: xor rax,qword ptr fs:0x28
0x11e4e: jne 0x11e55
0x11e50: add rsp,0x68
0x11e54: ret 
0x11e55: call 0x2b30
0x11e5a: mov r11,qword ptr [r10+0x8]
0x11e5e: lea rax,[r11+0x8]
0x11e62: mov qword ptr [r10+0x8],rax
0x11e66: jmp 0x11e25
0x11f30: call 0x2b30
0x11f3c: mov rax,rbx
0x11f3f: add rbx,0x8
0x11f43: jmp 0x11ef6
0x11f50: push rbx
0x11f51: lea rsi,[rip+0x6a81]
0x11f58: mov edx,0x5
0x11f5d: xor edi,edi
0x11f5f: call 0x2ad0
0x11f64: lea rdx,[rip+0x6a83]
0x11f6b: mov rsi,rax
0x11f6e: mov edi,0x1
0x11f73: xor eax,eax
0x11f75: call 0x2ee0
0x11f7a: lea rsi,[rip+0x6a83]
0x11f81: mov edx,0x5
0x11f86: xor edi,edi
0x11f88: call 0x2ad0
0x11f8d: lea rcx,[rip+0x5324]
0x11f94: lea rdx,[rip+0x456b]
0x11f9b: mov rsi,rax
0x11f9e: mov edi,0x1
0x11fa3: xor eax,eax
0x11fa5: call 0x2ee0
0x11faa: mov rbx,qword ptr [rip+0x20b137]
0x11fb1: lea rsi,[rip+0x6c78]
0x11fb8: xor edi,edi
0x11fba: mov edx,0x5
0x11fbf: call 0x2ad0
0x11fc4: mov rsi,rbx
0x11fc7: mov rdi,rax
0x11fca: pop rbx
0x11fcb: jmp 0x2cb0
0x11fd0: cmp byte ptr [rip+0x20d75a],0x0
0x11fd7: je 0x11fe8
0x11fd9: movzx eax,byte ptr [rip+0x20d750]
0x11fe0: ret 
0x11fe8: sub rsp,0x8
0x11fec: call 0x2c00
0x11ff1: test eax,eax
0x11ff3: mov byte ptr [rip+0x20d737],0x1
0x11ffa: sete al
0x11ffd: mov byte ptr [rip+0x20d72d],al
0x12003: add rsp,0x8
0x12007: ret 
0x1202a: nop word ptr [rax+rax]
0x12030: mov rax,rdi
0x12033: mul rsi
0x12036: mov rdi,rax
0x12039: seto al
0x1203c: test rdi,rdi
0x1203f: js 0x1204b
0x12041: movzx eax,al
0x12044: test rax,rax
0x12047: jne 0x1204b
0x12049: jmp 0x12010
0x1204b: sub rsp,0x8
0x1204f: call 0x12260
0x12054: nop 
0x12056: nop word ptr cs:[rax+rax]
0x12060: jmp 0x12010
0x12070: test rsi,rsi
0x12073: push rbx
0x12074: mov rbx,rsi
0x12077: jne 0x1207e
0x12079: test rdi,rdi
0x1207c: jne 0x12098
0x1207e: mov rsi,rbx
0x12081: call 0x2e90
0x12086: test rax,rax
0x12089: jne 0x12090
0x1208b: test rbx,rbx
0x1208e: jne 0x120a1
0x12090: pop rbx
0x12091: ret 
0x12098: call 0x30d0
0x1209d: xor eax,eax
0x1209f: pop rbx
0x120a0: ret 
0x120a1: call 0x12260
0x120a6: nop word ptr cs:[rax+rax]
0x120b0: mov rax,rsi
0x120b3: mul rdx
0x120b6: mov rsi,rax
0x120b9: seto al
0x120bc: test rsi,rsi
0x120bf: js 0x120cb
0x120c1: movzx eax,al
0x120c4: test rax,rax
0x120c7: jne 0x120cb
0x120c9: jmp 0x12070
0x120cb: sub rsp,0x8
0x120cf: call 0x12260
0x120d4: nop 
0x120d6: nop word ptr cs:[rax+rax]
0x120e0: test rdi,rdi
0x120e3: mov r9,rdx
0x120e6: mov rcx,qword ptr [rsi]
0x120e9: je 0x12120
0x120eb: xor edx,edx
0x120ed: movabsq rax,0x5555555555555554
0x120f7: div r9
0x120fa: cmp rax,rcx
0x120fd: jbe 0x1213b
0x120ff: mov rax,rcx
0x12102: shr rax
0x12105: lea rcx,[rax+rcx+0x1]
0x1210a: mov qword ptr [rsi],rcx
0x1210d: imul rcx,r9
0x12111: mov rsi,rcx
0x12114: jmp 0x12070
0x12120: test rcx,rcx
0x12123: je 0x12148
0x12125: mov rax,rcx
0x12128: mul r9
0x1212b: seto dl
0x1212e: test rax,rax
0x12131: movzx edx,dl
0x12134: js 0x1213b
0x12136: test rdx,rdx
0x12139: je 0x1210a
0x1213b: sub rsp,0x8
0x1213f: call 0x12260
0x12144: nop dword ptr [rax]
0x12148: xor edx,edx
0x1214a: mov eax,0x80
0x1214f: xor r8d,r8d
0x12152: div r9
0x12155: test rax,rax
0x12158: sete r8b
0x1215c: lea rcx,[r8+rax]
0x12160: jmp 0x12125
0x12170: test rdi,rdi
0x12173: mov rax,qword ptr [rsi]
0x12176: je 0x121a0
0x12178: movabsq rdx,0x5555555555555553
0x12182: cmp rax,rdx
0x12185: ja 0x121b1
0x12187: mov rdx,rax
0x1218a: shr rdx
0x1218d: lea rax,[rdx+rax+0x1]
0x12192: mov qword ptr [rsi],rax
0x12195: mov rsi,rax
0x12198: jmp 0x12070
0x121a0: test rax,rax
0x121a3: mov edx,0x80
0x121a8: cmove rax,rdx
0x121ac: test rax,rax
0x121af: jns 0x12192
0x121b1: sub rsp,0x8
0x121b5: call 0x12260
0x121ba: nop word ptr [rax+rax]
0x121c0: push rbx
0x121c1: mov rbx,rdi
0x121c4: call 0x12010
0x121c9: mov rdx,rbx
0x121cc: xor esi,esi
0x121ce: mov rdi,rax
0x121d1: pop rbx
0x121d2: jmp 0x2bf0
0x121e0: mov rax,rdi
0x121e3: sub rsp,0x8
0x121e7: mul rsi
0x121ea: seto dl
0x121ed: test rax,rax
0x121f0: js 0x12209
0x121f2: movzx edx,dl
0x121f5: test rdx,rdx
0x121f8: jne 0x12209
0x121fa: call 0x2cd0
0x121ff: test rax,rax
0x12202: je 0x12209
0x12204: add rsp,0x8
0x12208: ret 
0x12209: call 0x12260
0x1220e: nop 
0x12290: call 0x2940
0x12295: nop word ptr cs:[rax+rax]
0x1229f: nop 
0x12344: cmp eax,0x22
0x12347: mov ebp,0x1
0x1234c: jne 0x12378
0x12353: movzx r12d,byte ptr [rcx]
0x12357: test r12b,r12b
0x1235a: jne 0x123d7
0x123b0: movzx r12d,byte ptr [rbp]
0x123b5: test r12b,r12b
0x123b8: je 0x12378
0x123ba: movsx esi,r12b
0x123be: mov rdi,r13
0x123c1: xor ebp,ebp
0x123c3: call 0x2b70
0x123c8: test rax,rax
0x123cb: mov ebx,0x1
0x123d0: mov rcx,qword ptr [rsp+0x8]
0x123d5: je 0x12378
0x123d7: movsx esi,r12b
0x123db: mov rdi,r13
0x123de: mov qword ptr [rsp+0x8],rcx
0x123e3: call 0x2b70
0x123e8: test rax,rax
0x123eb: mov rcx,qword ptr [rsp+0x8]
0x123f0: je 0x124bc
0x123f6: lea eax,[r12-0x45]
0x123fb: cmp al,0x2f
0x123fd: ja 0x12450
0x123ff: movabsq rdx,0x814400308945
0x12409: btq rdx,rax
0x1240d: jae 0x12450
0x1240f: mov esi,0x30
0x12414: mov rdi,r13
0x12417: mov qword ptr [rsp+0x8],rcx
0x1241c: call 0x2b70
0x12421: test rax,rax
0x12424: mov rcx,qword ptr [rsp+0x8]
0x12429: je 0x12450
0x1242b: movzx eax,byte ptr [rcx+0x1]
0x1242f: cmp al,0x44
0x12431: je 0x1243f
0x12433: cmp al,0x69
0x12435: je 0x12608
0x1243b: cmp al,0x42
0x1243d: jne 0x12450
0x1243f: mov edi,0x2
0x12444: mov esi,0x3e8
0x12449: jmp 0x1245a
0x12450: mov edi,0x1
0x12455: mov esi,0x400
0x1245a: sub r12d,0x42
0x1245e: cmp r12b,0x35
0x12462: ja 0x124bc
0x12464: lea rdx,[rip+0x68bd]
0x1246b: movzx r12d,r12b
0x1246f: movsxd rax,dword ptr [rdx+r12*4]
0x12473: add rax,rdx
0x12476: jmp rax
0x124a0: movsxd rdi,edi
0x124a3: mov eax,ebp
0x124a5: add rcx,rdi
0x124a8: or eax,0x2
0x124ab: mov qword ptr [r15],rcx
0x124ae: cmp byte ptr [rcx],0x0
0x124b1: mov qword ptr [r14],rbx
0x124b4: cmovne ebp,eax
0x124b7: jmp 0x1237d
0x124bc: mov qword ptr [r14],rbx
0x124bf: or ebp,0x2
0x124c2: jmp 0x1237d
0x12515: or ebp,r9d
0x12518: jmp 0x124a0
0x125ac: mov rax,rbx
0x125af: mul rsi
0x125b2: mov rbx,rax
0x125b5: jo 0x12644
0x125bb: sub r8d,0x1
0x125bf: jne 0x125ac
0x125c1: jmp 0x12515
0x12608: xor edi,edi
0x1260a: cmp byte ptr [rcx+0x2],0x42
0x1260e: mov esi,0x400
0x12613: sete dil
0x12617: lea edi,[rdi+rdi+0x1]
0x1261b: jmp 0x1245a
0x12620: call 0x2b30
0x12625: lea rcx,[rip+0x67d4]
0x1262c: lea rsi,[rip+0x66ad]
0x12633: lea rdi,[rip+0x66c6]
0x1263a: mov edx,0x54
0x1263f: call 0x2be0
0x12644: mov r9d,0x1
0x1264a: or rbx,-0x1
0x1264e: jmp 0x125bb
0x126c0: push rbx
0x126c1: mov edx,0xa
0x126c6: xor ebx,ebx
0x126c8: sub rsp,0x20
0x126cc: mov rcx,qword ptr [rip+0x20aa1d]
0x126d3: lea rsi,[rsp+0x10]
0x126d8: lea rdi,[rsp+0x8]
0x126dd: mov qword ptr [rsp+0x8],0x0
0x126e6: mov rax,qword ptr fs:0x28
0x126ef: mov qword ptr [rsp+0x18],rax
0x126f4: xor eax,eax
0x126f6: mov qword ptr [rsp+0x10],0x0
0x126ff: call 0x2ce0
0x12704: test rax,rax
0x12707: jle 0x12722
0x12709: mov rdi,qword ptr [rsp+0x8]
0x1270e: lea rax,[rdi+rax-0x1]
0x12713: cmp byte ptr [rax],0xa
0x12716: je 0x12748
0x12718: call 0x2d40
0x1271d: test eax,eax
0x1271f: setg bl
0x12722: mov rdi,qword ptr [rsp+0x8]
0x12727: call 0x30d0
0x1272c: mov rdx,qword ptr [rsp+0x18]
0x12731: xor rdx,qword ptr fs:0x28
0x1273a: mov eax,ebx
0x1273c: jne 0x12752
0x1273e: add rsp,0x20
0x12742: pop rbx
0x12743: ret 
0x12748: mov byte ptr [rax],0x0
0x1274b: mov rdi,qword ptr [rsp+0x8]
0x12750: jmp 0x12718
0x12752: call 0x2b30
0x12757: nop word ptr [rax+rax]
0x12760: test rdi,rdi
0x12763: push rbx
0x12764: mov rbx,rdi
0x12767: je 0x1277a
0x12769: call 0x2e50
0x1276e: test eax,eax
0x12770: je 0x1277a
0x12772: test dword ptr [rbx],0x100
0x12778: jne 0x12788
0x1277a: mov rdi,rbx
0x1277d: pop rbx
0x1277e: jmp 0x2e00
0x12788: mov rdi,rbx
0x1278b: mov edx,0x1
0x12790: xor esi,esi
0x12792: call 0x127d0
0x12797: mov rdi,rbx
0x1279a: pop rbx
0x1279b: jmp 0x2e00
0x127a0: xor eax,eax
0x127a2: mov rcx,qword ptr [rdi+0x20]
0x127a6: cmp qword ptr [rdi+0x28],rcx
0x127aa: ja 0x127c7
0x127ac: mov rax,qword ptr [rdi+0x10]
0x127b0: sub rax,qword ptr [rdi+0x8]
0x127b4: test dword ptr [rdi],0x100
0x127ba: je 0x127c7
0x127bc: mov rdx,qword ptr [rdi+0x58]
0x127c0: sub rdx,qword ptr [rdi+0x48]
0x127c4: add rax,rdx
0x127c7: rep ret 
0x127d0: mov rax,qword ptr [rdi+0x8]
0x127d4: cmp qword ptr [rdi+0x10],rax
0x127d8: je 0x127e0
0x127da: jmp 0x2f70
0x127e0: mov rax,qword ptr [rdi+0x20]
0x127e4: cmp qword ptr [rdi+0x28],rax
0x127e8: jne 0x127da
0x127ea: cmp qword ptr [rdi+0x48],0x0
0x127ef: jne 0x127da
0x127f1: push r12
0x127f3: push rbp
0x127f4: mov r12d,edx
0x127f7: push rbx
0x127f8: mov rbp,rsi
0x127fb: mov rbx,rdi
0x127fe: call 0x2db0
0x12803: mov edx,r12d
0x12806: mov rsi,rbp
0x12809: mov edi,eax
0x1280b: call 0x2bc0
0x12810: cmp rax,-0x1
0x12814: je 0x12822
0x12816: and dword ptr [rbx],-0x11
0x12819: mov qword ptr [rbx+0x90],rax
0x12820: xor eax,eax
0x12822: pop rbx
0x12823: pop rbp
0x12824: pop r12
0x12826: ret 
0x12830: push r13
0x12832: push r12
0x12834: mov r13,rsi
0x12837: push rbp
0x12838: push rbx
0x12839: mov rbx,rdi
0x1283c: mov r12,rdx
0x1283f: sub rsp,0x18
0x12843: mov rax,qword ptr fs:0x28
0x1284c: mov qword ptr [rsp+0x8],rax
0x12851: xor eax,eax
0x12853: lea rax,[rsp+0x4]
0x12858: test rdi,rdi
0x1285b: cmove rbx,rax
0x1285f: mov rdi,rbx
0x12862: call 0x2b60
0x12867: cmp rax,-0x3
0x1286b: mov rbp,rax
0x1286e: jbe 0x12890
0x12870: test r12,r12
0x12873: je 0x12890
0x12875: xor edi,edi
0x12877: call 0x12f40
0x1287c: test al,al
0x1287e: jne 0x12890
0x12880: movzx eax,byte ptr [r13]
0x12885: mov ebp,0x1
0x1288a: mov dword ptr [rbx],eax
0x1288c: nop dword ptr [rax]
0x12890: mov rdx,qword ptr [rsp+0x8]
0x12895: xor rdx,qword ptr fs:0x28
0x1289e: mov rax,rbp
0x128a1: jne 0x128ae
0x128a3: add rsp,0x18
0x128a7: pop rbx
0x128a8: pop rbp
0x128a9: pop r12
0x128ab: pop r13
0x128ad: ret 
0x128ae: call 0x2b30
0x128b3: nop word ptr cs:[rax+rax]
0x128bd: nop dword ptr [rax]
0x128c0: push r13
0x128c2: push r12
0x128c4: mov rax,rsi
0x128c7: push rbp
0x128c8: push rbx
0x128c9: mov r13,rdi
0x128cc: sub rsp,0x7f8
0x128d3: lea r12,[rsp+0x10]
0x128d8: lea rsi,[rsp+0x8]
0x128dd: mov qword ptr [rsp+0x8],0x7d0
0x128e6: mov rcx,qword ptr fs:0x28
0x128ef: mov qword ptr [rsp+0x7e8],rcx
0x128f7: xor ecx,ecx
0x128f9: mov rdi,r12
0x128fc: mov rcx,rdx
0x128ff: mov rdx,rax
0x12902: call 0x14260
0x12907: test rax,rax
0x1290a: mov rbx,qword ptr [rsp+0x8]
0x1290f: je 0x1299e
0x12915: mov rcx,r13
0x12918: mov rdx,rbx
0x1291b: mov esi,0x1
0x12920: mov rdi,rax
0x12923: mov rbp,rax
0x12926: call 0x3040
0x1292b: cmp rax,rbx
0x1292e: jb 0x12970
0x12930: cmp rbp,r12
0x12933: je 0x1293d
0x12935: mov rdi,rbp
0x12938: call 0x30d0
0x1293d: cmp rbx,0x7fffffff
0x12944: ja 0x12993
0x12946: mov rcx,qword ptr [rsp+0x7e8]
0x1294e: xor rcx,qword ptr fs:0x28
0x12957: mov eax,ebx
0x12959: jne 0x129ad
0x1295b: add rsp,0x7f8
0x12962: pop rbx
0x12963: pop rbp
0x12964: pop r12
0x12966: pop r13
0x12968: ret 
0x12970: cmp rbp,r12
0x12973: mov ebx,0xffffffff
0x12978: je 0x12946
0x1297a: call 0x2950
0x1297f: mov r13d,dword ptr [rax]
0x12982: mov r12,rax
0x12985: mov rdi,rbp
0x12988: call 0x30d0
0x1298d: mov dword ptr [r12],r13d
0x12991: jmp 0x12946
0x12993: call 0x2950
0x12998: mov dword ptr [rax],0x4b
0x1299e: mov rdi,r13
0x129a1: mov ebx,0xffffffff
0x129a6: call 0x14250
0x129ab: jmp 0x12946
0x129ad: call 0x2b30
0x129b2: nop word ptr cs:[rax+rax]
0x129bc: nop dword ptr [rax]
0x129c0: rep ret 
0x129d0: mov dword ptr [rcx],edx
0x129d2: xor eax,eax
0x129d4: ret 
0x129e0: mov eax,esi
0x129e2: mov esi,edx
0x129e4: cmp eax,-0x1
0x129e7: je 0x129f0
0x129e9: mov edi,eax
0x129eb: jmp 0x2ef0
0x129f0: jmp 0x2f10
0x12a00: sub rsp,0x8
0x12a04: mov rax,rsi
0x12a07: mov esi,edx
0x12a09: mov edx,dword ptr [rdi]
0x12a0b: mov rdi,rax
0x12a0e: call 0x129e0
0x12a13: test eax,eax
0x12a15: setne al
0x12a18: add rsp,0x8
0x12a1c: movzx eax,al
0x12a1f: neg eax
0x12a21: ret 
0x12a30: mov edi,0x1
0x12a35: jmp 0x4920
0x12a40: push r15
0x12a42: push r14
0x12a44: mov r15,rsi
0x12a47: push r13
0x12a49: push r12
0x12a4b: mov r13,rcx
0x12a4e: push rbp
0x12a4f: push rbx
0x12a50: mov rbp,rdx
0x12a53: sub rsp,0x28
0x12a57: mov qword ptr [rsp+0x8],rdi
0x12a5c: mov qword ptr [rsp+0x18],rdx
0x12a61: call 0x2af0
0x12a66: mov r14,qword ptr [r15]
0x12a69: mov qword ptr [rsp],-0x1
0x12a71: test r14,r14
0x12a74: je 0x12b2d
0x12a7a: mov r12,rax
0x12a7d: mov byte ptr [rsp+0x17],0x0
0x12a82: xor ebx,ebx
0x12a84: jmp 0x12ad7
0x12a90: mov rax,qword ptr [rsp+0x18]
0x12a95: test rax,rax
0x12a98: je 0x12b40
0x12a9e: mov rdi,qword ptr [rsp]
0x12aa2: mov rdx,r13
0x12aa5: mov rsi,rbp
0x12aa8: imul rdi,r13
0x12aac: add rdi,rax
0x12aaf: call 0x2c90
0x12ab4: test eax,eax
0x12ab6: movzx eax,byte ptr [rsp+0x17]
0x12abb: mov ecx,0x1
0x12ac0: cmovne eax,ecx
0x12ac3: mov byte ptr [rsp+0x17],al
0x12ac7: add rbx,0x1
0x12acb: add rbp,r13
0x12ace: mov r14,qword ptr [r15+rbx*8]
0x12ad2: test r14,r14
0x12ad5: je 0x12b18
0x12ad7: mov rsi,qword ptr [rsp+0x8]
0x12adc: mov rdx,r12
0x12adf: mov rdi,r14
0x12ae2: call 0x2970
0x12ae7: test eax,eax
0x12ae9: jne 0x12ac7
0x12aeb: mov rdi,r14
0x12aee: call 0x2af0
0x12af3: cmp rax,r12
0x12af6: je 0x12b50
0x12af8: cmp qword ptr [rsp],-0x1
0x12afd: jne 0x12a90
0x12aff: mov qword ptr [rsp],rbx
0x12b03: add rbx,0x1
0x12b07: add rbp,r13
0x12b0a: mov r14,qword ptr [r15+rbx*8]
0x12b0e: test r14,r14
0x12b11: jne 0x12ad7
0x12b13: nop dword ptr [rax+rax]
0x12b18: cmp byte ptr [rsp+0x17],0x0
0x12b1d: mov rax,-0x2
0x12b24: cmove rax,qword ptr [rsp]
0x12b29: mov qword ptr [rsp],rax
0x12b2d: mov rax,qword ptr [rsp]
0x12b31: add rsp,0x28
0x12b35: pop rbx
0x12b36: pop rbp
0x12b37: pop r12
0x12b39: pop r13
0x12b3b: pop r14
0x12b3d: pop r15
0x12b3f: ret 
0x12b40: mov byte ptr [rsp+0x17],0x1
0x12b45: jmp 0x12ac7
0x12b50: mov qword ptr [rsp],rbx
0x12b54: jmp 0x12b2d
0x12b60: cmp rdx,-0x1
0x12b64: push r12
0x12b66: mov edx,0x5
0x12b6b: push rbp
0x12b6c: mov r12,rsi
0x12b6f: push rbx
0x12b70: mov rbp,rdi
0x12b73: je 0x12bc0
0x12b75: lea rsi,[rip+0x62a8]
0x12b7c: xor edi,edi
0x12b7e: call 0x2ad0
0x12b83: mov rbx,rax
0x12b86: mov rsi,rbp
0x12b89: mov edi,0x1
0x12b8e: call 0xf6a0
0x12b93: mov rdx,r12
0x12b96: mov rbp,rax
0x12b99: mov esi,0x8
0x12b9e: xor edi,edi
0x12ba0: call 0xf2d0
0x12ba5: mov r8,rbp
0x12ba8: mov rdx,rbx
0x12bab: mov rcx,rax
0x12bae: pop rbx
0x12baf: pop rbp
0x12bb0: pop r12
0x12bb2: xor esi,esi
0x12bb4: xor edi,edi
0x12bb6: xor eax,eax
0x12bb8: jmp 0x2f30
0x12bc0: lea rsi,[rip+0x6242]
0x12bc7: xor edi,edi
0x12bc9: call 0x2ad0
0x12bce: mov rbx,rax
0x12bd1: jmp 0x12b86
0x12be0: push r15
0x12be2: push r14
0x12be4: mov r14,rdi
0x12be7: push r13
0x12be9: push r12
0x12beb: xor edi,edi
0x12bed: push rbp
0x12bee: push rbx
0x12bef: mov rbp,rsi
0x12bf2: lea rsi,[rip+0x6248]
0x12bf9: mov r12,rdx
0x12bfc: mov edx,0x5
0x12c01: sub rsp,0x8
0x12c05: mov rbx,qword ptr [rip+0x20a514]
0x12c0c: call 0x2ad0
0x12c11: mov rdi,rax
0x12c14: mov rsi,rbx
0x12c17: call 0x2cb0
0x12c1c: mov r15,qword ptr [r14]
0x12c1f: test r15,r15
0x12c22: je 0x12cb8
0x12c28: xor r13d,r13d
0x12c2b: xor ebx,ebx
0x12c2d: jmp 0x12c68
0x12c30: mov rdi,r15
0x12c33: add rbx,0x1
0x12c37: mov r13,rbp
0x12c3a: call 0xf6c0
0x12c3f: mov rdi,qword ptr [rip+0x20a4da]
0x12c46: lea rdx,[rip+0x6209]
0x12c4d: mov rcx,rax
0x12c50: mov esi,0x1
0x12c55: xor eax,eax
0x12c57: add rbp,r12
0x12c5a: call 0x3050
0x12c5f: mov r15,qword ptr [r14+rbx*8]
0x12c63: test r15,r15
0x12c66: je 0x12cb8
0x12c68: test rbx,rbx
0x12c6b: je 0x12c30
0x12c6d: mov rdx,r12
0x12c70: mov rsi,rbp
0x12c73: mov rdi,r13
0x12c76: call 0x2c90
0x12c7b: test eax,eax
0x12c7d: jne 0x12c30
0x12c7f: mov rdi,r15
0x12c82: add rbx,0x1
0x12c86: add rbp,r12
0x12c89: call 0xf6c0
0x12c8e: mov rdi,qword ptr [rip+0x20a48b]
0x12c95: lea rdx,[rip+0x61c2]
0x12c9c: mov rcx,rax
0x12c9f: mov esi,0x1
0x12ca4: xor eax,eax
0x12ca6: call 0x3050
0x12cab: mov r15,qword ptr [r14+rbx*8]
0x12caf: test r15,r15
0x12cb2: jne 0x12c68
0x12cb4: nop dword ptr [rax]
0x12cb8: mov rdi,qword ptr [rip+0x20a461]
0x12cbf: mov rax,qword ptr [rdi+0x28]
0x12cc3: cmp rax,qword ptr [rdi+0x30]
0x12cc7: jae 0x12ce8
0x12cc9: lea rdx,[rax+0x1]
0x12ccd: mov qword ptr [rdi+0x28],rdx
0x12cd1: mov byte ptr [rax],0xa
0x12cd4: add rsp,0x8
0x12cd8: pop rbx
0x12cd9: pop rbp
0x12cda: pop r12
0x12cdc: pop r13
0x12cde: pop r14
0x12ce0: pop r15
0x12ce2: ret 
0x12ce8: add rsp,0x8
0x12cec: mov esi,0xa
0x12cf1: pop rbx
0x12cf2: pop rbp
0x12cf3: pop r12
0x12cf5: pop r13
0x12cf7: pop r14
0x12cf9: pop r15
0x12cfb: jmp 0x2b90
0x12d00: push r15
0x12d02: push r14
0x12d04: mov r14,rdi
0x12d07: push r13
0x12d09: push r12
0x12d0b: mov r12,rsi
0x12d0e: push rbp
0x12d0f: push rbx
0x12d10: mov rbp,rcx
0x12d13: mov rbx,rdx
0x12d16: mov rcx,r8
0x12d19: mov rdx,rbp
0x12d1c: sub rsp,0x8
0x12d20: mov rsi,rbx
0x12d23: mov rdi,r12
0x12d26: mov r15,r8
0x12d29: mov r13,r9
0x12d2c: call 0x12a40
0x12d31: test rax,rax
0x12d34: js 0x12d45
0x12d36: add rsp,0x8
0x12d3a: pop rbx
0x12d3b: pop rbp
0x12d3c: pop r12
0x12d3e: pop r13
0x12d40: pop r14
0x12d42: pop r15
0x12d44: ret 
0x12d45: mov rdx,rax
0x12d48: mov rsi,r12
0x12d4b: mov rdi,r14
0x12d4e: call 0x12b60
0x12d53: mov rdx,r15
0x12d56: mov rsi,rbp
0x12d59: mov rdi,rbx
0x12d5c: call 0x12be0
0x12d61: call r13
0x12d64: mov rax,-0x1
0x12d6b: jmp 0x12d36
0x12d70: push r14
0x12d72: push r13
0x12d74: push r12
0x12d76: push rbp
0x12d77: push rbx
0x12d78: mov r14,qword ptr [rsi]
0x12d7b: test r14,r14
0x12d7e: je 0x12db1
0x12d80: mov r12,rcx
0x12d83: mov r13,rdi
0x12d86: mov rbp,rdx
0x12d89: lea rbx,[rsi+0x8]
0x12d8d: jmp 0x12d9f
0x12d90: mov r14,qword ptr [rbx]
0x12d93: add rbp,r12
0x12d96: add rbx,0x8
0x12d9a: test r14,r14
0x12d9d: je 0x12db1
0x12d9f: mov rdx,r12
0x12da2: mov rsi,rbp
0x12da5: mov rdi,r13
0x12da8: call 0x2c90
0x12dad: test eax,eax
0x12daf: jne 0x12d90
0x12db1: pop rbx
0x12db2: mov rax,r14
0x12db5: pop rbp
0x12db6: pop r12
0x12db8: pop r13
0x12dba: pop r14
0x12dbc: ret 
0x12dc0: push r12
0x12dc2: push rbp
0x12dc3: mov rbp,rdi
0x12dc6: push rbx
0x12dc7: call 0x29a0
0x12dcc: mov ebx,dword ptr [rbp]
0x12dcf: mov rdi,rbp
0x12dd2: mov r12,rax
0x12dd5: call 0x13f50
0x12dda: and ebx,0x20
0x12ddd: test ebx,ebx
0x12ddf: jne 0x12df8
0x12de1: test eax,eax
0x12de3: je 0x12def
0x12de5: test r12,r12
0x12de8: mov eax,0xffffffff
0x12ded: je 0x12e28
0x12def: pop rbx
0x12df0: pop rbp
0x12df1: pop r12
0x12df3: ret 
0x12df8: test eax,eax
0x12dfa: jne 0x12e18
0x12dfc: call 0x2950
0x12e01: mov dword ptr [rax],0x0
0x12e07: mov eax,0xffffffff
0x12e0c: pop rbx
0x12e0d: pop rbp
0x12e0e: pop r12
0x12e10: ret 
0x12e18: pop rbx
0x12e19: mov eax,0xffffffff
0x12e1e: pop rbp
0x12e1f: pop r12
0x12e21: ret 
0x12e28: call 0x2950
0x12e2d: cmp dword ptr [rax],0x9
0x12e30: pop rbx
0x12e31: pop rbp
0x12e32: pop r12
0x12e34: setne al
0x12e37: movzx eax,al
0x12e3a: neg eax
0x12e3c: ret 
0x12e40: push r14
0x12e42: push r13
0x12e44: push r12
0x12e46: push rbp
0x12e47: push rbx
0x12e48: call 0x2a90
0x12e4d: test rax,rax
0x12e50: mov rbx,rax
0x12e53: je 0x12e62
0x12e55: mov rdi,rax
0x12e58: call 0x2d10
0x12e5d: cmp eax,0x2
0x12e60: jbe 0x12e70
0x12e62: mov rax,rbx
0x12e65: pop rbx
0x12e66: pop rbp
0x12e67: pop r12
0x12e69: pop r13
0x12e6b: pop r14
0x12e6d: ret 
0x12e70: mov edi,eax
0x12e72: mov edx,0x3
0x12e77: mov esi,0x406
0x12e7c: xor eax,eax
0x12e7e: call 0x13fd0
0x12e83: mov r12d,eax
0x12e86: call 0x2950
0x12e8b: test r12d,r12d
0x12e8e: mov rbp,rax
0x12e91: jns 0x12eb8
0x12e93: mov r14d,dword ptr [rax]
0x12e96: xor r13d,r13d
0x12e99: mov rdi,rbx
0x12e9c: mov rbx,r13
0x12e9f: call 0x2c60
0x12ea4: mov dword ptr [rbp],r14d
0x12ea8: mov rax,rbx
0x12eab: pop rbx
0x12eac: pop rbp
0x12ead: pop r12
0x12eaf: pop r13
0x12eb1: pop r14
0x12eb3: ret 
0x12eb8: mov edi,r12d
0x12ebb: call 0x2fb0
0x12ec0: test rax,rax
0x12ec3: mov r13,rax
0x12ec6: mov r14d,dword ptr [rbp]
0x12eca: jne 0x12e99
0x12ecc: mov edi,r12d
0x12ecf: call 0x2c30
0x12ed4: jmp 0x12e99
0x12ef0: sub rsp,0x28
0x12ef4: xor edi,edi
0x12ef6: mov rsi,rsp
0x12ef9: mov rax,qword ptr fs:0x28
0x12f02: mov qword ptr [rsp+0x18],rax
0x12f07: xor eax,eax
0x12f09: call 0x2a10
0x12f0e: mov rcx,qword ptr [rsp+0x18]
0x12f13: xor rcx,qword ptr fs:0x28
0x12f1c: mov rax,qword ptr [rsp]
0x12f20: mov rdx,qword ptr [rsp+0x8]
0x12f25: jne 0x12f2c
0x12f27: add rsp,0x28
0x12f2b: ret 
0x12f2c: call 0x2b30
0x12f31: nop word ptr cs:[rax+rax]
0x12f3b: nop dword ptr [rax+rax]
0x12f40: sub rsp,0x8
0x12f44: xor esi,esi
0x12f46: call 0x2ed0
0x12f4b: mov rdx,rax
0x12f4e: mov eax,0x1
0x12f53: test rdx,rdx
0x12f56: je 0x12f75
0x12f58: lea rdi,[rip+0x5f04]
0x12f5f: mov ecx,0x2
0x12f64: mov rsi,rdx
0x12f67: rep cmpsb [rsi],es:[rdi]
0x12f69: seta cl
0x12f6c: sbb cl,0x0
0x12f6f: xor eax,eax
0x12f71: test cl,cl
0x12f73: jne 0x12f80
0x12f75: add rsp,0x8
0x12f79: ret 
0x12f80: lea rdi,[rip+0x5ede]
0x12f87: mov ecx,0x6
0x12f8c: mov rsi,rdx
0x12f8f: rep cmpsb [rsi],es:[rdi]
0x12f91: seta al
0x12f94: sbb al,0x0
0x12f96: test al,al
0x12f98: setne al
0x12f9b: add rsp,0x8
0x12f9f: ret 
0x12fa0: movsx rcx,byte ptr [rdi]
0x12fa4: test cl,cl
0x12fa6: je 0x12fd0
0x12fa8: xor eax,eax
0x12faa: nop word ptr [rax+rax]
0x12fb0: rol rax,0x9
0x12fb4: add rdi,0x1
0x12fb8: add rax,rcx
0x12fbb: movsx rcx,byte ptr [rdi]
0x12fbf: test cl,cl
0x12fc1: jne 0x12fb0
0x12fc3: xor edx,edx
0x12fc5: div rsi
0x12fc8: mov rax,rdx
0x12fcb: ret 
0x12fd0: xor edx,edx
0x12fd2: mov rax,rdx
0x12fd5: ret 
0x12fe0: sub rsp,0x8
0x12fe4: mov edi,0xe
0x12fe9: call 0x2e10
0x12fee: test rax,rax
0x12ff1: je 0x13010
0x12ff3: cmp byte ptr [rax],0x0
0x12ff6: lea rdx,[rip+0x5e6e]
0x12ffd: cmove rax,rdx
0x13001: add rsp,0x8
0x13005: ret 
0x13010: lea rax,[rip+0x5e54]
0x13017: add rsp,0x8
0x1301b: ret 
0x13020: push r15
0x13022: push r14
0x13024: mov r15d,edx
0x13027: push r13
0x13029: push r12
0x1302b: mov r13d,ecx
0x1302e: push rbp
0x1302f: push rbx
0x13030: mov ebp,edi
0x13032: mov r12,rsi
0x13035: mov r14d,r9d
0x13038: sub rsp,0xb8
0x1303f: mov rax,qword ptr fs:0x28
0x13048: mov qword ptr [rsp+0xa8],rax
0x13050: xor eax,eax
0x13052: test edi,edi
0x13054: mov dword ptr [rsp+0xc],r8d
0x13059: lea rdx,[rsp+0x10]
0x1305e: js 0x13130
0x13064: mov esi,edi
0x13066: mov edi,0x1
0x1306b: call 0x2e20
0x13070: test eax,eax
0x13072: mov ebx,eax
0x13074: mov r8d,dword ptr [rsp+0xc]
0x13079: jne 0x13220
0x1307f: mov ecx,dword ptr [rsp+0x28]
0x13083: mov eax,ecx
0x13085: and eax,0xf000
0x1308a: cmp eax,0x4000
0x1308f: jne 0x130e0
0x13091: cmp r13d,-0x1
0x13095: je 0x13170
0x1309b: cmp dword ptr [rsp+0x2c],r13d
0x130a0: je 0x13170
0x130a6: test ebp,ebp
0x130a8: mov dword ptr [rsp+0xc],ecx
0x130ac: mov edx,r8d
0x130af: mov esi,r13d
0x130b2: jns 0x131c0
0x130b8: cmp r15d,-0x1
0x130bc: mov rdi,r12
0x130bf: je 0x13200
0x130c5: call 0x2e40
0x130ca: mov ecx,dword ptr [rsp+0xc]
0x130ce: mov ebx,eax
0x130d0: test ebx,ebx
0x130d2: jne 0x13104
0x130d4: jmp 0x131d1
0x130e0: call 0x2950
0x130e5: mov r13d,0x14
0x130eb: mov r12,rax
0x130ee: mov dword ptr [rax],0x14
0x130f4: mov ebx,0xffffffff
0x130f9: mov edi,ebp
0x130fb: call 0x2c30
0x13100: mov dword ptr [r12],r13d
0x13104: mov rcx,qword ptr [rsp+0xa8]
0x1310c: xor rcx,qword ptr fs:0x28
0x13115: mov eax,ebx
0x13117: jne 0x13230
0x1311d: add rsp,0xb8
0x13124: pop rbx
0x13125: pop rbp
0x13126: pop r12
0x13128: pop r13
0x1312a: pop r14
0x1312c: pop r15
0x1312e: ret 
0x13130: mov edi,0x1
0x13135: call 0x2dd0
0x1313a: test eax,eax
0x1313c: mov ebx,eax
0x1313e: mov r8d,dword ptr [rsp+0xc]
0x13143: jne 0x13104
0x13145: mov ecx,dword ptr [rsp+0x28]
0x13149: mov eax,ecx
0x1314b: and eax,0xf000
0x13150: cmp eax,0x4000
0x13155: je 0x13091
0x1315b: call 0x2950
0x13160: or ebx,-0x1
0x13163: mov dword ptr [rax],0x14
0x13169: jmp 0x13104
0x13170: cmp r8d,-0x1
0x13174: je 0x13181
0x13176: cmp dword ptr [rsp+0x30],r8d
0x1317b: jne 0x130a6
0x13181: xor edx,edx
0x13183: mov eax,ecx
0x13185: xor eax,r14d
0x13188: or eax,edx
0x1318a: test dword ptr [rsp+0xf0],eax
0x13191: je 0x131e0
0x13193: mov esi,dword ptr [rsp+0xf0]
0x1319a: and ecx,0xfff
0x131a0: not esi
0x131a2: and esi,ecx
0x131a4: or esi,r14d
0x131a7: test ebp,ebp
0x131a9: jns 0x13210
0x131ab: mov rdi,r12
0x131ae: call 0x2f10
0x131b3: mov ebx,eax
0x131b5: jmp 0x13104
0x131c0: mov edi,ebp
0x131c2: call 0x2f80
0x131c7: test eax,eax
0x131c9: mov ebx,eax
0x131cb: mov ecx,dword ptr [rsp+0xc]
0x131cf: jne 0x13220
0x131d1: test cl,0x49
0x131d4: je 0x13181
0x131d6: mov edx,ecx
0x131d8: and edx,0xc00
0x131de: jmp 0x13183
0x131e0: xor ebx,ebx
0x131e2: test ebp,ebp
0x131e4: js 0x13104
0x131ea: nop word ptr [rax+rax]
0x131f0: mov edi,ebp
0x131f2: call 0x2c30
0x131f7: mov ebx,eax
0x131f9: jmp 0x13104
0x13200: call 0x2e80
0x13205: mov ecx,dword ptr [rsp+0xc]
0x13209: mov ebx,eax
0x1320b: jmp 0x130d0
0x13210: mov edi,ebp
0x13212: call 0x2ef0
0x13217: test eax,eax
0x13219: mov ebx,eax
0x1321b: je 0x131f0
0x1321d: nop dword ptr [rax]
0x13220: call 0x2950
0x13225: mov r12,rax
0x13228: mov r13d,dword ptr [rax]
0x1322b: jmp 0x130f9
0x13230: call 0x2b30
0x13235: nop word ptr cs:[rax+rax]
0x1323f: nop 
0x13240: sub rsp,0x58
0x13244: mov qword ptr [rsp+0x38],rcx
0x13249: xor ecx,ecx
0x1324b: mov rax,qword ptr fs:0x28
0x13254: mov qword ptr [rsp+0x18],rax
0x13259: xor eax,eax
0x1325b: test dl,0x40
0x1325e: jne 0x13288
0x13260: xor eax,eax
0x13262: call 0x2b10
0x13267: mov edi,eax
0x13269: call 0x10940
0x1326e: mov rsi,qword ptr [rsp+0x18]
0x13273: xor rsi,qword ptr fs:0x28
0x1327c: jne 0x132a9
0x1327e: add rsp,0x58
0x13282: ret 
0x13288: lea rax,[rsp+0x60]
0x1328d: mov dword ptr [rsp],0x18
0x13294: mov ecx,dword ptr [rsp+0x38]
0x13298: mov qword ptr [rsp+0x8],rax
0x1329d: lea rax,[rsp+0x20]
0x132a2: mov qword ptr [rsp+0x10],rax
0x132a7: jmp 0x13260
0x132a9: call 0x2b30
0x132ae: nop 
0x132b0: push rbx
0x132b1: mov rbx,rdi
0x132b4: mov edi,0x18
0x132b9: call 0x12010
0x132be: mov qword ptr [rax],rbx
0x132c1: mov qword ptr [rax+0x10],0x0
0x132c9: mov qword ptr [rax+0x8],0x0
0x132d1: pop rbx
0x132d2: ret 
0x132e0: push rbx
0x132e1: call 0x13530
0x132e6: test rax,rax
0x132e9: je 0x13310
0x132eb: mov rbx,rax
0x132ee: mov edi,0x18
0x132f3: call 0x12010
0x132f8: mov qword ptr [rax],rbx
0x132fb: mov qword ptr [rax+0x10],0x0
0x13303: mov qword ptr [rax+0x8],0x0
0x1330b: pop rbx
0x1330c: ret 
0x13310: xor eax,eax
0x13312: pop rbx
0x13313: ret 
0x13320: mov rax,qword ptr [rdi]
0x13323: ret 
0x13330: push r15
0x13332: push r14
0x13334: lea r15,[rsi+0x1]
0x13338: push r13
0x1333a: push r12
0x1333c: mov r13,rdi
0x1333f: push rbp
0x13340: push rbx
0x13341: mov r14,rsi
0x13344: sub rsp,0x28
0x13348: mov rbp,qword ptr [rdi+0x8]
0x1334c: mov rbx,qword ptr [rdi+0x10]
0x13350: mov rax,qword ptr fs:0x28
0x13359: mov qword ptr [rsp+0x18],rax
0x1335e: xor eax,eax
0x13360: mov rax,qword ptr [rdi]
0x13363: lea r12,[rsp+0x10]
0x13368: mov qword ptr [rsp+0x8],rax
0x1336d: jmp 0x133a5
0x13370: cmp rbx,r14
0x13373: je 0x133ff
0x13379: mov rax,rbx
0x1337c: xor edx,edx
0x1337e: sub rax,r14
0x13381: div r15
0x13384: sub rbx,rdx
0x13387: mov rdi,rdx
0x1338a: mov rsi,rax
0x1338d: xor edx,edx
0x1338f: mov rax,rbp
0x13392: div r15
0x13395: cmp rbp,rbx
0x13398: jbe 0x13438
0x1339e: lea rbx,[rdi-0x1]
0x133a2: mov rbp,rdx
0x133a5: cmp rbx,r14
0x133a8: jae 0x13370
0x133aa: mov rax,rbx
0x133ad: xor edx,edx
0x133af: nop 
0x133b0: shl rax,0x8
0x133b4: add rdx,0x1
0x133b8: add rax,0xff
0x133be: cmp r14,rax
0x133c1: ja 0x133b0
0x133c3: mov rdi,qword ptr [rsp+0x8]
0x133c8: mov rsi,r12
0x133cb: call 0x13880
0x133d0: mov rax,r12
0x133d3: nop dword ptr [rax+rax]
0x133d8: movzx edx,byte ptr [rax]
0x133db: shl rbx,0x8
0x133df: shl rbp,0x8
0x133e3: add rbx,0xff
0x133ea: add rax,0x1
0x133ee: add rbp,rdx
0x133f1: cmp r14,rbx
0x133f4: ja 0x133d8
0x133f6: cmp rbx,r14
0x133f9: jne 0x13379
0x133ff: mov qword ptr [r13+0x10],0x0
0x13407: mov qword ptr [r13+0x8],0x0
0x1340f: mov rcx,qword ptr [rsp+0x18]
0x13414: xor rcx,qword ptr fs:0x28
0x1341d: mov rax,rbp
0x13420: jne 0x13445
0x13422: add rsp,0x28
0x13426: pop rbx
0x13427: pop rbp
0x13428: pop r12
0x1342a: pop r13
0x1342c: pop r14
0x1342e: pop r15
0x13430: ret 
0x13438: mov qword ptr [r13+0x8],rax
0x1343c: mov qword ptr [r13+0x10],rsi
0x13440: mov rbp,rdx
0x13443: jmp 0x1340f
0x13445: call 0x2b30
0x1344a: nop word ptr [rax+rax]
0x13450: push rbx
0x13451: mov rdx,-0x1
0x13458: mov rbx,rdi
0x1345b: mov esi,0x18
0x13460: call 0x2f50
0x13465: mov rdi,rbx
0x13468: pop rbx
0x13469: jmp 0x30d0
0x13470: push r13
0x13472: push r12
0x13474: push rbp
0x13475: push rbx
0x13476: mov rbx,rdi
0x13479: sub rsp,0x8
0x1347d: mov rdi,qword ptr [rdi]
0x13480: call 0x13a20
0x13485: mov r12d,eax
0x13488: call 0x2950
0x1348d: mov r13d,dword ptr [rax]
0x13490: mov rdi,rbx
0x13493: mov rdx,-0x1
0x1349a: mov esi,0x18
0x1349f: mov rbp,rax
0x134a2: call 0x2f50
0x134a7: mov rdi,rbx
0x134aa: call 0x30d0
0x134af: mov dword ptr [rbp],r13d
0x134b3: add rsp,0x8
0x134b7: mov eax,r12d
0x134ba: pop rbx
0x134bb: pop rbp
0x134bc: pop r12
0x134be: pop r13
0x134c0: ret 
0x134d0: push rbp
0x134d1: push rbx
0x134d2: sub rsp,0x8
0x134d6: test rdi,rdi
0x134d9: je 0x13518
0x134db: call 0xf6c0
0x134e0: mov rbp,rax
0x134e3: call 0x2950
0x134e8: cmp dword ptr [rax],0x0
0x134eb: mov rbx,rax
0x134ee: mov edx,0x5
0x134f3: je 0x1351d
0x134f5: lea rsi,[rip+0x5985]
0x134fc: xor edi,edi
0x134fe: call 0x2ad0
0x13503: mov edi,dword ptr [rip+0x209b3f]
0x13509: mov esi,dword ptr [rbx]
0x1350b: mov rdx,rax
0x1350e: mov rcx,rbp
0x13511: xor eax,eax
0x13513: call 0x2f30
0x13518: call 0x2940
0x1351d: lea rsi,[rip+0x594d]
0x13524: xor edi,edi
0x13526: call 0x2ad0
0x1352b: jmp 0x13503
0x13530: push r15
0x13532: push r14
0x13534: push r13
0x13536: push r12
0x13538: push rbp
0x13539: push rbx
0x1353a: sub rsp,0x38
0x1353e: mov rax,qword ptr fs:0x28
0x13547: mov qword ptr [rsp+0x28],rax
0x1354c: xor eax,eax
0x1354e: test rsi,rsi
0x13551: je 0x13678
0x13557: test rdi,rdi
0x1355a: mov r12,rdi
0x1355d: mov rbp,rsi
0x13560: je 0x135e0
0x13562: lea rsi,[rip+0x5934]
0x13569: call 0x15380
0x1356e: test rax,rax
0x13571: mov r13,rax
0x13574: je 0x13778
0x1357a: mov edi,0x1038
0x1357f: call 0x12010
0x13584: mov rbx,rax
0x13587: mov qword ptr [rax],r13
0x1358a: lea rax,[rip-0xc1]
0x13591: cmp rbp,0x1000
0x13598: mov ecx,0x1000
0x1359d: lea rsi,[rbx+0x18]
0x135a1: cmovbe rcx,rbp
0x135a5: mov qword ptr [rbx+0x8],rax
0x135a9: mov qword ptr [rbx+0x10],r12
0x135ad: xor edx,edx
0x135af: mov rdi,r13
0x135b2: call 0x2f00
0x135b7: mov rdx,qword ptr [rsp+0x28]
0x135bc: xor rdx,qword ptr fs:0x28
0x135c5: mov rax,rbx
0x135c8: jne 0x1377f
0x135ce: add rsp,0x38
0x135d2: pop rbx
0x135d3: pop rbp
0x135d4: pop r12
0x135d6: pop r13
0x135d8: pop r14
0x135da: pop r15
0x135dc: ret 
0x135e0: mov edi,0x1038
0x135e5: call 0x12010
0x135ea: mov rbx,rax
0x135ed: mov qword ptr [rax],0x0
0x135f4: lea rax,[rip-0x12b]
0x135fb: lea rdi,[rip+0x588e]
0x13602: xor esi,esi
0x13604: mov qword ptr [rbx+0x10],0x0
0x1360c: mov qword ptr [rbx+0x8],rax
0x13610: mov qword ptr [rbx+0x18],0x0
0x13618: xor eax,eax
0x1361a: call 0x2f60
0x1361f: test eax,eax
0x13621: lea r13,[rbx+0x20]
0x13625: mov r15d,eax
0x13628: js 0x136a8
0x1362a: cmp rbp,0x800
0x13631: mov rdx,rbp
0x13634: mov r14d,0x800
0x1363a: cmova rdx,r14
0x1363e: mov ecx,0x1018
0x13643: mov rsi,r13
0x13646: mov edi,eax
0x13648: call 0x29b0
0x1364d: mov edi,r15d
0x13650: mov rbp,rax
0x13653: call 0x2c30
0x13658: cmp rbp,0x7ff
0x1365f: jle 0x13784
0x13665: mov rdi,r13
0x13668: call 0x13d00
0x1366d: jmp 0x135b7
0x13678: mov edi,0x1038
0x1367d: call 0x12010
0x13682: mov rbx,rax
0x13685: mov qword ptr [rax],0x0
0x1368c: lea rax,[rip-0x1c3]
0x13693: mov qword ptr [rbx+0x10],0x0
0x1369b: mov qword ptr [rbx+0x8],rax
0x1369f: jmp 0x135b7
0x136a8: lea r12,[rsp+0x10]
0x136ad: xor esi,esi
0x136af: mov r14d,0x18
0x136b5: mov rdi,r12
0x136b8: call 0x2bd0
0x136bd: movdqa xmm0,[rsp+0x10]
0x136c3: movups [rbx+0x20],xmm0
0x136c7: call 0x2a30
0x136cc: mov dword ptr [rbx+0x30],eax
0x136cf: mov dword ptr [rsp+0x10],eax
0x136d3: call 0x3020
0x136d8: mov dword ptr [rsp+0x10],eax
0x136dc: mov dword ptr [rbx+0x34],eax
0x136df: mov ebp,0x800
0x136e4: mov eax,0x4
0x136e9: sub rbp,r14
0x136ec: cmp rbp,0x4
0x136f0: cmova rbp,rax
0x136f4: call 0x2b40
0x136f9: test ebp,ebp
0x136fb: mov dword ptr [rsp+0x10],eax
0x136ff: lea rcx,[r13+r14]
0x13704: mov esi,ebp
0x13706: je 0x1371c
0x13708: xor eax,eax
0x1370a: mov edx,eax
0x1370c: add eax,0x1
0x1370f: movzx edi,byte ptr [r12+rdx]
0x13714: cmp eax,esi
0x13716: mov byte ptr [rcx+rdx],dil
0x1371a: jb 0x1370a
0x1371c: add rbp,r14
0x1371f: cmp rbp,0x7ff
0x13726: ja 0x13665
0x1372c: call 0x2dc0
0x13731: mov dword ptr [rsp+0x10],eax
0x13735: mov eax,0x800
0x1373a: mov edx,0x4
0x1373f: sub rax,rbp
0x13742: lea rcx,[r13+rbp]
0x13747: cmp rax,0x4
0x1374b: cmova rax,rdx
0x1374f: test eax,eax
0x13751: mov esi,eax
0x13753: je 0x13665
0x13759: xor eax,eax
0x1375b: mov edx,eax
0x1375d: add eax,0x1
0x13760: movzx edi,byte ptr [r12+rdx]
0x13765: cmp eax,esi
0x13767: mov byte ptr [rcx+rdx],dil
0x1376b: jb 0x1375b
0x1376d: jmp 0x13665
0x13778: xor ebx,ebx
0x1377a: jmp 0x135b7
0x1377f: call 0x2b30
0x13784: test rbp,rbp
0x13787: mov r15,r14
0x1378a: mov eax,0x10
0x1378f: cmovs rbp,r12
0x13793: lea r12,[rsp+0x10]
0x13798: sub r15,rbp
0x1379b: cmp r15,0x10
0x1379f: mov rdi,r12
0x137a2: cmova r15,rax
0x137a6: xor esi,esi
0x137a8: call 0x2bd0
0x137ad: lea rax,[r13+rbp]
0x137b2: add rbp,r15
0x137b5: mov ecx,r15d
0x137b8: cmp rbp,0x7ff
0x137bf: mov rsi,r12
0x137c2: mov rdi,rax
0x137c5: rep movsb byte ptr es:[rdi],byte ptr [rsi]
0x137c7: ja 0x13665
0x137cd: mov r15,r14
0x137d0: mov r8d,0x4
0x137d6: sub r15,rbp
0x137d9: mov qword ptr [rsp+0x8],r8
0x137de: cmp r15,0x4
0x137e2: cmova r15,r8
0x137e6: lea rdx,[rbp+r15]
0x137eb: add rbp,r13
0x137ee: mov qword ptr [rsp],rdx
0x137f2: call 0x2a30
0x137f7: mov rdx,qword ptr [rsp]
0x137fb: mov dword ptr [rsp+0x10],eax
0x137ff: mov ecx,r15d
0x13802: mov rdi,rbp
0x13805: mov rsi,r12
0x13808: mov r8,qword ptr [rsp+0x8]
0x1380d: rep movsb byte ptr es:[rdi],byte ptr [rsi]
0x1380f: cmp rdx,0x7ff
0x13816: jg 0x13665
0x1381c: sub r14,rdx
0x1381f: cmp r14,0x4
0x13823: cmova r14,r8
0x13827: call 0x3020
0x1382c: mov rdx,qword ptr [rsp]
0x13830: mov dword ptr [rsp+0x10],eax
0x13834: mov ecx,r14d
0x13837: mov rsi,r12
0x1383a: lea rax,[r13+rdx]
0x1383f: add r14,rdx
0x13842: cmp r14,0x7ff
0x13849: mov rdi,rax
0x1384c: rep movsb byte ptr es:[rdi],byte ptr [rsi]
0x1384e: ja 0x13665
0x13854: jmp 0x136df
0x13860: mov qword ptr [rdi+0x8],rsi
0x13864: ret 
0x13870: mov qword ptr [rdi+0x10],rsi
0x13874: ret 
0x13880: push r15
0x13882: push r14
0x13884: push r13
0x13886: push r12
0x13888: mov r12,rdi
0x1388b: push rbp
0x1388c: push rbx
0x1388d: mov rbp,rdx
0x13890: mov rbx,rsi
0x13893: sub rsp,0x18
0x13897: mov rcx,qword ptr [rdi]
0x1389a: test rcx,rcx
0x1389d: mov qword ptr [rsp+0x8],rcx
0x138a2: je 0x13908
0x138a4: call 0x2950
0x138a9: mov rcx,qword ptr [rsp+0x8]
0x138ae: mov r13,rax
0x138b1: jmp 0x138d6
0x138b8: mov rax,qword ptr [r12]
0x138bc: mov rdi,qword ptr [r12+0x10]
0x138c1: mov eax,dword ptr [rax]
0x138c3: and eax,0x20
0x138c6: cmovne eax,edx
0x138c9: mov dword ptr [r13],eax
0x138cd: call qword ptr [r12+0x8]
0x138d2: mov rcx,qword ptr [r12]
0x138d6: mov rdx,rbp
0x138d9: mov rdi,rbx
0x138dc: mov esi,0x1
0x138e1: call 0x2a40
0x138e6: add rbx,rax
0x138e9: sub rbp,rax
0x138ec: mov edx,dword ptr [r13]
0x138f0: jne 0x138b8
0x138f2: add rsp,0x18
0x138f6: pop rbx
0x138f7: pop rbp
0x138f8: pop r12
0x138fa: pop r13
0x138fc: pop r14
0x138fe: pop r15
0x13900: ret 
0x13908: mov r14,qword ptr [rdi+0x18]
0x1390c: lea rax,[rdi+0x838]
0x13913: lea r13,[rdi+0x20]
0x13917: mov qword ptr [rsp+0x8],rax
0x1391c: cmp rdx,r14
0x1391f: jbe 0x13a02
0x13925: mov esi,0x800
0x1392a: mov rdi,rbx
0x1392d: mov rdx,r14
0x13930: sub rsi,r14
0x13933: add rsi,qword ptr [rsp+0x8]
0x13938: add rbx,r14
0x1393b: sub rbp,r14
0x1393e: call 0x2d80
0x13943: test bl,0x7
0x13946: jne 0x139b0
0x13948: cmp rbp,0x7ff
0x1394f: jbe 0x139f3
0x13955: lea r15,[rbp-0x800]
0x1395c: mov r14,r15
0x1395f: and r14d,0x7ff
0x13966: jmp 0x1397c
0x13970: cmp r15,r14
0x13973: je 0x139b0
0x13975: sub r15,0x800
0x1397c: mov rsi,rbx
0x1397f: mov rdi,r13
0x13982: add rbx,0x800
0x13989: call 0x13a70
0x1398e: test r15,r15
0x13991: mov rbp,r15
0x13994: jne 0x13970
0x13996: mov qword ptr [r12+0x18],0x0
0x1399f: add rsp,0x18
0x139a3: pop rbx
0x139a4: pop rbp
0x139a5: pop r12
0x139a7: pop r13
0x139a9: pop r14
0x139ab: pop r15
0x139ad: ret 
0x139b0: mov rsi,qword ptr [rsp+0x8]
0x139b5: mov rdi,r13
0x139b8: mov r14d,0x800
0x139be: call 0x13a70
0x139c3: cmp rbp,0x800
0x139ca: ja 0x13925
0x139d0: mov r14d,0x800
0x139d6: mov rsi,qword ptr [rsp+0x8]
0x139db: mov rdx,rbp
0x139de: mov rdi,rbx
0x139e1: sub r14,rbp
0x139e4: call 0x2d80
0x139e9: mov qword ptr [r12+0x18],r14
0x139ee: jmp 0x138f2
0x139f3: mov rsi,qword ptr [rsp+0x8]
0x139f8: mov rdi,r13
0x139fb: call 0x13a70
0x13a00: jmp 0x139d0
0x13a02: mov r15,rax
0x13a05: sub r15,r14
0x13a08: lea rax,[r15+0x800]
0x13a0f: mov qword ptr [rsp+0x8],rax
0x13a14: jmp 0x139d6
0x13a20: push rbp
0x13a21: push rbx
0x13a22: mov rdx,-0x1
0x13a29: mov rbx,rdi
0x13a2c: mov esi,0x1038
0x13a31: sub rsp,0x8
0x13a35: mov rbp,qword ptr [rdi]
0x13a38: call 0x2f50
0x13a3d: mov rdi,rbx
0x13a40: call 0x30d0
0x13a45: test rbp,rbp
0x13a48: je 0x13a60
0x13a4a: add rsp,0x8
0x13a4e: mov rdi,rbp
0x13a51: pop rbx
0x13a52: pop rbp
0x13a53: jmp 0x13f50
0x13a60: add rsp,0x8
0x13a64: xor eax,eax
0x13a66: pop rbx
0x13a67: pop rbp
0x13a68: ret 
0x13a70: mov rax,qword ptr [rdi+0x810]
0x13a77: mov rdx,qword ptr [rdi+0x800]
0x13a7e: lea r9,[rdi+0x400]
0x13a85: lea rcx,[rax+0x1]
0x13a89: mov rax,rdi
0x13a8c: mov qword ptr [rdi+0x810],rcx
0x13a93: add rcx,qword ptr [rdi+0x808]
0x13a9a: nop word ptr [rax+rax]
0x13aa0: mov r8,rdx
0x13aa3: shl r8,0x15
0x13aa7: xor rdx,r8
0x13aaa: mov r8,qword ptr [rax]
0x13aad: not rdx
0x13ab0: add rdx,qword ptr [rax+0x400]
0x13ab7: mov r10,r8
0x13aba: and r10d,0x7f8
0x13ac1: mov r11,qword ptr [rdi+r10]
0x13ac5: mov r10,rdx
0x13ac8: shr r10,0x5
0x13acc: add r11,rdx
0x13acf: xor rdx,r10
0x13ad2: add rcx,r11
0x13ad5: mov qword ptr [rax],rcx
0x13ad8: shr rcx,0x8
0x13adc: and ecx,0x7f8
0x13ae2: mov r11,qword ptr [rdi+rcx]
0x13ae6: add r11,r8
0x13ae9: mov qword ptr [rsi],r11
0x13aec: add rdx,qword ptr [rax+0x408]
0x13af3: mov rcx,qword ptr [rax+0x8]
0x13af7: mov r10,rdx
0x13afa: mov rdx,rcx
0x13afd: and edx,0x7f8
0x13b03: mov r8,qword ptr [rdi+rdx]
0x13b07: mov rdx,r10
0x13b0a: shl rdx,0xc
0x13b0e: xor rdx,r10
0x13b11: add r8,r10
0x13b14: add r8,r11
0x13b17: mov qword ptr [rax+0x8],r8
0x13b1b: shr r8,0x8
0x13b1f: and r8d,0x7f8
0x13b26: add rcx,qword ptr [rdi+r8]
0x13b2a: mov qword ptr [rsi+0x8],rcx
0x13b2e: mov r8,qword ptr [rax+0x10]
0x13b32: mov r11,rcx
0x13b35: add rdx,qword ptr [rax+0x410]
0x13b3c: mov rcx,r8
0x13b3f: and ecx,0x7f8
0x13b45: mov r10,qword ptr [rdi+rcx]
0x13b49: add r10,rdx
0x13b4c: mov rcx,r10
0x13b4f: add rcx,r11
0x13b52: mov qword ptr [rax+0x10],rcx
0x13b56: shr rcx,0x8
0x13b5a: and ecx,0x7f8
0x13b60: mov r10,qword ptr [rdi+rcx]
0x13b64: mov rcx,rdx
0x13b67: shr rcx,0x21
0x13b6b: xor rdx,rcx
0x13b6e: add r10,r8
0x13b71: mov qword ptr [rsi+0x10],r10
0x13b75: mov rcx,qword ptr [rax+0x18]
0x13b79: add rdx,qword ptr [rax+0x418]
0x13b80: mov r8,rcx
0x13b83: and r8d,0x7f8
0x13b8a: mov r11,qword ptr [rdi+r8]
0x13b8e: add r11,rdx
0x13b91: mov r8,r11
0x13b94: add r8,r10
0x13b97: add rax,0x20
0x13b9b: add rsi,0x20
0x13b9f: mov qword ptr [rax-0x8],r8
0x13ba3: shr r8,0x8
0x13ba7: and r8d,0x7f8
0x13bae: add rcx,qword ptr [rdi+r8]
0x13bb2: mov qword ptr [rsi-0x8],rcx
0x13bb6: cmp rax,r9
0x13bb9: jb 0x13aa0
0x13bbf: lea r9,[rdi+0x800]
0x13bc6: nop word ptr cs:[rax+rax]
0x13bd0: mov r8,rdx
0x13bd3: shl r8,0x15
0x13bd7: xor rdx,r8
0x13bda: mov r8,qword ptr [rax]
0x13bdd: not rdx
0x13be0: add rdx,qword ptr [rax-0x400]
0x13be7: mov r10,r8
0x13bea: and r10d,0x7f8
0x13bf1: mov r11,qword ptr [rdi+r10]
0x13bf5: mov r10,rdx
0x13bf8: shr r10,0x5
0x13bfc: add r11,rdx
0x13bff: xor rdx,r10
0x13c02: add rcx,r11
0x13c05: mov qword ptr [rax],rcx
0x13c08: shr rcx,0x8
0x13c0c: and ecx,0x7f8
0x13c12: mov r11,qword ptr [rdi+rcx]
0x13c16: add r11,r8
0x13c19: mov qword ptr [rsi],r11
0x13c1c: add rdx,qword ptr [rax-0x3f8]
0x13c23: mov rcx,qword ptr [rax+0x8]
0x13c27: mov r10,rdx
0x13c2a: mov rdx,rcx
0x13c2d: and edx,0x7f8
0x13c33: mov r8,qword ptr [rdi+rdx]
0x13c37: mov rdx,r10
0x13c3a: shl rdx,0xc
0x13c3e: xor rdx,r10
0x13c41: add r8,r10
0x13c44: add r8,r11
0x13c47: mov qword ptr [rax+0x8],r8
0x13c4b: shr r8,0x8
0x13c4f: and r8d,0x7f8
0x13c56: add rcx,qword ptr [rdi+r8]
0x13c5a: mov qword ptr [rsi+0x8],rcx
0x13c5e: mov r8,qword ptr [rax+0x10]
0x13c62: mov r11,rcx
0x13c65: add rdx,qword ptr [rax-0x3f0]
0x13c6c: mov rcx,r8
0x13c6f: and ecx,0x7f8
0x13c75: mov r10,qword ptr [rdi+rcx]
0x13c79: add r10,rdx
0x13c7c: mov rcx,r10
0x13c7f: add rcx,r11
0x13c82: mov qword ptr [rax+0x10],rcx
0x13c86: shr rcx,0x8
0x13c8a: and ecx,0x7f8
0x13c90: mov r10,qword ptr [rdi+rcx]
0x13c94: mov rcx,rdx
0x13c97: shr rcx,0x21
0x13c9b: xor rdx,rcx
0x13c9e: add r10,r8
0x13ca1: mov qword ptr [rsi+0x10],r10
0x13ca5: mov rcx,qword ptr [rax+0x18]
0x13ca9: add rdx,qword ptr [rax-0x3e8]
0x13cb0: mov r8,rcx
0x13cb3: and r8d,0x7f8
0x13cba: mov r11,qword ptr [rdi+r8]
0x13cbe: add r11,rdx
0x13cc1: mov r8,r11
0x13cc4: add r8,r10
0x13cc7: add rax,0x20
0x13ccb: add rsi,0x20
0x13ccf: mov qword ptr [rax-0x8],r8
0x13cd3: shr r8,0x8
0x13cd7: and r8d,0x7f8
0x13cde: add rcx,qword ptr [rdi+r8]
0x13ce2: mov qword ptr [rsi-0x8],rcx
0x13ce6: cmp rax,r9
0x13ce9: jb 0x13bd0
0x13cef: mov qword ptr [rdi+0x800],rdx
0x13cf6: mov qword ptr [rdi+0x808],rcx
0x13cfd: ret 
0x13d00: push r13
0x13d02: push r12
0x13d04: lea r12,[rdi+0x800]
0x13d0b: push rbp
0x13d0c: mov rdx,rdi
0x13d0f: push rbx
0x13d10: mov rax,rdi
0x13d13: movabsq rcx,-0x670a8fb093bb3f55
0x13d1d: movabsq r10,-0x5167a40d34037613
0x13d27: movabsq rbp,0x48fe4a0fa5a09315
0x13d31: movabsq rsi,-0x7d0fac247caa1f32
0x13d3b: movabsq r8,-0x4d64d17db5a6aadc
0x13d45: movabsq rbx,-0x73f15afac2b8ed60
0x13d4f: movabsq r11,-0x46074cdd38c5379e
0x13d59: movabsq r9,0x647c4677a2884b7c
0x13d63: nop dword ptr [rax+rax]
0x13d68: add rsi,qword ptr [rax+0x20]
0x13d6c: add rcx,qword ptr [rax+0x38]
0x13d70: mov r13,qword ptr [rax]
0x13d73: add rbp,qword ptr [rax+0x28]
0x13d77: add r10,qword ptr [rax+0x30]
0x13d7b: sub r13,rsi
0x13d7e: add r9,r13
0x13d81: mov r13,rcx
0x13d84: shr r13,0x9
0x13d88: add rcx,r9
0x13d8b: xor rbp,r13
0x13d8e: mov r13,qword ptr [rax+0x8]
0x13d92: sub r13,rbp
0x13d95: add r11,r13
0x13d98: mov r13,r9
0x13d9b: shl r13,0x9
0x13d9f: add r9,r11
0x13da2: xor r10,r13
0x13da5: mov r13,qword ptr [rax+0x10]
0x13da9: sub r13,r10
0x13dac: add rbx,r13
0x13daf: mov r13,r11
0x13db2: shr r13,0x17
0x13db6: add r11,rbx
0x13db9: xor rcx,r13
0x13dbc: mov r13,qword ptr [rax+0x18]
0x13dc0: sub r13,rcx
0x13dc3: add r8,r13
0x13dc6: mov r13,rbx
0x13dc9: shl r13,0xf
0x13dcd: add rbx,r8
0x13dd0: xor r9,r13
0x13dd3: mov r13,r8
0x13dd6: sub rsi,r9
0x13dd9: shr r13,0xe
0x13ddd: mov qword ptr [rax],r9
0x13de0: xor r11,r13
0x13de3: mov r13,rsi
0x13de6: add r8,rsi
0x13de9: sub rbp,r11
0x13dec: shl r13,0x14
0x13df0: mov qword ptr [rax+0x8],r11
0x13df4: xor rbx,r13
0x13df7: lea r13,[rsi+rbp]
0x13dfb: mov rsi,rbp
0x13dfe: sub r10,rbx
0x13e01: shr rsi,0x11
0x13e05: mov qword ptr [rax+0x10],rbx
0x13e09: xor r8,rsi
0x13e0c: mov rsi,r10
0x13e0f: add rbp,r10
0x13e12: sub rcx,r8
0x13e15: shl rsi,0xe
0x13e19: mov qword ptr [rax+0x18],r8
0x13e1d: xor rsi,r13
0x13e20: add r10,rcx
0x13e23: mov qword ptr [rax+0x28],rbp
0x13e27: mov qword ptr [rax+0x20],rsi
0x13e2b: mov qword ptr [rax+0x30],r10
0x13e2f: add rax,0x40
0x13e33: mov qword ptr [rax-0x8],rcx
0x13e37: cmp r12,rax
0x13e3a: jne 0x13d68
0x13e40: add rsi,qword ptr [rdx+0x20]
0x13e44: add rcx,qword ptr [rdx+0x38]
0x13e48: mov r12,qword ptr [rdx]
0x13e4b: add rbp,qword ptr [rdx+0x28]
0x13e4f: add r10,qword ptr [rdx+0x30]
0x13e53: sub r12,rsi
0x13e56: add r9,r12
0x13e59: mov r12,rcx
0x13e5c: shr r12,0x9
0x13e60: add rcx,r9
0x13e63: xor rbp,r12
0x13e66: mov r12,qword ptr [rdx+0x8]
0x13e6a: sub r12,rbp
0x13e6d: add r11,r12
0x13e70: mov r12,r9
0x13e73: shl r12,0x9
0x13e77: add r9,r11
0x13e7a: xor r10,r12
0x13e7d: mov r12,qword ptr [rdx+0x10]
0x13e81: sub r12,r10
0x13e84: add rbx,r12
0x13e87: mov r12,r11
0x13e8a: shr r12,0x17
0x13e8e: add r11,rbx
0x13e91: xor rcx,r12
0x13e94: mov r12,qword ptr [rdx+0x18]
0x13e98: sub r12,rcx
0x13e9b: add r8,r12
0x13e9e: mov r12,rbx
0x13ea1: shl r12,0xf
0x13ea5: add rbx,r8
0x13ea8: xor r9,r12
0x13eab: mov r12,r8
0x13eae: sub rsi,r9
0x13eb1: shr r12,0xe
0x13eb5: mov qword ptr [rdx],r9
0x13eb8: xor r11,r12
0x13ebb: mov r12,rsi
0x13ebe: add r8,rsi
0x13ec1: sub rbp,r11
0x13ec4: shl r12,0x14
0x13ec8: mov qword ptr [rdx+0x8],r11
0x13ecc: xor rbx,r12
0x13ecf: lea r12,[rsi+rbp]
0x13ed3: mov rsi,rbp
0x13ed6: sub r10,rbx
0x13ed9: shr rsi,0x11
0x13edd: mov qword ptr [rdx+0x10],rbx
0x13ee1: xor r8,rsi
0x13ee4: mov rsi,r10
0x13ee7: add rbp,r10
0x13eea: sub rcx,r8
0x13eed: shl rsi,0xe
0x13ef1: mov qword ptr [rdx+0x18],r8
0x13ef5: xor rsi,r12
0x13ef8: add r10,rcx
0x13efb: mov qword ptr [rdx+0x28],rbp
0x13eff: mov qword ptr [rdx+0x20],rsi
0x13f03: mov qword ptr [rdx+0x30],r10
0x13f07: add rdx,0x40
0x13f0b: mov qword ptr [rdx-0x8],rcx
0x13f0f: cmp rax,rdx
0x13f12: jne 0x13e40
0x13f18: pop rbx
0x13f19: mov qword ptr [rdi+0x810],0x0
0x13f24: mov qword ptr [rdi+0x808],0x0
0x13f2f: pop rbp
0x13f30: mov qword ptr [rdi+0x800],0x0
0x13f3b: pop r12
0x13f3d: pop r13
0x13f3f: ret 
0x13f40: mov edx,0x3
0x13f45: xor esi,esi
0x13f47: xor eax,eax
0x13f49: jmp 0x13fd0
0x13f50: push r12
0x13f52: push rbp
0x13f53: push rbx
0x13f54: mov rbx,rdi
0x13f57: call 0x2db0
0x13f5c: test eax,eax
0x13f5e: mov rdi,rbx
0x13f61: js 0x13fb7
0x13f63: call 0x2e50
0x13f68: test eax,eax
0x13f6a: jne 0x13f98
0x13f6c: mov rdi,rbx
0x13f6f: call 0x12760
0x13f74: test eax,eax
0x13f76: je 0x13fb4
0x13f78: call 0x2950
0x13f7d: mov r12d,dword ptr [rax]
0x13f80: mov rdi,rbx
0x13f83: mov rbp,rax
0x13f86: call 0x2a80
0x13f8b: test r12d,r12d
0x13f8e: jne 0x13fc0
0x13f90: pop rbx
0x13f91: pop rbp
0x13f92: pop r12
0x13f94: ret 
0x13f98: mov rdi,rbx
0x13f9b: call 0x2db0
0x13fa0: xor esi,esi
0x13fa2: mov edx,0x1
0x13fa7: mov edi,eax
0x13fa9: call 0x2bc0
0x13fae: cmp rax,-0x1
0x13fb2: jne 0x13f6c
0x13fb4: mov rdi,rbx
0x13fb7: pop rbx
0x13fb8: pop rbp
0x13fb9: pop r12
0x13fbb: jmp 0x2a80
0x13fc0: mov dword ptr [rbp],r12d
0x13fc4: mov eax,0xffffffff
0x13fc9: jmp 0x13f90
0x13fd0: push r12
0x13fd2: push rbp
0x13fd3: mov ebp,edi
0x13fd5: push rbx
0x13fd6: sub rsp,0x50
0x13fda: mov rax,qword ptr fs:0x28
0x13fe3: mov qword ptr [rsp+0x18],rax
0x13fe8: xor eax,eax
0x13fea: lea rax,[rsp+0x70]
0x13fef: test esi,esi
0x13ff1: mov qword ptr [rsp+0x30],rdx
0x13ff6: mov qword ptr [rsp+0x38],rcx
0x13ffb: mov qword ptr [rsp+0x40],r8
0x14000: mov qword ptr [rsp+0x8],rax
0x14005: lea rax,[rsp+0x20]
0x1400a: mov qword ptr [rsp+0x48],r9
0x1400f: mov dword ptr [rsp],0x10
0x14016: mov qword ptr [rsp+0x10],rax
0x1401b: je 0x14222
0x14021: cmp esi,0x406
0x14027: jne 0x14070
0x14029: mov rax,qword ptr [rsp+0x10]
0x1402e: cmp dword ptr [rip+0x20b6ff],0x0
0x14035: mov dword ptr [rsp],0x18
0x1403c: mov r12d,dword ptr [rax+0x10]
0x14040: mov edx,r12d
0x14043: js 0x14173
0x14049: xor eax,eax
0x1404b: mov esi,0x406
0x14050: call 0x2a00
0x14055: test eax,eax
0x14057: mov ebx,eax
0x14059: js 0x141e8
0x1405f: mov dword ptr [rip+0x20b6cb],0x1
0x14069: jmp 0x140b0
0x14070: cmp esi,0xb
0x14073: je 0x140a0
0x14075: jg 0x140d0
0x14077: cmp esi,0x4
0x1407a: je 0x14150
0x14080: jg 0x14140
0x14086: cmp esi,0x2
0x14089: je 0x14150
0x1408f: jg 0x140a0
0x14091: cmp esi,0x1
0x14094: jne 0x140f8
0x14096: nop word ptr cs:[rax+rax]
0x140a0: mov edi,ebp
0x140a2: xor eax,eax
0x140a4: call 0x2a00
0x140a9: mov ebx,eax
0x140ab: nop dword ptr [rax+rax]
0x140b0: mov rcx,qword ptr [rsp+0x18]
0x140b5: xor rcx,qword ptr fs:0x28
0x140be: mov eax,ebx
0x140c0: jne 0x1421d
0x140c6: add rsp,0x50
0x140ca: pop rbx
0x140cb: pop rbp
0x140cc: pop r12
0x140ce: ret 
0x140d0: cmp esi,0x407
0x140d6: jg 0x14120
0x140d8: cmp esi,0x406
0x140de: jge 0x14150
0x140e0: cmp esi,0x401
0x140e6: je 0x140a0
0x140e8: cmp esi,0x402
0x140ee: je 0x14150
0x140f0: cmp esi,0x400
0x140f6: je 0x14150
0x140f8: mov eax,dword ptr [rsp]
0x140fb: cmp eax,0x2f
0x140fe: ja 0x1423a
0x14104: add rax,qword ptr [rsp+0x10]
0x14109: mov rdx,qword ptr [rax]
0x1410c: mov edi,ebp
0x1410e: xor eax,eax
0x14110: call 0x2a00
0x14115: mov ebx,eax
0x14117: jmp 0x140b0
0x14120: cmp esi,0x409
0x14126: je 0x14150
0x14128: jl 0x140a0
0x1412e: cmp esi,0x40a
0x14134: jne 0x140f8
0x14136: jmp 0x140a0
0x14140: cmp esi,0x9
0x14143: je 0x140a0
0x14149: jg 0x14150
0x1414b: cmp esi,0x8
0x1414e: jne 0x140f8
0x14150: mov eax,dword ptr [rsp]
0x14153: cmp eax,0x2f
0x14156: ja 0x14244
0x1415c: add rax,qword ptr [rsp+0x10]
0x14161: mov edx,dword ptr [rax]
0x14163: mov edi,ebp
0x14165: xor eax,eax
0x14167: call 0x2a00
0x1416c: mov ebx,eax
0x1416e: jmp 0x140b0
0x14173: xor esi,esi
0x14175: xor eax,eax
0x14177: call 0x2a00
0x1417c: test eax,eax
0x1417e: mov ebx,eax
0x14180: js 0x140b0
0x14186: cmp dword ptr [rip+0x20b5a7],-0x1
0x1418d: jne 0x140b0
0x14193: xor eax,eax
0x14195: mov esi,0x1
0x1419a: mov edi,ebx
0x1419c: call 0x2a00
0x141a1: test eax,eax
0x141a3: js 0x141c1
0x141a5: or eax,0x1
0x141a8: mov esi,0x2
0x141ad: mov edi,ebx
0x141af: mov edx,eax
0x141b1: xor eax,eax
0x141b3: call 0x2a00
0x141b8: cmp eax,-0x1
0x141bb: jne 0x140b0
0x141c1: call 0x2950
0x141c6: mov r12d,dword ptr [rax]
0x141c9: mov rbp,rax
0x141cc: mov edi,ebx
0x141ce: call 0x2c30
0x141d3: mov ebx,0xffffffff
0x141d8: mov dword ptr [rbp],r12d
0x141dc: jmp 0x140b0
0x141e8: call 0x2950
0x141ed: cmp dword ptr [rax],0x16
0x141f0: jne 0x1405f
0x141f6: xor esi,esi
0x141f8: xor eax,eax
0x141fa: mov edx,r12d
0x141fd: mov edi,ebp
0x141ff: call 0x2a00
0x14204: test eax,eax
0x14206: mov ebx,eax
0x14208: js 0x140b0
0x1420e: mov dword ptr [rip+0x20b51c],0xffffffff
0x14218: jmp 0x14193
0x1421d: call 0x2b30
0x14222: mov rax,qword ptr [rsp+0x10]
0x14227: xor esi,esi
0x14229: mov edx,dword ptr [rax+0x10]
0x1422c: xor eax,eax
0x1422e: call 0x2a00
0x14233: mov ebx,eax
0x14235: jmp 0x140b0
0x1423a: mov rax,qword ptr [rsp+0x8]
0x1423f: jmp 0x14109
0x14244: mov rax,qword ptr [rsp+0x8]
0x14249: jmp 0x14161
0x14250: or dword ptr [rdi],0x20
0x14253: ret 
0x14260: push rbp
0x14261: mov rbp,rsp
0x14264: push r15
0x14266: push r14
0x14268: push r13
0x1426a: push r12
0x1426c: lea r14,[rbp-0x3b0]
0x14273: push rbx
0x14274: mov rbx,rdx
0x14277: mov r12,rcx
0x1427a: mov rdx,r14
0x1427d: sub rsp,0x408
0x14284: mov qword ptr [rbp-0x418],rsi
0x1428b: lea rsi,[rbp-0x2c0]
0x14292: mov qword ptr [rbp-0x3e8],rdi
0x14299: mov rdi,rbx
0x1429c: mov qword ptr [rbp-0x410],r14
0x142a3: mov rax,qword ptr fs:0x28
0x142ac: mov qword ptr [rbp-0x38],rax
0x142b0: xor eax,eax
0x142b2: mov qword ptr [rbp-0x408],rsi
0x142b9: call 0x15620
0x142be: test eax,eax
0x142c0: js 0x15128
0x142c6: mov rsi,r14
0x142c9: mov rdi,r12
0x142cc: call 0x15420
0x142d1: test eax,eax
0x142d3: js 0x15190
0x142d9: mov rax,qword ptr [rbp-0x2b0]
0x142e0: mov rdx,-0x1
0x142e7: add rax,0x7
0x142eb: cmp rax,0x6
0x142ef: cmovbe rax,rdx
0x142f3: add rax,qword ptr [rbp-0x2a8]
0x142fa: jb 0x14d28
0x14300: mov rdi,rax
0x14303: xor r8d,r8d
0x14306: add rdi,0x6
0x1430a: setb r8b
0x1430e: jb 0x14d28
0x14314: cmp rdi,0xf9f
0x1431b: jbe 0x14468
0x14321: cmp rdi,-0x1
0x14325: mov qword ptr [rbp-0x3c8],r8
0x1432c: je 0x14d28
0x14332: call 0x2df0
0x14337: test rax,rax
0x1433a: mov qword ptr [rbp-0x3d8],rax
0x14341: je 0x14d28
0x14347: mov r8,qword ptr [rbp-0x3c8]
0x1434e: mov qword ptr [rbp-0x420],rax
0x14355: xor r12d,r12d
0x14358: cmp qword ptr [rbp-0x3e8],0x0
0x14360: je 0x1436c
0x14362: mov rax,qword ptr [rbp-0x418]
0x14369: mov r12,qword ptr [rax]
0x1436c: mov r13,qword ptr [rbp-0x2b8]
0x14373: lea rax,[rbp-0x3bc]
0x1437a: mov r15,qword ptr [rbp-0x3e8]
0x14381: mov qword ptr [rbp-0x400],0x0
0x1438c: mov qword ptr [rbp-0x3f0],rax
0x14393: mov rax,rbx
0x14396: mov rbx,r8
0x14399: mov rcx,qword ptr [r13]
0x1439d: mov r8,rax
0x143a0: cmp rcx,r8
0x143a3: je 0x14d11
0x143a9: sub rcx,r8
0x143ac: mov rax,rbx
0x143af: add rax,rcx
0x143b2: mov r14,rax
0x143b5: jae 0x14498
0x143bb: cmp r12,-0x1
0x143bf: je 0x14e90
0x143c5: call 0x2950
0x143ca: mov qword ptr [rbp-0x3c8],rax
0x143d1: cmp r15,qword ptr [rbp-0x3e8]
0x143d8: je 0x143e3
0x143da: test r15,r15
0x143dd: jne 0x14ec0
0x143e3: mov rax,qword ptr [rbp-0x420]
0x143ea: test rax,rax
0x143ed: je 0x143f7
0x143ef: mov rdi,rax
0x143f2: call 0x30d0
0x143f7: mov rax,qword ptr [rbp-0x408]
0x143fe: mov rdi,qword ptr [rbp-0x2b8]
0x14405: add rax,0x20
0x14409: cmp rdi,rax
0x1440c: je 0x14413
0x1440e: call 0x30d0
0x14413: mov rax,qword ptr [rbp-0x410]
0x1441a: mov rdi,qword ptr [rbp-0x3a8]
0x14421: add rax,0x10
0x14425: cmp rdi,rax
0x14428: je 0x1442f
0x1442a: call 0x30d0
0x1442f: mov rax,qword ptr [rbp-0x3c8]
0x14436: xor r15d,r15d
0x14439: mov dword ptr [rax],0xc
0x1443f: mov rdi,qword ptr [rbp-0x38]
0x14443: xor rdi,qword ptr fs:0x28
0x1444c: mov rax,r15
0x1444f: jne 0x15357
0x14455: lea rsp,[rbp-0x28]
0x14459: pop rbx
0x1445a: pop r12
0x1445c: pop r13
0x1445e: pop r14
0x14460: pop r15
0x14462: pop rbp
0x14463: ret 
0x14468: add rax,0x24
0x1446c: mov qword ptr [rbp-0x420],0x0
0x14477: and rax,-0x10
0x1447b: sub rsp,rax
0x1447e: lea rax,[rsp+0xf]
0x14483: and rax,-0x10
0x14487: mov qword ptr [rbp-0x3d8],rax
0x1448e: jmp 0x14355
0x14498: cmp r12,rax
0x1449b: jae 0x14504
0x1449d: test r12,r12
0x144a0: jne 0x14dd0
0x144a6: cmp rax,0xc
0x144aa: ja 0x14de2
0x144b0: mov r12d,0xc
0x144b6: cmp r15,qword ptr [rbp-0x3e8]
0x144bd: sete dl
0x144c0: test r15,r15
0x144c3: je 0x14e08
0x144c9: test dl,dl
0x144cb: jne 0x14e08
0x144d1: mov rsi,r12
0x144d4: mov rdi,r15
0x144d7: mov qword ptr [rbp-0x3d0],r8
0x144de: mov qword ptr [rbp-0x3c8],rcx
0x144e5: call 0x2e90
0x144ea: test rax,rax
0x144ed: mov rcx,qword ptr [rbp-0x3c8]
0x144f4: mov r8,qword ptr [rbp-0x3d0]
0x144fb: je 0x14eab
0x14501: mov r15,rax
0x14504: lea rdi,[r15+rbx]
0x14508: mov rdx,rcx
0x1450b: mov rsi,r8
0x1450e: call 0x2d80
0x14513: mov rax,qword ptr [rbp-0x400]
0x1451a: cmp qword ptr [rbp-0x2c0],rax
0x14521: je 0x151db
0x14527: movzx edx,byte ptr [r13+0x48]
0x1452c: mov rax,qword ptr [r13+0x50]
0x14530: cmp dl,0x25
0x14533: je 0x14cc8
0x14539: cmp rax,-0x1
0x1453d: je 0x15186
0x14543: mov r8,qword ptr [rbp-0x3a8]
0x1454a: shl rax,0x5
0x1454e: add rax,r8
0x14551: cmp dl,0x6e
0x14554: mov edi,dword ptr [rax]
0x14556: mov dword ptr [rbp-0x3d0],edi
0x1455c: je 0x14d40
0x14562: mov eax,dword ptr [r13+0x10]
0x14566: mov rdi,qword ptr [rbp-0x3d8]
0x1456d: test al,0x1
0x1456f: mov byte ptr [rdi],0x25
0x14572: lea rbx,[rdi+0x1]
0x14576: je 0x14587
0x14578: mov rdi,qword ptr [rbp-0x3d8]
0x1457f: lea rbx,[rdi+0x2]
0x14583: mov byte ptr [rdi+0x1],0x27
0x14587: test al,0x2
0x14589: je 0x14592
0x1458b: mov byte ptr [rbx],0x2d
0x1458e: add rbx,0x1
0x14592: test al,0x4
0x14594: je 0x1459d
0x14596: mov byte ptr [rbx],0x2b
0x14599: add rbx,0x1
0x1459d: test al,0x8
0x1459f: je 0x145a8
0x145a1: mov byte ptr [rbx],0x20
0x145a4: add rbx,0x1
0x145a8: test al,0x10
0x145aa: je 0x145b3
0x145ac: mov byte ptr [rbx],0x23
0x145af: add rbx,0x1
0x145b3: test al,0x40
0x145b5: je 0x145be
0x145b7: mov byte ptr [rbx],0x49
0x145ba: add rbx,0x1
0x145be: test al,0x20
0x145c0: je 0x145c9
0x145c2: mov byte ptr [rbx],0x30
0x145c5: add rbx,0x1
0x145c9: mov rsi,qword ptr [r13+0x18]
0x145cd: mov rdx,qword ptr [r13+0x20]
0x145d1: cmp rsi,rdx
0x145d4: je 0x14606
0x145d6: mov rcx,rdx
0x145d9: mov rdi,rbx
0x145dc: mov qword ptr [rbp-0x3e0],r8
0x145e3: sub rcx,rsi
0x145e6: mov rdx,rcx
0x145e9: mov qword ptr [rbp-0x3c8],rcx
0x145f0: call 0x2d80
0x145f5: mov rcx,qword ptr [rbp-0x3c8]
0x145fc: mov r8,qword ptr [rbp-0x3e0]
0x14603: add rbx,rcx
0x14606: mov rsi,qword ptr [r13+0x30]
0x1460a: mov rdx,qword ptr [r13+0x38]
0x1460e: cmp rsi,rdx
0x14611: je 0x14643
0x14613: mov rcx,rdx
0x14616: mov rdi,rbx
0x14619: mov qword ptr [rbp-0x3e0],r8
0x14620: sub rcx,rsi
0x14623: mov rdx,rcx
0x14626: mov qword ptr [rbp-0x3c8],rcx
0x1462d: call 0x2d80
0x14632: mov rcx,qword ptr [rbp-0x3c8]
0x14639: mov r8,qword ptr [rbp-0x3e0]
0x14640: add rbx,rcx
0x14643: mov edi,dword ptr [rbp-0x3d0]
0x14649: cmp edi,0x10
0x1464c: ja 0x1467b
0x1464e: mov eax,0x1
0x14653: mov ecx,edi
0x14655: shl rax,cl
0x14658: test eax,0x14180
0x1465d: jne 0x14674
0x1465f: test ah,0x10
0x14662: jne 0x14fc0
0x14668: test ah,0x6
0x1466b: je 0x1467b
0x1466d: mov byte ptr [rbx],0x6c
0x14670: add rbx,0x1
0x14674: mov byte ptr [rbx],0x6c
0x14677: add rbx,0x1
0x1467b: movzx eax,byte ptr [r13+0x48]
0x14680: mov byte ptr [rbx+0x1],0x0
0x14684: mov byte ptr [rbx],al
0x14686: mov rax,qword ptr [r13+0x28]
0x1468a: cmp rax,-0x1
0x1468e: je 0x14dc0
0x14694: shl rax,0x5
0x14698: add rax,r8
0x1469b: cmp dword ptr [rax],0x5
0x1469e: jne 0x15186
0x146a4: mov eax,dword ptr [rax+0x10]
0x146a7: mov dword ptr [rbp-0x3e0],0x1
0x146b1: mov dword ptr [rbp-0x3b8],eax
0x146b7: mov rax,qword ptr [r13+0x40]
0x146bb: cmp rax,-0x1
0x146bf: je 0x146ec
0x146c1: shl rax,0x5
0x146c5: add r8,rax
0x146c8: cmp dword ptr [r8],0x5
0x146cc: jne 0x15186
0x146d2: mov eax,dword ptr [rbp-0x3e0]
0x146d8: mov edx,dword ptr [r8+0x10]
0x146dc: mov dword ptr [rbp+rax*4-0x3b8],edx
0x146e3: lea eax,[rax+0x1]
0x146e6: mov dword ptr [rbp-0x3e0],eax
0x146ec: mov rax,r14
0x146ef: xor edx,edx
0x146f1: add rax,0x2
0x146f5: jb 0x1535c
0x146fb: cmp r12,rax
0x146fe: jae 0x1474b
0x14700: test r12,r12
0x14703: jne 0x14f28
0x14709: cmp rax,0xc
0x1470d: ja 0x14f40
0x14713: mov r12d,0xc
0x14719: cmp r15,qword ptr [rbp-0x3e8]
0x14720: sete dl
0x14723: test r15,r15
0x14726: je 0x14f70
0x1472c: test dl,dl
0x1472e: jne 0x14f70
0x14734: mov rsi,r12
0x14737: mov rdi,r15
0x1473a: call 0x2e90
0x1473f: test rax,rax
0x14742: je 0x143c5
0x14748: mov r15,rax
0x1474b: mov byte ptr [r15+r14],0x0
0x14750: call 0x2950
0x14755: mov qword ptr [rbp-0x3c8],rax
0x1475c: mov eax,dword ptr [rax]
0x1475e: mov qword ptr [rbp-0x3f8],rbx
0x14765: mov dword ptr [rbp-0x424],eax
0x1476b: nop dword ptr [rax+rax]
0x14770: mov rax,qword ptr [rbp-0x3c8]
0x14777: mov rbx,r12
0x1477a: mov r10d,0x7fffffff
0x14780: sub rbx,r14
0x14783: mov dword ptr [rbp-0x3bc],0xffffffff
0x1478d: cmp rbx,0x7fffffff
0x14794: mov dword ptr [rax],0x0
0x1479a: mov eax,dword ptr [rbp-0x3d0]
0x147a0: cmovbe r10,rbx
0x147a4: cmp eax,0x11
0x147a7: ja 0x15186
0x147ad: lea rsi,[rip+0x46ec]
0x147b4: movsxd rax,dword ptr [rsi+rax*4]
0x147b8: add rax,rsi
0x147bb: jmp rax
0x14cc8: cmp rax,-0x1
0x14ccc: jne 0x15186
0x14cd2: mov rax,r14
0x14cd5: add rax,0x1
0x14cd9: mov rbx,rax
0x14cdc: jae 0x14d68
0x14ce2: cmp r12,-0x1
0x14ce6: jne 0x143c5
0x14cec: mov rbx,r12
0x14cef: mov byte ptr [r15+r14],0x25
0x14cf4: mov r8,qword ptr [r13+0x8]
0x14cf8: add r13,0x58
0x14cfc: mov rcx,qword ptr [r13]
0x14d00: add qword ptr [rbp-0x400],0x1
0x14d08: cmp rcx,r8
0x14d0b: jne 0x143a9
0x14d11: mov r14,rbx
0x14d14: jmp 0x14513
0x14d28: call 0x2950
0x14d2d: mov qword ptr [rbp-0x3c8],rax
0x14d34: jmp 0x143f7
0x14d40: mov edx,edi
0x14d42: sub edx,0x12
0x14d45: cmp edx,0x4
0x14d48: ja 0x15186
0x14d4e: lea rdi,[rip+0x4193]
0x14d55: mov rax,qword ptr [rax+0x10]
0x14d59: movsxd rdx,dword ptr [rdi+rdx*4]
0x14d5d: add rdx,rdi
0x14d60: jmp rdx
0x14d68: cmp r12,rax
0x14d6b: jae 0x14cef
0x14d6d: test r12,r12
0x14d70: jne 0x15140
0x14d76: cmp rax,0xc
0x14d7a: ja 0x15152
0x14d80: mov r12d,0xc
0x14d86: cmp r15,qword ptr [rbp-0x3e8]
0x14d8d: sete dl
0x14d90: test r15,r15
0x14d93: je 0x15000
0x14d99: test dl,dl
0x14d9b: jne 0x15000
0x14da1: mov rsi,r12
0x14da4: mov rdi,r15
0x14da7: call 0x2e90
0x14dac: test rax,rax
0x14daf: je 0x14eab
0x14db5: mov r15,rax
0x14db8: jmp 0x14cef
0x14dc0: mov dword ptr [rbp-0x3e0],0x0
0x14dca: jmp 0x146b7
0x14dd0: js 0x143c5
0x14dd6: add r12,r12
0x14dd9: cmp r12,rax
0x14ddc: jae 0x144b6
0x14de2: cmp rax,-0x1
0x14de6: je 0x143c5
0x14dec: cmp r15,qword ptr [rbp-0x3e8]
0x14df3: mov r12,rax
0x14df6: sete dl
0x14df9: test r15,r15
0x14dfc: jne 0x144c9
0x14e02: nop word ptr [rax+rax]
0x14e08: mov rdi,r12
0x14e0b: mov qword ptr [rbp-0x3e0],r8
0x14e12: mov byte ptr [rbp-0x3d0],dl
0x14e18: mov qword ptr [rbp-0x3c8],rcx
0x14e1f: call 0x2df0
0x14e24: test rax,rax
0x14e27: mov r9,rax
0x14e2a: mov rcx,qword ptr [rbp-0x3c8]
0x14e31: movzx edx,byte ptr [rbp-0x3d0]
0x14e38: mov r8,qword ptr [rbp-0x3e0]
0x14e3f: je 0x143c5
0x14e45: test rbx,rbx
0x14e48: je 0x15050
0x14e4e: test dl,dl
0x14e50: je 0x15050
0x14e56: mov rsi,r15
0x14e59: mov rdx,rbx
0x14e5c: mov rdi,rax
0x14e5f: mov qword ptr [rbp-0x3d0],r8
0x14e66: mov qword ptr [rbp-0x3c8],rcx
0x14e6d: call 0x2d80
0x14e72: mov rcx,qword ptr [rbp-0x3c8]
0x14e79: mov r15,rax
0x14e7c: mov r8,qword ptr [rbp-0x3d0]
0x14e83: jmp 0x14504
0x14e90: mov r14,r12
0x14e93: jmp 0x14504
0x14eab: call 0x2950
0x14eb0: mov qword ptr [rbp-0x3c8],rax
0x14eb7: nop word ptr [rax+rax]
0x14ec0: mov rdi,r15
0x14ec3: call 0x30d0
0x14ec8: jmp 0x143e3
0x14f28: js 0x143c5
0x14f2e: add r12,r12
0x14f31: cmp r12,rax
0x14f34: jae 0x14719
0x14f3a: nop word ptr [rax+rax]
0x14f40: test rdx,rdx
0x14f43: jne 0x143c5
0x14f49: cmp rax,-0x1
0x14f4d: je 0x143c5
0x14f53: cmp r15,qword ptr [rbp-0x3e8]
0x14f5a: mov r12,rax
0x14f5d: sete dl
0x14f60: test r15,r15
0x14f63: jne 0x1472c
0x14f69: nop dword ptr [rax]
0x14f70: mov rdi,r12
0x14f73: mov byte ptr [rbp-0x3c8],dl
0x14f79: call 0x2df0
0x14f7e: test rax,rax
0x14f81: mov rcx,rax
0x14f84: movzx edx,byte ptr [rbp-0x3c8]
0x14f8b: je 0x143c5
0x14f91: test r14,r14
0x14f94: je 0x15130
0x14f9a: test dl,dl
0x14f9c: je 0x15130
0x14fa2: mov rsi,r15
0x14fa5: mov rdx,r14
0x14fa8: mov rdi,rax
0x14fab: call 0x2d80
0x14fb0: mov r15,rax
0x14fb3: jmp 0x1474b
0x14fc0: mov byte ptr [rbx],0x4c
0x14fc3: add rbx,0x1
0x14fc7: jmp 0x1467b
0x15000: mov rdi,r12
0x15003: mov byte ptr [rbp-0x3c8],dl
0x15009: call 0x2df0
0x1500e: test rax,rax
0x15011: mov rcx,rax
0x15014: movzx edx,byte ptr [rbp-0x3c8]
0x1501b: je 0x143c5
0x15021: test r14,r14
0x15024: je 0x15164
0x1502a: test dl,dl
0x1502c: je 0x15164
0x15032: mov rsi,r15
0x15035: mov rdx,r14
0x15038: mov rdi,rax
0x1503b: call 0x2d80
0x15040: mov r15,rax
0x15043: jmp 0x14cef
0x15050: mov r15,r9
0x15053: jmp 0x14504
0x15128: xor r15d,r15d
0x1512b: jmp 0x1443f
0x15130: mov r15,rcx
0x15133: jmp 0x1474b
0x15140: js 0x143c5
0x15146: add r12,r12
0x15149: cmp r12,rax
0x1514c: jae 0x14d86
0x15152: cmp rax,-0x1
0x15156: je 0x143c5
0x1515c: mov r12,rax
0x1515f: jmp 0x14d86
0x15164: mov r15,rcx
0x15167: jmp 0x14cef
0x15186: call 0x2940
0x1518b: nop dword ptr [rax+rax]
0x15190: mov rax,qword ptr [rbp-0x408]
0x15197: mov rdi,qword ptr [rbp-0x2b8]
0x1519e: add rax,0x20
0x151a2: cmp rdi,rax
0x151a5: je 0x151ac
0x151a7: call 0x30d0
0x151ac: mov rax,qword ptr [rbp-0x410]
0x151b3: mov rdi,qword ptr [rbp-0x3a8]
0x151ba: add rax,0x10
0x151be: cmp rdi,rax
0x151c1: je 0x151c8
0x151c3: call 0x30d0
0x151c8: call 0x2950
0x151cd: xor r15d,r15d
0x151d0: mov dword ptr [rax],0x16
0x151d6: jmp 0x1443f
0x151db: mov rbx,r14
0x151de: xor eax,eax
0x151e0: add rbx,0x1
0x151e4: jb 0x152f0
0x151ea: cmp r12,rbx
0x151ed: jae 0x1523c
0x151ef: test r12,r12
0x151f2: jne 0x15329
0x151f8: cmp rbx,0xc
0x151fc: ja 0x1530e
0x15202: mov r12d,0xc
0x15208: cmp r15,qword ptr [rbp-0x3e8]
0x1520f: sete r13b
0x15213: test r15,r15
0x15216: je 0x152bc
0x1521c: test r13b,r13b
0x1521f: jne 0x152bc
0x15225: mov rsi,r12
0x15228: mov rdi,r15
0x1522b: call 0x2e90
0x15230: test rax,rax
0x15233: je 0x14eab
0x15239: mov r15,rax
0x1523c: cmp r15,qword ptr [rbp-0x3e8]
0x15243: mov byte ptr [r15+r14],0x0
0x15248: je 0x15261
0x1524a: cmp r12,rbx
0x1524d: jbe 0x15261
0x1524f: mov rdi,r15
0x15252: mov rsi,rbx
0x15255: call 0x2e90
0x1525a: test rax,rax
0x1525d: cmovne r15,rax
0x15261: mov rax,qword ptr [rbp-0x420]
0x15268: test rax,rax
0x1526b: je 0x15275
0x1526d: mov rdi,rax
0x15270: call 0x30d0
0x15275: mov rax,qword ptr [rbp-0x408]
0x1527c: mov rdi,qword ptr [rbp-0x2b8]
0x15283: add rax,0x20
0x15287: cmp rdi,rax
0x1528a: je 0x15291
0x1528c: call 0x30d0
0x15291: mov rax,qword ptr [rbp-0x410]
0x15298: mov rdi,qword ptr [rbp-0x3a8]
0x1529f: add rax,0x10
0x152a3: cmp rdi,rax
0x152a6: je 0x152ad
0x152a8: call 0x30d0
0x152ad: mov rax,qword ptr [rbp-0x418]
0x152b4: mov qword ptr [rax],r14
0x152b7: jmp 0x1443f
0x152bc: mov rdi,r12
0x152bf: call 0x2df0
0x152c4: test rax,rax
0x152c7: mov rcx,rax
0x152ca: je 0x143c5
0x152d0: test r14,r14
0x152d3: je 0x15340
0x152d5: test r13b,r13b
0x152d8: je 0x15340
0x152da: mov rsi,r15
0x152dd: mov rdx,r14
0x152e0: mov rdi,rax
0x152e3: call 0x2d80
0x152e8: mov r15,rax
0x152eb: jmp 0x1523c
0x152f0: cmp r12,-0x1
0x152f4: mov eax,0x1
0x152f9: je 0x1523c
0x152ff: test r12,r12
0x15302: je 0x143c5
0x15308: js 0x143c5
0x1530e: test rax,rax
0x15311: jne 0x143c5
0x15317: cmp rbx,-0x1
0x1531b: je 0x143c5
0x15321: mov r12,rbx
0x15324: jmp 0x15208
0x15329: js 0x143c5
0x1532f: add r12,r12
0x15332: cmp r12,rbx
0x15335: jae 0x15208
0x1533b: jmp 0x1530e
0x15340: mov r15,rcx
0x15343: jmp 0x1523c
0x15357: call 0x2b30
0x1535c: cmp r12,-0x1
0x15360: mov edx,0x1
0x15365: je 0x1474b
0x1536b: test r12,r12
0x1536e: je 0x143c5
0x15374: jns 0x14f40
0x1537a: jmp 0x143c5
0x15380: push r12
0x15382: push rbp
0x15383: mov rbp,rsi
0x15386: push rbx
0x15387: call 0x2f90
0x1538c: test rax,rax
0x1538f: mov rbx,rax
0x15392: je 0x153a1
0x15394: mov rdi,rax
0x15397: call 0x2db0
0x1539c: cmp eax,0x2
0x1539f: jbe 0x153b0
0x153a1: mov rax,rbx
0x153a4: pop rbx
0x153a5: pop rbp
0x153a6: pop r12
0x153a8: ret 
0x153b0: mov edi,eax
0x153b2: call 0x13f40
0x153b7: test eax,eax
0x153b9: mov r12d,eax
0x153bc: js 0x153f8
0x153be: mov rdi,rbx
0x153c1: call 0x13f50
0x153c6: test eax,eax
0x153c8: jne 0x153dd
0x153ca: mov rsi,rbp
0x153cd: mov edi,r12d
0x153d0: call 0x2eb0
0x153d5: test rax,rax
0x153d8: mov rbx,rax
0x153db: jne 0x153a1
0x153dd: call 0x2950
0x153e2: mov ebp,dword ptr [rax]
0x153e4: mov rbx,rax
0x153e7: mov edi,r12d
0x153ea: call 0x2c30
0x153ef: mov dword ptr [rbx],ebp
0x153f1: xor ebx,ebx
0x153f3: jmp 0x153a1
0x153f8: call 0x2950
0x153fd: mov r12d,dword ptr [rax]
0x15400: mov rbp,rax
0x15403: mov rdi,rbx
0x15406: call 0x13f50
0x1540b: xor ebx,ebx
0x1540d: mov dword ptr [rbp],r12d
0x15411: jmp 0x153a1
0x15420: cmp qword ptr [rsi],0x0
0x15424: mov rax,qword ptr [rsi+0x8]
0x15428: je 0x1548d
0x1542a: lea r8,[rip+0x3adf]
0x15431: lea r10,[rip+0x3b38]
0x15438: lea r9,[rip+0x3abd]
0x1543f: xor ecx,ecx
0x15441: nop dword ptr [rax]
0x15448: cmp dword ptr [rax],0x16
0x1544b: ja 0x15490
0x1544d: mov edx,dword ptr [rax]
0x1544f: movsxd rdx,dword ptr [r8+rdx*4]
0x15453: add rdx,r8
0x15456: jmp rdx
0x1548d: xor eax,eax
0x1548f: ret 
0x15490: mov eax,0xffffffff
0x15495: ret 
0x15620: push r15
0x15622: push r14
0x15624: lea rcx,[rsi+0x20]
0x15628: push r13
0x1562a: push r12
0x1562c: lea rax,[rdx+0x10]
0x15630: push rbp
0x15631: push rbx
0x15632: mov r14,rsi
0x15635: mov r15,rdx
0x15638: xor ebx,ebx
0x1563a: mov r9d,0x7
0x15640: sub rsp,0x58
0x15644: mov r10d,0x7
0x1564a: mov qword ptr [rsi],0x0
0x15651: mov qword ptr [rsi+0x8],rcx
0x15655: mov qword ptr [rsp+0x28],rcx
0x1565a: mov r8,-0x1
0x15661: mov qword ptr [rdx],0x0
0x15668: mov qword ptr [rsp+0x8],rax
0x1566d: mov qword ptr [rdx+0x8],rax
0x15671: mov qword ptr [rsp+0x18],0x0
0x1567a: mov qword ptr [rsp+0x10],0x0
0x15683: mov qword ptr [rsp+0x20],0x0
0x1568c: jmp 0x1569b
0x15690: cmp al,0x25
0x15692: lea rbp,[rdi+0x1]
0x15696: je 0x156d8
0x15698: mov rdi,rbp
0x1569b: movzx eax,byte ptr [rdi]
0x1569e: test al,al
0x156a0: jne 0x15690
0x156a2: lea rax,[rbx+rbx*4]
0x156a6: lea rax,[rbx+rax*2]
0x156aa: mov qword ptr [rcx+rax*8],rdi
0x156ae: mov rax,qword ptr [rsp+0x10]
0x156b3: mov qword ptr [r14+0x10],rax
0x156b7: mov rax,qword ptr [rsp+0x18]
0x156bc: mov qword ptr [r14+0x18],rax
0x156c0: xor eax,eax
0x156c2: add rsp,0x58
0x156c6: pop rbx
0x156c7: pop rbp
0x156c8: pop r12
0x156ca: pop r13
0x156cc: pop r14
0x156ce: pop r15
0x156d0: ret 
0x156d8: lea rax,[rbx+rbx*4]
0x156dc: mov r13,r8
0x156df: lea rax,[rbx+rax*2]
0x156e3: lea r12,[rcx+rax*8]
0x156e7: mov qword ptr [r12],rdi
0x156eb: mov dword ptr [r12+0x10],0x0
0x156f4: mov qword ptr [r12+0x18],0x0
0x156fd: mov qword ptr [r12+0x20],0x0
0x15706: mov qword ptr [r12+0x28],r8
0x1570b: mov qword ptr [r12+0x30],0x0
0x15714: mov qword ptr [r12+0x38],0x0
0x1571d: mov qword ptr [r12+0x40],r8
0x15722: mov qword ptr [r12+0x50],r8
0x15727: movzx ebx,byte ptr [rdi+0x1]
0x1572b: lea eax,[rbx-0x30]
0x1572e: cmp al,0x9
0x15730: ja 0x1576e
0x15732: jmp 0x15b6a
0x15740: cmp bl,0x2d
0x15743: je 0x15788
0x15745: cmp bl,0x2b
0x15748: je 0x15790
0x1574a: cmp bl,0x20
0x1574d: je 0x157a0
0x1574f: cmp bl,0x23
0x15752: je 0x157b0
0x15754: cmp bl,0x30
0x15757: je 0x157c0
0x15759: cmp bl,0x49
0x1575c: jne 0x157d0
0x1575e: or dword ptr [r12+0x10],0x40
0x15764: nop dword ptr [rax]
0x15768: movzx ebx,byte ptr [rax]
0x1576b: mov rbp,rax
0x1576e: lea rax,[rbp+0x1]
0x15772: cmp bl,0x27
0x15775: mov rdx,rax
0x15778: jne 0x15740
0x1577a: or dword ptr [r12+0x10],0x1
0x15780: jmp 0x15768
0x15788: or dword ptr [r12+0x10],0x2
0x1578e: jmp 0x15768
0x15790: or dword ptr [r12+0x10],0x4
0x15796: jmp 0x15768
0x157a0: or dword ptr [r12+0x10],0x8
0x157a6: jmp 0x15768
0x157b0: or dword ptr [r12+0x10],0x10
0x157b6: jmp 0x15768
0x157c0: or dword ptr [r12+0x10],0x20
0x157c6: jmp 0x15768
0x157d0: cmp bl,0x2a
0x157d3: je 0x15989
0x157d9: lea ecx,[rbx-0x30]
0x157dc: cmp cl,0x9
0x157df: jbe 0x15bf7
0x157e5: cmp bl,0x2e
0x157e8: je 0x15abf
0x157ee: xor eax,eax
0x157f0: mov esi,0x1
0x157f5: jmp 0x15827
0x15800: cmp bl,0x4c
0x15803: je 0x15840
0x15805: cmp bl,0x6c
0x15808: je 0x15820
0x1580a: cmp bl,0x6a
0x1580d: je 0x15820
0x1580f: mov edx,ebx
0x15811: and edx,-0x21
0x15814: cmp dl,0x5a
0x15817: je 0x15820
0x15819: cmp bl,0x74
0x1581c: jne 0x15848
0x1581e: nop 
0x15820: add eax,0x8
0x15823: movzx ebx,byte ptr [rbp]
0x15827: add rbp,0x1
0x1582b: cmp bl,0x68
0x1582e: jne 0x15800
0x15830: mov ecx,eax
0x15832: mov edx,esi
0x15834: and ecx,0x1
0x15837: shl edx,cl
0x15839: or eax,edx
0x1583b: jmp 0x15823
0x15840: or eax,0x4
0x15843: jmp 0x15823
0x15848: lea edx,[rbx-0x25]
0x1584b: cmp dl,0x53
0x1584e: ja 0x15e6b
0x15854: lea rcx,[rip+0x3731]
0x1585b: movzx edx,dl
0x1585e: movsxd rdx,dword ptr [rcx+rdx*4]
0x15862: add rdx,rcx
0x15865: jmp rdx
0x15989: mov rsi,qword ptr [rsp+0x10]
0x1598e: mov ecx,0x1
0x15993: mov qword ptr [r12+0x18],rbp
0x15998: mov qword ptr [r12+0x20],rax
0x1599d: test rsi,rsi
0x159a0: cmovne rcx,rsi
0x159a4: mov qword ptr [rsp+0x10],rcx
0x159a9: movzx ecx,byte ptr [rbp+0x1]
0x159ad: lea esi,[rcx-0x30]
0x159b0: cmp sil,0x9
0x159b4: jbe 0x15c95
0x159ba: mov rsi,qword ptr [rsp+0x20]
0x159bf: cmp rsi,-0x1
0x159c3: lea rdx,[rsi+0x1]
0x159c7: mov qword ptr [r12+0x28],rsi
0x159cc: je 0x15e6b
0x159d2: mov rbx,qword ptr [rsp+0x20]
0x159d7: mov rbp,rax
0x159da: mov qword ptr [rsp+0x20],rdx
0x159df: cmp r9,rbx
0x159e2: mov rcx,qword ptr [r15+0x8]
0x159e6: ja 0x16062
0x159ec: add r9,r9
0x159ef: lea rax,[rbx+0x1]
0x159f3: cmp r9,rbx
0x159f6: cmovbe r9,rax
0x159fa: movabsq rax,0x7ffffffffffffff
0x15a04: cmp r9,rax
0x15a07: ja 0x162ab
0x15a0d: mov rsi,r9
0x15a10: mov qword ptr [rsp+0x40],r9
0x15a15: mov qword ptr [rsp+0x38],r10
0x15a1a: shl rsi,0x5
0x15a1e: cmp qword ptr [rsp+0x8],rcx
0x15a23: mov qword ptr [rsp+0x30],r8
0x15a28: je 0x16141
0x15a2e: mov rdi,rcx
0x15a31: call 0x2e90
0x15a36: mov rdx,qword ptr [r15+0x8]
0x15a3a: mov r8,qword ptr [rsp+0x30]
0x15a3f: mov rcx,rax
0x15a42: mov r10,qword ptr [rsp+0x38]
0x15a47: mov r9,qword ptr [rsp+0x40]
0x15a4c: test rcx,rcx
0x15a4f: je 0x16307
0x15a55: cmp qword ptr [rsp+0x8],rdx
0x15a5a: mov rax,qword ptr [r15]
0x15a5d: je 0x1621b
0x15a63: mov qword ptr [r15+0x8],rcx
0x15a67: mov rdx,rax
0x15a6a: shl rdx,0x5
0x15a6e: add rdx,rcx
0x15a71: cmp rax,rbx
0x15a74: ja 0x15a96
0x15a76: nop word ptr cs:[rax+rax]
0x15a80: add rax,0x1
0x15a84: mov dword ptr [rdx],0x0
0x15a8a: add rdx,0x20
0x15a8e: cmp rax,rbx
0x15a91: jbe 0x15a80
0x15a93: mov qword ptr [r15],rax
0x15a96: shl rbx,0x5
0x15a9a: lea rax,[rcx+rbx]
0x15a9e: mov edx,dword ptr [rax]
0x15aa0: test edx,edx
0x15aa2: jne 0x15f7b
0x15aa8: mov dword ptr [rax],0x5
0x15aae: movzx ebx,byte ptr [rbp]
0x15ab2: lea rdx,[rbp+0x1]
0x15ab6: cmp bl,0x2e
0x15ab9: jne 0x157ee
0x15abf: cmp byte ptr [rbp+0x1],0x2a
0x15ac3: mov qword ptr [r12+0x30],rbp
0x15ac8: jne 0x15c4e
0x15ace: mov rsi,qword ptr [rsp+0x18]
0x15ad3: lea r11,[rbp+0x2]
0x15ad7: mov eax,0x2
0x15adc: mov qword ptr [r12+0x38],r11
0x15ae1: cmp rsi,0x2
0x15ae5: cmovae rax,rsi
0x15ae9: mov qword ptr [rsp+0x18],rax
0x15aee: movsx eax,byte ptr [rbp+0x2]
0x15af2: lea edx,[rax-0x30]
0x15af5: cmp dl,0x9
0x15af8: jbe 0x1618c
0x15afe: mov rbx,qword ptr [r12+0x40]
0x15b03: cmp rbx,-0x1
0x15b07: je 0x16165
0x15b0d: cmp r9,rbx
0x15b10: mov rcx,qword ptr [r15+0x8]
0x15b14: jbe 0x1607f
0x15b1a: mov rax,qword ptr [r15]
0x15b1d: mov rdx,rax
0x15b20: shl rdx,0x5
0x15b24: add rdx,rcx
0x15b27: cmp rax,rbx
0x15b2a: ja 0x15b46
0x15b2c: nop dword ptr [rax]
0x15b30: add rax,0x1
0x15b34: mov dword ptr [rdx],0x0
0x15b3a: add rdx,0x20
0x15b3e: cmp rax,rbx
0x15b41: jbe 0x15b30
0x15b43: mov qword ptr [r15],rax
0x15b46: shl rbx,0x5
0x15b4a: lea rax,[rcx+rbx]
0x15b4e: mov edx,dword ptr [rax]
0x15b50: test edx,edx
0x15b52: jne 0x1606a
0x15b58: mov dword ptr [rax],0x5
0x15b5e: mov rbp,r11
0x15b61: movzx ebx,byte ptr [r11]
0x15b65: jmp 0x157ee
0x15b6a: mov rax,rbp
0x15b6d: nop dword ptr [rax]
0x15b70: add rax,0x1
0x15b74: movzx edx,byte ptr [rax]
0x15b77: lea ecx,[rdx-0x30]
0x15b7a: cmp cl,0x9
0x15b7d: jbe 0x15b70
0x15b7f: cmp dl,0x24
0x15b82: mov r13,r8
0x15b85: jne 0x1576e
0x15b8b: xor edx,edx
0x15b8d: movsx eax,bl
0x15b90: movabsq rdi,0x1999999999999999
0x15b9a: mov rsi,r8
0x15b9d: sub eax,0x30
0x15ba0: cmp rdx,rdi
0x15ba3: cltq 
0x15ba5: ja 0x15bae
0x15ba7: lea rsi,[rdx+rdx*4]
0x15bab: add rsi,rsi
0x15bae: mov rcx,rbp
0x15bb1: add rax,rsi
0x15bb4: movzx ebx,byte ptr [rbp+0x1]
0x15bb8: setb sil
0x15bbc: add rbp,0x1
0x15bc0: mov rdx,rax
0x15bc3: movzx esi,sil
0x15bc7: test rsi,rsi
0x15bca: lea edi,[rbx-0x30]
0x15bcd: jne 0x15f5e
0x15bd3: cmp dil,0x9
0x15bd7: jbe 0x15b8d
0x15bd9: mov r13,rax
0x15bdc: sub r13,0x1
0x15be0: cmp r13,-0x3
0x15be4: ja 0x15e6b
0x15bea: lea rbp,[rcx+0x2]
0x15bee: movzx ebx,byte ptr [rcx+0x2]
0x15bf2: jmp 0x1576e
0x15bf7: mov qword ptr [r12+0x18],rbp
0x15bfc: movzx edi,byte ptr [rbp]
0x15c00: mov rsi,rbp
0x15c03: lea ecx,[rdi-0x30]
0x15c06: cmp cl,0x9
0x15c09: jbe 0x15c17
0x15c0b: jmp 0x15c40
0x15c10: mov rbp,rax
0x15c13: add rax,0x1
0x15c17: movzx edi,byte ptr [rax]
0x15c1a: lea edx,[rdi-0x30]
0x15c1d: cmp dl,0x9
0x15c20: jbe 0x15c10
0x15c22: mov rcx,rax
0x15c25: lea rdx,[rbp+0x2]
0x15c29: mov rbp,rax
0x15c2c: sub rcx,rsi
0x15c2f: mov rsi,qword ptr [rsp+0x10]
0x15c34: cmp rsi,rcx
0x15c37: cmovae rcx,rsi
0x15c3b: mov qword ptr [rsp+0x10],rcx
0x15c40: mov qword ptr [r12+0x20],rbp
0x15c45: movzx ebx,byte ptr [rbp]
0x15c49: jmp 0x157e5
0x15c4e: movzx eax,byte ptr [rbp+0x1]
0x15c52: sub eax,0x30
0x15c55: cmp al,0x9
0x15c57: ja 0x15c6e
0x15c59: nop dword ptr [rax]
0x15c60: add rdx,0x1
0x15c64: movzx eax,byte ptr [rdx]
0x15c67: sub eax,0x30
0x15c6a: cmp al,0x9
0x15c6c: jbe 0x15c60
0x15c6e: mov rsi,qword ptr [rsp+0x18]
0x15c73: mov rax,rdx
0x15c76: mov qword ptr [r12+0x38],rdx
0x15c7b: sub rax,rbp
0x15c7e: movzx ebx,byte ptr [rdx]
0x15c81: mov rbp,rdx
0x15c84: cmp rsi,rax
0x15c87: cmovae rax,rsi
0x15c8b: mov qword ptr [rsp+0x18],rax
0x15c90: jmp 0x157ee
0x15c95: mov rsi,rax
0x15c98: add rsi,0x1
0x15c9c: movzx edi,byte ptr [rsi]
0x15c9f: lea r11d,[rdi-0x30]
0x15ca3: cmp r11b,0x9
0x15ca7: jbe 0x15c98
0x15ca9: cmp dil,0x24
0x15cad: jne 0x159ba
0x15cb3: xor esi,esi
0x15cb5: movsx eax,cl
0x15cb8: movabsq rdi,0x1999999999999999
0x15cc2: mov rcx,r8
0x15cc5: sub eax,0x30
0x15cc8: cmp rsi,rdi
0x15ccb: cltq 
0x15ccd: ja 0x15cd6
0x15ccf: lea rcx,[rsi+rsi*4]
0x15cd3: add rcx,rcx
0x15cd6: mov rbp,rdx
0x15cd9: xor r11d,r11d
0x15cdc: add rax,rcx
0x15cdf: movzx ecx,byte ptr [rdx+0x1]
0x15ce3: setb r11b
0x15ce7: add rdx,0x1
0x15ceb: mov rsi,rax
0x15cee: test r11,r11
0x15cf1: lea edi,[rcx-0x30]
0x15cf4: jne 0x161fe
0x15cfa: cmp dil,0x9
0x15cfe: jbe 0x15cb5
0x15d00: lea rbx,[rax-0x1]
0x15d04: cmp rbx,-0x3
0x15d08: ja 0x15e6b
0x15d0e: mov qword ptr [r12+0x28],rbx
0x15d13: add rbp,0x2
0x15d17: jmp 0x159df
0x15e6b: mov rcx,qword ptr [r15+0x8]
0x15e6f: cmp qword ptr [rsp+0x8],rcx
0x15e74: je 0x15e7e
0x15e76: mov rdi,rcx
0x15e79: call 0x30d0
0x15e7e: mov rdi,qword ptr [r14+0x8]
0x15e82: cmp qword ptr [rsp+0x28],rdi
0x15e87: je 0x15e8e
0x15e89: call 0x30d0
0x15e8e: call 0x2950
0x15e93: mov dword ptr [rax],0x16
0x15e99: mov eax,0xffffffff
0x15e9e: jmp 0x156c2
0x15f5e: cmp dil,0x9
0x15f62: ja 0x15e6b
0x15f68: movsx eax,bl
0x15f6b: mov rsi,r8
0x15f6e: mov rcx,rbp
0x15f71: sub eax,0x30
0x15f74: cltq 
0x15f76: jmp 0x15bb1
0x15f7b: cmp edx,0x5
0x15f7e: jne 0x15e6f
0x15f84: movzx ebx,byte ptr [rbp]
0x15f88: lea rdx,[rbp+0x1]
0x15f8c: jmp 0x157e5
0x16062: mov rax,qword ptr [r15]
0x16065: jmp 0x15a67
0x1606a: cmp edx,0x5
0x1606d: jne 0x15e6f
0x16073: movzx ebx,byte ptr [r11]
0x16077: mov rbp,r11
0x1607a: jmp 0x157ee
0x1607f: add r9,r9
0x16082: lea rax,[rbx+0x1]
0x16086: cmp r9,rbx
0x16089: cmovbe r9,rax
0x1608d: movabsq rax,0x7ffffffffffffff
0x16097: cmp r9,rax
0x1609a: ja 0x162ab
0x160a0: mov rsi,r9
0x160a3: mov qword ptr [rsp+0x48],r9
0x160a8: mov qword ptr [rsp+0x40],r10
0x160ad: shl rsi,0x5
0x160b1: cmp qword ptr [rsp+0x8],rcx
0x160b6: mov qword ptr [rsp+0x38],r8
0x160bb: mov qword ptr [rsp+0x30],r11
0x160c0: je 0x1627e
0x160c6: mov rdi,rcx
0x160c9: call 0x2e90
0x160ce: mov rdx,qword ptr [r15+0x8]
0x160d2: mov r11,qword ptr [rsp+0x30]
0x160d7: mov rcx,rax
0x160da: mov r8,qword ptr [rsp+0x38]
0x160df: mov r10,qword ptr [rsp+0x40]
0x160e4: mov r9,qword ptr [rsp+0x48]
0x160e9: test rcx,rcx
0x160ec: je 0x16307
0x160f2: cmp qword ptr [rsp+0x8],rdx
0x160f7: mov rax,qword ptr [r15]
0x160fa: je 0x162c0
0x16100: mov qword ptr [r15+0x8],rcx
0x16104: jmp 0x15b1d
0x16114: mov rdi,rcx
0x16117: call 0x30d0
0x1611c: mov rdi,qword ptr [r14+0x8]
0x16120: cmp qword ptr [rsp+0x28],rdi
0x16125: je 0x1612c
0x16127: call 0x30d0
0x1612c: call 0x2950
0x16131: mov dword ptr [rax],0xc
0x16137: mov eax,0xffffffff
0x1613c: jmp 0x156c2
0x16141: mov rdi,rsi
0x16144: call 0x2df0
0x16149: mov rdx,qword ptr [rsp+0x8]
0x1614e: mov rcx,rax
0x16151: mov r9,qword ptr [rsp+0x40]
0x16156: mov r10,qword ptr [rsp+0x38]
0x1615b: mov r8,qword ptr [rsp+0x30]
0x16160: jmp 0x15a4c
0x16165: mov rsi,qword ptr [rsp+0x20]
0x1616a: cmp rsi,-0x1
0x1616e: lea rax,[rsi+0x1]
0x16172: mov qword ptr [r12+0x40],rsi
0x16177: je 0x15e6b
0x1617d: mov rbx,qword ptr [rsp+0x20]
0x16182: mov qword ptr [rsp+0x20],rax
0x16187: jmp 0x15b0d
0x1618c: mov rdx,r11
0x1618f: add rdx,0x1
0x16193: movzx ecx,byte ptr [rdx]
0x16196: lea esi,[rcx-0x30]
0x16199: cmp sil,0x9
0x1619d: jbe 0x1618f
0x1619f: cmp cl,0x24
0x161a2: jne 0x15afe
0x161a8: xor ecx,ecx
0x161aa: movabsq rsi,0x1999999999999999
0x161b4: sub eax,0x30
0x161b7: mov rdx,r8
0x161ba: cmp rcx,rsi
0x161bd: cltq 
0x161bf: ja 0x161c8
0x161c1: lea rdx,[rcx+rcx*4]
0x161c5: add rdx,rdx
0x161c8: mov rsi,r11
0x161cb: xor ebx,ebx
0x161cd: add rdx,rax
0x161d0: movsx eax,byte ptr [r11+0x1]
0x161d5: setb bl
0x161d8: add r11,0x1
0x161dc: mov rcx,rdx
0x161df: test rbx,rbx
0x161e2: lea edi,[rax-0x30]
0x161e5: je 0x16258
0x161e7: cmp dil,0x9
0x161eb: ja 0x15e6b
0x161f1: sub eax,0x30
0x161f4: mov rdx,r8
0x161f7: mov rsi,r11
0x161fa: cltq 
0x161fc: jmp 0x161cb
0x161fe: cmp dil,0x9
0x16202: ja 0x15e6b
0x16208: movsx eax,cl
0x1620b: mov rbp,rdx
0x1620e: mov rcx,r8
0x16211: sub eax,0x30
0x16214: cltq 
0x16216: jmp 0x15cd9
0x1621b: mov rsi,qword ptr [rsp+0x8]
0x16220: shl rax,0x5
0x16224: mov rdi,rcx
0x16227: mov rdx,rax
0x1622a: mov qword ptr [rsp+0x40],r9
0x1622f: mov qword ptr [rsp+0x38],r10
0x16234: mov qword ptr [rsp+0x30],r8
0x16239: call 0x2d80
0x1623e: mov r9,qword ptr [rsp+0x40]
0x16243: mov rcx,rax
0x16246: mov r10,qword ptr [rsp+0x38]
0x1624b: mov rax,qword ptr [r15]
0x1624e: mov r8,qword ptr [rsp+0x30]
0x16253: jmp 0x15a63
0x16258: cmp dil,0x9
0x1625c: jbe 0x161aa
0x16262: lea rbx,[rdx-0x1]
0x16266: cmp rbx,-0x3
0x1626a: ja 0x15e6b
0x16270: mov qword ptr [r12+0x40],rbx
0x16275: lea r11,[rsi+0x2]
0x16279: jmp 0x15b0d
0x1627e: mov rdi,rsi
0x16281: call 0x2df0
0x16286: mov rdx,qword ptr [rsp+0x8]
0x1628b: mov rcx,rax
0x1628e: mov r9,qword ptr [rsp+0x48]
0x16293: mov r10,qword ptr [rsp+0x40]
0x16298: mov r8,qword ptr [rsp+0x38]
0x1629d: mov r11,qword ptr [rsp+0x30]
0x162a2: jmp 0x160e9
0x162ab: cmp qword ptr [rsp+0x8],rcx
0x162b0: jne 0x16114
0x162b6: jmp 0x1611c
0x162c0: mov rsi,qword ptr [rsp+0x8]
0x162c5: shl rax,0x5
0x162c9: mov rdi,rcx
0x162cc: mov rdx,rax
0x162cf: mov qword ptr [rsp+0x48],r9
0x162d4: mov qword ptr [rsp+0x40],r10
0x162d9: mov qword ptr [rsp+0x38],r8
0x162de: mov qword ptr [rsp+0x30],r11
0x162e3: call 0x2d80
0x162e8: mov r9,qword ptr [rsp+0x48]
0x162ed: mov rcx,rax
0x162f0: mov r10,qword ptr [rsp+0x40]
0x162f5: mov rax,qword ptr [r15]
0x162f8: mov r8,qword ptr [rsp+0x38]
0x162fd: mov r11,qword ptr [rsp+0x30]
0x16302: jmp 0x16100
0x16307: mov rcx,rdx
0x1630a: jmp 0x162ab
0x16310: push r15
0x16312: push r14
0x16314: mov r15,rdx
0x16317: push r13
0x16319: push r12
0x1631b: lea r12,[rip+0x20638e]
0x16322: push rbp
0x16323: lea rbp,[rip+0x20638e]
0x1632a: push rbx
0x1632b: mov r13d,edi
0x1632e: mov r14,rsi
0x16331: sub rbp,r12
0x16334: sub rsp,0x8
0x16338: sar rbp,0x3
0x1633c: call 0x28c0
0x16341: test rbp,rbp
0x16344: je 0x16366
0x16346: xor ebx,ebx
0x16348: nop dword ptr [rax+rax]
0x16350: mov rdx,r15
0x16353: mov rsi,r14
0x16356: mov edi,r13d
0x16359: call qword ptr [r12+rbx*8]
0x1635d: add rbx,0x1
0x16361: cmp rbp,rbx
0x16364: jne 0x16350
0x16366: add rsp,0x8
0x1636a: pop rbx
0x1636b: pop rbp
0x1636c: pop r12
0x1636e: pop r13
0x16370: pop r14
0x16372: pop r15
0x16374: ret 
0x16380: rep ret 
