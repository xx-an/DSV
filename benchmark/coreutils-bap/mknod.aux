0x13b6: jmp qword ptr [rip+0x206a9c]
0x1400: jmp qword ptr [rip+0x206a7a]
0x1410: jmp qword ptr [rip+0x206a72]
0x1430: jmp qword ptr [rip+0x206a62]
0x1470: jmp qword ptr [rip+0x206a42]
0x14a0: jmp qword ptr [rip+0x206a2a]
0x14b0: jmp qword ptr [rip+0x206a22]
0x14d0: jmp qword ptr [rip+0x206a12]
0x14e0: jmp qword ptr [rip+0x206a0a]
0x1510: jmp qword ptr [rip+0x2069f2]
0x1530: jmp qword ptr [rip+0x2069e2]
0x1560: jmp qword ptr [rip+0x2069ca]
0x1580: jmp qword ptr [rip+0x2069ba]
0x1590: jmp qword ptr [rip+0x2069b2]
0x15b0: jmp qword ptr [rip+0x2069a2]
0x15c0: jmp qword ptr [rip+0x20699a]
0x15d0: jmp qword ptr [rip+0x206992]
0x1630: jmp qword ptr [rip+0x206962]
0x1680: jmp qword ptr [rip+0x20693a]
0x1690: jmp qword ptr [rip+0x206932]
0x16b0: jmp qword ptr [rip+0x206942]
0x17bf: nop 
0x17ef: jmp 0x1732
0x189f: lea rsi,[rip+0x3f19]
0x18a6: xor edi,edi
0x18a8: mov rbx,rax
0x18ab: mov edx,0x5
0x18b0: call 0x1450
0x18b5: xor esi,esi
0x18b7: mov rdx,rax
0x18ba: xor edi,edi
0x18bc: xor eax,eax
0x18be: mov rcx,rbx
0x18c1: call 0x1620
0x18c6: sub ebp,dword ptr [rip+0x2067c4]
0x18cc: mov edx,0x5
0x18d1: lea rsi,[rip+0x4538]
0x18d8: cmp ebp,0x4
0x18db: jne 0x19e9
0x18e1: xor edi,edi
0x18e3: call 0x1450
0x18e8: mov rdi,qword ptr [rip+0x2067d1]
0x18ef: lea rdx,[rip+0x4b5a]
0x18f6: mov rcx,rax
0x18f9: mov esi,0x1
0x18fe: xor eax,eax
0x1900: call 0x1670
0x1905: jmp 0x19e9
0x19c2: lea rsi,[rip+0x3df6]
0x19c9: mov rbx,rax
0x19cc: mov edx,0x5
0x19d1: xor edi,edi
0x19d3: call 0x1450
0x19d8: mov rcx,rbx
0x19db: mov rdx,rax
0x19de: xor esi,esi
0x19e0: xor edi,edi
0x19e2: xor eax,eax
0x19e4: call 0x1620
0x1aeb: mov rbx,rax
0x1aee: call 0x13e0
0x1af3: mov esi,dword ptr [rax]
0x1af5: lea rdx,[rip+0x43a0]
0x1afc: mov rcx,rbx
0x1aff: mov edi,0x1
0x1b04: xor eax,eax
0x1b06: call 0x1620
0x1b28: mov edx,0x5
0x1b2d: mov rbx,rax
0x1b30: lea rsi,[rip+0x3c54]
0x1b37: jmp 0x19d1
0x1b6e: jmp 0x19e9
0x1b7b: lea rsi,[rip+0x42e6]
0x1b82: mov rbx,rax
0x1b85: mov edx,0x5
0x1b8a: xor edi,edi
0x1b8c: call 0x1450
0x1b91: mov rcx,rbx
0x1b94: mov rdx,rax
0x1b97: xor esi,esi
0x1b99: mov edi,0x1
0x1b9e: xor eax,eax
0x1ba0: call 0x1620
0x1bad: lea rsi,[rip+0x4294]
0x1bb4: mov rbx,rax
0x1bb7: mov edx,0x5
0x1bbc: xor edi,edi
0x1bbe: call 0x1450
0x1bc3: mov rcx,rbx
0x1bc6: mov rdx,rax
0x1bc9: xor esi,esi
0x1bcb: mov edi,0x1
0x1bd0: xor eax,eax
0x1bd2: call 0x1620
0x1c0b: mov edx,0x5
0x1c10: mov rbx,rax
0x1c13: lea rsi,[rip+0x3bb6]
0x1c1a: jmp 0x19d1
0x1c36: mov rbx,rax
0x1c39: call 0x13e0
0x1c3e: mov esi,dword ptr [rax]
0x1c40: lea rdx,[rip+0x4255]
0x1c47: mov rcx,rbx
0x1c4a: mov edi,0x1
0x1c4f: xor eax,eax
0x1c51: call 0x1620
0x1c6b: lea rsi,[rip+0x3b30]
0x1c72: mov edx,0x5
0x1c77: xor edi,edi
0x1c79: mov rbp,rax
0x1c7c: call 0x1450
0x1c81: mov rbx,rax
0x1c84: call 0x13e0
0x1c89: mov esi,dword ptr [rax]
0x1c8b: mov rcx,rbp
0x1c8e: mov rdx,rbx
0x1c91: mov edi,0x1
0x1c96: xor eax,eax
0x1c98: call 0x1620
0x1caa: lea rsi,[rip+0x3b1f]
0x1cb1: xor edi,edi
0x1cb3: mov rbx,rax
0x1cb6: mov edx,0x5
0x1cbb: call 0x1450
0x1cc0: xor esi,esi
0x1cc2: mov rdx,rax
0x1cc5: xor edi,edi
0x1cc7: xor eax,eax
0x1cc9: mov rcx,rbx
0x1ccc: call 0x1620
0x1cd1: sub ebp,dword ptr [rip+0x2063b9]
0x1cd7: cmp ebp,0x2
0x1cda: jne 0x19e9
0x1ce0: mov edx,0x5
0x1ce5: lea rsi,[rip+0x40ec]
0x1cec: jmp 0x18e1
0x1d3e: nop 
0x1d6a: hlt 
0x1d6b: nop dword ptr [rax+rax]
0x1d70: lea rdi,[rip+0x206309]
0x1d77: push rbp
0x1d78: lea rax,[rip+0x206301]
0x1d7f: cmp rax,rdi
0x1d82: mov rbp,rsp
0x1d85: je 0x1da0
0x1d87: mov rax,qword ptr [rip+0x20624a]
0x1d88: mov eax,dword ptr [rip+0x20624a]
0x1d8e: test rax,rax
0x1d91: je 0x1da0
0x1d93: pop rbp
0x1d94: jmp rax
0x1da0: pop rbp
0x1da1: ret 
0x1db0: lea rdi,[rip+0x2062c9]
0x1db7: lea rsi,[rip+0x2062c2]
0x1dbe: push rbp
0x1dbf: sub rsi,rdi
0x1dc2: mov rbp,rsp
0x1dc5: sar rsi,0x3
0x1dc9: mov rax,rsi
0x1dcc: shr rax,0x3f
0x1dd0: add rsi,rax
0x1dd3: sar rsi, 1
0x1dd6: je 0x1df0
0x1dd8: mov rax,qword ptr [rip+0x206211]
0x1ddf: test rax,rax
0x1de2: je 0x1df0
0x1de4: pop rbp
0x1de5: jmp rax
0x1df0: pop rbp
0x1df1: ret 
0x1e11: push rbp
0x1e12: mov rbp,rsp
0x1e15: je 0x1e23
0x1e17: mov rdi,qword ptr [rip+0x2061ea]
0x1e1e: call 0x16b0
0x1e23: call 0x1d70
0x1e28: mov byte ptr [rip+0x206299],0x1
0x1e2f: pop rbp
0x1e30: ret 
0x1e40: push rbp
0x1e41: mov rbp,rsp
0x1e44: pop rbp
0x1e45: jmp 0x1db0
0x2280: mov qword ptr [rip+0x205e51],rdi
0x2287: ret 
0x2290: mov byte ptr [rip+0x205e39],dil
0x2297: ret 
0x22a0: push rbp
0x22a1: push rbx
0x22a2: sub rsp,0x8
0x22a6: mov rdi,qword ptr [rip+0x205ddb]
0x22ad: call 0x5390
0x22b2: test eax,eax
0x22b4: je 0x22cc
0x22b6: call 0x13e0
0x22bb: cmp byte ptr [rip+0x205e0e],0x0
0x22c2: mov rbx,rax
0x22c5: je 0x22e3
0x22c7: cmp dword ptr [rax],0x20
0x22ca: jne 0x22e3
0x22cc: mov rdi,qword ptr [rip+0x205ded]
0x22d3: call 0x5390
0x22d8: test eax,eax
0x22da: jne 0x2322
0x22dc: add rsp,0x8
0x22e0: pop rbx
0x22e1: pop rbp
0x22e2: ret 
0x22e3: lea rsi,[rip+0x3ba2]
0x22ea: xor edi,edi
0x22ec: mov edx,0x5
0x22f1: call 0x1450
0x22f6: mov rdi,qword ptr [rip+0x205ddb]
0x22fd: mov rbp,rax
0x2300: test rdi,rdi
0x2303: je 0x232d
0x2305: call 0x4410
0x230a: mov esi,dword ptr [rbx]
0x230c: lea rdx,[rip+0x3b85]
0x2313: mov rcx,rax
0x2316: mov r8,rbp
0x2319: xor edi,edi
0x231b: xor eax,eax
0x231d: call 0x1620
0x2322: mov edi,dword ptr [rip+0x205cf0]
0x2328: call 0x1400
0x232d: mov esi,dword ptr [rbx]
0x232f: lea rdx,[rip+0x3b66]
0x2336: mov rcx,rax
0x2339: xor edi,edi
0x233b: xor eax,eax
0x233d: call 0x1620
0x2342: jmp 0x2322
0x26ce: nop 
0x2700: push rbx
0x2701: mov rsi,rdi
0x2704: mov edi,0x1
0x2709: sub rsp,0xa0
0x2710: mov rdx,rsp
0x2713: mov rax,qword ptr fs:0x28
0x271c: mov qword ptr [rsp+0x98],rax
0x2724: xor eax,eax
0x2726: call 0x1590
0x272b: test eax,eax
0x272d: jne 0x2780
0x272f: mov ebx,dword ptr [rsp+0x18]
0x2733: mov edi,0x20
0x2738: call 0x4c50
0x273d: mov edx,0x13d
0x2742: mov dword ptr [rax+0x4],0xfff
0x2749: mov dword ptr [rax+0xc],0xfff
0x2750: mov word ptr [rax],dx
0x2753: mov dword ptr [rax+0x8],ebx
0x2756: mov byte ptr [rax+0x11],0x0
0x275a: mov rcx,qword ptr [rsp+0x98]
0x2762: xor rcx,qword ptr fs:0x28
0x276b: jne 0x2784
0x276d: add rsp,0xa0
0x2774: pop rbx
0x2775: ret 
0x2780: xor eax,eax
0x2782: jmp 0x275a
0x2784: call 0x1480
0x2789: nop dword ptr [rax]
0x28b1: mov dword ptr [r8],r11d
0x28f8: mov dword ptr [r8],r11d
0x299f: nop 
0x29a0: push rbp
0x29a1: push rbx
0x29a2: mov rbp,rdi
0x29a5: mov ebx,esi
0x29a7: sub rsp,0x8
0x29ab: call 0x5470
0x29b0: movzx edx,byte ptr [rax]
0x29b3: and edx,-0x21
0x29b6: cmp dl,0x55
0x29b9: je 0x2a30
0x29bb: cmp dl,0x47
0x29be: je 0x29e0
0x29c0: lea rax,[rip+0x35b4]
0x29c7: lea rdx,[rip+0x35af]
0x29ce: cmp ebx,0x9
0x29d1: cmovne rax,rdx
0x29d5: add rsp,0x8
0x29d9: pop rbx
0x29da: pop rbp
0x29db: ret 
0x29e0: movzx edx,byte ptr [rax+0x1]
0x29e4: and edx,-0x21
0x29e7: cmp dl,0x42
0x29ea: jne 0x29c0
0x29ec: cmp byte ptr [rax+0x2],0x31
0x29f0: jne 0x29c0
0x29f2: cmp byte ptr [rax+0x3],0x38
0x29f6: jne 0x29c0
0x29f8: cmp byte ptr [rax+0x4],0x30
0x29fc: jne 0x29c0
0x29fe: cmp byte ptr [rax+0x5],0x33
0x2a02: jne 0x29c0
0x2a04: cmp byte ptr [rax+0x6],0x30
0x2a08: jne 0x29c0
0x2a0a: cmp byte ptr [rax+0x7],0x0
0x2a0e: jne 0x29c0
0x2a10: cmp byte ptr [rbp],0x60
0x2a14: lea rax,[rip+0x3559]
0x2a1b: lea rdx,[rip+0x3556]
0x2a22: cmovne rax,rdx
0x2a26: add rsp,0x8
0x2a2a: pop rbx
0x2a2b: pop rbp
0x2a2c: ret 
0x2a30: movzx edx,byte ptr [rax+0x1]
0x2a34: and edx,-0x21
0x2a37: cmp dl,0x54
0x2a3a: jne 0x29c0
0x2a3c: movzx edx,byte ptr [rax+0x2]
0x2a40: and edx,-0x21
0x2a43: cmp dl,0x46
0x2a46: jne 0x29c0
0x2a4c: cmp byte ptr [rax+0x3],0x2d
0x2a50: jne 0x29c0
0x2a56: cmp byte ptr [rax+0x4],0x38
0x2a5a: jne 0x29c0
0x2a60: cmp byte ptr [rax+0x5],0x0
0x2a64: jne 0x29c0
0x2a6a: cmp byte ptr [rbp],0x60
0x2a6e: lea rax,[rip+0x34f7]
0x2a75: lea rdx,[rip+0x34f4]
0x2a7c: cmovne rax,rdx
0x2a80: add rsp,0x8
0x2a84: pop rbx
0x2a85: pop rbp
0x2a86: ret 
0x2b63: xor r11d,r11d
0x2b66: mov rax,rbp
0x2b69: mov r8d,r12d
0x2b6c: mov rbp,r11
0x2b6f: mov r11,rax
0x2b72: nop word ptr [rax+rax]
0x2b78: cmp r11,rbp
0x2b7b: setne r12b
0x2b7f: cmp r11,-0x1
0x2b83: jne 0x2b92
0x2b85: mov rax,qword ptr [rsp+0x10]
0x2b8a: cmp byte ptr [rax+rbp],0x0
0x2b8e: setne r12b
0x2b92: test r12b,r12b
0x2b95: je 0x31f0
0x2b9b: cmp dword ptr [rsp+0x8],0x2
0x2ba0: mov rdi,qword ptr [rsp+0x10]
0x2ba5: lea r9,[rdi+rbp]
0x2ba9: setne al
0x2bac: and al,byte ptr [rsp+0xd]
0x2bb0: mov r10d,eax
0x2bb3: je 0x2c60
0x2bb9: mov rax,qword ptr [rsp+0x18]
0x2bbe: test rax,rax
0x2bc1: je 0x2ff0
0x2bc7: cmp r11,-0x1
0x2bcb: lea rbx,[rbp+rax]
0x2bd0: jne 0x2c00
0x2bd2: cmp rax,0x1
0x2bd6: jbe 0x2c00
0x2bd8: mov byte ptr [rsp+0x38],r8b
0x2bdd: mov byte ptr [rsp+0x30],r10b
0x2be2: mov qword ptr [rsp+0x28],r9
0x2be7: call 0x1470
0x2bec: movzx r8d,byte ptr [rsp+0x38]
0x2bf2: movzx r10d,byte ptr [rsp+0x30]
0x2bf8: mov r11,rax
0x2bfb: mov r9,qword ptr [rsp+0x28]
0x2c00: cmp rbx,r11
0x2c03: mov byte ptr [rsp+0x28],r10b
0x2c08: ja 0x31c0
0x2c0e: mov rdx,qword ptr [rsp+0x18]
0x2c13: mov rsi,qword ptr [rsp+0x48]
0x2c18: mov rdi,r9
0x2c1b: mov qword ptr [rsp+0x40],r11
0x2c20: mov byte ptr [rsp+0x38],r8b
0x2c25: mov qword ptr [rsp+0x30],r9
0x2c2a: call 0x1510
0x2c2f: test eax,eax
0x2c31: mov r9,qword ptr [rsp+0x30]
0x2c36: movzx r8d,byte ptr [rsp+0x38]
0x2c3c: mov r11,qword ptr [rsp+0x40]
0x2c41: jne 0x31c0
0x2c47: cmp byte ptr [rsp+0xf],0x0
0x2c4c: movzx r10d,byte ptr [rsp+0x28]
0x2c52: jne 0x3bd5
0x2c58: nop dword ptr [rax+rax]
0x2c60: movzx ebx,byte ptr [r9]
0x2c64: cmp bl,0x7e
0x2c67: ja 0x2f88
0x2c6d: lea rcx,[rip+0x3398]
0x2c74: movzx edx,bl
0x2c77: movsxd rax,dword ptr [rcx+rdx*4]
0x2c7b: add rax,rcx
0x2c7e: jmp rax
0x2cb8: cmp byte ptr [rsp+0xd],0x1
0x2cbd: jne 0x2dd2
0x2cc3: test dl,dl
0x2cc5: jne 0x2dd2
0x2ccb: mov rsi,qword ptr [rsp+0x20]
0x2cd0: test rsi,rsi
0x2cd3: je 0x2ce9
0x2cd5: mov edx,ebx
0x2cd7: shr dl,0x5
0x2cda: movzx edx,dl
0x2cdd: mov edx,dword ptr [rsi+rdx*4]
0x2ce0: btl edx,ebx
0x2ce3: jb 0x2e33
0x2ce9: test r10b,r10b
0x2cec: jne 0x2e33
0x2cf2: xor eax,0x1
0x2cf5: add rbp,0x1
0x2cf9: and eax,r8d
0x2cfc: test al,al
0x2cfe: je 0x2d20
0x2d00: cmp r13,r15
0x2d03: jbe 0x2d0a
0x2d05: mov byte ptr [r14+r15],0x27
0x2d0a: lea rax,[r15+0x1]
0x2d0e: cmp r13,rax
0x2d11: jbe 0x2d19
0x2d13: mov byte ptr [r14+r15+0x1],0x27
0x2d19: add r15,0x2
0x2d1d: xor r8d,r8d
0x2d20: cmp r15,r13
0x2d23: jae 0x2d29
0x2d25: mov byte ptr [r14+r15],bl
0x2d29: movzx edi,byte ptr [rsp+0xe]
0x2d2e: add r15,0x1
0x2d32: mov eax,0x0
0x2d37: test r12b,r12b
0x2d3a: cmove edi,eax
0x2d3d: mov byte ptr [rsp+0xe],dil
0x2d42: jmp 0x2b78
0x2dd2: cmp byte ptr [rsp+0xf],0x0
0x2dd7: jne 0x2ccb
0x2ddd: jmp 0x2ce9
0x2e33: cmp dword ptr [rsp+0x8],0x2
0x2e38: sete dl
0x2e3b: cmp byte ptr [rsp+0xf],0x0
0x2e40: mov eax,edx
0x2e42: jne 0x3698
0x2e48: mov eax,r8d
0x2e4b: xor eax,0x1
0x2e4e: and al,dl
0x2e50: je 0x2e81
0x2e52: cmp r13,r15
0x2e55: jbe 0x2e5c
0x2e57: mov byte ptr [r14+r15],0x27
0x2e5c: lea rdx,[r15+0x1]
0x2e60: cmp r13,rdx
0x2e63: jbe 0x2e6b
0x2e65: mov byte ptr [r14+r15+0x1],0x24
0x2e6b: lea rdx,[r15+0x2]
0x2e6f: cmp r13,rdx
0x2e72: jbe 0x2e7a
0x2e74: mov byte ptr [r14+r15+0x2],0x27
0x2e7a: add r15,0x3
0x2e7e: mov r8d,eax
0x2e81: cmp r13,r15
0x2e84: jbe 0x2e8b
0x2e86: mov byte ptr [r14+r15],0x5c
0x2e8b: add r15,0x1
0x2e8f: add rbp,0x1
0x2e93: jmp 0x2d20
0x2f80: xor r10d,r10d
0x2f83: nop dword ptr [rax+rax]
0x2f88: cmp qword ptr [rsp+0x58],0x1
0x2f8e: jne 0x3338
0x2f94: mov qword ptr [rsp+0x38],r11
0x2f99: mov byte ptr [rsp+0x30],r8b
0x2f9e: mov byte ptr [rsp+0x28],r10b
0x2fa3: call 0x16a0
0x2fa8: mov rcx,qword ptr [rax]
0x2fab: movzx edx,bl
0x2fae: movzx r10d,byte ptr [rsp+0x28]
0x2fb4: movzx r8d,byte ptr [rsp+0x30]
0x2fba: mov r11,qword ptr [rsp+0x38]
0x2fbf: mov edi,0x1
0x2fc4: movzx eax,word ptr [rcx+rdx*2]
0x2fc8: and ax,0x4000
0x2fcc: setne r12b
0x2fd0: sete al
0x2fd3: and al,byte ptr [rsp+0xd]
0x2fd7: test al,al
0x2fd9: jne 0x3971
0x2fdf: cmp dword ptr [rsp+0x8],0x2
0x2fe4: sete dl
0x2fe7: jmp 0x2cb8
0x2ff0: movzx ebx,byte ptr [r9]
0x2ff4: cmp bl,0x7e
0x2ff7: ja 0x2f80
0x2ff9: lea rcx,[rip+0x3208]
0x3000: movzx edx,bl
0x3003: movsxd rax,dword ptr [rcx+rdx*4]
0x3007: add rax,rcx
0x300a: jmp rax
0x31c0: xor r10d,r10d
0x31c3: jmp 0x2c60
0x31f0: cmp dword ptr [rsp+0x8],0x2
0x31f5: movzx ebx,byte ptr [rsp+0xf]
0x31fa: mov r12d,r8d
0x31fd: mov rbp,r11
0x3200: sete dl
0x3203: mov eax,ebx
0x3205: test r15,r15
0x3208: sete cl
0x320b: and eax,edx
0x320d: and al,cl
0x320f: jne 0x3c76
0x3215: mov eax,ebx
0x3217: xor eax,0x1
0x321a: and dl,al
0x321c: je 0x3b8c
0x3222: cmp byte ptr [rsp+0x7c],0x0
0x3227: je 0x3b8a
0x322d: cmp byte ptr [rsp+0xe],0x0
0x3232: jne 0x3c2d
0x3238: test r13,r13
0x323b: sete al
0x323e: cmp qword ptr [rsp+0x50],0x0
0x3244: setne dl
0x3247: and al,dl
0x3249: je 0x3c6c
0x324f: mov r13,qword ptr [rsp+0x50]
0x3254: lea rbx,[rip+0x2d22]
0x325b: mov byte ptr [r14],0x27
0x325f: mov dword ptr [rsp+0x8],0x2
0x3267: mov r15d,0x1
0x326d: mov qword ptr [rsp+0x18],0x1
0x3276: mov byte ptr [rsp+0xf],0x0
0x327b: mov qword ptr [rsp+0x48],rbx
0x3280: mov byte ptr [rsp+0x7c],al
0x3284: jmp 0x2b63
0x3338: lea rax,[rsp+0xa0]
0x3340: cmp r11,-0x1
0x3344: mov qword ptr [rsp+0xa0],0x0
0x3350: mov qword ptr [rsp+0x28],rax
0x3355: jne 0x3384
0x3357: mov rdi,qword ptr [rsp+0x10]
0x335c: mov byte ptr [rsp+0x40],r8b
0x3361: mov byte ptr [rsp+0x38],r10b
0x3366: mov qword ptr [rsp+0x30],r9
0x336b: call 0x1470
0x3370: movzx r8d,byte ptr [rsp+0x40]
0x3376: movzx r10d,byte ptr [rsp+0x38]
0x337c: mov r11,rax
0x337f: mov r9,qword ptr [rsp+0x30]
0x3384: lea rax,[rsp+0x9c]
0x338c: xor ecx,ecx
0x338e: mov byte ptr [rsp+0x7e],bl
0x3392: mov byte ptr [rsp+0x7d],r8b
0x3397: mov rbx,rcx
0x339a: mov qword ptr [rsp+0x88],r9
0x33a2: mov qword ptr [rsp+0x38],rax
0x33a7: mov byte ptr [rsp+0x7f],r10b
0x33ac: mov qword ptr [rsp+0x80],r15
0x33b4: mov qword ptr [rsp+0x40],r14
0x33b9: mov qword ptr [rsp+0x70],r13
0x33be: mov qword ptr [rsp+0x30],r11
0x33c3: mov rax,qword ptr [rsp+0x10]
0x33c8: lea r14,[rbp+rbx]
0x33cd: mov rdx,qword ptr [rsp+0x30]
0x33d2: mov rcx,qword ptr [rsp+0x28]
0x33d7: mov rdi,qword ptr [rsp+0x38]
0x33dc: lea r13,[rax+r14]
0x33e0: sub rdx,r14
0x33e3: mov rsi,r13
0x33e6: call 0x5300
0x33eb: test rax,rax
0x33ee: mov r15,rax
0x33f1: je 0x3441
0x33f3: cmp rax,-0x1
0x33f7: je 0x3a15
0x33fd: cmp rax,-0x2
0x3401: je 0x39a1
0x3407: cmp dword ptr [rsp+0x8],0x2
0x340c: sete al
0x340f: and al,byte ptr [rsp+0xf]
0x3413: jne 0x35b0
0x3419: mov edi,dword ptr [rsp+0x9c]
0x3420: call 0x1690
0x3425: mov rdi,qword ptr [rsp+0x28]
0x342a: test eax,eax
0x342c: mov eax,0x0
0x3431: cmove r12d,eax
0x3435: add rbx,r15
0x3438: call 0x1680
0x343d: test eax,eax
0x343f: je 0x33c3
0x3441: mov edx,r12d
0x3444: mov rdi,rbx
0x3447: movzx r8d,byte ptr [rsp+0x7d]
0x344d: xor edx,0x1
0x3450: movzx ebx,byte ptr [rsp+0x7e]
0x3455: movzx r10d,byte ptr [rsp+0x7f]
0x345b: and dl,byte ptr [rsp+0xd]
0x345f: mov r15,qword ptr [rsp+0x80]
0x3467: mov r14,qword ptr [rsp+0x40]
0x346c: mov r13,qword ptr [rsp+0x70]
0x3471: mov r11,qword ptr [rsp+0x30]
0x3476: cmp rdi,0x1
0x347a: jbe 0x3a7b
0x3480: mov rcx,rdi
0x3483: xor esi,esi
0x3485: movzx r9d,byte ptr [rsp+0xf]
0x348b: add rcx,rbp
0x348e: mov rdi,qword ptr [rsp+0x10]
0x3493: jmp 0x354e
0x34a0: cmp dword ptr [rsp+0x8],0x2
0x34a5: sete al
0x34a8: test r9b,r9b
0x34ab: jne 0x3960
0x34b1: mov esi,r8d
0x34b4: xor esi,0x1
0x34b7: and al,sil
0x34ba: je 0x34eb
0x34bc: cmp r13,r15
0x34bf: jbe 0x34c6
0x34c1: mov byte ptr [r14+r15],0x27
0x34c6: lea rsi,[r15+0x1]
0x34ca: cmp r13,rsi
0x34cd: jbe 0x34d5
0x34cf: mov byte ptr [r14+r15+0x1],0x24
0x34d5: lea rsi,[r15+0x2]
0x34d9: cmp r13,rsi
0x34dc: jbe 0x34e4
0x34de: mov byte ptr [r14+r15+0x2],0x27
0x34e4: add r15,0x3
0x34e8: mov r8d,eax
0x34eb: cmp r13,r15
0x34ee: jbe 0x34f5
0x34f0: mov byte ptr [r14+r15],0x5c
0x34f5: lea rax,[r15+0x1]
0x34f9: cmp r13,rax
0x34fc: jbe 0x350b
0x34fe: mov eax,ebx
0x3500: shr al,0x6
0x3503: add eax,0x30
0x3506: mov byte ptr [r14+r15+0x1],al
0x350b: lea rax,[r15+0x2]
0x350f: cmp r13,rax
0x3512: jbe 0x3524
0x3514: mov eax,ebx
0x3516: shr al,0x3
0x3519: and eax,0x7
0x351c: add eax,0x30
0x351f: mov byte ptr [r14+r15+0x2],al
0x3524: and ebx,0x7
0x3527: add rbp,0x1
0x352b: add r15,0x3
0x352f: add ebx,0x30
0x3532: cmp rbp,rcx
0x3535: jae 0x2d20
0x353b: mov esi,edx
0x353d: cmp r13,r15
0x3540: jbe 0x3546
0x3542: mov byte ptr [r14+r15],bl
0x3546: movzx ebx,byte ptr [rdi+rbp]
0x354a: add r15,0x1
0x354e: test dl,dl
0x3550: jne 0x34a0
0x3556: mov eax,esi
0x3558: xor eax,0x1
0x355b: and eax,r8d
0x355e: test r10b,r10b
0x3561: je 0x3571
0x3563: cmp r13,r15
0x3566: jbe 0x356d
0x3568: mov byte ptr [r14+r15],0x5c
0x356d: add r15,0x1
0x3571: add rbp,0x1
0x3575: cmp rbp,rcx
0x3578: jae 0x2cfc
0x357e: test al,al
0x3580: je 0x397e
0x3586: cmp r13,r15
0x3589: jbe 0x3590
0x358b: mov byte ptr [r14+r15],0x27
0x3590: lea rax,[r15+0x1]
0x3594: cmp r13,rax
0x3597: jbe 0x359f
0x3599: mov byte ptr [r14+r15+0x1],0x27
0x359f: add r15,0x2
0x35a3: xor r10d,r10d
0x35a6: xor r8d,r8d
0x35a9: jmp 0x353d
0x35b0: cmp r15,0x1
0x35b4: je 0x3419
0x35ba: mov rdi,qword ptr [rsp+0x10]
0x35bf: lea rcx,[rdi+r15]
0x35c3: lea rdx,[rdi+r14+0x1]
0x35c8: lea r8,[rcx+r14]
0x35cc: jmp 0x35dd
0x35d0: add rdx,0x1
0x35d4: cmp r8,rdx
0x35d7: je 0x3419
0x35dd: movzx ecx,byte ptr [rdx]
0x35e0: sub ecx,0x5b
0x35e3: cmp cl,0x21
0x35e6: ja 0x35d0
0x35e8: mov esi,0x1
0x35ed: shl rsi,cl
0x35f0: mov rcx,rsi
0x35f3: movabsq rsi,0x20000002b
0x35fd: test rcx,rsi
0x3600: je 0x35d0
0x3602: mov r14,qword ptr [rsp+0x40]
0x3607: mov r13,qword ptr [rsp+0x70]
0x360c: mov rbp,qword ptr [rsp+0x30]
0x3611: mov dword ptr [rsp+0x8],0x2
0x3619: cmp byte ptr [rsp+0xd],0x0
0x361e: je 0x3630
0x3620: test al,al
0x3622: mov eax,0x4
0x3627: cmove eax,dword ptr [rsp+0x8]
0x362c: mov dword ptr [rsp+0x8],eax
0x3630: sub rsp,0x8
0x3634: mov rcx,rbp
0x3637: mov rsi,r13
0x363a: push qword ptr [rsp+0x68]
0x363e: push qword ptr [rsp+0x78]
0x3642: mov rdi,r14
0x3645: push 0x0
0x3647: mov r9d,dword ptr [rsp+0x98]
0x364f: mov r8d,dword ptr [rsp+0x28]
0x3654: mov rdx,qword ptr [rsp+0x30]
0x3659: and r9d,-0x3
0x365d: call 0x2a90
0x3662: add rsp,0x20
0x3666: mov r15,rax
0x3669: mov rbx,qword ptr [rsp+0xa8]
0x3671: xor rbx,qword ptr fs:0x28
0x367a: mov rax,r15
0x367d: jne 0x3c83
0x3683: add rsp,0xb8
0x368a: pop rbx
0x368b: pop rbp
0x368c: pop r12
0x368e: pop r13
0x3690: pop r14
0x3692: pop r15
0x3694: ret 
0x3698: mov rbp,r11
0x369b: jmp 0x3619
0x3701: test r13,r13
0x3704: jne 0x3c9a
0x370a: lea rax,[rip+0x286c]
0x3711: mov qword ptr [rsp+0x50],0x0
0x371a: mov byte ptr [rsp+0xe],0x1
0x371f: mov byte ptr [rsp+0x7c],0x0
0x3724: xor r12d,r12d
0x3727: mov byte ptr [rsp+0xf],0x0
0x372c: mov qword ptr [rsp+0x18],0x1
0x3735: mov qword ptr [rsp+0x48],rax
0x373a: mov r15d,0x1
0x3740: mov dword ptr [rsp+0x8],0x2
0x3748: jmp 0x2b63
0x3960: movzx ebx,byte ptr [rsp+0xf]
0x3965: mov rbp,r11
0x3968: mov byte ptr [rsp+0xd],bl
0x396c: jmp 0x3619
0x3971: movzx edx,byte ptr [rsp+0xd]
0x3976: xor r12d,r12d
0x3979: jmp 0x3480
0x397e: xor r10d,r10d
0x3981: jmp 0x353d
0x39a1: mov r11,qword ptr [rsp+0x30]
0x39a6: mov rsi,r14
0x39a9: mov rcx,r13
0x39ac: mov rax,rbx
0x39af: mov rdi,rbx
0x39b2: movzx r8d,byte ptr [rsp+0x7d]
0x39b8: movzx ebx,byte ptr [rsp+0x7e]
0x39bd: mov r9,qword ptr [rsp+0x88]
0x39c5: cmp rsi,r11
0x39c8: movzx r10d,byte ptr [rsp+0x7f]
0x39ce: mov r15,qword ptr [rsp+0x80]
0x39d6: mov r14,qword ptr [rsp+0x40]
0x39db: mov r13,qword ptr [rsp+0x70]
0x39e0: jae 0x3a08
0x39e2: cmp byte ptr [rcx],0x0
0x39e5: jne 0x39f7
0x39e7: jmp 0x3a08
0x39f0: cmp byte ptr [r9+rax],0x0
0x39f5: je 0x3a05
0x39f7: add rax,0x1
0x39fb: lea rdx,[rbp+rax]
0x3a00: cmp r11,rdx
0x3a03: ja 0x39f0
0x3a05: mov rdi,rax
0x3a08: movzx edx,byte ptr [rsp+0xd]
0x3a0d: xor r12d,r12d
0x3a10: jmp 0x3476
0x3a15: mov rdi,rbx
0x3a18: movzx r8d,byte ptr [rsp+0x7d]
0x3a1e: movzx ebx,byte ptr [rsp+0x7e]
0x3a23: movzx r10d,byte ptr [rsp+0x7f]
0x3a29: mov r15,qword ptr [rsp+0x80]
0x3a31: xor r12d,r12d
0x3a34: mov r14,qword ptr [rsp+0x40]
0x3a39: mov r13,qword ptr [rsp+0x70]
0x3a3e: mov r11,qword ptr [rsp+0x30]
0x3a43: movzx edx,byte ptr [rsp+0xd]
0x3a48: jmp 0x3476
0x3a7b: mov eax,edx
0x3a7d: jmp 0x2fd7
0x3b8a: mov eax,edx
0x3b8c: mov rbx,qword ptr [rsp+0x48]
0x3b91: test rbx,rbx
0x3b94: je 0x3bc2
0x3b96: test al,al
0x3b98: je 0x3bc2
0x3b9a: movzx ecx,byte ptr [rbx]
0x3b9d: mov rax,rbx
0x3ba0: test cl,cl
0x3ba2: je 0x3bc2
0x3ba4: mov rdx,r15
0x3ba7: sub rax,r15
0x3baa: cmp r13,rdx
0x3bad: jbe 0x3bb3
0x3baf: mov byte ptr [r14+rdx],cl
0x3bb3: add rdx,0x1
0x3bb7: movzx ecx,byte ptr [rax+rdx]
0x3bbb: test cl,cl
0x3bbd: jne 0x3baa
0x3bbf: mov r15,rdx
0x3bc2: cmp r13,r15
0x3bc5: jbe 0x3669
0x3bcb: mov byte ptr [r14+r15],0x0
0x3bd0: jmp 0x3669
0x3bd5: cmp dword ptr [rsp+0x8],0x2
0x3bda: movzx ebx,byte ptr [rsp+0xf]
0x3bdf: mov rbp,r11
0x3be2: sete al
0x3be5: mov byte ptr [rsp+0xd],bl
0x3be9: jmp 0x3619
0x3c2d: sub rsp,0x8
0x3c31: mov r8d,0x5
0x3c37: mov rcx,r11
0x3c3a: push qword ptr [rsp+0x68]
0x3c3e: push qword ptr [rsp+0x78]
0x3c42: mov rdi,r14
0x3c45: push qword ptr [rsp+0x38]
0x3c49: mov r9d,dword ptr [rsp+0x98]
0x3c51: mov rdx,qword ptr [rsp+0x30]
0x3c56: mov rsi,qword ptr [rsp+0x70]
0x3c5b: call 0x2a90
0x3c60: add rsp,0x20
0x3c64: mov r15,rax
0x3c67: jmp 0x3669
0x3c6c: movzx eax,byte ptr [rsp+0x7c]
0x3c71: jmp 0x3b8c
0x3c76: mov dword ptr [rsp+0x8],0x2
0x3c7e: jmp 0x3619
0x3c83: call 0x1480
0x3c88: mov byte ptr [rsp+0xd],0x0
0x3c8d: jmp 0x3701
0x3c9a: mov byte ptr [rsp+0xe],0x1
0x3c9f: xor eax,eax
0x3ca1: xor r12d,r12d
0x3ca4: mov qword ptr [rsp+0x50],0x0
0x3cad: jmp 0x3254
0x3cc4: nop 
0x3cc6: nop word ptr cs:[rax+rax]
0x3dbc: add rsp,0x20
0x3dc0: mov r11,qword ptr [rsp+0x10]
0x3dc5: cmp r11,rax
0x3dc8: ja 0x3e31
0x3dca: lea rsi,[rax+0x1]
0x3dce: lea rax,[rip+0x20432b]
0x3dd5: cmp r12,rax
0x3dd8: mov qword ptr [rbx],rsi
0x3ddb: je 0x3def
0x3ddd: mov rdi,r12
0x3de0: mov qword ptr [rsp+0x10],rsi
0x3de5: call 0x13c0
0x3dea: mov rsi,qword ptr [rsp+0x10]
0x3def: mov rdi,rsi
0x3df2: mov qword ptr [rsp+0x10],rsi
0x3df7: call 0x4c50
0x3dfc: sub rsp,0x8
0x3e00: mov qword ptr [rbx+0x8],rax
0x3e04: mov r8d,dword ptr [rbp]
0x3e08: push qword ptr [rbp+0x30]
0x3e0b: push qword ptr [rbp+0x28]
0x3e0e: mov rcx,r14
0x3e11: push r15
0x3e13: mov r9d,dword ptr [rsp+0x3c]
0x3e18: mov rdi,rax
0x3e1b: mov rdx,qword ptr [rsp+0x28]
0x3e20: mov rsi,qword ptr [rsp+0x30]
0x3e25: mov r12,rax
0x3e28: call 0x2a90
0x3e2d: add rsp,0x20
0x3e31: mov eax,dword ptr [rsp+0x18]
0x3e35: mov dword ptr [r13],eax
0x3e39: add rsp,0x28
0x3e3d: mov rax,r12
0x3e40: pop rbx
0x3e41: pop rbp
0x3e42: pop r12
0x3e44: pop r13
0x3e46: pop r14
0x3e48: pop r15
0x3e4a: ret 
0x3e71: call 0x13d0
0x3e76: call 0x4ea0
0x3e7b: nop dword ptr [rax+rax]
0x3e80: push r12
0x3e82: push rbp
0x3e83: push rbx
0x3e84: mov rbx,rdi
0x3e87: call 0x13e0
0x3e8c: mov r12d,dword ptr [rax]
0x3e8f: mov rbp,rax
0x3e92: lea rax,[rip+0x204367]
0x3e99: test rbx,rbx
0x3e9c: mov esi,0x38
0x3ea1: cmove rbx,rax
0x3ea5: mov rdi,rbx
0x3ea8: call 0x4e50
0x3ead: mov dword ptr [rbp],r12d
0x3eb1: pop rbx
0x3eb2: pop rbp
0x3eb3: pop r12
0x3eb5: ret 
0x3ec0: lea rax,[rip+0x204339]
0x3ec7: test rdi,rdi
0x3eca: cmove rdi,rax
0x3ece: mov eax,dword ptr [rdi]
0x3ed0: ret 
0x3ee0: lea rax,[rip+0x204319]
0x3ee7: test rdi,rdi
0x3eea: cmove rdi,rax
0x3eee: mov dword ptr [rdi],esi
0x3ef0: ret 
0x3f00: lea rax,[rip+0x2042f9]
0x3f07: test rdi,rdi
0x3f0a: mov ecx,esi
0x3f0c: cmove rdi,rax
0x3f10: mov eax,esi
0x3f12: and ecx,0x1f
0x3f15: shr al,0x5
0x3f18: movzx eax,al
0x3f1b: lea rdi,[rdi+rax*4+0x8]
0x3f20: mov esi,dword ptr [rdi]
0x3f22: mov eax,esi
0x3f24: shr eax,cl
0x3f26: xor edx,eax
0x3f28: and eax,0x1
0x3f2b: and edx,0x1
0x3f2e: shl edx,cl
0x3f30: xor edx,esi
0x3f32: mov dword ptr [rdi],edx
0x3f34: ret 
0x3f40: lea rax,[rip+0x2042b9]
0x3f47: test rdi,rdi
0x3f4a: cmove rdi,rax
0x3f4e: mov eax,dword ptr [rdi+0x4]
0x3f51: mov dword ptr [rdi+0x4],esi
0x3f54: ret 
0x3f60: lea rax,[rip+0x204299]
0x3f67: test rdi,rdi
0x3f6a: cmove rdi,rax
0x3f6e: test rsi,rsi
0x3f71: mov dword ptr [rdi],0xa
0x3f77: je 0x3f87
0x3f79: test rdx,rdx
0x3f7c: je 0x3f87
0x3f7e: mov qword ptr [rdi+0x28],rsi
0x3f82: mov qword ptr [rdi+0x30],rdx
0x3f86: ret 
0x3f87: sub rsp,0x8
0x3f8b: call 0x13d0
0x3f90: push r15
0x3f92: push r14
0x3f94: lea rax,[rip+0x204265]
0x3f9b: push r13
0x3f9d: push r12
0x3f9f: mov r13,rdi
0x3fa2: push rbp
0x3fa3: push rbx
0x3fa4: mov rbx,r8
0x3fa7: mov r14,rsi
0x3faa: mov r15,rdx
0x3fad: sub rsp,0x18
0x3fb1: test r8,r8
0x3fb4: cmove rbx,rax
0x3fb8: mov qword ptr [rsp+0x8],rcx
0x3fbd: call 0x13e0
0x3fc2: mov r12d,dword ptr [rax]
0x3fc5: mov rbp,rax
0x3fc8: lea rax,[rbx+0x8]
0x3fcc: sub rsp,0x8
0x3fd0: mov r9d,dword ptr [rbx+0x4]
0x3fd4: push qword ptr [rbx+0x30]
0x3fd7: mov r8d,dword ptr [rbx]
0x3fda: push qword ptr [rbx+0x28]
0x3fdd: mov rdx,r15
0x3fe0: push rax
0x3fe1: mov rcx,qword ptr [rsp+0x28]
0x3fe6: mov rsi,r14
0x3fe9: mov rdi,r13
0x3fec: call 0x2a90
0x3ff1: mov dword ptr [rbp],r12d
0x3ff5: add rsp,0x38
0x3ff9: pop rbx
0x3ffa: pop rbp
0x3ffb: pop r12
0x3ffd: pop r13
0x3fff: pop r14
0x4001: pop r15
0x4003: ret 
0x4010: push r15
0x4012: push r14
0x4014: lea rax,[rip+0x2041e5]
0x401b: push r13
0x401d: push r12
0x401f: mov r12,rdx
0x4022: push rbp
0x4023: push rbx
0x4024: mov rbx,rcx
0x4027: mov r14,rdi
0x402a: mov r15,rsi
0x402d: sub rsp,0x38
0x4031: test rcx,rcx
0x4034: cmove rbx,rax
0x4038: xor ebp,ebp
0x403a: call 0x13e0
0x403f: test r12,r12
0x4042: mov r13,rax
0x4045: mov eax,dword ptr [rax]
0x4047: sete bpl
0x404b: or ebp,dword ptr [rbx+0x4]
0x404e: lea r10,[rbx+0x8]
0x4052: sub rsp,0x8
0x4056: mov r8d,dword ptr [rbx]
0x4059: mov rcx,r15
0x405c: mov dword ptr [rsp+0x14],eax
0x4060: push qword ptr [rbx+0x30]
0x4063: mov rdx,r14
0x4066: push qword ptr [rbx+0x28]
0x4069: push r10
0x406b: xor esi,esi
0x406d: mov r9d,ebp
0x4070: xor edi,edi
0x4072: mov qword ptr [rsp+0x40],r10
0x4077: call 0x2a90
0x407c: lea rsi,[rax+0x1]
0x4080: mov qword ptr [rsp+0x48],rax
0x4085: add rsp,0x20
0x4089: mov rdi,rsi
0x408c: mov qword ptr [rsp+0x18],rsi
0x4091: call 0x4c50
0x4096: mov qword ptr [rsp+0x10],rax
0x409b: sub rsp,0x8
0x409f: push qword ptr [rbx+0x30]
0x40a2: push qword ptr [rbx+0x28]
0x40a5: mov r10,qword ptr [rsp+0x38]
0x40aa: mov r9d,ebp
0x40ad: mov r8d,dword ptr [rbx]
0x40b0: mov rcx,r15
0x40b3: mov rdx,r14
0x40b6: mov rdi,rax
0x40b9: push r10
0x40bb: mov rsi,qword ptr [rsp+0x38]
0x40c0: call 0x2a90
0x40c5: mov eax,dword ptr [rsp+0x2c]
0x40c9: add rsp,0x20
0x40cd: test r12,r12
0x40d0: mov dword ptr [r13],eax
0x40d4: je 0x40df
0x40d6: mov r11,qword ptr [rsp+0x28]
0x40db: mov qword ptr [r12],r11
0x40df: mov rax,qword ptr [rsp+0x10]
0x40e4: add rsp,0x38
0x40e8: pop rbx
0x40e9: pop rbp
0x40ea: pop r12
0x40ec: pop r13
0x40ee: pop r14
0x40f0: pop r15
0x40f2: ret 
0x4100: mov rcx,rdx
0x4103: xor edx,edx
0x4105: jmp 0x4010
0x4110: mov eax,dword ptr [rip+0x203f42]
0x4116: push r12
0x4118: mov r12,qword ptr [rip+0x203f41]
0x411f: push rbp
0x4120: push rbx
0x4121: cmp eax,0x1
0x4124: jle 0x4151
0x4126: sub eax,0x2
0x4129: lea rbx,[r12+0x18]
0x412e: shl rax,0x4
0x4132: lea rbp,[r12+rax+0x28]
0x4137: nop word ptr [rax+rax]
0x4140: mov rdi,qword ptr [rbx]
0x4143: add rbx,0x10
0x4147: call 0x13c0
0x414c: cmp rbx,rbp
0x414f: jne 0x4140
0x4151: mov rdi,qword ptr [r12+0x8]
0x4156: lea rbx,[rip+0x203fa3]
0x415d: cmp rdi,rbx
0x4160: je 0x4179
0x4162: call 0x13c0
0x4167: mov qword ptr [rip+0x203efe],0x100
0x4172: mov qword ptr [rip+0x203eff],rbx
0x4179: lea rbx,[rip+0x203ef0]
0x4180: cmp r12,rbx
0x4183: je 0x4194
0x4185: mov rdi,r12
0x4188: call 0x13c0
0x418d: mov qword ptr [rip+0x203ecc],rbx
0x4194: pop rbx
0x4195: mov dword ptr [rip+0x203eb9],0x1
0x419f: pop rbp
0x41a0: pop r12
0x41a2: ret 
0x41b0: lea rcx,[rip+0x204049]
0x41b7: mov rdx,-0x1
0x41be: jmp 0x3cd0
0x41d0: lea rcx,[rip+0x204029]
0x41d7: jmp 0x3cd0
0x41e0: lea rcx,[rip+0x204019]
0x41e7: mov rsi,rdi
0x41ea: mov rdx,-0x1
0x41f1: xor edi,edi
0x41f3: jmp 0x3cd0
0x4200: lea rcx,[rip+0x203ff9]
0x4207: mov rdx,rsi
0x420a: mov rsi,rdi
0x420d: xor edi,edi
0x420f: jmp 0x3cd0
0x428f: mov rcx,qword ptr [rsp+0x38]
0x4294: xor rcx,qword ptr fs:0x28
0x429d: jne 0x42a9
0x429f: add rsp,0x48
0x42a3: ret 
0x42a4: call 0x13d0
0x42a9: call 0x1480
0x42ae: nop 
0x42b0: sub rsp,0x48
0x42b4: mov rax,rdx
0x42b7: mov rdx,rcx
0x42ba: mov rcx,qword ptr fs:0x28
0x42c3: mov qword ptr [rsp+0x38],rcx
0x42c8: xor ecx,ecx
0x42ca: cmp esi,0xa
0x42cd: je 0x4330
0x42cf: mov dword ptr [rsp],esi
0x42d2: mov rcx,rsp
0x42d5: mov rsi,rax
0x42d8: mov qword ptr [rsp+0x4],0x0
0x42e1: mov qword ptr [rsp+0xc],0x0
0x42ea: mov qword ptr [rsp+0x14],0x0
0x42f3: mov qword ptr [rsp+0x1c],0x0
0x42fc: mov qword ptr [rsp+0x24],0x0
0x4305: mov qword ptr [rsp+0x2c],0x0
0x430e: mov dword ptr [rsp+0x34],0x0
0x4316: call 0x3cd0
0x431b: mov rdx,qword ptr [rsp+0x38]
0x4320: xor rdx,qword ptr fs:0x28
0x4329: jne 0x4335
0x432b: add rsp,0x48
0x432f: ret 
0x4330: call 0x13d0
0x4335: call 0x1480
0x433a: nop word ptr [rax+rax]
0x4350: mov rcx,rdx
0x4353: mov rdx,rsi
0x4356: mov esi,edi
0x4358: xor edi,edi
0x435a: jmp 0x42b0
0x4360: sub rsp,0x48
0x4364: mov ecx,edx
0x4366: mov rax,qword ptr fs:0x28
0x436f: mov qword ptr [rsp+0x38],rax
0x4374: xor eax,eax
0x4376: mov rax,qword ptr [rip+0x203eb3]
0x437d: mov r8,rsp
0x4380: and ecx,0x1f
0x4383: movdqa xmm0,xmmword ptr [rip+0x203e75]
0x438b: mov qword ptr [rsp+0x30],rax
0x4390: mov eax,edx
0x4392: movaps xmmword ptr [rsp],xmm0
0x4396: shr al,0x5
0x4399: movzx eax,al
0x439c: lea r9,[r8+rax*4+0x8]
0x43a1: movdqa xmm0,xmmword ptr [rip+0x203e67]
0x43a9: movaps xmmword ptr [rsp+0x10],xmm0
0x43ae: movdqa xmm0,xmmword ptr [rip+0x203e6a]
0x43b6: movaps xmmword ptr [rsp+0x20],xmm0
0x43bb: mov edx,dword ptr [r9]
0x43be: mov eax,edx
0x43c0: shr eax,cl
0x43c2: not eax
0x43c4: and eax,0x1
0x43c7: shl eax,cl
0x43c9: mov rcx,r8
0x43cc: xor eax,edx
0x43ce: mov rdx,rsi
0x43d1: mov rsi,rdi
0x43d4: mov dword ptr [r9],eax
0x43d7: xor edi,edi
0x43d9: call 0x3cd0
0x43de: mov rsi,qword ptr [rsp+0x38]
0x43e3: xor rsi,qword ptr fs:0x28
0x43ec: jne 0x43f3
0x43ee: add rsp,0x48
0x43f2: ret 
0x43f3: call 0x1480
0x43f8: nop dword ptr [rax+rax]
0x4400: movsx edx,sil
0x4404: mov rsi,-0x1
0x440b: jmp 0x4360
0x4410: mov edx,0x3a
0x4415: mov rsi,-0x1
0x441c: jmp 0x4360
0x4430: mov edx,0x3a
0x4435: jmp 0x4360
0x44af: mov rcx,qword ptr [rsp+0x38]
0x44b4: xor rcx,qword ptr fs:0x28
0x44bd: jne 0x44c9
0x44bf: add rsp,0x48
0x44c3: ret 
0x44c4: call 0x13d0
0x44c9: call 0x1480
0x44ce: nop 
0x44d0: sub rsp,0x48
0x44d4: mov r9,rcx
0x44d7: mov rcx,qword ptr [rip+0x203d52]
0x44de: movdqa xmm0,xmmword ptr [rip+0x203d1a]
0x44e6: mov rax,qword ptr fs:0x28
0x44ef: mov qword ptr [rsp+0x38],rax
0x44f4: xor eax,eax
0x44f6: movaps xmmword ptr [rsp],xmm0
0x44fa: test rsi,rsi
0x44fd: mov qword ptr [rsp+0x30],rcx
0x4502: mov dword ptr [rsp],0xa
0x4509: movdqa xmm0,xmmword ptr [rip+0x203cff]
0x4511: movaps xmmword ptr [rsp+0x10],xmm0
0x4516: movdqa xmm0,xmmword ptr [rip+0x203d02]
0x451e: movaps xmmword ptr [rsp+0x20],xmm0
0x4523: je 0x4557
0x4525: test rdx,rdx
0x4528: je 0x4557
0x452a: mov qword ptr [rsp+0x28],rsi
0x452f: mov qword ptr [rsp+0x30],rdx
0x4534: mov rcx,rsp
0x4537: mov rdx,r8
0x453a: mov rsi,r9
0x453d: call 0x3cd0
0x4542: mov rdi,qword ptr [rsp+0x38]
0x4547: xor rdi,qword ptr fs:0x28
0x4550: jne 0x455c
0x4552: add rsp,0x48
0x4556: ret 
0x4557: call 0x13d0
0x455c: call 0x1480
0x4561: nop dword ptr [rax+rax]
0x4566: nop word ptr cs:[rax+rax]
0x4570: mov r8,-0x1
0x4577: jmp 0x44d0
0x4580: mov rcx,rdx
0x4583: mov r8,-0x1
0x458a: mov rdx,rsi
0x458d: mov rsi,rdi
0x4590: xor edi,edi
0x4592: jmp 0x44d0
0x45a0: mov r8,rcx
0x45a3: mov rcx,rdx
0x45a6: mov rdx,rsi
0x45a9: mov rsi,rdi
0x45ac: xor edi,edi
0x45ae: jmp 0x44d0
0x45c0: lea rcx,[rip+0x203a59]
0x45c7: jmp 0x3cd0
0x45d0: lea rcx,[rip+0x203a49]
0x45d7: mov rdx,rsi
0x45da: mov rsi,rdi
0x45dd: xor edi,edi
0x45df: jmp 0x3cd0
0x45f0: lea rcx,[rip+0x203a29]
0x45f7: mov rdx,-0x1
0x45fe: jmp 0x3cd0
0x4768: mov r8,rcx
0x476b: mov rcx,rdx
0x476e: lea rdx,[rip+0x1cdf]
0x4775: mov esi,0x1
0x477a: xor eax,eax
0x477c: call 0x1670
0x4781: jmp 0x466c
0x497d: push r12
0x497f: push r15
0x4981: push r14
0x4983: mov r8,qword ptr [rsp+0x20]
0x4988: mov rcx,rbx
0x498b: mov rdx,rax
0x498e: mov rdi,rbp
0x4991: mov esi,0x1
0x4996: xor eax,eax
0x4998: call 0x1670
0x499d: add rsp,0x20
0x49a1: add rsp,0x28
0x49a5: pop rbx
0x49a6: pop rbp
0x49a7: pop r12
0x49a9: pop r13
0x49ab: pop r14
0x49ad: pop r15
0x49af: ret 
0x49e9: push r12
0x49eb: push r15
0x49ed: push r14
0x49ef: mov r9,qword ptr [rsp+0x28]
0x49f4: jmp 0x4983
0x4a50: xor r9d,r9d
0x4a53: cmp qword ptr [r8],0x0
0x4a57: je 0x4a6b
0x4a59: nop dword ptr [rax]
0x4a60: add r9,0x1
0x4a64: cmp qword ptr [r8+r9*8],0x0
0x4a69: jne 0x4a60
0x4a6b: jmp 0x4630
0x4a70: sub rsp,0x68
0x4a74: mov r10,r8
0x4a77: xor r9d,r9d
0x4a7a: mov rax,qword ptr fs:0x28
0x4a83: mov qword ptr [rsp+0x58],rax
0x4a88: xor eax,eax
0x4a8a: mov r8,rsp
0x4a8d: nop dword ptr [rax]
0x4a90: mov eax,dword ptr [r10]
0x4a93: cmp eax,0x2f
0x4a96: ja 0x4ada
0x4a98: mov r11d,eax
0x4a9b: add r11,qword ptr [r10+0x10]
0x4a9f: add eax,0x8
0x4aa2: mov dword ptr [r10],eax
0x4aa5: mov rax,qword ptr [r11]
0x4aa8: test rax,rax
0x4aab: mov qword ptr [r8+r9*8],rax
0x4aaf: je 0x4abb
0x4ab1: add r9,0x1
0x4ab5: cmp r9,0xa
0x4ab9: jne 0x4a90
0x4abb: call 0x4630
0x4ac0: mov rax,qword ptr [rsp+0x58]
0x4ac5: xor rax,qword ptr fs:0x28
0x4ace: jne 0x4ad5
0x4ad0: add rsp,0x68
0x4ad4: ret 
0x4ad5: call 0x1480
0x4ada: mov r11,qword ptr [r10+0x8]
0x4ade: lea rax,[r11+0x8]
0x4ae2: mov qword ptr [r10+0x8],rax
0x4ae6: jmp 0x4aa5
0x4bd0: push rbx
0x4bd1: lea rsi,[rip+0x18ca]
0x4bd8: mov edx,0x5
0x4bdd: xor edi,edi
0x4bdf: call 0x1450
0x4be4: lea rdx,[rip+0x18cc]
0x4beb: mov rsi,rax
0x4bee: mov edi,0x1
0x4bf3: xor eax,eax
0x4bf5: call 0x1600
0x4bfa: lea rsi,[rip+0x18cc]
0x4c01: mov edx,0x5
0x4c06: xor edi,edi
0x4c08: call 0x1450
0x4c0d: lea rcx,[rip+0x109c]
0x4c14: lea rdx,[rip+0xae5]
0x4c1b: mov rsi,rax
0x4c1e: mov edi,0x1
0x4c23: xor eax,eax
0x4c25: call 0x1600
0x4c2a: mov rbx,qword ptr [rip+0x203457]
0x4c31: lea rsi,[rip+0x1ac8]
0x4c38: xor edi,edi
0x4c3a: mov edx,0x5
0x4c3f: call 0x1450
0x4c44: mov rsi,rbx
0x4c47: mov rdi,rax
0x4c4a: pop rbx
0x4c4b: jmp 0x1520
0x4c5e: test rbx,rbx
0x4c61: jne 0x4c65
0x4c65: call 0x4ea0
0x4c6a: nop word ptr [rax+rax]
0x4c70: mov rax,rdi
0x4c73: mul rsi
0x4c76: mov rdi,rax
0x4c79: seto al
0x4c7c: test rdi,rdi
0x4c7f: js 0x4c8b
0x4c81: movzx eax,al
0x4c84: test rax,rax
0x4c87: jne 0x4c8b
0x4c89: jmp 0x4c50
0x4c8b: sub rsp,0x8
0x4c8f: call 0x4ea0
0x4c94: nop 
0x4c96: nop word ptr cs:[rax+rax]
0x4ca0: jmp 0x4c50
0x4cb9: test rdi,rdi
0x4cbc: jne 0x4cd8
0x4ccb: test rbx,rbx
0x4cce: jne 0x4ce1
0x4cd8: call 0x13c0
0x4cdd: xor eax,eax
0x4cdf: pop rbx
0x4ce0: ret 
0x4ce1: call 0x4ea0
0x4ce6: nop word ptr cs:[rax+rax]
0x4cf0: mov rax,rsi
0x4cf3: mul rdx
0x4cf6: mov rsi,rax
0x4cf9: seto al
0x4cfc: test rsi,rsi
0x4cff: js 0x4d0b
0x4d01: movzx eax,al
0x4d04: test rax,rax
0x4d07: jne 0x4d0b
0x4d09: jmp 0x4cb0
0x4d0b: sub rsp,0x8
0x4d0f: call 0x4ea0
0x4d14: nop 
0x4d16: nop word ptr cs:[rax+rax]
0x4d20: test rdi,rdi
0x4d23: mov r9,rdx
0x4d26: mov rcx,qword ptr [rsi]
0x4d29: je 0x4d60
0x4d2b: xor edx,edx
0x4d2d: movabsq rax,0x5555555555555554
0x4d37: div r9
0x4d3a: cmp rax,rcx
0x4d3d: jbe 0x4d7b
0x4d3f: mov rax,rcx
0x4d42: shr rax, 1
0x4d45: lea rcx,[rax+rcx+0x1]
0x4d4a: mov qword ptr [rsi],rcx
0x4d4d: imul rcx,r9
0x4d51: mov rsi,rcx
0x4d54: jmp 0x4cb0
0x4d60: test rcx,rcx
0x4d63: je 0x4d88
0x4d65: mov rax,rcx
0x4d68: mul r9
0x4d6b: seto dl
0x4d6e: test rax,rax
0x4d71: movzx edx,dl
0x4d74: js 0x4d7b
0x4d76: test rdx,rdx
0x4d79: je 0x4d4a
0x4d7b: sub rsp,0x8
0x4d7f: call 0x4ea0
0x4d84: nop dword ptr [rax]
0x4d88: xor edx,edx
0x4d8a: mov eax,0x80
0x4d8f: xor r8d,r8d
0x4d92: div r9
0x4d95: test rax,rax
0x4d98: sete r8b
0x4d9c: lea rcx,[r8+rax]
0x4da0: jmp 0x4d65
0x4db0: test rdi,rdi
0x4db3: mov rax,qword ptr [rsi]
0x4db6: je 0x4de0
0x4db8: movabsq rdx,0x5555555555555553
0x4dc2: cmp rax,rdx
0x4dc5: ja 0x4df1
0x4dc7: mov rdx,rax
0x4dca: shr rdx, 1
0x4dcd: lea rax,[rdx+rax+0x1]
0x4dd2: mov qword ptr [rsi],rax
0x4dd5: mov rsi,rax
0x4dd8: jmp 0x4cb0
0x4de0: test rax,rax
0x4de3: mov edx,0x80
0x4de8: cmove rax,rdx
0x4dec: test rax,rax
0x4def: jns 0x4dd2
0x4df1: sub rsp,0x8
0x4df5: call 0x4ea0
0x4dfa: nop word ptr [rax+rax]
0x4e00: push rbx
0x4e01: mov rbx,rdi
0x4e04: call 0x4c50
0x4e09: mov rdx,rbx
0x4e0c: xor esi,esi
0x4e0e: mov rdi,rax
0x4e11: pop rbx
0x4e12: jmp 0x1500
0x4e20: mov rax,rdi
0x4e23: sub rsp,0x8
0x4e27: mul rsi
0x4e2a: seto dl
0x4e2d: test rax,rax
0x4e30: js 0x4e49
0x4e32: movzx edx,dl
0x4e35: test rdx,rdx
0x4e38: jne 0x4e49
0x4e3a: call 0x1530
0x4e3f: test rax,rax
0x4e42: je 0x4e49
0x4e44: add rsp,0x8
0x4e48: ret 
0x4e49: call 0x4ea0
0x4e4e: nop 
0x4e50: push rbp
0x4e51: push rbx
0x4e52: mov rbp,rdi
0x4e55: mov rdi,rsi
0x4e58: mov rbx,rsi
0x4e5b: sub rsp,0x8
0x4e5f: call 0x4c50
0x4e64: add rsp,0x8
0x4e68: mov rdx,rbx
0x4e6b: mov rsi,rbp
0x4e6e: pop rbx
0x4e6f: pop rbp
0x4e70: mov rdi,rax
0x4e73: jmp 0x1560
0x4e80: push rbx
0x4e81: mov rbx,rdi
0x4e84: call 0x1470
0x4e89: mov rdi,rbx
0x4e8c: lea rsi,[rax+0x1]
0x4e90: pop rbx
0x4e91: jmp 0x4e50
0x4ed0: call 0x13d0
0x4ed5: nop word ptr cs:[rax+rax]
0x4edf: nop 
0x4f86: cmp eax,0x22
0x4f89: mov ebp,0x1
0x4f8e: jne 0x4fb8
0x4f95: movzx r12d,byte ptr [rcx]
0x4f99: test r12b,r12b
0x4f9c: jne 0x5017
0x4ff0: movzx r12d,byte ptr [rbp]
0x4ff5: test r12b,r12b
0x4ff8: je 0x4fb8
0x4ffa: movsx esi,r12b
0x4ffe: mov rdi,r13
0x5001: xor ebp,ebp
0x5003: call 0x14b0
0x5008: test rax,rax
0x500b: mov ebx,0x1
0x5010: mov rcx,qword ptr [rsp+0x8]
0x5015: je 0x4fb8
0x5017: movsx esi,r12b
0x501b: mov rdi,r13
0x501e: mov qword ptr [rsp+0x8],rcx
0x5023: call 0x14b0
0x5028: test rax,rax
0x502b: mov rcx,qword ptr [rsp+0x8]
0x5030: je 0x50fc
0x5036: lea eax,[r12-0x45]
0x503b: cmp al,0x2f
0x503d: ja 0x5090
0x503f: movabsq rdx,0x814400308945
0x5049: btq rdx,rax
0x504d: jae 0x5090
0x504f: mov esi,0x30
0x5054: mov rdi,r13
0x5057: mov qword ptr [rsp+0x8],rcx
0x505c: call 0x14b0
0x5061: test rax,rax
0x5064: mov rcx,qword ptr [rsp+0x8]
0x5069: je 0x5090
0x506b: movzx eax,byte ptr [rcx+0x1]
0x506f: cmp al,0x44
0x5071: je 0x507f
0x5073: cmp al,0x69
0x5075: je 0x5248
0x507b: cmp al,0x42
0x507d: jne 0x5090
0x507f: mov edi,0x2
0x5084: mov esi,0x3e8
0x5089: jmp 0x509a
0x5090: mov edi,0x1
0x5095: mov esi,0x400
0x509a: sub r12d,0x42
0x509e: cmp r12b,0x35
0x50a2: ja 0x50fc
0x50a4: lea rdx,[rip+0x175d]
0x50ab: movzx r12d,r12b
0x50af: movsxd rax,dword ptr [rdx+r12*4]
0x50b3: add rax,rdx
0x50b6: jmp rax
0x50e0: movsxd rdi,edi
0x50e3: mov eax,ebp
0x50e5: add rcx,rdi
0x50e8: or eax,0x2
0x50eb: mov qword ptr [r15],rcx
0x50ee: cmp byte ptr [rcx],0x0
0x50f1: mov qword ptr [r14],rbx
0x50f4: cmovne ebp,eax
0x50f7: jmp 0x4fbd
0x50fc: mov qword ptr [r14],rbx
0x50ff: or ebp,0x2
0x5102: jmp 0x4fbd
0x5155: or ebp,r9d
0x5158: jmp 0x50e0
0x51ec: mov rax,rbx
0x51ef: mul rsi
0x51f2: mov rbx,rax
0x51f5: jo 0x5284
0x51fb: sub r8d,0x1
0x51ff: jne 0x51ec
0x5201: jmp 0x5155
0x5248: xor edi,edi
0x524a: cmp byte ptr [rcx+0x2],0x42
0x524e: mov esi,0x400
0x5253: sete dil
0x5257: lea edi,[rdi+rdi+0x1]
0x525b: jmp 0x509a
0x5265: lea rcx,[rip+0x1674]
0x526c: lea rsi,[rip+0x154d]
0x5273: lea rdi,[rip+0x1566]
0x527a: mov edx,0x54
0x527f: call 0x14e0
0x5284: mov r9d,0x1
0x528a: or rbx,-0x1
0x528e: jmp 0x51fb
0x5300: push r13
0x5302: push r12
0x5304: mov r13,rsi
0x5307: push rbp
0x5308: push rbx
0x5309: mov rbx,rdi
0x530c: mov r12,rdx
0x530f: sub rsp,0x18
0x5313: mov rax,qword ptr fs:0x28
0x531c: mov qword ptr [rsp+0x8],rax
0x5321: xor eax,eax
0x5323: lea rax,[rsp+0x4]
0x5328: test rdi,rdi
0x532b: cmove rbx,rax
0x532f: mov rdi,rbx
0x5332: call 0x14a0
0x5337: cmp rax,-0x3
0x533b: mov rbp,rax
0x533e: jbe 0x5360
0x5340: test r12,r12
0x5343: je 0x5360
0x5345: xor edi,edi
0x5347: call 0x5410
0x534c: test al,al
0x534e: jne 0x5360
0x5350: movzx eax,byte ptr [r13]
0x5355: mov ebp,0x1
0x535a: mov dword ptr [rbx],eax
0x535c: nop dword ptr [rax]
0x5360: mov rdx,qword ptr [rsp+0x8]
0x5365: xor rdx,qword ptr fs:0x28
0x536e: mov rax,rbp
0x5371: jne 0x537e
0x5373: add rsp,0x18
0x5377: pop rbx
0x5378: pop rbp
0x5379: pop r12
0x537b: pop r13
0x537d: ret 
0x537e: call 0x1480
0x5383: nop word ptr cs:[rax+rax]
0x538d: nop dword ptr [rax]
0x5390: push r12
0x5392: push rbp
0x5393: mov rbp,rdi
0x5396: push rbx
0x5397: call 0x1410
0x539c: mov ebx,dword ptr [rbp]
0x539f: mov rdi,rbp
0x53a2: mov r12,rax
0x53a5: call 0x54b0
0x53aa: and ebx,0x20
0x53ad: test ebx,ebx
0x53af: jne 0x53c8
0x53b1: test eax,eax
0x53b3: je 0x53bf
0x53b5: test r12,r12
0x53b8: mov eax,0xffffffff
0x53bd: je 0x53f8
0x53bf: pop rbx
0x53c0: pop rbp
0x53c1: pop r12
0x53c3: ret 
0x53c8: test eax,eax
0x53ca: jne 0x53e8
0x53cc: call 0x13e0
0x53d1: mov dword ptr [rax],0x0
0x53d7: mov eax,0xffffffff
0x53dc: pop rbx
0x53dd: pop rbp
0x53de: pop r12
0x53e0: ret 
0x53e8: pop rbx
0x53e9: mov eax,0xffffffff
0x53ee: pop rbp
0x53ef: pop r12
0x53f1: ret 
0x53f8: call 0x13e0
0x53fd: cmp dword ptr [rax],0x9
0x5400: pop rbx
0x5401: pop rbp
0x5402: pop r12
0x5404: setne al
0x5407: movzx eax,al
0x540a: neg eax
0x540c: ret 
0x5410: sub rsp,0x8
0x5414: xor esi,esi
0x5416: call 0x15f0
0x541b: mov rdx,rax
0x541e: mov eax,0x1
0x5423: test rdx,rdx
0x5426: je 0x5445
0x5428: lea rdi,[rip+0x14bc]
0x542f: mov ecx,0x2
0x5434: mov rsi,rdx
0x5437: rep cmpsb [rsi],es:[rdi]
0x5439: seta cl
0x543c: sbb cl,0x0
0x543f: xor eax,eax
0x5441: test cl,cl
0x5443: jne 0x5450
0x5445: add rsp,0x8
0x5449: ret 
0x5450: lea rdi,[rip+0x1496]
0x5457: mov ecx,0x6
0x545c: mov rsi,rdx
0x545f: rep cmpsb [rsi],es:[rdi]
0x5461: seta al
0x5464: sbb al,0x0
0x5466: test al,al
0x5468: setne al
0x546b: add rsp,0x8
0x546f: ret 
0x5470: sub rsp,0x8
0x5474: mov edi,0xe
0x5479: call 0x15c0
0x547e: test rax,rax
0x5481: je 0x54a0
0x5483: cmp byte ptr [rax],0x0
0x5486: lea rdx,[rip+0x1466]
0x548d: cmove rax,rdx
0x5491: add rsp,0x8
0x5495: ret 
0x54a0: lea rax,[rip+0x144c]
0x54a7: add rsp,0x8
0x54ab: ret 
0x54b0: push r12
0x54b2: push rbp
0x54b3: push rbx
0x54b4: mov rbx,rdi
0x54b7: call 0x1580
0x54bc: test eax,eax
0x54be: mov rdi,rbx
0x54c1: js 0x5517
0x54c3: call 0x15d0
0x54c8: test eax,eax
0x54ca: jne 0x54f8
0x54cc: mov rdi,rbx
0x54cf: call 0x5530
0x54d4: test eax,eax
0x54d6: je 0x5514
0x54d8: call 0x13e0
0x54dd: mov r12d,dword ptr [rax]
0x54e0: mov rdi,rbx
0x54e3: mov rbp,rax
0x54e6: call 0x1430
0x54eb: test r12d,r12d
0x54ee: jne 0x5520
0x54f0: pop rbx
0x54f1: pop rbp
0x54f2: pop r12
0x54f4: ret 
0x54f8: mov rdi,rbx
0x54fb: call 0x1580
0x5500: xor esi,esi
0x5502: mov edx,0x1
0x5507: mov edi,eax
0x5509: call 0x14d0
0x550e: cmp rax,-0x1
0x5512: jne 0x54cc
0x5514: mov rdi,rbx
0x5517: pop rbx
0x5518: pop rbp
0x5519: pop r12
0x551b: jmp 0x1430
0x5520: mov dword ptr [rbp],r12d
0x5524: mov eax,0xffffffff
0x5529: jmp 0x54f0
0x5530: test rdi,rdi
0x5533: push rbx
0x5534: mov rbx,rdi
0x5537: je 0x554a
0x5539: call 0x15d0
0x553e: test eax,eax
0x5540: je 0x554a
0x5542: test dword ptr [rbx],0x100
0x5548: jne 0x5558
0x554a: mov rdi,rbx
0x554d: pop rbx
0x554e: jmp 0x15b0
0x5558: mov rdi,rbx
0x555b: mov edx,0x1
0x5560: xor esi,esi
0x5562: call 0x5570
0x5567: mov rdi,rbx
0x556a: pop rbx
0x556b: jmp 0x15b0
0x5570: mov rax,qword ptr [rdi+0x8]
0x5574: cmp qword ptr [rdi+0x10],rax
0x5578: je 0x5580
0x557a: jmp 0x1630
0x5580: mov rax,qword ptr [rdi+0x20]
0x5584: cmp qword ptr [rdi+0x28],rax
0x5588: jne 0x557a
0x558a: cmp qword ptr [rdi+0x48],0x0
0x558f: jne 0x557a
0x5591: push r12
0x5593: push rbp
0x5594: mov r12d,edx
0x5597: push rbx
0x5598: mov rbp,rsi
0x559b: mov rbx,rdi
0x559e: call 0x1580
0x55a3: mov edx,r12d
0x55a6: mov rsi,rbp
0x55a9: mov edi,eax
0x55ab: call 0x14d0
0x55b0: cmp rax,-0x1
0x55b4: je 0x55c2
0x55b6: and dword ptr [rbx],-0x11
0x55b9: mov qword ptr [rbx+0x90],rax
0x55c0: xor eax,eax
0x55c2: pop rbx
0x55c3: pop rbp
0x55c4: pop r12
0x55c6: ret 
0x5640: rep ret 
