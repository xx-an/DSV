0x11b8: sub rsp,0x8
0x11bc: mov rax,qword ptr [rip+0x205e0d]
0x11c3: test rax,rax
0x11c6: je 0x11ca
0x11c8: call rax
0x11ca: add rsp,0x8
0x11ce: ret 
0x11d6: jmp qword ptr [rip+0x205c9c]
0x11e0: jmp qword ptr [rip+0x205c9a]
0x1220: jmp qword ptr [rip+0x205c7a]
0x1230: jmp qword ptr [rip+0x205c72]
0x1260: jmp qword ptr [rip+0x205c5a]
0x1290: jmp qword ptr [rip+0x205c42]
0x12b0: jmp qword ptr [rip+0x205c32]
0x12d0: jmp qword ptr [rip+0x205c22]
0x12f0: jmp qword ptr [rip+0x205c12]
0x1300: jmp qword ptr [rip+0x205c0a]
0x1310: jmp qword ptr [rip+0x205c02]
0x1330: jmp qword ptr [rip+0x205bf2]
0x1350: jmp qword ptr [rip+0x205be2]
0x1370: jmp qword ptr [rip+0x205bd2]
0x1380: jmp qword ptr [rip+0x205bca]
0x1390: jmp qword ptr [rip+0x205bc2]
0x13a0: jmp qword ptr [rip+0x205bba]
0x13e0: jmp qword ptr [rip+0x205b9a]
0x1430: jmp qword ptr [rip+0x205b72]
0x1440: jmp qword ptr [rip+0x205b6a]
0x1450: jmp qword ptr [rip+0x205b62]
0x1460: jmp qword ptr [rip+0x205b7a]
0x1684: add rsp,0x18
0x1688: mov eax,0x1
0x168d: pop rbx
0x168e: pop rbp
0x168f: pop r12
0x1691: pop r13
0x1693: pop r14
0x1695: pop r15
0x1697: ret 
0x16da: hlt 
0x16db: nop dword ptr [rax+rax]
0x16e0: lea rdi,[rip+0x205999]
0x16e7: push rbp
0x16e8: lea rax,[rip+0x205991]
0x16ef: cmp rax,rdi
0x16f2: mov rbp,rsp
0x16f5: je 0x1710
0x16f7: mov rax,qword ptr [rip+0x2058c2]
0x16fe: test rax,rax
0x1701: je 0x1710
0x1703: pop rbp
0x1704: jmp rax
0x1710: pop rbp
0x1711: ret 
0x1720: lea rdi,[rip+0x205959]
0x1727: lea rsi,[rip+0x205952]
0x172e: push rbp
0x172f: sub rsi,rdi
0x1732: mov rbp,rsp
0x1735: sar rsi,0x3
0x1739: mov rax,rsi
0x173c: shr rax,0x3f
0x1740: add rsi,rax
0x1743: sar rsi, 1
0x1746: je 0x1760
0x1748: mov rax,qword ptr [rip+0x205889]
0x174f: test rax,rax
0x1752: je 0x1760
0x1754: pop rbp
0x1755: jmp rax
0x1760: pop rbp
0x1761: ret 
0x1781: push rbp
0x1782: mov rbp,rsp
0x1785: je 0x1793
0x1787: mov rdi,qword ptr [rip+0x20587a]
0x178e: call 0x1460
0x1793: call 0x16e0
0x1798: mov byte ptr [rip+0x205929],0x1
0x179f: pop rbp
0x17a0: ret 
0x17b0: push rbp
0x17b1: mov rbp,rsp
0x17b4: pop rbp
0x17b5: jmp 0x1720
0x1b10: mov qword ptr [rip+0x2055c1],rdi
0x1b17: ret 
0x1b20: mov byte ptr [rip+0x2055a9],dil
0x1b27: ret 
0x1b30: push rbp
0x1b31: push rbx
0x1b32: sub rsp,0x8
0x1b36: mov rdi,qword ptr [rip+0x20554b]
0x1b3d: call 0x45b0
0x1b42: test eax,eax
0x1b44: je 0x1b5c
0x1b46: call 0x1200
0x1b4b: cmp byte ptr [rip+0x20557e],0x0
0x1b52: mov rbx,rax
0x1b55: je 0x1b73
0x1b57: cmp dword ptr [rax],0x20
0x1b5a: jne 0x1b73
0x1b5c: mov rdi,qword ptr [rip+0x20555d]
0x1b63: call 0x45b0
0x1b68: test eax,eax
0x1b6a: jne 0x1bb2
0x1b6c: add rsp,0x8
0x1b70: pop rbx
0x1b71: pop rbp
0x1b72: ret 
0x1b73: lea rsi,[rip+0x2fb6]
0x1b7a: xor edi,edi
0x1b7c: mov edx,0x5
0x1b81: call 0x1280
0x1b86: mov rdi,qword ptr [rip+0x20554b]
0x1b8d: mov rbp,rax
0x1b90: test rdi,rdi
0x1b93: je 0x1bbd
0x1b95: call 0x39f0
0x1b9a: mov esi,dword ptr [rbx]
0x1b9c: lea rdx,[rip+0x2f99]
0x1ba3: mov rcx,rax
0x1ba6: mov r8,rbp
0x1ba9: xor edi,edi
0x1bab: xor eax,eax
0x1bad: call 0x13d0
0x1bb2: mov edi,dword ptr [rip+0x205460]
0x1bb8: call 0x1220
0x1bbd: mov esi,dword ptr [rbx]
0x1bbf: lea rdx,[rip+0x2f7a]
0x1bc6: mov rcx,rax
0x1bc9: xor edi,edi
0x1bcb: xor eax,eax
0x1bcd: call 0x13d0
0x1bd2: jmp 0x1bb2
0x1c60: push r13
0x1c62: push r12
0x1c64: mov r13,r8
0x1c67: push rbp
0x1c68: push rbx
0x1c69: mov rbp,rdx
0x1c6c: mov r12,rcx
0x1c6f: sub rsp,0xe8
0x1c76: test al,al
0x1c78: je 0x1cb4
0x1c7a: movaps [rsp+0x60],xmm0
0x1c7f: movaps [rsp+0x70],xmm1
0x1c84: movaps [rsp+0x80],xmm2
0x1c8c: movaps [rsp+0x90],xmm3
0x1c94: movaps [rsp+0xa0],xmm4
0x1c9c: movaps [rsp+0xb0],xmm5
0x1ca4: movaps [rsp+0xc0],xmm6
0x1cac: movaps [rsp+0xd0],xmm7
0x1cb4: mov rax,qword ptr fs:0x28
0x1cbd: mov qword ptr [rsp+0x28],rax
0x1cc2: xor eax,eax
0x1cc4: cmp edi,0x2
0x1cc7: mov ebx,dword ptr [rip+0x2053d3]
0x1ccd: mov dword ptr [rip+0x2053c9],0x0
0x1cd7: je 0x1d10
0x1cd9: mov rax,qword ptr [rsp+0x28]
0x1cde: xor rax,qword ptr fs:0x28
0x1ce7: mov dword ptr [rip+0x2053b3],ebx
0x1ced: mov dword ptr [rip+0x205399],0x0
0x1cf7: jne 0x1d9a
0x1cfd: add rsp,0xe8
0x1d04: pop rbx
0x1d05: pop rbp
0x1d06: pop r12
0x1d08: pop r13
0x1d0a: ret 
0x1d10: lea rcx,[rip+0x204ea9]
0x1d17: lea rdx,[rip+0x2e25]
0x1d1e: xor r8d,r8d
0x1d21: mov qword ptr [rsp+0x8],r9
0x1d26: call 0x12c0
0x1d2b: cmp eax,-0x1
0x1d2e: je 0x1cd9
0x1d30: cmp eax,0x68
0x1d33: mov r9,qword ptr [rsp+0x8]
0x1d38: je 0x1d90
0x1d3a: cmp eax,0x76
0x1d3d: jne 0x1cd9
0x1d3f: lea rax,[rsp+0x110]
0x1d47: mov rdi,qword ptr [rip+0x20533a]
0x1d4e: lea r8,[rsp+0x10]
0x1d53: mov rcx,r13
0x1d56: mov rdx,r12
0x1d59: mov rsi,rbp
0x1d5c: mov qword ptr [rsp+0x18],rax
0x1d61: lea rax,[rsp+0x30]
0x1d66: mov dword ptr [rsp+0x10],0x30
0x1d6e: mov dword ptr [rsp+0x14],0x30
0x1d76: mov qword ptr [rsp+0x20],rax
0x1d7b: call 0x40b0
0x1d80: xor edi,edi
0x1d82: call 0x1400
0x1d87: nop word ptr [rax+rax]
0x1d90: xor edi,edi
0x1d92: call r9
0x1d95: jmp 0x1cd9
0x1d9a: call 0x12b0
0x1d9f: nop 
0x1dc4: movaps [rsp+0x50],xmm0
0x1dc9: movaps [rsp+0x60],xmm1
0x1dce: movaps [rsp+0x70],xmm2
0x1dd3: movaps [rsp+0x80],xmm3
0x1ddb: movaps [rsp+0x90],xmm4
0x1de3: movaps [rsp+0xa0],xmm5
0x1deb: movaps [rsp+0xb0],xmm6
0x1df3: movaps [rsp+0xc0],xmm7
0x1e97: nop word ptr [rax+rax]
0x1ed4: jmp 0x1ea8
0x1ed6: call 0x12b0
0x1edb: nop dword ptr [rax+rax]
0x1f7f: nop 
0x1f80: push rbp
0x1f81: push rbx
0x1f82: mov rbp,rdi
0x1f85: mov ebx,esi
0x1f87: sub rsp,0x8
0x1f8b: call 0x4690
0x1f90: movzx edx,byte ptr [rax]
0x1f93: and edx,-0x21
0x1f96: cmp dl,0x55
0x1f99: je 0x2010
0x1f9b: cmp dl,0x47
0x1f9e: je 0x1fc0
0x1fa0: lea rax,[rip+0x2c04]
0x1fa7: lea rdx,[rip+0x2bff]
0x1fae: cmp ebx,0x9
0x1fb1: cmovne rax,rdx
0x1fb5: add rsp,0x8
0x1fb9: pop rbx
0x1fba: pop rbp
0x1fbb: ret 
0x1fc0: movzx edx,byte ptr [rax+0x1]
0x1fc4: and edx,-0x21
0x1fc7: cmp dl,0x42
0x1fca: jne 0x1fa0
0x1fcc: cmp byte ptr [rax+0x2],0x31
0x1fd0: jne 0x1fa0
0x1fd2: cmp byte ptr [rax+0x3],0x38
0x1fd6: jne 0x1fa0
0x1fd8: cmp byte ptr [rax+0x4],0x30
0x1fdc: jne 0x1fa0
0x1fde: cmp byte ptr [rax+0x5],0x33
0x1fe2: jne 0x1fa0
0x1fe4: cmp byte ptr [rax+0x6],0x30
0x1fe8: jne 0x1fa0
0x1fea: cmp byte ptr [rax+0x7],0x0
0x1fee: jne 0x1fa0
0x1ff0: cmp byte ptr [rbp],0x60
0x1ff4: lea rax,[rip+0x2ba9]
0x1ffb: lea rdx,[rip+0x2ba6]
0x2002: cmovne rax,rdx
0x2006: add rsp,0x8
0x200a: pop rbx
0x200b: pop rbp
0x200c: ret 
0x2010: movzx edx,byte ptr [rax+0x1]
0x2014: and edx,-0x21
0x2017: cmp dl,0x54
0x201a: jne 0x1fa0
0x201c: movzx edx,byte ptr [rax+0x2]
0x2020: and edx,-0x21
0x2023: cmp dl,0x46
0x2026: jne 0x1fa0
0x202c: cmp byte ptr [rax+0x3],0x2d
0x2030: jne 0x1fa0
0x2036: cmp byte ptr [rax+0x4],0x38
0x203a: jne 0x1fa0
0x2040: cmp byte ptr [rax+0x5],0x0
0x2044: jne 0x1fa0
0x204a: cmp byte ptr [rbp],0x60
0x204e: lea rax,[rip+0x2b47]
0x2055: lea rdx,[rip+0x2b44]
0x205c: cmovne rax,rdx
0x2060: add rsp,0x8
0x2064: pop rbx
0x2065: pop rbp
0x2066: ret 
0x2070: push r15
0x2072: push r14
0x2074: mov r15d,r8d
0x2077: push r13
0x2079: push r12
0x207b: mov r14,rdi
0x207e: push rbp
0x207f: push rbx
0x2080: mov ebx,r9d
0x2083: mov r13,rsi
0x2086: mov rbp,rcx
0x2089: and ebx,0x2
0x208c: sub rsp,0xb8
0x2093: mov rax,qword ptr [rsp+0xf0]
0x209b: mov qword ptr [rsp+0x10],rdx
0x20a0: mov dword ptr [rsp+0x8],r8d
0x20a5: mov dword ptr [rsp+0x78],r9d
0x20aa: mov qword ptr [rsp+0x20],rax
0x20af: mov rax,qword ptr [rsp+0xf8]
0x20b7: mov qword ptr [rsp+0x68],rax
0x20bc: mov rax,qword ptr [rsp+0x100]
0x20c4: mov qword ptr [rsp+0x60],rax
0x20c9: mov rax,qword ptr fs:0x28
0x20d2: mov qword ptr [rsp+0xa8],rax
0x20da: xor eax,eax
0x20dc: call 0x1290
0x20e1: cmp r15d,0xa
0x20e5: mov qword ptr [rsp+0x58],rax
0x20ea: ja 0x329f
0x20f0: lea rcx,[rip+0x2b09]
0x20f7: mov edx,r15d
0x20fa: movsxd rax,dword ptr [rcx+rdx*4]
0x20fe: add rax,rcx
0x2101: jmp rax
0x2143: xor r11d,r11d
0x2146: mov rax,rbp
0x2149: mov r8d,r12d
0x214c: mov rbp,r11
0x214f: mov r11,rax
0x2152: nop word ptr [rax+rax]
0x2158: cmp r11,rbp
0x215b: setne r12b
0x215f: cmp r11,-0x1
0x2163: jne 0x2172
0x2165: mov rax,qword ptr [rsp+0x10]
0x216a: cmp byte ptr [rax+rbp],0x0
0x216e: setne r12b
0x2172: test r12b,r12b
0x2175: je 0x27d0
0x217b: cmp dword ptr [rsp+0x8],0x2
0x2180: mov rdi,qword ptr [rsp+0x10]
0x2185: lea r9,[rdi+rbp]
0x2189: setne al
0x218c: and al,byte ptr [rsp+0xd]
0x2190: mov r10d,eax
0x2193: je 0x2240
0x2199: mov rax,qword ptr [rsp+0x18]
0x219e: test rax,rax
0x21a1: je 0x25d0
0x21a7: cmp r11,-0x1
0x21ab: lea rbx,[rbp+rax]
0x21b0: jne 0x21e0
0x21b2: cmp rax,0x1
0x21b6: jbe 0x21e0
0x21b8: mov byte ptr [rsp+0x38],r8b
0x21bd: mov byte ptr [rsp+0x30],r10b
0x21c2: mov qword ptr [rsp+0x28],r9
0x21c7: call 0x12a0
0x21cc: movzx r8d,byte ptr [rsp+0x38]
0x21d2: movzx r10d,byte ptr [rsp+0x30]
0x21d8: mov r11,rax
0x21db: mov r9,qword ptr [rsp+0x28]
0x21e0: cmp rbx,r11
0x21e3: mov byte ptr [rsp+0x28],r10b
0x21e8: ja 0x27a0
0x21ee: mov rdx,qword ptr [rsp+0x18]
0x21f3: mov rsi,qword ptr [rsp+0x48]
0x21f8: mov rdi,r9
0x21fb: mov qword ptr [rsp+0x40],r11
0x2200: mov byte ptr [rsp+0x38],r8b
0x2205: mov qword ptr [rsp+0x30],r9
0x220a: call 0x1310
0x220f: test eax,eax
0x2211: mov r9,qword ptr [rsp+0x30]
0x2216: movzx r8d,byte ptr [rsp+0x38]
0x221c: mov r11,qword ptr [rsp+0x40]
0x2221: jne 0x27a0
0x2227: cmp byte ptr [rsp+0xf],0x0
0x222c: movzx r10d,byte ptr [rsp+0x28]
0x2232: jne 0x31b5
0x2238: nop dword ptr [rax+rax]
0x2240: movzx ebx,byte ptr [r9]
0x2244: cmp bl,0x7e
0x2247: ja 0x2568
0x224d: lea rcx,[rip+0x29d8]
0x2254: movzx edx,bl
0x2257: movsxd rax,dword ptr [rcx+rdx*4]
0x225b: add rax,rcx
0x225e: jmp rax
0x2298: cmp byte ptr [rsp+0xd],0x1
0x229d: jne 0x23b2
0x22a3: test dl,dl
0x22a5: jne 0x23b2
0x22ab: mov rsi,qword ptr [rsp+0x20]
0x22b0: test rsi,rsi
0x22b3: je 0x22c9
0x22b5: mov edx,ebx
0x22b7: shr dl,0x5
0x22ba: movzx edx,dl
0x22bd: mov edx,dword ptr [rsi+rdx*4]
0x22c0: btl edx,ebx
0x22c3: jb 0x2413
0x22c9: test r10b,r10b
0x22cc: jne 0x2413
0x22d2: xor eax,0x1
0x22d5: add rbp,0x1
0x22d9: and eax,r8d
0x22dc: test al,al
0x22de: je 0x2300
0x22e0: cmp r13,r15
0x22e3: jbe 0x22ea
0x22e5: mov byte ptr [r14+r15],0x27
0x22ea: lea rax,[r15+0x1]
0x22ee: cmp r13,rax
0x22f1: jbe 0x22f9
0x22f3: mov byte ptr [r14+r15+0x1],0x27
0x22f9: add r15,0x2
0x22fd: xor r8d,r8d
0x2300: cmp r15,r13
0x2303: jae 0x2309
0x2305: mov byte ptr [r14+r15],bl
0x2309: movzx edi,byte ptr [rsp+0xe]
0x230e: add r15,0x1
0x2312: mov eax,0x0
0x2317: test r12b,r12b
0x231a: cmove edi,eax
0x231d: mov byte ptr [rsp+0xe],dil
0x2322: jmp 0x2158
0x23b2: cmp byte ptr [rsp+0xf],0x0
0x23b7: jne 0x22ab
0x23bd: jmp 0x22c9
0x2413: cmp dword ptr [rsp+0x8],0x2
0x2418: sete dl
0x241b: cmp byte ptr [rsp+0xf],0x0
0x2420: mov eax,edx
0x2422: jne 0x2c78
0x2428: mov eax,r8d
0x242b: xor eax,0x1
0x242e: and al,dl
0x2430: je 0x2461
0x2432: cmp r13,r15
0x2435: jbe 0x243c
0x2437: mov byte ptr [r14+r15],0x27
0x243c: lea rdx,[r15+0x1]
0x2440: cmp r13,rdx
0x2443: jbe 0x244b
0x2445: mov byte ptr [r14+r15+0x1],0x24
0x244b: lea rdx,[r15+0x2]
0x244f: cmp r13,rdx
0x2452: jbe 0x245a
0x2454: mov byte ptr [r14+r15+0x2],0x27
0x245a: add r15,0x3
0x245e: mov r8d,eax
0x2461: cmp r13,r15
0x2464: jbe 0x246b
0x2466: mov byte ptr [r14+r15],0x5c
0x246b: add r15,0x1
0x246f: add rbp,0x1
0x2473: jmp 0x2300
0x2560: xor r10d,r10d
0x2563: nop dword ptr [rax+rax]
0x2568: cmp qword ptr [rsp+0x58],0x1
0x256e: jne 0x2918
0x2574: mov qword ptr [rsp+0x38],r11
0x2579: mov byte ptr [rsp+0x30],r8b
0x257e: mov byte ptr [rsp+0x28],r10b
0x2583: call 0x1450
0x2588: mov rcx,qword ptr [rax]
0x258b: movzx edx,bl
0x258e: movzx r10d,byte ptr [rsp+0x28]
0x2594: movzx r8d,byte ptr [rsp+0x30]
0x259a: mov r11,qword ptr [rsp+0x38]
0x259f: mov edi,0x1
0x25a4: movzx eax,word ptr [rcx+rdx*2]
0x25a8: and ax,0x4000
0x25ac: setne r12b
0x25b0: sete al
0x25b3: and al,byte ptr [rsp+0xd]
0x25b7: test al,al
0x25b9: jne 0x2f51
0x25bf: cmp dword ptr [rsp+0x8],0x2
0x25c4: sete dl
0x25c7: jmp 0x2298
0x25d0: movzx ebx,byte ptr [r9]
0x25d4: cmp bl,0x7e
0x25d7: ja 0x2560
0x25d9: lea rcx,[rip+0x2848]
0x25e0: movzx edx,bl
0x25e3: movsxd rax,dword ptr [rcx+rdx*4]
0x25e7: add rax,rcx
0x25ea: jmp rax
0x27a0: xor r10d,r10d
0x27a3: jmp 0x2240
0x27d0: cmp dword ptr [rsp+0x8],0x2
0x27d5: movzx ebx,byte ptr [rsp+0xf]
0x27da: mov r12d,r8d
0x27dd: mov rbp,r11
0x27e0: sete dl
0x27e3: mov eax,ebx
0x27e5: test r15,r15
0x27e8: sete cl
0x27eb: and eax,edx
0x27ed: and al,cl
0x27ef: jne 0x3256
0x27f5: mov eax,ebx
0x27f7: xor eax,0x1
0x27fa: and dl,al
0x27fc: je 0x316c
0x2802: cmp byte ptr [rsp+0x7c],0x0
0x2807: je 0x316a
0x280d: cmp byte ptr [rsp+0xe],0x0
0x2812: jne 0x320d
0x2818: test r13,r13
0x281b: sete al
0x281e: cmp qword ptr [rsp+0x50],0x0
0x2824: setne dl
0x2827: and al,dl
0x2829: je 0x324c
0x282f: mov r13,qword ptr [rsp+0x50]
0x2834: lea rbx,[rip+0x2372]
0x283b: mov byte ptr [r14],0x27
0x283f: mov dword ptr [rsp+0x8],0x2
0x2847: mov r15d,0x1
0x284d: mov qword ptr [rsp+0x18],0x1
0x2856: mov byte ptr [rsp+0xf],0x0
0x285b: mov qword ptr [rsp+0x48],rbx
0x2860: mov byte ptr [rsp+0x7c],al
0x2864: jmp 0x2143
0x2918: lea rax,[rsp+0xa0]
0x2920: cmp r11,-0x1
0x2924: mov qword ptr [rsp+0xa0],0x0
0x2930: mov qword ptr [rsp+0x28],rax
0x2935: jne 0x2964
0x2937: mov rdi,qword ptr [rsp+0x10]
0x293c: mov byte ptr [rsp+0x40],r8b
0x2941: mov byte ptr [rsp+0x38],r10b
0x2946: mov qword ptr [rsp+0x30],r9
0x294b: call 0x12a0
0x2950: movzx r8d,byte ptr [rsp+0x40]
0x2956: movzx r10d,byte ptr [rsp+0x38]
0x295c: mov r11,rax
0x295f: mov r9,qword ptr [rsp+0x30]
0x2964: lea rax,[rsp+0x9c]
0x296c: xor ecx,ecx
0x296e: mov byte ptr [rsp+0x7e],bl
0x2972: mov byte ptr [rsp+0x7d],r8b
0x2977: mov rbx,rcx
0x297a: mov qword ptr [rsp+0x88],r9
0x2982: mov qword ptr [rsp+0x38],rax
0x2987: mov byte ptr [rsp+0x7f],r10b
0x298c: mov qword ptr [rsp+0x80],r15
0x2994: mov qword ptr [rsp+0x40],r14
0x2999: mov qword ptr [rsp+0x70],r13
0x299e: mov qword ptr [rsp+0x30],r11
0x29a3: mov rax,qword ptr [rsp+0x10]
0x29a8: lea r14,[rbp+rbx]
0x29ad: mov rdx,qword ptr [rsp+0x30]
0x29b2: mov rcx,qword ptr [rsp+0x28]
0x29b7: mov rdi,qword ptr [rsp+0x38]
0x29bc: lea r13,[rax+r14]
0x29c0: sub rdx,r14
0x29c3: mov rsi,r13
0x29c6: call 0x4520
0x29cb: test rax,rax
0x29ce: mov r15,rax
0x29d1: je 0x2a21
0x29d3: cmp rax,-0x1
0x29d7: je 0x2ff5
0x29dd: cmp rax,-0x2
0x29e1: je 0x2f81
0x29e7: cmp dword ptr [rsp+0x8],0x2
0x29ec: sete al
0x29ef: and al,byte ptr [rsp+0xf]
0x29f3: jne 0x2b90
0x29f9: mov edi,dword ptr [rsp+0x9c]
0x2a00: call 0x1440
0x2a05: mov rdi,qword ptr [rsp+0x28]
0x2a0a: test eax,eax
0x2a0c: mov eax,0x0
0x2a11: cmove r12d,eax
0x2a15: add rbx,r15
0x2a18: call 0x1430
0x2a1d: test eax,eax
0x2a1f: je 0x29a3
0x2a21: mov edx,r12d
0x2a24: mov rdi,rbx
0x2a27: movzx r8d,byte ptr [rsp+0x7d]
0x2a2d: xor edx,0x1
0x2a30: movzx ebx,byte ptr [rsp+0x7e]
0x2a35: movzx r10d,byte ptr [rsp+0x7f]
0x2a3b: and dl,byte ptr [rsp+0xd]
0x2a3f: mov r15,qword ptr [rsp+0x80]
0x2a47: mov r14,qword ptr [rsp+0x40]
0x2a4c: mov r13,qword ptr [rsp+0x70]
0x2a51: mov r11,qword ptr [rsp+0x30]
0x2a56: cmp rdi,0x1
0x2a5a: jbe 0x305b
0x2a60: mov rcx,rdi
0x2a63: xor esi,esi
0x2a65: movzx r9d,byte ptr [rsp+0xf]
0x2a6b: add rcx,rbp
0x2a6e: mov rdi,qword ptr [rsp+0x10]
0x2a73: jmp 0x2b2e
0x2a80: cmp dword ptr [rsp+0x8],0x2
0x2a85: sete al
0x2a88: test r9b,r9b
0x2a8b: jne 0x2f40
0x2a91: mov esi,r8d
0x2a94: xor esi,0x1
0x2a97: and al,sil
0x2a9a: je 0x2acb
0x2a9c: cmp r13,r15
0x2a9f: jbe 0x2aa6
0x2aa1: mov byte ptr [r14+r15],0x27
0x2aa6: lea rsi,[r15+0x1]
0x2aaa: cmp r13,rsi
0x2aad: jbe 0x2ab5
0x2aaf: mov byte ptr [r14+r15+0x1],0x24
0x2ab5: lea rsi,[r15+0x2]
0x2ab9: cmp r13,rsi
0x2abc: jbe 0x2ac4
0x2abe: mov byte ptr [r14+r15+0x2],0x27
0x2ac4: add r15,0x3
0x2ac8: mov r8d,eax
0x2acb: cmp r13,r15
0x2ace: jbe 0x2ad5
0x2ad0: mov byte ptr [r14+r15],0x5c
0x2ad5: lea rax,[r15+0x1]
0x2ad9: cmp r13,rax
0x2adc: jbe 0x2aeb
0x2ade: mov eax,ebx
0x2ae0: shr al,0x6
0x2ae3: add eax,0x30
0x2ae6: mov byte ptr [r14+r15+0x1],al
0x2aeb: lea rax,[r15+0x2]
0x2aef: cmp r13,rax
0x2af2: jbe 0x2b04
0x2af4: mov eax,ebx
0x2af6: shr al,0x3
0x2af9: and eax,0x7
0x2afc: add eax,0x30
0x2aff: mov byte ptr [r14+r15+0x2],al
0x2b04: and ebx,0x7
0x2b07: add rbp,0x1
0x2b0b: add r15,0x3
0x2b0f: add ebx,0x30
0x2b12: cmp rbp,rcx
0x2b15: jae 0x2300
0x2b1b: mov esi,edx
0x2b1d: cmp r13,r15
0x2b20: jbe 0x2b26
0x2b22: mov byte ptr [r14+r15],bl
0x2b26: movzx ebx,byte ptr [rdi+rbp]
0x2b2a: add r15,0x1
0x2b2e: test dl,dl
0x2b30: jne 0x2a80
0x2b36: mov eax,esi
0x2b38: xor eax,0x1
0x2b3b: and eax,r8d
0x2b3e: test r10b,r10b
0x2b41: je 0x2b51
0x2b43: cmp r13,r15
0x2b46: jbe 0x2b4d
0x2b48: mov byte ptr [r14+r15],0x5c
0x2b4d: add r15,0x1
0x2b51: add rbp,0x1
0x2b55: cmp rbp,rcx
0x2b58: jae 0x22dc
0x2b5e: test al,al
0x2b60: je 0x2f5e
0x2b66: cmp r13,r15
0x2b69: jbe 0x2b70
0x2b6b: mov byte ptr [r14+r15],0x27
0x2b70: lea rax,[r15+0x1]
0x2b74: cmp r13,rax
0x2b77: jbe 0x2b7f
0x2b79: mov byte ptr [r14+r15+0x1],0x27
0x2b7f: add r15,0x2
0x2b83: xor r10d,r10d
0x2b86: xor r8d,r8d
0x2b89: jmp 0x2b1d
0x2b90: cmp r15,0x1
0x2b94: je 0x29f9
0x2b9a: mov rdi,qword ptr [rsp+0x10]
0x2b9f: lea rcx,[rdi+r15]
0x2ba3: lea rdx,[rdi+r14+0x1]
0x2ba8: lea r8,[rcx+r14]
0x2bac: jmp 0x2bbd
0x2bb0: add rdx,0x1
0x2bb4: cmp r8,rdx
0x2bb7: je 0x29f9
0x2bbd: movzx ecx,byte ptr [rdx]
0x2bc0: sub ecx,0x5b
0x2bc3: cmp cl,0x21
0x2bc6: ja 0x2bb0
0x2bc8: mov esi,0x1
0x2bcd: shl rsi,cl
0x2bd0: mov rcx,rsi
0x2bd3: movabsq rsi,0x20000002b
0x2bdd: test rcx,rsi
0x2be0: je 0x2bb0
0x2be2: mov r14,qword ptr [rsp+0x40]
0x2be7: mov r13,qword ptr [rsp+0x70]
0x2bec: mov rbp,qword ptr [rsp+0x30]
0x2bf1: mov dword ptr [rsp+0x8],0x2
0x2bf9: cmp byte ptr [rsp+0xd],0x0
0x2bfe: je 0x2c10
0x2c00: test al,al
0x2c02: mov eax,0x4
0x2c07: cmove eax,dword ptr [rsp+0x8]
0x2c0c: mov dword ptr [rsp+0x8],eax
0x2c10: sub rsp,0x8
0x2c14: mov rcx,rbp
0x2c17: mov rsi,r13
0x2c1a: push qword ptr [rsp+0x68]
0x2c1e: push qword ptr [rsp+0x78]
0x2c22: mov rdi,r14
0x2c25: push 0x0
0x2c27: mov r9d,dword ptr [rsp+0x98]
0x2c2f: mov r8d,dword ptr [rsp+0x28]
0x2c34: mov rdx,qword ptr [rsp+0x30]
0x2c39: and r9d,-0x3
0x2c3d: call 0x2070
0x2c42: add rsp,0x20
0x2c46: mov r15,rax
0x2c49: mov rbx,qword ptr [rsp+0xa8]
0x2c51: xor rbx,qword ptr fs:0x28
0x2c5a: mov rax,r15
0x2c5d: jne 0x3263
0x2c63: add rsp,0xb8
0x2c6a: pop rbx
0x2c6b: pop rbp
0x2c6c: pop r12
0x2c6e: pop r13
0x2c70: pop r14
0x2c72: pop r15
0x2c74: ret 
0x2c78: mov rbp,r11
0x2c7b: jmp 0x2bf9
0x2ce1: test r13,r13
0x2ce4: jne 0x327a
0x2cea: lea rax,[rip+0x1ebc]
0x2cf1: mov qword ptr [rsp+0x50],0x0
0x2cfa: mov byte ptr [rsp+0xe],0x1
0x2cff: mov byte ptr [rsp+0x7c],0x0
0x2d04: xor r12d,r12d
0x2d07: mov byte ptr [rsp+0xf],0x0
0x2d0c: mov qword ptr [rsp+0x18],0x1
0x2d15: mov qword ptr [rsp+0x48],rax
0x2d1a: mov r15d,0x1
0x2d20: mov dword ptr [rsp+0x8],0x2
0x2d28: jmp 0x2143
0x2f40: movzx ebx,byte ptr [rsp+0xf]
0x2f45: mov rbp,r11
0x2f48: mov byte ptr [rsp+0xd],bl
0x2f4c: jmp 0x2bf9
0x2f51: movzx edx,byte ptr [rsp+0xd]
0x2f56: xor r12d,r12d
0x2f59: jmp 0x2a60
0x2f5e: xor r10d,r10d
0x2f61: jmp 0x2b1d
0x2f81: mov r11,qword ptr [rsp+0x30]
0x2f86: mov rsi,r14
0x2f89: mov rcx,r13
0x2f8c: mov rax,rbx
0x2f8f: mov rdi,rbx
0x2f92: movzx r8d,byte ptr [rsp+0x7d]
0x2f98: movzx ebx,byte ptr [rsp+0x7e]
0x2f9d: mov r9,qword ptr [rsp+0x88]
0x2fa5: cmp rsi,r11
0x2fa8: movzx r10d,byte ptr [rsp+0x7f]
0x2fae: mov r15,qword ptr [rsp+0x80]
0x2fb6: mov r14,qword ptr [rsp+0x40]
0x2fbb: mov r13,qword ptr [rsp+0x70]
0x2fc0: jae 0x2fe8
0x2fc2: cmp byte ptr [rcx],0x0
0x2fc5: jne 0x2fd7
0x2fc7: jmp 0x2fe8
0x2fd0: cmp byte ptr [r9+rax],0x0
0x2fd5: je 0x2fe5
0x2fd7: add rax,0x1
0x2fdb: lea rdx,[rbp+rax]
0x2fe0: cmp r11,rdx
0x2fe3: ja 0x2fd0
0x2fe5: mov rdi,rax
0x2fe8: movzx edx,byte ptr [rsp+0xd]
0x2fed: xor r12d,r12d
0x2ff0: jmp 0x2a56
0x2ff5: mov rdi,rbx
0x2ff8: movzx r8d,byte ptr [rsp+0x7d]
0x2ffe: movzx ebx,byte ptr [rsp+0x7e]
0x3003: movzx r10d,byte ptr [rsp+0x7f]
0x3009: mov r15,qword ptr [rsp+0x80]
0x3011: xor r12d,r12d
0x3014: mov r14,qword ptr [rsp+0x40]
0x3019: mov r13,qword ptr [rsp+0x70]
0x301e: mov r11,qword ptr [rsp+0x30]
0x3023: movzx edx,byte ptr [rsp+0xd]
0x3028: jmp 0x2a56
0x305b: mov eax,edx
0x305d: jmp 0x25b7
0x316a: mov eax,edx
0x316c: mov rbx,qword ptr [rsp+0x48]
0x3171: test rbx,rbx
0x3174: je 0x31a2
0x3176: test al,al
0x3178: je 0x31a2
0x317a: movzx ecx,byte ptr [rbx]
0x317d: mov rax,rbx
0x3180: test cl,cl
0x3182: je 0x31a2
0x3184: mov rdx,r15
0x3187: sub rax,r15
0x318a: cmp r13,rdx
0x318d: jbe 0x3193
0x318f: mov byte ptr [r14+rdx],cl
0x3193: add rdx,0x1
0x3197: movzx ecx,byte ptr [rax+rdx]
0x319b: test cl,cl
0x319d: jne 0x318a
0x319f: mov r15,rdx
0x31a2: cmp r13,r15
0x31a5: jbe 0x2c49
0x31ab: mov byte ptr [r14+r15],0x0
0x31b0: jmp 0x2c49
0x31b5: cmp dword ptr [rsp+0x8],0x2
0x31ba: movzx ebx,byte ptr [rsp+0xf]
0x31bf: mov rbp,r11
0x31c2: sete al
0x31c5: mov byte ptr [rsp+0xd],bl
0x31c9: jmp 0x2bf9
0x320d: sub rsp,0x8
0x3211: mov r8d,0x5
0x3217: mov rcx,r11
0x321a: push qword ptr [rsp+0x68]
0x321e: push qword ptr [rsp+0x78]
0x3222: mov rdi,r14
0x3225: push qword ptr [rsp+0x38]
0x3229: mov r9d,dword ptr [rsp+0x98]
0x3231: mov rdx,qword ptr [rsp+0x30]
0x3236: mov rsi,qword ptr [rsp+0x70]
0x323b: call 0x2070
0x3240: add rsp,0x20
0x3244: mov r15,rax
0x3247: jmp 0x2c49
0x324c: movzx eax,byte ptr [rsp+0x7c]
0x3251: jmp 0x316c
0x3256: mov dword ptr [rsp+0x8],0x2
0x325e: jmp 0x2bf9
0x3263: call 0x12b0
0x3268: mov byte ptr [rsp+0xd],0x0
0x326d: jmp 0x2ce1
0x327a: mov byte ptr [rsp+0xe],0x1
0x327f: xor eax,eax
0x3281: xor r12d,r12d
0x3284: mov qword ptr [rsp+0x50],0x0
0x328d: jmp 0x2834
0x329f: call 0x11f0
0x32a4: nop 
0x32a6: nop word ptr cs:[rax+rax]
0x32b0: push r15
0x32b2: push r14
0x32b4: movsxd r15,edi
0x32b7: push r13
0x32b9: push r12
0x32bb: mov r14,rdx
0x32be: push rbp
0x32bf: push rbx
0x32c0: mov rbp,rcx
0x32c3: sub rsp,0x28
0x32c7: mov qword ptr [rsp+0x8],rsi
0x32cc: call 0x1200
0x32d1: mov r13,rax
0x32d4: mov eax,dword ptr [rax]
0x32d6: test r15d,r15d
0x32d9: mov rbx,qword ptr [rip+0x203d80]
0x32e0: mov dword ptr [rsp+0x18],eax
0x32e4: js 0x3451
0x32ea: cmp dword ptr [rip+0x203d67],r15d
0x32f1: jg 0x3355
0x32f3: cmp r15d,0x7fffffff
0x32fa: je 0x3456
0x3300: lea r12d,[r15+0x1]
0x3304: lea rax,[rip+0x203d65]
0x330b: movsxd rsi,r12d
0x330e: shl rsi,0x4
0x3312: cmp rbx,rax
0x3315: je 0x3430
0x331b: mov rdi,rbx
0x331e: call 0x42f0
0x3323: mov rbx,rax
0x3326: mov qword ptr [rip+0x203d33],rax
0x332d: movsxd rdi,dword ptr [rip+0x203d24]
0x3334: mov edx,r12d
0x3337: xor esi,esi
0x3339: sub edx,edi
0x333b: shl rdi,0x4
0x333f: movsxd rdx,edx
0x3342: add rdi,rbx
0x3345: shl rdx,0x4
0x3349: call 0x1300
0x334e: mov dword ptr [rip+0x203d03],r12d
0x3355: mov eax,dword ptr [rbp+0x4]
0x3358: shl r15,0x4
0x335c: sub rsp,0x8
0x3360: add rbx,r15
0x3363: lea r15,[rbp+0x8]
0x3367: mov r8d,dword ptr [rbp]
0x336b: mov r11,qword ptr [rbx]
0x336e: mov r12,qword ptr [rbx+0x8]
0x3372: mov rcx,r14
0x3375: or eax,0x1
0x3378: mov dword ptr [rsp+0x24],eax
0x337c: push qword ptr [rbp+0x30]
0x337f: mov r9d,eax
0x3382: push qword ptr [rbp+0x28]
0x3385: push r15
0x3387: mov rsi,r11
0x338a: mov rdx,qword ptr [rsp+0x28]
0x338f: mov rdi,r12
0x3392: mov qword ptr [rsp+0x30],r11
0x3397: call 0x2070
0x339c: add rsp,0x20
0x33a0: mov r11,qword ptr [rsp+0x10]
0x33a5: cmp r11,rax
0x33a8: ja 0x3411
0x33aa: lea rsi,[rax+0x1]
0x33ae: lea rax,[rip+0x203d4b]
0x33b5: cmp r12,rax
0x33b8: mov qword ptr [rbx],rsi
0x33bb: je 0x33cf
0x33bd: mov rdi,r12
0x33c0: mov qword ptr [rsp+0x10],rsi
0x33c5: call 0x11e0
0x33ca: mov rsi,qword ptr [rsp+0x10]
0x33cf: mov rdi,rsi
0x33d2: mov qword ptr [rsp+0x10],rsi
0x33d7: call 0x4290
0x33dc: sub rsp,0x8
0x33e0: mov qword ptr [rbx+0x8],rax
0x33e4: mov r8d,dword ptr [rbp]
0x33e8: push qword ptr [rbp+0x30]
0x33eb: push qword ptr [rbp+0x28]
0x33ee: mov rcx,r14
0x33f1: push r15
0x33f3: mov r9d,dword ptr [rsp+0x3c]
0x33f8: mov rdi,rax
0x33fb: mov rdx,qword ptr [rsp+0x28]
0x3400: mov rsi,qword ptr [rsp+0x30]
0x3405: mov r12,rax
0x3408: call 0x2070
0x340d: add rsp,0x20
0x3411: mov eax,dword ptr [rsp+0x18]
0x3415: mov dword ptr [r13],eax
0x3419: add rsp,0x28
0x341d: mov rax,r12
0x3420: pop rbx
0x3421: pop rbp
0x3422: pop r12
0x3424: pop r13
0x3426: pop r14
0x3428: pop r15
0x342a: ret 
0x3430: xor edi,edi
0x3432: call 0x42f0
0x3437: movdqa xmm0,[rip+0x203c31]
0x343f: mov rbx,rax
0x3442: mov qword ptr [rip+0x203c17],rax
0x3449: movups [rax],xmm0
0x344c: jmp 0x332d
0x3451: call 0x11f0
0x3456: call 0x44e0
0x345b: nop dword ptr [rax+rax]
0x3460: push r12
0x3462: push rbp
0x3463: push rbx
0x3464: mov rbx,rdi
0x3467: call 0x1200
0x346c: mov r12d,dword ptr [rax]
0x346f: mov rbp,rax
0x3472: lea rax,[rip+0x203d87]
0x3479: test rbx,rbx
0x347c: mov esi,0x38
0x3481: cmove rbx,rax
0x3485: mov rdi,rbx
0x3488: call 0x4490
0x348d: mov dword ptr [rbp],r12d
0x3491: pop rbx
0x3492: pop rbp
0x3493: pop r12
0x3495: ret 
0x34a0: lea rax,[rip+0x203d59]
0x34a7: test rdi,rdi
0x34aa: cmove rdi,rax
0x34ae: mov eax,dword ptr [rdi]
0x34b0: ret 
0x34c0: lea rax,[rip+0x203d39]
0x34c7: test rdi,rdi
0x34ca: cmove rdi,rax
0x34ce: mov dword ptr [rdi],esi
0x34d0: ret 
0x34e0: lea rax,[rip+0x203d19]
0x34e7: test rdi,rdi
0x34ea: mov ecx,esi
0x34ec: cmove rdi,rax
0x34f0: mov eax,esi
0x34f2: and ecx,0x1f
0x34f5: shr al,0x5
0x34f8: movzx eax,al
0x34fb: lea rdi,[rdi+rax*4+0x8]
0x3500: mov esi,dword ptr [rdi]
0x3502: mov eax,esi
0x3504: shr eax,cl
0x3506: xor edx,eax
0x3508: and eax,0x1
0x350b: and edx,0x1
0x350e: shl edx,cl
0x3510: xor edx,esi
0x3512: mov dword ptr [rdi],edx
0x3514: ret 
0x3520: lea rax,[rip+0x203cd9]
0x3527: test rdi,rdi
0x352a: cmove rdi,rax
0x352e: mov eax,dword ptr [rdi+0x4]
0x3531: mov dword ptr [rdi+0x4],esi
0x3534: ret 
0x3540: lea rax,[rip+0x203cb9]
0x3547: test rdi,rdi
0x354a: cmove rdi,rax
0x354e: test rsi,rsi
0x3551: mov dword ptr [rdi],0xa
0x3557: je 0x3567
0x3559: test rdx,rdx
0x355c: je 0x3567
0x355e: mov qword ptr [rdi+0x28],rsi
0x3562: mov qword ptr [rdi+0x30],rdx
0x3566: ret 
0x3567: sub rsp,0x8
0x356b: call 0x11f0
0x3570: push r15
0x3572: push r14
0x3574: lea rax,[rip+0x203c85]
0x357b: push r13
0x357d: push r12
0x357f: mov r13,rdi
0x3582: push rbp
0x3583: push rbx
0x3584: mov rbx,r8
0x3587: mov r14,rsi
0x358a: mov r15,rdx
0x358d: sub rsp,0x18
0x3591: test r8,r8
0x3594: cmove rbx,rax
0x3598: mov qword ptr [rsp+0x8],rcx
0x359d: call 0x1200
0x35a2: mov r12d,dword ptr [rax]
0x35a5: mov rbp,rax
0x35a8: lea rax,[rbx+0x8]
0x35ac: sub rsp,0x8
0x35b0: mov r9d,dword ptr [rbx+0x4]
0x35b4: push qword ptr [rbx+0x30]
0x35b7: mov r8d,dword ptr [rbx]
0x35ba: push qword ptr [rbx+0x28]
0x35bd: mov rdx,r15
0x35c0: push rax
0x35c1: mov rcx,qword ptr [rsp+0x28]
0x35c6: mov rsi,r14
0x35c9: mov rdi,r13
0x35cc: call 0x2070
0x35d1: mov dword ptr [rbp],r12d
0x35d5: add rsp,0x38
0x35d9: pop rbx
0x35da: pop rbp
0x35db: pop r12
0x35dd: pop r13
0x35df: pop r14
0x35e1: pop r15
0x35e3: ret 
0x35f0: push r15
0x35f2: push r14
0x35f4: lea rax,[rip+0x203c05]
0x35fb: push r13
0x35fd: push r12
0x35ff: mov r12,rdx
0x3602: push rbp
0x3603: push rbx
0x3604: mov rbx,rcx
0x3607: mov r14,rdi
0x360a: mov r15,rsi
0x360d: sub rsp,0x38
0x3611: test rcx,rcx
0x3614: cmove rbx,rax
0x3618: xor ebp,ebp
0x361a: call 0x1200
0x361f: test r12,r12
0x3622: mov r13,rax
0x3625: mov eax,dword ptr [rax]
0x3627: sete bpl
0x362b: or ebp,dword ptr [rbx+0x4]
0x362e: lea r10,[rbx+0x8]
0x3632: sub rsp,0x8
0x3636: mov r8d,dword ptr [rbx]
0x3639: mov rcx,r15
0x363c: mov dword ptr [rsp+0x14],eax
0x3640: push qword ptr [rbx+0x30]
0x3643: mov rdx,r14
0x3646: push qword ptr [rbx+0x28]
0x3649: push r10
0x364b: xor esi,esi
0x364d: mov r9d,ebp
0x3650: xor edi,edi
0x3652: mov qword ptr [rsp+0x40],r10
0x3657: call 0x2070
0x365c: lea rsi,[rax+0x1]
0x3660: mov qword ptr [rsp+0x48],rax
0x3665: add rsp,0x20
0x3669: mov rdi,rsi
0x366c: mov qword ptr [rsp+0x18],rsi
0x3671: call 0x4290
0x3676: mov qword ptr [rsp+0x10],rax
0x367b: sub rsp,0x8
0x367f: push qword ptr [rbx+0x30]
0x3682: push qword ptr [rbx+0x28]
0x3685: mov r10,qword ptr [rsp+0x38]
0x368a: mov r9d,ebp
0x368d: mov r8d,dword ptr [rbx]
0x3690: mov rcx,r15
0x3693: mov rdx,r14
0x3696: mov rdi,rax
0x3699: push r10
0x369b: mov rsi,qword ptr [rsp+0x38]
0x36a0: call 0x2070
0x36a5: mov eax,dword ptr [rsp+0x2c]
0x36a9: add rsp,0x20
0x36ad: test r12,r12
0x36b0: mov dword ptr [r13],eax
0x36b4: je 0x36bf
0x36b6: mov r11,qword ptr [rsp+0x28]
0x36bb: mov qword ptr [r12],r11
0x36bf: mov rax,qword ptr [rsp+0x10]
0x36c4: add rsp,0x38
0x36c8: pop rbx
0x36c9: pop rbp
0x36ca: pop r12
0x36cc: pop r13
0x36ce: pop r14
0x36d0: pop r15
0x36d2: ret 
0x36e0: mov rcx,rdx
0x36e3: xor edx,edx
0x36e5: jmp 0x35f0
0x36f0: mov eax,dword ptr [rip+0x203962]
0x36f6: push r12
0x36f8: mov r12,qword ptr [rip+0x203961]
0x36ff: push rbp
0x3700: push rbx
0x3701: cmp eax,0x1
0x3704: jle 0x3731
0x3706: sub eax,0x2
0x3709: lea rbx,[r12+0x18]
0x370e: shl rax,0x4
0x3712: lea rbp,[r12+rax+0x28]
0x3717: nop word ptr [rax+rax]
0x3720: mov rdi,qword ptr [rbx]
0x3723: add rbx,0x10
0x3727: call 0x11e0
0x372c: cmp rbx,rbp
0x372f: jne 0x3720
0x3731: mov rdi,qword ptr [r12+0x8]
0x3736: lea rbx,[rip+0x2039c3]
0x373d: cmp rdi,rbx
0x3740: je 0x3759
0x3742: call 0x11e0
0x3747: mov qword ptr [rip+0x20391e],0x100
0x3752: mov qword ptr [rip+0x20391f],rbx
0x3759: lea rbx,[rip+0x203910]
0x3760: cmp r12,rbx
0x3763: je 0x3774
0x3765: mov rdi,r12
0x3768: call 0x11e0
0x376d: mov qword ptr [rip+0x2038ec],rbx
0x3774: pop rbx
0x3775: mov dword ptr [rip+0x2038d9],0x1
0x377f: pop rbp
0x3780: pop r12
0x3782: ret 
0x3790: lea rcx,[rip+0x203a69]
0x3797: mov rdx,-0x1
0x379e: jmp 0x32b0
0x37b0: lea rcx,[rip+0x203a49]
0x37b7: jmp 0x32b0
0x37c0: lea rcx,[rip+0x203a39]
0x37c7: mov rsi,rdi
0x37ca: mov rdx,-0x1
0x37d1: xor edi,edi
0x37d3: jmp 0x32b0
0x37e0: lea rcx,[rip+0x203a19]
0x37e7: mov rdx,rsi
0x37ea: mov rsi,rdi
0x37ed: xor edi,edi
0x37ef: jmp 0x32b0
0x3800: sub rsp,0x48
0x3804: mov rax,rdx
0x3807: mov rdx,qword ptr fs:0x28
0x3810: mov qword ptr [rsp+0x38],rdx
0x3815: xor edx,edx
0x3817: cmp esi,0xa
0x381a: je 0x3884
0x381c: mov dword ptr [rsp],esi
0x381f: mov rcx,rsp
0x3822: mov rdx,-0x1
0x3829: mov rsi,rax
0x382c: mov qword ptr [rsp+0x4],0x0
0x3835: mov qword ptr [rsp+0xc],0x0
0x383e: mov qword ptr [rsp+0x14],0x0
0x3847: mov qword ptr [rsp+0x1c],0x0
0x3850: mov qword ptr [rsp+0x24],0x0
0x3859: mov qword ptr [rsp+0x2c],0x0
0x3862: mov dword ptr [rsp+0x34],0x0
0x386a: call 0x32b0
0x386f: mov rcx,qword ptr [rsp+0x38]
0x3874: xor rcx,qword ptr fs:0x28
0x387d: jne 0x3889
0x387f: add rsp,0x48
0x3883: ret 
0x3884: call 0x11f0
0x3889: call 0x12b0
0x388e: nop 
0x3890: sub rsp,0x48
0x3894: mov rax,rdx
0x3897: mov rdx,rcx
0x389a: mov rcx,qword ptr fs:0x28
0x38a3: mov qword ptr [rsp+0x38],rcx
0x38a8: xor ecx,ecx
0x38aa: cmp esi,0xa
0x38ad: je 0x3910
0x38af: mov dword ptr [rsp],esi
0x38b2: mov rcx,rsp
0x38b5: mov rsi,rax
0x38b8: mov qword ptr [rsp+0x4],0x0
0x38c1: mov qword ptr [rsp+0xc],0x0
0x38ca: mov qword ptr [rsp+0x14],0x0
0x38d3: mov qword ptr [rsp+0x1c],0x0
0x38dc: mov qword ptr [rsp+0x24],0x0
0x38e5: mov qword ptr [rsp+0x2c],0x0
0x38ee: mov dword ptr [rsp+0x34],0x0
0x38f6: call 0x32b0
0x38fb: mov rdx,qword ptr [rsp+0x38]
0x3900: xor rdx,qword ptr fs:0x28
0x3909: jne 0x3915
0x390b: add rsp,0x48
0x390f: ret 
0x3910: call 0x11f0
0x3915: call 0x12b0
0x391a: nop word ptr [rax+rax]
0x3920: mov rdx,rsi
0x3923: mov esi,edi
0x3925: xor edi,edi
0x3927: jmp 0x3800
0x3930: mov rcx,rdx
0x3933: mov rdx,rsi
0x3936: mov esi,edi
0x3938: xor edi,edi
0x393a: jmp 0x3890
0x3940: sub rsp,0x48
0x3944: mov ecx,edx
0x3946: mov rax,qword ptr fs:0x28
0x394f: mov qword ptr [rsp+0x38],rax
0x3954: xor eax,eax
0x3956: mov rax,qword ptr [rip+0x2038d3]
0x395d: mov r8,rsp
0x3960: and ecx,0x1f
0x3963: movdqa xmm0,[rip+0x203895]
0x396b: mov qword ptr [rsp+0x30],rax
0x3970: mov eax,edx
0x3972: movaps [rsp],xmm0
0x3976: shr al,0x5
0x3979: movzx eax,al
0x397c: lea r9,[r8+rax*4+0x8]
0x3981: movdqa xmm0,[rip+0x203887]
0x3989: movaps [rsp+0x10],xmm0
0x398e: movdqa xmm0,[rip+0x20388a]
0x3996: movaps [rsp+0x20],xmm0
0x399b: mov edx,dword ptr [r9]
0x399e: mov eax,edx
0x39a0: shr eax,cl
0x39a2: not eax
0x39a4: and eax,0x1
0x39a7: shl eax,cl
0x39a9: mov rcx,r8
0x39ac: xor eax,edx
0x39ae: mov rdx,rsi
0x39b1: mov rsi,rdi
0x39b4: mov dword ptr [r9],eax
0x39b7: xor edi,edi
0x39b9: call 0x32b0
0x39be: mov rsi,qword ptr [rsp+0x38]
0x39c3: xor rsi,qword ptr fs:0x28
0x39cc: jne 0x39d3
0x39ce: add rsp,0x48
0x39d2: ret 
0x39d3: call 0x12b0
0x39d8: nop dword ptr [rax+rax]
0x39e0: movsx edx,sil
0x39e4: mov rsi,-0x1
0x39eb: jmp 0x3940
0x39f0: mov edx,0x3a
0x39f5: mov rsi,-0x1
0x39fc: jmp 0x3940
0x3a10: mov edx,0x3a
0x3a15: jmp 0x3940
0x3a20: sub rsp,0x48
0x3a24: mov rax,rdx
0x3a27: mov rdx,qword ptr fs:0x28
0x3a30: mov qword ptr [rsp+0x38],rdx
0x3a35: xor edx,edx
0x3a37: cmp esi,0xa
0x3a3a: je 0x3aa4
0x3a3c: mov dword ptr [rsp],esi
0x3a3f: mov rcx,rsp
0x3a42: mov rdx,-0x1
0x3a49: mov rsi,rax
0x3a4c: mov qword ptr [rsp+0x4],0x0
0x3a55: mov qword ptr [rsp+0xc],0x4000000
0x3a5e: mov qword ptr [rsp+0x14],0x0
0x3a67: mov qword ptr [rsp+0x1c],0x0
0x3a70: mov qword ptr [rsp+0x24],0x0
0x3a79: mov qword ptr [rsp+0x2c],0x0
0x3a82: mov dword ptr [rsp+0x34],0x0
0x3a8a: call 0x32b0
0x3a8f: mov rcx,qword ptr [rsp+0x38]
0x3a94: xor rcx,qword ptr fs:0x28
0x3a9d: jne 0x3aa9
0x3a9f: add rsp,0x48
0x3aa3: ret 
0x3aa4: call 0x11f0
0x3aa9: call 0x12b0
0x3aae: nop 
0x3ab0: sub rsp,0x48
0x3ab4: mov r9,rcx
0x3ab7: mov rcx,qword ptr [rip+0x203772]
0x3abe: movdqa xmm0,[rip+0x20373a]
0x3ac6: mov rax,qword ptr fs:0x28
0x3acf: mov qword ptr [rsp+0x38],rax
0x3ad4: xor eax,eax
0x3ad6: movaps [rsp],xmm0
0x3ada: test rsi,rsi
0x3add: mov qword ptr [rsp+0x30],rcx
0x3ae2: mov dword ptr [rsp],0xa
0x3ae9: movdqa xmm0,[rip+0x20371f]
0x3af1: movaps [rsp+0x10],xmm0
0x3af6: movdqa xmm0,[rip+0x203722]
0x3afe: movaps [rsp+0x20],xmm0
0x3b03: je 0x3b37
0x3b05: test rdx,rdx
0x3b08: je 0x3b37
0x3b0a: mov qword ptr [rsp+0x28],rsi
0x3b0f: mov qword ptr [rsp+0x30],rdx
0x3b14: mov rcx,rsp
0x3b17: mov rdx,r8
0x3b1a: mov rsi,r9
0x3b1d: call 0x32b0
0x3b22: mov rdi,qword ptr [rsp+0x38]
0x3b27: xor rdi,qword ptr fs:0x28
0x3b30: jne 0x3b3c
0x3b32: add rsp,0x48
0x3b36: ret 
0x3b37: call 0x11f0
0x3b3c: call 0x12b0
0x3b41: nop dword ptr [rax+rax]
0x3b46: nop word ptr cs:[rax+rax]
0x3b50: mov r8,-0x1
0x3b57: jmp 0x3ab0
0x3b60: mov rcx,rdx
0x3b63: mov r8,-0x1
0x3b6a: mov rdx,rsi
0x3b6d: mov rsi,rdi
0x3b70: xor edi,edi
0x3b72: jmp 0x3ab0
0x3b80: mov r8,rcx
0x3b83: mov rcx,rdx
0x3b86: mov rdx,rsi
0x3b89: mov rsi,rdi
0x3b8c: xor edi,edi
0x3b8e: jmp 0x3ab0
0x3ba0: lea rcx,[rip+0x203479]
0x3ba7: jmp 0x32b0
0x3bb0: lea rcx,[rip+0x203469]
0x3bb7: mov rdx,rsi
0x3bba: mov rsi,rdi
0x3bbd: xor edi,edi
0x3bbf: jmp 0x32b0
0x3bd0: lea rcx,[rip+0x203449]
0x3bd7: mov rdx,-0x1
0x3bde: jmp 0x32b0
0x3bf0: lea rcx,[rip+0x203429]
0x3bf7: mov rsi,rdi
0x3bfa: mov rdx,-0x1
0x3c01: xor edi,edi
0x3c03: jmp 0x32b0
0x3da8: mov r8,rcx
0x3dab: mov rcx,rdx
0x3dae: lea rdx,[rip+0x12bf]
0x3db5: mov esi,0x1
0x3dba: xor eax,eax
0x3dbc: call 0x1420
0x3dc1: jmp 0x3cac
0x3fbd: push r12
0x3fbf: push r15
0x3fc1: push r14
0x3fc3: mov r8,qword ptr [rsp+0x20]
0x3fc8: mov rcx,rbx
0x3fcb: mov rdx,rax
0x3fce: mov rdi,rbp
0x3fd1: mov esi,0x1
0x3fd6: xor eax,eax
0x3fd8: call 0x1420
0x3fdd: add rsp,0x20
0x3fe1: add rsp,0x28
0x3fe5: pop rbx
0x3fe6: pop rbp
0x3fe7: pop r12
0x3fe9: pop r13
0x3feb: pop r14
0x3fed: pop r15
0x3fef: ret 
0x4029: push r12
0x402b: push r15
0x402d: push r14
0x402f: mov r9,qword ptr [rsp+0x28]
0x4034: jmp 0x3fc3
0x4090: xor r9d,r9d
0x4093: cmp qword ptr [r8],0x0
0x4097: je 0x40ab
0x4099: nop dword ptr [rax]
0x40a0: add r9,0x1
0x40a4: cmp qword ptr [r8+r9*8],0x0
0x40a9: jne 0x40a0
0x40ab: jmp 0x3c70
0x40d8: mov r11d,eax
0x40db: add r11,qword ptr [r10+0x10]
0x40df: add eax,0x8
0x40e2: mov dword ptr [r10],eax
0x4115: call 0x12b0
0x4130: push rbp
0x4131: push rbx
0x4132: mov r10d,0x20
0x4138: xor r11d,r11d
0x413b: sub rsp,0xb8
0x4142: mov rax,qword ptr fs:0x28
0x414b: mov qword ptr [rsp+0x78],rax
0x4150: xor eax,eax
0x4152: lea rax,[rsp+0xd0]
0x415a: mov qword ptr [rsp+0xa0],r8
0x4162: lea rbx,[rsp+0xd0]
0x416a: lea r8,[rsp+0x20]
0x416f: mov qword ptr [rsp+0xa8],r9
0x4177: mov dword ptr [rsp+0x8],0x20
0x417f: mov qword ptr [rsp+0x10],rax
0x4184: lea rax,[rsp+0x80]
0x418c: xor r9d,r9d
0x418f: mov qword ptr [rsp+0x18],rax
0x4194: mov rbp,rax
0x4197: nop word ptr [rax+rax]
0x41a0: cmp r10d,0x2f
0x41a4: ja 0x41fc
0x41a6: mov eax,r10d
0x41a9: mov r11d,0x1
0x41af: add r10d,0x8
0x41b3: add rax,rbp
0x41b6: mov rax,qword ptr [rax]
0x41b9: test rax,rax
0x41bc: mov qword ptr [r8+r9*8],rax
0x41c0: je 0x41cc
0x41c2: add r9,0x1
0x41c6: cmp r9,0xa
0x41ca: jne 0x41a0
0x41cc: test r11b,r11b
0x41cf: jne 0x41f5
0x41d1: call 0x3c70
0x41d6: mov rax,qword ptr [rsp+0x78]
0x41db: xor rax,qword ptr fs:0x28
0x41e4: jne 0x41f0
0x41e6: add rsp,0xb8
0x41ed: pop rbx
0x41ee: pop rbp
0x41ef: ret 
0x41f0: call 0x12b0
0x41f5: mov dword ptr [rsp+0x8],r10d
0x41fa: jmp 0x41d1
0x41fc: mov rax,rbx
0x41ff: add rbx,0x8
0x4203: jmp 0x41b6
0x4210: push rbx
0x4211: lea rsi,[rip+0xeaa]
0x4218: mov edx,0x5
0x421d: xor edi,edi
0x421f: call 0x1280
0x4224: lea rdx,[rip+0xeac]
0x422b: mov rsi,rax
0x422e: mov edi,0x1
0x4233: xor eax,eax
0x4235: call 0x13c0
0x423a: lea rsi,[rip+0xeac]
0x4241: mov edx,0x5
0x4246: xor edi,edi
0x4248: call 0x1280
0x424d: lea rcx,[rip+0x834]
0x4254: lea rdx,[rip+0x6c3]
0x425b: mov rsi,rax
0x425e: mov edi,0x1
0x4263: xor eax,eax
0x4265: call 0x13c0
0x426a: mov rbx,qword ptr [rip+0x202e17]
0x4271: lea rsi,[rip+0x10a8]
0x4278: xor edi,edi
0x427a: mov edx,0x5
0x427f: call 0x1280
0x4284: mov rsi,rbx
0x4287: mov rdi,rax
0x428a: pop rbx
0x428b: jmp 0x1320
0x42aa: nop word ptr [rax+rax]
0x42b0: mov rax,rdi
0x42b3: mul rsi
0x42b6: mov rdi,rax
0x42b9: seto al
0x42bc: test rdi,rdi
0x42bf: js 0x42cb
0x42c1: movzx eax,al
0x42c4: test rax,rax
0x42c7: jne 0x42cb
0x42c9: jmp 0x4290
0x42cb: sub rsp,0x8
0x42cf: call 0x44e0
0x42d4: nop 
0x42d6: nop word ptr cs:[rax+rax]
0x42e0: jmp 0x4290
0x42f0: test rsi,rsi
0x42f3: push rbx
0x42f4: mov rbx,rsi
0x42f7: jne 0x42fe
0x42f9: test rdi,rdi
0x42fc: jne 0x4318
0x42fe: mov rsi,rbx
0x4301: call 0x13a0
0x4306: test rax,rax
0x4309: jne 0x4310
0x430b: test rbx,rbx
0x430e: jne 0x4321
0x4310: pop rbx
0x4311: ret 
0x4318: call 0x11e0
0x431d: xor eax,eax
0x431f: pop rbx
0x4320: ret 
0x4321: call 0x44e0
0x4326: nop word ptr cs:[rax+rax]
0x4330: mov rax,rsi
0x4333: mul rdx
0x4336: mov rsi,rax
0x4339: seto al
0x433c: test rsi,rsi
0x433f: js 0x434b
0x4341: movzx eax,al
0x4344: test rax,rax
0x4347: jne 0x434b
0x4349: jmp 0x42f0
0x434b: sub rsp,0x8
0x434f: call 0x44e0
0x4354: nop 
0x4356: nop word ptr cs:[rax+rax]
0x4360: test rdi,rdi
0x4363: mov r9,rdx
0x4366: mov rcx,qword ptr [rsi]
0x4369: je 0x43a0
0x436b: xor edx,edx
0x436d: movabsq rax,0x5555555555555554
0x4377: div r9
0x437a: cmp rax,rcx
0x437d: jbe 0x43bb
0x437f: mov rax,rcx
0x4382: shr rax, 1
0x4385: lea rcx,[rax+rcx+0x1]
0x438a: mov qword ptr [rsi],rcx
0x438d: imul rcx,r9
0x4391: mov rsi,rcx
0x4394: jmp 0x42f0
0x43a0: test rcx,rcx
0x43a3: je 0x43c8
0x43a5: mov rax,rcx
0x43a8: mul r9
0x43ab: seto dl
0x43ae: test rax,rax
0x43b1: movzx edx,dl
0x43b4: js 0x43bb
0x43b6: test rdx,rdx
0x43b9: je 0x438a
0x43bb: sub rsp,0x8
0x43bf: call 0x44e0
0x43c4: nop dword ptr [rax]
0x43c8: xor edx,edx
0x43ca: mov eax,0x80
0x43cf: xor r8d,r8d
0x43d2: div r9
0x43d5: test rax,rax
0x43d8: sete r8b
0x43dc: lea rcx,[r8+rax]
0x43e0: jmp 0x43a5
0x43f0: test rdi,rdi
0x43f3: mov rax,qword ptr [rsi]
0x43f6: je 0x4420
0x43f8: movabsq rdx,0x5555555555555553
0x4402: cmp rax,rdx
0x4405: ja 0x4431
0x4407: mov rdx,rax
0x440a: shr rdx, 1
0x440d: lea rax,[rdx+rax+0x1]
0x4412: mov qword ptr [rsi],rax
0x4415: mov rsi,rax
0x4418: jmp 0x42f0
0x4420: test rax,rax
0x4423: mov edx,0x80
0x4428: cmove rax,rdx
0x442c: test rax,rax
0x442f: jns 0x4412
0x4431: sub rsp,0x8
0x4435: call 0x44e0
0x443a: nop word ptr [rax+rax]
0x4440: push rbx
0x4441: mov rbx,rdi
0x4444: call 0x4290
0x4449: mov rdx,rbx
0x444c: xor esi,esi
0x444e: mov rdi,rax
0x4451: pop rbx
0x4452: jmp 0x1300
0x4460: mov rax,rdi
0x4463: sub rsp,0x8
0x4467: mul rsi
0x446a: seto dl
0x446d: test rax,rax
0x4470: js 0x4489
0x4472: movzx edx,dl
0x4475: test rdx,rdx
0x4478: jne 0x4489
0x447a: call 0x1330
0x447f: test rax,rax
0x4482: je 0x4489
0x4484: add rsp,0x8
0x4488: ret 
0x4489: call 0x44e0
0x448e: nop 
0x4490: push rbp
0x4491: push rbx
0x4492: mov rbp,rdi
0x4495: mov rdi,rsi
0x4498: mov rbx,rsi
0x449b: sub rsp,0x8
0x449f: call 0x4290
0x44a4: add rsp,0x8
0x44a8: mov rdx,rbx
0x44ab: mov rsi,rbp
0x44ae: pop rbx
0x44af: pop rbp
0x44b0: mov rdi,rax
0x44b3: jmp 0x1340
0x44c0: push rbx
0x44c1: mov rbx,rdi
0x44c4: call 0x12a0
0x44c9: mov rdi,rbx
0x44cc: lea rsi,[rax+0x1]
0x44d0: pop rbx
0x44d1: jmp 0x4490
0x4510: call 0x11f0
0x4515: nop word ptr cs:[rax+rax]
0x451f: nop 
0x4520: push r13
0x4522: push r12
0x4524: mov r13,rsi
0x4527: push rbp
0x4528: push rbx
0x4529: mov rbx,rdi
0x452c: mov r12,rdx
0x452f: sub rsp,0x18
0x4533: mov rax,qword ptr fs:0x28
0x453c: mov qword ptr [rsp+0x8],rax
0x4541: xor eax,eax
0x4543: lea rax,[rsp+0x4]
0x4548: test rdi,rdi
0x454b: cmove rbx,rax
0x454f: mov rdi,rbx
0x4552: call 0x12d0
0x4557: cmp rax,-0x3
0x455b: mov rbp,rax
0x455e: jbe 0x4580
0x4560: test r12,r12
0x4563: je 0x4580
0x4565: xor edi,edi
0x4567: call 0x4630
0x456c: test al,al
0x456e: jne 0x4580
0x4570: movzx eax,byte ptr [r13]
0x4575: mov ebp,0x1
0x457a: mov dword ptr [rbx],eax
0x457c: nop dword ptr [rax]
0x4580: mov rdx,qword ptr [rsp+0x8]
0x4585: xor rdx,qword ptr fs:0x28
0x458e: mov rax,rbp
0x4591: jne 0x459e
0x4593: add rsp,0x18
0x4597: pop rbx
0x4598: pop rbp
0x4599: pop r12
0x459b: pop r13
0x459d: ret 
0x459e: call 0x12b0
0x45a3: nop word ptr cs:[rax+rax]
0x45ad: nop dword ptr [rax]
0x45b0: push r12
0x45b2: push rbp
0x45b3: mov rbp,rdi
0x45b6: push rbx
0x45b7: call 0x1230
0x45bc: mov ebx,dword ptr [rbp]
0x45bf: mov rdi,rbp
0x45c2: mov r12,rax
0x45c5: call 0x46d0
0x45ca: and ebx,0x20
0x45cd: test ebx,ebx
0x45cf: jne 0x45e8
0x45d1: test eax,eax
0x45d3: je 0x45df
0x45d5: test r12,r12
0x45d8: mov eax,0xffffffff
0x45dd: je 0x4618
0x45df: pop rbx
0x45e0: pop rbp
0x45e1: pop r12
0x45e3: ret 
0x45e8: test eax,eax
0x45ea: jne 0x4608
0x45ec: call 0x1200
0x45f1: mov dword ptr [rax],0x0
0x45f7: mov eax,0xffffffff
0x45fc: pop rbx
0x45fd: pop rbp
0x45fe: pop r12
0x4600: ret 
0x4608: pop rbx
0x4609: mov eax,0xffffffff
0x460e: pop rbp
0x460f: pop r12
0x4611: ret 
0x4618: call 0x1200
0x461d: cmp dword ptr [rax],0x9
0x4620: pop rbx
0x4621: pop rbp
0x4622: pop r12
0x4624: setne al
0x4627: movzx eax,al
0x462a: neg eax
0x462c: ret 
0x4630: sub rsp,0x8
0x4634: xor esi,esi
0x4636: call 0x13b0
0x463b: mov rdx,rax
0x463e: mov eax,0x1
0x4643: test rdx,rdx
0x4646: je 0x4665
0x4648: lea rdi,[rip+0xd91]
0x464f: mov ecx,0x2
0x4654: mov rsi,rdx
0x4657: rep cmpsb [rsi],es:[rdi]
0x4659: seta cl
0x465c: sbb cl,0x0
0x465f: xor eax,eax
0x4661: test cl,cl
0x4663: jne 0x4670
0x4665: add rsp,0x8
0x4669: ret 
0x4670: lea rdi,[rip+0xd6b]
0x4677: mov ecx,0x6
0x467c: mov rsi,rdx
0x467f: rep cmpsb [rsi],es:[rdi]
0x4681: seta al
0x4684: sbb al,0x0
0x4686: test al,al
0x4688: setne al
0x468b: add rsp,0x8
0x468f: ret 
0x4690: sub rsp,0x8
0x4694: mov edi,0xe
0x4699: call 0x1380
0x469e: test rax,rax
0x46a1: je 0x46c0
0x46a3: cmp byte ptr [rax],0x0
0x46a6: lea rdx,[rip+0xd3b]
0x46ad: cmove rax,rdx
0x46b1: add rsp,0x8
0x46b5: ret 
0x46c0: lea rax,[rip+0xd21]
0x46c7: add rsp,0x8
0x46cb: ret 
0x46d0: push r12
0x46d2: push rbp
0x46d3: push rbx
0x46d4: mov rbx,rdi
0x46d7: call 0x1350
0x46dc: test eax,eax
0x46de: mov rdi,rbx
0x46e1: js 0x4737
0x46e3: call 0x1390
0x46e8: test eax,eax
0x46ea: jne 0x4718
0x46ec: mov rdi,rbx
0x46ef: call 0x4750
0x46f4: test eax,eax
0x46f6: je 0x4734
0x46f8: call 0x1200
0x46fd: mov r12d,dword ptr [rax]
0x4700: mov rdi,rbx
0x4703: mov rbp,rax
0x4706: call 0x1260
0x470b: test r12d,r12d
0x470e: jne 0x4740
0x4710: pop rbx
0x4711: pop rbp
0x4712: pop r12
0x4714: ret 
0x4718: mov rdi,rbx
0x471b: call 0x1350
0x4720: xor esi,esi
0x4722: mov edx,0x1
0x4727: mov edi,eax
0x4729: call 0x12f0
0x472e: cmp rax,-0x1
0x4732: jne 0x46ec
0x4734: mov rdi,rbx
0x4737: pop rbx
0x4738: pop rbp
0x4739: pop r12
0x473b: jmp 0x1260
0x4740: mov dword ptr [rbp],r12d
0x4744: mov eax,0xffffffff
0x4749: jmp 0x4710
0x4750: test rdi,rdi
0x4753: push rbx
0x4754: mov rbx,rdi
0x4757: je 0x476a
0x4759: call 0x1390
0x475e: test eax,eax
0x4760: je 0x476a
0x4762: test dword ptr [rbx],0x100
0x4768: jne 0x4778
0x476a: mov rdi,rbx
0x476d: pop rbx
0x476e: jmp 0x1370
0x4778: mov rdi,rbx
0x477b: mov edx,0x1
0x4780: xor esi,esi
0x4782: call 0x4790
0x4787: mov rdi,rbx
0x478a: pop rbx
0x478b: jmp 0x1370
0x4790: mov rax,qword ptr [rdi+0x8]
0x4794: cmp qword ptr [rdi+0x10],rax
0x4798: je 0x47a0
0x479a: jmp 0x13e0
0x47a0: mov rax,qword ptr [rdi+0x20]
0x47a4: cmp qword ptr [rdi+0x28],rax
0x47a8: jne 0x479a
0x47aa: cmp qword ptr [rdi+0x48],0x0
0x47af: jne 0x479a
0x47b1: push r12
0x47b3: push rbp
0x47b4: mov r12d,edx
0x47b7: push rbx
0x47b8: mov rbp,rsi
0x47bb: mov rbx,rdi
0x47be: call 0x1350
0x47c3: mov edx,r12d
0x47c6: mov rsi,rbp
0x47c9: mov edi,eax
0x47cb: call 0x12f0
0x47d0: cmp rax,-0x1
0x47d4: je 0x47e2
0x47d6: and dword ptr [rbx],-0x11
0x47d9: mov qword ptr [rbx+0x90],rax
0x47e0: xor eax,eax
0x47e2: pop rbx
0x47e3: pop rbp
0x47e4: pop r12
0x47e6: ret 
0x47f0: push r15
0x47f2: push r14
0x47f4: mov r15,rdx
0x47f7: push r13
0x47f9: push r12
0x47fb: lea r12,[rip+0x2023ae]
0x4802: push rbp
0x4803: lea rbp,[rip+0x2023ae]
0x480a: push rbx
0x480b: mov r13d,edi
0x480e: mov r14,rsi
0x4811: sub rbp,r12
0x4814: sub rsp,0x8
0x4818: sar rbp,0x3
0x481c: call 0x11b8
0x4821: test rbp,rbp
0x4824: je 0x4846
0x4826: xor ebx,ebx
0x4828: nop dword ptr [rax+rax]
0x4830: mov rdx,r15
0x4833: mov rsi,r14
0x4836: mov edi,r13d
0x4839: call qword ptr [r12+rbx*8]
0x483d: add rbx,0x1
0x4841: cmp rbp,rbx
0x4844: jne 0x4830
0x4846: add rsp,0x8
0x484a: pop rbx
0x484b: pop rbp
0x484c: pop r12
0x484e: pop r13
0x4850: pop r14
0x4852: pop r15
0x4854: ret 
0x4860: rep ret 
