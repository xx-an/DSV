0x11c0: sub rsp,0x8
0x11c4: mov rax,qword ptr [rip+0x205e05]
0x11cb: test rax,rax
0x11ce: je 0x11d2
0x11d0: call rax
0x11d2: add rsp,0x8
0x11d6: ret 
0x11e6: jmp qword ptr [rip+0x205c8c]
0x11f0: jmp qword ptr [rip+0x205c8a]
0x1240: jmp qword ptr [rip+0x205c62]
0x1250: jmp qword ptr [rip+0x205c5a]
0x1270: jmp qword ptr [rip+0x205c4a]
0x12b0: jmp qword ptr [rip+0x205c2a]
0x12e0: jmp qword ptr [rip+0x205c12]
0x1300: jmp qword ptr [rip+0x205c02]
0x1320: jmp qword ptr [rip+0x205bf2]
0x1340: jmp qword ptr [rip+0x205be2]
0x1350: jmp qword ptr [rip+0x205bda]
0x1360: jmp qword ptr [rip+0x205bd2]
0x1370: jmp qword ptr [rip+0x205bca]
0x1380: jmp qword ptr [rip+0x205bc2]
0x1390: jmp qword ptr [rip+0x205bba]
0x13a0: jmp qword ptr [rip+0x205bb2]
0x13f0: jmp qword ptr [rip+0x205b8a]
0x1440: jmp qword ptr [rip+0x205b62]
0x1450: jmp qword ptr [rip+0x205b5a]
0x1460: jmp qword ptr [rip+0x205b52]
0x1470: jmp qword ptr [rip+0x205b6a]
0x155f: mov edi,0x1
0x1564: call 0x1700
0x157e: lea rsi,[rip+0x3270]
0x1585: mov edx,0x5
0x158a: xor edi,edi
0x158c: mov rbp,rax
0x158f: call 0x1290
0x1594: mov rbx,rax
0x1597: call 0x1210
0x159c: mov esi,dword ptr [rax]
0x159e: mov rcx,rbp
0x15a1: mov rdx,rbx
0x15a4: mov edi,0x1
0x15a9: xor eax,eax
0x15ab: call 0x13e0
0x15ba: lea rsi,[rip+0x3223]
0x15c1: mov rbx,rax
0x15c4: mov edx,0x5
0x15c9: xor edi,edi
0x15cb: call 0x1290
0x15d0: xor edi,edi
0x15d2: mov rdx,rax
0x15d5: mov rcx,rbx
0x15d8: xor esi,esi
0x15da: xor eax,eax
0x15dc: call 0x13e0
0x15e1: mov edi,0x1
0x15e6: call 0x1700
0x15eb: nop dword ptr [rax+rax]
0x161a: hlt 
0x161b: nop dword ptr [rax+rax]
0x1620: lea rdi,[rip+0x205a59]
0x1627: push rbp
0x1628: lea rax,[rip+0x205a51]
0x162f: cmp rax,rdi
0x1632: mov rbp,rsp
0x1635: je 0x1650
0x1637: mov rax,qword ptr [rip+0x205982]
0x163e: test rax,rax
0x1641: je 0x1650
0x1643: pop rbp
0x1644: jmp rax
0x1650: pop rbp
0x1651: ret 
0x1660: lea rdi,[rip+0x205a19]
0x1667: lea rsi,[rip+0x205a12]
0x166e: push rbp
0x166f: sub rsi,rdi
0x1672: mov rbp,rsp
0x1675: sar rsi,0x3
0x1679: mov rax,rsi
0x167c: shr rax,0x3f
0x1680: add rsi,rax
0x1683: sar rsi, 1
0x1686: je 0x16a0
0x1688: mov rax,qword ptr [rip+0x205949]
0x168f: test rax,rax
0x1692: je 0x16a0
0x1694: pop rbp
0x1695: jmp rax
0x16a0: pop rbp
0x16a1: ret 
0x16c1: push rbp
0x16c2: mov rbp,rsp
0x16c5: je 0x16d3
0x16c7: mov rdi,qword ptr [rip+0x20593a]
0x16ce: call 0x1470
0x16d3: call 0x1620
0x16d8: mov byte ptr [rip+0x2059e9],0x1
0x16df: pop rbp
0x16e0: ret 
0x16f0: push rbp
0x16f1: mov rbp,rsp
0x16f4: pop rbp
0x16f5: jmp 0x1660
0x1a50: mov qword ptr [rip+0x205681],rdi
0x1a57: ret 
0x1a60: mov byte ptr [rip+0x205669],dil
0x1a67: ret 
0x1a70: push rbp
0x1a71: push rbx
0x1a72: sub rsp,0x8
0x1a76: mov rdi,qword ptr [rip+0x20560b]
0x1a7d: call 0x4410
0x1a82: test eax,eax
0x1a84: je 0x1a9c
0x1a86: call 0x1210
0x1a8b: cmp byte ptr [rip+0x20563e],0x0
0x1a92: mov rbx,rax
0x1a95: je 0x1ab3
0x1a97: cmp dword ptr [rax],0x20
0x1a9a: jne 0x1ab3
0x1a9c: mov rdi,qword ptr [rip+0x20561d]
0x1aa3: call 0x4410
0x1aa8: test eax,eax
0x1aaa: jne 0x1af2
0x1aac: add rsp,0x8
0x1ab0: pop rbx
0x1ab1: pop rbp
0x1ab2: ret 
0x1ab3: lea rsi,[rip+0x2eee]
0x1aba: xor edi,edi
0x1abc: mov edx,0x5
0x1ac1: call 0x1290
0x1ac6: mov rdi,qword ptr [rip+0x20560b]
0x1acd: mov rbp,rax
0x1ad0: test rdi,rdi
0x1ad3: je 0x1afd
0x1ad5: call 0x38b0
0x1ada: mov esi,dword ptr [rbx]
0x1adc: lea rdx,[rip+0x2ed1]
0x1ae3: mov rcx,rax
0x1ae6: mov r8,rbp
0x1ae9: xor edi,edi
0x1aeb: xor eax,eax
0x1aed: call 0x13e0
0x1af2: mov edi,dword ptr [rip+0x205520]
0x1af8: call 0x1240
0x1afd: mov esi,dword ptr [rbx]
0x1aff: lea rdx,[rip+0x2eb2]
0x1b06: mov rcx,rax
0x1b09: xor edi,edi
0x1b0b: xor eax,eax
0x1b0d: call 0x13e0
0x1b12: jmp 0x1af2
0x1b20: push r13
0x1b22: push r12
0x1b24: mov r13,r8
0x1b27: push rbp
0x1b28: push rbx
0x1b29: mov rbp,rdx
0x1b2c: mov r12,rcx
0x1b2f: sub rsp,0xe8
0x1b36: test al,al
0x1b38: je 0x1b74
0x1b3a: movaps xmmword ptr [rsp+0x60],xmm0
0x1b3f: movaps xmmword ptr [rsp+0x70],xmm1
0x1b44: movaps xmmword ptr [rsp+0x80],xmm2
0x1b4c: movaps xmmword ptr [rsp+0x90],xmm3
0x1b54: movaps xmmword ptr [rsp+0xa0],xmm4
0x1b5c: movaps xmmword ptr [rsp+0xb0],xmm5
0x1b64: movaps xmmword ptr [rsp+0xc0],xmm6
0x1b6c: movaps xmmword ptr [rsp+0xd0],xmm7
0x1b74: mov rax,qword ptr fs:0x28
0x1b7d: mov qword ptr [rsp+0x28],rax
0x1b82: xor eax,eax
0x1b84: cmp edi,0x2
0x1b87: mov ebx,dword ptr [rip+0x205513]
0x1b8d: mov dword ptr [rip+0x205509],0x0
0x1b97: je 0x1bd0
0x1b99: mov rax,qword ptr [rsp+0x28]
0x1b9e: xor rax,qword ptr fs:0x28
0x1ba7: mov dword ptr [rip+0x2054f3],ebx
0x1bad: mov dword ptr [rip+0x2054d9],0x0
0x1bb7: jne 0x1c5a
0x1bbd: add rsp,0xe8
0x1bc4: pop rbx
0x1bc5: pop rbp
0x1bc6: pop r12
0x1bc8: pop r13
0x1bca: ret 
0x1bd0: lea rcx,[rip+0x204fe9]
0x1bd7: lea rdx,[rip+0x2ddd]
0x1bde: xor r8d,r8d
0x1be1: mov qword ptr [rsp+0x8],r9
0x1be6: call 0x12d0
0x1beb: cmp eax,-0x1
0x1bee: je 0x1b99
0x1bf0: cmp eax,0x68
0x1bf3: mov r9,qword ptr [rsp+0x8]
0x1bf8: je 0x1c50
0x1bfa: cmp eax,0x76
0x1bfd: jne 0x1b99
0x1bff: lea rax,[rsp+0x110]
0x1c07: mov rdi,qword ptr [rip+0x20547a]
0x1c0e: lea r8,[rsp+0x10]
0x1c13: mov rcx,r13
0x1c16: mov rdx,r12
0x1c19: mov rsi,rbp
0x1c1c: mov qword ptr [rsp+0x18],rax
0x1c21: lea rax,[rsp+0x30]
0x1c26: mov dword ptr [rsp+0x10],0x30
0x1c2e: mov dword ptr [rsp+0x14],0x30
0x1c36: mov qword ptr [rsp+0x20],rax
0x1c3b: call 0x3f10
0x1c40: xor edi,edi
0x1c42: call 0x1410
0x1c47: nop word ptr [rax+rax]
0x1c50: xor edi,edi
0x1c52: call r9
0x1c55: jmp 0x1b99
0x1c5a: call 0x12c0
0x1c5f: nop 
0x1c84: movaps xmmword ptr [rsp+0x50],xmm0
0x1c89: movaps xmmword ptr [rsp+0x60],xmm1
0x1c8e: movaps xmmword ptr [rsp+0x70],xmm2
0x1c93: movaps xmmword ptr [rsp+0x80],xmm3
0x1c9b: movaps xmmword ptr [rsp+0x90],xmm4
0x1ca3: movaps xmmword ptr [rsp+0xa0],xmm5
0x1cab: movaps xmmword ptr [rsp+0xb0],xmm6
0x1cb3: movaps xmmword ptr [rsp+0xc0],xmm7
0x1d57: nop word ptr [rax+rax]
0x1d94: jmp 0x1d68
0x1d9b: nop dword ptr [rax+rax]
0x1e3f: nop 
0x1e40: push rbp
0x1e41: push rbx
0x1e42: mov rbp,rdi
0x1e45: mov ebx,esi
0x1e47: sub rsp,0x8
0x1e4b: call 0x44f0
0x1e50: movzx edx,byte ptr [rax]
0x1e53: and edx,-0x21
0x1e56: cmp dl,0x55
0x1e59: je 0x1ed0
0x1e5b: cmp dl,0x47
0x1e5e: je 0x1e80
0x1e60: lea rax,[rip+0x2bbc]
0x1e67: lea rdx,[rip+0x2bb7]
0x1e6e: cmp ebx,0x9
0x1e71: cmovne rax,rdx
0x1e75: add rsp,0x8
0x1e79: pop rbx
0x1e7a: pop rbp
0x1e7b: ret 
0x1e80: movzx edx,byte ptr [rax+0x1]
0x1e84: and edx,-0x21
0x1e87: cmp dl,0x42
0x1e8a: jne 0x1e60
0x1e8c: cmp byte ptr [rax+0x2],0x31
0x1e90: jne 0x1e60
0x1e92: cmp byte ptr [rax+0x3],0x38
0x1e96: jne 0x1e60
0x1e98: cmp byte ptr [rax+0x4],0x30
0x1e9c: jne 0x1e60
0x1e9e: cmp byte ptr [rax+0x5],0x33
0x1ea2: jne 0x1e60
0x1ea4: cmp byte ptr [rax+0x6],0x30
0x1ea8: jne 0x1e60
0x1eaa: cmp byte ptr [rax+0x7],0x0
0x1eae: jne 0x1e60
0x1eb0: cmp byte ptr [rbp],0x60
0x1eb4: lea rax,[rip+0x2b61]
0x1ebb: lea rdx,[rip+0x2b5e]
0x1ec2: cmovne rax,rdx
0x1ec6: add rsp,0x8
0x1eca: pop rbx
0x1ecb: pop rbp
0x1ecc: ret 
0x1ed0: movzx edx,byte ptr [rax+0x1]
0x1ed4: and edx,-0x21
0x1ed7: cmp dl,0x54
0x1eda: jne 0x1e60
0x1edc: movzx edx,byte ptr [rax+0x2]
0x1ee0: and edx,-0x21
0x1ee3: cmp dl,0x46
0x1ee6: jne 0x1e60
0x1eec: cmp byte ptr [rax+0x3],0x2d
0x1ef0: jne 0x1e60
0x1ef6: cmp byte ptr [rax+0x4],0x38
0x1efa: jne 0x1e60
0x1f00: cmp byte ptr [rax+0x5],0x0
0x1f04: jne 0x1e60
0x1f0a: cmp byte ptr [rbp],0x60
0x1f0e: lea rax,[rip+0x2aff]
0x1f15: lea rdx,[rip+0x2afc]
0x1f1c: cmovne rax,rdx
0x1f20: add rsp,0x8
0x1f24: pop rbx
0x1f25: pop rbp
0x1f26: ret 
0x2003: xor r11d,r11d
0x2006: mov rax,rbp
0x2009: mov r8d,r12d
0x200c: mov rbp,r11
0x200f: mov r11,rax
0x2012: nop word ptr [rax+rax]
0x2018: cmp r11,rbp
0x201b: setne r12b
0x201f: cmp r11,-0x1
0x2023: jne 0x2032
0x2025: mov rax,qword ptr [rsp+0x10]
0x202a: cmp byte ptr [rax+rbp],0x0
0x202e: setne r12b
0x2032: test r12b,r12b
0x2035: je 0x2690
0x203b: cmp dword ptr [rsp+0x8],0x2
0x2040: mov rdi,qword ptr [rsp+0x10]
0x2045: lea r9,[rdi+rbp]
0x2049: setne al
0x204c: and al,byte ptr [rsp+0xd]
0x2050: mov r10d,eax
0x2053: je 0x2100
0x2059: mov rax,qword ptr [rsp+0x18]
0x205e: test rax,rax
0x2061: je 0x2490
0x2067: cmp r11,-0x1
0x206b: lea rbx,[rbp+rax]
0x2070: jne 0x20a0
0x2072: cmp rax,0x1
0x2076: jbe 0x20a0
0x2078: mov byte ptr [rsp+0x38],r8b
0x207d: mov byte ptr [rsp+0x30],r10b
0x2082: mov qword ptr [rsp+0x28],r9
0x2087: call 0x12b0
0x208c: movzx r8d,byte ptr [rsp+0x38]
0x2092: movzx r10d,byte ptr [rsp+0x30]
0x2098: mov r11,rax
0x209b: mov r9,qword ptr [rsp+0x28]
0x20a0: cmp rbx,r11
0x20a3: mov byte ptr [rsp+0x28],r10b
0x20a8: ja 0x2660
0x20ae: mov rdx,qword ptr [rsp+0x18]
0x20b3: mov rsi,qword ptr [rsp+0x48]
0x20b8: mov rdi,r9
0x20bb: mov qword ptr [rsp+0x40],r11
0x20c0: mov byte ptr [rsp+0x38],r8b
0x20c5: mov qword ptr [rsp+0x30],r9
0x20ca: call 0x1320
0x20cf: test eax,eax
0x20d1: mov r9,qword ptr [rsp+0x30]
0x20d6: movzx r8d,byte ptr [rsp+0x38]
0x20dc: mov r11,qword ptr [rsp+0x40]
0x20e1: jne 0x2660
0x20e7: cmp byte ptr [rsp+0xf],0x0
0x20ec: movzx r10d,byte ptr [rsp+0x28]
0x20f2: jne 0x3075
0x20f8: nop dword ptr [rax+rax]
0x2100: movzx ebx,byte ptr [r9]
0x2104: cmp bl,0x7e
0x2107: ja 0x2428
0x210d: lea rcx,[rip+0x2998]
0x2114: movzx edx,bl
0x2117: movsxd rax,dword ptr [rcx+rdx*4]
0x211b: add rax,rcx
0x211e: jmp rax
0x2158: cmp byte ptr [rsp+0xd],0x1
0x215d: jne 0x2272
0x2163: test dl,dl
0x2165: jne 0x2272
0x216b: mov rsi,qword ptr [rsp+0x20]
0x2170: test rsi,rsi
0x2173: je 0x2189
0x2175: mov edx,ebx
0x2177: shr dl,0x5
0x217a: movzx edx,dl
0x217d: mov edx,dword ptr [rsi+rdx*4]
0x2180: btl edx,ebx
0x2183: jb 0x22d3
0x2189: test r10b,r10b
0x218c: jne 0x22d3
0x2192: xor eax,0x1
0x2195: add rbp,0x1
0x2199: and eax,r8d
0x219c: test al,al
0x219e: je 0x21c0
0x21a0: cmp r13,r15
0x21a3: jbe 0x21aa
0x21a5: mov byte ptr [r14+r15],0x27
0x21aa: lea rax,[r15+0x1]
0x21ae: cmp r13,rax
0x21b1: jbe 0x21b9
0x21b3: mov byte ptr [r14+r15+0x1],0x27
0x21b9: add r15,0x2
0x21bd: xor r8d,r8d
0x21c0: cmp r15,r13
0x21c3: jae 0x21c9
0x21c5: mov byte ptr [r14+r15],bl
0x21c9: movzx edi,byte ptr [rsp+0xe]
0x21ce: add r15,0x1
0x21d2: mov eax,0x0
0x21d7: test r12b,r12b
0x21da: cmove edi,eax
0x21dd: mov byte ptr [rsp+0xe],dil
0x21e2: jmp 0x2018
0x2272: cmp byte ptr [rsp+0xf],0x0
0x2277: jne 0x216b
0x227d: jmp 0x2189
0x22d3: cmp dword ptr [rsp+0x8],0x2
0x22d8: sete dl
0x22db: cmp byte ptr [rsp+0xf],0x0
0x22e0: mov eax,edx
0x22e2: jne 0x2b38
0x22e8: mov eax,r8d
0x22eb: xor eax,0x1
0x22ee: and al,dl
0x22f0: je 0x2321
0x22f2: cmp r13,r15
0x22f5: jbe 0x22fc
0x22f7: mov byte ptr [r14+r15],0x27
0x22fc: lea rdx,[r15+0x1]
0x2300: cmp r13,rdx
0x2303: jbe 0x230b
0x2305: mov byte ptr [r14+r15+0x1],0x24
0x230b: lea rdx,[r15+0x2]
0x230f: cmp r13,rdx
0x2312: jbe 0x231a
0x2314: mov byte ptr [r14+r15+0x2],0x27
0x231a: add r15,0x3
0x231e: mov r8d,eax
0x2321: cmp r13,r15
0x2324: jbe 0x232b
0x2326: mov byte ptr [r14+r15],0x5c
0x232b: add r15,0x1
0x232f: add rbp,0x1
0x2333: jmp 0x21c0
0x2420: xor r10d,r10d
0x2423: nop dword ptr [rax+rax]
0x2428: cmp qword ptr [rsp+0x58],0x1
0x242e: jne 0x27d8
0x2434: mov qword ptr [rsp+0x38],r11
0x2439: mov byte ptr [rsp+0x30],r8b
0x243e: mov byte ptr [rsp+0x28],r10b
0x2443: call 0x1460
0x2448: mov rcx,qword ptr [rax]
0x244b: movzx edx,bl
0x244e: movzx r10d,byte ptr [rsp+0x28]
0x2454: movzx r8d,byte ptr [rsp+0x30]
0x245a: mov r11,qword ptr [rsp+0x38]
0x245f: mov edi,0x1
0x2464: movzx eax,word ptr [rcx+rdx*2]
0x2468: and ax,0x4000
0x246c: setne r12b
0x2470: sete al
0x2473: and al,byte ptr [rsp+0xd]
0x2477: test al,al
0x2479: jne 0x2e11
0x247f: cmp dword ptr [rsp+0x8],0x2
0x2484: sete dl
0x2487: jmp 0x2158
0x2490: movzx ebx,byte ptr [r9]
0x2494: cmp bl,0x7e
0x2497: ja 0x2420
0x2499: lea rcx,[rip+0x2808]
0x24a0: movzx edx,bl
0x24a3: movsxd rax,dword ptr [rcx+rdx*4]
0x24a7: add rax,rcx
0x24aa: jmp rax
0x2660: xor r10d,r10d
0x2663: jmp 0x2100
0x2690: cmp dword ptr [rsp+0x8],0x2
0x2695: movzx ebx,byte ptr [rsp+0xf]
0x269a: mov r12d,r8d
0x269d: mov rbp,r11
0x26a0: sete dl
0x26a3: mov eax,ebx
0x26a5: test r15,r15
0x26a8: sete cl
0x26ab: and eax,edx
0x26ad: and al,cl
0x26af: jne 0x3116
0x26b5: mov eax,ebx
0x26b7: xor eax,0x1
0x26ba: and dl,al
0x26bc: je 0x302c
0x26c2: cmp byte ptr [rsp+0x7c],0x0
0x26c7: je 0x302a
0x26cd: cmp byte ptr [rsp+0xe],0x0
0x26d2: jne 0x30cd
0x26d8: test r13,r13
0x26db: sete al
0x26de: cmp qword ptr [rsp+0x50],0x0
0x26e4: setne dl
0x26e7: and al,dl
0x26e9: je 0x310c
0x26ef: mov r13,qword ptr [rsp+0x50]
0x26f4: lea rbx,[rip+0x232a]
0x26fb: mov byte ptr [r14],0x27
0x26ff: mov dword ptr [rsp+0x8],0x2
0x2707: mov r15d,0x1
0x270d: mov qword ptr [rsp+0x18],0x1
0x2716: mov byte ptr [rsp+0xf],0x0
0x271b: mov qword ptr [rsp+0x48],rbx
0x2720: mov byte ptr [rsp+0x7c],al
0x2724: jmp 0x2003
0x27d8: lea rax,[rsp+0xa0]
0x27e0: cmp r11,-0x1
0x27e4: mov qword ptr [rsp+0xa0],0x0
0x27f0: mov qword ptr [rsp+0x28],rax
0x27f5: jne 0x2824
0x27f7: mov rdi,qword ptr [rsp+0x10]
0x27fc: mov byte ptr [rsp+0x40],r8b
0x2801: mov byte ptr [rsp+0x38],r10b
0x2806: mov qword ptr [rsp+0x30],r9
0x280b: call 0x12b0
0x2810: movzx r8d,byte ptr [rsp+0x40]
0x2816: movzx r10d,byte ptr [rsp+0x38]
0x281c: mov r11,rax
0x281f: mov r9,qword ptr [rsp+0x30]
0x2824: lea rax,[rsp+0x9c]
0x282c: xor ecx,ecx
0x282e: mov byte ptr [rsp+0x7e],bl
0x2832: mov byte ptr [rsp+0x7d],r8b
0x2837: mov rbx,rcx
0x283a: mov qword ptr [rsp+0x88],r9
0x2842: mov qword ptr [rsp+0x38],rax
0x2847: mov byte ptr [rsp+0x7f],r10b
0x284c: mov qword ptr [rsp+0x80],r15
0x2854: mov qword ptr [rsp+0x40],r14
0x2859: mov qword ptr [rsp+0x70],r13
0x285e: mov qword ptr [rsp+0x30],r11
0x2863: mov rax,qword ptr [rsp+0x10]
0x2868: lea r14,[rbp+rbx]
0x286d: mov rdx,qword ptr [rsp+0x30]
0x2872: mov rcx,qword ptr [rsp+0x28]
0x2877: mov rdi,qword ptr [rsp+0x38]
0x287c: lea r13,[rax+r14]
0x2880: sub rdx,r14
0x2883: mov rsi,r13
0x2886: call 0x4380
0x288b: test rax,rax
0x288e: mov r15,rax
0x2891: je 0x28e1
0x2893: cmp rax,-0x1
0x2897: je 0x2eb5
0x289d: cmp rax,-0x2
0x28a1: je 0x2e41
0x28a7: cmp dword ptr [rsp+0x8],0x2
0x28ac: sete al
0x28af: and al,byte ptr [rsp+0xf]
0x28b3: jne 0x2a50
0x28b9: mov edi,dword ptr [rsp+0x9c]
0x28c0: call 0x1450
0x28c5: mov rdi,qword ptr [rsp+0x28]
0x28ca: test eax,eax
0x28cc: mov eax,0x0
0x28d1: cmove r12d,eax
0x28d5: add rbx,r15
0x28d8: call 0x1440
0x28dd: test eax,eax
0x28df: je 0x2863
0x28e1: mov edx,r12d
0x28e4: mov rdi,rbx
0x28e7: movzx r8d,byte ptr [rsp+0x7d]
0x28ed: xor edx,0x1
0x28f0: movzx ebx,byte ptr [rsp+0x7e]
0x28f5: movzx r10d,byte ptr [rsp+0x7f]
0x28fb: and dl,byte ptr [rsp+0xd]
0x28ff: mov r15,qword ptr [rsp+0x80]
0x2907: mov r14,qword ptr [rsp+0x40]
0x290c: mov r13,qword ptr [rsp+0x70]
0x2911: mov r11,qword ptr [rsp+0x30]
0x2916: cmp rdi,0x1
0x291a: jbe 0x2f1b
0x2920: mov rcx,rdi
0x2923: xor esi,esi
0x2925: movzx r9d,byte ptr [rsp+0xf]
0x292b: add rcx,rbp
0x292e: mov rdi,qword ptr [rsp+0x10]
0x2933: jmp 0x29ee
0x2940: cmp dword ptr [rsp+0x8],0x2
0x2945: sete al
0x2948: test r9b,r9b
0x294b: jne 0x2e00
0x2951: mov esi,r8d
0x2954: xor esi,0x1
0x2957: and al,sil
0x295a: je 0x298b
0x295c: cmp r13,r15
0x295f: jbe 0x2966
0x2961: mov byte ptr [r14+r15],0x27
0x2966: lea rsi,[r15+0x1]
0x296a: cmp r13,rsi
0x296d: jbe 0x2975
0x296f: mov byte ptr [r14+r15+0x1],0x24
0x2975: lea rsi,[r15+0x2]
0x2979: cmp r13,rsi
0x297c: jbe 0x2984
0x297e: mov byte ptr [r14+r15+0x2],0x27
0x2984: add r15,0x3
0x2988: mov r8d,eax
0x298b: cmp r13,r15
0x298e: jbe 0x2995
0x2990: mov byte ptr [r14+r15],0x5c
0x2995: lea rax,[r15+0x1]
0x2999: cmp r13,rax
0x299c: jbe 0x29ab
0x299e: mov eax,ebx
0x29a0: shr al,0x6
0x29a3: add eax,0x30
0x29a6: mov byte ptr [r14+r15+0x1],al
0x29ab: lea rax,[r15+0x2]
0x29af: cmp r13,rax
0x29b2: jbe 0x29c4
0x29b4: mov eax,ebx
0x29b6: shr al,0x3
0x29b9: and eax,0x7
0x29bc: add eax,0x30
0x29bf: mov byte ptr [r14+r15+0x2],al
0x29c4: and ebx,0x7
0x29c7: add rbp,0x1
0x29cb: add r15,0x3
0x29cf: add ebx,0x30
0x29d2: cmp rbp,rcx
0x29d5: jae 0x21c0
0x29db: mov esi,edx
0x29dd: cmp r13,r15
0x29e0: jbe 0x29e6
0x29e2: mov byte ptr [r14+r15],bl
0x29e6: movzx ebx,byte ptr [rdi+rbp]
0x29ea: add r15,0x1
0x29ee: test dl,dl
0x29f0: jne 0x2940
0x29f6: mov eax,esi
0x29f8: xor eax,0x1
0x29fb: and eax,r8d
0x29fe: test r10b,r10b
0x2a01: je 0x2a11
0x2a03: cmp r13,r15
0x2a06: jbe 0x2a0d
0x2a08: mov byte ptr [r14+r15],0x5c
0x2a0d: add r15,0x1
0x2a11: add rbp,0x1
0x2a15: cmp rbp,rcx
0x2a18: jae 0x219c
0x2a1e: test al,al
0x2a20: je 0x2e1e
0x2a26: cmp r13,r15
0x2a29: jbe 0x2a30
0x2a2b: mov byte ptr [r14+r15],0x27
0x2a30: lea rax,[r15+0x1]
0x2a34: cmp r13,rax
0x2a37: jbe 0x2a3f
0x2a39: mov byte ptr [r14+r15+0x1],0x27
0x2a3f: add r15,0x2
0x2a43: xor r10d,r10d
0x2a46: xor r8d,r8d
0x2a49: jmp 0x29dd
0x2a50: cmp r15,0x1
0x2a54: je 0x28b9
0x2a5a: mov rdi,qword ptr [rsp+0x10]
0x2a5f: lea rcx,[rdi+r15]
0x2a63: lea rdx,[rdi+r14+0x1]
0x2a68: lea r8,[rcx+r14]
0x2a6c: jmp 0x2a7d
0x2a70: add rdx,0x1
0x2a74: cmp r8,rdx
0x2a77: je 0x28b9
0x2a7d: movzx ecx,byte ptr [rdx]
0x2a80: sub ecx,0x5b
0x2a83: cmp cl,0x21
0x2a86: ja 0x2a70
0x2a88: mov esi,0x1
0x2a8d: shl rsi,cl
0x2a90: mov rcx,rsi
0x2a93: movabsq rsi,0x20000002b
0x2a9d: test rcx,rsi
0x2aa0: je 0x2a70
0x2aa2: mov r14,qword ptr [rsp+0x40]
0x2aa7: mov r13,qword ptr [rsp+0x70]
0x2aac: mov rbp,qword ptr [rsp+0x30]
0x2ab1: mov dword ptr [rsp+0x8],0x2
0x2ab9: cmp byte ptr [rsp+0xd],0x0
0x2abe: je 0x2ad0
0x2ac0: test al,al
0x2ac2: mov eax,0x4
0x2ac7: cmove eax,dword ptr [rsp+0x8]
0x2acc: mov dword ptr [rsp+0x8],eax
0x2ad0: sub rsp,0x8
0x2ad4: mov rcx,rbp
0x2ad7: mov rsi,r13
0x2ada: push qword ptr [rsp+0x68]
0x2ade: push qword ptr [rsp+0x78]
0x2ae2: mov rdi,r14
0x2ae5: push 0x0
0x2ae7: mov r9d,dword ptr [rsp+0x98]
0x2aef: mov r8d,dword ptr [rsp+0x28]
0x2af4: mov rdx,qword ptr [rsp+0x30]
0x2af9: and r9d,-0x3
0x2afd: call 0x1f30
0x2b02: add rsp,0x20
0x2b06: mov r15,rax
0x2b09: mov rbx,qword ptr [rsp+0xa8]
0x2b11: xor rbx,qword ptr fs:0x28
0x2b1a: mov rax,r15
0x2b1d: jne 0x3123
0x2b23: add rsp,0xb8
0x2b2a: pop rbx
0x2b2b: pop rbp
0x2b2c: pop r12
0x2b2e: pop r13
0x2b30: pop r14
0x2b32: pop r15
0x2b34: ret 
0x2b38: mov rbp,r11
0x2b3b: jmp 0x2ab9
0x2ba1: test r13,r13
0x2ba4: jne 0x313a
0x2baa: lea rax,[rip+0x1e74]
0x2bb1: mov qword ptr [rsp+0x50],0x0
0x2bba: mov byte ptr [rsp+0xe],0x1
0x2bbf: mov byte ptr [rsp+0x7c],0x0
0x2bc4: xor r12d,r12d
0x2bc7: mov byte ptr [rsp+0xf],0x0
0x2bcc: mov qword ptr [rsp+0x18],0x1
0x2bd5: mov qword ptr [rsp+0x48],rax
0x2bda: mov r15d,0x1
0x2be0: mov dword ptr [rsp+0x8],0x2
0x2be8: jmp 0x2003
0x2e00: movzx ebx,byte ptr [rsp+0xf]
0x2e05: mov rbp,r11
0x2e08: mov byte ptr [rsp+0xd],bl
0x2e0c: jmp 0x2ab9
0x2e11: movzx edx,byte ptr [rsp+0xd]
0x2e16: xor r12d,r12d
0x2e19: jmp 0x2920
0x2e1e: xor r10d,r10d
0x2e21: jmp 0x29dd
0x2e41: mov r11,qword ptr [rsp+0x30]
0x2e46: mov rsi,r14
0x2e49: mov rcx,r13
0x2e4c: mov rax,rbx
0x2e4f: mov rdi,rbx
0x2e52: movzx r8d,byte ptr [rsp+0x7d]
0x2e58: movzx ebx,byte ptr [rsp+0x7e]
0x2e5d: mov r9,qword ptr [rsp+0x88]
0x2e65: cmp rsi,r11
0x2e68: movzx r10d,byte ptr [rsp+0x7f]
0x2e6e: mov r15,qword ptr [rsp+0x80]
0x2e76: mov r14,qword ptr [rsp+0x40]
0x2e7b: mov r13,qword ptr [rsp+0x70]
0x2e80: jae 0x2ea8
0x2e82: cmp byte ptr [rcx],0x0
0x2e85: jne 0x2e97
0x2e87: jmp 0x2ea8
0x2e90: cmp byte ptr [r9+rax],0x0
0x2e95: je 0x2ea5
0x2e97: add rax,0x1
0x2e9b: lea rdx,[rbp+rax]
0x2ea0: cmp r11,rdx
0x2ea3: ja 0x2e90
0x2ea5: mov rdi,rax
0x2ea8: movzx edx,byte ptr [rsp+0xd]
0x2ead: xor r12d,r12d
0x2eb0: jmp 0x2916
0x2eb5: mov rdi,rbx
0x2eb8: movzx r8d,byte ptr [rsp+0x7d]
0x2ebe: movzx ebx,byte ptr [rsp+0x7e]
0x2ec3: movzx r10d,byte ptr [rsp+0x7f]
0x2ec9: mov r15,qword ptr [rsp+0x80]
0x2ed1: xor r12d,r12d
0x2ed4: mov r14,qword ptr [rsp+0x40]
0x2ed9: mov r13,qword ptr [rsp+0x70]
0x2ede: mov r11,qword ptr [rsp+0x30]
0x2ee3: movzx edx,byte ptr [rsp+0xd]
0x2ee8: jmp 0x2916
0x2f1b: mov eax,edx
0x2f1d: jmp 0x2477
0x302a: mov eax,edx
0x302c: mov rbx,qword ptr [rsp+0x48]
0x3031: test rbx,rbx
0x3034: je 0x3062
0x3036: test al,al
0x3038: je 0x3062
0x303a: movzx ecx,byte ptr [rbx]
0x303d: mov rax,rbx
0x3040: test cl,cl
0x3042: je 0x3062
0x3044: mov rdx,r15
0x3047: sub rax,r15
0x304a: cmp r13,rdx
0x304d: jbe 0x3053
0x304f: mov byte ptr [r14+rdx],cl
0x3053: add rdx,0x1
0x3057: movzx ecx,byte ptr [rax+rdx]
0x305b: test cl,cl
0x305d: jne 0x304a
0x305f: mov r15,rdx
0x3062: cmp r13,r15
0x3065: jbe 0x2b09
0x306b: mov byte ptr [r14+r15],0x0
0x3070: jmp 0x2b09
0x3075: cmp dword ptr [rsp+0x8],0x2
0x307a: movzx ebx,byte ptr [rsp+0xf]
0x307f: mov rbp,r11
0x3082: sete al
0x3085: mov byte ptr [rsp+0xd],bl
0x3089: jmp 0x2ab9
0x30cd: sub rsp,0x8
0x30d1: mov r8d,0x5
0x30d7: mov rcx,r11
0x30da: push qword ptr [rsp+0x68]
0x30de: push qword ptr [rsp+0x78]
0x30e2: mov rdi,r14
0x30e5: push qword ptr [rsp+0x38]
0x30e9: mov r9d,dword ptr [rsp+0x98]
0x30f1: mov rdx,qword ptr [rsp+0x30]
0x30f6: mov rsi,qword ptr [rsp+0x70]
0x30fb: call 0x1f30
0x3100: add rsp,0x20
0x3104: mov r15,rax
0x3107: jmp 0x2b09
0x310c: movzx eax,byte ptr [rsp+0x7c]
0x3111: jmp 0x302c
0x3116: mov dword ptr [rsp+0x8],0x2
0x311e: jmp 0x2ab9
0x3123: call 0x12c0
0x3128: mov byte ptr [rsp+0xd],0x0
0x312d: jmp 0x2ba1
0x313a: mov byte ptr [rsp+0xe],0x1
0x313f: xor eax,eax
0x3141: xor r12d,r12d
0x3144: mov qword ptr [rsp+0x50],0x0
0x314d: jmp 0x26f4
0x3164: nop 
0x3166: nop word ptr cs:[rax+rax]
0x325c: add rsp,0x20
0x3260: mov r11,qword ptr [rsp+0x10]
0x3265: cmp r11,rax
0x3268: ja 0x32d1
0x326a: lea rsi,[rax+0x1]
0x326e: lea rax,[rip+0x203e8b]
0x3275: cmp r12,rax
0x3278: mov qword ptr [rbx],rsi
0x327b: je 0x328f
0x327d: mov rdi,r12
0x3280: mov qword ptr [rsp+0x10],rsi
0x3285: call 0x11f0
0x328a: mov rsi,qword ptr [rsp+0x10]
0x328f: mov rdi,rsi
0x3292: mov qword ptr [rsp+0x10],rsi
0x3297: call 0x40f0
0x329c: sub rsp,0x8
0x32a0: mov qword ptr [rbx+0x8],rax
0x32a4: mov r8d,dword ptr [rbp]
0x32a8: push qword ptr [rbp+0x30]
0x32ab: push qword ptr [rbp+0x28]
0x32ae: mov rcx,r14
0x32b1: push r15
0x32b3: mov r9d,dword ptr [rsp+0x3c]
0x32b8: mov rdi,rax
0x32bb: mov rdx,qword ptr [rsp+0x28]
0x32c0: mov rsi,qword ptr [rsp+0x30]
0x32c5: mov r12,rax
0x32c8: call 0x1f30
0x32cd: add rsp,0x20
0x32d1: mov eax,dword ptr [rsp+0x18]
0x32d5: mov dword ptr [r13],eax
0x32d9: add rsp,0x28
0x32dd: mov rax,r12
0x32e0: pop rbx
0x32e1: pop rbp
0x32e2: pop r12
0x32e4: pop r13
0x32e6: pop r14
0x32e8: pop r15
0x32ea: ret 
0x3311: call 0x1200
0x3316: call 0x4340
0x331b: nop dword ptr [rax+rax]
0x3320: push r12
0x3322: push rbp
0x3323: push rbx
0x3324: mov rbx,rdi
0x3327: call 0x1210
0x332c: mov r12d,dword ptr [rax]
0x332f: mov rbp,rax
0x3332: lea rax,[rip+0x203ec7]
0x3339: test rbx,rbx
0x333c: mov esi,0x38
0x3341: cmove rbx,rax
0x3345: mov rdi,rbx
0x3348: call 0x42f0
0x334d: mov dword ptr [rbp],r12d
0x3351: pop rbx
0x3352: pop rbp
0x3353: pop r12
0x3355: ret 
0x3360: lea rax,[rip+0x203e99]
0x3367: test rdi,rdi
0x336a: cmove rdi,rax
0x336e: mov eax,dword ptr [rdi]
0x3370: ret 
0x3380: lea rax,[rip+0x203e79]
0x3387: test rdi,rdi
0x338a: cmove rdi,rax
0x338e: mov dword ptr [rdi],esi
0x3390: ret 
0x33a0: lea rax,[rip+0x203e59]
0x33a7: test rdi,rdi
0x33aa: mov ecx,esi
0x33ac: cmove rdi,rax
0x33b0: mov eax,esi
0x33b2: and ecx,0x1f
0x33b5: shr al,0x5
0x33b8: movzx eax,al
0x33bb: lea rdi,[rdi+rax*4+0x8]
0x33c0: mov esi,dword ptr [rdi]
0x33c2: mov eax,esi
0x33c4: shr eax,cl
0x33c6: xor edx,eax
0x33c8: and eax,0x1
0x33cb: and edx,0x1
0x33ce: shl edx,cl
0x33d0: xor edx,esi
0x33d2: mov dword ptr [rdi],edx
0x33d4: ret 
0x33e0: lea rax,[rip+0x203e19]
0x33e7: test rdi,rdi
0x33ea: cmove rdi,rax
0x33ee: mov eax,dword ptr [rdi+0x4]
0x33f1: mov dword ptr [rdi+0x4],esi
0x33f4: ret 
0x3400: lea rax,[rip+0x203df9]
0x3407: test rdi,rdi
0x340a: cmove rdi,rax
0x340e: test rsi,rsi
0x3411: mov dword ptr [rdi],0xa
0x3417: je 0x3427
0x3419: test rdx,rdx
0x341c: je 0x3427
0x341e: mov qword ptr [rdi+0x28],rsi
0x3422: mov qword ptr [rdi+0x30],rdx
0x3426: ret 
0x3427: sub rsp,0x8
0x342b: call 0x1200
0x3430: push r15
0x3432: push r14
0x3434: lea rax,[rip+0x203dc5]
0x343b: push r13
0x343d: push r12
0x343f: mov r13,rdi
0x3442: push rbp
0x3443: push rbx
0x3444: mov rbx,r8
0x3447: mov r14,rsi
0x344a: mov r15,rdx
0x344d: sub rsp,0x18
0x3451: test r8,r8
0x3454: cmove rbx,rax
0x3458: mov qword ptr [rsp+0x8],rcx
0x345d: call 0x1210
0x3462: mov r12d,dword ptr [rax]
0x3465: mov rbp,rax
0x3468: lea rax,[rbx+0x8]
0x346c: sub rsp,0x8
0x3470: mov r9d,dword ptr [rbx+0x4]
0x3474: push qword ptr [rbx+0x30]
0x3477: mov r8d,dword ptr [rbx]
0x347a: push qword ptr [rbx+0x28]
0x347d: mov rdx,r15
0x3480: push rax
0x3481: mov rcx,qword ptr [rsp+0x28]
0x3486: mov rsi,r14
0x3489: mov rdi,r13
0x348c: call 0x1f30
0x3491: mov dword ptr [rbp],r12d
0x3495: add rsp,0x38
0x3499: pop rbx
0x349a: pop rbp
0x349b: pop r12
0x349d: pop r13
0x349f: pop r14
0x34a1: pop r15
0x34a3: ret 
0x34b0: push r15
0x34b2: push r14
0x34b4: lea rax,[rip+0x203d45]
0x34bb: push r13
0x34bd: push r12
0x34bf: mov r12,rdx
0x34c2: push rbp
0x34c3: push rbx
0x34c4: mov rbx,rcx
0x34c7: mov r14,rdi
0x34ca: mov r15,rsi
0x34cd: sub rsp,0x38
0x34d1: test rcx,rcx
0x34d4: cmove rbx,rax
0x34d8: xor ebp,ebp
0x34da: call 0x1210
0x34df: test r12,r12
0x34e2: mov r13,rax
0x34e5: mov eax,dword ptr [rax]
0x34e7: sete bpl
0x34eb: or ebp,dword ptr [rbx+0x4]
0x34ee: lea r10,[rbx+0x8]
0x34f2: sub rsp,0x8
0x34f6: mov r8d,dword ptr [rbx]
0x34f9: mov rcx,r15
0x34fc: mov dword ptr [rsp+0x14],eax
0x3500: push qword ptr [rbx+0x30]
0x3503: mov rdx,r14
0x3506: push qword ptr [rbx+0x28]
0x3509: push r10
0x350b: xor esi,esi
0x350d: mov r9d,ebp
0x3510: xor edi,edi
0x3512: mov qword ptr [rsp+0x40],r10
0x3517: call 0x1f30
0x351c: lea rsi,[rax+0x1]
0x3520: mov qword ptr [rsp+0x48],rax
0x3525: add rsp,0x20
0x3529: mov rdi,rsi
0x352c: mov qword ptr [rsp+0x18],rsi
0x3531: call 0x40f0
0x3536: mov qword ptr [rsp+0x10],rax
0x353b: sub rsp,0x8
0x353f: push qword ptr [rbx+0x30]
0x3542: push qword ptr [rbx+0x28]
0x3545: mov r10,qword ptr [rsp+0x38]
0x354a: mov r9d,ebp
0x354d: mov r8d,dword ptr [rbx]
0x3550: mov rcx,r15
0x3553: mov rdx,r14
0x3556: mov rdi,rax
0x3559: push r10
0x355b: mov rsi,qword ptr [rsp+0x38]
0x3560: call 0x1f30
0x3565: mov eax,dword ptr [rsp+0x2c]
0x3569: add rsp,0x20
0x356d: test r12,r12
0x3570: mov dword ptr [r13],eax
0x3574: je 0x357f
0x3576: mov r11,qword ptr [rsp+0x28]
0x357b: mov qword ptr [r12],r11
0x357f: mov rax,qword ptr [rsp+0x10]
0x3584: add rsp,0x38
0x3588: pop rbx
0x3589: pop rbp
0x358a: pop r12
0x358c: pop r13
0x358e: pop r14
0x3590: pop r15
0x3592: ret 
0x35a0: mov rcx,rdx
0x35a3: xor edx,edx
0x35a5: jmp 0x34b0
0x35b0: mov eax,dword ptr [rip+0x203aa2]
0x35b6: push r12
0x35b8: mov r12,qword ptr [rip+0x203aa1]
0x35bf: push rbp
0x35c0: push rbx
0x35c1: cmp eax,0x1
0x35c4: jle 0x35f1
0x35c6: sub eax,0x2
0x35c9: lea rbx,[r12+0x18]
0x35ce: shl rax,0x4
0x35d2: lea rbp,[r12+rax+0x28]
0x35d7: nop word ptr [rax+rax]
0x35e0: mov rdi,qword ptr [rbx]
0x35e3: add rbx,0x10
0x35e7: call 0x11f0
0x35ec: cmp rbx,rbp
0x35ef: jne 0x35e0
0x35f1: mov rdi,qword ptr [r12+0x8]
0x35f6: lea rbx,[rip+0x203b03]
0x35fd: cmp rdi,rbx
0x3600: je 0x3619
0x3602: call 0x11f0
0x3603: jmp 0x490035e3
0x3607: mov qword ptr [rip+0x203a5e],0x100
0x3612: mov qword ptr [rip+0x203a5f],rbx
0x3619: lea rbx,[rip+0x203a50]
0x3620: cmp r12,rbx
0x3623: je 0x3634
0x3625: mov rdi,r12
0x3628: call 0x11f0
0x362d: mov qword ptr [rip+0x203a2c],rbx
0x3634: pop rbx
0x3635: mov dword ptr [rip+0x203a19],0x1
0x363f: pop rbp
0x3640: pop r12
0x3642: ret 
0x3650: lea rcx,[rip+0x203ba9]
0x3657: mov rdx,-0x1
0x365e: jmp 0x3170
0x3670: lea rcx,[rip+0x203b89]
0x3677: jmp 0x3170
0x3680: lea rcx,[rip+0x203b79]
0x3687: mov rsi,rdi
0x368a: mov rdx,-0x1
0x3691: xor edi,edi
0x3693: jmp 0x3170
0x36a0: lea rcx,[rip+0x203b59]
0x36a7: mov rdx,rsi
0x36aa: mov rsi,rdi
0x36ad: xor edi,edi
0x36af: jmp 0x3170
0x372f: mov rcx,qword ptr [rsp+0x38]
0x3734: xor rcx,qword ptr fs:0x28
0x373d: jne 0x3749
0x373f: add rsp,0x48
0x3743: ret 
0x3744: call 0x1200
0x3749: call 0x12c0
0x374e: nop 
0x3750: sub rsp,0x48
0x3754: mov rax,rdx
0x3757: mov rdx,rcx
0x375a: mov rcx,qword ptr fs:0x28
0x3763: mov qword ptr [rsp+0x38],rcx
0x3768: xor ecx,ecx
0x376a: cmp esi,0xa
0x376d: je 0x37d0
0x376f: mov dword ptr [rsp],esi
0x3772: mov rcx,rsp
0x3775: mov rsi,rax
0x3778: mov qword ptr [rsp+0x4],0x0
0x3781: mov qword ptr [rsp+0xc],0x0
0x378a: mov qword ptr [rsp+0x14],0x0
0x3793: mov qword ptr [rsp+0x1c],0x0
0x379c: mov qword ptr [rsp+0x24],0x0
0x37a5: mov qword ptr [rsp+0x2c],0x0
0x37ae: mov dword ptr [rsp+0x34],0x0
0x37b6: call 0x3170
0x37bb: mov rdx,qword ptr [rsp+0x38]
0x37c0: xor rdx,qword ptr fs:0x28
0x37c9: jne 0x37d5
0x37cb: add rsp,0x48
0x37cf: ret 
0x37d0: call 0x1200
0x37d5: call 0x12c0
0x37da: nop word ptr [rax+rax]
0x37f0: mov rcx,rdx
0x37f3: mov rdx,rsi
0x37f6: mov esi,edi
0x37f8: xor edi,edi
0x37fa: jmp 0x3750
0x3800: sub rsp,0x48
0x3804: mov ecx,edx
0x3806: mov rax,qword ptr fs:0x28
0x380f: mov qword ptr [rsp+0x38],rax
0x3814: xor eax,eax
0x3816: mov rax,qword ptr [rip+0x203a13]
0x381d: mov r8,rsp
0x3820: and ecx,0x1f
0x3823: movdqa xmm0,xmmword ptr [rip+0x2039d5]
0x382b: mov qword ptr [rsp+0x30],rax
0x3830: mov eax,edx
0x3832: movaps xmmword ptr [rsp],xmm0
0x3836: shr al,0x5
0x3839: movzx eax,al
0x383c: lea r9,[r8+rax*4+0x8]
0x3841: movdqa xmm0,xmmword ptr [rip+0x2039c7]
0x3849: movaps xmmword ptr [rsp+0x10],xmm0
0x384e: movdqa xmm0,xmmword ptr [rip+0x2039ca]
0x3856: movaps xmmword ptr [rsp+0x20],xmm0
0x385b: mov edx,dword ptr [r9]
0x385e: mov eax,edx
0x3860: shr eax,cl
0x3862: not eax
0x3864: and eax,0x1
0x3867: shl eax,cl
0x3869: mov rcx,r8
0x386c: xor eax,edx
0x386e: mov rdx,rsi
0x3871: mov rsi,rdi
0x3874: mov dword ptr [r9],eax
0x3877: xor edi,edi
0x3879: call 0x3170
0x387e: mov rsi,qword ptr [rsp+0x38]
0x3883: xor rsi,qword ptr fs:0x28
0x388c: jne 0x3893
0x388e: add rsp,0x48
0x3892: ret 
0x3893: call 0x12c0
0x3898: nop dword ptr [rax+rax]
0x38a0: movsx edx,sil
0x38a4: mov rsi,-0x1
0x38ab: jmp 0x3800
0x38b0: mov edx,0x3a
0x38b5: mov rsi,-0x1
0x38bc: jmp 0x3800
0x38d0: mov edx,0x3a
0x38d5: jmp 0x3800
0x38e0: sub rsp,0x48
0x38e4: mov rax,rdx
0x38e7: mov rdx,qword ptr fs:0x28
0x38f0: mov qword ptr [rsp+0x38],rdx
0x38f5: xor edx,edx
0x38f7: cmp esi,0xa
0x38fa: je 0x3964
0x38fc: mov dword ptr [rsp],esi
0x38ff: mov rcx,rsp
0x3902: mov rdx,-0x1
0x3909: mov rsi,rax
0x390c: mov qword ptr [rsp+0x4],0x0
0x3915: mov qword ptr [rsp+0xc],0x4000000
0x391e: mov qword ptr [rsp+0x14],0x0
0x3927: mov qword ptr [rsp+0x1c],0x0
0x3930: mov qword ptr [rsp+0x24],0x0
0x3939: mov qword ptr [rsp+0x2c],0x0
0x3942: mov dword ptr [rsp+0x34],0x0
0x394a: call 0x3170
0x394f: mov rcx,qword ptr [rsp+0x38]
0x3954: xor rcx,qword ptr fs:0x28
0x395d: jne 0x3969
0x395f: add rsp,0x48
0x3963: ret 
0x3964: call 0x1200
0x3969: call 0x12c0
0x396e: nop 
0x3970: sub rsp,0x48
0x3974: mov r9,rcx
0x3977: mov rcx,qword ptr [rip+0x2038b2]
0x397e: movdqa xmm0,xmmword ptr [rip+0x20387a]
0x3986: mov rax,qword ptr fs:0x28
0x398f: mov qword ptr [rsp+0x38],rax
0x3994: xor eax,eax
0x3996: movaps xmmword ptr [rsp],xmm0
0x399a: test rsi,rsi
0x399d: mov qword ptr [rsp+0x30],rcx
0x39a2: mov dword ptr [rsp],0xa
0x39a9: movdqa xmm0,xmmword ptr [rip+0x20385f]
0x39b1: movaps xmmword ptr [rsp+0x10],xmm0
0x39b6: movdqa xmm0,xmmword ptr [rip+0x203862]
0x39be: movaps xmmword ptr [rsp+0x20],xmm0
0x39c3: je 0x39f7
0x39c5: test rdx,rdx
0x39c8: je 0x39f7
0x39ca: mov qword ptr [rsp+0x28],rsi
0x39cf: mov qword ptr [rsp+0x30],rdx
0x39d4: mov rcx,rsp
0x39d7: mov rdx,r8
0x39da: mov rsi,r9
0x39dd: call 0x3170
0x39e2: mov rdi,qword ptr [rsp+0x38]
0x39e7: xor rdi,qword ptr fs:0x28
0x39f0: jne 0x39fc
0x39f2: add rsp,0x48
0x39f6: ret 
0x39f7: call 0x1200
0x39fc: call 0x12c0
0x3a01: nop dword ptr [rax+rax]
0x3a06: nop word ptr cs:[rax+rax]
0x3a10: mov r8,-0x1
0x3a17: jmp 0x3970
0x3a20: mov rcx,rdx
0x3a23: mov r8,-0x1
0x3a2a: mov rdx,rsi
0x3a2d: mov rsi,rdi
0x3a30: xor edi,edi
0x3a32: jmp 0x3970
0x3a40: mov r8,rcx
0x3a43: mov rcx,rdx
0x3a46: mov rdx,rsi
0x3a49: mov rsi,rdi
0x3a4c: xor edi,edi
0x3a4e: jmp 0x3970
0x3a60: lea rcx,[rip+0x2035b9]
0x3a67: jmp 0x3170
0x3a70: lea rcx,[rip+0x2035a9]
0x3a77: mov rdx,rsi
0x3a7a: mov rsi,rdi
0x3a7d: xor edi,edi
0x3a7f: jmp 0x3170
0x3a90: lea rcx,[rip+0x203589]
0x3a97: mov rdx,-0x1
0x3a9e: jmp 0x3170
0x3c08: mov r8,rcx
0x3c0b: mov rcx,rdx
0x3c0e: lea rdx,[rip+0x12df]
0x3c15: mov esi,0x1
0x3c1a: xor eax,eax
0x3c1c: call 0x1430
0x3c21: jmp 0x3b0c
0x3e1d: push r12
0x3e1f: push r15
0x3e21: push r14
0x3e23: mov r8,qword ptr [rsp+0x20]
0x3e28: mov rcx,rbx
0x3e2b: mov rdx,rax
0x3e2e: mov rdi,rbp
0x3e31: mov esi,0x1
0x3e36: xor eax,eax
0x3e38: call 0x1430
0x3e3d: add rsp,0x20
0x3e41: add rsp,0x28
0x3e45: pop rbx
0x3e46: pop rbp
0x3e47: pop r12
0x3e49: pop r13
0x3e4b: pop r14
0x3e4d: pop r15
0x3e4f: ret 
0x3e89: push r12
0x3e8b: push r15
0x3e8d: push r14
0x3e8f: mov r9,qword ptr [rsp+0x28]
0x3e94: jmp 0x3e23
0x3ef0: xor r9d,r9d
0x3ef3: cmp qword ptr [r8],0x0
0x3ef7: je 0x3f0b
0x3ef9: nop dword ptr [rax]
0x3f00: add r9,0x1
0x3f04: cmp qword ptr [r8+r9*8],0x0
0x3f09: jne 0x3f00
0x3f0b: jmp 0x3ad0
0x3f38: mov r11d,eax
0x3f3b: add r11,qword ptr [r10+0x10]
0x3f3f: add eax,0x8
0x3f42: mov dword ptr [r10],eax
0x3f90: push rbp
0x3f91: push rbx
0x3f92: mov r10d,0x20
0x3f98: xor r11d,r11d
0x3f9b: sub rsp,0xb8
0x3fa2: mov rax,qword ptr fs:0x28
0x3fab: mov qword ptr [rsp+0x78],rax
0x3fb0: xor eax,eax
0x3fb2: lea rax,[rsp+0xd0]
0x3fba: mov qword ptr [rsp+0xa0],r8
0x3fc2: lea rbx,[rsp+0xd0]
0x3fca: lea r8,[rsp+0x20]
0x3fcf: mov qword ptr [rsp+0xa8],r9
0x3fd7: mov dword ptr [rsp+0x8],0x20
0x3fdf: mov qword ptr [rsp+0x10],rax
0x3fe4: lea rax,[rsp+0x80]
0x3fec: xor r9d,r9d
0x3fef: mov qword ptr [rsp+0x18],rax
0x3ff4: mov rbp,rax
0x3ff7: nop word ptr [rax+rax]
0x4000: cmp r10d,0x2f
0x4004: ja 0x405c
0x4006: mov eax,r10d
0x4009: mov r11d,0x1
0x400f: add r10d,0x8
0x4013: add rax,rbp
0x4016: mov rax,qword ptr [rax]
0x4019: test rax,rax
0x401c: mov qword ptr [r8+r9*8],rax
0x4020: je 0x402c
0x4022: add r9,0x1
0x4026: cmp r9,0xa
0x402a: jne 0x4000
0x402c: test r11b,r11b
0x402f: jne 0x4055
0x4031: call 0x3ad0
0x4036: mov rax,qword ptr [rsp+0x78]
0x403b: xor rax,qword ptr fs:0x28
0x4044: jne 0x4050
0x4046: add rsp,0xb8
0x404d: pop rbx
0x404e: pop rbp
0x404f: ret 
0x4050: call 0x12c0
0x4055: mov dword ptr [rsp+0x8],r10d
0x405a: jmp 0x4031
0x405c: mov rax,rbx
0x405f: add rbx,0x8
0x4063: jmp 0x4016
0x4070: push rbx
0x4071: lea rsi,[rip+0xeca]
0x4078: mov edx,0x5
0x407d: xor edi,edi
0x407f: call 0x1290
0x4084: lea rdx,[rip+0xecc]
0x408b: mov rsi,rax
0x408e: mov edi,0x1
0x4093: xor eax,eax
0x4095: call 0x13d0
0x409a: lea rsi,[rip+0xecc]
0x40a1: mov edx,0x5
0x40a6: xor edi,edi
0x40a8: call 0x1290
0x40ad: lea rcx,[rip+0x84c]
0x40b4: lea rdx,[rip+0x6c6]
0x40bb: mov rsi,rax
0x40be: mov edi,0x1
0x40c3: xor eax,eax
0x40c5: call 0x13d0
0x40ca: mov rbx,qword ptr [rip+0x202fb7]
0x40d1: lea rsi,[rip+0x10c8]
0x40d8: xor edi,edi
0x40da: mov edx,0x5
0x40df: call 0x1290
0x40e4: mov rsi,rbx
0x40e7: mov rdi,rax
0x40ea: pop rbx
0x40eb: jmp 0x1330
0x40f0: push rbx
0x40f1: mov rbx,rdi
0x40f4: call 0x1370
0x40f9: test rax,rax
0x40fc: jne 0x4103
0x40fe: test rbx,rbx
0x4101: jne 0x4105
0x4103: pop rbx
0x4104: ret 
0x4105: call 0x4340
0x410a: nop word ptr [rax+rax]
0x4110: mov rax,rdi
0x4113: mul rsi
0x4116: mov rdi,rax
0x4119: seto al
0x411c: test rdi,rdi
0x411f: js 0x412b
0x4121: movzx eax,al
0x4124: test rax,rax
0x4127: jne 0x412b
0x4129: jmp 0x40f0
0x412b: sub rsp,0x8
0x412f: call 0x4340
0x4134: nop 
0x4136: nop word ptr cs:[rax+rax]
0x4140: jmp 0x40f0
0x4159: test rdi,rdi
0x415c: jne 0x4178
0x416b: test rbx,rbx
0x416e: jne 0x4181
0x4178: call 0x11f0
0x417d: xor eax,eax
0x417f: pop rbx
0x4180: ret 
0x4181: call 0x4340
0x4186: nop word ptr cs:[rax+rax]
0x4190: mov rax,rsi
0x4193: mul rdx
0x4196: mov rsi,rax
0x4199: seto al
0x419c: test rsi,rsi
0x419f: js 0x41ab
0x41a1: movzx eax,al
0x41a4: test rax,rax
0x41a7: jne 0x41ab
0x41a9: jmp 0x4150
0x41ab: sub rsp,0x8
0x41af: call 0x4340
0x41b4: nop 
0x41b6: nop word ptr cs:[rax+rax]
0x41c0: test rdi,rdi
0x41c3: mov r9,rdx
0x41c6: mov rcx,qword ptr [rsi]
0x41c9: je 0x4200
0x41cb: xor edx,edx
0x41cd: movabsq rax,0x5555555555555554
0x41d7: div r9
0x41da: cmp rax,rcx
0x41dd: jbe 0x421b
0x41df: mov rax,rcx
0x41e2: shr rax, 1
0x41e5: lea rcx,[rax+rcx+0x1]
0x41ea: mov qword ptr [rsi],rcx
0x41ed: imul rcx,r9
0x41f1: mov rsi,rcx
0x41f4: jmp 0x4150
0x4200: test rcx,rcx
0x4203: je 0x4228
0x4205: mov rax,rcx
0x4208: mul r9
0x420b: seto dl
0x420e: test rax,rax
0x4211: movzx edx,dl
0x4214: js 0x421b
0x4216: test rdx,rdx
0x4219: je 0x41ea
0x421b: sub rsp,0x8
0x421f: call 0x4340
0x4224: nop dword ptr [rax]
0x4228: xor edx,edx
0x422a: mov eax,0x80
0x422f: xor r8d,r8d
0x4232: div r9
0x4235: test rax,rax
0x4238: sete r8b
0x423c: lea rcx,[r8+rax]
0x4240: jmp 0x4205
0x4250: test rdi,rdi
0x4253: mov rax,qword ptr [rsi]
0x4256: je 0x4280
0x4258: movabsq rdx,0x5555555555555553
0x4262: cmp rax,rdx
0x4265: ja 0x4291
0x4267: mov rdx,rax
0x426a: shr rdx, 1
0x426d: lea rax,[rdx+rax+0x1]
0x4272: mov qword ptr [rsi],rax
0x4275: mov rsi,rax
0x4278: jmp 0x4150
0x4280: test rax,rax
0x4283: mov edx,0x80
0x4288: cmove rax,rdx
0x428c: test rax,rax
0x428f: jns 0x4272
0x4291: sub rsp,0x8
0x4295: call 0x4340
0x429a: nop word ptr [rax+rax]
0x42a0: push rbx
0x42a1: mov rbx,rdi
0x42a4: call 0x40f0
0x42a9: mov rdx,rbx
0x42ac: xor esi,esi
0x42ae: mov rdi,rax
0x42b1: pop rbx
0x42b2: jmp 0x1310
0x42c0: mov rax,rdi
0x42c3: sub rsp,0x8
0x42c7: mul rsi
0x42ca: seto dl
0x42cd: test rax,rax
0x42d0: js 0x42e9
0x42d2: movzx edx,dl
0x42d5: test rdx,rdx
0x42d8: jne 0x42e9
0x42da: call 0x1340
0x42df: test rax,rax
0x42e2: je 0x42e9
0x42e4: add rsp,0x8
0x42e8: ret 
0x42e9: call 0x4340
0x42ee: nop 
0x42f0: push rbp
0x42f1: push rbx
0x42f2: mov rbp,rdi
0x42f5: mov rdi,rsi
0x42f8: mov rbx,rsi
0x42fb: sub rsp,0x8
0x42ff: call 0x40f0
0x4304: add rsp,0x8
0x4308: mov rdx,rbx
0x430b: mov rsi,rbp
0x430e: pop rbx
0x430f: pop rbp
0x4310: mov rdi,rax
0x4313: jmp 0x1350
0x4320: push rbx
0x4321: mov rbx,rdi
0x4324: call 0x12b0
0x4329: mov rdi,rbx
0x432c: lea rsi,[rax+0x1]
0x4330: pop rbx
0x4331: jmp 0x42f0
0x4340: lea rsi,[rip+0xf08]
0x4347: sub rsp,0x8
0x434b: mov edx,0x5
0x4350: xor edi,edi
0x4352: call 0x1290
0x4357: mov edi,dword ptr [rip+0x202cbb]
0x435d: lea rdx,[rip+0x654]
0x4364: mov rcx,rax
0x4367: xor esi,esi
0x4369: xor eax,eax
0x436b: call 0x13e0
0x4370: call 0x1200
0x4375: nop word ptr cs:[rax+rax]
0x437f: nop 
0x4380: push r13
0x4382: push r12
0x4384: mov r13,rsi
0x4387: push rbp
0x4388: push rbx
0x4389: mov rbx,rdi
0x438c: mov r12,rdx
0x438f: sub rsp,0x18
0x4393: mov rax,qword ptr fs:0x28
0x439c: mov qword ptr [rsp+0x8],rax
0x43a1: xor eax,eax
0x43a3: lea rax,[rsp+0x4]
0x43a8: test rdi,rdi
0x43ab: cmove rbx,rax
0x43af: mov rdi,rbx
0x43b2: call 0x12e0
0x43b7: cmp rax,-0x3
0x43bb: mov rbp,rax
0x43be: jbe 0x43e0
0x43c0: test r12,r12
0x43c3: je 0x43e0
0x43c5: xor edi,edi
0x43c7: call 0x4490
0x43cc: test al,al
0x43ce: jne 0x43e0
0x43d0: movzx eax,byte ptr [r13]
0x43d5: mov ebp,0x1
0x43da: mov dword ptr [rbx],eax
0x43dc: nop dword ptr [rax]
0x43e0: mov rdx,qword ptr [rsp+0x8]
0x43e5: xor rdx,qword ptr fs:0x28
0x43ee: mov rax,rbp
0x43f1: jne 0x43fe
0x43f3: add rsp,0x18
0x43f7: pop rbx
0x43f8: pop rbp
0x43f9: pop r12
0x43fb: pop r13
0x43fd: ret 
0x43fe: call 0x12c0
0x4403: nop word ptr cs:[rax+rax]
0x440d: nop dword ptr [rax]
0x4410: push r12
0x4412: push rbp
0x4413: mov rbp,rdi
0x4416: push rbx
0x4417: call 0x1250
0x441c: mov ebx,dword ptr [rbp]
0x441f: mov rdi,rbp
0x4422: mov r12,rax
0x4425: call 0x4530
0x442a: and ebx,0x20
0x442d: test ebx,ebx
0x442f: jne 0x4448
0x4431: test eax,eax
0x4433: je 0x443f
0x4435: test r12,r12
0x4438: mov eax,0xffffffff
0x443d: je 0x4478
0x443f: pop rbx
0x4440: pop rbp
0x4441: pop r12
0x4443: ret 
0x4448: test eax,eax
0x444a: jne 0x4468
0x444c: call 0x1210
0x4451: mov dword ptr [rax],0x0
0x4457: mov eax,0xffffffff
0x445c: pop rbx
0x445d: pop rbp
0x445e: pop r12
0x4460: ret 
0x4468: pop rbx
0x4469: mov eax,0xffffffff
0x446e: pop rbp
0x446f: pop r12
0x4471: ret 
0x4478: call 0x1210
0x447d: cmp dword ptr [rax],0x9
0x4480: pop rbx
0x4481: pop rbp
0x4482: pop r12
0x4484: setne al
0x4487: movzx eax,al
0x448a: neg eax
0x448c: ret 
0x4490: sub rsp,0x8
0x4494: xor esi,esi
0x4496: call 0x13c0
0x449b: mov rdx,rax
0x449e: mov eax,0x1
0x44a3: test rdx,rdx
0x44a6: je 0x44c5
0x44a8: lea rdi,[rip+0xdb1]
0x44af: mov ecx,0x2
0x44b4: mov rsi,rdx
0x44b7: rep cmpsb [rsi],es:[rdi]
0x44b9: seta cl
0x44bc: sbb cl,0x0
0x44bf: xor eax,eax
0x44c1: test cl,cl
0x44c3: jne 0x44d0
0x44c5: add rsp,0x8
0x44c9: ret 
0x44d0: lea rdi,[rip+0xd8b]
0x44d7: mov ecx,0x6
0x44dc: mov rsi,rdx
0x44df: rep cmpsb [rsi],es:[rdi]
0x44e1: seta al
0x44e4: sbb al,0x0
0x44e6: test al,al
0x44e8: setne al
0x44eb: add rsp,0x8
0x44ef: ret 
0x44f0: sub rsp,0x8
0x44f4: mov edi,0xe
0x44f9: call 0x1390
0x44fe: test rax,rax
0x4501: je 0x4520
0x4503: cmp byte ptr [rax],0x0
0x4506: lea rdx,[rip+0xd5b]
0x450d: cmove rax,rdx
0x4511: add rsp,0x8
0x4515: ret 
0x4520: lea rax,[rip+0xd41]
0x4527: add rsp,0x8
0x452b: ret 
0x4530: push r12
0x4532: push rbp
0x4533: push rbx
0x4534: mov rbx,rdi
0x4537: call 0x1360
0x453c: test eax,eax
0x453e: mov rdi,rbx
0x4541: js 0x4597
0x4543: call 0x13a0
0x4548: test eax,eax
0x454a: jne 0x4578
0x454c: mov rdi,rbx
0x454f: call 0x45b0
0x4554: test eax,eax
0x4556: je 0x4594
0x4558: call 0x1210
0x455d: mov r12d,dword ptr [rax]
0x4560: mov rdi,rbx
0x4563: mov rbp,rax
0x4566: call 0x1270
0x456b: test r12d,r12d
0x456e: jne 0x45a0
0x4570: pop rbx
0x4571: pop rbp
0x4572: pop r12
0x4574: ret 
0x4578: mov rdi,rbx
0x457b: call 0x1360
0x4580: xor esi,esi
0x4582: mov edx,0x1
0x4587: mov edi,eax
0x4589: call 0x1300
0x458e: cmp rax,-0x1
0x4592: jne 0x454c
0x4594: mov rdi,rbx
0x4597: pop rbx
0x4598: pop rbp
0x4599: pop r12
0x459b: jmp 0x1270
0x45a0: mov dword ptr [rbp],r12d
0x45a4: mov eax,0xffffffff
0x45a9: jmp 0x4570
0x45b0: test rdi,rdi
0x45b3: push rbx
0x45b4: mov rbx,rdi
0x45b7: je 0x45ca
0x45b9: call 0x13a0
0x45be: test eax,eax
0x45c0: je 0x45ca
0x45c2: test dword ptr [rbx],0x100
0x45c8: jne 0x45d8
0x45ca: mov rdi,rbx
0x45cd: pop rbx
0x45ce: jmp 0x1380
0x45d8: mov rdi,rbx
0x45db: mov edx,0x1
0x45e0: xor esi,esi
0x45e2: call 0x45f0
0x45e7: mov rdi,rbx
0x45ea: pop rbx
0x45eb: jmp 0x1380
0x45f0: mov rax,qword ptr [rdi+0x8]
0x45f4: cmp qword ptr [rdi+0x10],rax
0x45f8: je 0x4600
0x45fa: jmp 0x13f0
0x4600: mov rax,qword ptr [rdi+0x20]
0x4604: cmp qword ptr [rdi+0x28],rax
0x4608: jne 0x45fa
0x460a: cmp qword ptr [rdi+0x48],0x0
0x460f: jne 0x45fa
0x4611: push r12
0x4613: push rbp
0x4614: mov r12d,edx
0x4617: push rbx
0x4618: mov rbp,rsi
0x461b: mov rbx,rdi
0x461e: call 0x1360
0x4623: mov edx,r12d
0x4626: mov rsi,rbp
0x4629: mov edi,eax
0x462b: call 0x1300
0x4630: cmp rax,-0x1
0x4634: je 0x4642
0x4636: and dword ptr [rbx],-0x11
0x4639: mov qword ptr [rbx+0x90],rax
0x4640: xor eax,eax
0x4642: pop rbx
0x4643: pop rbp
0x4644: pop r12
0x4646: ret 
0x4650: push r15
0x4652: push r14
0x4654: mov r15,rdx
0x4657: push r13
0x4659: push r12
0x465b: lea r12,[rip+0x20254e]
0x4662: push rbp
0x4663: lea rbp,[rip+0x20254e]
0x466a: push rbx
0x466b: mov r13d,edi
0x466e: mov r14,rsi
0x4671: sub rbp,r12
0x4674: sub rsp,0x8
0x4678: sar rbp,0x3
0x467c: call 0x11c0
0x4681: test rbp,rbp
0x4684: je 0x46a6
0x4686: xor ebx,ebx
0x4688: nop dword ptr [rax+rax]
0x4690: mov rdx,r15
0x4693: mov rsi,r14
0x4696: mov edi,r13d
0x4699: call qword ptr [r12+rbx*8]
0x469d: add rbx,0x1
0x46a1: cmp rbp,rbx
0x46a4: jne 0x4690
0x46a6: add rsp,0x8
0x46aa: pop rbx
0x46ab: pop rbp
0x46ac: pop r12
0x46ae: pop r13
0x46b0: pop r14
0x46b2: pop r15
0x46b4: ret 
0x46c0: rep ret 
