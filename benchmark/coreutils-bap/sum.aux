0x1598: sub rsp,0x8
0x159c: mov rax,qword ptr [rip+0x207a45]
0x15a3: test rax,rax
0x15a6: je 0x15aa
0x15a8: call rax
0x15aa: add rsp,0x8
0x15ae: ret 
0x15b6: jmp qword ptr [rip+0x20785c]
0x15d0: jmp qword ptr [rip+0x207852]
0x15e0: jmp qword ptr [rip+0x20784a]
0x1620: jmp qword ptr [rip+0x20782a]
0x1630: jmp qword ptr [rip+0x207822]
0x16b0: jmp qword ptr [rip+0x2077e2]
0x16d0: jmp qword ptr [rip+0x2077d2]
0x16e0: jmp qword ptr [rip+0x2077ca]
0x1720: jmp qword ptr [rip+0x2077aa]
0x1730: jmp qword ptr [rip+0x2077a2]
0x1780: jmp qword ptr [rip+0x20777a]
0x17a0: jmp qword ptr [rip+0x20776a]
0x17b0: jmp qword ptr [rip+0x207762]
0x17c0: jmp qword ptr [rip+0x20775a]
0x17e0: jmp qword ptr [rip+0x20774a]
0x1800: jmp qword ptr [rip+0x20773a]
0x18f0: jmp qword ptr [rip+0x2076c2]
0x1900: jmp qword ptr [rip+0x2076ba]
0x1910: jmp qword ptr [rip+0x2076b2]
0x1930: jmp qword ptr [rip+0x2076c2]
0x1a59: nop dword ptr [rax]
0x1ac8: mov rbx,rax
0x1acb: call 0x1600
0x1ad0: mov esi,dword ptr [rax]
0x1ad2: lea rdx,[rip+0x56a9]
0x1ad9: mov rcx,rbx
0x1adc: mov edi,0x1
0x1ae1: xor eax,eax
0x1ae3: call 0x1870
0x1b25: nop word ptr cs:[rax+rax]
0x1b2f: nop 
0x1b5a: hlt 
0x1b5b: nop dword ptr [rax+rax]
0x1b60: lea rdi,[rip+0x207521]
0x1b67: push rbp
0x1b68: lea rax,[rip+0x207519]
0x1b6f: cmp rax,rdi
0x1b72: mov rbp,rsp
0x1b75: je 0x1b90
0x1b77: mov rax,qword ptr [rip+0x20745a]
0x1b7e: test rax,rax
0x1b81: je 0x1b90
0x1b83: pop rbp
0x1b84: jmp rax
0x1b90: pop rbp
0x1b91: ret 
0x1ba0: lea rdi,[rip+0x2074e1]
0x1ba7: lea rsi,[rip+0x2074da]
0x1bae: push rbp
0x1baf: sub rsi,rdi
0x1bb2: mov rbp,rsp
0x1bb5: sar rsi,0x3
0x1bb9: mov rax,rsi
0x1bbc: shr rax,0x3f
0x1bc0: add rsi,rax
0x1bc3: sar rsi, 1
0x1bc6: je 0x1be0
0x1bc8: mov rax,qword ptr [rip+0x207421]
0x1bcf: test rax,rax
0x1bd2: je 0x1be0
0x1bd4: pop rbp
0x1bd5: jmp rax
0x1be0: pop rbp
0x1be1: ret 
0x1c01: push rbp
0x1c02: mov rbp,rsp
0x1c05: je 0x1c13
0x1c07: mov rdi,qword ptr [rip+0x2073fa]
0x1c0e: call 0x1930
0x1c13: call 0x1b60
0x1c18: mov byte ptr [rip+0x2074c9],0x1
0x1c1f: pop rbp
0x1c20: ret 
0x1c30: push rbp
0x1c31: mov rbp,rsp
0x1c34: pop rbp
0x1c35: jmp 0x1ba0
0x1dbf: mov rbx,rax
0x1dc2: call 0x1600
0x1dc7: mov esi,dword ptr [rax]
0x1dc9: lea rdx,[rip+0x53b2]
0x1dd0: mov rcx,rbx
0x1dd3: xor edi,edi
0x1dd5: xor eax,eax
0x1dd7: xor ebx,ebx
0x1dd9: call 0x1870
0x1dde: test r12d,r12d
0x1de1: je 0x1d7e
0x1de3: mov edi,ebp
0x1de5: call 0x1750
0x1dea: jmp 0x1d7e
0x1e16: mov rbx,rax
0x1e19: call 0x1600
0x1e1e: mov esi,dword ptr [rax]
0x1e20: lea rdx,[rip+0x535b]
0x1e27: mov rcx,rbx
0x1e2a: xor edi,edi
0x1e2c: xor eax,eax
0x1e2e: xor ebx,ebx
0x1e30: call 0x1870
0x1e35: jmp 0x1d7e
0x1e64: jmp 0x1d7e
0x1e69: call 0x16b0
0x1e6e: nop 
0x201a: mov rbx,rax
0x201d: call 0x1600
0x2022: mov esi,dword ptr [rax]
0x2024: lea rdx,[rip+0x5157]
0x202b: mov rcx,rbx
0x202e: xor edi,edi
0x2030: xor eax,eax
0x2032: xor ebx,ebx
0x2034: call 0x1870
0x2039: jmp 0x1fa2
0x204f: mov rbx,rax
0x2052: call 0x1600
0x2057: mov esi,dword ptr [rax]
0x2059: lea rdx,[rip+0x5122]
0x2060: mov rcx,rbx
0x2063: xor edi,edi
0x2065: xor eax,eax
0x2067: xor ebx,ebx
0x2069: call 0x1870
0x206e: test ebp,ebp
0x2070: je 0x1fa2
0x2076: mov rdi,r15
0x2079: call 0x5c80
0x207e: jmp 0x1fa2
0x2092: jmp 0x1fa2
0x2097: call 0x16b0
0x2440: mov qword ptr [rip+0x206cb1],rdi
0x2447: ret 
0x2450: mov byte ptr [rip+0x206c99],dil
0x2457: ret 
0x2460: push rbp
0x2461: push rbx
0x2462: sub rsp,0x8
0x2466: mov rdi,qword ptr [rip+0x206c3b]
0x246d: call 0x61c0
0x2472: test eax,eax
0x2474: je 0x248c
0x2476: call 0x1600
0x247b: cmp byte ptr [rip+0x206c6e],0x0
0x2482: mov rbx,rax
0x2485: je 0x24a3
0x2487: cmp dword ptr [rax],0x20
0x248a: jne 0x24a3
0x248c: mov rdi,qword ptr [rip+0x206c4d]
0x2493: call 0x61c0
0x2498: test eax,eax
0x249a: jne 0x24e2
0x249c: add rsp,0x8
0x24a0: pop rbx
0x24a1: pop rbp
0x24a2: ret 
0x24a3: lea rsi,[rip+0x4226]
0x24aa: xor edi,edi
0x24ac: mov edx,0x5
0x24b1: call 0x1680
0x24b6: mov rdi,qword ptr [rip+0x206c3b]
0x24bd: mov rbp,rax
0x24c0: test rdi,rdi
0x24c3: je 0x24ed
0x24c5: call 0x4d30
0x24ca: mov esi,dword ptr [rbx]
0x24cc: lea rdx,[rip+0x4209]
0x24d3: mov rcx,rax
0x24d6: mov r8,rbp
0x24d9: xor edi,edi
0x24db: xor eax,eax
0x24dd: call 0x1870
0x24e2: mov edi,dword ptr [rip+0x206b30]
0x24e8: call 0x1620
0x24ed: mov esi,dword ptr [rbx]
0x24ef: lea rdx,[rip+0x4c8c]
0x24f6: mov rcx,rax
0x24f9: xor edi,edi
0x24fb: xor eax,eax
0x24fd: call 0x1870
0x2502: jmp 0x24e2
0x2510: jmp 0x1760
0x25c8: fstp [1+st]
0x2623: push rsi
0x280c: mov rax,qword ptr [rsp]
0x2810: cmp byte ptr [rax+r14-0x1],0x30
0x2816: jne 0x2978
0x281c: flds [rip+0x3f3a]
0x2822: cmp r15d,0x1
0x2826: fmul [1+st],[0+st]
0x2828: jne 0x2db0
0x282e: jmp 0x2d63
0x289f: mov r8d,dword ptr [rsp+0x34]
0x28a4: cmp r8,rsi
0x28a7: mov r11,r8
0x28aa: ja 0x2e20
0x28b0: xor ebx,ebx
0x28b2: jmp 0x28d7
0x28b8: test edi,edi
0x28ba: setne dil
0x28be: movzx edi,dil
0x28c2: add ebx,0x1
0x28c5: cmp r8,r10
0x28c8: ja 0x2bdd
0x28ce: cmp ebx,0x8
0x28d1: je 0x2e78
0x28d7: mov rax,rsi
0x28da: xor edx,edx
0x28dc: mov esi,edi
0x28de: div r8
0x28e1: sar esi, 1
0x28e3: mov r10,rax
0x28e6: lea eax,[rdx+rdx*4]
0x28e9: xor edx,edx
0x28eb: lea eax,[r9+rax*2]
0x28ef: div r11d
0x28f2: lea edx,[rsi+rdx*2]
0x28f5: mov r9d,eax
0x28f8: mov rsi,r10
0x28fb: add edi,edx
0x28fd: cmp r11d,edx
0x2900: ja 0x28b8
0x2902: cmp r11d,edi
0x2905: setb dil
0x2909: movzx edi,dil
0x290d: add edi,0x2
0x2910: jmp 0x28c2
0x2978: fstp [0+st]
0x297a: nop word ptr [rax+rax]
0x29b0: cmp ebx,-0x1
0x29b3: je 0x2cd0
0x29b9: mov eax,r12d
0x29bc: and eax,0x100
0x29c1: mov ecx,eax
0x29c3: or ecx,ebx
0x29c5: je 0x2a27
0x29c7: and r12d,0x40
0x29cb: jne 0x2b68
0x29d1: test ebx,ebx
0x29d3: je 0x3006
0x29d9: cmp ebx,0x1
0x29dc: jne 0x29ec
0x29de: mov r9d,dword ptr [rsp+0x30]
0x29e3: test r9d,r9d
0x29e6: je 0x2e30
0x29ec: lea rcx,[rip+0x3d55]
0x29f3: movsxd rbx,ebx
0x29f6: mov rdi,qword ptr [rsp+0x8]
0x29fb: test eax,eax
0x29fd: movzx ecx,byte ptr [rcx+rbx]
0x2a01: lea rdx,[rdi+0x1]
0x2a05: mov byte ptr [rdi],cl
0x2a07: je 0x2e44
0x2a0d: mov r8d,dword ptr [rsp+0x30]
0x2a12: test r8d,r8d
0x2a15: jne 0x2bd0
0x2a1b: lea rax,[rdx+0x1]
0x2a1f: mov byte ptr [rdx],0x42
0x2a22: mov qword ptr [rsp+0x8],rax
0x2a88: mov r14,r8
0x2a8b: mov rdi,r13
0x2a8e: mov qword ptr [rsp+0x48],r8
0x2a93: sub r14,r15
0x2a96: mov rbp,-0x1
0x2a9d: call 0x16a0
0x2aa2: lea rdi,[rsp+0x50]
0x2aa6: push rax
0x2aa7: mov ecx,0x29
0x2aac: mov rdx,r14
0x2aaf: mov rsi,r15
0x2ab2: mov qword ptr [rsp+0x40],rax
0x2ab7: mov qword ptr [rsp+0x18],rdi
0x2abc: call 0x17b0
0x2ac1: mov ecx,r12d
0x2ac4: mov dword ptr [rsp+0x20],ebx
0x2ac8: mov r12,r14
0x2acb: mov rbx,r13
0x2ace: mov r8,qword ptr [rsp+0x48]
0x2ad3: mov r15,qword ptr [rsp+0x38]
0x2ad8: mov r13,qword ptr [rsp+0x40]
0x2add: mov r14d,ecx
0x2ae0: jmp 0x2b22
0x2ae8: mov rax,qword ptr [rsp+0x18]
0x2aed: sub r12,rbp
0x2af0: sub r8,rbp
0x2af3: mov rdi,r8
0x2af6: mov rdx,rbp
0x2af9: lea rsi,[rax+r12]
0x2afd: call 0x17c0
0x2b02: test r12,r12
0x2b05: mov r8,rax
0x2b08: je 0x3018
0x2b0e: sub r8,r13
0x2b11: mov rdx,r13
0x2b14: mov rsi,rbx
0x2b17: mov rdi,r8
0x2b1a: call 0x17c0
0x2b1f: mov r8,rax
0x2b22: movzx eax,byte ptr [r15]
0x2b26: test al,al
0x2b28: je 0x2b37
0x2b2a: cmp al,0x7f
0x2b2c: movzx ebp,al
0x2b2f: cmovae rbp,r12
0x2b33: add r15,0x1
0x2b37: cmp rbp,r12
0x2b3a: jbe 0x2ae8
0x2b3c: mov eax,r14d
0x2b3f: mov r15,r8
0x2b42: mov r14,r12
0x2b45: mov rsi,qword ptr [rsp+0x18]
0x2b4a: sub r15,r14
0x2b4d: mov rdx,r14
0x2b50: mov rdi,r15
0x2b53: mov ebx,dword ptr [rsp+0x20]
0x2b57: mov r12d,eax
0x2b5a: call 0x17c0
0x2b5f: jmp 0x29aa
0x2b68: mov rcx,qword ptr [rsp]
0x2b6c: lea rdi,[rcx+0x288]
0x2b73: mov byte ptr [rcx+0x287],0x20
0x2b7a: mov qword ptr [rsp+0x8],rdi
0x2b7f: jmp 0x29d1
0x2b9d: pop rax
0x2b9e: pop rdx
0x2b9f: fldt [rsp+0x20]
0x2ba3: jmp 0x27b9
0x2bbf: pop r8
0x2bc1: pop r9
0x2bc3: jmp 0x292c
0x2bd0: lea rdx,[rdi+0x2]
0x2bd4: mov byte ptr [rdi+0x1],0x69
0x2bd8: jmp 0x2a1b
0x2bdd: cmp r10,0x9
0x2be1: ja 0x2e78
0x2be7: cmp r15d,0x1
0x2beb: je 0x2ea2
0x2bf1: test r15d,r15d
0x2bf4: sete dl
0x2bf7: test edi,edi
0x2bf9: setg r8b
0x2bfd: and edx,r8d
0x2c00: test dl,dl
0x2c02: je 0x2e89
0x2c08: lea r9d,[rax+0x1]
0x2c0c: cmp r9d,0xa
0x2c10: je 0x2f11
0x2c16: add r9d,0x30
0x2c1a: mov rax,qword ptr [rsp]
0x2c1e: lea r8,[rax+0x286]
0x2c25: mov byte ptr [rax+0x286],r9b
0x2c2c: mov eax,ebp
0x2c2e: sub r8,rbp
0x2c31: cmp ebp,0x8
0x2c34: jae 0x2ec1
0x2c3a: test bpl,0x4
0x2c3e: jne 0x2fc6
0x2c44: test eax,eax
0x2c46: je 0x2c57
0x2c48: movzx edx,byte ptr [r14]
0x2c4c: test al,0x2
0x2c4e: mov byte ptr [r8],dl
0x2c51: jne 0x2fe0
0x2c57: xor edi,edi
0x2c59: xor r9d,r9d
0x2c5c: nop dword ptr [rax]
0x2c7e: mov eax,dword ptr [rsp+0x34]
0x2c82: cmp rax,rsi
0x2c85: je 0x2e50
0x2c8b: nop dword ptr [rax+rax]
0x2cd0: mov rcx,qword ptr [rsp+0x10]
0x2cd5: cmp rcx,0x1
0x2cd9: jbe 0x2e82
0x2cdf: mov edx,dword ptr [rsp+0x34]
0x2ce3: mov ebx,0x1
0x2ce8: mov eax,0x1
0x2ced: imul rax,rdx
0x2cf1: cmp rcx,rax
0x2cf4: jbe 0x29b9
0x2cfa: add ebx,0x1
0x2cfd: cmp ebx,0x8
0x2d00: jne 0x2ced
0x2d02: jmp 0x29b9
0x2d10: sub rsp,0x10
0x2d14: lea rcx,[rip+0x39d0]
0x2d1b: mov rdx,-0x1
0x2d22: fld [0+st]
0x2d24: fstpt [rsp]
0x2d27: mov r14,qword ptr [rsp+0x10]
0x2d2c: mov esi,0x1
0x2d31: xor eax,eax
0x2d33: mov rdi,r14
0x2d36: fstpt [rsp+0x30]
0x2d3a: call 0x1920
0x2d3f: mov rdi,r14
0x2d42: call 0x16a0
0x2d47: mov r14,rax
0x2d4a: pop rax
0x2d4b: pop rdx
0x2d4c: cmp r14,qword ptr [rsp+0x18]
0x2d51: fldt [rsp+0x20]
0x2d55: jbe 0x2802
0x2d5b: flds [rip+0x39fb]
0x2d61: fmul [1+st],[0+st]
0x2dcd: pop rbp
0x2dce: pop r14
0x2dd0: flds [rsp+0x18]
0x2dd4: jmp 0x2d63
0x2de0: mov rax,rsi
0x2de3: movsxd rdi,edi
0x2de6: and eax,0x1
0x2de9: add rax,rdi
0x2dec: setne al
0x2def: movzx eax,al
0x2df2: add r9d,eax
0x2df5: cmp r9d,0x5
0x2df9: jg 0x2c76
0x2dff: jmp 0x2c90
0x2e20: mov r8,qword ptr [rsp+0x8]
0x2e25: xor ebx,ebx
0x2e27: jmp 0x2c60
0x2e30: mov rbx,qword ptr [rsp+0x8]
0x2e35: test eax,eax
0x2e37: lea rdx,[rbx+0x1]
0x2e3b: mov byte ptr [rbx],0x6b
0x2e3e: jne 0x2a1b
0x2e44: mov qword ptr [rsp+0x8],rdx
0x2e49: jmp 0x2a27
0x2e50: cmp ebx,0x8
0x2e53: je 0x2c90
0x2e59: add ebx,0x1
0x2e5c: test r12b,0x8
0x2e60: je 0x2f22
0x2e66: lea r15,[r8-0x1]
0x2e6a: mov byte ptr [r8-0x1],0x31
0x2e6f: jmp 0x29a0
0x2e78: mov r8,qword ptr [rsp+0x8]
0x2e7d: jmp 0x2c60
0x2e82: xor ebx,ebx
0x2e84: jmp 0x29b9
0x2e89: test eax,eax
0x2e8b: jne 0x2c16
0x2e91: test r12b,0x8
0x2e95: jne 0x2eb4
0x2e97: mov r9d,0x30
0x2e9d: jmp 0x2c1a
0x2ea2: mov edx,eax
0x2ea4: and edx,0x1
0x2ea7: add edx,edi
0x2ea9: cmp edx,0x2
0x2eac: setg dl
0x2eaf: jmp 0x2c00
0x2eb4: mov r8,qword ptr [rsp+0x8]
0x2eb9: xor r9d,r9d
0x2ebc: jmp 0x2c60
0x2ec1: mov rax,qword ptr [r14]
0x2ec4: mov r9,r14
0x2ec7: mov qword ptr [r8],rax
0x2eca: mov eax,ebp
0x2ecc: mov rdx,qword ptr [r14+rax-0x8]
0x2ed1: mov qword ptr [r8+rax-0x8],rdx
0x2ed6: lea rdx,[r8+0x8]
0x2eda: mov rax,r8
0x2edd: and rdx,-0x8
0x2ee1: sub rax,rdx
0x2ee4: sub r9,rax
0x2ee7: add eax,ebp
0x2ee9: and eax,-0x8
0x2eec: cmp eax,0x8
0x2eef: jb 0x2c57
0x2ef5: and eax,-0x8
0x2ef8: xor edi,edi
0x2efa: mov r10d,edi
0x2efd: add edi,0x8
0x2f00: mov r11,qword ptr [r9+r10]
0x2f04: cmp edi,eax
0x2f06: mov qword ptr [rdx+r10],r11
0x2f0a: jb 0x2efa
0x2f0c: jmp 0x2c57
0x2f11: lea rsi,[r10+0x1]
0x2f15: cmp rsi,0xa
0x2f19: je 0x2f70
0x2f1b: xor edi,edi
0x2f1d: jmp 0x2e91
0x2f22: mov rax,rbp
0x2f25: mov byte ptr [r8-0x1],0x30
0x2f2a: not rax
0x2f2d: add r8,rax
0x2f30: cmp ebp,0x8
0x2f33: mov eax,ebp
0x2f35: jae 0x2f7a
0x2f37: and ebp,0x4
0x2f3a: jne 0x2ff1
0x2f40: test eax,eax
0x2f42: je 0x2e66
0x2f48: movzx edx,byte ptr [r14]
0x2f4c: test al,0x2
0x2f4e: mov byte ptr [r8],dl
0x2f51: je 0x2e66
0x2f57: movzx edx,word ptr [r14+rax-0x2]
0x2f5d: mov word ptr [r8+rax-0x2],dx
0x2f63: jmp 0x2e66
0x2f70: mov r8,qword ptr [rsp+0x8]
0x2f75: jmp 0x2c57
0x2f7a: mov rax,qword ptr [r14]
0x2f7d: lea rcx,[r8+0x8]
0x2f81: and rcx,-0x8
0x2f85: mov qword ptr [r8],rax
0x2f88: mov eax,ebp
0x2f8a: mov rdx,qword ptr [r14+rax-0x8]
0x2f8f: mov qword ptr [r8+rax-0x8],rdx
0x2f94: mov rax,r8
0x2f97: sub rax,rcx
0x2f9a: sub r14,rax
0x2f9d: add eax,ebp
0x2f9f: and eax,-0x8
0x2fa2: cmp eax,0x8
0x2fa5: jb 0x2e66
0x2fab: and eax,-0x8
0x2fae: xor edx,edx
0x2fb0: mov esi,edx
0x2fb2: add edx,0x8
0x2fb5: mov rdi,qword ptr [r14+rsi]
0x2fb9: cmp edx,eax
0x2fbb: mov qword ptr [rcx+rsi],rdi
0x2fbf: jb 0x2fb0
0x2fc1: jmp 0x2e66
0x2fc6: mov edx,dword ptr [r14]
0x2fc9: mov dword ptr [r8],edx
0x2fcc: mov edx,dword ptr [r14+rax-0x4]
0x2fd1: mov dword ptr [r8+rax-0x4],edx
0x2fd6: jmp 0x2c57
0x2fdb: call 0x16b0
0x2fe0: movzx edx,word ptr [r14+rax-0x2]
0x2fe6: mov word ptr [r8+rax-0x2],dx
0x2fec: jmp 0x2c57
0x2ff1: mov edx,dword ptr [r14]
0x2ff4: mov dword ptr [r8],edx
0x2ff7: mov edx,dword ptr [r14+rax-0x4]
0x2ffc: mov dword ptr [r8+rax-0x4],edx
0x3001: jmp 0x2e66
0x3006: test eax,eax
0x3008: mov rdx,qword ptr [rsp+0x8]
0x300d: jne 0x2a1b
0x3013: jmp 0x2a27
0x3018: mov ebx,dword ptr [rsp+0x20]
0x301c: mov r15,rax
0x301f: mov r12d,r14d
0x3022: jmp 0x29aa
0x3030: push r13
0x3032: push r12
0x3034: mov r13,rsi
0x3037: push rbp
0x3038: push rbx
0x3039: mov r12,rdx
0x303c: mov rbx,rdi
0x303f: sub rsp,0x18
0x3043: mov rax,qword ptr fs:0x28
0x304c: mov qword ptr [rsp+0x8],rax
0x3051: xor eax,eax
0x3053: test rdi,rdi
0x3056: je 0x3170
0x305c: xor ebp,ebp
0x305e: cmp byte ptr [rbx],0x27
0x3061: jne 0x306c
0x3063: add rbx,0x1
0x3067: mov ebp,0x4
0x306c: lea rdx,[rip+0x36cd]
0x3073: lea rsi,[rip+0x205b26]
0x307a: mov ecx,0x4
0x307f: mov rdi,rbx
0x3082: call 0x5e40
0x3087: test eax,eax
0x3089: js 0x30c8
0x308b: lea rdx,[rip+0x36ae]
0x3092: cltq 
0x3094: mov qword ptr [r12],0x1
0x309c: or ebp,dword ptr [rdx+rax*4]
0x309f: xor eax,eax
0x30a1: mov dword ptr [r13],ebp
0x30a5: mov rcx,qword ptr [rsp+0x8]
0x30aa: xor rcx,qword ptr fs:0x28
0x30b3: jne 0x3211
0x30b9: add rsp,0x18
0x30bd: pop rbx
0x30be: pop rbp
0x30bf: pop r12
0x30c1: pop r13
0x30c3: ret 
0x30c8: lea r8,[rip+0x3647]
0x30cf: xor edx,edx
0x30d1: mov rsi,rsp
0x30d4: mov rcx,r12
0x30d7: mov rdi,rbx
0x30da: call 0x5860
0x30df: test eax,eax
0x30e1: jne 0x3128
0x30e3: movzx esi,byte ptr [rbx]
0x30e6: lea edx,[rsi-0x30]
0x30e9: cmp dl,0x9
0x30ec: jbe 0x3118
0x30ee: mov rcx,qword ptr [rsp]
0x30f2: cmp rbx,rcx
0x30f5: jne 0x3109
0x30f7: jmp 0x31d0
0x3100: cmp rbx,rcx
0x3103: je 0x31d0
0x3109: add rbx,0x1
0x310d: movzx edi,byte ptr [rbx]
0x3110: lea edx,[rdi-0x30]
0x3113: cmp dl,0x9
0x3116: ja 0x3100
0x3118: mov rdx,qword ptr [r12]
0x311c: mov dword ptr [r13],ebp
0x3120: jmp 0x3134
0x3128: mov rdx,qword ptr [r12]
0x312c: mov dword ptr [r13],0x0
0x3134: test rdx,rdx
0x3137: jne 0x30a5
0x313d: lea rdi,[rip+0x35c2]
0x3144: call 0x15d0
0x3149: cmp rax,0x1
0x314d: sbb rax,rax
0x3150: and eax,0x200
0x3155: add rax,0x200
0x315b: mov qword ptr [r12],rax
0x315f: mov eax,0x4
0x3164: jmp 0x30a5
0x3170: lea rdi,[rip+0x357a]
0x3177: call 0x15d0
0x317c: test rax,rax
0x317f: mov rbx,rax
0x3182: jne 0x305c
0x3188: lea rdi,[rip+0x356d]
0x318f: call 0x15d0
0x3194: test rax,rax
0x3197: mov rbx,rax
0x319a: jne 0x305c
0x31a0: lea rdi,[rip+0x355f]
0x31a7: call 0x15d0
0x31ac: test rax,rax
0x31af: je 0x31fa
0x31b1: mov qword ptr [r12],0x200
0x31b9: xor eax,eax
0x31bb: mov dword ptr [r13],0x0
0x31c3: jmp 0x30a5
0x31d0: cmp byte ptr [rcx-0x1],0x42
0x31d4: je 0x31e8
0x31d6: or bpl,-0x80
0x31da: or ebp,0x20
0x31dd: jmp 0x3118
0x31e8: or ebp,0x180
0x31ee: cmp byte ptr [rcx-0x2],0x69
0x31f2: jne 0x3118
0x31f8: jmp 0x31da
0x31fa: mov qword ptr [r12],0x400
0x3202: xor eax,eax
0x3204: mov dword ptr [r13],0x0
0x320c: jmp 0x30a5
0x3211: call 0x16b0
0x3216: nop word ptr cs:[rax+rax]
0x32bf: nop 
0x32c0: push rbp
0x32c1: push rbx
0x32c2: mov rbp,rdi
0x32c5: mov ebx,esi
0x32c7: sub rsp,0x8
0x32cb: call 0x62a0
0x32d0: movzx edx,byte ptr [rax]
0x32d3: and edx,-0x21
0x32d6: cmp dl,0x55
0x32d9: je 0x3350
0x32db: cmp dl,0x47
0x32de: je 0x3300
0x32e0: lea rax,[rip+0x34dc]
0x32e7: lea rdx,[rip+0x34d7]
0x32ee: cmp ebx,0x9
0x32f1: cmovne rax,rdx
0x32f5: add rsp,0x8
0x32f9: pop rbx
0x32fa: pop rbp
0x32fb: ret 
0x3300: movzx edx,byte ptr [rax+0x1]
0x3304: and edx,-0x21
0x3307: cmp dl,0x42
0x330a: jne 0x32e0
0x330c: cmp byte ptr [rax+0x2],0x31
0x3310: jne 0x32e0
0x3312: cmp byte ptr [rax+0x3],0x38
0x3316: jne 0x32e0
0x3318: cmp byte ptr [rax+0x4],0x30
0x331c: jne 0x32e0
0x331e: cmp byte ptr [rax+0x5],0x33
0x3322: jne 0x32e0
0x3324: cmp byte ptr [rax+0x6],0x30
0x3328: jne 0x32e0
0x332a: cmp byte ptr [rax+0x7],0x0
0x332e: jne 0x32e0
0x3330: cmp byte ptr [rbp],0x60
0x3334: lea rax,[rip+0x3481]
0x333b: lea rdx,[rip+0x347e]
0x3342: cmovne rax,rdx
0x3346: add rsp,0x8
0x334a: pop rbx
0x334b: pop rbp
0x334c: ret 
0x3350: movzx edx,byte ptr [rax+0x1]
0x3354: and edx,-0x21
0x3357: cmp dl,0x54
0x335a: jne 0x32e0
0x335c: movzx edx,byte ptr [rax+0x2]
0x3360: and edx,-0x21
0x3363: cmp dl,0x46
0x3366: jne 0x32e0
0x336c: cmp byte ptr [rax+0x3],0x2d
0x3370: jne 0x32e0
0x3376: cmp byte ptr [rax+0x4],0x38
0x337a: jne 0x32e0
0x3380: cmp byte ptr [rax+0x5],0x0
0x3384: jne 0x32e0
0x338a: cmp byte ptr [rbp],0x60
0x338e: lea rax,[rip+0x341f]
0x3395: lea rdx,[rip+0x341c]
0x339c: cmovne rax,rdx
0x33a0: add rsp,0x8
0x33a4: pop rbx
0x33a5: pop rbp
0x33a6: ret 
0x3483: xor r11d,r11d
0x3486: mov rax,rbp
0x3489: mov r8d,r12d
0x348c: mov rbp,r11
0x348f: mov r11,rax
0x3492: nop word ptr [rax+rax]
0x3498: cmp r11,rbp
0x349b: setne r12b
0x349f: cmp r11,-0x1
0x34a3: jne 0x34b2
0x34a5: mov rax,qword ptr [rsp+0x10]
0x34aa: cmp byte ptr [rax+rbp],0x0
0x34ae: setne r12b
0x34b2: test r12b,r12b
0x34b5: je 0x3b10
0x34bb: cmp dword ptr [rsp+0x8],0x2
0x34c0: mov rdi,qword ptr [rsp+0x10]
0x34c5: lea r9,[rdi+rbp]
0x34c9: setne al
0x34cc: and al,byte ptr [rsp+0xd]
0x34d0: mov r10d,eax
0x34d3: je 0x3580
0x34d9: mov rax,qword ptr [rsp+0x18]
0x34de: test rax,rax
0x34e1: je 0x3910
0x34e7: cmp r11,-0x1
0x34eb: lea rbx,[rbp+rax]
0x34f0: jne 0x3520
0x34f2: cmp rax,0x1
0x34f6: jbe 0x3520
0x34f8: mov byte ptr [rsp+0x38],r8b
0x34fd: mov byte ptr [rsp+0x30],r10b
0x3502: mov qword ptr [rsp+0x28],r9
0x3507: call 0x16a0
0x350c: movzx r8d,byte ptr [rsp+0x38]
0x3512: movzx r10d,byte ptr [rsp+0x30]
0x3518: mov r11,rax
0x351b: mov r9,qword ptr [rsp+0x28]
0x3520: cmp rbx,r11
0x3523: mov byte ptr [rsp+0x28],r10b
0x3528: ja 0x3ae0
0x352e: mov rdx,qword ptr [rsp+0x18]
0x3533: mov rsi,qword ptr [rsp+0x48]
0x3538: mov rdi,r9
0x353b: mov qword ptr [rsp+0x40],r11
0x3540: mov byte ptr [rsp+0x38],r8b
0x3545: mov qword ptr [rsp+0x30],r9
0x354a: call 0x1780
0x354f: test eax,eax
0x3551: mov r9,qword ptr [rsp+0x30]
0x3556: movzx r8d,byte ptr [rsp+0x38]
0x355c: mov r11,qword ptr [rsp+0x40]
0x3561: jne 0x3ae0
0x3567: cmp byte ptr [rsp+0xf],0x0
0x356c: movzx r10d,byte ptr [rsp+0x28]
0x3572: jne 0x44f5
0x3578: nop dword ptr [rax+rax]
0x3580: movzx ebx,byte ptr [r9]
0x3584: cmp bl,0x7e
0x3587: ja 0x38a8
0x358d: lea rcx,[rip+0x32b8]
0x3594: movzx edx,bl
0x3597: movsxd rax,dword ptr [rcx+rdx*4]
0x359b: add rax,rcx
0x359e: jmp rax
0x35d8: cmp byte ptr [rsp+0xd],0x1
0x35dd: jne 0x36f2
0x35e3: test dl,dl
0x35e5: jne 0x36f2
0x35eb: mov rsi,qword ptr [rsp+0x20]
0x35f0: test rsi,rsi
0x35f3: je 0x3609
0x35f5: mov edx,ebx
0x35f7: shr dl,0x5
0x35fa: movzx edx,dl
0x35fd: mov edx,dword ptr [rsi+rdx*4]
0x3600: btl edx,ebx
0x3603: jb 0x3753
0x3609: test r10b,r10b
0x360c: jne 0x3753
0x3612: xor eax,0x1
0x3615: add rbp,0x1
0x3619: and eax,r8d
0x361c: test al,al
0x361e: je 0x3640
0x3620: cmp r13,r15
0x3623: jbe 0x362a
0x3625: mov byte ptr [r14+r15],0x27
0x362a: lea rax,[r15+0x1]
0x362e: cmp r13,rax
0x3631: jbe 0x3639
0x3633: mov byte ptr [r14+r15+0x1],0x27
0x3639: add r15,0x2
0x363d: xor r8d,r8d
0x3640: cmp r15,r13
0x3643: jae 0x3649
0x3645: mov byte ptr [r14+r15],bl
0x3649: movzx edi,byte ptr [rsp+0xe]
0x364e: add r15,0x1
0x3652: mov eax,0x0
0x3657: test r12b,r12b
0x365a: cmove edi,eax
0x365d: mov byte ptr [rsp+0xe],dil
0x3662: jmp 0x3498
0x36f2: cmp byte ptr [rsp+0xf],0x0
0x36f7: jne 0x35eb
0x36fd: jmp 0x3609
0x3753: cmp dword ptr [rsp+0x8],0x2
0x3758: sete dl
0x375b: cmp byte ptr [rsp+0xf],0x0
0x3760: mov eax,edx
0x3762: jne 0x3fb8
0x3768: mov eax,r8d
0x376b: xor eax,0x1
0x376e: and al,dl
0x3770: je 0x37a1
0x3772: cmp r13,r15
0x3775: jbe 0x377c
0x3777: mov byte ptr [r14+r15],0x27
0x377c: lea rdx,[r15+0x1]
0x3780: cmp r13,rdx
0x3783: jbe 0x378b
0x3785: mov byte ptr [r14+r15+0x1],0x24
0x378b: lea rdx,[r15+0x2]
0x378f: cmp r13,rdx
0x3792: jbe 0x379a
0x3794: mov byte ptr [r14+r15+0x2],0x27
0x379a: add r15,0x3
0x379e: mov r8d,eax
0x37a1: cmp r13,r15
0x37a4: jbe 0x37ab
0x37a6: mov byte ptr [r14+r15],0x5c
0x37ab: add r15,0x1
0x37af: add rbp,0x1
0x37b3: jmp 0x3640
0x38a0: xor r10d,r10d
0x38a3: nop dword ptr [rax+rax]
0x38a8: cmp qword ptr [rsp+0x58],0x1
0x38ae: jne 0x3c58
0x38b4: mov qword ptr [rsp+0x38],r11
0x38b9: mov byte ptr [rsp+0x30],r8b
0x38be: mov byte ptr [rsp+0x28],r10b
0x38c3: call 0x1910
0x38c8: mov rcx,qword ptr [rax]
0x38cb: movzx edx,bl
0x38ce: movzx r10d,byte ptr [rsp+0x28]
0x38d4: movzx r8d,byte ptr [rsp+0x30]
0x38da: mov r11,qword ptr [rsp+0x38]
0x38df: mov edi,0x1
0x38e4: movzx eax,word ptr [rcx+rdx*2]
0x38e8: and ax,0x4000
0x38ec: setne r12b
0x38f0: sete al
0x38f3: and al,byte ptr [rsp+0xd]
0x38f7: test al,al
0x38f9: jne 0x4291
0x38ff: cmp dword ptr [rsp+0x8],0x2
0x3904: sete dl
0x3907: jmp 0x35d8
0x3910: movzx ebx,byte ptr [r9]
0x3914: cmp bl,0x7e
0x3917: ja 0x38a0
0x3919: lea rcx,[rip+0x3128]
0x3920: movzx edx,bl
0x3923: movsxd rax,dword ptr [rcx+rdx*4]
0x3927: add rax,rcx
0x392a: jmp rax
0x3ae0: xor r10d,r10d
0x3ae3: jmp 0x3580
0x3b10: cmp dword ptr [rsp+0x8],0x2
0x3b15: movzx ebx,byte ptr [rsp+0xf]
0x3b1a: mov r12d,r8d
0x3b1d: mov rbp,r11
0x3b20: sete dl
0x3b23: mov eax,ebx
0x3b25: test r15,r15
0x3b28: sete cl
0x3b2b: and eax,edx
0x3b2d: and al,cl
0x3b2f: jne 0x4596
0x3b35: mov eax,ebx
0x3b37: xor eax,0x1
0x3b3a: and dl,al
0x3b3c: je 0x44ac
0x3b42: cmp byte ptr [rsp+0x7c],0x0
0x3b47: je 0x44aa
0x3b4d: cmp byte ptr [rsp+0xe],0x0
0x3b52: jne 0x454d
0x3b58: test r13,r13
0x3b5b: sete al
0x3b5e: cmp qword ptr [rsp+0x50],0x0
0x3b64: setne dl
0x3b67: and al,dl
0x3b69: je 0x458c
0x3b6f: mov r13,qword ptr [rsp+0x50]
0x3b74: lea rbx,[rip+0x2c4a]
0x3b7b: mov byte ptr [r14],0x27
0x3b7f: mov dword ptr [rsp+0x8],0x2
0x3b87: mov r15d,0x1
0x3b8d: mov qword ptr [rsp+0x18],0x1
0x3b96: mov byte ptr [rsp+0xf],0x0
0x3b9b: mov qword ptr [rsp+0x48],rbx
0x3ba0: mov byte ptr [rsp+0x7c],al
0x3ba4: jmp 0x3483
0x3c58: lea rax,[rsp+0xa0]
0x3c60: cmp r11,-0x1
0x3c64: mov qword ptr [rsp+0xa0],0x0
0x3c70: mov qword ptr [rsp+0x28],rax
0x3c75: jne 0x3ca4
0x3c77: mov rdi,qword ptr [rsp+0x10]
0x3c7c: mov byte ptr [rsp+0x40],r8b
0x3c81: mov byte ptr [rsp+0x38],r10b
0x3c86: mov qword ptr [rsp+0x30],r9
0x3c8b: call 0x16a0
0x3c90: movzx r8d,byte ptr [rsp+0x40]
0x3c96: movzx r10d,byte ptr [rsp+0x38]
0x3c9c: mov r11,rax
0x3c9f: mov r9,qword ptr [rsp+0x30]
0x3ca4: lea rax,[rsp+0x9c]
0x3cac: xor ecx,ecx
0x3cae: mov byte ptr [rsp+0x7e],bl
0x3cb2: mov byte ptr [rsp+0x7d],r8b
0x3cb7: mov rbx,rcx
0x3cba: mov qword ptr [rsp+0x88],r9
0x3cc2: mov qword ptr [rsp+0x38],rax
0x3cc7: mov byte ptr [rsp+0x7f],r10b
0x3ccc: mov qword ptr [rsp+0x80],r15
0x3cd4: mov qword ptr [rsp+0x40],r14
0x3cd9: mov qword ptr [rsp+0x70],r13
0x3cde: mov qword ptr [rsp+0x30],r11
0x3ce3: mov rax,qword ptr [rsp+0x10]
0x3ce8: lea r14,[rbp+rbx]
0x3ced: mov rdx,qword ptr [rsp+0x30]
0x3cf2: mov rcx,qword ptr [rsp+0x28]
0x3cf7: mov rdi,qword ptr [rsp+0x38]
0x3cfc: lea r13,[rax+r14]
0x3d00: sub rdx,r14
0x3d03: mov rsi,r13
0x3d06: call 0x5da0
0x3d0b: test rax,rax
0x3d0e: mov r15,rax
0x3d11: je 0x3d61
0x3d13: cmp rax,-0x1
0x3d17: je 0x4335
0x3d1d: cmp rax,-0x2
0x3d21: je 0x42c1
0x3d27: cmp dword ptr [rsp+0x8],0x2
0x3d2c: sete al
0x3d2f: and al,byte ptr [rsp+0xf]
0x3d33: jne 0x3ed0
0x3d39: mov edi,dword ptr [rsp+0x9c]
0x3d40: call 0x1900
0x3d45: mov rdi,qword ptr [rsp+0x28]
0x3d4a: test eax,eax
0x3d4c: mov eax,0x0
0x3d51: cmove r12d,eax
0x3d55: add rbx,r15
0x3d58: call 0x18f0
0x3d5d: test eax,eax
0x3d5f: je 0x3ce3
0x3d61: mov edx,r12d
0x3d64: mov rdi,rbx
0x3d67: movzx r8d,byte ptr [rsp+0x7d]
0x3d6d: xor edx,0x1
0x3d70: movzx ebx,byte ptr [rsp+0x7e]
0x3d75: movzx r10d,byte ptr [rsp+0x7f]
0x3d7b: and dl,byte ptr [rsp+0xd]
0x3d7f: mov r15,qword ptr [rsp+0x80]
0x3d87: mov r14,qword ptr [rsp+0x40]
0x3d8c: mov r13,qword ptr [rsp+0x70]
0x3d91: mov r11,qword ptr [rsp+0x30]
0x3d96: cmp rdi,0x1
0x3d9a: jbe 0x439b
0x3da0: mov rcx,rdi
0x3da3: xor esi,esi
0x3da5: movzx r9d,byte ptr [rsp+0xf]
0x3dab: add rcx,rbp
0x3dae: mov rdi,qword ptr [rsp+0x10]
0x3db3: jmp 0x3e6e
0x3dc0: cmp dword ptr [rsp+0x8],0x2
0x3dc5: sete al
0x3dc8: test r9b,r9b
0x3dcb: jne 0x4280
0x3dd1: mov esi,r8d
0x3dd4: xor esi,0x1
0x3dd7: and al,sil
0x3dda: je 0x3e0b
0x3ddc: cmp r13,r15
0x3ddf: jbe 0x3de6
0x3de1: mov byte ptr [r14+r15],0x27
0x3de6: lea rsi,[r15+0x1]
0x3dea: cmp r13,rsi
0x3ded: jbe 0x3df5
0x3def: mov byte ptr [r14+r15+0x1],0x24
0x3df5: lea rsi,[r15+0x2]
0x3df9: cmp r13,rsi
0x3dfc: jbe 0x3e04
0x3dfe: mov byte ptr [r14+r15+0x2],0x27
0x3e04: add r15,0x3
0x3e08: mov r8d,eax
0x3e0b: cmp r13,r15
0x3e0e: jbe 0x3e15
0x3e10: mov byte ptr [r14+r15],0x5c
0x3e15: lea rax,[r15+0x1]
0x3e19: cmp r13,rax
0x3e1c: jbe 0x3e2b
0x3e1e: mov eax,ebx
0x3e20: shr al,0x6
0x3e23: add eax,0x30
0x3e26: mov byte ptr [r14+r15+0x1],al
0x3e2b: lea rax,[r15+0x2]
0x3e2f: cmp r13,rax
0x3e32: jbe 0x3e44
0x3e34: mov eax,ebx
0x3e36: shr al,0x3
0x3e39: and eax,0x7
0x3e3c: add eax,0x30
0x3e3f: mov byte ptr [r14+r15+0x2],al
0x3e44: and ebx,0x7
0x3e47: add rbp,0x1
0x3e4b: add r15,0x3
0x3e4f: add ebx,0x30
0x3e52: cmp rbp,rcx
0x3e55: jae 0x3640
0x3e5b: mov esi,edx
0x3e5d: cmp r13,r15
0x3e60: jbe 0x3e66
0x3e62: mov byte ptr [r14+r15],bl
0x3e66: movzx ebx,byte ptr [rdi+rbp]
0x3e6a: add r15,0x1
0x3e6e: test dl,dl
0x3e70: jne 0x3dc0
0x3e76: mov eax,esi
0x3e78: xor eax,0x1
0x3e7b: and eax,r8d
0x3e7e: test r10b,r10b
0x3e81: je 0x3e91
0x3e83: cmp r13,r15
0x3e86: jbe 0x3e8d
0x3e88: mov byte ptr [r14+r15],0x5c
0x3e8d: add r15,0x1
0x3e91: add rbp,0x1
0x3e95: cmp rbp,rcx
0x3e98: jae 0x361c
0x3e9e: test al,al
0x3ea0: je 0x429e
0x3ea6: cmp r13,r15
0x3ea9: jbe 0x3eb0
0x3eab: mov byte ptr [r14+r15],0x27
0x3eb0: lea rax,[r15+0x1]
0x3eb4: cmp r13,rax
0x3eb7: jbe 0x3ebf
0x3eb9: mov byte ptr [r14+r15+0x1],0x27
0x3ebf: add r15,0x2
0x3ec3: xor r10d,r10d
0x3ec6: xor r8d,r8d
0x3ec9: jmp 0x3e5d
0x3ed0: cmp r15,0x1
0x3ed4: je 0x3d39
0x3eda: mov rdi,qword ptr [rsp+0x10]
0x3edf: lea rcx,[rdi+r15]
0x3ee3: lea rdx,[rdi+r14+0x1]
0x3ee8: lea r8,[rcx+r14]
0x3eec: jmp 0x3efd
0x3ef0: add rdx,0x1
0x3ef4: cmp r8,rdx
0x3ef7: je 0x3d39
0x3efd: movzx ecx,byte ptr [rdx]
0x3f00: sub ecx,0x5b
0x3f03: cmp cl,0x21
0x3f06: ja 0x3ef0
0x3f08: mov esi,0x1
0x3f0d: shl rsi,cl
0x3f10: mov rcx,rsi
0x3f13: movabsq rsi,0x20000002b
0x3f1d: test rcx,rsi
0x3f20: je 0x3ef0
0x3f22: mov r14,qword ptr [rsp+0x40]
0x3f27: mov r13,qword ptr [rsp+0x70]
0x3f2c: mov rbp,qword ptr [rsp+0x30]
0x3f31: mov dword ptr [rsp+0x8],0x2
0x3f39: cmp byte ptr [rsp+0xd],0x0
0x3f3e: je 0x3f50
0x3f40: test al,al
0x3f42: mov eax,0x4
0x3f47: cmove eax,dword ptr [rsp+0x8]
0x3f4c: mov dword ptr [rsp+0x8],eax
0x3f50: sub rsp,0x8
0x3f54: mov rcx,rbp
0x3f57: mov rsi,r13
0x3f5a: push qword ptr [rsp+0x68]
0x3f5e: push qword ptr [rsp+0x78]
0x3f62: mov rdi,r14
0x3f65: push 0x0
0x3f67: mov r9d,dword ptr [rsp+0x98]
0x3f6f: mov r8d,dword ptr [rsp+0x28]
0x3f74: mov rdx,qword ptr [rsp+0x30]
0x3f79: and r9d,-0x3
0x3f7d: call 0x33b0
0x3f82: add rsp,0x20
0x3f86: mov r15,rax
0x3f89: mov rbx,qword ptr [rsp+0xa8]
0x3f91: xor rbx,qword ptr fs:0x28
0x3f9a: mov rax,r15
0x3f9d: jne 0x45a3
0x3fa3: add rsp,0xb8
0x3faa: pop rbx
0x3fab: pop rbp
0x3fac: pop r12
0x3fae: pop r13
0x3fb0: pop r14
0x3fb2: pop r15
0x3fb4: ret 
0x3fb8: mov rbp,r11
0x3fbb: jmp 0x3f39
0x4021: test r13,r13
0x4024: jne 0x45ba
0x402a: lea rax,[rip+0x2794]
0x4031: mov qword ptr [rsp+0x50],0x0
0x403a: mov byte ptr [rsp+0xe],0x1
0x403f: mov byte ptr [rsp+0x7c],0x0
0x4044: xor r12d,r12d
0x4047: mov byte ptr [rsp+0xf],0x0
0x404c: mov qword ptr [rsp+0x18],0x1
0x4055: mov qword ptr [rsp+0x48],rax
0x405a: mov r15d,0x1
0x4060: mov dword ptr [rsp+0x8],0x2
0x4068: jmp 0x3483
0x4280: movzx ebx,byte ptr [rsp+0xf]
0x4285: mov rbp,r11
0x4288: mov byte ptr [rsp+0xd],bl
0x428c: jmp 0x3f39
0x4291: movzx edx,byte ptr [rsp+0xd]
0x4296: xor r12d,r12d
0x4299: jmp 0x3da0
0x429e: xor r10d,r10d
0x42a1: jmp 0x3e5d
0x42c1: mov r11,qword ptr [rsp+0x30]
0x42c6: mov rsi,r14
0x42c9: mov rcx,r13
0x42cc: mov rax,rbx
0x42cf: mov rdi,rbx
0x42d2: movzx r8d,byte ptr [rsp+0x7d]
0x42d8: movzx ebx,byte ptr [rsp+0x7e]
0x42dd: mov r9,qword ptr [rsp+0x88]
0x42e5: cmp rsi,r11
0x42e8: movzx r10d,byte ptr [rsp+0x7f]
0x42ee: mov r15,qword ptr [rsp+0x80]
0x42f6: mov r14,qword ptr [rsp+0x40]
0x42fb: mov r13,qword ptr [rsp+0x70]
0x4300: jae 0x4328
0x4302: cmp byte ptr [rcx],0x0
0x4305: jne 0x4317
0x4307: jmp 0x4328
0x4310: cmp byte ptr [r9+rax],0x0
0x4315: je 0x4325
0x4317: add rax,0x1
0x431b: lea rdx,[rbp+rax]
0x4320: cmp r11,rdx
0x4323: ja 0x4310
0x4325: mov rdi,rax
0x4328: movzx edx,byte ptr [rsp+0xd]
0x432d: xor r12d,r12d
0x4330: jmp 0x3d96
0x4335: mov rdi,rbx
0x4338: movzx r8d,byte ptr [rsp+0x7d]
0x433e: movzx ebx,byte ptr [rsp+0x7e]
0x4343: movzx r10d,byte ptr [rsp+0x7f]
0x4349: mov r15,qword ptr [rsp+0x80]
0x4351: xor r12d,r12d
0x4354: mov r14,qword ptr [rsp+0x40]
0x4359: mov r13,qword ptr [rsp+0x70]
0x435e: mov r11,qword ptr [rsp+0x30]
0x4363: movzx edx,byte ptr [rsp+0xd]
0x4368: jmp 0x3d96
0x439b: mov eax,edx
0x439d: jmp 0x38f7
0x44aa: mov eax,edx
0x44ac: mov rbx,qword ptr [rsp+0x48]
0x44b1: test rbx,rbx
0x44b4: je 0x44e2
0x44b6: test al,al
0x44b8: je 0x44e2
0x44ba: movzx ecx,byte ptr [rbx]
0x44bd: mov rax,rbx
0x44c0: test cl,cl
0x44c2: je 0x44e2
0x44c4: mov rdx,r15
0x44c7: sub rax,r15
0x44ca: cmp r13,rdx
0x44cd: jbe 0x44d3
0x44cf: mov byte ptr [r14+rdx],cl
0x44d3: add rdx,0x1
0x44d7: movzx ecx,byte ptr [rax+rdx]
0x44db: test cl,cl
0x44dd: jne 0x44ca
0x44df: mov r15,rdx
0x44e2: cmp r13,r15
0x44e5: jbe 0x3f89
0x44eb: mov byte ptr [r14+r15],0x0
0x44f0: jmp 0x3f89
0x44f5: cmp dword ptr [rsp+0x8],0x2
0x44fa: movzx ebx,byte ptr [rsp+0xf]
0x44ff: mov rbp,r11
0x4502: sete al
0x4505: mov byte ptr [rsp+0xd],bl
0x4509: jmp 0x3f39
0x454d: sub rsp,0x8
0x4551: mov r8d,0x5
0x4557: mov rcx,r11
0x455a: push qword ptr [rsp+0x68]
0x455e: push qword ptr [rsp+0x78]
0x4562: mov rdi,r14
0x4565: push qword ptr [rsp+0x38]
0x4569: mov r9d,dword ptr [rsp+0x98]
0x4571: mov rdx,qword ptr [rsp+0x30]
0x4576: mov rsi,qword ptr [rsp+0x70]
0x457b: call 0x33b0
0x4580: add rsp,0x20
0x4584: mov r15,rax
0x4587: jmp 0x3f89
0x458c: movzx eax,byte ptr [rsp+0x7c]
0x4591: jmp 0x44ac
0x4596: mov dword ptr [rsp+0x8],0x2
0x459e: jmp 0x3f39
0x45a3: call 0x16b0
0x45a8: mov byte ptr [rsp+0xd],0x0
0x45ad: jmp 0x4021
0x45ba: mov byte ptr [rsp+0xe],0x1
0x45bf: xor eax,eax
0x45c1: xor r12d,r12d
0x45c4: mov qword ptr [rsp+0x50],0x0
0x45cd: jmp 0x3b74
0x45df: call 0x15f0
0x45e4: nop 
0x45e6: nop word ptr cs:[rax+rax]
0x46dc: add rsp,0x20
0x46e0: mov r11,qword ptr [rsp+0x10]
0x46e5: cmp r11,rax
0x46e8: ja 0x4751
0x46ea: lea rsi,[rax+0x1]
0x46ee: lea rax,[rip+0x204a2b]
0x46f5: cmp r12,rax
0x46f8: mov qword ptr [rbx],rsi
0x46fb: je 0x470f
0x46fd: mov rdi,r12
0x4700: mov qword ptr [rsp+0x10],rsi
0x4705: call 0x15e0
0x470a: mov rsi,qword ptr [rsp+0x10]
0x470f: mov rdi,rsi
0x4712: mov qword ptr [rsp+0x10],rsi
0x4717: call 0x55d0
0x471c: sub rsp,0x8
0x4720: mov qword ptr [rbx+0x8],rax
0x4724: mov r8d,dword ptr [rbp]
0x4728: push qword ptr [rbp+0x30]
0x472b: push qword ptr [rbp+0x28]
0x472e: mov rcx,r14
0x4731: push r15
0x4733: mov r9d,dword ptr [rsp+0x3c]
0x4738: mov rdi,rax
0x473b: mov rdx,qword ptr [rsp+0x28]
0x4740: mov rsi,qword ptr [rsp+0x30]
0x4745: mov r12,rax
0x4748: call 0x33b0
0x474d: add rsp,0x20
0x4751: mov eax,dword ptr [rsp+0x18]
0x4755: mov dword ptr [r13],eax
0x4759: add rsp,0x28
0x475d: mov rax,r12
0x4760: pop rbx
0x4761: pop rbp
0x4762: pop r12
0x4764: pop r13
0x4766: pop r14
0x4768: pop r15
0x476a: ret 
0x4791: call 0x15f0
0x4796: call 0x5820
0x479b: nop dword ptr [rax+rax]
0x47a0: push r12
0x47a2: push rbp
0x47a3: push rbx
0x47a4: mov rbx,rdi
0x47a7: call 0x1600
0x47ac: mov r12d,dword ptr [rax]
0x47af: mov rbp,rax
0x47b2: lea rax,[rip+0x204a67]
0x47b9: test rbx,rbx
0x47bc: mov esi,0x38
0x47c1: cmove rbx,rax
0x47c5: mov rdi,rbx
0x47c8: call 0x57d0
0x47cd: mov dword ptr [rbp],r12d
0x47d1: pop rbx
0x47d2: pop rbp
0x47d3: pop r12
0x47d5: ret 
0x47e0: lea rax,[rip+0x204a39]
0x47e7: test rdi,rdi
0x47ea: cmove rdi,rax
0x47ee: mov eax,dword ptr [rdi]
0x47f0: ret 
0x4800: lea rax,[rip+0x204a19]
0x4807: test rdi,rdi
0x480a: cmove rdi,rax
0x480e: mov dword ptr [rdi],esi
0x4810: ret 
0x4820: lea rax,[rip+0x2049f9]
0x4827: test rdi,rdi
0x482a: mov ecx,esi
0x482c: cmove rdi,rax
0x4830: mov eax,esi
0x4832: and ecx,0x1f
0x4835: shr al,0x5
0x4838: movzx eax,al
0x483b: lea rdi,[rdi+rax*4+0x8]
0x4840: mov esi,dword ptr [rdi]
0x4842: mov eax,esi
0x4844: shr eax,cl
0x4846: xor edx,eax
0x4848: and eax,0x1
0x484b: and edx,0x1
0x484e: shl edx,cl
0x4850: xor edx,esi
0x4852: mov dword ptr [rdi],edx
0x4854: ret 
0x4860: lea rax,[rip+0x2049b9]
0x4867: test rdi,rdi
0x486a: cmove rdi,rax
0x486e: mov eax,dword ptr [rdi+0x4]
0x4871: mov dword ptr [rdi+0x4],esi
0x4874: ret 
0x4880: lea rax,[rip+0x204999]
0x4887: test rdi,rdi
0x488a: cmove rdi,rax
0x488e: test rsi,rsi
0x4891: mov dword ptr [rdi],0xa
0x4897: je 0x48a7
0x4899: test rdx,rdx
0x489c: je 0x48a7
0x489e: mov qword ptr [rdi+0x28],rsi
0x48a2: mov qword ptr [rdi+0x30],rdx
0x48a6: ret 
0x48a7: sub rsp,0x8
0x48ab: call 0x15f0
0x48b0: push r15
0x48b2: push r14
0x48b4: lea rax,[rip+0x204965]
0x48bb: push r13
0x48bd: push r12
0x48bf: mov r13,rdi
0x48c2: push rbp
0x48c3: push rbx
0x48c4: mov rbx,r8
0x48c7: mov r14,rsi
0x48ca: mov r15,rdx
0x48cd: sub rsp,0x18
0x48d1: test r8,r8
0x48d4: cmove rbx,rax
0x48d8: mov qword ptr [rsp+0x8],rcx
0x48dd: call 0x1600
0x48e2: mov r12d,dword ptr [rax]
0x48e5: mov rbp,rax
0x48e8: lea rax,[rbx+0x8]
0x48ec: sub rsp,0x8
0x48f0: mov r9d,dword ptr [rbx+0x4]
0x48f4: push qword ptr [rbx+0x30]
0x48f7: mov r8d,dword ptr [rbx]
0x48fa: push qword ptr [rbx+0x28]
0x48fd: mov rdx,r15
0x4900: push rax
0x4901: mov rcx,qword ptr [rsp+0x28]
0x4906: mov rsi,r14
0x4909: mov rdi,r13
0x490c: call 0x33b0
0x4911: mov dword ptr [rbp],r12d
0x4915: add rsp,0x38
0x4919: pop rbx
0x491a: pop rbp
0x491b: pop r12
0x491d: pop r13
0x491f: pop r14
0x4921: pop r15
0x4923: ret 
0x4930: push r15
0x4932: push r14
0x4934: lea rax,[rip+0x2048e5]
0x493b: push r13
0x493d: push r12
0x493f: mov r12,rdx
0x4942: push rbp
0x4943: push rbx
0x4944: mov rbx,rcx
0x4947: mov r14,rdi
0x494a: mov r15,rsi
0x494d: sub rsp,0x38
0x4951: test rcx,rcx
0x4954: cmove rbx,rax
0x4958: xor ebp,ebp
0x495a: call 0x1600
0x495f: test r12,r12
0x4962: mov r13,rax
0x4965: mov eax,dword ptr [rax]
0x4967: sete bpl
0x496b: or ebp,dword ptr [rbx+0x4]
0x496e: lea r10,[rbx+0x8]
0x4972: sub rsp,0x8
0x4976: mov r8d,dword ptr [rbx]
0x4979: mov rcx,r15
0x497c: mov dword ptr [rsp+0x14],eax
0x4980: push qword ptr [rbx+0x30]
0x4983: mov rdx,r14
0x4986: push qword ptr [rbx+0x28]
0x4989: push r10
0x498b: xor esi,esi
0x498d: mov r9d,ebp
0x4990: xor edi,edi
0x4992: mov qword ptr [rsp+0x40],r10
0x4997: call 0x33b0
0x499c: lea rsi,[rax+0x1]
0x49a0: mov qword ptr [rsp+0x48],rax
0x49a5: add rsp,0x20
0x49a9: mov rdi,rsi
0x49ac: mov qword ptr [rsp+0x18],rsi
0x49b1: call 0x55d0
0x49b6: mov qword ptr [rsp+0x10],rax
0x49bb: sub rsp,0x8
0x49bf: push qword ptr [rbx+0x30]
0x49c2: push qword ptr [rbx+0x28]
0x49c5: mov r10,qword ptr [rsp+0x38]
0x49ca: mov r9d,ebp
0x49cd: mov r8d,dword ptr [rbx]
0x49d0: mov rcx,r15
0x49d3: mov rdx,r14
0x49d6: mov rdi,rax
0x49d9: push r10
0x49db: mov rsi,qword ptr [rsp+0x38]
0x49e0: call 0x33b0
0x49e5: mov eax,dword ptr [rsp+0x2c]
0x49e9: add rsp,0x20
0x49ed: test r12,r12
0x49f0: mov dword ptr [r13],eax
0x49f4: je 0x49ff
0x49f6: mov r11,qword ptr [rsp+0x28]
0x49fb: mov qword ptr [r12],r11
0x49ff: mov rax,qword ptr [rsp+0x10]
0x4a04: add rsp,0x38
0x4a08: pop rbx
0x4a09: pop rbp
0x4a0a: pop r12
0x4a0c: pop r13
0x4a0e: pop r14
0x4a10: pop r15
0x4a12: ret 
0x4a20: mov rcx,rdx
0x4a23: xor edx,edx
0x4a25: jmp 0x4930
0x4a30: mov eax,dword ptr [rip+0x204622]
0x4a36: push r12
0x4a38: mov r12,qword ptr [rip+0x204621]
0x4a3f: push rbp
0x4a40: push rbx
0x4a41: cmp eax,0x1
0x4a44: jle 0x4a71
0x4a46: sub eax,0x2
0x4a49: lea rbx,[r12+0x18]
0x4a4e: shl rax,0x4
0x4a52: lea rbp,[r12+rax+0x28]
0x4a57: nop word ptr [rax+rax]
0x4a60: mov rdi,qword ptr [rbx]
0x4a63: add rbx,0x10
0x4a67: call 0x15e0
0x4a6c: cmp rbx,rbp
0x4a6f: jne 0x4a60
0x4a71: mov rdi,qword ptr [r12+0x8]
0x4a76: lea rbx,[rip+0x2046a3]
0x4a7d: cmp rdi,rbx
0x4a80: je 0x4a99
0x4a82: call 0x15e0
0x4a87: mov qword ptr [rip+0x2045de],0x100
0x4a92: mov qword ptr [rip+0x2045df],rbx
0x4a99: lea rbx,[rip+0x2045d0]
0x4aa0: cmp r12,rbx
0x4aa3: je 0x4ab4
0x4aa5: mov rdi,r12
0x4aa8: call 0x15e0
0x4aad: mov qword ptr [rip+0x2045ac],rbx
0x4ab4: pop rbx
0x4ab5: mov dword ptr [rip+0x204599],0x1
0x4abf: pop rbp
0x4ac0: pop r12
0x4ac2: ret 
0x4ad0: lea rcx,[rip+0x204749]
0x4ad7: mov rdx,-0x1
0x4ade: jmp 0x45f0
0x4af0: lea rcx,[rip+0x204729]
0x4af7: jmp 0x45f0
0x4b00: lea rcx,[rip+0x204719]
0x4b07: mov rsi,rdi
0x4b0a: mov rdx,-0x1
0x4b11: xor edi,edi
0x4b13: jmp 0x45f0
0x4b20: lea rcx,[rip+0x2046f9]
0x4b27: mov rdx,rsi
0x4b2a: mov rsi,rdi
0x4b2d: xor edi,edi
0x4b2f: jmp 0x45f0
0x4b40: sub rsp,0x48
0x4b44: mov rax,rdx
0x4b47: mov rdx,qword ptr fs:0x28
0x4b50: mov qword ptr [rsp+0x38],rdx
0x4b55: xor edx,edx
0x4b57: cmp esi,0xa
0x4b5a: je 0x4bc4
0x4b5c: mov dword ptr [rsp],esi
0x4b5f: mov rcx,rsp
0x4b62: mov rdx,-0x1
0x4b69: mov rsi,rax
0x4b6c: mov qword ptr [rsp+0x4],0x0
0x4b75: mov qword ptr [rsp+0xc],0x0
0x4b7e: mov qword ptr [rsp+0x14],0x0
0x4b87: mov qword ptr [rsp+0x1c],0x0
0x4b90: mov qword ptr [rsp+0x24],0x0
0x4b99: mov qword ptr [rsp+0x2c],0x0
0x4ba2: mov dword ptr [rsp+0x34],0x0
0x4baa: call 0x45f0
0x4baf: mov rcx,qword ptr [rsp+0x38]
0x4bb4: xor rcx,qword ptr fs:0x28
0x4bbd: jne 0x4bc9
0x4bbf: add rsp,0x48
0x4bc3: ret 
0x4bc4: call 0x15f0
0x4bc9: call 0x16b0
0x4bce: nop 
0x4bd0: sub rsp,0x48
0x4bd4: mov rax,rdx
0x4bd7: mov rdx,rcx
0x4bda: mov rcx,qword ptr fs:0x28
0x4be3: mov qword ptr [rsp+0x38],rcx
0x4be8: xor ecx,ecx
0x4bea: cmp esi,0xa
0x4bed: je 0x4c50
0x4bef: mov dword ptr [rsp],esi
0x4bf2: mov rcx,rsp
0x4bf5: mov rsi,rax
0x4bf8: mov qword ptr [rsp+0x4],0x0
0x4c01: mov qword ptr [rsp+0xc],0x0
0x4c0a: mov qword ptr [rsp+0x14],0x0
0x4c13: mov qword ptr [rsp+0x1c],0x0
0x4c1c: mov qword ptr [rsp+0x24],0x0
0x4c25: mov qword ptr [rsp+0x2c],0x0
0x4c2e: mov dword ptr [rsp+0x34],0x0
0x4c36: call 0x45f0
0x4c3b: mov rdx,qword ptr [rsp+0x38]
0x4c40: xor rdx,qword ptr fs:0x28
0x4c49: jne 0x4c55
0x4c4b: add rsp,0x48
0x4c4f: ret 
0x4c50: call 0x15f0
0x4c55: call 0x16b0
0x4c5a: nop word ptr [rax+rax]
0x4c60: mov rdx,rsi
0x4c63: mov esi,edi
0x4c65: xor edi,edi
0x4c67: jmp 0x4b40
0x4c70: mov rcx,rdx
0x4c73: mov rdx,rsi
0x4c76: mov esi,edi
0x4c78: xor edi,edi
0x4c7a: jmp 0x4bd0
0x4c80: sub rsp,0x48
0x4c84: mov ecx,edx
0x4c86: mov rax,qword ptr fs:0x28
0x4c8f: mov qword ptr [rsp+0x38],rax
0x4c94: xor eax,eax
0x4c96: mov rax,qword ptr [rip+0x2045b3]
0x4c9d: mov r8,rsp
0x4ca0: and ecx,0x1f
0x4ca3: movdqa xmm0,[rip+0x204575]
0x4cab: mov qword ptr [rsp+0x30],rax
0x4cb0: mov eax,edx
0x4cb2: movaps [rsp],xmm0
0x4cb6: shr al,0x5
0x4cb9: movzx eax,al
0x4cbc: lea r9,[r8+rax*4+0x8]
0x4cc1: movdqa xmm0,[rip+0x204567]
0x4cc9: movaps [rsp+0x10],xmm0
0x4cce: movdqa xmm0,[rip+0x20456a]
0x4cd6: movaps [rsp+0x20],xmm0
0x4cdb: mov edx,dword ptr [r9]
0x4cde: mov eax,edx
0x4ce0: shr eax,cl
0x4ce2: not eax
0x4ce4: and eax,0x1
0x4ce7: shl eax,cl
0x4ce9: mov rcx,r8
0x4cec: xor eax,edx
0x4cee: mov rdx,rsi
0x4cf1: mov rsi,rdi
0x4cf4: mov dword ptr [r9],eax
0x4cf7: xor edi,edi
0x4cf9: call 0x45f0
0x4cfe: mov rsi,qword ptr [rsp+0x38]
0x4d03: xor rsi,qword ptr fs:0x28
0x4d0c: jne 0x4d13
0x4d0e: add rsp,0x48
0x4d12: ret 
0x4d13: call 0x16b0
0x4d18: nop dword ptr [rax+rax]
0x4d20: movsx edx,sil
0x4d24: mov rsi,-0x1
0x4d2b: jmp 0x4c80
0x4d30: mov edx,0x3a
0x4d35: mov rsi,-0x1
0x4d3c: jmp 0x4c80
0x4d50: mov edx,0x3a
0x4d55: jmp 0x4c80
0x4dcf: mov rcx,qword ptr [rsp+0x38]
0x4dd4: xor rcx,qword ptr fs:0x28
0x4ddd: jne 0x4de9
0x4ddf: add rsp,0x48
0x4de3: ret 
0x4de4: call 0x15f0
0x4de9: call 0x16b0
0x4dee: nop 
0x4df0: sub rsp,0x48
0x4df4: mov r9,rcx
0x4df7: mov rcx,qword ptr [rip+0x204452]
0x4dfe: movdqa xmm0,[rip+0x20441a]
0x4e06: mov rax,qword ptr fs:0x28
0x4e0f: mov qword ptr [rsp+0x38],rax
0x4e14: xor eax,eax
0x4e16: movaps [rsp],xmm0
0x4e1a: test rsi,rsi
0x4e1d: mov qword ptr [rsp+0x30],rcx
0x4e22: mov dword ptr [rsp],0xa
0x4e29: movdqa xmm0,[rip+0x2043ff]
0x4e31: movaps [rsp+0x10],xmm0
0x4e36: movdqa xmm0,[rip+0x204402]
0x4e3e: movaps [rsp+0x20],xmm0
0x4e43: je 0x4e77
0x4e45: test rdx,rdx
0x4e48: je 0x4e77
0x4e4a: mov qword ptr [rsp+0x28],rsi
0x4e4f: mov qword ptr [rsp+0x30],rdx
0x4e54: mov rcx,rsp
0x4e57: mov rdx,r8
0x4e5a: mov rsi,r9
0x4e5d: call 0x45f0
0x4e62: mov rdi,qword ptr [rsp+0x38]
0x4e67: xor rdi,qword ptr fs:0x28
0x4e70: jne 0x4e7c
0x4e72: add rsp,0x48
0x4e76: ret 
0x4e77: call 0x15f0
0x4e7c: call 0x16b0
0x4e81: nop dword ptr [rax+rax]
0x4e86: nop word ptr cs:[rax+rax]
0x4e90: mov r8,-0x1
0x4e97: jmp 0x4df0
0x4ea0: mov rcx,rdx
0x4ea3: mov r8,-0x1
0x4eaa: mov rdx,rsi
0x4ead: mov rsi,rdi
0x4eb0: xor edi,edi
0x4eb2: jmp 0x4df0
0x4ec0: mov r8,rcx
0x4ec3: mov rcx,rdx
0x4ec6: mov rdx,rsi
0x4ec9: mov rsi,rdi
0x4ecc: xor edi,edi
0x4ece: jmp 0x4df0
0x4ee0: lea rcx,[rip+0x204139]
0x4ee7: jmp 0x45f0
0x4ef0: lea rcx,[rip+0x204129]
0x4ef7: mov rdx,rsi
0x4efa: mov rsi,rdi
0x4efd: xor edi,edi
0x4eff: jmp 0x45f0
0x4f10: lea rcx,[rip+0x204109]
0x4f17: mov rdx,-0x1
0x4f1e: jmp 0x45f0
0x4f30: lea rcx,[rip+0x2040e9]
0x4f37: mov rsi,rdi
0x4f3a: mov rdx,-0x1
0x4f41: xor edi,edi
0x4f43: jmp 0x45f0
0x4f93: cmp eax,0x16
0x4f96: jne 0x4fa0
0x4f98: mov ebx,0x7ff00000
0x4f9d: jmp 0x4f68
0x50e8: mov r8,rcx
0x50eb: mov rcx,rdx
0x50ee: lea rdx,[rip+0x1b9f]
0x50f5: mov esi,0x1
0x50fa: xor eax,eax
0x50fc: call 0x18e0
0x5101: jmp 0x4fec
0x52fd: push r12
0x52ff: push r15
0x5301: push r14
0x5303: mov r8,qword ptr [rsp+0x20]
0x5308: mov rcx,rbx
0x530b: mov rdx,rax
0x530e: mov rdi,rbp
0x5311: mov esi,0x1
0x5316: xor eax,eax
0x5318: call 0x18e0
0x531d: add rsp,0x20
0x5321: add rsp,0x28
0x5325: pop rbx
0x5326: pop rbp
0x5327: pop r12
0x5329: pop r13
0x532b: pop r14
0x532d: pop r15
0x532f: ret 
0x5369: push r12
0x536b: push r15
0x536d: push r14
0x536f: mov r9,qword ptr [rsp+0x28]
0x5374: jmp 0x5303
0x53d0: xor r9d,r9d
0x53d3: cmp qword ptr [r8],0x0
0x53d7: je 0x53eb
0x53d9: nop dword ptr [rax]
0x53e0: add r9,0x1
0x53e4: cmp qword ptr [r8+r9*8],0x0
0x53e9: jne 0x53e0
0x53eb: jmp 0x4fb0
0x53f0: sub rsp,0x68
0x53f4: mov r10,r8
0x53f7: xor r9d,r9d
0x53fa: mov rax,qword ptr fs:0x28
0x5403: mov qword ptr [rsp+0x58],rax
0x5408: xor eax,eax
0x540a: mov r8,rsp
0x540d: nop dword ptr [rax]
0x5410: mov eax,dword ptr [r10]
0x5413: cmp eax,0x2f
0x5416: ja 0x545a
0x5418: mov r11d,eax
0x541b: add r11,qword ptr [r10+0x10]
0x541f: add eax,0x8
0x5422: mov dword ptr [r10],eax
0x5425: mov rax,qword ptr [r11]
0x5428: test rax,rax
0x542b: mov qword ptr [r8+r9*8],rax
0x542f: je 0x543b
0x5431: add r9,0x1
0x5435: cmp r9,0xa
0x5439: jne 0x5410
0x543b: call 0x4fb0
0x5440: mov rax,qword ptr [rsp+0x58]
0x5445: xor rax,qword ptr fs:0x28
0x544e: jne 0x5455
0x5450: add rsp,0x68
0x5454: ret 
0x5455: call 0x16b0
0x545a: mov r11,qword ptr [r10+0x8]
0x545e: lea rax,[r11+0x8]
0x5462: mov qword ptr [r10+0x8],rax
0x5466: jmp 0x5425
0x5530: call 0x16b0
0x553c: mov rax,rbx
0x553f: add rbx,0x8
0x5543: jmp 0x54f6
0x5550: push rbx
0x5551: lea rsi,[rip+0x178a]
0x5558: mov edx,0x5
0x555d: xor edi,edi
0x555f: call 0x1680
0x5564: lea rdx,[rip+0x178c]
0x556b: mov rsi,rax
0x556e: mov edi,0x1
0x5573: xor eax,eax
0x5575: call 0x1840
0x557a: lea rsi,[rip+0x178c]
0x5581: mov edx,0x5
0x5586: xor edi,edi
0x5588: call 0x1680
0x558d: lea rcx,[rip+0x1094]
0x5594: lea rdx,[rip+0xe6e]
0x559b: mov rsi,rax
0x559e: mov edi,0x1
0x55a3: xor eax,eax
0x55a5: call 0x1840
0x55aa: mov rbx,qword ptr [rip+0x203af7]
0x55b1: lea rsi,[rip+0x1988]
0x55b8: xor edi,edi
0x55ba: mov edx,0x5
0x55bf: call 0x1680
0x55c4: mov rsi,rbx
0x55c7: mov rdi,rax
0x55ca: pop rbx
0x55cb: jmp 0x1790
0x55d0: push rbx
0x55d1: mov rbx,rdi
0x55d4: call 0x17e0
0x55d9: test rax,rax
0x55dc: jne 0x55e3
0x55de: test rbx,rbx
0x55e1: jne 0x55e5
0x55e3: pop rbx
0x55e4: ret 
0x55e5: call 0x5820
0x55ea: nop word ptr [rax+rax]
0x55f0: mov rax,rdi
0x55f3: mul rsi
0x55f6: mov rdi,rax
0x55f9: seto al
0x55fc: test rdi,rdi
0x55ff: js 0x560b
0x5601: movzx eax,al
0x5604: test rax,rax
0x5607: jne 0x560b
0x5609: jmp 0x55d0
0x560b: sub rsp,0x8
0x560f: call 0x5820
0x5614: nop 
0x5616: nop word ptr cs:[rax+rax]
0x5620: jmp 0x55d0
0x5639: test rdi,rdi
0x563c: jne 0x5658
0x5658: call 0x15e0
0x565d: xor eax,eax
0x565f: pop rbx
0x5660: ret 
0x5666: nop word ptr cs:[rax+rax]
0x5670: mov rax,rsi
0x5673: mul rdx
0x5676: mov rsi,rax
0x5679: seto al
0x567c: test rsi,rsi
0x567f: js 0x568b
0x5681: movzx eax,al
0x5684: test rax,rax
0x5687: jne 0x568b
0x5689: jmp 0x5630
0x568b: sub rsp,0x8
0x568f: call 0x5820
0x5694: nop 
0x5696: nop word ptr cs:[rax+rax]
0x56a0: test rdi,rdi
0x56a3: mov r9,rdx
0x56a6: mov rcx,qword ptr [rsi]
0x56a9: je 0x56e0
0x56ab: xor edx,edx
0x56ad: movabsq rax,0x5555555555555554
0x56b7: div r9
0x56ba: cmp rax,rcx
0x56bd: jbe 0x56fb
0x56bf: mov rax,rcx
0x56c2: shr rax, 1
0x56c5: lea rcx,[rax+rcx+0x1]
0x56ca: mov qword ptr [rsi],rcx
0x56cd: imul rcx,r9
0x56d1: mov rsi,rcx
0x56d4: jmp 0x5630
0x56e0: test rcx,rcx
0x56e3: je 0x5708
0x56e5: mov rax,rcx
0x56e8: mul r9
0x56eb: seto dl
0x56ee: test rax,rax
0x56f1: movzx edx,dl
0x56f4: js 0x56fb
0x56f6: test rdx,rdx
0x56f9: je 0x56ca
0x56fb: sub rsp,0x8
0x56ff: call 0x5820
0x5704: nop dword ptr [rax]
0x5708: xor edx,edx
0x570a: mov eax,0x80
0x570f: xor r8d,r8d
0x5712: div r9
0x5715: test rax,rax
0x5718: sete r8b
0x571c: lea rcx,[r8+rax]
0x5720: jmp 0x56e5
0x5730: test rdi,rdi
0x5733: mov rax,qword ptr [rsi]
0x5736: je 0x5760
0x5738: movabsq rdx,0x5555555555555553
0x5742: cmp rax,rdx
0x5745: ja 0x5771
0x5747: mov rdx,rax
0x574a: shr rdx, 1
0x574d: lea rax,[rdx+rax+0x1]
0x5752: mov qword ptr [rsi],rax
0x5755: mov rsi,rax
0x5758: jmp 0x5630
0x5760: test rax,rax
0x5763: mov edx,0x80
0x5768: cmove rax,rdx
0x576c: test rax,rax
0x576f: jns 0x5752
0x5771: sub rsp,0x8
0x5775: call 0x5820
0x577a: nop word ptr [rax+rax]
0x5780: push rbx
0x5781: mov rbx,rdi
0x5784: call 0x55d0
0x5789: mov rdx,rbx
0x578c: xor esi,esi
0x578e: mov rdi,rax
0x5791: pop rbx
0x5792: jmp 0x1740
0x57a0: mov rax,rdi
0x57a3: sub rsp,0x8
0x57a7: mul rsi
0x57aa: seto dl
0x57ad: test rax,rax
0x57b0: js 0x57c9
0x57b2: movzx edx,dl
0x57b5: test rdx,rdx
0x57b8: jne 0x57c9
0x57ba: call 0x17a0
0x57bf: test rax,rax
0x57c2: je 0x57c9
0x57c4: add rsp,0x8
0x57c8: ret 
0x57c9: call 0x5820
0x57ce: nop 
0x57d0: push rbp
0x57d1: push rbx
0x57d2: mov rbp,rdi
0x57d5: mov rdi,rsi
0x57d8: mov rbx,rsi
0x57db: sub rsp,0x8
0x57df: call 0x55d0
0x57e4: add rsp,0x8
0x57e8: mov rdx,rbx
0x57eb: mov rsi,rbp
0x57ee: pop rbx
0x57ef: pop rbp
0x57f0: mov rdi,rax
0x57f3: jmp 0x17c0
0x5800: push rbx
0x5801: mov rbx,rdi
0x5804: call 0x16a0
0x5809: mov rdi,rbx
0x580c: lea rsi,[rax+0x1]
0x5810: pop rbx
0x5811: jmp 0x57d0
0x5850: call 0x15f0
0x5855: nop word ptr cs:[rax+rax]
0x585f: nop 
0x5860: push r15
0x5862: push r14
0x5864: push r13
0x5866: push r12
0x5868: push rbp
0x5869: push rbx
0x586a: sub rsp,0x28
0x586e: mov rax,qword ptr fs:0x28
0x5877: mov qword ptr [rsp+0x18],rax
0x587c: xor eax,eax
0x587e: cmp edx,0x24
0x5881: ja 0x5be5
0x5887: lea rax,[rsp+0x10]
0x588c: mov r15,rsi
0x588f: test rsi,rsi
0x5892: mov rbp,rdi
0x5895: mov dword ptr [rsp+0x8],edx
0x5899: mov r14,rcx
0x589c: mov r13,r8
0x589f: cmove r15,rax
0x58a3: call 0x1600
0x58a8: mov dword ptr [rax],0x0
0x58ae: mov r12,rax
0x58b1: movzx ebx,byte ptr [rbp]
0x58b5: call 0x1910
0x58ba: mov edx,dword ptr [rsp+0x8]
0x58be: mov rsi,qword ptr [rax]
0x58c1: mov rax,rbp
0x58c4: jmp 0x58d7
0x58d0: add rax,0x1
0x58d4: movzx ebx,byte ptr [rax]
0x58d7: movzx ecx,bl
0x58da: test byte ptr [rsi+rcx*2+0x1],0x20
0x58df: jne 0x58d0
0x58e1: cmp bl,0x2d
0x58e4: je 0x5938
0x58e6: xor ecx,ecx
0x58e8: mov rsi,r15
0x58eb: mov rdi,rbp
0x58ee: call 0x1730
0x58f3: mov rcx,qword ptr [r15]
0x58f6: mov rbx,rax
0x58f9: cmp rcx,rbp
0x58fc: je 0x5928
0x58fe: mov eax,dword ptr [r12]
0x5902: test eax,eax
0x5904: je 0x5968
0x5906: cmp eax,0x22
0x5909: mov ebp,0x1
0x590e: jne 0x5938
0x5910: test r13,r13
0x5913: je 0x591e
0x5915: movzx r12d,byte ptr [rcx]
0x5919: test r12b,r12b
0x591c: jne 0x5997
0x591e: mov qword ptr [r14],rbx
0x5921: jmp 0x593d
0x5928: test r13,r13
0x592b: mov qword ptr [rsp+0x8],rcx
0x5930: jne 0x5970
0x5932: nop word ptr [rax+rax]
0x5938: mov ebp,0x4
0x593d: mov rdi,qword ptr [rsp+0x18]
0x5942: xor rdi,qword ptr fs:0x28
0x594b: mov eax,ebp
0x594d: jne 0x5be0
0x5953: add rsp,0x28
0x5957: pop rbx
0x5958: pop rbp
0x5959: pop r12
0x595b: pop r13
0x595d: pop r14
0x595f: pop r15
0x5961: ret 
0x5968: xor ebp,ebp
0x596a: jmp 0x5910
0x5970: movzx r12d,byte ptr [rbp]
0x5975: test r12b,r12b
0x5978: je 0x5938
0x597a: movsx esi,r12b
0x597e: mov rdi,r13
0x5981: xor ebp,ebp
0x5983: call 0x16e0
0x5988: test rax,rax
0x598b: mov ebx,0x1
0x5990: mov rcx,qword ptr [rsp+0x8]
0x5995: je 0x5938
0x5997: movsx esi,r12b
0x599b: mov rdi,r13
0x599e: mov qword ptr [rsp+0x8],rcx
0x59a3: call 0x16e0
0x59a8: test rax,rax
0x59ab: mov rcx,qword ptr [rsp+0x8]
0x59b0: je 0x5a7c
0x59b6: lea eax,[r12-0x45]
0x59bb: cmp al,0x2f
0x59bd: ja 0x5a10
0x59bf: movabsq rdx,0x814400308945
0x59c9: btq rdx,rax
0x59cd: jae 0x5a10
0x59cf: mov esi,0x30
0x59d4: mov rdi,r13
0x59d7: mov qword ptr [rsp+0x8],rcx
0x59dc: call 0x16e0
0x59e1: test rax,rax
0x59e4: mov rcx,qword ptr [rsp+0x8]
0x59e9: je 0x5a10
0x59eb: movzx eax,byte ptr [rcx+0x1]
0x59ef: cmp al,0x44
0x59f1: je 0x59ff
0x59f3: cmp al,0x69
0x59f5: je 0x5bc8
0x59fb: cmp al,0x42
0x59fd: jne 0x5a10
0x59ff: mov edi,0x2
0x5a04: mov esi,0x3e8
0x5a09: jmp 0x5a1a
0x5a10: mov edi,0x1
0x5a15: mov esi,0x400
0x5a1a: sub r12d,0x42
0x5a1e: cmp r12b,0x35
0x5a22: ja 0x5a7c
0x5a24: lea rdx,[rip+0x161d]
0x5a2b: movzx r12d,r12b
0x5a2f: movsxd rax,dword ptr [rdx+r12*4]
0x5a33: add rax,rdx
0x5a36: jmp rax
0x5a60: movsxd rdi,edi
0x5a63: mov eax,ebp
0x5a65: add rcx,rdi
0x5a68: or eax,0x2
0x5a6b: mov qword ptr [r15],rcx
0x5a6e: cmp byte ptr [rcx],0x0
0x5a71: mov qword ptr [r14],rbx
0x5a74: cmovne ebp,eax
0x5a77: jmp 0x593d
0x5a7c: mov qword ptr [r14],rbx
0x5a7f: or ebp,0x2
0x5a82: jmp 0x593d
0x5ad5: or ebp,r9d
0x5ad8: jmp 0x5a60
0x5b6c: mov rax,rbx
0x5b6f: mul rsi
0x5b72: mov rbx,rax
0x5b75: jo 0x5c04
0x5b7b: sub r8d,0x1
0x5b7f: jne 0x5b6c
0x5b81: jmp 0x5ad5
0x5bc8: xor edi,edi
0x5bca: cmp byte ptr [rcx+0x2],0x42
0x5bce: mov esi,0x400
0x5bd3: sete dil
0x5bd7: lea edi,[rdi+rdi+0x1]
0x5bdb: jmp 0x5a1a
0x5be0: call 0x16b0
0x5be5: lea rcx,[rip+0x1534]
0x5bec: lea rsi,[rip+0x140d]
0x5bf3: lea rdi,[rip+0x1426]
0x5bfa: mov edx,0x54
0x5bff: call 0x1720
0x5c04: mov r9d,0x1
0x5c0a: or rbx,-0x1
0x5c0e: jmp 0x5b7b
0x5da0: push r13
0x5da2: push r12
0x5da4: mov r13,rsi
0x5da7: push rbp
0x5da8: push rbx
0x5da9: mov rbx,rdi
0x5dac: mov r12,rdx
0x5daf: sub rsp,0x18
0x5db3: mov rax,qword ptr fs:0x28
0x5dbc: mov qword ptr [rsp+0x8],rax
0x5dc1: xor eax,eax
0x5dc3: lea rax,[rsp+0x4]
0x5dc8: test rdi,rdi
0x5dcb: cmove rbx,rax
0x5dcf: mov rdi,rbx
0x5dd2: call 0x16d0
0x5dd7: cmp rax,-0x3
0x5ddb: mov rbp,rax
0x5dde: jbe 0x5e00
0x5de0: test r12,r12
0x5de3: je 0x5e00
0x5de5: xor edi,edi
0x5de7: call 0x6240
0x5dec: test al,al
0x5dee: jne 0x5e00
0x5df0: movzx eax,byte ptr [r13]
0x5df5: mov ebp,0x1
0x5dfa: mov dword ptr [rbx],eax
0x5dfc: nop dword ptr [rax]
0x5e00: mov rdx,qword ptr [rsp+0x8]
0x5e05: xor rdx,qword ptr fs:0x28
0x5e0e: mov rax,rbp
0x5e11: jne 0x5e1e
0x5e13: add rsp,0x18
0x5e17: pop rbx
0x5e18: pop rbp
0x5e19: pop r12
0x5e1b: pop r13
0x5e1d: ret 
0x5e1e: call 0x16b0
0x5e23: nop word ptr cs:[rax+rax]
0x5e2d: nop dword ptr [rax]
0x5e30: mov edi,0x1
0x5e35: jmp 0x20b0
0x5e40: push r15
0x5e42: push r14
0x5e44: mov r15,rsi
0x5e47: push r13
0x5e49: push r12
0x5e4b: mov r13,rcx
0x5e4e: push rbp
0x5e4f: push rbx
0x5e50: mov rbp,rdx
0x5e53: sub rsp,0x28
0x5e57: mov qword ptr [rsp+0x8],rdi
0x5e5c: mov qword ptr [rsp+0x18],rdx
0x5e61: call 0x16a0
0x5e66: mov r14,qword ptr [r15]
0x5e69: mov qword ptr [rsp],-0x1
0x5e71: test r14,r14
0x5e74: je 0x5f2d
0x5e7a: mov r12,rax
0x5e7d: mov byte ptr [rsp+0x17],0x0
0x5e82: xor ebx,ebx
0x5e84: jmp 0x5ed7
0x5e90: mov rax,qword ptr [rsp+0x18]
0x5e95: test rax,rax
0x5e98: je 0x5f40
0x5e9e: mov rdi,qword ptr [rsp]
0x5ea2: mov rdx,r13
0x5ea5: mov rsi,rbp
0x5ea8: imul rdi,r13
0x5eac: add rdi,rax
0x5eaf: call 0x1780
0x5eb4: test eax,eax
0x5eb6: movzx eax,byte ptr [rsp+0x17]
0x5ebb: mov ecx,0x1
0x5ec0: cmovne eax,ecx
0x5ec3: mov byte ptr [rsp+0x17],al
0x5ec7: add rbx,0x1
0x5ecb: add rbp,r13
0x5ece: mov r14,qword ptr [r15+rbx*8]
0x5ed2: test r14,r14
0x5ed5: je 0x5f18
0x5ed7: mov rsi,qword ptr [rsp+0x8]
0x5edc: mov rdx,r12
0x5edf: mov rdi,r14
0x5ee2: call 0x1610
0x5ee7: test eax,eax
0x5ee9: jne 0x5ec7
0x5eeb: mov rdi,r14
0x5eee: call 0x16a0
0x5ef3: cmp rax,r12
0x5ef6: je 0x5f50
0x5ef8: cmp qword ptr [rsp],-0x1
0x5efd: jne 0x5e90
0x5eff: mov qword ptr [rsp],rbx
0x5f03: add rbx,0x1
0x5f07: add rbp,r13
0x5f0a: mov r14,qword ptr [r15+rbx*8]
0x5f0e: test r14,r14
0x5f11: jne 0x5ed7
0x5f13: nop dword ptr [rax+rax]
0x5f18: cmp byte ptr [rsp+0x17],0x0
0x5f1d: mov rax,-0x2
0x5f24: cmove rax,qword ptr [rsp]
0x5f29: mov qword ptr [rsp],rax
0x5f2d: mov rax,qword ptr [rsp]
0x5f31: add rsp,0x28
0x5f35: pop rbx
0x5f36: pop rbp
0x5f37: pop r12
0x5f39: pop r13
0x5f3b: pop r14
0x5f3d: pop r15
0x5f3f: ret 
0x5f40: mov byte ptr [rsp+0x17],0x1
0x5f45: jmp 0x5ec7
0x5f50: mov qword ptr [rsp],rbx
0x5f54: jmp 0x5f2d
0x5f60: cmp rdx,-0x1
0x5f64: push r12
0x5f66: mov edx,0x5
0x5f6b: push rbp
0x5f6c: mov r12,rsi
0x5f6f: push rbx
0x5f70: mov rbp,rdi
0x5f73: je 0x5fc0
0x5f75: lea rsi,[rip+0x11ca]
0x5f7c: xor edi,edi
0x5f7e: call 0x1680
0x5f83: mov rbx,rax
0x5f86: mov rsi,rbp
0x5f89: mov edi,0x1
0x5f8e: call 0x4f10
0x5f93: mov rdx,r12
0x5f96: mov rbp,rax
0x5f99: mov esi,0x8
0x5f9e: xor edi,edi
0x5fa0: call 0x4b40
0x5fa5: mov r8,rbp
0x5fa8: mov rdx,rbx
0x5fab: mov rcx,rax
0x5fae: pop rbx
0x5faf: pop rbp
0x5fb0: pop r12
0x5fb2: xor esi,esi
0x5fb4: xor edi,edi
0x5fb6: xor eax,eax
0x5fb8: jmp 0x1870
0x5fc0: lea rsi,[rip+0x1164]
0x5fc7: xor edi,edi
0x5fc9: call 0x1680
0x5fce: mov rbx,rax
0x5fd1: jmp 0x5f86
0x5fe0: push r15
0x5fe2: push r14
0x5fe4: mov r14,rdi
0x5fe7: push r13
0x5fe9: push r12
0x5feb: xor edi,edi
0x5fed: push rbp
0x5fee: push rbx
0x5fef: mov rbp,rsi
0x5ff2: lea rsi,[rip+0x116a]
0x5ff9: mov r12,rdx
0x5ffc: mov edx,0x5
0x6001: sub rsp,0x8
0x6005: mov rbx,qword ptr [rip+0x2030d4]
0x600c: call 0x1680
0x6011: mov rdi,rax
0x6014: mov rsi,rbx
0x6017: call 0x1790
0x601c: mov r15,qword ptr [r14]
0x601f: test r15,r15
0x6022: je 0x60b8
0x6028: xor r13d,r13d
0x602b: xor ebx,ebx
0x602d: jmp 0x6068
0x6030: mov rdi,r15
0x6033: add rbx,0x1
0x6037: mov r13,rbp
0x603a: call 0x4f30
0x603f: mov rdi,qword ptr [rip+0x20309a]
0x6046: lea rdx,[rip+0x112b]
0x604d: mov rcx,rax
0x6050: mov esi,0x1
0x6055: xor eax,eax
0x6057: add rbp,r12
0x605a: call 0x18e0
0x605f: mov r15,qword ptr [r14+rbx*8]
0x6063: test r15,r15
0x6066: je 0x60b8
0x6068: test rbx,rbx
0x606b: je 0x6030
0x606d: mov rdx,r12
0x6070: mov rsi,rbp
0x6073: mov rdi,r13
0x6076: call 0x1780
0x607b: test eax,eax
0x607d: jne 0x6030
0x607f: mov rdi,r15
0x6082: add rbx,0x1
0x6086: add rbp,r12
0x6089: call 0x4f30
0x608e: mov rdi,qword ptr [rip+0x20304b]
0x6095: lea rdx,[rip+0x10e4]
0x609c: mov rcx,rax
0x609f: mov esi,0x1
0x60a4: xor eax,eax
0x60a6: call 0x18e0
0x60ab: mov r15,qword ptr [r14+rbx*8]
0x60af: test r15,r15
0x60b2: jne 0x6068
0x60b4: nop dword ptr [rax]
0x60b8: mov rdi,qword ptr [rip+0x203021]
0x60bf: mov rax,qword ptr [rdi+0x28]
0x60c3: cmp rax,qword ptr [rdi+0x30]
0x60c7: jae 0x60e8
0x60c9: lea rdx,[rax+0x1]
0x60cd: mov qword ptr [rdi+0x28],rdx
0x60d1: mov byte ptr [rax],0xa
0x60d4: add rsp,0x8
0x60d8: pop rbx
0x60d9: pop rbp
0x60da: pop r12
0x60dc: pop r13
0x60de: pop r14
0x60e0: pop r15
0x60e2: ret 
0x60e8: add rsp,0x8
0x60ec: mov esi,0xa
0x60f1: pop rbx
0x60f2: pop rbp
0x60f3: pop r12
0x60f5: pop r13
0x60f7: pop r14
0x60f9: pop r15
0x60fb: jmp 0x16f0
0x6100: push r15
0x6102: push r14
0x6104: mov r14,rdi
0x6107: push r13
0x6109: push r12
0x610b: mov r12,rsi
0x610e: push rbp
0x610f: push rbx
0x6110: mov rbp,rcx
0x6113: mov rbx,rdx
0x6116: mov rcx,r8
0x6119: mov rdx,rbp
0x611c: sub rsp,0x8
0x6120: mov rsi,rbx
0x6123: mov rdi,r12
0x6126: mov r15,r8
0x6129: mov r13,r9
0x612c: call 0x5e40
0x6131: test rax,rax
0x6134: js 0x6145
0x6136: add rsp,0x8
0x613a: pop rbx
0x613b: pop rbp
0x613c: pop r12
0x613e: pop r13
0x6140: pop r14
0x6142: pop r15
0x6144: ret 
0x6145: mov rdx,rax
0x6148: mov rsi,r12
0x614b: mov rdi,r14
0x614e: call 0x5f60
0x6153: mov rdx,r15
0x6156: mov rsi,rbp
0x6159: mov rdi,rbx
0x615c: call 0x5fe0
0x6161: call r13
0x6164: mov rax,-0x1
0x616b: jmp 0x6136
0x6170: push r14
0x6172: push r13
0x6174: push r12
0x6176: push rbp
0x6177: push rbx
0x6178: mov r14,qword ptr [rsi]
0x617b: test r14,r14
0x617e: je 0x61b1
0x6180: mov r12,rcx
0x6183: mov r13,rdi
0x6186: mov rbp,rdx
0x6189: lea rbx,[rsi+0x8]
0x618d: jmp 0x619f
0x6190: mov r14,qword ptr [rbx]
0x6193: add rbp,r12
0x6196: add rbx,0x8
0x619a: test r14,r14
0x619d: je 0x61b1
0x619f: mov rdx,r12
0x61a2: mov rsi,rbp
0x61a5: mov rdi,r13
0x61a8: call 0x1780
0x61ad: test eax,eax
0x61af: jne 0x6190
0x61b1: pop rbx
0x61b2: mov rax,r14
0x61b5: pop rbp
0x61b6: pop r12
0x61b8: pop r13
0x61ba: pop r14
0x61bc: ret 
0x61c0: push r12
0x61c2: push rbp
0x61c3: mov rbp,rdi
0x61c6: push rbx
0x61c7: call 0x1630
0x61cc: mov ebx,dword ptr [rbp]
0x61cf: mov rdi,rbp
0x61d2: mov r12,rax
0x61d5: call 0x5c80
0x61da: and ebx,0x20
0x61dd: test ebx,ebx
0x61df: jne 0x61f8
0x61e1: test eax,eax
0x61e3: je 0x61ef
0x61e5: test r12,r12
0x61e8: mov eax,0xffffffff
0x61ed: je 0x6228
0x61ef: pop rbx
0x61f0: pop rbp
0x61f1: pop r12
0x61f3: ret 
0x61f8: test eax,eax
0x61fa: jne 0x6218
0x61fc: call 0x1600
0x6201: mov dword ptr [rax],0x0
0x6207: mov eax,0xffffffff
0x620c: pop rbx
0x620d: pop rbp
0x620e: pop r12
0x6210: ret 
0x6218: pop rbx
0x6219: mov eax,0xffffffff
0x621e: pop rbp
0x621f: pop r12
0x6221: ret 
0x6228: call 0x1600
0x622d: cmp dword ptr [rax],0x9
0x6230: pop rbx
0x6231: pop rbp
0x6232: pop r12
0x6234: setne al
0x6237: movzx eax,al
0x623a: neg eax
0x623c: ret 
0x6240: sub rsp,0x8
0x6244: xor esi,esi
0x6246: call 0x1830
0x624b: mov rdx,rax
0x624e: mov eax,0x1
0x6253: test rdx,rdx
0x6256: je 0x6275
0x6258: lea rdi,[rip+0xf26]
0x625f: mov ecx,0x2
0x6264: mov rsi,rdx
0x6267: rep cmpsb [rsi],es:[rdi]
0x6269: seta cl
0x626c: sbb cl,0x0
0x626f: xor eax,eax
0x6271: test cl,cl
0x6273: jne 0x6280
0x6275: add rsp,0x8
0x6279: ret 
0x6280: lea rdi,[rip+0xf00]
0x6287: mov ecx,0x6
0x628c: mov rsi,rdx
0x628f: rep cmpsb [rsi],es:[rdi]
0x6291: seta al
0x6294: sbb al,0x0
0x6296: test al,al
0x6298: setne al
0x629b: add rsp,0x8
0x629f: ret 
0x62a0: sub rsp,0x8
0x62a4: mov edi,0xe
0x62a9: call 0x1800
0x62ae: test rax,rax
0x62b1: je 0x62d0
0x62b3: cmp byte ptr [rax],0x0
0x62b6: lea rdx,[rip+0xed0]
0x62bd: cmove rax,rdx
0x62c1: add rsp,0x8
0x62c5: ret 
0x62d0: lea rax,[rip+0xeb6]
0x62d7: add rsp,0x8
0x62db: ret 
0x62e0: push r15
0x62e2: push r14
0x62e4: mov r15,rdx
0x62e7: push r13
0x62e9: push r12
0x62eb: lea r12,[rip+0x20281e]
0x62f2: push rbp
0x62f3: lea rbp,[rip+0x20281e]
0x62fa: push rbx
0x62fb: mov r13d,edi
0x62fe: mov r14,rsi
0x6301: sub rbp,r12
0x6304: sub rsp,0x8
0x6308: sar rbp,0x3
0x630c: call 0x1598
0x6311: test rbp,rbp
0x6314: je 0x6336
0x6316: xor ebx,ebx
0x6318: nop dword ptr [rax+rax]
0x6320: mov rdx,r15
0x6323: mov rsi,r14
0x6326: mov edi,r13d
0x6329: call qword ptr [r12+rbx*8]
0x632d: add rbx,0x1
0x6331: cmp rbp,rbx
0x6334: jne 0x6320
0x6336: add rsp,0x8
0x633a: pop rbx
0x633b: pop rbp
0x633c: pop r12
0x633e: pop r13
0x6340: pop r14
0x6342: pop r15
0x6344: ret 
0x6350: rep ret 
