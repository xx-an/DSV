0x1b08: sub rsp,0x8
0x1b0c: mov rax,qword ptr [rip+0x20a4cd]
0x1b13: test rax,rax
0x1b16: je 0x1b1a
0x1b18: call rax
0x1b1a: add rsp,0x8
0x1b1e: ret 
0x1b26: jmp qword ptr [rip+0x20a24c]
0x1b90: jmp qword ptr [rip+0x20a21a]
0x1ba0: jmp qword ptr [rip+0x20a212]
0x1bb0: jmp qword ptr [rip+0x20a20a]
0x1bf0: jmp qword ptr [rip+0x20a1ea]
0x1c20: jmp qword ptr [rip+0x20a1d2]
0x1c70: jmp qword ptr [rip+0x20a1aa]
0x1c90: jmp qword ptr [rip+0x20a19a]
0x1d50: jmp qword ptr [rip+0x20a13a]
0x1d70: jmp qword ptr [rip+0x20a12a]
0x1dc0: jmp qword ptr [rip+0x20a102]
0x1de0: jmp qword ptr [rip+0x20a0f2]
0x1e00: jmp qword ptr [rip+0x20a0e2]
0x1e10: jmp qword ptr [rip+0x20a0da]
0x1e30: jmp qword ptr [rip+0x20a0ca]
0x1e40: jmp qword ptr [rip+0x20a0c2]
0x1e60: jmp qword ptr [rip+0x20a0b2]
0x1e90: jmp qword ptr [rip+0x20a09a]
0x1eb0: jmp qword ptr [rip+0x20a08a]
0x1ee0: jmp qword ptr [rip+0x20a072]
0x1f10: jmp qword ptr [rip+0x20a05a]
0x1f50: jmp qword ptr [rip+0x20a03a]
0x1f60: jmp qword ptr [rip+0x20a032]
0x1f80: jmp qword ptr [rip+0x20a022]
0x1fc0: jmp qword ptr [rip+0x20a002]
0x1fd0: jmp qword ptr [rip+0x20a01a]
0x2236: nop word ptr cs:[rax+rax]
0x2b50: mov rdx,qword ptr [rsp+0x40]
0x2b55: mov rsi,qword ptr [rsp+0x48]
0x2b5a: xor edi,edi
0x2b5c: call 0x7340
0x2b61: cmp rax,-0x1
0x2b65: mov rbp,rax
0x2b68: je 0x39b9
0x2b6e: test rax,rax
0x2b71: je 0x30b2
0x2b77: mov rbx,qword ptr [rsp+0x48]
0x2b7c: jmp 0x2bef
0x2b80: mov rdx,rcx
0x2b83: mov rdi,rbx
0x2b86: lea r14,[rbx+rcx-0x1]
0x2b8b: call 0x1eb0
0x2b90: test r12,r12
0x2b93: mov r8,rax
0x2b96: je 0x2c28
0x2b9c: test r13,r13
0x2b9f: sete dil
0x2ba3: test r8,r8
0x2ba6: jne 0x2fe8
0x2bac: test dil,dil
0x2baf: jne 0x2fe8
0x2bb5: cmp byte ptr [rsp+0x10],0x0
0x2bba: jne 0x2c69
0x2bc0: xor edi,edi
0x2bc2: test r13,r13
0x2bc5: sete dil
0x2bc9: test r14,r14
0x2bcc: je 0x3040
0x2bd2: mov rsi,rbx
0x2bd5: mov rdx,r15
0x2bd8: sub rbp,r15
0x2bdb: add rbx,r15
0x2bde: xor r13d,r13d
0x2be1: call 0x4b80
0x2be6: test rbp,rbp
0x2be9: je 0x2b50
0x2bef: mov rcx,qword ptr [rsp]
0x2bf3: mov esi,dword ptr [rip+0x209417]
0x2bf9: sub rcx,r13
0x2bfc: sub rcx,r12
0x2bff: cmp rbp,rcx
0x2c02: mov r15,rcx
0x2c05: jae 0x2b80
0x2c0b: mov rdx,rbp
0x2c0e: mov rdi,rbx
0x2c11: xor r14d,r14d
0x2c14: call 0x1eb0
0x2c19: xor r15d,r15d
0x2c1c: test r12,r12
0x2c1f: mov r8,rax
0x2c22: jne 0x2b9c
0x2c28: test r8,r8
0x2c2b: je 0x3058
0x2c31: sub r8,rbx
0x2c34: xor edi,edi
0x2c36: test r13,r13
0x2c39: lea r12,[r8+0x1]
0x2c3d: sete dil
0x2c41: mov rsi,rbx
0x2c44: mov rdx,r12
0x2c47: add r13,r12
0x2c4a: sub rbp,r12
0x2c4d: call 0x4b80
0x2c52: add rbx,r12
0x2c55: test r14,r14
0x2c58: je 0x2fc0
0x2c5e: sub r15,r12
0x2c61: mov byte ptr [rsp+0x10],0x1
0x2c66: xor r12d,r12d
0x2c69: test r14,r14
0x2c6c: je 0x2fc8
0x2c72: test r15,r15
0x2c75: je 0x2fc8
0x2c7b: mov rcx,qword ptr [rsp+0x18]
0x2c80: mov rax,rcx
0x2c83: sub rax,r12
0x2c86: cmp rax,r15
0x2c89: jae 0x2cb9
0x2c8b: mov rsi,qword ptr [rsp+0x40]
0x2c90: mov rax,rsi
0x2c93: not rax
0x2c96: cmp rax,rcx
0x2c99: jb 0x3936
0x2c9f: mov rdi,qword ptr [rsp+0x8]
0x2ca4: add rcx,rsi
0x2ca7: mov rsi,rcx
0x2caa: mov qword ptr [rsp+0x18],rcx
0x2caf: call 0x7ac0
0x2cb4: mov qword ptr [rsp+0x8],rax
0x2cb9: mov rax,qword ptr [rsp+0x8]
0x2cbe: mov rsi,rbx
0x2cc1: mov rdx,r15
0x2cc4: sub rbp,r15
0x2cc7: add rbx,r15
0x2cca: lea rdi,[rax+r12]
0x2cce: add r12,r15
0x2cd1: call 0x1dd0
0x2cd6: movzx edi,byte ptr [rsp+0x10]
0x2cdb: test r14,r14
0x2cde: mov eax,0x0
0x2ce3: cmovne edi,eax
0x2ce6: mov eax,0x0
0x2ceb: mov byte ptr [rsp+0x10],dil
0x2cf0: cmovne r13,rax
0x2cf4: jmp 0x2be6
0x2d83: mov rdi,qword ptr [rsp+0x20]
0x2d88: cmp qword ptr [rsp+0x18],rdi
0x2d8d: jle 0x38d6
0x2d93: cmp rbp,-0x1
0x2d97: je 0x385c
0x2d9d: test rbp,rbp
0x2da0: je 0x38d6
0x2da6: mov rax,qword ptr [rsp+0x18]
0x2dab: sub rax,qword ptr [rsp+0x20]
0x2db0: mov r8,qword ptr [rsp+0x48]
0x2db5: mov byte ptr [rsp+0x67],0x0
0x2dba: cmp rax,rbp
0x2dbd: mov r14,r8
0x2dc0: cmovbe rbp,rax
0x2dc4: add r14,rbp
0x2dc7: mov qword ptr [rsp+0x38],rbp
0x2dcc: mov rbp,qword ptr [rsp]
0x2dd0: mov r15,r14
0x2dd3: mov r14,qword ptr [rsp+0x68]
0x2dd8: or rax,-0x1
0x2ddc: cmp r15,r8
0x2ddf: je 0x38ce
0x2de5: mov rax,r13
0x2de8: sub rax,qword ptr [rsp+0x20]
0x2ded: mov rsi,qword ptr [rsp+0x38]
0x2df2: mov edx,0x0
0x2df7: mov qword ptr [rsp+0x28],r8
0x2dfc: cmovs rax,rdx
0x2e00: cmp rax,rsi
0x2e03: cmova rax,rsi
0x2e07: sub rsi,rax
0x2e0a: lea rdi,[r8+rax]
0x2e0e: mov rdx,rsi
0x2e11: mov esi,dword ptr [rip+0x2091f9]
0x2e17: call 0x1d50
0x2e1c: test rax,rax
0x2e1f: mov r8,qword ptr [rsp+0x28]
0x2e24: je 0x34ab
0x2e2a: lea r9,[rax+0x1]
0x2e2e: mov byte ptr [rsp+0x30],0x1
0x2e33: mov rax,r9
0x2e36: sub rax,r8
0x2e39: cmp r12,rbx
0x2e3c: mov qword ptr [rsp+0x28],rax
0x2e41: je 0x34d9
0x2e47: test rbx,rbx
0x2e4a: je 0x34b8
0x2e50: mov rcx,qword ptr [rsp+0x20]
0x2e55: add rcx,qword ptr [rsp+0x28]
0x2e5a: movzx r8d,byte ptr [rsp+0x30]
0x2e60: mov qword ptr [rsp+0x20],rcx
0x2e65: nop dword ptr [rax]
0x2e68: cmp rcx,r13
0x2e6b: jg 0x2e76
0x2e6d: test r8b,r8b
0x2e70: je 0x3097
0x2e76: mov eax,r8d
0x2e79: xor eax,0x1
0x2e7c: cmp r15,r9
0x2e7f: sete dl
0x2e82: and al,dl
0x2e84: jne 0x3093
0x2e8a: add r12,0x1
0x2e8e: test rbx,rbx
0x2e91: setne dl
0x2e94: cmp r12,rbx
0x2e97: seta al
0x2e9a: test dl,al
0x2e9c: jne 0x2f16
0x2e9e: add r13,qword ptr [rsp+0x8]
0x2ea3: cmp r12,rbp
0x2ea6: cmove r13,r14
0x2eaa: cmp rcx,r13
0x2ead: jle 0x308b
0x2eb3: test rbx,rbx
0x2eb6: jne 0x2e68
0x2eb8: xor edx,edx
0x2eba: xor esi,esi
0x2ebc: mov edi,0x1
0x2ec1: mov byte ptr [rsp+0x66],r8b
0x2ec6: mov qword ptr [rsp+0x58],rcx
0x2ecb: mov qword ptr [rsp+0x50],r9
0x2ed0: call 0x4b80
0x2ed5: mov r9,qword ptr [rsp+0x50]
0x2eda: mov rcx,qword ptr [rsp+0x58]
0x2edf: movzx r8d,byte ptr [rsp+0x66]
0x2ee5: jmp 0x2e68
0x2f8d: lea rsi,[rip+0x6b6c]
0x2f94: mov edx,0x5
0x2f99: xor edi,edi
0x2f9b: mov rbp,rax
0x2f9e: call 0x1c40
0x2fa3: mov rbx,rax
0x2fa6: call 0x1b70
0x2fab: mov esi,dword ptr [rax]
0x2fad: mov rcx,rbp
0x2fb0: mov rdx,rbx
0x2fb3: mov edi,0x1
0x2fb8: xor eax,eax
0x2fba: call 0x1ea0
0x2fbf: nop 
0x2fc0: xor r12d,r12d
0x2fc3: mov byte ptr [rsp+0x10],0x1
0x2fc8: test r14,r14
0x2fcb: jne 0x2cd6
0x2fd1: test rbp,rbp
0x2fd4: je 0x2cd6
0x2fda: mov r15,rbp
0x2fdd: jmp 0x2c7b
0x2fe8: mov rsi,qword ptr [rsp+0x8]
0x2fed: movzx edi,dil
0x2ff1: mov rdx,r12
0x2ff4: mov qword ptr [rsp+0x20],r8
0x2ff9: add r13,r12
0x2ffc: call 0x4b80
0x3001: mov rax,qword ptr [rsp+0x40]
0x3006: mov r8,qword ptr [rsp+0x20]
0x300b: cmp rax,r12
0x300e: mov qword ptr [rsp+0x18],rax
0x3013: jae 0x2c28
0x3019: mov rdi,qword ptr [rsp+0x8]
0x301e: mov r12,rax
0x3021: mov rsi,rax
0x3024: call 0x7ac0
0x3029: mov qword ptr [rsp+0x18],r12
0x302e: mov qword ptr [rsp+0x8],rax
0x3033: mov r8,qword ptr [rsp+0x20]
0x3038: jmp 0x2c28
0x3040: mov rdx,rbp
0x3043: mov rsi,rbx
0x3046: add r13,rbp
0x3049: call 0x4b80
0x304e: jmp 0x2b50
0x3058: xor r12d,r12d
0x305b: jmp 0x2bb5
0x308b: xor r8d,r8d
0x308e: jmp 0x2e68
0x3093: mov byte ptr [rsp+0x67],al
0x3097: movzx eax,byte ptr [rsp+0x30]
0x309c: mov rcx,qword ptr [rsp+0x28]
0x30a1: mov r8,r9
0x30a4: sub qword ptr [rsp+0x38],rcx
0x30a9: mov byte ptr [rsp+0x50],al
0x30ad: jmp 0x2dd8
0x30b2: test r12,r12
0x30b5: jne 0x36da
0x30bb: mov rdi,qword ptr [rsp+0x8]
0x30c0: call 0x1b50
0x30c5: jmp 0x2f16
0x30e6: test rax,rax
0x30e9: js 0x3936
0x30ef: test rcx,rcx
0x30f2: jne 0x3936
0x30f8: mov r12,qword ptr [rsp]
0x30fc: xor ebp,ebp
0x30fe: mov rdi,r12
0x3101: shl rdi,0x5
0x3105: call 0x7a60
0x310a: mov qword ptr [rsp+0x30],rax
0x310f: mov rbx,rax
0x3112: call 0x3e20
0x3117: mov rdi,qword ptr [rip+0x20929a]
0x311e: add rbp,0x1
0x3122: add rbx,0x20
0x3126: call 0x7c90
0x312b: mov dword ptr [rbx-0x18],0xffffffff
0x3132: mov qword ptr [rbx-0x20],rax
0x3136: mov qword ptr [rbx-0x10],0x0
0x313e: mov dword ptr [rbx-0x8],0x0
0x3145: cmp rbp,r12
0x3148: jne 0x3112
0x314a: mov qword ptr [rsp+0x8],0x1
0x3153: mov qword ptr [rsp+0x18],0x0
0x315c: mov byte ptr [rsp+0x38],0x0
0x3161: mov byte ptr [rsp+0x28],0x0
0x3166: mov byte ptr [rsp+0x50],0x0
0x316b: mov rdx,qword ptr [rsp+0x40]
0x3170: mov rsi,qword ptr [rsp+0x48]
0x3175: xor edi,edi
0x3177: call 0x7340
0x317c: cmp rax,-0x1
0x3180: je 0x3bc7
0x3186: test rax,rax
0x3189: je 0x38ad
0x318f: mov rdi,qword ptr [rsp+0x48]
0x3194: lea rbp,[rdi+rax]
0x3198: cmp rdi,rbp
0x319b: je 0x316b
0x319d: mov r13,rdi
0x31a0: jmp 0x31dc
0x31a8: cmp qword ptr [rsp+0x8],rax
0x31ad: je 0x3300
0x31b3: test r15b,r15b
0x31b6: je 0x31d4
0x31b8: mov rdx,qword ptr [rsp+0x8]
0x31bd: cmp rdx,qword ptr [rsp]
0x31c1: mov r13d,0x1
0x31c7: lea rax,[rdx+0x1]
0x31cb: cmovne r13,rax
0x31cf: mov qword ptr [rsp+0x8],r13
0x31d4: cmp rbp,r12
0x31d7: mov r13,r12
0x31da: je 0x316b
0x31dc: mov rbx,rbp
0x31df: mov esi,dword ptr [rip+0x208e2b]
0x31e5: mov rdi,r13
0x31e8: sub rbx,r13
0x31eb: mov rdx,rbx
0x31ee: call 0x1d50
0x31f3: test rax,rax
0x31f6: je 0x32f0
0x31fc: lea r12,[rax+0x1]
0x3200: mov r15d,0x1
0x3206: mov rbx,r12
0x3209: sub rbx,r13
0x320c: mov rax,qword ptr [rsp+0x10]
0x3211: test rax,rax
0x3214: jne 0x31a8
0x3216: mov r14,qword ptr [rsp+0x18]
0x321b: mov rdx,qword ptr [rsp]
0x321f: mov rdi,qword ptr [rsp+0x30]
0x3224: mov rsi,r14
0x3227: shl r14,0x5
0x322b: call 0x4680
0x3230: add r14,qword ptr [rsp+0x30]
0x3235: or byte ptr [rsp+0x38],al
0x3239: call 0x1b70
0x323e: cmp byte ptr [rip+0x20909b],0x0
0x3245: mov qword ptr [rsp+0x20],rax
0x324a: jne 0x33e0
0x3250: mov rcx,qword ptr [r14+0x10]
0x3254: mov edx,0x1
0x3259: mov rsi,rbx
0x325c: mov rdi,r13
0x325f: call 0x1e40
0x3264: cmp rax,0x1
0x3268: mov rax,qword ptr [rsp+0x20]
0x326d: jne 0x3370
0x3273: cmp dword ptr [rax],0x20
0x3276: sete al
0x3279: cmp qword ptr [rip+0x20927f],0x0
0x3281: setne dl
0x3284: and eax,edx
0x3286: mov edx,0x1
0x328b: test al,al
0x328d: movzx eax,byte ptr [rsp+0x28]
0x3292: cmove eax,edx
0x3295: mov byte ptr [rsp+0x28],al
0x3299: cmp byte ptr [rsp+0x38],0x0
0x329e: jne 0x33b0
0x32a4: test r15b,r15b
0x32a7: je 0x31d4
0x32ad: add qword ptr [rsp+0x18],0x1
0x32b3: mov rax,qword ptr [rsp+0x18]
0x32b8: cmp rax,qword ptr [rsp]
0x32bc: jne 0x31d4
0x32c2: cmp byte ptr [rsp+0x28],0x0
0x32c7: je 0x3531
0x32cd: movzx eax,byte ptr [rsp+0x28]
0x32d2: mov qword ptr [rsp+0x18],0x0
0x32db: mov byte ptr [rsp+0x28],0x0
0x32e0: mov byte ptr [rsp+0x50],al
0x32e4: jmp 0x31d4
0x32f0: mov r12,rbp
0x32f3: xor r15d,r15d
0x32f6: jmp 0x320c
0x3300: cmp byte ptr [rip+0x208fd9],0x0
0x3307: jne 0x3440
0x330d: mov rcx,qword ptr [rip+0x208f54]
0x3314: mov edx,0x1
0x3319: mov rsi,rbx
0x331c: mov rdi,r13
0x331f: call 0x1e40
0x3324: cmp rax,0x1
0x3328: je 0x31b3
0x332e: mov rdi,qword ptr [rip+0x208f33]
0x3335: call 0x1bf0
0x333a: lea rsi,[rip+0x5afa]
0x3341: mov edx,0x5
0x3346: xor edi,edi
0x3348: call 0x1c40
0x334d: mov rbx,rax
0x3350: call 0x1b70
0x3355: mov esi,dword ptr [rax]
0x3357: lea rdx,[rip+0x5a90]
0x335e: mov rcx,rbx
0x3361: mov edi,0x1
0x3366: xor eax,eax
0x3368: call 0x1ea0
0x336d: nop dword ptr [rax]
0x3370: cmp dword ptr [rax],0x20
0x3373: jne 0x3383
0x3375: cmp qword ptr [rip+0x209183],0x0
0x337d: jne 0x3299
0x3383: mov rdx,qword ptr [r14]
0x3386: mov esi,0x3
0x338b: xor edi,edi
0x338d: call 0x7150
0x3392: mov rcx,rax
0x3395: mov rax,qword ptr [rsp+0x20]
0x339a: lea rdx,[rip+0x5a4d]
0x33a1: mov edi,0x1
0x33a6: mov esi,dword ptr [rax]
0x33a8: xor eax,eax
0x33aa: call 0x1ea0
0x33af: nop 
0x33b0: mov rdi,qword ptr [r14+0x10]
0x33b4: call 0x8240
0x33b9: test eax,eax
0x33bb: jne 0x398d
0x33c1: mov qword ptr [r14+0x10],0x0
0x33c9: mov dword ptr [r14+0x8],0xfffffffe
0x33d1: jmp 0x32a4
0x33e0: mov edi,dword ptr [r14+0x8]
0x33e4: mov rdx,rbx
0x33e7: mov rsi,r13
0x33ea: call 0x5540
0x33ef: cmp rax,rbx
0x33f2: mov rax,qword ptr [rsp+0x20]
0x33f7: je 0x3273
0x33fd: cmp dword ptr [rax],0x20
0x3400: jne 0x3410
0x3402: cmp qword ptr [rip+0x2090f6],0x0
0x340a: jne 0x3299
0x3410: mov rdx,qword ptr [r14]
0x3413: mov esi,0x3
0x3418: xor edi,edi
0x341a: call 0x7150
0x341f: mov rcx,rax
0x3422: mov rax,qword ptr [rsp+0x20]
0x3427: lea rdx,[rip+0x59c0]
0x342e: mov edi,0x1
0x3433: mov esi,dword ptr [rax]
0x3435: xor eax,eax
0x3437: call 0x1ea0
0x343c: nop dword ptr [rax]
0x3440: mov rdx,rbx
0x3443: mov rsi,r13
0x3446: mov edi,0x1
0x344b: call 0x5540
0x3450: cmp rax,rbx
0x3453: je 0x31b3
0x3459: lea rsi,[rip+0x59db]
0x3460: mov edx,0x5
0x3465: xor edi,edi
0x3467: call 0x1c40
0x346c: mov rbx,rax
0x346f: call 0x1b70
0x3474: mov esi,dword ptr [rax]
0x3476: lea rdx,[rip+0x5971]
0x347d: mov rcx,rbx
0x3480: mov edi,0x1
0x3485: xor eax,eax
0x3487: call 0x1ea0
0x34ab: mov r9,r15
0x34ae: mov byte ptr [rsp+0x30],0x0
0x34b3: jmp 0x2e33
0x34b8: movzx edi,byte ptr [rsp+0x50]
0x34bd: mov rdx,qword ptr [rsp+0x28]
0x34c2: mov rsi,r8
0x34c5: mov qword ptr [rsp+0x58],r9
0x34ca: call 0x4b80
0x34cf: mov r9,qword ptr [rsp+0x58]
0x34d4: jmp 0x2e50
0x34d9: mov rdx,rax
0x34dc: mov rsi,r8
0x34df: mov edi,0x1
0x34e4: mov qword ptr [rsp+0x50],r9
0x34e9: call 0x5540
0x34ee: cmp qword ptr [rsp+0x28],rax
0x34f3: mov r9,qword ptr [rsp+0x50]
0x34f8: je 0x2e50
0x34fe: lea rsi,[rip+0x5936]
0x3505: mov edx,0x5
0x350a: xor edi,edi
0x350c: call 0x1c40
0x3511: mov rbx,rax
0x3514: call 0x1b70
0x3519: mov esi,dword ptr [rax]
0x351b: lea rdx,[rip+0x58cc]
0x3522: mov rcx,rbx
0x3525: mov edi,0x1
0x352a: xor eax,eax
0x352c: call 0x1ea0
0x3531: movsxd rbx,dword ptr [rsp]
0x3535: mov rbp,qword ptr [rsp+0x30]
0x353a: mov r13,qword ptr [rsp]
0x353e: xor r12d,r12d
0x3541: cmp rbx,r12
0x3544: ja 0x355f
0x3546: cmp byte ptr [rip+0x208d94],0x0
0x354d: jne 0x355f
0x354f: mov rdi,qword ptr [rsp+0x30]
0x3554: mov rdx,r13
0x3557: mov rsi,r12
0x355a: call 0x4680
0x355f: mov esi,dword ptr [rbp+0x8]
0x3562: test esi,esi
0x3564: js 0x3576
0x3566: mov edx,dword ptr [rbp+0x18]
0x3569: mov rdi,qword ptr [rbp+0x10]
0x356d: mov rcx,qword ptr [rbp]
0x3571: call 0x4880
0x3576: add r12,0x1
0x357a: mov dword ptr [rbp+0x8],0xfffffffe
0x3581: add rbp,0x20
0x3585: cmp r12,r13
0x3588: jne 0x3541
0x358a: jmp 0x2f16
0x36da: mov rsi,qword ptr [rsp+0x8]
0x36df: xor edi,edi
0x36e1: test r13,r13
0x36e4: sete dil
0x36e8: mov rdx,r12
0x36eb: call 0x4b80
0x36f0: jmp 0x30bb
0x385c: mov rdx,qword ptr [rsp+0x40]
0x3861: mov rsi,qword ptr [rsp+0x48]
0x3866: xor edi,edi
0x3868: call 0x7340
0x386d: cmp rax,-0x1
0x3871: mov rbp,rax
0x3874: jne 0x2d9d
0x387a: mov rdx,qword ptr [rip+0x208b0f]
0x3881: mov esi,0x3
0x3886: xor edi,edi
0x3888: call 0x7150
0x388d: mov rbx,rax
0x3890: call 0x1b70
0x3895: mov esi,dword ptr [rax]
0x3897: lea rdx,[rip+0x5550]
0x389e: mov rcx,rbx
0x38a1: mov edi,0x1
0x38a6: xor eax,eax
0x38a8: call 0x1ea0
0x38ad: cmp qword ptr [rsp+0x10],0x0
0x38b3: jne 0x2f16
0x38b9: cmp byte ptr [rsp+0x50],0x0
0x38be: jne 0x3531
0x38c4: movsxd rbx,dword ptr [rsp+0x18]
0x38c9: jmp 0x3535
0x38ce: mov rbp,rax
0x38d1: jmp 0x2d83
0x38d6: cmp byte ptr [rsp+0x67],0x0
0x38db: je 0x38e1
0x38dd: add r12,0x1
0x38e1: cmp qword ptr [rsp+0x10],0x0
0x38e7: je 0x3900
0x38e9: jmp 0x2f16
0x38ee: xor edx,edx
0x38f0: xor esi,esi
0x38f2: mov edi,0x1
0x38f7: add r12,0x1
0x38fb: call 0x4b80
0x3900: cmp r12,qword ptr [rsp]
0x3904: jbe 0x38ee
0x3906: jmp 0x2f16
0x3936: call 0x7cb0
0x393b: lea rcx,[rip+0x624e]
0x3942: lea rsi,[rip+0x517b]
0x3949: lea rdi,[rip+0x61d0]
0x3950: mov edx,0x3e0
0x3955: call 0x1cf0
0x395a: mov rdx,qword ptr [rip+0x208a2f]
0x3961: mov esi,0x3
0x3966: xor edi,edi
0x3968: call 0x7150
0x396d: mov rbx,rax
0x3970: call 0x1b70
0x3975: mov esi,dword ptr [rax]
0x3977: lea rdx,[rip+0x5470]
0x397e: mov rcx,rbx
0x3981: mov edi,0x1
0x3986: xor eax,eax
0x3988: call 0x1ea0
0x398d: mov rdx,qword ptr [r14]
0x3990: mov esi,0x3
0x3995: xor edi,edi
0x3997: call 0x7150
0x399c: mov rcx,rax
0x399f: mov rax,qword ptr [rsp+0x20]
0x39a4: lea rdx,[rip+0x5443]
0x39ab: mov edi,0x1
0x39b0: mov esi,dword ptr [rax]
0x39b2: xor eax,eax
0x39b4: call 0x1ea0
0x39b9: mov rdx,qword ptr [rip+0x2089d0]
0x39c0: mov esi,0x3
0x39c5: xor edi,edi
0x39c7: call 0x7150
0x39cc: mov rbx,rax
0x39cf: call 0x1b70
0x39d4: mov esi,dword ptr [rax]
0x39d6: lea rdx,[rip+0x5411]
0x39dd: mov rcx,rbx
0x39e0: mov edi,0x1
0x39e5: xor eax,eax
0x39e7: call 0x1ea0
0x39ff: mov rbx,rax
0x3a02: call 0x1b70
0x3a07: mov esi,dword ptr [rax]
0x3a09: lea rdx,[rip+0x53de]
0x3a10: mov rcx,rbx
0x3a13: mov edi,0x1
0x3a18: xor eax,eax
0x3a1a: call 0x1ea0
0x3a30: lea rsi,[rip+0x53cb]
0x3a37: mov edx,0x5
0x3a3c: xor edi,edi
0x3a3e: mov rbp,rax
0x3a41: call 0x1c40
0x3a46: mov rbx,rax
0x3a49: call 0x1b70
0x3a4e: mov esi,dword ptr [rax]
0x3a50: mov rcx,rbp
0x3a53: mov rdx,rbx
0x3a56: mov edi,0x1
0x3a5b: xor eax,eax
0x3a5d: call 0x1ea0
0x3a6d: lea rsi,[rip+0x537d]
0x3a74: mov rbx,rax
0x3a77: mov edx,0x5
0x3a7c: xor edi,edi
0x3a7e: call 0x1c40
0x3a83: mov rdx,rax
0x3a86: xor edi,edi
0x3a88: mov rcx,rbx
0x3a8b: xor esi,esi
0x3a8d: xor eax,eax
0x3a8f: call 0x1ea0
0x3a94: mov edi,0x1
0x3a99: call 0x4ec0
0x3aa6: mov edx,0x5
0x3aab: mov rbx,rax
0x3aae: lea rsi,[rip+0x5e9b]
0x3ab5: jmp 0x3a7c
0x3ad0: lea rsi,[rip+0x5256]
0x3ad7: mov edx,0x5
0x3adc: xor edi,edi
0x3ade: mov rbx,rax
0x3ae1: call 0x1c40
0x3ae6: lea rdx,[rip+0x52fd]
0x3aed: mov rcx,rax
0x3af0: mov r8,rbx
0x3af3: mov esi,0x4b
0x3af8: mov edi,0x1
0x3afd: xor eax,eax
0x3aff: call 0x1ea0
0x3b04: call 0x1c70
0x3b1c: mov rbx,rax
0x3b1f: call 0x1b70
0x3b24: mov esi,dword ptr [rax]
0x3b26: lea rdx,[rip+0x52c1]
0x3b2d: mov rcx,rbx
0x3b30: mov edi,0x1
0x3b35: xor eax,eax
0x3b37: call 0x1ea0
0x3ba8: lea rcx,[rip+0x5fc1]
0x3baf: lea rsi,[rip+0x4f0e]
0x3bb6: lea rdi,[rip+0x5260]
0x3bbd: mov edx,0x362
0x3bc2: call 0x1cf0
0x3bc7: mov rdx,qword ptr [rip+0x2087c2]
0x3bce: mov esi,0x3
0x3bd3: xor edi,edi
0x3bd5: call 0x7150
0x3bda: mov rbx,rax
0x3bdd: call 0x1b70
0x3be2: mov esi,dword ptr [rax]
0x3be4: lea rdx,[rip+0x5203]
0x3beb: mov rcx,rbx
0x3bee: mov edi,0x1
0x3bf3: xor eax,eax
0x3bf5: call 0x1ea0
0x3bfa: mov ecx,0x1
0x3bff: jmp 0x30e6
0x3c10: mov r8d,dword ptr [rsp]
0x3c14: mov rbx,rax
0x3c17: mov edx,0x5
0x3c1c: lea rsi,[rip+0x5e05]
0x3c23: cmp r8d,0x64
0x3c27: jne 0x3a7c
0x3c2d: lea rsi,[rip+0x5dc4]
0x3c34: xor edi,edi
0x3c36: call 0x1c40
0x3c3b: jmp 0x3a83
0x3c70: lea rsi,[rip+0x5098]
0x3c77: mov edx,0x5
0x3c7c: xor edi,edi
0x3c7e: mov rbx,rax
0x3c81: call 0x1c40
0x3c86: lea rdx,[rip+0x515d]
0x3c8d: mov rcx,rax
0x3c90: xor edi,edi
0x3c92: mov r8,rbx
0x3c95: xor esi,esi
0x3c97: xor eax,eax
0x3c99: call 0x1ea0
0x3c9e: mov edi,0x1
0x3ca3: call 0x4ec0
0x3ce5: lea rsi,[rip+0x5089]
0x3cec: mov rbx,rax
0x3cef: mov edx,0x5
0x3cf4: xor edi,edi
0x3cf6: call 0x1c40
0x3cfb: mov rcx,rbx
0x3cfe: mov rdx,rax
0x3d01: xor esi,esi
0x3d03: mov edi,0x1
0x3d08: xor eax,eax
0x3d0a: call 0x1ea0
0x3d0f: nop 
0x3d3a: hlt 
0x3d3b: nop dword ptr [rax+rax]
0x3d40: lea rdi,[rip+0x208501]
0x3d47: push rbp
0x3d48: lea rax,[rip+0x2084f9]
0x3d4f: cmp rax,rdi
0x3d52: mov rbp,rsp
0x3d55: je 0x3d70
0x3d57: mov rax,qword ptr [rip+0x208272]
0x3d5e: test rax,rax
0x3d61: je 0x3d70
0x3d63: pop rbp
0x3d64: jmp rax
0x3d70: pop rbp
0x3d71: ret 
0x3d80: lea rdi,[rip+0x2084c1]
0x3d87: lea rsi,[rip+0x2084ba]
0x3d8e: push rbp
0x3d8f: sub rsi,rdi
0x3d92: mov rbp,rsp
0x3d95: sar rsi,0x3
0x3d99: mov rax,rsi
0x3d9c: shr rax,0x3f
0x3da0: add rsi,rax
0x3da3: sar rsi, 1
0x3da6: je 0x3dc0
0x3da8: mov rax,qword ptr [rip+0x208239]
0x3daf: test rax,rax
0x3db2: je 0x3dc0
0x3db4: pop rbp
0x3db5: jmp rax
0x3dc0: pop rbp
0x3dc1: ret 
0x3de1: push rbp
0x3de2: mov rbp,rsp
0x3de5: je 0x3df3
0x3de7: mov rdi,qword ptr [rip+0x20821a]
0x3dee: call 0x1fd0
0x3df3: call 0x3d40
0x3df8: mov byte ptr [rip+0x2084a9],0x1
0x3dff: pop rbp
0x3e00: ret 
0x3e10: push rbp
0x3e11: mov rbp,rsp
0x3e14: pop rbp
0x3e15: jmp 0x3d80
0x3eb1: mov r9,qword ptr [rcx]
0x3eb4: cmp byte ptr [rsi+r9+0x1],0x0
0x3eba: jne 0x3e70
0x40e6: nop word ptr cs:[rax+rax]
0x42d5: nop dword ptr [rax]
0x436d: lea rsi,[rip+0x47a2]
0x4374: mov edx,0x5
0x4379: xor edi,edi
0x437b: mov rbp,rax
0x437e: call 0x1c40
0x4383: mov rbx,rax
0x4386: call 0x1b70
0x438b: mov esi,dword ptr [rax]
0x438d: mov rcx,rbp
0x4390: mov rdx,rbx
0x4393: mov edi,0x1
0x4398: xor eax,eax
0x439a: call 0x1ea0
0x439f: nop 
0x43af: lea rsi,[rip+0x4780]
0x43b6: xor edi,edi
0x43b8: mov edx,0x5
0x43bd: mov rbx,rax
0x43c0: call 0x1c40
0x43c5: mov rdi,qword ptr [rip+0x207e9c]
0x43cc: mov rdx,rax
0x43cf: mov rcx,rbx
0x43d2: mov esi,0x1
0x43d7: xor eax,eax
0x43d9: call 0x1f40
0x43de: jmp 0x4165
0x440c: nop dword ptr [rax]
0x441d: lea rsi,[rip+0x46ce]
0x4424: xor edi,edi
0x4426: mov edx,0x5
0x442b: mov rbx,rax
0x442e: call 0x1c40
0x4433: mov rdi,qword ptr [rip+0x207e2e]
0x443a: mov rdx,rax
0x443d: mov rcx,rbx
0x4440: mov esi,0x1
0x4445: xor eax,eax
0x4447: call 0x1f40
0x444c: jmp 0x42e5
0x44cf: nop 
0x44fc: call 0x1c70
0x4570: lea rsi,[rip+0x4999]
0x4577: mov rbx,rax
0x457a: mov edx,0x5
0x457f: xor edi,edi
0x4581: call 0x1c40
0x4586: mov rcx,rbx
0x4589: mov rdx,rax
0x458c: xor esi,esi
0x458e: mov edi,0x1
0x4593: xor eax,eax
0x4595: call 0x1ea0
0x45ef: lea rsi,[rip+0x450e]
0x45f6: mov edx,0x5
0x45fb: xor edi,edi
0x45fd: mov rbp,rax
0x4600: call 0x1c40
0x4605: mov rbx,rax
0x4608: call 0x1b70
0x460d: mov esi,dword ptr [rax]
0x460f: mov rcx,rbp
0x4612: mov rdx,rbx
0x4615: mov edi,0x1
0x461a: xor eax,eax
0x461c: call 0x1ea0
0x4679: nop dword ptr [rax]
0x4680: push r15
0x4682: push r14
0x4684: push r13
0x4686: mov r13,rsi
0x4689: push r12
0x468b: shl r13,0x5
0x468f: push rbp
0x4690: push rbx
0x4691: add r13,rdi
0x4694: xor ebp,ebp
0x4696: sub rsp,0x18
0x469a: mov eax,dword ptr [r13+0x8]
0x469e: test eax,eax
0x46a0: js 0x46b3
0x46a2: add rsp,0x18
0x46a6: mov eax,ebp
0x46a8: pop rbx
0x46a9: pop rbp
0x46aa: pop r12
0x46ac: pop r13
0x46ae: pop r14
0x46b0: pop r15
0x46b2: ret 
0x46b3: lea rbx,[rsi-0x1]
0x46b7: lea r14,[rdx-0x1]
0x46bb: test rsi,rsi
0x46be: mov r12,rdi
0x46c1: mov r15,rsi
0x46c4: mov rdi,qword ptr [r13]
0x46c8: cmove rbx,r14
0x46cc: cmp eax,-0x1
0x46cf: je 0x476b
0x46d5: nop dword ptr [rax]
0x46d8: xor eax,eax
0x46da: mov esi,0xc01
0x46df: call 0x5470
0x46e4: test eax,eax
0x46e6: jns 0x4778
0x46ec: call 0x1b70
0x46f1: mov r8,rax
0x46f4: mov eax,dword ptr [rax]
0x46f6: sub eax,0x17
0x46f9: cmp eax,0x1
0x46fc: jbe 0x471f
0x46fe: jmp 0x47e3
0x4708: lea rax,[rbx-0x1]
0x470c: test rbx,rbx
0x470f: cmove rax,r14
0x4713: cmp rax,r15
0x4716: mov rbx,rax
0x4719: je 0x47b0
0x471f: mov rbp,rbx
0x4722: shl rbp,0x5
0x4726: add rbp,r12
0x4729: mov eax,dword ptr [rbp+0x8]
0x472c: test eax,eax
0x472e: js 0x4708
0x4730: mov rdi,qword ptr [rbp+0x10]
0x4734: mov qword ptr [rsp+0x8],r8
0x4739: call 0x8240
0x473e: test eax,eax
0x4740: jne 0x4816
0x4746: mov dword ptr [rbp+0x8],0xfffffffe
0x474d: mov eax,dword ptr [r13+0x8]
0x4751: mov qword ptr [rbp+0x10],0x0
0x4759: mov rdi,qword ptr [r13]
0x475d: mov ebp,0x1
0x4762: cmp eax,-0x1
0x4765: jne 0x46d8
0x476b: call 0x40f0
0x4770: test eax,eax
0x4772: js 0x46ec
0x4778: lea rsi,[rip+0x4467]
0x477f: mov dword ptr [r13+0x8],eax
0x4783: mov edi,eax
0x4785: call 0x1e60
0x478a: test rax,rax
0x478d: mov qword ptr [r13+0x10],rax
0x4791: je 0x4844
0x4797: mov eax,dword ptr [rip+0x207d5b]
0x479d: mov dword ptr [rip+0x207d51],0x0
0x47a7: mov dword ptr [r13+0x18],eax
0x47ab: jmp 0x46a2
0x47b0: mov rdx,qword ptr [r13]
0x47b4: mov esi,0x3
0x47b9: xor edi,edi
0x47bb: mov qword ptr [rsp+0x8],r8
0x47c0: call 0x7150
0x47c5: mov r8,qword ptr [rsp+0x8]
0x47ca: lea rdx,[rip+0x461d]
0x47d1: mov rcx,rax
0x47d4: mov edi,0x1
0x47d9: xor eax,eax
0x47db: mov esi,dword ptr [r8]
0x47de: call 0x1ea0
0x47e3: mov rdx,qword ptr [r13]
0x47e7: mov esi,0x3
0x47ec: xor edi,edi
0x47ee: mov qword ptr [rsp+0x8],r8
0x47f3: call 0x7150
0x47f8: mov r8,qword ptr [rsp+0x8]
0x47fd: lea rdx,[rip+0x45ea]
0x4804: mov rcx,rax
0x4807: mov edi,0x1
0x480c: xor eax,eax
0x480e: mov esi,dword ptr [r8]
0x4811: call 0x1ea0
0x4816: mov rdx,qword ptr [rbp]
0x481a: mov esi,0x3
0x481f: xor edi,edi
0x4821: call 0x7150
0x4826: mov r8,qword ptr [rsp+0x8]
0x482b: lea rdx,[rip+0x45bc]
0x4832: mov rcx,rax
0x4835: mov edi,0x1
0x483a: xor eax,eax
0x483c: mov esi,dword ptr [r8]
0x483f: call 0x1ea0
0x4844: mov rdx,qword ptr [r13]
0x4848: mov esi,0x3
0x484d: xor edi,edi
0x484f: call 0x7150
0x4854: mov rbx,rax
0x4857: call 0x1b70
0x485c: mov esi,dword ptr [rax]
0x485e: lea rdx,[rip+0x4589]
0x4865: mov rcx,rbx
0x4868: mov edi,0x1
0x486d: xor eax,eax
0x486f: call 0x1ea0
0x4874: nop 
0x4876: nop word ptr cs:[rax+rax]
0x48ab: call 0x8240
0x48b0: test eax,eax
0x48b2: jne 0x4970
0x48b8: test ebp,ebp
0x48ba: js 0x4900
0x4939: cmp ebp,0xd
0x493c: jne 0x4ac0
0x4942: nop word ptr [rax+rax]
0x4970: call 0x1b70
0x4975: cmp qword ptr [rip+0x207b83],0x0
0x497d: mov r13,rax
0x4980: je 0x498b
0x4982: cmp dword ptr [rax],0x20
0x4985: je 0x48b8
0x498b: mov rdx,rbx
0x498e: mov esi,0x3
0x4993: xor edi,edi
0x4995: call 0x7150
0x499a: mov esi,dword ptr [r13]
0x499e: lea rdx,[rip+0x4449]
0x49a5: mov rcx,rax
0x49a8: mov edi,0x1
0x49ad: xor eax,eax
0x49af: call 0x1ea0
0x49b4: nop dword ptr [rax]
0x49de: mov rbx,rax
0x49e1: call 0x1b70
0x49e6: mov esi,dword ptr [rax]
0x49e8: lea rdx,[rip+0x43ff]
0x49ef: mov rcx,rbx
0x49f2: mov edi,0x1
0x49f7: xor eax,eax
0x49f9: call 0x1ea0
0x49fe: nop 
0x4a3b: mov r12,qword ptr [rip+0x207abe]
0x4a42: mov rdx,rbx
0x4a45: xor edi,edi
0x4a47: mov esi,0x3
0x4a4c: call 0x7150
0x4a51: lea rsi,[rip+0x4560]
0x4a58: mov rbx,rax
0x4a5b: xor edi,edi
0x4a5d: mov edx,0x5
0x4a62: call 0x1c40
0x4a67: mov r9,r12
0x4a6a: mov rdx,rax
0x4a6d: mov r8d,ebp
0x4a70: mov rcx,rbx
0x4a73: xor esi,esi
0x4a75: mov edi,ebp
0x4a77: xor eax,eax
0x4a79: call 0x1ea0
0x4a7e: jmp 0x4948
0x4abe: nop 
0x4ac0: lea r12,[rsp+0x20]
0x4ac5: mov edi,ebp
0x4ac7: mov rsi,r12
0x4aca: call 0x8580
0x4acf: test eax,eax
0x4ad1: jne 0x4b20
0x4ad3: mov rdx,rbx
0x4ad6: xor edi,edi
0x4ad8: mov esi,0x3
0x4add: mov r13,qword ptr [rip+0x207a1c]
0x4ae4: call 0x7150
0x4ae9: lea rsi,[rip+0x4498]
0x4af0: xor edi,edi
0x4af2: mov edx,0x5
0x4af7: mov rbx,rax
0x4afa: call 0x1c40
0x4aff: lea edi,[rbp+0x80]
0x4b05: mov rdx,rax
0x4b08: mov r9,r13
0x4b0b: mov r8,r12
0x4b0e: mov rcx,rbx
0x4b11: xor esi,esi
0x4b13: xor eax,eax
0x4b15: call 0x1ea0
0x4b1a: jmp 0x4948
0x4b20: lea rcx,[rip+0x40db]
0x4b27: mov r8d,ebp
0x4b2a: mov edx,0x13
0x4b2f: mov esi,0x1
0x4b34: mov rdi,r12
0x4b37: xor eax,eax
0x4b39: call 0x1fc0
0x4b3e: jmp 0x4ad3
0x4b40: call 0x1c70
0x4b45: lea rsi,[rip+0x4494]
0x4b4c: mov edx,0x5
0x4b51: xor edi,edi
0x4b53: mov dword ptr [rsp+0xc],ecx
0x4b57: call 0x1c40
0x4b5c: mov ecx,dword ptr [rsp+0xc]
0x4b60: mov rdx,rax
0x4b63: xor esi,esi
0x4b65: mov edi,0x1
0x4b6a: xor eax,eax
0x4b6c: call 0x1ea0
0x4b71: nop dword ptr [rax+rax]
0x4b76: nop word ptr cs:[rax+rax]
0x4c1f: mov esi,dword ptr [rbx]
0x4c21: lea rdx,[rip+0x41c6]
0x4c28: mov rcx,rax
0x4c2b: mov edi,0x1
0x4c30: xor eax,eax
0x4c32: call 0x1ea0
0x4c37: nop word ptr [rax+rax]
0x4c6b: mov rbx,rax
0x4c6e: call 0x1b70
0x4c73: mov esi,dword ptr [rax]
0x4c75: lea rdx,[rip+0x4172]
0x4c7c: mov rcx,rbx
0x4c7f: mov edi,0x1
0x4c84: xor eax,eax
0x4c86: call 0x1ea0
0x4c8b: nop dword ptr [rax+rax]
0x4cc5: cmp rcx,rdx
0x4cc8: mov r13,rcx
0x4ccb: setb qword ptr [rsp+0x1f]
0x4cd0: cmp r13,r12
0x4cd3: jb 0x4da6
0x4e99: mov rbx,rax
0x4e9c: call 0x1b70
0x4ea1: mov esi,dword ptr [rax]
0x4ea3: lea rdx,[rip+0x3f44]
0x4eaa: mov rcx,rbx
0x4ead: mov edi,0x1
0x4eb2: xor eax,eax
0x4eb4: call 0x1ea0
0x4eb9: nop dword ptr [rax]
0x52f0: mov qword ptr [rip+0x207219],rdi
0x52f7: ret 
0x5300: mov byte ptr [rip+0x207201],dil
0x5307: ret 
0x5310: push rbp
0x5311: push rbx
0x5312: sub rsp,0x8
0x5316: mov rdi,qword ptr [rip+0x206f4b]
0x531d: call 0x8660
0x5322: test eax,eax
0x5324: je 0x533c
0x5326: call 0x1b70
0x532b: cmp byte ptr [rip+0x2071d6],0x0
0x5332: mov rbx,rax
0x5335: je 0x5353
0x5337: cmp dword ptr [rax],0x20
0x533a: jne 0x5353
0x533c: mov rdi,qword ptr [rip+0x206f5d]
0x5343: call 0x8660
0x5348: test eax,eax
0x534a: jne 0x5392
0x534c: add rsp,0x8
0x5350: pop rbx
0x5351: pop rbp
0x5352: ret 
0x5353: lea rsi,[rip+0x3ae1]
0x535a: xor edi,edi
0x535c: mov edx,0x5
0x5361: call 0x1c40
0x5366: mov rdi,qword ptr [rip+0x2071a3]
0x536d: mov rbp,rax
0x5370: test rdi,rdi
0x5373: je 0x539d
0x5375: call 0x7120
0x537a: mov esi,dword ptr [rbx]
0x537c: lea rdx,[rip+0x3a67]
0x5383: mov rcx,rax
0x5386: mov r8,rbp
0x5389: xor edi,edi
0x538b: xor eax,eax
0x538d: call 0x1ea0
0x5392: mov edi,dword ptr [rip+0x206c98]
0x5398: call 0x1b90
0x539d: mov esi,dword ptr [rbx]
0x539f: lea rdx,[rip+0x3a48]
0x53a6: mov rcx,rax
0x53a9: xor edi,edi
0x53ab: xor eax,eax
0x53ad: call 0x1ea0
0x53b2: jmp 0x5392
0x5420: push rbx
0x5421: mov rbx,rdi
0x5424: call 0x1c60
0x5429: cmp rax,0x1
0x542d: jbe 0x543a
0x542f: cmp byte ptr [rbx+rax-0x1],0x2f
0x5434: lea rdx,[rax-0x1]
0x5438: je 0x5448
0x543a: pop rbx
0x543b: ret 
0x5440: mov rdx,rax
0x5443: nop dword ptr [rax+rax]
0x5448: cmp rdx,0x1
0x544c: je 0x5460
0x544e: cmp byte ptr [rbx+rdx-0x1],0x2f
0x5453: lea rax,[rdx-0x1]
0x5457: je 0x5440
0x5459: mov rax,rdx
0x545c: pop rbx
0x545d: ret 
0x5460: mov eax,0x1
0x5465: pop rbx
0x5466: ret 
0x54d9: call 0x1c70
0x54de: nop 
0x56af: nop 
0x56b0: push rbp
0x56b1: push rbx
0x56b2: mov rbp,rdi
0x56b5: mov ebx,esi
0x56b7: sub rsp,0x8
0x56bb: call 0x8740
0x56c0: movzx edx,byte ptr [rax]
0x56c3: and edx,-0x21
0x56c6: cmp dl,0x55
0x56c9: je 0x5740
0x56cb: cmp dl,0x47
0x56ce: je 0x56f0
0x56d0: lea rax,[rip+0x454c]
0x56d7: lea rdx,[rip+0x4547]
0x56de: cmp ebx,0x9
0x56e1: cmovne rax,rdx
0x56e5: add rsp,0x8
0x56e9: pop rbx
0x56ea: pop rbp
0x56eb: ret 
0x56f0: movzx edx,byte ptr [rax+0x1]
0x56f4: and edx,-0x21
0x56f7: cmp dl,0x42
0x56fa: jne 0x56d0
0x56fc: cmp byte ptr [rax+0x2],0x31
0x5700: jne 0x56d0
0x5702: cmp byte ptr [rax+0x3],0x38
0x5706: jne 0x56d0
0x5708: cmp byte ptr [rax+0x4],0x30
0x570c: jne 0x56d0
0x570e: cmp byte ptr [rax+0x5],0x33
0x5712: jne 0x56d0
0x5714: cmp byte ptr [rax+0x6],0x30
0x5718: jne 0x56d0
0x571a: cmp byte ptr [rax+0x7],0x0
0x571e: jne 0x56d0
0x5720: cmp byte ptr [rbp],0x60
0x5724: lea rax,[rip+0x44f1]
0x572b: lea rdx,[rip+0x44ee]
0x5732: cmovne rax,rdx
0x5736: add rsp,0x8
0x573a: pop rbx
0x573b: pop rbp
0x573c: ret 
0x5740: movzx edx,byte ptr [rax+0x1]
0x5744: and edx,-0x21
0x5747: cmp dl,0x54
0x574a: jne 0x56d0
0x574c: movzx edx,byte ptr [rax+0x2]
0x5750: and edx,-0x21
0x5753: cmp dl,0x46
0x5756: jne 0x56d0
0x575c: cmp byte ptr [rax+0x3],0x2d
0x5760: jne 0x56d0
0x5766: cmp byte ptr [rax+0x4],0x38
0x576a: jne 0x56d0
0x5770: cmp byte ptr [rax+0x5],0x0
0x5774: jne 0x56d0
0x577a: cmp byte ptr [rbp],0x60
0x577e: lea rax,[rip+0x448f]
0x5785: lea rdx,[rip+0x448c]
0x578c: cmovne rax,rdx
0x5790: add rsp,0x8
0x5794: pop rbx
0x5795: pop rbp
0x5796: ret 
0x5873: xor r11d,r11d
0x5876: mov rax,rbp
0x5879: mov r8d,r12d
0x587c: mov rbp,r11
0x587f: mov r11,rax
0x5882: nop word ptr [rax+rax]
0x5888: cmp r11,rbp
0x588b: setne r12b
0x588f: cmp r11,-0x1
0x5893: jne 0x58a2
0x5895: mov rax,qword ptr [rsp+0x10]
0x589a: cmp byte ptr [rax+rbp],0x0
0x589e: setne r12b
0x58a2: test r12b,r12b
0x58a5: je 0x5f00
0x58ab: cmp dword ptr [rsp+0x8],0x2
0x58b0: mov rdi,qword ptr [rsp+0x10]
0x58b5: lea r9,[rdi+rbp]
0x58b9: setne al
0x58bc: and al,byte ptr [rsp+0xd]
0x58c0: mov r10d,eax
0x58c3: je 0x5970
0x58c9: mov rax,qword ptr [rsp+0x18]
0x58ce: test rax,rax
0x58d1: je 0x5d00
0x58d7: cmp r11,-0x1
0x58db: lea rbx,[rbp+rax]
0x58e0: jne 0x5910
0x58e2: cmp rax,0x1
0x58e6: jbe 0x5910
0x58e8: mov byte ptr [rsp+0x38],r8b
0x58ed: mov byte ptr [rsp+0x30],r10b
0x58f2: mov qword ptr [rsp+0x28],r9
0x58f7: call 0x1c60
0x58fc: movzx r8d,byte ptr [rsp+0x38]
0x5902: movzx r10d,byte ptr [rsp+0x30]
0x5908: mov r11,rax
0x590b: mov r9,qword ptr [rsp+0x28]
0x5910: cmp rbx,r11
0x5913: mov byte ptr [rsp+0x28],r10b
0x5918: ja 0x5ed0
0x591e: mov rdx,qword ptr [rsp+0x18]
0x5923: mov rsi,qword ptr [rsp+0x48]
0x5928: mov rdi,r9
0x592b: mov qword ptr [rsp+0x40],r11
0x5930: mov byte ptr [rsp+0x38],r8b
0x5935: mov qword ptr [rsp+0x30],r9
0x593a: call 0x1d70
0x593f: test eax,eax
0x5941: mov r9,qword ptr [rsp+0x30]
0x5946: movzx r8d,byte ptr [rsp+0x38]
0x594c: mov r11,qword ptr [rsp+0x40]
0x5951: jne 0x5ed0
0x5957: cmp byte ptr [rsp+0xf],0x0
0x595c: movzx r10d,byte ptr [rsp+0x28]
0x5962: jne 0x68e5
0x5968: nop dword ptr [rax+rax]
0x5970: movzx ebx,byte ptr [r9]
0x5974: cmp bl,0x7e
0x5977: ja 0x5c98
0x597d: lea rcx,[rip+0x4328]
0x5984: movzx edx,bl
0x5987: movsxd rax,dword ptr [rcx+rdx*4]
0x598b: add rax,rcx
0x598e: jmp rax
0x59c8: cmp byte ptr [rsp+0xd],0x1
0x59cd: jne 0x5ae2
0x59d3: test dl,dl
0x59d5: jne 0x5ae2
0x59db: mov rsi,qword ptr [rsp+0x20]
0x59e0: test rsi,rsi
0x59e3: je 0x59f9
0x59e5: mov edx,ebx
0x59e7: shr dl,0x5
0x59ea: movzx edx,dl
0x59ed: mov edx,dword ptr [rsi+rdx*4]
0x59f0: btl edx,ebx
0x59f3: jb 0x5b43
0x59f9: test r10b,r10b
0x59fc: jne 0x5b43
0x5a02: xor eax,0x1
0x5a05: add rbp,0x1
0x5a09: and eax,r8d
0x5a0c: test al,al
0x5a0e: je 0x5a30
0x5a10: cmp r13,r15
0x5a13: jbe 0x5a1a
0x5a15: mov byte ptr [r14+r15],0x27
0x5a1a: lea rax,[r15+0x1]
0x5a1e: cmp r13,rax
0x5a21: jbe 0x5a29
0x5a23: mov byte ptr [r14+r15+0x1],0x27
0x5a29: add r15,0x2
0x5a2d: xor r8d,r8d
0x5a30: cmp r15,r13
0x5a33: jae 0x5a39
0x5a35: mov byte ptr [r14+r15],bl
0x5a39: movzx edi,byte ptr [rsp+0xe]
0x5a3e: add r15,0x1
0x5a42: mov eax,0x0
0x5a47: test r12b,r12b
0x5a4a: cmove edi,eax
0x5a4d: mov byte ptr [rsp+0xe],dil
0x5a52: jmp 0x5888
0x5ae2: cmp byte ptr [rsp+0xf],0x0
0x5ae7: jne 0x59db
0x5aed: jmp 0x59f9
0x5b43: cmp dword ptr [rsp+0x8],0x2
0x5b48: sete dl
0x5b4b: cmp byte ptr [rsp+0xf],0x0
0x5b50: mov eax,edx
0x5b52: jne 0x63a8
0x5b58: mov eax,r8d
0x5b5b: xor eax,0x1
0x5b5e: and al,dl
0x5b60: je 0x5b91
0x5b62: cmp r13,r15
0x5b65: jbe 0x5b6c
0x5b67: mov byte ptr [r14+r15],0x27
0x5b6c: lea rdx,[r15+0x1]
0x5b70: cmp r13,rdx
0x5b73: jbe 0x5b7b
0x5b75: mov byte ptr [r14+r15+0x1],0x24
0x5b7b: lea rdx,[r15+0x2]
0x5b7f: cmp r13,rdx
0x5b82: jbe 0x5b8a
0x5b84: mov byte ptr [r14+r15+0x2],0x27
0x5b8a: add r15,0x3
0x5b8e: mov r8d,eax
0x5b91: cmp r13,r15
0x5b94: jbe 0x5b9b
0x5b96: mov byte ptr [r14+r15],0x5c
0x5b9b: add r15,0x1
0x5b9f: add rbp,0x1
0x5ba3: jmp 0x5a30
0x5c90: xor r10d,r10d
0x5c93: nop dword ptr [rax+rax]
0x5c98: cmp qword ptr [rsp+0x58],0x1
0x5c9e: jne 0x6048
0x5ca4: mov qword ptr [rsp+0x38],r11
0x5ca9: mov byte ptr [rsp+0x30],r8b
0x5cae: mov byte ptr [rsp+0x28],r10b
0x5cb3: call 0x1fb0
0x5cb8: mov rcx,qword ptr [rax]
0x5cbb: movzx edx,bl
0x5cbe: movzx r10d,byte ptr [rsp+0x28]
0x5cc4: movzx r8d,byte ptr [rsp+0x30]
0x5cca: mov r11,qword ptr [rsp+0x38]
0x5ccf: mov edi,0x1
0x5cd4: movzx eax,word ptr [rcx+rdx*2]
0x5cd8: and ax,0x4000
0x5cdc: setne r12b
0x5ce0: sete al
0x5ce3: and al,byte ptr [rsp+0xd]
0x5ce7: test al,al
0x5ce9: jne 0x6681
0x5cef: cmp dword ptr [rsp+0x8],0x2
0x5cf4: sete dl
0x5cf7: jmp 0x59c8
0x5d00: movzx ebx,byte ptr [r9]
0x5d04: cmp bl,0x7e
0x5d07: ja 0x5c90
0x5d09: lea rcx,[rip+0x4198]
0x5d10: movzx edx,bl
0x5d13: movsxd rax,dword ptr [rcx+rdx*4]
0x5d17: add rax,rcx
0x5d1a: jmp rax
0x5ed0: xor r10d,r10d
0x5ed3: jmp 0x5970
0x5f00: cmp dword ptr [rsp+0x8],0x2
0x5f05: movzx ebx,byte ptr [rsp+0xf]
0x5f0a: mov r12d,r8d
0x5f0d: mov rbp,r11
0x5f10: sete dl
0x5f13: mov eax,ebx
0x5f15: test r15,r15
0x5f18: sete cl
0x5f1b: and eax,edx
0x5f1d: and al,cl
0x5f1f: jne 0x6986
0x5f25: mov eax,ebx
0x5f27: xor eax,0x1
0x5f2a: and dl,al
0x5f2c: je 0x689c
0x5f32: cmp byte ptr [rsp+0x7c],0x0
0x5f37: je 0x689a
0x5f3d: cmp byte ptr [rsp+0xe],0x0
0x5f42: jne 0x693d
0x5f48: test r13,r13
0x5f4b: sete al
0x5f4e: cmp qword ptr [rsp+0x50],0x0
0x5f54: setne dl
0x5f57: and al,dl
0x5f59: je 0x697c
0x5f5f: mov r13,qword ptr [rsp+0x50]
0x5f64: lea rbx,[rip+0x3cba]
0x5f6b: mov byte ptr [r14],0x27
0x5f6f: mov dword ptr [rsp+0x8],0x2
0x5f77: mov r15d,0x1
0x5f7d: mov qword ptr [rsp+0x18],0x1
0x5f86: mov byte ptr [rsp+0xf],0x0
0x5f8b: mov qword ptr [rsp+0x48],rbx
0x5f90: mov byte ptr [rsp+0x7c],al
0x5f94: jmp 0x5873
0x6048: lea rax,[rsp+0xa0]
0x6050: cmp r11,-0x1
0x6054: mov qword ptr [rsp+0xa0],0x0
0x6060: mov qword ptr [rsp+0x28],rax
0x6065: jne 0x6094
0x6067: mov rdi,qword ptr [rsp+0x10]
0x606c: mov byte ptr [rsp+0x40],r8b
0x6071: mov byte ptr [rsp+0x38],r10b
0x6076: mov qword ptr [rsp+0x30],r9
0x607b: call 0x1c60
0x6080: movzx r8d,byte ptr [rsp+0x40]
0x6086: movzx r10d,byte ptr [rsp+0x38]
0x608c: mov r11,rax
0x608f: mov r9,qword ptr [rsp+0x30]
0x6094: lea rax,[rsp+0x9c]
0x609c: xor ecx,ecx
0x609e: mov byte ptr [rsp+0x7e],bl
0x60a2: mov byte ptr [rsp+0x7d],r8b
0x60a7: mov rbx,rcx
0x60aa: mov qword ptr [rsp+0x88],r9
0x60b2: mov qword ptr [rsp+0x38],rax
0x60b7: mov byte ptr [rsp+0x7f],r10b
0x60bc: mov qword ptr [rsp+0x80],r15
0x60c4: mov qword ptr [rsp+0x40],r14
0x60c9: mov qword ptr [rsp+0x70],r13
0x60ce: mov qword ptr [rsp+0x30],r11
0x60d3: mov rax,qword ptr [rsp+0x10]
0x60d8: lea r14,[rbp+rbx]
0x60dd: mov rdx,qword ptr [rsp+0x30]
0x60e2: mov rcx,qword ptr [rsp+0x28]
0x60e7: mov rdi,qword ptr [rsp+0x38]
0x60ec: lea r13,[rax+r14]
0x60f0: sub rdx,r14
0x60f3: mov rsi,r13
0x60f6: call 0x8360
0x60fb: test rax,rax
0x60fe: mov r15,rax
0x6101: je 0x6151
0x6103: cmp rax,-0x1
0x6107: je 0x6725
0x610d: cmp rax,-0x2
0x6111: je 0x66b1
0x6117: cmp dword ptr [rsp+0x8],0x2
0x611c: sete al
0x611f: and al,byte ptr [rsp+0xf]
0x6123: jne 0x62c0
0x6129: mov edi,dword ptr [rsp+0x9c]
0x6130: call 0x1f80
0x6135: mov rdi,qword ptr [rsp+0x28]
0x613a: test eax,eax
0x613c: mov eax,0x0
0x6141: cmove r12d,eax
0x6145: add rbx,r15
0x6148: call 0x1f60
0x614d: test eax,eax
0x614f: je 0x60d3
0x6151: mov edx,r12d
0x6154: mov rdi,rbx
0x6157: movzx r8d,byte ptr [rsp+0x7d]
0x615d: xor edx,0x1
0x6160: movzx ebx,byte ptr [rsp+0x7e]
0x6165: movzx r10d,byte ptr [rsp+0x7f]
0x616b: and dl,byte ptr [rsp+0xd]
0x616f: mov r15,qword ptr [rsp+0x80]
0x6177: mov r14,qword ptr [rsp+0x40]
0x617c: mov r13,qword ptr [rsp+0x70]
0x6181: mov r11,qword ptr [rsp+0x30]
0x6186: cmp rdi,0x1
0x618a: jbe 0x678b
0x6190: mov rcx,rdi
0x6193: xor esi,esi
0x6195: movzx r9d,byte ptr [rsp+0xf]
0x619b: add rcx,rbp
0x619e: mov rdi,qword ptr [rsp+0x10]
0x61a3: jmp 0x625e
0x61b0: cmp dword ptr [rsp+0x8],0x2
0x61b5: sete al
0x61b8: test r9b,r9b
0x61bb: jne 0x6670
0x61c1: mov esi,r8d
0x61c4: xor esi,0x1
0x61c7: and al,sil
0x61ca: je 0x61fb
0x61cc: cmp r13,r15
0x61cf: jbe 0x61d6
0x61d1: mov byte ptr [r14+r15],0x27
0x61d6: lea rsi,[r15+0x1]
0x61da: cmp r13,rsi
0x61dd: jbe 0x61e5
0x61df: mov byte ptr [r14+r15+0x1],0x24
0x61e5: lea rsi,[r15+0x2]
0x61e9: cmp r13,rsi
0x61ec: jbe 0x61f4
0x61ee: mov byte ptr [r14+r15+0x2],0x27
0x61f4: add r15,0x3
0x61f8: mov r8d,eax
0x61fb: cmp r13,r15
0x61fe: jbe 0x6205
0x6200: mov byte ptr [r14+r15],0x5c
0x6205: lea rax,[r15+0x1]
0x6209: cmp r13,rax
0x620c: jbe 0x621b
0x620e: mov eax,ebx
0x6210: shr al,0x6
0x6213: add eax,0x30
0x6216: mov byte ptr [r14+r15+0x1],al
0x621b: lea rax,[r15+0x2]
0x621f: cmp r13,rax
0x6222: jbe 0x6234
0x6224: mov eax,ebx
0x6226: shr al,0x3
0x6229: and eax,0x7
0x622c: add eax,0x30
0x622f: mov byte ptr [r14+r15+0x2],al
0x6234: and ebx,0x7
0x6237: add rbp,0x1
0x623b: add r15,0x3
0x623f: add ebx,0x30
0x6242: cmp rbp,rcx
0x6245: jae 0x5a30
0x624b: mov esi,edx
0x624d: cmp r13,r15
0x6250: jbe 0x6256
0x6252: mov byte ptr [r14+r15],bl
0x6256: movzx ebx,byte ptr [rdi+rbp]
0x625a: add r15,0x1
0x625e: test dl,dl
0x6260: jne 0x61b0
0x6266: mov eax,esi
0x6268: xor eax,0x1
0x626b: and eax,r8d
0x626e: test r10b,r10b
0x6271: je 0x6281
0x6273: cmp r13,r15
0x6276: jbe 0x627d
0x6278: mov byte ptr [r14+r15],0x5c
0x627d: add r15,0x1
0x6281: add rbp,0x1
0x6285: cmp rbp,rcx
0x6288: jae 0x5a0c
0x628e: test al,al
0x6290: je 0x668e
0x6296: cmp r13,r15
0x6299: jbe 0x62a0
0x629b: mov byte ptr [r14+r15],0x27
0x62a0: lea rax,[r15+0x1]
0x62a4: cmp r13,rax
0x62a7: jbe 0x62af
0x62a9: mov byte ptr [r14+r15+0x1],0x27
0x62af: add r15,0x2
0x62b3: xor r10d,r10d
0x62b6: xor r8d,r8d
0x62b9: jmp 0x624d
0x62c0: cmp r15,0x1
0x62c4: je 0x6129
0x62ca: mov rdi,qword ptr [rsp+0x10]
0x62cf: lea rcx,[rdi+r15]
0x62d3: lea rdx,[rdi+r14+0x1]
0x62d8: lea r8,[rcx+r14]
0x62dc: jmp 0x62ed
0x62e0: add rdx,0x1
0x62e4: cmp r8,rdx
0x62e7: je 0x6129
0x62ed: movzx ecx,byte ptr [rdx]
0x62f0: sub ecx,0x5b
0x62f3: cmp cl,0x21
0x62f6: ja 0x62e0
0x62f8: mov esi,0x1
0x62fd: shl rsi,cl
0x6300: mov rcx,rsi
0x6303: movabsq rsi,0x20000002b
0x630d: test rcx,rsi
0x6310: je 0x62e0
0x6312: mov r14,qword ptr [rsp+0x40]
0x6317: mov r13,qword ptr [rsp+0x70]
0x631c: mov rbp,qword ptr [rsp+0x30]
0x6321: mov dword ptr [rsp+0x8],0x2
0x6329: cmp byte ptr [rsp+0xd],0x0
0x632e: je 0x6340
0x6330: test al,al
0x6332: mov eax,0x4
0x6337: cmove eax,dword ptr [rsp+0x8]
0x633c: mov dword ptr [rsp+0x8],eax
0x6340: sub rsp,0x8
0x6344: mov rcx,rbp
0x6347: mov rsi,r13
0x634a: push qword ptr [rsp+0x68]
0x634e: push qword ptr [rsp+0x78]
0x6352: mov rdi,r14
0x6355: push 0x0
0x6357: mov r9d,dword ptr [rsp+0x98]
0x635f: mov r8d,dword ptr [rsp+0x28]
0x6364: mov rdx,qword ptr [rsp+0x30]
0x6369: and r9d,-0x3
0x636d: call 0x57a0
0x6372: add rsp,0x20
0x6376: mov r15,rax
0x6379: mov rbx,qword ptr [rsp+0xa8]
0x6381: xor rbx,qword ptr fs:0x28
0x638a: mov rax,r15
0x638d: jne 0x6993
0x6393: add rsp,0xb8
0x639a: pop rbx
0x639b: pop rbp
0x639c: pop r12
0x639e: pop r13
0x63a0: pop r14
0x63a2: pop r15
0x63a4: ret 
0x63a8: mov rbp,r11
0x63ab: jmp 0x6329
0x6411: test r13,r13
0x6414: jne 0x69aa
0x641a: lea rax,[rip+0x3804]
0x6421: mov qword ptr [rsp+0x50],0x0
0x642a: mov byte ptr [rsp+0xe],0x1
0x642f: mov byte ptr [rsp+0x7c],0x0
0x6434: xor r12d,r12d
0x6437: mov byte ptr [rsp+0xf],0x0
0x643c: mov qword ptr [rsp+0x18],0x1
0x6445: mov qword ptr [rsp+0x48],rax
0x644a: mov r15d,0x1
0x6450: mov dword ptr [rsp+0x8],0x2
0x6458: jmp 0x5873
0x6670: movzx ebx,byte ptr [rsp+0xf]
0x6675: mov rbp,r11
0x6678: mov byte ptr [rsp+0xd],bl
0x667c: jmp 0x6329
0x6681: movzx edx,byte ptr [rsp+0xd]
0x6686: xor r12d,r12d
0x6689: jmp 0x6190
0x668e: xor r10d,r10d
0x6691: jmp 0x624d
0x66b1: mov r11,qword ptr [rsp+0x30]
0x66b6: mov rsi,r14
0x66b9: mov rcx,r13
0x66bc: mov rax,rbx
0x66bf: mov rdi,rbx
0x66c2: movzx r8d,byte ptr [rsp+0x7d]
0x66c8: movzx ebx,byte ptr [rsp+0x7e]
0x66cd: mov r9,qword ptr [rsp+0x88]
0x66d5: cmp rsi,r11
0x66d8: movzx r10d,byte ptr [rsp+0x7f]
0x66de: mov r15,qword ptr [rsp+0x80]
0x66e6: mov r14,qword ptr [rsp+0x40]
0x66eb: mov r13,qword ptr [rsp+0x70]
0x66f0: jae 0x6718
0x66f2: cmp byte ptr [rcx],0x0
0x66f5: jne 0x6707
0x66f7: jmp 0x6718
0x6700: cmp byte ptr [r9+rax],0x0
0x6705: je 0x6715
0x6707: add rax,0x1
0x670b: lea rdx,[rbp+rax]
0x6710: cmp r11,rdx
0x6713: ja 0x6700
0x6715: mov rdi,rax
0x6718: movzx edx,byte ptr [rsp+0xd]
0x671d: xor r12d,r12d
0x6720: jmp 0x6186
0x6725: mov rdi,rbx
0x6728: movzx r8d,byte ptr [rsp+0x7d]
0x672e: movzx ebx,byte ptr [rsp+0x7e]
0x6733: movzx r10d,byte ptr [rsp+0x7f]
0x6739: mov r15,qword ptr [rsp+0x80]
0x6741: xor r12d,r12d
0x6744: mov r14,qword ptr [rsp+0x40]
0x6749: mov r13,qword ptr [rsp+0x70]
0x674e: mov r11,qword ptr [rsp+0x30]
0x6753: movzx edx,byte ptr [rsp+0xd]
0x6758: jmp 0x6186
0x678b: mov eax,edx
0x678d: jmp 0x5ce7
0x689a: mov eax,edx
0x689c: mov rbx,qword ptr [rsp+0x48]
0x68a1: test rbx,rbx
0x68a4: je 0x68d2
0x68a6: test al,al
0x68a8: je 0x68d2
0x68aa: movzx ecx,byte ptr [rbx]
0x68ad: mov rax,rbx
0x68b0: test cl,cl
0x68b2: je 0x68d2
0x68b4: mov rdx,r15
0x68b7: sub rax,r15
0x68ba: cmp r13,rdx
0x68bd: jbe 0x68c3
0x68bf: mov byte ptr [r14+rdx],cl
0x68c3: add rdx,0x1
0x68c7: movzx ecx,byte ptr [rax+rdx]
0x68cb: test cl,cl
0x68cd: jne 0x68ba
0x68cf: mov r15,rdx
0x68d2: cmp r13,r15
0x68d5: jbe 0x6379
0x68db: mov byte ptr [r14+r15],0x0
0x68e0: jmp 0x6379
0x68e5: cmp dword ptr [rsp+0x8],0x2
0x68ea: movzx ebx,byte ptr [rsp+0xf]
0x68ef: mov rbp,r11
0x68f2: sete al
0x68f5: mov byte ptr [rsp+0xd],bl
0x68f9: jmp 0x6329
0x693d: sub rsp,0x8
0x6941: mov r8d,0x5
0x6947: mov rcx,r11
0x694a: push qword ptr [rsp+0x68]
0x694e: push qword ptr [rsp+0x78]
0x6952: mov rdi,r14
0x6955: push qword ptr [rsp+0x38]
0x6959: mov r9d,dword ptr [rsp+0x98]
0x6961: mov rdx,qword ptr [rsp+0x30]
0x6966: mov rsi,qword ptr [rsp+0x70]
0x696b: call 0x57a0
0x6970: add rsp,0x20
0x6974: mov r15,rax
0x6977: jmp 0x6379
0x697c: movzx eax,byte ptr [rsp+0x7c]
0x6981: jmp 0x689c
0x6986: mov dword ptr [rsp+0x8],0x2
0x698e: jmp 0x6329
0x6993: call 0x1c70
0x6998: mov byte ptr [rsp+0xd],0x0
0x699d: jmp 0x6411
0x69aa: mov byte ptr [rsp+0xe],0x1
0x69af: xor eax,eax
0x69b1: xor r12d,r12d
0x69b4: mov qword ptr [rsp+0x50],0x0
0x69bd: jmp 0x5f64
0x69d4: nop 
0x69d6: nop word ptr cs:[rax+rax]
0x6acc: add rsp,0x20
0x6ad0: mov r11,qword ptr [rsp+0x10]
0x6ad5: cmp r11,rax
0x6ad8: ja 0x6b41
0x6ada: lea rsi,[rax+0x1]
0x6ade: lea rax,[rip+0x205a3b]
0x6ae5: cmp r12,rax
0x6ae8: mov qword ptr [rbx],rsi
0x6aeb: je 0x6aff
0x6aed: mov rdi,r12
0x6af0: mov qword ptr [rsp+0x10],rsi
0x6af5: call 0x1b50
0x6afa: mov rsi,qword ptr [rsp+0x10]
0x6aff: mov rdi,rsi
0x6b02: mov qword ptr [rsp+0x10],rsi
0x6b07: call 0x7a60
0x6b0c: sub rsp,0x8
0x6b10: mov qword ptr [rbx+0x8],rax
0x6b14: mov r8d,dword ptr [rbp]
0x6b18: push qword ptr [rbp+0x30]
0x6b1b: push qword ptr [rbp+0x28]
0x6b1e: mov rcx,r14
0x6b21: push r15
0x6b23: mov r9d,dword ptr [rsp+0x3c]
0x6b28: mov rdi,rax
0x6b2b: mov rdx,qword ptr [rsp+0x28]
0x6b30: mov rsi,qword ptr [rsp+0x30]
0x6b35: mov r12,rax
0x6b38: call 0x57a0
0x6b3d: add rsp,0x20
0x6b41: mov eax,dword ptr [rsp+0x18]
0x6b45: mov dword ptr [r13],eax
0x6b49: add rsp,0x28
0x6b4d: mov rax,r12
0x6b50: pop rbx
0x6b51: pop rbp
0x6b52: pop r12
0x6b54: pop r13
0x6b56: pop r14
0x6b58: pop r15
0x6b5a: ret 
0x6b81: call 0x1b60
0x6b86: call 0x7cb0
0x6b8b: nop dword ptr [rax+rax]
0x6b90: push r12
0x6b92: push rbp
0x6b93: push rbx
0x6b94: mov rbx,rdi
0x6b97: call 0x1b70
0x6b9c: mov r12d,dword ptr [rax]
0x6b9f: mov rbp,rax
0x6ba2: lea rax,[rip+0x205a77]
0x6ba9: test rbx,rbx
0x6bac: mov esi,0x38
0x6bb1: cmove rbx,rax
0x6bb5: mov rdi,rbx
0x6bb8: call 0x7c60
0x6bbd: mov dword ptr [rbp],r12d
0x6bc1: pop rbx
0x6bc2: pop rbp
0x6bc3: pop r12
0x6bc5: ret 
0x6bd0: lea rax,[rip+0x205a49]
0x6bd7: test rdi,rdi
0x6bda: cmove rdi,rax
0x6bde: mov eax,dword ptr [rdi]
0x6be0: ret 
0x6bf0: lea rax,[rip+0x205a29]
0x6bf7: test rdi,rdi
0x6bfa: cmove rdi,rax
0x6bfe: mov dword ptr [rdi],esi
0x6c00: ret 
0x6c10: lea rax,[rip+0x205a09]
0x6c17: test rdi,rdi
0x6c1a: mov ecx,esi
0x6c1c: cmove rdi,rax
0x6c20: mov eax,esi
0x6c22: and ecx,0x1f
0x6c25: shr al,0x5
0x6c28: movzx eax,al
0x6c2b: lea rdi,[rdi+rax*4+0x8]
0x6c30: mov esi,dword ptr [rdi]
0x6c32: mov eax,esi
0x6c34: shr eax,cl
0x6c36: xor edx,eax
0x6c38: and eax,0x1
0x6c3b: and edx,0x1
0x6c3e: shl edx,cl
0x6c40: xor edx,esi
0x6c42: mov dword ptr [rdi],edx
0x6c44: ret 
0x6c50: lea rax,[rip+0x2059c9]
0x6c57: test rdi,rdi
0x6c5a: cmove rdi,rax
0x6c5e: mov eax,dword ptr [rdi+0x4]
0x6c61: mov dword ptr [rdi+0x4],esi
0x6c64: ret 
0x6c70: lea rax,[rip+0x2059a9]
0x6c77: test rdi,rdi
0x6c7a: cmove rdi,rax
0x6c7e: test rsi,rsi
0x6c81: mov dword ptr [rdi],0xa
0x6c87: je 0x6c97
0x6c89: test rdx,rdx
0x6c8c: je 0x6c97
0x6c8e: mov qword ptr [rdi+0x28],rsi
0x6c92: mov qword ptr [rdi+0x30],rdx
0x6c96: ret 
0x6c97: sub rsp,0x8
0x6c9b: call 0x1b60
0x6ca0: push r15
0x6ca2: push r14
0x6ca4: lea rax,[rip+0x205975]
0x6cab: push r13
0x6cad: push r12
0x6caf: mov r13,rdi
0x6cb2: push rbp
0x6cb3: push rbx
0x6cb4: mov rbx,r8
0x6cb7: mov r14,rsi
0x6cba: mov r15,rdx
0x6cbd: sub rsp,0x18
0x6cc1: test r8,r8
0x6cc4: cmove rbx,rax
0x6cc8: mov qword ptr [rsp+0x8],rcx
0x6ccd: call 0x1b70
0x6cd2: mov r12d,dword ptr [rax]
0x6cd5: mov rbp,rax
0x6cd8: lea rax,[rbx+0x8]
0x6cdc: sub rsp,0x8
0x6ce0: mov r9d,dword ptr [rbx+0x4]
0x6ce4: push qword ptr [rbx+0x30]
0x6ce7: mov r8d,dword ptr [rbx]
0x6cea: push qword ptr [rbx+0x28]
0x6ced: mov rdx,r15
0x6cf0: push rax
0x6cf1: mov rcx,qword ptr [rsp+0x28]
0x6cf6: mov rsi,r14
0x6cf9: mov rdi,r13
0x6cfc: call 0x57a0
0x6d01: mov dword ptr [rbp],r12d
0x6d05: add rsp,0x38
0x6d09: pop rbx
0x6d0a: pop rbp
0x6d0b: pop r12
0x6d0d: pop r13
0x6d0f: pop r14
0x6d11: pop r15
0x6d13: ret 
0x6d20: push r15
0x6d22: push r14
0x6d24: lea rax,[rip+0x2058f5]
0x6d2b: push r13
0x6d2d: push r12
0x6d2f: mov r12,rdx
0x6d32: push rbp
0x6d33: push rbx
0x6d34: mov rbx,rcx
0x6d37: mov r14,rdi
0x6d3a: mov r15,rsi
0x6d3d: sub rsp,0x38
0x6d41: test rcx,rcx
0x6d44: cmove rbx,rax
0x6d48: xor ebp,ebp
0x6d4a: call 0x1b70
0x6d4f: test r12,r12
0x6d52: mov r13,rax
0x6d55: mov eax,dword ptr [rax]
0x6d57: sete bpl
0x6d5b: or ebp,dword ptr [rbx+0x4]
0x6d5e: lea r10,[rbx+0x8]
0x6d62: sub rsp,0x8
0x6d66: mov r8d,dword ptr [rbx]
0x6d69: mov rcx,r15
0x6d6c: mov dword ptr [rsp+0x14],eax
0x6d70: push qword ptr [rbx+0x30]
0x6d73: mov rdx,r14
0x6d76: push qword ptr [rbx+0x28]
0x6d79: push r10
0x6d7b: xor esi,esi
0x6d7d: mov r9d,ebp
0x6d80: xor edi,edi
0x6d82: mov qword ptr [rsp+0x40],r10
0x6d87: call 0x57a0
0x6d8c: lea rsi,[rax+0x1]
0x6d90: mov qword ptr [rsp+0x48],rax
0x6d95: add rsp,0x20
0x6d99: mov rdi,rsi
0x6d9c: mov qword ptr [rsp+0x18],rsi
0x6da1: call 0x7a60
0x6da6: mov qword ptr [rsp+0x10],rax
0x6dab: sub rsp,0x8
0x6daf: push qword ptr [rbx+0x30]
0x6db2: push qword ptr [rbx+0x28]
0x6db5: mov r10,qword ptr [rsp+0x38]
0x6dba: mov r9d,ebp
0x6dbd: mov r8d,dword ptr [rbx]
0x6dc0: mov rcx,r15
0x6dc3: mov rdx,r14
0x6dc6: mov rdi,rax
0x6dc9: push r10
0x6dcb: mov rsi,qword ptr [rsp+0x38]
0x6dd0: call 0x57a0
0x6dd5: mov eax,dword ptr [rsp+0x2c]
0x6dd9: add rsp,0x20
0x6ddd: test r12,r12
0x6de0: mov dword ptr [r13],eax
0x6de4: je 0x6def
0x6de6: mov r11,qword ptr [rsp+0x28]
0x6deb: mov qword ptr [r12],r11
0x6def: mov rax,qword ptr [rsp+0x10]
0x6df4: add rsp,0x38
0x6df8: pop rbx
0x6df9: pop rbp
0x6dfa: pop r12
0x6dfc: pop r13
0x6dfe: pop r14
0x6e00: pop r15
0x6e02: ret 
0x6e10: mov rcx,rdx
0x6e13: xor edx,edx
0x6e15: jmp 0x6d20
0x6e20: mov eax,dword ptr [rip+0x205252]
0x6e26: push r12
0x6e28: mov r12,qword ptr [rip+0x205251]
0x6e2f: push rbp
0x6e30: push rbx
0x6e31: cmp eax,0x1
0x6e34: jle 0x6e61
0x6e36: sub eax,0x2
0x6e39: lea rbx,[r12+0x18]
0x6e3e: shl rax,0x4
0x6e42: lea rbp,[r12+rax+0x28]
0x6e47: nop word ptr [rax+rax]
0x6e50: mov rdi,qword ptr [rbx]
0x6e53: add rbx,0x10
0x6e57: call 0x1b50
0x6e5c: cmp rbx,rbp
0x6e5f: jne 0x6e50
0x6e61: mov rdi,qword ptr [r12+0x8]
0x6e66: lea rbx,[rip+0x2056b3]
0x6e6d: cmp rdi,rbx
0x6e70: je 0x6e89
0x6e72: call 0x1b50
0x6e77: mov qword ptr [rip+0x20520e],0x100
0x6e82: mov qword ptr [rip+0x20520f],rbx
0x6e89: lea rbx,[rip+0x205200]
0x6e90: cmp r12,rbx
0x6e93: je 0x6ea4
0x6e95: mov rdi,r12
0x6e98: call 0x1b50
0x6e9d: mov qword ptr [rip+0x2051dc],rbx
0x6ea4: pop rbx
0x6ea5: mov dword ptr [rip+0x2051c9],0x1
0x6eaf: pop rbp
0x6eb0: pop r12
0x6eb2: ret 
0x6ec0: lea rcx,[rip+0x205759]
0x6ec7: mov rdx,-0x1
0x6ece: jmp 0x69e0
0x6ee0: lea rcx,[rip+0x205739]
0x6ee7: jmp 0x69e0
0x6ef0: lea rcx,[rip+0x205729]
0x6ef7: mov rsi,rdi
0x6efa: mov rdx,-0x1
0x6f01: xor edi,edi
0x6f03: jmp 0x69e0
0x6f10: lea rcx,[rip+0x205709]
0x6f17: mov rdx,rsi
0x6f1a: mov rsi,rdi
0x6f1d: xor edi,edi
0x6f1f: jmp 0x69e0
0x6f9f: mov rcx,qword ptr [rsp+0x38]
0x6fa4: xor rcx,qword ptr fs:0x28
0x6fad: jne 0x6fb9
0x6faf: add rsp,0x48
0x6fb3: ret 
0x6fb4: call 0x1b60
0x6fb9: call 0x1c70
0x6fbe: nop 
0x6fc0: sub rsp,0x48
0x6fc4: mov rax,rdx
0x6fc7: mov rdx,rcx
0x6fca: mov rcx,qword ptr fs:0x28
0x6fd3: mov qword ptr [rsp+0x38],rcx
0x6fd8: xor ecx,ecx
0x6fda: cmp esi,0xa
0x6fdd: je 0x7040
0x6fdf: mov dword ptr [rsp],esi
0x6fe2: mov rcx,rsp
0x6fe5: mov rsi,rax
0x6fe8: mov qword ptr [rsp+0x4],0x0
0x6ff1: mov qword ptr [rsp+0xc],0x0
0x6ffa: mov qword ptr [rsp+0x14],0x0
0x7003: mov qword ptr [rsp+0x1c],0x0
0x700c: mov qword ptr [rsp+0x24],0x0
0x7015: mov qword ptr [rsp+0x2c],0x0
0x701e: mov dword ptr [rsp+0x34],0x0
0x7026: call 0x69e0
0x702b: mov rdx,qword ptr [rsp+0x38]
0x7030: xor rdx,qword ptr fs:0x28
0x7039: jne 0x7045
0x703b: add rsp,0x48
0x703f: ret 
0x7040: call 0x1b60
0x7045: call 0x1c70
0x704a: nop word ptr [rax+rax]
0x7060: mov rcx,rdx
0x7063: mov rdx,rsi
0x7066: mov esi,edi
0x7068: xor edi,edi
0x706a: jmp 0x6fc0
0x7070: sub rsp,0x48
0x7074: mov ecx,edx
0x7076: mov rax,qword ptr fs:0x28
0x707f: mov qword ptr [rsp+0x38],rax
0x7084: xor eax,eax
0x7086: mov rax,qword ptr [rip+0x2055c3]
0x708d: mov r8,rsp
0x7090: and ecx,0x1f
0x7093: movdqa xmm0,[rip+0x205585]
0x709b: mov qword ptr [rsp+0x30],rax
0x70a0: mov eax,edx
0x70a2: movaps [rsp],xmm0
0x70a6: shr al,0x5
0x70a9: movzx eax,al
0x70ac: lea r9,[r8+rax*4+0x8]
0x70b1: movdqa xmm0,[rip+0x205577]
0x70b9: movaps [rsp+0x10],xmm0
0x70be: movdqa xmm0,[rip+0x20557a]
0x70c6: movaps [rsp+0x20],xmm0
0x70cb: mov edx,dword ptr [r9]
0x70ce: mov eax,edx
0x70d0: shr eax,cl
0x70d2: not eax
0x70d4: and eax,0x1
0x70d7: shl eax,cl
0x70d9: mov rcx,r8
0x70dc: xor eax,edx
0x70de: mov rdx,rsi
0x70e1: mov rsi,rdi
0x70e4: mov dword ptr [r9],eax
0x70e7: xor edi,edi
0x70e9: call 0x69e0
0x70ee: mov rsi,qword ptr [rsp+0x38]
0x70f3: xor rsi,qword ptr fs:0x28
0x70fc: jne 0x7103
0x70fe: add rsp,0x48
0x7102: ret 
0x7103: call 0x1c70
0x7108: nop dword ptr [rax+rax]
0x7110: movsx edx,sil
0x7114: mov rsi,-0x1
0x711b: jmp 0x7070
0x7120: mov edx,0x3a
0x7125: mov rsi,-0x1
0x712c: jmp 0x7070
0x7140: mov edx,0x3a
0x7145: jmp 0x7070
0x71bf: mov rcx,qword ptr [rsp+0x38]
0x71c4: xor rcx,qword ptr fs:0x28
0x71cd: jne 0x71d9
0x71cf: add rsp,0x48
0x71d3: ret 
0x71d4: call 0x1b60
0x71d9: call 0x1c70
0x71de: nop 
0x71e0: sub rsp,0x48
0x71e4: mov r9,rcx
0x71e7: mov rcx,qword ptr [rip+0x205462]
0x71ee: movdqa xmm0,[rip+0x20542a]
0x71f6: mov rax,qword ptr fs:0x28
0x71ff: mov qword ptr [rsp+0x38],rax
0x7204: xor eax,eax
0x7206: movaps [rsp],xmm0
0x720a: test rsi,rsi
0x720d: mov qword ptr [rsp+0x30],rcx
0x7212: mov dword ptr [rsp],0xa
0x7219: movdqa xmm0,[rip+0x20540f]
0x7221: movaps [rsp+0x10],xmm0
0x7226: movdqa xmm0,[rip+0x205412]
0x722e: movaps [rsp+0x20],xmm0
0x7233: je 0x7267
0x7235: test rdx,rdx
0x7238: je 0x7267
0x723a: mov qword ptr [rsp+0x28],rsi
0x723f: mov qword ptr [rsp+0x30],rdx
0x7244: mov rcx,rsp
0x7247: mov rdx,r8
0x724a: mov rsi,r9
0x724d: call 0x69e0
0x7252: mov rdi,qword ptr [rsp+0x38]
0x7257: xor rdi,qword ptr fs:0x28
0x7260: jne 0x726c
0x7262: add rsp,0x48
0x7266: ret 
0x7267: call 0x1b60
0x726c: call 0x1c70
0x7271: nop dword ptr [rax+rax]
0x7276: nop word ptr cs:[rax+rax]
0x7280: mov r8,-0x1
0x7287: jmp 0x71e0
0x7290: mov rcx,rdx
0x7293: mov r8,-0x1
0x729a: mov rdx,rsi
0x729d: mov rsi,rdi
0x72a0: xor edi,edi
0x72a2: jmp 0x71e0
0x72b0: mov r8,rcx
0x72b3: mov rcx,rdx
0x72b6: mov rdx,rsi
0x72b9: mov rsi,rdi
0x72bc: xor edi,edi
0x72be: jmp 0x71e0
0x72d0: lea rcx,[rip+0x204d69]
0x72d7: jmp 0x69e0
0x72e0: lea rcx,[rip+0x204d59]
0x72e7: mov rdx,rsi
0x72ea: mov rsi,rdi
0x72ed: xor edi,edi
0x72ef: jmp 0x69e0
0x7300: lea rcx,[rip+0x204d39]
0x7307: mov rdx,-0x1
0x730e: jmp 0x69e0
0x7578: mov r8,rcx
0x757b: mov rcx,rdx
0x757e: lea rdx,[rip+0x2b6f]
0x7585: mov esi,0x1
0x758a: xor eax,eax
0x758c: call 0x1f40
0x7591: jmp 0x747c
0x778d: push r12
0x778f: push r15
0x7791: push r14
0x7793: mov r8,qword ptr [rsp+0x20]
0x7798: mov rcx,rbx
0x779b: mov rdx,rax
0x779e: mov rdi,rbp
0x77a1: mov esi,0x1
0x77a6: xor eax,eax
0x77a8: call 0x1f40
0x77ad: add rsp,0x20
0x77b1: add rsp,0x28
0x77b5: pop rbx
0x77b6: pop rbp
0x77b7: pop r12
0x77b9: pop r13
0x77bb: pop r14
0x77bd: pop r15
0x77bf: ret 
0x77f9: push r12
0x77fb: push r15
0x77fd: push r14
0x77ff: mov r9,qword ptr [rsp+0x28]
0x7804: jmp 0x7793
0x7860: xor r9d,r9d
0x7863: cmp qword ptr [r8],0x0
0x7867: je 0x787b
0x7869: nop dword ptr [rax]
0x7870: add r9,0x1
0x7874: cmp qword ptr [r8+r9*8],0x0
0x7879: jne 0x7870
0x787b: jmp 0x7440
0x7880: sub rsp,0x68
0x7884: mov r10,r8
0x7887: xor r9d,r9d
0x788a: mov rax,qword ptr fs:0x28
0x7893: mov qword ptr [rsp+0x58],rax
0x7898: xor eax,eax
0x789a: mov r8,rsp
0x789d: nop dword ptr [rax]
0x78a0: mov eax,dword ptr [r10]
0x78a3: cmp eax,0x2f
0x78a6: ja 0x78ea
0x78a8: mov r11d,eax
0x78ab: add r11,qword ptr [r10+0x10]
0x78af: add eax,0x8
0x78b2: mov dword ptr [r10],eax
0x78b5: mov rax,qword ptr [r11]
0x78b8: test rax,rax
0x78bb: mov qword ptr [r8+r9*8],rax
0x78bf: je 0x78cb
0x78c1: add r9,0x1
0x78c5: cmp r9,0xa
0x78c9: jne 0x78a0
0x78cb: call 0x7440
0x78d0: mov rax,qword ptr [rsp+0x58]
0x78d5: xor rax,qword ptr fs:0x28
0x78de: jne 0x78e5
0x78e0: add rsp,0x68
0x78e4: ret 
0x78e5: call 0x1c70
0x78ea: mov r11,qword ptr [r10+0x8]
0x78ee: lea rax,[r11+0x8]
0x78f2: mov qword ptr [r10+0x8],rax
0x78f6: jmp 0x78b5
0x79c0: call 0x1c70
0x79cc: mov rax,rbx
0x79cf: add rbx,0x8
0x79d3: jmp 0x7986
0x79e0: push rbx
0x79e1: lea rsi,[rip+0x275a]
0x79e8: mov edx,0x5
0x79ed: xor edi,edi
0x79ef: call 0x1c40
0x79f4: lea rdx,[rip+0x275c]
0x79fb: mov rsi,rax
0x79fe: mov edi,0x1
0x7a03: xor eax,eax
0x7a05: call 0x1e80
0x7a0a: lea rsi,[rip+0x275c]
0x7a11: mov edx,0x5
0x7a16: xor edi,edi
0x7a18: call 0x1c40
0x7a1d: lea rcx,[rip+0x1e84]
0x7a24: lea rdx,[rip+0x1256]
0x7a2b: mov rsi,rax
0x7a2e: mov edi,0x1
0x7a33: xor eax,eax
0x7a35: call 0x1e80
0x7a3a: mov rbx,qword ptr [rip+0x204827]
0x7a41: lea rsi,[rip+0x2958]
0x7a48: xor edi,edi
0x7a4a: mov edx,0x5
0x7a4f: call 0x1c40
0x7a54: mov rsi,rbx
0x7a57: mov rdi,rax
0x7a5a: pop rbx
0x7a5b: jmp 0x1d80
0x7a7a: nop word ptr [rax+rax]
0x7a80: mov rax,rdi
0x7a83: mul rsi
0x7a86: mov rdi,rax
0x7a89: seto al
0x7a8c: test rdi,rdi
0x7a8f: js 0x7a9b
0x7a91: movzx eax,al
0x7a94: test rax,rax
0x7a97: jne 0x7a9b
0x7a99: jmp 0x7a60
0x7a9b: sub rsp,0x8
0x7a9f: call 0x7cb0
0x7aa4: nop 
0x7aa6: nop word ptr cs:[rax+rax]
0x7ab0: jmp 0x7a60
0x7af6: nop word ptr cs:[rax+rax]
0x7b00: mov rax,rsi
0x7b03: mul rdx
0x7b06: mov rsi,rax
0x7b09: seto al
0x7b0c: test rsi,rsi
0x7b0f: js 0x7b1b
0x7b11: movzx eax,al
0x7b14: test rax,rax
0x7b17: jne 0x7b1b
0x7b19: jmp 0x7ac0
0x7b1b: sub rsp,0x8
0x7b1f: call 0x7cb0
0x7b24: nop 
0x7b26: nop word ptr cs:[rax+rax]
0x7b30: test rdi,rdi
0x7b33: mov r9,rdx
0x7b36: mov rcx,qword ptr [rsi]
0x7b39: je 0x7b70
0x7b3b: xor edx,edx
0x7b3d: movabsq rax,0x5555555555555554
0x7b47: div r9
0x7b4a: cmp rax,rcx
0x7b4d: jbe 0x7b8b
0x7b4f: mov rax,rcx
0x7b52: shr rax, 1
0x7b55: lea rcx,[rax+rcx+0x1]
0x7b5a: mov qword ptr [rsi],rcx
0x7b5d: imul rcx,r9
0x7b61: mov rsi,rcx
0x7b64: jmp 0x7ac0
0x7b70: test rcx,rcx
0x7b73: je 0x7b98
0x7b75: mov rax,rcx
0x7b78: mul r9
0x7b7b: seto dl
0x7b7e: test rax,rax
0x7b81: movzx edx,dl
0x7b84: js 0x7b8b
0x7b86: test rdx,rdx
0x7b89: je 0x7b5a
0x7b8b: sub rsp,0x8
0x7b8f: call 0x7cb0
0x7b94: nop dword ptr [rax]
0x7b98: xor edx,edx
0x7b9a: mov eax,0x80
0x7b9f: xor r8d,r8d
0x7ba2: div r9
0x7ba5: test rax,rax
0x7ba8: sete r8b
0x7bac: lea rcx,[r8+rax]
0x7bb0: jmp 0x7b75
0x7bc0: test rdi,rdi
0x7bc3: mov rax,qword ptr [rsi]
0x7bc6: je 0x7bf0
0x7bc8: movabsq rdx,0x5555555555555553
0x7bd2: cmp rax,rdx
0x7bd5: ja 0x7c01
0x7bd7: mov rdx,rax
0x7bda: shr rdx, 1
0x7bdd: lea rax,[rdx+rax+0x1]
0x7be2: mov qword ptr [rsi],rax
0x7be5: mov rsi,rax
0x7be8: jmp 0x7ac0
0x7bf0: test rax,rax
0x7bf3: mov edx,0x80
0x7bf8: cmove rax,rdx
0x7bfc: test rax,rax
0x7bff: jns 0x7be2
0x7c01: sub rsp,0x8
0x7c05: call 0x7cb0
0x7c0a: nop word ptr [rax+rax]
0x7c10: push rbx
0x7c11: mov rbx,rdi
0x7c14: call 0x7a60
0x7c19: mov rdx,rbx
0x7c1c: xor esi,esi
0x7c1e: mov rdi,rax
0x7c21: pop rbx
0x7c22: jmp 0x1d10
0x7c5e: nop 
0x7c60: push rbp
0x7c61: push rbx
0x7c62: mov rbp,rdi
0x7c65: mov rdi,rsi
0x7c68: mov rbx,rsi
0x7c6b: sub rsp,0x8
0x7c6f: call 0x7a60
0x7c74: add rsp,0x8
0x7c78: mov rdx,rbx
0x7c7b: mov rsi,rbp
0x7c7e: pop rbx
0x7c7f: pop rbp
0x7c80: mov rdi,rax
0x7c83: jmp 0x1dd0
0x7c90: push rbx
0x7c91: mov rbx,rdi
0x7c94: call 0x1c60
0x7c99: mov rdi,rbx
0x7c9c: lea rsi,[rax+0x1]
0x7ca0: pop rbx
0x7ca1: jmp 0x7c60
0x7ce0: call 0x1b60
0x7ce5: nop word ptr cs:[rax+rax]
0x7cef: nop 
0x7d62: mov esi,dword ptr [r14]
0x7d65: mov r8,rax
0x7d68: mov eax,0x0
0x7d6d: lea rdx,[rip+0x1076]
0x7d74: mov rcx,r13
0x7d77: cmp esi,0x16
0x7d7a: cmove esi,eax
0x7d7d: test ebx,ebx
0x7d7f: mov eax,0x1
0x7d84: cmove ebx,eax
0x7d87: xor eax,eax
0x7d89: mov edi,ebx
0x7d8b: call 0x1ea0
0x7d90: mov rbp,qword ptr [rsp]
0x7deb: call 0x1c70
0x7ec6: cmp eax,0x22
0x7ec9: mov ebp,0x1
0x7ece: jne 0x7ef8
0x8020: movsxd rdi,edi
0x8023: mov eax,ebp
0x8025: add rcx,rdi
0x8028: or eax,0x2
0x802b: mov qword ptr [r15],rcx
0x802e: cmp byte ptr [rcx],0x0
0x8031: mov qword ptr [r14],rbx
0x8034: cmovne ebp,eax
0x8037: jmp 0x7efd
0x8095: or ebp,r9d
0x8098: jmp 0x8020
0x812c: mov rax,rbx
0x812f: mul rsi
0x8132: mov rbx,rax
0x8135: jo 0x81c4
0x813b: sub r8d,0x1
0x813f: jne 0x812c
0x8141: jmp 0x8095
0x81a0: call 0x1c70
0x81a5: lea rcx,[rip+0x23d4]
0x81ac: lea rsi,[rip+0x22ad]
0x81b3: lea rdi,[rip+0x22c6]
0x81ba: mov edx,0x54
0x81bf: call 0x1cf0
0x81c4: mov r9d,0x1
0x81ca: or rbx,-0x1
0x81ce: jmp 0x813b
0x8240: push r12
0x8242: push rbp
0x8243: push rbx
0x8244: mov rbx,rdi
0x8247: call 0x1de0
0x824c: test eax,eax
0x824e: mov rdi,rbx
0x8251: js 0x82a7
0x8253: call 0x1e30
0x8258: test eax,eax
0x825a: jne 0x8288
0x825c: mov rdi,rbx
0x825f: call 0x82c0
0x8264: test eax,eax
0x8266: je 0x82a4
0x8268: call 0x1b70
0x826d: mov r12d,dword ptr [rax]
0x8270: mov rdi,rbx
0x8273: mov rbp,rax
0x8276: call 0x1c20
0x827b: test r12d,r12d
0x827e: jne 0x82b0
0x8280: pop rbx
0x8281: pop rbp
0x8282: pop r12
0x8284: ret 
0x8288: mov rdi,rbx
0x828b: call 0x1de0
0x8290: xor esi,esi
0x8292: mov edx,0x1
0x8297: mov edi,eax
0x8299: call 0x1ce0
0x829e: cmp rax,-0x1
0x82a2: jne 0x825c
0x82a4: mov rdi,rbx
0x82a7: pop rbx
0x82a8: pop rbp
0x82a9: pop r12
0x82ab: jmp 0x1c20
0x82b0: mov dword ptr [rbp],r12d
0x82b4: mov eax,0xffffffff
0x82b9: jmp 0x8280
0x82c0: test rdi,rdi
0x82c3: push rbx
0x82c4: mov rbx,rdi
0x82c7: je 0x82da
0x82c9: call 0x1e30
0x82ce: test eax,eax
0x82d0: je 0x82da
0x82d2: test dword ptr [rbx],0x100
0x82d8: jne 0x82e8
0x82da: mov rdi,rbx
0x82dd: pop rbx
0x82de: jmp 0x1e00
0x82e8: mov rdi,rbx
0x82eb: mov edx,0x1
0x82f0: xor esi,esi
0x82f2: call 0x8300
0x82f7: mov rdi,rbx
0x82fa: pop rbx
0x82fb: jmp 0x1e00
0x8300: mov rax,qword ptr [rdi+0x8]
0x8304: cmp qword ptr [rdi+0x10],rax
0x8308: je 0x8310
0x830a: jmp 0x1ee0
0x8310: mov rax,qword ptr [rdi+0x20]
0x8314: cmp qword ptr [rdi+0x28],rax
0x8318: jne 0x830a
0x831a: cmp qword ptr [rdi+0x48],0x0
0x831f: jne 0x830a
0x8321: push r12
0x8323: push rbp
0x8324: mov r12d,edx
0x8327: push rbx
0x8328: mov rbp,rsi
0x832b: mov rbx,rdi
0x832e: call 0x1de0
0x8333: mov edx,r12d
0x8336: mov rsi,rbp
0x8339: mov edi,eax
0x833b: call 0x1ce0
0x8340: cmp rax,-0x1
0x8344: je 0x8352
0x8346: and dword ptr [rbx],-0x11
0x8349: mov qword ptr [rbx+0x90],rax
0x8350: xor eax,eax
0x8352: pop rbx
0x8353: pop rbp
0x8354: pop r12
0x8356: ret 
0x8360: push r13
0x8362: push r12
0x8364: mov r13,rsi
0x8367: push rbp
0x8368: push rbx
0x8369: mov rbx,rdi
0x836c: mov r12,rdx
0x836f: sub rsp,0x18
0x8373: mov rax,qword ptr fs:0x28
0x837c: mov qword ptr [rsp+0x8],rax
0x8381: xor eax,eax
0x8383: lea rax,[rsp+0x4]
0x8388: test rdi,rdi
0x838b: cmove rbx,rax
0x838f: mov rdi,rbx
0x8392: call 0x1c90
0x8397: cmp rax,-0x3
0x839b: mov rbp,rax
0x839e: jbe 0x83c0
0x83a0: test r12,r12
0x83a3: je 0x83c0
0x83a5: xor edi,edi
0x83a7: call 0x86e0
0x83ac: test al,al
0x83ae: jne 0x83c0
0x83b0: movzx eax,byte ptr [r13]
0x83b5: mov ebp,0x1
0x83ba: mov dword ptr [rbx],eax
0x83bc: nop dword ptr [rax]
0x83c0: mov rdx,qword ptr [rsp+0x8]
0x83c5: xor rdx,qword ptr fs:0x28
0x83ce: mov rax,rbp
0x83d1: jne 0x83de
0x83d3: add rsp,0x18
0x83d7: pop rbx
0x83d8: pop rbp
0x83d9: pop r12
0x83db: pop r13
0x83dd: ret 
0x83de: call 0x1c70
0x83e3: nop word ptr cs:[rax+rax]
0x83ed: nop dword ptr [rax]
0x83f0: push r13
0x83f2: push r12
0x83f4: mov r13,rsi
0x83f7: push rbp
0x83f8: push rbx
0x83f9: xor ebx,ebx
0x83fb: mov r12,rdi
0x83fe: lea rbp,[rip+0x203c9f]
0x8405: sub rsp,0x18
0x8409: mov rax,qword ptr fs:0x28
0x8412: mov qword ptr [rsp+0x8],rax
0x8417: xor eax,eax
0x8419: movsx eax,byte ptr [rdi]
0x841c: sub eax,0x30
0x841f: cmp eax,0x9
0x8422: ja 0x843c
0x8424: jmp 0x8480
0x8430: add ebx,0x1
0x8433: add rbp,0xc
0x8437: cmp ebx,0x23
0x843a: je 0x84b0
0x843c: mov rsi,r12
0x843f: mov rdi,rbp
0x8442: call 0x1da0
0x8447: test eax,eax
0x8449: jne 0x8430
0x844b: lea rdx,[rbx+rbx*2]
0x844f: lea rax,[rip+0x203c4a]
0x8456: mov eax,dword ptr [rax+rdx*4]
0x8459: mov dword ptr [r13],eax
0x845d: sar eax,0x1f
0x8460: mov rcx,qword ptr [rsp+0x8]
0x8465: xor rcx,qword ptr fs:0x28
0x846e: jne 0x8570
0x8474: add rsp,0x18
0x8478: pop rbx
0x8479: pop rbp
0x847a: pop r12
0x847c: pop r13
0x847e: ret 
0x8480: mov edx,0xa
0x8485: mov rsi,rsp
0x8488: call 0x1dc0
0x848d: mov rdx,qword ptr [rsp]
0x8491: cmp byte ptr [rdx],0x0
0x8494: jne 0x849c
0x8496: cmp rax,0x40
0x849a: jle 0x8459
0x849c: mov dword ptr [r13],0xffffffff
0x84a4: mov eax,0xffffffff
0x84a9: jmp 0x8460
0x84b0: call 0x1f10
0x84b5: mov ebp,eax
0x84b7: call 0x1f50
0x84bc: test ebp,ebp
0x84be: mov ebx,eax
0x84c0: jle 0x84dc
0x84c2: lea rdi,[rip+0x20c2]
0x84c9: mov ecx,0x5
0x84ce: mov rsi,r12
0x84d1: rep cmpsb [rsi],es:[rdi]
0x84d3: seta al
0x84d6: sbb al,0x0
0x84d8: test al,al
0x84da: je 0x8533
0x84dc: test ebx,ebx
0x84de: jle 0x849c
0x84e0: lea rdi,[rip+0x20aa]
0x84e7: mov ecx,0x5
0x84ec: mov rsi,r12
0x84ef: rep cmpsb [rsi],es:[rdi]
0x84f1: seta al
0x84f4: sbb al,0x0
0x84f6: test al,al
0x84f8: jne 0x849c
0x84fa: lea rdi,[r12+0x5]
0x84ff: mov edx,0xa
0x8504: mov rsi,rsp
0x8507: call 0x1dc0
0x850c: mov rdx,qword ptr [rsp]
0x8510: cmp byte ptr [rdx],0x0
0x8513: jne 0x849c
0x8515: sub ebp,ebx
0x8517: movsxd rbp,ebp
0x851a: cmp rax,rbp
0x851d: jl 0x849c
0x8523: test rax,rax
0x8526: jg 0x849c
0x852c: add eax,ebx
0x852e: jmp 0x8459
0x8533: lea rdi,[r12+0x5]
0x8538: mov edx,0xa
0x853d: mov rsi,rsp
0x8540: call 0x1dc0
0x8545: mov rdx,qword ptr [rsp]
0x8549: cmp byte ptr [rdx],0x0
0x854c: jne 0x849c
0x8552: test rax,rax
0x8555: js 0x849c
0x855b: sub ebx,ebp
0x855d: movsxd rdx,ebx
0x8560: cmp rax,rdx
0x8563: jg 0x849c
0x8569: add eax,ebp
0x856b: jmp 0x8459
0x8570: call 0x1c70
0x8575: nop 
0x8576: nop word ptr cs:[rax+rax]
0x8580: push rbp
0x8581: lea rax,[rip+0x203b18]
0x8588: push rbx
0x8589: xor edx,edx
0x858b: mov ebx,edi
0x858d: mov rdi,rsi
0x8590: sub rsp,0x18
0x8594: mov rcx,rax
0x8597: jmp 0x85ac
0x85a0: add edx,0x1
0x85a3: add rcx,0xc
0x85a7: cmp edx,0x23
0x85aa: je 0x85d0
0x85ac: cmp dword ptr [rcx],ebx
0x85ae: jne 0x85a0
0x85b0: lea rdx,[rdx+rdx*2]
0x85b4: lea rsi,[rax+rdx*4+0x4]
0x85b9: call 0x1ba0
0x85be: xor eax,eax
0x85c0: add rsp,0x18
0x85c4: pop rbx
0x85c5: pop rbp
0x85c6: ret 
0x85d0: mov qword ptr [rsp+0x8],rdi
0x85d5: call 0x1f10
0x85da: mov ebp,eax
0x85dc: call 0x1f50
0x85e1: cmp ebp,ebx
0x85e3: jg 0x8651
0x85e5: cmp eax,ebx
0x85e7: jl 0x8651
0x85e9: mov edx,eax
0x85eb: mov rdi,qword ptr [rsp+0x8]
0x85f0: sub edx,ebp
0x85f2: sar edx, 1
0x85f4: add edx,ebp
0x85f6: cmp edx,ebx
0x85f8: jge 0x8640
0x85fa: mov edx,0x58
0x85ff: mov dword ptr [rdi],0x414d5452
0x8605: mov ebp,eax
0x8607: mov word ptr [rdi+0x4],dx
0x860b: mov eax,ebx
0x860d: sub eax,ebp
0x860f: je 0x85c0
0x8611: lea rcx,[rip+0x1f7f]
0x8618: mov r8d,eax
0x861b: add rdi,0x5
0x861f: mov rdx,-0x1
0x8626: mov esi,0x1
0x862b: xor eax,eax
0x862d: call 0x1fc0
0x8632: add rsp,0x18
0x8636: xor eax,eax
0x8638: pop rbx
0x8639: pop rbp
0x863a: ret 
0x8640: mov ecx,0x4e
0x8645: mov dword ptr [rdi],0x494d5452
0x864b: mov word ptr [rdi+0x4],cx
0x864f: jmp 0x860b
0x8651: mov eax,0xffffffff
0x8656: jmp 0x85c0
0x8660: push r12
0x8662: push rbp
0x8663: mov rbp,rdi
0x8666: push rbx
0x8667: call 0x1bb0
0x866c: mov ebx,dword ptr [rbp]
0x866f: mov rdi,rbp
0x8672: mov r12,rax
0x8675: call 0x8240
0x867a: and ebx,0x20
0x867d: test ebx,ebx
0x867f: jne 0x8698
0x8681: test eax,eax
0x8683: je 0x868f
0x8685: test r12,r12
0x8688: mov eax,0xffffffff
0x868d: je 0x86c8
0x868f: pop rbx
0x8690: pop rbp
0x8691: pop r12
0x8693: ret 
0x8698: test eax,eax
0x869a: jne 0x86b8
0x869c: call 0x1b70
0x86a1: mov dword ptr [rax],0x0
0x86a7: mov eax,0xffffffff
0x86ac: pop rbx
0x86ad: pop rbp
0x86ae: pop r12
0x86b0: ret 
0x86b8: pop rbx
0x86b9: mov eax,0xffffffff
0x86be: pop rbp
0x86bf: pop r12
0x86c1: ret 
0x86c8: call 0x1b70
0x86cd: cmp dword ptr [rax],0x9
0x86d0: pop rbx
0x86d1: pop rbp
0x86d2: pop r12
0x86d4: setne al
0x86d7: movzx eax,al
0x86da: neg eax
0x86dc: ret 
0x86e0: sub rsp,0x8
0x86e4: xor esi,esi
0x86e6: call 0x1e70
0x86eb: mov rdx,rax
0x86ee: mov eax,0x1
0x86f3: test rdx,rdx
0x86f6: je 0x8715
0x86f8: lea rdi,[rip+0x1e9c]
0x86ff: mov ecx,0x2
0x8704: mov rsi,rdx
0x8707: rep cmpsb [rsi],es:[rdi]
0x8709: seta cl
0x870c: sbb cl,0x0
0x870f: xor eax,eax
0x8711: test cl,cl
0x8713: jne 0x8720
0x8715: add rsp,0x8
0x8719: ret 
0x8720: lea rdi,[rip+0x1e76]
0x8727: mov ecx,0x6
0x872c: mov rsi,rdx
0x872f: rep cmpsb [rsi],es:[rdi]
0x8731: seta al
0x8734: sbb al,0x0
0x8736: test al,al
0x8738: setne al
0x873b: add rsp,0x8
0x873f: ret 
0x8740: sub rsp,0x8
0x8744: mov edi,0xe
0x8749: call 0x1e10
0x874e: test rax,rax
0x8751: je 0x8770
0x8753: cmp byte ptr [rax],0x0
0x8756: lea rdx,[rip+0x1e46]
0x875d: cmove rax,rdx
0x8761: add rsp,0x8
0x8765: ret 
0x8770: lea rax,[rip+0x1e2c]
0x8777: add rsp,0x8
0x877b: ret 
0x87e1: cmp esi,0x406
0x87e7: jne 0x8830
0x87e9: mov rax,qword ptr [rsp+0x10]
0x87ee: cmp dword ptr [rip+0x203e63],0x0
0x87f5: mov dword ptr [rsp],0x18
0x87fc: mov r12d,dword ptr [rax+0x10]
0x8800: mov edx,r12d
0x8803: js 0x8933
0x8809: xor eax,eax
0x880b: mov esi,0x406
0x8810: call 0x1bd0
0x8815: test eax,eax
0x8817: mov ebx,eax
0x8819: js 0x89a8
0x881f: mov dword ptr [rip+0x203e2f],0x1
0x8829: jmp 0x8870
0x8830: cmp esi,0xb
0x8833: je 0x8860
0x8835: jg 0x8890
0x8837: cmp esi,0x4
0x883a: je 0x8910
0x8840: jg 0x8900
0x8846: cmp esi,0x2
0x8849: je 0x8910
0x884f: jg 0x8860
0x8851: cmp esi,0x1
0x8854: jne 0x88b8
0x8856: nop word ptr cs:[rax+rax]
0x8860: mov edi,ebp
0x8862: xor eax,eax
0x8864: call 0x1bd0
0x8869: mov ebx,eax
0x886b: nop dword ptr [rax+rax]
0x8890: cmp esi,0x407
0x8896: jg 0x88e0
0x8898: cmp esi,0x406
0x889e: jge 0x8910
0x88a0: cmp esi,0x401
0x88a6: je 0x8860
0x88a8: cmp esi,0x402
0x88ae: je 0x8910
0x88b0: cmp esi,0x400
0x88b6: je 0x8910
0x88b8: mov eax,dword ptr [rsp]
0x88bb: cmp eax,0x2f
0x88be: ja 0x89fa
0x88c4: add rax,qword ptr [rsp+0x10]
0x88c9: mov rdx,qword ptr [rax]
0x88cc: mov edi,ebp
0x88ce: xor eax,eax
0x88d0: call 0x1bd0
0x88d5: mov ebx,eax
0x88d7: jmp 0x8870
0x88e0: cmp esi,0x409
0x88e6: je 0x8910
0x88e8: jl 0x8860
0x88ee: cmp esi,0x40a
0x88f4: jne 0x88b8
0x88f6: jmp 0x8860
0x8900: cmp esi,0x9
0x8903: je 0x8860
0x8909: jg 0x8910
0x890b: cmp esi,0x8
0x890e: jne 0x88b8
0x8910: mov eax,dword ptr [rsp]
0x8913: cmp eax,0x2f
0x8916: ja 0x8a04
0x891c: add rax,qword ptr [rsp+0x10]
0x8921: mov edx,dword ptr [rax]
0x8923: mov edi,ebp
0x8925: xor eax,eax
0x8927: call 0x1bd0
0x892c: mov ebx,eax
0x892e: jmp 0x8870
0x8933: xor esi,esi
0x8935: xor eax,eax
0x8937: call 0x1bd0
0x893c: test eax,eax
0x893e: mov ebx,eax
0x8940: js 0x8870
0x8946: cmp dword ptr [rip+0x203d0b],-0x1
0x894d: jne 0x8870
0x8953: xor eax,eax
0x8955: mov esi,0x1
0x895a: mov edi,ebx
0x895c: call 0x1bd0
0x8961: test eax,eax
0x8963: js 0x8981
0x8965: or eax,0x1
0x8968: mov esi,0x2
0x896d: mov edi,ebx
0x896f: mov edx,eax
0x8971: xor eax,eax
0x8973: call 0x1bd0
0x8978: cmp eax,-0x1
0x897b: jne 0x8870
0x8981: call 0x1b70
0x8986: mov r12d,dword ptr [rax]
0x8989: mov rbp,rax
0x898c: mov edi,ebx
0x898e: call 0x1d20
0x8993: mov ebx,0xffffffff
0x8998: mov dword ptr [rbp],r12d
0x899c: jmp 0x8870
0x89a8: call 0x1b70
0x89ad: cmp dword ptr [rax],0x16
0x89b0: jne 0x881f
0x89b6: xor esi,esi
0x89b8: xor eax,eax
0x89ba: mov edx,r12d
0x89bd: mov edi,ebp
0x89bf: call 0x1bd0
0x89c4: test eax,eax
0x89c6: mov ebx,eax
0x89c8: js 0x8870
0x89ce: mov dword ptr [rip+0x203c80],0xffffffff
0x89d8: jmp 0x8953
0x89dd: call 0x1c70
0x89fa: mov rax,qword ptr [rsp+0x8]
0x89ff: jmp 0x88c9
0x8a04: mov rax,qword ptr [rsp+0x8]
0x8a09: jmp 0x8921
0x8a10: push r15
0x8a12: push r14
0x8a14: mov r15,rdx
0x8a17: push r13
0x8a19: push r12
0x8a1b: lea r12,[rip+0x202ece]
0x8a22: push rbp
0x8a23: lea rbp,[rip+0x202ece]
0x8a2a: push rbx
0x8a2b: mov r13d,edi
0x8a2e: mov r14,rsi
0x8a31: sub rbp,r12
0x8a34: sub rsp,0x8
0x8a38: sar rbp,0x3
0x8a3c: call 0x1b08
0x8a41: test rbp,rbp
0x8a44: je 0x8a66
0x8a46: xor ebx,ebx
0x8a48: nop dword ptr [rax+rax]
0x8a50: mov rdx,r15
0x8a53: mov rsi,r14
0x8a56: mov edi,r13d
0x8a59: call qword ptr [r12+rbx*8]
0x8a5d: add rbx,0x1
0x8a61: cmp rbp,rbx
0x8a64: jne 0x8a50
0x8a66: add rsp,0x8
0x8a6a: pop rbx
0x8a6b: pop rbp
0x8a6c: pop r12
0x8a6e: pop r13
0x8a70: pop r14
0x8a72: pop r15
0x8a74: ret 
0x8a80: rep ret 
