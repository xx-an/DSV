0x1546: jmp qword ptr [rip+0x2098d4]
0x1570: jmp qword ptr [rip+0x2098c2]
0x15c0: jmp qword ptr [rip+0x20989a]
0x15d0: jmp qword ptr [rip+0x209892]
0x1600: jmp qword ptr [rip+0x20987a]
0x1670: jmp qword ptr [rip+0x209842]
0x16a0: jmp qword ptr [rip+0x20982a]
0x16e0: jmp qword ptr [rip+0x20980a]
0x1700: jmp qword ptr [rip+0x2097fa]
0x1730: jmp qword ptr [rip+0x2097e2]
0x1760: jmp qword ptr [rip+0x2097ca]
0x1770: jmp qword ptr [rip+0x2097c2]
0x1780: jmp qword ptr [rip+0x2097ba]
0x17f0: jmp qword ptr [rip+0x209782]
0x1860: jmp qword ptr [rip+0x20974a]
0x1870: jmp qword ptr [rip+0x209742]
0x1890: jmp qword ptr [rip+0x209752]
0x1ccf: lea rsi,[rip+0x5e90]
0x1cd6: xor edi,edi
0x1cd8: mov edx,0x5
0x1cdd: mov r12,rax
0x1ce0: add ebx,0x7e
0x1ce3: call 0x1620
0x1ce8: mov esi,dword ptr [rbp]
0x1ceb: mov rdx,rax
0x1cee: xor edi,edi
0x1cf0: xor eax,eax
0x1cf2: mov rcx,r12
0x1cf5: call 0x17d0
0x1cfa: mov eax,ebx
0x1cfc: mov rbx,qword ptr [rsp+0xe8]
0x1d04: xor rbx,qword ptr fs:0x28
0x1d0d: jne 0x1e5f
0x1d13: add rsp,0xf8
0x1d1a: pop rbx
0x1d1b: pop rbp
0x1d1c: pop r12
0x1d1e: pop r13
0x1d20: pop r14
0x1d22: pop r15
0x1d24: ret 
0x1e5f: call 0x1650
0x1e9d: lea rsi,[rip+0x5bea]
0x1ea4: mov edx,0x5
0x1ea9: xor edi,edi
0x1eab: mov rbx,rax
0x1eae: call 0x1620
0x1eb3: mov r8,qword ptr [rsp]
0x1eb7: mov rdx,rax
0x1eba: mov rcx,rbx
0x1ebd: mov edi,0x7d
0x1ec2: xor eax,eax
0x1ec4: mov esi,dword ptr [r8]
0x1ec7: call 0x17d0
0x1eee: lea rsi,[rip+0x62bb]
0x1ef5: mov edx,0x5
0x1efa: xor edi,edi
0x1efc: mov rbx,rax
0x1eff: call 0x1620
0x1f04: mov esi,dword ptr [rbp]
0x1f07: mov rdx,rax
0x1f0a: mov rcx,rbx
0x1f0d: mov edi,0x7d
0x1f12: xor eax,eax
0x1f14: call 0x17d0
0x1f36: lea rsi,[rip+0x5c08]
0x1f3d: mov rbx,rax
0x1f40: mov edx,0x5
0x1f45: xor edi,edi
0x1f47: call 0x1620
0x1f4c: mov rcx,rbx
0x1f4f: mov rdx,rax
0x1f52: xor esi,esi
0x1f54: mov edi,0x7d
0x1f59: xor eax,eax
0x1f5b: call 0x17d0
0x1f6a: lea rsi,[rip+0x623f]
0x1f71: mov edx,0x5
0x1f76: xor edi,edi
0x1f78: mov rbp,rax
0x1f7b: call 0x1620
0x1f80: mov rbx,rax
0x1f83: call 0x15a0
0x1f88: mov esi,dword ptr [rax]
0x1f8a: mov rcx,rbp
0x1f8d: mov rdx,rbx
0x1f90: mov edi,0x7d
0x1f95: xor eax,eax
0x1f97: call 0x17d0
0x1fa1: nop word ptr cs:[rax+rax]
0x1fab: nop dword ptr [rax+rax]
0x1fda: hlt 
0x1fdb: nop dword ptr [rax+rax]
0x1fe0: lea rdi,[rip+0x209099]
0x1fe7: push rbp
0x1fe8: lea rax,[rip+0x209091]
0x1fef: cmp rax,rdi
0x1ff2: mov rbp,rsp
0x1ff5: je 0x2010
0x1ff7: mov rax,qword ptr [rip+0x208fca]
0x1ffe: test rax,rax
0x2001: je 0x2010
0x2003: pop rbp
0x2004: jmp rax
0x2010: pop rbp
0x2011: ret 
0x2020: lea rdi,[rip+0x209059]
0x2027: lea rsi,[rip+0x209052]
0x202e: push rbp
0x202f: sub rsi,rdi
0x2032: mov rbp,rsp
0x2035: sar rsi,0x3
0x2039: mov rax,rsi
0x203c: shr rax,0x3f
0x2040: add rsi,rax
0x2043: sar rsi, 1
0x2046: je 0x2060
0x2048: mov rax,qword ptr [rip+0x208f91]
0x204f: test rax,rax
0x2052: je 0x2060
0x2054: pop rbp
0x2055: jmp rax
0x2060: pop rbp
0x2061: ret 
0x2081: push rbp
0x2082: mov rbp,rsp
0x2085: je 0x2093
0x2087: mov rdi,qword ptr [rip+0x208f7a]
0x208e: call 0x1890
0x2093: call 0x1fe0
0x2098: mov byte ptr [rip+0x209029],0x1
0x209f: pop rbp
0x20a0: ret 
0x20b0: push rbp
0x20b1: mov rbp,rsp
0x20b4: pop rbp
0x20b5: jmp 0x2020
0x24e0: mov qword ptr [rip+0x208c51],rdi
0x24e7: ret 
0x24f0: mov byte ptr [rip+0x208c39],dil
0x24f7: ret 
0x2500: push rbp
0x2501: push rbx
0x2502: sub rsp,0x8
0x2506: mov rdi,qword ptr [rip+0x208b7b]
0x250d: call 0x56b0
0x2512: test eax,eax
0x2514: je 0x252c
0x2516: call 0x15a0
0x251b: cmp byte ptr [rip+0x208c0e],0x0
0x2522: mov rbx,rax
0x2525: je 0x2543
0x2527: cmp dword ptr [rax],0x20
0x252a: jne 0x2543
0x252c: mov rdi,qword ptr [rip+0x208b8d]
0x2533: call 0x56b0
0x2538: test eax,eax
0x253a: jne 0x2582
0x253c: add rsp,0x8
0x2540: pop rbx
0x2541: pop rbp
0x2542: ret 
0x2543: lea rsi,[rip+0x5d0c]
0x254a: xor edi,edi
0x254c: mov edx,0x5
0x2551: call 0x1620
0x2556: mov rdi,qword ptr [rip+0x208bdb]
0x255d: mov rbp,rax
0x2560: test rdi,rdi
0x2563: je 0x258d
0x2565: call 0x4370
0x256a: mov esi,dword ptr [rbx]
0x256c: lea rdx,[rip+0x5cef]
0x2573: mov rcx,rax
0x2576: mov r8,rbp
0x2579: xor edi,edi
0x257b: xor eax,eax
0x257d: call 0x17d0
0x2582: mov edi,dword ptr [rip+0x208a90]
0x2588: call 0x15c0
0x258d: mov esi,dword ptr [rbx]
0x258f: lea rdx,[rip+0x5cd0]
0x2596: mov rcx,rax
0x2599: xor edi,edi
0x259b: xor eax,eax
0x259d: call 0x17d0
0x25a2: jmp 0x2582
0x25c8: nop dword ptr [rax+rax]
0x2758: nop dword ptr [rax+rax]
0x2825: mov qword ptr [r15],rdi
0x28ff: nop 
0x2900: push rbp
0x2901: push rbx
0x2902: mov rbp,rdi
0x2905: mov ebx,esi
0x2907: sub rsp,0x8
0x290b: call 0x5790
0x2910: movzx edx,byte ptr [rax]
0x2913: and edx,-0x21
0x2916: cmp dl,0x55
0x2919: je 0x2990
0x291b: cmp dl,0x47
0x291e: je 0x2940
0x2920: lea rax,[rip+0x599c]
0x2927: lea rdx,[rip+0x5997]
0x292e: cmp ebx,0x9
0x2931: cmovne rax,rdx
0x2935: add rsp,0x8
0x2939: pop rbx
0x293a: pop rbp
0x293b: ret 
0x2940: movzx edx,byte ptr [rax+0x1]
0x2944: and edx,-0x21
0x2947: cmp dl,0x42
0x294a: jne 0x2920
0x294c: cmp byte ptr [rax+0x2],0x31
0x2950: jne 0x2920
0x2952: cmp byte ptr [rax+0x3],0x38
0x2956: jne 0x2920
0x2958: cmp byte ptr [rax+0x4],0x30
0x295c: jne 0x2920
0x295e: cmp byte ptr [rax+0x5],0x33
0x2962: jne 0x2920
0x2964: cmp byte ptr [rax+0x6],0x30
0x2968: jne 0x2920
0x296a: cmp byte ptr [rax+0x7],0x0
0x296e: jne 0x2920
0x2970: cmp byte ptr [rbp],0x60
0x2974: lea rax,[rip+0x5941]
0x297b: lea rdx,[rip+0x593e]
0x2982: cmovne rax,rdx
0x2986: add rsp,0x8
0x298a: pop rbx
0x298b: pop rbp
0x298c: ret 
0x2990: movzx edx,byte ptr [rax+0x1]
0x2994: and edx,-0x21
0x2997: cmp dl,0x54
0x299a: jne 0x2920
0x299c: movzx edx,byte ptr [rax+0x2]
0x29a0: and edx,-0x21
0x29a3: cmp dl,0x46
0x29a6: jne 0x2920
0x29ac: cmp byte ptr [rax+0x3],0x2d
0x29b0: jne 0x2920
0x29b6: cmp byte ptr [rax+0x4],0x38
0x29ba: jne 0x2920
0x29c0: cmp byte ptr [rax+0x5],0x0
0x29c4: jne 0x2920
0x29ca: cmp byte ptr [rbp],0x60
0x29ce: lea rax,[rip+0x58df]
0x29d5: lea rdx,[rip+0x58dc]
0x29dc: cmovne rax,rdx
0x29e0: add rsp,0x8
0x29e4: pop rbx
0x29e5: pop rbp
0x29e6: ret 
0x2ac3: xor r11d,r11d
0x2ac6: mov rax,rbp
0x2ac9: mov r8d,r12d
0x2acc: mov rbp,r11
0x2acf: mov r11,rax
0x2ad2: nop word ptr [rax+rax]
0x2ad8: cmp r11,rbp
0x2adb: setne r12b
0x2adf: cmp r11,-0x1
0x2ae3: jne 0x2af2
0x2ae5: mov rax,qword ptr [rsp+0x10]
0x2aea: cmp byte ptr [rax+rbp],0x0
0x2aee: setne r12b
0x2af2: test r12b,r12b
0x2af5: je 0x3150
0x2afb: cmp dword ptr [rsp+0x8],0x2
0x2b00: mov rdi,qword ptr [rsp+0x10]
0x2b05: lea r9,[rdi+rbp]
0x2b09: setne al
0x2b0c: and al,byte ptr [rsp+0xd]
0x2b10: mov r10d,eax
0x2b13: je 0x2bc0
0x2b19: mov rax,qword ptr [rsp+0x18]
0x2b1e: test rax,rax
0x2b21: je 0x2f50
0x2b27: cmp r11,-0x1
0x2b2b: lea rbx,[rbp+rax]
0x2b30: jne 0x2b60
0x2b32: cmp rax,0x1
0x2b36: jbe 0x2b60
0x2b38: mov byte ptr [rsp+0x38],r8b
0x2b3d: mov byte ptr [rsp+0x30],r10b
0x2b42: mov qword ptr [rsp+0x28],r9
0x2b47: call 0x1640
0x2b4c: movzx r8d,byte ptr [rsp+0x38]
0x2b52: movzx r10d,byte ptr [rsp+0x30]
0x2b58: mov r11,rax
0x2b5b: mov r9,qword ptr [rsp+0x28]
0x2b60: cmp rbx,r11
0x2b63: mov byte ptr [rsp+0x28],r10b
0x2b68: ja 0x3120
0x2b6e: mov rdx,qword ptr [rsp+0x18]
0x2b73: mov rsi,qword ptr [rsp+0x48]
0x2b78: mov rdi,r9
0x2b7b: mov qword ptr [rsp+0x40],r11
0x2b80: mov byte ptr [rsp+0x38],r8b
0x2b85: mov qword ptr [rsp+0x30],r9
0x2b8a: call 0x16e0
0x2b8f: test eax,eax
0x2b91: mov r9,qword ptr [rsp+0x30]
0x2b96: movzx r8d,byte ptr [rsp+0x38]
0x2b9c: mov r11,qword ptr [rsp+0x40]
0x2ba1: jne 0x3120
0x2ba7: cmp byte ptr [rsp+0xf],0x0
0x2bac: movzx r10d,byte ptr [rsp+0x28]
0x2bb2: jne 0x3b35
0x2bb8: nop dword ptr [rax+rax]
0x2bc0: movzx ebx,byte ptr [r9]
0x2bc4: cmp bl,0x7e
0x2bc7: ja 0x2ee8
0x2bcd: lea rcx,[rip+0x5778]
0x2bd4: movzx edx,bl
0x2bd7: movsxd rax,dword ptr [rcx+rdx*4]
0x2bdb: add rax,rcx
0x2bde: jmp rax
0x2c18: cmp byte ptr [rsp+0xd],0x1
0x2c1d: jne 0x2d32
0x2c23: test dl,dl
0x2c25: jne 0x2d32
0x2c2b: mov rsi,qword ptr [rsp+0x20]
0x2c30: test rsi,rsi
0x2c33: je 0x2c49
0x2c35: mov edx,ebx
0x2c37: shr dl,0x5
0x2c3a: movzx edx,dl
0x2c3d: mov edx,dword ptr [rsi+rdx*4]
0x2c40: btl edx,ebx
0x2c43: jb 0x2d93
0x2c49: test r10b,r10b
0x2c4c: jne 0x2d93
0x2c52: xor eax,0x1
0x2c55: add rbp,0x1
0x2c59: and eax,r8d
0x2c5c: test al,al
0x2c5e: je 0x2c80
0x2c60: cmp r13,r15
0x2c63: jbe 0x2c6a
0x2c65: mov byte ptr [r14+r15],0x27
0x2c6a: lea rax,[r15+0x1]
0x2c6e: cmp r13,rax
0x2c71: jbe 0x2c79
0x2c73: mov byte ptr [r14+r15+0x1],0x27
0x2c79: add r15,0x2
0x2c7d: xor r8d,r8d
0x2c80: cmp r15,r13
0x2c83: jae 0x2c89
0x2c85: mov byte ptr [r14+r15],bl
0x2c89: movzx edi,byte ptr [rsp+0xe]
0x2c8e: add r15,0x1
0x2c92: mov eax,0x0
0x2c97: test r12b,r12b
0x2c9a: cmove edi,eax
0x2c9d: mov byte ptr [rsp+0xe],dil
0x2ca2: jmp 0x2ad8
0x2d32: cmp byte ptr [rsp+0xf],0x0
0x2d37: jne 0x2c2b
0x2d3d: jmp 0x2c49
0x2d93: cmp dword ptr [rsp+0x8],0x2
0x2d98: sete dl
0x2d9b: cmp byte ptr [rsp+0xf],0x0
0x2da0: mov eax,edx
0x2da2: jne 0x35f8
0x2da8: mov eax,r8d
0x2dab: xor eax,0x1
0x2dae: and al,dl
0x2db0: je 0x2de1
0x2db2: cmp r13,r15
0x2db5: jbe 0x2dbc
0x2db7: mov byte ptr [r14+r15],0x27
0x2dbc: lea rdx,[r15+0x1]
0x2dc0: cmp r13,rdx
0x2dc3: jbe 0x2dcb
0x2dc5: mov byte ptr [r14+r15+0x1],0x24
0x2dcb: lea rdx,[r15+0x2]
0x2dcf: cmp r13,rdx
0x2dd2: jbe 0x2dda
0x2dd4: mov byte ptr [r14+r15+0x2],0x27
0x2dda: add r15,0x3
0x2dde: mov r8d,eax
0x2de1: cmp r13,r15
0x2de4: jbe 0x2deb
0x2de6: mov byte ptr [r14+r15],0x5c
0x2deb: add r15,0x1
0x2def: add rbp,0x1
0x2df3: jmp 0x2c80
0x2ee0: xor r10d,r10d
0x2ee3: nop dword ptr [rax+rax]
0x2ee8: cmp qword ptr [rsp+0x58],0x1
0x2eee: jne 0x3298
0x2ef4: mov qword ptr [rsp+0x38],r11
0x2ef9: mov byte ptr [rsp+0x30],r8b
0x2efe: mov byte ptr [rsp+0x28],r10b
0x2f03: call 0x1880
0x2f08: mov rcx,qword ptr [rax]
0x2f0b: movzx edx,bl
0x2f0e: movzx r10d,byte ptr [rsp+0x28]
0x2f14: movzx r8d,byte ptr [rsp+0x30]
0x2f1a: mov r11,qword ptr [rsp+0x38]
0x2f1f: mov edi,0x1
0x2f24: movzx eax,word ptr [rcx+rdx*2]
0x2f28: and ax,0x4000
0x2f2c: setne r12b
0x2f30: sete al
0x2f33: and al,byte ptr [rsp+0xd]
0x2f37: test al,al
0x2f39: jne 0x38d1
0x2f3f: cmp dword ptr [rsp+0x8],0x2
0x2f44: sete dl
0x2f47: jmp 0x2c18
0x2f50: movzx ebx,byte ptr [r9]
0x2f54: cmp bl,0x7e
0x2f57: ja 0x2ee0
0x2f59: lea rcx,[rip+0x55e8]
0x2f60: movzx edx,bl
0x2f63: movsxd rax,dword ptr [rcx+rdx*4]
0x2f67: add rax,rcx
0x2f6a: jmp rax
0x3120: xor r10d,r10d
0x3123: jmp 0x2bc0
0x3150: cmp dword ptr [rsp+0x8],0x2
0x3155: movzx ebx,byte ptr [rsp+0xf]
0x315a: mov r12d,r8d
0x315d: mov rbp,r11
0x3160: sete dl
0x3163: mov eax,ebx
0x3165: test r15,r15
0x3168: sete cl
0x316b: and eax,edx
0x316d: and al,cl
0x316f: jne 0x3bd6
0x3175: mov eax,ebx
0x3177: xor eax,0x1
0x317a: and dl,al
0x317c: je 0x3aec
0x3182: cmp byte ptr [rsp+0x7c],0x0
0x3187: je 0x3aea
0x318d: cmp byte ptr [rsp+0xe],0x0
0x3192: jne 0x3b8d
0x3198: test r13,r13
0x319b: sete al
0x319e: cmp qword ptr [rsp+0x50],0x0
0x31a4: setne dl
0x31a7: and al,dl
0x31a9: je 0x3bcc
0x31af: mov r13,qword ptr [rsp+0x50]
0x31b4: lea rbx,[rip+0x510a]
0x31bb: mov byte ptr [r14],0x27
0x31bf: mov dword ptr [rsp+0x8],0x2
0x31c7: mov r15d,0x1
0x31cd: mov qword ptr [rsp+0x18],0x1
0x31d6: mov byte ptr [rsp+0xf],0x0
0x31db: mov qword ptr [rsp+0x48],rbx
0x31e0: mov byte ptr [rsp+0x7c],al
0x31e4: jmp 0x2ac3
0x3298: lea rax,[rsp+0xa0]
0x32a0: cmp r11,-0x1
0x32a4: mov qword ptr [rsp+0xa0],0x0
0x32b0: mov qword ptr [rsp+0x28],rax
0x32b5: jne 0x32e4
0x32b7: mov rdi,qword ptr [rsp+0x10]
0x32bc: mov byte ptr [rsp+0x40],r8b
0x32c1: mov byte ptr [rsp+0x38],r10b
0x32c6: mov qword ptr [rsp+0x30],r9
0x32cb: call 0x1640
0x32d0: movzx r8d,byte ptr [rsp+0x40]
0x32d6: movzx r10d,byte ptr [rsp+0x38]
0x32dc: mov r11,rax
0x32df: mov r9,qword ptr [rsp+0x30]
0x32e4: lea rax,[rsp+0x9c]
0x32ec: xor ecx,ecx
0x32ee: mov byte ptr [rsp+0x7e],bl
0x32f2: mov byte ptr [rsp+0x7d],r8b
0x32f7: mov rbx,rcx
0x32fa: mov qword ptr [rsp+0x88],r9
0x3302: mov qword ptr [rsp+0x38],rax
0x3307: mov byte ptr [rsp+0x7f],r10b
0x330c: mov qword ptr [rsp+0x80],r15
0x3314: mov qword ptr [rsp+0x40],r14
0x3319: mov qword ptr [rsp+0x70],r13
0x331e: mov qword ptr [rsp+0x30],r11
0x3323: mov rax,qword ptr [rsp+0x10]
0x3328: lea r14,[rbp+rbx]
0x332d: mov rdx,qword ptr [rsp+0x30]
0x3332: mov rcx,qword ptr [rsp+0x28]
0x3337: mov rdi,qword ptr [rsp+0x38]
0x333c: lea r13,[rax+r14]
0x3340: sub rdx,r14
0x3343: mov rsi,r13
0x3346: call 0x5350
0x334b: test rax,rax
0x334e: mov r15,rax
0x3351: je 0x33a1
0x3353: cmp rax,-0x1
0x3357: je 0x3975
0x335d: cmp rax,-0x2
0x3361: je 0x3901
0x3367: cmp dword ptr [rsp+0x8],0x2
0x336c: sete al
0x336f: and al,byte ptr [rsp+0xf]
0x3373: jne 0x3510
0x3379: mov edi,dword ptr [rsp+0x9c]
0x3380: call 0x1870
0x3385: mov rdi,qword ptr [rsp+0x28]
0x338a: test eax,eax
0x338c: mov eax,0x0
0x3391: cmove r12d,eax
0x3395: add rbx,r15
0x3398: call 0x1860
0x339d: test eax,eax
0x339f: je 0x3323
0x33a1: mov edx,r12d
0x33a4: mov rdi,rbx
0x33a7: movzx r8d,byte ptr [rsp+0x7d]
0x33ad: xor edx,0x1
0x33b0: movzx ebx,byte ptr [rsp+0x7e]
0x33b5: movzx r10d,byte ptr [rsp+0x7f]
0x33bb: and dl,byte ptr [rsp+0xd]
0x33bf: mov r15,qword ptr [rsp+0x80]
0x33c7: mov r14,qword ptr [rsp+0x40]
0x33cc: mov r13,qword ptr [rsp+0x70]
0x33d1: mov r11,qword ptr [rsp+0x30]
0x33d6: cmp rdi,0x1
0x33da: jbe 0x39db
0x33e0: mov rcx,rdi
0x33e3: xor esi,esi
0x33e5: movzx r9d,byte ptr [rsp+0xf]
0x33eb: add rcx,rbp
0x33ee: mov rdi,qword ptr [rsp+0x10]
0x33f3: jmp 0x34ae
0x3400: cmp dword ptr [rsp+0x8],0x2
0x3405: sete al
0x3408: test r9b,r9b
0x340b: jne 0x38c0
0x3411: mov esi,r8d
0x3414: xor esi,0x1
0x3417: and al,sil
0x341a: je 0x344b
0x341c: cmp r13,r15
0x341f: jbe 0x3426
0x3421: mov byte ptr [r14+r15],0x27
0x3426: lea rsi,[r15+0x1]
0x342a: cmp r13,rsi
0x342d: jbe 0x3435
0x342f: mov byte ptr [r14+r15+0x1],0x24
0x3435: lea rsi,[r15+0x2]
0x3439: cmp r13,rsi
0x343c: jbe 0x3444
0x343e: mov byte ptr [r14+r15+0x2],0x27
0x3444: add r15,0x3
0x3448: mov r8d,eax
0x344b: cmp r13,r15
0x344e: jbe 0x3455
0x3450: mov byte ptr [r14+r15],0x5c
0x3455: lea rax,[r15+0x1]
0x3459: cmp r13,rax
0x345c: jbe 0x346b
0x345e: mov eax,ebx
0x3460: shr al,0x6
0x3463: add eax,0x30
0x3466: mov byte ptr [r14+r15+0x1],al
0x346b: lea rax,[r15+0x2]
0x346f: cmp r13,rax
0x3472: jbe 0x3484
0x3474: mov eax,ebx
0x3476: shr al,0x3
0x3479: and eax,0x7
0x347c: add eax,0x30
0x347f: mov byte ptr [r14+r15+0x2],al
0x3484: and ebx,0x7
0x3487: add rbp,0x1
0x348b: add r15,0x3
0x348f: add ebx,0x30
0x3492: cmp rbp,rcx
0x3495: jae 0x2c80
0x349b: mov esi,edx
0x349d: cmp r13,r15
0x34a0: jbe 0x34a6
0x34a2: mov byte ptr [r14+r15],bl
0x34a6: movzx ebx,byte ptr [rdi+rbp]
0x34aa: add r15,0x1
0x34ae: test dl,dl
0x34b0: jne 0x3400
0x34b6: mov eax,esi
0x34b8: xor eax,0x1
0x34bb: and eax,r8d
0x34be: test r10b,r10b
0x34c1: je 0x34d1
0x34c3: cmp r13,r15
0x34c6: jbe 0x34cd
0x34c8: mov byte ptr [r14+r15],0x5c
0x34cd: add r15,0x1
0x34d1: add rbp,0x1
0x34d5: cmp rbp,rcx
0x34d8: jae 0x2c5c
0x34de: test al,al
0x34e0: je 0x38de
0x34e6: cmp r13,r15
0x34e9: jbe 0x34f0
0x34eb: mov byte ptr [r14+r15],0x27
0x34f0: lea rax,[r15+0x1]
0x34f4: cmp r13,rax
0x34f7: jbe 0x34ff
0x34f9: mov byte ptr [r14+r15+0x1],0x27
0x34ff: add r15,0x2
0x3503: xor r10d,r10d
0x3506: xor r8d,r8d
0x3509: jmp 0x349d
0x3510: cmp r15,0x1
0x3514: je 0x3379
0x351a: mov rdi,qword ptr [rsp+0x10]
0x351f: lea rcx,[rdi+r15]
0x3523: lea rdx,[rdi+r14+0x1]
0x3528: lea r8,[rcx+r14]
0x352c: jmp 0x353d
0x3530: add rdx,0x1
0x3534: cmp r8,rdx
0x3537: je 0x3379
0x353d: movzx ecx,byte ptr [rdx]
0x3540: sub ecx,0x5b
0x3543: cmp cl,0x21
0x3546: ja 0x3530
0x3548: mov esi,0x1
0x354d: shl rsi,cl
0x3550: mov rcx,rsi
0x3553: movabsq rsi,0x20000002b
0x355d: test rcx,rsi
0x3560: je 0x3530
0x3562: mov r14,qword ptr [rsp+0x40]
0x3567: mov r13,qword ptr [rsp+0x70]
0x356c: mov rbp,qword ptr [rsp+0x30]
0x3571: mov dword ptr [rsp+0x8],0x2
0x3579: cmp byte ptr [rsp+0xd],0x0
0x357e: je 0x3590
0x3580: test al,al
0x3582: mov eax,0x4
0x3587: cmove eax,dword ptr [rsp+0x8]
0x358c: mov dword ptr [rsp+0x8],eax
0x3590: sub rsp,0x8
0x3594: mov rcx,rbp
0x3597: mov rsi,r13
0x359a: push qword ptr [rsp+0x68]
0x359e: push qword ptr [rsp+0x78]
0x35a2: mov rdi,r14
0x35a5: push 0x0
0x35a7: mov r9d,dword ptr [rsp+0x98]
0x35af: mov r8d,dword ptr [rsp+0x28]
0x35b4: mov rdx,qword ptr [rsp+0x30]
0x35b9: and r9d,-0x3
0x35bd: call 0x29f0
0x35c2: add rsp,0x20
0x35c6: mov r15,rax
0x35c9: mov rbx,qword ptr [rsp+0xa8]
0x35d1: xor rbx,qword ptr fs:0x28
0x35da: mov rax,r15
0x35dd: jne 0x3be3
0x35e3: add rsp,0xb8
0x35ea: pop rbx
0x35eb: pop rbp
0x35ec: pop r12
0x35ee: pop r13
0x35f0: pop r14
0x35f2: pop r15
0x35f4: ret 
0x35f8: mov rbp,r11
0x35fb: jmp 0x3579
0x3661: test r13,r13
0x3664: jne 0x3bfa
0x366a: lea rax,[rip+0x4c54]
0x3671: mov qword ptr [rsp+0x50],0x0
0x367a: mov byte ptr [rsp+0xe],0x1
0x367f: mov byte ptr [rsp+0x7c],0x0
0x3684: xor r12d,r12d
0x3687: mov byte ptr [rsp+0xf],0x0
0x368c: mov qword ptr [rsp+0x18],0x1
0x3695: mov qword ptr [rsp+0x48],rax
0x369a: mov r15d,0x1
0x36a0: mov dword ptr [rsp+0x8],0x2
0x36a8: jmp 0x2ac3
0x38c0: movzx ebx,byte ptr [rsp+0xf]
0x38c5: mov rbp,r11
0x38c8: mov byte ptr [rsp+0xd],bl
0x38cc: jmp 0x3579
0x38d1: movzx edx,byte ptr [rsp+0xd]
0x38d6: xor r12d,r12d
0x38d9: jmp 0x33e0
0x38de: xor r10d,r10d
0x38e1: jmp 0x349d
0x3901: mov r11,qword ptr [rsp+0x30]
0x3906: mov rsi,r14
0x3909: mov rcx,r13
0x390c: mov rax,rbx
0x390f: mov rdi,rbx
0x3912: movzx r8d,byte ptr [rsp+0x7d]
0x3918: movzx ebx,byte ptr [rsp+0x7e]
0x391d: mov r9,qword ptr [rsp+0x88]
0x3925: cmp rsi,r11
0x3928: movzx r10d,byte ptr [rsp+0x7f]
0x392e: mov r15,qword ptr [rsp+0x80]
0x3936: mov r14,qword ptr [rsp+0x40]
0x393b: mov r13,qword ptr [rsp+0x70]
0x3940: jae 0x3968
0x3942: cmp byte ptr [rcx],0x0
0x3945: jne 0x3957
0x3947: jmp 0x3968
0x3950: cmp byte ptr [r9+rax],0x0
0x3955: je 0x3965
0x3957: add rax,0x1
0x395b: lea rdx,[rbp+rax]
0x3960: cmp r11,rdx
0x3963: ja 0x3950
0x3965: mov rdi,rax
0x3968: movzx edx,byte ptr [rsp+0xd]
0x396d: xor r12d,r12d
0x3970: jmp 0x33d6
0x3975: mov rdi,rbx
0x3978: movzx r8d,byte ptr [rsp+0x7d]
0x397e: movzx ebx,byte ptr [rsp+0x7e]
0x3983: movzx r10d,byte ptr [rsp+0x7f]
0x3989: mov r15,qword ptr [rsp+0x80]
0x3991: xor r12d,r12d
0x3994: mov r14,qword ptr [rsp+0x40]
0x3999: mov r13,qword ptr [rsp+0x70]
0x399e: mov r11,qword ptr [rsp+0x30]
0x39a3: movzx edx,byte ptr [rsp+0xd]
0x39a8: jmp 0x33d6
0x39db: mov eax,edx
0x39dd: jmp 0x2f37
0x3aea: mov eax,edx
0x3aec: mov rbx,qword ptr [rsp+0x48]
0x3af1: test rbx,rbx
0x3af4: je 0x3b22
0x3af6: test al,al
0x3af8: je 0x3b22
0x3afa: movzx ecx,byte ptr [rbx]
0x3afd: mov rax,rbx
0x3b00: test cl,cl
0x3b02: je 0x3b22
0x3b04: mov rdx,r15
0x3b07: sub rax,r15
0x3b0a: cmp r13,rdx
0x3b0d: jbe 0x3b13
0x3b0f: mov byte ptr [r14+rdx],cl
0x3b13: add rdx,0x1
0x3b17: movzx ecx,byte ptr [rax+rdx]
0x3b1b: test cl,cl
0x3b1d: jne 0x3b0a
0x3b1f: mov r15,rdx
0x3b22: cmp r13,r15
0x3b25: jbe 0x35c9
0x3b2b: mov byte ptr [r14+r15],0x0
0x3b30: jmp 0x35c9
0x3b35: cmp dword ptr [rsp+0x8],0x2
0x3b3a: movzx ebx,byte ptr [rsp+0xf]
0x3b3f: mov rbp,r11
0x3b42: sete al
0x3b45: mov byte ptr [rsp+0xd],bl
0x3b49: jmp 0x3579
0x3b8d: sub rsp,0x8
0x3b91: mov r8d,0x5
0x3b97: mov rcx,r11
0x3b9a: push qword ptr [rsp+0x68]
0x3b9e: push qword ptr [rsp+0x78]
0x3ba2: mov rdi,r14
0x3ba5: push qword ptr [rsp+0x38]
0x3ba9: mov r9d,dword ptr [rsp+0x98]
0x3bb1: mov rdx,qword ptr [rsp+0x30]
0x3bb6: mov rsi,qword ptr [rsp+0x70]
0x3bbb: call 0x29f0
0x3bc0: add rsp,0x20
0x3bc4: mov r15,rax
0x3bc7: jmp 0x35c9
0x3bcc: movzx eax,byte ptr [rsp+0x7c]
0x3bd1: jmp 0x3aec
0x3bd6: mov dword ptr [rsp+0x8],0x2
0x3bde: jmp 0x3579
0x3be3: call 0x1650
0x3be8: mov byte ptr [rsp+0xd],0x0
0x3bed: jmp 0x3661
0x3bfa: mov byte ptr [rsp+0xe],0x1
0x3bff: xor eax,eax
0x3c01: xor r12d,r12d
0x3c04: mov qword ptr [rsp+0x50],0x0
0x3c0d: jmp 0x31b4
0x3c24: nop 
0x3c26: nop word ptr cs:[rax+rax]
0x3d1c: add rsp,0x20
0x3d20: mov r11,qword ptr [rsp+0x10]
0x3d25: cmp r11,rax
0x3d28: ja 0x3d91
0x3d2a: lea rsi,[rax+0x1]
0x3d2e: lea rax,[rip+0x20742b]
0x3d35: cmp r12,rax
0x3d38: mov qword ptr [rbx],rsi
0x3d3b: je 0x3d4f
0x3d3d: mov rdi,r12
0x3d40: mov qword ptr [rsp+0x10],rsi
0x3d45: call 0x1580
0x3d4a: mov rsi,qword ptr [rsp+0x10]
0x3d4f: mov rdi,rsi
0x3d52: mov qword ptr [rsp+0x10],rsi
0x3d57: call 0x4bb0
0x3d5c: sub rsp,0x8
0x3d60: mov qword ptr [rbx+0x8],rax
0x3d64: mov r8d,dword ptr [rbp]
0x3d68: push qword ptr [rbp+0x30]
0x3d6b: push qword ptr [rbp+0x28]
0x3d6e: mov rcx,r14
0x3d71: push r15
0x3d73: mov r9d,dword ptr [rsp+0x3c]
0x3d78: mov rdi,rax
0x3d7b: mov rdx,qword ptr [rsp+0x28]
0x3d80: mov rsi,qword ptr [rsp+0x30]
0x3d85: mov r12,rax
0x3d88: call 0x29f0
0x3d8d: add rsp,0x20
0x3d91: mov eax,dword ptr [rsp+0x18]
0x3d95: mov dword ptr [r13],eax
0x3d99: add rsp,0x28
0x3d9d: mov rax,r12
0x3da0: pop rbx
0x3da1: pop rbp
0x3da2: pop r12
0x3da4: pop r13
0x3da6: pop r14
0x3da8: pop r15
0x3daa: ret 
0x3dd1: call 0x1590
0x3dd6: call 0x4e00
0x3ddb: nop dword ptr [rax+rax]
0x3de0: push r12
0x3de2: push rbp
0x3de3: push rbx
0x3de4: mov rbx,rdi
0x3de7: call 0x15a0
0x3dec: mov r12d,dword ptr [rax]
0x3def: mov rbp,rax
0x3df2: lea rax,[rip+0x207467]
0x3df9: test rbx,rbx
0x3dfc: mov esi,0x38
0x3e01: cmove rbx,rax
0x3e05: mov rdi,rbx
0x3e08: call 0x4db0
0x3e0d: mov dword ptr [rbp],r12d
0x3e11: pop rbx
0x3e12: pop rbp
0x3e13: pop r12
0x3e15: ret 
0x3e20: lea rax,[rip+0x207439]
0x3e27: test rdi,rdi
0x3e2a: cmove rdi,rax
0x3e2e: mov eax,dword ptr [rdi]
0x3e30: ret 
0x3e40: lea rax,[rip+0x207419]
0x3e47: test rdi,rdi
0x3e4a: cmove rdi,rax
0x3e4e: mov dword ptr [rdi],esi
0x3e50: ret 
0x3e60: lea rax,[rip+0x2073f9]
0x3e67: test rdi,rdi
0x3e6a: mov ecx,esi
0x3e6c: cmove rdi,rax
0x3e70: mov eax,esi
0x3e72: and ecx,0x1f
0x3e75: shr al,0x5
0x3e78: movzx eax,al
0x3e7b: lea rdi,[rdi+rax*4+0x8]
0x3e80: mov esi,dword ptr [rdi]
0x3e82: mov eax,esi
0x3e84: shr eax,cl
0x3e86: xor edx,eax
0x3e88: and eax,0x1
0x3e8b: and edx,0x1
0x3e8e: shl edx,cl
0x3e90: xor edx,esi
0x3e92: mov dword ptr [rdi],edx
0x3e94: ret 
0x3ea0: lea rax,[rip+0x2073b9]
0x3ea7: test rdi,rdi
0x3eaa: cmove rdi,rax
0x3eae: mov eax,dword ptr [rdi+0x4]
0x3eb1: mov dword ptr [rdi+0x4],esi
0x3eb4: ret 
0x3ec0: lea rax,[rip+0x207399]
0x3ec7: test rdi,rdi
0x3eca: cmove rdi,rax
0x3ece: test rsi,rsi
0x3ed1: mov dword ptr [rdi],0xa
0x3ed7: je 0x3ee7
0x3ed9: test rdx,rdx
0x3edc: je 0x3ee7
0x3ede: mov qword ptr [rdi+0x28],rsi
0x3ee2: mov qword ptr [rdi+0x30],rdx
0x3ee6: ret 
0x3ee7: sub rsp,0x8
0x3eeb: call 0x1590
0x3ef0: push r15
0x3ef2: push r14
0x3ef4: lea rax,[rip+0x207365]
0x3efb: push r13
0x3efd: push r12
0x3eff: mov r13,rdi
0x3f02: push rbp
0x3f03: push rbx
0x3f04: mov rbx,r8
0x3f07: mov r14,rsi
0x3f0a: mov r15,rdx
0x3f0d: sub rsp,0x18
0x3f11: test r8,r8
0x3f14: cmove rbx,rax
0x3f18: mov qword ptr [rsp+0x8],rcx
0x3f1d: call 0x15a0
0x3f22: mov r12d,dword ptr [rax]
0x3f25: mov rbp,rax
0x3f28: lea rax,[rbx+0x8]
0x3f2c: sub rsp,0x8
0x3f30: mov r9d,dword ptr [rbx+0x4]
0x3f34: push qword ptr [rbx+0x30]
0x3f37: mov r8d,dword ptr [rbx]
0x3f3a: push qword ptr [rbx+0x28]
0x3f3d: mov rdx,r15
0x3f40: push rax
0x3f41: mov rcx,qword ptr [rsp+0x28]
0x3f46: mov rsi,r14
0x3f49: mov rdi,r13
0x3f4c: call 0x29f0
0x3f51: mov dword ptr [rbp],r12d
0x3f55: add rsp,0x38
0x3f59: pop rbx
0x3f5a: pop rbp
0x3f5b: pop r12
0x3f5d: pop r13
0x3f5f: pop r14
0x3f61: pop r15
0x3f63: ret 
0x3f70: push r15
0x3f72: push r14
0x3f74: lea rax,[rip+0x2072e5]
0x3f7b: push r13
0x3f7d: push r12
0x3f7f: mov r12,rdx
0x3f82: push rbp
0x3f83: push rbx
0x3f84: mov rbx,rcx
0x3f87: mov r14,rdi
0x3f8a: mov r15,rsi
0x3f8d: sub rsp,0x38
0x3f91: test rcx,rcx
0x3f94: cmove rbx,rax
0x3f98: xor ebp,ebp
0x3f9a: call 0x15a0
0x3f9f: test r12,r12
0x3fa2: mov r13,rax
0x3fa5: mov eax,dword ptr [rax]
0x3fa7: sete bpl
0x3fab: or ebp,dword ptr [rbx+0x4]
0x3fae: lea r10,[rbx+0x8]
0x3fb2: sub rsp,0x8
0x3fb6: mov r8d,dword ptr [rbx]
0x3fb9: mov rcx,r15
0x3fbc: mov dword ptr [rsp+0x14],eax
0x3fc0: push qword ptr [rbx+0x30]
0x3fc3: mov rdx,r14
0x3fc6: push qword ptr [rbx+0x28]
0x3fc9: push r10
0x3fcb: xor esi,esi
0x3fcd: mov r9d,ebp
0x3fd0: xor edi,edi
0x3fd2: mov qword ptr [rsp+0x40],r10
0x3fd7: call 0x29f0
0x3fdc: lea rsi,[rax+0x1]
0x3fe0: mov qword ptr [rsp+0x48],rax
0x3fe5: add rsp,0x20
0x3fe9: mov rdi,rsi
0x3fec: mov qword ptr [rsp+0x18],rsi
0x3ff1: call 0x4bb0
0x3ff6: mov qword ptr [rsp+0x10],rax
0x3ffb: sub rsp,0x8
0x3fff: push qword ptr [rbx+0x30]
0x4002: push qword ptr [rbx+0x28]
0x4005: mov r10,qword ptr [rsp+0x38]
0x400a: mov r9d,ebp
0x400d: mov r8d,dword ptr [rbx]
0x4010: mov rcx,r15
0x4013: mov rdx,r14
0x4016: mov rdi,rax
0x4019: push r10
0x401b: mov rsi,qword ptr [rsp+0x38]
0x4020: call 0x29f0
0x4025: mov eax,dword ptr [rsp+0x2c]
0x4029: add rsp,0x20
0x402d: test r12,r12
0x4030: mov dword ptr [r13],eax
0x4034: je 0x403f
0x4036: mov r11,qword ptr [rsp+0x28]
0x403b: mov qword ptr [r12],r11
0x403f: mov rax,qword ptr [rsp+0x10]
0x4044: add rsp,0x38
0x4048: pop rbx
0x4049: pop rbp
0x404a: pop r12
0x404c: pop r13
0x404e: pop r14
0x4050: pop r15
0x4052: ret 
0x4060: mov rcx,rdx
0x4063: xor edx,edx
0x4065: jmp 0x3f70
0x4070: mov eax,dword ptr [rip+0x206fe2]
0x4076: push r12
0x4078: mov r12,qword ptr [rip+0x206fe1]
0x407f: push rbp
0x4080: push rbx
0x4081: cmp eax,0x1
0x4084: jle 0x40b1
0x4086: sub eax,0x2
0x4089: lea rbx,[r12+0x18]
0x408e: shl rax,0x4
0x4092: lea rbp,[r12+rax+0x28]
0x4097: nop word ptr [rax+rax]
0x40a0: mov rdi,qword ptr [rbx]
0x40a3: add rbx,0x10
0x40a7: call 0x1580
0x40ac: cmp rbx,rbp
0x40af: jne 0x40a0
0x40b1: mov rdi,qword ptr [r12+0x8]
0x40b6: lea rbx,[rip+0x2070a3]
0x40bd: cmp rdi,rbx
0x40c0: je 0x40d9
0x40c2: call 0x1580
0x40c7: mov qword ptr [rip+0x206f9e],0x100
0x40d2: mov qword ptr [rip+0x206f9f],rbx
0x40d9: lea rbx,[rip+0x206f90]
0x40e0: cmp r12,rbx
0x40e3: je 0x40f4
0x40e5: mov rdi,r12
0x40e8: call 0x1580
0x40ed: mov qword ptr [rip+0x206f6c],rbx
0x40f4: pop rbx
0x40f5: mov dword ptr [rip+0x206f59],0x1
0x40ff: pop rbp
0x4100: pop r12
0x4102: ret 
0x4110: lea rcx,[rip+0x207149]
0x4117: mov rdx,-0x1
0x411e: jmp 0x3c30
0x4130: lea rcx,[rip+0x207129]
0x4137: jmp 0x3c30
0x4140: lea rcx,[rip+0x207119]
0x4147: mov rsi,rdi
0x414a: mov rdx,-0x1
0x4151: xor edi,edi
0x4153: jmp 0x3c30
0x4160: lea rcx,[rip+0x2070f9]
0x4167: mov rdx,rsi
0x416a: mov rsi,rdi
0x416d: xor edi,edi
0x416f: jmp 0x3c30
0x4180: sub rsp,0x48
0x4184: mov rax,rdx
0x4187: mov rdx,qword ptr fs:0x28
0x4190: mov qword ptr [rsp+0x38],rdx
0x4195: xor edx,edx
0x4197: cmp esi,0xa
0x419a: je 0x4204
0x419c: mov dword ptr [rsp],esi
0x419f: mov rcx,rsp
0x41a2: mov rdx,-0x1
0x41a9: mov rsi,rax
0x41ac: mov qword ptr [rsp+0x4],0x0
0x41b5: mov qword ptr [rsp+0xc],0x0
0x41be: mov qword ptr [rsp+0x14],0x0
0x41c7: mov qword ptr [rsp+0x1c],0x0
0x41d0: mov qword ptr [rsp+0x24],0x0
0x41d9: mov qword ptr [rsp+0x2c],0x0
0x41e2: mov dword ptr [rsp+0x34],0x0
0x41ea: call 0x3c30
0x41ef: mov rcx,qword ptr [rsp+0x38]
0x41f4: xor rcx,qword ptr fs:0x28
0x41fd: jne 0x4209
0x41ff: add rsp,0x48
0x4203: ret 
0x4204: call 0x1590
0x4209: call 0x1650
0x420e: nop 
0x4210: sub rsp,0x48
0x4214: mov rax,rdx
0x4217: mov rdx,rcx
0x421a: mov rcx,qword ptr fs:0x28
0x4223: mov qword ptr [rsp+0x38],rcx
0x4228: xor ecx,ecx
0x422a: cmp esi,0xa
0x422d: je 0x4290
0x422f: mov dword ptr [rsp],esi
0x4232: mov rcx,rsp
0x4235: mov rsi,rax
0x4238: mov qword ptr [rsp+0x4],0x0
0x4241: mov qword ptr [rsp+0xc],0x0
0x424a: mov qword ptr [rsp+0x14],0x0
0x4253: mov qword ptr [rsp+0x1c],0x0
0x425c: mov qword ptr [rsp+0x24],0x0
0x4265: mov qword ptr [rsp+0x2c],0x0
0x426e: mov dword ptr [rsp+0x34],0x0
0x4276: call 0x3c30
0x427b: mov rdx,qword ptr [rsp+0x38]
0x4280: xor rdx,qword ptr fs:0x28
0x4289: jne 0x4295
0x428b: add rsp,0x48
0x428f: ret 
0x4290: call 0x1590
0x4295: call 0x1650
0x429a: nop word ptr [rax+rax]
0x42a0: mov rdx,rsi
0x42a3: mov esi,edi
0x42a5: xor edi,edi
0x42a7: jmp 0x4180
0x42b0: mov rcx,rdx
0x42b3: mov rdx,rsi
0x42b6: mov esi,edi
0x42b8: xor edi,edi
0x42ba: jmp 0x4210
0x42c0: sub rsp,0x48
0x42c4: mov ecx,edx
0x42c6: mov rax,qword ptr fs:0x28
0x42cf: mov qword ptr [rsp+0x38],rax
0x42d4: xor eax,eax
0x42d6: mov rax,qword ptr [rip+0x206fb3]
0x42dd: mov r8,rsp
0x42e0: and ecx,0x1f
0x42e3: movdqa xmm0,xmmword ptr [rip+0x206f75]
0x42eb: mov qword ptr [rsp+0x30],rax
0x42f0: mov eax,edx
0x42f2: movaps xmmword ptr [rsp],xmm0
0x42f6: shr al,0x5
0x42f9: movzx eax,al
0x42fc: lea r9,[r8+rax*4+0x8]
0x4301: movdqa xmm0,xmmword ptr [rip+0x206f67]
0x4309: movaps xmmword ptr [rsp+0x10],xmm0
0x430e: movdqa xmm0,xmmword ptr [rip+0x206f6a]
0x4316: movaps xmmword ptr [rsp+0x20],xmm0
0x431b: mov edx,dword ptr [r9]
0x431e: mov eax,edx
0x4320: shr eax,cl
0x4322: not eax
0x4324: and eax,0x1
0x4327: shl eax,cl
0x4329: mov rcx,r8
0x432c: xor eax,edx
0x432e: mov rdx,rsi
0x4331: mov rsi,rdi
0x4334: mov dword ptr [r9],eax
0x4337: xor edi,edi
0x4339: call 0x3c30
0x433e: mov rsi,qword ptr [rsp+0x38]
0x4343: xor rsi,qword ptr fs:0x28
0x434c: jne 0x4353
0x434e: add rsp,0x48
0x4352: ret 
0x4353: call 0x1650
0x4358: nop dword ptr [rax+rax]
0x4360: movsx edx,sil
0x4364: mov rsi,-0x1
0x436b: jmp 0x42c0
0x4370: mov edx,0x3a
0x4375: mov rsi,-0x1
0x437c: jmp 0x42c0
0x4390: mov edx,0x3a
0x4395: jmp 0x42c0
0x43a0: sub rsp,0x48
0x43a4: mov rax,rdx
0x43a7: mov rdx,qword ptr fs:0x28
0x43b0: mov qword ptr [rsp+0x38],rdx
0x43b5: xor edx,edx
0x43b7: cmp esi,0xa
0x43ba: je 0x4424
0x43bc: mov dword ptr [rsp],esi
0x43bf: mov rcx,rsp
0x43c2: mov rdx,-0x1
0x43c9: mov rsi,rax
0x43cc: mov qword ptr [rsp+0x4],0x0
0x43d5: mov qword ptr [rsp+0xc],0x4000000
0x43de: mov qword ptr [rsp+0x14],0x0
0x43e7: mov qword ptr [rsp+0x1c],0x0
0x43f0: mov qword ptr [rsp+0x24],0x0
0x43f9: mov qword ptr [rsp+0x2c],0x0
0x4402: mov dword ptr [rsp+0x34],0x0
0x440a: call 0x3c30
0x440f: mov rcx,qword ptr [rsp+0x38]
0x4414: xor rcx,qword ptr fs:0x28
0x441d: jne 0x4429
0x441f: add rsp,0x48
0x4423: ret 
0x4424: call 0x1590
0x4429: call 0x1650
0x442e: nop 
0x4430: sub rsp,0x48
0x4434: mov r9,rcx
0x4437: mov rcx,qword ptr [rip+0x206e52]
0x443e: movdqa xmm0,xmmword ptr [rip+0x206e1a]
0x4446: mov rax,qword ptr fs:0x28
0x444f: mov qword ptr [rsp+0x38],rax
0x4454: xor eax,eax
0x4456: movaps xmmword ptr [rsp],xmm0
0x445a: test rsi,rsi
0x445d: mov qword ptr [rsp+0x30],rcx
0x4462: mov dword ptr [rsp],0xa
0x4469: movdqa xmm0,xmmword ptr [rip+0x206dff]
0x4471: movaps xmmword ptr [rsp+0x10],xmm0
0x4476: movdqa xmm0,xmmword ptr [rip+0x206e02]
0x447e: movaps xmmword ptr [rsp+0x20],xmm0
0x4483: je 0x44b7
0x4485: test rdx,rdx
0x4488: je 0x44b7
0x448a: mov qword ptr [rsp+0x28],rsi
0x448f: mov qword ptr [rsp+0x30],rdx
0x4494: mov rcx,rsp
0x4497: mov rdx,r8
0x449a: mov rsi,r9
0x449d: call 0x3c30
0x44a2: mov rdi,qword ptr [rsp+0x38]
0x44a7: xor rdi,qword ptr fs:0x28
0x44b0: jne 0x44bc
0x44b2: add rsp,0x48
0x44b6: ret 
0x44b7: call 0x1590
0x44bc: call 0x1650
0x44c1: nop dword ptr [rax+rax]
0x44c6: nop word ptr cs:[rax+rax]
0x44d0: mov r8,-0x1
0x44d7: jmp 0x4430
0x44e0: mov rcx,rdx
0x44e3: mov r8,-0x1
0x44ea: mov rdx,rsi
0x44ed: mov rsi,rdi
0x44f0: xor edi,edi
0x44f2: jmp 0x4430
0x4500: mov r8,rcx
0x4503: mov rcx,rdx
0x4506: mov rdx,rsi
0x4509: mov rsi,rdi
0x450c: xor edi,edi
0x450e: jmp 0x4430
0x4520: lea rcx,[rip+0x206af9]
0x4527: jmp 0x3c30
0x4530: lea rcx,[rip+0x206ae9]
0x4537: mov rdx,rsi
0x453a: mov rsi,rdi
0x453d: xor edi,edi
0x453f: jmp 0x3c30
0x4550: lea rcx,[rip+0x206ac9]
0x4557: mov rdx,-0x1
0x455e: jmp 0x3c30
0x46c8: mov r8,rcx
0x46cb: mov rcx,rdx
0x46ce: lea rdx,[rip+0x40bf]
0x46d5: mov esi,0x1
0x46da: xor eax,eax
0x46dc: call 0x1850
0x46e1: jmp 0x45cc
0x48dd: push r12
0x48df: push r15
0x48e1: push r14
0x48e3: mov r8,qword ptr [rsp+0x20]
0x48e8: mov rcx,rbx
0x48eb: mov rdx,rax
0x48ee: mov rdi,rbp
0x48f1: mov esi,0x1
0x48f6: xor eax,eax
0x48f8: call 0x1850
0x48fd: add rsp,0x20
0x4901: add rsp,0x28
0x4905: pop rbx
0x4906: pop rbp
0x4907: pop r12
0x4909: pop r13
0x490b: pop r14
0x490d: pop r15
0x490f: ret 
0x4949: push r12
0x494b: push r15
0x494d: push r14
0x494f: mov r9,qword ptr [rsp+0x28]
0x4954: jmp 0x48e3
0x49b0: xor r9d,r9d
0x49b3: cmp qword ptr [r8],0x0
0x49b7: je 0x49cb
0x49b9: nop dword ptr [rax]
0x49c0: add r9,0x1
0x49c4: cmp qword ptr [r8+r9*8],0x0
0x49c9: jne 0x49c0
0x49cb: jmp 0x4590
0x49d0: sub rsp,0x68
0x49d4: mov r10,r8
0x49d7: xor r9d,r9d
0x49da: mov rax,qword ptr fs:0x28
0x49e3: mov qword ptr [rsp+0x58],rax
0x49e8: xor eax,eax
0x49ea: mov r8,rsp
0x49ed: nop dword ptr [rax]
0x49f0: mov eax,dword ptr [r10]
0x49f3: cmp eax,0x2f
0x49f6: ja 0x4a3a
0x49f8: mov r11d,eax
0x49fb: add r11,qword ptr [r10+0x10]
0x49ff: add eax,0x8
0x4a02: mov dword ptr [r10],eax
0x4a05: mov rax,qword ptr [r11]
0x4a08: test rax,rax
0x4a0b: mov qword ptr [r8+r9*8],rax
0x4a0f: je 0x4a1b
0x4a11: add r9,0x1
0x4a15: cmp r9,0xa
0x4a19: jne 0x49f0
0x4a1b: call 0x4590
0x4a20: mov rax,qword ptr [rsp+0x58]
0x4a25: xor rax,qword ptr fs:0x28
0x4a2e: jne 0x4a35
0x4a30: add rsp,0x68
0x4a34: ret 
0x4a35: call 0x1650
0x4a3a: mov r11,qword ptr [r10+0x8]
0x4a3e: lea rax,[r11+0x8]
0x4a42: mov qword ptr [r10+0x8],rax
0x4a46: jmp 0x4a05
0x4b30: push rbx
0x4b31: lea rsi,[rip+0x3caa]
0x4b38: mov edx,0x5
0x4b3d: xor edi,edi
0x4b3f: call 0x1620
0x4b44: lea rdx,[rip+0x3cac]
0x4b4b: mov rsi,rax
0x4b4e: mov edi,0x1
0x4b53: xor eax,eax
0x4b55: call 0x17b0
0x4b5a: lea rsi,[rip+0x3cac]
0x4b61: mov edx,0x5
0x4b66: xor edi,edi
0x4b68: call 0x1620
0x4b6d: lea rcx,[rip+0x350c]
0x4b74: lea rdx,[rip+0x2ec3]
0x4b7b: mov rsi,rax
0x4b7e: mov edi,0x1
0x4b83: xor eax,eax
0x4b85: call 0x17b0
0x4b8a: mov rbx,qword ptr [rip+0x2064f7]
0x4b91: lea rsi,[rip+0x3ea8]
0x4b98: xor edi,edi
0x4b9a: mov edx,0x5
0x4b9f: call 0x1620
0x4ba4: mov rsi,rbx
0x4ba7: mov rdi,rax
0x4baa: pop rbx
0x4bab: jmp 0x16f0
0x4bbe: test rbx,rbx
0x4bc1: jne 0x4bc5
0x4bc5: call 0x4e00
0x4bca: nop word ptr [rax+rax]
0x4bd0: mov rax,rdi
0x4bd3: mul rsi
0x4bd6: mov rdi,rax
0x4bd9: seto al
0x4bdc: test rdi,rdi
0x4bdf: js 0x4beb
0x4be1: movzx eax,al
0x4be4: test rax,rax
0x4be7: jne 0x4beb
0x4be9: jmp 0x4bb0
0x4beb: sub rsp,0x8
0x4bef: call 0x4e00
0x4bf4: nop 
0x4bf6: nop word ptr cs:[rax+rax]
0x4c00: jmp 0x4bb0
0x4c19: test rdi,rdi
0x4c1c: jne 0x4c38
0x4c2b: test rbx,rbx
0x4c2e: jne 0x4c41
0x4c38: call 0x1580
0x4c3d: xor eax,eax
0x4c3f: pop rbx
0x4c40: ret 
0x4c41: call 0x4e00
0x4c46: nop word ptr cs:[rax+rax]
0x4c50: mov rax,rsi
0x4c53: mul rdx
0x4c56: mov rsi,rax
0x4c59: seto al
0x4c5c: test rsi,rsi
0x4c5f: js 0x4c6b
0x4c61: movzx eax,al
0x4c64: test rax,rax
0x4c67: jne 0x4c6b
0x4c69: jmp 0x4c10
0x4c6b: sub rsp,0x8
0x4c6f: call 0x4e00
0x4c74: nop 
0x4c76: nop word ptr cs:[rax+rax]
0x4c80: test rdi,rdi
0x4c83: mov r9,rdx
0x4c86: mov rcx,qword ptr [rsi]
0x4c89: je 0x4cc0
0x4c8b: xor edx,edx
0x4c8d: movabsq rax,0x5555555555555554
0x4c97: div r9
0x4c9a: cmp rax,rcx
0x4c9d: jbe 0x4cdb
0x4c9f: mov rax,rcx
0x4ca2: shr rax, 1
0x4ca5: lea rcx,[rax+rcx+0x1]
0x4caa: mov qword ptr [rsi],rcx
0x4cad: imul rcx,r9
0x4cb1: mov rsi,rcx
0x4cb4: jmp 0x4c10
0x4cc0: test rcx,rcx
0x4cc3: je 0x4ce8
0x4cc5: mov rax,rcx
0x4cc8: mul r9
0x4ccb: seto dl
0x4cce: test rax,rax
0x4cd1: movzx edx,dl
0x4cd4: js 0x4cdb
0x4cd6: test rdx,rdx
0x4cd9: je 0x4caa
0x4cdb: sub rsp,0x8
0x4cdf: call 0x4e00
0x4ce4: nop dword ptr [rax]
0x4ce8: xor edx,edx
0x4cea: mov eax,0x80
0x4cef: xor r8d,r8d
0x4cf2: div r9
0x4cf5: test rax,rax
0x4cf8: sete r8b
0x4cfc: lea rcx,[r8+rax]
0x4d00: jmp 0x4cc5
0x4d10: test rdi,rdi
0x4d13: mov rax,qword ptr [rsi]
0x4d16: je 0x4d40
0x4d18: movabsq rdx,0x5555555555555553
0x4d22: cmp rax,rdx
0x4d25: ja 0x4d51
0x4d27: mov rdx,rax
0x4d2a: shr rdx, 1
0x4d2d: lea rax,[rdx+rax+0x1]
0x4d32: mov qword ptr [rsi],rax
0x4d35: mov rsi,rax
0x4d38: jmp 0x4c10
0x4d40: test rax,rax
0x4d43: mov edx,0x80
0x4d48: cmove rax,rdx
0x4d4c: test rax,rax
0x4d4f: jns 0x4d32
0x4d51: sub rsp,0x8
0x4d55: call 0x4e00
0x4d5a: nop word ptr [rax+rax]
0x4d60: push rbx
0x4d61: mov rbx,rdi
0x4d64: call 0x4bb0
0x4d69: mov rdx,rbx
0x4d6c: xor esi,esi
0x4d6e: mov rdi,rax
0x4d71: pop rbx
0x4d72: jmp 0x16d0
0x4d80: mov rax,rdi
0x4d83: sub rsp,0x8
0x4d87: mul rsi
0x4d8a: seto dl
0x4d8d: test rax,rax
0x4d90: js 0x4da9
0x4d92: movzx edx,dl
0x4d95: test rdx,rdx
0x4d98: jne 0x4da9
0x4d9a: call 0x1700
0x4d9f: test rax,rax
0x4da2: je 0x4da9
0x4da4: add rsp,0x8
0x4da8: ret 
0x4da9: call 0x4e00
0x4dae: nop 
0x4e30: call 0x1590
0x4e35: nop word ptr cs:[rax+rax]
0x4e3f: nop 
0x4e67: nop word ptr [rax+rax]
0x4f42: nop word ptr [rax+rax]
0x5070: movsxd rdi,edi
0x5073: mov eax,ebp
0x5075: add rcx,rdi
0x5078: or eax,0x2
0x507b: mov qword ptr [r15],rcx
0x507e: cmp byte ptr [rcx],0x0
0x5081: mov qword ptr [r14],rbx
0x5084: cmovne ebp,eax
0x5087: jmp 0x4f4d
0x50e5: or ebp,r9d
0x50e8: jmp 0x5070
0x517c: mov rax,rbx
0x517f: mul rsi
0x5182: mov rbx,rax
0x5185: jo 0x5214
0x518b: sub r8d,0x1
0x518f: jne 0x517c
0x5191: jmp 0x50e5
0x51f5: lea rcx,[rip+0x3a24]
0x51fc: lea rsi,[rip+0x38fd]
0x5203: lea rdi,[rip+0x3916]
0x520a: mov edx,0x54
0x520f: call 0x16b0
0x5214: mov r9d,0x1
0x521a: or rbx,-0x1
0x521e: jmp 0x518b
0x52af: movaps xmmword ptr [rsp+0x50],xmm0
0x52b4: movaps xmmword ptr [rsp+0x60],xmm1
0x52b9: movaps xmmword ptr [rsp+0x70],xmm2
0x52be: movaps xmmword ptr [rsp+0x80],xmm3
0x52c6: movaps xmmword ptr [rsp+0x90],xmm4
0x52ce: movaps xmmword ptr [rsp+0xa0],xmm5
0x52d6: movaps xmmword ptr [rsp+0xb0],xmm6
0x52de: movaps xmmword ptr [rsp+0xc0],xmm7
0x5341: nop word ptr cs:[rax+rax]
0x534b: nop dword ptr [rax+rax]
0x5350: push r13
0x5352: push r12
0x5354: mov r13,rsi
0x5357: push rbp
0x5358: push rbx
0x5359: mov rbx,rdi
0x535c: mov r12,rdx
0x535f: sub rsp,0x18
0x5363: mov rax,qword ptr fs:0x28
0x536c: mov qword ptr [rsp+0x8],rax
0x5371: xor eax,eax
0x5373: lea rax,[rsp+0x4]
0x5378: test rdi,rdi
0x537b: cmove rbx,rax
0x537f: mov rdi,rbx
0x5382: call 0x1670
0x5387: cmp rax,-0x3
0x538b: mov rbp,rax
0x538e: jbe 0x53b0
0x5390: test r12,r12
0x5393: je 0x53b0
0x5395: xor edi,edi
0x5397: call 0x5730
0x539c: test al,al
0x539e: jne 0x53b0
0x53a0: movzx eax,byte ptr [r13]
0x53a5: mov ebp,0x1
0x53aa: mov dword ptr [rbx],eax
0x53ac: nop dword ptr [rax]
0x53b0: mov rdx,qword ptr [rsp+0x8]
0x53b5: xor rdx,qword ptr fs:0x28
0x53be: mov rax,rbp
0x53c1: jne 0x53ce
0x53c3: add rsp,0x18
0x53c7: pop rbx
0x53c8: pop rbp
0x53c9: pop r12
0x53cb: pop r13
0x53cd: ret 
0x53ce: call 0x1650
0x53d3: nop word ptr cs:[rax+rax]
0x53dd: nop dword ptr [rax]
0x545e: nop 
0x5476: sub rsp,0x8
0x547a: call 0x1590
0x547f: nop 
0x5600: mov r12,rdx
0x5603: mov rbx,rcx
0x5606: jmp 0x54f2
0x56a8: nop dword ptr [rax+rax]
0x56b0: push r12
0x56b2: push rbp
0x56b3: mov rbp,rdi
0x56b6: push rbx
0x56b7: call 0x15d0
0x56bc: mov ebx,dword ptr [rbp]
0x56bf: mov rdi,rbp
0x56c2: mov r12,rax
0x56c5: call 0x57d0
0x56ca: and ebx,0x20
0x56cd: test ebx,ebx
0x56cf: jne 0x56e8
0x56d1: test eax,eax
0x56d3: je 0x56df
0x56d5: test r12,r12
0x56d8: mov eax,0xffffffff
0x56dd: je 0x5718
0x56df: pop rbx
0x56e0: pop rbp
0x56e1: pop r12
0x56e3: ret 
0x56e8: test eax,eax
0x56ea: jne 0x5708
0x56ec: call 0x15a0
0x56f1: mov dword ptr [rax],0x0
0x56f7: mov eax,0xffffffff
0x56fc: pop rbx
0x56fd: pop rbp
0x56fe: pop r12
0x5700: ret 
0x5708: pop rbx
0x5709: mov eax,0xffffffff
0x570e: pop rbp
0x570f: pop r12
0x5711: ret 
0x5718: call 0x15a0
0x571d: cmp dword ptr [rax],0x9
0x5720: pop rbx
0x5721: pop rbp
0x5722: pop r12
0x5724: setne al
0x5727: movzx eax,al
0x572a: neg eax
0x572c: ret 
0x5730: sub rsp,0x8
0x5734: xor esi,esi
0x5736: call 0x17a0
0x573b: mov rdx,rax
0x573e: mov eax,0x1
0x5743: test rdx,rdx
0x5746: je 0x5765
0x5748: lea rdi,[rip+0x34dc]
0x574f: mov ecx,0x2
0x5754: mov rsi,rdx
0x5757: rep cmpsb [rsi],es:[rdi]
0x5759: seta cl
0x575c: sbb cl,0x0
0x575f: xor eax,eax
0x5761: test cl,cl
0x5763: jne 0x5770
0x5765: add rsp,0x8
0x5769: ret 
0x5770: lea rdi,[rip+0x34b6]
0x5777: mov ecx,0x6
0x577c: mov rsi,rdx
0x577f: rep cmpsb [rsi],es:[rdi]
0x5781: seta al
0x5784: sbb al,0x0
0x5786: test al,al
0x5788: setne al
0x578b: add rsp,0x8
0x578f: ret 
0x5790: sub rsp,0x8
0x5794: mov edi,0xe
0x5799: call 0x1770
0x579e: test rax,rax
0x57a1: je 0x57c0
0x57a3: cmp byte ptr [rax],0x0
0x57a6: lea rdx,[rip+0x3486]
0x57ad: cmove rax,rdx
0x57b1: add rsp,0x8
0x57b5: ret 
0x57c0: lea rax,[rip+0x346c]
0x57c7: add rsp,0x8
0x57cb: ret 
0x57d0: push r12
0x57d2: push rbp
0x57d3: push rbx
0x57d4: mov rbx,rdi
0x57d7: call 0x1730
0x57dc: test eax,eax
0x57de: mov rdi,rbx
0x57e1: js 0x5837
0x57e3: call 0x1780
0x57e8: test eax,eax
0x57ea: jne 0x5818
0x57ec: mov rdi,rbx
0x57ef: call 0x5850
0x57f4: test eax,eax
0x57f6: je 0x5834
0x57f8: call 0x15a0
0x57fd: mov r12d,dword ptr [rax]
0x5800: mov rdi,rbx
0x5803: mov rbp,rax
0x5806: call 0x1600
0x580b: test r12d,r12d
0x580e: jne 0x5840
0x5810: pop rbx
0x5811: pop rbp
0x5812: pop r12
0x5814: ret 
0x5818: mov rdi,rbx
0x581b: call 0x1730
0x5820: xor esi,esi
0x5822: mov edx,0x1
0x5827: mov edi,eax
0x5829: call 0x16a0
0x582e: cmp rax,-0x1
0x5832: jne 0x57ec
0x5834: mov rdi,rbx
0x5837: pop rbx
0x5838: pop rbp
0x5839: pop r12
0x583b: jmp 0x1600
0x5840: mov dword ptr [rbp],r12d
0x5844: mov eax,0xffffffff
0x5849: jmp 0x5810
0x5850: test rdi,rdi
0x5853: push rbx
0x5854: mov rbx,rdi
0x5857: je 0x586a
0x5859: call 0x1780
0x585e: test eax,eax
0x5860: je 0x586a
0x5862: test dword ptr [rbx],0x100
0x5868: jne 0x5878
0x586a: mov rdi,rbx
0x586d: pop rbx
0x586e: jmp 0x1760
0x5878: mov rdi,rbx
0x587b: mov edx,0x1
0x5880: xor esi,esi
0x5882: call 0x5890
0x5887: mov rdi,rbx
0x588a: pop rbx
0x588b: jmp 0x1760
0x5890: mov rax,qword ptr [rdi+0x8]
0x5894: cmp qword ptr [rdi+0x10],rax
0x5898: je 0x58a0
0x589a: jmp 0x17f0
0x58a0: mov rax,qword ptr [rdi+0x20]
0x58a4: cmp qword ptr [rdi+0x28],rax
0x58a8: jne 0x589a
0x58aa: cmp qword ptr [rdi+0x48],0x0
0x58af: jne 0x589a
0x58b1: push r12
0x58b3: push rbp
0x58b4: mov r12d,edx
0x58b7: push rbx
0x58b8: mov rbp,rsi
0x58bb: mov rbx,rdi
0x58be: call 0x1730
0x58c3: mov edx,r12d
0x58c6: mov rsi,rbp
0x58c9: mov edi,eax
0x58cb: call 0x16a0
0x58d0: cmp rax,-0x1
0x58d4: je 0x58e2
0x58d6: and dword ptr [rbx],-0x11
0x58d9: mov qword ptr [rbx+0x90],rax
0x58e0: xor eax,eax
0x58e2: pop rbx
0x58e3: pop rbp
0x58e4: pop r12
0x58e6: ret 
0x59b1: cmp rdi,-0x1
0x59b5: mov qword ptr [rbp-0x3c8],r8
0x59bc: je 0x63b8
0x59c2: call 0x1750
0x59c7: test rax,rax
0x59ca: mov qword ptr [rbp-0x3d8],rax
0x59d1: je 0x63b8
0x59d7: mov r8,qword ptr [rbp-0x3c8]
0x59de: mov qword ptr [rbp-0x420],rax
0x59f2: mov rax,qword ptr [rbp-0x418]
0x59f9: mov r12,qword ptr [rax]
0x5a7f: mov rdi,rax
0x5a82: call 0x1580
0x5a9e: call 0x1580
0x5b59: test dl,dl
0x5b5b: jne 0x6498
0x5b61: mov rsi,r12
0x5b64: mov rdi,r15
0x5b67: mov qword ptr [rbp-0x3d0],r8
0x5b6e: mov qword ptr [rbp-0x3c8],rcx
0x5b75: call 0x1790
0x5b7a: test rax,rax
0x5b7d: mov rcx,qword ptr [rbp-0x3c8]
0x5b84: mov r8,qword ptr [rbp-0x3d0]
0x5b8b: je 0x653b
0x5b91: mov r15,rax
0x5bb7: movzx edx,byte ptr [r13+0x48]
0x5bbc: mov rax,qword ptr [r13+0x50]
0x5bc0: cmp dl,0x25
0x5bc3: je 0x6358
0x5bc9: cmp rax,-0x1
0x5bcd: je 0x6816
0x5bd3: mov r8,qword ptr [rbp-0x3a8]
0x5bda: shl rax,0x5
0x5bde: add rax,r8
0x5be1: cmp dl,0x6e
0x5be4: mov edi,dword ptr [rax]
0x5be6: mov dword ptr [rbp-0x3d0],edi
0x5bec: je 0x63d0
0x5bf2: mov eax,dword ptr [r13+0x10]
0x5bf6: mov rdi,qword ptr [rbp-0x3d8]
0x5bfd: test al,0x1
0x5bff: mov byte ptr [rdi],0x25
0x5c02: lea rbx,[rdi+0x1]
0x5c06: je 0x5c17
0x5c08: mov rdi,qword ptr [rbp-0x3d8]
0x5c0f: lea rbx,[rdi+0x2]
0x5c13: mov byte ptr [rdi+0x1],0x27
0x5c17: test al,0x2
0x5c19: je 0x5c22
0x5c1b: mov byte ptr [rbx],0x2d
0x5c1e: add rbx,0x1
0x5c22: test al,0x4
0x5c24: je 0x5c2d
0x5c26: mov byte ptr [rbx],0x2b
0x5c29: add rbx,0x1
0x5c2d: test al,0x8
0x5c2f: je 0x5c38
0x5c31: mov byte ptr [rbx],0x20
0x5c34: add rbx,0x1
0x5c38: test al,0x10
0x5c3a: je 0x5c43
0x5c3c: mov byte ptr [rbx],0x23
0x5c3f: add rbx,0x1
0x5c43: test al,0x40
0x5c45: je 0x5c4e
0x5c47: mov byte ptr [rbx],0x49
0x5c4a: add rbx,0x1
0x5c4e: test al,0x20
0x5c50: je 0x5c59
0x5c52: mov byte ptr [rbx],0x30
0x5c55: add rbx,0x1
0x5c59: mov rsi,qword ptr [r13+0x18]
0x5c5d: mov rdx,qword ptr [r13+0x20]
0x5c61: cmp rsi,rdx
0x5c64: je 0x5c96
0x5c66: mov rcx,rdx
0x5c69: mov rdi,rbx
0x5c6c: mov qword ptr [rbp-0x3e0],r8
0x5c73: sub rcx,rsi
0x5c76: mov rdx,rcx
0x5c79: mov qword ptr [rbp-0x3c8],rcx
0x5c80: call 0x1720
0x5c85: mov rcx,qword ptr [rbp-0x3c8]
0x5c8c: mov r8,qword ptr [rbp-0x3e0]
0x5c93: add rbx,rcx
0x5c96: mov rsi,qword ptr [r13+0x30]
0x5c9a: mov rdx,qword ptr [r13+0x38]
0x5c9e: cmp rsi,rdx
0x5ca1: je 0x5cd3
0x5ca3: mov rcx,rdx
0x5ca6: mov rdi,rbx
0x5ca9: mov qword ptr [rbp-0x3e0],r8
0x5cb0: sub rcx,rsi
0x5cb3: mov rdx,rcx
0x5cb6: mov qword ptr [rbp-0x3c8],rcx
0x5cbd: call 0x1720
0x5cc2: mov rcx,qword ptr [rbp-0x3c8]
0x5cc9: mov r8,qword ptr [rbp-0x3e0]
0x5cd0: add rbx,rcx
0x5cd3: mov edi,dword ptr [rbp-0x3d0]
0x5cd9: cmp edi,0x10
0x5cdc: ja 0x5d0b
0x5cde: mov eax,0x1
0x5ce3: mov ecx,edi
0x5ce5: shl rax,cl
0x5ce8: test eax,0x14180
0x5ced: jne 0x5d04
0x5cef: test ah,0x10
0x5cf2: jne 0x6650
0x5cf8: test ah,0x6
0x5cfb: je 0x5d0b
0x5cfd: mov byte ptr [rbx],0x6c
0x5d00: add rbx,0x1
0x5d04: mov byte ptr [rbx],0x6c
0x5d07: add rbx,0x1
0x5d0b: movzx eax,byte ptr [r13+0x48]
0x5d10: mov byte ptr [rbx+0x1],0x0
0x5d14: mov byte ptr [rbx],al
0x5d16: mov rax,qword ptr [r13+0x28]
0x5d1a: cmp rax,-0x1
0x5d1e: je 0x6450
0x5d24: shl rax,0x5
0x5d28: add rax,r8
0x5d2b: cmp dword ptr [rax],0x5
0x5d2e: jne 0x6816
0x5d34: mov eax,dword ptr [rax+0x10]
0x5d37: mov dword ptr [rbp-0x3e0],0x1
0x5d41: mov dword ptr [rbp-0x3b8],eax
0x5d47: mov rax,qword ptr [r13+0x40]
0x5d4b: cmp rax,-0x1
0x5d4f: je 0x5d7c
0x5d51: shl rax,0x5
0x5d55: add r8,rax
0x5d58: cmp dword ptr [r8],0x5
0x5d5c: jne 0x6816
0x5d62: mov eax,dword ptr [rbp-0x3e0]
0x5d68: mov edx,dword ptr [r8+0x10]
0x5d6c: mov dword ptr [rbp+rax*4-0x3b8],edx
0x5d73: lea eax,[rax+0x1]
0x5d76: mov dword ptr [rbp-0x3e0],eax
0x5d7c: mov rax,r14
0x5d7f: xor edx,edx
0x5d81: add rax,0x2
0x5d85: jb 0x69ec
0x5d8b: cmp r12,rax
0x5d8e: jae 0x5ddb
0x5d90: test r12,r12
0x5d93: jne 0x65b8
0x5d99: cmp rax,0xc
0x5d9d: ja 0x65d0
0x5da3: mov r12d,0xc
0x5da9: cmp r15,qword ptr [rbp-0x3e8]
0x5db0: sete dl
0x5db3: test r15,r15
0x5db6: je 0x6600
0x5dbc: test dl,dl
0x5dbe: jne 0x6600
0x5dc4: mov rsi,r12
0x5dc7: mov rdi,r15
0x5dca: call 0x1790
0x5dcf: test rax,rax
0x5dd2: je 0x5a55
0x5dd8: mov r15,rax
0x5ddb: mov byte ptr [r15+r14],0x0
0x5de0: call 0x15a0
0x5de5: mov qword ptr [rbp-0x3c8],rax
0x5dec: mov eax,dword ptr [rax]
0x5dee: mov qword ptr [rbp-0x3f8],rbx
0x5df5: mov dword ptr [rbp-0x424],eax
0x5dfb: nop dword ptr [rax+rax]
0x5e00: mov rax,qword ptr [rbp-0x3c8]
0x5e07: mov rbx,r12
0x5e0a: mov r10d,0x7fffffff
0x5e10: sub rbx,r14
0x5e13: mov dword ptr [rbp-0x3bc],0xffffffff
0x5e1d: cmp rbx,0x7fffffff
0x5e24: mov dword ptr [rax],0x0
0x5e2a: mov eax,dword ptr [rbp-0x3d0]
0x5e30: cmovbe r10,rbx
0x5e34: cmp eax,0x11
0x5e37: ja 0x6816
0x5e3d: lea rsi,[rip+0x2df8]
0x5e44: movsxd rax,dword ptr [rsi+rax*4]
0x5e48: add rax,rsi
0x5e4b: jmp rax
0x6358: cmp rax,-0x1
0x635c: jne 0x6816
0x6362: mov rax,r14
0x6365: add rax,0x1
0x6369: mov rbx,rax
0x636c: jae 0x63f8
0x6372: cmp r12,-0x1
0x6376: jne 0x5a55
0x637c: mov rbx,r12
0x637f: mov byte ptr [r15+r14],0x25
0x6384: mov r8,qword ptr [r13+0x8]
0x6388: add r13,0x58
0x638c: mov rcx,qword ptr [r13]
0x6390: add qword ptr [rbp-0x400],0x1
0x6398: cmp rcx,r8
0x639b: jne 0x5a39
0x63b8: call 0x15a0
0x63bd: mov qword ptr [rbp-0x3c8],rax
0x63c4: jmp 0x5a87
0x63d0: mov edx,edi
0x63d2: sub edx,0x12
0x63d5: cmp edx,0x4
0x63d8: ja 0x6816
0x63de: lea rdi,[rip+0x289f]
0x63e5: mov rax,qword ptr [rax+0x10]
0x63e9: movsxd rdx,dword ptr [rdi+rdx*4]
0x63ed: add rdx,rdi
0x63f0: jmp rdx
0x63f8: cmp r12,rax
0x63fb: jae 0x637f
0x63fd: test r12,r12
0x6400: jne 0x67d0
0x6406: cmp rax,0xc
0x640a: ja 0x67e2
0x6410: mov r12d,0xc
0x6416: cmp r15,qword ptr [rbp-0x3e8]
0x641d: sete dl
0x6420: test r15,r15
0x6423: je 0x6690
0x6429: test dl,dl
0x642b: jne 0x6690
0x6431: mov rsi,r12
0x6434: mov rdi,r15
0x6437: call 0x1790
0x643c: test rax,rax
0x643f: je 0x653b
0x6445: mov r15,rax
0x6448: jmp 0x637f
0x6450: mov dword ptr [rbp-0x3e0],0x0
0x645a: jmp 0x5d47
0x6460: js 0x5a55
0x6466: add r12,r12
0x6469: cmp r12,rax
0x646c: jae 0x5b46
0x64de: test dl,dl
0x64e0: je 0x66e0
0x64e6: mov rsi,r15
0x64e9: mov rdx,rbx
0x64ec: mov rdi,rax
0x64ef: mov qword ptr [rbp-0x3d0],r8
0x64f6: mov qword ptr [rbp-0x3c8],rcx
0x64fd: call 0x1720
0x6502: mov rcx,qword ptr [rbp-0x3c8]
0x6509: mov r15,rax
0x650c: mov r8,qword ptr [rbp-0x3d0]
0x6513: jmp 0x5b94
0x6520: mov r14,r12
0x6523: jmp 0x5b94
0x653b: call 0x15a0
0x6540: mov qword ptr [rbp-0x3c8],rax
0x6547: nop word ptr [rax+rax]
0x65b8: js 0x5a55
0x65be: add r12,r12
0x65c1: cmp r12,rax
0x65c4: jae 0x5da9
0x65ca: nop word ptr [rax+rax]
0x65d0: test rdx,rdx
0x65d3: jne 0x5a55
0x65d9: cmp rax,-0x1
0x65dd: je 0x5a55
0x65e3: cmp r15,qword ptr [rbp-0x3e8]
0x65ea: mov r12,rax
0x65ed: sete dl
0x65f0: test r15,r15
0x65f3: jne 0x5dbc
0x65f9: nop dword ptr [rax]
0x6600: mov rdi,r12
0x6603: mov byte ptr [rbp-0x3c8],dl
0x6609: call 0x1750
0x660e: test rax,rax
0x6611: mov rcx,rax
0x6614: movzx edx,byte ptr [rbp-0x3c8]
0x661b: je 0x5a55
0x6621: test r14,r14
0x6624: je 0x67c0
0x662a: test dl,dl
0x662c: je 0x67c0
0x6632: mov rsi,r15
0x6635: mov rdx,r14
0x6638: mov rdi,rax
0x663b: call 0x1720
0x6640: mov r15,rax
0x6643: jmp 0x5ddb
0x6650: mov byte ptr [rbx],0x4c
0x6653: add rbx,0x1
0x6657: jmp 0x5d0b
0x6690: mov rdi,r12
0x6693: mov byte ptr [rbp-0x3c8],dl
0x6699: call 0x1750
0x669e: test rax,rax
0x66a1: mov rcx,rax
0x66a4: movzx edx,byte ptr [rbp-0x3c8]
0x66ab: je 0x5a55
0x66b1: test r14,r14
0x66b4: je 0x67f4
0x66ba: test dl,dl
0x66bc: je 0x67f4
0x66c2: mov rsi,r15
0x66c5: mov rdx,r14
0x66c8: mov rdi,rax
0x66cb: call 0x1720
0x66d0: mov r15,rax
0x66d3: jmp 0x637f
0x67c0: mov r15,rcx
0x67c3: jmp 0x5ddb
0x67d0: js 0x5a55
0x67d6: add r12,r12
0x67d9: cmp r12,rax
0x67dc: jae 0x6416
0x67e2: cmp rax,-0x1
0x67e6: je 0x5a55
0x67ec: mov r12,rax
0x67ef: jmp 0x6416
0x67f4: mov r15,rcx
0x67f7: jmp 0x637f
0x6816: call 0x1590
0x681b: nop dword ptr [rax+rax]
0x6837: call 0x1580
0x68fd: mov rdi,rax
0x6900: call 0x1580
0x691c: call 0x1580
0x69ec: cmp r12,-0x1
0x69f0: mov edx,0x1
0x69f5: je 0x5ddb
0x69fb: test r12,r12
0x69fe: je 0x5a55
0x6a04: jns 0x65d0
0x6a0a: jmp 0x5a55
0x6a80: mov eax,0xffffffff
0x6a85: ret 
0x701e: mov rdi,rcx
0x7021: call 0x1790
0x7026: mov rdx,qword ptr [r15+0x8]
0x702a: mov r8,qword ptr [rsp+0x30]
0x702f: mov rcx,rax
0x7032: mov r10,qword ptr [rsp+0x38]
0x7037: mov r9,qword ptr [rsp+0x40]
0x7479: call 0x1580
0x7717: call 0x1580
0x7970: rep ret 
