0x26f0: sub rsp,0x8
0x26f4: mov rax,qword ptr [rip+0x2158d5]
0x26fb: test rax,rax
0x26fe: je 0x2702
0x2700: call rax
0x2702: add rsp,0x8
0x2706: ret 
0x2716: jmp qword ptr [rip+0x21567c]
0x2740: jmp qword ptr [rip+0x21566a]
0x27b0: jmp qword ptr [rip+0x215632]
0x27c0: jmp qword ptr [rip+0x21562a]
0x2870: jmp qword ptr [rip+0x2155d2]
0x2890: jmp qword ptr [rip+0x2155c2]
0x28e0: jmp qword ptr [rip+0x21559a]
0x2930: jmp qword ptr [rip+0x215572]
0x29b0: jmp qword ptr [rip+0x215532]
0x2a00: jmp qword ptr [rip+0x21550a]
0x2a80: jmp qword ptr [rip+0x2154ca]
0x2b10: jmp qword ptr [rip+0x215482]
0x2b20: jmp qword ptr [rip+0x21547a]
0x2b30: jmp qword ptr [rip+0x215472]
0x2b40: jmp qword ptr [rip+0x21546a]
0x2b50: jmp qword ptr [rip+0x215462]
0x2b60: jmp qword ptr [rip+0x21547a]
0x2b70: mov eax,edi
0x2b72: mov ecx,0x64
0x2b77: push rbx
0x2b78: cltd 
0x2b79: mov rbx,rsi
0x2b7c: idiv ecx
0x2b7e: xor ecx,ecx
0x2b80: lea r8d,[rax+0x13]
0x2b84: mov esi,edx
0x2b86: sar esi,0x1f
0x2b89: mov eax,r8d
0x2b8c: xor edx,esi
0x2b8e: sar eax,0x1f
0x2b91: xor r8d,eax
0x2b94: cmp edi,0xfffff894
0x2b9a: lea rdi,[rip+0x10462]
0x2ba1: setge cl
0x2ba4: sub edx,esi
0x2ba6: sub r8d,eax
0x2ba9: add rcx,rdi
0x2bac: mov r9d,edx
0x2baf: mov rdi,rbx
0x2bb2: or rdx,-0x1
0x2bb6: mov esi,0x1
0x2bbb: xor eax,eax
0x2bbd: call 0x2b50
0x2bc2: mov rax,rbx
0x2bc5: pop rbx
0x2bc6: ret 
0x2d77: nop word ptr [rax+rax]
0x2dc9: nop dword ptr [rax]
0x2fa3: jmp 0x316b
0x307a: lea rsi,[rip+0xe71f]
0x3081: mov rbp,rax
0x3084: mov edx,0x5
0x3089: xor edi,edi
0x308b: call 0x2820
0x3090: mov rcx,rbp
0x3093: mov rdx,rax
0x3096: xor esi,esi
0x3098: xor edi,edi
0x309a: xor eax,eax
0x309c: mov ebp,ebx
0x309e: call 0x2a90
0x30a3: jmp 0x3018
0x31b7: mov rbx,rax
0x31ba: call 0x2780
0x31bf: mov esi,dword ptr [rax]
0x31c1: lea rdx,[rip+0xfc18]
0x31c8: mov rcx,rbx
0x31cb: mov edi,0x1
0x31d0: xor eax,eax
0x31d2: call 0x2a90
0x31d7: mov edi,0x2006c
0x31dc: call 0x2a00
0x31e1: cmp byte ptr [rax],0x0
0x31e4: mov rbx,rax
0x31e7: jne 0x2eed
0x31ed: lea rbx,[rip+0xe52b]
0x31f4: jmp 0x2eed
0x324e: lea rsi,[rip+0xe54b]
0x3255: mov rbx,rax
0x3258: mov edx,0x5
0x325d: xor edi,edi
0x325f: call 0x2820
0x3264: mov rcx,rbx
0x3267: mov rdx,rax
0x326a: xor esi,esi
0x326c: mov edi,0x1
0x3271: xor eax,eax
0x3273: call 0x2a90
0x327d: mov dword ptr [rip+0x214e35],ecx
0x3283: lea rbx,[rdi+0x1]
0x3287: jmp 0x2ee4
0x32a4: lea rsi,[rip+0xe4d2]
0x32ab: mov rbx,rax
0x32ae: mov edx,0x5
0x32b3: xor edi,edi
0x32b5: call 0x2820
0x32ba: mov rcx,rbx
0x32bd: mov rdx,rax
0x32c0: xor esi,esi
0x32c2: xor edi,edi
0x32c4: xor eax,eax
0x32c6: call 0x2a90
0x3322: mov edx,0x5
0x3327: mov rbx,rax
0x332a: lea rsi,[rip+0xf877]
0x3331: jmp 0x32b3
0x3333: call 0x2850
0x3349: mov rbx,rax
0x334c: call 0x2780
0x3351: mov esi,dword ptr [rax]
0x3353: lea rdx,[rip+0xfa86]
0x335a: mov rcx,rbx
0x335d: mov edi,0x1
0x3362: xor eax,eax
0x3364: call 0x2a90
0x338a: jmp 0x32cb
0x33ae: mov rbx,rax
0x33b1: call 0x2780
0x33b6: mov esi,dword ptr [rax]
0x33b8: lea rdx,[rip+0xfa21]
0x33bf: mov rcx,rbx
0x33c2: mov edi,0x1
0x33c7: xor eax,eax
0x33c9: call 0x2a90
0x33ce: nop 
0x33fa: hlt 
0x33fb: nop dword ptr [rax+rax]
0x3400: lea rdi,[rip+0x214c99]
0x3407: push rbp
0x3408: lea rax,[rip+0x214c91]
0x340f: cmp rax,rdi
0x3412: mov rbp,rsp
0x3415: je 0x3430
0x3417: mov rax,qword ptr [rip+0x214ba2]
0x341e: test rax,rax
0x3421: je 0x3430
0x3423: pop rbp
0x3424: jmp rax
0x3430: pop rbp
0x3431: ret 
0x3440: lea rdi,[rip+0x214c59]
0x3447: lea rsi,[rip+0x214c52]
0x344e: push rbp
0x344f: sub rsi,rdi
0x3452: mov rbp,rsp
0x3455: sar rsi,0x3
0x3459: mov rax,rsi
0x345c: shr rax,0x3f
0x3460: add rsi,rax
0x3463: sar rsi, 1
0x3466: je 0x3480
0x3468: mov rax,qword ptr [rip+0x214b69]
0x346f: test rax,rax
0x3472: je 0x3480
0x3474: pop rbp
0x3475: jmp rax
0x3480: pop rbp
0x3481: ret 
0x34a1: push rbp
0x34a2: mov rbp,rsp
0x34a5: je 0x34b3
0x34a7: mov rdi,qword ptr [rip+0x214b5a]
0x34ae: call 0x2b60
0x34b3: call 0x3400
0x34b8: mov byte ptr [rip+0x214c29],0x1
0x34bf: pop rbp
0x34c0: ret 
0x34d0: push rbp
0x34d1: mov rbp,rsp
0x34d4: pop rbp
0x34d5: jmp 0x3440
0x3590: mov rdi,qword ptr [rsp]
0x3594: lea rsi,[rsp+0x50]
0x3599: call 0x5ed0
0x359e: mov rdi,rax
0x35a1: call 0xc730
0x35a6: lea rsi,[rip+0xe0b7]
0x35ad: mov rbx,rax
0x35b0: mov edx,0x5
0x35b5: xor edi,edi
0x35b7: call 0x2820
0x35bc: mov rcx,rbx
0x35bf: mov rdx,rax
0x35c2: xor esi,esi
0x35c4: xor eax,eax
0x35c6: xor edi,edi
0x35c8: call 0x2a90
0x35cd: xor eax,eax
0x35cf: jmp 0x356e
0x35d8: lea rsi,[rip+0xff9b]
0x35df: mov edi,0x2
0x35e4: call 0x2a50
0x35e9: mov r8d,dword ptr [rsp+0x8]
0x35ee: mov rdi,qword ptr [rip+0x214ab3]
0x35f5: mov rsi,r12
0x35f8: mov rcx,rbp
0x35fb: mov rdx,rbx
0x35fe: call 0x5e20
0x3603: lea rsi,[rip+0xfca5]
0x360a: mov edi,0x2
0x360f: call 0x2a50
0x3614: jmp 0x3549
0x362a: mov eax,0x1
0x362f: jmp 0x356e
0x3634: call 0x2850
0x3639: nop dword ptr [rax]
0x3ce0: mov edi,0x1
0x3ce5: jmp 0x3640
0x3e43: mov rdx,r12
0x3e46: mov rbp,rax
0x3e49: mov esi,0x8
0x3e4e: xor edi,edi
0x3e50: call 0xc340
0x3e55: mov r8,rbp
0x3e58: mov rdx,rbx
0x3e5b: mov rcx,rax
0x3e5e: pop rbx
0x3e5f: pop rbp
0x3e60: pop r12
0x3e62: xor esi,esi
0x3e64: xor edi,edi
0x3e66: xor eax,eax
0x3e68: jmp 0x2a90
0x3e90: push r15
0x3e92: push r14
0x3e94: mov r14,rdi
0x3e97: push r13
0x3e99: push r12
0x3e9b: xor edi,edi
0x3e9d: push rbp
0x3e9e: push rbx
0x3e9f: mov rbp,rsi
0x3ea2: lea rsi,[rip+0xef18]
0x3ea9: mov r12,rdx
0x3eac: mov edx,0x5
0x3eb1: sub rsp,0x8
0x3eb5: mov rbx,qword ptr [rip+0x214224]
0x3ebc: call 0x2820
0x3ec1: mov rdi,rax
0x3ec4: mov rsi,rbx
0x3ec7: call 0x2920
0x3ecc: mov r15,qword ptr [r14]
0x3ecf: test r15,r15
0x3ed2: je 0x3f68
0x3ed8: xor r13d,r13d
0x3edb: xor ebx,ebx
0x3edd: jmp 0x3f18
0x3ee0: mov rdi,r15
0x3ee3: add rbx,0x1
0x3ee7: mov r13,rbp
0x3eea: call 0xc730
0x3eef: mov rdi,qword ptr [rip+0x2141ea]
0x3ef6: lea rdx,[rip+0xeed9]
0x3efd: mov rcx,rax
0x3f00: mov esi,0x1
0x3f05: xor eax,eax
0x3f07: add rbp,r12
0x3f0a: call 0x2b00
0x3f0f: mov r15,qword ptr [r14+rbx*8]
0x3f13: test r15,r15
0x3f16: je 0x3f68
0x3f18: test rbx,rbx
0x3f1b: je 0x3ee0
0x3f1d: mov rdx,r12
0x3f20: mov rsi,rbp
0x3f23: mov rdi,r13
0x3f26: call 0x2910
0x3f2b: test eax,eax
0x3f2d: jne 0x3ee0
0x3f2f: mov rdi,r15
0x3f32: add rbx,0x1
0x3f36: add rbp,r12
0x3f39: call 0xc730
0x3f3e: mov rdi,qword ptr [rip+0x21419b]
0x3f45: lea rdx,[rip+0xee92]
0x3f4c: mov rcx,rax
0x3f4f: mov esi,0x1
0x3f54: xor eax,eax
0x3f56: call 0x2b00
0x3f5b: mov r15,qword ptr [r14+rbx*8]
0x3f5f: test r15,r15
0x3f62: jne 0x3f18
0x3f64: nop dword ptr [rax]
0x3f68: mov rdi,qword ptr [rip+0x214171]
0x3f6f: mov rax,qword ptr [rdi+0x28]
0x3f73: cmp rax,qword ptr [rdi+0x30]
0x3f77: jae 0x3f98
0x3f79: lea rdx,[rax+0x1]
0x3f7d: mov qword ptr [rdi+0x28],rdx
0x3f81: mov byte ptr [rax],0xa
0x3f84: add rsp,0x8
0x3f88: pop rbx
0x3f89: pop rbp
0x3f8a: pop r12
0x3f8c: pop r13
0x3f8e: pop r14
0x3f90: pop r15
0x3f92: ret 
0x3f98: add rsp,0x8
0x3f9c: mov esi,0xa
0x3fa1: pop rbx
0x3fa2: pop rbp
0x3fa3: pop r12
0x3fa5: pop r13
0x3fa7: pop r14
0x3fa9: pop r15
0x3fab: jmp 0x28a0
0x4003: mov rdx,r15
0x4006: mov rsi,rbp
0x4009: mov rdi,rbx
0x400c: call 0x3e90
0x4011: call r13
0x4014: mov rax,-0x1
0x401b: jmp 0x3fe6
0x4020: push r14
0x4022: push r13
0x4024: push r12
0x4026: push rbp
0x4027: push rbx
0x4028: mov r14,qword ptr [rsi]
0x402b: test r14,r14
0x402e: je 0x4061
0x4030: mov r12,rcx
0x4033: mov r13,rdi
0x4036: mov rbp,rdx
0x4039: lea rbx,[rsi+0x8]
0x403d: jmp 0x404f
0x4040: mov r14,qword ptr [rbx]
0x4043: add rbp,r12
0x4046: add rbx,0x8
0x404a: test r14,r14
0x404d: je 0x4061
0x404f: mov rdx,r12
0x4052: mov rsi,rbp
0x4055: mov rdi,r13
0x4058: call 0x2910
0x405d: test eax,eax
0x405f: jne 0x4040
0x4061: pop rbx
0x4062: mov rax,r14
0x4065: pop rbp
0x4066: pop r12
0x4068: pop r13
0x406a: pop r14
0x406c: ret 
0x4070: mov qword ptr [rip+0x214081],rdi
0x4077: ret 
0x4080: mov byte ptr [rip+0x214069],dil
0x4087: ret 
0x4090: push rbp
0x4091: push rbx
0x4092: sub rsp,0x8
0x4096: mov rdi,qword ptr [rip+0x21400b]
0x409d: call 0xd8c0
0x40a2: test eax,eax
0x40a4: je 0x40bc
0x40a6: call 0x2780
0x40ab: cmp byte ptr [rip+0x21403e],0x0
0x40b2: mov rbx,rax
0x40b5: je 0x40d3
0x40b7: cmp dword ptr [rax],0x20
0x40ba: jne 0x40d3
0x40bc: mov rdi,qword ptr [rip+0x21401d]
0x40c3: call 0xd8c0
0x40c8: test eax,eax
0x40ca: jne 0x4112
0x40cc: add rsp,0x8
0x40d0: pop rbx
0x40d1: pop rbp
0x40d2: ret 
0x40d3: lea rsi,[rip+0xed09]
0x40da: xor edi,edi
0x40dc: mov edx,0x5
0x40e1: call 0x2820
0x40e6: mov rdi,qword ptr [rip+0x21400b]
0x40ed: mov rbp,rax
0x40f0: test rdi,rdi
0x40f3: je 0x411d
0x40f5: call 0xc530
0x40fa: mov esi,dword ptr [rbx]
0x40fc: lea rdx,[rip+0xecec]
0x4103: mov rcx,rax
0x4106: mov r8,rbp
0x4109: xor edi,edi
0x410b: xor eax,eax
0x410d: call 0x2a90
0x4112: mov edi,dword ptr [rip+0x213f08]
0x4118: call 0x27b0
0x411d: mov esi,dword ptr [rbx]
0x411f: lea rdx,[rip+0xecba]
0x4126: mov rcx,rax
0x4129: xor edi,edi
0x412b: xor eax,eax
0x412d: call 0x2a90
0x4132: jmp 0x4112
0x4140: test rdx,rdx
0x4143: je 0x4190
0x4145: push r13
0x4147: push r12
0x4149: mov r12,rdi
0x414c: push rbp
0x414d: push rbx
0x414e: mov rbp,rdx
0x4151: mov rbx,rsi
0x4154: sub rsp,0x8
0x4158: add rbp,rbx
0x415b: call 0x2b30
0x4160: mov r13,rax
0x4163: nop dword ptr [rax+rax]
0x4168: movzx ecx,byte ptr [rbx]
0x416b: mov rax,qword ptr [r13]
0x416f: mov rsi,r12
0x4172: add rbx,0x1
0x4176: mov edi,dword ptr [rax+rcx*4]
0x4179: call 0x2900
0x417e: cmp rbx,rbp
0x4181: jne 0x4168
0x4183: add rsp,0x8
0x4187: pop rbx
0x4188: pop rbp
0x4189: pop r12
0x418b: pop r13
0x418d: ret 
0x4190: rep ret 
0x45d2: mov byte ptr [rax],r13b
0x45d5: mov byte ptr [rax+0x1],0x0
0x45d9: lea rax,[rsp+0xa0]
0x45e1: mov rcx,qword ptr [rsp]
0x45e5: mov esi,0x400
0x45ea: mov dword ptr [rsp+0x40],r10d
0x45ef: mov rdi,rax
0x45f2: mov dword ptr [rsp+0x58],r11d
0x45f7: mov qword ptr [rsp+0x38],rax
0x45fc: call 0x2a80
0x4601: test rax,rax
0x4604: je 0x4310
0x460a: movsxd r10,dword ptr [rsp+0x40]
0x460f: lea r13,[rax-0x1]
0x4613: mov eax,0x0
0x4618: mov rdx,r15
0x461b: not rdx
0x461e: test r10d,r10d
0x4621: cmovns rax,r10
0x4625: cmp r13,rax
0x4628: mov rdi,rax
0x462b: cmovae rdi,r13
0x462f: cmp rdx,rdi
0x4632: mov qword ptr [rsp+0x40],rdi
0x4637: jbe 0x42bf
0x463d: test r12,r12
0x4640: je 0x46c3
0x4646: mov r11d,dword ptr [rsp+0x58]
0x464b: test r11d,r11d
0x464e: jne 0x469b
0x4650: cmp r13,rax
0x4653: jae 0x469b
0x4655: mov eax,dword ptr [rsp+0x8]
0x4659: movsxd rbx,r10d
0x465c: sub rbx,r13
0x465f: cmp eax,0x30
0x4662: je 0x5670
0x4668: cmp eax,0x2b
0x466b: je 0x5670
0x4671: xor edx,edx
0x4673: test rbx,rbx
0x4676: je 0x469b
0x4678: mov qword ptr [rsp+0x8],rbp
0x467d: mov rbp,rdx
0x4680: mov rsi,r12
0x4683: mov edi,0x20
0x4688: add rbp,0x1
0x468c: call 0x2900
0x4691: cmp rbx,rbp
0x4694: jne 0x4680
0x4696: mov rbp,qword ptr [rsp+0x8]
0x469b: test r14b,r14b
0x469e: jne 0x5630
0x46a4: cmp byte ptr [rsp+0x34],0x0
0x46a9: je 0x5608
0x46af: mov rsi,qword ptr [rsp+0x38]
0x46b4: mov rdx,r13
0x46b7: mov rdi,r12
0x46ba: add rsi,0x1
0x46be: call 0x41a0
0x46c3: add r15,qword ptr [rsp+0x40]
0x46c8: jmp 0x4310
0x47e5: cmp r11d,0x4f
0x47e9: jne 0x5500
0x47ef: test al,al
0x47f1: je 0x5500
0x47f7: mov r13d,edi
0x47fa: mov edx,0x2520
0x47ff: xor r14d,r14d
0x4802: mov word ptr [rsp+0x9b],dx
0x480a: lea rdx,[rsp+0x9b]
0x4812: mov byte ptr [rsp+0x9d],r11b
0x481a: mov rbp,rbx
0x481d: mov r11d,esi
0x4820: lea rax,[rdx+0x3]
0x4824: jmp 0x45d2
0x48df: add r15,r13
0x48e2: mov rbp,rbx
0x48e5: jmp 0x4310
0x49d9: mov rax,qword ptr [rsp+0x38]
0x49de: mov rdx,r15
0x49e1: not rdx
0x49e4: add rax,0x17
0x49e8: sub rax,r14
0x49eb: cmp dword ptr [rsp+0x8],0x2d
0x49f0: mov qword ptr [rsp+0x40],rax
0x49f5: je 0x4a0a
0x49f7: mov r13d,dword ptr [rsp+0x58]
0x49fc: sub r13d,dword ptr [rsp+0x40]
0x4a01: test r13d,r13d
0x4a04: jg 0x5b3e
0x4a0a: test r10d,r10d
0x4a0d: mov ecx,0x0
0x4a12: mov rbp,rbx
0x4a15: cmovns ecx,r10d
0x4a19: movsxd r13,ecx
0x4a1c: mov rax,qword ptr [rsp+0x40]
0x4a21: cmp rax,r13
0x4a24: mov rbx,rax
0x4a27: cmovb rbx,r13
0x4a2b: cmp rbx,rdx
0x4a2e: jae 0x42bf
0x4a34: test r12,r12
0x4a37: je 0x4aae
0x4a39: mov edx,dword ptr [rsp+0x58]
0x4a3d: test edx,edx
0x4a3f: jne 0x4a93
0x4a41: cmp rax,r13
0x4a44: jae 0x4a93
0x4a46: movsxd r13,r10d
0x4a49: sub r13,rax
0x4a4c: mov eax,dword ptr [rsp+0x8]
0x4a50: cmp eax,0x30
0x4a53: je 0x5770
0x4a59: cmp eax,0x2b
0x4a5c: je 0x5770
0x4a62: xor edx,edx
0x4a64: test r13,r13
0x4a67: je 0x4a93
0x4a69: mov qword ptr [rsp+0x8],rbx
0x4a6e: mov rbx,rdx
0x4a71: nop dword ptr [rax]
0x4a78: mov rsi,r12
0x4a7b: mov edi,0x20
0x4a80: add rbx,0x1
0x4a84: call 0x2900
0x4a89: cmp r13,rbx
0x4a8c: jne 0x4a78
0x4a8e: mov rbx,qword ptr [rsp+0x8]
0x4a93: cmp byte ptr [rsp+0x34],0x0
0x4a98: je 0x5650
0x4a9e: mov rdx,qword ptr [rsp+0x40]
0x4aa3: mov rsi,r14
0x4aa6: mov rdi,r12
0x4aa9: call 0x41a0
0x4aae: add r15,rbx
0x4ab1: jmp 0x4310
0x4ae8: lea rax,[rsp+0xa0]
0x4af0: lea rdi,[rsp+0xb7]
0x4af8: mov r11d,0xcccccccd
0x4afe: mov qword ptr [rsp+0x38],rax
0x4b03: nop dword ptr [rax+rax]
0x4b08: test r8b,0x1
0x4b0c: lea r14,[rdi-0x1]
0x4b10: je 0x4b20
0x4b12: lea rax,[rdi-0x2]
0x4b16: mov byte ptr [rdi-0x1],0x3a
0x4b1a: mov rdi,r14
0x4b1d: mov r14,rax
0x4b20: mov eax,ecx
0x4b22: sar r8d, 1
0x4b25: mul r11d
0x4b28: shr edx,0x3
0x4b2b: lea eax,[rdx+rdx*4]
0x4b2e: add eax,eax
0x4b30: sub ecx,eax
0x4b32: mov eax,r8d
0x4b35: add ecx,0x30
0x4b38: or eax,edx
0x4b3a: mov byte ptr [rdi-0x1],cl
0x4b3d: mov ecx,edx
0x4b3f: mov rdi,r14
0x4b42: jne 0x4b08
0x4b44: cmp r10d,esi
0x4b47: cmovge esi,r10d
0x4b4b: test r13b,r13b
0x4b4e: mov dword ptr [rsp+0x58],esi
0x4b52: jne 0x5510
0x4b58: test r9b,r9b
0x4b5b: je 0x49d9
0x4b61: cmp dword ptr [rsp+0x8],0x2d
0x4b66: mov ebp,0x2b
0x4b6b: je 0x591d
0x4b71: mov rax,qword ptr [rsp+0x38]
0x4b76: mov rdx,r15
0x4b79: not rdx
0x4b7c: add rax,0x17
0x4b80: sub rax,r14
0x4b83: mov rdi,rax
0x4b86: mov qword ptr [rsp+0x40],rax
0x4b8b: mov eax,dword ptr [rsp+0x58]
0x4b8f: sub eax,0x1
0x4b92: sub eax,edi
0x4b94: test eax,eax
0x4b96: mov r13d,eax
0x4b99: jle 0x5860
0x4b9f: cmp dword ptr [rsp+0x8],0x5f
0x4ba4: je 0x57bc
0x4baa: movsxd rax,dword ptr [rsp+0x58]
0x4baf: cmp rax,rdx
0x4bb2: mov rdi,rax
0x4bb5: jae 0x42bf
0x4bbb: test r10d,r10d
0x4bbe: mov eax,0x0
0x4bc3: mov ecx,0x1
0x4bc8: cmovns eax,r10d
0x4bcc: cltq 
0x4bce: test rax,rax
0x4bd1: cmovne rcx,rax
0x4bd5: cmp rcx,rdx
0x4bd8: mov qword ptr [rsp+0x48],rcx
0x4bdd: jae 0x42bf
0x4be3: test r12,r12
0x4be6: je 0x4c4c
0x4be8: test edi,edi
0x4bea: jne 0x4c40
0x4bec: cmp rax,0x1
0x4bf0: jbe 0x4c40
0x4bf2: mov edi,dword ptr [rsp+0x8]
0x4bf6: movsxd r10,r10d
0x4bf9: lea rax,[r10-0x1]
0x4bfd: cmp edi,0x30
0x4c00: mov qword ptr [rsp+0x38],rax
0x4c05: je 0x5d10
0x4c0b: cmp edi,0x2b
0x4c0e: je 0x5d10
0x4c14: xor edx,edx
0x4c16: test rax,rax
0x4c19: je 0x4c40
0x4c1b: mov qword ptr [rsp+0x50],rbx
0x4c20: mov rbx,rdx
0x4c23: mov rsi,r12
0x4c26: mov edi,0x20
0x4c2b: add rbx,0x1
0x4c2f: call 0x2900
0x4c34: cmp qword ptr [rsp+0x38],rbx
0x4c39: jne 0x4c23
0x4c3b: mov rbx,qword ptr [rsp+0x50]
0x4c40: movsx edi,bpl
0x4c44: mov rsi,r12
0x4c47: call 0x2900
0x4c4c: add r15,qword ptr [rsp+0x48]
0x4c51: mov rbp,rbx
0x4c54: movsxd rbx,r13d
0x4c57: xor r13d,r13d
0x4c5a: test r12,r12
0x4c5d: je 0x4c76
0x4c5f: nop 
0x4c60: mov rsi,r12
0x4c63: mov edi,0x30
0x4c68: add r13,0x1
0x4c6c: call 0x2900
0x4c71: cmp r13,rbx
0x4c74: jne 0x4c60
0x4c76: add r15,rbx
0x4c79: xor r13d,r13d
0x4c7c: xor r10d,r10d
0x4c7f: mov rdx,r15
0x4c82: not rdx
0x4c85: jmp 0x4a1c
0x4e31: mov eax,0x1
0x4e36: xor r13d,r13d
0x4e39: cmp dword ptr [rsp+0x8],0x2b
0x4e3e: je 0x5ddd
0x4e44: xor r9d,r9d
0x4e47: mov esi,0x2
0x4e4c: xor r8d,r8d
0x4e4f: jmp 0x47e5
0x5500: mov eax,ecx
0x5502: neg eax
0x5504: test r13b,r13b
0x5507: cmovne ecx,eax
0x550a: jmp 0x4ae8
0x5510: cmp dword ptr [rsp+0x8],0x2d
0x5515: mov ebp,0x2d
0x551a: jne 0x4b71
0x5520: mov byte ptr [rsp+0x40],0x2d
0x5525: test r10d,r10d
0x5528: mov ecx,0x0
0x552d: mov eax,0x1
0x5532: cmovns ecx,r10d
0x5536: movsxd r13,ecx
0x5539: test r13,r13
0x553c: cmovne rax,r13
0x5540: mov rdi,rax
0x5543: mov qword ptr [rsp+0x8],rax
0x5548: mov rax,r15
0x554b: not rax
0x554e: cmp rax,rdi
0x5551: jbe 0x42bf
0x5557: test r12,r12
0x555a: je 0x55b9
0x555c: mov edi,dword ptr [rsp+0x58]
0x5560: test edi,edi
0x5562: jne 0x55a2
0x5564: cmp r13,0x1
0x5568: jbe 0x55a2
0x556a: movsxd rax,r10d
0x556d: sub rax,0x1
0x5571: je 0x55a2
0x5573: mov qword ptr [rsp+0x48],rbx
0x5578: xor ebp,ebp
0x557a: mov rbx,rax
0x557d: mov dword ptr [rsp+0x50],r10d
0x5582: mov rsi,r12
0x5585: mov edi,0x20
0x558a: add rbp,0x1
0x558e: call 0x2900
0x5593: cmp rbx,rbp
0x5596: jne 0x5582
0x5598: mov rbx,qword ptr [rsp+0x48]
0x559d: mov r10d,dword ptr [rsp+0x50]
0x55a2: movsx edi,byte ptr [rsp+0x40]
0x55a7: mov rsi,r12
0x55aa: mov dword ptr [rsp+0x48],r10d
0x55af: call 0x2900
0x55b4: mov r10d,dword ptr [rsp+0x48]
0x55b9: add r15,qword ptr [rsp+0x8]
0x55be: mov rax,qword ptr [rsp+0x38]
0x55c3: mov rbp,rbx
0x55c6: mov dword ptr [rsp+0x8],0x2d
0x55ce: add rax,0x17
0x55d2: sub rax,r14
0x55d5: mov rdx,r15
0x55d8: mov qword ptr [rsp+0x40],rax
0x55dd: not rdx
0x55e0: jmp 0x4a1c
0x5608: mov rdi,qword ptr [rsp+0x38]
0x560d: mov rcx,r12
0x5610: mov edx,0x1
0x5615: mov rsi,r13
0x5618: add rdi,0x1
0x561c: call 0x2af0
0x5621: jmp 0x46c3
0x5630: mov rsi,qword ptr [rsp+0x38]
0x5635: mov rdx,r13
0x5638: mov rdi,r12
0x563b: add rsi,0x1
0x563f: call 0x4140
0x5644: jmp 0x46c3
0x5650: mov rsi,qword ptr [rsp+0x40]
0x5655: mov rcx,r12
0x5658: mov edx,0x1
0x565d: mov rdi,r14
0x5660: call 0x2af0
0x5665: jmp 0x4aae
0x5670: test rbx,rbx
0x5673: je 0x469b
0x5679: xor edx,edx
0x567b: mov qword ptr [rsp+0x8],rbp
0x5680: mov rbp,rdx
0x5683: nop dword ptr [rax+rax]
0x5688: mov rsi,r12
0x568b: mov edi,0x30
0x5690: add rbp,0x1
0x5694: call 0x2900
0x5699: cmp rbx,rbp
0x569c: jne 0x5688
0x569e: jmp 0x4696
0x5737: sub rsp,0x8
0x573b: mov r9d,r14d
0x573e: mov ecx,ebp
0x5740: mov eax,dword ptr [rsp+0x508]
0x5747: mov rdi,r12
0x574a: push rax
0x574b: push qword ptr [rsp+0x20]
0x574f: push qword ptr [rsp+0x30]
0x5753: mov r8d,dword ptr [rsp+0x28]
0x5758: mov rdx,qword ptr [rsp+0x20]
0x575d: mov rsi,qword ptr [rsp+0x58]
0x5762: call 0x4200
0x5767: add rsp,0x20
0x576b: jmp 0x48df
0x5770: test r13,r13
0x5773: je 0x4a93
0x5779: xor edx,edx
0x577b: mov qword ptr [rsp+0x8],rbx
0x5780: mov rbx,rdx
0x5783: nop dword ptr [rax+rax]
0x5788: mov rsi,r12
0x578b: mov edi,0x30
0x5790: add rbx,0x1
0x5794: call 0x2900
0x5799: cmp r13,rbx
0x579c: jne 0x5788
0x579e: jmp 0x4a8e
0x57ba: xor ebp,ebp
0x57bc: movsxd rax,r13d
0x57bf: cmp rax,rdx
0x57c2: mov qword ptr [rsp+0x8],rax
0x57c7: jae 0x42bf
0x57cd: test r12,r12
0x57d0: je 0x5815
0x57d2: xor edx,edx
0x57d4: mov byte ptr [rsp+0x40],bpl
0x57d9: mov qword ptr [rsp+0x48],rbx
0x57de: mov rbp,rdx
0x57e1: mov rbx,rax
0x57e4: mov dword ptr [rsp+0x50],r10d
0x57e9: nop dword ptr [rax]
0x57f0: mov rsi,r12
0x57f3: mov edi,0x20
0x57f8: add rbp,0x1
0x57fc: call 0x2900
0x5801: cmp rbx,rbp
0x5804: ja 0x57f0
0x5806: movzx ebp,byte ptr [rsp+0x40]
0x580b: mov rbx,qword ptr [rsp+0x48]
0x5810: mov r10d,dword ptr [rsp+0x50]
0x5815: add r15,qword ptr [rsp+0x8]
0x581a: mov eax,r10d
0x581d: sub eax,r13d
0x5820: cmp r10d,r13d
0x5823: mov r10d,0x0
0x5829: cmovg r10d,eax
0x582d: test bpl,bpl
0x5830: mov rdx,r15
0x5833: not rdx
0x5836: jne 0x5963
0x583c: mov rax,qword ptr [rsp+0x38]
0x5841: movsxd r13,r10d
0x5844: mov rbp,rbx
0x5847: mov dword ptr [rsp+0x8],0x5f
0x584f: add rax,0x17
0x5853: sub rax,r14
0x5856: mov qword ptr [rsp+0x40],rax
0x585b: jmp 0x4a1c
0x5860: test r10d,r10d
0x5863: mov ecx,0x0
0x5868: mov eax,0x1
0x586d: cmovns ecx,r10d
0x5871: movsxd r13,ecx
0x5874: test r13,r13
0x5877: cmovne rax,r13
0x587b: cmp rax,rdx
0x587e: mov qword ptr [rsp+0x48],rax
0x5883: jae 0x42bf
0x5889: test r12,r12
0x588c: je 0x590a
0x588e: mov ecx,dword ptr [rsp+0x58]
0x5892: test ecx,ecx
0x5894: jne 0x58f4
0x5896: cmp r13,0x1
0x589a: jbe 0x58f4
0x589c: mov edi,dword ptr [rsp+0x8]
0x58a0: movsxd rax,r10d
0x58a3: sub rax,0x1
0x58a7: mov qword ptr [rsp+0x38],rax
0x58ac: cmp edi,0x30
0x58af: je 0x5d76
0x58b5: cmp edi,0x2b
0x58b8: je 0x5d76
0x58be: xor edx,edx
0x58c0: test rax,rax
0x58c3: je 0x58f4
0x58c5: mov qword ptr [rsp+0x50],rbx
0x58ca: mov dword ptr [rsp+0x5c],r10d
0x58cf: mov rbx,rdx
0x58d2: mov rsi,r12
0x58d5: mov edi,0x20
0x58da: add rbx,0x1
0x58de: call 0x2900
0x58e3: cmp qword ptr [rsp+0x38],rbx
0x58e8: jne 0x58d2
0x58ea: mov rbx,qword ptr [rsp+0x50]
0x58ef: mov r10d,dword ptr [rsp+0x5c]
0x58f4: movsx edi,bpl
0x58f8: mov rsi,r12
0x58fb: mov dword ptr [rsp+0x38],r10d
0x5900: call 0x2900
0x5905: mov r10d,dword ptr [rsp+0x38]
0x590a: add r15,qword ptr [rsp+0x48]
0x590f: mov rbp,rbx
0x5912: mov rdx,r15
0x5915: not rdx
0x5918: jmp 0x4a1c
0x591d: mov byte ptr [rsp+0x40],0x2b
0x5922: jmp 0x5525
0x5931: cmp edx,ecx
0x5933: mov r9d,0x1
0x5939: mov dword ptr [rsp+0x8],0x2b
0x5941: jb 0x4e4c
0x5947: cmp r10d,esi
0x594a: mov dword ptr [rsp+0x8],0x2b
0x5952: setg r9b
0x5956: jmp 0x4e4c
0x5963: movsxd rcx,r10d
0x5966: mov r13d,0x1
0x596c: test rcx,rcx
0x596f: cmovne r13,rcx
0x5973: cmp r13,rdx
0x5976: mov qword ptr [rsp+0x8],r13
0x597b: jae 0x42bf
0x5981: test r12,r12
0x5984: je 0x59f5
0x5986: mov esi,dword ptr [rsp+0x58]
0x598a: test esi,esi
0x598c: jne 0x59d5
0x598e: cmp r10d,0x1
0x5992: jbe 0x59d5
0x5994: lea rax,[rcx-0x1]
0x5998: xor r13d,r13d
0x599b: mov qword ptr [rsp+0x48],rbx
0x59a0: mov dword ptr [rsp+0x50],r10d
0x59a5: mov rbx,r13
0x59a8: mov r13,rcx
0x59ab: mov qword ptr [rsp+0x40],rax
0x59b0: mov rsi,r12
0x59b3: mov edi,0x20
0x59b8: add rbx,0x1
0x59bc: call 0x2900
0x59c1: cmp qword ptr [rsp+0x40],rbx
0x59c6: jne 0x59b0
0x59c8: mov rbx,qword ptr [rsp+0x48]
0x59cd: mov r10d,dword ptr [rsp+0x50]
0x59d2: mov rcx,r13
0x59d5: movsx edi,bpl
0x59d9: mov rsi,r12
0x59dc: mov dword ptr [rsp+0x48],r10d
0x59e1: mov qword ptr [rsp+0x40],rcx
0x59e6: call 0x2900
0x59eb: mov r10d,dword ptr [rsp+0x48]
0x59f0: mov rcx,qword ptr [rsp+0x40]
0x59f5: add r15,qword ptr [rsp+0x8]
0x59fa: mov rax,qword ptr [rsp+0x38]
0x59ff: mov r13,rcx
0x5a02: mov rbp,rbx
0x5a05: mov dword ptr [rsp+0x8],0x5f
0x5a0d: add rax,0x17
0x5a11: sub rax,r14
0x5a14: mov rdx,r15
0x5a17: mov qword ptr [rsp+0x40],rax
0x5a1c: not rdx
0x5a1f: jmp 0x4a1c
0x5a41: mov eax,dword ptr [rsp+0x24]
0x5a45: cmp eax,0x2b
0x5a48: je 0x5dcb
0x5a4e: mov dword ptr [rsp+0x8],eax
0x5a52: xor r9d,r9d
0x5a55: mov eax,0x1
0x5a5a: xor r13d,r13d
0x5a5d: mov esi,0x2
0x5a62: jmp 0x4e4c
0x5b3e: cmp dword ptr [rsp+0x8],0x5f
0x5b43: je 0x57ba
0x5b49: movsxd rax,dword ptr [rsp+0x58]
0x5b4e: cmp rax,rdx
0x5b51: jb 0x4c51
0x5b57: jmp 0x42bf
0x5d10: cmp qword ptr [rsp+0x38],0x0
0x5d16: je 0x4c40
0x5d1c: xor edx,edx
0x5d1e: mov qword ptr [rsp+0x50],rbx
0x5d23: mov rbx,rdx
0x5d26: mov rsi,r12
0x5d29: mov edi,0x30
0x5d2e: add rbx,0x1
0x5d32: call 0x2900
0x5d37: cmp qword ptr [rsp+0x38],rbx
0x5d3c: jne 0x5d26
0x5d3e: jmp 0x4c3b
0x5d76: cmp qword ptr [rsp+0x38],0x0
0x5d7c: je 0x58f4
0x5d82: xor edx,edx
0x5d84: mov qword ptr [rsp+0x50],rbx
0x5d89: mov dword ptr [rsp+0x5c],r10d
0x5d8e: mov rbx,rdx
0x5d91: mov rsi,r12
0x5d94: mov edi,0x30
0x5d99: add rbx,0x1
0x5d9d: call 0x2900
0x5da2: cmp qword ptr [rsp+0x38],rbx
0x5da7: jne 0x5d91
0x5da9: jmp 0x58ea
0x5dcb: mov eax,0x1
0x5dd0: xor r13d,r13d
0x5dd3: mov esi,0x2
0x5dd8: jmp 0x5947
0x5ddd: mov esi,0x2
0x5de2: mov edx,0x63
0x5de7: jmp 0x5931
0x5df8: call 0x2850
0x5dfd: add ecx,0x64
0x5e00: cmp dword ptr [rsp+0x8],0x0
0x5e05: je 0x5a41
0x5e0b: jmp 0x4e31
0x5e6b: call 0x2850
0x5e80: sub rsp,0x28
0x5e84: xor edi,edi
0x5e86: mov rsi,rsp
0x5e89: mov rax,qword ptr fs:0x28
0x5e92: mov qword ptr [rsp+0x18],rax
0x5e97: xor eax,eax
0x5e99: call 0x27d0
0x5e9e: mov rcx,qword ptr [rsp+0x18]
0x5ea3: xor rcx,qword ptr fs:0x28
0x5eac: mov rax,qword ptr [rsp]
0x5eb0: mov rdx,qword ptr [rsp+0x8]
0x5eb5: jne 0x5ebc
0x5eb7: add rsp,0x28
0x5ebb: ret 
0x5ebc: call 0x2850
0x5ec1: nop word ptr cs:[rax+rax]
0x5ecb: nop dword ptr [rax+rax]
0x5ed0: test rdi,rdi
0x5ed3: lea rcx,[rsi+0x14]
0x5ed7: mov byte ptr [rsi+0x14],0x0
0x5edb: movabsq r9,0x6666666666666667
0x5ee5: movabsq rsi,-0x3333333333333333
0x5eef: mov r8d,0x30
0x5ef5: js 0x5f33
0x5ef7: nop word ptr [rax+rax]
0x5f00: mov rax,rdi
0x5f03: sub rcx,0x1
0x5f07: mul rsi
0x5f0a: shr rdx,0x3
0x5f0e: lea rax,[rdx+rdx*4]
0x5f12: add rax,rax
0x5f15: sub rdi,rax
0x5f18: add edi,0x30
0x5f1b: test rdx,rdx
0x5f1e: mov byte ptr [rcx],dil
0x5f21: mov rdi,rdx
0x5f24: jne 0x5f00
0x5f26: mov rax,rcx
0x5f29: ret 
0x5f30: mov rcx,rsi
0x5f33: mov rax,rdi
0x5f36: lea rsi,[rcx-0x1]
0x5f3a: imul r9
0x5f3d: mov rax,rdi
0x5f40: sar rax,0x3f
0x5f44: sar rdx,0x2
0x5f48: sub rdx,rax
0x5f4b: lea rax,[rdx+rdx*4]
0x5f4f: lea eax,[r8+rax*2]
0x5f53: sub eax,edi
0x5f55: test rdx,rdx
0x5f58: mov rdi,rdx
0x5f5b: mov byte ptr [rcx-0x1],al
0x5f5e: jne 0x5f30
0x5f60: sub rcx,0x2
0x5f64: mov byte ptr [rsi-0x1],0x2d
0x5f68: mov rax,rcx
0x5f6b: ret 
0x5f70: mov rax,qword ptr [rdi+0xa8]
0x5f77: mov r8,qword ptr [rsp+0x10]
0x5f7c: mov r9,qword ptr [rsp+0x18]
0x5f81: test rax,rax
0x5f84: je 0x5fc8
0x5f86: cmp qword ptr [rdi+0x30],0x0
0x5f8b: jne 0x5fc8
0x5f8d: cmp byte ptr [rdi+0xa1],0x0
0x5f94: jne 0x5fc8
0x5f96: cmp qword ptr [rdi+0xc8],0x0
0x5f9e: jne 0x5faa
0x5fa0: cmp r9,0x2
0x5fa4: jle 0x60c8
0x5faa: mov rax,qword ptr [rsp+0x18]
0x5faf: mov byte ptr [rdi+0xd8],0x1
0x5fb6: movdqu xmm0,[rsp+0x8]
0x5fbc: mov qword ptr [rdi+0x30],rax
0x5fc0: movups [rdi+0x20],xmm0
0x5fc4: ret 
0x5fc8: cmp r9,0x4
0x5fcc: jg 0x6030
0x5fce: add qword ptr [rdi+0xc8],0x1
0x5fd6: cmp r9,0x2
0x5fda: jle 0x60d8
0x5fe0: mov rax,r8
0x5fe3: movabsq rdx,-0x5c28f5c28f5c28f5
0x5fed: imul rdx
0x5ff0: mov rax,r8
0x5ff3: sar rax,0x3f
0x5ff7: add rdx,r8
0x5ffa: sar rdx,0x6
0x5ffe: sub rdx,rax
0x6001: lea rax,[rdx+rdx*4]
0x6005: mov qword ptr [rdi+0x48],rdx
0x6009: lea rax,[rax+rax*4]
0x600d: shl rax,0x2
0x6011: sub r8,rax
0x6014: mov qword ptr [rdi+0x50],r8
0x6018: mov qword ptr [rdi+0x58],0x0
0x6020: mov qword ptr [rdi+0x60],0x0
0x6028: mov dword ptr [rdi+0x1c],0x2
0x602f: ret 
0x6030: add rax,0x1
0x6034: movabsq rsi,-0x5c28f5c28f5c28f5
0x603e: mov r10,r8
0x6041: mov qword ptr [rdi+0xa8],rax
0x6048: mov rax,r8
0x604b: sar r10,0x3f
0x604f: imul rsi
0x6052: sub r9,0x4
0x6056: mov qword ptr [rdi+0x30],r9
0x605a: lea rcx,[rdx+r8]
0x605e: mov rdx,r8
0x6061: sar rcx,0x6
0x6065: sub rcx,r10
0x6068: lea rax,[rcx+rcx*4]
0x606c: lea rax,[rax+rax*4]
0x6070: shl rax,0x2
0x6074: sub rdx,rax
0x6077: mov rax,rcx
0x607a: mov qword ptr [rdi+0x40],rdx
0x607e: imul rsi
0x6081: mov rax,rcx
0x6084: sar rax,0x3f
0x6088: lea rsi,[rdx+rcx]
0x608c: movabsq rdx,0x346dc5d63886594b
0x6096: sar rsi,0x6
0x609a: sub rsi,rax
0x609d: lea rax,[rsi+rsi*4]
0x60a1: lea rax,[rax+rax*4]
0x60a5: shl rax,0x2
0x60a9: sub rcx,rax
0x60ac: mov rax,r8
0x60af: imul rdx
0x60b2: mov qword ptr [rdi+0x38],rcx
0x60b6: sar rdx,0xb
0x60ba: sub rdx,r10
0x60bd: mov qword ptr [rdi+0x28],rdx
0x60c1: ret 
0x60c8: mov qword ptr [rdi+0xc8],0x1
0x60d3: nop dword ptr [rax+rax]
0x60d8: mov qword ptr [rdi+0x48],r8
0x60dc: mov qword ptr [rdi+0x50],0x0
0x60e4: jmp 0x6018
0x60f0: mov eax,edi
0x60f2: mov edx,0x91a2b3c5
0x60f7: push r12
0x60f9: imul edx
0x60fb: push rbp
0x60fc: push rbx
0x60fd: mov eax,edi
0x60ff: mov ecx,edi
0x6101: mov r12,rsi
0x6104: sar eax,0x1f
0x6107: sar ecx,0x1f
0x610a: mov ebp,edi
0x610c: lea ebx,[rdx+rdi]
0x610f: and ecx,0x2
0x6112: mov rdx,-0x1
0x6119: lea r8d,[rcx+0x2b]
0x611d: lea rcx,[rip+0xced8]
0x6124: mov esi,0x1
0x6129: sar ebx,0xb
0x612c: mov rdi,r12
0x612f: sub ebx,eax
0x6131: mov eax,ebx
0x6133: sar eax,0x1f
0x6136: mov r9d,eax
0x6139: xor r9d,ebx
0x613c: imul ebx,ebx,0xe10
0x6142: sub r9d,eax
0x6145: xor eax,eax
0x6147: call 0x2b50
0x614c: sub ebp,ebx
0x614e: je 0x61b2
0x6150: cltq 
0x6152: mov ecx,0x88888889
0x6157: mov r8d,0xcccccccd
0x615d: lea rsi,[r12+rax]
0x6161: mov eax,ebp
0x6163: sar eax,0x1f
0x6166: xor ebp,eax
0x6168: mov byte ptr [rsi],0x3a
0x616b: sub ebp,eax
0x616d: mov eax,ebp
0x616f: mul ecx
0x6171: mov eax,ebp
0x6173: mov ecx,edx
0x6175: mov edi,edx
0x6177: mov edx,0x1b4e81b5
0x617c: mul edx
0x617e: shr ecx,0x5
0x6181: shr edi,0x5
0x6184: mov eax,ecx
0x6186: shr edx,0x6
0x6189: add edx,0x30
0x618c: mov byte ptr [rsi+0x1],dl
0x618f: mul r8d
0x6192: imul edi,edi,0x3c
0x6195: shr edx,0x3
0x6198: lea eax,[rdx+rdx*4]
0x619b: add eax,eax
0x619d: sub ecx,eax
0x619f: lea rax,[rsi+0x3]
0x61a3: add ecx,0x30
0x61a6: sub ebp,edi
0x61a8: mov byte ptr [rsi+0x2],cl
0x61ab: mov edi,ebp
0x61ad: jne 0x61c0
0x61af: mov byte ptr [rax],0x0
0x61b2: mov rax,r12
0x61b5: pop rbx
0x61b6: pop rbp
0x61b7: pop r12
0x61b9: ret 
0x61c0: mov eax,ebp
0x61c2: mov byte ptr [rsi+0x3],0x3a
0x61c6: mul r8d
0x61c9: shr edx,0x3
0x61cc: lea eax,[rdx+0x30]
0x61cf: lea edx,[rdx+rdx*4]
0x61d2: add edx,edx
0x61d4: mov byte ptr [rsi+0x4],al
0x61d7: lea rax,[rsi+0x6]
0x61db: sub edi,edx
0x61dd: add edi,0x30
0x61e0: mov byte ptr [rsi+0x5],dil
0x61e4: jmp 0x61af
0x6218: movaps [rsp+0x50],xmm0
0x621d: movaps [rsp+0x60],xmm1
0x6222: movaps [rsp+0x70],xmm2
0x6227: movaps [rsp+0x80],xmm3
0x622f: movaps [rsp+0x90],xmm4
0x6237: movaps [rsp+0xa0],xmm5
0x623f: movaps [rsp+0xb0],xmm6
0x6247: movaps [rsp+0xc0],xmm7
0x62b4: mov rax,qword ptr [rsp+0x18]
0x62b9: xor rax,qword ptr fs:0x28
0x62c2: jne 0x62cd
0x62c4: add rsp,0xd0
0x62cb: pop rbx
0x62cc: ret 
0x62cd: call 0x2850
0x62d2: nop dword ptr [rax]
0x62d6: nop word ptr cs:[rax+rax]
0x62e0: mov r8,rdx
0x62e3: xor edi,0x1
0x62e6: lea rdx,[rip+0xcd27]
0x62ed: movzx edi,dil
0x62f1: sub rsp,0x8
0x62f5: mov rcx,rsi
0x62f8: add rdx,rdi
0x62fb: mov rdi,qword ptr [rip+0x211dde]
0x6302: mov esi,0x1
0x6307: xor eax,eax
0x6309: call 0x2b00
0x630e: mov eax,0x1
0x6313: add rsp,0x8
0x6317: ret 
0x6320: cmp rcx,0x2
0x6324: mov r9,rdx
0x6327: jg 0x6370
0x6329: test r8,r8
0x632c: js 0x63c0
0x6332: xor ecx,ecx
0x6334: imul r9,r9,0x3c
0x6338: seto cl
0x633b: test sil,sil
0x633e: jne 0x63b0
0x6340: xor edx,edx
0x6342: add r9,r8
0x6345: seto dl
0x6348: xor eax,eax
0x634a: or ecx,edx
0x634c: jne 0x636c
0x634e: lea rdx,[r9+0x5a0]
0x6355: xor eax,eax
0x6357: cmp rdx,0xb40
0x635e: ja 0x636c
0x6360: imul r9d,r9d,0x3c
0x6364: mov eax,0x1
0x6369: mov dword ptr [rdi],r9d
0x636c: rep ret 
0x6370: test r8,r8
0x6373: jns 0x6332
0x6375: mov rax,r9
0x6378: movabsq rdx,-0x5c28f5c28f5c28f5
0x6382: imul rdx
0x6385: mov rax,r9
0x6388: sar rax,0x3f
0x638c: lea rcx,[rdx+r9]
0x6390: sar rcx,0x6
0x6394: sub rcx,rax
0x6397: lea rax,[rcx+rcx*4]
0x639b: mov rcx,r9
0x639e: lea rax,[rax+rax*4]
0x63a2: shl rax,0x2
0x63a6: sub rcx,rax
0x63a9: jmp 0x63ce
0x63b0: xor edx,edx
0x63b2: sub r9,r8
0x63b5: seto dl
0x63b8: jmp 0x6348
0x63c0: lea rax,[rdx+rdx*4]
0x63c4: xor ecx,ecx
0x63c6: lea r9,[rax+rax*4]
0x63ca: shl r9,0x2
0x63ce: mov rax,r9
0x63d1: movabsq rdx,-0x5c28f5c28f5c28f5
0x63db: imul rdx
0x63de: add rdx,r9
0x63e1: sar r9,0x3f
0x63e5: sar rdx,0x6
0x63e9: sub rdx,r9
0x63ec: mov rax,rdx
0x63ef: shl rax,0x4
0x63f3: sub rax,rdx
0x63f6: lea r9,[rcx+rax*4]
0x63fa: jmp 0x634e
0x6400: mov eax,dword ptr [rdi]
0x6402: mov edx,dword ptr [rdi+0x4]
0x6405: xor eax,dword ptr [rsi]
0x6407: xor edx,dword ptr [rsi+0x4]
0x640a: or eax,edx
0x640c: mov edx,dword ptr [rdi+0x8]
0x640f: xor edx,dword ptr [rsi+0x8]
0x6412: or eax,edx
0x6414: mov edx,dword ptr [rdi+0xc]
0x6417: xor edx,dword ptr [rsi+0xc]
0x641a: or eax,edx
0x641c: mov edx,dword ptr [rdi+0x10]
0x641f: xor edx,dword ptr [rsi+0x10]
0x6422: or eax,edx
0x6424: mov edx,dword ptr [rdi+0x14]
0x6427: xor edx,dword ptr [rsi+0x14]
0x642a: or eax,edx
0x642c: sete al
0x642f: ret 
0x6430: push r12
0x6432: mov r12,rdi
0x6435: push rbp
0x6436: mov rbp,rsi
0x6439: push rbx
0x643a: lea rsi,[rip+0xcbdc]
0x6441: lea rbx,[rip+0x211298]
0x6448: jmp 0x645c
0x6450: add rbx,0x10
0x6454: mov rsi,qword ptr [rbx]
0x6457: test rsi,rsi
0x645a: je 0x6470
0x645c: mov rdi,rbp
0x645f: call 0x2960
0x6464: test eax,eax
0x6466: jne 0x6450
0x6468: mov rax,rbx
0x646b: pop rbx
0x646c: pop rbp
0x646d: pop r12
0x646f: ret 
0x6470: mov rsi,qword ptr [r12+0xe8]
0x6478: lea rbx,[r12+0xe8]
0x6480: test rsi,rsi
0x6483: jne 0x64cc
0x6485: nop dword ptr [rax]
0x6488: lea rbx,[rip+0x210f51]
0x648f: lea rsi,[rip+0xcb8b]
0x6496: jmp 0x64ac
0x64a0: add rbx,0x10
0x64a4: mov rsi,qword ptr [rbx]
0x64a7: test rsi,rsi
0x64aa: je 0x64e0
0x64ac: mov rdi,rbp
0x64af: call 0x2960
0x64b4: test eax,eax
0x64b6: jne 0x64a0
0x64b8: jmp 0x6468
0x64c0: add rbx,0x10
0x64c4: mov rsi,qword ptr [rbx]
0x64c7: test rsi,rsi
0x64ca: je 0x6488
0x64cc: mov rdi,rbp
0x64cf: call 0x2960
0x64d4: test eax,eax
0x64d6: jne 0x64c0
0x64d8: mov rax,rbx
0x64db: pop rbx
0x64dc: pop rbp
0x64dd: pop r12
0x64df: ret 
0x64e0: xor ebx,ebx
0x64e2: mov rax,rbx
0x64e5: pop rbx
0x64e6: pop rbp
0x64e7: pop r12
0x64e9: ret 
0x64f0: push rbp
0x64f1: push rbx
0x64f2: mov rbx,rsi
0x64f5: lea rsi,[rip+0xcb29]
0x64fc: mov rbp,rdi
0x64ff: mov edx,0x5
0x6504: sub rsp,0x8
0x6508: xor edi,edi
0x650a: call 0x2820
0x650f: mov rsi,rbp
0x6512: mov rdi,rax
0x6515: xor eax,eax
0x6517: call 0x61f0
0x651c: mov rsi,qword ptr [rbx+0x68]
0x6520: test rsi,rsi
0x6523: jne 0x66b0
0x6529: mov rsi,qword ptr [rbx+0x70]
0x652d: test rsi,rsi
0x6530: je 0x65b0
0x6532: xor edi,edi
0x6534: lea rdx,[rip+0xcb13]
0x653b: call 0x62e0
0x6540: mov rsi,qword ptr [rbx+0x78]
0x6544: movzx edi,al
0x6547: test rsi,rsi
0x654a: jne 0x6620
0x6550: mov rsi,qword ptr [rbx+0x80]
0x6557: test rsi,rsi
0x655a: jne 0x663f
0x6560: mov rsi,qword ptr [rbx+0x88]
0x6567: test rsi,rsi
0x656a: jne 0x665e
0x6570: mov rsi,qword ptr [rbx+0x90]
0x6577: test rsi,rsi
0x657a: jne 0x667d
0x6580: movsxd rsi,dword ptr [rbx+0x98]
0x6587: test rsi,rsi
0x658a: jne 0x669c
0x6590: mov rsi,qword ptr [rip+0x211b49]
0x6597: add rsp,0x8
0x659b: mov edi,0xa
0x65a0: pop rbx
0x65a1: pop rbp
0x65a2: jmp 0x2900
0x65b0: mov rsi,qword ptr [rbx+0x78]
0x65b4: xor edi,edi
0x65b6: test rsi,rsi
0x65b9: jne 0x6620
0x65bb: cmp qword ptr [rbx+0x80],0x0
0x65c3: jne 0x6550
0x65c5: cmp qword ptr [rbx+0x88],0x0
0x65cd: jne 0x6550
0x65cf: cmp qword ptr [rbx+0x90],0x0
0x65d7: jne 0x6550
0x65dd: mov eax,dword ptr [rbx+0x98]
0x65e3: test eax,eax
0x65e5: jne 0x6550
0x65eb: mov rbx,qword ptr [rip+0x211aee]
0x65f2: lea rsi,[rip+0xca3d]
0x65f9: xor edi,edi
0x65fb: mov edx,0x5
0x6600: call 0x2820
0x6605: add rsp,0x8
0x6609: mov rsi,rbx
0x660c: mov rdi,rax
0x660f: pop rbx
0x6610: pop rbp
0x6611: jmp 0x28e0
0x6620: lea rdx,[rip+0xca30]
0x6627: call 0x62e0
0x662c: mov rsi,qword ptr [rbx+0x80]
0x6633: movzx edi,al
0x6636: test rsi,rsi
0x6639: je 0x6560
0x663f: lea rdx,[rip+0xca18]
0x6646: call 0x62e0
0x664b: mov rsi,qword ptr [rbx+0x88]
0x6652: movzx edi,al
0x6655: test rsi,rsi
0x6658: je 0x6570
0x665e: lea rdx,[rip+0xb1b4]
0x6665: call 0x62e0
0x666a: mov rsi,qword ptr [rbx+0x90]
0x6671: movzx edi,al
0x6674: test rsi,rsi
0x6677: je 0x6580
0x667d: lea rdx,[rip+0xcabf]
0x6684: call 0x62e0
0x6689: movsxd rsi,dword ptr [rbx+0x98]
0x6690: movzx edi,al
0x6693: test rsi,rsi
0x6696: je 0x6590
0x669c: lea rdx,[rip+0xc9c3]
0x66a3: call 0x62e0
0x66a8: jmp 0x6590
0x66b0: lea rdx,[rip+0xc98f]
0x66b7: xor edi,edi
0x66b9: call 0x62e0
0x66be: mov rsi,qword ptr [rbx+0x70]
0x66c2: movzx edi,al
0x66c5: test rsi,rsi
0x66c8: jne 0x6534
0x66ce: mov rsi,qword ptr [rbx+0x78]
0x66d2: jmp 0x6547
0x66e0: push r12
0x66e2: push rbp
0x66e3: mov rcx,rdi
0x66e6: push rbx
0x66e7: mov rbx,rdx
0x66ea: lea rdx,[rip+0xc981]
0x66f1: mov r12,rsi
0x66f4: xor r9d,r9d
0x66f7: xor r8d,r8d
0x66fa: sub rsp,0x30
0x66fe: mov esi,0x64
0x6703: mov rdi,rbx
0x6706: mov rax,qword ptr fs:0x28
0x670f: mov qword ptr [rsp+0x28],rax
0x6714: xor eax,eax
0x6716: call 0xf540
0x671b: test r12,r12
0x671e: je 0x6733
0x6720: cmp eax,0x63
0x6723: mov rbp,rax
0x6726: jg 0x6733
0x6728: cmp qword ptr [r12+0xd0],0x0
0x6731: jne 0x6750
0x6733: mov rdx,qword ptr [rsp+0x28]
0x6738: xor rdx,qword ptr fs:0x28
0x6741: mov rax,rbx
0x6744: jne 0x678c
0x6746: add rsp,0x30
0x674a: pop rbx
0x674b: pop rbp
0x674c: pop r12
0x674e: ret 
0x6750: mov edi,dword ptr [r12+0x18]
0x6755: mov rsi,rsp
0x6758: call 0x60f0
0x675d: mov esi,0x64
0x6762: movsxd rdi,ebp
0x6765: lea r8,[rip+0xc920]
0x676c: sub esi,ebp
0x676e: mov r9,rax
0x6771: add rdi,rbx
0x6774: movsxd rsi,esi
0x6777: mov rcx,-0x1
0x677e: mov edx,0x1
0x6783: xor eax,eax
0x6785: call 0x2740
0x678a: jmp 0x6733
0x678c: call 0x2850
0x6791: nop dword ptr [rax+rax]
0x6796: nop word ptr cs:[rax+rax]
0x67a0: push rbp
0x67a1: push rbx
0x67a2: mov rbp,rsi
0x67a5: mov rbx,rdi
0x67a8: sub rsp,0x8
0x67ac: cmp byte ptr [rdi+0xe0],0x0
0x67b3: je 0x6808
0x67b5: mov r9,qword ptr [rdi+0x8]
0x67b9: lea rax,[r9+0x1]
0x67bd: cmp rax,0xd
0x67c1: jbe 0x6858
0x67c7: lea r8,[rip+0xc932]
0x67ce: mov rcx,-0x1
0x67d5: mov edx,0x1
0x67da: mov esi,0x64
0x67df: mov rdi,rbp
0x67e2: xor eax,eax
0x67e4: call 0x2740
0x67e9: movsxd rdx,dword ptr [rbx+0x10]
0x67ed: cmp edx,0x6
0x67f0: ja 0x67fb
0x67f2: cmp eax,0x63
0x67f5: jbe 0x6885
0x67fb: add rsp,0x8
0x67ff: mov rax,rbp
0x6802: pop rbx
0x6803: pop rbp
0x6804: ret 
0x6808: mov byte ptr [rsi],0x0
0x680b: movsxd rdx,dword ptr [rdi+0x10]
0x680f: cmp edx,0x6
0x6812: ja 0x67fb
0x6814: mov rdi,rsi
0x6817: mov ecx,0x1
0x681c: mov esi,0x64
0x6821: lea rax,[rip+0xd738]
0x6828: lea r9,[rax+rdx*4]
0x682c: lea rax,[rip+0xc5ac]
0x6833: mov edx,0x1
0x6838: lea r8,[rax+rcx]
0x683c: mov rcx,-0x1
0x6843: xor eax,eax
0x6845: call 0x2740
0x684a: add rsp,0x8
0x684e: mov rax,rbp
0x6851: pop rbx
0x6852: pop rbp
0x6853: ret 
0x6858: lea rdx,[rax+rax*4]
0x685c: mov esi,0x64
0x6861: mov rdi,rbp
0x6864: lea rcx,[rax+rdx*2]
0x6868: lea rax,[rip+0xd711]
0x686f: lea rdx,[rip+0xc56a]
0x6876: add rcx,rax
0x6879: xor eax,eax
0x687b: call 0x2890
0x6880: jmp 0x67e9
0x6885: xor ecx,ecx
0x6887: mov esi,0x64
0x688c: test eax,eax
0x688e: sete cl
0x6891: sub esi,eax
0x6893: cltq 
0x6895: movsxd rsi,esi
0x6898: lea rdi,[rbp+rax]
0x689d: jmp 0x6821
0x68a0: push r13
0x68a2: push r12
0x68a4: mov edx,0x5
0x68a9: push rbp
0x68aa: push rbx
0x68ab: mov rbx,rsi
0x68ae: lea rsi,[rip+0xc770]
0x68b5: mov rbp,rdi
0x68b8: xor edi,edi
0x68ba: sub rsp,0x78
0x68be: mov rax,qword ptr fs:0x28
0x68c7: mov qword ptr [rsp+0x68],rax
0x68cc: xor eax,eax
0x68ce: call 0x2820
0x68d3: mov rsi,rbp
0x68d6: mov rdi,rax
0x68d9: xor eax,eax
0x68db: call 0x61f0
0x68e0: cmp qword ptr [rbx+0xa8],0x0
0x68e8: je 0x68f7
0x68ea: cmp byte ptr [rbx+0xda],0x0
0x68f1: je 0x6af0
0x68f7: movzx eax,byte ptr [rbx+0xdf]
0x68fe: cmp byte ptr [rbx+0xd8],al
0x6904: je 0x6ae4
0x690a: lea rsi,[rip+0xc7a8]
0x6911: mov rbp,qword ptr [rbx+0x28]
0x6915: mov edx,0x5
0x691a: xor edi,edi
0x691c: call 0x2820
0x6921: mov rdi,qword ptr [rip+0x2117b8]
0x6928: mov rdx,rax
0x692b: mov rcx,rbp
0x692e: mov esi,0x1
0x6933: xor eax,eax
0x6935: call 0x2b00
0x693a: movzx eax,byte ptr [rbx+0xd8]
0x6941: mov edx,0x1
0x6946: mov byte ptr [rbx+0xdf],al
0x694c: cmp qword ptr [rbx+0xc8],0x0
0x6954: je 0x6963
0x6956: cmp byte ptr [rbx+0xdd],0x0
0x695d: je 0x6b50
0x6963: cmp qword ptr [rbx+0xb0],0x0
0x696b: je 0x69d2
0x696d: cmp byte ptr [rbx+0xdb],0x0
0x6974: jne 0x69d2
0x6976: test dl,dl
0x6978: jne 0x6bbf
0x697e: mov rsi,rsp
0x6981: mov rdi,rbx
0x6984: mov r13d,dword ptr [rbx+0x10]
0x6988: mov r12,qword ptr [rbx+0x8]
0x698c: call 0x67a0
0x6991: lea rsi,[rip+0xcc98]
0x6998: mov edx,0x5
0x699d: xor edi,edi
0x699f: mov rbp,rax
0x69a2: call 0x2820
0x69a7: mov rdi,qword ptr [rip+0x211732]
0x69ae: mov rdx,rax
0x69b1: mov r9d,r13d
0x69b4: mov r8,r12
0x69b7: mov rcx,rbp
0x69ba: mov esi,0x1
0x69bf: xor eax,eax
0x69c1: call 0x2b00
0x69c6: mov byte ptr [rbx+0xdb],0x1
0x69cd: mov edx,0x1
0x69d2: cmp qword ptr [rbx+0xb8],0x0
0x69da: je 0x6a60
0x69e0: cmp byte ptr [rbx+0xdc],0x0
0x69e7: jne 0x6a60
0x69e9: cmp qword ptr [rbx+0xc0],0x0
0x69f1: lea rax,[rip+0xc69b]
0x69f8: lea r8,[rip+0xc8b0]
0x69ff: mov ecx,dword ptr [rbx+0x14]
0x6a02: mov rdi,qword ptr [rip+0x2116d7]
0x6a09: mov esi,0x1
0x6a0e: cmovne r8,rax
0x6a12: xor edx,0x1
0x6a15: lea rax,[rip+0xc6c5]
0x6a1c: movzx edx,dl
0x6a1f: add rdx,rax
0x6a22: xor eax,eax
0x6a24: call 0x2b00
0x6a29: cmp qword ptr [rbx+0xd0],0x0
0x6a31: mov byte ptr [rbx+0xdc],0x1
0x6a38: jne 0x6bd8
0x6a3e: cmp byte ptr [rbx+0xa0],0x0
0x6a45: je 0x6ab4
0x6a47: mov rbx,qword ptr [rbx+0x58]
0x6a4b: mov rsi,qword ptr [rip+0x21168e]
0x6a52: mov edi,0x20
0x6a57: call 0x2900
0x6a5c: jmp 0x6a88
0x6a60: cmp qword ptr [rbx+0xd0],0x0
0x6a68: je 0x6a77
0x6a6a: cmp byte ptr [rbx+0xde],0x0
0x6a71: je 0x6bf0
0x6a77: cmp byte ptr [rbx+0xa0],0x0
0x6a7e: je 0x6ab4
0x6a80: test dl,dl
0x6a82: mov rbx,qword ptr [rbx+0x58]
0x6a86: jne 0x6a4b
0x6a88: lea rsi,[rip+0xc65e]
0x6a8f: mov edx,0x5
0x6a94: xor edi,edi
0x6a96: call 0x2820
0x6a9b: mov rdi,qword ptr [rip+0x21163e]
0x6aa2: mov rdx,rax
0x6aa5: mov rcx,rbx
0x6aa8: mov esi,0x1
0x6aad: xor eax,eax
0x6aaf: call 0x2b00
0x6ab4: mov rsi,qword ptr [rip+0x211625]
0x6abb: mov edi,0xa
0x6ac0: call 0x2900
0x6ac5: mov rax,qword ptr [rsp+0x68]
0x6aca: xor rax,qword ptr fs:0x28
0x6ad3: jne 0x6c72
0x6ad9: add rsp,0x78
0x6add: pop rbx
0x6ade: pop rbp
0x6adf: pop r12
0x6ae1: pop r13
0x6ae3: ret 
0x6ae4: xor edx,edx
0x6ae6: jmp 0x694c
0x6af0: mov rcx,qword ptr [rbx+0x28]
0x6af4: mov r9,qword ptr [rbx+0x40]
0x6af8: lea rdx,[rip+0xc5a0]
0x6aff: mov r8,qword ptr [rbx+0x38]
0x6b03: mov rdi,qword ptr [rip+0x2115d6]
0x6b0a: xor eax,eax
0x6b0c: mov esi,0x1
0x6b11: call 0x2b00
0x6b16: movzx eax,byte ptr [rbx+0xdf]
0x6b1d: mov byte ptr [rbx+0xda],0x1
0x6b24: mov edx,0x1
0x6b29: cmp byte ptr [rbx+0xd8],al
0x6b2f: je 0x694c
0x6b35: mov rsi,qword ptr [rip+0x2115a4]
0x6b3c: mov edi,0x20
0x6b41: call 0x2900
0x6b46: jmp 0x690a
0x6b50: mov rcx,qword ptr [rbx+0x48]
0x6b54: xor edx,0x1
0x6b57: lea rax,[rip+0xc567]
0x6b5e: mov r9,qword ptr [rbx+0x58]
0x6b62: mov r8,qword ptr [rbx+0x50]
0x6b66: movzx edx,dl
0x6b69: mov rdi,qword ptr [rip+0x211570]
0x6b70: add rdx,rax
0x6b73: mov esi,0x1
0x6b78: xor eax,eax
0x6b7a: call 0x2b00
0x6b7f: mov rcx,qword ptr [rbx+0x60]
0x6b83: test rcx,rcx
0x6b86: jne 0x6c30
0x6b8c: cmp dword ptr [rbx+0x1c],0x1
0x6b90: je 0x6c50
0x6b96: cmp qword ptr [rbx+0xb0],0x0
0x6b9e: mov byte ptr [rbx+0xdd],0x1
0x6ba5: mov edx,0x1
0x6baa: je 0x69d2
0x6bb0: movzx edx,byte ptr [rbx+0xdb]
0x6bb7: test dl,dl
0x6bb9: jne 0x69d2
0x6bbf: mov rsi,qword ptr [rip+0x21151a]
0x6bc6: mov edi,0x20
0x6bcb: call 0x2900
0x6bd0: jmp 0x697e
0x6bd8: cmp byte ptr [rbx+0xde],0x0
0x6bdf: jne 0x6a3e
0x6be5: lea rbp,[rip+0xc4ac]
0x6bec: jmp 0x6c00
0x6bf0: xor edx,0x1
0x6bf3: movzx ebp,dl
0x6bf6: lea rdx,[rip+0xc49b]
0x6bfd: add rbp,rdx
0x6c00: mov edi,dword ptr [rbx+0x18]
0x6c03: mov rsi,rsp
0x6c06: call 0x60f0
0x6c0b: mov rdi,qword ptr [rip+0x2114ce]
0x6c12: mov rcx,rax
0x6c15: mov rdx,rbp
0x6c18: mov esi,0x1
0x6c1d: xor eax,eax
0x6c1f: call 0x2b00
0x6c24: mov byte ptr [rbx+0xde],0x1
0x6c2b: jmp 0x6a3e
0x6c30: mov rdi,qword ptr [rip+0x2114a9]
0x6c37: lea rdx,[rip+0xc49a]
0x6c3e: mov esi,0x1
0x6c43: xor eax,eax
0x6c45: call 0x2b00
0x6c4a: jmp 0x6b8c
0x6c50: mov rcx,qword ptr [rip+0x211489]
0x6c57: lea rdi,[rip+0xc480]
0x6c5e: mov edx,0x2
0x6c63: mov esi,0x1
0x6c68: call 0x2af0
0x6c6d: jmp 0x6b96
0x6c72: call 0x2850
0x6c77: nop word ptr [rax+rax]
0x7543: mov rdx,r14
0x7546: movzx ecx,al
0x7549: sub eax,0x61
0x754c: lea esi,[rcx-0x20]
0x754f: cmp al,0x1a
0x7551: cmovb ecx,esi
0x7554: add rdx,0x1
0x7558: mov byte ptr [rdx-0x1],cl
0x755b: movzx eax,byte ptr [rdx]
0x755e: test al,al
0x7560: jne 0x7546
0x8540: mov edx,eax
0x8542: mov r9d,0x1
0x8548: shr edx,0x10
0x854b: test eax,0x8080
0x8550: cmove eax,edx
0x8553: lea rdx,[rbp+0x2]
0x8557: mov edi,eax
0x8559: cmove rbp,rdx
0x855d: add dil,al
0x8560: sbb rbp,0x3
0x8564: sub rbp,r14
0x8567: cmp rbp,0x3
0x856b: je 0x857a
0x856d: xor r9d,r9d
0x8570: cmp rbp,0x4
0x8574: je 0x8741
0x857a: lea rcx,[rip+0x20f3bf]
0x8581: lea rsi,[rip+0xab7f]
0x8588: mov dword ptr [rsp+0x8],ebx
0x858c: mov qword ptr [rsp+0x20],rbp
0x8591: mov dword ptr [rsp+0x10],r8d
0x8596: mov ebx,r9d
0x8599: mov rbp,rcx
0x859c: mov qword ptr [rsp+0x18],r11
0x85a1: test ebx,ebx
0x85a3: je 0x8718
0x85a9: mov edx,0x3
0x85ae: mov rdi,r14
0x85b1: call 0x2790
0x85b6: test eax,eax
0x85b8: sete al
0x85bb: test al,al
0x85bd: jne 0x872a
0x85c3: add rbp,0x10
0x85c7: mov rsi,qword ptr [rbp]
0x85cb: test rsi,rsi
0x85ce: jne 0x85a1
0x85d0: mov r11,qword ptr [rsp+0x18]
0x85d5: mov r8d,dword ptr [rsp+0x10]
0x85da: mov rsi,r14
0x85dd: movsxd rbx,dword ptr [rsp+0x8]
0x85e2: mov byte ptr [rsp+0x8],al
0x85e6: mov rbp,qword ptr [rsp+0x20]
0x85eb: mov rdi,r11
0x85ee: mov dword ptr [rsp+0x28],r8d
0x85f3: mov qword ptr [rsp+0x10],r11
0x85f8: call 0x6430
0x85fd: test rax,rax
0x8600: mov rcx,rax
0x8603: mov r11,qword ptr [rsp+0x10]
0x8608: mov r8d,dword ptr [rsp+0x28]
0x860d: jne 0x75a9
0x8613: lea rsi,[rip+0xaa7a]
0x861a: mov rdi,r14
0x861d: mov qword ptr [rsp+0x18],r11
0x8622: mov dword ptr [rsp+0x10],r8d
0x8627: call 0x2960
0x862c: test eax,eax
0x862e: mov r8d,dword ptr [rsp+0x10]
0x8633: mov r11,qword ptr [rsp+0x18]
0x8638: je 0x8765
0x863e: lea rcx,[rip+0x20f23b]
0x8645: lea rsi,[rip+0xaac3]
0x864c: mov rdi,r14
0x864f: mov qword ptr [rsp+0x20],r11
0x8654: mov qword ptr [rsp+0x18],rcx
0x8659: mov dword ptr [rsp+0x10],r8d
0x865e: call 0x2960
0x8663: test eax,eax
0x8665: mov r8d,dword ptr [rsp+0x10]
0x866a: mov rcx,qword ptr [rsp+0x18]
0x866f: mov r11,qword ptr [rsp+0x20]
0x8674: je 0x75a9
0x867a: add rcx,0x10
0x867e: mov rsi,qword ptr [rcx]
0x8681: test rsi,rsi
0x8684: jne 0x864c
0x8686: lea rdx,[r14+rbp-0x1]
0x868b: cmp byte ptr [rdx],0x53
0x868e: je 0x8771
0x8694: lea rcx,[rip+0x20f085]
0x869b: lea rsi,[rip+0xaa72]
0x86a2: mov rdi,r14
0x86a5: mov qword ptr [rsp+0x20],r11
0x86aa: mov qword ptr [rsp+0x18],rcx
0x86af: mov dword ptr [rsp+0x10],r8d
0x86b4: call 0x2960
0x86b9: test eax,eax
0x86bb: mov r8d,dword ptr [rsp+0x10]
0x86c0: mov rcx,qword ptr [rsp+0x18]
0x86c5: mov r11,qword ptr [rsp+0x20]
0x86ca: je 0x75a9
0x86d0: add rcx,0x10
0x86d4: mov rsi,qword ptr [rcx]
0x86d7: test rsi,rsi
0x86da: jne 0x86a2
0x86dc: sub rbp,0x1
0x86e0: movzx edx,byte ptr [rsp+0x5a0]
0x86e8: je 0x885c
0x86ee: mov rax,r14
0x86f1: mov rdx,r14
0x86f4: movzx ecx,byte ptr [rax]
0x86f7: test cl,cl
0x86f9: mov byte ptr [rdx],cl
0x86fb: je 0x87d8
0x8701: cmp byte ptr [rax],0x2e
0x8704: je 0x87ce
0x870a: add rdx,0x1
0x870e: add rax,0x1
0x8712: jmp 0x86f4
0x8718: mov rdi,r14
0x871b: call 0x2960
0x8720: test eax,eax
0x8722: sete al
0x8725: jmp 0x85bb
0x872a: movsxd rbx,dword ptr [rsp+0x8]
0x872f: mov r8d,dword ptr [rsp+0x10]
0x8734: mov rcx,rbp
0x8737: mov r11,qword ptr [rsp+0x18]
0x873c: jmp 0x75a9
0x8741: xor r9d,r9d
0x8744: cmp byte ptr [rsp+0x5a3],0x2e
0x874c: sete r9b
0x8750: jmp 0x857a
0x8760: call 0x2850
0x8765: lea rcx,[rip+0x20f364]
0x876c: jmp 0x75a9
0x8771: lea rcx,[rip+0x20f108]
0x8778: lea rsi,[rip+0xa990]
0x877f: mov byte ptr [rdx],0x0
0x8782: mov rdi,r14
0x8785: mov qword ptr [rsp+0x28],r11
0x878a: mov qword ptr [rsp+0x20],rcx
0x878f: mov dword ptr [rsp+0x10],r8d
0x8794: mov qword ptr [rsp+0x18],rdx
0x8799: call 0x2960
0x879e: test eax,eax
0x87a0: mov r8d,dword ptr [rsp+0x10]
0x87a5: mov rcx,qword ptr [rsp+0x20]
0x87aa: mov r11,qword ptr [rsp+0x28]
0x87af: je 0x75a9
0x87b5: add rcx,0x10
0x87b9: mov rsi,qword ptr [rcx]
0x87bc: mov rdx,qword ptr [rsp+0x18]
0x87c1: test rsi,rsi
0x87c4: jne 0x8782
0x87c6: mov byte ptr [rdx],0x53
0x87c9: jmp 0x8694
0x87ce: mov byte ptr [rsp+0x8],0x1
0x87d3: jmp 0x870e
0x87d8: cmp byte ptr [rsp+0x8],0x0
0x87dd: je 0x880a
0x87df: mov rdi,r11
0x87e2: mov rsi,r14
0x87e5: mov dword ptr [rsp+0x10],r8d
0x87ea: mov qword ptr [rsp+0x8],r11
0x87ef: call 0x6430
0x87f4: test rax,rax
0x87f7: mov rcx,rax
0x87fa: mov r11,qword ptr [rsp+0x8]
0x87ff: mov r8d,dword ptr [rsp+0x10]
0x8804: jne 0x75a9
0x880a: cmp byte ptr [r11+0xd9],0x0
0x8812: je 0x82b7
0x8818: lea rsi,[rip+0xa900]
0x881f: mov edx,0x5
0x8824: xor edi,edi
0x8826: mov qword ptr [rsp+0x10],r11
0x882b: mov dword ptr [rsp+0x8],r8d
0x8830: call 0x2820
0x8835: mov rsi,r14
0x8838: mov rdi,rax
0x883b: xor eax,eax
0x883d: call 0x61f0
0x8842: mov eax,0x2
0x8847: mov r9d,0x3f
0x884d: mov r8d,dword ptr [rsp+0x8]
0x8852: mov r11,qword ptr [rsp+0x10]
0x8857: jmp 0x735e
0x885c: lea rcx,[rip+0x20e9dd]
0x8863: lea rax,[rip+0xa8b3]
0x886a: cmp byte ptr [rax],dl
0x886c: je 0x75a9
0x8872: add rcx,0x10
0x8876: mov rax,qword ptr [rcx]
0x8879: test rax,rax
0x887c: jne 0x886a
0x887e: jmp 0x86ee
0x8d5f: jmp 0x8cce
0x8e88: mov rax,qword ptr [rsp+0x28]
0x8e8d: movdqu xmm0,[rsp+0x208]
0x8e96: movups [rax],xmm0
0x8e99: jmp 0x8cce
0x8ed5: cmp byte ptr [rsp+0x250],0x0
0x8edd: mov edx,0x5
0x8ee2: lea rsi,[rip+0xa2c6]
0x8ee9: jne 0x8f50
0x8eeb: cmp qword ptr [rsp+0x280],0x0
0x8ef4: mov edx,0x5
0x8ef9: lea rsi,[rip+0xa2c8]
0x8f00: jne 0x8f50
0x8f02: mov rbx,qword ptr [rsp+0x10]
0x8f07: test rbx,rbx
0x8f0a: je 0x8f44
0x8f0c: cmp qword ptr [rsp],r15
0x8f10: je 0x93af
0x8f16: lea rsi,[rip+0xa2c3]
0x8f1d: mov edx,0x5
0x8f22: xor edi,edi
0x8f24: call 0x2820
0x8f29: mov rcx,rbx
0x8f2c: mov rdi,qword ptr [rip+0x20f1ad]
0x8f33: mov rdx,rax
0x8f36: mov esi,0x1
0x8f3b: xor eax,eax
0x8f3d: call 0x2b00
0x8f42: jmp 0x8f6d
0x8f44: lea rsi,[rip+0xa2c6]
0x8f4b: mov edx,0x5
0x8f50: xor edi,edi
0x8f52: call 0x2820
0x8f57: mov rdi,qword ptr [rip+0x20f182]
0x8f5e: mov rdx,rax
0x8f61: mov esi,0x1
0x8f66: xor eax,eax
0x8f68: call 0x2b00
0x8f6d: cmp qword ptr [rsp+0x268],0x0
0x8f76: mov rax,qword ptr [rsp+0x280]
0x8f7e: je 0x8fc0
0x8f80: test rax,rax
0x8f83: jne 0x9286
0x8f89: mov r8d,dword ptr [rsp+0x1c4]
0x8f91: mov rsi,qword ptr [rip+0x20f148]
0x8f98: test r8d,r8d
0x8f9b: jle 0x8fd0
0x8f9d: lea rdi,[rip+0xa282]
0x8fa4: mov rcx,rsi
0x8fa7: mov edx,0x5
0x8fac: mov esi,0x1
0x8fb1: call 0x2af0
0x8fb6: mov rax,qword ptr [rsp+0x280]
0x8fbe: nop 
0x8fc0: test rax,rax
0x8fc3: jne 0x9286
0x8fc9: mov rsi,qword ptr [rip+0x20f110]
0x8fd0: mov edi,0xa
0x8fd5: call 0x2900
0x8fda: cmp byte ptr [rsp+0x250],0x0
0x8fe2: movzx r12d,byte ptr [rsp+0x289]
0x8feb: je 0x9178
0x8ff1: mov rax,qword ptr [rsp+0x28]
0x8ff6: movdqu xmm0,[rsp+0x208]
0x8fff: movups [rax],xmm0
0x9002: test r12b,r12b
0x9005: je 0x92c3
0x900b: mov edx,0x5
0x9010: lea rsi,[rip+0xa39e]
0x9017: cmp qword ptr [rsp+0x10],0x0
0x901d: je 0x9222
0x9023: mov rsi,qword ptr [rsp+0x10]
0x9028: lea rdi,[rip+0x8739]
0x902f: mov ecx,0x5
0x9034: mov edx,0x5
0x9039: rep cmpsb [rsi],es:[rdi]
0x903b: seta al
0x903e: sbb al,0x0
0x9040: test al,al
0x9042: je 0x921b
0x9048: lea rsi,[rip+0xad59]
0x904f: xor edi,edi
0x9051: call 0x2820
0x9056: mov rsi,qword ptr [rsp+0x10]
0x905b: mov rdi,rax
0x905e: xor eax,eax
0x9060: call 0x61f0
0x9065: mov r14,qword ptr [rsp+0x28]
0x906a: lea rsi,[rip+0xad5f]
0x9071: xor edi,edi
0x9073: mov edx,0x5
0x9078: mov rbx,qword ptr [r14]
0x907b: mov rbp,qword ptr [r14+0x8]
0x907f: call 0x2820
0x9084: mov rdi,rax
0x9087: xor eax,eax
0x9089: mov rsi,rbx
0x908c: lea rbx,[rsp+0x130]
0x9094: mov edx,ebp
0x9096: call 0x61f0
0x909b: mov rsi,rbx
0x909e: mov rdi,r14
0x90a1: call 0x28c0
0x90a6: test rax,rax
0x90a9: je 0x90e0
0x90ab: lea rdx,[rsp+0x300]
0x90b3: mov rdi,rbx
0x90b6: xor esi,esi
0x90b8: call 0x66e0
0x90bd: lea rsi,[rip+0xa325]
0x90c4: mov rbx,rax
0x90c7: xor edi,edi
0x90c9: mov edx,0x5
0x90ce: call 0x2820
0x90d3: mov rsi,rbx
0x90d6: mov rdi,rax
0x90d9: xor eax,eax
0x90db: call 0x61f0
0x90e0: lea rbx,[rsp+0x170]
0x90e8: mov rsi,qword ptr [rsp+0x28]
0x90ed: mov rdi,r15
0x90f0: mov rdx,rbx
0x90f3: call 0xd5c0
0x90f8: test rax,rax
0x90fb: je 0x8cce
0x9101: mov edi,dword ptr [rsp+0x198]
0x9108: lea rsi,[rsp+0x2e0]
0x9110: call 0x60f0
0x9115: lea rdx,[rsp+0x300]
0x911d: xor esi,esi
0x911f: mov rdi,rbx
0x9122: mov rbp,rax
0x9125: call 0x66e0
0x912a: lea rsi,[rip+0xa2c9]
0x9131: mov rbx,rax
0x9134: xor edi,edi
0x9136: mov edx,0x5
0x913b: call 0x2820
0x9140: mov rdx,rbp
0x9143: mov rdi,rax
0x9146: mov rsi,rbx
0x9149: xor eax,eax
0x914b: call 0x61f0
0x9150: jmp 0x8cce
0x9178: mov rsi,qword ptr [rsp+0x278]
0x9180: mov rcx,qword ptr [rsp+0x258]
0x9188: mov rdx,qword ptr [rsp+0x280]
0x9190: add rdx,qword ptr [rsp+0x268]
0x9198: mov rax,rsi
0x919b: or rax,rcx
0x919e: or rax,qword ptr [rsp+0x260]
0x91a6: or rax,qword ptr [rsp+0x270]
0x91ae: or rax,rdx
0x91b1: cmp rax,0x1
0x91b5: jle 0x92f9
0x91bb: test r12b,r12b
0x91be: je 0x8ccb
0x91c4: cmp rsi,0x1
0x91c8: jg 0x926b
0x91ce: cmp rcx,0x1
0x91d2: jg 0x9258
0x91d8: cmp qword ptr [rsp+0x260],0x1
0x91e1: jg 0x9248
0x91e3: cmp qword ptr [rsp+0x270],0x1
0x91ec: jg 0x9238
0x91ee: mov rax,qword ptr [rsp+0x280]
0x91f6: add rax,qword ptr [rsp+0x268]
0x91fe: cmp rax,0x1
0x9202: jle 0x8ccb
0x9208: lea rdi,[rip+0xa5b9]
0x920f: xor eax,eax
0x9211: call 0x61f0
0x9216: jmp 0x8ccb
0x921b: lea rsi,[rip+0xa1ad]
0x9222: xor edi,edi
0x9224: call 0x2820
0x9229: mov rdi,rax
0x922c: xor eax,eax
0x922e: call 0x61f0
0x9233: jmp 0x9065
0x9238: lea rdi,[rip+0xa559]
0x923f: xor eax,eax
0x9241: call 0x61f0
0x9246: jmp 0x91ee
0x9248: lea rdi,[rip+0xa521]
0x924f: xor eax,eax
0x9251: call 0x61f0
0x9256: jmp 0x91e3
0x9258: lea rdi,[rip+0xa4e9]
0x925f: xor eax,eax
0x9261: call 0x61f0
0x9266: jmp 0x91d8
0x926b: lea rdi,[rip+0xa4ae]
0x9272: xor eax,eax
0x9274: call 0x61f0
0x9279: mov rcx,qword ptr [rsp+0x258]
0x9281: jmp 0x91ce
0x9286: mov edi,dword ptr [rsp+0x1c8]
0x928d: lea rsi,[rsp+0x2e0]
0x9295: call 0x60f0
0x929a: mov rdi,qword ptr [rip+0x20ee3f]
0x92a1: lea rdx,[rip+0x9f78]
0x92a8: mov rcx,rax
0x92ab: mov esi,0x1
0x92b0: xor eax,eax
0x92b2: call 0x2b00
0x92b7: mov rsi,qword ptr [rip+0x20ee22]
0x92be: jmp 0x8fd0
0x92c3: mov r12d,0x1
0x92c9: jmp 0x8cce
0x935d: lea rsi,[rip+0x9ec8]
0x9364: xor edi,edi
0x9366: mov edx,0x5
0x936b: call 0x2820
0x9370: mov rsi,rbp
0x9373: mov rdi,rax
0x9376: xor eax,eax
0x9378: call 0x61f0
0x93aa: jmp 0x8ccb
0x93af: mov rsi,qword ptr [rsp+0x10]
0x93b4: lea rdi,[rip+0x83ad]
0x93bb: mov ecx,0x5
0x93c0: mov edx,0x5
0x93c5: rep cmpsb [rsi],es:[rdi]
0x93c7: lea rsi,[rip+0xa32a]
0x93ce: seta al
0x93d1: sbb al,0x0
0x93d3: test al,al
0x93d5: je 0x8f50
0x93db: lea rsi,[rip+0x9e15]
0x93e2: xor edi,edi
0x93e4: call 0x2820
0x93e9: mov rcx,qword ptr [rsp+0x10]
0x93ee: jmp 0x8f2c
0x9469: cmp qword ptr [rsp+0x258],0x0
0x9472: jne 0x9b72
0x9478: cmp qword ptr [rsp+0x260],0x0
0x9481: je 0x9ac3
0x9487: test al,al
0x9489: mov qword ptr [rsp+0x70],0x0
0x9492: mov dword ptr [rsp+0x78],0x0
0x949a: mov qword ptr [rsp+0x210],0x0
0x94a6: jne 0x9b93
0x94ac: mov dword ptr [rsp+0x90],0xffffffff
0x954d: lea rdi,[rsp+0xb0]
0x9555: mov rsi,rbp
0x9558: call 0x6400
0x955d: test al,al
0x955f: jne 0x9988
0x960b: cmp r14d,ebp
0x960e: jne 0xa15d
0x9614: mov ebx,dword ptr [rsp+0x28]
0x9618: cmp r11d,ebx
0x961b: jne 0xa15d
0x9621: test al,al
0x9623: je 0x8ccb
0x9629: lea rsi,[rip+0xa2b0]
0x9630: mov edx,0x5
0x9635: xor edi,edi
0x9637: lea rbx,[rsp+0x3e0]
0x963f: call 0x2820
0x9644: mov rdi,rax
0x9647: xor eax,eax
0x9649: call 0x61f0
0x964e: lea rdi,[rsp+0xb0]
0x9656: mov rdx,rbx
0x9659: mov rsi,r13
0x965c: call 0x66e0
0x9661: lea rsi,[rip+0x9c2a]
0x9668: mov r12,rax
0x966b: mov edx,0x5
0x9670: xor edi,edi
0x9672: call 0x2820
0x9677: mov rsi,r12
0x967a: mov rdi,rax
0x967d: xor eax,eax
0x967f: call 0x61f0
0x9684: mov rdi,qword ptr [rsp+0x18]
0x9689: mov rdx,rbx
0x968c: mov rsi,r13
0x968f: call 0x66e0
0x9694: lea rsi,[rip+0x9c15]
0x969b: mov r12,rax
0x969e: mov edx,0x5
0x96a3: xor edi,edi
0x96a5: call 0x2820
0x96aa: mov rsi,r12
0x96ad: mov rdi,rax
0x96b0: xor eax,eax
0x96b2: call 0x61f0
0x96b7: lea rsi,[rip+0x9bf1]
0x96be: mov r12d,0x1
0x96c4: mov rax,rsi
0x96c7: mov r11d,dword ptr [rsp+0x40]
0x96cc: cmp dword ptr [rsp+0x38],r11d
0x96d1: lea rcx,[rip+0x9bd7]
0x96d8: lea rdx,[rip+0x9aa0]
0x96df: mov r11d,dword ptr [rsp+0x20]
0x96e4: lea r9,[rip+0x9a92]
0x96eb: mov r8,rcx
0x96ee: mov rdi,rcx
0x96f1: cmovne r8,rdx
0x96f5: cmp dword ptr [rsp+0x10],r11d
0x96fa: mov r11d,dword ptr [rsp+0x28]
0x96ff: cmovne rdi,rdx
0x9703: cmp r14d,ebp
0x9706: cmove rdx,rcx
0x970a: cmp dword ptr [rsp+0x44],r11d
0x970f: cmove r9,rcx
0x9713: sub rsp,0x8
0x9717: mov ecx,0x64
0x971c: push rsi
0x971d: push rax
0x971e: mov esi,0x64
0x9723: push r8
0x9725: lea r8,[rip+0xa1dc]
0x972c: push rdi
0x972d: push rdx
0x972e: mov rdi,rbx
0x9731: mov edx,0x1
0x9736: xor eax,eax
0x9738: call 0x2740
0x973d: add rsp,0x30
0x9741: mov eax,0x34
0x9746: jmp 0x9752
0x9748: sub rax,0x1
0x974c: cmp byte ptr [rbx+rax],0x20
0x9750: jne 0x9758
0x9752: test eax,eax
0x9754: mov edx,eax
0x9756: jne 0x9748
0x9758: movsxd rax,edx
0x975b: lea rdi,[rip+0x9baf]
0x9762: mov rsi,rbx
0x9765: mov byte ptr [rsp+rax+0x3e0],0x0
0x976d: xor eax,eax
0x976f: call 0x61f0
0x9774: lea rsi,[rip+0x9b53]
0x977b: xor edi,edi
0x977d: mov edx,0x5
0x9782: call 0x2820
0x9787: mov rdi,rax
0x978a: xor eax,eax
0x978c: call 0x61f0
0x9791: test r12d,r12d
0x9794: je 0x97b3
0x9796: lea rsi,[rip+0xa1ab]
0x979d: xor edi,edi
0x979f: mov edx,0x5
0x97a4: call 0x2820
0x97a9: mov rdi,rax
0x97ac: xor eax,eax
0x97ae: call 0x61f0
0x97b3: mov ebx,dword ptr [rsp+0x20]
0x97b7: cmp dword ptr [rsp+0x10],ebx
0x97bb: je 0x97df
0x97bd: cmp r14d,ebp
0x97c0: je 0x97df
0x97c2: lea rsi,[rip+0xa1b7]
0x97c9: xor edi,edi
0x97cb: mov edx,0x5
0x97d0: call 0x2820
0x97d5: mov rdi,rax
0x97d8: xor eax,eax
0x97da: call 0x61f0
0x97df: lea rsi,[rip+0xa1c2]
0x97e6: mov edx,0x5
0x97eb: xor edi,edi
0x97ed: call 0x2820
0x97f2: mov rdi,rax
0x97f5: xor eax,eax
0x97f7: call 0x61f0
0x97fc: cmp qword ptr [rsp+0x30],0x0
0x9802: mov edx,0x5
0x9807: je 0xa5e6
0x980d: lea rsi,[rip+0x9ad2]
0x9814: xor edi,edi
0x9816: call 0x2820
0x981b: lea rdi,[rip+0x9ae8]
0x9822: mov rsi,rax
0x9825: xor eax,eax
0x9827: call 0x61f0
0x982c: jmp 0x8ccb
0x9868: cmp rbp,0x44
0x986c: mov ebx,0x76c
0x9871: mov eax,0x7d0
0x9876: cmovle rbx,rax
0x987a: add rbx,rbp
0x987d: test r12b,r12b
0x9880: jne 0x9a98
0x9886: mov rbp,rbx
0x9889: jmp 0x9319
0x988e: mov edi,dword ptr [rsp+0x1c8]
0x9895: lea rsi,[rsp+0x3e3]
0x989d: lea rbp,[rsp+0x3e0]
0x98a5: mov word ptr [rsp+0x3e0],0x5858
0x98af: mov byte ptr [rsp+0x3e2],0x58
0x98b7: call 0x60f0
0x98bc: mov rdi,rbp
0x98bf: call 0xd300
0x98c4: test rax,rax
0x98c7: mov rdx,rax
0x98ca: je 0xa3d7
0x98d0: mov eax,dword ptr [rsp+0xb0]
0x98d7: mov rsi,qword ptr [rsp+0x18]
0x98dc: mov rdi,rdx
0x98df: mov qword ptr [rsp+0x20],rdx
0x98e4: mov dword ptr [rsp+0x88],0xffffffff
0x98ef: mov dword ptr [rsp+0x70],eax
0x98f3: mov eax,dword ptr [rsp+0xb4]
0x98fa: mov dword ptr [rsp+0x74],eax
0x98fe: mov eax,dword ptr [rsp+0xb8]
0x9905: mov dword ptr [rsp+0x78],eax
0x9909: mov eax,dword ptr [rsp+0xbc]
0x9910: mov dword ptr [rsp+0x7c],eax
0x9914: mov eax,dword ptr [rsp+0xc0]
0x991b: mov dword ptr [rsp+0x80],eax
0x9922: mov eax,dword ptr [rsp+0xc4]
0x9929: mov dword ptr [rsp+0x84],eax
0x9930: mov eax,dword ptr [rsp+0xd0]
0x9937: mov dword ptr [rsp+0x90],eax
0x993e: call 0xd670
0x9943: cmp dword ptr [rsp+0x88],0x0
0x994b: mov r14,rax
0x994e: mov rdx,qword ptr [rsp+0x20]
0x9953: js 0xa4a4
0x9959: mov rsi,qword ptr [rsp+0x18]
0x995e: lea rdi,[rsp+0xb0]
0x9966: mov qword ptr [rsp+0x20],rdx
0x996b: call 0x6400
0x9970: mov rdx,qword ptr [rsp+0x20]
0x9975: mov ebp,eax
0x9977: mov rdi,rdx
0x997a: call 0xd5b0
0x997f: test bpl,bpl
0x9982: je 0x957b
0x9988: cmp qword ptr [rsp+0x260],0x0
0x9991: je 0x9c27
0x9997: cmp qword ptr [rsp+0x258],0x0
0x99a0: jne 0x9d6e
0x99a6: mov rax,qword ptr [rsp+0x1b8]
0x99ae: test rax,rax
0x99b1: jle 0x99c8
0x99b3: xor r12d,r12d
0x99b6: mov esi,dword ptr [rsp+0x1c0]
0x99bd: cmp dword ptr [rsp+0x88],esi
0x99c4: setne r12b
0x99c8: sub rax,r12
0x99cb: imul rcx,rax,0x7
0x99cf: jo 0x9a1a
0x99d1: mov eax,dword ptr [rsp+0x1c0]
0x99d8: sub eax,dword ptr [rsp+0x88]
0x99df: mov esi,0x7
0x99e4: add eax,0x7
0x99e7: cltd 
0x99e8: idiv esi
0x99ea: movsxd rax,edx
0x99ed: add rax,rcx
0x99f0: jo 0x9a1a
0x99f2: movsxd rdx,dword ptr [rsp+0x7c]
0x99f7: add rax,rdx
0x99fa: seto dl
0x99fd: movsxd rcx,eax
0x9a00: mov dword ptr [rsp+0x7c],eax
0x9a04: cmp rax,rcx
0x9a07: movzx edx,dl
0x9a0a: mov ecx,0x1
0x9a0f: cmovne edx,ecx
0x9a12: test edx,edx
0x9a14: je 0x9ba3
0x9a1a: cmp byte ptr [rsp+0x289],0x0
0x9a22: je 0x8ccb
0x9a28: mov rdi,qword ptr [rsp+0x18]
0x9a2d: lea rdx,[rsp+0x300]
0x9a35: mov rsi,r13
0x9a38: call 0x66e0
0x9a3d: lea rsi,[rsp+0x3e0]
0x9a45: mov r14d,dword ptr [rsp+0x1c0]
0x9a4d: mov rbp,qword ptr [rsp+0x1b8]
0x9a55: mov rdi,r13
0x9a58: mov r12,rax
0x9a5b: call 0x67a0
0x9a60: lea rsi,[rip+0x9f69]
0x9a67: mov rbx,rax
0x9a6a: xor edi,edi
0x9a6c: mov edx,0x5
0x9a71: call 0x2820
0x9a76: mov r8,r12
0x9a79: mov rdi,rax
0x9a7c: mov ecx,r14d
0x9a7f: mov rdx,rbp
0x9a82: mov rsi,rbx
0x9a85: xor eax,eax
0x9a87: call 0x61f0
0x9a8c: jmp 0x8ccb
0x9a98: lea rsi,[rip+0x9d51]
0x9a9f: mov edx,0x5
0x9aa4: xor edi,edi
0x9aa6: call 0x2820
0x9aab: mov rsi,rbp
0x9aae: mov rdi,rax
0x9ab1: mov rdx,rbx
0x9ab4: xor eax,eax
0x9ab6: mov rbp,rbx
0x9ab9: call 0x61f0
0x9abe: jmp 0x9319
0x9ac3: mov r9d,dword ptr [rsp+0x1cc]
0x9acb: mov rbp,qword ptr [rsp+0x1f8]
0x9ad3: test r9d,r9d
0x9ad6: je 0xa138
0x9adc: cmp r9d,0x1
0x9ae0: jne 0x9b5e
0x9ae2: lea rdx,[rbp-0x1]
0x9ae6: lea r9d,[rbp+0xc]
0x9aea: cmp rdx,0xa
0x9aee: jbe 0x9b6b
0x9af0: cmp rbp,0xc
0x9af4: jne 0xa592
0x9afa: mov dword ptr [rsp+0x78],0xc
0x9b02: mov r9d,0xc
0x9b08: mov rdx,qword ptr [rsp+0x200]
0x9b10: mov rcx,qword ptr [rsp+0x208]
0x9b18: test al,al
0x9b1a: mov dword ptr [rsp+0x74],edx
0x9b1e: mov dword ptr [rsp+0x70],ecx
0x9b22: jne 0xa0d8
0x9b46: jmp 0x94ac
0x9b4b: mov eax,dword ptr [rsp+0x1c4]
0x9b52: mov dword ptr [rsp+0x90],eax
0x9b59: jmp 0x94cd
0x9b5e: cmp rbp,0x17
0x9b62: ja 0xa40a
0x9b68: mov r9d,ebp
0x9b6b: mov dword ptr [rsp+0x78],r9d
0x9b70: jmp 0x9b08
0x9ba1: jmp 0x9b28
0x9ba3: mov rsi,qword ptr [rsp+0x18]
0x9ba8: mov rdi,r15
0x9bab: mov dword ptr [rsp+0x90],0xffffffff
0x9bb6: call 0xd670
0x9bbb: cmp rax,-0x1
0x9bbf: mov r14,rax
0x9bc2: je 0x9a1a
0x9bc8: cmp byte ptr [rsp+0x289],0x0
0x9bd0: je 0x9d7e
0x9bd6: lea rbp,[rsp+0x300]
0x9bde: mov rdi,qword ptr [rsp+0x18]
0x9be3: mov rsi,r13
0x9be6: mov rdx,rbp
0x9be9: call 0x66e0
0x9bee: lea rsi,[rsp+0x3e0]
0x9bf6: mov rdi,r13
0x9bf9: mov rbp,rax
0x9bfc: call 0x67a0
0x9c01: lea rsi,[rip+0x970d]
0x9c08: mov r12,rax
0x9c0b: mov edx,0x5
0x9c10: xor edi,edi
0x9c12: call 0x2820
0x9c17: mov rdx,rbp
0x9c1a: mov rdi,rax
0x9c1d: mov rsi,r12
0x9c20: xor eax,eax
0x9c22: call 0x61f0
0x9c27: cmp byte ptr [rsp+0x289],0x0
0x9c2f: je 0x9d7e
0x9c35: cmp qword ptr [rsp+0x258],0x0
0x9c3e: mov rax,qword ptr [rsp+0x260]
0x9c46: jne 0xa08f
0x9c4c: test rax,rax
0x9c4f: je 0xa4b1
0x9c55: lea rbp,[rsp+0x300]
0x9c5d: mov rdi,qword ptr [rsp+0x18]
0x9c62: mov rdx,rbp
0x9c65: mov rsi,r13
0x9c68: call 0x66e0
0x9c6d: lea rsi,[rip+0x96d4]
0x9c74: mov rbx,rax
0x9c77: mov edx,0x5
0x9c7c: xor edi,edi
0x9c7e: call 0x2820
0x9c83: mov rsi,rbx
0x9c86: mov rdi,rax
0x9c89: xor eax,eax
0x9c8b: call 0x61f0
0x9c90: mov rax,qword ptr [rsp+0x218]
0x9c98: mov rdx,qword ptr [rsp+0x220]
0x9ca0: movzx ebx,byte ptr [rsp+0x289]
0x9ca8: or rdx,rax
0x9cab: mov rsi,rdx
0x9cae: or rsi,qword ptr [rsp+0x228]
0x9cb6: je 0x9d9b
0x9cbc: test bl,bl
0x9cbe: je 0x9e05
0x9cc4: test rdx,rdx
0x9cc7: je 0xa5b9
0x9ccd: cmp dword ptr [rsp+0x7c],0xf
0x9cd2: je 0x9cf1
0x9cd4: lea rsi,[rip+0x9db5]
0x9cdb: xor edi,edi
0x9cdd: mov edx,0x5
0x9ce2: call 0x2820
0x9ce7: mov rdi,rax
0x9cea: xor eax,eax
0x9cec: call 0x61f0
0x9cf1: cmp qword ptr [rsp+0x228],0x0
0x9cfa: jne 0xa5b9
0x9d00: movsxd rdx,dword ptr [rsp+0x84]
0x9d08: xor eax,eax
0x9d0a: mov rcx,rdx
0x9d0d: add rcx,qword ptr [rsp+0x218]
0x9d15: movsxd rdx,ecx
0x9d18: seto al
0x9d1b: mov dword ptr [rsp+0x20],ecx
0x9d1f: cmp rcx,rdx
0x9d22: mov edx,0x1
0x9d27: cmovne eax,edx
0x9d2a: test eax,eax
0x9d2c: je 0x9e30
0x9d32: cmp byte ptr [rsp+0x289],0x0
0x9d3a: je 0x8ccb
0x9d40: lea rsi,[rip+0x961b]
0x9d47: xor edi,edi
0x9d49: mov edx,0x5
0x9d4e: call 0x2820
0x9d53: lea rsi,[rip+0x9616]
0x9d5a: mov rdi,rax
0x9d5d: mov edx,0x877
0x9d62: xor eax,eax
0x9d64: call 0x61f0
0x9d69: jmp 0x8ccb
0x9d6e: movzx ebx,byte ptr [rsp+0x289]
0x9d76: test bl,bl
0x9d78: jne 0xa098
0x9d7e: mov rax,qword ptr [rsp+0x218]
0x9d86: mov rdx,qword ptr [rsp+0x220]
0x9d8e: or rdx,rax
0x9d91: or rdx,qword ptr [rsp+0x228]
0x9d99: jne 0x9e05
0x9d9b: cmp qword ptr [rsp+0x280],0x0
0x9da4: je 0xa241
0x9daa: movsxd rax,dword ptr [rsp+0x1c8]
0x9db2: xor edx,edx
0x9db4: mov rbp,rax
0x9db7: sub rax,qword ptr [rsp+0x98]
0x9dbf: seto dl
0x9dc2: sub r14,rax
0x9dc5: seto al
0x9dc8: movzx eax,al
0x9dcb: or rdx,rax
0x9dce: je 0xa241
0x9dd4: test bl,bl
0x9dd6: je 0x8ccb
0x9ddc: lea rsi,[rip+0x9ead]
0x9de3: xor edi,edi
0x9de5: mov edx,0x5
0x9dea: call 0x2820
0x9def: mov esi,ebp
0x9df1: mov rdi,rax
0x9df4: xor eax,eax
0x9df6: call 0x61f0
0x9dfb: jmp 0x8ccb
0x9e00: call 0x2850
0x9e05: movsxd rdx,dword ptr [rsp+0x84]
0x9e0d: add rax,rdx
0x9e10: seto dl
0x9e13: movsxd rcx,eax
0x9e16: mov dword ptr [rsp+0x20],eax
0x9e1a: cmp rax,rcx
0x9e1d: movzx edx,dl
0x9e20: mov ecx,0x1
0x9e25: cmovne edx,ecx
0x9e28: test edx,edx
0x9e2a: jne 0x8ccb
0x9e30: movsxd r12,dword ptr [rsp+0x80]
0x9e38: xor eax,eax
0x9e3a: add r12,qword ptr [rsp+0x220]
0x9e42: movsxd rdx,r12d
0x9e45: seto al
0x9e48: cmp r12,rdx
0x9e4b: jne 0x9d32
0x9e51: test eax,eax
0x9e53: jne 0x9d32
0x9e59: movsxd rbp,dword ptr [rsp+0x7c]
0x9e5e: xor eax,eax
0x9e60: add rbp,qword ptr [rsp+0x228]
0x9e68: movsxd rdx,ebp
0x9e6b: seto al
0x9e6e: cmp rbp,rdx
0x9e71: jne 0x9d32
0x9e77: test eax,eax
0x9e79: jne 0x9d32
0x9e7f: mov eax,dword ptr [rsp+0x20]
0x9e83: mov rsi,qword ptr [rsp+0x18]
0x9e88: mov rdi,r15
0x9e8b: mov dword ptr [rsp+0x80],r12d
0x9e93: mov dword ptr [rsp+0x7c],ebp
0x9e97: mov dword ptr [rsp+0x84],eax
0x9e9e: mov eax,dword ptr [rsp+0xb8]
0x9ea5: mov dword ptr [rsp+0x78],eax
0x9ea9: mov eax,dword ptr [rsp+0xb4]
0x9eb0: mov dword ptr [rsp+0x74],eax
0x9eb4: mov eax,dword ptr [rsp+0xb0]
0x9ebb: mov dword ptr [rsp+0x70],eax
0x9ebf: mov eax,dword ptr [rsp+0xd0]
0x9ec6: mov dword ptr [rsp+0x90],eax
0x9ecd: call 0xd670
0x9ed2: cmp rax,-0x1
0x9ed6: mov r14,rax
0x9ed9: je 0xa547
0x9edf: movzx ebx,byte ptr [rsp+0x289]
0x9ee7: test bl,bl
0x9ee9: je 0x9d9b
0x9eef: mov rcx,qword ptr [rsp+0x228]
0x9ef7: mov rax,qword ptr [rsp+0x218]
0x9eff: lea rsi,[rip+0x9c7a]
0x9f06: mov rbx,qword ptr [rsp+0x220]
0x9f0e: xor edi,edi
0x9f10: mov edx,0x5
0x9f15: mov qword ptr [rsp+0x38],rcx
0x9f1a: mov qword ptr [rsp+0x30],rax
0x9f1f: call 0x2820
0x9f24: mov rcx,qword ptr [rsp+0x38]
0x9f29: mov rsi,qword ptr [rsp+0x30]
0x9f2e: mov rdx,rbx
0x9f31: mov rdi,rax
0x9f34: xor eax,eax
0x9f36: call 0x61f0
0x9f3b: mov rdi,qword ptr [rsp+0x18]
0x9f40: lea rdx,[rsp+0x300]
0x9f48: mov rsi,r13
0x9f4b: call 0x66e0
0x9f50: lea rsi,[rip+0x942a]
0x9f57: xor edi,edi
0x9f59: mov rbx,rax
0x9f5c: mov edx,0x5
0x9f61: call 0x2820
0x9f66: mov rsi,rbx
0x9f69: mov rdi,rax
0x9f6c: xor eax,eax
0x9f6e: call 0x61f0
0x9f73: mov eax,dword ptr [rsp+0xd0]
0x9f7a: cmp eax,-0x1
0x9f7d: je 0x9fa5
0x9f7f: cmp eax,dword ptr [rsp+0x90]
0x9f86: je 0x9fa5
0x9f88: lea rsi,[rip+0x9c31]
0x9f8f: xor edi,edi
0x9f91: mov edx,0x5
0x9f96: call 0x2820
0x9f9b: mov rdi,rax
0x9f9e: xor eax,eax
0x9fa0: call 0x61f0
0x9fa5: cmp qword ptr [rsp+0x228],0x0
0x9fae: jne 0xa082
0x9fb4: cmp ebp,dword ptr [rsp+0x7c]
0x9fb8: jne 0x9fd7
0x9fba: cmp qword ptr [rsp+0x220],0x0
0x9fc3: jne 0xa082
0x9fc9: cmp r12d,dword ptr [rsp+0x80]
0x9fd1: je 0xa082
0x9fd7: lea rsi,[rip+0x9c22]
0x9fde: mov edx,0x5
0x9fe3: xor edi,edi
0x9fe5: call 0x2820
0x9fea: mov rdi,rax
0x9fed: xor eax,eax
0x9fef: call 0x61f0
0x9ff4: lea r8,[rsp+0x2d3]
0x9ffc: mov edi,dword ptr [rsp+0x20]
0xa000: mov rsi,r8
0xa003: mov qword ptr [rsp+0x30],r8
0xa008: call 0x2b70
0xa00d: lea rsi,[rip+0x9c2c]
0xa014: mov edx,0x5
0xa019: xor edi,edi
0xa01b: mov rbx,rax
0xa01e: call 0x2820
0xa023: lea edx,[r12+0x1]
0xa028: mov ecx,ebp
0xa02a: mov rsi,rbx
0xa02d: mov rdi,rax
0xa030: xor eax,eax
0xa032: call 0x61f0
0xa037: mov r8,qword ptr [rsp+0x30]
0xa03c: mov eax,dword ptr [rsp+0x80]
0xa043: mov edi,dword ptr [rsp+0x84]
0xa04a: mov r12d,dword ptr [rsp+0x7c]
0xa04f: mov rsi,r8
0xa052: lea ebx,[rax+0x1]
0xa055: call 0x2b70
0xa05a: lea rsi,[rip+0x9c07]
0xa061: mov rbp,rax
0xa064: mov edx,0x5
0xa069: xor edi,edi
0xa06b: call 0x2820
0xa070: mov ecx,r12d
0xa073: mov rdi,rax
0xa076: mov edx,ebx
0xa078: mov rsi,rbp
0xa07b: xor eax,eax
0xa07d: call 0x61f0
0xa082: movzx ebx,byte ptr [rsp+0x289]
0xa08a: jmp 0x9d9b
0xa08f: test rax,rax
0xa092: je 0x9c55
0xa098: lea rbp,[rsp+0x300]
0xa0a0: lea rsi,[rsp+0x3e0]
0xa0a8: mov rdi,r13
0xa0ab: call 0x67a0
0xa0b0: lea rsi,[rip+0x9999]
0xa0b7: mov rbx,rax
0xa0ba: xor edi,edi
0xa0bc: mov edx,0x5
0xa0c1: call 0x2820
0xa0c6: mov rsi,rbx
0xa0c9: mov rdi,rax
0xa0cc: xor eax,eax
0xa0ce: call 0x61f0
0xa0d3: jmp 0x9c5d
0xa0d8: lea rbp,[rsp+0x300]
0xa0e0: lea r8,[rip+0x917e]
0xa0e7: push rcx
0xa0e8: push rdx
0xa0e9: mov esi,0x64
0xa0ee: mov edx,0x1
0xa0f3: mov rdi,rbp
0xa0f6: xor eax,eax
0xa0f8: mov ecx,0x64
0xa0fd: call 0x2740
0xa102: pop rsi
0xa103: pop rdi
0xa104: cmp qword ptr [rsp+0x278],0x0
0xa10d: mov edx,0x5
0xa112: je 0xa5a6
0xa118: lea rsi,[rip+0x9729]
0xa11f: xor edi,edi
0xa121: call 0x2820
0xa126: mov rdi,rax
0xa129: mov rsi,rbp
0xa12c: xor eax,eax
0xa12e: call 0x61f0
0xa133: jmp 0x9b28
0xa138: lea rdx,[rbp-0x1]
0xa13c: cmp rdx,0xa
0xa140: jbe 0x9b68
0xa146: cmp rbp,0xc
0xa14a: jne 0xa449
0xa150: mov dword ptr [rsp+0x78],0x0
0xa158: jmp 0x9b08
0xa19d: lea rdi,[rsp+0xb0]
0xa1a5: mov rsi,r13
0xa1a8: mov rdx,rbx
0xa1ab: call 0x66e0
0xa1b0: lea rsi,[rip+0x90db]
0xa1b7: mov edx,0x5
0xa1bc: xor edi,edi
0xa1be: mov qword ptr [rsp+0x48],rax
0xa1c3: call 0x2820
0xa1c8: mov rsi,qword ptr [rsp+0x48]
0xa1cd: mov rdi,rax
0xa1d0: xor eax,eax
0xa1d2: call 0x61f0
0xa1d7: mov rdi,qword ptr [rsp+0x18]
0xa1dc: mov rsi,r13
0xa1df: mov rdx,rbx
0xa1e2: call 0x66e0
0xa1e7: lea rsi,[rip+0x90c2]
0xa1ee: mov edx,0x5
0xa1f3: xor edi,edi
0xa1f5: mov r13,rax
0xa1f8: call 0x2820
0xa1fd: mov rsi,r13
0xa200: mov rdi,rax
0xa203: xor eax,eax
0xa205: call 0x61f0
0xa20a: mov r10d,dword ptr [rsp+0x50]
0xa20f: mov r9d,dword ptr [rsp+0x54]
0xa214: lea rdx,[rip+0x9094]
0xa21b: mov r8d,dword ptr [rsp+0x58]
0xa220: mov ecx,dword ptr [rsp+0x5c]
0xa224: lea rax,[rip+0x8f54]
0xa22b: mov rsi,rdx
0xa22e: cmp r10d,r9d
0xa231: cmovne rsi,rax
0xa235: cmp r8d,ecx
0xa238: cmove rax,rdx
0xa23c: jmp 0x96c7
0xa241: test bl,bl
0xa243: jne 0xa464
0xa249: mov rbp,qword ptr [rsp+0x230]
0xa251: movzx r12d,byte ptr [rsp+0x289]
0xa25a: imul r9,rbp,0xe10
0xa261: jo 0xa3bd
0xa267: add r9,r14
0xa26a: jo 0xa3bd
0xa270: mov r13,qword ptr [rsp+0x238]
0xa278: imul rax,r13,0x3c
0xa27c: jo 0xa3bd
0xa282: add r9,rax
0xa285: jo 0xa3bd
0xa28b: mov r14,qword ptr [rsp+0x240]
0xa293: add r9,r14
0xa296: jo 0xa3bd
0xa29c: movsxd rsi,dword ptr [rsp+0x248]
0xa2a4: mov rcx,qword ptr [rsp+0x210]
0xa2ac: mov r8d,0x3b9aca00
0xa2b2: mov rbx,r9
0xa2b5: add rcx,rsi
0xa2b8: mov rax,rcx
0xa2bb: cqto 
0xa2bd: idiv r8
0xa2c0: lea rax,[rdx+0x3b9aca00]
0xa2c7: cqto 
0xa2c9: idiv r8
0xa2cc: mov rax,rcx
0xa2cf: sub rax,rdx
0xa2d2: mov rdi,rdx
0xa2d5: cqto 
0xa2d7: idiv r8
0xa2da: cltq 
0xa2dc: add rbx,rax
0xa2df: jo 0xa3bd
0xa2e5: mov rax,qword ptr [rsp+0x28]
0xa2ea: test r12b,r12b
0xa2ed: mov qword ptr [rax],rbx
0xa2f0: mov qword ptr [rax+0x8],rdi
0xa2f4: je 0x9002
0xa2fa: mov rax,rbp
0xa2fd: or rax,r13
0xa300: or rax,r14
0xa303: or rax,rsi
0xa306: je 0x9002
0xa30c: mov dword ptr [rsp+0x18],esi
0xa310: lea rsi,[rip+0x99d9]
0xa317: xor edi,edi
0xa319: mov edx,0x5
0xa31e: call 0x2820
0xa323: mov r10d,dword ptr [rsp+0x18]
0xa328: mov rcx,r14
0xa32b: mov rdi,rax
0xa32e: mov rdx,r13
0xa331: xor eax,eax
0xa333: mov rsi,rbp
0xa336: mov r8d,r10d
0xa339: call 0x61f0
0xa33e: lea rsi,[rip+0x99fb]
0xa345: xor edi,edi
0xa347: mov edx,0x5
0xa34c: call 0x2820
0xa351: mov rsi,rbx
0xa354: mov rdi,rax
0xa357: xor eax,eax
0xa359: call 0x61f0
0xa35e: cmp dword ptr [rsp+0x90],-0x1
0xa366: je 0xa3af
0xa368: mov rsi,qword ptr [rsp+0x28]
0xa36d: lea rdx,[rsp+0x170]
0xa375: mov rdi,r15
0xa378: call 0xd5c0
0xa37d: test rax,rax
0xa380: je 0xa3af
0xa382: mov eax,dword ptr [rsp+0x190]
0xa389: cmp dword ptr [rsp+0x90],eax
0xa390: je 0xa3af
0xa392: lea rsi,[rip+0x99cf]
0xa399: xor edi,edi
0xa39b: mov edx,0x5
0xa3a0: call 0x2820
0xa3a5: mov rdi,rax
0xa3a8: xor eax,eax
0xa3aa: call 0x61f0
0xa3af: movzx r12d,byte ptr [rsp+0x289]
0xa3b8: jmp 0x9002
0xa3bd: test r12b,r12b
0xa3c0: je 0x8ccb
0xa3c6: mov edx,0x5
0xa3cb: lea rsi,[rip+0x98ee]
0xa3d2: jmp 0x9399
0xa3d7: cmp byte ptr [rsp+0x289],0x0
0xa3df: je 0x8ccb
0xa3e5: lea rsi,[rip+0x8e88]
0xa3ec: xor edi,edi
0xa3ee: mov edx,0x5
0xa3f3: call 0x2820
0xa3f8: mov rsi,rbp
0xa3fb: mov rdi,rax
0xa3fe: xor eax,eax
0xa400: call 0x61f0
0xa405: jmp 0x8ccb
0xa40a: lea rbx,[rip+0x8e9e]
0xa411: mov dword ptr [rsp+0x78],0xffffffff
0xa419: test al,al
0xa41b: je 0x8ccb
0xa421: lea rsi,[rip+0x8e22]
0xa428: xor edi,edi
0xa42a: mov edx,0x5
0xa42f: call 0x2820
0xa434: mov rdx,rbx
0xa437: mov rdi,rax
0xa43a: mov rsi,rbp
0xa43d: xor eax,eax
0xa43f: call 0x61f0
0xa444: jmp 0x8ccb
0xa449: mov dword ptr [rsp+0x78],0xffffffff
0xa451: lea rbx,[rip+0x8d22]
0xa458: jmp 0xa419
0xa464: mov rdi,qword ptr [rsp+0x18]
0xa469: lea rdx,[rsp+0x300]
0xa471: mov rsi,r13
0xa474: call 0x66e0
0xa479: lea rsi,[rip+0x8f1b]
0xa480: mov rbx,rax
0xa483: xor edi,edi
0xa485: mov edx,0x5
0xa48a: call 0x2820
0xa48f: mov rdx,r14
0xa492: mov rdi,rax
0xa495: mov rsi,rbx
0xa498: xor eax,eax
0xa49a: call 0x61f0
0xa49f: jmp 0xa249
0xa4a4: mov rdi,rdx
0xa4a7: call 0xd5b0
0xa4ac: jmp 0x957b
0xa4b1: mov eax,dword ptr [rsp+0x80]
0xa4b8: mov edi,dword ptr [rsp+0x84]
0xa4bf: lea rsi,[rsp+0x2d3]
0xa4c7: mov r12d,dword ptr [rsp+0x7c]
0xa4cc: lea rbp,[rsp+0x300]
0xa4d4: lea ebx,[rax+0x1]
0xa4d7: call 0x2b70
0xa4dc: push r12
0xa4de: lea r8,[rip+0x8e4e]
0xa4e5: push rbx
0xa4e6: mov r9,rax
0xa4e9: mov ecx,0x64
0xa4ee: mov edx,0x1
0xa4f3: mov esi,0x64
0xa4f8: mov rdi,rbp
0xa4fb: xor eax,eax
0xa4fd: call 0x2740
0xa502: lea rsi,[rip+0x9517]
0xa509: mov edx,0x5
0xa50e: xor edi,edi
0xa510: call 0x2820
0xa515: mov rsi,rbp
0xa518: mov rdi,rax
0xa51b: xor eax,eax
0xa51d: call 0x61f0
0xa522: pop rax
0xa523: pop rdx
0xa524: cmp qword ptr [rsp+0x260],0x0
0xa52d: je 0x9c5d
0xa533: cmp qword ptr [rsp+0x258],0x0
0xa53c: jne 0xa0a0
0xa542: jmp 0x9c5d
0xa547: cmp byte ptr [rsp+0x289],0x0
0xa54f: je 0x8ccb
0xa555: mov rdi,qword ptr [rsp+0x18]
0xa55a: lea rdx,[rsp+0x300]
0xa562: mov rsi,r13
0xa565: call 0x66e0
0xa56a: lea rsi,[rip+0x95cf]
0xa571: mov rbx,rax
0xa574: xor edi,edi
0xa576: mov edx,0x5
0xa57b: call 0x2820
0xa580: mov rsi,rbx
0xa583: mov rdi,rax
0xa586: xor eax,eax
0xa588: call 0x61f0
0xa58d: jmp 0x8ccb
0xa592: mov dword ptr [rsp+0x78],0xffffffff
0xa59a: lea rbx,[rip+0x8b3d]
0xa5a1: jmp 0xa419
0xa5a6: lea rsi,[rip+0x92cb]
0xa5ad: xor edi,edi
0xa5af: call 0x2820
0xa5b4: jmp 0xa126
0xa5b9: cmp dword ptr [rsp+0x78],0xc
0xa5be: je 0x9d00
0xa5c4: lea rsi,[rip+0x952d]
0xa5cb: xor edi,edi
0xa5cd: mov edx,0x5
0xa5d2: call 0x2820
0xa5d7: mov rdi,rax
0xa5da: xor eax,eax
0xa5dc: call 0x61f0
0xa5e1: jmp 0x9d00
0xa5e6: lea rsi,[rip+0x8d0c]
0xa5ed: xor edi,edi
0xa5ef: call 0x2820
0xa5f4: jmp 0x981b
0xa600: push r14
0xa602: push r13
0xa604: mov r14,rdx
0xa607: push r12
0xa609: push rbp
0xa60a: mov r12,rdi
0xa60d: push rbx
0xa60e: lea rdi,[rip+0x7179]
0xa615: mov r13,rsi
0xa618: sub rsp,0x10
0xa61c: call 0x2730
0xa621: mov rdi,rax
0xa624: mov rbp,rax
0xa627: call 0xd300
0xa62c: mov rbx,rax
0xa62f: xor eax,eax
0xa631: test rbx,rbx
0xa634: je 0xa65d
0xa636: mov r9,rbp
0xa639: mov r8,rbx
0xa63c: xor ecx,ecx
0xa63e: mov rdx,r14
0xa641: mov rsi,r13
0xa644: mov rdi,r12
0xa647: call 0x8890
0xa64c: mov rdi,rbx
0xa64f: mov byte ptr [rsp+0xf],al
0xa653: call 0xd5b0
0xa658: movzx eax,byte ptr [rsp+0xf]
0xa65d: add rsp,0x10
0xa661: pop rbx
0xa662: pop rbp
0xa663: pop r12
0xa665: pop r13
0xa667: pop r14
0xa669: ret 
0xa6a0: xor eax,eax
0xa6a2: jmp 0xa6ca
0xa71c: call 0x2850
0xa726: nop word ptr cs:[rax+rax]
0xa90e: mov edx,dword ptr [rsp+0x24]
0xa912: mov ecx,dword ptr [rsp+0x20]
0xa916: xor edx,dword ptr [rsp+0x64]
0xa91a: xor ecx,dword ptr [rsp+0x60]
0xa91e: mov esi,dword ptr [rsp+0x10]
0xa922: or edx,ecx
0xa924: mov ecx,dword ptr [rsp+0x1c]
0xa928: xor ecx,dword ptr [rsp+0x5c]
0xa92c: or edx,ecx
0xa92e: mov ecx,dword ptr [rsp+0x18]
0xa932: xor ecx,dword ptr [rsp+0x58]
0xa936: or edx,ecx
0xa938: mov ecx,dword ptr [rsp+0x14]
0xa93c: xor ecx,dword ptr [rsp+0x54]
0xa940: or edx,ecx
0xa942: mov ecx,dword ptr [rsp+0x50]
0xa946: xor ecx,esi
0xa948: or edx,ecx
0xa94a: je 0xa990
0xa94c: cmp esi,0x3c
0xa94f: jne 0xa794
0xa955: lea r14,[rsp+0xb0]
0xa95d: mov edx,0x10
0xa962: mov rsi,rbx
0xa965: mov rdi,r14
0xa968: call 0x29b0
0xa96d: mov edx,0x3935
0xa972: lea rdi,[rsp+0x8]
0xa977: mov byte ptr [rax],0x0
0xa97a: mov word ptr [rax-0x2],dx
0xa97e: mov rsi,r14
0xa981: mov edx,ebp
0xa983: call 0xa730
0xa988: test al,al
0xa98a: je 0xa794
0xa990: mov qword ptr [r12],r13
0xa994: mov eax,0x1
0xa999: jmp 0xa794
0xa9a0: lea rax,[r13-0x8]
0xa9a4: xor r14d,r14d
0xa9a7: cmp rax,0x4
0xa9ab: jbe 0xa7cd
0xa9b1: jmp 0xa792
0xa9c0: lea rdi,[rsp+0x24]
0xa9c5: mov ecx,ebp
0xa9c7: mov rsi,r15
0xa9ca: call 0xa670
0xa9cf: test al,al
0xa9d1: je 0xa792
0xa9d7: lea rax,[r15+r13*4-0x10]
0xa9dc: mov esi,dword ptr [rax]
0xa9de: lea edx,[rsi-0x1]
0xa9e1: mov dword ptr [rsp+0x20],edx
0xa9e5: mov edx,dword ptr [rax+0x4]
0xa9e8: mov dword ptr [rsp+0x1c],edx
0xa9ec: mov edx,dword ptr [rax+0x8]
0xa9ef: mov eax,dword ptr [rax+0xc]
0xa9f2: mov dword ptr [rsp+0x18],edx
0xa9f6: mov dword ptr [rsp+0x14],eax
0xa9fa: jmp 0xa881
0xaa0f: call 0x2850
0xaa14: nop word ptr cs:[rax+rax]
0xaa1e: nop 
0xaabf: nop 
0xaac0: push rbp
0xaac1: push rbx
0xaac2: mov rbp,rdi
0xaac5: mov ebx,esi
0xaac7: sub rsp,0x8
0xaacb: call 0xd9a0
0xaad0: movzx edx,byte ptr [rax]
0xaad3: and edx,-0x21
0xaad6: cmp dl,0x55
0xaad9: je 0xab50
0xaadb: cmp dl,0x47
0xaade: je 0xab00
0xaae0: lea rax,[rip+0x869e]
0xaae7: lea rdx,[rip+0x999d]
0xaaee: cmp ebx,0x9
0xaaf1: cmovne rax,rdx
0xaaf5: add rsp,0x8
0xaaf9: pop rbx
0xaafa: pop rbp
0xaafb: ret 
0xab00: movzx edx,byte ptr [rax+0x1]
0xab04: and edx,-0x21
0xab07: cmp dl,0x42
0xab0a: jne 0xaae0
0xab0c: cmp byte ptr [rax+0x2],0x31
0xab10: jne 0xaae0
0xab12: cmp byte ptr [rax+0x3],0x38
0xab16: jne 0xaae0
0xab18: cmp byte ptr [rax+0x4],0x30
0xab1c: jne 0xaae0
0xab1e: cmp byte ptr [rax+0x5],0x33
0xab22: jne 0xaae0
0xab24: cmp byte ptr [rax+0x6],0x30
0xab28: jne 0xaae0
0xab2a: cmp byte ptr [rax+0x7],0x0
0xab2e: jne 0xaae0
0xab30: cmp byte ptr [rbp],0x60
0xab34: lea rax,[rip+0x9949]
0xab3b: lea rdx,[rip+0x9946]
0xab42: cmovne rax,rdx
0xab46: add rsp,0x8
0xab4a: pop rbx
0xab4b: pop rbp
0xab4c: ret 
0xab50: movzx edx,byte ptr [rax+0x1]
0xab54: and edx,-0x21
0xab57: cmp dl,0x54
0xab5a: jne 0xaae0
0xab5c: movzx edx,byte ptr [rax+0x2]
0xab60: and edx,-0x21
0xab63: cmp dl,0x46
0xab66: jne 0xaae0
0xab6c: cmp byte ptr [rax+0x3],0x2d
0xab70: jne 0xaae0
0xab76: cmp byte ptr [rax+0x4],0x38
0xab7a: jne 0xaae0
0xab80: cmp byte ptr [rax+0x5],0x0
0xab84: jne 0xaae0
0xab8a: cmp byte ptr [rbp],0x60
0xab8e: lea rax,[rip+0x98e7]
0xab95: lea rdx,[rip+0x98e4]
0xab9c: cmovne rax,rdx
0xaba0: add rsp,0x8
0xaba4: pop rbx
0xaba5: pop rbp
0xaba6: ret 
0xac83: xor r11d,r11d
0xac86: mov rax,rbp
0xac89: mov r8d,r12d
0xac8c: mov rbp,r11
0xac8f: mov r11,rax
0xac92: nop word ptr [rax+rax]
0xac98: cmp r11,rbp
0xac9b: setne r12b
0xac9f: cmp r11,-0x1
0xaca3: jne 0xacb2
0xaca5: mov rax,qword ptr [rsp+0x10]
0xacaa: cmp byte ptr [rax+rbp],0x0
0xacae: setne r12b
0xacb2: test r12b,r12b
0xacb5: je 0xb310
0xacbb: cmp dword ptr [rsp+0x8],0x2
0xacc0: mov rdi,qword ptr [rsp+0x10]
0xacc5: lea r9,[rdi+rbp]
0xacc9: setne al
0xaccc: and al,byte ptr [rsp+0xd]
0xacd0: mov r10d,eax
0xacd3: je 0xad80
0xacd9: mov rax,qword ptr [rsp+0x18]
0xacde: test rax,rax
0xace1: je 0xb110
0xace7: cmp r11,-0x1
0xaceb: lea rbx,[rbp+rax]
0xacf0: jne 0xad20
0xacf2: cmp rax,0x1
0xacf6: jbe 0xad20
0xacf8: mov byte ptr [rsp+0x38],r8b
0xacfd: mov byte ptr [rsp+0x30],r10b
0xad02: mov qword ptr [rsp+0x28],r9
0xad07: call 0x2840
0xad0c: movzx r8d,byte ptr [rsp+0x38]
0xad12: movzx r10d,byte ptr [rsp+0x30]
0xad18: mov r11,rax
0xad1b: mov r9,qword ptr [rsp+0x28]
0xad20: cmp rbx,r11
0xad23: mov byte ptr [rsp+0x28],r10b
0xad28: ja 0xb2e0
0xad2e: mov rdx,qword ptr [rsp+0x18]
0xad33: mov rsi,qword ptr [rsp+0x48]
0xad38: mov rdi,r9
0xad3b: mov qword ptr [rsp+0x40],r11
0xad40: mov byte ptr [rsp+0x38],r8b
0xad45: mov qword ptr [rsp+0x30],r9
0xad4a: call 0x2910
0xad4f: test eax,eax
0xad51: mov r9,qword ptr [rsp+0x30]
0xad56: movzx r8d,byte ptr [rsp+0x38]
0xad5c: mov r11,qword ptr [rsp+0x40]
0xad61: jne 0xb2e0
0xad67: cmp byte ptr [rsp+0xf],0x0
0xad6c: movzx r10d,byte ptr [rsp+0x28]
0xad72: jne 0xbcf5
0xad78: nop dword ptr [rax+rax]
0xad80: movzx ebx,byte ptr [r9]
0xad84: cmp bl,0x7e
0xad87: ja 0xb0a8
0xad8d: lea rcx,[rip+0x9778]
0xad94: movzx edx,bl
0xad97: movsxd rax,dword ptr [rcx+rdx*4]
0xad9b: add rax,rcx
0xad9e: jmp rax
0xadd8: cmp byte ptr [rsp+0xd],0x1
0xaddd: jne 0xaef2
0xade3: test dl,dl
0xade5: jne 0xaef2
0xadeb: mov rsi,qword ptr [rsp+0x20]
0xadf0: test rsi,rsi
0xadf3: je 0xae09
0xadf5: mov edx,ebx
0xadf7: shr dl,0x5
0xadfa: movzx edx,dl
0xadfd: mov edx,dword ptr [rsi+rdx*4]
0xae00: btl edx,ebx
0xae03: jb 0xaf53
0xae09: test r10b,r10b
0xae0c: jne 0xaf53
0xae12: xor eax,0x1
0xae15: add rbp,0x1
0xae19: and eax,r8d
0xae1c: test al,al
0xae1e: je 0xae40
0xae20: cmp r13,r15
0xae23: jbe 0xae2a
0xae25: mov byte ptr [r14+r15],0x27
0xae2a: lea rax,[r15+0x1]
0xae2e: cmp r13,rax
0xae31: jbe 0xae39
0xae33: mov byte ptr [r14+r15+0x1],0x27
0xae39: add r15,0x2
0xae3d: xor r8d,r8d
0xae40: cmp r15,r13
0xae43: jae 0xae49
0xae45: mov byte ptr [r14+r15],bl
0xae49: movzx edi,byte ptr [rsp+0xe]
0xae4e: add r15,0x1
0xae52: mov eax,0x0
0xae57: test r12b,r12b
0xae5a: cmove edi,eax
0xae5d: mov byte ptr [rsp+0xe],dil
0xae62: jmp 0xac98
0xaef2: cmp byte ptr [rsp+0xf],0x0
0xaef7: jne 0xadeb
0xaefd: jmp 0xae09
0xaf53: cmp dword ptr [rsp+0x8],0x2
0xaf58: sete dl
0xaf5b: cmp byte ptr [rsp+0xf],0x0
0xaf60: mov eax,edx
0xaf62: jne 0xb7b8
0xaf68: mov eax,r8d
0xaf6b: xor eax,0x1
0xaf6e: and al,dl
0xaf70: je 0xafa1
0xaf72: cmp r13,r15
0xaf75: jbe 0xaf7c
0xaf77: mov byte ptr [r14+r15],0x27
0xaf7c: lea rdx,[r15+0x1]
0xaf80: cmp r13,rdx
0xaf83: jbe 0xaf8b
0xaf85: mov byte ptr [r14+r15+0x1],0x24
0xaf8b: lea rdx,[r15+0x2]
0xaf8f: cmp r13,rdx
0xaf92: jbe 0xaf9a
0xaf94: mov byte ptr [r14+r15+0x2],0x27
0xaf9a: add r15,0x3
0xaf9e: mov r8d,eax
0xafa1: cmp r13,r15
0xafa4: jbe 0xafab
0xafa6: mov byte ptr [r14+r15],0x5c
0xafab: add r15,0x1
0xafaf: add rbp,0x1
0xafb3: jmp 0xae40
0xb0a0: xor r10d,r10d
0xb0a3: nop dword ptr [rax+rax]
0xb0a8: cmp qword ptr [rsp+0x58],0x1
0xb0ae: jne 0xb458
0xb0b4: mov qword ptr [rsp+0x38],r11
0xb0b9: mov byte ptr [rsp+0x30],r8b
0xb0be: mov byte ptr [rsp+0x28],r10b
0xb0c3: call 0x2b40
0xb0c8: mov rcx,qword ptr [rax]
0xb0cb: movzx edx,bl
0xb0ce: movzx r10d,byte ptr [rsp+0x28]
0xb0d4: movzx r8d,byte ptr [rsp+0x30]
0xb0da: mov r11,qword ptr [rsp+0x38]
0xb0df: mov edi,0x1
0xb0e4: movzx eax,word ptr [rcx+rdx*2]
0xb0e8: and ax,0x4000
0xb0ec: setne r12b
0xb0f0: sete al
0xb0f3: and al,byte ptr [rsp+0xd]
0xb0f7: test al,al
0xb0f9: jne 0xba91
0xb0ff: cmp dword ptr [rsp+0x8],0x2
0xb104: sete dl
0xb107: jmp 0xadd8
0xb110: movzx ebx,byte ptr [r9]
0xb114: cmp bl,0x7e
0xb117: ja 0xb0a0
0xb119: lea rcx,[rip+0x95e8]
0xb120: movzx edx,bl
0xb123: movsxd rax,dword ptr [rcx+rdx*4]
0xb127: add rax,rcx
0xb12a: jmp rax
0xb2e0: xor r10d,r10d
0xb2e3: jmp 0xad80
0xb310: cmp dword ptr [rsp+0x8],0x2
0xb315: movzx ebx,byte ptr [rsp+0xf]
0xb31a: mov r12d,r8d
0xb31d: mov rbp,r11
0xb320: sete dl
0xb323: mov eax,ebx
0xb325: test r15,r15
0xb328: sete cl
0xb32b: and eax,edx
0xb32d: and al,cl
0xb32f: jne 0xbd96
0xb335: mov eax,ebx
0xb337: xor eax,0x1
0xb33a: and dl,al
0xb33c: je 0xbcac
0xb342: cmp byte ptr [rsp+0x7c],0x0
0xb347: je 0xbcaa
0xb34d: cmp byte ptr [rsp+0xe],0x0
0xb352: jne 0xbd4d
0xb358: test r13,r13
0xb35b: sete al
0xb35e: cmp qword ptr [rsp+0x50],0x0
0xb364: setne dl
0xb367: and al,dl
0xb369: je 0xbd8c
0xb36f: mov r13,qword ptr [rsp+0x50]
0xb374: lea rbx,[rip+0x9110]
0xb37b: mov byte ptr [r14],0x27
0xb37f: mov dword ptr [rsp+0x8],0x2
0xb387: mov r15d,0x1
0xb38d: mov qword ptr [rsp+0x18],0x1
0xb396: mov byte ptr [rsp+0xf],0x0
0xb39b: mov qword ptr [rsp+0x48],rbx
0xb3a0: mov byte ptr [rsp+0x7c],al
0xb3a4: jmp 0xac83
0xb458: lea rax,[rsp+0xa0]
0xb460: cmp r11,-0x1
0xb464: mov qword ptr [rsp+0xa0],0x0
0xb470: mov qword ptr [rsp+0x28],rax
0xb475: jne 0xb4a4
0xb477: mov rdi,qword ptr [rsp+0x10]
0xb47c: mov byte ptr [rsp+0x40],r8b
0xb481: mov byte ptr [rsp+0x38],r10b
0xb486: mov qword ptr [rsp+0x30],r9
0xb48b: call 0x2840
0xb490: movzx r8d,byte ptr [rsp+0x40]
0xb496: movzx r10d,byte ptr [rsp+0x38]
0xb49c: mov r11,rax
0xb49f: mov r9,qword ptr [rsp+0x30]
0xb4a4: lea rax,[rsp+0x9c]
0xb4ac: xor ecx,ecx
0xb4ae: mov byte ptr [rsp+0x7e],bl
0xb4b2: mov byte ptr [rsp+0x7d],r8b
0xb4b7: mov rbx,rcx
0xb4ba: mov qword ptr [rsp+0x88],r9
0xb4c2: mov qword ptr [rsp+0x38],rax
0xb4c7: mov byte ptr [rsp+0x7f],r10b
0xb4cc: mov qword ptr [rsp+0x80],r15
0xb4d4: mov qword ptr [rsp+0x40],r14
0xb4d9: mov qword ptr [rsp+0x70],r13
0xb4de: mov qword ptr [rsp+0x30],r11
0xb4e3: mov rax,qword ptr [rsp+0x10]
0xb4e8: lea r14,[rbp+rbx]
0xb4ed: mov rdx,qword ptr [rsp+0x30]
0xb4f2: mov rcx,qword ptr [rsp+0x28]
0xb4f7: mov rdi,qword ptr [rsp+0x38]
0xb4fc: lea r13,[rax+r14]
0xb500: sub rdx,r14
0xb503: mov rsi,r13
0xb506: call 0xd1b0
0xb50b: test rax,rax
0xb50e: mov r15,rax
0xb511: je 0xb561
0xb513: cmp rax,-0x1
0xb517: je 0xbb35
0xb51d: cmp rax,-0x2
0xb521: je 0xbac1
0xb527: cmp dword ptr [rsp+0x8],0x2
0xb52c: sete al
0xb52f: and al,byte ptr [rsp+0xf]
0xb533: jne 0xb6d0
0xb539: mov edi,dword ptr [rsp+0x9c]
0xb540: call 0x2b20
0xb545: mov rdi,qword ptr [rsp+0x28]
0xb54a: test eax,eax
0xb54c: mov eax,0x0
0xb551: cmove r12d,eax
0xb555: add rbx,r15
0xb558: call 0x2b10
0xb55d: test eax,eax
0xb55f: je 0xb4e3
0xb561: mov edx,r12d
0xb564: mov rdi,rbx
0xb567: movzx r8d,byte ptr [rsp+0x7d]
0xb56d: xor edx,0x1
0xb570: movzx ebx,byte ptr [rsp+0x7e]
0xb575: movzx r10d,byte ptr [rsp+0x7f]
0xb57b: and dl,byte ptr [rsp+0xd]
0xb57f: mov r15,qword ptr [rsp+0x80]
0xb587: mov r14,qword ptr [rsp+0x40]
0xb58c: mov r13,qword ptr [rsp+0x70]
0xb591: mov r11,qword ptr [rsp+0x30]
0xb596: cmp rdi,0x1
0xb59a: jbe 0xbb9b
0xb5a0: mov rcx,rdi
0xb5a3: xor esi,esi
0xb5a5: movzx r9d,byte ptr [rsp+0xf]
0xb5ab: add rcx,rbp
0xb5ae: mov rdi,qword ptr [rsp+0x10]
0xb5b3: jmp 0xb66e
0xb5c0: cmp dword ptr [rsp+0x8],0x2
0xb5c5: sete al
0xb5c8: test r9b,r9b
0xb5cb: jne 0xba80
0xb5d1: mov esi,r8d
0xb5d4: xor esi,0x1
0xb5d7: and al,sil
0xb5da: je 0xb60b
0xb5dc: cmp r13,r15
0xb5df: jbe 0xb5e6
0xb5e1: mov byte ptr [r14+r15],0x27
0xb5e6: lea rsi,[r15+0x1]
0xb5ea: cmp r13,rsi
0xb5ed: jbe 0xb5f5
0xb5ef: mov byte ptr [r14+r15+0x1],0x24
0xb5f5: lea rsi,[r15+0x2]
0xb5f9: cmp r13,rsi
0xb5fc: jbe 0xb604
0xb5fe: mov byte ptr [r14+r15+0x2],0x27
0xb604: add r15,0x3
0xb608: mov r8d,eax
0xb60b: cmp r13,r15
0xb60e: jbe 0xb615
0xb610: mov byte ptr [r14+r15],0x5c
0xb615: lea rax,[r15+0x1]
0xb619: cmp r13,rax
0xb61c: jbe 0xb62b
0xb61e: mov eax,ebx
0xb620: shr al,0x6
0xb623: add eax,0x30
0xb626: mov byte ptr [r14+r15+0x1],al
0xb62b: lea rax,[r15+0x2]
0xb62f: cmp r13,rax
0xb632: jbe 0xb644
0xb634: mov eax,ebx
0xb636: shr al,0x3
0xb639: and eax,0x7
0xb63c: add eax,0x30
0xb63f: mov byte ptr [r14+r15+0x2],al
0xb644: and ebx,0x7
0xb647: add rbp,0x1
0xb64b: add r15,0x3
0xb64f: add ebx,0x30
0xb652: cmp rbp,rcx
0xb655: jae 0xae40
0xb65b: mov esi,edx
0xb65d: cmp r13,r15
0xb660: jbe 0xb666
0xb662: mov byte ptr [r14+r15],bl
0xb666: movzx ebx,byte ptr [rdi+rbp]
0xb66a: add r15,0x1
0xb66e: test dl,dl
0xb670: jne 0xb5c0
0xb676: mov eax,esi
0xb678: xor eax,0x1
0xb67b: and eax,r8d
0xb67e: test r10b,r10b
0xb681: je 0xb691
0xb683: cmp r13,r15
0xb686: jbe 0xb68d
0xb688: mov byte ptr [r14+r15],0x5c
0xb68d: add r15,0x1
0xb691: add rbp,0x1
0xb695: cmp rbp,rcx
0xb698: jae 0xae1c
0xb69e: test al,al
0xb6a0: je 0xba9e
0xb6a6: cmp r13,r15
0xb6a9: jbe 0xb6b0
0xb6ab: mov byte ptr [r14+r15],0x27
0xb6b0: lea rax,[r15+0x1]
0xb6b4: cmp r13,rax
0xb6b7: jbe 0xb6bf
0xb6b9: mov byte ptr [r14+r15+0x1],0x27
0xb6bf: add r15,0x2
0xb6c3: xor r10d,r10d
0xb6c6: xor r8d,r8d
0xb6c9: jmp 0xb65d
0xb6d0: cmp r15,0x1
0xb6d4: je 0xb539
0xb6da: mov rdi,qword ptr [rsp+0x10]
0xb6df: lea rcx,[rdi+r15]
0xb6e3: lea rdx,[rdi+r14+0x1]
0xb6e8: lea r8,[rcx+r14]
0xb6ec: jmp 0xb6fd
0xb6f0: add rdx,0x1
0xb6f4: cmp r8,rdx
0xb6f7: je 0xb539
0xb6fd: movzx ecx,byte ptr [rdx]
0xb700: sub ecx,0x5b
0xb703: cmp cl,0x21
0xb706: ja 0xb6f0
0xb708: mov esi,0x1
0xb70d: shl rsi,cl
0xb710: mov rcx,rsi
0xb713: movabsq rsi,0x20000002b
0xb71d: test rcx,rsi
0xb720: je 0xb6f0
0xb722: mov r14,qword ptr [rsp+0x40]
0xb727: mov r13,qword ptr [rsp+0x70]
0xb72c: mov rbp,qword ptr [rsp+0x30]
0xb731: mov dword ptr [rsp+0x8],0x2
0xb739: cmp byte ptr [rsp+0xd],0x0
0xb73e: je 0xb750
0xb740: test al,al
0xb742: mov eax,0x4
0xb747: cmove eax,dword ptr [rsp+0x8]
0xb74c: mov dword ptr [rsp+0x8],eax
0xb750: sub rsp,0x8
0xb754: mov rcx,rbp
0xb757: mov rsi,r13
0xb75a: push qword ptr [rsp+0x68]
0xb75e: push qword ptr [rsp+0x78]
0xb762: mov rdi,r14
0xb765: push 0x0
0xb767: mov r9d,dword ptr [rsp+0x98]
0xb76f: mov r8d,dword ptr [rsp+0x28]
0xb774: mov rdx,qword ptr [rsp+0x30]
0xb779: and r9d,-0x3
0xb77d: call 0xabb0
0xb782: add rsp,0x20
0xb786: mov r15,rax
0xb789: mov rbx,qword ptr [rsp+0xa8]
0xb791: xor rbx,qword ptr fs:0x28
0xb79a: mov rax,r15
0xb79d: jne 0xbda3
0xb7a3: add rsp,0xb8
0xb7aa: pop rbx
0xb7ab: pop rbp
0xb7ac: pop r12
0xb7ae: pop r13
0xb7b0: pop r14
0xb7b2: pop r15
0xb7b4: ret 
0xb7b8: mov rbp,r11
0xb7bb: jmp 0xb739
0xb821: test r13,r13
0xb824: jne 0xbdba
0xb82a: lea rax,[rip+0x8c5a]
0xb831: mov qword ptr [rsp+0x50],0x0
0xb83a: mov byte ptr [rsp+0xe],0x1
0xb83f: mov byte ptr [rsp+0x7c],0x0
0xb844: xor r12d,r12d
0xb847: mov byte ptr [rsp+0xf],0x0
0xb84c: mov qword ptr [rsp+0x18],0x1
0xb855: mov qword ptr [rsp+0x48],rax
0xb85a: mov r15d,0x1
0xb860: mov dword ptr [rsp+0x8],0x2
0xb868: jmp 0xac83
0xba80: movzx ebx,byte ptr [rsp+0xf]
0xba85: mov rbp,r11
0xba88: mov byte ptr [rsp+0xd],bl
0xba8c: jmp 0xb739
0xba91: movzx edx,byte ptr [rsp+0xd]
0xba96: xor r12d,r12d
0xba99: jmp 0xb5a0
0xba9e: xor r10d,r10d
0xbaa1: jmp 0xb65d
0xbac1: mov r11,qword ptr [rsp+0x30]
0xbac6: mov rsi,r14
0xbac9: mov rcx,r13
0xbacc: mov rax,rbx
0xbacf: mov rdi,rbx
0xbad2: movzx r8d,byte ptr [rsp+0x7d]
0xbad8: movzx ebx,byte ptr [rsp+0x7e]
0xbadd: mov r9,qword ptr [rsp+0x88]
0xbae5: cmp rsi,r11
0xbae8: movzx r10d,byte ptr [rsp+0x7f]
0xbaee: mov r15,qword ptr [rsp+0x80]
0xbaf6: mov r14,qword ptr [rsp+0x40]
0xbafb: mov r13,qword ptr [rsp+0x70]
0xbb00: jae 0xbb28
0xbb02: cmp byte ptr [rcx],0x0
0xbb05: jne 0xbb17
0xbb07: jmp 0xbb28
0xbb10: cmp byte ptr [r9+rax],0x0
0xbb15: je 0xbb25
0xbb17: add rax,0x1
0xbb1b: lea rdx,[rbp+rax]
0xbb20: cmp r11,rdx
0xbb23: ja 0xbb10
0xbb25: mov rdi,rax
0xbb28: movzx edx,byte ptr [rsp+0xd]
0xbb2d: xor r12d,r12d
0xbb30: jmp 0xb596
0xbb35: mov rdi,rbx
0xbb38: movzx r8d,byte ptr [rsp+0x7d]
0xbb3e: movzx ebx,byte ptr [rsp+0x7e]
0xbb43: movzx r10d,byte ptr [rsp+0x7f]
0xbb49: mov r15,qword ptr [rsp+0x80]
0xbb51: xor r12d,r12d
0xbb54: mov r14,qword ptr [rsp+0x40]
0xbb59: mov r13,qword ptr [rsp+0x70]
0xbb5e: mov r11,qword ptr [rsp+0x30]
0xbb63: movzx edx,byte ptr [rsp+0xd]
0xbb68: jmp 0xb596
0xbb9b: mov eax,edx
0xbb9d: jmp 0xb0f7
0xbcaa: mov eax,edx
0xbcac: mov rbx,qword ptr [rsp+0x48]
0xbcb1: test rbx,rbx
0xbcb4: je 0xbce2
0xbcb6: test al,al
0xbcb8: je 0xbce2
0xbcba: movzx ecx,byte ptr [rbx]
0xbcbd: mov rax,rbx
0xbcc0: test cl,cl
0xbcc2: je 0xbce2
0xbcc4: mov rdx,r15
0xbcc7: sub rax,r15
0xbcca: cmp r13,rdx
0xbccd: jbe 0xbcd3
0xbccf: mov byte ptr [r14+rdx],cl
0xbcd3: add rdx,0x1
0xbcd7: movzx ecx,byte ptr [rax+rdx]
0xbcdb: test cl,cl
0xbcdd: jne 0xbcca
0xbcdf: mov r15,rdx
0xbce2: cmp r13,r15
0xbce5: jbe 0xb789
0xbceb: mov byte ptr [r14+r15],0x0
0xbcf0: jmp 0xb789
0xbcf5: cmp dword ptr [rsp+0x8],0x2
0xbcfa: movzx ebx,byte ptr [rsp+0xf]
0xbcff: mov rbp,r11
0xbd02: sete al
0xbd05: mov byte ptr [rsp+0xd],bl
0xbd09: jmp 0xb739
0xbd4d: sub rsp,0x8
0xbd51: mov r8d,0x5
0xbd57: mov rcx,r11
0xbd5a: push qword ptr [rsp+0x68]
0xbd5e: push qword ptr [rsp+0x78]
0xbd62: mov rdi,r14
0xbd65: push qword ptr [rsp+0x38]
0xbd69: mov r9d,dword ptr [rsp+0x98]
0xbd71: mov rdx,qword ptr [rsp+0x30]
0xbd76: mov rsi,qword ptr [rsp+0x70]
0xbd7b: call 0xabb0
0xbd80: add rsp,0x20
0xbd84: mov r15,rax
0xbd87: jmp 0xb789
0xbd8c: movzx eax,byte ptr [rsp+0x7c]
0xbd91: jmp 0xbcac
0xbd96: mov dword ptr [rsp+0x8],0x2
0xbd9e: jmp 0xb739
0xbda3: call 0x2850
0xbda8: mov byte ptr [rsp+0xd],0x0
0xbdad: jmp 0xb821
0xbdba: mov byte ptr [rsp+0xe],0x1
0xbdbf: xor eax,eax
0xbdc1: xor r12d,r12d
0xbdc4: mov qword ptr [rsp+0x50],0x0
0xbdcd: jmp 0xb374
0xbde4: nop 
0xbde6: nop word ptr cs:[rax+rax]
0xbedc: add rsp,0x20
0xbee0: mov r11,qword ptr [rsp+0x10]
0xbee5: cmp r11,rax
0xbee8: ja 0xbf51
0xbeea: lea rsi,[rax+0x1]
0xbeee: lea rax,[rip+0x20c22b]
0xbef5: cmp r12,rax
0xbef8: mov qword ptr [rbx],rsi
0xbefb: je 0xbf0f
0xbefd: mov rdi,r12
0xbf00: mov qword ptr [rsp+0x10],rsi
0xbf05: call 0x2750
0xbf0a: mov rsi,qword ptr [rsp+0x10]
0xbf0f: mov rdi,rsi
0xbf12: mov qword ptr [rsp+0x10],rsi
0xbf17: call 0xce00
0xbf1c: sub rsp,0x8
0xbf20: mov qword ptr [rbx+0x8],rax
0xbf24: mov r8d,dword ptr [rbp]
0xbf28: push qword ptr [rbp+0x30]
0xbf2b: push qword ptr [rbp+0x28]
0xbf2e: mov rcx,r14
0xbf31: push r15
0xbf33: mov r9d,dword ptr [rsp+0x3c]
0xbf38: mov rdi,rax
0xbf3b: mov rdx,qword ptr [rsp+0x28]
0xbf40: mov rsi,qword ptr [rsp+0x30]
0xbf45: mov r12,rax
0xbf48: call 0xabb0
0xbf4d: add rsp,0x20
0xbf51: mov eax,dword ptr [rsp+0x18]
0xbf55: mov dword ptr [r13],eax
0xbf59: add rsp,0x28
0xbf5d: mov rax,r12
0xbf60: pop rbx
0xbf61: pop rbp
0xbf62: pop r12
0xbf64: pop r13
0xbf66: pop r14
0xbf68: pop r15
0xbf6a: ret 
0xbf9b: nop dword ptr [rax+rax]
0xbfa0: push r12
0xbfa2: push rbp
0xbfa3: push rbx
0xbfa4: mov rbx,rdi
0xbfa7: call 0x2780
0xbfac: mov r12d,dword ptr [rax]
0xbfaf: mov rbp,rax
0xbfb2: lea rax,[rip+0x20c267]
0xbfb9: test rbx,rbx
0xbfbc: mov esi,0x38
0xbfc1: cmove rbx,rax
0xbfc5: mov rdi,rbx
0xbfc8: call 0xd000
0xbfcd: mov dword ptr [rbp],r12d
0xbfd1: pop rbx
0xbfd2: pop rbp
0xbfd3: pop r12
0xbfd5: ret 
0xbfe0: lea rax,[rip+0x20c239]
0xbfe7: test rdi,rdi
0xbfea: cmove rdi,rax
0xbfee: mov eax,dword ptr [rdi]
0xbff0: ret 
0xc000: lea rax,[rip+0x20c219]
0xc007: test rdi,rdi
0xc00a: cmove rdi,rax
0xc00e: mov dword ptr [rdi],esi
0xc010: ret 
0xc020: lea rax,[rip+0x20c1f9]
0xc027: test rdi,rdi
0xc02a: mov ecx,esi
0xc02c: cmove rdi,rax
0xc030: mov eax,esi
0xc032: and ecx,0x1f
0xc035: shr al,0x5
0xc038: movzx eax,al
0xc03b: lea rdi,[rdi+rax*4+0x8]
0xc040: mov esi,dword ptr [rdi]
0xc042: mov eax,esi
0xc044: shr eax,cl
0xc046: xor edx,eax
0xc048: and eax,0x1
0xc04b: and edx,0x1
0xc04e: shl edx,cl
0xc050: xor edx,esi
0xc052: mov dword ptr [rdi],edx
0xc054: ret 
0xc060: lea rax,[rip+0x20c1b9]
0xc067: test rdi,rdi
0xc06a: cmove rdi,rax
0xc06e: mov eax,dword ptr [rdi+0x4]
0xc071: mov dword ptr [rdi+0x4],esi
0xc074: ret 
0xc080: lea rax,[rip+0x20c199]
0xc087: test rdi,rdi
0xc08a: cmove rdi,rax
0xc08e: test rsi,rsi
0xc091: mov dword ptr [rdi],0xa
0xc097: je 0xc0a7
0xc099: test rdx,rdx
0xc09c: je 0xc0a7
0xc09e: mov qword ptr [rdi+0x28],rsi
0xc0a2: mov qword ptr [rdi+0x30],rdx
0xc0a6: ret 
0xc0a7: sub rsp,0x8
0xc0ab: call 0x2770
0xc0b0: push r15
0xc0b2: push r14
0xc0b4: lea rax,[rip+0x20c165]
0xc0bb: push r13
0xc0bd: push r12
0xc0bf: mov r13,rdi
0xc0c2: push rbp
0xc0c3: push rbx
0xc0c4: mov rbx,r8
0xc0c7: mov r14,rsi
0xc0ca: mov r15,rdx
0xc0cd: sub rsp,0x18
0xc0d1: test r8,r8
0xc0d4: cmove rbx,rax
0xc0d8: mov qword ptr [rsp+0x8],rcx
0xc0dd: call 0x2780
0xc0e2: mov r12d,dword ptr [rax]
0xc0e5: mov rbp,rax
0xc0e8: lea rax,[rbx+0x8]
0xc0ec: sub rsp,0x8
0xc0f0: mov r9d,dword ptr [rbx+0x4]
0xc0f4: push qword ptr [rbx+0x30]
0xc0f7: mov r8d,dword ptr [rbx]
0xc0fa: push qword ptr [rbx+0x28]
0xc0fd: mov rdx,r15
0xc100: push rax
0xc101: mov rcx,qword ptr [rsp+0x28]
0xc106: mov rsi,r14
0xc109: mov rdi,r13
0xc10c: call 0xabb0
0xc111: mov dword ptr [rbp],r12d
0xc115: add rsp,0x38
0xc119: pop rbx
0xc11a: pop rbp
0xc11b: pop r12
0xc11d: pop r13
0xc11f: pop r14
0xc121: pop r15
0xc123: ret 
0xc130: push r15
0xc132: push r14
0xc134: lea rax,[rip+0x20c0e5]
0xc13b: push r13
0xc13d: push r12
0xc13f: mov r12,rdx
0xc142: push rbp
0xc143: push rbx
0xc144: mov rbx,rcx
0xc147: mov r14,rdi
0xc14a: mov r15,rsi
0xc14d: sub rsp,0x38
0xc151: test rcx,rcx
0xc154: cmove rbx,rax
0xc158: xor ebp,ebp
0xc15a: call 0x2780
0xc15f: test r12,r12
0xc162: mov r13,rax
0xc165: mov eax,dword ptr [rax]
0xc167: sete bpl
0xc16b: or ebp,dword ptr [rbx+0x4]
0xc16e: lea r10,[rbx+0x8]
0xc172: sub rsp,0x8
0xc176: mov r8d,dword ptr [rbx]
0xc179: mov rcx,r15
0xc17c: mov dword ptr [rsp+0x14],eax
0xc180: push qword ptr [rbx+0x30]
0xc183: mov rdx,r14
0xc186: push qword ptr [rbx+0x28]
0xc189: push r10
0xc18b: xor esi,esi
0xc18d: mov r9d,ebp
0xc190: xor edi,edi
0xc192: mov qword ptr [rsp+0x40],r10
0xc197: call 0xabb0
0xc19c: lea rsi,[rax+0x1]
0xc1a0: mov qword ptr [rsp+0x48],rax
0xc1a5: add rsp,0x20
0xc1a9: mov rdi,rsi
0xc1ac: mov qword ptr [rsp+0x18],rsi
0xc1b1: call 0xce00
0xc1b6: mov qword ptr [rsp+0x10],rax
0xc1bb: sub rsp,0x8
0xc1bf: push qword ptr [rbx+0x30]
0xc1c2: push qword ptr [rbx+0x28]
0xc1c5: mov r10,qword ptr [rsp+0x38]
0xc1ca: mov r9d,ebp
0xc1cd: mov r8d,dword ptr [rbx]
0xc1d0: mov rcx,r15
0xc1d3: mov rdx,r14
0xc1d6: mov rdi,rax
0xc1d9: push r10
0xc1db: mov rsi,qword ptr [rsp+0x38]
0xc1e0: call 0xabb0
0xc1e5: mov eax,dword ptr [rsp+0x2c]
0xc1e9: add rsp,0x20
0xc1ed: test r12,r12
0xc1f0: mov dword ptr [r13],eax
0xc1f4: je 0xc1ff
0xc1f6: mov r11,qword ptr [rsp+0x28]
0xc1fb: mov qword ptr [r12],r11
0xc1ff: mov rax,qword ptr [rsp+0x10]
0xc204: add rsp,0x38
0xc208: pop rbx
0xc209: pop rbp
0xc20a: pop r12
0xc20c: pop r13
0xc20e: pop r14
0xc210: pop r15
0xc212: ret 
0xc220: mov rcx,rdx
0xc223: xor edx,edx
0xc225: jmp 0xc130
0xc230: mov eax,dword ptr [rip+0x20be42]
0xc236: push r12
0xc238: mov r12,qword ptr [rip+0x20be41]
0xc23f: push rbp
0xc240: push rbx
0xc241: cmp eax,0x1
0xc244: jle 0xc271
0xc246: sub eax,0x2
0xc249: lea rbx,[r12+0x18]
0xc24e: shl rax,0x4
0xc252: lea rbp,[r12+rax+0x28]
0xc257: nop word ptr [rax+rax]
0xc260: mov rdi,qword ptr [rbx]
0xc263: add rbx,0x10
0xc267: call 0x2750
0xc26c: cmp rbx,rbp
0xc26f: jne 0xc260
0xc271: mov rdi,qword ptr [r12+0x8]
0xc276: lea rbx,[rip+0x20bea3]
0xc27d: cmp rdi,rbx
0xc280: je 0xc299
0xc282: call 0x2750
0xc287: mov qword ptr [rip+0x20bdfe],0x100
0xc292: mov qword ptr [rip+0x20bdff],rbx
0xc299: lea rbx,[rip+0x20bdf0]
0xc2a0: cmp r12,rbx
0xc2a3: je 0xc2b4
0xc2a5: mov rdi,r12
0xc2a8: call 0x2750
0xc2ad: mov qword ptr [rip+0x20bdcc],rbx
0xc2b4: pop rbx
0xc2b5: mov dword ptr [rip+0x20bdb9],0x1
0xc2bf: pop rbp
0xc2c0: pop r12
0xc2c2: ret 
0xc2d0: lea rcx,[rip+0x20bf49]
0xc2d7: mov rdx,-0x1
0xc2de: jmp 0xbdf0
0xc2f0: lea rcx,[rip+0x20bf29]
0xc2f7: jmp 0xbdf0
0xc300: lea rcx,[rip+0x20bf19]
0xc307: mov rsi,rdi
0xc30a: mov rdx,-0x1
0xc311: xor edi,edi
0xc313: jmp 0xbdf0
0xc320: lea rcx,[rip+0x20bef9]
0xc327: mov rdx,rsi
0xc32a: mov rsi,rdi
0xc32d: xor edi,edi
0xc32f: jmp 0xbdf0
0xc340: sub rsp,0x48
0xc344: mov rax,rdx
0xc347: mov rdx,qword ptr fs:0x28
0xc350: mov qword ptr [rsp+0x38],rdx
0xc355: xor edx,edx
0xc357: cmp esi,0xa
0xc35a: je 0xc3c4
0xc35c: mov dword ptr [rsp],esi
0xc35f: mov rcx,rsp
0xc362: mov rdx,-0x1
0xc369: mov rsi,rax
0xc36c: mov qword ptr [rsp+0x4],0x0
0xc375: mov qword ptr [rsp+0xc],0x0
0xc37e: mov qword ptr [rsp+0x14],0x0
0xc387: mov qword ptr [rsp+0x1c],0x0
0xc390: mov qword ptr [rsp+0x24],0x0
0xc399: mov qword ptr [rsp+0x2c],0x0
0xc3a2: mov dword ptr [rsp+0x34],0x0
0xc3aa: call 0xbdf0
0xc3af: mov rcx,qword ptr [rsp+0x38]
0xc3b4: xor rcx,qword ptr fs:0x28
0xc3bd: jne 0xc3c9
0xc3bf: add rsp,0x48
0xc3c3: ret 
0xc3c4: call 0x2770
0xc3c9: call 0x2850
0xc3ce: nop 
0xc3d0: sub rsp,0x48
0xc3d4: mov rax,rdx
0xc3d7: mov rdx,rcx
0xc3da: mov rcx,qword ptr fs:0x28
0xc3e3: mov qword ptr [rsp+0x38],rcx
0xc3e8: xor ecx,ecx
0xc3ea: cmp esi,0xa
0xc3ed: je 0xc450
0xc3ef: mov dword ptr [rsp],esi
0xc3f2: mov rcx,rsp
0xc3f5: mov rsi,rax
0xc3f8: mov qword ptr [rsp+0x4],0x0
0xc401: mov qword ptr [rsp+0xc],0x0
0xc40a: mov qword ptr [rsp+0x14],0x0
0xc413: mov qword ptr [rsp+0x1c],0x0
0xc41c: mov qword ptr [rsp+0x24],0x0
0xc425: mov qword ptr [rsp+0x2c],0x0
0xc42e: mov dword ptr [rsp+0x34],0x0
0xc436: call 0xbdf0
0xc43b: mov rdx,qword ptr [rsp+0x38]
0xc440: xor rdx,qword ptr fs:0x28
0xc449: jne 0xc455
0xc44b: add rsp,0x48
0xc44f: ret 
0xc450: call 0x2770
0xc455: call 0x2850
0xc45a: nop word ptr [rax+rax]
0xc460: mov rdx,rsi
0xc463: mov esi,edi
0xc465: xor edi,edi
0xc467: jmp 0xc340
0xc470: mov rcx,rdx
0xc473: mov rdx,rsi
0xc476: mov esi,edi
0xc478: xor edi,edi
0xc47a: jmp 0xc3d0
0xc480: sub rsp,0x48
0xc484: mov ecx,edx
0xc486: mov rax,qword ptr fs:0x28
0xc48f: mov qword ptr [rsp+0x38],rax
0xc494: xor eax,eax
0xc496: mov rax,qword ptr [rip+0x20bdb3]
0xc49d: mov r8,rsp
0xc4a0: and ecx,0x1f
0xc4a3: movdqa xmm0,[rip+0x20bd75]
0xc4ab: mov qword ptr [rsp+0x30],rax
0xc4b0: mov eax,edx
0xc4b2: movaps [rsp],xmm0
0xc4b6: shr al,0x5
0xc4b9: movzx eax,al
0xc4bc: lea r9,[r8+rax*4+0x8]
0xc4c1: movdqa xmm0,[rip+0x20bd67]
0xc4c9: movaps [rsp+0x10],xmm0
0xc4ce: movdqa xmm0,[rip+0x20bd6a]
0xc4d6: movaps [rsp+0x20],xmm0
0xc4db: mov edx,dword ptr [r9]
0xc4de: mov eax,edx
0xc4e0: shr eax,cl
0xc4e2: not eax
0xc4e4: and eax,0x1
0xc4e7: shl eax,cl
0xc4e9: mov rcx,r8
0xc4ec: xor eax,edx
0xc4ee: mov rdx,rsi
0xc4f1: mov rsi,rdi
0xc4f4: mov dword ptr [r9],eax
0xc4f7: xor edi,edi
0xc4f9: call 0xbdf0
0xc4fe: mov rsi,qword ptr [rsp+0x38]
0xc503: xor rsi,qword ptr fs:0x28
0xc50c: jne 0xc513
0xc50e: add rsp,0x48
0xc512: ret 
0xc513: call 0x2850
0xc518: nop dword ptr [rax+rax]
0xc520: movsx edx,sil
0xc524: mov rsi,-0x1
0xc52b: jmp 0xc480
0xc530: mov edx,0x3a
0xc535: mov rsi,-0x1
0xc53c: jmp 0xc480
0xc550: mov edx,0x3a
0xc555: jmp 0xc480
0xc5cf: mov rcx,qword ptr [rsp+0x38]
0xc5d4: xor rcx,qword ptr fs:0x28
0xc5dd: jne 0xc5e9
0xc5df: add rsp,0x48
0xc5e3: ret 
0xc5e4: call 0x2770
0xc5e9: call 0x2850
0xc5ee: nop 
0xc5f0: sub rsp,0x48
0xc5f4: mov r9,rcx
0xc5f7: mov rcx,qword ptr [rip+0x20bc52]
0xc5fe: movdqa xmm0,[rip+0x20bc1a]
0xc606: mov rax,qword ptr fs:0x28
0xc60f: mov qword ptr [rsp+0x38],rax
0xc614: xor eax,eax
0xc616: movaps [rsp],xmm0
0xc61a: test rsi,rsi
0xc61d: mov qword ptr [rsp+0x30],rcx
0xc622: mov dword ptr [rsp],0xa
0xc629: movdqa xmm0,[rip+0x20bbff]
0xc631: movaps [rsp+0x10],xmm0
0xc636: movdqa xmm0,[rip+0x20bc02]
0xc63e: movaps [rsp+0x20],xmm0
0xc643: je 0xc677
0xc645: test rdx,rdx
0xc648: je 0xc677
0xc64a: mov qword ptr [rsp+0x28],rsi
0xc64f: mov qword ptr [rsp+0x30],rdx
0xc654: mov rcx,rsp
0xc657: mov rdx,r8
0xc65a: mov rsi,r9
0xc65d: call 0xbdf0
0xc662: mov rdi,qword ptr [rsp+0x38]
0xc667: xor rdi,qword ptr fs:0x28
0xc670: jne 0xc67c
0xc672: add rsp,0x48
0xc676: ret 
0xc677: call 0x2770
0xc67c: call 0x2850
0xc681: nop dword ptr [rax+rax]
0xc686: nop word ptr cs:[rax+rax]
0xc690: mov r8,-0x1
0xc697: jmp 0xc5f0
0xc6a0: mov rcx,rdx
0xc6a3: mov r8,-0x1
0xc6aa: mov rdx,rsi
0xc6ad: mov rsi,rdi
0xc6b0: xor edi,edi
0xc6b2: jmp 0xc5f0
0xc6c0: mov r8,rcx
0xc6c3: mov rcx,rdx
0xc6c6: mov rdx,rsi
0xc6c9: mov rsi,rdi
0xc6cc: xor edi,edi
0xc6ce: jmp 0xc5f0
0xc6e0: lea rcx,[rip+0x20b959]
0xc6e7: jmp 0xbdf0
0xc6f0: lea rcx,[rip+0x20b949]
0xc6f7: mov rdx,rsi
0xc6fa: mov rsi,rdi
0xc6fd: xor edi,edi
0xc6ff: jmp 0xbdf0
0xc7d4: call 0x2850
0xc7d9: nop dword ptr [rax]
0xc918: mov r8,rcx
0xc91b: mov rcx,rdx
0xc91e: lea rdx,[rip+0x802f]
0xc925: mov esi,0x1
0xc92a: xor eax,eax
0xc92c: call 0x2b00
0xc931: jmp 0xc81c
0xcb2d: push r12
0xcb2f: push r15
0xcb31: push r14
0xcb33: mov r8,qword ptr [rsp+0x20]
0xcb38: mov rcx,rbx
0xcb3b: mov rdx,rax
0xcb3e: mov rdi,rbp
0xcb41: mov esi,0x1
0xcb46: xor eax,eax
0xcb48: call 0x2b00
0xcb4d: add rsp,0x20
0xcb51: add rsp,0x28
0xcb55: pop rbx
0xcb56: pop rbp
0xcb57: pop r12
0xcb59: pop r13
0xcb5b: pop r14
0xcb5d: pop r15
0xcb5f: ret 
0xcb99: push r12
0xcb9b: push r15
0xcb9d: push r14
0xcb9f: mov r9,qword ptr [rsp+0x28]
0xcba4: jmp 0xcb33
0xcc00: xor r9d,r9d
0xcc03: cmp qword ptr [r8],0x0
0xcc07: je 0xcc1b
0xcc09: nop dword ptr [rax]
0xcc10: add r9,0x1
0xcc14: cmp qword ptr [r8+r9*8],0x0
0xcc19: jne 0xcc10
0xcc1b: jmp 0xc7e0
0xcc20: sub rsp,0x68
0xcc24: mov r10,r8
0xcc27: xor r9d,r9d
0xcc2a: mov rax,qword ptr fs:0x28
0xcc33: mov qword ptr [rsp+0x58],rax
0xcc38: xor eax,eax
0xcc3a: mov r8,rsp
0xcc3d: nop dword ptr [rax]
0xcc40: mov eax,dword ptr [r10]
0xcc43: cmp eax,0x2f
0xcc46: ja 0xcc8a
0xcc48: mov r11d,eax
0xcc4b: add r11,qword ptr [r10+0x10]
0xcc4f: add eax,0x8
0xcc52: mov dword ptr [r10],eax
0xcc55: mov rax,qword ptr [r11]
0xcc58: test rax,rax
0xcc5b: mov qword ptr [r8+r9*8],rax
0xcc5f: je 0xcc6b
0xcc61: add r9,0x1
0xcc65: cmp r9,0xa
0xcc69: jne 0xcc40
0xcc6b: call 0xc7e0
0xcc70: mov rax,qword ptr [rsp+0x58]
0xcc75: xor rax,qword ptr fs:0x28
0xcc7e: jne 0xcc85
0xcc80: add rsp,0x68
0xcc84: ret 
0xcc85: call 0x2850
0xcc8a: mov r11,qword ptr [r10+0x8]
0xcc8e: lea rax,[r11+0x8]
0xcc92: mov qword ptr [r10+0x8],rax
0xcc96: jmp 0xcc55
0xcd60: call 0x2850
0xcd6c: mov rax,rbx
0xcd6f: add rbx,0x8
0xcd73: jmp 0xcd26
0xcd80: push rbx
0xcd81: lea rsi,[rip+0x7c1a]
0xcd88: mov edx,0x5
0xcd8d: xor edi,edi
0xcd8f: call 0x2820
0xcd94: lea rdx,[rip+0x7c1c]
0xcd9b: mov rsi,rax
0xcd9e: mov edi,0x1
0xcda3: xor eax,eax
0xcda5: call 0x2a60
0xcdaa: lea rsi,[rip+0x7c1c]
0xcdb1: mov edx,0x5
0xcdb6: xor edi,edi
0xcdb8: call 0x2820
0xcdbd: lea rcx,[rip+0x5c8c]
0xcdc4: lea rdx,[rip+0x4927]
0xcdcb: mov rsi,rax
0xcdce: mov edi,0x1
0xcdd3: xor eax,eax
0xcdd5: call 0x2a60
0xcdda: mov rbx,qword ptr [rip+0x20b2c7]
0xcde1: lea rsi,[rip+0x7e18]
0xcde8: xor edi,edi
0xcdea: mov edx,0x5
0xcdef: call 0x2820
0xcdf4: mov rsi,rbx
0xcdf7: mov rdi,rax
0xcdfa: pop rbx
0xcdfb: jmp 0x2920
0xce00: push rbx
0xce01: mov rbx,rdi
0xce04: call 0x29e0
0xce09: test rax,rax
0xce0c: jne 0xce13
0xce0e: test rbx,rbx
0xce11: jne 0xce15
0xce13: pop rbx
0xce14: ret 
0xce15: call 0xd050
0xce1a: nop word ptr [rax+rax]
0xce20: mov rax,rdi
0xce23: mul rsi
0xce26: mov rdi,rax
0xce29: seto al
0xce2c: test rdi,rdi
0xce2f: js 0xce3b
0xce31: movzx eax,al
0xce34: test rax,rax
0xce37: jne 0xce3b
0xce39: jmp 0xce00
0xce3b: sub rsp,0x8
0xce3f: call 0xd050
0xce44: nop 
0xce46: nop word ptr cs:[rax+rax]
0xce50: jmp 0xce00
0xce96: nop word ptr cs:[rax+rax]
0xcea0: mov rax,rsi
0xcea3: mul rdx
0xcea6: mov rsi,rax
0xcea9: seto al
0xceac: test rsi,rsi
0xceaf: js 0xcebb
0xceb1: movzx eax,al
0xceb4: test rax,rax
0xceb7: jne 0xcebb
0xceb9: jmp 0xce60
0xcebb: sub rsp,0x8
0xcebf: call 0xd050
0xcec4: nop 
0xcec6: nop word ptr cs:[rax+rax]
0xced0: test rdi,rdi
0xced3: mov r9,rdx
0xced6: mov rcx,qword ptr [rsi]
0xced9: je 0xcf10
0xcedb: xor edx,edx
0xcedd: movabsq rax,0x5555555555555554
0xcee7: div r9
0xceea: cmp rax,rcx
0xceed: jbe 0xcf2b
0xceef: mov rax,rcx
0xcef2: shr rax, 1
0xcef5: lea rcx,[rax+rcx+0x1]
0xcefa: mov qword ptr [rsi],rcx
0xcefd: imul rcx,r9
0xcf01: mov rsi,rcx
0xcf04: jmp 0xce60
0xcf10: test rcx,rcx
0xcf13: je 0xcf38
0xcf15: mov rax,rcx
0xcf18: mul r9
0xcf1b: seto dl
0xcf1e: test rax,rax
0xcf21: movzx edx,dl
0xcf24: js 0xcf2b
0xcf26: test rdx,rdx
0xcf29: je 0xcefa
0xcf2b: sub rsp,0x8
0xcf2f: call 0xd050
0xcf34: nop dword ptr [rax]
0xcf38: xor edx,edx
0xcf3a: mov eax,0x80
0xcf3f: xor r8d,r8d
0xcf42: div r9
0xcf45: test rax,rax
0xcf48: sete r8b
0xcf4c: lea rcx,[r8+rax]
0xcf50: jmp 0xcf15
0xcf60: test rdi,rdi
0xcf63: mov rax,qword ptr [rsi]
0xcf66: je 0xcf90
0xcf68: movabsq rdx,0x5555555555555553
0xcf72: cmp rax,rdx
0xcf75: ja 0xcfa1
0xcf77: mov rdx,rax
0xcf7a: shr rdx, 1
0xcf7d: lea rax,[rdx+rax+0x1]
0xcf82: mov qword ptr [rsi],rax
0xcf85: mov rsi,rax
0xcf88: jmp 0xce60
0xcf90: test rax,rax
0xcf93: mov edx,0x80
0xcf98: cmove rax,rdx
0xcf9c: test rax,rax
0xcf9f: jns 0xcf82
0xcfa1: sub rsp,0x8
0xcfa5: call 0xd050
0xcfaa: nop word ptr [rax+rax]
0xcfb0: push rbx
0xcfb1: mov rbx,rdi
0xcfb4: call 0xce00
0xcfb9: mov rdx,rbx
0xcfbc: xor esi,esi
0xcfbe: mov rdi,rax
0xcfc1: pop rbx
0xcfc2: jmp 0x28f0
0xcfd0: mov rax,rdi
0xcfd3: sub rsp,0x8
0xcfd7: mul rsi
0xcfda: seto dl
0xcfdd: test rax,rax
0xcfe0: js 0xcff9
0xcfe2: movzx edx,dl
0xcfe5: test rdx,rdx
0xcfe8: jne 0xcff9
0xcfea: call 0x2930
0xcfef: test rax,rax
0xcff2: je 0xcff9
0xcff4: add rsp,0x8
0xcff8: ret 
0xcff9: call 0xd050
0xcffe: nop 
0xd000: push rbp
0xd001: push rbx
0xd002: mov rbp,rdi
0xd005: mov rdi,rsi
0xd008: mov rbx,rsi
0xd00b: sub rsp,0x8
0xd00f: call 0xce00
0xd014: add rsp,0x8
0xd018: mov rdx,rbx
0xd01b: mov rsi,rbp
0xd01e: pop rbx
0xd01f: pop rbp
0xd020: mov rdi,rax
0xd023: jmp 0x2970
0xd030: push rbx
0xd031: mov rbx,rdi
0xd034: call 0x2840
0xd039: mov rdi,rbx
0xd03c: lea rsi,[rax+0x1]
0xd040: pop rbx
0xd041: jmp 0xd000
0xd080: call 0x2770
0xd085: nop word ptr cs:[rax+rax]
0xd08f: nop 
0xd1b0: push r13
0xd1b2: push r12
0xd1b4: mov r13,rsi
0xd1b7: push rbp
0xd1b8: push rbx
0xd1b9: mov rbx,rdi
0xd1bc: mov r12,rdx
0xd1bf: sub rsp,0x18
0xd1c3: mov rax,qword ptr fs:0x28
0xd1cc: mov qword ptr [rsp+0x8],rax
0xd1d1: xor eax,eax
0xd1d3: lea rax,[rsp+0x4]
0xd1d8: test rdi,rdi
0xd1db: cmove rbx,rax
0xd1df: mov rdi,rbx
0xd1e2: call 0x2870
0xd1e7: cmp rax,-0x3
0xd1eb: mov rbp,rax
0xd1ee: jbe 0xd210
0xd1f0: test r12,r12
0xd1f3: je 0xd210
0xd1f5: xor edi,edi
0xd1f7: call 0xd940
0xd1fc: test al,al
0xd1fe: jne 0xd210
0xd200: movzx eax,byte ptr [r13]
0xd205: mov ebp,0x1
0xd20a: mov dword ptr [rbx],eax
0xd20c: nop dword ptr [rax]
0xd210: mov rdx,qword ptr [rsp+0x8]
0xd215: xor rdx,qword ptr fs:0x28
0xd21e: mov rax,rbp
0xd221: jne 0xd22e
0xd223: add rsp,0x18
0xd227: pop rbx
0xd228: pop rbp
0xd229: pop r12
0xd22b: pop r13
0xd22d: ret 
0xd22e: call 0x2850
0xd233: nop word ptr cs:[rax+rax]
0xd23d: nop dword ptr [rax]
0xd6ba: push rbp
0xd7ac: call 0x2850
0xd7b1: nop word ptr cs:[rax+rax]
0xd7bb: nop dword ptr [rax+rax]
0xd807: test rax,rax
0xd80a: mov rbx,qword ptr [rsp+0x8]
0xd80f: je 0xd89e
0xd815: mov rcx,r13
0xd818: mov rdx,rbx
0xd81b: mov esi,0x1
0xd820: mov rdi,rax
0xd823: mov rbp,rax
0xd826: call 0x2af0
0xd82b: cmp rax,rbx
0xd82e: jb 0xd870
0xd830: cmp rbp,r12
0xd833: je 0xd83d
0xd835: mov rdi,rbp
0xd838: call 0x2750
0xd83d: cmp rbx,0x7fffffff
0xd844: ja 0xd893
0xd846: mov rcx,qword ptr [rsp+0x7e8]
0xd84e: xor rcx,qword ptr fs:0x28
0xd857: mov eax,ebx
0xd859: jne 0xd8ad
0xd85b: add rsp,0x7f8
0xd862: pop rbx
0xd863: pop rbp
0xd864: pop r12
0xd866: pop r13
0xd868: ret 
0xd870: cmp rbp,r12
0xd873: mov ebx,0xffffffff
0xd878: je 0xd846
0xd87a: call 0x2780
0xd87f: mov r13d,dword ptr [rax]
0xd882: mov r12,rax
0xd885: mov rdi,rbp
0xd888: call 0x2750
0xd88d: mov dword ptr [r12],r13d
0xd891: jmp 0xd846
0xd893: call 0x2780
0xd898: mov dword ptr [rax],0x4b
0xd89e: mov rdi,r13
0xd8a1: mov ebx,0xffffffff
0xd8a6: call 0xf590
0xd8ab: jmp 0xd846
0xd8ad: call 0x2850
0xd8b2: nop word ptr cs:[rax+rax]
0xd8bc: nop dword ptr [rax]
0xd8c0: push r12
0xd8c2: push rbp
0xd8c3: mov rbp,rdi
0xd8c6: push rbx
0xd8c7: call 0x27c0
0xd8cc: mov ebx,dword ptr [rbp]
0xd8cf: mov rdi,rbp
0xd8d2: mov r12,rax
0xd8d5: call 0xd090
0xd8da: and ebx,0x20
0xd8dd: test ebx,ebx
0xd8df: jne 0xd8f8
0xd8e1: test eax,eax
0xd8e3: je 0xd8ef
0xd8e5: test r12,r12
0xd8e8: mov eax,0xffffffff
0xd8ed: je 0xd928
0xd8ef: pop rbx
0xd8f0: pop rbp
0xd8f1: pop r12
0xd8f3: ret 
0xd8f8: test eax,eax
0xd8fa: jne 0xd918
0xd8fc: call 0x2780
0xd901: mov dword ptr [rax],0x0
0xd907: mov eax,0xffffffff
0xd90c: pop rbx
0xd90d: pop rbp
0xd90e: pop r12
0xd910: ret 
0xd918: pop rbx
0xd919: mov eax,0xffffffff
0xd91e: pop rbp
0xd91f: pop r12
0xd921: ret 
0xd928: call 0x2780
0xd92d: cmp dword ptr [rax],0x9
0xd930: pop rbx
0xd931: pop rbp
0xd932: pop r12
0xd934: setne al
0xd937: movzx eax,al
0xd93a: neg eax
0xd93c: ret 
0xd940: sub rsp,0x8
0xd944: xor esi,esi
0xd946: call 0x2a50
0xd94b: mov rdx,rax
0xd94e: mov eax,0x1
0xd953: test rdx,rdx
0xd956: je 0xd975
0xd958: lea rdi,[rip+0x5c1b]
0xd95f: mov ecx,0x2
0xd964: mov rsi,rdx
0xd967: rep cmpsb [rsi],es:[rdi]
0xd969: seta cl
0xd96c: sbb cl,0x0
0xd96f: xor eax,eax
0xd971: test cl,cl
0xd973: jne 0xd980
0xd975: add rsp,0x8
0xd979: ret 
0xd980: lea rdi,[rip+0x7339]
0xd987: mov ecx,0x6
0xd98c: mov rsi,rdx
0xd98f: rep cmpsb [rsi],es:[rdi]
0xd991: seta al
0xd994: sbb al,0x0
0xd996: test al,al
0xd998: setne al
0xd99b: add rsp,0x8
0xd99f: ret 
0xd9a0: sub rsp,0x8
0xd9a4: mov edi,0xe
0xd9a9: call 0x2a00
0xd9ae: test rax,rax
0xd9b1: je 0xd9d0
0xd9b3: cmp byte ptr [rax],0x0
0xd9b6: lea rdx,[rip+0x7309]
0xd9bd: cmove rax,rdx
0xd9c1: add rsp,0x8
0xd9c5: ret 
0xd9d0: lea rax,[rip+0x72ef]
0xd9d7: add rsp,0x8
0xd9db: ret 
0xd9e0: test rdx,rdx
0xd9e3: push r12
0xd9e5: push rbp
0xd9e6: mov rbp,rdi
0xd9e9: push rbx
0xd9ea: je 0xda19
0xd9ec: mov r12,rsi
0xd9ef: lea rbx,[rdx-0x1]
0xd9f3: call 0x2b30
0xd9f8: nop dword ptr [rax+rax]
0xda00: movzx ecx,byte ptr [r12+rbx]
0xda05: mov rdx,qword ptr [rax]
0xda08: mov edx,dword ptr [rdx+rcx*4]
0xda0b: mov byte ptr [rbp+rbx],dl
0xda0f: sub rbx,0x1
0xda13: cmp rbx,-0x1
0xda17: jne 0xda00
0xda19: mov rax,rbp
0xda1c: pop rbx
0xda1d: pop rbp
0xda1e: pop r12
0xda20: ret 
0xda30: test rdx,rdx
0xda33: push r12
0xda35: push rbp
0xda36: mov rbp,rdi
0xda39: push rbx
0xda3a: je 0xda69
0xda3c: mov r12,rsi
0xda3f: lea rbx,[rdx-0x1]
0xda43: call 0x2720
0xda48: nop dword ptr [rax+rax]
0xda50: movzx ecx,byte ptr [r12+rbx]
0xda55: mov rdx,qword ptr [rax]
0xda58: mov edx,dword ptr [rdx+rcx*4]
0xda5b: mov byte ptr [rbp+rbx],dl
0xda5f: sub rbx,0x1
0xda63: cmp rbx,-0x1
0xda67: jne 0xda50
0xda69: mov rax,rbp
0xda6c: pop rbx
0xda6d: pop rbp
0xda6e: pop r12
0xda70: ret 
0xda80: push r15
0xda82: push r14
0xda84: mov r11,rdx
0xda87: push r13
0xda89: push r12
0xda8b: mov r13,rcx
0xda8e: push rbp
0xda8f: push rbx
0xda90: mov rbp,rdi
0xda93: sub rsp,0x4c8
0xda9a: mov rdi,qword ptr [rcx+0x30]
0xda9e: mov r15d,dword ptr [rcx+0x8]
0xdaa2: mov rax,qword ptr [rsp+0x508]
0xdaaa: mov qword ptr [rsp+0x8],rsi
0xdaaf: mov dword ptr [rsp+0x2c],r9d
0xdab4: movsxd r10,dword ptr [rsp+0x500]
0xdabc: mov byte ptr [rsp+0x2b],r8b
0xdac1: mov qword ptr [rsp+0x18],rax
0xdac6: mov rax,qword ptr [rsp+0x510]
0xdace: mov qword ptr [rsp+0x10],rax
0xdad3: mov rax,qword ptr fs:0x28
0xdadc: mov qword ptr [rsp+0x4b8],rax
0xdae4: xor eax,eax
0xdae6: lea rax,[rip+0x57c2]
0xdaed: test rdi,rdi
0xdaf0: cmovne rax,rdi
0xdaf4: cmp r15d,0xc
0xdaf8: mov qword ptr [rsp+0x20],rax
0xdafd: jle 0xdbf0
0xdb03: sub r15d,0xc
0xdb07: movzx eax,byte ptr [r11]
0xdb0b: xor r14d,r14d
0xdb0e: test al,al
0xdb10: je 0xdbcc
0xdb16: mov dword ptr [rsp+0x68],r15d
0xdb1b: mov rbx,r11
0xdb1e: cmp al,0x25
0xdb20: je 0xdc08
0xdb26: test r10d,r10d
0xdb29: mov r12d,0x0
0xdb2f: mov eax,0x1
0xdb34: cmovns r12,r10
0xdb38: test r12,r12
0xdb3b: cmove r12,rax
0xdb3f: mov rax,qword ptr [rsp+0x8]
0xdb44: sub rax,r14
0xdb47: cmp rax,r12
0xdb4a: ja 0xdb80
0xdb4c: xor r14d,r14d
0xdb4f: mov rbx,qword ptr [rsp+0x4b8]
0xdb57: xor rbx,qword ptr fs:0x28
0xdb60: mov rax,r14
0xdb63: jne 0xf515
0xdb69: add rsp,0x4c8
0xdb70: pop rbx
0xdb71: pop rbp
0xdb72: pop r12
0xdb74: pop r13
0xdb76: pop r14
0xdb78: pop r15
0xdb7a: ret 
0xdb80: test rbp,rbp
0xdb83: je 0xdbac
0xdb85: cmp r10d,0x1
0xdb89: jle 0xdba2
0xdb8b: lea r15,[r10-0x1]
0xdb8f: mov rdi,rbp
0xdb92: mov esi,0x20
0xdb97: mov rdx,r15
0xdb9a: add rbp,r15
0xdb9d: call 0x28f0
0xdba2: movzx eax,byte ptr [rbx]
0xdba5: add rbp,0x1
0xdba9: mov byte ptr [rbp-0x1],al
0xdbac: add r14,r12
0xdbaf: mov r12,rbx
0xdbb2: movzx eax,byte ptr [r12+0x1]
0xdbb8: lea rbx,[r12+0x1]
0xdbbd: mov r10,-0x1
0xdbc4: test al,al
0xdbc6: jne 0xdb1e
0xdbcc: test rbp,rbp
0xdbcf: je 0xdb4f
0xdbd5: cmp qword ptr [rsp+0x8],0x0
0xdbdb: je 0xdb4f
0xdbe1: mov byte ptr [rbp],0x0
0xdbe5: jmp 0xdb4f
0xdbf0: test r15d,r15d
0xdbf3: mov eax,0xc
0xdbf8: cmove r15d,eax
0xdbfc: jmp 0xdb07
0xdc08: movzx eax,byte ptr [rsp+0x2b]
0xdc0d: xor r8d,r8d
0xdc10: xor r15d,r15d
0xdc13: mov edx,0x1
0xdc18: mov byte ptr [rsp+0x30],al
0xdc1c: add rbx,0x1
0xdc20: movsx eax,byte ptr [rbx]
0xdc23: lea ecx,[rax-0x23]
0xdc26: mov esi,eax
0xdc28: mov r9d,eax
0xdc2b: cmp cl,0x3c
0xdc2e: ja 0xdc5c
0xdc30: mov rdi,rdx
0xdc33: movabsq r11,0x1000000000002500
0xdc3d: shl rdi,cl
0xdc40: test rdi,r11
0xdc43: jne 0xdcb0
0xdc45: test cl,cl
0xdc47: je 0xdcc0
0xdc49: movabsq rcx,0x800000000000000
0xdc53: test rdi,rcx
0xdc56: jne 0xddb0
0xdc5c: lea edx,[rax-0x30]
0xdc5f: cmp edx,0x9
0xdc62: jbe 0xddc0
0xdc68: cmp sil,0x45
0xdc6c: je 0xdc98
0xdc6e: xor r11d,r11d
0xdc71: cmp sil,0x4f
0xdc75: je 0xdc98
0xdc77: cmp sil,0x7a
0xdc7b: ja 0xdcd0
0xdc7d: lea rdx,[rip+0x7048]
0xdc84: movzx eax,sil
0xdc88: movsxd rax,dword ptr [rdx+rax*4]
0xdc8c: add rax,rdx
0xdc8f: jmp rax
0xdc98: movsx r9d,byte ptr [rbx+0x1]
0xdc9d: mov r11d,eax
0xdca0: add rbx,0x1
0xdca4: mov esi,r9d
0xdca7: jmp 0xdc77
0xdcb0: mov r15d,eax
0xdcb3: jmp 0xdc1c
0xdcc0: mov r8d,0x1
0xdcc6: jmp 0xdc1c
0xdcd0: lea rax,[rbx-0x1]
0xdcd4: mov r8d,0x1
0xdcda: mov r9,rax
0xdcdd: lea rax,[rax-0x1]
0xdce1: add r8d,0x1
0xdce5: cmp byte ptr [rax+0x1],0x25
0xdce9: jne 0xdcda
0xdceb: mov rdx,qword ptr [rsp+0x8]
0xdcf0: mov eax,0x0
0xdcf5: movsxd r8,r8d
0xdcf8: mov rcx,r8
0xdcfb: mov r12,rbx
0xdcfe: sub rdx,r14
0xdd01: test r10d,r10d
0xdd04: cmovns eax,r10d
0xdd08: cltq 
0xdd0a: cmp rax,r8
0xdd0d: cmovae rcx,rax
0xdd11: cmp rcx,rdx
0xdd14: jae 0xdb4c
0xdd1a: test rbp,rbp
0xdd1d: je 0xdda5
0xdd23: cmp rax,r8
0xdd26: jbe 0xdd75
0xdd28: movsxd rdx,r10d
0xdd2b: mov qword ptr [rsp+0x48],r8
0xdd30: mov qword ptr [rsp+0x40],rcx
0xdd35: sub rdx,r8
0xdd38: cmp r15d,0x30
0xdd3c: mov qword ptr [rsp+0x38],r9
0xdd41: lea rbx,[rbp+rdx]
0xdd46: je 0xefb6
0xdd4c: cmp r15d,0x2b
0xdd50: je 0xefb6
0xdd56: mov rdi,rbp
0xdd59: mov esi,0x20
0xdd5e: mov rbp,rbx
0xdd61: call 0x28f0
0xdd66: mov r8,qword ptr [rsp+0x48]
0xdd6b: mov rcx,qword ptr [rsp+0x40]
0xdd70: mov r9,qword ptr [rsp+0x38]
0xdd75: cmp byte ptr [rsp+0x30],0x0
0xdd7a: mov qword ptr [rsp+0x38],rcx
0xdd7f: mov rdx,r8
0xdd82: mov qword ptr [rsp+0x30],r8
0xdd87: mov rsi,r9
0xdd8a: mov rdi,rbp
0xdd8d: je 0xef60
0xdd93: call 0xda30
0xdd98: mov r8,qword ptr [rsp+0x30]
0xdd9d: mov rcx,qword ptr [rsp+0x38]
0xdda2: add rbp,r8
0xdda5: add r14,rcx
0xdda8: jmp 0xdbb2
0xddb0: mov byte ptr [rsp+0x30],0x1
0xddb5: jmp 0xdc1c
0xddc0: xor r10d,r10d
0xddc3: movsx eax,byte ptr [rbx+0x1]
0xddc7: cmp r10d,0xccccccc
0xddce: lea rcx,[rbx+0x1]
0xddd2: mov esi,eax
0xddd4: lea edx,[rax-0x30]
0xddd7: jg 0xde06
0xddd9: movsx edi,byte ptr [rbx]
0xdddc: je 0xde00
0xddde: lea r9d,[r10+r10*4]
0xdde2: mov rbx,rcx
0xdde5: lea r10d,[rdi+r9*2-0x30]
0xddea: cmp edx,0x9
0xdded: jbe 0xddc3
0xddef: mov r9d,eax
0xddf2: jmp 0xdc68
0xde00: cmp dil,0x37
0xde04: jle 0xddde
0xde06: cmp edx,0x9
0xde09: ja 0xde20
0xde0b: movsx eax,byte ptr [rbx+0x2]
0xde0f: mov r10d,0x7fffffff
0xde15: add rbx,0x2
0xde19: mov esi,eax
0xde1b: lea edx,[rax-0x30]
0xde1e: jmp 0xddea
0xde20: mov r9d,eax
0xde23: mov rbx,rcx
0xde26: mov r10d,0x7fffffff
0xde2c: jmp 0xdc68
0xde6a: lea r9,[rsp+0xb0]
0xde72: mov byte ptr [rax],sil
0xde75: mov byte ptr [rax+0x1],0x0
0xde79: mov rcx,r13
0xde7c: mov esi,0x400
0xde81: mov dword ptr [rsp+0x38],r10d
0xde86: mov rdi,r9
0xde89: mov byte ptr [rsp+0x50],r8b
0xde8e: mov dword ptr [rsp+0x48],r11d
0xde93: mov qword ptr [rsp+0x40],r9
0xde98: call 0x2a80
0xde9d: test rax,rax
0xdea0: je 0xdbb2
0xdea6: movsxd r10,dword ptr [rsp+0x38]
0xdeab: lea rcx,[rax-0x1]
0xdeaf: mov rdx,qword ptr [rsp+0x8]
0xdeb4: mov eax,0x0
0xdeb9: test r10d,r10d
0xdebc: cmovns rax,r10
0xdec0: cmp rcx,rax
0xdec3: mov rbx,rax
0xdec6: cmovae rbx,rcx
0xdeca: sub rdx,r14
0xdecd: cmp rdx,rbx
0xded0: jbe 0xdb4c
0xded6: test rbp,rbp
0xded9: je 0xdf7e
0xdedf: mov r11d,dword ptr [rsp+0x48]
0xdee4: mov r9,qword ptr [rsp+0x40]
0xdee9: movzx r8d,byte ptr [rsp+0x50]
0xdeef: test r11d,r11d
0xdef2: jne 0xdf4e
0xdef4: cmp rcx,rax
0xdef7: jae 0xdf4e
0xdef9: movsxd rdx,r10d
0xdefc: mov qword ptr [rsp+0x50],r9
0xdf01: mov qword ptr [rsp+0x48],rcx
0xdf06: sub rdx,rcx
0xdf09: cmp r15d,0x30
0xdf0d: mov byte ptr [rsp+0x40],r8b
0xdf12: lea rax,[rbp+rdx]
0xdf17: mov qword ptr [rsp+0x38],rax
0xdf1c: je 0xef8f
0xdf22: cmp r15d,0x2b
0xdf26: je 0xef8f
0xdf2c: mov rdi,rbp
0xdf2f: mov esi,0x20
0xdf34: call 0x28f0
0xdf39: movzx r8d,byte ptr [rsp+0x40]
0xdf3f: mov rbp,qword ptr [rsp+0x38]
0xdf44: mov r9,qword ptr [rsp+0x50]
0xdf49: mov rcx,qword ptr [rsp+0x48]
0xdf4e: test r8b,r8b
0xdf51: lea rsi,[r9+0x1]
0xdf55: mov rdx,rcx
0xdf58: jne 0xef78
0xdf5e: cmp byte ptr [rsp+0x30],0x0
0xdf63: mov rdi,rbp
0xdf66: mov qword ptr [rsp+0x30],rcx
0xdf6b: je 0xe7e1
0xdf71: call 0xda30
0xdf76: mov rcx,qword ptr [rsp+0x30]
0xdf7b: add rbp,rcx
0xdf7e: add r14,rbx
0xdf81: jmp 0xdbb2
0xdff7: cmp r11d,0x4f
0xdffb: jne 0xee80
0xe001: test al,al
0xe003: je 0xee80
0xe009: mov esi,r9d
0xe00c: mov edx,0x2520
0xe011: xor r8d,r8d
0xe014: mov word ptr [rsp+0xab],dx
0xe01c: lea rdx,[rsp+0xab]
0xe024: mov byte ptr [rsp+0xad],r11b
0xe02c: mov r12,rbx
0xe02f: mov r11d,edi
0xe032: lea rax,[rdx+0x3]
0xe036: jmp 0xde6a
0xe0f2: movzx r8d,byte ptr [rsp+0x30]
0xe0f8: mov eax,dword ptr [rsp+0x518]
0xe0ff: mov rsi,-0x1
0xe106: mov dword ptr [rsp+0x48],r10d
0xe10b: xor edi,edi
0xe10d: mov r9d,r15d
0xe110: mov rcx,r13
0xe113: mov dword ptr [rsp+0x30],r8d
0xe118: push rax
0xe119: push qword ptr [rsp+0x18]
0xe11d: push qword ptr [rsp+0x28]
0xe121: mov eax,dword ptr [rsp+0x50]
0xe125: push rax
0xe126: mov rdx,qword ptr [rsp+0x60]
0xe12b: call 0xda80
0xe130: add rsp,0x20
0xe134: movsxd r10,dword ptr [rsp+0x48]
0xe139: mov r11,rax
0xe13c: mov rsi,qword ptr [rsp+0x8]
0xe141: mov eax,0x0
0xe146: test r10d,r10d
0xe149: cmovns rax,r10
0xe14d: cmp r11,rax
0xe150: mov r12,rax
0xe153: cmovae r12,r11
0xe157: sub rsi,r14
0xe15a: cmp rsi,r12
0xe15d: mov qword ptr [rsp+0x48],rsi
0xe162: jbe 0xdb4c
0xe168: test rbp,rbp
0xe16b: je 0xdbac
0xe171: cmp r11,rax
0xe174: jae 0xe1b6
0xe176: movsxd rdx,r10d
0xe179: mov qword ptr [rsp+0x58],r11
0xe17e: sub rdx,r11
0xe181: cmp r15d,0x30
0xe185: lea rax,[rbp+rdx]
0xe18a: mov qword ptr [rsp+0x50],rax
0xe18f: je 0xf28c
0xe195: cmp r15d,0x2b
0xe199: je 0xf28c
0xe19f: mov rdi,rbp
0xe1a2: mov esi,0x20
0xe1a7: call 0x28f0
0xe1ac: mov rbp,qword ptr [rsp+0x50]
0xe1b1: mov r11,qword ptr [rsp+0x58]
0xe1b6: mov eax,dword ptr [rsp+0x518]
0xe1bd: mov qword ptr [rsp+0x50],r11
0xe1c2: mov rdi,rbp
0xe1c5: mov r9d,r15d
0xe1c8: mov rcx,r13
0xe1cb: push rax
0xe1cc: push qword ptr [rsp+0x18]
0xe1d0: push qword ptr [rsp+0x28]
0xe1d4: mov eax,dword ptr [rsp+0x50]
0xe1d8: push rax
0xe1d9: mov r8d,dword ptr [rsp+0x50]
0xe1de: mov rdx,qword ptr [rsp+0x60]
0xe1e3: mov rsi,qword ptr [rsp+0x68]
0xe1e8: call 0xda80
0xe1ed: mov r11,qword ptr [rsp+0x70]
0xe1f2: add rsp,0x20
0xe1f6: add rbp,r11
0xe1f9: jmp 0xdbac
0xe329: xor esi,esi
0xe32b: jmp 0xdff7
0xe462: mov eax,0x1
0xe467: mov byte ptr [rsp+0x38],0x0
0xe46c: cmp r15d,0x2b
0xe470: je 0xebe3
0xe476: mov byte ptr [rsp+0x40],0x0
0xe47b: mov edi,0x2
0xe480: xor esi,esi
0xe482: jmp 0xdff7
0xe5b0: lea r9,[rsp+0xb0]
0xe5b8: mov r12d,0xcccccccd
0xe5be: lea r11,[r9+0x17]
0xe5c2: nop word ptr [rax+rax]
0xe5c8: test sil,0x1
0xe5cc: lea r8,[r11-0x1]
0xe5d0: je 0xe5e1
0xe5d2: lea rax,[r11-0x2]
0xe5d6: mov byte ptr [r11-0x1],0x3a
0xe5db: mov r11,r8
0xe5de: mov r8,rax
0xe5e1: mov eax,ecx
0xe5e3: sar esi, 1
0xe5e5: mul r12d
0xe5e8: shr edx,0x3
0xe5eb: lea eax,[rdx+rdx*4]
0xe5ee: add eax,eax
0xe5f0: sub ecx,eax
0xe5f2: mov eax,esi
0xe5f4: add ecx,0x30
0xe5f7: or eax,edx
0xe5f9: mov byte ptr [r11-0x1],cl
0xe5fd: mov ecx,edx
0xe5ff: mov r11,r8
0xe602: jne 0xe5c8
0xe604: cmp r10d,edi
0xe607: cmovge edi,r10d
0xe60b: cmp byte ptr [rsp+0x38],0x0
0xe610: mov dword ptr [rsp+0x48],edi
0xe614: jne 0xee98
0xe61a: cmp byte ptr [rsp+0x40],0x0
0xe61f: je 0xe8b9
0xe625: cmp r15d,0x2d
0xe629: je 0xf153
0xe62f: mov byte ptr [rsp+0x38],0x2b
0xe634: mov eax,dword ptr [rsp+0x48]
0xe638: lea rcx,[r9+0x17]
0xe63c: mov rdx,qword ptr [rsp+0x8]
0xe641: sub rcx,r8
0xe644: lea r12d,[rax-0x1]
0xe648: sub rdx,r14
0xe64b: sub r12d,ecx
0xe64e: test r12d,r12d
0xe651: jle 0xf09c
0xe657: cmp r15d,0x5f
0xe65b: je 0xf016
0xe661: movsxd rax,dword ptr [rsp+0x48]
0xe666: cmp rax,rdx
0xe669: mov rdi,rax
0xe66c: jae 0xdb4c
0xe672: test r10d,r10d
0xe675: mov eax,0x0
0xe67a: mov esi,0x1
0xe67f: cmovns eax,r10d
0xe683: cltq 
0xe685: test rax,rax
0xe688: cmovne rsi,rax
0xe68c: cmp rsi,rdx
0xe68f: jae 0xdb4c
0xe695: add r14,rsi
0xe698: test rbp,rbp
0xe69b: movsxd r9,r12d
0xe69e: mov r12,rbx
0xe6a1: je 0xe744
0xe6a7: test edi,edi
0xe6a9: jne 0xe6ff
0xe6ab: cmp rax,0x1
0xe6af: jbe 0xe6ff
0xe6b1: movsxd rdx,r10d
0xe6b4: mov qword ptr [rsp+0x58],r8
0xe6b9: mov qword ptr [rsp+0x50],r9
0xe6be: sub rdx,0x1
0xe6c2: cmp r15d,0x30
0xe6c6: mov qword ptr [rsp+0x40],rcx
0xe6cb: lea r12,[rbp+rdx]
0xe6d0: je 0xf4a1
0xe6d6: cmp r15d,0x2b
0xe6da: je 0xf4a1
0xe6e0: mov rdi,rbp
0xe6e3: mov esi,0x20
0xe6e8: mov rbp,r12
0xe6eb: call 0x28f0
0xe6f0: mov r8,qword ptr [rsp+0x58]
0xe6f5: mov r9,qword ptr [rsp+0x50]
0xe6fa: mov rcx,qword ptr [rsp+0x40]
0xe6ff: movzx eax,byte ptr [rsp+0x38]
0xe704: add rbp,0x1
0xe708: mov r12,rbx
0xe70b: mov byte ptr [rbp-0x1],al
0xe70e: test rbp,rbp
0xe711: je 0xe744
0xe713: mov rdx,r9
0xe716: mov rdi,rbp
0xe719: mov esi,0x30
0xe71e: mov qword ptr [rsp+0x50],r8
0xe723: mov qword ptr [rsp+0x40],rcx
0xe728: mov qword ptr [rsp+0x38],r9
0xe72d: call 0x28f0
0xe732: mov r9,qword ptr [rsp+0x38]
0xe737: mov r8,qword ptr [rsp+0x50]
0xe73c: mov rcx,qword ptr [rsp+0x40]
0xe741: add rbp,r9
0xe744: mov rdx,qword ptr [rsp+0x8]
0xe749: add r14,r9
0xe74c: xor r11d,r11d
0xe74f: xor r10d,r10d
0xe752: sub rdx,r14
0xe755: cmp rcx,r11
0xe758: mov rbx,r11
0xe75b: cmovae rbx,rcx
0xe75f: cmp rbx,rdx
0xe762: jae 0xdb4c
0xe768: test rbp,rbp
0xe76b: je 0xdf7e
0xe771: mov esi,dword ptr [rsp+0x48]
0xe775: test esi,esi
0xe777: jne 0xe7c8
0xe779: cmp rcx,r11
0xe77c: jae 0xe7c8
0xe77e: movsxd rdx,r10d
0xe781: mov qword ptr [rsp+0x48],r8
0xe786: mov qword ptr [rsp+0x40],rcx
0xe78b: sub rdx,rcx
0xe78e: cmp r15d,0x30
0xe792: lea rax,[rbp+rdx]
0xe797: mov qword ptr [rsp+0x38],rax
0xe79c: je 0xefda
0xe7a2: cmp r15d,0x2b
0xe7a6: je 0xefda
0xe7ac: mov rdi,rbp
0xe7af: mov esi,0x20
0xe7b4: call 0x28f0
0xe7b9: mov rbp,qword ptr [rsp+0x38]
0xe7be: mov r8,qword ptr [rsp+0x48]
0xe7c3: mov rcx,qword ptr [rsp+0x40]
0xe7c8: cmp byte ptr [rsp+0x30],0x0
0xe7cd: mov rdx,rcx
0xe7d0: mov qword ptr [rsp+0x30],rcx
0xe7d5: mov rsi,r8
0xe7d8: mov rdi,rbp
0xe7db: jne 0xdf71
0xe7e1: call 0x2970
0xe7e6: mov rcx,qword ptr [rsp+0x30]
0xe7eb: jmp 0xdf7b
0xe8b9: mov rdx,qword ptr [rsp+0x8]
0xe8be: lea rcx,[r9+0x17]
0xe8c2: sub rcx,r8
0xe8c5: sub rdx,r14
0xe8c8: cmp r15d,0x2d
0xe8cc: je 0xe8df
0xe8ce: mov r12d,dword ptr [rsp+0x48]
0xe8d3: sub r12d,ecx
0xe8d6: test r12d,r12d
0xe8d9: jg 0xf269
0xe8df: test r10d,r10d
0xe8e2: mov r11d,0x0
0xe8e8: mov r12,rbx
0xe8eb: cmovns r11d,r10d
0xe8ef: movsxd r11,r11d
0xe8f2: jmp 0xe755
0xea8a: mov r15d,dword ptr [rsp+0x2c]
0xea8f: mov eax,0x1
0xea94: cmp r15d,0x2b
0xea98: je 0xf4fa
0xea9e: mov byte ptr [rsp+0x40],0x0
0xeaa3: mov byte ptr [rsp+0x38],0x0
0xeaa8: mov edi,0x2
0xeaad: xor esi,esi
0xeaaf: jmp 0xdff7
0xebe3: mov edi,0x2
0xebe8: mov edx,0x63
0xebed: cmp edx,ecx
0xebef: mov byte ptr [rsp+0x40],0x1
0xebf4: mov r15d,0x2b
0xebfa: jb 0xe329
0xec00: cmp r10d,edi
0xec03: mov r15d,0x2b
0xec09: setg qword ptr [rsp+0x40]
0xec0e: xor esi,esi
0xec10: jmp 0xdff7
0xec32: jmp 0xe0f2
0xee80: mov eax,ecx
0xee82: neg eax
0xee84: cmp byte ptr [rsp+0x38],0x0
0xee89: cmovne ecx,eax
0xee8c: jmp 0xe5b0
0xee98: cmp r15d,0x2d
0xee9c: mov byte ptr [rsp+0x38],0x2d
0xeea1: jne 0xe634
0xeea7: test r10d,r10d
0xeeaa: mov r11d,0x0
0xeeb0: mov rax,qword ptr [rsp+0x8]
0xeeb5: cmovns r11d,r10d
0xeeb9: mov r12d,0x1
0xeebf: movsxd r11,r11d
0xeec2: test r11,r11
0xeec5: cmovne r12,r11
0xeec9: sub rax,r14
0xeecc: cmp rax,r12
0xeecf: jbe 0xdb4c
0xeed5: test rbp,rbp
0xeed8: je 0xef3c
0xeeda: mov eax,dword ptr [rsp+0x48]
0xeede: test eax,eax
0xeee0: jne 0xef34
0xeee2: cmp r11,0x1
0xeee6: jbe 0xef34
0xeee8: movsxd rax,r10d
0xeeeb: mov rdi,rbp
0xeeee: mov esi,0x20
0xeef3: lea rcx,[rax-0x1]
0xeef7: mov qword ptr [rsp+0x60],r9
0xeefc: mov qword ptr [rsp+0x58],r8
0xef01: mov qword ptr [rsp+0x50],r11
0xef06: mov dword ptr [rsp+0x40],r10d
0xef0b: mov rdx,rcx
0xef0e: mov qword ptr [rsp+0x38],rcx
0xef13: call 0x28f0
0xef18: mov rcx,qword ptr [rsp+0x38]
0xef1d: mov r9,qword ptr [rsp+0x60]
0xef22: mov r8,qword ptr [rsp+0x58]
0xef27: mov r11,qword ptr [rsp+0x50]
0xef2c: mov r10d,dword ptr [rsp+0x40]
0xef31: add rbp,rcx
0xef34: mov byte ptr [rbp],r15b
0xef38: add rbp,0x1
0xef3c: mov rdx,qword ptr [rsp+0x8]
0xef41: lea rcx,[r9+0x17]
0xef45: add r14,r12
0xef48: mov r15d,0x2d
0xef4e: mov r12,rbx
0xef51: sub rcx,r8
0xef54: sub rdx,r14
0xef57: jmp 0xe755
0xef60: call 0x2970
0xef65: mov rcx,qword ptr [rsp+0x38]
0xef6a: mov r8,qword ptr [rsp+0x30]
0xef6f: jmp 0xdda2
0xef78: mov rdi,rbp
0xef7b: mov qword ptr [rsp+0x30],rcx
0xef80: call 0xd9e0
0xef85: mov rcx,qword ptr [rsp+0x30]
0xef8a: jmp 0xdf7b
0xef8f: mov rdi,rbp
0xef92: mov esi,0x30
0xef97: call 0x28f0
0xef9c: mov rbp,qword ptr [rsp+0x38]
0xefa1: movzx r8d,byte ptr [rsp+0x40]
0xefa7: mov rcx,qword ptr [rsp+0x48]
0xefac: mov r9,qword ptr [rsp+0x50]
0xefb1: jmp 0xdf4e
0xefb6: mov rdi,rbp
0xefb9: mov esi,0x30
0xefbe: mov rbp,rbx
0xefc1: call 0x28f0
0xefc6: mov r9,qword ptr [rsp+0x38]
0xefcb: mov rcx,qword ptr [rsp+0x40]
0xefd0: mov r8,qword ptr [rsp+0x48]
0xefd5: jmp 0xdd75
0xefda: mov rdi,rbp
0xefdd: mov esi,0x30
0xefe2: call 0x28f0
0xefe7: mov rbp,qword ptr [rsp+0x38]
0xefec: mov rcx,qword ptr [rsp+0x40]
0xeff1: mov r8,qword ptr [rsp+0x48]
0xeff6: jmp 0xe7c8
0xf011: mov byte ptr [rsp+0x38],0x0
0xf016: movsxd r15,r12d
0xf019: cmp r15,rdx
0xf01c: jae 0xdb4c
0xf022: test rbp,rbp
0xf025: je 0xf058
0xf027: mov rdi,rbp
0xf02a: mov rdx,r15
0xf02d: mov esi,0x20
0xf032: mov dword ptr [rsp+0x58],r10d
0xf037: mov qword ptr [rsp+0x50],r9
0xf03c: add rbp,r15
0xf03f: mov qword ptr [rsp+0x40],r8
0xf044: call 0x28f0
0xf049: mov r10d,dword ptr [rsp+0x58]
0xf04e: mov r9,qword ptr [rsp+0x50]
0xf053: mov r8,qword ptr [rsp+0x40]
0xf058: mov rdx,qword ptr [rsp+0x8]
0xf05d: mov eax,r10d
0xf060: add r14,r15
0xf063: sub eax,r12d
0xf066: cmp r10d,r12d
0xf069: mov r10d,0x0
0xf06f: cmovg r10d,eax
0xf073: sub rdx,r14
0xf076: cmp byte ptr [rsp+0x38],0x0
0xf07b: jne 0xf1a2
0xf081: add r9,0x17
0xf085: movsxd r11,r10d
0xf088: mov r12,rbx
0xf08b: mov rcx,r9
0xf08e: mov r15d,0x5f
0xf094: sub rcx,r8
0xf097: jmp 0xe755
0xf09c: test r10d,r10d
0xf09f: mov r11d,0x0
0xf0a5: mov r12d,0x1
0xf0ab: cmovns r11d,r10d
0xf0af: movsxd r11,r11d
0xf0b2: test r11,r11
0xf0b5: cmovne r12,r11
0xf0b9: cmp r12,rdx
0xf0bc: jae 0xdb4c
0xf0c2: test rbp,rbp
0xf0c5: je 0xf140
0xf0c7: mov edi,dword ptr [rsp+0x48]
0xf0cb: test edi,edi
0xf0cd: jne 0xf134
0xf0cf: cmp r11,0x1
0xf0d3: jbe 0xf134
0xf0d5: movsxd rdx,r10d
0xf0d8: mov dword ptr [rsp+0x6c],r10d
0xf0dd: mov qword ptr [rsp+0x60],r8
0xf0e2: sub rdx,0x1
0xf0e6: cmp r15d,0x30
0xf0ea: mov qword ptr [rsp+0x58],rcx
0xf0ef: lea rax,[rbp+rdx]
0xf0f4: mov qword ptr [rsp+0x50],r11
0xf0f9: mov qword ptr [rsp+0x40],rax
0xf0fe: je 0xf4cf
0xf104: cmp r15d,0x2b
0xf108: je 0xf4cf
0xf10e: mov rdi,rbp
0xf111: mov esi,0x20
0xf116: call 0x28f0
0xf11b: mov rbp,qword ptr [rsp+0x40]
0xf120: mov r10d,dword ptr [rsp+0x6c]
0xf125: mov r8,qword ptr [rsp+0x60]
0xf12a: mov rcx,qword ptr [rsp+0x58]
0xf12f: mov r11,qword ptr [rsp+0x50]
0xf134: movzx eax,byte ptr [rsp+0x38]
0xf139: add rbp,0x1
0xf13d: mov byte ptr [rbp-0x1],al
0xf140: mov rdx,qword ptr [rsp+0x8]
0xf145: add r14,r12
0xf148: mov r12,rbx
0xf14b: sub rdx,r14
0xf14e: jmp 0xe755
0xf153: mov r15d,0x2b
0xf159: jmp 0xeea7
0xf1a2: movsxd r15,r10d
0xf1a5: mov r12d,0x1
0xf1ab: test r15,r15
0xf1ae: cmovne r12,r15
0xf1b2: cmp r12,rdx
0xf1b5: jae 0xdb4c
0xf1bb: test rbp,rbp
0xf1be: je 0xf21b
0xf1c0: mov r11d,dword ptr [rsp+0x48]
0xf1c5: test r11d,r11d
0xf1c8: jne 0xf20f
0xf1ca: cmp r15,0x1
0xf1ce: jbe 0xf20f
0xf1d0: lea rcx,[r15-0x1]
0xf1d4: mov rdi,rbp
0xf1d7: mov esi,0x20
0xf1dc: mov dword ptr [rsp+0x60],r10d
0xf1e1: mov qword ptr [rsp+0x58],r9
0xf1e6: mov rdx,rcx
0xf1e9: mov qword ptr [rsp+0x50],r8
0xf1ee: mov qword ptr [rsp+0x40],rcx
0xf1f3: call 0x28f0
0xf1f8: mov rcx,qword ptr [rsp+0x40]
0xf1fd: mov r10d,dword ptr [rsp+0x60]
0xf202: mov r9,qword ptr [rsp+0x58]
0xf207: mov r8,qword ptr [rsp+0x50]
0xf20c: add rbp,rcx
0xf20f: movzx eax,byte ptr [rsp+0x38]
0xf214: add rbp,0x1
0xf218: mov byte ptr [rbp-0x1],al
0xf21b: mov rdx,qword ptr [rsp+0x8]
0xf220: add r9,0x17
0xf224: add r14,r12
0xf227: mov rcx,r9
0xf22a: mov r11,r15
0xf22d: mov r12,rbx
0xf230: sub rcx,r8
0xf233: mov r15d,0x5f
0xf239: sub rdx,r14
0xf23c: jmp 0xe755
0xf269: cmp r15d,0x5f
0xf26d: je 0xf011
0xf273: movsxd rax,dword ptr [rsp+0x48]
0xf278: cmp rax,rdx
0xf27b: jae 0xdb4c
0xf281: movsxd r9,r12d
0xf284: mov r12,rbx
0xf287: jmp 0xe70e
0xf28c: mov rdi,rbp
0xf28f: mov esi,0x30
0xf294: call 0x28f0
0xf299: mov rbp,qword ptr [rsp+0x50]
0xf29e: mov r11,qword ptr [rsp+0x58]
0xf2a3: jmp 0xe1b6
0xf4a1: mov rdi,rbp
0xf4a4: mov esi,0x30
0xf4a9: mov rbp,r12
0xf4ac: call 0x28f0
0xf4b1: mov rcx,qword ptr [rsp+0x40]
0xf4b6: mov r9,qword ptr [rsp+0x50]
0xf4bb: mov r8,qword ptr [rsp+0x58]
0xf4c0: jmp 0xe6ff
0xf4cf: mov rdi,rbp
0xf4d2: mov esi,0x30
0xf4d7: call 0x28f0
0xf4dc: mov rbp,qword ptr [rsp+0x40]
0xf4e1: mov r11,qword ptr [rsp+0x50]
0xf4e6: mov rcx,qword ptr [rsp+0x58]
0xf4eb: mov r8,qword ptr [rsp+0x60]
0xf4f0: mov r10d,dword ptr [rsp+0x6c]
0xf4f5: jmp 0xf134
0xf4fa: mov byte ptr [rsp+0x38],0x0
0xf4ff: mov edi,0x2
0xf504: jmp 0xec00
0xf515: call 0x2850
0xf51a: add ecx,0x64
0xf51d: test r15d,r15d
0xf520: je 0xea8a
0xf526: jmp 0xe462
0xf540: sub rsp,0x18
0xf544: mov rax,qword ptr fs:0x28
0xf54d: mov qword ptr [rsp+0x8],rax
0xf552: xor eax,eax
0xf554: mov byte ptr [rsp+0x7],0x0
0xf559: push r9
0xf55b: xor r9d,r9d
0xf55e: push r8
0xf560: xor r8d,r8d
0xf563: lea rax,[rsp+0x17]
0xf568: push rax
0xf569: push -0x1
0xf56b: call 0xda80
0xf570: add rsp,0x20
0xf574: mov rdx,qword ptr [rsp+0x8]
0xf579: xor rdx,qword ptr fs:0x28
0xf582: jne 0xf589
0xf584: add rsp,0x18
0xf588: ret 
0xf589: call 0x2850
0xf58e: nop 
0xf590: or dword ptr [rdi],0x20
0xf593: ret 
0xf867: movzx edx,byte ptr [r13+0x48]
0xf86c: mov rax,qword ptr [r13+0x50]
0xf870: cmp dl,0x25
0xf873: je 0x10008
0xf879: cmp rax,-0x1
0xf87d: je 0x104c6
0xf883: mov r8,qword ptr [rbp-0x3a8]
0xf88a: shl rax,0x5
0xf88e: add rax,r8
0xf891: cmp dl,0x6e
0xf894: mov edi,dword ptr [rax]
0xf896: mov dword ptr [rbp-0x3d0],edi
0xf89c: je 0x10080
0xf8a2: mov eax,dword ptr [r13+0x10]
0xf8a6: mov rdi,qword ptr [rbp-0x3d8]
0xf8ad: test al,0x1
0xf8af: mov byte ptr [rdi],0x25
0xf8b2: lea rbx,[rdi+0x1]
0xf8b6: je 0xf8c7
0xf8b8: mov rdi,qword ptr [rbp-0x3d8]
0xf8bf: lea rbx,[rdi+0x2]
0xf8c3: mov byte ptr [rdi+0x1],0x27
0xf8c7: test al,0x2
0xf8c9: je 0xf8d2
0xf8cb: mov byte ptr [rbx],0x2d
0xf8ce: add rbx,0x1
0xf8d2: test al,0x4
0xf8d4: je 0xf8dd
0xf8d6: mov byte ptr [rbx],0x2b
0xf8d9: add rbx,0x1
0xf8dd: test al,0x8
0xf8df: je 0xf8e8
0xf8e1: mov byte ptr [rbx],0x20
0xf8e4: add rbx,0x1
0xf8e8: test al,0x10
0xf8ea: je 0xf8f3
0xf8ec: mov byte ptr [rbx],0x23
0xf8ef: add rbx,0x1
0xf8f3: test al,0x40
0xf8f5: je 0xf8fe
0xf8f7: mov byte ptr [rbx],0x49
0xf8fa: add rbx,0x1
0xf8fe: test al,0x20
0xf900: je 0xf909
0xf902: mov byte ptr [rbx],0x30
0xf905: add rbx,0x1
0xf909: mov rsi,qword ptr [r13+0x18]
0xf90d: mov rdx,qword ptr [r13+0x20]
0xf911: cmp rsi,rdx
0xf914: je 0xf946
0xf916: mov rcx,rdx
0xf919: mov rdi,rbx
0xf91c: mov qword ptr [rbp-0x3e0],r8
0xf923: sub rcx,rsi
0xf926: mov rdx,rcx
0xf929: mov qword ptr [rbp-0x3c8],rcx
0xf930: call 0x2970
0xf935: mov rcx,qword ptr [rbp-0x3c8]
0xf93c: mov r8,qword ptr [rbp-0x3e0]
0xf943: add rbx,rcx
0xf946: mov rsi,qword ptr [r13+0x30]
0xf94a: mov rdx,qword ptr [r13+0x38]
0xf94e: cmp rsi,rdx
0xf951: je 0xf983
0xf953: mov rcx,rdx
0xf956: mov rdi,rbx
0xf959: mov qword ptr [rbp-0x3e0],r8
0xf960: sub rcx,rsi
0xf963: mov rdx,rcx
0xf966: mov qword ptr [rbp-0x3c8],rcx
0xf96d: call 0x2970
0xf972: mov rcx,qword ptr [rbp-0x3c8]
0xf979: mov r8,qword ptr [rbp-0x3e0]
0xf980: add rbx,rcx
0xf983: mov edi,dword ptr [rbp-0x3d0]
0xf989: cmp edi,0x10
0xf98c: ja 0xf9bb
0xf98e: mov eax,0x1
0xf993: mov ecx,edi
0xf995: shl rax,cl
0xf998: test eax,0x14180
0xf99d: jne 0xf9b4
0xf99f: test ah,0x10
0xf9a2: jne 0x10300
0xf9a8: test ah,0x6
0xf9ab: je 0xf9bb
0xf9ad: mov byte ptr [rbx],0x6c
0xf9b0: add rbx,0x1
0xf9b4: mov byte ptr [rbx],0x6c
0xf9b7: add rbx,0x1
0xf9bb: movzx eax,byte ptr [r13+0x48]
0xf9c0: mov byte ptr [rbx+0x1],0x0
0xf9c4: mov byte ptr [rbx],al
0xf9c6: mov rax,qword ptr [r13+0x28]
0xf9ca: cmp rax,-0x1
0xf9ce: je 0x10100
0xf9d4: shl rax,0x5
0xf9d8: add rax,r8
0xf9db: cmp dword ptr [rax],0x5
0xf9de: jne 0x104c6
0xf9e4: mov eax,dword ptr [rax+0x10]
0xf9e7: mov dword ptr [rbp-0x3e0],0x1
0xf9f1: mov dword ptr [rbp-0x3b8],eax
0xf9f7: mov rax,qword ptr [r13+0x40]
0xf9fb: cmp rax,-0x1
0xf9ff: je 0xfa2c
0xfa01: shl rax,0x5
0xfa05: add r8,rax
0xfa08: cmp dword ptr [r8],0x5
0xfa0c: jne 0x104c6
0xfa12: mov eax,dword ptr [rbp-0x3e0]
0xfa18: mov edx,dword ptr [r8+0x10]
0xfa1c: mov dword ptr [rbp+rax*4-0x3b8],edx
0xfa23: lea eax,[rax+0x1]
0xfa26: mov dword ptr [rbp-0x3e0],eax
0xfa2c: mov rax,r14
0xfa2f: xor edx,edx
0xfa31: add rax,0x2
0xfa35: jb 0x1069c
0xfa3b: cmp r12,rax
0xfa3e: jae 0xfa8b
0xfa40: test r12,r12
0xfa43: jne 0x10268
0xfa49: cmp rax,0xc
0xfa4d: ja 0x10280
0xfa53: mov r12d,0xc
0xfa59: cmp r15,qword ptr [rbp-0x3e8]
0xfa60: sete dl
0xfa63: test r15,r15
0xfa66: je 0x102b0
0xfa6c: test dl,dl
0xfa6e: jne 0x102b0
0xfa74: mov rsi,r12
0xfa77: mov rdi,r15
0xfa7a: call 0x2a40
0xfa7f: test rax,rax
0xfa82: je 0xf705
0xfa88: mov r15,rax
0xfa8b: mov byte ptr [r15+r14],0x0
0xfa90: call 0x2780
0xfa95: mov qword ptr [rbp-0x3c8],rax
0xfa9c: mov eax,dword ptr [rax]
0xfa9e: mov qword ptr [rbp-0x3f8],rbx
0xfaa5: mov dword ptr [rbp-0x424],eax
0xfaab: nop dword ptr [rax+rax]
0xfab0: mov rax,qword ptr [rbp-0x3c8]
0xfab7: mov rbx,r12
0xfaba: mov r10d,0x7fffffff
0xfac0: sub rbx,r14
0xfac3: mov dword ptr [rbp-0x3bc],0xffffffff
0xfacd: cmp rbx,0x7fffffff
0xfad4: mov dword ptr [rax],0x0
0xfada: mov eax,dword ptr [rbp-0x3d0]
0xfae0: cmovbe r10,rbx
0xfae4: cmp eax,0x11
0xfae7: ja 0x104c6
0xfaed: lea rsi,[rip+0x53c4]
0xfaf4: movsxd rax,dword ptr [rsi+rax*4]
0xfaf8: add rax,rsi
0xfafb: jmp rax
0x10008: cmp rax,-0x1
0x1000c: jne 0x104c6
0x10012: mov rax,r14
0x10015: add rax,0x1
0x10019: mov rbx,rax
0x1001c: jae 0x100a8
0x10022: cmp r12,-0x1
0x10026: jne 0xf705
0x1002c: mov rbx,r12
0x1002f: mov byte ptr [r15+r14],0x25
0x10034: mov r8,qword ptr [r13+0x8]
0x10038: add r13,0x58
0x1003c: mov rcx,qword ptr [r13]
0x10040: add qword ptr [rbp-0x400],0x1
0x10048: cmp rcx,r8
0x1004b: jne 0xf6e9
0x10080: mov edx,edi
0x10082: sub edx,0x12
0x10085: cmp edx,0x4
0x10088: ja 0x104c6
0x1008e: lea rdi,[rip+0x4e6b]
0x10095: mov rax,qword ptr [rax+0x10]
0x10099: movsxd rdx,dword ptr [rdi+rdx*4]
0x1009d: add rdx,rdi
0x100a0: jmp rdx
0x100a8: cmp r12,rax
0x100ab: jae 0x1002f
0x100ad: test r12,r12
0x100b0: jne 0x10480
0x100b6: cmp rax,0xc
0x100ba: ja 0x10492
0x100c0: mov r12d,0xc
0x100c6: cmp r15,qword ptr [rbp-0x3e8]
0x100cd: sete dl
0x100d0: test r15,r15
0x100d3: je 0x10340
0x100d9: test dl,dl
0x100db: jne 0x10340
0x100e1: mov rsi,r12
0x100e4: mov rdi,r15
0x100e7: call 0x2a40
0x100ec: test rax,rax
0x100ef: je 0x101eb
0x100f5: mov r15,rax
0x100f8: jmp 0x1002f
0x10100: mov dword ptr [rbp-0x3e0],0x0
0x1010a: jmp 0xf9f7
0x10268: js 0xf705
0x1026e: add r12,r12
0x10271: cmp r12,rax
0x10274: jae 0xfa59
0x1027a: nop word ptr [rax+rax]
0x10280: test rdx,rdx
0x10283: jne 0xf705
0x10289: cmp rax,-0x1
0x1028d: je 0xf705
0x10293: cmp r15,qword ptr [rbp-0x3e8]
0x1029a: mov r12,rax
0x1029d: sete dl
0x102a0: test r15,r15
0x102a3: jne 0xfa6c
0x102a9: nop dword ptr [rax]
0x102b0: mov rdi,r12
0x102b3: mov byte ptr [rbp-0x3c8],dl
0x102b9: call 0x29e0
0x102be: test rax,rax
0x102c1: mov rcx,rax
0x102c4: movzx edx,byte ptr [rbp-0x3c8]
0x102cb: je 0xf705
0x102d1: test r14,r14
0x102d4: je 0x10470
0x102da: test dl,dl
0x102dc: je 0x10470
0x102e2: mov rsi,r15
0x102e5: mov rdx,r14
0x102e8: mov rdi,rax
0x102eb: call 0x2970
0x102f0: mov r15,rax
0x102f3: jmp 0xfa8b
0x10300: mov byte ptr [rbx],0x4c
0x10303: add rbx,0x1
0x10307: jmp 0xf9bb
0x10340: mov rdi,r12
0x10343: mov byte ptr [rbp-0x3c8],dl
0x10349: call 0x29e0
0x1034e: test rax,rax
0x10351: mov rcx,rax
0x10354: movzx edx,byte ptr [rbp-0x3c8]
0x1035b: je 0xf705
0x10361: test r14,r14
0x10364: je 0x104a4
0x1036a: test dl,dl
0x1036c: je 0x104a4
0x10372: mov rsi,r15
0x10375: mov rdx,r14
0x10378: mov rdi,rax
0x1037b: call 0x2970
0x10380: mov r15,rax
0x10383: jmp 0x1002f
0x10470: mov r15,rcx
0x10473: jmp 0xfa8b
0x10480: js 0xf705
0x10486: add r12,r12
0x10489: cmp r12,rax
0x1048c: jae 0x100c6
0x10492: cmp rax,-0x1
0x10496: je 0xf705
0x1049c: mov r12,rax
0x1049f: jmp 0x100c6
0x104a4: mov r15,rcx
0x104a7: jmp 0x1002f
0x104c6: call 0x2770
0x104cb: nop dword ptr [rax+rax]
0x1069c: cmp r12,-0x1
0x106a0: mov edx,0x1
0x106a5: je 0xfa8b
0x106ab: test r12,r12
0x106ae: je 0xf705
0x106b4: jns 0x10280
0x106ba: jmp 0xf705
0x10cce: mov rdi,rcx
0x10cd1: call 0x2a40
0x10cd6: mov rdx,qword ptr [r15+0x8]
0x10cda: mov r8,qword ptr [rsp+0x30]
0x10cdf: mov rcx,rax
0x10ce2: mov r10,qword ptr [rsp+0x38]
0x10ce7: mov r9,qword ptr [rsp+0x40]
0x11366: mov rdi,rcx
0x11369: call 0x2a40
0x1136e: mov rdx,qword ptr [r15+0x8]
0x11372: mov r11,qword ptr [rsp+0x30]
0x11377: mov rcx,rax
0x1137a: mov r8,qword ptr [rsp+0x38]
0x1137f: mov r10,qword ptr [rsp+0x40]
0x11384: mov r9,qword ptr [rsp+0x48]
0x113b4: mov rdi,rcx
0x113b7: call 0x2750
0x115b0: push r15
0x115b2: push r14
0x115b4: mov r15,rdx
0x115b7: push r13
0x115b9: push r12
0x115bb: lea r12,[rip+0x205a2e]
0x115c2: push rbp
0x115c3: lea rbp,[rip+0x205a2e]
0x115ca: push rbx
0x115cb: mov r13d,edi
0x115ce: mov r14,rsi
0x115d1: sub rbp,r12
0x115d4: sub rsp,0x8
0x115d8: sar rbp,0x3
0x115dc: call 0x26f0
0x115e1: test rbp,rbp
0x115e4: je 0x11606
0x115e6: xor ebx,ebx
0x115e8: nop dword ptr [rax+rax]
0x115f0: mov rdx,r15
0x115f3: mov rsi,r14
0x115f6: mov edi,r13d
0x115f9: call qword ptr [r12+rbx*8]
0x115fd: add rbx,0x1
0x11601: cmp rbp,rbx
0x11604: jne 0x115f0
0x11606: add rsp,0x8
0x1160a: pop rbx
0x1160b: pop rbp
0x1160c: pop r12
0x1160e: pop r13
0x11610: pop r14
0x11612: pop r15
0x11614: ret 
0x11620: rep ret 
0x12ffb: jmp qword ptr [rip+0x32302563]
