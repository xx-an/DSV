0x1960: sub rsp,0x8
0x1964: mov rax,qword ptr [rip+0x20d675]
0x196b: test rax,rax
0x196e: je 0x1972
0x1970: call rax
0x1972: add rsp,0x8
0x1976: ret 
0x1986: jmp qword ptr [rip+0x20d42c]
0x19c0: jmp qword ptr [rip+0x20d412]
0x19d0: jmp qword ptr [rip+0x20d40a]
0x19e0: jmp qword ptr [rip+0x20d402]
0x1a10: jmp qword ptr [rip+0x20d3ea]
0x1a40: jmp qword ptr [rip+0x20d3d2]
0x1ab0: jmp qword ptr [rip+0x20d39a]
0x1ad0: jmp qword ptr [rip+0x20d38a]
0x1af0: jmp qword ptr [rip+0x20d37a]
0x1b10: jmp qword ptr [rip+0x20d36a]
0x1b40: jmp qword ptr [rip+0x20d352]
0x1bf0: jmp qword ptr [rip+0x20d2fa]
0x1c30: jmp qword ptr [rip+0x20d2da]
0x1c40: jmp qword ptr [rip+0x20d2d2]
0x1c60: jmp qword ptr [rip+0x20d2c2]
0x1cb0: jmp qword ptr [rip+0x20d29a]
0x1cf0: jmp qword ptr [rip+0x20d27a]
0x1d70: jmp qword ptr [rip+0x20d23a]
0x1d80: jmp qword ptr [rip+0x20d232]
0x1d90: jmp qword ptr [rip+0x20d22a]
0x1da8: jmp qword ptr [rip+0x20d242]
0x1ffd: nop dword ptr [rax]
0x2213: mov rdx,r13
0x2216: mov esi,0x3
0x221b: mov edi,0x1
0x2220: mov r12,rax
0x2223: call 0x5a50
0x2228: lea rsi,[rip+0x9171]
0x222f: mov rbx,qword ptr [rbx]
0x2232: mov edx,0x5
0x2237: xor edi,edi
0x2239: mov rbp,rax
0x223c: call 0x1a60
0x2241: mov rdi,qword ptr [rip+0x20ce98]
0x2248: mov rdx,rax
0x224b: mov r9,r12
0x224e: mov r8,rbp
0x2251: mov rcx,rbx
0x2254: mov esi,0x1
0x2259: xor eax,eax
0x225b: call 0x1d60
0x22bf: lea rsi,[rip+0x9102]
0x22c6: mov edx,0x5
0x22cb: xor edi,edi
0x22cd: mov rbp,rax
0x22d0: call 0x1a60
0x22d5: mov rbx,rax
0x22d8: call 0x19a0
0x22dd: mov esi,dword ptr [rax]
0x22df: mov rcx,rbp
0x22e2: mov rdx,rbx
0x22e5: mov edi,0x1
0x22ea: xor eax,eax
0x22ec: call 0x1cd0
0x2303: call 0x1ab0
0x2329: jmp 0x2260
0x233b: lea rsi,[rip+0x902e]
0x2342: mov rbx,rax
0x2345: mov edx,0x5
0x234a: xor edi,edi
0x234c: call 0x1a60
0x2351: mov rcx,rbx
0x2354: mov rdx,rax
0x2357: xor esi,esi
0x2359: mov edi,0x1
0x235e: xor eax,eax
0x2360: call 0x1cd0
0x2389: nop dword ptr [rax]
0x23ba: hlt 
0x23bb: nop dword ptr [rax+rax]
0x23c0: lea rdi,[rip+0x20ccd9]
0x23c7: push rbp
0x23c8: lea rax,[rip+0x20ccd1]
0x23cf: cmp rax,rdi
0x23d2: mov rbp,rsp
0x23d5: je 0x23f0
0x23d7: mov rax,qword ptr [rip+0x20cbf2]
0x23de: test rax,rax
0x23e1: je 0x23f0
0x23e3: pop rbp
0x23e4: jmp rax
0x23f0: pop rbp
0x23f1: ret 
0x2400: lea rdi,[rip+0x20cc99]
0x2407: lea rsi,[rip+0x20cc92]
0x240e: push rbp
0x240f: sub rsi,rdi
0x2412: mov rbp,rsp
0x2415: sar rsi,0x3
0x2419: mov rax,rsi
0x241c: shr rax,0x3f
0x2420: add rsi,rax
0x2423: sar rsi, 1
0x2426: je 0x2440
0x2428: mov rax,qword ptr [rip+0x20cbb9]
0x242f: test rax,rax
0x2432: je 0x2440
0x2434: pop rbp
0x2435: jmp rax
0x2440: pop rbp
0x2441: ret 
0x2461: push rbp
0x2462: mov rbp,rsp
0x2465: je 0x2473
0x2467: mov rdi,qword ptr [rip+0x20cb9a]
0x246e: call 0x1da8
0x2473: call 0x23c0
0x2478: mov byte ptr [rip+0x20cc69],0x1
0x247f: pop rbp
0x2480: ret 
0x2490: push rbp
0x2491: mov rbp,rsp
0x2494: pop rbp
0x2495: jmp 0x2400
0x28f0: push r13
0x28f2: push r12
0x28f4: mov r13,rdx
0x28f7: push rbp
0x28f8: push rbx
0x28f9: xor edx,edx
0x28fb: mov r12,rdi
0x28fe: mov rbx,rsi
0x2901: mov ebp,ecx
0x2903: sub rsp,0xa8
0x290a: mov rsi,qword ptr [rsi+0x30]
0x290e: mov edi,dword ptr [rdi+0x2c]
0x2911: mov rax,qword ptr fs:0x28
0x291a: mov qword ptr [rsp+0x98],rax
0x2922: xor eax,eax
0x2924: test cl,cl
0x2926: setne dl
0x2929: shl edx,0x9
0x292c: call 0x19e0
0x2931: test eax,eax
0x2933: jne 0x2970
0x2935: cmp byte ptr [r13+0x1a],0x0
0x293a: mov eax,0x2
0x293f: jne 0x2a28
0x2945: mov rcx,qword ptr [rsp+0x98]
0x294d: xor rcx,qword ptr fs:0x28
0x2956: jne 0x2b38
0x295c: add rsp,0xa8
0x2963: pop rbx
0x2964: pop rbp
0x2965: pop r12
0x2967: pop r13
0x2969: ret 
0x2970: call 0x19a0
0x2975: mov edx,dword ptr [rax]
0x2977: mov rbp,rax
0x297a: cmp edx,0x1e
0x297d: je 0x2a78
0x2983: cmp byte ptr [r13],0x0
0x2988: je 0x29b0
0x298a: cmp edx,0x14
0x298d: je 0x2af9
0x2993: jle 0x2af0
0x2999: cmp edx,0x16
0x299c: je 0x2af9
0x29a2: cmp edx,0x54
0x29a5: je 0x2af9
0x29ab: nop dword ptr [rax+rax]
0x29b0: cmp word ptr [rbx+0x70],0x4
0x29b5: je 0x2ab0
0x29bb: mov rsi,qword ptr [rbx+0x38]
0x29bf: mov edi,0x4
0x29c4: call 0x5b70
0x29c9: lea rsi,[rip+0x8aba]
0x29d0: xor edi,edi
0x29d2: mov edx,0x5
0x29d7: mov r12,rax
0x29da: call 0x1a60
0x29df: mov esi,dword ptr [rbp]
0x29e2: mov rdx,rax
0x29e5: xor edi,edi
0x29e7: xor eax,eax
0x29e9: mov rcx,r12
0x29ec: call 0x1cd0
0x29f1: mov rax,qword ptr [rbx+0x8]
0x29f5: cmp qword ptr [rax+0x58],0x0
0x29fa: jns 0x2a13
0x29fc: jmp 0x2a1a
0x2a00: mov qword ptr [rax+0x20],0x1
0x2a08: mov rax,qword ptr [rax+0x8]
0x2a0c: cmp qword ptr [rax+0x58],0x0
0x2a11: js 0x2a1a
0x2a13: cmp qword ptr [rax+0x20],0x0
0x2a18: je 0x2a00
0x2a1a: mov eax,0x4
0x2a1f: jmp 0x2945
0x2a28: mov rsi,qword ptr [rbx+0x38]
0x2a2c: mov edi,0x4
0x2a31: call 0x5b70
0x2a36: test bpl,bpl
0x2a39: mov rbx,rax
0x2a3c: mov edx,0x5
0x2a41: je 0x2b08
0x2a47: lea rsi,[rip+0x8a1a]
0x2a4e: xor edi,edi
0x2a50: call 0x1a60
0x2a55: mov rsi,rax
0x2a58: mov rdx,rbx
0x2a5b: mov edi,0x1
0x2a60: xor eax,eax
0x2a62: call 0x1ca0
0x2a67: mov eax,0x2
0x2a6c: jmp 0x2945
0x2a78: mov rdx,qword ptr [rbx+0x30]
0x2a7c: mov esi,dword ptr [r12+0x2c]
0x2a81: mov rcx,rsp
0x2a84: mov r8d,0x100
0x2a8a: mov edi,0x1
0x2a8f: call 0x1ae0
0x2a94: test eax,eax
0x2a96: je 0x2aa0
0x2a98: mov edx,dword ptr [rbp]
0x2a9b: cmp edx,0x2
0x2a9e: je 0x2b1b
0x2aa0: mov dword ptr [rbp],0x1e
0x2aa7: jmp 0x29bb
0x2ab0: cmp edx,0x27
0x2ab3: ja 0x29bb
0x2ab9: movabsq rax,0x8000320000
0x2ac3: btq rax,rdx
0x2ac7: jae 0x29bb
0x2acd: mov eax,dword ptr [rbx+0x40]
0x2ad0: cmp eax,0x1
0x2ad3: je 0x2ade
0x2ad5: cmp eax,0xd
0x2ad8: jne 0x29bb
0x2ade: mov dword ptr [rbp],eax
0x2ae1: jmp 0x29bb
0x2af0: cmp edx,0x2
0x2af3: jne 0x29b0
0x2af9: mov eax,0x2
0x2afe: jmp 0x2945
0x2b08: lea rsi,[rip+0x896f]
0x2b0f: xor edi,edi
0x2b11: call 0x1a60
0x2b16: jmp 0x2a55
0x2b1b: cmp byte ptr [r13],0x0
0x2b20: mov eax,0x2
0x2b25: jne 0x2945
0x2b2b: cmp word ptr [rbx+0x70],0x4
0x2b30: jne 0x29bb
0x2b36: jmp 0x2ab9
0x2b38: call 0x1ab0
0x2b3d: nop dword ptr [rax]
0x2b40: push rbx
0x2b41: mov rax,qword ptr [rdx+0x30]
0x2b45: mov rbx,rdx
0x2b48: cmp rax,-0x1
0x2b4c: je 0x2b60
0x2b4e: test rax,rax
0x2b51: js 0x2ba6
0x2b53: xor eax,eax
0x2b55: pop rbx
0x2b56: ret 
0x2b60: mov rcx,rdx
0x2b63: mov r8d,0x100
0x2b69: mov rdx,rsi
0x2b6c: mov esi,edi
0x2b6e: mov edi,0x1
0x2b73: call 0x1ae0
0x2b78: test eax,eax
0x2b7a: je 0x2ba0
0x2b7c: mov qword ptr [rbx+0x30],-0x2
0x2b84: call 0x19a0
0x2b89: movsxd rdx,dword ptr [rax]
0x2b8c: mov qword ptr [rbx+0x8],rdx
0x2b90: mov dword ptr [rax],edx
0x2b92: mov eax,0xffffffff
0x2b97: pop rbx
0x2b98: ret 
0x2ba0: mov rax,qword ptr [rbx+0x30]
0x2ba4: jmp 0x2b4e
0x2ba6: call 0x19a0
0x2bab: mov rdx,qword ptr [rbx+0x8]
0x2baf: jmp 0x2b90
0x2bc0: push r15
0x2bc2: push r14
0x2bc4: push r13
0x2bc6: push r12
0x2bc8: mov r13,rcx
0x2bcb: push rbp
0x2bcc: push rbx
0x2bcd: mov rbx,rsi
0x2bd0: sub rsp,0xc8
0x2bd7: mov edi,dword ptr [rdi+0x2c]
0x2bda: mov r15,qword ptr [rsi+0x30]
0x2bde: mov rax,qword ptr fs:0x28
0x2be7: mov qword ptr [rsp+0xb8],rax
0x2bef: xor eax,eax
0x2bf1: mov rax,qword ptr [rsi+0x38]
0x2bf5: test r9,r9
0x2bf8: mov dword ptr [rsp+0x14],r8d
0x2bfd: mov dword ptr [rsp+0x10],edi
0x2c01: mov qword ptr [rsp+0x8],rax
0x2c06: je 0x2df0
0x2c0c: xor ebp,ebp
0x2c0e: test dl,dl
0x2c10: mov dword ptr [r9],0x2
0x2c17: setne bpl
0x2c1b: mov edx,0x30900
0x2c20: xor eax,eax
0x2c22: mov rsi,r15
0x2c25: mov r12,r9
0x2c28: mov qword ptr [rsp+0x50],-0x1
0x2c31: shl ebp,0x2
0x2c34: call 0x1aa0
0x2c39: test eax,eax
0x2c3b: js 0x2ca5
0x2c3d: mov edi,eax
0x2c3f: mov dword ptr [rsp+0x18],eax
0x2c43: call 0x1d10
0x2c48: test rax,rax
0x2c4b: mov r14,rax
0x2c4e: mov edx,dword ptr [rsp+0x18]
0x2c52: je 0x2eb0
0x2c58: call 0x19a0
0x2c5d: mov qword ptr [rsp+0x18],rax
0x2c62: mov dword ptr [rax],0x0
0x2c68: nop dword ptr [rax+rax]
0x2c70: mov rdi,r14
0x2c73: call 0x1c10
0x2c78: test rax,rax
0x2c7b: je 0x2ec8
0x2c81: cmp byte ptr [rax+0x13],0x2e
0x2c85: jne 0x2c9d
0x2c87: xor edx,edx
0x2c89: cmp byte ptr [rax+0x14],0x2e
0x2c8d: sete dl
0x2c90: movzx eax,byte ptr [rax+rdx+0x14]
0x2c95: test al,al
0x2c97: je 0x2c70
0x2c99: cmp al,0x2f
0x2c9b: je 0x2c70
0x2c9d: mov rdi,r14
0x2ca0: call 0x1b60
0x2ca5: xor r14d,r14d
0x2ca8: mov eax,0x3
0x2cad: mov dword ptr [r12],eax
0x2cb1: cmp qword ptr [rbx+0x20],0x0
0x2cb6: jne 0x2de0
0x2cbc: mov eax,dword ptr [r13+0x4]
0x2cc0: cmp eax,0x5
0x2cc3: je 0x2cf2
0x2cc5: cmp byte ptr [r13],0x0
0x2cca: jne 0x2ce9
0x2ccc: cmp eax,0x3
0x2ccf: je 0x2cd8
0x2cd1: cmp byte ptr [r13+0x19],0x0
0x2cd6: je 0x2cf2
0x2cd8: call 0x6500
0x2cdd: test al,al
0x2cdf: je 0x2fa8
0x2ce5: mov eax,dword ptr [r13+0x4]
0x2ce9: cmp eax,0x3
0x2cec: je 0x2e20
0x2cf2: mov eax,0x2
0x2cf7: mov rcx,qword ptr [rsp+0xb8]
0x2cff: xor rcx,qword ptr fs:0x28
0x2d08: jne 0x3083
0x2d0e: add rsp,0xc8
0x2d15: pop rbx
0x2d16: pop rbp
0x2d17: pop r12
0x2d19: pop r13
0x2d1b: pop r14
0x2d1d: pop r15
0x2d1f: ret 
0x2d20: lea rbx,[rsp+0x20]
0x2d25: mov edi,dword ptr [rsp+0x10]
0x2d29: mov rsi,r15
0x2d2c: mov rdx,rbx
0x2d2f: call 0x2b40
0x2d34: test eax,eax
0x2d36: jne 0x2f00
0x2d3c: mov eax,dword ptr [rsp+0x38]
0x2d40: and eax,0xf000
0x2d45: cmp eax,0xa000
0x2d4a: je 0x2f94
0x2d50: cmp eax,0x4000
0x2d55: je 0x2e34
0x2d5b: mov rsi,qword ptr [rsp+0x8]
0x2d60: mov edi,0x4
0x2d65: call 0x5b70
0x2d6a: mov rbp,rax
0x2d6d: mov edi,dword ptr [rsp+0x10]
0x2d71: mov rdx,rbx
0x2d74: mov rsi,r15
0x2d77: call 0x2b40
0x2d7c: test eax,eax
0x2d7e: jne 0x3030
0x2d84: mov rdi,rbx
0x2d87: call 0x3f20
0x2d8c: test r12d,r12d
0x2d8f: mov r13,rax
0x2d92: mov rbx,qword ptr [rip+0x20c37f]
0x2d99: mov edx,0x5
0x2d9e: je 0x3018
0x2da4: lea rsi,[rip+0x87b5]
0x2dab: xor edi,edi
0x2dad: call 0x1a60
0x2db2: mov rdi,qword ptr [rip+0x20c327]
0x2db9: mov rdx,rax
0x2dbc: mov r9,rbp
0x2dbf: mov r8,r13
0x2dc2: mov rcx,rbx
0x2dc5: mov esi,0x1
0x2dca: xor eax,eax
0x2dcc: call 0x1d60
0x2dd1: call 0x6850
0x2dd6: test al,al
0x2dd8: jne 0x2cf2
0x2dde: nop 
0x2de0: mov eax,0x3
0x2de5: jmp 0x2cf7
0x2df0: cmp dl,0x1
0x2df3: mov r14d,edx
0x2df6: mov eax,0x0
0x2dfb: sbb ebp,ebp
0x2dfd: mov qword ptr [rsp+0x50],-0x1
0x2e06: not ebp
0x2e08: and ebp,0x4
0x2e0b: test dl,dl
0x2e0d: cmovne r14d,eax
0x2e11: jmp 0x2cb1
0x2e20: xor r12d,r12d
0x2e23: test ebp,ebp
0x2e25: je 0x2d20
0x2e2b: cmp ebp,0x4
0x2e2e: jne 0x2f78
0x2e34: cmp byte ptr [r13+0x9],0x0
0x2e39: je 0x2f50
0x2e3f: mov rsi,qword ptr [rsp+0x8]
0x2e44: mov edi,0x4
0x2e49: call 0x5b70
0x2e4e: cmp dword ptr [rsp+0x14],0x2
0x2e53: mov rbp,rax
0x2e56: jne 0x2f8a
0x2e5c: test r14b,r14b
0x2e5f: jne 0x2f8a
0x2e65: test r12d,r12d
0x2e68: mov rbx,qword ptr [rip+0x20c2a9]
0x2e6f: mov edx,0x5
0x2e74: je 0x3070
0x2e7a: lea rsi,[rip+0x868f]
0x2e81: xor edi,edi
0x2e83: call 0x1a60
0x2e88: mov rdi,qword ptr [rip+0x20c251]
0x2e8f: mov rdx,rax
0x2e92: mov r8,rbp
0x2e95: mov rcx,rbx
0x2e98: mov esi,0x1
0x2e9d: xor eax,eax
0x2e9f: call 0x1d60
0x2ea4: jmp 0x2dd1
0x2eb0: mov edi,edx
0x2eb2: call 0x1b50
0x2eb7: mov eax,0x3
0x2ebc: jmp 0x2cad
0x2ec8: mov rax,qword ptr [rsp+0x18]
0x2ecd: mov rdi,r14
0x2ed0: mov edx,dword ptr [rax]
0x2ed2: mov dword ptr [rsp+0x18],edx
0x2ed6: call 0x1b60
0x2edb: mov edx,dword ptr [rsp+0x18]
0x2edf: test edx,edx
0x2ee1: jne 0x2ca5
0x2ee7: mov r14d,0x1
0x2eed: mov eax,0x4
0x2ef2: jmp 0x2cad
0x2f00: call 0x19a0
0x2f05: mov ebx,dword ptr [rax]
0x2f07: mov rsi,qword ptr [rsp+0x8]
0x2f0c: mov edi,0x4
0x2f11: call 0x5b70
0x2f16: mov rbp,rax
0x2f19: lea rsi,[rip+0x856a]
0x2f20: mov edx,0x5
0x2f25: xor edi,edi
0x2f27: call 0x1a60
0x2f2c: mov rcx,rbp
0x2f2f: mov rdx,rax
0x2f32: mov esi,ebx
0x2f34: xor eax,eax
0x2f36: xor edi,edi
0x2f38: call 0x1cd0
0x2f3d: mov eax,0x4
0x2f42: jmp 0x2cf7
0x2f50: cmp byte ptr [r13+0xa],0x0
0x2f55: je 0x2f5c
0x2f57: test r14b,r14b
0x2f5a: jne 0x2f78
0x2f5c: mov rsi,qword ptr [rsp+0x8]
0x2f61: mov edi,0x4
0x2f66: mov ebx,0x15
0x2f6b: call 0x5b70
0x2f70: mov rbp,rax
0x2f73: jmp 0x2f19
0x2f78: mov rsi,qword ptr [rsp+0x8]
0x2f7d: mov edi,0x4
0x2f82: call 0x5b70
0x2f87: mov rbp,rax
0x2f8a: lea rbx,[rsp+0x20]
0x2f8f: jmp 0x2d6d
0x2f94: cmp dword ptr [r13+0x4],0x3
0x2f99: jne 0x2cf2
0x2f9f: jmp 0x2d5b
0x2fa8: lea rbx,[rsp+0x20]
0x2fad: mov edi,dword ptr [rsp+0x10]
0x2fb1: mov rsi,r15
0x2fb4: mov rdx,rbx
0x2fb7: call 0x2b40
0x2fbc: test eax,eax
0x2fbe: jne 0x2f00
0x2fc4: mov eax,dword ptr [rsp+0x38]
0x2fc8: and eax,0xf000
0x2fcd: cmp eax,0xa000
0x2fd2: je 0x2ce5
0x2fd8: mov edi,dword ptr [rsp+0x10]
0x2fdc: mov ecx,0x200
0x2fe1: mov edx,0x2
0x2fe6: mov rsi,r15
0x2fe9: call 0x1a10
0x2fee: test eax,eax
0x2ff0: je 0x2ce5
0x2ff6: call 0x19a0
0x2ffb: mov ebx,dword ptr [rax]
0x2ffd: mov r12d,0x1
0x3003: cmp ebx,0xd
0x3006: je 0x2e23
0x300c: jmp 0x2f07
0x3018: lea rsi,[rip+0x847c]
0x301f: xor edi,edi
0x3021: call 0x1a60
0x3026: jmp 0x2db2
0x3030: lea rsi,[rip+0x8453]
0x3037: mov edx,0x5
0x303c: xor edi,edi
0x303e: call 0x1a60
0x3043: mov rbx,rax
0x3046: call 0x19a0
0x304b: mov esi,dword ptr [rax]
0x304d: mov rcx,rbp
0x3050: xor eax,eax
0x3052: mov rdx,rbx
0x3055: xor edi,edi
0x3057: call 0x1cd0
0x305c: mov eax,0x4
0x3061: jmp 0x2cf7
0x3070: lea rsi,[rip+0x84c9]
0x3077: xor edi,edi
0x3079: call 0x1a60
0x307e: jmp 0x2e88
0x3083: call 0x1ab0
0x3088: nop dword ptr [rax+rax]
0x36e0: mov rdi,rbx
0x36e3: call 0x8350
0x36e8: test eax,eax
0x36ea: je 0x31bc
0x3718: jmp 0x31bc
0x3887: movzx ebx,word ptr [r15+0x70]
0x388c: lea rsi,[rip+0x7ee5]
0x3893: mov edx,0x5
0x3898: xor edi,edi
0x389a: mov rbp,rax
0x389d: call 0x1a60
0x38a2: lea r9,[rip+0x7c2d]
0x38a9: mov rdx,rax
0x38ac: mov r8,rbp
0x38af: mov ecx,ebx
0x38b1: xor esi,esi
0x38b3: xor edi,edi
0x38b5: xor eax,eax
0x38b7: call 0x1cd0
0x38bc: call 0x1990
0x38c1: lea rcx,[rip+0x7f68]
0x38c8: lea rsi,[rip+0x7ee1]
0x38cf: lea rdi,[rip+0x7c16]
0x38d6: mov edx,0x261
0x38db: call 0x1b20
0x38e0: call 0x1ab0
0x38e5: mov ebp,0x4
0x38ea: jmp 0x3100
0x38f0: mov edi,0x1
0x38f5: jmp 0x24a0
0x3a00: mov byte ptr [rsp+0x17],0x1
0x3a05: jmp 0x3987
0x3a53: mov rdx,r12
0x3a56: mov rbp,rax
0x3a59: mov esi,0x8
0x3a5e: xor edi,edi
0x3a60: call 0x5a50
0x3a65: mov r8,rbp
0x3a68: mov rdx,rbx
0x3a6b: mov rcx,rax
0x3a6e: pop rbx
0x3a6f: pop rbp
0x3a70: pop r12
0x3a72: xor esi,esi
0x3a74: xor edi,edi
0x3a76: xor eax,eax
0x3a78: jmp 0x1cd0
0x3aa0: push r15
0x3aa2: push r14
0x3aa4: mov r14,rdi
0x3aa7: push r13
0x3aa9: push r12
0x3aab: xor edi,edi
0x3aad: push rbp
0x3aae: push rbx
0x3aaf: mov rbp,rsi
0x3ab2: lea rsi,[rip+0x7db7]
0x3ab9: mov r12,rdx
0x3abc: mov edx,0x5
0x3ac1: sub rsp,0x8
0x3ac5: mov rbx,qword ptr [rip+0x20b614]
0x3acc: call 0x1a60
0x3ad1: mov rdi,rax
0x3ad4: mov rsi,rbx
0x3ad7: call 0x1b80
0x3adc: mov r15,qword ptr [r14]
0x3adf: test r15,r15
0x3ae2: je 0x3b78
0x3ae8: xor r13d,r13d
0x3aeb: xor ebx,ebx
0x3aed: jmp 0x3b28
0x3af0: mov rdi,r15
0x3af3: add rbx,0x1
0x3af7: mov r13,rbp
0x3afa: call 0x5e40
0x3aff: mov rdi,qword ptr [rip+0x20b5da]
0x3b06: lea rdx,[rip+0x7d78]
0x3b0d: mov rcx,rax
0x3b10: mov esi,0x1
0x3b15: xor eax,eax
0x3b17: add rbp,r12
0x3b1a: call 0x1d60
0x3b1f: mov r15,qword ptr [r14+rbx*8]
0x3b23: test r15,r15
0x3b26: je 0x3b78
0x3b28: test rbx,rbx
0x3b2b: je 0x3af0
0x3b2d: mov rdx,r12
0x3b30: mov rsi,rbp
0x3b33: mov rdi,r13
0x3b36: call 0x1b70
0x3b3b: test eax,eax
0x3b3d: jne 0x3af0
0x3b3f: mov rdi,r15
0x3b42: add rbx,0x1
0x3b46: add rbp,r12
0x3b49: call 0x5e40
0x3b4e: mov rdi,qword ptr [rip+0x20b58b]
0x3b55: lea rdx,[rip+0x7d31]
0x3b5c: mov rcx,rax
0x3b5f: mov esi,0x1
0x3b64: xor eax,eax
0x3b66: call 0x1d60
0x3b6b: mov r15,qword ptr [r14+rbx*8]
0x3b6f: test r15,r15
0x3b72: jne 0x3b28
0x3b74: nop dword ptr [rax]
0x3b78: mov rdi,qword ptr [rip+0x20b561]
0x3b7f: mov rax,qword ptr [rdi+0x28]
0x3b83: cmp rax,qword ptr [rdi+0x30]
0x3b87: jae 0x3ba8
0x3b89: lea rdx,[rax+0x1]
0x3b8d: mov qword ptr [rdi+0x28],rdx
0x3b91: mov byte ptr [rax],0xa
0x3b94: add rsp,0x8
0x3b98: pop rbx
0x3b99: pop rbp
0x3b9a: pop r12
0x3b9c: pop r13
0x3b9e: pop r14
0x3ba0: pop r15
0x3ba2: ret 
0x3ba8: add rsp,0x8
0x3bac: mov esi,0xa
0x3bb1: pop rbx
0x3bb2: pop rbp
0x3bb3: pop r12
0x3bb5: pop r13
0x3bb7: pop r14
0x3bb9: pop r15
0x3bbb: jmp 0x1af0
0x3c13: mov rdx,r15
0x3c16: mov rsi,rbp
0x3c19: mov rdi,rbx
0x3c1c: call 0x3aa0
0x3c21: call r13
0x3c24: mov rax,-0x1
0x3c2b: jmp 0x3bf6
0x3c30: push r14
0x3c32: push r13
0x3c34: push r12
0x3c36: push rbp
0x3c37: push rbx
0x3c38: mov r14,qword ptr [rsi]
0x3c3b: test r14,r14
0x3c3e: je 0x3c71
0x3c40: mov r12,rcx
0x3c43: mov r13,rdi
0x3c46: mov rbp,rdx
0x3c49: lea rbx,[rsi+0x8]
0x3c4d: jmp 0x3c5f
0x3c50: mov r14,qword ptr [rbx]
0x3c53: add rbp,r12
0x3c56: add rbx,0x8
0x3c5a: test r14,r14
0x3c5d: je 0x3c71
0x3c5f: mov rdx,r12
0x3c62: mov rsi,rbp
0x3c65: mov rdi,r13
0x3c68: call 0x1b70
0x3c6d: test eax,eax
0x3c6f: jne 0x3c50
0x3c71: pop rbx
0x3c72: mov rax,r14
0x3c75: pop rbp
0x3c76: pop r12
0x3c78: pop r13
0x3c7a: pop r14
0x3c7c: ret 
0x3c80: mov qword ptr [rip+0x20b479],rdi
0x3c87: ret 
0x3c90: push r12
0x3c92: push rbp
0x3c93: push rbx
0x3c94: mov rbx,qword ptr [rip+0x20b415]
0x3c9b: mov rdi,rbx
0x3c9e: call 0x6930
0x3ca3: test rax,rax
0x3ca6: jne 0x3d48
0x3cac: mov rdi,rbx
0x3caf: call 0x8e70
0x3cb4: test eax,eax
0x3cb6: jne 0x3ce8
0x3cb8: pop rbx
0x3cb9: pop rbp
0x3cba: pop r12
0x3cbc: jmp 0x3dc0
0x3cc8: call 0x68f0
0x3ccd: test eax,eax
0x3ccf: mov rdi,qword ptr [rip+0x20b3da]
0x3cd6: je 0x3d66
0x3cdc: call 0x8e70
0x3ce1: nop dword ptr [rax]
0x3ce8: lea rsi,[rip+0x7ba3]
0x3cef: xor edi,edi
0x3cf1: mov edx,0x5
0x3cf6: call 0x1a60
0x3cfb: mov rbx,qword ptr [rip+0x20b3fe]
0x3d02: mov r12,rax
0x3d05: call 0x19a0
0x3d0a: mov rbp,rax
0x3d0d: test rbx,rbx
0x3d10: je 0x3d80
0x3d12: mov rdi,rbx
0x3d15: call 0x5c40
0x3d1a: mov esi,dword ptr [rbp]
0x3d1d: lea rdx,[rip+0x7b81]
0x3d24: mov rcx,rax
0x3d27: mov r8,r12
0x3d2a: xor edi,edi
0x3d2c: xor eax,eax
0x3d2e: call 0x1cd0
0x3d33: call 0x3dc0
0x3d38: mov edi,dword ptr [rip+0x20b2e2]
0x3d3e: call 0x19c0
0x3d43: nop dword ptr [rax+rax]
0x3d48: xor esi,esi
0x3d4a: mov rdi,rbx
0x3d4d: mov edx,0x1
0x3d52: call 0x6960
0x3d57: test eax,eax
0x3d59: mov rdi,qword ptr [rip+0x20b350]
0x3d60: je 0x3cc8
0x3d66: call 0x8e70
0x3d6b: test eax,eax
0x3d6d: jne 0x3ce8
0x3d73: pop rbx
0x3d74: pop rbp
0x3d75: pop r12
0x3d77: jmp 0x3dc0
0x3d80: mov esi,dword ptr [rax]
0x3d82: lea rdx,[rip+0x7b06]
0x3d89: mov rcx,r12
0x3d8c: xor edi,edi
0x3d8e: xor eax,eax
0x3d90: call 0x1cd0
0x3d95: jmp 0x3d33
0x3da0: mov qword ptr [rip+0x20b369],rdi
0x3da7: ret 
0x3db0: mov byte ptr [rip+0x20b351],dil
0x3db7: ret 
0x3dc0: push rbp
0x3dc1: push rbx
0x3dc2: sub rsp,0x8
0x3dc6: mov rdi,qword ptr [rip+0x20b2db]
0x3dcd: call 0x8e70
0x3dd2: test eax,eax
0x3dd4: je 0x3dec
0x3dd6: call 0x19a0
0x3ddb: cmp byte ptr [rip+0x20b326],0x0
0x3de2: mov rbx,rax
0x3de5: je 0x3e03
0x3de7: cmp dword ptr [rax],0x20
0x3dea: jne 0x3e03
0x3dec: mov rdi,qword ptr [rip+0x20b2ed]
0x3df3: call 0x8e70
0x3df8: test eax,eax
0x3dfa: jne 0x3e42
0x3dfc: add rsp,0x8
0x3e00: pop rbx
0x3e01: pop rbp
0x3e02: ret 
0x3e03: lea rsi,[rip+0x7aa2]
0x3e0a: xor edi,edi
0x3e0c: mov edx,0x5
0x3e11: call 0x1a60
0x3e16: mov rdi,qword ptr [rip+0x20b2f3]
0x3e1d: mov rbp,rax
0x3e20: test rdi,rdi
0x3e23: je 0x3e4d
0x3e25: call 0x5c40
0x3e2a: mov esi,dword ptr [rbx]
0x3e2c: lea rdx,[rip+0x7a72]
0x3e33: mov rcx,rax
0x3e36: mov r8,rbp
0x3e39: xor edi,edi
0x3e3b: xor eax,eax
0x3e3d: call 0x1cd0
0x3e42: mov edi,dword ptr [rip+0x20b1d8]
0x3e48: call 0x19c0
0x3e4d: mov esi,dword ptr [rbx]
0x3e4f: lea rdx,[rip+0x7a39]
0x3e56: mov rcx,rax
0x3e59: xor edi,edi
0x3e5b: xor eax,eax
0x3e5d: call 0x1cd0
0x3e62: jmp 0x3e42
0x3e70: movzx edx,byte ptr [rdi]
0x3e73: mov rax,rdi
0x3e76: cmp dl,0x2f
0x3e79: jne 0x3e8c
0x3e7b: nop dword ptr [rax+rax]
0x3e80: add rax,0x1
0x3e84: movzx edx,byte ptr [rax]
0x3e87: cmp dl,0x2f
0x3e8a: je 0x3e80
0x3e8c: test dl,dl
0x3e8e: je 0x3eca
0x3e90: mov rcx,rax
0x3e93: xor esi,esi
0x3e95: jmp 0x3eb5
0x3ea0: test sil,sil
0x3ea3: je 0x3eaa
0x3ea5: mov rax,rcx
0x3ea8: xor esi,esi
0x3eaa: add rcx,0x1
0x3eae: movzx edx,byte ptr [rcx]
0x3eb1: test dl,dl
0x3eb3: je 0x3eca
0x3eb5: cmp dl,0x2f
0x3eb8: jne 0x3ea0
0x3eba: add rcx,0x1
0x3ebe: movzx edx,byte ptr [rcx]
0x3ec1: mov esi,0x1
0x3ec6: test dl,dl
0x3ec8: jne 0x3eb5
0x3eca: rep ret 
0x3ed0: push rbx
0x3ed1: mov rbx,rdi
0x3ed4: call 0x1a80
0x3ed9: cmp rax,0x1
0x3edd: jbe 0x3eea
0x3edf: cmp byte ptr [rbx+rax-0x1],0x2f
0x3ee4: lea rdx,[rax-0x1]
0x3ee8: je 0x3ef8
0x3eea: pop rbx
0x3eeb: ret 
0x3ef0: mov rdx,rax
0x3ef3: nop dword ptr [rax+rax]
0x3ef8: cmp rdx,0x1
0x3efc: je 0x3f10
0x3efe: cmp byte ptr [rbx+rdx-0x1],0x2f
0x3f03: lea rax,[rdx-0x1]
0x3f07: je 0x3ef0
0x3f09: mov rax,rdx
0x3f0c: pop rbx
0x3f0d: ret 
0x3f10: mov eax,0x1
0x3f15: pop rbx
0x3f16: ret 
0x3f20: mov eax,dword ptr [rdi+0x18]
0x3f23: mov edx,0x5
0x3f28: and eax,0xf000
0x3f2d: cmp eax,0x8000
0x3f32: je 0x3f80
0x3f34: cmp eax,0x4000
0x3f39: je 0x3fd0
0x3f3f: cmp eax,0xa000
0x3f44: je 0x3fb0
0x3f46: cmp eax,0x6000
0x3f4b: je 0x3fe0
0x3f51: cmp eax,0x2000
0x3f56: je 0x3ff0
0x3f5c: cmp eax,0x1000
0x3f61: je 0x4000
0x3f67: cmp eax,0xc000
0x3f6c: je 0x3fc0
0x3f6e: lea rsi,[rip+0x79b1]
0x3f75: xor edi,edi
0x3f77: jmp 0x1a60
0x3f80: cmp qword ptr [rdi+0x30],0x0
0x3f85: jne 0x3f98
0x3f87: lea rsi,[rip+0x792a]
0x3f8e: xor edi,edi
0x3f90: jmp 0x1a60
0x3f98: lea rsi,[rip+0x792c]
0x3f9f: xor edi,edi
0x3fa1: jmp 0x1a60
0x3fb0: lea rsi,[rip+0x792b]
0x3fb7: xor edi,edi
0x3fb9: jmp 0x1a60
0x3fc0: lea rsi,[rip+0x7958]
0x3fc7: xor edi,edi
0x3fc9: jmp 0x1a60
0x3fd0: lea rsi,[rip+0x7901]
0x3fd7: xor edi,edi
0x3fd9: jmp 0x1a60
0x3fe0: lea rsi,[rip+0x7909]
0x3fe7: xor edi,edi
0x3fe9: jmp 0x1a60
0x3ff0: lea rsi,[rip+0x790c]
0x3ff7: xor edi,edi
0x3ff9: jmp 0x1a60
0x4000: lea rsi,[rip+0x7913]
0x4007: xor edi,edi
0x4009: jmp 0x1a60
0x4010: sub rsp,0x8
0x4014: call 0x4030
0x4019: test rax,rax
0x401c: je 0x4023
0x401e: add rsp,0x8
0x4022: ret 
0x4023: call 0x6790
0x4028: nop dword ptr [rax+rax]
0x4030: push r15
0x4032: push r14
0x4034: mov r15,rdx
0x4037: push r13
0x4039: push r12
0x403b: mov r12,rdi
0x403e: push rbp
0x403f: push rbx
0x4040: mov rbp,rsi
0x4043: sub rsp,0x18
0x4047: call 0x3e70
0x404c: mov rbx,rax
0x404f: mov rdi,rax
0x4052: call 0x3ed0
0x4057: sub rbx,r12
0x405a: mov r13,rax
0x405d: mov rdi,rbp
0x4060: add rbx,rax
0x4063: call 0x1a80
0x4068: test r13,r13
0x406b: mov r14,rax
0x406e: je 0x40a0
0x4070: cmp byte ptr [r12+rbx-0x1],0x2f
0x4076: je 0x4120
0x407c: xor eax,eax
0x407e: cmp byte ptr [rbp],0x2f
0x4082: mov edx,0x0
0x4087: setne al
0x408a: mov qword ptr [rsp],rax
0x408e: mov eax,0x2f
0x4093: cmove eax,edx
0x4096: mov byte ptr [rsp+0xf],al
0x409a: jmp 0x40be
0x40a0: xor eax,eax
0x40a2: cmp byte ptr [rbp],0x2f
0x40a6: mov edx,0x0
0x40ab: sete al
0x40ae: mov qword ptr [rsp],rax
0x40b2: mov eax,0x2e
0x40b7: cmovne eax,edx
0x40ba: mov byte ptr [rsp+0xf],al
0x40be: lea rdi,[rbx+r14+0x1]
0x40c3: add rdi,qword ptr [rsp]
0x40c7: call 0x1c20
0x40cc: test rax,rax
0x40cf: mov r13,rax
0x40d2: je 0x4106
0x40d4: mov rdi,rax
0x40d7: mov rdx,rbx
0x40da: mov rsi,r12
0x40dd: call 0x1cb0
0x40e2: movzx ecx,byte ptr [rsp+0xf]
0x40e7: mov rdi,qword ptr [rsp]
0x40eb: add rdi,rax
0x40ee: test r15,r15
0x40f1: mov byte ptr [rax],cl
0x40f3: je 0x40f8
0x40f5: mov qword ptr [r15],rdi
0x40f8: mov rdx,r14
0x40fb: mov rsi,rbp
0x40fe: call 0x1cb0
0x4103: mov byte ptr [rax],0x0
0x4106: add rsp,0x18
0x410a: mov rax,r13
0x410d: pop rbx
0x410e: pop rbp
0x410f: pop r12
0x4111: pop r13
0x4113: pop r14
0x4115: pop r15
0x4117: ret 
0x4120: mov qword ptr [rsp],0x0
0x4128: mov byte ptr [rsp+0xf],0x0
0x412d: jmp 0x40be
0x41cf: nop 
0x41d0: push rbp
0x41d1: push rbx
0x41d2: mov rbp,rdi
0x41d5: mov ebx,esi
0x41d7: sub rsp,0x8
0x41db: call 0xa3f0
0x41e0: movzx edx,byte ptr [rax]
0x41e3: and edx,-0x21
0x41e6: cmp dl,0x55
0x41e9: je 0x4260
0x41eb: cmp dl,0x47
0x41ee: je 0x4210
0x41f0: lea rax,[rip+0x7794]
0x41f7: lea rdx,[rip+0x778f]
0x41fe: cmp ebx,0x9
0x4201: cmovne rax,rdx
0x4205: add rsp,0x8
0x4209: pop rbx
0x420a: pop rbp
0x420b: ret 
0x4210: movzx edx,byte ptr [rax+0x1]
0x4214: and edx,-0x21
0x4217: cmp dl,0x42
0x421a: jne 0x41f0
0x421c: cmp byte ptr [rax+0x2],0x31
0x4220: jne 0x41f0
0x4222: cmp byte ptr [rax+0x3],0x38
0x4226: jne 0x41f0
0x4228: cmp byte ptr [rax+0x4],0x30
0x422c: jne 0x41f0
0x422e: cmp byte ptr [rax+0x5],0x33
0x4232: jne 0x41f0
0x4234: cmp byte ptr [rax+0x6],0x30
0x4238: jne 0x41f0
0x423a: cmp byte ptr [rax+0x7],0x0
0x423e: jne 0x41f0
0x4240: cmp byte ptr [rbp],0x60
0x4244: lea rax,[rip+0x7739]
0x424b: lea rdx,[rip+0x7736]
0x4252: cmovne rax,rdx
0x4256: add rsp,0x8
0x425a: pop rbx
0x425b: pop rbp
0x425c: ret 
0x4260: movzx edx,byte ptr [rax+0x1]
0x4264: and edx,-0x21
0x4267: cmp dl,0x54
0x426a: jne 0x41f0
0x426c: movzx edx,byte ptr [rax+0x2]
0x4270: and edx,-0x21
0x4273: cmp dl,0x46
0x4276: jne 0x41f0
0x427c: cmp byte ptr [rax+0x3],0x2d
0x4280: jne 0x41f0
0x4286: cmp byte ptr [rax+0x4],0x38
0x428a: jne 0x41f0
0x4290: cmp byte ptr [rax+0x5],0x0
0x4294: jne 0x41f0
0x429a: cmp byte ptr [rbp],0x60
0x429e: lea rax,[rip+0x76d7]
0x42a5: lea rdx,[rip+0x76d4]
0x42ac: cmovne rax,rdx
0x42b0: add rsp,0x8
0x42b4: pop rbx
0x42b5: pop rbp
0x42b6: ret 
0x4393: xor r11d,r11d
0x4396: mov rax,rbp
0x4399: mov r8d,r12d
0x439c: mov rbp,r11
0x439f: mov r11,rax
0x43a2: nop word ptr [rax+rax]
0x43a8: cmp r11,rbp
0x43ab: setne r12b
0x43af: cmp r11,-0x1
0x43b3: jne 0x43c2
0x43b5: mov rax,qword ptr [rsp+0x10]
0x43ba: cmp byte ptr [rax+rbp],0x0
0x43be: setne r12b
0x43c2: test r12b,r12b
0x43c5: je 0x4a20
0x43cb: cmp dword ptr [rsp+0x8],0x2
0x43d0: mov rdi,qword ptr [rsp+0x10]
0x43d5: lea r9,[rdi+rbp]
0x43d9: setne al
0x43dc: and al,byte ptr [rsp+0xd]
0x43e0: mov r10d,eax
0x43e3: je 0x4490
0x43e9: mov rax,qword ptr [rsp+0x18]
0x43ee: test rax,rax
0x43f1: je 0x4820
0x43f7: cmp r11,-0x1
0x43fb: lea rbx,[rbp+rax]
0x4400: jne 0x4430
0x4402: cmp rax,0x1
0x4406: jbe 0x4430
0x4408: mov byte ptr [rsp+0x38],r8b
0x440d: mov byte ptr [rsp+0x30],r10b
0x4412: mov qword ptr [rsp+0x28],r9
0x4417: call 0x1a80
0x441c: movzx r8d,byte ptr [rsp+0x38]
0x4422: movzx r10d,byte ptr [rsp+0x30]
0x4428: mov r11,rax
0x442b: mov r9,qword ptr [rsp+0x28]
0x4430: cmp rbx,r11
0x4433: mov byte ptr [rsp+0x28],r10b
0x4438: ja 0x49f0
0x443e: mov rdx,qword ptr [rsp+0x18]
0x4443: mov rsi,qword ptr [rsp+0x48]
0x4448: mov rdi,r9
0x444b: mov qword ptr [rsp+0x40],r11
0x4450: mov byte ptr [rsp+0x38],r8b
0x4455: mov qword ptr [rsp+0x30],r9
0x445a: call 0x1b70
0x445f: test eax,eax
0x4461: mov r9,qword ptr [rsp+0x30]
0x4466: movzx r8d,byte ptr [rsp+0x38]
0x446c: mov r11,qword ptr [rsp+0x40]
0x4471: jne 0x49f0
0x4477: cmp byte ptr [rsp+0xf],0x0
0x447c: movzx r10d,byte ptr [rsp+0x28]
0x4482: jne 0x5405
0x4488: nop dword ptr [rax+rax]
0x4490: movzx ebx,byte ptr [r9]
0x4494: cmp bl,0x7e
0x4497: ja 0x47b8
0x449d: lea rcx,[rip+0x7568]
0x44a4: movzx edx,bl
0x44a7: movsxd rax,dword ptr [rcx+rdx*4]
0x44ab: add rax,rcx
0x44ae: jmp rax
0x44e8: cmp byte ptr [rsp+0xd],0x1
0x44ed: jne 0x4602
0x44f3: test dl,dl
0x44f5: jne 0x4602
0x44fb: mov rsi,qword ptr [rsp+0x20]
0x4500: test rsi,rsi
0x4503: je 0x4519
0x4505: mov edx,ebx
0x4507: shr dl,0x5
0x450a: movzx edx,dl
0x450d: mov edx,dword ptr [rsi+rdx*4]
0x4510: btl edx,ebx
0x4513: jb 0x4663
0x4519: test r10b,r10b
0x451c: jne 0x4663
0x4522: xor eax,0x1
0x4525: add rbp,0x1
0x4529: and eax,r8d
0x452c: test al,al
0x452e: je 0x4550
0x4530: cmp r13,r15
0x4533: jbe 0x453a
0x4535: mov byte ptr [r14+r15],0x27
0x453a: lea rax,[r15+0x1]
0x453e: cmp r13,rax
0x4541: jbe 0x4549
0x4543: mov byte ptr [r14+r15+0x1],0x27
0x4549: add r15,0x2
0x454d: xor r8d,r8d
0x4550: cmp r15,r13
0x4553: jae 0x4559
0x4555: mov byte ptr [r14+r15],bl
0x4559: movzx edi,byte ptr [rsp+0xe]
0x455e: add r15,0x1
0x4562: mov eax,0x0
0x4567: test r12b,r12b
0x456a: cmove edi,eax
0x456d: mov byte ptr [rsp+0xe],dil
0x4572: jmp 0x43a8
0x4602: cmp byte ptr [rsp+0xf],0x0
0x4607: jne 0x44fb
0x460d: jmp 0x4519
0x4663: cmp dword ptr [rsp+0x8],0x2
0x4668: sete dl
0x466b: cmp byte ptr [rsp+0xf],0x0
0x4670: mov eax,edx
0x4672: jne 0x4ec8
0x4678: mov eax,r8d
0x467b: xor eax,0x1
0x467e: and al,dl
0x4680: je 0x46b1
0x4682: cmp r13,r15
0x4685: jbe 0x468c
0x4687: mov byte ptr [r14+r15],0x27
0x468c: lea rdx,[r15+0x1]
0x4690: cmp r13,rdx
0x4693: jbe 0x469b
0x4695: mov byte ptr [r14+r15+0x1],0x24
0x469b: lea rdx,[r15+0x2]
0x469f: cmp r13,rdx
0x46a2: jbe 0x46aa
0x46a4: mov byte ptr [r14+r15+0x2],0x27
0x46aa: add r15,0x3
0x46ae: mov r8d,eax
0x46b1: cmp r13,r15
0x46b4: jbe 0x46bb
0x46b6: mov byte ptr [r14+r15],0x5c
0x46bb: add r15,0x1
0x46bf: add rbp,0x1
0x46c3: jmp 0x4550
0x47b0: xor r10d,r10d
0x47b3: nop dword ptr [rax+rax]
0x47b8: cmp qword ptr [rsp+0x58],0x1
0x47be: jne 0x4b68
0x47c4: mov qword ptr [rsp+0x38],r11
0x47c9: mov byte ptr [rsp+0x30],r8b
0x47ce: mov byte ptr [rsp+0x28],r10b
0x47d3: call 0x1d90
0x47d8: mov rcx,qword ptr [rax]
0x47db: movzx edx,bl
0x47de: movzx r10d,byte ptr [rsp+0x28]
0x47e4: movzx r8d,byte ptr [rsp+0x30]
0x47ea: mov r11,qword ptr [rsp+0x38]
0x47ef: mov edi,0x1
0x47f4: movzx eax,word ptr [rcx+rdx*2]
0x47f8: and ax,0x4000
0x47fc: setne r12b
0x4800: sete al
0x4803: and al,byte ptr [rsp+0xd]
0x4807: test al,al
0x4809: jne 0x51a1
0x480f: cmp dword ptr [rsp+0x8],0x2
0x4814: sete dl
0x4817: jmp 0x44e8
0x4820: movzx ebx,byte ptr [r9]
0x4824: cmp bl,0x7e
0x4827: ja 0x47b0
0x4829: lea rcx,[rip+0x73d8]
0x4830: movzx edx,bl
0x4833: movsxd rax,dword ptr [rcx+rdx*4]
0x4837: add rax,rcx
0x483a: jmp rax
0x49f0: xor r10d,r10d
0x49f3: jmp 0x4490
0x4a20: cmp dword ptr [rsp+0x8],0x2
0x4a25: movzx ebx,byte ptr [rsp+0xf]
0x4a2a: mov r12d,r8d
0x4a2d: mov rbp,r11
0x4a30: sete dl
0x4a33: mov eax,ebx
0x4a35: test r15,r15
0x4a38: sete cl
0x4a3b: and eax,edx
0x4a3d: and al,cl
0x4a3f: jne 0x54a6
0x4a45: mov eax,ebx
0x4a47: xor eax,0x1
0x4a4a: and dl,al
0x4a4c: je 0x53bc
0x4a52: cmp byte ptr [rsp+0x7c],0x0
0x4a57: je 0x53ba
0x4a5d: cmp byte ptr [rsp+0xe],0x0
0x4a62: jne 0x545d
0x4a68: test r13,r13
0x4a6b: sete al
0x4a6e: cmp qword ptr [rsp+0x50],0x0
0x4a74: setne dl
0x4a77: and al,dl
0x4a79: je 0x549c
0x4a7f: mov r13,qword ptr [rsp+0x50]
0x4a84: lea rbx,[rip+0x6f02]
0x4a8b: mov byte ptr [r14],0x27
0x4a8f: mov dword ptr [rsp+0x8],0x2
0x4a97: mov r15d,0x1
0x4a9d: mov qword ptr [rsp+0x18],0x1
0x4aa6: mov byte ptr [rsp+0xf],0x0
0x4aab: mov qword ptr [rsp+0x48],rbx
0x4ab0: mov byte ptr [rsp+0x7c],al
0x4ab4: jmp 0x4393
0x4b68: lea rax,[rsp+0xa0]
0x4b70: cmp r11,-0x1
0x4b74: mov qword ptr [rsp+0xa0],0x0
0x4b80: mov qword ptr [rsp+0x28],rax
0x4b85: jne 0x4bb4
0x4b87: mov rdi,qword ptr [rsp+0x10]
0x4b8c: mov byte ptr [rsp+0x40],r8b
0x4b91: mov byte ptr [rsp+0x38],r10b
0x4b96: mov qword ptr [rsp+0x30],r9
0x4b9b: call 0x1a80
0x4ba0: movzx r8d,byte ptr [rsp+0x40]
0x4ba6: movzx r10d,byte ptr [rsp+0x38]
0x4bac: mov r11,rax
0x4baf: mov r9,qword ptr [rsp+0x30]
0x4bb4: lea rax,[rsp+0x9c]
0x4bbc: xor ecx,ecx
0x4bbe: mov byte ptr [rsp+0x7e],bl
0x4bc2: mov byte ptr [rsp+0x7d],r8b
0x4bc7: mov rbx,rcx
0x4bca: mov qword ptr [rsp+0x88],r9
0x4bd2: mov qword ptr [rsp+0x38],rax
0x4bd7: mov byte ptr [rsp+0x7f],r10b
0x4bdc: mov qword ptr [rsp+0x80],r15
0x4be4: mov qword ptr [rsp+0x40],r14
0x4be9: mov qword ptr [rsp+0x70],r13
0x4bee: mov qword ptr [rsp+0x30],r11
0x4bf3: mov rax,qword ptr [rsp+0x10]
0x4bf8: lea r14,[rbp+rbx]
0x4bfd: mov rdx,qword ptr [rsp+0x30]
0x4c02: mov rcx,qword ptr [rsp+0x28]
0x4c07: mov rdi,qword ptr [rsp+0x38]
0x4c0c: lea r13,[rax+r14]
0x4c10: sub rdx,r14
0x4c13: mov rsi,r13
0x4c16: call 0x8de0
0x4c1b: test rax,rax
0x4c1e: mov r15,rax
0x4c21: je 0x4c71
0x4c23: cmp rax,-0x1
0x4c27: je 0x5245
0x4c2d: cmp rax,-0x2
0x4c31: je 0x51d1
0x4c37: cmp dword ptr [rsp+0x8],0x2
0x4c3c: sete al
0x4c3f: and al,byte ptr [rsp+0xf]
0x4c43: jne 0x4de0
0x4c49: mov edi,dword ptr [rsp+0x9c]
0x4c50: call 0x1d80
0x4c55: mov rdi,qword ptr [rsp+0x28]
0x4c5a: test eax,eax
0x4c5c: mov eax,0x0
0x4c61: cmove r12d,eax
0x4c65: add rbx,r15
0x4c68: call 0x1d70
0x4c6d: test eax,eax
0x4c6f: je 0x4bf3
0x4c71: mov edx,r12d
0x4c74: mov rdi,rbx
0x4c77: movzx r8d,byte ptr [rsp+0x7d]
0x4c7d: xor edx,0x1
0x4c80: movzx ebx,byte ptr [rsp+0x7e]
0x4c85: movzx r10d,byte ptr [rsp+0x7f]
0x4c8b: and dl,byte ptr [rsp+0xd]
0x4c8f: mov r15,qword ptr [rsp+0x80]
0x4c97: mov r14,qword ptr [rsp+0x40]
0x4c9c: mov r13,qword ptr [rsp+0x70]
0x4ca1: mov r11,qword ptr [rsp+0x30]
0x4ca6: cmp rdi,0x1
0x4caa: jbe 0x52ab
0x4cb0: mov rcx,rdi
0x4cb3: xor esi,esi
0x4cb5: movzx r9d,byte ptr [rsp+0xf]
0x4cbb: add rcx,rbp
0x4cbe: mov rdi,qword ptr [rsp+0x10]
0x4cc3: jmp 0x4d7e
0x4cd0: cmp dword ptr [rsp+0x8],0x2
0x4cd5: sete al
0x4cd8: test r9b,r9b
0x4cdb: jne 0x5190
0x4ce1: mov esi,r8d
0x4ce4: xor esi,0x1
0x4ce7: and al,sil
0x4cea: je 0x4d1b
0x4cec: cmp r13,r15
0x4cef: jbe 0x4cf6
0x4cf1: mov byte ptr [r14+r15],0x27
0x4cf6: lea rsi,[r15+0x1]
0x4cfa: cmp r13,rsi
0x4cfd: jbe 0x4d05
0x4cff: mov byte ptr [r14+r15+0x1],0x24
0x4d05: lea rsi,[r15+0x2]
0x4d09: cmp r13,rsi
0x4d0c: jbe 0x4d14
0x4d0e: mov byte ptr [r14+r15+0x2],0x27
0x4d14: add r15,0x3
0x4d18: mov r8d,eax
0x4d1b: cmp r13,r15
0x4d1e: jbe 0x4d25
0x4d20: mov byte ptr [r14+r15],0x5c
0x4d25: lea rax,[r15+0x1]
0x4d29: cmp r13,rax
0x4d2c: jbe 0x4d3b
0x4d2e: mov eax,ebx
0x4d30: shr al,0x6
0x4d33: add eax,0x30
0x4d36: mov byte ptr [r14+r15+0x1],al
0x4d3b: lea rax,[r15+0x2]
0x4d3f: cmp r13,rax
0x4d42: jbe 0x4d54
0x4d44: mov eax,ebx
0x4d46: shr al,0x3
0x4d49: and eax,0x7
0x4d4c: add eax,0x30
0x4d4f: mov byte ptr [r14+r15+0x2],al
0x4d54: and ebx,0x7
0x4d57: add rbp,0x1
0x4d5b: add r15,0x3
0x4d5f: add ebx,0x30
0x4d62: cmp rbp,rcx
0x4d65: jae 0x4550
0x4d6b: mov esi,edx
0x4d6d: cmp r13,r15
0x4d70: jbe 0x4d76
0x4d72: mov byte ptr [r14+r15],bl
0x4d76: movzx ebx,byte ptr [rdi+rbp]
0x4d7a: add r15,0x1
0x4d7e: test dl,dl
0x4d80: jne 0x4cd0
0x4d86: mov eax,esi
0x4d88: xor eax,0x1
0x4d8b: and eax,r8d
0x4d8e: test r10b,r10b
0x4d91: je 0x4da1
0x4d93: cmp r13,r15
0x4d96: jbe 0x4d9d
0x4d98: mov byte ptr [r14+r15],0x5c
0x4d9d: add r15,0x1
0x4da1: add rbp,0x1
0x4da5: cmp rbp,rcx
0x4da8: jae 0x452c
0x4dae: test al,al
0x4db0: je 0x51ae
0x4db6: cmp r13,r15
0x4db9: jbe 0x4dc0
0x4dbb: mov byte ptr [r14+r15],0x27
0x4dc0: lea rax,[r15+0x1]
0x4dc4: cmp r13,rax
0x4dc7: jbe 0x4dcf
0x4dc9: mov byte ptr [r14+r15+0x1],0x27
0x4dcf: add r15,0x2
0x4dd3: xor r10d,r10d
0x4dd6: xor r8d,r8d
0x4dd9: jmp 0x4d6d
0x4de0: cmp r15,0x1
0x4de4: je 0x4c49
0x4dea: mov rdi,qword ptr [rsp+0x10]
0x4def: lea rcx,[rdi+r15]
0x4df3: lea rdx,[rdi+r14+0x1]
0x4df8: lea r8,[rcx+r14]
0x4dfc: jmp 0x4e0d
0x4e00: add rdx,0x1
0x4e04: cmp r8,rdx
0x4e07: je 0x4c49
0x4e0d: movzx ecx,byte ptr [rdx]
0x4e10: sub ecx,0x5b
0x4e13: cmp cl,0x21
0x4e16: ja 0x4e00
0x4e18: mov esi,0x1
0x4e1d: shl rsi,cl
0x4e20: mov rcx,rsi
0x4e23: movabsq rsi,0x20000002b
0x4e2d: test rcx,rsi
0x4e30: je 0x4e00
0x4e32: mov r14,qword ptr [rsp+0x40]
0x4e37: mov r13,qword ptr [rsp+0x70]
0x4e3c: mov rbp,qword ptr [rsp+0x30]
0x4e41: mov dword ptr [rsp+0x8],0x2
0x4e49: cmp byte ptr [rsp+0xd],0x0
0x4e4e: je 0x4e60
0x4e50: test al,al
0x4e52: mov eax,0x4
0x4e57: cmove eax,dword ptr [rsp+0x8]
0x4e5c: mov dword ptr [rsp+0x8],eax
0x4e60: sub rsp,0x8
0x4e64: mov rcx,rbp
0x4e67: mov rsi,r13
0x4e6a: push qword ptr [rsp+0x68]
0x4e6e: push qword ptr [rsp+0x78]
0x4e72: mov rdi,r14
0x4e75: push 0x0
0x4e77: mov r9d,dword ptr [rsp+0x98]
0x4e7f: mov r8d,dword ptr [rsp+0x28]
0x4e84: mov rdx,qword ptr [rsp+0x30]
0x4e89: and r9d,-0x3
0x4e8d: call 0x42c0
0x4e92: add rsp,0x20
0x4e96: mov r15,rax
0x4e99: mov rbx,qword ptr [rsp+0xa8]
0x4ea1: xor rbx,qword ptr fs:0x28
0x4eaa: mov rax,r15
0x4ead: jne 0x54b3
0x4eb3: add rsp,0xb8
0x4eba: pop rbx
0x4ebb: pop rbp
0x4ebc: pop r12
0x4ebe: pop r13
0x4ec0: pop r14
0x4ec2: pop r15
0x4ec4: ret 
0x4ec8: mov rbp,r11
0x4ecb: jmp 0x4e49
0x4f31: test r13,r13
0x4f34: jne 0x54ca
0x4f3a: lea rax,[rip+0x6a4c]
0x4f41: mov qword ptr [rsp+0x50],0x0
0x4f4a: mov byte ptr [rsp+0xe],0x1
0x4f4f: mov byte ptr [rsp+0x7c],0x0
0x4f54: xor r12d,r12d
0x4f57: mov byte ptr [rsp+0xf],0x0
0x4f5c: mov qword ptr [rsp+0x18],0x1
0x4f65: mov qword ptr [rsp+0x48],rax
0x4f6a: mov r15d,0x1
0x4f70: mov dword ptr [rsp+0x8],0x2
0x4f78: jmp 0x4393
0x5190: movzx ebx,byte ptr [rsp+0xf]
0x5195: mov rbp,r11
0x5198: mov byte ptr [rsp+0xd],bl
0x519c: jmp 0x4e49
0x51a1: movzx edx,byte ptr [rsp+0xd]
0x51a6: xor r12d,r12d
0x51a9: jmp 0x4cb0
0x51ae: xor r10d,r10d
0x51b1: jmp 0x4d6d
0x51d1: mov r11,qword ptr [rsp+0x30]
0x51d6: mov rsi,r14
0x51d9: mov rcx,r13
0x51dc: mov rax,rbx
0x51df: mov rdi,rbx
0x51e2: movzx r8d,byte ptr [rsp+0x7d]
0x51e8: movzx ebx,byte ptr [rsp+0x7e]
0x51ed: mov r9,qword ptr [rsp+0x88]
0x51f5: cmp rsi,r11
0x51f8: movzx r10d,byte ptr [rsp+0x7f]
0x51fe: mov r15,qword ptr [rsp+0x80]
0x5206: mov r14,qword ptr [rsp+0x40]
0x520b: mov r13,qword ptr [rsp+0x70]
0x5210: jae 0x5238
0x5212: cmp byte ptr [rcx],0x0
0x5215: jne 0x5227
0x5217: jmp 0x5238
0x5220: cmp byte ptr [r9+rax],0x0
0x5225: je 0x5235
0x5227: add rax,0x1
0x522b: lea rdx,[rbp+rax]
0x5230: cmp r11,rdx
0x5233: ja 0x5220
0x5235: mov rdi,rax
0x5238: movzx edx,byte ptr [rsp+0xd]
0x523d: xor r12d,r12d
0x5240: jmp 0x4ca6
0x5245: mov rdi,rbx
0x5248: movzx r8d,byte ptr [rsp+0x7d]
0x524e: movzx ebx,byte ptr [rsp+0x7e]
0x5253: movzx r10d,byte ptr [rsp+0x7f]
0x5259: mov r15,qword ptr [rsp+0x80]
0x5261: xor r12d,r12d
0x5264: mov r14,qword ptr [rsp+0x40]
0x5269: mov r13,qword ptr [rsp+0x70]
0x526e: mov r11,qword ptr [rsp+0x30]
0x5273: movzx edx,byte ptr [rsp+0xd]
0x5278: jmp 0x4ca6
0x52ab: mov eax,edx
0x52ad: jmp 0x4807
0x53ba: mov eax,edx
0x53bc: mov rbx,qword ptr [rsp+0x48]
0x53c1: test rbx,rbx
0x53c4: je 0x53f2
0x53c6: test al,al
0x53c8: je 0x53f2
0x53ca: movzx ecx,byte ptr [rbx]
0x53cd: mov rax,rbx
0x53d0: test cl,cl
0x53d2: je 0x53f2
0x53d4: mov rdx,r15
0x53d7: sub rax,r15
0x53da: cmp r13,rdx
0x53dd: jbe 0x53e3
0x53df: mov byte ptr [r14+rdx],cl
0x53e3: add rdx,0x1
0x53e7: movzx ecx,byte ptr [rax+rdx]
0x53eb: test cl,cl
0x53ed: jne 0x53da
0x53ef: mov r15,rdx
0x53f2: cmp r13,r15
0x53f5: jbe 0x4e99
0x53fb: mov byte ptr [r14+r15],0x0
0x5400: jmp 0x4e99
0x5405: cmp dword ptr [rsp+0x8],0x2
0x540a: movzx ebx,byte ptr [rsp+0xf]
0x540f: mov rbp,r11
0x5412: sete al
0x5415: mov byte ptr [rsp+0xd],bl
0x5419: jmp 0x4e49
0x545d: sub rsp,0x8
0x5461: mov r8d,0x5
0x5467: mov rcx,r11
0x546a: push qword ptr [rsp+0x68]
0x546e: push qword ptr [rsp+0x78]
0x5472: mov rdi,r14
0x5475: push qword ptr [rsp+0x38]
0x5479: mov r9d,dword ptr [rsp+0x98]
0x5481: mov rdx,qword ptr [rsp+0x30]
0x5486: mov rsi,qword ptr [rsp+0x70]
0x548b: call 0x42c0
0x5490: add rsp,0x20
0x5494: mov r15,rax
0x5497: jmp 0x4e99
0x549c: movzx eax,byte ptr [rsp+0x7c]
0x54a1: jmp 0x53bc
0x54a6: mov dword ptr [rsp+0x8],0x2
0x54ae: jmp 0x4e49
0x54b3: call 0x1ab0
0x54b8: mov byte ptr [rsp+0xd],0x0
0x54bd: jmp 0x4f31
0x54ca: mov byte ptr [rsp+0xe],0x1
0x54cf: xor eax,eax
0x54d1: xor r12d,r12d
0x54d4: mov qword ptr [rsp+0x50],0x0
0x54dd: jmp 0x4a84
0x54f4: nop 
0x54f6: nop word ptr cs:[rax+rax]
0x55ec: add rsp,0x20
0x55f0: mov r11,qword ptr [rsp+0x10]
0x55f5: cmp r11,rax
0x55f8: ja 0x5661
0x55fa: lea rsi,[rax+0x1]
0x55fe: lea rax,[rip+0x209b1b]
0x5605: cmp r12,rax
0x5608: mov qword ptr [rbx],rsi
0x560b: je 0x561f
0x560d: mov rdi,r12
0x5610: mov qword ptr [rsp+0x10],rsi
0x5615: call 0x1da0
0x561a: mov rsi,qword ptr [rsp+0x10]
0x561f: mov rdi,rsi
0x5622: mov qword ptr [rsp+0x10],rsi
0x5627: call 0x6540
0x562c: sub rsp,0x8
0x5630: mov qword ptr [rbx+0x8],rax
0x5634: mov r8d,dword ptr [rbp]
0x5638: push qword ptr [rbp+0x30]
0x563b: push qword ptr [rbp+0x28]
0x563e: mov rcx,r14
0x5641: push r15
0x5643: mov r9d,dword ptr [rsp+0x3c]
0x5648: mov rdi,rax
0x564b: mov rdx,qword ptr [rsp+0x28]
0x5650: mov rsi,qword ptr [rsp+0x30]
0x5655: mov r12,rax
0x5658: call 0x42c0
0x565d: add rsp,0x20
0x5661: mov eax,dword ptr [rsp+0x18]
0x5665: mov dword ptr [r13],eax
0x5669: add rsp,0x28
0x566d: mov rax,r12
0x5670: pop rbx
0x5671: pop rbp
0x5672: pop r12
0x5674: pop r13
0x5676: pop r14
0x5678: pop r15
0x567a: ret 
0x56ab: nop dword ptr [rax+rax]
0x56b0: push r12
0x56b2: push rbp
0x56b3: push rbx
0x56b4: mov rbx,rdi
0x56b7: call 0x19a0
0x56bc: mov r12d,dword ptr [rax]
0x56bf: mov rbp,rax
0x56c2: lea rax,[rip+0x209b57]
0x56c9: test rbx,rbx
0x56cc: mov esi,0x38
0x56d1: cmove rbx,rax
0x56d5: mov rdi,rbx
0x56d8: call 0x6740
0x56dd: mov dword ptr [rbp],r12d
0x56e1: pop rbx
0x56e2: pop rbp
0x56e3: pop r12
0x56e5: ret 
0x56f0: lea rax,[rip+0x209b29]
0x56f7: test rdi,rdi
0x56fa: cmove rdi,rax
0x56fe: mov eax,dword ptr [rdi]
0x5700: ret 
0x5710: lea rax,[rip+0x209b09]
0x5717: test rdi,rdi
0x571a: cmove rdi,rax
0x571e: mov dword ptr [rdi],esi
0x5720: ret 
0x5730: lea rax,[rip+0x209ae9]
0x5737: test rdi,rdi
0x573a: mov ecx,esi
0x573c: cmove rdi,rax
0x5740: mov eax,esi
0x5742: and ecx,0x1f
0x5745: shr al,0x5
0x5748: movzx eax,al
0x574b: lea rdi,[rdi+rax*4+0x8]
0x5750: mov esi,dword ptr [rdi]
0x5752: mov eax,esi
0x5754: shr eax,cl
0x5756: xor edx,eax
0x5758: and eax,0x1
0x575b: and edx,0x1
0x575e: shl edx,cl
0x5760: xor edx,esi
0x5762: mov dword ptr [rdi],edx
0x5764: ret 
0x5770: lea rax,[rip+0x209aa9]
0x5777: test rdi,rdi
0x577a: cmove rdi,rax
0x577e: mov eax,dword ptr [rdi+0x4]
0x5781: mov dword ptr [rdi+0x4],esi
0x5784: ret 
0x5790: lea rax,[rip+0x209a89]
0x5797: test rdi,rdi
0x579a: cmove rdi,rax
0x579e: test rsi,rsi
0x57a1: mov dword ptr [rdi],0xa
0x57a7: je 0x57b7
0x57a9: test rdx,rdx
0x57ac: je 0x57b7
0x57ae: mov qword ptr [rdi+0x28],rsi
0x57b2: mov qword ptr [rdi+0x30],rdx
0x57b6: ret 
0x57b7: sub rsp,0x8
0x57bb: call 0x1990
0x57c0: push r15
0x57c2: push r14
0x57c4: lea rax,[rip+0x209a55]
0x57cb: push r13
0x57cd: push r12
0x57cf: mov r13,rdi
0x57d2: push rbp
0x57d3: push rbx
0x57d4: mov rbx,r8
0x57d7: mov r14,rsi
0x57da: mov r15,rdx
0x57dd: sub rsp,0x18
0x57e1: test r8,r8
0x57e4: cmove rbx,rax
0x57e8: mov qword ptr [rsp+0x8],rcx
0x57ed: call 0x19a0
0x57f2: mov r12d,dword ptr [rax]
0x57f5: mov rbp,rax
0x57f8: lea rax,[rbx+0x8]
0x57fc: sub rsp,0x8
0x5800: mov r9d,dword ptr [rbx+0x4]
0x5804: push qword ptr [rbx+0x30]
0x5807: mov r8d,dword ptr [rbx]
0x580a: push qword ptr [rbx+0x28]
0x580d: mov rdx,r15
0x5810: push rax
0x5811: mov rcx,qword ptr [rsp+0x28]
0x5816: mov rsi,r14
0x5819: mov rdi,r13
0x581c: call 0x42c0
0x5821: mov dword ptr [rbp],r12d
0x5825: add rsp,0x38
0x5829: pop rbx
0x582a: pop rbp
0x582b: pop r12
0x582d: pop r13
0x582f: pop r14
0x5831: pop r15
0x5833: ret 
0x5840: push r15
0x5842: push r14
0x5844: lea rax,[rip+0x2099d5]
0x584b: push r13
0x584d: push r12
0x584f: mov r12,rdx
0x5852: push rbp
0x5853: push rbx
0x5854: mov rbx,rcx
0x5857: mov r14,rdi
0x585a: mov r15,rsi
0x585d: sub rsp,0x38
0x5861: test rcx,rcx
0x5864: cmove rbx,rax
0x5868: xor ebp,ebp
0x586a: call 0x19a0
0x586f: test r12,r12
0x5872: mov r13,rax
0x5875: mov eax,dword ptr [rax]
0x5877: sete bpl
0x587b: or ebp,dword ptr [rbx+0x4]
0x587e: lea r10,[rbx+0x8]
0x5882: sub rsp,0x8
0x5886: mov r8d,dword ptr [rbx]
0x5889: mov rcx,r15
0x588c: mov dword ptr [rsp+0x14],eax
0x5890: push qword ptr [rbx+0x30]
0x5893: mov rdx,r14
0x5896: push qword ptr [rbx+0x28]
0x5899: push r10
0x589b: xor esi,esi
0x589d: mov r9d,ebp
0x58a0: xor edi,edi
0x58a2: mov qword ptr [rsp+0x40],r10
0x58a7: call 0x42c0
0x58ac: lea rsi,[rax+0x1]
0x58b0: mov qword ptr [rsp+0x48],rax
0x58b5: add rsp,0x20
0x58b9: mov rdi,rsi
0x58bc: mov qword ptr [rsp+0x18],rsi
0x58c1: call 0x6540
0x58c6: mov qword ptr [rsp+0x10],rax
0x58cb: sub rsp,0x8
0x58cf: push qword ptr [rbx+0x30]
0x58d2: push qword ptr [rbx+0x28]
0x58d5: mov r10,qword ptr [rsp+0x38]
0x58da: mov r9d,ebp
0x58dd: mov r8d,dword ptr [rbx]
0x58e0: mov rcx,r15
0x58e3: mov rdx,r14
0x58e6: mov rdi,rax
0x58e9: push r10
0x58eb: mov rsi,qword ptr [rsp+0x38]
0x58f0: call 0x42c0
0x58f5: mov eax,dword ptr [rsp+0x2c]
0x58f9: add rsp,0x20
0x58fd: test r12,r12
0x5900: mov dword ptr [r13],eax
0x5904: je 0x590f
0x5906: mov r11,qword ptr [rsp+0x28]
0x590b: mov qword ptr [r12],r11
0x590f: mov rax,qword ptr [rsp+0x10]
0x5914: add rsp,0x38
0x5918: pop rbx
0x5919: pop rbp
0x591a: pop r12
0x591c: pop r13
0x591e: pop r14
0x5920: pop r15
0x5922: ret 
0x5930: mov rcx,rdx
0x5933: xor edx,edx
0x5935: jmp 0x5840
0x5940: mov eax,dword ptr [rip+0x209732]
0x5946: push r12
0x5948: mov r12,qword ptr [rip+0x209731]
0x594f: push rbp
0x5950: push rbx
0x5951: cmp eax,0x1
0x5954: jle 0x5981
0x5956: sub eax,0x2
0x5959: lea rbx,[r12+0x18]
0x595e: shl rax,0x4
0x5962: lea rbp,[r12+rax+0x28]
0x5967: nop word ptr [rax+rax]
0x5970: mov rdi,qword ptr [rbx]
0x5973: add rbx,0x10
0x5977: call 0x1da0
0x597c: cmp rbx,rbp
0x597f: jne 0x5970
0x5981: mov rdi,qword ptr [r12+0x8]
0x5986: lea rbx,[rip+0x209793]
0x598d: cmp rdi,rbx
0x5990: je 0x59a9
0x5992: call 0x1da0
0x5997: mov qword ptr [rip+0x2096ee],0x100
0x59a2: mov qword ptr [rip+0x2096ef],rbx
0x59a9: lea rbx,[rip+0x2096e0]
0x59b0: cmp r12,rbx
0x59b3: je 0x59c4
0x59b5: mov rdi,r12
0x59b8: call 0x1da0
0x59bd: mov qword ptr [rip+0x2096bc],rbx
0x59c4: pop rbx
0x59c5: mov dword ptr [rip+0x2096a9],0x1
0x59cf: pop rbp
0x59d0: pop r12
0x59d2: ret 
0x59e0: lea rcx,[rip+0x209839]
0x59e7: mov rdx,-0x1
0x59ee: jmp 0x5500
0x5a00: lea rcx,[rip+0x209819]
0x5a07: jmp 0x5500
0x5a10: lea rcx,[rip+0x209809]
0x5a17: mov rsi,rdi
0x5a1a: mov rdx,-0x1
0x5a21: xor edi,edi
0x5a23: jmp 0x5500
0x5a30: lea rcx,[rip+0x2097e9]
0x5a37: mov rdx,rsi
0x5a3a: mov rsi,rdi
0x5a3d: xor edi,edi
0x5a3f: jmp 0x5500
0x5abf: mov rcx,qword ptr [rsp+0x38]
0x5ac4: xor rcx,qword ptr fs:0x28
0x5acd: jne 0x5ad9
0x5acf: add rsp,0x48
0x5ad3: ret 
0x5ad4: call 0x1990
0x5ad9: call 0x1ab0
0x5ade: nop 
0x5ae0: sub rsp,0x48
0x5ae4: mov rax,rdx
0x5ae7: mov rdx,rcx
0x5aea: mov rcx,qword ptr fs:0x28
0x5af3: mov qword ptr [rsp+0x38],rcx
0x5af8: xor ecx,ecx
0x5afa: cmp esi,0xa
0x5afd: je 0x5b60
0x5aff: mov dword ptr [rsp],esi
0x5b02: mov rcx,rsp
0x5b05: mov rsi,rax
0x5b08: mov qword ptr [rsp+0x4],0x0
0x5b11: mov qword ptr [rsp+0xc],0x0
0x5b1a: mov qword ptr [rsp+0x14],0x0
0x5b23: mov qword ptr [rsp+0x1c],0x0
0x5b2c: mov qword ptr [rsp+0x24],0x0
0x5b35: mov qword ptr [rsp+0x2c],0x0
0x5b3e: mov dword ptr [rsp+0x34],0x0
0x5b46: call 0x5500
0x5b4b: mov rdx,qword ptr [rsp+0x38]
0x5b50: xor rdx,qword ptr fs:0x28
0x5b59: jne 0x5b65
0x5b5b: add rsp,0x48
0x5b5f: ret 
0x5b60: call 0x1990
0x5b65: call 0x1ab0
0x5b6a: nop word ptr [rax+rax]
0x5b80: mov rcx,rdx
0x5b83: mov rdx,rsi
0x5b86: mov esi,edi
0x5b88: xor edi,edi
0x5b8a: jmp 0x5ae0
0x5b90: sub rsp,0x48
0x5b94: mov ecx,edx
0x5b96: mov rax,qword ptr fs:0x28
0x5b9f: mov qword ptr [rsp+0x38],rax
0x5ba4: xor eax,eax
0x5ba6: mov rax,qword ptr [rip+0x2096a3]
0x5bad: mov r8,rsp
0x5bb0: and ecx,0x1f
0x5bb3: movdqa xmm0,[rip+0x209665]
0x5bbb: mov qword ptr [rsp+0x30],rax
0x5bc0: mov eax,edx
0x5bc2: movaps [rsp],xmm0
0x5bc6: shr al,0x5
0x5bc9: movzx eax,al
0x5bcc: lea r9,[r8+rax*4+0x8]
0x5bd1: movdqa xmm0,[rip+0x209657]
0x5bd9: movaps [rsp+0x10],xmm0
0x5bde: movdqa xmm0,[rip+0x20965a]
0x5be6: movaps [rsp+0x20],xmm0
0x5beb: mov edx,dword ptr [r9]
0x5bee: mov eax,edx
0x5bf0: shr eax,cl
0x5bf2: not eax
0x5bf4: and eax,0x1
0x5bf7: shl eax,cl
0x5bf9: mov rcx,r8
0x5bfc: xor eax,edx
0x5bfe: mov rdx,rsi
0x5c01: mov rsi,rdi
0x5c04: mov dword ptr [r9],eax
0x5c07: xor edi,edi
0x5c09: call 0x5500
0x5c0e: mov rsi,qword ptr [rsp+0x38]
0x5c13: xor rsi,qword ptr fs:0x28
0x5c1c: jne 0x5c23
0x5c1e: add rsp,0x48
0x5c22: ret 
0x5c23: call 0x1ab0
0x5c28: nop dword ptr [rax+rax]
0x5c30: movsx edx,sil
0x5c34: mov rsi,-0x1
0x5c3b: jmp 0x5b90
0x5c40: mov edx,0x3a
0x5c45: mov rsi,-0x1
0x5c4c: jmp 0x5b90
0x5c60: mov edx,0x3a
0x5c65: jmp 0x5b90
0x5cdf: mov rcx,qword ptr [rsp+0x38]
0x5ce4: xor rcx,qword ptr fs:0x28
0x5ced: jne 0x5cf9
0x5cef: add rsp,0x48
0x5cf3: ret 
0x5cf4: call 0x1990
0x5cf9: call 0x1ab0
0x5cfe: nop 
0x5d00: sub rsp,0x48
0x5d04: mov r9,rcx
0x5d07: mov rcx,qword ptr [rip+0x209542]
0x5d0e: movdqa xmm0,[rip+0x20950a]
0x5d16: mov rax,qword ptr fs:0x28
0x5d1f: mov qword ptr [rsp+0x38],rax
0x5d24: xor eax,eax
0x5d26: movaps [rsp],xmm0
0x5d2a: test rsi,rsi
0x5d2d: mov qword ptr [rsp+0x30],rcx
0x5d32: mov dword ptr [rsp],0xa
0x5d39: movdqa xmm0,[rip+0x2094ef]
0x5d41: movaps [rsp+0x10],xmm0
0x5d46: movdqa xmm0,[rip+0x2094f2]
0x5d4e: movaps [rsp+0x20],xmm0
0x5d53: je 0x5d87
0x5d55: test rdx,rdx
0x5d58: je 0x5d87
0x5d5a: mov qword ptr [rsp+0x28],rsi
0x5d5f: mov qword ptr [rsp+0x30],rdx
0x5d64: mov rcx,rsp
0x5d67: mov rdx,r8
0x5d6a: mov rsi,r9
0x5d6d: call 0x5500
0x5d72: mov rdi,qword ptr [rsp+0x38]
0x5d77: xor rdi,qword ptr fs:0x28
0x5d80: jne 0x5d8c
0x5d82: add rsp,0x48
0x5d86: ret 
0x5d87: call 0x1990
0x5d8c: call 0x1ab0
0x5d91: nop dword ptr [rax+rax]
0x5d96: nop word ptr cs:[rax+rax]
0x5da0: mov r8,-0x1
0x5da7: jmp 0x5d00
0x5db0: mov rcx,rdx
0x5db3: mov r8,-0x1
0x5dba: mov rdx,rsi
0x5dbd: mov rsi,rdi
0x5dc0: xor edi,edi
0x5dc2: jmp 0x5d00
0x5dd0: mov r8,rcx
0x5dd3: mov rcx,rdx
0x5dd6: mov rdx,rsi
0x5dd9: mov rsi,rdi
0x5ddc: xor edi,edi
0x5dde: jmp 0x5d00
0x5df0: lea rcx,[rip+0x209249]
0x5df7: jmp 0x5500
0x5e00: lea rcx,[rip+0x209239]
0x5e07: mov rdx,rsi
0x5e0a: mov rsi,rdi
0x5e0d: xor edi,edi
0x5e0f: jmp 0x5500
0x5e40: lea rcx,[rip+0x2091f9]
0x5e47: mov rsi,rdi
0x5e4a: mov rdx,-0x1
0x5e51: xor edi,edi
0x5e53: jmp 0x5500
0x5ecc: call 0x1ab0
0x5ed1: nop word ptr cs:[rax+rax]
0x5edb: nop dword ptr [rax+rax]
0x6018: mov r8,rcx
0x601b: mov rcx,rdx
0x601e: lea rdx,[rip+0x5e2f]
0x6025: mov esi,0x1
0x602a: xor eax,eax
0x602c: call 0x1d60
0x6031: jmp 0x5f1c
0x622d: push r12
0x622f: push r15
0x6231: push r14
0x6233: mov r8,qword ptr [rsp+0x20]
0x6238: mov rcx,rbx
0x623b: mov rdx,rax
0x623e: mov rdi,rbp
0x6241: mov esi,0x1
0x6246: xor eax,eax
0x6248: call 0x1d60
0x624d: add rsp,0x20
0x6251: add rsp,0x28
0x6255: pop rbx
0x6256: pop rbp
0x6257: pop r12
0x6259: pop r13
0x625b: pop r14
0x625d: pop r15
0x625f: ret 
0x6299: push r12
0x629b: push r15
0x629d: push r14
0x629f: mov r9,qword ptr [rsp+0x28]
0x62a4: jmp 0x6233
0x6300: xor r9d,r9d
0x6303: cmp qword ptr [r8],0x0
0x6307: je 0x631b
0x6309: nop dword ptr [rax]
0x6310: add r9,0x1
0x6314: cmp qword ptr [r8+r9*8],0x0
0x6319: jne 0x6310
0x631b: jmp 0x5ee0
0x6320: sub rsp,0x68
0x6324: mov r10,r8
0x6327: xor r9d,r9d
0x632a: mov rax,qword ptr fs:0x28
0x6333: mov qword ptr [rsp+0x58],rax
0x6338: xor eax,eax
0x633a: mov r8,rsp
0x633d: nop dword ptr [rax]
0x6340: mov eax,dword ptr [r10]
0x6343: cmp eax,0x2f
0x6346: ja 0x638a
0x6348: mov r11d,eax
0x634b: add r11,qword ptr [r10+0x10]
0x634f: add eax,0x8
0x6352: mov dword ptr [r10],eax
0x6355: mov rax,qword ptr [r11]
0x6358: test rax,rax
0x635b: mov qword ptr [r8+r9*8],rax
0x635f: je 0x636b
0x6361: add r9,0x1
0x6365: cmp r9,0xa
0x6369: jne 0x6340
0x636b: call 0x5ee0
0x6370: mov rax,qword ptr [rsp+0x58]
0x6375: xor rax,qword ptr fs:0x28
0x637e: jne 0x6385
0x6380: add rsp,0x68
0x6384: ret 
0x6385: call 0x1ab0
0x638a: mov r11,qword ptr [r10+0x8]
0x638e: lea rax,[r11+0x8]
0x6392: mov qword ptr [r10+0x8],rax
0x6396: jmp 0x6355
0x6460: call 0x1ab0
0x646c: mov rax,rbx
0x646f: add rbx,0x8
0x6473: jmp 0x6426
0x6480: push rbx
0x6481: lea rsi,[rip+0x5a1a]
0x6488: mov edx,0x5
0x648d: xor edi,edi
0x648f: call 0x1a60
0x6494: lea rdx,[rip+0x503b]
0x649b: mov rsi,rax
0x649e: mov edi,0x1
0x64a3: xor eax,eax
0x64a5: call 0x1ca0
0x64aa: lea rsi,[rip+0x5a06]
0x64b1: mov edx,0x5
0x64b6: xor edi,edi
0x64b8: call 0x1a60
0x64bd: lea rcx,[rip+0x4dcc]
0x64c4: lea rdx,[rip+0x44d2]
0x64cb: mov rsi,rax
0x64ce: mov edi,0x1
0x64d3: xor eax,eax
0x64d5: call 0x1ca0
0x64da: mov rbx,qword ptr [rip+0x208bc7]
0x64e1: lea rsi,[rip+0x5c00]
0x64e8: xor edi,edi
0x64ea: mov edx,0x5
0x64ef: call 0x1a60
0x64f4: mov rsi,rbx
0x64f7: mov rdi,rax
0x64fa: pop rbx
0x64fb: jmp 0x1b80
0x6500: cmp byte ptr [rip+0x208d52],0x0
0x6507: je 0x6518
0x6509: movzx eax,byte ptr [rip+0x208d48]
0x6510: ret 
0x6518: sub rsp,0x8
0x651c: call 0x1b40
0x6521: test eax,eax
0x6523: mov byte ptr [rip+0x208d2f],0x1
0x652a: sete al
0x652d: mov byte ptr [rip+0x208d25],al
0x6533: add rsp,0x8
0x6537: ret 
0x6540: push rbx
0x6541: mov rbx,rdi
0x6544: call 0x1c20
0x6549: test rax,rax
0x654c: jne 0x6553
0x654e: test rbx,rbx
0x6551: jne 0x6555
0x6553: pop rbx
0x6554: ret 
0x6555: call 0x6790
0x655a: nop word ptr [rax+rax]
0x6560: mov rax,rdi
0x6563: mul rsi
0x6566: mov rdi,rax
0x6569: seto al
0x656c: test rdi,rdi
0x656f: js 0x657b
0x6571: movzx eax,al
0x6574: test rax,rax
0x6577: jne 0x657b
0x6579: jmp 0x6540
0x657b: sub rsp,0x8
0x657f: call 0x6790
0x6584: nop 
0x6586: nop word ptr cs:[rax+rax]
0x6590: jmp 0x6540
0x65d6: nop word ptr cs:[rax+rax]
0x65e0: mov rax,rsi
0x65e3: mul rdx
0x65e6: mov rsi,rax
0x65e9: seto al
0x65ec: test rsi,rsi
0x65ef: js 0x65fb
0x65f1: movzx eax,al
0x65f4: test rax,rax
0x65f7: jne 0x65fb
0x65f9: jmp 0x65a0
0x65fb: sub rsp,0x8
0x65ff: call 0x6790
0x6604: nop 
0x6606: nop word ptr cs:[rax+rax]
0x6610: test rdi,rdi
0x6613: mov r9,rdx
0x6616: mov rcx,qword ptr [rsi]
0x6619: je 0x6650
0x661b: xor edx,edx
0x661d: movabsq rax,0x5555555555555554
0x6627: div r9
0x662a: cmp rax,rcx
0x662d: jbe 0x666b
0x662f: mov rax,rcx
0x6632: shr rax, 1
0x6635: lea rcx,[rax+rcx+0x1]
0x663a: mov qword ptr [rsi],rcx
0x663d: imul rcx,r9
0x6641: mov rsi,rcx
0x6644: jmp 0x65a0
0x6650: test rcx,rcx
0x6653: je 0x6678
0x6655: mov rax,rcx
0x6658: mul r9
0x665b: seto dl
0x665e: test rax,rax
0x6661: movzx edx,dl
0x6664: js 0x666b
0x6666: test rdx,rdx
0x6669: je 0x663a
0x666b: sub rsp,0x8
0x666f: call 0x6790
0x6674: nop dword ptr [rax]
0x6678: xor edx,edx
0x667a: mov eax,0x80
0x667f: xor r8d,r8d
0x6682: div r9
0x6685: test rax,rax
0x6688: sete r8b
0x668c: lea rcx,[r8+rax]
0x6690: jmp 0x6655
0x66a0: test rdi,rdi
0x66a3: mov rax,qword ptr [rsi]
0x66a6: je 0x66d0
0x66a8: movabsq rdx,0x5555555555555553
0x66b2: cmp rax,rdx
0x66b5: ja 0x66e1
0x66b7: mov rdx,rax
0x66ba: shr rdx, 1
0x66bd: lea rax,[rdx+rax+0x1]
0x66c2: mov qword ptr [rsi],rax
0x66c5: mov rsi,rax
0x66c8: jmp 0x65a0
0x66d0: test rax,rax
0x66d3: mov edx,0x80
0x66d8: cmove rax,rdx
0x66dc: test rax,rax
0x66df: jns 0x66c2
0x66e1: sub rsp,0x8
0x66e5: call 0x6790
0x66ea: nop word ptr [rax+rax]
0x66f0: push rbx
0x66f1: mov rbx,rdi
0x66f4: call 0x6540
0x66f9: mov rdx,rbx
0x66fc: xor esi,esi
0x66fe: mov rdi,rax
0x6701: pop rbx
0x6702: jmp 0x1b30
0x6710: mov rax,rdi
0x6713: sub rsp,0x8
0x6717: mul rsi
0x671a: seto dl
0x671d: test rax,rax
0x6720: js 0x6739
0x6722: movzx edx,dl
0x6725: test rdx,rdx
0x6728: jne 0x6739
0x672a: call 0x1b90
0x672f: test rax,rax
0x6732: je 0x6739
0x6734: add rsp,0x8
0x6738: ret 
0x6739: call 0x6790
0x673e: nop 
0x6740: push rbp
0x6741: push rbx
0x6742: mov rbp,rdi
0x6745: mov rdi,rsi
0x6748: mov rbx,rsi
0x674b: sub rsp,0x8
0x674f: call 0x6540
0x6754: add rsp,0x8
0x6758: mov rdx,rbx
0x675b: mov rsi,rbp
0x675e: pop rbx
0x675f: pop rbp
0x6760: mov rdi,rax
0x6763: jmp 0x1be0
0x6770: push rbx
0x6771: mov rbx,rdi
0x6774: call 0x1a80
0x6779: mov rdi,rbx
0x677c: lea rsi,[rax+0x1]
0x6780: pop rbx
0x6781: jmp 0x6740
0x67c0: call 0x1990
0x67c5: nop word ptr cs:[rax+rax]
0x67cf: nop 
0x67ff: nop 
0x681f: nop 
0x6820: mov edx,dword ptr [rdi+0x48]
0x6823: mov eax,0x1
0x6828: and edx,0x11
0x682b: cmp edx,0x10
0x682e: je 0x6837
0x6830: xor eax,eax
0x6832: cmp edx,0x11
0x6835: je 0x6840
0x6837: rep ret 
0x6840: cmp qword ptr [rsi+0x58],0x0
0x6845: setne al
0x6848: ret 
0x68e2: call 0x1ab0
0x68e7: nop word ptr [rax+rax]
0x68f0: test rdi,rdi
0x68f3: push rbx
0x68f4: mov rbx,rdi
0x68f7: je 0x690a
0x68f9: call 0x1c60
0x68fe: test eax,eax
0x6900: je 0x690a
0x6902: test dword ptr [rbx],0x100
0x6908: jne 0x6918
0x690a: mov rdi,rbx
0x690d: pop rbx
0x690e: jmp 0x1c30
0x6918: mov rdi,rbx
0x691b: mov edx,0x1
0x6920: xor esi,esi
0x6922: call 0x6960
0x6927: mov rdi,rbx
0x692a: pop rbx
0x692b: jmp 0x1c30
0x6930: xor eax,eax
0x6932: mov rcx,qword ptr [rdi+0x20]
0x6936: cmp qword ptr [rdi+0x28],rcx
0x693a: ja 0x6957
0x693c: mov rax,qword ptr [rdi+0x10]
0x6940: sub rax,qword ptr [rdi+0x8]
0x6944: test dword ptr [rdi],0x100
0x694a: je 0x6957
0x694c: mov rdx,qword ptr [rdi+0x58]
0x6950: sub rdx,qword ptr [rdi+0x48]
0x6954: add rax,rdx
0x6957: rep ret 
0x6960: mov rax,qword ptr [rdi+0x8]
0x6964: cmp qword ptr [rdi+0x10],rax
0x6968: je 0x6970
0x696a: jmp 0x1cf0
0x6970: mov rax,qword ptr [rdi+0x20]
0x6974: cmp qword ptr [rdi+0x28],rax
0x6978: jne 0x696a
0x697a: cmp qword ptr [rdi+0x48],0x0
0x697f: jne 0x696a
0x6981: push r12
0x6983: push rbp
0x6984: mov r12d,edx
0x6987: push rbx
0x6988: mov rbp,rsi
0x698b: mov rbx,rdi
0x698e: call 0x1bf0
0x6993: mov edx,r12d
0x6996: mov rsi,rbp
0x6999: mov edi,eax
0x699b: call 0x1b10
0x69a0: cmp rax,-0x1
0x69a4: je 0x69b2
0x69a6: and dword ptr [rbx],-0x11
0x69a9: mov qword ptr [rbx+0x90],rax
0x69b0: xor eax,eax
0x69b2: pop rbx
0x69b3: pop rbp
0x69b4: pop r12
0x69b6: ret 
0x69c0: xor eax,eax
0x69c2: mov rdx,qword ptr [rsi+0x8]
0x69c6: cmp qword ptr [rdi+0x8],rdx
0x69ca: je 0x69d0
0x69cc: rep ret 
0x69d0: mov rax,qword ptr [rsi]
0x69d3: cmp qword ptr [rdi],rax
0x69d6: sete al
0x69d9: ret 
0x69e0: mov rax,qword ptr [rdi+0x8]
0x69e4: xor edx,edx
0x69e6: div rsi
0x69e9: mov rax,rdx
0x69ec: ret 
0x6a10: mov rdx,qword ptr [rdi]
0x6a13: mov rax,qword ptr [rsi]
0x6a16: mov rax,qword ptr [rax+0x80]
0x6a1d: cmp qword ptr [rdx+0x80],rax
0x6a24: jb 0x6a30
0x6a26: seta al
0x6a29: movzx eax,al
0x6a2c: ret 
0x6a30: mov eax,0xffffffff
0x6a35: ret 
0x6f62: call 0x1ab0
0x6f6c: nop dword ptr [rax]
0x7046: nop word ptr cs:[rax+rax]
0x7425: call 0x1ab0
0x75ae: call 0x1ab0
0x75b8: nop dword ptr [rax+rax]
0x7703: test ah,0x4
0x7706: je 0x7a08
0x793e: sub rdx,qword ptr [rax+0x38]
0x7942: add rdx,rcx
0x7945: mov qword ptr [rax+0x30],rdx
0x7960: mov rax,qword ptr [r13+0x38]
0x7964: mov rdi,qword ptr [rsp+0x40]
0x7969: mov qword ptr [r13+0x30],rax
0x796d: mov rax,qword ptr [r13+0x60]
0x7971: lea rdx,[rax+0x1]
0x7975: call 0x1cc0
0x797a: mov eax,dword ptr [r15+0x48]
0x797e: jmp 0x76fc
0x7a08: xor edx,edx
0x7a0a: mov rsi,r13
0x7a0d: mov rdi,r15
0x7a10: call 0x6a40
0x7a15: mov word ptr [r13+0x70],ax
0x7a1a: jmp 0x7751
0x7c7d: mov rax,qword ptr [rsp+0x18]
0x7c82: cmp qword ptr [r15+0x30],rax
0x7c86: je 0x7c8d
0x7c88: test rbx,rbx
0x7c8b: jne 0x7c93
0x7c8d: sub qword ptr [rsp+0x40],0x1
0x7c93: mov rax,qword ptr [rsp+0x40]
0x7c98: mov byte ptr [rax],0x0
0x7ccc: cmp rbx,0x1
0x7cd0: je 0x7b85
0x7cd6: mov rsi,qword ptr [rsp+0x10]
0x7cdb: mov rdx,rbx
0x7cde: mov rdi,r15
0x7ce1: call 0x6c10
0x7ce6: mov qword ptr [rsp+0x10],rax
0x7ceb: jmp 0x7b85
0x7d4d: test rbx,rbx
0x7d50: mov dword ptr [rbp+0x40],eax
0x7d53: jne 0x7e89
0x7d59: cmp qword ptr [rsp+0x50],0x0
0x7d5f: mov eax,0x4
0x7d64: jne 0x7e89
0x7d6a: mov word ptr [rbp+0x70],ax
0x7e89: mov eax,0x7
0x7e8e: jmp 0x7d6a
0x7f71: call 0x1ab0
0x80b0: mov eax,dword ptr [rbx+0x48]
0x80b3: shr eax,0xa
0x80b6: and eax,0x1
0x80b9: mov byte ptr [rsp+0x16],al
0x81b5: cmp rbp,0x1
0x81b9: jbe 0x81cc
0x81bb: mov rsi,r12
0x81be: mov rdx,rbp
0x81c1: mov rdi,rbx
0x81c4: call 0x6c10
0x81c9: mov r12,rax
0x821d: mov edi,dword ptr [rbx+0x2c]
0x8220: lea rdx,[rip+0x3298]
0x8227: call 0x7190
0x822c: test eax,eax
0x822e: mov dword ptr [rbx+0x28],eax
0x8231: jns 0x8240
0x8233: or dword ptr [rbx+0x48],0x4
0x8237: nop word ptr [rax+rax]
0x8260: mov rdi,qword ptr [r13]
0x8264: mov eax,ebp
0x8266: mov dword ptr [rbx+0x2c],0xffffff9c
0x826d: and ah,-0x3
0x8270: or eax,0x4
0x8273: test rdi,rdi
0x8276: mov dword ptr [rbx+0x48],eax
0x8279: jne 0x801e
0x8338: call 0x19a0
0x833d: xor ebx,ebx
0x833f: mov dword ptr [rax],0x16
0x8345: jmp 0x824e
0x86d4: nop dword ptr [rax]
0x8c60: cmp edx,0x4
0x8c63: ja 0x8c70
0x8c65: mov word ptr [rsi+0x74],dx
0x8c69: xor eax,eax
0x8c6b: ret 
0x8c70: sub rsp,0x8
0x8c74: call 0x19a0
0x8c79: mov dword ptr [rax],0x16
0x8c7f: mov eax,0x1
0x8c84: add rsp,0x8
0x8c88: ret 
0x8c90: push r14
0x8c92: push r13
0x8c94: push r12
0x8c96: push rbp
0x8c97: mov r12d,esi
0x8c9a: push rbx
0x8c9b: mov rbx,rdi
0x8c9e: call 0x19a0
0x8ca3: test r12d,0xffffefff
0x8caa: mov r13,rax
0x8cad: jne 0x8d98
0x8cb3: mov rbp,qword ptr [rbx]
0x8cb6: mov dword ptr [rax],0x0
0x8cbc: test byte ptr [rbx+0x49],0x20
0x8cc0: jne 0x8d40
0x8cc2: movzx eax,word ptr [rbp+0x70]
0x8cc6: cmp ax,0x9
0x8cca: je 0x8d30
0x8ccc: cmp ax,0x1
0x8cd0: jne 0x8d40
0x8cd2: mov rdi,qword ptr [rbx+0x8]
0x8cd6: test rdi,rdi
0x8cd9: je 0x8ce0
0x8cdb: call 0x6db0
0x8ce0: cmp r12d,0x1000
0x8ce7: mov r14d,0x1
0x8ced: jne 0x8cfc
0x8cef: or dword ptr [rbx+0x48],0x1000
0x8cf6: mov r14d,0x2
0x8cfc: cmp qword ptr [rbp+0x58],0x0
0x8d01: jne 0x8d15
0x8d03: mov rax,qword ptr [rbp+0x30]
0x8d07: cmp byte ptr [rax],0x2f
0x8d0a: je 0x8d15
0x8d0c: mov esi,dword ptr [rbx+0x48]
0x8d0f: test sil,0x4
0x8d13: je 0x8d50
0x8d15: mov esi,r14d
0x8d18: mov rdi,rbx
0x8d1b: call 0x75c0
0x8d20: mov qword ptr [rbx+0x8],rax
0x8d24: pop rbx
0x8d25: pop rbp
0x8d26: pop r12
0x8d28: pop r13
0x8d2a: pop r14
0x8d2c: ret 
0x8d30: pop rbx
0x8d31: mov rax,qword ptr [rbp+0x10]
0x8d35: pop rbp
0x8d36: pop r12
0x8d38: pop r13
0x8d3a: pop r14
0x8d3c: ret 
0x8d40: pop rbx
0x8d41: xor eax,eax
0x8d43: pop rbp
0x8d44: pop r12
0x8d46: pop r13
0x8d48: pop r14
0x8d4a: ret 
0x8d50: mov edi,dword ptr [rbx+0x2c]
0x8d53: lea rdx,[rip+0x2765]
0x8d5a: call 0x7190
0x8d5f: test eax,eax
0x8d61: mov ebp,eax
0x8d63: js 0x8db9
0x8d65: mov esi,r14d
0x8d68: mov rdi,rbx
0x8d6b: call 0x75c0
0x8d70: test byte ptr [rbx+0x49],0x2
0x8d74: mov qword ptr [rbx+0x8],rax
0x8d78: jne 0x8da8
0x8d7a: mov edi,ebp
0x8d7c: call 0x1c70
0x8d81: test eax,eax
0x8d83: jne 0x8dc8
0x8d85: mov edi,ebp
0x8d87: call 0x1b50
0x8d8c: mov rax,qword ptr [rbx+0x8]
0x8d90: jmp 0x8d24
0x8d98: mov dword ptr [rax],0x16
0x8d9e: xor eax,eax
0x8da0: jmp 0x8d24
0x8da8: mov edx,0x1
0x8dad: mov esi,ebp
0x8daf: mov rdi,rbx
0x8db2: call 0x6fe0
0x8db7: jmp 0x8d8c
0x8db9: mov qword ptr [rbx+0x8],0x0
0x8dc1: xor eax,eax
0x8dc3: jmp 0x8d24
0x8dc8: mov ebx,dword ptr [r13]
0x8dcc: mov edi,ebp
0x8dce: call 0x1b50
0x8dd3: xor eax,eax
0x8dd5: mov dword ptr [r13],ebx
0x8dd9: jmp 0x8d24
0x8de0: push r13
0x8de2: push r12
0x8de4: mov r13,rsi
0x8de7: push rbp
0x8de8: push rbx
0x8de9: mov rbx,rdi
0x8dec: mov r12,rdx
0x8def: sub rsp,0x18
0x8df3: mov rax,qword ptr fs:0x28
0x8dfc: mov qword ptr [rsp+0x8],rax
0x8e01: xor eax,eax
0x8e03: lea rax,[rsp+0x4]
0x8e08: test rdi,rdi
0x8e0b: cmove rbx,rax
0x8e0f: mov rdi,rbx
0x8e12: call 0x1ad0
0x8e17: cmp rax,-0x3
0x8e1b: mov rbp,rax
0x8e1e: jbe 0x8e40
0x8e20: test r12,r12
0x8e23: je 0x8e40
0x8e25: xor edi,edi
0x8e27: call 0x9000
0x8e2c: test al,al
0x8e2e: jne 0x8e40
0x8e30: movzx eax,byte ptr [r13]
0x8e35: mov ebp,0x1
0x8e3a: mov dword ptr [rbx],eax
0x8e3c: nop dword ptr [rax]
0x8e40: mov rdx,qword ptr [rsp+0x8]
0x8e45: xor rdx,qword ptr fs:0x28
0x8e4e: mov rax,rbp
0x8e51: jne 0x8e5e
0x8e53: add rsp,0x18
0x8e57: pop rbx
0x8e58: pop rbp
0x8e59: pop r12
0x8e5b: pop r13
0x8e5d: ret 
0x8e5e: call 0x1ab0
0x8e63: nop word ptr cs:[rax+rax]
0x8e6d: nop dword ptr [rax]
0x8e70: push r12
0x8e72: push rbp
0x8e73: mov rbp,rdi
0x8e76: push rbx
0x8e77: call 0x19d0
0x8e7c: mov ebx,dword ptr [rbp]
0x8e7f: mov rdi,rbp
0x8e82: mov r12,rax
0x8e85: call 0xa560
0x8e8a: and ebx,0x20
0x8e8d: test ebx,ebx
0x8e8f: jne 0x8ea8
0x8e91: test eax,eax
0x8e93: je 0x8e9f
0x8e95: test r12,r12
0x8e98: mov eax,0xffffffff
0x8e9d: je 0x8ed8
0x8e9f: pop rbx
0x8ea0: pop rbp
0x8ea1: pop r12
0x8ea3: ret 
0x8ea8: test eax,eax
0x8eaa: jne 0x8ec8
0x8eac: call 0x19a0
0x8eb1: mov dword ptr [rax],0x0
0x8eb7: mov eax,0xffffffff
0x8ebc: pop rbx
0x8ebd: pop rbp
0x8ebe: pop r12
0x8ec0: ret 
0x8ec8: pop rbx
0x8ec9: mov eax,0xffffffff
0x8ece: pop rbp
0x8ecf: pop r12
0x8ed1: ret 
0x8ed8: call 0x19a0
0x8edd: cmp dword ptr [rax],0x9
0x8ee0: pop rbx
0x8ee1: pop rbp
0x8ee2: pop r12
0x8ee4: setne al
0x8ee7: movzx eax,al
0x8eea: neg eax
0x8eec: ret 
0x8f8a: nop word ptr [rax+rax]
0x8fd8: lea rax,[rsp+0x60]
0x8fdd: mov dword ptr [rsp],0x10
0x8fe4: mov edx,dword ptr [rsp+0x30]
0x8fe8: mov qword ptr [rsp+0x8],rax
0x8fed: lea rax,[rsp+0x20]
0x8ff2: mov qword ptr [rsp+0x10],rax
0x8ff7: jmp 0x8fb1
0x8ff9: call 0x1ab0
0x8ffe: nop 
0x9000: sub rsp,0x8
0x9004: xor esi,esi
0x9006: call 0x1c90
0x900b: mov rdx,rax
0x900e: mov eax,0x1
0x9013: test rdx,rdx
0x9016: je 0x9035
0x9018: lea rdi,[rip+0x323d]
0x901f: mov ecx,0x2
0x9024: mov rsi,rdx
0x9027: rep cmpsb [rsi],es:[rdi]
0x9029: seta cl
0x902c: sbb cl,0x0
0x902f: xor eax,eax
0x9031: test cl,cl
0x9033: jne 0x9040
0x9035: add rsp,0x8
0x9039: ret 
0x9040: lea rdi,[rip+0x3217]
0x9047: mov ecx,0x6
0x904c: mov rsi,rdx
0x904f: rep cmpsb [rsi],es:[rdi]
0x9051: seta al
0x9054: sbb al,0x0
0x9056: test al,al
0x9058: setne al
0x905b: add rsp,0x8
0x905f: ret 
0x9100: mov rax,rdi
0x9103: xor edx,edx
0x9105: ror rax,0x3
0x9109: div rsi
0x910c: mov rax,rdx
0x910f: ret 
0x9110: cmp rdi,rsi
0x9113: sete al
0x9116: ret 
0x9142: nop dword ptr [rax]
0x9146: nop word ptr cs:[rax+rax]
0x9430: mov rax,qword ptr [rdi+0x10]
0x9434: ret 
0x9440: mov rax,qword ptr [rdi+0x18]
0x9444: ret 
0x9450: mov rax,qword ptr [rdi+0x20]
0x9454: ret 
0x9460: mov rsi,qword ptr [rdi]
0x9463: mov rdi,qword ptr [rdi+0x8]
0x9467: xor eax,eax
0x9469: cmp rsi,rdi
0x946c: jae 0x94a7
0x946e: nop 
0x9470: cmp qword ptr [rsi],0x0
0x9474: je 0x949c
0x9476: mov rdx,qword ptr [rsi+0x8]
0x947a: mov ecx,0x1
0x947f: test rdx,rdx
0x9482: je 0x9495
0x9484: nop dword ptr [rax]
0x9488: mov rdx,qword ptr [rdx+0x8]
0x948c: add rcx,0x1
0x9490: test rdx,rdx
0x9493: jne 0x9488
0x9495: cmp rax,rcx
0x9498: cmovb rax,rcx
0x949c: add rsi,0x10
0x94a0: cmp rsi,rdi
0x94a3: jb 0x9470
0x94a5: rep ret 
0x94a7: rep ret 
0x94b0: mov rcx,qword ptr [rdi]
0x94b3: mov r8,qword ptr [rdi+0x8]
0x94b7: xor edx,edx
0x94b9: xor esi,esi
0x94bb: cmp rcx,r8
0x94be: jae 0x94f6
0x94c0: cmp qword ptr [rcx],0x0
0x94c4: je 0x94ed
0x94c6: mov rax,qword ptr [rcx+0x8]
0x94ca: add rsi,0x1
0x94ce: add rdx,0x1
0x94d2: test rax,rax
0x94d5: je 0x94ed
0x94d7: nop word ptr [rax+rax]
0x94e0: mov rax,qword ptr [rax+0x8]
0x94e4: add rdx,0x1
0x94e8: test rax,rax
0x94eb: jne 0x94e0
0x94ed: add rcx,0x10
0x94f1: cmp rcx,r8
0x94f4: jb 0x94c0
0x94f6: xor eax,eax
0x94f8: cmp qword ptr [rdi+0x18],rsi
0x94fc: je 0x9500
0x94fe: rep ret 
0x9500: cmp qword ptr [rdi+0x20],rdx
0x9504: sete al
0x9507: ret 
0x9510: push r13
0x9512: push r12
0x9514: mov r12,rsi
0x9517: push rbp
0x9518: push rbx
0x9519: xor ebx,ebx
0x951b: sub rsp,0x8
0x951f: mov rsi,qword ptr [rdi]
0x9522: mov rcx,qword ptr [rdi+0x20]
0x9526: mov rbp,qword ptr [rdi+0x10]
0x952a: mov r13,qword ptr [rdi+0x18]
0x952e: mov rdi,qword ptr [rdi+0x8]
0x9532: cmp rsi,rdi
0x9535: jae 0x9575
0x9537: nop word ptr [rax+rax]
0x9540: cmp qword ptr [rsi],0x0
0x9544: je 0x956c
0x9546: mov rax,qword ptr [rsi+0x8]
0x954a: mov edx,0x1
0x954f: test rax,rax
0x9552: je 0x9565
0x9554: nop dword ptr [rax]
0x9558: mov rax,qword ptr [rax+0x8]
0x955c: add rdx,0x1
0x9560: test rax,rax
0x9563: jne 0x9558
0x9565: cmp rbx,rdx
0x9568: cmovb rbx,rdx
0x956c: add rsi,0x10
0x9570: cmp rsi,rdi
0x9573: jb 0x9540
0x9575: lea rdx,[rip+0x2ce8]
0x957c: mov esi,0x1
0x9581: mov rdi,r12
0x9584: xor eax,eax
0x9586: call 0x1d60
0x958b: lea rdx,[rip+0x2cea]
0x9592: xor eax,eax
0x9594: mov rcx,rbp
0x9597: mov esi,0x1
0x959c: mov rdi,r12
0x959f: call 0x1d60
0x95a4: test r13,r13
0x95a7: js 0x9610
0x95a9: pxor xmm0,xmm0
0x95ad: test rbp,rbp
0x95b0: cvtsi2sdq xmm0,r13
0x95b5: mulsd xmm0,[rip+0x2d5b]
0x95bd: js 0x9639
0x95bf: pxor xmm1,xmm1
0x95c3: cvtsi2sdq xmm1,rbp
0x95c8: divsd xmm0,xmm1
0x95cc: lea rdx,[rip+0x2cdd]
0x95d3: mov rcx,r13
0x95d6: mov rdi,r12
0x95d9: mov esi,0x1
0x95de: mov eax,0x1
0x95e3: call 0x1d60
0x95e8: add rsp,0x8
0x95ec: mov rcx,rbx
0x95ef: mov rdi,r12
0x95f2: pop rbx
0x95f3: pop rbp
0x95f4: pop r12
0x95f6: pop r13
0x95f8: lea rdx,[rip+0x2c95]
0x95ff: mov esi,0x1
0x9604: xor eax,eax
0x9606: jmp 0x1d60
0x9610: mov rax,r13
0x9613: mov rdx,r13
0x9616: pxor xmm0,xmm0
0x961a: shr rax, 1
0x961d: and edx,0x1
0x9620: or rax,rdx
0x9623: test rbp,rbp
0x9626: cvtsi2sdq xmm0,rax
0x962b: addsd xmm0,xmm0
0x962f: mulsd xmm0,[rip+0x2ce1]
0x9637: jns 0x95bf
0x9639: mov rax,rbp
0x963c: pxor xmm1,xmm1
0x9640: shr rax, 1
0x9643: and ebp,0x1
0x9646: or rax,rbp
0x9649: cvtsi2sdq xmm1,rax
0x964e: addsd xmm1,xmm1
0x9652: jmp 0x95c8
0x96c0: cmp qword ptr [rdi+0x20],0x0
0x96c5: je 0x96f3
0x96c7: mov rdx,qword ptr [rdi]
0x96ca: mov rcx,qword ptr [rdi+0x8]
0x96ce: cmp rdx,rcx
0x96d1: jae 0x96f8
0x96d3: mov rax,qword ptr [rdx]
0x96d6: test rax,rax
0x96d9: jne 0x96f6
0x96db: nop dword ptr [rax+rax]
0x96e0: add rdx,0x10
0x96e4: cmp rdx,rcx
0x96e7: jae 0x96f8
0x96e9: mov rax,qword ptr [rdx]
0x96ec: test rax,rax
0x96ef: je 0x96e0
0x96f1: rep ret 
0x96f3: xor eax,eax
0x96f5: ret 
0x96f6: rep ret 
0x96f8: sub rsp,0x8
0x96fc: call 0x1990
0x9701: nop dword ptr [rax+rax]
0x9706: nop word ptr cs:[rax+rax]
0x9710: push rbp
0x9711: push rbx
0x9712: mov rbp,rdi
0x9715: mov rbx,rsi
0x9718: sub rsp,0x8
0x971c: call 0x9120
0x9721: mov rdx,rax
0x9724: mov rcx,rax
0x9727: mov rax,qword ptr [rdx]
0x972a: mov rdx,qword ptr [rdx+0x8]
0x972e: cmp rax,rbx
0x9731: je 0x9749
0x9733: nop dword ptr [rax+rax]
0x9738: test rdx,rdx
0x973b: je 0x974e
0x973d: mov rax,qword ptr [rdx]
0x9740: mov rdx,qword ptr [rdx+0x8]
0x9744: cmp rax,rbx
0x9747: jne 0x9738
0x9749: test rdx,rdx
0x974c: jne 0x9778
0x974e: mov rdx,qword ptr [rbp+0x8]
0x9752: jmp 0x9760
0x9758: mov rax,qword ptr [rcx]
0x975b: test rax,rax
0x975e: jne 0x976b
0x9760: add rcx,0x10
0x9764: cmp rdx,rcx
0x9767: ja 0x9758
0x9769: xor eax,eax
0x976b: add rsp,0x8
0x976f: pop rbx
0x9770: pop rbp
0x9771: ret 
0x9778: mov rax,qword ptr [rdx]
0x977b: add rsp,0x8
0x977f: pop rbx
0x9780: pop rbp
0x9781: ret 
0x9790: mov r9,qword ptr [rdi]
0x9793: cmp qword ptr [rdi+0x8],r9
0x9797: jbe 0x97f2
0x9799: xor r8d,r8d
0x979c: mov rcx,qword ptr [r9]
0x979f: test rcx,rcx
0x97a2: je 0x97dd
0x97a4: cmp rdx,r8
0x97a7: jbe 0x97e7
0x97a9: mov qword ptr [rsi+r8*8],rcx
0x97ad: mov rcx,qword ptr [r9+0x8]
0x97b1: lea rax,[r8+0x1]
0x97b5: test rcx,rcx
0x97b8: je 0x97da
0x97ba: nop word ptr [rax+rax]
0x97c0: cmp rdx,rax
0x97c3: je 0x97f0
0x97c5: mov r8,qword ptr [rcx]
0x97c8: add rax,0x1
0x97cc: mov qword ptr [rsi+rax*8-0x8],r8
0x97d1: mov rcx,qword ptr [rcx+0x8]
0x97d5: test rcx,rcx
0x97d8: jne 0x97c0
0x97da: mov r8,rax
0x97dd: add r9,0x10
0x97e1: cmp qword ptr [rdi+0x8],r9
0x97e5: ja 0x979c
0x97e7: mov rax,r8
0x97ea: ret 
0x97f0: rep ret 
0x97f2: xor eax,eax
0x97f4: ret 
0x9800: push r15
0x9802: push r14
0x9804: push r13
0x9806: push r12
0x9808: push rbp
0x9809: push rbx
0x980a: sub rsp,0x8
0x980e: mov r14,qword ptr [rdi]
0x9811: cmp qword ptr [rdi+0x8],r14
0x9815: jbe 0x9866
0x9817: mov r13,rdx
0x981a: mov r12,rsi
0x981d: mov r15,rdi
0x9820: xor ebp,ebp
0x9822: mov rdi,qword ptr [r14]
0x9825: test rdi,rdi
0x9828: je 0x984a
0x982a: mov rbx,r14
0x982d: jmp 0x9833
0x9830: mov rdi,qword ptr [rbx]
0x9833: mov rsi,r13
0x9836: call r12
0x9839: test al,al
0x983b: je 0x9854
0x983d: mov rbx,qword ptr [rbx+0x8]
0x9841: add rbp,0x1
0x9845: test rbx,rbx
0x9848: jne 0x9830
0x984a: add r14,0x10
0x984e: cmp qword ptr [r15+0x8],r14
0x9852: ja 0x9822
0x9854: add rsp,0x8
0x9858: mov rax,rbp
0x985b: pop rbx
0x985c: pop rbp
0x985d: pop r12
0x985f: pop r13
0x9861: pop r14
0x9863: pop r15
0x9865: ret 
0x9866: xor ebp,ebp
0x9868: jmp 0x9854
0x9870: movzx ecx,byte ptr [rdi]
0x9873: xor edx,edx
0x9875: test cl,cl
0x9877: je 0x989d
0x9879: nop dword ptr [rax]
0x9880: mov rax,rdx
0x9883: add rdi,0x1
0x9887: shl rax,0x5
0x988b: sub rax,rdx
0x988e: xor edx,edx
0x9890: add rax,rcx
0x9893: movzx ecx,byte ptr [rdi]
0x9896: div rsi
0x9899: test cl,cl
0x989b: jne 0x9880
0x989d: mov rax,rdx
0x98a0: ret 
0x98b0: movabsq rax,0x3f80000000000000
0x98ba: mov byte ptr [rdi+0x10],0x0
0x98be: mov qword ptr [rdi],rax
0x98c1: movabsq rax,0x3fb4fdf43f4ccccd
0x98cb: mov qword ptr [rdi+0x8],rax
0x98cf: ret 
0x992c: mov qword ptr [rax+0x28],r15
0x9930: call 0x9270
0x9935: test al,al
0x9937: je 0x99c0
0x993d: cmp byte ptr [r15+0x10],0x0
0x9942: je 0x9a40
0x9a40: test rbp,rbp
0x9a43: movxd xmm1,[r15+0x8]
0x9a49: jns 0x9a01
0x9a90: push r12
0x9a92: push rbp
0x9a93: mov rbp,rdi
0x9a96: push rbx
0x9a97: mov r12,qword ptr [rdi]
0x9a9a: cmp r12,qword ptr [rdi+0x8]
0x9a9e: jae 0x9b0b
0x9aa0: cmp qword ptr [r12],0x0
0x9aa5: je 0x9b01
0x9aa7: mov rbx,qword ptr [r12+0x8]
0x9aac: mov rax,qword ptr [rbp+0x40]
0x9ab0: test rbx,rbx
0x9ab3: je 0x9ae5
0x9ab5: nop dword ptr [rax]
0x9ab8: test rax,rax
0x9abb: je 0x9ac6
0x9abd: mov rdi,qword ptr [rbx]
0x9ac0: call rax
0x9ac2: mov rax,qword ptr [rbp+0x40]
0x9ac6: mov rdx,qword ptr [rbx+0x8]
0x9aca: mov rcx,qword ptr [rbp+0x48]
0x9ace: mov qword ptr [rbx],0x0
0x9ad5: test rdx,rdx
0x9ad8: mov qword ptr [rbx+0x8],rcx
0x9adc: mov qword ptr [rbp+0x48],rbx
0x9ae0: mov rbx,rdx
0x9ae3: jne 0x9ab8
0x9ae5: test rax,rax
0x9ae8: je 0x9af0
0x9aea: mov rdi,qword ptr [r12]
0x9aee: call rax
0x9af0: mov qword ptr [r12],0x0
0x9af8: mov qword ptr [r12+0x8],0x0
0x9b01: add r12,0x10
0x9b05: cmp qword ptr [rbp+0x8],r12
0x9b09: ja 0x9aa0
0x9b0b: mov qword ptr [rbp+0x18],0x0
0x9b13: mov qword ptr [rbp+0x20],0x0
0x9b1b: pop rbx
0x9b1c: pop rbp
0x9b1d: pop r12
0x9b1f: ret 
0x9b60: mov rdi,qword ptr [rbx]
0x9b68: mov rbx,qword ptr [rbx+0x8]
0x9b6c: test rbx,rbx
0x9b6f: jne 0x9b60
0x9b71: mov rax,qword ptr [r12+0x8]
0x9e2a: call 0x1ab0
0x9e3e: nop 
0x9f30: mov rdx,rax
0x9f33: pxor xmm1,xmm1
0x9f37: and eax,0x1
0x9f3a: shr rdx, 1
0x9f3d: or rdx,rax
0x9f40: mov rax,qword ptr [rbx+0x10]
0x9f44: cvtsi2ssq xmm1,rdx
0x9f49: mov rdx,qword ptr [rbx+0x28]
0x9f4d: test rax,rax
0x9f50: addss xmm1,xmm1
0x9f54: jns 0x9ed3
0xa022: nop word ptr [rax+rax]
0xa080: mov rcx,rax
0xa083: pxor xmm1,xmm1
0xa087: shr rcx, 1
0xa08a: and eax,0x1
0xa08d: or rcx,rax
0xa090: cvtsi2ssq xmm1,rcx
0xa095: addss xmm1,xmm1
0xa099: jmp 0x9fbe
0xa0bf: call 0x1ab0
0xa0c4: nop 
0xa0c6: nop word ptr cs:[rax+rax]
0xa124: call 0x1ab0
0xa129: nop dword ptr [rax]
0xa32e: call 0x1ab0
0xa333: nop word ptr cs:[rax+rax]
0xa33d: nop dword ptr [rax]
0xa3ee: nop 
0xa3f0: sub rsp,0x8
0xa3f4: mov edi,0xe
0xa3f9: call 0x1c40
0xa3fe: test rax,rax
0xa401: je 0xa420
0xa403: cmp byte ptr [rax],0x0
0xa406: lea rdx,[rip+0x1f13]
0xa40d: cmove rax,rdx
0xa411: add rsp,0x8
0xa415: ret 
0xa420: lea rax,[rip+0x1ef9]
0xa427: add rsp,0x8
0xa42b: ret 
0xa499: call 0x1ab0
0xa49e: nop 
0xa560: push r12
0xa562: push rbp
0xa563: push rbx
0xa564: mov rbx,rdi
0xa567: call 0x1bf0
0xa56c: test eax,eax
0xa56e: mov rdi,rbx
0xa571: js 0xa5c7
0xa573: call 0x1c60
0xa578: test eax,eax
0xa57a: jne 0xa5a8
0xa57c: mov rdi,rbx
0xa57f: call 0x68f0
0xa584: test eax,eax
0xa586: je 0xa5c4
0xa588: call 0x19a0
0xa58d: mov r12d,dword ptr [rax]
0xa590: mov rdi,rbx
0xa593: mov rbp,rax
0xa596: call 0x1a40
0xa59b: test r12d,r12d
0xa59e: jne 0xa5d0
0xa5a0: pop rbx
0xa5a1: pop rbp
0xa5a2: pop r12
0xa5a4: ret 
0xa5a8: mov rdi,rbx
0xa5ab: call 0x1bf0
0xa5b0: xor esi,esi
0xa5b2: mov edx,0x1
0xa5b7: mov edi,eax
0xa5b9: call 0x1b10
0xa5be: cmp rax,-0x1
0xa5c2: jne 0xa57c
0xa5c4: mov rdi,rbx
0xa5c7: pop rbx
0xa5c8: pop rbp
0xa5c9: pop r12
0xa5cb: jmp 0x1a40
0xa5d0: mov dword ptr [rbp],r12d
0xa5d4: mov eax,0xffffffff
0xa5d9: jmp 0xa5a0
0xa82d: call 0x1ab0
0xa84a: mov rax,qword ptr [rsp+0x8]
0xa84f: jmp 0xa719
0xa854: mov rax,qword ptr [rsp+0x8]
0xa859: jmp 0xa771
0xa870: push r15
0xa872: push r14
0xa874: mov r15,rdx
0xa877: push r13
0xa879: push r12
0xa87b: lea r12,[rip+0x20410e]
0xa882: push rbp
0xa883: lea rbp,[rip+0x20410e]
0xa88a: push rbx
0xa88b: mov r13d,edi
0xa88e: mov r14,rsi
0xa891: sub rbp,r12
0xa894: sub rsp,0x8
0xa898: sar rbp,0x3
0xa89c: call 0x1960
0xa8a1: test rbp,rbp
0xa8a4: je 0xa8c6
0xa8a6: xor ebx,ebx
0xa8a8: nop dword ptr [rax+rax]
0xa8b0: mov rdx,r15
0xa8b3: mov rsi,r14
0xa8b6: mov edi,r13d
0xa8b9: call qword ptr [r12+rbx*8]
0xa8bd: add rbx,0x1
0xa8c1: cmp rbp,rbx
0xa8c4: jne 0xa8b0
0xa8c6: add rsp,0x8
0xa8ca: pop rbx
0xa8cb: pop rbp
0xa8cc: pop r12
0xa8ce: pop r13
0xa8d0: pop r14
0xa8d2: pop r15
0xa8d4: ret 
0xa8e0: rep ret 
