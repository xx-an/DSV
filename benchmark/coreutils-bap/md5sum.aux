0x1580: sub rsp,0x8
0x1584: mov rax,qword ptr [rip+0x208a45]
0x158b: test rax,rax
0x158e: je 0x1592
0x1590: call rax
0x1592: add rsp,0x8
0x1596: ret 
0x15a6: jmp qword ptr [rip+0x20886c]
0x15f0: jmp qword ptr [rip+0x20884a]
0x1600: jmp qword ptr [rip+0x208842]
0x1680: jmp qword ptr [rip+0x208802]
0x1690: jmp qword ptr [rip+0x2087fa]
0x16b0: jmp qword ptr [rip+0x2087ea]
0x1730: jmp qword ptr [rip+0x2087aa]
0x1750: jmp qword ptr [rip+0x20879a]
0x17b0: jmp qword ptr [rip+0x20876a]
0x18b0: jmp qword ptr [rip+0x2086ea]
0x18c0: jmp qword ptr [rip+0x2086e2]
0x18f0: jmp qword ptr [rip+0x2086ea]
0x1a9d: nop dword ptr [rax]
0x1e7b: lea rsi,[rip+0x50b5]
0x1e82: mov rbx,rax
0x1e85: mov edx,0x5
0x1e8a: xor edi,edi
0x1e8c: call 0x1660
0x1e91: mov rcx,rbx
0x1e94: mov rdx,rax
0x1e97: xor esi,esi
0x1e99: mov edi,0x1
0x1e9e: xor eax,eax
0x1ea0: call 0x1830
0x21e1: lea rsi,[rip+0x5658]
0x21e8: xor edi,edi
0x21ea: mov edx,0x5
0x21ef: mov rbx,rax
0x21f2: call 0x1660
0x21f7: lea r9,[rip+0x4c33]
0x21fe: mov rdx,rax
0x2201: mov r8,rbp
0x2204: mov rcx,rbx
0x2207: xor esi,esi
0x2209: xor edi,edi
0x220b: xor eax,eax
0x220d: call 0x1830
0x2212: jmp 0x1e55
0x2443: mov rbx,rax
0x2446: call 0x15d0
0x244b: mov esi,dword ptr [rax]
0x244d: lea rdx,[rip+0x55a1]
0x2454: xor eax,eax
0x2456: mov rcx,rbx
0x2459: xor edi,edi
0x245b: call 0x1830
0x2460: xor eax,eax
0x2462: jmp 0x21c3
0x257f: lea rsi,[rip+0x49eb]
0x2586: mov rbx,rax
0x2589: mov edx,0x5
0x258e: xor edi,edi
0x2590: call 0x1660
0x2595: mov rcx,rbx
0x2598: mov rdx,rax
0x259b: xor esi,esi
0x259d: xor eax,eax
0x259f: xor edi,edi
0x25a1: call 0x1830
0x25a6: xor eax,eax
0x25a8: jmp 0x21c3
0x25bf: xor edx,edx
0x2656: lea rsi,[rip+0x5213]
0x265d: xor edi,edi
0x265f: mov edx,0x5
0x2664: mov rbp,rax
0x2667: call 0x1660
0x266c: lea r8,[rip+0x47be]
0x2673: mov rdx,rax
0x2676: mov rcx,rbp
0x2679: xor esi,esi
0x267b: xor edi,edi
0x267d: xor eax,eax
0x267f: call 0x1830
0x2684: jmp 0x21be
0x2812: jmp 0x24db
0x284c: jmp 0x24e2
0x28e3: jmp 0x2533
0x2908: lea rsi,[rip+0x4671]
0x290f: mov rbp,rax
0x2912: xor edi,edi
0x2914: mov edx,0x5
0x2919: call 0x1660
0x291e: mov rcx,rbp
0x2921: mov rdx,rax
0x2924: xor esi,esi
0x2926: xor edi,edi
0x2928: xor eax,eax
0x292a: call 0x1830
0x292f: jmp 0x21be
0x295f: jmp 0x236d
0x296e: jmp 0x2054
0x297d: jmp 0x27fd
0x298b: jmp 0x2527
0x299a: jmp 0x2502
0x29b3: mov rdx,qword ptr [rsp+0x30]
0x29b8: mov rcx,qword ptr [rsp+0x60]
0x29bd: jmp 0x2303
0x29cc: jmp 0x2797
0x29e3: call 0x1690
0x2a6a: hlt 
0x2a6b: nop dword ptr [rax+rax]
0x2a70: lea rdi,[rip+0x207629]
0x2a77: push rbp
0x2a78: lea rax,[rip+0x207621]
0x2a7f: cmp rax,rdi
0x2a82: mov rbp,rsp
0x2a85: je 0x2aa0
0x2a87: mov rax,qword ptr [rip+0x207532]
0x2a8e: test rax,rax
0x2a91: je 0x2aa0
0x2a93: pop rbp
0x2a94: jmp rax
0x2aa0: pop rbp
0x2aa1: ret 
0x2ab0: lea rdi,[rip+0x2075e9]
0x2ab7: lea rsi,[rip+0x2075e2]
0x2abe: push rbp
0x2abf: sub rsi,rdi
0x2ac2: mov rbp,rsp
0x2ac5: sar rsi,0x3
0x2ac9: mov rax,rsi
0x2acc: shr rax,0x3f
0x2ad0: add rsi,rax
0x2ad3: sar rsi, 1
0x2ad6: je 0x2af0
0x2ad8: mov rax,qword ptr [rip+0x2074f9]
0x2adf: test rax,rax
0x2ae2: je 0x2af0
0x2ae4: pop rbp
0x2ae5: jmp rax
0x2af0: pop rbp
0x2af1: ret 
0x2b11: push rbp
0x2b12: mov rbp,rsp
0x2b15: je 0x2b23
0x2b17: mov rdi,qword ptr [rip+0x2074ea]
0x2b1e: call 0x18f0
0x2b23: call 0x2a70
0x2b28: mov byte ptr [rip+0x2075b9],0x1
0x2b2f: pop rbp
0x2b30: ret 
0x2b40: push rbp
0x2b41: mov rbp,rsp
0x2b44: pop rbp
0x2b45: jmp 0x2ab0
0x2c20: mov rax,rdi
0x2c23: cmp byte ptr [rax],0x0
0x2c26: sete al
0x2c29: add rsp,0x8
0x2c2d: pop rbx
0x2c2e: pop rbp
0x2c2f: ret 
0x2cf0: jmp 0x2c6e
0x2d7f: mov rbp,rax
0x2d82: xor r12d,r12d
0x2d85: call 0x15d0
0x2d8a: mov esi,dword ptr [rax]
0x2d8c: lea rdx,[rip+0x4c62]
0x2d93: xor edi,edi
0x2d95: xor eax,eax
0x2d97: mov rcx,rbp
0x2d9a: call 0x1830
0x2d9f: cmp qword ptr [rip+0x20730a],rbx
0x2da6: je 0x2d61
0x2da8: mov rdi,rbx
0x2dab: call 0x6830
0x2db0: add rsp,0x8
0x2db4: mov eax,r12d
0x2db7: pop rbx
0x2db8: pop rbp
0x2db9: pop r12
0x2dbb: pop r13
0x2dbd: ret 
0x2e19: mov rbx,rax
0x2e1c: xor r12d,r12d
0x2e1f: call 0x15d0
0x2e24: mov esi,dword ptr [rax]
0x2e26: lea rdx,[rip+0x4bc8]
0x2e2d: mov rcx,rbx
0x2e30: xor edi,edi
0x2e32: xor eax,eax
0x2e34: call 0x1830
0x2e39: jmp 0x2d61
0x2e69: mov esi,dword ptr [rbx]
0x2e6b: lea rdx,[rip+0x4b83]
0x2e72: mov rcx,rax
0x2e75: xor edi,edi
0x2e77: xor eax,eax
0x2e79: xor r12d,r12d
0x2e7c: call 0x1830
0x2e81: jmp 0x2d61
0x3300: mov qword ptr [rip+0x206e11],rdi
0x3307: ret 
0x3310: mov byte ptr [rip+0x206df9],dil
0x3317: ret 
0x3320: push rbp
0x3321: push rbx
0x3322: sub rsp,0x8
0x3326: mov rdi,qword ptr [rip+0x206d7b]
0x332d: call 0x6c60
0x3332: test eax,eax
0x3334: je 0x334c
0x3336: call 0x15d0
0x333b: cmp byte ptr [rip+0x206dce],0x0
0x3342: mov rbx,rax
0x3345: je 0x3363
0x3347: cmp dword ptr [rax],0x20
0x334a: jne 0x3363
0x334c: mov rdi,qword ptr [rip+0x206d8d]
0x3353: call 0x6c60
0x3358: test eax,eax
0x335a: jne 0x33a2
0x335c: add rsp,0x8
0x3360: pop rbx
0x3361: pop rbp
0x3362: ret 
0x3363: lea rsi,[rip+0x467b]
0x336a: xor edi,edi
0x336c: mov edx,0x5
0x3371: call 0x1660
0x3376: mov rdi,qword ptr [rip+0x206d9b]
0x337d: mov rbp,rax
0x3380: test rdi,rdi
0x3383: je 0x33ad
0x3385: call 0x5d50
0x338a: mov esi,dword ptr [rbx]
0x338c: lea rdx,[rip+0x465e]
0x3393: mov rcx,rax
0x3396: mov r8,rbp
0x3399: xor edi,edi
0x339b: xor eax,eax
0x339d: call 0x1830
0x33a2: mov edi,dword ptr [rip+0x206c78]
0x33a8: call 0x15f0
0x33ad: mov esi,dword ptr [rbx]
0x33af: lea rdx,[rip+0x463f]
0x33b6: mov rcx,rax
0x33b9: xor edi,edi
0x33bb: xor eax,eax
0x33bd: call 0x1830
0x33c2: jmp 0x33a2
0x33d0: movabsq rax,-0x1032547698badcff
0x33da: mov qword ptr [rdi+0x10],0x0
0x33e2: mov dword ptr [rdi+0x18],0x0
0x33e9: mov qword ptr [rdi],rax
0x33ec: movabsq rax,0x1032547698badcfe
0x33f6: mov qword ptr [rdi+0x8],rax
0x33fa: ret 
0x3bdc: add edx,0x1
0x3bdf: mov dword ptr [rbx+0x14],edx
0x3c1a: test cl,0x4
0x3c1d: jne 0x3c90
0x3c1f: test rcx,rcx
0x3c22: je 0x3c6c
0x3c24: movzx eax,byte ptr [rip+0x3dd5]
0x3c2b: test cl,0x2
0x3c2e: mov byte ptr [rdx],al
0x3c30: je 0x3c6c
0x3c32: movzx eax,word ptr [rsi+rcx-0x2]
0x3c37: mov word ptr [rdx+rcx-0x2],ax
0x3c3c: jmp 0x3c6c
0x3c90: mov eax,dword ptr [rip+0x3d6a]
0x3c96: mov dword ptr [rdx],eax
0x3c98: mov eax,dword ptr [rsi+rcx-0x4]
0x3c9c: mov dword ptr [rdx+rcx-0x4],eax
0x3ca0: jmp 0x3c6c
0x3e00: mov ebp,eax
0x3e02: mov edx,0x80
0x3e07: lea r15,[r13+0x1c]
0x3e0b: sub rdx,rbp
0x3e0e: cmp rdx,rsi
0x3e11: lea rdi,[r15+rbp]
0x3e15: cmova rdx,rsi
0x3e19: mov rsi,rbx
0x3e1c: mov r14,rdx
0x3e1f: call 0x1770
0x3e24: mov esi,dword ptr [r13+0x18]
0x3e28: add esi,r14d
0x3e2b: cmp esi,0x40
0x3e2e: mov dword ptr [r13+0x18],esi
0x3e32: ja 0x3e90
0x3e34: add rbx,r14
0x3e37: sub r12,r14
0x3e3a: jmp 0x3cd2
0x3e90: and esi,-0x40
0x3e93: mov rdx,r13
0x3e96: mov rdi,r15
0x3e99: call 0x3420
0x3e9e: mov ecx,dword ptr [r13+0x18]
0x3ea2: lea rax,[rbp+r14]
0x3ea7: and rax,-0x40
0x3eab: mov edx,ecx
0x3ead: add rax,r15
0x3eb0: and edx,0x3f
0x3eb3: cmp edx,0x8
0x3eb6: mov dword ptr [r13+0x18],edx
0x3eba: jae 0x3ef0
0x3ebc: test cl,0x4
0x3ebf: jne 0x3f3f
0x3ec1: test edx,edx
0x3ec3: je 0x3e34
0x3ec9: movzx esi,byte ptr [rax]
0x3ecc: and ecx,0x2
0x3ecf: mov byte ptr [r13+0x1c],sil
0x3ed3: je 0x3e34
0x3ed9: movzx eax,word ptr [rax+rdx-0x2]
0x3ede: mov word ptr [r15+rdx-0x2],ax
0x3ee4: jmp 0x3e34
0x3ef0: mov rcx,qword ptr [rax]
0x3ef3: mov qword ptr [r13+0x1c],rcx
0x3ef7: mov ecx,edx
0x3ef9: mov rsi,qword ptr [rax+rcx-0x8]
0x3efe: mov qword ptr [r15+rcx-0x8],rsi
0x3f03: lea rcx,[r13+0x24]
0x3f07: and rcx,-0x8
0x3f0b: sub r15,rcx
0x3f0e: sub rax,r15
0x3f11: add r15d,edx
0x3f14: and r15d,-0x8
0x3f18: cmp r15d,0x8
0x3f1c: jb 0x3e34
0x3f22: and r15d,-0x8
0x3f26: xor edx,edx
0x3f28: mov esi,edx
0x3f2a: add edx,0x8
0x3f2d: mov rdi,qword ptr [rax+rsi]
0x3f31: cmp edx,r15d
0x3f34: mov qword ptr [rcx+rsi],rdi
0x3f38: jb 0x3f28
0x3f3a: jmp 0x3e34
0x3f3f: mov ecx,dword ptr [rax]
0x3f41: mov dword ptr [r13+0x1c],ecx
0x3f45: mov eax,dword ptr [rax+rdx-0x4]
0x3f49: mov dword ptr [r15+rdx-0x4],eax
0x3f4e: jmp 0x3e34
0x3f90: push rbp
0x3f91: push rbx
0x3f92: mov rbp,rdx
0x3f95: sub rsp,0xb8
0x3f9c: mov rax,qword ptr fs:0x28
0x3fa5: mov qword ptr [rsp+0xa8],rax
0x3fad: xor eax,eax
0x3faf: mov rbx,rsp
0x3fb2: movabsq rax,-0x1032547698badcff
0x3fbc: mov qword ptr [rsp+0x10],0x0
0x3fc5: mov qword ptr [rsp],rax
0x3fc9: mov rdx,rbx
0x3fcc: movabsq rax,0x1032547698badcfe
0x3fd6: mov qword ptr [rsp+0x8],rax
0x3fdb: mov dword ptr [rsp+0x18],0x0
0x3fe3: call 0x3cb0
0x3fe8: mov rsi,rbp
0x3feb: mov rdi,rbx
0x3fee: call 0x3b90
0x3ff3: mov rcx,qword ptr [rsp+0xa8]
0x3ffb: xor rcx,qword ptr fs:0x28
0x4004: jne 0x4010
0x4006: add rsp,0xb8
0x400d: pop rbx
0x400e: pop rbp
0x400f: ret 
0x4010: call 0x1690
0x4015: nop 
0x4016: nop word ptr cs:[rax+rax]
0x414d: call 0x1690
0x4152: nop word ptr cs:[rax+rax]
0x415c: nop dword ptr [rax]
0x4160: jmp 0x1720
0x42df: nop 
0x42e0: push rbp
0x42e1: push rbx
0x42e2: mov rbp,rdi
0x42e5: mov ebx,esi
0x42e7: sub rsp,0x8
0x42eb: call 0x6d40
0x42f0: movzx edx,byte ptr [rax]
0x42f3: and edx,-0x21
0x42f6: cmp dl,0x55
0x42f9: je 0x4370
0x42fb: cmp dl,0x47
0x42fe: je 0x4320
0x4300: lea rax,[rip+0x378c]
0x4307: lea rdx,[rip+0x3787]
0x430e: cmp ebx,0x9
0x4311: cmovne rax,rdx
0x4315: add rsp,0x8
0x4319: pop rbx
0x431a: pop rbp
0x431b: ret 
0x4320: movzx edx,byte ptr [rax+0x1]
0x4324: and edx,-0x21
0x4327: cmp dl,0x42
0x432a: jne 0x4300
0x432c: cmp byte ptr [rax+0x2],0x31
0x4330: jne 0x4300
0x4332: cmp byte ptr [rax+0x3],0x38
0x4336: jne 0x4300
0x4338: cmp byte ptr [rax+0x4],0x30
0x433c: jne 0x4300
0x433e: cmp byte ptr [rax+0x5],0x33
0x4342: jne 0x4300
0x4344: cmp byte ptr [rax+0x6],0x30
0x4348: jne 0x4300
0x434a: cmp byte ptr [rax+0x7],0x0
0x434e: jne 0x4300
0x4350: cmp byte ptr [rbp],0x60
0x4354: lea rax,[rip+0x3731]
0x435b: lea rdx,[rip+0x372e]
0x4362: cmovne rax,rdx
0x4366: add rsp,0x8
0x436a: pop rbx
0x436b: pop rbp
0x436c: ret 
0x4370: movzx edx,byte ptr [rax+0x1]
0x4374: and edx,-0x21
0x4377: cmp dl,0x54
0x437a: jne 0x4300
0x437c: movzx edx,byte ptr [rax+0x2]
0x4380: and edx,-0x21
0x4383: cmp dl,0x46
0x4386: jne 0x4300
0x438c: cmp byte ptr [rax+0x3],0x2d
0x4390: jne 0x4300
0x4396: cmp byte ptr [rax+0x4],0x38
0x439a: jne 0x4300
0x43a0: cmp byte ptr [rax+0x5],0x0
0x43a4: jne 0x4300
0x43aa: cmp byte ptr [rbp],0x60
0x43ae: lea rax,[rip+0x36cf]
0x43b5: lea rdx,[rip+0x36cc]
0x43bc: cmovne rax,rdx
0x43c0: add rsp,0x8
0x43c4: pop rbx
0x43c5: pop rbp
0x43c6: ret 
0x44a3: xor r11d,r11d
0x44a6: mov rax,rbp
0x44a9: mov r8d,r12d
0x44ac: mov rbp,r11
0x44af: mov r11,rax
0x44b2: nop word ptr [rax+rax]
0x44b8: cmp r11,rbp
0x44bb: setne r12b
0x44bf: cmp r11,-0x1
0x44c3: jne 0x44d2
0x44c5: mov rax,qword ptr [rsp+0x10]
0x44ca: cmp byte ptr [rax+rbp],0x0
0x44ce: setne r12b
0x44d2: test r12b,r12b
0x44d5: je 0x4b30
0x44db: cmp dword ptr [rsp+0x8],0x2
0x44e0: mov rdi,qword ptr [rsp+0x10]
0x44e5: lea r9,[rdi+rbp]
0x44e9: setne al
0x44ec: and al,byte ptr [rsp+0xd]
0x44f0: mov r10d,eax
0x44f3: je 0x45a0
0x44f9: mov rax,qword ptr [rsp+0x18]
0x44fe: test rax,rax
0x4501: je 0x4930
0x4507: cmp r11,-0x1
0x450b: lea rbx,[rbp+rax]
0x4510: jne 0x4540
0x4512: cmp rax,0x1
0x4516: jbe 0x4540
0x4518: mov byte ptr [rsp+0x38],r8b
0x451d: mov byte ptr [rsp+0x30],r10b
0x4522: mov qword ptr [rsp+0x28],r9
0x4527: call 0x1680
0x452c: movzx r8d,byte ptr [rsp+0x38]
0x4532: movzx r10d,byte ptr [rsp+0x30]
0x4538: mov r11,rax
0x453b: mov r9,qword ptr [rsp+0x28]
0x4540: cmp rbx,r11
0x4543: mov byte ptr [rsp+0x28],r10b
0x4548: ja 0x4b00
0x454e: mov rdx,qword ptr [rsp+0x18]
0x4553: mov rsi,qword ptr [rsp+0x48]
0x4558: mov rdi,r9
0x455b: mov qword ptr [rsp+0x40],r11
0x4560: mov byte ptr [rsp+0x38],r8b
0x4565: mov qword ptr [rsp+0x30],r9
0x456a: call 0x1730
0x456f: test eax,eax
0x4571: mov r9,qword ptr [rsp+0x30]
0x4576: movzx r8d,byte ptr [rsp+0x38]
0x457c: mov r11,qword ptr [rsp+0x40]
0x4581: jne 0x4b00
0x4587: cmp byte ptr [rsp+0xf],0x0
0x458c: movzx r10d,byte ptr [rsp+0x28]
0x4592: jne 0x5515
0x4598: nop dword ptr [rax+rax]
0x45a0: movzx ebx,byte ptr [r9]
0x45a4: cmp bl,0x7e
0x45a7: ja 0x48c8
0x45ad: lea rcx,[rip+0x3578]
0x45b4: movzx edx,bl
0x45b7: movsxd rax,dword ptr [rcx+rdx*4]
0x45bb: add rax,rcx
0x45be: jmp rax
0x45f8: cmp byte ptr [rsp+0xd],0x1
0x45fd: jne 0x4712
0x4603: test dl,dl
0x4605: jne 0x4712
0x460b: mov rsi,qword ptr [rsp+0x20]
0x4610: test rsi,rsi
0x4613: je 0x4629
0x4615: mov edx,ebx
0x4617: shr dl,0x5
0x461a: movzx edx,dl
0x461d: mov edx,dword ptr [rsi+rdx*4]
0x4620: btl edx,ebx
0x4623: jb 0x4773
0x4629: test r10b,r10b
0x462c: jne 0x4773
0x4632: xor eax,0x1
0x4635: add rbp,0x1
0x4639: and eax,r8d
0x463c: test al,al
0x463e: je 0x4660
0x4640: cmp r13,r15
0x4643: jbe 0x464a
0x4645: mov byte ptr [r14+r15],0x27
0x464a: lea rax,[r15+0x1]
0x464e: cmp r13,rax
0x4651: jbe 0x4659
0x4653: mov byte ptr [r14+r15+0x1],0x27
0x4659: add r15,0x2
0x465d: xor r8d,r8d
0x4660: cmp r15,r13
0x4663: jae 0x4669
0x4665: mov byte ptr [r14+r15],bl
0x4669: movzx edi,byte ptr [rsp+0xe]
0x466e: add r15,0x1
0x4672: mov eax,0x0
0x4677: test r12b,r12b
0x467a: cmove edi,eax
0x467d: mov byte ptr [rsp+0xe],dil
0x4682: jmp 0x44b8
0x4712: cmp byte ptr [rsp+0xf],0x0
0x4717: jne 0x460b
0x471d: jmp 0x4629
0x4773: cmp dword ptr [rsp+0x8],0x2
0x4778: sete dl
0x477b: cmp byte ptr [rsp+0xf],0x0
0x4780: mov eax,edx
0x4782: jne 0x4fd8
0x4788: mov eax,r8d
0x478b: xor eax,0x1
0x478e: and al,dl
0x4790: je 0x47c1
0x4792: cmp r13,r15
0x4795: jbe 0x479c
0x4797: mov byte ptr [r14+r15],0x27
0x479c: lea rdx,[r15+0x1]
0x47a0: cmp r13,rdx
0x47a3: jbe 0x47ab
0x47a5: mov byte ptr [r14+r15+0x1],0x24
0x47ab: lea rdx,[r15+0x2]
0x47af: cmp r13,rdx
0x47b2: jbe 0x47ba
0x47b4: mov byte ptr [r14+r15+0x2],0x27
0x47ba: add r15,0x3
0x47be: mov r8d,eax
0x47c1: cmp r13,r15
0x47c4: jbe 0x47cb
0x47c6: mov byte ptr [r14+r15],0x5c
0x47cb: add r15,0x1
0x47cf: add rbp,0x1
0x47d3: jmp 0x4660
0x48c0: xor r10d,r10d
0x48c3: nop dword ptr [rax+rax]
0x48c8: cmp qword ptr [rsp+0x58],0x1
0x48ce: jne 0x4c78
0x48d4: mov qword ptr [rsp+0x38],r11
0x48d9: mov byte ptr [rsp+0x30],r8b
0x48de: mov byte ptr [rsp+0x28],r10b
0x48e3: call 0x18e0
0x48e8: mov rcx,qword ptr [rax]
0x48eb: movzx edx,bl
0x48ee: movzx r10d,byte ptr [rsp+0x28]
0x48f4: movzx r8d,byte ptr [rsp+0x30]
0x48fa: mov r11,qword ptr [rsp+0x38]
0x48ff: mov edi,0x1
0x4904: movzx eax,word ptr [rcx+rdx*2]
0x4908: and ax,0x4000
0x490c: setne r12b
0x4910: sete al
0x4913: and al,byte ptr [rsp+0xd]
0x4917: test al,al
0x4919: jne 0x52b1
0x491f: cmp dword ptr [rsp+0x8],0x2
0x4924: sete dl
0x4927: jmp 0x45f8
0x4930: movzx ebx,byte ptr [r9]
0x4934: cmp bl,0x7e
0x4937: ja 0x48c0
0x4939: lea rcx,[rip+0x33e8]
0x4940: movzx edx,bl
0x4943: movsxd rax,dword ptr [rcx+rdx*4]
0x4947: add rax,rcx
0x494a: jmp rax
0x4b00: xor r10d,r10d
0x4b03: jmp 0x45a0
0x4b30: cmp dword ptr [rsp+0x8],0x2
0x4b35: movzx ebx,byte ptr [rsp+0xf]
0x4b3a: mov r12d,r8d
0x4b3d: mov rbp,r11
0x4b40: sete dl
0x4b43: mov eax,ebx
0x4b45: test r15,r15
0x4b48: sete cl
0x4b4b: and eax,edx
0x4b4d: and al,cl
0x4b4f: jne 0x55b6
0x4b55: mov eax,ebx
0x4b57: xor eax,0x1
0x4b5a: and dl,al
0x4b5c: je 0x54cc
0x4b62: cmp byte ptr [rsp+0x7c],0x0
0x4b67: je 0x54ca
0x4b6d: cmp byte ptr [rsp+0xe],0x0
0x4b72: jne 0x556d
0x4b78: test r13,r13
0x4b7b: sete al
0x4b7e: cmp qword ptr [rsp+0x50],0x0
0x4b84: setne dl
0x4b87: and al,dl
0x4b89: je 0x55ac
0x4b8f: mov r13,qword ptr [rsp+0x50]
0x4b94: lea rbx,[rip+0x2efa]
0x4b9b: mov byte ptr [r14],0x27
0x4b9f: mov dword ptr [rsp+0x8],0x2
0x4ba7: mov r15d,0x1
0x4bad: mov qword ptr [rsp+0x18],0x1
0x4bb6: mov byte ptr [rsp+0xf],0x0
0x4bbb: mov qword ptr [rsp+0x48],rbx
0x4bc0: mov byte ptr [rsp+0x7c],al
0x4bc4: jmp 0x44a3
0x4c78: lea rax,[rsp+0xa0]
0x4c80: cmp r11,-0x1
0x4c84: mov qword ptr [rsp+0xa0],0x0
0x4c90: mov qword ptr [rsp+0x28],rax
0x4c95: jne 0x4cc4
0x4c97: mov rdi,qword ptr [rsp+0x10]
0x4c9c: mov byte ptr [rsp+0x40],r8b
0x4ca1: mov byte ptr [rsp+0x38],r10b
0x4ca6: mov qword ptr [rsp+0x30],r9
0x4cab: call 0x1680
0x4cb0: movzx r8d,byte ptr [rsp+0x40]
0x4cb6: movzx r10d,byte ptr [rsp+0x38]
0x4cbc: mov r11,rax
0x4cbf: mov r9,qword ptr [rsp+0x30]
0x4cc4: lea rax,[rsp+0x9c]
0x4ccc: xor ecx,ecx
0x4cce: mov byte ptr [rsp+0x7e],bl
0x4cd2: mov byte ptr [rsp+0x7d],r8b
0x4cd7: mov rbx,rcx
0x4cda: mov qword ptr [rsp+0x88],r9
0x4ce2: mov qword ptr [rsp+0x38],rax
0x4ce7: mov byte ptr [rsp+0x7f],r10b
0x4cec: mov qword ptr [rsp+0x80],r15
0x4cf4: mov qword ptr [rsp+0x40],r14
0x4cf9: mov qword ptr [rsp+0x70],r13
0x4cfe: mov qword ptr [rsp+0x30],r11
0x4d03: mov rax,qword ptr [rsp+0x10]
0x4d08: lea r14,[rbp+rbx]
0x4d0d: mov rdx,qword ptr [rsp+0x30]
0x4d12: mov rcx,qword ptr [rsp+0x28]
0x4d17: mov rdi,qword ptr [rsp+0x38]
0x4d1c: lea r13,[rax+r14]
0x4d20: sub rdx,r14
0x4d23: mov rsi,r13
0x4d26: call 0x6bd0
0x4d2b: test rax,rax
0x4d2e: mov r15,rax
0x4d31: je 0x4d81
0x4d33: cmp rax,-0x1
0x4d37: je 0x5355
0x4d3d: cmp rax,-0x2
0x4d41: je 0x52e1
0x4d47: cmp dword ptr [rsp+0x8],0x2
0x4d4c: sete al
0x4d4f: and al,byte ptr [rsp+0xf]
0x4d53: jne 0x4ef0
0x4d59: mov edi,dword ptr [rsp+0x9c]
0x4d60: call 0x18c0
0x4d65: mov rdi,qword ptr [rsp+0x28]
0x4d6a: test eax,eax
0x4d6c: mov eax,0x0
0x4d71: cmove r12d,eax
0x4d75: add rbx,r15
0x4d78: call 0x18b0
0x4d7d: test eax,eax
0x4d7f: je 0x4d03
0x4d81: mov edx,r12d
0x4d84: mov rdi,rbx
0x4d87: movzx r8d,byte ptr [rsp+0x7d]
0x4d8d: xor edx,0x1
0x4d90: movzx ebx,byte ptr [rsp+0x7e]
0x4d95: movzx r10d,byte ptr [rsp+0x7f]
0x4d9b: and dl,byte ptr [rsp+0xd]
0x4d9f: mov r15,qword ptr [rsp+0x80]
0x4da7: mov r14,qword ptr [rsp+0x40]
0x4dac: mov r13,qword ptr [rsp+0x70]
0x4db1: mov r11,qword ptr [rsp+0x30]
0x4db6: cmp rdi,0x1
0x4dba: jbe 0x53bb
0x4dc0: mov rcx,rdi
0x4dc3: xor esi,esi
0x4dc5: movzx r9d,byte ptr [rsp+0xf]
0x4dcb: add rcx,rbp
0x4dce: mov rdi,qword ptr [rsp+0x10]
0x4dd3: jmp 0x4e8e
0x4de0: cmp dword ptr [rsp+0x8],0x2
0x4de5: sete al
0x4de8: test r9b,r9b
0x4deb: jne 0x52a0
0x4df1: mov esi,r8d
0x4df4: xor esi,0x1
0x4df7: and al,sil
0x4dfa: je 0x4e2b
0x4dfc: cmp r13,r15
0x4dff: jbe 0x4e06
0x4e01: mov byte ptr [r14+r15],0x27
0x4e06: lea rsi,[r15+0x1]
0x4e0a: cmp r13,rsi
0x4e0d: jbe 0x4e15
0x4e0f: mov byte ptr [r14+r15+0x1],0x24
0x4e15: lea rsi,[r15+0x2]
0x4e19: cmp r13,rsi
0x4e1c: jbe 0x4e24
0x4e1e: mov byte ptr [r14+r15+0x2],0x27
0x4e24: add r15,0x3
0x4e28: mov r8d,eax
0x4e2b: cmp r13,r15
0x4e2e: jbe 0x4e35
0x4e30: mov byte ptr [r14+r15],0x5c
0x4e35: lea rax,[r15+0x1]
0x4e39: cmp r13,rax
0x4e3c: jbe 0x4e4b
0x4e3e: mov eax,ebx
0x4e40: shr al,0x6
0x4e43: add eax,0x30
0x4e46: mov byte ptr [r14+r15+0x1],al
0x4e4b: lea rax,[r15+0x2]
0x4e4f: cmp r13,rax
0x4e52: jbe 0x4e64
0x4e54: mov eax,ebx
0x4e56: shr al,0x3
0x4e59: and eax,0x7
0x4e5c: add eax,0x30
0x4e5f: mov byte ptr [r14+r15+0x2],al
0x4e64: and ebx,0x7
0x4e67: add rbp,0x1
0x4e6b: add r15,0x3
0x4e6f: add ebx,0x30
0x4e72: cmp rbp,rcx
0x4e75: jae 0x4660
0x4e7b: mov esi,edx
0x4e7d: cmp r13,r15
0x4e80: jbe 0x4e86
0x4e82: mov byte ptr [r14+r15],bl
0x4e86: movzx ebx,byte ptr [rdi+rbp]
0x4e8a: add r15,0x1
0x4e8e: test dl,dl
0x4e90: jne 0x4de0
0x4e96: mov eax,esi
0x4e98: xor eax,0x1
0x4e9b: and eax,r8d
0x4e9e: test r10b,r10b
0x4ea1: je 0x4eb1
0x4ea3: cmp r13,r15
0x4ea6: jbe 0x4ead
0x4ea8: mov byte ptr [r14+r15],0x5c
0x4ead: add r15,0x1
0x4eb1: add rbp,0x1
0x4eb5: cmp rbp,rcx
0x4eb8: jae 0x463c
0x4ebe: test al,al
0x4ec0: je 0x52be
0x4ec6: cmp r13,r15
0x4ec9: jbe 0x4ed0
0x4ecb: mov byte ptr [r14+r15],0x27
0x4ed0: lea rax,[r15+0x1]
0x4ed4: cmp r13,rax
0x4ed7: jbe 0x4edf
0x4ed9: mov byte ptr [r14+r15+0x1],0x27
0x4edf: add r15,0x2
0x4ee3: xor r10d,r10d
0x4ee6: xor r8d,r8d
0x4ee9: jmp 0x4e7d
0x4ef0: cmp r15,0x1
0x4ef4: je 0x4d59
0x4efa: mov rdi,qword ptr [rsp+0x10]
0x4eff: lea rcx,[rdi+r15]
0x4f03: lea rdx,[rdi+r14+0x1]
0x4f08: lea r8,[rcx+r14]
0x4f0c: jmp 0x4f1d
0x4f10: add rdx,0x1
0x4f14: cmp r8,rdx
0x4f17: je 0x4d59
0x4f1d: movzx ecx,byte ptr [rdx]
0x4f20: sub ecx,0x5b
0x4f23: cmp cl,0x21
0x4f26: ja 0x4f10
0x4f28: mov esi,0x1
0x4f2d: shl rsi,cl
0x4f30: mov rcx,rsi
0x4f33: movabsq rsi,0x20000002b
0x4f3d: test rcx,rsi
0x4f40: je 0x4f10
0x4f42: mov r14,qword ptr [rsp+0x40]
0x4f47: mov r13,qword ptr [rsp+0x70]
0x4f4c: mov rbp,qword ptr [rsp+0x30]
0x4f51: mov dword ptr [rsp+0x8],0x2
0x4f59: cmp byte ptr [rsp+0xd],0x0
0x4f5e: je 0x4f70
0x4f60: test al,al
0x4f62: mov eax,0x4
0x4f67: cmove eax,dword ptr [rsp+0x8]
0x4f6c: mov dword ptr [rsp+0x8],eax
0x4f70: sub rsp,0x8
0x4f74: mov rcx,rbp
0x4f77: mov rsi,r13
0x4f7a: push qword ptr [rsp+0x68]
0x4f7e: push qword ptr [rsp+0x78]
0x4f82: mov rdi,r14
0x4f85: push 0x0
0x4f87: mov r9d,dword ptr [rsp+0x98]
0x4f8f: mov r8d,dword ptr [rsp+0x28]
0x4f94: mov rdx,qword ptr [rsp+0x30]
0x4f99: and r9d,-0x3
0x4f9d: call 0x43d0
0x4fa2: add rsp,0x20
0x4fa6: mov r15,rax
0x4fa9: mov rbx,qword ptr [rsp+0xa8]
0x4fb1: xor rbx,qword ptr fs:0x28
0x4fba: mov rax,r15
0x4fbd: jne 0x55c3
0x4fc3: add rsp,0xb8
0x4fca: pop rbx
0x4fcb: pop rbp
0x4fcc: pop r12
0x4fce: pop r13
0x4fd0: pop r14
0x4fd2: pop r15
0x4fd4: ret 
0x4fd8: mov rbp,r11
0x4fdb: jmp 0x4f59
0x5041: test r13,r13
0x5044: jne 0x55da
0x504a: lea rax,[rip+0x2a44]
0x5051: mov qword ptr [rsp+0x50],0x0
0x505a: mov byte ptr [rsp+0xe],0x1
0x505f: mov byte ptr [rsp+0x7c],0x0
0x5064: xor r12d,r12d
0x5067: mov byte ptr [rsp+0xf],0x0
0x506c: mov qword ptr [rsp+0x18],0x1
0x5075: mov qword ptr [rsp+0x48],rax
0x507a: mov r15d,0x1
0x5080: mov dword ptr [rsp+0x8],0x2
0x5088: jmp 0x44a3
0x52a0: movzx ebx,byte ptr [rsp+0xf]
0x52a5: mov rbp,r11
0x52a8: mov byte ptr [rsp+0xd],bl
0x52ac: jmp 0x4f59
0x52b1: movzx edx,byte ptr [rsp+0xd]
0x52b6: xor r12d,r12d
0x52b9: jmp 0x4dc0
0x52be: xor r10d,r10d
0x52c1: jmp 0x4e7d
0x52e1: mov r11,qword ptr [rsp+0x30]
0x52e6: mov rsi,r14
0x52e9: mov rcx,r13
0x52ec: mov rax,rbx
0x52ef: mov rdi,rbx
0x52f2: movzx r8d,byte ptr [rsp+0x7d]
0x52f8: movzx ebx,byte ptr [rsp+0x7e]
0x52fd: mov r9,qword ptr [rsp+0x88]
0x5305: cmp rsi,r11
0x5308: movzx r10d,byte ptr [rsp+0x7f]
0x530e: mov r15,qword ptr [rsp+0x80]
0x5316: mov r14,qword ptr [rsp+0x40]
0x531b: mov r13,qword ptr [rsp+0x70]
0x5320: jae 0x5348
0x5322: cmp byte ptr [rcx],0x0
0x5325: jne 0x5337
0x5327: jmp 0x5348
0x5330: cmp byte ptr [r9+rax],0x0
0x5335: je 0x5345
0x5337: add rax,0x1
0x533b: lea rdx,[rbp+rax]
0x5340: cmp r11,rdx
0x5343: ja 0x5330
0x5345: mov rdi,rax
0x5348: movzx edx,byte ptr [rsp+0xd]
0x534d: xor r12d,r12d
0x5350: jmp 0x4db6
0x5355: mov rdi,rbx
0x5358: movzx r8d,byte ptr [rsp+0x7d]
0x535e: movzx ebx,byte ptr [rsp+0x7e]
0x5363: movzx r10d,byte ptr [rsp+0x7f]
0x5369: mov r15,qword ptr [rsp+0x80]
0x5371: xor r12d,r12d
0x5374: mov r14,qword ptr [rsp+0x40]
0x5379: mov r13,qword ptr [rsp+0x70]
0x537e: mov r11,qword ptr [rsp+0x30]
0x5383: movzx edx,byte ptr [rsp+0xd]
0x5388: jmp 0x4db6
0x53bb: mov eax,edx
0x53bd: jmp 0x4917
0x54ca: mov eax,edx
0x54cc: mov rbx,qword ptr [rsp+0x48]
0x54d1: test rbx,rbx
0x54d4: je 0x5502
0x54d6: test al,al
0x54d8: je 0x5502
0x54da: movzx ecx,byte ptr [rbx]
0x54dd: mov rax,rbx
0x54e0: test cl,cl
0x54e2: je 0x5502
0x54e4: mov rdx,r15
0x54e7: sub rax,r15
0x54ea: cmp r13,rdx
0x54ed: jbe 0x54f3
0x54ef: mov byte ptr [r14+rdx],cl
0x54f3: add rdx,0x1
0x54f7: movzx ecx,byte ptr [rax+rdx]
0x54fb: test cl,cl
0x54fd: jne 0x54ea
0x54ff: mov r15,rdx
0x5502: cmp r13,r15
0x5505: jbe 0x4fa9
0x550b: mov byte ptr [r14+r15],0x0
0x5510: jmp 0x4fa9
0x5515: cmp dword ptr [rsp+0x8],0x2
0x551a: movzx ebx,byte ptr [rsp+0xf]
0x551f: mov rbp,r11
0x5522: sete al
0x5525: mov byte ptr [rsp+0xd],bl
0x5529: jmp 0x4f59
0x556d: sub rsp,0x8
0x5571: mov r8d,0x5
0x5577: mov rcx,r11
0x557a: push qword ptr [rsp+0x68]
0x557e: push qword ptr [rsp+0x78]
0x5582: mov rdi,r14
0x5585: push qword ptr [rsp+0x38]
0x5589: mov r9d,dword ptr [rsp+0x98]
0x5591: mov rdx,qword ptr [rsp+0x30]
0x5596: mov rsi,qword ptr [rsp+0x70]
0x559b: call 0x43d0
0x55a0: add rsp,0x20
0x55a4: mov r15,rax
0x55a7: jmp 0x4fa9
0x55ac: movzx eax,byte ptr [rsp+0x7c]
0x55b1: jmp 0x54cc
0x55b6: mov dword ptr [rsp+0x8],0x2
0x55be: jmp 0x4f59
0x55c3: call 0x1690
0x55c8: mov byte ptr [rsp+0xd],0x0
0x55cd: jmp 0x5041
0x55da: mov byte ptr [rsp+0xe],0x1
0x55df: xor eax,eax
0x55e1: xor r12d,r12d
0x55e4: mov qword ptr [rsp+0x50],0x0
0x55ed: jmp 0x4b94
0x5604: nop 
0x5606: nop word ptr cs:[rax+rax]
0x56fc: add rsp,0x20
0x5700: mov r11,qword ptr [rsp+0x10]
0x5705: cmp r11,rax
0x5708: ja 0x5771
0x570a: lea rsi,[rax+0x1]
0x570e: lea rax,[rip+0x204a2b]
0x5715: cmp r12,rax
0x5718: mov qword ptr [rbx],rsi
0x571b: je 0x572f
0x571d: mov rdi,r12
0x5720: mov qword ptr [rsp+0x10],rsi
0x5725: call 0x15b0
0x572a: mov rsi,qword ptr [rsp+0x10]
0x572f: mov rdi,rsi
0x5732: mov qword ptr [rsp+0x10],rsi
0x5737: call 0x65a0
0x573c: sub rsp,0x8
0x5740: mov qword ptr [rbx+0x8],rax
0x5744: mov r8d,dword ptr [rbp]
0x5748: push qword ptr [rbp+0x30]
0x574b: push qword ptr [rbp+0x28]
0x574e: mov rcx,r14
0x5751: push r15
0x5753: mov r9d,dword ptr [rsp+0x3c]
0x5758: mov rdi,rax
0x575b: mov rdx,qword ptr [rsp+0x28]
0x5760: mov rsi,qword ptr [rsp+0x30]
0x5765: mov r12,rax
0x5768: call 0x43d0
0x576d: add rsp,0x20
0x5771: mov eax,dword ptr [rsp+0x18]
0x5775: mov dword ptr [r13],eax
0x5779: add rsp,0x28
0x577d: mov rax,r12
0x5780: pop rbx
0x5781: pop rbp
0x5782: pop r12
0x5784: pop r13
0x5786: pop r14
0x5788: pop r15
0x578a: ret 
0x57b1: call 0x15c0
0x57b6: call 0x67f0
0x57bb: nop dword ptr [rax+rax]
0x57c0: push r12
0x57c2: push rbp
0x57c3: push rbx
0x57c4: mov rbx,rdi
0x57c7: call 0x15d0
0x57cc: mov r12d,dword ptr [rax]
0x57cf: mov rbp,rax
0x57d2: lea rax,[rip+0x204a67]
0x57d9: test rbx,rbx
0x57dc: mov esi,0x38
0x57e1: cmove rbx,rax
0x57e5: mov rdi,rbx
0x57e8: call 0x67a0
0x57ed: mov dword ptr [rbp],r12d
0x57f1: pop rbx
0x57f2: pop rbp
0x57f3: pop r12
0x57f5: ret 
0x5800: lea rax,[rip+0x204a39]
0x5807: test rdi,rdi
0x580a: cmove rdi,rax
0x580e: mov eax,dword ptr [rdi]
0x5810: ret 
0x5820: lea rax,[rip+0x204a19]
0x5827: test rdi,rdi
0x582a: cmove rdi,rax
0x582e: mov dword ptr [rdi],esi
0x5830: ret 
0x5840: lea rax,[rip+0x2049f9]
0x5847: test rdi,rdi
0x584a: mov ecx,esi
0x584c: cmove rdi,rax
0x5850: mov eax,esi
0x5852: and ecx,0x1f
0x5855: shr al,0x5
0x5858: movzx eax,al
0x585b: lea rdi,[rdi+rax*4+0x8]
0x5860: mov esi,dword ptr [rdi]
0x5862: mov eax,esi
0x5864: shr eax,cl
0x5866: xor edx,eax
0x5868: and eax,0x1
0x586b: and edx,0x1
0x586e: shl edx,cl
0x5870: xor edx,esi
0x5872: mov dword ptr [rdi],edx
0x5874: ret 
0x5880: lea rax,[rip+0x2049b9]
0x5887: test rdi,rdi
0x588a: cmove rdi,rax
0x588e: mov eax,dword ptr [rdi+0x4]
0x5891: mov dword ptr [rdi+0x4],esi
0x5894: ret 
0x58a0: lea rax,[rip+0x204999]
0x58a7: test rdi,rdi
0x58aa: cmove rdi,rax
0x58ae: test rsi,rsi
0x58b1: mov dword ptr [rdi],0xa
0x58b7: je 0x58c7
0x58b9: test rdx,rdx
0x58bc: je 0x58c7
0x58be: mov qword ptr [rdi+0x28],rsi
0x58c2: mov qword ptr [rdi+0x30],rdx
0x58c6: ret 
0x58c7: sub rsp,0x8
0x58cb: call 0x15c0
0x58d0: push r15
0x58d2: push r14
0x58d4: lea rax,[rip+0x204965]
0x58db: push r13
0x58dd: push r12
0x58df: mov r13,rdi
0x58e2: push rbp
0x58e3: push rbx
0x58e4: mov rbx,r8
0x58e7: mov r14,rsi
0x58ea: mov r15,rdx
0x58ed: sub rsp,0x18
0x58f1: test r8,r8
0x58f4: cmove rbx,rax
0x58f8: mov qword ptr [rsp+0x8],rcx
0x58fd: call 0x15d0
0x5902: mov r12d,dword ptr [rax]
0x5905: mov rbp,rax
0x5908: lea rax,[rbx+0x8]
0x590c: sub rsp,0x8
0x5910: mov r9d,dword ptr [rbx+0x4]
0x5914: push qword ptr [rbx+0x30]
0x5917: mov r8d,dword ptr [rbx]
0x591a: push qword ptr [rbx+0x28]
0x591d: mov rdx,r15
0x5920: push rax
0x5921: mov rcx,qword ptr [rsp+0x28]
0x5926: mov rsi,r14
0x5929: mov rdi,r13
0x592c: call 0x43d0
0x5931: mov dword ptr [rbp],r12d
0x5935: add rsp,0x38
0x5939: pop rbx
0x593a: pop rbp
0x593b: pop r12
0x593d: pop r13
0x593f: pop r14
0x5941: pop r15
0x5943: ret 
0x5950: push r15
0x5952: push r14
0x5954: lea rax,[rip+0x2048e5]
0x595b: push r13
0x595d: push r12
0x595f: mov r12,rdx
0x5962: push rbp
0x5963: push rbx
0x5964: mov rbx,rcx
0x5967: mov r14,rdi
0x596a: mov r15,rsi
0x596d: sub rsp,0x38
0x5971: test rcx,rcx
0x5974: cmove rbx,rax
0x5978: xor ebp,ebp
0x597a: call 0x15d0
0x597f: test r12,r12
0x5982: mov r13,rax
0x5985: mov eax,dword ptr [rax]
0x5987: sete bpl
0x598b: or ebp,dword ptr [rbx+0x4]
0x598e: lea r10,[rbx+0x8]
0x5992: sub rsp,0x8
0x5996: mov r8d,dword ptr [rbx]
0x5999: mov rcx,r15
0x599c: mov dword ptr [rsp+0x14],eax
0x59a0: push qword ptr [rbx+0x30]
0x59a3: mov rdx,r14
0x59a6: push qword ptr [rbx+0x28]
0x59a9: push r10
0x59ab: xor esi,esi
0x59ad: mov r9d,ebp
0x59b0: xor edi,edi
0x59b2: mov qword ptr [rsp+0x40],r10
0x59b7: call 0x43d0
0x59bc: lea rsi,[rax+0x1]
0x59c0: mov qword ptr [rsp+0x48],rax
0x59c5: add rsp,0x20
0x59c9: mov rdi,rsi
0x59cc: mov qword ptr [rsp+0x18],rsi
0x59d1: call 0x65a0
0x59d6: mov qword ptr [rsp+0x10],rax
0x59db: sub rsp,0x8
0x59df: push qword ptr [rbx+0x30]
0x59e2: push qword ptr [rbx+0x28]
0x59e5: mov r10,qword ptr [rsp+0x38]
0x59ea: mov r9d,ebp
0x59ed: mov r8d,dword ptr [rbx]
0x59f0: mov rcx,r15
0x59f3: mov rdx,r14
0x59f6: mov rdi,rax
0x59f9: push r10
0x59fb: mov rsi,qword ptr [rsp+0x38]
0x5a00: call 0x43d0
0x5a05: mov eax,dword ptr [rsp+0x2c]
0x5a09: add rsp,0x20
0x5a0d: test r12,r12
0x5a10: mov dword ptr [r13],eax
0x5a14: je 0x5a1f
0x5a16: mov r11,qword ptr [rsp+0x28]
0x5a1b: mov qword ptr [r12],r11
0x5a1f: mov rax,qword ptr [rsp+0x10]
0x5a24: add rsp,0x38
0x5a28: pop rbx
0x5a29: pop rbp
0x5a2a: pop r12
0x5a2c: pop r13
0x5a2e: pop r14
0x5a30: pop r15
0x5a32: ret 
0x5a40: mov rcx,rdx
0x5a43: xor edx,edx
0x5a45: jmp 0x5950
0x5a50: mov eax,dword ptr [rip+0x204622]
0x5a56: push r12
0x5a58: mov r12,qword ptr [rip+0x204621]
0x5a5f: push rbp
0x5a60: push rbx
0x5a61: cmp eax,0x1
0x5a64: jle 0x5a91
0x5a66: sub eax,0x2
0x5a69: lea rbx,[r12+0x18]
0x5a6e: shl rax,0x4
0x5a72: lea rbp,[r12+rax+0x28]
0x5a77: nop word ptr [rax+rax]
0x5a80: mov rdi,qword ptr [rbx]
0x5a83: add rbx,0x10
0x5a87: call 0x15b0
0x5a8c: cmp rbx,rbp
0x5a8f: jne 0x5a80
0x5a91: mov rdi,qword ptr [r12+0x8]
0x5a96: lea rbx,[rip+0x2046a3]
0x5a9d: cmp rdi,rbx
0x5aa0: je 0x5ab9
0x5aa2: call 0x15b0
0x5aa7: mov qword ptr [rip+0x2045de],0x100
0x5ab2: mov qword ptr [rip+0x2045df],rbx
0x5ab9: lea rbx,[rip+0x2045d0]
0x5ac0: cmp r12,rbx
0x5ac3: je 0x5ad4
0x5ac5: mov rdi,r12
0x5ac8: call 0x15b0
0x5acd: mov qword ptr [rip+0x2045ac],rbx
0x5ad4: pop rbx
0x5ad5: mov dword ptr [rip+0x204599],0x1
0x5adf: pop rbp
0x5ae0: pop r12
0x5ae2: ret 
0x5af0: lea rcx,[rip+0x204749]
0x5af7: mov rdx,-0x1
0x5afe: jmp 0x5610
0x5b10: lea rcx,[rip+0x204729]
0x5b17: jmp 0x5610
0x5b20: lea rcx,[rip+0x204719]
0x5b27: mov rsi,rdi
0x5b2a: mov rdx,-0x1
0x5b31: xor edi,edi
0x5b33: jmp 0x5610
0x5b40: lea rcx,[rip+0x2046f9]
0x5b47: mov rdx,rsi
0x5b4a: mov rsi,rdi
0x5b4d: xor edi,edi
0x5b4f: jmp 0x5610
0x5b60: sub rsp,0x48
0x5b64: mov rax,rdx
0x5b67: mov rdx,qword ptr fs:0x28
0x5b70: mov qword ptr [rsp+0x38],rdx
0x5b75: xor edx,edx
0x5b77: cmp esi,0xa
0x5b7a: je 0x5be4
0x5b7c: mov dword ptr [rsp],esi
0x5b7f: mov rcx,rsp
0x5b82: mov rdx,-0x1
0x5b89: mov rsi,rax
0x5b8c: mov qword ptr [rsp+0x4],0x0
0x5b95: mov qword ptr [rsp+0xc],0x0
0x5b9e: mov qword ptr [rsp+0x14],0x0
0x5ba7: mov qword ptr [rsp+0x1c],0x0
0x5bb0: mov qword ptr [rsp+0x24],0x0
0x5bb9: mov qword ptr [rsp+0x2c],0x0
0x5bc2: mov dword ptr [rsp+0x34],0x0
0x5bca: call 0x5610
0x5bcf: mov rcx,qword ptr [rsp+0x38]
0x5bd4: xor rcx,qword ptr fs:0x28
0x5bdd: jne 0x5be9
0x5bdf: add rsp,0x48
0x5be3: ret 
0x5be4: call 0x15c0
0x5be9: call 0x1690
0x5bee: nop 
0x5bf0: sub rsp,0x48
0x5bf4: mov rax,rdx
0x5bf7: mov rdx,rcx
0x5bfa: mov rcx,qword ptr fs:0x28
0x5c03: mov qword ptr [rsp+0x38],rcx
0x5c08: xor ecx,ecx
0x5c0a: cmp esi,0xa
0x5c0d: je 0x5c70
0x5c0f: mov dword ptr [rsp],esi
0x5c12: mov rcx,rsp
0x5c15: mov rsi,rax
0x5c18: mov qword ptr [rsp+0x4],0x0
0x5c21: mov qword ptr [rsp+0xc],0x0
0x5c2a: mov qword ptr [rsp+0x14],0x0
0x5c33: mov qword ptr [rsp+0x1c],0x0
0x5c3c: mov qword ptr [rsp+0x24],0x0
0x5c45: mov qword ptr [rsp+0x2c],0x0
0x5c4e: mov dword ptr [rsp+0x34],0x0
0x5c56: call 0x5610
0x5c5b: mov rdx,qword ptr [rsp+0x38]
0x5c60: xor rdx,qword ptr fs:0x28
0x5c69: jne 0x5c75
0x5c6b: add rsp,0x48
0x5c6f: ret 
0x5c70: call 0x15c0
0x5c75: call 0x1690
0x5c7a: nop word ptr [rax+rax]
0x5c80: mov rdx,rsi
0x5c83: mov esi,edi
0x5c85: xor edi,edi
0x5c87: jmp 0x5b60
0x5c90: mov rcx,rdx
0x5c93: mov rdx,rsi
0x5c96: mov esi,edi
0x5c98: xor edi,edi
0x5c9a: jmp 0x5bf0
0x5ca0: sub rsp,0x48
0x5ca4: mov ecx,edx
0x5ca6: mov rax,qword ptr fs:0x28
0x5caf: mov qword ptr [rsp+0x38],rax
0x5cb4: xor eax,eax
0x5cb6: mov rax,qword ptr [rip+0x2045b3]
0x5cbd: mov r8,rsp
0x5cc0: and ecx,0x1f
0x5cc3: movdqa xmm0,[rip+0x204575]
0x5ccb: mov qword ptr [rsp+0x30],rax
0x5cd0: mov eax,edx
0x5cd2: movaps [rsp],xmm0
0x5cd6: shr al,0x5
0x5cd9: movzx eax,al
0x5cdc: lea r9,[r8+rax*4+0x8]
0x5ce1: movdqa xmm0,[rip+0x204567]
0x5ce9: movaps [rsp+0x10],xmm0
0x5cee: movdqa xmm0,[rip+0x20456a]
0x5cf6: movaps [rsp+0x20],xmm0
0x5cfb: mov edx,dword ptr [r9]
0x5cfe: mov eax,edx
0x5d00: shr eax,cl
0x5d02: not eax
0x5d04: and eax,0x1
0x5d07: shl eax,cl
0x5d09: mov rcx,r8
0x5d0c: xor eax,edx
0x5d0e: mov rdx,rsi
0x5d11: mov rsi,rdi
0x5d14: mov dword ptr [r9],eax
0x5d17: xor edi,edi
0x5d19: call 0x5610
0x5d1e: mov rsi,qword ptr [rsp+0x38]
0x5d23: xor rsi,qword ptr fs:0x28
0x5d2c: jne 0x5d33
0x5d2e: add rsp,0x48
0x5d32: ret 
0x5d33: call 0x1690
0x5d38: nop dword ptr [rax+rax]
0x5d40: movsx edx,sil
0x5d44: mov rsi,-0x1
0x5d4b: jmp 0x5ca0
0x5d50: mov edx,0x3a
0x5d55: mov rsi,-0x1
0x5d5c: jmp 0x5ca0
0x5d70: mov edx,0x3a
0x5d75: jmp 0x5ca0
0x5def: mov rcx,qword ptr [rsp+0x38]
0x5df4: xor rcx,qword ptr fs:0x28
0x5dfd: jne 0x5e09
0x5dff: add rsp,0x48
0x5e03: ret 
0x5e04: call 0x15c0
0x5e09: call 0x1690
0x5e0e: nop 
0x5e10: sub rsp,0x48
0x5e14: mov r9,rcx
0x5e17: mov rcx,qword ptr [rip+0x204452]
0x5e1e: movdqa xmm0,[rip+0x20441a]
0x5e26: mov rax,qword ptr fs:0x28
0x5e2f: mov qword ptr [rsp+0x38],rax
0x5e34: xor eax,eax
0x5e36: movaps [rsp],xmm0
0x5e3a: test rsi,rsi
0x5e3d: mov qword ptr [rsp+0x30],rcx
0x5e42: mov dword ptr [rsp],0xa
0x5e49: movdqa xmm0,[rip+0x2043ff]
0x5e51: movaps [rsp+0x10],xmm0
0x5e56: movdqa xmm0,[rip+0x204402]
0x5e5e: movaps [rsp+0x20],xmm0
0x5e63: je 0x5e97
0x5e65: test rdx,rdx
0x5e68: je 0x5e97
0x5e6a: mov qword ptr [rsp+0x28],rsi
0x5e6f: mov qword ptr [rsp+0x30],rdx
0x5e74: mov rcx,rsp
0x5e77: mov rdx,r8
0x5e7a: mov rsi,r9
0x5e7d: call 0x5610
0x5e82: mov rdi,qword ptr [rsp+0x38]
0x5e87: xor rdi,qword ptr fs:0x28
0x5e90: jne 0x5e9c
0x5e92: add rsp,0x48
0x5e96: ret 
0x5e97: call 0x15c0
0x5e9c: call 0x1690
0x5ea1: nop dword ptr [rax+rax]
0x5ea6: nop word ptr cs:[rax+rax]
0x5eb0: mov r8,-0x1
0x5eb7: jmp 0x5e10
0x5ec0: mov rcx,rdx
0x5ec3: mov r8,-0x1
0x5eca: mov rdx,rsi
0x5ecd: mov rsi,rdi
0x5ed0: xor edi,edi
0x5ed2: jmp 0x5e10
0x5ee0: mov r8,rcx
0x5ee3: mov rcx,rdx
0x5ee6: mov rdx,rsi
0x5ee9: mov rsi,rdi
0x5eec: xor edi,edi
0x5eee: jmp 0x5e10
0x5f00: lea rcx,[rip+0x204139]
0x5f07: jmp 0x5610
0x5f10: lea rcx,[rip+0x204129]
0x5f17: mov rdx,rsi
0x5f1a: mov rsi,rdi
0x5f1d: xor edi,edi
0x5f1f: jmp 0x5610
0x5f30: lea rcx,[rip+0x204109]
0x5f37: mov rdx,-0x1
0x5f3e: jmp 0x5610
0x5f50: lea rcx,[rip+0x2040e9]
0x5f57: mov rsi,rdi
0x5f5a: mov rdx,-0x1
0x5f61: xor edi,edi
0x5f63: jmp 0x5610
0x60b8: mov r8,rcx
0x60bb: mov rcx,rdx
0x60be: lea rdx,[rip+0x1eaf]
0x60c5: mov esi,0x1
0x60ca: xor eax,eax
0x60cc: call 0x18a0
0x60d1: jmp 0x5fbc
0x62cd: push r12
0x62cf: push r15
0x62d1: push r14
0x62d3: mov r8,qword ptr [rsp+0x20]
0x62d8: mov rcx,rbx
0x62db: mov rdx,rax
0x62de: mov rdi,rbp
0x62e1: mov esi,0x1
0x62e6: xor eax,eax
0x62e8: call 0x18a0
0x62ed: add rsp,0x20
0x62f1: add rsp,0x28
0x62f5: pop rbx
0x62f6: pop rbp
0x62f7: pop r12
0x62f9: pop r13
0x62fb: pop r14
0x62fd: pop r15
0x62ff: ret 
0x6339: push r12
0x633b: push r15
0x633d: push r14
0x633f: mov r9,qword ptr [rsp+0x28]
0x6344: jmp 0x62d3
0x63a0: xor r9d,r9d
0x63a3: cmp qword ptr [r8],0x0
0x63a7: je 0x63bb
0x63a9: nop dword ptr [rax]
0x63b0: add r9,0x1
0x63b4: cmp qword ptr [r8+r9*8],0x0
0x63b9: jne 0x63b0
0x63bb: jmp 0x5f80
0x63c0: sub rsp,0x68
0x63c4: mov r10,r8
0x63c7: xor r9d,r9d
0x63ca: mov rax,qword ptr fs:0x28
0x63d3: mov qword ptr [rsp+0x58],rax
0x63d8: xor eax,eax
0x63da: mov r8,rsp
0x63dd: nop dword ptr [rax]
0x63e0: mov eax,dword ptr [r10]
0x63e3: cmp eax,0x2f
0x63e6: ja 0x642a
0x63e8: mov r11d,eax
0x63eb: add r11,qword ptr [r10+0x10]
0x63ef: add eax,0x8
0x63f2: mov dword ptr [r10],eax
0x63f5: mov rax,qword ptr [r11]
0x63f8: test rax,rax
0x63fb: mov qword ptr [r8+r9*8],rax
0x63ff: je 0x640b
0x6401: add r9,0x1
0x6405: cmp r9,0xa
0x6409: jne 0x63e0
0x640b: call 0x5f80
0x6410: mov rax,qword ptr [rsp+0x58]
0x6415: xor rax,qword ptr fs:0x28
0x641e: jne 0x6425
0x6420: add rsp,0x68
0x6424: ret 
0x6425: call 0x1690
0x642a: mov r11,qword ptr [r10+0x8]
0x642e: lea rax,[r11+0x8]
0x6432: mov qword ptr [r10+0x8],rax
0x6436: jmp 0x63f5
0x6500: call 0x1690
0x650c: mov rax,rbx
0x650f: add rbx,0x8
0x6513: jmp 0x64c6
0x6520: push rbx
0x6521: lea rsi,[rip+0x1a9a]
0x6528: mov edx,0x5
0x652d: xor edi,edi
0x652f: call 0x1660
0x6534: lea rdx,[rip+0x1a9c]
0x653b: mov rsi,rax
0x653e: mov edi,0x1
0x6543: xor eax,eax
0x6545: call 0x1810
0x654a: lea rsi,[rip+0x1a9c]
0x6551: mov edx,0x5
0x6556: xor edi,edi
0x6558: call 0x1660
0x655d: lea rcx,[rip+0xff4]
0x6564: lea rdx,[rip+0x949]
0x656b: mov rsi,rax
0x656e: mov edi,0x1
0x6573: xor eax,eax
0x6575: call 0x1810
0x657a: mov rbx,qword ptr [rip+0x203b27]
0x6581: lea rsi,[rip+0x1c98]
0x6588: xor edi,edi
0x658a: mov edx,0x5
0x658f: call 0x1660
0x6594: mov rsi,rbx
0x6597: mov rdi,rax
0x659a: pop rbx
0x659b: jmp 0x1740
0x65a0: push rbx
0x65a1: mov rbx,rdi
0x65a4: call 0x1790
0x65a9: test rax,rax
0x65ac: jne 0x65b3
0x65ae: test rbx,rbx
0x65b1: jne 0x65b5
0x65b3: pop rbx
0x65b4: ret 
0x65b5: call 0x67f0
0x65ba: nop word ptr [rax+rax]
0x65c0: mov rax,rdi
0x65c3: mul rsi
0x65c6: mov rdi,rax
0x65c9: seto al
0x65cc: test rdi,rdi
0x65cf: js 0x65db
0x65d1: movzx eax,al
0x65d4: test rax,rax
0x65d7: jne 0x65db
0x65d9: jmp 0x65a0
0x65db: sub rsp,0x8
0x65df: call 0x67f0
0x65e4: nop 
0x65e6: nop word ptr cs:[rax+rax]
0x65f0: jmp 0x65a0
0x6609: test rdi,rdi
0x660c: jne 0x6628
0x6628: call 0x15b0
0x662d: xor eax,eax
0x662f: pop rbx
0x6630: ret 
0x6636: nop word ptr cs:[rax+rax]
0x6640: mov rax,rsi
0x6643: mul rdx
0x6646: mov rsi,rax
0x6649: seto al
0x664c: test rsi,rsi
0x664f: js 0x665b
0x6651: movzx eax,al
0x6654: test rax,rax
0x6657: jne 0x665b
0x6659: jmp 0x6600
0x665b: sub rsp,0x8
0x665f: call 0x67f0
0x6664: nop 
0x6666: nop word ptr cs:[rax+rax]
0x6670: test rdi,rdi
0x6673: mov r9,rdx
0x6676: mov rcx,qword ptr [rsi]
0x6679: je 0x66b0
0x667b: xor edx,edx
0x667d: movabsq rax,0x5555555555555554
0x6687: div r9
0x668a: cmp rax,rcx
0x668d: jbe 0x66cb
0x668f: mov rax,rcx
0x6692: shr rax, 1
0x6695: lea rcx,[rax+rcx+0x1]
0x669a: mov qword ptr [rsi],rcx
0x669d: imul rcx,r9
0x66a1: mov rsi,rcx
0x66a4: jmp 0x6600
0x66b0: test rcx,rcx
0x66b3: je 0x66d8
0x66b5: mov rax,rcx
0x66b8: mul r9
0x66bb: seto dl
0x66be: test rax,rax
0x66c1: movzx edx,dl
0x66c4: js 0x66cb
0x66c6: test rdx,rdx
0x66c9: je 0x669a
0x66cb: sub rsp,0x8
0x66cf: call 0x67f0
0x66d4: nop dword ptr [rax]
0x66d8: xor edx,edx
0x66da: mov eax,0x80
0x66df: xor r8d,r8d
0x66e2: div r9
0x66e5: test rax,rax
0x66e8: sete r8b
0x66ec: lea rcx,[r8+rax]
0x66f0: jmp 0x66b5
0x6700: test rdi,rdi
0x6703: mov rax,qword ptr [rsi]
0x6706: je 0x6730
0x6708: movabsq rdx,0x5555555555555553
0x6712: cmp rax,rdx
0x6715: ja 0x6741
0x6717: mov rdx,rax
0x671a: shr rdx, 1
0x671d: lea rax,[rdx+rax+0x1]
0x6722: mov qword ptr [rsi],rax
0x6725: mov rsi,rax
0x6728: jmp 0x6600
0x6730: test rax,rax
0x6733: mov edx,0x80
0x6738: cmove rax,rdx
0x673c: test rax,rax
0x673f: jns 0x6722
0x6741: sub rsp,0x8
0x6745: call 0x67f0
0x674a: nop word ptr [rax+rax]
0x6750: push rbx
0x6751: mov rbx,rdi
0x6754: call 0x65a0
0x6759: mov rdx,rbx
0x675c: xor esi,esi
0x675e: mov rdi,rax
0x6761: pop rbx
0x6762: jmp 0x1700
0x6770: mov rax,rdi
0x6773: sub rsp,0x8
0x6777: mul rsi
0x677a: seto dl
0x677d: test rax,rax
0x6780: js 0x6799
0x6782: movzx edx,dl
0x6785: test rdx,rdx
0x6788: jne 0x6799
0x678a: call 0x1750
0x678f: test rax,rax
0x6792: je 0x6799
0x6794: add rsp,0x8
0x6798: ret 
0x6799: call 0x67f0
0x679e: nop 
0x67a0: push rbp
0x67a1: push rbx
0x67a2: mov rbp,rdi
0x67a5: mov rdi,rsi
0x67a8: mov rbx,rsi
0x67ab: sub rsp,0x8
0x67af: call 0x65a0
0x67b4: add rsp,0x8
0x67b8: mov rdx,rbx
0x67bb: mov rsi,rbp
0x67be: pop rbx
0x67bf: pop rbp
0x67c0: mov rdi,rax
0x67c3: jmp 0x1770
0x67d0: push rbx
0x67d1: mov rbx,rdi
0x67d4: call 0x1680
0x67d9: mov rdi,rbx
0x67dc: lea rsi,[rax+0x1]
0x67e0: pop rbx
0x67e1: jmp 0x67a0
0x6820: call 0x15c0
0x6825: nop word ptr cs:[rax+rax]
0x682f: nop 
0x6901: cmp esi,0x406
0x6907: jne 0x6950
0x6909: mov rax,qword ptr [rsp+0x10]
0x690e: cmp dword ptr [rip+0x203963],0x0
0x6915: mov dword ptr [rsp],0x18
0x691c: mov r12d,dword ptr [rax+0x10]
0x6920: mov edx,r12d
0x6923: js 0x6a53
0x6929: xor eax,eax
0x692b: mov esi,0x406
0x6930: call 0x1610
0x6935: test eax,eax
0x6937: mov ebx,eax
0x6939: js 0x6ac8
0x693f: mov dword ptr [rip+0x20392f],0x1
0x6949: jmp 0x6990
0x6950: cmp esi,0xb
0x6953: je 0x6980
0x6955: jg 0x69b0
0x6957: cmp esi,0x4
0x695a: je 0x6a30
0x6960: jg 0x6a20
0x6966: cmp esi,0x2
0x6969: je 0x6a30
0x696f: jg 0x6980
0x6971: cmp esi,0x1
0x6974: jne 0x69d8
0x6976: nop word ptr cs:[rax+rax]
0x6980: mov edi,ebp
0x6982: xor eax,eax
0x6984: call 0x1610
0x6989: mov ebx,eax
0x698b: nop dword ptr [rax+rax]
0x69b0: cmp esi,0x407
0x69b6: jg 0x6a00
0x69b8: cmp esi,0x406
0x69be: jge 0x6a30
0x69c0: cmp esi,0x401
0x69c6: je 0x6980
0x69c8: cmp esi,0x402
0x69ce: je 0x6a30
0x69d0: cmp esi,0x400
0x69d6: je 0x6a30
0x69d8: mov eax,dword ptr [rsp]
0x69db: cmp eax,0x2f
0x69de: ja 0x6b1a
0x69e4: add rax,qword ptr [rsp+0x10]
0x69e9: mov rdx,qword ptr [rax]
0x69ec: mov edi,ebp
0x69ee: xor eax,eax
0x69f0: call 0x1610
0x69f5: mov ebx,eax
0x69f7: jmp 0x6990
0x6a00: cmp esi,0x409
0x6a06: je 0x6a30
0x6a08: jl 0x6980
0x6a0e: cmp esi,0x40a
0x6a14: jne 0x69d8
0x6a16: jmp 0x6980
0x6a20: cmp esi,0x9
0x6a23: je 0x6980
0x6a29: jg 0x6a30
0x6a2b: cmp esi,0x8
0x6a2e: jne 0x69d8
0x6a30: mov eax,dword ptr [rsp]
0x6a33: cmp eax,0x2f
0x6a36: ja 0x6b24
0x6a3c: add rax,qword ptr [rsp+0x10]
0x6a41: mov edx,dword ptr [rax]
0x6a43: mov edi,ebp
0x6a45: xor eax,eax
0x6a47: call 0x1610
0x6a4c: mov ebx,eax
0x6a4e: jmp 0x6990
0x6a53: xor esi,esi
0x6a55: xor eax,eax
0x6a57: call 0x1610
0x6a5c: test eax,eax
0x6a5e: mov ebx,eax
0x6a60: js 0x6990
0x6a66: cmp dword ptr [rip+0x20380b],-0x1
0x6a6d: jne 0x6990
0x6a73: xor eax,eax
0x6a75: mov esi,0x1
0x6a7a: mov edi,ebx
0x6a7c: call 0x1610
0x6a81: test eax,eax
0x6a83: js 0x6aa1
0x6a85: or eax,0x1
0x6a88: mov esi,0x2
0x6a8d: mov edi,ebx
0x6a8f: mov edx,eax
0x6a91: xor eax,eax
0x6a93: call 0x1610
0x6a98: cmp eax,-0x1
0x6a9b: jne 0x6990
0x6aa1: call 0x15d0
0x6aa6: mov r12d,dword ptr [rax]
0x6aa9: mov rbp,rax
0x6aac: mov edi,ebx
0x6aae: call 0x1710
0x6ab3: mov ebx,0xffffffff
0x6ab8: mov dword ptr [rbp],r12d
0x6abc: jmp 0x6990
0x6ac8: call 0x15d0
0x6acd: cmp dword ptr [rax],0x16
0x6ad0: jne 0x693f
0x6ad6: xor esi,esi
0x6ad8: xor eax,eax
0x6ada: mov edx,r12d
0x6add: mov edi,ebp
0x6adf: call 0x1610
0x6ae4: test eax,eax
0x6ae6: mov ebx,eax
0x6ae8: js 0x6990
0x6aee: mov dword ptr [rip+0x203780],0xffffffff
0x6af8: jmp 0x6a73
0x6afd: call 0x1690
0x6b1a: mov rax,qword ptr [rsp+0x8]
0x6b1f: jmp 0x69e9
0x6b24: mov rax,qword ptr [rsp+0x8]
0x6b29: jmp 0x6a41
0x6bd0: push r13
0x6bd2: push r12
0x6bd4: mov r13,rsi
0x6bd7: push rbp
0x6bd8: push rbx
0x6bd9: mov rbx,rdi
0x6bdc: mov r12,rdx
0x6bdf: sub rsp,0x18
0x6be3: mov rax,qword ptr fs:0x28
0x6bec: mov qword ptr [rsp+0x8],rax
0x6bf1: xor eax,eax
0x6bf3: lea rax,[rsp+0x4]
0x6bf8: test rdi,rdi
0x6bfb: cmove rbx,rax
0x6bff: mov rdi,rbx
0x6c02: call 0x16b0
0x6c07: cmp rax,-0x3
0x6c0b: mov rbp,rax
0x6c0e: jbe 0x6c30
0x6c10: test r12,r12
0x6c13: je 0x6c30
0x6c15: xor edi,edi
0x6c17: call 0x6ce0
0x6c1c: test al,al
0x6c1e: jne 0x6c30
0x6c20: movzx eax,byte ptr [r13]
0x6c25: mov ebp,0x1
0x6c2a: mov dword ptr [rbx],eax
0x6c2c: nop dword ptr [rax]
0x6c30: mov rdx,qword ptr [rsp+0x8]
0x6c35: xor rdx,qword ptr fs:0x28
0x6c3e: mov rax,rbp
0x6c41: jne 0x6c4e
0x6c43: add rsp,0x18
0x6c47: pop rbx
0x6c48: pop rbp
0x6c49: pop r12
0x6c4b: pop r13
0x6c4d: ret 
0x6c4e: call 0x1690
0x6c53: nop word ptr cs:[rax+rax]
0x6c5d: nop dword ptr [rax]
0x6c60: push r12
0x6c62: push rbp
0x6c63: mov rbp,rdi
0x6c66: push rbx
0x6c67: call 0x1600
0x6c6c: mov ebx,dword ptr [rbp]
0x6c6f: mov rdi,rbp
0x6c72: mov r12,rax
0x6c75: call 0x6830
0x6c7a: and ebx,0x20
0x6c7d: test ebx,ebx
0x6c7f: jne 0x6c98
0x6c81: test eax,eax
0x6c83: je 0x6c8f
0x6c85: test r12,r12
0x6c88: mov eax,0xffffffff
0x6c8d: je 0x6cc8
0x6c8f: pop rbx
0x6c90: pop rbp
0x6c91: pop r12
0x6c93: ret 
0x6c98: test eax,eax
0x6c9a: jne 0x6cb8
0x6c9c: call 0x15d0
0x6ca1: mov dword ptr [rax],0x0
0x6ca7: mov eax,0xffffffff
0x6cac: pop rbx
0x6cad: pop rbp
0x6cae: pop r12
0x6cb0: ret 
0x6cb8: pop rbx
0x6cb9: mov eax,0xffffffff
0x6cbe: pop rbp
0x6cbf: pop r12
0x6cc1: ret 
0x6cc8: call 0x15d0
0x6ccd: cmp dword ptr [rax],0x9
0x6cd0: pop rbx
0x6cd1: pop rbp
0x6cd2: pop r12
0x6cd4: setne al
0x6cd7: movzx eax,al
0x6cda: neg eax
0x6cdc: ret 
0x6ce0: sub rsp,0x8
0x6ce4: xor esi,esi
0x6ce6: call 0x1800
0x6ceb: mov rdx,rax
0x6cee: mov eax,0x1
0x6cf3: test rdx,rdx
0x6cf6: je 0x6d15
0x6cf8: lea rdi,[rip+0x15e1]
0x6cff: mov ecx,0x2
0x6d04: mov rsi,rdx
0x6d07: rep cmpsb [rsi],es:[rdi]
0x6d09: seta cl
0x6d0c: sbb cl,0x0
0x6d0f: xor eax,eax
0x6d11: test cl,cl
0x6d13: jne 0x6d20
0x6d15: add rsp,0x8
0x6d19: ret 
0x6d20: lea rdi,[rip+0x15bb]
0x6d27: mov ecx,0x6
0x6d2c: mov rsi,rdx
0x6d2f: rep cmpsb [rsi],es:[rdi]
0x6d31: seta al
0x6d34: sbb al,0x0
0x6d36: test al,al
0x6d38: setne al
0x6d3b: add rsp,0x8
0x6d3f: ret 
0x6d40: sub rsp,0x8
0x6d44: mov edi,0xe
0x6d49: call 0x17b0
0x6d4e: test rax,rax
0x6d51: je 0x6d70
0x6d53: cmp byte ptr [rax],0x0
0x6d56: lea rdx,[rip+0x158b]
0x6d5d: cmove rax,rdx
0x6d61: add rsp,0x8
0x6d65: ret 
0x6d70: lea rax,[rip+0x1571]
0x6d77: add rsp,0x8
0x6d7b: ret 
0x6d80: push r15
0x6d82: push r14
0x6d84: mov r15,rdx
0x6d87: push r13
0x6d89: push r12
0x6d8b: lea r12,[rip+0x202c7e]
0x6d92: push rbp
0x6d93: lea rbp,[rip+0x202c7e]
0x6d9a: push rbx
0x6d9b: mov r13d,edi
0x6d9e: mov r14,rsi
0x6da1: sub rbp,r12
0x6da4: sub rsp,0x8
0x6da8: sar rbp,0x3
0x6dac: call 0x1580
0x6db1: test rbp,rbp
0x6db4: je 0x6dd6
0x6db6: xor ebx,ebx
0x6db8: nop dword ptr [rax+rax]
0x6dc0: mov rdx,r15
0x6dc3: mov rsi,r14
0x6dc6: mov edi,r13d
0x6dc9: call qword ptr [r12+rbx*8]
0x6dcd: add rbx,0x1
0x6dd1: cmp rbp,rbx
0x6dd4: jne 0x6dc0
0x6dd6: add rsp,0x8
0x6dda: pop rbx
0x6ddb: pop rbp
0x6ddc: pop r12
0x6dde: pop r13
0x6de0: pop r14
0x6de2: pop r15
0x6de4: ret 
0x6df0: rep ret 
