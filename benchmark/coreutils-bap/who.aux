0x17c0: sub rsp,0x8
0x17c4: mov rax,qword ptr [rip+0x20980d]
0x17cb: test rax,rax
0x17ce: je 0x17d2
0x17d0: call rax
0x17d2: add rsp,0x8
0x17d6: ret 
0x17e6: jmp qword ptr [rip+0x2095ec]
0x1800: jmp qword ptr [rip+0x2095e2]
0x1870: jmp qword ptr [rip+0x2095aa]
0x1890: jmp qword ptr [rip+0x20959a]
0x18a0: jmp qword ptr [rip+0x209592]
0x18d0: jmp qword ptr [rip+0x20957a]
0x1940: jmp qword ptr [rip+0x209542]
0x1960: jmp qword ptr [rip+0x209532]
0x1980: jmp qword ptr [rip+0x209522]
0x19c0: jmp qword ptr [rip+0x209502]
0x19e0: jmp qword ptr [rip+0x2094f2]
0x1a30: jmp qword ptr [rip+0x2094ca]
0x1a60: jmp qword ptr [rip+0x2094b2]
0x1a70: jmp qword ptr [rip+0x2094aa]
0x1a80: jmp qword ptr [rip+0x2094a2]
0x1b00: jmp qword ptr [rip+0x209462]
0x1b70: jmp qword ptr [rip+0x20942a]
0x1b80: jmp qword ptr [rip+0x209422]
0x1b90: jmp qword ptr [rip+0x20941a]
0x1bc0: jmp qword ptr [rip+0x209422]
0x1f12: lea rsi,[rip+0x678f]
0x1f19: mov rbx,rax
0x1f1c: xor edi,edi
0x1f1e: mov edx,0x5
0x1f23: call 0x18f0
0x1f28: mov rcx,rbx
0x1f2b: mov rdx,rax
0x1f2e: xor esi,esi
0x1f30: xor edi,edi
0x1f32: xor eax,eax
0x1f34: call 0x1af0
0x1f39: jmp 0x1d0f
0x1f6a: hlt 
0x1f6b: nop dword ptr [rax+rax]
0x1f70: lea rdi,[rip+0x209129]
0x1f77: push rbp
0x1f78: lea rax,[rip+0x209121]
0x1f7f: cmp rax,rdi
0x1f82: mov rbp,rsp
0x1f85: je 0x1fa0
0x1f87: mov rax,qword ptr [rip+0x20903a]
0x1f8e: test rax,rax
0x1f91: je 0x1fa0
0x1f93: pop rbp
0x1f94: jmp rax
0x1fa0: pop rbp
0x1fa1: ret 
0x1fb0: lea rdi,[rip+0x2090e9]
0x1fb7: lea rsi,[rip+0x2090e2]
0x1fbe: push rbp
0x1fbf: sub rsi,rdi
0x1fc2: mov rbp,rsp
0x1fc5: sar rsi,0x3
0x1fc9: mov rax,rsi
0x1fcc: shr rax,0x3f
0x1fd0: add rsi,rax
0x1fd3: sar rsi, 1
0x1fd6: je 0x1ff0
0x1fd8: mov rax,qword ptr [rip+0x209001]
0x1fdf: test rax,rax
0x1fe2: je 0x1ff0
0x1fe4: pop rbp
0x1fe5: jmp rax
0x1ff0: pop rbp
0x1ff1: ret 
0x2011: push rbp
0x2012: mov rbp,rsp
0x2015: je 0x2023
0x2017: mov rdi,qword ptr [rip+0x208fea]
0x201e: call 0x1bc0
0x2023: call 0x1f70
0x2028: mov byte ptr [rip+0x209099],0x1
0x202f: pop rbp
0x2030: ret 
0x2040: push rbp
0x2041: mov rbp,rsp
0x2044: pop rbp
0x2045: jmp 0x1fb0
0x2192: add rsp,0x40
0x2196: cmp eax,-0x1
0x2199: je 0x22b8
0x219f: mov rbx,qword ptr [rsp+0x28]
0x21a4: mov rdi,rbx
0x21a7: call 0x1910
0x21ac: add rax,rbx
0x21af: jmp 0x21bb
0x21b8: mov rax,rdx
0x21bb: cmp byte ptr [rax-0x1],0x20
0x21bf: lea rdx,[rax-0x1]
0x21c3: je 0x21b8
0x21c5: mov byte ptr [rax],0x0
0x21c8: mov rdi,qword ptr [rsp+0x28]
0x21cd: call 0x18a0
0x21d2: mov rdi,qword ptr [rsp+0x28]
0x21d7: call 0x1810
0x21dc: mov rax,qword ptr [rsp+0x48]
0x21e1: xor rax,qword ptr fs:0x28
0x21ea: jne 0x22bd
0x21f0: add rsp,0x58
0x21f4: mov rdi,rbp
0x21f7: pop rbx
0x21f8: pop rbp
0x21f9: pop r12
0x21fb: pop r13
0x21fd: pop r14
0x21ff: pop r15
0x2201: jmp 0x1810
0x22b8: call 0x5dc0
0x22bd: call 0x1920
0x22c2: nop dword ptr [rax]
0x22c6: nop word ptr cs:[rax+rax]
0x23b2: call 0x1920
0x23b7: nop word ptr [rax+rax]
0x259c: mov rdi,r13
0x259f: call 0x1810
0x25e8: add rsp,0x20
0x25ec: mov rax,qword ptr [rsp+0x218]
0x25f4: xor rax,qword ptr fs:0x28
0x25fd: jne 0x294e
0x2603: add rsp,0x228
0x260a: pop rbx
0x260b: pop rbp
0x260c: pop r12
0x260e: pop r13
0x2610: pop r14
0x2612: pop r15
0x2614: ret 
0x27aa: mov ecx,edx
0x27ac: mov r10,qword ptr [rip+0x208975]
0x27b3: mov r13,r12
0x27b6: shr ecx,0x10
0x27b9: test edx,0x8080
0x27bf: cmove edx,ecx
0x27c2: lea rcx,[rax+0x2]
0x27c6: mov esi,edx
0x27c8: cmove rax,rcx
0x27cc: add sil,dl
0x27cf: mov rcx,qword ptr [rip+0x20895a]
0x27d6: sbb rax,0x3
0x27da: sub rax,r12
0x2949: jmp 0x27aa
0x294e: call 0x1920
0x2972: nop dword ptr [rax]
0x2976: nop word ptr cs:[rax+rax]
0x2cc4: add rsp,0x20
0x2cc8: jmp 0x2ad8
0x2dc9: add rsp,0x20
0x2dcd: jmp 0x29de
0x2e15: add rsp,0x20
0x2e19: jmp 0x2ad8
0x2ea0: add rsp,0x20
0x2ea4: mov rdi,r13
0x2ea7: call 0x1810
0x2eac: jmp 0x2ad8
0x300f: add rsp,0x30
0x3013: mov rdi,r13
0x3016: call 0x1810
0x301b: jmp 0x2ad8
0x302c: jmp 0x2ad8
0x3116: mov rdx,rbx
0x3119: mov esi,0x3
0x311e: xor edi,edi
0x3120: call 0x5360
0x3125: mov rbx,rax
0x3128: call 0x1840
0x312d: mov esi,dword ptr [rax]
0x312f: lea rdx,[rip+0x5bab]
0x3136: mov rcx,rbx
0x3139: mov edi,0x1
0x313e: xor eax,eax
0x3140: call 0x1af0
0x3145: call 0x1920
0x314a: nop word ptr [rax+rax]
0x3623: call 0x1920
0x3628: nop dword ptr [rax+rax]
0x3640: mov edi,dword ptr [rip+0x207b4a]
0x3646: jmp 0x1960
0x3650: mov qword ptr [rip+0x207b49],rdi
0x3657: ret 
0x3660: mov byte ptr [rip+0x207b31],dil
0x3667: ret 
0x3670: push rbp
0x3671: push rbx
0x3672: sub rsp,0x8
0x3676: mov rdi,qword ptr [rip+0x207a2b]
0x367d: call 0x61c0
0x3682: test eax,eax
0x3684: je 0x369c
0x3686: call 0x1840
0x368b: cmp byte ptr [rip+0x207b06],0x0
0x3692: mov rbx,rax
0x3695: je 0x36b3
0x3697: cmp dword ptr [rax],0x20
0x369a: jne 0x36b3
0x369c: mov rdi,qword ptr [rip+0x207a1d]
0x36a3: call 0x61c0
0x36a8: test eax,eax
0x36aa: jne 0x36f2
0x36ac: add rsp,0x8
0x36b0: pop rbx
0x36b1: pop rbp
0x36b2: ret 
0x36b3: lea rsi,[rip+0x5617]
0x36ba: xor edi,edi
0x36bc: mov edx,0x5
0x36c1: call 0x18f0
0x36c6: mov rdi,qword ptr [rip+0x207ad3]
0x36cd: mov rbp,rax
0x36d0: test rdi,rdi
0x36d3: je 0x36fd
0x36d5: call 0x5330
0x36da: mov esi,dword ptr [rbx]
0x36dc: lea rdx,[rip+0x55fa]
0x36e3: mov rcx,rax
0x36e6: mov r8,rbp
0x36e9: xor edi,edi
0x36eb: xor eax,eax
0x36ed: call 0x1af0
0x36f2: mov edi,dword ptr [rip+0x207930]
0x36f8: call 0x1870
0x36fd: mov esi,dword ptr [rbx]
0x36ff: lea rdx,[rip+0x55db]
0x3706: mov rcx,rax
0x3709: xor edi,edi
0x370b: xor eax,eax
0x370d: call 0x1af0
0x3712: jmp 0x36f2
0x38bf: nop 
0x38c0: push rbp
0x38c1: push rbx
0x38c2: mov rbp,rdi
0x38c5: mov ebx,esi
0x38c7: sub rsp,0x8
0x38cb: call 0x6240
0x38d0: movzx edx,byte ptr [rax]
0x38d3: and edx,-0x21
0x38d6: cmp dl,0x55
0x38d9: je 0x3950
0x38db: cmp dl,0x47
0x38de: je 0x3900
0x38e0: lea rax,[rip+0x545c]
0x38e7: lea rdx,[rip+0x5457]
0x38ee: cmp ebx,0x9
0x38f1: cmovne rax,rdx
0x38f5: add rsp,0x8
0x38f9: pop rbx
0x38fa: pop rbp
0x38fb: ret 
0x3900: movzx edx,byte ptr [rax+0x1]
0x3904: and edx,-0x21
0x3907: cmp dl,0x42
0x390a: jne 0x38e0
0x390c: cmp byte ptr [rax+0x2],0x31
0x3910: jne 0x38e0
0x3912: cmp byte ptr [rax+0x3],0x38
0x3916: jne 0x38e0
0x3918: cmp byte ptr [rax+0x4],0x30
0x391c: jne 0x38e0
0x391e: cmp byte ptr [rax+0x5],0x33
0x3922: jne 0x38e0
0x3924: cmp byte ptr [rax+0x6],0x30
0x3928: jne 0x38e0
0x392a: cmp byte ptr [rax+0x7],0x0
0x392e: jne 0x38e0
0x3930: cmp byte ptr [rbp],0x60
0x3934: lea rax,[rip+0x5401]
0x393b: lea rdx,[rip+0x53fe]
0x3942: cmovne rax,rdx
0x3946: add rsp,0x8
0x394a: pop rbx
0x394b: pop rbp
0x394c: ret 
0x3950: movzx edx,byte ptr [rax+0x1]
0x3954: and edx,-0x21
0x3957: cmp dl,0x54
0x395a: jne 0x38e0
0x395c: movzx edx,byte ptr [rax+0x2]
0x3960: and edx,-0x21
0x3963: cmp dl,0x46
0x3966: jne 0x38e0
0x396c: cmp byte ptr [rax+0x3],0x2d
0x3970: jne 0x38e0
0x3976: cmp byte ptr [rax+0x4],0x38
0x397a: jne 0x38e0
0x3980: cmp byte ptr [rax+0x5],0x0
0x3984: jne 0x38e0
0x398a: cmp byte ptr [rbp],0x60
0x398e: lea rax,[rip+0x539f]
0x3995: lea rdx,[rip+0x539c]
0x399c: cmovne rax,rdx
0x39a0: add rsp,0x8
0x39a4: pop rbx
0x39a5: pop rbp
0x39a6: ret 
0x3a83: xor r11d,r11d
0x3a86: mov rax,rbp
0x3a89: mov r8d,r12d
0x3a8c: mov rbp,r11
0x3a8f: mov r11,rax
0x3a92: nop word ptr [rax+rax]
0x3a98: cmp r11,rbp
0x3a9b: setne r12b
0x3a9f: cmp r11,-0x1
0x3aa3: jne 0x3ab2
0x3aa5: mov rax,qword ptr [rsp+0x10]
0x3aaa: cmp byte ptr [rax+rbp],0x0
0x3aae: setne r12b
0x3ab2: test r12b,r12b
0x3ab5: je 0x4110
0x3abb: cmp dword ptr [rsp+0x8],0x2
0x3ac0: mov rdi,qword ptr [rsp+0x10]
0x3ac5: lea r9,[rdi+rbp]
0x3ac9: setne al
0x3acc: and al,byte ptr [rsp+0xd]
0x3ad0: mov r10d,eax
0x3ad3: je 0x3b80
0x3ad9: mov rax,qword ptr [rsp+0x18]
0x3ade: test rax,rax
0x3ae1: je 0x3f10
0x3ae7: cmp r11,-0x1
0x3aeb: lea rbx,[rbp+rax]
0x3af0: jne 0x3b20
0x3af2: cmp rax,0x1
0x3af6: jbe 0x3b20
0x3af8: mov byte ptr [rsp+0x38],r8b
0x3afd: mov byte ptr [rsp+0x30],r10b
0x3b02: mov qword ptr [rsp+0x28],r9
0x3b07: call 0x1910
0x3b0c: movzx r8d,byte ptr [rsp+0x38]
0x3b12: movzx r10d,byte ptr [rsp+0x30]
0x3b18: mov r11,rax
0x3b1b: mov r9,qword ptr [rsp+0x28]
0x3b20: cmp rbx,r11
0x3b23: mov byte ptr [rsp+0x28],r10b
0x3b28: ja 0x40e0
0x3b2e: mov rdx,qword ptr [rsp+0x18]
0x3b33: mov rsi,qword ptr [rsp+0x48]
0x3b38: mov rdi,r9
0x3b3b: mov qword ptr [rsp+0x40],r11
0x3b40: mov byte ptr [rsp+0x38],r8b
0x3b45: mov qword ptr [rsp+0x30],r9
0x3b4a: call 0x19c0
0x3b4f: test eax,eax
0x3b51: mov r9,qword ptr [rsp+0x30]
0x3b56: movzx r8d,byte ptr [rsp+0x38]
0x3b5c: mov r11,qword ptr [rsp+0x40]
0x3b61: jne 0x40e0
0x3b67: cmp byte ptr [rsp+0xf],0x0
0x3b6c: movzx r10d,byte ptr [rsp+0x28]
0x3b72: jne 0x4af5
0x3b78: nop dword ptr [rax+rax]
0x3b80: movzx ebx,byte ptr [r9]
0x3b84: cmp bl,0x7e
0x3b87: ja 0x3ea8
0x3b8d: lea rcx,[rip+0x5238]
0x3b94: movzx edx,bl
0x3b97: movsxd rax,dword ptr [rcx+rdx*4]
0x3b9b: add rax,rcx
0x3b9e: jmp rax
0x3bd8: cmp byte ptr [rsp+0xd],0x1
0x3bdd: jne 0x3cf2
0x3be3: test dl,dl
0x3be5: jne 0x3cf2
0x3beb: mov rsi,qword ptr [rsp+0x20]
0x3bf0: test rsi,rsi
0x3bf3: je 0x3c09
0x3bf5: mov edx,ebx
0x3bf7: shr dl,0x5
0x3bfa: movzx edx,dl
0x3bfd: mov edx,dword ptr [rsi+rdx*4]
0x3c00: btl edx,ebx
0x3c03: jb 0x3d53
0x3c09: test r10b,r10b
0x3c0c: jne 0x3d53
0x3c12: xor eax,0x1
0x3c15: add rbp,0x1
0x3c19: and eax,r8d
0x3c1c: test al,al
0x3c1e: je 0x3c40
0x3c20: cmp r13,r15
0x3c23: jbe 0x3c2a
0x3c25: mov byte ptr [r14+r15],0x27
0x3c2a: lea rax,[r15+0x1]
0x3c2e: cmp r13,rax
0x3c31: jbe 0x3c39
0x3c33: mov byte ptr [r14+r15+0x1],0x27
0x3c39: add r15,0x2
0x3c3d: xor r8d,r8d
0x3c40: cmp r15,r13
0x3c43: jae 0x3c49
0x3c45: mov byte ptr [r14+r15],bl
0x3c49: movzx edi,byte ptr [rsp+0xe]
0x3c4e: add r15,0x1
0x3c52: mov eax,0x0
0x3c57: test r12b,r12b
0x3c5a: cmove edi,eax
0x3c5d: mov byte ptr [rsp+0xe],dil
0x3c62: jmp 0x3a98
0x3cf2: cmp byte ptr [rsp+0xf],0x0
0x3cf7: jne 0x3beb
0x3cfd: jmp 0x3c09
0x3d53: cmp dword ptr [rsp+0x8],0x2
0x3d58: sete dl
0x3d5b: cmp byte ptr [rsp+0xf],0x0
0x3d60: mov eax,edx
0x3d62: jne 0x45b8
0x3d68: mov eax,r8d
0x3d6b: xor eax,0x1
0x3d6e: and al,dl
0x3d70: je 0x3da1
0x3d72: cmp r13,r15
0x3d75: jbe 0x3d7c
0x3d77: mov byte ptr [r14+r15],0x27
0x3d7c: lea rdx,[r15+0x1]
0x3d80: cmp r13,rdx
0x3d83: jbe 0x3d8b
0x3d85: mov byte ptr [r14+r15+0x1],0x24
0x3d8b: lea rdx,[r15+0x2]
0x3d8f: cmp r13,rdx
0x3d92: jbe 0x3d9a
0x3d94: mov byte ptr [r14+r15+0x2],0x27
0x3d9a: add r15,0x3
0x3d9e: mov r8d,eax
0x3da1: cmp r13,r15
0x3da4: jbe 0x3dab
0x3da6: mov byte ptr [r14+r15],0x5c
0x3dab: add r15,0x1
0x3daf: add rbp,0x1
0x3db3: jmp 0x3c40
0x3ea0: xor r10d,r10d
0x3ea3: nop dword ptr [rax+rax]
0x3ea8: cmp qword ptr [rsp+0x58],0x1
0x3eae: jne 0x4258
0x3eb4: mov qword ptr [rsp+0x38],r11
0x3eb9: mov byte ptr [rsp+0x30],r8b
0x3ebe: mov byte ptr [rsp+0x28],r10b
0x3ec3: call 0x1b90
0x3ec8: mov rcx,qword ptr [rax]
0x3ecb: movzx edx,bl
0x3ece: movzx r10d,byte ptr [rsp+0x28]
0x3ed4: movzx r8d,byte ptr [rsp+0x30]
0x3eda: mov r11,qword ptr [rsp+0x38]
0x3edf: mov edi,0x1
0x3ee4: movzx eax,word ptr [rcx+rdx*2]
0x3ee8: and ax,0x4000
0x3eec: setne r12b
0x3ef0: sete al
0x3ef3: and al,byte ptr [rsp+0xd]
0x3ef7: test al,al
0x3ef9: jne 0x4891
0x3eff: cmp dword ptr [rsp+0x8],0x2
0x3f04: sete dl
0x3f07: jmp 0x3bd8
0x3f10: movzx ebx,byte ptr [r9]
0x3f14: cmp bl,0x7e
0x3f17: ja 0x3ea0
0x3f19: lea rcx,[rip+0x50a8]
0x3f20: movzx edx,bl
0x3f23: movsxd rax,dword ptr [rcx+rdx*4]
0x3f27: add rax,rcx
0x3f2a: jmp rax
0x40e0: xor r10d,r10d
0x40e3: jmp 0x3b80
0x4110: cmp dword ptr [rsp+0x8],0x2
0x4115: movzx ebx,byte ptr [rsp+0xf]
0x411a: mov r12d,r8d
0x411d: mov rbp,r11
0x4120: sete dl
0x4123: mov eax,ebx
0x4125: test r15,r15
0x4128: sete cl
0x412b: and eax,edx
0x412d: and al,cl
0x412f: jne 0x4b96
0x4135: mov eax,ebx
0x4137: xor eax,0x1
0x413a: and dl,al
0x413c: je 0x4aac
0x4142: cmp byte ptr [rsp+0x7c],0x0
0x4147: je 0x4aaa
0x414d: cmp byte ptr [rsp+0xe],0x0
0x4152: jne 0x4b4d
0x4158: test r13,r13
0x415b: sete al
0x415e: cmp qword ptr [rsp+0x50],0x0
0x4164: setne dl
0x4167: and al,dl
0x4169: je 0x4b8c
0x416f: mov r13,qword ptr [rsp+0x50]
0x4174: lea rbx,[rip+0x4bca]
0x417b: mov byte ptr [r14],0x27
0x417f: mov dword ptr [rsp+0x8],0x2
0x4187: mov r15d,0x1
0x418d: mov qword ptr [rsp+0x18],0x1
0x4196: mov byte ptr [rsp+0xf],0x0
0x419b: mov qword ptr [rsp+0x48],rbx
0x41a0: mov byte ptr [rsp+0x7c],al
0x41a4: jmp 0x3a83
0x4258: lea rax,[rsp+0xa0]
0x4260: cmp r11,-0x1
0x4264: mov qword ptr [rsp+0xa0],0x0
0x4270: mov qword ptr [rsp+0x28],rax
0x4275: jne 0x42a4
0x4277: mov rdi,qword ptr [rsp+0x10]
0x427c: mov byte ptr [rsp+0x40],r8b
0x4281: mov byte ptr [rsp+0x38],r10b
0x4286: mov qword ptr [rsp+0x30],r9
0x428b: call 0x1910
0x4290: movzx r8d,byte ptr [rsp+0x40]
0x4296: movzx r10d,byte ptr [rsp+0x38]
0x429c: mov r11,rax
0x429f: mov r9,qword ptr [rsp+0x30]
0x42a4: lea rax,[rsp+0x9c]
0x42ac: xor ecx,ecx
0x42ae: mov byte ptr [rsp+0x7e],bl
0x42b2: mov byte ptr [rsp+0x7d],r8b
0x42b7: mov rbx,rcx
0x42ba: mov qword ptr [rsp+0x88],r9
0x42c2: mov qword ptr [rsp+0x38],rax
0x42c7: mov byte ptr [rsp+0x7f],r10b
0x42cc: mov qword ptr [rsp+0x80],r15
0x42d4: mov qword ptr [rsp+0x40],r14
0x42d9: mov qword ptr [rsp+0x70],r13
0x42de: mov qword ptr [rsp+0x30],r11
0x42e3: mov rax,qword ptr [rsp+0x10]
0x42e8: lea r14,[rbp+rbx]
0x42ed: mov rdx,qword ptr [rsp+0x30]
0x42f2: mov rcx,qword ptr [rsp+0x28]
0x42f7: mov rdi,qword ptr [rsp+0x38]
0x42fc: lea r13,[rax+r14]
0x4300: sub rdx,r14
0x4303: mov rsi,r13
0x4306: call 0x5ec0
0x430b: test rax,rax
0x430e: mov r15,rax
0x4311: je 0x4361
0x4313: cmp rax,-0x1
0x4317: je 0x4935
0x431d: cmp rax,-0x2
0x4321: je 0x48c1
0x4327: cmp dword ptr [rsp+0x8],0x2
0x432c: sete al
0x432f: and al,byte ptr [rsp+0xf]
0x4333: jne 0x44d0
0x4339: mov edi,dword ptr [rsp+0x9c]
0x4340: call 0x1b80
0x4345: mov rdi,qword ptr [rsp+0x28]
0x434a: test eax,eax
0x434c: mov eax,0x0
0x4351: cmove r12d,eax
0x4355: add rbx,r15
0x4358: call 0x1b70
0x435d: test eax,eax
0x435f: je 0x42e3
0x4361: mov edx,r12d
0x4364: mov rdi,rbx
0x4367: movzx r8d,byte ptr [rsp+0x7d]
0x436d: xor edx,0x1
0x4370: movzx ebx,byte ptr [rsp+0x7e]
0x4375: movzx r10d,byte ptr [rsp+0x7f]
0x437b: and dl,byte ptr [rsp+0xd]
0x437f: mov r15,qword ptr [rsp+0x80]
0x4387: mov r14,qword ptr [rsp+0x40]
0x438c: mov r13,qword ptr [rsp+0x70]
0x4391: mov r11,qword ptr [rsp+0x30]
0x4396: cmp rdi,0x1
0x439a: jbe 0x499b
0x43a0: mov rcx,rdi
0x43a3: xor esi,esi
0x43a5: movzx r9d,byte ptr [rsp+0xf]
0x43ab: add rcx,rbp
0x43ae: mov rdi,qword ptr [rsp+0x10]
0x43b3: jmp 0x446e
0x43c0: cmp dword ptr [rsp+0x8],0x2
0x43c5: sete al
0x43c8: test r9b,r9b
0x43cb: jne 0x4880
0x43d1: mov esi,r8d
0x43d4: xor esi,0x1
0x43d7: and al,sil
0x43da: je 0x440b
0x43dc: cmp r13,r15
0x43df: jbe 0x43e6
0x43e1: mov byte ptr [r14+r15],0x27
0x43e6: lea rsi,[r15+0x1]
0x43ea: cmp r13,rsi
0x43ed: jbe 0x43f5
0x43ef: mov byte ptr [r14+r15+0x1],0x24
0x43f5: lea rsi,[r15+0x2]
0x43f9: cmp r13,rsi
0x43fc: jbe 0x4404
0x43fe: mov byte ptr [r14+r15+0x2],0x27
0x4404: add r15,0x3
0x4408: mov r8d,eax
0x440b: cmp r13,r15
0x440e: jbe 0x4415
0x4410: mov byte ptr [r14+r15],0x5c
0x4415: lea rax,[r15+0x1]
0x4419: cmp r13,rax
0x441c: jbe 0x442b
0x441e: mov eax,ebx
0x4420: shr al,0x6
0x4423: add eax,0x30
0x4426: mov byte ptr [r14+r15+0x1],al
0x442b: lea rax,[r15+0x2]
0x442f: cmp r13,rax
0x4432: jbe 0x4444
0x4434: mov eax,ebx
0x4436: shr al,0x3
0x4439: and eax,0x7
0x443c: add eax,0x30
0x443f: mov byte ptr [r14+r15+0x2],al
0x4444: and ebx,0x7
0x4447: add rbp,0x1
0x444b: add r15,0x3
0x444f: add ebx,0x30
0x4452: cmp rbp,rcx
0x4455: jae 0x3c40
0x445b: mov esi,edx
0x445d: cmp r13,r15
0x4460: jbe 0x4466
0x4462: mov byte ptr [r14+r15],bl
0x4466: movzx ebx,byte ptr [rdi+rbp]
0x446a: add r15,0x1
0x446e: test dl,dl
0x4470: jne 0x43c0
0x4476: mov eax,esi
0x4478: xor eax,0x1
0x447b: and eax,r8d
0x447e: test r10b,r10b
0x4481: je 0x4491
0x4483: cmp r13,r15
0x4486: jbe 0x448d
0x4488: mov byte ptr [r14+r15],0x5c
0x448d: add r15,0x1
0x4491: add rbp,0x1
0x4495: cmp rbp,rcx
0x4498: jae 0x3c1c
0x449e: test al,al
0x44a0: je 0x489e
0x44a6: cmp r13,r15
0x44a9: jbe 0x44b0
0x44ab: mov byte ptr [r14+r15],0x27
0x44b0: lea rax,[r15+0x1]
0x44b4: cmp r13,rax
0x44b7: jbe 0x44bf
0x44b9: mov byte ptr [r14+r15+0x1],0x27
0x44bf: add r15,0x2
0x44c3: xor r10d,r10d
0x44c6: xor r8d,r8d
0x44c9: jmp 0x445d
0x44d0: cmp r15,0x1
0x44d4: je 0x4339
0x44da: mov rdi,qword ptr [rsp+0x10]
0x44df: lea rcx,[rdi+r15]
0x44e3: lea rdx,[rdi+r14+0x1]
0x44e8: lea r8,[rcx+r14]
0x44ec: jmp 0x44fd
0x44f0: add rdx,0x1
0x44f4: cmp r8,rdx
0x44f7: je 0x4339
0x44fd: movzx ecx,byte ptr [rdx]
0x4500: sub ecx,0x5b
0x4503: cmp cl,0x21
0x4506: ja 0x44f0
0x4508: mov esi,0x1
0x450d: shl rsi,cl
0x4510: mov rcx,rsi
0x4513: movabsq rsi,0x20000002b
0x451d: test rcx,rsi
0x4520: je 0x44f0
0x4522: mov r14,qword ptr [rsp+0x40]
0x4527: mov r13,qword ptr [rsp+0x70]
0x452c: mov rbp,qword ptr [rsp+0x30]
0x4531: mov dword ptr [rsp+0x8],0x2
0x4539: cmp byte ptr [rsp+0xd],0x0
0x453e: je 0x4550
0x4540: test al,al
0x4542: mov eax,0x4
0x4547: cmove eax,dword ptr [rsp+0x8]
0x454c: mov dword ptr [rsp+0x8],eax
0x4550: sub rsp,0x8
0x4554: mov rcx,rbp
0x4557: mov rsi,r13
0x455a: push qword ptr [rsp+0x68]
0x455e: push qword ptr [rsp+0x78]
0x4562: mov rdi,r14
0x4565: push 0x0
0x4567: mov r9d,dword ptr [rsp+0x98]
0x456f: mov r8d,dword ptr [rsp+0x28]
0x4574: mov rdx,qword ptr [rsp+0x30]
0x4579: and r9d,-0x3
0x457d: call 0x39b0
0x4582: add rsp,0x20
0x4586: mov r15,rax
0x4589: mov rbx,qword ptr [rsp+0xa8]
0x4591: xor rbx,qword ptr fs:0x28
0x459a: mov rax,r15
0x459d: jne 0x4ba3
0x45a3: add rsp,0xb8
0x45aa: pop rbx
0x45ab: pop rbp
0x45ac: pop r12
0x45ae: pop r13
0x45b0: pop r14
0x45b2: pop r15
0x45b4: ret 
0x45b8: mov rbp,r11
0x45bb: jmp 0x4539
0x4621: test r13,r13
0x4624: jne 0x4bba
0x462a: lea rax,[rip+0x4714]
0x4631: mov qword ptr [rsp+0x50],0x0
0x463a: mov byte ptr [rsp+0xe],0x1
0x463f: mov byte ptr [rsp+0x7c],0x0
0x4644: xor r12d,r12d
0x4647: mov byte ptr [rsp+0xf],0x0
0x464c: mov qword ptr [rsp+0x18],0x1
0x4655: mov qword ptr [rsp+0x48],rax
0x465a: mov r15d,0x1
0x4660: mov dword ptr [rsp+0x8],0x2
0x4668: jmp 0x3a83
0x4880: movzx ebx,byte ptr [rsp+0xf]
0x4885: mov rbp,r11
0x4888: mov byte ptr [rsp+0xd],bl
0x488c: jmp 0x4539
0x4891: movzx edx,byte ptr [rsp+0xd]
0x4896: xor r12d,r12d
0x4899: jmp 0x43a0
0x489e: xor r10d,r10d
0x48a1: jmp 0x445d
0x48c1: mov r11,qword ptr [rsp+0x30]
0x48c6: mov rsi,r14
0x48c9: mov rcx,r13
0x48cc: mov rax,rbx
0x48cf: mov rdi,rbx
0x48d2: movzx r8d,byte ptr [rsp+0x7d]
0x48d8: movzx ebx,byte ptr [rsp+0x7e]
0x48dd: mov r9,qword ptr [rsp+0x88]
0x48e5: cmp rsi,r11
0x48e8: movzx r10d,byte ptr [rsp+0x7f]
0x48ee: mov r15,qword ptr [rsp+0x80]
0x48f6: mov r14,qword ptr [rsp+0x40]
0x48fb: mov r13,qword ptr [rsp+0x70]
0x4900: jae 0x4928
0x4902: cmp byte ptr [rcx],0x0
0x4905: jne 0x4917
0x4907: jmp 0x4928
0x4910: cmp byte ptr [r9+rax],0x0
0x4915: je 0x4925
0x4917: add rax,0x1
0x491b: lea rdx,[rbp+rax]
0x4920: cmp r11,rdx
0x4923: ja 0x4910
0x4925: mov rdi,rax
0x4928: movzx edx,byte ptr [rsp+0xd]
0x492d: xor r12d,r12d
0x4930: jmp 0x4396
0x4935: mov rdi,rbx
0x4938: movzx r8d,byte ptr [rsp+0x7d]
0x493e: movzx ebx,byte ptr [rsp+0x7e]
0x4943: movzx r10d,byte ptr [rsp+0x7f]
0x4949: mov r15,qword ptr [rsp+0x80]
0x4951: xor r12d,r12d
0x4954: mov r14,qword ptr [rsp+0x40]
0x4959: mov r13,qword ptr [rsp+0x70]
0x495e: mov r11,qword ptr [rsp+0x30]
0x4963: movzx edx,byte ptr [rsp+0xd]
0x4968: jmp 0x4396
0x499b: mov eax,edx
0x499d: jmp 0x3ef7
0x4aaa: mov eax,edx
0x4aac: mov rbx,qword ptr [rsp+0x48]
0x4ab1: test rbx,rbx
0x4ab4: je 0x4ae2
0x4ab6: test al,al
0x4ab8: je 0x4ae2
0x4aba: movzx ecx,byte ptr [rbx]
0x4abd: mov rax,rbx
0x4ac0: test cl,cl
0x4ac2: je 0x4ae2
0x4ac4: mov rdx,r15
0x4ac7: sub rax,r15
0x4aca: cmp r13,rdx
0x4acd: jbe 0x4ad3
0x4acf: mov byte ptr [r14+rdx],cl
0x4ad3: add rdx,0x1
0x4ad7: movzx ecx,byte ptr [rax+rdx]
0x4adb: test cl,cl
0x4add: jne 0x4aca
0x4adf: mov r15,rdx
0x4ae2: cmp r13,r15
0x4ae5: jbe 0x4589
0x4aeb: mov byte ptr [r14+r15],0x0
0x4af0: jmp 0x4589
0x4af5: cmp dword ptr [rsp+0x8],0x2
0x4afa: movzx ebx,byte ptr [rsp+0xf]
0x4aff: mov rbp,r11
0x4b02: sete al
0x4b05: mov byte ptr [rsp+0xd],bl
0x4b09: jmp 0x4539
0x4b4d: sub rsp,0x8
0x4b51: mov r8d,0x5
0x4b57: mov rcx,r11
0x4b5a: push qword ptr [rsp+0x68]
0x4b5e: push qword ptr [rsp+0x78]
0x4b62: mov rdi,r14
0x4b65: push qword ptr [rsp+0x38]
0x4b69: mov r9d,dword ptr [rsp+0x98]
0x4b71: mov rdx,qword ptr [rsp+0x30]
0x4b76: mov rsi,qword ptr [rsp+0x70]
0x4b7b: call 0x39b0
0x4b80: add rsp,0x20
0x4b84: mov r15,rax
0x4b87: jmp 0x4589
0x4b8c: movzx eax,byte ptr [rsp+0x7c]
0x4b91: jmp 0x4aac
0x4b96: mov dword ptr [rsp+0x8],0x2
0x4b9e: jmp 0x4539
0x4ba3: call 0x1920
0x4ba8: mov byte ptr [rsp+0xd],0x0
0x4bad: jmp 0x4621
0x4bba: mov byte ptr [rsp+0xe],0x1
0x4bbf: xor eax,eax
0x4bc1: xor r12d,r12d
0x4bc4: mov qword ptr [rsp+0x50],0x0
0x4bcd: jmp 0x4174
0x4be4: nop 
0x4be6: nop word ptr cs:[rax+rax]
0x4cdc: add rsp,0x20
0x4ce0: mov r11,qword ptr [rsp+0x10]
0x4ce5: cmp r11,rax
0x4ce8: ja 0x4d51
0x4cea: lea rsi,[rax+0x1]
0x4cee: lea rax,[rip+0x2064cb]
0x4cf5: cmp r12,rax
0x4cf8: mov qword ptr [rbx],rsi
0x4cfb: je 0x4d0f
0x4cfd: mov rdi,r12
0x4d00: mov qword ptr [rsp+0x10],rsi
0x4d05: call 0x1810
0x4d0a: mov rsi,qword ptr [rsp+0x10]
0x4d0f: mov rdi,rsi
0x4d12: mov qword ptr [rsp+0x10],rsi
0x4d17: call 0x5b70
0x4d1c: sub rsp,0x8
0x4d20: mov qword ptr [rbx+0x8],rax
0x4d24: mov r8d,dword ptr [rbp]
0x4d28: push qword ptr [rbp+0x30]
0x4d2b: push qword ptr [rbp+0x28]
0x4d2e: mov rcx,r14
0x4d31: push r15
0x4d33: mov r9d,dword ptr [rsp+0x3c]
0x4d38: mov rdi,rax
0x4d3b: mov rdx,qword ptr [rsp+0x28]
0x4d40: mov rsi,qword ptr [rsp+0x30]
0x4d45: mov r12,rax
0x4d48: call 0x39b0
0x4d4d: add rsp,0x20
0x4d51: mov eax,dword ptr [rsp+0x18]
0x4d55: mov dword ptr [r13],eax
0x4d59: add rsp,0x28
0x4d5d: mov rax,r12
0x4d60: pop rbx
0x4d61: pop rbp
0x4d62: pop r12
0x4d64: pop r13
0x4d66: pop r14
0x4d68: pop r15
0x4d6a: ret 
0x4d91: call 0x1830
0x4d96: call 0x5dc0
0x4d9b: nop dword ptr [rax+rax]
0x4da0: push r12
0x4da2: push rbp
0x4da3: push rbx
0x4da4: mov rbx,rdi
0x4da7: call 0x1840
0x4dac: mov r12d,dword ptr [rax]
0x4daf: mov rbp,rax
0x4db2: lea rax,[rip+0x206507]
0x4db9: test rbx,rbx
0x4dbc: mov esi,0x38
0x4dc1: cmove rbx,rax
0x4dc5: mov rdi,rbx
0x4dc8: call 0x5d70
0x4dcd: mov dword ptr [rbp],r12d
0x4dd1: pop rbx
0x4dd2: pop rbp
0x4dd3: pop r12
0x4dd5: ret 
0x4de0: lea rax,[rip+0x2064d9]
0x4de7: test rdi,rdi
0x4dea: cmove rdi,rax
0x4dee: mov eax,dword ptr [rdi]
0x4df0: ret 
0x4e00: lea rax,[rip+0x2064b9]
0x4e07: test rdi,rdi
0x4e0a: cmove rdi,rax
0x4e0e: mov dword ptr [rdi],esi
0x4e10: ret 
0x4e20: lea rax,[rip+0x206499]
0x4e27: test rdi,rdi
0x4e2a: mov ecx,esi
0x4e2c: cmove rdi,rax
0x4e30: mov eax,esi
0x4e32: and ecx,0x1f
0x4e35: shr al,0x5
0x4e38: movzx eax,al
0x4e3b: lea rdi,[rdi+rax*4+0x8]
0x4e40: mov esi,dword ptr [rdi]
0x4e42: mov eax,esi
0x4e44: shr eax,cl
0x4e46: xor edx,eax
0x4e48: and eax,0x1
0x4e4b: and edx,0x1
0x4e4e: shl edx,cl
0x4e50: xor edx,esi
0x4e52: mov dword ptr [rdi],edx
0x4e54: ret 
0x4e60: lea rax,[rip+0x206459]
0x4e67: test rdi,rdi
0x4e6a: cmove rdi,rax
0x4e6e: mov eax,dword ptr [rdi+0x4]
0x4e71: mov dword ptr [rdi+0x4],esi
0x4e74: ret 
0x4e80: lea rax,[rip+0x206439]
0x4e87: test rdi,rdi
0x4e8a: cmove rdi,rax
0x4e8e: test rsi,rsi
0x4e91: mov dword ptr [rdi],0xa
0x4e97: je 0x4ea7
0x4e99: test rdx,rdx
0x4e9c: je 0x4ea7
0x4e9e: mov qword ptr [rdi+0x28],rsi
0x4ea2: mov qword ptr [rdi+0x30],rdx
0x4ea6: ret 
0x4ea7: sub rsp,0x8
0x4eab: call 0x1830
0x4eb0: push r15
0x4eb2: push r14
0x4eb4: lea rax,[rip+0x206405]
0x4ebb: push r13
0x4ebd: push r12
0x4ebf: mov r13,rdi
0x4ec2: push rbp
0x4ec3: push rbx
0x4ec4: mov rbx,r8
0x4ec7: mov r14,rsi
0x4eca: mov r15,rdx
0x4ecd: sub rsp,0x18
0x4ed1: test r8,r8
0x4ed4: cmove rbx,rax
0x4ed8: mov qword ptr [rsp+0x8],rcx
0x4edd: call 0x1840
0x4ee2: mov r12d,dword ptr [rax]
0x4ee5: mov rbp,rax
0x4ee8: lea rax,[rbx+0x8]
0x4eec: sub rsp,0x8
0x4ef0: mov r9d,dword ptr [rbx+0x4]
0x4ef4: push qword ptr [rbx+0x30]
0x4ef7: mov r8d,dword ptr [rbx]
0x4efa: push qword ptr [rbx+0x28]
0x4efd: mov rdx,r15
0x4f00: push rax
0x4f01: mov rcx,qword ptr [rsp+0x28]
0x4f06: mov rsi,r14
0x4f09: mov rdi,r13
0x4f0c: call 0x39b0
0x4f11: mov dword ptr [rbp],r12d
0x4f15: add rsp,0x38
0x4f19: pop rbx
0x4f1a: pop rbp
0x4f1b: pop r12
0x4f1d: pop r13
0x4f1f: pop r14
0x4f21: pop r15
0x4f23: ret 
0x4f30: push r15
0x4f32: push r14
0x4f34: lea rax,[rip+0x206385]
0x4f3b: push r13
0x4f3d: push r12
0x4f3f: mov r12,rdx
0x4f42: push rbp
0x4f43: push rbx
0x4f44: mov rbx,rcx
0x4f47: mov r14,rdi
0x4f4a: mov r15,rsi
0x4f4d: sub rsp,0x38
0x4f51: test rcx,rcx
0x4f54: cmove rbx,rax
0x4f58: xor ebp,ebp
0x4f5a: call 0x1840
0x4f5f: test r12,r12
0x4f62: mov r13,rax
0x4f65: mov eax,dword ptr [rax]
0x4f67: sete bpl
0x4f6b: or ebp,dword ptr [rbx+0x4]
0x4f6e: lea r10,[rbx+0x8]
0x4f72: sub rsp,0x8
0x4f76: mov r8d,dword ptr [rbx]
0x4f79: mov rcx,r15
0x4f7c: mov dword ptr [rsp+0x14],eax
0x4f80: push qword ptr [rbx+0x30]
0x4f83: mov rdx,r14
0x4f86: push qword ptr [rbx+0x28]
0x4f89: push r10
0x4f8b: xor esi,esi
0x4f8d: mov r9d,ebp
0x4f90: xor edi,edi
0x4f92: mov qword ptr [rsp+0x40],r10
0x4f97: call 0x39b0
0x4f9c: lea rsi,[rax+0x1]
0x4fa0: mov qword ptr [rsp+0x48],rax
0x4fa5: add rsp,0x20
0x4fa9: mov rdi,rsi
0x4fac: mov qword ptr [rsp+0x18],rsi
0x4fb1: call 0x5b70
0x4fb6: mov qword ptr [rsp+0x10],rax
0x4fbb: sub rsp,0x8
0x4fbf: push qword ptr [rbx+0x30]
0x4fc2: push qword ptr [rbx+0x28]
0x4fc5: mov r10,qword ptr [rsp+0x38]
0x4fca: mov r9d,ebp
0x4fcd: mov r8d,dword ptr [rbx]
0x4fd0: mov rcx,r15
0x4fd3: mov rdx,r14
0x4fd6: mov rdi,rax
0x4fd9: push r10
0x4fdb: mov rsi,qword ptr [rsp+0x38]
0x4fe0: call 0x39b0
0x4fe5: mov eax,dword ptr [rsp+0x2c]
0x4fe9: add rsp,0x20
0x4fed: test r12,r12
0x4ff0: mov dword ptr [r13],eax
0x4ff4: je 0x4fff
0x4ff6: mov r11,qword ptr [rsp+0x28]
0x4ffb: mov qword ptr [r12],r11
0x4fff: mov rax,qword ptr [rsp+0x10]
0x5004: add rsp,0x38
0x5008: pop rbx
0x5009: pop rbp
0x500a: pop r12
0x500c: pop r13
0x500e: pop r14
0x5010: pop r15
0x5012: ret 
0x5020: mov rcx,rdx
0x5023: xor edx,edx
0x5025: jmp 0x4f30
0x5030: mov eax,dword ptr [rip+0x206042]
0x5036: push r12
0x5038: mov r12,qword ptr [rip+0x206041]
0x503f: push rbp
0x5040: push rbx
0x5041: cmp eax,0x1
0x5044: jle 0x5071
0x5046: sub eax,0x2
0x5049: lea rbx,[r12+0x18]
0x504e: shl rax,0x4
0x5052: lea rbp,[r12+rax+0x28]
0x5057: nop word ptr [rax+rax]
0x5060: mov rdi,qword ptr [rbx]
0x5063: add rbx,0x10
0x5067: call 0x1810
0x506c: cmp rbx,rbp
0x506f: jne 0x5060
0x5071: mov rdi,qword ptr [r12+0x8]
0x5076: lea rbx,[rip+0x206143]
0x507d: cmp rdi,rbx
0x5080: je 0x5099
0x5082: call 0x1810
0x5087: mov qword ptr [rip+0x205ffe],0x100
0x5092: mov qword ptr [rip+0x205fff],rbx
0x5099: lea rbx,[rip+0x205ff0]
0x50a0: cmp r12,rbx
0x50a3: je 0x50b4
0x50a5: mov rdi,r12
0x50a8: call 0x1810
0x50ad: mov qword ptr [rip+0x205fcc],rbx
0x50b4: pop rbx
0x50b5: mov dword ptr [rip+0x205fb9],0x1
0x50bf: pop rbp
0x50c0: pop r12
0x50c2: ret 
0x50d0: lea rcx,[rip+0x2061e9]
0x50d7: mov rdx,-0x1
0x50de: jmp 0x4bf0
0x50f0: lea rcx,[rip+0x2061c9]
0x50f7: jmp 0x4bf0
0x5100: lea rcx,[rip+0x2061b9]
0x5107: mov rsi,rdi
0x510a: mov rdx,-0x1
0x5111: xor edi,edi
0x5113: jmp 0x4bf0
0x5120: lea rcx,[rip+0x206199]
0x5127: mov rdx,rsi
0x512a: mov rsi,rdi
0x512d: xor edi,edi
0x512f: jmp 0x4bf0
0x5140: sub rsp,0x48
0x5144: mov rax,rdx
0x5147: mov rdx,qword ptr fs:0x28
0x5150: mov qword ptr [rsp+0x38],rdx
0x5155: xor edx,edx
0x5157: cmp esi,0xa
0x515a: je 0x51c4
0x515c: mov dword ptr [rsp],esi
0x515f: mov rcx,rsp
0x5162: mov rdx,-0x1
0x5169: mov rsi,rax
0x516c: mov qword ptr [rsp+0x4],0x0
0x5175: mov qword ptr [rsp+0xc],0x0
0x517e: mov qword ptr [rsp+0x14],0x0
0x5187: mov qword ptr [rsp+0x1c],0x0
0x5190: mov qword ptr [rsp+0x24],0x0
0x5199: mov qword ptr [rsp+0x2c],0x0
0x51a2: mov dword ptr [rsp+0x34],0x0
0x51aa: call 0x4bf0
0x51af: mov rcx,qword ptr [rsp+0x38]
0x51b4: xor rcx,qword ptr fs:0x28
0x51bd: jne 0x51c9
0x51bf: add rsp,0x48
0x51c3: ret 
0x51c4: call 0x1830
0x51c9: call 0x1920
0x51ce: nop 
0x51d0: sub rsp,0x48
0x51d4: mov rax,rdx
0x51d7: mov rdx,rcx
0x51da: mov rcx,qword ptr fs:0x28
0x51e3: mov qword ptr [rsp+0x38],rcx
0x51e8: xor ecx,ecx
0x51ea: cmp esi,0xa
0x51ed: je 0x5250
0x51ef: mov dword ptr [rsp],esi
0x51f2: mov rcx,rsp
0x51f5: mov rsi,rax
0x51f8: mov qword ptr [rsp+0x4],0x0
0x5201: mov qword ptr [rsp+0xc],0x0
0x520a: mov qword ptr [rsp+0x14],0x0
0x5213: mov qword ptr [rsp+0x1c],0x0
0x521c: mov qword ptr [rsp+0x24],0x0
0x5225: mov qword ptr [rsp+0x2c],0x0
0x522e: mov dword ptr [rsp+0x34],0x0
0x5236: call 0x4bf0
0x523b: mov rdx,qword ptr [rsp+0x38]
0x5240: xor rdx,qword ptr fs:0x28
0x5249: jne 0x5255
0x524b: add rsp,0x48
0x524f: ret 
0x5250: call 0x1830
0x5255: call 0x1920
0x525a: nop word ptr [rax+rax]
0x5260: mov rdx,rsi
0x5263: mov esi,edi
0x5265: xor edi,edi
0x5267: jmp 0x5140
0x5270: mov rcx,rdx
0x5273: mov rdx,rsi
0x5276: mov esi,edi
0x5278: xor edi,edi
0x527a: jmp 0x51d0
0x5280: sub rsp,0x48
0x5284: mov ecx,edx
0x5286: mov rax,qword ptr fs:0x28
0x528f: mov qword ptr [rsp+0x38],rax
0x5294: xor eax,eax
0x5296: mov rax,qword ptr [rip+0x206053]
0x529d: mov r8,rsp
0x52a0: and ecx,0x1f
0x52a3: movdqa xmm0,[rip+0x206015]
0x52ab: mov qword ptr [rsp+0x30],rax
0x52b0: mov eax,edx
0x52b2: movaps [rsp],xmm0
0x52b6: shr al,0x5
0x52b9: movzx eax,al
0x52bc: lea r9,[r8+rax*4+0x8]
0x52c1: movdqa xmm0,[rip+0x206007]
0x52c9: movaps [rsp+0x10],xmm0
0x52ce: movdqa xmm0,[rip+0x20600a]
0x52d6: movaps [rsp+0x20],xmm0
0x52db: mov edx,dword ptr [r9]
0x52de: mov eax,edx
0x52e0: shr eax,cl
0x52e2: not eax
0x52e4: and eax,0x1
0x52e7: shl eax,cl
0x52e9: mov rcx,r8
0x52ec: xor eax,edx
0x52ee: mov rdx,rsi
0x52f1: mov rsi,rdi
0x52f4: mov dword ptr [r9],eax
0x52f7: xor edi,edi
0x52f9: call 0x4bf0
0x52fe: mov rsi,qword ptr [rsp+0x38]
0x5303: xor rsi,qword ptr fs:0x28
0x530c: jne 0x5313
0x530e: add rsp,0x48
0x5312: ret 
0x5313: call 0x1920
0x5318: nop dword ptr [rax+rax]
0x5320: movsx edx,sil
0x5324: mov rsi,-0x1
0x532b: jmp 0x5280
0x5330: mov edx,0x3a
0x5335: mov rsi,-0x1
0x533c: jmp 0x5280
0x5350: mov edx,0x3a
0x5355: jmp 0x5280
0x5360: sub rsp,0x48
0x5364: mov rax,rdx
0x5367: mov rdx,qword ptr fs:0x28
0x5370: mov qword ptr [rsp+0x38],rdx
0x5375: xor edx,edx
0x5377: cmp esi,0xa
0x537a: je 0x53e4
0x537c: mov dword ptr [rsp],esi
0x537f: mov rcx,rsp
0x5382: mov rdx,-0x1
0x5389: mov rsi,rax
0x538c: mov qword ptr [rsp+0x4],0x0
0x5395: mov qword ptr [rsp+0xc],0x4000000
0x539e: mov qword ptr [rsp+0x14],0x0
0x53a7: mov qword ptr [rsp+0x1c],0x0
0x53b0: mov qword ptr [rsp+0x24],0x0
0x53b9: mov qword ptr [rsp+0x2c],0x0
0x53c2: mov dword ptr [rsp+0x34],0x0
0x53ca: call 0x4bf0
0x53cf: mov rcx,qword ptr [rsp+0x38]
0x53d4: xor rcx,qword ptr fs:0x28
0x53dd: jne 0x53e9
0x53df: add rsp,0x48
0x53e3: ret 
0x53e4: call 0x1830
0x53e9: call 0x1920
0x53ee: nop 
0x53f0: sub rsp,0x48
0x53f4: mov r9,rcx
0x53f7: mov rcx,qword ptr [rip+0x205ef2]
0x53fe: movdqa xmm0,[rip+0x205eba]
0x5406: mov rax,qword ptr fs:0x28
0x540f: mov qword ptr [rsp+0x38],rax
0x5414: xor eax,eax
0x5416: movaps [rsp],xmm0
0x541a: test rsi,rsi
0x541d: mov qword ptr [rsp+0x30],rcx
0x5422: mov dword ptr [rsp],0xa
0x5429: movdqa xmm0,[rip+0x205e9f]
0x5431: movaps [rsp+0x10],xmm0
0x5436: movdqa xmm0,[rip+0x205ea2]
0x543e: movaps [rsp+0x20],xmm0
0x5443: je 0x5477
0x5445: test rdx,rdx
0x5448: je 0x5477
0x544a: mov qword ptr [rsp+0x28],rsi
0x544f: mov qword ptr [rsp+0x30],rdx
0x5454: mov rcx,rsp
0x5457: mov rdx,r8
0x545a: mov rsi,r9
0x545d: call 0x4bf0
0x5462: mov rdi,qword ptr [rsp+0x38]
0x5467: xor rdi,qword ptr fs:0x28
0x5470: jne 0x547c
0x5472: add rsp,0x48
0x5476: ret 
0x5477: call 0x1830
0x547c: call 0x1920
0x5481: nop dword ptr [rax+rax]
0x5486: nop word ptr cs:[rax+rax]
0x5490: mov r8,-0x1
0x5497: jmp 0x53f0
0x54a0: mov rcx,rdx
0x54a3: mov r8,-0x1
0x54aa: mov rdx,rsi
0x54ad: mov rsi,rdi
0x54b0: xor edi,edi
0x54b2: jmp 0x53f0
0x54c0: mov r8,rcx
0x54c3: mov rcx,rdx
0x54c6: mov rdx,rsi
0x54c9: mov rsi,rdi
0x54cc: xor edi,edi
0x54ce: jmp 0x53f0
0x54e0: lea rcx,[rip+0x205b59]
0x54e7: jmp 0x4bf0
0x54f0: lea rcx,[rip+0x205b49]
0x54f7: mov rdx,rsi
0x54fa: mov rsi,rdi
0x54fd: xor edi,edi
0x54ff: jmp 0x4bf0
0x5510: lea rcx,[rip+0x205b29]
0x5517: mov rdx,-0x1
0x551e: jmp 0x4bf0
0x5688: mov r8,rcx
0x568b: mov rcx,rdx
0x568e: lea rdx,[rip+0x3b7f]
0x5695: mov esi,0x1
0x569a: xor eax,eax
0x569c: call 0x1b40
0x56a1: jmp 0x558c
0x589d: push r12
0x589f: push r15
0x58a1: push r14
0x58a3: mov r8,qword ptr [rsp+0x20]
0x58a8: mov rcx,rbx
0x58ab: mov rdx,rax
0x58ae: mov rdi,rbp
0x58b1: mov esi,0x1
0x58b6: xor eax,eax
0x58b8: call 0x1b40
0x58bd: add rsp,0x20
0x58c1: add rsp,0x28
0x58c5: pop rbx
0x58c6: pop rbp
0x58c7: pop r12
0x58c9: pop r13
0x58cb: pop r14
0x58cd: pop r15
0x58cf: ret 
0x5909: push r12
0x590b: push r15
0x590d: push r14
0x590f: mov r9,qword ptr [rsp+0x28]
0x5914: jmp 0x58a3
0x5970: xor r9d,r9d
0x5973: cmp qword ptr [r8],0x0
0x5977: je 0x598b
0x5979: nop dword ptr [rax]
0x5980: add r9,0x1
0x5984: cmp qword ptr [r8+r9*8],0x0
0x5989: jne 0x5980
0x598b: jmp 0x5550
0x5990: sub rsp,0x68
0x5994: mov r10,r8
0x5997: xor r9d,r9d
0x599a: mov rax,qword ptr fs:0x28
0x59a3: mov qword ptr [rsp+0x58],rax
0x59a8: xor eax,eax
0x59aa: mov r8,rsp
0x59ad: nop dword ptr [rax]
0x59b0: mov eax,dword ptr [r10]
0x59b3: cmp eax,0x2f
0x59b6: ja 0x59fa
0x59b8: mov r11d,eax
0x59bb: add r11,qword ptr [r10+0x10]
0x59bf: add eax,0x8
0x59c2: mov dword ptr [r10],eax
0x59c5: mov rax,qword ptr [r11]
0x59c8: test rax,rax
0x59cb: mov qword ptr [r8+r9*8],rax
0x59cf: je 0x59db
0x59d1: add r9,0x1
0x59d5: cmp r9,0xa
0x59d9: jne 0x59b0
0x59db: call 0x5550
0x59e0: mov rax,qword ptr [rsp+0x58]
0x59e5: xor rax,qword ptr fs:0x28
0x59ee: jne 0x59f5
0x59f0: add rsp,0x68
0x59f4: ret 
0x59f5: call 0x1920
0x59fa: mov r11,qword ptr [r10+0x8]
0x59fe: lea rax,[r11+0x8]
0x5a02: mov qword ptr [r10+0x8],rax
0x5a06: jmp 0x59c5
0x5ad0: call 0x1920
0x5adc: mov rax,rbx
0x5adf: add rbx,0x8
0x5ae3: jmp 0x5a96
0x5af0: push rbx
0x5af1: lea rsi,[rip+0x376a]
0x5af8: mov edx,0x5
0x5afd: xor edi,edi
0x5aff: call 0x18f0
0x5b04: lea rdx,[rip+0x376c]
0x5b0b: mov rsi,rax
0x5b0e: mov edi,0x1
0x5b13: xor eax,eax
0x5b15: call 0x1ac0
0x5b1a: lea rsi,[rip+0x376c]
0x5b21: mov edx,0x5
0x5b26: xor edi,edi
0x5b28: call 0x18f0
0x5b2d: lea rcx,[rip+0x30e4]
0x5b34: lea rdx,[rip+0x2acf]
0x5b3b: mov rsi,rax
0x5b3e: mov edi,0x1
0x5b43: xor eax,eax
0x5b45: call 0x1ac0
0x5b4a: mov rbx,qword ptr [rip+0x205557]
0x5b51: lea rsi,[rip+0x3968]
0x5b58: xor edi,edi
0x5b5a: mov edx,0x5
0x5b5f: call 0x18f0
0x5b64: mov rsi,rbx
0x5b67: mov rdi,rax
0x5b6a: pop rbx
0x5b6b: jmp 0x19d0
0x5b8a: nop word ptr [rax+rax]
0x5b90: mov rax,rdi
0x5b93: mul rsi
0x5b96: mov rdi,rax
0x5b99: seto al
0x5b9c: test rdi,rdi
0x5b9f: js 0x5bab
0x5ba1: movzx eax,al
0x5ba4: test rax,rax
0x5ba7: jne 0x5bab
0x5ba9: jmp 0x5b70
0x5bab: sub rsp,0x8
0x5baf: call 0x5dc0
0x5bb4: nop 
0x5bb6: nop word ptr cs:[rax+rax]
0x5bc0: jmp 0x5b70
0x5c06: nop word ptr cs:[rax+rax]
0x5c10: mov rax,rsi
0x5c13: mul rdx
0x5c16: mov rsi,rax
0x5c19: seto al
0x5c1c: test rsi,rsi
0x5c1f: js 0x5c2b
0x5c21: movzx eax,al
0x5c24: test rax,rax
0x5c27: jne 0x5c2b
0x5c29: jmp 0x5bd0
0x5c2b: sub rsp,0x8
0x5c2f: call 0x5dc0
0x5c34: nop 
0x5c36: nop word ptr cs:[rax+rax]
0x5c40: test rdi,rdi
0x5c43: mov r9,rdx
0x5c46: mov rcx,qword ptr [rsi]
0x5c49: je 0x5c80
0x5c4b: xor edx,edx
0x5c4d: movabsq rax,0x5555555555555554
0x5c57: div r9
0x5c5a: cmp rax,rcx
0x5c5d: jbe 0x5c9b
0x5c5f: mov rax,rcx
0x5c62: shr rax, 1
0x5c65: lea rcx,[rax+rcx+0x1]
0x5c6a: mov qword ptr [rsi],rcx
0x5c6d: imul rcx,r9
0x5c71: mov rsi,rcx
0x5c74: jmp 0x5bd0
0x5c80: test rcx,rcx
0x5c83: je 0x5ca8
0x5c85: mov rax,rcx
0x5c88: mul r9
0x5c8b: seto dl
0x5c8e: test rax,rax
0x5c91: movzx edx,dl
0x5c94: js 0x5c9b
0x5c96: test rdx,rdx
0x5c99: je 0x5c6a
0x5c9b: sub rsp,0x8
0x5c9f: call 0x5dc0
0x5ca4: nop dword ptr [rax]
0x5ca8: xor edx,edx
0x5caa: mov eax,0x80
0x5caf: xor r8d,r8d
0x5cb2: div r9
0x5cb5: test rax,rax
0x5cb8: sete r8b
0x5cbc: lea rcx,[r8+rax]
0x5cc0: jmp 0x5c85
0x5cd0: test rdi,rdi
0x5cd3: mov rax,qword ptr [rsi]
0x5cd6: je 0x5d00
0x5cd8: movabsq rdx,0x5555555555555553
0x5ce2: cmp rax,rdx
0x5ce5: ja 0x5d11
0x5ce7: mov rdx,rax
0x5cea: shr rdx, 1
0x5ced: lea rax,[rdx+rax+0x1]
0x5cf2: mov qword ptr [rsi],rax
0x5cf5: mov rsi,rax
0x5cf8: jmp 0x5bd0
0x5d00: test rax,rax
0x5d03: mov edx,0x80
0x5d08: cmove rax,rdx
0x5d0c: test rax,rax
0x5d0f: jns 0x5cf2
0x5d11: sub rsp,0x8
0x5d15: call 0x5dc0
0x5d1a: nop word ptr [rax+rax]
0x5d20: push rbx
0x5d21: mov rbx,rdi
0x5d24: call 0x5b70
0x5d29: mov rdx,rbx
0x5d2c: xor esi,esi
0x5d2e: mov rdi,rax
0x5d31: pop rbx
0x5d32: jmp 0x19a0
0x5d40: mov rax,rdi
0x5d43: sub rsp,0x8
0x5d47: mul rsi
0x5d4a: seto dl
0x5d4d: test rax,rax
0x5d50: js 0x5d69
0x5d52: movzx edx,dl
0x5d55: test rdx,rdx
0x5d58: jne 0x5d69
0x5d5a: call 0x19e0
0x5d5f: test rax,rax
0x5d62: je 0x5d69
0x5d64: add rsp,0x8
0x5d68: ret 
0x5d69: call 0x5dc0
0x5d6e: nop 
0x5d70: push rbp
0x5d71: push rbx
0x5d72: mov rbp,rdi
0x5d75: mov rdi,rsi
0x5d78: mov rbx,rsi
0x5d7b: sub rsp,0x8
0x5d7f: call 0x5b70
0x5d84: add rsp,0x8
0x5d88: mov rdx,rbx
0x5d8b: mov rsi,rbp
0x5d8e: pop rbx
0x5d8f: pop rbp
0x5d90: mov rdi,rax
0x5d93: jmp 0x1a00
0x5da0: push rbx
0x5da1: mov rbx,rdi
0x5da4: call 0x1910
0x5da9: mov rdi,rbx
0x5dac: lea rsi,[rax+0x1]
0x5db0: pop rbx
0x5db1: jmp 0x5d70
0x5df0: call 0x1830
0x5df5: nop word ptr cs:[rax+rax]
0x5dff: nop 
0x5e1f: movaps [rsp+0x50],xmm0
0x5e24: movaps [rsp+0x60],xmm1
0x5e29: movaps [rsp+0x70],xmm2
0x5e2e: movaps [rsp+0x80],xmm3
0x5e36: movaps [rsp+0x90],xmm4
0x5e3e: movaps [rsp+0xa0],xmm5
0x5e46: movaps [rsp+0xb0],xmm6
0x5e4e: movaps [rsp+0xc0],xmm7
0x5e94: mov rcx,qword ptr [rsp+0x18]
0x5e99: xor rcx,qword ptr fs:0x28
0x5ea2: jne 0x5eac
0x5ea4: add rsp,0xd8
0x5eab: ret 
0x5eac: call 0x1920
0x5eb1: nop word ptr cs:[rax+rax]
0x5ebb: nop dword ptr [rax+rax]
0x5ec0: push r13
0x5ec2: push r12
0x5ec4: mov r13,rsi
0x5ec7: push rbp
0x5ec8: push rbx
0x5ec9: mov rbx,rdi
0x5ecc: mov r12,rdx
0x5ecf: sub rsp,0x18
0x5ed3: mov rax,qword ptr fs:0x28
0x5edc: mov qword ptr [rsp+0x8],rax
0x5ee1: xor eax,eax
0x5ee3: lea rax,[rsp+0x4]
0x5ee8: test rdi,rdi
0x5eeb: cmove rbx,rax
0x5eef: mov rdi,rbx
0x5ef2: call 0x1940
0x5ef7: cmp rax,-0x3
0x5efb: mov rbp,rax
0x5efe: jbe 0x5f20
0x5f00: test r12,r12
0x5f03: je 0x5f20
0x5f05: xor edi,edi
0x5f07: call 0x3720
0x5f0c: test al,al
0x5f0e: jne 0x5f20
0x5f10: movzx eax,byte ptr [r13]
0x5f15: mov ebp,0x1
0x5f1a: mov dword ptr [rbx],eax
0x5f1c: nop dword ptr [rax]
0x5f20: mov rdx,qword ptr [rsp+0x8]
0x5f25: xor rdx,qword ptr fs:0x28
0x5f2e: mov rax,rbp
0x5f31: jne 0x5f3e
0x5f33: add rsp,0x18
0x5f37: pop rbx
0x5f38: pop rbp
0x5f39: pop r12
0x5f3b: pop r13
0x5f3d: ret 
0x5f3e: call 0x1920
0x5f43: nop word ptr cs:[rax+rax]
0x5f4d: nop dword ptr [rax]
0x616b: test rax,rax
0x616e: je 0x61b2
0x6170: mov rdx,qword ptr [rsp]
0x6174: cmp rdx,0x7fffffff
0x617b: ja 0x6198
0x617d: mov qword ptr [rbx],rax
0x6180: mov eax,edx
0x6182: mov rbx,qword ptr [rsp+0x8]
0x6187: xor rbx,qword ptr fs:0x28
0x6190: jne 0x61b9
0x6192: add rsp,0x10
0x6196: pop rbx
0x6197: ret 
0x6198: mov rdi,rax
0x619b: call 0x1810
0x61a0: call 0x1840
0x61a5: mov dword ptr [rax],0x4b
0x61ab: mov eax,0xffffffff
0x61b0: jmp 0x6182
0x61b2: mov eax,0xffffffff
0x61b7: jmp 0x6182
0x61b9: call 0x1920
0x61be: nop 
0x61c0: push r12
0x61c2: push rbp
0x61c3: mov rbp,rdi
0x61c6: push rbx
0x61c7: call 0x1890
0x61cc: mov ebx,dword ptr [rbp]
0x61cf: mov rdi,rbp
0x61d2: mov r12,rax
0x61d5: call 0x6280
0x61da: and ebx,0x20
0x61dd: test ebx,ebx
0x61df: jne 0x61f8
0x61e1: test eax,eax
0x61e3: je 0x61ef
0x61e5: test r12,r12
0x61e8: mov eax,0xffffffff
0x61ed: je 0x6228
0x61ef: pop rbx
0x61f0: pop rbp
0x61f1: pop r12
0x61f3: ret 
0x61f8: test eax,eax
0x61fa: jne 0x6218
0x61fc: call 0x1840
0x6201: mov dword ptr [rax],0x0
0x6207: mov eax,0xffffffff
0x620c: pop rbx
0x620d: pop rbp
0x620e: pop r12
0x6210: ret 
0x6218: pop rbx
0x6219: mov eax,0xffffffff
0x621e: pop rbp
0x621f: pop r12
0x6221: ret 
0x6228: call 0x1840
0x622d: cmp dword ptr [rax],0x9
0x6230: pop rbx
0x6231: pop rbp
0x6232: pop r12
0x6234: setne al
0x6237: movzx eax,al
0x623a: neg eax
0x623c: ret 
0x6240: sub rsp,0x8
0x6244: mov edi,0xe
0x6249: call 0x1a70
0x624e: test rax,rax
0x6251: je 0x6270
0x6253: cmp byte ptr [rax],0x0
0x6256: lea rdx,[rip+0x3323]
0x625d: cmove rax,rdx
0x6261: add rsp,0x8
0x6265: ret 
0x6270: lea rax,[rip+0x3309]
0x6277: add rsp,0x8
0x627b: ret 
0x6280: push r12
0x6282: push rbp
0x6283: push rbx
0x6284: mov rbx,rdi
0x6287: call 0x1a30
0x628c: test eax,eax
0x628e: mov rdi,rbx
0x6291: js 0x62e7
0x6293: call 0x1a80
0x6298: test eax,eax
0x629a: jne 0x62c8
0x629c: mov rdi,rbx
0x629f: call 0x6300
0x62a4: test eax,eax
0x62a6: je 0x62e4
0x62a8: call 0x1840
0x62ad: mov r12d,dword ptr [rax]
0x62b0: mov rdi,rbx
0x62b3: mov rbp,rax
0x62b6: call 0x18d0
0x62bb: test r12d,r12d
0x62be: jne 0x62f0
0x62c0: pop rbx
0x62c1: pop rbp
0x62c2: pop r12
0x62c4: ret 
0x62c8: mov rdi,rbx
0x62cb: call 0x1a30
0x62d0: xor esi,esi
0x62d2: mov edx,0x1
0x62d7: mov edi,eax
0x62d9: call 0x1980
0x62de: cmp rax,-0x1
0x62e2: jne 0x629c
0x62e4: mov rdi,rbx
0x62e7: pop rbx
0x62e8: pop rbp
0x62e9: pop r12
0x62eb: jmp 0x18d0
0x62f0: mov dword ptr [rbp],r12d
0x62f4: mov eax,0xffffffff
0x62f9: jmp 0x62c0
0x6300: test rdi,rdi
0x6303: push rbx
0x6304: mov rbx,rdi
0x6307: je 0x631a
0x6309: call 0x1a80
0x630e: test eax,eax
0x6310: je 0x631a
0x6312: test dword ptr [rbx],0x100
0x6318: jne 0x6328
0x631a: mov rdi,rbx
0x631d: pop rbx
0x631e: jmp 0x1a60
0x6328: mov rdi,rbx
0x632b: mov edx,0x1
0x6330: xor esi,esi
0x6332: call 0x6340
0x6337: mov rdi,rbx
0x633a: pop rbx
0x633b: jmp 0x1a60
0x6340: mov rax,qword ptr [rdi+0x8]
0x6344: cmp qword ptr [rdi+0x10],rax
0x6348: je 0x6350
0x634a: jmp 0x1b00
0x6350: mov rax,qword ptr [rdi+0x20]
0x6354: cmp qword ptr [rdi+0x28],rax
0x6358: jne 0x634a
0x635a: cmp qword ptr [rdi+0x48],0x0
0x635f: jne 0x634a
0x6361: push r12
0x6363: push rbp
0x6364: mov r12d,edx
0x6367: push rbx
0x6368: mov rbp,rsi
0x636b: mov rbx,rdi
0x636e: call 0x1a30
0x6373: mov edx,r12d
0x6376: mov rsi,rbp
0x6379: mov edi,eax
0x637b: call 0x1980
0x6380: cmp rax,-0x1
0x6384: je 0x6392
0x6386: and dword ptr [rbx],-0x11
0x6389: mov qword ptr [rbx+0x90],rax
0x6390: xor eax,eax
0x6392: pop rbx
0x6393: pop rbp
0x6394: pop r12
0x6396: ret 
0x6667: movzx edx,byte ptr [r13+0x48]
0x666c: mov rax,qword ptr [r13+0x50]
0x6670: cmp dl,0x25
0x6673: je 0x6e08
0x6679: cmp rax,-0x1
0x667d: je 0x72c6
0x6683: mov r8,qword ptr [rbp-0x3a8]
0x668a: shl rax,0x5
0x668e: add rax,r8
0x6691: cmp dl,0x6e
0x6694: mov edi,dword ptr [rax]
0x6696: mov dword ptr [rbp-0x3d0],edi
0x669c: je 0x6e80
0x66a2: mov eax,dword ptr [r13+0x10]
0x66a6: mov rdi,qword ptr [rbp-0x3d8]
0x66ad: test al,0x1
0x66af: mov byte ptr [rdi],0x25
0x66b2: lea rbx,[rdi+0x1]
0x66b6: je 0x66c7
0x66b8: mov rdi,qword ptr [rbp-0x3d8]
0x66bf: lea rbx,[rdi+0x2]
0x66c3: mov byte ptr [rdi+0x1],0x27
0x66c7: test al,0x2
0x66c9: je 0x66d2
0x66cb: mov byte ptr [rbx],0x2d
0x66ce: add rbx,0x1
0x66d2: test al,0x4
0x66d4: je 0x66dd
0x66d6: mov byte ptr [rbx],0x2b
0x66d9: add rbx,0x1
0x66dd: test al,0x8
0x66df: je 0x66e8
0x66e1: mov byte ptr [rbx],0x20
0x66e4: add rbx,0x1
0x66e8: test al,0x10
0x66ea: je 0x66f3
0x66ec: mov byte ptr [rbx],0x23
0x66ef: add rbx,0x1
0x66f3: test al,0x40
0x66f5: je 0x66fe
0x66f7: mov byte ptr [rbx],0x49
0x66fa: add rbx,0x1
0x66fe: test al,0x20
0x6700: je 0x6709
0x6702: mov byte ptr [rbx],0x30
0x6705: add rbx,0x1
0x6709: mov rsi,qword ptr [r13+0x18]
0x670d: mov rdx,qword ptr [r13+0x20]
0x6711: cmp rsi,rdx
0x6714: je 0x6746
0x6716: mov rcx,rdx
0x6719: mov rdi,rbx
0x671c: mov qword ptr [rbp-0x3e0],r8
0x6723: sub rcx,rsi
0x6726: mov rdx,rcx
0x6729: mov qword ptr [rbp-0x3c8],rcx
0x6730: call 0x1a00
0x6735: mov rcx,qword ptr [rbp-0x3c8]
0x673c: mov r8,qword ptr [rbp-0x3e0]
0x6743: add rbx,rcx
0x6746: mov rsi,qword ptr [r13+0x30]
0x674a: mov rdx,qword ptr [r13+0x38]
0x674e: cmp rsi,rdx
0x6751: je 0x6783
0x6753: mov rcx,rdx
0x6756: mov rdi,rbx
0x6759: mov qword ptr [rbp-0x3e0],r8
0x6760: sub rcx,rsi
0x6763: mov rdx,rcx
0x6766: mov qword ptr [rbp-0x3c8],rcx
0x676d: call 0x1a00
0x6772: mov rcx,qword ptr [rbp-0x3c8]
0x6779: mov r8,qword ptr [rbp-0x3e0]
0x6780: add rbx,rcx
0x6783: mov edi,dword ptr [rbp-0x3d0]
0x6789: cmp edi,0x10
0x678c: ja 0x67bb
0x678e: mov eax,0x1
0x6793: mov ecx,edi
0x6795: shl rax,cl
0x6798: test eax,0x14180
0x679d: jne 0x67b4
0x679f: test ah,0x10
0x67a2: jne 0x7100
0x67a8: test ah,0x6
0x67ab: je 0x67bb
0x67ad: mov byte ptr [rbx],0x6c
0x67b0: add rbx,0x1
0x67b4: mov byte ptr [rbx],0x6c
0x67b7: add rbx,0x1
0x67bb: movzx eax,byte ptr [r13+0x48]
0x67c0: mov byte ptr [rbx+0x1],0x0
0x67c4: mov byte ptr [rbx],al
0x67c6: mov rax,qword ptr [r13+0x28]
0x67ca: cmp rax,-0x1
0x67ce: je 0x6f00
0x67d4: shl rax,0x5
0x67d8: add rax,r8
0x67db: cmp dword ptr [rax],0x5
0x67de: jne 0x72c6
0x67e4: mov eax,dword ptr [rax+0x10]
0x67e7: mov dword ptr [rbp-0x3e0],0x1
0x67f1: mov dword ptr [rbp-0x3b8],eax
0x67f7: mov rax,qword ptr [r13+0x40]
0x67fb: cmp rax,-0x1
0x67ff: je 0x682c
0x6801: shl rax,0x5
0x6805: add r8,rax
0x6808: cmp dword ptr [r8],0x5
0x680c: jne 0x72c6
0x6812: mov eax,dword ptr [rbp-0x3e0]
0x6818: mov edx,dword ptr [r8+0x10]
0x681c: mov dword ptr [rbp+rax*4-0x3b8],edx
0x6823: lea eax,[rax+0x1]
0x6826: mov dword ptr [rbp-0x3e0],eax
0x682c: mov rax,r14
0x682f: xor edx,edx
0x6831: add rax,0x2
0x6835: jb 0x749c
0x683b: cmp r12,rax
0x683e: jae 0x688b
0x6840: test r12,r12
0x6843: jne 0x7068
0x6849: cmp rax,0xc
0x684d: ja 0x7080
0x6853: mov r12d,0xc
0x6859: cmp r15,qword ptr [rbp-0x3e8]
0x6860: sete dl
0x6863: test r15,r15
0x6866: je 0x70b0
0x686c: test dl,dl
0x686e: jne 0x70b0
0x6874: mov rsi,r12
0x6877: mov rdi,r15
0x687a: call 0x1aa0
0x687f: test rax,rax
0x6882: je 0x6505
0x6888: mov r15,rax
0x688b: mov byte ptr [r15+r14],0x0
0x6890: call 0x1840
0x6895: mov qword ptr [rbp-0x3c8],rax
0x689c: mov eax,dword ptr [rax]
0x689e: mov qword ptr [rbp-0x3f8],rbx
0x68a5: mov dword ptr [rbp-0x424],eax
0x68ab: nop dword ptr [rax+rax]
0x68b0: mov rax,qword ptr [rbp-0x3c8]
0x68b7: mov rbx,r12
0x68ba: mov r10d,0x7fffffff
0x68c0: sub rbx,r14
0x68c3: mov dword ptr [rbp-0x3bc],0xffffffff
0x68cd: cmp rbx,0x7fffffff
0x68d4: mov dword ptr [rax],0x0
0x68da: mov eax,dword ptr [rbp-0x3d0]
0x68e0: cmovbe r10,rbx
0x68e4: cmp eax,0x11
0x68e7: ja 0x72c6
0x68ed: lea rsi,[rip+0x2c94]
0x68f4: movsxd rax,dword ptr [rsi+rax*4]
0x68f8: add rax,rsi
0x68fb: jmp rax
0x6e08: cmp rax,-0x1
0x6e0c: jne 0x72c6
0x6e12: mov rax,r14
0x6e15: add rax,0x1
0x6e19: mov rbx,rax
0x6e1c: jae 0x6ea8
0x6e22: cmp r12,-0x1
0x6e26: jne 0x6505
0x6e2c: mov rbx,r12
0x6e2f: mov byte ptr [r15+r14],0x25
0x6e34: mov r8,qword ptr [r13+0x8]
0x6e38: add r13,0x58
0x6e3c: mov rcx,qword ptr [r13]
0x6e40: add qword ptr [rbp-0x400],0x1
0x6e48: cmp rcx,r8
0x6e4b: jne 0x64e9
0x6e80: mov edx,edi
0x6e82: sub edx,0x12
0x6e85: cmp edx,0x4
0x6e88: ja 0x72c6
0x6e8e: lea rdi,[rip+0x273b]
0x6e95: mov rax,qword ptr [rax+0x10]
0x6e99: movsxd rdx,dword ptr [rdi+rdx*4]
0x6e9d: add rdx,rdi
0x6ea0: jmp rdx
0x6ea8: cmp r12,rax
0x6eab: jae 0x6e2f
0x6ead: test r12,r12
0x6eb0: jne 0x7280
0x6eb6: cmp rax,0xc
0x6eba: ja 0x7292
0x6ec0: mov r12d,0xc
0x6ec6: cmp r15,qword ptr [rbp-0x3e8]
0x6ecd: sete dl
0x6ed0: test r15,r15
0x6ed3: je 0x7140
0x6ed9: test dl,dl
0x6edb: jne 0x7140
0x6ee1: mov rsi,r12
0x6ee4: mov rdi,r15
0x6ee7: call 0x1aa0
0x6eec: test rax,rax
0x6eef: je 0x6feb
0x6ef5: mov r15,rax
0x6ef8: jmp 0x6e2f
0x6f00: mov dword ptr [rbp-0x3e0],0x0
0x6f0a: jmp 0x67f7
0x7068: js 0x6505
0x706e: add r12,r12
0x7071: cmp r12,rax
0x7074: jae 0x6859
0x707a: nop word ptr [rax+rax]
0x7080: test rdx,rdx
0x7083: jne 0x6505
0x7089: cmp rax,-0x1
0x708d: je 0x6505
0x7093: cmp r15,qword ptr [rbp-0x3e8]
0x709a: mov r12,rax
0x709d: sete dl
0x70a0: test r15,r15
0x70a3: jne 0x686c
0x70a9: nop dword ptr [rax]
0x70b0: mov rdi,r12
0x70b3: mov byte ptr [rbp-0x3c8],dl
0x70b9: call 0x1a50
0x70be: test rax,rax
0x70c1: mov rcx,rax
0x70c4: movzx edx,byte ptr [rbp-0x3c8]
0x70cb: je 0x6505
0x70d1: test r14,r14
0x70d4: je 0x7270
0x70da: test dl,dl
0x70dc: je 0x7270
0x70e2: mov rsi,r15
0x70e5: mov rdx,r14
0x70e8: mov rdi,rax
0x70eb: call 0x1a00
0x70f0: mov r15,rax
0x70f3: jmp 0x688b
0x7100: mov byte ptr [rbx],0x4c
0x7103: add rbx,0x1
0x7107: jmp 0x67bb
0x7140: mov rdi,r12
0x7143: mov byte ptr [rbp-0x3c8],dl
0x7149: call 0x1a50
0x714e: test rax,rax
0x7151: mov rcx,rax
0x7154: movzx edx,byte ptr [rbp-0x3c8]
0x715b: je 0x6505
0x7161: test r14,r14
0x7164: je 0x72a4
0x716a: test dl,dl
0x716c: je 0x72a4
0x7172: mov rsi,r15
0x7175: mov rdx,r14
0x7178: mov rdi,rax
0x717b: call 0x1a00
0x7180: mov r15,rax
0x7183: jmp 0x6e2f
0x7270: mov r15,rcx
0x7273: jmp 0x688b
0x7280: js 0x6505
0x7286: add r12,r12
0x7289: cmp r12,rax
0x728c: jae 0x6ec6
0x7292: cmp rax,-0x1
0x7296: je 0x6505
0x729c: mov r12,rax
0x729f: jmp 0x6ec6
0x72a4: mov r15,rcx
0x72a7: jmp 0x6e2f
0x72c6: call 0x1830
0x72cb: nop dword ptr [rax+rax]
0x749c: cmp r12,-0x1
0x74a0: mov edx,0x1
0x74a5: je 0x688b
0x74ab: test r12,r12
0x74ae: je 0x6505
0x74b4: jns 0x7080
0x74ba: jmp 0x6505
0x752d: xor eax,eax
0x752f: ret 
0x7738: mov rdi,rbp
0x7742: lea rax,[rbx+rbx*4]
0x7746: lea rax,[rbx+rax*2]
0x774a: mov qword ptr [rcx+rax*8],rdi
0x774e: mov rax,qword ptr [rsp+0x10]
0x7753: mov qword ptr [r14+0x10],rax
0x7757: mov rax,qword ptr [rsp+0x18]
0x775c: mov qword ptr [r14+0x18],rax
0x7760: xor eax,eax
0x77d2: jmp 0x7c0a
0x7ace: mov rdi,rcx
0x7ad1: call 0x1aa0
0x7ad6: mov rdx,qword ptr [r15+0x8]
0x7ada: mov r8,qword ptr [rsp+0x30]
0x7adf: mov rcx,rax
0x7ae2: mov r10,qword ptr [rsp+0x38]
0x7ae7: mov r9,qword ptr [rsp+0x40]
0x7c0a: mov rax,rbp
0x7c0d: nop dword ptr [rax]
0x7c10: add rax,0x1
0x7c14: movzx edx,byte ptr [rax]
0x7c17: lea ecx,[rdx-0x30]
0x7c1a: cmp cl,0x9
0x7c1d: jbe 0x7c10
0x7c1f: cmp dl,0x24
0x7c22: mov r13,r8
0x7c25: jne 0x780e
0x7c2b: xor edx,edx
0x7c2d: movsx eax,bl
0x7c30: movabsq rdi,0x1999999999999999
0x7c3a: mov rsi,r8
0x7c3d: sub eax,0x30
0x7c40: cmp rdx,rdi
0x7c43: cltq 
0x7c45: ja 0x7c4e
0x7c47: lea rsi,[rdx+rdx*4]
0x7c4b: add rsi,rsi
0x7c4e: mov rcx,rbp
0x7c51: add rax,rsi
0x7c54: movzx ebx,byte ptr [rbp+0x1]
0x7c58: setb sil
0x7c5c: add rbp,0x1
0x7c60: mov rdx,rax
0x7c63: movzx esi,sil
0x7c67: test rsi,rsi
0x7c6a: lea edi,[rbx-0x30]
0x7c6d: jne 0x7ffe
0x7c73: cmp dil,0x9
0x7c77: jbe 0x7c2d
0x7c79: mov r13,rax
0x7c7c: sub r13,0x1
0x7c80: cmp r13,-0x3
0x7c84: ja 0x7f0b
0x7c8a: lea rbp,[rcx+0x2]
0x7c8e: movzx ebx,byte ptr [rcx+0x2]
0x7c92: jmp 0x780e
0x7ffe: cmp dil,0x9
0x8002: ja 0x7f0b
0x8008: movsx eax,bl
0x800b: mov rsi,r8
0x800e: mov rcx,rbp
0x8011: sub eax,0x30
0x8014: cltq 
0x8016: jmp 0x7c51
0x8166: mov rdi,rcx
0x8169: call 0x1aa0
0x816e: mov rdx,qword ptr [r15+0x8]
0x8172: mov r11,qword ptr [rsp+0x30]
0x8177: mov rcx,rax
0x817a: mov r8,qword ptr [rsp+0x38]
0x817f: mov r10,qword ptr [rsp+0x40]
0x8184: mov r9,qword ptr [rsp+0x48]
0x81b4: mov rdi,rcx
0x81b7: call 0x1810
0x83b0: push r15
0x83b2: push r14
0x83b4: mov r15,rdx
0x83b7: push r13
0x83b9: push r12
0x83bb: lea r12,[rip+0x20256e]
0x83c2: push rbp
0x83c3: lea rbp,[rip+0x20256e]
0x83ca: push rbx
0x83cb: mov r13d,edi
0x83ce: mov r14,rsi
0x83d1: sub rbp,r12
0x83d4: sub rsp,0x8
0x83d8: sar rbp,0x3
0x83dc: call 0x17c0
0x83e1: test rbp,rbp
0x83e4: je 0x8406
0x83e6: xor ebx,ebx
0x83e8: nop dword ptr [rax+rax]
0x83f0: mov rdx,r15
0x83f3: mov rsi,r14
0x83f6: mov edi,r13d
0x83f9: call qword ptr [r12+rbx*8]
0x83fd: add rbx,0x1
0x8401: cmp rbp,rbx
0x8404: jne 0x83f0
0x8406: add rsp,0x8
0x840a: pop rbx
0x840b: pop rbp
0x840c: pop r12
0x840e: pop r13
0x8410: pop r14
0x8412: pop r15
0x8414: ret 
0x8420: rep ret 
0x8db7: jmp qword ptr [rip+0x6affffb9]
