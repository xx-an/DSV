0x1990: sub rsp,0x8
0x1994: mov rax,qword ptr [rip+0x219625]
0x199b: test rax,rax
0x199e: je 0x19a2
0x19a0: call rax
0x19a2: add rsp,0x8
0x19a6: ret 
0x19b6: jmp qword ptr [rip+0x2193cc]
0x1a10: jmp qword ptr [rip+0x2193a2]
0x1a20: jmp qword ptr [rip+0x21939a]
0x1a30: jmp qword ptr [rip+0x219392]
0x1a40: jmp qword ptr [rip+0x21938a]
0x1a70: jmp qword ptr [rip+0x219372]
0x1b00: jmp qword ptr [rip+0x21932a]
0x1b30: jmp qword ptr [rip+0x219312]
0x1b40: jmp qword ptr [rip+0x21930a]
0x1b70: jmp qword ptr [rip+0x2192f2]
0x1ba0: jmp qword ptr [rip+0x2192da]
0x1bf0: jmp qword ptr [rip+0x2192b2]
0x1c00: jmp qword ptr [rip+0x2192aa]
0x1c40: jmp qword ptr [rip+0x21928a]
0x1c80: jmp qword ptr [rip+0x21926a]
0x1d10: jmp qword ptr [rip+0x219222]
0x1d20: jmp qword ptr [rip+0x21921a]
0x1da0: jmp qword ptr [rip+0x2191da]
0x1dd0: jmp qword ptr [rip+0x21920a]
0x1e03: nop word ptr cs:[rax+rax]
0x1e0d: nop dword ptr [rax]
0x1eee: mov rbx,rax
0x1ef1: mov rax,qword ptr [rip+0x2191d8]
0x1ef8: mov rdx,qword ptr [rax]
0x1efb: test rdx,rdx
0x1efe: jne 0x1f6a
0x1f00: mov eax,dword ptr [rbx]
0x1f02: test eax,eax
0x1f04: je 0x1f26
0x1f06: sub eax,0x1
0x1f09: jne 0x1f65
0x1f0b: mov rdi,qword ptr [rbx+0x8]
0x1f0f: call 0x1a30
0x1f14: mov rdi,rbx
0x1f17: call 0x21e0
0x1f1c: add rsp,0x8
0x1f20: movzx eax,al
0x1f23: pop rbx
0x1f24: pop rbp
0x1f25: ret 
0x1f26: mov rdi,qword ptr [rip+0x21915b]
0x1f2d: lea rdx,[rbx+0x8]
0x1f31: mov esi,0xa
0x1f36: call 0x1b40
0x1f3b: mov rdi,qword ptr [rip+0x219146]
0x1f42: mov rax,qword ptr [rdi+0x28]
0x1f46: cmp rax,qword ptr [rdi+0x30]
0x1f4a: jae 0x1f59
0x1f4c: lea rdx,[rax+0x1]
0x1f50: mov qword ptr [rdi+0x28],rdx
0x1f54: mov byte ptr [rax],0xa
0x1f57: jmp 0x1f14
0x1f59: mov esi,0xa
0x1f5e: call 0x1b10
0x1f63: jmp 0x1f14
0x1f65: call 0x19e0
0x1f6a: mov esi,0x8
0x1f6f: xor edi,edi
0x1f71: call 0x60a0
0x1f76: lea rsi,[rip+0x13fdb]
0x1f7d: mov rbx,rax
0x1f80: mov edx,0x5
0x1f85: xor edi,edi
0x1f87: call 0x1a90
0x1f8c: mov rcx,rbx
0x1f8f: mov rdx,rax
0x1f92: xor esi,esi
0x1f94: mov edi,0x2
0x1f99: xor eax,eax
0x1f9b: call 0x1d00
0x1fc1: mov edi,0x2
0x1fc6: call 0x2330
0x1fcb: nop dword ptr [rax+rax]
0x1ffa: hlt 
0x1ffb: nop dword ptr [rax+rax]
0x2000: lea rdi,[rip+0x219079]
0x2007: push rbp
0x2008: lea rax,[rip+0x219071]
0x200f: cmp rax,rdi
0x2012: mov rbp,rsp
0x2015: je 0x2030
0x2017: mov rax,qword ptr [rip+0x218f82]
0x201e: test rax,rax
0x2021: je 0x2030
0x2023: pop rbp
0x2024: jmp rax
0x2030: pop rbp
0x2031: ret 
0x2040: lea rdi,[rip+0x219039]
0x2047: lea rsi,[rip+0x219032]
0x204e: push rbp
0x204f: sub rsi,rdi
0x2052: mov rbp,rsp
0x2055: sar rsi,0x3
0x2059: mov rax,rsi
0x205c: shr rax,0x3f
0x2060: add rsi,rax
0x2063: sar rsi, 1
0x2066: je 0x2080
0x2068: mov rax,qword ptr [rip+0x218f69]
0x206f: test rax,rax
0x2072: je 0x2080
0x2074: pop rbp
0x2075: jmp rax
0x2080: pop rbp
0x2081: ret 
0x20a1: push rbp
0x20a2: mov rbp,rsp
0x20a5: je 0x20b3
0x20a7: mov rdi,qword ptr [rip+0x218f5a]
0x20ae: call 0x1dd0
0x20b3: call 0x2000
0x20b8: mov byte ptr [rip+0x219009],0x1
0x20bf: pop rbp
0x20c0: ret 
0x20d0: push rbp
0x20d1: mov rbp,rsp
0x20d4: pop rbp
0x20d5: jmp 0x2040
0x2130: lea rsi,[rip+0x134b1]
0x2137: mov rbx,rax
0x213a: mov edx,0x5
0x213f: xor edi,edi
0x2141: call 0x1a90
0x2146: mov rcx,rbx
0x2149: mov rdx,rax
0x214c: xor esi,esi
0x214e: mov edi,0x2
0x2153: xor eax,eax
0x2155: call 0x1d00
0x215a: nop word ptr [rax+rax]
0x2247: nop word ptr [rax+rax]
0x232d: nop dword ptr [rax]
0x235f: lea rsi,[rip+0x132ca]
0x2366: xor edi,edi
0x2368: call 0x1a90
0x236d: mov rdi,qword ptr [rip+0x218d4c]
0x2374: mov rdx,rax
0x2377: mov rcx,rbx
0x237a: mov esi,0x1
0x237f: xor eax,eax
0x2381: call 0x1d80
0x2712: jmp 0x23d0
0x2bd2: call 0x1ad0
0x2d4c: lea rsi,[rip+0x131d5]
0x2d53: mov rbx,rax
0x2d56: mov edx,0x5
0x2d5b: xor edi,edi
0x2d5d: call 0x1a90
0x2d62: mov rcx,rbx
0x2d65: mov rdx,rax
0x2d68: xor esi,esi
0x2d6a: mov edi,0x2
0x2d6f: xor eax,eax
0x2d71: call 0x1d00
0x2d76: nop word ptr cs:[rax+rax]
0x2f98: nop dword ptr [rax+rax]
0x2fb3: mov rdi,r12
0x2fb6: mov rbx,rax
0x2fb9: call 0x22e0
0x2fbe: mov rdi,rbx
0x2fc1: call 0x22e0
0x2fc6: mov r13,qword ptr [rbx+0x8]
0x2fca: cmp byte ptr [r13],0x0
0x2fcf: jne 0x3040
0x2fd1: xor ebp,ebp
0x2fd3: mov edi,0x18
0x2fd8: call 0x6dc0
0x2fdd: lea rdi,[rax+0x8]
0x2fe1: mov dword ptr [rax],0x0
0x2fe7: mov rsi,rbp
0x2fea: mov r13,rax
0x2fed: call 0x1cc0
0x2ff2: mov rdi,r12
0x2ff5: call 0x21a0
0x2ffa: mov rdi,rbx
0x2ffd: call 0x21a0
0x3002: jmp 0x2da2
0x3040: mov r14,qword ptr [r12+0x8]
0x3045: call 0x1aa0
0x304a: cmp rax,0x1
0x304e: ja 0x3070
0x3050: mov rsi,r13
0x3053: mov rdi,r14
0x3056: call 0x1b70
0x305b: cmp byte ptr [r14+rax],0x0
0x3060: je 0x2fd1
0x3066: lea rbp,[rax+0x1]
0x306a: jmp 0x2fd3
0x3070: mov qword ptr [rsp+0x40],r14
0x3075: lea r14,[rsp+0x70]
0x307a: mov byte ptr [rsp+0x30],0x0
0x307f: xor ebp,ebp
0x3081: cmp byte ptr [rsp+0x30],0x0
0x3086: mov qword ptr [rsp+0x34],0x0
0x308f: lea rax,[r14+0x24]
0x3093: mov byte ptr [rsp+0x3c],0x0
0x3098: mov qword ptr [rsp],rax
0x309c: lea rax,[rsp+0x30]
0x30a1: mov qword ptr [rsp+0x10],rax
0x30a6: jne 0x312c
0x30ac: mov rdi,qword ptr [rsp+0x40]
0x30b1: lea rsi,[rip+0x130e8]
0x30b8: movzx edx,byte ptr [rdi]
0x30bb: mov eax,edx
0x30bd: shr al,0x5
0x30c0: and eax,0x7
0x30c3: mov eax,dword ptr [rsi+rax*4]
0x30c6: btl eax,edx
0x30c9: jae 0x33ea
0x30cf: mov qword ptr [rsp+0x48],0x1
0x30d8: movsx eax,byte ptr [rdi]
0x30db: mov byte ptr [rsp+0x50],0x1
0x30e0: mov byte ptr [rsp+0x3c],0x1
0x30e5: test eax,eax
0x30e7: mov dword ptr [rsp+0x54],eax
0x30eb: je 0x2fd1
0x30f1: add rbp,0x1
0x30f5: movsx esi,byte ptr [rdi]
0x30f8: mov qword ptr [rsp+0x8],rdi
0x30fd: mov rdi,r13
0x3100: call 0x42a0
0x3105: test rax,rax
0x3108: jne 0x2fd3
0x310e: mov rdx,qword ptr [rsp+0x8]
0x3113: mov edi,0x1
0x3118: add rdi,rdx
0x311b: cmp byte ptr [rsp+0x30],0x0
0x3120: mov byte ptr [rsp+0x3c],0x0
0x3125: mov qword ptr [rsp+0x40],rdi
0x312a: je 0x30ac
0x312c: call 0x1aa0
0x3131: mov r8,qword ptr [rsp+0x40]
0x3136: mov rsi,rax
0x3139: mov rdi,r8
0x313c: mov qword ptr [rsp+0x8],r8
0x3141: call 0x64b0
0x3146: mov rsi,qword ptr [rsp+0x10]
0x314b: mov r8,qword ptr [rsp+0x8]
0x3150: mov rdx,rax
0x3153: lea rcx,[rsi+0x4]
0x3157: lea rdi,[rsi+0x24]
0x315b: mov rsi,r8
0x315e: call 0x7050
0x3163: cmp rax,-0x1
0x3167: mov qword ptr [rsp+0x48],rax
0x316c: je 0x340a
0x3172: cmp rax,-0x2
0x3176: je 0x3698
0x317c: test rax,rax
0x317f: jne 0x31a4
0x3181: mov rdi,qword ptr [rsp+0x40]
0x3186: mov qword ptr [rsp+0x48],0x1
0x318f: cmp byte ptr [rdi],0x0
0x3192: jne 0x37a9
0x3198: mov esi,dword ptr [rsp+0x54]
0x319c: test esi,esi
0x319e: jne 0x37a4
0x31a4: mov rax,qword ptr [rsp+0x10]
0x31a9: mov byte ptr [rsp+0x50],0x1
0x31ae: lea rdi,[rax+0x4]
0x31b2: call 0x1d90
0x31b7: test eax,eax
0x31b9: je 0x36ff
0x31bf: mov byte ptr [rsp+0x30],0x0
0x31c4: mov byte ptr [rsp+0x3c],0x1
0x31c9: mov ecx,dword ptr [rsp+0x54]
0x31cd: test ecx,ecx
0x31cf: je 0x2fd1
0x31d5: add rbp,0x1
0x31d9: cmp qword ptr [rsp+0x48],0x1
0x31df: jne 0x31f0
0x31e1: mov rdi,qword ptr [rsp+0x40]
0x31e6: jmp 0x30f5
0x31f0: mov qword ptr [rsp+0x80],r13
0x31f8: mov byte ptr [rsp+0x70],0x0
0x31fd: mov qword ptr [r14+0x4],0x0
0x3205: mov byte ptr [rsp+0x7c],0x0
0x320a: jmp 0x3292
0x3210: mov rcx,qword ptr [rsp+0x80]
0x3218: lea rsi,[rip+0x12f81]
0x321f: movzx edx,byte ptr [rcx]
0x3222: mov eax,edx
0x3224: shr al,0x5
0x3227: and eax,0x7
0x322a: mov eax,dword ptr [rsi+rax*4]
0x322d: btl eax,edx
0x3230: jae 0x3390
0x3236: mov qword ptr [rsp+0x88],0x1
0x3242: movsx eax,byte ptr [rcx]
0x3245: mov byte ptr [rsp+0x90],0x1
0x324d: mov byte ptr [rsp+0x7c],0x1
0x3252: mov dword ptr [rsp+0x94],eax
0x3259: mov eax,dword ptr [rsp+0x94]
0x3260: test eax,eax
0x3262: je 0x342b
0x3268: cmp byte ptr [rsp+0x50],0x0
0x326d: je 0x3359
0x3273: cmp dword ptr [rsp+0x54],eax
0x3277: je 0x2fd3
0x327d: mov r15,qword ptr [rsp+0x88]
0x3285: add qword ptr [rsp+0x80],r15
0x328d: mov byte ptr [rsp+0x7c],0x0
0x3292: cmp byte ptr [rsp+0x70],0x0
0x3297: je 0x3210
0x329d: call 0x1aa0
0x32a2: mov r15,qword ptr [rsp+0x80]
0x32aa: mov rsi,rax
0x32ad: mov rdi,r15
0x32b0: call 0x64b0
0x32b5: mov rdi,qword ptr [rsp]
0x32b9: lea rcx,[r14+0x4]
0x32bd: mov rdx,rax
0x32c0: mov rsi,r15
0x32c3: call 0x7050
0x32c8: cmp rax,-0x1
0x32cc: mov qword ptr [rsp+0x88],rax
0x32d4: je 0x3340
0x32d6: cmp rax,-0x2
0x32da: je 0x33b0
0x32e0: test rax,rax
0x32e3: jne 0x3311
0x32e5: mov rax,qword ptr [rsp+0x80]
0x32ed: mov qword ptr [rsp+0x88],0x1
0x32f9: cmp byte ptr [rax],0x0
0x32fc: jne 0x37a9
0x3302: mov edi,dword ptr [rsp+0x94]
0x3309: test edi,edi
0x330b: jne 0x37a4
0x3311: lea rdi,[r14+0x4]
0x3315: mov byte ptr [rsp+0x90],0x1
0x331d: call 0x1d90
0x3322: test eax,eax
0x3324: je 0x33e0
0x332a: mov byte ptr [rsp+0x70],0x0
0x332f: mov byte ptr [rsp+0x7c],0x1
0x3334: jmp 0x3259
0x3340: mov qword ptr [rsp+0x88],0x1
0x334c: mov byte ptr [rsp+0x90],0x0
0x3354: mov byte ptr [rsp+0x7c],0x1
0x3359: mov r15,qword ptr [rsp+0x88]
0x3361: cmp r15,qword ptr [rsp+0x48]
0x3366: jne 0x3285
0x336c: mov rsi,qword ptr [rsp+0x40]
0x3371: mov rdi,qword ptr [rsp+0x80]
0x3379: mov rdx,r15
0x337c: call 0x1b90
0x3381: test eax,eax
0x3383: je 0x2fd3
0x3389: jmp 0x3285
0x3390: lea rdi,[r14+0x4]
0x3394: call 0x1d90
0x3399: test eax,eax
0x339b: je 0x3785
0x33a1: mov byte ptr [rsp+0x70],0x1
0x33a6: jmp 0x329d
0x33b0: mov rdi,qword ptr [rsp+0x80]
0x33b8: call 0x1ab0
0x33bd: mov byte ptr [rsp+0x90],0x0
0x33c5: mov qword ptr [rsp+0x88],rax
0x33cd: mov byte ptr [rsp+0x7c],0x1
0x33d2: jmp 0x3359
0x33e0: mov byte ptr [rsp+0x7c],0x1
0x33e5: jmp 0x3259
0x33ea: mov rax,qword ptr [rsp+0x10]
0x33ef: lea rdi,[rax+0x4]
0x33f3: call 0x1d90
0x33f8: test eax,eax
0x33fa: je 0x3785
0x3400: mov byte ptr [rsp+0x30],0x1
0x3405: jmp 0x312c
0x340a: mov qword ptr [rsp+0x48],0x1
0x3413: mov byte ptr [rsp+0x50],0x0
0x3418: add rbp,0x1
0x341c: mov byte ptr [rsp+0x3c],0x1
0x3421: mov rdi,qword ptr [rsp+0x40]
0x3426: jmp 0x30f5
0x342b: mov rdx,qword ptr [rsp+0x40]
0x3430: mov rdi,qword ptr [rsp+0x48]
0x3435: jmp 0x3118
0x3698: mov rdi,qword ptr [rsp+0x40]
0x369d: call 0x1ab0
0x36a2: mov byte ptr [rsp+0x50],0x0
0x36a7: mov qword ptr [rsp+0x48],rax
0x36ac: mov byte ptr [rsp+0x3c],0x1
0x36b1: jmp 0x31d5
0x36ff: mov byte ptr [rsp+0x3c],0x1
0x3704: jmp 0x31c9
0x3780: call 0x1ad0
0x37d8: lea rsi,[rip+0x12721]
0x37df: mov rbx,rax
0x37e2: mov edx,0x5
0x37e7: xor edi,edi
0x37e9: call 0x1a90
0x37ee: mov rcx,rbx
0x37f1: mov rdx,rax
0x37f4: xor esi,esi
0x37f6: mov edi,0x2
0x37fb: xor eax,eax
0x37fd: call 0x1d00
0x3802: nop dword ptr [rax]
0x3806: nop word ptr cs:[rax+rax]
0x390d: mov eax,dword ptr [rbx+0xc]
0x3910: test eax,eax
0x3912: je 0x39c1
0x3918: cmp ebp,0x1
0x391b: je 0x3988
0x391d: mov rax,qword ptr [rip+0x2176a4]
0x3988: mov rax,qword ptr [rip+0x217609]
0x398f: jmp 0x3924
0x39c1: lea rsi,[rip+0x126f3]
0x39c8: mov edx,0x5
0x39cd: xor edi,edi
0x39cf: call 0x1a90
0x39d4: xor esi,esi
0x39d6: mov rdx,rax
0x39d9: mov edi,0x2
0x39de: xor eax,eax
0x39e0: call 0x1d00
0x39e5: nop 
0x39e6: nop word ptr cs:[rax+rax]
0x3ac8: nop dword ptr [rax+rax]
0x3ea0: mov qword ptr [rip+0x217239],rdi
0x3ea7: ret 
0x3eb0: mov byte ptr [rip+0x217221],dil
0x3eb7: ret 
0x3ec0: push rbp
0x3ec1: push rbx
0x3ec2: sub rsp,0x8
0x3ec6: mov rdi,qword ptr [rip+0x2171bb]
0x3ecd: call 0x152f0
0x3ed2: test eax,eax
0x3ed4: je 0x3eec
0x3ed6: call 0x19f0
0x3edb: cmp byte ptr [rip+0x2171f6],0x0
0x3ee2: mov rbx,rax
0x3ee5: je 0x3f03
0x3ee7: cmp dword ptr [rax],0x20
0x3eea: jne 0x3f03
0x3eec: mov rdi,qword ptr [rip+0x2171cd]
0x3ef3: call 0x152f0
0x3ef8: test eax,eax
0x3efa: jne 0x3f42
0x3efc: add rsp,0x8
0x3f00: pop rbx
0x3f01: pop rbp
0x3f02: ret 
0x3f03: lea rsi,[rip+0x12269]
0x3f0a: xor edi,edi
0x3f0c: mov edx,0x5
0x3f11: call 0x1a90
0x3f16: mov rdi,qword ptr [rip+0x2171c3]
0x3f1d: mov rbp,rax
0x3f20: test rdi,rdi
0x3f23: je 0x3f4d
0x3f25: call 0x6290
0x3f2a: mov esi,dword ptr [rbx]
0x3f2c: lea rdx,[rip+0x1224c]
0x3f33: mov rcx,rax
0x3f36: mov r8,rbp
0x3f39: xor edi,edi
0x3f3b: xor eax,eax
0x3f3d: call 0x1d00
0x3f42: mov edi,dword ptr [rip+0x2170c8]
0x3f48: call 0x1a10
0x3f4d: mov esi,dword ptr [rbx]
0x3f4f: lea rdx,[rip+0x1222d]
0x3f56: mov rcx,rax
0x3f59: xor edi,edi
0x3f5b: xor eax,eax
0x3f5d: call 0x1d00
0x3f62: jmp 0x3f42
0x3f8a: movaps [rsp+0x60],xmm0
0x3f8f: movaps [rsp+0x70],xmm1
0x3f94: movaps [rsp+0x80],xmm2
0x3f9c: movaps [rsp+0x90],xmm3
0x3fa4: movaps [rsp+0xa0],xmm4
0x3fac: movaps [rsp+0xb0],xmm5
0x3fb4: movaps [rsp+0xc0],xmm6
0x3fbc: movaps [rsp+0xd0],xmm7
0x4097: nop word ptr [rax+rax]
0x40a5: jmp 0x3fe9
0x40aa: call 0x1ad0
0x40af: nop 
0x40b0: push r14
0x40b2: push r13
0x40b4: mov r14,r8
0x40b7: push r12
0x40b9: push rbp
0x40ba: mov r12,rdx
0x40bd: push rbx
0x40be: mov r13,rcx
0x40c1: sub rsp,0xd0
0x40c8: test al,al
0x40ca: mov rbp,qword ptr [rsp+0x100]
0x40d2: je 0x410b
0x40d4: movaps [rsp+0x50],xmm0
0x40d9: movaps [rsp+0x60],xmm1
0x40de: movaps [rsp+0x70],xmm2
0x40e3: movaps [rsp+0x80],xmm3
0x40eb: movaps [rsp+0x90],xmm4
0x40f3: movaps [rsp+0xa0],xmm5
0x40fb: movaps [rsp+0xb0],xmm6
0x4103: movaps [rsp+0xc0],xmm7
0x410b: mov rax,qword ptr fs:0x28
0x4114: mov qword ptr [rsp+0x18],rax
0x4119: xor eax,eax
0x411b: lea rdx,[rip+0x1263f]
0x4122: lea rax,[rip+0x11f3c]
0x4129: test r9b,r9b
0x412c: lea rcx,[rip+0x21698d]
0x4133: cmove rdx,rax
0x4137: xor r8d,r8d
0x413a: mov ebx,dword ptr [rip+0x216f60]
0x4140: mov dword ptr [rip+0x216f56],0x1
0x414a: call 0x1ae0
0x414f: cmp eax,-0x1
0x4152: je 0x41b8
0x4154: cmp eax,0x68
0x4157: je 0x41e0
0x415d: cmp eax,0x76
0x4160: jne 0x41b0
0x4162: lea rax,[rsp+0x108]
0x416a: mov rdi,qword ptr [rip+0x216f17]
0x4171: mov r8,rsp
0x4174: mov rcx,r14
0x4177: mov rdx,r13
0x417a: mov rsi,r12
0x417d: mov qword ptr [rsp+0x8],rax
0x4182: lea rax,[rsp+0x20]
0x4187: mov dword ptr [rsp],0x30
0x418e: mov dword ptr [rsp+0x4],0x30
0x4196: mov qword ptr [rsp+0x10],rax
0x419b: call 0x6be0
0x41a0: xor edi,edi
0x41a2: call 0x1d60
0x41a7: nop word ptr [rax+rax]
0x41b0: mov edi,dword ptr [rip+0x216e5a]
0x41b6: call rbp
0x41b8: mov rax,qword ptr [rsp+0x18]
0x41bd: xor rax,qword ptr fs:0x28
0x41c6: mov dword ptr [rip+0x216ed4],ebx
0x41cc: jne 0x41e6
0x41ce: add rsp,0xd0
0x41d5: pop rbx
0x41d6: pop rbp
0x41d7: pop r12
0x41d9: pop r13
0x41db: pop r14
0x41dd: ret 
0x41e0: xor edi,edi
0x41e2: call rbp
0x41e4: jmp 0x41b8
0x41e6: call 0x1ad0
0x41eb: nop dword ptr [rax+rax]
0x41f0: push rbx
0x41f1: mov ebx,edi
0x41f3: call 0x1c00
0x41f8: test eax,eax
0x41fa: js 0x4200
0x41fc: pop rbx
0x41fd: ret 
0x4200: mov edi,ebx
0x4202: call 0x1a40
0x4207: test eax,eax
0x4209: sete al
0x420c: movzx eax,al
0x420f: pop rbx
0x4210: ret 
0x4220: push rbp
0x4221: push rbx
0x4222: mov rbx,rsi
0x4225: lea rax,[rbx+0x18]
0x4229: mov rbp,rdi
0x422c: sub rsp,0x8
0x4230: mov rsi,qword ptr [rsi]
0x4233: mov rdx,qword ptr [rbx+0x8]
0x4237: cmp rsi,rax
0x423a: je 0x4260
0x423c: mov qword ptr [rdi],rsi
0x423f: movzx eax,byte ptr [rbx+0x10]
0x4243: mov qword ptr [rbp+0x8],rdx
0x4247: test al,al
0x4249: mov byte ptr [rbp+0x10],al
0x424c: je 0x4254
0x424e: mov eax,dword ptr [rbx+0x14]
0x4251: mov dword ptr [rbp+0x14],eax
0x4254: add rsp,0x8
0x4258: pop rbx
0x4259: pop rbp
0x425a: ret 
0x4260: lea rcx,[rdi+0x18]
0x4264: mov rdi,rcx
0x4267: call 0x1be0
0x426c: mov rdx,qword ptr [rbx+0x8]
0x4270: mov qword ptr [rbp],rax
0x4274: jmp 0x423f
0x4280: mov eax,edi
0x4282: lea rdx,[rip+0x11f17]
0x4289: mov ecx,edi
0x428b: shr al,0x5
0x428e: and ecx,0x1f
0x4291: and eax,0x7
0x4294: mov eax,dword ptr [rdx+rax*4]
0x4297: shr eax,cl
0x4299: and eax,0x1
0x429c: ret 
0x42a0: push r14
0x42a2: push r13
0x42a4: push r12
0x42a6: push rbp
0x42a7: mov r12,rdi
0x42aa: push rbx
0x42ab: mov ebx,esi
0x42ad: sub rsp,0x50
0x42b1: mov rax,qword ptr fs:0x28
0x42ba: mov qword ptr [rsp+0x48],rax
0x42bf: xor eax,eax
0x42c1: call 0x1aa0
0x42c6: cmp rax,0x1
0x42ca: jbe 0x42d3
0x42cc: cmp bl,0x2f
0x42cf: mov ebp,ebx
0x42d1: ja 0x4300
0x42d3: mov rax,qword ptr [rsp+0x48]
0x42d8: xor rax,qword ptr fs:0x28
0x42e1: jne 0x44e3
0x42e7: add rsp,0x50
0x42eb: mov esi,ebx
0x42ed: mov rdi,r12
0x42f0: pop rbx
0x42f1: pop rbp
0x42f2: pop r12
0x42f4: pop r13
0x42f6: pop r14
0x42f8: jmp 0x1b00
0x4300: mov rbx,rsp
0x4303: mov qword ptr [rsp+0x10],r12
0x4308: mov byte ptr [rsp],0x0
0x430c: mov qword ptr [rsp+0x4],0x0
0x4315: mov byte ptr [rsp+0xc],0x0
0x431a: lea r12,[rip+0x11e7f]
0x4321: lea r13,[rbx+0x4]
0x4325: jmp 0x438e
0x4330: mov rax,qword ptr [rsp+0x10]
0x4335: movzx ecx,byte ptr [rax]
0x4338: mov edx,ecx
0x433a: shr dl,0x5
0x433d: and edx,0x7
0x4340: mov edx,dword ptr [r12+rdx*4]
0x4344: btl edx,ecx
0x4347: jae 0x4448
0x434d: mov qword ptr [rsp+0x18],0x1
0x4356: movsx edx,byte ptr [rax]
0x4359: mov byte ptr [rsp+0x20],0x1
0x435e: mov byte ptr [rsp+0xc],0x1
0x4363: test edx,edx
0x4365: mov dword ptr [rsp+0x24],edx
0x4369: je 0x44c0
0x436f: mov edx,0x1
0x4374: mov r14,rax
0x4377: cmp bpl,byte ptr [r14]
0x437a: je 0x44c3
0x4380: lea rax,[r14+rdx]
0x4384: mov byte ptr [rsp+0xc],0x0
0x4389: mov qword ptr [rsp+0x10],rax
0x438e: cmp byte ptr [rsp],0x0
0x4392: je 0x4330
0x4394: call 0x1aa0
0x4399: mov r14,qword ptr [rsp+0x10]
0x439e: mov rsi,rax
0x43a1: mov rdi,r14
0x43a4: call 0x64b0
0x43a9: lea rcx,[rbx+0x4]
0x43ad: lea rdi,[rbx+0x24]
0x43b1: mov rdx,rax
0x43b4: mov rsi,r14
0x43b7: call 0x7050
0x43bc: cmp rax,-0x1
0x43c0: mov qword ptr [rsp+0x18],rax
0x43c5: je 0x4468
0x43cb: cmp rax,-0x2
0x43cf: je 0x4490
0x43d5: test rax,rax
0x43d8: jne 0x43fe
0x43da: mov r14,qword ptr [rsp+0x10]
0x43df: mov qword ptr [rsp+0x18],0x1
0x43e8: cmp byte ptr [r14],0x0
0x43ec: jne 0x4507
0x43f2: mov edx,dword ptr [rsp+0x24]
0x43f6: test edx,edx
0x43f8: jne 0x4526
0x43fe: lea rdi,[rbx+0x4]
0x4402: mov byte ptr [rsp+0x20],0x1
0x4407: call 0x1d90
0x440c: test eax,eax
0x440e: je 0x44b0
0x4414: mov byte ptr [rsp],0x0
0x4418: mov byte ptr [rsp+0xc],0x1
0x441d: mov eax,dword ptr [rsp+0x24]
0x4421: test eax,eax
0x4423: je 0x44c0
0x4429: mov r14,qword ptr [rsp+0x10]
0x442e: mov rdx,qword ptr [rsp+0x18]
0x4433: cmp rdx,0x1
0x4437: jne 0x4380
0x443d: jmp 0x4377
0x4448: mov rdi,r13
0x444b: call 0x1d90
0x4450: test eax,eax
0x4452: je 0x44e8
0x4458: mov byte ptr [rsp],0x1
0x445c: jmp 0x4394
0x4468: mov qword ptr [rsp+0x18],0x1
0x4471: mov byte ptr [rsp+0x20],0x0
0x4476: mov edx,0x1
0x447b: mov byte ptr [rsp+0xc],0x1
0x4480: mov r14,qword ptr [rsp+0x10]
0x4485: jmp 0x4377
0x4490: mov r14,qword ptr [rsp+0x10]
0x4495: mov rdi,r14
0x4498: call 0x1ab0
0x449d: mov byte ptr [rsp+0x20],0x0
0x44a2: mov qword ptr [rsp+0x18],rax
0x44a7: mov byte ptr [rsp+0xc],0x1
0x44ac: jmp 0x442e
0x44b0: mov byte ptr [rsp+0xc],0x1
0x44b5: jmp 0x441d
0x44c0: xor r14d,r14d
0x44c3: mov rsi,qword ptr [rsp+0x48]
0x44c8: xor rsi,qword ptr fs:0x28
0x44d1: mov rax,r14
0x44d4: jne 0x44e3
0x44d6: add rsp,0x50
0x44da: pop rbx
0x44db: pop rbp
0x44dc: pop r12
0x44de: pop r13
0x44e0: pop r14
0x44e2: ret 
0x44e3: call 0x1ad0
0x44e8: lea rcx,[rip+0x11cd1]
0x44ef: lea rsi,[rip+0x1111a]
0x44f6: lea rdi,[rip+0x11b3a]
0x44fd: mov edx,0x96
0x4502: call 0x1b50
0x4507: lea rcx,[rip+0x11cb2]
0x450e: lea rsi,[rip+0x110fb]
0x4515: lea rdi,[rip+0x11b32]
0x451c: mov edx,0xb2
0x4521: call 0x1b50
0x4526: lea rcx,[rip+0x11c93]
0x452d: lea rsi,[rip+0x110dc]
0x4534: lea rdi,[rip+0x11a42]
0x453b: mov edx,0xb3
0x4540: call 0x1b50
0x4545: nop word ptr cs:[rax+rax]
0x454f: nop 
0x4739: call 0x1ad0
0x477c: nop dword ptr [rax]
0x481f: nop 
0x4820: push rbp
0x4821: push rbx
0x4822: mov rbp,rdi
0x4825: mov ebx,esi
0x4827: sub rsp,0x8
0x482b: call 0x153d0
0x4830: movzx edx,byte ptr [rax]
0x4833: and edx,-0x21
0x4836: cmp dl,0x55
0x4839: je 0x48b0
0x483b: cmp dl,0x47
0x483e: je 0x4860
0x4840: lea rax,[rip+0x11a04]
0x4847: lea rdx,[rip+0x11850]
0x484e: cmp ebx,0x9
0x4851: cmovne rax,rdx
0x4855: add rsp,0x8
0x4859: pop rbx
0x485a: pop rbp
0x485b: ret 
0x4860: movzx edx,byte ptr [rax+0x1]
0x4864: and edx,-0x21
0x4867: cmp dl,0x42
0x486a: jne 0x4840
0x486c: cmp byte ptr [rax+0x2],0x31
0x4870: jne 0x4840
0x4872: cmp byte ptr [rax+0x3],0x38
0x4876: jne 0x4840
0x4878: cmp byte ptr [rax+0x4],0x30
0x487c: jne 0x4840
0x487e: cmp byte ptr [rax+0x5],0x33
0x4882: jne 0x4840
0x4884: cmp byte ptr [rax+0x6],0x30
0x4888: jne 0x4840
0x488a: cmp byte ptr [rax+0x7],0x0
0x488e: jne 0x4840
0x4890: cmp byte ptr [rbp],0x60
0x4894: lea rax,[rip+0x119a9]
0x489b: lea rdx,[rip+0x119a6]
0x48a2: cmovne rax,rdx
0x48a6: add rsp,0x8
0x48aa: pop rbx
0x48ab: pop rbp
0x48ac: ret 
0x48b0: movzx edx,byte ptr [rax+0x1]
0x48b4: and edx,-0x21
0x48b7: cmp dl,0x54
0x48ba: jne 0x4840
0x48bc: movzx edx,byte ptr [rax+0x2]
0x48c0: and edx,-0x21
0x48c3: cmp dl,0x46
0x48c6: jne 0x4840
0x48cc: cmp byte ptr [rax+0x3],0x2d
0x48d0: jne 0x4840
0x48d6: cmp byte ptr [rax+0x4],0x38
0x48da: jne 0x4840
0x48e0: cmp byte ptr [rax+0x5],0x0
0x48e4: jne 0x4840
0x48ea: cmp byte ptr [rbp],0x60
0x48ee: lea rax,[rip+0x11947]
0x48f5: lea rdx,[rip+0x11944]
0x48fc: cmovne rax,rdx
0x4900: add rsp,0x8
0x4904: pop rbx
0x4905: pop rbp
0x4906: ret 
0x49e3: xor r11d,r11d
0x49e6: mov rax,rbp
0x49e9: mov r8d,r12d
0x49ec: mov rbp,r11
0x49ef: mov r11,rax
0x49f2: nop word ptr [rax+rax]
0x49f8: cmp r11,rbp
0x49fb: setne r12b
0x49ff: cmp r11,-0x1
0x4a03: jne 0x4a12
0x4a05: mov rax,qword ptr [rsp+0x10]
0x4a0a: cmp byte ptr [rax+rbp],0x0
0x4a0e: setne r12b
0x4a12: test r12b,r12b
0x4a15: je 0x5070
0x4a1b: cmp dword ptr [rsp+0x8],0x2
0x4a20: mov rdi,qword ptr [rsp+0x10]
0x4a25: lea r9,[rdi+rbp]
0x4a29: setne al
0x4a2c: and al,byte ptr [rsp+0xd]
0x4a30: mov r10d,eax
0x4a33: je 0x4ae0
0x4a39: mov rax,qword ptr [rsp+0x18]
0x4a3e: test rax,rax
0x4a41: je 0x4e70
0x4a47: cmp r11,-0x1
0x4a4b: lea rbx,[rbp+rax]
0x4a50: jne 0x4a80
0x4a52: cmp rax,0x1
0x4a56: jbe 0x4a80
0x4a58: mov byte ptr [rsp+0x38],r8b
0x4a5d: mov byte ptr [rsp+0x30],r10b
0x4a62: mov qword ptr [rsp+0x28],r9
0x4a67: call 0x1ab0
0x4a6c: movzx r8d,byte ptr [rsp+0x38]
0x4a72: movzx r10d,byte ptr [rsp+0x30]
0x4a78: mov r11,rax
0x4a7b: mov r9,qword ptr [rsp+0x28]
0x4a80: cmp rbx,r11
0x4a83: mov byte ptr [rsp+0x28],r10b
0x4a88: ja 0x5040
0x4a8e: mov rdx,qword ptr [rsp+0x18]
0x4a93: mov rsi,qword ptr [rsp+0x48]
0x4a98: mov rdi,r9
0x4a9b: mov qword ptr [rsp+0x40],r11
0x4aa0: mov byte ptr [rsp+0x38],r8b
0x4aa5: mov qword ptr [rsp+0x30],r9
0x4aaa: call 0x1b90
0x4aaf: test eax,eax
0x4ab1: mov r9,qword ptr [rsp+0x30]
0x4ab6: movzx r8d,byte ptr [rsp+0x38]
0x4abc: mov r11,qword ptr [rsp+0x40]
0x4ac1: jne 0x5040
0x4ac7: cmp byte ptr [rsp+0xf],0x0
0x4acc: movzx r10d,byte ptr [rsp+0x28]
0x4ad2: jne 0x5a55
0x4ad8: nop dword ptr [rax+rax]
0x4ae0: movzx ebx,byte ptr [r9]
0x4ae4: cmp bl,0x7e
0x4ae7: ja 0x4e08
0x4aed: lea rcx,[rip+0x117d8]
0x4af4: movzx edx,bl
0x4af7: movsxd rax,dword ptr [rcx+rdx*4]
0x4afb: add rax,rcx
0x4afe: jmp rax
0x4b38: cmp byte ptr [rsp+0xd],0x1
0x4b3d: jne 0x4c52
0x4b43: test dl,dl
0x4b45: jne 0x4c52
0x4b4b: mov rsi,qword ptr [rsp+0x20]
0x4b50: test rsi,rsi
0x4b53: je 0x4b69
0x4b55: mov edx,ebx
0x4b57: shr dl,0x5
0x4b5a: movzx edx,dl
0x4b5d: mov edx,dword ptr [rsi+rdx*4]
0x4b60: btl edx,ebx
0x4b63: jb 0x4cb3
0x4b69: test r10b,r10b
0x4b6c: jne 0x4cb3
0x4b72: xor eax,0x1
0x4b75: add rbp,0x1
0x4b79: and eax,r8d
0x4b7c: test al,al
0x4b7e: je 0x4ba0
0x4b80: cmp r13,r15
0x4b83: jbe 0x4b8a
0x4b85: mov byte ptr [r14+r15],0x27
0x4b8a: lea rax,[r15+0x1]
0x4b8e: cmp r13,rax
0x4b91: jbe 0x4b99
0x4b93: mov byte ptr [r14+r15+0x1],0x27
0x4b99: add r15,0x2
0x4b9d: xor r8d,r8d
0x4ba0: cmp r15,r13
0x4ba3: jae 0x4ba9
0x4ba5: mov byte ptr [r14+r15],bl
0x4ba9: movzx edi,byte ptr [rsp+0xe]
0x4bae: add r15,0x1
0x4bb2: mov eax,0x0
0x4bb7: test r12b,r12b
0x4bba: cmove edi,eax
0x4bbd: mov byte ptr [rsp+0xe],dil
0x4bc2: jmp 0x49f8
0x4c52: cmp byte ptr [rsp+0xf],0x0
0x4c57: jne 0x4b4b
0x4c5d: jmp 0x4b69
0x4cb3: cmp dword ptr [rsp+0x8],0x2
0x4cb8: sete dl
0x4cbb: cmp byte ptr [rsp+0xf],0x0
0x4cc0: mov eax,edx
0x4cc2: jne 0x5518
0x4cc8: mov eax,r8d
0x4ccb: xor eax,0x1
0x4cce: and al,dl
0x4cd0: je 0x4d01
0x4cd2: cmp r13,r15
0x4cd5: jbe 0x4cdc
0x4cd7: mov byte ptr [r14+r15],0x27
0x4cdc: lea rdx,[r15+0x1]
0x4ce0: cmp r13,rdx
0x4ce3: jbe 0x4ceb
0x4ce5: mov byte ptr [r14+r15+0x1],0x24
0x4ceb: lea rdx,[r15+0x2]
0x4cef: cmp r13,rdx
0x4cf2: jbe 0x4cfa
0x4cf4: mov byte ptr [r14+r15+0x2],0x27
0x4cfa: add r15,0x3
0x4cfe: mov r8d,eax
0x4d01: cmp r13,r15
0x4d04: jbe 0x4d0b
0x4d06: mov byte ptr [r14+r15],0x5c
0x4d0b: add r15,0x1
0x4d0f: add rbp,0x1
0x4d13: jmp 0x4ba0
0x4e00: xor r10d,r10d
0x4e03: nop dword ptr [rax+rax]
0x4e08: cmp qword ptr [rsp+0x58],0x1
0x4e0e: jne 0x51b8
0x4e14: mov qword ptr [rsp+0x38],r11
0x4e19: mov byte ptr [rsp+0x30],r8b
0x4e1e: mov byte ptr [rsp+0x28],r10b
0x4e23: call 0x1dc0
0x4e28: mov rcx,qword ptr [rax]
0x4e2b: movzx edx,bl
0x4e2e: movzx r10d,byte ptr [rsp+0x28]
0x4e34: movzx r8d,byte ptr [rsp+0x30]
0x4e3a: mov r11,qword ptr [rsp+0x38]
0x4e3f: mov edi,0x1
0x4e44: movzx eax,word ptr [rcx+rdx*2]
0x4e48: and ax,0x4000
0x4e4c: setne r12b
0x4e50: sete al
0x4e53: and al,byte ptr [rsp+0xd]
0x4e57: test al,al
0x4e59: jne 0x57f1
0x4e5f: cmp dword ptr [rsp+0x8],0x2
0x4e64: sete dl
0x4e67: jmp 0x4b38
0x4e70: movzx ebx,byte ptr [r9]
0x4e74: cmp bl,0x7e
0x4e77: ja 0x4e00
0x4e79: lea rcx,[rip+0x11648]
0x4e80: movzx edx,bl
0x4e83: movsxd rax,dword ptr [rcx+rdx*4]
0x4e87: add rax,rcx
0x4e8a: jmp rax
0x5040: xor r10d,r10d
0x5043: jmp 0x4ae0
0x5070: cmp dword ptr [rsp+0x8],0x2
0x5075: movzx ebx,byte ptr [rsp+0xf]
0x507a: mov r12d,r8d
0x507d: mov rbp,r11
0x5080: sete dl
0x5083: mov eax,ebx
0x5085: test r15,r15
0x5088: sete cl
0x508b: and eax,edx
0x508d: and al,cl
0x508f: jne 0x5af6
0x5095: mov eax,ebx
0x5097: xor eax,0x1
0x509a: and dl,al
0x509c: je 0x5a0c
0x50a2: cmp byte ptr [rsp+0x7c],0x0
0x50a7: je 0x5a0a
0x50ad: cmp byte ptr [rsp+0xe],0x0
0x50b2: jne 0x5aad
0x50b8: test r13,r13
0x50bb: sete al
0x50be: cmp qword ptr [rsp+0x50],0x0
0x50c4: setne dl
0x50c7: and al,dl
0x50c9: je 0x5aec
0x50cf: mov r13,qword ptr [rsp+0x50]
0x50d4: lea rbx,[rip+0x10fc3]
0x50db: mov byte ptr [r14],0x27
0x50df: mov dword ptr [rsp+0x8],0x2
0x50e7: mov r15d,0x1
0x50ed: mov qword ptr [rsp+0x18],0x1
0x50f6: mov byte ptr [rsp+0xf],0x0
0x50fb: mov qword ptr [rsp+0x48],rbx
0x5100: mov byte ptr [rsp+0x7c],al
0x5104: jmp 0x49e3
0x51b8: lea rax,[rsp+0xa0]
0x51c0: cmp r11,-0x1
0x51c4: mov qword ptr [rsp+0xa0],0x0
0x51d0: mov qword ptr [rsp+0x28],rax
0x51d5: jne 0x5204
0x51d7: mov rdi,qword ptr [rsp+0x10]
0x51dc: mov byte ptr [rsp+0x40],r8b
0x51e1: mov byte ptr [rsp+0x38],r10b
0x51e6: mov qword ptr [rsp+0x30],r9
0x51eb: call 0x1ab0
0x51f0: movzx r8d,byte ptr [rsp+0x40]
0x51f6: movzx r10d,byte ptr [rsp+0x38]
0x51fc: mov r11,rax
0x51ff: mov r9,qword ptr [rsp+0x30]
0x5204: lea rax,[rsp+0x9c]
0x520c: xor ecx,ecx
0x520e: mov byte ptr [rsp+0x7e],bl
0x5212: mov byte ptr [rsp+0x7d],r8b
0x5217: mov rbx,rcx
0x521a: mov qword ptr [rsp+0x88],r9
0x5222: mov qword ptr [rsp+0x38],rax
0x5227: mov byte ptr [rsp+0x7f],r10b
0x522c: mov qword ptr [rsp+0x80],r15
0x5234: mov qword ptr [rsp+0x40],r14
0x5239: mov qword ptr [rsp+0x70],r13
0x523e: mov qword ptr [rsp+0x30],r11
0x5243: mov rax,qword ptr [rsp+0x10]
0x5248: lea r14,[rbp+rbx]
0x524d: mov rdx,qword ptr [rsp+0x30]
0x5252: mov rcx,qword ptr [rsp+0x28]
0x5257: mov rdi,qword ptr [rsp+0x38]
0x525c: lea r13,[rax+r14]
0x5260: sub rdx,r14
0x5263: mov rsi,r13
0x5266: call 0x7050
0x526b: test rax,rax
0x526e: mov r15,rax
0x5271: je 0x52c1
0x5273: cmp rax,-0x1
0x5277: je 0x5895
0x527d: cmp rax,-0x2
0x5281: je 0x5821
0x5287: cmp dword ptr [rsp+0x8],0x2
0x528c: sete al
0x528f: and al,byte ptr [rsp+0xf]
0x5293: jne 0x5430
0x5299: mov edi,dword ptr [rsp+0x9c]
0x52a0: call 0x1da0
0x52a5: mov rdi,qword ptr [rsp+0x28]
0x52aa: test eax,eax
0x52ac: mov eax,0x0
0x52b1: cmove r12d,eax
0x52b5: add rbx,r15
0x52b8: call 0x1d90
0x52bd: test eax,eax
0x52bf: je 0x5243
0x52c1: mov edx,r12d
0x52c4: mov rdi,rbx
0x52c7: movzx r8d,byte ptr [rsp+0x7d]
0x52cd: xor edx,0x1
0x52d0: movzx ebx,byte ptr [rsp+0x7e]
0x52d5: movzx r10d,byte ptr [rsp+0x7f]
0x52db: and dl,byte ptr [rsp+0xd]
0x52df: mov r15,qword ptr [rsp+0x80]
0x52e7: mov r14,qword ptr [rsp+0x40]
0x52ec: mov r13,qword ptr [rsp+0x70]
0x52f1: mov r11,qword ptr [rsp+0x30]
0x52f6: cmp rdi,0x1
0x52fa: jbe 0x58fb
0x5300: mov rcx,rdi
0x5303: xor esi,esi
0x5305: movzx r9d,byte ptr [rsp+0xf]
0x530b: add rcx,rbp
0x530e: mov rdi,qword ptr [rsp+0x10]
0x5313: jmp 0x53ce
0x5320: cmp dword ptr [rsp+0x8],0x2
0x5325: sete al
0x5328: test r9b,r9b
0x532b: jne 0x57e0
0x5331: mov esi,r8d
0x5334: xor esi,0x1
0x5337: and al,sil
0x533a: je 0x536b
0x533c: cmp r13,r15
0x533f: jbe 0x5346
0x5341: mov byte ptr [r14+r15],0x27
0x5346: lea rsi,[r15+0x1]
0x534a: cmp r13,rsi
0x534d: jbe 0x5355
0x534f: mov byte ptr [r14+r15+0x1],0x24
0x5355: lea rsi,[r15+0x2]
0x5359: cmp r13,rsi
0x535c: jbe 0x5364
0x535e: mov byte ptr [r14+r15+0x2],0x27
0x5364: add r15,0x3
0x5368: mov r8d,eax
0x536b: cmp r13,r15
0x536e: jbe 0x5375
0x5370: mov byte ptr [r14+r15],0x5c
0x5375: lea rax,[r15+0x1]
0x5379: cmp r13,rax
0x537c: jbe 0x538b
0x537e: mov eax,ebx
0x5380: shr al,0x6
0x5383: add eax,0x30
0x5386: mov byte ptr [r14+r15+0x1],al
0x538b: lea rax,[r15+0x2]
0x538f: cmp r13,rax
0x5392: jbe 0x53a4
0x5394: mov eax,ebx
0x5396: shr al,0x3
0x5399: and eax,0x7
0x539c: add eax,0x30
0x539f: mov byte ptr [r14+r15+0x2],al
0x53a4: and ebx,0x7
0x53a7: add rbp,0x1
0x53ab: add r15,0x3
0x53af: add ebx,0x30
0x53b2: cmp rbp,rcx
0x53b5: jae 0x4ba0
0x53bb: mov esi,edx
0x53bd: cmp r13,r15
0x53c0: jbe 0x53c6
0x53c2: mov byte ptr [r14+r15],bl
0x53c6: movzx ebx,byte ptr [rdi+rbp]
0x53ca: add r15,0x1
0x53ce: test dl,dl
0x53d0: jne 0x5320
0x53d6: mov eax,esi
0x53d8: xor eax,0x1
0x53db: and eax,r8d
0x53de: test r10b,r10b
0x53e1: je 0x53f1
0x53e3: cmp r13,r15
0x53e6: jbe 0x53ed
0x53e8: mov byte ptr [r14+r15],0x5c
0x53ed: add r15,0x1
0x53f1: add rbp,0x1
0x53f5: cmp rbp,rcx
0x53f8: jae 0x4b7c
0x53fe: test al,al
0x5400: je 0x57fe
0x5406: cmp r13,r15
0x5409: jbe 0x5410
0x540b: mov byte ptr [r14+r15],0x27
0x5410: lea rax,[r15+0x1]
0x5414: cmp r13,rax
0x5417: jbe 0x541f
0x5419: mov byte ptr [r14+r15+0x1],0x27
0x541f: add r15,0x2
0x5423: xor r10d,r10d
0x5426: xor r8d,r8d
0x5429: jmp 0x53bd
0x5430: cmp r15,0x1
0x5434: je 0x5299
0x543a: mov rdi,qword ptr [rsp+0x10]
0x543f: lea rcx,[rdi+r15]
0x5443: lea rdx,[rdi+r14+0x1]
0x5448: lea r8,[rcx+r14]
0x544c: jmp 0x545d
0x5450: add rdx,0x1
0x5454: cmp r8,rdx
0x5457: je 0x5299
0x545d: movzx ecx,byte ptr [rdx]
0x5460: sub ecx,0x5b
0x5463: cmp cl,0x21
0x5466: ja 0x5450
0x5468: mov esi,0x1
0x546d: shl rsi,cl
0x5470: mov rcx,rsi
0x5473: movabsq rsi,0x20000002b
0x547d: test rcx,rsi
0x5480: je 0x5450
0x5482: mov r14,qword ptr [rsp+0x40]
0x5487: mov r13,qword ptr [rsp+0x70]
0x548c: mov rbp,qword ptr [rsp+0x30]
0x5491: mov dword ptr [rsp+0x8],0x2
0x5499: cmp byte ptr [rsp+0xd],0x0
0x549e: je 0x54b0
0x54a0: test al,al
0x54a2: mov eax,0x4
0x54a7: cmove eax,dword ptr [rsp+0x8]
0x54ac: mov dword ptr [rsp+0x8],eax
0x54b0: sub rsp,0x8
0x54b4: mov rcx,rbp
0x54b7: mov rsi,r13
0x54ba: push qword ptr [rsp+0x68]
0x54be: push qword ptr [rsp+0x78]
0x54c2: mov rdi,r14
0x54c5: push 0x0
0x54c7: mov r9d,dword ptr [rsp+0x98]
0x54cf: mov r8d,dword ptr [rsp+0x28]
0x54d4: mov rdx,qword ptr [rsp+0x30]
0x54d9: and r9d,-0x3
0x54dd: call 0x4910
0x54e2: add rsp,0x20
0x54e6: mov r15,rax
0x54e9: mov rbx,qword ptr [rsp+0xa8]
0x54f1: xor rbx,qword ptr fs:0x28
0x54fa: mov rax,r15
0x54fd: jne 0x5b03
0x5503: add rsp,0xb8
0x550a: pop rbx
0x550b: pop rbp
0x550c: pop r12
0x550e: pop r13
0x5510: pop r14
0x5512: pop r15
0x5514: ret 
0x5518: mov rbp,r11
0x551b: jmp 0x5499
0x5581: test r13,r13
0x5584: jne 0x5b1a
0x558a: lea rax,[rip+0x10b0d]
0x5591: mov qword ptr [rsp+0x50],0x0
0x559a: mov byte ptr [rsp+0xe],0x1
0x559f: mov byte ptr [rsp+0x7c],0x0
0x55a4: xor r12d,r12d
0x55a7: mov byte ptr [rsp+0xf],0x0
0x55ac: mov qword ptr [rsp+0x18],0x1
0x55b5: mov qword ptr [rsp+0x48],rax
0x55ba: mov r15d,0x1
0x55c0: mov dword ptr [rsp+0x8],0x2
0x55c8: jmp 0x49e3
0x57e0: movzx ebx,byte ptr [rsp+0xf]
0x57e5: mov rbp,r11
0x57e8: mov byte ptr [rsp+0xd],bl
0x57ec: jmp 0x5499
0x57f1: movzx edx,byte ptr [rsp+0xd]
0x57f6: xor r12d,r12d
0x57f9: jmp 0x5300
0x57fe: xor r10d,r10d
0x5801: jmp 0x53bd
0x5821: mov r11,qword ptr [rsp+0x30]
0x5826: mov rsi,r14
0x5829: mov rcx,r13
0x582c: mov rax,rbx
0x582f: mov rdi,rbx
0x5832: movzx r8d,byte ptr [rsp+0x7d]
0x5838: movzx ebx,byte ptr [rsp+0x7e]
0x583d: mov r9,qword ptr [rsp+0x88]
0x5845: cmp rsi,r11
0x5848: movzx r10d,byte ptr [rsp+0x7f]
0x584e: mov r15,qword ptr [rsp+0x80]
0x5856: mov r14,qword ptr [rsp+0x40]
0x585b: mov r13,qword ptr [rsp+0x70]
0x5860: jae 0x5888
0x5862: cmp byte ptr [rcx],0x0
0x5865: jne 0x5877
0x5867: jmp 0x5888
0x5870: cmp byte ptr [r9+rax],0x0
0x5875: je 0x5885
0x5877: add rax,0x1
0x587b: lea rdx,[rbp+rax]
0x5880: cmp r11,rdx
0x5883: ja 0x5870
0x5885: mov rdi,rax
0x5888: movzx edx,byte ptr [rsp+0xd]
0x588d: xor r12d,r12d
0x5890: jmp 0x52f6
0x5895: mov rdi,rbx
0x5898: movzx r8d,byte ptr [rsp+0x7d]
0x589e: movzx ebx,byte ptr [rsp+0x7e]
0x58a3: movzx r10d,byte ptr [rsp+0x7f]
0x58a9: mov r15,qword ptr [rsp+0x80]
0x58b1: xor r12d,r12d
0x58b4: mov r14,qword ptr [rsp+0x40]
0x58b9: mov r13,qword ptr [rsp+0x70]
0x58be: mov r11,qword ptr [rsp+0x30]
0x58c3: movzx edx,byte ptr [rsp+0xd]
0x58c8: jmp 0x52f6
0x58fb: mov eax,edx
0x58fd: jmp 0x4e57
0x5a0a: mov eax,edx
0x5a0c: mov rbx,qword ptr [rsp+0x48]
0x5a11: test rbx,rbx
0x5a14: je 0x5a42
0x5a16: test al,al
0x5a18: je 0x5a42
0x5a1a: movzx ecx,byte ptr [rbx]
0x5a1d: mov rax,rbx
0x5a20: test cl,cl
0x5a22: je 0x5a42
0x5a24: mov rdx,r15
0x5a27: sub rax,r15
0x5a2a: cmp r13,rdx
0x5a2d: jbe 0x5a33
0x5a2f: mov byte ptr [r14+rdx],cl
0x5a33: add rdx,0x1
0x5a37: movzx ecx,byte ptr [rax+rdx]
0x5a3b: test cl,cl
0x5a3d: jne 0x5a2a
0x5a3f: mov r15,rdx
0x5a42: cmp r13,r15
0x5a45: jbe 0x54e9
0x5a4b: mov byte ptr [r14+r15],0x0
0x5a50: jmp 0x54e9
0x5a55: cmp dword ptr [rsp+0x8],0x2
0x5a5a: movzx ebx,byte ptr [rsp+0xf]
0x5a5f: mov rbp,r11
0x5a62: sete al
0x5a65: mov byte ptr [rsp+0xd],bl
0x5a69: jmp 0x5499
0x5aad: sub rsp,0x8
0x5ab1: mov r8d,0x5
0x5ab7: mov rcx,r11
0x5aba: push qword ptr [rsp+0x68]
0x5abe: push qword ptr [rsp+0x78]
0x5ac2: mov rdi,r14
0x5ac5: push qword ptr [rsp+0x38]
0x5ac9: mov r9d,dword ptr [rsp+0x98]
0x5ad1: mov rdx,qword ptr [rsp+0x30]
0x5ad6: mov rsi,qword ptr [rsp+0x70]
0x5adb: call 0x4910
0x5ae0: add rsp,0x20
0x5ae4: mov r15,rax
0x5ae7: jmp 0x54e9
0x5aec: movzx eax,byte ptr [rsp+0x7c]
0x5af1: jmp 0x5a0c
0x5af6: mov dword ptr [rsp+0x8],0x2
0x5afe: jmp 0x5499
0x5b03: call 0x1ad0
0x5b08: mov byte ptr [rsp+0xd],0x0
0x5b0d: jmp 0x5581
0x5b1a: mov byte ptr [rsp+0xe],0x1
0x5b1f: xor eax,eax
0x5b21: xor r12d,r12d
0x5b24: mov qword ptr [rsp+0x50],0x0
0x5b2d: jmp 0x50d4
0x5b44: nop 
0x5b46: nop word ptr cs:[rax+rax]
0x5c3c: add rsp,0x20
0x5c40: mov r11,qword ptr [rsp+0x10]
0x5c45: cmp r11,rax
0x5c48: ja 0x5cb1
0x5c4a: lea rsi,[rax+0x1]
0x5c4e: lea rax,[rip+0x2154ab]
0x5c55: cmp r12,rax
0x5c58: mov qword ptr [rbx],rsi
0x5c5b: je 0x5c6f
0x5c5d: mov rdi,r12
0x5c60: mov qword ptr [rsp+0x10],rsi
0x5c65: call 0x19d0
0x5c6a: mov rsi,qword ptr [rsp+0x10]
0x5c6f: mov rdi,rsi
0x5c72: mov qword ptr [rsp+0x10],rsi
0x5c77: call 0x6dc0
0x5c7c: sub rsp,0x8
0x5c80: mov qword ptr [rbx+0x8],rax
0x5c84: mov r8d,dword ptr [rbp]
0x5c88: push qword ptr [rbp+0x30]
0x5c8b: push qword ptr [rbp+0x28]
0x5c8e: mov rcx,r14
0x5c91: push r15
0x5c93: mov r9d,dword ptr [rsp+0x3c]
0x5c98: mov rdi,rax
0x5c9b: mov rdx,qword ptr [rsp+0x28]
0x5ca0: mov rsi,qword ptr [rsp+0x30]
0x5ca5: mov r12,rax
0x5ca8: call 0x4910
0x5cad: add rsp,0x20
0x5cb1: mov eax,dword ptr [rsp+0x18]
0x5cb5: mov dword ptr [r13],eax
0x5cb9: add rsp,0x28
0x5cbd: mov rax,r12
0x5cc0: pop rbx
0x5cc1: pop rbp
0x5cc2: pop r12
0x5cc4: pop r13
0x5cc6: pop r14
0x5cc8: pop r15
0x5cca: ret 
0x5cf1: call 0x19e0
0x5cf6: call 0x7010
0x5cfb: nop dword ptr [rax+rax]
0x5d00: push r12
0x5d02: push rbp
0x5d03: push rbx
0x5d04: mov rbx,rdi
0x5d07: call 0x19f0
0x5d0c: mov r12d,dword ptr [rax]
0x5d0f: mov rbp,rax
0x5d12: lea rax,[rip+0x2154e7]
0x5d19: test rbx,rbx
0x5d1c: mov esi,0x38
0x5d21: cmove rbx,rax
0x5d25: mov rdi,rbx
0x5d28: call 0x6fc0
0x5d2d: mov dword ptr [rbp],r12d
0x5d31: pop rbx
0x5d32: pop rbp
0x5d33: pop r12
0x5d35: ret 
0x5d40: lea rax,[rip+0x2154b9]
0x5d47: test rdi,rdi
0x5d4a: cmove rdi,rax
0x5d4e: mov eax,dword ptr [rdi]
0x5d50: ret 
0x5d60: lea rax,[rip+0x215499]
0x5d67: test rdi,rdi
0x5d6a: cmove rdi,rax
0x5d6e: mov dword ptr [rdi],esi
0x5d70: ret 
0x5d80: lea rax,[rip+0x215479]
0x5d87: test rdi,rdi
0x5d8a: mov ecx,esi
0x5d8c: cmove rdi,rax
0x5d90: mov eax,esi
0x5d92: and ecx,0x1f
0x5d95: shr al,0x5
0x5d98: movzx eax,al
0x5d9b: lea rdi,[rdi+rax*4+0x8]
0x5da0: mov esi,dword ptr [rdi]
0x5da2: mov eax,esi
0x5da4: shr eax,cl
0x5da6: xor edx,eax
0x5da8: and eax,0x1
0x5dab: and edx,0x1
0x5dae: shl edx,cl
0x5db0: xor edx,esi
0x5db2: mov dword ptr [rdi],edx
0x5db4: ret 
0x5dc0: lea rax,[rip+0x215439]
0x5dc7: test rdi,rdi
0x5dca: cmove rdi,rax
0x5dce: mov eax,dword ptr [rdi+0x4]
0x5dd1: mov dword ptr [rdi+0x4],esi
0x5dd4: ret 
0x5de0: lea rax,[rip+0x215419]
0x5de7: test rdi,rdi
0x5dea: cmove rdi,rax
0x5dee: test rsi,rsi
0x5df1: mov dword ptr [rdi],0xa
0x5df7: je 0x5e07
0x5df9: test rdx,rdx
0x5dfc: je 0x5e07
0x5dfe: mov qword ptr [rdi+0x28],rsi
0x5e02: mov qword ptr [rdi+0x30],rdx
0x5e06: ret 
0x5e07: sub rsp,0x8
0x5e0b: call 0x19e0
0x5e10: push r15
0x5e12: push r14
0x5e14: lea rax,[rip+0x2153e5]
0x5e1b: push r13
0x5e1d: push r12
0x5e1f: mov r13,rdi
0x5e22: push rbp
0x5e23: push rbx
0x5e24: mov rbx,r8
0x5e27: mov r14,rsi
0x5e2a: mov r15,rdx
0x5e2d: sub rsp,0x18
0x5e31: test r8,r8
0x5e34: cmove rbx,rax
0x5e38: mov qword ptr [rsp+0x8],rcx
0x5e3d: call 0x19f0
0x5e42: mov r12d,dword ptr [rax]
0x5e45: mov rbp,rax
0x5e48: lea rax,[rbx+0x8]
0x5e4c: sub rsp,0x8
0x5e50: mov r9d,dword ptr [rbx+0x4]
0x5e54: push qword ptr [rbx+0x30]
0x5e57: mov r8d,dword ptr [rbx]
0x5e5a: push qword ptr [rbx+0x28]
0x5e5d: mov rdx,r15
0x5e60: push rax
0x5e61: mov rcx,qword ptr [rsp+0x28]
0x5e66: mov rsi,r14
0x5e69: mov rdi,r13
0x5e6c: call 0x4910
0x5e71: mov dword ptr [rbp],r12d
0x5e75: add rsp,0x38
0x5e79: pop rbx
0x5e7a: pop rbp
0x5e7b: pop r12
0x5e7d: pop r13
0x5e7f: pop r14
0x5e81: pop r15
0x5e83: ret 
0x5e90: push r15
0x5e92: push r14
0x5e94: lea rax,[rip+0x215365]
0x5e9b: push r13
0x5e9d: push r12
0x5e9f: mov r12,rdx
0x5ea2: push rbp
0x5ea3: push rbx
0x5ea4: mov rbx,rcx
0x5ea7: mov r14,rdi
0x5eaa: mov r15,rsi
0x5ead: sub rsp,0x38
0x5eb1: test rcx,rcx
0x5eb4: cmove rbx,rax
0x5eb8: xor ebp,ebp
0x5eba: call 0x19f0
0x5ebf: test r12,r12
0x5ec2: mov r13,rax
0x5ec5: mov eax,dword ptr [rax]
0x5ec7: sete bpl
0x5ecb: or ebp,dword ptr [rbx+0x4]
0x5ece: lea r10,[rbx+0x8]
0x5ed2: sub rsp,0x8
0x5ed6: mov r8d,dword ptr [rbx]
0x5ed9: mov rcx,r15
0x5edc: mov dword ptr [rsp+0x14],eax
0x5ee0: push qword ptr [rbx+0x30]
0x5ee3: mov rdx,r14
0x5ee6: push qword ptr [rbx+0x28]
0x5ee9: push r10
0x5eeb: xor esi,esi
0x5eed: mov r9d,ebp
0x5ef0: xor edi,edi
0x5ef2: mov qword ptr [rsp+0x40],r10
0x5ef7: call 0x4910
0x5efc: lea rsi,[rax+0x1]
0x5f00: mov qword ptr [rsp+0x48],rax
0x5f05: add rsp,0x20
0x5f09: mov rdi,rsi
0x5f0c: mov qword ptr [rsp+0x18],rsi
0x5f11: call 0x6dc0
0x5f16: mov qword ptr [rsp+0x10],rax
0x5f1b: sub rsp,0x8
0x5f1f: push qword ptr [rbx+0x30]
0x5f22: push qword ptr [rbx+0x28]
0x5f25: mov r10,qword ptr [rsp+0x38]
0x5f2a: mov r9d,ebp
0x5f2d: mov r8d,dword ptr [rbx]
0x5f30: mov rcx,r15
0x5f33: mov rdx,r14
0x5f36: mov rdi,rax
0x5f39: push r10
0x5f3b: mov rsi,qword ptr [rsp+0x38]
0x5f40: call 0x4910
0x5f45: mov eax,dword ptr [rsp+0x2c]
0x5f49: add rsp,0x20
0x5f4d: test r12,r12
0x5f50: mov dword ptr [r13],eax
0x5f54: je 0x5f5f
0x5f56: mov r11,qword ptr [rsp+0x28]
0x5f5b: mov qword ptr [r12],r11
0x5f5f: mov rax,qword ptr [rsp+0x10]
0x5f64: add rsp,0x38
0x5f68: pop rbx
0x5f69: pop rbp
0x5f6a: pop r12
0x5f6c: pop r13
0x5f6e: pop r14
0x5f70: pop r15
0x5f72: ret 
0x5f80: mov rcx,rdx
0x5f83: xor edx,edx
0x5f85: jmp 0x5e90
0x5f90: mov eax,dword ptr [rip+0x2150c2]
0x5f96: push r12
0x5f98: mov r12,qword ptr [rip+0x2150c1]
0x5f9f: push rbp
0x5fa0: push rbx
0x5fa1: cmp eax,0x1
0x5fa4: jle 0x5fd1
0x5fa6: sub eax,0x2
0x5fa9: lea rbx,[r12+0x18]
0x5fae: shl rax,0x4
0x5fb2: lea rbp,[r12+rax+0x28]
0x5fb7: nop word ptr [rax+rax]
0x5fc0: mov rdi,qword ptr [rbx]
0x5fc3: add rbx,0x10
0x5fc7: call 0x19d0
0x5fcc: cmp rbx,rbp
0x5fcf: jne 0x5fc0
0x5fd1: mov rdi,qword ptr [r12+0x8]
0x5fd6: lea rbx,[rip+0x215123]
0x5fdd: cmp rdi,rbx
0x5fe0: je 0x5ff9
0x5fe2: call 0x19d0
0x5fe7: mov qword ptr [rip+0x21507e],0x100
0x5ff2: mov qword ptr [rip+0x21507f],rbx
0x5ff9: lea rbx,[rip+0x215070]
0x6000: cmp r12,rbx
0x6003: je 0x6014
0x6005: mov rdi,r12
0x6008: call 0x19d0
0x600d: mov qword ptr [rip+0x21504c],rbx
0x6014: pop rbx
0x6015: mov dword ptr [rip+0x215039],0x1
0x601f: pop rbp
0x6020: pop r12
0x6022: ret 
0x6030: lea rcx,[rip+0x2151c9]
0x6037: mov rdx,-0x1
0x603e: jmp 0x5b50
0x6050: lea rcx,[rip+0x2151a9]
0x6057: jmp 0x5b50
0x6060: lea rcx,[rip+0x215199]
0x6067: mov rsi,rdi
0x606a: mov rdx,-0x1
0x6071: xor edi,edi
0x6073: jmp 0x5b50
0x6080: lea rcx,[rip+0x215179]
0x6087: mov rdx,rsi
0x608a: mov rsi,rdi
0x608d: xor edi,edi
0x608f: jmp 0x5b50
0x610f: mov rcx,qword ptr [rsp+0x38]
0x6114: xor rcx,qword ptr fs:0x28
0x611d: jne 0x6129
0x611f: add rsp,0x48
0x6123: ret 
0x6124: call 0x19e0
0x6129: call 0x1ad0
0x612e: nop 
0x6130: sub rsp,0x48
0x6134: mov rax,rdx
0x6137: mov rdx,rcx
0x613a: mov rcx,qword ptr fs:0x28
0x6143: mov qword ptr [rsp+0x38],rcx
0x6148: xor ecx,ecx
0x614a: cmp esi,0xa
0x614d: je 0x61b0
0x614f: mov dword ptr [rsp],esi
0x6152: mov rcx,rsp
0x6155: mov rsi,rax
0x6158: mov qword ptr [rsp+0x4],0x0
0x6161: mov qword ptr [rsp+0xc],0x0
0x616a: mov qword ptr [rsp+0x14],0x0
0x6173: mov qword ptr [rsp+0x1c],0x0
0x617c: mov qword ptr [rsp+0x24],0x0
0x6185: mov qword ptr [rsp+0x2c],0x0
0x618e: mov dword ptr [rsp+0x34],0x0
0x6196: call 0x5b50
0x619b: mov rdx,qword ptr [rsp+0x38]
0x61a0: xor rdx,qword ptr fs:0x28
0x61a9: jne 0x61b5
0x61ab: add rsp,0x48
0x61af: ret 
0x61b0: call 0x19e0
0x61b5: call 0x1ad0
0x61ba: nop word ptr [rax+rax]
0x61c0: mov rdx,rsi
0x61c3: mov esi,edi
0x61c5: xor edi,edi
0x61c7: jmp 0x60a0
0x61d0: mov rcx,rdx
0x61d3: mov rdx,rsi
0x61d6: mov esi,edi
0x61d8: xor edi,edi
0x61da: jmp 0x6130
0x61e0: sub rsp,0x48
0x61e4: mov ecx,edx
0x61e6: mov rax,qword ptr fs:0x28
0x61ef: mov qword ptr [rsp+0x38],rax
0x61f4: xor eax,eax
0x61f6: mov rax,qword ptr [rip+0x215033]
0x61fd: mov r8,rsp
0x6200: and ecx,0x1f
0x6203: movdqa xmm0,[rip+0x214ff5]
0x620b: mov qword ptr [rsp+0x30],rax
0x6210: mov eax,edx
0x6212: movaps [rsp],xmm0
0x6216: shr al,0x5
0x6219: movzx eax,al
0x621c: lea r9,[r8+rax*4+0x8]
0x6221: movdqa xmm0,[rip+0x214fe7]
0x6229: movaps [rsp+0x10],xmm0
0x622e: movdqa xmm0,[rip+0x214fea]
0x6236: movaps [rsp+0x20],xmm0
0x623b: mov edx,dword ptr [r9]
0x623e: mov eax,edx
0x6240: shr eax,cl
0x6242: not eax
0x6244: and eax,0x1
0x6247: shl eax,cl
0x6249: mov rcx,r8
0x624c: xor eax,edx
0x624e: mov rdx,rsi
0x6251: mov rsi,rdi
0x6254: mov dword ptr [r9],eax
0x6257: xor edi,edi
0x6259: call 0x5b50
0x625e: mov rsi,qword ptr [rsp+0x38]
0x6263: xor rsi,qword ptr fs:0x28
0x626c: jne 0x6273
0x626e: add rsp,0x48
0x6272: ret 
0x6273: call 0x1ad0
0x6278: nop dword ptr [rax+rax]
0x6280: movsx edx,sil
0x6284: mov rsi,-0x1
0x628b: jmp 0x61e0
0x6290: mov edx,0x3a
0x6295: mov rsi,-0x1
0x629c: jmp 0x61e0
0x62b0: mov edx,0x3a
0x62b5: jmp 0x61e0
0x62c0: sub rsp,0x48
0x62c4: mov rax,rdx
0x62c7: mov rdx,qword ptr fs:0x28
0x62d0: mov qword ptr [rsp+0x38],rdx
0x62d5: xor edx,edx
0x62d7: cmp esi,0xa
0x62da: je 0x6344
0x62dc: mov dword ptr [rsp],esi
0x62df: mov rcx,rsp
0x62e2: mov rdx,-0x1
0x62e9: mov rsi,rax
0x62ec: mov qword ptr [rsp+0x4],0x0
0x62f5: mov qword ptr [rsp+0xc],0x4000000
0x62fe: mov qword ptr [rsp+0x14],0x0
0x6307: mov qword ptr [rsp+0x1c],0x0
0x6310: mov qword ptr [rsp+0x24],0x0
0x6319: mov qword ptr [rsp+0x2c],0x0
0x6322: mov dword ptr [rsp+0x34],0x0
0x632a: call 0x5b50
0x632f: mov rcx,qword ptr [rsp+0x38]
0x6334: xor rcx,qword ptr fs:0x28
0x633d: jne 0x6349
0x633f: add rsp,0x48
0x6343: ret 
0x6344: call 0x19e0
0x6349: call 0x1ad0
0x634e: nop 
0x6350: sub rsp,0x48
0x6354: mov r9,rcx
0x6357: mov rcx,qword ptr [rip+0x214ed2]
0x635e: movdqa xmm0,[rip+0x214e9a]
0x6366: mov rax,qword ptr fs:0x28
0x636f: mov qword ptr [rsp+0x38],rax
0x6374: xor eax,eax
0x6376: movaps [rsp],xmm0
0x637a: test rsi,rsi
0x637d: mov qword ptr [rsp+0x30],rcx
0x6382: mov dword ptr [rsp],0xa
0x6389: movdqa xmm0,[rip+0x214e7f]
0x6391: movaps [rsp+0x10],xmm0
0x6396: movdqa xmm0,[rip+0x214e82]
0x639e: movaps [rsp+0x20],xmm0
0x63a3: je 0x63d7
0x63a5: test rdx,rdx
0x63a8: je 0x63d7
0x63aa: mov qword ptr [rsp+0x28],rsi
0x63af: mov qword ptr [rsp+0x30],rdx
0x63b4: mov rcx,rsp
0x63b7: mov rdx,r8
0x63ba: mov rsi,r9
0x63bd: call 0x5b50
0x63c2: mov rdi,qword ptr [rsp+0x38]
0x63c7: xor rdi,qword ptr fs:0x28
0x63d0: jne 0x63dc
0x63d2: add rsp,0x48
0x63d6: ret 
0x63d7: call 0x19e0
0x63dc: call 0x1ad0
0x63e1: nop dword ptr [rax+rax]
0x63e6: nop word ptr cs:[rax+rax]
0x63f0: mov r8,-0x1
0x63f7: jmp 0x6350
0x6400: mov rcx,rdx
0x6403: mov r8,-0x1
0x640a: mov rdx,rsi
0x640d: mov rsi,rdi
0x6410: xor edi,edi
0x6412: jmp 0x6350
0x6420: mov r8,rcx
0x6423: mov rcx,rdx
0x6426: mov rdx,rsi
0x6429: mov rsi,rdi
0x642c: xor edi,edi
0x642e: jmp 0x6350
0x6440: lea rcx,[rip+0x214bd9]
0x6447: jmp 0x5b50
0x6450: lea rcx,[rip+0x214bc9]
0x6457: mov rdx,rsi
0x645a: mov rsi,rdi
0x645d: xor edi,edi
0x645f: jmp 0x5b50
0x6470: lea rcx,[rip+0x214ba9]
0x6477: mov rdx,-0x1
0x647e: jmp 0x5b50
0x6490: lea rcx,[rip+0x214b89]
0x6497: mov rsi,rdi
0x649a: mov rdx,-0x1
0x64a1: xor edi,edi
0x64a3: jmp 0x5b50
0x6547: movzx eax,byte ptr [rdi]
0x68d8: mov r8,rcx
0x68db: mov rcx,rdx
0x68de: lea rdx,[rip+0xfe2f]
0x68e5: mov esi,0x1
0x68ea: xor eax,eax
0x68ec: call 0x1d80
0x68f1: jmp 0x67dc
0x6aed: push r12
0x6aef: push r15
0x6af1: push r14
0x6af3: mov r8,qword ptr [rsp+0x20]
0x6af8: mov rcx,rbx
0x6afb: mov rdx,rax
0x6afe: mov rdi,rbp
0x6b01: mov esi,0x1
0x6b06: xor eax,eax
0x6b08: call 0x1d80
0x6b0d: add rsp,0x20
0x6b11: add rsp,0x28
0x6b15: pop rbx
0x6b16: pop rbp
0x6b17: pop r12
0x6b19: pop r13
0x6b1b: pop r14
0x6b1d: pop r15
0x6b1f: ret 
0x6b59: push r12
0x6b5b: push r15
0x6b5d: push r14
0x6b5f: mov r9,qword ptr [rsp+0x28]
0x6b64: jmp 0x6af3
0x6bc0: xor r9d,r9d
0x6bc3: cmp qword ptr [r8],0x0
0x6bc7: je 0x6bdb
0x6bc9: nop dword ptr [rax]
0x6bd0: add r9,0x1
0x6bd4: cmp qword ptr [r8+r9*8],0x0
0x6bd9: jne 0x6bd0
0x6bdb: jmp 0x67a0
0x6c08: mov r11d,eax
0x6c0b: add r11,qword ptr [r10+0x10]
0x6c0f: add eax,0x8
0x6c12: mov dword ptr [r10],eax
0x6c45: call 0x1ad0
0x6c60: push rbp
0x6c61: push rbx
0x6c62: mov r10d,0x20
0x6c68: xor r11d,r11d
0x6c6b: sub rsp,0xb8
0x6c72: mov rax,qword ptr fs:0x28
0x6c7b: mov qword ptr [rsp+0x78],rax
0x6c80: xor eax,eax
0x6c82: lea rax,[rsp+0xd0]
0x6c8a: mov qword ptr [rsp+0xa0],r8
0x6c92: lea rbx,[rsp+0xd0]
0x6c9a: lea r8,[rsp+0x20]
0x6c9f: mov qword ptr [rsp+0xa8],r9
0x6ca7: mov dword ptr [rsp+0x8],0x20
0x6caf: mov qword ptr [rsp+0x10],rax
0x6cb4: lea rax,[rsp+0x80]
0x6cbc: xor r9d,r9d
0x6cbf: mov qword ptr [rsp+0x18],rax
0x6cc4: mov rbp,rax
0x6cc7: nop word ptr [rax+rax]
0x6cd0: cmp r10d,0x2f
0x6cd4: ja 0x6d2c
0x6cd6: mov eax,r10d
0x6cd9: mov r11d,0x1
0x6cdf: add r10d,0x8
0x6ce3: add rax,rbp
0x6ce6: mov rax,qword ptr [rax]
0x6ce9: test rax,rax
0x6cec: mov qword ptr [r8+r9*8],rax
0x6cf0: je 0x6cfc
0x6cf2: add r9,0x1
0x6cf6: cmp r9,0xa
0x6cfa: jne 0x6cd0
0x6cfc: test r11b,r11b
0x6cff: jne 0x6d25
0x6d01: call 0x67a0
0x6d06: mov rax,qword ptr [rsp+0x78]
0x6d0b: xor rax,qword ptr fs:0x28
0x6d14: jne 0x6d20
0x6d16: add rsp,0xb8
0x6d1d: pop rbx
0x6d1e: pop rbp
0x6d1f: ret 
0x6d20: call 0x1ad0
0x6d25: mov dword ptr [rsp+0x8],r10d
0x6d2a: jmp 0x6d01
0x6d2c: mov rax,rbx
0x6d2f: add rbx,0x8
0x6d33: jmp 0x6ce6
0x6d40: push rbx
0x6d41: lea rsi,[rip+0xfa1a]
0x6d48: mov edx,0x5
0x6d4d: xor edi,edi
0x6d4f: call 0x1a90
0x6d54: lea rdx,[rip+0xfa1c]
0x6d5b: mov rsi,rax
0x6d5e: mov edi,0x1
0x6d63: xor eax,eax
0x6d65: call 0x1cb0
0x6d6a: lea rsi,[rip+0xfa1c]
0x6d71: mov edx,0x5
0x6d76: xor edi,edi
0x6d78: call 0x1a90
0x6d7d: lea rcx,[rip+0xf0ac]
0x6d84: lea rdx,[rip+0xf27f]
0x6d8b: mov rsi,rax
0x6d8e: mov edi,0x1
0x6d93: xor eax,eax
0x6d95: call 0x1cb0
0x6d9a: mov rbx,qword ptr [rip+0x2142e7]
0x6da1: lea rsi,[rip+0xfc18]
0x6da8: xor edi,edi
0x6daa: mov edx,0x5
0x6daf: call 0x1a90
0x6db4: mov rsi,rbx
0x6db7: mov rdi,rax
0x6dba: pop rbx
0x6dbb: jmp 0x1bb0
0x6dda: nop word ptr [rax+rax]
0x6de0: mov rax,rdi
0x6de3: mul rsi
0x6de6: mov rdi,rax
0x6de9: seto al
0x6dec: test rdi,rdi
0x6def: js 0x6dfb
0x6df1: movzx eax,al
0x6df4: test rax,rax
0x6df7: jne 0x6dfb
0x6df9: jmp 0x6dc0
0x6dfb: sub rsp,0x8
0x6dff: call 0x7010
0x6e04: nop 
0x6e06: nop word ptr cs:[rax+rax]
0x6e10: jmp 0x6dc0
0x6e29: test rdi,rdi
0x6e2c: jne 0x6e48
0x6e48: call 0x19d0
0x6e4d: xor eax,eax
0x6e4f: pop rbx
0x6e50: ret 
0x6e56: nop word ptr cs:[rax+rax]
0x6e60: mov rax,rsi
0x6e63: mul rdx
0x6e66: mov rsi,rax
0x6e69: seto al
0x6e6c: test rsi,rsi
0x6e6f: js 0x6e7b
0x6e71: movzx eax,al
0x6e74: test rax,rax
0x6e77: jne 0x6e7b
0x6e79: jmp 0x6e20
0x6e7b: sub rsp,0x8
0x6e7f: call 0x7010
0x6e84: nop 
0x6e86: nop word ptr cs:[rax+rax]
0x6e90: test rdi,rdi
0x6e93: mov r9,rdx
0x6e96: mov rcx,qword ptr [rsi]
0x6e99: je 0x6ed0
0x6e9b: xor edx,edx
0x6e9d: movabsq rax,0x5555555555555554
0x6ea7: div r9
0x6eaa: cmp rax,rcx
0x6ead: jbe 0x6eeb
0x6eaf: mov rax,rcx
0x6eb2: shr rax, 1
0x6eb5: lea rcx,[rax+rcx+0x1]
0x6eba: mov qword ptr [rsi],rcx
0x6ebd: imul rcx,r9
0x6ec1: mov rsi,rcx
0x6ec4: jmp 0x6e20
0x6ed0: test rcx,rcx
0x6ed3: je 0x6ef8
0x6ed5: mov rax,rcx
0x6ed8: mul r9
0x6edb: seto dl
0x6ede: test rax,rax
0x6ee1: movzx edx,dl
0x6ee4: js 0x6eeb
0x6ee6: test rdx,rdx
0x6ee9: je 0x6eba
0x6eeb: sub rsp,0x8
0x6eef: call 0x7010
0x6ef4: nop dword ptr [rax]
0x6ef8: xor edx,edx
0x6efa: mov eax,0x80
0x6eff: xor r8d,r8d
0x6f02: div r9
0x6f05: test rax,rax
0x6f08: sete r8b
0x6f0c: lea rcx,[r8+rax]
0x6f10: jmp 0x6ed5
0x6f20: test rdi,rdi
0x6f23: mov rax,qword ptr [rsi]
0x6f26: je 0x6f50
0x6f28: movabsq rdx,0x5555555555555553
0x6f32: cmp rax,rdx
0x6f35: ja 0x6f61
0x6f37: mov rdx,rax
0x6f3a: shr rdx, 1
0x6f3d: lea rax,[rdx+rax+0x1]
0x6f42: mov qword ptr [rsi],rax
0x6f45: mov rsi,rax
0x6f48: jmp 0x6e20
0x6f50: test rax,rax
0x6f53: mov edx,0x80
0x6f58: cmove rax,rdx
0x6f5c: test rax,rax
0x6f5f: jns 0x6f42
0x6f61: sub rsp,0x8
0x6f65: call 0x7010
0x6f6a: nop word ptr [rax+rax]
0x6f70: push rbx
0x6f71: mov rbx,rdi
0x6f74: call 0x6dc0
0x6f79: mov rdx,rbx
0x6f7c: xor esi,esi
0x6f7e: mov rdi,rax
0x6f81: pop rbx
0x6f82: jmp 0x1b60
0x6f90: mov rax,rdi
0x6f93: sub rsp,0x8
0x6f97: mul rsi
0x6f9a: seto dl
0x6f9d: test rax,rax
0x6fa0: js 0x6fb9
0x6fa2: movzx edx,dl
0x6fa5: test rdx,rdx
0x6fa8: jne 0x6fb9
0x6faa: call 0x1bc0
0x6faf: test rax,rax
0x6fb2: je 0x6fb9
0x6fb4: add rsp,0x8
0x6fb8: ret 
0x6fb9: call 0x7010
0x6fbe: nop 
0x7040: call 0x19e0
0x7045: nop word ptr cs:[rax+rax]
0x704f: nop 
0x70ce: call 0x1ad0
0x70d3: nop word ptr cs:[rax+rax]
0x70dd: nop dword ptr [rax]
0x70e0: mov rax,qword ptr [rsi+0x48]
0x70e4: cmp qword ptr [rsi+0x68],rax
0x70e8: jle 0x7140
0x70ea: mov r8,qword ptr [rsi+0x8]
0x70ee: cmp dword ptr [rsi+0x90],0x1
0x70f5: movzx ecx,byte ptr [r8+rax]
0x70fa: mov byte ptr [rdi],cl
0x70fc: jle 0x7113
0x70fe: cmp rax,qword ptr [rsi+0x30]
0x7102: je 0x7113
0x7104: mov r9,qword ptr [rsi+0x10]
0x7108: cmp dword ptr [r9+rax*4],-0x1
0x710d: je 0x718f
0x7113: cmp cl,0x5c
0x7116: je 0x7180
0x7118: cmp cl,0x5b
0x711b: je 0x7150
0x711d: cmp cl,0x5d
0x7120: je 0x71c0
0x7126: cmp cl,0x5e
0x7129: je 0x71b0
0x712f: cmp cl,0x2d
0x7132: jne 0x718f
0x7134: mov byte ptr [rdi+0x8],0x16
0x7138: mov eax,0x1
0x713d: ret 
0x7140: mov byte ptr [rdi+0x8],0x2
0x7144: xor eax,eax
0x7146: ret 
0x7150: lea rcx,[rax+0x1]
0x7154: cmp rcx,qword ptr [rsi+0x58]
0x7158: jge 0x71a0
0x715a: movzx eax,byte ptr [r8+rax+0x1]
0x7160: cmp al,0x3a
0x7162: mov byte ptr [rdi],al
0x7164: je 0x7200
0x716a: cmp al,0x3d
0x716c: je 0x71f0
0x7172: cmp al,0x2e
0x7174: jne 0x71a0
0x7176: mov byte ptr [rdi+0x8],0x1a
0x717a: mov eax,0x2
0x717f: ret 
0x7180: and edx,0x1
0x7183: je 0x718f
0x7185: lea rdx,[rax+0x1]
0x7189: cmp rdx,qword ptr [rsi+0x58]
0x718d: jl 0x71d0
0x718f: mov byte ptr [rdi+0x8],0x1
0x7193: mov eax,0x1
0x7198: ret 
0x71a0: mov byte ptr [rdi+0x8],0x1
0x71a4: mov byte ptr [rdi],0x5b
0x71a7: mov eax,0x1
0x71ac: ret 
0x71b0: mov byte ptr [rdi+0x8],0x19
0x71b4: mov eax,0x1
0x71b9: ret 
0x71c0: mov byte ptr [rdi+0x8],0x15
0x71c4: mov eax,0x1
0x71c9: ret 
0x71d0: mov qword ptr [rsi+0x48],rdx
0x71d4: movzx eax,byte ptr [r8+rax+0x1]
0x71da: mov byte ptr [rdi+0x8],0x1
0x71de: mov byte ptr [rdi],al
0x71e0: mov eax,0x1
0x71e5: ret 
0x71f0: mov byte ptr [rdi+0x8],0x1c
0x71f4: mov eax,0x2
0x71f9: ret 
0x7200: and edx,0x4
0x7203: je 0x71a0
0x7205: mov byte ptr [rdi+0x8],0x1e
0x7209: mov eax,0x2
0x720e: ret 
0x7210: cmp byte ptr [rsi+0x30],0x11
0x7214: je 0x7220
0x7216: xor eax,eax
0x7218: ret 
0x7220: cmp rdi,qword ptr [rsi+0x28]
0x7224: jne 0x7216
0x7226: or byte ptr [rsi+0x32],0x8
0x722a: xor eax,eax
0x722c: ret 
0x7392: cmp eax,-0x1
0x7395: je 0x72fe
0x739b: test eax,eax
0x739d: jne 0x73a7
0x739f: mov esi,dword ptr [rsp+0x8]
0x73a3: test esi,esi
0x73a5: jne 0x7425
0x73a7: cmp r15,0x3f
0x73ab: jg 0x73c0
0x73ad: movzx eax,word ptr [rsp+0x26]
0x73b2: and word ptr [r13+0x22],ax
0x73b7: nop word ptr [rax+rax]
0x7618: mov rdi,qword ptr [rbx+0x8]
0x761c: mov rsi,rbp
0x761f: call 0x1c90
0x7624: test rax,rax
0x7627: je 0x7630
0x7629: mov qword ptr [rbx+0x8],rax
0x762d: jmp 0x7606
0x7afe: call 0x1ad0
0x7b03: nop dword ptr [rax]
0x7b06: nop word ptr cs:[rax+rax]
0x810a: call 0x1ad0
0x8603: push rsi
0x8908: mov rdi,qword ptr [rbx+0x8]
0x890c: pop rbx
0x890d: jmp 0x19d0
0x959a: call 0x1ad0
0x959f: nop 
0x96f4: call 0x1ad0
0x96f9: nop dword ptr [rax]
0x9990: push r14
0x9992: push r13
0x9994: lea r13,[rsi+0x70]
0x9998: push r12
0x999a: push rbp
0x999b: lea r12,[rsi+0x80]
0x99a2: push rbx
0x99a3: mov rbx,rdi
0x99a6: sub rsp,0x10
0x99aa: mov rbp,qword ptr [rdi]
0x99ad: mov rax,qword ptr fs:0x28
0x99b6: mov qword ptr [rsp+0x8],rax
0x99bb: xor eax,eax
0x99bd: mov r14,rsp
0x99c0: lea r8,[rbx+0x28]
0x99c4: xor ecx,ecx
0x99c6: xor edx,edx
0x99c8: mov rsi,r12
0x99cb: mov rdi,r13
0x99ce: call 0x98b0
0x99d3: test rax,rax
0x99d6: mov qword ptr [r14],rax
0x99d9: je 0x9a2c
0x99db: mov qword ptr [rax],rbp
0x99de: mov rbp,qword ptr [r14]
0x99e1: or byte ptr [rbp+0x32],0x4
0x99e5: mov rax,qword ptr [rbx+0x8]
0x99e9: test rax,rax
0x99ec: je 0x9a00
0x99ee: lea r14,[rbp+0x8]
0x99f2: mov rbx,rax
0x99f5: jmp 0x99c0
0x9a00: xor edx,edx
0x9a02: jmp 0x9a0b
0x9a08: mov rbx,rax
0x9a0b: mov rax,qword ptr [rbx+0x10]
0x9a0f: test rax,rax
0x9a12: je 0x9a19
0x9a14: cmp rax,rdx
0x9a17: jne 0x9a50
0x9a19: mov rax,qword ptr [rbx]
0x9a1c: mov rbp,qword ptr [rbp]
0x9a20: mov rdx,rbx
0x9a23: test rax,rax
0x9a26: jne 0x9a08
0x9a28: mov rax,qword ptr [rsp]
0x9a2c: mov rcx,qword ptr [rsp+0x8]
0x9a31: xor rcx,qword ptr fs:0x28
0x9a3a: jne 0x9a5c
0x9a3c: add rsp,0x10
0x9a40: pop rbx
0x9a41: pop rbp
0x9a42: pop r12
0x9a44: pop r13
0x9a46: pop r14
0x9a48: ret 
0x9a50: lea r14,[rbp+0x10]
0x9a54: mov rbx,rax
0x9a57: jmp 0x99c0
0x9a5c: call 0x1ad0
0x9a61: nop dword ptr [rax+rax]
0x9a66: nop word ptr cs:[rax+rax]
0x9ca2: call 0x1ad0
0x9ca7: nop word ptr [rax+rax]
0x9d4b: call 0x1ad0
0xa4d7: call 0x1ad0
0xa4dc: nop dword ptr [rax]
0xa879: call 0x1ad0
0xa87e: nop 
0xb124: jmp 0xad9e
0xb130: mov rdi,qword ptr [rbx+0x8]
0xb134: mov rdx,r8
0xb137: lea rsi,[rdi+rbp]
0xb13b: call 0x1cf0
0xb140: movzx eax,byte ptr [rbx+0x8b]
0xb147: sub qword ptr [rbx+0x30],rbp
0xb14b: sub qword ptr [rbx+0x38],rbp
0xb14f: jmp 0xb11c
0xb210: cmp byte ptr [rbx+0x88],0x0
0xb217: jne 0xb310
0xb21d: mov rcx,qword ptr [rbx+0x78]
0xb221: test rcx,rcx
0xb224: je 0xadd3
0xb22a: cmp qword ptr [rbx+0x40],rax
0xb22e: mov rdx,qword ptr [rbx+0x30]
0xb232: cmovle rax,qword ptr [rbx+0x40]
0xb237: cmp rax,rdx
0xb23a: jg 0xb248
0xb23c: jmp 0xb268
0xb240: mov r15,qword ptr [rbx+0x28]
0xb244: mov rcx,qword ptr [rbx+0x78]
0xb248: mov rsi,qword ptr [rbx]
0xb24b: add rsi,rdx
0xb24e: movzx esi,byte ptr [rsi+r15]
0xb253: movzx esi,byte ptr [rcx+rsi]
0xb257: mov rcx,qword ptr [rbx+0x8]
0xb25b: mov byte ptr [rcx+rdx],sil
0xb25f: add rdx,0x1
0xb263: cmp rax,rdx
0xb266: jne 0xb240
0xb268: mov qword ptr [rbx+0x30],rdx
0xb26c: mov qword ptr [rbx+0x38],rdx
0xb270: jmp 0xadd3
0xb310: mov rdi,rbx
0xb313: call 0x78d0
0xb318: jmp 0xadd3
0xb3e8: mov rdi,qword ptr [rbx+0x8]
0xb3ec: mov rdx,r12
0xb3ef: mov esi,0xff
0xb3f4: call 0x1b60
0xb3f9: mov r12,qword ptr [rbx+0x30]
0xb3fd: jmp 0xaf54
0xb43a: call 0x1ad0
0xb43f: nop 
0xb676: call 0x1ad0
0xb67b: nop dword ptr [rax+rax]
0xc1f4: call 0x1ad0
0xc394: nop 
0xc396: nop word ptr cs:[rax+rax]
0xc3a0: push rbp
0xc3a1: push rbx
0xc3a2: mov rbp,rdi
0xc3a5: mov rdi,rsi
0xc3a8: mov rbx,rsi
0xc3ab: sub rsp,0x8
0xc3af: call 0x1ab0
0xc3b4: cmp rax,0x1
0xc3b8: jne 0xc3e0
0xc3ba: movzx ecx,byte ptr [rbx]
0xc3bd: mov rdx,rcx
0xc3c0: and ecx,0x3f
0xc3c3: shr rdx,0x3
0xc3c7: shl rax,cl
0xc3ca: and edx,0x18
0xc3cd: or qword ptr [rbp+rdx],rax
0xc3d2: add rsp,0x8
0xc3d6: xor eax,eax
0xc3d8: pop rbx
0xc3d9: pop rbp
0xc3da: ret 
0xc3e0: add rsp,0x8
0xc3e4: mov eax,0x3
0xc3e9: pop rbx
0xc3ea: pop rbp
0xc3eb: ret 
0xc3f0: push r14
0xc3f2: push r13
0xc3f4: mov r13,rcx
0xc3f7: push r12
0xc3f9: push rbp
0xc3fa: mov r12,r9
0xc3fd: push rbx
0xc3fe: mov rbp,rdi
0xc401: mov rbx,rsi
0xc404: sub rsp,0x10
0xc408: test qword ptr [rsp+0x40],0x400000
0xc411: je 0xc438
0xc413: lea rdi,[rip+0xa6dd]
0xc41a: mov ecx,0x6
0xc41f: mov rsi,r9
0xc422: rep cmpsb [rsi],es:[rdi]
0xc424: seta al
0xc427: sbb al,0x0
0xc429: test al,al
0xc42b: jne 0xc526
0xc431: lea r12,[rip+0xa6b9]
0xc438: mov rcx,qword ptr [r13]
0xc43c: cmp qword ptr [r8],rcx
0xc43f: mov rax,qword ptr [rdx]
0xc442: je 0xc559
0xc448: lea rdx,[rcx+0x1]
0xc44c: mov rdi,r12
0xc44f: mov qword ptr [r13],rdx
0xc453: lea r13,[rax+rcx*8]
0xc457: call 0x1ba0
0xc45c: lea rdi,[rip+0xa6a0]
0xc463: mov qword ptr [r13],rax
0xc467: mov ecx,0x6
0xc46c: mov rsi,r12
0xc46f: rep cmpsb [rsi],es:[rdi]
0xc471: seta al
0xc474: sbb al,0x0
0xc476: test al,al
0xc478: je 0xc4e8
0xc47a: lea rdi,[rip+0xa688]
0xc481: mov ecx,0x6
0xc486: mov rsi,r12
0xc489: rep cmpsb [rsi],es:[rdi]
0xc48b: seta al
0xc48e: sbb al,0x0
0xc490: test al,al
0xc492: jne 0xc598
0xc498: call 0x1dc0
0xc49d: xor ecx,ecx
0xc49f: test rbp,rbp
0xc4a2: mov rdx,qword ptr [rax]
0xc4a5: mov edi,0x1
0xc4aa: jne 0xc76a
0xc4b0: test byte ptr [rdx+rcx*2],0x2
0xc4b4: je 0xc4c7
0xc4b6: mov rax,rcx
0xc4b9: mov rsi,rdi
0xc4bc: sar rax,0x6
0xc4c0: shl rsi,cl
0xc4c3: or qword ptr [rbx+rax*8],rsi
0xc4c7: add rcx,0x1
0xc4cb: cmp rcx,0x100
0xc4d2: jne 0xc4b0
0xc4d4: xor eax,eax
0xc4d6: add rsp,0x10
0xc4da: pop rbx
0xc4db: pop rbp
0xc4dc: pop r12
0xc4de: pop r13
0xc4e0: pop r14
0xc4e2: ret 
0xc4e8: call 0x1dc0
0xc4ed: xor ecx,ecx
0xc4ef: test rbp,rbp
0xc4f2: mov rdx,qword ptr [rax]
0xc4f5: mov edi,0x1
0xc4fa: jne 0xc6ea
0xc500: test byte ptr [rdx+rcx*2],0x8
0xc504: je 0xc517
0xc506: mov rax,rcx
0xc509: mov rsi,rdi
0xc50c: sar rax,0x6
0xc510: shl rsi,cl
0xc513: or qword ptr [rbx+rax*8],rsi
0xc517: add rcx,0x1
0xc51b: cmp rcx,0x100
0xc522: jne 0xc500
0xc524: jmp 0xc4d4
0xc526: lea rdi,[rip+0xa5d0]
0xc52d: mov ecx,0x6
0xc532: mov rsi,r9
0xc535: rep cmpsb [rsi],es:[rdi]
0xc537: mov rcx,qword ptr [r13]
0xc53b: seta al
0xc53e: sbb al,0x0
0xc540: test al,al
0xc542: lea rax,[rip+0xa5a8]
0xc549: cmove r12,rax
0xc54d: cmp qword ptr [r8],rcx
0xc550: mov rax,qword ptr [rdx]
0xc553: jne 0xc448
0xc559: lea r14,[rcx+rcx+0x1]
0xc55e: mov rdi,rax
0xc561: mov qword ptr [rsp+0x8],r8
0xc566: mov qword ptr [rsp],rdx
0xc56a: lea rsi,[r14*8]
0xc572: call 0x1c90
0xc577: test rax,rax
0xc57a: je 0xc898
0xc580: mov rdx,qword ptr [rsp]
0xc584: mov r8,qword ptr [rsp+0x8]
0xc589: mov qword ptr [rdx],rax
0xc58c: mov qword ptr [r8],r14
0xc58f: mov rcx,qword ptr [r13]
0xc593: jmp 0xc448
0xc598: lea rdi,[rip+0xa55e]
0xc59f: mov ecx,0x6
0xc5a4: mov rsi,r12
0xc5a7: rep cmpsb [rsi],es:[rdi]
0xc5a9: seta al
0xc5ac: sbb al,0x0
0xc5ae: test al,al
0xc5b0: je 0xc61a
0xc5b2: lea rdi,[rip+0xa556]
0xc5b9: mov ecx,0x6
0xc5be: mov rsi,r12
0xc5c1: rep cmpsb [rsi],es:[rdi]
0xc5c3: seta al
0xc5c6: sbb al,0x0
0xc5c8: test al,al
0xc5ca: jne 0xc662
0xc5d0: call 0x1dc0
0xc5d5: xor ecx,ecx
0xc5d7: test rbp,rbp
0xc5da: mov rdx,qword ptr [rax]
0xc5dd: mov edi,0x1
0xc5e2: jne 0xc93e
0xc5e8: nop dword ptr [rax+rax]
0xc5f0: test byte ptr [rdx+rcx*2+0x1],0x20
0xc5f5: je 0xc608
0xc5f7: mov rax,rcx
0xc5fa: mov rsi,rdi
0xc5fd: sar rax,0x6
0xc601: shl rsi,cl
0xc604: or qword ptr [rbx+rax*8],rsi
0xc608: add rcx,0x1
0xc60c: cmp rcx,0x100
0xc613: jne 0xc5f0
0xc615: jmp 0xc4d4
0xc61a: call 0x1dc0
0xc61f: xor ecx,ecx
0xc621: test rbp,rbp
0xc624: mov rdx,qword ptr [rax]
0xc627: mov edi,0x1
0xc62c: jne 0xc802
0xc632: nop word ptr [rax+rax]
0xc638: test byte ptr [rdx+rcx*2+0x1],0x2
0xc63d: je 0xc650
0xc63f: mov rax,rcx
0xc642: mov rsi,rdi
0xc645: sar rax,0x6
0xc649: shl rsi,cl
0xc64c: or qword ptr [rbx+rax*8],rsi
0xc650: add rcx,0x1
0xc654: cmp rcx,0x100
0xc65b: jne 0xc638
0xc65d: jmp 0xc4d4
0xc662: lea rdi,[rip+0xa488]
0xc669: mov ecx,0x6
0xc66e: mov rsi,r12
0xc671: rep cmpsb [rsi],es:[rdi]
0xc673: seta al
0xc676: sbb al,0x0
0xc678: test al,al
0xc67a: je 0xc723
0xc680: lea rdi,[rip+0xa4a7]
0xc687: mov ecx,0x6
0xc68c: mov rsi,r12
0xc68f: rep cmpsb [rsi],es:[rdi]
0xc691: seta al
0xc694: sbb al,0x0
0xc696: test al,al
0xc698: jne 0xc7a3
0xc69e: call 0x1dc0
0xc6a3: xor ecx,ecx
0xc6a5: test rbp,rbp
0xc6a8: mov rdx,qword ptr [rax]
0xc6ab: mov edi,0x1
0xc6b0: jne 0xcb5a
0xc6b6: nop word ptr cs:[rax+rax]
0xc6c0: test byte ptr [rdx+rcx*2+0x1],0x8
0xc6c5: je 0xc6d8
0xc6c7: mov rax,rcx
0xc6ca: mov rsi,rdi
0xc6cd: sar rax,0x6
0xc6d1: shl rsi,cl
0xc6d4: or qword ptr [rbx+rax*8],rsi
0xc6d8: add rcx,0x1
0xc6dc: cmp rcx,0x100
0xc6e3: jne 0xc6c0
0xc6e5: jmp 0xc4d4
0xc6ea: xor eax,eax
0xc6ec: nop dword ptr [rax]
0xc6f0: test byte ptr [rdx+rax*2],0x8
0xc6f4: je 0xc712
0xc6f6: movzx ecx,byte ptr [rbp+rax]
0xc6fb: mov r10,rdi
0xc6fe: mov rsi,rcx
0xc701: and ecx,0x3f
0xc704: shr rsi,0x3
0xc708: shl r10,cl
0xc70b: and esi,0x18
0xc70e: or qword ptr [rbx+rsi],r10
0xc712: add rax,0x1
0xc716: cmp rax,0x100
0xc71c: jne 0xc6f0
0xc71e: jmp 0xc4d4
0xc723: call 0x1dc0
0xc728: xor ecx,ecx
0xc72a: test rbp,rbp
0xc72d: mov rdx,qword ptr [rax]
0xc730: mov edi,0x1
0xc735: jne 0xc908
0xc73b: nop dword ptr [rax+rax]
0xc740: test byte ptr [rdx+rcx*2+0x1],0x4
0xc745: je 0xc758
0xc747: mov rax,rcx
0xc74a: mov rsi,rdi
0xc74d: sar rax,0x6
0xc751: shl rsi,cl
0xc754: or qword ptr [rbx+rax*8],rsi
0xc758: add rcx,0x1
0xc75c: cmp rcx,0x100
0xc763: jne 0xc740
0xc765: jmp 0xc4d4
0xc76a: xor eax,eax
0xc76c: nop dword ptr [rax]
0xc770: test byte ptr [rdx+rax*2],0x2
0xc774: je 0xc792
0xc776: movzx ecx,byte ptr [rbp+rax]
0xc77b: mov r11,rdi
0xc77e: mov rsi,rcx
0xc781: and ecx,0x3f
0xc784: shr rsi,0x3
0xc788: shl r11,cl
0xc78b: and esi,0x18
0xc78e: or qword ptr [rbx+rsi],r11
0xc792: add rax,0x1
0xc796: cmp rax,0x100
0xc79c: jne 0xc770
0xc79e: jmp 0xc4d4
0xc7a3: lea rdi,[rip+0xa36b]
0xc7aa: mov ecx,0x6
0xc7af: mov rsi,r12
0xc7b2: rep cmpsb [rsi],es:[rdi]
0xc7b4: seta al
0xc7b7: sbb al,0x0
0xc7b9: test al,al
0xc7bb: jne 0xc83c
0xc7bd: call 0x1dc0
0xc7c2: xor ecx,ecx
0xc7c4: test rbp,rbp
0xc7c7: mov rdx,qword ptr [rax]
0xc7ca: mov edi,0x1
0xc7cf: jne 0xcbc7
0xc7d5: nop dword ptr [rax]
0xc7d8: test byte ptr [rdx+rcx*2+0x1],0x40
0xc7dd: je 0xc7f0
0xc7df: mov rax,rcx
0xc7e2: mov rsi,rdi
0xc7e5: sar rax,0x6
0xc7e9: shl rsi,cl
0xc7ec: or qword ptr [rbx+rax*8],rsi
0xc7f0: add rcx,0x1
0xc7f4: cmp rcx,0x100
0xc7fb: jne 0xc7d8
0xc7fd: jmp 0xc4d4
0xc802: xor eax,eax
0xc804: nop dword ptr [rax]
0xc808: test byte ptr [rdx+rax*2+0x1],0x2
0xc80d: je 0xc82b
0xc80f: movzx ecx,byte ptr [rbp+rax]
0xc814: mov r14,rdi
0xc817: mov rsi,rcx
0xc81a: and ecx,0x3f
0xc81d: shr rsi,0x3
0xc821: shl r14,cl
0xc824: and esi,0x18
0xc827: or qword ptr [rbx+rsi],r14
0xc82b: add rax,0x1
0xc82f: cmp rax,0x100
0xc835: jne 0xc808
0xc837: jmp 0xc4d4
0xc83c: lea rdi,[rip+0xa2b4]
0xc843: mov ecx,0x6
0xc848: mov rsi,r12
0xc84b: rep cmpsb [rsi],es:[rdi]
0xc84d: seta al
0xc850: sbb al,0x0
0xc852: test al,al
0xc854: jne 0xc8a2
0xc856: call 0x1dc0
0xc85b: xor ecx,ecx
0xc85d: test rbp,rbp
0xc860: mov rax,qword ptr [rax]
0xc863: mov edi,0x1
0xc868: jne 0xcb90
0xc86e: test byte ptr [rax+rcx*2+0x1],0x1
0xc873: je 0xc886
0xc875: mov rdx,rcx
0xc878: mov rsi,rdi
0xc87b: sar rdx,0x6
0xc87f: shl rsi,cl
0xc882: or qword ptr [rbx+rdx*8],rsi
0xc886: add rcx,0x1
0xc88a: cmp rcx,0x100
0xc891: jne 0xc86e
0xc893: jmp 0xc4d4
0xc898: mov eax,0xc
0xc89d: jmp 0xc4d6
0xc8a2: lea rdi,[rip+0xa272]
0xc8a9: mov ecx,0x6
0xc8ae: mov rsi,r12
0xc8b1: rep cmpsb [rsi],es:[rdi]
0xc8b3: seta al
0xc8b6: sbb al,0x0
0xc8b8: test al,al
0xc8ba: jne 0xc9ae
0xc8c0: call 0x1dc0
0xc8c5: xor ecx,ecx
0xc8c7: test rbp,rbp
0xc8ca: mov rdx,qword ptr [rax]
0xc8cd: mov esi,0x1
0xc8d2: jne 0xc974
0xc8d8: test byte ptr [rdx+rcx*2],0x1
0xc8dc: je 0xc8ef
0xc8de: mov rax,rcx
0xc8e1: mov rdi,rsi
0xc8e4: sar rax,0x6
0xc8e8: shl rdi,cl
0xc8eb: or qword ptr [rbx+rax*8],rdi
0xc8ef: add rcx,0x1
0xc8f3: cmp rcx,0x100
0xc8fa: jne 0xc8d8
0xc8fc: jmp 0xc4d4
0xc908: xor eax,eax
0xc90a: test byte ptr [rdx+rax*2+0x1],0x4
0xc90f: je 0xc92d
0xc911: movzx ecx,byte ptr [rbp+rax]
0xc916: mov r9,rdi
0xc919: mov rsi,rcx
0xc91c: and ecx,0x3f
0xc91f: shr rsi,0x3
0xc923: shl r9,cl
0xc926: and esi,0x18
0xc929: or qword ptr [rbx+rsi],r9
0xc92d: add rax,0x1
0xc931: cmp rax,0x100
0xc937: jne 0xc90a
0xc939: jmp 0xc4d4
0xc93e: xor eax,eax
0xc940: test byte ptr [rdx+rax*2+0x1],0x20
0xc945: je 0xc963
0xc947: movzx ecx,byte ptr [rbp+rax]
0xc94c: mov r9,rdi
0xc94f: mov rsi,rcx
0xc952: and ecx,0x3f
0xc955: shr rsi,0x3
0xc959: shl r9,cl
0xc95c: and esi,0x18
0xc95f: or qword ptr [rbx+rsi],r9
0xc963: add rax,0x1
0xc967: cmp rax,0x100
0xc96d: jne 0xc940
0xc96f: jmp 0xc4d4
0xc974: xor eax,eax
0xc976: mov edi,0x1
0xc97b: test byte ptr [rdx+rax*2],0x1
0xc97f: je 0xc99d
0xc981: movzx ecx,byte ptr [rbp+rax]
0xc986: mov r14,rdi
0xc989: mov rsi,rcx
0xc98c: and ecx,0x3f
0xc98f: shr rsi,0x3
0xc993: shl r14,cl
0xc996: and esi,0x18
0xc999: or qword ptr [rbx+rsi],r14
0xc99d: add rax,0x1
0xc9a1: cmp rax,0x100
0xc9a7: jne 0xc97b
0xc9a9: jmp 0xc4d4
0xc9ae: lea rsi,[rip+0xa16c]
0xc9b5: mov rdi,r12
0xc9b8: call 0x1bd0
0xc9bd: test eax,eax
0xc9bf: jne 0xca3a
0xc9c1: call 0x1dc0
0xc9c6: xor ecx,ecx
0xc9c8: test rbp,rbp
0xc9cb: mov rsi,qword ptr [rax]
0xc9ce: mov edx,0x1
0xc9d3: jne 0xc9ff
0xc9d5: cmp word ptr [rsi+rcx*2],0x0
0xc9da: jns 0xc9ed
0xc9dc: mov rax,rcx
0xc9df: mov rdi,rdx
0xc9e2: sar rax,0x6
0xc9e6: shl rdi,cl
0xc9e9: or qword ptr [rbx+rax*8],rdi
0xc9ed: add rcx,0x1
0xc9f1: cmp rcx,0x100
0xc9f8: jne 0xc9d5
0xc9fa: jmp 0xc4d4
0xc9ff: xor eax,eax
0xca01: mov edi,0x1
0xca06: cmp word ptr [rsi+rax*2],0x0
0xca0b: jns 0xca29
0xca0d: movzx ecx,byte ptr [rbp+rax]
0xca12: mov r9,rdi
0xca15: mov rdx,rcx
0xca18: and ecx,0x3f
0xca1b: shr rdx,0x3
0xca1f: shl r9,cl
0xca22: and edx,0x18
0xca25: or qword ptr [rbx+rdx],r9
0xca29: add rax,0x1
0xca2d: cmp rax,0x100
0xca33: jne 0xca06
0xca35: jmp 0xc4d4
0xca3a: lea rsi,[rip+0xa0e6]
0xca41: mov rdi,r12
0xca44: call 0x1bd0
0xca49: test eax,eax
0xca4b: jne 0xcac4
0xca4d: call 0x1dc0
0xca52: xor ecx,ecx
0xca54: test rbp,rbp
0xca57: mov rsi,qword ptr [rax]
0xca5a: mov edx,0x1
0xca5f: jne 0xca8a
0xca61: test byte ptr [rsi+rcx*2],0x4
0xca65: je 0xca78
0xca67: mov rax,rcx
0xca6a: mov rdi,rdx
0xca6d: sar rax,0x6
0xca71: shl rdi,cl
0xca74: or qword ptr [rbx+rax*8],rdi
0xca78: add rcx,0x1
0xca7c: cmp rcx,0x100
0xca83: jne 0xca61
0xca85: jmp 0xc4d4
0xca8a: xor eax,eax
0xca8c: mov edi,0x1
0xca91: test byte ptr [rsi+rax*2],0x4
0xca95: je 0xcab3
0xca97: movzx ecx,byte ptr [rbp+rax]
0xca9c: mov r14,rdi
0xca9f: mov rdx,rcx
0xcaa2: and ecx,0x3f
0xcaa5: shr rdx,0x3
0xcaa9: shl r14,cl
0xcaac: and edx,0x18
0xcaaf: or qword ptr [rbx+rdx],r14
0xcab3: add rax,0x1
0xcab7: cmp rax,0x100
0xcabd: jne 0xca91
0xcabf: jmp 0xc4d4
0xcac4: lea rsi,[rip+0xa062]
0xcacb: mov rdi,r12
0xcace: call 0x1bd0
0xcad3: test eax,eax
0xcad5: jne 0xcb50
0xcad7: call 0x1dc0
0xcadc: xor ecx,ecx
0xcade: test rbp,rbp
0xcae1: mov rsi,qword ptr [rax]
0xcae4: mov edx,0x1
0xcae9: jne 0xcb15
0xcaeb: test byte ptr [rsi+rcx*2+0x1],0x10
0xcaf0: je 0xcb03
0xcaf2: mov rax,rcx
0xcaf5: mov rdi,rdx
0xcaf8: sar rax,0x6
0xcafc: shl rdi,cl
0xcaff: or qword ptr [rbx+rax*8],rdi
0xcb03: add rcx,0x1
0xcb07: cmp rcx,0x100
0xcb0e: jne 0xcaeb
0xcb10: jmp 0xc4d4
0xcb15: xor eax,eax
0xcb17: mov edi,0x1
0xcb1c: test byte ptr [rsi+rax*2+0x1],0x10
0xcb21: je 0xcb3f
0xcb23: movzx ecx,byte ptr [rbp+rax]
0xcb28: mov r9,rdi
0xcb2b: mov rdx,rcx
0xcb2e: and ecx,0x3f
0xcb31: shr rdx,0x3
0xcb35: shl r9,cl
0xcb38: and edx,0x18
0xcb3b: or qword ptr [rbx+rdx],r9
0xcb3f: add rax,0x1
0xcb43: cmp rax,0x100
0xcb49: jne 0xcb1c
0xcb4b: jmp 0xc4d4
0xcb50: mov eax,0x4
0xcb55: jmp 0xc4d6
0xcb5a: xor eax,eax
0xcb5c: test byte ptr [rdx+rax*2+0x1],0x8
0xcb61: je 0xcb7f
0xcb63: movzx ecx,byte ptr [rbp+rax]
0xcb68: mov r14,rdi
0xcb6b: mov rsi,rcx
0xcb6e: and ecx,0x3f
0xcb71: shr rsi,0x3
0xcb75: shl r14,cl
0xcb78: and esi,0x18
0xcb7b: or qword ptr [rbx+rsi],r14
0xcb7f: add rax,0x1
0xcb83: cmp rax,0x100
0xcb89: jne 0xcb5c
0xcb8b: jmp 0xc4d4
0xcb90: xor edx,edx
0xcb92: test byte ptr [rax+rdx*2+0x1],0x1
0xcb97: je 0xcbb5
0xcb99: movzx ecx,byte ptr [rbp+rdx]
0xcb9e: mov r9,rdi
0xcba1: mov rsi,rcx
0xcba4: and ecx,0x3f
0xcba7: shr rsi,0x3
0xcbab: shl r9,cl
0xcbae: and esi,0x18
0xcbb1: or qword ptr [rbx+rsi],r9
0xcbb5: add rdx,0x1
0xcbb9: cmp rdx,0x100
0xcbc0: jne 0xcb92
0xcbc2: jmp 0xc4d4
0xcbc7: xor eax,eax
0xcbc9: test byte ptr [rdx+rax*2+0x1],0x40
0xcbce: je 0xcbec
0xcbd0: movzx ecx,byte ptr [rbp+rax]
0xcbd5: mov r14,rdi
0xcbd8: mov rsi,rcx
0xcbdb: and ecx,0x3f
0xcbde: shr rsi,0x3
0xcbe2: shl r14,cl
0xcbe5: and esi,0x18
0xcbe8: or qword ptr [rbx+rsi],r14
0xcbec: add rax,0x1
0xcbf0: cmp rax,0x100
0xcbf6: jne 0xcbc9
0xcbf8: jmp 0xc4d4
0xcc00: push r15
0xcc02: push r14
0xcc04: mov r14,rdx
0xcc07: push r13
0xcc09: push r12
0xcc0b: mov r13,rcx
0xcc0e: push rbp
0xcc0f: push rbx
0xcc10: mov rbp,rdi
0xcc13: mov edi,0x20
0xcc18: mov r12d,r8d
0xcc1b: sub rsp,0x58
0xcc1f: mov qword ptr [rsp],rsi
0xcc23: mov esi,0x1
0xcc28: mov qword ptr [rsp+0x8],r9
0xcc2d: mov rax,qword ptr fs:0x28
0xcc36: mov qword ptr [rsp+0x48],rax
0xcc3b: xor eax,eax
0xcc3d: mov qword ptr [rsp+0x18],0x0
0xcc46: call 0x1bc0
0xcc4b: test rax,rax
0xcc4e: je 0xce10
0xcc54: mov esi,0x1
0xcc59: mov edi,0x50
0xcc5e: mov rbx,rax
0xcc61: call 0x1bc0
0xcc66: test rax,rax
0xcc69: mov r15,rax
0xcc6c: je 0xce20
0xcc72: movzx eax,byte ptr [rax+0x20]
0xcc76: sub rsp,0x8
0xcc7a: mov edx,r12d
0xcc7d: push 0x0
0xcc7f: and edx,0x1
0xcc82: mov rdi,qword ptr [rsp+0x10]
0xcc87: lea rcx,[r15+0x48]
0xcc8b: mov r9,r14
0xcc8e: mov rsi,rbx
0xcc91: lea r8,[rsp+0x28]
0xcc96: and eax,-0x2
0xcc99: or eax,edx
0xcc9b: lea rdx,[r15+0x18]
0xcc9f: mov byte ptr [r15+0x20],al
0xcca3: call 0xc3f0
0xcca8: test eax,eax
0xccaa: pop rdx
0xccab: pop rcx
0xccac: jne 0xce40
0xccb2: movsx rcx,byte ptr [r13]
0xccb7: mov esi,0x1
0xccbc: test cl,cl
0xccbe: je 0xccfa
0xccc0: lea rax,[rcx+0x3f]
0xccc4: test rcx,rcx
0xccc7: mov rdx,rcx
0xccca: cmovns rax,rcx
0xccce: sar rdx,0x3f
0xccd2: add r13,0x1
0xccd6: shr rdx,0x3a
0xccda: sar rax,0x6
0xccde: add rcx,rdx
0xcce1: and ecx,0x3f
0xcce4: sub rcx,rdx
0xcce7: mov rdx,rsi
0xccea: shl rdx,cl
0xcced: movsx rcx,byte ptr [r13]
0xccf2: or qword ptr [rbx+rax*8],rdx
0xccf6: test cl,cl
0xccf8: jne 0xccc0
0xccfa: test r12b,r12b
0xccfd: je 0xcd12
0xccff: lea rdx,[rbx+0x20]
0xcd03: mov rax,rbx
0xcd06: not qword ptr [rax]
0xcd09: add rax,0x8
0xcd0d: cmp rdx,rax
0xcd10: jne 0xcd06
0xcd12: cmp dword ptr [rbp+0xb4],0x1
0xcd19: jle 0xcd33
0xcd1b: mov rcx,qword ptr [rbp+0x78]
0xcd1f: xor eax,eax
0xcd21: mov rdx,qword ptr [rcx+rax]
0xcd25: and qword ptr [rbx+rax],rdx
0xcd29: add rax,0x8
0xcd2d: cmp rax,0x20
0xcd31: jne 0xcd21
0xcd33: lea r9,[rsp+0x20]
0xcd38: lea r12,[rbp+0x70]
0xcd3c: lea r13,[rbp+0x80]
0xcd43: xor ecx,ecx
0xcd45: xor edx,edx
0xcd47: mov byte ptr [rsp+0x28],0x3
0xcd4c: mov r8,r9
0xcd4f: mov rsi,r13
0xcd52: mov rdi,r12
0xcd55: mov qword ptr [rsp+0x20],rbx
0xcd5a: mov qword ptr [rsp],r9
0xcd5e: call 0x98b0
0xcd63: test rax,rax
0xcd66: mov r14,rax
0xcd69: je 0xce00
0xcd6f: cmp dword ptr [rbp+0xb4],0x1
0xcd76: jle 0xcdf0
0xcd78: or byte ptr [rbp+0xb0],0x2
0xcd7f: mov r9,qword ptr [rsp]
0xcd83: xor ecx,ecx
0xcd85: xor edx,edx
0xcd87: mov rsi,r13
0xcd8a: mov rdi,r12
0xcd8d: mov byte ptr [rsp+0x28],0x6
0xcd92: mov qword ptr [rsp+0x20],r15
0xcd97: mov r8,r9
0xcd9a: call 0x98b0
0xcd9f: test rax,rax
0xcda2: je 0xce00
0xcda4: lea r8,[rsp+0x30]
0xcda9: mov rdx,r14
0xcdac: mov rcx,rax
0xcdaf: mov rsi,r13
0xcdb2: mov rdi,r12
0xcdb5: mov byte ptr [rsp+0x38],0xa
0xcdba: call 0x98b0
0xcdbf: mov r14,rax
0xcdc2: mov rdi,qword ptr [rsp+0x48]
0xcdc7: xor rdi,qword ptr fs:0x28
0xcdd0: mov rax,r14
0xcdd3: jne 0xce65
0xcdd9: add rsp,0x58
0xcddd: pop rbx
0xcdde: pop rbp
0xcddf: pop r12
0xcde1: pop r13
0xcde3: pop r14
0xcde5: pop r15
0xcde7: ret 
0xcdf0: mov rdi,r15
0xcdf3: call 0x8310
0xcdf8: jmp 0xcdc2
0xce00: mov rdi,rbx
0xce03: call 0x19d0
0xce08: mov rdi,r15
0xce0b: call 0x8310
0xce10: mov rax,qword ptr [rsp+0x8]
0xce15: xor r14d,r14d
0xce18: mov dword ptr [rax],0xc
0xce1e: jmp 0xcdc2
0xce20: mov rdi,rbx
0xce23: xor r14d,r14d
0xce26: call 0x19d0
0xce2b: mov rax,qword ptr [rsp+0x8]
0xce30: mov dword ptr [rax],0xc
0xce36: jmp 0xcdc2
0xce40: mov rdi,rbx
0xce43: mov dword ptr [rsp],eax
0xce46: xor r14d,r14d
0xce49: call 0x19d0
0xce4e: mov rdi,r15
0xce51: call 0x8310
0xce56: mov rdi,qword ptr [rsp+0x8]
0xce5b: mov eax,dword ptr [rsp]
0xce5e: mov dword ptr [rdi],eax
0xce60: jmp 0xcdc2
0xce65: call 0x1ad0
0xce6a: nop word ptr [rax+rax]
0xcfab: mov rsi,qword ptr [rsp+0x8]
0xcfb0: cmp dword ptr [rsi+0xb4],0x1
0xcfb7: jle 0xcf37
0xcfbd: mov rax,qword ptr [rsi]
0xcfc0: mov rdi,qword ptr [rsp+0x10]
0xcfc5: movzx edx,byte ptr [rax+rdi]
0xcfc9: mov byte ptr [rsp+0x60],dl
0xcfcd: lea rdx,[r12+0x1]
0xcfd2: cmp qword ptr [rsi+0x10],rdx
0xcfd6: jbe 0xd316
0xcfdc: lea rcx,[rax+rdi+0x10]
0xcfe1: mov eax,dword ptr [rcx+0x8]
0xcfe4: and eax,0x2000ff
0xcfe9: cmp eax,0x200001
0xcfee: jne 0xd316
0xcff4: add rdi,0x20
0xcff8: mov r13,rdi
0xcffb: mov rdi,qword ptr [rsp+0x38]
0xd000: lea rax,[rdi+0x1]
0xd004: jmp 0xd02b
0xd010: mov rcx,qword ptr [rsi]
0xd013: add rcx,r13
0xd016: add r13,0x10
0xd01a: mov edx,dword ptr [rcx+0x8]
0xd01d: and edx,0x2000ff
0xd023: cmp edx,0x200001
0xd029: jne 0xd044
0xd02b: movzx edx,byte ptr [rcx]
0xd02e: add rax,0x1
0xd032: mov byte ptr [rax-0x1],dl
0xd035: mov rdx,rax
0xd038: sub rdx,rdi
0xd03b: add rdx,r12
0xd03e: cmp qword ptr [rsi+0x10],rdx
0xd042: ja 0xd010
0xd044: mov rsi,qword ptr [rsp+0x38]
0xd049: mov rcx,qword ptr [rsp+0x40]
0xd04e: mov rdi,qword ptr [rsp+0x48]
0xd053: sub rax,rsi
0xd056: mov qword ptr [rcx],0x0
0xd05d: mov r12,rax
0xd060: mov rdx,rax
0xd063: call 0x7050
0xd068: cmp r12,rax
0xd06b: jne 0xcf37
0xd071: mov edi,dword ptr [rsp+0x54]
0xd075: call 0x1d20
0xd07a: mov rdx,qword ptr [rsp+0x40]
0xd07f: mov rdi,qword ptr [rsp+0x38]
0xd084: mov esi,eax
0xd086: call 0x1c30
0xd08b: cmp rax,-0x1
0xd08f: je 0xcf37
0xd095: movzx eax,byte ptr [rsp+0x60]
0xd09a: mov byte ptr [rbp+rax],0x1
0xd09f: jmp 0xcf37
0xd16a: mov rax,qword ptr [rsp+0x8]
0xd16f: cmp dword ptr [rax+0xb4],0x1
0xd176: jle 0xd0ff
0xd178: mov rax,qword ptr [r15]
0xd17b: mov edi,dword ptr [rax+rbx]
0xd17e: call 0x1d20
0xd183: mov rdi,qword ptr [rsp+0x38]
0xd188: mov rdx,r14
0xd18b: mov esi,eax
0xd18d: call 0x1c30
0xd192: cmp rax,-0x1
0xd196: je 0xd0ff
0xd19c: movzx eax,byte ptr [rsp+0x60]
0xd1a1: add rbp,0x1
0xd1a5: mov byte ptr [r12+rax],0x1
0xd1aa: cmp rbp,qword ptr [r15+0x28]
0xd1ae: jl 0xd10d
0xd316: mov rax,qword ptr [rsp+0x38]
0xd31b: add rax,0x1
0xd31f: jmp 0xd044
0xd392: call 0x1ad0
0xd397: nop word ptr [rax+rax]
0xdc29: iretl 
0xdd4c: call 0x1ad0
0xdd51: nop dword ptr [rax+rax]
0xdd56: nop word ptr cs:[rax+rax]
0xe258: mov rdi,qword ptr [rbp-0x88]
0xe25f: call 0xc2b0
0xe264: mov eax,0xc
0xe269: jmp 0xe479
0xe2d8: test rcx,rcx
0xe2db: je 0xe390
0xe466: mov rdi,qword ptr [rbp-0x88]
0xe46d: test rdi,rdi
0xe470: je 0xe477
0xe506: mov rdi,qword ptr [rbp-0xb8]
0xe50d: call 0x1c20
0xe512: test rax,rax
0xe515: mov qword ptr [rbp-0xc0],rax
0xe51c: mov byte ptr [rbp-0xc9],0x1
0xe523: jne 0xde37
0xe529: mov rdi,qword ptr [rbp-0x88]
0xe530: test rdi,rdi
0xe533: je 0xe4fc
0xe535: call 0xc2b0
0xe53a: jmp 0xe4fc
0xe558: jmp 0xe477
0xe5ac: mov rdi,qword ptr [rbp-0x60]
0xe5b0: call 0x19d0
0xe5b5: cmp byte ptr [rbp-0xc9],0x0
0xe5bc: je 0xe477
0xe5c2: mov rdi,qword ptr [rbp-0xc0]
0xe5c9: call 0x19d0
0xe5ce: xor eax,eax
0xe5d0: jmp 0xe479
0xe64a: nop word ptr [rax+rax]
0xf0cc: call 0x1ad0
0xf0d1: nop dword ptr [rax+rax]
0xf0d6: nop word ptr cs:[rax+rax]
0xf2c7: call 0x1ad0
0xf2cc: nop dword ptr [rax]
0xf60b: call 0x1ad0
0x1065c: nop dword ptr [rax]
0x10966: test eax,eax
0x10968: jne 0x10c3d
0x1096e: mov rax,qword ptr [rbx]
0x10d3b: call 0x1ad0
0x1158b: call 0x1ad0
0x11590: push r14
0x11592: push r13
0x11594: mov r10,rsi
0x11597: push r12
0x11599: push rbp
0x1159a: movsxd r11,ecx
0x1159d: push rbx
0x1159e: mov rbp,rdx
0x115a1: mov rbx,rdi
0x115a4: sub rsp,0x20
0x115a8: mov r12,qword ptr [rsi+0x48]
0x115ac: mov rax,qword ptr fs:0x28
0x115b5: mov qword ptr [rsp+0x18],rax
0x115ba: xor eax,eax
0x115bc: cmp dword ptr [rsi+0x90],0x1
0x115c3: je 0x11618
0x115c5: mov rsi,r12
0x115c8: mov rdi,r10
0x115cb: call 0x8b40
0x115d0: cmp eax,0x1
0x115d3: jle 0x11618
0x115d5: mov rdx,qword ptr [r10+0x10]
0x115d9: cltq 
0x115db: mov dword ptr [rbx],0x1
0x115e1: add rax,r12
0x115e4: mov edx,dword ptr [rdx+r12*4]
0x115e8: mov dword ptr [rbx+0x8],edx
0x115eb: mov qword ptr [r10+0x48],rax
0x115ef: xor eax,eax
0x115f1: mov rcx,qword ptr [rsp+0x18]
0x115f6: xor rcx,qword ptr fs:0x28
0x115ff: jne 0x117e8
0x11605: add rsp,0x20
0x11609: pop rbx
0x1160a: pop rbp
0x1160b: pop r12
0x1160d: pop r13
0x1160f: pop r14
0x11611: ret 
0x11618: movzx eax,byte ptr [rbp+0x8]
0x1161c: add r11,r12
0x1161f: mov qword ptr [r10+0x48],r11
0x11623: mov edx,eax
0x11625: and edx,-0x5
0x11628: cmp dl,0x1a
0x1162b: je 0x11650
0x1162d: cmp al,0x1c
0x1162f: je 0x11650
0x11631: cmp al,0x16
0x11633: jne 0x1163e
0x11635: test r9b,r9b
0x11638: je 0x11782
0x1163e: movzx eax,byte ptr [rbp]
0x11642: mov dword ptr [rbx],0x0
0x11648: mov byte ptr [rbx+0x8],al
0x1164b: xor eax,eax
0x1164d: jmp 0x115f1
0x11650: mov r12,qword ptr [r10+0x68]
0x11654: cmp r11,r12
0x11657: jge 0x11778
0x1165d: movzx r13d,byte ptr [rbp]
0x11662: xor r8d,r8d
0x11665: jmp 0x11692
0x11670: mov rax,qword ptr [rbx+0x8]
0x11674: mov byte ptr [rax+r8],r9b
0x11678: add r8,0x1
0x1167c: cmp r8,0x20
0x11680: je 0x11778
0x11686: movzx eax,byte ptr [rbp+0x8]
0x1168a: mov r11,qword ptr [r10+0x48]
0x1168e: mov r12,qword ptr [r10+0x68]
0x11692: cmp al,0x1e
0x11694: movsxd r14,r8d
0x11697: je 0x11700
0x11699: mov rdx,qword ptr [r10+0x8]
0x1169d: lea rax,[r11+0x1]
0x116a1: mov qword ptr [r10+0x48],rax
0x116a5: movzx r9d,byte ptr [rdx+r11]
0x116aa: cmp rax,r12
0x116ad: jge 0x11778
0x116b3: cmp r13b,r9b
0x116b6: jne 0x11670
0x116b8: mov rdx,qword ptr [r10+0x8]
0x116bc: cmp byte ptr [rdx+rax],0x5d
0x116c0: jne 0x11670
0x116c2: add rax,0x1
0x116c6: mov qword ptr [r10+0x48],rax
0x116ca: mov rax,qword ptr [rbx+0x8]
0x116ce: mov byte ptr [rax+r14],0x0
0x116d3: movzx eax,byte ptr [rbp+0x8]
0x116d7: cmp al,0x1c
0x116d9: je 0x117db
0x116df: cmp al,0x1e
0x116e1: je 0x117ce
0x116e7: cmp al,0x1a
0x116e9: je 0x117c1
0x116ef: xor eax,eax
0x116f1: jmp 0x115f1
0x11700: cmp byte ptr [r10+0x8b],0x0
0x11708: je 0x11699
0x1170a: cmp byte ptr [r10+0x8c],0x0
0x11712: je 0x117a8
0x11718: cmp r11,qword ptr [r10+0x30]
0x1171c: je 0x1172d
0x1171e: mov rax,qword ptr [r10+0x10]
0x11722: cmp dword ptr [rax+r11*4],-0x1
0x11727: je 0x11699
0x1172d: mov rax,qword ptr [r10+0x18]
0x11731: mov rax,qword ptr [rax+r11*8]
0x11735: add rax,qword ptr [r10]
0x11738: add rax,qword ptr [r10+0x28]
0x1173c: movzx r9d,byte ptr [rax]
0x11740: test r9b,-0x80
0x11744: jne 0x11699
0x1174a: cmp dword ptr [r10+0x90],0x1
0x11752: mov eax,0x1
0x11757: je 0x11766
0x11759: mov rsi,r11
0x1175c: mov rdi,r10
0x1175f: call 0x8b40
0x11764: cltq 
0x11766: add rax,r11
0x11769: mov qword ptr [r10+0x48],rax
0x1176d: jmp 0x116aa
0x11778: mov eax,0x7
0x1177d: jmp 0x115f1
0x11782: mov rdi,rsp
0x11785: mov rdx,r8
0x11788: mov rsi,r10
0x1178b: call 0x70e0
0x11790: cmp byte ptr [rsp+0x8],0x15
0x11795: mov eax,0xb
0x1179a: je 0x1163e
0x117a0: jmp 0x115f1
0x117a8: lea rax,[r11+0x1]
0x117ac: add r11,qword ptr [r10]
0x117af: mov rdx,qword ptr [r10+0x28]
0x117b3: mov qword ptr [r10+0x48],rax
0x117b7: movzx r9d,byte ptr [r11+rdx]
0x117bc: jmp 0x116aa
0x117c1: mov dword ptr [rbx],0x3
0x117c7: xor eax,eax
0x117c9: jmp 0x115f1
0x117ce: mov dword ptr [rbx],0x4
0x117d4: xor eax,eax
0x117d6: jmp 0x115f1
0x117db: mov dword ptr [rbx],0x2
0x117e1: xor eax,eax
0x117e3: jmp 0x115f1
0x117e8: call 0x1ad0
0x117ed: nop dword ptr [rax]
0x11e00: cmp eax,0x1
0x11e03: jle 0x11e34
0x11e05: mov rcx,qword ptr [rbx+0x10]
0x11e09: lea rdi,[rsi*4]
0x11e11: mov r8d,dword ptr [rcx+rsi*4]
0x11e15: cmp r8d,-0x1
0x11e19: je 0x11ecf
0x11e1f: lea r9,[r14+0x2]
0x11e23: cmp qword ptr [rbx+0x30],r9
0x11e27: je 0x11e34
0x11e29: cmp dword ptr [rcx+rdi+0x4],-0x1
0x11e2e: je 0x11ecf
0x11e34: cmp byte ptr [rbx+0x8c],0x0
0x11e3b: mov rcx,qword ptr [rbx]
0x11e3e: mov rdi,qword ptr [rbx+0x28]
0x11e42: je 0x11e88
0x11e44: mov r8,qword ptr [rbx+0x18]
0x11e48: add rcx,rdi
0x11e4b: add rcx,qword ptr [r8+rsi*8]
0x11e4f: movzx edi,byte ptr [rcx]
0x11e52: mov r12d,edi
0x11e55: mov dword ptr [rsp+0x8],edi
0x11e59: and edi,0x80
0x11e5f: jne 0x1197b
0x11e65: jmp 0x11988
0x11e88: add rcx,rsi
0x11e8b: movzx edi,byte ptr [rcx+rdi]
0x11e8f: mov r12d,edi
0x11e92: mov dword ptr [rsp+0x8],edi
0x11e96: jmp 0x11988
0x11ecf: movzx eax,byte ptr [rdx+r14+0x1]
0x11ed5: mov byte ptr [rbp+0x8],0x1
0x11ed9: mov r12d,eax
0x11edc: mov byte ptr [rbp],al
0x11edf: mov dword ptr [rsp+0x8],eax
0x11ee3: jmp 0x119a1
0x11ee8: call 0x1ad0
0x11eed: nop dword ptr [rax]
0x11ef0: push r14
0x11ef2: mov r14,rdi
0x11ef5: push r13
0x11ef7: mov r13,rsi
0x11efa: push r12
0x11efc: mov r12,-0x2
0x11f03: push rbp
0x11f04: mov rbp,rdx
0x11f07: push rbx
0x11f08: mov rbx,-0x1
0x11f0f: nop 
0x11f10: mov rdx,rbp
0x11f13: mov rsi,r14
0x11f16: mov rdi,r13
0x11f19: call 0x117f0
0x11f1e: cltq 
0x11f20: add qword ptr [r14+0x48],rax
0x11f24: movzx eax,byte ptr [r13+0x8]
0x11f29: movzx edx,byte ptr [r13]
0x11f2e: cmp al,0x2
0x11f30: je 0x11f80
0x11f32: cmp al,0x18
0x11f34: je 0x11f87
0x11f36: cmp dl,0x2c
0x11f39: je 0x11f87
0x11f3b: cmp al,0x1
0x11f3d: je 0x11f48
0x11f3f: mov rbx,r12
0x11f42: jmp 0x11f10
0x11f48: lea eax,[rdx-0x30]
0x11f4b: cmp al,0x9
0x11f4d: ja 0x11f3f
0x11f4f: cmp rbx,-0x2
0x11f53: je 0x11f3f
0x11f55: cmp rbx,-0x1
0x11f59: je 0x11f98
0x11f5b: lea rax,[rbx+rbx*4]
0x11f5f: lea rbx,[rdx+rax*2]
0x11f63: mov eax,0x8030
0x11f68: cmp rbx,0x8030
0x11f6f: cmovg rbx,rax
0x11f73: sub rbx,0x30
0x11f77: jmp 0x11f10
0x11f80: mov rbx,-0x2
0x11f87: mov rax,rbx
0x11f8a: pop rbx
0x11f8b: pop rbp
0x11f8c: pop r12
0x11f8e: pop r13
0x11f90: pop r14
0x11f92: ret 
0x11f98: movzx ebx,dl
0x11f9b: sub ebx,0x30
0x11f9e: movsxd rbx,ebx
0x11fa1: jmp 0x11f10
0x1243b: mov rdi,qword ptr [rsp+0x28]
0x12440: lea rsi,[rip-0xa0d7]
0x12447: xor edx,edx
0x12449: call 0x74d0
0x1244e: mov qword ptr [rsp+0x28],0x0
0x12457: jmp 0x120c0
0x12650: mov rax,qword ptr [rsp+0x40]
0x12655: mov dword ptr [rax],0xa
0x1265b: cmp qword ptr [rsp+0x28],0x0
0x12661: jne 0x1243b
0x12667: jmp 0x120b0
0x1344e: call 0x1ad0
0x13453: mov rax,qword ptr [rsp+0x18]
0x13458: cmp byte ptr [rax+0x8],0x2
0x1345c: jne 0x12650
0x13462: mov rax,qword ptr [rsp+0x40]
0x13467: mov dword ptr [rax],0x9
0x1346d: jmp 0x1265b
0x1360d: call 0x1ad0
0x13612: nop dword ptr [rax]
0x13616: nop word ptr cs:[rax+rax]
0x1379a: call 0x1ad0
0x1379f: nop 
0x13a68: cmp ecx,0x1
0x13a6b: jle 0x1465d
0x13a71: mov rdi,rbp
0x13a74: call 0x7b10
0x13a79: test eax,eax
0x13a7b: jne 0x13ac0
0x13a7d: mov rax,qword ptr [rsp]
0x13a81: cmp rax,qword ptr [rsp+0xb8]
0x13a89: jle 0x14640
0x13a8f: movsxd rax,dword ptr [rbx+0xb4]
0x13a96: mov rsi,qword ptr [rsp+0xc0]
0x13a9e: add rax,qword ptr [rsp+0xb0]
0x13aa6: cmp rsi,rax
0x13aa9: jg 0x14640
0x13aaf: add rsi,rsi
0x13ab2: mov rdi,rbp
0x13ab5: call 0x75a0
0x13aba: test eax,eax
0x13abc: je 0x13a71
0x13abe: nop 
0x13d95: xor edx,edx
0x13d97: nop word ptr [rax+rax]
0x13da0: mov qword ptr [rax+rdx*8],rdx
0x13da4: add rdx,0x1
0x13da8: cmp rdx,r15
0x13dab: jne 0x13da0
0x13dd9: mov rax,qword ptr [rdi]
0x13ddc: test rax,rax
0x13ddf: je 0x13dee
0x13de1: jmp 0x13dfd
0x13de8: cmp qword ptr [rdi+rax*8],rax
0x13dec: jne 0x13dfd
0x13dee: add rax,0x1
0x13df2: cmp rdx,rax
0x13df5: ja 0x13de8
0x13df7: je 0x146c4
0x14220: test byte ptr [r13+0xb0],0x1
0x14228: jne 0x14238
0x14640: mov dword ptr [rsp+0x4c],0x0
0x14648: jmp 0x13bf8
0x1465d: mov rdi,rbp
0x14660: call 0x78d0
0x14665: mov dword ptr [rsp+0x4c],0x0
0x1466d: jmp 0x13bf8
0x14833: lea rcx,[rip+0x2826]
0x1483a: lea rsi,[rip+0x225f]
0x14841: lea rdi,[rip+0x231d]
0x14848: mov edx,0x5b0
0x1484d: call 0x1b50
0x14871: lea rcx,[rip+0x27e8]
0x14878: lea rsi,[rip+0x2221]
0x1487f: lea rdi,[rip+0x22d5]
0x14886: mov edx,0x5af
0x1488b: call 0x1b50
0x14890: call 0x1ad0
0x14895: nop 
0x14896: nop word ptr cs:[rax+rax]
0x14910: mov rax,qword ptr [rip+0x206921]
0x14917: mov qword ptr [rip+0x20691a],rdi
0x1491e: ret 
0x14a4e: cmp rbx,r8
0x14a51: jle 0x14d28
0x14d28: movzx eax,byte ptr [r15+0x38]
0x14d2d: xor r8d,r8d
0x14d30: mov r13d,eax
0x14d33: shr r13b,0x5
0x14d37: mov edi,r13d
0x14d3a: and edi,0x3
0x14d3d: mov dword ptr [rsp+0x2c],edi
0x14d41: jmp 0x14a81
0x14e6f: nop 
0x14e70: push r15
0x14e72: push r14
0x14e74: push r13
0x14e76: push r12
0x14e78: mov r12,rdi
0x14e7b: push rbp
0x14e7c: push rbx
0x14e7d: mov rbp,r8
0x14e80: mov rbx,rdx
0x14e83: mov rdx,rbp
0x14e86: sub rsp,0x28
0x14e8a: shr rdx,0x3f
0x14e8e: mov rax,qword ptr [rsp+0x70]
0x14e93: mov edi,edx
0x14e95: mov r8d,dword ptr [rsp+0x78]
0x14e9a: shr rax,0x3f
0x14e9e: or dil,al
0x14ea1: jne 0x14f70
0x14ea7: test rbx,rbx
0x14eaa: js 0x14f70
0x14eb0: mov r15,rbx
0x14eb3: add r15,rbp
0x14eb6: jo 0x14f70
0x14ebc: test rbp,rbp
0x14ebf: mov r14,rcx
0x14ec2: mov rcx,r9
0x14ec5: je 0x14f80
0x14ecb: xor r13d,r13d
0x14ece: test rbx,rbx
0x14ed1: mov qword ptr [rsp+0x8],rsi
0x14ed6: jne 0x14f20
0x14ed8: movzx r8d,r8b
0x14edc: mov rdx,r15
0x14edf: mov rsi,r14
0x14ee2: push r8
0x14ee4: push qword ptr [rsp+0x70]
0x14ee8: mov rdi,r12
0x14eeb: mov r9,qword ptr [rsp+0x80]
0x14ef3: mov r8,qword ptr [rsp+0x70]
0x14ef8: call 0x149f0
0x14efd: mov rdi,r13
0x14f00: mov rbx,rax
0x14f03: call 0x19d0
0x14f08: pop rax
0x14f09: pop rdx
0x14f0a: add rsp,0x28
0x14f0e: mov rax,rbx
0x14f11: pop rbx
0x14f12: pop rbp
0x14f13: pop r12
0x14f15: pop r13
0x14f17: pop r14
0x14f19: pop r15
0x14f1b: ret 
0x14f20: mov rdi,r15
0x14f23: mov dword ptr [rsp+0x1c],r8d
0x14f28: mov qword ptr [rsp+0x10],r9
0x14f2d: call 0x1c20
0x14f32: test rax,rax
0x14f35: mov r13,rax
0x14f38: je 0x14f70
0x14f3a: mov rsi,qword ptr [rsp+0x8]
0x14f3f: mov rdx,rbx
0x14f42: mov rdi,rax
0x14f45: call 0x1be0
0x14f4a: lea rdi,[r13+rbx]
0x14f4f: mov rsi,r14
0x14f52: mov rdx,rbp
0x14f55: mov r14,r13
0x14f58: call 0x1be0
0x14f5d: mov rcx,qword ptr [rsp+0x10]
0x14f62: mov r8d,dword ptr [rsp+0x1c]
0x14f67: jmp 0x14ed8
0x14f70: mov rbx,-0x2
0x14f77: jmp 0x14f0a
0x14f80: mov r14,rsi
0x14f83: xor r13d,r13d
0x14f86: jmp 0x14ed8
0x14f90: mov eax,edx
0x14f92: push r14
0x14f94: push r13
0x14f96: and eax,0x1
0x14f99: push r12
0x14f9b: push rbp
0x14f9c: cmp eax,0x1
0x14f9f: push rbx
0x14fa0: mov rbx,rdi
0x14fa3: sbb r14,r14
0x14fa6: mov qword ptr [rdi],0x0
0x14fad: mov qword ptr [rdi+0x8],0x0
0x14fb5: and r14d,0xfd4fca
0x14fbc: mov qword ptr [rdi+0x10],0x0
0x14fc4: mov edi,0x100
0x14fc9: mov r12,rsi
0x14fcc: mov ebp,edx
0x14fce: add r14,0x3b2fc
0x14fd5: call 0x1c20
0x14fda: test rax,rax
0x14fdd: mov qword ptr [rbx+0x20],rax
0x14fe1: je 0x15090
0x14fe7: mov r13,rbp
0x14fea: shl r13,0x15
0x14fee: and r13d,0x400000
0x14ff5: or r13,r14
0x14ff8: test bpl,0x4
0x14ffc: jne 0x15060
0x14ffe: and byte ptr [rbx+0x38],0x7f
0x15002: movzx edx,byte ptr [rbx+0x38]
0x15006: shr ebp,0x3
0x15009: mov rdi,r12
0x1500c: and ebp,0x1
0x1500f: mov qword ptr [rbx+0x28],0x0
0x15017: shl ebp,0x4
0x1501a: and edx,-0x11
0x1501d: or ebp,edx
0x1501f: mov byte ptr [rbx+0x38],bpl
0x15023: call 0x1ab0
0x15028: mov rcx,r13
0x1502b: mov rdx,rax
0x1502e: mov rsi,r12
0x15031: mov rdi,rbx
0x15034: call 0x137a0
0x15039: cmp eax,0x10
0x1503c: mov ebp,eax
0x1503e: je 0x15078
0x15040: test eax,eax
0x15042: jne 0x1507d
0x15044: mov rdi,rbx
0x15047: call 0x14920
0x1504c: pop rbx
0x1504d: mov eax,ebp
0x1504f: pop rbp
0x15050: pop r12
0x15052: pop r13
0x15054: pop r14
0x15056: ret 
0x15060: and r13,-0x41
0x15064: or byte ptr [rbx+0x38],-0x80
0x15068: or r13,0x100
0x1506f: jmp 0x15002
0x15078: mov ebp,0x8
0x1507d: mov rdi,qword ptr [rbx+0x20]
0x15081: call 0x19d0
0x15086: mov qword ptr [rbx+0x20],0x0
0x1508e: jmp 0x1504c
0x15090: mov ebp,0xc
0x15095: pop rbx
0x15096: mov eax,ebp
0x15098: pop rbp
0x15099: pop r12
0x1509b: pop r13
0x1509d: pop r14
0x1509f: ret 
0x150a0: push r13
0x150a2: push r12
0x150a4: push rbp
0x150a5: push rbx
0x150a6: sub rsp,0x8
0x150aa: cmp edi,0x10
0x150ad: ja 0x15110
0x150af: lea rax,[rip+0x200a]
0x150b6: movsxd rdi,edi
0x150b9: lea rsi,[rip+0x20a0]
0x150c0: mov rbp,rdx
0x150c3: mov edx,0x5
0x150c8: mov r12,rcx
0x150cb: add rsi,qword ptr [rax+rdi*8]
0x150cf: xor edi,edi
0x150d1: call 0x1a90
0x150d6: mov rdi,rax
0x150d9: mov r13,rax
0x150dc: call 0x1ab0
0x150e1: test r12,r12
0x150e4: lea rbx,[rax+0x1]
0x150e8: je 0x150fd
0x150ea: cmp rbx,r12
0x150ed: mov rdx,rbx
0x150f0: ja 0x15118
0x150f2: mov rsi,r13
0x150f5: mov rdi,rbp
0x150f8: call 0x1be0
0x150fd: add rsp,0x8
0x15101: mov rax,rbx
0x15104: pop rbx
0x15105: pop rbp
0x15106: pop r12
0x15108: pop r13
0x1510a: ret 
0x15110: call 0x19e0
0x15115: nop dword ptr [rax]
0x15118: lea rdx,[r12-0x1]
0x1511d: mov byte ptr [rbp+r12-0x1],0x0
0x15123: jmp 0x150f2
0x15180: test r8d,0xfffffff8
0x15187: jne 0x15218
0x1518d: push r13
0x1518f: push r12
0x15191: mov r13,rdx
0x15194: push rbp
0x15195: push rbx
0x15196: mov r12,rcx
0x15199: mov ebx,r8d
0x1519c: mov rbp,rdi
0x1519f: sub rsp,0x18
0x151a3: test r8b,0x4
0x151a7: jne 0x151f8
0x151a9: mov rdi,rsi
0x151ac: mov qword ptr [rsp+0x8],rsi
0x151b1: call 0x1ab0
0x151b6: xor ecx,ecx
0x151b8: test byte ptr [rbp+0x38],0x10
0x151bc: mov rdx,rax
0x151bf: mov rsi,qword ptr [rsp+0x8]
0x151c4: je 0x15206
0x151c6: sub rsp,0x8
0x151ca: push rbx
0x151cb: push 0x0
0x151cd: push 0x0
0x151cf: mov rdi,rbp
0x151d2: mov r9,rdx
0x151d5: mov r8,rdx
0x151d8: call 0xf610
0x151dd: add rsp,0x20
0x151e1: test eax,eax
0x151e3: setne al
0x151e6: add rsp,0x18
0x151ea: pop rbx
0x151eb: movzx eax,al
0x151ee: pop rbp
0x151ef: pop r12
0x151f1: pop r13
0x151f3: ret 
0x151f8: test byte ptr [rbp+0x38],0x10
0x151fc: mov rcx,qword ptr [rcx]
0x151ff: mov rdx,qword ptr [r12+0x8]
0x15204: jne 0x151c6
0x15206: sub rsp,0x8
0x1520a: push rbx
0x1520b: push r12
0x1520d: push r13
0x1520f: jmp 0x151cf
0x15218: mov eax,0x2
0x1521d: ret 
0x15240: sub rsp,0x8
0x15244: push 0x0
0x15246: push r9
0x15248: mov r9,rdx
0x1524b: call 0x149f0
0x15250: add rsp,0x18
0x15254: ret 
0x15260: sub rsp,0x8
0x15264: push 0x1
0x15266: push qword ptr [rsp+0x20]
0x1526a: push qword ptr [rsp+0x20]
0x1526e: push 0x0
0x15270: call 0x14e70
0x15275: add rsp,0x28
0x15279: ret 
0x15280: sub rsp,0x8
0x15284: push 0x0
0x15286: push qword ptr [rsp+0x28]
0x1528a: push qword ptr [rsp+0x28]
0x1528e: push qword ptr [rsp+0x28]
0x15292: call 0x14e70
0x15297: add rsp,0x28
0x1529b: ret 
0x152a0: test rdx,rdx
0x152a3: jne 0x152c8
0x152a5: and byte ptr [rdi+0x38],-0x7
0x152a9: mov qword ptr [rsi],0x0
0x152b0: mov qword ptr [rsi+0x10],0x0
0x152b8: mov qword ptr [rsi+0x8],0x0
0x152c0: ret 
0x152c8: movzx eax,byte ptr [rdi+0x38]
0x152cc: and eax,-0x7
0x152cf: or eax,0x2
0x152d2: mov byte ptr [rdi+0x38],al
0x152d5: mov qword ptr [rsi],rdx
0x152d8: mov qword ptr [rsi+0x8],rcx
0x152dc: mov qword ptr [rsi+0x10],r8
0x152e0: ret 
0x152f0: push r12
0x152f2: push rbp
0x152f3: mov rbp,rdi
0x152f6: push rbx
0x152f7: call 0x1a20
0x152fc: mov ebx,dword ptr [rbp]
0x152ff: mov rdi,rbp
0x15302: mov r12,rax
0x15305: call 0x15410
0x1530a: and ebx,0x20
0x1530d: test ebx,ebx
0x1530f: jne 0x15328
0x15311: test eax,eax
0x15313: je 0x1531f
0x15315: test r12,r12
0x15318: mov eax,0xffffffff
0x1531d: je 0x15358
0x1531f: pop rbx
0x15320: pop rbp
0x15321: pop r12
0x15323: ret 
0x15328: test eax,eax
0x1532a: jne 0x15348
0x1532c: call 0x19f0
0x15331: mov dword ptr [rax],0x0
0x15337: mov eax,0xffffffff
0x1533c: pop rbx
0x1533d: pop rbp
0x1533e: pop r12
0x15340: ret 
0x15348: pop rbx
0x15349: mov eax,0xffffffff
0x1534e: pop rbp
0x1534f: pop r12
0x15351: ret 
0x15358: call 0x19f0
0x1535d: cmp dword ptr [rax],0x9
0x15360: pop rbx
0x15361: pop rbp
0x15362: pop r12
0x15364: setne al
0x15367: movzx eax,al
0x1536a: neg eax
0x1536c: ret 
0x153d0: sub rsp,0x8
0x153d4: mov edi,0xe
0x153d9: call 0x1c60
0x153de: test rax,rax
0x153e1: je 0x15400
0x153e3: cmp byte ptr [rax],0x0
0x153e6: lea rdx,[rip+0x1f0b]
0x153ed: cmove rax,rdx
0x153f1: add rsp,0x8
0x153f5: ret 
0x15400: lea rax,[rip+0x1ef1]
0x15407: add rsp,0x8
0x1540b: ret 
0x15410: push r12
0x15412: push rbp
0x15413: push rbx
0x15414: mov rbx,rdi
0x15417: call 0x1bf0
0x1541c: test eax,eax
0x1541e: mov rdi,rbx
0x15421: js 0x15477
0x15423: call 0x1c80
0x15428: test eax,eax
0x1542a: jne 0x15458
0x1542c: mov rdi,rbx
0x1542f: call 0x15490
0x15434: test eax,eax
0x15436: je 0x15474
0x15438: call 0x19f0
0x1543d: mov r12d,dword ptr [rax]
0x15440: mov rdi,rbx
0x15443: mov rbp,rax
0x15446: call 0x1a70
0x1544b: test r12d,r12d
0x1544e: jne 0x15480
0x15450: pop rbx
0x15451: pop rbp
0x15452: pop r12
0x15454: ret 
0x15458: mov rdi,rbx
0x1545b: call 0x1bf0
0x15460: xor esi,esi
0x15462: mov edx,0x1
0x15467: mov edi,eax
0x15469: call 0x1b30
0x1546e: cmp rax,-0x1
0x15472: jne 0x1542c
0x15474: mov rdi,rbx
0x15477: pop rbx
0x15478: pop rbp
0x15479: pop r12
0x1547b: jmp 0x1a70
0x15480: mov dword ptr [rbp],r12d
0x15484: mov eax,0xffffffff
0x15489: jmp 0x15450
0x15490: test rdi,rdi
0x15493: push rbx
0x15494: mov rbx,rdi
0x15497: je 0x154aa
0x15499: call 0x1c80
0x1549e: test eax,eax
0x154a0: je 0x154aa
0x154a2: test dword ptr [rbx],0x100
0x154a8: jne 0x154b8
0x154aa: mov rdi,rbx
0x154ad: pop rbx
0x154ae: jmp 0x1c40
0x154b8: mov rdi,rbx
0x154bb: mov edx,0x1
0x154c0: xor esi,esi
0x154c2: call 0x154d0
0x154c7: mov rdi,rbx
0x154ca: pop rbx
0x154cb: jmp 0x1c40
0x154d0: mov rax,qword ptr [rdi+0x8]
0x154d4: cmp qword ptr [rdi+0x10],rax
0x154d8: je 0x154e0
0x154da: jmp 0x1d10
0x154e0: mov rax,qword ptr [rdi+0x20]
0x154e4: cmp qword ptr [rdi+0x28],rax
0x154e8: jne 0x154da
0x154ea: cmp qword ptr [rdi+0x48],0x0
0x154ef: jne 0x154da
0x154f1: push r12
0x154f3: push rbp
0x154f4: mov r12d,edx
0x154f7: push rbx
0x154f8: mov rbp,rsi
0x154fb: mov rbx,rdi
0x154fe: call 0x1bf0
0x15503: mov edx,r12d
0x15506: mov rsi,rbp
0x15509: mov edi,eax
0x1550b: call 0x1b30
0x15510: cmp rax,-0x1
0x15514: je 0x15522
0x15516: and dword ptr [rbx],-0x11
0x15519: mov qword ptr [rbx+0x90],rax
0x15520: xor eax,eax
0x15522: pop rbx
0x15523: pop rbp
0x15524: pop r12
0x15526: ret 
0x15530: push r15
0x15532: push r14
0x15534: mov r15,rdx
0x15537: push r13
0x15539: push r12
0x1553b: lea r12,[rip+0x20556e]
0x15542: push rbp
0x15543: lea rbp,[rip+0x20556e]
0x1554a: push rbx
0x1554b: mov r13d,edi
0x1554e: mov r14,rsi
0x15551: sub rbp,r12
0x15554: sub rsp,0x8
0x15558: sar rbp,0x3
0x1555c: call 0x1990
0x15561: test rbp,rbp
0x15564: je 0x15586
0x15566: xor ebx,ebx
0x15568: nop dword ptr [rax+rax]
0x15570: mov rdx,r15
0x15573: mov rsi,r14
0x15576: mov edi,r13d
0x15579: call qword ptr [r12+rbx*8]
0x1557d: add rbx,0x1
0x15581: cmp rbp,rbx
0x15584: jne 0x15570
0x15586: add rsp,0x8
0x1558a: pop rbx
0x1558b: pop rbp
0x1558c: pop r12
0x1558e: pop r13
0x15590: pop r14
0x15592: pop r15
0x15594: ret 
0x155a0: rep ret 
