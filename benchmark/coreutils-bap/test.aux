0x12d8: sub rsp,0x8
0x12dc: mov rax,qword ptr [rip+0x209ced]
0x12e3: test rax,rax
0x12e6: je 0x12ea
0x12e8: call rax
0x12ea: add rsp,0x8
0x12ee: ret 
0x12f6: jmp qword ptr [rip+0x209b3c]
0x1300: jmp qword ptr [rip+0x209b3a]
0x1340: jmp qword ptr [rip+0x209b1a]
0x1350: jmp qword ptr [rip+0x209b12]
0x1360: jmp qword ptr [rip+0x209b0a]
0x1370: jmp qword ptr [rip+0x209b02]
0x1380: jmp qword ptr [rip+0x209afa]
0x13a0: jmp qword ptr [rip+0x209aea]
0x13f0: jmp qword ptr [rip+0x209ac2]
0x1410: jmp qword ptr [rip+0x209ab2]
0x1430: jmp qword ptr [rip+0x209aa2]
0x1450: jmp qword ptr [rip+0x209a92]
0x1460: jmp qword ptr [rip+0x209a8a]
0x1470: jmp qword ptr [rip+0x209a82]
0x1480: jmp qword ptr [rip+0x209a7a]
0x14a0: jmp qword ptr [rip+0x209a6a]
0x14c0: jmp qword ptr [rip+0x209a5a]
0x14f0: jmp qword ptr [rip+0x209a42]
0x1500: jmp qword ptr [rip+0x209a3a]
0x1510: jmp qword ptr [rip+0x209a32]
0x1520: jmp qword ptr [rip+0x209a2a]
0x1550: jmp qword ptr [rip+0x209a12]
0x1570: jmp qword ptr [rip+0x209a02]
0x1580: jmp qword ptr [rip+0x2099fa]
0x15a0: jmp qword ptr [rip+0x2099ea]
0x15c0: jmp qword ptr [rip+0x2099da]
0x15d0: jmp qword ptr [rip+0x2099d2]
0x15e0: jmp qword ptr [rip+0x2099ca]
0x1600: jmp qword ptr [rip+0x2099da]
0x16c0: lea rsi,[rip+0x6866]
0x16c7: mov rbx,rax
0x16ca: xor edi,edi
0x16cc: mov edx,0x5
0x16d1: call 0x13c0
0x16d6: mov rsi,rbx
0x16d9: mov rdi,rax
0x16dc: xor eax,eax
0x16de: call 0x1970
0x16e3: nop word ptr cs:[rax+rax]
0x16ed: nop dword ptr [rax]
0x171a: hlt 
0x171b: nop dword ptr [rax+rax]
0x1720: lea rdi,[rip+0x209959]
0x1727: push rbp
0x1728: lea rax,[rip+0x209951]
0x172f: cmp rax,rdi
0x1732: mov rbp,rsp
0x1735: je 0x1750
0x1737: mov rax,qword ptr [rip+0x209882]
0x173e: test rax,rax
0x1741: je 0x1750
0x1743: pop rbp
0x1744: jmp rax
0x1750: pop rbp
0x1751: ret 
0x1760: lea rdi,[rip+0x209919]
0x1767: lea rsi,[rip+0x209912]
0x176e: push rbp
0x176f: sub rsi,rdi
0x1772: mov rbp,rsp
0x1775: sar rsi,0x3
0x1779: mov rax,rsi
0x177c: shr rax,0x3f
0x1780: add rsi,rax
0x1783: sar rsi, 1
0x1786: je 0x17a0
0x1788: mov rax,qword ptr [rip+0x209849]
0x178f: test rax,rax
0x1792: je 0x17a0
0x1794: pop rbp
0x1795: jmp rax
0x17a0: pop rbp
0x17a1: ret 
0x17c1: push rbp
0x17c2: mov rbp,rsp
0x17c5: je 0x17d3
0x17c7: mov rdi,qword ptr [rip+0x20983a]
0x17ce: call 0x1600
0x17d3: call 0x1720
0x17d8: mov byte ptr [rip+0x2098c9],0x1
0x17df: pop rbp
0x17e0: ret 
0x17f0: push rbp
0x17f1: mov rbp,rsp
0x17f4: pop rbp
0x17f5: jmp 0x1760
0x1994: movaps [rsp+0x50],xmm0
0x1999: movaps [rsp+0x60],xmm1
0x199e: movaps [rsp+0x70],xmm2
0x19a3: movaps [rsp+0x80],xmm3
0x19ab: movaps [rsp+0x90],xmm4
0x19b3: movaps [rsp+0xa0],xmm5
0x19bb: movaps [rsp+0xb0],xmm6
0x19c3: movaps [rsp+0xc0],xmm7
0x1a10: mov edi,0x2
0x1a15: call 0x15a0
0x1a1a: nop word ptr [rax+rax]
0x1ad1: lea rsi,[rip+0x6296]
0x1ad8: mov rbx,rax
0x1adb: xor edi,edi
0x1add: mov edx,0x5
0x1ae2: call 0x13c0
0x1ae7: mov rsi,rbx
0x1aea: mov rdi,rax
0x1aed: xor eax,eax
0x1aef: call 0x1970
0x1af4: nop 
0x1af6: nop word ptr cs:[rax+rax]
0x1b19: lea rsi,[rip+0x6261]
0x1b20: mov rbx,rax
0x1b23: xor edi,edi
0x1b25: mov edx,0x5
0x1b2a: call 0x13c0
0x1b2f: mov rsi,rbx
0x1b32: mov rdi,rax
0x1b35: xor eax,eax
0x1b37: call 0x1970
0x1b3c: nop dword ptr [rax]
0x1b40: mov eax,dword ptr [rip+0x209576]
0x1b46: lea edx,[rax+0x1]
0x1b49: cmp edx,dword ptr [rip+0x209569]
0x1b4f: mov dword ptr [rip+0x209567],edx
0x1b55: jge 0x1b61
0x1b57: add eax,0x2
0x1b5a: mov dword ptr [rip+0x20955c],eax
0x1b60: ret 
0x1b61: sub rsp,0x8
0x1b65: call 0x1b00
0x1b6a: nop word ptr [rax+rax]
0x1b73: push rsi
0x1fa2: lea rsi,[rip+0x5e37]
0x1fa9: mov rbx,rax
0x1fac: xor edi,edi
0x1fae: mov edx,0x5
0x1fb3: call 0x13c0
0x1fb8: mov rsi,rbx
0x1fbb: mov rdi,rax
0x1fbe: xor eax,eax
0x1fc0: call 0x1970
0x1fc5: nop dword ptr [rax]
0x2098: call 0x1400
0x2150: mov rcx,qword ptr [rsp+0x98]
0x2158: xor rcx,qword ptr fs:0x28
0x2161: jne 0x26ac
0x2167: add rsp,0xa8
0x216e: pop rbx
0x216f: pop rbp
0x2170: ret 
0x265a: cmp dword ptr [rsp+0x1c],edx
0x265e: sete al
0x2661: jmp 0x2150
0x266b: lea rsi,[rip+0x578a]
0x2672: mov rbx,rax
0x2675: xor edi,edi
0x2677: mov edx,0x5
0x267c: call 0x13c0
0x2681: mov rsi,rbx
0x2684: mov rdi,rax
0x2687: xor eax,eax
0x2689: call 0x1970
0x268e: nop 
0x2690: mov esi,dword ptr [rbx]
0x2692: xor eax,eax
0x2694: test esi,esi
0x2696: jne 0x2150
0x269c: jmp 0x265a
0x26ac: call 0x1400
0x26b1: nop dword ptr [rax+rax]
0x26b6: nop word ptr cs:[rax+rax]
0x286f: nop 
0x2a63: nop dword ptr [rax+rax]
0x2b1b: mov r11d,dword ptr [rip+0x20859a]
0x2b22: mov r12d,dword ptr [rip+0x20858f]
0x2b29: jmp 0x2a13
0x2be3: lea rsi,[rip+0x675f]
0x2bea: xor edi,edi
0x2bec: mov rbp,rax
0x2bef: call 0x50f0
0x2bf4: lea rsi,[rip+0x522d]
0x2bfb: mov rbx,rax
0x2bfe: mov edx,0x5
0x2c03: xor edi,edi
0x2c05: call 0x13c0
0x2c0a: mov rdx,rbp
0x2c0d: mov rdi,rax
0x2c10: mov rsi,rbx
0x2c13: xor eax,eax
0x2c15: call 0x1970
0x2c26: lea rsi,[rip+0x51ef]
0x2c2d: mov rbx,rax
0x2c30: xor edi,edi
0x2c32: mov edx,0x5
0x2c37: call 0x13c0
0x2c3c: mov rsi,rbx
0x2c3f: mov rdi,rax
0x2c42: xor eax,eax
0x2c44: call 0x1970
0x2c49: nop dword ptr [rax]
0x2d70: lea rsi,[rip+0x50cd]
0x2d77: mov rbx,rax
0x2d7a: xor edi,edi
0x2d7c: mov edx,0x5
0x2d81: call 0x13c0
0x2d86: mov rsi,rbx
0x2d89: mov rdi,rax
0x2d8c: xor eax,eax
0x2d8e: call 0x1970
0x2d98: nop dword ptr [rax+rax]
0x2da0: push r13
0x2da2: push r12
0x2da4: push rbp
0x2da5: push rbx
0x2da6: mov ebp,edi
0x2da8: sub rsp,0x88
0x2daf: mov rax,qword ptr fs:0x28
0x2db8: mov qword ptr [rsp+0x78],rax
0x2dbd: xor eax,eax
0x2dbf: test edi,edi
0x2dc1: je 0x2dfd
0x2dc3: lea rsi,[rip+0x5246]
0x2dca: mov rbx,qword ptr [rip+0x2082ff]
0x2dd1: mov edx,0x5
0x2dd6: xor edi,edi
0x2dd8: call 0x13c0
0x2ddd: mov rdi,qword ptr [rip+0x2082bc]
0x2de4: mov rdx,rax
0x2de7: mov rcx,rbx
0x2dea: mov esi,0x1
0x2def: xor eax,eax
0x2df1: call 0x15c0
0x2df6: mov edi,ebp
0x2df8: call 0x15a0
0x2dfd: mov rbx,qword ptr [rip+0x208284]
0x2e04: lea rsi,[rip+0x522d]
0x2e0b: mov edx,0x5
0x2e10: xor edi,edi
0x2e12: call 0x13c0
0x2e17: mov rsi,rbx
0x2e1a: mov rdi,rax
0x2e1d: call 0x1470
0x2e22: mov rbx,qword ptr [rip+0x20825f]
0x2e29: lea rsi,[rip+0x5260]
0x2e30: mov edx,0x5
0x2e35: xor edi,edi
0x2e37: call 0x13c0
0x2e3c: mov rsi,rbx
0x2e3f: mov rdi,rax
0x2e42: call 0x1470
0x2e47: mov rbx,qword ptr [rip+0x20823a]
0x2e4e: lea rsi,[rip+0x5273]
0x2e55: mov edx,0x5
0x2e5a: xor edi,edi
0x2e5c: call 0x13c0
0x2e61: mov rsi,rbx
0x2e64: mov rdi,rax
0x2e67: call 0x1470
0x2e6c: mov rbx,qword ptr [rip+0x208215]
0x2e73: lea rsi,[rip+0x527e]
0x2e7a: mov edx,0x5
0x2e7f: xor edi,edi
0x2e81: call 0x13c0
0x2e86: mov rsi,rbx
0x2e89: mov rdi,rax
0x2e8c: call 0x1470
0x2e91: mov rbx,qword ptr [rip+0x2081f0]
0x2e98: lea rsi,[rip+0x5291]
0x2e9f: mov edx,0x5
0x2ea4: xor edi,edi
0x2ea6: call 0x13c0
0x2eab: mov rsi,rbx
0x2eae: mov rdi,rax
0x2eb1: call 0x1470
0x2eb6: mov rbx,qword ptr [rip+0x2081cb]
0x2ebd: lea rsi,[rip+0x52e4]
0x2ec4: mov edx,0x5
0x2ec9: xor edi,edi
0x2ecb: call 0x13c0
0x2ed0: mov rsi,rbx
0x2ed3: mov rdi,rax
0x2ed6: call 0x1470
0x2edb: mov rbx,qword ptr [rip+0x2081a6]
0x2ee2: lea rsi,[rip+0x53bf]
0x2ee9: mov edx,0x5
0x2eee: xor edi,edi
0x2ef0: call 0x13c0
0x2ef5: mov rsi,rbx
0x2ef8: mov rdi,rax
0x2efb: call 0x1470
0x2f00: mov rbx,qword ptr [rip+0x208181]
0x2f07: lea rsi,[rip+0x549a]
0x2f0e: mov edx,0x5
0x2f13: xor edi,edi
0x2f15: call 0x13c0
0x2f1a: mov rsi,rbx
0x2f1d: mov rdi,rax
0x2f20: call 0x1470
0x2f25: mov rbx,qword ptr [rip+0x20815c]
0x2f2c: lea rsi,[rip+0x55ed]
0x2f33: mov edx,0x5
0x2f38: xor edi,edi
0x2f3a: call 0x13c0
0x2f3f: mov rsi,rbx
0x2f42: mov rdi,rax
0x2f45: call 0x1470
0x2f4a: mov rbx,qword ptr [rip+0x208137]
0x2f51: lea rsi,[rip+0x5688]
0x2f58: mov edx,0x5
0x2f5d: xor edi,edi
0x2f5f: call 0x13c0
0x2f64: mov rsi,rbx
0x2f67: mov rdi,rax
0x2f6a: call 0x1470
0x2f6f: mov rbx,qword ptr [rip+0x208112]
0x2f76: lea rsi,[rip+0x5713]
0x2f7d: mov edx,0x5
0x2f82: xor edi,edi
0x2f84: call 0x13c0
0x2f89: mov rsi,rbx
0x2f8c: mov rdi,rax
0x2f8f: call 0x1470
0x2f94: mov rbx,qword ptr [rip+0x2080ed]
0x2f9b: lea rsi,[rip+0x5806]
0x2fa2: mov edx,0x5
0x2fa7: xor edi,edi
0x2fa9: call 0x13c0
0x2fae: mov rsi,rbx
0x2fb1: mov rdi,rax
0x2fb4: call 0x1470
0x2fb9: mov rbx,qword ptr [rip+0x2080c8]
0x2fc0: lea rsi,[rip+0x5949]
0x2fc7: mov edx,0x5
0x2fcc: xor edi,edi
0x2fce: call 0x13c0
0x2fd3: mov rsi,rbx
0x2fd6: mov rdi,rax
0x2fd9: call 0x1470
0x2fde: mov rbx,qword ptr [rip+0x2080a3]
0x2fe5: lea rsi,[rip+0x5a44]
0x2fec: mov edx,0x5
0x2ff1: xor edi,edi
0x2ff3: call 0x13c0
0x2ff8: mov rsi,rbx
0x2ffb: mov rdi,rax
0x2ffe: call 0x1470
0x3003: mov rbx,qword ptr [rip+0x20807e]
0x300a: lea rsi,[rip+0x5b07]
0x3011: mov edx,0x5
0x3016: xor edi,edi
0x3018: call 0x13c0
0x301d: mov rsi,rbx
0x3020: mov rdi,rax
0x3023: call 0x1470
0x3028: mov rbx,qword ptr [rip+0x208059]
0x302f: lea rsi,[rip+0x5b62]
0x3036: mov edx,0x5
0x303b: xor edi,edi
0x303d: call 0x13c0
0x3042: mov rsi,rbx
0x3045: mov rdi,rax
0x3048: call 0x1470
0x304d: lea rsi,[rip+0x4e12]
0x3054: mov edx,0x5
0x3059: xor edi,edi
0x305b: call 0x13c0
0x3060: lea rsi,[rip+0x5bb9]
0x3067: mov rbx,rax
0x306a: mov edx,0x5
0x306f: xor edi,edi
0x3071: call 0x13c0
0x3076: mov rdx,rbx
0x3079: mov rsi,rax
0x307c: mov edi,0x1
0x3081: xor eax,eax
0x3083: lea rbx,[rip+0x4dd7]
0x308a: call 0x1550
0x308f: lea rax,[rip+0x4ddc]
0x3096: lea rcx,[rip+0x4e16]
0x309d: mov qword ptr [rsp+0x60],0x0
0x30a6: mov qword ptr [rsp+0x68],0x0
0x30af: mov rdx,rsp
0x30b2: mov qword ptr [rsp],rax
0x30b6: lea rax,[rip+0x4db7]
0x30bd: mov qword ptr [rsp+0x30],rcx
0x30c2: lea rcx,[rip+0x4df4]
0x30c9: mov qword ptr [rsp+0x8],rax
0x30ce: lea rax,[rip+0x4e17]
0x30d5: mov qword ptr [rsp+0x40],rcx
0x30da: lea rcx,[rip+0x4de6]
0x30e1: mov qword ptr [rsp+0x10],rax
0x30e6: lea rax,[rip+0x4d97]
0x30ed: mov qword ptr [rsp+0x50],rcx
0x30f2: mov qword ptr [rsp+0x18],rax
0x30f7: lea rax,[rip+0x4d9c]
0x30fe: mov qword ptr [rsp+0x20],rax
0x3103: lea rax,[rip+0x4d9a]
0x310a: mov qword ptr [rsp+0x28],rax
0x310f: mov qword ptr [rsp+0x38],rax
0x3114: mov qword ptr [rsp+0x48],rax
0x3119: mov qword ptr [rsp+0x58],rax
0x311e: nop 
0x3120: add rdx,0x10
0x3124: mov rdi,qword ptr [rdx]
0x3127: test rdi,rdi
0x312a: je 0x313f
0x312c: mov ecx,0x5
0x3131: mov rsi,rbx
0x3134: rep cmpsb [rsi],es:[rdi]
0x3136: seta al
0x3139: sbb al,0x0
0x313b: test al,al
0x313d: jne 0x3120
0x313f: mov r12,qword ptr [rdx+0x8]
0x3143: xor edi,edi
0x3145: mov edx,0x5
0x314a: lea rsi,[rip+0x4d80]
0x3151: test r12,r12
0x3154: je 0x321b
0x315a: call 0x13c0
0x315f: lea rcx,[rip+0x5b7a]
0x3166: lea rdx,[rip+0x4d7b]
0x316d: mov rsi,rax
0x3170: mov edi,0x1
0x3175: xor eax,eax
0x3177: call 0x1550
0x317c: xor esi,esi
0x317e: mov edi,0x5
0x3183: call 0x1540
0x3188: test rax,rax
0x318b: je 0x31a9
0x318d: lea rsi,[rip+0x4d62]
0x3194: mov edx,0x3
0x3199: mov rdi,rax
0x319c: call 0x1350
0x31a1: test eax,eax
0x31a3: jne 0x32b0
0x31a9: lea rsi,[rip+0x4d4a]
0x31b0: xor edi,edi
0x31b2: mov edx,0x5
0x31b7: call 0x13c0
0x31bc: lea rcx,[rip+0x4c9e]
0x31c3: lea rdx,[rip+0x5b16]
0x31ca: mov rsi,rax
0x31cd: mov edi,0x1
0x31d2: xor eax,eax
0x31d4: call 0x1550
0x31d9: cmp r12,rbx
0x31dc: lea rcx,[rip+0x4d04]
0x31e3: lea rbx,[rip+0x4ca4]
0x31ea: cmovne rbx,rcx
0x31ee: lea rsi,[rip+0x5b5b]
0x31f5: xor edi,edi
0x31f7: mov edx,0x5
0x31fc: call 0x13c0
0x3201: mov rcx,rbx
0x3204: mov rsi,rax
0x3207: mov rdx,r12
0x320a: mov edi,0x1
0x320f: xor eax,eax
0x3211: call 0x1550
0x3216: jmp 0x2df6
0x321b: call 0x13c0
0x3220: lea rcx,[rip+0x5ab9]
0x3227: lea rdx,[rip+0x4cba]
0x322e: mov rsi,rax
0x3231: mov edi,0x1
0x3236: xor eax,eax
0x3238: call 0x1550
0x323d: xor esi,esi
0x323f: mov edi,0x5
0x3244: call 0x1540
0x3249: test rax,rax
0x324c: je 0x3266
0x324e: lea rsi,[rip+0x4ca1]
0x3255: mov edx,0x3
0x325a: mov rdi,rax
0x325d: call 0x1350
0x3262: test eax,eax
0x3264: jne 0x32a9
0x3266: lea rsi,[rip+0x4c8d]
0x326d: mov edx,0x5
0x3272: xor edi,edi
0x3274: lea r12,[rip+0x4be6]
0x327b: lea rbx,[rip+0x4c0c]
0x3282: call 0x13c0
0x3287: lea rcx,[rip+0x4bd3]
0x328e: lea rdx,[rip+0x5a4b]
0x3295: mov rsi,rax
0x3298: mov edi,0x1
0x329d: xor eax,eax
0x329f: call 0x1550
0x32a4: jmp 0x31ee
0x32a9: lea r12,[rip+0x4bb1]
0x32b0: mov r13,qword ptr [rip+0x207dd1]
0x32b7: lea rsi,[rip+0x5a4a]
0x32be: xor edi,edi
0x32c0: mov edx,0x5
0x32c5: call 0x13c0
0x32ca: mov rsi,r13
0x32cd: mov rdi,rax
0x32d0: call 0x1470
0x32d5: jmp 0x31a9
0x32e0: mov qword ptr [rip+0x207de1],rdi
0x32e7: ret 
0x32f0: mov byte ptr [rip+0x207dc9],dil
0x32f7: ret 
0x3300: push rbp
0x3301: push rbx
0x3302: sub rsp,0x8
0x3306: mov rdi,qword ptr [rip+0x207d7b]
0x330d: call 0x5a50
0x3312: test eax,eax
0x3314: je 0x332c
0x3316: call 0x1330
0x331b: cmp byte ptr [rip+0x207d9e],0x0
0x3322: mov rbx,rax
0x3325: je 0x3343
0x3327: cmp dword ptr [rax],0x20
0x332a: jne 0x3343
0x332c: mov rdi,qword ptr [rip+0x207d6d]
0x3333: call 0x5a50
0x3338: test eax,eax
0x333a: jne 0x3382
0x333c: add rsp,0x8
0x3340: pop rbx
0x3341: pop rbp
0x3342: ret 
0x3343: lea rsi,[rip+0x5a39]
0x334a: xor edi,edi
0x334c: mov edx,0x5
0x3351: call 0x13c0
0x3356: mov rdi,qword ptr [rip+0x207d6b]
0x335d: mov rbp,rax
0x3360: test rdi,rdi
0x3363: je 0x338d
0x3365: call 0x4f10
0x336a: mov esi,dword ptr [rbx]
0x336c: lea rdx,[rip+0x5a1c]
0x3373: mov rcx,rax
0x3376: mov r8,rbp
0x3379: xor edi,edi
0x337b: xor eax,eax
0x337d: call 0x1560
0x3382: mov edi,dword ptr [rip+0x207c88]
0x3388: call 0x1360
0x338d: mov esi,dword ptr [rbx]
0x338f: lea rdx,[rip+0x59fd]
0x3396: mov rcx,rax
0x3399: xor edi,edi
0x339b: xor eax,eax
0x339d: call 0x1560
0x33a2: jmp 0x3382
0x349f: nop 
0x34a0: push rbp
0x34a1: push rbx
0x34a2: mov rbp,rdi
0x34a5: mov ebx,esi
0x34a7: sub rsp,0x8
0x34ab: call 0x5b30
0x34b0: movzx edx,byte ptr [rax]
0x34b3: and edx,-0x21
0x34b6: cmp dl,0x55
0x34b9: je 0x3530
0x34bb: cmp dl,0x47
0x34be: je 0x34e0
0x34c0: lea rax,[rip+0x5924]
0x34c7: lea rdx,[rip+0x591f]
0x34ce: cmp ebx,0x9
0x34d1: cmovne rax,rdx
0x34d5: add rsp,0x8
0x34d9: pop rbx
0x34da: pop rbp
0x34db: ret 
0x34e0: movzx edx,byte ptr [rax+0x1]
0x34e4: and edx,-0x21
0x34e7: cmp dl,0x42
0x34ea: jne 0x34c0
0x34ec: cmp byte ptr [rax+0x2],0x31
0x34f0: jne 0x34c0
0x34f2: cmp byte ptr [rax+0x3],0x38
0x34f6: jne 0x34c0
0x34f8: cmp byte ptr [rax+0x4],0x30
0x34fc: jne 0x34c0
0x34fe: cmp byte ptr [rax+0x5],0x33
0x3502: jne 0x34c0
0x3504: cmp byte ptr [rax+0x6],0x30
0x3508: jne 0x34c0
0x350a: cmp byte ptr [rax+0x7],0x0
0x350e: jne 0x34c0
0x3510: cmp byte ptr [rbp],0x60
0x3514: lea rax,[rip+0x58c9]
0x351b: lea rdx,[rip+0x58c6]
0x3522: cmovne rax,rdx
0x3526: add rsp,0x8
0x352a: pop rbx
0x352b: pop rbp
0x352c: ret 
0x3530: movzx edx,byte ptr [rax+0x1]
0x3534: and edx,-0x21
0x3537: cmp dl,0x54
0x353a: jne 0x34c0
0x353c: movzx edx,byte ptr [rax+0x2]
0x3540: and edx,-0x21
0x3543: cmp dl,0x46
0x3546: jne 0x34c0
0x354c: cmp byte ptr [rax+0x3],0x2d
0x3550: jne 0x34c0
0x3556: cmp byte ptr [rax+0x4],0x38
0x355a: jne 0x34c0
0x3560: cmp byte ptr [rax+0x5],0x0
0x3564: jne 0x34c0
0x356a: cmp byte ptr [rbp],0x60
0x356e: lea rax,[rip+0x5867]
0x3575: lea rdx,[rip+0x5864]
0x357c: cmovne rax,rdx
0x3580: add rsp,0x8
0x3584: pop rbx
0x3585: pop rbp
0x3586: ret 
0x3663: xor r11d,r11d
0x3666: mov rax,rbp
0x3669: mov r8d,r12d
0x366c: mov rbp,r11
0x366f: mov r11,rax
0x3672: nop word ptr [rax+rax]
0x3678: cmp r11,rbp
0x367b: setne r12b
0x367f: cmp r11,-0x1
0x3683: jne 0x3692
0x3685: mov rax,qword ptr [rsp+0x10]
0x368a: cmp byte ptr [rax+rbp],0x0
0x368e: setne r12b
0x3692: test r12b,r12b
0x3695: je 0x3cf0
0x369b: cmp dword ptr [rsp+0x8],0x2
0x36a0: mov rdi,qword ptr [rsp+0x10]
0x36a5: lea r9,[rdi+rbp]
0x36a9: setne al
0x36ac: and al,byte ptr [rsp+0xd]
0x36b0: mov r10d,eax
0x36b3: je 0x3760
0x36b9: mov rax,qword ptr [rsp+0x18]
0x36be: test rax,rax
0x36c1: je 0x3af0
0x36c7: cmp r11,-0x1
0x36cb: lea rbx,[rbp+rax]
0x36d0: jne 0x3700
0x36d2: cmp rax,0x1
0x36d6: jbe 0x3700
0x36d8: mov byte ptr [rsp+0x38],r8b
0x36dd: mov byte ptr [rsp+0x30],r10b
0x36e2: mov qword ptr [rsp+0x28],r9
0x36e7: call 0x13e0
0x36ec: movzx r8d,byte ptr [rsp+0x38]
0x36f2: movzx r10d,byte ptr [rsp+0x30]
0x36f8: mov r11,rax
0x36fb: mov r9,qword ptr [rsp+0x28]
0x3700: cmp rbx,r11
0x3703: mov byte ptr [rsp+0x28],r10b
0x3708: ja 0x3cc0
0x370e: mov rdx,qword ptr [rsp+0x18]
0x3713: mov rsi,qword ptr [rsp+0x48]
0x3718: mov rdi,r9
0x371b: mov qword ptr [rsp+0x40],r11
0x3720: mov byte ptr [rsp+0x38],r8b
0x3725: mov qword ptr [rsp+0x30],r9
0x372a: call 0x1460
0x372f: test eax,eax
0x3731: mov r9,qword ptr [rsp+0x30]
0x3736: movzx r8d,byte ptr [rsp+0x38]
0x373c: mov r11,qword ptr [rsp+0x40]
0x3741: jne 0x3cc0
0x3747: cmp byte ptr [rsp+0xf],0x0
0x374c: movzx r10d,byte ptr [rsp+0x28]
0x3752: jne 0x46d5
0x3758: nop dword ptr [rax+rax]
0x3760: movzx ebx,byte ptr [r9]
0x3764: cmp bl,0x7e
0x3767: ja 0x3a88
0x376d: lea rcx,[rip+0x56f8]
0x3774: movzx edx,bl
0x3777: movsxd rax,dword ptr [rcx+rdx*4]
0x377b: add rax,rcx
0x377e: jmp rax
0x37b8: cmp byte ptr [rsp+0xd],0x1
0x37bd: jne 0x38d2
0x37c3: test dl,dl
0x37c5: jne 0x38d2
0x37cb: mov rsi,qword ptr [rsp+0x20]
0x37d0: test rsi,rsi
0x37d3: je 0x37e9
0x37d5: mov edx,ebx
0x37d7: shr dl,0x5
0x37da: movzx edx,dl
0x37dd: mov edx,dword ptr [rsi+rdx*4]
0x37e0: btl edx,ebx
0x37e3: jb 0x3933
0x37e9: test r10b,r10b
0x37ec: jne 0x3933
0x37f2: xor eax,0x1
0x37f5: add rbp,0x1
0x37f9: and eax,r8d
0x37fc: test al,al
0x37fe: je 0x3820
0x3800: cmp r13,r15
0x3803: jbe 0x380a
0x3805: mov byte ptr [r14+r15],0x27
0x380a: lea rax,[r15+0x1]
0x380e: cmp r13,rax
0x3811: jbe 0x3819
0x3813: mov byte ptr [r14+r15+0x1],0x27
0x3819: add r15,0x2
0x381d: xor r8d,r8d
0x3820: cmp r15,r13
0x3823: jae 0x3829
0x3825: mov byte ptr [r14+r15],bl
0x3829: movzx edi,byte ptr [rsp+0xe]
0x382e: add r15,0x1
0x3832: mov eax,0x0
0x3837: test r12b,r12b
0x383a: cmove edi,eax
0x383d: mov byte ptr [rsp+0xe],dil
0x3842: jmp 0x3678
0x38d2: cmp byte ptr [rsp+0xf],0x0
0x38d7: jne 0x37cb
0x38dd: jmp 0x37e9
0x3933: cmp dword ptr [rsp+0x8],0x2
0x3938: sete dl
0x393b: cmp byte ptr [rsp+0xf],0x0
0x3940: mov eax,edx
0x3942: jne 0x4198
0x3948: mov eax,r8d
0x394b: xor eax,0x1
0x394e: and al,dl
0x3950: je 0x3981
0x3952: cmp r13,r15
0x3955: jbe 0x395c
0x3957: mov byte ptr [r14+r15],0x27
0x395c: lea rdx,[r15+0x1]
0x3960: cmp r13,rdx
0x3963: jbe 0x396b
0x3965: mov byte ptr [r14+r15+0x1],0x24
0x396b: lea rdx,[r15+0x2]
0x396f: cmp r13,rdx
0x3972: jbe 0x397a
0x3974: mov byte ptr [r14+r15+0x2],0x27
0x397a: add r15,0x3
0x397e: mov r8d,eax
0x3981: cmp r13,r15
0x3984: jbe 0x398b
0x3986: mov byte ptr [r14+r15],0x5c
0x398b: add r15,0x1
0x398f: add rbp,0x1
0x3993: jmp 0x3820
0x3a80: xor r10d,r10d
0x3a83: nop dword ptr [rax+rax]
0x3a88: cmp qword ptr [rsp+0x58],0x1
0x3a8e: jne 0x3e38
0x3a94: mov qword ptr [rsp+0x38],r11
0x3a99: mov byte ptr [rsp+0x30],r8b
0x3a9e: mov byte ptr [rsp+0x28],r10b
0x3aa3: call 0x15f0
0x3aa8: mov rcx,qword ptr [rax]
0x3aab: movzx edx,bl
0x3aae: movzx r10d,byte ptr [rsp+0x28]
0x3ab4: movzx r8d,byte ptr [rsp+0x30]
0x3aba: mov r11,qword ptr [rsp+0x38]
0x3abf: mov edi,0x1
0x3ac4: movzx eax,word ptr [rcx+rdx*2]
0x3ac8: and ax,0x4000
0x3acc: setne r12b
0x3ad0: sete al
0x3ad3: and al,byte ptr [rsp+0xd]
0x3ad7: test al,al
0x3ad9: jne 0x4471
0x3adf: cmp dword ptr [rsp+0x8],0x2
0x3ae4: sete dl
0x3ae7: jmp 0x37b8
0x3af0: movzx ebx,byte ptr [r9]
0x3af4: cmp bl,0x7e
0x3af7: ja 0x3a80
0x3af9: lea rcx,[rip+0x5568]
0x3b00: movzx edx,bl
0x3b03: movsxd rax,dword ptr [rcx+rdx*4]
0x3b07: add rax,rcx
0x3b0a: jmp rax
0x3cc0: xor r10d,r10d
0x3cc3: jmp 0x3760
0x3cf0: cmp dword ptr [rsp+0x8],0x2
0x3cf5: movzx ebx,byte ptr [rsp+0xf]
0x3cfa: mov r12d,r8d
0x3cfd: mov rbp,r11
0x3d00: sete dl
0x3d03: mov eax,ebx
0x3d05: test r15,r15
0x3d08: sete cl
0x3d0b: and eax,edx
0x3d0d: and al,cl
0x3d0f: jne 0x4776
0x3d15: mov eax,ebx
0x3d17: xor eax,0x1
0x3d1a: and dl,al
0x3d1c: je 0x468c
0x3d22: cmp byte ptr [rsp+0x7c],0x0
0x3d27: je 0x468a
0x3d2d: cmp byte ptr [rsp+0xe],0x0
0x3d32: jne 0x472d
0x3d38: test r13,r13
0x3d3b: sete al
0x3d3e: cmp qword ptr [rsp+0x50],0x0
0x3d44: setne dl
0x3d47: and al,dl
0x3d49: je 0x476c
0x3d4f: mov r13,qword ptr [rsp+0x50]
0x3d54: lea rbx,[rip+0x5092]
0x3d5b: mov byte ptr [r14],0x27
0x3d5f: mov dword ptr [rsp+0x8],0x2
0x3d67: mov r15d,0x1
0x3d6d: mov qword ptr [rsp+0x18],0x1
0x3d76: mov byte ptr [rsp+0xf],0x0
0x3d7b: mov qword ptr [rsp+0x48],rbx
0x3d80: mov byte ptr [rsp+0x7c],al
0x3d84: jmp 0x3663
0x3e38: lea rax,[rsp+0xa0]
0x3e40: cmp r11,-0x1
0x3e44: mov qword ptr [rsp+0xa0],0x0
0x3e50: mov qword ptr [rsp+0x28],rax
0x3e55: jne 0x3e84
0x3e57: mov rdi,qword ptr [rsp+0x10]
0x3e5c: mov byte ptr [rsp+0x40],r8b
0x3e61: mov byte ptr [rsp+0x38],r10b
0x3e66: mov qword ptr [rsp+0x30],r9
0x3e6b: call 0x13e0
0x3e70: movzx r8d,byte ptr [rsp+0x40]
0x3e76: movzx r10d,byte ptr [rsp+0x38]
0x3e7c: mov r11,rax
0x3e7f: mov r9,qword ptr [rsp+0x30]
0x3e84: lea rax,[rsp+0x9c]
0x3e8c: xor ecx,ecx
0x3e8e: mov byte ptr [rsp+0x7e],bl
0x3e92: mov byte ptr [rsp+0x7d],r8b
0x3e97: mov rbx,rcx
0x3e9a: mov qword ptr [rsp+0x88],r9
0x3ea2: mov qword ptr [rsp+0x38],rax
0x3ea7: mov byte ptr [rsp+0x7f],r10b
0x3eac: mov qword ptr [rsp+0x80],r15
0x3eb4: mov qword ptr [rsp+0x40],r14
0x3eb9: mov qword ptr [rsp+0x70],r13
0x3ebe: mov qword ptr [rsp+0x30],r11
0x3ec3: mov rax,qword ptr [rsp+0x10]
0x3ec8: lea r14,[rbp+rbx]
0x3ecd: mov rdx,qword ptr [rsp+0x30]
0x3ed2: mov rcx,qword ptr [rsp+0x28]
0x3ed7: mov rdi,qword ptr [rsp+0x38]
0x3edc: lea r13,[rax+r14]
0x3ee0: sub rdx,r14
0x3ee3: mov rsi,r13
0x3ee6: call 0x5940
0x3eeb: test rax,rax
0x3eee: mov r15,rax
0x3ef1: je 0x3f41
0x3ef3: cmp rax,-0x1
0x3ef7: je 0x4515
0x3efd: cmp rax,-0x2
0x3f01: je 0x44a1
0x3f07: cmp dword ptr [rsp+0x8],0x2
0x3f0c: sete al
0x3f0f: and al,byte ptr [rsp+0xf]
0x3f13: jne 0x40b0
0x3f19: mov edi,dword ptr [rsp+0x9c]
0x3f20: call 0x15e0
0x3f25: mov rdi,qword ptr [rsp+0x28]
0x3f2a: test eax,eax
0x3f2c: mov eax,0x0
0x3f31: cmove r12d,eax
0x3f35: add rbx,r15
0x3f38: call 0x15d0
0x3f3d: test eax,eax
0x3f3f: je 0x3ec3
0x3f41: mov edx,r12d
0x3f44: mov rdi,rbx
0x3f47: movzx r8d,byte ptr [rsp+0x7d]
0x3f4d: xor edx,0x1
0x3f50: movzx ebx,byte ptr [rsp+0x7e]
0x3f55: movzx r10d,byte ptr [rsp+0x7f]
0x3f5b: and dl,byte ptr [rsp+0xd]
0x3f5f: mov r15,qword ptr [rsp+0x80]
0x3f67: mov r14,qword ptr [rsp+0x40]
0x3f6c: mov r13,qword ptr [rsp+0x70]
0x3f71: mov r11,qword ptr [rsp+0x30]
0x3f76: cmp rdi,0x1
0x3f7a: jbe 0x457b
0x3f80: mov rcx,rdi
0x3f83: xor esi,esi
0x3f85: movzx r9d,byte ptr [rsp+0xf]
0x3f8b: add rcx,rbp
0x3f8e: mov rdi,qword ptr [rsp+0x10]
0x3f93: jmp 0x404e
0x3fa0: cmp dword ptr [rsp+0x8],0x2
0x3fa5: sete al
0x3fa8: test r9b,r9b
0x3fab: jne 0x4460
0x3fb1: mov esi,r8d
0x3fb4: xor esi,0x1
0x3fb7: and al,sil
0x3fba: je 0x3feb
0x3fbc: cmp r13,r15
0x3fbf: jbe 0x3fc6
0x3fc1: mov byte ptr [r14+r15],0x27
0x3fc6: lea rsi,[r15+0x1]
0x3fca: cmp r13,rsi
0x3fcd: jbe 0x3fd5
0x3fcf: mov byte ptr [r14+r15+0x1],0x24
0x3fd5: lea rsi,[r15+0x2]
0x3fd9: cmp r13,rsi
0x3fdc: jbe 0x3fe4
0x3fde: mov byte ptr [r14+r15+0x2],0x27
0x3fe4: add r15,0x3
0x3fe8: mov r8d,eax
0x3feb: cmp r13,r15
0x3fee: jbe 0x3ff5
0x3ff0: mov byte ptr [r14+r15],0x5c
0x3ff5: lea rax,[r15+0x1]
0x3ff9: cmp r13,rax
0x3ffc: jbe 0x400b
0x3ffe: mov eax,ebx
0x4000: shr al,0x6
0x4003: add eax,0x30
0x4006: mov byte ptr [r14+r15+0x1],al
0x400b: lea rax,[r15+0x2]
0x400f: cmp r13,rax
0x4012: jbe 0x4024
0x4014: mov eax,ebx
0x4016: shr al,0x3
0x4019: and eax,0x7
0x401c: add eax,0x30
0x401f: mov byte ptr [r14+r15+0x2],al
0x4024: and ebx,0x7
0x4027: add rbp,0x1
0x402b: add r15,0x3
0x402f: add ebx,0x30
0x4032: cmp rbp,rcx
0x4035: jae 0x3820
0x403b: mov esi,edx
0x403d: cmp r13,r15
0x4040: jbe 0x4046
0x4042: mov byte ptr [r14+r15],bl
0x4046: movzx ebx,byte ptr [rdi+rbp]
0x404a: add r15,0x1
0x404e: test dl,dl
0x4050: jne 0x3fa0
0x4056: mov eax,esi
0x4058: xor eax,0x1
0x405b: and eax,r8d
0x405e: test r10b,r10b
0x4061: je 0x4071
0x4063: cmp r13,r15
0x4066: jbe 0x406d
0x4068: mov byte ptr [r14+r15],0x5c
0x406d: add r15,0x1
0x4071: add rbp,0x1
0x4075: cmp rbp,rcx
0x4078: jae 0x37fc
0x407e: test al,al
0x4080: je 0x447e
0x4086: cmp r13,r15
0x4089: jbe 0x4090
0x408b: mov byte ptr [r14+r15],0x27
0x4090: lea rax,[r15+0x1]
0x4094: cmp r13,rax
0x4097: jbe 0x409f
0x4099: mov byte ptr [r14+r15+0x1],0x27
0x409f: add r15,0x2
0x40a3: xor r10d,r10d
0x40a6: xor r8d,r8d
0x40a9: jmp 0x403d
0x40b0: cmp r15,0x1
0x40b4: je 0x3f19
0x40ba: mov rdi,qword ptr [rsp+0x10]
0x40bf: lea rcx,[rdi+r15]
0x40c3: lea rdx,[rdi+r14+0x1]
0x40c8: lea r8,[rcx+r14]
0x40cc: jmp 0x40dd
0x40d0: add rdx,0x1
0x40d4: cmp r8,rdx
0x40d7: je 0x3f19
0x40dd: movzx ecx,byte ptr [rdx]
0x40e0: sub ecx,0x5b
0x40e3: cmp cl,0x21
0x40e6: ja 0x40d0
0x40e8: mov esi,0x1
0x40ed: shl rsi,cl
0x40f0: mov rcx,rsi
0x40f3: movabsq rsi,0x20000002b
0x40fd: test rcx,rsi
0x4100: je 0x40d0
0x4102: mov r14,qword ptr [rsp+0x40]
0x4107: mov r13,qword ptr [rsp+0x70]
0x410c: mov rbp,qword ptr [rsp+0x30]
0x4111: mov dword ptr [rsp+0x8],0x2
0x4119: cmp byte ptr [rsp+0xd],0x0
0x411e: je 0x4130
0x4120: test al,al
0x4122: mov eax,0x4
0x4127: cmove eax,dword ptr [rsp+0x8]
0x412c: mov dword ptr [rsp+0x8],eax
0x4130: sub rsp,0x8
0x4134: mov rcx,rbp
0x4137: mov rsi,r13
0x413a: push qword ptr [rsp+0x68]
0x413e: push qword ptr [rsp+0x78]
0x4142: mov rdi,r14
0x4145: push 0x0
0x4147: mov r9d,dword ptr [rsp+0x98]
0x414f: mov r8d,dword ptr [rsp+0x28]
0x4154: mov rdx,qword ptr [rsp+0x30]
0x4159: and r9d,-0x3
0x415d: call 0x3590
0x4162: add rsp,0x20
0x4166: mov r15,rax
0x4169: mov rbx,qword ptr [rsp+0xa8]
0x4171: xor rbx,qword ptr fs:0x28
0x417a: mov rax,r15
0x417d: jne 0x4783
0x4183: add rsp,0xb8
0x418a: pop rbx
0x418b: pop rbp
0x418c: pop r12
0x418e: pop r13
0x4190: pop r14
0x4192: pop r15
0x4194: ret 
0x4198: mov rbp,r11
0x419b: jmp 0x4119
0x4201: test r13,r13
0x4204: jne 0x479a
0x420a: lea rax,[rip+0x4bdc]
0x4211: mov qword ptr [rsp+0x50],0x0
0x421a: mov byte ptr [rsp+0xe],0x1
0x421f: mov byte ptr [rsp+0x7c],0x0
0x4224: xor r12d,r12d
0x4227: mov byte ptr [rsp+0xf],0x0
0x422c: mov qword ptr [rsp+0x18],0x1
0x4235: mov qword ptr [rsp+0x48],rax
0x423a: mov r15d,0x1
0x4240: mov dword ptr [rsp+0x8],0x2
0x4248: jmp 0x3663
0x4460: movzx ebx,byte ptr [rsp+0xf]
0x4465: mov rbp,r11
0x4468: mov byte ptr [rsp+0xd],bl
0x446c: jmp 0x4119
0x4471: movzx edx,byte ptr [rsp+0xd]
0x4476: xor r12d,r12d
0x4479: jmp 0x3f80
0x447e: xor r10d,r10d
0x4481: jmp 0x403d
0x44a1: mov r11,qword ptr [rsp+0x30]
0x44a6: mov rsi,r14
0x44a9: mov rcx,r13
0x44ac: mov rax,rbx
0x44af: mov rdi,rbx
0x44b2: movzx r8d,byte ptr [rsp+0x7d]
0x44b8: movzx ebx,byte ptr [rsp+0x7e]
0x44bd: mov r9,qword ptr [rsp+0x88]
0x44c5: cmp rsi,r11
0x44c8: movzx r10d,byte ptr [rsp+0x7f]
0x44ce: mov r15,qword ptr [rsp+0x80]
0x44d6: mov r14,qword ptr [rsp+0x40]
0x44db: mov r13,qword ptr [rsp+0x70]
0x44e0: jae 0x4508
0x44e2: cmp byte ptr [rcx],0x0
0x44e5: jne 0x44f7
0x44e7: jmp 0x4508
0x44f0: cmp byte ptr [r9+rax],0x0
0x44f5: je 0x4505
0x44f7: add rax,0x1
0x44fb: lea rdx,[rbp+rax]
0x4500: cmp r11,rdx
0x4503: ja 0x44f0
0x4505: mov rdi,rax
0x4508: movzx edx,byte ptr [rsp+0xd]
0x450d: xor r12d,r12d
0x4510: jmp 0x3f76
0x4515: mov rdi,rbx
0x4518: movzx r8d,byte ptr [rsp+0x7d]
0x451e: movzx ebx,byte ptr [rsp+0x7e]
0x4523: movzx r10d,byte ptr [rsp+0x7f]
0x4529: mov r15,qword ptr [rsp+0x80]
0x4531: xor r12d,r12d
0x4534: mov r14,qword ptr [rsp+0x40]
0x4539: mov r13,qword ptr [rsp+0x70]
0x453e: mov r11,qword ptr [rsp+0x30]
0x4543: movzx edx,byte ptr [rsp+0xd]
0x4548: jmp 0x3f76
0x457b: mov eax,edx
0x457d: jmp 0x3ad7
0x468a: mov eax,edx
0x468c: mov rbx,qword ptr [rsp+0x48]
0x4691: test rbx,rbx
0x4694: je 0x46c2
0x4696: test al,al
0x4698: je 0x46c2
0x469a: movzx ecx,byte ptr [rbx]
0x469d: mov rax,rbx
0x46a0: test cl,cl
0x46a2: je 0x46c2
0x46a4: mov rdx,r15
0x46a7: sub rax,r15
0x46aa: cmp r13,rdx
0x46ad: jbe 0x46b3
0x46af: mov byte ptr [r14+rdx],cl
0x46b3: add rdx,0x1
0x46b7: movzx ecx,byte ptr [rax+rdx]
0x46bb: test cl,cl
0x46bd: jne 0x46aa
0x46bf: mov r15,rdx
0x46c2: cmp r13,r15
0x46c5: jbe 0x4169
0x46cb: mov byte ptr [r14+r15],0x0
0x46d0: jmp 0x4169
0x46d5: cmp dword ptr [rsp+0x8],0x2
0x46da: movzx ebx,byte ptr [rsp+0xf]
0x46df: mov rbp,r11
0x46e2: sete al
0x46e5: mov byte ptr [rsp+0xd],bl
0x46e9: jmp 0x4119
0x472d: sub rsp,0x8
0x4731: mov r8d,0x5
0x4737: mov rcx,r11
0x473a: push qword ptr [rsp+0x68]
0x473e: push qword ptr [rsp+0x78]
0x4742: mov rdi,r14
0x4745: push qword ptr [rsp+0x38]
0x4749: mov r9d,dword ptr [rsp+0x98]
0x4751: mov rdx,qword ptr [rsp+0x30]
0x4756: mov rsi,qword ptr [rsp+0x70]
0x475b: call 0x3590
0x4760: add rsp,0x20
0x4764: mov r15,rax
0x4767: jmp 0x4169
0x476c: movzx eax,byte ptr [rsp+0x7c]
0x4771: jmp 0x468c
0x4776: mov dword ptr [rsp+0x8],0x2
0x477e: jmp 0x4119
0x4783: call 0x1400
0x4788: mov byte ptr [rsp+0xd],0x0
0x478d: jmp 0x4201
0x479a: mov byte ptr [rsp+0xe],0x1
0x479f: xor eax,eax
0x47a1: xor r12d,r12d
0x47a4: mov qword ptr [rsp+0x50],0x0
0x47ad: jmp 0x3d54
0x47c4: nop 
0x47c6: nop word ptr cs:[rax+rax]
0x48bc: add rsp,0x20
0x48c0: mov r11,qword ptr [rsp+0x10]
0x48c5: cmp r11,rax
0x48c8: ja 0x4931
0x48ca: lea rsi,[rax+0x1]
0x48ce: lea rax,[rip+0x20680b]
0x48d5: cmp r12,rax
0x48d8: mov qword ptr [rbx],rsi
0x48db: je 0x48ef
0x48dd: mov rdi,r12
0x48e0: mov qword ptr [rsp+0x10],rsi
0x48e5: call 0x1310
0x48ea: mov rsi,qword ptr [rsp+0x10]
0x48ef: mov rdi,rsi
0x48f2: mov qword ptr [rsp+0x10],rsi
0x48f7: call 0x54b0
0x48fc: sub rsp,0x8
0x4900: mov qword ptr [rbx+0x8],rax
0x4904: mov r8d,dword ptr [rbp]
0x4908: push qword ptr [rbp+0x30]
0x490b: push qword ptr [rbp+0x28]
0x490e: mov rcx,r14
0x4911: push r15
0x4913: mov r9d,dword ptr [rsp+0x3c]
0x4918: mov rdi,rax
0x491b: mov rdx,qword ptr [rsp+0x28]
0x4920: mov rsi,qword ptr [rsp+0x30]
0x4925: mov r12,rax
0x4928: call 0x3590
0x492d: add rsp,0x20
0x4931: mov eax,dword ptr [rsp+0x18]
0x4935: mov dword ptr [r13],eax
0x4939: add rsp,0x28
0x493d: mov rax,r12
0x4940: pop rbx
0x4941: pop rbp
0x4942: pop r12
0x4944: pop r13
0x4946: pop r14
0x4948: pop r15
0x494a: ret 
0x497b: nop dword ptr [rax+rax]
0x4980: push r12
0x4982: push rbp
0x4983: push rbx
0x4984: mov rbx,rdi
0x4987: call 0x1330
0x498c: mov r12d,dword ptr [rax]
0x498f: mov rbp,rax
0x4992: lea rax,[rip+0x206847]
0x4999: test rbx,rbx
0x499c: mov esi,0x38
0x49a1: cmove rbx,rax
0x49a5: mov rdi,rbx
0x49a8: call 0x56b0
0x49ad: mov dword ptr [rbp],r12d
0x49b1: pop rbx
0x49b2: pop rbp
0x49b3: pop r12
0x49b5: ret 
0x49c0: lea rax,[rip+0x206819]
0x49c7: test rdi,rdi
0x49ca: cmove rdi,rax
0x49ce: mov eax,dword ptr [rdi]
0x49d0: ret 
0x49e0: lea rax,[rip+0x2067f9]
0x49e7: test rdi,rdi
0x49ea: cmove rdi,rax
0x49ee: mov dword ptr [rdi],esi
0x49f0: ret 
0x4a00: lea rax,[rip+0x2067d9]
0x4a07: test rdi,rdi
0x4a0a: mov ecx,esi
0x4a0c: cmove rdi,rax
0x4a10: mov eax,esi
0x4a12: and ecx,0x1f
0x4a15: shr al,0x5
0x4a18: movzx eax,al
0x4a1b: lea rdi,[rdi+rax*4+0x8]
0x4a20: mov esi,dword ptr [rdi]
0x4a22: mov eax,esi
0x4a24: shr eax,cl
0x4a26: xor edx,eax
0x4a28: and eax,0x1
0x4a2b: and edx,0x1
0x4a2e: shl edx,cl
0x4a30: xor edx,esi
0x4a32: mov dword ptr [rdi],edx
0x4a34: ret 
0x4a40: lea rax,[rip+0x206799]
0x4a47: test rdi,rdi
0x4a4a: cmove rdi,rax
0x4a4e: mov eax,dword ptr [rdi+0x4]
0x4a51: mov dword ptr [rdi+0x4],esi
0x4a54: ret 
0x4a60: lea rax,[rip+0x206779]
0x4a67: test rdi,rdi
0x4a6a: cmove rdi,rax
0x4a6e: test rsi,rsi
0x4a71: mov dword ptr [rdi],0xa
0x4a77: je 0x4a87
0x4a79: test rdx,rdx
0x4a7c: je 0x4a87
0x4a7e: mov qword ptr [rdi+0x28],rsi
0x4a82: mov qword ptr [rdi+0x30],rdx
0x4a86: ret 
0x4a87: sub rsp,0x8
0x4a8b: call 0x1320
0x4a90: push r15
0x4a92: push r14
0x4a94: lea rax,[rip+0x206745]
0x4a9b: push r13
0x4a9d: push r12
0x4a9f: mov r13,rdi
0x4aa2: push rbp
0x4aa3: push rbx
0x4aa4: mov rbx,r8
0x4aa7: mov r14,rsi
0x4aaa: mov r15,rdx
0x4aad: sub rsp,0x18
0x4ab1: test r8,r8
0x4ab4: cmove rbx,rax
0x4ab8: mov qword ptr [rsp+0x8],rcx
0x4abd: call 0x1330
0x4ac2: mov r12d,dword ptr [rax]
0x4ac5: mov rbp,rax
0x4ac8: lea rax,[rbx+0x8]
0x4acc: sub rsp,0x8
0x4ad0: mov r9d,dword ptr [rbx+0x4]
0x4ad4: push qword ptr [rbx+0x30]
0x4ad7: mov r8d,dword ptr [rbx]
0x4ada: push qword ptr [rbx+0x28]
0x4add: mov rdx,r15
0x4ae0: push rax
0x4ae1: mov rcx,qword ptr [rsp+0x28]
0x4ae6: mov rsi,r14
0x4ae9: mov rdi,r13
0x4aec: call 0x3590
0x4af1: mov dword ptr [rbp],r12d
0x4af5: add rsp,0x38
0x4af9: pop rbx
0x4afa: pop rbp
0x4afb: pop r12
0x4afd: pop r13
0x4aff: pop r14
0x4b01: pop r15
0x4b03: ret 
0x4b10: push r15
0x4b12: push r14
0x4b14: lea rax,[rip+0x2066c5]
0x4b1b: push r13
0x4b1d: push r12
0x4b1f: mov r12,rdx
0x4b22: push rbp
0x4b23: push rbx
0x4b24: mov rbx,rcx
0x4b27: mov r14,rdi
0x4b2a: mov r15,rsi
0x4b2d: sub rsp,0x38
0x4b31: test rcx,rcx
0x4b34: cmove rbx,rax
0x4b38: xor ebp,ebp
0x4b3a: call 0x1330
0x4b3f: test r12,r12
0x4b42: mov r13,rax
0x4b45: mov eax,dword ptr [rax]
0x4b47: sete bpl
0x4b4b: or ebp,dword ptr [rbx+0x4]
0x4b4e: lea r10,[rbx+0x8]
0x4b52: sub rsp,0x8
0x4b56: mov r8d,dword ptr [rbx]
0x4b59: mov rcx,r15
0x4b5c: mov dword ptr [rsp+0x14],eax
0x4b60: push qword ptr [rbx+0x30]
0x4b63: mov rdx,r14
0x4b66: push qword ptr [rbx+0x28]
0x4b69: push r10
0x4b6b: xor esi,esi
0x4b6d: mov r9d,ebp
0x4b70: xor edi,edi
0x4b72: mov qword ptr [rsp+0x40],r10
0x4b77: call 0x3590
0x4b7c: lea rsi,[rax+0x1]
0x4b80: mov qword ptr [rsp+0x48],rax
0x4b85: add rsp,0x20
0x4b89: mov rdi,rsi
0x4b8c: mov qword ptr [rsp+0x18],rsi
0x4b91: call 0x54b0
0x4b96: mov qword ptr [rsp+0x10],rax
0x4b9b: sub rsp,0x8
0x4b9f: push qword ptr [rbx+0x30]
0x4ba2: push qword ptr [rbx+0x28]
0x4ba5: mov r10,qword ptr [rsp+0x38]
0x4baa: mov r9d,ebp
0x4bad: mov r8d,dword ptr [rbx]
0x4bb0: mov rcx,r15
0x4bb3: mov rdx,r14
0x4bb6: mov rdi,rax
0x4bb9: push r10
0x4bbb: mov rsi,qword ptr [rsp+0x38]
0x4bc0: call 0x3590
0x4bc5: mov eax,dword ptr [rsp+0x2c]
0x4bc9: add rsp,0x20
0x4bcd: test r12,r12
0x4bd0: mov dword ptr [r13],eax
0x4bd4: je 0x4bdf
0x4bd6: mov r11,qword ptr [rsp+0x28]
0x4bdb: mov qword ptr [r12],r11
0x4bdf: mov rax,qword ptr [rsp+0x10]
0x4be4: add rsp,0x38
0x4be8: pop rbx
0x4be9: pop rbp
0x4bea: pop r12
0x4bec: pop r13
0x4bee: pop r14
0x4bf0: pop r15
0x4bf2: ret 
0x4c00: mov rcx,rdx
0x4c03: xor edx,edx
0x4c05: jmp 0x4b10
0x4c10: mov eax,dword ptr [rip+0x206442]
0x4c16: push r12
0x4c18: mov r12,qword ptr [rip+0x206441]
0x4c1f: push rbp
0x4c20: push rbx
0x4c21: cmp eax,0x1
0x4c24: jle 0x4c51
0x4c26: sub eax,0x2
0x4c29: lea rbx,[r12+0x18]
0x4c2e: shl rax,0x4
0x4c32: lea rbp,[r12+rax+0x28]
0x4c37: nop word ptr [rax+rax]
0x4c40: mov rdi,qword ptr [rbx]
0x4c43: add rbx,0x10
0x4c47: call 0x1310
0x4c4c: cmp rbx,rbp
0x4c4f: jne 0x4c40
0x4c51: mov rdi,qword ptr [r12+0x8]
0x4c56: lea rbx,[rip+0x206483]
0x4c5d: cmp rdi,rbx
0x4c60: je 0x4c79
0x4c62: call 0x1310
0x4c67: mov qword ptr [rip+0x2063fe],0x100
0x4c72: mov qword ptr [rip+0x2063ff],rbx
0x4c79: lea rbx,[rip+0x2063f0]
0x4c80: cmp r12,rbx
0x4c83: je 0x4c94
0x4c85: mov rdi,r12
0x4c88: call 0x1310
0x4c8d: mov qword ptr [rip+0x2063cc],rbx
0x4c94: pop rbx
0x4c95: mov dword ptr [rip+0x2063b9],0x1
0x4c9f: pop rbp
0x4ca0: pop r12
0x4ca2: ret 
0x4cb0: lea rcx,[rip+0x206529]
0x4cb7: mov rdx,-0x1
0x4cbe: jmp 0x47d0
0x4cd0: lea rcx,[rip+0x206509]
0x4cd7: jmp 0x47d0
0x4ce0: lea rcx,[rip+0x2064f9]
0x4ce7: mov rsi,rdi
0x4cea: mov rdx,-0x1
0x4cf1: xor edi,edi
0x4cf3: jmp 0x47d0
0x4d00: lea rcx,[rip+0x2064d9]
0x4d07: mov rdx,rsi
0x4d0a: mov rsi,rdi
0x4d0d: xor edi,edi
0x4d0f: jmp 0x47d0
0x4d20: sub rsp,0x48
0x4d24: mov rax,rdx
0x4d27: mov rdx,qword ptr fs:0x28
0x4d30: mov qword ptr [rsp+0x38],rdx
0x4d35: xor edx,edx
0x4d37: cmp esi,0xa
0x4d3a: je 0x4da4
0x4d3c: mov dword ptr [rsp],esi
0x4d3f: mov rcx,rsp
0x4d42: mov rdx,-0x1
0x4d49: mov rsi,rax
0x4d4c: mov qword ptr [rsp+0x4],0x0
0x4d55: mov qword ptr [rsp+0xc],0x0
0x4d5e: mov qword ptr [rsp+0x14],0x0
0x4d67: mov qword ptr [rsp+0x1c],0x0
0x4d70: mov qword ptr [rsp+0x24],0x0
0x4d79: mov qword ptr [rsp+0x2c],0x0
0x4d82: mov dword ptr [rsp+0x34],0x0
0x4d8a: call 0x47d0
0x4d8f: mov rcx,qword ptr [rsp+0x38]
0x4d94: xor rcx,qword ptr fs:0x28
0x4d9d: jne 0x4da9
0x4d9f: add rsp,0x48
0x4da3: ret 
0x4da4: call 0x1320
0x4da9: call 0x1400
0x4dae: nop 
0x4db0: sub rsp,0x48
0x4db4: mov rax,rdx
0x4db7: mov rdx,rcx
0x4dba: mov rcx,qword ptr fs:0x28
0x4dc3: mov qword ptr [rsp+0x38],rcx
0x4dc8: xor ecx,ecx
0x4dca: cmp esi,0xa
0x4dcd: je 0x4e30
0x4dcf: mov dword ptr [rsp],esi
0x4dd2: mov rcx,rsp
0x4dd5: mov rsi,rax
0x4dd8: mov qword ptr [rsp+0x4],0x0
0x4de1: mov qword ptr [rsp+0xc],0x0
0x4dea: mov qword ptr [rsp+0x14],0x0
0x4df3: mov qword ptr [rsp+0x1c],0x0
0x4dfc: mov qword ptr [rsp+0x24],0x0
0x4e05: mov qword ptr [rsp+0x2c],0x0
0x4e0e: mov dword ptr [rsp+0x34],0x0
0x4e16: call 0x47d0
0x4e1b: mov rdx,qword ptr [rsp+0x38]
0x4e20: xor rdx,qword ptr fs:0x28
0x4e29: jne 0x4e35
0x4e2b: add rsp,0x48
0x4e2f: ret 
0x4e30: call 0x1320
0x4e35: call 0x1400
0x4e3a: nop word ptr [rax+rax]
0x4e40: mov rdx,rsi
0x4e43: mov esi,edi
0x4e45: xor edi,edi
0x4e47: jmp 0x4d20
0x4e50: mov rcx,rdx
0x4e53: mov rdx,rsi
0x4e56: mov esi,edi
0x4e58: xor edi,edi
0x4e5a: jmp 0x4db0
0x4e60: sub rsp,0x48
0x4e64: mov ecx,edx
0x4e66: mov rax,qword ptr fs:0x28
0x4e6f: mov qword ptr [rsp+0x38],rax
0x4e74: xor eax,eax
0x4e76: mov rax,qword ptr [rip+0x206393]
0x4e7d: mov r8,rsp
0x4e80: and ecx,0x1f
0x4e83: movdqa xmm0,[rip+0x206355]
0x4e8b: mov qword ptr [rsp+0x30],rax
0x4e90: mov eax,edx
0x4e92: movaps [rsp],xmm0
0x4e96: shr al,0x5
0x4e99: movzx eax,al
0x4e9c: lea r9,[r8+rax*4+0x8]
0x4ea1: movdqa xmm0,[rip+0x206347]
0x4ea9: movaps [rsp+0x10],xmm0
0x4eae: movdqa xmm0,[rip+0x20634a]
0x4eb6: movaps [rsp+0x20],xmm0
0x4ebb: mov edx,dword ptr [r9]
0x4ebe: mov eax,edx
0x4ec0: shr eax,cl
0x4ec2: not eax
0x4ec4: and eax,0x1
0x4ec7: shl eax,cl
0x4ec9: mov rcx,r8
0x4ecc: xor eax,edx
0x4ece: mov rdx,rsi
0x4ed1: mov rsi,rdi
0x4ed4: mov dword ptr [r9],eax
0x4ed7: xor edi,edi
0x4ed9: call 0x47d0
0x4ede: mov rsi,qword ptr [rsp+0x38]
0x4ee3: xor rsi,qword ptr fs:0x28
0x4eec: jne 0x4ef3
0x4eee: add rsp,0x48
0x4ef2: ret 
0x4ef3: call 0x1400
0x4ef8: nop dword ptr [rax+rax]
0x4f00: movsx edx,sil
0x4f04: mov rsi,-0x1
0x4f0b: jmp 0x4e60
0x4f10: mov edx,0x3a
0x4f15: mov rsi,-0x1
0x4f1c: jmp 0x4e60
0x4f30: mov edx,0x3a
0x4f35: jmp 0x4e60
0x4f40: sub rsp,0x48
0x4f44: mov rax,rdx
0x4f47: mov rdx,qword ptr fs:0x28
0x4f50: mov qword ptr [rsp+0x38],rdx
0x4f55: xor edx,edx
0x4f57: cmp esi,0xa
0x4f5a: je 0x4fc4
0x4f5c: mov dword ptr [rsp],esi
0x4f5f: mov rcx,rsp
0x4f62: mov rdx,-0x1
0x4f69: mov rsi,rax
0x4f6c: mov qword ptr [rsp+0x4],0x0
0x4f75: mov qword ptr [rsp+0xc],0x4000000
0x4f7e: mov qword ptr [rsp+0x14],0x0
0x4f87: mov qword ptr [rsp+0x1c],0x0
0x4f90: mov qword ptr [rsp+0x24],0x0
0x4f99: mov qword ptr [rsp+0x2c],0x0
0x4fa2: mov dword ptr [rsp+0x34],0x0
0x4faa: call 0x47d0
0x4faf: mov rcx,qword ptr [rsp+0x38]
0x4fb4: xor rcx,qword ptr fs:0x28
0x4fbd: jne 0x4fc9
0x4fbf: add rsp,0x48
0x4fc3: ret 
0x4fc4: call 0x1320
0x4fc9: call 0x1400
0x4fce: nop 
0x4fd0: sub rsp,0x48
0x4fd4: mov r9,rcx
0x4fd7: mov rcx,qword ptr [rip+0x206232]
0x4fde: movdqa xmm0,[rip+0x2061fa]
0x4fe6: mov rax,qword ptr fs:0x28
0x4fef: mov qword ptr [rsp+0x38],rax
0x4ff4: xor eax,eax
0x4ff6: movaps [rsp],xmm0
0x4ffa: test rsi,rsi
0x4ffd: mov qword ptr [rsp+0x30],rcx
0x5002: mov dword ptr [rsp],0xa
0x5009: movdqa xmm0,[rip+0x2061df]
0x5011: movaps [rsp+0x10],xmm0
0x5016: movdqa xmm0,[rip+0x2061e2]
0x501e: movaps [rsp+0x20],xmm0
0x5023: je 0x5057
0x5025: test rdx,rdx
0x5028: je 0x5057
0x502a: mov qword ptr [rsp+0x28],rsi
0x502f: mov qword ptr [rsp+0x30],rdx
0x5034: mov rcx,rsp
0x5037: mov rdx,r8
0x503a: mov rsi,r9
0x503d: call 0x47d0
0x5042: mov rdi,qword ptr [rsp+0x38]
0x5047: xor rdi,qword ptr fs:0x28
0x5050: jne 0x505c
0x5052: add rsp,0x48
0x5056: ret 
0x5057: call 0x1320
0x505c: call 0x1400
0x5061: nop dword ptr [rax+rax]
0x5066: nop word ptr cs:[rax+rax]
0x5070: mov r8,-0x1
0x5077: jmp 0x4fd0
0x5080: mov rcx,rdx
0x5083: mov r8,-0x1
0x508a: mov rdx,rsi
0x508d: mov rsi,rdi
0x5090: xor edi,edi
0x5092: jmp 0x4fd0
0x50a0: mov r8,rcx
0x50a3: mov rcx,rdx
0x50a6: mov rdx,rsi
0x50a9: mov rsi,rdi
0x50ac: xor edi,edi
0x50ae: jmp 0x4fd0
0x50c0: lea rcx,[rip+0x205f59]
0x50c7: jmp 0x47d0
0x50d0: lea rcx,[rip+0x205f49]
0x50d7: mov rdx,rsi
0x50da: mov rsi,rdi
0x50dd: xor edi,edi
0x50df: jmp 0x47d0
0x5187: movzx eax,byte ptr [rdi]
0x519d: movzx edx,r8b
0x5244: cmp r8b,0x30
0x5248: je 0x5348
0x524e: sub r8d,0x30
0x5252: xor eax,eax
0x5254: cmp r8d,0x9
0x5258: setbe al
0x525b: ret 
0x5348: add rdi,0x1
0x534c: movzx r8d,byte ptr [rdi]
0x5350: jmp 0x5244
0x540c: lea r8,[rip+0x3980]
0x5413: mov edi,r12d
0x5416: mov r9,rax
0x5419: mov ecx,r14d
0x541c: mov rdx,rbp
0x541f: mov esi,r13d
0x5422: xor eax,eax
0x5424: call 0x1340
0x5429: mov rdi,rbx
0x542c: pop rbx
0x542d: pop rbp
0x542e: pop r12
0x5430: pop r13
0x5432: pop r14
0x5434: jmp 0x1310
0x5457: mov rdi,rbx
0x545a: pop rbx
0x545b: pop rbp
0x545c: pop r12
0x545e: pop r13
0x5460: pop r14
0x5462: jmp 0x1310
0x5490: call 0x1320
0x5495: nop 
0x5496: nop word ptr cs:[rax+rax]
0x54ca: nop word ptr [rax+rax]
0x54d0: mov rax,rdi
0x54d3: mul rsi
0x54d6: mov rdi,rax
0x54d9: seto al
0x54dc: test rdi,rdi
0x54df: js 0x54eb
0x54e1: movzx eax,al
0x54e4: test rax,rax
0x54e7: jne 0x54eb
0x54e9: jmp 0x54b0
0x54eb: sub rsp,0x8
0x54ef: call 0x5700
0x54f4: nop 
0x54f6: nop word ptr cs:[rax+rax]
0x5500: jmp 0x54b0
0x5546: nop word ptr cs:[rax+rax]
0x5550: mov rax,rsi
0x5553: mul rdx
0x5556: mov rsi,rax
0x5559: seto al
0x555c: test rsi,rsi
0x555f: js 0x556b
0x5561: movzx eax,al
0x5564: test rax,rax
0x5567: jne 0x556b
0x5569: jmp 0x5510
0x556b: sub rsp,0x8
0x556f: call 0x5700
0x5574: nop 
0x5576: nop word ptr cs:[rax+rax]
0x5580: test rdi,rdi
0x5583: mov r9,rdx
0x5586: mov rcx,qword ptr [rsi]
0x5589: je 0x55c0
0x558b: xor edx,edx
0x558d: movabsq rax,0x5555555555555554
0x5597: div r9
0x559a: cmp rax,rcx
0x559d: jbe 0x55db
0x559f: mov rax,rcx
0x55a2: shr rax, 1
0x55a5: lea rcx,[rax+rcx+0x1]
0x55aa: mov qword ptr [rsi],rcx
0x55ad: imul rcx,r9
0x55b1: mov rsi,rcx
0x55b4: jmp 0x5510
0x55c0: test rcx,rcx
0x55c3: je 0x55e8
0x55c5: mov rax,rcx
0x55c8: mul r9
0x55cb: seto dl
0x55ce: test rax,rax
0x55d1: movzx edx,dl
0x55d4: js 0x55db
0x55d6: test rdx,rdx
0x55d9: je 0x55aa
0x55db: sub rsp,0x8
0x55df: call 0x5700
0x55e4: nop dword ptr [rax]
0x55e8: xor edx,edx
0x55ea: mov eax,0x80
0x55ef: xor r8d,r8d
0x55f2: div r9
0x55f5: test rax,rax
0x55f8: sete r8b
0x55fc: lea rcx,[r8+rax]
0x5600: jmp 0x55c5
0x5610: test rdi,rdi
0x5613: mov rax,qword ptr [rsi]
0x5616: je 0x5640
0x5618: movabsq rdx,0x5555555555555553
0x5622: cmp rax,rdx
0x5625: ja 0x5651
0x5627: mov rdx,rax
0x562a: shr rdx, 1
0x562d: lea rax,[rdx+rax+0x1]
0x5632: mov qword ptr [rsi],rax
0x5635: mov rsi,rax
0x5638: jmp 0x5510
0x5640: test rax,rax
0x5643: mov edx,0x80
0x5648: cmove rax,rdx
0x564c: test rax,rax
0x564f: jns 0x5632
0x5651: sub rsp,0x8
0x5655: call 0x5700
0x565a: nop word ptr [rax+rax]
0x5660: push rbx
0x5661: mov rbx,rdi
0x5664: call 0x54b0
0x5669: mov rdx,rbx
0x566c: xor esi,esi
0x566e: mov rdi,rax
0x5671: pop rbx
0x5672: jmp 0x1440
0x5680: mov rax,rdi
0x5683: sub rsp,0x8
0x5687: mul rsi
0x568a: seto dl
0x568d: test rax,rax
0x5690: js 0x56a9
0x5692: movzx edx,dl
0x5695: test rdx,rdx
0x5698: jne 0x56a9
0x569a: call 0x1480
0x569f: test rax,rax
0x56a2: je 0x56a9
0x56a4: add rsp,0x8
0x56a8: ret 
0x56a9: call 0x5700
0x56ae: nop 
0x56b0: push rbp
0x56b1: push rbx
0x56b2: mov rbp,rdi
0x56b5: mov rdi,rsi
0x56b8: mov rbx,rsi
0x56bb: sub rsp,0x8
0x56bf: call 0x54b0
0x56c4: add rsp,0x8
0x56c8: mov rdx,rbx
0x56cb: mov rsi,rbp
0x56ce: pop rbx
0x56cf: pop rbp
0x56d0: mov rdi,rax
0x56d3: jmp 0x14b0
0x56e0: push rbx
0x56e1: mov rbx,rdi
0x56e4: call 0x13e0
0x56e9: mov rdi,rbx
0x56ec: lea rsi,[rax+0x1]
0x56f0: pop rbx
0x56f1: jmp 0x56b0
0x5730: call 0x1320
0x5735: nop word ptr cs:[rax+rax]
0x573f: nop 
0x5855: call 0x1400
0x585a: nop word ptr [rax+rax]
0x58f6: test eax,eax
0x58f8: js 0x5918
0x58fa: mov rax,qword ptr [rsp]
0x5918: call 0x1330
0x591d: cmp dword ptr [rax],0xc
0x5920: je 0x592f
0x5922: xor eax,eax
0x5924: jmp 0x58fe
0x592a: call 0x1400
0x592f: call 0x5700
0x5934: nop word ptr cs:[rax+rax]
0x593e: nop 
0x5940: push r13
0x5942: push r12
0x5944: mov r13,rsi
0x5947: push rbp
0x5948: push rbx
0x5949: mov rbx,rdi
0x594c: mov r12,rdx
0x594f: sub rsp,0x18
0x5953: mov rax,qword ptr fs:0x28
0x595c: mov qword ptr [rsp+0x8],rax
0x5961: xor eax,eax
0x5963: lea rax,[rsp+0x4]
0x5968: test rdi,rdi
0x596b: cmove rbx,rax
0x596f: mov rdi,rbx
0x5972: call 0x1410
0x5977: cmp rax,-0x3
0x597b: mov rbp,rax
0x597e: jbe 0x59a0
0x5980: test r12,r12
0x5983: je 0x59a0
0x5985: xor edi,edi
0x5987: call 0x5ad0
0x598c: test al,al
0x598e: jne 0x59a0
0x5990: movzx eax,byte ptr [r13]
0x5995: mov ebp,0x1
0x599a: mov dword ptr [rbx],eax
0x599c: nop dword ptr [rax]
0x59a0: mov rdx,qword ptr [rsp+0x8]
0x59a5: xor rdx,qword ptr fs:0x28
0x59ae: mov rax,rbp
0x59b1: jne 0x59be
0x59b3: add rsp,0x18
0x59b7: pop rbx
0x59b8: pop rbp
0x59b9: pop r12
0x59bb: pop r13
0x59bd: ret 
0x59be: call 0x1400
0x59c3: nop word ptr cs:[rax+rax]
0x59cd: nop dword ptr [rax]
0x59fb: test rax,rax
0x59fe: je 0x5a42
0x5a00: mov rdx,qword ptr [rsp]
0x5a04: cmp rdx,0x7fffffff
0x5a0b: ja 0x5a28
0x5a0d: mov qword ptr [rbx],rax
0x5a10: mov eax,edx
0x5a12: mov rbx,qword ptr [rsp+0x8]
0x5a17: xor rbx,qword ptr fs:0x28
0x5a20: jne 0x5a49
0x5a22: add rsp,0x10
0x5a26: pop rbx
0x5a27: ret 
0x5a28: mov rdi,rax
0x5a2b: call 0x1310
0x5a30: call 0x1330
0x5a35: mov dword ptr [rax],0x4b
0x5a3b: mov eax,0xffffffff
0x5a40: jmp 0x5a12
0x5a42: mov eax,0xffffffff
0x5a47: jmp 0x5a12
0x5a49: call 0x1400
0x5a4e: nop 
0x5a50: push r12
0x5a52: push rbp
0x5a53: mov rbp,rdi
0x5a56: push rbx
0x5a57: call 0x1370
0x5a5c: mov ebx,dword ptr [rbp]
0x5a5f: mov rdi,rbp
0x5a62: mov r12,rax
0x5a65: call 0x5b70
0x5a6a: and ebx,0x20
0x5a6d: test ebx,ebx
0x5a6f: jne 0x5a88
0x5a71: test eax,eax
0x5a73: je 0x5a7f
0x5a75: test r12,r12
0x5a78: mov eax,0xffffffff
0x5a7d: je 0x5ab8
0x5a7f: pop rbx
0x5a80: pop rbp
0x5a81: pop r12
0x5a83: ret 
0x5a88: test eax,eax
0x5a8a: jne 0x5aa8
0x5a8c: call 0x1330
0x5a91: mov dword ptr [rax],0x0
0x5a97: mov eax,0xffffffff
0x5a9c: pop rbx
0x5a9d: pop rbp
0x5a9e: pop r12
0x5aa0: ret 
0x5aa8: pop rbx
0x5aa9: mov eax,0xffffffff
0x5aae: pop rbp
0x5aaf: pop r12
0x5ab1: ret 
0x5ab8: call 0x1330
0x5abd: cmp dword ptr [rax],0x9
0x5ac0: pop rbx
0x5ac1: pop rbp
0x5ac2: pop r12
0x5ac4: setne al
0x5ac7: movzx eax,al
0x5aca: neg eax
0x5acc: ret 
0x5ad0: sub rsp,0x8
0x5ad4: xor esi,esi
0x5ad6: call 0x1540
0x5adb: mov rdx,rax
0x5ade: mov eax,0x1
0x5ae3: test rdx,rdx
0x5ae6: je 0x5b05
0x5ae8: lea rdi,[rip+0x37ea]
0x5aef: mov ecx,0x2
0x5af4: mov rsi,rdx
0x5af7: rep cmpsb [rsi],es:[rdi]
0x5af9: seta cl
0x5afc: sbb cl,0x0
0x5aff: xor eax,eax
0x5b01: test cl,cl
0x5b03: jne 0x5b10
0x5b05: add rsp,0x8
0x5b09: ret 
0x5b10: lea rdi,[rip+0x37c4]
0x5b17: mov ecx,0x6
0x5b1c: mov rsi,rdx
0x5b1f: rep cmpsb [rsi],es:[rdi]
0x5b21: seta al
0x5b24: sbb al,0x0
0x5b26: test al,al
0x5b28: setne al
0x5b2b: add rsp,0x8
0x5b2f: ret 
0x5b30: sub rsp,0x8
0x5b34: mov edi,0xe
0x5b39: call 0x1500
0x5b3e: test rax,rax
0x5b41: je 0x5b60
0x5b43: cmp byte ptr [rax],0x0
0x5b46: lea rdx,[rip+0x3794]
0x5b4d: cmove rax,rdx
0x5b51: add rsp,0x8
0x5b55: ret 
0x5b60: lea rax,[rip+0x377a]
0x5b67: add rsp,0x8
0x5b6b: ret 
0x5b70: push r12
0x5b72: push rbp
0x5b73: push rbx
0x5b74: mov rbx,rdi
0x5b77: call 0x14c0
0x5b7c: test eax,eax
0x5b7e: mov rdi,rbx
0x5b81: js 0x5bd7
0x5b83: call 0x1520
0x5b88: test eax,eax
0x5b8a: jne 0x5bb8
0x5b8c: mov rdi,rbx
0x5b8f: call 0x5bf0
0x5b94: test eax,eax
0x5b96: je 0x5bd4
0x5b98: call 0x1330
0x5b9d: mov r12d,dword ptr [rax]
0x5ba0: mov rdi,rbx
0x5ba3: mov rbp,rax
0x5ba6: call 0x13a0
0x5bab: test r12d,r12d
0x5bae: jne 0x5be0
0x5bb0: pop rbx
0x5bb1: pop rbp
0x5bb2: pop r12
0x5bb4: ret 
0x5bb8: mov rdi,rbx
0x5bbb: call 0x14c0
0x5bc0: xor esi,esi
0x5bc2: mov edx,0x1
0x5bc7: mov edi,eax
0x5bc9: call 0x1430
0x5bce: cmp rax,-0x1
0x5bd2: jne 0x5b8c
0x5bd4: mov rdi,rbx
0x5bd7: pop rbx
0x5bd8: pop rbp
0x5bd9: pop r12
0x5bdb: jmp 0x13a0
0x5be0: mov dword ptr [rbp],r12d
0x5be4: mov eax,0xffffffff
0x5be9: jmp 0x5bb0
0x5bf0: test rdi,rdi
0x5bf3: push rbx
0x5bf4: mov rbx,rdi
0x5bf7: je 0x5c0a
0x5bf9: call 0x1520
0x5bfe: test eax,eax
0x5c00: je 0x5c0a
0x5c02: test dword ptr [rbx],0x100
0x5c08: jne 0x5c18
0x5c0a: mov rdi,rbx
0x5c0d: pop rbx
0x5c0e: jmp 0x14f0
0x5c18: mov rdi,rbx
0x5c1b: mov edx,0x1
0x5c20: xor esi,esi
0x5c22: call 0x5c30
0x5c27: mov rdi,rbx
0x5c2a: pop rbx
0x5c2b: jmp 0x14f0
0x5c30: mov rax,qword ptr [rdi+0x8]
0x5c34: cmp qword ptr [rdi+0x10],rax
0x5c38: je 0x5c40
0x5c3a: jmp 0x1570
0x5c40: mov rax,qword ptr [rdi+0x20]
0x5c44: cmp qword ptr [rdi+0x28],rax
0x5c48: jne 0x5c3a
0x5c4a: cmp qword ptr [rdi+0x48],0x0
0x5c4f: jne 0x5c3a
0x5c51: push r12
0x5c53: push rbp
0x5c54: mov r12d,edx
0x5c57: push rbx
0x5c58: mov rbp,rsi
0x5c5b: mov rbx,rdi
0x5c5e: call 0x14c0
0x5c63: mov edx,r12d
0x5c66: mov rsi,rbp
0x5c69: mov edi,eax
0x5c6b: call 0x1430
0x5c70: cmp rax,-0x1
0x5c74: je 0x5c82
0x5c76: and dword ptr [rbx],-0x11
0x5c79: mov qword ptr [rbx+0x90],rax
0x5c80: xor eax,eax
0x5c82: pop rbx
0x5c83: pop rbp
0x5c84: pop r12
0x5c86: ret 
0x5f57: movzx edx,byte ptr [r13+0x48]
0x5f5c: mov rax,qword ptr [r13+0x50]
0x5f60: cmp dl,0x25
0x5f63: je 0x66f8
0x5f69: cmp rax,-0x1
0x5f6d: je 0x6bb6
0x5f73: mov r8,qword ptr [rbp-0x3a8]
0x5f7a: shl rax,0x5
0x5f7e: add rax,r8
0x5f81: cmp dl,0x6e
0x5f84: mov edi,dword ptr [rax]
0x5f86: mov dword ptr [rbp-0x3d0],edi
0x5f8c: je 0x6770
0x5f92: mov eax,dword ptr [r13+0x10]
0x5f96: mov rdi,qword ptr [rbp-0x3d8]
0x5f9d: test al,0x1
0x5f9f: mov byte ptr [rdi],0x25
0x5fa2: lea rbx,[rdi+0x1]
0x5fa6: je 0x5fb7
0x5fa8: mov rdi,qword ptr [rbp-0x3d8]
0x5faf: lea rbx,[rdi+0x2]
0x5fb3: mov byte ptr [rdi+0x1],0x27
0x5fb7: test al,0x2
0x5fb9: je 0x5fc2
0x5fbb: mov byte ptr [rbx],0x2d
0x5fbe: add rbx,0x1
0x5fc2: test al,0x4
0x5fc4: je 0x5fcd
0x5fc6: mov byte ptr [rbx],0x2b
0x5fc9: add rbx,0x1
0x5fcd: test al,0x8
0x5fcf: je 0x5fd8
0x5fd1: mov byte ptr [rbx],0x20
0x5fd4: add rbx,0x1
0x5fd8: test al,0x10
0x5fda: je 0x5fe3
0x5fdc: mov byte ptr [rbx],0x23
0x5fdf: add rbx,0x1
0x5fe3: test al,0x40
0x5fe5: je 0x5fee
0x5fe7: mov byte ptr [rbx],0x49
0x5fea: add rbx,0x1
0x5fee: test al,0x20
0x5ff0: je 0x5ff9
0x5ff2: mov byte ptr [rbx],0x30
0x5ff5: add rbx,0x1
0x5ff9: mov rsi,qword ptr [r13+0x18]
0x5ffd: mov rdx,qword ptr [r13+0x20]
0x6001: cmp rsi,rdx
0x6004: je 0x6036
0x6006: mov rcx,rdx
0x6009: mov rdi,rbx
0x600c: mov qword ptr [rbp-0x3e0],r8
0x6013: sub rcx,rsi
0x6016: mov rdx,rcx
0x6019: mov qword ptr [rbp-0x3c8],rcx
0x6020: call 0x14b0
0x6025: mov rcx,qword ptr [rbp-0x3c8]
0x602c: mov r8,qword ptr [rbp-0x3e0]
0x6033: add rbx,rcx
0x6036: mov rsi,qword ptr [r13+0x30]
0x603a: mov rdx,qword ptr [r13+0x38]
0x603e: cmp rsi,rdx
0x6041: je 0x6073
0x6043: mov rcx,rdx
0x6046: mov rdi,rbx
0x6049: mov qword ptr [rbp-0x3e0],r8
0x6050: sub rcx,rsi
0x6053: mov rdx,rcx
0x6056: mov qword ptr [rbp-0x3c8],rcx
0x605d: call 0x14b0
0x6062: mov rcx,qword ptr [rbp-0x3c8]
0x6069: mov r8,qword ptr [rbp-0x3e0]
0x6070: add rbx,rcx
0x6073: mov edi,dword ptr [rbp-0x3d0]
0x6079: cmp edi,0x10
0x607c: ja 0x60ab
0x607e: mov eax,0x1
0x6083: mov ecx,edi
0x6085: shl rax,cl
0x6088: test eax,0x14180
0x608d: jne 0x60a4
0x608f: test ah,0x10
0x6092: jne 0x69f0
0x6098: test ah,0x6
0x609b: je 0x60ab
0x609d: mov byte ptr [rbx],0x6c
0x60a0: add rbx,0x1
0x60a4: mov byte ptr [rbx],0x6c
0x60a7: add rbx,0x1
0x60ab: movzx eax,byte ptr [r13+0x48]
0x60b0: mov byte ptr [rbx+0x1],0x0
0x60b4: mov byte ptr [rbx],al
0x60b6: mov rax,qword ptr [r13+0x28]
0x60ba: cmp rax,-0x1
0x60be: je 0x67f0
0x60c4: shl rax,0x5
0x60c8: add rax,r8
0x60cb: cmp dword ptr [rax],0x5
0x60ce: jne 0x6bb6
0x60d4: mov eax,dword ptr [rax+0x10]
0x60d7: mov dword ptr [rbp-0x3e0],0x1
0x60e1: mov dword ptr [rbp-0x3b8],eax
0x60e7: mov rax,qword ptr [r13+0x40]
0x60eb: cmp rax,-0x1
0x60ef: je 0x611c
0x60f1: shl rax,0x5
0x60f5: add r8,rax
0x60f8: cmp dword ptr [r8],0x5
0x60fc: jne 0x6bb6
0x6102: mov eax,dword ptr [rbp-0x3e0]
0x6108: mov edx,dword ptr [r8+0x10]
0x610c: mov dword ptr [rbp+rax*4-0x3b8],edx
0x6113: lea eax,[rax+0x1]
0x6116: mov dword ptr [rbp-0x3e0],eax
0x611c: mov rax,r14
0x611f: xor edx,edx
0x6121: add rax,0x2
0x6125: jb 0x6d8c
0x612b: cmp r12,rax
0x612e: jae 0x617b
0x6130: test r12,r12
0x6133: jne 0x6958
0x6139: cmp rax,0xc
0x613d: ja 0x6970
0x6143: mov r12d,0xc
0x6149: cmp r15,qword ptr [rbp-0x3e8]
0x6150: sete dl
0x6153: test r15,r15
0x6156: je 0x69a0
0x615c: test dl,dl
0x615e: jne 0x69a0
0x6164: mov rsi,r12
0x6167: mov rdi,r15
0x616a: call 0x1530
0x616f: test rax,rax
0x6172: je 0x5df5
0x6178: mov r15,rax
0x617b: mov byte ptr [r15+r14],0x0
0x6180: call 0x1330
0x6185: mov qword ptr [rbp-0x3c8],rax
0x618c: mov eax,dword ptr [rax]
0x618e: mov qword ptr [rbp-0x3f8],rbx
0x6195: mov dword ptr [rbp-0x424],eax
0x619b: nop dword ptr [rax+rax]
0x61a0: mov rax,qword ptr [rbp-0x3c8]
0x61a7: mov rbx,r12
0x61aa: mov r10d,0x7fffffff
0x61b0: sub rbx,r14
0x61b3: mov dword ptr [rbp-0x3bc],0xffffffff
0x61bd: cmp rbx,0x7fffffff
0x61c4: mov dword ptr [rax],0x0
0x61ca: mov eax,dword ptr [rbp-0x3d0]
0x61d0: cmovbe r10,rbx
0x61d4: cmp eax,0x11
0x61d7: ja 0x6bb6
0x61dd: lea rsi,[rip+0x3104]
0x61e4: movsxd rax,dword ptr [rsi+rax*4]
0x61e8: add rax,rsi
0x61eb: jmp rax
0x66f8: cmp rax,-0x1
0x66fc: jne 0x6bb6
0x6702: mov rax,r14
0x6705: add rax,0x1
0x6709: mov rbx,rax
0x670c: jae 0x6798
0x6712: cmp r12,-0x1
0x6716: jne 0x5df5
0x671c: mov rbx,r12
0x671f: mov byte ptr [r15+r14],0x25
0x6724: mov r8,qword ptr [r13+0x8]
0x6728: add r13,0x58
0x672c: mov rcx,qword ptr [r13]
0x6730: add qword ptr [rbp-0x400],0x1
0x6738: cmp rcx,r8
0x673b: jne 0x5dd9
0x6770: mov edx,edi
0x6772: sub edx,0x12
0x6775: cmp edx,0x4
0x6778: ja 0x6bb6
0x677e: lea rdi,[rip+0x2bab]
0x6785: mov rax,qword ptr [rax+0x10]
0x6789: movsxd rdx,dword ptr [rdi+rdx*4]
0x678d: add rdx,rdi
0x6790: jmp rdx
0x6798: cmp r12,rax
0x679b: jae 0x671f
0x679d: test r12,r12
0x67a0: jne 0x6b70
0x67a6: cmp rax,0xc
0x67aa: ja 0x6b82
0x67b0: mov r12d,0xc
0x67b6: cmp r15,qword ptr [rbp-0x3e8]
0x67bd: sete dl
0x67c0: test r15,r15
0x67c3: je 0x6a30
0x67c9: test dl,dl
0x67cb: jne 0x6a30
0x67d1: mov rsi,r12
0x67d4: mov rdi,r15
0x67d7: call 0x1530
0x67dc: test rax,rax
0x67df: je 0x68db
0x67e5: mov r15,rax
0x67e8: jmp 0x671f
0x67f0: mov dword ptr [rbp-0x3e0],0x0
0x67fa: jmp 0x60e7
0x6958: js 0x5df5
0x695e: add r12,r12
0x6961: cmp r12,rax
0x6964: jae 0x6149
0x696a: nop word ptr [rax+rax]
0x6970: test rdx,rdx
0x6973: jne 0x5df5
0x6979: cmp rax,-0x1
0x697d: je 0x5df5
0x6983: cmp r15,qword ptr [rbp-0x3e8]
0x698a: mov r12,rax
0x698d: sete dl
0x6990: test r15,r15
0x6993: jne 0x615c
0x6999: nop dword ptr [rax]
0x69a0: mov rdi,r12
0x69a3: mov byte ptr [rbp-0x3c8],dl
0x69a9: call 0x14e0
0x69ae: test rax,rax
0x69b1: mov rcx,rax
0x69b4: movzx edx,byte ptr [rbp-0x3c8]
0x69bb: je 0x5df5
0x69c1: test r14,r14
0x69c4: je 0x6b60
0x69ca: test dl,dl
0x69cc: je 0x6b60
0x69d2: mov rsi,r15
0x69d5: mov rdx,r14
0x69d8: mov rdi,rax
0x69db: call 0x14b0
0x69e0: mov r15,rax
0x69e3: jmp 0x617b
0x69f0: mov byte ptr [rbx],0x4c
0x69f3: add rbx,0x1
0x69f7: jmp 0x60ab
0x6a30: mov rdi,r12
0x6a33: mov byte ptr [rbp-0x3c8],dl
0x6a39: call 0x14e0
0x6a3e: test rax,rax
0x6a41: mov rcx,rax
0x6a44: movzx edx,byte ptr [rbp-0x3c8]
0x6a4b: je 0x5df5
0x6a51: test r14,r14
0x6a54: je 0x6b94
0x6a5a: test dl,dl
0x6a5c: je 0x6b94
0x6a62: mov rsi,r15
0x6a65: mov rdx,r14
0x6a68: mov rdi,rax
0x6a6b: call 0x14b0
0x6a70: mov r15,rax
0x6a73: jmp 0x671f
0x6b60: mov r15,rcx
0x6b63: jmp 0x617b
0x6b70: js 0x5df5
0x6b76: add r12,r12
0x6b79: cmp r12,rax
0x6b7c: jae 0x67b6
0x6b82: cmp rax,-0x1
0x6b86: je 0x5df5
0x6b8c: mov r12,rax
0x6b8f: jmp 0x67b6
0x6b94: mov r15,rcx
0x6b97: jmp 0x671f
0x6bb6: call 0x1320
0x6bbb: nop dword ptr [rax+rax]
0x6d8c: cmp r12,-0x1
0x6d90: mov edx,0x1
0x6d95: je 0x617b
0x6d9b: test r12,r12
0x6d9e: je 0x5df5
0x6da4: jns 0x6970
0x6daa: jmp 0x5df5
0x6dba: lea r8,[rip+0x258f]
0x6dc1: lea r10,[rip+0x25e8]
0x6dc8: lea r9,[rip+0x2575]
0x6dcf: xor ecx,ecx
0x6dd1: nop dword ptr [rax]
0x6dd8: cmp dword ptr [rax],0x16
0x6ddb: ja 0x6e20
0x6ddd: mov edx,dword ptr [rax]
0x6ddf: movsxd rdx,dword ptr [r8+rdx*4]
0x6de3: add rdx,r8
0x6de6: jmp rdx
0x6e20: mov eax,0xffffffff
0x6e25: ret 
0x73be: mov rdi,rcx
0x73c1: call 0x1530
0x73c6: mov rdx,qword ptr [r15+0x8]
0x73ca: mov r8,qword ptr [rsp+0x30]
0x73cf: mov rcx,rax
0x73d2: mov r10,qword ptr [rsp+0x38]
0x73d7: mov r9,qword ptr [rsp+0x40]
0x7a56: mov rdi,rcx
0x7a59: call 0x1530
0x7a5e: mov rdx,qword ptr [r15+0x8]
0x7a62: mov r11,qword ptr [rsp+0x30]
0x7a67: mov rcx,rax
0x7a6a: mov r8,qword ptr [rsp+0x38]
0x7a6f: mov r10,qword ptr [rsp+0x40]
0x7a74: mov r9,qword ptr [rsp+0x48]
0x7aa4: mov rdi,rcx
0x7aa7: call 0x1310
0x7ca0: push r15
0x7ca2: push r14
0x7ca4: mov r15,rdx
0x7ca7: push r13
0x7ca9: push r12
0x7cab: lea r12,[rip+0x202f1e]
0x7cb2: push rbp
0x7cb3: lea rbp,[rip+0x202f1e]
0x7cba: push rbx
0x7cbb: mov r13d,edi
0x7cbe: mov r14,rsi
0x7cc1: sub rbp,r12
0x7cc4: sub rsp,0x8
0x7cc8: sar rbp,0x3
0x7ccc: call 0x12d8
0x7cd1: test rbp,rbp
0x7cd4: je 0x7cf6
0x7cd6: xor ebx,ebx
0x7cd8: nop dword ptr [rax+rax]
0x7ce0: mov rdx,r15
0x7ce3: mov rsi,r14
0x7ce6: mov edi,r13d
0x7ce9: call qword ptr [r12+rbx*8]
0x7ced: add rbx,0x1
0x7cf1: cmp rbp,rbx
0x7cf4: jne 0x7ce0
0x7cf6: add rsp,0x8
0x7cfa: pop rbx
0x7cfb: pop rbp
0x7cfc: pop r12
0x7cfe: pop r13
0x7d00: pop r14
0x7d02: pop r15
0x7d04: ret 
0x7d10: rep ret 
