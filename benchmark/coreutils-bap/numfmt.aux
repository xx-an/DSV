0x1970: sub rsp,0x8
0x1974: mov rax,qword ptr [rip+0x20c665]
0x197b: test rax,rax
0x197e: je 0x1982
0x1980: call rax
0x1982: add rsp,0x8
0x1986: ret 
0x1996: jmp qword ptr [rip+0x20c45c]
0x19f0: jmp qword ptr [rip+0x20c432]
0x1a00: jmp qword ptr [rip+0x20c42a]
0x1a10: jmp qword ptr [rip+0x20c422]
0x1a30: jmp qword ptr [rip+0x20c412]
0x1a40: jmp qword ptr [rip+0x20c40a]
0x1a60: jmp qword ptr [rip+0x20c3fa]
0x1ab0: jmp qword ptr [rip+0x20c3d2]
0x1ad0: jmp qword ptr [rip+0x20c3c2]
0x1b10: jmp qword ptr [rip+0x20c3a2]
0x1b20: jmp qword ptr [rip+0x20c39a]
0x1b90: jmp qword ptr [rip+0x20c362]
0x1bd0: jmp qword ptr [rip+0x20c342]
0x1be0: jmp qword ptr [rip+0x20c33a]
0x1c00: jmp qword ptr [rip+0x20c32a]
0x1c20: jmp qword ptr [rip+0x20c31a]
0x1c60: jmp qword ptr [rip+0x20c2fa]
0x1c90: jmp qword ptr [rip+0x20c2e2]
0x1cb0: jmp qword ptr [rip+0x20c2d2]
0x1d00: jmp qword ptr [rip+0x20c2aa]
0x1d10: jmp qword ptr [rip+0x20c2a2]
0x1d40: jmp qword ptr [rip+0x20c2aa]
0x1f85: nop dword ptr [rax]
0x1fbc: nop dword ptr [rax]
0x21f4: lea rsi,[rip+0x74f4]
0x21fb: mov rbx,rax
0x21fe: mov edx,0x5
0x2203: xor edi,edi
0x2205: call 0x1a80
0x220a: mov rcx,rbx
0x220d: mov rdx,rax
0x2210: xor esi,esi
0x2212: mov edi,0x1
0x2217: xor eax,eax
0x2219: call 0x1c80
0x2362: mov rsi,qword ptr [rip+0x20bdd7]
0x2369: mov rcx,rax
0x236c: test rsi,rsi
0x236f: je 0x2937
0x2375: mov edi,0x1
0x237a: mov qword ptr [rsp+0x10],rcx
0x237f: lea r14,[rip+0x72f3]
0x2386: call 0x7d30
0x238b: cmp dword ptr [rip+0x20bc86],0x0
0x2392: mov r15,rax
0x2395: lea rax,[rip+0x72d8]
0x239c: mov r9,qword ptr [rip+0x20bdb5]
0x23a3: lea r13,[rip+0x72d9]
0x23aa: mov rsi,r12
0x23ad: cmove r14,rax
0x23b1: cmp dword ptr [rip+0x20bdb8],0x0
0x23b8: lea rax,[rip+0x72c0]
0x23bf: mov qword ptr [rsp+0x8],r9
0x23c4: cmovne r13,rax
0x23c8: xor edi,edi
0x23ca: call 0x7d30
0x23cf: sub rsp,0x8
0x23d3: mov rdi,qword ptr [rip+0x20bd26]
0x23da: lea rdx,[rip+0x8b17]
0x23e1: mov rcx,qword ptr [rsp+0x18]
0x23e6: mov r8,r13
0x23e9: mov esi,0x1
0x23ee: push rcx
0x23ef: push r15
0x23f1: mov rcx,rax
0x23f4: push r14
0x23f6: mov r9,qword ptr [rsp+0x28]
0x23fb: xor eax,eax
0x23fd: call 0x1ce0
0x2402: add rsp,0x20
0x2649: jmp 0x2413
0x2786: jmp qword ptr [rip+0x2fb850f]
0x280f: jmp 0x27d2
0x2832: jmp 0x2257
0x2858: mov eax,dword ptr [rip+0x20b87a]
0x285e: cmp ebp,eax
0x2860: jle 0x2589
0x2866: jmp 0x25c5
0x28a5: mov r9,qword ptr [rsp+0x10]
0x2937: lea rsi,[rip+0x6c38]
0x293e: jmp 0x2375
0x29a1: lea rsi,[rip+0x6d8b]
0x29a8: mov rbx,rax
0x29ab: mov edx,0x5
0x29b0: xor edi,edi
0x29b2: call 0x1a80
0x29b7: mov rcx,rbx
0x29ba: mov rdx,rax
0x29bd: xor esi,esi
0x29bf: mov edi,0x1
0x29c4: xor eax,eax
0x29c6: call 0x1c80
0x29d3: lea rsi,[rip+0x8496]
0x29da: mov rbx,rax
0x29dd: mov edx,0x5
0x29e2: xor edi,edi
0x29e4: call 0x1a80
0x29e9: mov rcx,rbx
0x29ec: mov rdx,rax
0x29ef: xor esi,esi
0x29f1: mov edi,0x1
0x29f6: xor eax,eax
0x29f8: call 0x1c80
0x2a05: lea rsi,[rip+0x6d47]
0x2a0c: mov rbx,rax
0x2a0f: mov edx,0x5
0x2a14: xor edi,edi
0x2a16: call 0x1a80
0x2a1b: mov rcx,rbx
0x2a1e: mov rdx,rax
0x2a21: xor esi,esi
0x2a23: mov edi,0x1
0x2a28: xor eax,eax
0x2a2a: call 0x1c80
0x2a3b: lea rsi,[rip+0x6c76]
0x2a42: mov rbx,rax
0x2a45: mov edx,0x5
0x2a4a: xor edi,edi
0x2a4c: call 0x1a80
0x2a51: mov rcx,rbx
0x2a54: mov rdx,rax
0x2a57: xor esi,esi
0x2a59: mov edi,0x1
0x2a5e: xor eax,eax
0x2a60: call 0x1c80
0x2a91: lea rsi,[rip+0x8438]
0x2a98: mov rbx,rax
0x2a9b: mov edx,0x5
0x2aa0: xor edi,edi
0x2aa2: call 0x1a80
0x2aa7: mov rcx,rbx
0x2aaa: mov rdx,rax
0x2aad: xor esi,esi
0x2aaf: mov edi,0x1
0x2ab4: xor eax,eax
0x2ab6: call 0x1c80
0x2ac3: lea rsi,[rip+0x83c6]
0x2aca: mov rbx,rax
0x2acd: mov edx,0x5
0x2ad2: xor edi,edi
0x2ad4: call 0x1a80
0x2ad9: mov rcx,rbx
0x2adc: mov rdx,rax
0x2adf: xor esi,esi
0x2ae1: mov edi,0x1
0x2ae6: xor eax,eax
0x2ae8: call 0x1c80
0x2aed: call 0x1ab0
0x2b3a: mov rdi,r12
0x2b3d: call 0x7d50
0x2b42: lea rsi,[rip+0x82d7]
0x2b49: mov rbx,rax
0x2b4c: mov edx,0x5
0x2b51: xor edi,edi
0x2b53: call 0x1a80
0x2b58: mov rcx,rbx
0x2b5b: mov rdx,rax
0x2b5e: xor esi,esi
0x2b60: mov edi,0x1
0x2b65: xor eax,eax
0x2b67: call 0x1c80
0x2bba: hlt 
0x2bbb: nop dword ptr [rax+rax]
0x2bc0: lea rdi,[rip+0x20b4f9]
0x2bc7: push rbp
0x2bc8: lea rax,[rip+0x20b4f1]
0x2bcf: cmp rax,rdi
0x2bd2: mov rbp,rsp
0x2bd5: je 0x2bf0
0x2bd7: mov rax,qword ptr [rip+0x20b3f2]
0x2bde: test rax,rax
0x2be1: je 0x2bf0
0x2be3: pop rbp
0x2be4: jmp rax
0x2bf0: pop rbp
0x2bf1: ret 
0x2c00: lea rdi,[rip+0x20b4b9]
0x2c07: lea rsi,[rip+0x20b4b2]
0x2c0e: push rbp
0x2c0f: sub rsi,rdi
0x2c12: mov rbp,rsp
0x2c15: sar rsi,0x3
0x2c19: mov rax,rsi
0x2c1c: shr rax,0x3f
0x2c20: add rsi,rax
0x2c23: sar rsi, 1
0x2c26: je 0x2c40
0x2c28: mov rax,qword ptr [rip+0x20b3b9]
0x2c2f: test rax,rax
0x2c32: je 0x2c40
0x2c34: pop rbp
0x2c35: jmp rax
0x2c40: pop rbp
0x2c41: ret 
0x2c61: push rbp
0x2c62: mov rbp,rsp
0x2c65: je 0x2c73
0x2c67: mov rdi,qword ptr [rip+0x20b39a]
0x2c6e: call 0x1d40
0x2c73: call 0x2bc0
0x2c78: mov byte ptr [rip+0x20b489],0x1
0x2c7f: pop rbp
0x2c80: ret 
0x2c90: push rbp
0x2c91: mov rbp,rsp
0x2c94: pop rbp
0x2c95: jmp 0x2c00
0x2f11: lea rsi,[rip+0x659f]
0x2f18: mov rbx,rax
0x2f1b: mov edx,0x5
0x2f20: xor edi,edi
0x2f22: call 0x1a80
0x2f27: mov rcx,rbx
0x2f2a: mov rdx,rax
0x2f2d: xor esi,esi
0x2f2f: mov edi,0x1
0x2f34: xor eax,eax
0x2f36: call 0x1c80
0x2f3b: call 0x1ab0
0x3125: mov rsi,rbp
0x3128: xor edi,edi
0x312a: mov rbx,rax
0x312d: call 0x7d30
0x3132: mov rdi,qword ptr [rip+0x20afc7]
0x3139: lea rdx,[rip+0x6818]
0x3140: mov rcx,rax
0x3143: mov r9d,0x12
0x3149: mov r8,rbx
0x314c: mov esi,0x1
0x3151: xor eax,eax
0x3153: call 0x1ce0
0x3221: mov edx,0x5
0x3226: mov rsi,r13
0x3229: xor edi,edi
0x322b: mov rbp,rax
0x322e: call 0x1a80
0x3233: mov edi,dword ptr [rip+0x20ade3]
0x3239: mov rdx,rax
0x323c: mov rcx,rbp
0x323f: xor esi,esi
0x3241: xor eax,eax
0x3243: call 0x1c80
0x3541: pop r15
0x3543: pop rax
0x3544: jmp 0x32a0
0x369b: mov rsi,rbp
0x369e: xor edi,edi
0x36a0: mov r13,rax
0x36a3: call 0x7d30
0x36a8: lea rsi,[rip+0x6379]
0x36af: xor edi,edi
0x36b1: mov edx,0x5
0x36b6: mov rbp,rax
0x36b9: call 0x1a80
0x36be: mov edi,dword ptr [rip+0x20a958]
0x36c4: mov rdx,rax
0x36c7: mov r8,r13
0x36ca: mov rcx,rbp
0x36cd: xor esi,esi
0x36cf: xor eax,eax
0x36d1: call 0x1c80
0x36d6: jmp 0x3248
0x36fe: lea rsi,[rip+0x6343]
0x3705: mov rbp,rax
0x3708: xor edi,edi
0x370a: mov edx,0x5
0x370f: call 0x1a80
0x3714: mov rcx,rbp
0x3717: mov rdx,rax
0x371a: xor esi,esi
0x371c: xor edi,edi
0x371e: xor eax,eax
0x3720: call 0x1c80
0x3725: jmp 0x3248
0x3850: pop rcx
0x3851: pop rsi
0x3852: jmp 0x32a0
0x387c: mov rdi,qword ptr [rip+0x20a87d]
0x3883: lea rdx,[rip+0x5c88]
0x388a: mov rcx,rax
0x388d: mov esi,0x1
0x3892: xor eax,eax
0x3894: call 0x1ce0
0x3899: jmp 0x3068
0x3a44: push rbp
0x3a5f: mov ecx,eax
0x3a61: shr ecx,0x10
0x3a64: test eax,0x8080
0x3a69: fstpt [rsp]
0x3a6c: cmove eax,ecx
0x3a6f: lea rcx,[rdx+0x2]
0x3a73: mov edi,eax
0x3a75: cmove rdx,rcx
0x3a79: add dil,al
0x3a7c: mov rax,rbp
0x3a7f: sbb rdx,0x3
0x3a83: mov ecx,0x80
0x3a88: mov rdi,rbp
0x3a8b: sub rax,rdx
0x3a8e: lea rdx,[rax+0x7f]
0x3a92: call 0x1cf0
0x3a97: fldt [rsp]
0x3aa9: lea rdx,[rip+0x6128]
0x3ab0: sub rsp,0x10
0x3ab4: mov rcx,rax
0x3ab7: mov rdi,qword ptr [rip+0x20a642]
0x3abe: mov esi,0x1
0x3ac3: xor eax,eax
0x3ac5: fldt [rsp+0x10]
0x3ac9: fstpt [rsp]
0x3acc: call 0x1ce0
0x3ad1: pop rax
0x3ad2: pop rdx
0x3ad3: jmp 0x3ad7
0x3af9: mov ecx,edx
0x3afb: shr ecx,0x10
0x3afe: test edx,0x8080
0x3b04: cmove edx,ecx
0x3b07: lea rcx,[rax+0x2]
0x3b0b: mov edi,edx
0x3b0d: cmove rax,rcx
0x3b11: add dil,dl
0x3b14: mov rdx,qword ptr [rip+0x20a645]
0x3b1b: sbb rax,0x3
0x3b1f: sub rax,rbp
0x3b22: test rsi,rsi
0x3b25: je 0x3b30
0x3b27: cmp rsi,rax
0x3b2a: ja 0x442f
0x3b30: lea rdi,[rax+0x1]
0x3b34: cmp rdi,rdx
0x3b37: jb 0x3b3e
0x3b39: call 0x2f40
0x3b3e: mov rdi,qword ptr [rip+0x20a623]
0x3b45: mov rsi,rbp
0x3b48: call 0x1a00
0x3b4d: mov rdi,qword ptr [rip+0x20a5ec]
0x3b54: mov rsi,qword ptr [rip+0x20a56d]
0x3b5b: test rdi,rdi
0x3b5e: je 0x3b6c
0x3b60: call 0x1b80
0x3b65: mov rsi,qword ptr [rip+0x20a55c]
0x3b6c: mov rdi,qword ptr [rip+0x20a5f5]
0x3b73: mov ebx,0x1
0x3b78: call 0x1b80
0x3b7d: mov rdi,qword ptr [rip+0x20a5b4]
0x3b84: test rdi,rdi
0x3b87: je 0x2fdc
0x3b8d: mov rsi,qword ptr [rip+0x20a534]
0x3b94: call 0x1b80
0x3b99: jmp 0x2fdc
0x4076: nop word ptr cs:[rax+rax]
0x4080: fxch [1+st]
0x4082: lea rax,[rip+0x5422]
0x4089: jmp 0x3f63
0x4273: pop rax
0x4274: pop rdx
0x4275: jmp 0x32a0
0x43d6: mov rdi,qword ptr [rip+0x209d23]
0x43dd: lea rdx,[rip+0x51aa]
0x43e4: mov rcx,rax
0x43e7: mov esi,0x1
0x43ec: xor eax,eax
0x43ee: call 0x1ce0
0x43f3: movzx ebx,byte ptr [rip+0x209d16]
0x43fa: fldt [rsp]
0x43fd: jmp 0x3a39
0x442f: mov qword ptr [rsp+0x80],rsi
0x4437: mov r8d,dword ptr [rip+0x209bda]
0x443e: lea rcx,[rsp+0x80]
0x4446: mov rsi,qword ptr [rip+0x209d1b]
0x444d: mov r9d,0x2
0x4453: mov rdi,rbp
0x4456: call 0x5bd0
0x445b: cmp byte ptr [rip+0x209cae],0x0
0x4462: je 0x3b4d
0x4468: mov rdi,qword ptr [rip+0x209cf9]
0x446f: call 0x7d50
0x4474: mov rdi,qword ptr [rip+0x209c85]
0x447b: lea rdx,[rip+0x5123]
0x4482: mov rcx,rax
0x4485: mov esi,0x1
0x448a: xor eax,eax
0x448c: call 0x1ce0
0x4491: jmp 0x3b4d
0x465c: call 0x1ab0
0x4921: mov eax,dword ptr [rip+0x2096ed]
0x4927: jmp 0x48e1
0x4931: jmp 0x4819
0x5080: mov eax,dword ptr [rsi]
0x5082: cmp dword ptr [rdi],eax
0x5084: jl 0x5090
0x5086: setg al
0x5089: movzx eax,al
0x508c: ret 
0x5090: mov eax,0xffffffff
0x5095: ret 
0x5173: push rsi
0x54bd: mov rax,qword ptr [rcx]
0x54c0: mov qword ptr [rip+0x208e2d],0x0
0x54cb: mov qword ptr [rip+0x208e2a],0x0
0x54d6: mov qword ptr [rip+0x208cb7],0x0
0x54e1: cmp rax,0x1
0x54e5: ja 0x5579
0x54eb: cmp rbx,0x1
0x54ef: jbe 0x5535
0x54f1: mov rax,rbx
0x54f4: lea rbp,[rcx+0x8]
0x54f8: shl rax,0x4
0x54fc: lea r12,[rcx+rax-0x8]
0x5501: nop dword ptr [rax]
0x5508: mov rax,qword ptr [rbp]
0x550c: lea rdi,[rax+0x1]
0x5510: mov rax,qword ptr [rbp+0x8]
0x5514: cmp rdi,rax
0x5517: je 0x552c
0x5519: lea rsi,[rax-0x1]
0x551d: mov qword ptr [rsp+0x8],rcx
0x5522: call 0x50a0
0x5527: mov rcx,qword ptr [rsp+0x8]
0x552c: add rbp,0x10
0x5530: cmp r12,rbp
0x5533: jne 0x5508
0x5535: shl rbx,0x4
0x5539: mov rax,qword ptr [rcx+rbx-0x8]
0x553e: cmp rax,-0x1
0x5542: je 0x555e
0x5544: lea rdi,[rax+0x1]
0x5548: mov rsi,-0x1
0x554f: mov qword ptr [rsp+0x8],rcx
0x5554: call 0x50a0
0x5559: mov rcx,qword ptr [rsp+0x8]
0x555e: mov rdi,rcx
0x5561: call 0x19b0
0x5566: mov rbx,qword ptr [rip+0x208d93]
0x556d: mov rcx,qword ptr [rip+0x208d84]
0x5574: jmp 0x5398
0x5579: lea rsi,[rax-0x1]
0x557d: mov edi,0x1
0x5582: mov qword ptr [rsp+0x8],rcx
0x5587: call 0x50a0
0x558c: mov rcx,qword ptr [rsp+0x8]
0x5591: jmp 0x54eb
0x55a2: lea rsi,[rip+0x5d27]
0x55a9: xor edi,edi
0x55ab: call 0x1a80
0x55be: mov edi,0x1
0x55c3: call 0x4940
0x55fd: lea rsi,[rip+0x5cac]
0x5604: xor edi,edi
0x5606: call 0x1a80
0x560b: jmp 0x55b0
0x5639: test byte ptr [rsp+0x1c],0x4
0x563e: mov rbp,rax
0x5641: mov edx,0x5
0x5646: je 0x569d
0x5648: lea rsi,[rip+0x5cd9]
0x564f: xor edi,edi
0x5651: call 0x1a80
0x5656: mov rdx,rax
0x5659: mov rcx,rbp
0x565c: xor esi,esi
0x565e: xor edi,edi
0x5660: xor eax,eax
0x5662: call 0x1c80
0x5667: mov rdi,rbx
0x566a: call 0x19b0
0x566f: mov edi,0x1
0x5674: call 0x4940
0x5679: mov edx,0x5
0x567e: lea rsi,[rip+0x5c7b]
0x5685: jmp 0x55e4
0x569d: lea rsi,[rip+0x5bbf]
0x56a4: xor edi,edi
0x56a6: call 0x1a80
0x56ab: jmp 0x5656
0x56b9: lea rsi,[rip+0x5cb8]
0x56c0: xor edi,edi
0x56c2: call 0x1a80
0x56c7: jmp 0x55b0
0x56d4: test byte ptr [rsp+0x1c],0x4
0x56d9: mov rbx,rax
0x56dc: mov edx,0x5
0x56e1: je 0x5718
0x56e3: lea rsi,[rip+0x5c66]
0x56ea: xor edi,edi
0x56ec: call 0x1a80
0x56f1: mov rdx,rax
0x56f4: xor edi,edi
0x56f6: mov rcx,rbx
0x56f9: xor esi,esi
0x56fb: xor eax,eax
0x56fd: call 0x1c80
0x5702: mov edi,0x1
0x5707: call 0x4940
0x5718: lea rsi,[rip+0x5b61]
0x571f: xor edi,edi
0x5721: call 0x1a80
0x5726: jmp 0x56f1
0x5730: sub rsp,0x8
0x5734: mov rdi,qword ptr [rip+0x208bbd]
0x573b: mov qword ptr [rip+0x208bba],0x0
0x5746: mov qword ptr [rip+0x208a47],0x0
0x5751: call 0x19b0
0x5756: mov qword ptr [rip+0x208b97],0x0
0x5761: add rsp,0x8
0x5765: ret 
0x5770: mov edi,0x1
0x5775: jmp 0x4940
0x58d3: mov rdx,r12
0x58d6: mov rbp,rax
0x58d9: mov esi,0x8
0x58de: xor edi,edi
0x58e0: call 0x7960
0x58e5: mov r8,rbp
0x58e8: mov rdx,rbx
0x58eb: mov rcx,rax
0x58ee: pop rbx
0x58ef: pop rbp
0x58f0: pop r12
0x58f2: xor esi,esi
0x58f4: xor edi,edi
0x58f6: xor eax,eax
0x58f8: jmp 0x1c80
0x5920: push r15
0x5922: push r14
0x5924: mov r14,rdi
0x5927: push r13
0x5929: push r12
0x592b: xor edi,edi
0x592d: push rbp
0x592e: push rbx
0x592f: mov rbp,rsi
0x5932: lea rsi,[rip+0x5aa5]
0x5939: mov r12,rdx
0x593c: mov edx,0x5
0x5941: sub rsp,0x8
0x5945: mov rbx,qword ptr [rip+0x2087b4]
0x594c: call 0x1a80
0x5951: mov rdi,rax
0x5954: mov rsi,rbx
0x5957: call 0x1b80
0x595c: mov r15,qword ptr [r14]
0x595f: test r15,r15
0x5962: je 0x59f8
0x5968: xor r13d,r13d
0x596b: xor ebx,ebx
0x596d: jmp 0x59a8
0x5970: mov rdi,r15
0x5973: add rbx,0x1
0x5977: mov r13,rbp
0x597a: call 0x7d50
0x597f: mov rdi,qword ptr [rip+0x20877a]
0x5986: lea rdx,[rip+0x5a66]
0x598d: mov rcx,rax
0x5990: mov esi,0x1
0x5995: xor eax,eax
0x5997: add rbp,r12
0x599a: call 0x1ce0
0x599f: mov r15,qword ptr [r14+rbx*8]
0x59a3: test r15,r15
0x59a6: je 0x59f8
0x59a8: test rbx,rbx
0x59ab: je 0x5970
0x59ad: mov rdx,r12
0x59b0: mov rsi,rbp
0x59b3: mov rdi,r13
0x59b6: call 0x1b70
0x59bb: test eax,eax
0x59bd: jne 0x5970
0x59bf: mov rdi,r15
0x59c2: add rbx,0x1
0x59c6: add rbp,r12
0x59c9: call 0x7d50
0x59ce: mov rdi,qword ptr [rip+0x20872b]
0x59d5: lea rdx,[rip+0x5a1f]
0x59dc: mov rcx,rax
0x59df: mov esi,0x1
0x59e4: xor eax,eax
0x59e6: call 0x1ce0
0x59eb: mov r15,qword ptr [r14+rbx*8]
0x59ef: test r15,r15
0x59f2: jne 0x59a8
0x59f4: nop dword ptr [rax]
0x59f8: mov rdi,qword ptr [rip+0x208701]
0x59ff: mov rax,qword ptr [rdi+0x28]
0x5a03: cmp rax,qword ptr [rdi+0x30]
0x5a07: jae 0x5a28
0x5a09: lea rdx,[rax+0x1]
0x5a0d: mov qword ptr [rdi+0x28],rdx
0x5a11: mov byte ptr [rax],0xa
0x5a14: add rsp,0x8
0x5a18: pop rbx
0x5a19: pop rbp
0x5a1a: pop r12
0x5a1c: pop r13
0x5a1e: pop r14
0x5a20: pop r15
0x5a22: ret 
0x5a28: add rsp,0x8
0x5a2c: mov esi,0xa
0x5a31: pop rbx
0x5a32: pop rbp
0x5a33: pop r12
0x5a35: pop r13
0x5a37: pop r14
0x5a39: pop r15
0x5a3b: jmp 0x1af0
0x5a93: mov rdx,r15
0x5a96: mov rsi,rbp
0x5a99: mov rdi,rbx
0x5a9c: call 0x5920
0x5aa1: call r13
0x5aa4: mov rax,-0x1
0x5aab: jmp 0x5a76
0x5ab0: push r14
0x5ab2: push r13
0x5ab4: push r12
0x5ab6: push rbp
0x5ab7: push rbx
0x5ab8: mov r14,qword ptr [rsi]
0x5abb: test r14,r14
0x5abe: je 0x5af1
0x5ac0: mov r12,rcx
0x5ac3: mov r13,rdi
0x5ac6: mov rbp,rdx
0x5ac9: lea rbx,[rsi+0x8]
0x5acd: jmp 0x5adf
0x5ad0: mov r14,qword ptr [rbx]
0x5ad3: add rbp,r12
0x5ad6: add rbx,0x8
0x5ada: test r14,r14
0x5add: je 0x5af1
0x5adf: mov rdx,r12
0x5ae2: mov rsi,rbp
0x5ae5: mov rdi,r13
0x5ae8: call 0x1b70
0x5aed: test eax,eax
0x5aef: jne 0x5ad0
0x5af1: pop rbx
0x5af2: mov rax,r14
0x5af5: pop rbp
0x5af6: pop r12
0x5af8: pop r13
0x5afa: pop r14
0x5afc: ret 
0x5b00: mov qword ptr [rip+0x2086a1],rdi
0x5b07: ret 
0x5b10: mov byte ptr [rip+0x208689],dil
0x5b17: ret 
0x5b20: push rbp
0x5b21: push rbx
0x5b22: sub rsp,0x8
0x5b26: mov rdi,qword ptr [rip+0x20859b]
0x5b2d: call 0x91b0
0x5b32: test eax,eax
0x5b34: je 0x5b4c
0x5b36: call 0x19d0
0x5b3b: cmp byte ptr [rip+0x20865e],0x0
0x5b42: mov rbx,rax
0x5b45: je 0x5b63
0x5b47: cmp dword ptr [rax],0x20
0x5b4a: jne 0x5b63
0x5b4c: mov rdi,qword ptr [rip+0x2085ad]
0x5b53: call 0x91b0
0x5b58: test eax,eax
0x5b5a: jne 0x5ba2
0x5b5c: add rsp,0x8
0x5b60: pop rbx
0x5b61: pop rbp
0x5b62: ret 
0x5b63: lea rsi,[rip+0x5896]
0x5b6a: xor edi,edi
0x5b6c: mov edx,0x5
0x5b71: call 0x1a80
0x5b76: mov rdi,qword ptr [rip+0x20862b]
0x5b7d: mov rbp,rax
0x5b80: test rdi,rdi
0x5b83: je 0x5bad
0x5b85: call 0x7b50
0x5b8a: mov esi,dword ptr [rbx]
0x5b8c: lea rdx,[rip+0x5879]
0x5b93: mov rcx,rax
0x5b96: mov r8,rbp
0x5b99: xor edi,edi
0x5b9b: xor eax,eax
0x5b9d: call 0x1c80
0x5ba2: mov edi,dword ptr [rip+0x2084a8]
0x5ba8: call 0x19f0
0x5bad: mov esi,dword ptr [rbx]
0x5baf: lea rdx,[rip+0x5847]
0x5bb6: mov rcx,rax
0x5bb9: xor edi,edi
0x5bbb: xor eax,eax
0x5bbd: call 0x1c80
0x5bc2: jmp 0x5ba2
0x5bd0: push r15
0x5bd2: push r14
0x5bd4: mov r14,rdi
0x5bd7: push r13
0x5bd9: push r12
0x5bdb: mov r13,rsi
0x5bde: push rbp
0x5bdf: push rbx
0x5be0: mov ebx,r9d
0x5be3: mov r12,rcx
0x5be6: sub rsp,0x38
0x5bea: mov qword ptr [rsp+0x10],rdx
0x5bef: mov dword ptr [rsp+0x1c],r8d
0x5bf4: call 0x1aa0
0x5bf9: test bl,0x2
0x5bfc: mov r15,rax
0x5bff: mov qword ptr [rsp+0x8],rax
0x5c04: je 0x5d70
0x5c0a: mov rbp,r15
0x5c0d: mov qword ptr [rsp],0x0
0x5c15: mov qword ptr [rsp+0x8],0x0
0x5c1e: mov rax,qword ptr [r12]
0x5c22: cmp rax,rbp
0x5c25: jae 0x5d39
0x5c2b: mov r15,rax
0x5c2e: xor edx,edx
0x5c30: mov qword ptr [r12],rax
0x5c34: mov eax,dword ptr [rsp+0x1c]
0x5c38: test eax,eax
0x5c3a: je 0x5d5b
0x5c40: xor ebp,ebp
0x5c42: cmp eax,0x1
0x5c45: je 0x5c53
0x5c47: mov rbp,rdx
0x5c4a: and edx,0x1
0x5c4d: shr rbp, 1
0x5c50: add rdx,rbp
0x5c53: test bl,0x4
0x5c56: lea r12,[rdx+r15]
0x5c5a: je 0x5c61
0x5c5c: mov r12,r15
0x5c5f: xor edx,edx
0x5c61: and ebx,0x8
0x5c64: jne 0x5d68
0x5c6a: add r12,rbp
0x5c6d: mov rax,qword ptr [rsp+0x10]
0x5c72: test rax,rax
0x5c75: je 0x5d01
0x5c7b: lea rbx,[r13+rax-0x1]
0x5c80: lea rax,[rdx-0x1]
0x5c84: cmp r13,rbx
0x5c87: jae 0x5caf
0x5c89: test rdx,rdx
0x5c8c: je 0x5caf
0x5c8e: nop 
0x5c90: add r13,0x1
0x5c94: mov byte ptr [r13-0x1],0x20
0x5c99: cmp rbx,r13
0x5c9c: seta sil
0x5ca0: test rax,rax
0x5ca3: setne dl
0x5ca6: sub rax,0x1
0x5caa: test sil,dl
0x5cad: jne 0x5c90
0x5caf: mov rdx,rbx
0x5cb2: mov byte ptr [r13],0x0
0x5cb7: mov rsi,r14
0x5cba: sub rdx,r13
0x5cbd: mov rdi,r13
0x5cc0: cmp rdx,r15
0x5cc3: cmova rdx,r15
0x5cc7: call 0x1c60
0x5ccc: cmp rbx,rax
0x5ccf: lea rdx,[rbp-0x1]
0x5cd3: jbe 0x5cfe
0x5cd5: test rbp,rbp
0x5cd8: je 0x5cfe
0x5cda: nop word ptr [rax+rax]
0x5ce0: add rax,0x1
0x5ce4: test rdx,rdx
0x5ce7: mov byte ptr [rax-0x1],0x20
0x5ceb: setne sil
0x5cef: cmp rbx,rax
0x5cf2: seta cl
0x5cf5: sub rdx,0x1
0x5cf9: test sil,cl
0x5cfc: jne 0x5ce0
0x5cfe: mov byte ptr [rax],0x0
0x5d01: mov rdi,qword ptr [rsp]
0x5d05: call 0x19b0
0x5d0a: mov rdi,qword ptr [rsp+0x8]
0x5d0f: call 0x19b0
0x5d14: add rsp,0x38
0x5d18: mov rax,r12
0x5d1b: pop rbx
0x5d1c: pop rbp
0x5d1d: pop r12
0x5d1f: pop r13
0x5d21: pop r14
0x5d23: pop r15
0x5d25: ret 
0x5d30: mov qword ptr [rsp+0x8],0x0
0x5d39: cmp rbp,rax
0x5d3c: jae 0x5f8a
0x5d42: sub rax,rbp
0x5d45: mov rdx,rax
0x5d48: mov rax,rbp
0x5d4b: mov qword ptr [r12],rax
0x5d4f: mov eax,dword ptr [rsp+0x1c]
0x5d53: test eax,eax
0x5d55: jne 0x5c40
0x5d5b: mov rbp,rdx
0x5d5e: xor edx,edx
0x5d60: jmp 0x5c53
0x5d68: xor ebp,ebp
0x5d6a: jmp 0x5c6d
0x5d70: call 0x1a90
0x5d75: cmp rax,0x1
0x5d79: jbe 0x5c0a
0x5d7f: xor edx,edx
0x5d81: xor edi,edi
0x5d83: mov rsi,r14
0x5d86: call 0x1a40
0x5d8b: cmp rax,-0x1
0x5d8f: jne 0x5dc0
0x5d91: test bl,0x1
0x5d94: jne 0x5c0a
0x5d9a: mov qword ptr [rsp],0x0
0x5da2: mov qword ptr [rsp+0x8],0x0
0x5dab: mov r12,-0x1
0x5db2: jmp 0x5d01
0x5dc0: lea rbp,[rax+0x1]
0x5dc4: lea rax,[rbp*4]
0x5dcc: mov rdi,rax
0x5dcf: mov qword ptr [rsp+0x20],rax
0x5dd4: call 0x1bf0
0x5dd9: test rax,rax
0x5ddc: mov qword ptr [rsp],rax
0x5de0: je 0x5f65
0x5de6: mov rdi,qword ptr [rsp]
0x5dea: mov rdx,rbp
0x5ded: mov rsi,r14
0x5df0: call 0x1a40
0x5df5: test rax,rax
0x5df8: je 0x5f04
0x5dfe: mov rax,qword ptr [rsp]
0x5e02: mov rcx,qword ptr [rsp+0x20]
0x5e07: mov dword ptr [rax+rcx-0x4],0x0
0x5e0f: mov edi,dword ptr [rax]
0x5e11: mov rdx,rax
0x5e14: test edi,edi
0x5e16: je 0x5f15
0x5e1c: mov byte ptr [rsp+0x20],0x0
0x5e21: nop dword ptr [rax]
0x5e28: mov qword ptr [rsp+0x28],rdx
0x5e2d: call 0x1d10
0x5e32: test eax,eax
0x5e34: mov rdx,qword ptr [rsp+0x28]
0x5e39: jne 0x5e46
0x5e3b: mov dword ptr [rdx],0xfffd
0x5e41: mov byte ptr [rsp+0x20],0x1
0x5e46: add rdx,0x4
0x5e4a: mov edi,dword ptr [rdx]
0x5e4c: test edi,edi
0x5e4e: jne 0x5e28
0x5e50: mov rdi,qword ptr [rsp]
0x5e54: mov rsi,rbp
0x5e57: call 0x1a30
0x5e5c: cmp byte ptr [rsp+0x20],0x0
0x5e61: movsxd rbp,eax
0x5e64: je 0x5f28
0x5e6a: mov rsi,qword ptr [rsp]
0x5e6e: xor edx,edx
0x5e70: xor edi,edi
0x5e72: call 0x1cb0
0x5e77: add rax,0x1
0x5e7b: mov qword ptr [rsp+0x20],rax
0x5e80: mov rdi,qword ptr [rsp+0x20]
0x5e85: call 0x1bf0
0x5e8a: test rax,rax
0x5e8d: mov qword ptr [rsp+0x8],rax
0x5e92: je 0x5f50
0x5e98: mov r15,qword ptr [rsp]
0x5e9c: mov r14,qword ptr [r12]
0x5ea0: mov edi,dword ptr [r15]
0x5ea3: test edi,edi
0x5ea5: je 0x5f7f
0x5eab: xor ebp,ebp
0x5ead: jmp 0x5ebe
0x5eb0: add r15,0x4
0x5eb4: mov edi,dword ptr [r15]
0x5eb7: mov rbp,rdx
0x5eba: test edi,edi
0x5ebc: je 0x5edf
0x5ebe: call 0x1be0
0x5ec3: cmp eax,-0x1
0x5ec6: movsxd rdx,eax
0x5ec9: jne 0x5ed7
0x5ecb: mov dword ptr [r15],0xfffd
0x5ed2: mov edx,0x1
0x5ed7: add rdx,rbp
0x5eda: cmp r14,rdx
0x5edd: jae 0x5eb0
0x5edf: mov r14,qword ptr [rsp+0x8]
0x5ee4: mov rdx,qword ptr [rsp+0x20]
0x5ee9: mov rsi,qword ptr [rsp]
0x5eed: mov dword ptr [r15],0x0
0x5ef4: mov rdi,r14
0x5ef7: call 0x1cb0
0x5efc: mov r15,rax
0x5eff: jmp 0x5c1e
0x5f04: mov rbp,r15
0x5f07: mov qword ptr [rsp+0x8],0x0
0x5f10: jmp 0x5c1e
0x5f15: mov rdi,qword ptr [rsp]
0x5f19: mov rsi,rbp
0x5f1c: call 0x1a30
0x5f21: movsxd rbp,eax
0x5f24: nop dword ptr [rax]
0x5f28: mov rax,qword ptr [r12]
0x5f2c: cmp rax,rbp
0x5f2f: jae 0x5d30
0x5f35: mov rax,qword ptr [rsp+0x8]
0x5f3a: add rax,0x1
0x5f3e: mov qword ptr [rsp+0x20],rax
0x5f43: jmp 0x5e80
0x5f50: test bl,0x1
0x5f53: jne 0x5c1e
0x5f59: mov r12,-0x1
0x5f60: jmp 0x5d01
0x5f65: test bl,0x1
0x5f68: mov rbp,r15
0x5f6b: mov qword ptr [rsp+0x8],0x0
0x5f74: jne 0x5c1e
0x5f7a: jmp 0x5d9a
0x5f7f: mov r15,qword ptr [rsp]
0x5f83: xor ebp,ebp
0x5f85: jmp 0x5edf
0x5f8a: mov rax,rbp
0x5f8d: xor edx,edx
0x5f8f: jmp 0x5c30
0x5fa0: push r15
0x5fa2: push r14
0x5fa4: mov r15,rdi
0x5fa7: push r13
0x5fa9: push r12
0x5fab: xor r12d,r12d
0x5fae: push rbp
0x5faf: push rbx
0x5fb0: mov rbp,rsi
0x5fb3: sub rsp,0x18
0x5fb7: mov r13,qword ptr [rsi]
0x5fba: mov dword ptr [rsp+0x8],edx
0x5fbe: mov dword ptr [rsp+0xc],ecx
0x5fc2: mov rax,r13
0x5fc5: nop dword ptr [rax]
0x5fc8: lea rbx,[rax+0x1]
0x5fcc: mov rdi,r12
0x5fcf: mov rsi,rbx
0x5fd2: call 0x1c30
0x5fd7: test rax,rax
0x5fda: mov r14,rax
0x5fdd: je 0x6020
0x5fdf: mov r9d,dword ptr [rsp+0xc]
0x5fe4: mov r8d,dword ptr [rsp+0x8]
0x5fe9: mov rcx,rbp
0x5fec: mov qword ptr [rbp],r13
0x5ff0: mov rdx,rbx
0x5ff3: mov rsi,rax
0x5ff6: mov rdi,r15
0x5ff9: call 0x5bd0
0x5ffe: cmp rax,-0x1
0x6002: je 0x6030
0x6004: cmp rbx,rax
0x6007: mov r12,r14
0x600a: jbe 0x5fc8
0x600c: add rsp,0x18
0x6010: mov rax,r14
0x6013: pop rbx
0x6014: pop rbp
0x6015: pop r12
0x6017: pop r13
0x6019: pop r14
0x601b: pop r15
0x601d: ret 
0x6020: mov rdi,r12
0x6023: call 0x19b0
0x6028: jmp 0x600c
0x6030: mov rdi,r14
0x6033: xor r14d,r14d
0x6036: call 0x19b0
0x603b: jmp 0x600c
0x60df: nop 
0x60e0: push rbp
0x60e1: push rbx
0x60e2: mov rbp,rdi
0x60e5: mov ebx,esi
0x60e7: sub rsp,0x8
0x60eb: call 0x9290
0x60f0: movzx edx,byte ptr [rax]
0x60f3: and edx,-0x21
0x60f6: cmp dl,0x55
0x60f9: je 0x6170
0x60fb: cmp dl,0x47
0x60fe: je 0x6120
0x6100: lea rax,[rip+0x5364]
0x6107: lea rdx,[rip+0x535f]
0x610e: cmp ebx,0x9
0x6111: cmovne rax,rdx
0x6115: add rsp,0x8
0x6119: pop rbx
0x611a: pop rbp
0x611b: ret 
0x6120: movzx edx,byte ptr [rax+0x1]
0x6124: and edx,-0x21
0x6127: cmp dl,0x42
0x612a: jne 0x6100
0x612c: cmp byte ptr [rax+0x2],0x31
0x6130: jne 0x6100
0x6132: cmp byte ptr [rax+0x3],0x38
0x6136: jne 0x6100
0x6138: cmp byte ptr [rax+0x4],0x30
0x613c: jne 0x6100
0x613e: cmp byte ptr [rax+0x5],0x33
0x6142: jne 0x6100
0x6144: cmp byte ptr [rax+0x6],0x30
0x6148: jne 0x6100
0x614a: cmp byte ptr [rax+0x7],0x0
0x614e: jne 0x6100
0x6150: cmp byte ptr [rbp],0x60
0x6154: lea rax,[rip+0x5309]
0x615b: lea rdx,[rip+0x5306]
0x6162: cmovne rax,rdx
0x6166: add rsp,0x8
0x616a: pop rbx
0x616b: pop rbp
0x616c: ret 
0x6170: movzx edx,byte ptr [rax+0x1]
0x6174: and edx,-0x21
0x6177: cmp dl,0x54
0x617a: jne 0x6100
0x617c: movzx edx,byte ptr [rax+0x2]
0x6180: and edx,-0x21
0x6183: cmp dl,0x46
0x6186: jne 0x6100
0x618c: cmp byte ptr [rax+0x3],0x2d
0x6190: jne 0x6100
0x6196: cmp byte ptr [rax+0x4],0x38
0x619a: jne 0x6100
0x61a0: cmp byte ptr [rax+0x5],0x0
0x61a4: jne 0x6100
0x61aa: cmp byte ptr [rbp],0x60
0x61ae: lea rax,[rip+0x52a7]
0x61b5: lea rdx,[rip+0x52a4]
0x61bc: cmovne rax,rdx
0x61c0: add rsp,0x8
0x61c4: pop rbx
0x61c5: pop rbp
0x61c6: ret 
0x62a3: xor r11d,r11d
0x62a6: mov rax,rbp
0x62a9: mov r8d,r12d
0x62ac: mov rbp,r11
0x62af: mov r11,rax
0x62b2: nop word ptr [rax+rax]
0x62b8: cmp r11,rbp
0x62bb: setne r12b
0x62bf: cmp r11,-0x1
0x62c3: jne 0x62d2
0x62c5: mov rax,qword ptr [rsp+0x10]
0x62ca: cmp byte ptr [rax+rbp],0x0
0x62ce: setne r12b
0x62d2: test r12b,r12b
0x62d5: je 0x6930
0x62db: cmp dword ptr [rsp+0x8],0x2
0x62e0: mov rdi,qword ptr [rsp+0x10]
0x62e5: lea r9,[rdi+rbp]
0x62e9: setne al
0x62ec: and al,byte ptr [rsp+0xd]
0x62f0: mov r10d,eax
0x62f3: je 0x63a0
0x62f9: mov rax,qword ptr [rsp+0x18]
0x62fe: test rax,rax
0x6301: je 0x6730
0x6307: cmp r11,-0x1
0x630b: lea rbx,[rbp+rax]
0x6310: jne 0x6340
0x6312: cmp rax,0x1
0x6316: jbe 0x6340
0x6318: mov byte ptr [rsp+0x38],r8b
0x631d: mov byte ptr [rsp+0x30],r10b
0x6322: mov qword ptr [rsp+0x28],r9
0x6327: call 0x1aa0
0x632c: movzx r8d,byte ptr [rsp+0x38]
0x6332: movzx r10d,byte ptr [rsp+0x30]
0x6338: mov r11,rax
0x633b: mov r9,qword ptr [rsp+0x28]
0x6340: cmp rbx,r11
0x6343: mov byte ptr [rsp+0x28],r10b
0x6348: ja 0x6900
0x634e: mov rdx,qword ptr [rsp+0x18]
0x6353: mov rsi,qword ptr [rsp+0x48]
0x6358: mov rdi,r9
0x635b: mov qword ptr [rsp+0x40],r11
0x6360: mov byte ptr [rsp+0x38],r8b
0x6365: mov qword ptr [rsp+0x30],r9
0x636a: call 0x1b70
0x636f: test eax,eax
0x6371: mov r9,qword ptr [rsp+0x30]
0x6376: movzx r8d,byte ptr [rsp+0x38]
0x637c: mov r11,qword ptr [rsp+0x40]
0x6381: jne 0x6900
0x6387: cmp byte ptr [rsp+0xf],0x0
0x638c: movzx r10d,byte ptr [rsp+0x28]
0x6392: jne 0x7315
0x6398: nop dword ptr [rax+rax]
0x63a0: movzx ebx,byte ptr [r9]
0x63a4: cmp bl,0x7e
0x63a7: ja 0x66c8
0x63ad: lea rcx,[rip+0x5138]
0x63b4: movzx edx,bl
0x63b7: movsxd rax,dword ptr [rcx+rdx*4]
0x63bb: add rax,rcx
0x63be: jmp rax
0x63f8: cmp byte ptr [rsp+0xd],0x1
0x63fd: jne 0x6512
0x6403: test dl,dl
0x6405: jne 0x6512
0x640b: mov rsi,qword ptr [rsp+0x20]
0x6410: test rsi,rsi
0x6413: je 0x6429
0x6415: mov edx,ebx
0x6417: shr dl,0x5
0x641a: movzx edx,dl
0x641d: mov edx,dword ptr [rsi+rdx*4]
0x6420: btl edx,ebx
0x6423: jb 0x6573
0x6429: test r10b,r10b
0x642c: jne 0x6573
0x6432: xor eax,0x1
0x6435: add rbp,0x1
0x6439: and eax,r8d
0x643c: test al,al
0x643e: je 0x6460
0x6440: cmp r13,r15
0x6443: jbe 0x644a
0x6445: mov byte ptr [r14+r15],0x27
0x644a: lea rax,[r15+0x1]
0x644e: cmp r13,rax
0x6451: jbe 0x6459
0x6453: mov byte ptr [r14+r15+0x1],0x27
0x6459: add r15,0x2
0x645d: xor r8d,r8d
0x6460: cmp r15,r13
0x6463: jae 0x6469
0x6465: mov byte ptr [r14+r15],bl
0x6469: movzx edi,byte ptr [rsp+0xe]
0x646e: add r15,0x1
0x6472: mov eax,0x0
0x6477: test r12b,r12b
0x647a: cmove edi,eax
0x647d: mov byte ptr [rsp+0xe],dil
0x6482: jmp 0x62b8
0x6512: cmp byte ptr [rsp+0xf],0x0
0x6517: jne 0x640b
0x651d: jmp 0x6429
0x6573: cmp dword ptr [rsp+0x8],0x2
0x6578: sete dl
0x657b: cmp byte ptr [rsp+0xf],0x0
0x6580: mov eax,edx
0x6582: jne 0x6dd8
0x6588: mov eax,r8d
0x658b: xor eax,0x1
0x658e: and al,dl
0x6590: je 0x65c1
0x6592: cmp r13,r15
0x6595: jbe 0x659c
0x6597: mov byte ptr [r14+r15],0x27
0x659c: lea rdx,[r15+0x1]
0x65a0: cmp r13,rdx
0x65a3: jbe 0x65ab
0x65a5: mov byte ptr [r14+r15+0x1],0x24
0x65ab: lea rdx,[r15+0x2]
0x65af: cmp r13,rdx
0x65b2: jbe 0x65ba
0x65b4: mov byte ptr [r14+r15+0x2],0x27
0x65ba: add r15,0x3
0x65be: mov r8d,eax
0x65c1: cmp r13,r15
0x65c4: jbe 0x65cb
0x65c6: mov byte ptr [r14+r15],0x5c
0x65cb: add r15,0x1
0x65cf: add rbp,0x1
0x65d3: jmp 0x6460
0x66c0: xor r10d,r10d
0x66c3: nop dword ptr [rax+rax]
0x66c8: cmp qword ptr [rsp+0x58],0x1
0x66ce: jne 0x6a78
0x66d4: mov qword ptr [rsp+0x38],r11
0x66d9: mov byte ptr [rsp+0x30],r8b
0x66de: mov byte ptr [rsp+0x28],r10b
0x66e3: call 0x1d30
0x66e8: mov rcx,qword ptr [rax]
0x66eb: movzx edx,bl
0x66ee: movzx r10d,byte ptr [rsp+0x28]
0x66f4: movzx r8d,byte ptr [rsp+0x30]
0x66fa: mov r11,qword ptr [rsp+0x38]
0x66ff: mov edi,0x1
0x6704: movzx eax,word ptr [rcx+rdx*2]
0x6708: and ax,0x4000
0x670c: setne r12b
0x6710: sete al
0x6713: and al,byte ptr [rsp+0xd]
0x6717: test al,al
0x6719: jne 0x70b1
0x671f: cmp dword ptr [rsp+0x8],0x2
0x6724: sete dl
0x6727: jmp 0x63f8
0x6730: movzx ebx,byte ptr [r9]
0x6734: cmp bl,0x7e
0x6737: ja 0x66c0
0x6739: lea rcx,[rip+0x4fa8]
0x6740: movzx edx,bl
0x6743: movsxd rax,dword ptr [rcx+rdx*4]
0x6747: add rax,rcx
0x674a: jmp rax
0x6900: xor r10d,r10d
0x6903: jmp 0x63a0
0x6930: cmp dword ptr [rsp+0x8],0x2
0x6935: movzx ebx,byte ptr [rsp+0xf]
0x693a: mov r12d,r8d
0x693d: mov rbp,r11
0x6940: sete dl
0x6943: mov eax,ebx
0x6945: test r15,r15
0x6948: sete cl
0x694b: and eax,edx
0x694d: and al,cl
0x694f: jne 0x73b6
0x6955: mov eax,ebx
0x6957: xor eax,0x1
0x695a: and dl,al
0x695c: je 0x72cc
0x6962: cmp byte ptr [rsp+0x7c],0x0
0x6967: je 0x72ca
0x696d: cmp byte ptr [rsp+0xe],0x0
0x6972: jne 0x736d
0x6978: test r13,r13
0x697b: sete al
0x697e: cmp qword ptr [rsp+0x50],0x0
0x6984: setne dl
0x6987: and al,dl
0x6989: je 0x73ac
0x698f: mov r13,qword ptr [rsp+0x50]
0x6994: lea rbx,[rip+0x4ad2]
0x699b: mov byte ptr [r14],0x27
0x699f: mov dword ptr [rsp+0x8],0x2
0x69a7: mov r15d,0x1
0x69ad: mov qword ptr [rsp+0x18],0x1
0x69b6: mov byte ptr [rsp+0xf],0x0
0x69bb: mov qword ptr [rsp+0x48],rbx
0x69c0: mov byte ptr [rsp+0x7c],al
0x69c4: jmp 0x62a3
0x6a78: lea rax,[rsp+0xa0]
0x6a80: cmp r11,-0x1
0x6a84: mov qword ptr [rsp+0xa0],0x0
0x6a90: mov qword ptr [rsp+0x28],rax
0x6a95: jne 0x6ac4
0x6a97: mov rdi,qword ptr [rsp+0x10]
0x6a9c: mov byte ptr [rsp+0x40],r8b
0x6aa1: mov byte ptr [rsp+0x38],r10b
0x6aa6: mov qword ptr [rsp+0x30],r9
0x6aab: call 0x1aa0
0x6ab0: movzx r8d,byte ptr [rsp+0x40]
0x6ab6: movzx r10d,byte ptr [rsp+0x38]
0x6abc: mov r11,rax
0x6abf: mov r9,qword ptr [rsp+0x30]
0x6ac4: lea rax,[rsp+0x9c]
0x6acc: xor ecx,ecx
0x6ace: mov byte ptr [rsp+0x7e],bl
0x6ad2: mov byte ptr [rsp+0x7d],r8b
0x6ad7: mov rbx,rcx
0x6ada: mov qword ptr [rsp+0x88],r9
0x6ae2: mov qword ptr [rsp+0x38],rax
0x6ae7: mov byte ptr [rsp+0x7f],r10b
0x6aec: mov qword ptr [rsp+0x80],r15
0x6af4: mov qword ptr [rsp+0x40],r14
0x6af9: mov qword ptr [rsp+0x70],r13
0x6afe: mov qword ptr [rsp+0x30],r11
0x6b03: mov rax,qword ptr [rsp+0x10]
0x6b08: lea r14,[rbp+rbx]
0x6b0d: mov rdx,qword ptr [rsp+0x30]
0x6b12: mov rcx,qword ptr [rsp+0x28]
0x6b17: mov rdi,qword ptr [rsp+0x38]
0x6b1c: lea r13,[rax+r14]
0x6b20: sub rdx,r14
0x6b23: mov rsi,r13
0x6b26: call 0x9120
0x6b2b: test rax,rax
0x6b2e: mov r15,rax
0x6b31: je 0x6b81
0x6b33: cmp rax,-0x1
0x6b37: je 0x7155
0x6b3d: cmp rax,-0x2
0x6b41: je 0x70e1
0x6b47: cmp dword ptr [rsp+0x8],0x2
0x6b4c: sete al
0x6b4f: and al,byte ptr [rsp+0xf]
0x6b53: jne 0x6cf0
0x6b59: mov edi,dword ptr [rsp+0x9c]
0x6b60: call 0x1d10
0x6b65: mov rdi,qword ptr [rsp+0x28]
0x6b6a: test eax,eax
0x6b6c: mov eax,0x0
0x6b71: cmove r12d,eax
0x6b75: add rbx,r15
0x6b78: call 0x1d00
0x6b7d: test eax,eax
0x6b7f: je 0x6b03
0x6b81: mov edx,r12d
0x6b84: mov rdi,rbx
0x6b87: movzx r8d,byte ptr [rsp+0x7d]
0x6b8d: xor edx,0x1
0x6b90: movzx ebx,byte ptr [rsp+0x7e]
0x6b95: movzx r10d,byte ptr [rsp+0x7f]
0x6b9b: and dl,byte ptr [rsp+0xd]
0x6b9f: mov r15,qword ptr [rsp+0x80]
0x6ba7: mov r14,qword ptr [rsp+0x40]
0x6bac: mov r13,qword ptr [rsp+0x70]
0x6bb1: mov r11,qword ptr [rsp+0x30]
0x6bb6: cmp rdi,0x1
0x6bba: jbe 0x71bb
0x6bc0: mov rcx,rdi
0x6bc3: xor esi,esi
0x6bc5: movzx r9d,byte ptr [rsp+0xf]
0x6bcb: add rcx,rbp
0x6bce: mov rdi,qword ptr [rsp+0x10]
0x6bd3: jmp 0x6c8e
0x6be0: cmp dword ptr [rsp+0x8],0x2
0x6be5: sete al
0x6be8: test r9b,r9b
0x6beb: jne 0x70a0
0x6bf1: mov esi,r8d
0x6bf4: xor esi,0x1
0x6bf7: and al,sil
0x6bfa: je 0x6c2b
0x6bfc: cmp r13,r15
0x6bff: jbe 0x6c06
0x6c01: mov byte ptr [r14+r15],0x27
0x6c06: lea rsi,[r15+0x1]
0x6c0a: cmp r13,rsi
0x6c0d: jbe 0x6c15
0x6c0f: mov byte ptr [r14+r15+0x1],0x24
0x6c15: lea rsi,[r15+0x2]
0x6c19: cmp r13,rsi
0x6c1c: jbe 0x6c24
0x6c1e: mov byte ptr [r14+r15+0x2],0x27
0x6c24: add r15,0x3
0x6c28: mov r8d,eax
0x6c2b: cmp r13,r15
0x6c2e: jbe 0x6c35
0x6c30: mov byte ptr [r14+r15],0x5c
0x6c35: lea rax,[r15+0x1]
0x6c39: cmp r13,rax
0x6c3c: jbe 0x6c4b
0x6c3e: mov eax,ebx
0x6c40: shr al,0x6
0x6c43: add eax,0x30
0x6c46: mov byte ptr [r14+r15+0x1],al
0x6c4b: lea rax,[r15+0x2]
0x6c4f: cmp r13,rax
0x6c52: jbe 0x6c64
0x6c54: mov eax,ebx
0x6c56: shr al,0x3
0x6c59: and eax,0x7
0x6c5c: add eax,0x30
0x6c5f: mov byte ptr [r14+r15+0x2],al
0x6c64: and ebx,0x7
0x6c67: add rbp,0x1
0x6c6b: add r15,0x3
0x6c6f: add ebx,0x30
0x6c72: cmp rbp,rcx
0x6c75: jae 0x6460
0x6c7b: mov esi,edx
0x6c7d: cmp r13,r15
0x6c80: jbe 0x6c86
0x6c82: mov byte ptr [r14+r15],bl
0x6c86: movzx ebx,byte ptr [rdi+rbp]
0x6c8a: add r15,0x1
0x6c8e: test dl,dl
0x6c90: jne 0x6be0
0x6c96: mov eax,esi
0x6c98: xor eax,0x1
0x6c9b: and eax,r8d
0x6c9e: test r10b,r10b
0x6ca1: je 0x6cb1
0x6ca3: cmp r13,r15
0x6ca6: jbe 0x6cad
0x6ca8: mov byte ptr [r14+r15],0x5c
0x6cad: add r15,0x1
0x6cb1: add rbp,0x1
0x6cb5: cmp rbp,rcx
0x6cb8: jae 0x643c
0x6cbe: test al,al
0x6cc0: je 0x70be
0x6cc6: cmp r13,r15
0x6cc9: jbe 0x6cd0
0x6ccb: mov byte ptr [r14+r15],0x27
0x6cd0: lea rax,[r15+0x1]
0x6cd4: cmp r13,rax
0x6cd7: jbe 0x6cdf
0x6cd9: mov byte ptr [r14+r15+0x1],0x27
0x6cdf: add r15,0x2
0x6ce3: xor r10d,r10d
0x6ce6: xor r8d,r8d
0x6ce9: jmp 0x6c7d
0x6cf0: cmp r15,0x1
0x6cf4: je 0x6b59
0x6cfa: mov rdi,qword ptr [rsp+0x10]
0x6cff: lea rcx,[rdi+r15]
0x6d03: lea rdx,[rdi+r14+0x1]
0x6d08: lea r8,[rcx+r14]
0x6d0c: jmp 0x6d1d
0x6d10: add rdx,0x1
0x6d14: cmp r8,rdx
0x6d17: je 0x6b59
0x6d1d: movzx ecx,byte ptr [rdx]
0x6d20: sub ecx,0x5b
0x6d23: cmp cl,0x21
0x6d26: ja 0x6d10
0x6d28: mov esi,0x1
0x6d2d: shl rsi,cl
0x6d30: mov rcx,rsi
0x6d33: movabsq rsi,0x20000002b
0x6d3d: test rcx,rsi
0x6d40: je 0x6d10
0x6d42: mov r14,qword ptr [rsp+0x40]
0x6d47: mov r13,qword ptr [rsp+0x70]
0x6d4c: mov rbp,qword ptr [rsp+0x30]
0x6d51: mov dword ptr [rsp+0x8],0x2
0x6d59: cmp byte ptr [rsp+0xd],0x0
0x6d5e: je 0x6d70
0x6d60: test al,al
0x6d62: mov eax,0x4
0x6d67: cmove eax,dword ptr [rsp+0x8]
0x6d6c: mov dword ptr [rsp+0x8],eax
0x6d70: sub rsp,0x8
0x6d74: mov rcx,rbp
0x6d77: mov rsi,r13
0x6d7a: push qword ptr [rsp+0x68]
0x6d7e: push qword ptr [rsp+0x78]
0x6d82: mov rdi,r14
0x6d85: push 0x0
0x6d87: mov r9d,dword ptr [rsp+0x98]
0x6d8f: mov r8d,dword ptr [rsp+0x28]
0x6d94: mov rdx,qword ptr [rsp+0x30]
0x6d99: and r9d,-0x3
0x6d9d: call 0x61d0
0x6da2: add rsp,0x20
0x6da6: mov r15,rax
0x6da9: mov rbx,qword ptr [rsp+0xa8]
0x6db1: xor rbx,qword ptr fs:0x28
0x6dba: mov rax,r15
0x6dbd: jne 0x73c3
0x6dc3: add rsp,0xb8
0x6dca: pop rbx
0x6dcb: pop rbp
0x6dcc: pop r12
0x6dce: pop r13
0x6dd0: pop r14
0x6dd2: pop r15
0x6dd4: ret 
0x6dd8: mov rbp,r11
0x6ddb: jmp 0x6d59
0x6e41: test r13,r13
0x6e44: jne 0x73da
0x6e4a: lea rax,[rip+0x461c]
0x6e51: mov qword ptr [rsp+0x50],0x0
0x6e5a: mov byte ptr [rsp+0xe],0x1
0x6e5f: mov byte ptr [rsp+0x7c],0x0
0x6e64: xor r12d,r12d
0x6e67: mov byte ptr [rsp+0xf],0x0
0x6e6c: mov qword ptr [rsp+0x18],0x1
0x6e75: mov qword ptr [rsp+0x48],rax
0x6e7a: mov r15d,0x1
0x6e80: mov dword ptr [rsp+0x8],0x2
0x6e88: jmp 0x62a3
0x70a0: movzx ebx,byte ptr [rsp+0xf]
0x70a5: mov rbp,r11
0x70a8: mov byte ptr [rsp+0xd],bl
0x70ac: jmp 0x6d59
0x70b1: movzx edx,byte ptr [rsp+0xd]
0x70b6: xor r12d,r12d
0x70b9: jmp 0x6bc0
0x70be: xor r10d,r10d
0x70c1: jmp 0x6c7d
0x70e1: mov r11,qword ptr [rsp+0x30]
0x70e6: mov rsi,r14
0x70e9: mov rcx,r13
0x70ec: mov rax,rbx
0x70ef: mov rdi,rbx
0x70f2: movzx r8d,byte ptr [rsp+0x7d]
0x70f8: movzx ebx,byte ptr [rsp+0x7e]
0x70fd: mov r9,qword ptr [rsp+0x88]
0x7105: cmp rsi,r11
0x7108: movzx r10d,byte ptr [rsp+0x7f]
0x710e: mov r15,qword ptr [rsp+0x80]
0x7116: mov r14,qword ptr [rsp+0x40]
0x711b: mov r13,qword ptr [rsp+0x70]
0x7120: jae 0x7148
0x7122: cmp byte ptr [rcx],0x0
0x7125: jne 0x7137
0x7127: jmp 0x7148
0x7130: cmp byte ptr [r9+rax],0x0
0x7135: je 0x7145
0x7137: add rax,0x1
0x713b: lea rdx,[rbp+rax]
0x7140: cmp r11,rdx
0x7143: ja 0x7130
0x7145: mov rdi,rax
0x7148: movzx edx,byte ptr [rsp+0xd]
0x714d: xor r12d,r12d
0x7150: jmp 0x6bb6
0x7155: mov rdi,rbx
0x7158: movzx r8d,byte ptr [rsp+0x7d]
0x715e: movzx ebx,byte ptr [rsp+0x7e]
0x7163: movzx r10d,byte ptr [rsp+0x7f]
0x7169: mov r15,qword ptr [rsp+0x80]
0x7171: xor r12d,r12d
0x7174: mov r14,qword ptr [rsp+0x40]
0x7179: mov r13,qword ptr [rsp+0x70]
0x717e: mov r11,qword ptr [rsp+0x30]
0x7183: movzx edx,byte ptr [rsp+0xd]
0x7188: jmp 0x6bb6
0x71bb: mov eax,edx
0x71bd: jmp 0x6717
0x72ca: mov eax,edx
0x72cc: mov rbx,qword ptr [rsp+0x48]
0x72d1: test rbx,rbx
0x72d4: je 0x7302
0x72d6: test al,al
0x72d8: je 0x7302
0x72da: movzx ecx,byte ptr [rbx]
0x72dd: mov rax,rbx
0x72e0: test cl,cl
0x72e2: je 0x7302
0x72e4: mov rdx,r15
0x72e7: sub rax,r15
0x72ea: cmp r13,rdx
0x72ed: jbe 0x72f3
0x72ef: mov byte ptr [r14+rdx],cl
0x72f3: add rdx,0x1
0x72f7: movzx ecx,byte ptr [rax+rdx]
0x72fb: test cl,cl
0x72fd: jne 0x72ea
0x72ff: mov r15,rdx
0x7302: cmp r13,r15
0x7305: jbe 0x6da9
0x730b: mov byte ptr [r14+r15],0x0
0x7310: jmp 0x6da9
0x7315: cmp dword ptr [rsp+0x8],0x2
0x731a: movzx ebx,byte ptr [rsp+0xf]
0x731f: mov rbp,r11
0x7322: sete al
0x7325: mov byte ptr [rsp+0xd],bl
0x7329: jmp 0x6d59
0x736d: sub rsp,0x8
0x7371: mov r8d,0x5
0x7377: mov rcx,r11
0x737a: push qword ptr [rsp+0x68]
0x737e: push qword ptr [rsp+0x78]
0x7382: mov rdi,r14
0x7385: push qword ptr [rsp+0x38]
0x7389: mov r9d,dword ptr [rsp+0x98]
0x7391: mov rdx,qword ptr [rsp+0x30]
0x7396: mov rsi,qword ptr [rsp+0x70]
0x739b: call 0x61d0
0x73a0: add rsp,0x20
0x73a4: mov r15,rax
0x73a7: jmp 0x6da9
0x73ac: movzx eax,byte ptr [rsp+0x7c]
0x73b1: jmp 0x72cc
0x73b6: mov dword ptr [rsp+0x8],0x2
0x73be: jmp 0x6d59
0x73c3: call 0x1ab0
0x73c8: mov byte ptr [rsp+0xd],0x0
0x73cd: jmp 0x6e41
0x73da: mov byte ptr [rsp+0xe],0x1
0x73df: xor eax,eax
0x73e1: xor r12d,r12d
0x73e4: mov qword ptr [rsp+0x50],0x0
0x73ed: jmp 0x6994
0x7404: nop 
0x7406: nop word ptr cs:[rax+rax]
0x74fc: add rsp,0x20
0x7500: mov r11,qword ptr [rsp+0x10]
0x7505: cmp r11,rax
0x7508: ja 0x7571
0x750a: lea rsi,[rax+0x1]
0x750e: lea rax,[rip+0x206cab]
0x7515: cmp r12,rax
0x7518: mov qword ptr [rbx],rsi
0x751b: je 0x752f
0x751d: mov rdi,r12
0x7520: mov qword ptr [rsp+0x10],rsi
0x7525: call 0x19b0
0x752a: mov rsi,qword ptr [rsp+0x10]
0x752f: mov rdi,rsi
0x7532: mov qword ptr [rsp+0x10],rsi
0x7537: call 0x8390
0x753c: sub rsp,0x8
0x7540: mov qword ptr [rbx+0x8],rax
0x7544: mov r8d,dword ptr [rbp]
0x7548: push qword ptr [rbp+0x30]
0x754b: push qword ptr [rbp+0x28]
0x754e: mov rcx,r14
0x7551: push r15
0x7553: mov r9d,dword ptr [rsp+0x3c]
0x7558: mov rdi,rax
0x755b: mov rdx,qword ptr [rsp+0x28]
0x7560: mov rsi,qword ptr [rsp+0x30]
0x7565: mov r12,rax
0x7568: call 0x61d0
0x756d: add rsp,0x20
0x7571: mov eax,dword ptr [rsp+0x18]
0x7575: mov dword ptr [r13],eax
0x7579: add rsp,0x28
0x757d: mov rax,r12
0x7580: pop rbx
0x7581: pop rbp
0x7582: pop r12
0x7584: pop r13
0x7586: pop r14
0x7588: pop r15
0x758a: ret 
0x75bb: nop dword ptr [rax+rax]
0x75c0: push r12
0x75c2: push rbp
0x75c3: push rbx
0x75c4: mov rbx,rdi
0x75c7: call 0x19d0
0x75cc: mov r12d,dword ptr [rax]
0x75cf: mov rbp,rax
0x75d2: lea rax,[rip+0x206ce7]
0x75d9: test rbx,rbx
0x75dc: mov esi,0x38
0x75e1: cmove rbx,rax
0x75e5: mov rdi,rbx
0x75e8: call 0x8590
0x75ed: mov dword ptr [rbp],r12d
0x75f1: pop rbx
0x75f2: pop rbp
0x75f3: pop r12
0x75f5: ret 
0x7600: lea rax,[rip+0x206cb9]
0x7607: test rdi,rdi
0x760a: cmove rdi,rax
0x760e: mov eax,dword ptr [rdi]
0x7610: ret 
0x7620: lea rax,[rip+0x206c99]
0x7627: test rdi,rdi
0x762a: cmove rdi,rax
0x762e: mov dword ptr [rdi],esi
0x7630: ret 
0x7640: lea rax,[rip+0x206c79]
0x7647: test rdi,rdi
0x764a: mov ecx,esi
0x764c: cmove rdi,rax
0x7650: mov eax,esi
0x7652: and ecx,0x1f
0x7655: shr al,0x5
0x7658: movzx eax,al
0x765b: lea rdi,[rdi+rax*4+0x8]
0x7660: mov esi,dword ptr [rdi]
0x7662: mov eax,esi
0x7664: shr eax,cl
0x7666: xor edx,eax
0x7668: and eax,0x1
0x766b: and edx,0x1
0x766e: shl edx,cl
0x7670: xor edx,esi
0x7672: mov dword ptr [rdi],edx
0x7674: ret 
0x7680: lea rax,[rip+0x206c39]
0x7687: test rdi,rdi
0x768a: cmove rdi,rax
0x768e: mov eax,dword ptr [rdi+0x4]
0x7691: mov dword ptr [rdi+0x4],esi
0x7694: ret 
0x76a0: lea rax,[rip+0x206c19]
0x76a7: test rdi,rdi
0x76aa: cmove rdi,rax
0x76ae: test rsi,rsi
0x76b1: mov dword ptr [rdi],0xa
0x76b7: je 0x76c7
0x76b9: test rdx,rdx
0x76bc: je 0x76c7
0x76be: mov qword ptr [rdi+0x28],rsi
0x76c2: mov qword ptr [rdi+0x30],rdx
0x76c6: ret 
0x76c7: sub rsp,0x8
0x76cb: call 0x19c0
0x76d0: push r15
0x76d2: push r14
0x76d4: lea rax,[rip+0x206be5]
0x76db: push r13
0x76dd: push r12
0x76df: mov r13,rdi
0x76e2: push rbp
0x76e3: push rbx
0x76e4: mov rbx,r8
0x76e7: mov r14,rsi
0x76ea: mov r15,rdx
0x76ed: sub rsp,0x18
0x76f1: test r8,r8
0x76f4: cmove rbx,rax
0x76f8: mov qword ptr [rsp+0x8],rcx
0x76fd: call 0x19d0
0x7702: mov r12d,dword ptr [rax]
0x7705: mov rbp,rax
0x7708: lea rax,[rbx+0x8]
0x770c: sub rsp,0x8
0x7710: mov r9d,dword ptr [rbx+0x4]
0x7714: push qword ptr [rbx+0x30]
0x7717: mov r8d,dword ptr [rbx]
0x771a: push qword ptr [rbx+0x28]
0x771d: mov rdx,r15
0x7720: push rax
0x7721: mov rcx,qword ptr [rsp+0x28]
0x7726: mov rsi,r14
0x7729: mov rdi,r13
0x772c: call 0x61d0
0x7731: mov dword ptr [rbp],r12d
0x7735: add rsp,0x38
0x7739: pop rbx
0x773a: pop rbp
0x773b: pop r12
0x773d: pop r13
0x773f: pop r14
0x7741: pop r15
0x7743: ret 
0x7750: push r15
0x7752: push r14
0x7754: lea rax,[rip+0x206b65]
0x775b: push r13
0x775d: push r12
0x775f: mov r12,rdx
0x7762: push rbp
0x7763: push rbx
0x7764: mov rbx,rcx
0x7767: mov r14,rdi
0x776a: mov r15,rsi
0x776d: sub rsp,0x38
0x7771: test rcx,rcx
0x7774: cmove rbx,rax
0x7778: xor ebp,ebp
0x777a: call 0x19d0
0x777f: test r12,r12
0x7782: mov r13,rax
0x7785: mov eax,dword ptr [rax]
0x7787: sete bpl
0x778b: or ebp,dword ptr [rbx+0x4]
0x778e: lea r10,[rbx+0x8]
0x7792: sub rsp,0x8
0x7796: mov r8d,dword ptr [rbx]
0x7799: mov rcx,r15
0x779c: mov dword ptr [rsp+0x14],eax
0x77a0: push qword ptr [rbx+0x30]
0x77a3: mov rdx,r14
0x77a6: push qword ptr [rbx+0x28]
0x77a9: push r10
0x77ab: xor esi,esi
0x77ad: mov r9d,ebp
0x77b0: xor edi,edi
0x77b2: mov qword ptr [rsp+0x40],r10
0x77b7: call 0x61d0
0x77bc: lea rsi,[rax+0x1]
0x77c0: mov qword ptr [rsp+0x48],rax
0x77c5: add rsp,0x20
0x77c9: mov rdi,rsi
0x77cc: mov qword ptr [rsp+0x18],rsi
0x77d1: call 0x8390
0x77d6: mov qword ptr [rsp+0x10],rax
0x77db: sub rsp,0x8
0x77df: push qword ptr [rbx+0x30]
0x77e2: push qword ptr [rbx+0x28]
0x77e5: mov r10,qword ptr [rsp+0x38]
0x77ea: mov r9d,ebp
0x77ed: mov r8d,dword ptr [rbx]
0x77f0: mov rcx,r15
0x77f3: mov rdx,r14
0x77f6: mov rdi,rax
0x77f9: push r10
0x77fb: mov rsi,qword ptr [rsp+0x38]
0x7800: call 0x61d0
0x7805: mov eax,dword ptr [rsp+0x2c]
0x7809: add rsp,0x20
0x780d: test r12,r12
0x7810: mov dword ptr [r13],eax
0x7814: je 0x781f
0x7816: mov r11,qword ptr [rsp+0x28]
0x781b: mov qword ptr [r12],r11
0x781f: mov rax,qword ptr [rsp+0x10]
0x7824: add rsp,0x38
0x7828: pop rbx
0x7829: pop rbp
0x782a: pop r12
0x782c: pop r13
0x782e: pop r14
0x7830: pop r15
0x7832: ret 
0x7840: mov rcx,rdx
0x7843: xor edx,edx
0x7845: jmp 0x7750
0x7850: mov eax,dword ptr [rip+0x206842]
0x7856: push r12
0x7858: mov r12,qword ptr [rip+0x206841]
0x785f: push rbp
0x7860: push rbx
0x7861: cmp eax,0x1
0x7864: jle 0x7891
0x7866: sub eax,0x2
0x7869: lea rbx,[r12+0x18]
0x786e: shl rax,0x4
0x7872: lea rbp,[r12+rax+0x28]
0x7877: nop word ptr [rax+rax]
0x7880: mov rdi,qword ptr [rbx]
0x7883: add rbx,0x10
0x7887: call 0x19b0
0x788c: cmp rbx,rbp
0x788f: jne 0x7880
0x7891: mov rdi,qword ptr [r12+0x8]
0x7896: lea rbx,[rip+0x206923]
0x789d: cmp rdi,rbx
0x78a0: je 0x78b9
0x78a2: call 0x19b0
0x78a7: mov qword ptr [rip+0x2067fe],0x100
0x78b2: mov qword ptr [rip+0x2067ff],rbx
0x78b9: lea rbx,[rip+0x2067f0]
0x78c0: cmp r12,rbx
0x78c3: je 0x78d4
0x78c5: mov rdi,r12
0x78c8: call 0x19b0
0x78cd: mov qword ptr [rip+0x2067cc],rbx
0x78d4: pop rbx
0x78d5: mov dword ptr [rip+0x2067b9],0x1
0x78df: pop rbp
0x78e0: pop r12
0x78e2: ret 
0x78f0: lea rcx,[rip+0x2069c9]
0x78f7: mov rdx,-0x1
0x78fe: jmp 0x7410
0x7910: lea rcx,[rip+0x2069a9]
0x7917: jmp 0x7410
0x7920: lea rcx,[rip+0x206999]
0x7927: mov rsi,rdi
0x792a: mov rdx,-0x1
0x7931: xor edi,edi
0x7933: jmp 0x7410
0x7940: lea rcx,[rip+0x206979]
0x7947: mov rdx,rsi
0x794a: mov rsi,rdi
0x794d: xor edi,edi
0x794f: jmp 0x7410
0x7960: sub rsp,0x48
0x7964: mov rax,rdx
0x7967: mov rdx,qword ptr fs:0x28
0x7970: mov qword ptr [rsp+0x38],rdx
0x7975: xor edx,edx
0x7977: cmp esi,0xa
0x797a: je 0x79e4
0x797c: mov dword ptr [rsp],esi
0x797f: mov rcx,rsp
0x7982: mov rdx,-0x1
0x7989: mov rsi,rax
0x798c: mov qword ptr [rsp+0x4],0x0
0x7995: mov qword ptr [rsp+0xc],0x0
0x799e: mov qword ptr [rsp+0x14],0x0
0x79a7: mov qword ptr [rsp+0x1c],0x0
0x79b0: mov qword ptr [rsp+0x24],0x0
0x79b9: mov qword ptr [rsp+0x2c],0x0
0x79c2: mov dword ptr [rsp+0x34],0x0
0x79ca: call 0x7410
0x79cf: mov rcx,qword ptr [rsp+0x38]
0x79d4: xor rcx,qword ptr fs:0x28
0x79dd: jne 0x79e9
0x79df: add rsp,0x48
0x79e3: ret 
0x79e4: call 0x19c0
0x79e9: call 0x1ab0
0x79ee: nop 
0x79f0: sub rsp,0x48
0x79f4: mov rax,rdx
0x79f7: mov rdx,rcx
0x79fa: mov rcx,qword ptr fs:0x28
0x7a03: mov qword ptr [rsp+0x38],rcx
0x7a08: xor ecx,ecx
0x7a0a: cmp esi,0xa
0x7a0d: je 0x7a70
0x7a0f: mov dword ptr [rsp],esi
0x7a12: mov rcx,rsp
0x7a15: mov rsi,rax
0x7a18: mov qword ptr [rsp+0x4],0x0
0x7a21: mov qword ptr [rsp+0xc],0x0
0x7a2a: mov qword ptr [rsp+0x14],0x0
0x7a33: mov qword ptr [rsp+0x1c],0x0
0x7a3c: mov qword ptr [rsp+0x24],0x0
0x7a45: mov qword ptr [rsp+0x2c],0x0
0x7a4e: mov dword ptr [rsp+0x34],0x0
0x7a56: call 0x7410
0x7a5b: mov rdx,qword ptr [rsp+0x38]
0x7a60: xor rdx,qword ptr fs:0x28
0x7a69: jne 0x7a75
0x7a6b: add rsp,0x48
0x7a6f: ret 
0x7a70: call 0x19c0
0x7a75: call 0x1ab0
0x7a7a: nop word ptr [rax+rax]
0x7a80: mov rdx,rsi
0x7a83: mov esi,edi
0x7a85: xor edi,edi
0x7a87: jmp 0x7960
0x7a90: mov rcx,rdx
0x7a93: mov rdx,rsi
0x7a96: mov esi,edi
0x7a98: xor edi,edi
0x7a9a: jmp 0x79f0
0x7aa0: sub rsp,0x48
0x7aa4: mov ecx,edx
0x7aa6: mov rax,qword ptr fs:0x28
0x7aaf: mov qword ptr [rsp+0x38],rax
0x7ab4: xor eax,eax
0x7ab6: mov rax,qword ptr [rip+0x206833]
0x7abd: mov r8,rsp
0x7ac0: and ecx,0x1f
0x7ac3: movdqa xmm0,[rip+0x2067f5]
0x7acb: mov qword ptr [rsp+0x30],rax
0x7ad0: mov eax,edx
0x7ad2: movaps [rsp],xmm0
0x7ad6: shr al,0x5
0x7ad9: movzx eax,al
0x7adc: lea r9,[r8+rax*4+0x8]
0x7ae1: movdqa xmm0,[rip+0x2067e7]
0x7ae9: movaps [rsp+0x10],xmm0
0x7aee: movdqa xmm0,[rip+0x2067ea]
0x7af6: movaps [rsp+0x20],xmm0
0x7afb: mov edx,dword ptr [r9]
0x7afe: mov eax,edx
0x7b00: shr eax,cl
0x7b02: not eax
0x7b04: and eax,0x1
0x7b07: shl eax,cl
0x7b09: mov rcx,r8
0x7b0c: xor eax,edx
0x7b0e: mov rdx,rsi
0x7b11: mov rsi,rdi
0x7b14: mov dword ptr [r9],eax
0x7b17: xor edi,edi
0x7b19: call 0x7410
0x7b1e: mov rsi,qword ptr [rsp+0x38]
0x7b23: xor rsi,qword ptr fs:0x28
0x7b2c: jne 0x7b33
0x7b2e: add rsp,0x48
0x7b32: ret 
0x7b33: call 0x1ab0
0x7b38: nop dword ptr [rax+rax]
0x7b40: movsx edx,sil
0x7b44: mov rsi,-0x1
0x7b4b: jmp 0x7aa0
0x7b50: mov edx,0x3a
0x7b55: mov rsi,-0x1
0x7b5c: jmp 0x7aa0
0x7b70: mov edx,0x3a
0x7b75: jmp 0x7aa0
0x7b80: sub rsp,0x48
0x7b84: mov rax,rdx
0x7b87: mov rdx,qword ptr fs:0x28
0x7b90: mov qword ptr [rsp+0x38],rdx
0x7b95: xor edx,edx
0x7b97: cmp esi,0xa
0x7b9a: je 0x7c04
0x7b9c: mov dword ptr [rsp],esi
0x7b9f: mov rcx,rsp
0x7ba2: mov rdx,-0x1
0x7ba9: mov rsi,rax
0x7bac: mov qword ptr [rsp+0x4],0x0
0x7bb5: mov qword ptr [rsp+0xc],0x4000000
0x7bbe: mov qword ptr [rsp+0x14],0x0
0x7bc7: mov qword ptr [rsp+0x1c],0x0
0x7bd0: mov qword ptr [rsp+0x24],0x0
0x7bd9: mov qword ptr [rsp+0x2c],0x0
0x7be2: mov dword ptr [rsp+0x34],0x0
0x7bea: call 0x7410
0x7bef: mov rcx,qword ptr [rsp+0x38]
0x7bf4: xor rcx,qword ptr fs:0x28
0x7bfd: jne 0x7c09
0x7bff: add rsp,0x48
0x7c03: ret 
0x7c04: call 0x19c0
0x7c09: call 0x1ab0
0x7c0e: nop 
0x7c10: sub rsp,0x48
0x7c14: mov r9,rcx
0x7c17: mov rcx,qword ptr [rip+0x2066d2]
0x7c1e: movdqa xmm0,[rip+0x20669a]
0x7c26: mov rax,qword ptr fs:0x28
0x7c2f: mov qword ptr [rsp+0x38],rax
0x7c34: xor eax,eax
0x7c36: movaps [rsp],xmm0
0x7c3a: test rsi,rsi
0x7c3d: mov qword ptr [rsp+0x30],rcx
0x7c42: mov dword ptr [rsp],0xa
0x7c49: movdqa xmm0,[rip+0x20667f]
0x7c51: movaps [rsp+0x10],xmm0
0x7c56: movdqa xmm0,[rip+0x206682]
0x7c5e: movaps [rsp+0x20],xmm0
0x7c63: je 0x7c97
0x7c65: test rdx,rdx
0x7c68: je 0x7c97
0x7c6a: mov qword ptr [rsp+0x28],rsi
0x7c6f: mov qword ptr [rsp+0x30],rdx
0x7c74: mov rcx,rsp
0x7c77: mov rdx,r8
0x7c7a: mov rsi,r9
0x7c7d: call 0x7410
0x7c82: mov rdi,qword ptr [rsp+0x38]
0x7c87: xor rdi,qword ptr fs:0x28
0x7c90: jne 0x7c9c
0x7c92: add rsp,0x48
0x7c96: ret 
0x7c97: call 0x19c0
0x7c9c: call 0x1ab0
0x7ca1: nop dword ptr [rax+rax]
0x7ca6: nop word ptr cs:[rax+rax]
0x7cb0: mov r8,-0x1
0x7cb7: jmp 0x7c10
0x7cc0: mov rcx,rdx
0x7cc3: mov r8,-0x1
0x7cca: mov rdx,rsi
0x7ccd: mov rsi,rdi
0x7cd0: xor edi,edi
0x7cd2: jmp 0x7c10
0x7ce0: mov r8,rcx
0x7ce3: mov rcx,rdx
0x7ce6: mov rdx,rsi
0x7ce9: mov rsi,rdi
0x7cec: xor edi,edi
0x7cee: jmp 0x7c10
0x7d00: lea rcx,[rip+0x206359]
0x7d07: jmp 0x7410
0x7d10: lea rcx,[rip+0x206349]
0x7d17: mov rdx,rsi
0x7d1a: mov rsi,rdi
0x7d1d: xor edi,edi
0x7d1f: jmp 0x7410
0x7ea8: mov r8,rcx
0x7eab: mov rcx,rdx
0x7eae: lea rdx,[rip+0x3a7f]
0x7eb5: mov esi,0x1
0x7eba: xor eax,eax
0x7ebc: call 0x1ce0
0x7ec1: jmp 0x7dac
0x80bd: push r12
0x80bf: push r15
0x80c1: push r14
0x80c3: mov r8,qword ptr [rsp+0x20]
0x80c8: mov rcx,rbx
0x80cb: mov rdx,rax
0x80ce: mov rdi,rbp
0x80d1: mov esi,0x1
0x80d6: xor eax,eax
0x80d8: call 0x1ce0
0x80dd: add rsp,0x20
0x80e1: add rsp,0x28
0x80e5: pop rbx
0x80e6: pop rbp
0x80e7: pop r12
0x80e9: pop r13
0x80eb: pop r14
0x80ed: pop r15
0x80ef: ret 
0x8129: push r12
0x812b: push r15
0x812d: push r14
0x812f: mov r9,qword ptr [rsp+0x28]
0x8134: jmp 0x80c3
0x8190: xor r9d,r9d
0x8193: cmp qword ptr [r8],0x0
0x8197: je 0x81ab
0x8199: nop dword ptr [rax]
0x81a0: add r9,0x1
0x81a4: cmp qword ptr [r8+r9*8],0x0
0x81a9: jne 0x81a0
0x81ab: jmp 0x7d70
0x81b0: sub rsp,0x68
0x81b4: mov r10,r8
0x81b7: xor r9d,r9d
0x81ba: mov rax,qword ptr fs:0x28
0x81c3: mov qword ptr [rsp+0x58],rax
0x81c8: xor eax,eax
0x81ca: mov r8,rsp
0x81cd: nop dword ptr [rax]
0x81d0: mov eax,dword ptr [r10]
0x81d3: cmp eax,0x2f
0x81d6: ja 0x821a
0x81d8: mov r11d,eax
0x81db: add r11,qword ptr [r10+0x10]
0x81df: add eax,0x8
0x81e2: mov dword ptr [r10],eax
0x81e5: mov rax,qword ptr [r11]
0x81e8: test rax,rax
0x81eb: mov qword ptr [r8+r9*8],rax
0x81ef: je 0x81fb
0x81f1: add r9,0x1
0x81f5: cmp r9,0xa
0x81f9: jne 0x81d0
0x81fb: call 0x7d70
0x8200: mov rax,qword ptr [rsp+0x58]
0x8205: xor rax,qword ptr fs:0x28
0x820e: jne 0x8215
0x8210: add rsp,0x68
0x8214: ret 
0x8215: call 0x1ab0
0x821a: mov r11,qword ptr [r10+0x8]
0x821e: lea rax,[r11+0x8]
0x8222: mov qword ptr [r10+0x8],rax
0x8226: jmp 0x81e5
0x82f0: call 0x1ab0
0x82fc: mov rax,rbx
0x82ff: add rbx,0x8
0x8303: jmp 0x82b6
0x8310: push rbx
0x8311: lea rsi,[rip+0x366a]
0x8318: mov edx,0x5
0x831d: xor edi,edi
0x831f: call 0x1a80
0x8324: lea rdx,[rip+0x366c]
0x832b: mov rsi,rax
0x832e: mov edi,0x1
0x8333: xor eax,eax
0x8335: call 0x1c50
0x833a: lea rsi,[rip+0x366c]
0x8341: mov edx,0x5
0x8346: xor edi,edi
0x8348: call 0x1a80
0x834d: lea rcx,[rip+0x29a4]
0x8354: lea rdx,[rip+0x12ec]
0x835b: mov rsi,rax
0x835e: mov edi,0x1
0x8363: xor eax,eax
0x8365: call 0x1c50
0x836a: mov rbx,qword ptr [rip+0x205d57]
0x8371: lea rsi,[rip+0x3868]
0x8378: xor edi,edi
0x837a: mov edx,0x5
0x837f: call 0x1a80
0x8384: mov rsi,rbx
0x8387: mov rdi,rax
0x838a: pop rbx
0x838b: jmp 0x1b80
0x83aa: nop word ptr [rax+rax]
0x83b0: mov rax,rdi
0x83b3: mul rsi
0x83b6: mov rdi,rax
0x83b9: seto al
0x83bc: test rdi,rdi
0x83bf: js 0x83cb
0x83c1: movzx eax,al
0x83c4: test rax,rax
0x83c7: jne 0x83cb
0x83c9: jmp 0x8390
0x83cb: sub rsp,0x8
0x83cf: call 0x85e0
0x83d4: nop 
0x83d6: nop word ptr cs:[rax+rax]
0x83e0: jmp 0x8390
0x8426: nop word ptr cs:[rax+rax]
0x8430: mov rax,rsi
0x8433: mul rdx
0x8436: mov rsi,rax
0x8439: seto al
0x843c: test rsi,rsi
0x843f: js 0x844b
0x8441: movzx eax,al
0x8444: test rax,rax
0x8447: jne 0x844b
0x8449: jmp 0x83f0
0x844b: sub rsp,0x8
0x844f: call 0x85e0
0x8454: nop 
0x8456: nop word ptr cs:[rax+rax]
0x8460: test rdi,rdi
0x8463: mov r9,rdx
0x8466: mov rcx,qword ptr [rsi]
0x8469: je 0x84a0
0x846b: xor edx,edx
0x846d: movabsq rax,0x5555555555555554
0x8477: div r9
0x847a: cmp rax,rcx
0x847d: jbe 0x84bb
0x847f: mov rax,rcx
0x8482: shr rax, 1
0x8485: lea rcx,[rax+rcx+0x1]
0x848a: mov qword ptr [rsi],rcx
0x848d: imul rcx,r9
0x8491: mov rsi,rcx
0x8494: jmp 0x83f0
0x84a0: test rcx,rcx
0x84a3: je 0x84c8
0x84a5: mov rax,rcx
0x84a8: mul r9
0x84ab: seto dl
0x84ae: test rax,rax
0x84b1: movzx edx,dl
0x84b4: js 0x84bb
0x84b6: test rdx,rdx
0x84b9: je 0x848a
0x84bb: sub rsp,0x8
0x84bf: call 0x85e0
0x84c4: nop dword ptr [rax]
0x84c8: xor edx,edx
0x84ca: mov eax,0x80
0x84cf: xor r8d,r8d
0x84d2: div r9
0x84d5: test rax,rax
0x84d8: sete r8b
0x84dc: lea rcx,[r8+rax]
0x84e0: jmp 0x84a5
0x84f0: test rdi,rdi
0x84f3: mov rax,qword ptr [rsi]
0x84f6: je 0x8520
0x84f8: movabsq rdx,0x5555555555555553
0x8502: cmp rax,rdx
0x8505: ja 0x8531
0x8507: mov rdx,rax
0x850a: shr rdx, 1
0x850d: lea rax,[rdx+rax+0x1]
0x8512: mov qword ptr [rsi],rax
0x8515: mov rsi,rax
0x8518: jmp 0x83f0
0x8520: test rax,rax
0x8523: mov edx,0x80
0x8528: cmove rax,rdx
0x852c: test rax,rax
0x852f: jns 0x8512
0x8531: sub rsp,0x8
0x8535: call 0x85e0
0x853a: nop word ptr [rax+rax]
0x8540: push rbx
0x8541: mov rbx,rdi
0x8544: call 0x8390
0x8549: mov rdx,rbx
0x854c: xor esi,esi
0x854e: mov rdi,rax
0x8551: pop rbx
0x8552: jmp 0x1b40
0x8560: mov rax,rdi
0x8563: sub rsp,0x8
0x8567: mul rsi
0x856a: seto dl
0x856d: test rax,rax
0x8570: js 0x8589
0x8572: movzx edx,dl
0x8575: test rdx,rdx
0x8578: jne 0x8589
0x857a: call 0x1b90
0x857f: test rax,rax
0x8582: je 0x8589
0x8584: add rsp,0x8
0x8588: ret 
0x8589: call 0x85e0
0x858e: nop 
0x8610: call 0x19c0
0x8615: nop word ptr cs:[rax+rax]
0x861f: nop 
0x8638: nop dword ptr [rax+rax]
0x86f0: cmp eax,0x22
0x86f3: mov r12d,0x4
0x86f9: jne 0x86c7
0x86fb: mov r12d,0x1
0x8701: jmp 0x86b2
0x8ba0: mov r12d,0x4
0x8ba6: jmp 0x86c7
0x8ccf: lea rcx,[rip+0x30ea]
0x8cd6: lea rsi,[rip+0x2fc3]
0x8cdd: lea rdi,[rip+0x2fdc]
0x8ce4: mov edx,0x54
0x8ce9: call 0x1b20
0x8cee: call 0x1ab0
0x8cf3: nop word ptr cs:[rax+rax]
0x8cfd: nop dword ptr [rax]
0x8da6: cmp eax,0x22
0x8da9: mov ebp,0x1
0x8dae: jne 0x8dd8
0x8f00: movsxd rdi,edi
0x8f03: mov eax,ebp
0x8f05: add rcx,rdi
0x8f08: or eax,0x2
0x8f0b: mov qword ptr [r15],rcx
0x8f0e: cmp byte ptr [rcx],0x0
0x8f11: mov qword ptr [r14],rbx
0x8f14: cmovne ebp,eax
0x8f17: jmp 0x8ddd
0x8f75: or ebp,r9d
0x8f78: jmp 0x8f00
0x900c: mov rax,rbx
0x900f: mul rsi
0x9012: mov rbx,rax
0x9015: jo 0x90a4
0x901b: sub r8d,0x1
0x901f: jne 0x900c
0x9021: jmp 0x8f75
0x9080: call 0x1ab0
0x9085: lea rcx,[rip+0x2e14]
0x908c: lea rsi,[rip+0x2c0d]
0x9093: lea rdi,[rip+0x2c26]
0x909a: mov edx,0x54
0x909f: call 0x1b20
0x90a4: mov r9d,0x1
0x90aa: or rbx,-0x1
0x90ae: jmp 0x901b
0x9120: push r13
0x9122: push r12
0x9124: mov r13,rsi
0x9127: push rbp
0x9128: push rbx
0x9129: mov rbx,rdi
0x912c: mov r12,rdx
0x912f: sub rsp,0x18
0x9133: mov rax,qword ptr fs:0x28
0x913c: mov qword ptr [rsp+0x8],rax
0x9141: xor eax,eax
0x9143: lea rax,[rsp+0x4]
0x9148: test rdi,rdi
0x914b: cmove rbx,rax
0x914f: mov rdi,rbx
0x9152: call 0x1ad0
0x9157: cmp rax,-0x3
0x915b: mov rbp,rax
0x915e: jbe 0x9180
0x9160: test r12,r12
0x9163: je 0x9180
0x9165: xor edi,edi
0x9167: call 0x9230
0x916c: test al,al
0x916e: jne 0x9180
0x9170: movzx eax,byte ptr [r13]
0x9175: mov ebp,0x1
0x917a: mov dword ptr [rbx],eax
0x917c: nop dword ptr [rax]
0x9180: mov rdx,qword ptr [rsp+0x8]
0x9185: xor rdx,qword ptr fs:0x28
0x918e: mov rax,rbp
0x9191: jne 0x919e
0x9193: add rsp,0x18
0x9197: pop rbx
0x9198: pop rbp
0x9199: pop r12
0x919b: pop r13
0x919d: ret 
0x919e: call 0x1ab0
0x91a3: nop word ptr cs:[rax+rax]
0x91ad: nop dword ptr [rax]
0x91b0: push r12
0x91b2: push rbp
0x91b3: mov rbp,rdi
0x91b6: push rbx
0x91b7: call 0x1a10
0x91bc: mov ebx,dword ptr [rbp]
0x91bf: mov rdi,rbp
0x91c2: mov r12,rax
0x91c5: call 0x92d0
0x91ca: and ebx,0x20
0x91cd: test ebx,ebx
0x91cf: jne 0x91e8
0x91d1: test eax,eax
0x91d3: je 0x91df
0x91d5: test r12,r12
0x91d8: mov eax,0xffffffff
0x91dd: je 0x9218
0x91df: pop rbx
0x91e0: pop rbp
0x91e1: pop r12
0x91e3: ret 
0x91e8: test eax,eax
0x91ea: jne 0x9208
0x91ec: call 0x19d0
0x91f1: mov dword ptr [rax],0x0
0x91f7: mov eax,0xffffffff
0x91fc: pop rbx
0x91fd: pop rbp
0x91fe: pop r12
0x9200: ret 
0x9208: pop rbx
0x9209: mov eax,0xffffffff
0x920e: pop rbp
0x920f: pop r12
0x9211: ret 
0x9218: call 0x19d0
0x921d: cmp dword ptr [rax],0x9
0x9220: pop rbx
0x9221: pop rbp
0x9222: pop r12
0x9224: setne al
0x9227: movzx eax,al
0x922a: neg eax
0x922c: ret 
0x9230: sub rsp,0x8
0x9234: xor esi,esi
0x9236: call 0x1c40
0x923b: mov rdx,rax
0x923e: mov eax,0x1
0x9243: test rdx,rdx
0x9246: je 0x9265
0x9248: lea rdi,[rip+0x2c5c]
0x924f: mov ecx,0x2
0x9254: mov rsi,rdx
0x9257: rep cmpsb [rsi],es:[rdi]
0x9259: seta cl
0x925c: sbb cl,0x0
0x925f: xor eax,eax
0x9261: test cl,cl
0x9263: jne 0x9270
0x9265: add rsp,0x8
0x9269: ret 
0x9270: lea rdi,[rip+0x2c36]
0x9277: mov ecx,0x6
0x927c: mov rsi,rdx
0x927f: rep cmpsb [rsi],es:[rdi]
0x9281: seta al
0x9284: sbb al,0x0
0x9286: test al,al
0x9288: setne al
0x928b: add rsp,0x8
0x928f: ret 
0x9290: sub rsp,0x8
0x9294: mov edi,0xe
0x9299: call 0x1c10
0x929e: test rax,rax
0x92a1: je 0x92c0
0x92a3: cmp byte ptr [rax],0x0
0x92a6: lea rdx,[rip+0x2c06]
0x92ad: cmove rax,rdx
0x92b1: add rsp,0x8
0x92b5: ret 
0x92c0: lea rax,[rip+0x2bec]
0x92c7: add rsp,0x8
0x92cb: ret 
0x92d0: push r12
0x92d2: push rbp
0x92d3: push rbx
0x92d4: mov rbx,rdi
0x92d7: call 0x1bd0
0x92dc: test eax,eax
0x92de: mov rdi,rbx
0x92e1: js 0x9337
0x92e3: call 0x1c20
0x92e8: test eax,eax
0x92ea: jne 0x9318
0x92ec: mov rdi,rbx
0x92ef: call 0x9350
0x92f4: test eax,eax
0x92f6: je 0x9334
0x92f8: call 0x19d0
0x92fd: mov r12d,dword ptr [rax]
0x9300: mov rdi,rbx
0x9303: mov rbp,rax
0x9306: call 0x1a60
0x930b: test r12d,r12d
0x930e: jne 0x9340
0x9310: pop rbx
0x9311: pop rbp
0x9312: pop r12
0x9314: ret 
0x9318: mov rdi,rbx
0x931b: call 0x1bd0
0x9320: xor esi,esi
0x9322: mov edx,0x1
0x9327: mov edi,eax
0x9329: call 0x1b10
0x932e: cmp rax,-0x1
0x9332: jne 0x92ec
0x9334: mov rdi,rbx
0x9337: pop rbx
0x9338: pop rbp
0x9339: pop r12
0x933b: jmp 0x1a60
0x9340: mov dword ptr [rbp],r12d
0x9344: mov eax,0xffffffff
0x9349: jmp 0x9310
0x9350: test rdi,rdi
0x9353: push rbx
0x9354: mov rbx,rdi
0x9357: je 0x936a
0x9359: call 0x1c20
0x935e: test eax,eax
0x9360: je 0x936a
0x9362: test dword ptr [rbx],0x100
0x9368: jne 0x9378
0x936a: mov rdi,rbx
0x936d: pop rbx
0x936e: jmp 0x1c00
0x9378: mov rdi,rbx
0x937b: mov edx,0x1
0x9380: xor esi,esi
0x9382: call 0x9390
0x9387: mov rdi,rbx
0x938a: pop rbx
0x938b: jmp 0x1c00
0x9390: mov rax,qword ptr [rdi+0x8]
0x9394: cmp qword ptr [rdi+0x10],rax
0x9398: je 0x93a0
0x939a: jmp 0x1c90
0x93a0: mov rax,qword ptr [rdi+0x20]
0x93a4: cmp qword ptr [rdi+0x28],rax
0x93a8: jne 0x939a
0x93aa: cmp qword ptr [rdi+0x48],0x0
0x93af: jne 0x939a
0x93b1: push r12
0x93b3: push rbp
0x93b4: mov r12d,edx
0x93b7: push rbx
0x93b8: mov rbp,rsi
0x93bb: mov rbx,rdi
0x93be: call 0x1bd0
0x93c3: mov edx,r12d
0x93c6: mov rsi,rbp
0x93c9: mov edi,eax
0x93cb: call 0x1b10
0x93d0: cmp rax,-0x1
0x93d4: je 0x93e2
0x93d6: and dword ptr [rbx],-0x11
0x93d9: mov qword ptr [rbx+0x90],rax
0x93e0: xor eax,eax
0x93e2: pop rbx
0x93e3: pop rbp
0x93e4: pop r12
0x93e6: ret 
0x93f0: push r15
0x93f2: push r14
0x93f4: mov r15,rdx
0x93f7: push r13
0x93f9: push r12
0x93fb: lea r12,[rip+0x20442e]
0x9402: push rbp
0x9403: lea rbp,[rip+0x20442e]
0x940a: push rbx
0x940b: mov r13d,edi
0x940e: mov r14,rsi
0x9411: sub rbp,r12
0x9414: sub rsp,0x8
0x9418: sar rbp,0x3
0x941c: call 0x1970
0x9421: test rbp,rbp
0x9424: je 0x9446
0x9426: xor ebx,ebx
0x9428: nop dword ptr [rax+rax]
0x9430: mov rdx,r15
0x9433: mov rsi,r14
0x9436: mov edi,r13d
0x9439: call qword ptr [r12+rbx*8]
0x943d: add rbx,0x1
0x9441: cmp rbp,rbx
0x9444: jne 0x9430
0x9446: add rsp,0x8
0x944a: pop rbx
0x944b: pop rbp
0x944c: pop r12
0x944e: pop r13
0x9450: pop r14
0x9452: pop r15
0x9454: ret 
0x9460: rep ret 
0xb4d7: jmp qword ptr [rip+0x6affffba]
