0x1860: sub rsp,0x8
0x1864: mov rax,qword ptr [rip+0x20c76d]
0x186b: test rax,rax
0x186e: je 0x1872
0x1870: call rax
0x1872: add rsp,0x8
0x1876: ret 
0x1886: jmp qword ptr [rip+0x20c52c]
0x18c0: jmp qword ptr [rip+0x20c512]
0x18e0: jmp qword ptr [rip+0x20c502]
0x1920: jmp qword ptr [rip+0x20c4e2]
0x19a0: jmp qword ptr [rip+0x20c4a2]
0x19c0: jmp qword ptr [rip+0x20c492]
0x19f0: jmp qword ptr [rip+0x20c47a]
0x1a70: jmp qword ptr [rip+0x20c43a]
0x1aa0: jmp qword ptr [rip+0x20c422]
0x1ad0: jmp qword ptr [rip+0x20c40a]
0x1b10: jmp qword ptr [rip+0x20c3ea]
0x1b20: jmp qword ptr [rip+0x20c3e2]
0x1b40: jmp qword ptr [rip+0x20c3d2]
0x1be0: jmp qword ptr [rip+0x20c382]
0x1c50: jmp qword ptr [rip+0x20c34a]
0x1c60: jmp qword ptr [rip+0x20c342]
0x1c70: jmp qword ptr [rip+0x20c33a]
0x1c98: jmp qword ptr [rip+0x20c34a]
0x1fd7: cmp byte ptr [rip+0x20c113],0x0
0x1fde: jne 0x1ff0
0x1fe0: mov edx,0x4
0x1fe5: mov rsi,r13
0x1fe8: mov rdi,r12
0x1feb: call 0x7760
0x1ff0: mov rdi,r12
0x1ff3: and ebx,r15d
0x1ff6: call 0x6fe0
0x1ffb: test rax,rax
0x1ffe: mov r13,rax
0x2001: jne 0x1f70
0x20ce: test al,al
0x20d0: mov rdx,rcx
0x20d3: mov qword ptr [rsp+0x18],rcx
0x20d8: mov rsi,r15
0x20db: je 0x233d
0x20e1: call 0x7aa0
0x20e6: mov rcx,qword ptr [rsp+0x18]
0x20eb: test eax,eax
0x20ed: jne 0x23a7
0x20f3: movzx r15d,byte ptr [rsp+0x17]
0x20f9: jmp 0x1fd7
0x22a5: lea rsi,[rip+0x84f4]
0x22ac: xor edi,edi
0x22ae: mov edx,0x5
0x22b3: mov qword ptr [rsp+0x18],rax
0x22b8: call 0x1940
0x22bd: mov rdx,qword ptr [rsp+0x18]
0x22c2: mov rsi,rax
0x22c5: mov edi,0x1
0x22ca: xor eax,eax
0x22cc: call 0x1b80
0x22d1: jmp 0x20a9
0x2301: mov dword ptr [rbp],0x5f
0x2308: call 0x4af0
0x230d: lea rsi,[rip+0x84ec]
0x2314: mov r15,rax
0x2317: mov edx,0x5
0x231c: xor edi,edi
0x231e: call 0x1940
0x2323: mov esi,dword ptr [rbp]
0x2326: mov rcx,r15
0x2329: mov rdx,rax
0x232c: xor edi,edi
0x232e: xor eax,eax
0x2330: xor r15d,r15d
0x2333: call 0x1ba0
0x2338: jmp 0x1fd7
0x233d: call 0x7ab0
0x2342: mov rcx,qword ptr [rsp+0x18]
0x2347: jmp 0x20eb
0x23a2: jmp 0x1df7
0x23a7: mov rsi,rcx
0x23aa: mov edi,0x1
0x23af: call 0x4ad0
0x23b4: mov rdx,r15
0x23b7: mov esi,0x4
0x23bc: xor edi,edi
0x23be: mov qword ptr [rsp+0x18],rax
0x23c3: call 0x4700
0x23c8: lea rsi,[rip+0x8459]
0x23cf: mov edx,0x5
0x23d4: xor edi,edi
0x23d6: mov r15,rax
0x23d9: call 0x1940
0x23de: mov r8,qword ptr [rsp+0x18]
0x23e3: mov esi,dword ptr [rbp]
0x23e6: mov rcx,r15
0x23e9: mov rdx,rax
0x23ec: xor edi,edi
0x23ee: xor eax,eax
0x23f0: xor r15d,r15d
0x23f3: call 0x1ba0
0x23f8: jmp 0x1fd7
0x242b: jmp 0x2011
0x2447: mov edx,0x5
0x244c: mov r15,rax
0x244f: lea rsi,[rip+0x819a]
0x2456: jmp 0x231c
0x2531: lea rsi,[rip+0x80e0]
0x2538: mov edx,0x5
0x253d: xor edi,edi
0x253f: mov rbx,rax
0x2542: call 0x1940
0x2547: mov esi,dword ptr [rbp]
0x254a: mov rdx,rax
0x254d: mov rcx,rbx
0x2550: mov edi,0x1
0x2555: xor eax,eax
0x2557: call 0x1ba0
0x2569: lea rsi,[rip+0x8258]
0x2570: mov r15,rax
0x2573: mov edx,0x5
0x2578: xor edi,edi
0x257a: call 0x1940
0x257f: mov rcx,r15
0x2582: mov rdx,rax
0x2585: xor esi,esi
0x2587: xor edi,edi
0x2589: xor eax,eax
0x258b: xor r15d,r15d
0x258e: call 0x1ba0
0x2593: jmp 0x1fd7
0x267e: lea rsi,[rip+0x7f6b]
0x2685: mov edx,0x5
0x268a: xor edi,edi
0x268c: mov rbx,rax
0x268f: call 0x1940
0x2694: mov esi,dword ptr [rbp]
0x2697: mov rdx,rax
0x269a: mov rcx,rbx
0x269d: mov edi,0x1
0x26a2: xor eax,eax
0x26a4: call 0x1ba0
0x26d4: lea rsi,[rip+0x760f]
0x26db: mov edx,0x5
0x26e0: xor edi,edi
0x26e2: mov rbp,rax
0x26e5: call 0x1940
0x26ea: mov esi,dword ptr [rbx]
0x26ec: mov rdx,rax
0x26ef: mov rcx,rbp
0x26f2: mov edi,0x1
0x26f7: xor eax,eax
0x26f9: call 0x1ba0
0x2722: call 0x19a0
0x2755: lea rsi,[rip+0x7575]
0x275c: mov rbx,rax
0x275f: xor edi,edi
0x2761: mov edx,0x5
0x2766: call 0x1940
0x276b: mov rcx,rbx
0x276e: mov rdx,rax
0x2771: xor esi,esi
0x2773: xor edi,edi
0x2775: xor eax,eax
0x2777: call 0x1ba0
0x277c: jmp 0x1df7
0x27ba: hlt 
0x27bb: nop dword ptr [rax+rax]
0x27c0: lea rdi,[rip+0x20b8b9]
0x27c7: push rbp
0x27c8: lea rax,[rip+0x20b8b1]
0x27cf: cmp rax,rdi
0x27d2: mov rbp,rsp
0x27d5: je 0x27f0
0x27d7: mov rax,qword ptr [rip+0x20b7ea]
0x27de: test rax,rax
0x27e1: je 0x27f0
0x27e3: pop rbp
0x27e4: jmp rax
0x27f0: pop rbp
0x27f1: ret 
0x2800: lea rdi,[rip+0x20b879]
0x2807: lea rsi,[rip+0x20b872]
0x280e: push rbp
0x280f: sub rsi,rdi
0x2812: mov rbp,rsp
0x2815: sar rsi,0x3
0x2819: mov rax,rsi
0x281c: shr rax,0x3f
0x2820: add rsi,rax
0x2823: sar rsi, 1
0x2826: je 0x2840
0x2828: mov rax,qword ptr [rip+0x20b7b1]
0x282f: test rax,rax
0x2832: je 0x2840
0x2834: pop rbp
0x2835: jmp rax
0x2840: pop rbp
0x2841: ret 
0x2861: push rbp
0x2862: mov rbp,rsp
0x2865: je 0x2873
0x2867: mov rdi,qword ptr [rip+0x20b79a]
0x286e: call 0x1c98
0x2873: call 0x27c0
0x2878: mov byte ptr [rip+0x20b849],0x1
0x287f: pop rbp
0x2880: ret 
0x2890: push rbp
0x2891: mov rbp,rsp
0x2894: pop rbp
0x2895: jmp 0x2800
0x2d10: mov qword ptr [rip+0x20b3e9],rdi
0x2d17: ret 
0x2d20: mov byte ptr [rip+0x20b3d1],dil
0x2d27: ret 
0x2d30: push rbp
0x2d31: push rbx
0x2d32: sub rsp,0x8
0x2d36: mov rdi,qword ptr [rip+0x20b34b]
0x2d3d: call 0x7ac0
0x2d42: test eax,eax
0x2d44: je 0x2d5c
0x2d46: call 0x18a0
0x2d4b: cmp byte ptr [rip+0x20b3a6],0x0
0x2d52: mov rbx,rax
0x2d55: je 0x2d73
0x2d57: cmp dword ptr [rax],0x20
0x2d5a: jne 0x2d73
0x2d5c: mov rdi,qword ptr [rip+0x20b35d]
0x2d63: call 0x7ac0
0x2d68: test eax,eax
0x2d6a: jne 0x2db2
0x2d6c: add rsp,0x8
0x2d70: pop rbx
0x2d71: pop rbp
0x2d72: ret 
0x2d73: lea rsi,[rip+0x7b07]
0x2d7a: xor edi,edi
0x2d7c: mov edx,0x5
0x2d81: call 0x1940
0x2d86: mov rdi,qword ptr [rip+0x20b373]
0x2d8d: mov rbp,rax
0x2d90: test rdi,rdi
0x2d93: je 0x2dbd
0x2d95: call 0x48f0
0x2d9a: mov esi,dword ptr [rbx]
0x2d9c: lea rdx,[rip+0x7aea]
0x2da3: mov rcx,rax
0x2da6: mov r8,rbp
0x2da9: xor edi,edi
0x2dab: xor eax,eax
0x2dad: call 0x1ba0
0x2db2: mov edi,dword ptr [rip+0x20b260]
0x2db8: call 0x18c0
0x2dbd: mov esi,dword ptr [rbx]
0x2dbf: lea rdx,[rip+0x7acb]
0x2dc6: mov rcx,rax
0x2dc9: xor edi,edi
0x2dcb: xor eax,eax
0x2dcd: call 0x1ba0
0x2dd2: jmp 0x2db2
0x2e7f: nop 
0x2e80: push rbp
0x2e81: push rbx
0x2e82: mov rbp,rdi
0x2e85: mov ebx,esi
0x2e87: sub rsp,0x8
0x2e8b: call 0x9040
0x2e90: movzx edx,byte ptr [rax]
0x2e93: and edx,-0x21
0x2e96: cmp dl,0x55
0x2e99: je 0x2f10
0x2e9b: cmp dl,0x47
0x2e9e: je 0x2ec0
0x2ea0: lea rax,[rip+0x7a44]
0x2ea7: lea rdx,[rip+0x84ad]
0x2eae: cmp ebx,0x9
0x2eb1: cmovne rax,rdx
0x2eb5: add rsp,0x8
0x2eb9: pop rbx
0x2eba: pop rbp
0x2ebb: ret 
0x2ec0: movzx edx,byte ptr [rax+0x1]
0x2ec4: and edx,-0x21
0x2ec7: cmp dl,0x42
0x2eca: jne 0x2ea0
0x2ecc: cmp byte ptr [rax+0x2],0x31
0x2ed0: jne 0x2ea0
0x2ed2: cmp byte ptr [rax+0x3],0x38
0x2ed6: jne 0x2ea0
0x2ed8: cmp byte ptr [rax+0x4],0x30
0x2edc: jne 0x2ea0
0x2ede: cmp byte ptr [rax+0x5],0x33
0x2ee2: jne 0x2ea0
0x2ee4: cmp byte ptr [rax+0x6],0x30
0x2ee8: jne 0x2ea0
0x2eea: cmp byte ptr [rax+0x7],0x0
0x2eee: jne 0x2ea0
0x2ef0: cmp byte ptr [rbp],0x60
0x2ef4: lea rax,[rip+0x79e9]
0x2efb: lea rdx,[rip+0x79e6]
0x2f02: cmovne rax,rdx
0x2f06: add rsp,0x8
0x2f0a: pop rbx
0x2f0b: pop rbp
0x2f0c: ret 
0x2f10: movzx edx,byte ptr [rax+0x1]
0x2f14: and edx,-0x21
0x2f17: cmp dl,0x54
0x2f1a: jne 0x2ea0
0x2f1c: movzx edx,byte ptr [rax+0x2]
0x2f20: and edx,-0x21
0x2f23: cmp dl,0x46
0x2f26: jne 0x2ea0
0x2f2c: cmp byte ptr [rax+0x3],0x2d
0x2f30: jne 0x2ea0
0x2f36: cmp byte ptr [rax+0x4],0x38
0x2f3a: jne 0x2ea0
0x2f40: cmp byte ptr [rax+0x5],0x0
0x2f44: jne 0x2ea0
0x2f4a: cmp byte ptr [rbp],0x60
0x2f4e: lea rax,[rip+0x7987]
0x2f55: lea rdx,[rip+0x7984]
0x2f5c: cmovne rax,rdx
0x2f60: add rsp,0x8
0x2f64: pop rbx
0x2f65: pop rbp
0x2f66: ret 
0x3043: xor r11d,r11d
0x3046: mov rax,rbp
0x3049: mov r8d,r12d
0x304c: mov rbp,r11
0x304f: mov r11,rax
0x3052: nop word ptr [rax+rax]
0x3058: cmp r11,rbp
0x305b: setne r12b
0x305f: cmp r11,-0x1
0x3063: jne 0x3072
0x3065: mov rax,qword ptr [rsp+0x10]
0x306a: cmp byte ptr [rax+rbp],0x0
0x306e: setne r12b
0x3072: test r12b,r12b
0x3075: je 0x36d0
0x307b: cmp dword ptr [rsp+0x8],0x2
0x3080: mov rdi,qword ptr [rsp+0x10]
0x3085: lea r9,[rdi+rbp]
0x3089: setne al
0x308c: and al,byte ptr [rsp+0xd]
0x3090: mov r10d,eax
0x3093: je 0x3140
0x3099: mov rax,qword ptr [rsp+0x18]
0x309e: test rax,rax
0x30a1: je 0x34d0
0x30a7: cmp r11,-0x1
0x30ab: lea rbx,[rbp+rax]
0x30b0: jne 0x30e0
0x30b2: cmp rax,0x1
0x30b6: jbe 0x30e0
0x30b8: mov byte ptr [rsp+0x38],r8b
0x30bd: mov byte ptr [rsp+0x30],r10b
0x30c2: mov qword ptr [rsp+0x28],r9
0x30c7: call 0x1960
0x30cc: movzx r8d,byte ptr [rsp+0x38]
0x30d2: movzx r10d,byte ptr [rsp+0x30]
0x30d8: mov r11,rax
0x30db: mov r9,qword ptr [rsp+0x28]
0x30e0: cmp rbx,r11
0x30e3: mov byte ptr [rsp+0x28],r10b
0x30e8: ja 0x36a0
0x30ee: mov rdx,qword ptr [rsp+0x18]
0x30f3: mov rsi,qword ptr [rsp+0x48]
0x30f8: mov rdi,r9
0x30fb: mov qword ptr [rsp+0x40],r11
0x3100: mov byte ptr [rsp+0x38],r8b
0x3105: mov qword ptr [rsp+0x30],r9
0x310a: call 0x1a70
0x310f: test eax,eax
0x3111: mov r9,qword ptr [rsp+0x30]
0x3116: movzx r8d,byte ptr [rsp+0x38]
0x311c: mov r11,qword ptr [rsp+0x40]
0x3121: jne 0x36a0
0x3127: cmp byte ptr [rsp+0xf],0x0
0x312c: movzx r10d,byte ptr [rsp+0x28]
0x3132: jne 0x40b5
0x3138: nop dword ptr [rax+rax]
0x3140: movzx ebx,byte ptr [r9]
0x3144: cmp bl,0x7e
0x3147: ja 0x3468
0x314d: lea rcx,[rip+0x7818]
0x3154: movzx edx,bl
0x3157: movsxd rax,dword ptr [rcx+rdx*4]
0x315b: add rax,rcx
0x315e: jmp rax
0x3198: cmp byte ptr [rsp+0xd],0x1
0x319d: jne 0x32b2
0x31a3: test dl,dl
0x31a5: jne 0x32b2
0x31ab: mov rsi,qword ptr [rsp+0x20]
0x31b0: test rsi,rsi
0x31b3: je 0x31c9
0x31b5: mov edx,ebx
0x31b7: shr dl,0x5
0x31ba: movzx edx,dl
0x31bd: mov edx,dword ptr [rsi+rdx*4]
0x31c0: btl edx,ebx
0x31c3: jb 0x3313
0x31c9: test r10b,r10b
0x31cc: jne 0x3313
0x31d2: xor eax,0x1
0x31d5: add rbp,0x1
0x31d9: and eax,r8d
0x31dc: test al,al
0x31de: je 0x3200
0x31e0: cmp r13,r15
0x31e3: jbe 0x31ea
0x31e5: mov byte ptr [r14+r15],0x27
0x31ea: lea rax,[r15+0x1]
0x31ee: cmp r13,rax
0x31f1: jbe 0x31f9
0x31f3: mov byte ptr [r14+r15+0x1],0x27
0x31f9: add r15,0x2
0x31fd: xor r8d,r8d
0x3200: cmp r15,r13
0x3203: jae 0x3209
0x3205: mov byte ptr [r14+r15],bl
0x3209: movzx edi,byte ptr [rsp+0xe]
0x320e: add r15,0x1
0x3212: mov eax,0x0
0x3217: test r12b,r12b
0x321a: cmove edi,eax
0x321d: mov byte ptr [rsp+0xe],dil
0x3222: jmp 0x3058
0x32b2: cmp byte ptr [rsp+0xf],0x0
0x32b7: jne 0x31ab
0x32bd: jmp 0x31c9
0x3313: cmp dword ptr [rsp+0x8],0x2
0x3318: sete dl
0x331b: cmp byte ptr [rsp+0xf],0x0
0x3320: mov eax,edx
0x3322: jne 0x3b78
0x3328: mov eax,r8d
0x332b: xor eax,0x1
0x332e: and al,dl
0x3330: je 0x3361
0x3332: cmp r13,r15
0x3335: jbe 0x333c
0x3337: mov byte ptr [r14+r15],0x27
0x333c: lea rdx,[r15+0x1]
0x3340: cmp r13,rdx
0x3343: jbe 0x334b
0x3345: mov byte ptr [r14+r15+0x1],0x24
0x334b: lea rdx,[r15+0x2]
0x334f: cmp r13,rdx
0x3352: jbe 0x335a
0x3354: mov byte ptr [r14+r15+0x2],0x27
0x335a: add r15,0x3
0x335e: mov r8d,eax
0x3361: cmp r13,r15
0x3364: jbe 0x336b
0x3366: mov byte ptr [r14+r15],0x5c
0x336b: add r15,0x1
0x336f: add rbp,0x1
0x3373: jmp 0x3200
0x3460: xor r10d,r10d
0x3463: nop dword ptr [rax+rax]
0x3468: cmp qword ptr [rsp+0x58],0x1
0x346e: jne 0x3818
0x3474: mov qword ptr [rsp+0x38],r11
0x3479: mov byte ptr [rsp+0x30],r8b
0x347e: mov byte ptr [rsp+0x28],r10b
0x3483: call 0x1c70
0x3488: mov rcx,qword ptr [rax]
0x348b: movzx edx,bl
0x348e: movzx r10d,byte ptr [rsp+0x28]
0x3494: movzx r8d,byte ptr [rsp+0x30]
0x349a: mov r11,qword ptr [rsp+0x38]
0x349f: mov edi,0x1
0x34a4: movzx eax,word ptr [rcx+rdx*2]
0x34a8: and ax,0x4000
0x34ac: setne r12b
0x34b0: sete al
0x34b3: and al,byte ptr [rsp+0xd]
0x34b7: test al,al
0x34b9: jne 0x3e51
0x34bf: cmp dword ptr [rsp+0x8],0x2
0x34c4: sete dl
0x34c7: jmp 0x3198
0x34d0: movzx ebx,byte ptr [r9]
0x34d4: cmp bl,0x7e
0x34d7: ja 0x3460
0x34d9: lea rcx,[rip+0x7688]
0x34e0: movzx edx,bl
0x34e3: movsxd rax,dword ptr [rcx+rdx*4]
0x34e7: add rax,rcx
0x34ea: jmp rax
0x36a0: xor r10d,r10d
0x36a3: jmp 0x3140
0x36d0: cmp dword ptr [rsp+0x8],0x2
0x36d5: movzx ebx,byte ptr [rsp+0xf]
0x36da: mov r12d,r8d
0x36dd: mov rbp,r11
0x36e0: sete dl
0x36e3: mov eax,ebx
0x36e5: test r15,r15
0x36e8: sete cl
0x36eb: and eax,edx
0x36ed: and al,cl
0x36ef: jne 0x4156
0x36f5: mov eax,ebx
0x36f7: xor eax,0x1
0x36fa: and dl,al
0x36fc: je 0x406c
0x3702: cmp byte ptr [rsp+0x7c],0x0
0x3707: je 0x406a
0x370d: cmp byte ptr [rsp+0xe],0x0
0x3712: jne 0x410d
0x3718: test r13,r13
0x371b: sete al
0x371e: cmp qword ptr [rsp+0x50],0x0
0x3724: setne dl
0x3727: and al,dl
0x3729: je 0x414c
0x372f: mov r13,qword ptr [rsp+0x50]
0x3734: lea rbx,[rip+0x7c20]
0x373b: mov byte ptr [r14],0x27
0x373f: mov dword ptr [rsp+0x8],0x2
0x3747: mov r15d,0x1
0x374d: mov qword ptr [rsp+0x18],0x1
0x3756: mov byte ptr [rsp+0xf],0x0
0x375b: mov qword ptr [rsp+0x48],rbx
0x3760: mov byte ptr [rsp+0x7c],al
0x3764: jmp 0x3043
0x3818: lea rax,[rsp+0xa0]
0x3820: cmp r11,-0x1
0x3824: mov qword ptr [rsp+0xa0],0x0
0x3830: mov qword ptr [rsp+0x28],rax
0x3835: jne 0x3864
0x3837: mov rdi,qword ptr [rsp+0x10]
0x383c: mov byte ptr [rsp+0x40],r8b
0x3841: mov byte ptr [rsp+0x38],r10b
0x3846: mov qword ptr [rsp+0x30],r9
0x384b: call 0x1960
0x3850: movzx r8d,byte ptr [rsp+0x40]
0x3856: movzx r10d,byte ptr [rsp+0x38]
0x385c: mov r11,rax
0x385f: mov r9,qword ptr [rsp+0x30]
0x3864: lea rax,[rsp+0x9c]
0x386c: xor ecx,ecx
0x386e: mov byte ptr [rsp+0x7e],bl
0x3872: mov byte ptr [rsp+0x7d],r8b
0x3877: mov rbx,rcx
0x387a: mov qword ptr [rsp+0x88],r9
0x3882: mov qword ptr [rsp+0x38],rax
0x3887: mov byte ptr [rsp+0x7f],r10b
0x388c: mov qword ptr [rsp+0x80],r15
0x3894: mov qword ptr [rsp+0x40],r14
0x3899: mov qword ptr [rsp+0x70],r13
0x389e: mov qword ptr [rsp+0x30],r11
0x38a3: mov rax,qword ptr [rsp+0x10]
0x38a8: lea r14,[rbp+rbx]
0x38ad: mov rdx,qword ptr [rsp+0x30]
0x38b2: mov rcx,qword ptr [rsp+0x28]
0x38b7: mov rdi,qword ptr [rsp+0x38]
0x38bc: lea r13,[rax+r14]
0x38c0: sub rdx,r14
0x38c3: mov rsi,r13
0x38c6: call 0x78e0
0x38cb: test rax,rax
0x38ce: mov r15,rax
0x38d1: je 0x3921
0x38d3: cmp rax,-0x1
0x38d7: je 0x3ef5
0x38dd: cmp rax,-0x2
0x38e1: je 0x3e81
0x38e7: cmp dword ptr [rsp+0x8],0x2
0x38ec: sete al
0x38ef: and al,byte ptr [rsp+0xf]
0x38f3: jne 0x3a90
0x38f9: mov edi,dword ptr [rsp+0x9c]
0x3900: call 0x1c60
0x3905: mov rdi,qword ptr [rsp+0x28]
0x390a: test eax,eax
0x390c: mov eax,0x0
0x3911: cmove r12d,eax
0x3915: add rbx,r15
0x3918: call 0x1c50
0x391d: test eax,eax
0x391f: je 0x38a3
0x3921: mov edx,r12d
0x3924: mov rdi,rbx
0x3927: movzx r8d,byte ptr [rsp+0x7d]
0x392d: xor edx,0x1
0x3930: movzx ebx,byte ptr [rsp+0x7e]
0x3935: movzx r10d,byte ptr [rsp+0x7f]
0x393b: and dl,byte ptr [rsp+0xd]
0x393f: mov r15,qword ptr [rsp+0x80]
0x3947: mov r14,qword ptr [rsp+0x40]
0x394c: mov r13,qword ptr [rsp+0x70]
0x3951: mov r11,qword ptr [rsp+0x30]
0x3956: cmp rdi,0x1
0x395a: jbe 0x3f5b
0x3960: mov rcx,rdi
0x3963: xor esi,esi
0x3965: movzx r9d,byte ptr [rsp+0xf]
0x396b: add rcx,rbp
0x396e: mov rdi,qword ptr [rsp+0x10]
0x3973: jmp 0x3a2e
0x3980: cmp dword ptr [rsp+0x8],0x2
0x3985: sete al
0x3988: test r9b,r9b
0x398b: jne 0x3e40
0x3991: mov esi,r8d
0x3994: xor esi,0x1
0x3997: and al,sil
0x399a: je 0x39cb
0x399c: cmp r13,r15
0x399f: jbe 0x39a6
0x39a1: mov byte ptr [r14+r15],0x27
0x39a6: lea rsi,[r15+0x1]
0x39aa: cmp r13,rsi
0x39ad: jbe 0x39b5
0x39af: mov byte ptr [r14+r15+0x1],0x24
0x39b5: lea rsi,[r15+0x2]
0x39b9: cmp r13,rsi
0x39bc: jbe 0x39c4
0x39be: mov byte ptr [r14+r15+0x2],0x27
0x39c4: add r15,0x3
0x39c8: mov r8d,eax
0x39cb: cmp r13,r15
0x39ce: jbe 0x39d5
0x39d0: mov byte ptr [r14+r15],0x5c
0x39d5: lea rax,[r15+0x1]
0x39d9: cmp r13,rax
0x39dc: jbe 0x39eb
0x39de: mov eax,ebx
0x39e0: shr al,0x6
0x39e3: add eax,0x30
0x39e6: mov byte ptr [r14+r15+0x1],al
0x39eb: lea rax,[r15+0x2]
0x39ef: cmp r13,rax
0x39f2: jbe 0x3a04
0x39f4: mov eax,ebx
0x39f6: shr al,0x3
0x39f9: and eax,0x7
0x39fc: add eax,0x30
0x39ff: mov byte ptr [r14+r15+0x2],al
0x3a04: and ebx,0x7
0x3a07: add rbp,0x1
0x3a0b: add r15,0x3
0x3a0f: add ebx,0x30
0x3a12: cmp rbp,rcx
0x3a15: jae 0x3200
0x3a1b: mov esi,edx
0x3a1d: cmp r13,r15
0x3a20: jbe 0x3a26
0x3a22: mov byte ptr [r14+r15],bl
0x3a26: movzx ebx,byte ptr [rdi+rbp]
0x3a2a: add r15,0x1
0x3a2e: test dl,dl
0x3a30: jne 0x3980
0x3a36: mov eax,esi
0x3a38: xor eax,0x1
0x3a3b: and eax,r8d
0x3a3e: test r10b,r10b
0x3a41: je 0x3a51
0x3a43: cmp r13,r15
0x3a46: jbe 0x3a4d
0x3a48: mov byte ptr [r14+r15],0x5c
0x3a4d: add r15,0x1
0x3a51: add rbp,0x1
0x3a55: cmp rbp,rcx
0x3a58: jae 0x31dc
0x3a5e: test al,al
0x3a60: je 0x3e5e
0x3a66: cmp r13,r15
0x3a69: jbe 0x3a70
0x3a6b: mov byte ptr [r14+r15],0x27
0x3a70: lea rax,[r15+0x1]
0x3a74: cmp r13,rax
0x3a77: jbe 0x3a7f
0x3a79: mov byte ptr [r14+r15+0x1],0x27
0x3a7f: add r15,0x2
0x3a83: xor r10d,r10d
0x3a86: xor r8d,r8d
0x3a89: jmp 0x3a1d
0x3a90: cmp r15,0x1
0x3a94: je 0x38f9
0x3a9a: mov rdi,qword ptr [rsp+0x10]
0x3a9f: lea rcx,[rdi+r15]
0x3aa3: lea rdx,[rdi+r14+0x1]
0x3aa8: lea r8,[rcx+r14]
0x3aac: jmp 0x3abd
0x3ab0: add rdx,0x1
0x3ab4: cmp r8,rdx
0x3ab7: je 0x38f9
0x3abd: movzx ecx,byte ptr [rdx]
0x3ac0: sub ecx,0x5b
0x3ac3: cmp cl,0x21
0x3ac6: ja 0x3ab0
0x3ac8: mov esi,0x1
0x3acd: shl rsi,cl
0x3ad0: mov rcx,rsi
0x3ad3: movabsq rsi,0x20000002b
0x3add: test rcx,rsi
0x3ae0: je 0x3ab0
0x3ae2: mov r14,qword ptr [rsp+0x40]
0x3ae7: mov r13,qword ptr [rsp+0x70]
0x3aec: mov rbp,qword ptr [rsp+0x30]
0x3af1: mov dword ptr [rsp+0x8],0x2
0x3af9: cmp byte ptr [rsp+0xd],0x0
0x3afe: je 0x3b10
0x3b00: test al,al
0x3b02: mov eax,0x4
0x3b07: cmove eax,dword ptr [rsp+0x8]
0x3b0c: mov dword ptr [rsp+0x8],eax
0x3b10: sub rsp,0x8
0x3b14: mov rcx,rbp
0x3b17: mov rsi,r13
0x3b1a: push qword ptr [rsp+0x68]
0x3b1e: push qword ptr [rsp+0x78]
0x3b22: mov rdi,r14
0x3b25: push 0x0
0x3b27: mov r9d,dword ptr [rsp+0x98]
0x3b2f: mov r8d,dword ptr [rsp+0x28]
0x3b34: mov rdx,qword ptr [rsp+0x30]
0x3b39: and r9d,-0x3
0x3b3d: call 0x2f70
0x3b42: add rsp,0x20
0x3b46: mov r15,rax
0x3b49: mov rbx,qword ptr [rsp+0xa8]
0x3b51: xor rbx,qword ptr fs:0x28
0x3b5a: mov rax,r15
0x3b5d: jne 0x4163
0x3b63: add rsp,0xb8
0x3b6a: pop rbx
0x3b6b: pop rbp
0x3b6c: pop r12
0x3b6e: pop r13
0x3b70: pop r14
0x3b72: pop r15
0x3b74: ret 
0x3b78: mov rbp,r11
0x3b7b: jmp 0x3af9
0x3be1: test r13,r13
0x3be4: jne 0x417a
0x3bea: lea rax,[rip+0x776a]
0x3bf1: mov qword ptr [rsp+0x50],0x0
0x3bfa: mov byte ptr [rsp+0xe],0x1
0x3bff: mov byte ptr [rsp+0x7c],0x0
0x3c04: xor r12d,r12d
0x3c07: mov byte ptr [rsp+0xf],0x0
0x3c0c: mov qword ptr [rsp+0x18],0x1
0x3c15: mov qword ptr [rsp+0x48],rax
0x3c1a: mov r15d,0x1
0x3c20: mov dword ptr [rsp+0x8],0x2
0x3c28: jmp 0x3043
0x3e40: movzx ebx,byte ptr [rsp+0xf]
0x3e45: mov rbp,r11
0x3e48: mov byte ptr [rsp+0xd],bl
0x3e4c: jmp 0x3af9
0x3e51: movzx edx,byte ptr [rsp+0xd]
0x3e56: xor r12d,r12d
0x3e59: jmp 0x3960
0x3e5e: xor r10d,r10d
0x3e61: jmp 0x3a1d
0x3e81: mov r11,qword ptr [rsp+0x30]
0x3e86: mov rsi,r14
0x3e89: mov rcx,r13
0x3e8c: mov rax,rbx
0x3e8f: mov rdi,rbx
0x3e92: movzx r8d,byte ptr [rsp+0x7d]
0x3e98: movzx ebx,byte ptr [rsp+0x7e]
0x3e9d: mov r9,qword ptr [rsp+0x88]
0x3ea5: cmp rsi,r11
0x3ea8: movzx r10d,byte ptr [rsp+0x7f]
0x3eae: mov r15,qword ptr [rsp+0x80]
0x3eb6: mov r14,qword ptr [rsp+0x40]
0x3ebb: mov r13,qword ptr [rsp+0x70]
0x3ec0: jae 0x3ee8
0x3ec2: cmp byte ptr [rcx],0x0
0x3ec5: jne 0x3ed7
0x3ec7: jmp 0x3ee8
0x3ed0: cmp byte ptr [r9+rax],0x0
0x3ed5: je 0x3ee5
0x3ed7: add rax,0x1
0x3edb: lea rdx,[rbp+rax]
0x3ee0: cmp r11,rdx
0x3ee3: ja 0x3ed0
0x3ee5: mov rdi,rax
0x3ee8: movzx edx,byte ptr [rsp+0xd]
0x3eed: xor r12d,r12d
0x3ef0: jmp 0x3956
0x3ef5: mov rdi,rbx
0x3ef8: movzx r8d,byte ptr [rsp+0x7d]
0x3efe: movzx ebx,byte ptr [rsp+0x7e]
0x3f03: movzx r10d,byte ptr [rsp+0x7f]
0x3f09: mov r15,qword ptr [rsp+0x80]
0x3f11: xor r12d,r12d
0x3f14: mov r14,qword ptr [rsp+0x40]
0x3f19: mov r13,qword ptr [rsp+0x70]
0x3f1e: mov r11,qword ptr [rsp+0x30]
0x3f23: movzx edx,byte ptr [rsp+0xd]
0x3f28: jmp 0x3956
0x3f5b: mov eax,edx
0x3f5d: jmp 0x34b7
0x406a: mov eax,edx
0x406c: mov rbx,qword ptr [rsp+0x48]
0x4071: test rbx,rbx
0x4074: je 0x40a2
0x4076: test al,al
0x4078: je 0x40a2
0x407a: movzx ecx,byte ptr [rbx]
0x407d: mov rax,rbx
0x4080: test cl,cl
0x4082: je 0x40a2
0x4084: mov rdx,r15
0x4087: sub rax,r15
0x408a: cmp r13,rdx
0x408d: jbe 0x4093
0x408f: mov byte ptr [r14+rdx],cl
0x4093: add rdx,0x1
0x4097: movzx ecx,byte ptr [rax+rdx]
0x409b: test cl,cl
0x409d: jne 0x408a
0x409f: mov r15,rdx
0x40a2: cmp r13,r15
0x40a5: jbe 0x3b49
0x40ab: mov byte ptr [r14+r15],0x0
0x40b0: jmp 0x3b49
0x40b5: cmp dword ptr [rsp+0x8],0x2
0x40ba: movzx ebx,byte ptr [rsp+0xf]
0x40bf: mov rbp,r11
0x40c2: sete al
0x40c5: mov byte ptr [rsp+0xd],bl
0x40c9: jmp 0x3af9
0x410d: sub rsp,0x8
0x4111: mov r8d,0x5
0x4117: mov rcx,r11
0x411a: push qword ptr [rsp+0x68]
0x411e: push qword ptr [rsp+0x78]
0x4122: mov rdi,r14
0x4125: push qword ptr [rsp+0x38]
0x4129: mov r9d,dword ptr [rsp+0x98]
0x4131: mov rdx,qword ptr [rsp+0x30]
0x4136: mov rsi,qword ptr [rsp+0x70]
0x413b: call 0x2f70
0x4140: add rsp,0x20
0x4144: mov r15,rax
0x4147: jmp 0x3b49
0x414c: movzx eax,byte ptr [rsp+0x7c]
0x4151: jmp 0x406c
0x4156: mov dword ptr [rsp+0x8],0x2
0x415e: jmp 0x3af9
0x4163: call 0x19a0
0x4168: mov byte ptr [rsp+0xd],0x0
0x416d: jmp 0x3be1
0x417a: mov byte ptr [rsp+0xe],0x1
0x417f: xor eax,eax
0x4181: xor r12d,r12d
0x4184: mov qword ptr [rsp+0x50],0x0
0x418d: jmp 0x3734
0x41a4: nop 
0x41a6: nop word ptr cs:[rax+rax]
0x429c: add rsp,0x20
0x42a0: mov r11,qword ptr [rsp+0x10]
0x42a5: cmp r11,rax
0x42a8: ja 0x4311
0x42aa: lea rsi,[rax+0x1]
0x42ae: lea rax,[rip+0x209e6b]
0x42b5: cmp r12,rax
0x42b8: mov qword ptr [rbx],rsi
0x42bb: je 0x42cf
0x42bd: mov rdi,r12
0x42c0: mov qword ptr [rsp+0x10],rsi
0x42c5: call 0x1c90
0x42ca: mov rsi,qword ptr [rsp+0x10]
0x42cf: mov rdi,rsi
0x42d2: mov qword ptr [rsp+0x10],rsi
0x42d7: call 0x51b0
0x42dc: sub rsp,0x8
0x42e0: mov qword ptr [rbx+0x8],rax
0x42e4: mov r8d,dword ptr [rbp]
0x42e8: push qword ptr [rbp+0x30]
0x42eb: push qword ptr [rbp+0x28]
0x42ee: mov rcx,r14
0x42f1: push r15
0x42f3: mov r9d,dword ptr [rsp+0x3c]
0x42f8: mov rdi,rax
0x42fb: mov rdx,qword ptr [rsp+0x28]
0x4300: mov rsi,qword ptr [rsp+0x30]
0x4305: mov r12,rax
0x4308: call 0x2f70
0x430d: add rsp,0x20
0x4311: mov eax,dword ptr [rsp+0x18]
0x4315: mov dword ptr [r13],eax
0x4319: add rsp,0x28
0x431d: mov rax,r12
0x4320: pop rbx
0x4321: pop rbp
0x4322: pop r12
0x4324: pop r13
0x4326: pop r14
0x4328: pop r15
0x432a: ret 
0x4351: call 0x1890
0x4356: call 0x5400
0x435b: nop dword ptr [rax+rax]
0x4360: push r12
0x4362: push rbp
0x4363: push rbx
0x4364: mov rbx,rdi
0x4367: call 0x18a0
0x436c: mov r12d,dword ptr [rax]
0x436f: mov rbp,rax
0x4372: lea rax,[rip+0x209ea7]
0x4379: test rbx,rbx
0x437c: mov esi,0x38
0x4381: cmove rbx,rax
0x4385: mov rdi,rbx
0x4388: call 0x53b0
0x438d: mov dword ptr [rbp],r12d
0x4391: pop rbx
0x4392: pop rbp
0x4393: pop r12
0x4395: ret 
0x43a0: lea rax,[rip+0x209e79]
0x43a7: test rdi,rdi
0x43aa: cmove rdi,rax
0x43ae: mov eax,dword ptr [rdi]
0x43b0: ret 
0x43c0: lea rax,[rip+0x209e59]
0x43c7: test rdi,rdi
0x43ca: cmove rdi,rax
0x43ce: mov dword ptr [rdi],esi
0x43d0: ret 
0x43e0: lea rax,[rip+0x209e39]
0x43e7: test rdi,rdi
0x43ea: mov ecx,esi
0x43ec: cmove rdi,rax
0x43f0: mov eax,esi
0x43f2: and ecx,0x1f
0x43f5: shr al,0x5
0x43f8: movzx eax,al
0x43fb: lea rdi,[rdi+rax*4+0x8]
0x4400: mov esi,dword ptr [rdi]
0x4402: mov eax,esi
0x4404: shr eax,cl
0x4406: xor edx,eax
0x4408: and eax,0x1
0x440b: and edx,0x1
0x440e: shl edx,cl
0x4410: xor edx,esi
0x4412: mov dword ptr [rdi],edx
0x4414: ret 
0x4420: lea rax,[rip+0x209df9]
0x4427: test rdi,rdi
0x442a: cmove rdi,rax
0x442e: mov eax,dword ptr [rdi+0x4]
0x4431: mov dword ptr [rdi+0x4],esi
0x4434: ret 
0x4440: lea rax,[rip+0x209dd9]
0x4447: test rdi,rdi
0x444a: cmove rdi,rax
0x444e: test rsi,rsi
0x4451: mov dword ptr [rdi],0xa
0x4457: je 0x4467
0x4459: test rdx,rdx
0x445c: je 0x4467
0x445e: mov qword ptr [rdi+0x28],rsi
0x4462: mov qword ptr [rdi+0x30],rdx
0x4466: ret 
0x4467: sub rsp,0x8
0x446b: call 0x1890
0x4470: push r15
0x4472: push r14
0x4474: lea rax,[rip+0x209da5]
0x447b: push r13
0x447d: push r12
0x447f: mov r13,rdi
0x4482: push rbp
0x4483: push rbx
0x4484: mov rbx,r8
0x4487: mov r14,rsi
0x448a: mov r15,rdx
0x448d: sub rsp,0x18
0x4491: test r8,r8
0x4494: cmove rbx,rax
0x4498: mov qword ptr [rsp+0x8],rcx
0x449d: call 0x18a0
0x44a2: mov r12d,dword ptr [rax]
0x44a5: mov rbp,rax
0x44a8: lea rax,[rbx+0x8]
0x44ac: sub rsp,0x8
0x44b0: mov r9d,dword ptr [rbx+0x4]
0x44b4: push qword ptr [rbx+0x30]
0x44b7: mov r8d,dword ptr [rbx]
0x44ba: push qword ptr [rbx+0x28]
0x44bd: mov rdx,r15
0x44c0: push rax
0x44c1: mov rcx,qword ptr [rsp+0x28]
0x44c6: mov rsi,r14
0x44c9: mov rdi,r13
0x44cc: call 0x2f70
0x44d1: mov dword ptr [rbp],r12d
0x44d5: add rsp,0x38
0x44d9: pop rbx
0x44da: pop rbp
0x44db: pop r12
0x44dd: pop r13
0x44df: pop r14
0x44e1: pop r15
0x44e3: ret 
0x44f0: push r15
0x44f2: push r14
0x44f4: lea rax,[rip+0x209d25]
0x44fb: push r13
0x44fd: push r12
0x44ff: mov r12,rdx
0x4502: push rbp
0x4503: push rbx
0x4504: mov rbx,rcx
0x4507: mov r14,rdi
0x450a: mov r15,rsi
0x450d: sub rsp,0x38
0x4511: test rcx,rcx
0x4514: cmove rbx,rax
0x4518: xor ebp,ebp
0x451a: call 0x18a0
0x451f: test r12,r12
0x4522: mov r13,rax
0x4525: mov eax,dword ptr [rax]
0x4527: sete bpl
0x452b: or ebp,dword ptr [rbx+0x4]
0x452e: lea r10,[rbx+0x8]
0x4532: sub rsp,0x8
0x4536: mov r8d,dword ptr [rbx]
0x4539: mov rcx,r15
0x453c: mov dword ptr [rsp+0x14],eax
0x4540: push qword ptr [rbx+0x30]
0x4543: mov rdx,r14
0x4546: push qword ptr [rbx+0x28]
0x4549: push r10
0x454b: xor esi,esi
0x454d: mov r9d,ebp
0x4550: xor edi,edi
0x4552: mov qword ptr [rsp+0x40],r10
0x4557: call 0x2f70
0x455c: lea rsi,[rax+0x1]
0x4560: mov qword ptr [rsp+0x48],rax
0x4565: add rsp,0x20
0x4569: mov rdi,rsi
0x456c: mov qword ptr [rsp+0x18],rsi
0x4571: call 0x51b0
0x4576: mov qword ptr [rsp+0x10],rax
0x457b: sub rsp,0x8
0x457f: push qword ptr [rbx+0x30]
0x4582: push qword ptr [rbx+0x28]
0x4585: mov r10,qword ptr [rsp+0x38]
0x458a: mov r9d,ebp
0x458d: mov r8d,dword ptr [rbx]
0x4590: mov rcx,r15
0x4593: mov rdx,r14
0x4596: mov rdi,rax
0x4599: push r10
0x459b: mov rsi,qword ptr [rsp+0x38]
0x45a0: call 0x2f70
0x45a5: mov eax,dword ptr [rsp+0x2c]
0x45a9: add rsp,0x20
0x45ad: test r12,r12
0x45b0: mov dword ptr [r13],eax
0x45b4: je 0x45bf
0x45b6: mov r11,qword ptr [rsp+0x28]
0x45bb: mov qword ptr [r12],r11
0x45bf: mov rax,qword ptr [rsp+0x10]
0x45c4: add rsp,0x38
0x45c8: pop rbx
0x45c9: pop rbp
0x45ca: pop r12
0x45cc: pop r13
0x45ce: pop r14
0x45d0: pop r15
0x45d2: ret 
0x45e0: mov rcx,rdx
0x45e3: xor edx,edx
0x45e5: jmp 0x44f0
0x45f0: mov eax,dword ptr [rip+0x209a62]
0x45f6: push r12
0x45f8: mov r12,qword ptr [rip+0x209a61]
0x45ff: push rbp
0x4600: push rbx
0x4601: cmp eax,0x1
0x4604: jle 0x4631
0x4606: sub eax,0x2
0x4609: lea rbx,[r12+0x18]
0x460e: shl rax,0x4
0x4612: lea rbp,[r12+rax+0x28]
0x4617: nop word ptr [rax+rax]
0x4620: mov rdi,qword ptr [rbx]
0x4623: add rbx,0x10
0x4627: call 0x1c90
0x462c: cmp rbx,rbp
0x462f: jne 0x4620
0x4631: mov rdi,qword ptr [r12+0x8]
0x4636: lea rbx,[rip+0x209ae3]
0x463d: cmp rdi,rbx
0x4640: je 0x4659
0x4642: call 0x1c90
0x4647: mov qword ptr [rip+0x209a1e],0x100
0x4652: mov qword ptr [rip+0x209a1f],rbx
0x4659: lea rbx,[rip+0x209a10]
0x4660: cmp r12,rbx
0x4663: je 0x4674
0x4665: mov rdi,r12
0x4668: call 0x1c90
0x466d: mov qword ptr [rip+0x2099ec],rbx
0x4674: pop rbx
0x4675: mov dword ptr [rip+0x2099d9],0x1
0x467f: pop rbp
0x4680: pop r12
0x4682: ret 
0x4690: lea rcx,[rip+0x209b89]
0x4697: mov rdx,-0x1
0x469e: jmp 0x41b0
0x46b0: lea rcx,[rip+0x209b69]
0x46b7: jmp 0x41b0
0x46c0: lea rcx,[rip+0x209b59]
0x46c7: mov rsi,rdi
0x46ca: mov rdx,-0x1
0x46d1: xor edi,edi
0x46d3: jmp 0x41b0
0x46e0: lea rcx,[rip+0x209b39]
0x46e7: mov rdx,rsi
0x46ea: mov rsi,rdi
0x46ed: xor edi,edi
0x46ef: jmp 0x41b0
0x476f: mov rcx,qword ptr [rsp+0x38]
0x4774: xor rcx,qword ptr fs:0x28
0x477d: jne 0x4789
0x477f: add rsp,0x48
0x4783: ret 
0x4784: call 0x1890
0x4789: call 0x19a0
0x478e: nop 
0x4790: sub rsp,0x48
0x4794: mov rax,rdx
0x4797: mov rdx,rcx
0x479a: mov rcx,qword ptr fs:0x28
0x47a3: mov qword ptr [rsp+0x38],rcx
0x47a8: xor ecx,ecx
0x47aa: cmp esi,0xa
0x47ad: je 0x4810
0x47af: mov dword ptr [rsp],esi
0x47b2: mov rcx,rsp
0x47b5: mov rsi,rax
0x47b8: mov qword ptr [rsp+0x4],0x0
0x47c1: mov qword ptr [rsp+0xc],0x0
0x47ca: mov qword ptr [rsp+0x14],0x0
0x47d3: mov qword ptr [rsp+0x1c],0x0
0x47dc: mov qword ptr [rsp+0x24],0x0
0x47e5: mov qword ptr [rsp+0x2c],0x0
0x47ee: mov dword ptr [rsp+0x34],0x0
0x47f6: call 0x41b0
0x47fb: mov rdx,qword ptr [rsp+0x38]
0x4800: xor rdx,qword ptr fs:0x28
0x4809: jne 0x4815
0x480b: add rsp,0x48
0x480f: ret 
0x4810: call 0x1890
0x4815: call 0x19a0
0x481a: nop word ptr [rax+rax]
0x4830: mov rcx,rdx
0x4833: mov rdx,rsi
0x4836: mov esi,edi
0x4838: xor edi,edi
0x483a: jmp 0x4790
0x4840: sub rsp,0x48
0x4844: mov ecx,edx
0x4846: mov rax,qword ptr fs:0x28
0x484f: mov qword ptr [rsp+0x38],rax
0x4854: xor eax,eax
0x4856: mov rax,qword ptr [rip+0x2099f3]
0x485d: mov r8,rsp
0x4860: and ecx,0x1f
0x4863: movdqa xmm0,[rip+0x2099b5]
0x486b: mov qword ptr [rsp+0x30],rax
0x4870: mov eax,edx
0x4872: movaps [rsp],xmm0
0x4876: shr al,0x5
0x4879: movzx eax,al
0x487c: lea r9,[r8+rax*4+0x8]
0x4881: movdqa xmm0,[rip+0x2099a7]
0x4889: movaps [rsp+0x10],xmm0
0x488e: movdqa xmm0,[rip+0x2099aa]
0x4896: movaps [rsp+0x20],xmm0
0x489b: mov edx,dword ptr [r9]
0x489e: mov eax,edx
0x48a0: shr eax,cl
0x48a2: not eax
0x48a4: and eax,0x1
0x48a7: shl eax,cl
0x48a9: mov rcx,r8
0x48ac: xor eax,edx
0x48ae: mov rdx,rsi
0x48b1: mov rsi,rdi
0x48b4: mov dword ptr [r9],eax
0x48b7: xor edi,edi
0x48b9: call 0x41b0
0x48be: mov rsi,qword ptr [rsp+0x38]
0x48c3: xor rsi,qword ptr fs:0x28
0x48cc: jne 0x48d3
0x48ce: add rsp,0x48
0x48d2: ret 
0x48d3: call 0x19a0
0x48d8: nop dword ptr [rax+rax]
0x48e0: movsx edx,sil
0x48e4: mov rsi,-0x1
0x48eb: jmp 0x4840
0x48f0: mov edx,0x3a
0x48f5: mov rsi,-0x1
0x48fc: jmp 0x4840
0x4910: mov edx,0x3a
0x4915: jmp 0x4840
0x4920: sub rsp,0x48
0x4924: mov rax,rdx
0x4927: mov rdx,qword ptr fs:0x28
0x4930: mov qword ptr [rsp+0x38],rdx
0x4935: xor edx,edx
0x4937: cmp esi,0xa
0x493a: je 0x49a4
0x493c: mov dword ptr [rsp],esi
0x493f: mov rcx,rsp
0x4942: mov rdx,-0x1
0x4949: mov rsi,rax
0x494c: mov qword ptr [rsp+0x4],0x0
0x4955: mov qword ptr [rsp+0xc],0x4000000
0x495e: mov qword ptr [rsp+0x14],0x0
0x4967: mov qword ptr [rsp+0x1c],0x0
0x4970: mov qword ptr [rsp+0x24],0x0
0x4979: mov qword ptr [rsp+0x2c],0x0
0x4982: mov dword ptr [rsp+0x34],0x0
0x498a: call 0x41b0
0x498f: mov rcx,qword ptr [rsp+0x38]
0x4994: xor rcx,qword ptr fs:0x28
0x499d: jne 0x49a9
0x499f: add rsp,0x48
0x49a3: ret 
0x49a4: call 0x1890
0x49a9: call 0x19a0
0x49ae: nop 
0x49b0: sub rsp,0x48
0x49b4: mov r9,rcx
0x49b7: mov rcx,qword ptr [rip+0x209892]
0x49be: movdqa xmm0,[rip+0x20985a]
0x49c6: mov rax,qword ptr fs:0x28
0x49cf: mov qword ptr [rsp+0x38],rax
0x49d4: xor eax,eax
0x49d6: movaps [rsp],xmm0
0x49da: test rsi,rsi
0x49dd: mov qword ptr [rsp+0x30],rcx
0x49e2: mov dword ptr [rsp],0xa
0x49e9: movdqa xmm0,[rip+0x20983f]
0x49f1: movaps [rsp+0x10],xmm0
0x49f6: movdqa xmm0,[rip+0x209842]
0x49fe: movaps [rsp+0x20],xmm0
0x4a03: je 0x4a37
0x4a05: test rdx,rdx
0x4a08: je 0x4a37
0x4a0a: mov qword ptr [rsp+0x28],rsi
0x4a0f: mov qword ptr [rsp+0x30],rdx
0x4a14: mov rcx,rsp
0x4a17: mov rdx,r8
0x4a1a: mov rsi,r9
0x4a1d: call 0x41b0
0x4a22: mov rdi,qword ptr [rsp+0x38]
0x4a27: xor rdi,qword ptr fs:0x28
0x4a30: jne 0x4a3c
0x4a32: add rsp,0x48
0x4a36: ret 
0x4a37: call 0x1890
0x4a3c: call 0x19a0
0x4a41: nop dword ptr [rax+rax]
0x4a46: nop word ptr cs:[rax+rax]
0x4a50: mov r8,-0x1
0x4a57: jmp 0x49b0
0x4a60: mov rcx,rdx
0x4a63: mov r8,-0x1
0x4a6a: mov rdx,rsi
0x4a6d: mov rsi,rdi
0x4a70: xor edi,edi
0x4a72: jmp 0x49b0
0x4a80: mov r8,rcx
0x4a83: mov rcx,rdx
0x4a86: mov rdx,rsi
0x4a89: mov rsi,rdi
0x4a8c: xor edi,edi
0x4a8e: jmp 0x49b0
0x4aa0: lea rcx,[rip+0x209579]
0x4aa7: jmp 0x41b0
0x4ab0: lea rcx,[rip+0x209569]
0x4ab7: mov rdx,rsi
0x4aba: mov rsi,rdi
0x4abd: xor edi,edi
0x4abf: jmp 0x41b0
0x4ad0: lea rcx,[rip+0x209549]
0x4ad7: mov rdx,-0x1
0x4ade: jmp 0x41b0
0x4b7c: call 0x19a0
0x4b81: nop word ptr cs:[rax+rax]
0x4b8b: nop dword ptr [rax+rax]
0x4cc8: mov r8,rcx
0x4ccb: mov rcx,rdx
0x4cce: lea rdx,[rip+0x60df]
0x4cd5: mov esi,0x1
0x4cda: xor eax,eax
0x4cdc: call 0x1c40
0x4ce1: jmp 0x4bcc
0x4edd: push r12
0x4edf: push r15
0x4ee1: push r14
0x4ee3: mov r8,qword ptr [rsp+0x20]
0x4ee8: mov rcx,rbx
0x4eeb: mov rdx,rax
0x4eee: mov rdi,rbp
0x4ef1: mov esi,0x1
0x4ef6: xor eax,eax
0x4ef8: call 0x1c40
0x4efd: add rsp,0x20
0x4f01: add rsp,0x28
0x4f05: pop rbx
0x4f06: pop rbp
0x4f07: pop r12
0x4f09: pop r13
0x4f0b: pop r14
0x4f0d: pop r15
0x4f0f: ret 
0x4f49: push r12
0x4f4b: push r15
0x4f4d: push r14
0x4f4f: mov r9,qword ptr [rsp+0x28]
0x4f54: jmp 0x4ee3
0x4fb0: xor r9d,r9d
0x4fb3: cmp qword ptr [r8],0x0
0x4fb7: je 0x4fcb
0x4fb9: nop dword ptr [rax]
0x4fc0: add r9,0x1
0x4fc4: cmp qword ptr [r8+r9*8],0x0
0x4fc9: jne 0x4fc0
0x4fcb: jmp 0x4b90
0x4fd0: sub rsp,0x68
0x4fd4: mov r10,r8
0x4fd7: xor r9d,r9d
0x4fda: mov rax,qword ptr fs:0x28
0x4fe3: mov qword ptr [rsp+0x58],rax
0x4fe8: xor eax,eax
0x4fea: mov r8,rsp
0x4fed: nop dword ptr [rax]
0x4ff0: mov eax,dword ptr [r10]
0x4ff3: cmp eax,0x2f
0x4ff6: ja 0x503a
0x4ff8: mov r11d,eax
0x4ffb: add r11,qword ptr [r10+0x10]
0x4fff: add eax,0x8
0x5002: mov dword ptr [r10],eax
0x5005: mov rax,qword ptr [r11]
0x5008: test rax,rax
0x500b: mov qword ptr [r8+r9*8],rax
0x500f: je 0x501b
0x5011: add r9,0x1
0x5015: cmp r9,0xa
0x5019: jne 0x4ff0
0x501b: call 0x4b90
0x5020: mov rax,qword ptr [rsp+0x58]
0x5025: xor rax,qword ptr fs:0x28
0x502e: jne 0x5035
0x5030: add rsp,0x68
0x5034: ret 
0x5035: call 0x19a0
0x503a: mov r11,qword ptr [r10+0x8]
0x503e: lea rax,[r11+0x8]
0x5042: mov qword ptr [r10+0x8],rax
0x5046: jmp 0x5005
0x5110: call 0x19a0
0x511c: mov rax,rbx
0x511f: add rbx,0x8
0x5123: jmp 0x50d6
0x5130: push rbx
0x5131: lea rsi,[rip+0x5cca]
0x5138: mov edx,0x5
0x513d: xor edi,edi
0x513f: call 0x1940
0x5144: lea rdx,[rip+0x5ccc]
0x514b: mov rsi,rax
0x514e: mov edi,0x1
0x5153: xor eax,eax
0x5155: call 0x1b80
0x515a: lea rsi,[rip+0x5ccc]
0x5161: mov edx,0x5
0x5166: xor edi,edi
0x5168: call 0x1940
0x516d: lea rcx,[rip+0x53a4]
0x5174: lea rdx,[rip+0x4ac5]
0x517b: mov rsi,rax
0x517e: mov edi,0x1
0x5183: xor eax,eax
0x5185: call 0x1b80
0x518a: mov rbx,qword ptr [rip+0x208ef7]
0x5191: lea rsi,[rip+0x5ec8]
0x5198: xor edi,edi
0x519a: mov edx,0x5
0x519f: call 0x1940
0x51a4: mov rsi,rbx
0x51a7: mov rdi,rax
0x51aa: pop rbx
0x51ab: jmp 0x1a80
0x51b0: push rbx
0x51b1: mov rbx,rdi
0x51b4: call 0x1b00
0x51b9: test rax,rax
0x51bc: jne 0x51c3
0x51be: test rbx,rbx
0x51c1: jne 0x51c5
0x51c3: pop rbx
0x51c4: ret 
0x51c5: call 0x5400
0x51ca: nop word ptr [rax+rax]
0x51d0: mov rax,rdi
0x51d3: mul rsi
0x51d6: mov rdi,rax
0x51d9: seto al
0x51dc: test rdi,rdi
0x51df: js 0x51eb
0x51e1: movzx eax,al
0x51e4: test rax,rax
0x51e7: jne 0x51eb
0x51e9: jmp 0x51b0
0x51eb: sub rsp,0x8
0x51ef: call 0x5400
0x51f4: nop 
0x51f6: nop word ptr cs:[rax+rax]
0x5200: jmp 0x51b0
0x5219: test rdi,rdi
0x521c: jne 0x5238
0x5238: call 0x1c90
0x523d: xor eax,eax
0x523f: pop rbx
0x5240: ret 
0x5246: nop word ptr cs:[rax+rax]
0x5250: mov rax,rsi
0x5253: mul rdx
0x5256: mov rsi,rax
0x5259: seto al
0x525c: test rsi,rsi
0x525f: js 0x526b
0x5261: movzx eax,al
0x5264: test rax,rax
0x5267: jne 0x526b
0x5269: jmp 0x5210
0x526b: sub rsp,0x8
0x526f: call 0x5400
0x5274: nop 
0x5276: nop word ptr cs:[rax+rax]
0x5280: test rdi,rdi
0x5283: mov r9,rdx
0x5286: mov rcx,qword ptr [rsi]
0x5289: je 0x52c0
0x528b: xor edx,edx
0x528d: movabsq rax,0x5555555555555554
0x5297: div r9
0x529a: cmp rax,rcx
0x529d: jbe 0x52db
0x529f: mov rax,rcx
0x52a2: shr rax, 1
0x52a5: lea rcx,[rax+rcx+0x1]
0x52aa: mov qword ptr [rsi],rcx
0x52ad: imul rcx,r9
0x52b1: mov rsi,rcx
0x52b4: jmp 0x5210
0x52c0: test rcx,rcx
0x52c3: je 0x52e8
0x52c5: mov rax,rcx
0x52c8: mul r9
0x52cb: seto dl
0x52ce: test rax,rax
0x52d1: movzx edx,dl
0x52d4: js 0x52db
0x52d6: test rdx,rdx
0x52d9: je 0x52aa
0x52db: sub rsp,0x8
0x52df: call 0x5400
0x52e4: nop dword ptr [rax]
0x52e8: xor edx,edx
0x52ea: mov eax,0x80
0x52ef: xor r8d,r8d
0x52f2: div r9
0x52f5: test rax,rax
0x52f8: sete r8b
0x52fc: lea rcx,[r8+rax]
0x5300: jmp 0x52c5
0x5310: test rdi,rdi
0x5313: mov rax,qword ptr [rsi]
0x5316: je 0x5340
0x5318: movabsq rdx,0x5555555555555553
0x5322: cmp rax,rdx
0x5325: ja 0x5351
0x5327: mov rdx,rax
0x532a: shr rdx, 1
0x532d: lea rax,[rdx+rax+0x1]
0x5332: mov qword ptr [rsi],rax
0x5335: mov rsi,rax
0x5338: jmp 0x5210
0x5340: test rax,rax
0x5343: mov edx,0x80
0x5348: cmove rax,rdx
0x534c: test rax,rax
0x534f: jns 0x5332
0x5351: sub rsp,0x8
0x5355: call 0x5400
0x535a: nop word ptr [rax+rax]
0x5360: push rbx
0x5361: mov rbx,rdi
0x5364: call 0x51b0
0x5369: mov rdx,rbx
0x536c: xor esi,esi
0x536e: mov rdi,rax
0x5371: pop rbx
0x5372: jmp 0x1a10
0x5380: mov rax,rdi
0x5383: sub rsp,0x8
0x5387: mul rsi
0x538a: seto dl
0x538d: test rax,rax
0x5390: js 0x53a9
0x5392: movzx edx,dl
0x5395: test rdx,rdx
0x5398: jne 0x53a9
0x539a: call 0x1a90
0x539f: test rax,rax
0x53a2: je 0x53a9
0x53a4: add rsp,0x8
0x53a8: ret 
0x53a9: call 0x5400
0x53ae: nop 
0x53b0: push rbp
0x53b1: push rbx
0x53b2: mov rbp,rdi
0x53b5: mov rdi,rsi
0x53b8: mov rbx,rsi
0x53bb: sub rsp,0x8
0x53bf: call 0x51b0
0x53c4: add rsp,0x8
0x53c8: mov rdx,rbx
0x53cb: mov rsi,rbp
0x53ce: pop rbx
0x53cf: pop rbp
0x53d0: mov rdi,rax
0x53d3: jmp 0x1ac0
0x53e0: push rbx
0x53e1: mov rbx,rdi
0x53e4: call 0x1960
0x53e9: mov rdi,rbx
0x53ec: lea rsi,[rax+0x1]
0x53f0: pop rbx
0x53f1: jmp 0x53b0
0x5430: call 0x1890
0x5435: nop word ptr cs:[rax+rax]
0x543f: nop 
0x546f: nop 
0x548f: nop 
0x5490: mov edx,dword ptr [rdi+0x48]
0x5493: mov eax,0x1
0x5498: and edx,0x11
0x549b: cmp edx,0x10
0x549e: je 0x54a7
0x54a0: xor eax,eax
0x54a2: cmp edx,0x11
0x54a5: je 0x54b0
0x54a7: rep ret 
0x54b0: cmp qword ptr [rsi+0x58],0x0
0x54b5: setne al
0x54b8: ret 
0x54c0: xor eax,eax
0x54c2: mov rdx,qword ptr [rsi+0x8]
0x54c6: cmp qword ptr [rdi+0x8],rdx
0x54ca: je 0x54d0
0x54cc: rep ret 
0x54d0: mov rax,qword ptr [rsi]
0x54d3: cmp qword ptr [rdi],rax
0x54d6: sete al
0x54d9: ret 
0x54e0: mov rax,qword ptr [rdi+0x8]
0x54e4: xor edx,edx
0x54e6: div rsi
0x54e9: mov rax,rdx
0x54ec: ret 
0x5510: mov rdx,qword ptr [rdi]
0x5513: mov rax,qword ptr [rsi]
0x5516: mov rax,qword ptr [rax+0x80]
0x551d: cmp qword ptr [rdx+0x80],rax
0x5524: jb 0x5530
0x5526: seta al
0x5529: movzx eax,al
0x552c: ret 
0x5530: mov eax,0xffffffff
0x5535: ret 
0x5a62: call 0x19a0
0x5a6c: nop dword ptr [rax]
0x5b46: nop word ptr cs:[rax+rax]
0x5f25: call 0x19a0
0x60ae: call 0x19a0
0x60b8: nop dword ptr [rax+rax]
0x6203: test ah,0x4
0x6206: je 0x6508
0x643e: sub rdx,qword ptr [rax+0x38]
0x6442: add rdx,rcx
0x6445: mov qword ptr [rax+0x30],rdx
0x6460: mov rax,qword ptr [r13+0x38]
0x6464: mov rdi,qword ptr [rsp+0x40]
0x6469: mov qword ptr [r13+0x30],rax
0x646d: mov rax,qword ptr [r13+0x60]
0x6471: lea rdx,[rax+0x1]
0x6475: call 0x1b90
0x647a: mov eax,dword ptr [r15+0x48]
0x647e: jmp 0x61fc
0x6508: xor edx,edx
0x650a: mov rsi,r13
0x650d: mov rdi,r15
0x6510: call 0x5540
0x6515: mov word ptr [r13+0x70],ax
0x651a: jmp 0x6251
0x677d: mov rax,qword ptr [rsp+0x18]
0x6782: cmp qword ptr [r15+0x30],rax
0x6786: je 0x678d
0x6788: test rbx,rbx
0x678b: jne 0x6793
0x678d: sub qword ptr [rsp+0x40],0x1
0x6793: mov rax,qword ptr [rsp+0x40]
0x6798: mov byte ptr [rax],0x0
0x67cc: cmp rbx,0x1
0x67d0: je 0x6685
0x67d6: mov rsi,qword ptr [rsp+0x10]
0x67db: mov rdx,rbx
0x67de: mov rdi,r15
0x67e1: call 0x5710
0x67e6: mov qword ptr [rsp+0x10],rax
0x67eb: jmp 0x6685
0x684d: test rbx,rbx
0x6850: mov dword ptr [rbp+0x40],eax
0x6853: jne 0x6989
0x6859: cmp qword ptr [rsp+0x50],0x0
0x685f: mov eax,0x4
0x6864: jne 0x6989
0x686a: mov word ptr [rbp+0x70],ax
0x6989: mov eax,0x7
0x698e: jmp 0x686a
0x6a71: call 0x19a0
0x6cb5: cmp rbp,0x1
0x6cb9: jbe 0x6ccc
0x6cbb: mov rsi,r12
0x6cbe: mov rdx,rbp
0x6cc1: mov rdi,rbx
0x6cc4: call 0x5710
0x6cc9: mov r12,rax
0x6d1d: mov edi,dword ptr [rbx+0x2c]
0x6d20: lea rdx,[rip+0x4434]
0x6d27: call 0x5c90
0x6d2c: test eax,eax
0x6d2e: mov dword ptr [rbx+0x28],eax
0x6d31: jns 0x6d40
0x6d33: or dword ptr [rbx+0x48],0x4
0x6d37: nop word ptr [rax+rax]
0x71d4: nop dword ptr [rax]
0x7760: cmp edx,0x4
0x7763: ja 0x7770
0x7765: mov word ptr [rsi+0x74],dx
0x7769: xor eax,eax
0x776b: ret 
0x7770: sub rsp,0x8
0x7774: call 0x18a0
0x7779: mov dword ptr [rax],0x16
0x777f: mov eax,0x1
0x7784: add rsp,0x8
0x7788: ret 
0x7790: push r14
0x7792: push r13
0x7794: push r12
0x7796: push rbp
0x7797: mov r12d,esi
0x779a: push rbx
0x779b: mov rbx,rdi
0x779e: call 0x18a0
0x77a3: test r12d,0xffffefff
0x77aa: mov r13,rax
0x77ad: jne 0x7898
0x77b3: mov rbp,qword ptr [rbx]
0x77b6: mov dword ptr [rax],0x0
0x77bc: test byte ptr [rbx+0x49],0x20
0x77c0: jne 0x7840
0x77c2: movzx eax,word ptr [rbp+0x70]
0x77c6: cmp ax,0x9
0x77ca: je 0x7830
0x77cc: cmp ax,0x1
0x77d0: jne 0x7840
0x77d2: mov rdi,qword ptr [rbx+0x8]
0x77d6: test rdi,rdi
0x77d9: je 0x77e0
0x77db: call 0x58b0
0x77e0: cmp r12d,0x1000
0x77e7: mov r14d,0x1
0x77ed: jne 0x77fc
0x77ef: or dword ptr [rbx+0x48],0x1000
0x77f6: mov r14d,0x2
0x77fc: cmp qword ptr [rbp+0x58],0x0
0x7801: jne 0x7815
0x7803: mov rax,qword ptr [rbp+0x30]
0x7807: cmp byte ptr [rax],0x2f
0x780a: je 0x7815
0x780c: mov esi,dword ptr [rbx+0x48]
0x780f: test sil,0x4
0x7813: je 0x7850
0x7815: mov esi,r14d
0x7818: mov rdi,rbx
0x781b: call 0x60c0
0x7820: mov qword ptr [rbx+0x8],rax
0x7824: pop rbx
0x7825: pop rbp
0x7826: pop r12
0x7828: pop r13
0x782a: pop r14
0x782c: ret 
0x7830: pop rbx
0x7831: mov rax,qword ptr [rbp+0x10]
0x7835: pop rbp
0x7836: pop r12
0x7838: pop r13
0x783a: pop r14
0x783c: ret 
0x7840: pop rbx
0x7841: xor eax,eax
0x7843: pop rbp
0x7844: pop r12
0x7846: pop r13
0x7848: pop r14
0x784a: ret 
0x7850: mov edi,dword ptr [rbx+0x2c]
0x7853: lea rdx,[rip+0x3901]
0x785a: call 0x5c90
0x785f: test eax,eax
0x7861: mov ebp,eax
0x7863: js 0x78b9
0x7865: mov esi,r14d
0x7868: mov rdi,rbx
0x786b: call 0x60c0
0x7870: test byte ptr [rbx+0x49],0x2
0x7874: mov qword ptr [rbx+0x8],rax
0x7878: jne 0x78a8
0x787a: mov edi,ebp
0x787c: call 0x1b50
0x7881: test eax,eax
0x7883: jne 0x78c8
0x7885: mov edi,ebp
0x7887: call 0x1a30
0x788c: mov rax,qword ptr [rbx+0x8]
0x7890: jmp 0x7824
0x7898: mov dword ptr [rax],0x16
0x789e: xor eax,eax
0x78a0: jmp 0x7824
0x78a8: mov edx,0x1
0x78ad: mov esi,ebp
0x78af: mov rdi,rbx
0x78b2: call 0x5ae0
0x78b7: jmp 0x788c
0x78b9: mov qword ptr [rbx+0x8],0x0
0x78c1: xor eax,eax
0x78c3: jmp 0x7824
0x78c8: mov ebx,dword ptr [r13]
0x78cc: mov edi,ebp
0x78ce: call 0x1a30
0x78d3: xor eax,eax
0x78d5: mov dword ptr [r13],ebx
0x78d9: jmp 0x7824
0x78e0: push r13
0x78e2: push r12
0x78e4: mov r13,rsi
0x78e7: push rbp
0x78e8: push rbx
0x78e9: mov rbx,rdi
0x78ec: mov r12,rdx
0x78ef: sub rsp,0x18
0x78f3: mov rax,qword ptr fs:0x28
0x78fc: mov qword ptr [rsp+0x8],rax
0x7901: xor eax,eax
0x7903: lea rax,[rsp+0x4]
0x7908: test rdi,rdi
0x790b: cmove rbx,rax
0x790f: mov rdi,rbx
0x7912: call 0x19c0
0x7917: cmp rax,-0x3
0x791b: mov rbp,rax
0x791e: jbe 0x7940
0x7920: test r12,r12
0x7923: je 0x7940
0x7925: xor edi,edi
0x7927: call 0x7c50
0x792c: test al,al
0x792e: jne 0x7940
0x7930: movzx eax,byte ptr [r13]
0x7935: mov ebp,0x1
0x793a: mov dword ptr [rbx],eax
0x793c: nop dword ptr [rax]
0x7940: mov rdx,qword ptr [rsp+0x8]
0x7945: xor rdx,qword ptr fs:0x28
0x794e: mov rax,rbp
0x7951: jne 0x795e
0x7953: add rsp,0x18
0x7957: pop rbx
0x7958: pop rbp
0x7959: pop r12
0x795b: pop r13
0x795d: ret 
0x795e: call 0x19a0
0x7963: nop word ptr cs:[rax+rax]
0x796d: nop dword ptr [rax]
0x79cc: mov rdi,rax
0x79cf: call 0x1c90
0x7a71: call 0x19a0
0x7a86: nop word ptr cs:[rax+rax]
0x7aa0: jmp 0x7970
0x7ab0: jmp 0x7970
0x7ac0: push r12
0x7ac2: push rbp
0x7ac3: mov rbp,rdi
0x7ac6: push rbx
0x7ac7: call 0x18e0
0x7acc: mov ebx,dword ptr [rbp]
0x7acf: mov rdi,rbp
0x7ad2: mov r12,rax
0x7ad5: call 0x9610
0x7ada: and ebx,0x20
0x7add: test ebx,ebx
0x7adf: jne 0x7af8
0x7ae1: test eax,eax
0x7ae3: je 0x7aef
0x7ae5: test r12,r12
0x7ae8: mov eax,0xffffffff
0x7aed: je 0x7b28
0x7aef: pop rbx
0x7af0: pop rbp
0x7af1: pop r12
0x7af3: ret 
0x7af8: test eax,eax
0x7afa: jne 0x7b18
0x7afc: call 0x18a0
0x7b01: mov dword ptr [rax],0x0
0x7b07: mov eax,0xffffffff
0x7b0c: pop rbx
0x7b0d: pop rbp
0x7b0e: pop r12
0x7b10: ret 
0x7b18: pop rbx
0x7b19: mov eax,0xffffffff
0x7b1e: pop rbp
0x7b1f: pop r12
0x7b21: ret 
0x7b28: call 0x18a0
0x7b2d: cmp dword ptr [rax],0x9
0x7b30: pop rbx
0x7b31: pop rbp
0x7b32: pop r12
0x7b34: setne al
0x7b37: movzx eax,al
0x7b3a: neg eax
0x7b3c: ret 
0x7bda: nop word ptr [rax+rax]
0x7c49: call 0x19a0
0x7c4e: nop 
0x7c50: sub rsp,0x8
0x7c54: xor esi,esi
0x7c56: call 0x1b70
0x7c5b: mov rdx,rax
0x7c5e: mov eax,0x1
0x7c63: test rdx,rdx
0x7c66: je 0x7c85
0x7c68: lea rdi,[rip+0x356d]
0x7c6f: mov ecx,0x2
0x7c74: mov rsi,rdx
0x7c77: rep cmpsb [rsi],es:[rdi]
0x7c79: seta cl
0x7c7c: sbb cl,0x0
0x7c7f: xor eax,eax
0x7c81: test cl,cl
0x7c83: jne 0x7c90
0x7c85: add rsp,0x8
0x7c89: ret 
0x7c90: lea rdi,[rip+0x3547]
0x7c97: mov ecx,0x6
0x7c9c: mov rsi,rdx
0x7c9f: rep cmpsb [rsi],es:[rdi]
0x7ca1: seta al
0x7ca4: sbb al,0x0
0x7ca6: test al,al
0x7ca8: setne al
0x7cab: add rsp,0x8
0x7caf: ret 
0x7d50: mov rax,rdi
0x7d53: xor edx,edx
0x7d55: ror rax,0x3
0x7d59: div rsi
0x7d5c: mov rax,rdx
0x7d5f: ret 
0x7d60: cmp rdi,rsi
0x7d63: sete al
0x7d66: ret 
0x7d92: nop dword ptr [rax]
0x7d96: nop word ptr cs:[rax+rax]
0x8080: mov rax,qword ptr [rdi+0x10]
0x8084: ret 
0x8090: mov rax,qword ptr [rdi+0x18]
0x8094: ret 
0x80a0: mov rax,qword ptr [rdi+0x20]
0x80a4: ret 
0x80b0: mov rsi,qword ptr [rdi]
0x80b3: mov rdi,qword ptr [rdi+0x8]
0x80b7: xor eax,eax
0x80b9: cmp rsi,rdi
0x80bc: jae 0x80f7
0x80be: nop 
0x80c0: cmp qword ptr [rsi],0x0
0x80c4: je 0x80ec
0x80c6: mov rdx,qword ptr [rsi+0x8]
0x80ca: mov ecx,0x1
0x80cf: test rdx,rdx
0x80d2: je 0x80e5
0x80d4: nop dword ptr [rax]
0x80d8: mov rdx,qword ptr [rdx+0x8]
0x80dc: add rcx,0x1
0x80e0: test rdx,rdx
0x80e3: jne 0x80d8
0x80e5: cmp rax,rcx
0x80e8: cmovb rax,rcx
0x80ec: add rsi,0x10
0x80f0: cmp rsi,rdi
0x80f3: jb 0x80c0
0x80f5: rep ret 
0x80f7: rep ret 
0x8100: mov rcx,qword ptr [rdi]
0x8103: mov r8,qword ptr [rdi+0x8]
0x8107: xor edx,edx
0x8109: xor esi,esi
0x810b: cmp rcx,r8
0x810e: jae 0x8146
0x8110: cmp qword ptr [rcx],0x0
0x8114: je 0x813d
0x8116: mov rax,qword ptr [rcx+0x8]
0x811a: add rsi,0x1
0x811e: add rdx,0x1
0x8122: test rax,rax
0x8125: je 0x813d
0x8127: nop word ptr [rax+rax]
0x8130: mov rax,qword ptr [rax+0x8]
0x8134: add rdx,0x1
0x8138: test rax,rax
0x813b: jne 0x8130
0x813d: add rcx,0x10
0x8141: cmp rcx,r8
0x8144: jb 0x8110
0x8146: xor eax,eax
0x8148: cmp qword ptr [rdi+0x18],rsi
0x814c: je 0x8150
0x814e: rep ret 
0x8150: cmp qword ptr [rdi+0x20],rdx
0x8154: sete al
0x8157: ret 
0x8160: push r13
0x8162: push r12
0x8164: mov r12,rsi
0x8167: push rbp
0x8168: push rbx
0x8169: xor ebx,ebx
0x816b: sub rsp,0x8
0x816f: mov rsi,qword ptr [rdi]
0x8172: mov rcx,qword ptr [rdi+0x20]
0x8176: mov rbp,qword ptr [rdi+0x10]
0x817a: mov r13,qword ptr [rdi+0x18]
0x817e: mov rdi,qword ptr [rdi+0x8]
0x8182: cmp rsi,rdi
0x8185: jae 0x81c5
0x8187: nop word ptr [rax+rax]
0x8190: cmp qword ptr [rsi],0x0
0x8194: je 0x81bc
0x8196: mov rax,qword ptr [rsi+0x8]
0x819a: mov edx,0x1
0x819f: test rax,rax
0x81a2: je 0x81b5
0x81a4: nop dword ptr [rax]
0x81a8: mov rax,qword ptr [rax+0x8]
0x81ac: add rdx,0x1
0x81b0: test rax,rax
0x81b3: jne 0x81a8
0x81b5: cmp rbx,rdx
0x81b8: cmovb rbx,rdx
0x81bc: add rsi,0x10
0x81c0: cmp rsi,rdi
0x81c3: jb 0x8190
0x81c5: lea rdx,[rip+0x3018]
0x81cc: mov esi,0x1
0x81d1: mov rdi,r12
0x81d4: xor eax,eax
0x81d6: call 0x1c40
0x81db: lea rdx,[rip+0x301a]
0x81e2: xor eax,eax
0x81e4: mov rcx,rbp
0x81e7: mov esi,0x1
0x81ec: mov rdi,r12
0x81ef: call 0x1c40
0x81f4: test r13,r13
0x81f7: js 0x8260
0x81f9: pxor xmm0,xmm0
0x81fd: test rbp,rbp
0x8200: cvtsi2sdq xmm0,r13
0x8205: mulsd xmm0,[rip+0x308b]
0x820d: js 0x8289
0x820f: pxor xmm1,xmm1
0x8213: cvtsi2sdq xmm1,rbp
0x8218: divsd xmm0,xmm1
0x821c: lea rdx,[rip+0x300d]
0x8223: mov rcx,r13
0x8226: mov rdi,r12
0x8229: mov esi,0x1
0x822e: mov eax,0x1
0x8233: call 0x1c40
0x8238: add rsp,0x8
0x823c: mov rcx,rbx
0x823f: mov rdi,r12
0x8242: pop rbx
0x8243: pop rbp
0x8244: pop r12
0x8246: pop r13
0x8248: lea rdx,[rip+0x2fc5]
0x824f: mov esi,0x1
0x8254: xor eax,eax
0x8256: jmp 0x1c40
0x8260: mov rax,r13
0x8263: mov rdx,r13
0x8266: pxor xmm0,xmm0
0x826a: shr rax, 1
0x826d: and edx,0x1
0x8270: or rax,rdx
0x8273: test rbp,rbp
0x8276: cvtsi2sdq xmm0,rax
0x827b: addsd xmm0,xmm0
0x827f: mulsd xmm0,[rip+0x3011]
0x8287: jns 0x820f
0x8289: mov rax,rbp
0x828c: pxor xmm1,xmm1
0x8290: shr rax, 1
0x8293: and ebp,0x1
0x8296: or rax,rbp
0x8299: cvtsi2sdq xmm1,rax
0x829e: addsd xmm1,xmm1
0x82a2: jmp 0x8218
0x8310: cmp qword ptr [rdi+0x20],0x0
0x8315: je 0x8343
0x8317: mov rdx,qword ptr [rdi]
0x831a: mov rcx,qword ptr [rdi+0x8]
0x831e: cmp rdx,rcx
0x8321: jae 0x8348
0x8323: mov rax,qword ptr [rdx]
0x8326: test rax,rax
0x8329: jne 0x8346
0x832b: nop dword ptr [rax+rax]
0x8330: add rdx,0x10
0x8334: cmp rdx,rcx
0x8337: jae 0x8348
0x8339: mov rax,qword ptr [rdx]
0x833c: test rax,rax
0x833f: je 0x8330
0x8341: rep ret 
0x8343: xor eax,eax
0x8345: ret 
0x8346: rep ret 
0x8348: sub rsp,0x8
0x834c: call 0x1890
0x8351: nop dword ptr [rax+rax]
0x8356: nop word ptr cs:[rax+rax]
0x8360: push rbp
0x8361: push rbx
0x8362: mov rbp,rdi
0x8365: mov rbx,rsi
0x8368: sub rsp,0x8
0x836c: call 0x7d70
0x8371: mov rdx,rax
0x8374: mov rcx,rax
0x8377: mov rax,qword ptr [rdx]
0x837a: mov rdx,qword ptr [rdx+0x8]
0x837e: cmp rax,rbx
0x8381: je 0x8399
0x8383: nop dword ptr [rax+rax]
0x8388: test rdx,rdx
0x838b: je 0x839e
0x838d: mov rax,qword ptr [rdx]
0x8390: mov rdx,qword ptr [rdx+0x8]
0x8394: cmp rax,rbx
0x8397: jne 0x8388
0x8399: test rdx,rdx
0x839c: jne 0x83c8
0x839e: mov rdx,qword ptr [rbp+0x8]
0x83a2: jmp 0x83b0
0x83a8: mov rax,qword ptr [rcx]
0x83ab: test rax,rax
0x83ae: jne 0x83bb
0x83b0: add rcx,0x10
0x83b4: cmp rdx,rcx
0x83b7: ja 0x83a8
0x83b9: xor eax,eax
0x83bb: add rsp,0x8
0x83bf: pop rbx
0x83c0: pop rbp
0x83c1: ret 
0x83c8: mov rax,qword ptr [rdx]
0x83cb: add rsp,0x8
0x83cf: pop rbx
0x83d0: pop rbp
0x83d1: ret 
0x83e0: mov r9,qword ptr [rdi]
0x83e3: cmp qword ptr [rdi+0x8],r9
0x83e7: jbe 0x8442
0x83e9: xor r8d,r8d
0x83ec: mov rcx,qword ptr [r9]
0x83ef: test rcx,rcx
0x83f2: je 0x842d
0x83f4: cmp rdx,r8
0x83f7: jbe 0x8437
0x83f9: mov qword ptr [rsi+r8*8],rcx
0x83fd: mov rcx,qword ptr [r9+0x8]
0x8401: lea rax,[r8+0x1]
0x8405: test rcx,rcx
0x8408: je 0x842a
0x840a: nop word ptr [rax+rax]
0x8410: cmp rdx,rax
0x8413: je 0x8440
0x8415: mov r8,qword ptr [rcx]
0x8418: add rax,0x1
0x841c: mov qword ptr [rsi+rax*8-0x8],r8
0x8421: mov rcx,qword ptr [rcx+0x8]
0x8425: test rcx,rcx
0x8428: jne 0x8410
0x842a: mov r8,rax
0x842d: add r9,0x10
0x8431: cmp qword ptr [rdi+0x8],r9
0x8435: ja 0x83ec
0x8437: mov rax,r8
0x843a: ret 
0x8440: rep ret 
0x8442: xor eax,eax
0x8444: ret 
0x8450: push r15
0x8452: push r14
0x8454: push r13
0x8456: push r12
0x8458: push rbp
0x8459: push rbx
0x845a: sub rsp,0x8
0x845e: mov r14,qword ptr [rdi]
0x8461: cmp qword ptr [rdi+0x8],r14
0x8465: jbe 0x84b6
0x8467: mov r13,rdx
0x846a: mov r12,rsi
0x846d: mov r15,rdi
0x8470: xor ebp,ebp
0x8472: mov rdi,qword ptr [r14]
0x8475: test rdi,rdi
0x8478: je 0x849a
0x847a: mov rbx,r14
0x847d: jmp 0x8483
0x8480: mov rdi,qword ptr [rbx]
0x8483: mov rsi,r13
0x8486: call r12
0x8489: test al,al
0x848b: je 0x84a4
0x848d: mov rbx,qword ptr [rbx+0x8]
0x8491: add rbp,0x1
0x8495: test rbx,rbx
0x8498: jne 0x8480
0x849a: add r14,0x10
0x849e: cmp qword ptr [r15+0x8],r14
0x84a2: ja 0x8472
0x84a4: add rsp,0x8
0x84a8: mov rax,rbp
0x84ab: pop rbx
0x84ac: pop rbp
0x84ad: pop r12
0x84af: pop r13
0x84b1: pop r14
0x84b3: pop r15
0x84b5: ret 
0x84b6: xor ebp,ebp
0x84b8: jmp 0x84a4
0x84c0: movzx ecx,byte ptr [rdi]
0x84c3: xor edx,edx
0x84c5: test cl,cl
0x84c7: je 0x84ed
0x84c9: nop dword ptr [rax]
0x84d0: mov rax,rdx
0x84d3: add rdi,0x1
0x84d7: shl rax,0x5
0x84db: sub rax,rdx
0x84de: xor edx,edx
0x84e0: add rax,rcx
0x84e3: movzx ecx,byte ptr [rdi]
0x84e6: div rsi
0x84e9: test cl,cl
0x84eb: jne 0x84d0
0x84ed: mov rax,rdx
0x84f0: ret 
0x8500: movabsq rax,0x3f80000000000000
0x850a: mov byte ptr [rdi+0x10],0x0
0x850e: mov qword ptr [rdi],rax
0x8511: movabsq rax,0x3fb4fdf43f4ccccd
0x851b: mov qword ptr [rdi+0x8],rax
0x851f: ret 
0x857c: mov qword ptr [rax+0x28],r15
0x8580: call 0x7ec0
0x8585: test al,al
0x8587: je 0x8610
0x858d: cmp byte ptr [r15+0x10],0x0
0x8592: je 0x8690
0x8690: test rbp,rbp
0x8693: movxd xmm1,[r15+0x8]
0x8699: jns 0x8651
0x86e0: push r12
0x86e2: push rbp
0x86e3: mov rbp,rdi
0x86e6: push rbx
0x86e7: mov r12,qword ptr [rdi]
0x86ea: cmp r12,qword ptr [rdi+0x8]
0x86ee: jae 0x875b
0x86f0: cmp qword ptr [r12],0x0
0x86f5: je 0x8751
0x86f7: mov rbx,qword ptr [r12+0x8]
0x86fc: mov rax,qword ptr [rbp+0x40]
0x8700: test rbx,rbx
0x8703: je 0x8735
0x8705: nop dword ptr [rax]
0x8708: test rax,rax
0x870b: je 0x8716
0x870d: mov rdi,qword ptr [rbx]
0x8710: call rax
0x8712: mov rax,qword ptr [rbp+0x40]
0x8716: mov rdx,qword ptr [rbx+0x8]
0x871a: mov rcx,qword ptr [rbp+0x48]
0x871e: mov qword ptr [rbx],0x0
0x8725: test rdx,rdx
0x8728: mov qword ptr [rbx+0x8],rcx
0x872c: mov qword ptr [rbp+0x48],rbx
0x8730: mov rbx,rdx
0x8733: jne 0x8708
0x8735: test rax,rax
0x8738: je 0x8740
0x873a: mov rdi,qword ptr [r12]
0x873e: call rax
0x8740: mov qword ptr [r12],0x0
0x8748: mov qword ptr [r12+0x8],0x0
0x8751: add r12,0x10
0x8755: cmp qword ptr [rbp+0x8],r12
0x8759: ja 0x86f0
0x875b: mov qword ptr [rbp+0x18],0x0
0x8763: mov qword ptr [rbp+0x20],0x0
0x876b: pop rbx
0x876c: pop rbp
0x876d: pop r12
0x876f: ret 
0x87b0: mov rdi,qword ptr [rbx]
0x87b8: mov rbx,qword ptr [rbx+0x8]
0x87bc: test rbx,rbx
0x87bf: jne 0x87b0
0x87c1: mov rax,qword ptr [r12+0x8]
0x8a7a: call 0x19a0
0x8a8e: nop 
0x8b80: mov rdx,rax
0x8b83: pxor xmm1,xmm1
0x8b87: and eax,0x1
0x8b8a: shr rdx, 1
0x8b8d: or rdx,rax
0x8b90: mov rax,qword ptr [rbx+0x10]
0x8b94: cvtsi2ssq xmm1,rdx
0x8b99: mov rdx,qword ptr [rbx+0x28]
0x8b9d: test rax,rax
0x8ba0: addss xmm1,xmm1
0x8ba4: jns 0x8b23
0x8c72: nop word ptr [rax+rax]
0x8cd0: mov rcx,rax
0x8cd3: pxor xmm1,xmm1
0x8cd7: shr rcx, 1
0x8cda: and eax,0x1
0x8cdd: or rcx,rax
0x8ce0: cvtsi2ssq xmm1,rcx
0x8ce5: addss xmm1,xmm1
0x8ce9: jmp 0x8c0e
0x8d0f: call 0x19a0
0x8d14: nop 
0x8d16: nop word ptr cs:[rax+rax]
0x8d74: call 0x19a0
0x8d79: nop dword ptr [rax]
0x8f7e: call 0x19a0
0x8f83: nop word ptr cs:[rax+rax]
0x8f8d: nop dword ptr [rax]
0x903e: nop 
0x9040: sub rsp,0x8
0x9044: mov edi,0xe
0x9049: call 0x1b20
0x904e: test rax,rax
0x9051: je 0x9070
0x9053: cmp byte ptr [rax],0x0
0x9056: lea rdx,[rip+0x2243]
0x905d: cmove rax,rdx
0x9061: add rsp,0x8
0x9065: ret 
0x9070: lea rax,[rip+0x2229]
0x9077: add rsp,0x8
0x907b: ret 
0x90a8: call 0x1890
0x90ad: nop dword ptr [rax]
0x90d8: call 0x1890
0x90dd: nop dword ptr [rax]
0x9149: call 0x19a0
0x914e: nop 
0x92e1: nop dword ptr [rax+rax]
0x92e6: nop word ptr cs:[rax+rax]
0x9581: call 0x19a0
0x9602: nop word ptr cs:[rax+rax]
0x960c: nop dword ptr [rax]
0x9610: push r12
0x9612: push rbp
0x9613: push rbx
0x9614: mov rbx,rdi
0x9617: call 0x1ad0
0x961c: test eax,eax
0x961e: mov rdi,rbx
0x9621: js 0x9677
0x9623: call 0x1b40
0x9628: test eax,eax
0x962a: jne 0x9658
0x962c: mov rdi,rbx
0x962f: call 0x9910
0x9634: test eax,eax
0x9636: je 0x9674
0x9638: call 0x18a0
0x963d: mov r12d,dword ptr [rax]
0x9640: mov rdi,rbx
0x9643: mov rbp,rax
0x9646: call 0x1920
0x964b: test r12d,r12d
0x964e: jne 0x9680
0x9650: pop rbx
0x9651: pop rbp
0x9652: pop r12
0x9654: ret 
0x9658: mov rdi,rbx
0x965b: call 0x1ad0
0x9660: xor esi,esi
0x9662: mov edx,0x1
0x9667: mov edi,eax
0x9669: call 0x19f0
0x966e: cmp rax,-0x1
0x9672: jne 0x962c
0x9674: mov rdi,rbx
0x9677: pop rbx
0x9678: pop rbp
0x9679: pop r12
0x967b: jmp 0x1920
0x9680: mov dword ptr [rbp],r12d
0x9684: mov eax,0xffffffff
0x9689: jmp 0x9650
0x98dd: call 0x19a0
0x9910: test rdi,rdi
0x9913: push rbx
0x9914: mov rbx,rdi
0x9917: je 0x992a
0x9919: call 0x1b40
0x991e: test eax,eax
0x9920: je 0x992a
0x9922: test dword ptr [rbx],0x100
0x9928: jne 0x9938
0x992a: mov rdi,rbx
0x992d: pop rbx
0x992e: jmp 0x1b10
0x9938: mov rdi,rbx
0x993b: mov edx,0x1
0x9940: xor esi,esi
0x9942: call 0x9950
0x9947: mov rdi,rbx
0x994a: pop rbx
0x994b: jmp 0x1b10
0x9950: mov rax,qword ptr [rdi+0x8]
0x9954: cmp qword ptr [rdi+0x10],rax
0x9958: je 0x9960
0x995a: jmp 0x1be0
0x9960: mov rax,qword ptr [rdi+0x20]
0x9964: cmp qword ptr [rdi+0x28],rax
0x9968: jne 0x995a
0x996a: cmp qword ptr [rdi+0x48],0x0
0x996f: jne 0x995a
0x9971: push r12
0x9973: push rbp
0x9974: mov r12d,edx
0x9977: push rbx
0x9978: mov rbp,rsi
0x997b: mov rbx,rdi
0x997e: call 0x1ad0
0x9983: mov edx,r12d
0x9986: mov rsi,rbp
0x9989: mov edi,eax
0x998b: call 0x19f0
0x9990: cmp rax,-0x1
0x9994: je 0x99a2
0x9996: and dword ptr [rbx],-0x11
0x9999: mov qword ptr [rbx+0x90],rax
0x99a0: xor eax,eax
0x99a2: pop rbx
0x99a3: pop rbp
0x99a4: pop r12
0x99a6: ret 
0x9b07: call 0x19a0
0x9b0c: nop dword ptr [rax]
0x9b20: push r15
0x9b22: push r14
0x9b24: mov r15,rdx
0x9b27: push r13
0x9b29: push r12
0x9b2b: lea r12,[rip+0x203e5e]
0x9b32: push rbp
0x9b33: lea rbp,[rip+0x203e5e]
0x9b3a: push rbx
0x9b3b: mov r13d,edi
0x9b3e: mov r14,rsi
0x9b41: sub rbp,r12
0x9b44: sub rsp,0x8
0x9b48: sar rbp,0x3
0x9b4c: call 0x1860
0x9b51: test rbp,rbp
0x9b54: je 0x9b76
0x9b56: xor ebx,ebx
0x9b58: nop dword ptr [rax+rax]
0x9b60: mov rdx,r15
0x9b63: mov rsi,r14
0x9b66: mov edi,r13d
0x9b69: call qword ptr [r12+rbx*8]
0x9b6d: add rbx,0x1
0x9b71: cmp rbp,rbx
0x9b74: jne 0x9b60
0x9b76: add rsp,0x8
0x9b7a: pop rbx
0x9b7b: pop rbp
0x9b7c: pop r12
0x9b7e: pop r13
0x9b80: pop r14
0x9b82: pop r15
0x9b84: ret 
0x9b90: rep ret 
