0x1490: sub rsp,0x8
0x1494: mov rax,qword ptr [rip+0x207b35]
0x149b: test rax,rax
0x149e: je 0x14a2
0x14a0: call rax
0x14a2: add rsp,0x8
0x14a6: ret 
0x14b6: jmp qword ptr [rip+0x20797c]
0x14d0: jmp qword ptr [rip+0x207972]
0x1510: jmp qword ptr [rip+0x207952]
0x1520: jmp qword ptr [rip+0x20794a]
0x1590: jmp qword ptr [rip+0x207912]
0x15b0: jmp qword ptr [rip+0x207902]
0x1640: jmp qword ptr [rip+0x2078ba]
0x1660: jmp qword ptr [rip+0x2078aa]
0x1680: jmp qword ptr [rip+0x20789a]
0x16a0: jmp qword ptr [rip+0x20788a]
0x16c0: jmp qword ptr [rip+0x20787a]
0x1790: jmp qword ptr [rip+0x207812]
0x17a0: jmp qword ptr [rip+0x20780a]
0x17c0: jmp qword ptr [rip+0x20781a]
0x194a: cmp byte ptr [rdi],0x20
0x1b8e: mov r12,rax
0x1b91: call 0x14f0
0x1b96: lea rdx,[rip+0x4c96]
0x1b9d: mov rcx,r12
0x1ba0: mov esi,dword ptr [rax]
0x1ba2: xor edi,edi
0x1ba4: xor eax,eax
0x1ba6: xor r12d,r12d
0x1ba9: call 0x1720
0x1bae: jmp 0x1b19
0x1c0b: lea rsi,[rip+0x467f]
0x1c12: mov edx,0x5
0x1c17: xor edi,edi
0x1c19: mov r15,rax
0x1c1c: call 0x1560
0x1c21: mov r12,rax
0x1c24: call 0x14f0
0x1c29: mov rcx,r15
0x1c2c: mov rdx,r12
0x1c2f: jmp 0x1ba0
0x1cb5: jmp 0x1c87
0x1cea: hlt 
0x1ceb: nop dword ptr [rax+rax]
0x1cf0: lea rdi,[rip+0x207389]
0x1cf7: push rbp
0x1cf8: lea rax,[rip+0x207381]
0x1cff: cmp rax,rdi
0x1d02: mov rbp,rsp
0x1d05: je 0x1d20
0x1d07: mov rax,qword ptr [rip+0x2072b2]
0x1d0e: test rax,rax
0x1d11: je 0x1d20
0x1d13: pop rbp
0x1d14: jmp rax
0x1d20: pop rbp
0x1d21: ret 
0x1d30: lea rdi,[rip+0x207349]
0x1d37: lea rsi,[rip+0x207342]
0x1d3e: push rbp
0x1d3f: sub rsi,rdi
0x1d42: mov rbp,rsp
0x1d45: sar rsi,0x3
0x1d49: mov rax,rsi
0x1d4c: shr rax,0x3f
0x1d50: add rsi,rax
0x1d53: sar rsi, 1
0x1d56: je 0x1d70
0x1d58: mov rax,qword ptr [rip+0x207279]
0x1d5f: test rax,rax
0x1d62: je 0x1d70
0x1d64: pop rbp
0x1d65: jmp rax
0x1d70: pop rbp
0x1d71: ret 
0x1d91: push rbp
0x1d92: mov rbp,rsp
0x1d95: je 0x1da3
0x1d97: mov rdi,qword ptr [rip+0x20726a]
0x1d9e: call 0x17c0
0x1da3: call 0x1cf0
0x1da8: mov byte ptr [rip+0x207319],0x1
0x1daf: pop rbp
0x1db0: ret 
0x1dc0: push rbp
0x1dc1: mov rbp,rsp
0x1dc4: pop rbp
0x1dc5: jmp 0x1d30
0x20c2: push rsi
0x21fa: jmp 0x21d4
0x220a: jmp 0x2188
0x2305: jmp 0x22e4
0x29d9: mov ecx,dword ptr [rip+0x21172d]
0x29df: jmp 0x299b
0x2a9a: mov rax,qword ptr [r13+0x8]
0x2a9e: cmp rax,qword ptr [r13+0x10]
0x2aa2: jb 0x2a64
0x2aa4: nop dword ptr [rax]
0x2b32: jmp 0x2a11
0x2beb: jmp 0x2acc
0x2dcf: nop 
0x31b0: mov qword ptr [rip+0x210f89],rdi
0x31b7: ret 
0x31c0: mov byte ptr [rip+0x210f71],dil
0x31c7: ret 
0x31d0: push rbp
0x31d1: push rbx
0x31d2: sub rsp,0x8
0x31d6: mov rdi,qword ptr [rip+0x205eab]
0x31dd: call 0x5fa0
0x31e2: test eax,eax
0x31e4: je 0x31fc
0x31e6: call 0x14f0
0x31eb: cmp byte ptr [rip+0x210f46],0x0
0x31f2: mov rbx,rax
0x31f5: je 0x3213
0x31f7: cmp dword ptr [rax],0x20
0x31fa: jne 0x3213
0x31fc: mov rdi,qword ptr [rip+0x205ebd]
0x3203: call 0x5fa0
0x3208: test eax,eax
0x320a: jne 0x3252
0x320c: add rsp,0x8
0x3210: pop rbx
0x3211: pop rbp
0x3212: ret 
0x3213: lea rsi,[rip+0x3609]
0x321a: xor edi,edi
0x321c: mov edx,0x5
0x3221: call 0x1560
0x3226: mov rdi,qword ptr [rip+0x210f13]
0x322d: mov rbp,rax
0x3230: test rdi,rdi
0x3233: je 0x325d
0x3235: call 0x4dd0
0x323a: mov esi,dword ptr [rbx]
0x323c: lea rdx,[rip+0x35ec]
0x3243: mov rcx,rax
0x3246: mov r8,rbp
0x3249: xor edi,edi
0x324b: xor eax,eax
0x324d: call 0x1720
0x3252: mov edi,dword ptr [rip+0x205dc0]
0x3258: call 0x1510
0x325d: mov esi,dword ptr [rbx]
0x325f: lea rdx,[rip+0x35cd]
0x3266: mov rcx,rax
0x3269: xor edi,edi
0x326b: xor eax,eax
0x326d: call 0x1720
0x3272: jmp 0x3252
0x3280: jmp 0x1630
0x335f: nop 
0x3360: push rbp
0x3361: push rbx
0x3362: mov rbp,rdi
0x3365: mov ebx,esi
0x3367: sub rsp,0x8
0x336b: call 0x6080
0x3370: movzx edx,byte ptr [rax]
0x3373: and edx,-0x21
0x3376: cmp dl,0x55
0x3379: je 0x33f0
0x337b: cmp dl,0x47
0x337e: je 0x33a0
0x3380: lea rax,[rip+0x2de6]
0x3387: lea rdx,[rip+0x34fd]
0x338e: cmp ebx,0x9
0x3391: cmovne rax,rdx
0x3395: add rsp,0x8
0x3399: pop rbx
0x339a: pop rbp
0x339b: ret 
0x33a0: movzx edx,byte ptr [rax+0x1]
0x33a4: and edx,-0x21
0x33a7: cmp dl,0x42
0x33aa: jne 0x3380
0x33ac: cmp byte ptr [rax+0x2],0x31
0x33b0: jne 0x3380
0x33b2: cmp byte ptr [rax+0x3],0x38
0x33b6: jne 0x3380
0x33b8: cmp byte ptr [rax+0x4],0x30
0x33bc: jne 0x3380
0x33be: cmp byte ptr [rax+0x5],0x33
0x33c2: jne 0x3380
0x33c4: cmp byte ptr [rax+0x6],0x30
0x33c8: jne 0x3380
0x33ca: cmp byte ptr [rax+0x7],0x0
0x33ce: jne 0x3380
0x33d0: cmp byte ptr [rbp],0x60
0x33d4: lea rax,[rip+0x34a9]
0x33db: lea rdx,[rip+0x34a6]
0x33e2: cmovne rax,rdx
0x33e6: add rsp,0x8
0x33ea: pop rbx
0x33eb: pop rbp
0x33ec: ret 
0x33f0: movzx edx,byte ptr [rax+0x1]
0x33f4: and edx,-0x21
0x33f7: cmp dl,0x54
0x33fa: jne 0x3380
0x33fc: movzx edx,byte ptr [rax+0x2]
0x3400: and edx,-0x21
0x3403: cmp dl,0x46
0x3406: jne 0x3380
0x340c: cmp byte ptr [rax+0x3],0x2d
0x3410: jne 0x3380
0x3416: cmp byte ptr [rax+0x4],0x38
0x341a: jne 0x3380
0x3420: cmp byte ptr [rax+0x5],0x0
0x3424: jne 0x3380
0x342a: cmp byte ptr [rbp],0x60
0x342e: lea rax,[rip+0x3447]
0x3435: lea rdx,[rip+0x3444]
0x343c: cmovne rax,rdx
0x3440: add rsp,0x8
0x3444: pop rbx
0x3445: pop rbp
0x3446: ret 
0x3523: xor r11d,r11d
0x3526: mov rax,rbp
0x3529: mov r8d,r12d
0x352c: mov rbp,r11
0x352f: mov r11,rax
0x3532: nop word ptr [rax+rax]
0x3538: cmp r11,rbp
0x353b: setne r12b
0x353f: cmp r11,-0x1
0x3543: jne 0x3552
0x3545: mov rax,qword ptr [rsp+0x10]
0x354a: cmp byte ptr [rax+rbp],0x0
0x354e: setne r12b
0x3552: test r12b,r12b
0x3555: je 0x3bb0
0x355b: cmp dword ptr [rsp+0x8],0x2
0x3560: mov rdi,qword ptr [rsp+0x10]
0x3565: lea r9,[rdi+rbp]
0x3569: setne al
0x356c: and al,byte ptr [rsp+0xd]
0x3570: mov r10d,eax
0x3573: je 0x3620
0x3579: mov rax,qword ptr [rsp+0x18]
0x357e: test rax,rax
0x3581: je 0x39b0
0x3587: cmp r11,-0x1
0x358b: lea rbx,[rbp+rax]
0x3590: jne 0x35c0
0x3592: cmp rax,0x1
0x3596: jbe 0x35c0
0x3598: mov byte ptr [rsp+0x38],r8b
0x359d: mov byte ptr [rsp+0x30],r10b
0x35a2: mov qword ptr [rsp+0x28],r9
0x35a7: call 0x1580
0x35ac: movzx r8d,byte ptr [rsp+0x38]
0x35b2: movzx r10d,byte ptr [rsp+0x30]
0x35b8: mov r11,rax
0x35bb: mov r9,qword ptr [rsp+0x28]
0x35c0: cmp rbx,r11
0x35c3: mov byte ptr [rsp+0x28],r10b
0x35c8: ja 0x3b80
0x35ce: mov rdx,qword ptr [rsp+0x18]
0x35d3: mov rsi,qword ptr [rsp+0x48]
0x35d8: mov rdi,r9
0x35db: mov qword ptr [rsp+0x40],r11
0x35e0: mov byte ptr [rsp+0x38],r8b
0x35e5: mov qword ptr [rsp+0x30],r9
0x35ea: call 0x1640
0x35ef: test eax,eax
0x35f1: mov r9,qword ptr [rsp+0x30]
0x35f6: movzx r8d,byte ptr [rsp+0x38]
0x35fc: mov r11,qword ptr [rsp+0x40]
0x3601: jne 0x3b80
0x3607: cmp byte ptr [rsp+0xf],0x0
0x360c: movzx r10d,byte ptr [rsp+0x28]
0x3612: jne 0x4595
0x3618: nop dword ptr [rax+rax]
0x3620: movzx ebx,byte ptr [r9]
0x3624: cmp bl,0x7e
0x3627: ja 0x3948
0x362d: lea rcx,[rip+0x32d8]
0x3634: movzx edx,bl
0x3637: movsxd rax,dword ptr [rcx+rdx*4]
0x363b: add rax,rcx
0x363e: jmp rax
0x3678: cmp byte ptr [rsp+0xd],0x1
0x367d: jne 0x3792
0x3683: test dl,dl
0x3685: jne 0x3792
0x368b: mov rsi,qword ptr [rsp+0x20]
0x3690: test rsi,rsi
0x3693: je 0x36a9
0x3695: mov edx,ebx
0x3697: shr dl,0x5
0x369a: movzx edx,dl
0x369d: mov edx,dword ptr [rsi+rdx*4]
0x36a0: btl edx,ebx
0x36a3: jb 0x37f3
0x36a9: test r10b,r10b
0x36ac: jne 0x37f3
0x36b2: xor eax,0x1
0x36b5: add rbp,0x1
0x36b9: and eax,r8d
0x36bc: test al,al
0x36be: je 0x36e0
0x36c0: cmp r13,r15
0x36c3: jbe 0x36ca
0x36c5: mov byte ptr [r14+r15],0x27
0x36ca: lea rax,[r15+0x1]
0x36ce: cmp r13,rax
0x36d1: jbe 0x36d9
0x36d3: mov byte ptr [r14+r15+0x1],0x27
0x36d9: add r15,0x2
0x36dd: xor r8d,r8d
0x36e0: cmp r15,r13
0x36e3: jae 0x36e9
0x36e5: mov byte ptr [r14+r15],bl
0x36e9: movzx edi,byte ptr [rsp+0xe]
0x36ee: add r15,0x1
0x36f2: mov eax,0x0
0x36f7: test r12b,r12b
0x36fa: cmove edi,eax
0x36fd: mov byte ptr [rsp+0xe],dil
0x3702: jmp 0x3538
0x3792: cmp byte ptr [rsp+0xf],0x0
0x3797: jne 0x368b
0x379d: jmp 0x36a9
0x37f3: cmp dword ptr [rsp+0x8],0x2
0x37f8: sete dl
0x37fb: cmp byte ptr [rsp+0xf],0x0
0x3800: mov eax,edx
0x3802: jne 0x4058
0x3808: mov eax,r8d
0x380b: xor eax,0x1
0x380e: and al,dl
0x3810: je 0x3841
0x3812: cmp r13,r15
0x3815: jbe 0x381c
0x3817: mov byte ptr [r14+r15],0x27
0x381c: lea rdx,[r15+0x1]
0x3820: cmp r13,rdx
0x3823: jbe 0x382b
0x3825: mov byte ptr [r14+r15+0x1],0x24
0x382b: lea rdx,[r15+0x2]
0x382f: cmp r13,rdx
0x3832: jbe 0x383a
0x3834: mov byte ptr [r14+r15+0x2],0x27
0x383a: add r15,0x3
0x383e: mov r8d,eax
0x3841: cmp r13,r15
0x3844: jbe 0x384b
0x3846: mov byte ptr [r14+r15],0x5c
0x384b: add r15,0x1
0x384f: add rbp,0x1
0x3853: jmp 0x36e0
0x3940: xor r10d,r10d
0x3943: nop dword ptr [rax+rax]
0x3948: cmp qword ptr [rsp+0x58],0x1
0x394e: jne 0x3cf8
0x3954: mov qword ptr [rsp+0x38],r11
0x3959: mov byte ptr [rsp+0x30],r8b
0x395e: mov byte ptr [rsp+0x28],r10b
0x3963: call 0x17b0
0x3968: mov rcx,qword ptr [rax]
0x396b: movzx edx,bl
0x396e: movzx r10d,byte ptr [rsp+0x28]
0x3974: movzx r8d,byte ptr [rsp+0x30]
0x397a: mov r11,qword ptr [rsp+0x38]
0x397f: mov edi,0x1
0x3984: movzx eax,word ptr [rcx+rdx*2]
0x3988: and ax,0x4000
0x398c: setne r12b
0x3990: sete al
0x3993: and al,byte ptr [rsp+0xd]
0x3997: test al,al
0x3999: jne 0x4331
0x399f: cmp dword ptr [rsp+0x8],0x2
0x39a4: sete dl
0x39a7: jmp 0x3678
0x39b0: movzx ebx,byte ptr [r9]
0x39b4: cmp bl,0x7e
0x39b7: ja 0x3940
0x39b9: lea rcx,[rip+0x3148]
0x39c0: movzx edx,bl
0x39c3: movsxd rax,dword ptr [rcx+rdx*4]
0x39c7: add rax,rcx
0x39ca: jmp rax
0x3b80: xor r10d,r10d
0x3b83: jmp 0x3620
0x3bb0: cmp dword ptr [rsp+0x8],0x2
0x3bb5: movzx ebx,byte ptr [rsp+0xf]
0x3bba: mov r12d,r8d
0x3bbd: mov rbp,r11
0x3bc0: sete dl
0x3bc3: mov eax,ebx
0x3bc5: test r15,r15
0x3bc8: sete cl
0x3bcb: and eax,edx
0x3bcd: and al,cl
0x3bcf: jne 0x4636
0x3bd5: mov eax,ebx
0x3bd7: xor eax,0x1
0x3bda: and dl,al
0x3bdc: je 0x454c
0x3be2: cmp byte ptr [rsp+0x7c],0x0
0x3be7: je 0x454a
0x3bed: cmp byte ptr [rsp+0xe],0x0
0x3bf2: jne 0x45ed
0x3bf8: test r13,r13
0x3bfb: sete al
0x3bfe: cmp qword ptr [rsp+0x50],0x0
0x3c04: setne dl
0x3c07: and al,dl
0x3c09: je 0x462c
0x3c0f: mov r13,qword ptr [rsp+0x50]
0x3c14: lea rbx,[rip+0x2c70]
0x3c1b: mov byte ptr [r14],0x27
0x3c1f: mov dword ptr [rsp+0x8],0x2
0x3c27: mov r15d,0x1
0x3c2d: mov qword ptr [rsp+0x18],0x1
0x3c36: mov byte ptr [rsp+0xf],0x0
0x3c3b: mov qword ptr [rsp+0x48],rbx
0x3c40: mov byte ptr [rsp+0x7c],al
0x3c44: jmp 0x3523
0x3cf8: lea rax,[rsp+0xa0]
0x3d00: cmp r11,-0x1
0x3d04: mov qword ptr [rsp+0xa0],0x0
0x3d10: mov qword ptr [rsp+0x28],rax
0x3d15: jne 0x3d44
0x3d17: mov rdi,qword ptr [rsp+0x10]
0x3d1c: mov byte ptr [rsp+0x40],r8b
0x3d21: mov byte ptr [rsp+0x38],r10b
0x3d26: mov qword ptr [rsp+0x30],r9
0x3d2b: call 0x1580
0x3d30: movzx r8d,byte ptr [rsp+0x40]
0x3d36: movzx r10d,byte ptr [rsp+0x38]
0x3d3c: mov r11,rax
0x3d3f: mov r9,qword ptr [rsp+0x30]
0x3d44: lea rax,[rsp+0x9c]
0x3d4c: xor ecx,ecx
0x3d4e: mov byte ptr [rsp+0x7e],bl
0x3d52: mov byte ptr [rsp+0x7d],r8b
0x3d57: mov rbx,rcx
0x3d5a: mov qword ptr [rsp+0x88],r9
0x3d62: mov qword ptr [rsp+0x38],rax
0x3d67: mov byte ptr [rsp+0x7f],r10b
0x3d6c: mov qword ptr [rsp+0x80],r15
0x3d74: mov qword ptr [rsp+0x40],r14
0x3d79: mov qword ptr [rsp+0x70],r13
0x3d7e: mov qword ptr [rsp+0x30],r11
0x3d83: mov rax,qword ptr [rsp+0x10]
0x3d88: lea r14,[rbp+rbx]
0x3d8d: mov rdx,qword ptr [rsp+0x30]
0x3d92: mov rcx,qword ptr [rsp+0x28]
0x3d97: mov rdi,qword ptr [rsp+0x38]
0x3d9c: lea r13,[rax+r14]
0x3da0: sub rdx,r14
0x3da3: mov rsi,r13
0x3da6: call 0x5f10
0x3dab: test rax,rax
0x3dae: mov r15,rax
0x3db1: je 0x3e01
0x3db3: cmp rax,-0x1
0x3db7: je 0x43d5
0x3dbd: cmp rax,-0x2
0x3dc1: je 0x4361
0x3dc7: cmp dword ptr [rsp+0x8],0x2
0x3dcc: sete al
0x3dcf: and al,byte ptr [rsp+0xf]
0x3dd3: jne 0x3f70
0x3dd9: mov edi,dword ptr [rsp+0x9c]
0x3de0: call 0x17a0
0x3de5: mov rdi,qword ptr [rsp+0x28]
0x3dea: test eax,eax
0x3dec: mov eax,0x0
0x3df1: cmove r12d,eax
0x3df5: add rbx,r15
0x3df8: call 0x1790
0x3dfd: test eax,eax
0x3dff: je 0x3d83
0x3e01: mov edx,r12d
0x3e04: mov rdi,rbx
0x3e07: movzx r8d,byte ptr [rsp+0x7d]
0x3e0d: xor edx,0x1
0x3e10: movzx ebx,byte ptr [rsp+0x7e]
0x3e15: movzx r10d,byte ptr [rsp+0x7f]
0x3e1b: and dl,byte ptr [rsp+0xd]
0x3e1f: mov r15,qword ptr [rsp+0x80]
0x3e27: mov r14,qword ptr [rsp+0x40]
0x3e2c: mov r13,qword ptr [rsp+0x70]
0x3e31: mov r11,qword ptr [rsp+0x30]
0x3e36: cmp rdi,0x1
0x3e3a: jbe 0x443b
0x3e40: mov rcx,rdi
0x3e43: xor esi,esi
0x3e45: movzx r9d,byte ptr [rsp+0xf]
0x3e4b: add rcx,rbp
0x3e4e: mov rdi,qword ptr [rsp+0x10]
0x3e53: jmp 0x3f0e
0x3e60: cmp dword ptr [rsp+0x8],0x2
0x3e65: sete al
0x3e68: test r9b,r9b
0x3e6b: jne 0x4320
0x3e71: mov esi,r8d
0x3e74: xor esi,0x1
0x3e77: and al,sil
0x3e7a: je 0x3eab
0x3e7c: cmp r13,r15
0x3e7f: jbe 0x3e86
0x3e81: mov byte ptr [r14+r15],0x27
0x3e86: lea rsi,[r15+0x1]
0x3e8a: cmp r13,rsi
0x3e8d: jbe 0x3e95
0x3e8f: mov byte ptr [r14+r15+0x1],0x24
0x3e95: lea rsi,[r15+0x2]
0x3e99: cmp r13,rsi
0x3e9c: jbe 0x3ea4
0x3e9e: mov byte ptr [r14+r15+0x2],0x27
0x3ea4: add r15,0x3
0x3ea8: mov r8d,eax
0x3eab: cmp r13,r15
0x3eae: jbe 0x3eb5
0x3eb0: mov byte ptr [r14+r15],0x5c
0x3eb5: lea rax,[r15+0x1]
0x3eb9: cmp r13,rax
0x3ebc: jbe 0x3ecb
0x3ebe: mov eax,ebx
0x3ec0: shr al,0x6
0x3ec3: add eax,0x30
0x3ec6: mov byte ptr [r14+r15+0x1],al
0x3ecb: lea rax,[r15+0x2]
0x3ecf: cmp r13,rax
0x3ed2: jbe 0x3ee4
0x3ed4: mov eax,ebx
0x3ed6: shr al,0x3
0x3ed9: and eax,0x7
0x3edc: add eax,0x30
0x3edf: mov byte ptr [r14+r15+0x2],al
0x3ee4: and ebx,0x7
0x3ee7: add rbp,0x1
0x3eeb: add r15,0x3
0x3eef: add ebx,0x30
0x3ef2: cmp rbp,rcx
0x3ef5: jae 0x36e0
0x3efb: mov esi,edx
0x3efd: cmp r13,r15
0x3f00: jbe 0x3f06
0x3f02: mov byte ptr [r14+r15],bl
0x3f06: movzx ebx,byte ptr [rdi+rbp]
0x3f0a: add r15,0x1
0x3f0e: test dl,dl
0x3f10: jne 0x3e60
0x3f16: mov eax,esi
0x3f18: xor eax,0x1
0x3f1b: and eax,r8d
0x3f1e: test r10b,r10b
0x3f21: je 0x3f31
0x3f23: cmp r13,r15
0x3f26: jbe 0x3f2d
0x3f28: mov byte ptr [r14+r15],0x5c
0x3f2d: add r15,0x1
0x3f31: add rbp,0x1
0x3f35: cmp rbp,rcx
0x3f38: jae 0x36bc
0x3f3e: test al,al
0x3f40: je 0x433e
0x3f46: cmp r13,r15
0x3f49: jbe 0x3f50
0x3f4b: mov byte ptr [r14+r15],0x27
0x3f50: lea rax,[r15+0x1]
0x3f54: cmp r13,rax
0x3f57: jbe 0x3f5f
0x3f59: mov byte ptr [r14+r15+0x1],0x27
0x3f5f: add r15,0x2
0x3f63: xor r10d,r10d
0x3f66: xor r8d,r8d
0x3f69: jmp 0x3efd
0x3f70: cmp r15,0x1
0x3f74: je 0x3dd9
0x3f7a: mov rdi,qword ptr [rsp+0x10]
0x3f7f: lea rcx,[rdi+r15]
0x3f83: lea rdx,[rdi+r14+0x1]
0x3f88: lea r8,[rcx+r14]
0x3f8c: jmp 0x3f9d
0x3f90: add rdx,0x1
0x3f94: cmp r8,rdx
0x3f97: je 0x3dd9
0x3f9d: movzx ecx,byte ptr [rdx]
0x3fa0: sub ecx,0x5b
0x3fa3: cmp cl,0x21
0x3fa6: ja 0x3f90
0x3fa8: mov esi,0x1
0x3fad: shl rsi,cl
0x3fb0: mov rcx,rsi
0x3fb3: movabsq rsi,0x20000002b
0x3fbd: test rcx,rsi
0x3fc0: je 0x3f90
0x3fc2: mov r14,qword ptr [rsp+0x40]
0x3fc7: mov r13,qword ptr [rsp+0x70]
0x3fcc: mov rbp,qword ptr [rsp+0x30]
0x3fd1: mov dword ptr [rsp+0x8],0x2
0x3fd9: cmp byte ptr [rsp+0xd],0x0
0x3fde: je 0x3ff0
0x3fe0: test al,al
0x3fe2: mov eax,0x4
0x3fe7: cmove eax,dword ptr [rsp+0x8]
0x3fec: mov dword ptr [rsp+0x8],eax
0x3ff0: sub rsp,0x8
0x3ff4: mov rcx,rbp
0x3ff7: mov rsi,r13
0x3ffa: push qword ptr [rsp+0x68]
0x3ffe: push qword ptr [rsp+0x78]
0x4002: mov rdi,r14
0x4005: push 0x0
0x4007: mov r9d,dword ptr [rsp+0x98]
0x400f: mov r8d,dword ptr [rsp+0x28]
0x4014: mov rdx,qword ptr [rsp+0x30]
0x4019: and r9d,-0x3
0x401d: call 0x3450
0x4022: add rsp,0x20
0x4026: mov r15,rax
0x4029: mov rbx,qword ptr [rsp+0xa8]
0x4031: xor rbx,qword ptr fs:0x28
0x403a: mov rax,r15
0x403d: jne 0x4643
0x4043: add rsp,0xb8
0x404a: pop rbx
0x404b: pop rbp
0x404c: pop r12
0x404e: pop r13
0x4050: pop r14
0x4052: pop r15
0x4054: ret 
0x4058: mov rbp,r11
0x405b: jmp 0x3fd9
0x40c1: test r13,r13
0x40c4: jne 0x465a
0x40ca: lea rax,[rip+0x27ba]
0x40d1: mov qword ptr [rsp+0x50],0x0
0x40da: mov byte ptr [rsp+0xe],0x1
0x40df: mov byte ptr [rsp+0x7c],0x0
0x40e4: xor r12d,r12d
0x40e7: mov byte ptr [rsp+0xf],0x0
0x40ec: mov qword ptr [rsp+0x18],0x1
0x40f5: mov qword ptr [rsp+0x48],rax
0x40fa: mov r15d,0x1
0x4100: mov dword ptr [rsp+0x8],0x2
0x4108: jmp 0x3523
0x4320: movzx ebx,byte ptr [rsp+0xf]
0x4325: mov rbp,r11
0x4328: mov byte ptr [rsp+0xd],bl
0x432c: jmp 0x3fd9
0x4331: movzx edx,byte ptr [rsp+0xd]
0x4336: xor r12d,r12d
0x4339: jmp 0x3e40
0x433e: xor r10d,r10d
0x4341: jmp 0x3efd
0x4361: mov r11,qword ptr [rsp+0x30]
0x4366: mov rsi,r14
0x4369: mov rcx,r13
0x436c: mov rax,rbx
0x436f: mov rdi,rbx
0x4372: movzx r8d,byte ptr [rsp+0x7d]
0x4378: movzx ebx,byte ptr [rsp+0x7e]
0x437d: mov r9,qword ptr [rsp+0x88]
0x4385: cmp rsi,r11
0x4388: movzx r10d,byte ptr [rsp+0x7f]
0x438e: mov r15,qword ptr [rsp+0x80]
0x4396: mov r14,qword ptr [rsp+0x40]
0x439b: mov r13,qword ptr [rsp+0x70]
0x43a0: jae 0x43c8
0x43a2: cmp byte ptr [rcx],0x0
0x43a5: jne 0x43b7
0x43a7: jmp 0x43c8
0x43b0: cmp byte ptr [r9+rax],0x0
0x43b5: je 0x43c5
0x43b7: add rax,0x1
0x43bb: lea rdx,[rbp+rax]
0x43c0: cmp r11,rdx
0x43c3: ja 0x43b0
0x43c5: mov rdi,rax
0x43c8: movzx edx,byte ptr [rsp+0xd]
0x43cd: xor r12d,r12d
0x43d0: jmp 0x3e36
0x43d5: mov rdi,rbx
0x43d8: movzx r8d,byte ptr [rsp+0x7d]
0x43de: movzx ebx,byte ptr [rsp+0x7e]
0x43e3: movzx r10d,byte ptr [rsp+0x7f]
0x43e9: mov r15,qword ptr [rsp+0x80]
0x43f1: xor r12d,r12d
0x43f4: mov r14,qword ptr [rsp+0x40]
0x43f9: mov r13,qword ptr [rsp+0x70]
0x43fe: mov r11,qword ptr [rsp+0x30]
0x4403: movzx edx,byte ptr [rsp+0xd]
0x4408: jmp 0x3e36
0x443b: mov eax,edx
0x443d: jmp 0x3997
0x454a: mov eax,edx
0x454c: mov rbx,qword ptr [rsp+0x48]
0x4551: test rbx,rbx
0x4554: je 0x4582
0x4556: test al,al
0x4558: je 0x4582
0x455a: movzx ecx,byte ptr [rbx]
0x455d: mov rax,rbx
0x4560: test cl,cl
0x4562: je 0x4582
0x4564: mov rdx,r15
0x4567: sub rax,r15
0x456a: cmp r13,rdx
0x456d: jbe 0x4573
0x456f: mov byte ptr [r14+rdx],cl
0x4573: add rdx,0x1
0x4577: movzx ecx,byte ptr [rax+rdx]
0x457b: test cl,cl
0x457d: jne 0x456a
0x457f: mov r15,rdx
0x4582: cmp r13,r15
0x4585: jbe 0x4029
0x458b: mov byte ptr [r14+r15],0x0
0x4590: jmp 0x4029
0x4595: cmp dword ptr [rsp+0x8],0x2
0x459a: movzx ebx,byte ptr [rsp+0xf]
0x459f: mov rbp,r11
0x45a2: sete al
0x45a5: mov byte ptr [rsp+0xd],bl
0x45a9: jmp 0x3fd9
0x45ed: sub rsp,0x8
0x45f1: mov r8d,0x5
0x45f7: mov rcx,r11
0x45fa: push qword ptr [rsp+0x68]
0x45fe: push qword ptr [rsp+0x78]
0x4602: mov rdi,r14
0x4605: push qword ptr [rsp+0x38]
0x4609: mov r9d,dword ptr [rsp+0x98]
0x4611: mov rdx,qword ptr [rsp+0x30]
0x4616: mov rsi,qword ptr [rsp+0x70]
0x461b: call 0x3450
0x4620: add rsp,0x20
0x4624: mov r15,rax
0x4627: jmp 0x4029
0x462c: movzx eax,byte ptr [rsp+0x7c]
0x4631: jmp 0x454c
0x4636: mov dword ptr [rsp+0x8],0x2
0x463e: jmp 0x3fd9
0x4643: call 0x1590
0x4648: mov byte ptr [rsp+0xd],0x0
0x464d: jmp 0x40c1
0x465a: mov byte ptr [rsp+0xe],0x1
0x465f: xor eax,eax
0x4661: xor r12d,r12d
0x4664: mov qword ptr [rsp+0x50],0x0
0x466d: jmp 0x3c14
0x4684: nop 
0x4686: nop word ptr cs:[rax+rax]
0x477c: add rsp,0x20
0x4780: mov r11,qword ptr [rsp+0x10]
0x4785: cmp r11,rax
0x4788: ja 0x47f1
0x478a: lea rsi,[rax+0x1]
0x478e: lea rax,[rip+0x20f9cb]
0x4795: cmp r12,rax
0x4798: mov qword ptr [rbx],rsi
0x479b: je 0x47af
0x479d: mov rdi,r12
0x47a0: mov qword ptr [rsp+0x10],rsi
0x47a5: call 0x14d0
0x47aa: mov rsi,qword ptr [rsp+0x10]
0x47af: mov rdi,rsi
0x47b2: mov qword ptr [rsp+0x10],rsi
0x47b7: call 0x5610
0x47bc: sub rsp,0x8
0x47c0: mov qword ptr [rbx+0x8],rax
0x47c4: mov r8d,dword ptr [rbp]
0x47c8: push qword ptr [rbp+0x30]
0x47cb: push qword ptr [rbp+0x28]
0x47ce: mov rcx,r14
0x47d1: push r15
0x47d3: mov r9d,dword ptr [rsp+0x3c]
0x47d8: mov rdi,rax
0x47db: mov rdx,qword ptr [rsp+0x28]
0x47e0: mov rsi,qword ptr [rsp+0x30]
0x47e5: mov r12,rax
0x47e8: call 0x3450
0x47ed: add rsp,0x20
0x47f1: mov eax,dword ptr [rsp+0x18]
0x47f5: mov dword ptr [r13],eax
0x47f9: add rsp,0x28
0x47fd: mov rax,r12
0x4800: pop rbx
0x4801: pop rbp
0x4802: pop r12
0x4804: pop r13
0x4806: pop r14
0x4808: pop r15
0x480a: ret 
0x4831: call 0x14e0
0x4836: call 0x5860
0x483b: nop dword ptr [rax+rax]
0x4840: push r12
0x4842: push rbp
0x4843: push rbx
0x4844: mov rbx,rdi
0x4847: call 0x14f0
0x484c: mov r12d,dword ptr [rax]
0x484f: mov rbp,rax
0x4852: lea rax,[rip+0x20fa07]
0x4859: test rbx,rbx
0x485c: mov esi,0x38
0x4861: cmove rbx,rax
0x4865: mov rdi,rbx
0x4868: call 0x5810
0x486d: mov dword ptr [rbp],r12d
0x4871: pop rbx
0x4872: pop rbp
0x4873: pop r12
0x4875: ret 
0x4880: lea rax,[rip+0x20f9d9]
0x4887: test rdi,rdi
0x488a: cmove rdi,rax
0x488e: mov eax,dword ptr [rdi]
0x4890: ret 
0x48a0: lea rax,[rip+0x20f9b9]
0x48a7: test rdi,rdi
0x48aa: cmove rdi,rax
0x48ae: mov dword ptr [rdi],esi
0x48b0: ret 
0x48c0: lea rax,[rip+0x20f999]
0x48c7: test rdi,rdi
0x48ca: mov ecx,esi
0x48cc: cmove rdi,rax
0x48d0: mov eax,esi
0x48d2: and ecx,0x1f
0x48d5: shr al,0x5
0x48d8: movzx eax,al
0x48db: lea rdi,[rdi+rax*4+0x8]
0x48e0: mov esi,dword ptr [rdi]
0x48e2: mov eax,esi
0x48e4: shr eax,cl
0x48e6: xor edx,eax
0x48e8: and eax,0x1
0x48eb: and edx,0x1
0x48ee: shl edx,cl
0x48f0: xor edx,esi
0x48f2: mov dword ptr [rdi],edx
0x48f4: ret 
0x4900: lea rax,[rip+0x20f959]
0x4907: test rdi,rdi
0x490a: cmove rdi,rax
0x490e: mov eax,dword ptr [rdi+0x4]
0x4911: mov dword ptr [rdi+0x4],esi
0x4914: ret 
0x4920: lea rax,[rip+0x20f939]
0x4927: test rdi,rdi
0x492a: cmove rdi,rax
0x492e: test rsi,rsi
0x4931: mov dword ptr [rdi],0xa
0x4937: je 0x4947
0x4939: test rdx,rdx
0x493c: je 0x4947
0x493e: mov qword ptr [rdi+0x28],rsi
0x4942: mov qword ptr [rdi+0x30],rdx
0x4946: ret 
0x4947: sub rsp,0x8
0x494b: call 0x14e0
0x4950: push r15
0x4952: push r14
0x4954: lea rax,[rip+0x20f905]
0x495b: push r13
0x495d: push r12
0x495f: mov r13,rdi
0x4962: push rbp
0x4963: push rbx
0x4964: mov rbx,r8
0x4967: mov r14,rsi
0x496a: mov r15,rdx
0x496d: sub rsp,0x18
0x4971: test r8,r8
0x4974: cmove rbx,rax
0x4978: mov qword ptr [rsp+0x8],rcx
0x497d: call 0x14f0
0x4982: mov r12d,dword ptr [rax]
0x4985: mov rbp,rax
0x4988: lea rax,[rbx+0x8]
0x498c: sub rsp,0x8
0x4990: mov r9d,dword ptr [rbx+0x4]
0x4994: push qword ptr [rbx+0x30]
0x4997: mov r8d,dword ptr [rbx]
0x499a: push qword ptr [rbx+0x28]
0x499d: mov rdx,r15
0x49a0: push rax
0x49a1: mov rcx,qword ptr [rsp+0x28]
0x49a6: mov rsi,r14
0x49a9: mov rdi,r13
0x49ac: call 0x3450
0x49b1: mov dword ptr [rbp],r12d
0x49b5: add rsp,0x38
0x49b9: pop rbx
0x49ba: pop rbp
0x49bb: pop r12
0x49bd: pop r13
0x49bf: pop r14
0x49c1: pop r15
0x49c3: ret 
0x49d0: push r15
0x49d2: push r14
0x49d4: lea rax,[rip+0x20f885]
0x49db: push r13
0x49dd: push r12
0x49df: mov r12,rdx
0x49e2: push rbp
0x49e3: push rbx
0x49e4: mov rbx,rcx
0x49e7: mov r14,rdi
0x49ea: mov r15,rsi
0x49ed: sub rsp,0x38
0x49f1: test rcx,rcx
0x49f4: cmove rbx,rax
0x49f8: xor ebp,ebp
0x49fa: call 0x14f0
0x49ff: test r12,r12
0x4a02: mov r13,rax
0x4a05: mov eax,dword ptr [rax]
0x4a07: sete bpl
0x4a0b: or ebp,dword ptr [rbx+0x4]
0x4a0e: lea r10,[rbx+0x8]
0x4a12: sub rsp,0x8
0x4a16: mov r8d,dword ptr [rbx]
0x4a19: mov rcx,r15
0x4a1c: mov dword ptr [rsp+0x14],eax
0x4a20: push qword ptr [rbx+0x30]
0x4a23: mov rdx,r14
0x4a26: push qword ptr [rbx+0x28]
0x4a29: push r10
0x4a2b: xor esi,esi
0x4a2d: mov r9d,ebp
0x4a30: xor edi,edi
0x4a32: mov qword ptr [rsp+0x40],r10
0x4a37: call 0x3450
0x4a3c: lea rsi,[rax+0x1]
0x4a40: mov qword ptr [rsp+0x48],rax
0x4a45: add rsp,0x20
0x4a49: mov rdi,rsi
0x4a4c: mov qword ptr [rsp+0x18],rsi
0x4a51: call 0x5610
0x4a56: mov qword ptr [rsp+0x10],rax
0x4a5b: sub rsp,0x8
0x4a5f: push qword ptr [rbx+0x30]
0x4a62: push qword ptr [rbx+0x28]
0x4a65: mov r10,qword ptr [rsp+0x38]
0x4a6a: mov r9d,ebp
0x4a6d: mov r8d,dword ptr [rbx]
0x4a70: mov rcx,r15
0x4a73: mov rdx,r14
0x4a76: mov rdi,rax
0x4a79: push r10
0x4a7b: mov rsi,qword ptr [rsp+0x38]
0x4a80: call 0x3450
0x4a85: mov eax,dword ptr [rsp+0x2c]
0x4a89: add rsp,0x20
0x4a8d: test r12,r12
0x4a90: mov dword ptr [r13],eax
0x4a94: je 0x4a9f
0x4a96: mov r11,qword ptr [rsp+0x28]
0x4a9b: mov qword ptr [r12],r11
0x4a9f: mov rax,qword ptr [rsp+0x10]
0x4aa4: add rsp,0x38
0x4aa8: pop rbx
0x4aa9: pop rbp
0x4aaa: pop r12
0x4aac: pop r13
0x4aae: pop r14
0x4ab0: pop r15
0x4ab2: ret 
0x4ac0: mov rcx,rdx
0x4ac3: xor edx,edx
0x4ac5: jmp 0x49d0
0x4ad0: mov eax,dword ptr [rip+0x204582]
0x4ad6: push r12
0x4ad8: mov r12,qword ptr [rip+0x204581]
0x4adf: push rbp
0x4ae0: push rbx
0x4ae1: cmp eax,0x1
0x4ae4: jle 0x4b11
0x4ae6: sub eax,0x2
0x4ae9: lea rbx,[r12+0x18]
0x4aee: shl rax,0x4
0x4af2: lea rbp,[r12+rax+0x28]
0x4af7: nop word ptr [rax+rax]
0x4b00: mov rdi,qword ptr [rbx]
0x4b03: add rbx,0x10
0x4b07: call 0x14d0
0x4b0c: cmp rbx,rbp
0x4b0f: jne 0x4b00
0x4b11: mov rdi,qword ptr [r12+0x8]
0x4b16: lea rbx,[rip+0x20f643]
0x4b1d: cmp rdi,rbx
0x4b20: je 0x4b39
0x4b22: call 0x14d0
0x4b27: mov qword ptr [rip+0x20453e],0x100
0x4b32: mov qword ptr [rip+0x20453f],rbx
0x4b39: lea rbx,[rip+0x204530]
0x4b40: cmp r12,rbx
0x4b43: je 0x4b54
0x4b45: mov rdi,r12
0x4b48: call 0x14d0
0x4b4d: mov qword ptr [rip+0x20450c],rbx
0x4b54: pop rbx
0x4b55: mov dword ptr [rip+0x2044f9],0x1
0x4b5f: pop rbp
0x4b60: pop r12
0x4b62: ret 
0x4b70: lea rcx,[rip+0x20f6e9]
0x4b77: mov rdx,-0x1
0x4b7e: jmp 0x4690
0x4b90: lea rcx,[rip+0x20f6c9]
0x4b97: jmp 0x4690
0x4ba0: lea rcx,[rip+0x20f6b9]
0x4ba7: mov rsi,rdi
0x4baa: mov rdx,-0x1
0x4bb1: xor edi,edi
0x4bb3: jmp 0x4690
0x4bc0: lea rcx,[rip+0x20f699]
0x4bc7: mov rdx,rsi
0x4bca: mov rsi,rdi
0x4bcd: xor edi,edi
0x4bcf: jmp 0x4690
0x4c4f: mov rcx,qword ptr [rsp+0x38]
0x4c54: xor rcx,qword ptr fs:0x28
0x4c5d: jne 0x4c69
0x4c5f: add rsp,0x48
0x4c63: ret 
0x4c64: call 0x14e0
0x4c69: call 0x1590
0x4c6e: nop 
0x4c70: sub rsp,0x48
0x4c74: mov rax,rdx
0x4c77: mov rdx,rcx
0x4c7a: mov rcx,qword ptr fs:0x28
0x4c83: mov qword ptr [rsp+0x38],rcx
0x4c88: xor ecx,ecx
0x4c8a: cmp esi,0xa
0x4c8d: je 0x4cf0
0x4c8f: mov dword ptr [rsp],esi
0x4c92: mov rcx,rsp
0x4c95: mov rsi,rax
0x4c98: mov qword ptr [rsp+0x4],0x0
0x4ca1: mov qword ptr [rsp+0xc],0x0
0x4caa: mov qword ptr [rsp+0x14],0x0
0x4cb3: mov qword ptr [rsp+0x1c],0x0
0x4cbc: mov qword ptr [rsp+0x24],0x0
0x4cc5: mov qword ptr [rsp+0x2c],0x0
0x4cce: mov dword ptr [rsp+0x34],0x0
0x4cd6: call 0x4690
0x4cdb: mov rdx,qword ptr [rsp+0x38]
0x4ce0: xor rdx,qword ptr fs:0x28
0x4ce9: jne 0x4cf5
0x4ceb: add rsp,0x48
0x4cef: ret 
0x4cf0: call 0x14e0
0x4cf5: call 0x1590
0x4cfa: nop word ptr [rax+rax]
0x4d10: mov rcx,rdx
0x4d13: mov rdx,rsi
0x4d16: mov esi,edi
0x4d18: xor edi,edi
0x4d1a: jmp 0x4c70
0x4d20: sub rsp,0x48
0x4d24: mov ecx,edx
0x4d26: mov rax,qword ptr fs:0x28
0x4d2f: mov qword ptr [rsp+0x38],rax
0x4d34: xor eax,eax
0x4d36: mov rax,qword ptr [rip+0x20f553]
0x4d3d: mov r8,rsp
0x4d40: and ecx,0x1f
0x4d43: movdqa xmm0,[rip+0x20f515]
0x4d4b: mov qword ptr [rsp+0x30],rax
0x4d50: mov eax,edx
0x4d52: movaps [rsp],xmm0
0x4d56: shr al,0x5
0x4d59: movzx eax,al
0x4d5c: lea r9,[r8+rax*4+0x8]
0x4d61: movdqa xmm0,[rip+0x20f507]
0x4d69: movaps [rsp+0x10],xmm0
0x4d6e: movdqa xmm0,[rip+0x20f50a]
0x4d76: movaps [rsp+0x20],xmm0
0x4d7b: mov edx,dword ptr [r9]
0x4d7e: mov eax,edx
0x4d80: shr eax,cl
0x4d82: not eax
0x4d84: and eax,0x1
0x4d87: shl eax,cl
0x4d89: mov rcx,r8
0x4d8c: xor eax,edx
0x4d8e: mov rdx,rsi
0x4d91: mov rsi,rdi
0x4d94: mov dword ptr [r9],eax
0x4d97: xor edi,edi
0x4d99: call 0x4690
0x4d9e: mov rsi,qword ptr [rsp+0x38]
0x4da3: xor rsi,qword ptr fs:0x28
0x4dac: jne 0x4db3
0x4dae: add rsp,0x48
0x4db2: ret 
0x4db3: call 0x1590
0x4db8: nop dword ptr [rax+rax]
0x4dc0: movsx edx,sil
0x4dc4: mov rsi,-0x1
0x4dcb: jmp 0x4d20
0x4dd0: mov edx,0x3a
0x4dd5: mov rsi,-0x1
0x4ddc: jmp 0x4d20
0x4df0: mov edx,0x3a
0x4df5: jmp 0x4d20
0x4e6f: mov rcx,qword ptr [rsp+0x38]
0x4e74: xor rcx,qword ptr fs:0x28
0x4e7d: jne 0x4e89
0x4e7f: add rsp,0x48
0x4e83: ret 
0x4e84: call 0x14e0
0x4e89: call 0x1590
0x4e8e: nop 
0x4e90: sub rsp,0x48
0x4e94: mov r9,rcx
0x4e97: mov rcx,qword ptr [rip+0x20f3f2]
0x4e9e: movdqa xmm0,[rip+0x20f3ba]
0x4ea6: mov rax,qword ptr fs:0x28
0x4eaf: mov qword ptr [rsp+0x38],rax
0x4eb4: xor eax,eax
0x4eb6: movaps [rsp],xmm0
0x4eba: test rsi,rsi
0x4ebd: mov qword ptr [rsp+0x30],rcx
0x4ec2: mov dword ptr [rsp],0xa
0x4ec9: movdqa xmm0,[rip+0x20f39f]
0x4ed1: movaps [rsp+0x10],xmm0
0x4ed6: movdqa xmm0,[rip+0x20f3a2]
0x4ede: movaps [rsp+0x20],xmm0
0x4ee3: je 0x4f17
0x4ee5: test rdx,rdx
0x4ee8: je 0x4f17
0x4eea: mov qword ptr [rsp+0x28],rsi
0x4eef: mov qword ptr [rsp+0x30],rdx
0x4ef4: mov rcx,rsp
0x4ef7: mov rdx,r8
0x4efa: mov rsi,r9
0x4efd: call 0x4690
0x4f02: mov rdi,qword ptr [rsp+0x38]
0x4f07: xor rdi,qword ptr fs:0x28
0x4f10: jne 0x4f1c
0x4f12: add rsp,0x48
0x4f16: ret 
0x4f17: call 0x14e0
0x4f1c: call 0x1590
0x4f21: nop dword ptr [rax+rax]
0x4f26: nop word ptr cs:[rax+rax]
0x4f30: mov r8,-0x1
0x4f37: jmp 0x4e90
0x4f40: mov rcx,rdx
0x4f43: mov r8,-0x1
0x4f4a: mov rdx,rsi
0x4f4d: mov rsi,rdi
0x4f50: xor edi,edi
0x4f52: jmp 0x4e90
0x4f60: mov r8,rcx
0x4f63: mov rcx,rdx
0x4f66: mov rdx,rsi
0x4f69: mov rsi,rdi
0x4f6c: xor edi,edi
0x4f6e: jmp 0x4e90
0x4f80: lea rcx,[rip+0x204099]
0x4f87: jmp 0x4690
0x4f90: lea rcx,[rip+0x204089]
0x4f97: mov rdx,rsi
0x4f9a: mov rsi,rdi
0x4f9d: xor edi,edi
0x4f9f: jmp 0x4690
0x4fb0: lea rcx,[rip+0x204069]
0x4fb7: mov rdx,-0x1
0x4fbe: jmp 0x4690
0x5128: mov r8,rcx
0x512b: mov rcx,rdx
0x512e: lea rdx,[rip+0x1c1f]
0x5135: mov esi,0x1
0x513a: xor eax,eax
0x513c: call 0x1780
0x5141: jmp 0x502c
0x533d: push r12
0x533f: push r15
0x5341: push r14
0x5343: mov r8,qword ptr [rsp+0x20]
0x5348: mov rcx,rbx
0x534b: mov rdx,rax
0x534e: mov rdi,rbp
0x5351: mov esi,0x1
0x5356: xor eax,eax
0x5358: call 0x1780
0x535d: add rsp,0x20
0x5361: add rsp,0x28
0x5365: pop rbx
0x5366: pop rbp
0x5367: pop r12
0x5369: pop r13
0x536b: pop r14
0x536d: pop r15
0x536f: ret 
0x53a9: push r12
0x53ab: push r15
0x53ad: push r14
0x53af: mov r9,qword ptr [rsp+0x28]
0x53b4: jmp 0x5343
0x5410: xor r9d,r9d
0x5413: cmp qword ptr [r8],0x0
0x5417: je 0x542b
0x5419: nop dword ptr [rax]
0x5420: add r9,0x1
0x5424: cmp qword ptr [r8+r9*8],0x0
0x5429: jne 0x5420
0x542b: jmp 0x4ff0
0x5430: sub rsp,0x68
0x5434: mov r10,r8
0x5437: xor r9d,r9d
0x543a: mov rax,qword ptr fs:0x28
0x5443: mov qword ptr [rsp+0x58],rax
0x5448: xor eax,eax
0x544a: mov r8,rsp
0x544d: nop dword ptr [rax]
0x5450: mov eax,dword ptr [r10]
0x5453: cmp eax,0x2f
0x5456: ja 0x549a
0x5458: mov r11d,eax
0x545b: add r11,qword ptr [r10+0x10]
0x545f: add eax,0x8
0x5462: mov dword ptr [r10],eax
0x5465: mov rax,qword ptr [r11]
0x5468: test rax,rax
0x546b: mov qword ptr [r8+r9*8],rax
0x546f: je 0x547b
0x5471: add r9,0x1
0x5475: cmp r9,0xa
0x5479: jne 0x5450
0x547b: call 0x4ff0
0x5480: mov rax,qword ptr [rsp+0x58]
0x5485: xor rax,qword ptr fs:0x28
0x548e: jne 0x5495
0x5490: add rsp,0x68
0x5494: ret 
0x5495: call 0x1590
0x549a: mov r11,qword ptr [r10+0x8]
0x549e: lea rax,[r11+0x8]
0x54a2: mov qword ptr [r10+0x8],rax
0x54a6: jmp 0x5465
0x5570: call 0x1590
0x557c: mov rax,rbx
0x557f: add rbx,0x8
0x5583: jmp 0x5536
0x5590: push rbx
0x5591: lea rsi,[rip+0x180a]
0x5598: mov edx,0x5
0x559d: xor edi,edi
0x559f: call 0x1560
0x55a4: lea rdx,[rip+0x180c]
0x55ab: mov rsi,rax
0x55ae: mov edi,0x1
0x55b3: xor eax,eax
0x55b5: call 0x1710
0x55ba: lea rsi,[rip+0x180c]
0x55c1: mov edx,0x5
0x55c6: xor edi,edi
0x55c8: call 0x1560
0x55cd: lea rcx,[rip+0x1134]
0x55d4: lea rdx,[rip+0xc40]
0x55db: mov rsi,rax
0x55de: mov edi,0x1
0x55e3: xor eax,eax
0x55e5: call 0x1710
0x55ea: mov rbx,qword ptr [rip+0x203a97]
0x55f1: lea rsi,[rip+0x1a08]
0x55f8: xor edi,edi
0x55fa: mov edx,0x5
0x55ff: call 0x1560
0x5604: mov rsi,rbx
0x5607: mov rdi,rax
0x560a: pop rbx
0x560b: jmp 0x1650
0x5610: push rbx
0x5611: mov rbx,rdi
0x5614: call 0x16a0
0x5619: test rax,rax
0x561c: jne 0x5623
0x561e: test rbx,rbx
0x5621: jne 0x5625
0x5623: pop rbx
0x5624: ret 
0x5625: call 0x5860
0x562a: nop word ptr [rax+rax]
0x5630: mov rax,rdi
0x5633: mul rsi
0x5636: mov rdi,rax
0x5639: seto al
0x563c: test rdi,rdi
0x563f: js 0x564b
0x5641: movzx eax,al
0x5644: test rax,rax
0x5647: jne 0x564b
0x5649: jmp 0x5610
0x564b: sub rsp,0x8
0x564f: call 0x5860
0x5654: nop 
0x5656: nop word ptr cs:[rax+rax]
0x5660: jmp 0x5610
0x5679: test rdi,rdi
0x567c: jne 0x5698
0x5698: call 0x14d0
0x569d: xor eax,eax
0x569f: pop rbx
0x56a0: ret 
0x56a6: nop word ptr cs:[rax+rax]
0x56b0: mov rax,rsi
0x56b3: mul rdx
0x56b6: mov rsi,rax
0x56b9: seto al
0x56bc: test rsi,rsi
0x56bf: js 0x56cb
0x56c1: movzx eax,al
0x56c4: test rax,rax
0x56c7: jne 0x56cb
0x56c9: jmp 0x5670
0x56cb: sub rsp,0x8
0x56cf: call 0x5860
0x56d4: nop 
0x56d6: nop word ptr cs:[rax+rax]
0x56e0: test rdi,rdi
0x56e3: mov r9,rdx
0x56e6: mov rcx,qword ptr [rsi]
0x56e9: je 0x5720
0x56eb: xor edx,edx
0x56ed: movabsq rax,0x5555555555555554
0x56f7: div r9
0x56fa: cmp rax,rcx
0x56fd: jbe 0x573b
0x56ff: mov rax,rcx
0x5702: shr rax, 1
0x5705: lea rcx,[rax+rcx+0x1]
0x570a: mov qword ptr [rsi],rcx
0x570d: imul rcx,r9
0x5711: mov rsi,rcx
0x5714: jmp 0x5670
0x5720: test rcx,rcx
0x5723: je 0x5748
0x5725: mov rax,rcx
0x5728: mul r9
0x572b: seto dl
0x572e: test rax,rax
0x5731: movzx edx,dl
0x5734: js 0x573b
0x5736: test rdx,rdx
0x5739: je 0x570a
0x573b: sub rsp,0x8
0x573f: call 0x5860
0x5744: nop dword ptr [rax]
0x5748: xor edx,edx
0x574a: mov eax,0x80
0x574f: xor r8d,r8d
0x5752: div r9
0x5755: test rax,rax
0x5758: sete r8b
0x575c: lea rcx,[r8+rax]
0x5760: jmp 0x5725
0x5770: test rdi,rdi
0x5773: mov rax,qword ptr [rsi]
0x5776: je 0x57a0
0x5778: movabsq rdx,0x5555555555555553
0x5782: cmp rax,rdx
0x5785: ja 0x57b1
0x5787: mov rdx,rax
0x578a: shr rdx, 1
0x578d: lea rax,[rdx+rax+0x1]
0x5792: mov qword ptr [rsi],rax
0x5795: mov rsi,rax
0x5798: jmp 0x5670
0x57a0: test rax,rax
0x57a3: mov edx,0x80
0x57a8: cmove rax,rdx
0x57ac: test rax,rax
0x57af: jns 0x5792
0x57b1: sub rsp,0x8
0x57b5: call 0x5860
0x57ba: nop word ptr [rax+rax]
0x57c0: push rbx
0x57c1: mov rbx,rdi
0x57c4: call 0x5610
0x57c9: mov rdx,rbx
0x57cc: xor esi,esi
0x57ce: mov rdi,rax
0x57d1: pop rbx
0x57d2: jmp 0x1620
0x57e0: mov rax,rdi
0x57e3: sub rsp,0x8
0x57e7: mul rsi
0x57ea: seto dl
0x57ed: test rax,rax
0x57f0: js 0x5809
0x57f2: movzx edx,dl
0x57f5: test rdx,rdx
0x57f8: jne 0x5809
0x57fa: call 0x1660
0x57ff: test rax,rax
0x5802: je 0x5809
0x5804: add rsp,0x8
0x5808: ret 
0x5809: call 0x5860
0x580e: nop 
0x5810: push rbp
0x5811: push rbx
0x5812: mov rbp,rdi
0x5815: mov rdi,rsi
0x5818: mov rbx,rsi
0x581b: sub rsp,0x8
0x581f: call 0x5610
0x5824: add rsp,0x8
0x5828: mov rdx,rbx
0x582b: mov rsi,rbp
0x582e: pop rbx
0x582f: pop rbp
0x5830: mov rdi,rax
0x5833: jmp 0x1680
0x5840: push rbx
0x5841: mov rbx,rdi
0x5844: call 0x1580
0x5849: mov rdi,rbx
0x584c: lea rsi,[rax+0x1]
0x5850: pop rbx
0x5851: jmp 0x5810
0x5890: call 0x14e0
0x5895: nop word ptr cs:[rax+rax]
0x589f: nop 
0x5912: mov esi,dword ptr [r14]
0x5915: mov r8,rax
0x5918: mov eax,0x0
0x591d: lea rdx,[rip+0xf0b]
0x5924: mov rcx,r13
0x5927: cmp esi,0x16
0x592a: cmove esi,eax
0x592d: test ebx,ebx
0x592f: mov eax,0x1
0x5934: cmove ebx,eax
0x5937: xor eax,eax
0x5939: mov edi,ebx
0x593b: call 0x1720
0x5940: mov rbp,qword ptr [rsp]
0x599b: call 0x1590
0x5a76: cmp eax,0x22
0x5a79: mov ebp,0x1
0x5a7e: jne 0x5aa8
0x5aa2: nop word ptr [rax+rax]
0x5bd0: movsxd rdi,edi
0x5bd3: mov eax,ebp
0x5bd5: add rcx,rdi
0x5bd8: or eax,0x2
0x5bdb: mov qword ptr [r15],rcx
0x5bde: cmp byte ptr [rcx],0x0
0x5be1: mov qword ptr [r14],rbx
0x5be4: cmovne ebp,eax
0x5be7: jmp 0x5aad
0x5c45: or ebp,r9d
0x5c48: jmp 0x5bd0
0x5cdc: mov rax,rbx
0x5cdf: mul rsi
0x5ce2: mov rbx,rax
0x5ce5: jo 0x5d74
0x5ceb: sub r8d,0x1
0x5cef: jne 0x5cdc
0x5cf1: jmp 0x5c45
0x5d50: call 0x1590
0x5d55: lea rcx,[rip+0x1484]
0x5d5c: lea rsi,[rip+0x135d]
0x5d63: lea rdi,[rip+0x1376]
0x5d6a: mov edx,0x54
0x5d6f: call 0x1600
0x5d74: mov r9d,0x1
0x5d7a: or rbx,-0x1
0x5d7e: jmp 0x5ceb
0x5f10: push r13
0x5f12: push r12
0x5f14: mov r13,rsi
0x5f17: push rbp
0x5f18: push rbx
0x5f19: mov rbx,rdi
0x5f1c: mov r12,rdx
0x5f1f: sub rsp,0x18
0x5f23: mov rax,qword ptr fs:0x28
0x5f2c: mov qword ptr [rsp+0x8],rax
0x5f31: xor eax,eax
0x5f33: lea rax,[rsp+0x4]
0x5f38: test rdi,rdi
0x5f3b: cmove rbx,rax
0x5f3f: mov rdi,rbx
0x5f42: call 0x15b0
0x5f47: cmp rax,-0x3
0x5f4b: mov rbp,rax
0x5f4e: jbe 0x5f70
0x5f50: test r12,r12
0x5f53: je 0x5f70
0x5f55: xor edi,edi
0x5f57: call 0x6020
0x5f5c: test al,al
0x5f5e: jne 0x5f70
0x5f60: movzx eax,byte ptr [r13]
0x5f65: mov ebp,0x1
0x5f6a: mov dword ptr [rbx],eax
0x5f6c: nop dword ptr [rax]
0x5f70: mov rdx,qword ptr [rsp+0x8]
0x5f75: xor rdx,qword ptr fs:0x28
0x5f7e: mov rax,rbp
0x5f81: jne 0x5f8e
0x5f83: add rsp,0x18
0x5f87: pop rbx
0x5f88: pop rbp
0x5f89: pop r12
0x5f8b: pop r13
0x5f8d: ret 
0x5f8e: call 0x1590
0x5f93: nop word ptr cs:[rax+rax]
0x5f9d: nop dword ptr [rax]
0x5fa0: push r12
0x5fa2: push rbp
0x5fa3: mov rbp,rdi
0x5fa6: push rbx
0x5fa7: call 0x1520
0x5fac: mov ebx,dword ptr [rbp]
0x5faf: mov rdi,rbp
0x5fb2: mov r12,rax
0x5fb5: call 0x5df0
0x5fba: and ebx,0x20
0x5fbd: test ebx,ebx
0x5fbf: jne 0x5fd8
0x5fc1: test eax,eax
0x5fc3: je 0x5fcf
0x5fc5: test r12,r12
0x5fc8: mov eax,0xffffffff
0x5fcd: je 0x6008
0x5fcf: pop rbx
0x5fd0: pop rbp
0x5fd1: pop r12
0x5fd3: ret 
0x5fd8: test eax,eax
0x5fda: jne 0x5ff8
0x5fdc: call 0x14f0
0x5fe1: mov dword ptr [rax],0x0
0x5fe7: mov eax,0xffffffff
0x5fec: pop rbx
0x5fed: pop rbp
0x5fee: pop r12
0x5ff0: ret 
0x5ff8: pop rbx
0x5ff9: mov eax,0xffffffff
0x5ffe: pop rbp
0x5fff: pop r12
0x6001: ret 
0x6008: call 0x14f0
0x600d: cmp dword ptr [rax],0x9
0x6010: pop rbx
0x6011: pop rbp
0x6012: pop r12
0x6014: setne al
0x6017: movzx eax,al
0x601a: neg eax
0x601c: ret 
0x6020: sub rsp,0x8
0x6024: xor esi,esi
0x6026: call 0x1700
0x602b: mov rdx,rax
0x602e: mov eax,0x1
0x6033: test rdx,rdx
0x6036: je 0x6055
0x6038: lea rdi,[rip+0x11ac]
0x603f: mov ecx,0x2
0x6044: mov rsi,rdx
0x6047: rep cmpsb [rsi],es:[rdi]
0x6049: seta cl
0x604c: sbb cl,0x0
0x604f: xor eax,eax
0x6051: test cl,cl
0x6053: jne 0x6060
0x6055: add rsp,0x8
0x6059: ret 
0x6060: lea rdi,[rip+0x1186]
0x6067: mov ecx,0x6
0x606c: mov rsi,rdx
0x606f: rep cmpsb [rsi],es:[rdi]
0x6071: seta al
0x6074: sbb al,0x0
0x6076: test al,al
0x6078: setne al
0x607b: add rsp,0x8
0x607f: ret 
0x6080: sub rsp,0x8
0x6084: mov edi,0xe
0x6089: call 0x16c0
0x608e: test rax,rax
0x6091: je 0x60b0
0x6093: cmp byte ptr [rax],0x0
0x6096: lea rdx,[rip+0x1156]
0x609d: cmove rax,rdx
0x60a1: add rsp,0x8
0x60a5: ret 
0x60b0: lea rax,[rip+0x113c]
0x60b7: add rsp,0x8
0x60bb: ret 
0x60c0: push r15
0x60c2: push r14
0x60c4: mov r15,rdx
0x60c7: push r13
0x60c9: push r12
0x60cb: lea r12,[rip+0x2029be]
0x60d2: push rbp
0x60d3: lea rbp,[rip+0x2029be]
0x60da: push rbx
0x60db: mov r13d,edi
0x60de: mov r14,rsi
0x60e1: sub rbp,r12
0x60e4: sub rsp,0x8
0x60e8: sar rbp,0x3
0x60ec: call 0x1490
0x60f1: test rbp,rbp
0x60f4: je 0x6116
0x60f6: xor ebx,ebx
0x60f8: nop dword ptr [rax+rax]
0x6100: mov rdx,r15
0x6103: mov rsi,r14
0x6106: mov edi,r13d
0x6109: call qword ptr [r12+rbx*8]
0x610d: add rbx,0x1
0x6111: cmp rbp,rbx
0x6114: jne 0x6100
0x6116: add rsp,0x8
0x611a: pop rbx
0x611b: pop rbp
0x611c: pop r12
0x611e: pop r13
0x6120: pop r14
0x6122: pop r15
0x6124: ret 
0x6130: rep ret 
