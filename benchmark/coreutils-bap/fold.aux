0x1430: sub rsp,0x8
0x1434: mov rax,qword ptr [rip+0x206b95]
0x143b: test rax,rax
0x143e: je 0x1442
0x1440: call rax
0x1442: add rsp,0x8
0x1446: ret 
0x1456: jmp qword ptr [rip+0x2069dc]
0x14b0: jmp qword ptr [rip+0x2069b2]
0x14c0: jmp qword ptr [rip+0x2069aa]
0x1520: jmp qword ptr [rip+0x20697a]
0x1530: jmp qword ptr [rip+0x206972]
0x1550: jmp qword ptr [rip+0x206962]
0x15a0: jmp qword ptr [rip+0x20693a]
0x15e0: jmp qword ptr [rip+0x20691a]
0x1600: jmp qword ptr [rip+0x20690a]
0x1610: jmp qword ptr [rip+0x206902]
0x1630: jmp qword ptr [rip+0x2068f2]
0x1650: jmp qword ptr [rip+0x2068e2]
0x1730: jmp qword ptr [rip+0x206872]
0x1740: jmp qword ptr [rip+0x20686a]
0x1760: jmp qword ptr [rip+0x20687a]
0x183d: nop dword ptr [rax]
0x1894: nop dword ptr [rax]
0x19d8: call 0x1530
0x19dd: nop dword ptr [rax]
0x1a0a: hlt 
0x1a0b: nop dword ptr [rax+rax]
0x1a10: lea rdi,[rip+0x206669]
0x1a17: push rbp
0x1a18: lea rax,[rip+0x206661]
0x1a1f: cmp rax,rdi
0x1a22: mov rbp,rsp
0x1a25: je 0x1a40
0x1a27: mov rax,qword ptr [rip+0x206592]
0x1a2e: test rax,rax
0x1a31: je 0x1a40
0x1a33: pop rbp
0x1a34: jmp rax
0x1a40: pop rbp
0x1a41: ret 
0x1a50: lea rdi,[rip+0x206629]
0x1a57: lea rsi,[rip+0x206622]
0x1a5e: push rbp
0x1a5f: sub rsi,rdi
0x1a62: mov rbp,rsp
0x1a65: sar rsi,0x3
0x1a69: mov rax,rsi
0x1a6c: shr rax,0x3f
0x1a70: add rsi,rax
0x1a73: sar rsi, 1
0x1a76: je 0x1a90
0x1a78: mov rax,qword ptr [rip+0x206559]
0x1a7f: test rax,rax
0x1a82: je 0x1a90
0x1a84: pop rbp
0x1a85: jmp rax
0x1a90: pop rbp
0x1a91: ret 
0x1ab1: push rbp
0x1ab2: mov rbp,rsp
0x1ab5: je 0x1ac3
0x1ab7: mov rdi,qword ptr [rip+0x20654a]
0x1abe: call 0x1760
0x1ac3: call 0x1a10
0x1ac8: mov byte ptr [rip+0x2065f9],0x1
0x1acf: pop rbp
0x1ad0: ret 
0x1ae0: push rbp
0x1ae1: mov rbp,rsp
0x1ae4: pop rbp
0x1ae5: jmp 0x1a50
0x1cd2: lea r10,[rbx+r13]
0x1cd6: mov r8,r13
0x1cd9: xor r15d,r15d
0x1cdc: nop dword ptr [rax]
0x1ce0: movsx esi,byte ptr [r8]
0x1ce4: mov rdi,r15
0x1ce7: call 0x1af0
0x1cec: add r8,0x1
0x1cf0: mov r15,rax
0x1cf3: cmp r10,r8
0x1cf6: jne 0x1ce0
0x1cf8: jmp 0x1bed
0x1e3a: mov rcx,rax
0x1e3d: mov rax,qword ptr [rsp+0x18]
0x1e42: lea rdx,[rip+0x382f]
0x1e49: xor edi,edi
0x1e4b: mov esi,dword ptr [rax]
0x1e4d: xor eax,eax
0x1e4f: call 0x16c0
0x1e54: jmp 0x1d83
0x1e74: lea rdx,[rip+0x37fd]
0x1e7b: mov rcx,rax
0x1e7e: xor edi,edi
0x1e80: xor eax,eax
0x1e82: mov esi,ebp
0x1e84: call 0x16c0
0x1e89: lea rdi,[rip+0x3832]
0x1e90: mov rsi,rbx
0x1e93: mov ecx,0x2
0x1e98: rep cmpsb [rsi],es:[rdi]
0x1e9a: seta al
0x1e9d: sbb al,0x0
0x1e9f: xor ebx,ebx
0x1ea1: test al,al
0x1ea3: je 0x1d83
0x1ea9: mov rdi,r12
0x1eac: call 0x4ef0
0x1eb1: jmp 0x1d83
0x1ee8: jmp 0x1caf
0x22b0: mov qword ptr [rip+0x205e39],rdi
0x22b7: ret 
0x22c0: mov byte ptr [rip+0x205e21],dil
0x22c7: ret 
0x22d0: push rbp
0x22d1: push rbx
0x22d2: sub rsp,0x8
0x22d6: mov rdi,qword ptr [rip+0x205dab]
0x22dd: call 0x50a0
0x22e2: test eax,eax
0x22e4: je 0x22fc
0x22e6: call 0x1490
0x22eb: cmp byte ptr [rip+0x205df6],0x0
0x22f2: mov rbx,rax
0x22f5: je 0x2313
0x22f7: cmp dword ptr [rax],0x20
0x22fa: jne 0x2313
0x22fc: mov rdi,qword ptr [rip+0x205dbd]
0x2303: call 0x50a0
0x2308: test eax,eax
0x230a: jne 0x2352
0x230c: add rsp,0x8
0x2310: pop rbx
0x2311: pop rbp
0x2312: ret 
0x2313: lea rsi,[rip+0x334e]
0x231a: xor edi,edi
0x231c: mov edx,0x5
0x2321: call 0x1500
0x2326: mov rdi,qword ptr [rip+0x205dc3]
0x232d: mov rbp,rax
0x2330: test rdi,rdi
0x2333: je 0x235d
0x2335: call 0x3ed0
0x233a: mov esi,dword ptr [rbx]
0x233c: lea rdx,[rip+0x3331]
0x2343: mov rcx,rax
0x2346: mov r8,rbp
0x2349: xor edi,edi
0x234b: xor eax,eax
0x234d: call 0x16c0
0x2352: mov edi,dword ptr [rip+0x205cc0]
0x2358: call 0x14b0
0x235d: mov esi,dword ptr [rbx]
0x235f: lea rdx,[rip+0x3312]
0x2366: mov rcx,rax
0x2369: xor edi,edi
0x236b: xor eax,eax
0x236d: call 0x16c0
0x2372: jmp 0x2352
0x2380: jmp 0x15d0
0x245f: nop 
0x2460: push rbp
0x2461: push rbx
0x2462: mov rbp,rdi
0x2465: mov ebx,esi
0x2467: sub rsp,0x8
0x246b: call 0x5180
0x2470: movzx edx,byte ptr [rax]
0x2473: and edx,-0x21
0x2476: cmp dl,0x55
0x2479: je 0x24f0
0x247b: cmp dl,0x47
0x247e: je 0x24a0
0x2480: lea rax,[rip+0x324c]
0x2487: lea rdx,[rip+0x3247]
0x248e: cmp ebx,0x9
0x2491: cmovne rax,rdx
0x2495: add rsp,0x8
0x2499: pop rbx
0x249a: pop rbp
0x249b: ret 
0x24a0: movzx edx,byte ptr [rax+0x1]
0x24a4: and edx,-0x21
0x24a7: cmp dl,0x42
0x24aa: jne 0x2480
0x24ac: cmp byte ptr [rax+0x2],0x31
0x24b0: jne 0x2480
0x24b2: cmp byte ptr [rax+0x3],0x38
0x24b6: jne 0x2480
0x24b8: cmp byte ptr [rax+0x4],0x30
0x24bc: jne 0x2480
0x24be: cmp byte ptr [rax+0x5],0x33
0x24c2: jne 0x2480
0x24c4: cmp byte ptr [rax+0x6],0x30
0x24c8: jne 0x2480
0x24ca: cmp byte ptr [rax+0x7],0x0
0x24ce: jne 0x2480
0x24d0: cmp byte ptr [rbp],0x60
0x24d4: lea rax,[rip+0x31f1]
0x24db: lea rdx,[rip+0x31ee]
0x24e2: cmovne rax,rdx
0x24e6: add rsp,0x8
0x24ea: pop rbx
0x24eb: pop rbp
0x24ec: ret 
0x24f0: movzx edx,byte ptr [rax+0x1]
0x24f4: and edx,-0x21
0x24f7: cmp dl,0x54
0x24fa: jne 0x2480
0x24fc: movzx edx,byte ptr [rax+0x2]
0x2500: and edx,-0x21
0x2503: cmp dl,0x46
0x2506: jne 0x2480
0x250c: cmp byte ptr [rax+0x3],0x2d
0x2510: jne 0x2480
0x2516: cmp byte ptr [rax+0x4],0x38
0x251a: jne 0x2480
0x2520: cmp byte ptr [rax+0x5],0x0
0x2524: jne 0x2480
0x252a: cmp byte ptr [rbp],0x60
0x252e: lea rax,[rip+0x318f]
0x2535: lea rdx,[rip+0x318c]
0x253c: cmovne rax,rdx
0x2540: add rsp,0x8
0x2544: pop rbx
0x2545: pop rbp
0x2546: ret 
0x2623: xor r11d,r11d
0x2626: mov rax,rbp
0x2629: mov r8d,r12d
0x262c: mov rbp,r11
0x262f: mov r11,rax
0x2632: nop word ptr [rax+rax]
0x2638: cmp r11,rbp
0x263b: setne r12b
0x263f: cmp r11,-0x1
0x2643: jne 0x2652
0x2645: mov rax,qword ptr [rsp+0x10]
0x264a: cmp byte ptr [rax+rbp],0x0
0x264e: setne r12b
0x2652: test r12b,r12b
0x2655: je 0x2cb0
0x265b: cmp dword ptr [rsp+0x8],0x2
0x2660: mov rdi,qword ptr [rsp+0x10]
0x2665: lea r9,[rdi+rbp]
0x2669: setne al
0x266c: and al,byte ptr [rsp+0xd]
0x2670: mov r10d,eax
0x2673: je 0x2720
0x2679: mov rax,qword ptr [rsp+0x18]
0x267e: test rax,rax
0x2681: je 0x2ab0
0x2687: cmp r11,-0x1
0x268b: lea rbx,[rbp+rax]
0x2690: jne 0x26c0
0x2692: cmp rax,0x1
0x2696: jbe 0x26c0
0x2698: mov byte ptr [rsp+0x38],r8b
0x269d: mov byte ptr [rsp+0x30],r10b
0x26a2: mov qword ptr [rsp+0x28],r9
0x26a7: call 0x1520
0x26ac: movzx r8d,byte ptr [rsp+0x38]
0x26b2: movzx r10d,byte ptr [rsp+0x30]
0x26b8: mov r11,rax
0x26bb: mov r9,qword ptr [rsp+0x28]
0x26c0: cmp rbx,r11
0x26c3: mov byte ptr [rsp+0x28],r10b
0x26c8: ja 0x2c80
0x26ce: mov rdx,qword ptr [rsp+0x18]
0x26d3: mov rsi,qword ptr [rsp+0x48]
0x26d8: mov rdi,r9
0x26db: mov qword ptr [rsp+0x40],r11
0x26e0: mov byte ptr [rsp+0x38],r8b
0x26e5: mov qword ptr [rsp+0x30],r9
0x26ea: call 0x15e0
0x26ef: test eax,eax
0x26f1: mov r9,qword ptr [rsp+0x30]
0x26f6: movzx r8d,byte ptr [rsp+0x38]
0x26fc: mov r11,qword ptr [rsp+0x40]
0x2701: jne 0x2c80
0x2707: cmp byte ptr [rsp+0xf],0x0
0x270c: movzx r10d,byte ptr [rsp+0x28]
0x2712: jne 0x3695
0x2718: nop dword ptr [rax+rax]
0x2720: movzx ebx,byte ptr [r9]
0x2724: cmp bl,0x7e
0x2727: ja 0x2a48
0x272d: lea rcx,[rip+0x3038]
0x2734: movzx edx,bl
0x2737: movsxd rax,dword ptr [rcx+rdx*4]
0x273b: add rax,rcx
0x273e: jmp rax
0x2778: cmp byte ptr [rsp+0xd],0x1
0x277d: jne 0x2892
0x2783: test dl,dl
0x2785: jne 0x2892
0x278b: mov rsi,qword ptr [rsp+0x20]
0x2790: test rsi,rsi
0x2793: je 0x27a9
0x2795: mov edx,ebx
0x2797: shr dl,0x5
0x279a: movzx edx,dl
0x279d: mov edx,dword ptr [rsi+rdx*4]
0x27a0: btl edx,ebx
0x27a3: jb 0x28f3
0x27a9: test r10b,r10b
0x27ac: jne 0x28f3
0x27b2: xor eax,0x1
0x27b5: add rbp,0x1
0x27b9: and eax,r8d
0x27bc: test al,al
0x27be: je 0x27e0
0x27c0: cmp r13,r15
0x27c3: jbe 0x27ca
0x27c5: mov byte ptr [r14+r15],0x27
0x27ca: lea rax,[r15+0x1]
0x27ce: cmp r13,rax
0x27d1: jbe 0x27d9
0x27d3: mov byte ptr [r14+r15+0x1],0x27
0x27d9: add r15,0x2
0x27dd: xor r8d,r8d
0x27e0: cmp r15,r13
0x27e3: jae 0x27e9
0x27e5: mov byte ptr [r14+r15],bl
0x27e9: movzx edi,byte ptr [rsp+0xe]
0x27ee: add r15,0x1
0x27f2: mov eax,0x0
0x27f7: test r12b,r12b
0x27fa: cmove edi,eax
0x27fd: mov byte ptr [rsp+0xe],dil
0x2802: jmp 0x2638
0x2892: cmp byte ptr [rsp+0xf],0x0
0x2897: jne 0x278b
0x289d: jmp 0x27a9
0x28f3: cmp dword ptr [rsp+0x8],0x2
0x28f8: sete dl
0x28fb: cmp byte ptr [rsp+0xf],0x0
0x2900: mov eax,edx
0x2902: jne 0x3158
0x2908: mov eax,r8d
0x290b: xor eax,0x1
0x290e: and al,dl
0x2910: je 0x2941
0x2912: cmp r13,r15
0x2915: jbe 0x291c
0x2917: mov byte ptr [r14+r15],0x27
0x291c: lea rdx,[r15+0x1]
0x2920: cmp r13,rdx
0x2923: jbe 0x292b
0x2925: mov byte ptr [r14+r15+0x1],0x24
0x292b: lea rdx,[r15+0x2]
0x292f: cmp r13,rdx
0x2932: jbe 0x293a
0x2934: mov byte ptr [r14+r15+0x2],0x27
0x293a: add r15,0x3
0x293e: mov r8d,eax
0x2941: cmp r13,r15
0x2944: jbe 0x294b
0x2946: mov byte ptr [r14+r15],0x5c
0x294b: add r15,0x1
0x294f: add rbp,0x1
0x2953: jmp 0x27e0
0x2a40: xor r10d,r10d
0x2a43: nop dword ptr [rax+rax]
0x2a48: cmp qword ptr [rsp+0x58],0x1
0x2a4e: jne 0x2df8
0x2a54: mov qword ptr [rsp+0x38],r11
0x2a59: mov byte ptr [rsp+0x30],r8b
0x2a5e: mov byte ptr [rsp+0x28],r10b
0x2a63: call 0x1750
0x2a68: mov rcx,qword ptr [rax]
0x2a6b: movzx edx,bl
0x2a6e: movzx r10d,byte ptr [rsp+0x28]
0x2a74: movzx r8d,byte ptr [rsp+0x30]
0x2a7a: mov r11,qword ptr [rsp+0x38]
0x2a7f: mov edi,0x1
0x2a84: movzx eax,word ptr [rcx+rdx*2]
0x2a88: and ax,0x4000
0x2a8c: setne r12b
0x2a90: sete al
0x2a93: and al,byte ptr [rsp+0xd]
0x2a97: test al,al
0x2a99: jne 0x3431
0x2a9f: cmp dword ptr [rsp+0x8],0x2
0x2aa4: sete dl
0x2aa7: jmp 0x2778
0x2ab0: movzx ebx,byte ptr [r9]
0x2ab4: cmp bl,0x7e
0x2ab7: ja 0x2a40
0x2ab9: lea rcx,[rip+0x2ea8]
0x2ac0: movzx edx,bl
0x2ac3: movsxd rax,dword ptr [rcx+rdx*4]
0x2ac7: add rax,rcx
0x2aca: jmp rax
0x2c80: xor r10d,r10d
0x2c83: jmp 0x2720
0x2cb0: cmp dword ptr [rsp+0x8],0x2
0x2cb5: movzx ebx,byte ptr [rsp+0xf]
0x2cba: mov r12d,r8d
0x2cbd: mov rbp,r11
0x2cc0: sete dl
0x2cc3: mov eax,ebx
0x2cc5: test r15,r15
0x2cc8: sete cl
0x2ccb: and eax,edx
0x2ccd: and al,cl
0x2ccf: jne 0x3736
0x2cd5: mov eax,ebx
0x2cd7: xor eax,0x1
0x2cda: and dl,al
0x2cdc: je 0x364c
0x2ce2: cmp byte ptr [rsp+0x7c],0x0
0x2ce7: je 0x364a
0x2ced: cmp byte ptr [rsp+0xe],0x0
0x2cf2: jne 0x36ed
0x2cf8: test r13,r13
0x2cfb: sete al
0x2cfe: cmp qword ptr [rsp+0x50],0x0
0x2d04: setne dl
0x2d07: and al,dl
0x2d09: je 0x372c
0x2d0f: mov r13,qword ptr [rsp+0x50]
0x2d14: lea rbx,[rip+0x29ba]
0x2d1b: mov byte ptr [r14],0x27
0x2d1f: mov dword ptr [rsp+0x8],0x2
0x2d27: mov r15d,0x1
0x2d2d: mov qword ptr [rsp+0x18],0x1
0x2d36: mov byte ptr [rsp+0xf],0x0
0x2d3b: mov qword ptr [rsp+0x48],rbx
0x2d40: mov byte ptr [rsp+0x7c],al
0x2d44: jmp 0x2623
0x2df8: lea rax,[rsp+0xa0]
0x2e00: cmp r11,-0x1
0x2e04: mov qword ptr [rsp+0xa0],0x0
0x2e10: mov qword ptr [rsp+0x28],rax
0x2e15: jne 0x2e44
0x2e17: mov rdi,qword ptr [rsp+0x10]
0x2e1c: mov byte ptr [rsp+0x40],r8b
0x2e21: mov byte ptr [rsp+0x38],r10b
0x2e26: mov qword ptr [rsp+0x30],r9
0x2e2b: call 0x1520
0x2e30: movzx r8d,byte ptr [rsp+0x40]
0x2e36: movzx r10d,byte ptr [rsp+0x38]
0x2e3c: mov r11,rax
0x2e3f: mov r9,qword ptr [rsp+0x30]
0x2e44: lea rax,[rsp+0x9c]
0x2e4c: xor ecx,ecx
0x2e4e: mov byte ptr [rsp+0x7e],bl
0x2e52: mov byte ptr [rsp+0x7d],r8b
0x2e57: mov rbx,rcx
0x2e5a: mov qword ptr [rsp+0x88],r9
0x2e62: mov qword ptr [rsp+0x38],rax
0x2e67: mov byte ptr [rsp+0x7f],r10b
0x2e6c: mov qword ptr [rsp+0x80],r15
0x2e74: mov qword ptr [rsp+0x40],r14
0x2e79: mov qword ptr [rsp+0x70],r13
0x2e7e: mov qword ptr [rsp+0x30],r11
0x2e83: mov rax,qword ptr [rsp+0x10]
0x2e88: lea r14,[rbp+rbx]
0x2e8d: mov rdx,qword ptr [rsp+0x30]
0x2e92: mov rcx,qword ptr [rsp+0x28]
0x2e97: mov rdi,qword ptr [rsp+0x38]
0x2e9c: lea r13,[rax+r14]
0x2ea0: sub rdx,r14
0x2ea3: mov rsi,r13
0x2ea6: call 0x5010
0x2eab: test rax,rax
0x2eae: mov r15,rax
0x2eb1: je 0x2f01
0x2eb3: cmp rax,-0x1
0x2eb7: je 0x34d5
0x2ebd: cmp rax,-0x2
0x2ec1: je 0x3461
0x2ec7: cmp dword ptr [rsp+0x8],0x2
0x2ecc: sete al
0x2ecf: and al,byte ptr [rsp+0xf]
0x2ed3: jne 0x3070
0x2ed9: mov edi,dword ptr [rsp+0x9c]
0x2ee0: call 0x1740
0x2ee5: mov rdi,qword ptr [rsp+0x28]
0x2eea: test eax,eax
0x2eec: mov eax,0x0
0x2ef1: cmove r12d,eax
0x2ef5: add rbx,r15
0x2ef8: call 0x1730
0x2efd: test eax,eax
0x2eff: je 0x2e83
0x2f01: mov edx,r12d
0x2f04: mov rdi,rbx
0x2f07: movzx r8d,byte ptr [rsp+0x7d]
0x2f0d: xor edx,0x1
0x2f10: movzx ebx,byte ptr [rsp+0x7e]
0x2f15: movzx r10d,byte ptr [rsp+0x7f]
0x2f1b: and dl,byte ptr [rsp+0xd]
0x2f1f: mov r15,qword ptr [rsp+0x80]
0x2f27: mov r14,qword ptr [rsp+0x40]
0x2f2c: mov r13,qword ptr [rsp+0x70]
0x2f31: mov r11,qword ptr [rsp+0x30]
0x2f36: cmp rdi,0x1
0x2f3a: jbe 0x353b
0x2f40: mov rcx,rdi
0x2f43: xor esi,esi
0x2f45: movzx r9d,byte ptr [rsp+0xf]
0x2f4b: add rcx,rbp
0x2f4e: mov rdi,qword ptr [rsp+0x10]
0x2f53: jmp 0x300e
0x2f60: cmp dword ptr [rsp+0x8],0x2
0x2f65: sete al
0x2f68: test r9b,r9b
0x2f6b: jne 0x3420
0x2f71: mov esi,r8d
0x2f74: xor esi,0x1
0x2f77: and al,sil
0x2f7a: je 0x2fab
0x2f7c: cmp r13,r15
0x2f7f: jbe 0x2f86
0x2f81: mov byte ptr [r14+r15],0x27
0x2f86: lea rsi,[r15+0x1]
0x2f8a: cmp r13,rsi
0x2f8d: jbe 0x2f95
0x2f8f: mov byte ptr [r14+r15+0x1],0x24
0x2f95: lea rsi,[r15+0x2]
0x2f99: cmp r13,rsi
0x2f9c: jbe 0x2fa4
0x2f9e: mov byte ptr [r14+r15+0x2],0x27
0x2fa4: add r15,0x3
0x2fa8: mov r8d,eax
0x2fab: cmp r13,r15
0x2fae: jbe 0x2fb5
0x2fb0: mov byte ptr [r14+r15],0x5c
0x2fb5: lea rax,[r15+0x1]
0x2fb9: cmp r13,rax
0x2fbc: jbe 0x2fcb
0x2fbe: mov eax,ebx
0x2fc0: shr al,0x6
0x2fc3: add eax,0x30
0x2fc6: mov byte ptr [r14+r15+0x1],al
0x2fcb: lea rax,[r15+0x2]
0x2fcf: cmp r13,rax
0x2fd2: jbe 0x2fe4
0x2fd4: mov eax,ebx
0x2fd6: shr al,0x3
0x2fd9: and eax,0x7
0x2fdc: add eax,0x30
0x2fdf: mov byte ptr [r14+r15+0x2],al
0x2fe4: and ebx,0x7
0x2fe7: add rbp,0x1
0x2feb: add r15,0x3
0x2fef: add ebx,0x30
0x2ff2: cmp rbp,rcx
0x2ff5: jae 0x27e0
0x2ffb: mov esi,edx
0x2ffd: cmp r13,r15
0x3000: jbe 0x3006
0x3002: mov byte ptr [r14+r15],bl
0x3006: movzx ebx,byte ptr [rdi+rbp]
0x300a: add r15,0x1
0x300e: test dl,dl
0x3010: jne 0x2f60
0x3016: mov eax,esi
0x3018: xor eax,0x1
0x301b: and eax,r8d
0x301e: test r10b,r10b
0x3021: je 0x3031
0x3023: cmp r13,r15
0x3026: jbe 0x302d
0x3028: mov byte ptr [r14+r15],0x5c
0x302d: add r15,0x1
0x3031: add rbp,0x1
0x3035: cmp rbp,rcx
0x3038: jae 0x27bc
0x303e: test al,al
0x3040: je 0x343e
0x3046: cmp r13,r15
0x3049: jbe 0x3050
0x304b: mov byte ptr [r14+r15],0x27
0x3050: lea rax,[r15+0x1]
0x3054: cmp r13,rax
0x3057: jbe 0x305f
0x3059: mov byte ptr [r14+r15+0x1],0x27
0x305f: add r15,0x2
0x3063: xor r10d,r10d
0x3066: xor r8d,r8d
0x3069: jmp 0x2ffd
0x3070: cmp r15,0x1
0x3074: je 0x2ed9
0x307a: mov rdi,qword ptr [rsp+0x10]
0x307f: lea rcx,[rdi+r15]
0x3083: lea rdx,[rdi+r14+0x1]
0x3088: lea r8,[rcx+r14]
0x308c: jmp 0x309d
0x3090: add rdx,0x1
0x3094: cmp r8,rdx
0x3097: je 0x2ed9
0x309d: movzx ecx,byte ptr [rdx]
0x30a0: sub ecx,0x5b
0x30a3: cmp cl,0x21
0x30a6: ja 0x3090
0x30a8: mov esi,0x1
0x30ad: shl rsi,cl
0x30b0: mov rcx,rsi
0x30b3: movabsq rsi,0x20000002b
0x30bd: test rcx,rsi
0x30c0: je 0x3090
0x30c2: mov r14,qword ptr [rsp+0x40]
0x30c7: mov r13,qword ptr [rsp+0x70]
0x30cc: mov rbp,qword ptr [rsp+0x30]
0x30d1: mov dword ptr [rsp+0x8],0x2
0x30d9: cmp byte ptr [rsp+0xd],0x0
0x30de: je 0x30f0
0x30e0: test al,al
0x30e2: mov eax,0x4
0x30e7: cmove eax,dword ptr [rsp+0x8]
0x30ec: mov dword ptr [rsp+0x8],eax
0x30f0: sub rsp,0x8
0x30f4: mov rcx,rbp
0x30f7: mov rsi,r13
0x30fa: push qword ptr [rsp+0x68]
0x30fe: push qword ptr [rsp+0x78]
0x3102: mov rdi,r14
0x3105: push 0x0
0x3107: mov r9d,dword ptr [rsp+0x98]
0x310f: mov r8d,dword ptr [rsp+0x28]
0x3114: mov rdx,qword ptr [rsp+0x30]
0x3119: and r9d,-0x3
0x311d: call 0x2550
0x3122: add rsp,0x20
0x3126: mov r15,rax
0x3129: mov rbx,qword ptr [rsp+0xa8]
0x3131: xor rbx,qword ptr fs:0x28
0x313a: mov rax,r15
0x313d: jne 0x3743
0x3143: add rsp,0xb8
0x314a: pop rbx
0x314b: pop rbp
0x314c: pop r12
0x314e: pop r13
0x3150: pop r14
0x3152: pop r15
0x3154: ret 
0x3158: mov rbp,r11
0x315b: jmp 0x30d9
0x31c1: test r13,r13
0x31c4: jne 0x375a
0x31ca: lea rax,[rip+0x2504]
0x31d1: mov qword ptr [rsp+0x50],0x0
0x31da: mov byte ptr [rsp+0xe],0x1
0x31df: mov byte ptr [rsp+0x7c],0x0
0x31e4: xor r12d,r12d
0x31e7: mov byte ptr [rsp+0xf],0x0
0x31ec: mov qword ptr [rsp+0x18],0x1
0x31f5: mov qword ptr [rsp+0x48],rax
0x31fa: mov r15d,0x1
0x3200: mov dword ptr [rsp+0x8],0x2
0x3208: jmp 0x2623
0x3420: movzx ebx,byte ptr [rsp+0xf]
0x3425: mov rbp,r11
0x3428: mov byte ptr [rsp+0xd],bl
0x342c: jmp 0x30d9
0x3431: movzx edx,byte ptr [rsp+0xd]
0x3436: xor r12d,r12d
0x3439: jmp 0x2f40
0x343e: xor r10d,r10d
0x3441: jmp 0x2ffd
0x3461: mov r11,qword ptr [rsp+0x30]
0x3466: mov rsi,r14
0x3469: mov rcx,r13
0x346c: mov rax,rbx
0x346f: mov rdi,rbx
0x3472: movzx r8d,byte ptr [rsp+0x7d]
0x3478: movzx ebx,byte ptr [rsp+0x7e]
0x347d: mov r9,qword ptr [rsp+0x88]
0x3485: cmp rsi,r11
0x3488: movzx r10d,byte ptr [rsp+0x7f]
0x348e: mov r15,qword ptr [rsp+0x80]
0x3496: mov r14,qword ptr [rsp+0x40]
0x349b: mov r13,qword ptr [rsp+0x70]
0x34a0: jae 0x34c8
0x34a2: cmp byte ptr [rcx],0x0
0x34a5: jne 0x34b7
0x34a7: jmp 0x34c8
0x34b0: cmp byte ptr [r9+rax],0x0
0x34b5: je 0x34c5
0x34b7: add rax,0x1
0x34bb: lea rdx,[rbp+rax]
0x34c0: cmp r11,rdx
0x34c3: ja 0x34b0
0x34c5: mov rdi,rax
0x34c8: movzx edx,byte ptr [rsp+0xd]
0x34cd: xor r12d,r12d
0x34d0: jmp 0x2f36
0x34d5: mov rdi,rbx
0x34d8: movzx r8d,byte ptr [rsp+0x7d]
0x34de: movzx ebx,byte ptr [rsp+0x7e]
0x34e3: movzx r10d,byte ptr [rsp+0x7f]
0x34e9: mov r15,qword ptr [rsp+0x80]
0x34f1: xor r12d,r12d
0x34f4: mov r14,qword ptr [rsp+0x40]
0x34f9: mov r13,qword ptr [rsp+0x70]
0x34fe: mov r11,qword ptr [rsp+0x30]
0x3503: movzx edx,byte ptr [rsp+0xd]
0x3508: jmp 0x2f36
0x353b: mov eax,edx
0x353d: jmp 0x2a97
0x364a: mov eax,edx
0x364c: mov rbx,qword ptr [rsp+0x48]
0x3651: test rbx,rbx
0x3654: je 0x3682
0x3656: test al,al
0x3658: je 0x3682
0x365a: movzx ecx,byte ptr [rbx]
0x365d: mov rax,rbx
0x3660: test cl,cl
0x3662: je 0x3682
0x3664: mov rdx,r15
0x3667: sub rax,r15
0x366a: cmp r13,rdx
0x366d: jbe 0x3673
0x366f: mov byte ptr [r14+rdx],cl
0x3673: add rdx,0x1
0x3677: movzx ecx,byte ptr [rax+rdx]
0x367b: test cl,cl
0x367d: jne 0x366a
0x367f: mov r15,rdx
0x3682: cmp r13,r15
0x3685: jbe 0x3129
0x368b: mov byte ptr [r14+r15],0x0
0x3690: jmp 0x3129
0x3695: cmp dword ptr [rsp+0x8],0x2
0x369a: movzx ebx,byte ptr [rsp+0xf]
0x369f: mov rbp,r11
0x36a2: sete al
0x36a5: mov byte ptr [rsp+0xd],bl
0x36a9: jmp 0x30d9
0x36ed: sub rsp,0x8
0x36f1: mov r8d,0x5
0x36f7: mov rcx,r11
0x36fa: push qword ptr [rsp+0x68]
0x36fe: push qword ptr [rsp+0x78]
0x3702: mov rdi,r14
0x3705: push qword ptr [rsp+0x38]
0x3709: mov r9d,dword ptr [rsp+0x98]
0x3711: mov rdx,qword ptr [rsp+0x30]
0x3716: mov rsi,qword ptr [rsp+0x70]
0x371b: call 0x2550
0x3720: add rsp,0x20
0x3724: mov r15,rax
0x3727: jmp 0x3129
0x372c: movzx eax,byte ptr [rsp+0x7c]
0x3731: jmp 0x364c
0x3736: mov dword ptr [rsp+0x8],0x2
0x373e: jmp 0x30d9
0x3743: call 0x1530
0x3748: mov byte ptr [rsp+0xd],0x0
0x374d: jmp 0x31c1
0x375a: mov byte ptr [rsp+0xe],0x1
0x375f: xor eax,eax
0x3761: xor r12d,r12d
0x3764: mov qword ptr [rsp+0x50],0x0
0x376d: jmp 0x2d14
0x3784: nop 
0x3786: nop word ptr cs:[rax+rax]
0x387c: add rsp,0x20
0x3880: mov r11,qword ptr [rsp+0x10]
0x3885: cmp r11,rax
0x3888: ja 0x38f1
0x388a: lea rsi,[rax+0x1]
0x388e: lea rax,[rip+0x20486b]
0x3895: cmp r12,rax
0x3898: mov qword ptr [rbx],rsi
0x389b: je 0x38af
0x389d: mov rdi,r12
0x38a0: mov qword ptr [rsp+0x10],rsi
0x38a5: call 0x1470
0x38aa: mov rsi,qword ptr [rsp+0x10]
0x38af: mov rdi,rsi
0x38b2: mov qword ptr [rsp+0x10],rsi
0x38b7: call 0x4710
0x38bc: sub rsp,0x8
0x38c0: mov qword ptr [rbx+0x8],rax
0x38c4: mov r8d,dword ptr [rbp]
0x38c8: push qword ptr [rbp+0x30]
0x38cb: push qword ptr [rbp+0x28]
0x38ce: mov rcx,r14
0x38d1: push r15
0x38d3: mov r9d,dword ptr [rsp+0x3c]
0x38d8: mov rdi,rax
0x38db: mov rdx,qword ptr [rsp+0x28]
0x38e0: mov rsi,qword ptr [rsp+0x30]
0x38e5: mov r12,rax
0x38e8: call 0x2550
0x38ed: add rsp,0x20
0x38f1: mov eax,dword ptr [rsp+0x18]
0x38f5: mov dword ptr [r13],eax
0x38f9: add rsp,0x28
0x38fd: mov rax,r12
0x3900: pop rbx
0x3901: pop rbp
0x3902: pop r12
0x3904: pop r13
0x3906: pop r14
0x3908: pop r15
0x390a: ret 
0x3931: call 0x1480
0x3936: call 0x4960
0x393b: nop dword ptr [rax+rax]
0x3940: push r12
0x3942: push rbp
0x3943: push rbx
0x3944: mov rbx,rdi
0x3947: call 0x1490
0x394c: mov r12d,dword ptr [rax]
0x394f: mov rbp,rax
0x3952: lea rax,[rip+0x2048a7]
0x3959: test rbx,rbx
0x395c: mov esi,0x38
0x3961: cmove rbx,rax
0x3965: mov rdi,rbx
0x3968: call 0x4910
0x396d: mov dword ptr [rbp],r12d
0x3971: pop rbx
0x3972: pop rbp
0x3973: pop r12
0x3975: ret 
0x3980: lea rax,[rip+0x204879]
0x3987: test rdi,rdi
0x398a: cmove rdi,rax
0x398e: mov eax,dword ptr [rdi]
0x3990: ret 
0x39a0: lea rax,[rip+0x204859]
0x39a7: test rdi,rdi
0x39aa: cmove rdi,rax
0x39ae: mov dword ptr [rdi],esi
0x39b0: ret 
0x39c0: lea rax,[rip+0x204839]
0x39c7: test rdi,rdi
0x39ca: mov ecx,esi
0x39cc: cmove rdi,rax
0x39d0: mov eax,esi
0x39d2: and ecx,0x1f
0x39d5: shr al,0x5
0x39d8: movzx eax,al
0x39db: lea rdi,[rdi+rax*4+0x8]
0x39e0: mov esi,dword ptr [rdi]
0x39e2: mov eax,esi
0x39e4: shr eax,cl
0x39e6: xor edx,eax
0x39e8: and eax,0x1
0x39eb: and edx,0x1
0x39ee: shl edx,cl
0x39f0: xor edx,esi
0x39f2: mov dword ptr [rdi],edx
0x39f4: ret 
0x3a00: lea rax,[rip+0x2047f9]
0x3a07: test rdi,rdi
0x3a0a: cmove rdi,rax
0x3a0e: mov eax,dword ptr [rdi+0x4]
0x3a11: mov dword ptr [rdi+0x4],esi
0x3a14: ret 
0x3a20: lea rax,[rip+0x2047d9]
0x3a27: test rdi,rdi
0x3a2a: cmove rdi,rax
0x3a2e: test rsi,rsi
0x3a31: mov dword ptr [rdi],0xa
0x3a37: je 0x3a47
0x3a39: test rdx,rdx
0x3a3c: je 0x3a47
0x3a3e: mov qword ptr [rdi+0x28],rsi
0x3a42: mov qword ptr [rdi+0x30],rdx
0x3a46: ret 
0x3a47: sub rsp,0x8
0x3a4b: call 0x1480
0x3a50: push r15
0x3a52: push r14
0x3a54: lea rax,[rip+0x2047a5]
0x3a5b: push r13
0x3a5d: push r12
0x3a5f: mov r13,rdi
0x3a62: push rbp
0x3a63: push rbx
0x3a64: mov rbx,r8
0x3a67: mov r14,rsi
0x3a6a: mov r15,rdx
0x3a6d: sub rsp,0x18
0x3a71: test r8,r8
0x3a74: cmove rbx,rax
0x3a78: mov qword ptr [rsp+0x8],rcx
0x3a7d: call 0x1490
0x3a82: mov r12d,dword ptr [rax]
0x3a85: mov rbp,rax
0x3a88: lea rax,[rbx+0x8]
0x3a8c: sub rsp,0x8
0x3a90: mov r9d,dword ptr [rbx+0x4]
0x3a94: push qword ptr [rbx+0x30]
0x3a97: mov r8d,dword ptr [rbx]
0x3a9a: push qword ptr [rbx+0x28]
0x3a9d: mov rdx,r15
0x3aa0: push rax
0x3aa1: mov rcx,qword ptr [rsp+0x28]
0x3aa6: mov rsi,r14
0x3aa9: mov rdi,r13
0x3aac: call 0x2550
0x3ab1: mov dword ptr [rbp],r12d
0x3ab5: add rsp,0x38
0x3ab9: pop rbx
0x3aba: pop rbp
0x3abb: pop r12
0x3abd: pop r13
0x3abf: pop r14
0x3ac1: pop r15
0x3ac3: ret 
0x3ad0: push r15
0x3ad2: push r14
0x3ad4: lea rax,[rip+0x204725]
0x3adb: push r13
0x3add: push r12
0x3adf: mov r12,rdx
0x3ae2: push rbp
0x3ae3: push rbx
0x3ae4: mov rbx,rcx
0x3ae7: mov r14,rdi
0x3aea: mov r15,rsi
0x3aed: sub rsp,0x38
0x3af1: test rcx,rcx
0x3af4: cmove rbx,rax
0x3af8: xor ebp,ebp
0x3afa: call 0x1490
0x3aff: test r12,r12
0x3b02: mov r13,rax
0x3b05: mov eax,dword ptr [rax]
0x3b07: sete bpl
0x3b0b: or ebp,dword ptr [rbx+0x4]
0x3b0e: lea r10,[rbx+0x8]
0x3b12: sub rsp,0x8
0x3b16: mov r8d,dword ptr [rbx]
0x3b19: mov rcx,r15
0x3b1c: mov dword ptr [rsp+0x14],eax
0x3b20: push qword ptr [rbx+0x30]
0x3b23: mov rdx,r14
0x3b26: push qword ptr [rbx+0x28]
0x3b29: push r10
0x3b2b: xor esi,esi
0x3b2d: mov r9d,ebp
0x3b30: xor edi,edi
0x3b32: mov qword ptr [rsp+0x40],r10
0x3b37: call 0x2550
0x3b3c: lea rsi,[rax+0x1]
0x3b40: mov qword ptr [rsp+0x48],rax
0x3b45: add rsp,0x20
0x3b49: mov rdi,rsi
0x3b4c: mov qword ptr [rsp+0x18],rsi
0x3b51: call 0x4710
0x3b56: mov qword ptr [rsp+0x10],rax
0x3b5b: sub rsp,0x8
0x3b5f: push qword ptr [rbx+0x30]
0x3b62: push qword ptr [rbx+0x28]
0x3b65: mov r10,qword ptr [rsp+0x38]
0x3b6a: mov r9d,ebp
0x3b6d: mov r8d,dword ptr [rbx]
0x3b70: mov rcx,r15
0x3b73: mov rdx,r14
0x3b76: mov rdi,rax
0x3b79: push r10
0x3b7b: mov rsi,qword ptr [rsp+0x38]
0x3b80: call 0x2550
0x3b85: mov eax,dword ptr [rsp+0x2c]
0x3b89: add rsp,0x20
0x3b8d: test r12,r12
0x3b90: mov dword ptr [r13],eax
0x3b94: je 0x3b9f
0x3b96: mov r11,qword ptr [rsp+0x28]
0x3b9b: mov qword ptr [r12],r11
0x3b9f: mov rax,qword ptr [rsp+0x10]
0x3ba4: add rsp,0x38
0x3ba8: pop rbx
0x3ba9: pop rbp
0x3baa: pop r12
0x3bac: pop r13
0x3bae: pop r14
0x3bb0: pop r15
0x3bb2: ret 
0x3bc0: mov rcx,rdx
0x3bc3: xor edx,edx
0x3bc5: jmp 0x3ad0
0x3bd0: mov eax,dword ptr [rip+0x204482]
0x3bd6: push r12
0x3bd8: mov r12,qword ptr [rip+0x204481]
0x3bdf: push rbp
0x3be0: push rbx
0x3be1: cmp eax,0x1
0x3be4: jle 0x3c11
0x3be6: sub eax,0x2
0x3be9: lea rbx,[r12+0x18]
0x3bee: shl rax,0x4
0x3bf2: lea rbp,[r12+rax+0x28]
0x3bf7: nop word ptr [rax+rax]
0x3c00: mov rdi,qword ptr [rbx]
0x3c03: add rbx,0x10
0x3c07: call 0x1470
0x3c0c: cmp rbx,rbp
0x3c0f: jne 0x3c00
0x3c11: mov rdi,qword ptr [r12+0x8]
0x3c16: lea rbx,[rip+0x2044e3]
0x3c1d: cmp rdi,rbx
0x3c20: je 0x3c39
0x3c22: call 0x1470
0x3c27: mov qword ptr [rip+0x20443e],0x100
0x3c32: mov qword ptr [rip+0x20443f],rbx
0x3c39: lea rbx,[rip+0x204430]
0x3c40: cmp r12,rbx
0x3c43: je 0x3c54
0x3c45: mov rdi,r12
0x3c48: call 0x1470
0x3c4d: mov qword ptr [rip+0x20440c],rbx
0x3c54: pop rbx
0x3c55: mov dword ptr [rip+0x2043f9],0x1
0x3c5f: pop rbp
0x3c60: pop r12
0x3c62: ret 
0x3c70: lea rcx,[rip+0x204589]
0x3c77: mov rdx,-0x1
0x3c7e: jmp 0x3790
0x3c90: lea rcx,[rip+0x204569]
0x3c97: jmp 0x3790
0x3ca0: lea rcx,[rip+0x204559]
0x3ca7: mov rsi,rdi
0x3caa: mov rdx,-0x1
0x3cb1: xor edi,edi
0x3cb3: jmp 0x3790
0x3cc0: lea rcx,[rip+0x204539]
0x3cc7: mov rdx,rsi
0x3cca: mov rsi,rdi
0x3ccd: xor edi,edi
0x3ccf: jmp 0x3790
0x3ce0: sub rsp,0x48
0x3ce4: mov rax,rdx
0x3ce7: mov rdx,qword ptr fs:0x28
0x3cf0: mov qword ptr [rsp+0x38],rdx
0x3cf5: xor edx,edx
0x3cf7: cmp esi,0xa
0x3cfa: je 0x3d64
0x3cfc: mov dword ptr [rsp],esi
0x3cff: mov rcx,rsp
0x3d02: mov rdx,-0x1
0x3d09: mov rsi,rax
0x3d0c: mov qword ptr [rsp+0x4],0x0
0x3d15: mov qword ptr [rsp+0xc],0x0
0x3d1e: mov qword ptr [rsp+0x14],0x0
0x3d27: mov qword ptr [rsp+0x1c],0x0
0x3d30: mov qword ptr [rsp+0x24],0x0
0x3d39: mov qword ptr [rsp+0x2c],0x0
0x3d42: mov dword ptr [rsp+0x34],0x0
0x3d4a: call 0x3790
0x3d4f: mov rcx,qword ptr [rsp+0x38]
0x3d54: xor rcx,qword ptr fs:0x28
0x3d5d: jne 0x3d69
0x3d5f: add rsp,0x48
0x3d63: ret 
0x3d64: call 0x1480
0x3d69: call 0x1530
0x3d6e: nop 
0x3d70: sub rsp,0x48
0x3d74: mov rax,rdx
0x3d77: mov rdx,rcx
0x3d7a: mov rcx,qword ptr fs:0x28
0x3d83: mov qword ptr [rsp+0x38],rcx
0x3d88: xor ecx,ecx
0x3d8a: cmp esi,0xa
0x3d8d: je 0x3df0
0x3d8f: mov dword ptr [rsp],esi
0x3d92: mov rcx,rsp
0x3d95: mov rsi,rax
0x3d98: mov qword ptr [rsp+0x4],0x0
0x3da1: mov qword ptr [rsp+0xc],0x0
0x3daa: mov qword ptr [rsp+0x14],0x0
0x3db3: mov qword ptr [rsp+0x1c],0x0
0x3dbc: mov qword ptr [rsp+0x24],0x0
0x3dc5: mov qword ptr [rsp+0x2c],0x0
0x3dce: mov dword ptr [rsp+0x34],0x0
0x3dd6: call 0x3790
0x3ddb: mov rdx,qword ptr [rsp+0x38]
0x3de0: xor rdx,qword ptr fs:0x28
0x3de9: jne 0x3df5
0x3deb: add rsp,0x48
0x3def: ret 
0x3df0: call 0x1480
0x3df5: call 0x1530
0x3dfa: nop word ptr [rax+rax]
0x3e00: mov rdx,rsi
0x3e03: mov esi,edi
0x3e05: xor edi,edi
0x3e07: jmp 0x3ce0
0x3e10: mov rcx,rdx
0x3e13: mov rdx,rsi
0x3e16: mov esi,edi
0x3e18: xor edi,edi
0x3e1a: jmp 0x3d70
0x3e20: sub rsp,0x48
0x3e24: mov ecx,edx
0x3e26: mov rax,qword ptr fs:0x28
0x3e2f: mov qword ptr [rsp+0x38],rax
0x3e34: xor eax,eax
0x3e36: mov rax,qword ptr [rip+0x2043f3]
0x3e3d: mov r8,rsp
0x3e40: and ecx,0x1f
0x3e43: movdqa xmm0,[rip+0x2043b5]
0x3e4b: mov qword ptr [rsp+0x30],rax
0x3e50: mov eax,edx
0x3e52: movaps [rsp],xmm0
0x3e56: shr al,0x5
0x3e59: movzx eax,al
0x3e5c: lea r9,[r8+rax*4+0x8]
0x3e61: movdqa xmm0,[rip+0x2043a7]
0x3e69: movaps [rsp+0x10],xmm0
0x3e6e: movdqa xmm0,[rip+0x2043aa]
0x3e76: movaps [rsp+0x20],xmm0
0x3e7b: mov edx,dword ptr [r9]
0x3e7e: mov eax,edx
0x3e80: shr eax,cl
0x3e82: not eax
0x3e84: and eax,0x1
0x3e87: shl eax,cl
0x3e89: mov rcx,r8
0x3e8c: xor eax,edx
0x3e8e: mov rdx,rsi
0x3e91: mov rsi,rdi
0x3e94: mov dword ptr [r9],eax
0x3e97: xor edi,edi
0x3e99: call 0x3790
0x3e9e: mov rsi,qword ptr [rsp+0x38]
0x3ea3: xor rsi,qword ptr fs:0x28
0x3eac: jne 0x3eb3
0x3eae: add rsp,0x48
0x3eb2: ret 
0x3eb3: call 0x1530
0x3eb8: nop dword ptr [rax+rax]
0x3ec0: movsx edx,sil
0x3ec4: mov rsi,-0x1
0x3ecb: jmp 0x3e20
0x3ed0: mov edx,0x3a
0x3ed5: mov rsi,-0x1
0x3edc: jmp 0x3e20
0x3ef0: mov edx,0x3a
0x3ef5: jmp 0x3e20
0x3f6f: mov rcx,qword ptr [rsp+0x38]
0x3f74: xor rcx,qword ptr fs:0x28
0x3f7d: jne 0x3f89
0x3f7f: add rsp,0x48
0x3f83: ret 
0x3f84: call 0x1480
0x3f89: call 0x1530
0x3f8e: nop 
0x3f90: sub rsp,0x48
0x3f94: mov r9,rcx
0x3f97: mov rcx,qword ptr [rip+0x204292]
0x3f9e: movdqa xmm0,[rip+0x20425a]
0x3fa6: mov rax,qword ptr fs:0x28
0x3faf: mov qword ptr [rsp+0x38],rax
0x3fb4: xor eax,eax
0x3fb6: movaps [rsp],xmm0
0x3fba: test rsi,rsi
0x3fbd: mov qword ptr [rsp+0x30],rcx
0x3fc2: mov dword ptr [rsp],0xa
0x3fc9: movdqa xmm0,[rip+0x20423f]
0x3fd1: movaps [rsp+0x10],xmm0
0x3fd6: movdqa xmm0,[rip+0x204242]
0x3fde: movaps [rsp+0x20],xmm0
0x3fe3: je 0x4017
0x3fe5: test rdx,rdx
0x3fe8: je 0x4017
0x3fea: mov qword ptr [rsp+0x28],rsi
0x3fef: mov qword ptr [rsp+0x30],rdx
0x3ff4: mov rcx,rsp
0x3ff7: mov rdx,r8
0x3ffa: mov rsi,r9
0x3ffd: call 0x3790
0x4002: mov rdi,qword ptr [rsp+0x38]
0x4007: xor rdi,qword ptr fs:0x28
0x4010: jne 0x401c
0x4012: add rsp,0x48
0x4016: ret 
0x4017: call 0x1480
0x401c: call 0x1530
0x4021: nop dword ptr [rax+rax]
0x4026: nop word ptr cs:[rax+rax]
0x4030: mov r8,-0x1
0x4037: jmp 0x3f90
0x4040: mov rcx,rdx
0x4043: mov r8,-0x1
0x404a: mov rdx,rsi
0x404d: mov rsi,rdi
0x4050: xor edi,edi
0x4052: jmp 0x3f90
0x4060: mov r8,rcx
0x4063: mov rcx,rdx
0x4066: mov rdx,rsi
0x4069: mov rsi,rdi
0x406c: xor edi,edi
0x406e: jmp 0x3f90
0x4080: lea rcx,[rip+0x203f99]
0x4087: jmp 0x3790
0x4090: lea rcx,[rip+0x203f89]
0x4097: mov rdx,rsi
0x409a: mov rsi,rdi
0x409d: xor edi,edi
0x409f: jmp 0x3790
0x40b0: lea rcx,[rip+0x203f69]
0x40b7: mov rdx,-0x1
0x40be: jmp 0x3790
0x4228: mov r8,rcx
0x422b: mov rcx,rdx
0x422e: lea rdx,[rip+0x197f]
0x4235: mov esi,0x1
0x423a: xor eax,eax
0x423c: call 0x1720
0x4241: jmp 0x412c
0x443d: push r12
0x443f: push r15
0x4441: push r14
0x4443: mov r8,qword ptr [rsp+0x20]
0x4448: mov rcx,rbx
0x444b: mov rdx,rax
0x444e: mov rdi,rbp
0x4451: mov esi,0x1
0x4456: xor eax,eax
0x4458: call 0x1720
0x445d: add rsp,0x20
0x4461: add rsp,0x28
0x4465: pop rbx
0x4466: pop rbp
0x4467: pop r12
0x4469: pop r13
0x446b: pop r14
0x446d: pop r15
0x446f: ret 
0x44a9: push r12
0x44ab: push r15
0x44ad: push r14
0x44af: mov r9,qword ptr [rsp+0x28]
0x44b4: jmp 0x4443
0x4510: xor r9d,r9d
0x4513: cmp qword ptr [r8],0x0
0x4517: je 0x452b
0x4519: nop dword ptr [rax]
0x4520: add r9,0x1
0x4524: cmp qword ptr [r8+r9*8],0x0
0x4529: jne 0x4520
0x452b: jmp 0x40f0
0x4530: sub rsp,0x68
0x4534: mov r10,r8
0x4537: xor r9d,r9d
0x453a: mov rax,qword ptr fs:0x28
0x4543: mov qword ptr [rsp+0x58],rax
0x4548: xor eax,eax
0x454a: mov r8,rsp
0x454d: nop dword ptr [rax]
0x4550: mov eax,dword ptr [r10]
0x4553: cmp eax,0x2f
0x4556: ja 0x459a
0x4558: mov r11d,eax
0x455b: add r11,qword ptr [r10+0x10]
0x455f: add eax,0x8
0x4562: mov dword ptr [r10],eax
0x4565: mov rax,qword ptr [r11]
0x4568: test rax,rax
0x456b: mov qword ptr [r8+r9*8],rax
0x456f: je 0x457b
0x4571: add r9,0x1
0x4575: cmp r9,0xa
0x4579: jne 0x4550
0x457b: call 0x40f0
0x4580: mov rax,qword ptr [rsp+0x58]
0x4585: xor rax,qword ptr fs:0x28
0x458e: jne 0x4595
0x4590: add rsp,0x68
0x4594: ret 
0x4595: call 0x1530
0x459a: mov r11,qword ptr [r10+0x8]
0x459e: lea rax,[r11+0x8]
0x45a2: mov qword ptr [r10+0x8],rax
0x45a6: jmp 0x4565
0x4670: call 0x1530
0x467c: mov rax,rbx
0x467f: add rbx,0x8
0x4683: jmp 0x4636
0x4690: push rbx
0x4691: lea rsi,[rip+0x156a]
0x4698: mov edx,0x5
0x469d: xor edi,edi
0x469f: call 0x1500
0x46a4: lea rdx,[rip+0x156c]
0x46ab: mov rsi,rax
0x46ae: mov edi,0x1
0x46b3: xor eax,eax
0x46b5: call 0x16a0
0x46ba: lea rsi,[rip+0x156c]
0x46c1: mov edx,0x5
0x46c6: xor edi,edi
0x46c8: call 0x1500
0x46cd: lea rcx,[rip+0xeb4]
0x46d4: lea rdx,[rip+0xc04]
0x46db: mov rsi,rax
0x46de: mov edi,0x1
0x46e3: xor eax,eax
0x46e5: call 0x16a0
0x46ea: mov rbx,qword ptr [rip+0x203997]
0x46f1: lea rsi,[rip+0x1768]
0x46f8: xor edi,edi
0x46fa: mov edx,0x5
0x46ff: call 0x1500
0x4704: mov rsi,rbx
0x4707: mov rdi,rax
0x470a: pop rbx
0x470b: jmp 0x15f0
0x4710: push rbx
0x4711: mov rbx,rdi
0x4714: call 0x1630
0x4719: test rax,rax
0x471c: jne 0x4723
0x471e: test rbx,rbx
0x4721: jne 0x4725
0x4723: pop rbx
0x4724: ret 
0x4725: call 0x4960
0x472a: nop word ptr [rax+rax]
0x4730: mov rax,rdi
0x4733: mul rsi
0x4736: mov rdi,rax
0x4739: seto al
0x473c: test rdi,rdi
0x473f: js 0x474b
0x4741: movzx eax,al
0x4744: test rax,rax
0x4747: jne 0x474b
0x4749: jmp 0x4710
0x474b: sub rsp,0x8
0x474f: call 0x4960
0x4754: nop 
0x4756: nop word ptr cs:[rax+rax]
0x4760: jmp 0x4710
0x47a6: nop word ptr cs:[rax+rax]
0x47b0: mov rax,rsi
0x47b3: mul rdx
0x47b6: mov rsi,rax
0x47b9: seto al
0x47bc: test rsi,rsi
0x47bf: js 0x47cb
0x47c1: movzx eax,al
0x47c4: test rax,rax
0x47c7: jne 0x47cb
0x47c9: jmp 0x4770
0x47cb: sub rsp,0x8
0x47cf: call 0x4960
0x47d4: nop 
0x47d6: nop word ptr cs:[rax+rax]
0x47e0: test rdi,rdi
0x47e3: mov r9,rdx
0x47e6: mov rcx,qword ptr [rsi]
0x47e9: je 0x4820
0x47eb: xor edx,edx
0x47ed: movabsq rax,0x5555555555555554
0x47f7: div r9
0x47fa: cmp rax,rcx
0x47fd: jbe 0x483b
0x47ff: mov rax,rcx
0x4802: shr rax, 1
0x4805: lea rcx,[rax+rcx+0x1]
0x480a: mov qword ptr [rsi],rcx
0x480d: imul rcx,r9
0x4811: mov rsi,rcx
0x4814: jmp 0x4770
0x4820: test rcx,rcx
0x4823: je 0x4848
0x4825: mov rax,rcx
0x4828: mul r9
0x482b: seto dl
0x482e: test rax,rax
0x4831: movzx edx,dl
0x4834: js 0x483b
0x4836: test rdx,rdx
0x4839: je 0x480a
0x483b: sub rsp,0x8
0x483f: call 0x4960
0x4844: nop dword ptr [rax]
0x4848: xor edx,edx
0x484a: mov eax,0x80
0x484f: xor r8d,r8d
0x4852: div r9
0x4855: test rax,rax
0x4858: sete r8b
0x485c: lea rcx,[r8+rax]
0x4860: jmp 0x4825
0x48ba: nop word ptr [rax+rax]
0x48c0: push rbx
0x48c1: mov rbx,rdi
0x48c4: call 0x4710
0x48c9: mov rdx,rbx
0x48cc: xor esi,esi
0x48ce: mov rdi,rax
0x48d1: pop rbx
0x48d2: jmp 0x15c0
0x48e0: mov rax,rdi
0x48e3: sub rsp,0x8
0x48e7: mul rsi
0x48ea: seto dl
0x48ed: test rax,rax
0x48f0: js 0x4909
0x48f2: movzx edx,dl
0x48f5: test rdx,rdx
0x48f8: jne 0x4909
0x48fa: call 0x1600
0x48ff: test rax,rax
0x4902: je 0x4909
0x4904: add rsp,0x8
0x4908: ret 
0x4909: call 0x4960
0x490e: nop 
0x4910: push rbp
0x4911: push rbx
0x4912: mov rbp,rdi
0x4915: mov rdi,rsi
0x4918: mov rbx,rsi
0x491b: sub rsp,0x8
0x491f: call 0x4710
0x4924: add rsp,0x8
0x4928: mov rdx,rbx
0x492b: mov rsi,rbp
0x492e: pop rbx
0x492f: pop rbp
0x4930: mov rdi,rax
0x4933: jmp 0x1610
0x4940: push rbx
0x4941: mov rbx,rdi
0x4944: call 0x1520
0x4949: mov rdi,rbx
0x494c: lea rsi,[rax+0x1]
0x4950: pop rbx
0x4951: jmp 0x4910
0x4990: call 0x1480
0x4995: nop word ptr cs:[rax+rax]
0x499f: nop 
0x4a12: mov esi,dword ptr [r14]
0x4a15: mov r8,rax
0x4a18: mov eax,0x0
0x4a1d: lea rdx,[rip+0xc50]
0x4a24: mov rcx,r13
0x4a27: cmp esi,0x16
0x4a2a: cmove esi,eax
0x4a2d: test ebx,ebx
0x4a2f: mov eax,0x1
0x4a34: cmove ebx,eax
0x4a37: xor eax,eax
0x4a39: mov edi,ebx
0x4a3b: call 0x16c0
0x4a40: mov rbp,qword ptr [rsp]
0x4a9b: call 0x1530
0x4b76: cmp eax,0x22
0x4b79: mov ebp,0x1
0x4b7e: jne 0x4ba8
0x4ba2: nop word ptr [rax+rax]
0x4cd0: movsxd rdi,edi
0x4cd3: mov eax,ebp
0x4cd5: add rcx,rdi
0x4cd8: or eax,0x2
0x4cdb: mov qword ptr [r15],rcx
0x4cde: cmp byte ptr [rcx],0x0
0x4ce1: mov qword ptr [r14],rbx
0x4ce4: cmovne ebp,eax
0x4ce7: jmp 0x4bad
0x4d45: or ebp,r9d
0x4d48: jmp 0x4cd0
0x4ddc: mov rax,rbx
0x4ddf: mul rsi
0x4de2: mov rbx,rax
0x4de5: jo 0x4e74
0x4deb: sub r8d,0x1
0x4def: jne 0x4ddc
0x4df1: jmp 0x4d45
0x4e50: call 0x1530
0x4e55: lea rcx,[rip+0x11e4]
0x4e5c: lea rsi,[rip+0x10bd]
0x4e63: lea rdi,[rip+0x10d6]
0x4e6a: mov edx,0x54
0x4e6f: call 0x15a0
0x4e74: mov r9d,0x1
0x4e7a: or rbx,-0x1
0x4e7e: jmp 0x4deb
0x5010: push r13
0x5012: push r12
0x5014: mov r13,rsi
0x5017: push rbp
0x5018: push rbx
0x5019: mov rbx,rdi
0x501c: mov r12,rdx
0x501f: sub rsp,0x18
0x5023: mov rax,qword ptr fs:0x28
0x502c: mov qword ptr [rsp+0x8],rax
0x5031: xor eax,eax
0x5033: lea rax,[rsp+0x4]
0x5038: test rdi,rdi
0x503b: cmove rbx,rax
0x503f: mov rdi,rbx
0x5042: call 0x1550
0x5047: cmp rax,-0x3
0x504b: mov rbp,rax
0x504e: jbe 0x5070
0x5050: test r12,r12
0x5053: je 0x5070
0x5055: xor edi,edi
0x5057: call 0x5120
0x505c: test al,al
0x505e: jne 0x5070
0x5060: movzx eax,byte ptr [r13]
0x5065: mov ebp,0x1
0x506a: mov dword ptr [rbx],eax
0x506c: nop dword ptr [rax]
0x5070: mov rdx,qword ptr [rsp+0x8]
0x5075: xor rdx,qword ptr fs:0x28
0x507e: mov rax,rbp
0x5081: jne 0x508e
0x5083: add rsp,0x18
0x5087: pop rbx
0x5088: pop rbp
0x5089: pop r12
0x508b: pop r13
0x508d: ret 
0x508e: call 0x1530
0x5093: nop word ptr cs:[rax+rax]
0x509d: nop dword ptr [rax]
0x50a0: push r12
0x50a2: push rbp
0x50a3: mov rbp,rdi
0x50a6: push rbx
0x50a7: call 0x14c0
0x50ac: mov ebx,dword ptr [rbp]
0x50af: mov rdi,rbp
0x50b2: mov r12,rax
0x50b5: call 0x4ef0
0x50ba: and ebx,0x20
0x50bd: test ebx,ebx
0x50bf: jne 0x50d8
0x50c1: test eax,eax
0x50c3: je 0x50cf
0x50c5: test r12,r12
0x50c8: mov eax,0xffffffff
0x50cd: je 0x5108
0x50cf: pop rbx
0x50d0: pop rbp
0x50d1: pop r12
0x50d3: ret 
0x50d8: test eax,eax
0x50da: jne 0x50f8
0x50dc: call 0x1490
0x50e1: mov dword ptr [rax],0x0
0x50e7: mov eax,0xffffffff
0x50ec: pop rbx
0x50ed: pop rbp
0x50ee: pop r12
0x50f0: ret 
0x50f8: pop rbx
0x50f9: mov eax,0xffffffff
0x50fe: pop rbp
0x50ff: pop r12
0x5101: ret 
0x5108: call 0x1490
0x510d: cmp dword ptr [rax],0x9
0x5110: pop rbx
0x5111: pop rbp
0x5112: pop r12
0x5114: setne al
0x5117: movzx eax,al
0x511a: neg eax
0x511c: ret 
0x5120: sub rsp,0x8
0x5124: xor esi,esi
0x5126: call 0x1690
0x512b: mov rdx,rax
0x512e: mov eax,0x1
0x5133: test rdx,rdx
0x5136: je 0x5155
0x5138: lea rdi,[rip+0xf0c]
0x513f: mov ecx,0x2
0x5144: mov rsi,rdx
0x5147: rep cmpsb [rsi],es:[rdi]
0x5149: seta cl
0x514c: sbb cl,0x0
0x514f: xor eax,eax
0x5151: test cl,cl
0x5153: jne 0x5160
0x5155: add rsp,0x8
0x5159: ret 
0x5160: lea rdi,[rip+0xee6]
0x5167: mov ecx,0x6
0x516c: mov rsi,rdx
0x516f: rep cmpsb [rsi],es:[rdi]
0x5171: seta al
0x5174: sbb al,0x0
0x5176: test al,al
0x5178: setne al
0x517b: add rsp,0x8
0x517f: ret 
0x5180: sub rsp,0x8
0x5184: mov edi,0xe
0x5189: call 0x1650
0x518e: test rax,rax
0x5191: je 0x51b0
0x5193: cmp byte ptr [rax],0x0
0x5196: lea rdx,[rip+0xeb6]
0x519d: cmove rax,rdx
0x51a1: add rsp,0x8
0x51a5: ret 
0x51b0: lea rax,[rip+0xe9c]
0x51b7: add rsp,0x8
0x51bb: ret 
0x51c0: push r15
0x51c2: push r14
0x51c4: mov r15,rdx
0x51c7: push r13
0x51c9: push r12
0x51cb: lea r12,[rip+0x20293e]
0x51d2: push rbp
0x51d3: lea rbp,[rip+0x20293e]
0x51da: push rbx
0x51db: mov r13d,edi
0x51de: mov r14,rsi
0x51e1: sub rbp,r12
0x51e4: sub rsp,0x8
0x51e8: sar rbp,0x3
0x51ec: call 0x1430
0x51f1: test rbp,rbp
0x51f4: je 0x5216
0x51f6: xor ebx,ebx
0x51f8: nop dword ptr [rax+rax]
0x5200: mov rdx,r15
0x5203: mov rsi,r14
0x5206: mov edi,r13d
0x5209: call qword ptr [r12+rbx*8]
0x520d: add rbx,0x1
0x5211: cmp rbp,rbx
0x5214: jne 0x5200
0x5216: add rsp,0x8
0x521a: pop rbx
0x521b: pop rbp
0x521c: pop r12
0x521e: pop r13
0x5220: pop r14
0x5222: pop r15
0x5224: ret 
0x5230: rep ret 
0x5757: jmp qword ptr [rip+0x6affffdb]
