0x16a8: sub rsp,0x8
0x16ac: mov rax,qword ptr [rip+0x20791d]
0x16b3: test rax,rax
0x16b6: je 0x16ba
0x16b8: call rax
0x16ba: add rsp,0x8
0x16be: ret 
0x16c6: jmp qword ptr [rip+0x20770c]
0x1720: jmp qword ptr [rip+0x2076e2]
0x1730: jmp qword ptr [rip+0x2076da]
0x1750: jmp qword ptr [rip+0x2076ca]
0x1770: jmp qword ptr [rip+0x2076ba]
0x17e0: jmp qword ptr [rip+0x207682]
0x1800: jmp qword ptr [rip+0x207672]
0x1840: jmp qword ptr [rip+0x207652]
0x1850: jmp qword ptr [rip+0x20764a]
0x1890: jmp qword ptr [rip+0x20762a]
0x18b0: jmp qword ptr [rip+0x20761a]
0x1900: jmp qword ptr [rip+0x2075f2]
0x1930: jmp qword ptr [rip+0x2075da]
0x1940: jmp qword ptr [rip+0x2075d2]
0x1960: jmp qword ptr [rip+0x2075c2]
0x19d0: jmp qword ptr [rip+0x20758a]
0x1a60: jmp qword ptr [rip+0x207542]
0x1a70: jmp qword ptr [rip+0x20753a]
0x1a90: jmp qword ptr [rip+0x20754a]
0x1bc7: nop word ptr [rax+rax]
0x1c8c: test r13,r13
0x1c8f: je 0x20d9
0x1c95: cmp dword ptr [rsp+0x1c],-0x1
0x1c9a: je 0x2067
0x1ca0: mov qword ptr [rsp+0x8],0x0
0x1e2a: lea rsi,[rip+0x429d]
0x1e31: mov edx,0x5
0x1e36: xor edi,edi
0x1e38: mov rbx,rax
0x1e3b: add ebp,0x7e
0x1e3e: call 0x17a0
0x1e43: mov esi,dword ptr [r12]
0x1e47: mov rdx,rax
0x1e4a: mov rcx,rbx
0x1e4d: xor edi,edi
0x1e4f: xor eax,eax
0x1e51: call 0x19a0
0x1f1e: mov rdi,qword ptr [rsp+0x8]
0x1f23: test rdi,rdi
0x1f26: je 0x1cb4
0x1f2c: lea rdx,[rsp+0x20]
0x1f31: call 0x54e0
0x1f36: test eax,eax
0x1f38: jle 0x1cb4
0x1f3e: cltq 
0x1f40: mov qword ptr [rsp+0x28],rax
0x1f45: jmp 0x1cb4
0x201c: lea rsi,[rip+0x43ed]
0x2023: mov edx,0x5
0x2028: xor edi,edi
0x202a: mov rbp,rax
0x202d: call 0x17a0
0x2032: mov rbx,rax
0x2035: call 0x1710
0x203a: mov esi,dword ptr [rax]
0x203c: mov rcx,rbp
0x203f: mov rdx,rbx
0x2042: mov edi,0x7d
0x2047: xor eax,eax
0x2049: call 0x19a0
0x2067: call 0x1780
0x206c: test rax,rax
0x206f: je 0x1ca0
0x2075: cmp dword ptr [rsp+0x1c],-0x1
0x207a: jne 0x2083
0x207c: mov edx,dword ptr [rax+0x14]
0x207f: mov dword ptr [rsp+0x1c],edx
0x2083: mov rax,qword ptr [rax]
0x2086: mov qword ptr [rsp+0x8],rax
0x208b: jmp 0x1f08
0x20d9: call 0x1780
0x20de: test rax,rax
0x20e1: jne 0x2075
0x20e3: mov qword ptr [rsp+0x8],0x0
0x20ec: jmp 0x1cb4
0x215b: call 0x17e0
0x21e3: lea rsi,[rip+0x41ee]
0x21ea: mov rbx,rax
0x21ed: mov edx,0x5
0x21f2: xor edi,edi
0x21f4: call 0x17a0
0x21f9: xor edi,edi
0x21fb: mov rdx,rax
0x21fe: mov rcx,rbx
0x2201: xor esi,esi
0x2203: xor eax,eax
0x2205: call 0x19a0
0x220a: mov edi,0x7d
0x220f: call 0x25a0
0x2214: nop word ptr cs:[rax+rax]
0x221e: nop 
0x224a: hlt 
0x224b: nop dword ptr [rax+rax]
0x2250: lea rdi,[rip+0x206e29]
0x2257: push rbp
0x2258: lea rax,[rip+0x206e21]
0x225f: cmp rax,rdi
0x2262: mov rbp,rsp
0x2265: je 0x2280
0x2267: mov rax,qword ptr [rip+0x206d52]
0x226e: test rax,rax
0x2271: je 0x2280
0x2273: pop rbp
0x2274: jmp rax
0x2280: pop rbp
0x2281: ret 
0x2290: lea rdi,[rip+0x206de9]
0x2297: lea rsi,[rip+0x206de2]
0x229e: push rbp
0x229f: sub rsi,rdi
0x22a2: mov rbp,rsp
0x22a5: sar rsi,0x3
0x22a9: mov rax,rsi
0x22ac: shr rax,0x3f
0x22b0: add rsi,rax
0x22b3: sar rsi, 1
0x22b6: je 0x22d0
0x22b8: mov rax,qword ptr [rip+0x206d19]
0x22bf: test rax,rax
0x22c2: je 0x22d0
0x22c4: pop rbp
0x22c5: jmp rax
0x22d0: pop rbp
0x22d1: ret 
0x22f1: push rbp
0x22f2: mov rbp,rsp
0x22f5: je 0x2303
0x22f7: mov rdi,qword ptr [rip+0x206d0a]
0x22fe: call 0x1a90
0x2303: call 0x2250
0x2308: mov byte ptr [rip+0x206db9],0x1
0x230f: pop rbp
0x2310: ret 
0x2320: push rbp
0x2321: mov rbp,rsp
0x2324: pop rbp
0x2325: jmp 0x2290
0x250b: lea rsi,[rip+0x3a74]
0x2512: mov edx,0x5
0x2517: xor edi,edi
0x2519: mov qword ptr [rsp+0x8],rax
0x251e: call 0x17a0
0x2523: mov r15,rax
0x2526: call 0x1710
0x252b: mov rcx,qword ptr [rsp+0x8]
0x2530: mov esi,dword ptr [rax]
0x2532: mov rdx,r15
0x2535: xor edi,edi
0x2537: xor eax,eax
0x2539: call 0x19a0
0x253e: mov dword ptr [rsp+0x8],0xffffffff
0x2546: jmp 0x240c
0x2562: lea rsi,[rip+0x3a2e]
0x2569: mov rbx,rax
0x256c: xor edi,edi
0x256e: mov edx,0x5
0x2573: call 0x17a0
0x2578: mov rcx,rbx
0x257b: mov rdx,rax
0x257e: xor esi,esi
0x2580: xor edi,edi
0x2582: xor eax,eax
0x2584: call 0x19a0
0x2589: jmp 0x245b
0x259b: call 0x17e0
0x26a0: lea rsi,[rip+0x3b99]
0x26a7: mov rbx,rax
0x26aa: mov edx,0x5
0x26af: xor edi,edi
0x26b1: call 0x17a0
0x26b6: mov rdx,rbx
0x26b9: mov rsi,rax
0x26bc: mov edi,0x1
0x26c1: xor eax,eax
0x26c3: call 0x1990
0x26c8: mov rbx,qword ptr [rip+0x2069b9]
0x26cf: lea rsi,[rip+0x3baa]
0x26d6: mov edx,0x5
0x26db: xor edi,edi
0x26dd: call 0x17a0
0x26e2: mov rsi,rbx
0x26e5: mov rdi,rax
0x26e8: call 0x18a0
0x26ed: mov rbx,qword ptr [rip+0x206994]
0x26f4: lea rsi,[rip+0x3bb5]
0x26fb: mov edx,0x5
0x2700: xor edi,edi
0x2702: call 0x17a0
0x2707: mov rsi,rbx
0x270a: mov rdi,rax
0x270d: call 0x18a0
0x2712: mov rbx,qword ptr [rip+0x20696f]
0x2719: lea rsi,[rip+0x3bc8]
0x2720: mov edx,0x5
0x2725: xor edi,edi
0x2727: call 0x17a0
0x272c: mov rsi,rbx
0x272f: mov rdi,rax
0x2732: lea rbx,[rip+0x3874]
0x2739: call 0x18a0
0x273e: lea rax,[rip+0x386f]
0x2745: lea rcx,[rip+0x38a9]
0x274c: mov qword ptr [rsp+0x60],0x0
0x2755: mov qword ptr [rsp+0x68],0x0
0x275e: mov rdx,rsp
0x2761: mov qword ptr [rsp],rax
0x2765: lea rax,[rip+0x384a]
0x276c: mov qword ptr [rsp+0x30],rcx
0x2771: lea rcx,[rip+0x3887]
0x2778: mov qword ptr [rsp+0x8],rax
0x277d: lea rax,[rip+0x38aa]
0x2784: mov qword ptr [rsp+0x40],rcx
0x2789: lea rcx,[rip+0x3879]
0x2790: mov qword ptr [rsp+0x10],rax
0x2795: lea rax,[rip+0x382a]
0x279c: mov qword ptr [rsp+0x50],rcx
0x27a1: mov qword ptr [rsp+0x18],rax
0x27a6: lea rax,[rip+0x382f]
0x27ad: mov qword ptr [rsp+0x20],rax
0x27b2: lea rax,[rip+0x382d]
0x27b9: mov qword ptr [rsp+0x28],rax
0x27be: mov qword ptr [rsp+0x38],rax
0x27c3: mov qword ptr [rsp+0x48],rax
0x27c8: mov qword ptr [rsp+0x58],rax
0x27cd: nop dword ptr [rax]
0x27d0: add rdx,0x10
0x27d4: mov rdi,qword ptr [rdx]
0x27d7: test rdi,rdi
0x27da: je 0x27ef
0x27dc: mov ecx,0x7
0x27e1: mov rsi,rbx
0x27e4: rep cmpsb [rsi],es:[rdi]
0x27e6: seta al
0x27e9: sbb al,0x0
0x27eb: test al,al
0x27ed: jne 0x27d0
0x27ef: mov r12,qword ptr [rdx+0x8]
0x27f3: xor edi,edi
0x27f5: mov edx,0x5
0x27fa: lea rsi,[rip+0x3812]
0x2801: test r12,r12
0x2804: je 0x28cb
0x280a: call 0x17a0
0x280f: lea rcx,[rip+0x3b1a]
0x2816: lea rdx,[rip+0x380d]
0x281d: mov rsi,rax
0x2820: mov edi,0x1
0x2825: xor eax,eax
0x2827: call 0x1990
0x282c: xor esi,esi
0x282e: mov edi,0x5
0x2833: call 0x1980
0x2838: test rax,rax
0x283b: je 0x2859
0x283d: lea rsi,[rip+0x37f4]
0x2844: mov edx,0x3
0x2849: mov rdi,rax
0x284c: call 0x1720
0x2851: test eax,eax
0x2853: jne 0x2960
0x2859: lea rsi,[rip+0x37dc]
0x2860: xor edi,edi
0x2862: mov edx,0x5
0x2867: call 0x17a0
0x286c: lea rcx,[rip+0x373a]
0x2873: lea rdx,[rip+0x3ab6]
0x287a: mov rsi,rax
0x287d: mov edi,0x1
0x2882: xor eax,eax
0x2884: call 0x1990
0x2889: cmp r12,rbx
0x288c: lea rcx,[rip+0x373d]
0x2893: lea rbx,[rip+0x41ef]
0x289a: cmove rbx,rcx
0x289e: lea rsi,[rip+0x3afb]
0x28a5: xor edi,edi
0x28a7: mov edx,0x5
0x28ac: call 0x17a0
0x28b1: mov rcx,rbx
0x28b4: mov rsi,rax
0x28b7: mov rdx,r12
0x28ba: mov edi,0x1
0x28bf: xor eax,eax
0x28c1: call 0x1990
0x28c6: jmp 0x25f6
0x28cb: call 0x17a0
0x28d0: lea rcx,[rip+0x3a59]
0x28d7: lea rdx,[rip+0x374c]
0x28de: mov rsi,rax
0x28e1: mov edi,0x1
0x28e6: xor eax,eax
0x28e8: call 0x1990
0x28ed: xor esi,esi
0x28ef: mov edi,0x5
0x28f4: call 0x1980
0x28f9: test rax,rax
0x28fc: je 0x2916
0x28fe: lea rsi,[rip+0x3733]
0x2905: mov edx,0x3
0x290a: mov rdi,rax
0x290d: call 0x1720
0x2912: test eax,eax
0x2914: jne 0x2959
0x2916: lea rsi,[rip+0x371f]
0x291d: mov edx,0x5
0x2922: xor edi,edi
0x2924: lea r12,[rip+0x3682]
0x292b: lea rbx,[rip+0x369e]
0x2932: call 0x17a0
0x2937: lea rcx,[rip+0x366f]
0x293e: lea rdx,[rip+0x39eb]
0x2945: mov rsi,rax
0x2948: mov edi,0x1
0x294d: xor eax,eax
0x294f: call 0x1990
0x2954: jmp 0x289e
0x2959: lea r12,[rip+0x364d]
0x2960: mov r13,qword ptr [rip+0x206721]
0x2967: lea rsi,[rip+0x39ea]
0x296e: xor edi,edi
0x2970: mov edx,0x5
0x2975: call 0x17a0
0x297a: mov rsi,r13
0x297d: mov rdi,rax
0x2980: call 0x18a0
0x2985: jmp 0x2859
0x2990: mov qword ptr [rip+0x206741],rdi
0x2997: ret 
0x29a0: mov byte ptr [rip+0x206729],dil
0x29a7: ret 
0x29b0: push rbp
0x29b1: push rbx
0x29b2: sub rsp,0x8
0x29b6: mov rdi,qword ptr [rip+0x2066cb]
0x29bd: call 0x59c0
0x29c2: test eax,eax
0x29c4: je 0x29dc
0x29c6: call 0x1710
0x29cb: cmp byte ptr [rip+0x2066fe],0x0
0x29d2: mov rbx,rax
0x29d5: je 0x29f3
0x29d7: cmp dword ptr [rax],0x20
0x29da: jne 0x29f3
0x29dc: mov rdi,qword ptr [rip+0x2066dd]
0x29e3: call 0x59c0
0x29e8: test eax,eax
0x29ea: jne 0x2a32
0x29ec: add rsp,0x8
0x29f0: pop rbx
0x29f1: pop rbp
0x29f2: ret 
0x29f3: lea rsi,[rip+0x3ad5]
0x29fa: xor edi,edi
0x29fc: mov edx,0x5
0x2a01: call 0x17a0
0x2a06: mov rdi,qword ptr [rip+0x2066cb]
0x2a0d: mov rbp,rax
0x2a10: test rdi,rdi
0x2a13: je 0x2a3d
0x2a15: call 0x4570
0x2a1a: mov esi,dword ptr [rbx]
0x2a1c: lea rdx,[rip+0x3ab8]
0x2a23: mov rcx,rax
0x2a26: mov r8,rbp
0x2a29: xor edi,edi
0x2a2b: xor eax,eax
0x2a2d: call 0x19a0
0x2a32: mov edi,dword ptr [rip+0x2065e0]
0x2a38: call 0x1730
0x2a3d: mov esi,dword ptr [rbx]
0x2a3f: lea rdx,[rip+0x3a99]
0x2a46: mov rcx,rax
0x2a49: xor edi,edi
0x2a4b: xor eax,eax
0x2a4d: call 0x19a0
0x2a52: jmp 0x2a32
0x2aff: nop 
0x2b00: push rbp
0x2b01: push rbx
0x2b02: mov rbp,rdi
0x2b05: mov ebx,esi
0x2b07: sub rsp,0x8
0x2b0b: call 0x5af0
0x2b10: movzx edx,byte ptr [rax]
0x2b13: and edx,-0x21
0x2b16: cmp dl,0x55
0x2b19: je 0x2b90
0x2b1b: cmp dl,0x47
0x2b1e: je 0x2b40
0x2b20: lea rax,[rip+0x3a14]
0x2b27: lea rdx,[rip+0x3a0f]
0x2b2e: cmp ebx,0x9
0x2b31: cmovne rax,rdx
0x2b35: add rsp,0x8
0x2b39: pop rbx
0x2b3a: pop rbp
0x2b3b: ret 
0x2b40: movzx edx,byte ptr [rax+0x1]
0x2b44: and edx,-0x21
0x2b47: cmp dl,0x42
0x2b4a: jne 0x2b20
0x2b4c: cmp byte ptr [rax+0x2],0x31
0x2b50: jne 0x2b20
0x2b52: cmp byte ptr [rax+0x3],0x38
0x2b56: jne 0x2b20
0x2b58: cmp byte ptr [rax+0x4],0x30
0x2b5c: jne 0x2b20
0x2b5e: cmp byte ptr [rax+0x5],0x33
0x2b62: jne 0x2b20
0x2b64: cmp byte ptr [rax+0x6],0x30
0x2b68: jne 0x2b20
0x2b6a: cmp byte ptr [rax+0x7],0x0
0x2b6e: jne 0x2b20
0x2b70: cmp byte ptr [rbp],0x60
0x2b74: lea rax,[rip+0x39b9]
0x2b7b: lea rdx,[rip+0x39b6]
0x2b82: cmovne rax,rdx
0x2b86: add rsp,0x8
0x2b8a: pop rbx
0x2b8b: pop rbp
0x2b8c: ret 
0x2b90: movzx edx,byte ptr [rax+0x1]
0x2b94: and edx,-0x21
0x2b97: cmp dl,0x54
0x2b9a: jne 0x2b20
0x2b9c: movzx edx,byte ptr [rax+0x2]
0x2ba0: and edx,-0x21
0x2ba3: cmp dl,0x46
0x2ba6: jne 0x2b20
0x2bac: cmp byte ptr [rax+0x3],0x2d
0x2bb0: jne 0x2b20
0x2bb6: cmp byte ptr [rax+0x4],0x38
0x2bba: jne 0x2b20
0x2bc0: cmp byte ptr [rax+0x5],0x0
0x2bc4: jne 0x2b20
0x2bca: cmp byte ptr [rbp],0x60
0x2bce: lea rax,[rip+0x3957]
0x2bd5: lea rdx,[rip+0x3954]
0x2bdc: cmovne rax,rdx
0x2be0: add rsp,0x8
0x2be4: pop rbx
0x2be5: pop rbp
0x2be6: ret 
0x2cc3: xor r11d,r11d
0x2cc6: mov rax,rbp
0x2cc9: mov r8d,r12d
0x2ccc: mov rbp,r11
0x2ccf: mov r11,rax
0x2cd2: nop word ptr [rax+rax]
0x2cd8: cmp r11,rbp
0x2cdb: setne r12b
0x2cdf: cmp r11,-0x1
0x2ce3: jne 0x2cf2
0x2ce5: mov rax,qword ptr [rsp+0x10]
0x2cea: cmp byte ptr [rax+rbp],0x0
0x2cee: setne r12b
0x2cf2: test r12b,r12b
0x2cf5: je 0x3350
0x2cfb: cmp dword ptr [rsp+0x8],0x2
0x2d00: mov rdi,qword ptr [rsp+0x10]
0x2d05: lea r9,[rdi+rbp]
0x2d09: setne al
0x2d0c: and al,byte ptr [rsp+0xd]
0x2d10: mov r10d,eax
0x2d13: je 0x2dc0
0x2d19: mov rax,qword ptr [rsp+0x18]
0x2d1e: test rax,rax
0x2d21: je 0x3150
0x2d27: cmp r11,-0x1
0x2d2b: lea rbx,[rbp+rax]
0x2d30: jne 0x2d60
0x2d32: cmp rax,0x1
0x2d36: jbe 0x2d60
0x2d38: mov byte ptr [rsp+0x38],r8b
0x2d3d: mov byte ptr [rsp+0x30],r10b
0x2d42: mov qword ptr [rsp+0x28],r9
0x2d47: call 0x17c0
0x2d4c: movzx r8d,byte ptr [rsp+0x38]
0x2d52: movzx r10d,byte ptr [rsp+0x30]
0x2d58: mov r11,rax
0x2d5b: mov r9,qword ptr [rsp+0x28]
0x2d60: cmp rbx,r11
0x2d63: mov byte ptr [rsp+0x28],r10b
0x2d68: ja 0x3320
0x2d6e: mov rdx,qword ptr [rsp+0x18]
0x2d73: mov rsi,qword ptr [rsp+0x48]
0x2d78: mov rdi,r9
0x2d7b: mov qword ptr [rsp+0x40],r11
0x2d80: mov byte ptr [rsp+0x38],r8b
0x2d85: mov qword ptr [rsp+0x30],r9
0x2d8a: call 0x1890
0x2d8f: test eax,eax
0x2d91: mov r9,qword ptr [rsp+0x30]
0x2d96: movzx r8d,byte ptr [rsp+0x38]
0x2d9c: mov r11,qword ptr [rsp+0x40]
0x2da1: jne 0x3320
0x2da7: cmp byte ptr [rsp+0xf],0x0
0x2dac: movzx r10d,byte ptr [rsp+0x28]
0x2db2: jne 0x3d35
0x2db8: nop dword ptr [rax+rax]
0x2dc0: movzx ebx,byte ptr [r9]
0x2dc4: cmp bl,0x7e
0x2dc7: ja 0x30e8
0x2dcd: lea rcx,[rip+0x37f8]
0x2dd4: movzx edx,bl
0x2dd7: movsxd rax,dword ptr [rcx+rdx*4]
0x2ddb: add rax,rcx
0x2dde: jmp rax
0x2e18: cmp byte ptr [rsp+0xd],0x1
0x2e1d: jne 0x2f32
0x2e23: test dl,dl
0x2e25: jne 0x2f32
0x2e2b: mov rsi,qword ptr [rsp+0x20]
0x2e30: test rsi,rsi
0x2e33: je 0x2e49
0x2e35: mov edx,ebx
0x2e37: shr dl,0x5
0x2e3a: movzx edx,dl
0x2e3d: mov edx,dword ptr [rsi+rdx*4]
0x2e40: btl edx,ebx
0x2e43: jb 0x2f93
0x2e49: test r10b,r10b
0x2e4c: jne 0x2f93
0x2e52: xor eax,0x1
0x2e55: add rbp,0x1
0x2e59: and eax,r8d
0x2e5c: test al,al
0x2e5e: je 0x2e80
0x2e60: cmp r13,r15
0x2e63: jbe 0x2e6a
0x2e65: mov byte ptr [r14+r15],0x27
0x2e6a: lea rax,[r15+0x1]
0x2e6e: cmp r13,rax
0x2e71: jbe 0x2e79
0x2e73: mov byte ptr [r14+r15+0x1],0x27
0x2e79: add r15,0x2
0x2e7d: xor r8d,r8d
0x2e80: cmp r15,r13
0x2e83: jae 0x2e89
0x2e85: mov byte ptr [r14+r15],bl
0x2e89: movzx edi,byte ptr [rsp+0xe]
0x2e8e: add r15,0x1
0x2e92: mov eax,0x0
0x2e97: test r12b,r12b
0x2e9a: cmove edi,eax
0x2e9d: mov byte ptr [rsp+0xe],dil
0x2ea2: jmp 0x2cd8
0x2f32: cmp byte ptr [rsp+0xf],0x0
0x2f37: jne 0x2e2b
0x2f3d: jmp 0x2e49
0x2f93: cmp dword ptr [rsp+0x8],0x2
0x2f98: sete dl
0x2f9b: cmp byte ptr [rsp+0xf],0x0
0x2fa0: mov eax,edx
0x2fa2: jne 0x37f8
0x2fa8: mov eax,r8d
0x2fab: xor eax,0x1
0x2fae: and al,dl
0x2fb0: je 0x2fe1
0x2fb2: cmp r13,r15
0x2fb5: jbe 0x2fbc
0x2fb7: mov byte ptr [r14+r15],0x27
0x2fbc: lea rdx,[r15+0x1]
0x2fc0: cmp r13,rdx
0x2fc3: jbe 0x2fcb
0x2fc5: mov byte ptr [r14+r15+0x1],0x24
0x2fcb: lea rdx,[r15+0x2]
0x2fcf: cmp r13,rdx
0x2fd2: jbe 0x2fda
0x2fd4: mov byte ptr [r14+r15+0x2],0x27
0x2fda: add r15,0x3
0x2fde: mov r8d,eax
0x2fe1: cmp r13,r15
0x2fe4: jbe 0x2feb
0x2fe6: mov byte ptr [r14+r15],0x5c
0x2feb: add r15,0x1
0x2fef: add rbp,0x1
0x2ff3: jmp 0x2e80
0x30e0: xor r10d,r10d
0x30e3: nop dword ptr [rax+rax]
0x30e8: cmp qword ptr [rsp+0x58],0x1
0x30ee: jne 0x3498
0x30f4: mov qword ptr [rsp+0x38],r11
0x30f9: mov byte ptr [rsp+0x30],r8b
0x30fe: mov byte ptr [rsp+0x28],r10b
0x3103: call 0x1a80
0x3108: mov rcx,qword ptr [rax]
0x310b: movzx edx,bl
0x310e: movzx r10d,byte ptr [rsp+0x28]
0x3114: movzx r8d,byte ptr [rsp+0x30]
0x311a: mov r11,qword ptr [rsp+0x38]
0x311f: mov edi,0x1
0x3124: movzx eax,word ptr [rcx+rdx*2]
0x3128: and ax,0x4000
0x312c: setne r12b
0x3130: sete al
0x3133: and al,byte ptr [rsp+0xd]
0x3137: test al,al
0x3139: jne 0x3ad1
0x313f: cmp dword ptr [rsp+0x8],0x2
0x3144: sete dl
0x3147: jmp 0x2e18
0x3150: movzx ebx,byte ptr [r9]
0x3154: cmp bl,0x7e
0x3157: ja 0x30e0
0x3159: lea rcx,[rip+0x3668]
0x3160: movzx edx,bl
0x3163: movsxd rax,dword ptr [rcx+rdx*4]
0x3167: add rax,rcx
0x316a: jmp rax
0x3320: xor r10d,r10d
0x3323: jmp 0x2dc0
0x3350: cmp dword ptr [rsp+0x8],0x2
0x3355: movzx ebx,byte ptr [rsp+0xf]
0x335a: mov r12d,r8d
0x335d: mov rbp,r11
0x3360: sete dl
0x3363: mov eax,ebx
0x3365: test r15,r15
0x3368: sete cl
0x336b: and eax,edx
0x336d: and al,cl
0x336f: jne 0x3dd6
0x3375: mov eax,ebx
0x3377: xor eax,0x1
0x337a: and dl,al
0x337c: je 0x3cec
0x3382: cmp byte ptr [rsp+0x7c],0x0
0x3387: je 0x3cea
0x338d: cmp byte ptr [rsp+0xe],0x0
0x3392: jne 0x3d8d
0x3398: test r13,r13
0x339b: sete al
0x339e: cmp qword ptr [rsp+0x50],0x0
0x33a4: setne dl
0x33a7: and al,dl
0x33a9: je 0x3dcc
0x33af: mov r13,qword ptr [rsp+0x50]
0x33b4: lea rbx,[rip+0x3182]
0x33bb: mov byte ptr [r14],0x27
0x33bf: mov dword ptr [rsp+0x8],0x2
0x33c7: mov r15d,0x1
0x33cd: mov qword ptr [rsp+0x18],0x1
0x33d6: mov byte ptr [rsp+0xf],0x0
0x33db: mov qword ptr [rsp+0x48],rbx
0x33e0: mov byte ptr [rsp+0x7c],al
0x33e4: jmp 0x2cc3
0x3498: lea rax,[rsp+0xa0]
0x34a0: cmp r11,-0x1
0x34a4: mov qword ptr [rsp+0xa0],0x0
0x34b0: mov qword ptr [rsp+0x28],rax
0x34b5: jne 0x34e4
0x34b7: mov rdi,qword ptr [rsp+0x10]
0x34bc: mov byte ptr [rsp+0x40],r8b
0x34c1: mov byte ptr [rsp+0x38],r10b
0x34c6: mov qword ptr [rsp+0x30],r9
0x34cb: call 0x17c0
0x34d0: movzx r8d,byte ptr [rsp+0x40]
0x34d6: movzx r10d,byte ptr [rsp+0x38]
0x34dc: mov r11,rax
0x34df: mov r9,qword ptr [rsp+0x30]
0x34e4: lea rax,[rsp+0x9c]
0x34ec: xor ecx,ecx
0x34ee: mov byte ptr [rsp+0x7e],bl
0x34f2: mov byte ptr [rsp+0x7d],r8b
0x34f7: mov rbx,rcx
0x34fa: mov qword ptr [rsp+0x88],r9
0x3502: mov qword ptr [rsp+0x38],rax
0x3507: mov byte ptr [rsp+0x7f],r10b
0x350c: mov qword ptr [rsp+0x80],r15
0x3514: mov qword ptr [rsp+0x40],r14
0x3519: mov qword ptr [rsp+0x70],r13
0x351e: mov qword ptr [rsp+0x30],r11
0x3523: mov rax,qword ptr [rsp+0x10]
0x3528: lea r14,[rbp+rbx]
0x352d: mov rdx,qword ptr [rsp+0x30]
0x3532: mov rcx,qword ptr [rsp+0x28]
0x3537: mov rdi,qword ptr [rsp+0x38]
0x353c: lea r13,[rax+r14]
0x3540: sub rdx,r14
0x3543: mov rsi,r13
0x3546: call 0x5930
0x354b: test rax,rax
0x354e: mov r15,rax
0x3551: je 0x35a1
0x3553: cmp rax,-0x1
0x3557: je 0x3b75
0x355d: cmp rax,-0x2
0x3561: je 0x3b01
0x3567: cmp dword ptr [rsp+0x8],0x2
0x356c: sete al
0x356f: and al,byte ptr [rsp+0xf]
0x3573: jne 0x3710
0x3579: mov edi,dword ptr [rsp+0x9c]
0x3580: call 0x1a70
0x3585: mov rdi,qword ptr [rsp+0x28]
0x358a: test eax,eax
0x358c: mov eax,0x0
0x3591: cmove r12d,eax
0x3595: add rbx,r15
0x3598: call 0x1a60
0x359d: test eax,eax
0x359f: je 0x3523
0x35a1: mov edx,r12d
0x35a4: mov rdi,rbx
0x35a7: movzx r8d,byte ptr [rsp+0x7d]
0x35ad: xor edx,0x1
0x35b0: movzx ebx,byte ptr [rsp+0x7e]
0x35b5: movzx r10d,byte ptr [rsp+0x7f]
0x35bb: and dl,byte ptr [rsp+0xd]
0x35bf: mov r15,qword ptr [rsp+0x80]
0x35c7: mov r14,qword ptr [rsp+0x40]
0x35cc: mov r13,qword ptr [rsp+0x70]
0x35d1: mov r11,qword ptr [rsp+0x30]
0x35d6: cmp rdi,0x1
0x35da: jbe 0x3bdb
0x35e0: mov rcx,rdi
0x35e3: xor esi,esi
0x35e5: movzx r9d,byte ptr [rsp+0xf]
0x35eb: add rcx,rbp
0x35ee: mov rdi,qword ptr [rsp+0x10]
0x35f3: jmp 0x36ae
0x3600: cmp dword ptr [rsp+0x8],0x2
0x3605: sete al
0x3608: test r9b,r9b
0x360b: jne 0x3ac0
0x3611: mov esi,r8d
0x3614: xor esi,0x1
0x3617: and al,sil
0x361a: je 0x364b
0x361c: cmp r13,r15
0x361f: jbe 0x3626
0x3621: mov byte ptr [r14+r15],0x27
0x3626: lea rsi,[r15+0x1]
0x362a: cmp r13,rsi
0x362d: jbe 0x3635
0x362f: mov byte ptr [r14+r15+0x1],0x24
0x3635: lea rsi,[r15+0x2]
0x3639: cmp r13,rsi
0x363c: jbe 0x3644
0x363e: mov byte ptr [r14+r15+0x2],0x27
0x3644: add r15,0x3
0x3648: mov r8d,eax
0x364b: cmp r13,r15
0x364e: jbe 0x3655
0x3650: mov byte ptr [r14+r15],0x5c
0x3655: lea rax,[r15+0x1]
0x3659: cmp r13,rax
0x365c: jbe 0x366b
0x365e: mov eax,ebx
0x3660: shr al,0x6
0x3663: add eax,0x30
0x3666: mov byte ptr [r14+r15+0x1],al
0x366b: lea rax,[r15+0x2]
0x366f: cmp r13,rax
0x3672: jbe 0x3684
0x3674: mov eax,ebx
0x3676: shr al,0x3
0x3679: and eax,0x7
0x367c: add eax,0x30
0x367f: mov byte ptr [r14+r15+0x2],al
0x3684: and ebx,0x7
0x3687: add rbp,0x1
0x368b: add r15,0x3
0x368f: add ebx,0x30
0x3692: cmp rbp,rcx
0x3695: jae 0x2e80
0x369b: mov esi,edx
0x369d: cmp r13,r15
0x36a0: jbe 0x36a6
0x36a2: mov byte ptr [r14+r15],bl
0x36a6: movzx ebx,byte ptr [rdi+rbp]
0x36aa: add r15,0x1
0x36ae: test dl,dl
0x36b0: jne 0x3600
0x36b6: mov eax,esi
0x36b8: xor eax,0x1
0x36bb: and eax,r8d
0x36be: test r10b,r10b
0x36c1: je 0x36d1
0x36c3: cmp r13,r15
0x36c6: jbe 0x36cd
0x36c8: mov byte ptr [r14+r15],0x5c
0x36cd: add r15,0x1
0x36d1: add rbp,0x1
0x36d5: cmp rbp,rcx
0x36d8: jae 0x2e5c
0x36de: test al,al
0x36e0: je 0x3ade
0x36e6: cmp r13,r15
0x36e9: jbe 0x36f0
0x36eb: mov byte ptr [r14+r15],0x27
0x36f0: lea rax,[r15+0x1]
0x36f4: cmp r13,rax
0x36f7: jbe 0x36ff
0x36f9: mov byte ptr [r14+r15+0x1],0x27
0x36ff: add r15,0x2
0x3703: xor r10d,r10d
0x3706: xor r8d,r8d
0x3709: jmp 0x369d
0x3710: cmp r15,0x1
0x3714: je 0x3579
0x371a: mov rdi,qword ptr [rsp+0x10]
0x371f: lea rcx,[rdi+r15]
0x3723: lea rdx,[rdi+r14+0x1]
0x3728: lea r8,[rcx+r14]
0x372c: jmp 0x373d
0x3730: add rdx,0x1
0x3734: cmp r8,rdx
0x3737: je 0x3579
0x373d: movzx ecx,byte ptr [rdx]
0x3740: sub ecx,0x5b
0x3743: cmp cl,0x21
0x3746: ja 0x3730
0x3748: mov esi,0x1
0x374d: shl rsi,cl
0x3750: mov rcx,rsi
0x3753: movabsq rsi,0x20000002b
0x375d: test rcx,rsi
0x3760: je 0x3730
0x3762: mov r14,qword ptr [rsp+0x40]
0x3767: mov r13,qword ptr [rsp+0x70]
0x376c: mov rbp,qword ptr [rsp+0x30]
0x3771: mov dword ptr [rsp+0x8],0x2
0x3779: cmp byte ptr [rsp+0xd],0x0
0x377e: je 0x3790
0x3780: test al,al
0x3782: mov eax,0x4
0x3787: cmove eax,dword ptr [rsp+0x8]
0x378c: mov dword ptr [rsp+0x8],eax
0x3790: sub rsp,0x8
0x3794: mov rcx,rbp
0x3797: mov rsi,r13
0x379a: push qword ptr [rsp+0x68]
0x379e: push qword ptr [rsp+0x78]
0x37a2: mov rdi,r14
0x37a5: push 0x0
0x37a7: mov r9d,dword ptr [rsp+0x98]
0x37af: mov r8d,dword ptr [rsp+0x28]
0x37b4: mov rdx,qword ptr [rsp+0x30]
0x37b9: and r9d,-0x3
0x37bd: call 0x2bf0
0x37c2: add rsp,0x20
0x37c6: mov r15,rax
0x37c9: mov rbx,qword ptr [rsp+0xa8]
0x37d1: xor rbx,qword ptr fs:0x28
0x37da: mov rax,r15
0x37dd: jne 0x3de3
0x37e3: add rsp,0xb8
0x37ea: pop rbx
0x37eb: pop rbp
0x37ec: pop r12
0x37ee: pop r13
0x37f0: pop r14
0x37f2: pop r15
0x37f4: ret 
0x37f8: mov rbp,r11
0x37fb: jmp 0x3779
0x3861: test r13,r13
0x3864: jne 0x3dfa
0x386a: lea rax,[rip+0x2ccc]
0x3871: mov qword ptr [rsp+0x50],0x0
0x387a: mov byte ptr [rsp+0xe],0x1
0x387f: mov byte ptr [rsp+0x7c],0x0
0x3884: xor r12d,r12d
0x3887: mov byte ptr [rsp+0xf],0x0
0x388c: mov qword ptr [rsp+0x18],0x1
0x3895: mov qword ptr [rsp+0x48],rax
0x389a: mov r15d,0x1
0x38a0: mov dword ptr [rsp+0x8],0x2
0x38a8: jmp 0x2cc3
0x3ac0: movzx ebx,byte ptr [rsp+0xf]
0x3ac5: mov rbp,r11
0x3ac8: mov byte ptr [rsp+0xd],bl
0x3acc: jmp 0x3779
0x3ad1: movzx edx,byte ptr [rsp+0xd]
0x3ad6: xor r12d,r12d
0x3ad9: jmp 0x35e0
0x3ade: xor r10d,r10d
0x3ae1: jmp 0x369d
0x3b01: mov r11,qword ptr [rsp+0x30]
0x3b06: mov rsi,r14
0x3b09: mov rcx,r13
0x3b0c: mov rax,rbx
0x3b0f: mov rdi,rbx
0x3b12: movzx r8d,byte ptr [rsp+0x7d]
0x3b18: movzx ebx,byte ptr [rsp+0x7e]
0x3b1d: mov r9,qword ptr [rsp+0x88]
0x3b25: cmp rsi,r11
0x3b28: movzx r10d,byte ptr [rsp+0x7f]
0x3b2e: mov r15,qword ptr [rsp+0x80]
0x3b36: mov r14,qword ptr [rsp+0x40]
0x3b3b: mov r13,qword ptr [rsp+0x70]
0x3b40: jae 0x3b68
0x3b42: cmp byte ptr [rcx],0x0
0x3b45: jne 0x3b57
0x3b47: jmp 0x3b68
0x3b50: cmp byte ptr [r9+rax],0x0
0x3b55: je 0x3b65
0x3b57: add rax,0x1
0x3b5b: lea rdx,[rbp+rax]
0x3b60: cmp r11,rdx
0x3b63: ja 0x3b50
0x3b65: mov rdi,rax
0x3b68: movzx edx,byte ptr [rsp+0xd]
0x3b6d: xor r12d,r12d
0x3b70: jmp 0x35d6
0x3b75: mov rdi,rbx
0x3b78: movzx r8d,byte ptr [rsp+0x7d]
0x3b7e: movzx ebx,byte ptr [rsp+0x7e]
0x3b83: movzx r10d,byte ptr [rsp+0x7f]
0x3b89: mov r15,qword ptr [rsp+0x80]
0x3b91: xor r12d,r12d
0x3b94: mov r14,qword ptr [rsp+0x40]
0x3b99: mov r13,qword ptr [rsp+0x70]
0x3b9e: mov r11,qword ptr [rsp+0x30]
0x3ba3: movzx edx,byte ptr [rsp+0xd]
0x3ba8: jmp 0x35d6
0x3bdb: mov eax,edx
0x3bdd: jmp 0x3137
0x3cea: mov eax,edx
0x3cec: mov rbx,qword ptr [rsp+0x48]
0x3cf1: test rbx,rbx
0x3cf4: je 0x3d22
0x3cf6: test al,al
0x3cf8: je 0x3d22
0x3cfa: movzx ecx,byte ptr [rbx]
0x3cfd: mov rax,rbx
0x3d00: test cl,cl
0x3d02: je 0x3d22
0x3d04: mov rdx,r15
0x3d07: sub rax,r15
0x3d0a: cmp r13,rdx
0x3d0d: jbe 0x3d13
0x3d0f: mov byte ptr [r14+rdx],cl
0x3d13: add rdx,0x1
0x3d17: movzx ecx,byte ptr [rax+rdx]
0x3d1b: test cl,cl
0x3d1d: jne 0x3d0a
0x3d1f: mov r15,rdx
0x3d22: cmp r13,r15
0x3d25: jbe 0x37c9
0x3d2b: mov byte ptr [r14+r15],0x0
0x3d30: jmp 0x37c9
0x3d35: cmp dword ptr [rsp+0x8],0x2
0x3d3a: movzx ebx,byte ptr [rsp+0xf]
0x3d3f: mov rbp,r11
0x3d42: sete al
0x3d45: mov byte ptr [rsp+0xd],bl
0x3d49: jmp 0x3779
0x3d8d: sub rsp,0x8
0x3d91: mov r8d,0x5
0x3d97: mov rcx,r11
0x3d9a: push qword ptr [rsp+0x68]
0x3d9e: push qword ptr [rsp+0x78]
0x3da2: mov rdi,r14
0x3da5: push qword ptr [rsp+0x38]
0x3da9: mov r9d,dword ptr [rsp+0x98]
0x3db1: mov rdx,qword ptr [rsp+0x30]
0x3db6: mov rsi,qword ptr [rsp+0x70]
0x3dbb: call 0x2bf0
0x3dc0: add rsp,0x20
0x3dc4: mov r15,rax
0x3dc7: jmp 0x37c9
0x3dcc: movzx eax,byte ptr [rsp+0x7c]
0x3dd1: jmp 0x3cec
0x3dd6: mov dword ptr [rsp+0x8],0x2
0x3dde: jmp 0x3779
0x3de3: call 0x17e0
0x3de8: mov byte ptr [rsp+0xd],0x0
0x3ded: jmp 0x3861
0x3dfa: mov byte ptr [rsp+0xe],0x1
0x3dff: xor eax,eax
0x3e01: xor r12d,r12d
0x3e04: mov qword ptr [rsp+0x50],0x0
0x3e0d: jmp 0x33b4
0x3e24: nop 
0x3e26: nop word ptr cs:[rax+rax]
0x3f1c: add rsp,0x20
0x3f20: mov r11,qword ptr [rsp+0x10]
0x3f25: cmp r11,rax
0x3f28: ja 0x3f91
0x3f2a: lea rsi,[rax+0x1]
0x3f2e: lea rax,[rip+0x2051cb]
0x3f35: cmp r12,rax
0x3f38: mov qword ptr [rbx],rsi
0x3f3b: je 0x3f4f
0x3f3d: mov rdi,r12
0x3f40: mov qword ptr [rsp+0x10],rsi
0x3f45: call 0x16f0
0x3f4a: mov rsi,qword ptr [rsp+0x10]
0x3f4f: mov rdi,rsi
0x3f52: mov qword ptr [rsp+0x10],rsi
0x3f57: call 0x5250
0x3f5c: sub rsp,0x8
0x3f60: mov qword ptr [rbx+0x8],rax
0x3f64: mov r8d,dword ptr [rbp]
0x3f68: push qword ptr [rbp+0x30]
0x3f6b: push qword ptr [rbp+0x28]
0x3f6e: mov rcx,r14
0x3f71: push r15
0x3f73: mov r9d,dword ptr [rsp+0x3c]
0x3f78: mov rdi,rax
0x3f7b: mov rdx,qword ptr [rsp+0x28]
0x3f80: mov rsi,qword ptr [rsp+0x30]
0x3f85: mov r12,rax
0x3f88: call 0x2bf0
0x3f8d: add rsp,0x20
0x3f91: mov eax,dword ptr [rsp+0x18]
0x3f95: mov dword ptr [r13],eax
0x3f99: add rsp,0x28
0x3f9d: mov rax,r12
0x3fa0: pop rbx
0x3fa1: pop rbp
0x3fa2: pop r12
0x3fa4: pop r13
0x3fa6: pop r14
0x3fa8: pop r15
0x3faa: ret 
0x3fd1: call 0x1700
0x3fd6: call 0x54a0
0x3fdb: nop dword ptr [rax+rax]
0x3fe0: push r12
0x3fe2: push rbp
0x3fe3: push rbx
0x3fe4: mov rbx,rdi
0x3fe7: call 0x1710
0x3fec: mov r12d,dword ptr [rax]
0x3fef: mov rbp,rax
0x3ff2: lea rax,[rip+0x205207]
0x3ff9: test rbx,rbx
0x3ffc: mov esi,0x38
0x4001: cmove rbx,rax
0x4005: mov rdi,rbx
0x4008: call 0x5450
0x400d: mov dword ptr [rbp],r12d
0x4011: pop rbx
0x4012: pop rbp
0x4013: pop r12
0x4015: ret 
0x4020: lea rax,[rip+0x2051d9]
0x4027: test rdi,rdi
0x402a: cmove rdi,rax
0x402e: mov eax,dword ptr [rdi]
0x4030: ret 
0x4040: lea rax,[rip+0x2051b9]
0x4047: test rdi,rdi
0x404a: cmove rdi,rax
0x404e: mov dword ptr [rdi],esi
0x4050: ret 
0x4060: lea rax,[rip+0x205199]
0x4067: test rdi,rdi
0x406a: mov ecx,esi
0x406c: cmove rdi,rax
0x4070: mov eax,esi
0x4072: and ecx,0x1f
0x4075: shr al,0x5
0x4078: movzx eax,al
0x407b: lea rdi,[rdi+rax*4+0x8]
0x4080: mov esi,dword ptr [rdi]
0x4082: mov eax,esi
0x4084: shr eax,cl
0x4086: xor edx,eax
0x4088: and eax,0x1
0x408b: and edx,0x1
0x408e: shl edx,cl
0x4090: xor edx,esi
0x4092: mov dword ptr [rdi],edx
0x4094: ret 
0x40a0: lea rax,[rip+0x205159]
0x40a7: test rdi,rdi
0x40aa: cmove rdi,rax
0x40ae: mov eax,dword ptr [rdi+0x4]
0x40b1: mov dword ptr [rdi+0x4],esi
0x40b4: ret 
0x40c0: lea rax,[rip+0x205139]
0x40c7: test rdi,rdi
0x40ca: cmove rdi,rax
0x40ce: test rsi,rsi
0x40d1: mov dword ptr [rdi],0xa
0x40d7: je 0x40e7
0x40d9: test rdx,rdx
0x40dc: je 0x40e7
0x40de: mov qword ptr [rdi+0x28],rsi
0x40e2: mov qword ptr [rdi+0x30],rdx
0x40e6: ret 
0x40e7: sub rsp,0x8
0x40eb: call 0x1700
0x40f0: push r15
0x40f2: push r14
0x40f4: lea rax,[rip+0x205105]
0x40fb: push r13
0x40fd: push r12
0x40ff: mov r13,rdi
0x4102: push rbp
0x4103: push rbx
0x4104: mov rbx,r8
0x4107: mov r14,rsi
0x410a: mov r15,rdx
0x410d: sub rsp,0x18
0x4111: test r8,r8
0x4114: cmove rbx,rax
0x4118: mov qword ptr [rsp+0x8],rcx
0x411d: call 0x1710
0x4122: mov r12d,dword ptr [rax]
0x4125: mov rbp,rax
0x4128: lea rax,[rbx+0x8]
0x412c: sub rsp,0x8
0x4130: mov r9d,dword ptr [rbx+0x4]
0x4134: push qword ptr [rbx+0x30]
0x4137: mov r8d,dword ptr [rbx]
0x413a: push qword ptr [rbx+0x28]
0x413d: mov rdx,r15
0x4140: push rax
0x4141: mov rcx,qword ptr [rsp+0x28]
0x4146: mov rsi,r14
0x4149: mov rdi,r13
0x414c: call 0x2bf0
0x4151: mov dword ptr [rbp],r12d
0x4155: add rsp,0x38
0x4159: pop rbx
0x415a: pop rbp
0x415b: pop r12
0x415d: pop r13
0x415f: pop r14
0x4161: pop r15
0x4163: ret 
0x4170: push r15
0x4172: push r14
0x4174: lea rax,[rip+0x205085]
0x417b: push r13
0x417d: push r12
0x417f: mov r12,rdx
0x4182: push rbp
0x4183: push rbx
0x4184: mov rbx,rcx
0x4187: mov r14,rdi
0x418a: mov r15,rsi
0x418d: sub rsp,0x38
0x4191: test rcx,rcx
0x4194: cmove rbx,rax
0x4198: xor ebp,ebp
0x419a: call 0x1710
0x419f: test r12,r12
0x41a2: mov r13,rax
0x41a5: mov eax,dword ptr [rax]
0x41a7: sete bpl
0x41ab: or ebp,dword ptr [rbx+0x4]
0x41ae: lea r10,[rbx+0x8]
0x41b2: sub rsp,0x8
0x41b6: mov r8d,dword ptr [rbx]
0x41b9: mov rcx,r15
0x41bc: mov dword ptr [rsp+0x14],eax
0x41c0: push qword ptr [rbx+0x30]
0x41c3: mov rdx,r14
0x41c6: push qword ptr [rbx+0x28]
0x41c9: push r10
0x41cb: xor esi,esi
0x41cd: mov r9d,ebp
0x41d0: xor edi,edi
0x41d2: mov qword ptr [rsp+0x40],r10
0x41d7: call 0x2bf0
0x41dc: lea rsi,[rax+0x1]
0x41e0: mov qword ptr [rsp+0x48],rax
0x41e5: add rsp,0x20
0x41e9: mov rdi,rsi
0x41ec: mov qword ptr [rsp+0x18],rsi
0x41f1: call 0x5250
0x41f6: mov qword ptr [rsp+0x10],rax
0x41fb: sub rsp,0x8
0x41ff: push qword ptr [rbx+0x30]
0x4202: push qword ptr [rbx+0x28]
0x4205: mov r10,qword ptr [rsp+0x38]
0x420a: mov r9d,ebp
0x420d: mov r8d,dword ptr [rbx]
0x4210: mov rcx,r15
0x4213: mov rdx,r14
0x4216: mov rdi,rax
0x4219: push r10
0x421b: mov rsi,qword ptr [rsp+0x38]
0x4220: call 0x2bf0
0x4225: mov eax,dword ptr [rsp+0x2c]
0x4229: add rsp,0x20
0x422d: test r12,r12
0x4230: mov dword ptr [r13],eax
0x4234: je 0x423f
0x4236: mov r11,qword ptr [rsp+0x28]
0x423b: mov qword ptr [r12],r11
0x423f: mov rax,qword ptr [rsp+0x10]
0x4244: add rsp,0x38
0x4248: pop rbx
0x4249: pop rbp
0x424a: pop r12
0x424c: pop r13
0x424e: pop r14
0x4250: pop r15
0x4252: ret 
0x4260: mov rcx,rdx
0x4263: xor edx,edx
0x4265: jmp 0x4170
0x4270: mov eax,dword ptr [rip+0x204de2]
0x4276: push r12
0x4278: mov r12,qword ptr [rip+0x204de1]
0x427f: push rbp
0x4280: push rbx
0x4281: cmp eax,0x1
0x4284: jle 0x42b1
0x4286: sub eax,0x2
0x4289: lea rbx,[r12+0x18]
0x428e: shl rax,0x4
0x4292: lea rbp,[r12+rax+0x28]
0x4297: nop word ptr [rax+rax]
0x42a0: mov rdi,qword ptr [rbx]
0x42a3: add rbx,0x10
0x42a7: call 0x16f0
0x42ac: cmp rbx,rbp
0x42af: jne 0x42a0
0x42b1: mov rdi,qword ptr [r12+0x8]
0x42b6: lea rbx,[rip+0x204e43]
0x42bd: cmp rdi,rbx
0x42c0: je 0x42d9
0x42c2: call 0x16f0
0x42c7: mov qword ptr [rip+0x204d9e],0x100
0x42d2: mov qword ptr [rip+0x204d9f],rbx
0x42d9: lea rbx,[rip+0x204d90]
0x42e0: cmp r12,rbx
0x42e3: je 0x42f4
0x42e5: mov rdi,r12
0x42e8: call 0x16f0
0x42ed: mov qword ptr [rip+0x204d6c],rbx
0x42f4: pop rbx
0x42f5: mov dword ptr [rip+0x204d59],0x1
0x42ff: pop rbp
0x4300: pop r12
0x4302: ret 
0x4310: lea rcx,[rip+0x204ee9]
0x4317: mov rdx,-0x1
0x431e: jmp 0x3e30
0x4330: lea rcx,[rip+0x204ec9]
0x4337: jmp 0x3e30
0x4340: lea rcx,[rip+0x204eb9]
0x4347: mov rsi,rdi
0x434a: mov rdx,-0x1
0x4351: xor edi,edi
0x4353: jmp 0x3e30
0x4360: lea rcx,[rip+0x204e99]
0x4367: mov rdx,rsi
0x436a: mov rsi,rdi
0x436d: xor edi,edi
0x436f: jmp 0x3e30
0x43ef: mov rcx,qword ptr [rsp+0x38]
0x43f4: xor rcx,qword ptr fs:0x28
0x43fd: jne 0x4409
0x43ff: add rsp,0x48
0x4403: ret 
0x4404: call 0x1700
0x4409: call 0x17e0
0x440e: nop 
0x4410: sub rsp,0x48
0x4414: mov rax,rdx
0x4417: mov rdx,rcx
0x441a: mov rcx,qword ptr fs:0x28
0x4423: mov qword ptr [rsp+0x38],rcx
0x4428: xor ecx,ecx
0x442a: cmp esi,0xa
0x442d: je 0x4490
0x442f: mov dword ptr [rsp],esi
0x4432: mov rcx,rsp
0x4435: mov rsi,rax
0x4438: mov qword ptr [rsp+0x4],0x0
0x4441: mov qword ptr [rsp+0xc],0x0
0x444a: mov qword ptr [rsp+0x14],0x0
0x4453: mov qword ptr [rsp+0x1c],0x0
0x445c: mov qword ptr [rsp+0x24],0x0
0x4465: mov qword ptr [rsp+0x2c],0x0
0x446e: mov dword ptr [rsp+0x34],0x0
0x4476: call 0x3e30
0x447b: mov rdx,qword ptr [rsp+0x38]
0x4480: xor rdx,qword ptr fs:0x28
0x4489: jne 0x4495
0x448b: add rsp,0x48
0x448f: ret 
0x4490: call 0x1700
0x4495: call 0x17e0
0x449a: nop word ptr [rax+rax]
0x44b0: mov rcx,rdx
0x44b3: mov rdx,rsi
0x44b6: mov esi,edi
0x44b8: xor edi,edi
0x44ba: jmp 0x4410
0x44c0: sub rsp,0x48
0x44c4: mov ecx,edx
0x44c6: mov rax,qword ptr fs:0x28
0x44cf: mov qword ptr [rsp+0x38],rax
0x44d4: xor eax,eax
0x44d6: mov rax,qword ptr [rip+0x204d53]
0x44dd: mov r8,rsp
0x44e0: and ecx,0x1f
0x44e3: movdqa xmm0,[rip+0x204d15]
0x44eb: mov qword ptr [rsp+0x30],rax
0x44f0: mov eax,edx
0x44f2: movaps [rsp],xmm0
0x44f6: shr al,0x5
0x44f9: movzx eax,al
0x44fc: lea r9,[r8+rax*4+0x8]
0x4501: movdqa xmm0,[rip+0x204d07]
0x4509: movaps [rsp+0x10],xmm0
0x450e: movdqa xmm0,[rip+0x204d0a]
0x4516: movaps [rsp+0x20],xmm0
0x451b: mov edx,dword ptr [r9]
0x451e: mov eax,edx
0x4520: shr eax,cl
0x4522: not eax
0x4524: and eax,0x1
0x4527: shl eax,cl
0x4529: mov rcx,r8
0x452c: xor eax,edx
0x452e: mov rdx,rsi
0x4531: mov rsi,rdi
0x4534: mov dword ptr [r9],eax
0x4537: xor edi,edi
0x4539: call 0x3e30
0x453e: mov rsi,qword ptr [rsp+0x38]
0x4543: xor rsi,qword ptr fs:0x28
0x454c: jne 0x4553
0x454e: add rsp,0x48
0x4552: ret 
0x4553: call 0x17e0
0x4558: nop dword ptr [rax+rax]
0x4560: movsx edx,sil
0x4564: mov rsi,-0x1
0x456b: jmp 0x44c0
0x4570: mov edx,0x3a
0x4575: mov rsi,-0x1
0x457c: jmp 0x44c0
0x4590: mov edx,0x3a
0x4595: jmp 0x44c0
0x45a0: sub rsp,0x48
0x45a4: mov rax,rdx
0x45a7: mov rdx,qword ptr fs:0x28
0x45b0: mov qword ptr [rsp+0x38],rdx
0x45b5: xor edx,edx
0x45b7: cmp esi,0xa
0x45ba: je 0x4624
0x45bc: mov dword ptr [rsp],esi
0x45bf: mov rcx,rsp
0x45c2: mov rdx,-0x1
0x45c9: mov rsi,rax
0x45cc: mov qword ptr [rsp+0x4],0x0
0x45d5: mov qword ptr [rsp+0xc],0x4000000
0x45de: mov qword ptr [rsp+0x14],0x0
0x45e7: mov qword ptr [rsp+0x1c],0x0
0x45f0: mov qword ptr [rsp+0x24],0x0
0x45f9: mov qword ptr [rsp+0x2c],0x0
0x4602: mov dword ptr [rsp+0x34],0x0
0x460a: call 0x3e30
0x460f: mov rcx,qword ptr [rsp+0x38]
0x4614: xor rcx,qword ptr fs:0x28
0x461d: jne 0x4629
0x461f: add rsp,0x48
0x4623: ret 
0x4624: call 0x1700
0x4629: call 0x17e0
0x462e: nop 
0x4630: sub rsp,0x48
0x4634: mov r9,rcx
0x4637: mov rcx,qword ptr [rip+0x204bf2]
0x463e: movdqa xmm0,[rip+0x204bba]
0x4646: mov rax,qword ptr fs:0x28
0x464f: mov qword ptr [rsp+0x38],rax
0x4654: xor eax,eax
0x4656: movaps [rsp],xmm0
0x465a: test rsi,rsi
0x465d: mov qword ptr [rsp+0x30],rcx
0x4662: mov dword ptr [rsp],0xa
0x4669: movdqa xmm0,[rip+0x204b9f]
0x4671: movaps [rsp+0x10],xmm0
0x4676: movdqa xmm0,[rip+0x204ba2]
0x467e: movaps [rsp+0x20],xmm0
0x4683: je 0x46b7
0x4685: test rdx,rdx
0x4688: je 0x46b7
0x468a: mov qword ptr [rsp+0x28],rsi
0x468f: mov qword ptr [rsp+0x30],rdx
0x4694: mov rcx,rsp
0x4697: mov rdx,r8
0x469a: mov rsi,r9
0x469d: call 0x3e30
0x46a2: mov rdi,qword ptr [rsp+0x38]
0x46a7: xor rdi,qword ptr fs:0x28
0x46b0: jne 0x46bc
0x46b2: add rsp,0x48
0x46b6: ret 
0x46b7: call 0x1700
0x46bc: call 0x17e0
0x46c1: nop dword ptr [rax+rax]
0x46c6: nop word ptr cs:[rax+rax]
0x46d0: mov r8,-0x1
0x46d7: jmp 0x4630
0x46e0: mov rcx,rdx
0x46e3: mov r8,-0x1
0x46ea: mov rdx,rsi
0x46ed: mov rsi,rdi
0x46f0: xor edi,edi
0x46f2: jmp 0x4630
0x4700: mov r8,rcx
0x4703: mov rcx,rdx
0x4706: mov rdx,rsi
0x4709: mov rsi,rdi
0x470c: xor edi,edi
0x470e: jmp 0x4630
0x4720: lea rcx,[rip+0x2048f9]
0x4727: jmp 0x3e30
0x4730: lea rcx,[rip+0x2048e9]
0x4737: mov rdx,rsi
0x473a: mov rsi,rdi
0x473d: xor edi,edi
0x473f: jmp 0x3e30
0x4750: lea rcx,[rip+0x2048c9]
0x4757: mov rdx,-0x1
0x475e: jmp 0x3e30
0x4b45: call 0x17e0
0x4c10: mov r9,r8
0x4c13: mov rdx,rsi
0x4c16: mov r8,rcx
0x4c19: xor esi,esi
0x4c1b: xor ecx,ecx
0x4c1d: jmp 0x4790
0x4d68: mov r8,rcx
0x4d6b: mov rcx,rdx
0x4d6e: lea rdx,[rip+0x1cc7]
0x4d75: mov esi,0x1
0x4d7a: xor eax,eax
0x4d7c: call 0x1a40
0x4d81: jmp 0x4c6c
0x4f7d: push r12
0x4f7f: push r15
0x4f81: push r14
0x4f83: mov r8,qword ptr [rsp+0x20]
0x4f88: mov rcx,rbx
0x4f8b: mov rdx,rax
0x4f8e: mov rdi,rbp
0x4f91: mov esi,0x1
0x4f96: xor eax,eax
0x4f98: call 0x1a40
0x4f9d: add rsp,0x20
0x4fa1: add rsp,0x28
0x4fa5: pop rbx
0x4fa6: pop rbp
0x4fa7: pop r12
0x4fa9: pop r13
0x4fab: pop r14
0x4fad: pop r15
0x4faf: ret 
0x4fe9: push r12
0x4feb: push r15
0x4fed: push r14
0x4fef: mov r9,qword ptr [rsp+0x28]
0x4ff4: jmp 0x4f83
0x5050: xor r9d,r9d
0x5053: cmp qword ptr [r8],0x0
0x5057: je 0x506b
0x5059: nop dword ptr [rax]
0x5060: add r9,0x1
0x5064: cmp qword ptr [r8+r9*8],0x0
0x5069: jne 0x5060
0x506b: jmp 0x4c30
0x5070: sub rsp,0x68
0x5074: mov r10,r8
0x5077: xor r9d,r9d
0x507a: mov rax,qword ptr fs:0x28
0x5083: mov qword ptr [rsp+0x58],rax
0x5088: xor eax,eax
0x508a: mov r8,rsp
0x508d: nop dword ptr [rax]
0x5090: mov eax,dword ptr [r10]
0x5093: cmp eax,0x2f
0x5096: ja 0x50da
0x5098: mov r11d,eax
0x509b: add r11,qword ptr [r10+0x10]
0x509f: add eax,0x8
0x50a2: mov dword ptr [r10],eax
0x50a5: mov rax,qword ptr [r11]
0x50a8: test rax,rax
0x50ab: mov qword ptr [r8+r9*8],rax
0x50af: je 0x50bb
0x50b1: add r9,0x1
0x50b5: cmp r9,0xa
0x50b9: jne 0x5090
0x50bb: call 0x4c30
0x50c0: mov rax,qword ptr [rsp+0x58]
0x50c5: xor rax,qword ptr fs:0x28
0x50ce: jne 0x50d5
0x50d0: add rsp,0x68
0x50d4: ret 
0x50d5: call 0x17e0
0x50da: mov r11,qword ptr [r10+0x8]
0x50de: lea rax,[r11+0x8]
0x50e2: mov qword ptr [r10+0x8],rax
0x50e6: jmp 0x50a5
0x51b0: call 0x17e0
0x51bc: mov rax,rbx
0x51bf: add rbx,0x8
0x51c3: jmp 0x5176
0x51d0: push rbx
0x51d1: lea rsi,[rip+0x18b2]
0x51d8: mov edx,0x5
0x51dd: xor edi,edi
0x51df: call 0x17a0
0x51e4: lea rdx,[rip+0x18b4]
0x51eb: mov rsi,rax
0x51ee: mov edi,0x1
0x51f3: xor eax,eax
0x51f5: call 0x1990
0x51fa: lea rsi,[rip+0x18b4]
0x5201: mov edx,0x5
0x5206: xor edi,edi
0x5208: call 0x17a0
0x520d: lea rcx,[rip+0x111c]
0x5214: lea rdx,[rip+0xe0f]
0x521b: mov rsi,rax
0x521e: mov edi,0x1
0x5223: xor eax,eax
0x5225: call 0x1990
0x522a: mov rbx,qword ptr [rip+0x203e57]
0x5231: lea rsi,[rip+0x1ab0]
0x5238: xor edi,edi
0x523a: mov edx,0x5
0x523f: call 0x17a0
0x5244: mov rsi,rbx
0x5247: mov rdi,rax
0x524a: pop rbx
0x524b: jmp 0x18a0
0x526a: nop word ptr [rax+rax]
0x5270: mov rax,rdi
0x5273: mul rsi
0x5276: mov rdi,rax
0x5279: seto al
0x527c: test rdi,rdi
0x527f: js 0x528b
0x5281: movzx eax,al
0x5284: test rax,rax
0x5287: jne 0x528b
0x5289: jmp 0x5250
0x528b: sub rsp,0x8
0x528f: call 0x54a0
0x5294: nop 
0x5296: nop word ptr cs:[rax+rax]
0x52a0: jmp 0x5250
0x52e6: nop word ptr cs:[rax+rax]
0x52f0: mov rax,rsi
0x52f3: mul rdx
0x52f6: mov rsi,rax
0x52f9: seto al
0x52fc: test rsi,rsi
0x52ff: js 0x530b
0x5301: movzx eax,al
0x5304: test rax,rax
0x5307: jne 0x530b
0x5309: jmp 0x52b0
0x530b: sub rsp,0x8
0x530f: call 0x54a0
0x5314: nop 
0x5316: nop word ptr cs:[rax+rax]
0x5384: nop dword ptr [rax]
0x53b0: test rdi,rdi
0x53b3: mov rax,qword ptr [rsi]
0x53b6: je 0x53e0
0x53b8: movabsq rdx,0x5555555555555553
0x53c2: cmp rax,rdx
0x53c5: ja 0x53f1
0x53c7: mov rdx,rax
0x53ca: shr rdx, 1
0x53cd: lea rax,[rdx+rax+0x1]
0x53d2: mov qword ptr [rsi],rax
0x53d5: mov rsi,rax
0x53d8: jmp 0x52b0
0x53e0: test rax,rax
0x53e3: mov edx,0x80
0x53e8: cmove rax,rdx
0x53ec: test rax,rax
0x53ef: jns 0x53d2
0x53f1: sub rsp,0x8
0x53f5: call 0x54a0
0x53fa: nop word ptr [rax+rax]
0x5400: push rbx
0x5401: mov rbx,rdi
0x5404: call 0x5250
0x5409: mov rdx,rbx
0x540c: xor esi,esi
0x540e: mov rdi,rax
0x5411: pop rbx
0x5412: jmp 0x1860
0x5420: mov rax,rdi
0x5423: sub rsp,0x8
0x5427: mul rsi
0x542a: seto dl
0x542d: test rax,rax
0x5430: js 0x5449
0x5432: movzx edx,dl
0x5435: test rdx,rdx
0x5438: jne 0x5449
0x543a: call 0x18b0
0x543f: test rax,rax
0x5442: je 0x5449
0x5444: add rsp,0x8
0x5448: ret 
0x5449: call 0x54a0
0x544e: nop 
0x54d0: call 0x1700
0x54d5: nop word ptr cs:[rax+rax]
0x54df: nop 
0x5507: nop word ptr [rax+rax]
0x55b4: cmp eax,0x22
0x55b7: mov ebp,0x1
0x55bc: jne 0x55e8
0x5710: movsxd rdi,edi
0x5713: mov eax,ebp
0x5715: add rcx,rdi
0x5718: or eax,0x2
0x571b: mov qword ptr [r15],rcx
0x571e: cmp byte ptr [rcx],0x0
0x5721: mov qword ptr [r14],rbx
0x5724: cmovne ebp,eax
0x5727: jmp 0x55ed
0x5785: or ebp,r9d
0x5788: jmp 0x5710
0x581c: mov rax,rbx
0x581f: mul rsi
0x5822: mov rbx,rax
0x5825: jo 0x58b4
0x582b: sub r8d,0x1
0x582f: jne 0x581c
0x5831: jmp 0x5785
0x5890: call 0x17e0
0x5895: lea rcx,[rip+0x1624]
0x589c: lea rsi,[rip+0x14fd]
0x58a3: lea rdi,[rip+0x1516]
0x58aa: mov edx,0x54
0x58af: call 0x1850
0x58b4: mov r9d,0x1
0x58ba: or rbx,-0x1
0x58be: jmp 0x582b
0x5930: push r13
0x5932: push r12
0x5934: mov r13,rsi
0x5937: push rbp
0x5938: push rbx
0x5939: mov rbx,rdi
0x593c: mov r12,rdx
0x593f: sub rsp,0x18
0x5943: mov rax,qword ptr fs:0x28
0x594c: mov qword ptr [rsp+0x8],rax
0x5951: xor eax,eax
0x5953: lea rax,[rsp+0x4]
0x5958: test rdi,rdi
0x595b: cmove rbx,rax
0x595f: mov rdi,rbx
0x5962: call 0x1800
0x5967: cmp rax,-0x3
0x596b: mov rbp,rax
0x596e: jbe 0x5990
0x5970: test r12,r12
0x5973: je 0x5990
0x5975: xor edi,edi
0x5977: call 0x5a40
0x597c: test al,al
0x597e: jne 0x5990
0x5980: movzx eax,byte ptr [r13]
0x5985: mov ebp,0x1
0x598a: mov dword ptr [rbx],eax
0x598c: nop dword ptr [rax]
0x5990: mov rdx,qword ptr [rsp+0x8]
0x5995: xor rdx,qword ptr fs:0x28
0x599e: mov rax,rbp
0x59a1: jne 0x59ae
0x59a3: add rsp,0x18
0x59a7: pop rbx
0x59a8: pop rbp
0x59a9: pop r12
0x59ab: pop r13
0x59ad: ret 
0x59ae: call 0x17e0
0x59b3: nop word ptr cs:[rax+rax]
0x59bd: nop dword ptr [rax]
0x59c0: push r12
0x59c2: push rbp
0x59c3: mov rbp,rdi
0x59c6: push rbx
0x59c7: call 0x1750
0x59cc: mov ebx,dword ptr [rbp]
0x59cf: mov rdi,rbp
0x59d2: mov r12,rax
0x59d5: call 0x5dc0
0x59da: and ebx,0x20
0x59dd: test ebx,ebx
0x59df: jne 0x59f8
0x59e1: test eax,eax
0x59e3: je 0x59ef
0x59e5: test r12,r12
0x59e8: mov eax,0xffffffff
0x59ed: je 0x5a28
0x59ef: pop rbx
0x59f0: pop rbp
0x59f1: pop r12
0x59f3: ret 
0x59f8: test eax,eax
0x59fa: jne 0x5a18
0x59fc: call 0x1710
0x5a01: mov dword ptr [rax],0x0
0x5a07: mov eax,0xffffffff
0x5a0c: pop rbx
0x5a0d: pop rbp
0x5a0e: pop r12
0x5a10: ret 
0x5a18: pop rbx
0x5a19: mov eax,0xffffffff
0x5a1e: pop rbp
0x5a1f: pop r12
0x5a21: ret 
0x5a28: call 0x1710
0x5a2d: cmp dword ptr [rax],0x9
0x5a30: pop rbx
0x5a31: pop rbp
0x5a32: pop r12
0x5a34: setne al
0x5a37: movzx eax,al
0x5a3a: neg eax
0x5a3c: ret 
0x5a40: sub rsp,0x8
0x5a44: xor esi,esi
0x5a46: call 0x1980
0x5a4b: mov rdx,rax
0x5a4e: mov eax,0x1
0x5a53: test rdx,rdx
0x5a56: je 0x5a75
0x5a58: lea rdi,[rip+0x146a]
0x5a5f: mov ecx,0x2
0x5a64: mov rsi,rdx
0x5a67: rep cmpsb [rsi],es:[rdi]
0x5a69: seta cl
0x5a6c: sbb cl,0x0
0x5a6f: xor eax,eax
0x5a71: test cl,cl
0x5a73: jne 0x5a80
0x5a75: add rsp,0x8
0x5a79: ret 
0x5a80: lea rdi,[rip+0x1444]
0x5a87: mov ecx,0x6
0x5a8c: mov rsi,rdx
0x5a8f: rep cmpsb [rsi],es:[rdi]
0x5a91: seta al
0x5a94: sbb al,0x0
0x5a96: test al,al
0x5a98: setne al
0x5a9b: add rsp,0x8
0x5a9f: ret 
0x5af0: sub rsp,0x8
0x5af4: mov edi,0xe
0x5af9: call 0x1940
0x5afe: test rax,rax
0x5b01: je 0x5b20
0x5b03: cmp byte ptr [rax],0x0
0x5b06: lea rdx,[rip+0x13c4]
0x5b0d: cmove rax,rdx
0x5b11: add rsp,0x8
0x5b15: ret 
0x5b20: lea rax,[rip+0x13aa]
0x5b27: add rsp,0x8
0x5b2b: ret 
0x5db7: call 0x17e0
0x5dbc: nop dword ptr [rax]
0x5dc0: push r12
0x5dc2: push rbp
0x5dc3: push rbx
0x5dc4: mov rbx,rdi
0x5dc7: call 0x1900
0x5dcc: test eax,eax
0x5dce: mov rdi,rbx
0x5dd1: js 0x5e27
0x5dd3: call 0x1960
0x5dd8: test eax,eax
0x5dda: jne 0x5e08
0x5ddc: mov rdi,rbx
0x5ddf: call 0x5e40
0x5de4: test eax,eax
0x5de6: je 0x5e24
0x5de8: call 0x1710
0x5ded: mov r12d,dword ptr [rax]
0x5df0: mov rdi,rbx
0x5df3: mov rbp,rax
0x5df6: call 0x1770
0x5dfb: test r12d,r12d
0x5dfe: jne 0x5e30
0x5e00: pop rbx
0x5e01: pop rbp
0x5e02: pop r12
0x5e04: ret 
0x5e08: mov rdi,rbx
0x5e0b: call 0x1900
0x5e10: xor esi,esi
0x5e12: mov edx,0x1
0x5e17: mov edi,eax
0x5e19: call 0x1840
0x5e1e: cmp rax,-0x1
0x5e22: jne 0x5ddc
0x5e24: mov rdi,rbx
0x5e27: pop rbx
0x5e28: pop rbp
0x5e29: pop r12
0x5e2b: jmp 0x1770
0x5e30: mov dword ptr [rbp],r12d
0x5e34: mov eax,0xffffffff
0x5e39: jmp 0x5e00
0x5e40: test rdi,rdi
0x5e43: push rbx
0x5e44: mov rbx,rdi
0x5e47: je 0x5e5a
0x5e49: call 0x1960
0x5e4e: test eax,eax
0x5e50: je 0x5e5a
0x5e52: test dword ptr [rbx],0x100
0x5e58: jne 0x5e68
0x5e5a: mov rdi,rbx
0x5e5d: pop rbx
0x5e5e: jmp 0x1930
0x5e68: mov rdi,rbx
0x5e6b: mov edx,0x1
0x5e70: xor esi,esi
0x5e72: call 0x5e80
0x5e77: mov rdi,rbx
0x5e7a: pop rbx
0x5e7b: jmp 0x1930
0x5e80: mov rax,qword ptr [rdi+0x8]
0x5e84: cmp qword ptr [rdi+0x10],rax
0x5e88: je 0x5e90
0x5e8a: jmp 0x19d0
0x5e90: mov rax,qword ptr [rdi+0x20]
0x5e94: cmp qword ptr [rdi+0x28],rax
0x5e98: jne 0x5e8a
0x5e9a: cmp qword ptr [rdi+0x48],0x0
0x5e9f: jne 0x5e8a
0x5ea1: push r12
0x5ea3: push rbp
0x5ea4: mov r12d,edx
0x5ea7: push rbx
0x5ea8: mov rbp,rsi
0x5eab: mov rbx,rdi
0x5eae: call 0x1900
0x5eb3: mov edx,r12d
0x5eb6: mov rsi,rbp
0x5eb9: mov edi,eax
0x5ebb: call 0x1840
0x5ec0: cmp rax,-0x1
0x5ec4: je 0x5ed2
0x5ec6: and dword ptr [rbx],-0x11
0x5ec9: mov qword ptr [rbx+0x90],rax
0x5ed0: xor eax,eax
0x5ed2: pop rbx
0x5ed3: pop rbp
0x5ed4: pop r12
0x5ed6: ret 
0x5ee0: push r15
0x5ee2: push r14
0x5ee4: mov r15,rdx
0x5ee7: push r13
0x5ee9: push r12
0x5eeb: lea r12,[rip+0x202bbe]
0x5ef2: push rbp
0x5ef3: lea rbp,[rip+0x202bbe]
0x5efa: push rbx
0x5efb: mov r13d,edi
0x5efe: mov r14,rsi
0x5f01: sub rbp,r12
0x5f04: sub rsp,0x8
0x5f08: sar rbp,0x3
0x5f0c: call 0x16a8
0x5f11: test rbp,rbp
0x5f14: je 0x5f36
0x5f16: xor ebx,ebx
0x5f18: nop dword ptr [rax+rax]
0x5f20: mov rdx,r15
0x5f23: mov rsi,r14
0x5f26: mov edi,r13d
0x5f29: call qword ptr [r12+rbx*8]
0x5f2d: add rbx,0x1
0x5f31: cmp rbp,rbx
0x5f34: jne 0x5f20
0x5f36: add rsp,0x8
0x5f3a: pop rbx
0x5f3b: pop rbp
0x5f3c: pop r12
0x5f3e: pop r13
0x5f40: pop r14
0x5f42: pop r15
0x5f44: ret 
0x5f50: rep ret 
