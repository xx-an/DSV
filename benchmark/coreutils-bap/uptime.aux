0x17f8: sub rsp,0x8
0x17fc: mov rax,qword ptr [rip+0x2087e5]
0x1803: test rax,rax
0x1806: je 0x180a
0x1808: call rax
0x180a: add rsp,0x8
0x180e: ret 
0x1816: jmp qword ptr [rip+0x20859c]
0x1840: jmp qword ptr [rip+0x20858a]
0x1890: jmp qword ptr [rip+0x208562]
0x18b0: jmp qword ptr [rip+0x208552]
0x18c0: jmp qword ptr [rip+0x20854a]
0x18d0: jmp qword ptr [rip+0x208542]
0x18e0: jmp qword ptr [rip+0x20853a]
0x1970: jmp qword ptr [rip+0x2084f2]
0x1980: jmp qword ptr [rip+0x2084ea]
0x19a0: jmp qword ptr [rip+0x2084da]
0x19e0: jmp qword ptr [rip+0x2084ba]
0x1a20: jmp qword ptr [rip+0x20849a]
0x1a40: jmp qword ptr [rip+0x20848a]
0x1a50: jmp qword ptr [rip+0x208482]
0x1a70: jmp qword ptr [rip+0x208472]
0x1a80: jmp qword ptr [rip+0x20846a]
0x1ad0: jmp qword ptr [rip+0x208442]
0x1af0: jmp qword ptr [rip+0x208432]
0x1b00: jmp qword ptr [rip+0x20842a]
0x1b50: jmp qword ptr [rip+0x208402]
0x1b60: jmp qword ptr [rip+0x2083fa]
0x1bc0: jmp qword ptr [rip+0x2083ca]
0x1c10: jmp qword ptr [rip+0x2083a2]
0x1c20: jmp qword ptr [rip+0x20839a]
0x1c30: jmp qword ptr [rip+0x208392]
0x1c40: jmp qword ptr [rip+0x20838a]
0x1c50: jmp qword ptr [rip+0x2083a2]
0x1d42: lea rsi,[rip+0x5d5d]
0x1d49: mov rbx,rax
0x1d4c: mov edx,0x5
0x1d51: xor edi,edi
0x1d53: call 0x1950
0x1d58: xor edi,edi
0x1d5a: mov rdx,rax
0x1d5d: mov rcx,rbx
0x1d60: xor esi,esi
0x1d62: xor eax,eax
0x1d64: call 0x1b80
0x1d69: mov edi,0x1
0x1d6e: call 0x2360
0x1d73: nop word ptr cs:[rax+rax]
0x1d7d: nop dword ptr [rax]
0x1daa: hlt 
0x1dab: nop dword ptr [rax+rax]
0x1db0: lea rdi,[rip+0x2082c9]
0x1db7: push rbp
0x1db8: lea rax,[rip+0x2082c1]
0x1dbf: cmp rax,rdi
0x1dc2: mov rbp,rsp
0x1dc5: je 0x1de0
0x1dc7: mov rax,qword ptr [rip+0x20820a]
0x1dce: test rax,rax
0x1dd1: je 0x1de0
0x1dd3: pop rbp
0x1dd4: jmp rax
0x1de0: pop rbp
0x1de1: ret 
0x1df0: lea rdi,[rip+0x208289]
0x1df7: lea rsi,[rip+0x208282]
0x1dfe: push rbp
0x1dff: sub rsi,rdi
0x1e02: mov rbp,rsp
0x1e05: sar rsi,0x3
0x1e09: mov rax,rsi
0x1e0c: shr rax,0x3f
0x1e10: add rsi,rax
0x1e13: sar rsi, 1
0x1e16: je 0x1e30
0x1e18: mov rax,qword ptr [rip+0x2081d1]
0x1e1f: test rax,rax
0x1e22: je 0x1e30
0x1e24: pop rbp
0x1e25: jmp rax
0x1e30: pop rbp
0x1e31: ret 
0x1e51: push rbp
0x1e52: mov rbp,rsp
0x1e55: je 0x1e63
0x1e57: mov rdi,qword ptr [rip+0x2081aa]
0x1e5e: call 0x1c50
0x1e63: call 0x1db0
0x1e68: mov byte ptr [rip+0x208259],0x1
0x1e6f: pop rbp
0x1e70: ret 
0x1e80: push rbp
0x1e81: mov rbp,rsp
0x1e84: pop rbp
0x1e85: jmp 0x1df0
0x22ad: jmp 0x20c1
0x22bd: call 0x1980
0x22c2: nop dword ptr [rax]
0x22c6: nop word ptr cs:[rax+rax]
0x232b: mov rdx,rbx
0x232e: mov esi,0x3
0x2333: xor edi,edi
0x2335: call 0x6330
0x233a: mov rbx,rax
0x233d: call 0x1880
0x2342: mov esi,dword ptr [rax]
0x2344: lea rdx,[rip+0x5a24]
0x234b: mov rcx,rbx
0x234e: mov edi,0x1
0x2353: xor eax,eax
0x2355: call 0x1b80
0x235a: call 0x1980
0x235f: nop 
0x2770: mov qword ptr [rip+0x207969],rdi
0x2777: ret 
0x2780: mov byte ptr [rip+0x207951],dil
0x2787: ret 
0x2790: push rbp
0x2791: push rbx
0x2792: sub rsp,0x8
0x2796: mov rdi,qword ptr [rip+0x2078eb]
0x279d: call 0x76f0
0x27a2: test eax,eax
0x27a4: je 0x27bc
0x27a6: call 0x1880
0x27ab: cmp byte ptr [rip+0x207926],0x0
0x27b2: mov rbx,rax
0x27b5: je 0x27d3
0x27b7: cmp dword ptr [rax],0x20
0x27ba: jne 0x27d3
0x27bc: mov rdi,qword ptr [rip+0x2078fd]
0x27c3: call 0x76f0
0x27c8: test eax,eax
0x27ca: jne 0x2812
0x27cc: add rsp,0x8
0x27d0: pop rbx
0x27d1: pop rbp
0x27d2: ret 
0x27d3: lea rsi,[rip+0x5585]
0x27da: xor edi,edi
0x27dc: mov edx,0x5
0x27e1: call 0x1950
0x27e6: mov rdi,qword ptr [rip+0x2078f3]
0x27ed: mov rbp,rax
0x27f0: test rdi,rdi
0x27f3: je 0x281d
0x27f5: call 0x6300
0x27fa: mov esi,dword ptr [rbx]
0x27fc: lea rdx,[rip+0x5568]
0x2803: mov rcx,rax
0x2806: mov r8,rbp
0x2809: xor edi,edi
0x280b: xor eax,eax
0x280d: call 0x1b80
0x2812: mov edi,dword ptr [rip+0x207800]
0x2818: call 0x18c0
0x281d: mov esi,dword ptr [rbx]
0x281f: lea rdx,[rip+0x5549]
0x2826: mov rcx,rax
0x2829: xor edi,edi
0x282b: xor eax,eax
0x282d: call 0x1b80
0x2832: jmp 0x2812
0x2840: test rdx,rdx
0x2843: je 0x2890
0x2845: push r13
0x2847: push r12
0x2849: mov r12,rdi
0x284c: push rbp
0x284d: push rbx
0x284e: mov rbp,rdx
0x2851: mov rbx,rsi
0x2854: sub rsp,0x8
0x2858: add rbp,rbx
0x285b: call 0x1c30
0x2860: mov r13,rax
0x2863: nop dword ptr [rax+rax]
0x2868: movzx ecx,byte ptr [rbx]
0x286b: mov rax,qword ptr [r13]
0x286f: mov rsi,r12
0x2872: add rbx,0x1
0x2876: mov edi,dword ptr [rax+rcx*4]
0x2879: call 0x1a10
0x287e: cmp rbx,rbp
0x2881: jne 0x2868
0x2883: add rsp,0x8
0x2887: pop rbx
0x2888: pop rbp
0x2889: pop r12
0x288b: pop r13
0x288d: ret 
0x2890: rep ret 
0x2cd2: mov byte ptr [rax],r13b
0x2cd5: mov byte ptr [rax+0x1],0x0
0x2cd9: lea rax,[rsp+0xa0]
0x2ce1: mov rcx,qword ptr [rsp]
0x2ce5: mov esi,0x400
0x2cea: mov dword ptr [rsp+0x40],r10d
0x2cef: mov rdi,rax
0x2cf2: mov dword ptr [rsp+0x58],r11d
0x2cf7: mov qword ptr [rsp+0x38],rax
0x2cfc: call 0x1b60
0x2d01: test rax,rax
0x2d04: je 0x2a10
0x2d0a: movsxd r10,dword ptr [rsp+0x40]
0x2d0f: lea r13,[rax-0x1]
0x2d13: mov eax,0x0
0x2d18: mov rdx,r15
0x2d1b: not rdx
0x2d1e: test r10d,r10d
0x2d21: cmovns rax,r10
0x2d25: cmp r13,rax
0x2d28: mov rdi,rax
0x2d2b: cmovae rdi,r13
0x2d2f: cmp rdx,rdi
0x2d32: mov qword ptr [rsp+0x40],rdi
0x2d37: jbe 0x29bf
0x2d3d: test r12,r12
0x2d40: je 0x2dc3
0x2d46: mov r11d,dword ptr [rsp+0x58]
0x2d4b: test r11d,r11d
0x2d4e: jne 0x2d9b
0x2d50: cmp r13,rax
0x2d53: jae 0x2d9b
0x2d55: mov eax,dword ptr [rsp+0x8]
0x2d59: movsxd rbx,r10d
0x2d5c: sub rbx,r13
0x2d5f: cmp eax,0x30
0x2d62: je 0x3d70
0x2d68: cmp eax,0x2b
0x2d6b: je 0x3d70
0x2d71: xor edx,edx
0x2d73: test rbx,rbx
0x2d76: je 0x2d9b
0x2d78: mov qword ptr [rsp+0x8],rbp
0x2d7d: mov rbp,rdx
0x2d80: mov rsi,r12
0x2d83: mov edi,0x20
0x2d88: add rbp,0x1
0x2d8c: call 0x1a10
0x2d91: cmp rbx,rbp
0x2d94: jne 0x2d80
0x2d96: mov rbp,qword ptr [rsp+0x8]
0x2d9b: test r14b,r14b
0x2d9e: jne 0x3d30
0x2da4: cmp byte ptr [rsp+0x34],0x0
0x2da9: je 0x3d08
0x2daf: mov rsi,qword ptr [rsp+0x38]
0x2db4: mov rdx,r13
0x2db7: mov rdi,r12
0x2dba: add rsi,0x1
0x2dbe: call 0x28a0
0x2dc3: add r15,qword ptr [rsp+0x40]
0x2dc8: jmp 0x2a10
0x2ee5: cmp r11d,0x4f
0x2ee9: jne 0x3c00
0x2eef: test al,al
0x2ef1: je 0x3c00
0x2ef7: mov r13d,edi
0x2efa: mov edx,0x2520
0x2eff: xor r14d,r14d
0x2f02: mov word ptr [rsp+0x9b],dx
0x2f0a: lea rdx,[rsp+0x9b]
0x2f12: mov byte ptr [rsp+0x9d],r11b
0x2f1a: mov rbp,rbx
0x2f1d: mov r11d,esi
0x2f20: lea rax,[rdx+0x3]
0x2f24: jmp 0x2cd2
0x2fdf: add r15,r13
0x2fe2: mov rbp,rbx
0x2fe5: jmp 0x2a10
0x30d9: mov rax,qword ptr [rsp+0x38]
0x30de: mov rdx,r15
0x30e1: not rdx
0x30e4: add rax,0x17
0x30e8: sub rax,r14
0x30eb: cmp dword ptr [rsp+0x8],0x2d
0x30f0: mov qword ptr [rsp+0x40],rax
0x30f5: je 0x310a
0x30f7: mov r13d,dword ptr [rsp+0x58]
0x30fc: sub r13d,dword ptr [rsp+0x40]
0x3101: test r13d,r13d
0x3104: jg 0x423e
0x310a: test r10d,r10d
0x310d: mov ecx,0x0
0x3112: mov rbp,rbx
0x3115: cmovns ecx,r10d
0x3119: movsxd r13,ecx
0x311c: mov rax,qword ptr [rsp+0x40]
0x3121: cmp rax,r13
0x3124: mov rbx,rax
0x3127: cmovb rbx,r13
0x312b: cmp rbx,rdx
0x312e: jae 0x29bf
0x3134: test r12,r12
0x3137: je 0x31ae
0x3139: mov edx,dword ptr [rsp+0x58]
0x313d: test edx,edx
0x313f: jne 0x3193
0x3141: cmp rax,r13
0x3144: jae 0x3193
0x3146: movsxd r13,r10d
0x3149: sub r13,rax
0x314c: mov eax,dword ptr [rsp+0x8]
0x3150: cmp eax,0x30
0x3153: je 0x3e70
0x3159: cmp eax,0x2b
0x315c: je 0x3e70
0x3162: xor edx,edx
0x3164: test r13,r13
0x3167: je 0x3193
0x3169: mov qword ptr [rsp+0x8],rbx
0x316e: mov rbx,rdx
0x3171: nop dword ptr [rax]
0x3178: mov rsi,r12
0x317b: mov edi,0x20
0x3180: add rbx,0x1
0x3184: call 0x1a10
0x3189: cmp r13,rbx
0x318c: jne 0x3178
0x318e: mov rbx,qword ptr [rsp+0x8]
0x3193: cmp byte ptr [rsp+0x34],0x0
0x3198: je 0x3d50
0x319e: mov rdx,qword ptr [rsp+0x40]
0x31a3: mov rsi,r14
0x31a6: mov rdi,r12
0x31a9: call 0x28a0
0x31ae: add r15,rbx
0x31b1: jmp 0x2a10
0x31e8: lea rax,[rsp+0xa0]
0x31f0: lea rdi,[rsp+0xb7]
0x31f8: mov r11d,0xcccccccd
0x31fe: mov qword ptr [rsp+0x38],rax
0x3203: nop dword ptr [rax+rax]
0x3208: test r8b,0x1
0x320c: lea r14,[rdi-0x1]
0x3210: je 0x3220
0x3212: lea rax,[rdi-0x2]
0x3216: mov byte ptr [rdi-0x1],0x3a
0x321a: mov rdi,r14
0x321d: mov r14,rax
0x3220: mov eax,ecx
0x3222: sar r8d, 1
0x3225: mul r11d
0x3228: shr edx,0x3
0x322b: lea eax,[rdx+rdx*4]
0x322e: add eax,eax
0x3230: sub ecx,eax
0x3232: mov eax,r8d
0x3235: add ecx,0x30
0x3238: or eax,edx
0x323a: mov byte ptr [rdi-0x1],cl
0x323d: mov ecx,edx
0x323f: mov rdi,r14
0x3242: jne 0x3208
0x3244: cmp r10d,esi
0x3247: cmovge esi,r10d
0x324b: test r13b,r13b
0x324e: mov dword ptr [rsp+0x58],esi
0x3252: jne 0x3c10
0x3258: test r9b,r9b
0x325b: je 0x30d9
0x3261: cmp dword ptr [rsp+0x8],0x2d
0x3266: mov ebp,0x2b
0x326b: je 0x401d
0x3271: mov rax,qword ptr [rsp+0x38]
0x3276: mov rdx,r15
0x3279: not rdx
0x327c: add rax,0x17
0x3280: sub rax,r14
0x3283: mov rdi,rax
0x3286: mov qword ptr [rsp+0x40],rax
0x328b: mov eax,dword ptr [rsp+0x58]
0x328f: sub eax,0x1
0x3292: sub eax,edi
0x3294: test eax,eax
0x3296: mov r13d,eax
0x3299: jle 0x3f60
0x329f: cmp dword ptr [rsp+0x8],0x5f
0x32a4: je 0x3ebc
0x32aa: movsxd rax,dword ptr [rsp+0x58]
0x32af: cmp rax,rdx
0x32b2: mov rdi,rax
0x32b5: jae 0x29bf
0x32bb: test r10d,r10d
0x32be: mov eax,0x0
0x32c3: mov ecx,0x1
0x32c8: cmovns eax,r10d
0x32cc: cltq 
0x32ce: test rax,rax
0x32d1: cmovne rcx,rax
0x32d5: cmp rcx,rdx
0x32d8: mov qword ptr [rsp+0x48],rcx
0x32dd: jae 0x29bf
0x32e3: test r12,r12
0x32e6: je 0x334c
0x32e8: test edi,edi
0x32ea: jne 0x3340
0x32ec: cmp rax,0x1
0x32f0: jbe 0x3340
0x32f2: mov edi,dword ptr [rsp+0x8]
0x32f6: movsxd r10,r10d
0x32f9: lea rax,[r10-0x1]
0x32fd: cmp edi,0x30
0x3300: mov qword ptr [rsp+0x38],rax
0x3305: je 0x4410
0x330b: cmp edi,0x2b
0x330e: je 0x4410
0x3314: xor edx,edx
0x3316: test rax,rax
0x3319: je 0x3340
0x331b: mov qword ptr [rsp+0x50],rbx
0x3320: mov rbx,rdx
0x3323: mov rsi,r12
0x3326: mov edi,0x20
0x332b: add rbx,0x1
0x332f: call 0x1a10
0x3334: cmp qword ptr [rsp+0x38],rbx
0x3339: jne 0x3323
0x333b: mov rbx,qword ptr [rsp+0x50]
0x3340: movsx edi,bpl
0x3344: mov rsi,r12
0x3347: call 0x1a10
0x334c: add r15,qword ptr [rsp+0x48]
0x3351: mov rbp,rbx
0x3354: movsxd rbx,r13d
0x3357: xor r13d,r13d
0x335a: test r12,r12
0x335d: je 0x3376
0x335f: nop 
0x3360: mov rsi,r12
0x3363: mov edi,0x30
0x3368: add r13,0x1
0x336c: call 0x1a10
0x3371: cmp r13,rbx
0x3374: jne 0x3360
0x3376: add r15,rbx
0x3379: xor r13d,r13d
0x337c: xor r10d,r10d
0x337f: mov rdx,r15
0x3382: not rdx
0x3385: jmp 0x311c
0x3531: mov eax,0x1
0x3536: xor r13d,r13d
0x3539: cmp dword ptr [rsp+0x8],0x2b
0x353e: je 0x44dd
0x3544: xor r9d,r9d
0x3547: mov esi,0x2
0x354c: xor r8d,r8d
0x354f: jmp 0x2ee5
0x3c00: mov eax,ecx
0x3c02: neg eax
0x3c04: test r13b,r13b
0x3c07: cmovne ecx,eax
0x3c0a: jmp 0x31e8
0x3c10: cmp dword ptr [rsp+0x8],0x2d
0x3c15: mov ebp,0x2d
0x3c1a: jne 0x3271
0x3c20: mov byte ptr [rsp+0x40],0x2d
0x3c25: test r10d,r10d
0x3c28: mov ecx,0x0
0x3c2d: mov eax,0x1
0x3c32: cmovns ecx,r10d
0x3c36: movsxd r13,ecx
0x3c39: test r13,r13
0x3c3c: cmovne rax,r13
0x3c40: mov rdi,rax
0x3c43: mov qword ptr [rsp+0x8],rax
0x3c48: mov rax,r15
0x3c4b: not rax
0x3c4e: cmp rax,rdi
0x3c51: jbe 0x29bf
0x3c57: test r12,r12
0x3c5a: je 0x3cb9
0x3c5c: mov edi,dword ptr [rsp+0x58]
0x3c60: test edi,edi
0x3c62: jne 0x3ca2
0x3c64: cmp r13,0x1
0x3c68: jbe 0x3ca2
0x3c6a: movsxd rax,r10d
0x3c6d: sub rax,0x1
0x3c71: je 0x3ca2
0x3c73: mov qword ptr [rsp+0x48],rbx
0x3c78: xor ebp,ebp
0x3c7a: mov rbx,rax
0x3c7d: mov dword ptr [rsp+0x50],r10d
0x3c82: mov rsi,r12
0x3c85: mov edi,0x20
0x3c8a: add rbp,0x1
0x3c8e: call 0x1a10
0x3c93: cmp rbx,rbp
0x3c96: jne 0x3c82
0x3c98: mov rbx,qword ptr [rsp+0x48]
0x3c9d: mov r10d,dword ptr [rsp+0x50]
0x3ca2: movsx edi,byte ptr [rsp+0x40]
0x3ca7: mov rsi,r12
0x3caa: mov dword ptr [rsp+0x48],r10d
0x3caf: call 0x1a10
0x3cb4: mov r10d,dword ptr [rsp+0x48]
0x3cb9: add r15,qword ptr [rsp+0x8]
0x3cbe: mov rax,qword ptr [rsp+0x38]
0x3cc3: mov rbp,rbx
0x3cc6: mov dword ptr [rsp+0x8],0x2d
0x3cce: add rax,0x17
0x3cd2: sub rax,r14
0x3cd5: mov rdx,r15
0x3cd8: mov qword ptr [rsp+0x40],rax
0x3cdd: not rdx
0x3ce0: jmp 0x311c
0x3d08: mov rdi,qword ptr [rsp+0x38]
0x3d0d: mov rcx,r12
0x3d10: mov edx,0x1
0x3d15: mov rsi,r13
0x3d18: add rdi,0x1
0x3d1c: call 0x1bf0
0x3d21: jmp 0x2dc3
0x3d30: mov rsi,qword ptr [rsp+0x38]
0x3d35: mov rdx,r13
0x3d38: mov rdi,r12
0x3d3b: add rsi,0x1
0x3d3f: call 0x2840
0x3d44: jmp 0x2dc3
0x3d50: mov rsi,qword ptr [rsp+0x40]
0x3d55: mov rcx,r12
0x3d58: mov edx,0x1
0x3d5d: mov rdi,r14
0x3d60: call 0x1bf0
0x3d65: jmp 0x31ae
0x3d70: test rbx,rbx
0x3d73: je 0x2d9b
0x3d79: xor edx,edx
0x3d7b: mov qword ptr [rsp+0x8],rbp
0x3d80: mov rbp,rdx
0x3d83: nop dword ptr [rax+rax]
0x3d88: mov rsi,r12
0x3d8b: mov edi,0x30
0x3d90: add rbp,0x1
0x3d94: call 0x1a10
0x3d99: cmp rbx,rbp
0x3d9c: jne 0x3d88
0x3d9e: jmp 0x2d96
0x3e37: sub rsp,0x8
0x3e3b: mov r9d,r14d
0x3e3e: mov ecx,ebp
0x3e40: mov eax,dword ptr [rsp+0x508]
0x3e47: mov rdi,r12
0x3e4a: push rax
0x3e4b: push qword ptr [rsp+0x20]
0x3e4f: push qword ptr [rsp+0x30]
0x3e53: mov r8d,dword ptr [rsp+0x28]
0x3e58: mov rdx,qword ptr [rsp+0x20]
0x3e5d: mov rsi,qword ptr [rsp+0x58]
0x3e62: call 0x2900
0x3e67: add rsp,0x20
0x3e6b: jmp 0x2fdf
0x3e70: test r13,r13
0x3e73: je 0x3193
0x3e79: xor edx,edx
0x3e7b: mov qword ptr [rsp+0x8],rbx
0x3e80: mov rbx,rdx
0x3e83: nop dword ptr [rax+rax]
0x3e88: mov rsi,r12
0x3e8b: mov edi,0x30
0x3e90: add rbx,0x1
0x3e94: call 0x1a10
0x3e99: cmp r13,rbx
0x3e9c: jne 0x3e88
0x3e9e: jmp 0x318e
0x3eba: xor ebp,ebp
0x3ebc: movsxd rax,r13d
0x3ebf: cmp rax,rdx
0x3ec2: mov qword ptr [rsp+0x8],rax
0x3ec7: jae 0x29bf
0x3ecd: test r12,r12
0x3ed0: je 0x3f15
0x3ed2: xor edx,edx
0x3ed4: mov byte ptr [rsp+0x40],bpl
0x3ed9: mov qword ptr [rsp+0x48],rbx
0x3ede: mov rbp,rdx
0x3ee1: mov rbx,rax
0x3ee4: mov dword ptr [rsp+0x50],r10d
0x3ee9: nop dword ptr [rax]
0x3ef0: mov rsi,r12
0x3ef3: mov edi,0x20
0x3ef8: add rbp,0x1
0x3efc: call 0x1a10
0x3f01: cmp rbx,rbp
0x3f04: ja 0x3ef0
0x3f06: movzx ebp,byte ptr [rsp+0x40]
0x3f0b: mov rbx,qword ptr [rsp+0x48]
0x3f10: mov r10d,dword ptr [rsp+0x50]
0x3f15: add r15,qword ptr [rsp+0x8]
0x3f1a: mov eax,r10d
0x3f1d: sub eax,r13d
0x3f20: cmp r10d,r13d
0x3f23: mov r10d,0x0
0x3f29: cmovg r10d,eax
0x3f2d: test bpl,bpl
0x3f30: mov rdx,r15
0x3f33: not rdx
0x3f36: jne 0x4063
0x3f3c: mov rax,qword ptr [rsp+0x38]
0x3f41: movsxd r13,r10d
0x3f44: mov rbp,rbx
0x3f47: mov dword ptr [rsp+0x8],0x5f
0x3f4f: add rax,0x17
0x3f53: sub rax,r14
0x3f56: mov qword ptr [rsp+0x40],rax
0x3f5b: jmp 0x311c
0x3f60: test r10d,r10d
0x3f63: mov ecx,0x0
0x3f68: mov eax,0x1
0x3f6d: cmovns ecx,r10d
0x3f71: movsxd r13,ecx
0x3f74: test r13,r13
0x3f77: cmovne rax,r13
0x3f7b: cmp rax,rdx
0x3f7e: mov qword ptr [rsp+0x48],rax
0x3f83: jae 0x29bf
0x3f89: test r12,r12
0x3f8c: je 0x400a
0x3f8e: mov ecx,dword ptr [rsp+0x58]
0x3f92: test ecx,ecx
0x3f94: jne 0x3ff4
0x3f96: cmp r13,0x1
0x3f9a: jbe 0x3ff4
0x3f9c: mov edi,dword ptr [rsp+0x8]
0x3fa0: movsxd rax,r10d
0x3fa3: sub rax,0x1
0x3fa7: mov qword ptr [rsp+0x38],rax
0x3fac: cmp edi,0x30
0x3faf: je 0x4476
0x3fb5: cmp edi,0x2b
0x3fb8: je 0x4476
0x3fbe: xor edx,edx
0x3fc0: test rax,rax
0x3fc3: je 0x3ff4
0x3fc5: mov qword ptr [rsp+0x50],rbx
0x3fca: mov dword ptr [rsp+0x5c],r10d
0x3fcf: mov rbx,rdx
0x3fd2: mov rsi,r12
0x3fd5: mov edi,0x20
0x3fda: add rbx,0x1
0x3fde: call 0x1a10
0x3fe3: cmp qword ptr [rsp+0x38],rbx
0x3fe8: jne 0x3fd2
0x3fea: mov rbx,qword ptr [rsp+0x50]
0x3fef: mov r10d,dword ptr [rsp+0x5c]
0x3ff4: movsx edi,bpl
0x3ff8: mov rsi,r12
0x3ffb: mov dword ptr [rsp+0x38],r10d
0x4000: call 0x1a10
0x4005: mov r10d,dword ptr [rsp+0x38]
0x400a: add r15,qword ptr [rsp+0x48]
0x400f: mov rbp,rbx
0x4012: mov rdx,r15
0x4015: not rdx
0x4018: jmp 0x311c
0x401d: mov byte ptr [rsp+0x40],0x2b
0x4022: jmp 0x3c25
0x4031: cmp edx,ecx
0x4033: mov r9d,0x1
0x4039: mov dword ptr [rsp+0x8],0x2b
0x4041: jb 0x354c
0x4047: cmp r10d,esi
0x404a: mov dword ptr [rsp+0x8],0x2b
0x4052: setg r9b
0x4056: jmp 0x354c
0x4063: movsxd rcx,r10d
0x4066: mov r13d,0x1
0x406c: test rcx,rcx
0x406f: cmovne r13,rcx
0x4073: cmp r13,rdx
0x4076: mov qword ptr [rsp+0x8],r13
0x407b: jae 0x29bf
0x4081: test r12,r12
0x4084: je 0x40f5
0x4086: mov esi,dword ptr [rsp+0x58]
0x408a: test esi,esi
0x408c: jne 0x40d5
0x408e: cmp r10d,0x1
0x4092: jbe 0x40d5
0x4094: lea rax,[rcx-0x1]
0x4098: xor r13d,r13d
0x409b: mov qword ptr [rsp+0x48],rbx
0x40a0: mov dword ptr [rsp+0x50],r10d
0x40a5: mov rbx,r13
0x40a8: mov r13,rcx
0x40ab: mov qword ptr [rsp+0x40],rax
0x40b0: mov rsi,r12
0x40b3: mov edi,0x20
0x40b8: add rbx,0x1
0x40bc: call 0x1a10
0x40c1: cmp qword ptr [rsp+0x40],rbx
0x40c6: jne 0x40b0
0x40c8: mov rbx,qword ptr [rsp+0x48]
0x40cd: mov r10d,dword ptr [rsp+0x50]
0x40d2: mov rcx,r13
0x40d5: movsx edi,bpl
0x40d9: mov rsi,r12
0x40dc: mov dword ptr [rsp+0x48],r10d
0x40e1: mov qword ptr [rsp+0x40],rcx
0x40e6: call 0x1a10
0x40eb: mov r10d,dword ptr [rsp+0x48]
0x40f0: mov rcx,qword ptr [rsp+0x40]
0x40f5: add r15,qword ptr [rsp+0x8]
0x40fa: mov rax,qword ptr [rsp+0x38]
0x40ff: mov r13,rcx
0x4102: mov rbp,rbx
0x4105: mov dword ptr [rsp+0x8],0x5f
0x410d: add rax,0x17
0x4111: sub rax,r14
0x4114: mov rdx,r15
0x4117: mov qword ptr [rsp+0x40],rax
0x411c: not rdx
0x411f: jmp 0x311c
0x4141: mov eax,dword ptr [rsp+0x24]
0x4145: cmp eax,0x2b
0x4148: je 0x44cb
0x414e: mov dword ptr [rsp+0x8],eax
0x4152: xor r9d,r9d
0x4155: mov eax,0x1
0x415a: xor r13d,r13d
0x415d: mov esi,0x2
0x4162: jmp 0x354c
0x423e: cmp dword ptr [rsp+0x8],0x5f
0x4243: je 0x3eba
0x4249: movsxd rax,dword ptr [rsp+0x58]
0x424e: cmp rax,rdx
0x4251: jb 0x3351
0x4257: jmp 0x29bf
0x4410: cmp qword ptr [rsp+0x38],0x0
0x4416: je 0x3340
0x441c: xor edx,edx
0x441e: mov qword ptr [rsp+0x50],rbx
0x4423: mov rbx,rdx
0x4426: mov rsi,r12
0x4429: mov edi,0x30
0x442e: add rbx,0x1
0x4432: call 0x1a10
0x4437: cmp qword ptr [rsp+0x38],rbx
0x443c: jne 0x4426
0x443e: jmp 0x333b
0x4476: cmp qword ptr [rsp+0x38],0x0
0x447c: je 0x3ff4
0x4482: xor edx,edx
0x4484: mov qword ptr [rsp+0x50],rbx
0x4489: mov dword ptr [rsp+0x5c],r10d
0x448e: mov rbx,rdx
0x4491: mov rsi,r12
0x4494: mov edi,0x30
0x4499: add rbx,0x1
0x449d: call 0x1a10
0x44a2: cmp qword ptr [rsp+0x38],rbx
0x44a7: jne 0x4491
0x44a9: jmp 0x3fea
0x44cb: mov eax,0x1
0x44d0: xor r13d,r13d
0x44d3: mov esi,0x2
0x44d8: jmp 0x4047
0x44dd: mov esi,0x2
0x44e2: mov edx,0x63
0x44e7: jmp 0x4031
0x44f8: call 0x1980
0x44fd: add ecx,0x64
0x4500: cmp dword ptr [rsp+0x8],0x0
0x4505: je 0x4141
0x450b: jmp 0x3531
0x456b: call 0x1980
0x4570: push r13
0x4572: push r12
0x4574: mov r13,r8
0x4577: push rbp
0x4578: push rbx
0x4579: mov rbp,rdx
0x457c: mov r12,rcx
0x457f: sub rsp,0xe8
0x4586: test al,al
0x4588: je 0x45c4
0x458a: movaps [rsp+0x60],xmm0
0x458f: movaps [rsp+0x70],xmm1
0x4594: movaps [rsp+0x80],xmm2
0x459c: movaps [rsp+0x90],xmm3
0x45a4: movaps [rsp+0xa0],xmm4
0x45ac: movaps [rsp+0xb0],xmm5
0x45b4: movaps [rsp+0xc0],xmm6
0x45bc: movaps [rsp+0xd0],xmm7
0x45c4: mov rax,qword ptr fs:0x28
0x45cd: mov qword ptr [rsp+0x28],rax
0x45d2: xor eax,eax
0x45d4: cmp edi,0x2
0x45d7: mov ebx,dword ptr [rip+0x205ac3]
0x45dd: mov dword ptr [rip+0x205ab9],0x0
0x45e7: je 0x4620
0x45e9: mov rax,qword ptr [rsp+0x28]
0x45ee: xor rax,qword ptr fs:0x28
0x45f7: mov dword ptr [rip+0x205aa3],ebx
0x45fd: mov dword ptr [rip+0x205a89],0x0
0x4607: jne 0x46aa
0x460d: add rsp,0xe8
0x4614: pop rbx
0x4615: pop rbp
0x4616: pop r12
0x4618: pop r13
0x461a: ret 
0x4620: lea rcx,[rip+0x2054d9]
0x4627: lea rdx,[rip+0x3952]
0x462e: xor r8d,r8d
0x4631: mov qword ptr [rsp+0x8],r9
0x4636: call 0x1990
0x463b: cmp eax,-0x1
0x463e: je 0x45e9
0x4640: cmp eax,0x68
0x4643: mov r9,qword ptr [rsp+0x8]
0x4648: je 0x46a0
0x464a: cmp eax,0x76
0x464d: jne 0x45e9
0x464f: lea rax,[rsp+0x110]
0x4657: mov rdi,qword ptr [rip+0x205a2a]
0x465e: lea r8,[rsp+0x10]
0x4663: mov rcx,r13
0x4666: mov rdx,r12
0x4669: mov rsi,rbp
0x466c: mov qword ptr [rsp+0x18],rax
0x4671: lea rax,[rsp+0x30]
0x4676: mov dword ptr [rsp+0x10],0x30
0x467e: mov dword ptr [rsp+0x14],0x30
0x4686: mov qword ptr [rsp+0x20],rax
0x468b: call 0x6960
0x4690: xor edi,edi
0x4692: call 0x1be0
0x4697: nop word ptr [rax+rax]
0x46a0: xor edi,edi
0x46a2: call r9
0x46a5: jmp 0x45e9
0x46aa: call 0x1980
0x46af: nop 
0x46d4: movaps [rsp+0x50],xmm0
0x46d9: movaps [rsp+0x60],xmm1
0x46de: movaps [rsp+0x70],xmm2
0x46e3: movaps [rsp+0x80],xmm3
0x46eb: movaps [rsp+0x90],xmm4
0x46f3: movaps [rsp+0xa0],xmm5
0x46fb: movaps [rsp+0xb0],xmm6
0x4703: movaps [rsp+0xc0],xmm7
0x47a7: nop word ptr [rax+rax]
0x47e4: jmp 0x47b8
0x47e6: call 0x1980
0x47eb: nop dword ptr [rax+rax]
0x488f: nop 
0x4890: push rbp
0x4891: push rbx
0x4892: mov rbp,rdi
0x4895: mov ebx,esi
0x4897: sub rsp,0x8
0x489b: call 0x77d0
0x48a0: movzx edx,byte ptr [rax]
0x48a3: and edx,-0x21
0x48a6: cmp dl,0x55
0x48a9: je 0x4920
0x48ab: cmp dl,0x47
0x48ae: je 0x48d0
0x48b0: lea rax,[rip+0x372c]
0x48b7: lea rdx,[rip+0x3727]
0x48be: cmp ebx,0x9
0x48c1: cmovne rax,rdx
0x48c5: add rsp,0x8
0x48c9: pop rbx
0x48ca: pop rbp
0x48cb: ret 
0x48d0: movzx edx,byte ptr [rax+0x1]
0x48d4: and edx,-0x21
0x48d7: cmp dl,0x42
0x48da: jne 0x48b0
0x48dc: cmp byte ptr [rax+0x2],0x31
0x48e0: jne 0x48b0
0x48e2: cmp byte ptr [rax+0x3],0x38
0x48e6: jne 0x48b0
0x48e8: cmp byte ptr [rax+0x4],0x30
0x48ec: jne 0x48b0
0x48ee: cmp byte ptr [rax+0x5],0x33
0x48f2: jne 0x48b0
0x48f4: cmp byte ptr [rax+0x6],0x30
0x48f8: jne 0x48b0
0x48fa: cmp byte ptr [rax+0x7],0x0
0x48fe: jne 0x48b0
0x4900: cmp byte ptr [rbp],0x60
0x4904: lea rax,[rip+0x36d1]
0x490b: lea rdx,[rip+0x36ce]
0x4912: cmovne rax,rdx
0x4916: add rsp,0x8
0x491a: pop rbx
0x491b: pop rbp
0x491c: ret 
0x4920: movzx edx,byte ptr [rax+0x1]
0x4924: and edx,-0x21
0x4927: cmp dl,0x54
0x492a: jne 0x48b0
0x492c: movzx edx,byte ptr [rax+0x2]
0x4930: and edx,-0x21
0x4933: cmp dl,0x46
0x4936: jne 0x48b0
0x493c: cmp byte ptr [rax+0x3],0x2d
0x4940: jne 0x48b0
0x4946: cmp byte ptr [rax+0x4],0x38
0x494a: jne 0x48b0
0x4950: cmp byte ptr [rax+0x5],0x0
0x4954: jne 0x48b0
0x495a: cmp byte ptr [rbp],0x60
0x495e: lea rax,[rip+0x366f]
0x4965: lea rdx,[rip+0x366c]
0x496c: cmovne rax,rdx
0x4970: add rsp,0x8
0x4974: pop rbx
0x4975: pop rbp
0x4976: ret 
0x4a53: xor r11d,r11d
0x4a56: mov rax,rbp
0x4a59: mov r8d,r12d
0x4a5c: mov rbp,r11
0x4a5f: mov r11,rax
0x4a62: nop word ptr [rax+rax]
0x4a68: cmp r11,rbp
0x4a6b: setne r12b
0x4a6f: cmp r11,-0x1
0x4a73: jne 0x4a82
0x4a75: mov rax,qword ptr [rsp+0x10]
0x4a7a: cmp byte ptr [rax+rbp],0x0
0x4a7e: setne r12b
0x4a82: test r12b,r12b
0x4a85: je 0x50e0
0x4a8b: cmp dword ptr [rsp+0x8],0x2
0x4a90: mov rdi,qword ptr [rsp+0x10]
0x4a95: lea r9,[rdi+rbp]
0x4a99: setne al
0x4a9c: and al,byte ptr [rsp+0xd]
0x4aa0: mov r10d,eax
0x4aa3: je 0x4b50
0x4aa9: mov rax,qword ptr [rsp+0x18]
0x4aae: test rax,rax
0x4ab1: je 0x4ee0
0x4ab7: cmp r11,-0x1
0x4abb: lea rbx,[rbp+rax]
0x4ac0: jne 0x4af0
0x4ac2: cmp rax,0x1
0x4ac6: jbe 0x4af0
0x4ac8: mov byte ptr [rsp+0x38],r8b
0x4acd: mov byte ptr [rsp+0x30],r10b
0x4ad2: mov qword ptr [rsp+0x28],r9
0x4ad7: call 0x1970
0x4adc: movzx r8d,byte ptr [rsp+0x38]
0x4ae2: movzx r10d,byte ptr [rsp+0x30]
0x4ae8: mov r11,rax
0x4aeb: mov r9,qword ptr [rsp+0x28]
0x4af0: cmp rbx,r11
0x4af3: mov byte ptr [rsp+0x28],r10b
0x4af8: ja 0x50b0
0x4afe: mov rdx,qword ptr [rsp+0x18]
0x4b03: mov rsi,qword ptr [rsp+0x48]
0x4b08: mov rdi,r9
0x4b0b: mov qword ptr [rsp+0x40],r11
0x4b10: mov byte ptr [rsp+0x38],r8b
0x4b15: mov qword ptr [rsp+0x30],r9
0x4b1a: call 0x1a20
0x4b1f: test eax,eax
0x4b21: mov r9,qword ptr [rsp+0x30]
0x4b26: movzx r8d,byte ptr [rsp+0x38]
0x4b2c: mov r11,qword ptr [rsp+0x40]
0x4b31: jne 0x50b0
0x4b37: cmp byte ptr [rsp+0xf],0x0
0x4b3c: movzx r10d,byte ptr [rsp+0x28]
0x4b42: jne 0x5ac5
0x4b48: nop dword ptr [rax+rax]
0x4b50: movzx ebx,byte ptr [r9]
0x4b54: cmp bl,0x7e
0x4b57: ja 0x4e78
0x4b5d: lea rcx,[rip+0x3508]
0x4b64: movzx edx,bl
0x4b67: movsxd rax,dword ptr [rcx+rdx*4]
0x4b6b: add rax,rcx
0x4b6e: jmp rax
0x4ba8: cmp byte ptr [rsp+0xd],0x1
0x4bad: jne 0x4cc2
0x4bb3: test dl,dl
0x4bb5: jne 0x4cc2
0x4bbb: mov rsi,qword ptr [rsp+0x20]
0x4bc0: test rsi,rsi
0x4bc3: je 0x4bd9
0x4bc5: mov edx,ebx
0x4bc7: shr dl,0x5
0x4bca: movzx edx,dl
0x4bcd: mov edx,dword ptr [rsi+rdx*4]
0x4bd0: btl edx,ebx
0x4bd3: jb 0x4d23
0x4bd9: test r10b,r10b
0x4bdc: jne 0x4d23
0x4be2: xor eax,0x1
0x4be5: add rbp,0x1
0x4be9: and eax,r8d
0x4bec: test al,al
0x4bee: je 0x4c10
0x4bf0: cmp r13,r15
0x4bf3: jbe 0x4bfa
0x4bf5: mov byte ptr [r14+r15],0x27
0x4bfa: lea rax,[r15+0x1]
0x4bfe: cmp r13,rax
0x4c01: jbe 0x4c09
0x4c03: mov byte ptr [r14+r15+0x1],0x27
0x4c09: add r15,0x2
0x4c0d: xor r8d,r8d
0x4c10: cmp r15,r13
0x4c13: jae 0x4c19
0x4c15: mov byte ptr [r14+r15],bl
0x4c19: movzx edi,byte ptr [rsp+0xe]
0x4c1e: add r15,0x1
0x4c22: mov eax,0x0
0x4c27: test r12b,r12b
0x4c2a: cmove edi,eax
0x4c2d: mov byte ptr [rsp+0xe],dil
0x4c32: jmp 0x4a68
0x4cc2: cmp byte ptr [rsp+0xf],0x0
0x4cc7: jne 0x4bbb
0x4ccd: jmp 0x4bd9
0x4d23: cmp dword ptr [rsp+0x8],0x2
0x4d28: sete dl
0x4d2b: cmp byte ptr [rsp+0xf],0x0
0x4d30: mov eax,edx
0x4d32: jne 0x5588
0x4d38: mov eax,r8d
0x4d3b: xor eax,0x1
0x4d3e: and al,dl
0x4d40: je 0x4d71
0x4d42: cmp r13,r15
0x4d45: jbe 0x4d4c
0x4d47: mov byte ptr [r14+r15],0x27
0x4d4c: lea rdx,[r15+0x1]
0x4d50: cmp r13,rdx
0x4d53: jbe 0x4d5b
0x4d55: mov byte ptr [r14+r15+0x1],0x24
0x4d5b: lea rdx,[r15+0x2]
0x4d5f: cmp r13,rdx
0x4d62: jbe 0x4d6a
0x4d64: mov byte ptr [r14+r15+0x2],0x27
0x4d6a: add r15,0x3
0x4d6e: mov r8d,eax
0x4d71: cmp r13,r15
0x4d74: jbe 0x4d7b
0x4d76: mov byte ptr [r14+r15],0x5c
0x4d7b: add r15,0x1
0x4d7f: add rbp,0x1
0x4d83: jmp 0x4c10
0x4e70: xor r10d,r10d
0x4e73: nop dword ptr [rax+rax]
0x4e78: cmp qword ptr [rsp+0x58],0x1
0x4e7e: jne 0x5228
0x4e84: mov qword ptr [rsp+0x38],r11
0x4e89: mov byte ptr [rsp+0x30],r8b
0x4e8e: mov byte ptr [rsp+0x28],r10b
0x4e93: call 0x1c40
0x4e98: mov rcx,qword ptr [rax]
0x4e9b: movzx edx,bl
0x4e9e: movzx r10d,byte ptr [rsp+0x28]
0x4ea4: movzx r8d,byte ptr [rsp+0x30]
0x4eaa: mov r11,qword ptr [rsp+0x38]
0x4eaf: mov edi,0x1
0x4eb4: movzx eax,word ptr [rcx+rdx*2]
0x4eb8: and ax,0x4000
0x4ebc: setne r12b
0x4ec0: sete al
0x4ec3: and al,byte ptr [rsp+0xd]
0x4ec7: test al,al
0x4ec9: jne 0x5861
0x4ecf: cmp dword ptr [rsp+0x8],0x2
0x4ed4: sete dl
0x4ed7: jmp 0x4ba8
0x4ee0: movzx ebx,byte ptr [r9]
0x4ee4: cmp bl,0x7e
0x4ee7: ja 0x4e70
0x4ee9: lea rcx,[rip+0x3378]
0x4ef0: movzx edx,bl
0x4ef3: movsxd rax,dword ptr [rcx+rdx*4]
0x4ef7: add rax,rcx
0x4efa: jmp rax
0x50b0: xor r10d,r10d
0x50b3: jmp 0x4b50
0x50e0: cmp dword ptr [rsp+0x8],0x2
0x50e5: movzx ebx,byte ptr [rsp+0xf]
0x50ea: mov r12d,r8d
0x50ed: mov rbp,r11
0x50f0: sete dl
0x50f3: mov eax,ebx
0x50f5: test r15,r15
0x50f8: sete cl
0x50fb: and eax,edx
0x50fd: and al,cl
0x50ff: jne 0x5b66
0x5105: mov eax,ebx
0x5107: xor eax,0x1
0x510a: and dl,al
0x510c: je 0x5a7c
0x5112: cmp byte ptr [rsp+0x7c],0x0
0x5117: je 0x5a7a
0x511d: cmp byte ptr [rsp+0xe],0x0
0x5122: jne 0x5b1d
0x5128: test r13,r13
0x512b: sete al
0x512e: cmp qword ptr [rsp+0x50],0x0
0x5134: setne dl
0x5137: and al,dl
0x5139: je 0x5b5c
0x513f: mov r13,qword ptr [rsp+0x50]
0x5144: lea rbx,[rip+0x2e9a]
0x514b: mov byte ptr [r14],0x27
0x514f: mov dword ptr [rsp+0x8],0x2
0x5157: mov r15d,0x1
0x515d: mov qword ptr [rsp+0x18],0x1
0x5166: mov byte ptr [rsp+0xf],0x0
0x516b: mov qword ptr [rsp+0x48],rbx
0x5170: mov byte ptr [rsp+0x7c],al
0x5174: jmp 0x4a53
0x5228: lea rax,[rsp+0xa0]
0x5230: cmp r11,-0x1
0x5234: mov qword ptr [rsp+0xa0],0x0
0x5240: mov qword ptr [rsp+0x28],rax
0x5245: jne 0x5274
0x5247: mov rdi,qword ptr [rsp+0x10]
0x524c: mov byte ptr [rsp+0x40],r8b
0x5251: mov byte ptr [rsp+0x38],r10b
0x5256: mov qword ptr [rsp+0x30],r9
0x525b: call 0x1970
0x5260: movzx r8d,byte ptr [rsp+0x40]
0x5266: movzx r10d,byte ptr [rsp+0x38]
0x526c: mov r11,rax
0x526f: mov r9,qword ptr [rsp+0x30]
0x5274: lea rax,[rsp+0x9c]
0x527c: xor ecx,ecx
0x527e: mov byte ptr [rsp+0x7e],bl
0x5282: mov byte ptr [rsp+0x7d],r8b
0x5287: mov rbx,rcx
0x528a: mov qword ptr [rsp+0x88],r9
0x5292: mov qword ptr [rsp+0x38],rax
0x5297: mov byte ptr [rsp+0x7f],r10b
0x529c: mov qword ptr [rsp+0x80],r15
0x52a4: mov qword ptr [rsp+0x40],r14
0x52a9: mov qword ptr [rsp+0x70],r13
0x52ae: mov qword ptr [rsp+0x30],r11
0x52b3: mov rax,qword ptr [rsp+0x10]
0x52b8: lea r14,[rbp+rbx]
0x52bd: mov rdx,qword ptr [rsp+0x30]
0x52c2: mov rcx,qword ptr [rsp+0x28]
0x52c7: mov rdi,qword ptr [rsp+0x38]
0x52cc: lea r13,[rax+r14]
0x52d0: sub rdx,r14
0x52d3: mov rsi,r13
0x52d6: call 0x6ef0
0x52db: test rax,rax
0x52de: mov r15,rax
0x52e1: je 0x5331
0x52e3: cmp rax,-0x1
0x52e7: je 0x5905
0x52ed: cmp rax,-0x2
0x52f1: je 0x5891
0x52f7: cmp dword ptr [rsp+0x8],0x2
0x52fc: sete al
0x52ff: and al,byte ptr [rsp+0xf]
0x5303: jne 0x54a0
0x5309: mov edi,dword ptr [rsp+0x9c]
0x5310: call 0x1c20
0x5315: mov rdi,qword ptr [rsp+0x28]
0x531a: test eax,eax
0x531c: mov eax,0x0
0x5321: cmove r12d,eax
0x5325: add rbx,r15
0x5328: call 0x1c10
0x532d: test eax,eax
0x532f: je 0x52b3
0x5331: mov edx,r12d
0x5334: mov rdi,rbx
0x5337: movzx r8d,byte ptr [rsp+0x7d]
0x533d: xor edx,0x1
0x5340: movzx ebx,byte ptr [rsp+0x7e]
0x5345: movzx r10d,byte ptr [rsp+0x7f]
0x534b: and dl,byte ptr [rsp+0xd]
0x534f: mov r15,qword ptr [rsp+0x80]
0x5357: mov r14,qword ptr [rsp+0x40]
0x535c: mov r13,qword ptr [rsp+0x70]
0x5361: mov r11,qword ptr [rsp+0x30]
0x5366: cmp rdi,0x1
0x536a: jbe 0x596b
0x5370: mov rcx,rdi
0x5373: xor esi,esi
0x5375: movzx r9d,byte ptr [rsp+0xf]
0x537b: add rcx,rbp
0x537e: mov rdi,qword ptr [rsp+0x10]
0x5383: jmp 0x543e
0x5390: cmp dword ptr [rsp+0x8],0x2
0x5395: sete al
0x5398: test r9b,r9b
0x539b: jne 0x5850
0x53a1: mov esi,r8d
0x53a4: xor esi,0x1
0x53a7: and al,sil
0x53aa: je 0x53db
0x53ac: cmp r13,r15
0x53af: jbe 0x53b6
0x53b1: mov byte ptr [r14+r15],0x27
0x53b6: lea rsi,[r15+0x1]
0x53ba: cmp r13,rsi
0x53bd: jbe 0x53c5
0x53bf: mov byte ptr [r14+r15+0x1],0x24
0x53c5: lea rsi,[r15+0x2]
0x53c9: cmp r13,rsi
0x53cc: jbe 0x53d4
0x53ce: mov byte ptr [r14+r15+0x2],0x27
0x53d4: add r15,0x3
0x53d8: mov r8d,eax
0x53db: cmp r13,r15
0x53de: jbe 0x53e5
0x53e0: mov byte ptr [r14+r15],0x5c
0x53e5: lea rax,[r15+0x1]
0x53e9: cmp r13,rax
0x53ec: jbe 0x53fb
0x53ee: mov eax,ebx
0x53f0: shr al,0x6
0x53f3: add eax,0x30
0x53f6: mov byte ptr [r14+r15+0x1],al
0x53fb: lea rax,[r15+0x2]
0x53ff: cmp r13,rax
0x5402: jbe 0x5414
0x5404: mov eax,ebx
0x5406: shr al,0x3
0x5409: and eax,0x7
0x540c: add eax,0x30
0x540f: mov byte ptr [r14+r15+0x2],al
0x5414: and ebx,0x7
0x5417: add rbp,0x1
0x541b: add r15,0x3
0x541f: add ebx,0x30
0x5422: cmp rbp,rcx
0x5425: jae 0x4c10
0x542b: mov esi,edx
0x542d: cmp r13,r15
0x5430: jbe 0x5436
0x5432: mov byte ptr [r14+r15],bl
0x5436: movzx ebx,byte ptr [rdi+rbp]
0x543a: add r15,0x1
0x543e: test dl,dl
0x5440: jne 0x5390
0x5446: mov eax,esi
0x5448: xor eax,0x1
0x544b: and eax,r8d
0x544e: test r10b,r10b
0x5451: je 0x5461
0x5453: cmp r13,r15
0x5456: jbe 0x545d
0x5458: mov byte ptr [r14+r15],0x5c
0x545d: add r15,0x1
0x5461: add rbp,0x1
0x5465: cmp rbp,rcx
0x5468: jae 0x4bec
0x546e: test al,al
0x5470: je 0x586e
0x5476: cmp r13,r15
0x5479: jbe 0x5480
0x547b: mov byte ptr [r14+r15],0x27
0x5480: lea rax,[r15+0x1]
0x5484: cmp r13,rax
0x5487: jbe 0x548f
0x5489: mov byte ptr [r14+r15+0x1],0x27
0x548f: add r15,0x2
0x5493: xor r10d,r10d
0x5496: xor r8d,r8d
0x5499: jmp 0x542d
0x54a0: cmp r15,0x1
0x54a4: je 0x5309
0x54aa: mov rdi,qword ptr [rsp+0x10]
0x54af: lea rcx,[rdi+r15]
0x54b3: lea rdx,[rdi+r14+0x1]
0x54b8: lea r8,[rcx+r14]
0x54bc: jmp 0x54cd
0x54c0: add rdx,0x1
0x54c4: cmp r8,rdx
0x54c7: je 0x5309
0x54cd: movzx ecx,byte ptr [rdx]
0x54d0: sub ecx,0x5b
0x54d3: cmp cl,0x21
0x54d6: ja 0x54c0
0x54d8: mov esi,0x1
0x54dd: shl rsi,cl
0x54e0: mov rcx,rsi
0x54e3: movabsq rsi,0x20000002b
0x54ed: test rcx,rsi
0x54f0: je 0x54c0
0x54f2: mov r14,qword ptr [rsp+0x40]
0x54f7: mov r13,qword ptr [rsp+0x70]
0x54fc: mov rbp,qword ptr [rsp+0x30]
0x5501: mov dword ptr [rsp+0x8],0x2
0x5509: cmp byte ptr [rsp+0xd],0x0
0x550e: je 0x5520
0x5510: test al,al
0x5512: mov eax,0x4
0x5517: cmove eax,dword ptr [rsp+0x8]
0x551c: mov dword ptr [rsp+0x8],eax
0x5520: sub rsp,0x8
0x5524: mov rcx,rbp
0x5527: mov rsi,r13
0x552a: push qword ptr [rsp+0x68]
0x552e: push qword ptr [rsp+0x78]
0x5532: mov rdi,r14
0x5535: push 0x0
0x5537: mov r9d,dword ptr [rsp+0x98]
0x553f: mov r8d,dword ptr [rsp+0x28]
0x5544: mov rdx,qword ptr [rsp+0x30]
0x5549: and r9d,-0x3
0x554d: call 0x4980
0x5552: add rsp,0x20
0x5556: mov r15,rax
0x5559: mov rbx,qword ptr [rsp+0xa8]
0x5561: xor rbx,qword ptr fs:0x28
0x556a: mov rax,r15
0x556d: jne 0x5b73
0x5573: add rsp,0xb8
0x557a: pop rbx
0x557b: pop rbp
0x557c: pop r12
0x557e: pop r13
0x5580: pop r14
0x5582: pop r15
0x5584: ret 
0x5588: mov rbp,r11
0x558b: jmp 0x5509
0x55f1: test r13,r13
0x55f4: jne 0x5b8a
0x55fa: lea rax,[rip+0x29e4]
0x5601: mov qword ptr [rsp+0x50],0x0
0x560a: mov byte ptr [rsp+0xe],0x1
0x560f: mov byte ptr [rsp+0x7c],0x0
0x5614: xor r12d,r12d
0x5617: mov byte ptr [rsp+0xf],0x0
0x561c: mov qword ptr [rsp+0x18],0x1
0x5625: mov qword ptr [rsp+0x48],rax
0x562a: mov r15d,0x1
0x5630: mov dword ptr [rsp+0x8],0x2
0x5638: jmp 0x4a53
0x5850: movzx ebx,byte ptr [rsp+0xf]
0x5855: mov rbp,r11
0x5858: mov byte ptr [rsp+0xd],bl
0x585c: jmp 0x5509
0x5861: movzx edx,byte ptr [rsp+0xd]
0x5866: xor r12d,r12d
0x5869: jmp 0x5370
0x586e: xor r10d,r10d
0x5871: jmp 0x542d
0x5891: mov r11,qword ptr [rsp+0x30]
0x5896: mov rsi,r14
0x5899: mov rcx,r13
0x589c: mov rax,rbx
0x589f: mov rdi,rbx
0x58a2: movzx r8d,byte ptr [rsp+0x7d]
0x58a8: movzx ebx,byte ptr [rsp+0x7e]
0x58ad: mov r9,qword ptr [rsp+0x88]
0x58b5: cmp rsi,r11
0x58b8: movzx r10d,byte ptr [rsp+0x7f]
0x58be: mov r15,qword ptr [rsp+0x80]
0x58c6: mov r14,qword ptr [rsp+0x40]
0x58cb: mov r13,qword ptr [rsp+0x70]
0x58d0: jae 0x58f8
0x58d2: cmp byte ptr [rcx],0x0
0x58d5: jne 0x58e7
0x58d7: jmp 0x58f8
0x58e0: cmp byte ptr [r9+rax],0x0
0x58e5: je 0x58f5
0x58e7: add rax,0x1
0x58eb: lea rdx,[rbp+rax]
0x58f0: cmp r11,rdx
0x58f3: ja 0x58e0
0x58f5: mov rdi,rax
0x58f8: movzx edx,byte ptr [rsp+0xd]
0x58fd: xor r12d,r12d
0x5900: jmp 0x5366
0x5905: mov rdi,rbx
0x5908: movzx r8d,byte ptr [rsp+0x7d]
0x590e: movzx ebx,byte ptr [rsp+0x7e]
0x5913: movzx r10d,byte ptr [rsp+0x7f]
0x5919: mov r15,qword ptr [rsp+0x80]
0x5921: xor r12d,r12d
0x5924: mov r14,qword ptr [rsp+0x40]
0x5929: mov r13,qword ptr [rsp+0x70]
0x592e: mov r11,qword ptr [rsp+0x30]
0x5933: movzx edx,byte ptr [rsp+0xd]
0x5938: jmp 0x5366
0x596b: mov eax,edx
0x596d: jmp 0x4ec7
0x5a7a: mov eax,edx
0x5a7c: mov rbx,qword ptr [rsp+0x48]
0x5a81: test rbx,rbx
0x5a84: je 0x5ab2
0x5a86: test al,al
0x5a88: je 0x5ab2
0x5a8a: movzx ecx,byte ptr [rbx]
0x5a8d: mov rax,rbx
0x5a90: test cl,cl
0x5a92: je 0x5ab2
0x5a94: mov rdx,r15
0x5a97: sub rax,r15
0x5a9a: cmp r13,rdx
0x5a9d: jbe 0x5aa3
0x5a9f: mov byte ptr [r14+rdx],cl
0x5aa3: add rdx,0x1
0x5aa7: movzx ecx,byte ptr [rax+rdx]
0x5aab: test cl,cl
0x5aad: jne 0x5a9a
0x5aaf: mov r15,rdx
0x5ab2: cmp r13,r15
0x5ab5: jbe 0x5559
0x5abb: mov byte ptr [r14+r15],0x0
0x5ac0: jmp 0x5559
0x5ac5: cmp dword ptr [rsp+0x8],0x2
0x5aca: movzx ebx,byte ptr [rsp+0xf]
0x5acf: mov rbp,r11
0x5ad2: sete al
0x5ad5: mov byte ptr [rsp+0xd],bl
0x5ad9: jmp 0x5509
0x5b1d: sub rsp,0x8
0x5b21: mov r8d,0x5
0x5b27: mov rcx,r11
0x5b2a: push qword ptr [rsp+0x68]
0x5b2e: push qword ptr [rsp+0x78]
0x5b32: mov rdi,r14
0x5b35: push qword ptr [rsp+0x38]
0x5b39: mov r9d,dword ptr [rsp+0x98]
0x5b41: mov rdx,qword ptr [rsp+0x30]
0x5b46: mov rsi,qword ptr [rsp+0x70]
0x5b4b: call 0x4980
0x5b50: add rsp,0x20
0x5b54: mov r15,rax
0x5b57: jmp 0x5559
0x5b5c: movzx eax,byte ptr [rsp+0x7c]
0x5b61: jmp 0x5a7c
0x5b66: mov dword ptr [rsp+0x8],0x2
0x5b6e: jmp 0x5509
0x5b73: call 0x1980
0x5b78: mov byte ptr [rsp+0xd],0x0
0x5b7d: jmp 0x55f1
0x5b8a: mov byte ptr [rsp+0xe],0x1
0x5b8f: xor eax,eax
0x5b91: xor r12d,r12d
0x5b94: mov qword ptr [rsp+0x50],0x0
0x5b9d: jmp 0x5144
0x5bb4: nop 
0x5bb6: nop word ptr cs:[rax+rax]
0x5cac: add rsp,0x20
0x5cb0: mov r11,qword ptr [rsp+0x10]
0x5cb5: cmp r11,rax
0x5cb8: ja 0x5d21
0x5cba: lea rsi,[rax+0x1]
0x5cbe: lea rax,[rip+0x20443b]
0x5cc5: cmp r12,rax
0x5cc8: mov qword ptr [rbx],rsi
0x5ccb: je 0x5cdf
0x5ccd: mov rdi,r12
0x5cd0: mov qword ptr [rsp+0x10],rsi
0x5cd5: call 0x1850
0x5cda: mov rsi,qword ptr [rsp+0x10]
0x5cdf: mov rdi,rsi
0x5ce2: mov qword ptr [rsp+0x10],rsi
0x5ce7: call 0x6b40
0x5cec: sub rsp,0x8
0x5cf0: mov qword ptr [rbx+0x8],rax
0x5cf4: mov r8d,dword ptr [rbp]
0x5cf8: push qword ptr [rbp+0x30]
0x5cfb: push qword ptr [rbp+0x28]
0x5cfe: mov rcx,r14
0x5d01: push r15
0x5d03: mov r9d,dword ptr [rsp+0x3c]
0x5d08: mov rdi,rax
0x5d0b: mov rdx,qword ptr [rsp+0x28]
0x5d10: mov rsi,qword ptr [rsp+0x30]
0x5d15: mov r12,rax
0x5d18: call 0x4980
0x5d1d: add rsp,0x20
0x5d21: mov eax,dword ptr [rsp+0x18]
0x5d25: mov dword ptr [r13],eax
0x5d29: add rsp,0x28
0x5d2d: mov rax,r12
0x5d30: pop rbx
0x5d31: pop rbp
0x5d32: pop r12
0x5d34: pop r13
0x5d36: pop r14
0x5d38: pop r15
0x5d3a: ret 
0x5d61: call 0x1870
0x5d66: call 0x6d90
0x5d6b: nop dword ptr [rax+rax]
0x5d70: push r12
0x5d72: push rbp
0x5d73: push rbx
0x5d74: mov rbx,rdi
0x5d77: call 0x1880
0x5d7c: mov r12d,dword ptr [rax]
0x5d7f: mov rbp,rax
0x5d82: lea rax,[rip+0x204477]
0x5d89: test rbx,rbx
0x5d8c: mov esi,0x38
0x5d91: cmove rbx,rax
0x5d95: mov rdi,rbx
0x5d98: call 0x6d40
0x5d9d: mov dword ptr [rbp],r12d
0x5da1: pop rbx
0x5da2: pop rbp
0x5da3: pop r12
0x5da5: ret 
0x5db0: lea rax,[rip+0x204449]
0x5db7: test rdi,rdi
0x5dba: cmove rdi,rax
0x5dbe: mov eax,dword ptr [rdi]
0x5dc0: ret 
0x5dd0: lea rax,[rip+0x204429]
0x5dd7: test rdi,rdi
0x5dda: cmove rdi,rax
0x5dde: mov dword ptr [rdi],esi
0x5de0: ret 
0x5df0: lea rax,[rip+0x204409]
0x5df7: test rdi,rdi
0x5dfa: mov ecx,esi
0x5dfc: cmove rdi,rax
0x5e00: mov eax,esi
0x5e02: and ecx,0x1f
0x5e05: shr al,0x5
0x5e08: movzx eax,al
0x5e0b: lea rdi,[rdi+rax*4+0x8]
0x5e10: mov esi,dword ptr [rdi]
0x5e12: mov eax,esi
0x5e14: shr eax,cl
0x5e16: xor edx,eax
0x5e18: and eax,0x1
0x5e1b: and edx,0x1
0x5e1e: shl edx,cl
0x5e20: xor edx,esi
0x5e22: mov dword ptr [rdi],edx
0x5e24: ret 
0x5e30: lea rax,[rip+0x2043c9]
0x5e37: test rdi,rdi
0x5e3a: cmove rdi,rax
0x5e3e: mov eax,dword ptr [rdi+0x4]
0x5e41: mov dword ptr [rdi+0x4],esi
0x5e44: ret 
0x5e50: lea rax,[rip+0x2043a9]
0x5e57: test rdi,rdi
0x5e5a: cmove rdi,rax
0x5e5e: test rsi,rsi
0x5e61: mov dword ptr [rdi],0xa
0x5e67: je 0x5e77
0x5e69: test rdx,rdx
0x5e6c: je 0x5e77
0x5e6e: mov qword ptr [rdi+0x28],rsi
0x5e72: mov qword ptr [rdi+0x30],rdx
0x5e76: ret 
0x5e77: sub rsp,0x8
0x5e7b: call 0x1870
0x5e80: push r15
0x5e82: push r14
0x5e84: lea rax,[rip+0x204375]
0x5e8b: push r13
0x5e8d: push r12
0x5e8f: mov r13,rdi
0x5e92: push rbp
0x5e93: push rbx
0x5e94: mov rbx,r8
0x5e97: mov r14,rsi
0x5e9a: mov r15,rdx
0x5e9d: sub rsp,0x18
0x5ea1: test r8,r8
0x5ea4: cmove rbx,rax
0x5ea8: mov qword ptr [rsp+0x8],rcx
0x5ead: call 0x1880
0x5eb2: mov r12d,dword ptr [rax]
0x5eb5: mov rbp,rax
0x5eb8: lea rax,[rbx+0x8]
0x5ebc: sub rsp,0x8
0x5ec0: mov r9d,dword ptr [rbx+0x4]
0x5ec4: push qword ptr [rbx+0x30]
0x5ec7: mov r8d,dword ptr [rbx]
0x5eca: push qword ptr [rbx+0x28]
0x5ecd: mov rdx,r15
0x5ed0: push rax
0x5ed1: mov rcx,qword ptr [rsp+0x28]
0x5ed6: mov rsi,r14
0x5ed9: mov rdi,r13
0x5edc: call 0x4980
0x5ee1: mov dword ptr [rbp],r12d
0x5ee5: add rsp,0x38
0x5ee9: pop rbx
0x5eea: pop rbp
0x5eeb: pop r12
0x5eed: pop r13
0x5eef: pop r14
0x5ef1: pop r15
0x5ef3: ret 
0x5f00: push r15
0x5f02: push r14
0x5f04: lea rax,[rip+0x2042f5]
0x5f0b: push r13
0x5f0d: push r12
0x5f0f: mov r12,rdx
0x5f12: push rbp
0x5f13: push rbx
0x5f14: mov rbx,rcx
0x5f17: mov r14,rdi
0x5f1a: mov r15,rsi
0x5f1d: sub rsp,0x38
0x5f21: test rcx,rcx
0x5f24: cmove rbx,rax
0x5f28: xor ebp,ebp
0x5f2a: call 0x1880
0x5f2f: test r12,r12
0x5f32: mov r13,rax
0x5f35: mov eax,dword ptr [rax]
0x5f37: sete bpl
0x5f3b: or ebp,dword ptr [rbx+0x4]
0x5f3e: lea r10,[rbx+0x8]
0x5f42: sub rsp,0x8
0x5f46: mov r8d,dword ptr [rbx]
0x5f49: mov rcx,r15
0x5f4c: mov dword ptr [rsp+0x14],eax
0x5f50: push qword ptr [rbx+0x30]
0x5f53: mov rdx,r14
0x5f56: push qword ptr [rbx+0x28]
0x5f59: push r10
0x5f5b: xor esi,esi
0x5f5d: mov r9d,ebp
0x5f60: xor edi,edi
0x5f62: mov qword ptr [rsp+0x40],r10
0x5f67: call 0x4980
0x5f6c: lea rsi,[rax+0x1]
0x5f70: mov qword ptr [rsp+0x48],rax
0x5f75: add rsp,0x20
0x5f79: mov rdi,rsi
0x5f7c: mov qword ptr [rsp+0x18],rsi
0x5f81: call 0x6b40
0x5f86: mov qword ptr [rsp+0x10],rax
0x5f8b: sub rsp,0x8
0x5f8f: push qword ptr [rbx+0x30]
0x5f92: push qword ptr [rbx+0x28]
0x5f95: mov r10,qword ptr [rsp+0x38]
0x5f9a: mov r9d,ebp
0x5f9d: mov r8d,dword ptr [rbx]
0x5fa0: mov rcx,r15
0x5fa3: mov rdx,r14
0x5fa6: mov rdi,rax
0x5fa9: push r10
0x5fab: mov rsi,qword ptr [rsp+0x38]
0x5fb0: call 0x4980
0x5fb5: mov eax,dword ptr [rsp+0x2c]
0x5fb9: add rsp,0x20
0x5fbd: test r12,r12
0x5fc0: mov dword ptr [r13],eax
0x5fc4: je 0x5fcf
0x5fc6: mov r11,qword ptr [rsp+0x28]
0x5fcb: mov qword ptr [r12],r11
0x5fcf: mov rax,qword ptr [rsp+0x10]
0x5fd4: add rsp,0x38
0x5fd8: pop rbx
0x5fd9: pop rbp
0x5fda: pop r12
0x5fdc: pop r13
0x5fde: pop r14
0x5fe0: pop r15
0x5fe2: ret 
0x5ff0: mov rcx,rdx
0x5ff3: xor edx,edx
0x5ff5: jmp 0x5f00
0x6000: mov eax,dword ptr [rip+0x204052]
0x6006: push r12
0x6008: mov r12,qword ptr [rip+0x204051]
0x600f: push rbp
0x6010: push rbx
0x6011: cmp eax,0x1
0x6014: jle 0x6041
0x6016: sub eax,0x2
0x6019: lea rbx,[r12+0x18]
0x601e: shl rax,0x4
0x6022: lea rbp,[r12+rax+0x28]
0x6027: nop word ptr [rax+rax]
0x6030: mov rdi,qword ptr [rbx]
0x6033: add rbx,0x10
0x6037: call 0x1850
0x603c: cmp rbx,rbp
0x603f: jne 0x6030
0x6041: mov rdi,qword ptr [r12+0x8]
0x6046: lea rbx,[rip+0x2040b3]
0x604d: cmp rdi,rbx
0x6050: je 0x6069
0x6052: call 0x1850
0x6057: mov qword ptr [rip+0x20400e],0x100
0x6062: mov qword ptr [rip+0x20400f],rbx
0x6069: lea rbx,[rip+0x204000]
0x6070: cmp r12,rbx
0x6073: je 0x6084
0x6075: mov rdi,r12
0x6078: call 0x1850
0x607d: mov qword ptr [rip+0x203fdc],rbx
0x6084: pop rbx
0x6085: mov dword ptr [rip+0x203fc9],0x1
0x608f: pop rbp
0x6090: pop r12
0x6092: ret 
0x60a0: lea rcx,[rip+0x204159]
0x60a7: mov rdx,-0x1
0x60ae: jmp 0x5bc0
0x60c0: lea rcx,[rip+0x204139]
0x60c7: jmp 0x5bc0
0x60d0: lea rcx,[rip+0x204129]
0x60d7: mov rsi,rdi
0x60da: mov rdx,-0x1
0x60e1: xor edi,edi
0x60e3: jmp 0x5bc0
0x60f0: lea rcx,[rip+0x204109]
0x60f7: mov rdx,rsi
0x60fa: mov rsi,rdi
0x60fd: xor edi,edi
0x60ff: jmp 0x5bc0
0x6110: sub rsp,0x48
0x6114: mov rax,rdx
0x6117: mov rdx,qword ptr fs:0x28
0x6120: mov qword ptr [rsp+0x38],rdx
0x6125: xor edx,edx
0x6127: cmp esi,0xa
0x612a: je 0x6194
0x612c: mov dword ptr [rsp],esi
0x612f: mov rcx,rsp
0x6132: mov rdx,-0x1
0x6139: mov rsi,rax
0x613c: mov qword ptr [rsp+0x4],0x0
0x6145: mov qword ptr [rsp+0xc],0x0
0x614e: mov qword ptr [rsp+0x14],0x0
0x6157: mov qword ptr [rsp+0x1c],0x0
0x6160: mov qword ptr [rsp+0x24],0x0
0x6169: mov qword ptr [rsp+0x2c],0x0
0x6172: mov dword ptr [rsp+0x34],0x0
0x617a: call 0x5bc0
0x617f: mov rcx,qword ptr [rsp+0x38]
0x6184: xor rcx,qword ptr fs:0x28
0x618d: jne 0x6199
0x618f: add rsp,0x48
0x6193: ret 
0x6194: call 0x1870
0x6199: call 0x1980
0x619e: nop 
0x61a0: sub rsp,0x48
0x61a4: mov rax,rdx
0x61a7: mov rdx,rcx
0x61aa: mov rcx,qword ptr fs:0x28
0x61b3: mov qword ptr [rsp+0x38],rcx
0x61b8: xor ecx,ecx
0x61ba: cmp esi,0xa
0x61bd: je 0x6220
0x61bf: mov dword ptr [rsp],esi
0x61c2: mov rcx,rsp
0x61c5: mov rsi,rax
0x61c8: mov qword ptr [rsp+0x4],0x0
0x61d1: mov qword ptr [rsp+0xc],0x0
0x61da: mov qword ptr [rsp+0x14],0x0
0x61e3: mov qword ptr [rsp+0x1c],0x0
0x61ec: mov qword ptr [rsp+0x24],0x0
0x61f5: mov qword ptr [rsp+0x2c],0x0
0x61fe: mov dword ptr [rsp+0x34],0x0
0x6206: call 0x5bc0
0x620b: mov rdx,qword ptr [rsp+0x38]
0x6210: xor rdx,qword ptr fs:0x28
0x6219: jne 0x6225
0x621b: add rsp,0x48
0x621f: ret 
0x6220: call 0x1870
0x6225: call 0x1980
0x622a: nop word ptr [rax+rax]
0x6230: mov rdx,rsi
0x6233: mov esi,edi
0x6235: xor edi,edi
0x6237: jmp 0x6110
0x6240: mov rcx,rdx
0x6243: mov rdx,rsi
0x6246: mov esi,edi
0x6248: xor edi,edi
0x624a: jmp 0x61a0
0x6250: sub rsp,0x48
0x6254: mov ecx,edx
0x6256: mov rax,qword ptr fs:0x28
0x625f: mov qword ptr [rsp+0x38],rax
0x6264: xor eax,eax
0x6266: mov rax,qword ptr [rip+0x203fc3]
0x626d: mov r8,rsp
0x6270: and ecx,0x1f
0x6273: movdqa xmm0,[rip+0x203f85]
0x627b: mov qword ptr [rsp+0x30],rax
0x6280: mov eax,edx
0x6282: movaps [rsp],xmm0
0x6286: shr al,0x5
0x6289: movzx eax,al
0x628c: lea r9,[r8+rax*4+0x8]
0x6291: movdqa xmm0,[rip+0x203f77]
0x6299: movaps [rsp+0x10],xmm0
0x629e: movdqa xmm0,[rip+0x203f7a]
0x62a6: movaps [rsp+0x20],xmm0
0x62ab: mov edx,dword ptr [r9]
0x62ae: mov eax,edx
0x62b0: shr eax,cl
0x62b2: not eax
0x62b4: and eax,0x1
0x62b7: shl eax,cl
0x62b9: mov rcx,r8
0x62bc: xor eax,edx
0x62be: mov rdx,rsi
0x62c1: mov rsi,rdi
0x62c4: mov dword ptr [r9],eax
0x62c7: xor edi,edi
0x62c9: call 0x5bc0
0x62ce: mov rsi,qword ptr [rsp+0x38]
0x62d3: xor rsi,qword ptr fs:0x28
0x62dc: jne 0x62e3
0x62de: add rsp,0x48
0x62e2: ret 
0x62e3: call 0x1980
0x62e8: nop dword ptr [rax+rax]
0x62f0: movsx edx,sil
0x62f4: mov rsi,-0x1
0x62fb: jmp 0x6250
0x6300: mov edx,0x3a
0x6305: mov rsi,-0x1
0x630c: jmp 0x6250
0x6320: mov edx,0x3a
0x6325: jmp 0x6250
0x6330: sub rsp,0x48
0x6334: mov rax,rdx
0x6337: mov rdx,qword ptr fs:0x28
0x6340: mov qword ptr [rsp+0x38],rdx
0x6345: xor edx,edx
0x6347: cmp esi,0xa
0x634a: je 0x63b4
0x634c: mov dword ptr [rsp],esi
0x634f: mov rcx,rsp
0x6352: mov rdx,-0x1
0x6359: mov rsi,rax
0x635c: mov qword ptr [rsp+0x4],0x0
0x6365: mov qword ptr [rsp+0xc],0x4000000
0x636e: mov qword ptr [rsp+0x14],0x0
0x6377: mov qword ptr [rsp+0x1c],0x0
0x6380: mov qword ptr [rsp+0x24],0x0
0x6389: mov qword ptr [rsp+0x2c],0x0
0x6392: mov dword ptr [rsp+0x34],0x0
0x639a: call 0x5bc0
0x639f: mov rcx,qword ptr [rsp+0x38]
0x63a4: xor rcx,qword ptr fs:0x28
0x63ad: jne 0x63b9
0x63af: add rsp,0x48
0x63b3: ret 
0x63b4: call 0x1870
0x63b9: call 0x1980
0x63be: nop 
0x63c0: sub rsp,0x48
0x63c4: mov r9,rcx
0x63c7: mov rcx,qword ptr [rip+0x203e62]
0x63ce: movdqa xmm0,[rip+0x203e2a]
0x63d6: mov rax,qword ptr fs:0x28
0x63df: mov qword ptr [rsp+0x38],rax
0x63e4: xor eax,eax
0x63e6: movaps [rsp],xmm0
0x63ea: test rsi,rsi
0x63ed: mov qword ptr [rsp+0x30],rcx
0x63f2: mov dword ptr [rsp],0xa
0x63f9: movdqa xmm0,[rip+0x203e0f]
0x6401: movaps [rsp+0x10],xmm0
0x6406: movdqa xmm0,[rip+0x203e12]
0x640e: movaps [rsp+0x20],xmm0
0x6413: je 0x6447
0x6415: test rdx,rdx
0x6418: je 0x6447
0x641a: mov qword ptr [rsp+0x28],rsi
0x641f: mov qword ptr [rsp+0x30],rdx
0x6424: mov rcx,rsp
0x6427: mov rdx,r8
0x642a: mov rsi,r9
0x642d: call 0x5bc0
0x6432: mov rdi,qword ptr [rsp+0x38]
0x6437: xor rdi,qword ptr fs:0x28
0x6440: jne 0x644c
0x6442: add rsp,0x48
0x6446: ret 
0x6447: call 0x1870
0x644c: call 0x1980
0x6451: nop dword ptr [rax+rax]
0x6456: nop word ptr cs:[rax+rax]
0x6460: mov r8,-0x1
0x6467: jmp 0x63c0
0x6470: mov rcx,rdx
0x6473: mov r8,-0x1
0x647a: mov rdx,rsi
0x647d: mov rsi,rdi
0x6480: xor edi,edi
0x6482: jmp 0x63c0
0x6490: mov r8,rcx
0x6493: mov rcx,rdx
0x6496: mov rdx,rsi
0x6499: mov rsi,rdi
0x649c: xor edi,edi
0x649e: jmp 0x63c0
0x64b0: lea rcx,[rip+0x203b69]
0x64b7: jmp 0x5bc0
0x64c0: lea rcx,[rip+0x203b59]
0x64c7: mov rdx,rsi
0x64ca: mov rsi,rdi
0x64cd: xor edi,edi
0x64cf: jmp 0x5bc0
0x64e0: lea rcx,[rip+0x203b39]
0x64e7: mov rdx,-0x1
0x64ee: jmp 0x5bc0
0x6658: mov r8,rcx
0x665b: mov rcx,rdx
0x665e: lea rdx,[rip+0x1e4f]
0x6665: mov esi,0x1
0x666a: xor eax,eax
0x666c: call 0x1c00
0x6671: jmp 0x655c
0x686d: push r12
0x686f: push r15
0x6871: push r14
0x6873: mov r8,qword ptr [rsp+0x20]
0x6878: mov rcx,rbx
0x687b: mov rdx,rax
0x687e: mov rdi,rbp
0x6881: mov esi,0x1
0x6886: xor eax,eax
0x6888: call 0x1c00
0x688d: add rsp,0x20
0x6891: add rsp,0x28
0x6895: pop rbx
0x6896: pop rbp
0x6897: pop r12
0x6899: pop r13
0x689b: pop r14
0x689d: pop r15
0x689f: ret 
0x68d9: push r12
0x68db: push r15
0x68dd: push r14
0x68df: mov r9,qword ptr [rsp+0x28]
0x68e4: jmp 0x6873
0x6940: xor r9d,r9d
0x6943: cmp qword ptr [r8],0x0
0x6947: je 0x695b
0x6949: nop dword ptr [rax]
0x6950: add r9,0x1
0x6954: cmp qword ptr [r8+r9*8],0x0
0x6959: jne 0x6950
0x695b: jmp 0x6520
0x6988: mov r11d,eax
0x698b: add r11,qword ptr [r10+0x10]
0x698f: add eax,0x8
0x6992: mov dword ptr [r10],eax
0x69c5: call 0x1980
0x69e0: push rbp
0x69e1: push rbx
0x69e2: mov r10d,0x20
0x69e8: xor r11d,r11d
0x69eb: sub rsp,0xb8
0x69f2: mov rax,qword ptr fs:0x28
0x69fb: mov qword ptr [rsp+0x78],rax
0x6a00: xor eax,eax
0x6a02: lea rax,[rsp+0xd0]
0x6a0a: mov qword ptr [rsp+0xa0],r8
0x6a12: lea rbx,[rsp+0xd0]
0x6a1a: lea r8,[rsp+0x20]
0x6a1f: mov qword ptr [rsp+0xa8],r9
0x6a27: mov dword ptr [rsp+0x8],0x20
0x6a2f: mov qword ptr [rsp+0x10],rax
0x6a34: lea rax,[rsp+0x80]
0x6a3c: xor r9d,r9d
0x6a3f: mov qword ptr [rsp+0x18],rax
0x6a44: mov rbp,rax
0x6a47: nop word ptr [rax+rax]
0x6a50: cmp r10d,0x2f
0x6a54: ja 0x6aac
0x6a56: mov eax,r10d
0x6a59: mov r11d,0x1
0x6a5f: add r10d,0x8
0x6a63: add rax,rbp
0x6a66: mov rax,qword ptr [rax]
0x6a69: test rax,rax
0x6a6c: mov qword ptr [r8+r9*8],rax
0x6a70: je 0x6a7c
0x6a72: add r9,0x1
0x6a76: cmp r9,0xa
0x6a7a: jne 0x6a50
0x6a7c: test r11b,r11b
0x6a7f: jne 0x6aa5
0x6a81: call 0x6520
0x6a86: mov rax,qword ptr [rsp+0x78]
0x6a8b: xor rax,qword ptr fs:0x28
0x6a94: jne 0x6aa0
0x6a96: add rsp,0xb8
0x6a9d: pop rbx
0x6a9e: pop rbp
0x6a9f: ret 
0x6aa0: call 0x1980
0x6aa5: mov dword ptr [rsp+0x8],r10d
0x6aaa: jmp 0x6a81
0x6aac: mov rax,rbx
0x6aaf: add rbx,0x8
0x6ab3: jmp 0x6a66
0x6ac0: push rbx
0x6ac1: lea rsi,[rip+0x1a3a]
0x6ac8: mov edx,0x5
0x6acd: xor edi,edi
0x6acf: call 0x1950
0x6ad4: lea rdx,[rip+0x1a3c]
0x6adb: mov rsi,rax
0x6ade: mov edi,0x1
0x6ae3: xor eax,eax
0x6ae5: call 0x1b40
0x6aea: lea rsi,[rip+0x1a3c]
0x6af1: mov edx,0x5
0x6af6: xor edi,edi
0x6af8: call 0x1950
0x6afd: lea rcx,[rip+0x119c]
0x6b04: lea rdx,[rip+0xf29]
0x6b0b: mov rsi,rax
0x6b0e: mov edi,0x1
0x6b13: xor eax,eax
0x6b15: call 0x1b40
0x6b1a: mov rbx,qword ptr [rip+0x203567]
0x6b21: lea rsi,[rip+0x1c38]
0x6b28: xor edi,edi
0x6b2a: mov edx,0x5
0x6b2f: call 0x1950
0x6b34: mov rsi,rbx
0x6b37: mov rdi,rax
0x6b3a: pop rbx
0x6b3b: jmp 0x1a30
0x6b40: push rbx
0x6b41: mov rbx,rdi
0x6b44: call 0x1ad0
0x6b49: test rax,rax
0x6b4c: jne 0x6b53
0x6b4e: test rbx,rbx
0x6b51: jne 0x6b55
0x6b53: pop rbx
0x6b54: ret 
0x6b55: call 0x6d90
0x6b5a: nop word ptr [rax+rax]
0x6b60: mov rax,rdi
0x6b63: mul rsi
0x6b66: mov rdi,rax
0x6b69: seto al
0x6b6c: test rdi,rdi
0x6b6f: js 0x6b7b
0x6b71: movzx eax,al
0x6b74: test rax,rax
0x6b77: jne 0x6b7b
0x6b79: jmp 0x6b40
0x6b7b: sub rsp,0x8
0x6b7f: call 0x6d90
0x6b84: nop 
0x6b86: nop word ptr cs:[rax+rax]
0x6b90: jmp 0x6b40
0x6bd6: nop word ptr cs:[rax+rax]
0x6be0: mov rax,rsi
0x6be3: mul rdx
0x6be6: mov rsi,rax
0x6be9: seto al
0x6bec: test rsi,rsi
0x6bef: js 0x6bfb
0x6bf1: movzx eax,al
0x6bf4: test rax,rax
0x6bf7: jne 0x6bfb
0x6bf9: jmp 0x6ba0
0x6bfb: sub rsp,0x8
0x6bff: call 0x6d90
0x6c04: nop 
0x6c06: nop word ptr cs:[rax+rax]
0x6c10: test rdi,rdi
0x6c13: mov r9,rdx
0x6c16: mov rcx,qword ptr [rsi]
0x6c19: je 0x6c50
0x6c1b: xor edx,edx
0x6c1d: movabsq rax,0x5555555555555554
0x6c27: div r9
0x6c2a: cmp rax,rcx
0x6c2d: jbe 0x6c6b
0x6c2f: mov rax,rcx
0x6c32: shr rax, 1
0x6c35: lea rcx,[rax+rcx+0x1]
0x6c3a: mov qword ptr [rsi],rcx
0x6c3d: imul rcx,r9
0x6c41: mov rsi,rcx
0x6c44: jmp 0x6ba0
0x6c50: test rcx,rcx
0x6c53: je 0x6c78
0x6c55: mov rax,rcx
0x6c58: mul r9
0x6c5b: seto dl
0x6c5e: test rax,rax
0x6c61: movzx edx,dl
0x6c64: js 0x6c6b
0x6c66: test rdx,rdx
0x6c69: je 0x6c3a
0x6c6b: sub rsp,0x8
0x6c6f: call 0x6d90
0x6c74: nop dword ptr [rax]
0x6c78: xor edx,edx
0x6c7a: mov eax,0x80
0x6c7f: xor r8d,r8d
0x6c82: div r9
0x6c85: test rax,rax
0x6c88: sete r8b
0x6c8c: lea rcx,[r8+rax]
0x6c90: jmp 0x6c55
0x6ca0: test rdi,rdi
0x6ca3: mov rax,qword ptr [rsi]
0x6ca6: je 0x6cd0
0x6ca8: movabsq rdx,0x5555555555555553
0x6cb2: cmp rax,rdx
0x6cb5: ja 0x6ce1
0x6cb7: mov rdx,rax
0x6cba: shr rdx, 1
0x6cbd: lea rax,[rdx+rax+0x1]
0x6cc2: mov qword ptr [rsi],rax
0x6cc5: mov rsi,rax
0x6cc8: jmp 0x6ba0
0x6cd0: test rax,rax
0x6cd3: mov edx,0x80
0x6cd8: cmove rax,rdx
0x6cdc: test rax,rax
0x6cdf: jns 0x6cc2
0x6ce1: sub rsp,0x8
0x6ce5: call 0x6d90
0x6cea: nop word ptr [rax+rax]
0x6cf0: push rbx
0x6cf1: mov rbx,rdi
0x6cf4: call 0x6b40
0x6cf9: mov rdx,rbx
0x6cfc: xor esi,esi
0x6cfe: mov rdi,rax
0x6d01: pop rbx
0x6d02: jmp 0x1a00
0x6d10: mov rax,rdi
0x6d13: sub rsp,0x8
0x6d17: mul rsi
0x6d1a: seto dl
0x6d1d: test rax,rax
0x6d20: js 0x6d39
0x6d22: movzx edx,dl
0x6d25: test rdx,rdx
0x6d28: jne 0x6d39
0x6d2a: call 0x1a40
0x6d2f: test rax,rax
0x6d32: je 0x6d39
0x6d34: add rsp,0x8
0x6d38: ret 
0x6d39: call 0x6d90
0x6d3e: nop 
0x6d40: push rbp
0x6d41: push rbx
0x6d42: mov rbp,rdi
0x6d45: mov rdi,rsi
0x6d48: mov rbx,rsi
0x6d4b: sub rsp,0x8
0x6d4f: call 0x6b40
0x6d54: add rsp,0x8
0x6d58: mov rdx,rbx
0x6d5b: mov rsi,rbp
0x6d5e: pop rbx
0x6d5f: pop rbp
0x6d60: mov rdi,rax
0x6d63: jmp 0x1a70
0x6d70: push rbx
0x6d71: mov rbx,rdi
0x6d74: call 0x1970
0x6d79: mov rdi,rbx
0x6d7c: lea rsi,[rax+0x1]
0x6d80: pop rbx
0x6d81: jmp 0x6d40
0x6dc0: call 0x1870
0x6dc5: nop word ptr cs:[rax+rax]
0x6dcf: nop 
0x6ef0: push r13
0x6ef2: push r12
0x6ef4: mov r13,rsi
0x6ef7: push rbp
0x6ef8: push rbx
0x6ef9: mov rbx,rdi
0x6efc: mov r12,rdx
0x6eff: sub rsp,0x18
0x6f03: mov rax,qword ptr fs:0x28
0x6f0c: mov qword ptr [rsp+0x8],rax
0x6f11: xor eax,eax
0x6f13: lea rax,[rsp+0x4]
0x6f18: test rdi,rdi
0x6f1b: cmove rbx,rax
0x6f1f: mov rdi,rbx
0x6f22: call 0x19a0
0x6f27: cmp rax,-0x3
0x6f2b: mov rbp,rax
0x6f2e: jbe 0x6f50
0x6f30: test r12,r12
0x6f33: je 0x6f50
0x6f35: xor edi,edi
0x6f37: call 0x7770
0x6f3c: test al,al
0x6f3e: jne 0x6f50
0x6f40: movzx eax,byte ptr [r13]
0x6f45: mov ebp,0x1
0x6f4a: mov dword ptr [rbx],eax
0x6f4c: nop dword ptr [rax]
0x6f50: mov rdx,qword ptr [rsp+0x8]
0x6f55: xor rdx,qword ptr fs:0x28
0x6f5e: mov rax,rbp
0x6f61: jne 0x6f6e
0x6f63: add rsp,0x18
0x6f67: pop rbx
0x6f68: pop rbp
0x6f69: pop r12
0x6f6b: pop r13
0x6f6d: ret 
0x6f6e: call 0x1980
0x6f73: nop word ptr cs:[rax+rax]
0x6f7d: nop dword ptr [rax]
0x6f80: push rbp
0x6f81: push rbx
0x6f82: mov rbp,rdi
0x6f85: mov edi,0x21
0x6f8a: sub rsp,0x8
0x6f8e: call 0x6b40
0x6f93: lea rsi,[rbp+0x2c]
0x6f97: mov rbx,rax
0x6f9a: mov edx,0x20
0x6f9f: mov rdi,rax
0x6fa2: call 0x1890
0x6fa7: mov rdi,rbx
0x6faa: mov byte ptr [rbx+0x20],0x0
0x6fae: call 0x1970
0x6fb3: add rax,rbx
0x6fb6: cmp rbx,rax
0x6fb9: jae 0x6fc1
0x6fbb: cmp byte ptr [rax-0x1],0x20
0x6fbf: je 0x6fd0
0x6fc1: add rsp,0x8
0x6fc5: mov rax,rbx
0x6fc8: pop rbx
0x6fc9: pop rbp
0x6fca: ret 
0x6fd0: sub rax,0x1
0x6fd4: mov byte ptr [rax],0x0
0x6fd7: cmp rbx,rax
0x6fda: jne 0x6fbb
0x6fdc: jmp 0x6fc1
0x7170: test rdi,rdi
0x7173: je 0x7190
0x7175: mov rsi,rdi
0x7178: lea rdi,[rip+0x16a1]
0x717f: mov edx,0x1
0x7184: jmp 0x18e0
0x7190: lea rdi,[rip+0x1689]
0x7197: jmp 0x1bc0
0x71a0: test rdi,rdi
0x71a3: je 0x71c8
0x71a5: push rbx
0x71a6: nop word ptr cs:[rax+rax]
0x71b0: mov rbx,qword ptr [rdi]
0x71b3: call 0x1850
0x71b8: test rbx,rbx
0x71bb: mov rdi,rbx
0x71be: jne 0x71b0
0x71c0: pop rbx
0x71c1: ret 
0x71c8: rep ret 
0x71d0: push r13
0x71d2: push r12
0x71d4: push rbp
0x71d5: push rbx
0x71d6: mov rbp,rdi
0x71d9: sub rsp,0x8
0x71dd: call 0x1880
0x71e2: cmp byte ptr [rbp+0x8],0x0
0x71e6: mov rbx,rax
0x71e9: mov r12d,dword ptr [rax]
0x71ec: lea rdi,[rbp+0x9]
0x71f0: jne 0x71f4
0x71f2: xor edi,edi
0x71f4: call 0x7170
0x71f9: test eax,eax
0x71fb: je 0x7220
0x71fd: mov r12d,dword ptr [rbx]
0x7200: xor r13d,r13d
0x7203: mov rdi,rbp
0x7206: call 0x71a0
0x720b: mov dword ptr [rbx],r12d
0x720e: add rsp,0x8
0x7212: mov eax,r13d
0x7215: pop rbx
0x7216: pop rbp
0x7217: pop r12
0x7219: pop r13
0x721b: ret 
0x7220: call 0x1a80
0x7225: mov r13d,0x1
0x722b: jmp 0x7203
0x7230: test rdi,rdi
0x7233: push r12
0x7235: push rbp
0x7236: push rbx
0x7237: je 0x7298
0x7239: mov r12,rdi
0x723c: call 0x1970
0x7241: lea rbp,[rax+0x1]
0x7245: mov edi,0x76
0x724a: cmp rbp,0x76
0x724e: cmovae rdi,rbp
0x7252: add rdi,0x11
0x7256: and rdi,-0x8
0x725a: call 0x1ad0
0x725f: test rax,rax
0x7262: mov rbx,rax
0x7265: je 0x728b
0x7267: mov qword ptr [rax],0x0
0x726e: lea rdi,[rbx+0x9]
0x7272: mov eax,0x1
0x7277: mov word ptr [rbx+0x8],ax
0x727b: mov rdx,rbp
0x727e: mov rsi,r12
0x7281: call 0x1a70
0x7286: mov byte ptr [rbx+rbp+0x9],0x0
0x728b: mov rax,rbx
0x728e: pop rbx
0x728f: pop rbp
0x7290: pop r12
0x7292: ret 
0x7298: mov edi,0x80
0x729d: call 0x1ad0
0x72a2: test rax,rax
0x72a5: mov rbx,rax
0x72a8: je 0x728b
0x72aa: xor edx,edx
0x72ac: mov qword ptr [rbx],0x0
0x72b3: mov rax,rbx
0x72b6: mov word ptr [rbx+0x8],dx
0x72ba: pop rbx
0x72bb: pop rbp
0x72bc: pop r12
0x72be: ret 
0x72c0: push r15
0x72c2: push r14
0x72c4: mov eax,0x1
0x72c9: push r13
0x72cb: push r12
0x72cd: push rbp
0x72ce: push rbx
0x72cf: sub rsp,0x8
0x72d3: mov rbp,qword ptr [rsi+0x30]
0x72d7: test rbp,rbp
0x72da: je 0x7370
0x72e0: cmp rsi,rbp
0x72e3: mov r12,rdi
0x72e6: mov r13,rsi
0x72e9: ja 0x72f4
0x72eb: lea rdx,[rsi+0x38]
0x72ef: cmp rbp,rdx
0x72f2: jb 0x7370
0x72f4: cmp byte ptr [rbp],0x0
0x72f8: lea rbx,[r12+0x9]
0x72fd: je 0x7360
0x72ff: nop 
0x7300: mov rsi,rbp
0x7303: mov rdi,rbx
0x7306: call 0x1a50
0x730b: test eax,eax
0x730d: je 0x7367
0x730f: cmp byte ptr [rbx],0x0
0x7312: jne 0x7326
0x7314: lea r14,[r12+0x9]
0x7319: cmp r14,rbx
0x731c: jne 0x7380
0x731e: cmp byte ptr [r12+0x8],0x0
0x7324: je 0x7380
0x7326: mov rdi,rbx
0x7329: call 0x1970
0x732e: lea rbx,[rbx+rax+0x1]
0x7333: cmp byte ptr [rbx],0x0
0x7336: jne 0x7300
0x7338: mov rax,qword ptr [r12]
0x733c: test rax,rax
0x733f: je 0x7300
0x7341: lea rbx,[rax+0x9]
0x7345: mov rsi,rbp
0x7348: mov r12,rax
0x734b: mov rdi,rbx
0x734e: call 0x1a50
0x7353: test eax,eax
0x7355: jne 0x730f
0x7357: jmp 0x7367
0x7360: lea rbx,[rip+0x119a]
0x7367: mov qword ptr [r13+0x30],rbx
0x736b: mov eax,0x1
0x7370: add rsp,0x8
0x7374: pop rbx
0x7375: pop rbp
0x7376: pop r12
0x7378: pop r13
0x737a: pop r14
0x737c: pop r15
0x737e: ret 
0x7380: mov rdi,rbp
0x7383: call 0x1970
0x7388: lea rdx,[rax+0x1]
0x738c: mov r15,rax
0x738f: mov rax,rbx
0x7392: sub rax,r14
0x7395: mov rcx,rax
0x7398: not rcx
0x739b: cmp rcx,rdx
0x739e: jb 0x73d0
0x73a0: add rax,rdx
0x73a3: cmp rax,0x76
0x73a7: jbe 0x73e0
0x73a9: mov rdi,rbp
0x73ac: call 0x7230
0x73b1: mov rbx,rax
0x73b4: mov qword ptr [r12],rax
0x73b8: xor eax,eax
0x73ba: test rbx,rbx
0x73bd: je 0x7370
0x73bf: mov byte ptr [rbx+0x8],0x0
0x73c3: add rbx,0x9
0x73c7: jmp 0x7367
0x73d0: call 0x1880
0x73d5: mov dword ptr [rax],0xc
0x73db: xor eax,eax
0x73dd: jmp 0x7370
0x73e0: mov rsi,rbp
0x73e3: mov rdi,rbx
0x73e6: call 0x1a70
0x73eb: mov byte ptr [rbx+r15+0x1],0x0
0x73f1: jmp 0x7367
0x7400: push r12
0x7402: push rbp
0x7403: mov rbp,rdi
0x7406: push rbx
0x7407: lea rdi,[rip+0x1412]
0x740e: sub rsp,0x10
0x7412: call 0x1840
0x7417: test rax,rax
0x741a: mov rbx,rax
0x741d: je 0x74b8
0x7423: cmp byte ptr [rbp+0x8],0x0
0x7427: jne 0x7490
0x7429: mov rdi,rbx
0x742c: call 0x7230
0x7431: test rax,rax
0x7434: mov r12,rax
0x7437: je 0x747d
0x7439: xor edi,edi
0x743b: cmp byte ptr [rbp+0x8],0x0
0x743f: je 0x7445
0x7441: lea rdi,[rbp+0x9]
0x7445: call 0x7170
0x744a: test eax,eax
0x744c: je 0x74d8
0x7452: call 0x1880
0x7457: cmp r12,0x1
0x745b: mov ebx,dword ptr [rax]
0x745d: je 0x7478
0x745f: mov rdi,r12
0x7462: mov qword ptr [rsp+0x8],rax
0x7467: call 0x71a0
0x746c: mov rax,qword ptr [rsp+0x8]
0x7471: nop dword ptr [rax]
0x7478: mov dword ptr [rax],ebx
0x747a: xor r12d,r12d
0x747d: add rsp,0x10
0x7481: mov rax,r12
0x7484: pop rbx
0x7485: pop rbp
0x7486: pop r12
0x7488: ret 
0x7490: lea rdi,[rbp+0x9]
0x7494: mov rsi,rax
0x7497: mov r12d,0x1
0x749d: call 0x1a50
0x74a2: test eax,eax
0x74a4: jne 0x7429
0x74a6: add rsp,0x10
0x74aa: mov rax,r12
0x74ad: pop rbx
0x74ae: pop rbp
0x74af: pop r12
0x74b1: ret 
0x74b8: cmp byte ptr [rbp+0x8],0x0
0x74bc: mov r12d,0x1
0x74c2: jne 0x7429
0x74c8: add rsp,0x10
0x74cc: mov rax,r12
0x74cf: pop rbx
0x74d0: pop rbp
0x74d1: pop r12
0x74d3: ret 
0x74d8: call 0x1a80
0x74dd: jmp 0x747d
0x74e0: cmp rdi,0x1
0x74e4: je 0x74eb
0x74e6: jmp 0x71a0
0x74eb: ret 
0x74f0: push r13
0x74f2: push r12
0x74f4: push rbp
0x74f5: push rbx
0x74f6: mov rbp,rsi
0x74f9: sub rsp,0x8
0x74fd: test rdi,rdi
0x7500: je 0x7570
0x7502: mov r13,rdx
0x7505: mov rbx,rdi
0x7508: call 0x7400
0x750d: test rax,rax
0x7510: mov r12,rax
0x7513: je 0x755e
0x7515: mov rsi,r13
0x7518: mov rdi,rbp
0x751b: call 0x18b0
0x7520: test rax,rax
0x7523: je 0x7550
0x7525: mov rsi,r13
0x7528: mov rdi,rbx
0x752b: call 0x72c0
0x7530: test al,al
0x7532: je 0x7550
0x7534: cmp r12,0x1
0x7538: jne 0x7585
0x753a: add rsp,0x8
0x753e: mov rax,r13
0x7541: pop rbx
0x7542: pop rbp
0x7543: pop r12
0x7545: pop r13
0x7547: ret 
0x7550: cmp r12,0x1
0x7554: je 0x755e
0x7556: mov rdi,r12
0x7559: call 0x71d0
0x755e: add rsp,0x8
0x7562: xor eax,eax
0x7564: pop rbx
0x7565: pop rbp
0x7566: pop r12
0x7568: pop r13
0x756a: ret 
0x7570: add rsp,0x8
0x7574: mov rdi,rbp
0x7577: mov rsi,rdx
0x757a: pop rbx
0x757b: pop rbp
0x757c: pop r12
0x757e: pop r13
0x7580: jmp 0x19e0
0x7585: mov rdi,r12
0x7588: call 0x71d0
0x758d: test al,al
0x758f: jne 0x753a
0x7591: jmp 0x755e
0x75a0: push r12
0x75a2: push rbp
0x75a3: push rbx
0x75a4: mov rbx,rsi
0x75a7: sub rsp,0x50
0x75ab: mov rax,qword ptr fs:0x28
0x75b4: mov qword ptr [rsp+0x48],rax
0x75b9: xor eax,eax
0x75bb: test rdi,rdi
0x75be: je 0x76c0
0x75c4: mov rbp,rdi
0x75c7: call 0x7400
0x75cc: test rax,rax
0x75cf: mov r12,rax
0x75d2: je 0x76d0
0x75d8: mov rdi,rbx
0x75db: call 0x1b00
0x75e0: cmp rax,-0x1
0x75e4: mov qword ptr [rsp+0x8],rax
0x75e9: je 0x7640
0x75ea: push rbp
0x75eb: mov rsi,rbx
0x75ee: mov rdi,rbp
0x75f1: call 0x72c0
0x75f6: test al,al
0x75f8: jne 0x7603
0x75fa: mov qword ptr [rsp+0x8],-0x1
0x7603: cmp r12,0x1
0x7607: je 0x7619
0x7609: mov rdi,r12
0x760c: call 0x71d0
0x7611: test al,al
0x7613: je 0x76d0
0x7619: mov rax,qword ptr [rsp+0x8]
0x761e: mov rcx,qword ptr [rsp+0x48]
0x7623: xor rcx,qword ptr fs:0x28
0x762c: jne 0x76dc
0x7632: add rsp,0x50
0x7636: pop rbx
0x7637: pop rbp
0x7638: pop r12
0x763a: ret 
0x7640: lea rsi,[rsp+0x10]
0x7645: lea rdi,[rsp+0x8]
0x764a: call 0x18b0
0x764f: test rax,rax
0x7652: je 0x7603
0x7654: mov eax,dword ptr [rbx]
0x7656: mov edx,dword ptr [rbx+0x4]
0x7659: xor eax,dword ptr [rsp+0x10]
0x765d: xor edx,dword ptr [rsp+0x14]
0x7661: mov ecx,dword ptr [rsp+0x30]
0x7665: or eax,edx
0x7667: mov edx,dword ptr [rbx+0x8]
0x766a: xor edx,dword ptr [rsp+0x18]
0x766e: or eax,edx
0x7670: mov edx,dword ptr [rbx+0xc]
0x7673: xor edx,dword ptr [rsp+0x1c]
0x7677: or eax,edx
0x7679: mov edx,dword ptr [rbx+0x10]
0x767c: xor edx,dword ptr [rsp+0x20]
0x7680: or eax,edx
0x7682: mov edx,dword ptr [rbx+0x14]
0x7685: xor edx,dword ptr [rsp+0x24]
0x7689: or eax,edx
0x768b: mov edx,dword ptr [rbx+0x20]
0x768e: test edx,edx
0x7690: sete dil
0x7694: test ecx,ecx
0x7696: sete sil
0x769a: cmp dil,sil
0x769d: je 0x76ab
0x769f: test edx,edx
0x76a1: js 0x76ab
0x76a3: test ecx,ecx
0x76a5: jns 0x7603
0x76ab: test eax,eax
0x76ad: je 0x75eb
0x76b3: jmp 0x7603
0x76c0: mov rdi,rsi
0x76c3: call 0x1b50
0x76c8: jmp 0x761e
0x76d0: mov rax,-0x1
0x76d7: jmp 0x761e
0x76dc: call 0x1980
0x76e1: nop word ptr cs:[rax+rax]
0x76eb: nop dword ptr [rax+rax]
0x76f0: push r12
0x76f2: push rbp
0x76f3: mov rbp,rdi
0x76f6: push rbx
0x76f7: call 0x18d0
0x76fc: mov ebx,dword ptr [rbp]
0x76ff: mov rdi,rbp
0x7702: mov r12,rax
0x7705: call 0x6dd0
0x770a: and ebx,0x20
0x770d: test ebx,ebx
0x770f: jne 0x7728
0x7711: test eax,eax
0x7713: je 0x771f
0x7715: test r12,r12
0x7718: mov eax,0xffffffff
0x771d: je 0x7758
0x771f: pop rbx
0x7720: pop rbp
0x7721: pop r12
0x7723: ret 
0x7728: test eax,eax
0x772a: jne 0x7748
0x772c: call 0x1880
0x7731: mov dword ptr [rax],0x0
0x7737: mov eax,0xffffffff
0x773c: pop rbx
0x773d: pop rbp
0x773e: pop r12
0x7740: ret 
0x7748: pop rbx
0x7749: mov eax,0xffffffff
0x774e: pop rbp
0x774f: pop r12
0x7751: ret 
0x7758: call 0x1880
0x775d: cmp dword ptr [rax],0x9
0x7760: pop rbx
0x7761: pop rbp
0x7762: pop r12
0x7764: setne al
0x7767: movzx eax,al
0x776a: neg eax
0x776c: ret 
0x7770: sub rsp,0x8
0x7774: xor esi,esi
0x7776: call 0x1b30
0x777b: mov rdx,rax
0x777e: mov eax,0x1
0x7783: test rdx,rdx
0x7786: je 0x77a5
0x7788: lea rdi,[rip+0x5ce]
0x778f: mov ecx,0x2
0x7794: mov rsi,rdx
0x7797: rep cmpsb [rsi],es:[rdi]
0x7799: seta cl
0x779c: sbb cl,0x0
0x779f: xor eax,eax
0x77a1: test cl,cl
0x77a3: jne 0x77b0
0x77a5: add rsp,0x8
0x77a9: ret 
0x77b0: lea rdi,[rip+0x106c]
0x77b7: mov ecx,0x6
0x77bc: mov rsi,rdx
0x77bf: rep cmpsb [rsi],es:[rdi]
0x77c1: seta al
0x77c4: sbb al,0x0
0x77c6: test al,al
0x77c8: setne al
0x77cb: add rsp,0x8
0x77cf: ret 
0x77d0: sub rsp,0x8
0x77d4: mov edi,0xe
0x77d9: call 0x1af0
0x77de: test rax,rax
0x77e1: je 0x7800
0x77e3: cmp byte ptr [rax],0x0
0x77e6: lea rdx,[rip+0x103c]
0x77ed: cmove rax,rdx
0x77f1: add rsp,0x8
0x77f5: ret 
0x7800: lea rax,[rip+0x1022]
0x7807: add rsp,0x8
0x780b: ret 
0x7810: push r15
0x7812: push r14
0x7814: mov r15,rdx
0x7817: push r13
0x7819: push r12
0x781b: lea r12,[rip+0x2022ce]
0x7822: push rbp
0x7823: lea rbp,[rip+0x2022ce]
0x782a: push rbx
0x782b: mov r13d,edi
0x782e: mov r14,rsi
0x7831: sub rbp,r12
0x7834: sub rsp,0x8
0x7838: sar rbp,0x3
0x783c: call 0x17f8
0x7841: test rbp,rbp
0x7844: je 0x7866
0x7846: xor ebx,ebx
0x7848: nop dword ptr [rax+rax]
0x7850: mov rdx,r15
0x7853: mov rsi,r14
0x7856: mov edi,r13d
0x7859: call qword ptr [r12+rbx*8]
0x785d: add rbx,0x1
0x7861: cmp rbp,rbx
0x7864: jne 0x7850
0x7866: add rsp,0x8
0x786a: pop rbx
0x786b: pop rbp
0x786c: pop r12
0x786e: pop r13
0x7870: pop r14
0x7872: pop r15
0x7874: ret 
0x7880: rep ret 
