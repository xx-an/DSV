0x14a8: sub rsp,0x8
0x14ac: mov rax,qword ptr [rip+0x207b2d]
0x14b3: test rax,rax
0x14b6: je 0x14ba
0x14b8: call rax
0x14ba: add rsp,0x8
0x14be: ret 
0x14c6: jmp qword ptr [rip+0x20796c]
0x14d0: jmp qword ptr [rip+0x20796a]
0x1510: jmp qword ptr [rip+0x20794a]
0x1520: jmp qword ptr [rip+0x207942]
0x1590: jmp qword ptr [rip+0x20790a]
0x15a0: jmp qword ptr [rip+0x207902]
0x15c0: jmp qword ptr [rip+0x2078f2]
0x1610: jmp qword ptr [rip+0x2078ca]
0x1660: jmp qword ptr [rip+0x2078a2]
0x1680: jmp qword ptr [rip+0x207892]
0x16a0: jmp qword ptr [rip+0x207882]
0x16e0: jmp qword ptr [rip+0x207862]
0x17c0: jmp qword ptr [rip+0x2077f2]
0x17d0: jmp qword ptr [rip+0x2077ea]
0x17f0: jmp qword ptr [rip+0x2077fa]
0x19af: mov rbx,rax
0x19b2: call 0x14f0
0x19b7: mov esi,dword ptr [rax]
0x19b9: lea rdx,[rip+0x48c4]
0x19c0: mov rcx,rbx
0x19c3: mov edi,0x1
0x19c8: xor eax,eax
0x19ca: call 0x1750
0x1e20: add eax,0x1
0x1e23: jne 0x1d49
0x1e29: lea rsi,[rip+0x3e9a]
0x1e30: mov edx,0x5
0x1e35: xor edi,edi
0x1e37: call 0x1570
0x1e3c: mov rbx,rax
0x1e3f: call 0x14f0
0x1e44: mov esi,dword ptr [rax]
0x1e46: mov rdx,rbx
0x1e49: mov edi,0x1
0x1e4e: xor eax,eax
0x1e50: call 0x1750
0x1ea9: mov esi,dword ptr [rbx]
0x1eab: lea rdx,[rip+0x43d2]
0x1eb2: mov rcx,rax
0x1eb5: mov edi,0x1
0x1eba: xor eax,eax
0x1ebc: call 0x1750
0x1f3d: call 0x15a0
0x1f86: lea rsi,[rip+0x3d1e]
0x1f8d: mov rbx,rax
0x1f90: mov edx,0x5
0x1f95: xor edi,edi
0x1f97: call 0x1570
0x1f9c: mov rcx,rbx
0x1f9f: mov rdx,rax
0x1fa2: xor esi,esi
0x1fa4: xor edi,edi
0x1fa6: xor eax,eax
0x1fa8: call 0x1750
0x1fc4: add eax,0x1
0x1fc7: jne 0x1c97
0x1fcd: lea rsi,[rip+0x3cf6]
0x1fd4: mov edx,0x5
0x1fd9: xor edi,edi
0x1fdb: call 0x1570
0x1fe0: mov rbx,rax
0x1fe3: call 0x14f0
0x1fe8: mov esi,dword ptr [rax]
0x1fea: mov rdx,rbx
0x1fed: mov edi,0x1
0x1ff2: xor eax,eax
0x1ff4: call 0x1750
0x1ff9: nop dword ptr [rax]
0x202a: hlt 
0x202b: nop dword ptr [rax+rax]
0x2030: lea rdi,[rip+0x207049]
0x2037: push rbp
0x2038: lea rax,[rip+0x207041]
0x203f: cmp rax,rdi
0x2042: mov rbp,rsp
0x2045: je 0x2060
0x2047: mov rax,qword ptr [rip+0x206f82]
0x204e: test rax,rax
0x2051: je 0x2060
0x2053: pop rbp
0x2054: jmp rax
0x2060: pop rbp
0x2061: ret 
0x2070: lea rdi,[rip+0x207009]
0x2077: lea rsi,[rip+0x207002]
0x207e: push rbp
0x207f: sub rsi,rdi
0x2082: mov rbp,rsp
0x2085: sar rsi,0x3
0x2089: mov rax,rsi
0x208c: shr rax,0x3f
0x2090: add rsi,rax
0x2093: sar rsi, 1
0x2096: je 0x20b0
0x2098: mov rax,qword ptr [rip+0x206f49]
0x209f: test rax,rax
0x20a2: je 0x20b0
0x20a4: pop rbp
0x20a5: jmp rax
0x20b0: pop rbp
0x20b1: ret 
0x20d1: push rbp
0x20d2: mov rbp,rsp
0x20d5: je 0x20e3
0x20d7: mov rdi,qword ptr [rip+0x206f2a]
0x20de: call 0x17f0
0x20e3: call 0x2030
0x20e8: mov byte ptr [rip+0x206fd9],0x1
0x20ef: pop rbp
0x20f0: ret 
0x2100: push rbp
0x2101: mov rbp,rsp
0x2104: pop rbp
0x2105: jmp 0x2070
0x27c0: push r14
0x27c2: push r13
0x27c4: mov r13,rdx
0x27c7: lea rdx,[rsi+0x2]
0x27cb: push r12
0x27cd: push rbp
0x27ce: push rbx
0x27cf: movabsq rbx,-0x5555555555555555
0x27d9: mov rax,rdx
0x27dc: mul rbx
0x27df: shr rdx, 1
0x27e2: lea rbx,[rdx*4]
0x27ea: lea rbp,[rbx+0x1]
0x27ee: cmp rsi,rbp
0x27f1: jbe 0x2810
0x27f3: mov qword ptr [r13],0x0
0x27fb: xor ebp,ebp
0x27fd: pop rbx
0x27fe: mov rax,rbp
0x2801: pop rbp
0x2802: pop r12
0x2804: pop r13
0x2806: pop r14
0x2808: ret 
0x2810: mov r14,rdi
0x2813: mov rdi,rbp
0x2816: mov r12,rsi
0x2819: call 0x16c0
0x281e: test rax,rax
0x2821: mov qword ptr [r13],rax
0x2825: je 0x27fd
0x2827: mov rcx,rbp
0x282a: mov rdx,rax
0x282d: mov rbp,rbx
0x2830: mov rsi,r12
0x2833: mov rdi,r14
0x2836: call 0x2600
0x283b: pop rbx
0x283c: mov rax,rbp
0x283f: pop rbp
0x2840: pop r12
0x2842: pop r13
0x2844: pop r14
0x2846: ret 
0x2940: mov rdi,r12
0x2ab6: jmp 0x2a5f
0x2ad8: sub rdx,r15
0x2adb: mov qword ptr [rsp+0x20],r15
0x2ae0: add qword ptr [rsp+0x18],rdx
0x2ae5: lea r15,[r12+r13]
0x2ae9: jmp 0x2940
0x2af0: mov byte ptr [rsp+0x6],0x1
0x2af5: mov byte ptr [rsp+0x5],0x1
0x2afa: jmp 0x28e1
0x2aff: mov rdx,r15
0x2b02: mov eax,0x1
0x2b07: jmp 0x2998
0x2b28: call 0x15a0
0x2b2d: nop dword ptr [rax]
0x2b30: push r14
0x2b32: push r13
0x2b34: mov r14,rdx
0x2b37: push r12
0x2b39: push rbp
0x2b3a: mov r12,rdi
0x2b3d: push rbx
0x2b3e: mov r13,rsi
0x2b41: mov rbx,rcx
0x2b44: mov rbp,r8
0x2b47: sub rsp,0x20
0x2b4b: mov rax,qword ptr fs:0x28
0x2b54: mov qword ptr [rsp+0x18],rax
0x2b59: xor eax,eax
0x2b5b: mov rax,rdx
0x2b5e: shr rax,0x2
0x2b62: lea rdi,[rax+rax*2+0x3]
0x2b67: mov qword ptr [rsp+0x10],rdi
0x2b6c: call 0x16c0
0x2b71: test rax,rax
0x2b74: mov qword ptr [rbx],rax
0x2b77: je 0x2ba8
0x2b79: lea r8,[rsp+0x10]
0x2b7e: mov rcx,rax
0x2b81: mov rdx,r14
0x2b84: mov rsi,r13
0x2b87: mov rdi,r12
0x2b8a: call 0x2880
0x2b8f: test al,al
0x2b91: je 0x2bd0
0x2b93: test rbp,rbp
0x2b96: je 0x2ba8
0x2b98: mov rdx,qword ptr [rsp+0x10]
0x2b9d: mov qword ptr [rbp],rdx
0x2ba1: jmp 0x2bad
0x2ba8: mov eax,0x1
0x2bad: mov rcx,qword ptr [rsp+0x18]
0x2bb2: xor rcx,qword ptr fs:0x28
0x2bbb: jne 0x2bea
0x2bbd: add rsp,0x20
0x2bc1: pop rbx
0x2bc2: pop rbp
0x2bc3: pop r12
0x2bc5: pop r13
0x2bc7: pop r14
0x2bc9: ret 
0x2bd0: mov rdi,qword ptr [rbx]
0x2bd3: mov byte ptr [rsp+0xf],al
0x2bd7: call 0x14d0
0x2bdc: mov qword ptr [rbx],0x0
0x2be3: movzx eax,byte ptr [rsp+0xf]
0x2be8: jmp 0x2bad
0x2bea: call 0x15a0
0x2bef: nop 
0x2bf0: mov qword ptr [rip+0x2064e1],rdi
0x2bf7: ret 
0x2c00: mov byte ptr [rip+0x2064c9],dil
0x2c07: ret 
0x2c10: push rbp
0x2c11: push rbx
0x2c12: sub rsp,0x8
0x2c16: mov rdi,qword ptr [rip+0x20646b]
0x2c1d: call 0x59e0
0x2c22: test eax,eax
0x2c24: je 0x2c3c
0x2c26: call 0x14f0
0x2c2b: cmp byte ptr [rip+0x20649e],0x0
0x2c32: mov rbx,rax
0x2c35: je 0x2c53
0x2c37: cmp dword ptr [rax],0x20
0x2c3a: jne 0x2c53
0x2c3c: mov rdi,qword ptr [rip+0x20647d]
0x2c43: call 0x59e0
0x2c48: test eax,eax
0x2c4a: jne 0x2c92
0x2c4c: add rsp,0x8
0x2c50: pop rbx
0x2c51: pop rbp
0x2c52: ret 
0x2c53: lea rsi,[rip+0x3070]
0x2c5a: xor edi,edi
0x2c5c: mov edx,0x5
0x2c61: call 0x1570
0x2c66: mov rdi,qword ptr [rip+0x20646b]
0x2c6d: mov rbp,rax
0x2c70: test rdi,rdi
0x2c73: je 0x2c9d
0x2c75: call 0x4810
0x2c7a: mov esi,dword ptr [rbx]
0x2c7c: lea rdx,[rip+0x35fd]
0x2c83: mov rcx,rax
0x2c86: mov r8,rbp
0x2c89: xor edi,edi
0x2c8b: xor eax,eax
0x2c8d: call 0x1750
0x2c92: mov edi,dword ptr [rip+0x206380]
0x2c98: call 0x1510
0x2c9d: mov esi,dword ptr [rbx]
0x2c9f: lea rdx,[rip+0x35de]
0x2ca6: mov rcx,rax
0x2ca9: xor edi,edi
0x2cab: xor eax,eax
0x2cad: call 0x1750
0x2cb2: jmp 0x2c92
0x2cc0: jmp 0x1640
0x2d9f: nop 
0x2da0: push rbp
0x2da1: push rbx
0x2da2: mov rbp,rdi
0x2da5: mov ebx,esi
0x2da7: sub rsp,0x8
0x2dab: call 0x5ac0
0x2db0: movzx edx,byte ptr [rax]
0x2db3: and edx,-0x21
0x2db6: cmp dl,0x55
0x2db9: je 0x2e30
0x2dbb: cmp dl,0x47
0x2dbe: je 0x2de0
0x2dc0: lea rax,[rip+0x3514]
0x2dc7: lea rdx,[rip+0x350f]
0x2dce: cmp ebx,0x9
0x2dd1: cmovne rax,rdx
0x2dd5: add rsp,0x8
0x2dd9: pop rbx
0x2dda: pop rbp
0x2ddb: ret 
0x2de0: movzx edx,byte ptr [rax+0x1]
0x2de4: and edx,-0x21
0x2de7: cmp dl,0x42
0x2dea: jne 0x2dc0
0x2dec: cmp byte ptr [rax+0x2],0x31
0x2df0: jne 0x2dc0
0x2df2: cmp byte ptr [rax+0x3],0x38
0x2df6: jne 0x2dc0
0x2df8: cmp byte ptr [rax+0x4],0x30
0x2dfc: jne 0x2dc0
0x2dfe: cmp byte ptr [rax+0x5],0x33
0x2e02: jne 0x2dc0
0x2e04: cmp byte ptr [rax+0x6],0x30
0x2e08: jne 0x2dc0
0x2e0a: cmp byte ptr [rax+0x7],0x0
0x2e0e: jne 0x2dc0
0x2e10: cmp byte ptr [rbp],0x60
0x2e14: lea rax,[rip+0x34b9]
0x2e1b: lea rdx,[rip+0x34b6]
0x2e22: cmovne rax,rdx
0x2e26: add rsp,0x8
0x2e2a: pop rbx
0x2e2b: pop rbp
0x2e2c: ret 
0x2e30: movzx edx,byte ptr [rax+0x1]
0x2e34: and edx,-0x21
0x2e37: cmp dl,0x54
0x2e3a: jne 0x2dc0
0x2e3c: movzx edx,byte ptr [rax+0x2]
0x2e40: and edx,-0x21
0x2e43: cmp dl,0x46
0x2e46: jne 0x2dc0
0x2e4c: cmp byte ptr [rax+0x3],0x2d
0x2e50: jne 0x2dc0
0x2e56: cmp byte ptr [rax+0x4],0x38
0x2e5a: jne 0x2dc0
0x2e60: cmp byte ptr [rax+0x5],0x0
0x2e64: jne 0x2dc0
0x2e6a: cmp byte ptr [rbp],0x60
0x2e6e: lea rax,[rip+0x3457]
0x2e75: lea rdx,[rip+0x3454]
0x2e7c: cmovne rax,rdx
0x2e80: add rsp,0x8
0x2e84: pop rbx
0x2e85: pop rbp
0x2e86: ret 
0x2f63: xor r11d,r11d
0x2f66: mov rax,rbp
0x2f69: mov r8d,r12d
0x2f6c: mov rbp,r11
0x2f6f: mov r11,rax
0x2f72: nop word ptr [rax+rax]
0x2f78: cmp r11,rbp
0x2f7b: setne r12b
0x2f7f: cmp r11,-0x1
0x2f83: jne 0x2f92
0x2f85: mov rax,qword ptr [rsp+0x10]
0x2f8a: cmp byte ptr [rax+rbp],0x0
0x2f8e: setne r12b
0x2f92: test r12b,r12b
0x2f95: je 0x35f0
0x2f9b: cmp dword ptr [rsp+0x8],0x2
0x2fa0: mov rdi,qword ptr [rsp+0x10]
0x2fa5: lea r9,[rdi+rbp]
0x2fa9: setne al
0x2fac: and al,byte ptr [rsp+0xd]
0x2fb0: mov r10d,eax
0x2fb3: je 0x3060
0x2fb9: mov rax,qword ptr [rsp+0x18]
0x2fbe: test rax,rax
0x2fc1: je 0x33f0
0x2fc7: cmp r11,-0x1
0x2fcb: lea rbx,[rbp+rax]
0x2fd0: jne 0x3000
0x2fd2: cmp rax,0x1
0x2fd6: jbe 0x3000
0x2fd8: mov byte ptr [rsp+0x38],r8b
0x2fdd: mov byte ptr [rsp+0x30],r10b
0x2fe2: mov qword ptr [rsp+0x28],r9
0x2fe7: call 0x1590
0x2fec: movzx r8d,byte ptr [rsp+0x38]
0x2ff2: movzx r10d,byte ptr [rsp+0x30]
0x2ff8: mov r11,rax
0x2ffb: mov r9,qword ptr [rsp+0x28]
0x3000: cmp rbx,r11
0x3003: mov byte ptr [rsp+0x28],r10b
0x3008: ja 0x35c0
0x300e: mov rdx,qword ptr [rsp+0x18]
0x3013: mov rsi,qword ptr [rsp+0x48]
0x3018: mov rdi,r9
0x301b: mov qword ptr [rsp+0x40],r11
0x3020: mov byte ptr [rsp+0x38],r8b
0x3025: mov qword ptr [rsp+0x30],r9
0x302a: call 0x1660
0x302f: test eax,eax
0x3031: mov r9,qword ptr [rsp+0x30]
0x3036: movzx r8d,byte ptr [rsp+0x38]
0x303c: mov r11,qword ptr [rsp+0x40]
0x3041: jne 0x35c0
0x3047: cmp byte ptr [rsp+0xf],0x0
0x304c: movzx r10d,byte ptr [rsp+0x28]
0x3052: jne 0x3fd5
0x3058: nop dword ptr [rax+rax]
0x3060: movzx ebx,byte ptr [r9]
0x3064: cmp bl,0x7e
0x3067: ja 0x3388
0x306d: lea rcx,[rip+0x32f8]
0x3074: movzx edx,bl
0x3077: movsxd rax,dword ptr [rcx+rdx*4]
0x307b: add rax,rcx
0x307e: jmp rax
0x30b8: cmp byte ptr [rsp+0xd],0x1
0x30bd: jne 0x31d2
0x30c3: test dl,dl
0x30c5: jne 0x31d2
0x30cb: mov rsi,qword ptr [rsp+0x20]
0x30d0: test rsi,rsi
0x30d3: je 0x30e9
0x30d5: mov edx,ebx
0x30d7: shr dl,0x5
0x30da: movzx edx,dl
0x30dd: mov edx,dword ptr [rsi+rdx*4]
0x30e0: btl edx,ebx
0x30e3: jb 0x3233
0x30e9: test r10b,r10b
0x30ec: jne 0x3233
0x30f2: xor eax,0x1
0x30f5: add rbp,0x1
0x30f9: and eax,r8d
0x30fc: test al,al
0x30fe: je 0x3120
0x3100: cmp r13,r15
0x3103: jbe 0x310a
0x3105: mov byte ptr [r14+r15],0x27
0x310a: lea rax,[r15+0x1]
0x310e: cmp r13,rax
0x3111: jbe 0x3119
0x3113: mov byte ptr [r14+r15+0x1],0x27
0x3119: add r15,0x2
0x311d: xor r8d,r8d
0x3120: cmp r15,r13
0x3123: jae 0x3129
0x3125: mov byte ptr [r14+r15],bl
0x3129: movzx edi,byte ptr [rsp+0xe]
0x312e: add r15,0x1
0x3132: mov eax,0x0
0x3137: test r12b,r12b
0x313a: cmove edi,eax
0x313d: mov byte ptr [rsp+0xe],dil
0x3142: jmp 0x2f78
0x31d2: cmp byte ptr [rsp+0xf],0x0
0x31d7: jne 0x30cb
0x31dd: jmp 0x30e9
0x3233: cmp dword ptr [rsp+0x8],0x2
0x3238: sete dl
0x323b: cmp byte ptr [rsp+0xf],0x0
0x3240: mov eax,edx
0x3242: jne 0x3a98
0x3248: mov eax,r8d
0x324b: xor eax,0x1
0x324e: and al,dl
0x3250: je 0x3281
0x3252: cmp r13,r15
0x3255: jbe 0x325c
0x3257: mov byte ptr [r14+r15],0x27
0x325c: lea rdx,[r15+0x1]
0x3260: cmp r13,rdx
0x3263: jbe 0x326b
0x3265: mov byte ptr [r14+r15+0x1],0x24
0x326b: lea rdx,[r15+0x2]
0x326f: cmp r13,rdx
0x3272: jbe 0x327a
0x3274: mov byte ptr [r14+r15+0x2],0x27
0x327a: add r15,0x3
0x327e: mov r8d,eax
0x3281: cmp r13,r15
0x3284: jbe 0x328b
0x3286: mov byte ptr [r14+r15],0x5c
0x328b: add r15,0x1
0x328f: add rbp,0x1
0x3293: jmp 0x3120
0x3380: xor r10d,r10d
0x3383: nop dword ptr [rax+rax]
0x3388: cmp qword ptr [rsp+0x58],0x1
0x338e: jne 0x3738
0x3394: mov qword ptr [rsp+0x38],r11
0x3399: mov byte ptr [rsp+0x30],r8b
0x339e: mov byte ptr [rsp+0x28],r10b
0x33a3: call 0x17e0
0x33a8: mov rcx,qword ptr [rax]
0x33ab: movzx edx,bl
0x33ae: movzx r10d,byte ptr [rsp+0x28]
0x33b4: movzx r8d,byte ptr [rsp+0x30]
0x33ba: mov r11,qword ptr [rsp+0x38]
0x33bf: mov edi,0x1
0x33c4: movzx eax,word ptr [rcx+rdx*2]
0x33c8: and ax,0x4000
0x33cc: setne r12b
0x33d0: sete al
0x33d3: and al,byte ptr [rsp+0xd]
0x33d7: test al,al
0x33d9: jne 0x3d71
0x33df: cmp dword ptr [rsp+0x8],0x2
0x33e4: sete dl
0x33e7: jmp 0x30b8
0x33f0: movzx ebx,byte ptr [r9]
0x33f4: cmp bl,0x7e
0x33f7: ja 0x3380
0x33f9: lea rcx,[rip+0x3168]
0x3400: movzx edx,bl
0x3403: movsxd rax,dword ptr [rcx+rdx*4]
0x3407: add rax,rcx
0x340a: jmp rax
0x35c0: xor r10d,r10d
0x35c3: jmp 0x3060
0x35f0: cmp dword ptr [rsp+0x8],0x2
0x35f5: movzx ebx,byte ptr [rsp+0xf]
0x35fa: mov r12d,r8d
0x35fd: mov rbp,r11
0x3600: sete dl
0x3603: mov eax,ebx
0x3605: test r15,r15
0x3608: sete cl
0x360b: and eax,edx
0x360d: and al,cl
0x360f: jne 0x4076
0x3615: mov eax,ebx
0x3617: xor eax,0x1
0x361a: and dl,al
0x361c: je 0x3f8c
0x3622: cmp byte ptr [rsp+0x7c],0x0
0x3627: je 0x3f8a
0x362d: cmp byte ptr [rsp+0xe],0x0
0x3632: jne 0x402d
0x3638: test r13,r13
0x363b: sete al
0x363e: cmp qword ptr [rsp+0x50],0x0
0x3644: setne dl
0x3647: and al,dl
0x3649: je 0x406c
0x364f: mov r13,qword ptr [rsp+0x50]
0x3654: lea rbx,[rip+0x2c82]
0x365b: mov byte ptr [r14],0x27
0x365f: mov dword ptr [rsp+0x8],0x2
0x3667: mov r15d,0x1
0x366d: mov qword ptr [rsp+0x18],0x1
0x3676: mov byte ptr [rsp+0xf],0x0
0x367b: mov qword ptr [rsp+0x48],rbx
0x3680: mov byte ptr [rsp+0x7c],al
0x3684: jmp 0x2f63
0x3738: lea rax,[rsp+0xa0]
0x3740: cmp r11,-0x1
0x3744: mov qword ptr [rsp+0xa0],0x0
0x3750: mov qword ptr [rsp+0x28],rax
0x3755: jne 0x3784
0x3757: mov rdi,qword ptr [rsp+0x10]
0x375c: mov byte ptr [rsp+0x40],r8b
0x3761: mov byte ptr [rsp+0x38],r10b
0x3766: mov qword ptr [rsp+0x30],r9
0x376b: call 0x1590
0x3770: movzx r8d,byte ptr [rsp+0x40]
0x3776: movzx r10d,byte ptr [rsp+0x38]
0x377c: mov r11,rax
0x377f: mov r9,qword ptr [rsp+0x30]
0x3784: lea rax,[rsp+0x9c]
0x378c: xor ecx,ecx
0x378e: mov byte ptr [rsp+0x7e],bl
0x3792: mov byte ptr [rsp+0x7d],r8b
0x3797: mov rbx,rcx
0x379a: mov qword ptr [rsp+0x88],r9
0x37a2: mov qword ptr [rsp+0x38],rax
0x37a7: mov byte ptr [rsp+0x7f],r10b
0x37ac: mov qword ptr [rsp+0x80],r15
0x37b4: mov qword ptr [rsp+0x40],r14
0x37b9: mov qword ptr [rsp+0x70],r13
0x37be: mov qword ptr [rsp+0x30],r11
0x37c3: mov rax,qword ptr [rsp+0x10]
0x37c8: lea r14,[rbp+rbx]
0x37cd: mov rdx,qword ptr [rsp+0x30]
0x37d2: mov rcx,qword ptr [rsp+0x28]
0x37d7: mov rdi,qword ptr [rsp+0x38]
0x37dc: lea r13,[rax+r14]
0x37e0: sub rdx,r14
0x37e3: mov rsi,r13
0x37e6: call 0x5950
0x37eb: test rax,rax
0x37ee: mov r15,rax
0x37f1: je 0x3841
0x37f3: cmp rax,-0x1
0x37f7: je 0x3e15
0x37fd: cmp rax,-0x2
0x3801: je 0x3da1
0x3807: cmp dword ptr [rsp+0x8],0x2
0x380c: sete al
0x380f: and al,byte ptr [rsp+0xf]
0x3813: jne 0x39b0
0x3819: mov edi,dword ptr [rsp+0x9c]
0x3820: call 0x17d0
0x3825: mov rdi,qword ptr [rsp+0x28]
0x382a: test eax,eax
0x382c: mov eax,0x0
0x3831: cmove r12d,eax
0x3835: add rbx,r15
0x3838: call 0x17c0
0x383d: test eax,eax
0x383f: je 0x37c3
0x3841: mov edx,r12d
0x3844: mov rdi,rbx
0x3847: movzx r8d,byte ptr [rsp+0x7d]
0x384d: xor edx,0x1
0x3850: movzx ebx,byte ptr [rsp+0x7e]
0x3855: movzx r10d,byte ptr [rsp+0x7f]
0x385b: and dl,byte ptr [rsp+0xd]
0x385f: mov r15,qword ptr [rsp+0x80]
0x3867: mov r14,qword ptr [rsp+0x40]
0x386c: mov r13,qword ptr [rsp+0x70]
0x3871: mov r11,qword ptr [rsp+0x30]
0x3876: cmp rdi,0x1
0x387a: jbe 0x3e7b
0x3880: mov rcx,rdi
0x3883: xor esi,esi
0x3885: movzx r9d,byte ptr [rsp+0xf]
0x388b: add rcx,rbp
0x388e: mov rdi,qword ptr [rsp+0x10]
0x3893: jmp 0x394e
0x38a0: cmp dword ptr [rsp+0x8],0x2
0x38a5: sete al
0x38a8: test r9b,r9b
0x38ab: jne 0x3d60
0x38b1: mov esi,r8d
0x38b4: xor esi,0x1
0x38b7: and al,sil
0x38ba: je 0x38eb
0x38bc: cmp r13,r15
0x38bf: jbe 0x38c6
0x38c1: mov byte ptr [r14+r15],0x27
0x38c6: lea rsi,[r15+0x1]
0x38ca: cmp r13,rsi
0x38cd: jbe 0x38d5
0x38cf: mov byte ptr [r14+r15+0x1],0x24
0x38d5: lea rsi,[r15+0x2]
0x38d9: cmp r13,rsi
0x38dc: jbe 0x38e4
0x38de: mov byte ptr [r14+r15+0x2],0x27
0x38e4: add r15,0x3
0x38e8: mov r8d,eax
0x38eb: cmp r13,r15
0x38ee: jbe 0x38f5
0x38f0: mov byte ptr [r14+r15],0x5c
0x38f5: lea rax,[r15+0x1]
0x38f9: cmp r13,rax
0x38fc: jbe 0x390b
0x38fe: mov eax,ebx
0x3900: shr al,0x6
0x3903: add eax,0x30
0x3906: mov byte ptr [r14+r15+0x1],al
0x390b: lea rax,[r15+0x2]
0x390f: cmp r13,rax
0x3912: jbe 0x3924
0x3914: mov eax,ebx
0x3916: shr al,0x3
0x3919: and eax,0x7
0x391c: add eax,0x30
0x391f: mov byte ptr [r14+r15+0x2],al
0x3924: and ebx,0x7
0x3927: add rbp,0x1
0x392b: add r15,0x3
0x392f: add ebx,0x30
0x3932: cmp rbp,rcx
0x3935: jae 0x3120
0x393b: mov esi,edx
0x393d: cmp r13,r15
0x3940: jbe 0x3946
0x3942: mov byte ptr [r14+r15],bl
0x3946: movzx ebx,byte ptr [rdi+rbp]
0x394a: add r15,0x1
0x394e: test dl,dl
0x3950: jne 0x38a0
0x3956: mov eax,esi
0x3958: xor eax,0x1
0x395b: and eax,r8d
0x395e: test r10b,r10b
0x3961: je 0x3971
0x3963: cmp r13,r15
0x3966: jbe 0x396d
0x3968: mov byte ptr [r14+r15],0x5c
0x396d: add r15,0x1
0x3971: add rbp,0x1
0x3975: cmp rbp,rcx
0x3978: jae 0x30fc
0x397e: test al,al
0x3980: je 0x3d7e
0x3986: cmp r13,r15
0x3989: jbe 0x3990
0x398b: mov byte ptr [r14+r15],0x27
0x3990: lea rax,[r15+0x1]
0x3994: cmp r13,rax
0x3997: jbe 0x399f
0x3999: mov byte ptr [r14+r15+0x1],0x27
0x399f: add r15,0x2
0x39a3: xor r10d,r10d
0x39a6: xor r8d,r8d
0x39a9: jmp 0x393d
0x39b0: cmp r15,0x1
0x39b4: je 0x3819
0x39ba: mov rdi,qword ptr [rsp+0x10]
0x39bf: lea rcx,[rdi+r15]
0x39c3: lea rdx,[rdi+r14+0x1]
0x39c8: lea r8,[rcx+r14]
0x39cc: jmp 0x39dd
0x39d0: add rdx,0x1
0x39d4: cmp r8,rdx
0x39d7: je 0x3819
0x39dd: movzx ecx,byte ptr [rdx]
0x39e0: sub ecx,0x5b
0x39e3: cmp cl,0x21
0x39e6: ja 0x39d0
0x39e8: mov esi,0x1
0x39ed: shl rsi,cl
0x39f0: mov rcx,rsi
0x39f3: movabsq rsi,0x20000002b
0x39fd: test rcx,rsi
0x3a00: je 0x39d0
0x3a02: mov r14,qword ptr [rsp+0x40]
0x3a07: mov r13,qword ptr [rsp+0x70]
0x3a0c: mov rbp,qword ptr [rsp+0x30]
0x3a11: mov dword ptr [rsp+0x8],0x2
0x3a19: cmp byte ptr [rsp+0xd],0x0
0x3a1e: je 0x3a30
0x3a20: test al,al
0x3a22: mov eax,0x4
0x3a27: cmove eax,dword ptr [rsp+0x8]
0x3a2c: mov dword ptr [rsp+0x8],eax
0x3a30: sub rsp,0x8
0x3a34: mov rcx,rbp
0x3a37: mov rsi,r13
0x3a3a: push qword ptr [rsp+0x68]
0x3a3e: push qword ptr [rsp+0x78]
0x3a42: mov rdi,r14
0x3a45: push 0x0
0x3a47: mov r9d,dword ptr [rsp+0x98]
0x3a4f: mov r8d,dword ptr [rsp+0x28]
0x3a54: mov rdx,qword ptr [rsp+0x30]
0x3a59: and r9d,-0x3
0x3a5d: call 0x2e90
0x3a62: add rsp,0x20
0x3a66: mov r15,rax
0x3a69: mov rbx,qword ptr [rsp+0xa8]
0x3a71: xor rbx,qword ptr fs:0x28
0x3a7a: mov rax,r15
0x3a7d: jne 0x4083
0x3a83: add rsp,0xb8
0x3a8a: pop rbx
0x3a8b: pop rbp
0x3a8c: pop r12
0x3a8e: pop r13
0x3a90: pop r14
0x3a92: pop r15
0x3a94: ret 
0x3a98: mov rbp,r11
0x3a9b: jmp 0x3a19
0x3b01: test r13,r13
0x3b04: jne 0x409a
0x3b0a: lea rax,[rip+0x27cc]
0x3b11: mov qword ptr [rsp+0x50],0x0
0x3b1a: mov byte ptr [rsp+0xe],0x1
0x3b1f: mov byte ptr [rsp+0x7c],0x0
0x3b24: xor r12d,r12d
0x3b27: mov byte ptr [rsp+0xf],0x0
0x3b2c: mov qword ptr [rsp+0x18],0x1
0x3b35: mov qword ptr [rsp+0x48],rax
0x3b3a: mov r15d,0x1
0x3b40: mov dword ptr [rsp+0x8],0x2
0x3b48: jmp 0x2f63
0x3d60: movzx ebx,byte ptr [rsp+0xf]
0x3d65: mov rbp,r11
0x3d68: mov byte ptr [rsp+0xd],bl
0x3d6c: jmp 0x3a19
0x3d71: movzx edx,byte ptr [rsp+0xd]
0x3d76: xor r12d,r12d
0x3d79: jmp 0x3880
0x3d7e: xor r10d,r10d
0x3d81: jmp 0x393d
0x3da1: mov r11,qword ptr [rsp+0x30]
0x3da6: mov rsi,r14
0x3da9: mov rcx,r13
0x3dac: mov rax,rbx
0x3daf: mov rdi,rbx
0x3db2: movzx r8d,byte ptr [rsp+0x7d]
0x3db8: movzx ebx,byte ptr [rsp+0x7e]
0x3dbd: mov r9,qword ptr [rsp+0x88]
0x3dc5: cmp rsi,r11
0x3dc8: movzx r10d,byte ptr [rsp+0x7f]
0x3dce: mov r15,qword ptr [rsp+0x80]
0x3dd6: mov r14,qword ptr [rsp+0x40]
0x3ddb: mov r13,qword ptr [rsp+0x70]
0x3de0: jae 0x3e08
0x3de2: cmp byte ptr [rcx],0x0
0x3de5: jne 0x3df7
0x3de7: jmp 0x3e08
0x3df0: cmp byte ptr [r9+rax],0x0
0x3df5: je 0x3e05
0x3df7: add rax,0x1
0x3dfb: lea rdx,[rbp+rax]
0x3e00: cmp r11,rdx
0x3e03: ja 0x3df0
0x3e05: mov rdi,rax
0x3e08: movzx edx,byte ptr [rsp+0xd]
0x3e0d: xor r12d,r12d
0x3e10: jmp 0x3876
0x3e15: mov rdi,rbx
0x3e18: movzx r8d,byte ptr [rsp+0x7d]
0x3e1e: movzx ebx,byte ptr [rsp+0x7e]
0x3e23: movzx r10d,byte ptr [rsp+0x7f]
0x3e29: mov r15,qword ptr [rsp+0x80]
0x3e31: xor r12d,r12d
0x3e34: mov r14,qword ptr [rsp+0x40]
0x3e39: mov r13,qword ptr [rsp+0x70]
0x3e3e: mov r11,qword ptr [rsp+0x30]
0x3e43: movzx edx,byte ptr [rsp+0xd]
0x3e48: jmp 0x3876
0x3e7b: mov eax,edx
0x3e7d: jmp 0x33d7
0x3f8a: mov eax,edx
0x3f8c: mov rbx,qword ptr [rsp+0x48]
0x3f91: test rbx,rbx
0x3f94: je 0x3fc2
0x3f96: test al,al
0x3f98: je 0x3fc2
0x3f9a: movzx ecx,byte ptr [rbx]
0x3f9d: mov rax,rbx
0x3fa0: test cl,cl
0x3fa2: je 0x3fc2
0x3fa4: mov rdx,r15
0x3fa7: sub rax,r15
0x3faa: cmp r13,rdx
0x3fad: jbe 0x3fb3
0x3faf: mov byte ptr [r14+rdx],cl
0x3fb3: add rdx,0x1
0x3fb7: movzx ecx,byte ptr [rax+rdx]
0x3fbb: test cl,cl
0x3fbd: jne 0x3faa
0x3fbf: mov r15,rdx
0x3fc2: cmp r13,r15
0x3fc5: jbe 0x3a69
0x3fcb: mov byte ptr [r14+r15],0x0
0x3fd0: jmp 0x3a69
0x3fd5: cmp dword ptr [rsp+0x8],0x2
0x3fda: movzx ebx,byte ptr [rsp+0xf]
0x3fdf: mov rbp,r11
0x3fe2: sete al
0x3fe5: mov byte ptr [rsp+0xd],bl
0x3fe9: jmp 0x3a19
0x402d: sub rsp,0x8
0x4031: mov r8d,0x5
0x4037: mov rcx,r11
0x403a: push qword ptr [rsp+0x68]
0x403e: push qword ptr [rsp+0x78]
0x4042: mov rdi,r14
0x4045: push qword ptr [rsp+0x38]
0x4049: mov r9d,dword ptr [rsp+0x98]
0x4051: mov rdx,qword ptr [rsp+0x30]
0x4056: mov rsi,qword ptr [rsp+0x70]
0x405b: call 0x2e90
0x4060: add rsp,0x20
0x4064: mov r15,rax
0x4067: jmp 0x3a69
0x406c: movzx eax,byte ptr [rsp+0x7c]
0x4071: jmp 0x3f8c
0x4076: mov dword ptr [rsp+0x8],0x2
0x407e: jmp 0x3a19
0x4083: call 0x15a0
0x4088: mov byte ptr [rsp+0xd],0x0
0x408d: jmp 0x3b01
0x409a: mov byte ptr [rsp+0xe],0x1
0x409f: xor eax,eax
0x40a1: xor r12d,r12d
0x40a4: mov qword ptr [rsp+0x50],0x0
0x40ad: jmp 0x3654
0x40c4: nop 
0x40c6: nop word ptr cs:[rax+rax]
0x41bc: add rsp,0x20
0x41c0: mov r11,qword ptr [rsp+0x10]
0x41c5: cmp r11,rax
0x41c8: ja 0x4231
0x41ca: lea rsi,[rax+0x1]
0x41ce: lea rax,[rip+0x204f2b]
0x41d5: cmp r12,rax
0x41d8: mov qword ptr [rbx],rsi
0x41db: je 0x41ef
0x41dd: mov rdi,r12
0x41e0: mov qword ptr [rsp+0x10],rsi
0x41e5: call 0x14d0
0x41ea: mov rsi,qword ptr [rsp+0x10]
0x41ef: mov rdi,rsi
0x41f2: mov qword ptr [rsp+0x10],rsi
0x41f7: call 0x5050
0x41fc: sub rsp,0x8
0x4200: mov qword ptr [rbx+0x8],rax
0x4204: mov r8d,dword ptr [rbp]
0x4208: push qword ptr [rbp+0x30]
0x420b: push qword ptr [rbp+0x28]
0x420e: mov rcx,r14
0x4211: push r15
0x4213: mov r9d,dword ptr [rsp+0x3c]
0x4218: mov rdi,rax
0x421b: mov rdx,qword ptr [rsp+0x28]
0x4220: mov rsi,qword ptr [rsp+0x30]
0x4225: mov r12,rax
0x4228: call 0x2e90
0x422d: add rsp,0x20
0x4231: mov eax,dword ptr [rsp+0x18]
0x4235: mov dword ptr [r13],eax
0x4239: add rsp,0x28
0x423d: mov rax,r12
0x4240: pop rbx
0x4241: pop rbp
0x4242: pop r12
0x4244: pop r13
0x4246: pop r14
0x4248: pop r15
0x424a: ret 
0x4271: call 0x14e0
0x4276: call 0x52a0
0x427b: nop dword ptr [rax+rax]
0x4280: push r12
0x4282: push rbp
0x4283: push rbx
0x4284: mov rbx,rdi
0x4287: call 0x14f0
0x428c: mov r12d,dword ptr [rax]
0x428f: mov rbp,rax
0x4292: lea rax,[rip+0x204f67]
0x4299: test rbx,rbx
0x429c: mov esi,0x38
0x42a1: cmove rbx,rax
0x42a5: mov rdi,rbx
0x42a8: call 0x5250
0x42ad: mov dword ptr [rbp],r12d
0x42b1: pop rbx
0x42b2: pop rbp
0x42b3: pop r12
0x42b5: ret 
0x42c0: lea rax,[rip+0x204f39]
0x42c7: test rdi,rdi
0x42ca: cmove rdi,rax
0x42ce: mov eax,dword ptr [rdi]
0x42d0: ret 
0x42e0: lea rax,[rip+0x204f19]
0x42e7: test rdi,rdi
0x42ea: cmove rdi,rax
0x42ee: mov dword ptr [rdi],esi
0x42f0: ret 
0x4300: lea rax,[rip+0x204ef9]
0x4307: test rdi,rdi
0x430a: mov ecx,esi
0x430c: cmove rdi,rax
0x4310: mov eax,esi
0x4312: and ecx,0x1f
0x4315: shr al,0x5
0x4318: movzx eax,al
0x431b: lea rdi,[rdi+rax*4+0x8]
0x4320: mov esi,dword ptr [rdi]
0x4322: mov eax,esi
0x4324: shr eax,cl
0x4326: xor edx,eax
0x4328: and eax,0x1
0x432b: and edx,0x1
0x432e: shl edx,cl
0x4330: xor edx,esi
0x4332: mov dword ptr [rdi],edx
0x4334: ret 
0x4340: lea rax,[rip+0x204eb9]
0x4347: test rdi,rdi
0x434a: cmove rdi,rax
0x434e: mov eax,dword ptr [rdi+0x4]
0x4351: mov dword ptr [rdi+0x4],esi
0x4354: ret 
0x4360: lea rax,[rip+0x204e99]
0x4367: test rdi,rdi
0x436a: cmove rdi,rax
0x436e: test rsi,rsi
0x4371: mov dword ptr [rdi],0xa
0x4377: je 0x4387
0x4379: test rdx,rdx
0x437c: je 0x4387
0x437e: mov qword ptr [rdi+0x28],rsi
0x4382: mov qword ptr [rdi+0x30],rdx
0x4386: ret 
0x4387: sub rsp,0x8
0x438b: call 0x14e0
0x4390: push r15
0x4392: push r14
0x4394: lea rax,[rip+0x204e65]
0x439b: push r13
0x439d: push r12
0x439f: mov r13,rdi
0x43a2: push rbp
0x43a3: push rbx
0x43a4: mov rbx,r8
0x43a7: mov r14,rsi
0x43aa: mov r15,rdx
0x43ad: sub rsp,0x18
0x43b1: test r8,r8
0x43b4: cmove rbx,rax
0x43b8: mov qword ptr [rsp+0x8],rcx
0x43bd: call 0x14f0
0x43c2: mov r12d,dword ptr [rax]
0x43c5: mov rbp,rax
0x43c8: lea rax,[rbx+0x8]
0x43cc: sub rsp,0x8
0x43d0: mov r9d,dword ptr [rbx+0x4]
0x43d4: push qword ptr [rbx+0x30]
0x43d7: mov r8d,dword ptr [rbx]
0x43da: push qword ptr [rbx+0x28]
0x43dd: mov rdx,r15
0x43e0: push rax
0x43e1: mov rcx,qword ptr [rsp+0x28]
0x43e6: mov rsi,r14
0x43e9: mov rdi,r13
0x43ec: call 0x2e90
0x43f1: mov dword ptr [rbp],r12d
0x43f5: add rsp,0x38
0x43f9: pop rbx
0x43fa: pop rbp
0x43fb: pop r12
0x43fd: pop r13
0x43ff: pop r14
0x4401: pop r15
0x4403: ret 
0x4410: push r15
0x4412: push r14
0x4414: lea rax,[rip+0x204de5]
0x441b: push r13
0x441d: push r12
0x441f: mov r12,rdx
0x4422: push rbp
0x4423: push rbx
0x4424: mov rbx,rcx
0x4427: mov r14,rdi
0x442a: mov r15,rsi
0x442d: sub rsp,0x38
0x4431: test rcx,rcx
0x4434: cmove rbx,rax
0x4438: xor ebp,ebp
0x443a: call 0x14f0
0x443f: test r12,r12
0x4442: mov r13,rax
0x4445: mov eax,dword ptr [rax]
0x4447: sete bpl
0x444b: or ebp,dword ptr [rbx+0x4]
0x444e: lea r10,[rbx+0x8]
0x4452: sub rsp,0x8
0x4456: mov r8d,dword ptr [rbx]
0x4459: mov rcx,r15
0x445c: mov dword ptr [rsp+0x14],eax
0x4460: push qword ptr [rbx+0x30]
0x4463: mov rdx,r14
0x4466: push qword ptr [rbx+0x28]
0x4469: push r10
0x446b: xor esi,esi
0x446d: mov r9d,ebp
0x4470: xor edi,edi
0x4472: mov qword ptr [rsp+0x40],r10
0x4477: call 0x2e90
0x447c: lea rsi,[rax+0x1]
0x4480: mov qword ptr [rsp+0x48],rax
0x4485: add rsp,0x20
0x4489: mov rdi,rsi
0x448c: mov qword ptr [rsp+0x18],rsi
0x4491: call 0x5050
0x4496: mov qword ptr [rsp+0x10],rax
0x449b: sub rsp,0x8
0x449f: push qword ptr [rbx+0x30]
0x44a2: push qword ptr [rbx+0x28]
0x44a5: mov r10,qword ptr [rsp+0x38]
0x44aa: mov r9d,ebp
0x44ad: mov r8d,dword ptr [rbx]
0x44b0: mov rcx,r15
0x44b3: mov rdx,r14
0x44b6: mov rdi,rax
0x44b9: push r10
0x44bb: mov rsi,qword ptr [rsp+0x38]
0x44c0: call 0x2e90
0x44c5: mov eax,dword ptr [rsp+0x2c]
0x44c9: add rsp,0x20
0x44cd: test r12,r12
0x44d0: mov dword ptr [r13],eax
0x44d4: je 0x44df
0x44d6: mov r11,qword ptr [rsp+0x28]
0x44db: mov qword ptr [r12],r11
0x44df: mov rax,qword ptr [rsp+0x10]
0x44e4: add rsp,0x38
0x44e8: pop rbx
0x44e9: pop rbp
0x44ea: pop r12
0x44ec: pop r13
0x44ee: pop r14
0x44f0: pop r15
0x44f2: ret 
0x4500: mov rcx,rdx
0x4503: xor edx,edx
0x4505: jmp 0x4410
0x4510: mov eax,dword ptr [rip+0x204b42]
0x4516: push r12
0x4518: mov r12,qword ptr [rip+0x204b41]
0x451f: push rbp
0x4520: push rbx
0x4521: cmp eax,0x1
0x4524: jle 0x4551
0x4526: sub eax,0x2
0x4529: lea rbx,[r12+0x18]
0x452e: shl rax,0x4
0x4532: lea rbp,[r12+rax+0x28]
0x4537: nop word ptr [rax+rax]
0x4540: mov rdi,qword ptr [rbx]
0x4543: add rbx,0x10
0x4547: call 0x14d0
0x454c: cmp rbx,rbp
0x454f: jne 0x4540
0x4551: mov rdi,qword ptr [r12+0x8]
0x4556: lea rbx,[rip+0x204ba3]
0x455d: cmp rdi,rbx
0x4560: je 0x4579
0x4562: call 0x14d0
0x4567: mov qword ptr [rip+0x204afe],0x100
0x4572: mov qword ptr [rip+0x204aff],rbx
0x4579: lea rbx,[rip+0x204af0]
0x4580: cmp r12,rbx
0x4583: je 0x4594
0x4585: mov rdi,r12
0x4588: call 0x14d0
0x458d: mov qword ptr [rip+0x204acc],rbx
0x4594: pop rbx
0x4595: mov dword ptr [rip+0x204ab9],0x1
0x459f: pop rbp
0x45a0: pop r12
0x45a2: ret 
0x45b0: lea rcx,[rip+0x204c49]
0x45b7: mov rdx,-0x1
0x45be: jmp 0x40d0
0x45d0: lea rcx,[rip+0x204c29]
0x45d7: jmp 0x40d0
0x45e0: lea rcx,[rip+0x204c19]
0x45e7: mov rsi,rdi
0x45ea: mov rdx,-0x1
0x45f1: xor edi,edi
0x45f3: jmp 0x40d0
0x4600: lea rcx,[rip+0x204bf9]
0x4607: mov rdx,rsi
0x460a: mov rsi,rdi
0x460d: xor edi,edi
0x460f: jmp 0x40d0
0x4620: sub rsp,0x48
0x4624: mov rax,rdx
0x4627: mov rdx,qword ptr fs:0x28
0x4630: mov qword ptr [rsp+0x38],rdx
0x4635: xor edx,edx
0x4637: cmp esi,0xa
0x463a: je 0x46a4
0x463c: mov dword ptr [rsp],esi
0x463f: mov rcx,rsp
0x4642: mov rdx,-0x1
0x4649: mov rsi,rax
0x464c: mov qword ptr [rsp+0x4],0x0
0x4655: mov qword ptr [rsp+0xc],0x0
0x465e: mov qword ptr [rsp+0x14],0x0
0x4667: mov qword ptr [rsp+0x1c],0x0
0x4670: mov qword ptr [rsp+0x24],0x0
0x4679: mov qword ptr [rsp+0x2c],0x0
0x4682: mov dword ptr [rsp+0x34],0x0
0x468a: call 0x40d0
0x468f: mov rcx,qword ptr [rsp+0x38]
0x4694: xor rcx,qword ptr fs:0x28
0x469d: jne 0x46a9
0x469f: add rsp,0x48
0x46a3: ret 
0x46a4: call 0x14e0
0x46a9: call 0x15a0
0x46ae: nop 
0x46b0: sub rsp,0x48
0x46b4: mov rax,rdx
0x46b7: mov rdx,rcx
0x46ba: mov rcx,qword ptr fs:0x28
0x46c3: mov qword ptr [rsp+0x38],rcx
0x46c8: xor ecx,ecx
0x46ca: cmp esi,0xa
0x46cd: je 0x4730
0x46cf: mov dword ptr [rsp],esi
0x46d2: mov rcx,rsp
0x46d5: mov rsi,rax
0x46d8: mov qword ptr [rsp+0x4],0x0
0x46e1: mov qword ptr [rsp+0xc],0x0
0x46ea: mov qword ptr [rsp+0x14],0x0
0x46f3: mov qword ptr [rsp+0x1c],0x0
0x46fc: mov qword ptr [rsp+0x24],0x0
0x4705: mov qword ptr [rsp+0x2c],0x0
0x470e: mov dword ptr [rsp+0x34],0x0
0x4716: call 0x40d0
0x471b: mov rdx,qword ptr [rsp+0x38]
0x4720: xor rdx,qword ptr fs:0x28
0x4729: jne 0x4735
0x472b: add rsp,0x48
0x472f: ret 
0x4730: call 0x14e0
0x4735: call 0x15a0
0x473a: nop word ptr [rax+rax]
0x4740: mov rdx,rsi
0x4743: mov esi,edi
0x4745: xor edi,edi
0x4747: jmp 0x4620
0x4750: mov rcx,rdx
0x4753: mov rdx,rsi
0x4756: mov esi,edi
0x4758: xor edi,edi
0x475a: jmp 0x46b0
0x4760: sub rsp,0x48
0x4764: mov ecx,edx
0x4766: mov rax,qword ptr fs:0x28
0x476f: mov qword ptr [rsp+0x38],rax
0x4774: xor eax,eax
0x4776: mov rax,qword ptr [rip+0x204ab3]
0x477d: mov r8,rsp
0x4780: and ecx,0x1f
0x4783: movdqa xmm0,[rip+0x204a75]
0x478b: mov qword ptr [rsp+0x30],rax
0x4790: mov eax,edx
0x4792: movaps [rsp],xmm0
0x4796: shr al,0x5
0x4799: movzx eax,al
0x479c: lea r9,[r8+rax*4+0x8]
0x47a1: movdqa xmm0,[rip+0x204a67]
0x47a9: movaps [rsp+0x10],xmm0
0x47ae: movdqa xmm0,[rip+0x204a6a]
0x47b6: movaps [rsp+0x20],xmm0
0x47bb: mov edx,dword ptr [r9]
0x47be: mov eax,edx
0x47c0: shr eax,cl
0x47c2: not eax
0x47c4: and eax,0x1
0x47c7: shl eax,cl
0x47c9: mov rcx,r8
0x47cc: xor eax,edx
0x47ce: mov rdx,rsi
0x47d1: mov rsi,rdi
0x47d4: mov dword ptr [r9],eax
0x47d7: xor edi,edi
0x47d9: call 0x40d0
0x47de: mov rsi,qword ptr [rsp+0x38]
0x47e3: xor rsi,qword ptr fs:0x28
0x47ec: jne 0x47f3
0x47ee: add rsp,0x48
0x47f2: ret 
0x47f3: call 0x15a0
0x47f8: nop dword ptr [rax+rax]
0x4800: movsx edx,sil
0x4804: mov rsi,-0x1
0x480b: jmp 0x4760
0x4810: mov edx,0x3a
0x4815: mov rsi,-0x1
0x481c: jmp 0x4760
0x4830: mov edx,0x3a
0x4835: jmp 0x4760
0x48af: mov rcx,qword ptr [rsp+0x38]
0x48b4: xor rcx,qword ptr fs:0x28
0x48bd: jne 0x48c9
0x48bf: add rsp,0x48
0x48c3: ret 
0x48c4: call 0x14e0
0x48c9: call 0x15a0
0x48ce: nop 
0x48d0: sub rsp,0x48
0x48d4: mov r9,rcx
0x48d7: mov rcx,qword ptr [rip+0x204952]
0x48de: movdqa xmm0,[rip+0x20491a]
0x48e6: mov rax,qword ptr fs:0x28
0x48ef: mov qword ptr [rsp+0x38],rax
0x48f4: xor eax,eax
0x48f6: movaps [rsp],xmm0
0x48fa: test rsi,rsi
0x48fd: mov qword ptr [rsp+0x30],rcx
0x4902: mov dword ptr [rsp],0xa
0x4909: movdqa xmm0,[rip+0x2048ff]
0x4911: movaps [rsp+0x10],xmm0
0x4916: movdqa xmm0,[rip+0x204902]
0x491e: movaps [rsp+0x20],xmm0
0x4923: je 0x4957
0x4925: test rdx,rdx
0x4928: je 0x4957
0x492a: mov qword ptr [rsp+0x28],rsi
0x492f: mov qword ptr [rsp+0x30],rdx
0x4934: mov rcx,rsp
0x4937: mov rdx,r8
0x493a: mov rsi,r9
0x493d: call 0x40d0
0x4942: mov rdi,qword ptr [rsp+0x38]
0x4947: xor rdi,qword ptr fs:0x28
0x4950: jne 0x495c
0x4952: add rsp,0x48
0x4956: ret 
0x4957: call 0x14e0
0x495c: call 0x15a0
0x4961: nop dword ptr [rax+rax]
0x4966: nop word ptr cs:[rax+rax]
0x4970: mov r8,-0x1
0x4977: jmp 0x48d0
0x4980: mov rcx,rdx
0x4983: mov r8,-0x1
0x498a: mov rdx,rsi
0x498d: mov rsi,rdi
0x4990: xor edi,edi
0x4992: jmp 0x48d0
0x49a0: mov r8,rcx
0x49a3: mov rcx,rdx
0x49a6: mov rdx,rsi
0x49a9: mov rsi,rdi
0x49ac: xor edi,edi
0x49ae: jmp 0x48d0
0x49c0: lea rcx,[rip+0x204659]
0x49c7: jmp 0x40d0
0x49d0: lea rcx,[rip+0x204649]
0x49d7: mov rdx,rsi
0x49da: mov rsi,rdi
0x49dd: xor edi,edi
0x49df: jmp 0x40d0
0x49f0: lea rcx,[rip+0x204629]
0x49f7: mov rdx,-0x1
0x49fe: jmp 0x40d0
0x4b68: mov r8,rcx
0x4b6b: mov rcx,rdx
0x4b6e: lea rdx,[rip+0x1c3f]
0x4b75: mov esi,0x1
0x4b7a: xor eax,eax
0x4b7c: call 0x17b0
0x4b81: jmp 0x4a6c
0x4d7d: push r12
0x4d7f: push r15
0x4d81: push r14
0x4d83: mov r8,qword ptr [rsp+0x20]
0x4d88: mov rcx,rbx
0x4d8b: mov rdx,rax
0x4d8e: mov rdi,rbp
0x4d91: mov esi,0x1
0x4d96: xor eax,eax
0x4d98: call 0x17b0
0x4d9d: add rsp,0x20
0x4da1: add rsp,0x28
0x4da5: pop rbx
0x4da6: pop rbp
0x4da7: pop r12
0x4da9: pop r13
0x4dab: pop r14
0x4dad: pop r15
0x4daf: ret 
0x4de9: push r12
0x4deb: push r15
0x4ded: push r14
0x4def: mov r9,qword ptr [rsp+0x28]
0x4df4: jmp 0x4d83
0x4e50: xor r9d,r9d
0x4e53: cmp qword ptr [r8],0x0
0x4e57: je 0x4e6b
0x4e59: nop dword ptr [rax]
0x4e60: add r9,0x1
0x4e64: cmp qword ptr [r8+r9*8],0x0
0x4e69: jne 0x4e60
0x4e6b: jmp 0x4a30
0x4e70: sub rsp,0x68
0x4e74: mov r10,r8
0x4e77: xor r9d,r9d
0x4e7a: mov rax,qword ptr fs:0x28
0x4e83: mov qword ptr [rsp+0x58],rax
0x4e88: xor eax,eax
0x4e8a: mov r8,rsp
0x4e8d: nop dword ptr [rax]
0x4e90: mov eax,dword ptr [r10]
0x4e93: cmp eax,0x2f
0x4e96: ja 0x4eda
0x4e98: mov r11d,eax
0x4e9b: add r11,qword ptr [r10+0x10]
0x4e9f: add eax,0x8
0x4ea2: mov dword ptr [r10],eax
0x4ea5: mov rax,qword ptr [r11]
0x4ea8: test rax,rax
0x4eab: mov qword ptr [r8+r9*8],rax
0x4eaf: je 0x4ebb
0x4eb1: add r9,0x1
0x4eb5: cmp r9,0xa
0x4eb9: jne 0x4e90
0x4ebb: call 0x4a30
0x4ec0: mov rax,qword ptr [rsp+0x58]
0x4ec5: xor rax,qword ptr fs:0x28
0x4ece: jne 0x4ed5
0x4ed0: add rsp,0x68
0x4ed4: ret 
0x4ed5: call 0x15a0
0x4eda: mov r11,qword ptr [r10+0x8]
0x4ede: lea rax,[r11+0x8]
0x4ee2: mov qword ptr [r10+0x8],rax
0x4ee6: jmp 0x4ea5
0x4fb0: call 0x15a0
0x4fbc: mov rax,rbx
0x4fbf: add rbx,0x8
0x4fc3: jmp 0x4f76
0x4fd0: push rbx
0x4fd1: lea rsi,[rip+0x182a]
0x4fd8: mov edx,0x5
0x4fdd: xor edi,edi
0x4fdf: call 0x1570
0x4fe4: lea rdx,[rip+0x182c]
0x4feb: mov rsi,rax
0x4fee: mov edi,0x1
0x4ff3: xor eax,eax
0x4ff5: call 0x1730
0x4ffa: lea rsi,[rip+0x182c]
0x5001: mov edx,0x5
0x5006: xor edi,edi
0x5008: call 0x1570
0x500d: lea rcx,[rip+0x107c]
0x5014: lea rdx,[rip+0xc24]
0x501b: mov rsi,rax
0x501e: mov edi,0x1
0x5023: xor eax,eax
0x5025: call 0x1730
0x502a: mov rbx,qword ptr [rip+0x204057]
0x5031: lea rsi,[rip+0x1a28]
0x5038: xor edi,edi
0x503a: mov edx,0x5
0x503f: call 0x1570
0x5044: mov rsi,rbx
0x5047: mov rdi,rax
0x504a: pop rbx
0x504b: jmp 0x1670
0x506a: nop word ptr [rax+rax]
0x5070: mov rax,rdi
0x5073: mul rsi
0x5076: mov rdi,rax
0x5079: seto al
0x507c: test rdi,rdi
0x507f: js 0x508b
0x5081: movzx eax,al
0x5084: test rax,rax
0x5087: jne 0x508b
0x5089: jmp 0x5050
0x508b: sub rsp,0x8
0x508f: call 0x52a0
0x5094: nop 
0x5096: nop word ptr cs:[rax+rax]
0x50a0: jmp 0x5050
0x50b9: test rdi,rdi
0x50bc: jne 0x50d8
0x50d8: call 0x14d0
0x50dd: xor eax,eax
0x50df: pop rbx
0x50e0: ret 
0x50e6: nop word ptr cs:[rax+rax]
0x50f0: mov rax,rsi
0x50f3: mul rdx
0x50f6: mov rsi,rax
0x50f9: seto al
0x50fc: test rsi,rsi
0x50ff: js 0x510b
0x5101: movzx eax,al
0x5104: test rax,rax
0x5107: jne 0x510b
0x5109: jmp 0x50b0
0x510b: sub rsp,0x8
0x510f: call 0x52a0
0x5114: nop 
0x5116: nop word ptr cs:[rax+rax]
0x5120: test rdi,rdi
0x5123: mov r9,rdx
0x5126: mov rcx,qword ptr [rsi]
0x5129: je 0x5160
0x512b: xor edx,edx
0x512d: movabsq rax,0x5555555555555554
0x5137: div r9
0x513a: cmp rax,rcx
0x513d: jbe 0x517b
0x513f: mov rax,rcx
0x5142: shr rax, 1
0x5145: lea rcx,[rax+rcx+0x1]
0x514a: mov qword ptr [rsi],rcx
0x514d: imul rcx,r9
0x5151: mov rsi,rcx
0x5154: jmp 0x50b0
0x5160: test rcx,rcx
0x5163: je 0x5188
0x5165: mov rax,rcx
0x5168: mul r9
0x516b: seto dl
0x516e: test rax,rax
0x5171: movzx edx,dl
0x5174: js 0x517b
0x5176: test rdx,rdx
0x5179: je 0x514a
0x517b: sub rsp,0x8
0x517f: call 0x52a0
0x5184: nop dword ptr [rax]
0x5188: xor edx,edx
0x518a: mov eax,0x80
0x518f: xor r8d,r8d
0x5192: div r9
0x5195: test rax,rax
0x5198: sete r8b
0x519c: lea rcx,[r8+rax]
0x51a0: jmp 0x5165
0x51b0: test rdi,rdi
0x51b3: mov rax,qword ptr [rsi]
0x51b6: je 0x51e0
0x51b8: movabsq rdx,0x5555555555555553
0x51c2: cmp rax,rdx
0x51c5: ja 0x51f1
0x51c7: mov rdx,rax
0x51ca: shr rdx, 1
0x51cd: lea rax,[rdx+rax+0x1]
0x51d2: mov qword ptr [rsi],rax
0x51d5: mov rsi,rax
0x51d8: jmp 0x50b0
0x51e0: test rax,rax
0x51e3: mov edx,0x80
0x51e8: cmove rax,rdx
0x51ec: test rax,rax
0x51ef: jns 0x51d2
0x51f1: sub rsp,0x8
0x51f5: call 0x52a0
0x51fa: nop word ptr [rax+rax]
0x5200: push rbx
0x5201: mov rbx,rdi
0x5204: call 0x5050
0x5209: mov rdx,rbx
0x520c: xor esi,esi
0x520e: mov rdi,rax
0x5211: pop rbx
0x5212: jmp 0x1630
0x5220: mov rax,rdi
0x5223: sub rsp,0x8
0x5227: mul rsi
0x522a: seto dl
0x522d: test rax,rax
0x5230: js 0x5249
0x5232: movzx edx,dl
0x5235: test rdx,rdx
0x5238: jne 0x5249
0x523a: call 0x1680
0x523f: test rax,rax
0x5242: je 0x5249
0x5244: add rsp,0x8
0x5248: ret 
0x5249: call 0x52a0
0x524e: nop 
0x5250: push rbp
0x5251: push rbx
0x5252: mov rbp,rdi
0x5255: mov rdi,rsi
0x5258: mov rbx,rsi
0x525b: sub rsp,0x8
0x525f: call 0x5050
0x5264: add rsp,0x8
0x5268: mov rdx,rbx
0x526b: mov rsi,rbp
0x526e: pop rbx
0x526f: pop rbp
0x5270: mov rdi,rax
0x5273: jmp 0x16a0
0x5280: push rbx
0x5281: mov rbx,rdi
0x5284: call 0x1590
0x5289: mov rdi,rbx
0x528c: lea rsi,[rax+0x1]
0x5290: pop rbx
0x5291: jmp 0x5250
0x52d0: call 0x14e0
0x52d5: nop word ptr cs:[rax+rax]
0x52df: nop 
0x5352: mov esi,dword ptr [r14]
0x5355: mov r8,rax
0x5358: mov eax,0x0
0x535d: lea rdx,[rip+0xf1c]
0x5364: mov rcx,r13
0x5367: cmp esi,0x16
0x536a: cmove esi,eax
0x536d: test ebx,ebx
0x536f: mov eax,0x1
0x5374: cmove ebx,eax
0x5377: xor eax,eax
0x5379: mov edi,ebx
0x537b: call 0x1750
0x5380: mov rbp,qword ptr [rsp]
0x53db: call 0x15a0
0x54b6: cmp eax,0x22
0x54b9: mov ebp,0x1
0x54be: jne 0x54e8
0x54e2: nop word ptr [rax+rax]
0x5610: movsxd rdi,edi
0x5613: mov eax,ebp
0x5615: add rcx,rdi
0x5618: or eax,0x2
0x561b: mov qword ptr [r15],rcx
0x561e: cmp byte ptr [rcx],0x0
0x5621: mov qword ptr [r14],rbx
0x5624: cmovne ebp,eax
0x5627: jmp 0x54ed
0x5685: or ebp,r9d
0x5688: jmp 0x5610
0x571c: mov rax,rbx
0x571f: mul rsi
0x5722: mov rbx,rax
0x5725: jo 0x57b4
0x572b: sub r8d,0x1
0x572f: jne 0x571c
0x5731: jmp 0x5685
0x5790: call 0x15a0
0x5795: lea rcx,[rip+0x14a4]
0x579c: lea rsi,[rip+0x137d]
0x57a3: lea rdi,[rip+0x1396]
0x57aa: mov edx,0x54
0x57af: call 0x1610
0x57b4: mov r9d,0x1
0x57ba: or rbx,-0x1
0x57be: jmp 0x572b
0x5950: push r13
0x5952: push r12
0x5954: mov r13,rsi
0x5957: push rbp
0x5958: push rbx
0x5959: mov rbx,rdi
0x595c: mov r12,rdx
0x595f: sub rsp,0x18
0x5963: mov rax,qword ptr fs:0x28
0x596c: mov qword ptr [rsp+0x8],rax
0x5971: xor eax,eax
0x5973: lea rax,[rsp+0x4]
0x5978: test rdi,rdi
0x597b: cmove rbx,rax
0x597f: mov rdi,rbx
0x5982: call 0x15c0
0x5987: cmp rax,-0x3
0x598b: mov rbp,rax
0x598e: jbe 0x59b0
0x5990: test r12,r12
0x5993: je 0x59b0
0x5995: xor edi,edi
0x5997: call 0x5a60
0x599c: test al,al
0x599e: jne 0x59b0
0x59a0: movzx eax,byte ptr [r13]
0x59a5: mov ebp,0x1
0x59aa: mov dword ptr [rbx],eax
0x59ac: nop dword ptr [rax]
0x59b0: mov rdx,qword ptr [rsp+0x8]
0x59b5: xor rdx,qword ptr fs:0x28
0x59be: mov rax,rbp
0x59c1: jne 0x59ce
0x59c3: add rsp,0x18
0x59c7: pop rbx
0x59c8: pop rbp
0x59c9: pop r12
0x59cb: pop r13
0x59cd: ret 
0x59ce: call 0x15a0
0x59d3: nop word ptr cs:[rax+rax]
0x59dd: nop dword ptr [rax]
0x59e0: push r12
0x59e2: push rbp
0x59e3: mov rbp,rdi
0x59e6: push rbx
0x59e7: call 0x1520
0x59ec: mov ebx,dword ptr [rbp]
0x59ef: mov rdi,rbp
0x59f2: mov r12,rax
0x59f5: call 0x5830
0x59fa: and ebx,0x20
0x59fd: test ebx,ebx
0x59ff: jne 0x5a18
0x5a01: test eax,eax
0x5a03: je 0x5a0f
0x5a05: test r12,r12
0x5a08: mov eax,0xffffffff
0x5a0d: je 0x5a48
0x5a0f: pop rbx
0x5a10: pop rbp
0x5a11: pop r12
0x5a13: ret 
0x5a18: test eax,eax
0x5a1a: jne 0x5a38
0x5a1c: call 0x14f0
0x5a21: mov dword ptr [rax],0x0
0x5a27: mov eax,0xffffffff
0x5a2c: pop rbx
0x5a2d: pop rbp
0x5a2e: pop r12
0x5a30: ret 
0x5a38: pop rbx
0x5a39: mov eax,0xffffffff
0x5a3e: pop rbp
0x5a3f: pop r12
0x5a41: ret 
0x5a48: call 0x14f0
0x5a4d: cmp dword ptr [rax],0x9
0x5a50: pop rbx
0x5a51: pop rbp
0x5a52: pop r12
0x5a54: setne al
0x5a57: movzx eax,al
0x5a5a: neg eax
0x5a5c: ret 
0x5a60: sub rsp,0x8
0x5a64: xor esi,esi
0x5a66: call 0x1720
0x5a6b: mov rdx,rax
0x5a6e: mov eax,0x1
0x5a73: test rdx,rdx
0x5a76: je 0x5a95
0x5a78: lea rdi,[rip+0x11cc]
0x5a7f: mov ecx,0x2
0x5a84: mov rsi,rdx
0x5a87: rep cmpsb [rsi],es:[rdi]
0x5a89: seta cl
0x5a8c: sbb cl,0x0
0x5a8f: xor eax,eax
0x5a91: test cl,cl
0x5a93: jne 0x5aa0
0x5a95: add rsp,0x8
0x5a99: ret 
0x5aa0: lea rdi,[rip+0x11a6]
0x5aa7: mov ecx,0x6
0x5aac: mov rsi,rdx
0x5aaf: rep cmpsb [rsi],es:[rdi]
0x5ab1: seta al
0x5ab4: sbb al,0x0
0x5ab6: test al,al
0x5ab8: setne al
0x5abb: add rsp,0x8
0x5abf: ret 
0x5ac0: sub rsp,0x8
0x5ac4: mov edi,0xe
0x5ac9: call 0x16e0
0x5ace: test rax,rax
0x5ad1: je 0x5af0
0x5ad3: cmp byte ptr [rax],0x0
0x5ad6: lea rdx,[rip+0x1176]
0x5add: cmove rax,rdx
0x5ae1: add rsp,0x8
0x5ae5: ret 
0x5af0: lea rax,[rip+0x115c]
0x5af7: add rsp,0x8
0x5afb: ret 
0x5b00: push r15
0x5b02: push r14
0x5b04: mov r15,rdx
0x5b07: push r13
0x5b09: push r12
0x5b0b: lea r12,[rip+0x202ffe]
0x5b12: push rbp
0x5b13: lea rbp,[rip+0x202ffe]
0x5b1a: push rbx
0x5b1b: mov r13d,edi
0x5b1e: mov r14,rsi
0x5b21: sub rbp,r12
0x5b24: sub rsp,0x8
0x5b28: sar rbp,0x3
0x5b2c: call 0x14a8
0x5b31: test rbp,rbp
0x5b34: je 0x5b56
0x5b36: xor ebx,ebx
0x5b38: nop dword ptr [rax+rax]
0x5b40: mov rdx,r15
0x5b43: mov rsi,r14
0x5b46: mov edi,r13d
0x5b49: call qword ptr [r12+rbx*8]
0x5b4d: add rbx,0x1
0x5b51: cmp rbp,rbx
0x5b54: jne 0x5b40
0x5b56: add rsp,0x8
0x5b5a: pop rbx
0x5b5b: pop rbp
0x5b5c: pop r12
0x5b5e: pop r13
0x5b60: pop r14
0x5b62: pop r15
0x5b64: ret 
0x5b70: rep ret 
