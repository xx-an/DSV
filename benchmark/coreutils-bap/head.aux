0x14d8: sub rsp,0x8
0x14dc: mov rax,qword ptr [rip+0x208afd]
0x14e3: test rax,rax
0x14e6: je 0x14ea
0x14e8: call rax
0x14ea: add rsp,0x8
0x14ee: ret 
0x14f6: jmp qword ptr [rip+0x20893c]
0x1540: jmp qword ptr [rip+0x20891a]
0x1550: jmp qword ptr [rip+0x208912]
0x1580: jmp qword ptr [rip+0x2088fa]
0x15c0: jmp qword ptr [rip+0x2088da]
0x15d0: jmp qword ptr [rip+0x2088d2]
0x15f0: jmp qword ptr [rip+0x2088c2]
0x1630: jmp qword ptr [rip+0x2088a2]
0x1690: jmp qword ptr [rip+0x208872]
0x16b0: jmp qword ptr [rip+0x208862]
0x16d0: jmp qword ptr [rip+0x208852]
0x16f0: jmp qword ptr [rip+0x208842]
0x1700: jmp qword ptr [rip+0x20883a]
0x1720: jmp qword ptr [rip+0x20882a]
0x17a0: jmp qword ptr [rip+0x2087ea]
0x17f0: jmp qword ptr [rip+0x2087c2]
0x1800: jmp qword ptr [rip+0x2087ba]
0x1820: jmp qword ptr [rip+0x2087ca]
0x1979: nop dword ptr [rax]
0x19be: nop 
0x1cc2: lea rsi,[rip+0x4d07]
0x1cc9: mov rbx,rax
0x1ccc: mov edx,0x5
0x1cd1: xor edi,edi
0x1cd3: xor r12d,r12d
0x1cd6: call 0x15a0
0x1cdb: mov rbp,rax
0x1cde: call 0x1520
0x1ce3: mov esi,dword ptr [rax]
0x1ce5: mov rcx,rbx
0x1ce8: mov rdx,rbp
0x1ceb: xor edi,edi
0x1ced: xor eax,eax
0x1cef: call 0x1770
0x1cf4: jmp 0x1c5c
0x1d2a: test r8b,r8b
0x1d2d: mov byte ptr [rdi],r8b
0x1d30: je 0x1d36
0x1d32: mov byte ptr [rdi+0x1],0x0
0x1d9f: mov edx,0x5
0x1da4: mov rbx,rax
0x1da7: lea rsi,[rip+0x4c5b]
0x1dae: jmp 0x1cd1
0x1fe8: lea rsi,[rip+0x4a0a]
0x1fef: mov edx,0x5
0x1ff4: xor edi,edi
0x1ff6: mov rbx,rax
0x1ff9: call 0x15a0
0x1ffe: mov rbp,rax
0x2001: call 0x1520
0x2006: mov esi,dword ptr [rax]
0x2008: mov rcx,rbx
0x200b: mov rdx,rbp
0x200e: xor edi,edi
0x2010: xor eax,eax
0x2012: call 0x1770
0x2017: jmp 0x1c53
0x2346: mov rdi,r14
0x2349: mov rsi,rax
0x234c: call 0x2b90
0x2351: movzx r12d,byte ptr [rsp+0x89]
0x235a: mov rdi,rbp
0x235d: jmp 0x2373
0x26f4: lea rsi,[rip+0x4184]
0x26fb: mov edx,0x5
0x2700: xor edi,edi
0x2702: mov rbx,rax
0x2705: call 0x15a0
0x270a: mov esi,dword ptr [r12]
0x270e: mov rdx,rax
0x2711: mov rcx,rbx
0x2714: xor edi,edi
0x2716: xor eax,eax
0x2718: xor r12d,r12d
0x271b: call 0x1770
0x2720: jmp 0x24e9
0x2732: lea rsi,[rip+0x4146]
0x2739: mov edx,0x5
0x273e: xor edi,edi
0x2740: mov rbx,rax
0x2743: call 0x15a0
0x2748: mov r12,rax
0x274b: call 0x1520
0x2750: mov esi,dword ptr [rax]
0x2752: mov rdx,r12
0x2755: xor edi,edi
0x2757: mov rcx,rbx
0x275a: xor eax,eax
0x275c: xor r12d,r12d
0x275f: call 0x1770
0x2764: mov rdi,rbp
0x2767: jmp 0x2373
0x27c2: lea rsi,[rip+0x40b6]
0x27c9: mov edx,0x5
0x27ce: xor edi,edi
0x27d0: mov rbx,rax
0x27d3: call 0x15a0
0x27d8: mov r8,qword ptr [rsp+0x38]
0x27dd: mov rdx,rax
0x27e0: mov rcx,rbx
0x27e3: xor edi,edi
0x27e5: xor eax,eax
0x27e7: mov esi,dword ptr [r8]
0x27ea: call 0x1770
0x27ef: jmp 0x25f8
0x2826: call 0x15d0
0x284f: jmp 0x196f
0x288e: lea rsi,[rip+0x3f87]
0x2895: mov edx,0x5
0x289a: xor edi,edi
0x289c: mov rbx,rax
0x289f: call 0x15a0
0x28a4: lea rdx,[rip+0x410f]
0x28ab: mov rcx,rax
0x28ae: mov r8,rbx
0x28b1: mov esi,0x4b
0x28b6: mov edi,0x1
0x28bb: xor eax,eax
0x28bd: call 0x1770
0x28c2: mov byte ptr [rip+0x207821],r10b
0x28c9: jmp 0x1d2a
0x2947: jmp 0x1c53
0x294c: mov byte ptr [rip+0x207797],r10b
0x2953: jmp 0x285d
0x298a: hlt 
0x298b: nop dword ptr [rax+rax]
0x2990: lea rdi,[rip+0x207709]
0x2997: push rbp
0x2998: lea rax,[rip+0x207701]
0x299f: cmp rax,rdi
0x29a2: mov rbp,rsp
0x29a5: je 0x29c0
0x29a7: mov rax,qword ptr [rip+0x207622]
0x29ae: test rax,rax
0x29b1: je 0x29c0
0x29b3: pop rbp
0x29b4: jmp rax
0x29c0: pop rbp
0x29c1: ret 
0x29d0: lea rdi,[rip+0x2076c9]
0x29d7: lea rsi,[rip+0x2076c2]
0x29de: push rbp
0x29df: sub rsi,rdi
0x29e2: mov rbp,rsp
0x29e5: sar rsi,0x3
0x29e9: mov rax,rsi
0x29ec: shr rax,0x3f
0x29f0: add rsi,rax
0x29f3: sar rsi, 1
0x29f6: je 0x2a10
0x29f8: mov rax,qword ptr [rip+0x2075e9]
0x29ff: test rax,rax
0x2a02: je 0x2a10
0x2a04: pop rbp
0x2a05: jmp rax
0x2a10: pop rbp
0x2a11: ret 
0x2a31: push rbp
0x2a32: mov rbp,rsp
0x2a35: je 0x2a43
0x2a37: mov rdi,qword ptr [rip+0x2075ca]
0x2a3e: call 0x1820
0x2a43: call 0x2990
0x2a48: mov byte ptr [rip+0x207699],0x1
0x2a4f: pop rbp
0x2a50: ret 
0x2a60: push rbp
0x2a61: mov rbp,rsp
0x2a64: pop rbp
0x2a65: jmp 0x29d0
0x2b3d: lea rsi,[rip+0x3cfd]
0x2b44: mov r13,rax
0x2b47: lea rax,[rip+0x3f1a]
0x2b4e: test ebp,ebp
0x2b50: mov edx,0x5
0x2b55: cmovne rsi,rax
0x2b59: xor edi,edi
0x2b5b: call 0x15a0
0x2b60: mov rbp,rax
0x2b63: call 0x1520
0x2b68: mov esi,dword ptr [rax]
0x2b6a: mov r8,r12
0x2b6d: mov rcx,r13
0x2b70: mov rdx,rbp
0x2b73: xor edi,edi
0x2b75: xor eax,eax
0x2b77: call 0x1770
0x2b7c: jmp 0x2aff
0x2b7e: call 0x15d0
0x2b83: nop dword ptr [rax]
0x2b86: nop word ptr cs:[rax+rax]
0x2bd6: lea rsi,[rip+0x3c91]
0x2bdd: mov edx,0x5
0x2be2: xor edi,edi
0x2be4: mov rbp,rax
0x2be7: call 0x15a0
0x2bec: mov rbx,rax
0x2bef: call 0x1520
0x2bf4: mov esi,dword ptr [rax]
0x2bf6: mov rcx,rbp
0x2bf9: mov rdx,rbx
0x2bfc: mov edi,0x1
0x2c01: xor eax,eax
0x2c03: call 0x1770
0x2c08: nop dword ptr [rax+rax]
0x2cd7: call 0x15d0
0x2cdc: nop dword ptr [rax]
0x2de5: lea rsi,[rip+0x3a93]
0x2dec: mov edx,0x5
0x2df1: xor edi,edi
0x2df3: mov rbp,rax
0x2df6: call 0x15a0
0x2dfb: mov rbx,rax
0x2dfe: call 0x1520
0x2e03: mov esi,dword ptr [rax]
0x2e05: mov rcx,rbp
0x2e08: xor eax,eax
0x2e0a: mov rdx,rbx
0x2e0d: xor edi,edi
0x2e0f: call 0x1770
0x2e14: xor eax,eax
0x2e16: jmp 0x2d9c
0x2e62: call 0x15d0
0x2e67: nop word ptr [rax+rax]
0x2ef8: lea rsi,[rip+0x3980]
0x2eff: mov edx,0x5
0x2f04: xor edi,edi
0x2f06: mov rbp,rax
0x2f09: call 0x15a0
0x2f0e: mov rbx,rax
0x2f11: call 0x1520
0x2f16: mov esi,dword ptr [rax]
0x2f18: mov rcx,rbp
0x2f1b: xor eax,eax
0x2f1d: mov rdx,rbx
0x2f20: xor edi,edi
0x2f22: call 0x1770
0x2f27: xor eax,eax
0x2f29: jmp 0x2f35
0x2f5a: call 0x15d0
0x2f5f: nop 
0x2f7f: lea rsi,[rip+0x390a]
0x2f86: mov rbp,rax
0x2f89: mov edx,0x5
0x2f8e: xor edi,edi
0x2f90: call 0x15a0
0x2f95: mov rbx,rax
0x2f98: call 0x1520
0x2f9d: mov esi,dword ptr [rax]
0x2f9f: add rsp,0x8
0x2fa3: mov rcx,rbp
0x2fa6: mov rdx,rbx
0x2fa9: xor edi,edi
0x2fab: xor eax,eax
0x2fad: pop rbx
0x2fae: pop rbp
0x2faf: jmp 0x1770
0x2fc2: mov edx,0x5
0x2fc7: mov rbp,rax
0x2fca: lea rsi,[rip+0x38ae]
0x2fd1: jmp 0x2f8e
0x2fd8: nop dword ptr [rax+rax]
0x31ef: lea rsi,[rip+0x3689]
0x31f6: mov edx,0x5
0x31fb: xor edi,edi
0x31fd: mov rbp,rax
0x3200: call 0x15a0
0x3205: mov rbx,rax
0x3208: call 0x1520
0x320d: mov esi,dword ptr [rax]
0x320f: mov rcx,rbp
0x3212: xor eax,eax
0x3214: mov rdx,rbx
0x3217: xor edi,edi
0x3219: call 0x1770
0x321e: xor eax,eax
0x3220: jmp 0x313a
0x3274: xor eax,eax
0x3276: jmp 0x313a
0x327b: call 0x15d0
0x36b0: mov qword ptr [rip+0x206a41],rdi
0x36b7: ret 
0x36c0: mov byte ptr [rip+0x206a29],dil
0x36c7: ret 
0x36d0: push rbp
0x36d1: push rbx
0x36d2: sub rsp,0x8
0x36d6: mov rdi,qword ptr [rip+0x2069cb]
0x36dd: call 0x6510
0x36e2: test eax,eax
0x36e4: je 0x36fc
0x36e6: call 0x1520
0x36eb: cmp byte ptr [rip+0x2069fe],0x0
0x36f2: mov rbx,rax
0x36f5: je 0x3713
0x36f7: cmp dword ptr [rax],0x20
0x36fa: jne 0x3713
0x36fc: mov rdi,qword ptr [rip+0x2069dd]
0x3703: call 0x6510
0x3708: test eax,eax
0x370a: jne 0x3752
0x370c: add rsp,0x8
0x3710: pop rbx
0x3711: pop rbp
0x3712: ret 
0x3713: lea rsi,[rip+0x397b]
0x371a: xor edi,edi
0x371c: mov edx,0x5
0x3721: call 0x15a0
0x3726: mov rdi,qword ptr [rip+0x2069cb]
0x372d: mov rbp,rax
0x3730: test rdi,rdi
0x3733: je 0x375d
0x3735: call 0x5400
0x373a: mov esi,dword ptr [rbx]
0x373c: lea rdx,[rip+0x3277]
0x3743: mov rcx,rax
0x3746: mov r8,rbp
0x3749: xor edi,edi
0x374b: xor eax,eax
0x374d: call 0x1770
0x3752: mov edi,dword ptr [rip+0x2068c8]
0x3758: call 0x1540
0x375d: mov esi,dword ptr [rbx]
0x375f: lea rdx,[rip+0x3258]
0x3766: mov rcx,rax
0x3769: xor edi,edi
0x376b: xor eax,eax
0x376d: call 0x1770
0x3772: jmp 0x3752
0x398f: nop 
0x3990: push rbp
0x3991: push rbx
0x3992: mov rbp,rdi
0x3995: mov ebx,esi
0x3997: sub rsp,0x8
0x399b: call 0x65f0
0x39a0: movzx edx,byte ptr [rax]
0x39a3: and edx,-0x21
0x39a6: cmp dl,0x55
0x39a9: je 0x3a20
0x39ab: cmp dl,0x47
0x39ae: je 0x39d0
0x39b0: lea rax,[rip+0x3744]
0x39b7: lea rdx,[rip+0x373f]
0x39be: cmp ebx,0x9
0x39c1: cmovne rax,rdx
0x39c5: add rsp,0x8
0x39c9: pop rbx
0x39ca: pop rbp
0x39cb: ret 
0x39d0: movzx edx,byte ptr [rax+0x1]
0x39d4: and edx,-0x21
0x39d7: cmp dl,0x42
0x39da: jne 0x39b0
0x39dc: cmp byte ptr [rax+0x2],0x31
0x39e0: jne 0x39b0
0x39e2: cmp byte ptr [rax+0x3],0x38
0x39e6: jne 0x39b0
0x39e8: cmp byte ptr [rax+0x4],0x30
0x39ec: jne 0x39b0
0x39ee: cmp byte ptr [rax+0x5],0x33
0x39f2: jne 0x39b0
0x39f4: cmp byte ptr [rax+0x6],0x30
0x39f8: jne 0x39b0
0x39fa: cmp byte ptr [rax+0x7],0x0
0x39fe: jne 0x39b0
0x3a00: cmp byte ptr [rbp],0x60
0x3a04: lea rax,[rip+0x36e9]
0x3a0b: lea rdx,[rip+0x36e6]
0x3a12: cmovne rax,rdx
0x3a16: add rsp,0x8
0x3a1a: pop rbx
0x3a1b: pop rbp
0x3a1c: ret 
0x3a20: movzx edx,byte ptr [rax+0x1]
0x3a24: and edx,-0x21
0x3a27: cmp dl,0x54
0x3a2a: jne 0x39b0
0x3a2c: movzx edx,byte ptr [rax+0x2]
0x3a30: and edx,-0x21
0x3a33: cmp dl,0x46
0x3a36: jne 0x39b0
0x3a3c: cmp byte ptr [rax+0x3],0x2d
0x3a40: jne 0x39b0
0x3a46: cmp byte ptr [rax+0x4],0x38
0x3a4a: jne 0x39b0
0x3a50: cmp byte ptr [rax+0x5],0x0
0x3a54: jne 0x39b0
0x3a5a: cmp byte ptr [rbp],0x60
0x3a5e: lea rax,[rip+0x3687]
0x3a65: lea rdx,[rip+0x3684]
0x3a6c: cmovne rax,rdx
0x3a70: add rsp,0x8
0x3a74: pop rbx
0x3a75: pop rbp
0x3a76: ret 
0x3b53: xor r11d,r11d
0x3b56: mov rax,rbp
0x3b59: mov r8d,r12d
0x3b5c: mov rbp,r11
0x3b5f: mov r11,rax
0x3b62: nop word ptr [rax+rax]
0x3b68: cmp r11,rbp
0x3b6b: setne r12b
0x3b6f: cmp r11,-0x1
0x3b73: jne 0x3b82
0x3b75: mov rax,qword ptr [rsp+0x10]
0x3b7a: cmp byte ptr [rax+rbp],0x0
0x3b7e: setne r12b
0x3b82: test r12b,r12b
0x3b85: je 0x41e0
0x3b8b: cmp dword ptr [rsp+0x8],0x2
0x3b90: mov rdi,qword ptr [rsp+0x10]
0x3b95: lea r9,[rdi+rbp]
0x3b99: setne al
0x3b9c: and al,byte ptr [rsp+0xd]
0x3ba0: mov r10d,eax
0x3ba3: je 0x3c50
0x3ba9: mov rax,qword ptr [rsp+0x18]
0x3bae: test rax,rax
0x3bb1: je 0x3fe0
0x3bb7: cmp r11,-0x1
0x3bbb: lea rbx,[rbp+rax]
0x3bc0: jne 0x3bf0
0x3bc2: cmp rax,0x1
0x3bc6: jbe 0x3bf0
0x3bc8: mov byte ptr [rsp+0x38],r8b
0x3bcd: mov byte ptr [rsp+0x30],r10b
0x3bd2: mov qword ptr [rsp+0x28],r9
0x3bd7: call 0x15c0
0x3bdc: movzx r8d,byte ptr [rsp+0x38]
0x3be2: movzx r10d,byte ptr [rsp+0x30]
0x3be8: mov r11,rax
0x3beb: mov r9,qword ptr [rsp+0x28]
0x3bf0: cmp rbx,r11
0x3bf3: mov byte ptr [rsp+0x28],r10b
0x3bf8: ja 0x41b0
0x3bfe: mov rdx,qword ptr [rsp+0x18]
0x3c03: mov rsi,qword ptr [rsp+0x48]
0x3c08: mov rdi,r9
0x3c0b: mov qword ptr [rsp+0x40],r11
0x3c10: mov byte ptr [rsp+0x38],r8b
0x3c15: mov qword ptr [rsp+0x30],r9
0x3c1a: call 0x1690
0x3c1f: test eax,eax
0x3c21: mov r9,qword ptr [rsp+0x30]
0x3c26: movzx r8d,byte ptr [rsp+0x38]
0x3c2c: mov r11,qword ptr [rsp+0x40]
0x3c31: jne 0x41b0
0x3c37: cmp byte ptr [rsp+0xf],0x0
0x3c3c: movzx r10d,byte ptr [rsp+0x28]
0x3c42: jne 0x4bc5
0x3c48: nop dword ptr [rax+rax]
0x3c50: movzx ebx,byte ptr [r9]
0x3c54: cmp bl,0x7e
0x3c57: ja 0x3f78
0x3c5d: lea rcx,[rip+0x3528]
0x3c64: movzx edx,bl
0x3c67: movsxd rax,dword ptr [rcx+rdx*4]
0x3c6b: add rax,rcx
0x3c6e: jmp rax
0x3ca8: cmp byte ptr [rsp+0xd],0x1
0x3cad: jne 0x3dc2
0x3cb3: test dl,dl
0x3cb5: jne 0x3dc2
0x3cbb: mov rsi,qword ptr [rsp+0x20]
0x3cc0: test rsi,rsi
0x3cc3: je 0x3cd9
0x3cc5: mov edx,ebx
0x3cc7: shr dl,0x5
0x3cca: movzx edx,dl
0x3ccd: mov edx,dword ptr [rsi+rdx*4]
0x3cd0: btl edx,ebx
0x3cd3: jb 0x3e23
0x3cd9: test r10b,r10b
0x3cdc: jne 0x3e23
0x3ce2: xor eax,0x1
0x3ce5: add rbp,0x1
0x3ce9: and eax,r8d
0x3cec: test al,al
0x3cee: je 0x3d10
0x3cf0: cmp r13,r15
0x3cf3: jbe 0x3cfa
0x3cf5: mov byte ptr [r14+r15],0x27
0x3cfa: lea rax,[r15+0x1]
0x3cfe: cmp r13,rax
0x3d01: jbe 0x3d09
0x3d03: mov byte ptr [r14+r15+0x1],0x27
0x3d09: add r15,0x2
0x3d0d: xor r8d,r8d
0x3d10: cmp r15,r13
0x3d13: jae 0x3d19
0x3d15: mov byte ptr [r14+r15],bl
0x3d19: movzx edi,byte ptr [rsp+0xe]
0x3d1e: add r15,0x1
0x3d22: mov eax,0x0
0x3d27: test r12b,r12b
0x3d2a: cmove edi,eax
0x3d2d: mov byte ptr [rsp+0xe],dil
0x3d32: jmp 0x3b68
0x3dc2: cmp byte ptr [rsp+0xf],0x0
0x3dc7: jne 0x3cbb
0x3dcd: jmp 0x3cd9
0x3e23: cmp dword ptr [rsp+0x8],0x2
0x3e28: sete dl
0x3e2b: cmp byte ptr [rsp+0xf],0x0
0x3e30: mov eax,edx
0x3e32: jne 0x4688
0x3e38: mov eax,r8d
0x3e3b: xor eax,0x1
0x3e3e: and al,dl
0x3e40: je 0x3e71
0x3e42: cmp r13,r15
0x3e45: jbe 0x3e4c
0x3e47: mov byte ptr [r14+r15],0x27
0x3e4c: lea rdx,[r15+0x1]
0x3e50: cmp r13,rdx
0x3e53: jbe 0x3e5b
0x3e55: mov byte ptr [r14+r15+0x1],0x24
0x3e5b: lea rdx,[r15+0x2]
0x3e5f: cmp r13,rdx
0x3e62: jbe 0x3e6a
0x3e64: mov byte ptr [r14+r15+0x2],0x27
0x3e6a: add r15,0x3
0x3e6e: mov r8d,eax
0x3e71: cmp r13,r15
0x3e74: jbe 0x3e7b
0x3e76: mov byte ptr [r14+r15],0x5c
0x3e7b: add r15,0x1
0x3e7f: add rbp,0x1
0x3e83: jmp 0x3d10
0x3f70: xor r10d,r10d
0x3f73: nop dword ptr [rax+rax]
0x3f78: cmp qword ptr [rsp+0x58],0x1
0x3f7e: jne 0x4328
0x3f84: mov qword ptr [rsp+0x38],r11
0x3f89: mov byte ptr [rsp+0x30],r8b
0x3f8e: mov byte ptr [rsp+0x28],r10b
0x3f93: call 0x1810
0x3f98: mov rcx,qword ptr [rax]
0x3f9b: movzx edx,bl
0x3f9e: movzx r10d,byte ptr [rsp+0x28]
0x3fa4: movzx r8d,byte ptr [rsp+0x30]
0x3faa: mov r11,qword ptr [rsp+0x38]
0x3faf: mov edi,0x1
0x3fb4: movzx eax,word ptr [rcx+rdx*2]
0x3fb8: and ax,0x4000
0x3fbc: setne r12b
0x3fc0: sete al
0x3fc3: and al,byte ptr [rsp+0xd]
0x3fc7: test al,al
0x3fc9: jne 0x4961
0x3fcf: cmp dword ptr [rsp+0x8],0x2
0x3fd4: sete dl
0x3fd7: jmp 0x3ca8
0x3fe0: movzx ebx,byte ptr [r9]
0x3fe4: cmp bl,0x7e
0x3fe7: ja 0x3f70
0x3fe9: lea rcx,[rip+0x3398]
0x3ff0: movzx edx,bl
0x3ff3: movsxd rax,dword ptr [rcx+rdx*4]
0x3ff7: add rax,rcx
0x3ffa: jmp rax
0x41b0: xor r10d,r10d
0x41b3: jmp 0x3c50
0x41e0: cmp dword ptr [rsp+0x8],0x2
0x41e5: movzx ebx,byte ptr [rsp+0xf]
0x41ea: mov r12d,r8d
0x41ed: mov rbp,r11
0x41f0: sete dl
0x41f3: mov eax,ebx
0x41f5: test r15,r15
0x41f8: sete cl
0x41fb: and eax,edx
0x41fd: and al,cl
0x41ff: jne 0x4c66
0x4205: mov eax,ebx
0x4207: xor eax,0x1
0x420a: and dl,al
0x420c: je 0x4b7c
0x4212: cmp byte ptr [rsp+0x7c],0x0
0x4217: je 0x4b7a
0x421d: cmp byte ptr [rsp+0xe],0x0
0x4222: jne 0x4c1d
0x4228: test r13,r13
0x422b: sete al
0x422e: cmp qword ptr [rsp+0x50],0x0
0x4234: setne dl
0x4237: and al,dl
0x4239: je 0x4c5c
0x423f: mov r13,qword ptr [rsp+0x50]
0x4244: lea rbx,[rip+0x2eb2]
0x424b: mov byte ptr [r14],0x27
0x424f: mov dword ptr [rsp+0x8],0x2
0x4257: mov r15d,0x1
0x425d: mov qword ptr [rsp+0x18],0x1
0x4266: mov byte ptr [rsp+0xf],0x0
0x426b: mov qword ptr [rsp+0x48],rbx
0x4270: mov byte ptr [rsp+0x7c],al
0x4274: jmp 0x3b53
0x4328: lea rax,[rsp+0xa0]
0x4330: cmp r11,-0x1
0x4334: mov qword ptr [rsp+0xa0],0x0
0x4340: mov qword ptr [rsp+0x28],rax
0x4345: jne 0x4374
0x4347: mov rdi,qword ptr [rsp+0x10]
0x434c: mov byte ptr [rsp+0x40],r8b
0x4351: mov byte ptr [rsp+0x38],r10b
0x4356: mov qword ptr [rsp+0x30],r9
0x435b: call 0x15c0
0x4360: movzx r8d,byte ptr [rsp+0x40]
0x4366: movzx r10d,byte ptr [rsp+0x38]
0x436c: mov r11,rax
0x436f: mov r9,qword ptr [rsp+0x30]
0x4374: lea rax,[rsp+0x9c]
0x437c: xor ecx,ecx
0x437e: mov byte ptr [rsp+0x7e],bl
0x4382: mov byte ptr [rsp+0x7d],r8b
0x4387: mov rbx,rcx
0x438a: mov qword ptr [rsp+0x88],r9
0x4392: mov qword ptr [rsp+0x38],rax
0x4397: mov byte ptr [rsp+0x7f],r10b
0x439c: mov qword ptr [rsp+0x80],r15
0x43a4: mov qword ptr [rsp+0x40],r14
0x43a9: mov qword ptr [rsp+0x70],r13
0x43ae: mov qword ptr [rsp+0x30],r11
0x43b3: mov rax,qword ptr [rsp+0x10]
0x43b8: lea r14,[rbp+rbx]
0x43bd: mov rdx,qword ptr [rsp+0x30]
0x43c2: mov rcx,qword ptr [rsp+0x28]
0x43c7: mov rdi,qword ptr [rsp+0x38]
0x43cc: lea r13,[rax+r14]
0x43d0: sub rdx,r14
0x43d3: mov rsi,r13
0x43d6: call 0x6480
0x43db: test rax,rax
0x43de: mov r15,rax
0x43e1: je 0x4431
0x43e3: cmp rax,-0x1
0x43e7: je 0x4a05
0x43ed: cmp rax,-0x2
0x43f1: je 0x4991
0x43f7: cmp dword ptr [rsp+0x8],0x2
0x43fc: sete al
0x43ff: and al,byte ptr [rsp+0xf]
0x4403: jne 0x45a0
0x4409: mov edi,dword ptr [rsp+0x9c]
0x4410: call 0x1800
0x4415: mov rdi,qword ptr [rsp+0x28]
0x441a: test eax,eax
0x441c: mov eax,0x0
0x4421: cmove r12d,eax
0x4425: add rbx,r15
0x4428: call 0x17f0
0x442d: test eax,eax
0x442f: je 0x43b3
0x4431: mov edx,r12d
0x4434: mov rdi,rbx
0x4437: movzx r8d,byte ptr [rsp+0x7d]
0x443d: xor edx,0x1
0x4440: movzx ebx,byte ptr [rsp+0x7e]
0x4445: movzx r10d,byte ptr [rsp+0x7f]
0x444b: and dl,byte ptr [rsp+0xd]
0x444f: mov r15,qword ptr [rsp+0x80]
0x4457: mov r14,qword ptr [rsp+0x40]
0x445c: mov r13,qword ptr [rsp+0x70]
0x4461: mov r11,qword ptr [rsp+0x30]
0x4466: cmp rdi,0x1
0x446a: jbe 0x4a6b
0x4470: mov rcx,rdi
0x4473: xor esi,esi
0x4475: movzx r9d,byte ptr [rsp+0xf]
0x447b: add rcx,rbp
0x447e: mov rdi,qword ptr [rsp+0x10]
0x4483: jmp 0x453e
0x4490: cmp dword ptr [rsp+0x8],0x2
0x4495: sete al
0x4498: test r9b,r9b
0x449b: jne 0x4950
0x44a1: mov esi,r8d
0x44a4: xor esi,0x1
0x44a7: and al,sil
0x44aa: je 0x44db
0x44ac: cmp r13,r15
0x44af: jbe 0x44b6
0x44b1: mov byte ptr [r14+r15],0x27
0x44b6: lea rsi,[r15+0x1]
0x44ba: cmp r13,rsi
0x44bd: jbe 0x44c5
0x44bf: mov byte ptr [r14+r15+0x1],0x24
0x44c5: lea rsi,[r15+0x2]
0x44c9: cmp r13,rsi
0x44cc: jbe 0x44d4
0x44ce: mov byte ptr [r14+r15+0x2],0x27
0x44d4: add r15,0x3
0x44d8: mov r8d,eax
0x44db: cmp r13,r15
0x44de: jbe 0x44e5
0x44e0: mov byte ptr [r14+r15],0x5c
0x44e5: lea rax,[r15+0x1]
0x44e9: cmp r13,rax
0x44ec: jbe 0x44fb
0x44ee: mov eax,ebx
0x44f0: shr al,0x6
0x44f3: add eax,0x30
0x44f6: mov byte ptr [r14+r15+0x1],al
0x44fb: lea rax,[r15+0x2]
0x44ff: cmp r13,rax
0x4502: jbe 0x4514
0x4504: mov eax,ebx
0x4506: shr al,0x3
0x4509: and eax,0x7
0x450c: add eax,0x30
0x450f: mov byte ptr [r14+r15+0x2],al
0x4514: and ebx,0x7
0x4517: add rbp,0x1
0x451b: add r15,0x3
0x451f: add ebx,0x30
0x4522: cmp rbp,rcx
0x4525: jae 0x3d10
0x452b: mov esi,edx
0x452d: cmp r13,r15
0x4530: jbe 0x4536
0x4532: mov byte ptr [r14+r15],bl
0x4536: movzx ebx,byte ptr [rdi+rbp]
0x453a: add r15,0x1
0x453e: test dl,dl
0x4540: jne 0x4490
0x4546: mov eax,esi
0x4548: xor eax,0x1
0x454b: and eax,r8d
0x454e: test r10b,r10b
0x4551: je 0x4561
0x4553: cmp r13,r15
0x4556: jbe 0x455d
0x4558: mov byte ptr [r14+r15],0x5c
0x455d: add r15,0x1
0x4561: add rbp,0x1
0x4565: cmp rbp,rcx
0x4568: jae 0x3cec
0x456e: test al,al
0x4570: je 0x496e
0x4576: cmp r13,r15
0x4579: jbe 0x4580
0x457b: mov byte ptr [r14+r15],0x27
0x4580: lea rax,[r15+0x1]
0x4584: cmp r13,rax
0x4587: jbe 0x458f
0x4589: mov byte ptr [r14+r15+0x1],0x27
0x458f: add r15,0x2
0x4593: xor r10d,r10d
0x4596: xor r8d,r8d
0x4599: jmp 0x452d
0x45a0: cmp r15,0x1
0x45a4: je 0x4409
0x45aa: mov rdi,qword ptr [rsp+0x10]
0x45af: lea rcx,[rdi+r15]
0x45b3: lea rdx,[rdi+r14+0x1]
0x45b8: lea r8,[rcx+r14]
0x45bc: jmp 0x45cd
0x45c0: add rdx,0x1
0x45c4: cmp r8,rdx
0x45c7: je 0x4409
0x45cd: movzx ecx,byte ptr [rdx]
0x45d0: sub ecx,0x5b
0x45d3: cmp cl,0x21
0x45d6: ja 0x45c0
0x45d8: mov esi,0x1
0x45dd: shl rsi,cl
0x45e0: mov rcx,rsi
0x45e3: movabsq rsi,0x20000002b
0x45ed: test rcx,rsi
0x45f0: je 0x45c0
0x45f2: mov r14,qword ptr [rsp+0x40]
0x45f7: mov r13,qword ptr [rsp+0x70]
0x45fc: mov rbp,qword ptr [rsp+0x30]
0x4601: mov dword ptr [rsp+0x8],0x2
0x4609: cmp byte ptr [rsp+0xd],0x0
0x460e: je 0x4620
0x4610: test al,al
0x4612: mov eax,0x4
0x4617: cmove eax,dword ptr [rsp+0x8]
0x461c: mov dword ptr [rsp+0x8],eax
0x4620: sub rsp,0x8
0x4624: mov rcx,rbp
0x4627: mov rsi,r13
0x462a: push qword ptr [rsp+0x68]
0x462e: push qword ptr [rsp+0x78]
0x4632: mov rdi,r14
0x4635: push 0x0
0x4637: mov r9d,dword ptr [rsp+0x98]
0x463f: mov r8d,dword ptr [rsp+0x28]
0x4644: mov rdx,qword ptr [rsp+0x30]
0x4649: and r9d,-0x3
0x464d: call 0x3a80
0x4652: add rsp,0x20
0x4656: mov r15,rax
0x4659: mov rbx,qword ptr [rsp+0xa8]
0x4661: xor rbx,qword ptr fs:0x28
0x466a: mov rax,r15
0x466d: jne 0x4c73
0x4673: add rsp,0xb8
0x467a: pop rbx
0x467b: pop rbp
0x467c: pop r12
0x467e: pop r13
0x4680: pop r14
0x4682: pop r15
0x4684: ret 
0x4688: mov rbp,r11
0x468b: jmp 0x4609
0x46f1: test r13,r13
0x46f4: jne 0x4c8a
0x46fa: lea rax,[rip+0x29fc]
0x4701: mov qword ptr [rsp+0x50],0x0
0x470a: mov byte ptr [rsp+0xe],0x1
0x470f: mov byte ptr [rsp+0x7c],0x0
0x4714: xor r12d,r12d
0x4717: mov byte ptr [rsp+0xf],0x0
0x471c: mov qword ptr [rsp+0x18],0x1
0x4725: mov qword ptr [rsp+0x48],rax
0x472a: mov r15d,0x1
0x4730: mov dword ptr [rsp+0x8],0x2
0x4738: jmp 0x3b53
0x4950: movzx ebx,byte ptr [rsp+0xf]
0x4955: mov rbp,r11
0x4958: mov byte ptr [rsp+0xd],bl
0x495c: jmp 0x4609
0x4961: movzx edx,byte ptr [rsp+0xd]
0x4966: xor r12d,r12d
0x4969: jmp 0x4470
0x496e: xor r10d,r10d
0x4971: jmp 0x452d
0x4991: mov r11,qword ptr [rsp+0x30]
0x4996: mov rsi,r14
0x4999: mov rcx,r13
0x499c: mov rax,rbx
0x499f: mov rdi,rbx
0x49a2: movzx r8d,byte ptr [rsp+0x7d]
0x49a8: movzx ebx,byte ptr [rsp+0x7e]
0x49ad: mov r9,qword ptr [rsp+0x88]
0x49b5: cmp rsi,r11
0x49b8: movzx r10d,byte ptr [rsp+0x7f]
0x49be: mov r15,qword ptr [rsp+0x80]
0x49c6: mov r14,qword ptr [rsp+0x40]
0x49cb: mov r13,qword ptr [rsp+0x70]
0x49d0: jae 0x49f8
0x49d2: cmp byte ptr [rcx],0x0
0x49d5: jne 0x49e7
0x49d7: jmp 0x49f8
0x49e0: cmp byte ptr [r9+rax],0x0
0x49e5: je 0x49f5
0x49e7: add rax,0x1
0x49eb: lea rdx,[rbp+rax]
0x49f0: cmp r11,rdx
0x49f3: ja 0x49e0
0x49f5: mov rdi,rax
0x49f8: movzx edx,byte ptr [rsp+0xd]
0x49fd: xor r12d,r12d
0x4a00: jmp 0x4466
0x4a05: mov rdi,rbx
0x4a08: movzx r8d,byte ptr [rsp+0x7d]
0x4a0e: movzx ebx,byte ptr [rsp+0x7e]
0x4a13: movzx r10d,byte ptr [rsp+0x7f]
0x4a19: mov r15,qword ptr [rsp+0x80]
0x4a21: xor r12d,r12d
0x4a24: mov r14,qword ptr [rsp+0x40]
0x4a29: mov r13,qword ptr [rsp+0x70]
0x4a2e: mov r11,qword ptr [rsp+0x30]
0x4a33: movzx edx,byte ptr [rsp+0xd]
0x4a38: jmp 0x4466
0x4a6b: mov eax,edx
0x4a6d: jmp 0x3fc7
0x4b7a: mov eax,edx
0x4b7c: mov rbx,qword ptr [rsp+0x48]
0x4b81: test rbx,rbx
0x4b84: je 0x4bb2
0x4b86: test al,al
0x4b88: je 0x4bb2
0x4b8a: movzx ecx,byte ptr [rbx]
0x4b8d: mov rax,rbx
0x4b90: test cl,cl
0x4b92: je 0x4bb2
0x4b94: mov rdx,r15
0x4b97: sub rax,r15
0x4b9a: cmp r13,rdx
0x4b9d: jbe 0x4ba3
0x4b9f: mov byte ptr [r14+rdx],cl
0x4ba3: add rdx,0x1
0x4ba7: movzx ecx,byte ptr [rax+rdx]
0x4bab: test cl,cl
0x4bad: jne 0x4b9a
0x4baf: mov r15,rdx
0x4bb2: cmp r13,r15
0x4bb5: jbe 0x4659
0x4bbb: mov byte ptr [r14+r15],0x0
0x4bc0: jmp 0x4659
0x4bc5: cmp dword ptr [rsp+0x8],0x2
0x4bca: movzx ebx,byte ptr [rsp+0xf]
0x4bcf: mov rbp,r11
0x4bd2: sete al
0x4bd5: mov byte ptr [rsp+0xd],bl
0x4bd9: jmp 0x4609
0x4c1d: sub rsp,0x8
0x4c21: mov r8d,0x5
0x4c27: mov rcx,r11
0x4c2a: push qword ptr [rsp+0x68]
0x4c2e: push qword ptr [rsp+0x78]
0x4c32: mov rdi,r14
0x4c35: push qword ptr [rsp+0x38]
0x4c39: mov r9d,dword ptr [rsp+0x98]
0x4c41: mov rdx,qword ptr [rsp+0x30]
0x4c46: mov rsi,qword ptr [rsp+0x70]
0x4c4b: call 0x3a80
0x4c50: add rsp,0x20
0x4c54: mov r15,rax
0x4c57: jmp 0x4659
0x4c5c: movzx eax,byte ptr [rsp+0x7c]
0x4c61: jmp 0x4b7c
0x4c66: mov dword ptr [rsp+0x8],0x2
0x4c6e: jmp 0x4609
0x4c73: call 0x15d0
0x4c78: mov byte ptr [rsp+0xd],0x0
0x4c7d: jmp 0x46f1
0x4c8a: mov byte ptr [rsp+0xe],0x1
0x4c8f: xor eax,eax
0x4c91: xor r12d,r12d
0x4c94: mov qword ptr [rsp+0x50],0x0
0x4c9d: jmp 0x4244
0x4cb4: nop 
0x4cb6: nop word ptr cs:[rax+rax]
0x4dac: add rsp,0x20
0x4db0: mov r11,qword ptr [rsp+0x10]
0x4db5: cmp r11,rax
0x4db8: ja 0x4e21
0x4dba: lea rsi,[rax+0x1]
0x4dbe: lea rax,[rip+0x20535b]
0x4dc5: cmp r12,rax
0x4dc8: mov qword ptr [rbx],rsi
0x4dcb: je 0x4ddf
0x4dcd: mov rdi,r12
0x4dd0: mov qword ptr [rsp+0x10],rsi
0x4dd5: call 0x1500
0x4dda: mov rsi,qword ptr [rsp+0x10]
0x4ddf: mov rdi,rsi
0x4de2: mov qword ptr [rsp+0x10],rsi
0x4de7: call 0x5ca0
0x4dec: sub rsp,0x8
0x4df0: mov qword ptr [rbx+0x8],rax
0x4df4: mov r8d,dword ptr [rbp]
0x4df8: push qword ptr [rbp+0x30]
0x4dfb: push qword ptr [rbp+0x28]
0x4dfe: mov rcx,r14
0x4e01: push r15
0x4e03: mov r9d,dword ptr [rsp+0x3c]
0x4e08: mov rdi,rax
0x4e0b: mov rdx,qword ptr [rsp+0x28]
0x4e10: mov rsi,qword ptr [rsp+0x30]
0x4e15: mov r12,rax
0x4e18: call 0x3a80
0x4e1d: add rsp,0x20
0x4e21: mov eax,dword ptr [rsp+0x18]
0x4e25: mov dword ptr [r13],eax
0x4e29: add rsp,0x28
0x4e2d: mov rax,r12
0x4e30: pop rbx
0x4e31: pop rbp
0x4e32: pop r12
0x4e34: pop r13
0x4e36: pop r14
0x4e38: pop r15
0x4e3a: ret 
0x4e61: call 0x1510
0x4e66: call 0x5ef0
0x4e6b: nop dword ptr [rax+rax]
0x4e70: push r12
0x4e72: push rbp
0x4e73: push rbx
0x4e74: mov rbx,rdi
0x4e77: call 0x1520
0x4e7c: mov r12d,dword ptr [rax]
0x4e7f: mov rbp,rax
0x4e82: lea rax,[rip+0x205397]
0x4e89: test rbx,rbx
0x4e8c: mov esi,0x38
0x4e91: cmove rbx,rax
0x4e95: mov rdi,rbx
0x4e98: call 0x5ea0
0x4e9d: mov dword ptr [rbp],r12d
0x4ea1: pop rbx
0x4ea2: pop rbp
0x4ea3: pop r12
0x4ea5: ret 
0x4eb0: lea rax,[rip+0x205369]
0x4eb7: test rdi,rdi
0x4eba: cmove rdi,rax
0x4ebe: mov eax,dword ptr [rdi]
0x4ec0: ret 
0x4ed0: lea rax,[rip+0x205349]
0x4ed7: test rdi,rdi
0x4eda: cmove rdi,rax
0x4ede: mov dword ptr [rdi],esi
0x4ee0: ret 
0x4ef0: lea rax,[rip+0x205329]
0x4ef7: test rdi,rdi
0x4efa: mov ecx,esi
0x4efc: cmove rdi,rax
0x4f00: mov eax,esi
0x4f02: and ecx,0x1f
0x4f05: shr al,0x5
0x4f08: movzx eax,al
0x4f0b: lea rdi,[rdi+rax*4+0x8]
0x4f10: mov esi,dword ptr [rdi]
0x4f12: mov eax,esi
0x4f14: shr eax,cl
0x4f16: xor edx,eax
0x4f18: and eax,0x1
0x4f1b: and edx,0x1
0x4f1e: shl edx,cl
0x4f20: xor edx,esi
0x4f22: mov dword ptr [rdi],edx
0x4f24: ret 
0x4f30: lea rax,[rip+0x2052e9]
0x4f37: test rdi,rdi
0x4f3a: cmove rdi,rax
0x4f3e: mov eax,dword ptr [rdi+0x4]
0x4f41: mov dword ptr [rdi+0x4],esi
0x4f44: ret 
0x4f50: lea rax,[rip+0x2052c9]
0x4f57: test rdi,rdi
0x4f5a: cmove rdi,rax
0x4f5e: test rsi,rsi
0x4f61: mov dword ptr [rdi],0xa
0x4f67: je 0x4f77
0x4f69: test rdx,rdx
0x4f6c: je 0x4f77
0x4f6e: mov qword ptr [rdi+0x28],rsi
0x4f72: mov qword ptr [rdi+0x30],rdx
0x4f76: ret 
0x4f77: sub rsp,0x8
0x4f7b: call 0x1510
0x4f80: push r15
0x4f82: push r14
0x4f84: lea rax,[rip+0x205295]
0x4f8b: push r13
0x4f8d: push r12
0x4f8f: mov r13,rdi
0x4f92: push rbp
0x4f93: push rbx
0x4f94: mov rbx,r8
0x4f97: mov r14,rsi
0x4f9a: mov r15,rdx
0x4f9d: sub rsp,0x18
0x4fa1: test r8,r8
0x4fa4: cmove rbx,rax
0x4fa8: mov qword ptr [rsp+0x8],rcx
0x4fad: call 0x1520
0x4fb2: mov r12d,dword ptr [rax]
0x4fb5: mov rbp,rax
0x4fb8: lea rax,[rbx+0x8]
0x4fbc: sub rsp,0x8
0x4fc0: mov r9d,dword ptr [rbx+0x4]
0x4fc4: push qword ptr [rbx+0x30]
0x4fc7: mov r8d,dword ptr [rbx]
0x4fca: push qword ptr [rbx+0x28]
0x4fcd: mov rdx,r15
0x4fd0: push rax
0x4fd1: mov rcx,qword ptr [rsp+0x28]
0x4fd6: mov rsi,r14
0x4fd9: mov rdi,r13
0x4fdc: call 0x3a80
0x4fe1: mov dword ptr [rbp],r12d
0x4fe5: add rsp,0x38
0x4fe9: pop rbx
0x4fea: pop rbp
0x4feb: pop r12
0x4fed: pop r13
0x4fef: pop r14
0x4ff1: pop r15
0x4ff3: ret 
0x5000: push r15
0x5002: push r14
0x5004: lea rax,[rip+0x205215]
0x500b: push r13
0x500d: push r12
0x500f: mov r12,rdx
0x5012: push rbp
0x5013: push rbx
0x5014: mov rbx,rcx
0x5017: mov r14,rdi
0x501a: mov r15,rsi
0x501d: sub rsp,0x38
0x5021: test rcx,rcx
0x5024: cmove rbx,rax
0x5028: xor ebp,ebp
0x502a: call 0x1520
0x502f: test r12,r12
0x5032: mov r13,rax
0x5035: mov eax,dword ptr [rax]
0x5037: sete bpl
0x503b: or ebp,dword ptr [rbx+0x4]
0x503e: lea r10,[rbx+0x8]
0x5042: sub rsp,0x8
0x5046: mov r8d,dword ptr [rbx]
0x5049: mov rcx,r15
0x504c: mov dword ptr [rsp+0x14],eax
0x5050: push qword ptr [rbx+0x30]
0x5053: mov rdx,r14
0x5056: push qword ptr [rbx+0x28]
0x5059: push r10
0x505b: xor esi,esi
0x505d: mov r9d,ebp
0x5060: xor edi,edi
0x5062: mov qword ptr [rsp+0x40],r10
0x5067: call 0x3a80
0x506c: lea rsi,[rax+0x1]
0x5070: mov qword ptr [rsp+0x48],rax
0x5075: add rsp,0x20
0x5079: mov rdi,rsi
0x507c: mov qword ptr [rsp+0x18],rsi
0x5081: call 0x5ca0
0x5086: mov qword ptr [rsp+0x10],rax
0x508b: sub rsp,0x8
0x508f: push qword ptr [rbx+0x30]
0x5092: push qword ptr [rbx+0x28]
0x5095: mov r10,qword ptr [rsp+0x38]
0x509a: mov r9d,ebp
0x509d: mov r8d,dword ptr [rbx]
0x50a0: mov rcx,r15
0x50a3: mov rdx,r14
0x50a6: mov rdi,rax
0x50a9: push r10
0x50ab: mov rsi,qword ptr [rsp+0x38]
0x50b0: call 0x3a80
0x50b5: mov eax,dword ptr [rsp+0x2c]
0x50b9: add rsp,0x20
0x50bd: test r12,r12
0x50c0: mov dword ptr [r13],eax
0x50c4: je 0x50cf
0x50c6: mov r11,qword ptr [rsp+0x28]
0x50cb: mov qword ptr [r12],r11
0x50cf: mov rax,qword ptr [rsp+0x10]
0x50d4: add rsp,0x38
0x50d8: pop rbx
0x50d9: pop rbp
0x50da: pop r12
0x50dc: pop r13
0x50de: pop r14
0x50e0: pop r15
0x50e2: ret 
0x50f0: mov rcx,rdx
0x50f3: xor edx,edx
0x50f5: jmp 0x5000
0x5100: mov eax,dword ptr [rip+0x204f72]
0x5106: push r12
0x5108: mov r12,qword ptr [rip+0x204f71]
0x510f: push rbp
0x5110: push rbx
0x5111: cmp eax,0x1
0x5114: jle 0x5141
0x5116: sub eax,0x2
0x5119: lea rbx,[r12+0x18]
0x511e: shl rax,0x4
0x5122: lea rbp,[r12+rax+0x28]
0x5127: nop word ptr [rax+rax]
0x5130: mov rdi,qword ptr [rbx]
0x5133: add rbx,0x10
0x5137: call 0x1500
0x513c: cmp rbx,rbp
0x513f: jne 0x5130
0x5141: mov rdi,qword ptr [r12+0x8]
0x5146: lea rbx,[rip+0x204fd3]
0x514d: cmp rdi,rbx
0x5150: je 0x5169
0x5152: call 0x1500
0x5157: mov qword ptr [rip+0x204f2e],0x100
0x5162: mov qword ptr [rip+0x204f2f],rbx
0x5169: lea rbx,[rip+0x204f20]
0x5170: cmp r12,rbx
0x5173: je 0x5184
0x5175: mov rdi,r12
0x5178: call 0x1500
0x517d: mov qword ptr [rip+0x204efc],rbx
0x5184: pop rbx
0x5185: mov dword ptr [rip+0x204ee9],0x1
0x518f: pop rbp
0x5190: pop r12
0x5192: ret 
0x51a0: lea rcx,[rip+0x205079]
0x51a7: mov rdx,-0x1
0x51ae: jmp 0x4cc0
0x51c0: lea rcx,[rip+0x205059]
0x51c7: jmp 0x4cc0
0x51d0: lea rcx,[rip+0x205049]
0x51d7: mov rsi,rdi
0x51da: mov rdx,-0x1
0x51e1: xor edi,edi
0x51e3: jmp 0x4cc0
0x51f0: lea rcx,[rip+0x205029]
0x51f7: mov rdx,rsi
0x51fa: mov rsi,rdi
0x51fd: xor edi,edi
0x51ff: jmp 0x4cc0
0x527f: mov rcx,qword ptr [rsp+0x38]
0x5284: xor rcx,qword ptr fs:0x28
0x528d: jne 0x5299
0x528f: add rsp,0x48
0x5293: ret 
0x5294: call 0x1510
0x5299: call 0x15d0
0x529e: nop 
0x52a0: sub rsp,0x48
0x52a4: mov rax,rdx
0x52a7: mov rdx,rcx
0x52aa: mov rcx,qword ptr fs:0x28
0x52b3: mov qword ptr [rsp+0x38],rcx
0x52b8: xor ecx,ecx
0x52ba: cmp esi,0xa
0x52bd: je 0x5320
0x52bf: mov dword ptr [rsp],esi
0x52c2: mov rcx,rsp
0x52c5: mov rsi,rax
0x52c8: mov qword ptr [rsp+0x4],0x0
0x52d1: mov qword ptr [rsp+0xc],0x0
0x52da: mov qword ptr [rsp+0x14],0x0
0x52e3: mov qword ptr [rsp+0x1c],0x0
0x52ec: mov qword ptr [rsp+0x24],0x0
0x52f5: mov qword ptr [rsp+0x2c],0x0
0x52fe: mov dword ptr [rsp+0x34],0x0
0x5306: call 0x4cc0
0x530b: mov rdx,qword ptr [rsp+0x38]
0x5310: xor rdx,qword ptr fs:0x28
0x5319: jne 0x5325
0x531b: add rsp,0x48
0x531f: ret 
0x5320: call 0x1510
0x5325: call 0x15d0
0x532a: nop word ptr [rax+rax]
0x5340: mov rcx,rdx
0x5343: mov rdx,rsi
0x5346: mov esi,edi
0x5348: xor edi,edi
0x534a: jmp 0x52a0
0x5350: sub rsp,0x48
0x5354: mov ecx,edx
0x5356: mov rax,qword ptr fs:0x28
0x535f: mov qword ptr [rsp+0x38],rax
0x5364: xor eax,eax
0x5366: mov rax,qword ptr [rip+0x204ee3]
0x536d: mov r8,rsp
0x5370: and ecx,0x1f
0x5373: movdqa xmm0,[rip+0x204ea5]
0x537b: mov qword ptr [rsp+0x30],rax
0x5380: mov eax,edx
0x5382: movaps [rsp],xmm0
0x5386: shr al,0x5
0x5389: movzx eax,al
0x538c: lea r9,[r8+rax*4+0x8]
0x5391: movdqa xmm0,[rip+0x204e97]
0x5399: movaps [rsp+0x10],xmm0
0x539e: movdqa xmm0,[rip+0x204e9a]
0x53a6: movaps [rsp+0x20],xmm0
0x53ab: mov edx,dword ptr [r9]
0x53ae: mov eax,edx
0x53b0: shr eax,cl
0x53b2: not eax
0x53b4: and eax,0x1
0x53b7: shl eax,cl
0x53b9: mov rcx,r8
0x53bc: xor eax,edx
0x53be: mov rdx,rsi
0x53c1: mov rsi,rdi
0x53c4: mov dword ptr [r9],eax
0x53c7: xor edi,edi
0x53c9: call 0x4cc0
0x53ce: mov rsi,qword ptr [rsp+0x38]
0x53d3: xor rsi,qword ptr fs:0x28
0x53dc: jne 0x53e3
0x53de: add rsp,0x48
0x53e2: ret 
0x53e3: call 0x15d0
0x53e8: nop dword ptr [rax+rax]
0x53f0: movsx edx,sil
0x53f4: mov rsi,-0x1
0x53fb: jmp 0x5350
0x5400: mov edx,0x3a
0x5405: mov rsi,-0x1
0x540c: jmp 0x5350
0x5420: mov edx,0x3a
0x5425: jmp 0x5350
0x549f: mov rcx,qword ptr [rsp+0x38]
0x54a4: xor rcx,qword ptr fs:0x28
0x54ad: jne 0x54b9
0x54af: add rsp,0x48
0x54b3: ret 
0x54b4: call 0x1510
0x54b9: call 0x15d0
0x54be: nop 
0x54c0: sub rsp,0x48
0x54c4: mov r9,rcx
0x54c7: mov rcx,qword ptr [rip+0x204d82]
0x54ce: movdqa xmm0,[rip+0x204d4a]
0x54d6: mov rax,qword ptr fs:0x28
0x54df: mov qword ptr [rsp+0x38],rax
0x54e4: xor eax,eax
0x54e6: movaps [rsp],xmm0
0x54ea: test rsi,rsi
0x54ed: mov qword ptr [rsp+0x30],rcx
0x54f2: mov dword ptr [rsp],0xa
0x54f9: movdqa xmm0,[rip+0x204d2f]
0x5501: movaps [rsp+0x10],xmm0
0x5506: movdqa xmm0,[rip+0x204d32]
0x550e: movaps [rsp+0x20],xmm0
0x5513: je 0x5547
0x5515: test rdx,rdx
0x5518: je 0x5547
0x551a: mov qword ptr [rsp+0x28],rsi
0x551f: mov qword ptr [rsp+0x30],rdx
0x5524: mov rcx,rsp
0x5527: mov rdx,r8
0x552a: mov rsi,r9
0x552d: call 0x4cc0
0x5532: mov rdi,qword ptr [rsp+0x38]
0x5537: xor rdi,qword ptr fs:0x28
0x5540: jne 0x554c
0x5542: add rsp,0x48
0x5546: ret 
0x5547: call 0x1510
0x554c: call 0x15d0
0x5551: nop dword ptr [rax+rax]
0x5556: nop word ptr cs:[rax+rax]
0x5560: mov r8,-0x1
0x5567: jmp 0x54c0
0x5570: mov rcx,rdx
0x5573: mov r8,-0x1
0x557a: mov rdx,rsi
0x557d: mov rsi,rdi
0x5580: xor edi,edi
0x5582: jmp 0x54c0
0x5590: mov r8,rcx
0x5593: mov rcx,rdx
0x5596: mov rdx,rsi
0x5599: mov rsi,rdi
0x559c: xor edi,edi
0x559e: jmp 0x54c0
0x55b0: lea rcx,[rip+0x204a89]
0x55b7: jmp 0x4cc0
0x55c0: lea rcx,[rip+0x204a79]
0x55c7: mov rdx,rsi
0x55ca: mov rsi,rdi
0x55cd: xor edi,edi
0x55cf: jmp 0x4cc0
0x55e0: lea rcx,[rip+0x204a59]
0x55e7: mov rdx,-0x1
0x55ee: jmp 0x4cc0
0x57b8: mov r8,rcx
0x57bb: mov rcx,rdx
0x57be: lea rdx,[rip+0x1e0f]
0x57c5: mov esi,0x1
0x57ca: xor eax,eax
0x57cc: call 0x17e0
0x57d1: jmp 0x56bc
0x59cd: push r12
0x59cf: push r15
0x59d1: push r14
0x59d3: mov r8,qword ptr [rsp+0x20]
0x59d8: mov rcx,rbx
0x59db: mov rdx,rax
0x59de: mov rdi,rbp
0x59e1: mov esi,0x1
0x59e6: xor eax,eax
0x59e8: call 0x17e0
0x59ed: add rsp,0x20
0x59f1: add rsp,0x28
0x59f5: pop rbx
0x59f6: pop rbp
0x59f7: pop r12
0x59f9: pop r13
0x59fb: pop r14
0x59fd: pop r15
0x59ff: ret 
0x5a39: push r12
0x5a3b: push r15
0x5a3d: push r14
0x5a3f: mov r9,qword ptr [rsp+0x28]
0x5a44: jmp 0x59d3
0x5aa0: xor r9d,r9d
0x5aa3: cmp qword ptr [r8],0x0
0x5aa7: je 0x5abb
0x5aa9: nop dword ptr [rax]
0x5ab0: add r9,0x1
0x5ab4: cmp qword ptr [r8+r9*8],0x0
0x5ab9: jne 0x5ab0
0x5abb: jmp 0x5680
0x5ac0: sub rsp,0x68
0x5ac4: mov r10,r8
0x5ac7: xor r9d,r9d
0x5aca: mov rax,qword ptr fs:0x28
0x5ad3: mov qword ptr [rsp+0x58],rax
0x5ad8: xor eax,eax
0x5ada: mov r8,rsp
0x5add: nop dword ptr [rax]
0x5ae0: mov eax,dword ptr [r10]
0x5ae3: cmp eax,0x2f
0x5ae6: ja 0x5b2a
0x5ae8: mov r11d,eax
0x5aeb: add r11,qword ptr [r10+0x10]
0x5aef: add eax,0x8
0x5af2: mov dword ptr [r10],eax
0x5af5: mov rax,qword ptr [r11]
0x5af8: test rax,rax
0x5afb: mov qword ptr [r8+r9*8],rax
0x5aff: je 0x5b0b
0x5b01: add r9,0x1
0x5b05: cmp r9,0xa
0x5b09: jne 0x5ae0
0x5b0b: call 0x5680
0x5b10: mov rax,qword ptr [rsp+0x58]
0x5b15: xor rax,qword ptr fs:0x28
0x5b1e: jne 0x5b25
0x5b20: add rsp,0x68
0x5b24: ret 
0x5b25: call 0x15d0
0x5b2a: mov r11,qword ptr [r10+0x8]
0x5b2e: lea rax,[r11+0x8]
0x5b32: mov qword ptr [r10+0x8],rax
0x5b36: jmp 0x5af5
0x5c00: call 0x15d0
0x5c0c: mov rax,rbx
0x5c0f: add rbx,0x8
0x5c13: jmp 0x5bc6
0x5c20: push rbx
0x5c21: lea rsi,[rip+0x19fa]
0x5c28: mov edx,0x5
0x5c2d: xor edi,edi
0x5c2f: call 0x15a0
0x5c34: lea rdx,[rip+0x19fc]
0x5c3b: mov rsi,rax
0x5c3e: mov edi,0x1
0x5c43: xor eax,eax
0x5c45: call 0x1760
0x5c4a: lea rsi,[rip+0x19fc]
0x5c51: mov edx,0x5
0x5c56: xor edi,edi
0x5c58: call 0x15a0
0x5c5d: lea rcx,[rip+0x1324]
0x5c64: lea rdx,[rip+0xcbd]
0x5c6b: mov rsi,rax
0x5c6e: mov edi,0x1
0x5c73: xor eax,eax
0x5c75: call 0x1760
0x5c7a: mov rbx,qword ptr [rip+0x204427]
0x5c81: lea rsi,[rip+0x1bf8]
0x5c88: xor edi,edi
0x5c8a: mov edx,0x5
0x5c8f: call 0x15a0
0x5c94: mov rsi,rbx
0x5c97: mov rdi,rax
0x5c9a: pop rbx
0x5c9b: jmp 0x16a0
0x5cba: nop word ptr [rax+rax]
0x5cc0: mov rax,rdi
0x5cc3: mul rsi
0x5cc6: mov rdi,rax
0x5cc9: seto al
0x5ccc: test rdi,rdi
0x5ccf: js 0x5cdb
0x5cd1: movzx eax,al
0x5cd4: test rax,rax
0x5cd7: jne 0x5cdb
0x5cd9: jmp 0x5ca0
0x5cdb: sub rsp,0x8
0x5cdf: call 0x5ef0
0x5ce4: nop 
0x5ce6: nop word ptr cs:[rax+rax]
0x5cf0: jmp 0x5ca0
0x5d09: test rdi,rdi
0x5d0c: jne 0x5d28
0x5d28: call 0x1500
0x5d2d: xor eax,eax
0x5d2f: pop rbx
0x5d30: ret 
0x5d36: nop word ptr cs:[rax+rax]
0x5d40: mov rax,rsi
0x5d43: mul rdx
0x5d46: mov rsi,rax
0x5d49: seto al
0x5d4c: test rsi,rsi
0x5d4f: js 0x5d5b
0x5d51: movzx eax,al
0x5d54: test rax,rax
0x5d57: jne 0x5d5b
0x5d59: jmp 0x5d00
0x5d5b: sub rsp,0x8
0x5d5f: call 0x5ef0
0x5d64: nop 
0x5d66: nop word ptr cs:[rax+rax]
0x5d70: test rdi,rdi
0x5d73: mov r9,rdx
0x5d76: mov rcx,qword ptr [rsi]
0x5d79: je 0x5db0
0x5d7b: xor edx,edx
0x5d7d: movabsq rax,0x5555555555555554
0x5d87: div r9
0x5d8a: cmp rax,rcx
0x5d8d: jbe 0x5dcb
0x5d8f: mov rax,rcx
0x5d92: shr rax, 1
0x5d95: lea rcx,[rax+rcx+0x1]
0x5d9a: mov qword ptr [rsi],rcx
0x5d9d: imul rcx,r9
0x5da1: mov rsi,rcx
0x5da4: jmp 0x5d00
0x5db0: test rcx,rcx
0x5db3: je 0x5dd8
0x5db5: mov rax,rcx
0x5db8: mul r9
0x5dbb: seto dl
0x5dbe: test rax,rax
0x5dc1: movzx edx,dl
0x5dc4: js 0x5dcb
0x5dc6: test rdx,rdx
0x5dc9: je 0x5d9a
0x5dcb: sub rsp,0x8
0x5dcf: call 0x5ef0
0x5dd4: nop dword ptr [rax]
0x5dd8: xor edx,edx
0x5dda: mov eax,0x80
0x5ddf: xor r8d,r8d
0x5de2: div r9
0x5de5: test rax,rax
0x5de8: sete r8b
0x5dec: lea rcx,[r8+rax]
0x5df0: jmp 0x5db5
0x5e00: test rdi,rdi
0x5e03: mov rax,qword ptr [rsi]
0x5e06: je 0x5e30
0x5e08: movabsq rdx,0x5555555555555553
0x5e12: cmp rax,rdx
0x5e15: ja 0x5e41
0x5e17: mov rdx,rax
0x5e1a: shr rdx, 1
0x5e1d: lea rax,[rdx+rax+0x1]
0x5e22: mov qword ptr [rsi],rax
0x5e25: mov rsi,rax
0x5e28: jmp 0x5d00
0x5e30: test rax,rax
0x5e33: mov edx,0x80
0x5e38: cmove rax,rdx
0x5e3c: test rax,rax
0x5e3f: jns 0x5e22
0x5e41: sub rsp,0x8
0x5e45: call 0x5ef0
0x5e4a: nop word ptr [rax+rax]
0x5e50: push rbx
0x5e51: mov rbx,rdi
0x5e54: call 0x5ca0
0x5e59: mov rdx,rbx
0x5e5c: xor esi,esi
0x5e5e: mov rdi,rax
0x5e61: pop rbx
0x5e62: jmp 0x1650
0x5e70: mov rax,rdi
0x5e73: sub rsp,0x8
0x5e77: mul rsi
0x5e7a: seto dl
0x5e7d: test rax,rax
0x5e80: js 0x5e99
0x5e82: movzx edx,dl
0x5e85: test rdx,rdx
0x5e88: jne 0x5e99
0x5e8a: call 0x16b0
0x5e8f: test rax,rax
0x5e92: je 0x5e99
0x5e94: add rsp,0x8
0x5e98: ret 
0x5e99: call 0x5ef0
0x5e9e: nop 
0x5ea0: push rbp
0x5ea1: push rbx
0x5ea2: mov rbp,rdi
0x5ea5: mov rdi,rsi
0x5ea8: mov rbx,rsi
0x5eab: sub rsp,0x8
0x5eaf: call 0x5ca0
0x5eb4: add rsp,0x8
0x5eb8: mov rdx,rbx
0x5ebb: mov rsi,rbp
0x5ebe: pop rbx
0x5ebf: pop rbp
0x5ec0: mov rdi,rax
0x5ec3: jmp 0x16c0
0x5ed0: push rbx
0x5ed1: mov rbx,rdi
0x5ed4: call 0x15c0
0x5ed9: mov rdi,rbx
0x5edc: lea rsi,[rax+0x1]
0x5ee0: pop rbx
0x5ee1: jmp 0x5ea0
0x5f20: call 0x1510
0x5f25: nop word ptr cs:[rax+rax]
0x5f2f: nop 
0x5fa2: mov esi,dword ptr [r14]
0x5fa5: mov r8,rax
0x5fa8: mov eax,0x0
0x5fad: lea rdx,[rip+0xa06]
0x5fb4: mov rcx,r13
0x5fb7: cmp esi,0x16
0x5fba: cmove esi,eax
0x5fbd: test ebx,ebx
0x5fbf: mov eax,0x1
0x5fc4: cmove ebx,eax
0x5fc7: xor eax,eax
0x5fc9: mov edi,ebx
0x5fcb: call 0x1770
0x5fd0: mov rbp,qword ptr [rsp]
0x602b: call 0x15d0
0x6106: cmp eax,0x22
0x6109: mov ebp,0x1
0x610e: jne 0x6138
0x6132: nop word ptr [rax+rax]
0x6260: movsxd rdi,edi
0x6263: mov eax,ebp
0x6265: add rcx,rdi
0x6268: or eax,0x2
0x626b: mov qword ptr [r15],rcx
0x626e: cmp byte ptr [rcx],0x0
0x6271: mov qword ptr [r14],rbx
0x6274: cmovne ebp,eax
0x6277: jmp 0x613d
0x62d5: or ebp,r9d
0x62d8: jmp 0x6260
0x636c: mov rax,rbx
0x636f: mul rsi
0x6372: mov rbx,rax
0x6375: jo 0x6404
0x637b: sub r8d,0x1
0x637f: jne 0x636c
0x6381: jmp 0x62d5
0x63e0: call 0x15d0
0x63e5: lea rcx,[rip+0x1674]
0x63ec: lea rsi,[rip+0x154d]
0x63f3: lea rdi,[rip+0x1566]
0x63fa: mov edx,0x54
0x63ff: call 0x1630
0x6404: mov r9d,0x1
0x640a: or rbx,-0x1
0x640e: jmp 0x637b
0x6480: push r13
0x6482: push r12
0x6484: mov r13,rsi
0x6487: push rbp
0x6488: push rbx
0x6489: mov rbx,rdi
0x648c: mov r12,rdx
0x648f: sub rsp,0x18
0x6493: mov rax,qword ptr fs:0x28
0x649c: mov qword ptr [rsp+0x8],rax
0x64a1: xor eax,eax
0x64a3: lea rax,[rsp+0x4]
0x64a8: test rdi,rdi
0x64ab: cmove rbx,rax
0x64af: mov rdi,rbx
0x64b2: call 0x15f0
0x64b7: cmp rax,-0x3
0x64bb: mov rbp,rax
0x64be: jbe 0x64e0
0x64c0: test r12,r12
0x64c3: je 0x64e0
0x64c5: xor edi,edi
0x64c7: call 0x6590
0x64cc: test al,al
0x64ce: jne 0x64e0
0x64d0: movzx eax,byte ptr [r13]
0x64d5: mov ebp,0x1
0x64da: mov dword ptr [rbx],eax
0x64dc: nop dword ptr [rax]
0x64e0: mov rdx,qword ptr [rsp+0x8]
0x64e5: xor rdx,qword ptr fs:0x28
0x64ee: mov rax,rbp
0x64f1: jne 0x64fe
0x64f3: add rsp,0x18
0x64f7: pop rbx
0x64f8: pop rbp
0x64f9: pop r12
0x64fb: pop r13
0x64fd: ret 
0x64fe: call 0x15d0
0x6503: nop word ptr cs:[rax+rax]
0x650d: nop dword ptr [rax]
0x6510: push r12
0x6512: push rbp
0x6513: mov rbp,rdi
0x6516: push rbx
0x6517: call 0x1550
0x651c: mov ebx,dword ptr [rbp]
0x651f: mov rdi,rbp
0x6522: mov r12,rax
0x6525: call 0x6630
0x652a: and ebx,0x20
0x652d: test ebx,ebx
0x652f: jne 0x6548
0x6531: test eax,eax
0x6533: je 0x653f
0x6535: test r12,r12
0x6538: mov eax,0xffffffff
0x653d: je 0x6578
0x653f: pop rbx
0x6540: pop rbp
0x6541: pop r12
0x6543: ret 
0x6548: test eax,eax
0x654a: jne 0x6568
0x654c: call 0x1520
0x6551: mov dword ptr [rax],0x0
0x6557: mov eax,0xffffffff
0x655c: pop rbx
0x655d: pop rbp
0x655e: pop r12
0x6560: ret 
0x6568: pop rbx
0x6569: mov eax,0xffffffff
0x656e: pop rbp
0x656f: pop r12
0x6571: ret 
0x6578: call 0x1520
0x657d: cmp dword ptr [rax],0x9
0x6580: pop rbx
0x6581: pop rbp
0x6582: pop r12
0x6584: setne al
0x6587: movzx eax,al
0x658a: neg eax
0x658c: ret 
0x6590: sub rsp,0x8
0x6594: xor esi,esi
0x6596: call 0x1750
0x659b: mov rdx,rax
0x659e: mov eax,0x1
0x65a3: test rdx,rdx
0x65a6: je 0x65c5
0x65a8: lea rdi,[rip+0x14bc]
0x65af: mov ecx,0x2
0x65b4: mov rsi,rdx
0x65b7: rep cmpsb [rsi],es:[rdi]
0x65b9: seta cl
0x65bc: sbb cl,0x0
0x65bf: xor eax,eax
0x65c1: test cl,cl
0x65c3: jne 0x65d0
0x65c5: add rsp,0x8
0x65c9: ret 
0x65d0: lea rdi,[rip+0x1496]
0x65d7: mov ecx,0x6
0x65dc: mov rsi,rdx
0x65df: rep cmpsb [rsi],es:[rdi]
0x65e1: seta al
0x65e4: sbb al,0x0
0x65e6: test al,al
0x65e8: setne al
0x65eb: add rsp,0x8
0x65ef: ret 
0x65f0: sub rsp,0x8
0x65f4: mov edi,0xe
0x65f9: call 0x1700
0x65fe: test rax,rax
0x6601: je 0x6620
0x6603: cmp byte ptr [rax],0x0
0x6606: lea rdx,[rip+0x1466]
0x660d: cmove rax,rdx
0x6611: add rsp,0x8
0x6615: ret 
0x6620: lea rax,[rip+0x144c]
0x6627: add rsp,0x8
0x662b: ret 
0x6630: push r12
0x6632: push rbp
0x6633: push rbx
0x6634: mov rbx,rdi
0x6637: call 0x16d0
0x663c: test eax,eax
0x663e: mov rdi,rbx
0x6641: js 0x6697
0x6643: call 0x1720
0x6648: test eax,eax
0x664a: jne 0x6678
0x664c: mov rdi,rbx
0x664f: call 0x66b0
0x6654: test eax,eax
0x6656: je 0x6694
0x6658: call 0x1520
0x665d: mov r12d,dword ptr [rax]
0x6660: mov rdi,rbx
0x6663: mov rbp,rax
0x6666: call 0x1580
0x666b: test r12d,r12d
0x666e: jne 0x66a0
0x6670: pop rbx
0x6671: pop rbp
0x6672: pop r12
0x6674: ret 
0x6678: mov rdi,rbx
0x667b: call 0x16d0
0x6680: xor esi,esi
0x6682: mov edx,0x1
0x6687: mov edi,eax
0x6689: call 0x1620
0x668e: cmp rax,-0x1
0x6692: jne 0x664c
0x6694: mov rdi,rbx
0x6697: pop rbx
0x6698: pop rbp
0x6699: pop r12
0x669b: jmp 0x1580
0x66a0: mov dword ptr [rbp],r12d
0x66a4: mov eax,0xffffffff
0x66a9: jmp 0x6670
0x66b0: test rdi,rdi
0x66b3: push rbx
0x66b4: mov rbx,rdi
0x66b7: je 0x66ca
0x66b9: call 0x1720
0x66be: test eax,eax
0x66c0: je 0x66ca
0x66c2: test dword ptr [rbx],0x100
0x66c8: jne 0x66d8
0x66ca: mov rdi,rbx
0x66cd: pop rbx
0x66ce: jmp 0x16f0
0x66d8: mov rdi,rbx
0x66db: mov edx,0x1
0x66e0: xor esi,esi
0x66e2: call 0x66f0
0x66e7: mov rdi,rbx
0x66ea: pop rbx
0x66eb: jmp 0x16f0
0x66f0: mov rax,qword ptr [rdi+0x8]
0x66f4: cmp qword ptr [rdi+0x10],rax
0x66f8: je 0x6700
0x66fa: jmp 0x17a0
0x6700: mov rax,qword ptr [rdi+0x20]
0x6704: cmp qword ptr [rdi+0x28],rax
0x6708: jne 0x66fa
0x670a: cmp qword ptr [rdi+0x48],0x0
0x670f: jne 0x66fa
0x6711: push r12
0x6713: push rbp
0x6714: mov r12d,edx
0x6717: push rbx
0x6718: mov rbp,rsi
0x671b: mov rbx,rdi
0x671e: call 0x16d0
0x6723: mov edx,r12d
0x6726: mov rsi,rbp
0x6729: mov edi,eax
0x672b: call 0x1620
0x6730: cmp rax,-0x1
0x6734: je 0x6742
0x6736: and dword ptr [rbx],-0x11
0x6739: mov qword ptr [rbx+0x90],rax
0x6740: xor eax,eax
0x6742: pop rbx
0x6743: pop rbp
0x6744: pop r12
0x6746: ret 
0x6750: push r15
0x6752: push r14
0x6754: mov r15,rdx
0x6757: push r13
0x6759: push r12
0x675b: lea r12,[rip+0x20330e]
0x6762: push rbp
0x6763: lea rbp,[rip+0x20330e]
0x676a: push rbx
0x676b: mov r13d,edi
0x676e: mov r14,rsi
0x6771: sub rbp,r12
0x6774: sub rsp,0x8
0x6778: sar rbp,0x3
0x677c: call 0x14d8
0x6781: test rbp,rbp
0x6784: je 0x67a6
0x6786: xor ebx,ebx
0x6788: nop dword ptr [rax+rax]
0x6790: mov rdx,r15
0x6793: mov rsi,r14
0x6796: mov edi,r13d
0x6799: call qword ptr [r12+rbx*8]
0x679d: add rbx,0x1
0x67a1: cmp rbp,rbx
0x67a4: jne 0x6790
0x67a6: add rsp,0x8
0x67aa: pop rbx
0x67ab: pop rbp
0x67ac: pop r12
0x67ae: pop r13
0x67b0: pop r14
0x67b2: pop r15
0x67b4: ret 
0x67c0: rep ret 
