0x1cd0: sub rsp,0x8
0x1cd4: mov rax,qword ptr [rip+0x2082fd]
0x1cdb: test rax,rax
0x1cde: je 0x1ce2
0x1ce0: call rax
0x1ce2: add rsp,0x8
0x1ce6: ret 
0x1cf6: jmp qword ptr [rip+0x20813c]
0x1d40: jmp qword ptr [rip+0x20811a]
0x1d50: jmp qword ptr [rip+0x208112]
0x1df0: jmp qword ptr [rip+0x2080c2]
0x1e80: jmp qword ptr [rip+0x20807a]
0x1ea0: jmp qword ptr [rip+0x20806a]
0x1f00: jmp qword ptr [rip+0x20803a]
0x1fd0: jmp qword ptr [rip+0x207fd2]
0x1fe0: jmp qword ptr [rip+0x207fca]
0x2008: jmp qword ptr [rip+0x207fd2]
0x2010: jmp qword ptr [rip+0x207fda]
0x20ff: nop 
0x2373: mov rbx,rax
0x2376: call 0x1d20
0x237b: mov esi,dword ptr [rax]
0x237d: lea rdx,[rip+0x5635]
0x2384: mov rcx,rbx
0x2387: xor edi,edi
0x2389: xor eax,eax
0x238b: call 0x1f60
0x2390: jmp 0x2186
0x23c1: lea rsi,[rip+0x3f47]
0x23c8: mov rbx,rax
0x23cb: mov edx,0x5
0x23d0: xor edi,edi
0x23d2: call 0x1da0
0x23d7: mov rcx,rbx
0x23da: mov rdx,rax
0x23dd: xor esi,esi
0x23df: xor edi,edi
0x23e1: xor eax,eax
0x23e3: call 0x1f60
0x2437: jmp 0x23e8
0x2441: lea rsi,[rip+0x3ec7]
0x2448: mov rbx,rax
0x244b: xor edi,edi
0x244d: mov edx,0x5
0x2452: call 0x1da0
0x2457: mov rcx,rbx
0x245a: mov rdx,rax
0x245d: xor esi,esi
0x245f: xor edi,edi
0x2461: xor eax,eax
0x2463: call 0x1f60
0x2468: lea rsi,[rip+0x4431]
0x246f: xor edi,edi
0x2471: mov edx,0x5
0x2476: call 0x1da0
0x247b: mov rdi,qword ptr [rip+0x207c5e]
0x2482: lea rdx,[rip+0x5a67]
0x2489: mov rcx,rax
0x248c: mov esi,0x1
0x2491: xor eax,eax
0x2493: call 0x1fc0
0x2498: jmp 0x23e8
0x24ca: hlt 
0x24cb: nop dword ptr [rax+rax]
0x24d0: lea rdi,[rip+0x207bb1]
0x24d7: push rbp
0x24d8: lea rax,[rip+0x207ba9]
0x24df: cmp rax,rdi
0x24e2: mov rbp,rsp
0x24e5: je 0x2500
0x24e7: mov rax,qword ptr [rip+0x207ada]
0x24ee: test rax,rax
0x24f1: je 0x2500
0x24f3: pop rbp
0x24f4: jmp rax
0x2500: pop rbp
0x2501: ret 
0x2510: lea rdi,[rip+0x207b71]
0x2517: lea rsi,[rip+0x207b6a]
0x251e: push rbp
0x251f: sub rsi,rdi
0x2522: mov rbp,rsp
0x2525: sar rsi,0x3
0x2529: mov rax,rsi
0x252c: shr rax,0x3f
0x2530: add rsi,rax
0x2533: sar rsi, 1
0x2536: je 0x2550
0x2538: mov rax,qword ptr [rip+0x207aa9]
0x253f: test rax,rax
0x2542: je 0x2550
0x2544: pop rbp
0x2545: jmp rax
0x2550: pop rbp
0x2551: ret 
0x2571: push rbp
0x2572: mov rbp,rsp
0x2575: je 0x2583
0x2577: mov rdi,qword ptr [rip+0x207a8a]
0x257e: call 0x2010
0x2583: call 0x24d0
0x2588: mov byte ptr [rip+0x207b59],0x1
0x258f: pop rbp
0x2590: ret 
0x25a0: push rbp
0x25a1: mov rbp,rsp
0x25a4: pop rbp
0x25a5: jmp 0x2510
0x2a3a: lea rsi,[rip+0x3a37]
0x2a41: mov rbx,rax
0x2a44: mov edx,0x5
0x2a49: xor edi,edi
0x2a4b: call 0x1da0
0x2a50: mov r8,rbp
0x2a53: mov rdx,rax
0x2a56: mov rcx,rbx
0x2a59: xor esi,esi
0x2a5b: xor edi,edi
0x2a5d: xor eax,eax
0x2a5f: call 0x1f60
0x2a64: mov rdi,r15
0x2a67: call 0x2000
0x2a6c: mov byte ptr [rsp+0x7],0x0
0x2a71: jmp 0x2820
0x2d09: jmp 0x2b9c
0x2d33: mov r13,rax
0x2d60: mov rdi,r15
0x2d63: mov byte ptr [rsp+0x7],0x0
0x2d68: call 0x2000
0x2d6d: mov rdi,rbx
0x2d70: call 0x2000
0x2d75: jmp 0x29c0
0x2dc3: nop dword ptr [rax]
0x2dc6: nop word ptr cs:[rax+rax]
0x3190: mov qword ptr [rip+0x206fc9],rdi
0x3197: ret 
0x31a0: mov byte ptr [rip+0x206fb1],dil
0x31a7: ret 
0x31b0: push rbp
0x31b1: push rbx
0x31b2: sub rsp,0x8
0x31b6: mov rdi,qword ptr [rip+0x206eeb]
0x31bd: call 0x5fe0
0x31c2: test eax,eax
0x31c4: je 0x31dc
0x31c6: call 0x1d20
0x31cb: cmp byte ptr [rip+0x206f86],0x0
0x31d2: mov rbx,rax
0x31d5: je 0x31f3
0x31d7: cmp dword ptr [rax],0x20
0x31da: jne 0x31f3
0x31dc: mov rdi,qword ptr [rip+0x206efd]
0x31e3: call 0x5fe0
0x31e8: test eax,eax
0x31ea: jne 0x3232
0x31ec: add rsp,0x8
0x31f0: pop rbx
0x31f1: pop rbp
0x31f2: ret 
0x31f3: lea rsi,[rip+0x47af]
0x31fa: xor edi,edi
0x31fc: mov edx,0x5
0x3201: call 0x1da0
0x3206: mov rdi,qword ptr [rip+0x206f53]
0x320d: mov rbp,rax
0x3210: test rdi,rdi
0x3213: je 0x323d
0x3215: call 0x5020
0x321a: mov esi,dword ptr [rbx]
0x321c: lea rdx,[rip+0x4792]
0x3223: mov rcx,rax
0x3226: mov r8,rbp
0x3229: xor edi,edi
0x322b: xor eax,eax
0x322d: call 0x1f60
0x3232: mov edi,dword ptr [rip+0x206de0]
0x3238: call 0x1d40
0x323d: mov esi,dword ptr [rbx]
0x323f: lea rdx,[rip+0x4773]
0x3246: mov rcx,rax
0x3249: xor edi,edi
0x324b: xor eax,eax
0x324d: call 0x1f60
0x3252: jmp 0x3232
0x32c0: push rbx
0x32c1: mov rbx,rdi
0x32c4: call 0x1dc0
0x32c9: cmp rax,0x1
0x32cd: jbe 0x32da
0x32cf: cmp byte ptr [rbx+rax-0x1],0x2f
0x32d4: lea rdx,[rax-0x1]
0x32d8: je 0x32e8
0x32da: pop rbx
0x32db: ret 
0x32e0: mov rdx,rax
0x32e3: nop dword ptr [rax+rax]
0x32e8: cmp rdx,0x1
0x32ec: je 0x3300
0x32ee: cmp byte ptr [rbx+rdx-0x1],0x2f
0x32f3: lea rax,[rdx-0x1]
0x32f7: je 0x32e0
0x32f9: mov rax,rdx
0x32fc: pop rbx
0x32fd: ret 
0x3300: mov eax,0x1
0x3305: pop rbx
0x3306: ret 
0x35af: nop 
0x35b0: push rbp
0x35b1: push rbx
0x35b2: mov rbp,rdi
0x35b5: mov ebx,esi
0x35b7: sub rsp,0x8
0x35bb: call 0x60c0
0x35c0: movzx edx,byte ptr [rax]
0x35c3: and edx,-0x21
0x35c6: cmp dl,0x55
0x35c9: je 0x3640
0x35cb: cmp dl,0x47
0x35ce: je 0x35f0
0x35d0: lea rax,[rip+0x4444]
0x35d7: lea rdx,[rip+0x2cf9]
0x35de: cmp ebx,0x9
0x35e1: cmovne rax,rdx
0x35e5: add rsp,0x8
0x35e9: pop rbx
0x35ea: pop rbp
0x35eb: ret 
0x35f0: movzx edx,byte ptr [rax+0x1]
0x35f4: and edx,-0x21
0x35f7: cmp dl,0x42
0x35fa: jne 0x35d0
0x35fc: cmp byte ptr [rax+0x2],0x31
0x3600: jne 0x35d0
0x3602: cmp byte ptr [rax+0x3],0x38
0x3606: jne 0x35d0
0x3608: cmp byte ptr [rax+0x4],0x30
0x360c: jne 0x35d0
0x360e: cmp byte ptr [rax+0x5],0x33
0x3612: jne 0x35d0
0x3614: cmp byte ptr [rax+0x6],0x30
0x3618: jne 0x35d0
0x361a: cmp byte ptr [rax+0x7],0x0
0x361e: jne 0x35d0
0x3620: cmp byte ptr [rbp],0x60
0x3624: lea rax,[rip+0x43e9]
0x362b: lea rdx,[rip+0x43e6]
0x3632: cmovne rax,rdx
0x3636: add rsp,0x8
0x363a: pop rbx
0x363b: pop rbp
0x363c: ret 
0x3640: movzx edx,byte ptr [rax+0x1]
0x3644: and edx,-0x21
0x3647: cmp dl,0x54
0x364a: jne 0x35d0
0x364c: movzx edx,byte ptr [rax+0x2]
0x3650: and edx,-0x21
0x3653: cmp dl,0x46
0x3656: jne 0x35d0
0x365c: cmp byte ptr [rax+0x3],0x2d
0x3660: jne 0x35d0
0x3666: cmp byte ptr [rax+0x4],0x38
0x366a: jne 0x35d0
0x3670: cmp byte ptr [rax+0x5],0x0
0x3674: jne 0x35d0
0x367a: cmp byte ptr [rbp],0x60
0x367e: lea rax,[rip+0x4387]
0x3685: lea rdx,[rip+0x4384]
0x368c: cmovne rax,rdx
0x3690: add rsp,0x8
0x3694: pop rbx
0x3695: pop rbp
0x3696: ret 
0x3773: xor r11d,r11d
0x3776: mov rax,rbp
0x3779: mov r8d,r12d
0x377c: mov rbp,r11
0x377f: mov r11,rax
0x3782: nop word ptr [rax+rax]
0x3788: cmp r11,rbp
0x378b: setne r12b
0x378f: cmp r11,-0x1
0x3793: jne 0x37a2
0x3795: mov rax,qword ptr [rsp+0x10]
0x379a: cmp byte ptr [rax+rbp],0x0
0x379e: setne r12b
0x37a2: test r12b,r12b
0x37a5: je 0x3e00
0x37ab: cmp dword ptr [rsp+0x8],0x2
0x37b0: mov rdi,qword ptr [rsp+0x10]
0x37b5: lea r9,[rdi+rbp]
0x37b9: setne al
0x37bc: and al,byte ptr [rsp+0xd]
0x37c0: mov r10d,eax
0x37c3: je 0x3870
0x37c9: mov rax,qword ptr [rsp+0x18]
0x37ce: test rax,rax
0x37d1: je 0x3c00
0x37d7: cmp r11,-0x1
0x37db: lea rbx,[rbp+rax]
0x37e0: jne 0x3810
0x37e2: cmp rax,0x1
0x37e6: jbe 0x3810
0x37e8: mov byte ptr [rsp+0x38],r8b
0x37ed: mov byte ptr [rsp+0x30],r10b
0x37f2: mov qword ptr [rsp+0x28],r9
0x37f7: call 0x1dc0
0x37fc: movzx r8d,byte ptr [rsp+0x38]
0x3802: movzx r10d,byte ptr [rsp+0x30]
0x3808: mov r11,rax
0x380b: mov r9,qword ptr [rsp+0x28]
0x3810: cmp rbx,r11
0x3813: mov byte ptr [rsp+0x28],r10b
0x3818: ja 0x3dd0
0x381e: mov rdx,qword ptr [rsp+0x18]
0x3823: mov rsi,qword ptr [rsp+0x48]
0x3828: mov rdi,r9
0x382b: mov qword ptr [rsp+0x40],r11
0x3830: mov byte ptr [rsp+0x38],r8b
0x3835: mov qword ptr [rsp+0x30],r9
0x383a: call 0x1e80
0x383f: test eax,eax
0x3841: mov r9,qword ptr [rsp+0x30]
0x3846: movzx r8d,byte ptr [rsp+0x38]
0x384c: mov r11,qword ptr [rsp+0x40]
0x3851: jne 0x3dd0
0x3857: cmp byte ptr [rsp+0xf],0x0
0x385c: movzx r10d,byte ptr [rsp+0x28]
0x3862: jne 0x47e5
0x3868: nop dword ptr [rax+rax]
0x3870: movzx ebx,byte ptr [r9]
0x3874: cmp bl,0x7e
0x3877: ja 0x3b98
0x387d: lea rcx,[rip+0x4228]
0x3884: movzx edx,bl
0x3887: movsxd rax,dword ptr [rcx+rdx*4]
0x388b: add rax,rcx
0x388e: jmp rax
0x38c8: cmp byte ptr [rsp+0xd],0x1
0x38cd: jne 0x39e2
0x38d3: test dl,dl
0x38d5: jne 0x39e2
0x38db: mov rsi,qword ptr [rsp+0x20]
0x38e0: test rsi,rsi
0x38e3: je 0x38f9
0x38e5: mov edx,ebx
0x38e7: shr dl,0x5
0x38ea: movzx edx,dl
0x38ed: mov edx,dword ptr [rsi+rdx*4]
0x38f0: btl edx,ebx
0x38f3: jb 0x3a43
0x38f9: test r10b,r10b
0x38fc: jne 0x3a43
0x3902: xor eax,0x1
0x3905: add rbp,0x1
0x3909: and eax,r8d
0x390c: test al,al
0x390e: je 0x3930
0x3910: cmp r13,r15
0x3913: jbe 0x391a
0x3915: mov byte ptr [r14+r15],0x27
0x391a: lea rax,[r15+0x1]
0x391e: cmp r13,rax
0x3921: jbe 0x3929
0x3923: mov byte ptr [r14+r15+0x1],0x27
0x3929: add r15,0x2
0x392d: xor r8d,r8d
0x3930: cmp r15,r13
0x3933: jae 0x3939
0x3935: mov byte ptr [r14+r15],bl
0x3939: movzx edi,byte ptr [rsp+0xe]
0x393e: add r15,0x1
0x3942: mov eax,0x0
0x3947: test r12b,r12b
0x394a: cmove edi,eax
0x394d: mov byte ptr [rsp+0xe],dil
0x3952: jmp 0x3788
0x39e2: cmp byte ptr [rsp+0xf],0x0
0x39e7: jne 0x38db
0x39ed: jmp 0x38f9
0x3a43: cmp dword ptr [rsp+0x8],0x2
0x3a48: sete dl
0x3a4b: cmp byte ptr [rsp+0xf],0x0
0x3a50: mov eax,edx
0x3a52: jne 0x42a8
0x3a58: mov eax,r8d
0x3a5b: xor eax,0x1
0x3a5e: and al,dl
0x3a60: je 0x3a91
0x3a62: cmp r13,r15
0x3a65: jbe 0x3a6c
0x3a67: mov byte ptr [r14+r15],0x27
0x3a6c: lea rdx,[r15+0x1]
0x3a70: cmp r13,rdx
0x3a73: jbe 0x3a7b
0x3a75: mov byte ptr [r14+r15+0x1],0x24
0x3a7b: lea rdx,[r15+0x2]
0x3a7f: cmp r13,rdx
0x3a82: jbe 0x3a8a
0x3a84: mov byte ptr [r14+r15+0x2],0x27
0x3a8a: add r15,0x3
0x3a8e: mov r8d,eax
0x3a91: cmp r13,r15
0x3a94: jbe 0x3a9b
0x3a96: mov byte ptr [r14+r15],0x5c
0x3a9b: add r15,0x1
0x3a9f: add rbp,0x1
0x3aa3: jmp 0x3930
0x3b90: xor r10d,r10d
0x3b93: nop dword ptr [rax+rax]
0x3b98: cmp qword ptr [rsp+0x58],0x1
0x3b9e: jne 0x3f48
0x3ba4: mov qword ptr [rsp+0x38],r11
0x3ba9: mov byte ptr [rsp+0x30],r8b
0x3bae: mov byte ptr [rsp+0x28],r10b
0x3bb3: call 0x1ff0
0x3bb8: mov rcx,qword ptr [rax]
0x3bbb: movzx edx,bl
0x3bbe: movzx r10d,byte ptr [rsp+0x28]
0x3bc4: movzx r8d,byte ptr [rsp+0x30]
0x3bca: mov r11,qword ptr [rsp+0x38]
0x3bcf: mov edi,0x1
0x3bd4: movzx eax,word ptr [rcx+rdx*2]
0x3bd8: and ax,0x4000
0x3bdc: setne r12b
0x3be0: sete al
0x3be3: and al,byte ptr [rsp+0xd]
0x3be7: test al,al
0x3be9: jne 0x4581
0x3bef: cmp dword ptr [rsp+0x8],0x2
0x3bf4: sete dl
0x3bf7: jmp 0x38c8
0x3c00: movzx ebx,byte ptr [r9]
0x3c04: cmp bl,0x7e
0x3c07: ja 0x3b90
0x3c09: lea rcx,[rip+0x4098]
0x3c10: movzx edx,bl
0x3c13: movsxd rax,dword ptr [rcx+rdx*4]
0x3c17: add rax,rcx
0x3c1a: jmp rax
0x3dd0: xor r10d,r10d
0x3dd3: jmp 0x3870
0x3e00: cmp dword ptr [rsp+0x8],0x2
0x3e05: movzx ebx,byte ptr [rsp+0xf]
0x3e0a: mov r12d,r8d
0x3e0d: mov rbp,r11
0x3e10: sete dl
0x3e13: mov eax,ebx
0x3e15: test r15,r15
0x3e18: sete cl
0x3e1b: and eax,edx
0x3e1d: and al,cl
0x3e1f: jne 0x4886
0x3e25: mov eax,ebx
0x3e27: xor eax,0x1
0x3e2a: and dl,al
0x3e2c: je 0x479c
0x3e32: cmp byte ptr [rsp+0x7c],0x0
0x3e37: je 0x479a
0x3e3d: cmp byte ptr [rsp+0xe],0x0
0x3e42: jne 0x483d
0x3e48: test r13,r13
0x3e4b: sete al
0x3e4e: cmp qword ptr [rsp+0x50],0x0
0x3e54: setne dl
0x3e57: and al,dl
0x3e59: je 0x487c
0x3e5f: mov r13,qword ptr [rsp+0x50]
0x3e64: lea rbx,[rip+0x246c]
0x3e6b: mov byte ptr [r14],0x27
0x3e6f: mov dword ptr [rsp+0x8],0x2
0x3e77: mov r15d,0x1
0x3e7d: mov qword ptr [rsp+0x18],0x1
0x3e86: mov byte ptr [rsp+0xf],0x0
0x3e8b: mov qword ptr [rsp+0x48],rbx
0x3e90: mov byte ptr [rsp+0x7c],al
0x3e94: jmp 0x3773
0x3f48: lea rax,[rsp+0xa0]
0x3f50: cmp r11,-0x1
0x3f54: mov qword ptr [rsp+0xa0],0x0
0x3f60: mov qword ptr [rsp+0x28],rax
0x3f65: jne 0x3f94
0x3f67: mov rdi,qword ptr [rsp+0x10]
0x3f6c: mov byte ptr [rsp+0x40],r8b
0x3f71: mov byte ptr [rsp+0x38],r10b
0x3f76: mov qword ptr [rsp+0x30],r9
0x3f7b: call 0x1dc0
0x3f80: movzx r8d,byte ptr [rsp+0x40]
0x3f86: movzx r10d,byte ptr [rsp+0x38]
0x3f8c: mov r11,rax
0x3f8f: mov r9,qword ptr [rsp+0x30]
0x3f94: lea rax,[rsp+0x9c]
0x3f9c: xor ecx,ecx
0x3f9e: mov byte ptr [rsp+0x7e],bl
0x3fa2: mov byte ptr [rsp+0x7d],r8b
0x3fa7: mov rbx,rcx
0x3faa: mov qword ptr [rsp+0x88],r9
0x3fb2: mov qword ptr [rsp+0x38],rax
0x3fb7: mov byte ptr [rsp+0x7f],r10b
0x3fbc: mov qword ptr [rsp+0x80],r15
0x3fc4: mov qword ptr [rsp+0x40],r14
0x3fc9: mov qword ptr [rsp+0x70],r13
0x3fce: mov qword ptr [rsp+0x30],r11
0x3fd3: mov rax,qword ptr [rsp+0x10]
0x3fd8: lea r14,[rbp+rbx]
0x3fdd: mov rdx,qword ptr [rsp+0x30]
0x3fe2: mov rcx,qword ptr [rsp+0x28]
0x3fe7: mov rdi,qword ptr [rsp+0x38]
0x3fec: lea r13,[rax+r14]
0x3ff0: sub rdx,r14
0x3ff3: mov rsi,r13
0x3ff6: call 0x5c30
0x3ffb: test rax,rax
0x3ffe: mov r15,rax
0x4001: je 0x4051
0x4003: cmp rax,-0x1
0x4007: je 0x4625
0x400d: cmp rax,-0x2
0x4011: je 0x45b1
0x4017: cmp dword ptr [rsp+0x8],0x2
0x401c: sete al
0x401f: and al,byte ptr [rsp+0xf]
0x4023: jne 0x41c0
0x4029: mov edi,dword ptr [rsp+0x9c]
0x4030: call 0x1fe0
0x4035: mov rdi,qword ptr [rsp+0x28]
0x403a: test eax,eax
0x403c: mov eax,0x0
0x4041: cmove r12d,eax
0x4045: add rbx,r15
0x4048: call 0x1fd0
0x404d: test eax,eax
0x404f: je 0x3fd3
0x4051: mov edx,r12d
0x4054: mov rdi,rbx
0x4057: movzx r8d,byte ptr [rsp+0x7d]
0x405d: xor edx,0x1
0x4060: movzx ebx,byte ptr [rsp+0x7e]
0x4065: movzx r10d,byte ptr [rsp+0x7f]
0x406b: and dl,byte ptr [rsp+0xd]
0x406f: mov r15,qword ptr [rsp+0x80]
0x4077: mov r14,qword ptr [rsp+0x40]
0x407c: mov r13,qword ptr [rsp+0x70]
0x4081: mov r11,qword ptr [rsp+0x30]
0x4086: cmp rdi,0x1
0x408a: jbe 0x468b
0x4090: mov rcx,rdi
0x4093: xor esi,esi
0x4095: movzx r9d,byte ptr [rsp+0xf]
0x409b: add rcx,rbp
0x409e: mov rdi,qword ptr [rsp+0x10]
0x40a3: jmp 0x415e
0x40b0: cmp dword ptr [rsp+0x8],0x2
0x40b5: sete al
0x40b8: test r9b,r9b
0x40bb: jne 0x4570
0x40c1: mov esi,r8d
0x40c4: xor esi,0x1
0x40c7: and al,sil
0x40ca: je 0x40fb
0x40cc: cmp r13,r15
0x40cf: jbe 0x40d6
0x40d1: mov byte ptr [r14+r15],0x27
0x40d6: lea rsi,[r15+0x1]
0x40da: cmp r13,rsi
0x40dd: jbe 0x40e5
0x40df: mov byte ptr [r14+r15+0x1],0x24
0x40e5: lea rsi,[r15+0x2]
0x40e9: cmp r13,rsi
0x40ec: jbe 0x40f4
0x40ee: mov byte ptr [r14+r15+0x2],0x27
0x40f4: add r15,0x3
0x40f8: mov r8d,eax
0x40fb: cmp r13,r15
0x40fe: jbe 0x4105
0x4100: mov byte ptr [r14+r15],0x5c
0x4105: lea rax,[r15+0x1]
0x4109: cmp r13,rax
0x410c: jbe 0x411b
0x410e: mov eax,ebx
0x4110: shr al,0x6
0x4113: add eax,0x30
0x4116: mov byte ptr [r14+r15+0x1],al
0x411b: lea rax,[r15+0x2]
0x411f: cmp r13,rax
0x4122: jbe 0x4134
0x4124: mov eax,ebx
0x4126: shr al,0x3
0x4129: and eax,0x7
0x412c: add eax,0x30
0x412f: mov byte ptr [r14+r15+0x2],al
0x4134: and ebx,0x7
0x4137: add rbp,0x1
0x413b: add r15,0x3
0x413f: add ebx,0x30
0x4142: cmp rbp,rcx
0x4145: jae 0x3930
0x414b: mov esi,edx
0x414d: cmp r13,r15
0x4150: jbe 0x4156
0x4152: mov byte ptr [r14+r15],bl
0x4156: movzx ebx,byte ptr [rdi+rbp]
0x415a: add r15,0x1
0x415e: test dl,dl
0x4160: jne 0x40b0
0x4166: mov eax,esi
0x4168: xor eax,0x1
0x416b: and eax,r8d
0x416e: test r10b,r10b
0x4171: je 0x4181
0x4173: cmp r13,r15
0x4176: jbe 0x417d
0x4178: mov byte ptr [r14+r15],0x5c
0x417d: add r15,0x1
0x4181: add rbp,0x1
0x4185: cmp rbp,rcx
0x4188: jae 0x390c
0x418e: test al,al
0x4190: je 0x458e
0x4196: cmp r13,r15
0x4199: jbe 0x41a0
0x419b: mov byte ptr [r14+r15],0x27
0x41a0: lea rax,[r15+0x1]
0x41a4: cmp r13,rax
0x41a7: jbe 0x41af
0x41a9: mov byte ptr [r14+r15+0x1],0x27
0x41af: add r15,0x2
0x41b3: xor r10d,r10d
0x41b6: xor r8d,r8d
0x41b9: jmp 0x414d
0x41c0: cmp r15,0x1
0x41c4: je 0x4029
0x41ca: mov rdi,qword ptr [rsp+0x10]
0x41cf: lea rcx,[rdi+r15]
0x41d3: lea rdx,[rdi+r14+0x1]
0x41d8: lea r8,[rcx+r14]
0x41dc: jmp 0x41ed
0x41e0: add rdx,0x1
0x41e4: cmp r8,rdx
0x41e7: je 0x4029
0x41ed: movzx ecx,byte ptr [rdx]
0x41f0: sub ecx,0x5b
0x41f3: cmp cl,0x21
0x41f6: ja 0x41e0
0x41f8: mov esi,0x1
0x41fd: shl rsi,cl
0x4200: mov rcx,rsi
0x4203: movabsq rsi,0x20000002b
0x420d: test rcx,rsi
0x4210: je 0x41e0
0x4212: mov r14,qword ptr [rsp+0x40]
0x4217: mov r13,qword ptr [rsp+0x70]
0x421c: mov rbp,qword ptr [rsp+0x30]
0x4221: mov dword ptr [rsp+0x8],0x2
0x4229: cmp byte ptr [rsp+0xd],0x0
0x422e: je 0x4240
0x4230: test al,al
0x4232: mov eax,0x4
0x4237: cmove eax,dword ptr [rsp+0x8]
0x423c: mov dword ptr [rsp+0x8],eax
0x4240: sub rsp,0x8
0x4244: mov rcx,rbp
0x4247: mov rsi,r13
0x424a: push qword ptr [rsp+0x68]
0x424e: push qword ptr [rsp+0x78]
0x4252: mov rdi,r14
0x4255: push 0x0
0x4257: mov r9d,dword ptr [rsp+0x98]
0x425f: mov r8d,dword ptr [rsp+0x28]
0x4264: mov rdx,qword ptr [rsp+0x30]
0x4269: and r9d,-0x3
0x426d: call 0x36a0
0x4272: add rsp,0x20
0x4276: mov r15,rax
0x4279: mov rbx,qword ptr [rsp+0xa8]
0x4281: xor rbx,qword ptr fs:0x28
0x428a: mov rax,r15
0x428d: jne 0x4893
0x4293: add rsp,0xb8
0x429a: pop rbx
0x429b: pop rbp
0x429c: pop r12
0x429e: pop r13
0x42a0: pop r14
0x42a2: pop r15
0x42a4: ret 
0x42a8: mov rbp,r11
0x42ab: jmp 0x4229
0x4311: test r13,r13
0x4314: jne 0x48aa
0x431a: lea rax,[rip+0x1fb6]
0x4321: mov qword ptr [rsp+0x50],0x0
0x432a: mov byte ptr [rsp+0xe],0x1
0x432f: mov byte ptr [rsp+0x7c],0x0
0x4334: xor r12d,r12d
0x4337: mov byte ptr [rsp+0xf],0x0
0x433c: mov qword ptr [rsp+0x18],0x1
0x4345: mov qword ptr [rsp+0x48],rax
0x434a: mov r15d,0x1
0x4350: mov dword ptr [rsp+0x8],0x2
0x4358: jmp 0x3773
0x4570: movzx ebx,byte ptr [rsp+0xf]
0x4575: mov rbp,r11
0x4578: mov byte ptr [rsp+0xd],bl
0x457c: jmp 0x4229
0x4581: movzx edx,byte ptr [rsp+0xd]
0x4586: xor r12d,r12d
0x4589: jmp 0x4090
0x458e: xor r10d,r10d
0x4591: jmp 0x414d
0x45b1: mov r11,qword ptr [rsp+0x30]
0x45b6: mov rsi,r14
0x45b9: mov rcx,r13
0x45bc: mov rax,rbx
0x45bf: mov rdi,rbx
0x45c2: movzx r8d,byte ptr [rsp+0x7d]
0x45c8: movzx ebx,byte ptr [rsp+0x7e]
0x45cd: mov r9,qword ptr [rsp+0x88]
0x45d5: cmp rsi,r11
0x45d8: movzx r10d,byte ptr [rsp+0x7f]
0x45de: mov r15,qword ptr [rsp+0x80]
0x45e6: mov r14,qword ptr [rsp+0x40]
0x45eb: mov r13,qword ptr [rsp+0x70]
0x45f0: jae 0x4618
0x45f2: cmp byte ptr [rcx],0x0
0x45f5: jne 0x4607
0x45f7: jmp 0x4618
0x4600: cmp byte ptr [r9+rax],0x0
0x4605: je 0x4615
0x4607: add rax,0x1
0x460b: lea rdx,[rbp+rax]
0x4610: cmp r11,rdx
0x4613: ja 0x4600
0x4615: mov rdi,rax
0x4618: movzx edx,byte ptr [rsp+0xd]
0x461d: xor r12d,r12d
0x4620: jmp 0x4086
0x4625: mov rdi,rbx
0x4628: movzx r8d,byte ptr [rsp+0x7d]
0x462e: movzx ebx,byte ptr [rsp+0x7e]
0x4633: movzx r10d,byte ptr [rsp+0x7f]
0x4639: mov r15,qword ptr [rsp+0x80]
0x4641: xor r12d,r12d
0x4644: mov r14,qword ptr [rsp+0x40]
0x4649: mov r13,qword ptr [rsp+0x70]
0x464e: mov r11,qword ptr [rsp+0x30]
0x4653: movzx edx,byte ptr [rsp+0xd]
0x4658: jmp 0x4086
0x468b: mov eax,edx
0x468d: jmp 0x3be7
0x479a: mov eax,edx
0x479c: mov rbx,qword ptr [rsp+0x48]
0x47a1: test rbx,rbx
0x47a4: je 0x47d2
0x47a6: test al,al
0x47a8: je 0x47d2
0x47aa: movzx ecx,byte ptr [rbx]
0x47ad: mov rax,rbx
0x47b0: test cl,cl
0x47b2: je 0x47d2
0x47b4: mov rdx,r15
0x47b7: sub rax,r15
0x47ba: cmp r13,rdx
0x47bd: jbe 0x47c3
0x47bf: mov byte ptr [r14+rdx],cl
0x47c3: add rdx,0x1
0x47c7: movzx ecx,byte ptr [rax+rdx]
0x47cb: test cl,cl
0x47cd: jne 0x47ba
0x47cf: mov r15,rdx
0x47d2: cmp r13,r15
0x47d5: jbe 0x4279
0x47db: mov byte ptr [r14+r15],0x0
0x47e0: jmp 0x4279
0x47e5: cmp dword ptr [rsp+0x8],0x2
0x47ea: movzx ebx,byte ptr [rsp+0xf]
0x47ef: mov rbp,r11
0x47f2: sete al
0x47f5: mov byte ptr [rsp+0xd],bl
0x47f9: jmp 0x4229
0x483d: sub rsp,0x8
0x4841: mov r8d,0x5
0x4847: mov rcx,r11
0x484a: push qword ptr [rsp+0x68]
0x484e: push qword ptr [rsp+0x78]
0x4852: mov rdi,r14
0x4855: push qword ptr [rsp+0x38]
0x4859: mov r9d,dword ptr [rsp+0x98]
0x4861: mov rdx,qword ptr [rsp+0x30]
0x4866: mov rsi,qword ptr [rsp+0x70]
0x486b: call 0x36a0
0x4870: add rsp,0x20
0x4874: mov r15,rax
0x4877: jmp 0x4279
0x487c: movzx eax,byte ptr [rsp+0x7c]
0x4881: jmp 0x479c
0x4886: mov dword ptr [rsp+0x8],0x2
0x488e: jmp 0x4229
0x4893: call 0x1dd0
0x4898: mov byte ptr [rsp+0xd],0x0
0x489d: jmp 0x4311
0x48aa: mov byte ptr [rsp+0xe],0x1
0x48af: xor eax,eax
0x48b1: xor r12d,r12d
0x48b4: mov qword ptr [rsp+0x50],0x0
0x48bd: jmp 0x3e64
0x48d4: nop 
0x48d6: nop word ptr cs:[rax+rax]
0x49cc: add rsp,0x20
0x49d0: mov r11,qword ptr [rsp+0x10]
0x49d5: cmp r11,rax
0x49d8: ja 0x4a41
0x49da: lea rsi,[rax+0x1]
0x49de: lea rax,[rip+0x20579b]
0x49e5: cmp r12,rax
0x49e8: mov qword ptr [rbx],rsi
0x49eb: je 0x49ff
0x49ed: mov rdi,r12
0x49f0: mov qword ptr [rsp+0x10],rsi
0x49f5: call 0x2000
0x49fa: mov rsi,qword ptr [rsp+0x10]
0x49ff: mov rdi,rsi
0x4a02: mov qword ptr [rsp+0x10],rsi
0x4a07: call 0x5860
0x4a0c: sub rsp,0x8
0x4a10: mov qword ptr [rbx+0x8],rax
0x4a14: mov r8d,dword ptr [rbp]
0x4a18: push qword ptr [rbp+0x30]
0x4a1b: push qword ptr [rbp+0x28]
0x4a1e: mov rcx,r14
0x4a21: push r15
0x4a23: mov r9d,dword ptr [rsp+0x3c]
0x4a28: mov rdi,rax
0x4a2b: mov rdx,qword ptr [rsp+0x28]
0x4a30: mov rsi,qword ptr [rsp+0x30]
0x4a35: mov r12,rax
0x4a38: call 0x36a0
0x4a3d: add rsp,0x20
0x4a41: mov eax,dword ptr [rsp+0x18]
0x4a45: mov dword ptr [r13],eax
0x4a49: add rsp,0x28
0x4a4d: mov rax,r12
0x4a50: pop rbx
0x4a51: pop rbp
0x4a52: pop r12
0x4a54: pop r13
0x4a56: pop r14
0x4a58: pop r15
0x4a5a: ret 
0x4a81: call 0x1d10
0x4a86: call 0x5ab0
0x4a8b: nop dword ptr [rax+rax]
0x4a90: push r12
0x4a92: push rbp
0x4a93: push rbx
0x4a94: mov rbx,rdi
0x4a97: call 0x1d20
0x4a9c: mov r12d,dword ptr [rax]
0x4a9f: mov rbp,rax
0x4aa2: lea rax,[rip+0x2057d7]
0x4aa9: test rbx,rbx
0x4aac: mov esi,0x38
0x4ab1: cmove rbx,rax
0x4ab5: mov rdi,rbx
0x4ab8: call 0x5a60
0x4abd: mov dword ptr [rbp],r12d
0x4ac1: pop rbx
0x4ac2: pop rbp
0x4ac3: pop r12
0x4ac5: ret 
0x4ad0: lea rax,[rip+0x2057a9]
0x4ad7: test rdi,rdi
0x4ada: cmove rdi,rax
0x4ade: mov eax,dword ptr [rdi]
0x4ae0: ret 
0x4af0: lea rax,[rip+0x205789]
0x4af7: test rdi,rdi
0x4afa: cmove rdi,rax
0x4afe: mov dword ptr [rdi],esi
0x4b00: ret 
0x4b10: lea rax,[rip+0x205769]
0x4b17: test rdi,rdi
0x4b1a: mov ecx,esi
0x4b1c: cmove rdi,rax
0x4b20: mov eax,esi
0x4b22: and ecx,0x1f
0x4b25: shr al,0x5
0x4b28: movzx eax,al
0x4b2b: lea rdi,[rdi+rax*4+0x8]
0x4b30: mov esi,dword ptr [rdi]
0x4b32: mov eax,esi
0x4b34: shr eax,cl
0x4b36: xor edx,eax
0x4b38: and eax,0x1
0x4b3b: and edx,0x1
0x4b3e: shl edx,cl
0x4b40: xor edx,esi
0x4b42: mov dword ptr [rdi],edx
0x4b44: ret 
0x4b50: lea rax,[rip+0x205729]
0x4b57: test rdi,rdi
0x4b5a: cmove rdi,rax
0x4b5e: mov eax,dword ptr [rdi+0x4]
0x4b61: mov dword ptr [rdi+0x4],esi
0x4b64: ret 
0x4b70: lea rax,[rip+0x205709]
0x4b77: test rdi,rdi
0x4b7a: cmove rdi,rax
0x4b7e: test rsi,rsi
0x4b81: mov dword ptr [rdi],0xa
0x4b87: je 0x4b97
0x4b89: test rdx,rdx
0x4b8c: je 0x4b97
0x4b8e: mov qword ptr [rdi+0x28],rsi
0x4b92: mov qword ptr [rdi+0x30],rdx
0x4b96: ret 
0x4b97: sub rsp,0x8
0x4b9b: call 0x1d10
0x4ba0: push r15
0x4ba2: push r14
0x4ba4: lea rax,[rip+0x2056d5]
0x4bab: push r13
0x4bad: push r12
0x4baf: mov r13,rdi
0x4bb2: push rbp
0x4bb3: push rbx
0x4bb4: mov rbx,r8
0x4bb7: mov r14,rsi
0x4bba: mov r15,rdx
0x4bbd: sub rsp,0x18
0x4bc1: test r8,r8
0x4bc4: cmove rbx,rax
0x4bc8: mov qword ptr [rsp+0x8],rcx
0x4bcd: call 0x1d20
0x4bd2: mov r12d,dword ptr [rax]
0x4bd5: mov rbp,rax
0x4bd8: lea rax,[rbx+0x8]
0x4bdc: sub rsp,0x8
0x4be0: mov r9d,dword ptr [rbx+0x4]
0x4be4: push qword ptr [rbx+0x30]
0x4be7: mov r8d,dword ptr [rbx]
0x4bea: push qword ptr [rbx+0x28]
0x4bed: mov rdx,r15
0x4bf0: push rax
0x4bf1: mov rcx,qword ptr [rsp+0x28]
0x4bf6: mov rsi,r14
0x4bf9: mov rdi,r13
0x4bfc: call 0x36a0
0x4c01: mov dword ptr [rbp],r12d
0x4c05: add rsp,0x38
0x4c09: pop rbx
0x4c0a: pop rbp
0x4c0b: pop r12
0x4c0d: pop r13
0x4c0f: pop r14
0x4c11: pop r15
0x4c13: ret 
0x4c20: push r15
0x4c22: push r14
0x4c24: lea rax,[rip+0x205655]
0x4c2b: push r13
0x4c2d: push r12
0x4c2f: mov r12,rdx
0x4c32: push rbp
0x4c33: push rbx
0x4c34: mov rbx,rcx
0x4c37: mov r14,rdi
0x4c3a: mov r15,rsi
0x4c3d: sub rsp,0x38
0x4c41: test rcx,rcx
0x4c44: cmove rbx,rax
0x4c48: xor ebp,ebp
0x4c4a: call 0x1d20
0x4c4f: test r12,r12
0x4c52: mov r13,rax
0x4c55: mov eax,dword ptr [rax]
0x4c57: sete bpl
0x4c5b: or ebp,dword ptr [rbx+0x4]
0x4c5e: lea r10,[rbx+0x8]
0x4c62: sub rsp,0x8
0x4c66: mov r8d,dword ptr [rbx]
0x4c69: mov rcx,r15
0x4c6c: mov dword ptr [rsp+0x14],eax
0x4c70: push qword ptr [rbx+0x30]
0x4c73: mov rdx,r14
0x4c76: push qword ptr [rbx+0x28]
0x4c79: push r10
0x4c7b: xor esi,esi
0x4c7d: mov r9d,ebp
0x4c80: xor edi,edi
0x4c82: mov qword ptr [rsp+0x40],r10
0x4c87: call 0x36a0
0x4c8c: lea rsi,[rax+0x1]
0x4c90: mov qword ptr [rsp+0x48],rax
0x4c95: add rsp,0x20
0x4c99: mov rdi,rsi
0x4c9c: mov qword ptr [rsp+0x18],rsi
0x4ca1: call 0x5860
0x4ca6: mov qword ptr [rsp+0x10],rax
0x4cab: sub rsp,0x8
0x4caf: push qword ptr [rbx+0x30]
0x4cb2: push qword ptr [rbx+0x28]
0x4cb5: mov r10,qword ptr [rsp+0x38]
0x4cba: mov r9d,ebp
0x4cbd: mov r8d,dword ptr [rbx]
0x4cc0: mov rcx,r15
0x4cc3: mov rdx,r14
0x4cc6: mov rdi,rax
0x4cc9: push r10
0x4ccb: mov rsi,qword ptr [rsp+0x38]
0x4cd0: call 0x36a0
0x4cd5: mov eax,dword ptr [rsp+0x2c]
0x4cd9: add rsp,0x20
0x4cdd: test r12,r12
0x4ce0: mov dword ptr [r13],eax
0x4ce4: je 0x4cef
0x4ce6: mov r11,qword ptr [rsp+0x28]
0x4ceb: mov qword ptr [r12],r11
0x4cef: mov rax,qword ptr [rsp+0x10]
0x4cf4: add rsp,0x38
0x4cf8: pop rbx
0x4cf9: pop rbp
0x4cfa: pop r12
0x4cfc: pop r13
0x4cfe: pop r14
0x4d00: pop r15
0x4d02: ret 
0x4d10: mov rcx,rdx
0x4d13: xor edx,edx
0x4d15: jmp 0x4c20
0x4d20: mov eax,dword ptr [rip+0x205332]
0x4d26: push r12
0x4d28: mov r12,qword ptr [rip+0x205331]
0x4d2f: push rbp
0x4d30: push rbx
0x4d31: cmp eax,0x1
0x4d34: jle 0x4d61
0x4d36: sub eax,0x2
0x4d39: lea rbx,[r12+0x18]
0x4d3e: shl rax,0x4
0x4d42: lea rbp,[r12+rax+0x28]
0x4d47: nop word ptr [rax+rax]
0x4d50: mov rdi,qword ptr [rbx]
0x4d53: add rbx,0x10
0x4d57: call 0x2000
0x4d5c: cmp rbx,rbp
0x4d5f: jne 0x4d50
0x4d61: mov rdi,qword ptr [r12+0x8]
0x4d66: lea rbx,[rip+0x205413]
0x4d6d: cmp rdi,rbx
0x4d70: je 0x4d89
0x4d72: call 0x2000
0x4d77: mov qword ptr [rip+0x2052ee],0x100
0x4d82: mov qword ptr [rip+0x2052ef],rbx
0x4d89: lea rbx,[rip+0x2052e0]
0x4d90: cmp r12,rbx
0x4d93: je 0x4da4
0x4d95: mov rdi,r12
0x4d98: call 0x2000
0x4d9d: mov qword ptr [rip+0x2052bc],rbx
0x4da4: pop rbx
0x4da5: mov dword ptr [rip+0x2052a9],0x1
0x4daf: pop rbp
0x4db0: pop r12
0x4db2: ret 
0x4dc0: lea rcx,[rip+0x2054b9]
0x4dc7: mov rdx,-0x1
0x4dce: jmp 0x48e0
0x4de0: lea rcx,[rip+0x205499]
0x4de7: jmp 0x48e0
0x4df0: lea rcx,[rip+0x205489]
0x4df7: mov rsi,rdi
0x4dfa: mov rdx,-0x1
0x4e01: xor edi,edi
0x4e03: jmp 0x48e0
0x4e10: lea rcx,[rip+0x205469]
0x4e17: mov rdx,rsi
0x4e1a: mov rsi,rdi
0x4e1d: xor edi,edi
0x4e1f: jmp 0x48e0
0x4e30: sub rsp,0x48
0x4e34: mov rax,rdx
0x4e37: mov rdx,qword ptr fs:0x28
0x4e40: mov qword ptr [rsp+0x38],rdx
0x4e45: xor edx,edx
0x4e47: cmp esi,0xa
0x4e4a: je 0x4eb4
0x4e4c: mov dword ptr [rsp],esi
0x4e4f: mov rcx,rsp
0x4e52: mov rdx,-0x1
0x4e59: mov rsi,rax
0x4e5c: mov qword ptr [rsp+0x4],0x0
0x4e65: mov qword ptr [rsp+0xc],0x0
0x4e6e: mov qword ptr [rsp+0x14],0x0
0x4e77: mov qword ptr [rsp+0x1c],0x0
0x4e80: mov qword ptr [rsp+0x24],0x0
0x4e89: mov qword ptr [rsp+0x2c],0x0
0x4e92: mov dword ptr [rsp+0x34],0x0
0x4e9a: call 0x48e0
0x4e9f: mov rcx,qword ptr [rsp+0x38]
0x4ea4: xor rcx,qword ptr fs:0x28
0x4ead: jne 0x4eb9
0x4eaf: add rsp,0x48
0x4eb3: ret 
0x4eb4: call 0x1d10
0x4eb9: call 0x1dd0
0x4ebe: nop 
0x4ec0: sub rsp,0x48
0x4ec4: mov rax,rdx
0x4ec7: mov rdx,rcx
0x4eca: mov rcx,qword ptr fs:0x28
0x4ed3: mov qword ptr [rsp+0x38],rcx
0x4ed8: xor ecx,ecx
0x4eda: cmp esi,0xa
0x4edd: je 0x4f40
0x4edf: mov dword ptr [rsp],esi
0x4ee2: mov rcx,rsp
0x4ee5: mov rsi,rax
0x4ee8: mov qword ptr [rsp+0x4],0x0
0x4ef1: mov qword ptr [rsp+0xc],0x0
0x4efa: mov qword ptr [rsp+0x14],0x0
0x4f03: mov qword ptr [rsp+0x1c],0x0
0x4f0c: mov qword ptr [rsp+0x24],0x0
0x4f15: mov qword ptr [rsp+0x2c],0x0
0x4f1e: mov dword ptr [rsp+0x34],0x0
0x4f26: call 0x48e0
0x4f2b: mov rdx,qword ptr [rsp+0x38]
0x4f30: xor rdx,qword ptr fs:0x28
0x4f39: jne 0x4f45
0x4f3b: add rsp,0x48
0x4f3f: ret 
0x4f40: call 0x1d10
0x4f45: call 0x1dd0
0x4f4a: nop word ptr [rax+rax]
0x4f50: mov rdx,rsi
0x4f53: mov esi,edi
0x4f55: xor edi,edi
0x4f57: jmp 0x4e30
0x4f60: mov rcx,rdx
0x4f63: mov rdx,rsi
0x4f66: mov esi,edi
0x4f68: xor edi,edi
0x4f6a: jmp 0x4ec0
0x4f70: sub rsp,0x48
0x4f74: mov ecx,edx
0x4f76: mov rax,qword ptr fs:0x28
0x4f7f: mov qword ptr [rsp+0x38],rax
0x4f84: xor eax,eax
0x4f86: mov rax,qword ptr [rip+0x205323]
0x4f8d: mov r8,rsp
0x4f90: and ecx,0x1f
0x4f93: movdqa xmm0,xmmword ptr [rip+0x2052e5]
0x4f9b: mov qword ptr [rsp+0x30],rax
0x4fa0: mov eax,edx
0x4fa2: movaps xmmword ptr [rsp],xmm0
0x4fa6: shr al,0x5
0x4fa9: movzx eax,al
0x4fac: lea r9,[r8+rax*4+0x8]
0x4fb1: movdqa xmm0,xmmword ptr [rip+0x2052d7]
0x4fb9: movaps xmmword ptr [rsp+0x10],xmm0
0x4fbe: movdqa xmm0,xmmword ptr [rip+0x2052da]
0x4fc6: movaps xmmword ptr [rsp+0x20],xmm0
0x4fcb: mov edx,dword ptr [r9]
0x4fce: mov eax,edx
0x4fd0: shr eax,cl
0x4fd2: not eax
0x4fd4: and eax,0x1
0x4fd7: shl eax,cl
0x4fd9: mov rcx,r8
0x4fdc: xor eax,edx
0x4fde: mov rdx,rsi
0x4fe1: mov rsi,rdi
0x4fe4: mov dword ptr [r9],eax
0x4fe7: xor edi,edi
0x4fe9: call 0x48e0
0x4fee: mov rsi,qword ptr [rsp+0x38]
0x4ff3: xor rsi,qword ptr fs:0x28
0x4ffc: jne 0x5003
0x4ffe: add rsp,0x48
0x5002: ret 
0x5003: call 0x1dd0
0x5008: nop dword ptr [rax+rax]
0x5010: movsx edx,sil
0x5014: mov rsi,-0x1
0x501b: jmp 0x4f70
0x5020: mov edx,0x3a
0x5025: mov rsi,-0x1
0x502c: jmp 0x4f70
0x5040: mov edx,0x3a
0x5045: jmp 0x4f70
0x50bf: mov rcx,qword ptr [rsp+0x38]
0x50c4: xor rcx,qword ptr fs:0x28
0x50cd: jne 0x50d9
0x50cf: add rsp,0x48
0x50d3: ret 
0x50d4: call 0x1d10
0x50d9: call 0x1dd0
0x50de: nop 
0x50e0: sub rsp,0x48
0x50e4: mov r9,rcx
0x50e7: mov rcx,qword ptr [rip+0x2051c2]
0x50ee: movdqa xmm0,xmmword ptr [rip+0x20518a]
0x50f6: mov rax,qword ptr fs:0x28
0x50ff: mov qword ptr [rsp+0x38],rax
0x5104: xor eax,eax
0x5106: movaps xmmword ptr [rsp],xmm0
0x510a: test rsi,rsi
0x510d: mov qword ptr [rsp+0x30],rcx
0x5112: mov dword ptr [rsp],0xa
0x5119: movdqa xmm0,xmmword ptr [rip+0x20516f]
0x5121: movaps xmmword ptr [rsp+0x10],xmm0
0x5126: movdqa xmm0,xmmword ptr [rip+0x205172]
0x512e: movaps xmmword ptr [rsp+0x20],xmm0
0x5133: je 0x5167
0x5135: test rdx,rdx
0x5138: je 0x5167
0x513a: mov qword ptr [rsp+0x28],rsi
0x513f: mov qword ptr [rsp+0x30],rdx
0x5144: mov rcx,rsp
0x5147: mov rdx,r8
0x514a: mov rsi,r9
0x514d: call 0x48e0
0x5152: mov rdi,qword ptr [rsp+0x38]
0x5157: xor rdi,qword ptr fs:0x28
0x5160: jne 0x516c
0x5162: add rsp,0x48
0x5166: ret 
0x5167: call 0x1d10
0x516c: call 0x1dd0
0x5171: nop dword ptr [rax+rax]
0x5176: nop word ptr cs:[rax+rax]
0x5180: mov r8,-0x1
0x5187: jmp 0x50e0
0x5190: mov rcx,rdx
0x5193: mov r8,-0x1
0x519a: mov rdx,rsi
0x519d: mov rsi,rdi
0x51a0: xor edi,edi
0x51a2: jmp 0x50e0
0x51b0: mov r8,rcx
0x51b3: mov rcx,rdx
0x51b6: mov rdx,rsi
0x51b9: mov rsi,rdi
0x51bc: xor edi,edi
0x51be: jmp 0x50e0
0x51d0: lea rcx,[rip+0x204e49]
0x51d7: jmp 0x48e0
0x51e0: lea rcx,[rip+0x204e39]
0x51e7: mov rdx,rsi
0x51ea: mov rsi,rdi
0x51ed: xor edi,edi
0x51ef: jmp 0x48e0
0x5200: lea rcx,[rip+0x204e19]
0x5207: mov rdx,-0x1
0x520e: jmp 0x48e0
0x5378: mov r8,rcx
0x537b: mov rcx,rdx
0x537e: lea rdx,[rip+0x2b6f]
0x5385: mov esi,0x1
0x538a: xor eax,eax
0x538c: call 0x1fc0
0x5391: jmp 0x527c
0x558d: push r12
0x558f: push r15
0x5591: push r14
0x5593: mov r8,qword ptr [rsp+0x20]
0x5598: mov rcx,rbx
0x559b: mov rdx,rax
0x559e: mov rdi,rbp
0x55a1: mov esi,0x1
0x55a6: xor eax,eax
0x55a8: call 0x1fc0
0x55ad: add rsp,0x20
0x55b1: add rsp,0x28
0x55b5: pop rbx
0x55b6: pop rbp
0x55b7: pop r12
0x55b9: pop r13
0x55bb: pop r14
0x55bd: pop r15
0x55bf: ret 
0x55f9: push r12
0x55fb: push r15
0x55fd: push r14
0x55ff: mov r9,qword ptr [rsp+0x28]
0x5604: jmp 0x5593
0x5660: xor r9d,r9d
0x5663: cmp qword ptr [r8],0x0
0x5667: je 0x567b
0x5669: nop dword ptr [rax]
0x5670: add r9,0x1
0x5674: cmp qword ptr [r8+r9*8],0x0
0x5679: jne 0x5670
0x567b: jmp 0x5240
0x5680: sub rsp,0x68
0x5684: mov r10,r8
0x5687: xor r9d,r9d
0x568a: mov rax,qword ptr fs:0x28
0x5693: mov qword ptr [rsp+0x58],rax
0x5698: xor eax,eax
0x569a: mov r8,rsp
0x569d: nop dword ptr [rax]
0x56a0: mov eax,dword ptr [r10]
0x56a3: cmp eax,0x2f
0x56a6: ja 0x56ea
0x56a8: mov r11d,eax
0x56ab: add r11,qword ptr [r10+0x10]
0x56af: add eax,0x8
0x56b2: mov dword ptr [r10],eax
0x56b5: mov rax,qword ptr [r11]
0x56b8: test rax,rax
0x56bb: mov qword ptr [r8+r9*8],rax
0x56bf: je 0x56cb
0x56c1: add r9,0x1
0x56c5: cmp r9,0xa
0x56c9: jne 0x56a0
0x56cb: call 0x5240
0x56d0: mov rax,qword ptr [rsp+0x58]
0x56d5: xor rax,qword ptr fs:0x28
0x56de: jne 0x56e5
0x56e0: add rsp,0x68
0x56e4: ret 
0x56e5: call 0x1dd0
0x56ea: mov r11,qword ptr [r10+0x8]
0x56ee: lea rax,[r11+0x8]
0x56f2: mov qword ptr [r10+0x8],rax
0x56f6: jmp 0x56b5
0x57e0: push rbx
0x57e1: lea rsi,[rip+0x275a]
0x57e8: mov edx,0x5
0x57ed: xor edi,edi
0x57ef: call 0x1da0
0x57f4: lea rdx,[rip+0x275c]
0x57fb: mov rsi,rax
0x57fe: mov edi,0x1
0x5803: xor eax,eax
0x5805: call 0x1f50
0x580a: lea rsi,[rip+0x275c]
0x5811: mov edx,0x5
0x5816: xor edi,edi
0x5818: call 0x1da0
0x581d: lea rcx,[rip+0xf2c]
0x5824: lea rdx,[rip+0xa4a]
0x582b: mov rsi,rax
0x582e: mov edi,0x1
0x5833: xor eax,eax
0x5835: call 0x1f50
0x583a: mov rbx,qword ptr [rip+0x204867]
0x5841: lea rsi,[rip+0x2958]
0x5848: xor edi,edi
0x584a: mov edx,0x5
0x584f: call 0x1da0
0x5854: mov rsi,rbx
0x5857: mov rdi,rax
0x585a: pop rbx
0x585b: jmp 0x1e90
0x5860: push rbx
0x5861: mov rbx,rdi
0x5864: call 0x2008
0x5869: test rax,rax
0x586c: jne 0x5873
0x586e: test rbx,rbx
0x5871: jne 0x5875
0x5873: pop rbx
0x5874: ret 
0x5875: call 0x5ab0
0x587a: nop word ptr [rax+rax]
0x5880: mov rax,rdi
0x5883: mul rsi
0x5886: mov rdi,rax
0x5889: seto al
0x588c: test rdi,rdi
0x588f: js 0x589b
0x5891: movzx eax,al
0x5894: test rax,rax
0x5897: jne 0x589b
0x5899: jmp 0x5860
0x589b: sub rsp,0x8
0x589f: call 0x5ab0
0x58a4: nop 
0x58a6: nop word ptr cs:[rax+rax]
0x58b0: jmp 0x5860
0x58c9: test rdi,rdi
0x58cc: jne 0x58e8
0x58db: test rbx,rbx
0x58de: jne 0x58f1
0x58e8: call 0x2000
0x58ed: xor eax,eax
0x58ef: pop rbx
0x58f0: ret 
0x58f1: call 0x5ab0
0x58f6: nop word ptr cs:[rax+rax]
0x5900: mov rax,rsi
0x5903: mul rdx
0x5906: mov rsi,rax
0x5909: seto al
0x590c: test rsi,rsi
0x590f: js 0x591b
0x5911: movzx eax,al
0x5914: test rax,rax
0x5917: jne 0x591b
0x5919: jmp 0x58c0
0x591b: sub rsp,0x8
0x591f: call 0x5ab0
0x5924: nop 
0x5926: nop word ptr cs:[rax+rax]
0x5930: test rdi,rdi
0x5933: mov r9,rdx
0x5936: mov rcx,qword ptr [rsi]
0x5939: je 0x5970
0x593b: xor edx,edx
0x593d: movabsq rax,0x5555555555555554
0x5947: div r9
0x594a: cmp rax,rcx
0x594d: jbe 0x598b
0x594f: mov rax,rcx
0x5952: shr rax, 1
0x5955: lea rcx,[rax+rcx+0x1]
0x595a: mov qword ptr [rsi],rcx
0x595d: imul rcx,r9
0x5961: mov rsi,rcx
0x5964: jmp 0x58c0
0x5970: test rcx,rcx
0x5973: je 0x5998
0x5975: mov rax,rcx
0x5978: mul r9
0x597b: seto dl
0x597e: test rax,rax
0x5981: movzx edx,dl
0x5984: js 0x598b
0x5986: test rdx,rdx
0x5989: je 0x595a
0x598b: sub rsp,0x8
0x598f: call 0x5ab0
0x5994: nop dword ptr [rax]
0x5998: xor edx,edx
0x599a: mov eax,0x80
0x599f: xor r8d,r8d
0x59a2: div r9
0x59a5: test rax,rax
0x59a8: sete r8b
0x59ac: lea rcx,[r8+rax]
0x59b0: jmp 0x5975
0x59c0: test rdi,rdi
0x59c3: mov rax,qword ptr [rsi]
0x59c6: je 0x59f0
0x59c8: movabsq rdx,0x5555555555555553
0x59d2: cmp rax,rdx
0x59d5: ja 0x5a01
0x59d7: mov rdx,rax
0x59da: shr rdx, 1
0x59dd: lea rax,[rdx+rax+0x1]
0x59e2: mov qword ptr [rsi],rax
0x59e5: mov rsi,rax
0x59e8: jmp 0x58c0
0x59f0: test rax,rax
0x59f3: mov edx,0x80
0x59f8: cmove rax,rdx
0x59fc: test rax,rax
0x59ff: jns 0x59e2
0x5a01: sub rsp,0x8
0x5a05: call 0x5ab0
0x5a0a: nop word ptr [rax+rax]
0x5a10: push rbx
0x5a11: mov rbx,rdi
0x5a14: call 0x5860
0x5a19: mov rdx,rbx
0x5a1c: xor esi,esi
0x5a1e: mov rdi,rax
0x5a21: pop rbx
0x5a22: jmp 0x1e40
0x5a30: mov rax,rdi
0x5a33: sub rsp,0x8
0x5a37: mul rsi
0x5a3a: seto dl
0x5a3d: test rax,rax
0x5a40: js 0x5a59
0x5a42: movzx edx,dl
0x5a45: test rdx,rdx
0x5a48: jne 0x5a59
0x5a4a: call 0x1ea0
0x5a4f: test rax,rax
0x5a52: je 0x5a59
0x5a54: add rsp,0x8
0x5a58: ret 
0x5a59: call 0x5ab0
0x5a5e: nop 
0x5a60: push rbp
0x5a61: push rbx
0x5a62: mov rbp,rdi
0x5a65: mov rdi,rsi
0x5a68: mov rbx,rsi
0x5a6b: sub rsp,0x8
0x5a6f: call 0x5860
0x5a74: add rsp,0x8
0x5a78: mov rdx,rbx
0x5a7b: mov rsi,rbp
0x5a7e: pop rbx
0x5a7f: pop rbp
0x5a80: mov rdi,rax
0x5a83: jmp 0x1ed0
0x5a90: push rbx
0x5a91: mov rbx,rdi
0x5a94: call 0x1dc0
0x5a99: mov rdi,rbx
0x5a9c: lea rsi,[rax+0x1]
0x5aa0: pop rbx
0x5aa1: jmp 0x5a60
0x5ae0: call 0x1d10
0x5ae5: nop word ptr cs:[rax+rax]
0x5aef: nop 
0x5b08: nop dword ptr [rax+rax]
0x5c30: push r13
0x5c32: push r12
0x5c34: mov r13,rsi
0x5c37: push rbp
0x5c38: push rbx
0x5c39: mov rbx,rdi
0x5c3c: mov r12,rdx
0x5c3f: sub rsp,0x18
0x5c43: mov rax,qword ptr fs:0x28
0x5c4c: mov qword ptr [rsp+0x8],rax
0x5c51: xor eax,eax
0x5c53: lea rax,[rsp+0x4]
0x5c58: test rdi,rdi
0x5c5b: cmove rbx,rax
0x5c5f: mov rdi,rbx
0x5c62: call 0x1df0
0x5c67: cmp rax,-0x3
0x5c6b: mov rbp,rax
0x5c6e: jbe 0x5c90
0x5c70: test r12,r12
0x5c73: je 0x5c90
0x5c75: xor edi,edi
0x5c77: call 0x6060
0x5c7c: test al,al
0x5c7e: jne 0x5c90
0x5c80: movzx eax,byte ptr [r13]
0x5c85: mov ebp,0x1
0x5c8a: mov dword ptr [rbx],eax
0x5c8c: nop dword ptr [rax]
0x5c90: mov rdx,qword ptr [rsp+0x8]
0x5c95: xor rdx,qword ptr fs:0x28
0x5c9e: mov rax,rbp
0x5ca1: jne 0x5cae
0x5ca3: add rsp,0x18
0x5ca7: pop rbx
0x5ca8: pop rbp
0x5ca9: pop r12
0x5cab: pop r13
0x5cad: ret 
0x5cae: call 0x1dd0
0x5cb3: nop word ptr cs:[rax+rax]
0x5cbd: nop dword ptr [rax]
0x5cc0: lea rsi,[rip+0x2588]
0x5cc7: sub rsp,0x8
0x5ccb: mov edx,0x5
0x5cd0: xor edi,edi
0x5cd2: call 0x1da0
0x5cd7: mov rdi,qword ptr [rip+0x204402]
0x5cde: lea rdx,[rip+0x220b]
0x5ce5: mov rcx,rax
0x5ce8: mov esi,0x1
0x5ced: xor eax,eax
0x5cef: call 0x1fc0
0x5cf4: mov edi,dword ptr [rip+0x20431e]
0x5cfa: call 0x1fa0
0x5cff: nop 
0x5d10: mov rdi,qword ptr [rdi+0x48]
0x5d14: jmp rax
0x5d30: mov rdi,qword ptr [rdi+0x48]
0x5d34: jmp rax
0x5d4c: lea r12,[rdx-0x1]
0x5d50: mov rbp,rdx
0x5dbd: call qword ptr [rip+0x2042bd]
0x5dc3: nop dword ptr [rax]
0x5dc6: nop word ptr cs:[rax+rax]
0x5df0: or byte ptr [rdi+0x50],0x1
0x5df4: mov qword ptr [rdi+0x38],rcx
0x5df8: mov qword ptr [rdi+0x40],r8
0x5dfc: mov qword ptr [rdi+0x48],r9
0x5e00: jmp 0x5d40
0x5e13: push rbp
0x5efb: nop dword ptr [rax+rax]
0x5f00: mov rax,qword ptr [rdi+0x8]
0x5f04: test rax,rax
0x5f07: je 0x5f36
0x5f09: nop dword ptr [rax]
0x5f10: cmp rsi,rax
0x5f13: jbe 0x5f1a
0x5f15: cmp qword ptr [rax],rsi
0x5f18: jae 0x5f30
0x5f1a: mov rax,qword ptr [rax+0x8]
0x5f1e: test rax,rax
0x5f21: jne 0x5f10
0x5f23: xor eax,eax
0x5f25: ret 
0x5f30: mov eax,0x1
0x5f35: ret 
0x5f36: rep ret 
0x5f40: push r12
0x5f42: push rbp
0x5f43: mov rbp,rsi
0x5f46: push rbx
0x5f47: mov rsi,qword ptr [rdi+0x8]
0x5f4b: mov rbx,rdi
0x5f4e: test rsi,rsi
0x5f51: je 0x5f7d
0x5f53: nop dword ptr [rax+rax]
0x5f58: cmp rsi,rbp
0x5f5b: jae 0x5f65
0x5f5d: mov rax,qword ptr [rsi]
0x5f60: cmp rax,rbp
0x5f63: jae 0x5f90
0x5f65: mov r12,qword ptr [rsi+0x8]
0x5f69: mov rdi,rbx
0x5f6c: call 0x5d20
0x5f71: or byte ptr [rbx+0x50],0x2
0x5f75: test r12,r12
0x5f78: mov rsi,r12
0x5f7b: jne 0x5f58
0x5f7d: test rbp,rbp
0x5f80: jne 0x5fa5
0x5f82: pop rbx
0x5f83: pop rbp
0x5f84: pop r12
0x5f86: ret 
0x5f90: mov qword ptr [rbx+0x18],rbp
0x5f94: mov qword ptr [rbx+0x10],rbp
0x5f98: mov qword ptr [rbx+0x20],rax
0x5f9c: mov qword ptr [rbx+0x8],rsi
0x5fa0: pop rbx
0x5fa1: pop rbp
0x5fa2: pop r12
0x5fa4: ret 
0x5fa5: call 0x1d10
0x5faa: nop word ptr [rax+rax]
0x5fb0: mov rdx,qword ptr [rdi+0x8]
0x5fb4: xor eax,eax
0x5fb6: test rdx,rdx
0x5fb9: je 0x5fd8
0x5fbb: nop dword ptr [rax+rax]
0x5fc0: mov rcx,qword ptr [rdx]
0x5fc3: sub rcx,rdx
0x5fc6: mov rdx,qword ptr [rdx+0x8]
0x5fca: add rax,rcx
0x5fcd: test rdx,rdx
0x5fd0: jne 0x5fc0
0x5fd2: rep ret 
0x5fd8: rep ret 
0x5fe0: push r12
0x5fe2: push rbp
0x5fe3: mov rbp,rdi
0x5fe6: push rbx
0x5fe7: call 0x1d50
0x5fec: mov ebx,dword ptr [rbp]
0x5fef: mov rdi,rbp
0x5ff2: mov r12,rax
0x5ff5: call 0x5b10
0x5ffa: and ebx,0x20
0x5ffd: test ebx,ebx
0x5fff: jne 0x6018
0x6001: test eax,eax
0x6003: je 0x600f
0x6005: test r12,r12
0x6008: mov eax,0xffffffff
0x600d: je 0x6048
0x600f: pop rbx
0x6010: pop rbp
0x6011: pop r12
0x6013: ret 
0x6018: test eax,eax
0x601a: jne 0x6038
0x601c: call 0x1d20
0x6021: mov dword ptr [rax],0x0
0x6027: mov eax,0xffffffff
0x602c: pop rbx
0x602d: pop rbp
0x602e: pop r12
0x6030: ret 
0x6038: pop rbx
0x6039: mov eax,0xffffffff
0x603e: pop rbp
0x603f: pop r12
0x6041: ret 
0x6048: call 0x1d20
0x604d: cmp dword ptr [rax],0x9
0x6050: pop rbx
0x6051: pop rbp
0x6052: pop r12
0x6054: setne al
0x6057: movzx eax,al
0x605a: neg eax
0x605c: ret 
0x6060: sub rsp,0x8
0x6064: xor esi,esi
0x6066: call 0x1f40
0x606b: mov rdx,rax
0x606e: mov eax,0x1
0x6073: test rdx,rdx
0x6076: je 0x6095
0x6078: lea rdi,[rip+0x36d]
0x607f: mov ecx,0x2
0x6084: mov rsi,rdx
0x6087: rep cmpsb [rsi],es:[rdi]
0x6089: seta cl
0x608c: sbb cl,0x0
0x608f: xor eax,eax
0x6091: test cl,cl
0x6093: jne 0x60a0
0x6095: add rsp,0x8
0x6099: ret 
0x60a0: lea rdi,[rip+0x21b9]
0x60a7: mov ecx,0x6
0x60ac: mov rsi,rdx
0x60af: rep cmpsb [rsi],es:[rdi]
0x60b1: seta al
0x60b4: sbb al,0x0
0x60b6: test al,al
0x60b8: setne al
0x60bb: add rsp,0x8
0x60bf: ret 
0x60c0: sub rsp,0x8
0x60c4: mov edi,0xe
0x60c9: call 0x1f00
0x60ce: test rax,rax
0x60d1: je 0x60f0
0x60d3: cmp byte ptr [rax],0x0
0x60d6: lea rdx,[rip+0x2189]
0x60dd: cmove rax,rdx
0x60e1: add rsp,0x8
0x60e5: ret 
0x60f0: lea rax,[rip+0x216f]
0x60f7: add rsp,0x8
0x60fb: ret 
0x6100: push r15
0x6102: push r14
0x6104: mov r15,rdx
0x6107: push r13
0x6109: push r12
0x610b: lea r12,[rip+0x20373e]
0x6112: push rbp
0x6113: lea rbp,[rip+0x20373e]
0x611a: push rbx
0x611b: mov r13d,edi
0x611e: mov r14,rsi
0x6121: sub rbp,r12
0x6124: sub rsp,0x8
0x6128: sar rbp,0x3
0x612c: call 0x1cd0
0x6131: test rbp,rbp
0x6134: je 0x6156
0x6136: xor ebx,ebx
0x6138: nop dword ptr [rax+rax]
0x6140: mov rdx,r15
0x6143: mov rsi,r14
0x6146: mov edi,r13d
0x6149: call qword ptr [r12+rbx*8]
0x614d: add rbx,0x1
0x6151: cmp rbp,rbx
0x6154: jne 0x6140
0x6156: add rsp,0x8
0x615a: pop rbx
0x615b: pop rbp
0x615c: pop r12
0x615e: pop r13
0x6160: pop r14
0x6162: pop r15
0x6164: ret 
0x6170: rep ret 
