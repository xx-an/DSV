0x12f0: sub rsp,0x8
0x12f4: mov rax,qword ptr [rip+0x20acd5]
0x12fb: test rax,rax
0x12fe: je 0x1302
0x1300: call rax
0x1302: add rsp,0x8
0x1306: ret 
0x1316: jmp qword ptr [rip+0x20ab1c]
0x1320: jmp qword ptr [rip+0x20ab1a]
0x1360: jmp qword ptr [rip+0x20aafa]
0x1380: jmp qword ptr [rip+0x20aaea]
0x1390: jmp qword ptr [rip+0x20aae2]
0x13a0: jmp qword ptr [rip+0x20aada]
0x13c0: jmp qword ptr [rip+0x20aaca]
0x1410: jmp qword ptr [rip+0x20aaa2]
0x1430: jmp qword ptr [rip+0x20aa92]
0x1450: jmp qword ptr [rip+0x20aa82]
0x1470: jmp qword ptr [rip+0x20aa72]
0x1480: jmp qword ptr [rip+0x20aa6a]
0x14a0: jmp qword ptr [rip+0x20aa5a]
0x14c0: jmp qword ptr [rip+0x20aa4a]
0x14e0: jmp qword ptr [rip+0x20aa3a]
0x1510: jmp qword ptr [rip+0x20aa22]
0x1520: jmp qword ptr [rip+0x20aa1a]
0x1530: jmp qword ptr [rip+0x20aa12]
0x1540: jmp qword ptr [rip+0x20aa0a]
0x1590: jmp qword ptr [rip+0x20a9e2]
0x15a0: jmp qword ptr [rip+0x20a9da]
0x15f0: jmp qword ptr [rip+0x20a9b2]
0x1600: jmp qword ptr [rip+0x20a9aa]
0x1620: jmp qword ptr [rip+0x20a9ba]
0x179f: lea rsi,[rip+0x6d2a]
0x17a6: mov rbx,rax
0x17a9: mov edx,0x5
0x17ae: xor edi,edi
0x17b0: call 0x13e0
0x17b5: mov rsi,rbx
0x17b8: mov rdi,rax
0x17bb: xor eax,eax
0x17bd: call 0x1a70
0x17d2: mov edx,0x5
0x17d7: mov rbx,rax
0x17da: lea rsi,[rip+0x6cfa]
0x17e1: jmp 0x17ae
0x17ea: nop word ptr [rax+rax]
0x181a: hlt 
0x181b: nop dword ptr [rax+rax]
0x1820: lea rdi,[rip+0x20a859]
0x1827: push rbp
0x1828: lea rax,[rip+0x20a851]
0x182f: cmp rax,rdi
0x1832: mov rbp,rsp
0x1835: je 0x1850
0x1837: mov rax,qword ptr [rip+0x20a782]
0x183e: test rax,rax
0x1841: je 0x1850
0x1843: pop rbp
0x1844: jmp rax
0x1850: pop rbp
0x1851: ret 
0x1860: lea rdi,[rip+0x20a819]
0x1867: lea rsi,[rip+0x20a812]
0x186e: push rbp
0x186f: sub rsi,rdi
0x1872: mov rbp,rsp
0x1875: sar rsi,0x3
0x1879: mov rax,rsi
0x187c: shr rax,0x3f
0x1880: add rsi,rax
0x1883: sar rsi, 1
0x1886: je 0x18a0
0x1888: mov rax,qword ptr [rip+0x20a749]
0x188f: test rax,rax
0x1892: je 0x18a0
0x1894: pop rbp
0x1895: jmp rax
0x18a0: pop rbp
0x18a1: ret 
0x18c1: push rbp
0x18c2: mov rbp,rsp
0x18c5: je 0x18d3
0x18c7: mov rdi,qword ptr [rip+0x20a73a]
0x18ce: call 0x1620
0x18d3: call 0x1820
0x18d8: mov byte ptr [rip+0x20a7c9],0x1
0x18df: pop rbp
0x18e0: ret 
0x18f0: push rbp
0x18f1: mov rbp,rsp
0x18f4: pop rbp
0x18f5: jmp 0x1860
0x1a94: movaps [rsp+0x50],xmm0
0x1a99: movaps [rsp+0x60],xmm1
0x1a9e: movaps [rsp+0x70],xmm2
0x1aa3: movaps [rsp+0x80],xmm3
0x1aab: movaps [rsp+0x90],xmm4
0x1ab3: movaps [rsp+0xa0],xmm5
0x1abb: movaps [rsp+0xb0],xmm6
0x1ac3: movaps [rsp+0xc0],xmm7
0x1b10: mov edi,0x2
0x1b15: call 0x15c0
0x1b1a: nop word ptr [rax+rax]
0x1bd1: lea rsi,[rip+0x6756]
0x1bd8: mov rbx,rax
0x1bdb: xor edi,edi
0x1bdd: mov edx,0x5
0x1be2: call 0x13e0
0x1be7: mov rsi,rbx
0x1bea: mov rdi,rax
0x1bed: xor eax,eax
0x1bef: call 0x1a70
0x1bf4: nop 
0x1bf6: nop word ptr cs:[rax+rax]
0x1c19: lea rsi,[rip+0x6721]
0x1c20: mov rbx,rax
0x1c23: xor edi,edi
0x1c25: mov edx,0x5
0x1c2a: call 0x13e0
0x1c2f: mov rsi,rbx
0x1c32: mov rdi,rax
0x1c35: xor eax,eax
0x1c37: call 0x1a70
0x1c3c: nop dword ptr [rax]
0x1c40: mov eax,dword ptr [rip+0x20a476]
0x1c46: lea edx,[rax+0x1]
0x1c49: cmp edx,dword ptr [rip+0x20a469]
0x1c4f: mov dword ptr [rip+0x20a467],edx
0x1c55: jge 0x1c61
0x1c57: add eax,0x2
0x1c5a: mov dword ptr [rip+0x20a45c],eax
0x1c60: ret 
0x1c61: sub rsp,0x8
0x1c65: call 0x1c00
0x1c6a: nop word ptr [rax+rax]
0x1c73: push rsi
0x20a2: lea rsi,[rip+0x62f7]
0x20a9: mov rbx,rax
0x20ac: xor edi,edi
0x20ae: mov edx,0x5
0x20b3: call 0x13e0
0x20b8: mov rsi,rbx
0x20bb: mov rdi,rax
0x20be: xor eax,eax
0x20c0: call 0x1a70
0x20c5: nop dword ptr [rax]
0x2198: call 0x1420
0x2250: mov rcx,qword ptr [rsp+0x98]
0x2258: xor rcx,qword ptr fs:0x28
0x2261: jne 0x27ac
0x2267: add rsp,0xa8
0x226e: pop rbx
0x226f: pop rbp
0x2270: ret 
0x275a: cmp dword ptr [rsp+0x1c],edx
0x275e: sete al
0x2761: jmp 0x2250
0x276b: lea rsi,[rip+0x5c4a]
0x2772: mov rbx,rax
0x2775: xor edi,edi
0x2777: mov edx,0x5
0x277c: call 0x13e0
0x2781: mov rsi,rbx
0x2784: mov rdi,rax
0x2787: xor eax,eax
0x2789: call 0x1a70
0x278e: nop 
0x2790: mov esi,dword ptr [rbx]
0x2792: xor eax,eax
0x2794: test esi,esi
0x2796: jne 0x2250
0x279c: jmp 0x275a
0x27ac: call 0x1420
0x27b1: nop dword ptr [rax+rax]
0x27b6: nop word ptr cs:[rax+rax]
0x296f: nop 
0x2b63: nop dword ptr [rax+rax]
0x2c1b: mov r11d,dword ptr [rip+0x20949a]
0x2c22: mov r12d,dword ptr [rip+0x20948f]
0x2c29: jmp 0x2b13
0x2ce3: lea rsi,[rip+0x6bb3]
0x2cea: xor edi,edi
0x2cec: mov rbp,rax
0x2cef: call 0x5090
0x2cf4: lea rsi,[rip+0x56ed]
0x2cfb: mov rbx,rax
0x2cfe: mov edx,0x5
0x2d03: xor edi,edi
0x2d05: call 0x13e0
0x2d0a: mov rdx,rbp
0x2d0d: mov rdi,rax
0x2d10: mov rsi,rbx
0x2d13: xor eax,eax
0x2d15: call 0x1a70
0x2d26: lea rsi,[rip+0x56af]
0x2d2d: mov rbx,rax
0x2d30: xor edi,edi
0x2d32: mov edx,0x5
0x2d37: call 0x13e0
0x2d3c: mov rsi,rbx
0x2d3f: mov rdi,rax
0x2d42: xor eax,eax
0x2d44: call 0x1a70
0x2d49: nop dword ptr [rax]
0x2e70: lea rsi,[rip+0x558d]
0x2e77: mov rbx,rax
0x2e7a: xor edi,edi
0x2e7c: mov edx,0x5
0x2e81: call 0x13e0
0x2e86: mov rsi,rbx
0x2e89: mov rdi,rax
0x2e8c: xor eax,eax
0x2e8e: call 0x1a70
0x2e98: nop dword ptr [rax+rax]
0x2eaa: lea rsi,[rip+0x570f]
0x2eb1: mov rbp,qword ptr [rip+0x209218]
0x2eb8: mov edx,0x5
0x2ebd: xor edi,edi
0x2ebf: call 0x13e0
0x2ec4: mov rdi,qword ptr [rip+0x2091d5]
0x2ecb: mov rdx,rax
0x2ece: mov rcx,rbp
0x2ed1: mov esi,0x1
0x2ed6: xor eax,eax
0x2ed8: call 0x15e0
0x3280: mov qword ptr [rip+0x208e41],rdi
0x3287: ret 
0x3290: mov byte ptr [rip+0x208e29],dil
0x3297: ret 
0x32a0: push rbp
0x32a1: push rbx
0x32a2: sub rsp,0x8
0x32a6: mov rdi,qword ptr [rip+0x208ddb]
0x32ad: call 0x6010
0x32b2: test eax,eax
0x32b4: je 0x32cc
0x32b6: call 0x1350
0x32bb: cmp byte ptr [rip+0x208dfe],0x0
0x32c2: mov rbx,rax
0x32c5: je 0x32e3
0x32c7: cmp dword ptr [rax],0x20
0x32ca: jne 0x32e3
0x32cc: mov rdi,qword ptr [rip+0x208dcd]
0x32d3: call 0x6010
0x32d8: test eax,eax
0x32da: jne 0x3322
0x32dc: add rsp,0x8
0x32e0: pop rbx
0x32e1: pop rbp
0x32e2: ret 
0x32e3: lea rsi,[rip+0x604e]
0x32ea: xor edi,edi
0x32ec: mov edx,0x5
0x32f1: call 0x13e0
0x32f6: mov rdi,qword ptr [rip+0x208dcb]
0x32fd: mov rbp,rax
0x3300: test rdi,rdi
0x3303: je 0x332d
0x3305: call 0x4eb0
0x330a: mov esi,dword ptr [rbx]
0x330c: lea rdx,[rip+0x6031]
0x3313: mov rcx,rax
0x3316: mov r8,rbp
0x3319: xor edi,edi
0x331b: xor eax,eax
0x331d: call 0x1580
0x3322: mov edi,dword ptr [rip+0x208cf0]
0x3328: call 0x1380
0x332d: mov esi,dword ptr [rbx]
0x332f: lea rdx,[rip+0x6012]
0x3336: mov rcx,rax
0x3339: xor edi,edi
0x333b: xor eax,eax
0x333d: call 0x1580
0x3342: jmp 0x3322
0x343f: nop 
0x3440: push rbp
0x3441: push rbx
0x3442: mov rbp,rdi
0x3445: mov ebx,esi
0x3447: sub rsp,0x8
0x344b: call 0x60f0
0x3450: movzx edx,byte ptr [rax]
0x3453: and edx,-0x21
0x3456: cmp dl,0x55
0x3459: je 0x34d0
0x345b: cmp dl,0x47
0x345e: je 0x3480
0x3460: lea rax,[rip+0x5f3c]
0x3467: lea rdx,[rip+0x5f37]
0x346e: cmp ebx,0x9
0x3471: cmovne rax,rdx
0x3475: add rsp,0x8
0x3479: pop rbx
0x347a: pop rbp
0x347b: ret 
0x3480: movzx edx,byte ptr [rax+0x1]
0x3484: and edx,-0x21
0x3487: cmp dl,0x42
0x348a: jne 0x3460
0x348c: cmp byte ptr [rax+0x2],0x31
0x3490: jne 0x3460
0x3492: cmp byte ptr [rax+0x3],0x38
0x3496: jne 0x3460
0x3498: cmp byte ptr [rax+0x4],0x30
0x349c: jne 0x3460
0x349e: cmp byte ptr [rax+0x5],0x33
0x34a2: jne 0x3460
0x34a4: cmp byte ptr [rax+0x6],0x30
0x34a8: jne 0x3460
0x34aa: cmp byte ptr [rax+0x7],0x0
0x34ae: jne 0x3460
0x34b0: cmp byte ptr [rbp],0x60
0x34b4: lea rax,[rip+0x5ee1]
0x34bb: lea rdx,[rip+0x5ede]
0x34c2: cmovne rax,rdx
0x34c6: add rsp,0x8
0x34ca: pop rbx
0x34cb: pop rbp
0x34cc: ret 
0x34d0: movzx edx,byte ptr [rax+0x1]
0x34d4: and edx,-0x21
0x34d7: cmp dl,0x54
0x34da: jne 0x3460
0x34dc: movzx edx,byte ptr [rax+0x2]
0x34e0: and edx,-0x21
0x34e3: cmp dl,0x46
0x34e6: jne 0x3460
0x34ec: cmp byte ptr [rax+0x3],0x2d
0x34f0: jne 0x3460
0x34f6: cmp byte ptr [rax+0x4],0x38
0x34fa: jne 0x3460
0x3500: cmp byte ptr [rax+0x5],0x0
0x3504: jne 0x3460
0x350a: cmp byte ptr [rbp],0x60
0x350e: lea rax,[rip+0x5e7f]
0x3515: lea rdx,[rip+0x5e7c]
0x351c: cmovne rax,rdx
0x3520: add rsp,0x8
0x3524: pop rbx
0x3525: pop rbp
0x3526: ret 
0x3603: xor r11d,r11d
0x3606: mov rax,rbp
0x3609: mov r8d,r12d
0x360c: mov rbp,r11
0x360f: mov r11,rax
0x3612: nop word ptr [rax+rax]
0x3618: cmp r11,rbp
0x361b: setne r12b
0x361f: cmp r11,-0x1
0x3623: jne 0x3632
0x3625: mov rax,qword ptr [rsp+0x10]
0x362a: cmp byte ptr [rax+rbp],0x0
0x362e: setne r12b
0x3632: test r12b,r12b
0x3635: je 0x3c90
0x363b: cmp dword ptr [rsp+0x8],0x2
0x3640: mov rdi,qword ptr [rsp+0x10]
0x3645: lea r9,[rdi+rbp]
0x3649: setne al
0x364c: and al,byte ptr [rsp+0xd]
0x3650: mov r10d,eax
0x3653: je 0x3700
0x3659: mov rax,qword ptr [rsp+0x18]
0x365e: test rax,rax
0x3661: je 0x3a90
0x3667: cmp r11,-0x1
0x366b: lea rbx,[rbp+rax]
0x3670: jne 0x36a0
0x3672: cmp rax,0x1
0x3676: jbe 0x36a0
0x3678: mov byte ptr [rsp+0x38],r8b
0x367d: mov byte ptr [rsp+0x30],r10b
0x3682: mov qword ptr [rsp+0x28],r9
0x3687: call 0x1400
0x368c: movzx r8d,byte ptr [rsp+0x38]
0x3692: movzx r10d,byte ptr [rsp+0x30]
0x3698: mov r11,rax
0x369b: mov r9,qword ptr [rsp+0x28]
0x36a0: cmp rbx,r11
0x36a3: mov byte ptr [rsp+0x28],r10b
0x36a8: ja 0x3c60
0x36ae: mov rdx,qword ptr [rsp+0x18]
0x36b3: mov rsi,qword ptr [rsp+0x48]
0x36b8: mov rdi,r9
0x36bb: mov qword ptr [rsp+0x40],r11
0x36c0: mov byte ptr [rsp+0x38],r8b
0x36c5: mov qword ptr [rsp+0x30],r9
0x36ca: call 0x1480
0x36cf: test eax,eax
0x36d1: mov r9,qword ptr [rsp+0x30]
0x36d6: movzx r8d,byte ptr [rsp+0x38]
0x36dc: mov r11,qword ptr [rsp+0x40]
0x36e1: jne 0x3c60
0x36e7: cmp byte ptr [rsp+0xf],0x0
0x36ec: movzx r10d,byte ptr [rsp+0x28]
0x36f2: jne 0x4675
0x36f8: nop dword ptr [rax+rax]
0x3700: movzx ebx,byte ptr [r9]
0x3704: cmp bl,0x7e
0x3707: ja 0x3a28
0x370d: lea rcx,[rip+0x5d18]
0x3714: movzx edx,bl
0x3717: movsxd rax,dword ptr [rcx+rdx*4]
0x371b: add rax,rcx
0x371e: jmp rax
0x3758: cmp byte ptr [rsp+0xd],0x1
0x375d: jne 0x3872
0x3763: test dl,dl
0x3765: jne 0x3872
0x376b: mov rsi,qword ptr [rsp+0x20]
0x3770: test rsi,rsi
0x3773: je 0x3789
0x3775: mov edx,ebx
0x3777: shr dl,0x5
0x377a: movzx edx,dl
0x377d: mov edx,dword ptr [rsi+rdx*4]
0x3780: btl edx,ebx
0x3783: jb 0x38d3
0x3789: test r10b,r10b
0x378c: jne 0x38d3
0x3792: xor eax,0x1
0x3795: add rbp,0x1
0x3799: and eax,r8d
0x379c: test al,al
0x379e: je 0x37c0
0x37a0: cmp r13,r15
0x37a3: jbe 0x37aa
0x37a5: mov byte ptr [r14+r15],0x27
0x37aa: lea rax,[r15+0x1]
0x37ae: cmp r13,rax
0x37b1: jbe 0x37b9
0x37b3: mov byte ptr [r14+r15+0x1],0x27
0x37b9: add r15,0x2
0x37bd: xor r8d,r8d
0x37c0: cmp r15,r13
0x37c3: jae 0x37c9
0x37c5: mov byte ptr [r14+r15],bl
0x37c9: movzx edi,byte ptr [rsp+0xe]
0x37ce: add r15,0x1
0x37d2: mov eax,0x0
0x37d7: test r12b,r12b
0x37da: cmove edi,eax
0x37dd: mov byte ptr [rsp+0xe],dil
0x37e2: jmp 0x3618
0x3872: cmp byte ptr [rsp+0xf],0x0
0x3877: jne 0x376b
0x387d: jmp 0x3789
0x38d3: cmp dword ptr [rsp+0x8],0x2
0x38d8: sete dl
0x38db: cmp byte ptr [rsp+0xf],0x0
0x38e0: mov eax,edx
0x38e2: jne 0x4138
0x38e8: mov eax,r8d
0x38eb: xor eax,0x1
0x38ee: and al,dl
0x38f0: je 0x3921
0x38f2: cmp r13,r15
0x38f5: jbe 0x38fc
0x38f7: mov byte ptr [r14+r15],0x27
0x38fc: lea rdx,[r15+0x1]
0x3900: cmp r13,rdx
0x3903: jbe 0x390b
0x3905: mov byte ptr [r14+r15+0x1],0x24
0x390b: lea rdx,[r15+0x2]
0x390f: cmp r13,rdx
0x3912: jbe 0x391a
0x3914: mov byte ptr [r14+r15+0x2],0x27
0x391a: add r15,0x3
0x391e: mov r8d,eax
0x3921: cmp r13,r15
0x3924: jbe 0x392b
0x3926: mov byte ptr [r14+r15],0x5c
0x392b: add r15,0x1
0x392f: add rbp,0x1
0x3933: jmp 0x37c0
0x3a20: xor r10d,r10d
0x3a23: nop dword ptr [rax+rax]
0x3a28: cmp qword ptr [rsp+0x58],0x1
0x3a2e: jne 0x3dd8
0x3a34: mov qword ptr [rsp+0x38],r11
0x3a39: mov byte ptr [rsp+0x30],r8b
0x3a3e: mov byte ptr [rsp+0x28],r10b
0x3a43: call 0x1610
0x3a48: mov rcx,qword ptr [rax]
0x3a4b: movzx edx,bl
0x3a4e: movzx r10d,byte ptr [rsp+0x28]
0x3a54: movzx r8d,byte ptr [rsp+0x30]
0x3a5a: mov r11,qword ptr [rsp+0x38]
0x3a5f: mov edi,0x1
0x3a64: movzx eax,word ptr [rcx+rdx*2]
0x3a68: and ax,0x4000
0x3a6c: setne r12b
0x3a70: sete al
0x3a73: and al,byte ptr [rsp+0xd]
0x3a77: test al,al
0x3a79: jne 0x4411
0x3a7f: cmp dword ptr [rsp+0x8],0x2
0x3a84: sete dl
0x3a87: jmp 0x3758
0x3a90: movzx ebx,byte ptr [r9]
0x3a94: cmp bl,0x7e
0x3a97: ja 0x3a20
0x3a99: lea rcx,[rip+0x5b88]
0x3aa0: movzx edx,bl
0x3aa3: movsxd rax,dword ptr [rcx+rdx*4]
0x3aa7: add rax,rcx
0x3aaa: jmp rax
0x3c60: xor r10d,r10d
0x3c63: jmp 0x3700
0x3c90: cmp dword ptr [rsp+0x8],0x2
0x3c95: movzx ebx,byte ptr [rsp+0xf]
0x3c9a: mov r12d,r8d
0x3c9d: mov rbp,r11
0x3ca0: sete dl
0x3ca3: mov eax,ebx
0x3ca5: test r15,r15
0x3ca8: sete cl
0x3cab: and eax,edx
0x3cad: and al,cl
0x3caf: jne 0x4716
0x3cb5: mov eax,ebx
0x3cb7: xor eax,0x1
0x3cba: and dl,al
0x3cbc: je 0x462c
0x3cc2: cmp byte ptr [rsp+0x7c],0x0
0x3cc7: je 0x462a
0x3ccd: cmp byte ptr [rsp+0xe],0x0
0x3cd2: jne 0x46cd
0x3cd8: test r13,r13
0x3cdb: sete al
0x3cde: cmp qword ptr [rsp+0x50],0x0
0x3ce4: setne dl
0x3ce7: and al,dl
0x3ce9: je 0x470c
0x3cef: mov r13,qword ptr [rsp+0x50]
0x3cf4: lea rbx,[rip+0x56aa]
0x3cfb: mov byte ptr [r14],0x27
0x3cff: mov dword ptr [rsp+0x8],0x2
0x3d07: mov r15d,0x1
0x3d0d: mov qword ptr [rsp+0x18],0x1
0x3d16: mov byte ptr [rsp+0xf],0x0
0x3d1b: mov qword ptr [rsp+0x48],rbx
0x3d20: mov byte ptr [rsp+0x7c],al
0x3d24: jmp 0x3603
0x3dd8: lea rax,[rsp+0xa0]
0x3de0: cmp r11,-0x1
0x3de4: mov qword ptr [rsp+0xa0],0x0
0x3df0: mov qword ptr [rsp+0x28],rax
0x3df5: jne 0x3e24
0x3df7: mov rdi,qword ptr [rsp+0x10]
0x3dfc: mov byte ptr [rsp+0x40],r8b
0x3e01: mov byte ptr [rsp+0x38],r10b
0x3e06: mov qword ptr [rsp+0x30],r9
0x3e0b: call 0x1400
0x3e10: movzx r8d,byte ptr [rsp+0x40]
0x3e16: movzx r10d,byte ptr [rsp+0x38]
0x3e1c: mov r11,rax
0x3e1f: mov r9,qword ptr [rsp+0x30]
0x3e24: lea rax,[rsp+0x9c]
0x3e2c: xor ecx,ecx
0x3e2e: mov byte ptr [rsp+0x7e],bl
0x3e32: mov byte ptr [rsp+0x7d],r8b
0x3e37: mov rbx,rcx
0x3e3a: mov qword ptr [rsp+0x88],r9
0x3e42: mov qword ptr [rsp+0x38],rax
0x3e47: mov byte ptr [rsp+0x7f],r10b
0x3e4c: mov qword ptr [rsp+0x80],r15
0x3e54: mov qword ptr [rsp+0x40],r14
0x3e59: mov qword ptr [rsp+0x70],r13
0x3e5e: mov qword ptr [rsp+0x30],r11
0x3e63: mov rax,qword ptr [rsp+0x10]
0x3e68: lea r14,[rbp+rbx]
0x3e6d: mov rdx,qword ptr [rsp+0x30]
0x3e72: mov rcx,qword ptr [rsp+0x28]
0x3e77: mov rdi,qword ptr [rsp+0x38]
0x3e7c: lea r13,[rax+r14]
0x3e80: sub rdx,r14
0x3e83: mov rsi,r13
0x3e86: call 0x5f00
0x3e8b: test rax,rax
0x3e8e: mov r15,rax
0x3e91: je 0x3ee1
0x3e93: cmp rax,-0x1
0x3e97: je 0x44b5
0x3e9d: cmp rax,-0x2
0x3ea1: je 0x4441
0x3ea7: cmp dword ptr [rsp+0x8],0x2
0x3eac: sete al
0x3eaf: and al,byte ptr [rsp+0xf]
0x3eb3: jne 0x4050
0x3eb9: mov edi,dword ptr [rsp+0x9c]
0x3ec0: call 0x1600
0x3ec5: mov rdi,qword ptr [rsp+0x28]
0x3eca: test eax,eax
0x3ecc: mov eax,0x0
0x3ed1: cmove r12d,eax
0x3ed5: add rbx,r15
0x3ed8: call 0x15f0
0x3edd: test eax,eax
0x3edf: je 0x3e63
0x3ee1: mov edx,r12d
0x3ee4: mov rdi,rbx
0x3ee7: movzx r8d,byte ptr [rsp+0x7d]
0x3eed: xor edx,0x1
0x3ef0: movzx ebx,byte ptr [rsp+0x7e]
0x3ef5: movzx r10d,byte ptr [rsp+0x7f]
0x3efb: and dl,byte ptr [rsp+0xd]
0x3eff: mov r15,qword ptr [rsp+0x80]
0x3f07: mov r14,qword ptr [rsp+0x40]
0x3f0c: mov r13,qword ptr [rsp+0x70]
0x3f11: mov r11,qword ptr [rsp+0x30]
0x3f16: cmp rdi,0x1
0x3f1a: jbe 0x451b
0x3f20: mov rcx,rdi
0x3f23: xor esi,esi
0x3f25: movzx r9d,byte ptr [rsp+0xf]
0x3f2b: add rcx,rbp
0x3f2e: mov rdi,qword ptr [rsp+0x10]
0x3f33: jmp 0x3fee
0x3f40: cmp dword ptr [rsp+0x8],0x2
0x3f45: sete al
0x3f48: test r9b,r9b
0x3f4b: jne 0x4400
0x3f51: mov esi,r8d
0x3f54: xor esi,0x1
0x3f57: and al,sil
0x3f5a: je 0x3f8b
0x3f5c: cmp r13,r15
0x3f5f: jbe 0x3f66
0x3f61: mov byte ptr [r14+r15],0x27
0x3f66: lea rsi,[r15+0x1]
0x3f6a: cmp r13,rsi
0x3f6d: jbe 0x3f75
0x3f6f: mov byte ptr [r14+r15+0x1],0x24
0x3f75: lea rsi,[r15+0x2]
0x3f79: cmp r13,rsi
0x3f7c: jbe 0x3f84
0x3f7e: mov byte ptr [r14+r15+0x2],0x27
0x3f84: add r15,0x3
0x3f88: mov r8d,eax
0x3f8b: cmp r13,r15
0x3f8e: jbe 0x3f95
0x3f90: mov byte ptr [r14+r15],0x5c
0x3f95: lea rax,[r15+0x1]
0x3f99: cmp r13,rax
0x3f9c: jbe 0x3fab
0x3f9e: mov eax,ebx
0x3fa0: shr al,0x6
0x3fa3: add eax,0x30
0x3fa6: mov byte ptr [r14+r15+0x1],al
0x3fab: lea rax,[r15+0x2]
0x3faf: cmp r13,rax
0x3fb2: jbe 0x3fc4
0x3fb4: mov eax,ebx
0x3fb6: shr al,0x3
0x3fb9: and eax,0x7
0x3fbc: add eax,0x30
0x3fbf: mov byte ptr [r14+r15+0x2],al
0x3fc4: and ebx,0x7
0x3fc7: add rbp,0x1
0x3fcb: add r15,0x3
0x3fcf: add ebx,0x30
0x3fd2: cmp rbp,rcx
0x3fd5: jae 0x37c0
0x3fdb: mov esi,edx
0x3fdd: cmp r13,r15
0x3fe0: jbe 0x3fe6
0x3fe2: mov byte ptr [r14+r15],bl
0x3fe6: movzx ebx,byte ptr [rdi+rbp]
0x3fea: add r15,0x1
0x3fee: test dl,dl
0x3ff0: jne 0x3f40
0x3ff6: mov eax,esi
0x3ff8: xor eax,0x1
0x3ffb: and eax,r8d
0x3ffe: test r10b,r10b
0x4001: je 0x4011
0x4003: cmp r13,r15
0x4006: jbe 0x400d
0x4008: mov byte ptr [r14+r15],0x5c
0x400d: add r15,0x1
0x4011: add rbp,0x1
0x4015: cmp rbp,rcx
0x4018: jae 0x379c
0x401e: test al,al
0x4020: je 0x441e
0x4026: cmp r13,r15
0x4029: jbe 0x4030
0x402b: mov byte ptr [r14+r15],0x27
0x4030: lea rax,[r15+0x1]
0x4034: cmp r13,rax
0x4037: jbe 0x403f
0x4039: mov byte ptr [r14+r15+0x1],0x27
0x403f: add r15,0x2
0x4043: xor r10d,r10d
0x4046: xor r8d,r8d
0x4049: jmp 0x3fdd
0x4050: cmp r15,0x1
0x4054: je 0x3eb9
0x405a: mov rdi,qword ptr [rsp+0x10]
0x405f: lea rcx,[rdi+r15]
0x4063: lea rdx,[rdi+r14+0x1]
0x4068: lea r8,[rcx+r14]
0x406c: jmp 0x407d
0x4070: add rdx,0x1
0x4074: cmp r8,rdx
0x4077: je 0x3eb9
0x407d: movzx ecx,byte ptr [rdx]
0x4080: sub ecx,0x5b
0x4083: cmp cl,0x21
0x4086: ja 0x4070
0x4088: mov esi,0x1
0x408d: shl rsi,cl
0x4090: mov rcx,rsi
0x4093: movabsq rsi,0x20000002b
0x409d: test rcx,rsi
0x40a0: je 0x4070
0x40a2: mov r14,qword ptr [rsp+0x40]
0x40a7: mov r13,qword ptr [rsp+0x70]
0x40ac: mov rbp,qword ptr [rsp+0x30]
0x40b1: mov dword ptr [rsp+0x8],0x2
0x40b9: cmp byte ptr [rsp+0xd],0x0
0x40be: je 0x40d0
0x40c0: test al,al
0x40c2: mov eax,0x4
0x40c7: cmove eax,dword ptr [rsp+0x8]
0x40cc: mov dword ptr [rsp+0x8],eax
0x40d0: sub rsp,0x8
0x40d4: mov rcx,rbp
0x40d7: mov rsi,r13
0x40da: push qword ptr [rsp+0x68]
0x40de: push qword ptr [rsp+0x78]
0x40e2: mov rdi,r14
0x40e5: push 0x0
0x40e7: mov r9d,dword ptr [rsp+0x98]
0x40ef: mov r8d,dword ptr [rsp+0x28]
0x40f4: mov rdx,qword ptr [rsp+0x30]
0x40f9: and r9d,-0x3
0x40fd: call 0x3530
0x4102: add rsp,0x20
0x4106: mov r15,rax
0x4109: mov rbx,qword ptr [rsp+0xa8]
0x4111: xor rbx,qword ptr fs:0x28
0x411a: mov rax,r15
0x411d: jne 0x4723
0x4123: add rsp,0xb8
0x412a: pop rbx
0x412b: pop rbp
0x412c: pop r12
0x412e: pop r13
0x4130: pop r14
0x4132: pop r15
0x4134: ret 
0x4138: mov rbp,r11
0x413b: jmp 0x40b9
0x41a1: test r13,r13
0x41a4: jne 0x473a
0x41aa: lea rax,[rip+0x51f4]
0x41b1: mov qword ptr [rsp+0x50],0x0
0x41ba: mov byte ptr [rsp+0xe],0x1
0x41bf: mov byte ptr [rsp+0x7c],0x0
0x41c4: xor r12d,r12d
0x41c7: mov byte ptr [rsp+0xf],0x0
0x41cc: mov qword ptr [rsp+0x18],0x1
0x41d5: mov qword ptr [rsp+0x48],rax
0x41da: mov r15d,0x1
0x41e0: mov dword ptr [rsp+0x8],0x2
0x41e8: jmp 0x3603
0x4400: movzx ebx,byte ptr [rsp+0xf]
0x4405: mov rbp,r11
0x4408: mov byte ptr [rsp+0xd],bl
0x440c: jmp 0x40b9
0x4411: movzx edx,byte ptr [rsp+0xd]
0x4416: xor r12d,r12d
0x4419: jmp 0x3f20
0x441e: xor r10d,r10d
0x4421: jmp 0x3fdd
0x4441: mov r11,qword ptr [rsp+0x30]
0x4446: mov rsi,r14
0x4449: mov rcx,r13
0x444c: mov rax,rbx
0x444f: mov rdi,rbx
0x4452: movzx r8d,byte ptr [rsp+0x7d]
0x4458: movzx ebx,byte ptr [rsp+0x7e]
0x445d: mov r9,qword ptr [rsp+0x88]
0x4465: cmp rsi,r11
0x4468: movzx r10d,byte ptr [rsp+0x7f]
0x446e: mov r15,qword ptr [rsp+0x80]
0x4476: mov r14,qword ptr [rsp+0x40]
0x447b: mov r13,qword ptr [rsp+0x70]
0x4480: jae 0x44a8
0x4482: cmp byte ptr [rcx],0x0
0x4485: jne 0x4497
0x4487: jmp 0x44a8
0x4490: cmp byte ptr [r9+rax],0x0
0x4495: je 0x44a5
0x4497: add rax,0x1
0x449b: lea rdx,[rbp+rax]
0x44a0: cmp r11,rdx
0x44a3: ja 0x4490
0x44a5: mov rdi,rax
0x44a8: movzx edx,byte ptr [rsp+0xd]
0x44ad: xor r12d,r12d
0x44b0: jmp 0x3f16
0x44b5: mov rdi,rbx
0x44b8: movzx r8d,byte ptr [rsp+0x7d]
0x44be: movzx ebx,byte ptr [rsp+0x7e]
0x44c3: movzx r10d,byte ptr [rsp+0x7f]
0x44c9: mov r15,qword ptr [rsp+0x80]
0x44d1: xor r12d,r12d
0x44d4: mov r14,qword ptr [rsp+0x40]
0x44d9: mov r13,qword ptr [rsp+0x70]
0x44de: mov r11,qword ptr [rsp+0x30]
0x44e3: movzx edx,byte ptr [rsp+0xd]
0x44e8: jmp 0x3f16
0x451b: mov eax,edx
0x451d: jmp 0x3a77
0x462a: mov eax,edx
0x462c: mov rbx,qword ptr [rsp+0x48]
0x4631: test rbx,rbx
0x4634: je 0x4662
0x4636: test al,al
0x4638: je 0x4662
0x463a: movzx ecx,byte ptr [rbx]
0x463d: mov rax,rbx
0x4640: test cl,cl
0x4642: je 0x4662
0x4644: mov rdx,r15
0x4647: sub rax,r15
0x464a: cmp r13,rdx
0x464d: jbe 0x4653
0x464f: mov byte ptr [r14+rdx],cl
0x4653: add rdx,0x1
0x4657: movzx ecx,byte ptr [rax+rdx]
0x465b: test cl,cl
0x465d: jne 0x464a
0x465f: mov r15,rdx
0x4662: cmp r13,r15
0x4665: jbe 0x4109
0x466b: mov byte ptr [r14+r15],0x0
0x4670: jmp 0x4109
0x4675: cmp dword ptr [rsp+0x8],0x2
0x467a: movzx ebx,byte ptr [rsp+0xf]
0x467f: mov rbp,r11
0x4682: sete al
0x4685: mov byte ptr [rsp+0xd],bl
0x4689: jmp 0x40b9
0x46cd: sub rsp,0x8
0x46d1: mov r8d,0x5
0x46d7: mov rcx,r11
0x46da: push qword ptr [rsp+0x68]
0x46de: push qword ptr [rsp+0x78]
0x46e2: mov rdi,r14
0x46e5: push qword ptr [rsp+0x38]
0x46e9: mov r9d,dword ptr [rsp+0x98]
0x46f1: mov rdx,qword ptr [rsp+0x30]
0x46f6: mov rsi,qword ptr [rsp+0x70]
0x46fb: call 0x3530
0x4700: add rsp,0x20
0x4704: mov r15,rax
0x4707: jmp 0x4109
0x470c: movzx eax,byte ptr [rsp+0x7c]
0x4711: jmp 0x462c
0x4716: mov dword ptr [rsp+0x8],0x2
0x471e: jmp 0x40b9
0x4723: call 0x1420
0x4728: mov byte ptr [rsp+0xd],0x0
0x472d: jmp 0x41a1
0x473a: mov byte ptr [rsp+0xe],0x1
0x473f: xor eax,eax
0x4741: xor r12d,r12d
0x4744: mov qword ptr [rsp+0x50],0x0
0x474d: jmp 0x3cf4
0x4764: nop 
0x4766: nop word ptr cs:[rax+rax]
0x485c: add rsp,0x20
0x4860: mov r11,qword ptr [rsp+0x10]
0x4865: cmp r11,rax
0x4868: ja 0x48d1
0x486a: lea rsi,[rax+0x1]
0x486e: lea rax,[rip+0x20786b]
0x4875: cmp r12,rax
0x4878: mov qword ptr [rbx],rsi
0x487b: je 0x488f
0x487d: mov rdi,r12
0x4880: mov qword ptr [rsp+0x10],rsi
0x4885: call 0x1330
0x488a: mov rsi,qword ptr [rsp+0x10]
0x488f: mov rdi,rsi
0x4892: mov qword ptr [rsp+0x10],rsi
0x4897: call 0x5a70
0x489c: sub rsp,0x8
0x48a0: mov qword ptr [rbx+0x8],rax
0x48a4: mov r8d,dword ptr [rbp]
0x48a8: push qword ptr [rbp+0x30]
0x48ab: push qword ptr [rbp+0x28]
0x48ae: mov rcx,r14
0x48b1: push r15
0x48b3: mov r9d,dword ptr [rsp+0x3c]
0x48b8: mov rdi,rax
0x48bb: mov rdx,qword ptr [rsp+0x28]
0x48c0: mov rsi,qword ptr [rsp+0x30]
0x48c5: mov r12,rax
0x48c8: call 0x3530
0x48cd: add rsp,0x20
0x48d1: mov eax,dword ptr [rsp+0x18]
0x48d5: mov dword ptr [r13],eax
0x48d9: add rsp,0x28
0x48dd: mov rax,r12
0x48e0: pop rbx
0x48e1: pop rbp
0x48e2: pop r12
0x48e4: pop r13
0x48e6: pop r14
0x48e8: pop r15
0x48ea: ret 
0x491b: nop dword ptr [rax+rax]
0x4920: push r12
0x4922: push rbp
0x4923: push rbx
0x4924: mov rbx,rdi
0x4927: call 0x1350
0x492c: mov r12d,dword ptr [rax]
0x492f: mov rbp,rax
0x4932: lea rax,[rip+0x2078a7]
0x4939: test rbx,rbx
0x493c: mov esi,0x38
0x4941: cmove rbx,rax
0x4945: mov rdi,rbx
0x4948: call 0x5c70
0x494d: mov dword ptr [rbp],r12d
0x4951: pop rbx
0x4952: pop rbp
0x4953: pop r12
0x4955: ret 
0x4960: lea rax,[rip+0x207879]
0x4967: test rdi,rdi
0x496a: cmove rdi,rax
0x496e: mov eax,dword ptr [rdi]
0x4970: ret 
0x4980: lea rax,[rip+0x207859]
0x4987: test rdi,rdi
0x498a: cmove rdi,rax
0x498e: mov dword ptr [rdi],esi
0x4990: ret 
0x49a0: lea rax,[rip+0x207839]
0x49a7: test rdi,rdi
0x49aa: mov ecx,esi
0x49ac: cmove rdi,rax
0x49b0: mov eax,esi
0x49b2: and ecx,0x1f
0x49b5: shr al,0x5
0x49b8: movzx eax,al
0x49bb: lea rdi,[rdi+rax*4+0x8]
0x49c0: mov esi,dword ptr [rdi]
0x49c2: mov eax,esi
0x49c4: shr eax,cl
0x49c6: xor edx,eax
0x49c8: and eax,0x1
0x49cb: and edx,0x1
0x49ce: shl edx,cl
0x49d0: xor edx,esi
0x49d2: mov dword ptr [rdi],edx
0x49d4: ret 
0x49e0: lea rax,[rip+0x2077f9]
0x49e7: test rdi,rdi
0x49ea: cmove rdi,rax
0x49ee: mov eax,dword ptr [rdi+0x4]
0x49f1: mov dword ptr [rdi+0x4],esi
0x49f4: ret 
0x4a00: lea rax,[rip+0x2077d9]
0x4a07: test rdi,rdi
0x4a0a: cmove rdi,rax
0x4a0e: test rsi,rsi
0x4a11: mov dword ptr [rdi],0xa
0x4a17: je 0x4a27
0x4a19: test rdx,rdx
0x4a1c: je 0x4a27
0x4a1e: mov qword ptr [rdi+0x28],rsi
0x4a22: mov qword ptr [rdi+0x30],rdx
0x4a26: ret 
0x4a27: sub rsp,0x8
0x4a2b: call 0x1340
0x4a30: push r15
0x4a32: push r14
0x4a34: lea rax,[rip+0x2077a5]
0x4a3b: push r13
0x4a3d: push r12
0x4a3f: mov r13,rdi
0x4a42: push rbp
0x4a43: push rbx
0x4a44: mov rbx,r8
0x4a47: mov r14,rsi
0x4a4a: mov r15,rdx
0x4a4d: sub rsp,0x18
0x4a51: test r8,r8
0x4a54: cmove rbx,rax
0x4a58: mov qword ptr [rsp+0x8],rcx
0x4a5d: call 0x1350
0x4a62: mov r12d,dword ptr [rax]
0x4a65: mov rbp,rax
0x4a68: lea rax,[rbx+0x8]
0x4a6c: sub rsp,0x8
0x4a70: mov r9d,dword ptr [rbx+0x4]
0x4a74: push qword ptr [rbx+0x30]
0x4a77: mov r8d,dword ptr [rbx]
0x4a7a: push qword ptr [rbx+0x28]
0x4a7d: mov rdx,r15
0x4a80: push rax
0x4a81: mov rcx,qword ptr [rsp+0x28]
0x4a86: mov rsi,r14
0x4a89: mov rdi,r13
0x4a8c: call 0x3530
0x4a91: mov dword ptr [rbp],r12d
0x4a95: add rsp,0x38
0x4a99: pop rbx
0x4a9a: pop rbp
0x4a9b: pop r12
0x4a9d: pop r13
0x4a9f: pop r14
0x4aa1: pop r15
0x4aa3: ret 
0x4ab0: push r15
0x4ab2: push r14
0x4ab4: lea rax,[rip+0x207725]
0x4abb: push r13
0x4abd: push r12
0x4abf: mov r12,rdx
0x4ac2: push rbp
0x4ac3: push rbx
0x4ac4: mov rbx,rcx
0x4ac7: mov r14,rdi
0x4aca: mov r15,rsi
0x4acd: sub rsp,0x38
0x4ad1: test rcx,rcx
0x4ad4: cmove rbx,rax
0x4ad8: xor ebp,ebp
0x4ada: call 0x1350
0x4adf: test r12,r12
0x4ae2: mov r13,rax
0x4ae5: mov eax,dword ptr [rax]
0x4ae7: sete bpl
0x4aeb: or ebp,dword ptr [rbx+0x4]
0x4aee: lea r10,[rbx+0x8]
0x4af2: sub rsp,0x8
0x4af6: mov r8d,dword ptr [rbx]
0x4af9: mov rcx,r15
0x4afc: mov dword ptr [rsp+0x14],eax
0x4b00: push qword ptr [rbx+0x30]
0x4b03: mov rdx,r14
0x4b06: push qword ptr [rbx+0x28]
0x4b09: push r10
0x4b0b: xor esi,esi
0x4b0d: mov r9d,ebp
0x4b10: xor edi,edi
0x4b12: mov qword ptr [rsp+0x40],r10
0x4b17: call 0x3530
0x4b1c: lea rsi,[rax+0x1]
0x4b20: mov qword ptr [rsp+0x48],rax
0x4b25: add rsp,0x20
0x4b29: mov rdi,rsi
0x4b2c: mov qword ptr [rsp+0x18],rsi
0x4b31: call 0x5a70
0x4b36: mov qword ptr [rsp+0x10],rax
0x4b3b: sub rsp,0x8
0x4b3f: push qword ptr [rbx+0x30]
0x4b42: push qword ptr [rbx+0x28]
0x4b45: mov r10,qword ptr [rsp+0x38]
0x4b4a: mov r9d,ebp
0x4b4d: mov r8d,dword ptr [rbx]
0x4b50: mov rcx,r15
0x4b53: mov rdx,r14
0x4b56: mov rdi,rax
0x4b59: push r10
0x4b5b: mov rsi,qword ptr [rsp+0x38]
0x4b60: call 0x3530
0x4b65: mov eax,dword ptr [rsp+0x2c]
0x4b69: add rsp,0x20
0x4b6d: test r12,r12
0x4b70: mov dword ptr [r13],eax
0x4b74: je 0x4b7f
0x4b76: mov r11,qword ptr [rsp+0x28]
0x4b7b: mov qword ptr [r12],r11
0x4b7f: mov rax,qword ptr [rsp+0x10]
0x4b84: add rsp,0x38
0x4b88: pop rbx
0x4b89: pop rbp
0x4b8a: pop r12
0x4b8c: pop r13
0x4b8e: pop r14
0x4b90: pop r15
0x4b92: ret 
0x4ba0: mov rcx,rdx
0x4ba3: xor edx,edx
0x4ba5: jmp 0x4ab0
0x4bb0: mov eax,dword ptr [rip+0x2074a2]
0x4bb6: push r12
0x4bb8: mov r12,qword ptr [rip+0x2074a1]
0x4bbf: push rbp
0x4bc0: push rbx
0x4bc1: cmp eax,0x1
0x4bc4: jle 0x4bf1
0x4bc6: sub eax,0x2
0x4bc9: lea rbx,[r12+0x18]
0x4bce: shl rax,0x4
0x4bd2: lea rbp,[r12+rax+0x28]
0x4bd7: nop word ptr [rax+rax]
0x4be0: mov rdi,qword ptr [rbx]
0x4be3: add rbx,0x10
0x4be7: call 0x1330
0x4bec: cmp rbx,rbp
0x4bef: jne 0x4be0
0x4bf1: mov rdi,qword ptr [r12+0x8]
0x4bf6: lea rbx,[rip+0x2074e3]
0x4bfd: cmp rdi,rbx
0x4c00: je 0x4c19
0x4c02: call 0x1330
0x4c07: mov qword ptr [rip+0x20745e],0x100
0x4c12: mov qword ptr [rip+0x20745f],rbx
0x4c19: lea rbx,[rip+0x207450]
0x4c20: cmp r12,rbx
0x4c23: je 0x4c34
0x4c25: mov rdi,r12
0x4c28: call 0x1330
0x4c2d: mov qword ptr [rip+0x20742c],rbx
0x4c34: pop rbx
0x4c35: mov dword ptr [rip+0x207419],0x1
0x4c3f: pop rbp
0x4c40: pop r12
0x4c42: ret 
0x4c50: lea rcx,[rip+0x207589]
0x4c57: mov rdx,-0x1
0x4c5e: jmp 0x4770
0x4c70: lea rcx,[rip+0x207569]
0x4c77: jmp 0x4770
0x4c80: lea rcx,[rip+0x207559]
0x4c87: mov rsi,rdi
0x4c8a: mov rdx,-0x1
0x4c91: xor edi,edi
0x4c93: jmp 0x4770
0x4ca0: lea rcx,[rip+0x207539]
0x4ca7: mov rdx,rsi
0x4caa: mov rsi,rdi
0x4cad: xor edi,edi
0x4caf: jmp 0x4770
0x4cc0: sub rsp,0x48
0x4cc4: mov rax,rdx
0x4cc7: mov rdx,qword ptr fs:0x28
0x4cd0: mov qword ptr [rsp+0x38],rdx
0x4cd5: xor edx,edx
0x4cd7: cmp esi,0xa
0x4cda: je 0x4d44
0x4cdc: mov dword ptr [rsp],esi
0x4cdf: mov rcx,rsp
0x4ce2: mov rdx,-0x1
0x4ce9: mov rsi,rax
0x4cec: mov qword ptr [rsp+0x4],0x0
0x4cf5: mov qword ptr [rsp+0xc],0x0
0x4cfe: mov qword ptr [rsp+0x14],0x0
0x4d07: mov qword ptr [rsp+0x1c],0x0
0x4d10: mov qword ptr [rsp+0x24],0x0
0x4d19: mov qword ptr [rsp+0x2c],0x0
0x4d22: mov dword ptr [rsp+0x34],0x0
0x4d2a: call 0x4770
0x4d2f: mov rcx,qword ptr [rsp+0x38]
0x4d34: xor rcx,qword ptr fs:0x28
0x4d3d: jne 0x4d49
0x4d3f: add rsp,0x48
0x4d43: ret 
0x4d44: call 0x1340
0x4d49: call 0x1420
0x4d4e: nop 
0x4d50: sub rsp,0x48
0x4d54: mov rax,rdx
0x4d57: mov rdx,rcx
0x4d5a: mov rcx,qword ptr fs:0x28
0x4d63: mov qword ptr [rsp+0x38],rcx
0x4d68: xor ecx,ecx
0x4d6a: cmp esi,0xa
0x4d6d: je 0x4dd0
0x4d6f: mov dword ptr [rsp],esi
0x4d72: mov rcx,rsp
0x4d75: mov rsi,rax
0x4d78: mov qword ptr [rsp+0x4],0x0
0x4d81: mov qword ptr [rsp+0xc],0x0
0x4d8a: mov qword ptr [rsp+0x14],0x0
0x4d93: mov qword ptr [rsp+0x1c],0x0
0x4d9c: mov qword ptr [rsp+0x24],0x0
0x4da5: mov qword ptr [rsp+0x2c],0x0
0x4dae: mov dword ptr [rsp+0x34],0x0
0x4db6: call 0x4770
0x4dbb: mov rdx,qword ptr [rsp+0x38]
0x4dc0: xor rdx,qword ptr fs:0x28
0x4dc9: jne 0x4dd5
0x4dcb: add rsp,0x48
0x4dcf: ret 
0x4dd0: call 0x1340
0x4dd5: call 0x1420
0x4dda: nop word ptr [rax+rax]
0x4de0: mov rdx,rsi
0x4de3: mov esi,edi
0x4de5: xor edi,edi
0x4de7: jmp 0x4cc0
0x4df0: mov rcx,rdx
0x4df3: mov rdx,rsi
0x4df6: mov esi,edi
0x4df8: xor edi,edi
0x4dfa: jmp 0x4d50
0x4e00: sub rsp,0x48
0x4e04: mov ecx,edx
0x4e06: mov rax,qword ptr fs:0x28
0x4e0f: mov qword ptr [rsp+0x38],rax
0x4e14: xor eax,eax
0x4e16: mov rax,qword ptr [rip+0x2073f3]
0x4e1d: mov r8,rsp
0x4e20: and ecx,0x1f
0x4e23: movdqa xmm0,[rip+0x2073b5]
0x4e2b: mov qword ptr [rsp+0x30],rax
0x4e30: mov eax,edx
0x4e32: movaps [rsp],xmm0
0x4e36: shr al,0x5
0x4e39: movzx eax,al
0x4e3c: lea r9,[r8+rax*4+0x8]
0x4e41: movdqa xmm0,[rip+0x2073a7]
0x4e49: movaps [rsp+0x10],xmm0
0x4e4e: movdqa xmm0,[rip+0x2073aa]
0x4e56: movaps [rsp+0x20],xmm0
0x4e5b: mov edx,dword ptr [r9]
0x4e5e: mov eax,edx
0x4e60: shr eax,cl
0x4e62: not eax
0x4e64: and eax,0x1
0x4e67: shl eax,cl
0x4e69: mov rcx,r8
0x4e6c: xor eax,edx
0x4e6e: mov rdx,rsi
0x4e71: mov rsi,rdi
0x4e74: mov dword ptr [r9],eax
0x4e77: xor edi,edi
0x4e79: call 0x4770
0x4e7e: mov rsi,qword ptr [rsp+0x38]
0x4e83: xor rsi,qword ptr fs:0x28
0x4e8c: jne 0x4e93
0x4e8e: add rsp,0x48
0x4e92: ret 
0x4e93: call 0x1420
0x4e98: nop dword ptr [rax+rax]
0x4ea0: movsx edx,sil
0x4ea4: mov rsi,-0x1
0x4eab: jmp 0x4e00
0x4eb0: mov edx,0x3a
0x4eb5: mov rsi,-0x1
0x4ebc: jmp 0x4e00
0x4ed0: mov edx,0x3a
0x4ed5: jmp 0x4e00
0x4ee0: sub rsp,0x48
0x4ee4: mov rax,rdx
0x4ee7: mov rdx,qword ptr fs:0x28
0x4ef0: mov qword ptr [rsp+0x38],rdx
0x4ef5: xor edx,edx
0x4ef7: cmp esi,0xa
0x4efa: je 0x4f64
0x4efc: mov dword ptr [rsp],esi
0x4eff: mov rcx,rsp
0x4f02: mov rdx,-0x1
0x4f09: mov rsi,rax
0x4f0c: mov qword ptr [rsp+0x4],0x0
0x4f15: mov qword ptr [rsp+0xc],0x4000000
0x4f1e: mov qword ptr [rsp+0x14],0x0
0x4f27: mov qword ptr [rsp+0x1c],0x0
0x4f30: mov qword ptr [rsp+0x24],0x0
0x4f39: mov qword ptr [rsp+0x2c],0x0
0x4f42: mov dword ptr [rsp+0x34],0x0
0x4f4a: call 0x4770
0x4f4f: mov rcx,qword ptr [rsp+0x38]
0x4f54: xor rcx,qword ptr fs:0x28
0x4f5d: jne 0x4f69
0x4f5f: add rsp,0x48
0x4f63: ret 
0x4f64: call 0x1340
0x4f69: call 0x1420
0x4f6e: nop 
0x4f70: sub rsp,0x48
0x4f74: mov r9,rcx
0x4f77: mov rcx,qword ptr [rip+0x207292]
0x4f7e: movdqa xmm0,[rip+0x20725a]
0x4f86: mov rax,qword ptr fs:0x28
0x4f8f: mov qword ptr [rsp+0x38],rax
0x4f94: xor eax,eax
0x4f96: movaps [rsp],xmm0
0x4f9a: test rsi,rsi
0x4f9d: mov qword ptr [rsp+0x30],rcx
0x4fa2: mov dword ptr [rsp],0xa
0x4fa9: movdqa xmm0,[rip+0x20723f]
0x4fb1: movaps [rsp+0x10],xmm0
0x4fb6: movdqa xmm0,[rip+0x207242]
0x4fbe: movaps [rsp+0x20],xmm0
0x4fc3: je 0x4ff7
0x4fc5: test rdx,rdx
0x4fc8: je 0x4ff7
0x4fca: mov qword ptr [rsp+0x28],rsi
0x4fcf: mov qword ptr [rsp+0x30],rdx
0x4fd4: mov rcx,rsp
0x4fd7: mov rdx,r8
0x4fda: mov rsi,r9
0x4fdd: call 0x4770
0x4fe2: mov rdi,qword ptr [rsp+0x38]
0x4fe7: xor rdi,qword ptr fs:0x28
0x4ff0: jne 0x4ffc
0x4ff2: add rsp,0x48
0x4ff6: ret 
0x4ff7: call 0x1340
0x4ffc: call 0x1420
0x5001: nop dword ptr [rax+rax]
0x5006: nop word ptr cs:[rax+rax]
0x5010: mov r8,-0x1
0x5017: jmp 0x4f70
0x5020: mov rcx,rdx
0x5023: mov r8,-0x1
0x502a: mov rdx,rsi
0x502d: mov rsi,rdi
0x5030: xor edi,edi
0x5032: jmp 0x4f70
0x5040: mov r8,rcx
0x5043: mov rcx,rdx
0x5046: mov rdx,rsi
0x5049: mov rsi,rdi
0x504c: xor edi,edi
0x504e: jmp 0x4f70
0x5060: lea rcx,[rip+0x206fb9]
0x5067: jmp 0x4770
0x5070: lea rcx,[rip+0x206fa9]
0x5077: mov rdx,rsi
0x507a: mov rsi,rdi
0x507d: xor edi,edi
0x507f: jmp 0x4770
0x5127: movzx eax,byte ptr [rdi]
0x513d: movzx edx,r8b
0x51e4: cmp r8b,0x30
0x51e8: je 0x52e8
0x51ee: sub r8d,0x30
0x51f2: xor eax,eax
0x51f4: cmp r8d,0x9
0x51f8: setbe al
0x51fb: ret 
0x52e8: add rdi,0x1
0x52ec: movzx r8d,byte ptr [rdi]
0x52f0: jmp 0x51e4
0x53ac: lea r8,[rip+0x3f95]
0x53b3: mov edi,r12d
0x53b6: mov r9,rax
0x53b9: mov ecx,r14d
0x53bc: mov rdx,rbp
0x53bf: mov esi,r13d
0x53c2: xor eax,eax
0x53c4: call 0x1360
0x53c9: mov rdi,rbx
0x53cc: pop rbx
0x53cd: pop rbp
0x53ce: pop r12
0x53d0: pop r13
0x53d2: pop r14
0x53d4: jmp 0x1330
0x53f7: mov rdi,rbx
0x53fa: pop rbx
0x53fb: pop rbp
0x53fc: pop r12
0x53fe: pop r13
0x5400: pop r14
0x5402: jmp 0x1330
0x5430: call 0x1340
0x5435: nop 
0x5436: nop word ptr cs:[rax+rax]
0x5588: mov r8,rcx
0x558b: mov rcx,rdx
0x558e: lea rdx,[rip+0x42ff]
0x5595: mov esi,0x1
0x559a: xor eax,eax
0x559c: call 0x15e0
0x55a1: jmp 0x548c
0x579d: push r12
0x579f: push r15
0x57a1: push r14
0x57a3: mov r8,qword ptr [rsp+0x20]
0x57a8: mov rcx,rbx
0x57ab: mov rdx,rax
0x57ae: mov rdi,rbp
0x57b1: mov esi,0x1
0x57b6: xor eax,eax
0x57b8: call 0x15e0
0x57bd: add rsp,0x20
0x57c1: add rsp,0x28
0x57c5: pop rbx
0x57c6: pop rbp
0x57c7: pop r12
0x57c9: pop r13
0x57cb: pop r14
0x57cd: pop r15
0x57cf: ret 
0x5809: push r12
0x580b: push r15
0x580d: push r14
0x580f: mov r9,qword ptr [rsp+0x28]
0x5814: jmp 0x57a3
0x5870: xor r9d,r9d
0x5873: cmp qword ptr [r8],0x0
0x5877: je 0x588b
0x5879: nop dword ptr [rax]
0x5880: add r9,0x1
0x5884: cmp qword ptr [r8+r9*8],0x0
0x5889: jne 0x5880
0x588b: jmp 0x5450
0x5890: sub rsp,0x68
0x5894: mov r10,r8
0x5897: xor r9d,r9d
0x589a: mov rax,qword ptr fs:0x28
0x58a3: mov qword ptr [rsp+0x58],rax
0x58a8: xor eax,eax
0x58aa: mov r8,rsp
0x58ad: nop dword ptr [rax]
0x58b0: mov eax,dword ptr [r10]
0x58b3: cmp eax,0x2f
0x58b6: ja 0x58fa
0x58b8: mov r11d,eax
0x58bb: add r11,qword ptr [r10+0x10]
0x58bf: add eax,0x8
0x58c2: mov dword ptr [r10],eax
0x58c5: mov rax,qword ptr [r11]
0x58c8: test rax,rax
0x58cb: mov qword ptr [r8+r9*8],rax
0x58cf: je 0x58db
0x58d1: add r9,0x1
0x58d5: cmp r9,0xa
0x58d9: jne 0x58b0
0x58db: call 0x5450
0x58e0: mov rax,qword ptr [rsp+0x58]
0x58e5: xor rax,qword ptr fs:0x28
0x58ee: jne 0x58f5
0x58f0: add rsp,0x68
0x58f4: ret 
0x58f5: call 0x1420
0x58fa: mov r11,qword ptr [r10+0x8]
0x58fe: lea rax,[r11+0x8]
0x5902: mov qword ptr [r10+0x8],rax
0x5906: jmp 0x58c5
0x59d0: call 0x1420
0x59dc: mov rax,rbx
0x59df: add rbx,0x8
0x59e3: jmp 0x5996
0x59f0: push rbx
0x59f1: lea rsi,[rip+0x3eea]
0x59f8: mov edx,0x5
0x59fd: xor edi,edi
0x59ff: call 0x13e0
0x5a04: lea rdx,[rip+0x3eec]
0x5a0b: mov rsi,rax
0x5a0e: mov edi,0x1
0x5a13: xor eax,eax
0x5a15: call 0x1570
0x5a1a: lea rsi,[rip+0x3eec]
0x5a21: mov edx,0x5
0x5a26: xor edi,edi
0x5a28: call 0x13e0
0x5a2d: lea rcx,[rip+0x385c]
0x5a34: lea rdx,[rip+0x2a0b]
0x5a3b: mov rsi,rax
0x5a3e: mov edi,0x1
0x5a43: xor eax,eax
0x5a45: call 0x1570
0x5a4a: mov rbx,qword ptr [rip+0x206637]
0x5a51: lea rsi,[rip+0x40e8]
0x5a58: xor edi,edi
0x5a5a: mov edx,0x5
0x5a5f: call 0x13e0
0x5a64: mov rsi,rbx
0x5a67: mov rdi,rax
0x5a6a: pop rbx
0x5a6b: jmp 0x1490
0x5a8a: nop word ptr [rax+rax]
0x5a90: mov rax,rdi
0x5a93: mul rsi
0x5a96: mov rdi,rax
0x5a99: seto al
0x5a9c: test rdi,rdi
0x5a9f: js 0x5aab
0x5aa1: movzx eax,al
0x5aa4: test rax,rax
0x5aa7: jne 0x5aab
0x5aa9: jmp 0x5a70
0x5aab: sub rsp,0x8
0x5aaf: call 0x5cc0
0x5ab4: nop 
0x5ab6: nop word ptr cs:[rax+rax]
0x5ac0: jmp 0x5a70
0x5b06: nop word ptr cs:[rax+rax]
0x5b10: mov rax,rsi
0x5b13: mul rdx
0x5b16: mov rsi,rax
0x5b19: seto al
0x5b1c: test rsi,rsi
0x5b1f: js 0x5b2b
0x5b21: movzx eax,al
0x5b24: test rax,rax
0x5b27: jne 0x5b2b
0x5b29: jmp 0x5ad0
0x5b2b: sub rsp,0x8
0x5b2f: call 0x5cc0
0x5b34: nop 
0x5b36: nop word ptr cs:[rax+rax]
0x5b40: test rdi,rdi
0x5b43: mov r9,rdx
0x5b46: mov rcx,qword ptr [rsi]
0x5b49: je 0x5b80
0x5b4b: xor edx,edx
0x5b4d: movabsq rax,0x5555555555555554
0x5b57: div r9
0x5b5a: cmp rax,rcx
0x5b5d: jbe 0x5b9b
0x5b5f: mov rax,rcx
0x5b62: shr rax, 1
0x5b65: lea rcx,[rax+rcx+0x1]
0x5b6a: mov qword ptr [rsi],rcx
0x5b6d: imul rcx,r9
0x5b71: mov rsi,rcx
0x5b74: jmp 0x5ad0
0x5b80: test rcx,rcx
0x5b83: je 0x5ba8
0x5b85: mov rax,rcx
0x5b88: mul r9
0x5b8b: seto dl
0x5b8e: test rax,rax
0x5b91: movzx edx,dl
0x5b94: js 0x5b9b
0x5b96: test rdx,rdx
0x5b99: je 0x5b6a
0x5b9b: sub rsp,0x8
0x5b9f: call 0x5cc0
0x5ba4: nop dword ptr [rax]
0x5ba8: xor edx,edx
0x5baa: mov eax,0x80
0x5baf: xor r8d,r8d
0x5bb2: div r9
0x5bb5: test rax,rax
0x5bb8: sete r8b
0x5bbc: lea rcx,[r8+rax]
0x5bc0: jmp 0x5b85
0x5bd0: test rdi,rdi
0x5bd3: mov rax,qword ptr [rsi]
0x5bd6: je 0x5c00
0x5bd8: movabsq rdx,0x5555555555555553
0x5be2: cmp rax,rdx
0x5be5: ja 0x5c11
0x5be7: mov rdx,rax
0x5bea: shr rdx, 1
0x5bed: lea rax,[rdx+rax+0x1]
0x5bf2: mov qword ptr [rsi],rax
0x5bf5: mov rsi,rax
0x5bf8: jmp 0x5ad0
0x5c00: test rax,rax
0x5c03: mov edx,0x80
0x5c08: cmove rax,rdx
0x5c0c: test rax,rax
0x5c0f: jns 0x5bf2
0x5c11: sub rsp,0x8
0x5c15: call 0x5cc0
0x5c1a: nop word ptr [rax+rax]
0x5c20: push rbx
0x5c21: mov rbx,rdi
0x5c24: call 0x5a70
0x5c29: mov rdx,rbx
0x5c2c: xor esi,esi
0x5c2e: mov rdi,rax
0x5c31: pop rbx
0x5c32: jmp 0x1460
0x5c40: mov rax,rdi
0x5c43: sub rsp,0x8
0x5c47: mul rsi
0x5c4a: seto dl
0x5c4d: test rax,rax
0x5c50: js 0x5c69
0x5c52: movzx edx,dl
0x5c55: test rdx,rdx
0x5c58: jne 0x5c69
0x5c5a: call 0x14a0
0x5c5f: test rax,rax
0x5c62: je 0x5c69
0x5c64: add rsp,0x8
0x5c68: ret 
0x5c69: call 0x5cc0
0x5c6e: nop 
0x5c70: push rbp
0x5c71: push rbx
0x5c72: mov rbp,rdi
0x5c75: mov rdi,rsi
0x5c78: mov rbx,rsi
0x5c7b: sub rsp,0x8
0x5c7f: call 0x5a70
0x5c84: add rsp,0x8
0x5c88: mov rdx,rbx
0x5c8b: mov rsi,rbp
0x5c8e: pop rbx
0x5c8f: pop rbp
0x5c90: mov rdi,rax
0x5c93: jmp 0x14d0
0x5ca0: push rbx
0x5ca1: mov rbx,rdi
0x5ca4: call 0x1400
0x5ca9: mov rdi,rbx
0x5cac: lea rsi,[rax+0x1]
0x5cb0: pop rbx
0x5cb1: jmp 0x5c70
0x5cf0: call 0x1340
0x5cf5: nop word ptr cs:[rax+rax]
0x5cff: nop 
0x5e15: call 0x1420
0x5e1a: nop word ptr [rax+rax]
0x5eb6: test eax,eax
0x5eb8: js 0x5ed8
0x5eba: mov rax,qword ptr [rsp]
0x5ed8: call 0x1350
0x5edd: cmp dword ptr [rax],0xc
0x5ee0: je 0x5eef
0x5ee2: xor eax,eax
0x5ee4: jmp 0x5ebe
0x5eea: call 0x1420
0x5eef: call 0x5cc0
0x5ef4: nop word ptr cs:[rax+rax]
0x5efe: nop 
0x5f00: push r13
0x5f02: push r12
0x5f04: mov r13,rsi
0x5f07: push rbp
0x5f08: push rbx
0x5f09: mov rbx,rdi
0x5f0c: mov r12,rdx
0x5f0f: sub rsp,0x18
0x5f13: mov rax,qword ptr fs:0x28
0x5f1c: mov qword ptr [rsp+0x8],rax
0x5f21: xor eax,eax
0x5f23: lea rax,[rsp+0x4]
0x5f28: test rdi,rdi
0x5f2b: cmove rbx,rax
0x5f2f: mov rdi,rbx
0x5f32: call 0x1430
0x5f37: cmp rax,-0x3
0x5f3b: mov rbp,rax
0x5f3e: jbe 0x5f60
0x5f40: test r12,r12
0x5f43: je 0x5f60
0x5f45: xor edi,edi
0x5f47: call 0x6090
0x5f4c: test al,al
0x5f4e: jne 0x5f60
0x5f50: movzx eax,byte ptr [r13]
0x5f55: mov ebp,0x1
0x5f5a: mov dword ptr [rbx],eax
0x5f5c: nop dword ptr [rax]
0x5f60: mov rdx,qword ptr [rsp+0x8]
0x5f65: xor rdx,qword ptr fs:0x28
0x5f6e: mov rax,rbp
0x5f71: jne 0x5f7e
0x5f73: add rsp,0x18
0x5f77: pop rbx
0x5f78: pop rbp
0x5f79: pop r12
0x5f7b: pop r13
0x5f7d: ret 
0x5f7e: call 0x1420
0x5f83: nop word ptr cs:[rax+rax]
0x5f8d: nop dword ptr [rax]
0x5fbb: test rax,rax
0x5fbe: je 0x6002
0x5fc0: mov rdx,qword ptr [rsp]
0x5fc4: cmp rdx,0x7fffffff
0x5fcb: ja 0x5fe8
0x5fcd: mov qword ptr [rbx],rax
0x5fd0: mov eax,edx
0x5fd2: mov rbx,qword ptr [rsp+0x8]
0x5fd7: xor rbx,qword ptr fs:0x28
0x5fe0: jne 0x6009
0x5fe2: add rsp,0x10
0x5fe6: pop rbx
0x5fe7: ret 
0x5fe8: mov rdi,rax
0x5feb: call 0x1330
0x5ff0: call 0x1350
0x5ff5: mov dword ptr [rax],0x4b
0x5ffb: mov eax,0xffffffff
0x6000: jmp 0x5fd2
0x6002: mov eax,0xffffffff
0x6007: jmp 0x5fd2
0x6009: call 0x1420
0x600e: nop 
0x6010: push r12
0x6012: push rbp
0x6013: mov rbp,rdi
0x6016: push rbx
0x6017: call 0x1390
0x601c: mov ebx,dword ptr [rbp]
0x601f: mov rdi,rbp
0x6022: mov r12,rax
0x6025: call 0x6130
0x602a: and ebx,0x20
0x602d: test ebx,ebx
0x602f: jne 0x6048
0x6031: test eax,eax
0x6033: je 0x603f
0x6035: test r12,r12
0x6038: mov eax,0xffffffff
0x603d: je 0x6078
0x603f: pop rbx
0x6040: pop rbp
0x6041: pop r12
0x6043: ret 
0x6048: test eax,eax
0x604a: jne 0x6068
0x604c: call 0x1350
0x6051: mov dword ptr [rax],0x0
0x6057: mov eax,0xffffffff
0x605c: pop rbx
0x605d: pop rbp
0x605e: pop r12
0x6060: ret 
0x6068: pop rbx
0x6069: mov eax,0xffffffff
0x606e: pop rbp
0x606f: pop r12
0x6071: ret 
0x6078: call 0x1350
0x607d: cmp dword ptr [rax],0x9
0x6080: pop rbx
0x6081: pop rbp
0x6082: pop r12
0x6084: setne al
0x6087: movzx eax,al
0x608a: neg eax
0x608c: ret 
0x6090: sub rsp,0x8
0x6094: xor esi,esi
0x6096: call 0x1560
0x609b: mov rdx,rax
0x609e: mov eax,0x1
0x60a3: test rdx,rdx
0x60a6: je 0x60c5
0x60a8: lea rdi,[rip+0x3b51]
0x60af: mov ecx,0x2
0x60b4: mov rsi,rdx
0x60b7: rep cmpsb [rsi],es:[rdi]
0x60b9: seta cl
0x60bc: sbb cl,0x0
0x60bf: xor eax,eax
0x60c1: test cl,cl
0x60c3: jne 0x60d0
0x60c5: add rsp,0x8
0x60c9: ret 
0x60d0: lea rdi,[rip+0x3b2b]
0x60d7: mov ecx,0x6
0x60dc: mov rsi,rdx
0x60df: rep cmpsb [rsi],es:[rdi]
0x60e1: seta al
0x60e4: sbb al,0x0
0x60e6: test al,al
0x60e8: setne al
0x60eb: add rsp,0x8
0x60ef: ret 
0x60f0: sub rsp,0x8
0x60f4: mov edi,0xe
0x60f9: call 0x1520
0x60fe: test rax,rax
0x6101: je 0x6120
0x6103: cmp byte ptr [rax],0x0
0x6106: lea rdx,[rip+0x3afb]
0x610d: cmove rax,rdx
0x6111: add rsp,0x8
0x6115: ret 
0x6120: lea rax,[rip+0x3ae1]
0x6127: add rsp,0x8
0x612b: ret 
0x6130: push r12
0x6132: push rbp
0x6133: push rbx
0x6134: mov rbx,rdi
0x6137: call 0x14e0
0x613c: test eax,eax
0x613e: mov rdi,rbx
0x6141: js 0x6197
0x6143: call 0x1540
0x6148: test eax,eax
0x614a: jne 0x6178
0x614c: mov rdi,rbx
0x614f: call 0x61b0
0x6154: test eax,eax
0x6156: je 0x6194
0x6158: call 0x1350
0x615d: mov r12d,dword ptr [rax]
0x6160: mov rdi,rbx
0x6163: mov rbp,rax
0x6166: call 0x13c0
0x616b: test r12d,r12d
0x616e: jne 0x61a0
0x6170: pop rbx
0x6171: pop rbp
0x6172: pop r12
0x6174: ret 
0x6178: mov rdi,rbx
0x617b: call 0x14e0
0x6180: xor esi,esi
0x6182: mov edx,0x1
0x6187: mov edi,eax
0x6189: call 0x1450
0x618e: cmp rax,-0x1
0x6192: jne 0x614c
0x6194: mov rdi,rbx
0x6197: pop rbx
0x6198: pop rbp
0x6199: pop r12
0x619b: jmp 0x13c0
0x61a0: mov dword ptr [rbp],r12d
0x61a4: mov eax,0xffffffff
0x61a9: jmp 0x6170
0x61b0: test rdi,rdi
0x61b3: push rbx
0x61b4: mov rbx,rdi
0x61b7: je 0x61ca
0x61b9: call 0x1540
0x61be: test eax,eax
0x61c0: je 0x61ca
0x61c2: test dword ptr [rbx],0x100
0x61c8: jne 0x61d8
0x61ca: mov rdi,rbx
0x61cd: pop rbx
0x61ce: jmp 0x1510
0x61d8: mov rdi,rbx
0x61db: mov edx,0x1
0x61e0: xor esi,esi
0x61e2: call 0x61f0
0x61e7: mov rdi,rbx
0x61ea: pop rbx
0x61eb: jmp 0x1510
0x61f0: mov rax,qword ptr [rdi+0x8]
0x61f4: cmp qword ptr [rdi+0x10],rax
0x61f8: je 0x6200
0x61fa: jmp 0x1590
0x6200: mov rax,qword ptr [rdi+0x20]
0x6204: cmp qword ptr [rdi+0x28],rax
0x6208: jne 0x61fa
0x620a: cmp qword ptr [rdi+0x48],0x0
0x620f: jne 0x61fa
0x6211: push r12
0x6213: push rbp
0x6214: mov r12d,edx
0x6217: push rbx
0x6218: mov rbp,rsi
0x621b: mov rbx,rdi
0x621e: call 0x14e0
0x6223: mov edx,r12d
0x6226: mov rsi,rbp
0x6229: mov edi,eax
0x622b: call 0x1450
0x6230: cmp rax,-0x1
0x6234: je 0x6242
0x6236: and dword ptr [rbx],-0x11
0x6239: mov qword ptr [rbx+0x90],rax
0x6240: xor eax,eax
0x6242: pop rbx
0x6243: pop rbp
0x6244: pop r12
0x6246: ret 
0x6517: movzx edx,byte ptr [r13+0x48]
0x651c: mov rax,qword ptr [r13+0x50]
0x6520: cmp dl,0x25
0x6523: je 0x6cb8
0x6529: cmp rax,-0x1
0x652d: je 0x7176
0x6533: mov r8,qword ptr [rbp-0x3a8]
0x653a: shl rax,0x5
0x653e: add rax,r8
0x6541: cmp dl,0x6e
0x6544: mov edi,dword ptr [rax]
0x6546: mov dword ptr [rbp-0x3d0],edi
0x654c: je 0x6d30
0x6552: mov eax,dword ptr [r13+0x10]
0x6556: mov rdi,qword ptr [rbp-0x3d8]
0x655d: test al,0x1
0x655f: mov byte ptr [rdi],0x25
0x6562: lea rbx,[rdi+0x1]
0x6566: je 0x6577
0x6568: mov rdi,qword ptr [rbp-0x3d8]
0x656f: lea rbx,[rdi+0x2]
0x6573: mov byte ptr [rdi+0x1],0x27
0x6577: test al,0x2
0x6579: je 0x6582
0x657b: mov byte ptr [rbx],0x2d
0x657e: add rbx,0x1
0x6582: test al,0x4
0x6584: je 0x658d
0x6586: mov byte ptr [rbx],0x2b
0x6589: add rbx,0x1
0x658d: test al,0x8
0x658f: je 0x6598
0x6591: mov byte ptr [rbx],0x20
0x6594: add rbx,0x1
0x6598: test al,0x10
0x659a: je 0x65a3
0x659c: mov byte ptr [rbx],0x23
0x659f: add rbx,0x1
0x65a3: test al,0x40
0x65a5: je 0x65ae
0x65a7: mov byte ptr [rbx],0x49
0x65aa: add rbx,0x1
0x65ae: test al,0x20
0x65b0: je 0x65b9
0x65b2: mov byte ptr [rbx],0x30
0x65b5: add rbx,0x1
0x65b9: mov rsi,qword ptr [r13+0x18]
0x65bd: mov rdx,qword ptr [r13+0x20]
0x65c1: cmp rsi,rdx
0x65c4: je 0x65f6
0x65c6: mov rcx,rdx
0x65c9: mov rdi,rbx
0x65cc: mov qword ptr [rbp-0x3e0],r8
0x65d3: sub rcx,rsi
0x65d6: mov rdx,rcx
0x65d9: mov qword ptr [rbp-0x3c8],rcx
0x65e0: call 0x14d0
0x65e5: mov rcx,qword ptr [rbp-0x3c8]
0x65ec: mov r8,qword ptr [rbp-0x3e0]
0x65f3: add rbx,rcx
0x65f6: mov rsi,qword ptr [r13+0x30]
0x65fa: mov rdx,qword ptr [r13+0x38]
0x65fe: cmp rsi,rdx
0x6601: je 0x6633
0x6603: mov rcx,rdx
0x6606: mov rdi,rbx
0x6609: mov qword ptr [rbp-0x3e0],r8
0x6610: sub rcx,rsi
0x6613: mov rdx,rcx
0x6616: mov qword ptr [rbp-0x3c8],rcx
0x661d: call 0x14d0
0x6622: mov rcx,qword ptr [rbp-0x3c8]
0x6629: mov r8,qword ptr [rbp-0x3e0]
0x6630: add rbx,rcx
0x6633: mov edi,dword ptr [rbp-0x3d0]
0x6639: cmp edi,0x10
0x663c: ja 0x666b
0x663e: mov eax,0x1
0x6643: mov ecx,edi
0x6645: shl rax,cl
0x6648: test eax,0x14180
0x664d: jne 0x6664
0x664f: test ah,0x10
0x6652: jne 0x6fb0
0x6658: test ah,0x6
0x665b: je 0x666b
0x665d: mov byte ptr [rbx],0x6c
0x6660: add rbx,0x1
0x6664: mov byte ptr [rbx],0x6c
0x6667: add rbx,0x1
0x666b: movzx eax,byte ptr [r13+0x48]
0x6670: mov byte ptr [rbx+0x1],0x0
0x6674: mov byte ptr [rbx],al
0x6676: mov rax,qword ptr [r13+0x28]
0x667a: cmp rax,-0x1
0x667e: je 0x6db0
0x6684: shl rax,0x5
0x6688: add rax,r8
0x668b: cmp dword ptr [rax],0x5
0x668e: jne 0x7176
0x6694: mov eax,dword ptr [rax+0x10]
0x6697: mov dword ptr [rbp-0x3e0],0x1
0x66a1: mov dword ptr [rbp-0x3b8],eax
0x66a7: mov rax,qword ptr [r13+0x40]
0x66ab: cmp rax,-0x1
0x66af: je 0x66dc
0x66b1: shl rax,0x5
0x66b5: add r8,rax
0x66b8: cmp dword ptr [r8],0x5
0x66bc: jne 0x7176
0x66c2: mov eax,dword ptr [rbp-0x3e0]
0x66c8: mov edx,dword ptr [r8+0x10]
0x66cc: mov dword ptr [rbp+rax*4-0x3b8],edx
0x66d3: lea eax,[rax+0x1]
0x66d6: mov dword ptr [rbp-0x3e0],eax
0x66dc: mov rax,r14
0x66df: xor edx,edx
0x66e1: add rax,0x2
0x66e5: jb 0x734c
0x66eb: cmp r12,rax
0x66ee: jae 0x673b
0x66f0: test r12,r12
0x66f3: jne 0x6f18
0x66f9: cmp rax,0xc
0x66fd: ja 0x6f30
0x6703: mov r12d,0xc
0x6709: cmp r15,qword ptr [rbp-0x3e8]
0x6710: sete dl
0x6713: test r15,r15
0x6716: je 0x6f60
0x671c: test dl,dl
0x671e: jne 0x6f60
0x6724: mov rsi,r12
0x6727: mov rdi,r15
0x672a: call 0x1550
0x672f: test rax,rax
0x6732: je 0x63b5
0x6738: mov r15,rax
0x673b: mov byte ptr [r15+r14],0x0
0x6740: call 0x1350
0x6745: mov qword ptr [rbp-0x3c8],rax
0x674c: mov eax,dword ptr [rax]
0x674e: mov qword ptr [rbp-0x3f8],rbx
0x6755: mov dword ptr [rbp-0x424],eax
0x675b: nop dword ptr [rax+rax]
0x6760: mov rax,qword ptr [rbp-0x3c8]
0x6767: mov rbx,r12
0x676a: mov r10d,0x7fffffff
0x6770: sub rbx,r14
0x6773: mov dword ptr [rbp-0x3bc],0xffffffff
0x677d: cmp rbx,0x7fffffff
0x6784: mov dword ptr [rax],0x0
0x678a: mov eax,dword ptr [rbp-0x3d0]
0x6790: cmovbe r10,rbx
0x6794: cmp eax,0x11
0x6797: ja 0x7176
0x679d: lea rsi,[rip+0x346c]
0x67a4: movsxd rax,dword ptr [rsi+rax*4]
0x67a8: add rax,rsi
0x67ab: jmp rax
0x6cb8: cmp rax,-0x1
0x6cbc: jne 0x7176
0x6cc2: mov rax,r14
0x6cc5: add rax,0x1
0x6cc9: mov rbx,rax
0x6ccc: jae 0x6d58
0x6cd2: cmp r12,-0x1
0x6cd6: jne 0x63b5
0x6cdc: mov rbx,r12
0x6cdf: mov byte ptr [r15+r14],0x25
0x6ce4: mov r8,qword ptr [r13+0x8]
0x6ce8: add r13,0x58
0x6cec: mov rcx,qword ptr [r13]
0x6cf0: add qword ptr [rbp-0x400],0x1
0x6cf8: cmp rcx,r8
0x6cfb: jne 0x6399
0x6d30: mov edx,edi
0x6d32: sub edx,0x12
0x6d35: cmp edx,0x4
0x6d38: ja 0x7176
0x6d3e: lea rdi,[rip+0x2f13]
0x6d45: mov rax,qword ptr [rax+0x10]
0x6d49: movsxd rdx,dword ptr [rdi+rdx*4]
0x6d4d: add rdx,rdi
0x6d50: jmp rdx
0x6d58: cmp r12,rax
0x6d5b: jae 0x6cdf
0x6d5d: test r12,r12
0x6d60: jne 0x7130
0x6d66: cmp rax,0xc
0x6d6a: ja 0x7142
0x6d70: mov r12d,0xc
0x6d76: cmp r15,qword ptr [rbp-0x3e8]
0x6d7d: sete dl
0x6d80: test r15,r15
0x6d83: je 0x6ff0
0x6d89: test dl,dl
0x6d8b: jne 0x6ff0
0x6d91: mov rsi,r12
0x6d94: mov rdi,r15
0x6d97: call 0x1550
0x6d9c: test rax,rax
0x6d9f: je 0x6e9b
0x6da5: mov r15,rax
0x6da8: jmp 0x6cdf
0x6db0: mov dword ptr [rbp-0x3e0],0x0
0x6dba: jmp 0x66a7
0x6f18: js 0x63b5
0x6f1e: add r12,r12
0x6f21: cmp r12,rax
0x6f24: jae 0x6709
0x6f2a: nop word ptr [rax+rax]
0x6f30: test rdx,rdx
0x6f33: jne 0x63b5
0x6f39: cmp rax,-0x1
0x6f3d: je 0x63b5
0x6f43: cmp r15,qword ptr [rbp-0x3e8]
0x6f4a: mov r12,rax
0x6f4d: sete dl
0x6f50: test r15,r15
0x6f53: jne 0x671c
0x6f59: nop dword ptr [rax]
0x6f60: mov rdi,r12
0x6f63: mov byte ptr [rbp-0x3c8],dl
0x6f69: call 0x1500
0x6f6e: test rax,rax
0x6f71: mov rcx,rax
0x6f74: movzx edx,byte ptr [rbp-0x3c8]
0x6f7b: je 0x63b5
0x6f81: test r14,r14
0x6f84: je 0x7120
0x6f8a: test dl,dl
0x6f8c: je 0x7120
0x6f92: mov rsi,r15
0x6f95: mov rdx,r14
0x6f98: mov rdi,rax
0x6f9b: call 0x14d0
0x6fa0: mov r15,rax
0x6fa3: jmp 0x673b
0x6fb0: mov byte ptr [rbx],0x4c
0x6fb3: add rbx,0x1
0x6fb7: jmp 0x666b
0x6ff0: mov rdi,r12
0x6ff3: mov byte ptr [rbp-0x3c8],dl
0x6ff9: call 0x1500
0x6ffe: test rax,rax
0x7001: mov rcx,rax
0x7004: movzx edx,byte ptr [rbp-0x3c8]
0x700b: je 0x63b5
0x7011: test r14,r14
0x7014: je 0x7154
0x701a: test dl,dl
0x701c: je 0x7154
0x7022: mov rsi,r15
0x7025: mov rdx,r14
0x7028: mov rdi,rax
0x702b: call 0x14d0
0x7030: mov r15,rax
0x7033: jmp 0x6cdf
0x7120: mov r15,rcx
0x7123: jmp 0x673b
0x7130: js 0x63b5
0x7136: add r12,r12
0x7139: cmp r12,rax
0x713c: jae 0x6d76
0x7142: cmp rax,-0x1
0x7146: je 0x63b5
0x714c: mov r12,rax
0x714f: jmp 0x6d76
0x7154: mov r15,rcx
0x7157: jmp 0x6cdf
0x7176: call 0x1340
0x717b: nop dword ptr [rax+rax]
0x734c: cmp r12,-0x1
0x7350: mov edx,0x1
0x7355: je 0x673b
0x735b: test r12,r12
0x735e: je 0x63b5
0x7364: jns 0x6f30
0x736a: jmp 0x63b5
0x737a: lea r8,[rip+0x28ff]
0x7381: lea r10,[rip+0x2958]
0x7388: lea r9,[rip+0x28dd]
0x738f: xor ecx,ecx
0x7391: nop dword ptr [rax]
0x7398: cmp dword ptr [rax],0x16
0x739b: ja 0x73e0
0x739d: mov edx,dword ptr [rax]
0x739f: movsxd rdx,dword ptr [r8+rdx*4]
0x73a3: add rdx,r8
0x73a6: jmp rdx
0x73e0: mov eax,0xffffffff
0x73e5: ret 
0x797e: mov rdi,rcx
0x7981: call 0x1550
0x7986: mov rdx,qword ptr [r15+0x8]
0x798a: mov r8,qword ptr [rsp+0x30]
0x798f: mov rcx,rax
0x7992: mov r10,qword ptr [rsp+0x38]
0x7997: mov r9,qword ptr [rsp+0x40]
0x8016: mov rdi,rcx
0x8019: call 0x1550
0x801e: mov rdx,qword ptr [r15+0x8]
0x8022: mov r11,qword ptr [rsp+0x30]
0x8027: mov rcx,rax
0x802a: mov r8,qword ptr [rsp+0x38]
0x802f: mov r10,qword ptr [rsp+0x40]
0x8034: mov r9,qword ptr [rsp+0x48]
0x8064: mov rdi,rcx
0x8067: call 0x1330
0x8260: push r15
0x8262: push r14
0x8264: mov r15,rdx
0x8267: push r13
0x8269: push r12
0x826b: lea r12,[rip+0x20395e]
0x8272: push rbp
0x8273: lea rbp,[rip+0x20395e]
0x827a: push rbx
0x827b: mov r13d,edi
0x827e: mov r14,rsi
0x8281: sub rbp,r12
0x8284: sub rsp,0x8
0x8288: sar rbp,0x3
0x828c: call 0x12f0
0x8291: test rbp,rbp
0x8294: je 0x82b6
0x8296: xor ebx,ebx
0x8298: nop dword ptr [rax+rax]
0x82a0: mov rdx,r15
0x82a3: mov rsi,r14
0x82a6: mov edi,r13d
0x82a9: call qword ptr [r12+rbx*8]
0x82ad: add rbx,0x1
0x82b1: cmp rbp,rbx
0x82b4: jne 0x82a0
0x82b6: add rsp,0x8
0x82ba: pop rbx
0x82bb: pop rbp
0x82bc: pop r12
0x82be: pop r13
0x82c0: pop r14
0x82c2: pop r15
0x82c4: ret 
0x82d0: rep ret 
