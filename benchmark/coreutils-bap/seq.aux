0x1576: jmp qword ptr [rip+0x20989c]
0x1580: jmp qword ptr [rip+0x20989a]
0x15d0: jmp qword ptr [rip+0x209872]
0x15f0: jmp qword ptr [rip+0x209862]
0x1620: jmp qword ptr [rip+0x20984a]
0x1690: jmp qword ptr [rip+0x209812]
0x16d0: jmp qword ptr [rip+0x2097f2]
0x16e0: jmp qword ptr [rip+0x2097ea]
0x1710: jmp qword ptr [rip+0x2097d2]
0x1730: jmp qword ptr [rip+0x2097c2]
0x1770: jmp qword ptr [rip+0x2097a2]
0x17a0: jmp qword ptr [rip+0x20978a]
0x17b0: jmp qword ptr [rip+0x209782]
0x17c0: jmp qword ptr [rip+0x20977a]
0x17d0: jmp qword ptr [rip+0x209772]
0x1810: jmp qword ptr [rip+0x209752]
0x1820: jmp qword ptr [rip+0x20974a]
0x1850: jmp qword ptr [rip+0x209732]
0x18a0: jmp qword ptr [rip+0x20970a]
0x18b0: jmp qword ptr [rip+0x209702]
0x18e0: jmp qword ptr [rip+0x20970a]
0x1aa7: nop word ptr [rax+rax]
0x1bb9: jmp 0x1bbd
0x1bbb: fstp st(0)
0x206a: mov ecx,dword ptr [rsp]
0x206d: lea rax,[rip+0x67a2]
0x2074: cmp ecx,0x1
0x2077: cmovne rax,qword ptr [rsp+0x20]
0x207d: mov rdi,rax
0x2080: lea eax,[rcx+r15-0x1]
0x2085: mov rsi,qword ptr [r12+rax*8]
0x2089: call 0x26d0
0x208e: test al,al
0x2090: jne 0x1e05
0x2096: mov r15d,dword ptr [rip+0x208ff3]
0x209d: jmp 0x1b26
0x229e: lea rsi,[rip+0x5e1f]
0x22a5: mov rbx,rax
0x22a8: mov edx,0x5
0x22ad: xor edi,edi
0x22af: call 0x1640
0x22b4: mov rcx,rbx
0x22b7: mov rdx,rax
0x22ba: xor esi,esi
0x22bc: mov edi,0x1
0x22c1: xor eax,eax
0x22c3: call 0x1840
0x230b: lea rdi,[rsp+0x78]
0x2310: lea rsi,[rip+0x5df0]
0x2317: push qword ptr [rsp+0x38]
0x231b: push qword ptr [rsp+0x38]
0x231f: xor eax,eax
0x2321: call 0x5a00
0x2326: pop r10
0x2328: test eax,eax
0x232a: pop r11
0x232c: mov r10,qword ptr [rsp]
0x2330: jns 0x23dd
0x2336: jmp 0x233a
0x2338: fstp st(0)
0x234c: lea rsi,[rip+0x5d60]
0x2353: mov rbx,rax
0x2356: mov edx,0x5
0x235b: xor edi,edi
0x235d: call 0x1640
0x2362: mov rcx,rbx
0x2365: mov rdx,rax
0x2368: xor esi,esi
0x236a: xor edi,edi
0x236c: xor eax,eax
0x236e: call 0x1840
0x2382: fstp tbyte ptr [rsp+0x10]
0x2386: mov qword ptr [rsp],r10
0x238a: lea rdi,[rsp+0x70]
0x238f: lea rsi,[rip+0x5d71]
0x2396: push qword ptr [rsp+0x48]
0x239a: push qword ptr [rsp+0x48]
0x239e: call 0x5a00
0x23a3: pop rbx
0x23a4: pop r13
0x23a6: test eax,eax
0x23a8: mov r10,qword ptr [rsp]
0x23ac: fld tbyte ptr [rsp+0x10]
0x23b0: js 0x2338
0x23b2: mov qword ptr [rsp],r10
0x23b6: fld tbyte ptr [rsp+0x30]
0x23ba: fmul st(1)
0x23bc: fucompi st(1)
0x23be: fstp st(0)
0x23c0: jp 0x23c8
0x23c2: je 0x230b
0x23c8: lea rdi,[rip+0x5bcc]
0x23cf: call 0x58e0
0x23d4: mov r10,qword ptr [rsp]
0x23d8: mov qword ptr [rsp+0x78],rax
0x23dd: mov rdi,qword ptr [rsp+0x70]
0x23e2: cmp byte ptr [rdi],0x2d
0x23e5: je 0x240b
0x23e7: mov rsi,qword ptr [rsp+0x78]
0x23ec: cmp byte ptr [rsi],0x2d
0x23ef: je 0x240b
0x23f1: mov qword ptr [rsp],r10
0x23f5: call 0x26d0
0x23fa: test al,al
0x23fc: jne 0x1e05
0x2402: mov rdi,qword ptr [rsp+0x70]
0x2407: mov r10,qword ptr [rsp]
0x240b: mov qword ptr [rsp],r10
0x240f: call 0x1590
0x2414: mov rdi,qword ptr [rsp+0x78]
0x2419: call 0x1590
0x241e: xor eax,eax
0x2420: xor ecx,ecx
0x2422: xor r9d,r9d
0x2425: mov r10,qword ptr [rsp]
0x2429: jmp 0x213c
0x244f: jmp 0x2373
0x245e: mov edx,0x5
0x2463: mov rbx,rax
0x2466: lea rsi,[rip+0x6383]
0x246d: jmp 0x235b
0x2493: mov edi,0x1
0x2498: call 0x2aa0
0x24a5: lea rsi,[rip+0x62d4]
0x24ac: mov rbx,rax
0x24af: mov edx,0x5
0x24b4: xor edi,edi
0x24b6: call 0x1640
0x24bb: mov rcx,rbx
0x24be: mov rdx,rax
0x24c1: xor esi,esi
0x24c3: mov edi,0x1
0x24c8: xor eax,eax
0x24ca: call 0x1840
0x24d7: lea rsi,[rip+0x627a]
0x24de: mov edx,0x5
0x24e3: xor edi,edi
0x24e5: mov rbx,rax
0x24e8: call 0x1640
0x24ed: mov r8d,dword ptr [rsp+0x10]
0x24f2: mov rdx,rax
0x24f5: mov rcx,rbx
0x24f8: xor esi,esi
0x24fa: mov edi,0x1
0x24ff: xor eax,eax
0x2501: call 0x1840
0x250e: lea rsi,[rip+0x5bd4]
0x2515: mov rbx,rax
0x2518: mov edx,0x5
0x251d: xor edi,edi
0x251f: call 0x1640
0x2524: mov rcx,rbx
0x2527: mov rdx,rax
0x252a: xor esi,esi
0x252c: mov edi,0x1
0x2531: xor eax,eax
0x2533: call 0x1840
0x2538: nop dword ptr [rax+rax]
0x256a: hlt 
0x256b: nop dword ptr [rax+rax]
0x2570: lea rdi,[rip+0x208b09]
0x2577: push rbp
0x2578: lea rax,[rip+0x208b01]
0x257f: cmp rax,rdi
0x2582: mov rbp,rsp
0x2585: je 0x25a0
0x2587: mov rax,qword ptr [rip+0x208a42]
0x258e: test rax,rax
0x2591: je 0x25a0
0x2593: pop rbp
0x2594: jmp rax
0x25a0: pop rbp
0x25a1: ret 
0x25b0: lea rdi,[rip+0x208ac9]
0x25b7: lea rsi,[rip+0x208ac2]
0x25be: push rbp
0x25bf: sub rsi,rdi
0x25c2: mov rbp,rsp
0x25c5: sar rsi,0x3
0x25c9: mov rax,rsi
0x25cc: shr rax,0x3f
0x25d0: add rsi,rax
0x25d3: sar rsi, 1
0x25d6: je 0x25f0
0x25d8: mov rax,qword ptr [rip+0x208a09]
0x25df: test rax,rax
0x25e2: je 0x25f0
0x25e4: pop rbp
0x25e5: jmp rax
0x25f0: pop rbp
0x25f1: ret 
0x2611: push rbp
0x2612: mov rbp,rsp
0x2615: je 0x2623
0x2617: mov rdi,qword ptr [rip+0x2089ea]
0x261e: call 0x18e0
0x2623: call 0x2570
0x2628: mov byte ptr [rip+0x208a99],0x1
0x262f: pop rbp
0x2630: ret 
0x2640: push rbp
0x2641: mov rbp,rsp
0x2644: pop rbp
0x2645: jmp 0x25b0
0x26c9: nop dword ptr [rax]
0x26d0: push r15
0x26d2: push r14
0x26d4: mov r9,rdi
0x26d7: push r13
0x26d9: push r12
0x26db: lea rdi,[rip+0x58b9]
0x26e2: push rbp
0x26e3: push rbx
0x26e4: mov ecx,0x4
0x26e9: mov r8,rsi
0x26ec: mov r13,r9
0x26ef: sub rsp,0x48
0x26f3: rep cmpsb [rsi],es:[rdi]
0x26f5: seta al
0x26f8: sbb al,0x0
0x26fa: cmp byte ptr [r9],0x30
0x26fe: movsx eax,al
0x2701: mov dword ptr [rsp+0x8],eax
0x2705: je 0x2713
0x2707: jmp 0x2731
0x2710: mov r13,rdx
0x2713: movzx eax,byte ptr [r13+0x1]
0x2718: lea rdx,[r13+0x1]
0x271c: cmp al,0x30
0x271e: je 0x2710
0x2720: test al,al
0x2722: jne 0x2902
0x2728: cmp r9,rdx
0x272b: je 0x2902
0x2731: cmp byte ptr [r8],0x30
0x2735: mov rbp,r8
0x2738: je 0x2743
0x273a: jmp 0x2760
0x2740: mov rbp,rdx
0x2743: movzx eax,byte ptr [rbp+0x1]
0x2747: lea rdx,[rbp+0x1]
0x274b: cmp al,0x30
0x274d: je 0x2740
0x274f: cmp r8,rdx
0x2752: je 0x28fa
0x2758: test al,al
0x275a: jne 0x28fa
0x2760: mov rdi,r13
0x2763: mov ebx,0x1f
0x2768: call 0x1660
0x276d: mov edx,dword ptr [rsp+0x8]
0x2771: lea r14,[rax+0x1]
0x2775: mov r15,rax
0x2778: mov qword ptr [rsp],rax
0x277c: cmp r14,0x1f
0x2780: cmovae rbx,r14
0x2784: test edx,edx
0x2786: je 0x2a2e
0x278c: xor eax,eax
0x278e: or rcx,-0x1
0x2792: mov rdi,rbp
0x2795: repne scasb al,es:[rdi]
0x2797: mov rsi,rcx
0x279a: not rsi
0x279d: lea r12,[rsi-0x1]
0x27a1: mov qword ptr [rsp+0x20],rsi
0x27a6: cmp rbx,r12
0x27a9: cmovb rbx,r12
0x27ad: lea rdi,[rbx+0x1]
0x27b1: mov qword ptr [rsp+0x18],rdi
0x27b6: call 0x56b0
0x27bb: mov rsi,rbx
0x27be: sub rsi,qword ptr [rsp]
0x27c2: mov rdx,r14
0x27c5: mov qword ptr [rsp+0x10],rax
0x27ca: mov rdi,rsi
0x27cd: mov rsi,r13
0x27d0: add rdi,rax
0x27d3: call 0x1760
0x27d8: mov rdi,qword ptr [rsp+0x18]
0x27dd: mov r13,rax
0x27e0: mov r14,rax
0x27e3: call 0x56b0
0x27e8: mov rcx,qword ptr [rsp+0x20]
0x27ed: mov rdi,rbx
0x27f0: mov rsi,rbp
0x27f3: sub rdi,r12
0x27f6: mov qword ptr [rsp+0x38],rax
0x27fb: add rdi,rax
0x27fe: mov rdx,rcx
0x2801: call 0x1760
0x2806: cmp qword ptr [rsp],r12
0x280a: mov qword ptr [rsp+0x30],rax
0x280f: jae 0x2a76
0x2815: mov rdi,qword ptr [rsp+0x18]
0x281a: mov eax,0x2000
0x281f: add rdi,rdi
0x2822: cmp rdi,0x2000
0x2829: cmovae rax,rdi
0x282d: mov rdi,rax
0x2830: mov r13,rax
0x2833: mov qword ptr [rsp+0x28],rax
0x2838: call 0x56b0
0x283d: mov rdx,qword ptr [rsp]
0x2841: mov rbp,rax
0x2844: mov rsi,r14
0x2847: mov rdi,rbp
0x284a: lea r13,[rbp+r13]
0x284f: call 0x1810
0x2854: mov rdx,rax
0x2857: mov eax,dword ptr [rsp+0x8]
0x285b: test eax,eax
0x285d: sete byte ptr [rsp]
0x2861: nop dword ptr [rax]
0x2868: cmp r15,r12
0x286b: jb 0x2877
0x286d: cmp byte ptr [rsp],0x0
0x2871: je 0x29b8
0x2877: mov rax,qword ptr [rip+0x208872]
0x287e: lea rcx,[rdx+0x1]
0x2882: movzx eax,byte ptr [rax]
0x2885: mov byte ptr [rdx],al
0x2887: lea rax,[r14+r15-0x1]
0x288c: jmp 0x289d
0x2890: sub rax,0x1
0x2894: mov byte ptr [rax+0x1],0x30
0x2898: cmp rax,r14
0x289b: jb 0x2910
0x289d: movzx edx,byte ptr [rax]
0x28a0: cmp dl,0x38
0x28a3: jg 0x2890
0x28a5: add edx,0x1
0x28a8: cmp rbx,r15
0x28ab: mov byte ptr [rax],dl
0x28ad: je 0x2922
0x28af: mov rdx,r15
0x28b2: mov rsi,r14
0x28b5: mov rdi,rcx
0x28b8: call 0x1810
0x28bd: mov rdx,rax
0x28c0: mov rax,r15
0x28c3: not rax
0x28c6: add rax,r13
0x28c9: cmp rdx,rax
0x28cc: jbe 0x2868
0x28ce: mov rcx,qword ptr [rip+0x2087b3]
0x28d5: mov rsi,rdx
0x28d8: mov rdi,rbp
0x28db: sub rsi,rbp
0x28de: mov edx,0x1
0x28e3: call 0x17d0
0x28e8: cmp rax,0x1
0x28ec: jne 0x2a96
0x28f2: mov rdx,rbp
0x28f5: jmp 0x2868
0x28fa: mov rbp,rdx
0x28fd: jmp 0x2760
0x2902: mov r13,rdx
0x2905: jmp 0x2731
0x2910: add r15,0x1
0x2914: mov byte ptr [r14-0x1],0x31
0x2919: sub r14,0x1
0x291d: cmp rbx,r15
0x2920: jne 0x28af
0x2922: lea r11,[rbx+rbx]
0x2926: mov rdi,qword ptr [rsp+0x10]
0x292b: mov qword ptr [rsp+0x20],rcx
0x2930: lea r10,[r11+0x1]
0x2934: mov qword ptr [rsp+0x18],r11
0x2939: mov rsi,r10
0x293c: mov qword ptr [rsp+0x8],r10
0x2941: call 0x5710
0x2946: lea rdx,[rbx+0x1]
0x294a: lea rdi,[rax+rbx]
0x294e: mov rsi,rax
0x2951: mov qword ptr [rsp+0x10],rax
0x2956: call 0x1820
0x295b: mov r10,qword ptr [rsp+0x8]
0x2960: mov r11,qword ptr [rsp+0x18]
0x2965: mov r14,rax
0x2968: mov rcx,qword ptr [rsp+0x20]
0x296d: add r10,r10
0x2970: cmp r10,qword ptr [rsp+0x28]
0x2975: mov rbx,r11
0x2978: jbe 0x28af
0x297e: sub rcx,rbp
0x2981: mov rsi,r10
0x2984: mov rdi,rbp
0x2987: mov qword ptr [rsp+0x8],rcx
0x298c: mov qword ptr [rsp+0x18],r10
0x2991: call 0x5710
0x2996: mov r10,qword ptr [rsp+0x18]
0x299b: mov rcx,qword ptr [rsp+0x8]
0x29a0: mov rbp,rax
0x29a3: lea r13,[rax+r10]
0x29a7: add rcx,rax
0x29aa: mov qword ptr [rsp+0x28],r10
0x29af: jmp 0x28af
0x29b8: cmp r15,r12
0x29bb: ja 0x29dc
0x29bd: mov rsi,qword ptr [rsp+0x30]
0x29c2: mov rdi,r14
0x29c5: mov qword ptr [rsp+0x8],rdx
0x29ca: call 0x1740
0x29cf: test eax,eax
0x29d1: mov rdx,qword ptr [rsp+0x8]
0x29d6: js 0x2877
0x29dc: mov byte ptr [rdx],0xa
0x29df: lea rsi,[rdx+0x1]
0x29e3: mov rcx,qword ptr [rip+0x20869e]
0x29ea: mov edx,0x1
0x29ef: mov rdi,rbp
0x29f2: sub rsi,rbp
0x29f5: call 0x17d0
0x29fa: sub rax,0x1
0x29fe: jne 0x2a96
0x2a04: mov ebx,0x1
0x2a09: mov rdi,qword ptr [rsp+0x10]
0x2a0e: call 0x1590
0x2a13: mov rdi,qword ptr [rsp+0x38]
0x2a18: call 0x1590
0x2a1d: add rsp,0x48
0x2a21: mov eax,ebx
0x2a23: pop rbx
0x2a24: pop rbp
0x2a25: pop r12
0x2a27: pop r13
0x2a29: pop r14
0x2a2b: pop r15
0x2a2d: ret 
0x2a2e: lea rax,[rbx+0x1]
0x2a32: xor r12d,r12d
0x2a35: mov rdi,rax
0x2a38: mov qword ptr [rsp+0x18],rax
0x2a3d: call 0x56b0
0x2a42: mov rdi,rbx
0x2a45: sub rdi,qword ptr [rsp]
0x2a49: mov rdx,r14
0x2a4c: mov rsi,r13
0x2a4f: mov qword ptr [rsp+0x10],rax
0x2a54: add rdi,rax
0x2a57: call 0x1760
0x2a5c: mov qword ptr [rsp+0x38],0x0
0x2a65: mov r14,rax
0x2a68: mov qword ptr [rsp+0x30],0x0
0x2a71: jmp 0x2815
0x2a76: jbe 0x2a7c
0x2a78: xor ebx,ebx
0x2a7a: jmp 0x2a09
0x2a7c: mov rsi,rax
0x2a7f: mov rdi,r13
0x2a82: call 0x1740
0x2a87: test eax,eax
0x2a89: jle 0x2815
0x2a8f: xor ebx,ebx
0x2a91: jmp 0x2a09
0x2a96: call 0x2690
0x2a9b: nop dword ptr [rax+rax]
0x3155: lea rsi,[rip+0x4eea]
0x315c: xor edi,edi
0x315e: mov rbp,rax
0x3161: call 0x5050
0x3166: lea rsi,[rip+0x4ee6]
0x316d: mov rbx,rax
0x3170: mov edx,0x5
0x3175: xor edi,edi
0x3177: call 0x1640
0x317c: xor edi,edi
0x317e: mov rdx,rax
0x3181: mov r8,rbp
0x3184: mov rcx,rbx
0x3187: xor esi,esi
0x3189: xor eax,eax
0x318b: call 0x1840
0x3190: mov edi,0x1
0x3195: call 0x2aa0
0x31a2: lea rsi,[rip+0x5587]
0x31a9: mov rbx,rax
0x31ac: mov edx,0x5
0x31b1: xor edi,edi
0x31b3: call 0x1640
0x31b8: xor edi,edi
0x31ba: mov rdx,rax
0x31bd: mov rcx,rbx
0x31c0: xor esi,esi
0x31c2: xor eax,eax
0x31c4: call 0x1840
0x31c9: mov edi,0x1
0x31ce: call 0x2aa0
0x31d8: nop dword ptr [rax+rax]
0x325d: mov rax,qword ptr [rsp+0x20]
0x3262: cmp qword ptr [rsp+0x18],rax
0x3267: fld tbyte ptr [rsp]
0x326a: jae 0x3278
0x326c: fstp st(0)
0x326e: mov qword ptr [rsp+0x18],rax
0x3273: jmp 0x3218
0x3278: fstp st(1)
0x327a: mov dword ptr [r12],r13d
0x327e: jmp 0x3218
0x3287: nop word ptr [rax+rax]
0x3290: mov qword ptr [rip+0x207e71],rdi
0x3297: ret 
0x32a0: mov byte ptr [rip+0x207e59],dil
0x32a7: ret 
0x32b0: push rbp
0x32b1: push rbx
0x32b2: sub rsp,0x8
0x32b6: mov rdi,qword ptr [rip+0x207dcb]
0x32bd: call 0x5c90
0x32c2: test eax,eax
0x32c4: je 0x32dc
0x32c6: call 0x15b0
0x32cb: cmp byte ptr [rip+0x207e2e],0x0
0x32d2: mov rbx,rax
0x32d5: je 0x32f3
0x32d7: cmp dword ptr [rax],0x20
0x32da: jne 0x32f3
0x32dc: mov rdi,qword ptr [rip+0x207ddd]
0x32e3: call 0x5c90
0x32e8: test eax,eax
0x32ea: jne 0x3332
0x32ec: add rsp,0x8
0x32f0: pop rbx
0x32f1: pop rbp
0x32f2: ret 
0x32f3: lea rsi,[rip+0x4c95]
0x32fa: xor edi,edi
0x32fc: mov edx,0x5
0x3301: call 0x1640
0x3306: mov rdi,qword ptr [rip+0x207dfb]
0x330d: mov rbp,rax
0x3310: test rdi,rdi
0x3313: je 0x333d
0x3315: call 0x4e70
0x331a: mov esi,dword ptr [rbx]
0x331c: lea rdx,[rip+0x54f5]
0x3323: mov rcx,rax
0x3326: mov r8,rbp
0x3329: xor edi,edi
0x332b: xor eax,eax
0x332d: call 0x1840
0x3332: mov edi,dword ptr [rip+0x207ce0]
0x3338: call 0x15d0
0x333d: mov esi,dword ptr [rbx]
0x333f: lea rdx,[rip+0x54d6]
0x3346: mov rcx,rax
0x3349: xor edi,edi
0x334b: xor eax,eax
0x334d: call 0x1840
0x3352: jmp 0x3332
0x33ff: nop 
0x3400: push rbp
0x3401: push rbx
0x3402: mov rbp,rdi
0x3405: mov ebx,esi
0x3407: sub rsp,0x8
0x340b: call 0x5d70
0x3410: movzx edx,byte ptr [rax]
0x3413: and edx,-0x21
0x3416: cmp dl,0x55
0x3419: je 0x3490
0x341b: cmp dl,0x47
0x341e: je 0x3440
0x3420: lea rax,[rip+0x544c]
0x3427: lea rdx,[rip+0x4cb9]
0x342e: cmp ebx,0x9
0x3431: cmovne rax,rdx
0x3435: add rsp,0x8
0x3439: pop rbx
0x343a: pop rbp
0x343b: ret 
0x3440: movzx edx,byte ptr [rax+0x1]
0x3444: and edx,-0x21
0x3447: cmp dl,0x42
0x344a: jne 0x3420
0x344c: cmp byte ptr [rax+0x2],0x31
0x3450: jne 0x3420
0x3452: cmp byte ptr [rax+0x3],0x38
0x3456: jne 0x3420
0x3458: cmp byte ptr [rax+0x4],0x30
0x345c: jne 0x3420
0x345e: cmp byte ptr [rax+0x5],0x33
0x3462: jne 0x3420
0x3464: cmp byte ptr [rax+0x6],0x30
0x3468: jne 0x3420
0x346a: cmp byte ptr [rax+0x7],0x0
0x346e: jne 0x3420
0x3470: cmp byte ptr [rbp],0x60
0x3474: lea rax,[rip+0x53f1]
0x347b: lea rdx,[rip+0x53ee]
0x3482: cmovne rax,rdx
0x3486: add rsp,0x8
0x348a: pop rbx
0x348b: pop rbp
0x348c: ret 
0x3490: movzx edx,byte ptr [rax+0x1]
0x3494: and edx,-0x21
0x3497: cmp dl,0x54
0x349a: jne 0x3420
0x349c: movzx edx,byte ptr [rax+0x2]
0x34a0: and edx,-0x21
0x34a3: cmp dl,0x46
0x34a6: jne 0x3420
0x34ac: cmp byte ptr [rax+0x3],0x2d
0x34b0: jne 0x3420
0x34b6: cmp byte ptr [rax+0x4],0x38
0x34ba: jne 0x3420
0x34c0: cmp byte ptr [rax+0x5],0x0
0x34c4: jne 0x3420
0x34ca: cmp byte ptr [rbp],0x60
0x34ce: lea rax,[rip+0x538f]
0x34d5: lea rdx,[rip+0x538c]
0x34dc: cmovne rax,rdx
0x34e0: add rsp,0x8
0x34e4: pop rbx
0x34e5: pop rbp
0x34e6: ret 
0x35c3: xor r11d,r11d
0x35c6: mov rax,rbp
0x35c9: mov r8d,r12d
0x35cc: mov rbp,r11
0x35cf: mov r11,rax
0x35d2: nop word ptr [rax+rax]
0x35d8: cmp r11,rbp
0x35db: setne r12b
0x35df: cmp r11,-0x1
0x35e3: jne 0x35f2
0x35e5: mov rax,qword ptr [rsp+0x10]
0x35ea: cmp byte ptr [rax+rbp],0x0
0x35ee: setne r12b
0x35f2: test r12b,r12b
0x35f5: je 0x3c50
0x35fb: cmp dword ptr [rsp+0x8],0x2
0x3600: mov rdi,qword ptr [rsp+0x10]
0x3605: lea r9,[rdi+rbp]
0x3609: setne al
0x360c: and al,byte ptr [rsp+0xd]
0x3610: mov r10d,eax
0x3613: je 0x36c0
0x3619: mov rax,qword ptr [rsp+0x18]
0x361e: test rax,rax
0x3621: je 0x3a50
0x3627: cmp r11,-0x1
0x362b: lea rbx,[rbp+rax]
0x3630: jne 0x3660
0x3632: cmp rax,0x1
0x3636: jbe 0x3660
0x3638: mov byte ptr [rsp+0x38],r8b
0x363d: mov byte ptr [rsp+0x30],r10b
0x3642: mov qword ptr [rsp+0x28],r9
0x3647: call 0x1660
0x364c: movzx r8d,byte ptr [rsp+0x38]
0x3652: movzx r10d,byte ptr [rsp+0x30]
0x3658: mov r11,rax
0x365b: mov r9,qword ptr [rsp+0x28]
0x3660: cmp rbx,r11
0x3663: mov byte ptr [rsp+0x28],r10b
0x3668: ja 0x3c20
0x366e: mov rdx,qword ptr [rsp+0x18]
0x3673: mov rsi,qword ptr [rsp+0x48]
0x3678: mov rdi,r9
0x367b: mov qword ptr [rsp+0x40],r11
0x3680: mov byte ptr [rsp+0x38],r8b
0x3685: mov qword ptr [rsp+0x30],r9
0x368a: call 0x1710
0x368f: test eax,eax
0x3691: mov r9,qword ptr [rsp+0x30]
0x3696: movzx r8d,byte ptr [rsp+0x38]
0x369c: mov r11,qword ptr [rsp+0x40]
0x36a1: jne 0x3c20
0x36a7: cmp byte ptr [rsp+0xf],0x0
0x36ac: movzx r10d,byte ptr [rsp+0x28]
0x36b2: jne 0x4635
0x36b8: nop dword ptr [rax+rax]
0x36c0: movzx ebx,byte ptr [r9]
0x36c4: cmp bl,0x7e
0x36c7: ja 0x39e8
0x36cd: lea rcx,[rip+0x5238]
0x36d4: movzx edx,bl
0x36d7: movsxd rax,dword ptr [rcx+rdx*4]
0x36db: add rax,rcx
0x36de: jmp rax
0x3718: cmp byte ptr [rsp+0xd],0x1
0x371d: jne 0x3832
0x3723: test dl,dl
0x3725: jne 0x3832
0x372b: mov rsi,qword ptr [rsp+0x20]
0x3730: test rsi,rsi
0x3733: je 0x3749
0x3735: mov edx,ebx
0x3737: shr dl,0x5
0x373a: movzx edx,dl
0x373d: mov edx,dword ptr [rsi+rdx*4]
0x3740: btl edx,ebx
0x3743: jb 0x3893
0x3749: test r10b,r10b
0x374c: jne 0x3893
0x3752: xor eax,0x1
0x3755: add rbp,0x1
0x3759: and eax,r8d
0x375c: test al,al
0x375e: je 0x3780
0x3760: cmp r13,r15
0x3763: jbe 0x376a
0x3765: mov byte ptr [r14+r15],0x27
0x376a: lea rax,[r15+0x1]
0x376e: cmp r13,rax
0x3771: jbe 0x3779
0x3773: mov byte ptr [r14+r15+0x1],0x27
0x3779: add r15,0x2
0x377d: xor r8d,r8d
0x3780: cmp r15,r13
0x3783: jae 0x3789
0x3785: mov byte ptr [r14+r15],bl
0x3789: movzx edi,byte ptr [rsp+0xe]
0x378e: add r15,0x1
0x3792: mov eax,0x0
0x3797: test r12b,r12b
0x379a: cmove edi,eax
0x379d: mov byte ptr [rsp+0xe],dil
0x37a2: jmp 0x35d8
0x3832: cmp byte ptr [rsp+0xf],0x0
0x3837: jne 0x372b
0x383d: jmp 0x3749
0x3893: cmp dword ptr [rsp+0x8],0x2
0x3898: sete dl
0x389b: cmp byte ptr [rsp+0xf],0x0
0x38a0: mov eax,edx
0x38a2: jne 0x40f8
0x38a8: mov eax,r8d
0x38ab: xor eax,0x1
0x38ae: and al,dl
0x38b0: je 0x38e1
0x38b2: cmp r13,r15
0x38b5: jbe 0x38bc
0x38b7: mov byte ptr [r14+r15],0x27
0x38bc: lea rdx,[r15+0x1]
0x38c0: cmp r13,rdx
0x38c3: jbe 0x38cb
0x38c5: mov byte ptr [r14+r15+0x1],0x24
0x38cb: lea rdx,[r15+0x2]
0x38cf: cmp r13,rdx
0x38d2: jbe 0x38da
0x38d4: mov byte ptr [r14+r15+0x2],0x27
0x38da: add r15,0x3
0x38de: mov r8d,eax
0x38e1: cmp r13,r15
0x38e4: jbe 0x38eb
0x38e6: mov byte ptr [r14+r15],0x5c
0x38eb: add r15,0x1
0x38ef: add rbp,0x1
0x38f3: jmp 0x3780
0x39e0: xor r10d,r10d
0x39e3: nop dword ptr [rax+rax]
0x39e8: cmp qword ptr [rsp+0x58],0x1
0x39ee: jne 0x3d98
0x39f4: mov qword ptr [rsp+0x38],r11
0x39f9: mov byte ptr [rsp+0x30],r8b
0x39fe: mov byte ptr [rsp+0x28],r10b
0x3a03: call 0x18c0
0x3a08: mov rcx,qword ptr [rax]
0x3a0b: movzx edx,bl
0x3a0e: movzx r10d,byte ptr [rsp+0x28]
0x3a14: movzx r8d,byte ptr [rsp+0x30]
0x3a1a: mov r11,qword ptr [rsp+0x38]
0x3a1f: mov edi,0x1
0x3a24: movzx eax,word ptr [rcx+rdx*2]
0x3a28: and ax,0x4000
0x3a2c: setne r12b
0x3a30: sete al
0x3a33: and al,byte ptr [rsp+0xd]
0x3a37: test al,al
0x3a39: jne 0x43d1
0x3a3f: cmp dword ptr [rsp+0x8],0x2
0x3a44: sete dl
0x3a47: jmp 0x3718
0x3a50: movzx ebx,byte ptr [r9]
0x3a54: cmp bl,0x7e
0x3a57: ja 0x39e0
0x3a59: lea rcx,[rip+0x50a8]
0x3a60: movzx edx,bl
0x3a63: movsxd rax,dword ptr [rcx+rdx*4]
0x3a67: add rax,rcx
0x3a6a: jmp rax
0x3c20: xor r10d,r10d
0x3c23: jmp 0x36c0
0x3c50: cmp dword ptr [rsp+0x8],0x2
0x3c55: movzx ebx,byte ptr [rsp+0xf]
0x3c5a: mov r12d,r8d
0x3c5d: mov rbp,r11
0x3c60: sete dl
0x3c63: mov eax,ebx
0x3c65: test r15,r15
0x3c68: sete cl
0x3c6b: and eax,edx
0x3c6d: and al,cl
0x3c6f: jne 0x46d6
0x3c75: mov eax,ebx
0x3c77: xor eax,0x1
0x3c7a: and dl,al
0x3c7c: je 0x45ec
0x3c82: cmp byte ptr [rsp+0x7c],0x0
0x3c87: je 0x45ea
0x3c8d: cmp byte ptr [rsp+0xe],0x0
0x3c92: jne 0x468d
0x3c98: test r13,r13
0x3c9b: sete al
0x3c9e: cmp qword ptr [rsp+0x50],0x0
0x3ca4: setne dl
0x3ca7: and al,dl
0x3ca9: je 0x46cc
0x3caf: mov r13,qword ptr [rsp+0x50]
0x3cb4: lea rbx,[rip+0x442c]
0x3cbb: mov byte ptr [r14],0x27
0x3cbf: mov dword ptr [rsp+0x8],0x2
0x3cc7: mov r15d,0x1
0x3ccd: mov qword ptr [rsp+0x18],0x1
0x3cd6: mov byte ptr [rsp+0xf],0x0
0x3cdb: mov qword ptr [rsp+0x48],rbx
0x3ce0: mov byte ptr [rsp+0x7c],al
0x3ce4: jmp 0x35c3
0x3d98: lea rax,[rsp+0xa0]
0x3da0: cmp r11,-0x1
0x3da4: mov qword ptr [rsp+0xa0],0x0
0x3db0: mov qword ptr [rsp+0x28],rax
0x3db5: jne 0x3de4
0x3db7: mov rdi,qword ptr [rsp+0x10]
0x3dbc: mov byte ptr [rsp+0x40],r8b
0x3dc1: mov byte ptr [rsp+0x38],r10b
0x3dc6: mov qword ptr [rsp+0x30],r9
0x3dcb: call 0x1660
0x3dd0: movzx r8d,byte ptr [rsp+0x40]
0x3dd6: movzx r10d,byte ptr [rsp+0x38]
0x3ddc: mov r11,rax
0x3ddf: mov r9,qword ptr [rsp+0x30]
0x3de4: lea rax,[rsp+0x9c]
0x3dec: xor ecx,ecx
0x3dee: mov byte ptr [rsp+0x7e],bl
0x3df2: mov byte ptr [rsp+0x7d],r8b
0x3df7: mov rbx,rcx
0x3dfa: mov qword ptr [rsp+0x88],r9
0x3e02: mov qword ptr [rsp+0x38],rax
0x3e07: mov byte ptr [rsp+0x7f],r10b
0x3e0c: mov qword ptr [rsp+0x80],r15
0x3e14: mov qword ptr [rsp+0x40],r14
0x3e19: mov qword ptr [rsp+0x70],r13
0x3e1e: mov qword ptr [rsp+0x30],r11
0x3e23: mov rax,qword ptr [rsp+0x10]
0x3e28: lea r14,[rbp+rbx]
0x3e2d: mov rdx,qword ptr [rsp+0x30]
0x3e32: mov rcx,qword ptr [rsp+0x28]
0x3e37: mov rdi,qword ptr [rsp+0x38]
0x3e3c: lea r13,[rax+r14]
0x3e40: sub rdx,r14
0x3e43: mov rsi,r13
0x3e46: call 0x5ac0
0x3e4b: test rax,rax
0x3e4e: mov r15,rax
0x3e51: je 0x3ea1
0x3e53: cmp rax,-0x1
0x3e57: je 0x4475
0x3e5d: cmp rax,-0x2
0x3e61: je 0x4401
0x3e67: cmp dword ptr [rsp+0x8],0x2
0x3e6c: sete al
0x3e6f: and al,byte ptr [rsp+0xf]
0x3e73: jne 0x4010
0x3e79: mov edi,dword ptr [rsp+0x9c]
0x3e80: call 0x18b0
0x3e85: mov rdi,qword ptr [rsp+0x28]
0x3e8a: test eax,eax
0x3e8c: mov eax,0x0
0x3e91: cmove r12d,eax
0x3e95: add rbx,r15
0x3e98: call 0x18a0
0x3e9d: test eax,eax
0x3e9f: je 0x3e23
0x3ea1: mov edx,r12d
0x3ea4: mov rdi,rbx
0x3ea7: movzx r8d,byte ptr [rsp+0x7d]
0x3ead: xor edx,0x1
0x3eb0: movzx ebx,byte ptr [rsp+0x7e]
0x3eb5: movzx r10d,byte ptr [rsp+0x7f]
0x3ebb: and dl,byte ptr [rsp+0xd]
0x3ebf: mov r15,qword ptr [rsp+0x80]
0x3ec7: mov r14,qword ptr [rsp+0x40]
0x3ecc: mov r13,qword ptr [rsp+0x70]
0x3ed1: mov r11,qword ptr [rsp+0x30]
0x3ed6: cmp rdi,0x1
0x3eda: jbe 0x44db
0x3ee0: mov rcx,rdi
0x3ee3: xor esi,esi
0x3ee5: movzx r9d,byte ptr [rsp+0xf]
0x3eeb: add rcx,rbp
0x3eee: mov rdi,qword ptr [rsp+0x10]
0x3ef3: jmp 0x3fae
0x3f00: cmp dword ptr [rsp+0x8],0x2
0x3f05: sete al
0x3f08: test r9b,r9b
0x3f0b: jne 0x43c0
0x3f11: mov esi,r8d
0x3f14: xor esi,0x1
0x3f17: and al,sil
0x3f1a: je 0x3f4b
0x3f1c: cmp r13,r15
0x3f1f: jbe 0x3f26
0x3f21: mov byte ptr [r14+r15],0x27
0x3f26: lea rsi,[r15+0x1]
0x3f2a: cmp r13,rsi
0x3f2d: jbe 0x3f35
0x3f2f: mov byte ptr [r14+r15+0x1],0x24
0x3f35: lea rsi,[r15+0x2]
0x3f39: cmp r13,rsi
0x3f3c: jbe 0x3f44
0x3f3e: mov byte ptr [r14+r15+0x2],0x27
0x3f44: add r15,0x3
0x3f48: mov r8d,eax
0x3f4b: cmp r13,r15
0x3f4e: jbe 0x3f55
0x3f50: mov byte ptr [r14+r15],0x5c
0x3f55: lea rax,[r15+0x1]
0x3f59: cmp r13,rax
0x3f5c: jbe 0x3f6b
0x3f5e: mov eax,ebx
0x3f60: shr al,0x6
0x3f63: add eax,0x30
0x3f66: mov byte ptr [r14+r15+0x1],al
0x3f6b: lea rax,[r15+0x2]
0x3f6f: cmp r13,rax
0x3f72: jbe 0x3f84
0x3f74: mov eax,ebx
0x3f76: shr al,0x3
0x3f79: and eax,0x7
0x3f7c: add eax,0x30
0x3f7f: mov byte ptr [r14+r15+0x2],al
0x3f84: and ebx,0x7
0x3f87: add rbp,0x1
0x3f8b: add r15,0x3
0x3f8f: add ebx,0x30
0x3f92: cmp rbp,rcx
0x3f95: jae 0x3780
0x3f9b: mov esi,edx
0x3f9d: cmp r13,r15
0x3fa0: jbe 0x3fa6
0x3fa2: mov byte ptr [r14+r15],bl
0x3fa6: movzx ebx,byte ptr [rdi+rbp]
0x3faa: add r15,0x1
0x3fae: test dl,dl
0x3fb0: jne 0x3f00
0x3fb6: mov eax,esi
0x3fb8: xor eax,0x1
0x3fbb: and eax,r8d
0x3fbe: test r10b,r10b
0x3fc1: je 0x3fd1
0x3fc3: cmp r13,r15
0x3fc6: jbe 0x3fcd
0x3fc8: mov byte ptr [r14+r15],0x5c
0x3fcd: add r15,0x1
0x3fd1: add rbp,0x1
0x3fd5: cmp rbp,rcx
0x3fd8: jae 0x375c
0x3fde: test al,al
0x3fe0: je 0x43de
0x3fe6: cmp r13,r15
0x3fe9: jbe 0x3ff0
0x3feb: mov byte ptr [r14+r15],0x27
0x3ff0: lea rax,[r15+0x1]
0x3ff4: cmp r13,rax
0x3ff7: jbe 0x3fff
0x3ff9: mov byte ptr [r14+r15+0x1],0x27
0x3fff: add r15,0x2
0x4003: xor r10d,r10d
0x4006: xor r8d,r8d
0x4009: jmp 0x3f9d
0x4010: cmp r15,0x1
0x4014: je 0x3e79
0x401a: mov rdi,qword ptr [rsp+0x10]
0x401f: lea rcx,[rdi+r15]
0x4023: lea rdx,[rdi+r14+0x1]
0x4028: lea r8,[rcx+r14]
0x402c: jmp 0x403d
0x4030: add rdx,0x1
0x4034: cmp r8,rdx
0x4037: je 0x3e79
0x403d: movzx ecx,byte ptr [rdx]
0x4040: sub ecx,0x5b
0x4043: cmp cl,0x21
0x4046: ja 0x4030
0x4048: mov esi,0x1
0x404d: shl rsi,cl
0x4050: mov rcx,rsi
0x4053: movabsq rsi,0x20000002b
0x405d: test rcx,rsi
0x4060: je 0x4030
0x4062: mov r14,qword ptr [rsp+0x40]
0x4067: mov r13,qword ptr [rsp+0x70]
0x406c: mov rbp,qword ptr [rsp+0x30]
0x4071: mov dword ptr [rsp+0x8],0x2
0x4079: cmp byte ptr [rsp+0xd],0x0
0x407e: je 0x4090
0x4080: test al,al
0x4082: mov eax,0x4
0x4087: cmove eax,dword ptr [rsp+0x8]
0x408c: mov dword ptr [rsp+0x8],eax
0x4090: sub rsp,0x8
0x4094: mov rcx,rbp
0x4097: mov rsi,r13
0x409a: push qword ptr [rsp+0x68]
0x409e: push qword ptr [rsp+0x78]
0x40a2: mov rdi,r14
0x40a5: push 0x0
0x40a7: mov r9d,dword ptr [rsp+0x98]
0x40af: mov r8d,dword ptr [rsp+0x28]
0x40b4: mov rdx,qword ptr [rsp+0x30]
0x40b9: and r9d,-0x3
0x40bd: call 0x34f0
0x40c2: add rsp,0x20
0x40c6: mov r15,rax
0x40c9: mov rbx,qword ptr [rsp+0xa8]
0x40d1: xor rbx,qword ptr fs:0x28
0x40da: mov rax,r15
0x40dd: jne 0x46e3
0x40e3: add rsp,0xb8
0x40ea: pop rbx
0x40eb: pop rbp
0x40ec: pop r12
0x40ee: pop r13
0x40f0: pop r14
0x40f2: pop r15
0x40f4: ret 
0x40f8: mov rbp,r11
0x40fb: jmp 0x4079
0x4161: test r13,r13
0x4164: jne 0x46fa
0x416a: lea rax,[rip+0x3f76]
0x4171: mov qword ptr [rsp+0x50],0x0
0x417a: mov byte ptr [rsp+0xe],0x1
0x417f: mov byte ptr [rsp+0x7c],0x0
0x4184: xor r12d,r12d
0x4187: mov byte ptr [rsp+0xf],0x0
0x418c: mov qword ptr [rsp+0x18],0x1
0x4195: mov qword ptr [rsp+0x48],rax
0x419a: mov r15d,0x1
0x41a0: mov dword ptr [rsp+0x8],0x2
0x41a8: jmp 0x35c3
0x43c0: movzx ebx,byte ptr [rsp+0xf]
0x43c5: mov rbp,r11
0x43c8: mov byte ptr [rsp+0xd],bl
0x43cc: jmp 0x4079
0x43d1: movzx edx,byte ptr [rsp+0xd]
0x43d6: xor r12d,r12d
0x43d9: jmp 0x3ee0
0x43de: xor r10d,r10d
0x43e1: jmp 0x3f9d
0x4401: mov r11,qword ptr [rsp+0x30]
0x4406: mov rsi,r14
0x4409: mov rcx,r13
0x440c: mov rax,rbx
0x440f: mov rdi,rbx
0x4412: movzx r8d,byte ptr [rsp+0x7d]
0x4418: movzx ebx,byte ptr [rsp+0x7e]
0x441d: mov r9,qword ptr [rsp+0x88]
0x4425: cmp rsi,r11
0x4428: movzx r10d,byte ptr [rsp+0x7f]
0x442e: mov r15,qword ptr [rsp+0x80]
0x4436: mov r14,qword ptr [rsp+0x40]
0x443b: mov r13,qword ptr [rsp+0x70]
0x4440: jae 0x4468
0x4442: cmp byte ptr [rcx],0x0
0x4445: jne 0x4457
0x4447: jmp 0x4468
0x4450: cmp byte ptr [r9+rax],0x0
0x4455: je 0x4465
0x4457: add rax,0x1
0x445b: lea rdx,[rbp+rax]
0x4460: cmp r11,rdx
0x4463: ja 0x4450
0x4465: mov rdi,rax
0x4468: movzx edx,byte ptr [rsp+0xd]
0x446d: xor r12d,r12d
0x4470: jmp 0x3ed6
0x4475: mov rdi,rbx
0x4478: movzx r8d,byte ptr [rsp+0x7d]
0x447e: movzx ebx,byte ptr [rsp+0x7e]
0x4483: movzx r10d,byte ptr [rsp+0x7f]
0x4489: mov r15,qword ptr [rsp+0x80]
0x4491: xor r12d,r12d
0x4494: mov r14,qword ptr [rsp+0x40]
0x4499: mov r13,qword ptr [rsp+0x70]
0x449e: mov r11,qword ptr [rsp+0x30]
0x44a3: movzx edx,byte ptr [rsp+0xd]
0x44a8: jmp 0x3ed6
0x44db: mov eax,edx
0x44dd: jmp 0x3a37
0x45ea: mov eax,edx
0x45ec: mov rbx,qword ptr [rsp+0x48]
0x45f1: test rbx,rbx
0x45f4: je 0x4622
0x45f6: test al,al
0x45f8: je 0x4622
0x45fa: movzx ecx,byte ptr [rbx]
0x45fd: mov rax,rbx
0x4600: test cl,cl
0x4602: je 0x4622
0x4604: mov rdx,r15
0x4607: sub rax,r15
0x460a: cmp r13,rdx
0x460d: jbe 0x4613
0x460f: mov byte ptr [r14+rdx],cl
0x4613: add rdx,0x1
0x4617: movzx ecx,byte ptr [rax+rdx]
0x461b: test cl,cl
0x461d: jne 0x460a
0x461f: mov r15,rdx
0x4622: cmp r13,r15
0x4625: jbe 0x40c9
0x462b: mov byte ptr [r14+r15],0x0
0x4630: jmp 0x40c9
0x4635: cmp dword ptr [rsp+0x8],0x2
0x463a: movzx ebx,byte ptr [rsp+0xf]
0x463f: mov rbp,r11
0x4642: sete al
0x4645: mov byte ptr [rsp+0xd],bl
0x4649: jmp 0x4079
0x468d: sub rsp,0x8
0x4691: mov r8d,0x5
0x4697: mov rcx,r11
0x469a: push qword ptr [rsp+0x68]
0x469e: push qword ptr [rsp+0x78]
0x46a2: mov rdi,r14
0x46a5: push qword ptr [rsp+0x38]
0x46a9: mov r9d,dword ptr [rsp+0x98]
0x46b1: mov rdx,qword ptr [rsp+0x30]
0x46b6: mov rsi,qword ptr [rsp+0x70]
0x46bb: call 0x34f0
0x46c0: add rsp,0x20
0x46c4: mov r15,rax
0x46c7: jmp 0x40c9
0x46cc: movzx eax,byte ptr [rsp+0x7c]
0x46d1: jmp 0x45ec
0x46d6: mov dword ptr [rsp+0x8],0x2
0x46de: jmp 0x4079
0x46e3: call 0x1670
0x46e8: mov byte ptr [rsp+0xd],0x0
0x46ed: jmp 0x4161
0x46fa: mov byte ptr [rsp+0xe],0x1
0x46ff: xor eax,eax
0x4701: xor r12d,r12d
0x4704: mov qword ptr [rsp+0x50],0x0
0x470d: jmp 0x3cb4
0x4724: nop 
0x4726: nop word ptr cs:[rax+rax]
0x47a3: mov rbx,rax
0x47a6: mov qword ptr [rip+0x2068b3],rax
0x47ad: movsxd rdi,dword ptr [rip+0x2068a4]
0x47b4: mov edx,r12d
0x47b7: xor esi,esi
0x47b9: sub edx,edi
0x47bb: shl rdi,0x4
0x47bf: movsxd rdx,edx
0x47c2: add rdi,rbx
0x47c5: shl rdx,0x4
0x47c9: call 0x16e0
0x47ce: mov dword ptr [rip+0x206883],r12d
0x481c: add rsp,0x20
0x4820: mov r11,qword ptr [rsp+0x10]
0x4825: cmp r11,rax
0x4828: ja 0x4891
0x482a: lea rsi,[rax+0x1]
0x482e: lea rax,[rip+0x2068eb]
0x4835: cmp r12,rax
0x4838: mov qword ptr [rbx],rsi
0x483b: je 0x484f
0x483d: mov rdi,r12
0x4840: mov qword ptr [rsp+0x10],rsi
0x4845: call 0x1590
0x484a: mov rsi,qword ptr [rsp+0x10]
0x484f: mov rdi,rsi
0x4852: mov qword ptr [rsp+0x10],rsi
0x4857: call 0x56b0
0x485c: sub rsp,0x8
0x4860: mov qword ptr [rbx+0x8],rax
0x4864: mov r8d,dword ptr [rbp]
0x4868: push qword ptr [rbp+0x30]
0x486b: push qword ptr [rbp+0x28]
0x486e: mov rcx,r14
0x4871: push r15
0x4873: mov r9d,dword ptr [rsp+0x3c]
0x4878: mov rdi,rax
0x487b: mov rdx,qword ptr [rsp+0x28]
0x4880: mov rsi,qword ptr [rsp+0x30]
0x4885: mov r12,rax
0x4888: call 0x34f0
0x488d: add rsp,0x20
0x4891: mov eax,dword ptr [rsp+0x18]
0x4895: mov dword ptr [r13],eax
0x4899: add rsp,0x28
0x489d: mov rax,r12
0x48a0: pop rbx
0x48a1: pop rbp
0x48a2: pop r12
0x48a4: pop r13
0x48a6: pop r14
0x48a8: pop r15
0x48aa: ret 
0x48b7: movdqa xmm0,xmmword ptr [rip+0x2067b1]
0x48bf: mov rbx,rax
0x48c2: mov qword ptr [rip+0x206797],rax
0x48c9: movups xmmword ptr [rax],xmm0
0x48cc: jmp 0x47ad
0x48db: nop dword ptr [rax+rax]
0x48e0: push r12
0x48e2: push rbp
0x48e3: push rbx
0x48e4: mov rbx,rdi
0x48e7: call 0x15b0
0x48ec: mov r12d,dword ptr [rax]
0x48ef: mov rbp,rax
0x48f2: lea rax,[rip+0x206927]
0x48f9: test rbx,rbx
0x48fc: mov esi,0x38
0x4901: cmove rbx,rax
0x4905: mov rdi,rbx
0x4908: call 0x58b0
0x490d: mov dword ptr [rbp],r12d
0x4911: pop rbx
0x4912: pop rbp
0x4913: pop r12
0x4915: ret 
0x4920: lea rax,[rip+0x2068f9]
0x4927: test rdi,rdi
0x492a: cmove rdi,rax
0x492e: mov eax,dword ptr [rdi]
0x4930: ret 
0x4940: lea rax,[rip+0x2068d9]
0x4947: test rdi,rdi
0x494a: cmove rdi,rax
0x494e: mov dword ptr [rdi],esi
0x4950: ret 
0x4960: lea rax,[rip+0x2068b9]
0x4967: test rdi,rdi
0x496a: mov ecx,esi
0x496c: cmove rdi,rax
0x4970: mov eax,esi
0x4972: and ecx,0x1f
0x4975: shr al,0x5
0x4978: movzx eax,al
0x497b: lea rdi,[rdi+rax*4+0x8]
0x4980: mov esi,dword ptr [rdi]
0x4982: mov eax,esi
0x4984: shr eax,cl
0x4986: xor edx,eax
0x4988: and eax,0x1
0x498b: and edx,0x1
0x498e: shl edx,cl
0x4990: xor edx,esi
0x4992: mov dword ptr [rdi],edx
0x4994: ret 
0x49a0: lea rax,[rip+0x206879]
0x49a7: test rdi,rdi
0x49aa: cmove rdi,rax
0x49ae: mov eax,dword ptr [rdi+0x4]
0x49b1: mov dword ptr [rdi+0x4],esi
0x49b4: ret 
0x49c0: lea rax,[rip+0x206859]
0x49c7: test rdi,rdi
0x49ca: cmove rdi,rax
0x49ce: test rsi,rsi
0x49d1: mov dword ptr [rdi],0xa
0x49d7: je 0x49e7
0x49d9: test rdx,rdx
0x49dc: je 0x49e7
0x49de: mov qword ptr [rdi+0x28],rsi
0x49e2: mov qword ptr [rdi+0x30],rdx
0x49e6: ret 
0x49e7: sub rsp,0x8
0x49eb: call 0x15a0
0x49f0: push r15
0x49f2: push r14
0x49f4: lea rax,[rip+0x206825]
0x49fb: push r13
0x49fd: push r12
0x49ff: mov r13,rdi
0x4a02: push rbp
0x4a03: push rbx
0x4a04: mov rbx,r8
0x4a07: mov r14,rsi
0x4a0a: mov r15,rdx
0x4a0d: sub rsp,0x18
0x4a11: test r8,r8
0x4a14: cmove rbx,rax
0x4a18: mov qword ptr [rsp+0x8],rcx
0x4a1d: call 0x15b0
0x4a22: mov r12d,dword ptr [rax]
0x4a25: mov rbp,rax
0x4a28: lea rax,[rbx+0x8]
0x4a2c: sub rsp,0x8
0x4a30: mov r9d,dword ptr [rbx+0x4]
0x4a34: push qword ptr [rbx+0x30]
0x4a37: mov r8d,dword ptr [rbx]
0x4a3a: push qword ptr [rbx+0x28]
0x4a3d: mov rdx,r15
0x4a40: push rax
0x4a41: mov rcx,qword ptr [rsp+0x28]
0x4a46: mov rsi,r14
0x4a49: mov rdi,r13
0x4a4c: call 0x34f0
0x4a51: mov dword ptr [rbp],r12d
0x4a55: add rsp,0x38
0x4a59: pop rbx
0x4a5a: pop rbp
0x4a5b: pop r12
0x4a5d: pop r13
0x4a5f: pop r14
0x4a61: pop r15
0x4a63: ret 
0x4a70: push r15
0x4a72: push r14
0x4a74: lea rax,[rip+0x2067a5]
0x4a7b: push r13
0x4a7d: push r12
0x4a7f: mov r12,rdx
0x4a82: push rbp
0x4a83: push rbx
0x4a84: mov rbx,rcx
0x4a87: mov r14,rdi
0x4a8a: mov r15,rsi
0x4a8d: sub rsp,0x38
0x4a91: test rcx,rcx
0x4a94: cmove rbx,rax
0x4a98: xor ebp,ebp
0x4a9a: call 0x15b0
0x4a9f: test r12,r12
0x4aa2: mov r13,rax
0x4aa5: mov eax,dword ptr [rax]
0x4aa7: sete bpl
0x4aab: or ebp,dword ptr [rbx+0x4]
0x4aae: lea r10,[rbx+0x8]
0x4ab2: sub rsp,0x8
0x4ab6: mov r8d,dword ptr [rbx]
0x4ab9: mov rcx,r15
0x4abc: mov dword ptr [rsp+0x14],eax
0x4ac0: push qword ptr [rbx+0x30]
0x4ac3: mov rdx,r14
0x4ac6: push qword ptr [rbx+0x28]
0x4ac9: push r10
0x4acb: xor esi,esi
0x4acd: mov r9d,ebp
0x4ad0: xor edi,edi
0x4ad2: mov qword ptr [rsp+0x40],r10
0x4ad7: call 0x34f0
0x4adc: lea rsi,[rax+0x1]
0x4ae0: mov qword ptr [rsp+0x48],rax
0x4ae5: add rsp,0x20
0x4ae9: mov rdi,rsi
0x4aec: mov qword ptr [rsp+0x18],rsi
0x4af1: call 0x56b0
0x4af6: mov qword ptr [rsp+0x10],rax
0x4afb: sub rsp,0x8
0x4aff: push qword ptr [rbx+0x30]
0x4b02: push qword ptr [rbx+0x28]
0x4b05: mov r10,qword ptr [rsp+0x38]
0x4b0a: mov r9d,ebp
0x4b0d: mov r8d,dword ptr [rbx]
0x4b10: mov rcx,r15
0x4b13: mov rdx,r14
0x4b16: mov rdi,rax
0x4b19: push r10
0x4b1b: mov rsi,qword ptr [rsp+0x38]
0x4b20: call 0x34f0
0x4b25: mov eax,dword ptr [rsp+0x2c]
0x4b29: add rsp,0x20
0x4b2d: test r12,r12
0x4b30: mov dword ptr [r13],eax
0x4b34: je 0x4b3f
0x4b36: mov r11,qword ptr [rsp+0x28]
0x4b3b: mov qword ptr [r12],r11
0x4b3f: mov rax,qword ptr [rsp+0x10]
0x4b44: add rsp,0x38
0x4b48: pop rbx
0x4b49: pop rbp
0x4b4a: pop r12
0x4b4c: pop r13
0x4b4e: pop r14
0x4b50: pop r15
0x4b52: ret 
0x4b60: mov rcx,rdx
0x4b63: xor edx,edx
0x4b65: jmp 0x4a70
0x4b70: mov eax,dword ptr [rip+0x2064e2]
0x4b76: push r12
0x4b78: mov r12,qword ptr [rip+0x2064e1]
0x4b7f: push rbp
0x4b80: push rbx
0x4b81: cmp eax,0x1
0x4b84: jle 0x4bb1
0x4b86: sub eax,0x2
0x4b89: lea rbx,[r12+0x18]
0x4b8e: shl rax,0x4
0x4b92: lea rbp,[r12+rax+0x28]
0x4b97: nop word ptr [rax+rax]
0x4ba0: mov rdi,qword ptr [rbx]
0x4ba3: add rbx,0x10
0x4ba7: call 0x1590
0x4bac: cmp rbx,rbp
0x4baf: jne 0x4ba0
0x4bb1: mov rdi,qword ptr [r12+0x8]
0x4bb6: lea rbx,[rip+0x206563]
0x4bbd: cmp rdi,rbx
0x4bc0: je 0x4bd9
0x4bc2: call 0x1590
0x4bc7: mov qword ptr [rip+0x20649e],0x100
0x4bd2: mov qword ptr [rip+0x20649f],rbx
0x4bd9: lea rbx,[rip+0x206490]
0x4be0: cmp r12,rbx
0x4be3: je 0x4bf4
0x4be5: mov rdi,r12
0x4be8: call 0x1590
0x4bed: mov qword ptr [rip+0x20646c],rbx
0x4bf4: pop rbx
0x4bf5: mov dword ptr [rip+0x206459],0x1
0x4bff: pop rbp
0x4c00: pop r12
0x4c02: ret 
0x4c10: lea rcx,[rip+0x206609]
0x4c17: mov rdx,-0x1
0x4c1e: jmp 0x4730
0x4c30: lea rcx,[rip+0x2065e9]
0x4c37: jmp 0x4730
0x4c40: lea rcx,[rip+0x2065d9]
0x4c47: mov rsi,rdi
0x4c4a: mov rdx,-0x1
0x4c51: xor edi,edi
0x4c53: jmp 0x4730
0x4c60: lea rcx,[rip+0x2065b9]
0x4c67: mov rdx,rsi
0x4c6a: mov rsi,rdi
0x4c6d: xor edi,edi
0x4c6f: jmp 0x4730
0x4c80: sub rsp,0x48
0x4c84: mov rax,rdx
0x4c87: mov rdx,qword ptr fs:0x28
0x4c90: mov qword ptr [rsp+0x38],rdx
0x4c95: xor edx,edx
0x4c97: cmp esi,0xa
0x4c9a: je 0x4d04
0x4c9c: mov dword ptr [rsp],esi
0x4c9f: mov rcx,rsp
0x4ca2: mov rdx,-0x1
0x4ca9: mov rsi,rax
0x4cac: mov qword ptr [rsp+0x4],0x0
0x4cb5: mov qword ptr [rsp+0xc],0x0
0x4cbe: mov qword ptr [rsp+0x14],0x0
0x4cc7: mov qword ptr [rsp+0x1c],0x0
0x4cd0: mov qword ptr [rsp+0x24],0x0
0x4cd9: mov qword ptr [rsp+0x2c],0x0
0x4ce2: mov dword ptr [rsp+0x34],0x0
0x4cea: call 0x4730
0x4cef: mov rcx,qword ptr [rsp+0x38]
0x4cf4: xor rcx,qword ptr fs:0x28
0x4cfd: jne 0x4d09
0x4cff: add rsp,0x48
0x4d03: ret 
0x4d04: call 0x15a0
0x4d09: call 0x1670
0x4d0e: nop 
0x4d10: sub rsp,0x48
0x4d14: mov rax,rdx
0x4d17: mov rdx,rcx
0x4d1a: mov rcx,qword ptr fs:0x28
0x4d23: mov qword ptr [rsp+0x38],rcx
0x4d28: xor ecx,ecx
0x4d2a: cmp esi,0xa
0x4d2d: je 0x4d90
0x4d2f: mov dword ptr [rsp],esi
0x4d32: mov rcx,rsp
0x4d35: mov rsi,rax
0x4d38: mov qword ptr [rsp+0x4],0x0
0x4d41: mov qword ptr [rsp+0xc],0x0
0x4d4a: mov qword ptr [rsp+0x14],0x0
0x4d53: mov qword ptr [rsp+0x1c],0x0
0x4d5c: mov qword ptr [rsp+0x24],0x0
0x4d65: mov qword ptr [rsp+0x2c],0x0
0x4d6e: mov dword ptr [rsp+0x34],0x0
0x4d76: call 0x4730
0x4d7b: mov rdx,qword ptr [rsp+0x38]
0x4d80: xor rdx,qword ptr fs:0x28
0x4d89: jne 0x4d95
0x4d8b: add rsp,0x48
0x4d8f: ret 
0x4d90: call 0x15a0
0x4d95: call 0x1670
0x4d9a: nop word ptr [rax+rax]
0x4da0: mov rdx,rsi
0x4da3: mov esi,edi
0x4da5: xor edi,edi
0x4da7: jmp 0x4c80
0x4db0: mov rcx,rdx
0x4db3: mov rdx,rsi
0x4db6: mov esi,edi
0x4db8: xor edi,edi
0x4dba: jmp 0x4d10
0x4dc0: sub rsp,0x48
0x4dc4: mov ecx,edx
0x4dc6: mov rax,qword ptr fs:0x28
0x4dcf: mov qword ptr [rsp+0x38],rax
0x4dd4: xor eax,eax
0x4dd6: mov rax,qword ptr [rip+0x206473]
0x4ddd: mov r8,rsp
0x4de0: and ecx,0x1f
0x4de3: movdqa xmm0,xmmword ptr [rip+0x206435]
0x4deb: mov qword ptr [rsp+0x30],rax
0x4df0: mov eax,edx
0x4df2: movaps xmmword ptr [rsp],xmm0
0x4df6: shr al,0x5
0x4df9: movzx eax,al
0x4dfc: lea r9,[r8+rax*4+0x8]
0x4e01: movdqa xmm0,xmmword ptr [rip+0x206427]
0x4e09: movaps xmmword ptr [rsp+0x10],xmm0
0x4e0e: movdqa xmm0,xmmword ptr [rip+0x20642a]
0x4e16: movaps xmmword ptr [rsp+0x20],xmm0
0x4e1b: mov edx,dword ptr [r9]
0x4e1e: mov eax,edx
0x4e20: shr eax,cl
0x4e22: not eax
0x4e24: and eax,0x1
0x4e27: shl eax,cl
0x4e29: mov rcx,r8
0x4e2c: xor eax,edx
0x4e2e: mov rdx,rsi
0x4e31: mov rsi,rdi
0x4e34: mov dword ptr [r9],eax
0x4e37: xor edi,edi
0x4e39: call 0x4730
0x4e3e: mov rsi,qword ptr [rsp+0x38]
0x4e43: xor rsi,qword ptr fs:0x28
0x4e4c: jne 0x4e53
0x4e4e: add rsp,0x48
0x4e52: ret 
0x4e53: call 0x1670
0x4e58: nop dword ptr [rax+rax]
0x4e60: movsx edx,sil
0x4e64: mov rsi,-0x1
0x4e6b: jmp 0x4dc0
0x4e70: mov edx,0x3a
0x4e75: mov rsi,-0x1
0x4e7c: jmp 0x4dc0
0x4e90: mov edx,0x3a
0x4e95: jmp 0x4dc0
0x4ea0: sub rsp,0x48
0x4ea4: mov rax,rdx
0x4ea7: mov rdx,qword ptr fs:0x28
0x4eb0: mov qword ptr [rsp+0x38],rdx
0x4eb5: xor edx,edx
0x4eb7: cmp esi,0xa
0x4eba: je 0x4f24
0x4ebc: mov dword ptr [rsp],esi
0x4ebf: mov rcx,rsp
0x4ec2: mov rdx,-0x1
0x4ec9: mov rsi,rax
0x4ecc: mov qword ptr [rsp+0x4],0x0
0x4ed5: mov qword ptr [rsp+0xc],0x4000000
0x4ede: mov qword ptr [rsp+0x14],0x0
0x4ee7: mov qword ptr [rsp+0x1c],0x0
0x4ef0: mov qword ptr [rsp+0x24],0x0
0x4ef9: mov qword ptr [rsp+0x2c],0x0
0x4f02: mov dword ptr [rsp+0x34],0x0
0x4f0a: call 0x4730
0x4f0f: mov rcx,qword ptr [rsp+0x38]
0x4f14: xor rcx,qword ptr fs:0x28
0x4f1d: jne 0x4f29
0x4f1f: add rsp,0x48
0x4f23: ret 
0x4f24: call 0x15a0
0x4f29: call 0x1670
0x4f2e: nop 
0x4f30: sub rsp,0x48
0x4f34: mov r9,rcx
0x4f37: mov rcx,qword ptr [rip+0x206312]
0x4f3e: movdqa xmm0,xmmword ptr [rip+0x2062da]
0x4f46: mov rax,qword ptr fs:0x28
0x4f4f: mov qword ptr [rsp+0x38],rax
0x4f54: xor eax,eax
0x4f56: movaps xmmword ptr [rsp],xmm0
0x4f5a: test rsi,rsi
0x4f5d: mov qword ptr [rsp+0x30],rcx
0x4f62: mov dword ptr [rsp],0xa
0x4f69: movdqa xmm0,xmmword ptr [rip+0x2062bf]
0x4f71: movaps xmmword ptr [rsp+0x10],xmm0
0x4f76: movdqa xmm0,xmmword ptr [rip+0x2062c2]
0x4f7e: movaps xmmword ptr [rsp+0x20],xmm0
0x4f83: je 0x4fb7
0x4f85: test rdx,rdx
0x4f88: je 0x4fb7
0x4f8a: mov qword ptr [rsp+0x28],rsi
0x4f8f: mov qword ptr [rsp+0x30],rdx
0x4f94: mov rcx,rsp
0x4f97: mov rdx,r8
0x4f9a: mov rsi,r9
0x4f9d: call 0x4730
0x4fa2: mov rdi,qword ptr [rsp+0x38]
0x4fa7: xor rdi,qword ptr fs:0x28
0x4fb0: jne 0x4fbc
0x4fb2: add rsp,0x48
0x4fb6: ret 
0x4fb7: call 0x15a0
0x4fbc: call 0x1670
0x4fc1: nop dword ptr [rax+rax]
0x4fc6: nop word ptr cs:[rax+rax]
0x4fd0: mov r8,-0x1
0x4fd7: jmp 0x4f30
0x4fe0: mov rcx,rdx
0x4fe3: mov r8,-0x1
0x4fea: mov rdx,rsi
0x4fed: mov rsi,rdi
0x4ff0: xor edi,edi
0x4ff2: jmp 0x4f30
0x5000: mov r8,rcx
0x5003: mov rcx,rdx
0x5006: mov rdx,rsi
0x5009: mov rsi,rdi
0x500c: xor edi,edi
0x500e: jmp 0x4f30
0x5020: lea rcx,[rip+0x205ff9]
0x5027: jmp 0x4730
0x5030: lea rcx,[rip+0x205fe9]
0x5037: mov rdx,rsi
0x503a: mov rsi,rdi
0x503d: xor edi,edi
0x503f: jmp 0x4730
0x51c8: mov r8,rcx
0x51cb: mov rcx,rdx
0x51ce: lea rdx,[rip+0x3b7f]
0x51d5: mov esi,0x1
0x51da: xor eax,eax
0x51dc: call 0x1890
0x51e1: jmp 0x50cc
0x53dd: push r12
0x53df: push r15
0x53e1: push r14
0x53e3: mov r8,qword ptr [rsp+0x20]
0x53e8: mov rcx,rbx
0x53eb: mov rdx,rax
0x53ee: mov rdi,rbp
0x53f1: mov esi,0x1
0x53f6: xor eax,eax
0x53f8: call 0x1890
0x53fd: add rsp,0x20
0x5401: add rsp,0x28
0x5405: pop rbx
0x5406: pop rbp
0x5407: pop r12
0x5409: pop r13
0x540b: pop r14
0x540d: pop r15
0x540f: ret 
0x5449: push r12
0x544b: push r15
0x544d: push r14
0x544f: mov r9,qword ptr [rsp+0x28]
0x5454: jmp 0x53e3
0x54b0: xor r9d,r9d
0x54b3: cmp qword ptr [r8],0x0
0x54b7: je 0x54cb
0x54b9: nop dword ptr [rax]
0x54c0: add r9,0x1
0x54c4: cmp qword ptr [r8+r9*8],0x0
0x54c9: jne 0x54c0
0x54cb: jmp 0x5090
0x54d0: sub rsp,0x68
0x54d4: mov r10,r8
0x54d7: xor r9d,r9d
0x54da: mov rax,qword ptr fs:0x28
0x54e3: mov qword ptr [rsp+0x58],rax
0x54e8: xor eax,eax
0x54ea: mov r8,rsp
0x54ed: nop dword ptr [rax]
0x54f0: mov eax,dword ptr [r10]
0x54f3: cmp eax,0x2f
0x54f6: ja 0x553a
0x54f8: mov r11d,eax
0x54fb: add r11,qword ptr [r10+0x10]
0x54ff: add eax,0x8
0x5502: mov dword ptr [r10],eax
0x5505: mov rax,qword ptr [r11]
0x5508: test rax,rax
0x550b: mov qword ptr [r8+r9*8],rax
0x550f: je 0x551b
0x5511: add r9,0x1
0x5515: cmp r9,0xa
0x5519: jne 0x54f0
0x551b: call 0x5090
0x5520: mov rax,qword ptr [rsp+0x58]
0x5525: xor rax,qword ptr fs:0x28
0x552e: jne 0x5535
0x5530: add rsp,0x68
0x5534: ret 
0x5535: call 0x1670
0x553a: mov r11,qword ptr [r10+0x8]
0x553e: lea rax,[r11+0x8]
0x5542: mov qword ptr [r10+0x8],rax
0x5546: jmp 0x5505
0x5630: push rbx
0x5631: lea rsi,[rip+0x376a]
0x5638: mov edx,0x5
0x563d: xor edi,edi
0x563f: call 0x1640
0x5644: lea rdx,[rip+0x376c]
0x564b: mov rsi,rax
0x564e: mov edi,0x1
0x5653: xor eax,eax
0x5655: call 0x1800
0x565a: lea rsi,[rip+0x376c]
0x5661: mov edx,0x5
0x5666: xor edi,edi
0x5668: call 0x1640
0x566d: lea rcx,[rip+0x3014]
0x5674: lea rdx,[rip+0x299e]
0x567b: mov rsi,rax
0x567e: mov edi,0x1
0x5683: xor eax,eax
0x5685: call 0x1800
0x568a: mov rbx,qword ptr [rip+0x2059f7]
0x5691: lea rsi,[rip+0x3968]
0x5698: xor edi,edi
0x569a: mov edx,0x5
0x569f: call 0x1640
0x56a4: mov rsi,rbx
0x56a7: mov rdi,rax
0x56aa: pop rbx
0x56ab: jmp 0x1720
0x56be: test rbx,rbx
0x56c1: jne 0x56c5
0x56c5: call 0x5900
0x56ca: nop word ptr [rax+rax]
0x56d0: mov rax,rdi
0x56d3: mul rsi
0x56d6: mov rdi,rax
0x56d9: seto al
0x56dc: test rdi,rdi
0x56df: js 0x56eb
0x56e1: movzx eax,al
0x56e4: test rax,rax
0x56e7: jne 0x56eb
0x56e9: jmp 0x56b0
0x56eb: sub rsp,0x8
0x56ef: call 0x5900
0x56f4: nop 
0x56f6: nop word ptr cs:[rax+rax]
0x5700: jmp 0x56b0
0x572b: test rbx,rbx
0x572e: jne 0x5741
0x5741: call 0x5900
0x5746: nop word ptr cs:[rax+rax]
0x5750: mov rax,rsi
0x5753: mul rdx
0x5756: mov rsi,rax
0x5759: seto al
0x575c: test rsi,rsi
0x575f: js 0x576b
0x5761: movzx eax,al
0x5764: test rax,rax
0x5767: jne 0x576b
0x5769: jmp 0x5710
0x576b: sub rsp,0x8
0x576f: call 0x5900
0x5774: nop 
0x5776: nop word ptr cs:[rax+rax]
0x5780: test rdi,rdi
0x5783: mov r9,rdx
0x5786: mov rcx,qword ptr [rsi]
0x5789: je 0x57c0
0x578b: xor edx,edx
0x578d: movabsq rax,0x5555555555555554
0x5797: div r9
0x579a: cmp rax,rcx
0x579d: jbe 0x57db
0x579f: mov rax,rcx
0x57a2: shr rax, 1
0x57a5: lea rcx,[rax+rcx+0x1]
0x57aa: mov qword ptr [rsi],rcx
0x57ad: imul rcx,r9
0x57b1: mov rsi,rcx
0x57b4: jmp 0x5710
0x57c0: test rcx,rcx
0x57c3: je 0x57e8
0x57c5: mov rax,rcx
0x57c8: mul r9
0x57cb: seto dl
0x57ce: test rax,rax
0x57d1: movzx edx,dl
0x57d4: js 0x57db
0x57d6: test rdx,rdx
0x57d9: je 0x57aa
0x57db: sub rsp,0x8
0x57df: call 0x5900
0x57e4: nop dword ptr [rax]
0x57e8: xor edx,edx
0x57ea: mov eax,0x80
0x57ef: xor r8d,r8d
0x57f2: div r9
0x57f5: test rax,rax
0x57f8: sete r8b
0x57fc: lea rcx,[r8+rax]
0x5800: jmp 0x57c5
0x5810: test rdi,rdi
0x5813: mov rax,qword ptr [rsi]
0x5816: je 0x5840
0x5818: movabsq rdx,0x5555555555555553
0x5822: cmp rax,rdx
0x5825: ja 0x5851
0x5827: mov rdx,rax
0x582a: shr rdx, 1
0x582d: lea rax,[rdx+rax+0x1]
0x5832: mov qword ptr [rsi],rax
0x5835: mov rsi,rax
0x5838: jmp 0x5710
0x5840: test rax,rax
0x5843: mov edx,0x80
0x5848: cmove rax,rdx
0x584c: test rax,rax
0x584f: jns 0x5832
0x5851: sub rsp,0x8
0x5855: call 0x5900
0x585a: nop word ptr [rax+rax]
0x5860: push rbx
0x5861: mov rbx,rdi
0x5864: call 0x56b0
0x5869: mov rdx,rbx
0x586c: xor esi,esi
0x586e: mov rdi,rax
0x5871: pop rbx
0x5872: jmp 0x16e0
0x5880: mov rax,rdi
0x5883: sub rsp,0x8
0x5887: mul rsi
0x588a: seto dl
0x588d: test rax,rax
0x5890: js 0x58a9
0x5892: movzx edx,dl
0x5895: test rdx,rdx
0x5898: jne 0x58a9
0x589a: call 0x1730
0x589f: test rax,rax
0x58a2: je 0x58a9
0x58a4: add rsp,0x8
0x58a8: ret 
0x58a9: call 0x5900
0x58ae: nop 
0x58b0: push rbp
0x58b1: push rbx
0x58b2: mov rbp,rdi
0x58b5: mov rdi,rsi
0x58b8: mov rbx,rsi
0x58bb: sub rsp,0x8
0x58bf: call 0x56b0
0x58c4: add rsp,0x8
0x58c8: mov rdx,rbx
0x58cb: mov rsi,rbp
0x58ce: pop rbx
0x58cf: pop rbp
0x58d0: mov rdi,rax
0x58d3: jmp 0x1760
0x58e0: push rbx
0x58e1: mov rbx,rdi
0x58e4: call 0x1660
0x58e9: mov rdi,rbx
0x58ec: lea rsi,[rax+0x1]
0x58f0: pop rbx
0x58f1: jmp 0x58b0
0x5930: call 0x15a0
0x5935: nop word ptr cs:[rax+rax]
0x593f: nop 
0x598d: fldz 
0x598f: fxch st(1)
0x5991: fucomi st(1)
0x5993: fstp st(1)
0x5995: jp 0x599e
0x5997: mov eax,0x1
0x599c: je 0x59ab
0x59ab: mov qword ptr [rbx],rcx
0x59f9: nop dword ptr [rax]
0x5a1f: movaps xmmword ptr [rsp+0x50],xmm0
0x5a24: movaps xmmword ptr [rsp+0x60],xmm1
0x5a29: movaps xmmword ptr [rsp+0x70],xmm2
0x5a2e: movaps xmmword ptr [rsp+0x80],xmm3
0x5a36: movaps xmmword ptr [rsp+0x90],xmm4
0x5a3e: movaps xmmword ptr [rsp+0xa0],xmm5
0x5a46: movaps xmmword ptr [rsp+0xb0],xmm6
0x5a4e: movaps xmmword ptr [rsp+0xc0],xmm7
0x5ab1: nop word ptr cs:[rax+rax]
0x5abb: nop dword ptr [rax+rax]
0x5ac0: push r13
0x5ac2: push r12
0x5ac4: mov r13,rsi
0x5ac7: push rbp
0x5ac8: push rbx
0x5ac9: mov rbx,rdi
0x5acc: mov r12,rdx
0x5acf: sub rsp,0x18
0x5ad3: mov rax,qword ptr fs:0x28
0x5adc: mov qword ptr [rsp+0x8],rax
0x5ae1: xor eax,eax
0x5ae3: lea rax,[rsp+0x4]
0x5ae8: test rdi,rdi
0x5aeb: cmove rbx,rax
0x5aef: mov rdi,rbx
0x5af2: call 0x1690
0x5af7: cmp rax,-0x3
0x5afb: mov rbp,rax
0x5afe: jbe 0x5b20
0x5b00: test r12,r12
0x5b03: je 0x5b20
0x5b05: xor edi,edi
0x5b07: call 0x5d10
0x5b0c: test al,al
0x5b0e: jne 0x5b20
0x5b10: movzx eax,byte ptr [r13]
0x5b15: mov ebp,0x1
0x5b1a: mov dword ptr [rbx],eax
0x5b1c: nop dword ptr [rax]
0x5b20: mov rdx,qword ptr [rsp+0x8]
0x5b25: xor rdx,qword ptr fs:0x28
0x5b2e: mov rax,rbp
0x5b31: jne 0x5b3e
0x5b33: add rsp,0x18
0x5b37: pop rbx
0x5b38: pop rbp
0x5b39: pop r12
0x5b3b: pop r13
0x5b3d: ret 
0x5b3e: call 0x1670
0x5b43: nop word ptr cs:[rax+rax]
0x5b4d: nop dword ptr [rax]
0x5bce: nop 
0x5c86: nop word ptr cs:[rax+rax]
0x5c90: push r12
0x5c92: push rbp
0x5c93: mov rbp,rdi
0x5c96: push rbx
0x5c97: call 0x15f0
0x5c9c: mov ebx,dword ptr [rbp]
0x5c9f: mov rdi,rbp
0x5ca2: mov r12,rax
0x5ca5: call 0x5db0
0x5caa: and ebx,0x20
0x5cad: test ebx,ebx
0x5caf: jne 0x5cc8
0x5cb1: test eax,eax
0x5cb3: je 0x5cbf
0x5cb5: test r12,r12
0x5cb8: mov eax,0xffffffff
0x5cbd: je 0x5cf8
0x5cbf: pop rbx
0x5cc0: pop rbp
0x5cc1: pop r12
0x5cc3: ret 
0x5cc8: test eax,eax
0x5cca: jne 0x5ce8
0x5ccc: call 0x15b0
0x5cd1: mov dword ptr [rax],0x0
0x5cd7: mov eax,0xffffffff
0x5cdc: pop rbx
0x5cdd: pop rbp
0x5cde: pop r12
0x5ce0: ret 
0x5ce8: pop rbx
0x5ce9: mov eax,0xffffffff
0x5cee: pop rbp
0x5cef: pop r12
0x5cf1: ret 
0x5cf8: call 0x15b0
0x5cfd: cmp dword ptr [rax],0x9
0x5d00: pop rbx
0x5d01: pop rbp
0x5d02: pop r12
0x5d04: setne al
0x5d07: movzx eax,al
0x5d0a: neg eax
0x5d0c: ret 
0x5d10: sub rsp,0x8
0x5d14: xor esi,esi
0x5d16: call 0x17f0
0x5d1b: mov rdx,rax
0x5d1e: mov eax,0x1
0x5d23: test rdx,rdx
0x5d26: je 0x5d45
0x5d28: lea rdi,[rip+0x23f1]
0x5d2f: mov ecx,0x2
0x5d34: mov rsi,rdx
0x5d37: rep cmpsb [rsi],es:[rdi]
0x5d39: seta cl
0x5d3c: sbb cl,0x0
0x5d3f: xor eax,eax
0x5d41: test cl,cl
0x5d43: jne 0x5d50
0x5d45: add rsp,0x8
0x5d49: ret 
0x5d50: lea rdi,[rip+0x3369]
0x5d57: mov ecx,0x6
0x5d5c: mov rsi,rdx
0x5d5f: rep cmpsb [rsi],es:[rdi]
0x5d61: seta al
0x5d64: sbb al,0x0
0x5d66: test al,al
0x5d68: setne al
0x5d6b: add rsp,0x8
0x5d6f: ret 
0x5d70: sub rsp,0x8
0x5d74: mov edi,0xe
0x5d79: call 0x17b0
0x5d7e: test rax,rax
0x5d81: je 0x5da0
0x5d83: cmp byte ptr [rax],0x0
0x5d86: lea rdx,[rip+0x3339]
0x5d8d: cmove rax,rdx
0x5d91: add rsp,0x8
0x5d95: ret 
0x5da0: lea rax,[rip+0x331f]
0x5da7: add rsp,0x8
0x5dab: ret 
0x5db0: push r12
0x5db2: push rbp
0x5db3: push rbx
0x5db4: mov rbx,rdi
0x5db7: call 0x1770
0x5dbc: test eax,eax
0x5dbe: mov rdi,rbx
0x5dc1: js 0x5e17
0x5dc3: call 0x17c0
0x5dc8: test eax,eax
0x5dca: jne 0x5df8
0x5dcc: mov rdi,rbx
0x5dcf: call 0x5e30
0x5dd4: test eax,eax
0x5dd6: je 0x5e14
0x5dd8: call 0x15b0
0x5ddd: mov r12d,dword ptr [rax]
0x5de0: mov rdi,rbx
0x5de3: mov rbp,rax
0x5de6: call 0x1620
0x5deb: test r12d,r12d
0x5dee: jne 0x5e20
0x5df0: pop rbx
0x5df1: pop rbp
0x5df2: pop r12
0x5df4: ret 
0x5df8: mov rdi,rbx
0x5dfb: call 0x1770
0x5e00: xor esi,esi
0x5e02: mov edx,0x1
0x5e07: mov edi,eax
0x5e09: call 0x16d0
0x5e0e: cmp rax,-0x1
0x5e12: jne 0x5dcc
0x5e14: mov rdi,rbx
0x5e17: pop rbx
0x5e18: pop rbp
0x5e19: pop r12
0x5e1b: jmp 0x1620
0x5e20: mov dword ptr [rbp],r12d
0x5e24: mov eax,0xffffffff
0x5e29: jmp 0x5df0
0x5e30: test rdi,rdi
0x5e33: push rbx
0x5e34: mov rbx,rdi
0x5e37: je 0x5e4a
0x5e39: call 0x17c0
0x5e3e: test eax,eax
0x5e40: je 0x5e4a
0x5e42: test dword ptr [rbx],0x100
0x5e48: jne 0x5e58
0x5e4a: mov rdi,rbx
0x5e4d: pop rbx
0x5e4e: jmp 0x17a0
0x5e58: mov rdi,rbx
0x5e5b: mov edx,0x1
0x5e60: xor esi,esi
0x5e62: call 0x5e70
0x5e67: mov rdi,rbx
0x5e6a: pop rbx
0x5e6b: jmp 0x17a0
0x5e70: mov rax,qword ptr [rdi+0x8]
0x5e74: cmp qword ptr [rdi+0x10],rax
0x5e78: je 0x5e80
0x5e7a: jmp 0x1850
0x5e80: mov rax,qword ptr [rdi+0x20]
0x5e84: cmp qword ptr [rdi+0x28],rax
0x5e88: jne 0x5e7a
0x5e8a: cmp qword ptr [rdi+0x48],0x0
0x5e8f: jne 0x5e7a
0x5e91: push r12
0x5e93: push rbp
0x5e94: mov r12d,edx
0x5e97: push rbx
0x5e98: mov rbp,rsi
0x5e9b: mov rbx,rdi
0x5e9e: call 0x1770
0x5ea3: mov edx,r12d
0x5ea6: mov rsi,rbp
0x5ea9: mov edi,eax
0x5eab: call 0x16d0
0x5eb0: cmp rax,-0x1
0x5eb4: je 0x5ec2
0x5eb6: and dword ptr [rbx],-0x11
0x5eb9: mov qword ptr [rbx+0x90],rax
0x5ec0: xor eax,eax
0x5ec2: pop rbx
0x5ec3: pop rbp
0x5ec4: pop r12
0x5ec6: ret 
0x5f91: cmp rdi,-0x1
0x5f95: mov qword ptr [rbp-0x3c8],r8
0x5f9c: je 0x6998
0x5fa2: call 0x1790
0x5fa7: test rax,rax
0x5faa: mov qword ptr [rbp-0x3d8],rax
0x5fb1: je 0x6998
0x5fb7: mov r8,qword ptr [rbp-0x3c8]
0x5fbe: mov qword ptr [rbp-0x420],rax
0x5fd2: mov rax,qword ptr [rbp-0x418]
0x5fd9: mov r12,qword ptr [rax]
0x605f: mov rdi,rax
0x6062: call 0x1590
0x607e: call 0x1590
0x6139: test dl,dl
0x613b: jne 0x6a78
0x6141: mov rsi,r12
0x6144: mov rdi,r15
0x6147: mov qword ptr [rbp-0x3d0],r8
0x614e: mov qword ptr [rbp-0x3c8],rcx
0x6155: call 0x17e0
0x615a: test rax,rax
0x615d: mov rcx,qword ptr [rbp-0x3c8]
0x6164: mov r8,qword ptr [rbp-0x3d0]
0x616b: je 0x6b1b
0x6171: mov r15,rax
0x6197: movzx edx,byte ptr [r13+0x48]
0x619c: mov rax,qword ptr [r13+0x50]
0x61a0: cmp dl,0x25
0x61a3: je 0x6938
0x61a9: cmp rax,-0x1
0x61ad: je 0x6df6
0x61b3: mov r8,qword ptr [rbp-0x3a8]
0x61ba: shl rax,0x5
0x61be: add rax,r8
0x61c1: cmp dl,0x6e
0x61c4: mov edi,dword ptr [rax]
0x61c6: mov dword ptr [rbp-0x3d0],edi
0x61cc: je 0x69b0
0x61d2: mov eax,dword ptr [r13+0x10]
0x61d6: mov rdi,qword ptr [rbp-0x3d8]
0x61dd: test al,0x1
0x61df: mov byte ptr [rdi],0x25
0x61e2: lea rbx,[rdi+0x1]
0x61e6: je 0x61f7
0x61e8: mov rdi,qword ptr [rbp-0x3d8]
0x61ef: lea rbx,[rdi+0x2]
0x61f3: mov byte ptr [rdi+0x1],0x27
0x61f7: test al,0x2
0x61f9: je 0x6202
0x61fb: mov byte ptr [rbx],0x2d
0x61fe: add rbx,0x1
0x6202: test al,0x4
0x6204: je 0x620d
0x6206: mov byte ptr [rbx],0x2b
0x6209: add rbx,0x1
0x620d: test al,0x8
0x620f: je 0x6218
0x6211: mov byte ptr [rbx],0x20
0x6214: add rbx,0x1
0x6218: test al,0x10
0x621a: je 0x6223
0x621c: mov byte ptr [rbx],0x23
0x621f: add rbx,0x1
0x6223: test al,0x40
0x6225: je 0x622e
0x6227: mov byte ptr [rbx],0x49
0x622a: add rbx,0x1
0x622e: test al,0x20
0x6230: je 0x6239
0x6232: mov byte ptr [rbx],0x30
0x6235: add rbx,0x1
0x6239: mov rsi,qword ptr [r13+0x18]
0x623d: mov rdx,qword ptr [r13+0x20]
0x6241: cmp rsi,rdx
0x6244: je 0x6276
0x6246: mov rcx,rdx
0x6249: mov rdi,rbx
0x624c: mov qword ptr [rbp-0x3e0],r8
0x6253: sub rcx,rsi
0x6256: mov rdx,rcx
0x6259: mov qword ptr [rbp-0x3c8],rcx
0x6260: call 0x1760
0x6265: mov rcx,qword ptr [rbp-0x3c8]
0x626c: mov r8,qword ptr [rbp-0x3e0]
0x6273: add rbx,rcx
0x6276: mov rsi,qword ptr [r13+0x30]
0x627a: mov rdx,qword ptr [r13+0x38]
0x627e: cmp rsi,rdx
0x6281: je 0x62b3
0x6283: mov rcx,rdx
0x6286: mov rdi,rbx
0x6289: mov qword ptr [rbp-0x3e0],r8
0x6290: sub rcx,rsi
0x6293: mov rdx,rcx
0x6296: mov qword ptr [rbp-0x3c8],rcx
0x629d: call 0x1760
0x62a2: mov rcx,qword ptr [rbp-0x3c8]
0x62a9: mov r8,qword ptr [rbp-0x3e0]
0x62b0: add rbx,rcx
0x62b3: mov edi,dword ptr [rbp-0x3d0]
0x62b9: cmp edi,0x10
0x62bc: ja 0x62eb
0x62be: mov eax,0x1
0x62c3: mov ecx,edi
0x62c5: shl rax,cl
0x62c8: test eax,0x14180
0x62cd: jne 0x62e4
0x62cf: test ah,0x10
0x62d2: jne 0x6c30
0x62d8: test ah,0x6
0x62db: je 0x62eb
0x62dd: mov byte ptr [rbx],0x6c
0x62e0: add rbx,0x1
0x62e4: mov byte ptr [rbx],0x6c
0x62e7: add rbx,0x1
0x62eb: movzx eax,byte ptr [r13+0x48]
0x62f0: mov byte ptr [rbx+0x1],0x0
0x62f4: mov byte ptr [rbx],al
0x62f6: mov rax,qword ptr [r13+0x28]
0x62fa: cmp rax,-0x1
0x62fe: je 0x6a30
0x6304: shl rax,0x5
0x6308: add rax,r8
0x630b: cmp dword ptr [rax],0x5
0x630e: jne 0x6df6
0x6314: mov eax,dword ptr [rax+0x10]
0x6317: mov dword ptr [rbp-0x3e0],0x1
0x6321: mov dword ptr [rbp-0x3b8],eax
0x6327: mov rax,qword ptr [r13+0x40]
0x632b: cmp rax,-0x1
0x632f: je 0x635c
0x6331: shl rax,0x5
0x6335: add r8,rax
0x6338: cmp dword ptr [r8],0x5
0x633c: jne 0x6df6
0x6342: mov eax,dword ptr [rbp-0x3e0]
0x6348: mov edx,dword ptr [r8+0x10]
0x634c: mov dword ptr [rbp+rax*4-0x3b8],edx
0x6353: lea eax,[rax+0x1]
0x6356: mov dword ptr [rbp-0x3e0],eax
0x635c: mov rax,r14
0x635f: xor edx,edx
0x6361: add rax,0x2
0x6365: jb 0x6fcc
0x636b: cmp r12,rax
0x636e: jae 0x63bb
0x6370: test r12,r12
0x6373: jne 0x6b98
0x6379: cmp rax,0xc
0x637d: ja 0x6bb0
0x6383: mov r12d,0xc
0x6389: cmp r15,qword ptr [rbp-0x3e8]
0x6390: sete dl
0x6393: test r15,r15
0x6396: je 0x6be0
0x639c: test dl,dl
0x639e: jne 0x6be0
0x63a4: mov rsi,r12
0x63a7: mov rdi,r15
0x63aa: call 0x17e0
0x63af: test rax,rax
0x63b2: je 0x6035
0x63b8: mov r15,rax
0x63bb: mov byte ptr [r15+r14],0x0
0x63c0: call 0x15b0
0x63c5: mov qword ptr [rbp-0x3c8],rax
0x63cc: mov eax,dword ptr [rax]
0x63ce: mov qword ptr [rbp-0x3f8],rbx
0x63d5: mov dword ptr [rbp-0x424],eax
0x63db: nop dword ptr [rax+rax]
0x63e0: mov rax,qword ptr [rbp-0x3c8]
0x63e7: mov rbx,r12
0x63ea: mov r10d,0x7fffffff
0x63f0: sub rbx,r14
0x63f3: mov dword ptr [rbp-0x3bc],0xffffffff
0x63fd: cmp rbx,0x7fffffff
0x6404: mov dword ptr [rax],0x0
0x640a: mov eax,dword ptr [rbp-0x3d0]
0x6410: cmovbe r10,rbx
0x6414: cmp eax,0x11
0x6417: ja 0x6df6
0x641d: lea rsi,[rip+0x2ca8]
0x6424: movsxd rax,dword ptr [rsi+rax*4]
0x6428: add rax,rsi
0x642b: jmp rax
0x6938: cmp rax,-0x1
0x693c: jne 0x6df6
0x6942: mov rax,r14
0x6945: add rax,0x1
0x6949: mov rbx,rax
0x694c: jae 0x69d8
0x6952: cmp r12,-0x1
0x6956: jne 0x6035
0x695c: mov rbx,r12
0x695f: mov byte ptr [r15+r14],0x25
0x6964: mov r8,qword ptr [r13+0x8]
0x6968: add r13,0x58
0x696c: mov rcx,qword ptr [r13]
0x6970: add qword ptr [rbp-0x400],0x1
0x6978: cmp rcx,r8
0x697b: jne 0x6019
0x6998: call 0x15b0
0x699d: mov qword ptr [rbp-0x3c8],rax
0x69a4: jmp 0x6067
0x69b0: mov edx,edi
0x69b2: sub edx,0x12
0x69b5: cmp edx,0x4
0x69b8: ja 0x6df6
0x69be: lea rdi,[rip+0x274f]
0x69c5: mov rax,qword ptr [rax+0x10]
0x69c9: movsxd rdx,dword ptr [rdi+rdx*4]
0x69cd: add rdx,rdi
0x69d0: jmp rdx
0x69d8: cmp r12,rax
0x69db: jae 0x695f
0x69dd: test r12,r12
0x69e0: jne 0x6db0
0x69e6: cmp rax,0xc
0x69ea: ja 0x6dc2
0x69f0: mov r12d,0xc
0x69f6: cmp r15,qword ptr [rbp-0x3e8]
0x69fd: sete dl
0x6a00: test r15,r15
0x6a03: je 0x6c70
0x6a09: test dl,dl
0x6a0b: jne 0x6c70
0x6a11: mov rsi,r12
0x6a14: mov rdi,r15
0x6a17: call 0x17e0
0x6a1c: test rax,rax
0x6a1f: je 0x6b1b
0x6a25: mov r15,rax
0x6a28: jmp 0x695f
0x6a30: mov dword ptr [rbp-0x3e0],0x0
0x6a3a: jmp 0x6327
0x6a40: js 0x6035
0x6a46: add r12,r12
0x6a49: cmp r12,rax
0x6a4c: jae 0x6126
0x6abe: test dl,dl
0x6ac0: je 0x6cc0
0x6ac6: mov rsi,r15
0x6ac9: mov rdx,rbx
0x6acc: mov rdi,rax
0x6acf: mov qword ptr [rbp-0x3d0],r8
0x6ad6: mov qword ptr [rbp-0x3c8],rcx
0x6add: call 0x1760
0x6ae2: mov rcx,qword ptr [rbp-0x3c8]
0x6ae9: mov r15,rax
0x6aec: mov r8,qword ptr [rbp-0x3d0]
0x6af3: jmp 0x6174
0x6b00: mov r14,r12
0x6b03: jmp 0x6174
0x6b1b: call 0x15b0
0x6b20: mov qword ptr [rbp-0x3c8],rax
0x6b27: nop word ptr [rax+rax]
0x6b98: js 0x6035
0x6b9e: add r12,r12
0x6ba1: cmp r12,rax
0x6ba4: jae 0x6389
0x6baa: nop word ptr [rax+rax]
0x6bb0: test rdx,rdx
0x6bb3: jne 0x6035
0x6bb9: cmp rax,-0x1
0x6bbd: je 0x6035
0x6bc3: cmp r15,qword ptr [rbp-0x3e8]
0x6bca: mov r12,rax
0x6bcd: sete dl
0x6bd0: test r15,r15
0x6bd3: jne 0x639c
0x6bd9: nop dword ptr [rax]
0x6be0: mov rdi,r12
0x6be3: mov byte ptr [rbp-0x3c8],dl
0x6be9: call 0x1790
0x6bee: test rax,rax
0x6bf1: mov rcx,rax
0x6bf4: movzx edx,byte ptr [rbp-0x3c8]
0x6bfb: je 0x6035
0x6c01: test r14,r14
0x6c04: je 0x6da0
0x6c0a: test dl,dl
0x6c0c: je 0x6da0
0x6c12: mov rsi,r15
0x6c15: mov rdx,r14
0x6c18: mov rdi,rax
0x6c1b: call 0x1760
0x6c20: mov r15,rax
0x6c23: jmp 0x63bb
0x6c30: mov byte ptr [rbx],0x4c
0x6c33: add rbx,0x1
0x6c37: jmp 0x62eb
0x6c70: mov rdi,r12
0x6c73: mov byte ptr [rbp-0x3c8],dl
0x6c79: call 0x1790
0x6c7e: test rax,rax
0x6c81: mov rcx,rax
0x6c84: movzx edx,byte ptr [rbp-0x3c8]
0x6c8b: je 0x6035
0x6c91: test r14,r14
0x6c94: je 0x6dd4
0x6c9a: test dl,dl
0x6c9c: je 0x6dd4
0x6ca2: mov rsi,r15
0x6ca5: mov rdx,r14
0x6ca8: mov rdi,rax
0x6cab: call 0x1760
0x6cb0: mov r15,rax
0x6cb3: jmp 0x695f
0x6da0: mov r15,rcx
0x6da3: jmp 0x63bb
0x6db0: js 0x6035
0x6db6: add r12,r12
0x6db9: cmp r12,rax
0x6dbc: jae 0x69f6
0x6dc2: cmp rax,-0x1
0x6dc6: je 0x6035
0x6dcc: mov r12,rax
0x6dcf: jmp 0x69f6
0x6dd4: mov r15,rcx
0x6dd7: jmp 0x695f
0x6df6: call 0x15a0
0x6dfb: nop dword ptr [rax+rax]
0x6e17: call 0x1590
0x6edd: mov rdi,rax
0x6ee0: call 0x1590
0x6efc: call 0x1590
0x6fcc: cmp r12,-0x1
0x6fd0: mov edx,0x1
0x6fd5: je 0x63bb
0x6fdb: test r12,r12
0x6fde: je 0x6035
0x6fe4: jns 0x6bb0
0x6fea: jmp 0x6035
0x75fe: mov rdi,rcx
0x7601: call 0x17e0
0x7606: mov rdx,qword ptr [r15+0x8]
0x760a: mov r8,qword ptr [rsp+0x30]
0x760f: mov rcx,rax
0x7612: mov r10,qword ptr [rsp+0x38]
0x7617: mov r9,qword ptr [rsp+0x40]
0x7a59: call 0x1590
0x7cf7: call 0x1590
0x7f50: rep ret 
0x88f7: jmp qword ptr [rip+0x6affffb9]
