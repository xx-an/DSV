0x1cb8: sub rsp,0x8
0x1cbc: mov rax,qword ptr [rip+0x211315]
0x1cc3: test rax,rax
0x1cc6: je 0x1cca
0x1cc8: call rax
0x1cca: add rsp,0x8
0x1cce: ret 
0x1cd6: jmp qword ptr [rip+0x21103c]
0x1ce0: jmp qword ptr [rip+0x21103a]
0x1d00: jmp qword ptr [rip+0x21102a]
0x1d20: jmp qword ptr [rip+0x21101a]
0x1d60: jmp qword ptr [rip+0x210ffa]
0x1d70: jmp qword ptr [rip+0x210ff2]
0x1d80: jmp qword ptr [rip+0x210fea]
0x1d90: jmp qword ptr [rip+0x210fe2]
0x1db0: jmp qword ptr [rip+0x210fd2]
0x1dc0: jmp qword ptr [rip+0x210fca]
0x1dd0: jmp qword ptr [rip+0x210fc2]
0x1df0: jmp qword ptr [rip+0x210fb2]
0x1e00: jmp qword ptr [rip+0x210faa]
0x1e60: jmp qword ptr [rip+0x210f7a]
0x1e70: jmp qword ptr [rip+0x210f72]
0x1e80: jmp qword ptr [rip+0x210f6a]
0x1ea0: jmp qword ptr [rip+0x210f5a]
0x1eb0: jmp qword ptr [rip+0x210f52]
0x1ec0: jmp qword ptr [rip+0x210f4a]
0x1ef0: jmp qword ptr [rip+0x210f32]
0x1f00: jmp qword ptr [rip+0x210f2a]
0x1f10: jmp qword ptr [rip+0x210f22]
0x1f30: jmp qword ptr [rip+0x210f12]
0x1f40: jmp qword ptr [rip+0x210f0a]
0x1f50: jmp qword ptr [rip+0x210f02]
0x1f70: jmp qword ptr [rip+0x210ef2]
0x1fa0: jmp qword ptr [rip+0x210eda]
0x1fb0: jmp qword ptr [rip+0x210ed2]
0x1fc0: jmp qword ptr [rip+0x210eca]
0x1fd0: jmp qword ptr [rip+0x210ec2]
0x1ff0: jmp qword ptr [rip+0x210eb2]
0x2000: jmp qword ptr [rip+0x210eaa]
0x2040: jmp qword ptr [rip+0x210e8a]
0x2050: jmp qword ptr [rip+0x210e82]
0x2060: jmp qword ptr [rip+0x210e7a]
0x2070: jmp qword ptr [rip+0x210e72]
0x2090: jmp qword ptr [rip+0x210e62]
0x20a0: jmp qword ptr [rip+0x210e5a]
0x20b0: jmp qword ptr [rip+0x210e52]
0x20c0: jmp qword ptr [rip+0x210e4a]
0x2100: jmp qword ptr [rip+0x210e2a]
0x2110: jmp qword ptr [rip+0x210e22]
0x2130: jmp qword ptr [rip+0x210e12]
0x2140: jmp qword ptr [rip+0x210e0a]
0x2150: jmp qword ptr [rip+0x210e02]
0x2160: jmp qword ptr [rip+0x210dfa]
0x2170: jmp qword ptr [rip+0x210df2]
0x21c0: jmp qword ptr [rip+0x210dca]
0x21d0: jmp qword ptr [rip+0x210dc2]
0x21e0: jmp qword ptr [rip+0x210dba]
0x2200: jmp qword ptr [rip+0x210daa]
0x2220: jmp qword ptr [rip+0x210d9a]
0x2230: jmp qword ptr [rip+0x210db2]
0x22c8: mov dword ptr [rip+0x210eca],edi
0x2346: nop word ptr cs:[rax+rax]
0x25b5: lea rsi,[rip+0xcc3c]
0x25bc: mov r15,rax
0x25bf: mov edx,0x5
0x25c4: xor edi,edi
0x25c6: call 0x1e20
0x25cb: mov rcx,r15
0x25ce: mov rdx,rax
0x25d1: xor esi,esi
0x25d3: xor eax,eax
0x25d5: xor edi,edi
0x25d7: call 0x2120
0x25dc: xor eax,eax
0x25de: jmp 0x2508
0x2673: xor eax,eax
0x2675: jmp 0x2508
0x2687: lea rsi,[rip+0xcbb2]
0x268e: mov qword ptr [rsp+0x18],rax
0x2693: mov edx,0x5
0x2698: xor edi,edi
0x269a: call 0x1e20
0x269f: mov r15,rax
0x26a2: call 0x1d40
0x26a7: mov rcx,qword ptr [rsp+0x18]
0x26ac: mov esi,dword ptr [rax]
0x26ae: mov rdx,r15
0x26b1: xor eax,eax
0x26b3: xor edi,edi
0x26b5: call 0x2120
0x26ba: xor eax,eax
0x26bc: jmp 0x2508
0x26ce: mov edx,0x5
0x26d3: mov qword ptr [rsp+0x18],rax
0x26d8: lea rsi,[rip+0xb863]
0x26df: jmp 0x2698
0x26f5: lea rsi,[rip+0xcab4]
0x26fc: mov r12,rax
0x26ff: mov edx,0x5
0x2704: xor edi,edi
0x2706: call 0x1e20
0x270b: mov rcx,r12
0x270e: mov rdx,rax
0x2711: xor esi,esi
0x2713: xor edi,edi
0x2715: xor eax,eax
0x2717: call 0x2120
0x271c: mov qword ptr [rsp+0x10],r13
0x2721: jmp 0x249b
0x2779: call 0x1e80
0x279f: jmp 0x233c
0x27da: hlt 
0x27db: nop dword ptr [rax+rax]
0x27e0: lea rdi,[rip+0x2108b9]
0x27e7: push rbp
0x27e8: lea rax,[rip+0x2108b1]
0x27ef: cmp rax,rdi
0x27f2: mov rbp,rsp
0x27f5: je 0x2810
0x27f7: mov rax,qword ptr [rip+0x2107ca]
0x27fe: test rax,rax
0x2801: je 0x2810
0x2803: pop rbp
0x2804: jmp rax
0x2810: pop rbp
0x2811: ret 
0x2820: lea rdi,[rip+0x210879]
0x2827: lea rsi,[rip+0x210872]
0x282e: push rbp
0x282f: sub rsi,rdi
0x2832: mov rbp,rsp
0x2835: sar rsi,0x3
0x2839: mov rax,rsi
0x283c: shr rax,0x3f
0x2840: add rsi,rax
0x2843: sar rsi, 1
0x2846: je 0x2860
0x2848: mov rax,qword ptr [rip+0x210791]
0x284f: test rax,rax
0x2852: je 0x2860
0x2854: pop rbp
0x2855: jmp rax
0x2860: pop rbp
0x2861: ret 
0x2881: push rbp
0x2882: mov rbp,rsp
0x2885: je 0x2893
0x2887: mov rdi,qword ptr [rip+0x21077a]
0x288e: call 0x2230
0x2893: call 0x27e0
0x2898: mov byte ptr [rip+0x210849],0x1
0x289f: pop rbp
0x28a0: ret 
0x28b0: push rbp
0x28b1: mov rbp,rsp
0x28b4: pop rbp
0x28b5: jmp 0x2820
0x28c0: push r15
0x28c2: push r14
0x28c4: push r13
0x28c6: push r12
0x28c8: lea r12,[rdi+rsi]
0x28cc: push rbp
0x28cd: lea rbp,[rdi+0x1]
0x28d1: push rbx
0x28d2: lea r13,[rip+0xba0f]
0x28d9: sub rsp,0x18
0x28dd: cmp rbp,r12
0x28e0: mov rbx,rbp
0x28e3: mov qword ptr [rsp],rdx
0x28e7: mov qword ptr [rsp+0x8],rcx
0x28ec: jb 0x2912
0x28ee: jmp 0x295b
0x28f0: mov rdi,qword ptr [rsp]
0x28f4: mov esi,r14d
0x28f7: call 0x1eb0
0x28fc: test rax,rax
0x28ff: je 0x2909
0x2901: mov byte ptr [rbp],r15b
0x2905: add rbp,0x1
0x2909: add rbx,0x1
0x290d: cmp r12,rbx
0x2910: jbe 0x295b
0x2912: movsx r14d,byte ptr [rbx]
0x2916: mov rdi,r13
0x2919: mov esi,r14d
0x291c: mov r15d,r14d
0x291f: call 0x1eb0
0x2924: test rax,rax
0x2927: jne 0x28f0
0x2929: cmp rbx,r12
0x292c: jae 0x295b
0x292e: mov rsi,r12
0x2931: mov rcx,rbx
0x2934: mov rax,rbp
0x2937: sub rsi,rbx
0x293a: add rsi,rbp
0x293d: jmp 0x2944
0x2940: movzx r15d,byte ptr [rcx]
0x2944: add rax,0x1
0x2948: add rcx,0x1
0x294c: mov byte ptr [rax-0x1],r15b
0x2950: cmp rax,rsi
0x2953: jne 0x2940
0x2955: sub r12,rbx
0x2958: add rbp,r12
0x295b: mov rsi,qword ptr [rsp+0x8]
0x2960: add rsp,0x18
0x2964: mov rdi,rbp
0x2967: pop rbx
0x2968: pop rbp
0x2969: pop r12
0x296b: pop r13
0x296d: pop r14
0x296f: pop r15
0x2971: jmp 0x1d80
0x2980: push rbp
0x2981: push rbx
0x2982: mov rbp,rdx
0x2985: lea rcx,[rip+0xb0f8]
0x298c: lea rdx,[rip+0xb0f4]
0x2993: mov rbx,rdi
0x2996: sub rsp,0x8
0x299a: call 0x28c0
0x299f: add rsp,0x8
0x29a3: mov rdx,rbp
0x29a6: mov rsi,rbx
0x29a9: pop rbx
0x29aa: pop rbp
0x29ab: mov edi,0x1
0x29b0: xor eax,eax
0x29b2: jmp 0x20f0
0x29c0: push rbp
0x29c1: push rbx
0x29c2: mov rbp,rdx
0x29c5: lea rcx,[rip+0xc99f]
0x29cc: lea rdx,[rip+0xcc6f]
0x29d3: mov rbx,rdi
0x29d6: sub rsp,0x8
0x29da: call 0x28c0
0x29df: add rsp,0x8
0x29e3: mov rdx,rbp
0x29e6: mov rsi,rbx
0x29e9: pop rbx
0x29ea: pop rbp
0x29eb: mov edi,0x1
0x29f0: xor eax,eax
0x29f2: jmp 0x20f0
0x2a00: push rbp
0x2a01: push rbx
0x2a02: mov rbp,rdx
0x2a05: lea rcx,[rip+0xb07f]
0x2a0c: lea rdx,[rip+0xb07b]
0x2a13: mov rbx,rdi
0x2a16: sub rsp,0x8
0x2a1a: call 0x28c0
0x2a1f: add rsp,0x8
0x2a23: mov rdx,rbp
0x2a26: mov rsi,rbx
0x2a29: pop rbx
0x2a2a: pop rbp
0x2a2b: mov edi,0x1
0x2a30: xor eax,eax
0x2a32: jmp 0x20f0
0x2a40: push rbp
0x2a41: push rbx
0x2a42: mov rbp,rdx
0x2a45: lea rcx,[rip+0xb046]
0x2a4c: lea rdx,[rip+0xb042]
0x2a53: mov rbx,rdi
0x2a56: sub rsp,0x8
0x2a5a: call 0x28c0
0x2a5f: add rsp,0x8
0x2a63: mov rdx,rbp
0x2a66: mov rsi,rbx
0x2a69: pop rbx
0x2a6a: pop rbp
0x2a6b: mov edi,0x1
0x2a70: xor eax,eax
0x2a72: jmp 0x20f0
0x2ba8: mov rsi,rbp
0x2bab: mov rdi,rbx
0x2bae: call 0x29c0
0x2bb3: jmp 0x2ac8
0x2fea: jmp 0x2ac8
0x36e8: jmp 0x2ba8
0x3a8b: jmp 0x3825
0x3ada: nop word ptr [rax+rax]
0x3ae0: mov rdi,qword ptr [rip+0x20f5c1]
0x3ae7: add r12,0x2
0x3aeb: mov rax,qword ptr [rdi+0x28]
0x3aef: cmp rax,qword ptr [rdi+0x30]
0x3af3: jae 0x3bd0
0x3af9: lea rdx,[rax+0x1]
0x3afd: mov qword ptr [rdi+0x28],rdx
0x3b01: mov byte ptr [rax],r14b
0x3b04: mov r14,rbp
0x3b07: jmp 0x3825
0x3b1a: jmp 0x3825
0x3b30: jmp 0x3825
0x3bb7: jmp 0x39d6
0x3bd0: movzx esi,r13b
0x3bd4: mov r14,rbp
0x3bd7: call 0x1ed0
0x3bdc: jmp 0x3825
0x3c0c: jmp 0x3825
0x3c28: lea rsi,[rip+0xa16a]
0x3c2f: mov rbx,rax
0x3c32: mov edx,0x5
0x3c37: xor edi,edi
0x3c39: call 0x1e20
0x3c3e: mov rcx,rbx
0x3c41: mov rdx,rax
0x3c44: xor esi,esi
0x3c46: mov edi,0x1
0x3c4b: xor eax,eax
0x3c4d: call 0x2120
0x3c52: nop dword ptr [rax]
0x3c56: nop word ptr cs:[rax+rax]
0x3c60: push rbp
0x3c61: push rbx
0x3c62: sub rsp,0x78
0x3c66: mov qword ptr [rsp],rdi
0x3c6a: mov rdi,qword ptr [rip+0x20f4cf]
0x3c71: mov rax,qword ptr fs:0x28
0x3c7a: mov qword ptr [rsp+0x68],rax
0x3c7f: xor eax,eax
0x3c81: mov qword ptr [rsp+0x8],rsi
0x3c86: test rdi,rdi
0x3c89: je 0x3d28
0x3c8f: lea rbx,[rsp+0x10]
0x3c94: mov rsi,rsp
0x3c97: mov rbp,qword ptr [rsp+0x8]
0x3c9c: mov rdx,rbx
0x3c9f: call 0xafc0
0x3ca4: test rax,rax
0x3ca7: je 0x3cf0
0x3ca9: mov r8,qword ptr [rip+0x20f490]
0x3cb0: lea rdx,[rip+0xa0fb]
0x3cb7: lea rdi,[rip+0x20f442]
0x3cbe: mov r9d,ebp
0x3cc1: mov rcx,rbx
0x3cc4: mov esi,0x3d
0x3cc9: call 0x7770
0x3cce: mov rcx,qword ptr [rsp+0x68]
0x3cd3: xor rcx,qword ptr fs:0x28
0x3cdc: lea rax,[rip+0x20f41d]
0x3ce3: jne 0x3d4b
0x3ce5: add rsp,0x78
0x3ce9: pop rbx
0x3cea: pop rbp
0x3ceb: ret 
0x3cf0: mov rdi,qword ptr [rsp]
0x3cf4: lea rsi,[rsp+0x50]
0x3cf9: call 0x5b70
0x3cfe: lea rcx,[rip+0xa0c5]
0x3d05: lea rdi,[rip+0x20f3f4]
0x3d0c: mov r8,rax
0x3d0f: mov r9d,ebp
0x3d12: mov edx,0x3d
0x3d17: mov esi,0x1
0x3d1c: xor eax,eax
0x3d1e: call 0x2220
0x3d23: jmp 0x3cce
0x3d28: lea rdi,[rip+0xa080]
0x3d2f: call 0x1cf0
0x3d34: mov rdi,rax
0x3d37: call 0xad00
0x3d3c: mov rdi,rax
0x3d3f: mov qword ptr [rip+0x20f3fa],rax
0x3d46: jmp 0x3c8f
0x3d4b: call 0x1e80
0x3d50: push r13
0x3d52: push r12
0x3d54: mov r12,rdi
0x3d57: push rbp
0x3d58: push rbx
0x3d59: sub rsp,0x138
0x3d60: mov rax,qword ptr fs:0x28
0x3d69: mov qword ptr [rsp+0x128],rax
0x3d71: xor eax,eax
0x3d73: cmp byte ptr [rip+0x20f3d6],0x0
0x3d7a: je 0x3e38
0x3d80: mov rdx,rsp
0x3d83: mov rsi,r12
0x3d86: mov edi,0x1
0x3d8b: call 0x2020
0x3d90: test eax,eax
0x3d92: jne 0x3e10
0x3d94: mov rbx,qword ptr [rip+0x20f3ad]
0x3d9b: test rbx,rbx
0x3d9e: je 0x3e10
0x3da0: lea r13,[rsp+0x90]
0x3da8: jmp 0x3db9
0x3db0: mov rbx,qword ptr [rbx+0x30]
0x3db4: test rbx,rbx
0x3db7: je 0x3e10
0x3db9: test byte ptr [rbx+0x28],0x1
0x3dbd: je 0x3db0
0x3dbf: mov rbp,qword ptr [rbx]
0x3dc2: cmp byte ptr [rbp],0x2f
0x3dc6: jne 0x3db0
0x3dc8: mov rdi,qword ptr [rbx+0x8]
0x3dcc: mov rsi,r12
0x3dcf: call 0x1fc0
0x3dd4: test eax,eax
0x3dd6: jne 0x3db0
0x3dd8: mov rdx,r13
0x3ddb: mov rsi,rbp
0x3dde: mov edi,0x1
0x3de3: call 0x2020
0x3de8: test eax,eax
0x3dea: jne 0x3db0
0x3dec: mov rax,qword ptr [rsp+0x98]
0x3df4: cmp qword ptr [rsp+0x8],rax
0x3df9: jne 0x3db0
0x3dfb: mov rax,qword ptr [rsp+0x90]
0x3e03: cmp qword ptr [rsp],rax
0x3e07: jne 0x3db0
0x3e09: mov rax,qword ptr [rbx]
0x3e0c: jmp 0x3e12
0x3e10: xor eax,eax
0x3e12: mov rcx,qword ptr [rsp+0x128]
0x3e1a: xor rcx,qword ptr fs:0x28
0x3e23: jne 0x3e89
0x3e25: add rsp,0x138
0x3e2c: pop rbx
0x3e2d: pop rbp
0x3e2e: pop r12
0x3e30: pop r13
0x3e32: ret 
0x3e38: xor edi,edi
0x3e3a: call 0xa3f0
0x3e3f: test rax,rax
0x3e42: mov qword ptr [rip+0x20f2ff],rax
0x3e49: je 0x3e57
0x3e4b: mov byte ptr [rip+0x20f2fe],0x1
0x3e52: jmp 0x3d80
0x3e57: lea rsi,[rip+0xa4f2]
0x3e5e: xor edi,edi
0x3e60: mov edx,0x5
0x3e65: call 0x1e20
0x3e6a: mov rbx,rax
0x3e6d: call 0x1d40
0x3e72: mov esi,dword ptr [rax]
0x3e74: lea rdx,[rip+0xb4ef]
0x3e7b: mov rcx,rbx
0x3e7e: xor edi,edi
0x3e80: xor eax,eax
0x3e82: call 0x2120
0x3e87: jmp 0x3e4b
0x3e89: call 0x1e80
0x3e8e: nop 
0x3ed8: test bl,bl
0x3eda: mov r12,rax
0x3edd: mov edx,0x5
0x3ee2: lea rsi,[rip+0xa587]
0x3ee9: jne 0x3ef2
0x3eeb: lea rsi,[rip+0xa5be]
0x3ef2: xor edi,edi
0x3ef4: call 0x1e20
0x3ef9: lea rdi,[rip+0x9ed2]
0x3f00: mov rdx,rax
0x3f03: mov rsi,r12
0x3f06: xor eax,eax
0x3f08: call 0x9e60
0x3f0d: mov rdi,r12
0x3f10: mov rbp,rax
0x3f13: call 0x1d10
0x3f18: lea rsi,[rip+0xa5c1]
0x3f1f: mov edx,0x5
0x3f24: xor edi,edi
0x3f26: call 0x1e20
0x3f2b: lea rdi,[rip+0x9ea0]
0x3f32: mov rdx,rax
0x3f35: mov rsi,rbp
0x3f38: xor eax,eax
0x3f3a: call 0x9e60
0x3f3f: mov rdi,rbp
0x3f42: mov rbx,rax
0x3f45: call 0x1d10
0x3f4a: lea rsi,[rip+0xa5cf]
0x3f51: mov edx,0x5
0x3f56: xor edi,edi
0x3f58: call 0x1e20
0x3f5d: lea rdi,[rip+0x9e6e]
0x3f64: mov rdx,rax
0x3f67: mov rsi,rbx
0x3f6a: xor eax,eax
0x3f6c: call 0x9e60
0x3f71: mov rdi,rbx
0x3f74: mov rbp,rax
0x3f77: call 0x1d10
0x3f7c: mov rax,rbp
0x3f7f: pop rbx
0x3f80: pop rbp
0x3f81: pop r12
0x3f83: ret 
0x3fc0: push r15
0x3fc2: push r14
0x3fc4: push r13
0x3fc6: push r12
0x3fc8: mov r13,rdx
0x3fcb: push rbp
0x3fcc: push rbx
0x3fcd: mov r12,rdx
0x3fd0: mov rdx,rsi
0x3fd3: mov rbp,rdi
0x3fd6: mov rbx,rcx
0x3fd9: sub rsp,0x18
0x3fdd: mov qword ptr [rsp],rsi
0x3fe1: mov esi,0x2e
0x3fe6: call 0x1f70
0x3feb: test rax,rax
0x3fee: mov r10,qword ptr [rsp]
0x3ff2: je 0x4150
0x3ff8: mov rcx,rax
0x3ffb: mov r15,rax
0x3ffe: mov byte ptr [rbp+r10],0x0
0x4004: movsx eax,byte ptr [rax+0x1]
0x4008: sub rcx,rbp
0x400b: sub eax,0x30
0x400e: cmp eax,0x9
0x4011: jbe 0x40e0
0x4017: movsx eax,byte ptr [r15-0x1]
0x401c: sub eax,0x30
0x401f: cmp eax,0x9
0x4022: jbe 0x4200
0x4028: mov r10,rcx
0x402b: mov r15,rbx
0x402e: mov esi,0x1
0x4033: mov dword ptr [rsp],0x0
0x403a: mov r14d,0x9
0x4040: mov ecx,0x1
0x4045: nop dword ptr [rax]
0x4048: test r12,r12
0x404b: jns 0x4056
0x404d: test rbx,rbx
0x4050: jne 0x4190
0x4056: mov rdx,r13
0x4059: mov rsi,r10
0x405c: mov rdi,rbp
0x405f: call 0x2a40
0x4064: test r14d,r14d
0x4067: je 0x40c9
0x4069: cmp r14d,0x9
0x406d: mov ecx,0x9
0x4072: mov ebx,dword ptr [rsp]
0x4075: cmovle ecx,r14d
0x4079: mov edx,0x0
0x407e: sub r14d,ecx
0x4081: test eax,eax
0x4083: cmovs eax,edx
0x4086: xor r9d,r9d
0x4089: cmp eax,ebx
0x408b: jge 0x40a6
0x408d: mov ebp,ebx
0x408f: sub ebp,eax
0x4091: mov rax,qword ptr [rip+0x20f0f8]
0x4098: movsxd rdx,ebp
0x409b: sub ebp,eax
0x409d: sub ebp,ecx
0x409f: cmp rdx,rax
0x40a2: cmova r9d,ebp
0x40a6: mov rdx,qword ptr [rip+0x20f0eb]
0x40ad: push 0x0
0x40af: lea rsi,[rip+0x9d25]
0x40b6: push r14
0x40b8: mov r8d,r15d
0x40bb: mov edi,0x1
0x40c0: xor eax,eax
0x40c2: call 0x20f0
0x40c7: pop rax
0x40c8: pop rdx
0x40c9: add rsp,0x18
0x40cd: pop rbx
0x40ce: pop rbp
0x40cf: pop r12
0x40d1: pop r13
0x40d3: pop r14
0x40d5: pop r15
0x40d7: ret 
0x40e0: lea rdi,[r15+0x1]
0x40e4: mov edx,0xa
0x40e9: xor esi,esi
0x40eb: mov qword ptr [rsp],rcx
0x40ef: call 0x1fd0
0x40f4: mov edx,0x7fffffff
0x40f9: cmp rax,0x7fffffff
0x40ff: mov rcx,qword ptr [rsp]
0x4103: cmovg rax,rdx
0x4107: test eax,eax
0x4109: mov r14d,eax
0x410c: je 0x42d0
0x4112: movsx eax,byte ptr [r15-0x1]
0x4117: sub eax,0x30
0x411a: cmp eax,0x9
0x411d: jbe 0x4206
0x4123: mov r10,rcx
0x4126: mov dword ptr [rsp],0x0
0x412d: nop dword ptr [rax]
0x4130: cmp r14d,0x8
0x4134: jle 0x415a
0x4136: mov r15,rbx
0x4139: mov esi,0x1
0x413e: mov ecx,0x1
0x4143: jmp 0x4048
0x4150: mov dword ptr [rsp],0x0
0x4157: xor r14d,r14d
0x415a: mov esi,r14d
0x415d: mov ecx,0x1
0x4162: nop word ptr [rax+rax]
0x4168: lea ecx,[rcx+rcx*4]
0x416b: add esi,0x1
0x416e: add ecx,ecx
0x4170: cmp esi,0x9
0x4173: jne 0x4168
0x4175: mov rax,rbx
0x4178: movsxd rsi,ecx
0x417b: cqto 
0x417d: idiv rsi
0x4180: mov r15,rax
0x4183: jmp 0x4048
0x4190: mov eax,0x3b9aca00
0x4195: cltd 
0x4196: idiv ecx
0x4198: sub eax,r15d
0x419b: mov r15d,eax
0x419e: mov rax,rbx
0x41a1: cqto 
0x41a3: idiv rsi
0x41a6: xor eax,eax
0x41a8: test rdx,rdx
0x41ab: setne al
0x41ae: xor r13d,r13d
0x41b1: sub r15d,eax
0x41b4: setne r13b
0x41b8: add r13,r12
0x41bb: jne 0x4056
0x41c1: lea rcx,[rip+0x9c0f]
0x41c8: lea rdx,[rip+0x98c6]
0x41cf: mov rsi,r10
0x41d2: mov rdi,rbp
0x41d5: call 0x28c0
0x41da: movsd xmm0,dword ptr [rip+0xb08e]
0x41e2: mov rsi,rbp
0x41e5: mov edi,0x1
0x41ea: mov eax,0x1
0x41ef: call 0x20f0
0x41f4: jmp 0x4064
0x4200: mov r14d,0x9
0x4206: mov byte ptr [r15],0x0
0x420a: nop word ptr [rax+rax]
0x4210: sub r15,0x1
0x4214: movsx eax,byte ptr [r15-0x1]
0x4219: sub eax,0x30
0x421c: cmp eax,0x9
0x421f: jbe 0x4210
0x4221: mov edx,0xa
0x4226: xor esi,esi
0x4228: mov rdi,r15
0x422b: mov qword ptr [rsp+0x8],rcx
0x4230: call 0x1fd0
0x4235: mov edx,0x7fffffff
0x423a: cmp rax,0x7fffffff
0x4240: mov rcx,qword ptr [rsp+0x8]
0x4245: cmovg rax,rdx
0x4249: cmp eax,0x1
0x424c: mov dword ptr [rsp],eax
0x424f: mov r10,rcx
0x4252: jle 0x4130
0x4258: xor edx,edx
0x425a: cmp byte ptr [r15],0x30
0x425e: movsxd rcx,eax
0x4261: sete dl
0x4264: add r15,rdx
0x4267: mov rdx,qword ptr [rip+0x20ef22]
0x426e: mov r10,r15
0x4271: sub r10,rbp
0x4274: cmp rcx,rdx
0x4277: jbe 0x4130
0x427d: sub eax,edx
0x427f: cmp eax,0x1
0x4282: jle 0x4130
0x4288: sub eax,r14d
0x428b: cmp eax,0x1
0x428e: jle 0x4130
0x4294: cmp rbp,r15
0x4297: mov rdi,rbp
0x429a: jae 0x42f5
0x429c: mov rdx,rbp
0x429f: xor esi,esi
0x42a1: jmp 0x42b7
0x42a8: mov byte ptr [rdi],cl
0x42aa: add rdi,0x1
0x42ae: add rdx,0x1
0x42b2: cmp r15,rdx
0x42b5: je 0x42df
0x42b7: movzx ecx,byte ptr [rdx]
0x42ba: cmp cl,0x2d
0x42bd: jne 0x42a8
0x42bf: mov esi,0x1
0x42c4: jmp 0x42ae
0x42d0: mov dword ptr [rsp],0x0
0x42d7: mov r10,rcx
0x42da: jmp 0x415a
0x42df: mov r15,rdi
0x42e2: xor r10d,r10d
0x42e5: sub r15,rbp
0x42e8: test sil,sil
0x42eb: je 0x42f8
0x42ed: add r10,r15
0x42f0: jmp 0x4130
0x42f5: xor r15d,r15d
0x42f8: lea rcx,[rip+0xb105]
0x42ff: mov r8d,eax
0x4302: mov rdx,-0x1
0x4309: mov esi,0x1
0x430e: xor eax,eax
0x4310: call 0x2220
0x4315: movsxd r10,eax
0x4318: jmp 0x42ed
0x48ca: jmp 0x436e
0x4e40: push rbp
0x4e41: mov rbp,rsp
0x4e44: push r15
0x4e46: push r14
0x4e48: push r13
0x4e4a: lea r13,[rbp-0x170]
0x4e51: push r12
0x4e53: push rbx
0x4e54: mov r12,rdi
0x4e57: mov rbx,rsi
0x4e5a: mov rdi,r13
0x4e5d: sub rsp,0x148
0x4e64: mov rax,qword ptr fs:0x28
0x4e6d: mov qword ptr [rbp-0x38],rax
0x4e71: xor eax,eax
0x4e73: call 0x94f0
0x4e78: mov r15d,eax
0x4e7b: call 0x1d40
0x4e80: test r15d,r15d
0x4e83: mov r14,rax
0x4e86: jne 0x51a5
0x4e8c: mov eax,dword ptr [rbx+0x18]
0x4e8f: and eax,0xf000
0x4e94: cmp eax,0x4000
0x4e99: je 0x5080
0x4e9f: mov rdi,r12
0x4ea2: call 0x5750
0x4ea7: mov rdi,rax
0x4eaa: mov rbx,rax
0x4ead: call 0x1e40
0x4eb2: lea rdx,[rax+0x1]
0x4eb6: add rax,0x1f
0x4eba: mov rsi,rbx
0x4ebd: and rax,-0x10
0x4ec1: sub rsp,rax
0x4ec4: lea rdi,[rsp+0xf]
0x4ec9: and rdi,-0x10
0x4ecd: call 0x1fe0
0x4ed2: mov rdi,rbx
0x4ed5: mov r12,rax
0x4ed8: call 0x1d10
0x4edd: mov rdi,r12
0x4ee0: call 0x1e70
0x4ee5: test eax,eax
0x4ee7: js 0x50fe
0x4eed: lea rdx,[rbp-0x160]
0x4ef4: lea rsi,[rip+0xa3b9]
0x4efb: mov edi,0x1
0x4f00: call 0x2020
0x4f05: test eax,eax
0x4f07: js 0x5140
0x4f0d: lea r12,[rbp-0xd0]
0x4f14: lea rbx,[rip+0xa398]
0x4f1b: jmp 0x4fd3
0x4f20: mov rax,qword ptr [rbp-0x160]
0x4f27: cmp qword ptr [rbp-0xd0],rax
0x4f2e: jne 0x5070
0x4f34: mov rax,qword ptr [rbp-0x158]
0x4f3b: cmp qword ptr [rbp-0xc8],rax
0x4f42: je 0x5070
0x4f48: mov rdi,rbx
0x4f4b: call 0x1e70
0x4f50: test eax,eax
0x4f52: js 0x5180
0x4f58: movdqa xmm0,[rbp-0xd0]
0x4f60: movaps [rbp-0x160],xmm0
0x4f67: movdqa xmm0,[rbp-0xc0]
0x4f6f: movaps [rbp-0x150],xmm0
0x4f76: movdqa xmm0,[rbp-0xb0]
0x4f7e: movaps [rbp-0x140],xmm0
0x4f85: movdqa xmm0,[rbp-0xa0]
0x4f8d: movaps [rbp-0x130],xmm0
0x4f94: movdqa xmm0,[rbp-0x90]
0x4f9c: movaps [rbp-0x120],xmm0
0x4fa3: movdqa xmm0,[rbp-0x80]
0x4fa8: movaps [rbp-0x110],xmm0
0x4faf: movdqa xmm0,[rbp-0x70]
0x4fb4: movaps [rbp-0x100],xmm0
0x4fbb: movdqa xmm0,[rbp-0x60]
0x4fc0: movaps [rbp-0xf0],xmm0
0x4fc7: movdqa xmm0,[rbp-0x50]
0x4fcc: movaps [rbp-0xe0],xmm0
0x4fd3: mov rdx,r12
0x4fd6: mov rsi,rbx
0x4fd9: mov edi,0x1
0x4fde: call 0x2020
0x4fe3: test eax,eax
0x4fe5: jns 0x4f20
0x4feb: lea rsi,[rip+0xa2c1]
0x4ff2: mov edi,0x4
0x4ff7: call 0x9200
0x4ffc: lea rsi,[rip+0x8f3f]
0x5003: mov rbx,rax
0x5006: mov edx,0x5
0x500b: xor edi,edi
0x500d: call 0x1e20
0x5012: mov esi,dword ptr [r14]
0x5015: mov rcx,rbx
0x5018: mov rdx,rax
0x501b: xor edi,edi
0x501d: xor eax,eax
0x501f: xor ebx,ebx
0x5021: call 0x2120
0x5026: mov rdi,r13
0x5029: mov r12d,dword ptr [r14]
0x502c: call 0x9540
0x5031: test eax,eax
0x5033: jne 0x51ce
0x5039: mov rdi,r13
0x503c: call 0x9560
0x5041: mov dword ptr [r14],r12d
0x5044: mov rcx,qword ptr [rbp-0x38]
0x5048: xor rcx,qword ptr fs:0x28
0x5051: mov rax,rbx
0x5054: jne 0x51f3
0x505a: lea rsp,[rbp-0x28]
0x505e: pop rbx
0x505f: pop r12
0x5061: pop r13
0x5063: pop r14
0x5065: pop r15
0x5067: pop rbp
0x5068: ret 
0x5070: call 0x9e30
0x5075: mov rbx,rax
0x5078: jmp 0x5026
0x5080: movdqu xmm0,[rbx]
0x5084: mov rdi,r12
0x5087: movaps [rbp-0x160],xmm0
0x508e: movdqu xmm0,[rbx+0x10]
0x5093: movaps [rbp-0x150],xmm0
0x509a: movdqu xmm0,[rbx+0x20]
0x509f: movaps [rbp-0x140],xmm0
0x50a6: movdqu xmm0,[rbx+0x30]
0x50ab: movaps [rbp-0x130],xmm0
0x50b2: movdqu xmm0,[rbx+0x40]
0x50b7: movaps [rbp-0x120],xmm0
0x50be: movdqu xmm0,[rbx+0x50]
0x50c3: movaps [rbp-0x110],xmm0
0x50ca: movdqu xmm0,[rbx+0x60]
0x50cf: movaps [rbp-0x100],xmm0
0x50d6: movdqu xmm0,[rbx+0x70]
0x50db: movaps [rbp-0xf0],xmm0
0x50e2: movdqu xmm0,[rbx+0x80]
0x50ea: movaps [rbp-0xe0],xmm0
0x50f1: call 0x1e70
0x50f6: test eax,eax
0x50f8: jns 0x4f0d
0x50fe: mov rsi,r12
0x5101: mov edi,0x4
0x5106: call 0x9200
0x510b: lea rsi,[rip+0xa183]
0x5112: mov edx,0x5
0x5117: xor edi,edi
0x5119: mov rbx,rax
0x511c: call 0x1e20
0x5121: mov esi,dword ptr [r14]
0x5124: mov rcx,rbx
0x5127: mov rdx,rax
0x512a: xor edi,edi
0x512c: xor eax,eax
0x512e: xor ebx,ebx
0x5130: call 0x2120
0x5135: jmp 0x5044
0x5140: mov rsi,r12
0x5143: mov edi,0x4
0x5148: call 0x9200
0x514d: lea rsi,[rip+0xa164]
0x5154: mov edx,0x5
0x5159: xor edi,edi
0x515b: mov rbx,rax
0x515e: call 0x1e20
0x5163: mov esi,dword ptr [r14]
0x5166: mov rcx,rbx
0x5169: mov rdx,rax
0x516c: xor edi,edi
0x516e: xor eax,eax
0x5170: xor ebx,ebx
0x5172: call 0x2120
0x5177: jmp 0x5026
0x5180: lea rsi,[rip+0xa12c]
0x5187: mov edi,0x4
0x518c: call 0x9200
0x5191: mov edx,0x5
0x5196: mov rbx,rax
0x5199: lea rsi,[rip+0xa0f5]
0x51a0: jmp 0x500b
0x51a5: lea rsi,[rip+0xa0cc]
0x51ac: mov edx,0x5
0x51b1: xor edi,edi
0x51b3: xor ebx,ebx
0x51b5: call 0x1e20
0x51ba: mov esi,dword ptr [r14]
0x51bd: mov rdx,rax
0x51c0: xor edi,edi
0x51c2: xor eax,eax
0x51c4: call 0x2120
0x51c9: jmp 0x5044
0x51ce: lea rsi,[rip+0xa10b]
0x51d5: mov edx,0x5
0x51da: xor edi,edi
0x51dc: call 0x1e20
0x51e1: mov esi,dword ptr [r14]
0x51e4: mov rdx,rax
0x51e7: mov edi,0x1
0x51ec: xor eax,eax
0x51ee: call 0x2120
0x51f3: call 0x1e80
0x51f8: nop dword ptr [rax+rax]
0x5200: push r15
0x5202: push r14
0x5204: mov eax,0x401
0x5209: push r13
0x520b: push r12
0x520d: mov r13,rdi
0x5210: push rbp
0x5211: push rbx
0x5212: lea rbx,[rsi+0x1]
0x5216: movabsq r14,0x3fffffffffffffff
0x5220: movabsq r15,0x7ffffffffffffffe
0x522a: sub rsp,0x8
0x522e: cmp rsi,0x401
0x5235: cmovae rbx,rax
0x5239: nop dword ptr [rax]
0x5240: mov rdi,rbx
0x5243: call 0x2030
0x5248: test rax,rax
0x524b: mov rbp,rax
0x524e: je 0x528b
0x5250: mov rdx,rbx
0x5253: mov rsi,rax
0x5256: mov rdi,r13
0x5259: call 0x1db0
0x525e: test rax,rax
0x5261: mov r12,rax
0x5264: js 0x52b8
0x5266: cmp rbx,r12
0x5269: ja 0x52d0
0x526b: mov rdi,rbp
0x526e: call 0x1d10
0x5273: cmp rbx,r14
0x5276: ja 0x52a0
0x5278: add rbx,rbx
0x527b: mov rdi,rbx
0x527e: call 0x2030
0x5283: test rax,rax
0x5286: mov rbp,rax
0x5289: jne 0x5250
0x528b: add rsp,0x8
0x528f: mov rax,rbp
0x5292: pop rbx
0x5293: pop rbp
0x5294: pop r12
0x5296: pop r13
0x5298: pop r14
0x529a: pop r15
0x529c: ret 
0x52a0: cmp rbx,r15
0x52a3: ja 0x52e0
0x52a5: movabsq rbx,0x7fffffffffffffff
0x52af: jmp 0x5240
0x52b8: call 0x1d40
0x52bd: cmp dword ptr [rax],0x22
0x52c0: je 0x5266
0x52c2: mov rdi,rbp
0x52c5: xor ebp,ebp
0x52c7: call 0x1d10
0x52cc: jmp 0x528b
0x52d0: mov byte ptr [rbp+r12],0x0
0x52d6: jmp 0x528b
0x52e0: call 0x1d40
0x52e5: xor ebp,ebp
0x52e7: mov dword ptr [rax],0xc
0x52ed: jmp 0x528b
0x52f0: mov edi,0x1
0x52f5: jmp 0x4930
0x5400: mov byte ptr [rsp+0x17],0x1
0x5405: jmp 0x5387
0x5420: cmp rdx,-0x1
0x5424: push r12
0x5426: mov edx,0x5
0x542b: push rbp
0x542c: mov r12,rsi
0x542f: push rbx
0x5430: mov rbp,rdi
0x5433: je 0x5480
0x5435: lea rsi,[rip+0x9ef2]
0x543c: xor edi,edi
0x543e: call 0x1e20
0x5443: mov rbx,rax
0x5446: mov rsi,rbp
0x5449: mov edi,0x1
0x544e: call 0x94b0
0x5453: mov rdx,r12
0x5456: mov rbp,rax
0x5459: mov esi,0x8
0x545e: xor edi,edi
0x5460: call 0x90e0
0x5465: mov r8,rbp
0x5468: mov rdx,rbx
0x546b: mov rcx,rax
0x546e: pop rbx
0x546f: pop rbp
0x5470: pop r12
0x5472: xor esi,esi
0x5474: xor edi,edi
0x5476: xor eax,eax
0x5478: jmp 0x2120
0x5480: lea rsi,[rip+0x9e8c]
0x5487: xor edi,edi
0x5489: call 0x1e20
0x548e: mov rbx,rax
0x5491: jmp 0x5446
0x54a0: push r15
0x54a2: push r14
0x54a4: mov r14,rdi
0x54a7: push r13
0x54a9: push r12
0x54ab: xor edi,edi
0x54ad: push rbp
0x54ae: push rbx
0x54af: mov rbp,rsi
0x54b2: lea rsi,[rip+0x9e92]
0x54b9: mov r12,rdx
0x54bc: mov edx,0x5
0x54c1: sub rsp,0x8
0x54c5: mov rbx,qword ptr [rip+0x20dc14]
0x54cc: call 0x1e20
0x54d1: mov rdi,rax
0x54d4: mov rsi,rbx
0x54d7: call 0x1f90
0x54dc: mov r15,qword ptr [r14]
0x54df: test r15,r15
0x54e2: je 0x5578
0x54e8: xor r13d,r13d
0x54eb: xor ebx,ebx
0x54ed: jmp 0x5528
0x54f0: mov rdi,r15
0x54f3: add rbx,0x1
0x54f7: mov r13,rbp
0x54fa: call 0x94d0
0x54ff: mov rdi,qword ptr [rip+0x20dbda]
0x5506: lea rdx,[rip+0x9e53]
0x550d: mov rcx,rax
0x5510: mov esi,0x1
0x5515: xor eax,eax
0x5517: add rbp,r12
0x551a: call 0x21b0
0x551f: mov r15,qword ptr [r14+rbx*8]
0x5523: test r15,r15
0x5526: je 0x5578
0x5528: test rbx,rbx
0x552b: je 0x54f0
0x552d: mov rdx,r12
0x5530: mov rsi,rbp
0x5533: mov rdi,r13
0x5536: call 0x1f80
0x553b: test eax,eax
0x553d: jne 0x54f0
0x553f: mov rdi,r15
0x5542: add rbx,0x1
0x5546: add rbp,r12
0x5549: call 0x94d0
0x554e: mov rdi,qword ptr [rip+0x20db8b]
0x5555: lea rdx,[rip+0x9e0c]
0x555c: mov rcx,rax
0x555f: mov esi,0x1
0x5564: xor eax,eax
0x5566: call 0x21b0
0x556b: mov r15,qword ptr [r14+rbx*8]
0x556f: test r15,r15
0x5572: jne 0x5528
0x5574: nop dword ptr [rax]
0x5578: mov rdi,qword ptr [rip+0x20db61]
0x557f: mov rax,qword ptr [rdi+0x28]
0x5583: cmp rax,qword ptr [rdi+0x30]
0x5587: jae 0x55a8
0x5589: lea rdx,[rax+0x1]
0x558d: mov qword ptr [rdi+0x28],rdx
0x5591: mov byte ptr [rax],0xa
0x5594: add rsp,0x8
0x5598: pop rbx
0x5599: pop rbp
0x559a: pop r12
0x559c: pop r13
0x559e: pop r14
0x55a0: pop r15
0x55a2: ret 
0x55a8: add rsp,0x8
0x55ac: mov esi,0xa
0x55b1: pop rbx
0x55b2: pop rbp
0x55b3: pop r12
0x55b5: pop r13
0x55b7: pop r14
0x55b9: pop r15
0x55bb: jmp 0x1ed0
0x55c0: push r15
0x55c2: push r14
0x55c4: mov r14,rdi
0x55c7: push r13
0x55c9: push r12
0x55cb: mov r12,rsi
0x55ce: push rbp
0x55cf: push rbx
0x55d0: mov rbp,rcx
0x55d3: mov rbx,rdx
0x55d6: mov rcx,r8
0x55d9: mov rdx,rbp
0x55dc: sub rsp,0x8
0x55e0: mov rsi,rbx
0x55e3: mov rdi,r12
0x55e6: mov r15,r8
0x55e9: mov r13,r9
0x55ec: call 0x5300
0x55f1: test rax,rax
0x55f4: js 0x5605
0x55f6: add rsp,0x8
0x55fa: pop rbx
0x55fb: pop rbp
0x55fc: pop r12
0x55fe: pop r13
0x5600: pop r14
0x5602: pop r15
0x5604: ret 
0x5605: mov rdx,rax
0x5608: mov rsi,r12
0x560b: mov rdi,r14
0x560e: call 0x5420
0x5613: mov rdx,r15
0x5616: mov rsi,rbp
0x5619: mov rdi,rbx
0x561c: call 0x54a0
0x5621: call r13
0x5624: mov rax,-0x1
0x562b: jmp 0x55f6
0x5630: push r14
0x5632: push r13
0x5634: push r12
0x5636: push rbp
0x5637: push rbx
0x5638: mov r14,qword ptr [rsi]
0x563b: test r14,r14
0x563e: je 0x5671
0x5640: mov r12,rcx
0x5643: mov r13,rdi
0x5646: mov rbp,rdx
0x5649: lea rbx,[rsi+0x8]
0x564d: jmp 0x565f
0x5650: mov r14,qword ptr [rbx]
0x5653: add rbp,r12
0x5656: add rbx,0x8
0x565a: test r14,r14
0x565d: je 0x5671
0x565f: mov rdx,r12
0x5662: mov rsi,rbp
0x5665: mov rdi,r13
0x5668: call 0x1f80
0x566d: test eax,eax
0x566f: jne 0x5650
0x5671: pop rbx
0x5672: mov rax,r14
0x5675: pop rbp
0x5676: pop r12
0x5678: pop r13
0x567a: pop r14
0x567c: ret 
0x5680: mov qword ptr [rip+0x20db29],rdi
0x5687: ret 
0x5690: mov byte ptr [rip+0x20db11],dil
0x5697: ret 
0x56a0: push rbp
0x56a1: push rbx
0x56a2: sub rsp,0x8
0x56a6: mov rdi,qword ptr [rip+0x20d9fb]
0x56ad: call 0xb1c0
0x56b2: test eax,eax
0x56b4: je 0x56cc
0x56b6: call 0x1d40
0x56bb: cmp byte ptr [rip+0x20dae6],0x0
0x56c2: mov rbx,rax
0x56c5: je 0x56e3
0x56c7: cmp dword ptr [rax],0x20
0x56ca: jne 0x56e3
0x56cc: mov rdi,qword ptr [rip+0x20da0d]
0x56d3: call 0xb1c0
0x56d8: test eax,eax
0x56da: jne 0x5722
0x56dc: add rsp,0x8
0x56e0: pop rbx
0x56e1: pop rbp
0x56e2: ret 
0x56e3: lea rsi,[rip+0x9c83]
0x56ea: xor edi,edi
0x56ec: mov edx,0x5
0x56f1: call 0x1e20
0x56f6: mov rdi,qword ptr [rip+0x20dab3]
0x56fd: mov rbp,rax
0x5700: test rdi,rdi
0x5703: je 0x572d
0x5705: call 0x92d0
0x570a: mov esi,dword ptr [rbx]
0x570c: lea rdx,[rip+0x9c66]
0x5713: mov rcx,rax
0x5716: mov r8,rbp
0x5719: xor edi,edi
0x571b: xor eax,eax
0x571d: call 0x2120
0x5722: mov edi,dword ptr [rip+0x20d900]
0x5728: call 0x1d70
0x572d: mov esi,dword ptr [rbx]
0x572f: lea rdx,[rip+0x9c34]
0x5736: mov rcx,rax
0x5739: xor edi,edi
0x573b: xor eax,eax
0x573d: call 0x2120
0x5742: jmp 0x5722
0x5750: sub rsp,0x8
0x5754: call 0x57d0
0x5759: test rax,rax
0x575c: je 0x5763
0x575e: add rsp,0x8
0x5762: ret 
0x5763: call 0x9df0
0x5768: nop dword ptr [rax+rax]
0x5770: push rbp
0x5771: push rbx
0x5772: xor ebp,ebp
0x5774: mov rbx,rdi
0x5777: sub rsp,0x8
0x577b: cmp byte ptr [rdi],0x2f
0x577e: sete bpl
0x5782: call 0x5830
0x5787: mov rcx,rax
0x578a: sub rcx,rbx
0x578d: cmp rcx,rbp
0x5790: jbe 0x57c0
0x5792: cmp byte ptr [rax-0x1],0x2f
0x5796: lea rdx,[rcx-0x1]
0x579a: je 0x57ae
0x579c: jmp 0x57c0
0x57a0: cmp byte ptr [rbx+rdx-0x1],0x2f
0x57a5: lea rax,[rdx-0x1]
0x57a9: jne 0x57b3
0x57ab: mov rdx,rax
0x57ae: cmp rbp,rdx
0x57b1: jne 0x57a0
0x57b3: add rsp,0x8
0x57b7: mov rax,rdx
0x57ba: pop rbx
0x57bb: pop rbp
0x57bc: ret 
0x57c0: add rsp,0x8
0x57c4: mov rdx,rcx
0x57c7: mov rax,rdx
0x57ca: pop rbx
0x57cb: pop rbp
0x57cc: ret 
0x57d0: push rbp
0x57d1: push rbx
0x57d2: mov rbp,rdi
0x57d5: sub rsp,0x8
0x57d9: call 0x5770
0x57de: test rax,rax
0x57e1: mov rbx,rax
0x57e4: sete al
0x57e7: movzx eax,al
0x57ea: lea rdi,[rbx+rax+0x1]
0x57ef: call 0x2030
0x57f4: test rax,rax
0x57f7: mov rcx,rax
0x57fa: je 0x5816
0x57fc: mov rdx,rbx
0x57ff: mov rsi,rbp
0x5802: mov rdi,rax
0x5805: call 0x1fe0
0x580a: test rbx,rbx
0x580d: mov rcx,rax
0x5810: je 0x5820
0x5812: mov byte ptr [rcx+rbx],0x0
0x5816: add rsp,0x8
0x581a: mov rax,rcx
0x581d: pop rbx
0x581e: pop rbp
0x581f: ret 
0x5820: mov byte ptr [rax],0x2e
0x5823: mov ebx,0x1
0x5828: jmp 0x5812
0x5830: movzx edx,byte ptr [rdi]
0x5833: mov rax,rdi
0x5836: cmp dl,0x2f
0x5839: jne 0x584c
0x583b: nop dword ptr [rax+rax]
0x5840: add rax,0x1
0x5844: movzx edx,byte ptr [rax]
0x5847: cmp dl,0x2f
0x584a: je 0x5840
0x584c: test dl,dl
0x584e: je 0x588a
0x5850: mov rcx,rax
0x5853: xor esi,esi
0x5855: jmp 0x5875
0x5860: test sil,sil
0x5863: je 0x586a
0x5865: mov rax,rcx
0x5868: xor esi,esi
0x586a: add rcx,0x1
0x586e: movzx edx,byte ptr [rcx]
0x5871: test dl,dl
0x5873: je 0x588a
0x5875: cmp dl,0x2f
0x5878: jne 0x5860
0x587a: add rcx,0x1
0x587e: movzx edx,byte ptr [rcx]
0x5881: mov esi,0x1
0x5886: test dl,dl
0x5888: jne 0x5875
0x588a: rep ret 
0x5890: push rbx
0x5891: mov rbx,rdi
0x5894: call 0x1e40
0x5899: cmp rax,0x1
0x589d: jbe 0x58aa
0x589f: cmp byte ptr [rbx+rax-0x1],0x2f
0x58a4: lea rdx,[rax-0x1]
0x58a8: je 0x58b8
0x58aa: pop rbx
0x58ab: ret 
0x58b0: mov rdx,rax
0x58b3: nop dword ptr [rax+rax]
0x58b8: cmp rdx,0x1
0x58bc: je 0x58d0
0x58be: cmp byte ptr [rbx+rdx-0x1],0x2f
0x58c3: lea rax,[rdx-0x1]
0x58c7: je 0x58b0
0x58c9: mov rax,rdx
0x58cc: pop rbx
0x58cd: ret 
0x58d0: mov eax,0x1
0x58d5: pop rbx
0x58d6: ret 
0x58e0: mov eax,dword ptr [rdi+0x18]
0x58e3: mov edx,0x5
0x58e8: and eax,0xf000
0x58ed: cmp eax,0x8000
0x58f2: je 0x5940
0x58f4: cmp eax,0x4000
0x58f9: je 0x5990
0x58ff: cmp eax,0xa000
0x5904: je 0x5970
0x5906: cmp eax,0x6000
0x590b: je 0x59a0
0x5911: cmp eax,0x2000
0x5916: je 0x59b0
0x591c: cmp eax,0x1000
0x5921: je 0x59c0
0x5927: cmp eax,0xc000
0x592c: je 0x5980
0x592e: lea rsi,[rip+0x9aaf]
0x5935: xor edi,edi
0x5937: jmp 0x1e20
0x5940: cmp qword ptr [rdi+0x30],0x0
0x5945: jne 0x5958
0x5947: lea rsi,[rip+0x9a32]
0x594e: xor edi,edi
0x5950: jmp 0x1e20
0x5958: lea rsi,[rip+0x9a34]
0x595f: xor edi,edi
0x5961: jmp 0x1e20
0x5970: lea rsi,[rip+0x9a29]
0x5977: xor edi,edi
0x5979: jmp 0x1e20
0x5980: lea rsi,[rip+0x9a56]
0x5987: xor edi,edi
0x5989: jmp 0x1e20
0x5990: lea rsi,[rip+0x98f4]
0x5997: xor edi,edi
0x5999: jmp 0x1e20
0x59a0: lea rsi,[rip+0x9a07]
0x59a7: xor edi,edi
0x59a9: jmp 0x1e20
0x59b0: lea rsi,[rip+0x9a0a]
0x59b7: xor edi,edi
0x59b9: jmp 0x1e20
0x59c0: lea rsi,[rip+0x9a11]
0x59c7: xor edi,edi
0x59c9: jmp 0x1e20
0x59d0: mov edx,edi
0x59d2: mov eax,0x2d
0x59d7: and edx,0xf000
0x59dd: cmp edx,0x8000
0x59e3: je 0x5a40
0x59e5: cmp edx,0x4000
0x59eb: mov eax,0x64
0x59f0: je 0x5a40
0x59f2: cmp edx,0x6000
0x59f8: mov eax,0x62
0x59fd: je 0x5a40
0x59ff: cmp edx,0x2000
0x5a05: mov eax,0x63
0x5a0a: je 0x5a40
0x5a0c: cmp edx,0xa000
0x5a12: mov eax,0x6c
0x5a17: je 0x5a40
0x5a19: cmp edx,0x1000
0x5a1f: mov eax,0x70
0x5a24: je 0x5a40
0x5a26: cmp edx,0xc000
0x5a2c: mov eax,0x73
0x5a31: mov edx,0x3f
0x5a36: cmovne eax,edx
0x5a39: nop dword ptr [rax]
0x5a40: mov byte ptr [rsi],al
0x5a42: mov eax,edi
0x5a44: and eax,0x100
0x5a49: cmp eax,0x1
0x5a4c: sbb eax,eax
0x5a4e: and eax,-0x45
0x5a51: add eax,0x72
0x5a54: mov byte ptr [rsi+0x1],al
0x5a57: mov eax,edi
0x5a59: and eax,0x80
0x5a5e: cmp eax,0x1
0x5a61: sbb eax,eax
0x5a63: and eax,-0x4a
0x5a66: add eax,0x77
0x5a69: mov byte ptr [rsi+0x2],al
0x5a6c: mov eax,edi
0x5a6e: and eax,0x40
0x5a71: cmp eax,0x1
0x5a74: sbb eax,eax
0x5a76: test edi,0x800
0x5a7c: je 0x5b20
0x5a82: and eax,-0x20
0x5a85: add eax,0x73
0x5a88: mov byte ptr [rsi+0x3],al
0x5a8b: mov eax,edi
0x5a8d: and eax,0x20
0x5a90: cmp eax,0x1
0x5a93: sbb eax,eax
0x5a95: and eax,-0x45
0x5a98: add eax,0x72
0x5a9b: mov byte ptr [rsi+0x4],al
0x5a9e: mov eax,edi
0x5aa0: and eax,0x10
0x5aa3: cmp eax,0x1
0x5aa6: sbb eax,eax
0x5aa8: and eax,-0x4a
0x5aab: add eax,0x77
0x5aae: mov byte ptr [rsi+0x5],al
0x5ab1: mov eax,edi
0x5ab3: and eax,0x8
0x5ab6: cmp eax,0x1
0x5ab9: sbb eax,eax
0x5abb: test edi,0x400
0x5ac1: je 0x5b48
0x5ac7: and eax,-0x20
0x5aca: add eax,0x73
0x5acd: mov byte ptr [rsi+0x6],al
0x5ad0: mov eax,edi
0x5ad2: and eax,0x4
0x5ad5: cmp eax,0x1
0x5ad8: sbb eax,eax
0x5ada: and eax,-0x45
0x5add: add eax,0x72
0x5ae0: mov byte ptr [rsi+0x7],al
0x5ae3: mov eax,edi
0x5ae5: and eax,0x2
0x5ae8: cmp eax,0x1
0x5aeb: sbb eax,eax
0x5aed: and eax,-0x4a
0x5af0: add eax,0x77
0x5af3: mov byte ptr [rsi+0x8],al
0x5af6: mov eax,edi
0x5af8: and eax,0x1
0x5afb: cmp eax,0x1
0x5afe: sbb eax,eax
0x5b00: and edi,0x200
0x5b06: je 0x5b30
0x5b08: and eax,-0x20
0x5b0b: add eax,0x74
0x5b0e: mov byte ptr [rsi+0x9],al
0x5b11: mov eax,0x20
0x5b16: mov word ptr [rsi+0xa],ax
0x5b1a: ret 
0x5b20: and eax,-0x4b
0x5b23: add eax,0x78
0x5b26: jmp 0x5a88
0x5b30: and eax,-0x4b
0x5b33: add eax,0x78
0x5b36: mov byte ptr [rsi+0x9],al
0x5b39: mov eax,0x20
0x5b3e: mov word ptr [rsi+0xa],ax
0x5b42: ret 
0x5b48: and eax,-0x4b
0x5b4b: add eax,0x78
0x5b4e: jmp 0x5acd
0x5b60: mov edi,dword ptr [rdi+0x18]
0x5b63: jmp 0x59d0
0x5b70: test rdi,rdi
0x5b73: lea rcx,[rsi+0x14]
0x5b77: mov byte ptr [rsi+0x14],0x0
0x5b7b: movabsq r9,0x6666666666666667
0x5b85: movabsq rsi,-0x3333333333333333
0x5b8f: mov r8d,0x30
0x5b95: js 0x5bd3
0x5b97: nop word ptr [rax+rax]
0x5ba0: mov rax,rdi
0x5ba3: sub rcx,0x1
0x5ba7: mul rsi
0x5baa: shr rdx,0x3
0x5bae: lea rax,[rdx+rdx*4]
0x5bb2: add rax,rax
0x5bb5: sub rdi,rax
0x5bb8: add edi,0x30
0x5bbb: test rdx,rdx
0x5bbe: mov byte ptr [rcx],dil
0x5bc1: mov rdi,rdx
0x5bc4: jne 0x5ba0
0x5bc6: mov rax,rcx
0x5bc9: ret 
0x5bd0: mov rcx,rsi
0x5bd3: mov rax,rdi
0x5bd6: lea rsi,[rcx-0x1]
0x5bda: imul r9
0x5bdd: mov rax,rdi
0x5be0: sar rax,0x3f
0x5be4: sar rdx,0x2
0x5be8: sub rdx,rax
0x5beb: lea rax,[rdx+rdx*4]
0x5bef: lea eax,[r8+rax*2]
0x5bf3: sub eax,edi
0x5bf5: test rdx,rdx
0x5bf8: mov rdi,rdx
0x5bfb: mov byte ptr [rcx-0x1],al
0x5bfe: jne 0x5bd0
0x5c00: sub rcx,0x2
0x5c04: mov byte ptr [rsi-0x1],0x2d
0x5c08: mov rax,rcx
0x5c0b: ret 
0x5c10: test rdx,rdx
0x5c13: push r12
0x5c15: push rbp
0x5c16: mov rbp,rdi
0x5c19: push rbx
0x5c1a: je 0x5c49
0x5c1c: mov r12,rsi
0x5c1f: lea rbx,[rdx-0x1]
0x5c23: call 0x2200
0x5c28: nop dword ptr [rax+rax]
0x5c30: movzx ecx,byte ptr [r12+rbx]
0x5c35: mov rdx,qword ptr [rax]
0x5c38: mov edx,dword ptr [rdx+rcx*4]
0x5c3b: mov byte ptr [rbp+rbx],dl
0x5c3f: sub rbx,0x1
0x5c43: cmp rbx,-0x1
0x5c47: jne 0x5c30
0x5c49: mov rax,rbp
0x5c4c: pop rbx
0x5c4d: pop rbp
0x5c4e: pop r12
0x5c50: ret 
0x5c60: test rdx,rdx
0x5c63: push r12
0x5c65: push rbp
0x5c66: mov rbp,rdi
0x5c69: push rbx
0x5c6a: je 0x5c99
0x5c6c: mov r12,rsi
0x5c6f: lea rbx,[rdx-0x1]
0x5c73: call 0x1ce0
0x5c78: nop dword ptr [rax+rax]
0x5c80: movzx ecx,byte ptr [r12+rbx]
0x5c85: mov rdx,qword ptr [rax]
0x5c88: mov edx,dword ptr [rdx+rcx*4]
0x5c8b: mov byte ptr [rbp+rbx],dl
0x5c8f: sub rbx,0x1
0x5c93: cmp rbx,-0x1
0x5c97: jne 0x5c80
0x5c99: mov rax,rbp
0x5c9c: pop rbx
0x5c9d: pop rbp
0x5c9e: pop r12
0x5ca0: ret 
0x5cb0: push r15
0x5cb2: push r14
0x5cb4: mov r11,rdx
0x5cb7: push r13
0x5cb9: push r12
0x5cbb: mov r13,rcx
0x5cbe: push rbp
0x5cbf: push rbx
0x5cc0: mov rbp,rdi
0x5cc3: sub rsp,0x4c8
0x5cca: mov rdi,qword ptr [rcx+0x30]
0x5cce: mov r15d,dword ptr [rcx+0x8]
0x5cd2: mov rax,qword ptr [rsp+0x508]
0x5cda: mov qword ptr [rsp+0x8],rsi
0x5cdf: mov dword ptr [rsp+0x2c],r9d
0x5ce4: movsxd r10,dword ptr [rsp+0x500]
0x5cec: mov byte ptr [rsp+0x2b],r8b
0x5cf1: mov qword ptr [rsp+0x18],rax
0x5cf6: mov rax,qword ptr [rsp+0x510]
0x5cfe: mov qword ptr [rsp+0x10],rax
0x5d03: mov rax,qword ptr fs:0x28
0x5d0c: mov qword ptr [rsp+0x4b8],rax
0x5d14: xor eax,eax
0x5d16: lea rax,[rip+0x9e64]
0x5d1d: test rdi,rdi
0x5d20: cmovne rax,rdi
0x5d24: cmp r15d,0xc
0x5d28: mov qword ptr [rsp+0x20],rax
0x5d2d: jle 0x5e20
0x5d33: sub r15d,0xc
0x5d37: movzx eax,byte ptr [r11]
0x5d3b: xor r14d,r14d
0x5d3e: test al,al
0x5d40: je 0x5dfc
0x5d46: mov dword ptr [rsp+0x68],r15d
0x5d4b: mov rbx,r11
0x5d4e: cmp al,0x25
0x5d50: je 0x5e38
0x5d56: test r10d,r10d
0x5d59: mov r12d,0x0
0x5d5f: mov eax,0x1
0x5d64: cmovns r12,r10
0x5d68: test r12,r12
0x5d6b: cmove r12,rax
0x5d6f: mov rax,qword ptr [rsp+0x8]
0x5d74: sub rax,r14
0x5d77: cmp rax,r12
0x5d7a: ja 0x5db0
0x5d7c: xor r14d,r14d
0x5d7f: mov rbx,qword ptr [rsp+0x4b8]
0x5d87: xor rbx,qword ptr fs:0x28
0x5d90: mov rax,r14
0x5d93: jne 0x7745
0x5d99: add rsp,0x4c8
0x5da0: pop rbx
0x5da1: pop rbp
0x5da2: pop r12
0x5da4: pop r13
0x5da6: pop r14
0x5da8: pop r15
0x5daa: ret 
0x5db0: test rbp,rbp
0x5db3: je 0x5ddc
0x5db5: cmp r10d,0x1
0x5db9: jle 0x5dd2
0x5dbb: lea r15,[r10-0x1]
0x5dbf: mov rdi,rbp
0x5dc2: mov esi,0x20
0x5dc7: mov rdx,r15
0x5dca: add rbp,r15
0x5dcd: call 0x1f20
0x5dd2: movzx eax,byte ptr [rbx]
0x5dd5: add rbp,0x1
0x5dd9: mov byte ptr [rbp-0x1],al
0x5ddc: add r14,r12
0x5ddf: mov r12,rbx
0x5de2: movzx eax,byte ptr [r12+0x1]
0x5de8: lea rbx,[r12+0x1]
0x5ded: mov r10,-0x1
0x5df4: test al,al
0x5df6: jne 0x5d4e
0x5dfc: test rbp,rbp
0x5dff: je 0x5d7f
0x5e05: cmp qword ptr [rsp+0x8],0x0
0x5e0b: je 0x5d7f
0x5e11: mov byte ptr [rbp],0x0
0x5e15: jmp 0x5d7f
0x5e20: test r15d,r15d
0x5e23: mov eax,0xc
0x5e28: cmove r15d,eax
0x5e2c: jmp 0x5d37
0x5e38: movzx eax,byte ptr [rsp+0x2b]
0x5e3d: xor r8d,r8d
0x5e40: xor r15d,r15d
0x5e43: mov edx,0x1
0x5e48: mov byte ptr [rsp+0x30],al
0x5e4c: add rbx,0x1
0x5e50: movsx eax,byte ptr [rbx]
0x5e53: lea ecx,[rax-0x23]
0x5e56: mov esi,eax
0x5e58: mov r9d,eax
0x5e5b: cmp cl,0x3c
0x5e5e: ja 0x5e8c
0x5e60: mov rdi,rdx
0x5e63: movabsq r11,0x1000000000002500
0x5e6d: shl rdi,cl
0x5e70: test rdi,r11
0x5e73: jne 0x5ee0
0x5e75: test cl,cl
0x5e77: je 0x5ef0
0x5e79: movabsq rcx,0x800000000000000
0x5e83: test rdi,rcx
0x5e86: jne 0x5fe0
0x5e8c: lea edx,[rax-0x30]
0x5e8f: cmp edx,0x9
0x5e92: jbe 0x5ff0
0x5e98: cmp sil,0x45
0x5e9c: je 0x5ec8
0x5e9e: xor r11d,r11d
0x5ea1: cmp sil,0x4f
0x5ea5: je 0x5ec8
0x5ea7: cmp sil,0x7a
0x5eab: ja 0x5f00
0x5ead: lea rdx,[rip+0x955c]
0x5eb4: movzx eax,sil
0x5eb8: movsxd rax,dword ptr [rdx+rax*4]
0x5ebc: add rax,rdx
0x5ebf: jmp rax
0x5ec8: movsx r9d,byte ptr [rbx+0x1]
0x5ecd: mov r11d,eax
0x5ed0: add rbx,0x1
0x5ed4: mov esi,r9d
0x5ed7: jmp 0x5ea7
0x5ee0: mov r15d,eax
0x5ee3: jmp 0x5e4c
0x5ef0: mov r8d,0x1
0x5ef6: jmp 0x5e4c
0x5f00: lea rax,[rbx-0x1]
0x5f04: mov r8d,0x1
0x5f0a: mov r9,rax
0x5f0d: lea rax,[rax-0x1]
0x5f11: add r8d,0x1
0x5f15: cmp byte ptr [rax+0x1],0x25
0x5f19: jne 0x5f0a
0x5f1b: mov rdx,qword ptr [rsp+0x8]
0x5f20: mov eax,0x0
0x5f25: movsxd r8,r8d
0x5f28: mov rcx,r8
0x5f2b: mov r12,rbx
0x5f2e: sub rdx,r14
0x5f31: test r10d,r10d
0x5f34: cmovns eax,r10d
0x5f38: cltq 
0x5f3a: cmp rax,r8
0x5f3d: cmovae rcx,rax
0x5f41: cmp rcx,rdx
0x5f44: jae 0x5d7c
0x5f4a: test rbp,rbp
0x5f4d: je 0x5fd5
0x5f53: cmp rax,r8
0x5f56: jbe 0x5fa5
0x5f58: movsxd rdx,r10d
0x5f5b: mov qword ptr [rsp+0x48],r8
0x5f60: mov qword ptr [rsp+0x40],rcx
0x5f65: sub rdx,r8
0x5f68: cmp r15d,0x30
0x5f6c: mov qword ptr [rsp+0x38],r9
0x5f71: lea rbx,[rbp+rdx]
0x5f76: je 0x71e6
0x5f7c: cmp r15d,0x2b
0x5f80: je 0x71e6
0x5f86: mov rdi,rbp
0x5f89: mov esi,0x20
0x5f8e: mov rbp,rbx
0x5f91: call 0x1f20
0x5f96: mov r8,qword ptr [rsp+0x48]
0x5f9b: mov rcx,qword ptr [rsp+0x40]
0x5fa0: mov r9,qword ptr [rsp+0x38]
0x5fa5: cmp byte ptr [rsp+0x30],0x0
0x5faa: mov qword ptr [rsp+0x38],rcx
0x5faf: mov rdx,r8
0x5fb2: mov qword ptr [rsp+0x30],r8
0x5fb7: mov rsi,r9
0x5fba: mov rdi,rbp
0x5fbd: je 0x7190
0x5fc3: call 0x5c60
0x5fc8: mov r8,qword ptr [rsp+0x30]
0x5fcd: mov rcx,qword ptr [rsp+0x38]
0x5fd2: add rbp,r8
0x5fd5: add r14,rcx
0x5fd8: jmp 0x5de2
0x5fe0: mov byte ptr [rsp+0x30],0x1
0x5fe5: jmp 0x5e4c
0x5ff0: xor r10d,r10d
0x5ff3: movsx eax,byte ptr [rbx+0x1]
0x5ff7: cmp r10d,0xccccccc
0x5ffe: lea rcx,[rbx+0x1]
0x6002: mov esi,eax
0x6004: lea edx,[rax-0x30]
0x6007: jg 0x6036
0x6009: movsx edi,byte ptr [rbx]
0x600c: je 0x6030
0x600e: lea r9d,[r10+r10*4]
0x6012: mov rbx,rcx
0x6015: lea r10d,[rdi+r9*2-0x30]
0x601a: cmp edx,0x9
0x601d: jbe 0x5ff3
0x601f: mov r9d,eax
0x6022: jmp 0x5e98
0x6030: cmp dil,0x37
0x6034: jle 0x600e
0x6036: cmp edx,0x9
0x6039: ja 0x6050
0x603b: movsx eax,byte ptr [rbx+0x2]
0x603f: mov r10d,0x7fffffff
0x6045: add rbx,0x2
0x6049: mov esi,eax
0x604b: lea edx,[rax-0x30]
0x604e: jmp 0x601a
0x6050: mov r9d,eax
0x6053: mov rbx,rcx
0x6056: mov r10d,0x7fffffff
0x605c: jmp 0x5e98
0x609a: lea r9,[rsp+0xb0]
0x60a2: mov byte ptr [rax],sil
0x60a5: mov byte ptr [rax+0x1],0x0
0x60a9: mov rcx,r13
0x60ac: mov esi,0x400
0x60b1: mov dword ptr [rsp+0x38],r10d
0x60b6: mov rdi,r9
0x60b9: mov byte ptr [rsp+0x50],r8b
0x60be: mov dword ptr [rsp+0x48],r11d
0x60c3: mov qword ptr [rsp+0x40],r9
0x60c8: call 0x2110
0x60cd: test rax,rax
0x60d0: je 0x5de2
0x60d6: movsxd r10,dword ptr [rsp+0x38]
0x60db: lea rcx,[rax-0x1]
0x60df: mov rdx,qword ptr [rsp+0x8]
0x60e4: mov eax,0x0
0x60e9: test r10d,r10d
0x60ec: cmovns rax,r10
0x60f0: cmp rcx,rax
0x60f3: mov rbx,rax
0x60f6: cmovae rbx,rcx
0x60fa: sub rdx,r14
0x60fd: cmp rdx,rbx
0x6100: jbe 0x5d7c
0x6106: test rbp,rbp
0x6109: je 0x61ae
0x610f: mov r11d,dword ptr [rsp+0x48]
0x6114: mov r9,qword ptr [rsp+0x40]
0x6119: movzx r8d,byte ptr [rsp+0x50]
0x611f: test r11d,r11d
0x6122: jne 0x617e
0x6124: cmp rcx,rax
0x6127: jae 0x617e
0x6129: movsxd rdx,r10d
0x612c: mov qword ptr [rsp+0x50],r9
0x6131: mov qword ptr [rsp+0x48],rcx
0x6136: sub rdx,rcx
0x6139: cmp r15d,0x30
0x613d: mov byte ptr [rsp+0x40],r8b
0x6142: lea rax,[rbp+rdx]
0x6147: mov qword ptr [rsp+0x38],rax
0x614c: je 0x71bf
0x6152: cmp r15d,0x2b
0x6156: je 0x71bf
0x615c: mov rdi,rbp
0x615f: mov esi,0x20
0x6164: call 0x1f20
0x6169: movzx r8d,byte ptr [rsp+0x40]
0x616f: mov rbp,qword ptr [rsp+0x38]
0x6174: mov r9,qword ptr [rsp+0x50]
0x6179: mov rcx,qword ptr [rsp+0x48]
0x617e: test r8b,r8b
0x6181: lea rsi,[r9+0x1]
0x6185: mov rdx,rcx
0x6188: jne 0x71a8
0x618e: cmp byte ptr [rsp+0x30],0x0
0x6193: mov rdi,rbp
0x6196: mov qword ptr [rsp+0x30],rcx
0x619b: je 0x6a11
0x61a1: call 0x5c60
0x61a6: mov rcx,qword ptr [rsp+0x30]
0x61ab: add rbp,rcx
0x61ae: add r14,rbx
0x61b1: jmp 0x5de2
0x6227: cmp r11d,0x4f
0x622b: jne 0x70b0
0x6231: test al,al
0x6233: je 0x70b0
0x6239: mov esi,r9d
0x623c: mov edx,0x2520
0x6241: xor r8d,r8d
0x6244: mov word ptr [rsp+0xab],dx
0x624c: lea rdx,[rsp+0xab]
0x6254: mov byte ptr [rsp+0xad],r11b
0x625c: mov r12,rbx
0x625f: mov r11d,edi
0x6262: lea rax,[rdx+0x3]
0x6266: jmp 0x609a
0x6322: movzx r8d,byte ptr [rsp+0x30]
0x6328: mov eax,dword ptr [rsp+0x518]
0x632f: mov rsi,-0x1
0x6336: mov dword ptr [rsp+0x48],r10d
0x633b: xor edi,edi
0x633d: mov r9d,r15d
0x6340: mov rcx,r13
0x6343: mov dword ptr [rsp+0x30],r8d
0x6348: push rax
0x6349: push qword ptr [rsp+0x18]
0x634d: push qword ptr [rsp+0x28]
0x6351: mov eax,dword ptr [rsp+0x50]
0x6355: push rax
0x6356: mov rdx,qword ptr [rsp+0x60]
0x635b: call 0x5cb0
0x6360: add rsp,0x20
0x6364: movsxd r10,dword ptr [rsp+0x48]
0x6369: mov r11,rax
0x636c: mov rsi,qword ptr [rsp+0x8]
0x6371: mov eax,0x0
0x6376: test r10d,r10d
0x6379: cmovns rax,r10
0x637d: cmp r11,rax
0x6380: mov r12,rax
0x6383: cmovae r12,r11
0x6387: sub rsi,r14
0x638a: cmp rsi,r12
0x638d: mov qword ptr [rsp+0x48],rsi
0x6392: jbe 0x5d7c
0x6398: test rbp,rbp
0x639b: je 0x5ddc
0x63a1: cmp r11,rax
0x63a4: jae 0x63e6
0x63a6: movsxd rdx,r10d
0x63a9: mov qword ptr [rsp+0x58],r11
0x63ae: sub rdx,r11
0x63b1: cmp r15d,0x30
0x63b5: lea rax,[rbp+rdx]
0x63ba: mov qword ptr [rsp+0x50],rax
0x63bf: je 0x74bc
0x63c5: cmp r15d,0x2b
0x63c9: je 0x74bc
0x63cf: mov rdi,rbp
0x63d2: mov esi,0x20
0x63d7: call 0x1f20
0x63dc: mov rbp,qword ptr [rsp+0x50]
0x63e1: mov r11,qword ptr [rsp+0x58]
0x63e6: mov eax,dword ptr [rsp+0x518]
0x63ed: mov qword ptr [rsp+0x50],r11
0x63f2: mov rdi,rbp
0x63f5: mov r9d,r15d
0x63f8: mov rcx,r13
0x63fb: push rax
0x63fc: push qword ptr [rsp+0x18]
0x6400: push qword ptr [rsp+0x28]
0x6404: mov eax,dword ptr [rsp+0x50]
0x6408: push rax
0x6409: mov r8d,dword ptr [rsp+0x50]
0x640e: mov rdx,qword ptr [rsp+0x60]
0x6413: mov rsi,qword ptr [rsp+0x68]
0x6418: call 0x5cb0
0x641d: mov r11,qword ptr [rsp+0x70]
0x6422: add rsp,0x20
0x6426: add rbp,r11
0x6429: jmp 0x5ddc
0x6559: xor esi,esi
0x655b: jmp 0x6227
0x6692: mov eax,0x1
0x6697: mov byte ptr [rsp+0x38],0x0
0x669c: cmp r15d,0x2b
0x66a0: je 0x6e13
0x66a6: mov byte ptr [rsp+0x40],0x0
0x66ab: mov edi,0x2
0x66b0: xor esi,esi
0x66b2: jmp 0x6227
0x67e0: lea r9,[rsp+0xb0]
0x67e8: mov r12d,0xcccccccd
0x67ee: lea r11,[r9+0x17]
0x67f2: nop word ptr [rax+rax]
0x67f8: test sil,0x1
0x67fc: lea r8,[r11-0x1]
0x6800: je 0x6811
0x6802: lea rax,[r11-0x2]
0x6806: mov byte ptr [r11-0x1],0x3a
0x680b: mov r11,r8
0x680e: mov r8,rax
0x6811: mov eax,ecx
0x6813: sar esi, 1
0x6815: mul r12d
0x6818: shr edx,0x3
0x681b: lea eax,[rdx+rdx*4]
0x681e: add eax,eax
0x6820: sub ecx,eax
0x6822: mov eax,esi
0x6824: add ecx,0x30
0x6827: or eax,edx
0x6829: mov byte ptr [r11-0x1],cl
0x682d: mov ecx,edx
0x682f: mov r11,r8
0x6832: jne 0x67f8
0x6834: cmp r10d,edi
0x6837: cmovge edi,r10d
0x683b: cmp byte ptr [rsp+0x38],0x0
0x6840: mov dword ptr [rsp+0x48],edi
0x6844: jne 0x70c8
0x684a: cmp byte ptr [rsp+0x40],0x0
0x684f: je 0x6ae9
0x6855: cmp r15d,0x2d
0x6859: je 0x7383
0x685f: mov byte ptr [rsp+0x38],0x2b
0x6864: mov eax,dword ptr [rsp+0x48]
0x6868: lea rcx,[r9+0x17]
0x686c: mov rdx,qword ptr [rsp+0x8]
0x6871: sub rcx,r8
0x6874: lea r12d,[rax-0x1]
0x6878: sub rdx,r14
0x687b: sub r12d,ecx
0x687e: test r12d,r12d
0x6881: jle 0x72cc
0x6887: cmp r15d,0x5f
0x688b: je 0x7246
0x6891: movsxd rax,dword ptr [rsp+0x48]
0x6896: cmp rax,rdx
0x6899: mov rdi,rax
0x689c: jae 0x5d7c
0x68a2: test r10d,r10d
0x68a5: mov eax,0x0
0x68aa: mov esi,0x1
0x68af: cmovns eax,r10d
0x68b3: cltq 
0x68b5: test rax,rax
0x68b8: cmovne rsi,rax
0x68bc: cmp rsi,rdx
0x68bf: jae 0x5d7c
0x68c5: add r14,rsi
0x68c8: test rbp,rbp
0x68cb: movsxd r9,r12d
0x68ce: mov r12,rbx
0x68d1: je 0x6974
0x68d7: test edi,edi
0x68d9: jne 0x692f
0x68db: cmp rax,0x1
0x68df: jbe 0x692f
0x68e1: movsxd rdx,r10d
0x68e4: mov qword ptr [rsp+0x58],r8
0x68e9: mov qword ptr [rsp+0x50],r9
0x68ee: sub rdx,0x1
0x68f2: cmp r15d,0x30
0x68f6: mov qword ptr [rsp+0x40],rcx
0x68fb: lea r12,[rbp+rdx]
0x6900: je 0x76d1
0x6906: cmp r15d,0x2b
0x690a: je 0x76d1
0x6910: mov rdi,rbp
0x6913: mov esi,0x20
0x6918: mov rbp,r12
0x691b: call 0x1f20
0x6920: mov r8,qword ptr [rsp+0x58]
0x6925: mov r9,qword ptr [rsp+0x50]
0x692a: mov rcx,qword ptr [rsp+0x40]
0x692f: movzx eax,byte ptr [rsp+0x38]
0x6934: add rbp,0x1
0x6938: mov r12,rbx
0x693b: mov byte ptr [rbp-0x1],al
0x693e: test rbp,rbp
0x6941: je 0x6974
0x6943: mov rdx,r9
0x6946: mov rdi,rbp
0x6949: mov esi,0x30
0x694e: mov qword ptr [rsp+0x50],r8
0x6953: mov qword ptr [rsp+0x40],rcx
0x6958: mov qword ptr [rsp+0x38],r9
0x695d: call 0x1f20
0x6962: mov r9,qword ptr [rsp+0x38]
0x6967: mov r8,qword ptr [rsp+0x50]
0x696c: mov rcx,qword ptr [rsp+0x40]
0x6971: add rbp,r9
0x6974: mov rdx,qword ptr [rsp+0x8]
0x6979: add r14,r9
0x697c: xor r11d,r11d
0x697f: xor r10d,r10d
0x6982: sub rdx,r14
0x6985: cmp rcx,r11
0x6988: mov rbx,r11
0x698b: cmovae rbx,rcx
0x698f: cmp rbx,rdx
0x6992: jae 0x5d7c
0x6998: test rbp,rbp
0x699b: je 0x61ae
0x69a1: mov esi,dword ptr [rsp+0x48]
0x69a5: test esi,esi
0x69a7: jne 0x69f8
0x69a9: cmp rcx,r11
0x69ac: jae 0x69f8
0x69ae: movsxd rdx,r10d
0x69b1: mov qword ptr [rsp+0x48],r8
0x69b6: mov qword ptr [rsp+0x40],rcx
0x69bb: sub rdx,rcx
0x69be: cmp r15d,0x30
0x69c2: lea rax,[rbp+rdx]
0x69c7: mov qword ptr [rsp+0x38],rax
0x69cc: je 0x720a
0x69d2: cmp r15d,0x2b
0x69d6: je 0x720a
0x69dc: mov rdi,rbp
0x69df: mov esi,0x20
0x69e4: call 0x1f20
0x69e9: mov rbp,qword ptr [rsp+0x38]
0x69ee: mov r8,qword ptr [rsp+0x48]
0x69f3: mov rcx,qword ptr [rsp+0x40]
0x69f8: cmp byte ptr [rsp+0x30],0x0
0x69fd: mov rdx,rcx
0x6a00: mov qword ptr [rsp+0x30],rcx
0x6a05: mov rsi,r8
0x6a08: mov rdi,rbp
0x6a0b: jne 0x61a1
0x6a11: call 0x1fe0
0x6a16: mov rcx,qword ptr [rsp+0x30]
0x6a1b: jmp 0x61ab
0x6ae9: mov rdx,qword ptr [rsp+0x8]
0x6aee: lea rcx,[r9+0x17]
0x6af2: sub rcx,r8
0x6af5: sub rdx,r14
0x6af8: cmp r15d,0x2d
0x6afc: je 0x6b0f
0x6afe: mov r12d,dword ptr [rsp+0x48]
0x6b03: sub r12d,ecx
0x6b06: test r12d,r12d
0x6b09: jg 0x7499
0x6b0f: test r10d,r10d
0x6b12: mov r11d,0x0
0x6b18: mov r12,rbx
0x6b1b: cmovns r11d,r10d
0x6b1f: movsxd r11,r11d
0x6b22: jmp 0x6985
0x6cba: mov r15d,dword ptr [rsp+0x2c]
0x6cbf: mov eax,0x1
0x6cc4: cmp r15d,0x2b
0x6cc8: je 0x772a
0x6cce: mov byte ptr [rsp+0x40],0x0
0x6cd3: mov byte ptr [rsp+0x38],0x0
0x6cd8: mov edi,0x2
0x6cdd: xor esi,esi
0x6cdf: jmp 0x6227
0x6e13: mov edi,0x2
0x6e18: mov edx,0x63
0x6e1d: cmp edx,ecx
0x6e1f: mov byte ptr [rsp+0x40],0x1
0x6e24: mov r15d,0x2b
0x6e2a: jb 0x6559
0x6e30: cmp r10d,edi
0x6e33: mov r15d,0x2b
0x6e39: setg qword ptr [rsp+0x40]
0x6e3e: xor esi,esi
0x6e40: jmp 0x6227
0x6e62: jmp 0x6322
0x70b0: mov eax,ecx
0x70b2: neg eax
0x70b4: cmp byte ptr [rsp+0x38],0x0
0x70b9: cmovne ecx,eax
0x70bc: jmp 0x67e0
0x70c8: cmp r15d,0x2d
0x70cc: mov byte ptr [rsp+0x38],0x2d
0x70d1: jne 0x6864
0x70d7: test r10d,r10d
0x70da: mov r11d,0x0
0x70e0: mov rax,qword ptr [rsp+0x8]
0x70e5: cmovns r11d,r10d
0x70e9: mov r12d,0x1
0x70ef: movsxd r11,r11d
0x70f2: test r11,r11
0x70f5: cmovne r12,r11
0x70f9: sub rax,r14
0x70fc: cmp rax,r12
0x70ff: jbe 0x5d7c
0x7105: test rbp,rbp
0x7108: je 0x716c
0x710a: mov eax,dword ptr [rsp+0x48]
0x710e: test eax,eax
0x7110: jne 0x7164
0x7112: cmp r11,0x1
0x7116: jbe 0x7164
0x7118: movsxd rax,r10d
0x711b: mov rdi,rbp
0x711e: mov esi,0x20
0x7123: lea rcx,[rax-0x1]
0x7127: mov qword ptr [rsp+0x60],r9
0x712c: mov qword ptr [rsp+0x58],r8
0x7131: mov qword ptr [rsp+0x50],r11
0x7136: mov dword ptr [rsp+0x40],r10d
0x713b: mov rdx,rcx
0x713e: mov qword ptr [rsp+0x38],rcx
0x7143: call 0x1f20
0x7148: mov rcx,qword ptr [rsp+0x38]
0x714d: mov r9,qword ptr [rsp+0x60]
0x7152: mov r8,qword ptr [rsp+0x58]
0x7157: mov r11,qword ptr [rsp+0x50]
0x715c: mov r10d,dword ptr [rsp+0x40]
0x7161: add rbp,rcx
0x7164: mov byte ptr [rbp],r15b
0x7168: add rbp,0x1
0x716c: mov rdx,qword ptr [rsp+0x8]
0x7171: lea rcx,[r9+0x17]
0x7175: add r14,r12
0x7178: mov r15d,0x2d
0x717e: mov r12,rbx
0x7181: sub rcx,r8
0x7184: sub rdx,r14
0x7187: jmp 0x6985
0x7190: call 0x1fe0
0x7195: mov rcx,qword ptr [rsp+0x38]
0x719a: mov r8,qword ptr [rsp+0x30]
0x719f: jmp 0x5fd2
0x71a8: mov rdi,rbp
0x71ab: mov qword ptr [rsp+0x30],rcx
0x71b0: call 0x5c10
0x71b5: mov rcx,qword ptr [rsp+0x30]
0x71ba: jmp 0x61ab
0x71bf: mov rdi,rbp
0x71c2: mov esi,0x30
0x71c7: call 0x1f20
0x71cc: mov rbp,qword ptr [rsp+0x38]
0x71d1: movzx r8d,byte ptr [rsp+0x40]
0x71d7: mov rcx,qword ptr [rsp+0x48]
0x71dc: mov r9,qword ptr [rsp+0x50]
0x71e1: jmp 0x617e
0x71e6: mov rdi,rbp
0x71e9: mov esi,0x30
0x71ee: mov rbp,rbx
0x71f1: call 0x1f20
0x71f6: mov r9,qword ptr [rsp+0x38]
0x71fb: mov rcx,qword ptr [rsp+0x40]
0x7200: mov r8,qword ptr [rsp+0x48]
0x7205: jmp 0x5fa5
0x720a: mov rdi,rbp
0x720d: mov esi,0x30
0x7212: call 0x1f20
0x7217: mov rbp,qword ptr [rsp+0x38]
0x721c: mov rcx,qword ptr [rsp+0x40]
0x7221: mov r8,qword ptr [rsp+0x48]
0x7226: jmp 0x69f8
0x7241: mov byte ptr [rsp+0x38],0x0
0x7246: movsxd r15,r12d
0x7249: cmp r15,rdx
0x724c: jae 0x5d7c
0x7252: test rbp,rbp
0x7255: je 0x7288
0x7257: mov rdi,rbp
0x725a: mov rdx,r15
0x725d: mov esi,0x20
0x7262: mov dword ptr [rsp+0x58],r10d
0x7267: mov qword ptr [rsp+0x50],r9
0x726c: add rbp,r15
0x726f: mov qword ptr [rsp+0x40],r8
0x7274: call 0x1f20
0x7279: mov r10d,dword ptr [rsp+0x58]
0x727e: mov r9,qword ptr [rsp+0x50]
0x7283: mov r8,qword ptr [rsp+0x40]
0x7288: mov rdx,qword ptr [rsp+0x8]
0x728d: mov eax,r10d
0x7290: add r14,r15
0x7293: sub eax,r12d
0x7296: cmp r10d,r12d
0x7299: mov r10d,0x0
0x729f: cmovg r10d,eax
0x72a3: sub rdx,r14
0x72a6: cmp byte ptr [rsp+0x38],0x0
0x72ab: jne 0x73d2
0x72b1: add r9,0x17
0x72b5: movsxd r11,r10d
0x72b8: mov r12,rbx
0x72bb: mov rcx,r9
0x72be: mov r15d,0x5f
0x72c4: sub rcx,r8
0x72c7: jmp 0x6985
0x72cc: test r10d,r10d
0x72cf: mov r11d,0x0
0x72d5: mov r12d,0x1
0x72db: cmovns r11d,r10d
0x72df: movsxd r11,r11d
0x72e2: test r11,r11
0x72e5: cmovne r12,r11
0x72e9: cmp r12,rdx
0x72ec: jae 0x5d7c
0x72f2: test rbp,rbp
0x72f5: je 0x7370
0x72f7: mov edi,dword ptr [rsp+0x48]
0x72fb: test edi,edi
0x72fd: jne 0x7364
0x72ff: cmp r11,0x1
0x7303: jbe 0x7364
0x7305: movsxd rdx,r10d
0x7308: mov dword ptr [rsp+0x6c],r10d
0x730d: mov qword ptr [rsp+0x60],r8
0x7312: sub rdx,0x1
0x7316: cmp r15d,0x30
0x731a: mov qword ptr [rsp+0x58],rcx
0x731f: lea rax,[rbp+rdx]
0x7324: mov qword ptr [rsp+0x50],r11
0x7329: mov qword ptr [rsp+0x40],rax
0x732e: je 0x76ff
0x7334: cmp r15d,0x2b
0x7338: je 0x76ff
0x733e: mov rdi,rbp
0x7341: mov esi,0x20
0x7346: call 0x1f20
0x734b: mov rbp,qword ptr [rsp+0x40]
0x7350: mov r10d,dword ptr [rsp+0x6c]
0x7355: mov r8,qword ptr [rsp+0x60]
0x735a: mov rcx,qword ptr [rsp+0x58]
0x735f: mov r11,qword ptr [rsp+0x50]
0x7364: movzx eax,byte ptr [rsp+0x38]
0x7369: add rbp,0x1
0x736d: mov byte ptr [rbp-0x1],al
0x7370: mov rdx,qword ptr [rsp+0x8]
0x7375: add r14,r12
0x7378: mov r12,rbx
0x737b: sub rdx,r14
0x737e: jmp 0x6985
0x7383: mov r15d,0x2b
0x7389: jmp 0x70d7
0x73d2: movsxd r15,r10d
0x73d5: mov r12d,0x1
0x73db: test r15,r15
0x73de: cmovne r12,r15
0x73e2: cmp r12,rdx
0x73e5: jae 0x5d7c
0x73eb: test rbp,rbp
0x73ee: je 0x744b
0x73f0: mov r11d,dword ptr [rsp+0x48]
0x73f5: test r11d,r11d
0x73f8: jne 0x743f
0x73fa: cmp r15,0x1
0x73fe: jbe 0x743f
0x7400: lea rcx,[r15-0x1]
0x7404: mov rdi,rbp
0x7407: mov esi,0x20
0x740c: mov dword ptr [rsp+0x60],r10d
0x7411: mov qword ptr [rsp+0x58],r9
0x7416: mov rdx,rcx
0x7419: mov qword ptr [rsp+0x50],r8
0x741e: mov qword ptr [rsp+0x40],rcx
0x7423: call 0x1f20
0x7428: mov rcx,qword ptr [rsp+0x40]
0x742d: mov r10d,dword ptr [rsp+0x60]
0x7432: mov r9,qword ptr [rsp+0x58]
0x7437: mov r8,qword ptr [rsp+0x50]
0x743c: add rbp,rcx
0x743f: movzx eax,byte ptr [rsp+0x38]
0x7444: add rbp,0x1
0x7448: mov byte ptr [rbp-0x1],al
0x744b: mov rdx,qword ptr [rsp+0x8]
0x7450: add r9,0x17
0x7454: add r14,r12
0x7457: mov rcx,r9
0x745a: mov r11,r15
0x745d: mov r12,rbx
0x7460: sub rcx,r8
0x7463: mov r15d,0x5f
0x7469: sub rdx,r14
0x746c: jmp 0x6985
0x7499: cmp r15d,0x5f
0x749d: je 0x7241
0x74a3: movsxd rax,dword ptr [rsp+0x48]
0x74a8: cmp rax,rdx
0x74ab: jae 0x5d7c
0x74b1: movsxd r9,r12d
0x74b4: mov r12,rbx
0x74b7: jmp 0x693e
0x74bc: mov rdi,rbp
0x74bf: mov esi,0x30
0x74c4: call 0x1f20
0x74c9: mov rbp,qword ptr [rsp+0x50]
0x74ce: mov r11,qword ptr [rsp+0x58]
0x74d3: jmp 0x63e6
0x76d1: mov rdi,rbp
0x76d4: mov esi,0x30
0x76d9: mov rbp,r12
0x76dc: call 0x1f20
0x76e1: mov rcx,qword ptr [rsp+0x40]
0x76e6: mov r9,qword ptr [rsp+0x50]
0x76eb: mov r8,qword ptr [rsp+0x58]
0x76f0: jmp 0x692f
0x76ff: mov rdi,rbp
0x7702: mov esi,0x30
0x7707: call 0x1f20
0x770c: mov rbp,qword ptr [rsp+0x40]
0x7711: mov r11,qword ptr [rsp+0x50]
0x7716: mov rcx,qword ptr [rsp+0x58]
0x771b: mov r8,qword ptr [rsp+0x60]
0x7720: mov r10d,dword ptr [rsp+0x6c]
0x7725: jmp 0x7364
0x772a: mov byte ptr [rsp+0x38],0x0
0x772f: mov edi,0x2
0x7734: jmp 0x6e30
0x7745: call 0x1e80
0x774a: add ecx,0x64
0x774d: test r15d,r15d
0x7750: je 0x6cba
0x7756: jmp 0x6692
0x7770: sub rsp,0x18
0x7774: mov rax,qword ptr fs:0x28
0x777d: mov qword ptr [rsp+0x8],rax
0x7782: xor eax,eax
0x7784: mov byte ptr [rsp+0x7],0x0
0x7789: push r9
0x778b: xor r9d,r9d
0x778e: push r8
0x7790: xor r8d,r8d
0x7793: lea rax,[rsp+0x17]
0x7798: push rax
0x7799: push -0x1
0x779b: call 0x5cb0
0x77a0: add rsp,0x20
0x77a4: mov rdx,qword ptr [rsp+0x8]
0x77a9: xor rdx,qword ptr fs:0x28
0x77b2: jne 0x77b9
0x77b4: add rsp,0x18
0x77b8: ret 
0x77b9: call 0x1e80
0x77be: nop 
0x785f: nop 
0x7860: push rbp
0x7861: push rbx
0x7862: mov rbp,rdi
0x7865: mov ebx,esi
0x7867: sub rsp,0x8
0x786b: call 0xb310
0x7870: movzx edx,byte ptr [rax]
0x7873: and edx,-0x21
0x7876: cmp dl,0x55
0x7879: je 0x78f0
0x787b: cmp dl,0x47
0x787e: je 0x78a0
0x7880: lea rax,[rip+0x7dcc]
0x7887: lea rdx,[rip+0x8660]
0x788e: cmp ebx,0x9
0x7891: cmovne rax,rdx
0x7895: add rsp,0x8
0x7899: pop rbx
0x789a: pop rbp
0x789b: ret 
0x78a0: movzx edx,byte ptr [rax+0x1]
0x78a4: and edx,-0x21
0x78a7: cmp dl,0x42
0x78aa: jne 0x7880
0x78ac: cmp byte ptr [rax+0x2],0x31
0x78b0: jne 0x7880
0x78b2: cmp byte ptr [rax+0x3],0x38
0x78b6: jne 0x7880
0x78b8: cmp byte ptr [rax+0x4],0x30
0x78bc: jne 0x7880
0x78be: cmp byte ptr [rax+0x5],0x33
0x78c2: jne 0x7880
0x78c4: cmp byte ptr [rax+0x6],0x30
0x78c8: jne 0x7880
0x78ca: cmp byte ptr [rax+0x7],0x0
0x78ce: jne 0x7880
0x78d0: cmp byte ptr [rbp],0x60
0x78d4: lea rax,[rip+0x7d71]
0x78db: lea rdx,[rip+0x7d6e]
0x78e2: cmovne rax,rdx
0x78e6: add rsp,0x8
0x78ea: pop rbx
0x78eb: pop rbp
0x78ec: ret 
0x78f0: movzx edx,byte ptr [rax+0x1]
0x78f4: and edx,-0x21
0x78f7: cmp dl,0x54
0x78fa: jne 0x7880
0x78fc: movzx edx,byte ptr [rax+0x2]
0x7900: and edx,-0x21
0x7903: cmp dl,0x46
0x7906: jne 0x7880
0x790c: cmp byte ptr [rax+0x3],0x2d
0x7910: jne 0x7880
0x7916: cmp byte ptr [rax+0x4],0x38
0x791a: jne 0x7880
0x7920: cmp byte ptr [rax+0x5],0x0
0x7924: jne 0x7880
0x792a: cmp byte ptr [rbp],0x60
0x792e: lea rax,[rip+0x7d0f]
0x7935: lea rdx,[rip+0x7d0c]
0x793c: cmovne rax,rdx
0x7940: add rsp,0x8
0x7944: pop rbx
0x7945: pop rbp
0x7946: ret 
0x7a23: xor r11d,r11d
0x7a26: mov rax,rbp
0x7a29: mov r8d,r12d
0x7a2c: mov rbp,r11
0x7a2f: mov r11,rax
0x7a32: nop word ptr [rax+rax]
0x7a38: cmp r11,rbp
0x7a3b: setne r12b
0x7a3f: cmp r11,-0x1
0x7a43: jne 0x7a52
0x7a45: mov rax,qword ptr [rsp+0x10]
0x7a4a: cmp byte ptr [rax+rbp],0x0
0x7a4e: setne r12b
0x7a52: test r12b,r12b
0x7a55: je 0x80b0
0x7a5b: cmp dword ptr [rsp+0x8],0x2
0x7a60: mov rdi,qword ptr [rsp+0x10]
0x7a65: lea r9,[rdi+rbp]
0x7a69: setne al
0x7a6c: and al,byte ptr [rsp+0xd]
0x7a70: mov r10d,eax
0x7a73: je 0x7b20
0x7a79: mov rax,qword ptr [rsp+0x18]
0x7a7e: test rax,rax
0x7a81: je 0x7eb0
0x7a87: cmp r11,-0x1
0x7a8b: lea rbx,[rbp+rax]
0x7a90: jne 0x7ac0
0x7a92: cmp rax,0x1
0x7a96: jbe 0x7ac0
0x7a98: mov byte ptr [rsp+0x38],r8b
0x7a9d: mov byte ptr [rsp+0x30],r10b
0x7aa2: mov qword ptr [rsp+0x28],r9
0x7aa7: call 0x1e40
0x7aac: movzx r8d,byte ptr [rsp+0x38]
0x7ab2: movzx r10d,byte ptr [rsp+0x30]
0x7ab8: mov r11,rax
0x7abb: mov r9,qword ptr [rsp+0x28]
0x7ac0: cmp rbx,r11
0x7ac3: mov byte ptr [rsp+0x28],r10b
0x7ac8: ja 0x8080
0x7ace: mov rdx,qword ptr [rsp+0x18]
0x7ad3: mov rsi,qword ptr [rsp+0x48]
0x7ad8: mov rdi,r9
0x7adb: mov qword ptr [rsp+0x40],r11
0x7ae0: mov byte ptr [rsp+0x38],r8b
0x7ae5: mov qword ptr [rsp+0x30],r9
0x7aea: call 0x1f80
0x7aef: test eax,eax
0x7af1: mov r9,qword ptr [rsp+0x30]
0x7af6: movzx r8d,byte ptr [rsp+0x38]
0x7afc: mov r11,qword ptr [rsp+0x40]
0x7b01: jne 0x8080
0x7b07: cmp byte ptr [rsp+0xf],0x0
0x7b0c: movzx r10d,byte ptr [rsp+0x28]
0x7b12: jne 0x8a95
0x7b18: nop dword ptr [rax+rax]
0x7b20: movzx ebx,byte ptr [r9]
0x7b24: cmp bl,0x7e
0x7b27: ja 0x7e48
0x7b2d: lea rcx,[rip+0x7bb8]
0x7b34: movzx edx,bl
0x7b37: movsxd rax,dword ptr [rcx+rdx*4]
0x7b3b: add rax,rcx
0x7b3e: jmp rax
0x7b78: cmp byte ptr [rsp+0xd],0x1
0x7b7d: jne 0x7c92
0x7b83: test dl,dl
0x7b85: jne 0x7c92
0x7b8b: mov rsi,qword ptr [rsp+0x20]
0x7b90: test rsi,rsi
0x7b93: je 0x7ba9
0x7b95: mov edx,ebx
0x7b97: shr dl,0x5
0x7b9a: movzx edx,dl
0x7b9d: mov edx,dword ptr [rsi+rdx*4]
0x7ba0: btl edx,ebx
0x7ba3: jb 0x7cf3
0x7ba9: test r10b,r10b
0x7bac: jne 0x7cf3
0x7bb2: xor eax,0x1
0x7bb5: add rbp,0x1
0x7bb9: and eax,r8d
0x7bbc: test al,al
0x7bbe: je 0x7be0
0x7bc0: cmp r13,r15
0x7bc3: jbe 0x7bca
0x7bc5: mov byte ptr [r14+r15],0x27
0x7bca: lea rax,[r15+0x1]
0x7bce: cmp r13,rax
0x7bd1: jbe 0x7bd9
0x7bd3: mov byte ptr [r14+r15+0x1],0x27
0x7bd9: add r15,0x2
0x7bdd: xor r8d,r8d
0x7be0: cmp r15,r13
0x7be3: jae 0x7be9
0x7be5: mov byte ptr [r14+r15],bl
0x7be9: movzx edi,byte ptr [rsp+0xe]
0x7bee: add r15,0x1
0x7bf2: mov eax,0x0
0x7bf7: test r12b,r12b
0x7bfa: cmove edi,eax
0x7bfd: mov byte ptr [rsp+0xe],dil
0x7c02: jmp 0x7a38
0x7c92: cmp byte ptr [rsp+0xf],0x0
0x7c97: jne 0x7b8b
0x7c9d: jmp 0x7ba9
0x7cf3: cmp dword ptr [rsp+0x8],0x2
0x7cf8: sete dl
0x7cfb: cmp byte ptr [rsp+0xf],0x0
0x7d00: mov eax,edx
0x7d02: jne 0x8558
0x7d08: mov eax,r8d
0x7d0b: xor eax,0x1
0x7d0e: and al,dl
0x7d10: je 0x7d41
0x7d12: cmp r13,r15
0x7d15: jbe 0x7d1c
0x7d17: mov byte ptr [r14+r15],0x27
0x7d1c: lea rdx,[r15+0x1]
0x7d20: cmp r13,rdx
0x7d23: jbe 0x7d2b
0x7d25: mov byte ptr [r14+r15+0x1],0x24
0x7d2b: lea rdx,[r15+0x2]
0x7d2f: cmp r13,rdx
0x7d32: jbe 0x7d3a
0x7d34: mov byte ptr [r14+r15+0x2],0x27
0x7d3a: add r15,0x3
0x7d3e: mov r8d,eax
0x7d41: cmp r13,r15
0x7d44: jbe 0x7d4b
0x7d46: mov byte ptr [r14+r15],0x5c
0x7d4b: add r15,0x1
0x7d4f: add rbp,0x1
0x7d53: jmp 0x7be0
0x7e40: xor r10d,r10d
0x7e43: nop dword ptr [rax+rax]
0x7e48: cmp qword ptr [rsp+0x58],0x1
0x7e4e: jne 0x81f8
0x7e54: mov qword ptr [rsp+0x38],r11
0x7e59: mov byte ptr [rsp+0x30],r8b
0x7e5e: mov byte ptr [rsp+0x28],r10b
0x7e63: call 0x2210
0x7e68: mov rcx,qword ptr [rax]
0x7e6b: movzx edx,bl
0x7e6e: movzx r10d,byte ptr [rsp+0x28]
0x7e74: movzx r8d,byte ptr [rsp+0x30]
0x7e7a: mov r11,qword ptr [rsp+0x38]
0x7e7f: mov edi,0x1
0x7e84: movzx eax,word ptr [rcx+rdx*2]
0x7e88: and ax,0x4000
0x7e8c: setne r12b
0x7e90: sete al
0x7e93: and al,byte ptr [rsp+0xd]
0x7e97: test al,al
0x7e99: jne 0x8831
0x7e9f: cmp dword ptr [rsp+0x8],0x2
0x7ea4: sete dl
0x7ea7: jmp 0x7b78
0x7eb0: movzx ebx,byte ptr [r9]
0x7eb4: cmp bl,0x7e
0x7eb7: ja 0x7e40
0x7eb9: lea rcx,[rip+0x7a28]
0x7ec0: movzx edx,bl
0x7ec3: movsxd rax,dword ptr [rcx+rdx*4]
0x7ec7: add rax,rcx
0x7eca: jmp rax
0x8080: xor r10d,r10d
0x8083: jmp 0x7b20
0x80b0: cmp dword ptr [rsp+0x8],0x2
0x80b5: movzx ebx,byte ptr [rsp+0xf]
0x80ba: mov r12d,r8d
0x80bd: mov rbp,r11
0x80c0: sete dl
0x80c3: mov eax,ebx
0x80c5: test r15,r15
0x80c8: sete cl
0x80cb: and eax,edx
0x80cd: and al,cl
0x80cf: jne 0x8b36
0x80d5: mov eax,ebx
0x80d7: xor eax,0x1
0x80da: and dl,al
0x80dc: je 0x8a4c
0x80e2: cmp byte ptr [rsp+0x7c],0x0
0x80e7: je 0x8a4a
0x80ed: cmp byte ptr [rsp+0xe],0x0
0x80f2: jne 0x8aed
0x80f8: test r13,r13
0x80fb: sete al
0x80fe: cmp qword ptr [rsp+0x50],0x0
0x8104: setne dl
0x8107: and al,dl
0x8109: je 0x8b2c
0x810f: mov r13,qword ptr [rsp+0x50]
0x8114: lea rbx,[rip+0x7dd3]
0x811b: mov byte ptr [r14],0x27
0x811f: mov dword ptr [rsp+0x8],0x2
0x8127: mov r15d,0x1
0x812d: mov qword ptr [rsp+0x18],0x1
0x8136: mov byte ptr [rsp+0xf],0x0
0x813b: mov qword ptr [rsp+0x48],rbx
0x8140: mov byte ptr [rsp+0x7c],al
0x8144: jmp 0x7a23
0x81f8: lea rax,[rsp+0xa0]
0x8200: cmp r11,-0x1
0x8204: mov qword ptr [rsp+0xa0],0x0
0x8210: mov qword ptr [rsp+0x28],rax
0x8215: jne 0x8244
0x8217: mov rdi,qword ptr [rsp+0x10]
0x821c: mov byte ptr [rsp+0x40],r8b
0x8221: mov byte ptr [rsp+0x38],r10b
0x8226: mov qword ptr [rsp+0x30],r9
0x822b: call 0x1e40
0x8230: movzx r8d,byte ptr [rsp+0x40]
0x8236: movzx r10d,byte ptr [rsp+0x38]
0x823c: mov r11,rax
0x823f: mov r9,qword ptr [rsp+0x30]
0x8244: lea rax,[rsp+0x9c]
0x824c: xor ecx,ecx
0x824e: mov byte ptr [rsp+0x7e],bl
0x8252: mov byte ptr [rsp+0x7d],r8b
0x8257: mov rbx,rcx
0x825a: mov qword ptr [rsp+0x88],r9
0x8262: mov qword ptr [rsp+0x38],rax
0x8267: mov byte ptr [rsp+0x7f],r10b
0x826c: mov qword ptr [rsp+0x80],r15
0x8274: mov qword ptr [rsp+0x40],r14
0x8279: mov qword ptr [rsp+0x70],r13
0x827e: mov qword ptr [rsp+0x30],r11
0x8283: mov rax,qword ptr [rsp+0x10]
0x8288: lea r14,[rbp+rbx]
0x828d: mov rdx,qword ptr [rsp+0x30]
0x8292: mov rcx,qword ptr [rsp+0x28]
0x8297: mov rdi,qword ptr [rsp+0x38]
0x829c: lea r13,[rax+r14]
0x82a0: sub rdx,r14
0x82a3: mov rsi,r13
0x82a6: call 0xa290
0x82ab: test rax,rax
0x82ae: mov r15,rax
0x82b1: je 0x8301
0x82b3: cmp rax,-0x1
0x82b7: je 0x88d5
0x82bd: cmp rax,-0x2
0x82c1: je 0x8861
0x82c7: cmp dword ptr [rsp+0x8],0x2
0x82cc: sete al
0x82cf: and al,byte ptr [rsp+0xf]
0x82d3: jne 0x8470
0x82d9: mov edi,dword ptr [rsp+0x9c]
0x82e0: call 0x21d0
0x82e5: mov rdi,qword ptr [rsp+0x28]
0x82ea: test eax,eax
0x82ec: mov eax,0x0
0x82f1: cmove r12d,eax
0x82f5: add rbx,r15
0x82f8: call 0x21c0
0x82fd: test eax,eax
0x82ff: je 0x8283
0x8301: mov edx,r12d
0x8304: mov rdi,rbx
0x8307: movzx r8d,byte ptr [rsp+0x7d]
0x830d: xor edx,0x1
0x8310: movzx ebx,byte ptr [rsp+0x7e]
0x8315: movzx r10d,byte ptr [rsp+0x7f]
0x831b: and dl,byte ptr [rsp+0xd]
0x831f: mov r15,qword ptr [rsp+0x80]
0x8327: mov r14,qword ptr [rsp+0x40]
0x832c: mov r13,qword ptr [rsp+0x70]
0x8331: mov r11,qword ptr [rsp+0x30]
0x8336: cmp rdi,0x1
0x833a: jbe 0x893b
0x8340: mov rcx,rdi
0x8343: xor esi,esi
0x8345: movzx r9d,byte ptr [rsp+0xf]
0x834b: add rcx,rbp
0x834e: mov rdi,qword ptr [rsp+0x10]
0x8353: jmp 0x840e
0x8360: cmp dword ptr [rsp+0x8],0x2
0x8365: sete al
0x8368: test r9b,r9b
0x836b: jne 0x8820
0x8371: mov esi,r8d
0x8374: xor esi,0x1
0x8377: and al,sil
0x837a: je 0x83ab
0x837c: cmp r13,r15
0x837f: jbe 0x8386
0x8381: mov byte ptr [r14+r15],0x27
0x8386: lea rsi,[r15+0x1]
0x838a: cmp r13,rsi
0x838d: jbe 0x8395
0x838f: mov byte ptr [r14+r15+0x1],0x24
0x8395: lea rsi,[r15+0x2]
0x8399: cmp r13,rsi
0x839c: jbe 0x83a4
0x839e: mov byte ptr [r14+r15+0x2],0x27
0x83a4: add r15,0x3
0x83a8: mov r8d,eax
0x83ab: cmp r13,r15
0x83ae: jbe 0x83b5
0x83b0: mov byte ptr [r14+r15],0x5c
0x83b5: lea rax,[r15+0x1]
0x83b9: cmp r13,rax
0x83bc: jbe 0x83cb
0x83be: mov eax,ebx
0x83c0: shr al,0x6
0x83c3: add eax,0x30
0x83c6: mov byte ptr [r14+r15+0x1],al
0x83cb: lea rax,[r15+0x2]
0x83cf: cmp r13,rax
0x83d2: jbe 0x83e4
0x83d4: mov eax,ebx
0x83d6: shr al,0x3
0x83d9: and eax,0x7
0x83dc: add eax,0x30
0x83df: mov byte ptr [r14+r15+0x2],al
0x83e4: and ebx,0x7
0x83e7: add rbp,0x1
0x83eb: add r15,0x3
0x83ef: add ebx,0x30
0x83f2: cmp rbp,rcx
0x83f5: jae 0x7be0
0x83fb: mov esi,edx
0x83fd: cmp r13,r15
0x8400: jbe 0x8406
0x8402: mov byte ptr [r14+r15],bl
0x8406: movzx ebx,byte ptr [rdi+rbp]
0x840a: add r15,0x1
0x840e: test dl,dl
0x8410: jne 0x8360
0x8416: mov eax,esi
0x8418: xor eax,0x1
0x841b: and eax,r8d
0x841e: test r10b,r10b
0x8421: je 0x8431
0x8423: cmp r13,r15
0x8426: jbe 0x842d
0x8428: mov byte ptr [r14+r15],0x5c
0x842d: add r15,0x1
0x8431: add rbp,0x1
0x8435: cmp rbp,rcx
0x8438: jae 0x7bbc
0x843e: test al,al
0x8440: je 0x883e
0x8446: cmp r13,r15
0x8449: jbe 0x8450
0x844b: mov byte ptr [r14+r15],0x27
0x8450: lea rax,[r15+0x1]
0x8454: cmp r13,rax
0x8457: jbe 0x845f
0x8459: mov byte ptr [r14+r15+0x1],0x27
0x845f: add r15,0x2
0x8463: xor r10d,r10d
0x8466: xor r8d,r8d
0x8469: jmp 0x83fd
0x8470: cmp r15,0x1
0x8474: je 0x82d9
0x847a: mov rdi,qword ptr [rsp+0x10]
0x847f: lea rcx,[rdi+r15]
0x8483: lea rdx,[rdi+r14+0x1]
0x8488: lea r8,[rcx+r14]
0x848c: jmp 0x849d
0x8490: add rdx,0x1
0x8494: cmp r8,rdx
0x8497: je 0x82d9
0x849d: movzx ecx,byte ptr [rdx]
0x84a0: sub ecx,0x5b
0x84a3: cmp cl,0x21
0x84a6: ja 0x8490
0x84a8: mov esi,0x1
0x84ad: shl rsi,cl
0x84b0: mov rcx,rsi
0x84b3: movabsq rsi,0x20000002b
0x84bd: test rcx,rsi
0x84c0: je 0x8490
0x84c2: mov r14,qword ptr [rsp+0x40]
0x84c7: mov r13,qword ptr [rsp+0x70]
0x84cc: mov rbp,qword ptr [rsp+0x30]
0x84d1: mov dword ptr [rsp+0x8],0x2
0x84d9: cmp byte ptr [rsp+0xd],0x0
0x84de: je 0x84f0
0x84e0: test al,al
0x84e2: mov eax,0x4
0x84e7: cmove eax,dword ptr [rsp+0x8]
0x84ec: mov dword ptr [rsp+0x8],eax
0x84f0: sub rsp,0x8
0x84f4: mov rcx,rbp
0x84f7: mov rsi,r13
0x84fa: push qword ptr [rsp+0x68]
0x84fe: push qword ptr [rsp+0x78]
0x8502: mov rdi,r14
0x8505: push 0x0
0x8507: mov r9d,dword ptr [rsp+0x98]
0x850f: mov r8d,dword ptr [rsp+0x28]
0x8514: mov rdx,qword ptr [rsp+0x30]
0x8519: and r9d,-0x3
0x851d: call 0x7950
0x8522: add rsp,0x20
0x8526: mov r15,rax
0x8529: mov rbx,qword ptr [rsp+0xa8]
0x8531: xor rbx,qword ptr fs:0x28
0x853a: mov rax,r15
0x853d: jne 0x8b43
0x8543: add rsp,0xb8
0x854a: pop rbx
0x854b: pop rbp
0x854c: pop r12
0x854e: pop r13
0x8550: pop r14
0x8552: pop r15
0x8554: ret 
0x8558: mov rbp,r11
0x855b: jmp 0x84d9
0x85c1: test r13,r13
0x85c4: jne 0x8b5a
0x85ca: lea rax,[rip+0x791d]
0x85d1: mov qword ptr [rsp+0x50],0x0
0x85da: mov byte ptr [rsp+0xe],0x1
0x85df: mov byte ptr [rsp+0x7c],0x0
0x85e4: xor r12d,r12d
0x85e7: mov byte ptr [rsp+0xf],0x0
0x85ec: mov qword ptr [rsp+0x18],0x1
0x85f5: mov qword ptr [rsp+0x48],rax
0x85fa: mov r15d,0x1
0x8600: mov dword ptr [rsp+0x8],0x2
0x8608: jmp 0x7a23
0x8820: movzx ebx,byte ptr [rsp+0xf]
0x8825: mov rbp,r11
0x8828: mov byte ptr [rsp+0xd],bl
0x882c: jmp 0x84d9
0x8831: movzx edx,byte ptr [rsp+0xd]
0x8836: xor r12d,r12d
0x8839: jmp 0x8340
0x883e: xor r10d,r10d
0x8841: jmp 0x83fd
0x8861: mov r11,qword ptr [rsp+0x30]
0x8866: mov rsi,r14
0x8869: mov rcx,r13
0x886c: mov rax,rbx
0x886f: mov rdi,rbx
0x8872: movzx r8d,byte ptr [rsp+0x7d]
0x8878: movzx ebx,byte ptr [rsp+0x7e]
0x887d: mov r9,qword ptr [rsp+0x88]
0x8885: cmp rsi,r11
0x8888: movzx r10d,byte ptr [rsp+0x7f]
0x888e: mov r15,qword ptr [rsp+0x80]
0x8896: mov r14,qword ptr [rsp+0x40]
0x889b: mov r13,qword ptr [rsp+0x70]
0x88a0: jae 0x88c8
0x88a2: cmp byte ptr [rcx],0x0
0x88a5: jne 0x88b7
0x88a7: jmp 0x88c8
0x88b0: cmp byte ptr [r9+rax],0x0
0x88b5: je 0x88c5
0x88b7: add rax,0x1
0x88bb: lea rdx,[rbp+rax]
0x88c0: cmp r11,rdx
0x88c3: ja 0x88b0
0x88c5: mov rdi,rax
0x88c8: movzx edx,byte ptr [rsp+0xd]
0x88cd: xor r12d,r12d
0x88d0: jmp 0x8336
0x88d5: mov rdi,rbx
0x88d8: movzx r8d,byte ptr [rsp+0x7d]
0x88de: movzx ebx,byte ptr [rsp+0x7e]
0x88e3: movzx r10d,byte ptr [rsp+0x7f]
0x88e9: mov r15,qword ptr [rsp+0x80]
0x88f1: xor r12d,r12d
0x88f4: mov r14,qword ptr [rsp+0x40]
0x88f9: mov r13,qword ptr [rsp+0x70]
0x88fe: mov r11,qword ptr [rsp+0x30]
0x8903: movzx edx,byte ptr [rsp+0xd]
0x8908: jmp 0x8336
0x893b: mov eax,edx
0x893d: jmp 0x7e97
0x8a4a: mov eax,edx
0x8a4c: mov rbx,qword ptr [rsp+0x48]
0x8a51: test rbx,rbx
0x8a54: je 0x8a82
0x8a56: test al,al
0x8a58: je 0x8a82
0x8a5a: movzx ecx,byte ptr [rbx]
0x8a5d: mov rax,rbx
0x8a60: test cl,cl
0x8a62: je 0x8a82
0x8a64: mov rdx,r15
0x8a67: sub rax,r15
0x8a6a: cmp r13,rdx
0x8a6d: jbe 0x8a73
0x8a6f: mov byte ptr [r14+rdx],cl
0x8a73: add rdx,0x1
0x8a77: movzx ecx,byte ptr [rax+rdx]
0x8a7b: test cl,cl
0x8a7d: jne 0x8a6a
0x8a7f: mov r15,rdx
0x8a82: cmp r13,r15
0x8a85: jbe 0x8529
0x8a8b: mov byte ptr [r14+r15],0x0
0x8a90: jmp 0x8529
0x8a95: cmp dword ptr [rsp+0x8],0x2
0x8a9a: movzx ebx,byte ptr [rsp+0xf]
0x8a9f: mov rbp,r11
0x8aa2: sete al
0x8aa5: mov byte ptr [rsp+0xd],bl
0x8aa9: jmp 0x84d9
0x8aed: sub rsp,0x8
0x8af1: mov r8d,0x5
0x8af7: mov rcx,r11
0x8afa: push qword ptr [rsp+0x68]
0x8afe: push qword ptr [rsp+0x78]
0x8b02: mov rdi,r14
0x8b05: push qword ptr [rsp+0x38]
0x8b09: mov r9d,dword ptr [rsp+0x98]
0x8b11: mov rdx,qword ptr [rsp+0x30]
0x8b16: mov rsi,qword ptr [rsp+0x70]
0x8b1b: call 0x7950
0x8b20: add rsp,0x20
0x8b24: mov r15,rax
0x8b27: jmp 0x8529
0x8b2c: movzx eax,byte ptr [rsp+0x7c]
0x8b31: jmp 0x8a4c
0x8b36: mov dword ptr [rsp+0x8],0x2
0x8b3e: jmp 0x84d9
0x8b43: call 0x1e80
0x8b48: mov byte ptr [rsp+0xd],0x0
0x8b4d: jmp 0x85c1
0x8b5a: mov byte ptr [rsp+0xe],0x1
0x8b5f: xor eax,eax
0x8b61: xor r12d,r12d
0x8b64: mov qword ptr [rsp+0x50],0x0
0x8b6d: jmp 0x8114
0x8b84: nop 
0x8b86: nop word ptr cs:[rax+rax]
0x8c7c: add rsp,0x20
0x8c80: mov r11,qword ptr [rsp+0x10]
0x8c85: cmp r11,rax
0x8c88: ja 0x8cf1
0x8c8a: lea rsi,[rax+0x1]
0x8c8e: lea rax,[rip+0x20a52b]
0x8c95: cmp r12,rax
0x8c98: mov qword ptr [rbx],rsi
0x8c9b: je 0x8caf
0x8c9d: mov rdi,r12
0x8ca0: mov qword ptr [rsp+0x10],rsi
0x8ca5: call 0x1d10
0x8caa: mov rsi,qword ptr [rsp+0x10]
0x8caf: mov rdi,rsi
0x8cb2: mov qword ptr [rsp+0x10],rsi
0x8cb7: call 0x9ba0
0x8cbc: sub rsp,0x8
0x8cc0: mov qword ptr [rbx+0x8],rax
0x8cc4: mov r8d,dword ptr [rbp]
0x8cc8: push qword ptr [rbp+0x30]
0x8ccb: push qword ptr [rbp+0x28]
0x8cce: mov rcx,r14
0x8cd1: push r15
0x8cd3: mov r9d,dword ptr [rsp+0x3c]
0x8cd8: mov rdi,rax
0x8cdb: mov rdx,qword ptr [rsp+0x28]
0x8ce0: mov rsi,qword ptr [rsp+0x30]
0x8ce5: mov r12,rax
0x8ce8: call 0x7950
0x8ced: add rsp,0x20
0x8cf1: mov eax,dword ptr [rsp+0x18]
0x8cf5: mov dword ptr [r13],eax
0x8cf9: add rsp,0x28
0x8cfd: mov rax,r12
0x8d00: pop rbx
0x8d01: pop rbp
0x8d02: pop r12
0x8d04: pop r13
0x8d06: pop r14
0x8d08: pop r15
0x8d0a: ret 
0x8d31: call 0x1d30
0x8d36: call 0x9df0
0x8d3b: nop dword ptr [rax+rax]
0x8d40: push r12
0x8d42: push rbp
0x8d43: push rbx
0x8d44: mov rbx,rdi
0x8d47: call 0x1d40
0x8d4c: mov r12d,dword ptr [rax]
0x8d4f: mov rbp,rax
0x8d52: lea rax,[rip+0x20a567]
0x8d59: test rbx,rbx
0x8d5c: mov esi,0x38
0x8d61: cmove rbx,rax
0x8d65: mov rdi,rbx
0x8d68: call 0x9da0
0x8d6d: mov dword ptr [rbp],r12d
0x8d71: pop rbx
0x8d72: pop rbp
0x8d73: pop r12
0x8d75: ret 
0x8d80: lea rax,[rip+0x20a539]
0x8d87: test rdi,rdi
0x8d8a: cmove rdi,rax
0x8d8e: mov eax,dword ptr [rdi]
0x8d90: ret 
0x8dc0: lea rax,[rip+0x20a4f9]
0x8dc7: test rdi,rdi
0x8dca: mov ecx,esi
0x8dcc: cmove rdi,rax
0x8dd0: mov eax,esi
0x8dd2: and ecx,0x1f
0x8dd5: shr al,0x5
0x8dd8: movzx eax,al
0x8ddb: lea rdi,[rdi+rax*4+0x8]
0x8de0: mov esi,dword ptr [rdi]
0x8de2: mov eax,esi
0x8de4: shr eax,cl
0x8de6: xor edx,eax
0x8de8: and eax,0x1
0x8deb: and edx,0x1
0x8dee: shl edx,cl
0x8df0: xor edx,esi
0x8df2: mov dword ptr [rdi],edx
0x8df4: ret 
0x8e00: lea rax,[rip+0x20a4b9]
0x8e07: test rdi,rdi
0x8e0a: cmove rdi,rax
0x8e0e: mov eax,dword ptr [rdi+0x4]
0x8e11: mov dword ptr [rdi+0x4],esi
0x8e14: ret 
0x8e20: lea rax,[rip+0x20a499]
0x8e27: test rdi,rdi
0x8e2a: cmove rdi,rax
0x8e2e: test rsi,rsi
0x8e31: mov dword ptr [rdi],0xa
0x8e37: je 0x8e47
0x8e39: test rdx,rdx
0x8e3c: je 0x8e47
0x8e3e: mov qword ptr [rdi+0x28],rsi
0x8e42: mov qword ptr [rdi+0x30],rdx
0x8e46: ret 
0x8e47: sub rsp,0x8
0x8e4b: call 0x1d30
0x8e50: push r15
0x8e52: push r14
0x8e54: lea rax,[rip+0x20a465]
0x8e5b: push r13
0x8e5d: push r12
0x8e5f: mov r13,rdi
0x8e62: push rbp
0x8e63: push rbx
0x8e64: mov rbx,r8
0x8e67: mov r14,rsi
0x8e6a: mov r15,rdx
0x8e6d: sub rsp,0x18
0x8e71: test r8,r8
0x8e74: cmove rbx,rax
0x8e78: mov qword ptr [rsp+0x8],rcx
0x8e7d: call 0x1d40
0x8e82: mov r12d,dword ptr [rax]
0x8e85: mov rbp,rax
0x8e88: lea rax,[rbx+0x8]
0x8e8c: sub rsp,0x8
0x8e90: mov r9d,dword ptr [rbx+0x4]
0x8e94: push qword ptr [rbx+0x30]
0x8e97: mov r8d,dword ptr [rbx]
0x8e9a: push qword ptr [rbx+0x28]
0x8e9d: mov rdx,r15
0x8ea0: push rax
0x8ea1: mov rcx,qword ptr [rsp+0x28]
0x8ea6: mov rsi,r14
0x8ea9: mov rdi,r13
0x8eac: call 0x7950
0x8eb1: mov dword ptr [rbp],r12d
0x8eb5: add rsp,0x38
0x8eb9: pop rbx
0x8eba: pop rbp
0x8ebb: pop r12
0x8ebd: pop r13
0x8ebf: pop r14
0x8ec1: pop r15
0x8ec3: ret 
0x8ed0: push r15
0x8ed2: push r14
0x8ed4: lea rax,[rip+0x20a3e5]
0x8edb: push r13
0x8edd: push r12
0x8edf: mov r12,rdx
0x8ee2: push rbp
0x8ee3: push rbx
0x8ee4: mov rbx,rcx
0x8ee7: mov r14,rdi
0x8eea: mov r15,rsi
0x8eed: sub rsp,0x38
0x8ef1: test rcx,rcx
0x8ef4: cmove rbx,rax
0x8ef8: xor ebp,ebp
0x8efa: call 0x1d40
0x8eff: test r12,r12
0x8f02: mov r13,rax
0x8f05: mov eax,dword ptr [rax]
0x8f07: sete bpl
0x8f0b: or ebp,dword ptr [rbx+0x4]
0x8f0e: lea r10,[rbx+0x8]
0x8f12: sub rsp,0x8
0x8f16: mov r8d,dword ptr [rbx]
0x8f19: mov rcx,r15
0x8f1c: mov dword ptr [rsp+0x14],eax
0x8f20: push qword ptr [rbx+0x30]
0x8f23: mov rdx,r14
0x8f26: push qword ptr [rbx+0x28]
0x8f29: push r10
0x8f2b: xor esi,esi
0x8f2d: mov r9d,ebp
0x8f30: xor edi,edi
0x8f32: mov qword ptr [rsp+0x40],r10
0x8f37: call 0x7950
0x8f3c: lea rsi,[rax+0x1]
0x8f40: mov qword ptr [rsp+0x48],rax
0x8f45: add rsp,0x20
0x8f49: mov rdi,rsi
0x8f4c: mov qword ptr [rsp+0x18],rsi
0x8f51: call 0x9ba0
0x8f56: mov qword ptr [rsp+0x10],rax
0x8f5b: sub rsp,0x8
0x8f5f: push qword ptr [rbx+0x30]
0x8f62: push qword ptr [rbx+0x28]
0x8f65: mov r10,qword ptr [rsp+0x38]
0x8f6a: mov r9d,ebp
0x8f6d: mov r8d,dword ptr [rbx]
0x8f70: mov rcx,r15
0x8f73: mov rdx,r14
0x8f76: mov rdi,rax
0x8f79: push r10
0x8f7b: mov rsi,qword ptr [rsp+0x38]
0x8f80: call 0x7950
0x8f85: mov eax,dword ptr [rsp+0x2c]
0x8f89: add rsp,0x20
0x8f8d: test r12,r12
0x8f90: mov dword ptr [r13],eax
0x8f94: je 0x8f9f
0x8f96: mov r11,qword ptr [rsp+0x28]
0x8f9b: mov qword ptr [r12],r11
0x8f9f: mov rax,qword ptr [rsp+0x10]
0x8fa4: add rsp,0x38
0x8fa8: pop rbx
0x8fa9: pop rbp
0x8faa: pop r12
0x8fac: pop r13
0x8fae: pop r14
0x8fb0: pop r15
0x8fb2: ret 
0x8fc0: mov rcx,rdx
0x8fc3: xor edx,edx
0x8fc5: jmp 0x8ed0
0x8fd0: mov eax,dword ptr [rip+0x20a0a2]
0x8fd6: push r12
0x8fd8: mov r12,qword ptr [rip+0x20a0a1]
0x8fdf: push rbp
0x8fe0: push rbx
0x8fe1: cmp eax,0x1
0x8fe4: jle 0x9011
0x8fe6: sub eax,0x2
0x8fe9: lea rbx,[r12+0x18]
0x8fee: shl rax,0x4
0x8ff2: lea rbp,[r12+rax+0x28]
0x8ff7: nop word ptr [rax+rax]
0x9000: mov rdi,qword ptr [rbx]
0x9003: add rbx,0x10
0x9007: call 0x1d10
0x900c: cmp rbx,rbp
0x900f: jne 0x9000
0x9011: mov rdi,qword ptr [r12+0x8]
0x9016: lea rbx,[rip+0x20a1a3]
0x901d: cmp rdi,rbx
0x9020: je 0x9039
0x9022: call 0x1d10
0x9027: mov qword ptr [rip+0x20a05e],0x100
0x9032: mov qword ptr [rip+0x20a05f],rbx
0x9039: lea rbx,[rip+0x20a050]
0x9040: cmp r12,rbx
0x9043: je 0x9054
0x9045: mov rdi,r12
0x9048: call 0x1d10
0x904d: mov qword ptr [rip+0x20a02c],rbx
0x9054: pop rbx
0x9055: mov dword ptr [rip+0x20a019],0x1
0x905f: pop rbp
0x9060: pop r12
0x9062: ret 
0x9070: lea rcx,[rip+0x20a249]
0x9077: mov rdx,-0x1
0x907e: jmp 0x8b90
0x9090: lea rcx,[rip+0x20a229]
0x9097: jmp 0x8b90
0x90a0: lea rcx,[rip+0x20a219]
0x90a7: mov rsi,rdi
0x90aa: mov rdx,-0x1
0x90b1: xor edi,edi
0x90b3: jmp 0x8b90
0x90c0: lea rcx,[rip+0x20a1f9]
0x90c7: mov rdx,rsi
0x90ca: mov rsi,rdi
0x90cd: xor edi,edi
0x90cf: jmp 0x8b90
0x914f: mov rcx,qword ptr [rsp+0x38]
0x9154: xor rcx,qword ptr fs:0x28
0x915d: jne 0x9169
0x915f: add rsp,0x48
0x9163: ret 
0x9164: call 0x1d30
0x9169: call 0x1e80
0x916e: nop 
0x9170: sub rsp,0x48
0x9174: mov rax,rdx
0x9177: mov rdx,rcx
0x917a: mov rcx,qword ptr fs:0x28
0x9183: mov qword ptr [rsp+0x38],rcx
0x9188: xor ecx,ecx
0x918a: cmp esi,0xa
0x918d: je 0x91f0
0x918f: mov dword ptr [rsp],esi
0x9192: mov rcx,rsp
0x9195: mov rsi,rax
0x9198: mov qword ptr [rsp+0x4],0x0
0x91a1: mov qword ptr [rsp+0xc],0x0
0x91aa: mov qword ptr [rsp+0x14],0x0
0x91b3: mov qword ptr [rsp+0x1c],0x0
0x91bc: mov qword ptr [rsp+0x24],0x0
0x91c5: mov qword ptr [rsp+0x2c],0x0
0x91ce: mov dword ptr [rsp+0x34],0x0
0x91d6: call 0x8b90
0x91db: mov rdx,qword ptr [rsp+0x38]
0x91e0: xor rdx,qword ptr fs:0x28
0x91e9: jne 0x91f5
0x91eb: add rsp,0x48
0x91ef: ret 
0x91f0: call 0x1d30
0x91f5: call 0x1e80
0x91fa: nop word ptr [rax+rax]
0x9210: mov rcx,rdx
0x9213: mov rdx,rsi
0x9216: mov esi,edi
0x9218: xor edi,edi
0x921a: jmp 0x9170
0x9220: sub rsp,0x48
0x9224: mov ecx,edx
0x9226: mov rax,qword ptr fs:0x28
0x922f: mov qword ptr [rsp+0x38],rax
0x9234: xor eax,eax
0x9236: mov rax,qword ptr [rip+0x20a0b3]
0x923d: mov r8,rsp
0x9240: and ecx,0x1f
0x9243: movdqa xmm0,[rip+0x20a075]
0x924b: mov qword ptr [rsp+0x30],rax
0x9250: mov eax,edx
0x9252: movaps [rsp],xmm0
0x9256: shr al,0x5
0x9259: movzx eax,al
0x925c: lea r9,[r8+rax*4+0x8]
0x9261: movdqa xmm0,[rip+0x20a067]
0x9269: movaps [rsp+0x10],xmm0
0x926e: movdqa xmm0,[rip+0x20a06a]
0x9276: movaps [rsp+0x20],xmm0
0x927b: mov edx,dword ptr [r9]
0x927e: mov eax,edx
0x9280: shr eax,cl
0x9282: not eax
0x9284: and eax,0x1
0x9287: shl eax,cl
0x9289: mov rcx,r8
0x928c: xor eax,edx
0x928e: mov rdx,rsi
0x9291: mov rsi,rdi
0x9294: mov dword ptr [r9],eax
0x9297: xor edi,edi
0x9299: call 0x8b90
0x929e: mov rsi,qword ptr [rsp+0x38]
0x92a3: xor rsi,qword ptr fs:0x28
0x92ac: jne 0x92b3
0x92ae: add rsp,0x48
0x92b2: ret 
0x92b3: call 0x1e80
0x92b8: nop dword ptr [rax+rax]
0x92c0: movsx edx,sil
0x92c4: mov rsi,-0x1
0x92cb: jmp 0x9220
0x92d0: mov edx,0x3a
0x92d5: mov rsi,-0x1
0x92dc: jmp 0x9220
0x92f0: mov edx,0x3a
0x92f5: jmp 0x9220
0x9300: sub rsp,0x48
0x9304: mov rax,rdx
0x9307: mov rdx,qword ptr fs:0x28
0x9310: mov qword ptr [rsp+0x38],rdx
0x9315: xor edx,edx
0x9317: cmp esi,0xa
0x931a: je 0x9384
0x931c: mov dword ptr [rsp],esi
0x931f: mov rcx,rsp
0x9322: mov rdx,-0x1
0x9329: mov rsi,rax
0x932c: mov qword ptr [rsp+0x4],0x0
0x9335: mov qword ptr [rsp+0xc],0x4000000
0x933e: mov qword ptr [rsp+0x14],0x0
0x9347: mov qword ptr [rsp+0x1c],0x0
0x9350: mov qword ptr [rsp+0x24],0x0
0x9359: mov qword ptr [rsp+0x2c],0x0
0x9362: mov dword ptr [rsp+0x34],0x0
0x936a: call 0x8b90
0x936f: mov rcx,qword ptr [rsp+0x38]
0x9374: xor rcx,qword ptr fs:0x28
0x937d: jne 0x9389
0x937f: add rsp,0x48
0x9383: ret 
0x9384: call 0x1d30
0x9389: call 0x1e80
0x938e: nop 
0x9390: sub rsp,0x48
0x9394: mov r9,rcx
0x9397: mov rcx,qword ptr [rip+0x209f52]
0x939e: movdqa xmm0,[rip+0x209f1a]
0x93a6: mov rax,qword ptr fs:0x28
0x93af: mov qword ptr [rsp+0x38],rax
0x93b4: xor eax,eax
0x93b6: movaps [rsp],xmm0
0x93ba: test rsi,rsi
0x93bd: mov qword ptr [rsp+0x30],rcx
0x93c2: mov dword ptr [rsp],0xa
0x93c9: movdqa xmm0,[rip+0x209eff]
0x93d1: movaps [rsp+0x10],xmm0
0x93d6: movdqa xmm0,[rip+0x209f02]
0x93de: movaps [rsp+0x20],xmm0
0x93e3: je 0x9417
0x93e5: test rdx,rdx
0x93e8: je 0x9417
0x93ea: mov qword ptr [rsp+0x28],rsi
0x93ef: mov qword ptr [rsp+0x30],rdx
0x93f4: mov rcx,rsp
0x93f7: mov rdx,r8
0x93fa: mov rsi,r9
0x93fd: call 0x8b90
0x9402: mov rdi,qword ptr [rsp+0x38]
0x9407: xor rdi,qword ptr fs:0x28
0x9410: jne 0x941c
0x9412: add rsp,0x48
0x9416: ret 
0x9417: call 0x1d30
0x941c: call 0x1e80
0x9421: nop dword ptr [rax+rax]
0x9426: nop word ptr cs:[rax+rax]
0x9430: mov r8,-0x1
0x9437: jmp 0x9390
0x9440: mov rcx,rdx
0x9443: mov r8,-0x1
0x944a: mov rdx,rsi
0x944d: mov rsi,rdi
0x9450: xor edi,edi
0x9452: jmp 0x9390
0x9460: mov r8,rcx
0x9463: mov rcx,rdx
0x9466: mov rdx,rsi
0x9469: mov rsi,rdi
0x946c: xor edi,edi
0x946e: jmp 0x9390
0x9480: lea rcx,[rip+0x209bb9]
0x9487: jmp 0x8b90
0x9490: lea rcx,[rip+0x209ba9]
0x9497: mov rdx,rsi
0x949a: mov rsi,rdi
0x949d: xor edi,edi
0x949f: jmp 0x8b90
0x94b0: lea rcx,[rip+0x209b89]
0x94b7: mov rdx,-0x1
0x94be: jmp 0x8b90
0x94f0: push rbx
0x94f1: mov rbx,rdi
0x94f4: mov qword ptr [rdi+0x8],0x0
0x94fc: lea rdi,[rip+0x5db1]
0x9503: xor eax,eax
0x9505: mov esi,0x80000
0x950a: call 0xb240
0x950f: mov edx,eax
0x9511: mov dword ptr [rbx],eax
0x9513: xor eax,eax
0x9515: test edx,edx
0x9517: js 0x9520
0x9519: pop rbx
0x951a: ret 
0x9520: xor esi,esi
0x9522: xor edi,edi
0x9524: call 0x1f30
0x9529: test rax,rax
0x952c: mov qword ptr [rbx+0x8],rax
0x9530: sete al
0x9533: movzx eax,al
0x9536: neg eax
0x9538: pop rbx
0x9539: ret 
0x9540: mov eax,dword ptr [rdi]
0x9542: test eax,eax
0x9544: js 0x9550
0x9546: mov edi,eax
0x9548: jmp 0x20c0
0x9550: mov rdi,qword ptr [rdi+0x8]
0x9554: jmp 0x9fb0
0x9560: push rbx
0x9561: mov rbx,rdi
0x9564: mov edi,dword ptr [rdi]
0x9566: test edi,edi
0x9568: js 0x956f
0x956a: call 0x1f50
0x956f: mov rdi,qword ptr [rbx+0x8]
0x9573: pop rbx
0x9574: jmp 0x1d10
0x96b8: mov r8,rcx
0x96bb: mov rcx,rdx
0x96be: lea rdx,[rip+0x646f]
0x96c5: mov esi,0x1
0x96ca: xor eax,eax
0x96cc: call 0x21b0
0x96d1: jmp 0x95bc
0x98cd: push r12
0x98cf: push r15
0x98d1: push r14
0x98d3: mov r8,qword ptr [rsp+0x20]
0x98d8: mov rcx,rbx
0x98db: mov rdx,rax
0x98de: mov rdi,rbp
0x98e1: mov esi,0x1
0x98e6: xor eax,eax
0x98e8: call 0x21b0
0x98ed: add rsp,0x20
0x98f1: add rsp,0x28
0x98f5: pop rbx
0x98f6: pop rbp
0x98f7: pop r12
0x98f9: pop r13
0x98fb: pop r14
0x98fd: pop r15
0x98ff: ret 
0x9939: push r12
0x993b: push r15
0x993d: push r14
0x993f: mov r9,qword ptr [rsp+0x28]
0x9944: jmp 0x98d3
0x99a0: xor r9d,r9d
0x99a3: cmp qword ptr [r8],0x0
0x99a7: je 0x99bb
0x99a9: nop dword ptr [rax]
0x99b0: add r9,0x1
0x99b4: cmp qword ptr [r8+r9*8],0x0
0x99b9: jne 0x99b0
0x99bb: jmp 0x9580
0x99c0: sub rsp,0x68
0x99c4: mov r10,r8
0x99c7: xor r9d,r9d
0x99ca: mov rax,qword ptr fs:0x28
0x99d3: mov qword ptr [rsp+0x58],rax
0x99d8: xor eax,eax
0x99da: mov r8,rsp
0x99dd: nop dword ptr [rax]
0x99e0: mov eax,dword ptr [r10]
0x99e3: cmp eax,0x2f
0x99e6: ja 0x9a2a
0x99e8: mov r11d,eax
0x99eb: add r11,qword ptr [r10+0x10]
0x99ef: add eax,0x8
0x99f2: mov dword ptr [r10],eax
0x99f5: mov rax,qword ptr [r11]
0x99f8: test rax,rax
0x99fb: mov qword ptr [r8+r9*8],rax
0x99ff: je 0x9a0b
0x9a01: add r9,0x1
0x9a05: cmp r9,0xa
0x9a09: jne 0x99e0
0x9a0b: call 0x9580
0x9a10: mov rax,qword ptr [rsp+0x58]
0x9a15: xor rax,qword ptr fs:0x28
0x9a1e: jne 0x9a25
0x9a20: add rsp,0x68
0x9a24: ret 
0x9a25: call 0x1e80
0x9a2a: mov r11,qword ptr [r10+0x8]
0x9a2e: lea rax,[r11+0x8]
0x9a32: mov qword ptr [r10+0x8],rax
0x9a36: jmp 0x99f5
0x9b00: call 0x1e80
0x9b0c: mov rax,rbx
0x9b0f: add rbx,0x8
0x9b13: jmp 0x9ac6
0x9b20: push rbx
0x9b21: lea rsi,[rip+0x605a]
0x9b28: mov edx,0x5
0x9b2d: xor edi,edi
0x9b2f: call 0x1e20
0x9b34: lea rdx,[rip+0x605c]
0x9b3b: mov rsi,rax
0x9b3e: mov edi,0x1
0x9b43: xor eax,eax
0x9b45: call 0x20f0
0x9b4a: lea rsi,[rip+0x605c]
0x9b51: mov edx,0x5
0x9b56: xor edi,edi
0x9b58: call 0x1e20
0x9b5d: lea rcx,[rip+0x55a4]
0x9b64: lea rdx,[rip+0x4341]
0x9b6b: mov rsi,rax
0x9b6e: mov edi,0x1
0x9b73: xor eax,eax
0x9b75: call 0x20f0
0x9b7a: mov rbx,qword ptr [rip+0x209527]
0x9b81: lea rsi,[rip+0x6258]
0x9b88: xor edi,edi
0x9b8a: mov edx,0x5
0x9b8f: call 0x1e20
0x9b94: mov rsi,rbx
0x9b97: mov rdi,rax
0x9b9a: pop rbx
0x9b9b: jmp 0x1f90
0x9bba: nop word ptr [rax+rax]
0x9bc0: mov rax,rdi
0x9bc3: mul rsi
0x9bc6: mov rdi,rax
0x9bc9: seto al
0x9bcc: test rdi,rdi
0x9bcf: js 0x9bdb
0x9bd1: movzx eax,al
0x9bd4: test rax,rax
0x9bd7: jne 0x9bdb
0x9bd9: jmp 0x9ba0
0x9bdb: sub rsp,0x8
0x9bdf: call 0x9df0
0x9be4: nop 
0x9be6: nop word ptr cs:[rax+rax]
0x9bf0: jmp 0x9ba0
0x9c09: test rdi,rdi
0x9c0c: jne 0x9c28
0x9c28: call 0x1d10
0x9c2d: xor eax,eax
0x9c2f: pop rbx
0x9c30: ret 
0x9c36: nop word ptr cs:[rax+rax]
0x9c40: mov rax,rsi
0x9c43: mul rdx
0x9c46: mov rsi,rax
0x9c49: seto al
0x9c4c: test rsi,rsi
0x9c4f: js 0x9c5b
0x9c51: movzx eax,al
0x9c54: test rax,rax
0x9c57: jne 0x9c5b
0x9c59: jmp 0x9c00
0x9c5b: sub rsp,0x8
0x9c5f: call 0x9df0
0x9c64: nop 
0x9c66: nop word ptr cs:[rax+rax]
0x9c70: test rdi,rdi
0x9c73: mov r9,rdx
0x9c76: mov rcx,qword ptr [rsi]
0x9c79: je 0x9cb0
0x9c7b: xor edx,edx
0x9c7d: movabsq rax,0x5555555555555554
0x9c87: div r9
0x9c8a: cmp rax,rcx
0x9c8d: jbe 0x9ccb
0x9c8f: mov rax,rcx
0x9c92: shr rax, 1
0x9c95: lea rcx,[rax+rcx+0x1]
0x9c9a: mov qword ptr [rsi],rcx
0x9c9d: imul rcx,r9
0x9ca1: mov rsi,rcx
0x9ca4: jmp 0x9c00
0x9cb0: test rcx,rcx
0x9cb3: je 0x9cd8
0x9cb5: mov rax,rcx
0x9cb8: mul r9
0x9cbb: seto dl
0x9cbe: test rax,rax
0x9cc1: movzx edx,dl
0x9cc4: js 0x9ccb
0x9cc6: test rdx,rdx
0x9cc9: je 0x9c9a
0x9ccb: sub rsp,0x8
0x9ccf: call 0x9df0
0x9cd4: nop dword ptr [rax]
0x9cd8: xor edx,edx
0x9cda: mov eax,0x80
0x9cdf: xor r8d,r8d
0x9ce2: div r9
0x9ce5: test rax,rax
0x9ce8: sete r8b
0x9cec: lea rcx,[r8+rax]
0x9cf0: jmp 0x9cb5
0x9d00: test rdi,rdi
0x9d03: mov rax,qword ptr [rsi]
0x9d06: je 0x9d30
0x9d08: movabsq rdx,0x5555555555555553
0x9d12: cmp rax,rdx
0x9d15: ja 0x9d41
0x9d17: mov rdx,rax
0x9d1a: shr rdx, 1
0x9d1d: lea rax,[rdx+rax+0x1]
0x9d22: mov qword ptr [rsi],rax
0x9d25: mov rsi,rax
0x9d28: jmp 0x9c00
0x9d30: test rax,rax
0x9d33: mov edx,0x80
0x9d38: cmove rax,rdx
0x9d3c: test rax,rax
0x9d3f: jns 0x9d22
0x9d41: sub rsp,0x8
0x9d45: call 0x9df0
0x9d4a: nop word ptr [rax+rax]
0x9d50: push rbx
0x9d51: mov rbx,rdi
0x9d54: call 0x9ba0
0x9d59: mov rdx,rbx
0x9d5c: xor esi,esi
0x9d5e: mov rdi,rax
0x9d61: pop rbx
0x9d62: jmp 0x1f20
0x9d70: mov rax,rdi
0x9d73: sub rsp,0x8
0x9d77: mul rsi
0x9d7a: seto dl
0x9d7d: test rax,rax
0x9d80: js 0x9d99
0x9d82: movzx edx,dl
0x9d85: test rdx,rdx
0x9d88: jne 0x9d99
0x9d8a: call 0x1fa0
0x9d8f: test rax,rax
0x9d92: je 0x9d99
0x9d94: add rsp,0x8
0x9d98: ret 
0x9d99: call 0x9df0
0x9d9e: nop 
0x9e20: call 0x1d30
0x9e25: nop word ptr cs:[rax+rax]
0x9e2f: nop 
0x9e30: push rbx
0x9e31: xor esi,esi
0x9e33: xor edi,edi
0x9e35: call 0x1f30
0x9e3a: test rax,rax
0x9e3d: mov rbx,rax
0x9e40: je 0x9e50
0x9e42: mov rax,rbx
0x9e45: pop rbx
0x9e46: ret 
0x9e50: call 0x1d40
0x9e55: cmp dword ptr [rax],0xc
0x9e58: jne 0x9e42
0x9e5a: call 0x9df0
0x9e5f: nop 
0x9e60: sub rsp,0xd8
0x9e67: test al,al
0x9e69: mov qword ptr [rsp+0x28],rsi
0x9e6e: mov qword ptr [rsp+0x30],rdx
0x9e73: mov qword ptr [rsp+0x38],rcx
0x9e78: mov qword ptr [rsp+0x40],r8
0x9e7d: mov qword ptr [rsp+0x48],r9
0x9e82: je 0x9ebb
0x9e84: movaps [rsp+0x50],xmm0
0x9e89: movaps [rsp+0x60],xmm1
0x9e8e: movaps [rsp+0x70],xmm2
0x9e93: movaps [rsp+0x80],xmm3
0x9e9b: movaps [rsp+0x90],xmm4
0x9ea3: movaps [rsp+0xa0],xmm5
0x9eab: movaps [rsp+0xb0],xmm6
0x9eb3: movaps [rsp+0xc0],xmm7
0x9ebb: mov rax,qword ptr fs:0x28
0x9ec4: mov qword ptr [rsp+0x18],rax
0x9ec9: xor eax,eax
0x9ecb: lea rax,[rsp+0xe0]
0x9ed3: mov rsi,rsp
0x9ed6: mov qword ptr [rsp+0x8],rax
0x9edb: lea rax,[rsp+0x20]
0x9ee0: mov dword ptr [rsp],0x8
0x9ee7: mov dword ptr [rsp+0x4],0x30
0x9eef: mov qword ptr [rsp+0x10],rax
0x9ef4: call 0xb4e0
0x9ef9: mov rdx,qword ptr [rsp+0x18]
0x9efe: xor rdx,qword ptr fs:0x28
0x9f07: jne 0x9f11
0x9f09: add rsp,0xd8
0x9f10: ret 
0x9f11: call 0x1e80
0x9f16: nop word ptr cs:[rax+rax]
0x9f20: mov edi,dword ptr [rdi]
0x9f22: test edi,edi
0x9f24: js 0x9f40
0x9f26: sub rsp,0x8
0x9f2a: call 0x1f50
0x9f2f: test eax,eax
0x9f31: jne 0x9f42
0x9f33: add rsp,0x8
0x9f37: ret 
0x9f40: rep ret 
0x9f42: lea rcx,[rip+0x5fcf]
0x9f49: lea rsi,[rip+0x5f50]
0x9f50: lea rdi,[rip+0x5f6c]
0x9f57: mov edx,0x40
0x9f5c: call 0x1f10
0x9f61: nop dword ptr [rax+rax]
0x9f66: nop word ptr cs:[rax+rax]
0x9f70: push rbp
0x9f71: push rbx
0x9f72: mov rbx,rdi
0x9f75: xor eax,eax
0x9f77: mov edx,0x10900
0x9f7c: sub rsp,0x8
0x9f80: mov edi,dword ptr [rdi]
0x9f82: call 0x1e60
0x9f87: test eax,eax
0x9f89: js 0x9fa0
0x9f8b: mov ebp,eax
0x9f8d: mov rdi,rbx
0x9f90: call 0x9f20
0x9f95: mov dword ptr [rbx],ebp
0x9f97: xor eax,eax
0x9f99: add rsp,0x8
0x9f9d: pop rbx
0x9f9e: pop rbp
0x9f9f: ret 
0x9fa0: mov eax,0xffffffff
0x9fa5: jmp 0x9f99
0x9fb0: push r15
0x9fb2: push r14
0x9fb4: push r13
0x9fb6: push r12
0x9fb8: push rbp
0x9fb9: push rbx
0x9fba: mov rbp,rdi
0x9fbd: sub rsp,0x18
0x9fc1: mov rax,qword ptr fs:0x28
0x9fca: mov qword ptr [rsp+0x8],rax
0x9fcf: xor eax,eax
0x9fd1: call 0x1e70
0x9fd6: test eax,eax
0x9fd8: mov ebx,eax
0x9fda: je 0x9fe9
0x9fdc: call 0x1d40
0x9fe1: cmp dword ptr [rax],0x24
0x9fe4: mov r14,rax
0x9fe7: je 0xa010
0x9fe9: mov rcx,qword ptr [rsp+0x8]
0x9fee: xor rcx,qword ptr fs:0x28
0x9ff7: mov eax,ebx
0x9ff9: jne 0xa201
0x9fff: add rsp,0x18
0xa003: pop rbx
0xa004: pop rbp
0xa005: pop r12
0xa007: pop r13
0xa009: pop r14
0xa00b: pop r15
0xa00d: ret 
0xa010: mov rdi,rbp
0xa013: call 0x1e40
0xa018: test rax,rax
0xa01b: mov r12,rax
0xa01e: mov dword ptr [rsp+0x4],0xffffff9c
0xa026: je 0xa206
0xa02c: cmp rax,0xfff
0xa032: jbe 0xa225
0xa038: lea rsi,[rip+0x55ff]
0xa03f: mov rdi,rbp
0xa042: call 0x1f60
0xa047: cmp rax,0x2
0xa04b: mov rbx,rax
0xa04e: je 0xa120
0xa054: test rax,rax
0xa057: mov r15,rbp
0xa05a: jne 0xa1c0
0xa060: cmp byte ptr [r15],0x2f
0xa064: je 0xa263
0xa06a: add rbp,r12
0xa06d: cmp r15,rbp
0xa070: ja 0xa244
0xa076: mov rax,rbp
0xa079: lea r12,[rsp+0x4]
0xa07e: sub rax,r15
0xa081: cmp rax,0xfff
0xa087: mov r13,r12
0xa08a: jg 0xa0ec
0xa08c: jmp 0xa190
0xa098: mov byte ptr [rax],0x0
0xa09b: sub rax,r15
0xa09e: cmp rax,0xfff
0xa0a4: jg 0xa1e2
0xa0aa: mov rsi,r15
0xa0ad: mov rdi,r12
0xa0b0: mov r13,r12
0xa0b3: call 0x9f70
0xa0b8: test eax,eax
0xa0ba: mov byte ptr [rbx],0x2f
0xa0bd: jne 0xa178
0xa0c3: add rbx,0x1
0xa0c7: lea rsi,[rip+0x5570]
0xa0ce: mov rdi,rbx
0xa0d1: call 0x1f60
0xa0d6: lea r15,[rbx+rax]
0xa0da: mov rax,rbp
0xa0dd: sub rax,r15
0xa0e0: cmp rax,0xfff
0xa0e6: jle 0xa190
0xa0ec: mov edx,0x1000
0xa0f1: mov esi,0x2f
0xa0f6: mov rdi,r15
0xa0f9: call 0x2130
0xa0fe: test rax,rax
0xa101: mov rbx,rax
0xa104: jne 0xa098
0xa106: mov dword ptr [r14],0x24
0xa10d: mov ebx,0xffffffff
0xa112: jmp 0x9fe9
0xa120: lea rdx,[r12-0x3]
0xa125: lea rdi,[rbp+0x3]
0xa129: mov esi,0x2f
0xa12e: call 0x1f70
0xa133: test rax,rax
0xa136: mov rbx,rax
0xa139: je 0xa186
0xa13b: lea r13,[rsp+0x4]
0xa140: mov byte ptr [rax],0x0
0xa143: mov rsi,rbp
0xa146: mov rdi,r13
0xa149: call 0x9f70
0xa14e: test eax,eax
0xa150: mov byte ptr [rbx],0x2f
0xa153: jne 0xa178
0xa155: add rbx,0x1
0xa159: lea rsi,[rip+0x54de]
0xa160: mov rdi,rbx
0xa163: call 0x1f60
0xa168: lea r15,[rbx+rax]
0xa16c: jmp 0xa060
0xa178: mov ebx,dword ptr [r14]
0xa17b: mov rdi,r13
0xa17e: call 0x9f20
0xa183: mov dword ptr [r14],ebx
0xa186: mov ebx,0xffffffff
0xa18b: jmp 0x9fe9
0xa190: cmp rbp,r15
0xa193: jbe 0xa1a4
0xa195: mov rsi,r15
0xa198: mov rdi,r13
0xa19b: call 0x9f70
0xa1a0: test eax,eax
0xa1a2: jne 0xa178
0xa1a4: mov edi,dword ptr [rsp+0x4]
0xa1a8: call 0x20c0
0xa1ad: test eax,eax
0xa1af: mov ebx,eax
0xa1b1: jne 0xa178
0xa1b3: mov rdi,r13
0xa1b6: call 0x9f20
0xa1bb: jmp 0x9fe9
0xa1c0: lea r13,[rsp+0x4]
0xa1c5: lea rsi,[rip+0x5472]
0xa1cc: mov rdi,r13
0xa1cf: call 0x9f70
0xa1d4: test eax,eax
0xa1d6: jne 0xa178
0xa1d8: lea r15,[rbp+rbx]
0xa1dd: jmp 0xa060
0xa1e2: lea rcx,[rip+0x5d3f]
0xa1e9: lea rsi,[rip+0x5cb0]
0xa1f0: lea rdi,[rip+0x5d08]
0xa1f7: mov edx,0xb3
0xa1fc: call 0x1f10
0xa201: call 0x1e80
0xa206: lea rcx,[rip+0x5d1b]
0xa20d: lea rsi,[rip+0x5c8c]
0xa214: lea rdi,[rip+0x5cb5]
0xa21b: mov edx,0x7e
0xa220: call 0x1f10
0xa225: lea rcx,[rip+0x5cfc]
0xa22c: lea rsi,[rip+0x5c6d]
0xa233: lea rdi,[rip+0x5c9e]
0xa23a: mov edx,0x7f
0xa23f: call 0x1f10
0xa244: lea rcx,[rip+0x5cdd]
0xa24b: lea rsi,[rip+0x5c4e]
0xa252: lea rdi,[rip+0x5c97]
0xa259: mov edx,0xa3
0xa25e: call 0x1f10
0xa263: lea rcx,[rip+0x5cbe]
0xa26a: lea rsi,[rip+0x5c2f]
0xa271: lea rdi,[rip+0x5c6c]
0xa278: mov edx,0xa2
0xa27d: call 0x1f10
0xa282: nop word ptr cs:[rax+rax]
0xa28c: nop dword ptr [rax]
0xa290: push r13
0xa292: push r12
0xa294: mov r13,rsi
0xa297: push rbp
0xa298: push rbx
0xa299: mov rbx,rdi
0xa29c: mov r12,rdx
0xa29f: sub rsp,0x18
0xa2a3: mov rax,qword ptr fs:0x28
0xa2ac: mov qword ptr [rsp+0x8],rax
0xa2b1: xor eax,eax
0xa2b3: lea rax,[rsp+0x4]
0xa2b8: test rdi,rdi
0xa2bb: cmove rbx,rax
0xa2bf: mov rdi,rbx
0xa2c2: call 0x1ea0
0xa2c7: cmp rax,-0x3
0xa2cb: mov rbp,rax
0xa2ce: jbe 0xa2f0
0xa2d0: test r12,r12
0xa2d3: je 0xa2f0
0xa2d5: xor edi,edi
0xa2d7: call 0xb2b0
0xa2dc: test al,al
0xa2de: jne 0xa2f0
0xa2e0: movzx eax,byte ptr [r13]
0xa2e5: mov ebp,0x1
0xa2ea: mov dword ptr [rbx],eax
0xa2ec: nop dword ptr [rax]
0xa2f0: mov rdx,qword ptr [rsp+0x8]
0xa2f5: xor rdx,qword ptr fs:0x28
0xa2fe: mov rax,rbp
0xa301: jne 0xa30e
0xa303: add rsp,0x18
0xa307: pop rbx
0xa308: pop rbp
0xa309: pop r12
0xa30b: pop r13
0xa30d: ret 
0xa30e: call 0x1e80
0xa313: nop word ptr cs:[rax+rax]
0xa31d: nop dword ptr [rax]
0xa320: push rbx
0xa321: mov rbx,rdi
0xa324: call 0x1e40
0xa329: mov rcx,rbx
0xa32c: add rax,0x1
0xa330: xor edx,edx
0xa332: jmp 0xa347
0xa338: mov byte ptr [rcx],sil
0xa33b: mov rdx,rdi
0xa33e: add rcx,0x1
0xa342: cmp rax,rdx
0xa345: jbe 0xa3a0
0xa347: movzx esi,byte ptr [rbx+rdx]
0xa34b: lea rdi,[rdx+0x1]
0xa34f: cmp sil,0x5c
0xa353: jne 0xa338
0xa355: lea r8,[rdx+0x4]
0xa359: cmp r8,rax
0xa35c: jae 0xa338
0xa35e: movzx r9d,byte ptr [rbx+rdi]
0xa363: lea r10d,[r9-0x30]
0xa367: cmp r10b,0x3
0xa36b: ja 0xa338
0xa36d: movzx r10d,byte ptr [rbx+rdx+0x2]
0xa373: lea r11d,[r10-0x30]
0xa377: cmp r11b,0x7
0xa37b: ja 0xa338
0xa37d: movzx edx,byte ptr [rbx+rdx+0x3]
0xa382: lea r11d,[rdx-0x30]
0xa386: cmp r11b,0x7
0xa38a: ja 0xa338
0xa38c: lea edx,[r10+r9*8]
0xa390: lea edx,[r11+rdx*8-0x80]
0xa395: mov byte ptr [rcx],dl
0xa397: mov rdx,r8
0xa39a: jmp 0xa33e
0xa3a0: pop rbx
0xa3a1: ret 
0xa3b0: push rbx
0xa3b1: mov rbx,rdi
0xa3b4: mov rdi,qword ptr [rdi]
0xa3b7: call 0x1d10
0xa3bc: mov rdi,qword ptr [rbx+0x8]
0xa3c0: call 0x1d10
0xa3c5: mov rdi,qword ptr [rbx+0x10]
0xa3c9: call 0x1d10
0xa3ce: test byte ptr [rbx+0x28],0x4
0xa3d2: je 0xa3dd
0xa3d4: mov rdi,qword ptr [rbx+0x18]
0xa3d8: call 0x1d10
0xa3dd: mov rdi,rbx
0xa3e0: pop rbx
0xa3e1: jmp 0x1d10
0xa3f0: push r15
0xa3f2: push r14
0xa3f4: lea rsi,[rip+0x4f7c]
0xa3fb: push r13
0xa3fd: push r12
0xa3ff: lea rdi,[rip+0x5b2d]
0xa406: push rbp
0xa407: push rbx
0xa408: sub rsp,0x68
0xa40c: mov rax,qword ptr fs:0x28
0xa415: mov qword ptr [rsp+0x58],rax
0xa41a: xor eax,eax
0xa41c: call 0x2160
0xa421: test rax,rax
0xa424: je 0xa870
0xa42a: lea r14,[rsp+0x40]
0xa42f: lea r13,[rsp+0x50]
0xa434: lea r12,[rsp+0x48]
0xa439: mov rbp,rax
0xa43c: mov qword ptr [rsp+0x48],0x0
0xa445: mov qword ptr [rsp+0x50],0x0
0xa44e: nop 
0xa450: mov rcx,rbp
0xa453: mov edx,0xa
0xa458: mov rsi,r13
0xa45b: mov rdi,r12
0xa45e: call 0x1fb0
0xa463: cmp rax,-0x1
0xa467: je 0xa6a0
0xa46d: lea rcx,[rsp+0x1c]
0xa472: lea rdx,[rsp+0x18]
0xa477: sub rsp,0x8
0xa47b: lea rbx,[rsp+0x1f]
0xa480: lea rsi,[rip+0x5b11]
0xa487: push rbx
0xa488: lea rax,[rsp+0x34]
0xa48d: push rax
0xa48e: lea rax,[rsp+0x38]
0xa493: push rax
0xa494: mov rdi,qword ptr [rsp+0x68]
0xa499: xor eax,eax
0xa49b: lea r9,[rsp+0x5c]
0xa4a0: lea r8,[rsp+0x58]
0xa4a5: call 0x2090
0xa4aa: and eax,-0x5
0xa4ad: add rsp,0x20
0xa4b1: cmp eax,0x3
0xa4b4: jne 0xa450
0xa4b6: movsxd rdi,dword ptr [rsp+0x24]
0xa4bb: lea rsi,[rip+0x5a86]
0xa4c2: add rdi,qword ptr [rsp+0x48]
0xa4c7: call 0x21f0
0xa4cc: test rax,rax
0xa4cf: mov r15,rax
0xa4d2: je 0xa450
0xa4d8: lea rcx,[rsp+0x2c]
0xa4dd: lea rdx,[rsp+0x28]
0xa4e2: sub rsp,0x8
0xa4e6: push rbx
0xa4e7: lea rsi,[rip+0x5a5e]
0xa4ee: mov rdi,rax
0xa4f1: xor eax,eax
0xa4f3: lea r9,[rsp+0x44]
0xa4f8: lea r8,[rsp+0x40]
0xa4fd: call 0x2090
0xa502: and eax,-0x5
0xa505: cmp eax,0x1
0xa508: pop rdx
0xa509: pop rcx
0xa50a: jne 0xa450
0xa510: movsxd rax,dword ptr [rsp+0x3c]
0xa515: mov rdx,qword ptr [rsp+0x48]
0xa51a: mov byte ptr [rdx+rax],0x0
0xa51e: movsxd rax,dword ptr [rsp+0x24]
0xa523: mov rdx,qword ptr [rsp+0x48]
0xa528: mov byte ptr [rdx+rax],0x0
0xa52c: movsxd rax,dword ptr [rsp+0x2c]
0xa531: mov byte ptr [r15+rax],0x0
0xa536: movsxd rax,dword ptr [rsp+0x34]
0xa53b: mov byte ptr [r15+rax],0x0
0xa540: movsxd rdi,dword ptr [rsp+0x30]
0xa545: add rdi,r15
0xa548: call 0xa320
0xa54d: movsxd rdi,dword ptr [rsp+0x20]
0xa552: add rdi,qword ptr [rsp+0x48]
0xa557: call 0xa320
0xa55c: movsxd rdi,dword ptr [rsp+0x38]
0xa561: add rdi,qword ptr [rsp+0x48]
0xa566: call 0xa320
0xa56b: mov edi,0x38
0xa570: call 0x9ba0
0xa575: movsxd rdi,dword ptr [rsp+0x30]
0xa57a: mov rbx,rax
0xa57d: add rdi,r15
0xa580: call 0x9dd0
0xa585: movsxd rdi,dword ptr [rsp+0x20]
0xa58a: mov qword ptr [rbx],rax
0xa58d: add rdi,qword ptr [rsp+0x48]
0xa592: call 0x9dd0
0xa597: movsxd rdi,dword ptr [rsp+0x38]
0xa59c: mov qword ptr [rbx+0x8],rax
0xa5a0: add rdi,qword ptr [rsp+0x48]
0xa5a5: call 0x9dd0
0xa5aa: movsxd rdi,dword ptr [rsp+0x28]
0xa5af: mov qword ptr [rbx+0x10],rax
0xa5b3: add rdi,r15
0xa5b6: call 0x9dd0
0xa5bb: mov edx,dword ptr [rsp+0x18]
0xa5bf: mov r15,rax
0xa5c2: mov qword ptr [rbx+0x18],rax
0xa5c6: mov eax,dword ptr [rsp+0x1c]
0xa5ca: movabsq rsi,-0x100000000000
0xa5d4: lea rdi,[rip+0x34e7]
0xa5db: or byte ptr [rbx+0x28],0x4
0xa5df: mov rcx,rdx
0xa5e2: shl rdx,0x20
0xa5e6: shl rcx,0x8
0xa5ea: and rdx,rsi
0xa5ed: movabsq rsi,0xffffff00000
0xa5f7: and ecx,0xfff00
0xa5fd: or rdx,rcx
0xa600: movzx ecx,al
0xa603: shl rax,0xc
0xa607: or rdx,rcx
0xa60a: and rax,rsi
0xa60d: mov ecx,0x7
0xa612: mov rsi,r15
0xa615: or rax,rdx
0xa618: mov edx,0x1
0xa61d: rep cmpsb [rsi],es:[rdi]
0xa61f: mov qword ptr [rbx+0x20],rax
0xa623: seta al
0xa626: sbb al,0x0
0xa628: test al,al
0xa62a: je 0xa64a
0xa62c: lea rdi,[rip+0x367f]
0xa633: mov ecx,0x5
0xa638: mov rsi,r15
0xa63b: rep cmpsb [rsi],es:[rdi]
0xa63d: seta al
0xa640: sbb al,0x0
0xa642: test al,al
0xa644: jne 0xa6f8
0xa64a: movzx eax,byte ptr [rbx+0x28]
0xa64e: mov r8,qword ptr [rbx]
0xa651: mov esi,0x3a
0xa656: mov rdi,r8
0xa659: mov qword ptr [rsp+0x8],r8
0xa65e: and eax,-0x2
0xa661: or eax,edx
0xa663: mov byte ptr [rbx+0x28],al
0xa666: call 0x1eb0
0xa66b: test rax,rax
0xa66e: mov edx,0x1
0xa673: mov r8,qword ptr [rsp+0x8]
0xa678: je 0xa840
0xa67e: movzx eax,byte ptr [rbx+0x28]
0xa682: add edx,edx
0xa684: and eax,-0x3
0xa687: or eax,edx
0xa689: mov byte ptr [rbx+0x28],al
0xa68c: mov qword ptr [r14],rbx
0xa68f: lea r14,[rbx+0x30]
0xa693: jmp 0xa450
0xa6a0: mov rdi,qword ptr [rsp+0x48]
0xa6a5: call 0x1d10
0xa6aa: test byte ptr [rbp],0x20
0xa6ae: jne 0xac10
0xa6b4: mov rdi,rbp
0xa6b7: call 0xb590
0xa6bc: cmp eax,-0x1
0xa6bf: je 0xaafe
0xa6c5: mov qword ptr [r14],0x0
0xa6cc: mov rax,qword ptr [rsp+0x40]
0xa6d1: mov rbx,qword ptr [rsp+0x58]
0xa6d6: xor rbx,qword ptr fs:0x28
0xa6df: jne 0xac33
0xa6e5: add rsp,0x68
0xa6e9: pop rbx
0xa6ea: pop rbp
0xa6eb: pop r12
0xa6ed: pop r13
0xa6ef: pop r14
0xa6f1: pop r15
0xa6f3: ret 
0xa6f8: lea rdi,[rip+0x5863]
0xa6ff: mov ecx,0x6
0xa704: mov rsi,r15
0xa707: rep cmpsb [rsi],es:[rdi]
0xa709: seta al
0xa70c: sbb al,0x0
0xa70e: test al,al
0xa710: je 0xa64a
0xa716: lea rdi,[rip+0x342c]
0xa71d: mov ecx,0x8
0xa722: mov rsi,r15
0xa725: rep cmpsb [rsi],es:[rdi]
0xa727: seta al
0xa72a: sbb al,0x0
0xa72c: test al,al
0xa72e: je 0xa64a
0xa734: lea rdi,[rip+0x3416]
0xa73b: mov ecx,0x7
0xa740: mov rsi,r15
0xa743: rep cmpsb [rsi],es:[rdi]
0xa745: seta al
0xa748: sbb al,0x0
0xa74a: test al,al
0xa74c: je 0xa64a
0xa752: lea rdi,[rip+0x3441]
0xa759: mov ecx,0x8
0xa75e: mov rsi,r15
0xa761: rep cmpsb [rsi],es:[rdi]
0xa763: seta al
0xa766: sbb al,0x0
0xa768: test al,al
0xa76a: je 0xa64a
0xa770: lea rdi,[rip+0x34ec]
0xa777: mov ecx,0x7
0xa77c: mov rsi,r15
0xa77f: rep cmpsb [rsi],es:[rdi]
0xa781: seta al
0xa784: sbb al,0x0
0xa786: test al,al
0xa788: je 0xa64a
0xa78e: lea rdi,[rip+0x3548]
0xa795: mov ecx,0xb
0xa79a: mov rsi,r15
0xa79d: rep cmpsb [rsi],es:[rdi]
0xa79f: seta al
0xa7a2: sbb al,0x0
0xa7a4: test al,al
0xa7a6: je 0xa64a
0xa7ac: lea rdi,[rip+0x3577]
0xa7b3: mov ecx,0x6
0xa7b8: mov rsi,r15
0xa7bb: rep cmpsb [rsi],es:[rdi]
0xa7bd: seta al
0xa7c0: sbb al,0x0
0xa7c2: test al,al
0xa7c4: je 0xa64a
0xa7ca: lea rdi,[rip+0x3586]
0xa7d1: mov ecx,0x6
0xa7d6: mov rsi,r15
0xa7d9: rep cmpsb [rsi],es:[rdi]
0xa7db: seta al
0xa7de: sbb al,0x0
0xa7e0: test al,al
0xa7e2: je 0xa64a
0xa7e8: lea rdi,[rip+0x5779]
0xa7ef: mov ecx,0x7
0xa7f4: mov rsi,r15
0xa7f7: rep cmpsb [rsi],es:[rdi]
0xa7f9: seta al
0xa7fc: sbb al,0x0
0xa7fe: test al,al
0xa800: je 0xa64a
0xa806: lea rsi,[rip+0x5762]
0xa80d: mov rdi,r15
0xa810: mov byte ptr [rsp+0x8],dl
0xa814: call 0x1fc0
0xa819: test eax,eax
0xa81b: movzx edx,byte ptr [rsp+0x8]
0xa820: je 0xa64a
0xa826: lea rsi,[rip+0x5749]
0xa82d: mov rdi,r15
0xa830: call 0x1fc0
0xa835: test eax,eax
0xa837: sete dl
0xa83a: jmp 0xa64a
0xa840: cmp byte ptr [r8],0x2f
0xa844: je 0xab70
0xa84a: lea rsi,[rip+0x5730]
0xa851: mov ecx,0x7
0xa856: mov rdi,r8
0xa859: rep cmpsb [rsi],es:[rdi]
0xa85b: seta al
0xa85e: sbb al,0x0
0xa860: test al,al
0xa862: sete dl
0xa865: jmp 0xa67e
0xa870: lea rsi,[rip+0x4b00]
0xa877: lea rdi,[rip+0x570a]
0xa87e: call 0x2060
0xa883: test rax,rax
0xa886: mov rbx,rax
0xa889: je 0xac2c
0xa88f: mov rdi,rbx
0xa892: lea r14,[rsp+0x40]
0xa897: lea rbp,[rip+0x3224]
0xa89e: call 0x2050
0xa8a3: test rax,rax
0xa8a6: mov r13,rax
0xa8a9: je 0xaaee
0xa8af: nop 
0xa8b0: lea rsi,[rip+0x56db]
0xa8b7: mov rdi,r13
0xa8ba: call 0x21e0
0xa8bf: mov edi,0x38
0xa8c4: mov r15,rax
0xa8c7: call 0x9ba0
0xa8cc: mov rdi,qword ptr [r13]
0xa8d0: mov r12,rax
0xa8d3: call 0x9dd0
0xa8d8: mov rdi,qword ptr [r13+0x8]
0xa8dc: mov qword ptr [r12],rax
0xa8e0: call 0x9dd0
0xa8e5: mov rdi,qword ptr [r13+0x10]
0xa8e9: mov qword ptr [r12+0x8],rax
0xa8ee: mov qword ptr [r12+0x10],0x0
0xa8f7: call 0x9dd0
0xa8fc: mov ecx,0x7
0xa901: mov rsi,rax
0xa904: mov rdi,rbp
0xa907: or byte ptr [r12+0x28],0x4
0xa90d: mov r13,rax
0xa910: mov qword ptr [r12+0x18],rax
0xa915: rep cmpsb [rsi],es:[rdi]
0xa917: mov edx,0x1
0xa91c: seta al
0xa91f: sbb al,0x0
0xa921: test al,al
0xa923: je 0xaa88
0xa929: lea rdi,[rip+0x3382]
0xa930: mov ecx,0x5
0xa935: mov rsi,r13
0xa938: rep cmpsb [rsi],es:[rdi]
0xa93a: seta al
0xa93d: sbb al,0x0
0xa93f: test al,al
0xa941: je 0xaa88
0xa947: lea rdi,[rip+0x5614]
0xa94e: mov ecx,0x6
0xa953: mov rsi,r13
0xa956: rep cmpsb [rsi],es:[rdi]
0xa958: seta al
0xa95b: sbb al,0x0
0xa95d: test al,al
0xa95f: je 0xaa88
0xa965: lea rdi,[rip+0x31dd]
0xa96c: mov ecx,0x8
0xa971: mov rsi,r13
0xa974: rep cmpsb [rsi],es:[rdi]
0xa976: seta al
0xa979: sbb al,0x0
0xa97b: test al,al
0xa97d: je 0xaa88
0xa983: lea rdi,[rip+0x31c7]
0xa98a: mov ecx,0x7
0xa98f: mov rsi,r13
0xa992: rep cmpsb [rsi],es:[rdi]
0xa994: seta al
0xa997: sbb al,0x0
0xa999: test al,al
0xa99b: je 0xaa88
0xa9a1: lea rdi,[rip+0x31f2]
0xa9a8: mov ecx,0x8
0xa9ad: mov rsi,r13
0xa9b0: rep cmpsb [rsi],es:[rdi]
0xa9b2: seta al
0xa9b5: sbb al,0x0
0xa9b7: test al,al
0xa9b9: je 0xaa88
0xa9bf: lea rdi,[rip+0x329d]
0xa9c6: mov ecx,0x7
0xa9cb: mov rsi,r13
0xa9ce: rep cmpsb [rsi],es:[rdi]
0xa9d0: seta al
0xa9d3: sbb al,0x0
0xa9d5: test al,al
0xa9d7: je 0xaa88
0xa9dd: lea rdi,[rip+0x32f9]
0xa9e4: mov ecx,0xb
0xa9e9: mov rsi,r13
0xa9ec: rep cmpsb [rsi],es:[rdi]
0xa9ee: seta al
0xa9f1: sbb al,0x0
0xa9f3: test al,al
0xa9f5: je 0xaa88
0xa9fb: lea rdi,[rip+0x3328]
0xaa02: mov ecx,0x6
0xaa07: mov rsi,r13
0xaa0a: rep cmpsb [rsi],es:[rdi]
0xaa0c: seta al
0xaa0f: sbb al,0x0
0xaa11: test al,al
0xaa13: je 0xaa88
0xaa15: lea rdi,[rip+0x333b]
0xaa1c: mov ecx,0x6
0xaa21: mov rsi,r13
0xaa24: rep cmpsb [rsi],es:[rdi]
0xaa26: seta al
0xaa29: sbb al,0x0
0xaa2b: test al,al
0xaa2d: je 0xaa88
0xaa2f: lea rdi,[rip+0x5532]
0xaa36: mov ecx,0x7
0xaa3b: mov rsi,r13
0xaa3e: rep cmpsb [rsi],es:[rdi]
0xaa40: seta al
0xaa43: sbb al,0x0
0xaa45: test al,al
0xaa47: je 0xaa88
0xaa49: lea rsi,[rip+0x551f]
0xaa50: mov rdi,r13
0xaa53: mov byte ptr [rsp+0x8],dl
0xaa57: call 0x1fc0
0xaa5c: test eax,eax
0xaa5e: movzx edx,byte ptr [rsp+0x8]
0xaa63: je 0xaa88
0xaa65: lea rsi,[rip+0x550a]
0xaa6c: mov rdi,r13
0xaa6f: call 0x1fc0
0xaa74: test r15,r15
0xaa77: sete dl
0xaa7a: test eax,eax
0xaa7c: sete al
0xaa7f: and edx,eax
0xaa81: nop dword ptr [rax]
0xaa88: movzx eax,byte ptr [r12+0x28]
0xaa8e: mov r15,qword ptr [r12]
0xaa92: mov esi,0x3a
0xaa97: mov rdi,r15
0xaa9a: and eax,-0x2
0xaa9d: or eax,edx
0xaa9f: mov byte ptr [r12+0x28],al
0xaaa4: call 0x1eb0
0xaaa9: test rax,rax
0xaaac: mov edx,0x1
0xaab1: je 0xab48
0xaab7: movzx eax,byte ptr [r12+0x28]
0xaabd: add edx,edx
0xaabf: mov qword ptr [r12+0x20],-0x1
0xaac8: mov rdi,rbx
0xaacb: and eax,-0x3
0xaace: or eax,edx
0xaad0: mov byte ptr [r12+0x28],al
0xaad5: mov qword ptr [r14],r12
0xaad8: lea r14,[r12+0x30]
0xaadd: call 0x2050
0xaae2: test rax,rax
0xaae5: mov r13,rax
0xaae8: jne 0xa8b0
0xaaee: mov rdi,rbx
0xaaf1: call 0x1d20
0xaaf6: test eax,eax
0xaaf8: jne 0xa6c5
0xaafe: call 0x1d40
0xab03: mov r13d,dword ptr [rax]
0xab06: mov r12,rax
0xab09: mov qword ptr [r14],0x0
0xab10: mov rdi,qword ptr [rsp+0x40]
0xab15: test rdi,rdi
0xab18: je 0xab36
0xab1a: nop word ptr [rax+rax]
0xab20: mov rbx,qword ptr [rdi+0x30]
0xab24: call 0xa3b0
0xab29: test rbx,rbx
0xab2c: mov qword ptr [rsp+0x40],rbx
0xab31: mov rdi,rbx
0xab34: jne 0xab20
0xab36: mov dword ptr [r12],r13d
0xab3a: xor eax,eax
0xab3c: jmp 0xa6d1
0xab48: cmp byte ptr [r15],0x2f
0xab4c: je 0xabc0
0xab4e: lea rsi,[rip+0x542c]
0xab55: mov ecx,0x7
0xab5a: mov rdi,r15
0xab5d: rep cmpsb [rsi],es:[rdi]
0xab5f: seta al
0xab62: sbb al,0x0
0xab64: test al,al
0xab66: sete dl
0xab69: jmp 0xaab7
0xab70: cmp byte ptr [r8+0x1],0x2f
0xab75: jne 0xa84a
0xab7b: lea rdi,[rip+0x53f9]
0xab82: mov ecx,0x6
0xab87: mov rsi,r15
0xab8a: rep cmpsb [rsi],es:[rdi]
0xab8c: seta al
0xab8f: sbb al,0x0
0xab91: test al,al
0xab93: je 0xa67e
0xab99: lea rdi,[rip+0x2f79]
0xaba0: mov ecx,0x5
0xaba5: mov rsi,r15
0xaba8: rep cmpsb [rsi],es:[rdi]
0xabaa: seta al
0xabad: sbb al,0x0
0xabaf: test al,al
0xabb1: je 0xa67e
0xabb7: jmp 0xa84a
0xabc0: cmp byte ptr [r15+0x1],0x2f
0xabc5: jne 0xab4e
0xabc7: lea rdi,[rip+0x53ad]
0xabce: mov ecx,0x6
0xabd3: mov rsi,r13
0xabd6: rep cmpsb [rsi],es:[rdi]
0xabd8: seta al
0xabdb: sbb al,0x0
0xabdd: test al,al
0xabdf: je 0xaab7
0xabe5: lea rdi,[rip+0x2f2d]
0xabec: mov ecx,0x5
0xabf1: mov rsi,r13
0xabf4: rep cmpsb [rsi],es:[rdi]
0xabf6: seta al
0xabf9: sbb al,0x0
0xabfb: test al,al
0xabfd: je 0xaab7
0xac03: jmp 0xab4e
0xac10: call 0x1d40
0xac15: mov r13d,dword ptr [rax]
0xac18: mov r12,rax
0xac1b: mov rdi,rbp
0xac1e: call 0xb590
0xac23: mov dword ptr [r12],r13d
0xac27: jmp 0xab09
0xac2c: xor eax,eax
0xac2e: jmp 0xa6d1
0xac33: call 0x1e80
0xac38: nop dword ptr [rax+rax]
0xac40: test rdi,rdi
0xac43: je 0xac60
0xac45: mov rsi,rdi
0xac48: lea rdi,[rip+0x3160]
0xac4f: mov edx,0x1
0xac54: jmp 0x1dd0
0xac60: lea rdi,[rip+0x3148]
0xac67: jmp 0x2170
0xac70: test rdi,rdi
0xac73: je 0xac98
0xac75: push rbx
0xac76: nop word ptr cs:[rax+rax]
0xac80: mov rbx,qword ptr [rdi]
0xac83: call 0x1d10
0xac88: test rbx,rbx
0xac8b: mov rdi,rbx
0xac8e: jne 0xac80
0xac90: pop rbx
0xac91: ret 
0xac98: rep ret 
0xaca0: push r13
0xaca2: push r12
0xaca4: push rbp
0xaca5: push rbx
0xaca6: mov rbp,rdi
0xaca9: sub rsp,0x8
0xacad: call 0x1d40
0xacb2: cmp byte ptr [rbp+0x8],0x0
0xacb6: mov rbx,rax
0xacb9: mov r12d,dword ptr [rax]
0xacbc: lea rdi,[rbp+0x9]
0xacc0: jne 0xacc4
0xacc2: xor edi,edi
0xacc4: call 0xac40
0xacc9: test eax,eax
0xaccb: je 0xacf0
0xaccd: mov r12d,dword ptr [rbx]
0xacd0: xor r13d,r13d
0xacd3: mov rdi,rbp
0xacd6: call 0xac70
0xacdb: mov dword ptr [rbx],r12d
0xacde: add rsp,0x8
0xace2: mov eax,r13d
0xace5: pop rbx
0xace6: pop rbp
0xace7: pop r12
0xace9: pop r13
0xaceb: ret 
0xacf0: call 0x1ff0
0xacf5: mov r13d,0x1
0xacfb: jmp 0xacd3
0xad00: test rdi,rdi
0xad03: push r12
0xad05: push rbp
0xad06: push rbx
0xad07: je 0xad68
0xad09: mov r12,rdi
0xad0c: call 0x1e40
0xad11: lea rbp,[rax+0x1]
0xad15: mov edi,0x76
0xad1a: cmp rbp,0x76
0xad1e: cmovae rdi,rbp
0xad22: add rdi,0x11
0xad26: and rdi,-0x8
0xad2a: call 0x2030
0xad2f: test rax,rax
0xad32: mov rbx,rax
0xad35: je 0xad5b
0xad37: mov qword ptr [rax],0x0
0xad3e: lea rdi,[rbx+0x9]
0xad42: mov eax,0x1
0xad47: mov word ptr [rbx+0x8],ax
0xad4b: mov rdx,rbp
0xad4e: mov rsi,r12
0xad51: call 0x1fe0
0xad56: mov byte ptr [rbx+rbp+0x9],0x0
0xad5b: mov rax,rbx
0xad5e: pop rbx
0xad5f: pop rbp
0xad60: pop r12
0xad62: ret 
0xad68: mov edi,0x80
0xad6d: call 0x2030
0xad72: test rax,rax
0xad75: mov rbx,rax
0xad78: je 0xad5b
0xad7a: xor edx,edx
0xad7c: mov qword ptr [rbx],0x0
0xad83: mov rax,rbx
0xad86: mov word ptr [rbx+0x8],dx
0xad8a: pop rbx
0xad8b: pop rbp
0xad8c: pop r12
0xad8e: ret 
0xad90: push r15
0xad92: push r14
0xad94: mov eax,0x1
0xad99: push r13
0xad9b: push r12
0xad9d: push rbp
0xad9e: push rbx
0xad9f: sub rsp,0x8
0xada3: mov rbp,qword ptr [rsi+0x30]
0xada7: test rbp,rbp
0xadaa: je 0xae40
0xadb0: cmp rsi,rbp
0xadb3: mov r12,rdi
0xadb6: mov r13,rsi
0xadb9: ja 0xadc4
0xadbb: lea rdx,[rsi+0x38]
0xadbf: cmp rbp,rdx
0xadc2: jb 0xae40
0xadc4: cmp byte ptr [rbp],0x0
0xadc8: lea rbx,[r12+0x9]
0xadcd: je 0xae30
0xadcf: nop 
0xadd0: mov rsi,rbp
0xadd3: mov rdi,rbx
0xadd6: call 0x1fc0
0xaddb: test eax,eax
0xaddd: je 0xae37
0xaddf: cmp byte ptr [rbx],0x0
0xade2: jne 0xadf6
0xade4: lea r14,[r12+0x9]
0xade9: cmp r14,rbx
0xadec: jne 0xae50
0xadee: cmp byte ptr [r12+0x8],0x0
0xadf4: je 0xae50
0xadf6: mov rdi,rbx
0xadf9: call 0x1e40
0xadfe: lea rbx,[rbx+rax+0x1]
0xae03: cmp byte ptr [rbx],0x0
0xae06: jne 0xadd0
0xae08: mov rax,qword ptr [r12]
0xae0c: test rax,rax
0xae0f: je 0xadd0
0xae11: lea rbx,[rax+0x9]
0xae15: mov rsi,rbp
0xae18: mov r12,rax
0xae1b: mov rdi,rbx
0xae1e: call 0x1fc0
0xae23: test eax,eax
0xae25: jne 0xaddf
0xae27: jmp 0xae37
0xae30: lea rbx,[rip+0x4d4a]
0xae37: mov qword ptr [r13+0x30],rbx
0xae3b: mov eax,0x1
0xae40: add rsp,0x8
0xae44: pop rbx
0xae45: pop rbp
0xae46: pop r12
0xae48: pop r13
0xae4a: pop r14
0xae4c: pop r15
0xae4e: ret 
0xae50: mov rdi,rbp
0xae53: call 0x1e40
0xae58: lea rdx,[rax+0x1]
0xae5c: mov r15,rax
0xae5f: mov rax,rbx
0xae62: sub rax,r14
0xae65: mov rcx,rax
0xae68: not rcx
0xae6b: cmp rcx,rdx
0xae6e: jb 0xaea0
0xae70: add rax,rdx
0xae73: cmp rax,0x76
0xae77: jbe 0xaeb0
0xae79: mov rdi,rbp
0xae7c: call 0xad00
0xae81: mov rbx,rax
0xae84: mov qword ptr [r12],rax
0xae88: xor eax,eax
0xae8a: test rbx,rbx
0xae8d: je 0xae40
0xae8f: mov byte ptr [rbx+0x8],0x0
0xae93: add rbx,0x9
0xae97: jmp 0xae37
0xaea0: call 0x1d40
0xaea5: mov dword ptr [rax],0xc
0xaeab: xor eax,eax
0xaead: jmp 0xae40
0xaeb0: mov rsi,rbp
0xaeb3: mov rdi,rbx
0xaeb6: call 0x1fe0
0xaebb: mov byte ptr [rbx+r15+0x1],0x0
0xaec1: jmp 0xae37
0xaed0: push r12
0xaed2: push rbp
0xaed3: mov rbp,rdi
0xaed6: push rbx
0xaed7: lea rdi,[rip+0x2ed1]
0xaede: sub rsp,0x10
0xaee2: call 0x1cf0
0xaee7: test rax,rax
0xaeea: mov rbx,rax
0xaeed: je 0xaf88
0xaef3: cmp byte ptr [rbp+0x8],0x0
0xaef7: jne 0xaf60
0xaef9: mov rdi,rbx
0xaefc: call 0xad00
0xaf01: test rax,rax
0xaf04: mov r12,rax
0xaf07: je 0xaf4d
0xaf09: xor edi,edi
0xaf0b: cmp byte ptr [rbp+0x8],0x0
0xaf0f: je 0xaf15
0xaf11: lea rdi,[rbp+0x9]
0xaf15: call 0xac40
0xaf1a: test eax,eax
0xaf1c: je 0xafa8
0xaf22: call 0x1d40
0xaf27: cmp r12,0x1
0xaf2b: mov ebx,dword ptr [rax]
0xaf2d: je 0xaf48
0xaf2f: mov rdi,r12
0xaf32: mov qword ptr [rsp+0x8],rax
0xaf37: call 0xac70
0xaf3c: mov rax,qword ptr [rsp+0x8]
0xaf41: nop dword ptr [rax]
0xaf48: mov dword ptr [rax],ebx
0xaf4a: xor r12d,r12d
0xaf4d: add rsp,0x10
0xaf51: mov rax,r12
0xaf54: pop rbx
0xaf55: pop rbp
0xaf56: pop r12
0xaf58: ret 
0xaf60: lea rdi,[rbp+0x9]
0xaf64: mov rsi,rax
0xaf67: mov r12d,0x1
0xaf6d: call 0x1fc0
0xaf72: test eax,eax
0xaf74: jne 0xaef9
0xaf76: add rsp,0x10
0xaf7a: mov rax,r12
0xaf7d: pop rbx
0xaf7e: pop rbp
0xaf7f: pop r12
0xaf81: ret 
0xaf88: cmp byte ptr [rbp+0x8],0x0
0xaf8c: mov r12d,0x1
0xaf92: jne 0xaef9
0xaf98: add rsp,0x10
0xaf9c: mov rax,r12
0xaf9f: pop rbx
0xafa0: pop rbp
0xafa1: pop r12
0xafa3: ret 
0xafa8: call 0x1ff0
0xafad: jmp 0xaf4d
0xafb0: cmp rdi,0x1
0xafb4: je 0xafbb
0xafb6: jmp 0xac70
0xafbb: ret 
0xafc0: push r13
0xafc2: push r12
0xafc4: push rbp
0xafc5: push rbx
0xafc6: mov rbp,rsi
0xafc9: sub rsp,0x8
0xafcd: test rdi,rdi
0xafd0: je 0xb040
0xafd2: mov r13,rdx
0xafd5: mov rbx,rdi
0xafd8: call 0xaed0
0xafdd: test rax,rax
0xafe0: mov r12,rax
0xafe3: je 0xb02e
0xafe5: mov rsi,r13
0xafe8: mov rdi,rbp
0xafeb: call 0x1d60
0xaff0: test rax,rax
0xaff3: je 0xb020
0xaff5: mov rsi,r13
0xaff8: mov rdi,rbx
0xaffb: call 0xad90
0xb000: test al,al
0xb002: je 0xb020
0xb004: cmp r12,0x1
0xb008: jne 0xb055
0xb00a: add rsp,0x8
0xb00e: mov rax,r13
0xb011: pop rbx
0xb012: pop rbp
0xb013: pop r12
0xb015: pop r13
0xb017: ret 
0xb020: cmp r12,0x1
0xb024: je 0xb02e
0xb026: mov rdi,r12
0xb029: call 0xaca0
0xb02e: add rsp,0x8
0xb032: xor eax,eax
0xb034: pop rbx
0xb035: pop rbp
0xb036: pop r12
0xb038: pop r13
0xb03a: ret 
0xb040: add rsp,0x8
0xb044: mov rdi,rbp
0xb047: mov rsi,rdx
0xb04a: pop rbx
0xb04b: pop rbp
0xb04c: pop r12
0xb04e: pop r13
0xb050: jmp 0x1ef0
0xb055: mov rdi,r12
0xb058: call 0xaca0
0xb05d: test al,al
0xb05f: jne 0xb00a
0xb061: jmp 0xb02e
0xb070: push r12
0xb072: push rbp
0xb073: push rbx
0xb074: mov rbx,rsi
0xb077: sub rsp,0x50
0xb07b: mov rax,qword ptr fs:0x28
0xb084: mov qword ptr [rsp+0x48],rax
0xb089: xor eax,eax
0xb08b: test rdi,rdi
0xb08e: je 0xb190
0xb094: mov rbp,rdi
0xb097: call 0xaed0
0xb09c: test rax,rax
0xb09f: mov r12,rax
0xb0a2: je 0xb1a0
0xb0a8: mov rdi,rbx
0xb0ab: call 0x20a0
0xb0b0: cmp rax,-0x1
0xb0b4: mov qword ptr [rsp+0x8],rax
0xb0b9: je 0xb110
0xb0ba: push rbp
0xb0bb: mov rsi,rbx
0xb0be: mov rdi,rbp
0xb0c1: call 0xad90
0xb0c6: test al,al
0xb0c8: jne 0xb0d3
0xb0ca: mov qword ptr [rsp+0x8],-0x1
0xb0d3: cmp r12,0x1
0xb0d7: je 0xb0e9
0xb0d9: mov rdi,r12
0xb0dc: call 0xaca0
0xb0e1: test al,al
0xb0e3: je 0xb1a0
0xb0e9: mov rax,qword ptr [rsp+0x8]
0xb0ee: mov rcx,qword ptr [rsp+0x48]
0xb0f3: xor rcx,qword ptr fs:0x28
0xb0fc: jne 0xb1ac
0xb102: add rsp,0x50
0xb106: pop rbx
0xb107: pop rbp
0xb108: pop r12
0xb10a: ret 
0xb110: lea rsi,[rsp+0x10]
0xb115: lea rdi,[rsp+0x8]
0xb11a: call 0x1d60
0xb11f: test rax,rax
0xb122: je 0xb0d3
0xb124: mov eax,dword ptr [rbx]
0xb126: mov edx,dword ptr [rbx+0x4]
0xb129: xor eax,dword ptr [rsp+0x10]
0xb12d: xor edx,dword ptr [rsp+0x14]
0xb131: mov ecx,dword ptr [rsp+0x30]
0xb135: or eax,edx
0xb137: mov edx,dword ptr [rbx+0x8]
0xb13a: xor edx,dword ptr [rsp+0x18]
0xb13e: or eax,edx
0xb140: mov edx,dword ptr [rbx+0xc]
0xb143: xor edx,dword ptr [rsp+0x1c]
0xb147: or eax,edx
0xb149: mov edx,dword ptr [rbx+0x10]
0xb14c: xor edx,dword ptr [rsp+0x20]
0xb150: or eax,edx
0xb152: mov edx,dword ptr [rbx+0x14]
0xb155: xor edx,dword ptr [rsp+0x24]
0xb159: or eax,edx
0xb15b: mov edx,dword ptr [rbx+0x20]
0xb15e: test edx,edx
0xb160: sete dil
0xb164: test ecx,ecx
0xb166: sete sil
0xb16a: cmp dil,sil
0xb16d: je 0xb17b
0xb16f: test edx,edx
0xb171: js 0xb17b
0xb173: test ecx,ecx
0xb175: jns 0xb0d3
0xb17b: test eax,eax
0xb17d: je 0xb0bb
0xb183: jmp 0xb0d3
0xb190: mov rdi,rsi
0xb193: call 0x2100
0xb198: jmp 0xb0ee
0xb1a0: mov rax,-0x1
0xb1a7: jmp 0xb0ee
0xb1ac: call 0x1e80
0xb1b1: nop word ptr cs:[rax+rax]
0xb1bb: nop dword ptr [rax+rax]
0xb1c0: push r12
0xb1c2: push rbp
0xb1c3: mov rbp,rdi
0xb1c6: push rbx
0xb1c7: call 0x1d90
0xb1cc: mov ebx,dword ptr [rbp]
0xb1cf: mov rdi,rbp
0xb1d2: mov r12,rax
0xb1d5: call 0xb590
0xb1da: and ebx,0x20
0xb1dd: test ebx,ebx
0xb1df: jne 0xb1f8
0xb1e1: test eax,eax
0xb1e3: je 0xb1ef
0xb1e5: test r12,r12
0xb1e8: mov eax,0xffffffff
0xb1ed: je 0xb228
0xb1ef: pop rbx
0xb1f0: pop rbp
0xb1f1: pop r12
0xb1f3: ret 
0xb1f8: test eax,eax
0xb1fa: jne 0xb218
0xb1fc: call 0x1d40
0xb201: mov dword ptr [rax],0x0
0xb207: mov eax,0xffffffff
0xb20c: pop rbx
0xb20d: pop rbp
0xb20e: pop r12
0xb210: ret 
0xb218: pop rbx
0xb219: mov eax,0xffffffff
0xb21e: pop rbp
0xb21f: pop r12
0xb221: ret 
0xb228: call 0x1d40
0xb22d: cmp dword ptr [rax],0x9
0xb230: pop rbx
0xb231: pop rbp
0xb232: pop r12
0xb234: setne al
0xb237: movzx eax,al
0xb23a: neg eax
0xb23c: ret 
0xb240: sub rsp,0x58
0xb244: mov qword ptr [rsp+0x30],rdx
0xb249: xor edx,edx
0xb24b: mov rax,qword ptr fs:0x28
0xb254: mov qword ptr [rsp+0x18],rax
0xb259: xor eax,eax
0xb25b: test sil,0x40
0xb25f: jne 0xb288
0xb261: xor eax,eax
0xb263: call 0x2140
0xb268: mov edi,eax
0xb26a: call 0xb350
0xb26f: mov rcx,qword ptr [rsp+0x18]
0xb274: xor rcx,qword ptr fs:0x28
0xb27d: jne 0xb2a9
0xb27f: add rsp,0x58
0xb283: ret 
0xb288: lea rax,[rsp+0x60]
0xb28d: mov dword ptr [rsp],0x10
0xb294: mov edx,dword ptr [rsp+0x30]
0xb298: mov qword ptr [rsp+0x8],rax
0xb29d: lea rax,[rsp+0x20]
0xb2a2: mov qword ptr [rsp+0x10],rax
0xb2a7: jmp 0xb261
0xb2a9: call 0x1e80
0xb2ae: nop 
0xb2b0: sub rsp,0x8
0xb2b4: xor esi,esi
0xb2b6: call 0x20e0
0xb2bb: mov rdx,rax
0xb2be: mov eax,0x1
0xb2c3: test rdx,rdx
0xb2c6: je 0xb2e5
0xb2c8: lea rdi,[rip+0x4ce9]
0xb2cf: mov ecx,0x2
0xb2d4: mov rsi,rdx
0xb2d7: rep cmpsb [rsi],es:[rdi]
0xb2d9: seta cl
0xb2dc: sbb cl,0x0
0xb2df: xor eax,eax
0xb2e1: test cl,cl
0xb2e3: jne 0xb2f0
0xb2e5: add rsp,0x8
0xb2e9: ret 
0xb2f0: lea rdi,[rip+0x4cc3]
0xb2f7: mov ecx,0x6
0xb2fc: mov rsi,rdx
0xb2ff: rep cmpsb [rsi],es:[rdi]
0xb301: seta al
0xb304: sbb al,0x0
0xb306: test al,al
0xb308: setne al
0xb30b: add rsp,0x8
0xb30f: ret 
0xb310: sub rsp,0x8
0xb314: mov edi,0xe
0xb319: call 0x2070
0xb31e: test rax,rax
0xb321: je 0xb340
0xb323: cmp byte ptr [rax],0x0
0xb326: lea rdx,[rip+0x4c93]
0xb32d: cmove rax,rdx
0xb331: add rsp,0x8
0xb335: ret 
0xb340: lea rax,[rip+0x4c79]
0xb347: add rsp,0x8
0xb34b: ret 
0xb350: push r13
0xb352: push r12
0xb354: push rbp
0xb355: push rbx
0xb356: mov ebx,edi
0xb358: sub rsp,0x8
0xb35c: cmp edi,0x2
0xb35f: ja 0xb382
0xb361: call 0xb730
0xb366: mov r12d,eax
0xb369: call 0x1d40
0xb36e: mov r13d,dword ptr [rax]
0xb371: mov rbp,rax
0xb374: mov edi,ebx
0xb376: call 0x1f50
0xb37b: mov ebx,r12d
0xb37e: mov dword ptr [rbp],r13d
0xb382: add rsp,0x8
0xb386: mov eax,ebx
0xb388: pop rbx
0xb389: pop rbp
0xb38a: pop r12
0xb38c: pop r13
0xb38e: ret 
0xb390: push r15
0xb392: push r14
0xb394: push r13
0xb396: push r12
0xb398: push rbp
0xb399: push rbx
0xb39a: sub rsp,0x28
0xb39e: mov rax,qword ptr fs:0x28
0xb3a7: mov qword ptr [rsp+0x18],rax
0xb3ac: xor eax,eax
0xb3ae: test rdi,rdi
0xb3b1: movdqu xmm0,[rsi]
0xb3b5: movups [rsp],xmm0
0xb3b9: mov r14,qword ptr [rsi+0x10]
0xb3bd: mov qword ptr [rsp+0x10],r14
0xb3c2: je 0xb470
0xb3c8: mov r12,rdi
0xb3cb: mov r15,rsi
0xb3ce: mov rbp,rdi
0xb3d1: xor ebx,ebx
0xb3d3: mov r13,-0x1
0xb3da: mov edx,dword ptr [rsp]
0xb3dd: cmp edx,0x2f
0xb3e0: ja 0xb4c0
0xb3e6: mov eax,edx
0xb3e8: add edx,0x8
0xb3eb: add rax,r14
0xb3ee: mov dword ptr [rsp],edx
0xb3f1: mov rdi,qword ptr [rax]
0xb3f4: call 0x1e40
0xb3f9: add rbx,rax
0xb3fc: cmovb rbx,r13
0xb400: sub rbp,0x1
0xb404: jne 0xb3da
0xb406: cmp rbx,0x7fffffff
0xb40d: ja 0xb4b0
0xb413: lea rdi,[rbx+0x1]
0xb417: call 0x9ba0
0xb41c: mov r14,rax
0xb41f: mov rbx,rax
0xb422: jmp 0xb455
0xb424: mov eax,edx
0xb426: add rax,qword ptr [r15+0x10]
0xb42a: add edx,0x8
0xb42d: mov dword ptr [r15],edx
0xb430: mov r13,qword ptr [rax]
0xb433: mov rdi,r13
0xb436: call 0x1e40
0xb43b: mov rdi,rbx
0xb43e: mov rbp,rax
0xb441: mov rdx,rax
0xb444: mov rsi,r13
0xb447: add rbx,rbp
0xb44a: call 0x1fe0
0xb44f: sub r12,0x1
0xb453: je 0xb480
0xb455: mov edx,dword ptr [r15]
0xb458: cmp edx,0x2f
0xb45b: jbe 0xb424
0xb45d: mov rax,qword ptr [r15+0x8]
0xb461: lea rdx,[rax+0x8]
0xb465: mov qword ptr [r15+0x8],rdx
0xb469: jmp 0xb430
0xb470: mov edi,0x1
0xb475: call 0x9ba0
0xb47a: mov rbx,rax
0xb47d: mov r14,rax
0xb480: mov byte ptr [rbx],0x0
0xb483: mov rcx,qword ptr [rsp+0x18]
0xb488: xor rcx,qword ptr fs:0x28
0xb491: mov rax,r14
0xb494: jne 0xb4a5
0xb496: add rsp,0x28
0xb49a: pop rbx
0xb49b: pop rbp
0xb49c: pop r12
0xb49e: pop r13
0xb4a0: pop r14
0xb4a2: pop r15
0xb4a4: ret 
0xb4a5: call 0x1e80
0xb4aa: nop word ptr [rax+rax]
0xb4b0: call 0x1d40
0xb4b5: xor r14d,r14d
0xb4b8: mov dword ptr [rax],0x4b
0xb4be: jmp 0xb483
0xb4c0: mov rax,qword ptr [rsp+0x8]
0xb4c5: lea rdx,[rax+0x8]
0xb4c9: mov qword ptr [rsp+0x8],rdx
0xb4ce: jmp 0xb3f1
0xb4e0: sub rsp,0x18
0xb4e4: mov rax,qword ptr fs:0x28
0xb4ed: mov qword ptr [rsp+0x8],rax
0xb4f2: xor eax,eax
0xb4f4: movzx eax,byte ptr [rdi]
0xb4f7: test al,al
0xb4f9: je 0xb576
0xb4fb: cmp al,0x25
0xb4fd: mov r8,rdi
0xb500: jne 0xb538
0xb502: cmp byte ptr [rdi+0x1],0x73
0xb506: jne 0xb538
0xb508: xor edi,edi
0xb50a: jmp 0xb51d
0xb510: cmp cl,0x25
0xb513: jne 0xb538
0xb515: cmp byte ptr [r8+rdi*2+0x1],0x73
0xb51b: jne 0xb538
0xb51d: add rdi,0x1
0xb521: movzx ecx,byte ptr [r8+rdi*2]
0xb526: test cl,cl
0xb528: jne 0xb510
0xb52a: call 0xb390
0xb52f: jmp 0xb54e
0xb538: mov rdx,rsi
0xb53b: mov rdi,rsp
0xb53e: mov rsi,r8
0xb541: call 0xb6b0
0xb546: test eax,eax
0xb548: js 0xb568
0xb54a: mov rax,qword ptr [rsp]
0xb54e: mov rdx,qword ptr [rsp+0x8]
0xb553: xor rdx,qword ptr fs:0x28
0xb55c: jne 0xb57a
0xb55e: add rsp,0x18
0xb562: ret 
0xb568: call 0x1d40
0xb56d: cmp dword ptr [rax],0xc
0xb570: je 0xb57f
0xb572: xor eax,eax
0xb574: jmp 0xb54e
0xb576: xor edi,edi
0xb578: jmp 0xb52a
0xb57a: call 0x1e80
0xb57f: call 0x9df0
0xb584: nop word ptr cs:[rax+rax]
0xb58e: nop 
0xb590: push r12
0xb592: push rbp
0xb593: push rbx
0xb594: mov rbx,rdi
0xb597: call 0x2000
0xb59c: test eax,eax
0xb59e: mov rdi,rbx
0xb5a1: js 0xb5f7
0xb5a3: call 0x20b0
0xb5a8: test eax,eax
0xb5aa: jne 0xb5d8
0xb5ac: mov rdi,rbx
0xb5af: call 0xb610
0xb5b4: test eax,eax
0xb5b6: je 0xb5f4
0xb5b8: call 0x1d40
0xb5bd: mov r12d,dword ptr [rax]
0xb5c0: mov rdi,rbx
0xb5c3: mov rbp,rax
0xb5c6: call 0x1df0
0xb5cb: test r12d,r12d
0xb5ce: jne 0xb600
0xb5d0: pop rbx
0xb5d1: pop rbp
0xb5d2: pop r12
0xb5d4: ret 
0xb5d8: mov rdi,rbx
0xb5db: call 0x2000
0xb5e0: xor esi,esi
0xb5e2: mov edx,0x1
0xb5e7: mov edi,eax
0xb5e9: call 0x1f00
0xb5ee: cmp rax,-0x1
0xb5f2: jne 0xb5ac
0xb5f4: mov rdi,rbx
0xb5f7: pop rbx
0xb5f8: pop rbp
0xb5f9: pop r12
0xb5fb: jmp 0x1df0
0xb600: mov dword ptr [rbp],r12d
0xb604: mov eax,0xffffffff
0xb609: jmp 0xb5d0
0xb610: test rdi,rdi
0xb613: push rbx
0xb614: mov rbx,rdi
0xb617: je 0xb62a
0xb619: call 0x20b0
0xb61e: test eax,eax
0xb620: je 0xb62a
0xb622: test dword ptr [rbx],0x100
0xb628: jne 0xb638
0xb62a: mov rdi,rbx
0xb62d: pop rbx
0xb62e: jmp 0x2040
0xb638: mov rdi,rbx
0xb63b: mov edx,0x1
0xb640: xor esi,esi
0xb642: call 0xb650
0xb647: mov rdi,rbx
0xb64a: pop rbx
0xb64b: jmp 0x2040
0xb650: mov rax,qword ptr [rdi+0x8]
0xb654: cmp qword ptr [rdi+0x10],rax
0xb658: je 0xb660
0xb65a: jmp 0x2150
0xb660: mov rax,qword ptr [rdi+0x20]
0xb664: cmp qword ptr [rdi+0x28],rax
0xb668: jne 0xb65a
0xb66a: cmp qword ptr [rdi+0x48],0x0
0xb66f: jne 0xb65a
0xb671: push r12
0xb673: push rbp
0xb674: mov r12d,edx
0xb677: push rbx
0xb678: mov rbp,rsi
0xb67b: mov rbx,rdi
0xb67e: call 0x2000
0xb683: mov edx,r12d
0xb686: mov rsi,rbp
0xb689: mov edi,eax
0xb68b: call 0x1f00
0xb690: cmp rax,-0x1
0xb694: je 0xb6a2
0xb696: and dword ptr [rbx],-0x11
0xb699: mov qword ptr [rbx+0x90],rax
0xb6a0: xor eax,eax
0xb6a2: pop rbx
0xb6a3: pop rbp
0xb6a4: pop r12
0xb6a6: ret 
0xb6b0: push rbx
0xb6b1: mov rax,rsi
0xb6b4: mov rbx,rdi
0xb6b7: xor edi,edi
0xb6b9: sub rsp,0x10
0xb6bd: mov rcx,qword ptr fs:0x28
0xb6c6: mov qword ptr [rsp+0x8],rcx
0xb6cb: xor ecx,ecx
0xb6cd: mov rsi,rsp
0xb6d0: mov rcx,rdx
0xb6d3: mov rdx,rax
0xb6d6: call 0xb9c0
0xb6db: test rax,rax
0xb6de: je 0xb722
0xb6e0: mov rdx,qword ptr [rsp]
0xb6e4: cmp rdx,0x7fffffff
0xb6eb: ja 0xb708
0xb6ed: mov qword ptr [rbx],rax
0xb6f0: mov eax,edx
0xb6f2: mov rbx,qword ptr [rsp+0x8]
0xb6f7: xor rbx,qword ptr fs:0x28
0xb700: jne 0xb729
0xb702: add rsp,0x10
0xb706: pop rbx
0xb707: ret 
0xb708: mov rdi,rax
0xb70b: call 0x1d10
0xb710: call 0x1d40
0xb715: mov dword ptr [rax],0x4b
0xb71b: mov eax,0xffffffff
0xb720: jmp 0xb6f2
0xb722: mov eax,0xffffffff
0xb727: jmp 0xb6f2
0xb729: call 0x1e80
0xb72e: nop 
0xb730: mov edx,0x3
0xb735: xor esi,esi
0xb737: xor eax,eax
0xb739: jmp 0xb740
0xb740: push r12
0xb742: push rbp
0xb743: mov ebp,edi
0xb745: push rbx
0xb746: sub rsp,0x50
0xb74a: mov rax,qword ptr fs:0x28
0xb753: mov qword ptr [rsp+0x18],rax
0xb758: xor eax,eax
0xb75a: lea rax,[rsp+0x70]
0xb75f: test esi,esi
0xb761: mov qword ptr [rsp+0x30],rdx
0xb766: mov qword ptr [rsp+0x38],rcx
0xb76b: mov qword ptr [rsp+0x40],r8
0xb770: mov qword ptr [rsp+0x8],rax
0xb775: lea rax,[rsp+0x20]
0xb77a: mov qword ptr [rsp+0x48],r9
0xb77f: mov dword ptr [rsp],0x10
0xb786: mov qword ptr [rsp+0x10],rax
0xb78b: je 0xb992
0xb791: cmp esi,0x406
0xb797: jne 0xb7e0
0xb799: mov rax,qword ptr [rsp+0x10]
0xb79e: cmp dword ptr [rip+0x207b53],0x0
0xb7a5: mov dword ptr [rsp],0x18
0xb7ac: mov r12d,dword ptr [rax+0x10]
0xb7b0: mov edx,r12d
0xb7b3: js 0xb8e3
0xb7b9: xor eax,eax
0xb7bb: mov esi,0x406
0xb7c0: call 0x1dc0
0xb7c5: test eax,eax
0xb7c7: mov ebx,eax
0xb7c9: js 0xb958
0xb7cf: mov dword ptr [rip+0x207b1f],0x1
0xb7d9: jmp 0xb820
0xb7e0: cmp esi,0xb
0xb7e3: je 0xb810
0xb7e5: jg 0xb840
0xb7e7: cmp esi,0x4
0xb7ea: je 0xb8c0
0xb7f0: jg 0xb8b0
0xb7f6: cmp esi,0x2
0xb7f9: je 0xb8c0
0xb7ff: jg 0xb810
0xb801: cmp esi,0x1
0xb804: jne 0xb868
0xb806: nop word ptr cs:[rax+rax]
0xb810: mov edi,ebp
0xb812: xor eax,eax
0xb814: call 0x1dc0
0xb819: mov ebx,eax
0xb81b: nop dword ptr [rax+rax]
0xb820: mov rcx,qword ptr [rsp+0x18]
0xb825: xor rcx,qword ptr fs:0x28
0xb82e: mov eax,ebx
0xb830: jne 0xb98d
0xb836: add rsp,0x50
0xb83a: pop rbx
0xb83b: pop rbp
0xb83c: pop r12
0xb83e: ret 
0xb840: cmp esi,0x407
0xb846: jg 0xb890
0xb848: cmp esi,0x406
0xb84e: jge 0xb8c0
0xb850: cmp esi,0x401
0xb856: je 0xb810
0xb858: cmp esi,0x402
0xb85e: je 0xb8c0
0xb860: cmp esi,0x400
0xb866: je 0xb8c0
0xb868: mov eax,dword ptr [rsp]
0xb86b: cmp eax,0x2f
0xb86e: ja 0xb9aa
0xb874: add rax,qword ptr [rsp+0x10]
0xb879: mov rdx,qword ptr [rax]
0xb87c: mov edi,ebp
0xb87e: xor eax,eax
0xb880: call 0x1dc0
0xb885: mov ebx,eax
0xb887: jmp 0xb820
0xb890: cmp esi,0x409
0xb896: je 0xb8c0
0xb898: jl 0xb810
0xb89e: cmp esi,0x40a
0xb8a4: jne 0xb868
0xb8a6: jmp 0xb810
0xb8b0: cmp esi,0x9
0xb8b3: je 0xb810
0xb8b9: jg 0xb8c0
0xb8bb: cmp esi,0x8
0xb8be: jne 0xb868
0xb8c0: mov eax,dword ptr [rsp]
0xb8c3: cmp eax,0x2f
0xb8c6: ja 0xb9b4
0xb8cc: add rax,qword ptr [rsp+0x10]
0xb8d1: mov edx,dword ptr [rax]
0xb8d3: mov edi,ebp
0xb8d5: xor eax,eax
0xb8d7: call 0x1dc0
0xb8dc: mov ebx,eax
0xb8de: jmp 0xb820
0xb8e3: xor esi,esi
0xb8e5: xor eax,eax
0xb8e7: call 0x1dc0
0xb8ec: test eax,eax
0xb8ee: mov ebx,eax
0xb8f0: js 0xb820
0xb8f6: cmp dword ptr [rip+0x2079fb],-0x1
0xb8fd: jne 0xb820
0xb903: xor eax,eax
0xb905: mov esi,0x1
0xb90a: mov edi,ebx
0xb90c: call 0x1dc0
0xb911: test eax,eax
0xb913: js 0xb931
0xb915: or eax,0x1
0xb918: mov esi,0x2
0xb91d: mov edi,ebx
0xb91f: mov edx,eax
0xb921: xor eax,eax
0xb923: call 0x1dc0
0xb928: cmp eax,-0x1
0xb92b: jne 0xb820
0xb931: call 0x1d40
0xb936: mov r12d,dword ptr [rax]
0xb939: mov rbp,rax
0xb93c: mov edi,ebx
0xb93e: call 0x1f50
0xb943: mov ebx,0xffffffff
0xb948: mov dword ptr [rbp],r12d
0xb94c: jmp 0xb820
0xb958: call 0x1d40
0xb95d: cmp dword ptr [rax],0x16
0xb960: jne 0xb7cf
0xb966: xor esi,esi
0xb968: xor eax,eax
0xb96a: mov edx,r12d
0xb96d: mov edi,ebp
0xb96f: call 0x1dc0
0xb974: test eax,eax
0xb976: mov ebx,eax
0xb978: js 0xb820
0xb97e: mov dword ptr [rip+0x207970],0xffffffff
0xb988: jmp 0xb903
0xb98d: call 0x1e80
0xb992: mov rax,qword ptr [rsp+0x10]
0xb997: xor esi,esi
0xb999: mov edx,dword ptr [rax+0x10]
0xb99c: xor eax,eax
0xb99e: call 0x1dc0
0xb9a3: mov ebx,eax
0xb9a5: jmp 0xb820
0xb9aa: mov rax,qword ptr [rsp+0x8]
0xb9af: jmp 0xb879
0xb9b4: mov rax,qword ptr [rsp+0x8]
0xb9b9: jmp 0xb8d1
0xb9c0: push rbp
0xb9c1: mov rbp,rsp
0xb9c4: push r15
0xb9c6: push r14
0xb9c8: push r13
0xb9ca: push r12
0xb9cc: lea r14,[rbp-0x3b0]
0xb9d3: push rbx
0xb9d4: mov rbx,rdx
0xb9d7: mov r12,rcx
0xb9da: mov rdx,r14
0xb9dd: sub rsp,0x408
0xb9e4: mov qword ptr [rbp-0x418],rsi
0xb9eb: lea rsi,[rbp-0x2c0]
0xb9f2: mov qword ptr [rbp-0x3e8],rdi
0xb9f9: mov rdi,rbx
0xb9fc: mov qword ptr [rbp-0x410],r14
0xba03: mov rax,qword ptr fs:0x28
0xba0c: mov qword ptr [rbp-0x38],rax
0xba10: xor eax,eax
0xba12: mov qword ptr [rbp-0x408],rsi
0xba19: call 0xcce0
0xba1e: test eax,eax
0xba20: js 0xc888
0xba26: mov rsi,r14
0xba29: mov rdi,r12
0xba2c: call 0xcae0
0xba31: test eax,eax
0xba33: js 0xc8f0
0xba39: mov rax,qword ptr [rbp-0x2b0]
0xba40: mov rdx,-0x1
0xba47: add rax,0x7
0xba4b: cmp rax,0x6
0xba4f: cmovbe rax,rdx
0xba53: add rax,qword ptr [rbp-0x2a8]
0xba5a: jb 0xc488
0xba60: mov rdi,rax
0xba63: xor r8d,r8d
0xba66: add rdi,0x6
0xba6a: setb r8b
0xba6e: jb 0xc488
0xba74: cmp rdi,0xf9f
0xba7b: jbe 0xbbc8
0xba81: cmp rdi,-0x1
0xba85: mov qword ptr [rbp-0x3c8],r8
0xba8c: je 0xc488
0xba92: call 0x2030
0xba97: test rax,rax
0xba9a: mov qword ptr [rbp-0x3d8],rax
0xbaa1: je 0xc488
0xbaa7: mov r8,qword ptr [rbp-0x3c8]
0xbaae: mov qword ptr [rbp-0x420],rax
0xbab5: xor r12d,r12d
0xbab8: cmp qword ptr [rbp-0x3e8],0x0
0xbac0: je 0xbacc
0xbac2: mov rax,qword ptr [rbp-0x418]
0xbac9: mov r12,qword ptr [rax]
0xbacc: mov r13,qword ptr [rbp-0x2b8]
0xbad3: lea rax,[rbp-0x3bc]
0xbada: mov r15,qword ptr [rbp-0x3e8]
0xbae1: mov qword ptr [rbp-0x400],0x0
0xbaec: mov qword ptr [rbp-0x3f0],rax
0xbaf3: mov rax,rbx
0xbaf6: mov rbx,r8
0xbaf9: mov rcx,qword ptr [r13]
0xbafd: mov r8,rax
0xbb00: cmp rcx,r8
0xbb03: je 0xc471
0xbb09: sub rcx,r8
0xbb0c: mov rax,rbx
0xbb0f: add rax,rcx
0xbb12: mov r14,rax
0xbb15: jae 0xbbf8
0xbb1b: cmp r12,-0x1
0xbb1f: je 0xc5f0
0xbb25: call 0x1d40
0xbb2a: mov qword ptr [rbp-0x3c8],rax
0xbb31: cmp r15,qword ptr [rbp-0x3e8]
0xbb38: je 0xbb43
0xbb3a: test r15,r15
0xbb3d: jne 0xc620
0xbb43: mov rax,qword ptr [rbp-0x420]
0xbb4a: test rax,rax
0xbb4d: je 0xbb57
0xbb4f: mov rdi,rax
0xbb52: call 0x1d10
0xbb57: mov rax,qword ptr [rbp-0x408]
0xbb5e: mov rdi,qword ptr [rbp-0x2b8]
0xbb65: add rax,0x20
0xbb69: cmp rdi,rax
0xbb6c: je 0xbb73
0xbb6e: call 0x1d10
0xbb73: mov rax,qword ptr [rbp-0x410]
0xbb7a: mov rdi,qword ptr [rbp-0x3a8]
0xbb81: add rax,0x10
0xbb85: cmp rdi,rax
0xbb88: je 0xbb8f
0xbb8a: call 0x1d10
0xbb8f: mov rax,qword ptr [rbp-0x3c8]
0xbb96: xor r15d,r15d
0xbb99: mov dword ptr [rax],0xc
0xbb9f: mov rdi,qword ptr [rbp-0x38]
0xbba3: xor rdi,qword ptr fs:0x28
0xbbac: mov rax,r15
0xbbaf: jne 0xcab7
0xbbb5: lea rsp,[rbp-0x28]
0xbbb9: pop rbx
0xbbba: pop r12
0xbbbc: pop r13
0xbbbe: pop r14
0xbbc0: pop r15
0xbbc2: pop rbp
0xbbc3: ret 
0xbbc8: add rax,0x24
0xbbcc: mov qword ptr [rbp-0x420],0x0
0xbbd7: and rax,-0x10
0xbbdb: sub rsp,rax
0xbbde: lea rax,[rsp+0xf]
0xbbe3: and rax,-0x10
0xbbe7: mov qword ptr [rbp-0x3d8],rax
0xbbee: jmp 0xbab5
0xbbf8: cmp r12,rax
0xbbfb: jae 0xbc64
0xbbfd: test r12,r12
0xbc00: jne 0xc530
0xbc06: cmp rax,0xc
0xbc0a: ja 0xc542
0xbc10: mov r12d,0xc
0xbc16: cmp r15,qword ptr [rbp-0x3e8]
0xbc1d: sete dl
0xbc20: test r15,r15
0xbc23: je 0xc568
0xbc29: test dl,dl
0xbc2b: jne 0xc568
0xbc31: mov rsi,r12
0xbc34: mov rdi,r15
0xbc37: mov qword ptr [rbp-0x3d0],r8
0xbc3e: mov qword ptr [rbp-0x3c8],rcx
0xbc45: call 0x20d0
0xbc4a: test rax,rax
0xbc4d: mov rcx,qword ptr [rbp-0x3c8]
0xbc54: mov r8,qword ptr [rbp-0x3d0]
0xbc5b: je 0xc60b
0xbc61: mov r15,rax
0xbc64: lea rdi,[r15+rbx]
0xbc68: mov rdx,rcx
0xbc6b: mov rsi,r8
0xbc6e: call 0x1fe0
0xbc73: mov rax,qword ptr [rbp-0x400]
0xbc7a: cmp qword ptr [rbp-0x2c0],rax
0xbc81: je 0xc93b
0xbc87: movzx edx,byte ptr [r13+0x48]
0xbc8c: mov rax,qword ptr [r13+0x50]
0xbc90: cmp dl,0x25
0xbc93: je 0xc428
0xbc99: cmp rax,-0x1
0xbc9d: je 0xc8e6
0xbca3: mov r8,qword ptr [rbp-0x3a8]
0xbcaa: shl rax,0x5
0xbcae: add rax,r8
0xbcb1: cmp dl,0x6e
0xbcb4: mov edi,dword ptr [rax]
0xbcb6: mov dword ptr [rbp-0x3d0],edi
0xbcbc: je 0xc4a0
0xbcc2: mov eax,dword ptr [r13+0x10]
0xbcc6: mov rdi,qword ptr [rbp-0x3d8]
0xbccd: test al,0x1
0xbccf: mov byte ptr [rdi],0x25
0xbcd2: lea rbx,[rdi+0x1]
0xbcd6: je 0xbce7
0xbcd8: mov rdi,qword ptr [rbp-0x3d8]
0xbcdf: lea rbx,[rdi+0x2]
0xbce3: mov byte ptr [rdi+0x1],0x27
0xbce7: test al,0x2
0xbce9: je 0xbcf2
0xbceb: mov byte ptr [rbx],0x2d
0xbcee: add rbx,0x1
0xbcf2: test al,0x4
0xbcf4: je 0xbcfd
0xbcf6: mov byte ptr [rbx],0x2b
0xbcf9: add rbx,0x1
0xbcfd: test al,0x8
0xbcff: je 0xbd08
0xbd01: mov byte ptr [rbx],0x20
0xbd04: add rbx,0x1
0xbd08: test al,0x10
0xbd0a: je 0xbd13
0xbd0c: mov byte ptr [rbx],0x23
0xbd0f: add rbx,0x1
0xbd13: test al,0x40
0xbd15: je 0xbd1e
0xbd17: mov byte ptr [rbx],0x49
0xbd1a: add rbx,0x1
0xbd1e: test al,0x20
0xbd20: je 0xbd29
0xbd22: mov byte ptr [rbx],0x30
0xbd25: add rbx,0x1
0xbd29: mov rsi,qword ptr [r13+0x18]
0xbd2d: mov rdx,qword ptr [r13+0x20]
0xbd31: cmp rsi,rdx
0xbd34: je 0xbd66
0xbd36: mov rcx,rdx
0xbd39: mov rdi,rbx
0xbd3c: mov qword ptr [rbp-0x3e0],r8
0xbd43: sub rcx,rsi
0xbd46: mov rdx,rcx
0xbd49: mov qword ptr [rbp-0x3c8],rcx
0xbd50: call 0x1fe0
0xbd55: mov rcx,qword ptr [rbp-0x3c8]
0xbd5c: mov r8,qword ptr [rbp-0x3e0]
0xbd63: add rbx,rcx
0xbd66: mov rsi,qword ptr [r13+0x30]
0xbd6a: mov rdx,qword ptr [r13+0x38]
0xbd6e: cmp rsi,rdx
0xbd71: je 0xbda3
0xbd73: mov rcx,rdx
0xbd76: mov rdi,rbx
0xbd79: mov qword ptr [rbp-0x3e0],r8
0xbd80: sub rcx,rsi
0xbd83: mov rdx,rcx
0xbd86: mov qword ptr [rbp-0x3c8],rcx
0xbd8d: call 0x1fe0
0xbd92: mov rcx,qword ptr [rbp-0x3c8]
0xbd99: mov r8,qword ptr [rbp-0x3e0]
0xbda0: add rbx,rcx
0xbda3: mov edi,dword ptr [rbp-0x3d0]
0xbda9: cmp edi,0x10
0xbdac: ja 0xbddb
0xbdae: mov eax,0x1
0xbdb3: mov ecx,edi
0xbdb5: shl rax,cl
0xbdb8: test eax,0x14180
0xbdbd: jne 0xbdd4
0xbdbf: test ah,0x10
0xbdc2: jne 0xc720
0xbdc8: test ah,0x6
0xbdcb: je 0xbddb
0xbdcd: mov byte ptr [rbx],0x6c
0xbdd0: add rbx,0x1
0xbdd4: mov byte ptr [rbx],0x6c
0xbdd7: add rbx,0x1
0xbddb: movzx eax,byte ptr [r13+0x48]
0xbde0: mov byte ptr [rbx+0x1],0x0
0xbde4: mov byte ptr [rbx],al
0xbde6: mov rax,qword ptr [r13+0x28]
0xbdea: cmp rax,-0x1
0xbdee: je 0xc520
0xbdf4: shl rax,0x5
0xbdf8: add rax,r8
0xbdfb: cmp dword ptr [rax],0x5
0xbdfe: jne 0xc8e6
0xbe04: mov eax,dword ptr [rax+0x10]
0xbe07: mov dword ptr [rbp-0x3e0],0x1
0xbe11: mov dword ptr [rbp-0x3b8],eax
0xbe17: mov rax,qword ptr [r13+0x40]
0xbe1b: cmp rax,-0x1
0xbe1f: je 0xbe4c
0xbe21: shl rax,0x5
0xbe25: add r8,rax
0xbe28: cmp dword ptr [r8],0x5
0xbe2c: jne 0xc8e6
0xbe32: mov eax,dword ptr [rbp-0x3e0]
0xbe38: mov edx,dword ptr [r8+0x10]
0xbe3c: mov dword ptr [rbp+rax*4-0x3b8],edx
0xbe43: lea eax,[rax+0x1]
0xbe46: mov dword ptr [rbp-0x3e0],eax
0xbe4c: mov rax,r14
0xbe4f: xor edx,edx
0xbe51: add rax,0x2
0xbe55: jb 0xcabc
0xbe5b: cmp r12,rax
0xbe5e: jae 0xbeab
0xbe60: test r12,r12
0xbe63: jne 0xc688
0xbe69: cmp rax,0xc
0xbe6d: ja 0xc6a0
0xbe73: mov r12d,0xc
0xbe79: cmp r15,qword ptr [rbp-0x3e8]
0xbe80: sete dl
0xbe83: test r15,r15
0xbe86: je 0xc6d0
0xbe8c: test dl,dl
0xbe8e: jne 0xc6d0
0xbe94: mov rsi,r12
0xbe97: mov rdi,r15
0xbe9a: call 0x20d0
0xbe9f: test rax,rax
0xbea2: je 0xbb25
0xbea8: mov r15,rax
0xbeab: mov byte ptr [r15+r14],0x0
0xbeb0: call 0x1d40
0xbeb5: mov qword ptr [rbp-0x3c8],rax
0xbebc: mov eax,dword ptr [rax]
0xbebe: mov qword ptr [rbp-0x3f8],rbx
0xbec5: mov dword ptr [rbp-0x424],eax
0xbecb: nop dword ptr [rax+rax]
0xbed0: mov rax,qword ptr [rbp-0x3c8]
0xbed7: mov rbx,r12
0xbeda: mov r10d,0x7fffffff
0xbee0: sub rbx,r14
0xbee3: mov dword ptr [rbp-0x3bc],0xffffffff
0xbeed: cmp rbx,0x7fffffff
0xbef4: mov dword ptr [rax],0x0
0xbefa: mov eax,dword ptr [rbp-0x3d0]
0xbf00: cmovbe r10,rbx
0xbf04: cmp eax,0x11
0xbf07: ja 0xc8e6
0xbf0d: lea rsi,[rip+0x40b4]
0xbf14: movsxd rax,dword ptr [rsi+rax*4]
0xbf18: add rax,rsi
0xbf1b: jmp rax
0xc428: cmp rax,-0x1
0xc42c: jne 0xc8e6
0xc432: mov rax,r14
0xc435: add rax,0x1
0xc439: mov rbx,rax
0xc43c: jae 0xc4c8
0xc442: cmp r12,-0x1
0xc446: jne 0xbb25
0xc44c: mov rbx,r12
0xc44f: mov byte ptr [r15+r14],0x25
0xc454: mov r8,qword ptr [r13+0x8]
0xc458: add r13,0x58
0xc45c: mov rcx,qword ptr [r13]
0xc460: add qword ptr [rbp-0x400],0x1
0xc468: cmp rcx,r8
0xc46b: jne 0xbb09
0xc471: mov r14,rbx
0xc474: jmp 0xbc73
0xc488: call 0x1d40
0xc48d: mov qword ptr [rbp-0x3c8],rax
0xc494: jmp 0xbb57
0xc4a0: mov edx,edi
0xc4a2: sub edx,0x12
0xc4a5: cmp edx,0x4
0xc4a8: ja 0xc8e6
0xc4ae: lea rdi,[rip+0x3b5b]
0xc4b5: mov rax,qword ptr [rax+0x10]
0xc4b9: movsxd rdx,dword ptr [rdi+rdx*4]
0xc4bd: add rdx,rdi
0xc4c0: jmp rdx
0xc4c8: cmp r12,rax
0xc4cb: jae 0xc44f
0xc4cd: test r12,r12
0xc4d0: jne 0xc8a0
0xc4d6: cmp rax,0xc
0xc4da: ja 0xc8b2
0xc4e0: mov r12d,0xc
0xc4e6: cmp r15,qword ptr [rbp-0x3e8]
0xc4ed: sete dl
0xc4f0: test r15,r15
0xc4f3: je 0xc760
0xc4f9: test dl,dl
0xc4fb: jne 0xc760
0xc501: mov rsi,r12
0xc504: mov rdi,r15
0xc507: call 0x20d0
0xc50c: test rax,rax
0xc50f: je 0xc60b
0xc515: mov r15,rax
0xc518: jmp 0xc44f
0xc520: mov dword ptr [rbp-0x3e0],0x0
0xc52a: jmp 0xbe17
0xc530: js 0xbb25
0xc536: add r12,r12
0xc539: cmp r12,rax
0xc53c: jae 0xbc16
0xc542: cmp rax,-0x1
0xc546: je 0xbb25
0xc54c: cmp r15,qword ptr [rbp-0x3e8]
0xc553: mov r12,rax
0xc556: sete dl
0xc559: test r15,r15
0xc55c: jne 0xbc29
0xc562: nop word ptr [rax+rax]
0xc568: mov rdi,r12
0xc56b: mov qword ptr [rbp-0x3e0],r8
0xc572: mov byte ptr [rbp-0x3d0],dl
0xc578: mov qword ptr [rbp-0x3c8],rcx
0xc57f: call 0x2030
0xc584: test rax,rax
0xc587: mov r9,rax
0xc58a: mov rcx,qword ptr [rbp-0x3c8]
0xc591: movzx edx,byte ptr [rbp-0x3d0]
0xc598: mov r8,qword ptr [rbp-0x3e0]
0xc59f: je 0xbb25
0xc5a5: test rbx,rbx
0xc5a8: je 0xc7b0
0xc5ae: test dl,dl
0xc5b0: je 0xc7b0
0xc5b6: mov rsi,r15
0xc5b9: mov rdx,rbx
0xc5bc: mov rdi,rax
0xc5bf: mov qword ptr [rbp-0x3d0],r8
0xc5c6: mov qword ptr [rbp-0x3c8],rcx
0xc5cd: call 0x1fe0
0xc5d2: mov rcx,qword ptr [rbp-0x3c8]
0xc5d9: mov r15,rax
0xc5dc: mov r8,qword ptr [rbp-0x3d0]
0xc5e3: jmp 0xbc64
0xc5f0: mov r14,r12
0xc5f3: jmp 0xbc64
0xc60b: call 0x1d40
0xc610: mov qword ptr [rbp-0x3c8],rax
0xc617: nop word ptr [rax+rax]
0xc620: mov rdi,r15
0xc623: call 0x1d10
0xc628: jmp 0xbb43
0xc688: js 0xbb25
0xc68e: add r12,r12
0xc691: cmp r12,rax
0xc694: jae 0xbe79
0xc69a: nop word ptr [rax+rax]
0xc6a0: test rdx,rdx
0xc6a3: jne 0xbb25
0xc6a9: cmp rax,-0x1
0xc6ad: je 0xbb25
0xc6b3: cmp r15,qword ptr [rbp-0x3e8]
0xc6ba: mov r12,rax
0xc6bd: sete dl
0xc6c0: test r15,r15
0xc6c3: jne 0xbe8c
0xc6c9: nop dword ptr [rax]
0xc6d0: mov rdi,r12
0xc6d3: mov byte ptr [rbp-0x3c8],dl
0xc6d9: call 0x2030
0xc6de: test rax,rax
0xc6e1: mov rcx,rax
0xc6e4: movzx edx,byte ptr [rbp-0x3c8]
0xc6eb: je 0xbb25
0xc6f1: test r14,r14
0xc6f4: je 0xc890
0xc6fa: test dl,dl
0xc6fc: je 0xc890
0xc702: mov rsi,r15
0xc705: mov rdx,r14
0xc708: mov rdi,rax
0xc70b: call 0x1fe0
0xc710: mov r15,rax
0xc713: jmp 0xbeab
0xc720: mov byte ptr [rbx],0x4c
0xc723: add rbx,0x1
0xc727: jmp 0xbddb
0xc760: mov rdi,r12
0xc763: mov byte ptr [rbp-0x3c8],dl
0xc769: call 0x2030
0xc76e: test rax,rax
0xc771: mov rcx,rax
0xc774: movzx edx,byte ptr [rbp-0x3c8]
0xc77b: je 0xbb25
0xc781: test r14,r14
0xc784: je 0xc8c4
0xc78a: test dl,dl
0xc78c: je 0xc8c4
0xc792: mov rsi,r15
0xc795: mov rdx,r14
0xc798: mov rdi,rax
0xc79b: call 0x1fe0
0xc7a0: mov r15,rax
0xc7a3: jmp 0xc44f
0xc7b0: mov r15,r9
0xc7b3: jmp 0xbc64
0xc888: xor r15d,r15d
0xc88b: jmp 0xbb9f
0xc890: mov r15,rcx
0xc893: jmp 0xbeab
0xc8a0: js 0xbb25
0xc8a6: add r12,r12
0xc8a9: cmp r12,rax
0xc8ac: jae 0xc4e6
0xc8b2: cmp rax,-0x1
0xc8b6: je 0xbb25
0xc8bc: mov r12,rax
0xc8bf: jmp 0xc4e6
0xc8c4: mov r15,rcx
0xc8c7: jmp 0xc44f
0xc8e6: call 0x1d30
0xc8eb: nop dword ptr [rax+rax]
0xc8f0: mov rax,qword ptr [rbp-0x408]
0xc8f7: mov rdi,qword ptr [rbp-0x2b8]
0xc8fe: add rax,0x20
0xc902: cmp rdi,rax
0xc905: je 0xc90c
0xc907: call 0x1d10
0xc90c: mov rax,qword ptr [rbp-0x410]
0xc913: mov rdi,qword ptr [rbp-0x3a8]
0xc91a: add rax,0x10
0xc91e: cmp rdi,rax
0xc921: je 0xc928
0xc923: call 0x1d10
0xc928: call 0x1d40
0xc92d: xor r15d,r15d
0xc930: mov dword ptr [rax],0x16
0xc936: jmp 0xbb9f
0xc93b: mov rbx,r14
0xc93e: xor eax,eax
0xc940: add rbx,0x1
0xc944: jb 0xca50
0xc94a: cmp r12,rbx
0xc94d: jae 0xc99c
0xc94f: test r12,r12
0xc952: jne 0xca89
0xc958: cmp rbx,0xc
0xc95c: ja 0xca6e
0xc962: mov r12d,0xc
0xc968: cmp r15,qword ptr [rbp-0x3e8]
0xc96f: sete r13b
0xc973: test r15,r15
0xc976: je 0xca1c
0xc97c: test r13b,r13b
0xc97f: jne 0xca1c
0xc985: mov rsi,r12
0xc988: mov rdi,r15
0xc98b: call 0x20d0
0xc990: test rax,rax
0xc993: je 0xc60b
0xc999: mov r15,rax
0xc99c: cmp r15,qword ptr [rbp-0x3e8]
0xc9a3: mov byte ptr [r15+r14],0x0
0xc9a8: je 0xc9c1
0xc9aa: cmp r12,rbx
0xc9ad: jbe 0xc9c1
0xc9af: mov rdi,r15
0xc9b2: mov rsi,rbx
0xc9b5: call 0x20d0
0xc9ba: test rax,rax
0xc9bd: cmovne r15,rax
0xc9c1: mov rax,qword ptr [rbp-0x420]
0xc9c8: test rax,rax
0xc9cb: je 0xc9d5
0xc9cd: mov rdi,rax
0xc9d0: call 0x1d10
0xc9d5: mov rax,qword ptr [rbp-0x408]
0xc9dc: mov rdi,qword ptr [rbp-0x2b8]
0xc9e3: add rax,0x20
0xc9e7: cmp rdi,rax
0xc9ea: je 0xc9f1
0xc9ec: call 0x1d10
0xc9f1: mov rax,qword ptr [rbp-0x410]
0xc9f8: mov rdi,qword ptr [rbp-0x3a8]
0xc9ff: add rax,0x10
0xca03: cmp rdi,rax
0xca06: je 0xca0d
0xca08: call 0x1d10
0xca0d: mov rax,qword ptr [rbp-0x418]
0xca14: mov qword ptr [rax],r14
0xca17: jmp 0xbb9f
0xca1c: mov rdi,r12
0xca1f: call 0x2030
0xca24: test rax,rax
0xca27: mov rcx,rax
0xca2a: je 0xbb25
0xca30: test r14,r14
0xca33: je 0xcaa0
0xca35: test r13b,r13b
0xca38: je 0xcaa0
0xca3a: mov rsi,r15
0xca3d: mov rdx,r14
0xca40: mov rdi,rax
0xca43: call 0x1fe0
0xca48: mov r15,rax
0xca4b: jmp 0xc99c
0xca50: cmp r12,-0x1
0xca54: mov eax,0x1
0xca59: je 0xc99c
0xca5f: test r12,r12
0xca62: je 0xbb25
0xca68: js 0xbb25
0xca6e: test rax,rax
0xca71: jne 0xbb25
0xca77: cmp rbx,-0x1
0xca7b: je 0xbb25
0xca81: mov r12,rbx
0xca84: jmp 0xc968
0xca89: js 0xbb25
0xca8f: add r12,r12
0xca92: cmp r12,rbx
0xca95: jae 0xc968
0xca9b: jmp 0xca6e
0xcaa0: mov r15,rcx
0xcaa3: jmp 0xc99c
0xcab7: call 0x1e80
0xcabc: cmp r12,-0x1
0xcac0: mov edx,0x1
0xcac5: je 0xbeab
0xcacb: test r12,r12
0xcace: je 0xbb25
0xcad4: jns 0xc6a0
0xcada: jmp 0xbb25
0xcae0: cmp qword ptr [rsi],0x0
0xcae4: mov rax,qword ptr [rsi+0x8]
0xcae8: je 0xcb4d
0xcaea: lea r8,[rip+0x353f]
0xcaf1: lea r10,[rip+0x3598]
0xcaf8: lea r9,[rip+0x3525]
0xcaff: xor ecx,ecx
0xcb01: nop dword ptr [rax]
0xcb08: cmp dword ptr [rax],0x16
0xcb0b: ja 0xcb50
0xcb0d: mov edx,dword ptr [rax]
0xcb0f: movsxd rdx,dword ptr [r8+rdx*4]
0xcb13: add rdx,r8
0xcb16: jmp rdx
0xcb4d: xor eax,eax
0xcb4f: ret 
0xcb50: mov eax,0xffffffff
0xcb55: ret 
0xcce0: push r15
0xcce2: push r14
0xcce4: lea rcx,[rsi+0x20]
0xcce8: push r13
0xccea: push r12
0xccec: lea rax,[rdx+0x10]
0xccf0: push rbp
0xccf1: push rbx
0xccf2: mov r14,rsi
0xccf5: mov r15,rdx
0xccf8: xor ebx,ebx
0xccfa: mov r9d,0x7
0xcd00: sub rsp,0x58
0xcd04: mov r10d,0x7
0xcd0a: mov qword ptr [rsi],0x0
0xcd11: mov qword ptr [rsi+0x8],rcx
0xcd15: mov qword ptr [rsp+0x28],rcx
0xcd1a: mov r8,-0x1
0xcd21: mov qword ptr [rdx],0x0
0xcd28: mov qword ptr [rsp+0x8],rax
0xcd2d: mov qword ptr [rdx+0x8],rax
0xcd31: mov qword ptr [rsp+0x18],0x0
0xcd3a: mov qword ptr [rsp+0x10],0x0
0xcd43: mov qword ptr [rsp+0x20],0x0
0xcd4c: jmp 0xcd5b
0xcd50: cmp al,0x25
0xcd52: lea rbp,[rdi+0x1]
0xcd56: je 0xcd98
0xcd58: mov rdi,rbp
0xcd5b: movzx eax,byte ptr [rdi]
0xcd5e: test al,al
0xcd60: jne 0xcd50
0xcd62: lea rax,[rbx+rbx*4]
0xcd66: lea rax,[rbx+rax*2]
0xcd6a: mov qword ptr [rcx+rax*8],rdi
0xcd6e: mov rax,qword ptr [rsp+0x10]
0xcd73: mov qword ptr [r14+0x10],rax
0xcd77: mov rax,qword ptr [rsp+0x18]
0xcd7c: mov qword ptr [r14+0x18],rax
0xcd80: xor eax,eax
0xcd82: add rsp,0x58
0xcd86: pop rbx
0xcd87: pop rbp
0xcd88: pop r12
0xcd8a: pop r13
0xcd8c: pop r14
0xcd8e: pop r15
0xcd90: ret 
0xcd98: lea rax,[rbx+rbx*4]
0xcd9c: mov r13,r8
0xcd9f: lea rax,[rbx+rax*2]
0xcda3: lea r12,[rcx+rax*8]
0xcda7: mov qword ptr [r12],rdi
0xcdab: mov dword ptr [r12+0x10],0x0
0xcdb4: mov qword ptr [r12+0x18],0x0
0xcdbd: mov qword ptr [r12+0x20],0x0
0xcdc6: mov qword ptr [r12+0x28],r8
0xcdcb: mov qword ptr [r12+0x30],0x0
0xcdd4: mov qword ptr [r12+0x38],0x0
0xcddd: mov qword ptr [r12+0x40],r8
0xcde2: mov qword ptr [r12+0x50],r8
0xcde7: movzx ebx,byte ptr [rdi+0x1]
0xcdeb: lea eax,[rbx-0x30]
0xcdee: cmp al,0x9
0xcdf0: ja 0xce2e
0xcdf2: jmp 0xd22a
0xce00: cmp bl,0x2d
0xce03: je 0xce48
0xce05: cmp bl,0x2b
0xce08: je 0xce50
0xce0a: cmp bl,0x20
0xce0d: je 0xce60
0xce0f: cmp bl,0x23
0xce12: je 0xce70
0xce14: cmp bl,0x30
0xce17: je 0xce80
0xce19: cmp bl,0x49
0xce1c: jne 0xce90
0xce1e: or dword ptr [r12+0x10],0x40
0xce24: nop dword ptr [rax]
0xce28: movzx ebx,byte ptr [rax]
0xce2b: mov rbp,rax
0xce2e: lea rax,[rbp+0x1]
0xce32: cmp bl,0x27
0xce35: mov rdx,rax
0xce38: jne 0xce00
0xce3a: or dword ptr [r12+0x10],0x1
0xce40: jmp 0xce28
0xce48: or dword ptr [r12+0x10],0x2
0xce4e: jmp 0xce28
0xce50: or dword ptr [r12+0x10],0x4
0xce56: jmp 0xce28
0xce60: or dword ptr [r12+0x10],0x8
0xce66: jmp 0xce28
0xce70: or dword ptr [r12+0x10],0x10
0xce76: jmp 0xce28
0xce80: or dword ptr [r12+0x10],0x20
0xce86: jmp 0xce28
0xce90: cmp bl,0x2a
0xce93: je 0xd049
0xce99: lea ecx,[rbx-0x30]
0xce9c: cmp cl,0x9
0xce9f: jbe 0xd2b7
0xcea5: cmp bl,0x2e
0xcea8: je 0xd17f
0xceae: xor eax,eax
0xceb0: mov esi,0x1
0xceb5: jmp 0xcee7
0xcec0: cmp bl,0x4c
0xcec3: je 0xcf00
0xcec5: cmp bl,0x6c
0xcec8: je 0xcee0
0xceca: cmp bl,0x6a
0xcecd: je 0xcee0
0xcecf: mov edx,ebx
0xced1: and edx,-0x21
0xced4: cmp dl,0x5a
0xced7: je 0xcee0
0xced9: cmp bl,0x74
0xcedc: jne 0xcf08
0xcede: nop 
0xcee0: add eax,0x8
0xcee3: movzx ebx,byte ptr [rbp]
0xcee7: add rbp,0x1
0xceeb: cmp bl,0x68
0xceee: jne 0xcec0
0xcef0: mov ecx,eax
0xcef2: mov edx,esi
0xcef4: and ecx,0x1
0xcef7: shl edx,cl
0xcef9: or eax,edx
0xcefb: jmp 0xcee3
0xcf00: or eax,0x4
0xcf03: jmp 0xcee3
0xcf08: lea edx,[rbx-0x25]
0xcf0b: cmp dl,0x53
0xcf0e: ja 0xd52b
0xcf14: lea rcx,[rip+0x3191]
0xcf1b: movzx edx,dl
0xcf1e: movsxd rdx,dword ptr [rcx+rdx*4]
0xcf22: add rdx,rcx
0xcf25: jmp rdx
0xd049: mov rsi,qword ptr [rsp+0x10]
0xd04e: mov ecx,0x1
0xd053: mov qword ptr [r12+0x18],rbp
0xd058: mov qword ptr [r12+0x20],rax
0xd05d: test rsi,rsi
0xd060: cmovne rcx,rsi
0xd064: mov qword ptr [rsp+0x10],rcx
0xd069: movzx ecx,byte ptr [rbp+0x1]
0xd06d: lea esi,[rcx-0x30]
0xd070: cmp sil,0x9
0xd074: jbe 0xd355
0xd07a: mov rsi,qword ptr [rsp+0x20]
0xd07f: cmp rsi,-0x1
0xd083: lea rdx,[rsi+0x1]
0xd087: mov qword ptr [r12+0x28],rsi
0xd08c: je 0xd52b
0xd092: mov rbx,qword ptr [rsp+0x20]
0xd097: mov rbp,rax
0xd09a: mov qword ptr [rsp+0x20],rdx
0xd09f: cmp r9,rbx
0xd0a2: mov rcx,qword ptr [r15+0x8]
0xd0a6: ja 0xd722
0xd0ac: add r9,r9
0xd0af: lea rax,[rbx+0x1]
0xd0b3: cmp r9,rbx
0xd0b6: cmovbe r9,rax
0xd0ba: movabsq rax,0x7ffffffffffffff
0xd0c4: cmp r9,rax
0xd0c7: ja 0xd96b
0xd0cd: mov rsi,r9
0xd0d0: mov qword ptr [rsp+0x40],r9
0xd0d5: mov qword ptr [rsp+0x38],r10
0xd0da: shl rsi,0x5
0xd0de: cmp qword ptr [rsp+0x8],rcx
0xd0e3: mov qword ptr [rsp+0x30],r8
0xd0e8: je 0xd801
0xd0ee: mov rdi,rcx
0xd0f1: call 0x20d0
0xd0f6: mov rdx,qword ptr [r15+0x8]
0xd0fa: mov r8,qword ptr [rsp+0x30]
0xd0ff: mov rcx,rax
0xd102: mov r10,qword ptr [rsp+0x38]
0xd107: mov r9,qword ptr [rsp+0x40]
0xd10c: test rcx,rcx
0xd10f: je 0xd9c7
0xd115: cmp qword ptr [rsp+0x8],rdx
0xd11a: mov rax,qword ptr [r15]
0xd11d: je 0xd8db
0xd123: mov qword ptr [r15+0x8],rcx
0xd127: mov rdx,rax
0xd12a: shl rdx,0x5
0xd12e: add rdx,rcx
0xd131: cmp rax,rbx
0xd134: ja 0xd156
0xd136: nop word ptr cs:[rax+rax]
0xd140: add rax,0x1
0xd144: mov dword ptr [rdx],0x0
0xd14a: add rdx,0x20
0xd14e: cmp rax,rbx
0xd151: jbe 0xd140
0xd153: mov qword ptr [r15],rax
0xd156: shl rbx,0x5
0xd15a: lea rax,[rcx+rbx]
0xd15e: mov edx,dword ptr [rax]
0xd160: test edx,edx
0xd162: jne 0xd63b
0xd168: mov dword ptr [rax],0x5
0xd16e: movzx ebx,byte ptr [rbp]
0xd172: lea rdx,[rbp+0x1]
0xd176: cmp bl,0x2e
0xd179: jne 0xceae
0xd17f: cmp byte ptr [rbp+0x1],0x2a
0xd183: mov qword ptr [r12+0x30],rbp
0xd188: jne 0xd30e
0xd18e: mov rsi,qword ptr [rsp+0x18]
0xd193: lea r11,[rbp+0x2]
0xd197: mov eax,0x2
0xd19c: mov qword ptr [r12+0x38],r11
0xd1a1: cmp rsi,0x2
0xd1a5: cmovae rax,rsi
0xd1a9: mov qword ptr [rsp+0x18],rax
0xd1ae: movsx eax,byte ptr [rbp+0x2]
0xd1b2: lea edx,[rax-0x30]
0xd1b5: cmp dl,0x9
0xd1b8: jbe 0xd84c
0xd1be: mov rbx,qword ptr [r12+0x40]
0xd1c3: cmp rbx,-0x1
0xd1c7: je 0xd825
0xd1cd: cmp r9,rbx
0xd1d0: mov rcx,qword ptr [r15+0x8]
0xd1d4: jbe 0xd73f
0xd1da: mov rax,qword ptr [r15]
0xd1dd: mov rdx,rax
0xd1e0: shl rdx,0x5
0xd1e4: add rdx,rcx
0xd1e7: cmp rax,rbx
0xd1ea: ja 0xd206
0xd1ec: nop dword ptr [rax]
0xd1f0: add rax,0x1
0xd1f4: mov dword ptr [rdx],0x0
0xd1fa: add rdx,0x20
0xd1fe: cmp rax,rbx
0xd201: jbe 0xd1f0
0xd203: mov qword ptr [r15],rax
0xd206: shl rbx,0x5
0xd20a: lea rax,[rcx+rbx]
0xd20e: mov edx,dword ptr [rax]
0xd210: test edx,edx
0xd212: jne 0xd72a
0xd218: mov dword ptr [rax],0x5
0xd21e: mov rbp,r11
0xd221: movzx ebx,byte ptr [r11]
0xd225: jmp 0xceae
0xd22a: mov rax,rbp
0xd22d: nop dword ptr [rax]
0xd230: add rax,0x1
0xd234: movzx edx,byte ptr [rax]
0xd237: lea ecx,[rdx-0x30]
0xd23a: cmp cl,0x9
0xd23d: jbe 0xd230
0xd23f: cmp dl,0x24
0xd242: mov r13,r8
0xd245: jne 0xce2e
0xd24b: xor edx,edx
0xd24d: movsx eax,bl
0xd250: movabsq rdi,0x1999999999999999
0xd25a: mov rsi,r8
0xd25d: sub eax,0x30
0xd260: cmp rdx,rdi
0xd263: cltq 
0xd265: ja 0xd26e
0xd267: lea rsi,[rdx+rdx*4]
0xd26b: add rsi,rsi
0xd26e: mov rcx,rbp
0xd271: add rax,rsi
0xd274: movzx ebx,byte ptr [rbp+0x1]
0xd278: setb sil
0xd27c: add rbp,0x1
0xd280: mov rdx,rax
0xd283: movzx esi,sil
0xd287: test rsi,rsi
0xd28a: lea edi,[rbx-0x30]
0xd28d: jne 0xd61e
0xd293: cmp dil,0x9
0xd297: jbe 0xd24d
0xd299: mov r13,rax
0xd29c: sub r13,0x1
0xd2a0: cmp r13,-0x3
0xd2a4: ja 0xd52b
0xd2aa: lea rbp,[rcx+0x2]
0xd2ae: movzx ebx,byte ptr [rcx+0x2]
0xd2b2: jmp 0xce2e
0xd2b7: mov qword ptr [r12+0x18],rbp
0xd2bc: movzx edi,byte ptr [rbp]
0xd2c0: mov rsi,rbp
0xd2c3: lea ecx,[rdi-0x30]
0xd2c6: cmp cl,0x9
0xd2c9: jbe 0xd2d7
0xd2cb: jmp 0xd300
0xd2d0: mov rbp,rax
0xd2d3: add rax,0x1
0xd2d7: movzx edi,byte ptr [rax]
0xd2da: lea edx,[rdi-0x30]
0xd2dd: cmp dl,0x9
0xd2e0: jbe 0xd2d0
0xd2e2: mov rcx,rax
0xd2e5: lea rdx,[rbp+0x2]
0xd2e9: mov rbp,rax
0xd2ec: sub rcx,rsi
0xd2ef: mov rsi,qword ptr [rsp+0x10]
0xd2f4: cmp rsi,rcx
0xd2f7: cmovae rcx,rsi
0xd2fb: mov qword ptr [rsp+0x10],rcx
0xd300: mov qword ptr [r12+0x20],rbp
0xd305: movzx ebx,byte ptr [rbp]
0xd309: jmp 0xcea5
0xd30e: movzx eax,byte ptr [rbp+0x1]
0xd312: sub eax,0x30
0xd315: cmp al,0x9
0xd317: ja 0xd32e
0xd319: nop dword ptr [rax]
0xd320: add rdx,0x1
0xd324: movzx eax,byte ptr [rdx]
0xd327: sub eax,0x30
0xd32a: cmp al,0x9
0xd32c: jbe 0xd320
0xd32e: mov rsi,qword ptr [rsp+0x18]
0xd333: mov rax,rdx
0xd336: mov qword ptr [r12+0x38],rdx
0xd33b: sub rax,rbp
0xd33e: movzx ebx,byte ptr [rdx]
0xd341: mov rbp,rdx
0xd344: cmp rsi,rax
0xd347: cmovae rax,rsi
0xd34b: mov qword ptr [rsp+0x18],rax
0xd350: jmp 0xceae
0xd355: mov rsi,rax
0xd358: add rsi,0x1
0xd35c: movzx edi,byte ptr [rsi]
0xd35f: lea r11d,[rdi-0x30]
0xd363: cmp r11b,0x9
0xd367: jbe 0xd358
0xd369: cmp dil,0x24
0xd36d: jne 0xd07a
0xd373: xor esi,esi
0xd375: movsx eax,cl
0xd378: movabsq rdi,0x1999999999999999
0xd382: mov rcx,r8
0xd385: sub eax,0x30
0xd388: cmp rsi,rdi
0xd38b: cltq 
0xd38d: ja 0xd396
0xd38f: lea rcx,[rsi+rsi*4]
0xd393: add rcx,rcx
0xd396: mov rbp,rdx
0xd399: xor r11d,r11d
0xd39c: add rax,rcx
0xd39f: movzx ecx,byte ptr [rdx+0x1]
0xd3a3: setb r11b
0xd3a7: add rdx,0x1
0xd3ab: mov rsi,rax
0xd3ae: test r11,r11
0xd3b1: lea edi,[rcx-0x30]
0xd3b4: jne 0xd8be
0xd3ba: cmp dil,0x9
0xd3be: jbe 0xd375
0xd3c0: lea rbx,[rax-0x1]
0xd3c4: cmp rbx,-0x3
0xd3c8: ja 0xd52b
0xd3ce: mov qword ptr [r12+0x28],rbx
0xd3d3: add rbp,0x2
0xd3d7: jmp 0xd09f
0xd52b: mov rcx,qword ptr [r15+0x8]
0xd52f: cmp qword ptr [rsp+0x8],rcx
0xd534: je 0xd53e
0xd536: mov rdi,rcx
0xd539: call 0x1d10
0xd53e: mov rdi,qword ptr [r14+0x8]
0xd542: cmp qword ptr [rsp+0x28],rdi
0xd547: je 0xd54e
0xd549: call 0x1d10
0xd54e: call 0x1d40
0xd553: mov dword ptr [rax],0x16
0xd559: mov eax,0xffffffff
0xd55e: jmp 0xcd82
0xd61e: cmp dil,0x9
0xd622: ja 0xd52b
0xd628: movsx eax,bl
0xd62b: mov rsi,r8
0xd62e: mov rcx,rbp
0xd631: sub eax,0x30
0xd634: cltq 
0xd636: jmp 0xd271
0xd63b: cmp edx,0x5
0xd63e: jne 0xd52f
0xd644: movzx ebx,byte ptr [rbp]
0xd648: lea rdx,[rbp+0x1]
0xd64c: jmp 0xcea5
0xd722: mov rax,qword ptr [r15]
0xd725: jmp 0xd127
0xd72a: cmp edx,0x5
0xd72d: jne 0xd52f
0xd733: movzx ebx,byte ptr [r11]
0xd737: mov rbp,r11
0xd73a: jmp 0xceae
0xd73f: add r9,r9
0xd742: lea rax,[rbx+0x1]
0xd746: cmp r9,rbx
0xd749: cmovbe r9,rax
0xd74d: movabsq rax,0x7ffffffffffffff
0xd757: cmp r9,rax
0xd75a: ja 0xd96b
0xd760: mov rsi,r9
0xd763: mov qword ptr [rsp+0x48],r9
0xd768: mov qword ptr [rsp+0x40],r10
0xd76d: shl rsi,0x5
0xd771: cmp qword ptr [rsp+0x8],rcx
0xd776: mov qword ptr [rsp+0x38],r8
0xd77b: mov qword ptr [rsp+0x30],r11
0xd780: je 0xd93e
0xd786: mov rdi,rcx
0xd789: call 0x20d0
0xd78e: mov rdx,qword ptr [r15+0x8]
0xd792: mov r11,qword ptr [rsp+0x30]
0xd797: mov rcx,rax
0xd79a: mov r8,qword ptr [rsp+0x38]
0xd79f: mov r10,qword ptr [rsp+0x40]
0xd7a4: mov r9,qword ptr [rsp+0x48]
0xd7a9: test rcx,rcx
0xd7ac: je 0xd9c7
0xd7b2: cmp qword ptr [rsp+0x8],rdx
0xd7b7: mov rax,qword ptr [r15]
0xd7ba: je 0xd980
0xd7c0: mov qword ptr [r15+0x8],rcx
0xd7c4: jmp 0xd1dd
0xd7d4: mov rdi,rcx
0xd7d7: call 0x1d10
0xd7dc: mov rdi,qword ptr [r14+0x8]
0xd7e0: cmp qword ptr [rsp+0x28],rdi
0xd7e5: je 0xd7ec
0xd7e7: call 0x1d10
0xd7ec: call 0x1d40
0xd7f1: mov dword ptr [rax],0xc
0xd7f7: mov eax,0xffffffff
0xd7fc: jmp 0xcd82
0xd801: mov rdi,rsi
0xd804: call 0x2030
0xd809: mov rdx,qword ptr [rsp+0x8]
0xd80e: mov rcx,rax
0xd811: mov r9,qword ptr [rsp+0x40]
0xd816: mov r10,qword ptr [rsp+0x38]
0xd81b: mov r8,qword ptr [rsp+0x30]
0xd820: jmp 0xd10c
0xd825: mov rsi,qword ptr [rsp+0x20]
0xd82a: cmp rsi,-0x1
0xd82e: lea rax,[rsi+0x1]
0xd832: mov qword ptr [r12+0x40],rsi
0xd837: je 0xd52b
0xd83d: mov rbx,qword ptr [rsp+0x20]
0xd842: mov qword ptr [rsp+0x20],rax
0xd847: jmp 0xd1cd
0xd84c: mov rdx,r11
0xd84f: add rdx,0x1
0xd853: movzx ecx,byte ptr [rdx]
0xd856: lea esi,[rcx-0x30]
0xd859: cmp sil,0x9
0xd85d: jbe 0xd84f
0xd85f: cmp cl,0x24
0xd862: jne 0xd1be
0xd868: xor ecx,ecx
0xd86a: movabsq rsi,0x1999999999999999
0xd874: sub eax,0x30
0xd877: mov rdx,r8
0xd87a: cmp rcx,rsi
0xd87d: cltq 
0xd87f: ja 0xd888
0xd881: lea rdx,[rcx+rcx*4]
0xd885: add rdx,rdx
0xd888: mov rsi,r11
0xd88b: xor ebx,ebx
0xd88d: add rdx,rax
0xd890: movsx eax,byte ptr [r11+0x1]
0xd895: setb bl
0xd898: add r11,0x1
0xd89c: mov rcx,rdx
0xd89f: test rbx,rbx
0xd8a2: lea edi,[rax-0x30]
0xd8a5: je 0xd918
0xd8a7: cmp dil,0x9
0xd8ab: ja 0xd52b
0xd8b1: sub eax,0x30
0xd8b4: mov rdx,r8
0xd8b7: mov rsi,r11
0xd8ba: cltq 
0xd8bc: jmp 0xd88b
0xd8be: cmp dil,0x9
0xd8c2: ja 0xd52b
0xd8c8: movsx eax,cl
0xd8cb: mov rbp,rdx
0xd8ce: mov rcx,r8
0xd8d1: sub eax,0x30
0xd8d4: cltq 
0xd8d6: jmp 0xd399
0xd8db: mov rsi,qword ptr [rsp+0x8]
0xd8e0: shl rax,0x5
0xd8e4: mov rdi,rcx
0xd8e7: mov rdx,rax
0xd8ea: mov qword ptr [rsp+0x40],r9
0xd8ef: mov qword ptr [rsp+0x38],r10
0xd8f4: mov qword ptr [rsp+0x30],r8
0xd8f9: call 0x1fe0
0xd8fe: mov r9,qword ptr [rsp+0x40]
0xd903: mov rcx,rax
0xd906: mov r10,qword ptr [rsp+0x38]
0xd90b: mov rax,qword ptr [r15]
0xd90e: mov r8,qword ptr [rsp+0x30]
0xd913: jmp 0xd123
0xd918: cmp dil,0x9
0xd91c: jbe 0xd86a
0xd922: lea rbx,[rdx-0x1]
0xd926: cmp rbx,-0x3
0xd92a: ja 0xd52b
0xd930: mov qword ptr [r12+0x40],rbx
0xd935: lea r11,[rsi+0x2]
0xd939: jmp 0xd1cd
0xd93e: mov rdi,rsi
0xd941: call 0x2030
0xd946: mov rdx,qword ptr [rsp+0x8]
0xd94b: mov rcx,rax
0xd94e: mov r9,qword ptr [rsp+0x48]
0xd953: mov r10,qword ptr [rsp+0x40]
0xd958: mov r8,qword ptr [rsp+0x38]
0xd95d: mov r11,qword ptr [rsp+0x30]
0xd962: jmp 0xd7a9
0xd96b: cmp qword ptr [rsp+0x8],rcx
0xd970: jne 0xd7d4
0xd976: jmp 0xd7dc
0xd980: mov rsi,qword ptr [rsp+0x8]
0xd985: shl rax,0x5
0xd989: mov rdi,rcx
0xd98c: mov rdx,rax
0xd98f: mov qword ptr [rsp+0x48],r9
0xd994: mov qword ptr [rsp+0x40],r10
0xd999: mov qword ptr [rsp+0x38],r8
0xd99e: mov qword ptr [rsp+0x30],r11
0xd9a3: call 0x1fe0
0xd9a8: mov r9,qword ptr [rsp+0x48]
0xd9ad: mov rcx,rax
0xd9b0: mov r10,qword ptr [rsp+0x40]
0xd9b5: mov rax,qword ptr [r15]
0xd9b8: mov r8,qword ptr [rsp+0x38]
0xd9bd: mov r11,qword ptr [rsp+0x30]
0xd9c2: jmp 0xd7c0
0xd9c7: mov rcx,rdx
0xd9ca: jmp 0xd96b
0xd9d0: push r15
0xd9d2: push r14
0xd9d4: mov r15,rdx
0xd9d7: push r13
0xd9d9: push r12
0xd9db: lea r12,[rip+0x204fce]
0xd9e2: push rbp
0xd9e3: lea rbp,[rip+0x204fce]
0xd9ea: push rbx
0xd9eb: mov r13d,edi
0xd9ee: mov r14,rsi
0xd9f1: sub rbp,r12
0xd9f4: sub rsp,0x8
0xd9f8: sar rbp,0x3
0xd9fc: call 0x1cb8
0xda01: test rbp,rbp
0xda04: je 0xda26
0xda06: xor ebx,ebx
0xda08: nop dword ptr [rax+rax]
0xda10: mov rdx,r15
0xda13: mov rsi,r14
0xda16: mov edi,r13d
0xda19: call qword ptr [r12+rbx*8]
0xda1d: add rbx,0x1
0xda21: cmp rbp,rbx
0xda24: jne 0xda10
0xda26: add rsp,0x8
0xda2a: pop rbx
0xda2b: pop rbp
0xda2c: pop r12
0xda2e: pop r13
0xda30: pop r14
0xda32: pop r15
0xda34: ret 
0xda40: rep ret 
