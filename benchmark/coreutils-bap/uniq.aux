0x1718: sub rsp,0x8
0x171c: mov rax,qword ptr [rip+0x2088c5]
0x1723: test rax,rax
0x1726: je 0x172a
0x1728: call rax
0x172a: add rsp,0x8
0x172e: ret 
0x1736: jmp qword ptr [rip+0x2086dc]
0x17b0: jmp qword ptr [rip+0x2086a2]
0x17c0: jmp qword ptr [rip+0x20869a]
0x1830: jmp qword ptr [rip+0x208662]
0x1850: jmp qword ptr [rip+0x208652]
0x18b0: jmp qword ptr [rip+0x208622]
0x1920: jmp qword ptr [rip+0x2085ea]
0x1950: jmp qword ptr [rip+0x2085d2]
0x1970: jmp qword ptr [rip+0x2085c2]
0x1990: jmp qword ptr [rip+0x2085b2]
0x1a80: jmp qword ptr [rip+0x20853a]
0x1a90: jmp qword ptr [rip+0x208532]
0x1ab0: jmp qword ptr [rip+0x208542]
0x1cd7: nop word ptr [rax+rax]
0x225f: mov rbx,rax
0x2262: call 0x1790
0x2267: mov esi,dword ptr [rax]
0x2269: lea rdx,[rip+0x4f88]
0x2270: mov rcx,rbx
0x2273: mov edi,0x1
0x2278: xor eax,eax
0x227a: call 0x1a00
0x231b: sub eax,0x2
0x231e: cmp eax,0x1
0x2321: jbe 0x2469
0x2393: lea rsi,[rip+0x44ed]
0x239a: mov rbx,rax
0x239d: mov edx,0x5
0x23a2: xor edi,edi
0x23a4: call 0x1800
0x23a9: mov rcx,rbx
0x23ac: mov rdx,rax
0x23af: xor esi,esi
0x23b1: mov edi,0x1
0x23b6: xor eax,eax
0x23b8: call 0x1a00
0x24d3: mov ecx,dword ptr [rsp+0x38]
0x24d7: jmp 0x20da
0x24e1: lea rsi,[rip+0x4351]
0x24e8: mov rbx,rax
0x24eb: mov edx,0x5
0x24f0: xor edi,edi
0x24f2: call 0x1800
0x24f7: xor edi,edi
0x24f9: mov rdx,rax
0x24fc: mov rcx,rbx
0x24ff: xor esi,esi
0x2501: xor eax,eax
0x2503: call 0x1a00
0x2508: mov edi,0x1
0x250d: call 0x2920
0x251b: jmp 0x2327
0x2529: jmp 0x1f4e
0x2556: jmp 0x1ccd
0x255b: call 0x1830
0x256f: mov rbx,rax
0x2572: call 0x1790
0x2577: mov esi,dword ptr [rax]
0x2579: lea rdx,[rip+0x4c78]
0x2580: mov rcx,rbx
0x2583: mov edi,0x1
0x2588: xor eax,eax
0x258a: call 0x1a00
0x258f: nop 
0x25ba: hlt 
0x25bb: nop dword ptr [rax+rax]
0x25c0: lea rdi,[rip+0x207ad9]
0x25c7: push rbp
0x25c8: lea rax,[rip+0x207ad1]
0x25cf: cmp rax,rdi
0x25d2: mov rbp,rsp
0x25d5: je 0x25f0
0x25d7: mov rax,qword ptr [rip+0x2079fa]
0x25de: test rax,rax
0x25e1: je 0x25f0
0x25e3: pop rbp
0x25e4: jmp rax
0x25f0: pop rbp
0x25f1: ret 
0x2600: lea rdi,[rip+0x207a99]
0x2607: lea rsi,[rip+0x207a92]
0x260e: push rbp
0x260f: sub rsi,rdi
0x2612: mov rbp,rsp
0x2615: sar rsi,0x3
0x2619: mov rax,rsi
0x261c: shr rax,0x3f
0x2620: add rsi,rax
0x2623: sar rsi, 1
0x2626: je 0x2640
0x2628: mov rax,qword ptr [rip+0x2079c1]
0x262f: test rax,rax
0x2632: je 0x2640
0x2634: pop rbp
0x2635: jmp rax
0x2640: pop rbp
0x2641: ret 
0x2661: push rbp
0x2662: mov rbp,rsp
0x2665: je 0x2673
0x2667: mov rdi,qword ptr [rip+0x20799a]
0x266e: call 0x1ab0
0x2673: call 0x25c0
0x2678: mov byte ptr [rip+0x207a69],0x1
0x267f: pop rbp
0x2680: ret 
0x2690: push rbp
0x2691: mov rbp,rsp
0x2694: pop rbp
0x2695: jmp 0x2600
0x27ac: call 0x1830
0x27b1: nop dword ptr [rax+rax]
0x27b6: nop word ptr cs:[rax+rax]
0x2de0: mov edi,0x1
0x2de5: jmp 0x2920
0x2f43: mov rdx,r12
0x2f46: mov rbp,rax
0x2f49: mov esi,0x8
0x2f4e: xor edi,edi
0x2f50: call 0x5020
0x2f55: mov r8,rbp
0x2f58: mov rdx,rbx
0x2f5b: mov rcx,rax
0x2f5e: pop rbx
0x2f5f: pop rbp
0x2f60: pop r12
0x2f62: xor esi,esi
0x2f64: xor edi,edi
0x2f66: xor eax,eax
0x2f68: jmp 0x1a00
0x2f90: push r15
0x2f92: push r14
0x2f94: mov r14,rdi
0x2f97: push r13
0x2f99: push r12
0x2f9b: xor edi,edi
0x2f9d: push rbp
0x2f9e: push rbx
0x2f9f: mov rbp,rsi
0x2fa2: lea rsi,[rip+0x4230]
0x2fa9: mov r12,rdx
0x2fac: mov edx,0x5
0x2fb1: sub rsp,0x8
0x2fb5: mov rbx,qword ptr [rip+0x207124]
0x2fbc: call 0x1800
0x2fc1: mov rdi,rax
0x2fc4: mov rsi,rbx
0x2fc7: call 0x1910
0x2fcc: mov r15,qword ptr [r14]
0x2fcf: test r15,r15
0x2fd2: je 0x3068
0x2fd8: xor r13d,r13d
0x2fdb: xor ebx,ebx
0x2fdd: jmp 0x3018
0x2fe0: mov rdi,r15
0x2fe3: add rbx,0x1
0x2fe7: mov r13,rbp
0x2fea: call 0x5410
0x2fef: mov rdi,qword ptr [rip+0x2070ea]
0x2ff6: lea rdx,[rip+0x41f1]
0x2ffd: mov rcx,rax
0x3000: mov esi,0x1
0x3005: xor eax,eax
0x3007: add rbp,r12
0x300a: call 0x1a70
0x300f: mov r15,qword ptr [r14+rbx*8]
0x3013: test r15,r15
0x3016: je 0x3068
0x3018: test rbx,rbx
0x301b: je 0x2fe0
0x301d: mov rdx,r12
0x3020: mov rsi,rbp
0x3023: mov rdi,r13
0x3026: call 0x1900
0x302b: test eax,eax
0x302d: jne 0x2fe0
0x302f: mov rdi,r15
0x3032: add rbx,0x1
0x3036: add rbp,r12
0x3039: call 0x5410
0x303e: mov rdi,qword ptr [rip+0x20709b]
0x3045: lea rdx,[rip+0x41aa]
0x304c: mov rcx,rax
0x304f: mov esi,0x1
0x3054: xor eax,eax
0x3056: call 0x1a70
0x305b: mov r15,qword ptr [r14+rbx*8]
0x305f: test r15,r15
0x3062: jne 0x3018
0x3064: nop dword ptr [rax]
0x3068: mov rdi,qword ptr [rip+0x207071]
0x306f: mov rax,qword ptr [rdi+0x28]
0x3073: cmp rax,qword ptr [rdi+0x30]
0x3077: jae 0x3098
0x3079: lea rdx,[rax+0x1]
0x307d: mov qword ptr [rdi+0x28],rdx
0x3081: mov byte ptr [rax],0xa
0x3084: add rsp,0x8
0x3088: pop rbx
0x3089: pop rbp
0x308a: pop r12
0x308c: pop r13
0x308e: pop r14
0x3090: pop r15
0x3092: ret 
0x3098: add rsp,0x8
0x309c: mov esi,0xa
0x30a1: pop rbx
0x30a2: pop rbp
0x30a3: pop r12
0x30a5: pop r13
0x30a7: pop r14
0x30a9: pop r15
0x30ab: jmp 0x1880
0x3103: mov rdx,r15
0x3106: mov rsi,rbp
0x3109: mov rdi,rbx
0x310c: call 0x2f90
0x3111: call r13
0x3114: mov rax,-0x1
0x311b: jmp 0x30e6
0x3120: push r14
0x3122: push r13
0x3124: push r12
0x3126: push rbp
0x3127: push rbx
0x3128: mov r14,qword ptr [rsi]
0x312b: test r14,r14
0x312e: je 0x3161
0x3130: mov r12,rcx
0x3133: mov r13,rdi
0x3136: mov rbp,rdx
0x3139: lea rbx,[rsi+0x8]
0x313d: jmp 0x314f
0x3140: mov r14,qword ptr [rbx]
0x3143: add rbp,r12
0x3146: add rbx,0x8
0x314a: test r14,r14
0x314d: je 0x3161
0x314f: mov rdx,r12
0x3152: mov rsi,rbp
0x3155: mov rdi,r13
0x3158: call 0x1900
0x315d: test eax,eax
0x315f: jne 0x3140
0x3161: pop rbx
0x3162: mov rax,r14
0x3165: pop rbp
0x3166: pop r12
0x3168: pop r13
0x316a: pop r14
0x316c: ret 
0x3170: mov qword ptr [rip+0x206fb1],rdi
0x3177: ret 
0x3180: mov byte ptr [rip+0x206f99],dil
0x3187: ret 
0x3190: push rbp
0x3191: push rbx
0x3192: sub rsp,0x8
0x3196: mov rdi,qword ptr [rip+0x206f0b]
0x319d: call 0x6410
0x31a2: test eax,eax
0x31a4: je 0x31bc
0x31a6: call 0x1790
0x31ab: cmp byte ptr [rip+0x206f6e],0x0
0x31b2: mov rbx,rax
0x31b5: je 0x31d3
0x31b7: cmp dword ptr [rax],0x20
0x31ba: jne 0x31d3
0x31bc: mov rdi,qword ptr [rip+0x206f1d]
0x31c3: call 0x6410
0x31c8: test eax,eax
0x31ca: jne 0x3212
0x31cc: add rsp,0x8
0x31d0: pop rbx
0x31d1: pop rbp
0x31d2: ret 
0x31d3: lea rsi,[rip+0x4021]
0x31da: xor edi,edi
0x31dc: mov edx,0x5
0x31e1: call 0x1800
0x31e6: mov rdi,qword ptr [rip+0x206f3b]
0x31ed: mov rbp,rax
0x31f0: test rdi,rdi
0x31f3: je 0x321d
0x31f5: call 0x5210
0x31fa: mov esi,dword ptr [rbx]
0x31fc: lea rdx,[rip+0x3541]
0x3203: mov rcx,rax
0x3206: mov r8,rbp
0x3209: xor edi,edi
0x320b: xor eax,eax
0x320d: call 0x1a00
0x3212: mov edi,dword ptr [rip+0x206e08]
0x3218: call 0x17b0
0x321d: mov esi,dword ptr [rbx]
0x321f: lea rdx,[rip+0x3fd2]
0x3226: mov rcx,rax
0x3229: xor edi,edi
0x322b: xor eax,eax
0x322d: call 0x1a00
0x3232: jmp 0x3212
0x3240: jmp 0x18f0
0x3600: mov edx,0xa
0x3605: jmp 0x34f0
0x3610: mov rdi,qword ptr [rdi+0x10]
0x3614: jmp 0x1770
0x36f9: call 0x1830
0x36fe: nop 
0x379f: nop 
0x37a0: push rbp
0x37a1: push rbx
0x37a2: mov rbp,rdi
0x37a5: mov ebx,esi
0x37a7: sub rsp,0x8
0x37ab: call 0x6490
0x37b0: movzx edx,byte ptr [rax]
0x37b3: and edx,-0x21
0x37b6: cmp dl,0x55
0x37b9: je 0x3830
0x37bb: cmp dl,0x47
0x37be: je 0x37e0
0x37c0: lea rax,[rip+0x3abc]
0x37c7: lea rdx,[rip+0x3ab7]
0x37ce: cmp ebx,0x9
0x37d1: cmovne rax,rdx
0x37d5: add rsp,0x8
0x37d9: pop rbx
0x37da: pop rbp
0x37db: ret 
0x37e0: movzx edx,byte ptr [rax+0x1]
0x37e4: and edx,-0x21
0x37e7: cmp dl,0x42
0x37ea: jne 0x37c0
0x37ec: cmp byte ptr [rax+0x2],0x31
0x37f0: jne 0x37c0
0x37f2: cmp byte ptr [rax+0x3],0x38
0x37f6: jne 0x37c0
0x37f8: cmp byte ptr [rax+0x4],0x30
0x37fc: jne 0x37c0
0x37fe: cmp byte ptr [rax+0x5],0x33
0x3802: jne 0x37c0
0x3804: cmp byte ptr [rax+0x6],0x30
0x3808: jne 0x37c0
0x380a: cmp byte ptr [rax+0x7],0x0
0x380e: jne 0x37c0
0x3810: cmp byte ptr [rbp],0x60
0x3814: lea rax,[rip+0x3a61]
0x381b: lea rdx,[rip+0x3a5e]
0x3822: cmovne rax,rdx
0x3826: add rsp,0x8
0x382a: pop rbx
0x382b: pop rbp
0x382c: ret 
0x3830: movzx edx,byte ptr [rax+0x1]
0x3834: and edx,-0x21
0x3837: cmp dl,0x54
0x383a: jne 0x37c0
0x383c: movzx edx,byte ptr [rax+0x2]
0x3840: and edx,-0x21
0x3843: cmp dl,0x46
0x3846: jne 0x37c0
0x384c: cmp byte ptr [rax+0x3],0x2d
0x3850: jne 0x37c0
0x3856: cmp byte ptr [rax+0x4],0x38
0x385a: jne 0x37c0
0x3860: cmp byte ptr [rax+0x5],0x0
0x3864: jne 0x37c0
0x386a: cmp byte ptr [rbp],0x60
0x386e: lea rax,[rip+0x39ff]
0x3875: lea rdx,[rip+0x39fc]
0x387c: cmovne rax,rdx
0x3880: add rsp,0x8
0x3884: pop rbx
0x3885: pop rbp
0x3886: ret 
0x3963: xor r11d,r11d
0x3966: mov rax,rbp
0x3969: mov r8d,r12d
0x396c: mov rbp,r11
0x396f: mov r11,rax
0x3972: nop word ptr [rax+rax]
0x3978: cmp r11,rbp
0x397b: setne r12b
0x397f: cmp r11,-0x1
0x3983: jne 0x3992
0x3985: mov rax,qword ptr [rsp+0x10]
0x398a: cmp byte ptr [rax+rbp],0x0
0x398e: setne r12b
0x3992: test r12b,r12b
0x3995: je 0x3ff0
0x399b: cmp dword ptr [rsp+0x8],0x2
0x39a0: mov rdi,qword ptr [rsp+0x10]
0x39a5: lea r9,[rdi+rbp]
0x39a9: setne al
0x39ac: and al,byte ptr [rsp+0xd]
0x39b0: mov r10d,eax
0x39b3: je 0x3a60
0x39b9: mov rax,qword ptr [rsp+0x18]
0x39be: test rax,rax
0x39c1: je 0x3df0
0x39c7: cmp r11,-0x1
0x39cb: lea rbx,[rbp+rax]
0x39d0: jne 0x3a00
0x39d2: cmp rax,0x1
0x39d6: jbe 0x3a00
0x39d8: mov byte ptr [rsp+0x38],r8b
0x39dd: mov byte ptr [rsp+0x30],r10b
0x39e2: mov qword ptr [rsp+0x28],r9
0x39e7: call 0x1820
0x39ec: movzx r8d,byte ptr [rsp+0x38]
0x39f2: movzx r10d,byte ptr [rsp+0x30]
0x39f8: mov r11,rax
0x39fb: mov r9,qword ptr [rsp+0x28]
0x3a00: cmp rbx,r11
0x3a03: mov byte ptr [rsp+0x28],r10b
0x3a08: ja 0x3fc0
0x3a0e: mov rdx,qword ptr [rsp+0x18]
0x3a13: mov rsi,qword ptr [rsp+0x48]
0x3a18: mov rdi,r9
0x3a1b: mov qword ptr [rsp+0x40],r11
0x3a20: mov byte ptr [rsp+0x38],r8b
0x3a25: mov qword ptr [rsp+0x30],r9
0x3a2a: call 0x1900
0x3a2f: test eax,eax
0x3a31: mov r9,qword ptr [rsp+0x30]
0x3a36: movzx r8d,byte ptr [rsp+0x38]
0x3a3c: mov r11,qword ptr [rsp+0x40]
0x3a41: jne 0x3fc0
0x3a47: cmp byte ptr [rsp+0xf],0x0
0x3a4c: movzx r10d,byte ptr [rsp+0x28]
0x3a52: jne 0x49d5
0x3a58: nop dword ptr [rax+rax]
0x3a60: movzx ebx,byte ptr [r9]
0x3a64: cmp bl,0x7e
0x3a67: ja 0x3d88
0x3a6d: lea rcx,[rip+0x3898]
0x3a74: movzx edx,bl
0x3a77: movsxd rax,dword ptr [rcx+rdx*4]
0x3a7b: add rax,rcx
0x3a7e: jmp rax
0x3ab8: cmp byte ptr [rsp+0xd],0x1
0x3abd: jne 0x3bd2
0x3ac3: test dl,dl
0x3ac5: jne 0x3bd2
0x3acb: mov rsi,qword ptr [rsp+0x20]
0x3ad0: test rsi,rsi
0x3ad3: je 0x3ae9
0x3ad5: mov edx,ebx
0x3ad7: shr dl,0x5
0x3ada: movzx edx,dl
0x3add: mov edx,dword ptr [rsi+rdx*4]
0x3ae0: btl edx,ebx
0x3ae3: jb 0x3c33
0x3ae9: test r10b,r10b
0x3aec: jne 0x3c33
0x3af2: xor eax,0x1
0x3af5: add rbp,0x1
0x3af9: and eax,r8d
0x3afc: test al,al
0x3afe: je 0x3b20
0x3b00: cmp r13,r15
0x3b03: jbe 0x3b0a
0x3b05: mov byte ptr [r14+r15],0x27
0x3b0a: lea rax,[r15+0x1]
0x3b0e: cmp r13,rax
0x3b11: jbe 0x3b19
0x3b13: mov byte ptr [r14+r15+0x1],0x27
0x3b19: add r15,0x2
0x3b1d: xor r8d,r8d
0x3b20: cmp r15,r13
0x3b23: jae 0x3b29
0x3b25: mov byte ptr [r14+r15],bl
0x3b29: movzx edi,byte ptr [rsp+0xe]
0x3b2e: add r15,0x1
0x3b32: mov eax,0x0
0x3b37: test r12b,r12b
0x3b3a: cmove edi,eax
0x3b3d: mov byte ptr [rsp+0xe],dil
0x3b42: jmp 0x3978
0x3bd2: cmp byte ptr [rsp+0xf],0x0
0x3bd7: jne 0x3acb
0x3bdd: jmp 0x3ae9
0x3c33: cmp dword ptr [rsp+0x8],0x2
0x3c38: sete dl
0x3c3b: cmp byte ptr [rsp+0xf],0x0
0x3c40: mov eax,edx
0x3c42: jne 0x4498
0x3c48: mov eax,r8d
0x3c4b: xor eax,0x1
0x3c4e: and al,dl
0x3c50: je 0x3c81
0x3c52: cmp r13,r15
0x3c55: jbe 0x3c5c
0x3c57: mov byte ptr [r14+r15],0x27
0x3c5c: lea rdx,[r15+0x1]
0x3c60: cmp r13,rdx
0x3c63: jbe 0x3c6b
0x3c65: mov byte ptr [r14+r15+0x1],0x24
0x3c6b: lea rdx,[r15+0x2]
0x3c6f: cmp r13,rdx
0x3c72: jbe 0x3c7a
0x3c74: mov byte ptr [r14+r15+0x2],0x27
0x3c7a: add r15,0x3
0x3c7e: mov r8d,eax
0x3c81: cmp r13,r15
0x3c84: jbe 0x3c8b
0x3c86: mov byte ptr [r14+r15],0x5c
0x3c8b: add r15,0x1
0x3c8f: add rbp,0x1
0x3c93: jmp 0x3b20
0x3d80: xor r10d,r10d
0x3d83: nop dword ptr [rax+rax]
0x3d88: cmp qword ptr [rsp+0x58],0x1
0x3d8e: jne 0x4138
0x3d94: mov qword ptr [rsp+0x38],r11
0x3d99: mov byte ptr [rsp+0x30],r8b
0x3d9e: mov byte ptr [rsp+0x28],r10b
0x3da3: call 0x1aa0
0x3da8: mov rcx,qword ptr [rax]
0x3dab: movzx edx,bl
0x3dae: movzx r10d,byte ptr [rsp+0x28]
0x3db4: movzx r8d,byte ptr [rsp+0x30]
0x3dba: mov r11,qword ptr [rsp+0x38]
0x3dbf: mov edi,0x1
0x3dc4: movzx eax,word ptr [rcx+rdx*2]
0x3dc8: and ax,0x4000
0x3dcc: setne r12b
0x3dd0: sete al
0x3dd3: and al,byte ptr [rsp+0xd]
0x3dd7: test al,al
0x3dd9: jne 0x4771
0x3ddf: cmp dword ptr [rsp+0x8],0x2
0x3de4: sete dl
0x3de7: jmp 0x3ab8
0x3df0: movzx ebx,byte ptr [r9]
0x3df4: cmp bl,0x7e
0x3df7: ja 0x3d80
0x3df9: lea rcx,[rip+0x3708]
0x3e00: movzx edx,bl
0x3e03: movsxd rax,dword ptr [rcx+rdx*4]
0x3e07: add rax,rcx
0x3e0a: jmp rax
0x3fc0: xor r10d,r10d
0x3fc3: jmp 0x3a60
0x3ff0: cmp dword ptr [rsp+0x8],0x2
0x3ff5: movzx ebx,byte ptr [rsp+0xf]
0x3ffa: mov r12d,r8d
0x3ffd: mov rbp,r11
0x4000: sete dl
0x4003: mov eax,ebx
0x4005: test r15,r15
0x4008: sete cl
0x400b: and eax,edx
0x400d: and al,cl
0x400f: jne 0x4a76
0x4015: mov eax,ebx
0x4017: xor eax,0x1
0x401a: and dl,al
0x401c: je 0x498c
0x4022: cmp byte ptr [rsp+0x7c],0x0
0x4027: je 0x498a
0x402d: cmp byte ptr [rsp+0xe],0x0
0x4032: jne 0x4a2d
0x4038: test r13,r13
0x403b: sete al
0x403e: cmp qword ptr [rsp+0x50],0x0
0x4044: setne dl
0x4047: and al,dl
0x4049: je 0x4a6c
0x404f: mov r13,qword ptr [rsp+0x50]
0x4054: lea rbx,[rip+0x322a]
0x405b: mov byte ptr [r14],0x27
0x405f: mov dword ptr [rsp+0x8],0x2
0x4067: mov r15d,0x1
0x406d: mov qword ptr [rsp+0x18],0x1
0x4076: mov byte ptr [rsp+0xf],0x0
0x407b: mov qword ptr [rsp+0x48],rbx
0x4080: mov byte ptr [rsp+0x7c],al
0x4084: jmp 0x3963
0x4138: lea rax,[rsp+0xa0]
0x4140: cmp r11,-0x1
0x4144: mov qword ptr [rsp+0xa0],0x0
0x4150: mov qword ptr [rsp+0x28],rax
0x4155: jne 0x4184
0x4157: mov rdi,qword ptr [rsp+0x10]
0x415c: mov byte ptr [rsp+0x40],r8b
0x4161: mov byte ptr [rsp+0x38],r10b
0x4166: mov qword ptr [rsp+0x30],r9
0x416b: call 0x1820
0x4170: movzx r8d,byte ptr [rsp+0x40]
0x4176: movzx r10d,byte ptr [rsp+0x38]
0x417c: mov r11,rax
0x417f: mov r9,qword ptr [rsp+0x30]
0x4184: lea rax,[rsp+0x9c]
0x418c: xor ecx,ecx
0x418e: mov byte ptr [rsp+0x7e],bl
0x4192: mov byte ptr [rsp+0x7d],r8b
0x4197: mov rbx,rcx
0x419a: mov qword ptr [rsp+0x88],r9
0x41a2: mov qword ptr [rsp+0x38],rax
0x41a7: mov byte ptr [rsp+0x7f],r10b
0x41ac: mov qword ptr [rsp+0x80],r15
0x41b4: mov qword ptr [rsp+0x40],r14
0x41b9: mov qword ptr [rsp+0x70],r13
0x41be: mov qword ptr [rsp+0x30],r11
0x41c3: mov rax,qword ptr [rsp+0x10]
0x41c8: lea r14,[rbp+rbx]
0x41cd: mov rdx,qword ptr [rsp+0x30]
0x41d2: mov rcx,qword ptr [rsp+0x28]
0x41d7: mov rdi,qword ptr [rsp+0x38]
0x41dc: lea r13,[rax+r14]
0x41e0: sub rdx,r14
0x41e3: mov rsi,r13
0x41e6: call 0x6380
0x41eb: test rax,rax
0x41ee: mov r15,rax
0x41f1: je 0x4241
0x41f3: cmp rax,-0x1
0x41f7: je 0x4815
0x41fd: cmp rax,-0x2
0x4201: je 0x47a1
0x4207: cmp dword ptr [rsp+0x8],0x2
0x420c: sete al
0x420f: and al,byte ptr [rsp+0xf]
0x4213: jne 0x43b0
0x4219: mov edi,dword ptr [rsp+0x9c]
0x4220: call 0x1a90
0x4225: mov rdi,qword ptr [rsp+0x28]
0x422a: test eax,eax
0x422c: mov eax,0x0
0x4231: cmove r12d,eax
0x4235: add rbx,r15
0x4238: call 0x1a80
0x423d: test eax,eax
0x423f: je 0x41c3
0x4241: mov edx,r12d
0x4244: mov rdi,rbx
0x4247: movzx r8d,byte ptr [rsp+0x7d]
0x424d: xor edx,0x1
0x4250: movzx ebx,byte ptr [rsp+0x7e]
0x4255: movzx r10d,byte ptr [rsp+0x7f]
0x425b: and dl,byte ptr [rsp+0xd]
0x425f: mov r15,qword ptr [rsp+0x80]
0x4267: mov r14,qword ptr [rsp+0x40]
0x426c: mov r13,qword ptr [rsp+0x70]
0x4271: mov r11,qword ptr [rsp+0x30]
0x4276: cmp rdi,0x1
0x427a: jbe 0x487b
0x4280: mov rcx,rdi
0x4283: xor esi,esi
0x4285: movzx r9d,byte ptr [rsp+0xf]
0x428b: add rcx,rbp
0x428e: mov rdi,qword ptr [rsp+0x10]
0x4293: jmp 0x434e
0x42a0: cmp dword ptr [rsp+0x8],0x2
0x42a5: sete al
0x42a8: test r9b,r9b
0x42ab: jne 0x4760
0x42b1: mov esi,r8d
0x42b4: xor esi,0x1
0x42b7: and al,sil
0x42ba: je 0x42eb
0x42bc: cmp r13,r15
0x42bf: jbe 0x42c6
0x42c1: mov byte ptr [r14+r15],0x27
0x42c6: lea rsi,[r15+0x1]
0x42ca: cmp r13,rsi
0x42cd: jbe 0x42d5
0x42cf: mov byte ptr [r14+r15+0x1],0x24
0x42d5: lea rsi,[r15+0x2]
0x42d9: cmp r13,rsi
0x42dc: jbe 0x42e4
0x42de: mov byte ptr [r14+r15+0x2],0x27
0x42e4: add r15,0x3
0x42e8: mov r8d,eax
0x42eb: cmp r13,r15
0x42ee: jbe 0x42f5
0x42f0: mov byte ptr [r14+r15],0x5c
0x42f5: lea rax,[r15+0x1]
0x42f9: cmp r13,rax
0x42fc: jbe 0x430b
0x42fe: mov eax,ebx
0x4300: shr al,0x6
0x4303: add eax,0x30
0x4306: mov byte ptr [r14+r15+0x1],al
0x430b: lea rax,[r15+0x2]
0x430f: cmp r13,rax
0x4312: jbe 0x4324
0x4314: mov eax,ebx
0x4316: shr al,0x3
0x4319: and eax,0x7
0x431c: add eax,0x30
0x431f: mov byte ptr [r14+r15+0x2],al
0x4324: and ebx,0x7
0x4327: add rbp,0x1
0x432b: add r15,0x3
0x432f: add ebx,0x30
0x4332: cmp rbp,rcx
0x4335: jae 0x3b20
0x433b: mov esi,edx
0x433d: cmp r13,r15
0x4340: jbe 0x4346
0x4342: mov byte ptr [r14+r15],bl
0x4346: movzx ebx,byte ptr [rdi+rbp]
0x434a: add r15,0x1
0x434e: test dl,dl
0x4350: jne 0x42a0
0x4356: mov eax,esi
0x4358: xor eax,0x1
0x435b: and eax,r8d
0x435e: test r10b,r10b
0x4361: je 0x4371
0x4363: cmp r13,r15
0x4366: jbe 0x436d
0x4368: mov byte ptr [r14+r15],0x5c
0x436d: add r15,0x1
0x4371: add rbp,0x1
0x4375: cmp rbp,rcx
0x4378: jae 0x3afc
0x437e: test al,al
0x4380: je 0x477e
0x4386: cmp r13,r15
0x4389: jbe 0x4390
0x438b: mov byte ptr [r14+r15],0x27
0x4390: lea rax,[r15+0x1]
0x4394: cmp r13,rax
0x4397: jbe 0x439f
0x4399: mov byte ptr [r14+r15+0x1],0x27
0x439f: add r15,0x2
0x43a3: xor r10d,r10d
0x43a6: xor r8d,r8d
0x43a9: jmp 0x433d
0x43b0: cmp r15,0x1
0x43b4: je 0x4219
0x43ba: mov rdi,qword ptr [rsp+0x10]
0x43bf: lea rcx,[rdi+r15]
0x43c3: lea rdx,[rdi+r14+0x1]
0x43c8: lea r8,[rcx+r14]
0x43cc: jmp 0x43dd
0x43d0: add rdx,0x1
0x43d4: cmp r8,rdx
0x43d7: je 0x4219
0x43dd: movzx ecx,byte ptr [rdx]
0x43e0: sub ecx,0x5b
0x43e3: cmp cl,0x21
0x43e6: ja 0x43d0
0x43e8: mov esi,0x1
0x43ed: shl rsi,cl
0x43f0: mov rcx,rsi
0x43f3: movabsq rsi,0x20000002b
0x43fd: test rcx,rsi
0x4400: je 0x43d0
0x4402: mov r14,qword ptr [rsp+0x40]
0x4407: mov r13,qword ptr [rsp+0x70]
0x440c: mov rbp,qword ptr [rsp+0x30]
0x4411: mov dword ptr [rsp+0x8],0x2
0x4419: cmp byte ptr [rsp+0xd],0x0
0x441e: je 0x4430
0x4420: test al,al
0x4422: mov eax,0x4
0x4427: cmove eax,dword ptr [rsp+0x8]
0x442c: mov dword ptr [rsp+0x8],eax
0x4430: sub rsp,0x8
0x4434: mov rcx,rbp
0x4437: mov rsi,r13
0x443a: push qword ptr [rsp+0x68]
0x443e: push qword ptr [rsp+0x78]
0x4442: mov rdi,r14
0x4445: push 0x0
0x4447: mov r9d,dword ptr [rsp+0x98]
0x444f: mov r8d,dword ptr [rsp+0x28]
0x4454: mov rdx,qword ptr [rsp+0x30]
0x4459: and r9d,-0x3
0x445d: call 0x3890
0x4462: add rsp,0x20
0x4466: mov r15,rax
0x4469: mov rbx,qword ptr [rsp+0xa8]
0x4471: xor rbx,qword ptr fs:0x28
0x447a: mov rax,r15
0x447d: jne 0x4a83
0x4483: add rsp,0xb8
0x448a: pop rbx
0x448b: pop rbp
0x448c: pop r12
0x448e: pop r13
0x4490: pop r14
0x4492: pop r15
0x4494: ret 
0x4498: mov rbp,r11
0x449b: jmp 0x4419
0x4501: test r13,r13
0x4504: jne 0x4a9a
0x450a: lea rax,[rip+0x2d74]
0x4511: mov qword ptr [rsp+0x50],0x0
0x451a: mov byte ptr [rsp+0xe],0x1
0x451f: mov byte ptr [rsp+0x7c],0x0
0x4524: xor r12d,r12d
0x4527: mov byte ptr [rsp+0xf],0x0
0x452c: mov qword ptr [rsp+0x18],0x1
0x4535: mov qword ptr [rsp+0x48],rax
0x453a: mov r15d,0x1
0x4540: mov dword ptr [rsp+0x8],0x2
0x4548: jmp 0x3963
0x4760: movzx ebx,byte ptr [rsp+0xf]
0x4765: mov rbp,r11
0x4768: mov byte ptr [rsp+0xd],bl
0x476c: jmp 0x4419
0x4771: movzx edx,byte ptr [rsp+0xd]
0x4776: xor r12d,r12d
0x4779: jmp 0x4280
0x477e: xor r10d,r10d
0x4781: jmp 0x433d
0x47a1: mov r11,qword ptr [rsp+0x30]
0x47a6: mov rsi,r14
0x47a9: mov rcx,r13
0x47ac: mov rax,rbx
0x47af: mov rdi,rbx
0x47b2: movzx r8d,byte ptr [rsp+0x7d]
0x47b8: movzx ebx,byte ptr [rsp+0x7e]
0x47bd: mov r9,qword ptr [rsp+0x88]
0x47c5: cmp rsi,r11
0x47c8: movzx r10d,byte ptr [rsp+0x7f]
0x47ce: mov r15,qword ptr [rsp+0x80]
0x47d6: mov r14,qword ptr [rsp+0x40]
0x47db: mov r13,qword ptr [rsp+0x70]
0x47e0: jae 0x4808
0x47e2: cmp byte ptr [rcx],0x0
0x47e5: jne 0x47f7
0x47e7: jmp 0x4808
0x47f0: cmp byte ptr [r9+rax],0x0
0x47f5: je 0x4805
0x47f7: add rax,0x1
0x47fb: lea rdx,[rbp+rax]
0x4800: cmp r11,rdx
0x4803: ja 0x47f0
0x4805: mov rdi,rax
0x4808: movzx edx,byte ptr [rsp+0xd]
0x480d: xor r12d,r12d
0x4810: jmp 0x4276
0x4815: mov rdi,rbx
0x4818: movzx r8d,byte ptr [rsp+0x7d]
0x481e: movzx ebx,byte ptr [rsp+0x7e]
0x4823: movzx r10d,byte ptr [rsp+0x7f]
0x4829: mov r15,qword ptr [rsp+0x80]
0x4831: xor r12d,r12d
0x4834: mov r14,qword ptr [rsp+0x40]
0x4839: mov r13,qword ptr [rsp+0x70]
0x483e: mov r11,qword ptr [rsp+0x30]
0x4843: movzx edx,byte ptr [rsp+0xd]
0x4848: jmp 0x4276
0x487b: mov eax,edx
0x487d: jmp 0x3dd7
0x498a: mov eax,edx
0x498c: mov rbx,qword ptr [rsp+0x48]
0x4991: test rbx,rbx
0x4994: je 0x49c2
0x4996: test al,al
0x4998: je 0x49c2
0x499a: movzx ecx,byte ptr [rbx]
0x499d: mov rax,rbx
0x49a0: test cl,cl
0x49a2: je 0x49c2
0x49a4: mov rdx,r15
0x49a7: sub rax,r15
0x49aa: cmp r13,rdx
0x49ad: jbe 0x49b3
0x49af: mov byte ptr [r14+rdx],cl
0x49b3: add rdx,0x1
0x49b7: movzx ecx,byte ptr [rax+rdx]
0x49bb: test cl,cl
0x49bd: jne 0x49aa
0x49bf: mov r15,rdx
0x49c2: cmp r13,r15
0x49c5: jbe 0x4469
0x49cb: mov byte ptr [r14+r15],0x0
0x49d0: jmp 0x4469
0x49d5: cmp dword ptr [rsp+0x8],0x2
0x49da: movzx ebx,byte ptr [rsp+0xf]
0x49df: mov rbp,r11
0x49e2: sete al
0x49e5: mov byte ptr [rsp+0xd],bl
0x49e9: jmp 0x4419
0x4a2d: sub rsp,0x8
0x4a31: mov r8d,0x5
0x4a37: mov rcx,r11
0x4a3a: push qword ptr [rsp+0x68]
0x4a3e: push qword ptr [rsp+0x78]
0x4a42: mov rdi,r14
0x4a45: push qword ptr [rsp+0x38]
0x4a49: mov r9d,dword ptr [rsp+0x98]
0x4a51: mov rdx,qword ptr [rsp+0x30]
0x4a56: mov rsi,qword ptr [rsp+0x70]
0x4a5b: call 0x3890
0x4a60: add rsp,0x20
0x4a64: mov r15,rax
0x4a67: jmp 0x4469
0x4a6c: movzx eax,byte ptr [rsp+0x7c]
0x4a71: jmp 0x498c
0x4a76: mov dword ptr [rsp+0x8],0x2
0x4a7e: jmp 0x4419
0x4a83: call 0x1830
0x4a88: mov byte ptr [rsp+0xd],0x0
0x4a8d: jmp 0x4501
0x4a9a: mov byte ptr [rsp+0xe],0x1
0x4a9f: xor eax,eax
0x4aa1: xor r12d,r12d
0x4aa4: mov qword ptr [rsp+0x50],0x0
0x4aad: jmp 0x4054
0x4ac4: nop 
0x4ac6: nop word ptr cs:[rax+rax]
0x4bbc: add rsp,0x20
0x4bc0: mov r11,qword ptr [rsp+0x10]
0x4bc5: cmp r11,rax
0x4bc8: ja 0x4c31
0x4bca: lea rsi,[rax+0x1]
0x4bce: lea rax,[rip+0x20556b]
0x4bd5: cmp r12,rax
0x4bd8: mov qword ptr [rbx],rsi
0x4bdb: je 0x4bef
0x4bdd: mov rdi,r12
0x4be0: mov qword ptr [rsp+0x10],rsi
0x4be5: call 0x1770
0x4bea: mov rsi,qword ptr [rsp+0x10]
0x4bef: mov rdi,rsi
0x4bf2: mov qword ptr [rsp+0x10],rsi
0x4bf7: call 0x5a50
0x4bfc: sub rsp,0x8
0x4c00: mov qword ptr [rbx+0x8],rax
0x4c04: mov r8d,dword ptr [rbp]
0x4c08: push qword ptr [rbp+0x30]
0x4c0b: push qword ptr [rbp+0x28]
0x4c0e: mov rcx,r14
0x4c11: push r15
0x4c13: mov r9d,dword ptr [rsp+0x3c]
0x4c18: mov rdi,rax
0x4c1b: mov rdx,qword ptr [rsp+0x28]
0x4c20: mov rsi,qword ptr [rsp+0x30]
0x4c25: mov r12,rax
0x4c28: call 0x3890
0x4c2d: add rsp,0x20
0x4c31: mov eax,dword ptr [rsp+0x18]
0x4c35: mov dword ptr [r13],eax
0x4c39: add rsp,0x28
0x4c3d: mov rax,r12
0x4c40: pop rbx
0x4c41: pop rbp
0x4c42: pop r12
0x4c44: pop r13
0x4c46: pop r14
0x4c48: pop r15
0x4c4a: ret 
0x4c7b: nop dword ptr [rax+rax]
0x4c80: push r12
0x4c82: push rbp
0x4c83: push rbx
0x4c84: mov rbx,rdi
0x4c87: call 0x1790
0x4c8c: mov r12d,dword ptr [rax]
0x4c8f: mov rbp,rax
0x4c92: lea rax,[rip+0x2055a7]
0x4c99: test rbx,rbx
0x4c9c: mov esi,0x38
0x4ca1: cmove rbx,rax
0x4ca5: mov rdi,rbx
0x4ca8: call 0x5c50
0x4cad: mov dword ptr [rbp],r12d
0x4cb1: pop rbx
0x4cb2: pop rbp
0x4cb3: pop r12
0x4cb5: ret 
0x4cc0: lea rax,[rip+0x205579]
0x4cc7: test rdi,rdi
0x4cca: cmove rdi,rax
0x4cce: mov eax,dword ptr [rdi]
0x4cd0: ret 
0x4ce0: lea rax,[rip+0x205559]
0x4ce7: test rdi,rdi
0x4cea: cmove rdi,rax
0x4cee: mov dword ptr [rdi],esi
0x4cf0: ret 
0x4d00: lea rax,[rip+0x205539]
0x4d07: test rdi,rdi
0x4d0a: mov ecx,esi
0x4d0c: cmove rdi,rax
0x4d10: mov eax,esi
0x4d12: and ecx,0x1f
0x4d15: shr al,0x5
0x4d18: movzx eax,al
0x4d1b: lea rdi,[rdi+rax*4+0x8]
0x4d20: mov esi,dword ptr [rdi]
0x4d22: mov eax,esi
0x4d24: shr eax,cl
0x4d26: xor edx,eax
0x4d28: and eax,0x1
0x4d2b: and edx,0x1
0x4d2e: shl edx,cl
0x4d30: xor edx,esi
0x4d32: mov dword ptr [rdi],edx
0x4d34: ret 
0x4d40: lea rax,[rip+0x2054f9]
0x4d47: test rdi,rdi
0x4d4a: cmove rdi,rax
0x4d4e: mov eax,dword ptr [rdi+0x4]
0x4d51: mov dword ptr [rdi+0x4],esi
0x4d54: ret 
0x4d60: lea rax,[rip+0x2054d9]
0x4d67: test rdi,rdi
0x4d6a: cmove rdi,rax
0x4d6e: test rsi,rsi
0x4d71: mov dword ptr [rdi],0xa
0x4d77: je 0x4d87
0x4d79: test rdx,rdx
0x4d7c: je 0x4d87
0x4d7e: mov qword ptr [rdi+0x28],rsi
0x4d82: mov qword ptr [rdi+0x30],rdx
0x4d86: ret 
0x4d87: sub rsp,0x8
0x4d8b: call 0x1780
0x4d90: push r15
0x4d92: push r14
0x4d94: lea rax,[rip+0x2054a5]
0x4d9b: push r13
0x4d9d: push r12
0x4d9f: mov r13,rdi
0x4da2: push rbp
0x4da3: push rbx
0x4da4: mov rbx,r8
0x4da7: mov r14,rsi
0x4daa: mov r15,rdx
0x4dad: sub rsp,0x18
0x4db1: test r8,r8
0x4db4: cmove rbx,rax
0x4db8: mov qword ptr [rsp+0x8],rcx
0x4dbd: call 0x1790
0x4dc2: mov r12d,dword ptr [rax]
0x4dc5: mov rbp,rax
0x4dc8: lea rax,[rbx+0x8]
0x4dcc: sub rsp,0x8
0x4dd0: mov r9d,dword ptr [rbx+0x4]
0x4dd4: push qword ptr [rbx+0x30]
0x4dd7: mov r8d,dword ptr [rbx]
0x4dda: push qword ptr [rbx+0x28]
0x4ddd: mov rdx,r15
0x4de0: push rax
0x4de1: mov rcx,qword ptr [rsp+0x28]
0x4de6: mov rsi,r14
0x4de9: mov rdi,r13
0x4dec: call 0x3890
0x4df1: mov dword ptr [rbp],r12d
0x4df5: add rsp,0x38
0x4df9: pop rbx
0x4dfa: pop rbp
0x4dfb: pop r12
0x4dfd: pop r13
0x4dff: pop r14
0x4e01: pop r15
0x4e03: ret 
0x4e10: push r15
0x4e12: push r14
0x4e14: lea rax,[rip+0x205425]
0x4e1b: push r13
0x4e1d: push r12
0x4e1f: mov r12,rdx
0x4e22: push rbp
0x4e23: push rbx
0x4e24: mov rbx,rcx
0x4e27: mov r14,rdi
0x4e2a: mov r15,rsi
0x4e2d: sub rsp,0x38
0x4e31: test rcx,rcx
0x4e34: cmove rbx,rax
0x4e38: xor ebp,ebp
0x4e3a: call 0x1790
0x4e3f: test r12,r12
0x4e42: mov r13,rax
0x4e45: mov eax,dword ptr [rax]
0x4e47: sete bpl
0x4e4b: or ebp,dword ptr [rbx+0x4]
0x4e4e: lea r10,[rbx+0x8]
0x4e52: sub rsp,0x8
0x4e56: mov r8d,dword ptr [rbx]
0x4e59: mov rcx,r15
0x4e5c: mov dword ptr [rsp+0x14],eax
0x4e60: push qword ptr [rbx+0x30]
0x4e63: mov rdx,r14
0x4e66: push qword ptr [rbx+0x28]
0x4e69: push r10
0x4e6b: xor esi,esi
0x4e6d: mov r9d,ebp
0x4e70: xor edi,edi
0x4e72: mov qword ptr [rsp+0x40],r10
0x4e77: call 0x3890
0x4e7c: lea rsi,[rax+0x1]
0x4e80: mov qword ptr [rsp+0x48],rax
0x4e85: add rsp,0x20
0x4e89: mov rdi,rsi
0x4e8c: mov qword ptr [rsp+0x18],rsi
0x4e91: call 0x5a50
0x4e96: mov qword ptr [rsp+0x10],rax
0x4e9b: sub rsp,0x8
0x4e9f: push qword ptr [rbx+0x30]
0x4ea2: push qword ptr [rbx+0x28]
0x4ea5: mov r10,qword ptr [rsp+0x38]
0x4eaa: mov r9d,ebp
0x4ead: mov r8d,dword ptr [rbx]
0x4eb0: mov rcx,r15
0x4eb3: mov rdx,r14
0x4eb6: mov rdi,rax
0x4eb9: push r10
0x4ebb: mov rsi,qword ptr [rsp+0x38]
0x4ec0: call 0x3890
0x4ec5: mov eax,dword ptr [rsp+0x2c]
0x4ec9: add rsp,0x20
0x4ecd: test r12,r12
0x4ed0: mov dword ptr [r13],eax
0x4ed4: je 0x4edf
0x4ed6: mov r11,qword ptr [rsp+0x28]
0x4edb: mov qword ptr [r12],r11
0x4edf: mov rax,qword ptr [rsp+0x10]
0x4ee4: add rsp,0x38
0x4ee8: pop rbx
0x4ee9: pop rbp
0x4eea: pop r12
0x4eec: pop r13
0x4eee: pop r14
0x4ef0: pop r15
0x4ef2: ret 
0x4f00: mov rcx,rdx
0x4f03: xor edx,edx
0x4f05: jmp 0x4e10
0x4f10: mov eax,dword ptr [rip+0x205162]
0x4f16: push r12
0x4f18: mov r12,qword ptr [rip+0x205161]
0x4f1f: push rbp
0x4f20: push rbx
0x4f21: cmp eax,0x1
0x4f24: jle 0x4f51
0x4f26: sub eax,0x2
0x4f29: lea rbx,[r12+0x18]
0x4f2e: shl rax,0x4
0x4f32: lea rbp,[r12+rax+0x28]
0x4f37: nop word ptr [rax+rax]
0x4f40: mov rdi,qword ptr [rbx]
0x4f43: add rbx,0x10
0x4f47: call 0x1770
0x4f4c: cmp rbx,rbp
0x4f4f: jne 0x4f40
0x4f51: mov rdi,qword ptr [r12+0x8]
0x4f56: lea rbx,[rip+0x2051e3]
0x4f5d: cmp rdi,rbx
0x4f60: je 0x4f79
0x4f62: call 0x1770
0x4f67: mov qword ptr [rip+0x20511e],0x100
0x4f72: mov qword ptr [rip+0x20511f],rbx
0x4f79: lea rbx,[rip+0x205110]
0x4f80: cmp r12,rbx
0x4f83: je 0x4f94
0x4f85: mov rdi,r12
0x4f88: call 0x1770
0x4f8d: mov qword ptr [rip+0x2050ec],rbx
0x4f94: pop rbx
0x4f95: mov dword ptr [rip+0x2050d9],0x1
0x4f9f: pop rbp
0x4fa0: pop r12
0x4fa2: ret 
0x4fb0: lea rcx,[rip+0x205289]
0x4fb7: mov rdx,-0x1
0x4fbe: jmp 0x4ad0
0x4fd0: lea rcx,[rip+0x205269]
0x4fd7: jmp 0x4ad0
0x4fe0: lea rcx,[rip+0x205259]
0x4fe7: mov rsi,rdi
0x4fea: mov rdx,-0x1
0x4ff1: xor edi,edi
0x4ff3: jmp 0x4ad0
0x5000: lea rcx,[rip+0x205239]
0x5007: mov rdx,rsi
0x500a: mov rsi,rdi
0x500d: xor edi,edi
0x500f: jmp 0x4ad0
0x508f: mov rcx,qword ptr [rsp+0x38]
0x5094: xor rcx,qword ptr fs:0x28
0x509d: jne 0x50a9
0x509f: add rsp,0x48
0x50a3: ret 
0x50a4: call 0x1780
0x50a9: call 0x1830
0x50ae: nop 
0x50b0: sub rsp,0x48
0x50b4: mov rax,rdx
0x50b7: mov rdx,rcx
0x50ba: mov rcx,qword ptr fs:0x28
0x50c3: mov qword ptr [rsp+0x38],rcx
0x50c8: xor ecx,ecx
0x50ca: cmp esi,0xa
0x50cd: je 0x5130
0x50cf: mov dword ptr [rsp],esi
0x50d2: mov rcx,rsp
0x50d5: mov rsi,rax
0x50d8: mov qword ptr [rsp+0x4],0x0
0x50e1: mov qword ptr [rsp+0xc],0x0
0x50ea: mov qword ptr [rsp+0x14],0x0
0x50f3: mov qword ptr [rsp+0x1c],0x0
0x50fc: mov qword ptr [rsp+0x24],0x0
0x5105: mov qword ptr [rsp+0x2c],0x0
0x510e: mov dword ptr [rsp+0x34],0x0
0x5116: call 0x4ad0
0x511b: mov rdx,qword ptr [rsp+0x38]
0x5120: xor rdx,qword ptr fs:0x28
0x5129: jne 0x5135
0x512b: add rsp,0x48
0x512f: ret 
0x5130: call 0x1780
0x5135: call 0x1830
0x513a: nop word ptr [rax+rax]
0x5150: mov rcx,rdx
0x5153: mov rdx,rsi
0x5156: mov esi,edi
0x5158: xor edi,edi
0x515a: jmp 0x50b0
0x5160: sub rsp,0x48
0x5164: mov ecx,edx
0x5166: mov rax,qword ptr fs:0x28
0x516f: mov qword ptr [rsp+0x38],rax
0x5174: xor eax,eax
0x5176: mov rax,qword ptr [rip+0x2050f3]
0x517d: mov r8,rsp
0x5180: and ecx,0x1f
0x5183: movdqa xmm0,[rip+0x2050b5]
0x518b: mov qword ptr [rsp+0x30],rax
0x5190: mov eax,edx
0x5192: movaps [rsp],xmm0
0x5196: shr al,0x5
0x5199: movzx eax,al
0x519c: lea r9,[r8+rax*4+0x8]
0x51a1: movdqa xmm0,[rip+0x2050a7]
0x51a9: movaps [rsp+0x10],xmm0
0x51ae: movdqa xmm0,[rip+0x2050aa]
0x51b6: movaps [rsp+0x20],xmm0
0x51bb: mov edx,dword ptr [r9]
0x51be: mov eax,edx
0x51c0: shr eax,cl
0x51c2: not eax
0x51c4: and eax,0x1
0x51c7: shl eax,cl
0x51c9: mov rcx,r8
0x51cc: xor eax,edx
0x51ce: mov rdx,rsi
0x51d1: mov rsi,rdi
0x51d4: mov dword ptr [r9],eax
0x51d7: xor edi,edi
0x51d9: call 0x4ad0
0x51de: mov rsi,qword ptr [rsp+0x38]
0x51e3: xor rsi,qword ptr fs:0x28
0x51ec: jne 0x51f3
0x51ee: add rsp,0x48
0x51f2: ret 
0x51f3: call 0x1830
0x51f8: nop dword ptr [rax+rax]
0x5200: movsx edx,sil
0x5204: mov rsi,-0x1
0x520b: jmp 0x5160
0x5210: mov edx,0x3a
0x5215: mov rsi,-0x1
0x521c: jmp 0x5160
0x5230: mov edx,0x3a
0x5235: jmp 0x5160
0x52af: mov rcx,qword ptr [rsp+0x38]
0x52b4: xor rcx,qword ptr fs:0x28
0x52bd: jne 0x52c9
0x52bf: add rsp,0x48
0x52c3: ret 
0x52c4: call 0x1780
0x52c9: call 0x1830
0x52ce: nop 
0x52d0: sub rsp,0x48
0x52d4: mov r9,rcx
0x52d7: mov rcx,qword ptr [rip+0x204f92]
0x52de: movdqa xmm0,[rip+0x204f5a]
0x52e6: mov rax,qword ptr fs:0x28
0x52ef: mov qword ptr [rsp+0x38],rax
0x52f4: xor eax,eax
0x52f6: movaps [rsp],xmm0
0x52fa: test rsi,rsi
0x52fd: mov qword ptr [rsp+0x30],rcx
0x5302: mov dword ptr [rsp],0xa
0x5309: movdqa xmm0,[rip+0x204f3f]
0x5311: movaps [rsp+0x10],xmm0
0x5316: movdqa xmm0,[rip+0x204f42]
0x531e: movaps [rsp+0x20],xmm0
0x5323: je 0x5357
0x5325: test rdx,rdx
0x5328: je 0x5357
0x532a: mov qword ptr [rsp+0x28],rsi
0x532f: mov qword ptr [rsp+0x30],rdx
0x5334: mov rcx,rsp
0x5337: mov rdx,r8
0x533a: mov rsi,r9
0x533d: call 0x4ad0
0x5342: mov rdi,qword ptr [rsp+0x38]
0x5347: xor rdi,qword ptr fs:0x28
0x5350: jne 0x535c
0x5352: add rsp,0x48
0x5356: ret 
0x5357: call 0x1780
0x535c: call 0x1830
0x5361: nop dword ptr [rax+rax]
0x5366: nop word ptr cs:[rax+rax]
0x5370: mov r8,-0x1
0x5377: jmp 0x52d0
0x5380: mov rcx,rdx
0x5383: mov r8,-0x1
0x538a: mov rdx,rsi
0x538d: mov rsi,rdi
0x5390: xor edi,edi
0x5392: jmp 0x52d0
0x53a0: mov r8,rcx
0x53a3: mov rcx,rdx
0x53a6: mov rdx,rsi
0x53a9: mov rsi,rdi
0x53ac: xor edi,edi
0x53ae: jmp 0x52d0
0x53c0: lea rcx,[rip+0x204c79]
0x53c7: jmp 0x4ad0
0x53d0: lea rcx,[rip+0x204c69]
0x53d7: mov rdx,rsi
0x53da: mov rsi,rdi
0x53dd: xor edi,edi
0x53df: jmp 0x4ad0
0x5568: mov r8,rcx
0x556b: mov rcx,rdx
0x556e: lea rdx,[rip+0x21df]
0x5575: mov esi,0x1
0x557a: xor eax,eax
0x557c: call 0x1a70
0x5581: jmp 0x546c
0x577d: push r12
0x577f: push r15
0x5781: push r14
0x5783: mov r8,qword ptr [rsp+0x20]
0x5788: mov rcx,rbx
0x578b: mov rdx,rax
0x578e: mov rdi,rbp
0x5791: mov esi,0x1
0x5796: xor eax,eax
0x5798: call 0x1a70
0x579d: add rsp,0x20
0x57a1: add rsp,0x28
0x57a5: pop rbx
0x57a6: pop rbp
0x57a7: pop r12
0x57a9: pop r13
0x57ab: pop r14
0x57ad: pop r15
0x57af: ret 
0x57e9: push r12
0x57eb: push r15
0x57ed: push r14
0x57ef: mov r9,qword ptr [rsp+0x28]
0x57f4: jmp 0x5783
0x5850: xor r9d,r9d
0x5853: cmp qword ptr [r8],0x0
0x5857: je 0x586b
0x5859: nop dword ptr [rax]
0x5860: add r9,0x1
0x5864: cmp qword ptr [r8+r9*8],0x0
0x5869: jne 0x5860
0x586b: jmp 0x5430
0x5870: sub rsp,0x68
0x5874: mov r10,r8
0x5877: xor r9d,r9d
0x587a: mov rax,qword ptr fs:0x28
0x5883: mov qword ptr [rsp+0x58],rax
0x5888: xor eax,eax
0x588a: mov r8,rsp
0x588d: nop dword ptr [rax]
0x5890: mov eax,dword ptr [r10]
0x5893: cmp eax,0x2f
0x5896: ja 0x58da
0x5898: mov r11d,eax
0x589b: add r11,qword ptr [r10+0x10]
0x589f: add eax,0x8
0x58a2: mov dword ptr [r10],eax
0x58a5: mov rax,qword ptr [r11]
0x58a8: test rax,rax
0x58ab: mov qword ptr [r8+r9*8],rax
0x58af: je 0x58bb
0x58b1: add r9,0x1
0x58b5: cmp r9,0xa
0x58b9: jne 0x5890
0x58bb: call 0x5430
0x58c0: mov rax,qword ptr [rsp+0x58]
0x58c5: xor rax,qword ptr fs:0x28
0x58ce: jne 0x58d5
0x58d0: add rsp,0x68
0x58d4: ret 
0x58d5: call 0x1830
0x58da: mov r11,qword ptr [r10+0x8]
0x58de: lea rax,[r11+0x8]
0x58e2: mov qword ptr [r10+0x8],rax
0x58e6: jmp 0x58a5
0x59b0: call 0x1830
0x59bc: mov rax,rbx
0x59bf: add rbx,0x8
0x59c3: jmp 0x5976
0x59d0: push rbx
0x59d1: lea rsi,[rip+0x1dca]
0x59d8: mov edx,0x5
0x59dd: xor edi,edi
0x59df: call 0x1800
0x59e4: lea rdx,[rip+0x1dcc]
0x59eb: mov rsi,rax
0x59ee: mov edi,0x1
0x59f3: xor eax,eax
0x59f5: call 0x19f0
0x59fa: lea rsi,[rip+0x1dcc]
0x5a01: mov edx,0x5
0x5a06: xor edi,edi
0x5a08: call 0x1800
0x5a0d: lea rcx,[rip+0x15a4]
0x5a14: lea rdx,[rip+0xdb1]
0x5a1b: mov rsi,rax
0x5a1e: mov edi,0x1
0x5a23: xor eax,eax
0x5a25: call 0x19f0
0x5a2a: mov rbx,qword ptr [rip+0x204677]
0x5a31: lea rsi,[rip+0x1fc8]
0x5a38: xor edi,edi
0x5a3a: mov edx,0x5
0x5a3f: call 0x1800
0x5a44: mov rsi,rbx
0x5a47: mov rdi,rax
0x5a4a: pop rbx
0x5a4b: jmp 0x1910
0x5a50: push rbx
0x5a51: mov rbx,rdi
0x5a54: call 0x1970
0x5a59: test rax,rax
0x5a5c: jne 0x5a63
0x5a5e: test rbx,rbx
0x5a61: jne 0x5a65
0x5a63: pop rbx
0x5a64: ret 
0x5a65: call 0x5ca0
0x5a6a: nop word ptr [rax+rax]
0x5a70: mov rax,rdi
0x5a73: mul rsi
0x5a76: mov rdi,rax
0x5a79: seto al
0x5a7c: test rdi,rdi
0x5a7f: js 0x5a8b
0x5a81: movzx eax,al
0x5a84: test rax,rax
0x5a87: jne 0x5a8b
0x5a89: jmp 0x5a50
0x5a8b: sub rsp,0x8
0x5a8f: call 0x5ca0
0x5a94: nop 
0x5a96: nop word ptr cs:[rax+rax]
0x5aa0: jmp 0x5a50
0x5ae6: nop word ptr cs:[rax+rax]
0x5af0: mov rax,rsi
0x5af3: mul rdx
0x5af6: mov rsi,rax
0x5af9: seto al
0x5afc: test rsi,rsi
0x5aff: js 0x5b0b
0x5b01: movzx eax,al
0x5b04: test rax,rax
0x5b07: jne 0x5b0b
0x5b09: jmp 0x5ab0
0x5b0b: sub rsp,0x8
0x5b0f: call 0x5ca0
0x5b14: nop 
0x5b16: nop word ptr cs:[rax+rax]
0x5b20: test rdi,rdi
0x5b23: mov r9,rdx
0x5b26: mov rcx,qword ptr [rsi]
0x5b29: je 0x5b60
0x5b2b: xor edx,edx
0x5b2d: movabsq rax,0x5555555555555554
0x5b37: div r9
0x5b3a: cmp rax,rcx
0x5b3d: jbe 0x5b7b
0x5b3f: mov rax,rcx
0x5b42: shr rax, 1
0x5b45: lea rcx,[rax+rcx+0x1]
0x5b4a: mov qword ptr [rsi],rcx
0x5b4d: imul rcx,r9
0x5b51: mov rsi,rcx
0x5b54: jmp 0x5ab0
0x5b60: test rcx,rcx
0x5b63: je 0x5b88
0x5b65: mov rax,rcx
0x5b68: mul r9
0x5b6b: seto dl
0x5b6e: test rax,rax
0x5b71: movzx edx,dl
0x5b74: js 0x5b7b
0x5b76: test rdx,rdx
0x5b79: je 0x5b4a
0x5b7b: sub rsp,0x8
0x5b7f: call 0x5ca0
0x5b84: nop dword ptr [rax]
0x5b88: xor edx,edx
0x5b8a: mov eax,0x80
0x5b8f: xor r8d,r8d
0x5b92: div r9
0x5b95: test rax,rax
0x5b98: sete r8b
0x5b9c: lea rcx,[r8+rax]
0x5ba0: jmp 0x5b65
0x5bfa: nop word ptr [rax+rax]
0x5c00: push rbx
0x5c01: mov rbx,rdi
0x5c04: call 0x5a50
0x5c09: mov rdx,rbx
0x5c0c: xor esi,esi
0x5c0e: mov rdi,rax
0x5c11: pop rbx
0x5c12: jmp 0x18c0
0x5c20: mov rax,rdi
0x5c23: sub rsp,0x8
0x5c27: mul rsi
0x5c2a: seto dl
0x5c2d: test rax,rax
0x5c30: js 0x5c49
0x5c32: movzx edx,dl
0x5c35: test rdx,rdx
0x5c38: jne 0x5c49
0x5c3a: call 0x1920
0x5c3f: test rax,rax
0x5c42: je 0x5c49
0x5c44: add rsp,0x8
0x5c48: ret 
0x5c49: call 0x5ca0
0x5c4e: nop 
0x5c50: push rbp
0x5c51: push rbx
0x5c52: mov rbp,rdi
0x5c55: mov rdi,rsi
0x5c58: mov rbx,rsi
0x5c5b: sub rsp,0x8
0x5c5f: call 0x5a50
0x5c64: add rsp,0x8
0x5c68: mov rdx,rbx
0x5c6b: mov rsi,rbp
0x5c6e: pop rbx
0x5c6f: pop rbp
0x5c70: mov rdi,rax
0x5c73: jmp 0x1950
0x5c80: push rbx
0x5c81: mov rbx,rdi
0x5c84: call 0x1820
0x5c89: mov rdi,rbx
0x5c8c: lea rsi,[rax+0x1]
0x5c90: pop rbx
0x5c91: jmp 0x5c50
0x5cd0: call 0x1780
0x5cd5: nop word ptr cs:[rax+rax]
0x5cdf: nop 
0x5d19: lea rsi,[rip+0x1dc0]
0x5d20: mov edx,0x5
0x5d25: xor edi,edi
0x5d27: call 0x1800
0x5d2c: xor esi,esi
0x5d2e: mov rdx,rax
0x5d31: xor edi,edi
0x5d33: xor eax,eax
0x5d35: call 0x1a00
0x5d3a: mov rcx,r13
0x5d3d: mov rdx,rbp
0x5d40: mov esi,0x8
0x5d45: mov edi,0x1
0x5d4a: call 0x50b0
0x5d4f: mov rcx,r12
0x5d52: mov rdx,rbx
0x5d55: mov esi,0x8
0x5d5a: xor edi,edi
0x5d5c: mov rbp,rax
0x5d5f: call 0x50b0
0x5d64: lea rsi,[rip+0x1da5]
0x5d6b: mov rbx,rax
0x5d6e: mov edx,0x5
0x5d73: xor edi,edi
0x5d75: call 0x1800
0x5d7a: mov r8,rbp
0x5d7d: mov rcx,rbx
0x5d80: mov edi,dword ptr [rip+0x20429a]
0x5d86: pop rbx
0x5d87: pop rbp
0x5d88: pop r12
0x5d8a: pop r13
0x5d8c: pop r14
0x5d8e: mov rdx,rax
0x5d91: xor esi,esi
0x5d93: xor eax,eax
0x5d95: jmp 0x1a00
0x5df0: push r14
0x5df2: push r13
0x5df4: mov r14,rcx
0x5df7: push r12
0x5df9: push rbp
0x5dfa: mov r12,rdx
0x5dfd: push rbx
0x5dfe: mov rbp,rdi
0x5e01: mov rbx,rsi
0x5e04: call 0x6640
0x5e09: mov r13d,eax
0x5e0c: call 0x1790
0x5e11: mov edi,dword ptr [rax]
0x5e13: test edi,edi
0x5e15: je 0x5e2a
0x5e17: lea rdx,[rbx-0x1]
0x5e1b: lea r8,[r14-0x1]
0x5e1f: mov rcx,r12
0x5e22: mov rsi,rbp
0x5e25: call 0x5ce0
0x5e2a: pop rbx
0x5e2b: mov eax,r13d
0x5e2e: pop rbp
0x5e2f: pop r12
0x5e31: pop r13
0x5e33: pop r14
0x5e35: ret 
0x5ee4: cmp eax,0x22
0x5ee7: mov ebp,0x1
0x5eec: jne 0x5f18
0x5f12: nop word ptr [rax+rax]
0x6040: movsxd rdi,edi
0x6043: mov eax,ebp
0x6045: add rcx,rdi
0x6048: or eax,0x2
0x604b: mov qword ptr [r15],rcx
0x604e: cmp byte ptr [rcx],0x0
0x6051: mov qword ptr [r14],rbx
0x6054: cmovne ebp,eax
0x6057: jmp 0x5f1d
0x60b5: or ebp,r9d
0x60b8: jmp 0x6040
0x614c: mov rax,rbx
0x614f: mul rsi
0x6152: mov rbx,rax
0x6155: jo 0x61e4
0x615b: sub r8d,0x1
0x615f: jne 0x614c
0x6161: jmp 0x60b5
0x61c0: call 0x1830
0x61c5: lea rcx,[rip+0x1a8c]
0x61cc: lea rsi,[rip+0x1965]
0x61d3: lea rdi,[rip+0x197e]
0x61da: mov edx,0x54
0x61df: call 0x18b0
0x61e4: mov r9d,0x1
0x61ea: or rbx,-0x1
0x61ee: jmp 0x615b
0x6380: push r13
0x6382: push r12
0x6384: mov r13,rsi
0x6387: push rbp
0x6388: push rbx
0x6389: mov rbx,rdi
0x638c: mov r12,rdx
0x638f: sub rsp,0x18
0x6393: mov rax,qword ptr fs:0x28
0x639c: mov qword ptr [rsp+0x8],rax
0x63a1: xor eax,eax
0x63a3: lea rax,[rsp+0x4]
0x63a8: test rdi,rdi
0x63ab: cmove rbx,rax
0x63af: mov rdi,rbx
0x63b2: call 0x1850
0x63b7: cmp rax,-0x3
0x63bb: mov rbp,rax
0x63be: jbe 0x63e0
0x63c0: test r12,r12
0x63c3: je 0x63e0
0x63c5: xor edi,edi
0x63c7: call 0x3480
0x63cc: test al,al
0x63ce: jne 0x63e0
0x63d0: movzx eax,byte ptr [r13]
0x63d5: mov ebp,0x1
0x63da: mov dword ptr [rbx],eax
0x63dc: nop dword ptr [rax]
0x63e0: mov rdx,qword ptr [rsp+0x8]
0x63e5: xor rdx,qword ptr fs:0x28
0x63ee: mov rax,rbp
0x63f1: jne 0x63fe
0x63f3: add rsp,0x18
0x63f7: pop rbx
0x63f8: pop rbp
0x63f9: pop r12
0x63fb: pop r13
0x63fd: ret 
0x63fe: call 0x1830
0x6403: nop word ptr cs:[rax+rax]
0x640d: nop dword ptr [rax]
0x6410: push r12
0x6412: push rbp
0x6413: mov rbp,rdi
0x6416: push rbx
0x6417: call 0x17c0
0x641c: mov ebx,dword ptr [rbp]
0x641f: mov rdi,rbp
0x6422: mov r12,rax
0x6425: call 0x6260
0x642a: and ebx,0x20
0x642d: test ebx,ebx
0x642f: jne 0x6448
0x6431: test eax,eax
0x6433: je 0x643f
0x6435: test r12,r12
0x6438: mov eax,0xffffffff
0x643d: je 0x6478
0x643f: pop rbx
0x6440: pop rbp
0x6441: pop r12
0x6443: ret 
0x6448: test eax,eax
0x644a: jne 0x6468
0x644c: call 0x1790
0x6451: mov dword ptr [rax],0x0
0x6457: mov eax,0xffffffff
0x645c: pop rbx
0x645d: pop rbp
0x645e: pop r12
0x6460: ret 
0x6468: pop rbx
0x6469: mov eax,0xffffffff
0x646e: pop rbp
0x646f: pop r12
0x6471: ret 
0x6478: call 0x1790
0x647d: cmp dword ptr [rax],0x9
0x6480: pop rbx
0x6481: pop rbp
0x6482: pop r12
0x6484: setne al
0x6487: movzx eax,al
0x648a: neg eax
0x648c: ret 
0x6490: sub rsp,0x8
0x6494: mov edi,0xe
0x6499: call 0x1990
0x649e: test rax,rax
0x64a1: je 0x64c0
0x64a3: cmp byte ptr [rax],0x0
0x64a6: lea rdx,[rip+0x17b4]
0x64ad: cmove rax,rdx
0x64b1: add rsp,0x8
0x64b5: ret 
0x64c0: lea rax,[rip+0x179a]
0x64c7: add rsp,0x8
0x64cb: ret 
0x6640: push r12
0x6642: push rbp
0x6643: mov r12,rdx
0x6646: push rbx
0x6647: mov rbp,rdi
0x664a: mov rbx,rsi
0x664d: sub rsp,0x10
0x6651: cmp rsi,rcx
0x6654: jne 0x666f
0x6656: mov rdx,rsi
0x6659: mov rsi,r12
0x665c: mov qword ptr [rsp+0x8],rcx
0x6661: call 0x1900
0x6666: test eax,eax
0x6668: mov rcx,qword ptr [rsp+0x8]
0x666d: je 0x6688
0x666f: add rsp,0x10
0x6673: mov rdx,r12
0x6676: mov rsi,rbx
0x6679: mov rdi,rbp
0x667c: pop rbx
0x667d: pop rbp
0x667e: pop r12
0x6680: jmp 0x64d0
0x6688: call 0x1790
0x668d: mov dword ptr [rax],0x0
0x6693: add rsp,0x10
0x6697: xor eax,eax
0x6699: pop rbx
0x669a: pop rbp
0x669b: pop r12
0x669d: ret 
0x66a0: push r15
0x66a2: push r14
0x66a4: mov r15,rdx
0x66a7: push r13
0x66a9: push r12
0x66ab: lea r12,[rip+0x2032fe]
0x66b2: push rbp
0x66b3: lea rbp,[rip+0x2032fe]
0x66ba: push rbx
0x66bb: mov r13d,edi
0x66be: mov r14,rsi
0x66c1: sub rbp,r12
0x66c4: sub rsp,0x8
0x66c8: sar rbp,0x3
0x66cc: call 0x1718
0x66d1: test rbp,rbp
0x66d4: je 0x66f6
0x66d6: xor ebx,ebx
0x66d8: nop dword ptr [rax+rax]
0x66e0: mov rdx,r15
0x66e3: mov rsi,r14
0x66e6: mov edi,r13d
0x66e9: call qword ptr [r12+rbx*8]
0x66ed: add rbx,0x1
0x66f1: cmp rbp,rbx
0x66f4: jne 0x66e0
0x66f6: add rsp,0x8
0x66fa: pop rbx
0x66fb: pop rbp
0x66fc: pop r12
0x66fe: pop r13
0x6700: pop r14
0x6702: pop r15
0x6704: ret 
0x6710: rep ret 
