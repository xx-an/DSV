0x13e0: sub rsp,0x8
0x13e4: mov rax,qword ptr [rip+0x20abe5]
0x13eb: test rax,rax
0x13ee: je 0x13f2
0x13f0: call rax
0x13f2: add rsp,0x8
0x13f6: ret 
0x1406: jmp qword ptr [rip+0x20aa0c]
0x1420: jmp qword ptr [rip+0x20aa02]
0x1470: jmp qword ptr [rip+0x20a9da]
0x1480: jmp qword ptr [rip+0x20a9d2]
0x14a0: jmp qword ptr [rip+0x20a9c2]
0x14d0: jmp qword ptr [rip+0x20a9aa]
0x1510: jmp qword ptr [rip+0x20a98a]
0x1520: jmp qword ptr [rip+0x20a982]
0x1530: jmp qword ptr [rip+0x20a97a]
0x1550: jmp qword ptr [rip+0x20a96a]
0x1580: jmp qword ptr [rip+0x20a952]
0x1590: jmp qword ptr [rip+0x20a94a]
0x15b0: jmp qword ptr [rip+0x20a93a]
0x15d0: jmp qword ptr [rip+0x20a92a]
0x15f0: jmp qword ptr [rip+0x20a91a]
0x1600: jmp qword ptr [rip+0x20a912]
0x1610: jmp qword ptr [rip+0x20a90a]
0x1630: jmp qword ptr [rip+0x20a8fa]
0x1650: jmp qword ptr [rip+0x20a8ea]
0x16a0: jmp qword ptr [rip+0x20a8c2]
0x16c0: jmp qword ptr [rip+0x20a8b2]
0x1710: jmp qword ptr [rip+0x20a88a]
0x1720: jmp qword ptr [rip+0x20a882]
0x1750: jmp qword ptr [rip+0x20a88a]
0x1910: lea rsi,[rip+0x7239]
0x1917: mov rbx,rax
0x191a: mov edx,0x5
0x191f: xor edi,edi
0x1921: call 0x14f0
0x1926: mov rcx,rbx
0x1929: mov rdx,rax
0x192c: xor esi,esi
0x192e: xor edi,edi
0x1930: xor eax,eax
0x1932: call 0x16b0
0x19c0: mov rsi,rbp
0x19c3: mov rdi,rax
0x19c6: call 0x15c0
0x19cb: mov qword ptr [rsp],r12
0x19cf: jmp 0x188c
0x1bf4: mov byte ptr [rsp+0xb1],r11b
0x1bfc: mov byte ptr [rsp+0xd1],r11b
0x1c0b: mov byte ptr [rsp+0xe5],bpl
0x1c1a: mov byte ptr [rsp+0xd9],bpl
0x1c27: mov byte ptr [rsp+0xd4],bpl
0x1e2e: jmp 0x188c
0x1e3b: mov rax,r12
0x1e3e: jmp 0x1a42
0x1e50: jmp 0x188c
0x1ebe: mov edi,0x1
0x1ec3: call 0x2ca0
0x1f04: test dl,dl
0x1f06: mov byte ptr [rsp+0xc8],r11b
0x1f0e: mov byte ptr [rsp+0xe8],r11b
0x1f16: jne 0x1f35
0x1f18: mov byte ptr [rsp+0xdf],r11b
0x1f20: mov byte ptr [rsp+0xb5],r11b
0x1f28: mov byte ptr [rsp+0xd5],r11b
0x1f30: jmp 0x1be6
0x1f35: test r10b,r10b
0x1f38: mov byte ptr [rsp+0xe3],dil
0x1f40: je 0x1be6
0x1f46: jmp 0x1f18
0x247c: mov byte ptr [rsp+0xd3],dil
0x2484: jmp 0x1bef
0x2495: lea rsi,[rip+0x6835]
0x249c: mov rbx,rax
0x249f: mov edx,0x5
0x24a4: xor edi,edi
0x24a6: call 0x14f0
0x24ab: mov rcx,rbx
0x24ae: mov rdx,rax
0x24b1: xor esi,esi
0x24b3: mov edi,0x1
0x24b8: xor eax,eax
0x24ba: call 0x16b0
0x24cb: lea rsi,[rip+0x67e7]
0x24d2: mov rbx,rax
0x24d5: mov edx,0x5
0x24da: xor edi,edi
0x24dc: call 0x14f0
0x24e1: mov rcx,rbx
0x24e4: mov rdx,rax
0x24e7: xor esi,esi
0x24e9: mov edi,0x1
0x24ee: xor eax,eax
0x24f0: call 0x16b0
0x24f5: call 0x1520
0x2501: nop word ptr cs:[rax+rax]
0x250b: nop dword ptr [rax+rax]
0x253a: hlt 
0x253b: nop dword ptr [rax+rax]
0x2540: lea rdi,[rip+0x209b39]
0x2547: push rbp
0x2548: lea rax,[rip+0x209b31]
0x254f: cmp rax,rdi
0x2552: mov rbp,rsp
0x2555: je 0x2570
0x2557: mov rax,qword ptr [rip+0x209a62]
0x255e: test rax,rax
0x2561: je 0x2570
0x2563: pop rbp
0x2564: jmp rax
0x2570: pop rbp
0x2571: ret 
0x2580: lea rdi,[rip+0x209af9]
0x2587: lea rsi,[rip+0x209af2]
0x258e: push rbp
0x258f: sub rsi,rdi
0x2592: mov rbp,rsp
0x2595: sar rsi,0x3
0x2599: mov rax,rsi
0x259c: shr rax,0x3f
0x25a0: add rsi,rax
0x25a3: sar rsi, 1
0x25a6: je 0x25c0
0x25a8: mov rax,qword ptr [rip+0x209a29]
0x25af: test rax,rax
0x25b2: je 0x25c0
0x25b4: pop rbp
0x25b5: jmp rax
0x25c0: pop rbp
0x25c1: ret 
0x25e1: push rbp
0x25e2: mov rbp,rsp
0x25e5: je 0x25f3
0x25e7: mov rdi,qword ptr [rip+0x209a1a]
0x25ee: call 0x1750
0x25f3: call 0x2540
0x25f8: mov byte ptr [rip+0x209aa9],0x1
0x25ff: pop rbp
0x2600: ret 
0x2610: push rbp
0x2611: mov rbp,rsp
0x2614: pop rbp
0x2615: jmp 0x2580
0x2a29: jmp 0x2698
0x2a38: jmp 0x2698
0x2a47: jmp 0x26d9
0x2a54: jmp 0x2702
0x2a8c: mov esi,0x9
0x2a91: call 0x1560
0x2a96: jmp 0x2698
0x2afe: jmp 0x2698
0x2b36: nop word ptr cs:[rax+rax]
0x2b68: lea rsi,[rip+0x58b1]
0x2b6f: mov rbx,rax
0x2b72: mov edx,0x5
0x2b77: xor edi,edi
0x2b79: call 0x14f0
0x2b7e: mov rcx,rbx
0x2b81: mov rdx,rax
0x2b84: xor esi,esi
0x2b86: xor edi,edi
0x2b88: xor eax,eax
0x2b8a: call 0x16b0
0x2b8f: mov dword ptr [rip+0x209517],0x1
0x2bab: mov esi,dword ptr [rbx]
0x2bad: lea rdx,[rip+0x611a]
0x2bb4: mov rcx,rax
0x2bb7: xor edi,edi
0x2bb9: xor eax,eax
0x2bbb: call 0x16b0
0x2bc0: pop rbx
0x2bc1: mov dword ptr [rip+0x2094e5],0x1
0x2bcb: pop rbp
0x2bcc: pop r12
0x2bce: ret 
0x2bd8: mov edx,0x5
0x2bdd: mov rbx,rax
0x2be0: lea rsi,[rip+0x5faa]
0x2be7: jmp 0x2b77
0x2c94: jmp 0x2c46
0x2c96: call 0x1520
0x2c9b: nop dword ptr [rax+rax]
0x2ccf: lea rsi,[rip+0x57c2]
0x2cd6: xor edi,edi
0x2cd8: call 0x14f0
0x2cdd: mov rdi,qword ptr [rip+0x2093bc]
0x2ce4: mov rdx,rax
0x2ce7: mov rcx,rbx
0x2cea: mov esi,0x1
0x2cef: xor eax,eax
0x2cf1: call 0x1700
0x30b0: push r13
0x30b2: push r12
0x30b4: push rbp
0x30b5: push rbx
0x30b6: mov rbx,rsi
0x30b9: mov rbp,rdi
0x30bc: sub rsp,0x38
0x30c0: lea rsi,[rsp+0x18]
0x30c5: mov rax,qword ptr fs:0x28
0x30ce: mov qword ptr [rsp+0x28],rax
0x30d3: xor eax,eax
0x30d5: call 0x16a0
0x30da: mov rax,qword ptr [rsp+0x18]
0x30df: fld [0+st]
0x30e1: cmp byte ptr [rax],0x0
0x30e4: jne 0x3110
0x30e6: fstp [1+st]
0x30e8: test rbx,rbx
0x30eb: je 0x30f5
0x30ed: mov rax,qword ptr [rsp+0x18]
0x30f2: mov qword ptr [rbx],rax
0x30f5: mov rax,qword ptr [rsp+0x28]
0x30fa: xor rax,qword ptr fs:0x28
0x3103: jne 0x3150
0x3105: add rsp,0x38
0x3109: pop rbx
0x310a: pop rbp
0x310b: pop r12
0x310d: pop r13
0x310f: ret 
0x3110: fstp [0+st]
0x3112: fstpt [rsp]
0x3115: call 0x1450
0x311a: lea rsi,[rsp+0x20]
0x311f: mov rdi,rbp
0x3122: mov r12,rax
0x3125: mov r13d,dword ptr [rax]
0x3128: call 0x5ff0
0x312d: mov rax,qword ptr [rsp+0x20]
0x3132: cmp qword ptr [rsp+0x18],rax
0x3137: fldt [rsp]
0x313a: jae 0x3148
0x313c: fstp [0+st]
0x313e: mov qword ptr [rsp+0x18],rax
0x3143: jmp 0x30e8
0x3148: fstp [1+st]
0x314a: mov dword ptr [r12],r13d
0x314e: jmp 0x30e8
0x3150: fstp [0+st]
0x3152: call 0x1520
0x3157: nop word ptr [rax+rax]
0x3160: mov qword ptr [rip+0x208f59],rdi
0x3167: ret 
0x3170: mov byte ptr [rip+0x208f41],dil
0x3177: ret 
0x3180: push rbp
0x3181: push rbx
0x3182: sub rsp,0x8
0x3186: mov rdi,qword ptr [rip+0x208efb]
0x318d: call 0x60b0
0x3192: test eax,eax
0x3194: je 0x31ac
0x3196: call 0x1450
0x319b: cmp byte ptr [rip+0x208f16],0x0
0x31a2: mov rbx,rax
0x31a5: je 0x31c3
0x31a7: cmp dword ptr [rax],0x20
0x31aa: jne 0x31c3
0x31ac: mov rdi,qword ptr [rip+0x208eed]
0x31b3: call 0x60b0
0x31b8: test eax,eax
0x31ba: jne 0x3202
0x31bc: add rsp,0x8
0x31c0: pop rbx
0x31c1: pop rbp
0x31c2: ret 
0x31c3: lea rsi,[rip+0x5d03]
0x31ca: xor edi,edi
0x31cc: mov edx,0x5
0x31d1: call 0x14f0
0x31d6: mov rdi,qword ptr [rip+0x208ee3]
0x31dd: mov rbp,rax
0x31e0: test rdi,rdi
0x31e3: je 0x320d
0x31e5: call 0x4d40
0x31ea: mov esi,dword ptr [rbx]
0x31ec: lea rdx,[rip+0x5ce6]
0x31f3: mov rcx,rax
0x31f6: mov r8,rbp
0x31f9: xor edi,edi
0x31fb: xor eax,eax
0x31fd: call 0x16b0
0x3202: mov edi,dword ptr [rip+0x208e10]
0x3208: call 0x1470
0x320d: mov esi,dword ptr [rbx]
0x320f: lea rdx,[rip+0x5ab8]
0x3216: mov rcx,rax
0x3219: xor edi,edi
0x321b: xor eax,eax
0x321d: call 0x16b0
0x3222: jmp 0x3202
0x32cf: nop 
0x32d0: push rbp
0x32d1: push rbx
0x32d2: mov rbp,rdi
0x32d5: mov ebx,esi
0x32d7: sub rsp,0x8
0x32db: call 0x6190
0x32e0: movzx edx,byte ptr [rax]
0x32e3: and edx,-0x21
0x32e6: cmp dl,0x55
0x32e9: je 0x3360
0x32eb: cmp dl,0x47
0x32ee: je 0x3310
0x32f0: lea rax,[rip+0x5c3c]
0x32f7: lea rdx,[rip+0x5c37]
0x32fe: cmp ebx,0x9
0x3301: cmovne rax,rdx
0x3305: add rsp,0x8
0x3309: pop rbx
0x330a: pop rbp
0x330b: ret 
0x3310: movzx edx,byte ptr [rax+0x1]
0x3314: and edx,-0x21
0x3317: cmp dl,0x42
0x331a: jne 0x32f0
0x331c: cmp byte ptr [rax+0x2],0x31
0x3320: jne 0x32f0
0x3322: cmp byte ptr [rax+0x3],0x38
0x3326: jne 0x32f0
0x3328: cmp byte ptr [rax+0x4],0x30
0x332c: jne 0x32f0
0x332e: cmp byte ptr [rax+0x5],0x33
0x3332: jne 0x32f0
0x3334: cmp byte ptr [rax+0x6],0x30
0x3338: jne 0x32f0
0x333a: cmp byte ptr [rax+0x7],0x0
0x333e: jne 0x32f0
0x3340: cmp byte ptr [rbp],0x60
0x3344: lea rax,[rip+0x5be1]
0x334b: lea rdx,[rip+0x5bde]
0x3352: cmovne rax,rdx
0x3356: add rsp,0x8
0x335a: pop rbx
0x335b: pop rbp
0x335c: ret 
0x3360: movzx edx,byte ptr [rax+0x1]
0x3364: and edx,-0x21
0x3367: cmp dl,0x54
0x336a: jne 0x32f0
0x336c: movzx edx,byte ptr [rax+0x2]
0x3370: and edx,-0x21
0x3373: cmp dl,0x46
0x3376: jne 0x32f0
0x337c: cmp byte ptr [rax+0x3],0x2d
0x3380: jne 0x32f0
0x3386: cmp byte ptr [rax+0x4],0x38
0x338a: jne 0x32f0
0x3390: cmp byte ptr [rax+0x5],0x0
0x3394: jne 0x32f0
0x339a: cmp byte ptr [rbp],0x60
0x339e: lea rax,[rip+0x5b7f]
0x33a5: lea rdx,[rip+0x5b7c]
0x33ac: cmovne rax,rdx
0x33b0: add rsp,0x8
0x33b4: pop rbx
0x33b5: pop rbp
0x33b6: ret 
0x3493: xor r11d,r11d
0x3496: mov rax,rbp
0x3499: mov r8d,r12d
0x349c: mov rbp,r11
0x349f: mov r11,rax
0x34a2: nop word ptr [rax+rax]
0x34a8: cmp r11,rbp
0x34ab: setne r12b
0x34af: cmp r11,-0x1
0x34b3: jne 0x34c2
0x34b5: mov rax,qword ptr [rsp+0x10]
0x34ba: cmp byte ptr [rax+rbp],0x0
0x34be: setne r12b
0x34c2: test r12b,r12b
0x34c5: je 0x3b20
0x34cb: cmp dword ptr [rsp+0x8],0x2
0x34d0: mov rdi,qword ptr [rsp+0x10]
0x34d5: lea r9,[rdi+rbp]
0x34d9: setne al
0x34dc: and al,byte ptr [rsp+0xd]
0x34e0: mov r10d,eax
0x34e3: je 0x3590
0x34e9: mov rax,qword ptr [rsp+0x18]
0x34ee: test rax,rax
0x34f1: je 0x3920
0x34f7: cmp r11,-0x1
0x34fb: lea rbx,[rbp+rax]
0x3500: jne 0x3530
0x3502: cmp rax,0x1
0x3506: jbe 0x3530
0x3508: mov byte ptr [rsp+0x38],r8b
0x350d: mov byte ptr [rsp+0x30],r10b
0x3512: mov qword ptr [rsp+0x28],r9
0x3517: call 0x1510
0x351c: movzx r8d,byte ptr [rsp+0x38]
0x3522: movzx r10d,byte ptr [rsp+0x30]
0x3528: mov r11,rax
0x352b: mov r9,qword ptr [rsp+0x28]
0x3530: cmp rbx,r11
0x3533: mov byte ptr [rsp+0x28],r10b
0x3538: ja 0x3af0
0x353e: mov rdx,qword ptr [rsp+0x18]
0x3543: mov rsi,qword ptr [rsp+0x48]
0x3548: mov rdi,r9
0x354b: mov qword ptr [rsp+0x40],r11
0x3550: mov byte ptr [rsp+0x38],r8b
0x3555: mov qword ptr [rsp+0x30],r9
0x355a: call 0x15b0
0x355f: test eax,eax
0x3561: mov r9,qword ptr [rsp+0x30]
0x3566: movzx r8d,byte ptr [rsp+0x38]
0x356c: mov r11,qword ptr [rsp+0x40]
0x3571: jne 0x3af0
0x3577: cmp byte ptr [rsp+0xf],0x0
0x357c: movzx r10d,byte ptr [rsp+0x28]
0x3582: jne 0x4505
0x3588: nop dword ptr [rax+rax]
0x3590: movzx ebx,byte ptr [r9]
0x3594: cmp bl,0x7e
0x3597: ja 0x38b8
0x359d: lea rcx,[rip+0x5a28]
0x35a4: movzx edx,bl
0x35a7: movsxd rax,dword ptr [rcx+rdx*4]
0x35ab: add rax,rcx
0x35ae: jmp rax
0x35e8: cmp byte ptr [rsp+0xd],0x1
0x35ed: jne 0x3702
0x35f3: test dl,dl
0x35f5: jne 0x3702
0x35fb: mov rsi,qword ptr [rsp+0x20]
0x3600: test rsi,rsi
0x3603: je 0x3619
0x3605: mov edx,ebx
0x3607: shr dl,0x5
0x360a: movzx edx,dl
0x360d: mov edx,dword ptr [rsi+rdx*4]
0x3610: btl edx,ebx
0x3613: jb 0x3763
0x3619: test r10b,r10b
0x361c: jne 0x3763
0x3622: xor eax,0x1
0x3625: add rbp,0x1
0x3629: and eax,r8d
0x362c: test al,al
0x362e: je 0x3650
0x3630: cmp r13,r15
0x3633: jbe 0x363a
0x3635: mov byte ptr [r14+r15],0x27
0x363a: lea rax,[r15+0x1]
0x363e: cmp r13,rax
0x3641: jbe 0x3649
0x3643: mov byte ptr [r14+r15+0x1],0x27
0x3649: add r15,0x2
0x364d: xor r8d,r8d
0x3650: cmp r15,r13
0x3653: jae 0x3659
0x3655: mov byte ptr [r14+r15],bl
0x3659: movzx edi,byte ptr [rsp+0xe]
0x365e: add r15,0x1
0x3662: mov eax,0x0
0x3667: test r12b,r12b
0x366a: cmove edi,eax
0x366d: mov byte ptr [rsp+0xe],dil
0x3672: jmp 0x34a8
0x3702: cmp byte ptr [rsp+0xf],0x0
0x3707: jne 0x35fb
0x370d: jmp 0x3619
0x3763: cmp dword ptr [rsp+0x8],0x2
0x3768: sete dl
0x376b: cmp byte ptr [rsp+0xf],0x0
0x3770: mov eax,edx
0x3772: jne 0x3fc8
0x3778: mov eax,r8d
0x377b: xor eax,0x1
0x377e: and al,dl
0x3780: je 0x37b1
0x3782: cmp r13,r15
0x3785: jbe 0x378c
0x3787: mov byte ptr [r14+r15],0x27
0x378c: lea rdx,[r15+0x1]
0x3790: cmp r13,rdx
0x3793: jbe 0x379b
0x3795: mov byte ptr [r14+r15+0x1],0x24
0x379b: lea rdx,[r15+0x2]
0x379f: cmp r13,rdx
0x37a2: jbe 0x37aa
0x37a4: mov byte ptr [r14+r15+0x2],0x27
0x37aa: add r15,0x3
0x37ae: mov r8d,eax
0x37b1: cmp r13,r15
0x37b4: jbe 0x37bb
0x37b6: mov byte ptr [r14+r15],0x5c
0x37bb: add r15,0x1
0x37bf: add rbp,0x1
0x37c3: jmp 0x3650
0x38b0: xor r10d,r10d
0x38b3: nop dword ptr [rax+rax]
0x38b8: cmp qword ptr [rsp+0x58],0x1
0x38be: jne 0x3c68
0x38c4: mov qword ptr [rsp+0x38],r11
0x38c9: mov byte ptr [rsp+0x30],r8b
0x38ce: mov byte ptr [rsp+0x28],r10b
0x38d3: call 0x1730
0x38d8: mov rcx,qword ptr [rax]
0x38db: movzx edx,bl
0x38de: movzx r10d,byte ptr [rsp+0x28]
0x38e4: movzx r8d,byte ptr [rsp+0x30]
0x38ea: mov r11,qword ptr [rsp+0x38]
0x38ef: mov edi,0x1
0x38f4: movzx eax,word ptr [rcx+rdx*2]
0x38f8: and ax,0x4000
0x38fc: setne r12b
0x3900: sete al
0x3903: and al,byte ptr [rsp+0xd]
0x3907: test al,al
0x3909: jne 0x42a1
0x390f: cmp dword ptr [rsp+0x8],0x2
0x3914: sete dl
0x3917: jmp 0x35e8
0x3920: movzx ebx,byte ptr [r9]
0x3924: cmp bl,0x7e
0x3927: ja 0x38b0
0x3929: lea rcx,[rip+0x5898]
0x3930: movzx edx,bl
0x3933: movsxd rax,dword ptr [rcx+rdx*4]
0x3937: add rax,rcx
0x393a: jmp rax
0x3af0: xor r10d,r10d
0x3af3: jmp 0x3590
0x3b20: cmp dword ptr [rsp+0x8],0x2
0x3b25: movzx ebx,byte ptr [rsp+0xf]
0x3b2a: mov r12d,r8d
0x3b2d: mov rbp,r11
0x3b30: sete dl
0x3b33: mov eax,ebx
0x3b35: test r15,r15
0x3b38: sete cl
0x3b3b: and eax,edx
0x3b3d: and al,cl
0x3b3f: jne 0x45a6
0x3b45: mov eax,ebx
0x3b47: xor eax,0x1
0x3b4a: and dl,al
0x3b4c: je 0x44bc
0x3b52: cmp byte ptr [rsp+0x7c],0x0
0x3b57: je 0x44ba
0x3b5d: cmp byte ptr [rsp+0xe],0x0
0x3b62: jne 0x455d
0x3b68: test r13,r13
0x3b6b: sete al
0x3b6e: cmp qword ptr [rsp+0x50],0x0
0x3b74: setne dl
0x3b77: and al,dl
0x3b79: je 0x459c
0x3b7f: mov r13,qword ptr [rsp+0x50]
0x3b84: lea rbx,[rip+0x53aa]
0x3b8b: mov byte ptr [r14],0x27
0x3b8f: mov dword ptr [rsp+0x8],0x2
0x3b97: mov r15d,0x1
0x3b9d: mov qword ptr [rsp+0x18],0x1
0x3ba6: mov byte ptr [rsp+0xf],0x0
0x3bab: mov qword ptr [rsp+0x48],rbx
0x3bb0: mov byte ptr [rsp+0x7c],al
0x3bb4: jmp 0x3493
0x3c68: lea rax,[rsp+0xa0]
0x3c70: cmp r11,-0x1
0x3c74: mov qword ptr [rsp+0xa0],0x0
0x3c80: mov qword ptr [rsp+0x28],rax
0x3c85: jne 0x3cb4
0x3c87: mov rdi,qword ptr [rsp+0x10]
0x3c8c: mov byte ptr [rsp+0x40],r8b
0x3c91: mov byte ptr [rsp+0x38],r10b
0x3c96: mov qword ptr [rsp+0x30],r9
0x3c9b: call 0x1510
0x3ca0: movzx r8d,byte ptr [rsp+0x40]
0x3ca6: movzx r10d,byte ptr [rsp+0x38]
0x3cac: mov r11,rax
0x3caf: mov r9,qword ptr [rsp+0x30]
0x3cb4: lea rax,[rsp+0x9c]
0x3cbc: xor ecx,ecx
0x3cbe: mov byte ptr [rsp+0x7e],bl
0x3cc2: mov byte ptr [rsp+0x7d],r8b
0x3cc7: mov rbx,rcx
0x3cca: mov qword ptr [rsp+0x88],r9
0x3cd2: mov qword ptr [rsp+0x38],rax
0x3cd7: mov byte ptr [rsp+0x7f],r10b
0x3cdc: mov qword ptr [rsp+0x80],r15
0x3ce4: mov qword ptr [rsp+0x40],r14
0x3ce9: mov qword ptr [rsp+0x70],r13
0x3cee: mov qword ptr [rsp+0x30],r11
0x3cf3: mov rax,qword ptr [rsp+0x10]
0x3cf8: lea r14,[rbp+rbx]
0x3cfd: mov rdx,qword ptr [rsp+0x30]
0x3d02: mov rcx,qword ptr [rsp+0x28]
0x3d07: mov rdi,qword ptr [rsp+0x38]
0x3d0c: lea r13,[rax+r14]
0x3d10: sub rdx,r14
0x3d13: mov rsi,r13
0x3d16: call 0x5e40
0x3d1b: test rax,rax
0x3d1e: mov r15,rax
0x3d21: je 0x3d71
0x3d23: cmp rax,-0x1
0x3d27: je 0x4345
0x3d2d: cmp rax,-0x2
0x3d31: je 0x42d1
0x3d37: cmp dword ptr [rsp+0x8],0x2
0x3d3c: sete al
0x3d3f: and al,byte ptr [rsp+0xf]
0x3d43: jne 0x3ee0
0x3d49: mov edi,dword ptr [rsp+0x9c]
0x3d50: call 0x1720
0x3d55: mov rdi,qword ptr [rsp+0x28]
0x3d5a: test eax,eax
0x3d5c: mov eax,0x0
0x3d61: cmove r12d,eax
0x3d65: add rbx,r15
0x3d68: call 0x1710
0x3d6d: test eax,eax
0x3d6f: je 0x3cf3
0x3d71: mov edx,r12d
0x3d74: mov rdi,rbx
0x3d77: movzx r8d,byte ptr [rsp+0x7d]
0x3d7d: xor edx,0x1
0x3d80: movzx ebx,byte ptr [rsp+0x7e]
0x3d85: movzx r10d,byte ptr [rsp+0x7f]
0x3d8b: and dl,byte ptr [rsp+0xd]
0x3d8f: mov r15,qword ptr [rsp+0x80]
0x3d97: mov r14,qword ptr [rsp+0x40]
0x3d9c: mov r13,qword ptr [rsp+0x70]
0x3da1: mov r11,qword ptr [rsp+0x30]
0x3da6: cmp rdi,0x1
0x3daa: jbe 0x43ab
0x3db0: mov rcx,rdi
0x3db3: xor esi,esi
0x3db5: movzx r9d,byte ptr [rsp+0xf]
0x3dbb: add rcx,rbp
0x3dbe: mov rdi,qword ptr [rsp+0x10]
0x3dc3: jmp 0x3e7e
0x3dd0: cmp dword ptr [rsp+0x8],0x2
0x3dd5: sete al
0x3dd8: test r9b,r9b
0x3ddb: jne 0x4290
0x3de1: mov esi,r8d
0x3de4: xor esi,0x1
0x3de7: and al,sil
0x3dea: je 0x3e1b
0x3dec: cmp r13,r15
0x3def: jbe 0x3df6
0x3df1: mov byte ptr [r14+r15],0x27
0x3df6: lea rsi,[r15+0x1]
0x3dfa: cmp r13,rsi
0x3dfd: jbe 0x3e05
0x3dff: mov byte ptr [r14+r15+0x1],0x24
0x3e05: lea rsi,[r15+0x2]
0x3e09: cmp r13,rsi
0x3e0c: jbe 0x3e14
0x3e0e: mov byte ptr [r14+r15+0x2],0x27
0x3e14: add r15,0x3
0x3e18: mov r8d,eax
0x3e1b: cmp r13,r15
0x3e1e: jbe 0x3e25
0x3e20: mov byte ptr [r14+r15],0x5c
0x3e25: lea rax,[r15+0x1]
0x3e29: cmp r13,rax
0x3e2c: jbe 0x3e3b
0x3e2e: mov eax,ebx
0x3e30: shr al,0x6
0x3e33: add eax,0x30
0x3e36: mov byte ptr [r14+r15+0x1],al
0x3e3b: lea rax,[r15+0x2]
0x3e3f: cmp r13,rax
0x3e42: jbe 0x3e54
0x3e44: mov eax,ebx
0x3e46: shr al,0x3
0x3e49: and eax,0x7
0x3e4c: add eax,0x30
0x3e4f: mov byte ptr [r14+r15+0x2],al
0x3e54: and ebx,0x7
0x3e57: add rbp,0x1
0x3e5b: add r15,0x3
0x3e5f: add ebx,0x30
0x3e62: cmp rbp,rcx
0x3e65: jae 0x3650
0x3e6b: mov esi,edx
0x3e6d: cmp r13,r15
0x3e70: jbe 0x3e76
0x3e72: mov byte ptr [r14+r15],bl
0x3e76: movzx ebx,byte ptr [rdi+rbp]
0x3e7a: add r15,0x1
0x3e7e: test dl,dl
0x3e80: jne 0x3dd0
0x3e86: mov eax,esi
0x3e88: xor eax,0x1
0x3e8b: and eax,r8d
0x3e8e: test r10b,r10b
0x3e91: je 0x3ea1
0x3e93: cmp r13,r15
0x3e96: jbe 0x3e9d
0x3e98: mov byte ptr [r14+r15],0x5c
0x3e9d: add r15,0x1
0x3ea1: add rbp,0x1
0x3ea5: cmp rbp,rcx
0x3ea8: jae 0x362c
0x3eae: test al,al
0x3eb0: je 0x42ae
0x3eb6: cmp r13,r15
0x3eb9: jbe 0x3ec0
0x3ebb: mov byte ptr [r14+r15],0x27
0x3ec0: lea rax,[r15+0x1]
0x3ec4: cmp r13,rax
0x3ec7: jbe 0x3ecf
0x3ec9: mov byte ptr [r14+r15+0x1],0x27
0x3ecf: add r15,0x2
0x3ed3: xor r10d,r10d
0x3ed6: xor r8d,r8d
0x3ed9: jmp 0x3e6d
0x3ee0: cmp r15,0x1
0x3ee4: je 0x3d49
0x3eea: mov rdi,qword ptr [rsp+0x10]
0x3eef: lea rcx,[rdi+r15]
0x3ef3: lea rdx,[rdi+r14+0x1]
0x3ef8: lea r8,[rcx+r14]
0x3efc: jmp 0x3f0d
0x3f00: add rdx,0x1
0x3f04: cmp r8,rdx
0x3f07: je 0x3d49
0x3f0d: movzx ecx,byte ptr [rdx]
0x3f10: sub ecx,0x5b
0x3f13: cmp cl,0x21
0x3f16: ja 0x3f00
0x3f18: mov esi,0x1
0x3f1d: shl rsi,cl
0x3f20: mov rcx,rsi
0x3f23: movabsq rsi,0x20000002b
0x3f2d: test rcx,rsi
0x3f30: je 0x3f00
0x3f32: mov r14,qword ptr [rsp+0x40]
0x3f37: mov r13,qword ptr [rsp+0x70]
0x3f3c: mov rbp,qword ptr [rsp+0x30]
0x3f41: mov dword ptr [rsp+0x8],0x2
0x3f49: cmp byte ptr [rsp+0xd],0x0
0x3f4e: je 0x3f60
0x3f50: test al,al
0x3f52: mov eax,0x4
0x3f57: cmove eax,dword ptr [rsp+0x8]
0x3f5c: mov dword ptr [rsp+0x8],eax
0x3f60: sub rsp,0x8
0x3f64: mov rcx,rbp
0x3f67: mov rsi,r13
0x3f6a: push qword ptr [rsp+0x68]
0x3f6e: push qword ptr [rsp+0x78]
0x3f72: mov rdi,r14
0x3f75: push 0x0
0x3f77: mov r9d,dword ptr [rsp+0x98]
0x3f7f: mov r8d,dword ptr [rsp+0x28]
0x3f84: mov rdx,qword ptr [rsp+0x30]
0x3f89: and r9d,-0x3
0x3f8d: call 0x33c0
0x3f92: add rsp,0x20
0x3f96: mov r15,rax
0x3f99: mov rbx,qword ptr [rsp+0xa8]
0x3fa1: xor rbx,qword ptr fs:0x28
0x3faa: mov rax,r15
0x3fad: jne 0x45b3
0x3fb3: add rsp,0xb8
0x3fba: pop rbx
0x3fbb: pop rbp
0x3fbc: pop r12
0x3fbe: pop r13
0x3fc0: pop r14
0x3fc2: pop r15
0x3fc4: ret 
0x3fc8: mov rbp,r11
0x3fcb: jmp 0x3f49
0x4031: test r13,r13
0x4034: jne 0x45ca
0x403a: lea rax,[rip+0x4ef4]
0x4041: mov qword ptr [rsp+0x50],0x0
0x404a: mov byte ptr [rsp+0xe],0x1
0x404f: mov byte ptr [rsp+0x7c],0x0
0x4054: xor r12d,r12d
0x4057: mov byte ptr [rsp+0xf],0x0
0x405c: mov qword ptr [rsp+0x18],0x1
0x4065: mov qword ptr [rsp+0x48],rax
0x406a: mov r15d,0x1
0x4070: mov dword ptr [rsp+0x8],0x2
0x4078: jmp 0x3493
0x4290: movzx ebx,byte ptr [rsp+0xf]
0x4295: mov rbp,r11
0x4298: mov byte ptr [rsp+0xd],bl
0x429c: jmp 0x3f49
0x42a1: movzx edx,byte ptr [rsp+0xd]
0x42a6: xor r12d,r12d
0x42a9: jmp 0x3db0
0x42ae: xor r10d,r10d
0x42b1: jmp 0x3e6d
0x42d1: mov r11,qword ptr [rsp+0x30]
0x42d6: mov rsi,r14
0x42d9: mov rcx,r13
0x42dc: mov rax,rbx
0x42df: mov rdi,rbx
0x42e2: movzx r8d,byte ptr [rsp+0x7d]
0x42e8: movzx ebx,byte ptr [rsp+0x7e]
0x42ed: mov r9,qword ptr [rsp+0x88]
0x42f5: cmp rsi,r11
0x42f8: movzx r10d,byte ptr [rsp+0x7f]
0x42fe: mov r15,qword ptr [rsp+0x80]
0x4306: mov r14,qword ptr [rsp+0x40]
0x430b: mov r13,qword ptr [rsp+0x70]
0x4310: jae 0x4338
0x4312: cmp byte ptr [rcx],0x0
0x4315: jne 0x4327
0x4317: jmp 0x4338
0x4320: cmp byte ptr [r9+rax],0x0
0x4325: je 0x4335
0x4327: add rax,0x1
0x432b: lea rdx,[rbp+rax]
0x4330: cmp r11,rdx
0x4333: ja 0x4320
0x4335: mov rdi,rax
0x4338: movzx edx,byte ptr [rsp+0xd]
0x433d: xor r12d,r12d
0x4340: jmp 0x3da6
0x4345: mov rdi,rbx
0x4348: movzx r8d,byte ptr [rsp+0x7d]
0x434e: movzx ebx,byte ptr [rsp+0x7e]
0x4353: movzx r10d,byte ptr [rsp+0x7f]
0x4359: mov r15,qword ptr [rsp+0x80]
0x4361: xor r12d,r12d
0x4364: mov r14,qword ptr [rsp+0x40]
0x4369: mov r13,qword ptr [rsp+0x70]
0x436e: mov r11,qword ptr [rsp+0x30]
0x4373: movzx edx,byte ptr [rsp+0xd]
0x4378: jmp 0x3da6
0x43ab: mov eax,edx
0x43ad: jmp 0x3907
0x44ba: mov eax,edx
0x44bc: mov rbx,qword ptr [rsp+0x48]
0x44c1: test rbx,rbx
0x44c4: je 0x44f2
0x44c6: test al,al
0x44c8: je 0x44f2
0x44ca: movzx ecx,byte ptr [rbx]
0x44cd: mov rax,rbx
0x44d0: test cl,cl
0x44d2: je 0x44f2
0x44d4: mov rdx,r15
0x44d7: sub rax,r15
0x44da: cmp r13,rdx
0x44dd: jbe 0x44e3
0x44df: mov byte ptr [r14+rdx],cl
0x44e3: add rdx,0x1
0x44e7: movzx ecx,byte ptr [rax+rdx]
0x44eb: test cl,cl
0x44ed: jne 0x44da
0x44ef: mov r15,rdx
0x44f2: cmp r13,r15
0x44f5: jbe 0x3f99
0x44fb: mov byte ptr [r14+r15],0x0
0x4500: jmp 0x3f99
0x4505: cmp dword ptr [rsp+0x8],0x2
0x450a: movzx ebx,byte ptr [rsp+0xf]
0x450f: mov rbp,r11
0x4512: sete al
0x4515: mov byte ptr [rsp+0xd],bl
0x4519: jmp 0x3f49
0x455d: sub rsp,0x8
0x4561: mov r8d,0x5
0x4567: mov rcx,r11
0x456a: push qword ptr [rsp+0x68]
0x456e: push qword ptr [rsp+0x78]
0x4572: mov rdi,r14
0x4575: push qword ptr [rsp+0x38]
0x4579: mov r9d,dword ptr [rsp+0x98]
0x4581: mov rdx,qword ptr [rsp+0x30]
0x4586: mov rsi,qword ptr [rsp+0x70]
0x458b: call 0x33c0
0x4590: add rsp,0x20
0x4594: mov r15,rax
0x4597: jmp 0x3f99
0x459c: movzx eax,byte ptr [rsp+0x7c]
0x45a1: jmp 0x44bc
0x45a6: mov dword ptr [rsp+0x8],0x2
0x45ae: jmp 0x3f49
0x45b3: call 0x1520
0x45b8: mov byte ptr [rsp+0xd],0x0
0x45bd: jmp 0x4031
0x45ca: mov byte ptr [rsp+0xe],0x1
0x45cf: xor eax,eax
0x45d1: xor r12d,r12d
0x45d4: mov qword ptr [rsp+0x50],0x0
0x45dd: jmp 0x3b84
0x45f4: nop 
0x45f6: nop word ptr cs:[rax+rax]
0x46ec: add rsp,0x20
0x46f0: mov r11,qword ptr [rsp+0x10]
0x46f5: cmp r11,rax
0x46f8: ja 0x4761
0x46fa: lea rsi,[rax+0x1]
0x46fe: lea rax,[rip+0x2079db]
0x4705: cmp r12,rax
0x4708: mov qword ptr [rbx],rsi
0x470b: je 0x471f
0x470d: mov rdi,r12
0x4710: mov qword ptr [rsp+0x10],rsi
0x4715: call 0x1430
0x471a: mov rsi,qword ptr [rsp+0x10]
0x471f: mov rdi,rsi
0x4722: mov qword ptr [rsp+0x10],rsi
0x4727: call 0x5970
0x472c: sub rsp,0x8
0x4730: mov qword ptr [rbx+0x8],rax
0x4734: mov r8d,dword ptr [rbp]
0x4738: push qword ptr [rbp+0x30]
0x473b: push qword ptr [rbp+0x28]
0x473e: mov rcx,r14
0x4741: push r15
0x4743: mov r9d,dword ptr [rsp+0x3c]
0x4748: mov rdi,rax
0x474b: mov rdx,qword ptr [rsp+0x28]
0x4750: mov rsi,qword ptr [rsp+0x30]
0x4755: mov r12,rax
0x4758: call 0x33c0
0x475d: add rsp,0x20
0x4761: mov eax,dword ptr [rsp+0x18]
0x4765: mov dword ptr [r13],eax
0x4769: add rsp,0x28
0x476d: mov rax,r12
0x4770: pop rbx
0x4771: pop rbp
0x4772: pop r12
0x4774: pop r13
0x4776: pop r14
0x4778: pop r15
0x477a: ret 
0x47a1: call 0x1440
0x47a6: call 0x5bc0
0x47ab: nop dword ptr [rax+rax]
0x47b0: push r12
0x47b2: push rbp
0x47b3: push rbx
0x47b4: mov rbx,rdi
0x47b7: call 0x1450
0x47bc: mov r12d,dword ptr [rax]
0x47bf: mov rbp,rax
0x47c2: lea rax,[rip+0x207a17]
0x47c9: test rbx,rbx
0x47cc: mov esi,0x38
0x47d1: cmove rbx,rax
0x47d5: mov rdi,rbx
0x47d8: call 0x5b70
0x47dd: mov dword ptr [rbp],r12d
0x47e1: pop rbx
0x47e2: pop rbp
0x47e3: pop r12
0x47e5: ret 
0x47f0: lea rax,[rip+0x2079e9]
0x47f7: test rdi,rdi
0x47fa: cmove rdi,rax
0x47fe: mov eax,dword ptr [rdi]
0x4800: ret 
0x4810: lea rax,[rip+0x2079c9]
0x4817: test rdi,rdi
0x481a: cmove rdi,rax
0x481e: mov dword ptr [rdi],esi
0x4820: ret 
0x4830: lea rax,[rip+0x2079a9]
0x4837: test rdi,rdi
0x483a: mov ecx,esi
0x483c: cmove rdi,rax
0x4840: mov eax,esi
0x4842: and ecx,0x1f
0x4845: shr al,0x5
0x4848: movzx eax,al
0x484b: lea rdi,[rdi+rax*4+0x8]
0x4850: mov esi,dword ptr [rdi]
0x4852: mov eax,esi
0x4854: shr eax,cl
0x4856: xor edx,eax
0x4858: and eax,0x1
0x485b: and edx,0x1
0x485e: shl edx,cl
0x4860: xor edx,esi
0x4862: mov dword ptr [rdi],edx
0x4864: ret 
0x4870: lea rax,[rip+0x207969]
0x4877: test rdi,rdi
0x487a: cmove rdi,rax
0x487e: mov eax,dword ptr [rdi+0x4]
0x4881: mov dword ptr [rdi+0x4],esi
0x4884: ret 
0x4890: lea rax,[rip+0x207949]
0x4897: test rdi,rdi
0x489a: cmove rdi,rax
0x489e: test rsi,rsi
0x48a1: mov dword ptr [rdi],0xa
0x48a7: je 0x48b7
0x48a9: test rdx,rdx
0x48ac: je 0x48b7
0x48ae: mov qword ptr [rdi+0x28],rsi
0x48b2: mov qword ptr [rdi+0x30],rdx
0x48b6: ret 
0x48b7: sub rsp,0x8
0x48bb: call 0x1440
0x48c0: push r15
0x48c2: push r14
0x48c4: lea rax,[rip+0x207915]
0x48cb: push r13
0x48cd: push r12
0x48cf: mov r13,rdi
0x48d2: push rbp
0x48d3: push rbx
0x48d4: mov rbx,r8
0x48d7: mov r14,rsi
0x48da: mov r15,rdx
0x48dd: sub rsp,0x18
0x48e1: test r8,r8
0x48e4: cmove rbx,rax
0x48e8: mov qword ptr [rsp+0x8],rcx
0x48ed: call 0x1450
0x48f2: mov r12d,dword ptr [rax]
0x48f5: mov rbp,rax
0x48f8: lea rax,[rbx+0x8]
0x48fc: sub rsp,0x8
0x4900: mov r9d,dword ptr [rbx+0x4]
0x4904: push qword ptr [rbx+0x30]
0x4907: mov r8d,dword ptr [rbx]
0x490a: push qword ptr [rbx+0x28]
0x490d: mov rdx,r15
0x4910: push rax
0x4911: mov rcx,qword ptr [rsp+0x28]
0x4916: mov rsi,r14
0x4919: mov rdi,r13
0x491c: call 0x33c0
0x4921: mov dword ptr [rbp],r12d
0x4925: add rsp,0x38
0x4929: pop rbx
0x492a: pop rbp
0x492b: pop r12
0x492d: pop r13
0x492f: pop r14
0x4931: pop r15
0x4933: ret 
0x4940: push r15
0x4942: push r14
0x4944: lea rax,[rip+0x207895]
0x494b: push r13
0x494d: push r12
0x494f: mov r12,rdx
0x4952: push rbp
0x4953: push rbx
0x4954: mov rbx,rcx
0x4957: mov r14,rdi
0x495a: mov r15,rsi
0x495d: sub rsp,0x38
0x4961: test rcx,rcx
0x4964: cmove rbx,rax
0x4968: xor ebp,ebp
0x496a: call 0x1450
0x496f: test r12,r12
0x4972: mov r13,rax
0x4975: mov eax,dword ptr [rax]
0x4977: sete bpl
0x497b: or ebp,dword ptr [rbx+0x4]
0x497e: lea r10,[rbx+0x8]
0x4982: sub rsp,0x8
0x4986: mov r8d,dword ptr [rbx]
0x4989: mov rcx,r15
0x498c: mov dword ptr [rsp+0x14],eax
0x4990: push qword ptr [rbx+0x30]
0x4993: mov rdx,r14
0x4996: push qword ptr [rbx+0x28]
0x4999: push r10
0x499b: xor esi,esi
0x499d: mov r9d,ebp
0x49a0: xor edi,edi
0x49a2: mov qword ptr [rsp+0x40],r10
0x49a7: call 0x33c0
0x49ac: lea rsi,[rax+0x1]
0x49b0: mov qword ptr [rsp+0x48],rax
0x49b5: add rsp,0x20
0x49b9: mov rdi,rsi
0x49bc: mov qword ptr [rsp+0x18],rsi
0x49c1: call 0x5970
0x49c6: mov qword ptr [rsp+0x10],rax
0x49cb: sub rsp,0x8
0x49cf: push qword ptr [rbx+0x30]
0x49d2: push qword ptr [rbx+0x28]
0x49d5: mov r10,qword ptr [rsp+0x38]
0x49da: mov r9d,ebp
0x49dd: mov r8d,dword ptr [rbx]
0x49e0: mov rcx,r15
0x49e3: mov rdx,r14
0x49e6: mov rdi,rax
0x49e9: push r10
0x49eb: mov rsi,qword ptr [rsp+0x38]
0x49f0: call 0x33c0
0x49f5: mov eax,dword ptr [rsp+0x2c]
0x49f9: add rsp,0x20
0x49fd: test r12,r12
0x4a00: mov dword ptr [r13],eax
0x4a04: je 0x4a0f
0x4a06: mov r11,qword ptr [rsp+0x28]
0x4a0b: mov qword ptr [r12],r11
0x4a0f: mov rax,qword ptr [rsp+0x10]
0x4a14: add rsp,0x38
0x4a18: pop rbx
0x4a19: pop rbp
0x4a1a: pop r12
0x4a1c: pop r13
0x4a1e: pop r14
0x4a20: pop r15
0x4a22: ret 
0x4a30: mov rcx,rdx
0x4a33: xor edx,edx
0x4a35: jmp 0x4940
0x4a40: mov eax,dword ptr [rip+0x207612]
0x4a46: push r12
0x4a48: mov r12,qword ptr [rip+0x207611]
0x4a4f: push rbp
0x4a50: push rbx
0x4a51: cmp eax,0x1
0x4a54: jle 0x4a81
0x4a56: sub eax,0x2
0x4a59: lea rbx,[r12+0x18]
0x4a5e: shl rax,0x4
0x4a62: lea rbp,[r12+rax+0x28]
0x4a67: nop word ptr [rax+rax]
0x4a70: mov rdi,qword ptr [rbx]
0x4a73: add rbx,0x10
0x4a77: call 0x1430
0x4a7c: cmp rbx,rbp
0x4a7f: jne 0x4a70
0x4a81: mov rdi,qword ptr [r12+0x8]
0x4a86: lea rbx,[rip+0x207653]
0x4a8d: cmp rdi,rbx
0x4a90: je 0x4aa9
0x4a92: call 0x1430
0x4a97: mov qword ptr [rip+0x2075ce],0x100
0x4aa2: mov qword ptr [rip+0x2075cf],rbx
0x4aa9: lea rbx,[rip+0x2075c0]
0x4ab0: cmp r12,rbx
0x4ab3: je 0x4ac4
0x4ab5: mov rdi,r12
0x4ab8: call 0x1430
0x4abd: mov qword ptr [rip+0x20759c],rbx
0x4ac4: pop rbx
0x4ac5: mov dword ptr [rip+0x207589],0x1
0x4acf: pop rbp
0x4ad0: pop r12
0x4ad2: ret 
0x4ae0: lea rcx,[rip+0x2076f9]
0x4ae7: mov rdx,-0x1
0x4aee: jmp 0x4600
0x4b00: lea rcx,[rip+0x2076d9]
0x4b07: jmp 0x4600
0x4b10: lea rcx,[rip+0x2076c9]
0x4b17: mov rsi,rdi
0x4b1a: mov rdx,-0x1
0x4b21: xor edi,edi
0x4b23: jmp 0x4600
0x4b30: lea rcx,[rip+0x2076a9]
0x4b37: mov rdx,rsi
0x4b3a: mov rsi,rdi
0x4b3d: xor edi,edi
0x4b3f: jmp 0x4600
0x4bbf: mov rcx,qword ptr [rsp+0x38]
0x4bc4: xor rcx,qword ptr fs:0x28
0x4bcd: jne 0x4bd9
0x4bcf: add rsp,0x48
0x4bd3: ret 
0x4bd4: call 0x1440
0x4bd9: call 0x1520
0x4bde: nop 
0x4be0: sub rsp,0x48
0x4be4: mov rax,rdx
0x4be7: mov rdx,rcx
0x4bea: mov rcx,qword ptr fs:0x28
0x4bf3: mov qword ptr [rsp+0x38],rcx
0x4bf8: xor ecx,ecx
0x4bfa: cmp esi,0xa
0x4bfd: je 0x4c60
0x4bff: mov dword ptr [rsp],esi
0x4c02: mov rcx,rsp
0x4c05: mov rsi,rax
0x4c08: mov qword ptr [rsp+0x4],0x0
0x4c11: mov qword ptr [rsp+0xc],0x0
0x4c1a: mov qword ptr [rsp+0x14],0x0
0x4c23: mov qword ptr [rsp+0x1c],0x0
0x4c2c: mov qword ptr [rsp+0x24],0x0
0x4c35: mov qword ptr [rsp+0x2c],0x0
0x4c3e: mov dword ptr [rsp+0x34],0x0
0x4c46: call 0x4600
0x4c4b: mov rdx,qword ptr [rsp+0x38]
0x4c50: xor rdx,qword ptr fs:0x28
0x4c59: jne 0x4c65
0x4c5b: add rsp,0x48
0x4c5f: ret 
0x4c60: call 0x1440
0x4c65: call 0x1520
0x4c6a: nop word ptr [rax+rax]
0x4c80: mov rcx,rdx
0x4c83: mov rdx,rsi
0x4c86: mov esi,edi
0x4c88: xor edi,edi
0x4c8a: jmp 0x4be0
0x4c90: sub rsp,0x48
0x4c94: mov ecx,edx
0x4c96: mov rax,qword ptr fs:0x28
0x4c9f: mov qword ptr [rsp+0x38],rax
0x4ca4: xor eax,eax
0x4ca6: mov rax,qword ptr [rip+0x207563]
0x4cad: mov r8,rsp
0x4cb0: and ecx,0x1f
0x4cb3: movdqa xmm0,[rip+0x207525]
0x4cbb: mov qword ptr [rsp+0x30],rax
0x4cc0: mov eax,edx
0x4cc2: movaps [rsp],xmm0
0x4cc6: shr al,0x5
0x4cc9: movzx eax,al
0x4ccc: lea r9,[r8+rax*4+0x8]
0x4cd1: movdqa xmm0,[rip+0x207517]
0x4cd9: movaps [rsp+0x10],xmm0
0x4cde: movdqa xmm0,[rip+0x20751a]
0x4ce6: movaps [rsp+0x20],xmm0
0x4ceb: mov edx,dword ptr [r9]
0x4cee: mov eax,edx
0x4cf0: shr eax,cl
0x4cf2: not eax
0x4cf4: and eax,0x1
0x4cf7: shl eax,cl
0x4cf9: mov rcx,r8
0x4cfc: xor eax,edx
0x4cfe: mov rdx,rsi
0x4d01: mov rsi,rdi
0x4d04: mov dword ptr [r9],eax
0x4d07: xor edi,edi
0x4d09: call 0x4600
0x4d0e: mov rsi,qword ptr [rsp+0x38]
0x4d13: xor rsi,qword ptr fs:0x28
0x4d1c: jne 0x4d23
0x4d1e: add rsp,0x48
0x4d22: ret 
0x4d23: call 0x1520
0x4d28: nop dword ptr [rax+rax]
0x4d30: movsx edx,sil
0x4d34: mov rsi,-0x1
0x4d3b: jmp 0x4c90
0x4d40: mov edx,0x3a
0x4d45: mov rsi,-0x1
0x4d4c: jmp 0x4c90
0x4d60: mov edx,0x3a
0x4d65: jmp 0x4c90
0x4d70: sub rsp,0x48
0x4d74: mov rax,rdx
0x4d77: mov rdx,qword ptr fs:0x28
0x4d80: mov qword ptr [rsp+0x38],rdx
0x4d85: xor edx,edx
0x4d87: cmp esi,0xa
0x4d8a: je 0x4df4
0x4d8c: mov dword ptr [rsp],esi
0x4d8f: mov rcx,rsp
0x4d92: mov rdx,-0x1
0x4d99: mov rsi,rax
0x4d9c: mov qword ptr [rsp+0x4],0x0
0x4da5: mov qword ptr [rsp+0xc],0x4000000
0x4dae: mov qword ptr [rsp+0x14],0x0
0x4db7: mov qword ptr [rsp+0x1c],0x0
0x4dc0: mov qword ptr [rsp+0x24],0x0
0x4dc9: mov qword ptr [rsp+0x2c],0x0
0x4dd2: mov dword ptr [rsp+0x34],0x0
0x4dda: call 0x4600
0x4ddf: mov rcx,qword ptr [rsp+0x38]
0x4de4: xor rcx,qword ptr fs:0x28
0x4ded: jne 0x4df9
0x4def: add rsp,0x48
0x4df3: ret 
0x4df4: call 0x1440
0x4df9: call 0x1520
0x4dfe: nop 
0x4e00: sub rsp,0x48
0x4e04: mov r9,rcx
0x4e07: mov rcx,qword ptr [rip+0x207402]
0x4e0e: movdqa xmm0,[rip+0x2073ca]
0x4e16: mov rax,qword ptr fs:0x28
0x4e1f: mov qword ptr [rsp+0x38],rax
0x4e24: xor eax,eax
0x4e26: movaps [rsp],xmm0
0x4e2a: test rsi,rsi
0x4e2d: mov qword ptr [rsp+0x30],rcx
0x4e32: mov dword ptr [rsp],0xa
0x4e39: movdqa xmm0,[rip+0x2073af]
0x4e41: movaps [rsp+0x10],xmm0
0x4e46: movdqa xmm0,[rip+0x2073b2]
0x4e4e: movaps [rsp+0x20],xmm0
0x4e53: je 0x4e87
0x4e55: test rdx,rdx
0x4e58: je 0x4e87
0x4e5a: mov qword ptr [rsp+0x28],rsi
0x4e5f: mov qword ptr [rsp+0x30],rdx
0x4e64: mov rcx,rsp
0x4e67: mov rdx,r8
0x4e6a: mov rsi,r9
0x4e6d: call 0x4600
0x4e72: mov rdi,qword ptr [rsp+0x38]
0x4e77: xor rdi,qword ptr fs:0x28
0x4e80: jne 0x4e8c
0x4e82: add rsp,0x48
0x4e86: ret 
0x4e87: call 0x1440
0x4e8c: call 0x1520
0x4e91: nop dword ptr [rax+rax]
0x4e96: nop word ptr cs:[rax+rax]
0x4ea0: mov r8,-0x1
0x4ea7: jmp 0x4e00
0x4eb0: mov rcx,rdx
0x4eb3: mov r8,-0x1
0x4eba: mov rdx,rsi
0x4ebd: mov rsi,rdi
0x4ec0: xor edi,edi
0x4ec2: jmp 0x4e00
0x4ed0: mov r8,rcx
0x4ed3: mov rcx,rdx
0x4ed6: mov rdx,rsi
0x4ed9: mov rsi,rdi
0x4edc: xor edi,edi
0x4ede: jmp 0x4e00
0x4ef0: lea rcx,[rip+0x207129]
0x4ef7: jmp 0x4600
0x4f00: lea rcx,[rip+0x207119]
0x4f07: mov rdx,rsi
0x4f0a: mov rsi,rdi
0x4f0d: xor edi,edi
0x4f0f: jmp 0x4600
0x4f20: lea rcx,[rip+0x2070f9]
0x4f27: mov rdx,-0x1
0x4f2e: jmp 0x4600
0x4fd0: push rbp
0x4fd1: push rbx
0x4fd2: mov edx,0x5
0x4fd7: mov ebx,edi
0x4fd9: sub rsp,0x8
0x4fdd: test rsi,rsi
0x4fe0: je 0x5028
0x4fe2: xor edi,edi
0x4fe4: call 0x14f0
0x4fe9: lea rsi,[rip+0x4498]
0x4ff0: mov rbp,rax
0x4ff3: mov edx,0x5
0x4ff8: xor edi,edi
0x4ffa: call 0x14f0
0x4fff: mov r8,rbp
0x5002: mov ecx,ebx
0x5004: mov rdx,rax
0x5007: xor esi,esi
0x5009: xor eax,eax
0x500b: mov edi,0x1
0x5010: call 0x16b0
0x5015: add rsp,0x8
0x5019: mov rax,-0x1
0x5020: pop rbx
0x5021: pop rbp
0x5022: ret 
0x5028: lea rsi,[rip+0x4429]
0x502f: xor edi,edi
0x5031: call 0x14f0
0x5036: mov ecx,ebx
0x5038: mov rdx,rax
0x503b: xor esi,esi
0x503d: xor eax,eax
0x503f: mov edi,0x1
0x5044: call 0x16b0
0x5049: add rsp,0x8
0x504d: mov rax,-0x1
0x5054: pop rbx
0x5055: pop rbp
0x5056: ret 
0x5267: call 0x1520
0x526c: nop dword ptr [rax]
0x5488: mov r8,rcx
0x548b: mov rcx,rdx
0x548e: lea rdx,[rip+0x4030]
0x5495: mov esi,0x1
0x549a: xor eax,eax
0x549c: call 0x1700
0x54a1: jmp 0x538c
0x569d: push r12
0x569f: push r15
0x56a1: push r14
0x56a3: mov r8,qword ptr [rsp+0x20]
0x56a8: mov rcx,rbx
0x56ab: mov rdx,rax
0x56ae: mov rdi,rbp
0x56b1: mov esi,0x1
0x56b6: xor eax,eax
0x56b8: call 0x1700
0x56bd: add rsp,0x20
0x56c1: add rsp,0x28
0x56c5: pop rbx
0x56c6: pop rbp
0x56c7: pop r12
0x56c9: pop r13
0x56cb: pop r14
0x56cd: pop r15
0x56cf: ret 
0x5709: push r12
0x570b: push r15
0x570d: push r14
0x570f: mov r9,qword ptr [rsp+0x28]
0x5714: jmp 0x56a3
0x5770: xor r9d,r9d
0x5773: cmp qword ptr [r8],0x0
0x5777: je 0x578b
0x5779: nop dword ptr [rax]
0x5780: add r9,0x1
0x5784: cmp qword ptr [r8+r9*8],0x0
0x5789: jne 0x5780
0x578b: jmp 0x5350
0x5790: sub rsp,0x68
0x5794: mov r10,r8
0x5797: xor r9d,r9d
0x579a: mov rax,qword ptr fs:0x28
0x57a3: mov qword ptr [rsp+0x58],rax
0x57a8: xor eax,eax
0x57aa: mov r8,rsp
0x57ad: nop dword ptr [rax]
0x57b0: mov eax,dword ptr [r10]
0x57b3: cmp eax,0x2f
0x57b6: ja 0x57fa
0x57b8: mov r11d,eax
0x57bb: add r11,qword ptr [r10+0x10]
0x57bf: add eax,0x8
0x57c2: mov dword ptr [r10],eax
0x57c5: mov rax,qword ptr [r11]
0x57c8: test rax,rax
0x57cb: mov qword ptr [r8+r9*8],rax
0x57cf: je 0x57db
0x57d1: add r9,0x1
0x57d5: cmp r9,0xa
0x57d9: jne 0x57b0
0x57db: call 0x5350
0x57e0: mov rax,qword ptr [rsp+0x58]
0x57e5: xor rax,qword ptr fs:0x28
0x57ee: jne 0x57f5
0x57f0: add rsp,0x68
0x57f4: ret 
0x57f5: call 0x1520
0x57fa: mov r11,qword ptr [r10+0x8]
0x57fe: lea rax,[r11+0x8]
0x5802: mov qword ptr [r10+0x8],rax
0x5806: jmp 0x57c5
0x58d0: call 0x1520
0x58dc: mov rax,rbx
0x58df: add rbx,0x8
0x58e3: jmp 0x5896
0x58f0: push rbx
0x58f1: lea rsi,[rip+0x3c1b]
0x58f8: mov edx,0x5
0x58fd: xor edi,edi
0x58ff: call 0x14f0
0x5904: lea rdx,[rip+0x3c1d]
0x590b: mov rsi,rax
0x590e: mov edi,0x1
0x5913: xor eax,eax
0x5915: call 0x1680
0x591a: lea rsi,[rip+0x3c1d]
0x5921: mov edx,0x5
0x5926: xor edi,edi
0x5928: call 0x14f0
0x592d: lea rcx,[rip+0x314c]
0x5934: lea rdx,[rip+0x32f0]
0x593b: mov rsi,rax
0x593e: mov edi,0x1
0x5943: xor eax,eax
0x5945: call 0x1680
0x594a: mov rbx,qword ptr [rip+0x206737]
0x5951: lea rsi,[rip+0x3e18]
0x5958: xor edi,edi
0x595a: mov edx,0x5
0x595f: call 0x14f0
0x5964: mov rsi,rbx
0x5967: mov rdi,rax
0x596a: pop rbx
0x596b: jmp 0x15c0
0x598a: nop word ptr [rax+rax]
0x5990: mov rax,rdi
0x5993: mul rsi
0x5996: mov rdi,rax
0x5999: seto al
0x599c: test rdi,rdi
0x599f: js 0x59ab
0x59a1: movzx eax,al
0x59a4: test rax,rax
0x59a7: jne 0x59ab
0x59a9: jmp 0x5970
0x59ab: sub rsp,0x8
0x59af: call 0x5bc0
0x59b4: nop 
0x59b6: nop word ptr cs:[rax+rax]
0x59c0: jmp 0x5970
0x59d9: test rdi,rdi
0x59dc: jne 0x59f8
0x59f8: call 0x1430
0x59fd: xor eax,eax
0x59ff: pop rbx
0x5a00: ret 
0x5a06: nop word ptr cs:[rax+rax]
0x5a10: mov rax,rsi
0x5a13: mul rdx
0x5a16: mov rsi,rax
0x5a19: seto al
0x5a1c: test rsi,rsi
0x5a1f: js 0x5a2b
0x5a21: movzx eax,al
0x5a24: test rax,rax
0x5a27: jne 0x5a2b
0x5a29: jmp 0x59d0
0x5a2b: sub rsp,0x8
0x5a2f: call 0x5bc0
0x5a34: nop 
0x5a36: nop word ptr cs:[rax+rax]
0x5a40: test rdi,rdi
0x5a43: mov r9,rdx
0x5a46: mov rcx,qword ptr [rsi]
0x5a49: je 0x5a80
0x5a4b: xor edx,edx
0x5a4d: movabsq rax,0x5555555555555554
0x5a57: div r9
0x5a5a: cmp rax,rcx
0x5a5d: jbe 0x5a9b
0x5a5f: mov rax,rcx
0x5a62: shr rax, 1
0x5a65: lea rcx,[rax+rcx+0x1]
0x5a6a: mov qword ptr [rsi],rcx
0x5a6d: imul rcx,r9
0x5a71: mov rsi,rcx
0x5a74: jmp 0x59d0
0x5a80: test rcx,rcx
0x5a83: je 0x5aa8
0x5a85: mov rax,rcx
0x5a88: mul r9
0x5a8b: seto dl
0x5a8e: test rax,rax
0x5a91: movzx edx,dl
0x5a94: js 0x5a9b
0x5a96: test rdx,rdx
0x5a99: je 0x5a6a
0x5a9b: sub rsp,0x8
0x5a9f: call 0x5bc0
0x5aa4: nop dword ptr [rax]
0x5aa8: xor edx,edx
0x5aaa: mov eax,0x80
0x5aaf: xor r8d,r8d
0x5ab2: div r9
0x5ab5: test rax,rax
0x5ab8: sete r8b
0x5abc: lea rcx,[r8+rax]
0x5ac0: jmp 0x5a85
0x5ad0: test rdi,rdi
0x5ad3: mov rax,qword ptr [rsi]
0x5ad6: je 0x5b00
0x5ad8: movabsq rdx,0x5555555555555553
0x5ae2: cmp rax,rdx
0x5ae5: ja 0x5b11
0x5ae7: mov rdx,rax
0x5aea: shr rdx, 1
0x5aed: lea rax,[rdx+rax+0x1]
0x5af2: mov qword ptr [rsi],rax
0x5af5: mov rsi,rax
0x5af8: jmp 0x59d0
0x5b00: test rax,rax
0x5b03: mov edx,0x80
0x5b08: cmove rax,rdx
0x5b0c: test rax,rax
0x5b0f: jns 0x5af2
0x5b11: sub rsp,0x8
0x5b15: call 0x5bc0
0x5b1a: nop word ptr [rax+rax]
0x5b20: push rbx
0x5b21: mov rbx,rdi
0x5b24: call 0x5970
0x5b29: mov rdx,rbx
0x5b2c: xor esi,esi
0x5b2e: mov rdi,rax
0x5b31: pop rbx
0x5b32: jmp 0x15a0
0x5b40: mov rax,rdi
0x5b43: sub rsp,0x8
0x5b47: mul rsi
0x5b4a: seto dl
0x5b4d: test rax,rax
0x5b50: js 0x5b69
0x5b52: movzx edx,dl
0x5b55: test rdx,rdx
0x5b58: jne 0x5b69
0x5b5a: call 0x15d0
0x5b5f: test rax,rax
0x5b62: je 0x5b69
0x5b64: add rsp,0x8
0x5b68: ret 
0x5b69: call 0x5bc0
0x5b6e: nop 
0x5b70: push rbp
0x5b71: push rbx
0x5b72: mov rbp,rdi
0x5b75: mov rdi,rsi
0x5b78: mov rbx,rsi
0x5b7b: sub rsp,0x8
0x5b7f: call 0x5970
0x5b84: add rsp,0x8
0x5b88: mov rdx,rbx
0x5b8b: mov rsi,rbp
0x5b8e: pop rbx
0x5b8f: pop rbp
0x5b90: mov rdi,rax
0x5b93: jmp 0x15f0
0x5ba0: push rbx
0x5ba1: mov rbx,rdi
0x5ba4: call 0x1510
0x5ba9: mov rdi,rbx
0x5bac: lea rsi,[rax+0x1]
0x5bb0: pop rbx
0x5bb1: jmp 0x5b70
0x5bf0: call 0x1440
0x5bf5: nop word ptr cs:[rax+rax]
0x5bff: nop 
0x5c00: push rbp
0x5c01: push rbx
0x5c02: sub rsp,0x8
0x5c06: call 0x5fd0
0x5c0b: test eax,eax
0x5c0d: mov ebx,eax
0x5c0f: js 0x5c20
0x5c11: add rsp,0x8
0x5c15: mov eax,ebx
0x5c17: pop rbx
0x5c18: pop rbp
0x5c19: ret 
0x5c20: mov rdi,qword ptr [rip+0x206461]
0x5c27: call 0x14a0
0x5c2c: test eax,eax
0x5c2e: jne 0x5c11
0x5c30: lea rsi,[rip+0x3be9]
0x5c37: xor edi,edi
0x5c39: mov edx,0x5
0x5c3e: call 0x14f0
0x5c43: mov rbp,rax
0x5c46: call 0x1450
0x5c4b: mov edi,dword ptr [rip+0x2063c7]
0x5c51: mov esi,dword ptr [rax]
0x5c53: mov rdx,rbp
0x5c56: xor eax,eax
0x5c58: call 0x16b0
0x5c5d: jmp 0x5c11
0x5c60: sub rsp,0xd8
0x5c67: test al,al
0x5c69: mov qword ptr [rsp+0x28],rsi
0x5c6e: mov qword ptr [rsp+0x30],rdx
0x5c73: mov qword ptr [rsp+0x38],rcx
0x5c78: mov qword ptr [rsp+0x40],r8
0x5c7d: mov qword ptr [rsp+0x48],r9
0x5c82: je 0x5cbb
0x5c84: movaps [rsp+0x50],xmm0
0x5c89: movaps [rsp+0x60],xmm1
0x5c8e: movaps [rsp+0x70],xmm2
0x5c93: movaps [rsp+0x80],xmm3
0x5c9b: movaps [rsp+0x90],xmm4
0x5ca3: movaps [rsp+0xa0],xmm5
0x5cab: movaps [rsp+0xb0],xmm6
0x5cb3: movaps [rsp+0xc0],xmm7
0x5cbb: mov rax,qword ptr fs:0x28
0x5cc4: mov qword ptr [rsp+0x18],rax
0x5cc9: xor eax,eax
0x5ccb: lea rax,[rsp+0xe0]
0x5cd3: mov rsi,rsp
0x5cd6: mov qword ptr [rsp+0x8],rax
0x5cdb: lea rax,[rsp+0x20]
0x5ce0: mov dword ptr [rsp],0x8
0x5ce7: mov dword ptr [rsp+0x4],0x30
0x5cef: mov qword ptr [rsp+0x10],rax
0x5cf4: call 0x5c00
0x5cf9: mov rdx,qword ptr [rsp+0x18]
0x5cfe: xor rdx,qword ptr fs:0x28
0x5d07: jne 0x5d11
0x5d09: add rsp,0xd8
0x5d10: ret 
0x5d11: call 0x1520
0x5d16: nop word ptr cs:[rax+rax]
0x5d20: push rbp
0x5d21: push rbx
0x5d22: mov rbp,rdi
0x5d25: sub rsp,0x8
0x5d29: call 0x5ed0
0x5d2e: test eax,eax
0x5d30: mov ebx,eax
0x5d32: js 0x5d40
0x5d34: add rsp,0x8
0x5d38: mov eax,ebx
0x5d3a: pop rbx
0x5d3b: pop rbp
0x5d3c: ret 
0x5d40: mov rdi,rbp
0x5d43: call 0x14a0
0x5d48: test eax,eax
0x5d4a: jne 0x5d34
0x5d4c: lea rsi,[rip+0x3acd]
0x5d53: xor edi,edi
0x5d55: mov edx,0x5
0x5d5a: call 0x14f0
0x5d5f: mov rbp,rax
0x5d62: call 0x1450
0x5d67: mov edi,dword ptr [rip+0x2062ab]
0x5d6d: mov esi,dword ptr [rax]
0x5d6f: mov rdx,rbp
0x5d72: xor eax,eax
0x5d74: call 0x16b0
0x5d79: jmp 0x5d34
0x5d80: sub rsp,0xd8
0x5d87: test al,al
0x5d89: mov qword ptr [rsp+0x30],rdx
0x5d8e: mov qword ptr [rsp+0x38],rcx
0x5d93: mov qword ptr [rsp+0x40],r8
0x5d98: mov qword ptr [rsp+0x48],r9
0x5d9d: je 0x5dd6
0x5d9f: movaps [rsp+0x50],xmm0
0x5da4: movaps [rsp+0x60],xmm1
0x5da9: movaps [rsp+0x70],xmm2
0x5dae: movaps [rsp+0x80],xmm3
0x5db6: movaps [rsp+0x90],xmm4
0x5dbe: movaps [rsp+0xa0],xmm5
0x5dc6: movaps [rsp+0xb0],xmm6
0x5dce: movaps [rsp+0xc0],xmm7
0x5dd6: mov rax,qword ptr fs:0x28
0x5ddf: mov qword ptr [rsp+0x18],rax
0x5de4: xor eax,eax
0x5de6: lea rax,[rsp+0xe0]
0x5dee: mov rdx,rsp
0x5df1: mov qword ptr [rsp+0x8],rax
0x5df6: lea rax,[rsp+0x20]
0x5dfb: mov dword ptr [rsp],0x10
0x5e02: mov dword ptr [rsp+0x4],0x30
0x5e0a: mov qword ptr [rsp+0x10],rax
0x5e0f: call 0x5d20
0x5e14: mov rcx,qword ptr [rsp+0x18]
0x5e19: xor rcx,qword ptr fs:0x28
0x5e22: jne 0x5e2c
0x5e24: add rsp,0xd8
0x5e2b: ret 
0x5e2c: call 0x1520
0x5e31: nop word ptr cs:[rax+rax]
0x5e3b: nop dword ptr [rax+rax]
0x5e40: push r13
0x5e42: push r12
0x5e44: mov r13,rsi
0x5e47: push rbp
0x5e48: push rbx
0x5e49: mov rbx,rdi
0x5e4c: mov r12,rdx
0x5e4f: sub rsp,0x18
0x5e53: mov rax,qword ptr fs:0x28
0x5e5c: mov qword ptr [rsp+0x8],rax
0x5e61: xor eax,eax
0x5e63: lea rax,[rsp+0x4]
0x5e68: test rdi,rdi
0x5e6b: cmove rbx,rax
0x5e6f: mov rdi,rbx
0x5e72: call 0x1530
0x5e77: cmp rax,-0x3
0x5e7b: mov rbp,rax
0x5e7e: jbe 0x5ea0
0x5e80: test r12,r12
0x5e83: je 0x5ea0
0x5e85: xor edi,edi
0x5e87: call 0x6130
0x5e8c: test al,al
0x5e8e: jne 0x5ea0
0x5e90: movzx eax,byte ptr [r13]
0x5e95: mov ebp,0x1
0x5e9a: mov dword ptr [rbx],eax
0x5e9c: nop dword ptr [rax]
0x5ea0: mov rdx,qword ptr [rsp+0x8]
0x5ea5: xor rdx,qword ptr fs:0x28
0x5eae: mov rax,rbp
0x5eb1: jne 0x5ebe
0x5eb3: add rsp,0x18
0x5eb7: pop rbx
0x5eb8: pop rbp
0x5eb9: pop r12
0x5ebb: pop r13
0x5ebd: ret 
0x5ebe: call 0x1520
0x5ec3: nop word ptr cs:[rax+rax]
0x5ecd: nop dword ptr [rax]
0x5ed0: push r13
0x5ed2: push r12
0x5ed4: mov rax,rsi
0x5ed7: push rbp
0x5ed8: push rbx
0x5ed9: mov r13,rdi
0x5edc: sub rsp,0x7f8
0x5ee3: lea r12,[rsp+0x10]
0x5ee8: lea rsi,[rsp+0x8]
0x5eed: mov qword ptr [rsp+0x8],0x7d0
0x5ef6: mov rcx,qword ptr fs:0x28
0x5eff: mov qword ptr [rsp+0x7e8],rcx
0x5f07: xor ecx,ecx
0x5f09: mov rdi,r12
0x5f0c: mov rcx,rdx
0x5f0f: mov rdx,rax
0x5f12: call 0x6300
0x5f17: test rax,rax
0x5f1a: mov rbx,qword ptr [rsp+0x8]
0x5f1f: je 0x5fae
0x5f25: mov rcx,r13
0x5f28: mov rdx,rbx
0x5f2b: mov esi,0x1
0x5f30: mov rdi,rax
0x5f33: mov rbp,rax
0x5f36: call 0x16f0
0x5f3b: cmp rax,rbx
0x5f3e: jb 0x5f80
0x5f40: cmp rbp,r12
0x5f43: je 0x5f4d
0x5f45: mov rdi,rbp
0x5f48: call 0x1430
0x5f4d: cmp rbx,0x7fffffff
0x5f54: ja 0x5fa3
0x5f56: mov rcx,qword ptr [rsp+0x7e8]
0x5f5e: xor rcx,qword ptr fs:0x28
0x5f67: mov eax,ebx
0x5f69: jne 0x5fbd
0x5f6b: add rsp,0x7f8
0x5f72: pop rbx
0x5f73: pop rbp
0x5f74: pop r12
0x5f76: pop r13
0x5f78: ret 
0x5f80: cmp rbp,r12
0x5f83: mov ebx,0xffffffff
0x5f88: je 0x5f56
0x5f8a: call 0x1450
0x5f8f: mov r13d,dword ptr [rax]
0x5f92: mov r12,rax
0x5f95: mov rdi,rbp
0x5f98: call 0x1430
0x5f9d: mov dword ptr [r12],r13d
0x5fa1: jmp 0x5f56
0x5fa3: call 0x1450
0x5fa8: mov dword ptr [rax],0x4b
0x5fae: mov rdi,r13
0x5fb1: mov ebx,0xffffffff
0x5fb6: call 0x62f0
0x5fbb: jmp 0x5f56
0x5fbd: call 0x1520
0x5fc2: nop word ptr cs:[rax+rax]
0x5fcc: nop dword ptr [rax]
0x5fd0: mov rdx,rsi
0x5fd3: mov rsi,rdi
0x5fd6: mov rdi,qword ptr [rip+0x2060ab]
0x5fdd: jmp 0x5ed0
0x5ff0: push r12
0x5ff2: push rbp
0x5ff3: mov rbp,rdi
0x5ff6: push rbx
0x5ff7: mov rbx,rsi
0x5ffa: sub rsp,0x10
0x5ffe: mov rax,qword ptr [rip+0x206223]
0x6005: test rax,rax
0x6008: je 0x6080
0x600a: mov rdi,qword ptr [rip+0x206217]
0x6011: test rdi,rdi
0x6014: je 0x6060
0x6016: call 0x1610
0x601b: test rax,rax
0x601e: mov r12,rax
0x6021: je 0x6060
0x6023: mov rsi,rbx
0x6026: mov rdi,rbp
0x6029: call 0x16a0
0x602e: fstpt [rsp]
0x6031: call 0x1450
0x6036: mov rdi,r12
0x6039: mov rbx,rax
0x603c: mov ebp,dword ptr [rax]
0x603e: call 0x1610
0x6043: test rax,rax
0x6046: fldt [rsp]
0x6049: je 0x609f
0x604b: mov dword ptr [rbx],ebp
0x604d: add rsp,0x10
0x6051: pop rbx
0x6052: pop rbp
0x6053: pop r12
0x6055: ret 
0x6060: test rbx,rbx
0x6063: jne 0x6070
0x6065: add rsp,0x10
0x6069: fldz 
0x606b: pop rbx
0x606c: pop rbp
0x606d: pop r12
0x606f: ret 
0x6070: mov qword ptr [rbx],rbp
0x6073: add rsp,0x10
0x6077: fldz 
0x6079: pop rbx
0x607a: pop rbp
0x607b: pop r12
0x607d: ret 
0x6080: lea rsi,[rip+0x37b9]
0x6087: xor edx,edx
0x6089: mov edi,0x1fbf
0x608e: call 0x1550
0x6093: mov qword ptr [rip+0x20618e],rax
0x609a: jmp 0x600a
0x609f: fstp [0+st]
0x60a1: call 0x1440
0x60a6: nop word ptr cs:[rax+rax]
0x60b0: push r12
0x60b2: push rbp
0x60b3: mov rbp,rdi
0x60b6: push rbx
0x60b7: call 0x1480
0x60bc: mov ebx,dword ptr [rbp]
0x60bf: mov rdi,rbp
0x60c2: mov r12,rax
0x60c5: call 0x61d0
0x60ca: and ebx,0x20
0x60cd: test ebx,ebx
0x60cf: jne 0x60e8
0x60d1: test eax,eax
0x60d3: je 0x60df
0x60d5: test r12,r12
0x60d8: mov eax,0xffffffff
0x60dd: je 0x6118
0x60df: pop rbx
0x60e0: pop rbp
0x60e1: pop r12
0x60e3: ret 
0x60e8: test eax,eax
0x60ea: jne 0x6108
0x60ec: call 0x1450
0x60f1: mov dword ptr [rax],0x0
0x60f7: mov eax,0xffffffff
0x60fc: pop rbx
0x60fd: pop rbp
0x60fe: pop r12
0x6100: ret 
0x6108: pop rbx
0x6109: mov eax,0xffffffff
0x610e: pop rbp
0x610f: pop r12
0x6111: ret 
0x6118: call 0x1450
0x611d: cmp dword ptr [rax],0x9
0x6120: pop rbx
0x6121: pop rbp
0x6122: pop r12
0x6124: setne al
0x6127: movzx eax,al
0x612a: neg eax
0x612c: ret 
0x6130: sub rsp,0x8
0x6134: xor esi,esi
0x6136: call 0x1670
0x613b: mov rdx,rax
0x613e: mov eax,0x1
0x6143: test rdx,rdx
0x6146: je 0x6165
0x6148: lea rdi,[rip+0x36f1]
0x614f: mov ecx,0x2
0x6154: mov rsi,rdx
0x6157: rep cmpsb [rsi],es:[rdi]
0x6159: seta cl
0x615c: sbb cl,0x0
0x615f: xor eax,eax
0x6161: test cl,cl
0x6163: jne 0x6170
0x6165: add rsp,0x8
0x6169: ret 
0x6170: lea rdi,[rip+0x36cb]
0x6177: mov ecx,0x6
0x617c: mov rsi,rdx
0x617f: rep cmpsb [rsi],es:[rdi]
0x6181: seta al
0x6184: sbb al,0x0
0x6186: test al,al
0x6188: setne al
0x618b: add rsp,0x8
0x618f: ret 
0x61d0: push r12
0x61d2: push rbp
0x61d3: push rbx
0x61d4: mov rbx,rdi
0x61d7: call 0x1600
0x61dc: test eax,eax
0x61de: mov rdi,rbx
0x61e1: js 0x6237
0x61e3: call 0x1650
0x61e8: test eax,eax
0x61ea: jne 0x6218
0x61ec: mov rdi,rbx
0x61ef: call 0x6250
0x61f4: test eax,eax
0x61f6: je 0x6234
0x61f8: call 0x1450
0x61fd: mov r12d,dword ptr [rax]
0x6200: mov rdi,rbx
0x6203: mov rbp,rax
0x6206: call 0x14d0
0x620b: test r12d,r12d
0x620e: jne 0x6240
0x6210: pop rbx
0x6211: pop rbp
0x6212: pop r12
0x6214: ret 
0x6218: mov rdi,rbx
0x621b: call 0x1600
0x6220: xor esi,esi
0x6222: mov edx,0x1
0x6227: mov edi,eax
0x6229: call 0x1580
0x622e: cmp rax,-0x1
0x6232: jne 0x61ec
0x6234: mov rdi,rbx
0x6237: pop rbx
0x6238: pop rbp
0x6239: pop r12
0x623b: jmp 0x14d0
0x6240: mov dword ptr [rbp],r12d
0x6244: mov eax,0xffffffff
0x6249: jmp 0x6210
0x6250: test rdi,rdi
0x6253: push rbx
0x6254: mov rbx,rdi
0x6257: je 0x626a
0x6259: call 0x1650
0x625e: test eax,eax
0x6260: je 0x626a
0x6262: test dword ptr [rbx],0x100
0x6268: jne 0x6278
0x626a: mov rdi,rbx
0x626d: pop rbx
0x626e: jmp 0x1630
0x6278: mov rdi,rbx
0x627b: mov edx,0x1
0x6280: xor esi,esi
0x6282: call 0x6290
0x6287: mov rdi,rbx
0x628a: pop rbx
0x628b: jmp 0x1630
0x6290: mov rax,qword ptr [rdi+0x8]
0x6294: cmp qword ptr [rdi+0x10],rax
0x6298: je 0x62a0
0x629a: jmp 0x16c0
0x62a0: mov rax,qword ptr [rdi+0x20]
0x62a4: cmp qword ptr [rdi+0x28],rax
0x62a8: jne 0x629a
0x62aa: cmp qword ptr [rdi+0x48],0x0
0x62af: jne 0x629a
0x62b1: push r12
0x62b3: push rbp
0x62b4: mov r12d,edx
0x62b7: push rbx
0x62b8: mov rbp,rsi
0x62bb: mov rbx,rdi
0x62be: call 0x1600
0x62c3: mov edx,r12d
0x62c6: mov rsi,rbp
0x62c9: mov edi,eax
0x62cb: call 0x1580
0x62d0: cmp rax,-0x1
0x62d4: je 0x62e2
0x62d6: and dword ptr [rbx],-0x11
0x62d9: mov qword ptr [rbx+0x90],rax
0x62e0: xor eax,eax
0x62e2: pop rbx
0x62e3: pop rbp
0x62e4: pop r12
0x62e6: ret 
0x62f0: or dword ptr [rdi],0x20
0x62f3: ret 
0x6300: push rbp
0x6301: mov rbp,rsp
0x6304: push r15
0x6306: push r14
0x6308: push r13
0x630a: push r12
0x630c: lea r14,[rbp-0x3b0]
0x6313: push rbx
0x6314: mov rbx,rdx
0x6317: mov r12,rcx
0x631a: mov rdx,r14
0x631d: sub rsp,0x408
0x6324: mov qword ptr [rbp-0x418],rsi
0x632b: lea rsi,[rbp-0x2c0]
0x6332: mov qword ptr [rbp-0x3e8],rdi
0x6339: mov rdi,rbx
0x633c: mov qword ptr [rbp-0x410],r14
0x6343: mov rax,qword ptr fs:0x28
0x634c: mov qword ptr [rbp-0x38],rax
0x6350: xor eax,eax
0x6352: mov qword ptr [rbp-0x408],rsi
0x6359: call 0x7620
0x635e: test eax,eax
0x6360: js 0x71c8
0x6366: mov rsi,r14
0x6369: mov rdi,r12
0x636c: call 0x7420
0x6371: test eax,eax
0x6373: js 0x7230
0x6379: mov rax,qword ptr [rbp-0x2b0]
0x6380: mov rdx,-0x1
0x6387: add rax,0x7
0x638b: cmp rax,0x6
0x638f: cmovbe rax,rdx
0x6393: add rax,qword ptr [rbp-0x2a8]
0x639a: jb 0x6dc8
0x63a0: mov rdi,rax
0x63a3: xor r8d,r8d
0x63a6: add rdi,0x6
0x63aa: setb r8b
0x63ae: jb 0x6dc8
0x63b4: cmp rdi,0xf9f
0x63bb: jbe 0x6508
0x63c1: cmp rdi,-0x1
0x63c5: mov qword ptr [rbp-0x3c8],r8
0x63cc: je 0x6dc8
0x63d2: call 0x1620
0x63d7: test rax,rax
0x63da: mov qword ptr [rbp-0x3d8],rax
0x63e1: je 0x6dc8
0x63e7: mov r8,qword ptr [rbp-0x3c8]
0x63ee: mov qword ptr [rbp-0x420],rax
0x63f5: xor r12d,r12d
0x63f8: cmp qword ptr [rbp-0x3e8],0x0
0x6400: je 0x640c
0x6402: mov rax,qword ptr [rbp-0x418]
0x6409: mov r12,qword ptr [rax]
0x640c: mov r13,qword ptr [rbp-0x2b8]
0x6413: lea rax,[rbp-0x3bc]
0x641a: mov r15,qword ptr [rbp-0x3e8]
0x6421: mov qword ptr [rbp-0x400],0x0
0x642c: mov qword ptr [rbp-0x3f0],rax
0x6433: mov rax,rbx
0x6436: mov rbx,r8
0x6439: mov rcx,qword ptr [r13]
0x643d: mov r8,rax
0x6440: cmp rcx,r8
0x6443: je 0x6db1
0x6449: sub rcx,r8
0x644c: mov rax,rbx
0x644f: add rax,rcx
0x6452: mov r14,rax
0x6455: jae 0x6538
0x645b: cmp r12,-0x1
0x645f: je 0x6f30
0x6465: call 0x1450
0x646a: mov qword ptr [rbp-0x3c8],rax
0x6471: cmp r15,qword ptr [rbp-0x3e8]
0x6478: je 0x6483
0x647a: test r15,r15
0x647d: jne 0x6f60
0x6483: mov rax,qword ptr [rbp-0x420]
0x648a: test rax,rax
0x648d: je 0x6497
0x648f: mov rdi,rax
0x6492: call 0x1430
0x6497: mov rax,qword ptr [rbp-0x408]
0x649e: mov rdi,qword ptr [rbp-0x2b8]
0x64a5: add rax,0x20
0x64a9: cmp rdi,rax
0x64ac: je 0x64b3
0x64ae: call 0x1430
0x64b3: mov rax,qword ptr [rbp-0x410]
0x64ba: mov rdi,qword ptr [rbp-0x3a8]
0x64c1: add rax,0x10
0x64c5: cmp rdi,rax
0x64c8: je 0x64cf
0x64ca: call 0x1430
0x64cf: mov rax,qword ptr [rbp-0x3c8]
0x64d6: xor r15d,r15d
0x64d9: mov dword ptr [rax],0xc
0x64df: mov rdi,qword ptr [rbp-0x38]
0x64e3: xor rdi,qword ptr fs:0x28
0x64ec: mov rax,r15
0x64ef: jne 0x73f7
0x64f5: lea rsp,[rbp-0x28]
0x64f9: pop rbx
0x64fa: pop r12
0x64fc: pop r13
0x64fe: pop r14
0x6500: pop r15
0x6502: pop rbp
0x6503: ret 
0x6508: add rax,0x24
0x650c: mov qword ptr [rbp-0x420],0x0
0x6517: and rax,-0x10
0x651b: sub rsp,rax
0x651e: lea rax,[rsp+0xf]
0x6523: and rax,-0x10
0x6527: mov qword ptr [rbp-0x3d8],rax
0x652e: jmp 0x63f5
0x6538: cmp r12,rax
0x653b: jae 0x65a4
0x653d: test r12,r12
0x6540: jne 0x6e70
0x6546: cmp rax,0xc
0x654a: ja 0x6e82
0x6550: mov r12d,0xc
0x6556: cmp r15,qword ptr [rbp-0x3e8]
0x655d: sete dl
0x6560: test r15,r15
0x6563: je 0x6ea8
0x6569: test dl,dl
0x656b: jne 0x6ea8
0x6571: mov rsi,r12
0x6574: mov rdi,r15
0x6577: mov qword ptr [rbp-0x3d0],r8
0x657e: mov qword ptr [rbp-0x3c8],rcx
0x6585: call 0x1660
0x658a: test rax,rax
0x658d: mov rcx,qword ptr [rbp-0x3c8]
0x6594: mov r8,qword ptr [rbp-0x3d0]
0x659b: je 0x6f4b
0x65a1: mov r15,rax
0x65a4: lea rdi,[r15+rbx]
0x65a8: mov rdx,rcx
0x65ab: mov rsi,r8
0x65ae: call 0x15f0
0x65b3: mov rax,qword ptr [rbp-0x400]
0x65ba: cmp qword ptr [rbp-0x2c0],rax
0x65c1: je 0x727b
0x65c7: movzx edx,byte ptr [r13+0x48]
0x65cc: mov rax,qword ptr [r13+0x50]
0x65d0: cmp dl,0x25
0x65d3: je 0x6d68
0x65d9: cmp rax,-0x1
0x65dd: je 0x7226
0x65e3: mov r8,qword ptr [rbp-0x3a8]
0x65ea: shl rax,0x5
0x65ee: add rax,r8
0x65f1: cmp dl,0x6e
0x65f4: mov edi,dword ptr [rax]
0x65f6: mov dword ptr [rbp-0x3d0],edi
0x65fc: je 0x6de0
0x6602: mov eax,dword ptr [r13+0x10]
0x6606: mov rdi,qword ptr [rbp-0x3d8]
0x660d: test al,0x1
0x660f: mov byte ptr [rdi],0x25
0x6612: lea rbx,[rdi+0x1]
0x6616: je 0x6627
0x6618: mov rdi,qword ptr [rbp-0x3d8]
0x661f: lea rbx,[rdi+0x2]
0x6623: mov byte ptr [rdi+0x1],0x27
0x6627: test al,0x2
0x6629: je 0x6632
0x662b: mov byte ptr [rbx],0x2d
0x662e: add rbx,0x1
0x6632: test al,0x4
0x6634: je 0x663d
0x6636: mov byte ptr [rbx],0x2b
0x6639: add rbx,0x1
0x663d: test al,0x8
0x663f: je 0x6648
0x6641: mov byte ptr [rbx],0x20
0x6644: add rbx,0x1
0x6648: test al,0x10
0x664a: je 0x6653
0x664c: mov byte ptr [rbx],0x23
0x664f: add rbx,0x1
0x6653: test al,0x40
0x6655: je 0x665e
0x6657: mov byte ptr [rbx],0x49
0x665a: add rbx,0x1
0x665e: test al,0x20
0x6660: je 0x6669
0x6662: mov byte ptr [rbx],0x30
0x6665: add rbx,0x1
0x6669: mov rsi,qword ptr [r13+0x18]
0x666d: mov rdx,qword ptr [r13+0x20]
0x6671: cmp rsi,rdx
0x6674: je 0x66a6
0x6676: mov rcx,rdx
0x6679: mov rdi,rbx
0x667c: mov qword ptr [rbp-0x3e0],r8
0x6683: sub rcx,rsi
0x6686: mov rdx,rcx
0x6689: mov qword ptr [rbp-0x3c8],rcx
0x6690: call 0x15f0
0x6695: mov rcx,qword ptr [rbp-0x3c8]
0x669c: mov r8,qword ptr [rbp-0x3e0]
0x66a3: add rbx,rcx
0x66a6: mov rsi,qword ptr [r13+0x30]
0x66aa: mov rdx,qword ptr [r13+0x38]
0x66ae: cmp rsi,rdx
0x66b1: je 0x66e3
0x66b3: mov rcx,rdx
0x66b6: mov rdi,rbx
0x66b9: mov qword ptr [rbp-0x3e0],r8
0x66c0: sub rcx,rsi
0x66c3: mov rdx,rcx
0x66c6: mov qword ptr [rbp-0x3c8],rcx
0x66cd: call 0x15f0
0x66d2: mov rcx,qword ptr [rbp-0x3c8]
0x66d9: mov r8,qword ptr [rbp-0x3e0]
0x66e0: add rbx,rcx
0x66e3: mov edi,dword ptr [rbp-0x3d0]
0x66e9: cmp edi,0x10
0x66ec: ja 0x671b
0x66ee: mov eax,0x1
0x66f3: mov ecx,edi
0x66f5: shl rax,cl
0x66f8: test eax,0x14180
0x66fd: jne 0x6714
0x66ff: test ah,0x10
0x6702: jne 0x7060
0x6708: test ah,0x6
0x670b: je 0x671b
0x670d: mov byte ptr [rbx],0x6c
0x6710: add rbx,0x1
0x6714: mov byte ptr [rbx],0x6c
0x6717: add rbx,0x1
0x671b: movzx eax,byte ptr [r13+0x48]
0x6720: mov byte ptr [rbx+0x1],0x0
0x6724: mov byte ptr [rbx],al
0x6726: mov rax,qword ptr [r13+0x28]
0x672a: cmp rax,-0x1
0x672e: je 0x6e60
0x6734: shl rax,0x5
0x6738: add rax,r8
0x673b: cmp dword ptr [rax],0x5
0x673e: jne 0x7226
0x6744: mov eax,dword ptr [rax+0x10]
0x6747: mov dword ptr [rbp-0x3e0],0x1
0x6751: mov dword ptr [rbp-0x3b8],eax
0x6757: mov rax,qword ptr [r13+0x40]
0x675b: cmp rax,-0x1
0x675f: je 0x678c
0x6761: shl rax,0x5
0x6765: add r8,rax
0x6768: cmp dword ptr [r8],0x5
0x676c: jne 0x7226
0x6772: mov eax,dword ptr [rbp-0x3e0]
0x6778: mov edx,dword ptr [r8+0x10]
0x677c: mov dword ptr [rbp+rax*4-0x3b8],edx
0x6783: lea eax,[rax+0x1]
0x6786: mov dword ptr [rbp-0x3e0],eax
0x678c: mov rax,r14
0x678f: xor edx,edx
0x6791: add rax,0x2
0x6795: jb 0x73fc
0x679b: cmp r12,rax
0x679e: jae 0x67eb
0x67a0: test r12,r12
0x67a3: jne 0x6fc8
0x67a9: cmp rax,0xc
0x67ad: ja 0x6fe0
0x67b3: mov r12d,0xc
0x67b9: cmp r15,qword ptr [rbp-0x3e8]
0x67c0: sete dl
0x67c3: test r15,r15
0x67c6: je 0x7010
0x67cc: test dl,dl
0x67ce: jne 0x7010
0x67d4: mov rsi,r12
0x67d7: mov rdi,r15
0x67da: call 0x1660
0x67df: test rax,rax
0x67e2: je 0x6465
0x67e8: mov r15,rax
0x67eb: mov byte ptr [r15+r14],0x0
0x67f0: call 0x1450
0x67f5: mov qword ptr [rbp-0x3c8],rax
0x67fc: mov eax,dword ptr [rax]
0x67fe: mov qword ptr [rbp-0x3f8],rbx
0x6805: mov dword ptr [rbp-0x424],eax
0x680b: nop dword ptr [rax+rax]
0x6810: mov rax,qword ptr [rbp-0x3c8]
0x6817: mov rbx,r12
0x681a: mov r10d,0x7fffffff
0x6820: sub rbx,r14
0x6823: mov dword ptr [rbp-0x3bc],0xffffffff
0x682d: cmp rbx,0x7fffffff
0x6834: mov dword ptr [rax],0x0
0x683a: mov eax,dword ptr [rbp-0x3d0]
0x6840: cmovbe r10,rbx
0x6844: cmp eax,0x11
0x6847: ja 0x7226
0x684d: lea rsi,[rip+0x2ff4]
0x6854: movsxd rax,dword ptr [rsi+rax*4]
0x6858: add rax,rsi
0x685b: jmp rax
0x6d68: cmp rax,-0x1
0x6d6c: jne 0x7226
0x6d72: mov rax,r14
0x6d75: add rax,0x1
0x6d79: mov rbx,rax
0x6d7c: jae 0x6e08
0x6d82: cmp r12,-0x1
0x6d86: jne 0x6465
0x6d8c: mov rbx,r12
0x6d8f: mov byte ptr [r15+r14],0x25
0x6d94: mov r8,qword ptr [r13+0x8]
0x6d98: add r13,0x58
0x6d9c: mov rcx,qword ptr [r13]
0x6da0: add qword ptr [rbp-0x400],0x1
0x6da8: cmp rcx,r8
0x6dab: jne 0x6449
0x6db1: mov r14,rbx
0x6db4: jmp 0x65b3
0x6dc8: call 0x1450
0x6dcd: mov qword ptr [rbp-0x3c8],rax
0x6dd4: jmp 0x6497
0x6de0: mov edx,edi
0x6de2: sub edx,0x12
0x6de5: cmp edx,0x4
0x6de8: ja 0x7226
0x6dee: lea rdi,[rip+0x2a9b]
0x6df5: mov rax,qword ptr [rax+0x10]
0x6df9: movsxd rdx,dword ptr [rdi+rdx*4]
0x6dfd: add rdx,rdi
0x6e00: jmp rdx
0x6e08: cmp r12,rax
0x6e0b: jae 0x6d8f
0x6e0d: test r12,r12
0x6e10: jne 0x71e0
0x6e16: cmp rax,0xc
0x6e1a: ja 0x71f2
0x6e20: mov r12d,0xc
0x6e26: cmp r15,qword ptr [rbp-0x3e8]
0x6e2d: sete dl
0x6e30: test r15,r15
0x6e33: je 0x70a0
0x6e39: test dl,dl
0x6e3b: jne 0x70a0
0x6e41: mov rsi,r12
0x6e44: mov rdi,r15
0x6e47: call 0x1660
0x6e4c: test rax,rax
0x6e4f: je 0x6f4b
0x6e55: mov r15,rax
0x6e58: jmp 0x6d8f
0x6e60: mov dword ptr [rbp-0x3e0],0x0
0x6e6a: jmp 0x6757
0x6e70: js 0x6465
0x6e76: add r12,r12
0x6e79: cmp r12,rax
0x6e7c: jae 0x6556
0x6e82: cmp rax,-0x1
0x6e86: je 0x6465
0x6e8c: cmp r15,qword ptr [rbp-0x3e8]
0x6e93: mov r12,rax
0x6e96: sete dl
0x6e99: test r15,r15
0x6e9c: jne 0x6569
0x6ea2: nop word ptr [rax+rax]
0x6ea8: mov rdi,r12
0x6eab: mov qword ptr [rbp-0x3e0],r8
0x6eb2: mov byte ptr [rbp-0x3d0],dl
0x6eb8: mov qword ptr [rbp-0x3c8],rcx
0x6ebf: call 0x1620
0x6ec4: test rax,rax
0x6ec7: mov r9,rax
0x6eca: mov rcx,qword ptr [rbp-0x3c8]
0x6ed1: movzx edx,byte ptr [rbp-0x3d0]
0x6ed8: mov r8,qword ptr [rbp-0x3e0]
0x6edf: je 0x6465
0x6ee5: test rbx,rbx
0x6ee8: je 0x70f0
0x6eee: test dl,dl
0x6ef0: je 0x70f0
0x6ef6: mov rsi,r15
0x6ef9: mov rdx,rbx
0x6efc: mov rdi,rax
0x6eff: mov qword ptr [rbp-0x3d0],r8
0x6f06: mov qword ptr [rbp-0x3c8],rcx
0x6f0d: call 0x15f0
0x6f12: mov rcx,qword ptr [rbp-0x3c8]
0x6f19: mov r15,rax
0x6f1c: mov r8,qword ptr [rbp-0x3d0]
0x6f23: jmp 0x65a4
0x6f30: mov r14,r12
0x6f33: jmp 0x65a4
0x6f4b: call 0x1450
0x6f50: mov qword ptr [rbp-0x3c8],rax
0x6f57: nop word ptr [rax+rax]
0x6f60: mov rdi,r15
0x6f63: call 0x1430
0x6f68: jmp 0x6483
0x6fc8: js 0x6465
0x6fce: add r12,r12
0x6fd1: cmp r12,rax
0x6fd4: jae 0x67b9
0x6fda: nop word ptr [rax+rax]
0x6fe0: test rdx,rdx
0x6fe3: jne 0x6465
0x6fe9: cmp rax,-0x1
0x6fed: je 0x6465
0x6ff3: cmp r15,qword ptr [rbp-0x3e8]
0x6ffa: mov r12,rax
0x6ffd: sete dl
0x7000: test r15,r15
0x7003: jne 0x67cc
0x7009: nop dword ptr [rax]
0x7010: mov rdi,r12
0x7013: mov byte ptr [rbp-0x3c8],dl
0x7019: call 0x1620
0x701e: test rax,rax
0x7021: mov rcx,rax
0x7024: movzx edx,byte ptr [rbp-0x3c8]
0x702b: je 0x6465
0x7031: test r14,r14
0x7034: je 0x71d0
0x703a: test dl,dl
0x703c: je 0x71d0
0x7042: mov rsi,r15
0x7045: mov rdx,r14
0x7048: mov rdi,rax
0x704b: call 0x15f0
0x7050: mov r15,rax
0x7053: jmp 0x67eb
0x7060: mov byte ptr [rbx],0x4c
0x7063: add rbx,0x1
0x7067: jmp 0x671b
0x70a0: mov rdi,r12
0x70a3: mov byte ptr [rbp-0x3c8],dl
0x70a9: call 0x1620
0x70ae: test rax,rax
0x70b1: mov rcx,rax
0x70b4: movzx edx,byte ptr [rbp-0x3c8]
0x70bb: je 0x6465
0x70c1: test r14,r14
0x70c4: je 0x7204
0x70ca: test dl,dl
0x70cc: je 0x7204
0x70d2: mov rsi,r15
0x70d5: mov rdx,r14
0x70d8: mov rdi,rax
0x70db: call 0x15f0
0x70e0: mov r15,rax
0x70e3: jmp 0x6d8f
0x70f0: mov r15,r9
0x70f3: jmp 0x65a4
0x71c8: xor r15d,r15d
0x71cb: jmp 0x64df
0x71d0: mov r15,rcx
0x71d3: jmp 0x67eb
0x71e0: js 0x6465
0x71e6: add r12,r12
0x71e9: cmp r12,rax
0x71ec: jae 0x6e26
0x71f2: cmp rax,-0x1
0x71f6: je 0x6465
0x71fc: mov r12,rax
0x71ff: jmp 0x6e26
0x7204: mov r15,rcx
0x7207: jmp 0x6d8f
0x7226: call 0x1440
0x722b: nop dword ptr [rax+rax]
0x7230: mov rax,qword ptr [rbp-0x408]
0x7237: mov rdi,qword ptr [rbp-0x2b8]
0x723e: add rax,0x20
0x7242: cmp rdi,rax
0x7245: je 0x724c
0x7247: call 0x1430
0x724c: mov rax,qword ptr [rbp-0x410]
0x7253: mov rdi,qword ptr [rbp-0x3a8]
0x725a: add rax,0x10
0x725e: cmp rdi,rax
0x7261: je 0x7268
0x7263: call 0x1430
0x7268: call 0x1450
0x726d: xor r15d,r15d
0x7270: mov dword ptr [rax],0x16
0x7276: jmp 0x64df
0x727b: mov rbx,r14
0x727e: xor eax,eax
0x7280: add rbx,0x1
0x7284: jb 0x7390
0x728a: cmp r12,rbx
0x728d: jae 0x72dc
0x728f: test r12,r12
0x7292: jne 0x73c9
0x7298: cmp rbx,0xc
0x729c: ja 0x73ae
0x72a2: mov r12d,0xc
0x72a8: cmp r15,qword ptr [rbp-0x3e8]
0x72af: sete r13b
0x72b3: test r15,r15
0x72b6: je 0x735c
0x72bc: test r13b,r13b
0x72bf: jne 0x735c
0x72c5: mov rsi,r12
0x72c8: mov rdi,r15
0x72cb: call 0x1660
0x72d0: test rax,rax
0x72d3: je 0x6f4b
0x72d9: mov r15,rax
0x72dc: cmp r15,qword ptr [rbp-0x3e8]
0x72e3: mov byte ptr [r15+r14],0x0
0x72e8: je 0x7301
0x72ea: cmp r12,rbx
0x72ed: jbe 0x7301
0x72ef: mov rdi,r15
0x72f2: mov rsi,rbx
0x72f5: call 0x1660
0x72fa: test rax,rax
0x72fd: cmovne r15,rax
0x7301: mov rax,qword ptr [rbp-0x420]
0x7308: test rax,rax
0x730b: je 0x7315
0x730d: mov rdi,rax
0x7310: call 0x1430
0x7315: mov rax,qword ptr [rbp-0x408]
0x731c: mov rdi,qword ptr [rbp-0x2b8]
0x7323: add rax,0x20
0x7327: cmp rdi,rax
0x732a: je 0x7331
0x732c: call 0x1430
0x7331: mov rax,qword ptr [rbp-0x410]
0x7338: mov rdi,qword ptr [rbp-0x3a8]
0x733f: add rax,0x10
0x7343: cmp rdi,rax
0x7346: je 0x734d
0x7348: call 0x1430
0x734d: mov rax,qword ptr [rbp-0x418]
0x7354: mov qword ptr [rax],r14
0x7357: jmp 0x64df
0x735c: mov rdi,r12
0x735f: call 0x1620
0x7364: test rax,rax
0x7367: mov rcx,rax
0x736a: je 0x6465
0x7370: test r14,r14
0x7373: je 0x73e0
0x7375: test r13b,r13b
0x7378: je 0x73e0
0x737a: mov rsi,r15
0x737d: mov rdx,r14
0x7380: mov rdi,rax
0x7383: call 0x15f0
0x7388: mov r15,rax
0x738b: jmp 0x72dc
0x7390: cmp r12,-0x1
0x7394: mov eax,0x1
0x7399: je 0x72dc
0x739f: test r12,r12
0x73a2: je 0x6465
0x73a8: js 0x6465
0x73ae: test rax,rax
0x73b1: jne 0x6465
0x73b7: cmp rbx,-0x1
0x73bb: je 0x6465
0x73c1: mov r12,rbx
0x73c4: jmp 0x72a8
0x73c9: js 0x6465
0x73cf: add r12,r12
0x73d2: cmp r12,rbx
0x73d5: jae 0x72a8
0x73db: jmp 0x73ae
0x73e0: mov r15,rcx
0x73e3: jmp 0x72dc
0x73f7: call 0x1520
0x73fc: cmp r12,-0x1
0x7400: mov edx,0x1
0x7405: je 0x67eb
0x740b: test r12,r12
0x740e: je 0x6465
0x7414: jns 0x6fe0
0x741a: jmp 0x6465
0x7420: cmp qword ptr [rsi],0x0
0x7424: mov rax,qword ptr [rsi+0x8]
0x7428: je 0x748d
0x742a: lea r8,[rip+0x247f]
0x7431: lea r10,[rip+0x24d8]
0x7438: lea r9,[rip+0x2465]
0x743f: xor ecx,ecx
0x7441: nop dword ptr [rax]
0x7448: cmp dword ptr [rax],0x16
0x744b: ja 0x7490
0x744d: mov edx,dword ptr [rax]
0x744f: movsxd rdx,dword ptr [r8+rdx*4]
0x7453: add rdx,r8
0x7456: jmp rdx
0x748d: xor eax,eax
0x748f: ret 
0x7490: mov eax,0xffffffff
0x7495: ret 
0x7620: push r15
0x7622: push r14
0x7624: lea rcx,[rsi+0x20]
0x7628: push r13
0x762a: push r12
0x762c: lea rax,[rdx+0x10]
0x7630: push rbp
0x7631: push rbx
0x7632: mov r14,rsi
0x7635: mov r15,rdx
0x7638: xor ebx,ebx
0x763a: mov r9d,0x7
0x7640: sub rsp,0x58
0x7644: mov r10d,0x7
0x764a: mov qword ptr [rsi],0x0
0x7651: mov qword ptr [rsi+0x8],rcx
0x7655: mov qword ptr [rsp+0x28],rcx
0x765a: mov r8,-0x1
0x7661: mov qword ptr [rdx],0x0
0x7668: mov qword ptr [rsp+0x8],rax
0x766d: mov qword ptr [rdx+0x8],rax
0x7671: mov qword ptr [rsp+0x18],0x0
0x767a: mov qword ptr [rsp+0x10],0x0
0x7683: mov qword ptr [rsp+0x20],0x0
0x768c: jmp 0x769b
0x7690: cmp al,0x25
0x7692: lea rbp,[rdi+0x1]
0x7696: je 0x76d8
0x7698: mov rdi,rbp
0x769b: movzx eax,byte ptr [rdi]
0x769e: test al,al
0x76a0: jne 0x7690
0x76a2: lea rax,[rbx+rbx*4]
0x76a6: lea rax,[rbx+rax*2]
0x76aa: mov qword ptr [rcx+rax*8],rdi
0x76ae: mov rax,qword ptr [rsp+0x10]
0x76b3: mov qword ptr [r14+0x10],rax
0x76b7: mov rax,qword ptr [rsp+0x18]
0x76bc: mov qword ptr [r14+0x18],rax
0x76c0: xor eax,eax
0x76c2: add rsp,0x58
0x76c6: pop rbx
0x76c7: pop rbp
0x76c8: pop r12
0x76ca: pop r13
0x76cc: pop r14
0x76ce: pop r15
0x76d0: ret 
0x76d8: lea rax,[rbx+rbx*4]
0x76dc: mov r13,r8
0x76df: lea rax,[rbx+rax*2]
0x76e3: lea r12,[rcx+rax*8]
0x76e7: mov qword ptr [r12],rdi
0x76eb: mov dword ptr [r12+0x10],0x0
0x76f4: mov qword ptr [r12+0x18],0x0
0x76fd: mov qword ptr [r12+0x20],0x0
0x7706: mov qword ptr [r12+0x28],r8
0x770b: mov qword ptr [r12+0x30],0x0
0x7714: mov qword ptr [r12+0x38],0x0
0x771d: mov qword ptr [r12+0x40],r8
0x7722: mov qword ptr [r12+0x50],r8
0x7727: movzx ebx,byte ptr [rdi+0x1]
0x772b: lea eax,[rbx-0x30]
0x772e: cmp al,0x9
0x7730: ja 0x776e
0x7732: jmp 0x7b6a
0x7740: cmp bl,0x2d
0x7743: je 0x7788
0x7745: cmp bl,0x2b
0x7748: je 0x7790
0x774a: cmp bl,0x20
0x774d: je 0x77a0
0x774f: cmp bl,0x23
0x7752: je 0x77b0
0x7754: cmp bl,0x30
0x7757: je 0x77c0
0x7759: cmp bl,0x49
0x775c: jne 0x77d0
0x775e: or dword ptr [r12+0x10],0x40
0x7764: nop dword ptr [rax]
0x7768: movzx ebx,byte ptr [rax]
0x776b: mov rbp,rax
0x776e: lea rax,[rbp+0x1]
0x7772: cmp bl,0x27
0x7775: mov rdx,rax
0x7778: jne 0x7740
0x777a: or dword ptr [r12+0x10],0x1
0x7780: jmp 0x7768
0x7788: or dword ptr [r12+0x10],0x2
0x778e: jmp 0x7768
0x7790: or dword ptr [r12+0x10],0x4
0x7796: jmp 0x7768
0x77a0: or dword ptr [r12+0x10],0x8
0x77a6: jmp 0x7768
0x77b0: or dword ptr [r12+0x10],0x10
0x77b6: jmp 0x7768
0x77c0: or dword ptr [r12+0x10],0x20
0x77c6: jmp 0x7768
0x77d0: cmp bl,0x2a
0x77d3: je 0x7989
0x77d9: lea ecx,[rbx-0x30]
0x77dc: cmp cl,0x9
0x77df: jbe 0x7bf7
0x77e5: cmp bl,0x2e
0x77e8: je 0x7abf
0x77ee: xor eax,eax
0x77f0: mov esi,0x1
0x77f5: jmp 0x7827
0x7800: cmp bl,0x4c
0x7803: je 0x7840
0x7805: cmp bl,0x6c
0x7808: je 0x7820
0x780a: cmp bl,0x6a
0x780d: je 0x7820
0x780f: mov edx,ebx
0x7811: and edx,-0x21
0x7814: cmp dl,0x5a
0x7817: je 0x7820
0x7819: cmp bl,0x74
0x781c: jne 0x7848
0x781e: nop 
0x7820: add eax,0x8
0x7823: movzx ebx,byte ptr [rbp]
0x7827: add rbp,0x1
0x782b: cmp bl,0x68
0x782e: jne 0x7800
0x7830: mov ecx,eax
0x7832: mov edx,esi
0x7834: and ecx,0x1
0x7837: shl edx,cl
0x7839: or eax,edx
0x783b: jmp 0x7823
0x7840: or eax,0x4
0x7843: jmp 0x7823
0x7848: lea edx,[rbx-0x25]
0x784b: cmp dl,0x53
0x784e: ja 0x7e6b
0x7854: lea rcx,[rip+0x20d1]
0x785b: movzx edx,dl
0x785e: movsxd rdx,dword ptr [rcx+rdx*4]
0x7862: add rdx,rcx
0x7865: jmp rdx
0x7989: mov rsi,qword ptr [rsp+0x10]
0x798e: mov ecx,0x1
0x7993: mov qword ptr [r12+0x18],rbp
0x7998: mov qword ptr [r12+0x20],rax
0x799d: test rsi,rsi
0x79a0: cmovne rcx,rsi
0x79a4: mov qword ptr [rsp+0x10],rcx
0x79a9: movzx ecx,byte ptr [rbp+0x1]
0x79ad: lea esi,[rcx-0x30]
0x79b0: cmp sil,0x9
0x79b4: jbe 0x7c95
0x79ba: mov rsi,qword ptr [rsp+0x20]
0x79bf: cmp rsi,-0x1
0x79c3: lea rdx,[rsi+0x1]
0x79c7: mov qword ptr [r12+0x28],rsi
0x79cc: je 0x7e6b
0x79d2: mov rbx,qword ptr [rsp+0x20]
0x79d7: mov rbp,rax
0x79da: mov qword ptr [rsp+0x20],rdx
0x79df: cmp r9,rbx
0x79e2: mov rcx,qword ptr [r15+0x8]
0x79e6: ja 0x8062
0x79ec: add r9,r9
0x79ef: lea rax,[rbx+0x1]
0x79f3: cmp r9,rbx
0x79f6: cmovbe r9,rax
0x79fa: movabsq rax,0x7ffffffffffffff
0x7a04: cmp r9,rax
0x7a07: ja 0x82ab
0x7a0d: mov rsi,r9
0x7a10: mov qword ptr [rsp+0x40],r9
0x7a15: mov qword ptr [rsp+0x38],r10
0x7a1a: shl rsi,0x5
0x7a1e: cmp qword ptr [rsp+0x8],rcx
0x7a23: mov qword ptr [rsp+0x30],r8
0x7a28: je 0x8141
0x7a2e: mov rdi,rcx
0x7a31: call 0x1660
0x7a36: mov rdx,qword ptr [r15+0x8]
0x7a3a: mov r8,qword ptr [rsp+0x30]
0x7a3f: mov rcx,rax
0x7a42: mov r10,qword ptr [rsp+0x38]
0x7a47: mov r9,qword ptr [rsp+0x40]
0x7a4c: test rcx,rcx
0x7a4f: je 0x8307
0x7a55: cmp qword ptr [rsp+0x8],rdx
0x7a5a: mov rax,qword ptr [r15]
0x7a5d: je 0x821b
0x7a63: mov qword ptr [r15+0x8],rcx
0x7a67: mov rdx,rax
0x7a6a: shl rdx,0x5
0x7a6e: add rdx,rcx
0x7a71: cmp rax,rbx
0x7a74: ja 0x7a96
0x7a76: nop word ptr cs:[rax+rax]
0x7a80: add rax,0x1
0x7a84: mov dword ptr [rdx],0x0
0x7a8a: add rdx,0x20
0x7a8e: cmp rax,rbx
0x7a91: jbe 0x7a80
0x7a93: mov qword ptr [r15],rax
0x7a96: shl rbx,0x5
0x7a9a: lea rax,[rcx+rbx]
0x7a9e: mov edx,dword ptr [rax]
0x7aa0: test edx,edx
0x7aa2: jne 0x7f7b
0x7aa8: mov dword ptr [rax],0x5
0x7aae: movzx ebx,byte ptr [rbp]
0x7ab2: lea rdx,[rbp+0x1]
0x7ab6: cmp bl,0x2e
0x7ab9: jne 0x77ee
0x7abf: cmp byte ptr [rbp+0x1],0x2a
0x7ac3: mov qword ptr [r12+0x30],rbp
0x7ac8: jne 0x7c4e
0x7ace: mov rsi,qword ptr [rsp+0x18]
0x7ad3: lea r11,[rbp+0x2]
0x7ad7: mov eax,0x2
0x7adc: mov qword ptr [r12+0x38],r11
0x7ae1: cmp rsi,0x2
0x7ae5: cmovae rax,rsi
0x7ae9: mov qword ptr [rsp+0x18],rax
0x7aee: movsx eax,byte ptr [rbp+0x2]
0x7af2: lea edx,[rax-0x30]
0x7af5: cmp dl,0x9
0x7af8: jbe 0x818c
0x7afe: mov rbx,qword ptr [r12+0x40]
0x7b03: cmp rbx,-0x1
0x7b07: je 0x8165
0x7b0d: cmp r9,rbx
0x7b10: mov rcx,qword ptr [r15+0x8]
0x7b14: jbe 0x807f
0x7b1a: mov rax,qword ptr [r15]
0x7b1d: mov rdx,rax
0x7b20: shl rdx,0x5
0x7b24: add rdx,rcx
0x7b27: cmp rax,rbx
0x7b2a: ja 0x7b46
0x7b2c: nop dword ptr [rax]
0x7b30: add rax,0x1
0x7b34: mov dword ptr [rdx],0x0
0x7b3a: add rdx,0x20
0x7b3e: cmp rax,rbx
0x7b41: jbe 0x7b30
0x7b43: mov qword ptr [r15],rax
0x7b46: shl rbx,0x5
0x7b4a: lea rax,[rcx+rbx]
0x7b4e: mov edx,dword ptr [rax]
0x7b50: test edx,edx
0x7b52: jne 0x806a
0x7b58: mov dword ptr [rax],0x5
0x7b5e: mov rbp,r11
0x7b61: movzx ebx,byte ptr [r11]
0x7b65: jmp 0x77ee
0x7b6a: mov rax,rbp
0x7b6d: nop dword ptr [rax]
0x7b70: add rax,0x1
0x7b74: movzx edx,byte ptr [rax]
0x7b77: lea ecx,[rdx-0x30]
0x7b7a: cmp cl,0x9
0x7b7d: jbe 0x7b70
0x7b7f: cmp dl,0x24
0x7b82: mov r13,r8
0x7b85: jne 0x776e
0x7b8b: xor edx,edx
0x7b8d: movsx eax,bl
0x7b90: movabsq rdi,0x1999999999999999
0x7b9a: mov rsi,r8
0x7b9d: sub eax,0x30
0x7ba0: cmp rdx,rdi
0x7ba3: cltq 
0x7ba5: ja 0x7bae
0x7ba7: lea rsi,[rdx+rdx*4]
0x7bab: add rsi,rsi
0x7bae: mov rcx,rbp
0x7bb1: add rax,rsi
0x7bb4: movzx ebx,byte ptr [rbp+0x1]
0x7bb8: setb sil
0x7bbc: add rbp,0x1
0x7bc0: mov rdx,rax
0x7bc3: movzx esi,sil
0x7bc7: test rsi,rsi
0x7bca: lea edi,[rbx-0x30]
0x7bcd: jne 0x7f5e
0x7bd3: cmp dil,0x9
0x7bd7: jbe 0x7b8d
0x7bd9: mov r13,rax
0x7bdc: sub r13,0x1
0x7be0: cmp r13,-0x3
0x7be4: ja 0x7e6b
0x7bea: lea rbp,[rcx+0x2]
0x7bee: movzx ebx,byte ptr [rcx+0x2]
0x7bf2: jmp 0x776e
0x7bf7: mov qword ptr [r12+0x18],rbp
0x7bfc: movzx edi,byte ptr [rbp]
0x7c00: mov rsi,rbp
0x7c03: lea ecx,[rdi-0x30]
0x7c06: cmp cl,0x9
0x7c09: jbe 0x7c17
0x7c0b: jmp 0x7c40
0x7c10: mov rbp,rax
0x7c13: add rax,0x1
0x7c17: movzx edi,byte ptr [rax]
0x7c1a: lea edx,[rdi-0x30]
0x7c1d: cmp dl,0x9
0x7c20: jbe 0x7c10
0x7c22: mov rcx,rax
0x7c25: lea rdx,[rbp+0x2]
0x7c29: mov rbp,rax
0x7c2c: sub rcx,rsi
0x7c2f: mov rsi,qword ptr [rsp+0x10]
0x7c34: cmp rsi,rcx
0x7c37: cmovae rcx,rsi
0x7c3b: mov qword ptr [rsp+0x10],rcx
0x7c40: mov qword ptr [r12+0x20],rbp
0x7c45: movzx ebx,byte ptr [rbp]
0x7c49: jmp 0x77e5
0x7c4e: movzx eax,byte ptr [rbp+0x1]
0x7c52: sub eax,0x30
0x7c55: cmp al,0x9
0x7c57: ja 0x7c6e
0x7c59: nop dword ptr [rax]
0x7c60: add rdx,0x1
0x7c64: movzx eax,byte ptr [rdx]
0x7c67: sub eax,0x30
0x7c6a: cmp al,0x9
0x7c6c: jbe 0x7c60
0x7c6e: mov rsi,qword ptr [rsp+0x18]
0x7c73: mov rax,rdx
0x7c76: mov qword ptr [r12+0x38],rdx
0x7c7b: sub rax,rbp
0x7c7e: movzx ebx,byte ptr [rdx]
0x7c81: mov rbp,rdx
0x7c84: cmp rsi,rax
0x7c87: cmovae rax,rsi
0x7c8b: mov qword ptr [rsp+0x18],rax
0x7c90: jmp 0x77ee
0x7c95: mov rsi,rax
0x7c98: add rsi,0x1
0x7c9c: movzx edi,byte ptr [rsi]
0x7c9f: lea r11d,[rdi-0x30]
0x7ca3: cmp r11b,0x9
0x7ca7: jbe 0x7c98
0x7ca9: cmp dil,0x24
0x7cad: jne 0x79ba
0x7cb3: xor esi,esi
0x7cb5: movsx eax,cl
0x7cb8: movabsq rdi,0x1999999999999999
0x7cc2: mov rcx,r8
0x7cc5: sub eax,0x30
0x7cc8: cmp rsi,rdi
0x7ccb: cltq 
0x7ccd: ja 0x7cd6
0x7ccf: lea rcx,[rsi+rsi*4]
0x7cd3: add rcx,rcx
0x7cd6: mov rbp,rdx
0x7cd9: xor r11d,r11d
0x7cdc: add rax,rcx
0x7cdf: movzx ecx,byte ptr [rdx+0x1]
0x7ce3: setb r11b
0x7ce7: add rdx,0x1
0x7ceb: mov rsi,rax
0x7cee: test r11,r11
0x7cf1: lea edi,[rcx-0x30]
0x7cf4: jne 0x81fe
0x7cfa: cmp dil,0x9
0x7cfe: jbe 0x7cb5
0x7d00: lea rbx,[rax-0x1]
0x7d04: cmp rbx,-0x3
0x7d08: ja 0x7e6b
0x7d0e: mov qword ptr [r12+0x28],rbx
0x7d13: add rbp,0x2
0x7d17: jmp 0x79df
0x7e6b: mov rcx,qword ptr [r15+0x8]
0x7e6f: cmp qword ptr [rsp+0x8],rcx
0x7e74: je 0x7e7e
0x7e76: mov rdi,rcx
0x7e79: call 0x1430
0x7e7e: mov rdi,qword ptr [r14+0x8]
0x7e82: cmp qword ptr [rsp+0x28],rdi
0x7e87: je 0x7e8e
0x7e89: call 0x1430
0x7e8e: call 0x1450
0x7e93: mov dword ptr [rax],0x16
0x7e99: mov eax,0xffffffff
0x7e9e: jmp 0x76c2
0x7f5e: cmp dil,0x9
0x7f62: ja 0x7e6b
0x7f68: movsx eax,bl
0x7f6b: mov rsi,r8
0x7f6e: mov rcx,rbp
0x7f71: sub eax,0x30
0x7f74: cltq 
0x7f76: jmp 0x7bb1
0x7f7b: cmp edx,0x5
0x7f7e: jne 0x7e6f
0x7f84: movzx ebx,byte ptr [rbp]
0x7f88: lea rdx,[rbp+0x1]
0x7f8c: jmp 0x77e5
0x8062: mov rax,qword ptr [r15]
0x8065: jmp 0x7a67
0x806a: cmp edx,0x5
0x806d: jne 0x7e6f
0x8073: movzx ebx,byte ptr [r11]
0x8077: mov rbp,r11
0x807a: jmp 0x77ee
0x807f: add r9,r9
0x8082: lea rax,[rbx+0x1]
0x8086: cmp r9,rbx
0x8089: cmovbe r9,rax
0x808d: movabsq rax,0x7ffffffffffffff
0x8097: cmp r9,rax
0x809a: ja 0x82ab
0x80a0: mov rsi,r9
0x80a3: mov qword ptr [rsp+0x48],r9
0x80a8: mov qword ptr [rsp+0x40],r10
0x80ad: shl rsi,0x5
0x80b1: cmp qword ptr [rsp+0x8],rcx
0x80b6: mov qword ptr [rsp+0x38],r8
0x80bb: mov qword ptr [rsp+0x30],r11
0x80c0: je 0x827e
0x80c6: mov rdi,rcx
0x80c9: call 0x1660
0x80ce: mov rdx,qword ptr [r15+0x8]
0x80d2: mov r11,qword ptr [rsp+0x30]
0x80d7: mov rcx,rax
0x80da: mov r8,qword ptr [rsp+0x38]
0x80df: mov r10,qword ptr [rsp+0x40]
0x80e4: mov r9,qword ptr [rsp+0x48]
0x80e9: test rcx,rcx
0x80ec: je 0x8307
0x80f2: cmp qword ptr [rsp+0x8],rdx
0x80f7: mov rax,qword ptr [r15]
0x80fa: je 0x82c0
0x8100: mov qword ptr [r15+0x8],rcx
0x8104: jmp 0x7b1d
0x8114: mov rdi,rcx
0x8117: call 0x1430
0x811c: mov rdi,qword ptr [r14+0x8]
0x8120: cmp qword ptr [rsp+0x28],rdi
0x8125: je 0x812c
0x8127: call 0x1430
0x812c: call 0x1450
0x8131: mov dword ptr [rax],0xc
0x8137: mov eax,0xffffffff
0x813c: jmp 0x76c2
0x8141: mov rdi,rsi
0x8144: call 0x1620
0x8149: mov rdx,qword ptr [rsp+0x8]
0x814e: mov rcx,rax
0x8151: mov r9,qword ptr [rsp+0x40]
0x8156: mov r10,qword ptr [rsp+0x38]
0x815b: mov r8,qword ptr [rsp+0x30]
0x8160: jmp 0x7a4c
0x8165: mov rsi,qword ptr [rsp+0x20]
0x816a: cmp rsi,-0x1
0x816e: lea rax,[rsi+0x1]
0x8172: mov qword ptr [r12+0x40],rsi
0x8177: je 0x7e6b
0x817d: mov rbx,qword ptr [rsp+0x20]
0x8182: mov qword ptr [rsp+0x20],rax
0x8187: jmp 0x7b0d
0x818c: mov rdx,r11
0x818f: add rdx,0x1
0x8193: movzx ecx,byte ptr [rdx]
0x8196: lea esi,[rcx-0x30]
0x8199: cmp sil,0x9
0x819d: jbe 0x818f
0x819f: cmp cl,0x24
0x81a2: jne 0x7afe
0x81a8: xor ecx,ecx
0x81aa: movabsq rsi,0x1999999999999999
0x81b4: sub eax,0x30
0x81b7: mov rdx,r8
0x81ba: cmp rcx,rsi
0x81bd: cltq 
0x81bf: ja 0x81c8
0x81c1: lea rdx,[rcx+rcx*4]
0x81c5: add rdx,rdx
0x81c8: mov rsi,r11
0x81cb: xor ebx,ebx
0x81cd: add rdx,rax
0x81d0: movsx eax,byte ptr [r11+0x1]
0x81d5: setb bl
0x81d8: add r11,0x1
0x81dc: mov rcx,rdx
0x81df: test rbx,rbx
0x81e2: lea edi,[rax-0x30]
0x81e5: je 0x8258
0x81e7: cmp dil,0x9
0x81eb: ja 0x7e6b
0x81f1: sub eax,0x30
0x81f4: mov rdx,r8
0x81f7: mov rsi,r11
0x81fa: cltq 
0x81fc: jmp 0x81cb
0x81fe: cmp dil,0x9
0x8202: ja 0x7e6b
0x8208: movsx eax,cl
0x820b: mov rbp,rdx
0x820e: mov rcx,r8
0x8211: sub eax,0x30
0x8214: cltq 
0x8216: jmp 0x7cd9
0x821b: mov rsi,qword ptr [rsp+0x8]
0x8220: shl rax,0x5
0x8224: mov rdi,rcx
0x8227: mov rdx,rax
0x822a: mov qword ptr [rsp+0x40],r9
0x822f: mov qword ptr [rsp+0x38],r10
0x8234: mov qword ptr [rsp+0x30],r8
0x8239: call 0x15f0
0x823e: mov r9,qword ptr [rsp+0x40]
0x8243: mov rcx,rax
0x8246: mov r10,qword ptr [rsp+0x38]
0x824b: mov rax,qword ptr [r15]
0x824e: mov r8,qword ptr [rsp+0x30]
0x8253: jmp 0x7a63
0x8258: cmp dil,0x9
0x825c: jbe 0x81aa
0x8262: lea rbx,[rdx-0x1]
0x8266: cmp rbx,-0x3
0x826a: ja 0x7e6b
0x8270: mov qword ptr [r12+0x40],rbx
0x8275: lea r11,[rsi+0x2]
0x8279: jmp 0x7b0d
0x827e: mov rdi,rsi
0x8281: call 0x1620
0x8286: mov rdx,qword ptr [rsp+0x8]
0x828b: mov rcx,rax
0x828e: mov r9,qword ptr [rsp+0x48]
0x8293: mov r10,qword ptr [rsp+0x40]
0x8298: mov r8,qword ptr [rsp+0x38]
0x829d: mov r11,qword ptr [rsp+0x30]
0x82a2: jmp 0x80e9
0x82ab: cmp qword ptr [rsp+0x8],rcx
0x82b0: jne 0x8114
0x82b6: jmp 0x811c
0x82c0: mov rsi,qword ptr [rsp+0x8]
0x82c5: shl rax,0x5
0x82c9: mov rdi,rcx
0x82cc: mov rdx,rax
0x82cf: mov qword ptr [rsp+0x48],r9
0x82d4: mov qword ptr [rsp+0x40],r10
0x82d9: mov qword ptr [rsp+0x38],r8
0x82de: mov qword ptr [rsp+0x30],r11
0x82e3: call 0x15f0
0x82e8: mov r9,qword ptr [rsp+0x48]
0x82ed: mov rcx,rax
0x82f0: mov r10,qword ptr [rsp+0x40]
0x82f5: mov rax,qword ptr [r15]
0x82f8: mov r8,qword ptr [rsp+0x38]
0x82fd: mov r11,qword ptr [rsp+0x30]
0x8302: jmp 0x8100
0x8307: mov rcx,rdx
0x830a: jmp 0x82ab
0x8310: push r15
0x8312: push r14
0x8314: mov r15,rdx
0x8317: push r13
0x8319: push r12
0x831b: lea r12,[rip+0x20388e]
0x8322: push rbp
0x8323: lea rbp,[rip+0x20388e]
0x832a: push rbx
0x832b: mov r13d,edi
0x832e: mov r14,rsi
0x8331: sub rbp,r12
0x8334: sub rsp,0x8
0x8338: sar rbp,0x3
0x833c: call 0x13e0
0x8341: test rbp,rbp
0x8344: je 0x8366
0x8346: xor ebx,ebx
0x8348: nop dword ptr [rax+rax]
0x8350: mov rdx,r15
0x8353: mov rsi,r14
0x8356: mov edi,r13d
0x8359: call qword ptr [r12+rbx*8]
0x835d: add rbx,0x1
0x8361: cmp rbp,rbx
0x8364: jne 0x8350
0x8366: add rsp,0x8
0x836a: pop rbx
0x836b: pop rbp
0x836c: pop r12
0x836e: pop r13
0x8370: pop r14
0x8372: pop r15
0x8374: ret 
0x8380: rep ret 
