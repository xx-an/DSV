0x11c0: sub rsp,0x8
0x11c4: mov rax,qword ptr [rip+0x205e05]
0x11cb: test rax,rax
0x11ce: je 0x11d2
0x11d0: call rax
0x11d2: add rsp,0x8
0x11d6: ret 
0x11e6: jmp qword ptr [rip+0x205c8c]
0x11f0: jmp qword ptr [rip+0x205c8a]
0x1240: jmp qword ptr [rip+0x205c62]
0x1250: jmp qword ptr [rip+0x205c5a]
0x1270: jmp qword ptr [rip+0x205c4a]
0x12b0: jmp qword ptr [rip+0x205c2a]
0x12e0: jmp qword ptr [rip+0x205c12]
0x1300: jmp qword ptr [rip+0x205c02]
0x1320: jmp qword ptr [rip+0x205bf2]
0x1340: jmp qword ptr [rip+0x205be2]
0x1350: jmp qword ptr [rip+0x205bda]
0x1360: jmp qword ptr [rip+0x205bd2]
0x1370: jmp qword ptr [rip+0x205bca]
0x1380: jmp qword ptr [rip+0x205bc2]
0x1390: jmp qword ptr [rip+0x205bba]
0x13a0: jmp qword ptr [rip+0x205bb2]
0x13e0: jmp qword ptr [rip+0x205b92]
0x13f0: jmp qword ptr [rip+0x205b8a]
0x1440: jmp qword ptr [rip+0x205b62]
0x1450: jmp qword ptr [rip+0x205b5a]
0x1460: jmp qword ptr [rip+0x205b52]
0x1470: jmp qword ptr [rip+0x205b6a]
0x1547: lea rsi,[rip+0x31e5]
0x154e: mov rbx,rax
0x1551: mov edx,0x5
0x1556: xor edi,edi
0x1558: call 0x1290
0x155d: xor edi,edi
0x155f: mov rdx,rax
0x1562: mov rcx,rbx
0x1565: xor esi,esi
0x1567: xor eax,eax
0x1569: call 0x13e0
0x156e: mov edi,0x1
0x1573: call 0x1690
0x1578: nop dword ptr [rax+rax]
0x15aa: hlt 
0x15ab: nop dword ptr [rax+rax]
0x15b0: lea rdi,[rip+0x205ac9]
0x15b7: push rbp
0x15b8: lea rax,[rip+0x205ac1]
0x15bf: cmp rax,rdi
0x15c2: mov rbp,rsp
0x15c5: je 0x15e0
0x15c7: mov rax,qword ptr [rip+0x2059f2]
0x15ce: test rax,rax
0x15d1: je 0x15e0
0x15d3: pop rbp
0x15d4: jmp rax
0x15e0: pop rbp
0x15e1: ret 
0x15f0: lea rdi,[rip+0x205a89]
0x15f7: lea rsi,[rip+0x205a82]
0x15fe: push rbp
0x15ff: sub rsi,rdi
0x1602: mov rbp,rsp
0x1605: sar rsi,0x3
0x1609: mov rax,rsi
0x160c: shr rax,0x3f
0x1610: add rsi,rax
0x1613: sar rsi, 1
0x1616: je 0x1630
0x1618: mov rax,qword ptr [rip+0x2059b9]
0x161f: test rax,rax
0x1622: je 0x1630
0x1624: pop rbp
0x1625: jmp rax
0x1630: pop rbp
0x1631: ret 
0x1651: push rbp
0x1652: mov rbp,rsp
0x1655: je 0x1663
0x1657: mov rdi,qword ptr [rip+0x2059aa]
0x165e: call 0x1470
0x1663: call 0x15b0
0x1668: mov byte ptr [rip+0x205a59],0x1
0x166f: pop rbp
0x1670: ret 
0x1680: push rbp
0x1681: mov rbp,rsp
0x1684: pop rbp
0x1685: jmp 0x15f0
0x19b0: mov qword ptr [rip+0x205721],rdi
0x19b7: ret 
0x19c0: mov byte ptr [rip+0x205709],dil
0x19c7: ret 
0x19d0: push rbp
0x19d1: push rbx
0x19d2: sub rsp,0x8
0x19d6: mov rdi,qword ptr [rip+0x2056ab]
0x19dd: call 0x4370
0x19e2: test eax,eax
0x19e4: je 0x19fc
0x19e6: call 0x1210
0x19eb: cmp byte ptr [rip+0x2056de],0x0
0x19f2: mov rbx,rax
0x19f5: je 0x1a13
0x19f7: cmp dword ptr [rax],0x20
0x19fa: jne 0x1a13
0x19fc: mov rdi,qword ptr [rip+0x2056bd]
0x1a03: call 0x4370
0x1a08: test eax,eax
0x1a0a: jne 0x1a52
0x1a0c: add rsp,0x8
0x1a10: pop rbx
0x1a11: pop rbp
0x1a12: ret 
0x1a13: lea rsi,[rip+0x2ece]
0x1a1a: xor edi,edi
0x1a1c: mov edx,0x5
0x1a21: call 0x1290
0x1a26: mov rdi,qword ptr [rip+0x2056ab]
0x1a2d: mov rbp,rax
0x1a30: test rdi,rdi
0x1a33: je 0x1a5d
0x1a35: call 0x3810
0x1a3a: mov esi,dword ptr [rbx]
0x1a3c: lea rdx,[rip+0x2eb1]
0x1a43: mov rcx,rax
0x1a46: mov r8,rbp
0x1a49: xor edi,edi
0x1a4b: xor eax,eax
0x1a4d: call 0x13e0
0x1a52: mov edi,dword ptr [rip+0x2055c0]
0x1a58: call 0x1240
0x1a5d: mov esi,dword ptr [rbx]
0x1a5f: lea rdx,[rip+0x2e92]
0x1a66: mov rcx,rax
0x1a69: xor edi,edi
0x1a6b: xor eax,eax
0x1a6d: call 0x13e0
0x1a72: jmp 0x1a52
0x1a80: push r13
0x1a82: push r12
0x1a84: mov r13,r8
0x1a87: push rbp
0x1a88: push rbx
0x1a89: mov rbp,rdx
0x1a8c: mov r12,rcx
0x1a8f: sub rsp,0xe8
0x1a96: test al,al
0x1a98: je 0x1ad4
0x1a9a: movaps xmmword ptr [rsp+0x60],xmm0
0x1a9f: movaps xmmword ptr [rsp+0x70],xmm1
0x1aa4: movaps xmmword ptr [rsp+0x80],xmm2
0x1aac: movaps xmmword ptr [rsp+0x90],xmm3
0x1ab4: movaps xmmword ptr [rsp+0xa0],xmm4
0x1abc: movaps xmmword ptr [rsp+0xb0],xmm5
0x1ac4: movaps xmmword ptr [rsp+0xc0],xmm6
0x1acc: movaps xmmword ptr [rsp+0xd0],xmm7
0x1ad4: mov rax,qword ptr fs:0x28
0x1add: mov qword ptr [rsp+0x28],rax
0x1ae2: xor eax,eax
0x1ae4: cmp edi,0x2
0x1ae7: mov ebx,dword ptr [rip+0x2055b3]
0x1aed: mov dword ptr [rip+0x2055a9],0x0
0x1af7: je 0x1b30
0x1af9: mov rax,qword ptr [rsp+0x28]
0x1afe: xor rax,qword ptr fs:0x28
0x1b07: mov dword ptr [rip+0x205593],ebx
0x1b0d: mov dword ptr [rip+0x205579],0x0
0x1b17: jne 0x1bba
0x1b1d: add rsp,0xe8
0x1b24: pop rbx
0x1b25: pop rbp
0x1b26: pop r12
0x1b28: pop r13
0x1b2a: ret 
0x1b30: lea rcx,[rip+0x205089]
0x1b37: lea rdx,[rip+0x2dbd]
0x1b3e: xor r8d,r8d
0x1b41: mov qword ptr [rsp+0x8],r9
0x1b46: call 0x12d0
0x1b4b: cmp eax,-0x1
0x1b4e: je 0x1af9
0x1b50: cmp eax,0x68
0x1b53: mov r9,qword ptr [rsp+0x8]
0x1b58: je 0x1bb0
0x1b5a: cmp eax,0x76
0x1b5d: jne 0x1af9
0x1b5f: lea rax,[rsp+0x110]
0x1b67: mov rdi,qword ptr [rip+0x20551a]
0x1b6e: lea r8,[rsp+0x10]
0x1b73: mov rcx,r13
0x1b76: mov rdx,r12
0x1b79: mov rsi,rbp
0x1b7c: mov qword ptr [rsp+0x18],rax
0x1b81: lea rax,[rsp+0x30]
0x1b86: mov dword ptr [rsp+0x10],0x30
0x1b8e: mov dword ptr [rsp+0x14],0x30
0x1b96: mov qword ptr [rsp+0x20],rax
0x1b9b: call 0x3e70
0x1ba0: xor edi,edi
0x1ba2: call 0x1410
0x1ba7: nop word ptr [rax+rax]
0x1bb0: xor edi,edi
0x1bb2: call r9
0x1bb5: jmp 0x1af9
0x1bba: call 0x12c0
0x1bbf: nop 
0x1be4: movaps xmmword ptr [rsp+0x50],xmm0
0x1be9: movaps xmmword ptr [rsp+0x60],xmm1
0x1bee: movaps xmmword ptr [rsp+0x70],xmm2
0x1bf3: movaps xmmword ptr [rsp+0x80],xmm3
0x1bfb: movaps xmmword ptr [rsp+0x90],xmm4
0x1c03: movaps xmmword ptr [rsp+0xa0],xmm5
0x1c0b: movaps xmmword ptr [rsp+0xb0],xmm6
0x1c13: movaps xmmword ptr [rsp+0xc0],xmm7
0x1cb7: nop word ptr [rax+rax]
0x1cf4: jmp 0x1cc8
0x1cfb: nop dword ptr [rax+rax]
0x1d9f: nop 
0x1da0: push rbp
0x1da1: push rbx
0x1da2: mov rbp,rdi
0x1da5: mov ebx,esi
0x1da7: sub rsp,0x8
0x1dab: call 0x4450
0x1db0: movzx edx,byte ptr [rax]
0x1db3: and edx,-0x21
0x1db6: cmp dl,0x55
0x1db9: je 0x1e30
0x1dbb: cmp dl,0x47
0x1dbe: je 0x1de0
0x1dc0: lea rax,[rip+0x2b9c]
0x1dc7: lea rdx,[rip+0x2b97]
0x1dce: cmp ebx,0x9
0x1dd1: cmovne rax,rdx
0x1dd5: add rsp,0x8
0x1dd9: pop rbx
0x1dda: pop rbp
0x1ddb: ret 
0x1de0: movzx edx,byte ptr [rax+0x1]
0x1de4: and edx,-0x21
0x1de7: cmp dl,0x42
0x1dea: jne 0x1dc0
0x1dec: cmp byte ptr [rax+0x2],0x31
0x1df0: jne 0x1dc0
0x1df2: cmp byte ptr [rax+0x3],0x38
0x1df6: jne 0x1dc0
0x1df8: cmp byte ptr [rax+0x4],0x30
0x1dfc: jne 0x1dc0
0x1dfe: cmp byte ptr [rax+0x5],0x33
0x1e02: jne 0x1dc0
0x1e04: cmp byte ptr [rax+0x6],0x30
0x1e08: jne 0x1dc0
0x1e0a: cmp byte ptr [rax+0x7],0x0
0x1e0e: jne 0x1dc0
0x1e10: cmp byte ptr [rbp],0x60
0x1e14: lea rax,[rip+0x2b41]
0x1e1b: lea rdx,[rip+0x2b3e]
0x1e22: cmovne rax,rdx
0x1e26: add rsp,0x8
0x1e2a: pop rbx
0x1e2b: pop rbp
0x1e2c: ret 
0x1e30: movzx edx,byte ptr [rax+0x1]
0x1e34: and edx,-0x21
0x1e37: cmp dl,0x54
0x1e3a: jne 0x1dc0
0x1e3c: movzx edx,byte ptr [rax+0x2]
0x1e40: and edx,-0x21
0x1e43: cmp dl,0x46
0x1e46: jne 0x1dc0
0x1e4c: cmp byte ptr [rax+0x3],0x2d
0x1e50: jne 0x1dc0
0x1e56: cmp byte ptr [rax+0x4],0x38
0x1e5a: jne 0x1dc0
0x1e60: cmp byte ptr [rax+0x5],0x0
0x1e64: jne 0x1dc0
0x1e6a: cmp byte ptr [rbp],0x60
0x1e6e: lea rax,[rip+0x2adf]
0x1e75: lea rdx,[rip+0x2adc]
0x1e7c: cmovne rax,rdx
0x1e80: add rsp,0x8
0x1e84: pop rbx
0x1e85: pop rbp
0x1e86: ret 
0x1f63: xor r11d,r11d
0x1f66: mov rax,rbp
0x1f69: mov r8d,r12d
0x1f6c: mov rbp,r11
0x1f6f: mov r11,rax
0x1f72: nop word ptr [rax+rax]
0x1f78: cmp r11,rbp
0x1f7b: setne r12b
0x1f7f: cmp r11,-0x1
0x1f83: jne 0x1f92
0x1f85: mov rax,qword ptr [rsp+0x10]
0x1f8a: cmp byte ptr [rax+rbp],0x0
0x1f8e: setne r12b
0x1f92: test r12b,r12b
0x1f95: je 0x25f0
0x1f9b: cmp dword ptr [rsp+0x8],0x2
0x1fa0: mov rdi,qword ptr [rsp+0x10]
0x1fa5: lea r9,[rdi+rbp]
0x1fa9: setne al
0x1fac: and al,byte ptr [rsp+0xd]
0x1fb0: mov r10d,eax
0x1fb3: je 0x2060
0x1fb9: mov rax,qword ptr [rsp+0x18]
0x1fbe: test rax,rax
0x1fc1: je 0x23f0
0x1fc7: cmp r11,-0x1
0x1fcb: lea rbx,[rbp+rax]
0x1fd0: jne 0x2000
0x1fd2: cmp rax,0x1
0x1fd6: jbe 0x2000
0x1fd8: mov byte ptr [rsp+0x38],r8b
0x1fdd: mov byte ptr [rsp+0x30],r10b
0x1fe2: mov qword ptr [rsp+0x28],r9
0x1fe7: call 0x12b0
0x1fec: movzx r8d,byte ptr [rsp+0x38]
0x1ff2: movzx r10d,byte ptr [rsp+0x30]
0x1ff8: mov r11,rax
0x1ffb: mov r9,qword ptr [rsp+0x28]
0x2000: cmp rbx,r11
0x2003: mov byte ptr [rsp+0x28],r10b
0x2008: ja 0x25c0
0x200e: mov rdx,qword ptr [rsp+0x18]
0x2013: mov rsi,qword ptr [rsp+0x48]
0x2018: mov rdi,r9
0x201b: mov qword ptr [rsp+0x40],r11
0x2020: mov byte ptr [rsp+0x38],r8b
0x2025: mov qword ptr [rsp+0x30],r9
0x202a: call 0x1320
0x202f: test eax,eax
0x2031: mov r9,qword ptr [rsp+0x30]
0x2036: movzx r8d,byte ptr [rsp+0x38]
0x203c: mov r11,qword ptr [rsp+0x40]
0x2041: jne 0x25c0
0x2047: cmp byte ptr [rsp+0xf],0x0
0x204c: movzx r10d,byte ptr [rsp+0x28]
0x2052: jne 0x2fd5
0x2058: nop dword ptr [rax+rax]
0x2060: movzx ebx,byte ptr [r9]
0x2064: cmp bl,0x7e
0x2067: ja 0x2388
0x206d: lea rcx,[rip+0x2978]
0x2074: movzx edx,bl
0x2077: movsxd rax,dword ptr [rcx+rdx*4]
0x207b: add rax,rcx
0x207e: jmp rax
0x20b8: cmp byte ptr [rsp+0xd],0x1
0x20bd: jne 0x21d2
0x20c3: test dl,dl
0x20c5: jne 0x21d2
0x20cb: mov rsi,qword ptr [rsp+0x20]
0x20d0: test rsi,rsi
0x20d3: je 0x20e9
0x20d5: mov edx,ebx
0x20d7: shr dl,0x5
0x20da: movzx edx,dl
0x20dd: mov edx,dword ptr [rsi+rdx*4]
0x20e0: btl edx,ebx
0x20e3: jb 0x2233
0x20e9: test r10b,r10b
0x20ec: jne 0x2233
0x20f2: xor eax,0x1
0x20f5: add rbp,0x1
0x20f9: and eax,r8d
0x20fc: test al,al
0x20fe: je 0x2120
0x2100: cmp r13,r15
0x2103: jbe 0x210a
0x2105: mov byte ptr [r14+r15],0x27
0x210a: lea rax,[r15+0x1]
0x210e: cmp r13,rax
0x2111: jbe 0x2119
0x2113: mov byte ptr [r14+r15+0x1],0x27
0x2119: add r15,0x2
0x211d: xor r8d,r8d
0x2120: cmp r15,r13
0x2123: jae 0x2129
0x2125: mov byte ptr [r14+r15],bl
0x2129: movzx edi,byte ptr [rsp+0xe]
0x212e: add r15,0x1
0x2132: mov eax,0x0
0x2137: test r12b,r12b
0x213a: cmove edi,eax
0x213d: mov byte ptr [rsp+0xe],dil
0x2142: jmp 0x1f78
0x21d2: cmp byte ptr [rsp+0xf],0x0
0x21d7: jne 0x20cb
0x21dd: jmp 0x20e9
0x2233: cmp dword ptr [rsp+0x8],0x2
0x2238: sete dl
0x223b: cmp byte ptr [rsp+0xf],0x0
0x2240: mov eax,edx
0x2242: jne 0x2a98
0x2248: mov eax,r8d
0x224b: xor eax,0x1
0x224e: and al,dl
0x2250: je 0x2281
0x2252: cmp r13,r15
0x2255: jbe 0x225c
0x2257: mov byte ptr [r14+r15],0x27
0x225c: lea rdx,[r15+0x1]
0x2260: cmp r13,rdx
0x2263: jbe 0x226b
0x2265: mov byte ptr [r14+r15+0x1],0x24
0x226b: lea rdx,[r15+0x2]
0x226f: cmp r13,rdx
0x2272: jbe 0x227a
0x2274: mov byte ptr [r14+r15+0x2],0x27
0x227a: add r15,0x3
0x227e: mov r8d,eax
0x2281: cmp r13,r15
0x2284: jbe 0x228b
0x2286: mov byte ptr [r14+r15],0x5c
0x228b: add r15,0x1
0x228f: add rbp,0x1
0x2293: jmp 0x2120
0x2380: xor r10d,r10d
0x2383: nop dword ptr [rax+rax]
0x2388: cmp qword ptr [rsp+0x58],0x1
0x238e: jne 0x2738
0x2394: mov qword ptr [rsp+0x38],r11
0x2399: mov byte ptr [rsp+0x30],r8b
0x239e: mov byte ptr [rsp+0x28],r10b
0x23a3: call 0x1460
0x23a8: mov rcx,qword ptr [rax]
0x23ab: movzx edx,bl
0x23ae: movzx r10d,byte ptr [rsp+0x28]
0x23b4: movzx r8d,byte ptr [rsp+0x30]
0x23ba: mov r11,qword ptr [rsp+0x38]
0x23bf: mov edi,0x1
0x23c4: movzx eax,word ptr [rcx+rdx*2]
0x23c8: and ax,0x4000
0x23cc: setne r12b
0x23d0: sete al
0x23d3: and al,byte ptr [rsp+0xd]
0x23d7: test al,al
0x23d9: jne 0x2d71
0x23df: cmp dword ptr [rsp+0x8],0x2
0x23e4: sete dl
0x23e7: jmp 0x20b8
0x23f0: movzx ebx,byte ptr [r9]
0x23f4: cmp bl,0x7e
0x23f7: ja 0x2380
0x23f9: lea rcx,[rip+0x27e8]
0x2400: movzx edx,bl
0x2403: movsxd rax,dword ptr [rcx+rdx*4]
0x2407: add rax,rcx
0x240a: jmp rax
0x25c0: xor r10d,r10d
0x25c3: jmp 0x2060
0x25f0: cmp dword ptr [rsp+0x8],0x2
0x25f5: movzx ebx,byte ptr [rsp+0xf]
0x25fa: mov r12d,r8d
0x25fd: mov rbp,r11
0x2600: sete dl
0x2603: mov eax,ebx
0x2605: test r15,r15
0x2608: sete cl
0x260b: and eax,edx
0x260d: and al,cl
0x260f: jne 0x3076
0x2615: mov eax,ebx
0x2617: xor eax,0x1
0x261a: and dl,al
0x261c: je 0x2f8c
0x2622: cmp byte ptr [rsp+0x7c],0x0
0x2627: je 0x2f8a
0x262d: cmp byte ptr [rsp+0xe],0x0
0x2632: jne 0x302d
0x2638: test r13,r13
0x263b: sete al
0x263e: cmp qword ptr [rsp+0x50],0x0
0x2644: setne dl
0x2647: and al,dl
0x2649: je 0x306c
0x264f: mov r13,qword ptr [rsp+0x50]
0x2654: lea rbx,[rip+0x230a]
0x265b: mov byte ptr [r14],0x27
0x265f: mov dword ptr [rsp+0x8],0x2
0x2667: mov r15d,0x1
0x266d: mov qword ptr [rsp+0x18],0x1
0x2676: mov byte ptr [rsp+0xf],0x0
0x267b: mov qword ptr [rsp+0x48],rbx
0x2680: mov byte ptr [rsp+0x7c],al
0x2684: jmp 0x1f63
0x2738: lea rax,[rsp+0xa0]
0x2740: cmp r11,-0x1
0x2744: mov qword ptr [rsp+0xa0],0x0
0x2750: mov qword ptr [rsp+0x28],rax
0x2755: jne 0x2784
0x2757: mov rdi,qword ptr [rsp+0x10]
0x275c: mov byte ptr [rsp+0x40],r8b
0x2761: mov byte ptr [rsp+0x38],r10b
0x2766: mov qword ptr [rsp+0x30],r9
0x276b: call 0x12b0
0x2770: movzx r8d,byte ptr [rsp+0x40]
0x2776: movzx r10d,byte ptr [rsp+0x38]
0x277c: mov r11,rax
0x277f: mov r9,qword ptr [rsp+0x30]
0x2784: lea rax,[rsp+0x9c]
0x278c: xor ecx,ecx
0x278e: mov byte ptr [rsp+0x7e],bl
0x2792: mov byte ptr [rsp+0x7d],r8b
0x2797: mov rbx,rcx
0x279a: mov qword ptr [rsp+0x88],r9
0x27a2: mov qword ptr [rsp+0x38],rax
0x27a7: mov byte ptr [rsp+0x7f],r10b
0x27ac: mov qword ptr [rsp+0x80],r15
0x27b4: mov qword ptr [rsp+0x40],r14
0x27b9: mov qword ptr [rsp+0x70],r13
0x27be: mov qword ptr [rsp+0x30],r11
0x27c3: mov rax,qword ptr [rsp+0x10]
0x27c8: lea r14,[rbp+rbx]
0x27cd: mov rdx,qword ptr [rsp+0x30]
0x27d2: mov rcx,qword ptr [rsp+0x28]
0x27d7: mov rdi,qword ptr [rsp+0x38]
0x27dc: lea r13,[rax+r14]
0x27e0: sub rdx,r14
0x27e3: mov rsi,r13
0x27e6: call 0x42e0
0x27eb: test rax,rax
0x27ee: mov r15,rax
0x27f1: je 0x2841
0x27f3: cmp rax,-0x1
0x27f7: je 0x2e15
0x27fd: cmp rax,-0x2
0x2801: je 0x2da1
0x2807: cmp dword ptr [rsp+0x8],0x2
0x280c: sete al
0x280f: and al,byte ptr [rsp+0xf]
0x2813: jne 0x29b0
0x2819: mov edi,dword ptr [rsp+0x9c]
0x2820: call 0x1450
0x2825: mov rdi,qword ptr [rsp+0x28]
0x282a: test eax,eax
0x282c: mov eax,0x0
0x2831: cmove r12d,eax
0x2835: add rbx,r15
0x2838: call 0x1440
0x283d: test eax,eax
0x283f: je 0x27c3
0x2841: mov edx,r12d
0x2844: mov rdi,rbx
0x2847: movzx r8d,byte ptr [rsp+0x7d]
0x284d: xor edx,0x1
0x2850: movzx ebx,byte ptr [rsp+0x7e]
0x2855: movzx r10d,byte ptr [rsp+0x7f]
0x285b: and dl,byte ptr [rsp+0xd]
0x285f: mov r15,qword ptr [rsp+0x80]
0x2867: mov r14,qword ptr [rsp+0x40]
0x286c: mov r13,qword ptr [rsp+0x70]
0x2871: mov r11,qword ptr [rsp+0x30]
0x2876: cmp rdi,0x1
0x287a: jbe 0x2e7b
0x2880: mov rcx,rdi
0x2883: xor esi,esi
0x2885: movzx r9d,byte ptr [rsp+0xf]
0x288b: add rcx,rbp
0x288e: mov rdi,qword ptr [rsp+0x10]
0x2893: jmp 0x294e
0x28a0: cmp dword ptr [rsp+0x8],0x2
0x28a5: sete al
0x28a8: test r9b,r9b
0x28ab: jne 0x2d60
0x28b1: mov esi,r8d
0x28b4: xor esi,0x1
0x28b7: and al,sil
0x28ba: je 0x28eb
0x28bc: cmp r13,r15
0x28bf: jbe 0x28c6
0x28c1: mov byte ptr [r14+r15],0x27
0x28c6: lea rsi,[r15+0x1]
0x28ca: cmp r13,rsi
0x28cd: jbe 0x28d5
0x28cf: mov byte ptr [r14+r15+0x1],0x24
0x28d5: lea rsi,[r15+0x2]
0x28d9: cmp r13,rsi
0x28dc: jbe 0x28e4
0x28de: mov byte ptr [r14+r15+0x2],0x27
0x28e4: add r15,0x3
0x28e8: mov r8d,eax
0x28eb: cmp r13,r15
0x28ee: jbe 0x28f5
0x28f0: mov byte ptr [r14+r15],0x5c
0x28f5: lea rax,[r15+0x1]
0x28f9: cmp r13,rax
0x28fc: jbe 0x290b
0x28fe: mov eax,ebx
0x2900: shr al,0x6
0x2903: add eax,0x30
0x2906: mov byte ptr [r14+r15+0x1],al
0x290b: lea rax,[r15+0x2]
0x290f: cmp r13,rax
0x2912: jbe 0x2924
0x2914: mov eax,ebx
0x2916: shr al,0x3
0x2919: and eax,0x7
0x291c: add eax,0x30
0x291f: mov byte ptr [r14+r15+0x2],al
0x2924: and ebx,0x7
0x2927: add rbp,0x1
0x292b: add r15,0x3
0x292f: add ebx,0x30
0x2932: cmp rbp,rcx
0x2935: jae 0x2120
0x293b: mov esi,edx
0x293d: cmp r13,r15
0x2940: jbe 0x2946
0x2942: mov byte ptr [r14+r15],bl
0x2946: movzx ebx,byte ptr [rdi+rbp]
0x294a: add r15,0x1
0x294e: test dl,dl
0x2950: jne 0x28a0
0x2956: mov eax,esi
0x2958: xor eax,0x1
0x295b: and eax,r8d
0x295e: test r10b,r10b
0x2961: je 0x2971
0x2963: cmp r13,r15
0x2966: jbe 0x296d
0x2968: mov byte ptr [r14+r15],0x5c
0x296d: add r15,0x1
0x2971: add rbp,0x1
0x2975: cmp rbp,rcx
0x2978: jae 0x20fc
0x297e: test al,al
0x2980: je 0x2d7e
0x2986: cmp r13,r15
0x2989: jbe 0x2990
0x298b: mov byte ptr [r14+r15],0x27
0x2990: lea rax,[r15+0x1]
0x2994: cmp r13,rax
0x2997: jbe 0x299f
0x2999: mov byte ptr [r14+r15+0x1],0x27
0x299f: add r15,0x2
0x29a3: xor r10d,r10d
0x29a6: xor r8d,r8d
0x29a9: jmp 0x293d
0x29b0: cmp r15,0x1
0x29b4: je 0x2819
0x29ba: mov rdi,qword ptr [rsp+0x10]
0x29bf: lea rcx,[rdi+r15]
0x29c3: lea rdx,[rdi+r14+0x1]
0x29c8: lea r8,[rcx+r14]
0x29cc: jmp 0x29dd
0x29d0: add rdx,0x1
0x29d4: cmp r8,rdx
0x29d7: je 0x2819
0x29dd: movzx ecx,byte ptr [rdx]
0x29e0: sub ecx,0x5b
0x29e3: cmp cl,0x21
0x29e6: ja 0x29d0
0x29e8: mov esi,0x1
0x29ed: shl rsi,cl
0x29f0: mov rcx,rsi
0x29f3: movabsq rsi,0x20000002b
0x29fd: test rcx,rsi
0x2a00: je 0x29d0
0x2a02: mov r14,qword ptr [rsp+0x40]
0x2a07: mov r13,qword ptr [rsp+0x70]
0x2a0c: mov rbp,qword ptr [rsp+0x30]
0x2a11: mov dword ptr [rsp+0x8],0x2
0x2a19: cmp byte ptr [rsp+0xd],0x0
0x2a1e: je 0x2a30
0x2a20: test al,al
0x2a22: mov eax,0x4
0x2a27: cmove eax,dword ptr [rsp+0x8]
0x2a2c: mov dword ptr [rsp+0x8],eax
0x2a30: sub rsp,0x8
0x2a34: mov rcx,rbp
0x2a37: mov rsi,r13
0x2a3a: push qword ptr [rsp+0x68]
0x2a3e: push qword ptr [rsp+0x78]
0x2a42: mov rdi,r14
0x2a45: push 0x0
0x2a47: mov r9d,dword ptr [rsp+0x98]
0x2a4f: mov r8d,dword ptr [rsp+0x28]
0x2a54: mov rdx,qword ptr [rsp+0x30]
0x2a59: and r9d,-0x3
0x2a5d: call 0x1e90
0x2a62: add rsp,0x20
0x2a66: mov r15,rax
0x2a69: mov rbx,qword ptr [rsp+0xa8]
0x2a71: xor rbx,qword ptr fs:0x28
0x2a7a: mov rax,r15
0x2a7d: jne 0x3083
0x2a83: add rsp,0xb8
0x2a8a: pop rbx
0x2a8b: pop rbp
0x2a8c: pop r12
0x2a8e: pop r13
0x2a90: pop r14
0x2a92: pop r15
0x2a94: ret 
0x2a98: mov rbp,r11
0x2a9b: jmp 0x2a19
0x2b01: test r13,r13
0x2b04: jne 0x309a
0x2b0a: lea rax,[rip+0x1e54]
0x2b11: mov qword ptr [rsp+0x50],0x0
0x2b1a: mov byte ptr [rsp+0xe],0x1
0x2b1f: mov byte ptr [rsp+0x7c],0x0
0x2b24: xor r12d,r12d
0x2b27: mov byte ptr [rsp+0xf],0x0
0x2b2c: mov qword ptr [rsp+0x18],0x1
0x2b35: mov qword ptr [rsp+0x48],rax
0x2b3a: mov r15d,0x1
0x2b40: mov dword ptr [rsp+0x8],0x2
0x2b48: jmp 0x1f63
0x2d60: movzx ebx,byte ptr [rsp+0xf]
0x2d65: mov rbp,r11
0x2d68: mov byte ptr [rsp+0xd],bl
0x2d6c: jmp 0x2a19
0x2d71: movzx edx,byte ptr [rsp+0xd]
0x2d76: xor r12d,r12d
0x2d79: jmp 0x2880
0x2d7e: xor r10d,r10d
0x2d81: jmp 0x293d
0x2da1: mov r11,qword ptr [rsp+0x30]
0x2da6: mov rsi,r14
0x2da9: mov rcx,r13
0x2dac: mov rax,rbx
0x2daf: mov rdi,rbx
0x2db2: movzx r8d,byte ptr [rsp+0x7d]
0x2db8: movzx ebx,byte ptr [rsp+0x7e]
0x2dbd: mov r9,qword ptr [rsp+0x88]
0x2dc5: cmp rsi,r11
0x2dc8: movzx r10d,byte ptr [rsp+0x7f]
0x2dce: mov r15,qword ptr [rsp+0x80]
0x2dd6: mov r14,qword ptr [rsp+0x40]
0x2ddb: mov r13,qword ptr [rsp+0x70]
0x2de0: jae 0x2e08
0x2de2: cmp byte ptr [rcx],0x0
0x2de5: jne 0x2df7
0x2de7: jmp 0x2e08
0x2df0: cmp byte ptr [r9+rax],0x0
0x2df5: je 0x2e05
0x2df7: add rax,0x1
0x2dfb: lea rdx,[rbp+rax]
0x2e00: cmp r11,rdx
0x2e03: ja 0x2df0
0x2e05: mov rdi,rax
0x2e08: movzx edx,byte ptr [rsp+0xd]
0x2e0d: xor r12d,r12d
0x2e10: jmp 0x2876
0x2e15: mov rdi,rbx
0x2e18: movzx r8d,byte ptr [rsp+0x7d]
0x2e1e: movzx ebx,byte ptr [rsp+0x7e]
0x2e23: movzx r10d,byte ptr [rsp+0x7f]
0x2e29: mov r15,qword ptr [rsp+0x80]
0x2e31: xor r12d,r12d
0x2e34: mov r14,qword ptr [rsp+0x40]
0x2e39: mov r13,qword ptr [rsp+0x70]
0x2e3e: mov r11,qword ptr [rsp+0x30]
0x2e43: movzx edx,byte ptr [rsp+0xd]
0x2e48: jmp 0x2876
0x2e7b: mov eax,edx
0x2e7d: jmp 0x23d7
0x2f8a: mov eax,edx
0x2f8c: mov rbx,qword ptr [rsp+0x48]
0x2f91: test rbx,rbx
0x2f94: je 0x2fc2
0x2f96: test al,al
0x2f98: je 0x2fc2
0x2f9a: movzx ecx,byte ptr [rbx]
0x2f9d: mov rax,rbx
0x2fa0: test cl,cl
0x2fa2: je 0x2fc2
0x2fa4: mov rdx,r15
0x2fa7: sub rax,r15
0x2faa: cmp r13,rdx
0x2fad: jbe 0x2fb3
0x2faf: mov byte ptr [r14+rdx],cl
0x2fb3: add rdx,0x1
0x2fb7: movzx ecx,byte ptr [rax+rdx]
0x2fbb: test cl,cl
0x2fbd: jne 0x2faa
0x2fbf: mov r15,rdx
0x2fc2: cmp r13,r15
0x2fc5: jbe 0x2a69
0x2fcb: mov byte ptr [r14+r15],0x0
0x2fd0: jmp 0x2a69
0x2fd5: cmp dword ptr [rsp+0x8],0x2
0x2fda: movzx ebx,byte ptr [rsp+0xf]
0x2fdf: mov rbp,r11
0x2fe2: sete al
0x2fe5: mov byte ptr [rsp+0xd],bl
0x2fe9: jmp 0x2a19
0x302d: sub rsp,0x8
0x3031: mov r8d,0x5
0x3037: mov rcx,r11
0x303a: push qword ptr [rsp+0x68]
0x303e: push qword ptr [rsp+0x78]
0x3042: mov rdi,r14
0x3045: push qword ptr [rsp+0x38]
0x3049: mov r9d,dword ptr [rsp+0x98]
0x3051: mov rdx,qword ptr [rsp+0x30]
0x3056: mov rsi,qword ptr [rsp+0x70]
0x305b: call 0x1e90
0x3060: add rsp,0x20
0x3064: mov r15,rax
0x3067: jmp 0x2a69
0x306c: movzx eax,byte ptr [rsp+0x7c]
0x3071: jmp 0x2f8c
0x3076: mov dword ptr [rsp+0x8],0x2
0x307e: jmp 0x2a19
0x3083: call 0x12c0
0x3088: mov byte ptr [rsp+0xd],0x0
0x308d: jmp 0x2b01
0x309a: mov byte ptr [rsp+0xe],0x1
0x309f: xor eax,eax
0x30a1: xor r12d,r12d
0x30a4: mov qword ptr [rsp+0x50],0x0
0x30ad: jmp 0x2654
0x30c4: nop 
0x30c6: nop word ptr cs:[rax+rax]
0x31bc: add rsp,0x20
0x31c0: mov r11,qword ptr [rsp+0x10]
0x31c5: cmp r11,rax
0x31c8: ja 0x3231
0x31ca: lea rsi,[rax+0x1]
0x31ce: lea rax,[rip+0x203f2b]
0x31d5: cmp r12,rax
0x31d8: mov qword ptr [rbx],rsi
0x31db: je 0x31ef
0x31dd: mov rdi,r12
0x31e0: mov qword ptr [rsp+0x10],rsi
0x31e5: call 0x11f0
0x31ea: mov rsi,qword ptr [rsp+0x10]
0x31ef: mov rdi,rsi
0x31f2: mov qword ptr [rsp+0x10],rsi
0x31f7: call 0x4050
0x31fc: sub rsp,0x8
0x3200: mov qword ptr [rbx+0x8],rax
0x3204: mov r8d,dword ptr [rbp]
0x3208: push qword ptr [rbp+0x30]
0x320b: push qword ptr [rbp+0x28]
0x320e: mov rcx,r14
0x3211: push r15
0x3213: mov r9d,dword ptr [rsp+0x3c]
0x3218: mov rdi,rax
0x321b: mov rdx,qword ptr [rsp+0x28]
0x3220: mov rsi,qword ptr [rsp+0x30]
0x3225: mov r12,rax
0x3228: call 0x1e90
0x322d: add rsp,0x20
0x3231: mov eax,dword ptr [rsp+0x18]
0x3235: mov dword ptr [r13],eax
0x3239: add rsp,0x28
0x323d: mov rax,r12
0x3240: pop rbx
0x3241: pop rbp
0x3242: pop r12
0x3244: pop r13
0x3246: pop r14
0x3248: pop r15
0x324a: ret 
0x3271: call 0x1200
0x3276: call 0x42a0
0x327b: nop dword ptr [rax+rax]
0x3280: push r12
0x3282: push rbp
0x3283: push rbx
0x3284: mov rbx,rdi
0x3287: call 0x1210
0x328c: mov r12d,dword ptr [rax]
0x328f: mov rbp,rax
0x3292: lea rax,[rip+0x203f67]
0x3299: test rbx,rbx
0x329c: mov esi,0x38
0x32a1: cmove rbx,rax
0x32a5: mov rdi,rbx
0x32a8: call 0x4250
0x32ad: mov dword ptr [rbp],r12d
0x32b1: pop rbx
0x32b2: pop rbp
0x32b3: pop r12
0x32b5: ret 
0x32c0: lea rax,[rip+0x203f39]
0x32c7: test rdi,rdi
0x32ca: cmove rdi,rax
0x32ce: mov eax,dword ptr [rdi]
0x32d0: ret 
0x32e0: lea rax,[rip+0x203f19]
0x32e7: test rdi,rdi
0x32ea: cmove rdi,rax
0x32ee: mov dword ptr [rdi],esi
0x32f0: ret 
0x3300: lea rax,[rip+0x203ef9]
0x3307: test rdi,rdi
0x330a: mov ecx,esi
0x330c: cmove rdi,rax
0x3310: mov eax,esi
0x3312: and ecx,0x1f
0x3315: shr al,0x5
0x3318: movzx eax,al
0x331b: lea rdi,[rdi+rax*4+0x8]
0x3320: mov esi,dword ptr [rdi]
0x3322: mov eax,esi
0x3324: shr eax,cl
0x3326: xor edx,eax
0x3328: and eax,0x1
0x332b: and edx,0x1
0x332e: shl edx,cl
0x3330: xor edx,esi
0x3332: mov dword ptr [rdi],edx
0x3334: ret 
0x3340: lea rax,[rip+0x203eb9]
0x3347: test rdi,rdi
0x334a: cmove rdi,rax
0x334e: mov eax,dword ptr [rdi+0x4]
0x3351: mov dword ptr [rdi+0x4],esi
0x3354: ret 
0x3360: lea rax,[rip+0x203e99]
0x3367: test rdi,rdi
0x336a: cmove rdi,rax
0x336e: test rsi,rsi
0x3371: mov dword ptr [rdi],0xa
0x3377: je 0x3387
0x3379: test rdx,rdx
0x337c: je 0x3387
0x337e: mov qword ptr [rdi+0x28],rsi
0x3382: mov qword ptr [rdi+0x30],rdx
0x3386: ret 
0x3387: sub rsp,0x8
0x338b: call 0x1200
0x3390: push r15
0x3392: push r14
0x3394: lea rax,[rip+0x203e65]
0x339b: push r13
0x339d: push r12
0x339f: mov r13,rdi
0x33a2: push rbp
0x33a3: push rbx
0x33a4: mov rbx,r8
0x33a7: mov r14,rsi
0x33aa: mov r15,rdx
0x33ad: sub rsp,0x18
0x33b1: test r8,r8
0x33b4: cmove rbx,rax
0x33b8: mov qword ptr [rsp+0x8],rcx
0x33bd: call 0x1210
0x33c2: mov r12d,dword ptr [rax]
0x33c5: mov rbp,rax
0x33c8: lea rax,[rbx+0x8]
0x33cc: sub rsp,0x8
0x33d0: mov r9d,dword ptr [rbx+0x4]
0x33d4: push qword ptr [rbx+0x30]
0x33d7: mov r8d,dword ptr [rbx]
0x33da: push qword ptr [rbx+0x28]
0x33dd: mov rdx,r15
0x33e0: push rax
0x33e1: mov rcx,qword ptr [rsp+0x28]
0x33e6: mov rsi,r14
0x33e9: mov rdi,r13
0x33ec: call 0x1e90
0x33f1: mov dword ptr [rbp],r12d
0x33f5: add rsp,0x38
0x33f9: pop rbx
0x33fa: pop rbp
0x33fb: pop r12
0x33fd: pop r13
0x33ff: pop r14
0x3401: pop r15
0x3403: ret 
0x3410: push r15
0x3412: push r14
0x3414: lea rax,[rip+0x203de5]
0x341b: push r13
0x341d: push r12
0x341f: mov r12,rdx
0x3422: push rbp
0x3423: push rbx
0x3424: mov rbx,rcx
0x3427: mov r14,rdi
0x342a: mov r15,rsi
0x342d: sub rsp,0x38
0x3431: test rcx,rcx
0x3434: cmove rbx,rax
0x3438: xor ebp,ebp
0x343a: call 0x1210
0x343f: test r12,r12
0x3442: mov r13,rax
0x3445: mov eax,dword ptr [rax]
0x3447: sete bpl
0x344b: or ebp,dword ptr [rbx+0x4]
0x344e: lea r10,[rbx+0x8]
0x3452: sub rsp,0x8
0x3456: mov r8d,dword ptr [rbx]
0x3459: mov rcx,r15
0x345c: mov dword ptr [rsp+0x14],eax
0x3460: push qword ptr [rbx+0x30]
0x3463: mov rdx,r14
0x3466: push qword ptr [rbx+0x28]
0x3469: push r10
0x346b: xor esi,esi
0x346d: mov r9d,ebp
0x3470: xor edi,edi
0x3472: mov qword ptr [rsp+0x40],r10
0x3477: call 0x1e90
0x347c: lea rsi,[rax+0x1]
0x3480: mov qword ptr [rsp+0x48],rax
0x3485: add rsp,0x20
0x3489: mov rdi,rsi
0x348c: mov qword ptr [rsp+0x18],rsi
0x3491: call 0x4050
0x3496: mov qword ptr [rsp+0x10],rax
0x349b: sub rsp,0x8
0x349f: push qword ptr [rbx+0x30]
0x34a2: push qword ptr [rbx+0x28]
0x34a5: mov r10,qword ptr [rsp+0x38]
0x34aa: mov r9d,ebp
0x34ad: mov r8d,dword ptr [rbx]
0x34b0: mov rcx,r15
0x34b3: mov rdx,r14
0x34b6: mov rdi,rax
0x34b9: push r10
0x34bb: mov rsi,qword ptr [rsp+0x38]
0x34c0: call 0x1e90
0x34c5: mov eax,dword ptr [rsp+0x2c]
0x34c9: add rsp,0x20
0x34cd: test r12,r12
0x34d0: mov dword ptr [r13],eax
0x34d4: je 0x34df
0x34d6: mov r11,qword ptr [rsp+0x28]
0x34db: mov qword ptr [r12],r11
0x34df: mov rax,qword ptr [rsp+0x10]
0x34e4: add rsp,0x38
0x34e8: pop rbx
0x34e9: pop rbp
0x34ea: pop r12
0x34ec: pop r13
0x34ee: pop r14
0x34f0: pop r15
0x34f2: ret 
0x3500: mov rcx,rdx
0x3503: xor edx,edx
0x3505: jmp 0x3410
0x3510: mov eax,dword ptr [rip+0x203b42]
0x3516: push r12
0x3518: mov r12,qword ptr [rip+0x203b41]
0x351f: push rbp
0x3520: push rbx
0x3521: cmp eax,0x1
0x3524: jle 0x3551
0x3526: sub eax,0x2
0x3529: lea rbx,[r12+0x18]
0x352e: shl rax,0x4
0x3532: lea rbp,[r12+rax+0x28]
0x3537: nop word ptr [rax+rax]
0x3540: mov rdi,qword ptr [rbx]
0x3543: add rbx,0x10
0x3547: call 0x11f0
0x354c: cmp rbx,rbp
0x354f: jne 0x3540
0x3551: mov rdi,qword ptr [r12+0x8]
0x3556: lea rbx,[rip+0x203ba3]
0x355d: cmp rdi,rbx
0x3560: je 0x3579
0x3562: call 0x11f0
0x3567: mov qword ptr [rip+0x203afe],0x100
0x3572: mov qword ptr [rip+0x203aff],rbx
0x3579: lea rbx,[rip+0x203af0]
0x3580: cmp r12,rbx
0x3583: je 0x3594
0x3585: mov rdi,r12
0x3588: call 0x11f0
0x358d: mov qword ptr [rip+0x203acc],rbx
0x3594: pop rbx
0x3595: mov dword ptr [rip+0x203ab9],0x1
0x359f: pop rbp
0x35a0: pop r12
0x35a2: ret 
0x35b0: lea rcx,[rip+0x203c49]
0x35b7: mov rdx,-0x1
0x35be: jmp 0x30d0
0x35d0: lea rcx,[rip+0x203c29]
0x35d7: jmp 0x30d0
0x35e0: lea rcx,[rip+0x203c19]
0x35e7: mov rsi,rdi
0x35ea: mov rdx,-0x1
0x35f1: xor edi,edi
0x35f3: jmp 0x30d0
0x3600: lea rcx,[rip+0x203bf9]
0x3607: mov rdx,rsi
0x360a: mov rsi,rdi
0x360d: xor edi,edi
0x360f: jmp 0x30d0
0x3620: sub rsp,0x48
0x3624: mov rax,rdx
0x3627: mov rdx,qword ptr fs:0x28
0x3630: mov qword ptr [rsp+0x38],rdx
0x3635: xor edx,edx
0x3637: cmp esi,0xa
0x363a: je 0x36a4
0x363c: mov dword ptr [rsp],esi
0x363f: mov rcx,rsp
0x3642: mov rdx,-0x1
0x3649: mov rsi,rax
0x364c: mov qword ptr [rsp+0x4],0x0
0x3655: mov qword ptr [rsp+0xc],0x0
0x365e: mov qword ptr [rsp+0x14],0x0
0x3667: mov qword ptr [rsp+0x1c],0x0
0x3670: mov qword ptr [rsp+0x24],0x0
0x3679: mov qword ptr [rsp+0x2c],0x0
0x3682: mov dword ptr [rsp+0x34],0x0
0x368a: call 0x30d0
0x368f: mov rcx,qword ptr [rsp+0x38]
0x3694: xor rcx,qword ptr fs:0x28
0x369d: jne 0x36a9
0x369f: add rsp,0x48
0x36a3: ret 
0x36a4: call 0x1200
0x36a9: call 0x12c0
0x36ae: nop 
0x36b0: sub rsp,0x48
0x36b4: mov rax,rdx
0x36b7: mov rdx,rcx
0x36ba: mov rcx,qword ptr fs:0x28
0x36c3: mov qword ptr [rsp+0x38],rcx
0x36c8: xor ecx,ecx
0x36ca: cmp esi,0xa
0x36cd: je 0x3730
0x36cf: mov dword ptr [rsp],esi
0x36d2: mov rcx,rsp
0x36d5: mov rsi,rax
0x36d8: mov qword ptr [rsp+0x4],0x0
0x36e1: mov qword ptr [rsp+0xc],0x0
0x36ea: mov qword ptr [rsp+0x14],0x0
0x36f3: mov qword ptr [rsp+0x1c],0x0
0x36fc: mov qword ptr [rsp+0x24],0x0
0x3705: mov qword ptr [rsp+0x2c],0x0
0x370e: mov dword ptr [rsp+0x34],0x0
0x3716: call 0x30d0
0x371b: mov rdx,qword ptr [rsp+0x38]
0x3720: xor rdx,qword ptr fs:0x28
0x3729: jne 0x3735
0x372b: add rsp,0x48
0x372f: ret 
0x3730: call 0x1200
0x3735: call 0x12c0
0x373a: nop word ptr [rax+rax]
0x3740: mov rdx,rsi
0x3743: mov esi,edi
0x3745: xor edi,edi
0x3747: jmp 0x3620
0x3750: mov rcx,rdx
0x3753: mov rdx,rsi
0x3756: mov esi,edi
0x3758: xor edi,edi
0x375a: jmp 0x36b0
0x3760: sub rsp,0x48
0x3764: mov ecx,edx
0x3766: mov rax,qword ptr fs:0x28
0x376f: mov qword ptr [rsp+0x38],rax
0x3774: xor eax,eax
0x3776: mov rax,qword ptr [rip+0x203ab3]
0x377d: mov r8,rsp
0x3780: and ecx,0x1f
0x3783: movdqa xmm0,xmmword ptr [rip+0x203a75]
0x378b: mov qword ptr [rsp+0x30],rax
0x3790: mov eax,edx
0x3792: movaps xmmword ptr [rsp],xmm0
0x3796: shr al,0x5
0x3799: movzx eax,al
0x379c: lea r9,[r8+rax*4+0x8]
0x37a1: movdqa xmm0,xmmword ptr [rip+0x203a67]
0x37a9: movaps xmmword ptr [rsp+0x10],xmm0
0x37ae: movdqa xmm0,xmmword ptr [rip+0x203a6a]
0x37b6: movaps xmmword ptr [rsp+0x20],xmm0
0x37bb: mov edx,dword ptr [r9]
0x37be: mov eax,edx
0x37c0: shr eax,cl
0x37c2: not eax
0x37c4: and eax,0x1
0x37c7: shl eax,cl
0x37c9: mov rcx,r8
0x37cc: xor eax,edx
0x37ce: mov rdx,rsi
0x37d1: mov rsi,rdi
0x37d4: mov dword ptr [r9],eax
0x37d7: xor edi,edi
0x37d9: call 0x30d0
0x37de: mov rsi,qword ptr [rsp+0x38]
0x37e3: xor rsi,qword ptr fs:0x28
0x37ec: jne 0x37f3
0x37ee: add rsp,0x48
0x37f2: ret 
0x37f3: call 0x12c0
0x37f8: nop dword ptr [rax+rax]
0x3800: movsx edx,sil
0x3804: mov rsi,-0x1
0x380b: jmp 0x3760
0x3810: mov edx,0x3a
0x3815: mov rsi,-0x1
0x381c: jmp 0x3760
0x3830: mov edx,0x3a
0x3835: jmp 0x3760
0x3840: sub rsp,0x48
0x3844: mov rax,rdx
0x3847: mov rdx,qword ptr fs:0x28
0x3850: mov qword ptr [rsp+0x38],rdx
0x3855: xor edx,edx
0x3857: cmp esi,0xa
0x385a: je 0x38c4
0x385c: mov dword ptr [rsp],esi
0x385f: mov rcx,rsp
0x3862: mov rdx,-0x1
0x3869: mov rsi,rax
0x386c: mov qword ptr [rsp+0x4],0x0
0x3875: mov qword ptr [rsp+0xc],0x4000000
0x387e: mov qword ptr [rsp+0x14],0x0
0x3887: mov qword ptr [rsp+0x1c],0x0
0x3890: mov qword ptr [rsp+0x24],0x0
0x3899: mov qword ptr [rsp+0x2c],0x0
0x38a2: mov dword ptr [rsp+0x34],0x0
0x38aa: call 0x30d0
0x38af: mov rcx,qword ptr [rsp+0x38]
0x38b4: xor rcx,qword ptr fs:0x28
0x38bd: jne 0x38c9
0x38bf: add rsp,0x48
0x38c3: ret 
0x38c4: call 0x1200
0x38c9: call 0x12c0
0x38ce: nop 
0x38d0: sub rsp,0x48
0x38d4: mov r9,rcx
0x38d7: mov rcx,qword ptr [rip+0x203952]
0x38de: movdqa xmm0,xmmword ptr [rip+0x20391a]
0x38e6: mov rax,qword ptr fs:0x28
0x38ef: mov qword ptr [rsp+0x38],rax
0x38f4: xor eax,eax
0x38f6: movaps xmmword ptr [rsp],xmm0
0x38fa: test rsi,rsi
0x38fd: mov qword ptr [rsp+0x30],rcx
0x3902: mov dword ptr [rsp],0xa
0x3909: movdqa xmm0,xmmword ptr [rip+0x2038ff]
0x3911: movaps xmmword ptr [rsp+0x10],xmm0
0x3916: movdqa xmm0,xmmword ptr [rip+0x203902]
0x391e: movaps xmmword ptr [rsp+0x20],xmm0
0x3923: je 0x3957
0x3925: test rdx,rdx
0x3928: je 0x3957
0x392a: mov qword ptr [rsp+0x28],rsi
0x392f: mov qword ptr [rsp+0x30],rdx
0x3934: mov rcx,rsp
0x3937: mov rdx,r8
0x393a: mov rsi,r9
0x393d: call 0x30d0
0x3942: mov rdi,qword ptr [rsp+0x38]
0x3947: xor rdi,qword ptr fs:0x28
0x3950: jne 0x395c
0x3952: add rsp,0x48
0x3956: ret 
0x3957: call 0x1200
0x395c: call 0x12c0
0x3961: nop dword ptr [rax+rax]
0x3966: nop word ptr cs:[rax+rax]
0x3970: mov r8,-0x1
0x3977: jmp 0x38d0
0x3980: mov rcx,rdx
0x3983: mov r8,-0x1
0x398a: mov rdx,rsi
0x398d: mov rsi,rdi
0x3990: xor edi,edi
0x3992: jmp 0x38d0
0x39a0: mov r8,rcx
0x39a3: mov rcx,rdx
0x39a6: mov rdx,rsi
0x39a9: mov rsi,rdi
0x39ac: xor edi,edi
0x39ae: jmp 0x38d0
0x39c0: lea rcx,[rip+0x203659]
0x39c7: jmp 0x30d0
0x39d0: lea rcx,[rip+0x203649]
0x39d7: mov rdx,rsi
0x39da: mov rsi,rdi
0x39dd: xor edi,edi
0x39df: jmp 0x30d0
0x39f0: lea rcx,[rip+0x203629]
0x39f7: mov rdx,-0x1
0x39fe: jmp 0x30d0
0x3b68: mov r8,rcx
0x3b6b: mov rcx,rdx
0x3b6e: lea rdx,[rip+0x12bf]
0x3b75: mov esi,0x1
0x3b7a: xor eax,eax
0x3b7c: call 0x1430
0x3b81: jmp 0x3a6c
0x3d7d: push r12
0x3d7f: push r15
0x3d81: push r14
0x3d83: mov r8,qword ptr [rsp+0x20]
0x3d88: mov rcx,rbx
0x3d8b: mov rdx,rax
0x3d8e: mov rdi,rbp
0x3d91: mov esi,0x1
0x3d96: xor eax,eax
0x3d98: call 0x1430
0x3d9d: add rsp,0x20
0x3da1: add rsp,0x28
0x3da5: pop rbx
0x3da6: pop rbp
0x3da7: pop r12
0x3da9: pop r13
0x3dab: pop r14
0x3dad: pop r15
0x3daf: ret 
0x3de9: push r12
0x3deb: push r15
0x3ded: push r14
0x3def: mov r9,qword ptr [rsp+0x28]
0x3df4: jmp 0x3d83
0x3e50: xor r9d,r9d
0x3e53: cmp qword ptr [r8],0x0
0x3e57: je 0x3e6b
0x3e59: nop dword ptr [rax]
0x3e60: add r9,0x1
0x3e64: cmp qword ptr [r8+r9*8],0x0
0x3e69: jne 0x3e60
0x3e6b: jmp 0x3a30
0x3e98: mov r11d,eax
0x3e9b: add r11,qword ptr [r10+0x10]
0x3e9f: add eax,0x8
0x3ea2: mov dword ptr [r10],eax
0x3ef0: push rbp
0x3ef1: push rbx
0x3ef2: mov r10d,0x20
0x3ef8: xor r11d,r11d
0x3efb: sub rsp,0xb8
0x3f02: mov rax,qword ptr fs:0x28
0x3f0b: mov qword ptr [rsp+0x78],rax
0x3f10: xor eax,eax
0x3f12: lea rax,[rsp+0xd0]
0x3f1a: mov qword ptr [rsp+0xa0],r8
0x3f22: lea rbx,[rsp+0xd0]
0x3f2a: lea r8,[rsp+0x20]
0x3f2f: mov qword ptr [rsp+0xa8],r9
0x3f37: mov dword ptr [rsp+0x8],0x20
0x3f3f: mov qword ptr [rsp+0x10],rax
0x3f44: lea rax,[rsp+0x80]
0x3f4c: xor r9d,r9d
0x3f4f: mov qword ptr [rsp+0x18],rax
0x3f54: mov rbp,rax
0x3f57: nop word ptr [rax+rax]
0x3f60: cmp r10d,0x2f
0x3f64: ja 0x3fbc
0x3f66: mov eax,r10d
0x3f69: mov r11d,0x1
0x3f6f: add r10d,0x8
0x3f73: add rax,rbp
0x3f76: mov rax,qword ptr [rax]
0x3f79: test rax,rax
0x3f7c: mov qword ptr [r8+r9*8],rax
0x3f80: je 0x3f8c
0x3f82: add r9,0x1
0x3f86: cmp r9,0xa
0x3f8a: jne 0x3f60
0x3f8c: test r11b,r11b
0x3f8f: jne 0x3fb5
0x3f91: call 0x3a30
0x3f96: mov rax,qword ptr [rsp+0x78]
0x3f9b: xor rax,qword ptr fs:0x28
0x3fa4: jne 0x3fb0
0x3fa6: add rsp,0xb8
0x3fad: pop rbx
0x3fae: pop rbp
0x3faf: ret 
0x3fb0: call 0x12c0
0x3fb5: mov dword ptr [rsp+0x8],r10d
0x3fba: jmp 0x3f91
0x3fbc: mov rax,rbx
0x3fbf: add rbx,0x8
0x3fc3: jmp 0x3f76
0x3fd0: push rbx
0x3fd1: lea rsi,[rip+0xeaa]
0x3fd8: mov edx,0x5
0x3fdd: xor edi,edi
0x3fdf: call 0x1290
0x3fe4: lea rdx,[rip+0xeac]
0x3feb: mov rsi,rax
0x3fee: mov edi,0x1
0x3ff3: xor eax,eax
0x3ff5: call 0x13d0
0x3ffa: lea rsi,[rip+0xeac]
0x4001: mov edx,0x5
0x4006: xor edi,edi
0x4008: call 0x1290
0x400d: lea rcx,[rip+0x82c]
0x4014: lea rdx,[rip+0x6c6]
0x401b: mov rsi,rax
0x401e: mov edi,0x1
0x4023: xor eax,eax
0x4025: call 0x13d0
0x402a: mov rbx,qword ptr [rip+0x203057]
0x4031: lea rsi,[rip+0x10a8]
0x4038: xor edi,edi
0x403a: mov edx,0x5
0x403f: call 0x1290
0x4044: mov rsi,rbx
0x4047: mov rdi,rax
0x404a: pop rbx
0x404b: jmp 0x1330
0x4050: push rbx
0x4051: mov rbx,rdi
0x4054: call 0x1370
0x4059: test rax,rax
0x405c: jne 0x4063
0x405e: test rbx,rbx
0x4061: jne 0x4065
0x4063: pop rbx
0x4064: ret 
0x4065: call 0x42a0
0x406a: nop word ptr [rax+rax]
0x4070: mov rax,rdi
0x4073: mul rsi
0x4076: mov rdi,rax
0x4079: seto al
0x407c: test rdi,rdi
0x407f: js 0x408b
0x4081: movzx eax,al
0x4084: test rax,rax
0x4087: jne 0x408b
0x4089: jmp 0x4050
0x408b: sub rsp,0x8
0x408f: call 0x42a0
0x4094: nop 
0x4096: nop word ptr cs:[rax+rax]
0x40a0: jmp 0x4050
0x40b9: test rdi,rdi
0x40bc: jne 0x40d8
0x40cb: test rbx,rbx
0x40ce: jne 0x40e1
0x40d8: call 0x11f0
0x40dd: xor eax,eax
0x40df: pop rbx
0x40e0: ret 
0x40e1: call 0x42a0
0x40e6: nop word ptr cs:[rax+rax]
0x40f0: mov rax,rsi
0x40f3: mul rdx
0x40f6: mov rsi,rax
0x40f9: seto al
0x40fc: test rsi,rsi
0x40ff: js 0x410b
0x4101: movzx eax,al
0x4104: test rax,rax
0x4107: jne 0x410b
0x4109: jmp 0x40b0
0x410b: sub rsp,0x8
0x410f: call 0x42a0
0x4114: nop 
0x4116: nop word ptr cs:[rax+rax]
0x4120: test rdi,rdi
0x4123: mov r9,rdx
0x4126: mov rcx,qword ptr [rsi]
0x4129: je 0x4160
0x412b: xor edx,edx
0x412d: movabsq rax,0x5555555555555554
0x4137: div r9
0x413a: cmp rax,rcx
0x413d: jbe 0x417b
0x413f: mov rax,rcx
0x4142: shr rax, 1
0x4145: lea rcx,[rax+rcx+0x1]
0x414a: mov qword ptr [rsi],rcx
0x414d: imul rcx,r9
0x4151: mov rsi,rcx
0x4154: jmp 0x40b0
0x4160: test rcx,rcx
0x4163: je 0x4188
0x4165: mov rax,rcx
0x4168: mul r9
0x416b: seto dl
0x416e: test rax,rax
0x4171: movzx edx,dl
0x4174: js 0x417b
0x4176: test rdx,rdx
0x4179: je 0x414a
0x417b: sub rsp,0x8
0x417f: call 0x42a0
0x4184: nop dword ptr [rax]
0x4188: xor edx,edx
0x418a: mov eax,0x80
0x418f: xor r8d,r8d
0x4192: div r9
0x4195: test rax,rax
0x4198: sete r8b
0x419c: lea rcx,[r8+rax]
0x41a0: jmp 0x4165
0x41b0: test rdi,rdi
0x41b3: mov rax,qword ptr [rsi]
0x41b6: je 0x41e0
0x41b8: movabsq rdx,0x5555555555555553
0x41c2: cmp rax,rdx
0x41c5: ja 0x41f1
0x41c7: mov rdx,rax
0x41ca: shr rdx, 1
0x41cd: lea rax,[rdx+rax+0x1]
0x41d2: mov qword ptr [rsi],rax
0x41d5: mov rsi,rax
0x41d8: jmp 0x40b0
0x41e0: test rax,rax
0x41e3: mov edx,0x80
0x41e8: cmove rax,rdx
0x41ec: test rax,rax
0x41ef: jns 0x41d2
0x41f1: sub rsp,0x8
0x41f5: call 0x42a0
0x41fa: nop word ptr [rax+rax]
0x4200: push rbx
0x4201: mov rbx,rdi
0x4204: call 0x4050
0x4209: mov rdx,rbx
0x420c: xor esi,esi
0x420e: mov rdi,rax
0x4211: pop rbx
0x4212: jmp 0x1310
0x4220: mov rax,rdi
0x4223: sub rsp,0x8
0x4227: mul rsi
0x422a: seto dl
0x422d: test rax,rax
0x4230: js 0x4249
0x4232: movzx edx,dl
0x4235: test rdx,rdx
0x4238: jne 0x4249
0x423a: call 0x1340
0x423f: test rax,rax
0x4242: je 0x4249
0x4244: add rsp,0x8
0x4248: ret 
0x4249: call 0x42a0
0x424e: nop 
0x4250: push rbp
0x4251: push rbx
0x4252: mov rbp,rdi
0x4255: mov rdi,rsi
0x4258: mov rbx,rsi
0x425b: sub rsp,0x8
0x425f: call 0x4050
0x4264: add rsp,0x8
0x4268: mov rdx,rbx
0x426b: mov rsi,rbp
0x426e: pop rbx
0x426f: pop rbp
0x4270: mov rdi,rax
0x4273: jmp 0x1350
0x4280: push rbx
0x4281: mov rbx,rdi
0x4284: call 0x12b0
0x4289: mov rdi,rbx
0x428c: lea rsi,[rax+0x1]
0x4290: pop rbx
0x4291: jmp 0x4250
0x42a0: lea rsi,[rip+0xee8]
0x42a7: sub rsp,0x8
0x42ab: mov edx,0x5
0x42b0: xor edi,edi
0x42b2: call 0x1290
0x42b7: mov edi,dword ptr [rip+0x202d5b]
0x42bd: lea rdx,[rip+0x634]
0x42c4: mov rcx,rax
0x42c7: xor esi,esi
0x42c9: xor eax,eax
0x42cb: call 0x13e0
0x42d0: call 0x1200
0x42d5: nop word ptr cs:[rax+rax]
0x42df: nop 
0x42e0: push r13
0x42e2: push r12
0x42e4: mov r13,rsi
0x42e7: push rbp
0x42e8: push rbx
0x42e9: mov rbx,rdi
0x42ec: mov r12,rdx
0x42ef: sub rsp,0x18
0x42f3: mov rax,qword ptr fs:0x28
0x42fc: mov qword ptr [rsp+0x8],rax
0x4301: xor eax,eax
0x4303: lea rax,[rsp+0x4]
0x4308: test rdi,rdi
0x430b: cmove rbx,rax
0x430f: mov rdi,rbx
0x4312: call 0x12e0
0x4317: cmp rax,-0x3
0x431b: mov rbp,rax
0x431e: jbe 0x4340
0x4320: test r12,r12
0x4323: je 0x4340
0x4325: xor edi,edi
0x4327: call 0x43f0
0x432c: test al,al
0x432e: jne 0x4340
0x4330: movzx eax,byte ptr [r13]
0x4335: mov ebp,0x1
0x433a: mov dword ptr [rbx],eax
0x433c: nop dword ptr [rax]
0x4340: mov rdx,qword ptr [rsp+0x8]
0x4345: xor rdx,qword ptr fs:0x28
0x434e: mov rax,rbp
0x4351: jne 0x435e
0x4353: add rsp,0x18
0x4357: pop rbx
0x4358: pop rbp
0x4359: pop r12
0x435b: pop r13
0x435d: ret 
0x435e: call 0x12c0
0x4363: nop word ptr cs:[rax+rax]
0x436d: nop dword ptr [rax]
0x4370: push r12
0x4372: push rbp
0x4373: mov rbp,rdi
0x4376: push rbx
0x4377: call 0x1250
0x437c: mov ebx,dword ptr [rbp]
0x437f: mov rdi,rbp
0x4382: mov r12,rax
0x4385: call 0x4490
0x438a: and ebx,0x20
0x438d: test ebx,ebx
0x438f: jne 0x43a8
0x4391: test eax,eax
0x4393: je 0x439f
0x4395: test r12,r12
0x4398: mov eax,0xffffffff
0x439d: je 0x43d8
0x439f: pop rbx
0x43a0: pop rbp
0x43a1: pop r12
0x43a3: ret 
0x43a8: test eax,eax
0x43aa: jne 0x43c8
0x43ac: call 0x1210
0x43b1: mov dword ptr [rax],0x0
0x43b7: mov eax,0xffffffff
0x43bc: pop rbx
0x43bd: pop rbp
0x43be: pop r12
0x43c0: ret 
0x43c8: pop rbx
0x43c9: mov eax,0xffffffff
0x43ce: pop rbp
0x43cf: pop r12
0x43d1: ret 
0x43d8: call 0x1210
0x43dd: cmp dword ptr [rax],0x9
0x43e0: pop rbx
0x43e1: pop rbp
0x43e2: pop r12
0x43e4: setne al
0x43e7: movzx eax,al
0x43ea: neg eax
0x43ec: ret 
0x43f0: sub rsp,0x8
0x43f4: xor esi,esi
0x43f6: call 0x13c0
0x43fb: mov rdx,rax
0x43fe: mov eax,0x1
0x4403: test rdx,rdx
0x4406: je 0x4425
0x4408: lea rdi,[rip+0xd91]
0x440f: mov ecx,0x2
0x4414: mov rsi,rdx
0x4417: rep cmpsb [rsi],es:[rdi]
0x4419: seta cl
0x441c: sbb cl,0x0
0x441f: xor eax,eax
0x4421: test cl,cl
0x4423: jne 0x4430
0x4425: add rsp,0x8
0x4429: ret 
0x4430: lea rdi,[rip+0xd6b]
0x4437: mov ecx,0x6
0x443c: mov rsi,rdx
0x443f: rep cmpsb [rsi],es:[rdi]
0x4441: seta al
0x4444: sbb al,0x0
0x4446: test al,al
0x4448: setne al
0x444b: add rsp,0x8
0x444f: ret 
0x4450: sub rsp,0x8
0x4454: mov edi,0xe
0x4459: call 0x1390
0x445e: test rax,rax
0x4461: je 0x4480
0x4463: cmp byte ptr [rax],0x0
0x4466: lea rdx,[rip+0xd3b]
0x446d: cmove rax,rdx
0x4471: add rsp,0x8
0x4475: ret 
0x4480: lea rax,[rip+0xd21]
0x4487: add rsp,0x8
0x448b: ret 
0x4490: push r12
0x4492: push rbp
0x4493: push rbx
0x4494: mov rbx,rdi
0x4497: call 0x1360
0x449c: test eax,eax
0x449e: mov rdi,rbx
0x44a1: js 0x44f7
0x44a3: call 0x13a0
0x44a8: test eax,eax
0x44aa: jne 0x44d8
0x44ac: mov rdi,rbx
0x44af: call 0x4510
0x44b4: test eax,eax
0x44b6: je 0x44f4
0x44b8: call 0x1210
0x44bd: mov r12d,dword ptr [rax]
0x44c0: mov rdi,rbx
0x44c3: mov rbp,rax
0x44c6: call 0x1270
0x44cb: test r12d,r12d
0x44ce: jne 0x4500
0x44d0: pop rbx
0x44d1: pop rbp
0x44d2: pop r12
0x44d4: ret 
0x44d8: mov rdi,rbx
0x44db: call 0x1360
0x44e0: xor esi,esi
0x44e2: mov edx,0x1
0x44e7: mov edi,eax
0x44e9: call 0x1300
0x44ee: cmp rax,-0x1
0x44f2: jne 0x44ac
0x44f4: mov rdi,rbx
0x44f7: pop rbx
0x44f8: pop rbp
0x44f9: pop r12
0x44fb: jmp 0x1270
0x4500: mov dword ptr [rbp],r12d
0x4504: mov eax,0xffffffff
0x4509: jmp 0x44d0
0x4510: test rdi,rdi
0x4513: push rbx
0x4514: mov rbx,rdi
0x4517: je 0x452a
0x4519: call 0x13a0
0x451e: test eax,eax
0x4520: je 0x452a
0x4522: test dword ptr [rbx],0x100
0x4528: jne 0x4538
0x452a: mov rdi,rbx
0x452d: pop rbx
0x452e: jmp 0x1380
0x4538: mov rdi,rbx
0x453b: mov edx,0x1
0x4540: xor esi,esi
0x4542: call 0x4550
0x4547: mov rdi,rbx
0x454a: pop rbx
0x454b: jmp 0x1380
0x4550: mov rax,qword ptr [rdi+0x8]
0x4554: cmp qword ptr [rdi+0x10],rax
0x4558: je 0x4560
0x455a: jmp 0x13f0
0x4560: mov rax,qword ptr [rdi+0x20]
0x4564: cmp qword ptr [rdi+0x28],rax
0x4568: jne 0x455a
0x456a: cmp qword ptr [rdi+0x48],0x0
0x456f: jne 0x455a
0x4571: push r12
0x4573: push rbp
0x4574: mov r12d,edx
0x4577: push rbx
0x4578: mov rbp,rsi
0x457b: mov rbx,rdi
0x457e: call 0x1360
0x4583: mov edx,r12d
0x4586: mov rsi,rbp
0x4589: mov edi,eax
0x458b: call 0x1300
0x4590: cmp rax,-0x1
0x4594: je 0x45a2
0x4596: and dword ptr [rbx],-0x11
0x4599: mov qword ptr [rbx+0x90],rax
0x45a0: xor eax,eax
0x45a2: pop rbx
0x45a3: pop rbp
0x45a4: pop r12
0x45a6: ret 
0x45b0: push r15
0x45b2: push r14
0x45b4: mov r15,rdx
0x45b7: push r13
0x45b9: push r12
0x45bb: lea r12,[rip+0x2025ee]
0x45c2: push rbp
0x45c3: lea rbp,[rip+0x2025ee]
0x45ca: push rbx
0x45cb: mov r13d,edi
0x45ce: mov r14,rsi
0x45d1: sub rbp,r12
0x45d4: sub rsp,0x8
0x45d8: sar rbp,0x3
0x45dc: call 0x11c0
0x45e1: test rbp,rbp
0x45e4: je 0x4606
0x45e6: xor ebx,ebx
0x45e8: nop dword ptr [rax+rax]
0x45f0: mov rdx,r15
0x45f3: mov rsi,r14
0x45f6: mov edi,r13d
0x45f9: call qword ptr [r12+rbx*8]
0x45fd: add rbx,0x1
0x4601: cmp rbp,rbx
0x4604: jne 0x45f0
0x4606: add rsp,0x8
0x460a: pop rbx
0x460b: pop rbp
0x460c: pop r12
0x460e: pop r13
0x4610: pop r14
0x4612: pop r15
0x4614: ret 
0x4620: rep ret 
