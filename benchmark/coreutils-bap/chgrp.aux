0x18e8: sub rsp,0x8
0x18ec: mov rax,qword ptr [rip+0x20c6f5]
0x18f3: test rax,rax
0x18f6: je 0x18fa
0x18f8: call rax
0x18fa: add rsp,0x8
0x18fe: ret 
0x1906: jmp qword ptr [rip+0x20c4ac]
0x1950: jmp qword ptr [rip+0x20c48a]
0x1960: jmp qword ptr [rip+0x20c482]
0x1970: jmp qword ptr [rip+0x20c47a]
0x19b0: jmp qword ptr [rip+0x20c45a]
0x19e0: jmp qword ptr [rip+0x20c442]
0x1a40: jmp qword ptr [rip+0x20c412]
0x1a60: jmp qword ptr [rip+0x20c402]
0x1ab0: jmp qword ptr [rip+0x20c3da]
0x1b10: jmp qword ptr [rip+0x20c3aa]
0x1b70: jmp qword ptr [rip+0x20c37a]
0x1bb0: jmp qword ptr [rip+0x20c35a]
0x1bc0: jmp qword ptr [rip+0x20c352]
0x1be0: jmp qword ptr [rip+0x20c342]
0x1c60: jmp qword ptr [rip+0x20c302]
0x1d00: jmp qword ptr [rip+0x20c2b2]
0x1d10: jmp qword ptr [rip+0x20c2aa]
0x1d38: jmp qword ptr [rip+0x20c2ba]
0x20ad: lea rsi,[rip+0x8ce4]
0x20b4: mov edx,0x5
0x20b9: xor edi,edi
0x20bb: mov rbp,rax
0x20be: call 0x19f0
0x20c3: mov rbx,rax
0x20c6: call 0x1930
0x20cb: mov esi,dword ptr [rax]
0x20cd: mov rcx,rbp
0x20d0: mov rdx,rbx
0x20d3: mov edi,0x1
0x20d8: xor eax,eax
0x20da: call 0x1c40
0x2133: lea rsi,[rip+0x83fa]
0x213a: mov rbx,rax
0x213d: mov edx,0x5
0x2142: xor edi,edi
0x2144: call 0x19f0
0x2149: mov rcx,rbx
0x214c: mov rdx,rax
0x214f: xor esi,esi
0x2151: mov edi,0x1
0x2156: xor eax,eax
0x2158: call 0x1c40
0x2194: jmp 0x1e2b
0x21c7: lea rsi,[rip+0x834d]
0x21ce: mov rbx,rax
0x21d1: xor edi,edi
0x21d3: mov edx,0x5
0x21d8: call 0x19f0
0x21dd: mov rcx,rbx
0x21e0: mov rdx,rax
0x21e3: xor esi,esi
0x21e5: xor edi,edi
0x21e7: xor eax,eax
0x21e9: call 0x1c40
0x21ee: jmp 0x1e2b
0x21f3: call 0x1a40
0x2205: lea rsi,[rip+0x8b8c]
0x220c: mov edx,0x5
0x2211: xor edi,edi
0x2213: mov rbp,rax
0x2216: call 0x19f0
0x221b: mov rbx,rax
0x221e: call 0x1930
0x2223: mov esi,dword ptr [rax]
0x2225: mov rcx,rbp
0x2228: mov rdx,rbx
0x222b: mov edi,0x1
0x2230: xor eax,eax
0x2232: call 0x1c40
0x2237: nop word ptr [rax+rax]
0x226a: hlt 
0x226b: nop dword ptr [rax+rax]
0x2270: lea rdi,[rip+0x20be09]
0x2277: push rbp
0x2278: lea rax,[rip+0x20be01]
0x227f: cmp rax,rdi
0x2282: mov rbp,rsp
0x2285: je 0x22a0
0x2287: mov rax,qword ptr [rip+0x20bd4a]
0x228e: test rax,rax
0x2291: je 0x22a0
0x2293: pop rbp
0x2294: jmp rax
0x22a0: pop rbp
0x22a1: ret 
0x22b0: lea rdi,[rip+0x20bdc9]
0x22b7: lea rsi,[rip+0x20bdc2]
0x22be: push rbp
0x22bf: sub rsi,rdi
0x22c2: mov rbp,rsp
0x22c5: sar rsi,0x3
0x22c9: mov rax,rsi
0x22cc: shr rax,0x3f
0x22d0: add rsi,rax
0x22d3: sar rsi, 1
0x22d6: je 0x22f0
0x22d8: mov rax,qword ptr [rip+0x20bd11]
0x22df: test rax,rax
0x22e2: je 0x22f0
0x22e4: pop rbp
0x22e5: jmp rax
0x22f0: pop rbp
0x22f1: ret 
0x2311: push rbp
0x2312: mov rbp,rsp
0x2315: je 0x2323
0x2317: mov rdi,qword ptr [rip+0x20bcea]
0x231e: call 0x1d38
0x2323: call 0x2270
0x2328: mov byte ptr [rip+0x20bd99],0x1
0x232f: pop rbp
0x2330: ret 
0x2340: push rbp
0x2341: mov rbp,rsp
0x2344: pop rbp
0x2345: jmp 0x22b0
0x27d9: test rsi,rsi
0x27dc: je 0x2830
0x27de: mov rbx,rsi
0x27e1: mov rbp,rdi
0x27e4: call 0x1a10
0x27e9: mov rdi,rbx
0x27ec: mov r12,rax
0x27ef: call 0x1a10
0x27f4: lea rdi,[r12+rax+0x2]
0x27f9: call 0x5d00
0x27fe: mov rsi,rbp
0x2801: mov rdi,rax
0x2804: mov r12,rax
0x2807: call 0x19e0
0x280c: lea rdi,[rax+0x1]
0x2810: mov byte ptr [rax],0x3a
0x2813: mov rsi,rbx
0x2816: call 0x1960
0x2880: push rbx
0x2881: mov rbx,rdi
0x2884: mov rdi,qword ptr [rdi+0x18]
0x2888: call 0x1d30
0x288d: mov rdi,qword ptr [rbx+0x20]
0x2891: pop rbx
0x2892: jmp 0x1d30
0x28ef: call 0x1a40
0x28f4: nop 
0x28f6: nop word ptr cs:[rax+rax]
0x294f: call 0x1a40
0x2954: nop 
0x2956: nop word ptr cs:[rax+rax]
0x2b42: mov rdi,qword ptr [rsp+0x10]
0x2b47: call 0x27d0
0x2b4c: mov qword ptr [rsp+0x20],rax
0x2b51: mov eax,dword ptr [rsp+0x2c]
0x2b55: cmp eax,0x3
0x2b58: je 0x3070
0x2b5e: cmp eax,0x4
0x2b61: jne 0x32c0
0x2b67: lea rsi,[rip+0x85c2]
0x2b6e: mov edx,0x5
0x2b73: xor edi,edi
0x2b75: call 0x19f0
0x2b7a: mov r12,rax
0x2b7d: nop dword ptr [rax]
0x2b8f: mov r14,qword ptr [rsp+0x20]
0x2b94: mov r8,qword ptr [rsp+0x18]
0x2b99: mov rdx,rax
0x2b9c: mov rsi,r12
0x2b9f: mov edi,0x1
0x2ba4: xor eax,eax
0x2ba6: mov rcx,r14
0x2ba9: call 0x1c20
0x2bae: mov rdi,r14
0x2bb1: call 0x1d30
0x2bb6: mov rdi,qword ptr [rsp+0x18]
0x2bbb: call 0x1d30
0x2bc0: mov rdi,qword ptr [rsp+0x10]
0x2bc5: call 0x1d30
0x2bca: mov rdi,r13
0x2bcd: call 0x1d30
0x2ee8: lea rsi,[rip+0x7fb1]
0x2eef: mov rbx,rax
0x2ef2: mov edx,0x5
0x2ef7: xor edi,edi
0x2ef9: call 0x19f0
0x2efe: mov rcx,rbx
0x2f01: mov rdx,rax
0x2f04: xor esi,esi
0x2f06: xor edi,edi
0x2f08: xor eax,eax
0x2f0a: call 0x1c40
0x2f0f: lea rsi,[rip+0x7ffa]
0x2f16: mov edx,0x5
0x2f1b: xor edi,edi
0x2f1d: xor r15d,r15d
0x2f20: call 0x19f0
0x2f25: xor esi,esi
0x2f27: mov rdx,rax
0x2f2a: xor edi,edi
0x2f2c: xor eax,eax
0x2f2e: call 0x1c40
0x2f33: jmp 0x2e50
0x308a: lea rsi,[rip+0x7fc7]
0x3091: xor edi,edi
0x3093: call 0x19f0
0x3098: mov r12,rax
0x309b: jmp 0x2b80
0x30f7: cmp dword ptr [rsp+0x10],-0x1
0x30fc: mov r14,rax
0x30ff: mov edx,0x5
0x3104: je 0x3278
0x310a: lea rsi,[rip+0x7ce6]
0x3111: xor edi,edi
0x3113: call 0x19f0
0x3118: mov r12,rax
0x311b: call 0x1930
0x3120: mov esi,dword ptr [rax]
0x3122: xor edi,edi
0x3124: xor eax,eax
0x3126: mov rcx,r14
0x3129: mov rdx,r12
0x312c: call 0x1c40
0x3131: mov eax,dword ptr [rbx]
0x3133: cmp eax,0x2
0x3136: jne 0x2aeb
0x313c: jmp 0x2bd2
0x3278: lea rsi,[rip+0x7b91]
0x327f: xor edi,edi
0x3281: call 0x19f0
0x3286: mov r12,rax
0x3289: jmp 0x311b
0x32c0: lea rsi,[rip+0x7d41]
0x32c7: mov edx,0x5
0x32cc: xor edi,edi
0x32ce: call 0x19f0
0x32d3: mov r12,rax
0x32d6: jmp 0x2b80
0x335a: lea rsi,[rip+0x7def]
0x3361: mov r12,rax
0x3364: xor edi,edi
0x3366: mov edx,0x5
0x336b: call 0x19f0
0x3370: mov rdx,r12
0x3373: mov rsi,rax
0x3376: mov edi,0x1
0x337b: xor eax,eax
0x337d: call 0x1c20
0x3382: jmp 0x2bc0
0x3405: mov edx,0x5
0x340a: mov r14,rax
0x340d: lea rsi,[rip+0x79cd]
0x3414: jmp 0x327f
0x34c7: mov rdx,qword ptr [rsp+0x8]
0x34cc: xor edi,edi
0x34ce: mov esi,0x4
0x34d3: mov rbp,rax
0x34d6: call 0x5250
0x34db: lea rsi,[rip+0x79ee]
0x34e2: mov rbx,rax
0x34e5: xor edi,edi
0x34e7: mov edx,0x5
0x34ec: call 0x19f0
0x34f1: mov r8,rbp
0x34f4: mov rdx,rax
0x34f7: mov rcx,rbx
0x34fa: xor esi,esi
0x34fc: xor edi,edi
0x34fe: xor eax,eax
0x3500: call 0x1c40
0x3505: jmp 0x2f0f
0x369a: call 0x1a40
0x380b: jmp 0x3789
0x3810: mov qword ptr [rip+0x20a8d9],rdi
0x3817: ret 
0x3820: mov byte ptr [rip+0x20a8c1],dil
0x3827: ret 
0x3830: push rbp
0x3831: push rbx
0x3832: sub rsp,0x8
0x3836: mov rdi,qword ptr [rip+0x20a84b]
0x383d: call 0x88e0
0x3842: test eax,eax
0x3844: je 0x385c
0x3846: call 0x1930
0x384b: cmp byte ptr [rip+0x20a896],0x0
0x3852: mov rbx,rax
0x3855: je 0x3873
0x3857: cmp dword ptr [rax],0x20
0x385a: jne 0x3873
0x385c: mov rdi,qword ptr [rip+0x20a85d]
0x3863: call 0x88e0
0x3868: test eax,eax
0x386a: jne 0x38b2
0x386c: add rsp,0x8
0x3870: pop rbx
0x3871: pop rbp
0x3872: ret 
0x3873: lea rsi,[rip+0x793f]
0x387a: xor edi,edi
0x387c: mov edx,0x5
0x3881: call 0x19f0
0x3886: mov rdi,qword ptr [rip+0x20a863]
0x388d: mov rbp,rax
0x3890: test rdi,rdi
0x3893: je 0x38bd
0x3895: call 0x5440
0x389a: mov esi,dword ptr [rbx]
0x389c: lea rdx,[rip+0x7922]
0x38a3: mov rcx,rax
0x38a6: mov r8,rbp
0x38a9: xor edi,edi
0x38ab: xor eax,eax
0x38ad: call 0x1c40
0x38b2: mov edi,dword ptr [rip+0x20a760]
0x38b8: call 0x1950
0x38bd: mov esi,dword ptr [rbx]
0x38bf: lea rdx,[rip+0x6c7d]
0x38c6: mov rcx,rax
0x38c9: xor edi,edi
0x38cb: xor eax,eax
0x38cd: call 0x1c40
0x38d2: jmp 0x38b2
0x39cf: nop 
0x39d0: push rbp
0x39d1: push rbx
0x39d2: mov rbp,rdi
0x39d5: mov ebx,esi
0x39d7: sub rsp,0x8
0x39db: call 0x9e60
0x39e0: movzx edx,byte ptr [rax]
0x39e3: and edx,-0x21
0x39e6: cmp dl,0x55
0x39e9: je 0x3a60
0x39eb: cmp dl,0x47
0x39ee: je 0x3a10
0x39f0: lea rax,[rip+0x782c]
0x39f7: lea rdx,[rip+0x7827]
0x39fe: cmp ebx,0x9
0x3a01: cmovne rax,rdx
0x3a05: add rsp,0x8
0x3a09: pop rbx
0x3a0a: pop rbp
0x3a0b: ret 
0x3a10: movzx edx,byte ptr [rax+0x1]
0x3a14: and edx,-0x21
0x3a17: cmp dl,0x42
0x3a1a: jne 0x39f0
0x3a1c: cmp byte ptr [rax+0x2],0x31
0x3a20: jne 0x39f0
0x3a22: cmp byte ptr [rax+0x3],0x38
0x3a26: jne 0x39f0
0x3a28: cmp byte ptr [rax+0x4],0x30
0x3a2c: jne 0x39f0
0x3a2e: cmp byte ptr [rax+0x5],0x33
0x3a32: jne 0x39f0
0x3a34: cmp byte ptr [rax+0x6],0x30
0x3a38: jne 0x39f0
0x3a3a: cmp byte ptr [rax+0x7],0x0
0x3a3e: jne 0x39f0
0x3a40: cmp byte ptr [rbp],0x60
0x3a44: lea rax,[rip+0x77d1]
0x3a4b: lea rdx,[rip+0x77ce]
0x3a52: cmovne rax,rdx
0x3a56: add rsp,0x8
0x3a5a: pop rbx
0x3a5b: pop rbp
0x3a5c: ret 
0x3a60: movzx edx,byte ptr [rax+0x1]
0x3a64: and edx,-0x21
0x3a67: cmp dl,0x54
0x3a6a: jne 0x39f0
0x3a6c: movzx edx,byte ptr [rax+0x2]
0x3a70: and edx,-0x21
0x3a73: cmp dl,0x46
0x3a76: jne 0x39f0
0x3a7c: cmp byte ptr [rax+0x3],0x2d
0x3a80: jne 0x39f0
0x3a86: cmp byte ptr [rax+0x4],0x38
0x3a8a: jne 0x39f0
0x3a90: cmp byte ptr [rax+0x5],0x0
0x3a94: jne 0x39f0
0x3a9a: cmp byte ptr [rbp],0x60
0x3a9e: lea rax,[rip+0x776f]
0x3aa5: lea rdx,[rip+0x776c]
0x3aac: cmovne rax,rdx
0x3ab0: add rsp,0x8
0x3ab4: pop rbx
0x3ab5: pop rbp
0x3ab6: ret 
0x3b93: xor r11d,r11d
0x3b96: mov rax,rbp
0x3b99: mov r8d,r12d
0x3b9c: mov rbp,r11
0x3b9f: mov r11,rax
0x3ba2: nop word ptr [rax+rax]
0x3ba8: cmp r11,rbp
0x3bab: setne r12b
0x3baf: cmp r11,-0x1
0x3bb3: jne 0x3bc2
0x3bb5: mov rax,qword ptr [rsp+0x10]
0x3bba: cmp byte ptr [rax+rbp],0x0
0x3bbe: setne r12b
0x3bc2: test r12b,r12b
0x3bc5: je 0x4220
0x3bcb: cmp dword ptr [rsp+0x8],0x2
0x3bd0: mov rdi,qword ptr [rsp+0x10]
0x3bd5: lea r9,[rdi+rbp]
0x3bd9: setne al
0x3bdc: and al,byte ptr [rsp+0xd]
0x3be0: mov r10d,eax
0x3be3: je 0x3c90
0x3be9: mov rax,qword ptr [rsp+0x18]
0x3bee: test rax,rax
0x3bf1: je 0x4020
0x3bf7: cmp r11,-0x1
0x3bfb: lea rbx,[rbp+rax]
0x3c00: jne 0x3c30
0x3c02: cmp rax,0x1
0x3c06: jbe 0x3c30
0x3c08: mov byte ptr [rsp+0x38],r8b
0x3c0d: mov byte ptr [rsp+0x30],r10b
0x3c12: mov qword ptr [rsp+0x28],r9
0x3c17: call 0x1a10
0x3c1c: movzx r8d,byte ptr [rsp+0x38]
0x3c22: movzx r10d,byte ptr [rsp+0x30]
0x3c28: mov r11,rax
0x3c2b: mov r9,qword ptr [rsp+0x28]
0x3c30: cmp rbx,r11
0x3c33: mov byte ptr [rsp+0x28],r10b
0x3c38: ja 0x41f0
0x3c3e: mov rdx,qword ptr [rsp+0x18]
0x3c43: mov rsi,qword ptr [rsp+0x48]
0x3c48: mov rdi,r9
0x3c4b: mov qword ptr [rsp+0x40],r11
0x3c50: mov byte ptr [rsp+0x38],r8b
0x3c55: mov qword ptr [rsp+0x30],r9
0x3c5a: call 0x1b10
0x3c5f: test eax,eax
0x3c61: mov r9,qword ptr [rsp+0x30]
0x3c66: movzx r8d,byte ptr [rsp+0x38]
0x3c6c: mov r11,qword ptr [rsp+0x40]
0x3c71: jne 0x41f0
0x3c77: cmp byte ptr [rsp+0xf],0x0
0x3c7c: movzx r10d,byte ptr [rsp+0x28]
0x3c82: jne 0x4c05
0x3c88: nop dword ptr [rax+rax]
0x3c90: movzx ebx,byte ptr [r9]
0x3c94: cmp bl,0x7e
0x3c97: ja 0x3fb8
0x3c9d: lea rcx,[rip+0x7608]
0x3ca4: movzx edx,bl
0x3ca7: movsxd rax,dword ptr [rcx+rdx*4]
0x3cab: add rax,rcx
0x3cae: jmp rax
0x3ce8: cmp byte ptr [rsp+0xd],0x1
0x3ced: jne 0x3e02
0x3cf3: test dl,dl
0x3cf5: jne 0x3e02
0x3cfb: mov rsi,qword ptr [rsp+0x20]
0x3d00: test rsi,rsi
0x3d03: je 0x3d19
0x3d05: mov edx,ebx
0x3d07: shr dl,0x5
0x3d0a: movzx edx,dl
0x3d0d: mov edx,dword ptr [rsi+rdx*4]
0x3d10: btl edx,ebx
0x3d13: jb 0x3e63
0x3d19: test r10b,r10b
0x3d1c: jne 0x3e63
0x3d22: xor eax,0x1
0x3d25: add rbp,0x1
0x3d29: and eax,r8d
0x3d2c: test al,al
0x3d2e: je 0x3d50
0x3d30: cmp r13,r15
0x3d33: jbe 0x3d3a
0x3d35: mov byte ptr [r14+r15],0x27
0x3d3a: lea rax,[r15+0x1]
0x3d3e: cmp r13,rax
0x3d41: jbe 0x3d49
0x3d43: mov byte ptr [r14+r15+0x1],0x27
0x3d49: add r15,0x2
0x3d4d: xor r8d,r8d
0x3d50: cmp r15,r13
0x3d53: jae 0x3d59
0x3d55: mov byte ptr [r14+r15],bl
0x3d59: movzx edi,byte ptr [rsp+0xe]
0x3d5e: add r15,0x1
0x3d62: mov eax,0x0
0x3d67: test r12b,r12b
0x3d6a: cmove edi,eax
0x3d6d: mov byte ptr [rsp+0xe],dil
0x3d72: jmp 0x3ba8
0x3e02: cmp byte ptr [rsp+0xf],0x0
0x3e07: jne 0x3cfb
0x3e0d: jmp 0x3d19
0x3e63: cmp dword ptr [rsp+0x8],0x2
0x3e68: sete dl
0x3e6b: cmp byte ptr [rsp+0xf],0x0
0x3e70: mov eax,edx
0x3e72: jne 0x46c8
0x3e78: mov eax,r8d
0x3e7b: xor eax,0x1
0x3e7e: and al,dl
0x3e80: je 0x3eb1
0x3e82: cmp r13,r15
0x3e85: jbe 0x3e8c
0x3e87: mov byte ptr [r14+r15],0x27
0x3e8c: lea rdx,[r15+0x1]
0x3e90: cmp r13,rdx
0x3e93: jbe 0x3e9b
0x3e95: mov byte ptr [r14+r15+0x1],0x24
0x3e9b: lea rdx,[r15+0x2]
0x3e9f: cmp r13,rdx
0x3ea2: jbe 0x3eaa
0x3ea4: mov byte ptr [r14+r15+0x2],0x27
0x3eaa: add r15,0x3
0x3eae: mov r8d,eax
0x3eb1: cmp r13,r15
0x3eb4: jbe 0x3ebb
0x3eb6: mov byte ptr [r14+r15],0x5c
0x3ebb: add r15,0x1
0x3ebf: add rbp,0x1
0x3ec3: jmp 0x3d50
0x3fb0: xor r10d,r10d
0x3fb3: nop dword ptr [rax+rax]
0x3fb8: cmp qword ptr [rsp+0x58],0x1
0x3fbe: jne 0x4368
0x3fc4: mov qword ptr [rsp+0x38],r11
0x3fc9: mov byte ptr [rsp+0x30],r8b
0x3fce: mov byte ptr [rsp+0x28],r10b
0x3fd3: call 0x1d20
0x3fd8: mov rcx,qword ptr [rax]
0x3fdb: movzx edx,bl
0x3fde: movzx r10d,byte ptr [rsp+0x28]
0x3fe4: movzx r8d,byte ptr [rsp+0x30]
0x3fea: mov r11,qword ptr [rsp+0x38]
0x3fef: mov edi,0x1
0x3ff4: movzx eax,word ptr [rcx+rdx*2]
0x3ff8: and ax,0x4000
0x3ffc: setne r12b
0x4000: sete al
0x4003: and al,byte ptr [rsp+0xd]
0x4007: test al,al
0x4009: jne 0x49a1
0x400f: cmp dword ptr [rsp+0x8],0x2
0x4014: sete dl
0x4017: jmp 0x3ce8
0x4020: movzx ebx,byte ptr [r9]
0x4024: cmp bl,0x7e
0x4027: ja 0x3fb0
0x4029: lea rcx,[rip+0x7478]
0x4030: movzx edx,bl
0x4033: movsxd rax,dword ptr [rcx+rdx*4]
0x4037: add rax,rcx
0x403a: jmp rax
0x41f0: xor r10d,r10d
0x41f3: jmp 0x3c90
0x4220: cmp dword ptr [rsp+0x8],0x2
0x4225: movzx ebx,byte ptr [rsp+0xf]
0x422a: mov r12d,r8d
0x422d: mov rbp,r11
0x4230: sete dl
0x4233: mov eax,ebx
0x4235: test r15,r15
0x4238: sete cl
0x423b: and eax,edx
0x423d: and al,cl
0x423f: jne 0x4ca6
0x4245: mov eax,ebx
0x4247: xor eax,0x1
0x424a: and dl,al
0x424c: je 0x4bbc
0x4252: cmp byte ptr [rsp+0x7c],0x0
0x4257: je 0x4bba
0x425d: cmp byte ptr [rsp+0xe],0x0
0x4262: jne 0x4c5d
0x4268: test r13,r13
0x426b: sete al
0x426e: cmp qword ptr [rsp+0x50],0x0
0x4274: setne dl
0x4277: and al,dl
0x4279: je 0x4c9c
0x427f: mov r13,qword ptr [rsp+0x50]
0x4284: lea rbx,[rip+0x6f9a]
0x428b: mov byte ptr [r14],0x27
0x428f: mov dword ptr [rsp+0x8],0x2
0x4297: mov r15d,0x1
0x429d: mov qword ptr [rsp+0x18],0x1
0x42a6: mov byte ptr [rsp+0xf],0x0
0x42ab: mov qword ptr [rsp+0x48],rbx
0x42b0: mov byte ptr [rsp+0x7c],al
0x42b4: jmp 0x3b93
0x4368: lea rax,[rsp+0xa0]
0x4370: cmp r11,-0x1
0x4374: mov qword ptr [rsp+0xa0],0x0
0x4380: mov qword ptr [rsp+0x28],rax
0x4385: jne 0x43b4
0x4387: mov rdi,qword ptr [rsp+0x10]
0x438c: mov byte ptr [rsp+0x40],r8b
0x4391: mov byte ptr [rsp+0x38],r10b
0x4396: mov qword ptr [rsp+0x30],r9
0x439b: call 0x1a10
0x43a0: movzx r8d,byte ptr [rsp+0x40]
0x43a6: movzx r10d,byte ptr [rsp+0x38]
0x43ac: mov r11,rax
0x43af: mov r9,qword ptr [rsp+0x30]
0x43b4: lea rax,[rsp+0x9c]
0x43bc: xor ecx,ecx
0x43be: mov byte ptr [rsp+0x7e],bl
0x43c2: mov byte ptr [rsp+0x7d],r8b
0x43c7: mov rbx,rcx
0x43ca: mov qword ptr [rsp+0x88],r9
0x43d2: mov qword ptr [rsp+0x38],rax
0x43d7: mov byte ptr [rsp+0x7f],r10b
0x43dc: mov qword ptr [rsp+0x80],r15
0x43e4: mov qword ptr [rsp+0x40],r14
0x43e9: mov qword ptr [rsp+0x70],r13
0x43ee: mov qword ptr [rsp+0x30],r11
0x43f3: mov rax,qword ptr [rsp+0x10]
0x43f8: lea r14,[rbp+rbx]
0x43fd: mov rdx,qword ptr [rsp+0x30]
0x4402: mov rcx,qword ptr [rsp+0x28]
0x4407: mov rdi,qword ptr [rsp+0x38]
0x440c: lea r13,[rax+r14]
0x4410: sub rdx,r14
0x4413: mov rsi,r13
0x4416: call 0x8850
0x441b: test rax,rax
0x441e: mov r15,rax
0x4421: je 0x4471
0x4423: cmp rax,-0x1
0x4427: je 0x4a45
0x442d: cmp rax,-0x2
0x4431: je 0x49d1
0x4437: cmp dword ptr [rsp+0x8],0x2
0x443c: sete al
0x443f: and al,byte ptr [rsp+0xf]
0x4443: jne 0x45e0
0x4449: mov edi,dword ptr [rsp+0x9c]
0x4450: call 0x1d10
0x4455: mov rdi,qword ptr [rsp+0x28]
0x445a: test eax,eax
0x445c: mov eax,0x0
0x4461: cmove r12d,eax
0x4465: add rbx,r15
0x4468: call 0x1d00
0x446d: test eax,eax
0x446f: je 0x43f3
0x4471: mov edx,r12d
0x4474: mov rdi,rbx
0x4477: movzx r8d,byte ptr [rsp+0x7d]
0x447d: xor edx,0x1
0x4480: movzx ebx,byte ptr [rsp+0x7e]
0x4485: movzx r10d,byte ptr [rsp+0x7f]
0x448b: and dl,byte ptr [rsp+0xd]
0x448f: mov r15,qword ptr [rsp+0x80]
0x4497: mov r14,qword ptr [rsp+0x40]
0x449c: mov r13,qword ptr [rsp+0x70]
0x44a1: mov r11,qword ptr [rsp+0x30]
0x44a6: cmp rdi,0x1
0x44aa: jbe 0x4aab
0x44b0: mov rcx,rdi
0x44b3: xor esi,esi
0x44b5: movzx r9d,byte ptr [rsp+0xf]
0x44bb: add rcx,rbp
0x44be: mov rdi,qword ptr [rsp+0x10]
0x44c3: jmp 0x457e
0x44d0: cmp dword ptr [rsp+0x8],0x2
0x44d5: sete al
0x44d8: test r9b,r9b
0x44db: jne 0x4990
0x44e1: mov esi,r8d
0x44e4: xor esi,0x1
0x44e7: and al,sil
0x44ea: je 0x451b
0x44ec: cmp r13,r15
0x44ef: jbe 0x44f6
0x44f1: mov byte ptr [r14+r15],0x27
0x44f6: lea rsi,[r15+0x1]
0x44fa: cmp r13,rsi
0x44fd: jbe 0x4505
0x44ff: mov byte ptr [r14+r15+0x1],0x24
0x4505: lea rsi,[r15+0x2]
0x4509: cmp r13,rsi
0x450c: jbe 0x4514
0x450e: mov byte ptr [r14+r15+0x2],0x27
0x4514: add r15,0x3
0x4518: mov r8d,eax
0x451b: cmp r13,r15
0x451e: jbe 0x4525
0x4520: mov byte ptr [r14+r15],0x5c
0x4525: lea rax,[r15+0x1]
0x4529: cmp r13,rax
0x452c: jbe 0x453b
0x452e: mov eax,ebx
0x4530: shr al,0x6
0x4533: add eax,0x30
0x4536: mov byte ptr [r14+r15+0x1],al
0x453b: lea rax,[r15+0x2]
0x453f: cmp r13,rax
0x4542: jbe 0x4554
0x4544: mov eax,ebx
0x4546: shr al,0x3
0x4549: and eax,0x7
0x454c: add eax,0x30
0x454f: mov byte ptr [r14+r15+0x2],al
0x4554: and ebx,0x7
0x4557: add rbp,0x1
0x455b: add r15,0x3
0x455f: add ebx,0x30
0x4562: cmp rbp,rcx
0x4565: jae 0x3d50
0x456b: mov esi,edx
0x456d: cmp r13,r15
0x4570: jbe 0x4576
0x4572: mov byte ptr [r14+r15],bl
0x4576: movzx ebx,byte ptr [rdi+rbp]
0x457a: add r15,0x1
0x457e: test dl,dl
0x4580: jne 0x44d0
0x4586: mov eax,esi
0x4588: xor eax,0x1
0x458b: and eax,r8d
0x458e: test r10b,r10b
0x4591: je 0x45a1
0x4593: cmp r13,r15
0x4596: jbe 0x459d
0x4598: mov byte ptr [r14+r15],0x5c
0x459d: add r15,0x1
0x45a1: add rbp,0x1
0x45a5: cmp rbp,rcx
0x45a8: jae 0x3d2c
0x45ae: test al,al
0x45b0: je 0x49ae
0x45b6: cmp r13,r15
0x45b9: jbe 0x45c0
0x45bb: mov byte ptr [r14+r15],0x27
0x45c0: lea rax,[r15+0x1]
0x45c4: cmp r13,rax
0x45c7: jbe 0x45cf
0x45c9: mov byte ptr [r14+r15+0x1],0x27
0x45cf: add r15,0x2
0x45d3: xor r10d,r10d
0x45d6: xor r8d,r8d
0x45d9: jmp 0x456d
0x45e0: cmp r15,0x1
0x45e4: je 0x4449
0x45ea: mov rdi,qword ptr [rsp+0x10]
0x45ef: lea rcx,[rdi+r15]
0x45f3: lea rdx,[rdi+r14+0x1]
0x45f8: lea r8,[rcx+r14]
0x45fc: jmp 0x460d
0x4600: add rdx,0x1
0x4604: cmp r8,rdx
0x4607: je 0x4449
0x460d: movzx ecx,byte ptr [rdx]
0x4610: sub ecx,0x5b
0x4613: cmp cl,0x21
0x4616: ja 0x4600
0x4618: mov esi,0x1
0x461d: shl rsi,cl
0x4620: mov rcx,rsi
0x4623: movabsq rsi,0x20000002b
0x462d: test rcx,rsi
0x4630: je 0x4600
0x4632: mov r14,qword ptr [rsp+0x40]
0x4637: mov r13,qword ptr [rsp+0x70]
0x463c: mov rbp,qword ptr [rsp+0x30]
0x4641: mov dword ptr [rsp+0x8],0x2
0x4649: cmp byte ptr [rsp+0xd],0x0
0x464e: je 0x4660
0x4650: test al,al
0x4652: mov eax,0x4
0x4657: cmove eax,dword ptr [rsp+0x8]
0x465c: mov dword ptr [rsp+0x8],eax
0x4660: sub rsp,0x8
0x4664: mov rcx,rbp
0x4667: mov rsi,r13
0x466a: push qword ptr [rsp+0x68]
0x466e: push qword ptr [rsp+0x78]
0x4672: mov rdi,r14
0x4675: push 0x0
0x4677: mov r9d,dword ptr [rsp+0x98]
0x467f: mov r8d,dword ptr [rsp+0x28]
0x4684: mov rdx,qword ptr [rsp+0x30]
0x4689: and r9d,-0x3
0x468d: call 0x3ac0
0x4692: add rsp,0x20
0x4696: mov r15,rax
0x4699: mov rbx,qword ptr [rsp+0xa8]
0x46a1: xor rbx,qword ptr fs:0x28
0x46aa: mov rax,r15
0x46ad: jne 0x4cb3
0x46b3: add rsp,0xb8
0x46ba: pop rbx
0x46bb: pop rbp
0x46bc: pop r12
0x46be: pop r13
0x46c0: pop r14
0x46c2: pop r15
0x46c4: ret 
0x46c8: mov rbp,r11
0x46cb: jmp 0x4649
0x4731: test r13,r13
0x4734: jne 0x4cca
0x473a: lea rax,[rip+0x6ae4]
0x4741: mov qword ptr [rsp+0x50],0x0
0x474a: mov byte ptr [rsp+0xe],0x1
0x474f: mov byte ptr [rsp+0x7c],0x0
0x4754: xor r12d,r12d
0x4757: mov byte ptr [rsp+0xf],0x0
0x475c: mov qword ptr [rsp+0x18],0x1
0x4765: mov qword ptr [rsp+0x48],rax
0x476a: mov r15d,0x1
0x4770: mov dword ptr [rsp+0x8],0x2
0x4778: jmp 0x3b93
0x4990: movzx ebx,byte ptr [rsp+0xf]
0x4995: mov rbp,r11
0x4998: mov byte ptr [rsp+0xd],bl
0x499c: jmp 0x4649
0x49a1: movzx edx,byte ptr [rsp+0xd]
0x49a6: xor r12d,r12d
0x49a9: jmp 0x44b0
0x49ae: xor r10d,r10d
0x49b1: jmp 0x456d
0x49d1: mov r11,qword ptr [rsp+0x30]
0x49d6: mov rsi,r14
0x49d9: mov rcx,r13
0x49dc: mov rax,rbx
0x49df: mov rdi,rbx
0x49e2: movzx r8d,byte ptr [rsp+0x7d]
0x49e8: movzx ebx,byte ptr [rsp+0x7e]
0x49ed: mov r9,qword ptr [rsp+0x88]
0x49f5: cmp rsi,r11
0x49f8: movzx r10d,byte ptr [rsp+0x7f]
0x49fe: mov r15,qword ptr [rsp+0x80]
0x4a06: mov r14,qword ptr [rsp+0x40]
0x4a0b: mov r13,qword ptr [rsp+0x70]
0x4a10: jae 0x4a38
0x4a12: cmp byte ptr [rcx],0x0
0x4a15: jne 0x4a27
0x4a17: jmp 0x4a38
0x4a20: cmp byte ptr [r9+rax],0x0
0x4a25: je 0x4a35
0x4a27: add rax,0x1
0x4a2b: lea rdx,[rbp+rax]
0x4a30: cmp r11,rdx
0x4a33: ja 0x4a20
0x4a35: mov rdi,rax
0x4a38: movzx edx,byte ptr [rsp+0xd]
0x4a3d: xor r12d,r12d
0x4a40: jmp 0x44a6
0x4a45: mov rdi,rbx
0x4a48: movzx r8d,byte ptr [rsp+0x7d]
0x4a4e: movzx ebx,byte ptr [rsp+0x7e]
0x4a53: movzx r10d,byte ptr [rsp+0x7f]
0x4a59: mov r15,qword ptr [rsp+0x80]
0x4a61: xor r12d,r12d
0x4a64: mov r14,qword ptr [rsp+0x40]
0x4a69: mov r13,qword ptr [rsp+0x70]
0x4a6e: mov r11,qword ptr [rsp+0x30]
0x4a73: movzx edx,byte ptr [rsp+0xd]
0x4a78: jmp 0x44a6
0x4aab: mov eax,edx
0x4aad: jmp 0x4007
0x4bba: mov eax,edx
0x4bbc: mov rbx,qword ptr [rsp+0x48]
0x4bc1: test rbx,rbx
0x4bc4: je 0x4bf2
0x4bc6: test al,al
0x4bc8: je 0x4bf2
0x4bca: movzx ecx,byte ptr [rbx]
0x4bcd: mov rax,rbx
0x4bd0: test cl,cl
0x4bd2: je 0x4bf2
0x4bd4: mov rdx,r15
0x4bd7: sub rax,r15
0x4bda: cmp r13,rdx
0x4bdd: jbe 0x4be3
0x4bdf: mov byte ptr [r14+rdx],cl
0x4be3: add rdx,0x1
0x4be7: movzx ecx,byte ptr [rax+rdx]
0x4beb: test cl,cl
0x4bed: jne 0x4bda
0x4bef: mov r15,rdx
0x4bf2: cmp r13,r15
0x4bf5: jbe 0x4699
0x4bfb: mov byte ptr [r14+r15],0x0
0x4c00: jmp 0x4699
0x4c05: cmp dword ptr [rsp+0x8],0x2
0x4c0a: movzx ebx,byte ptr [rsp+0xf]
0x4c0f: mov rbp,r11
0x4c12: sete al
0x4c15: mov byte ptr [rsp+0xd],bl
0x4c19: jmp 0x4649
0x4c5d: sub rsp,0x8
0x4c61: mov r8d,0x5
0x4c67: mov rcx,r11
0x4c6a: push qword ptr [rsp+0x68]
0x4c6e: push qword ptr [rsp+0x78]
0x4c72: mov rdi,r14
0x4c75: push qword ptr [rsp+0x38]
0x4c79: mov r9d,dword ptr [rsp+0x98]
0x4c81: mov rdx,qword ptr [rsp+0x30]
0x4c86: mov rsi,qword ptr [rsp+0x70]
0x4c8b: call 0x3ac0
0x4c90: add rsp,0x20
0x4c94: mov r15,rax
0x4c97: jmp 0x4699
0x4c9c: movzx eax,byte ptr [rsp+0x7c]
0x4ca1: jmp 0x4bbc
0x4ca6: mov dword ptr [rsp+0x8],0x2
0x4cae: jmp 0x4649
0x4cb3: call 0x1a40
0x4cb8: mov byte ptr [rsp+0xd],0x0
0x4cbd: jmp 0x4731
0x4cca: mov byte ptr [rsp+0xe],0x1
0x4ccf: xor eax,eax
0x4cd1: xor r12d,r12d
0x4cd4: mov qword ptr [rsp+0x50],0x0
0x4cdd: jmp 0x4284
0x4cef: call 0x1920
0x4cf4: nop 
0x4cf6: nop word ptr cs:[rax+rax]
0x4dec: add rsp,0x20
0x4df0: mov r11,qword ptr [rsp+0x10]
0x4df5: cmp r11,rax
0x4df8: ja 0x4e61
0x4dfa: lea rsi,[rax+0x1]
0x4dfe: lea rax,[rip+0x2092fb]
0x4e05: cmp r12,rax
0x4e08: mov qword ptr [rbx],rsi
0x4e0b: je 0x4e1f
0x4e0d: mov rdi,r12
0x4e10: mov qword ptr [rsp+0x10],rsi
0x4e15: call 0x1d30
0x4e1a: mov rsi,qword ptr [rsp+0x10]
0x4e1f: mov rdi,rsi
0x4e22: mov qword ptr [rsp+0x10],rsi
0x4e27: call 0x5d00
0x4e2c: sub rsp,0x8
0x4e30: mov qword ptr [rbx+0x8],rax
0x4e34: mov r8d,dword ptr [rbp]
0x4e38: push qword ptr [rbp+0x30]
0x4e3b: push qword ptr [rbp+0x28]
0x4e3e: mov rcx,r14
0x4e41: push r15
0x4e43: mov r9d,dword ptr [rsp+0x3c]
0x4e48: mov rdi,rax
0x4e4b: mov rdx,qword ptr [rsp+0x28]
0x4e50: mov rsi,qword ptr [rsp+0x30]
0x4e55: mov r12,rax
0x4e58: call 0x3ac0
0x4e5d: add rsp,0x20
0x4e61: mov eax,dword ptr [rsp+0x18]
0x4e65: mov dword ptr [r13],eax
0x4e69: add rsp,0x28
0x4e6d: mov rax,r12
0x4e70: pop rbx
0x4e71: pop rbp
0x4e72: pop r12
0x4e74: pop r13
0x4e76: pop r14
0x4e78: pop r15
0x4e7a: ret 
0x4eab: nop dword ptr [rax+rax]
0x4eb0: push r12
0x4eb2: push rbp
0x4eb3: push rbx
0x4eb4: mov rbx,rdi
0x4eb7: call 0x1930
0x4ebc: mov r12d,dword ptr [rax]
0x4ebf: mov rbp,rax
0x4ec2: lea rax,[rip+0x209337]
0x4ec9: test rbx,rbx
0x4ecc: mov esi,0x38
0x4ed1: cmove rbx,rax
0x4ed5: mov rdi,rbx
0x4ed8: call 0x5f00
0x4edd: mov dword ptr [rbp],r12d
0x4ee1: pop rbx
0x4ee2: pop rbp
0x4ee3: pop r12
0x4ee5: ret 
0x4ef0: lea rax,[rip+0x209309]
0x4ef7: test rdi,rdi
0x4efa: cmove rdi,rax
0x4efe: mov eax,dword ptr [rdi]
0x4f00: ret 
0x4f10: lea rax,[rip+0x2092e9]
0x4f17: test rdi,rdi
0x4f1a: cmove rdi,rax
0x4f1e: mov dword ptr [rdi],esi
0x4f20: ret 
0x4f30: lea rax,[rip+0x2092c9]
0x4f37: test rdi,rdi
0x4f3a: mov ecx,esi
0x4f3c: cmove rdi,rax
0x4f40: mov eax,esi
0x4f42: and ecx,0x1f
0x4f45: shr al,0x5
0x4f48: movzx eax,al
0x4f4b: lea rdi,[rdi+rax*4+0x8]
0x4f50: mov esi,dword ptr [rdi]
0x4f52: mov eax,esi
0x4f54: shr eax,cl
0x4f56: xor edx,eax
0x4f58: and eax,0x1
0x4f5b: and edx,0x1
0x4f5e: shl edx,cl
0x4f60: xor edx,esi
0x4f62: mov dword ptr [rdi],edx
0x4f64: ret 
0x4f70: lea rax,[rip+0x209289]
0x4f77: test rdi,rdi
0x4f7a: cmove rdi,rax
0x4f7e: mov eax,dword ptr [rdi+0x4]
0x4f81: mov dword ptr [rdi+0x4],esi
0x4f84: ret 
0x4f90: lea rax,[rip+0x209269]
0x4f97: test rdi,rdi
0x4f9a: cmove rdi,rax
0x4f9e: test rsi,rsi
0x4fa1: mov dword ptr [rdi],0xa
0x4fa7: je 0x4fb7
0x4fa9: test rdx,rdx
0x4fac: je 0x4fb7
0x4fae: mov qword ptr [rdi+0x28],rsi
0x4fb2: mov qword ptr [rdi+0x30],rdx
0x4fb6: ret 
0x4fb7: sub rsp,0x8
0x4fbb: call 0x1920
0x4fc0: push r15
0x4fc2: push r14
0x4fc4: lea rax,[rip+0x209235]
0x4fcb: push r13
0x4fcd: push r12
0x4fcf: mov r13,rdi
0x4fd2: push rbp
0x4fd3: push rbx
0x4fd4: mov rbx,r8
0x4fd7: mov r14,rsi
0x4fda: mov r15,rdx
0x4fdd: sub rsp,0x18
0x4fe1: test r8,r8
0x4fe4: cmove rbx,rax
0x4fe8: mov qword ptr [rsp+0x8],rcx
0x4fed: call 0x1930
0x4ff2: mov r12d,dword ptr [rax]
0x4ff5: mov rbp,rax
0x4ff8: lea rax,[rbx+0x8]
0x4ffc: sub rsp,0x8
0x5000: mov r9d,dword ptr [rbx+0x4]
0x5004: push qword ptr [rbx+0x30]
0x5007: mov r8d,dword ptr [rbx]
0x500a: push qword ptr [rbx+0x28]
0x500d: mov rdx,r15
0x5010: push rax
0x5011: mov rcx,qword ptr [rsp+0x28]
0x5016: mov rsi,r14
0x5019: mov rdi,r13
0x501c: call 0x3ac0
0x5021: mov dword ptr [rbp],r12d
0x5025: add rsp,0x38
0x5029: pop rbx
0x502a: pop rbp
0x502b: pop r12
0x502d: pop r13
0x502f: pop r14
0x5031: pop r15
0x5033: ret 
0x5040: push r15
0x5042: push r14
0x5044: lea rax,[rip+0x2091b5]
0x504b: push r13
0x504d: push r12
0x504f: mov r12,rdx
0x5052: push rbp
0x5053: push rbx
0x5054: mov rbx,rcx
0x5057: mov r14,rdi
0x505a: mov r15,rsi
0x505d: sub rsp,0x38
0x5061: test rcx,rcx
0x5064: cmove rbx,rax
0x5068: xor ebp,ebp
0x506a: call 0x1930
0x506f: test r12,r12
0x5072: mov r13,rax
0x5075: mov eax,dword ptr [rax]
0x5077: sete bpl
0x507b: or ebp,dword ptr [rbx+0x4]
0x507e: lea r10,[rbx+0x8]
0x5082: sub rsp,0x8
0x5086: mov r8d,dword ptr [rbx]
0x5089: mov rcx,r15
0x508c: mov dword ptr [rsp+0x14],eax
0x5090: push qword ptr [rbx+0x30]
0x5093: mov rdx,r14
0x5096: push qword ptr [rbx+0x28]
0x5099: push r10
0x509b: xor esi,esi
0x509d: mov r9d,ebp
0x50a0: xor edi,edi
0x50a2: mov qword ptr [rsp+0x40],r10
0x50a7: call 0x3ac0
0x50ac: lea rsi,[rax+0x1]
0x50b0: mov qword ptr [rsp+0x48],rax
0x50b5: add rsp,0x20
0x50b9: mov rdi,rsi
0x50bc: mov qword ptr [rsp+0x18],rsi
0x50c1: call 0x5d00
0x50c6: mov qword ptr [rsp+0x10],rax
0x50cb: sub rsp,0x8
0x50cf: push qword ptr [rbx+0x30]
0x50d2: push qword ptr [rbx+0x28]
0x50d5: mov r10,qword ptr [rsp+0x38]
0x50da: mov r9d,ebp
0x50dd: mov r8d,dword ptr [rbx]
0x50e0: mov rcx,r15
0x50e3: mov rdx,r14
0x50e6: mov rdi,rax
0x50e9: push r10
0x50eb: mov rsi,qword ptr [rsp+0x38]
0x50f0: call 0x3ac0
0x50f5: mov eax,dword ptr [rsp+0x2c]
0x50f9: add rsp,0x20
0x50fd: test r12,r12
0x5100: mov dword ptr [r13],eax
0x5104: je 0x510f
0x5106: mov r11,qword ptr [rsp+0x28]
0x510b: mov qword ptr [r12],r11
0x510f: mov rax,qword ptr [rsp+0x10]
0x5114: add rsp,0x38
0x5118: pop rbx
0x5119: pop rbp
0x511a: pop r12
0x511c: pop r13
0x511e: pop r14
0x5120: pop r15
0x5122: ret 
0x5130: mov rcx,rdx
0x5133: xor edx,edx
0x5135: jmp 0x5040
0x5140: mov eax,dword ptr [rip+0x208f12]
0x5146: push r12
0x5148: mov r12,qword ptr [rip+0x208f11]
0x514f: push rbp
0x5150: push rbx
0x5151: cmp eax,0x1
0x5154: jle 0x5181
0x5156: sub eax,0x2
0x5159: lea rbx,[r12+0x18]
0x515e: shl rax,0x4
0x5162: lea rbp,[r12+rax+0x28]
0x5167: nop word ptr [rax+rax]
0x5170: mov rdi,qword ptr [rbx]
0x5173: add rbx,0x10
0x5177: call 0x1d30
0x517c: cmp rbx,rbp
0x517f: jne 0x5170
0x5181: mov rdi,qword ptr [r12+0x8]
0x5186: lea rbx,[rip+0x208f73]
0x518d: cmp rdi,rbx
0x5190: je 0x51a9
0x5192: call 0x1d30
0x5197: mov qword ptr [rip+0x208ece],0x100
0x51a2: mov qword ptr [rip+0x208ecf],rbx
0x51a9: lea rbx,[rip+0x208ec0]
0x51b0: cmp r12,rbx
0x51b3: je 0x51c4
0x51b5: mov rdi,r12
0x51b8: call 0x1d30
0x51bd: mov qword ptr [rip+0x208e9c],rbx
0x51c4: pop rbx
0x51c5: mov dword ptr [rip+0x208e89],0x1
0x51cf: pop rbp
0x51d0: pop r12
0x51d2: ret 
0x51e0: lea rcx,[rip+0x209019]
0x51e7: mov rdx,-0x1
0x51ee: jmp 0x4d00
0x5200: lea rcx,[rip+0x208ff9]
0x5207: jmp 0x4d00
0x5210: lea rcx,[rip+0x208fe9]
0x5217: mov rsi,rdi
0x521a: mov rdx,-0x1
0x5221: xor edi,edi
0x5223: jmp 0x4d00
0x5230: lea rcx,[rip+0x208fc9]
0x5237: mov rdx,rsi
0x523a: mov rsi,rdi
0x523d: xor edi,edi
0x523f: jmp 0x4d00
0x52bf: mov rcx,qword ptr [rsp+0x38]
0x52c4: xor rcx,qword ptr fs:0x28
0x52cd: jne 0x52d9
0x52cf: add rsp,0x48
0x52d3: ret 
0x52d4: call 0x1920
0x52d9: call 0x1a40
0x52de: nop 
0x52e0: sub rsp,0x48
0x52e4: mov rax,rdx
0x52e7: mov rdx,rcx
0x52ea: mov rcx,qword ptr fs:0x28
0x52f3: mov qword ptr [rsp+0x38],rcx
0x52f8: xor ecx,ecx
0x52fa: cmp esi,0xa
0x52fd: je 0x5360
0x52ff: mov dword ptr [rsp],esi
0x5302: mov rcx,rsp
0x5305: mov rsi,rax
0x5308: mov qword ptr [rsp+0x4],0x0
0x5311: mov qword ptr [rsp+0xc],0x0
0x531a: mov qword ptr [rsp+0x14],0x0
0x5323: mov qword ptr [rsp+0x1c],0x0
0x532c: mov qword ptr [rsp+0x24],0x0
0x5335: mov qword ptr [rsp+0x2c],0x0
0x533e: mov dword ptr [rsp+0x34],0x0
0x5346: call 0x4d00
0x534b: mov rdx,qword ptr [rsp+0x38]
0x5350: xor rdx,qword ptr fs:0x28
0x5359: jne 0x5365
0x535b: add rsp,0x48
0x535f: ret 
0x5360: call 0x1920
0x5365: call 0x1a40
0x536a: nop word ptr [rax+rax]
0x5380: mov rcx,rdx
0x5383: mov rdx,rsi
0x5386: mov esi,edi
0x5388: xor edi,edi
0x538a: jmp 0x52e0
0x5390: sub rsp,0x48
0x5394: mov ecx,edx
0x5396: mov rax,qword ptr fs:0x28
0x539f: mov qword ptr [rsp+0x38],rax
0x53a4: xor eax,eax
0x53a6: mov rax,qword ptr [rip+0x208e83]
0x53ad: mov r8,rsp
0x53b0: and ecx,0x1f
0x53b3: movdqa xmm0,[rip+0x208e45]
0x53bb: mov qword ptr [rsp+0x30],rax
0x53c0: mov eax,edx
0x53c2: movaps [rsp],xmm0
0x53c6: shr al,0x5
0x53c9: movzx eax,al
0x53cc: lea r9,[r8+rax*4+0x8]
0x53d1: movdqa xmm0,[rip+0x208e37]
0x53d9: movaps [rsp+0x10],xmm0
0x53de: movdqa xmm0,[rip+0x208e3a]
0x53e6: movaps [rsp+0x20],xmm0
0x53eb: mov edx,dword ptr [r9]
0x53ee: mov eax,edx
0x53f0: shr eax,cl
0x53f2: not eax
0x53f4: and eax,0x1
0x53f7: shl eax,cl
0x53f9: mov rcx,r8
0x53fc: xor eax,edx
0x53fe: mov rdx,rsi
0x5401: mov rsi,rdi
0x5404: mov dword ptr [r9],eax
0x5407: xor edi,edi
0x5409: call 0x4d00
0x540e: mov rsi,qword ptr [rsp+0x38]
0x5413: xor rsi,qword ptr fs:0x28
0x541c: jne 0x5423
0x541e: add rsp,0x48
0x5422: ret 
0x5423: call 0x1a40
0x5428: nop dword ptr [rax+rax]
0x5430: movsx edx,sil
0x5434: mov rsi,-0x1
0x543b: jmp 0x5390
0x5440: mov edx,0x3a
0x5445: mov rsi,-0x1
0x544c: jmp 0x5390
0x5460: mov edx,0x3a
0x5465: jmp 0x5390
0x5470: sub rsp,0x48
0x5474: mov rax,rdx
0x5477: mov rdx,qword ptr fs:0x28
0x5480: mov qword ptr [rsp+0x38],rdx
0x5485: xor edx,edx
0x5487: cmp esi,0xa
0x548a: je 0x54f4
0x548c: mov dword ptr [rsp],esi
0x548f: mov rcx,rsp
0x5492: mov rdx,-0x1
0x5499: mov rsi,rax
0x549c: mov qword ptr [rsp+0x4],0x0
0x54a5: mov qword ptr [rsp+0xc],0x4000000
0x54ae: mov qword ptr [rsp+0x14],0x0
0x54b7: mov qword ptr [rsp+0x1c],0x0
0x54c0: mov qword ptr [rsp+0x24],0x0
0x54c9: mov qword ptr [rsp+0x2c],0x0
0x54d2: mov dword ptr [rsp+0x34],0x0
0x54da: call 0x4d00
0x54df: mov rcx,qword ptr [rsp+0x38]
0x54e4: xor rcx,qword ptr fs:0x28
0x54ed: jne 0x54f9
0x54ef: add rsp,0x48
0x54f3: ret 
0x54f4: call 0x1920
0x54f9: call 0x1a40
0x54fe: nop 
0x5500: sub rsp,0x48
0x5504: mov r9,rcx
0x5507: mov rcx,qword ptr [rip+0x208d22]
0x550e: movdqa xmm0,[rip+0x208cea]
0x5516: mov rax,qword ptr fs:0x28
0x551f: mov qword ptr [rsp+0x38],rax
0x5524: xor eax,eax
0x5526: movaps [rsp],xmm0
0x552a: test rsi,rsi
0x552d: mov qword ptr [rsp+0x30],rcx
0x5532: mov dword ptr [rsp],0xa
0x5539: movdqa xmm0,[rip+0x208ccf]
0x5541: movaps [rsp+0x10],xmm0
0x5546: movdqa xmm0,[rip+0x208cd2]
0x554e: movaps [rsp+0x20],xmm0
0x5553: je 0x5587
0x5555: test rdx,rdx
0x5558: je 0x5587
0x555a: mov qword ptr [rsp+0x28],rsi
0x555f: mov qword ptr [rsp+0x30],rdx
0x5564: mov rcx,rsp
0x5567: mov rdx,r8
0x556a: mov rsi,r9
0x556d: call 0x4d00
0x5572: mov rdi,qword ptr [rsp+0x38]
0x5577: xor rdi,qword ptr fs:0x28
0x5580: jne 0x558c
0x5582: add rsp,0x48
0x5586: ret 
0x5587: call 0x1920
0x558c: call 0x1a40
0x5591: nop dword ptr [rax+rax]
0x5596: nop word ptr cs:[rax+rax]
0x55a0: mov r8,-0x1
0x55a7: jmp 0x5500
0x55b0: mov rcx,rdx
0x55b3: mov r8,-0x1
0x55ba: mov rdx,rsi
0x55bd: mov rsi,rdi
0x55c0: xor edi,edi
0x55c2: jmp 0x5500
0x55d0: mov r8,rcx
0x55d3: mov rcx,rdx
0x55d6: mov rdx,rsi
0x55d9: mov rsi,rdi
0x55dc: xor edi,edi
0x55de: jmp 0x5500
0x55f0: lea rcx,[rip+0x208a29]
0x55f7: jmp 0x4d00
0x5600: lea rcx,[rip+0x208a19]
0x5607: mov rdx,rsi
0x560a: mov rsi,rdi
0x560d: xor edi,edi
0x560f: jmp 0x4d00
0x5620: lea rcx,[rip+0x2089f9]
0x5627: mov rdx,-0x1
0x562e: jmp 0x4d00
0x56cc: call 0x1a40
0x56d1: nop word ptr cs:[rax+rax]
0x56db: nop dword ptr [rax+rax]
0x5818: mov r8,rcx
0x581b: mov rcx,rdx
0x581e: lea rdx,[rip+0x5ecf]
0x5825: mov esi,0x1
0x582a: xor eax,eax
0x582c: call 0x1cf0
0x5831: jmp 0x571c
0x5a2d: push r12
0x5a2f: push r15
0x5a31: push r14
0x5a33: mov r8,qword ptr [rsp+0x20]
0x5a38: mov rcx,rbx
0x5a3b: mov rdx,rax
0x5a3e: mov rdi,rbp
0x5a41: mov esi,0x1
0x5a46: xor eax,eax
0x5a48: call 0x1cf0
0x5a4d: add rsp,0x20
0x5a51: add rsp,0x28
0x5a55: pop rbx
0x5a56: pop rbp
0x5a57: pop r12
0x5a59: pop r13
0x5a5b: pop r14
0x5a5d: pop r15
0x5a5f: ret 
0x5a99: push r12
0x5a9b: push r15
0x5a9d: push r14
0x5a9f: mov r9,qword ptr [rsp+0x28]
0x5aa4: jmp 0x5a33
0x5b00: xor r9d,r9d
0x5b03: cmp qword ptr [r8],0x0
0x5b07: je 0x5b1b
0x5b09: nop dword ptr [rax]
0x5b10: add r9,0x1
0x5b14: cmp qword ptr [r8+r9*8],0x0
0x5b19: jne 0x5b10
0x5b1b: jmp 0x56e0
0x5b20: sub rsp,0x68
0x5b24: mov r10,r8
0x5b27: xor r9d,r9d
0x5b2a: mov rax,qword ptr fs:0x28
0x5b33: mov qword ptr [rsp+0x58],rax
0x5b38: xor eax,eax
0x5b3a: mov r8,rsp
0x5b3d: nop dword ptr [rax]
0x5b40: mov eax,dword ptr [r10]
0x5b43: cmp eax,0x2f
0x5b46: ja 0x5b8a
0x5b48: mov r11d,eax
0x5b4b: add r11,qword ptr [r10+0x10]
0x5b4f: add eax,0x8
0x5b52: mov dword ptr [r10],eax
0x5b55: mov rax,qword ptr [r11]
0x5b58: test rax,rax
0x5b5b: mov qword ptr [r8+r9*8],rax
0x5b5f: je 0x5b6b
0x5b61: add r9,0x1
0x5b65: cmp r9,0xa
0x5b69: jne 0x5b40
0x5b6b: call 0x56e0
0x5b70: mov rax,qword ptr [rsp+0x58]
0x5b75: xor rax,qword ptr fs:0x28
0x5b7e: jne 0x5b85
0x5b80: add rsp,0x68
0x5b84: ret 
0x5b85: call 0x1a40
0x5b8a: mov r11,qword ptr [r10+0x8]
0x5b8e: lea rax,[r11+0x8]
0x5b92: mov qword ptr [r10+0x8],rax
0x5b96: jmp 0x5b55
0x5c60: call 0x1a40
0x5c6c: mov rax,rbx
0x5c6f: add rbx,0x8
0x5c73: jmp 0x5c26
0x5c80: push rbx
0x5c81: lea rsi,[rip+0x5aba]
0x5c88: mov edx,0x5
0x5c8d: xor edi,edi
0x5c8f: call 0x19f0
0x5c94: lea rdx,[rip+0x5abc]
0x5c9b: mov rsi,rax
0x5c9e: mov edi,0x1
0x5ca3: xor eax,eax
0x5ca5: call 0x1c20
0x5caa: lea rsi,[rip+0x5abc]
0x5cb1: mov edx,0x5
0x5cb6: xor edi,edi
0x5cb8: call 0x19f0
0x5cbd: lea rcx,[rip+0x4ffc]
0x5cc4: lea rdx,[rip+0x47d5]
0x5ccb: mov rsi,rax
0x5cce: mov edi,0x1
0x5cd3: xor eax,eax
0x5cd5: call 0x1c20
0x5cda: mov rbx,qword ptr [rip+0x2083a7]
0x5ce1: lea rsi,[rip+0x5cb8]
0x5ce8: xor edi,edi
0x5cea: mov edx,0x5
0x5cef: call 0x19f0
0x5cf4: mov rsi,rbx
0x5cf7: mov rdi,rax
0x5cfa: pop rbx
0x5cfb: jmp 0x1b20
0x5d1a: nop word ptr [rax+rax]
0x5d20: mov rax,rdi
0x5d23: mul rsi
0x5d26: mov rdi,rax
0x5d29: seto al
0x5d2c: test rdi,rdi
0x5d2f: js 0x5d3b
0x5d31: movzx eax,al
0x5d34: test rax,rax
0x5d37: jne 0x5d3b
0x5d39: jmp 0x5d00
0x5d3b: sub rsp,0x8
0x5d3f: call 0x5f50
0x5d44: nop 
0x5d46: nop word ptr cs:[rax+rax]
0x5d50: jmp 0x5d00
0x5d96: nop word ptr cs:[rax+rax]
0x5da0: mov rax,rsi
0x5da3: mul rdx
0x5da6: mov rsi,rax
0x5da9: seto al
0x5dac: test rsi,rsi
0x5daf: js 0x5dbb
0x5db1: movzx eax,al
0x5db4: test rax,rax
0x5db7: jne 0x5dbb
0x5db9: jmp 0x5d60
0x5dbb: sub rsp,0x8
0x5dbf: call 0x5f50
0x5dc4: nop 
0x5dc6: nop word ptr cs:[rax+rax]
0x5dd0: test rdi,rdi
0x5dd3: mov r9,rdx
0x5dd6: mov rcx,qword ptr [rsi]
0x5dd9: je 0x5e10
0x5ddb: xor edx,edx
0x5ddd: movabsq rax,0x5555555555555554
0x5de7: div r9
0x5dea: cmp rax,rcx
0x5ded: jbe 0x5e2b
0x5def: mov rax,rcx
0x5df2: shr rax, 1
0x5df5: lea rcx,[rax+rcx+0x1]
0x5dfa: mov qword ptr [rsi],rcx
0x5dfd: imul rcx,r9
0x5e01: mov rsi,rcx
0x5e04: jmp 0x5d60
0x5e10: test rcx,rcx
0x5e13: je 0x5e38
0x5e15: mov rax,rcx
0x5e18: mul r9
0x5e1b: seto dl
0x5e1e: test rax,rax
0x5e21: movzx edx,dl
0x5e24: js 0x5e2b
0x5e26: test rdx,rdx
0x5e29: je 0x5dfa
0x5e2b: sub rsp,0x8
0x5e2f: call 0x5f50
0x5e34: nop dword ptr [rax]
0x5e38: xor edx,edx
0x5e3a: mov eax,0x80
0x5e3f: xor r8d,r8d
0x5e42: div r9
0x5e45: test rax,rax
0x5e48: sete r8b
0x5e4c: lea rcx,[r8+rax]
0x5e50: jmp 0x5e15
0x5e60: test rdi,rdi
0x5e63: mov rax,qword ptr [rsi]
0x5e66: je 0x5e90
0x5e68: movabsq rdx,0x5555555555555553
0x5e72: cmp rax,rdx
0x5e75: ja 0x5ea1
0x5e77: mov rdx,rax
0x5e7a: shr rdx, 1
0x5e7d: lea rax,[rdx+rax+0x1]
0x5e82: mov qword ptr [rsi],rax
0x5e85: mov rsi,rax
0x5e88: jmp 0x5d60
0x5e90: test rax,rax
0x5e93: mov edx,0x80
0x5e98: cmove rax,rdx
0x5e9c: test rax,rax
0x5e9f: jns 0x5e82
0x5ea1: sub rsp,0x8
0x5ea5: call 0x5f50
0x5eaa: nop word ptr [rax+rax]
0x5eb0: push rbx
0x5eb1: mov rbx,rdi
0x5eb4: call 0x5d00
0x5eb9: mov rdx,rbx
0x5ebc: xor esi,esi
0x5ebe: mov rdi,rax
0x5ec1: pop rbx
0x5ec2: jmp 0x1ad0
0x5ed0: mov rax,rdi
0x5ed3: sub rsp,0x8
0x5ed7: mul rsi
0x5eda: seto dl
0x5edd: test rax,rax
0x5ee0: js 0x5ef9
0x5ee2: movzx edx,dl
0x5ee5: test rdx,rdx
0x5ee8: jne 0x5ef9
0x5eea: call 0x1b30
0x5eef: test rax,rax
0x5ef2: je 0x5ef9
0x5ef4: add rsp,0x8
0x5ef8: ret 
0x5ef9: call 0x5f50
0x5efe: nop 
0x5f80: call 0x1920
0x5f85: nop word ptr cs:[rax+rax]
0x5f8f: nop 
0x5fbf: nop 
0x5fdf: nop 
0x5fe0: mov edx,dword ptr [rdi+0x48]
0x5fe3: mov eax,0x1
0x5fe8: and edx,0x11
0x5feb: cmp edx,0x10
0x5fee: je 0x5ff7
0x5ff0: xor eax,eax
0x5ff2: cmp edx,0x11
0x5ff5: je 0x6000
0x5ff7: rep ret 
0x6000: cmp qword ptr [rsi+0x58],0x0
0x6005: setne al
0x6008: ret 
0x60b4: cmp eax,0x22
0x60b7: mov ebp,0x1
0x60bc: jne 0x60e8
0x60e2: nop word ptr [rax+rax]
0x6210: movsxd rdi,edi
0x6213: mov eax,ebp
0x6215: add rcx,rdi
0x6218: or eax,0x2
0x621b: mov qword ptr [r15],rcx
0x621e: cmp byte ptr [rcx],0x0
0x6221: mov qword ptr [r14],rbx
0x6224: cmovne ebp,eax
0x6227: jmp 0x60ed
0x6285: or ebp,r9d
0x6288: jmp 0x6210
0x631c: mov rax,rbx
0x631f: mul rsi
0x6322: mov rbx,rax
0x6325: jo 0x63b4
0x632b: sub r8d,0x1
0x632f: jne 0x631c
0x6331: jmp 0x6285
0x6390: call 0x1a40
0x6395: lea rcx,[rip+0x5824]
0x639c: lea rsi,[rip+0x56fd]
0x63a3: lea rdi,[rip+0x5716]
0x63aa: mov edx,0x54
0x63af: call 0x1ac0
0x63b4: mov r9d,0x1
0x63ba: or rbx,-0x1
0x63be: jmp 0x632b
0x6430: xor eax,eax
0x6432: mov rdx,qword ptr [rsi+0x8]
0x6436: cmp qword ptr [rdi+0x8],rdx
0x643a: je 0x6440
0x643c: rep ret 
0x6440: mov rax,qword ptr [rsi]
0x6443: cmp qword ptr [rdi],rax
0x6446: sete al
0x6449: ret 
0x6450: mov rax,qword ptr [rdi+0x8]
0x6454: xor edx,edx
0x6456: div rsi
0x6459: mov rax,rdx
0x645c: ret 
0x6480: mov rdx,qword ptr [rdi]
0x6483: mov rax,qword ptr [rsi]
0x6486: mov rax,qword ptr [rax+0x80]
0x648d: cmp qword ptr [rdx+0x80],rax
0x6494: jb 0x64a0
0x6496: seta al
0x6499: movzx eax,al
0x649c: ret 
0x64a0: mov eax,0xffffffff
0x64a5: ret 
0x69d2: call 0x1a40
0x69dc: nop dword ptr [rax]
0x6ab6: nop word ptr cs:[rax+rax]
0x6e95: call 0x1a40
0x701e: call 0x1a40
0x7028: nop dword ptr [rax+rax]
0x7089: mov qword ptr [rsp+0x38],-0x1
0x7173: test ah,0x4
0x7176: je 0x7478
0x73ae: sub rdx,qword ptr [rax+0x38]
0x73b2: add rdx,rcx
0x73b5: mov qword ptr [rax+0x30],rdx
0x73d0: mov rax,qword ptr [r13+0x38]
0x73d4: mov rdi,qword ptr [rsp+0x40]
0x73d9: mov qword ptr [r13+0x30],rax
0x73dd: mov rax,qword ptr [r13+0x60]
0x73e1: lea rdx,[rax+0x1]
0x73e5: call 0x1c30
0x73ea: mov eax,dword ptr [r15+0x48]
0x73ee: jmp 0x716c
0x7440: and esi,0xfb
0x7446: je 0x7191
0x744c: mov eax,0xb
0x7451: cmp edx,0xb
0x7454: mov word ptr [r13+0x70],ax
0x7459: jbe 0x79e6
0x745f: mov dword ptr [r13+0x90],0x0
0x746a: mov eax,0x1
0x746f: jmp 0x71ba
0x7478: xor edx,edx
0x747a: mov rsi,r13
0x747d: mov rdi,r15
0x7480: call 0x64b0
0x7485: mov word ptr [r13+0x70],ax
0x748a: jmp 0x71c1
0x773c: cmp rbx,0x1
0x7740: je 0x75f5
0x7746: mov rsi,qword ptr [rsp+0x10]
0x774b: mov rdx,rbx
0x774e: mov rdi,r15
0x7751: call 0x6680
0x7756: mov qword ptr [rsp+0x10],rax
0x775b: jmp 0x75f5
0x77bd: test rbx,rbx
0x77c0: mov dword ptr [rbp+0x40],eax
0x77c3: jne 0x78f9
0x77c9: cmp qword ptr [rsp+0x50],0x0
0x77cf: mov eax,0x4
0x77d4: jne 0x78f9
0x77da: mov word ptr [rbp+0x70],ax
0x78f9: mov eax,0x7
0x78fe: jmp 0x77da
0x79e1: call 0x1a40
0x79e6: lea rax,[rip+0x41f3]
0x79ed: mov eax,dword ptr [rax+rdx*4]
0x79f0: mov dword ptr [r13+0x90],eax
0x79f7: mov eax,0x1
0x79fc: jmp 0x71ba
0x7b20: mov eax,dword ptr [rbx+0x48]
0x7b23: shr eax,0xa
0x7b26: and eax,0x1
0x7b29: mov byte ptr [rsp+0x16],al
0x7c25: cmp rbp,0x1
0x7c29: jbe 0x7c3c
0x7c2b: mov rsi,r12
0x7c2e: mov rdx,rbp
0x7c31: mov rdi,rbx
0x7c34: call 0x6680
0x7c39: mov r12,rax
0x7c8d: mov edi,dword ptr [rbx+0x2c]
0x7c90: lea rdx,[rip+0x3f33]
0x7c97: call 0x6c00
0x7c9c: test eax,eax
0x7c9e: mov dword ptr [rbx+0x28],eax
0x7ca1: jns 0x7cb0
0x7ca3: or dword ptr [rbx+0x48],0x4
0x7ca7: nop word ptr [rax+rax]
0x8144: nop dword ptr [rax]
0x86e0: sub rsp,0x8
0x86e4: call 0x1930
0x86e9: mov dword ptr [rax],0x16
0x86ef: mov eax,0x1
0x86f4: add rsp,0x8
0x86f8: ret 
0x8700: push r14
0x8702: push r13
0x8704: push r12
0x8706: push rbp
0x8707: mov r12d,esi
0x870a: push rbx
0x870b: mov rbx,rdi
0x870e: call 0x1930
0x8713: test r12d,0xffffefff
0x871a: mov r13,rax
0x871d: jne 0x8808
0x8723: mov rbp,qword ptr [rbx]
0x8726: mov dword ptr [rax],0x0
0x872c: test byte ptr [rbx+0x49],0x20
0x8730: jne 0x87b0
0x8732: movzx eax,word ptr [rbp+0x70]
0x8736: cmp ax,0x9
0x873a: je 0x87a0
0x873c: cmp ax,0x1
0x8740: jne 0x87b0
0x8742: mov rdi,qword ptr [rbx+0x8]
0x8746: test rdi,rdi
0x8749: je 0x8750
0x874b: call 0x6820
0x8750: cmp r12d,0x1000
0x8757: mov r14d,0x1
0x875d: jne 0x876c
0x875f: or dword ptr [rbx+0x48],0x1000
0x8766: mov r14d,0x2
0x876c: cmp qword ptr [rbp+0x58],0x0
0x8771: jne 0x8785
0x8773: mov rax,qword ptr [rbp+0x30]
0x8777: cmp byte ptr [rax],0x2f
0x877a: je 0x8785
0x877c: mov esi,dword ptr [rbx+0x48]
0x877f: test sil,0x4
0x8783: je 0x87c0
0x8785: mov esi,r14d
0x8788: mov rdi,rbx
0x878b: call 0x7030
0x8790: mov qword ptr [rbx+0x8],rax
0x8794: pop rbx
0x8795: pop rbp
0x8796: pop r12
0x8798: pop r13
0x879a: pop r14
0x879c: ret 
0x87a0: pop rbx
0x87a1: mov rax,qword ptr [rbp+0x10]
0x87a5: pop rbp
0x87a6: pop r12
0x87a8: pop r13
0x87aa: pop r14
0x87ac: ret 
0x87b0: pop rbx
0x87b1: xor eax,eax
0x87b3: pop rbp
0x87b4: pop r12
0x87b6: pop r13
0x87b8: pop r14
0x87ba: ret 
0x87c0: mov edi,dword ptr [rbx+0x2c]
0x87c3: lea rdx,[rip+0x3400]
0x87ca: call 0x6c00
0x87cf: test eax,eax
0x87d1: mov ebp,eax
0x87d3: js 0x8829
0x87d5: mov esi,r14d
0x87d8: mov rdi,rbx
0x87db: call 0x7030
0x87e0: test byte ptr [rbx+0x49],0x2
0x87e4: mov qword ptr [rbx+0x8],rax
0x87e8: jne 0x8818
0x87ea: mov edi,ebp
0x87ec: call 0x1bf0
0x87f1: test eax,eax
0x87f3: jne 0x8838
0x87f5: mov edi,ebp
0x87f7: call 0x1ae0
0x87fc: mov rax,qword ptr [rbx+0x8]
0x8800: jmp 0x8794
0x8808: mov dword ptr [rax],0x16
0x880e: xor eax,eax
0x8810: jmp 0x8794
0x8818: mov edx,0x1
0x881d: mov esi,ebp
0x881f: mov rdi,rbx
0x8822: call 0x6a50
0x8827: jmp 0x87fc
0x8829: mov qword ptr [rbx+0x8],0x0
0x8831: xor eax,eax
0x8833: jmp 0x8794
0x8838: mov ebx,dword ptr [r13]
0x883c: mov edi,ebp
0x883e: call 0x1ae0
0x8843: xor eax,eax
0x8845: mov dword ptr [r13],ebx
0x8849: jmp 0x8794
0x8850: push r13
0x8852: push r12
0x8854: mov r13,rsi
0x8857: push rbp
0x8858: push rbx
0x8859: mov rbx,rdi
0x885c: mov r12,rdx
0x885f: sub rsp,0x18
0x8863: mov rax,qword ptr fs:0x28
0x886c: mov qword ptr [rsp+0x8],rax
0x8871: xor eax,eax
0x8873: lea rax,[rsp+0x4]
0x8878: test rdi,rdi
0x887b: cmove rbx,rax
0x887f: mov rdi,rbx
0x8882: call 0x1a60
0x8887: cmp rax,-0x3
0x888b: mov rbp,rax
0x888e: jbe 0x88b0
0x8890: test r12,r12
0x8893: je 0x88b0
0x8895: xor edi,edi
0x8897: call 0x8a70
0x889c: test al,al
0x889e: jne 0x88b0
0x88a0: movzx eax,byte ptr [r13]
0x88a5: mov ebp,0x1
0x88aa: mov dword ptr [rbx],eax
0x88ac: nop dword ptr [rax]
0x88b0: mov rdx,qword ptr [rsp+0x8]
0x88b5: xor rdx,qword ptr fs:0x28
0x88be: mov rax,rbp
0x88c1: jne 0x88ce
0x88c3: add rsp,0x18
0x88c7: pop rbx
0x88c8: pop rbp
0x88c9: pop r12
0x88cb: pop r13
0x88cd: ret 
0x88ce: call 0x1a40
0x88d3: nop word ptr cs:[rax+rax]
0x88dd: nop dword ptr [rax]
0x88e0: push r12
0x88e2: push rbp
0x88e3: mov rbp,rdi
0x88e6: push rbx
0x88e7: call 0x1970
0x88ec: mov ebx,dword ptr [rbp]
0x88ef: mov rdi,rbp
0x88f2: mov r12,rax
0x88f5: call 0x9fd0
0x88fa: and ebx,0x20
0x88fd: test ebx,ebx
0x88ff: jne 0x8918
0x8901: test eax,eax
0x8903: je 0x890f
0x8905: test r12,r12
0x8908: mov eax,0xffffffff
0x890d: je 0x8948
0x890f: pop rbx
0x8910: pop rbp
0x8911: pop r12
0x8913: ret 
0x8918: test eax,eax
0x891a: jne 0x8938
0x891c: call 0x1930
0x8921: mov dword ptr [rax],0x0
0x8927: mov eax,0xffffffff
0x892c: pop rbx
0x892d: pop rbp
0x892e: pop r12
0x8930: ret 
0x8938: pop rbx
0x8939: mov eax,0xffffffff
0x893e: pop rbp
0x893f: pop r12
0x8941: ret 
0x8948: call 0x1930
0x894d: cmp dword ptr [rax],0x9
0x8950: pop rbx
0x8951: pop rbp
0x8952: pop r12
0x8954: setne al
0x8957: movzx eax,al
0x895a: neg eax
0x895c: ret 
0x89fa: nop word ptr [rax+rax]
0x8a48: lea rax,[rsp+0x60]
0x8a4d: mov dword ptr [rsp],0x10
0x8a54: mov edx,dword ptr [rsp+0x30]
0x8a58: mov qword ptr [rsp+0x8],rax
0x8a5d: lea rax,[rsp+0x20]
0x8a62: mov qword ptr [rsp+0x10],rax
0x8a67: jmp 0x8a21
0x8a69: call 0x1a40
0x8a6e: nop 
0x8a70: sub rsp,0x8
0x8a74: xor esi,esi
0x8a76: call 0x1c10
0x8a7b: mov rdx,rax
0x8a7e: mov eax,0x1
0x8a83: test rdx,rdx
0x8a86: je 0x8aa5
0x8a88: lea rdi,[rip+0x31cd]
0x8a8f: mov ecx,0x2
0x8a94: mov rsi,rdx
0x8a97: rep cmpsb [rsi],es:[rdi]
0x8a99: seta cl
0x8a9c: sbb cl,0x0
0x8a9f: xor eax,eax
0x8aa1: test cl,cl
0x8aa3: jne 0x8ab0
0x8aa5: add rsp,0x8
0x8aa9: ret 
0x8ab0: lea rdi,[rip+0x31a7]
0x8ab7: mov ecx,0x6
0x8abc: mov rsi,rdx
0x8abf: rep cmpsb [rsi],es:[rdi]
0x8ac1: seta al
0x8ac4: sbb al,0x0
0x8ac6: test al,al
0x8ac8: setne al
0x8acb: add rsp,0x8
0x8acf: ret 
0x8b70: mov rax,rdi
0x8b73: xor edx,edx
0x8b75: ror rax,0x3
0x8b79: div rsi
0x8b7c: mov rax,rdx
0x8b7f: ret 
0x8b80: cmp rdi,rsi
0x8b83: sete al
0x8b86: ret 
0x8bb2: nop dword ptr [rax]
0x8bb6: nop word ptr cs:[rax+rax]
0x8ea0: mov rax,qword ptr [rdi+0x10]
0x8ea4: ret 
0x8eb0: mov rax,qword ptr [rdi+0x18]
0x8eb4: ret 
0x8ec0: mov rax,qword ptr [rdi+0x20]
0x8ec4: ret 
0x8ed0: mov rsi,qword ptr [rdi]
0x8ed3: mov rdi,qword ptr [rdi+0x8]
0x8ed7: xor eax,eax
0x8ed9: cmp rsi,rdi
0x8edc: jae 0x8f17
0x8ede: nop 
0x8ee0: cmp qword ptr [rsi],0x0
0x8ee4: je 0x8f0c
0x8ee6: mov rdx,qword ptr [rsi+0x8]
0x8eea: mov ecx,0x1
0x8eef: test rdx,rdx
0x8ef2: je 0x8f05
0x8ef4: nop dword ptr [rax]
0x8ef8: mov rdx,qword ptr [rdx+0x8]
0x8efc: add rcx,0x1
0x8f00: test rdx,rdx
0x8f03: jne 0x8ef8
0x8f05: cmp rax,rcx
0x8f08: cmovb rax,rcx
0x8f0c: add rsi,0x10
0x8f10: cmp rsi,rdi
0x8f13: jb 0x8ee0
0x8f15: rep ret 
0x8f17: rep ret 
0x8f20: mov rcx,qword ptr [rdi]
0x8f23: mov r8,qword ptr [rdi+0x8]
0x8f27: xor edx,edx
0x8f29: xor esi,esi
0x8f2b: cmp rcx,r8
0x8f2e: jae 0x8f66
0x8f30: cmp qword ptr [rcx],0x0
0x8f34: je 0x8f5d
0x8f36: mov rax,qword ptr [rcx+0x8]
0x8f3a: add rsi,0x1
0x8f3e: add rdx,0x1
0x8f42: test rax,rax
0x8f45: je 0x8f5d
0x8f47: nop word ptr [rax+rax]
0x8f50: mov rax,qword ptr [rax+0x8]
0x8f54: add rdx,0x1
0x8f58: test rax,rax
0x8f5b: jne 0x8f50
0x8f5d: add rcx,0x10
0x8f61: cmp rcx,r8
0x8f64: jb 0x8f30
0x8f66: xor eax,eax
0x8f68: cmp qword ptr [rdi+0x18],rsi
0x8f6c: je 0x8f70
0x8f6e: rep ret 
0x8f70: cmp qword ptr [rdi+0x20],rdx
0x8f74: sete al
0x8f77: ret 
0x8f80: push r13
0x8f82: push r12
0x8f84: mov r12,rsi
0x8f87: push rbp
0x8f88: push rbx
0x8f89: xor ebx,ebx
0x8f8b: sub rsp,0x8
0x8f8f: mov rsi,qword ptr [rdi]
0x8f92: mov rcx,qword ptr [rdi+0x20]
0x8f96: mov rbp,qword ptr [rdi+0x10]
0x8f9a: mov r13,qword ptr [rdi+0x18]
0x8f9e: mov rdi,qword ptr [rdi+0x8]
0x8fa2: cmp rsi,rdi
0x8fa5: jae 0x8fe5
0x8fa7: nop word ptr [rax+rax]
0x8fb0: cmp qword ptr [rsi],0x0
0x8fb4: je 0x8fdc
0x8fb6: mov rax,qword ptr [rsi+0x8]
0x8fba: mov edx,0x1
0x8fbf: test rax,rax
0x8fc2: je 0x8fd5
0x8fc4: nop dword ptr [rax]
0x8fc8: mov rax,qword ptr [rax+0x8]
0x8fcc: add rdx,0x1
0x8fd0: test rax,rax
0x8fd3: jne 0x8fc8
0x8fd5: cmp rbx,rdx
0x8fd8: cmovb rbx,rdx
0x8fdc: add rsi,0x10
0x8fe0: cmp rsi,rdi
0x8fe3: jb 0x8fb0
0x8fe5: lea rdx,[rip+0x2c78]
0x8fec: mov esi,0x1
0x8ff1: mov rdi,r12
0x8ff4: xor eax,eax
0x8ff6: call 0x1cf0
0x8ffb: lea rdx,[rip+0x2c7a]
0x9002: xor eax,eax
0x9004: mov rcx,rbp
0x9007: mov esi,0x1
0x900c: mov rdi,r12
0x900f: call 0x1cf0
0x9014: test r13,r13
0x9017: js 0x9080
0x9019: pxor xmm0,xmm0
0x901d: test rbp,rbp
0x9020: cvtsi2sdq xmm0,r13
0x9025: mulsd xmm0,[rip+0x2ceb]
0x902d: js 0x90a9
0x902f: pxor xmm1,xmm1
0x9033: cvtsi2sdq xmm1,rbp
0x9038: divsd xmm0,xmm1
0x903c: lea rdx,[rip+0x2c6d]
0x9043: mov rcx,r13
0x9046: mov rdi,r12
0x9049: mov esi,0x1
0x904e: mov eax,0x1
0x9053: call 0x1cf0
0x9058: add rsp,0x8
0x905c: mov rcx,rbx
0x905f: mov rdi,r12
0x9062: pop rbx
0x9063: pop rbp
0x9064: pop r12
0x9066: pop r13
0x9068: lea rdx,[rip+0x2c25]
0x906f: mov esi,0x1
0x9074: xor eax,eax
0x9076: jmp 0x1cf0
0x9080: mov rax,r13
0x9083: mov rdx,r13
0x9086: pxor xmm0,xmm0
0x908a: shr rax, 1
0x908d: and edx,0x1
0x9090: or rax,rdx
0x9093: test rbp,rbp
0x9096: cvtsi2sdq xmm0,rax
0x909b: addsd xmm0,xmm0
0x909f: mulsd xmm0,[rip+0x2c71]
0x90a7: jns 0x902f
0x90a9: mov rax,rbp
0x90ac: pxor xmm1,xmm1
0x90b0: shr rax, 1
0x90b3: and ebp,0x1
0x90b6: or rax,rbp
0x90b9: cvtsi2sdq xmm1,rax
0x90be: addsd xmm1,xmm1
0x90c2: jmp 0x9038
0x90f0: mov rsi,qword ptr [rbx]
0x9100: test al,al
0x9102: jne 0x9120
0x9104: mov rbx,qword ptr [rbx+0x8]
0x9108: test rbx,rbx
0x910b: jne 0x90f0
0x9120: mov rsi,qword ptr [rbx]
0x9123: pop rbx
0x9124: pop rbp
0x9125: mov rax,rsi
0x9128: pop r12
0x912a: ret 
0x9130: cmp qword ptr [rdi+0x20],0x0
0x9135: je 0x9163
0x9137: mov rdx,qword ptr [rdi]
0x913a: mov rcx,qword ptr [rdi+0x8]
0x913e: cmp rdx,rcx
0x9141: jae 0x9168
0x9143: mov rax,qword ptr [rdx]
0x9146: test rax,rax
0x9149: jne 0x9166
0x914b: nop dword ptr [rax+rax]
0x9150: add rdx,0x10
0x9154: cmp rdx,rcx
0x9157: jae 0x9168
0x9159: mov rax,qword ptr [rdx]
0x915c: test rax,rax
0x915f: je 0x9150
0x9161: rep ret 
0x9163: xor eax,eax
0x9165: ret 
0x9166: rep ret 
0x9168: sub rsp,0x8
0x916c: call 0x1920
0x9171: nop dword ptr [rax+rax]
0x9176: nop word ptr cs:[rax+rax]
0x9180: push rbp
0x9181: push rbx
0x9182: mov rbp,rdi
0x9185: mov rbx,rsi
0x9188: sub rsp,0x8
0x918c: call 0x8b90
0x9191: mov rdx,rax
0x9194: mov rcx,rax
0x9197: mov rax,qword ptr [rdx]
0x919a: mov rdx,qword ptr [rdx+0x8]
0x919e: cmp rax,rbx
0x91a1: je 0x91b9
0x91a3: nop dword ptr [rax+rax]
0x91a8: test rdx,rdx
0x91ab: je 0x91be
0x91ad: mov rax,qword ptr [rdx]
0x91b0: mov rdx,qword ptr [rdx+0x8]
0x91b4: cmp rax,rbx
0x91b7: jne 0x91a8
0x91b9: test rdx,rdx
0x91bc: jne 0x91e8
0x91be: mov rdx,qword ptr [rbp+0x8]
0x91c2: jmp 0x91d0
0x91c8: mov rax,qword ptr [rcx]
0x91cb: test rax,rax
0x91ce: jne 0x91db
0x91d0: add rcx,0x10
0x91d4: cmp rdx,rcx
0x91d7: ja 0x91c8
0x91d9: xor eax,eax
0x91db: add rsp,0x8
0x91df: pop rbx
0x91e0: pop rbp
0x91e1: ret 
0x91e8: mov rax,qword ptr [rdx]
0x91eb: add rsp,0x8
0x91ef: pop rbx
0x91f0: pop rbp
0x91f1: ret 
0x9200: mov r9,qword ptr [rdi]
0x9203: cmp qword ptr [rdi+0x8],r9
0x9207: jbe 0x9262
0x9209: xor r8d,r8d
0x920c: mov rcx,qword ptr [r9]
0x920f: test rcx,rcx
0x9212: je 0x924d
0x9214: cmp rdx,r8
0x9217: jbe 0x9257
0x9219: mov qword ptr [rsi+r8*8],rcx
0x921d: mov rcx,qword ptr [r9+0x8]
0x9221: lea rax,[r8+0x1]
0x9225: test rcx,rcx
0x9228: je 0x924a
0x922a: nop word ptr [rax+rax]
0x9230: cmp rdx,rax
0x9233: je 0x9260
0x9235: mov r8,qword ptr [rcx]
0x9238: add rax,0x1
0x923c: mov qword ptr [rsi+rax*8-0x8],r8
0x9241: mov rcx,qword ptr [rcx+0x8]
0x9245: test rcx,rcx
0x9248: jne 0x9230
0x924a: mov r8,rax
0x924d: add r9,0x10
0x9251: cmp qword ptr [rdi+0x8],r9
0x9255: ja 0x920c
0x9257: mov rax,r8
0x925a: ret 
0x9260: rep ret 
0x9262: xor eax,eax
0x9264: ret 
0x9270: push r15
0x9272: push r14
0x9274: push r13
0x9276: push r12
0x9278: push rbp
0x9279: push rbx
0x927a: sub rsp,0x8
0x927e: mov r14,qword ptr [rdi]
0x9281: cmp qword ptr [rdi+0x8],r14
0x9285: jbe 0x92d6
0x9287: mov r13,rdx
0x928a: mov r12,rsi
0x928d: mov r15,rdi
0x9290: xor ebp,ebp
0x9292: mov rdi,qword ptr [r14]
0x9295: test rdi,rdi
0x9298: je 0x92ba
0x929a: mov rbx,r14
0x929d: jmp 0x92a3
0x92a0: mov rdi,qword ptr [rbx]
0x92a3: mov rsi,r13
0x92a6: call r12
0x92a9: test al,al
0x92ab: je 0x92c4
0x92ad: mov rbx,qword ptr [rbx+0x8]
0x92b1: add rbp,0x1
0x92b5: test rbx,rbx
0x92b8: jne 0x92a0
0x92ba: add r14,0x10
0x92be: cmp qword ptr [r15+0x8],r14
0x92c2: ja 0x9292
0x92c4: add rsp,0x8
0x92c8: mov rax,rbp
0x92cb: pop rbx
0x92cc: pop rbp
0x92cd: pop r12
0x92cf: pop r13
0x92d1: pop r14
0x92d3: pop r15
0x92d5: ret 
0x92d6: xor ebp,ebp
0x92d8: jmp 0x92c4
0x92e0: movzx ecx,byte ptr [rdi]
0x92e3: xor edx,edx
0x92e5: test cl,cl
0x92e7: je 0x930d
0x92e9: nop dword ptr [rax]
0x92f0: mov rax,rdx
0x92f3: add rdi,0x1
0x92f7: shl rax,0x5
0x92fb: sub rax,rdx
0x92fe: xor edx,edx
0x9300: add rax,rcx
0x9303: movzx ecx,byte ptr [rdi]
0x9306: div rsi
0x9309: test cl,cl
0x930b: jne 0x92f0
0x930d: mov rax,rdx
0x9310: ret 
0x9320: movabsq rax,0x3f80000000000000
0x932a: mov byte ptr [rdi+0x10],0x0
0x932e: mov qword ptr [rdi],rax
0x9331: movabsq rax,0x3fb4fdf43f4ccccd
0x933b: mov qword ptr [rdi+0x8],rax
0x933f: ret 
0x939c: mov qword ptr [rax+0x28],r15
0x93a0: call 0x8ce0
0x93a5: test al,al
0x93a7: je 0x9430
0x93ad: cmp byte ptr [r15+0x10],0x0
0x93b2: je 0x94b0
0x94b0: test rbp,rbp
0x94b3: movxd xmm1,[r15+0x8]
0x94b9: jns 0x9471
0x9500: push r12
0x9502: push rbp
0x9503: mov rbp,rdi
0x9506: push rbx
0x9507: mov r12,qword ptr [rdi]
0x950a: cmp r12,qword ptr [rdi+0x8]
0x950e: jae 0x957b
0x9510: cmp qword ptr [r12],0x0
0x9515: je 0x9571
0x9517: mov rbx,qword ptr [r12+0x8]
0x951c: mov rax,qword ptr [rbp+0x40]
0x9520: test rbx,rbx
0x9523: je 0x9555
0x9525: nop dword ptr [rax]
0x9528: test rax,rax
0x952b: je 0x9536
0x952d: mov rdi,qword ptr [rbx]
0x9530: call rax
0x9532: mov rax,qword ptr [rbp+0x40]
0x9536: mov rdx,qword ptr [rbx+0x8]
0x953a: mov rcx,qword ptr [rbp+0x48]
0x953e: mov qword ptr [rbx],0x0
0x9545: test rdx,rdx
0x9548: mov qword ptr [rbx+0x8],rcx
0x954c: mov qword ptr [rbp+0x48],rbx
0x9550: mov rbx,rdx
0x9553: jne 0x9528
0x9555: test rax,rax
0x9558: je 0x9560
0x955a: mov rdi,qword ptr [r12]
0x955e: call rax
0x9560: mov qword ptr [r12],0x0
0x9568: mov qword ptr [r12+0x8],0x0
0x9571: add r12,0x10
0x9575: cmp qword ptr [rbp+0x8],r12
0x9579: ja 0x9510
0x957b: mov qword ptr [rbp+0x18],0x0
0x9583: mov qword ptr [rbp+0x20],0x0
0x958b: pop rbx
0x958c: pop rbp
0x958d: pop r12
0x958f: ret 
0x95d0: mov rdi,qword ptr [rbx]
0x95d8: mov rbx,qword ptr [rbx+0x8]
0x95dc: test rbx,rbx
0x95df: jne 0x95d0
0x95e1: mov rax,qword ptr [r12+0x8]
0x989a: call 0x1a40
0x98ae: nop 
0x9a92: nop word ptr [rax+rax]
0x9b2f: call 0x1a40
0x9b34: nop 
0x9b36: nop word ptr cs:[rax+rax]
0x9b94: call 0x1a40
0x9b99: nop dword ptr [rax]
0x9d9e: call 0x1a40
0x9da3: nop word ptr cs:[rax+rax]
0x9dad: nop dword ptr [rax]
0x9e5e: nop 
0x9e60: sub rsp,0x8
0x9e64: mov edi,0xe
0x9e69: call 0x1bc0
0x9e6e: test rax,rax
0x9e71: je 0x9e90
0x9e73: cmp byte ptr [rax],0x0
0x9e76: lea rdx,[rip+0x1ea3]
0x9e7d: cmove rax,rdx
0x9e81: add rsp,0x8
0x9e85: ret 
0x9e90: lea rax,[rip+0x1e89]
0x9e97: add rsp,0x8
0x9e9b: ret 
0x9ee8: lea rax,[rsp+0x60]
0x9eed: mov dword ptr [rsp],0x18
0x9ef4: mov ecx,dword ptr [rsp+0x38]
0x9ef8: mov qword ptr [rsp+0x8],rax
0x9efd: lea rax,[rsp+0x20]
0x9f02: mov qword ptr [rsp+0x10],rax
0x9f07: jmp 0x9ec0
0x9f09: call 0x1a40
0x9f0e: nop 
0x9fd0: push r12
0x9fd2: push rbp
0x9fd3: push rbx
0x9fd4: mov rbx,rdi
0x9fd7: call 0x1b70
0x9fdc: test eax,eax
0x9fde: mov rdi,rbx
0x9fe1: js 0xa037
0x9fe3: call 0x1be0
0x9fe8: test eax,eax
0x9fea: jne 0xa018
0x9fec: mov rdi,rbx
0x9fef: call 0xa2d0
0x9ff4: test eax,eax
0x9ff6: je 0xa034
0x9ff8: call 0x1930
0x9ffd: mov r12d,dword ptr [rax]
0xa000: mov rdi,rbx
0xa003: mov rbp,rax
0xa006: call 0x19b0
0xa00b: test r12d,r12d
0xa00e: jne 0xa040
0xa010: pop rbx
0xa011: pop rbp
0xa012: pop r12
0xa014: ret 
0xa018: mov rdi,rbx
0xa01b: call 0x1b70
0xa020: xor esi,esi
0xa022: mov edx,0x1
0xa027: mov edi,eax
0xa029: call 0x1ab0
0xa02e: cmp rax,-0x1
0xa032: jne 0x9fec
0xa034: mov rdi,rbx
0xa037: pop rbx
0xa038: pop rbp
0xa039: pop r12
0xa03b: jmp 0x19b0
0xa040: mov dword ptr [rbp],r12d
0xa044: mov eax,0xffffffff
0xa049: jmp 0xa010
0xa29d: call 0x1a40
0xa2d0: test rdi,rdi
0xa2d3: push rbx
0xa2d4: mov rbx,rdi
0xa2d7: je 0xa2ea
0xa2d9: call 0x1be0
0xa2de: test eax,eax
0xa2e0: je 0xa2ea
0xa2e2: test dword ptr [rbx],0x100
0xa2e8: jne 0xa2f8
0xa2ea: mov rdi,rbx
0xa2ed: pop rbx
0xa2ee: jmp 0x1bb0
0xa2f8: mov rdi,rbx
0xa2fb: mov edx,0x1
0xa300: xor esi,esi
0xa302: call 0xa310
0xa307: mov rdi,rbx
0xa30a: pop rbx
0xa30b: jmp 0x1bb0
0xa310: mov rax,qword ptr [rdi+0x8]
0xa314: cmp qword ptr [rdi+0x10],rax
0xa318: je 0xa320
0xa31a: jmp 0x1c60
0xa320: mov rax,qword ptr [rdi+0x20]
0xa324: cmp qword ptr [rdi+0x28],rax
0xa328: jne 0xa31a
0xa32a: cmp qword ptr [rdi+0x48],0x0
0xa32f: jne 0xa31a
0xa331: push r12
0xa333: push rbp
0xa334: mov r12d,edx
0xa337: push rbx
0xa338: mov rbp,rsi
0xa33b: mov rbx,rdi
0xa33e: call 0x1b70
0xa343: mov edx,r12d
0xa346: mov rsi,rbp
0xa349: mov edi,eax
0xa34b: call 0x1ab0
0xa350: cmp rax,-0x1
0xa354: je 0xa362
0xa356: and dword ptr [rbx],-0x11
0xa359: mov qword ptr [rbx+0x90],rax
0xa360: xor eax,eax
0xa362: pop rbx
0xa363: pop rbp
0xa364: pop r12
0xa366: ret 
0xa380: push r15
0xa382: push r14
0xa384: mov r15,rdx
0xa387: push r13
0xa389: push r12
0xa38b: lea r12,[rip+0x20361e]
0xa392: push rbp
0xa393: lea rbp,[rip+0x20361e]
0xa39a: push rbx
0xa39b: mov r13d,edi
0xa39e: mov r14,rsi
0xa3a1: sub rbp,r12
0xa3a4: sub rsp,0x8
0xa3a8: sar rbp,0x3
0xa3ac: call 0x18e8
0xa3b1: test rbp,rbp
0xa3b4: je 0xa3d6
0xa3b6: xor ebx,ebx
0xa3b8: nop dword ptr [rax+rax]
0xa3c0: mov rdx,r15
0xa3c3: mov rsi,r14
0xa3c6: mov edi,r13d
0xa3c9: call qword ptr [r12+rbx*8]
0xa3cd: add rbx,0x1
0xa3d1: cmp rbp,rbx
0xa3d4: jne 0xa3c0
0xa3d6: add rsp,0x8
0xa3da: pop rbx
0xa3db: pop rbp
0xa3dc: pop r12
0xa3de: pop r13
0xa3e0: pop r14
0xa3e2: pop r15
0xa3e4: ret 
0xa3f0: rep ret 
