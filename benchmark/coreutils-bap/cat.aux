0x1450: sub rsp,0x8
0x1454: mov rax,qword ptr [rip+0x206b7d]
0x145b: test rax,rax
0x145e: je 0x1462
0x1460: call rax
0x1462: add rsp,0x8
0x1466: ret 
0x1476: jmp qword ptr [rip+0x2069bc]
0x14c0: jmp qword ptr [rip+0x20699a]
0x14d0: jmp qword ptr [rip+0x206992]
0x1500: jmp qword ptr [rip+0x20697a]
0x1550: jmp qword ptr [rip+0x206952]
0x1560: jmp qword ptr [rip+0x20694a]
0x1580: jmp qword ptr [rip+0x20693a]
0x1600: jmp qword ptr [rip+0x2068fa]
0x1620: jmp qword ptr [rip+0x2068ea]
0x1630: jmp qword ptr [rip+0x2068e2]
0x1640: jmp qword ptr [rip+0x2068da]
0x1660: jmp qword ptr [rip+0x2068ca]
0x1670: jmp qword ptr [rip+0x2068c2]
0x1690: jmp qword ptr [rip+0x2068b2]
0x1700: jmp qword ptr [rip+0x20687a]
0x1760: jmp qword ptr [rip+0x20684a]
0x1770: jmp qword ptr [rip+0x206842]
0x1780: jmp qword ptr [rip+0x20683a]
0x1790: jmp qword ptr [rip+0x206852]
0x17cd: nop dword ptr [rax]
0x1f16: nop word ptr cs:[rax+rax]
0x1f88: mov rbx,rax
0x1f8b: call 0x14a0
0x1f90: mov esi,dword ptr [rax]
0x1f92: lea rdx,[rip+0x3bab]
0x1f99: mov rcx,rbx
0x1f9c: xor edi,edi
0x1f9e: xor eax,eax
0x1fa0: call 0x16e0
0x1fa5: mov byte ptr [rsp+0x8c],0x0
0x2023: mov rbx,rax
0x2026: call 0x14a0
0x202b: mov esi,dword ptr [rax]
0x202d: lea rdx,[rip+0x3b10]
0x2034: xor edi,edi
0x2036: xor eax,eax
0x2038: mov rcx,rbx
0x203b: call 0x16e0
0x2040: sub r14,qword ptr [rsp+0x20]
0x2045: jne 0x21a4
0x204b: mov eax,dword ptr [rsp+0x4]
0x204f: xor r10d,r10d
0x2052: mov dword ptr [rip+0x206098],eax
0x2133: lea rsi,[rip+0x34d6]
0x213a: mov rbx,rax
0x213d: mov edx,0x5
0x2142: xor edi,edi
0x2144: call 0x1530
0x2149: mov rcx,rbx
0x214c: mov rdx,rax
0x214f: xor esi,esi
0x2151: xor edi,edi
0x2153: xor eax,eax
0x2155: call 0x16e0
0x215a: mov byte ptr [rsp+0x8c],0x0
0x2162: jmp 0x2074
0x217a: mov rbx,rax
0x217d: call 0x14a0
0x2182: mov esi,dword ptr [rax]
0x2184: lea rdx,[rip+0x39b9]
0x218b: mov rcx,rbx
0x218e: xor edi,edi
0x2190: xor eax,eax
0x2192: call 0x16e0
0x2197: mov byte ptr [rsp+0x8c],0x0
0x219f: jmp 0x2074
0x21a4: mov rsi,qword ptr [rsp+0x20]
0x21a9: mov rdx,r14
0x21ac: mov edi,0x1
0x21b1: call 0x2a60
0x21b6: cmp r14,rax
0x21b9: je 0x204b
0x21bf: jmp 0x1f11
0x21c4: mov rsi,qword ptr [rsp+0x20]
0x21c9: mov rdx,rbx
0x21cc: mov edi,0x1
0x21d1: call 0x2a60
0x21d6: cmp rbx,rax
0x21d9: je 0x20c2
0x21df: jmp 0x1f11
0x229c: mov rbx,rax
0x229f: call 0x14a0
0x22a4: mov esi,dword ptr [rax]
0x22a6: lea rdx,[rip+0x3897]
0x22ad: mov rcx,rbx
0x22b0: xor edi,edi
0x22b2: xor eax,eax
0x22b4: call 0x16e0
0x2324: lea rsi,[rip+0x3303]
0x232b: mov edx,0x5
0x2330: xor edi,edi
0x2332: mov rbx,rax
0x2335: call 0x1530
0x233a: mov r11,qword ptr [rsp+0x10]
0x233f: mov rdx,rax
0x2342: mov rcx,rbx
0x2345: xor eax,eax
0x2347: xor edi,edi
0x2349: mov esi,dword ptr [r11]
0x234c: call 0x16e0
0x2351: mov eax,dword ptr [rsp+0x4]
0x2355: movzx r10d,byte ptr [rsp+0x8]
0x235b: mov dword ptr [rip+0x205d8f],eax
0x2361: jmp 0x2058
0x23aa: call 0x1560
0x23db: nop dword ptr [rax+rax]
0x240a: hlt 
0x240b: nop dword ptr [rax+rax]
0x2410: lea rdi,[rip+0x205ca9]
0x2417: push rbp
0x2418: lea rax,[rip+0x205ca1]
0x241f: cmp rax,rdi
0x2422: mov rbp,rsp
0x2425: je 0x2440
0x2427: mov rax,qword ptr [rip+0x205b9a]
0x242e: test rax,rax
0x2431: je 0x2440
0x2433: pop rbp
0x2434: jmp rax
0x2440: pop rbp
0x2441: ret 
0x2450: lea rdi,[rip+0x205c69]
0x2457: lea rsi,[rip+0x205c62]
0x245e: push rbp
0x245f: sub rsi,rdi
0x2462: mov rbp,rsp
0x2465: sar rsi,0x3
0x2469: mov rax,rsi
0x246c: shr rax,0x3f
0x2470: add rsi,rax
0x2473: sar rsi, 1
0x2476: je 0x2490
0x2478: mov rax,qword ptr [rip+0x205b61]
0x247f: test rax,rax
0x2482: je 0x2490
0x2484: pop rbp
0x2485: jmp rax
0x2490: pop rbp
0x2491: ret 
0x24b1: push rbp
0x24b2: mov rbp,rsp
0x24b5: je 0x24c3
0x24b7: mov rdi,qword ptr [rip+0x205b4a]
0x24be: call 0x1790
0x24c3: call 0x2410
0x24c8: mov byte ptr [rip+0x205c19],0x1
0x24cf: pop rbp
0x24d0: ret 
0x24e0: push rbp
0x24e1: mov rbp,rsp
0x24e4: pop rbp
0x24e5: jmp 0x2450
0x2950: mov qword ptr [rip+0x2057b1],rdi
0x2957: ret 
0x2960: mov byte ptr [rip+0x205799],dil
0x2967: ret 
0x2970: push rbp
0x2971: push rbx
0x2972: sub rsp,0x8
0x2976: mov rdi,qword ptr [rip+0x20574b]
0x297d: call 0x5210
0x2982: test eax,eax
0x2984: je 0x299c
0x2986: call 0x14a0
0x298b: cmp byte ptr [rip+0x20576e],0x0
0x2992: mov rbx,rax
0x2995: je 0x29b3
0x2997: cmp dword ptr [rax],0x20
0x299a: jne 0x29b3
0x299c: mov rdi,qword ptr [rip+0x20573d]
0x29a3: call 0x5210
0x29a8: test eax,eax
0x29aa: jne 0x29f2
0x29ac: add rsp,0x8
0x29b0: pop rbx
0x29b1: pop rbp
0x29b2: ret 
0x29b3: lea rsi,[rip+0x2b4a]
0x29ba: xor edi,edi
0x29bc: mov edx,0x5
0x29c1: call 0x1530
0x29c6: mov rdi,qword ptr [rip+0x20573b]
0x29cd: mov rbp,rax
0x29d0: test rdi,rdi
0x29d3: je 0x29fd
0x29d5: call 0x45f0
0x29da: mov esi,dword ptr [rbx]
0x29dc: lea rdx,[rip+0x315d]
0x29e3: mov rcx,rax
0x29e6: mov r8,rbp
0x29e9: xor edi,edi
0x29eb: xor eax,eax
0x29ed: call 0x16e0
0x29f2: mov edi,dword ptr [rip+0x205648]
0x29f8: call 0x14c0
0x29fd: mov esi,dword ptr [rbx]
0x29ff: lea rdx,[rip+0x313e]
0x2a06: mov rcx,rax
0x2a09: xor edi,edi
0x2a0b: xor eax,eax
0x2a0d: call 0x16e0
0x2a12: jmp 0x29f2
0x2a30: test rdi,rdi
0x2a33: je 0x2a50
0x2a35: push rbx
0x2a36: mov ebx,esi
0x2a38: call 0x1640
0x2a3d: mov ecx,ebx
0x2a3f: xor edx,edx
0x2a41: xor esi,esi
0x2a43: pop rbx
0x2a44: mov edi,eax
0x2a46: jmp 0x15e0
0x2a50: rep ret 
0x2b7f: nop 
0x2b80: push rbp
0x2b81: push rbx
0x2b82: mov rbp,rdi
0x2b85: mov ebx,esi
0x2b87: sub rsp,0x8
0x2b8b: call 0x52f0
0x2b90: movzx edx,byte ptr [rax]
0x2b93: and edx,-0x21
0x2b96: cmp dl,0x55
0x2b99: je 0x2c10
0x2b9b: cmp dl,0x47
0x2b9e: je 0x2bc0
0x2ba0: lea rax,[rip+0x2ff4]
0x2ba7: lea rdx,[rip+0x2fef]
0x2bae: cmp ebx,0x9
0x2bb1: cmovne rax,rdx
0x2bb5: add rsp,0x8
0x2bb9: pop rbx
0x2bba: pop rbp
0x2bbb: ret 
0x2bc0: movzx edx,byte ptr [rax+0x1]
0x2bc4: and edx,-0x21
0x2bc7: cmp dl,0x42
0x2bca: jne 0x2ba0
0x2bcc: cmp byte ptr [rax+0x2],0x31
0x2bd0: jne 0x2ba0
0x2bd2: cmp byte ptr [rax+0x3],0x38
0x2bd6: jne 0x2ba0
0x2bd8: cmp byte ptr [rax+0x4],0x30
0x2bdc: jne 0x2ba0
0x2bde: cmp byte ptr [rax+0x5],0x33
0x2be2: jne 0x2ba0
0x2be4: cmp byte ptr [rax+0x6],0x30
0x2be8: jne 0x2ba0
0x2bea: cmp byte ptr [rax+0x7],0x0
0x2bee: jne 0x2ba0
0x2bf0: cmp byte ptr [rbp],0x60
0x2bf4: lea rax,[rip+0x2f99]
0x2bfb: lea rdx,[rip+0x2f96]
0x2c02: cmovne rax,rdx
0x2c06: add rsp,0x8
0x2c0a: pop rbx
0x2c0b: pop rbp
0x2c0c: ret 
0x2c10: movzx edx,byte ptr [rax+0x1]
0x2c14: and edx,-0x21
0x2c17: cmp dl,0x54
0x2c1a: jne 0x2ba0
0x2c1c: movzx edx,byte ptr [rax+0x2]
0x2c20: and edx,-0x21
0x2c23: cmp dl,0x46
0x2c26: jne 0x2ba0
0x2c2c: cmp byte ptr [rax+0x3],0x2d
0x2c30: jne 0x2ba0
0x2c36: cmp byte ptr [rax+0x4],0x38
0x2c3a: jne 0x2ba0
0x2c40: cmp byte ptr [rax+0x5],0x0
0x2c44: jne 0x2ba0
0x2c4a: cmp byte ptr [rbp],0x60
0x2c4e: lea rax,[rip+0x2f37]
0x2c55: lea rdx,[rip+0x2f34]
0x2c5c: cmovne rax,rdx
0x2c60: add rsp,0x8
0x2c64: pop rbx
0x2c65: pop rbp
0x2c66: ret 
0x2d43: xor r11d,r11d
0x2d46: mov rax,rbp
0x2d49: mov r8d,r12d
0x2d4c: mov rbp,r11
0x2d4f: mov r11,rax
0x2d52: nop word ptr [rax+rax]
0x2d58: cmp r11,rbp
0x2d5b: setne r12b
0x2d5f: cmp r11,-0x1
0x2d63: jne 0x2d72
0x2d65: mov rax,qword ptr [rsp+0x10]
0x2d6a: cmp byte ptr [rax+rbp],0x0
0x2d6e: setne r12b
0x2d72: test r12b,r12b
0x2d75: je 0x33d0
0x2d7b: cmp dword ptr [rsp+0x8],0x2
0x2d80: mov rdi,qword ptr [rsp+0x10]
0x2d85: lea r9,[rdi+rbp]
0x2d89: setne al
0x2d8c: and al,byte ptr [rsp+0xd]
0x2d90: mov r10d,eax
0x2d93: je 0x2e40
0x2d99: mov rax,qword ptr [rsp+0x18]
0x2d9e: test rax,rax
0x2da1: je 0x31d0
0x2da7: cmp r11,-0x1
0x2dab: lea rbx,[rbp+rax]
0x2db0: jne 0x2de0
0x2db2: cmp rax,0x1
0x2db6: jbe 0x2de0
0x2db8: mov byte ptr [rsp+0x38],r8b
0x2dbd: mov byte ptr [rsp+0x30],r10b
0x2dc2: mov qword ptr [rsp+0x28],r9
0x2dc7: call 0x1550
0x2dcc: movzx r8d,byte ptr [rsp+0x38]
0x2dd2: movzx r10d,byte ptr [rsp+0x30]
0x2dd8: mov r11,rax
0x2ddb: mov r9,qword ptr [rsp+0x28]
0x2de0: cmp rbx,r11
0x2de3: mov byte ptr [rsp+0x28],r10b
0x2de8: ja 0x33a0
0x2dee: mov rdx,qword ptr [rsp+0x18]
0x2df3: mov rsi,qword ptr [rsp+0x48]
0x2df8: mov rdi,r9
0x2dfb: mov qword ptr [rsp+0x40],r11
0x2e00: mov byte ptr [rsp+0x38],r8b
0x2e05: mov qword ptr [rsp+0x30],r9
0x2e0a: call 0x1600
0x2e0f: test eax,eax
0x2e11: mov r9,qword ptr [rsp+0x30]
0x2e16: movzx r8d,byte ptr [rsp+0x38]
0x2e1c: mov r11,qword ptr [rsp+0x40]
0x2e21: jne 0x33a0
0x2e27: cmp byte ptr [rsp+0xf],0x0
0x2e2c: movzx r10d,byte ptr [rsp+0x28]
0x2e32: jne 0x3db5
0x2e38: nop dword ptr [rax+rax]
0x2e40: movzx ebx,byte ptr [r9]
0x2e44: cmp bl,0x7e
0x2e47: ja 0x3168
0x2e4d: lea rcx,[rip+0x2dd8]
0x2e54: movzx edx,bl
0x2e57: movsxd rax,dword ptr [rcx+rdx*4]
0x2e5b: add rax,rcx
0x2e5e: jmp rax
0x2e98: cmp byte ptr [rsp+0xd],0x1
0x2e9d: jne 0x2fb2
0x2ea3: test dl,dl
0x2ea5: jne 0x2fb2
0x2eab: mov rsi,qword ptr [rsp+0x20]
0x2eb0: test rsi,rsi
0x2eb3: je 0x2ec9
0x2eb5: mov edx,ebx
0x2eb7: shr dl,0x5
0x2eba: movzx edx,dl
0x2ebd: mov edx,dword ptr [rsi+rdx*4]
0x2ec0: btl edx,ebx
0x2ec3: jb 0x3013
0x2ec9: test r10b,r10b
0x2ecc: jne 0x3013
0x2ed2: xor eax,0x1
0x2ed5: add rbp,0x1
0x2ed9: and eax,r8d
0x2edc: test al,al
0x2ede: je 0x2f00
0x2ee0: cmp r13,r15
0x2ee3: jbe 0x2eea
0x2ee5: mov byte ptr [r14+r15],0x27
0x2eea: lea rax,[r15+0x1]
0x2eee: cmp r13,rax
0x2ef1: jbe 0x2ef9
0x2ef3: mov byte ptr [r14+r15+0x1],0x27
0x2ef9: add r15,0x2
0x2efd: xor r8d,r8d
0x2f00: cmp r15,r13
0x2f03: jae 0x2f09
0x2f05: mov byte ptr [r14+r15],bl
0x2f09: movzx edi,byte ptr [rsp+0xe]
0x2f0e: add r15,0x1
0x2f12: mov eax,0x0
0x2f17: test r12b,r12b
0x2f1a: cmove edi,eax
0x2f1d: mov byte ptr [rsp+0xe],dil
0x2f22: jmp 0x2d58
0x2fb2: cmp byte ptr [rsp+0xf],0x0
0x2fb7: jne 0x2eab
0x2fbd: jmp 0x2ec9
0x3013: cmp dword ptr [rsp+0x8],0x2
0x3018: sete dl
0x301b: cmp byte ptr [rsp+0xf],0x0
0x3020: mov eax,edx
0x3022: jne 0x3878
0x3028: mov eax,r8d
0x302b: xor eax,0x1
0x302e: and al,dl
0x3030: je 0x3061
0x3032: cmp r13,r15
0x3035: jbe 0x303c
0x3037: mov byte ptr [r14+r15],0x27
0x303c: lea rdx,[r15+0x1]
0x3040: cmp r13,rdx
0x3043: jbe 0x304b
0x3045: mov byte ptr [r14+r15+0x1],0x24
0x304b: lea rdx,[r15+0x2]
0x304f: cmp r13,rdx
0x3052: jbe 0x305a
0x3054: mov byte ptr [r14+r15+0x2],0x27
0x305a: add r15,0x3
0x305e: mov r8d,eax
0x3061: cmp r13,r15
0x3064: jbe 0x306b
0x3066: mov byte ptr [r14+r15],0x5c
0x306b: add r15,0x1
0x306f: add rbp,0x1
0x3073: jmp 0x2f00
0x3160: xor r10d,r10d
0x3163: nop dword ptr [rax+rax]
0x3168: cmp qword ptr [rsp+0x58],0x1
0x316e: jne 0x3518
0x3174: mov qword ptr [rsp+0x38],r11
0x3179: mov byte ptr [rsp+0x30],r8b
0x317e: mov byte ptr [rsp+0x28],r10b
0x3183: call 0x1780
0x3188: mov rcx,qword ptr [rax]
0x318b: movzx edx,bl
0x318e: movzx r10d,byte ptr [rsp+0x28]
0x3194: movzx r8d,byte ptr [rsp+0x30]
0x319a: mov r11,qword ptr [rsp+0x38]
0x319f: mov edi,0x1
0x31a4: movzx eax,word ptr [rcx+rdx*2]
0x31a8: and ax,0x4000
0x31ac: setne r12b
0x31b0: sete al
0x31b3: and al,byte ptr [rsp+0xd]
0x31b7: test al,al
0x31b9: jne 0x3b51
0x31bf: cmp dword ptr [rsp+0x8],0x2
0x31c4: sete dl
0x31c7: jmp 0x2e98
0x31d0: movzx ebx,byte ptr [r9]
0x31d4: cmp bl,0x7e
0x31d7: ja 0x3160
0x31d9: lea rcx,[rip+0x2c48]
0x31e0: movzx edx,bl
0x31e3: movsxd rax,dword ptr [rcx+rdx*4]
0x31e7: add rax,rcx
0x31ea: jmp rax
0x33a0: xor r10d,r10d
0x33a3: jmp 0x2e40
0x33d0: cmp dword ptr [rsp+0x8],0x2
0x33d5: movzx ebx,byte ptr [rsp+0xf]
0x33da: mov r12d,r8d
0x33dd: mov rbp,r11
0x33e0: sete dl
0x33e3: mov eax,ebx
0x33e5: test r15,r15
0x33e8: sete cl
0x33eb: and eax,edx
0x33ed: and al,cl
0x33ef: jne 0x3e56
0x33f5: mov eax,ebx
0x33f7: xor eax,0x1
0x33fa: and dl,al
0x33fc: je 0x3d6c
0x3402: cmp byte ptr [rsp+0x7c],0x0
0x3407: je 0x3d6a
0x340d: cmp byte ptr [rsp+0xe],0x0
0x3412: jne 0x3e0d
0x3418: test r13,r13
0x341b: sete al
0x341e: cmp qword ptr [rsp+0x50],0x0
0x3424: setne dl
0x3427: and al,dl
0x3429: je 0x3e4c
0x342f: mov r13,qword ptr [rsp+0x50]
0x3434: lea rbx,[rip+0x2762]
0x343b: mov byte ptr [r14],0x27
0x343f: mov dword ptr [rsp+0x8],0x2
0x3447: mov r15d,0x1
0x344d: mov qword ptr [rsp+0x18],0x1
0x3456: mov byte ptr [rsp+0xf],0x0
0x345b: mov qword ptr [rsp+0x48],rbx
0x3460: mov byte ptr [rsp+0x7c],al
0x3464: jmp 0x2d43
0x3518: lea rax,[rsp+0xa0]
0x3520: cmp r11,-0x1
0x3524: mov qword ptr [rsp+0xa0],0x0
0x3530: mov qword ptr [rsp+0x28],rax
0x3535: jne 0x3564
0x3537: mov rdi,qword ptr [rsp+0x10]
0x353c: mov byte ptr [rsp+0x40],r8b
0x3541: mov byte ptr [rsp+0x38],r10b
0x3546: mov qword ptr [rsp+0x30],r9
0x354b: call 0x1550
0x3550: movzx r8d,byte ptr [rsp+0x40]
0x3556: movzx r10d,byte ptr [rsp+0x38]
0x355c: mov r11,rax
0x355f: mov r9,qword ptr [rsp+0x30]
0x3564: lea rax,[rsp+0x9c]
0x356c: xor ecx,ecx
0x356e: mov byte ptr [rsp+0x7e],bl
0x3572: mov byte ptr [rsp+0x7d],r8b
0x3577: mov rbx,rcx
0x357a: mov qword ptr [rsp+0x88],r9
0x3582: mov qword ptr [rsp+0x38],rax
0x3587: mov byte ptr [rsp+0x7f],r10b
0x358c: mov qword ptr [rsp+0x80],r15
0x3594: mov qword ptr [rsp+0x40],r14
0x3599: mov qword ptr [rsp+0x70],r13
0x359e: mov qword ptr [rsp+0x30],r11
0x35a3: mov rax,qword ptr [rsp+0x10]
0x35a8: lea r14,[rbp+rbx]
0x35ad: mov rdx,qword ptr [rsp+0x30]
0x35b2: mov rcx,qword ptr [rsp+0x28]
0x35b7: mov rdi,qword ptr [rsp+0x38]
0x35bc: lea r13,[rax+r14]
0x35c0: sub rdx,r14
0x35c3: mov rsi,r13
0x35c6: call 0x5180
0x35cb: test rax,rax
0x35ce: mov r15,rax
0x35d1: je 0x3621
0x35d3: cmp rax,-0x1
0x35d7: je 0x3bf5
0x35dd: cmp rax,-0x2
0x35e1: je 0x3b81
0x35e7: cmp dword ptr [rsp+0x8],0x2
0x35ec: sete al
0x35ef: and al,byte ptr [rsp+0xf]
0x35f3: jne 0x3790
0x35f9: mov edi,dword ptr [rsp+0x9c]
0x3600: call 0x1770
0x3605: mov rdi,qword ptr [rsp+0x28]
0x360a: test eax,eax
0x360c: mov eax,0x0
0x3611: cmove r12d,eax
0x3615: add rbx,r15
0x3618: call 0x1760
0x361d: test eax,eax
0x361f: je 0x35a3
0x3621: mov edx,r12d
0x3624: mov rdi,rbx
0x3627: movzx r8d,byte ptr [rsp+0x7d]
0x362d: xor edx,0x1
0x3630: movzx ebx,byte ptr [rsp+0x7e]
0x3635: movzx r10d,byte ptr [rsp+0x7f]
0x363b: and dl,byte ptr [rsp+0xd]
0x363f: mov r15,qword ptr [rsp+0x80]
0x3647: mov r14,qword ptr [rsp+0x40]
0x364c: mov r13,qword ptr [rsp+0x70]
0x3651: mov r11,qword ptr [rsp+0x30]
0x3656: cmp rdi,0x1
0x365a: jbe 0x3c5b
0x3660: mov rcx,rdi
0x3663: xor esi,esi
0x3665: movzx r9d,byte ptr [rsp+0xf]
0x366b: add rcx,rbp
0x366e: mov rdi,qword ptr [rsp+0x10]
0x3673: jmp 0x372e
0x3680: cmp dword ptr [rsp+0x8],0x2
0x3685: sete al
0x3688: test r9b,r9b
0x368b: jne 0x3b40
0x3691: mov esi,r8d
0x3694: xor esi,0x1
0x3697: and al,sil
0x369a: je 0x36cb
0x369c: cmp r13,r15
0x369f: jbe 0x36a6
0x36a1: mov byte ptr [r14+r15],0x27
0x36a6: lea rsi,[r15+0x1]
0x36aa: cmp r13,rsi
0x36ad: jbe 0x36b5
0x36af: mov byte ptr [r14+r15+0x1],0x24
0x36b5: lea rsi,[r15+0x2]
0x36b9: cmp r13,rsi
0x36bc: jbe 0x36c4
0x36be: mov byte ptr [r14+r15+0x2],0x27
0x36c4: add r15,0x3
0x36c8: mov r8d,eax
0x36cb: cmp r13,r15
0x36ce: jbe 0x36d5
0x36d0: mov byte ptr [r14+r15],0x5c
0x36d5: lea rax,[r15+0x1]
0x36d9: cmp r13,rax
0x36dc: jbe 0x36eb
0x36de: mov eax,ebx
0x36e0: shr al,0x6
0x36e3: add eax,0x30
0x36e6: mov byte ptr [r14+r15+0x1],al
0x36eb: lea rax,[r15+0x2]
0x36ef: cmp r13,rax
0x36f2: jbe 0x3704
0x36f4: mov eax,ebx
0x36f6: shr al,0x3
0x36f9: and eax,0x7
0x36fc: add eax,0x30
0x36ff: mov byte ptr [r14+r15+0x2],al
0x3704: and ebx,0x7
0x3707: add rbp,0x1
0x370b: add r15,0x3
0x370f: add ebx,0x30
0x3712: cmp rbp,rcx
0x3715: jae 0x2f00
0x371b: mov esi,edx
0x371d: cmp r13,r15
0x3720: jbe 0x3726
0x3722: mov byte ptr [r14+r15],bl
0x3726: movzx ebx,byte ptr [rdi+rbp]
0x372a: add r15,0x1
0x372e: test dl,dl
0x3730: jne 0x3680
0x3736: mov eax,esi
0x3738: xor eax,0x1
0x373b: and eax,r8d
0x373e: test r10b,r10b
0x3741: je 0x3751
0x3743: cmp r13,r15
0x3746: jbe 0x374d
0x3748: mov byte ptr [r14+r15],0x5c
0x374d: add r15,0x1
0x3751: add rbp,0x1
0x3755: cmp rbp,rcx
0x3758: jae 0x2edc
0x375e: test al,al
0x3760: je 0x3b5e
0x3766: cmp r13,r15
0x3769: jbe 0x3770
0x376b: mov byte ptr [r14+r15],0x27
0x3770: lea rax,[r15+0x1]
0x3774: cmp r13,rax
0x3777: jbe 0x377f
0x3779: mov byte ptr [r14+r15+0x1],0x27
0x377f: add r15,0x2
0x3783: xor r10d,r10d
0x3786: xor r8d,r8d
0x3789: jmp 0x371d
0x3790: cmp r15,0x1
0x3794: je 0x35f9
0x379a: mov rdi,qword ptr [rsp+0x10]
0x379f: lea rcx,[rdi+r15]
0x37a3: lea rdx,[rdi+r14+0x1]
0x37a8: lea r8,[rcx+r14]
0x37ac: jmp 0x37bd
0x37b0: add rdx,0x1
0x37b4: cmp r8,rdx
0x37b7: je 0x35f9
0x37bd: movzx ecx,byte ptr [rdx]
0x37c0: sub ecx,0x5b
0x37c3: cmp cl,0x21
0x37c6: ja 0x37b0
0x37c8: mov esi,0x1
0x37cd: shl rsi,cl
0x37d0: mov rcx,rsi
0x37d3: movabsq rsi,0x20000002b
0x37dd: test rcx,rsi
0x37e0: je 0x37b0
0x37e2: mov r14,qword ptr [rsp+0x40]
0x37e7: mov r13,qword ptr [rsp+0x70]
0x37ec: mov rbp,qword ptr [rsp+0x30]
0x37f1: mov dword ptr [rsp+0x8],0x2
0x37f9: cmp byte ptr [rsp+0xd],0x0
0x37fe: je 0x3810
0x3800: test al,al
0x3802: mov eax,0x4
0x3807: cmove eax,dword ptr [rsp+0x8]
0x380c: mov dword ptr [rsp+0x8],eax
0x3810: sub rsp,0x8
0x3814: mov rcx,rbp
0x3817: mov rsi,r13
0x381a: push qword ptr [rsp+0x68]
0x381e: push qword ptr [rsp+0x78]
0x3822: mov rdi,r14
0x3825: push 0x0
0x3827: mov r9d,dword ptr [rsp+0x98]
0x382f: mov r8d,dword ptr [rsp+0x28]
0x3834: mov rdx,qword ptr [rsp+0x30]
0x3839: and r9d,-0x3
0x383d: call 0x2c70
0x3842: add rsp,0x20
0x3846: mov r15,rax
0x3849: mov rbx,qword ptr [rsp+0xa8]
0x3851: xor rbx,qword ptr fs:0x28
0x385a: mov rax,r15
0x385d: jne 0x3e63
0x3863: add rsp,0xb8
0x386a: pop rbx
0x386b: pop rbp
0x386c: pop r12
0x386e: pop r13
0x3870: pop r14
0x3872: pop r15
0x3874: ret 
0x3878: mov rbp,r11
0x387b: jmp 0x37f9
0x38e1: test r13,r13
0x38e4: jne 0x3e7a
0x38ea: lea rax,[rip+0x22ac]
0x38f1: mov qword ptr [rsp+0x50],0x0
0x38fa: mov byte ptr [rsp+0xe],0x1
0x38ff: mov byte ptr [rsp+0x7c],0x0
0x3904: xor r12d,r12d
0x3907: mov byte ptr [rsp+0xf],0x0
0x390c: mov qword ptr [rsp+0x18],0x1
0x3915: mov qword ptr [rsp+0x48],rax
0x391a: mov r15d,0x1
0x3920: mov dword ptr [rsp+0x8],0x2
0x3928: jmp 0x2d43
0x3b40: movzx ebx,byte ptr [rsp+0xf]
0x3b45: mov rbp,r11
0x3b48: mov byte ptr [rsp+0xd],bl
0x3b4c: jmp 0x37f9
0x3b51: movzx edx,byte ptr [rsp+0xd]
0x3b56: xor r12d,r12d
0x3b59: jmp 0x3660
0x3b5e: xor r10d,r10d
0x3b61: jmp 0x371d
0x3b81: mov r11,qword ptr [rsp+0x30]
0x3b86: mov rsi,r14
0x3b89: mov rcx,r13
0x3b8c: mov rax,rbx
0x3b8f: mov rdi,rbx
0x3b92: movzx r8d,byte ptr [rsp+0x7d]
0x3b98: movzx ebx,byte ptr [rsp+0x7e]
0x3b9d: mov r9,qword ptr [rsp+0x88]
0x3ba5: cmp rsi,r11
0x3ba8: movzx r10d,byte ptr [rsp+0x7f]
0x3bae: mov r15,qword ptr [rsp+0x80]
0x3bb6: mov r14,qword ptr [rsp+0x40]
0x3bbb: mov r13,qword ptr [rsp+0x70]
0x3bc0: jae 0x3be8
0x3bc2: cmp byte ptr [rcx],0x0
0x3bc5: jne 0x3bd7
0x3bc7: jmp 0x3be8
0x3bd0: cmp byte ptr [r9+rax],0x0
0x3bd5: je 0x3be5
0x3bd7: add rax,0x1
0x3bdb: lea rdx,[rbp+rax]
0x3be0: cmp r11,rdx
0x3be3: ja 0x3bd0
0x3be5: mov rdi,rax
0x3be8: movzx edx,byte ptr [rsp+0xd]
0x3bed: xor r12d,r12d
0x3bf0: jmp 0x3656
0x3bf5: mov rdi,rbx
0x3bf8: movzx r8d,byte ptr [rsp+0x7d]
0x3bfe: movzx ebx,byte ptr [rsp+0x7e]
0x3c03: movzx r10d,byte ptr [rsp+0x7f]
0x3c09: mov r15,qword ptr [rsp+0x80]
0x3c11: xor r12d,r12d
0x3c14: mov r14,qword ptr [rsp+0x40]
0x3c19: mov r13,qword ptr [rsp+0x70]
0x3c1e: mov r11,qword ptr [rsp+0x30]
0x3c23: movzx edx,byte ptr [rsp+0xd]
0x3c28: jmp 0x3656
0x3c5b: mov eax,edx
0x3c5d: jmp 0x31b7
0x3d6a: mov eax,edx
0x3d6c: mov rbx,qword ptr [rsp+0x48]
0x3d71: test rbx,rbx
0x3d74: je 0x3da2
0x3d76: test al,al
0x3d78: je 0x3da2
0x3d7a: movzx ecx,byte ptr [rbx]
0x3d7d: mov rax,rbx
0x3d80: test cl,cl
0x3d82: je 0x3da2
0x3d84: mov rdx,r15
0x3d87: sub rax,r15
0x3d8a: cmp r13,rdx
0x3d8d: jbe 0x3d93
0x3d8f: mov byte ptr [r14+rdx],cl
0x3d93: add rdx,0x1
0x3d97: movzx ecx,byte ptr [rax+rdx]
0x3d9b: test cl,cl
0x3d9d: jne 0x3d8a
0x3d9f: mov r15,rdx
0x3da2: cmp r13,r15
0x3da5: jbe 0x3849
0x3dab: mov byte ptr [r14+r15],0x0
0x3db0: jmp 0x3849
0x3db5: cmp dword ptr [rsp+0x8],0x2
0x3dba: movzx ebx,byte ptr [rsp+0xf]
0x3dbf: mov rbp,r11
0x3dc2: sete al
0x3dc5: mov byte ptr [rsp+0xd],bl
0x3dc9: jmp 0x37f9
0x3e0d: sub rsp,0x8
0x3e11: mov r8d,0x5
0x3e17: mov rcx,r11
0x3e1a: push qword ptr [rsp+0x68]
0x3e1e: push qword ptr [rsp+0x78]
0x3e22: mov rdi,r14
0x3e25: push qword ptr [rsp+0x38]
0x3e29: mov r9d,dword ptr [rsp+0x98]
0x3e31: mov rdx,qword ptr [rsp+0x30]
0x3e36: mov rsi,qword ptr [rsp+0x70]
0x3e3b: call 0x2c70
0x3e40: add rsp,0x20
0x3e44: mov r15,rax
0x3e47: jmp 0x3849
0x3e4c: movzx eax,byte ptr [rsp+0x7c]
0x3e51: jmp 0x3d6c
0x3e56: mov dword ptr [rsp+0x8],0x2
0x3e5e: jmp 0x37f9
0x3e63: call 0x1560
0x3e68: mov byte ptr [rsp+0xd],0x0
0x3e6d: jmp 0x38e1
0x3e7a: mov byte ptr [rsp+0xe],0x1
0x3e7f: xor eax,eax
0x3e81: xor r12d,r12d
0x3e84: mov qword ptr [rsp+0x50],0x0
0x3e8d: jmp 0x3434
0x3ea4: nop 
0x3ea6: nop word ptr cs:[rax+rax]
0x3f9c: add rsp,0x20
0x3fa0: mov r11,qword ptr [rsp+0x10]
0x3fa5: cmp r11,rax
0x3fa8: ja 0x4011
0x3faa: lea rsi,[rax+0x1]
0x3fae: lea rax,[rip+0x20416b]
0x3fb5: cmp r12,rax
0x3fb8: mov qword ptr [rbx],rsi
0x3fbb: je 0x3fcf
0x3fbd: mov rdi,r12
0x3fc0: mov qword ptr [rsp+0x10],rsi
0x3fc5: call 0x1480
0x3fca: mov rsi,qword ptr [rsp+0x10]
0x3fcf: mov rdi,rsi
0x3fd2: mov qword ptr [rsp+0x10],rsi
0x3fd7: call 0x4ef0
0x3fdc: sub rsp,0x8
0x3fe0: mov qword ptr [rbx+0x8],rax
0x3fe4: mov r8d,dword ptr [rbp]
0x3fe8: push qword ptr [rbp+0x30]
0x3feb: push qword ptr [rbp+0x28]
0x3fee: mov rcx,r14
0x3ff1: push r15
0x3ff3: mov r9d,dword ptr [rsp+0x3c]
0x3ff8: mov rdi,rax
0x3ffb: mov rdx,qword ptr [rsp+0x28]
0x4000: mov rsi,qword ptr [rsp+0x30]
0x4005: mov r12,rax
0x4008: call 0x2c70
0x400d: add rsp,0x20
0x4011: mov eax,dword ptr [rsp+0x18]
0x4015: mov dword ptr [r13],eax
0x4019: add rsp,0x28
0x401d: mov rax,r12
0x4020: pop rbx
0x4021: pop rbp
0x4022: pop r12
0x4024: pop r13
0x4026: pop r14
0x4028: pop r15
0x402a: ret 
0x4051: call 0x1490
0x4056: call 0x5140
0x405b: nop dword ptr [rax+rax]
0x4060: push r12
0x4062: push rbp
0x4063: push rbx
0x4064: mov rbx,rdi
0x4067: call 0x14a0
0x406c: mov r12d,dword ptr [rax]
0x406f: mov rbp,rax
0x4072: lea rax,[rip+0x2041a7]
0x4079: test rbx,rbx
0x407c: mov esi,0x38
0x4081: cmove rbx,rax
0x4085: mov rdi,rbx
0x4088: call 0x50f0
0x408d: mov dword ptr [rbp],r12d
0x4091: pop rbx
0x4092: pop rbp
0x4093: pop r12
0x4095: ret 
0x40a0: lea rax,[rip+0x204179]
0x40a7: test rdi,rdi
0x40aa: cmove rdi,rax
0x40ae: mov eax,dword ptr [rdi]
0x40b0: ret 
0x40c0: lea rax,[rip+0x204159]
0x40c7: test rdi,rdi
0x40ca: cmove rdi,rax
0x40ce: mov dword ptr [rdi],esi
0x40d0: ret 
0x40e0: lea rax,[rip+0x204139]
0x40e7: test rdi,rdi
0x40ea: mov ecx,esi
0x40ec: cmove rdi,rax
0x40f0: mov eax,esi
0x40f2: and ecx,0x1f
0x40f5: shr al,0x5
0x40f8: movzx eax,al
0x40fb: lea rdi,[rdi+rax*4+0x8]
0x4100: mov esi,dword ptr [rdi]
0x4102: mov eax,esi
0x4104: shr eax,cl
0x4106: xor edx,eax
0x4108: and eax,0x1
0x410b: and edx,0x1
0x410e: shl edx,cl
0x4110: xor edx,esi
0x4112: mov dword ptr [rdi],edx
0x4114: ret 
0x4120: lea rax,[rip+0x2040f9]
0x4127: test rdi,rdi
0x412a: cmove rdi,rax
0x412e: mov eax,dword ptr [rdi+0x4]
0x4131: mov dword ptr [rdi+0x4],esi
0x4134: ret 
0x4140: lea rax,[rip+0x2040d9]
0x4147: test rdi,rdi
0x414a: cmove rdi,rax
0x414e: test rsi,rsi
0x4151: mov dword ptr [rdi],0xa
0x4157: je 0x4167
0x4159: test rdx,rdx
0x415c: je 0x4167
0x415e: mov qword ptr [rdi+0x28],rsi
0x4162: mov qword ptr [rdi+0x30],rdx
0x4166: ret 
0x4167: sub rsp,0x8
0x416b: call 0x1490
0x4170: push r15
0x4172: push r14
0x4174: lea rax,[rip+0x2040a5]
0x417b: push r13
0x417d: push r12
0x417f: mov r13,rdi
0x4182: push rbp
0x4183: push rbx
0x4184: mov rbx,r8
0x4187: mov r14,rsi
0x418a: mov r15,rdx
0x418d: sub rsp,0x18
0x4191: test r8,r8
0x4194: cmove rbx,rax
0x4198: mov qword ptr [rsp+0x8],rcx
0x419d: call 0x14a0
0x41a2: mov r12d,dword ptr [rax]
0x41a5: mov rbp,rax
0x41a8: lea rax,[rbx+0x8]
0x41ac: sub rsp,0x8
0x41b0: mov r9d,dword ptr [rbx+0x4]
0x41b4: push qword ptr [rbx+0x30]
0x41b7: mov r8d,dword ptr [rbx]
0x41ba: push qword ptr [rbx+0x28]
0x41bd: mov rdx,r15
0x41c0: push rax
0x41c1: mov rcx,qword ptr [rsp+0x28]
0x41c6: mov rsi,r14
0x41c9: mov rdi,r13
0x41cc: call 0x2c70
0x41d1: mov dword ptr [rbp],r12d
0x41d5: add rsp,0x38
0x41d9: pop rbx
0x41da: pop rbp
0x41db: pop r12
0x41dd: pop r13
0x41df: pop r14
0x41e1: pop r15
0x41e3: ret 
0x41f0: push r15
0x41f2: push r14
0x41f4: lea rax,[rip+0x204025]
0x41fb: push r13
0x41fd: push r12
0x41ff: mov r12,rdx
0x4202: push rbp
0x4203: push rbx
0x4204: mov rbx,rcx
0x4207: mov r14,rdi
0x420a: mov r15,rsi
0x420d: sub rsp,0x38
0x4211: test rcx,rcx
0x4214: cmove rbx,rax
0x4218: xor ebp,ebp
0x421a: call 0x14a0
0x421f: test r12,r12
0x4222: mov r13,rax
0x4225: mov eax,dword ptr [rax]
0x4227: sete bpl
0x422b: or ebp,dword ptr [rbx+0x4]
0x422e: lea r10,[rbx+0x8]
0x4232: sub rsp,0x8
0x4236: mov r8d,dword ptr [rbx]
0x4239: mov rcx,r15
0x423c: mov dword ptr [rsp+0x14],eax
0x4240: push qword ptr [rbx+0x30]
0x4243: mov rdx,r14
0x4246: push qword ptr [rbx+0x28]
0x4249: push r10
0x424b: xor esi,esi
0x424d: mov r9d,ebp
0x4250: xor edi,edi
0x4252: mov qword ptr [rsp+0x40],r10
0x4257: call 0x2c70
0x425c: lea rsi,[rax+0x1]
0x4260: mov qword ptr [rsp+0x48],rax
0x4265: add rsp,0x20
0x4269: mov rdi,rsi
0x426c: mov qword ptr [rsp+0x18],rsi
0x4271: call 0x4ef0
0x4276: mov qword ptr [rsp+0x10],rax
0x427b: sub rsp,0x8
0x427f: push qword ptr [rbx+0x30]
0x4282: push qword ptr [rbx+0x28]
0x4285: mov r10,qword ptr [rsp+0x38]
0x428a: mov r9d,ebp
0x428d: mov r8d,dword ptr [rbx]
0x4290: mov rcx,r15
0x4293: mov rdx,r14
0x4296: mov rdi,rax
0x4299: push r10
0x429b: mov rsi,qword ptr [rsp+0x38]
0x42a0: call 0x2c70
0x42a5: mov eax,dword ptr [rsp+0x2c]
0x42a9: add rsp,0x20
0x42ad: test r12,r12
0x42b0: mov dword ptr [r13],eax
0x42b4: je 0x42bf
0x42b6: mov r11,qword ptr [rsp+0x28]
0x42bb: mov qword ptr [r12],r11
0x42bf: mov rax,qword ptr [rsp+0x10]
0x42c4: add rsp,0x38
0x42c8: pop rbx
0x42c9: pop rbp
0x42ca: pop r12
0x42cc: pop r13
0x42ce: pop r14
0x42d0: pop r15
0x42d2: ret 
0x42e0: mov rcx,rdx
0x42e3: xor edx,edx
0x42e5: jmp 0x41f0
0x42f0: mov eax,dword ptr [rip+0x203da2]
0x42f6: push r12
0x42f8: mov r12,qword ptr [rip+0x203da1]
0x42ff: push rbp
0x4300: push rbx
0x4301: cmp eax,0x1
0x4304: jle 0x4331
0x4306: sub eax,0x2
0x4309: lea rbx,[r12+0x18]
0x430e: shl rax,0x4
0x4312: lea rbp,[r12+rax+0x28]
0x4317: nop word ptr [rax+rax]
0x4320: mov rdi,qword ptr [rbx]
0x4323: add rbx,0x10
0x4327: call 0x1480
0x432c: cmp rbx,rbp
0x432f: jne 0x4320
0x4331: mov rdi,qword ptr [r12+0x8]
0x4336: lea rbx,[rip+0x203de3]
0x433d: cmp rdi,rbx
0x4340: je 0x4359
0x4342: call 0x1480
0x4347: mov qword ptr [rip+0x203d5e],0x100
0x4352: mov qword ptr [rip+0x203d5f],rbx
0x4359: lea rbx,[rip+0x203d50]
0x4360: cmp r12,rbx
0x4363: je 0x4374
0x4365: mov rdi,r12
0x4368: call 0x1480
0x436d: mov qword ptr [rip+0x203d2c],rbx
0x4374: pop rbx
0x4375: mov dword ptr [rip+0x203d19],0x1
0x437f: pop rbp
0x4380: pop r12
0x4382: ret 
0x4390: lea rcx,[rip+0x203e89]
0x4397: mov rdx,-0x1
0x439e: jmp 0x3eb0
0x43b0: lea rcx,[rip+0x203e69]
0x43b7: jmp 0x3eb0
0x43c0: lea rcx,[rip+0x203e59]
0x43c7: mov rsi,rdi
0x43ca: mov rdx,-0x1
0x43d1: xor edi,edi
0x43d3: jmp 0x3eb0
0x43e0: lea rcx,[rip+0x203e39]
0x43e7: mov rdx,rsi
0x43ea: mov rsi,rdi
0x43ed: xor edi,edi
0x43ef: jmp 0x3eb0
0x446f: mov rcx,qword ptr [rsp+0x38]
0x4474: xor rcx,qword ptr fs:0x28
0x447d: jne 0x4489
0x447f: add rsp,0x48
0x4483: ret 
0x4484: call 0x1490
0x4489: call 0x1560
0x448e: nop 
0x4490: sub rsp,0x48
0x4494: mov rax,rdx
0x4497: mov rdx,rcx
0x449a: mov rcx,qword ptr fs:0x28
0x44a3: mov qword ptr [rsp+0x38],rcx
0x44a8: xor ecx,ecx
0x44aa: cmp esi,0xa
0x44ad: je 0x4510
0x44af: mov dword ptr [rsp],esi
0x44b2: mov rcx,rsp
0x44b5: mov rsi,rax
0x44b8: mov qword ptr [rsp+0x4],0x0
0x44c1: mov qword ptr [rsp+0xc],0x0
0x44ca: mov qword ptr [rsp+0x14],0x0
0x44d3: mov qword ptr [rsp+0x1c],0x0
0x44dc: mov qword ptr [rsp+0x24],0x0
0x44e5: mov qword ptr [rsp+0x2c],0x0
0x44ee: mov dword ptr [rsp+0x34],0x0
0x44f6: call 0x3eb0
0x44fb: mov rdx,qword ptr [rsp+0x38]
0x4500: xor rdx,qword ptr fs:0x28
0x4509: jne 0x4515
0x450b: add rsp,0x48
0x450f: ret 
0x4510: call 0x1490
0x4515: call 0x1560
0x451a: nop word ptr [rax+rax]
0x4530: mov rcx,rdx
0x4533: mov rdx,rsi
0x4536: mov esi,edi
0x4538: xor edi,edi
0x453a: jmp 0x4490
0x4540: sub rsp,0x48
0x4544: mov ecx,edx
0x4546: mov rax,qword ptr fs:0x28
0x454f: mov qword ptr [rsp+0x38],rax
0x4554: xor eax,eax
0x4556: mov rax,qword ptr [rip+0x203cf3]
0x455d: mov r8,rsp
0x4560: and ecx,0x1f
0x4563: movdqa xmm0,[rip+0x203cb5]
0x456b: mov qword ptr [rsp+0x30],rax
0x4570: mov eax,edx
0x4572: movaps [rsp],xmm0
0x4576: shr al,0x5
0x4579: movzx eax,al
0x457c: lea r9,[r8+rax*4+0x8]
0x4581: movdqa xmm0,[rip+0x203ca7]
0x4589: movaps [rsp+0x10],xmm0
0x458e: movdqa xmm0,[rip+0x203caa]
0x4596: movaps [rsp+0x20],xmm0
0x459b: mov edx,dword ptr [r9]
0x459e: mov eax,edx
0x45a0: shr eax,cl
0x45a2: not eax
0x45a4: and eax,0x1
0x45a7: shl eax,cl
0x45a9: mov rcx,r8
0x45ac: xor eax,edx
0x45ae: mov rdx,rsi
0x45b1: mov rsi,rdi
0x45b4: mov dword ptr [r9],eax
0x45b7: xor edi,edi
0x45b9: call 0x3eb0
0x45be: mov rsi,qword ptr [rsp+0x38]
0x45c3: xor rsi,qword ptr fs:0x28
0x45cc: jne 0x45d3
0x45ce: add rsp,0x48
0x45d2: ret 
0x45d3: call 0x1560
0x45d8: nop dword ptr [rax+rax]
0x45e0: movsx edx,sil
0x45e4: mov rsi,-0x1
0x45eb: jmp 0x4540
0x45f0: mov edx,0x3a
0x45f5: mov rsi,-0x1
0x45fc: jmp 0x4540
0x4610: mov edx,0x3a
0x4615: jmp 0x4540
0x468f: mov rcx,qword ptr [rsp+0x38]
0x4694: xor rcx,qword ptr fs:0x28
0x469d: jne 0x46a9
0x469f: add rsp,0x48
0x46a3: ret 
0x46a4: call 0x1490
0x46a9: call 0x1560
0x46ae: nop 
0x46b0: sub rsp,0x48
0x46b4: mov r9,rcx
0x46b7: mov rcx,qword ptr [rip+0x203b92]
0x46be: movdqa xmm0,[rip+0x203b5a]
0x46c6: mov rax,qword ptr fs:0x28
0x46cf: mov qword ptr [rsp+0x38],rax
0x46d4: xor eax,eax
0x46d6: movaps [rsp],xmm0
0x46da: test rsi,rsi
0x46dd: mov qword ptr [rsp+0x30],rcx
0x46e2: mov dword ptr [rsp],0xa
0x46e9: movdqa xmm0,[rip+0x203b3f]
0x46f1: movaps [rsp+0x10],xmm0
0x46f6: movdqa xmm0,[rip+0x203b42]
0x46fe: movaps [rsp+0x20],xmm0
0x4703: je 0x4737
0x4705: test rdx,rdx
0x4708: je 0x4737
0x470a: mov qword ptr [rsp+0x28],rsi
0x470f: mov qword ptr [rsp+0x30],rdx
0x4714: mov rcx,rsp
0x4717: mov rdx,r8
0x471a: mov rsi,r9
0x471d: call 0x3eb0
0x4722: mov rdi,qword ptr [rsp+0x38]
0x4727: xor rdi,qword ptr fs:0x28
0x4730: jne 0x473c
0x4732: add rsp,0x48
0x4736: ret 
0x4737: call 0x1490
0x473c: call 0x1560
0x4741: nop dword ptr [rax+rax]
0x4746: nop word ptr cs:[rax+rax]
0x4750: mov r8,-0x1
0x4757: jmp 0x46b0
0x4760: mov rcx,rdx
0x4763: mov r8,-0x1
0x476a: mov rdx,rsi
0x476d: mov rsi,rdi
0x4770: xor edi,edi
0x4772: jmp 0x46b0
0x4780: mov r8,rcx
0x4783: mov rcx,rdx
0x4786: mov rdx,rsi
0x4789: mov rsi,rdi
0x478c: xor edi,edi
0x478e: jmp 0x46b0
0x47a0: lea rcx,[rip+0x2038b9]
0x47a7: jmp 0x3eb0
0x47b0: lea rcx,[rip+0x2038a9]
0x47b7: mov rdx,rsi
0x47ba: mov rsi,rdi
0x47bd: xor edi,edi
0x47bf: jmp 0x3eb0
0x47d0: lea rcx,[rip+0x203889]
0x47d7: mov rdx,-0x1
0x47de: jmp 0x3eb0
0x47f0: lea rcx,[rip+0x203869]
0x47f7: mov rsi,rdi
0x47fa: mov rdx,-0x1
0x4801: xor edi,edi
0x4803: jmp 0x3eb0
0x4a08: mov r8,rcx
0x4a0b: mov rcx,rdx
0x4a0e: lea rdx,[rip+0x165f]
0x4a15: mov esi,0x1
0x4a1a: xor eax,eax
0x4a1c: call 0x1750
0x4a21: jmp 0x490c
0x4c1d: push r12
0x4c1f: push r15
0x4c21: push r14
0x4c23: mov r8,qword ptr [rsp+0x20]
0x4c28: mov rcx,rbx
0x4c2b: mov rdx,rax
0x4c2e: mov rdi,rbp
0x4c31: mov esi,0x1
0x4c36: xor eax,eax
0x4c38: call 0x1750
0x4c3d: add rsp,0x20
0x4c41: add rsp,0x28
0x4c45: pop rbx
0x4c46: pop rbp
0x4c47: pop r12
0x4c49: pop r13
0x4c4b: pop r14
0x4c4d: pop r15
0x4c4f: ret 
0x4c89: push r12
0x4c8b: push r15
0x4c8d: push r14
0x4c8f: mov r9,qword ptr [rsp+0x28]
0x4c94: jmp 0x4c23
0x4cf0: xor r9d,r9d
0x4cf3: cmp qword ptr [r8],0x0
0x4cf7: je 0x4d0b
0x4cf9: nop dword ptr [rax]
0x4d00: add r9,0x1
0x4d04: cmp qword ptr [r8+r9*8],0x0
0x4d09: jne 0x4d00
0x4d0b: jmp 0x48d0
0x4d10: sub rsp,0x68
0x4d14: mov r10,r8
0x4d17: xor r9d,r9d
0x4d1a: mov rax,qword ptr fs:0x28
0x4d23: mov qword ptr [rsp+0x58],rax
0x4d28: xor eax,eax
0x4d2a: mov r8,rsp
0x4d2d: nop dword ptr [rax]
0x4d30: mov eax,dword ptr [r10]
0x4d33: cmp eax,0x2f
0x4d36: ja 0x4d7a
0x4d38: mov r11d,eax
0x4d3b: add r11,qword ptr [r10+0x10]
0x4d3f: add eax,0x8
0x4d42: mov dword ptr [r10],eax
0x4d45: mov rax,qword ptr [r11]
0x4d48: test rax,rax
0x4d4b: mov qword ptr [r8+r9*8],rax
0x4d4f: je 0x4d5b
0x4d51: add r9,0x1
0x4d55: cmp r9,0xa
0x4d59: jne 0x4d30
0x4d5b: call 0x48d0
0x4d60: mov rax,qword ptr [rsp+0x58]
0x4d65: xor rax,qword ptr fs:0x28
0x4d6e: jne 0x4d75
0x4d70: add rsp,0x68
0x4d74: ret 
0x4d75: call 0x1560
0x4d7a: mov r11,qword ptr [r10+0x8]
0x4d7e: lea rax,[r11+0x8]
0x4d82: mov qword ptr [r10+0x8],rax
0x4d86: jmp 0x4d45
0x4e50: call 0x1560
0x4e5c: mov rax,rbx
0x4e5f: add rbx,0x8
0x4e63: jmp 0x4e16
0x4e70: push rbx
0x4e71: lea rsi,[rip+0x124a]
0x4e78: mov edx,0x5
0x4e7d: xor edi,edi
0x4e7f: call 0x1530
0x4e84: lea rdx,[rip+0x124c]
0x4e8b: mov rsi,rax
0x4e8e: mov edi,0x1
0x4e93: xor eax,eax
0x4e95: call 0x16c0
0x4e9a: lea rsi,[rip+0x124c]
0x4ea1: mov edx,0x5
0x4ea6: xor edi,edi
0x4ea8: call 0x1530
0x4ead: lea rcx,[rip+0xbe4]
0x4eb4: lea rdx,[rip+0x6cf]
0x4ebb: mov rsi,rax
0x4ebe: mov edi,0x1
0x4ec3: xor eax,eax
0x4ec5: call 0x16c0
0x4eca: mov rbx,qword ptr [rip+0x2031f7]
0x4ed1: lea rsi,[rip+0x1448]
0x4ed8: xor edi,edi
0x4eda: mov edx,0x5
0x4edf: call 0x1530
0x4ee4: mov rsi,rbx
0x4ee7: mov rdi,rax
0x4eea: pop rbx
0x4eeb: jmp 0x1610
0x4f0a: nop word ptr [rax+rax]
0x4f10: mov rax,rdi
0x4f13: mul rsi
0x4f16: mov rdi,rax
0x4f19: seto al
0x4f1c: test rdi,rdi
0x4f1f: js 0x4f2b
0x4f21: movzx eax,al
0x4f24: test rax,rax
0x4f27: jne 0x4f2b
0x4f29: jmp 0x4ef0
0x4f2b: sub rsp,0x8
0x4f2f: call 0x5140
0x4f34: nop 
0x4f36: nop word ptr cs:[rax+rax]
0x4f40: jmp 0x4ef0
0x4f59: test rdi,rdi
0x4f5c: jne 0x4f78
0x4f78: call 0x1480
0x4f7d: xor eax,eax
0x4f7f: pop rbx
0x4f80: ret 
0x4f86: nop word ptr cs:[rax+rax]
0x4f90: mov rax,rsi
0x4f93: mul rdx
0x4f96: mov rsi,rax
0x4f99: seto al
0x4f9c: test rsi,rsi
0x4f9f: js 0x4fab
0x4fa1: movzx eax,al
0x4fa4: test rax,rax
0x4fa7: jne 0x4fab
0x4fa9: jmp 0x4f50
0x4fab: sub rsp,0x8
0x4faf: call 0x5140
0x4fb4: nop 
0x4fb6: nop word ptr cs:[rax+rax]
0x4fc0: test rdi,rdi
0x4fc3: mov r9,rdx
0x4fc6: mov rcx,qword ptr [rsi]
0x4fc9: je 0x5000
0x4fcb: xor edx,edx
0x4fcd: movabsq rax,0x5555555555555554
0x4fd7: div r9
0x4fda: cmp rax,rcx
0x4fdd: jbe 0x501b
0x4fdf: mov rax,rcx
0x4fe2: shr rax, 1
0x4fe5: lea rcx,[rax+rcx+0x1]
0x4fea: mov qword ptr [rsi],rcx
0x4fed: imul rcx,r9
0x4ff1: mov rsi,rcx
0x4ff4: jmp 0x4f50
0x5000: test rcx,rcx
0x5003: je 0x5028
0x5005: mov rax,rcx
0x5008: mul r9
0x500b: seto dl
0x500e: test rax,rax
0x5011: movzx edx,dl
0x5014: js 0x501b
0x5016: test rdx,rdx
0x5019: je 0x4fea
0x501b: sub rsp,0x8
0x501f: call 0x5140
0x5024: nop dword ptr [rax]
0x5028: xor edx,edx
0x502a: mov eax,0x80
0x502f: xor r8d,r8d
0x5032: div r9
0x5035: test rax,rax
0x5038: sete r8b
0x503c: lea rcx,[r8+rax]
0x5040: jmp 0x5005
0x5050: test rdi,rdi
0x5053: mov rax,qword ptr [rsi]
0x5056: je 0x5080
0x5058: movabsq rdx,0x5555555555555553
0x5062: cmp rax,rdx
0x5065: ja 0x5091
0x5067: mov rdx,rax
0x506a: shr rdx, 1
0x506d: lea rax,[rdx+rax+0x1]
0x5072: mov qword ptr [rsi],rax
0x5075: mov rsi,rax
0x5078: jmp 0x4f50
0x5080: test rax,rax
0x5083: mov edx,0x80
0x5088: cmove rax,rdx
0x508c: test rax,rax
0x508f: jns 0x5072
0x5091: sub rsp,0x8
0x5095: call 0x5140
0x509a: nop word ptr [rax+rax]
0x50a0: push rbx
0x50a1: mov rbx,rdi
0x50a4: call 0x4ef0
0x50a9: mov rdx,rbx
0x50ac: xor esi,esi
0x50ae: mov rdi,rax
0x50b1: pop rbx
0x50b2: jmp 0x15b0
0x50c0: mov rax,rdi
0x50c3: sub rsp,0x8
0x50c7: mul rsi
0x50ca: seto dl
0x50cd: test rax,rax
0x50d0: js 0x50e9
0x50d2: movzx edx,dl
0x50d5: test rdx,rdx
0x50d8: jne 0x50e9
0x50da: call 0x1620
0x50df: test rax,rax
0x50e2: je 0x50e9
0x50e4: add rsp,0x8
0x50e8: ret 
0x50e9: call 0x5140
0x50ee: nop 
0x50f0: push rbp
0x50f1: push rbx
0x50f2: mov rbp,rdi
0x50f5: mov rdi,rsi
0x50f8: mov rbx,rsi
0x50fb: sub rsp,0x8
0x50ff: call 0x4ef0
0x5104: add rsp,0x8
0x5108: mov rdx,rbx
0x510b: mov rsi,rbp
0x510e: pop rbx
0x510f: pop rbp
0x5110: mov rdi,rax
0x5113: jmp 0x1630
0x5120: push rbx
0x5121: mov rbx,rdi
0x5124: call 0x1550
0x5129: mov rdi,rbx
0x512c: lea rsi,[rax+0x1]
0x5130: pop rbx
0x5131: jmp 0x50f0
0x5170: call 0x1490
0x5175: nop word ptr cs:[rax+rax]
0x517f: nop 
0x5180: push r13
0x5182: push r12
0x5184: mov r13,rsi
0x5187: push rbp
0x5188: push rbx
0x5189: mov rbx,rdi
0x518c: mov r12,rdx
0x518f: sub rsp,0x18
0x5193: mov rax,qword ptr fs:0x28
0x519c: mov qword ptr [rsp+0x8],rax
0x51a1: xor eax,eax
0x51a3: lea rax,[rsp+0x4]
0x51a8: test rdi,rdi
0x51ab: cmove rbx,rax
0x51af: mov rdi,rbx
0x51b2: call 0x1580
0x51b7: cmp rax,-0x3
0x51bb: mov rbp,rax
0x51be: jbe 0x51e0
0x51c0: test r12,r12
0x51c3: je 0x51e0
0x51c5: xor edi,edi
0x51c7: call 0x5290
0x51cc: test al,al
0x51ce: jne 0x51e0
0x51d0: movzx eax,byte ptr [r13]
0x51d5: mov ebp,0x1
0x51da: mov dword ptr [rbx],eax
0x51dc: nop dword ptr [rax]
0x51e0: mov rdx,qword ptr [rsp+0x8]
0x51e5: xor rdx,qword ptr fs:0x28
0x51ee: mov rax,rbp
0x51f1: jne 0x51fe
0x51f3: add rsp,0x18
0x51f7: pop rbx
0x51f8: pop rbp
0x51f9: pop r12
0x51fb: pop r13
0x51fd: ret 
0x51fe: call 0x1560
0x5203: nop word ptr cs:[rax+rax]
0x520d: nop dword ptr [rax]
0x5210: push r12
0x5212: push rbp
0x5213: mov rbp,rdi
0x5216: push rbx
0x5217: call 0x14d0
0x521c: mov ebx,dword ptr [rbp]
0x521f: mov rdi,rbp
0x5222: mov r12,rax
0x5225: call 0x5330
0x522a: and ebx,0x20
0x522d: test ebx,ebx
0x522f: jne 0x5248
0x5231: test eax,eax
0x5233: je 0x523f
0x5235: test r12,r12
0x5238: mov eax,0xffffffff
0x523d: je 0x5278
0x523f: pop rbx
0x5240: pop rbp
0x5241: pop r12
0x5243: ret 
0x5248: test eax,eax
0x524a: jne 0x5268
0x524c: call 0x14a0
0x5251: mov dword ptr [rax],0x0
0x5257: mov eax,0xffffffff
0x525c: pop rbx
0x525d: pop rbp
0x525e: pop r12
0x5260: ret 
0x5268: pop rbx
0x5269: mov eax,0xffffffff
0x526e: pop rbp
0x526f: pop r12
0x5271: ret 
0x5278: call 0x14a0
0x527d: cmp dword ptr [rax],0x9
0x5280: pop rbx
0x5281: pop rbp
0x5282: pop r12
0x5284: setne al
0x5287: movzx eax,al
0x528a: neg eax
0x528c: ret 
0x5290: sub rsp,0x8
0x5294: xor esi,esi
0x5296: call 0x16b0
0x529b: mov rdx,rax
0x529e: mov eax,0x1
0x52a3: test rdx,rdx
0x52a6: je 0x52c5
0x52a8: lea rdi,[rip+0x1131]
0x52af: mov ecx,0x2
0x52b4: mov rsi,rdx
0x52b7: rep cmpsb [rsi],es:[rdi]
0x52b9: seta cl
0x52bc: sbb cl,0x0
0x52bf: xor eax,eax
0x52c1: test cl,cl
0x52c3: jne 0x52d0
0x52c5: add rsp,0x8
0x52c9: ret 
0x52d0: lea rdi,[rip+0x110b]
0x52d7: mov ecx,0x6
0x52dc: mov rsi,rdx
0x52df: rep cmpsb [rsi],es:[rdi]
0x52e1: seta al
0x52e4: sbb al,0x0
0x52e6: test al,al
0x52e8: setne al
0x52eb: add rsp,0x8
0x52ef: ret 
0x52f0: sub rsp,0x8
0x52f4: mov edi,0xe
0x52f9: call 0x1670
0x52fe: test rax,rax
0x5301: je 0x5320
0x5303: cmp byte ptr [rax],0x0
0x5306: lea rdx,[rip+0x10db]
0x530d: cmove rax,rdx
0x5311: add rsp,0x8
0x5315: ret 
0x5320: lea rax,[rip+0x10c1]
0x5327: add rsp,0x8
0x532b: ret 
0x5330: push r12
0x5332: push rbp
0x5333: push rbx
0x5334: mov rbx,rdi
0x5337: call 0x1640
0x533c: test eax,eax
0x533e: mov rdi,rbx
0x5341: js 0x5397
0x5343: call 0x1690
0x5348: test eax,eax
0x534a: jne 0x5378
0x534c: mov rdi,rbx
0x534f: call 0x53b0
0x5354: test eax,eax
0x5356: je 0x5394
0x5358: call 0x14a0
0x535d: mov r12d,dword ptr [rax]
0x5360: mov rdi,rbx
0x5363: mov rbp,rax
0x5366: call 0x1500
0x536b: test r12d,r12d
0x536e: jne 0x53a0
0x5370: pop rbx
0x5371: pop rbp
0x5372: pop r12
0x5374: ret 
0x5378: mov rdi,rbx
0x537b: call 0x1640
0x5380: xor esi,esi
0x5382: mov edx,0x1
0x5387: mov edi,eax
0x5389: call 0x15a0
0x538e: cmp rax,-0x1
0x5392: jne 0x534c
0x5394: mov rdi,rbx
0x5397: pop rbx
0x5398: pop rbp
0x5399: pop r12
0x539b: jmp 0x1500
0x53a0: mov dword ptr [rbp],r12d
0x53a4: mov eax,0xffffffff
0x53a9: jmp 0x5370
0x53b0: test rdi,rdi
0x53b3: push rbx
0x53b4: mov rbx,rdi
0x53b7: je 0x53ca
0x53b9: call 0x1690
0x53be: test eax,eax
0x53c0: je 0x53ca
0x53c2: test dword ptr [rbx],0x100
0x53c8: jne 0x53d8
0x53ca: mov rdi,rbx
0x53cd: pop rbx
0x53ce: jmp 0x1660
0x53d8: mov rdi,rbx
0x53db: mov edx,0x1
0x53e0: xor esi,esi
0x53e2: call 0x53f0
0x53e7: mov rdi,rbx
0x53ea: pop rbx
0x53eb: jmp 0x1660
0x53f0: mov rax,qword ptr [rdi+0x8]
0x53f4: cmp qword ptr [rdi+0x10],rax
0x53f8: je 0x5400
0x53fa: jmp 0x1700
0x5400: mov rax,qword ptr [rdi+0x20]
0x5404: cmp qword ptr [rdi+0x28],rax
0x5408: jne 0x53fa
0x540a: cmp qword ptr [rdi+0x48],0x0
0x540f: jne 0x53fa
0x5411: push r12
0x5413: push rbp
0x5414: mov r12d,edx
0x5417: push rbx
0x5418: mov rbp,rsi
0x541b: mov rbx,rdi
0x541e: call 0x1640
0x5423: mov edx,r12d
0x5426: mov rsi,rbp
0x5429: mov edi,eax
0x542b: call 0x15a0
0x5430: cmp rax,-0x1
0x5434: je 0x5442
0x5436: and dword ptr [rbx],-0x11
0x5439: mov qword ptr [rbx+0x90],rax
0x5440: xor eax,eax
0x5442: pop rbx
0x5443: pop rbp
0x5444: pop r12
0x5446: ret 
0x5450: push r15
0x5452: push r14
0x5454: mov r15,rdx
0x5457: push r13
0x5459: push r12
0x545b: lea r12,[rip+0x20262e]
0x5462: push rbp
0x5463: lea rbp,[rip+0x20262e]
0x546a: push rbx
0x546b: mov r13d,edi
0x546e: mov r14,rsi
0x5471: sub rbp,r12
0x5474: sub rsp,0x8
0x5478: sar rbp,0x3
0x547c: call 0x1450
0x5481: test rbp,rbp
0x5484: je 0x54a6
0x5486: xor ebx,ebx
0x5488: nop dword ptr [rax+rax]
0x5490: mov rdx,r15
0x5493: mov rsi,r14
0x5496: mov edi,r13d
0x5499: call qword ptr [r12+rbx*8]
0x549d: add rbx,0x1
0x54a1: cmp rbp,rbx
0x54a4: jne 0x5490
0x54a6: add rsp,0x8
0x54aa: pop rbx
0x54ab: pop rbp
0x54ac: pop r12
0x54ae: pop r13
0x54b0: pop r14
0x54b2: pop r15
0x54b4: ret 
0x54c0: rep ret 
