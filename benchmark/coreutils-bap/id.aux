0x15d8: sub rsp,0x8
0x15dc: mov rax,qword ptr [rip+0x2079ed]
0x15e3: test rax,rax
0x15e6: je 0x15ea
0x15e8: call rax
0x15ea: add rsp,0x8
0x15ee: ret 
0x15f6: jmp qword ptr [rip+0x2077fc]
0x1660: jmp qword ptr [rip+0x2077ca]
0x1670: jmp qword ptr [rip+0x2077c2]
0x1690: jmp qword ptr [rip+0x2077b2]
0x16f0: jmp qword ptr [rip+0x207782]
0x1720: jmp qword ptr [rip+0x20776a]
0x1770: jmp qword ptr [rip+0x207742]
0x1780: jmp qword ptr [rip+0x20773a]
0x17b0: jmp qword ptr [rip+0x207722]
0x17d0: jmp qword ptr [rip+0x207712]
0x1810: jmp qword ptr [rip+0x2076f2]
0x1850: jmp qword ptr [rip+0x2076d2]
0x1860: jmp qword ptr [rip+0x2076ca]
0x1890: jmp qword ptr [rip+0x2076b2]
0x18f0: jmp qword ptr [rip+0x207682]
0x1950: jmp qword ptr [rip+0x207652]
0x1960: jmp qword ptr [rip+0x20764a]
0x1980: jmp qword ptr [rip+0x20765a]
0x1a96: nop word ptr cs:[rax+rax]
0x1b81: lea rsi,[rip+0x4d2c]
0x1b88: mov edx,0x5
0x1b8d: xor edi,edi
0x1b8f: mov r14,rax
0x1b92: call 0x16c0
0x1b97: mov r13,rax
0x1b9a: call 0x1640
0x1b9f: mov esi,dword ptr [rax]
0x1ba1: mov rcx,r14
0x1ba4: mov rdx,r13
0x1ba7: xor edi,edi
0x1ba9: xor eax,eax
0x1bab: call 0x18d0
0x1bb0: mov byte ptr [rip+0x207459],0x0
0x1d3d: lea rsi,[rip+0x4b81]
0x1d44: mov edx,0x5
0x1d49: xor edi,edi
0x1d4b: call 0x16c0
0x1d50: mov esi,dword ptr [rbx]
0x1d52: mov rdx,rax
0x1d55: mov edi,0x1
0x1d5a: xor eax,eax
0x1d5c: call 0x18d0
0x1dac: lea rsi,[rip+0x4b58]
0x1db3: mov edx,0x5
0x1db8: xor edi,edi
0x1dba: call 0x16c0
0x1dbf: mov esi,dword ptr [rbx]
0x1dc1: mov rdx,rax
0x1dc4: mov edi,0x1
0x1dc9: xor eax,eax
0x1dcb: call 0x18d0
0x1df3: jmp 0x1d3d
0x1ef1: lea rsi,[rip+0x49e6]
0x1ef8: mov edx,0x5
0x1efd: xor edi,edi
0x1eff: call 0x16c0
0x1f04: mov esi,dword ptr [rbx]
0x1f06: mov rdx,rax
0x1f09: mov edi,0x1
0x1f0e: xor eax,eax
0x1f10: call 0x18d0
0x1f15: lea rsi,[rip+0x49d6]
0x1f1c: mov edx,0x5
0x1f21: xor edi,edi
0x1f23: call 0x16c0
0x1f28: mov esi,dword ptr [rbx]
0x1f2a: mov rdx,rax
0x1f2d: mov edi,0x1
0x1f32: xor eax,eax
0x1f34: call 0x18d0
0x1f39: nop dword ptr [rax]
0x1f6a: hlt 
0x1f6b: nop dword ptr [rax+rax]
0x1f70: lea rdi,[rip+0x207129]
0x1f77: push rbp
0x1f78: lea rax,[rip+0x207121]
0x1f7f: cmp rax,rdi
0x1f82: mov rbp,rsp
0x1f85: je 0x1fa0
0x1f87: mov rax,qword ptr [rip+0x207032]
0x1f8e: test rax,rax
0x1f91: je 0x1fa0
0x1f93: pop rbp
0x1f94: jmp rax
0x1fa0: pop rbp
0x1fa1: ret 
0x1fb0: lea rdi,[rip+0x2070e9]
0x1fb7: lea rsi,[rip+0x2070e2]
0x1fbe: push rbp
0x1fbf: sub rsi,rdi
0x1fc2: mov rbp,rsp
0x1fc5: sar rsi,0x3
0x1fc9: mov rax,rsi
0x1fcc: shr rax,0x3f
0x1fd0: add rsi,rax
0x1fd3: sar rsi, 1
0x1fd6: je 0x1ff0
0x1fd8: mov rax,qword ptr [rip+0x206ff9]
0x1fdf: test rax,rax
0x1fe2: je 0x1ff0
0x1fe4: pop rbp
0x1fe5: jmp rax
0x1ff0: pop rbp
0x1ff1: ret 
0x2011: push rbp
0x2012: mov rbp,rsp
0x2015: je 0x2023
0x2017: mov rdi,qword ptr [rip+0x206fea]
0x201e: call 0x1980
0x2023: call 0x1f70
0x2028: mov byte ptr [rip+0x207099],0x1
0x202f: pop rbp
0x2030: ret 
0x2040: push rbp
0x2041: mov rbp,rsp
0x2044: pop rbp
0x2045: jmp 0x1fb0
0x234d: jmp 0x2101
0x2471: mov byte ptr [rip+0x206b98],0x0
0x2478: jmp 0x20b9
0x24b6: mov byte ptr [rip+0x206b53],0x0
0x24bd: jmp 0x209b
0x257e: jmp 0x250b
0x2588: lea rsi,[rip+0x3cb9]
0x258f: xor edi,edi
0x2591: mov edx,0x5
0x2596: mov rbp,rax
0x2599: call 0x16c0
0x259e: mov rbx,rax
0x25a1: call 0x1640
0x25a6: mov esi,dword ptr [rax]
0x25a8: mov rcx,rbp
0x25ab: mov rdx,rbx
0x25ae: xor edi,edi
0x25b0: xor eax,eax
0x25b2: call 0x18d0
0x25b7: jmp 0x2471
0x25c7: jmp 0x2101
0x25d7: jmp 0x21f4
0x25dc: call 0x16f0
0x25e1: nop dword ptr [rax+rax]
0x25e6: nop word ptr cs:[rax+rax]
0x29ce: nop 
0x2ba5: lea rsi,[rip+0x369c]
0x2bac: mov edx,0x5
0x2bb1: xor edi,edi
0x2bb3: mov rbp,rax
0x2bb6: call 0x16c0
0x2bbb: mov esi,dword ptr [rbx]
0x2bbd: mov rdx,rax
0x2bc0: mov rcx,rbp
0x2bc3: xor edi,edi
0x2bc5: xor eax,eax
0x2bc7: xor ebx,ebx
0x2bc9: call 0x18d0
0x2bce: jmp 0x2b53
0x2bd9: jmp 0x2b29
0x2c03: jmp 0x2b53
0x2c19: jmp 0x2a9e
0x2c1e: call 0x16f0
0x2c23: nop word ptr cs:[rax+rax]
0x2c2d: nop dword ptr [rax]
0x2c30: mov qword ptr [rip+0x206509],rdi
0x2c37: ret 
0x2c40: mov byte ptr [rip+0x2064f1],dil
0x2c47: ret 
0x2c50: push rbp
0x2c51: push rbx
0x2c52: sub rsp,0x8
0x2c56: mov rdi,qword ptr [rip+0x20644b]
0x2c5d: call 0x5cb0
0x2c62: test eax,eax
0x2c64: je 0x2c7c
0x2c66: call 0x1640
0x2c6b: cmp byte ptr [rip+0x2064c6],0x0
0x2c72: mov rbx,rax
0x2c75: je 0x2c93
0x2c77: cmp dword ptr [rax],0x20
0x2c7a: jne 0x2c93
0x2c7c: mov rdi,qword ptr [rip+0x20643d]
0x2c83: call 0x5cb0
0x2c88: test eax,eax
0x2c8a: jne 0x2cd2
0x2c8c: add rsp,0x8
0x2c90: pop rbx
0x2c91: pop rbp
0x2c92: ret 
0x2c93: lea rsi,[rip+0x3cdd]
0x2c9a: xor edi,edi
0x2c9c: mov edx,0x5
0x2ca1: call 0x16c0
0x2ca6: mov rdi,qword ptr [rip+0x206493]
0x2cad: mov rbp,rax
0x2cb0: test rdi,rdi
0x2cb3: je 0x2cdd
0x2cb5: call 0x4860
0x2cba: mov esi,dword ptr [rbx]
0x2cbc: lea rdx,[rip+0x3cc0]
0x2cc3: mov rcx,rax
0x2cc6: mov r8,rbp
0x2cc9: xor edi,edi
0x2ccb: xor eax,eax
0x2ccd: call 0x18d0
0x2cd2: mov edi,dword ptr [rip+0x206348]
0x2cd8: call 0x1660
0x2cdd: mov esi,dword ptr [rbx]
0x2cdf: lea rdx,[rip+0x3ca1]
0x2ce6: mov rcx,rax
0x2ce9: xor edi,edi
0x2ceb: xor eax,eax
0x2ced: call 0x18d0
0x2cf2: jmp 0x2cd2
0x2def: nop 
0x2df0: push rbp
0x2df1: push rbx
0x2df2: mov rbp,rdi
0x2df5: mov ebx,esi
0x2df7: sub rsp,0x8
0x2dfb: call 0x5d90
0x2e00: movzx edx,byte ptr [rax]
0x2e03: and edx,-0x21
0x2e06: cmp dl,0x55
0x2e09: je 0x2e80
0x2e0b: cmp dl,0x47
0x2e0e: je 0x2e30
0x2e10: lea rax,[rip+0x3bcc]
0x2e17: lea rdx,[rip+0x3bc7]
0x2e1e: cmp ebx,0x9
0x2e21: cmovne rax,rdx
0x2e25: add rsp,0x8
0x2e29: pop rbx
0x2e2a: pop rbp
0x2e2b: ret 
0x2e30: movzx edx,byte ptr [rax+0x1]
0x2e34: and edx,-0x21
0x2e37: cmp dl,0x42
0x2e3a: jne 0x2e10
0x2e3c: cmp byte ptr [rax+0x2],0x31
0x2e40: jne 0x2e10
0x2e42: cmp byte ptr [rax+0x3],0x38
0x2e46: jne 0x2e10
0x2e48: cmp byte ptr [rax+0x4],0x30
0x2e4c: jne 0x2e10
0x2e4e: cmp byte ptr [rax+0x5],0x33
0x2e52: jne 0x2e10
0x2e54: cmp byte ptr [rax+0x6],0x30
0x2e58: jne 0x2e10
0x2e5a: cmp byte ptr [rax+0x7],0x0
0x2e5e: jne 0x2e10
0x2e60: cmp byte ptr [rbp],0x60
0x2e64: lea rax,[rip+0x3b71]
0x2e6b: lea rdx,[rip+0x3b6e]
0x2e72: cmovne rax,rdx
0x2e76: add rsp,0x8
0x2e7a: pop rbx
0x2e7b: pop rbp
0x2e7c: ret 
0x2e80: movzx edx,byte ptr [rax+0x1]
0x2e84: and edx,-0x21
0x2e87: cmp dl,0x54
0x2e8a: jne 0x2e10
0x2e8c: movzx edx,byte ptr [rax+0x2]
0x2e90: and edx,-0x21
0x2e93: cmp dl,0x46
0x2e96: jne 0x2e10
0x2e9c: cmp byte ptr [rax+0x3],0x2d
0x2ea0: jne 0x2e10
0x2ea6: cmp byte ptr [rax+0x4],0x38
0x2eaa: jne 0x2e10
0x2eb0: cmp byte ptr [rax+0x5],0x0
0x2eb4: jne 0x2e10
0x2eba: cmp byte ptr [rbp],0x60
0x2ebe: lea rax,[rip+0x3b0f]
0x2ec5: lea rdx,[rip+0x3b0c]
0x2ecc: cmovne rax,rdx
0x2ed0: add rsp,0x8
0x2ed4: pop rbx
0x2ed5: pop rbp
0x2ed6: ret 
0x2fb3: xor r11d,r11d
0x2fb6: mov rax,rbp
0x2fb9: mov r8d,r12d
0x2fbc: mov rbp,r11
0x2fbf: mov r11,rax
0x2fc2: nop word ptr [rax+rax]
0x2fc8: cmp r11,rbp
0x2fcb: setne r12b
0x2fcf: cmp r11,-0x1
0x2fd3: jne 0x2fe2
0x2fd5: mov rax,qword ptr [rsp+0x10]
0x2fda: cmp byte ptr [rax+rbp],0x0
0x2fde: setne r12b
0x2fe2: test r12b,r12b
0x2fe5: je 0x3640
0x2feb: cmp dword ptr [rsp+0x8],0x2
0x2ff0: mov rdi,qword ptr [rsp+0x10]
0x2ff5: lea r9,[rdi+rbp]
0x2ff9: setne al
0x2ffc: and al,byte ptr [rsp+0xd]
0x3000: mov r10d,eax
0x3003: je 0x30b0
0x3009: mov rax,qword ptr [rsp+0x18]
0x300e: test rax,rax
0x3011: je 0x3440
0x3017: cmp r11,-0x1
0x301b: lea rbx,[rbp+rax]
0x3020: jne 0x3050
0x3022: cmp rax,0x1
0x3026: jbe 0x3050
0x3028: mov byte ptr [rsp+0x38],r8b
0x302d: mov byte ptr [rsp+0x30],r10b
0x3032: mov qword ptr [rsp+0x28],r9
0x3037: call 0x16e0
0x303c: movzx r8d,byte ptr [rsp+0x38]
0x3042: movzx r10d,byte ptr [rsp+0x30]
0x3048: mov r11,rax
0x304b: mov r9,qword ptr [rsp+0x28]
0x3050: cmp rbx,r11
0x3053: mov byte ptr [rsp+0x28],r10b
0x3058: ja 0x3610
0x305e: mov rdx,qword ptr [rsp+0x18]
0x3063: mov rsi,qword ptr [rsp+0x48]
0x3068: mov rdi,r9
0x306b: mov qword ptr [rsp+0x40],r11
0x3070: mov byte ptr [rsp+0x38],r8b
0x3075: mov qword ptr [rsp+0x30],r9
0x307a: call 0x17b0
0x307f: test eax,eax
0x3081: mov r9,qword ptr [rsp+0x30]
0x3086: movzx r8d,byte ptr [rsp+0x38]
0x308c: mov r11,qword ptr [rsp+0x40]
0x3091: jne 0x3610
0x3097: cmp byte ptr [rsp+0xf],0x0
0x309c: movzx r10d,byte ptr [rsp+0x28]
0x30a2: jne 0x4025
0x30a8: nop dword ptr [rax+rax]
0x30b0: movzx ebx,byte ptr [r9]
0x30b4: cmp bl,0x7e
0x30b7: ja 0x33d8
0x30bd: lea rcx,[rip+0x39a8]
0x30c4: movzx edx,bl
0x30c7: movsxd rax,dword ptr [rcx+rdx*4]
0x30cb: add rax,rcx
0x30ce: jmp rax
0x3108: cmp byte ptr [rsp+0xd],0x1
0x310d: jne 0x3222
0x3113: test dl,dl
0x3115: jne 0x3222
0x311b: mov rsi,qword ptr [rsp+0x20]
0x3120: test rsi,rsi
0x3123: je 0x3139
0x3125: mov edx,ebx
0x3127: shr dl,0x5
0x312a: movzx edx,dl
0x312d: mov edx,dword ptr [rsi+rdx*4]
0x3130: btl edx,ebx
0x3133: jb 0x3283
0x3139: test r10b,r10b
0x313c: jne 0x3283
0x3142: xor eax,0x1
0x3145: add rbp,0x1
0x3149: and eax,r8d
0x314c: test al,al
0x314e: je 0x3170
0x3150: cmp r13,r15
0x3153: jbe 0x315a
0x3155: mov byte ptr [r14+r15],0x27
0x315a: lea rax,[r15+0x1]
0x315e: cmp r13,rax
0x3161: jbe 0x3169
0x3163: mov byte ptr [r14+r15+0x1],0x27
0x3169: add r15,0x2
0x316d: xor r8d,r8d
0x3170: cmp r15,r13
0x3173: jae 0x3179
0x3175: mov byte ptr [r14+r15],bl
0x3179: movzx edi,byte ptr [rsp+0xe]
0x317e: add r15,0x1
0x3182: mov eax,0x0
0x3187: test r12b,r12b
0x318a: cmove edi,eax
0x318d: mov byte ptr [rsp+0xe],dil
0x3192: jmp 0x2fc8
0x3222: cmp byte ptr [rsp+0xf],0x0
0x3227: jne 0x311b
0x322d: jmp 0x3139
0x3283: cmp dword ptr [rsp+0x8],0x2
0x3288: sete dl
0x328b: cmp byte ptr [rsp+0xf],0x0
0x3290: mov eax,edx
0x3292: jne 0x3ae8
0x3298: mov eax,r8d
0x329b: xor eax,0x1
0x329e: and al,dl
0x32a0: je 0x32d1
0x32a2: cmp r13,r15
0x32a5: jbe 0x32ac
0x32a7: mov byte ptr [r14+r15],0x27
0x32ac: lea rdx,[r15+0x1]
0x32b0: cmp r13,rdx
0x32b3: jbe 0x32bb
0x32b5: mov byte ptr [r14+r15+0x1],0x24
0x32bb: lea rdx,[r15+0x2]
0x32bf: cmp r13,rdx
0x32c2: jbe 0x32ca
0x32c4: mov byte ptr [r14+r15+0x2],0x27
0x32ca: add r15,0x3
0x32ce: mov r8d,eax
0x32d1: cmp r13,r15
0x32d4: jbe 0x32db
0x32d6: mov byte ptr [r14+r15],0x5c
0x32db: add r15,0x1
0x32df: add rbp,0x1
0x32e3: jmp 0x3170
0x33d0: xor r10d,r10d
0x33d3: nop dword ptr [rax+rax]
0x33d8: cmp qword ptr [rsp+0x58],0x1
0x33de: jne 0x3788
0x33e4: mov qword ptr [rsp+0x38],r11
0x33e9: mov byte ptr [rsp+0x30],r8b
0x33ee: mov byte ptr [rsp+0x28],r10b
0x33f3: call 0x1970
0x33f8: mov rcx,qword ptr [rax]
0x33fb: movzx edx,bl
0x33fe: movzx r10d,byte ptr [rsp+0x28]
0x3404: movzx r8d,byte ptr [rsp+0x30]
0x340a: mov r11,qword ptr [rsp+0x38]
0x340f: mov edi,0x1
0x3414: movzx eax,word ptr [rcx+rdx*2]
0x3418: and ax,0x4000
0x341c: setne r12b
0x3420: sete al
0x3423: and al,byte ptr [rsp+0xd]
0x3427: test al,al
0x3429: jne 0x3dc1
0x342f: cmp dword ptr [rsp+0x8],0x2
0x3434: sete dl
0x3437: jmp 0x3108
0x3440: movzx ebx,byte ptr [r9]
0x3444: cmp bl,0x7e
0x3447: ja 0x33d0
0x3449: lea rcx,[rip+0x3818]
0x3450: movzx edx,bl
0x3453: movsxd rax,dword ptr [rcx+rdx*4]
0x3457: add rax,rcx
0x345a: jmp rax
0x3610: xor r10d,r10d
0x3613: jmp 0x30b0
0x3640: cmp dword ptr [rsp+0x8],0x2
0x3645: movzx ebx,byte ptr [rsp+0xf]
0x364a: mov r12d,r8d
0x364d: mov rbp,r11
0x3650: sete dl
0x3653: mov eax,ebx
0x3655: test r15,r15
0x3658: sete cl
0x365b: and eax,edx
0x365d: and al,cl
0x365f: jne 0x40c6
0x3665: mov eax,ebx
0x3667: xor eax,0x1
0x366a: and dl,al
0x366c: je 0x3fdc
0x3672: cmp byte ptr [rsp+0x7c],0x0
0x3677: je 0x3fda
0x367d: cmp byte ptr [rsp+0xe],0x0
0x3682: jne 0x407d
0x3688: test r13,r13
0x368b: sete al
0x368e: cmp qword ptr [rsp+0x50],0x0
0x3694: setne dl
0x3697: and al,dl
0x3699: je 0x40bc
0x369f: mov r13,qword ptr [rsp+0x50]
0x36a4: lea rbx,[rip+0x333a]
0x36ab: mov byte ptr [r14],0x27
0x36af: mov dword ptr [rsp+0x8],0x2
0x36b7: mov r15d,0x1
0x36bd: mov qword ptr [rsp+0x18],0x1
0x36c6: mov byte ptr [rsp+0xf],0x0
0x36cb: mov qword ptr [rsp+0x48],rbx
0x36d0: mov byte ptr [rsp+0x7c],al
0x36d4: jmp 0x2fb3
0x3788: lea rax,[rsp+0xa0]
0x3790: cmp r11,-0x1
0x3794: mov qword ptr [rsp+0xa0],0x0
0x37a0: mov qword ptr [rsp+0x28],rax
0x37a5: jne 0x37d4
0x37a7: mov rdi,qword ptr [rsp+0x10]
0x37ac: mov byte ptr [rsp+0x40],r8b
0x37b1: mov byte ptr [rsp+0x38],r10b
0x37b6: mov qword ptr [rsp+0x30],r9
0x37bb: call 0x16e0
0x37c0: movzx r8d,byte ptr [rsp+0x40]
0x37c6: movzx r10d,byte ptr [rsp+0x38]
0x37cc: mov r11,rax
0x37cf: mov r9,qword ptr [rsp+0x30]
0x37d4: lea rax,[rsp+0x9c]
0x37dc: xor ecx,ecx
0x37de: mov byte ptr [rsp+0x7e],bl
0x37e2: mov byte ptr [rsp+0x7d],r8b
0x37e7: mov rbx,rcx
0x37ea: mov qword ptr [rsp+0x88],r9
0x37f2: mov qword ptr [rsp+0x38],rax
0x37f7: mov byte ptr [rsp+0x7f],r10b
0x37fc: mov qword ptr [rsp+0x80],r15
0x3804: mov qword ptr [rsp+0x40],r14
0x3809: mov qword ptr [rsp+0x70],r13
0x380e: mov qword ptr [rsp+0x30],r11
0x3813: mov rax,qword ptr [rsp+0x10]
0x3818: lea r14,[rbp+rbx]
0x381d: mov rdx,qword ptr [rsp+0x30]
0x3822: mov rcx,qword ptr [rsp+0x28]
0x3827: mov rdi,qword ptr [rsp+0x38]
0x382c: lea r13,[rax+r14]
0x3830: sub rdx,r14
0x3833: mov rsi,r13
0x3836: call 0x5c20
0x383b: test rax,rax
0x383e: mov r15,rax
0x3841: je 0x3891
0x3843: cmp rax,-0x1
0x3847: je 0x3e65
0x384d: cmp rax,-0x2
0x3851: je 0x3df1
0x3857: cmp dword ptr [rsp+0x8],0x2
0x385c: sete al
0x385f: and al,byte ptr [rsp+0xf]
0x3863: jne 0x3a00
0x3869: mov edi,dword ptr [rsp+0x9c]
0x3870: call 0x1960
0x3875: mov rdi,qword ptr [rsp+0x28]
0x387a: test eax,eax
0x387c: mov eax,0x0
0x3881: cmove r12d,eax
0x3885: add rbx,r15
0x3888: call 0x1950
0x388d: test eax,eax
0x388f: je 0x3813
0x3891: mov edx,r12d
0x3894: mov rdi,rbx
0x3897: movzx r8d,byte ptr [rsp+0x7d]
0x389d: xor edx,0x1
0x38a0: movzx ebx,byte ptr [rsp+0x7e]
0x38a5: movzx r10d,byte ptr [rsp+0x7f]
0x38ab: and dl,byte ptr [rsp+0xd]
0x38af: mov r15,qword ptr [rsp+0x80]
0x38b7: mov r14,qword ptr [rsp+0x40]
0x38bc: mov r13,qword ptr [rsp+0x70]
0x38c1: mov r11,qword ptr [rsp+0x30]
0x38c6: cmp rdi,0x1
0x38ca: jbe 0x3ecb
0x38d0: mov rcx,rdi
0x38d3: xor esi,esi
0x38d5: movzx r9d,byte ptr [rsp+0xf]
0x38db: add rcx,rbp
0x38de: mov rdi,qword ptr [rsp+0x10]
0x38e3: jmp 0x399e
0x38f0: cmp dword ptr [rsp+0x8],0x2
0x38f5: sete al
0x38f8: test r9b,r9b
0x38fb: jne 0x3db0
0x3901: mov esi,r8d
0x3904: xor esi,0x1
0x3907: and al,sil
0x390a: je 0x393b
0x390c: cmp r13,r15
0x390f: jbe 0x3916
0x3911: mov byte ptr [r14+r15],0x27
0x3916: lea rsi,[r15+0x1]
0x391a: cmp r13,rsi
0x391d: jbe 0x3925
0x391f: mov byte ptr [r14+r15+0x1],0x24
0x3925: lea rsi,[r15+0x2]
0x3929: cmp r13,rsi
0x392c: jbe 0x3934
0x392e: mov byte ptr [r14+r15+0x2],0x27
0x3934: add r15,0x3
0x3938: mov r8d,eax
0x393b: cmp r13,r15
0x393e: jbe 0x3945
0x3940: mov byte ptr [r14+r15],0x5c
0x3945: lea rax,[r15+0x1]
0x3949: cmp r13,rax
0x394c: jbe 0x395b
0x394e: mov eax,ebx
0x3950: shr al,0x6
0x3953: add eax,0x30
0x3956: mov byte ptr [r14+r15+0x1],al
0x395b: lea rax,[r15+0x2]
0x395f: cmp r13,rax
0x3962: jbe 0x3974
0x3964: mov eax,ebx
0x3966: shr al,0x3
0x3969: and eax,0x7
0x396c: add eax,0x30
0x396f: mov byte ptr [r14+r15+0x2],al
0x3974: and ebx,0x7
0x3977: add rbp,0x1
0x397b: add r15,0x3
0x397f: add ebx,0x30
0x3982: cmp rbp,rcx
0x3985: jae 0x3170
0x398b: mov esi,edx
0x398d: cmp r13,r15
0x3990: jbe 0x3996
0x3992: mov byte ptr [r14+r15],bl
0x3996: movzx ebx,byte ptr [rdi+rbp]
0x399a: add r15,0x1
0x399e: test dl,dl
0x39a0: jne 0x38f0
0x39a6: mov eax,esi
0x39a8: xor eax,0x1
0x39ab: and eax,r8d
0x39ae: test r10b,r10b
0x39b1: je 0x39c1
0x39b3: cmp r13,r15
0x39b6: jbe 0x39bd
0x39b8: mov byte ptr [r14+r15],0x5c
0x39bd: add r15,0x1
0x39c1: add rbp,0x1
0x39c5: cmp rbp,rcx
0x39c8: jae 0x314c
0x39ce: test al,al
0x39d0: je 0x3dce
0x39d6: cmp r13,r15
0x39d9: jbe 0x39e0
0x39db: mov byte ptr [r14+r15],0x27
0x39e0: lea rax,[r15+0x1]
0x39e4: cmp r13,rax
0x39e7: jbe 0x39ef
0x39e9: mov byte ptr [r14+r15+0x1],0x27
0x39ef: add r15,0x2
0x39f3: xor r10d,r10d
0x39f6: xor r8d,r8d
0x39f9: jmp 0x398d
0x3a00: cmp r15,0x1
0x3a04: je 0x3869
0x3a0a: mov rdi,qword ptr [rsp+0x10]
0x3a0f: lea rcx,[rdi+r15]
0x3a13: lea rdx,[rdi+r14+0x1]
0x3a18: lea r8,[rcx+r14]
0x3a1c: jmp 0x3a2d
0x3a20: add rdx,0x1
0x3a24: cmp r8,rdx
0x3a27: je 0x3869
0x3a2d: movzx ecx,byte ptr [rdx]
0x3a30: sub ecx,0x5b
0x3a33: cmp cl,0x21
0x3a36: ja 0x3a20
0x3a38: mov esi,0x1
0x3a3d: shl rsi,cl
0x3a40: mov rcx,rsi
0x3a43: movabsq rsi,0x20000002b
0x3a4d: test rcx,rsi
0x3a50: je 0x3a20
0x3a52: mov r14,qword ptr [rsp+0x40]
0x3a57: mov r13,qword ptr [rsp+0x70]
0x3a5c: mov rbp,qword ptr [rsp+0x30]
0x3a61: mov dword ptr [rsp+0x8],0x2
0x3a69: cmp byte ptr [rsp+0xd],0x0
0x3a6e: je 0x3a80
0x3a70: test al,al
0x3a72: mov eax,0x4
0x3a77: cmove eax,dword ptr [rsp+0x8]
0x3a7c: mov dword ptr [rsp+0x8],eax
0x3a80: sub rsp,0x8
0x3a84: mov rcx,rbp
0x3a87: mov rsi,r13
0x3a8a: push qword ptr [rsp+0x68]
0x3a8e: push qword ptr [rsp+0x78]
0x3a92: mov rdi,r14
0x3a95: push 0x0
0x3a97: mov r9d,dword ptr [rsp+0x98]
0x3a9f: mov r8d,dword ptr [rsp+0x28]
0x3aa4: mov rdx,qword ptr [rsp+0x30]
0x3aa9: and r9d,-0x3
0x3aad: call 0x2ee0
0x3ab2: add rsp,0x20
0x3ab6: mov r15,rax
0x3ab9: mov rbx,qword ptr [rsp+0xa8]
0x3ac1: xor rbx,qword ptr fs:0x28
0x3aca: mov rax,r15
0x3acd: jne 0x40d3
0x3ad3: add rsp,0xb8
0x3ada: pop rbx
0x3adb: pop rbp
0x3adc: pop r12
0x3ade: pop r13
0x3ae0: pop r14
0x3ae2: pop r15
0x3ae4: ret 
0x3ae8: mov rbp,r11
0x3aeb: jmp 0x3a69
0x3b51: test r13,r13
0x3b54: jne 0x40ea
0x3b5a: lea rax,[rip+0x2e84]
0x3b61: mov qword ptr [rsp+0x50],0x0
0x3b6a: mov byte ptr [rsp+0xe],0x1
0x3b6f: mov byte ptr [rsp+0x7c],0x0
0x3b74: xor r12d,r12d
0x3b77: mov byte ptr [rsp+0xf],0x0
0x3b7c: mov qword ptr [rsp+0x18],0x1
0x3b85: mov qword ptr [rsp+0x48],rax
0x3b8a: mov r15d,0x1
0x3b90: mov dword ptr [rsp+0x8],0x2
0x3b98: jmp 0x2fb3
0x3db0: movzx ebx,byte ptr [rsp+0xf]
0x3db5: mov rbp,r11
0x3db8: mov byte ptr [rsp+0xd],bl
0x3dbc: jmp 0x3a69
0x3dc1: movzx edx,byte ptr [rsp+0xd]
0x3dc6: xor r12d,r12d
0x3dc9: jmp 0x38d0
0x3dce: xor r10d,r10d
0x3dd1: jmp 0x398d
0x3df1: mov r11,qword ptr [rsp+0x30]
0x3df6: mov rsi,r14
0x3df9: mov rcx,r13
0x3dfc: mov rax,rbx
0x3dff: mov rdi,rbx
0x3e02: movzx r8d,byte ptr [rsp+0x7d]
0x3e08: movzx ebx,byte ptr [rsp+0x7e]
0x3e0d: mov r9,qword ptr [rsp+0x88]
0x3e15: cmp rsi,r11
0x3e18: movzx r10d,byte ptr [rsp+0x7f]
0x3e1e: mov r15,qword ptr [rsp+0x80]
0x3e26: mov r14,qword ptr [rsp+0x40]
0x3e2b: mov r13,qword ptr [rsp+0x70]
0x3e30: jae 0x3e58
0x3e32: cmp byte ptr [rcx],0x0
0x3e35: jne 0x3e47
0x3e37: jmp 0x3e58
0x3e40: cmp byte ptr [r9+rax],0x0
0x3e45: je 0x3e55
0x3e47: add rax,0x1
0x3e4b: lea rdx,[rbp+rax]
0x3e50: cmp r11,rdx
0x3e53: ja 0x3e40
0x3e55: mov rdi,rax
0x3e58: movzx edx,byte ptr [rsp+0xd]
0x3e5d: xor r12d,r12d
0x3e60: jmp 0x38c6
0x3e65: mov rdi,rbx
0x3e68: movzx r8d,byte ptr [rsp+0x7d]
0x3e6e: movzx ebx,byte ptr [rsp+0x7e]
0x3e73: movzx r10d,byte ptr [rsp+0x7f]
0x3e79: mov r15,qword ptr [rsp+0x80]
0x3e81: xor r12d,r12d
0x3e84: mov r14,qword ptr [rsp+0x40]
0x3e89: mov r13,qword ptr [rsp+0x70]
0x3e8e: mov r11,qword ptr [rsp+0x30]
0x3e93: movzx edx,byte ptr [rsp+0xd]
0x3e98: jmp 0x38c6
0x3ecb: mov eax,edx
0x3ecd: jmp 0x3427
0x3fda: mov eax,edx
0x3fdc: mov rbx,qword ptr [rsp+0x48]
0x3fe1: test rbx,rbx
0x3fe4: je 0x4012
0x3fe6: test al,al
0x3fe8: je 0x4012
0x3fea: movzx ecx,byte ptr [rbx]
0x3fed: mov rax,rbx
0x3ff0: test cl,cl
0x3ff2: je 0x4012
0x3ff4: mov rdx,r15
0x3ff7: sub rax,r15
0x3ffa: cmp r13,rdx
0x3ffd: jbe 0x4003
0x3fff: mov byte ptr [r14+rdx],cl
0x4003: add rdx,0x1
0x4007: movzx ecx,byte ptr [rax+rdx]
0x400b: test cl,cl
0x400d: jne 0x3ffa
0x400f: mov r15,rdx
0x4012: cmp r13,r15
0x4015: jbe 0x3ab9
0x401b: mov byte ptr [r14+r15],0x0
0x4020: jmp 0x3ab9
0x4025: cmp dword ptr [rsp+0x8],0x2
0x402a: movzx ebx,byte ptr [rsp+0xf]
0x402f: mov rbp,r11
0x4032: sete al
0x4035: mov byte ptr [rsp+0xd],bl
0x4039: jmp 0x3a69
0x407d: sub rsp,0x8
0x4081: mov r8d,0x5
0x4087: mov rcx,r11
0x408a: push qword ptr [rsp+0x68]
0x408e: push qword ptr [rsp+0x78]
0x4092: mov rdi,r14
0x4095: push qword ptr [rsp+0x38]
0x4099: mov r9d,dword ptr [rsp+0x98]
0x40a1: mov rdx,qword ptr [rsp+0x30]
0x40a6: mov rsi,qword ptr [rsp+0x70]
0x40ab: call 0x2ee0
0x40b0: add rsp,0x20
0x40b4: mov r15,rax
0x40b7: jmp 0x3ab9
0x40bc: movzx eax,byte ptr [rsp+0x7c]
0x40c1: jmp 0x3fdc
0x40c6: mov dword ptr [rsp+0x8],0x2
0x40ce: jmp 0x3a69
0x40d3: call 0x16f0
0x40d8: mov byte ptr [rsp+0xd],0x0
0x40dd: jmp 0x3b51
0x40ea: mov byte ptr [rsp+0xe],0x1
0x40ef: xor eax,eax
0x40f1: xor r12d,r12d
0x40f4: mov qword ptr [rsp+0x50],0x0
0x40fd: jmp 0x36a4
0x4114: nop 
0x4116: nop word ptr cs:[rax+rax]
0x420c: add rsp,0x20
0x4210: mov r11,qword ptr [rsp+0x10]
0x4215: cmp r11,rax
0x4218: ja 0x4281
0x421a: lea rsi,[rax+0x1]
0x421e: lea rax,[rip+0x204f3b]
0x4225: cmp r12,rax
0x4228: mov qword ptr [rbx],rsi
0x422b: je 0x423f
0x422d: mov rdi,r12
0x4230: mov qword ptr [rsp+0x10],rsi
0x4235: call 0x1620
0x423a: mov rsi,qword ptr [rsp+0x10]
0x423f: mov rdi,rsi
0x4242: mov qword ptr [rsp+0x10],rsi
0x4247: call 0x5540
0x424c: sub rsp,0x8
0x4250: mov qword ptr [rbx+0x8],rax
0x4254: mov r8d,dword ptr [rbp]
0x4258: push qword ptr [rbp+0x30]
0x425b: push qword ptr [rbp+0x28]
0x425e: mov rcx,r14
0x4261: push r15
0x4263: mov r9d,dword ptr [rsp+0x3c]
0x4268: mov rdi,rax
0x426b: mov rdx,qword ptr [rsp+0x28]
0x4270: mov rsi,qword ptr [rsp+0x30]
0x4275: mov r12,rax
0x4278: call 0x2ee0
0x427d: add rsp,0x20
0x4281: mov eax,dword ptr [rsp+0x18]
0x4285: mov dword ptr [r13],eax
0x4289: add rsp,0x28
0x428d: mov rax,r12
0x4290: pop rbx
0x4291: pop rbp
0x4292: pop r12
0x4294: pop r13
0x4296: pop r14
0x4298: pop r15
0x429a: ret 
0x42c1: call 0x1630
0x42c6: call 0x5790
0x42cb: nop dword ptr [rax+rax]
0x42d0: push r12
0x42d2: push rbp
0x42d3: push rbx
0x42d4: mov rbx,rdi
0x42d7: call 0x1640
0x42dc: mov r12d,dword ptr [rax]
0x42df: mov rbp,rax
0x42e2: lea rax,[rip+0x204f77]
0x42e9: test rbx,rbx
0x42ec: mov esi,0x38
0x42f1: cmove rbx,rax
0x42f5: mov rdi,rbx
0x42f8: call 0x5740
0x42fd: mov dword ptr [rbp],r12d
0x4301: pop rbx
0x4302: pop rbp
0x4303: pop r12
0x4305: ret 
0x4310: lea rax,[rip+0x204f49]
0x4317: test rdi,rdi
0x431a: cmove rdi,rax
0x431e: mov eax,dword ptr [rdi]
0x4320: ret 
0x4330: lea rax,[rip+0x204f29]
0x4337: test rdi,rdi
0x433a: cmove rdi,rax
0x433e: mov dword ptr [rdi],esi
0x4340: ret 
0x4350: lea rax,[rip+0x204f09]
0x4357: test rdi,rdi
0x435a: mov ecx,esi
0x435c: cmove rdi,rax
0x4360: mov eax,esi
0x4362: and ecx,0x1f
0x4365: shr al,0x5
0x4368: movzx eax,al
0x436b: lea rdi,[rdi+rax*4+0x8]
0x4370: mov esi,dword ptr [rdi]
0x4372: mov eax,esi
0x4374: shr eax,cl
0x4376: xor edx,eax
0x4378: and eax,0x1
0x437b: and edx,0x1
0x437e: shl edx,cl
0x4380: xor edx,esi
0x4382: mov dword ptr [rdi],edx
0x4384: ret 
0x4390: lea rax,[rip+0x204ec9]
0x4397: test rdi,rdi
0x439a: cmove rdi,rax
0x439e: mov eax,dword ptr [rdi+0x4]
0x43a1: mov dword ptr [rdi+0x4],esi
0x43a4: ret 
0x43b0: lea rax,[rip+0x204ea9]
0x43b7: test rdi,rdi
0x43ba: cmove rdi,rax
0x43be: test rsi,rsi
0x43c1: mov dword ptr [rdi],0xa
0x43c7: je 0x43d7
0x43c9: test rdx,rdx
0x43cc: je 0x43d7
0x43ce: mov qword ptr [rdi+0x28],rsi
0x43d2: mov qword ptr [rdi+0x30],rdx
0x43d6: ret 
0x43d7: sub rsp,0x8
0x43db: call 0x1630
0x43e0: push r15
0x43e2: push r14
0x43e4: lea rax,[rip+0x204e75]
0x43eb: push r13
0x43ed: push r12
0x43ef: mov r13,rdi
0x43f2: push rbp
0x43f3: push rbx
0x43f4: mov rbx,r8
0x43f7: mov r14,rsi
0x43fa: mov r15,rdx
0x43fd: sub rsp,0x18
0x4401: test r8,r8
0x4404: cmove rbx,rax
0x4408: mov qword ptr [rsp+0x8],rcx
0x440d: call 0x1640
0x4412: mov r12d,dword ptr [rax]
0x4415: mov rbp,rax
0x4418: lea rax,[rbx+0x8]
0x441c: sub rsp,0x8
0x4420: mov r9d,dword ptr [rbx+0x4]
0x4424: push qword ptr [rbx+0x30]
0x4427: mov r8d,dword ptr [rbx]
0x442a: push qword ptr [rbx+0x28]
0x442d: mov rdx,r15
0x4430: push rax
0x4431: mov rcx,qword ptr [rsp+0x28]
0x4436: mov rsi,r14
0x4439: mov rdi,r13
0x443c: call 0x2ee0
0x4441: mov dword ptr [rbp],r12d
0x4445: add rsp,0x38
0x4449: pop rbx
0x444a: pop rbp
0x444b: pop r12
0x444d: pop r13
0x444f: pop r14
0x4451: pop r15
0x4453: ret 
0x4460: push r15
0x4462: push r14
0x4464: lea rax,[rip+0x204df5]
0x446b: push r13
0x446d: push r12
0x446f: mov r12,rdx
0x4472: push rbp
0x4473: push rbx
0x4474: mov rbx,rcx
0x4477: mov r14,rdi
0x447a: mov r15,rsi
0x447d: sub rsp,0x38
0x4481: test rcx,rcx
0x4484: cmove rbx,rax
0x4488: xor ebp,ebp
0x448a: call 0x1640
0x448f: test r12,r12
0x4492: mov r13,rax
0x4495: mov eax,dword ptr [rax]
0x4497: sete bpl
0x449b: or ebp,dword ptr [rbx+0x4]
0x449e: lea r10,[rbx+0x8]
0x44a2: sub rsp,0x8
0x44a6: mov r8d,dword ptr [rbx]
0x44a9: mov rcx,r15
0x44ac: mov dword ptr [rsp+0x14],eax
0x44b0: push qword ptr [rbx+0x30]
0x44b3: mov rdx,r14
0x44b6: push qword ptr [rbx+0x28]
0x44b9: push r10
0x44bb: xor esi,esi
0x44bd: mov r9d,ebp
0x44c0: xor edi,edi
0x44c2: mov qword ptr [rsp+0x40],r10
0x44c7: call 0x2ee0
0x44cc: lea rsi,[rax+0x1]
0x44d0: mov qword ptr [rsp+0x48],rax
0x44d5: add rsp,0x20
0x44d9: mov rdi,rsi
0x44dc: mov qword ptr [rsp+0x18],rsi
0x44e1: call 0x5540
0x44e6: mov qword ptr [rsp+0x10],rax
0x44eb: sub rsp,0x8
0x44ef: push qword ptr [rbx+0x30]
0x44f2: push qword ptr [rbx+0x28]
0x44f5: mov r10,qword ptr [rsp+0x38]
0x44fa: mov r9d,ebp
0x44fd: mov r8d,dword ptr [rbx]
0x4500: mov rcx,r15
0x4503: mov rdx,r14
0x4506: mov rdi,rax
0x4509: push r10
0x450b: mov rsi,qword ptr [rsp+0x38]
0x4510: call 0x2ee0
0x4515: mov eax,dword ptr [rsp+0x2c]
0x4519: add rsp,0x20
0x451d: test r12,r12
0x4520: mov dword ptr [r13],eax
0x4524: je 0x452f
0x4526: mov r11,qword ptr [rsp+0x28]
0x452b: mov qword ptr [r12],r11
0x452f: mov rax,qword ptr [rsp+0x10]
0x4534: add rsp,0x38
0x4538: pop rbx
0x4539: pop rbp
0x453a: pop r12
0x453c: pop r13
0x453e: pop r14
0x4540: pop r15
0x4542: ret 
0x4550: mov rcx,rdx
0x4553: xor edx,edx
0x4555: jmp 0x4460
0x4560: mov eax,dword ptr [rip+0x204b12]
0x4566: push r12
0x4568: mov r12,qword ptr [rip+0x204b11]
0x456f: push rbp
0x4570: push rbx
0x4571: cmp eax,0x1
0x4574: jle 0x45a1
0x4576: sub eax,0x2
0x4579: lea rbx,[r12+0x18]
0x457e: shl rax,0x4
0x4582: lea rbp,[r12+rax+0x28]
0x4587: nop word ptr [rax+rax]
0x4590: mov rdi,qword ptr [rbx]
0x4593: add rbx,0x10
0x4597: call 0x1620
0x459c: cmp rbx,rbp
0x459f: jne 0x4590
0x45a1: mov rdi,qword ptr [r12+0x8]
0x45a6: lea rbx,[rip+0x204bb3]
0x45ad: cmp rdi,rbx
0x45b0: je 0x45c9
0x45b2: call 0x1620
0x45b7: mov qword ptr [rip+0x204ace],0x100
0x45c2: mov qword ptr [rip+0x204acf],rbx
0x45c9: lea rbx,[rip+0x204ac0]
0x45d0: cmp r12,rbx
0x45d3: je 0x45e4
0x45d5: mov rdi,r12
0x45d8: call 0x1620
0x45dd: mov qword ptr [rip+0x204a9c],rbx
0x45e4: pop rbx
0x45e5: mov dword ptr [rip+0x204a89],0x1
0x45ef: pop rbp
0x45f0: pop r12
0x45f2: ret 
0x4600: lea rcx,[rip+0x204c59]
0x4607: mov rdx,-0x1
0x460e: jmp 0x4120
0x4620: lea rcx,[rip+0x204c39]
0x4627: jmp 0x4120
0x4630: lea rcx,[rip+0x204c29]
0x4637: mov rsi,rdi
0x463a: mov rdx,-0x1
0x4641: xor edi,edi
0x4643: jmp 0x4120
0x4650: lea rcx,[rip+0x204c09]
0x4657: mov rdx,rsi
0x465a: mov rsi,rdi
0x465d: xor edi,edi
0x465f: jmp 0x4120
0x4670: sub rsp,0x48
0x4674: mov rax,rdx
0x4677: mov rdx,qword ptr fs:0x28
0x4680: mov qword ptr [rsp+0x38],rdx
0x4685: xor edx,edx
0x4687: cmp esi,0xa
0x468a: je 0x46f4
0x468c: mov dword ptr [rsp],esi
0x468f: mov rcx,rsp
0x4692: mov rdx,-0x1
0x4699: mov rsi,rax
0x469c: mov qword ptr [rsp+0x4],0x0
0x46a5: mov qword ptr [rsp+0xc],0x0
0x46ae: mov qword ptr [rsp+0x14],0x0
0x46b7: mov qword ptr [rsp+0x1c],0x0
0x46c0: mov qword ptr [rsp+0x24],0x0
0x46c9: mov qword ptr [rsp+0x2c],0x0
0x46d2: mov dword ptr [rsp+0x34],0x0
0x46da: call 0x4120
0x46df: mov rcx,qword ptr [rsp+0x38]
0x46e4: xor rcx,qword ptr fs:0x28
0x46ed: jne 0x46f9
0x46ef: add rsp,0x48
0x46f3: ret 
0x46f4: call 0x1630
0x46f9: call 0x16f0
0x46fe: nop 
0x4700: sub rsp,0x48
0x4704: mov rax,rdx
0x4707: mov rdx,rcx
0x470a: mov rcx,qword ptr fs:0x28
0x4713: mov qword ptr [rsp+0x38],rcx
0x4718: xor ecx,ecx
0x471a: cmp esi,0xa
0x471d: je 0x4780
0x471f: mov dword ptr [rsp],esi
0x4722: mov rcx,rsp
0x4725: mov rsi,rax
0x4728: mov qword ptr [rsp+0x4],0x0
0x4731: mov qword ptr [rsp+0xc],0x0
0x473a: mov qword ptr [rsp+0x14],0x0
0x4743: mov qword ptr [rsp+0x1c],0x0
0x474c: mov qword ptr [rsp+0x24],0x0
0x4755: mov qword ptr [rsp+0x2c],0x0
0x475e: mov dword ptr [rsp+0x34],0x0
0x4766: call 0x4120
0x476b: mov rdx,qword ptr [rsp+0x38]
0x4770: xor rdx,qword ptr fs:0x28
0x4779: jne 0x4785
0x477b: add rsp,0x48
0x477f: ret 
0x4780: call 0x1630
0x4785: call 0x16f0
0x478a: nop word ptr [rax+rax]
0x4790: mov rdx,rsi
0x4793: mov esi,edi
0x4795: xor edi,edi
0x4797: jmp 0x4670
0x47a0: mov rcx,rdx
0x47a3: mov rdx,rsi
0x47a6: mov esi,edi
0x47a8: xor edi,edi
0x47aa: jmp 0x4700
0x47b0: sub rsp,0x48
0x47b4: mov ecx,edx
0x47b6: mov rax,qword ptr fs:0x28
0x47bf: mov qword ptr [rsp+0x38],rax
0x47c4: xor eax,eax
0x47c6: mov rax,qword ptr [rip+0x204ac3]
0x47cd: mov r8,rsp
0x47d0: and ecx,0x1f
0x47d3: movdqa xmm0,[rip+0x204a85]
0x47db: mov qword ptr [rsp+0x30],rax
0x47e0: mov eax,edx
0x47e2: movaps [rsp],xmm0
0x47e6: shr al,0x5
0x47e9: movzx eax,al
0x47ec: lea r9,[r8+rax*4+0x8]
0x47f1: movdqa xmm0,[rip+0x204a77]
0x47f9: movaps [rsp+0x10],xmm0
0x47fe: movdqa xmm0,[rip+0x204a7a]
0x4806: movaps [rsp+0x20],xmm0
0x480b: mov edx,dword ptr [r9]
0x480e: mov eax,edx
0x4810: shr eax,cl
0x4812: not eax
0x4814: and eax,0x1
0x4817: shl eax,cl
0x4819: mov rcx,r8
0x481c: xor eax,edx
0x481e: mov rdx,rsi
0x4821: mov rsi,rdi
0x4824: mov dword ptr [r9],eax
0x4827: xor edi,edi
0x4829: call 0x4120
0x482e: mov rsi,qword ptr [rsp+0x38]
0x4833: xor rsi,qword ptr fs:0x28
0x483c: jne 0x4843
0x483e: add rsp,0x48
0x4842: ret 
0x4843: call 0x16f0
0x4848: nop dword ptr [rax+rax]
0x4850: movsx edx,sil
0x4854: mov rsi,-0x1
0x485b: jmp 0x47b0
0x4860: mov edx,0x3a
0x4865: mov rsi,-0x1
0x486c: jmp 0x47b0
0x4880: mov edx,0x3a
0x4885: jmp 0x47b0
0x4890: sub rsp,0x48
0x4894: mov rax,rdx
0x4897: mov rdx,qword ptr fs:0x28
0x48a0: mov qword ptr [rsp+0x38],rdx
0x48a5: xor edx,edx
0x48a7: cmp esi,0xa
0x48aa: je 0x4914
0x48ac: mov dword ptr [rsp],esi
0x48af: mov rcx,rsp
0x48b2: mov rdx,-0x1
0x48b9: mov rsi,rax
0x48bc: mov qword ptr [rsp+0x4],0x0
0x48c5: mov qword ptr [rsp+0xc],0x4000000
0x48ce: mov qword ptr [rsp+0x14],0x0
0x48d7: mov qword ptr [rsp+0x1c],0x0
0x48e0: mov qword ptr [rsp+0x24],0x0
0x48e9: mov qword ptr [rsp+0x2c],0x0
0x48f2: mov dword ptr [rsp+0x34],0x0
0x48fa: call 0x4120
0x48ff: mov rcx,qword ptr [rsp+0x38]
0x4904: xor rcx,qword ptr fs:0x28
0x490d: jne 0x4919
0x490f: add rsp,0x48
0x4913: ret 
0x4914: call 0x1630
0x4919: call 0x16f0
0x491e: nop 
0x4920: sub rsp,0x48
0x4924: mov r9,rcx
0x4927: mov rcx,qword ptr [rip+0x204962]
0x492e: movdqa xmm0,[rip+0x20492a]
0x4936: mov rax,qword ptr fs:0x28
0x493f: mov qword ptr [rsp+0x38],rax
0x4944: xor eax,eax
0x4946: movaps [rsp],xmm0
0x494a: test rsi,rsi
0x494d: mov qword ptr [rsp+0x30],rcx
0x4952: mov dword ptr [rsp],0xa
0x4959: movdqa xmm0,[rip+0x20490f]
0x4961: movaps [rsp+0x10],xmm0
0x4966: movdqa xmm0,[rip+0x204912]
0x496e: movaps [rsp+0x20],xmm0
0x4973: je 0x49a7
0x4975: test rdx,rdx
0x4978: je 0x49a7
0x497a: mov qword ptr [rsp+0x28],rsi
0x497f: mov qword ptr [rsp+0x30],rdx
0x4984: mov rcx,rsp
0x4987: mov rdx,r8
0x498a: mov rsi,r9
0x498d: call 0x4120
0x4992: mov rdi,qword ptr [rsp+0x38]
0x4997: xor rdi,qword ptr fs:0x28
0x49a0: jne 0x49ac
0x49a2: add rsp,0x48
0x49a6: ret 
0x49a7: call 0x1630
0x49ac: call 0x16f0
0x49b1: nop dword ptr [rax+rax]
0x49b6: nop word ptr cs:[rax+rax]
0x49c0: mov r8,-0x1
0x49c7: jmp 0x4920
0x49d0: mov rcx,rdx
0x49d3: mov r8,-0x1
0x49da: mov rdx,rsi
0x49dd: mov rsi,rdi
0x49e0: xor edi,edi
0x49e2: jmp 0x4920
0x49f0: mov r8,rcx
0x49f3: mov rcx,rdx
0x49f6: mov rdx,rsi
0x49f9: mov rsi,rdi
0x49fc: xor edi,edi
0x49fe: jmp 0x4920
0x4a10: lea rcx,[rip+0x204629]
0x4a17: jmp 0x4120
0x4a20: lea rcx,[rip+0x204619]
0x4a27: mov rdx,rsi
0x4a2a: mov rsi,rdi
0x4a2d: xor edi,edi
0x4a2f: jmp 0x4120
0x4a40: lea rcx,[rip+0x2045f9]
0x4a47: mov rdx,-0x1
0x4a4e: jmp 0x4120
0x4ac0: mov r15d,dword ptr [r12]
0x4ac9: mov qword ptr [r13],0x0
0x4ad6: mov qword ptr [r14],0x0
0x4ae6: mov rbx,r10
0x4ae9: sub rbx,rdi
0x4aec: jne 0x4bc0
0x4af2: cmp byte ptr [r10+0x1],0x0
0x4af7: je 0x4d08
0x4afd: add r10,0x1
0x4b01: mov qword ptr [rsp],0x0
0x4b09: setne qword ptr [rsp+0x1e]
0x4b0e: mov qword ptr [rsp+0x8],r10
0x4b13: xor ebp,ebp
0x4b15: xor ebx,ebx
0x4bc0: lea rsi,[rbx+0x1]
0x4bc4: mov qword ptr [rsp],r10
0x4bc8: call 0x5740
0x4bcd: mov r10,qword ptr [rsp]
0x4bd1: mov byte ptr [rax+rbx],0x0
0x4bd5: mov rbp,rax
0x4bd8: cmp byte ptr [r10+0x1],0x0
0x4bdd: jne 0x4d30
0x4d30: mov rax,r10
0x4d33: add rax,0x1
0x4d37: setne qword ptr [rsp+0x1e]
0x4d3c: test rbp,rbp
0x4d3f: mov qword ptr [rsp+0x8],rax
0x4d44: je 0x4e3a
0x4d4a: test rax,rax
0x4d4d: sete al
0x4d50: jmp 0x4bff
0x4e35: call 0x16f0
0x4e3a: xor ebx,ebx
0x4e3c: mov qword ptr [rsp],0x0
0x4e44: jmp 0x4b17
0x4e59: push r15
0x4e5b: push r14
0x4e5d: mov r14,rsi
0x4e60: push r13
0x4e62: push r12
0x4e64: mov r13,r8
0x4e67: push rbp
0x4e68: push rbx
0x4e69: mov r12,rcx
0x4e6c: mov rbp,rdx
0x4e6f: mov rbx,rdi
0x4e72: mov esi,0x3a
0x4e77: sub rsp,0x18
0x4e7b: call 0x1730
0x4e80: mov r9,r13
0x4e83: mov r15,rax
0x4e86: mov r8,r12
0x4e89: mov rcx,rbp
0x4e8c: mov rdx,r14
0x4e8f: mov rsi,rax
0x4e92: mov rdi,rbx
0x4e95: call 0x4a80
0x4e9a: test r15,r15
0x4e9d: mov r10,rax
0x4ea0: jne 0x4ee4
0x4ea2: test rax,rax
0x4ea5: mov qword ptr [rsp+0x8],rax
0x4eaa: je 0x4f18
0x4eac: mov esi,0x2e
0x4eb1: mov rdi,rbx
0x4eb4: call 0x1730
0x4eb9: test rax,rax
0x4ebc: mov r10,qword ptr [rsp+0x8]
0x4ec1: je 0x4ee4
0x4ec3: mov r9,r13
0x4ec6: mov r8,r12
0x4ec9: mov rcx,rbp
0x4ecc: mov rdx,r14
0x4ecf: mov rsi,rax
0x4ed2: mov rdi,rbx
0x4ed5: call 0x4a80
0x4eda: test rax,rax
0x4edd: mov r10,qword ptr [rsp+0x8]
0x4ee2: je 0x4f18
0x4ee4: add rsp,0x18
0x4ee8: mov rax,r10
0x4eeb: pop rbx
0x4eec: pop rbp
0x4eed: pop r12
0x4eef: pop r13
0x4ef1: pop r14
0x4ef3: pop r15
0x4ef5: ret 
0x4f18: xor r10d,r10d
0x4f1b: jmp 0x4ee4
0x5058: mov r8,rcx
0x505b: mov rcx,rdx
0x505e: lea rdx,[rip+0x1e77]
0x5065: mov esi,0x1
0x506a: xor eax,eax
0x506c: call 0x1940
0x5071: jmp 0x4f5c
0x526d: push r12
0x526f: push r15
0x5271: push r14
0x5273: mov r8,qword ptr [rsp+0x20]
0x5278: mov rcx,rbx
0x527b: mov rdx,rax
0x527e: mov rdi,rbp
0x5281: mov esi,0x1
0x5286: xor eax,eax
0x5288: call 0x1940
0x528d: add rsp,0x20
0x5291: add rsp,0x28
0x5295: pop rbx
0x5296: pop rbp
0x5297: pop r12
0x5299: pop r13
0x529b: pop r14
0x529d: pop r15
0x529f: ret 
0x52d9: push r12
0x52db: push r15
0x52dd: push r14
0x52df: mov r9,qword ptr [rsp+0x28]
0x52e4: jmp 0x5273
0x5340: xor r9d,r9d
0x5343: cmp qword ptr [r8],0x0
0x5347: je 0x535b
0x5349: nop dword ptr [rax]
0x5350: add r9,0x1
0x5354: cmp qword ptr [r8+r9*8],0x0
0x5359: jne 0x5350
0x535b: jmp 0x4f20
0x5360: sub rsp,0x68
0x5364: mov r10,r8
0x5367: xor r9d,r9d
0x536a: mov rax,qword ptr fs:0x28
0x5373: mov qword ptr [rsp+0x58],rax
0x5378: xor eax,eax
0x537a: mov r8,rsp
0x537d: nop dword ptr [rax]
0x5380: mov eax,dword ptr [r10]
0x5383: cmp eax,0x2f
0x5386: ja 0x53ca
0x5388: mov r11d,eax
0x538b: add r11,qword ptr [r10+0x10]
0x538f: add eax,0x8
0x5392: mov dword ptr [r10],eax
0x5395: mov rax,qword ptr [r11]
0x5398: test rax,rax
0x539b: mov qword ptr [r8+r9*8],rax
0x539f: je 0x53ab
0x53a1: add r9,0x1
0x53a5: cmp r9,0xa
0x53a9: jne 0x5380
0x53ab: call 0x4f20
0x53b0: mov rax,qword ptr [rsp+0x58]
0x53b5: xor rax,qword ptr fs:0x28
0x53be: jne 0x53c5
0x53c0: add rsp,0x68
0x53c4: ret 
0x53c5: call 0x16f0
0x53ca: mov r11,qword ptr [r10+0x8]
0x53ce: lea rax,[r11+0x8]
0x53d2: mov qword ptr [r10+0x8],rax
0x53d6: jmp 0x5395
0x54a0: call 0x16f0
0x54ac: mov rax,rbx
0x54af: add rbx,0x8
0x54b3: jmp 0x5466
0x54c0: push rbx
0x54c1: lea rsi,[rip+0x1a62]
0x54c8: mov edx,0x5
0x54cd: xor edi,edi
0x54cf: call 0x16c0
0x54d4: lea rdx,[rip+0x1a64]
0x54db: mov rsi,rax
0x54de: mov edi,0x1
0x54e3: xor eax,eax
0x54e5: call 0x18c0
0x54ea: lea rsi,[rip+0x1a64]
0x54f1: mov edx,0x5
0x54f6: xor edi,edi
0x54f8: call 0x16c0
0x54fd: lea rcx,[rip+0x111c]
0x5504: lea rdx,[rip+0x132c]
0x550b: mov rsi,rax
0x550e: mov edi,0x1
0x5513: xor eax,eax
0x5515: call 0x18c0
0x551a: mov rbx,qword ptr [rip+0x203b87]
0x5521: lea rsi,[rip+0x1c60]
0x5528: xor edi,edi
0x552a: mov edx,0x5
0x552f: call 0x16c0
0x5534: mov rsi,rbx
0x5537: mov rdi,rax
0x553a: pop rbx
0x553b: jmp 0x17c0
0x555a: nop word ptr [rax+rax]
0x5560: mov rax,rdi
0x5563: mul rsi
0x5566: mov rdi,rax
0x5569: seto al
0x556c: test rdi,rdi
0x556f: js 0x557b
0x5571: movzx eax,al
0x5574: test rax,rax
0x5577: jne 0x557b
0x5579: jmp 0x5540
0x557b: sub rsp,0x8
0x557f: call 0x5790
0x5584: nop 
0x5586: nop word ptr cs:[rax+rax]
0x5590: jmp 0x5540
0x55a9: test rdi,rdi
0x55ac: jne 0x55c8
0x55c8: call 0x1620
0x55cd: xor eax,eax
0x55cf: pop rbx
0x55d0: ret 
0x55d6: nop word ptr cs:[rax+rax]
0x55e0: mov rax,rsi
0x55e3: mul rdx
0x55e6: mov rsi,rax
0x55e9: seto al
0x55ec: test rsi,rsi
0x55ef: js 0x55fb
0x55f1: movzx eax,al
0x55f4: test rax,rax
0x55f7: jne 0x55fb
0x55f9: jmp 0x55a0
0x55fb: sub rsp,0x8
0x55ff: call 0x5790
0x5604: nop 
0x5606: nop word ptr cs:[rax+rax]
0x5610: test rdi,rdi
0x5613: mov r9,rdx
0x5616: mov rcx,qword ptr [rsi]
0x5619: je 0x5650
0x561b: xor edx,edx
0x561d: movabsq rax,0x5555555555555554
0x5627: div r9
0x562a: cmp rax,rcx
0x562d: jbe 0x566b
0x562f: mov rax,rcx
0x5632: shr rax, 1
0x5635: lea rcx,[rax+rcx+0x1]
0x563a: mov qword ptr [rsi],rcx
0x563d: imul rcx,r9
0x5641: mov rsi,rcx
0x5644: jmp 0x55a0
0x5650: test rcx,rcx
0x5653: je 0x5678
0x5655: mov rax,rcx
0x5658: mul r9
0x565b: seto dl
0x565e: test rax,rax
0x5661: movzx edx,dl
0x5664: js 0x566b
0x5666: test rdx,rdx
0x5669: je 0x563a
0x566b: sub rsp,0x8
0x566f: call 0x5790
0x5674: nop dword ptr [rax]
0x5678: xor edx,edx
0x567a: mov eax,0x80
0x567f: xor r8d,r8d
0x5682: div r9
0x5685: test rax,rax
0x5688: sete r8b
0x568c: lea rcx,[r8+rax]
0x5690: jmp 0x5655
0x56a0: test rdi,rdi
0x56a3: mov rax,qword ptr [rsi]
0x56a6: je 0x56d0
0x56a8: movabsq rdx,0x5555555555555553
0x56b2: cmp rax,rdx
0x56b5: ja 0x56e1
0x56b7: mov rdx,rax
0x56ba: shr rdx, 1
0x56bd: lea rax,[rdx+rax+0x1]
0x56c2: mov qword ptr [rsi],rax
0x56c5: mov rsi,rax
0x56c8: jmp 0x55a0
0x56d0: test rax,rax
0x56d3: mov edx,0x80
0x56d8: cmove rax,rdx
0x56dc: test rax,rax
0x56df: jns 0x56c2
0x56e1: sub rsp,0x8
0x56e5: call 0x5790
0x56ea: nop word ptr [rax+rax]
0x56f0: push rbx
0x56f1: mov rbx,rdi
0x56f4: call 0x5540
0x56f9: mov rdx,rbx
0x56fc: xor esi,esi
0x56fe: mov rdi,rax
0x5701: pop rbx
0x5702: jmp 0x1790
0x5710: mov rax,rdi
0x5713: sub rsp,0x8
0x5717: mul rsi
0x571a: seto dl
0x571d: test rax,rax
0x5720: js 0x5739
0x5722: movzx edx,dl
0x5725: test rdx,rdx
0x5728: jne 0x5739
0x572a: call 0x17d0
0x572f: test rax,rax
0x5732: je 0x5739
0x5734: add rsp,0x8
0x5738: ret 
0x5739: call 0x5790
0x573e: nop 
0x57c0: call 0x1630
0x57c5: nop word ptr cs:[rax+rax]
0x57cf: nop 
0x57f7: nop word ptr [rax+rax]
0x58a4: cmp eax,0x22
0x58a7: mov ebp,0x1
0x58ac: jne 0x58d8
0x58d2: nop word ptr [rax+rax]
0x5a00: movsxd rdi,edi
0x5a03: mov eax,ebp
0x5a05: add rcx,rdi
0x5a08: or eax,0x2
0x5a0b: mov qword ptr [r15],rcx
0x5a0e: cmp byte ptr [rcx],0x0
0x5a11: mov qword ptr [r14],rbx
0x5a14: cmovne ebp,eax
0x5a17: jmp 0x58dd
0x5a75: or ebp,r9d
0x5a78: jmp 0x5a00
0x5b0c: mov rax,rbx
0x5b0f: mul rsi
0x5b12: mov rbx,rax
0x5b15: jo 0x5ba4
0x5b1b: sub r8d,0x1
0x5b1f: jne 0x5b0c
0x5b21: jmp 0x5a75
0x5b80: call 0x16f0
0x5b85: lea rcx,[rip+0x17d4]
0x5b8c: lea rsi,[rip+0x16ad]
0x5b93: lea rdi,[rip+0x16c6]
0x5b9a: mov edx,0x54
0x5b9f: call 0x1780
0x5ba4: mov r9d,0x1
0x5baa: or rbx,-0x1
0x5bae: jmp 0x5b1b
0x5c20: push r13
0x5c22: push r12
0x5c24: mov r13,rsi
0x5c27: push rbp
0x5c28: push rbx
0x5c29: mov rbx,rdi
0x5c2c: mov r12,rdx
0x5c2f: sub rsp,0x18
0x5c33: mov rax,qword ptr fs:0x28
0x5c3c: mov qword ptr [rsp+0x8],rax
0x5c41: xor eax,eax
0x5c43: lea rax,[rsp+0x4]
0x5c48: test rdi,rdi
0x5c4b: cmove rbx,rax
0x5c4f: mov rdi,rbx
0x5c52: call 0x1720
0x5c57: cmp rax,-0x3
0x5c5b: mov rbp,rax
0x5c5e: jbe 0x5c80
0x5c60: test r12,r12
0x5c63: je 0x5c80
0x5c65: xor edi,edi
0x5c67: call 0x5d30
0x5c6c: test al,al
0x5c6e: jne 0x5c80
0x5c70: movzx eax,byte ptr [r13]
0x5c75: mov ebp,0x1
0x5c7a: mov dword ptr [rbx],eax
0x5c7c: nop dword ptr [rax]
0x5c80: mov rdx,qword ptr [rsp+0x8]
0x5c85: xor rdx,qword ptr fs:0x28
0x5c8e: mov rax,rbp
0x5c91: jne 0x5c9e
0x5c93: add rsp,0x18
0x5c97: pop rbx
0x5c98: pop rbp
0x5c99: pop r12
0x5c9b: pop r13
0x5c9d: ret 
0x5c9e: call 0x16f0
0x5ca3: nop word ptr cs:[rax+rax]
0x5cad: nop dword ptr [rax]
0x5cb0: push r12
0x5cb2: push rbp
0x5cb3: mov rbp,rdi
0x5cb6: push rbx
0x5cb7: call 0x1670
0x5cbc: mov ebx,dword ptr [rbp]
0x5cbf: mov rdi,rbp
0x5cc2: mov r12,rax
0x5cc5: call 0x6060
0x5cca: and ebx,0x20
0x5ccd: test ebx,ebx
0x5ccf: jne 0x5ce8
0x5cd1: test eax,eax
0x5cd3: je 0x5cdf
0x5cd5: test r12,r12
0x5cd8: mov eax,0xffffffff
0x5cdd: je 0x5d18
0x5cdf: pop rbx
0x5ce0: pop rbp
0x5ce1: pop r12
0x5ce3: ret 
0x5ce8: test eax,eax
0x5cea: jne 0x5d08
0x5cec: call 0x1640
0x5cf1: mov dword ptr [rax],0x0
0x5cf7: mov eax,0xffffffff
0x5cfc: pop rbx
0x5cfd: pop rbp
0x5cfe: pop r12
0x5d00: ret 
0x5d08: pop rbx
0x5d09: mov eax,0xffffffff
0x5d0e: pop rbp
0x5d0f: pop r12
0x5d11: ret 
0x5d18: call 0x1640
0x5d1d: cmp dword ptr [rax],0x9
0x5d20: pop rbx
0x5d21: pop rbp
0x5d22: pop r12
0x5d24: setne al
0x5d27: movzx eax,al
0x5d2a: neg eax
0x5d2c: ret 
0x5d30: sub rsp,0x8
0x5d34: xor esi,esi
0x5d36: call 0x18b0
0x5d3b: mov rdx,rax
0x5d3e: mov eax,0x1
0x5d43: test rdx,rdx
0x5d46: je 0x5d65
0x5d48: lea rdi,[rip+0x161a]
0x5d4f: mov ecx,0x2
0x5d54: mov rsi,rdx
0x5d57: rep cmpsb [rsi],es:[rdi]
0x5d59: seta cl
0x5d5c: sbb cl,0x0
0x5d5f: xor eax,eax
0x5d61: test cl,cl
0x5d63: jne 0x5d70
0x5d65: add rsp,0x8
0x5d69: ret 
0x5d70: lea rdi,[rip+0x15f4]
0x5d77: mov ecx,0x6
0x5d7c: mov rsi,rdx
0x5d7f: rep cmpsb [rsi],es:[rdi]
0x5d81: seta al
0x5d84: sbb al,0x0
0x5d86: test al,al
0x5d88: setne al
0x5d8b: add rsp,0x8
0x5d8f: ret 
0x5d90: sub rsp,0x8
0x5d94: mov edi,0xe
0x5d99: call 0x1860
0x5d9e: test rax,rax
0x5da1: je 0x5dc0
0x5da3: cmp byte ptr [rax],0x0
0x5da6: lea rdx,[rip+0x15c4]
0x5dad: cmove rax,rdx
0x5db1: add rsp,0x8
0x5db5: ret 
0x5dc0: lea rax,[rip+0x15aa]
0x5dc7: add rsp,0x8
0x5dcb: ret 
0x6057: call 0x16f0
0x605c: nop dword ptr [rax]
0x6060: push r12
0x6062: push rbp
0x6063: push rbx
0x6064: mov rbx,rdi
0x6067: call 0x1810
0x606c: test eax,eax
0x606e: mov rdi,rbx
0x6071: js 0x60c7
0x6073: call 0x1890
0x6078: test eax,eax
0x607a: jne 0x60a8
0x607c: mov rdi,rbx
0x607f: call 0x60e0
0x6084: test eax,eax
0x6086: je 0x60c4
0x6088: call 0x1640
0x608d: mov r12d,dword ptr [rax]
0x6090: mov rdi,rbx
0x6093: mov rbp,rax
0x6096: call 0x1690
0x609b: test r12d,r12d
0x609e: jne 0x60d0
0x60a0: pop rbx
0x60a1: pop rbp
0x60a2: pop r12
0x60a4: ret 
0x60a8: mov rdi,rbx
0x60ab: call 0x1810
0x60b0: xor esi,esi
0x60b2: mov edx,0x1
0x60b7: mov edi,eax
0x60b9: call 0x1770
0x60be: cmp rax,-0x1
0x60c2: jne 0x607c
0x60c4: mov rdi,rbx
0x60c7: pop rbx
0x60c8: pop rbp
0x60c9: pop r12
0x60cb: jmp 0x1690
0x60d0: mov dword ptr [rbp],r12d
0x60d4: mov eax,0xffffffff
0x60d9: jmp 0x60a0
0x60e0: test rdi,rdi
0x60e3: push rbx
0x60e4: mov rbx,rdi
0x60e7: je 0x60fa
0x60e9: call 0x1890
0x60ee: test eax,eax
0x60f0: je 0x60fa
0x60f2: test dword ptr [rbx],0x100
0x60f8: jne 0x6108
0x60fa: mov rdi,rbx
0x60fd: pop rbx
0x60fe: jmp 0x1850
0x6108: mov rdi,rbx
0x610b: mov edx,0x1
0x6110: xor esi,esi
0x6112: call 0x6120
0x6117: mov rdi,rbx
0x611a: pop rbx
0x611b: jmp 0x1850
0x6120: mov rax,qword ptr [rdi+0x8]
0x6124: cmp qword ptr [rdi+0x10],rax
0x6128: je 0x6130
0x612a: jmp 0x18f0
0x6130: mov rax,qword ptr [rdi+0x20]
0x6134: cmp qword ptr [rdi+0x28],rax
0x6138: jne 0x612a
0x613a: cmp qword ptr [rdi+0x48],0x0
0x613f: jne 0x612a
0x6141: push r12
0x6143: push rbp
0x6144: mov r12d,edx
0x6147: push rbx
0x6148: mov rbp,rsi
0x614b: mov rbx,rdi
0x614e: call 0x1810
0x6153: mov edx,r12d
0x6156: mov rsi,rbp
0x6159: mov edi,eax
0x615b: call 0x1770
0x6160: cmp rax,-0x1
0x6164: je 0x6172
0x6166: and dword ptr [rbx],-0x11
0x6169: mov qword ptr [rbx+0x90],rax
0x6170: xor eax,eax
0x6172: pop rbx
0x6173: pop rbp
0x6174: pop r12
0x6176: ret 
0x6180: push r15
0x6182: push r14
0x6184: mov r15,rdx
0x6187: push r13
0x6189: push r12
0x618b: lea r12,[rip+0x2028be]
0x6192: push rbp
0x6193: lea rbp,[rip+0x2028be]
0x619a: push rbx
0x619b: mov r13d,edi
0x619e: mov r14,rsi
0x61a1: sub rbp,r12
0x61a4: sub rsp,0x8
0x61a8: sar rbp,0x3
0x61ac: call 0x15d8
0x61b1: test rbp,rbp
0x61b4: je 0x61d6
0x61b6: xor ebx,ebx
0x61b8: nop dword ptr [rax+rax]
0x61c0: mov rdx,r15
0x61c3: mov rsi,r14
0x61c6: mov edi,r13d
0x61c9: call qword ptr [r12+rbx*8]
0x61cd: add rbx,0x1
0x61d1: cmp rbp,rbx
0x61d4: jne 0x61c0
0x61d6: add rsp,0x8
0x61da: pop rbx
0x61db: pop rbp
0x61dc: pop r12
0x61de: pop r13
0x61e0: pop r14
0x61e2: pop r15
0x61e4: ret 
0x61f0: rep ret 
