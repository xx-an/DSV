0x2710: sub rsp,0x8
0x2714: mov rax,qword ptr [rip+0x2178c5]
0x271b: test rax,rax
0x271e: je 0x2722
0x2720: call rax
0x2722: add rsp,0x8
0x2726: ret 
0x2736: jmp qword ptr [rip+0x21751c]
0x2790: jmp qword ptr [rip+0x2174f2]
0x27a0: jmp qword ptr [rip+0x2174ea]
0x27b0: jmp qword ptr [rip+0x2174e2]
0x27c0: jmp qword ptr [rip+0x2174da]
0x27d0: jmp qword ptr [rip+0x2174d2]
0x27f0: jmp qword ptr [rip+0x2174c2]
0x2800: jmp qword ptr [rip+0x2174ba]
0x2810: jmp qword ptr [rip+0x2174b2]
0x2850: jmp qword ptr [rip+0x217492]
0x2860: jmp qword ptr [rip+0x21748a]
0x2880: jmp qword ptr [rip+0x21747a]
0x2890: jmp qword ptr [rip+0x217472]
0x28a0: jmp qword ptr [rip+0x21746a]
0x28c0: jmp qword ptr [rip+0x21745a]
0x28d0: jmp qword ptr [rip+0x217452]
0x2920: jmp qword ptr [rip+0x21742a]
0x2940: jmp qword ptr [rip+0x21741a]
0x2960: jmp qword ptr [rip+0x21740a]
0x2990: jmp qword ptr [rip+0x2173f2]
0x29d0: jmp qword ptr [rip+0x2173d2]
0x2a20: jmp qword ptr [rip+0x2173aa]
0x2a40: jmp qword ptr [rip+0x21739a]
0x2a50: jmp qword ptr [rip+0x217392]
0x2a60: jmp qword ptr [rip+0x21738a]
0x2ab0: jmp qword ptr [rip+0x217362]
0x2ae0: jmp qword ptr [rip+0x21734a]
0x2af0: jmp qword ptr [rip+0x217342]
0x2b00: jmp qword ptr [rip+0x21733a]
0x2b10: jmp qword ptr [rip+0x217332]
0x2b20: jmp qword ptr [rip+0x21732a]
0x2b30: jmp qword ptr [rip+0x217322]
0x2b40: jmp qword ptr [rip+0x21731a]
0x2b70: jmp qword ptr [rip+0x217302]
0x2b80: jmp qword ptr [rip+0x2172fa]
0x2b90: jmp qword ptr [rip+0x2172f2]
0x2bb0: jmp qword ptr [rip+0x2172e2]
0x2bd0: jmp qword ptr [rip+0x2172d2]
0x2be0: jmp qword ptr [rip+0x2172ca]
0x2c10: jmp qword ptr [rip+0x2172b2]
0x2c30: jmp qword ptr [rip+0x2172a2]
0x2c40: jmp qword ptr [rip+0x21729a]
0x2c80: jmp qword ptr [rip+0x21727a]
0x2cc0: jmp qword ptr [rip+0x21725a]
0x2ce0: jmp qword ptr [rip+0x21724a]
0x2d00: jmp qword ptr [rip+0x21723a]
0x2d20: jmp qword ptr [rip+0x21722a]
0x2d40: jmp qword ptr [rip+0x21721a]
0x2d60: jmp qword ptr [rip+0x21720a]
0x2d80: jmp qword ptr [rip+0x2171fa]
0x2dc0: jmp qword ptr [rip+0x2171da]
0x2dd0: jmp qword ptr [rip+0x2171d2]
0x2de0: jmp qword ptr [rip+0x2171ca]
0x2e00: jmp qword ptr [rip+0x2171ba]
0x2e18: jmp qword ptr [rip+0x2171d2]
0x2e69: nop dword ptr [rax]
0x33c1: cmp dword ptr [rsp+0x68],0x2
0x33c6: je 0x357b
0x33cc: lea rsi,[rip+0xf6ea]
0x33d3: xor edi,edi
0x33d5: mov edx,0x5
0x33da: call 0x28e0
0x33df: mov rsi,qword ptr [rsp+0x8]
0x33e4: mov rdi,rax
0x33e7: call 0xb200
0x3428: test al,al
0x342a: jne 0x351b
0x3430: mov byte ptr [rsp+0x55],0x0
0x3435: cmp qword ptr [rsp+0x20],0x0
0x343b: jne 0x3643
0x3473: xor eax,0x1
0x3476: mov rcx,qword ptr [rsp+0x118]
0x347e: xor rcx,qword ptr fs:0x28
0x3487: movzx eax,al
0x348a: jne 0x361a
0x3490: add rsp,0x128
0x3497: pop rbx
0x3498: pop rbp
0x3499: pop r12
0x349b: pop r13
0x349d: pop r14
0x349f: pop r15
0x34a1: ret 
0x34a2: cmp byte ptr [rsp+0x5c],0x0
0x34a7: je 0x33ab
0x34ad: mov edx,0x5
0x34b2: lea rsi,[rip+0x110f7]
0x34b9: jmp 0x35d7
0x34be: cmp byte ptr [rsp+0x1d],0x0
0x34c3: mov byte ptr [rsp+0x5d],0x0
0x34c8: jne 0x35cb
0x34db: cmp dword ptr [rsp+0x3c],0x2
0x34e0: je 0x33ec
0x34e6: mov edx,0x5
0x34eb: lea rsi,[rip+0x1112e]
0x34f2: jmp 0x35d7
0x34fe: cmp byte ptr [rsp+0x47],0x0
0x3503: jne 0x3564
0x3505: mov dword ptr [rsp+0x34],0x2
0x350d: movzx eax,byte ptr [rsp+0x1f]
0x3512: mov byte ptr [rsp+0x44],al
0x3516: jmp 0x3410
0x351b: cmp byte ptr [rsp+0x55],0x0
0x3520: je 0x3555
0x3522: lea rsi,[rip+0x11127]
0x3529: mov edx,0x5
0x352e: xor edi,edi
0x3530: call 0x28e0
0x3535: xor esi,esi
0x3537: mov rdx,rax
0x353a: mov edi,0x1
0x353f: xor eax,eax
0x3541: call 0x2cb0
0x354d: test al,al
0x354f: je 0x3441
0x3555: cmp byte ptr [rip+0x216bf6],0x0
0x355c: jne 0x3435
0x3562: jmp 0x35a0
0x357b: cmp dword ptr [rsp+0x3c],0x2
0x3580: je 0x33cc
0x3586: jmp 0x34e6
0x3593: cmp byte ptr [rip+0x216bb8],0x0
0x359a: jne 0x3441
0x35a0: lea rsi,[rip+0x110d9]
0x35a7: mov edx,0x5
0x35ac: xor edi,edi
0x35ae: call 0x28e0
0x35b3: xor esi,esi
0x35b5: mov rdx,rax
0x35b8: mov edi,0x1
0x35bd: xor eax,eax
0x35bf: call 0x2cb0
0x35c4: xor edi,edi
0x35c6: call 0x4220
0x35cb: lea rsi,[rip+0x1100e]
0x35d2: mov edx,0x5
0x35d7: xor edi,edi
0x35d9: call 0x28e0
0x35de: xor esi,esi
0x35e0: mov rdx,rax
0x35e3: xor edi,edi
0x35e5: xor eax,eax
0x35e7: call 0x2cb0
0x35f6: lea rsi,[rip+0x10f43]
0x35fd: mov edx,0x5
0x3602: xor edi,edi
0x3604: call 0x28e0
0x3609: xor esi,esi
0x360b: mov rdx,rax
0x360e: mov edi,0x1
0x3613: xor eax,eax
0x3615: call 0x2cb0
0x361a: call 0x2930
0x361f: lea rsi,[rip+0x110da]
0x3626: mov edx,0x5
0x362b: xor edi,edi
0x362d: call 0x28e0
0x3632: xor esi,esi
0x3634: mov rdx,rax
0x3637: mov edi,0x1
0x363c: xor eax,eax
0x363e: call 0x2cb0
0x3643: call 0x2770
0x3648: mov rdi,qword ptr [rsp+0x20]
0x364d: mov dword ptr [rax],0x5f
0x3653: mov rbx,rax
0x3656: call 0xed80
0x365b: lea rsi,[rip+0x11066]
0x3662: mov edx,0x5
0x3667: xor edi,edi
0x3669: mov rbp,rax
0x366c: call 0x28e0
0x3671: mov esi,dword ptr [rbx]
0x3673: mov rdx,rax
0x3676: mov rcx,rbp
0x3679: mov edi,0x1
0x367e: xor eax,eax
0x3680: call 0x2cb0
0x3685: mov rsi,qword ptr [rip+0x216a34]
0x368c: mov edi,0x4
0x3691: call 0xeab0
0x3696: lea rsi,[rip+0xf260]
0x369d: mov edx,0x5
0x36a2: xor edi,edi
0x36a4: mov rbp,rax
0x36a7: call 0x28e0
0x36ac: mov rbx,rax
0x36af: call 0x2770
0x36b4: mov esi,dword ptr [rax]
0x36b6: mov rcx,rbp
0x36b9: mov rdx,rbx
0x36bc: mov edi,0x1
0x36c1: xor eax,eax
0x36c3: call 0x2cb0
0x36c8: nop dword ptr [rax+rax]
0x36fa: hlt 
0x36fb: nop dword ptr [rax+rax]
0x3700: lea rdi,[rip+0x216999]
0x3707: push rbp
0x3708: lea rax,[rip+0x216991]
0x370f: cmp rax,rdi
0x3712: mov rbp,rsp
0x3715: je 0x3730
0x3717: mov rax,qword ptr [rip+0x2168b2]
0x371e: test rax,rax
0x3721: je 0x3730
0x3723: pop rbp
0x3724: jmp rax
0x3730: pop rbp
0x3731: ret 
0x3740: lea rdi,[rip+0x216959]
0x3747: lea rsi,[rip+0x216952]
0x374e: push rbp
0x374f: sub rsi,rdi
0x3752: mov rbp,rsp
0x3755: sar rsi,0x3
0x3759: mov rax,rsi
0x375c: shr rax,0x3f
0x3760: add rsi,rax
0x3763: sar rsi, 1
0x3766: je 0x3780
0x3768: mov rax,qword ptr [rip+0x216879]
0x376f: test rax,rax
0x3772: je 0x3780
0x3774: pop rbp
0x3775: jmp rax
0x3780: pop rbp
0x3781: ret 
0x37a1: push rbp
0x37a2: mov rbp,rsp
0x37a5: je 0x37b3
0x37a7: mov rdi,qword ptr [rip+0x21685a]
0x37ae: call 0x2e18
0x37b3: call 0x3700
0x37b8: mov byte ptr [rip+0x216929],0x1
0x37bf: pop rbp
0x37c0: ret 
0x37d0: push rbp
0x37d1: mov rbp,rsp
0x37d4: pop rbp
0x37d5: jmp 0x3740
0x37e0: push r15
0x37e2: push r14
0x37e4: lea r14,[rip+0xf0f9]
0x37eb: push r13
0x37ed: push r12
0x37ef: mov r12d,edx
0x37f2: push rbp
0x37f3: push rbx
0x37f4: mov rbp,rsi
0x37f7: mov ebx,edx
0x37f9: lea r13,[rip+0xf850]
0x3800: sub rsp,0x18
0x3804: call 0x11250
0x3809: mov r15,rax
0x380c: mov qword ptr [rsp+0x8],rax
0x3811: lea rax,[rip+0xf0d7]
0x3818: test r12b,r12b
0x381b: lea r12,[rip+0xf3de]
0x3822: cmovne rax,r14
0x3826: mov qword ptr [rsp],rax
0x382a: nop word ptr [rax+rax]
0x3830: mov esi,0x2c
0x3835: mov rdi,r15
0x3838: xor r14d,r14d
0x383b: call 0x2970
0x3840: test rax,rax
0x3843: je 0x384c
0x3845: lea r14,[rax+0x1]
0x3849: mov byte ptr [rax],0x0
0x384c: mov r9,qword ptr [rip+0x2167d5]
0x3853: mov rdi,qword ptr [rsp]
0x3857: lea rcx,[rip+0xf7f2]
0x385e: lea rdx,[rip+0x215cdb]
0x3865: mov r8d,0x4
0x386b: mov rsi,r15
0x386e: call 0xaa40
0x3873: cmp dword ptr [r13+rax*4],0x6
0x3879: ja 0x391d
0x387f: mov eax,dword ptr [r13+rax*4]
0x3884: movsxd rax,dword ptr [r12+rax*4]
0x3888: add rax,r12
0x388b: jmp rax
0x391d: call 0x2760
0x3922: nop dword ptr [rax]
0x3926: nop word ptr cs:[rax+rax]
0x39a2: mov dword ptr [rbx+0x18],0x0
0x39a9: xor eax,eax
0x39ab: jmp 0x396c
0x39ad: mov eax,0x1
0x39b2: jmp 0x396c
0x39c9: lea rsi,[rip+0xef2d]
0x39d0: mov rbx,rax
0x39d3: mov edx,0x5
0x39d8: xor edi,edi
0x39da: call 0x28e0
0x39df: mov rcx,rbx
0x39e2: mov rdx,rax
0x39e5: mov esi,r12d
0x39e8: mov edi,0x1
0x39ed: xor eax,eax
0x39ef: call 0x2cb0
0x39f4: nop 
0x39f6: nop word ptr cs:[rax+rax]
0x3cce: mov r14d,esi
0x3cd1: and r14d,0x3f
0x3cd5: mov eax,r14d
0x3cd8: xor eax,0xfff
0x3daa: jmp 0x3b80
0x3de4: lea rsi,[rip+0xf2a5]
0x3deb: mov edx,0x5
0x3df0: xor edi,edi
0x3df2: mov rbx,rax
0x3df5: call 0x28e0
0x3dfa: mov r8d,dword ptr [rbp-0x170]
0x3e01: mov rdx,rax
0x3e04: mov rcx,rbx
0x3e07: xor eax,eax
0x3e09: xor edi,edi
0x3e0b: mov esi,r8d
0x3e0e: call 0x2cb0
0x3e13: xor eax,eax
0x3e15: jmp 0x3ea1
0x3e27: mov r14d,esi
0x3e2a: and r14d,0x12
0x3e2e: mov eax,r14d
0x3e31: xor eax,0xfff
0x3e36: jmp 0x3cdd
0x3ed0: lea rsi,[rip+0xf1d9]
0x3ed7: mov rbx,rax
0x3eda: mov edx,0x5
0x3edf: xor edi,edi
0x3ee1: call 0x28e0
0x3ee6: mov rcx,rbx
0x3ee9: mov rdx,rax
0x3eec: xor esi,esi
0x3eee: xor eax,eax
0x3ef0: xor edi,edi
0x3ef2: call 0x2cb0
0x3ef7: xor eax,eax
0x3ef9: jmp 0x3ea1
0x3f00: call 0x5a50
0x3f05: mov esi,dword ptr [rbp-0x148]
0x3f0b: not eax
0x3f0d: and r14d,eax
0x3f10: mov edx,esi
0x3f12: mov eax,esi
0x3f14: not edx
0x3f16: test edx,r14d
0x3f19: jne 0x3d67
0x3f1f: jmp 0x3d57
0x3f41: lea rsi,[rip+0xe9c9]
0x3f48: mov r12,rax
0x3f4b: mov edx,0x5
0x3f50: xor edi,edi
0x3f52: call 0x28e0
0x3f57: mov rbx,rax
0x3f5a: call 0x2770
0x3f5f: mov esi,dword ptr [rax]
0x3f61: mov rcx,r12
0x3f64: xor eax,eax
0x3f66: mov rdx,rbx
0x3f69: xor edi,edi
0x3f6b: call 0x2cb0
0x3f70: xor eax,eax
0x3f72: jmp 0x3ea1
0x3f8c: mov edx,0x5
0x3f91: mov r12,rax
0x3f94: lea rsi,[rip+0xf0f5]
0x3f9b: jmp 0x3f50
0x3faa: mov edx,0x5
0x3faf: mov r12,rax
0x3fb2: lea rsi,[rip+0xe971]
0x3fb9: jmp 0x3f50
0x3fc0: push rbp
0x3fc1: mov rbp,rsp
0x3fc4: push r15
0x3fc6: push r14
0x3fc8: push r13
0x3fca: push r12
0x3fcc: mov r14,rsi
0x3fcf: push rbx
0x3fd0: mov r12,rdi
0x3fd3: mov rbx,rdx
0x3fd6: mov r13,rcx
0x3fd9: sub rsp,0x48
0x3fdd: mov rax,qword ptr fs:0x28
0x3fe6: mov qword ptr [rbp-0x38],rax
0x3fea: xor eax,eax
0x3fec: call 0x2900
0x3ff1: lea rdx,[rax+0x1]
0x3ff5: add rax,0x1f
0x3ff9: mov rsi,r12
0x3ffc: and rax,-0x10
0x4000: sub rsp,rax
0x4003: lea rdi,[rsp+0xf]
0x4008: and rdi,-0x10
0x400c: call 0x2b60
0x4011: mov r12,rax
0x4014: add rax,r14
0x4017: test rbx,rbx
0x401a: mov qword ptr [rbp-0x68],rax
0x401e: je 0x41d0
0x4024: lea r15,[rbp-0x60]
0x4028: jmp 0x4072
0x4030: cmp byte ptr [r13+0x1d],0x0
0x4035: jne 0x4100
0x403b: movzx r14d,byte ptr [r13+0x1e]
0x4040: test r14b,r14b
0x4043: jne 0x4150
0x4049: cmp byte ptr [rbx+0x90],0x0
0x4050: jne 0x4178
0x4056: mov rax,qword ptr [rbx+0x98]
0x405d: mov byte ptr [r12+rax],0x2f
0x4062: mov rbx,qword ptr [rbx+0xa0]
0x4069: test rbx,rbx
0x406c: je 0x41d0
0x4072: cmp byte ptr [r13+0x1f],0x0
0x4077: mov rax,qword ptr [rbx+0x98]
0x407e: mov byte ptr [r12+rax],0x0
0x4083: je 0x4030
0x4085: mov rax,qword ptr [rbx+0x50]
0x4089: mov rdx,qword ptr [rbx+0x48]
0x408d: mov rsi,r15
0x4090: mov rdi,r12
0x4093: mov qword ptr [rbp-0x60],rdx
0x4097: mov qword ptr [rbp-0x58],rax
0x409b: mov rdx,qword ptr [rbx+0x58]
0x409f: mov rax,qword ptr [rbx+0x60]
0x40a3: mov qword ptr [rbp-0x50],rdx
0x40a7: mov qword ptr [rbp-0x48],rax
0x40ab: call 0x10750
0x40b0: test eax,eax
0x40b2: je 0x4030
0x40b8: mov rsi,r12
0x40bb: mov edi,0x4
0x40c0: xor r14d,r14d
0x40c3: call 0xeab0
0x40c8: lea rsi,[rip+0xf009]
0x40cf: mov edx,0x5
0x40d4: xor edi,edi
0x40d6: mov r12,rax
0x40d9: call 0x28e0
0x40de: mov rbx,rax
0x40e1: call 0x2770
0x40e6: mov esi,dword ptr [rax]
0x40e8: mov rcx,r12
0x40eb: mov rdx,rbx
0x40ee: xor edi,edi
0x40f0: xor eax,eax
0x40f2: call 0x2cb0
0x40f7: jmp 0x41d6
0x4100: mov edx,dword ptr [rbx+0x20]
0x4103: mov esi,dword ptr [rbx+0x1c]
0x4106: mov rdi,r12
0x4109: call 0x2c00
0x410e: test eax,eax
0x4110: je 0x403b
0x4116: mov rdi,r13
0x4119: call 0x5810
0x411e: test al,al
0x4120: mov r14d,eax
0x4123: je 0x41f7
0x4129: mov edx,dword ptr [rbx+0x20]
0x412c: mov esi,0xffffffff
0x4131: mov rdi,r12
0x4134: call 0x2c00
0x4139: movzx r14d,byte ptr [r13+0x1e]
0x413e: test r14b,r14b
0x4141: je 0x4049
0x4147: nop word ptr [rax+rax]
0x4150: mov r8d,dword ptr [rbx+0x18]
0x4154: mov rdi,qword ptr [rbp-0x68]
0x4158: mov ecx,0xffffffff
0x415d: mov rdx,r12
0x4160: mov esi,ecx
0x4162: call 0xa5a0
0x4167: test eax,eax
0x4169: je 0x4056
0x416f: xor r14d,r14d
0x4172: jmp 0x41d6
0x4178: mov esi,dword ptr [rbx+0x18]
0x417b: mov rdi,r12
0x417e: call 0x2c90
0x4183: test eax,eax
0x4185: je 0x4056
0x418b: mov rsi,r12
0x418e: mov edi,0x4
0x4193: call 0xeab0
0x4198: lea rsi,[rip+0xef81]
0x419f: mov r12,rax
0x41a2: mov edx,0x5
0x41a7: xor edi,edi
0x41a9: call 0x28e0
0x41ae: mov rbx,rax
0x41b1: call 0x2770
0x41b6: mov esi,dword ptr [rax]
0x41b8: mov rcx,r12
0x41bb: mov rdx,rbx
0x41be: xor edi,edi
0x41c0: xor eax,eax
0x41c2: call 0x2cb0
0x41c7: jmp 0x41d6
0x41d0: mov r14d,0x1
0x41d6: mov rcx,qword ptr [rbp-0x38]
0x41da: xor rcx,qword ptr fs:0x28
0x41e3: mov eax,r14d
0x41e6: jne 0x4215
0x41e8: lea rsp,[rbp-0x28]
0x41ec: pop rbx
0x41ed: pop r12
0x41ef: pop r13
0x41f1: pop r14
0x41f3: pop r15
0x41f5: pop rbp
0x41f6: ret 
0x41f7: mov rsi,r12
0x41fa: mov edi,0x4
0x41ff: call 0xeab0
0x4204: mov edx,0x5
0x4209: mov r12,rax
0x420c: lea rsi,[rip+0xeee5]
0x4213: jmp 0x41a7
0x4215: call 0x2930
0x421a: nop word ptr [rax+rax]
0x427d: lea rsi,[rip+0xeeec]
0x4284: xor edi,edi
0x4286: call 0x28e0
0x428b: mov r8,rbx
0x428e: mov rcx,rbx
0x4291: mov rdx,rbx
0x4294: mov rsi,rax
0x4297: mov edi,0x1
0x429c: xor eax,eax
0x429e: call 0x2c60
0x42a3: mov rbx,qword ptr [rip+0x215dfe]
0x42aa: lea rsi,[rip+0xef3f]
0x42b1: mov edx,0x5
0x42b6: xor edi,edi
0x42b8: call 0x28e0
0x42bd: mov rsi,rbx
0x42c0: mov rdi,rax
0x42c3: call 0x2ab0
0x42c8: mov rbx,qword ptr [rip+0x215dd9]
0x42cf: lea rsi,[rip+0xef5a]
0x42d6: mov edx,0x5
0x42db: xor edi,edi
0x42dd: call 0x28e0
0x42e2: mov rsi,rbx
0x42e5: mov rdi,rax
0x42e8: call 0x2ab0
0x42ed: mov rbx,qword ptr [rip+0x215db4]
0x42f4: lea rsi,[rip+0xef85]
0x42fb: mov edx,0x5
0x4300: xor edi,edi
0x4302: call 0x28e0
0x4307: mov rsi,rbx
0x430a: mov rdi,rax
0x430d: call 0x2ab0
0x4312: mov rbx,qword ptr [rip+0x215d8f]
0x4319: lea rsi,[rip+0xf120]
0x4320: mov edx,0x5
0x4325: xor edi,edi
0x4327: call 0x28e0
0x432c: mov rsi,rbx
0x432f: mov rdi,rax
0x4332: call 0x2ab0
0x4337: mov rbx,qword ptr [rip+0x215d6a]
0x433e: lea rsi,[rip+0xf2ab]
0x4345: mov edx,0x5
0x434a: xor edi,edi
0x434c: call 0x28e0
0x4351: mov rsi,rbx
0x4354: mov rdi,rax
0x4357: call 0x2ab0
0x435c: mov rbx,qword ptr [rip+0x215d45]
0x4363: lea rsi,[rip+0xf316]
0x436a: mov edx,0x5
0x436f: xor edi,edi
0x4371: call 0x28e0
0x4376: mov rsi,rbx
0x4379: mov rdi,rax
0x437c: call 0x2ab0
0x4381: mov rbx,qword ptr [rip+0x215d20]
0x4388: lea rsi,[rip+0xf3c1]
0x438f: mov edx,0x5
0x4394: xor edi,edi
0x4396: call 0x28e0
0x439b: mov rsi,rbx
0x439e: mov rdi,rax
0x43a1: call 0x2ab0
0x43a6: mov rbx,qword ptr [rip+0x215cfb]
0x43ad: lea rsi,[rip+0xf4f4]
0x43b4: mov edx,0x5
0x43b9: xor edi,edi
0x43bb: call 0x28e0
0x43c0: mov rsi,rbx
0x43c3: mov rdi,rax
0x43c6: call 0x2ab0
0x43cb: mov rbx,qword ptr [rip+0x215cd6]
0x43d2: lea rsi,[rip+0xf567]
0x43d9: mov edx,0x5
0x43de: xor edi,edi
0x43e0: call 0x28e0
0x43e5: mov rsi,rbx
0x43e8: mov rdi,rax
0x43eb: call 0x2ab0
0x43f0: mov rbx,qword ptr [rip+0x215cb1]
0x43f7: lea rsi,[rip+0xf662]
0x43fe: mov edx,0x5
0x4403: xor edi,edi
0x4405: call 0x28e0
0x440a: mov rsi,rbx
0x440d: mov rdi,rax
0x4410: call 0x2ab0
0x4415: mov rbx,qword ptr [rip+0x215c8c]
0x441c: lea rsi,[rip+0xf705]
0x4423: mov edx,0x5
0x4428: xor edi,edi
0x442a: call 0x28e0
0x442f: mov rsi,rbx
0x4432: mov rdi,rax
0x4435: call 0x2ab0
0x443a: mov rbx,qword ptr [rip+0x215c67]
0x4441: lea rsi,[rip+0xf7f0]
0x4448: mov edx,0x5
0x444d: xor edi,edi
0x444f: call 0x28e0
0x4454: mov rsi,rbx
0x4457: mov rdi,rax
0x445a: call 0x2ab0
0x445f: mov rbx,qword ptr [rip+0x215c42]
0x4466: lea rsi,[rip+0xf90b]
0x446d: mov edx,0x5
0x4472: xor edi,edi
0x4474: call 0x28e0
0x4479: mov rsi,rbx
0x447c: mov rdi,rax
0x447f: call 0x2ab0
0x4484: mov rbx,qword ptr [rip+0x215c1d]
0x448b: lea rsi,[rip+0xf9fe]
0x4492: mov edx,0x5
0x4497: xor edi,edi
0x4499: call 0x28e0
0x449e: mov rsi,rbx
0x44a1: mov rdi,rax
0x44a4: call 0x2ab0
0x44a9: mov rbx,qword ptr [rip+0x215bf8]
0x44b0: lea rsi,[rip+0xfa09]
0x44b7: mov edx,0x5
0x44bc: xor edi,edi
0x44be: call 0x28e0
0x44c3: mov rsi,rbx
0x44c6: mov rdi,rax
0x44c9: call 0x2ab0
0x44ce: mov rbx,qword ptr [rip+0x215bd3]
0x44d5: lea rsi,[rip+0xfa1c]
0x44dc: mov edx,0x5
0x44e1: xor edi,edi
0x44e3: call 0x28e0
0x44e8: mov rsi,rbx
0x44eb: mov rdi,rax
0x44ee: call 0x2ab0
0x44f3: mov rbx,qword ptr [rip+0x215bae]
0x44fa: lea rsi,[rip+0xfb5f]
0x4501: mov edx,0x5
0x4506: xor edi,edi
0x4508: call 0x28e0
0x450d: mov rsi,rbx
0x4510: mov rdi,rax
0x4513: call 0x2ab0
0x4518: mov rbx,qword ptr [rip+0x215b89]
0x451f: lea rsi,[rip+0xfc5a]
0x4526: mov edx,0x5
0x452b: xor edi,edi
0x452d: call 0x28e0
0x4532: mov rsi,rbx
0x4535: mov rdi,rax
0x4538: call 0x2ab0
0x453d: mov rbx,qword ptr [rip+0x215b64]
0x4544: lea rsi,[rip+0xfd15]
0x454b: mov edx,0x5
0x4550: xor edi,edi
0x4552: call 0x28e0
0x4557: mov rsi,rbx
0x455a: mov rdi,rax
0x455d: call 0x2ab0
0x4562: mov rbx,qword ptr [rip+0x215b3f]
0x4569: lea rsi,[rip+0xfdd0]
0x4570: mov edx,0x5
0x4575: xor edi,edi
0x4577: call 0x28e0
0x457c: mov rsi,rbx
0x457f: mov rdi,rax
0x4582: lea rbx,[rip+0xe3bc]
0x4589: call 0x2ab0
0x458e: lea rax,[rip+0xe3b3]
0x4595: lea rcx,[rip+0xe3ed]
0x459c: mov qword ptr [rsp+0x60],0x0
0x45a5: mov qword ptr [rsp+0x68],0x0
0x45ae: mov rdx,rsp
0x45b1: mov qword ptr [rsp],rax
0x45b5: lea rax,[rip+0xe38e]
0x45bc: mov qword ptr [rsp+0x30],rcx
0x45c1: lea rcx,[rip+0xe3cb]
0x45c8: mov qword ptr [rsp+0x8],rax
0x45cd: lea rax,[rip+0xe3ee]
0x45d4: mov qword ptr [rsp+0x40],rcx
0x45d9: lea rcx,[rip+0xe3bd]
0x45e0: mov qword ptr [rsp+0x10],rax
0x45e5: lea rax,[rip+0xe36e]
0x45ec: mov qword ptr [rsp+0x50],rcx
0x45f1: mov qword ptr [rsp+0x18],rax
0x45f6: lea rax,[rip+0xe373]
0x45fd: mov qword ptr [rsp+0x20],rax
0x4602: lea rax,[rip+0xe371]
0x4609: mov qword ptr [rsp+0x28],rax
0x460e: mov qword ptr [rsp+0x38],rax
0x4613: mov qword ptr [rsp+0x48],rax
0x4618: mov qword ptr [rsp+0x58],rax
0x461d: nop dword ptr [rax]
0x4620: add rdx,0x10
0x4624: mov rdi,qword ptr [rdx]
0x4627: test rdi,rdi
0x462a: je 0x463f
0x462c: mov ecx,0x3
0x4631: mov rsi,rbx
0x4634: rep cmpsb [rsi],es:[rdi]
0x4636: seta al
0x4639: sbb al,0x0
0x463b: test al,al
0x463d: jne 0x4620
0x463f: mov r12,qword ptr [rdx+0x8]
0x4643: xor edi,edi
0x4645: mov edx,0x5
0x464a: lea rsi,[rip+0xe356]
0x4651: test r12,r12
0x4654: je 0x471b
0x465a: call 0x28e0
0x465f: lea rcx,[rip+0xfd82]
0x4666: lea rdx,[rip+0xe351]
0x466d: mov rsi,rax
0x4670: mov edi,0x1
0x4675: xor eax,eax
0x4677: call 0x2c60
0x467c: xor esi,esi
0x467e: mov edi,0x5
0x4683: call 0x2c50
0x4688: test rax,rax
0x468b: je 0x46a9
0x468d: lea rsi,[rip+0xe338]
0x4694: mov edx,0x3
0x4699: mov rdi,rax
0x469c: call 0x2790
0x46a1: test eax,eax
0x46a3: jne 0x47b0
0x46a9: lea rsi,[rip+0xe320]
0x46b0: xor edi,edi
0x46b2: mov edx,0x5
0x46b7: call 0x28e0
0x46bc: lea rcx,[rip+0xe282]
0x46c3: lea rdx,[rip+0xfd1e]
0x46ca: mov rsi,rax
0x46cd: mov edi,0x1
0x46d2: xor eax,eax
0x46d4: call 0x2c60
0x46d9: cmp r12,rbx
0x46dc: lea rcx,[rip+0xe281]
0x46e3: lea rbx,[rip+0x1095c]
0x46ea: cmove rbx,rcx
0x46ee: lea rsi,[rip+0xfd63]
0x46f5: xor edi,edi
0x46f7: mov edx,0x5
0x46fc: call 0x28e0
0x4701: mov rcx,rbx
0x4704: mov rsi,rax
0x4707: mov rdx,r12
0x470a: mov edi,0x1
0x470f: xor eax,eax
0x4711: call 0x2c60
0x4716: jmp 0x4276
0x471b: call 0x28e0
0x4720: lea rcx,[rip+0xfcc1]
0x4727: lea rdx,[rip+0xe290]
0x472e: mov rsi,rax
0x4731: mov edi,0x1
0x4736: xor eax,eax
0x4738: call 0x2c60
0x473d: xor esi,esi
0x473f: mov edi,0x5
0x4744: call 0x2c50
0x4749: test rax,rax
0x474c: je 0x4766
0x474e: lea rsi,[rip+0xe277]
0x4755: mov edx,0x3
0x475a: mov rdi,rax
0x475d: call 0x2790
0x4762: test eax,eax
0x4764: jne 0x47a9
0x4766: lea rsi,[rip+0xe263]
0x476d: mov edx,0x5
0x4772: xor edi,edi
0x4774: lea r12,[rip+0xe1ca]
0x477b: lea rbx,[rip+0xe1e2]
0x4782: call 0x28e0
0x4787: lea rcx,[rip+0xe1b7]
0x478e: lea rdx,[rip+0xfc53]
0x4795: mov rsi,rax
0x4798: mov edi,0x1
0x479d: xor eax,eax
0x479f: call 0x2c60
0x47a4: jmp 0x46ee
0x47a9: lea r12,[rip+0xe195]
0x47b0: mov r13,qword ptr [rip+0x2158f1]
0x47b7: lea rsi,[rip+0xfc52]
0x47be: xor edi,edi
0x47c0: mov edx,0x5
0x47c5: call 0x28e0
0x47ca: mov rsi,r13
0x47cd: mov rdi,rax
0x47d0: call 0x2ab0
0x47d5: jmp 0x46a9
0x483f: cmp qword ptr [rbp-0xf8],0x0
0x4847: jne 0x4c6f
0x484d: cmp r12d,0x2
0x4851: jg 0x4c30
0x4857: mov rdi,qword ptr [rbx+r12*8-0x8]
0x485c: lea rdx,[rbp-0xe2]
0x4863: lea rsi,[rbp-0xd0]
0x486a: movzx ecx,al
0x486d: call 0x3930
0x488d: mov r13d,dword ptr [r14]
0x4890: test r13d,r13d
0x4893: je 0x48f4
0x4895: mov rsi,rbx
0x4898: mov rdi,r12
0x489b: call 0x2af0
0x48a0: test eax,eax
0x48a2: jne 0x48f4
0x48a4: cmp byte ptr [rbp-0xe2],0x0
0x48ab: jne 0x48f4
0x48ad: mov eax,dword ptr [rbp-0xb8]
0x48b3: and eax,0xf000
0x48b8: cmp eax,0x8000
0x48bd: jne 0x48f4
0x48bf: mov rsi,rbx
0x48c2: mov edi,0xffffff9c
0x48c7: mov edx,r13d
0x48ca: call 0xb1c0
0x48cf: mov rsi,r14
0x48d2: lea r14,[rip+0x215827]
0x48d9: lea rdi,[rip+0x215820]
0x48e0: mov ecx,0x14
0x48e5: mov rbx,rax
0x48e8: rep movxd es:[rdi],[rsi]
0x48ea: mov dword ptr [rip+0x21580c],0x0
0x490e: mov r15d,eax
0x4911: mov rcx,qword ptr [rbp-0x38]
0x4915: xor rcx,qword ptr fs:0x28
0x491e: mov eax,r15d
0x4921: jne 0x4cb7
0x4927: lea rsp,[rbp-0x28]
0x492b: pop rbx
0x492c: pop r12
0x492e: pop r13
0x4930: pop r14
0x4932: pop r15
0x4934: pop rbp
0x4935: ret 
0x4a11: test al,al
0x4a13: jne 0x4ad7
0x4a19: movzx eax,byte ptr [rip+0x215731]
0x4a20: xor r15d,r15d
0x4a23: test al,al
0x4a25: jne 0x4b4b
0x4a2b: mov rdi,r12
0x4a2e: add rbx,0x8
0x4a32: call 0x2e10
0x4a37: cmp qword ptr [rbp-0x100],rbx
0x4a3e: je 0x4911
0x4af6: and r15d,eax
0x4af9: cmp byte ptr [rip+0x215651],0x0
0x4b00: je 0x4a2b
0x4b06: mov rsi,qword ptr [rbp-0xd8]
0x4b0d: mov rdx,qword ptr [rbp-0xe0]
0x4b14: mov rcx,r14
0x4b17: mov rdi,r12
0x4b1a: sub rsi,r12
0x4b1d: call 0x3fc0
0x4b22: and r15d,eax
0x4b25: movzx eax,byte ptr [rip+0x215625]
0x4b2c: jmp 0x4a23
0x4b38: mov rax,qword ptr [rdi+0xa0]
0x4b3f: mov qword ptr [rbp-0xe0],rax
0x4b46: call 0x2e10
0x4b4b: mov rdi,qword ptr [rbp-0xe0]
0x4b52: test rdi,rdi
0x4b55: jne 0x4b38
0x4b57: jmp 0x4a2b
0x4be6: lea rsi,[rip+0xde2e]
0x4bed: mov rbx,rax
0x4bf0: mov edx,0x5
0x4bf5: xor edi,edi
0x4bf7: call 0x28e0
0x4bfc: mov rcx,rbx
0x4bff: mov rdx,rax
0x4c02: xor esi,esi
0x4c04: mov edi,0x1
0x4c09: xor eax,eax
0x4c0b: call 0x2cb0
0x4c30: mov rsi,qword ptr [rsi+0x10]
0x4c34: mov edi,0x4
0x4c39: call 0xeab0
0x4c3e: lea rsi,[rip+0xddc5]
0x4c45: mov rbx,rax
0x4c48: mov edx,0x5
0x4c4d: xor edi,edi
0x4c4f: call 0x28e0
0x4c54: mov rcx,rbx
0x4c57: mov rdx,rax
0x4c5a: xor esi,esi
0x4c5c: xor edi,edi
0x4c5e: xor eax,eax
0x4c60: call 0x2cb0
0x4c65: mov edi,0x1
0x4c6a: call 0x4220
0x4c6f: lea rsi,[rip+0xf84a]
0x4c76: mov edx,0x5
0x4c7b: xor edi,edi
0x4c7d: call 0x28e0
0x4c82: xor esi,esi
0x4c84: mov rdx,rax
0x4c87: mov edi,0x1
0x4c8c: xor eax,eax
0x4c8e: call 0x2cb0
0x4ca6: mov edx,0x5
0x4cab: mov rbx,rax
0x4cae: lea rsi,[rip+0xf7db]
0x4cb5: jmp 0x4c4d
0x4cb7: call 0x2930
0x4cdd: jmp 0x4c65
0x4cf0: and esi,0xf000
0x4cf6: cmp esi,0xa000
0x4cfc: je 0x4d18
0x4cfe: push rbx
0x4cff: mov rbx,rdi
0x4d02: call 0x10fe0
0x4d07: test al,al
0x4d09: je 0x4d20
0x4d0b: mov eax,0x1
0x4d10: pop rbx
0x4d11: ret 
0x4d18: mov eax,0x1
0x4d1d: ret 
0x4d20: mov rdi,rbx
0x4d23: mov esi,0x2
0x4d28: call 0x2d40
0x4d2d: test eax,eax
0x4d2f: sete al
0x4d32: pop rbx
0x4d33: ret 
0x4e30: push r12
0x4e32: push rbp
0x4e33: mov r12,rdi
0x4e36: push rbx
0x4e37: mov edi,0x1
0x4e3c: mov rbx,rdx
0x4e3f: mov rdx,rsi
0x4e42: mov esi,0x4
0x4e47: call 0xe990
0x4e4c: xor edi,edi
0x4e4e: mov rdx,r12
0x4e51: mov esi,0x4
0x4e56: mov rbp,rax
0x4e59: call 0xe990
0x4e5e: lea rsi,[rip+0xff04]
0x4e65: mov rdx,rax
0x4e68: mov rcx,rbp
0x4e6b: xor eax,eax
0x4e6d: mov edi,0x1
0x4e72: call 0x2c60
0x4e77: test rbx,rbx
0x4e7a: je 0x4eb1
0x4e7c: mov rsi,rbx
0x4e7f: mov edi,0x4
0x4e84: call 0xeab0
0x4e89: lea rsi,[rip+0xfee2]
0x4e90: mov rbx,rax
0x4e93: mov edx,0x5
0x4e98: xor edi,edi
0x4e9a: call 0x28e0
0x4e9f: mov rdx,rbx
0x4ea2: mov rsi,rax
0x4ea5: mov edi,0x1
0x4eaa: xor eax,eax
0x4eac: call 0x2c60
0x4eb1: mov rdi,qword ptr [rip+0x2151f0]
0x4eb8: mov rax,qword ptr [rdi+0x28]
0x4ebc: cmp rax,qword ptr [rdi+0x30]
0x4ec0: jae 0x4ed8
0x4ec2: lea rdx,[rax+0x1]
0x4ec6: mov qword ptr [rdi+0x28],rdx
0x4eca: mov byte ptr [rax],0xa
0x4ecd: pop rbx
0x4ece: pop rbp
0x4ecf: pop r12
0x4ed1: ret 
0x4ed8: pop rbx
0x4ed9: pop rbp
0x4eda: pop r12
0x4edc: mov esi,0xa
0x4ee1: jmp 0x2990
0x4ef0: push r13
0x4ef2: push r12
0x4ef4: movzx r9d,dl
0x4ef8: push rbp
0x4ef9: push rbx
0x4efa: mov edx,0xffffff9c
0x4eff: mov r13,rdi
0x4f02: mov r12,rsi
0x4f05: mov ebp,ecx
0x4f07: sub rsp,0x10
0x4f0b: test r8b,r8b
0x4f0e: mov rcx,rsi
0x4f11: setne r8b
0x4f15: push -0x1
0x4f17: mov rsi,rdi
0x4f1a: movzx r8d,r8b
0x4f1e: mov edi,edx
0x4f20: shl r8d,0xa
0x4f24: call 0xa2d0
0x4f29: test eax,eax
0x4f2b: mov ebx,eax
0x4f2d: pop rdx
0x4f2e: pop rcx
0x4f2f: jg 0x4f98
0x4f31: shr ebx,0x1f
0x4f34: and bl,bpl
0x4f37: jne 0x4f50
0x4f39: add rsp,0x8
0x4f3d: mov ebx,0x1
0x4f42: mov eax,ebx
0x4f44: pop rbx
0x4f45: pop rbp
0x4f46: pop r12
0x4f48: pop r13
0x4f4a: ret 
0x4f50: mov rsi,r12
0x4f53: mov edi,0x4
0x4f58: call 0xeab0
0x4f5d: lea rsi,[rip+0xfe1c]
0x4f64: mov rbp,rax
0x4f67: mov edx,0x5
0x4f6c: xor edi,edi
0x4f6e: call 0x28e0
0x4f73: mov rdx,rbp
0x4f76: mov rsi,rax
0x4f79: mov edi,0x1
0x4f7e: xor eax,eax
0x4f80: call 0x2c60
0x4f85: add rsp,0x8
0x4f89: mov eax,ebx
0x4f8b: pop rbx
0x4f8c: pop rbp
0x4f8d: pop r12
0x4f8f: pop r13
0x4f91: ret 
0x4f98: mov rdx,r13
0x4f9b: mov esi,0x4
0x4fa0: mov edi,0x1
0x4fa5: call 0xe990
0x4faa: mov rdx,r12
0x4fad: mov esi,0x4
0x4fb2: xor edi,edi
0x4fb4: mov r13,rax
0x4fb7: call 0xe990
0x4fbc: lea rsi,[rip+0xf7bd]
0x4fc3: mov rbp,rax
0x4fc6: mov edx,0x5
0x4fcb: xor edi,edi
0x4fcd: call 0x28e0
0x4fd2: mov r8,r13
0x4fd5: mov rcx,rbp
0x4fd8: mov rdx,rax
0x4fdb: mov esi,ebx
0x4fdd: xor eax,eax
0x4fdf: xor edi,edi
0x4fe1: call 0x2cb0
0x4fe6: xor ebx,ebx
0x4fe8: add rsp,0x8
0x4fec: mov eax,ebx
0x4fee: pop rbx
0x4fef: pop rbp
0x4ff0: pop r12
0x4ff2: pop r13
0x4ff4: ret 
0x5000: push r14
0x5002: push r13
0x5004: mov r13,rdi
0x5007: push r12
0x5009: push rbp
0x500a: mov rbp,rdx
0x500d: push rbx
0x500e: mov rbx,rsi
0x5011: mov rdi,rbx
0x5014: sub rsp,0x20
0x5018: mov esi,dword ptr [rdx]
0x501a: mov rax,qword ptr fs:0x28
0x5023: mov qword ptr [rsp+0x18],rax
0x5028: xor eax,eax
0x502a: call 0x4cf0
0x502f: test al,al
0x5031: jne 0x50c8
0x5037: mov edi,dword ptr [rbp]
0x503a: lea r12,[rsp+0xc]
0x503f: mov rsi,r12
0x5042: call 0xb820
0x5047: mov ebp,dword ptr [rbp]
0x504a: mov rsi,rbx
0x504d: mov edi,0x4
0x5052: mov byte ptr [rsp+0x16],0x0
0x5057: call 0xeab0
0x505c: and ebp,0xfff
0x5062: cmp byte ptr [r13+0x18],0x0
0x5067: mov r14,rax
0x506a: mov rbx,qword ptr [rip+0x21552f]
0x5071: mov edx,0x5
0x5076: jne 0x5086
0x5078: test dword ptr [r13+0x14],0xffff00
0x5080: je 0x5130
0x5086: lea rsi,[rip+0xf71b]
0x508d: xor edi,edi
0x508f: call 0x28e0
0x5094: mov rdx,rax
0x5097: sub rsp,0x8
0x509b: add r12,0x1
0x509f: mov rdi,qword ptr [rip+0x21503a]
0x50a6: push r12
0x50a8: mov r9,rbp
0x50ab: mov r8,r14
0x50ae: mov rcx,rbx
0x50b1: mov esi,0x1
0x50b6: xor eax,eax
0x50b8: call 0x2db0
0x50bd: pop rax
0x50be: pop rdx
0x50bf: jmp 0x510e
0x50c8: mov rsi,rbx
0x50cb: mov edi,0x4
0x50d0: call 0xeab0
0x50d5: lea rsi,[rip+0xfcb0]
0x50dc: mov rbx,qword ptr [rip+0x2154bd]
0x50e3: mov edx,0x5
0x50e8: xor edi,edi
0x50ea: mov rbp,rax
0x50ed: call 0x28e0
0x50f2: mov rdi,qword ptr [rip+0x214fe7]
0x50f9: mov rdx,rax
0x50fc: mov r8,rbp
0x50ff: mov rcx,rbx
0x5102: mov esi,0x1
0x5107: xor eax,eax
0x5109: call 0x2db0
0x510e: call 0x112b0
0x5113: mov rcx,qword ptr [rsp+0x18]
0x5118: xor rcx,qword ptr fs:0x28
0x5121: jne 0x5146
0x5123: add rsp,0x20
0x5127: pop rbx
0x5128: pop rbp
0x5129: pop r12
0x512b: pop r13
0x512d: pop r14
0x512f: ret 
0x5130: lea rsi,[rip+0xf6a1]
0x5137: xor edi,edi
0x5139: call 0x28e0
0x513e: mov rdx,rax
0x5141: jmp 0x5097
0x5146: call 0x2930
0x514b: nop dword ptr [rax+rax]
0x51b1: lea rsi,[rip+0xfbf7]
0x51b8: mov rbp,rax
0x51bb: mov edx,0x5
0x51c0: xor edi,edi
0x51c2: call 0x28e0
0x51c7: mov rbx,rax
0x51ca: call 0x2770
0x51cf: mov esi,dword ptr [rax]
0x51d1: mov rcx,rbp
0x51d4: mov rdx,rbx
0x51d7: xor eax,eax
0x51d9: xor edi,edi
0x51db: call 0x2cb0
0x51e0: add rsp,0x8
0x51e4: xor eax,eax
0x51e6: pop rbx
0x51e7: pop rbp
0x51e8: pop r12
0x51ea: pop r13
0x51ec: ret 
0x51fd: mov edx,0x5
0x5202: mov rbp,rax
0x5205: lea rsi,[rip+0xfb93]
0x520c: jmp 0x51c0
0x52ee: lea rsi,[rip+0xfad0]
0x52f5: mov edx,0x5
0x52fa: xor edi,edi
0x52fc: mov rbp,rax
0x52ff: call 0x28e0
0x5304: mov esi,dword ptr [rbx]
0x5306: mov rdx,rax
0x5309: mov rcx,rbp
0x530c: xor edi,edi
0x530e: xor eax,eax
0x5310: call 0x2cb0
0x5592: lea rsi,[rip+0xf84e]
0x5599: mov rbx,rax
0x559c: mov edx,0x5
0x55a1: xor edi,edi
0x55a3: call 0x28e0
0x55a8: mov rcx,rbx
0x55ab: mov rdx,rax
0x55ae: xor esi,esi
0x55b0: xor edi,edi
0x55b2: xor eax,eax
0x55b4: call 0x2cb0
0x55b9: jmp 0x5315
0x55df: lea rsi,[rip+0xf7f0]
0x55e6: xor edi,edi
0x55e8: mov edx,0x5
0x55ed: mov rbp,rax
0x55f0: call 0x28e0
0x55f5: mov rbx,rax
0x55f8: call 0x2770
0x55fd: mov esi,dword ptr [rax]
0x55ff: mov rcx,rbp
0x5602: mov rdx,rbx
0x5605: xor edi,edi
0x5607: xor eax,eax
0x5609: call 0x2cb0
0x560e: jmp 0x5315
0x5634: mov r13,rdi
0x5637: call 0x2770
0x563c: cmp byte ptr [rbp+0x23],0x0
0x5640: mov r12,rax
0x5643: jne 0x56c0
0x5645: mov rsi,r13
0x5648: mov edi,0x4
0x564d: mov dword ptr [r12],0x5f
0x5655: call 0xeab0
0x565a: lea rsi,[rip+0xf1af]
0x5661: mov edx,0x5
0x5666: xor edi,edi
0x5668: mov rbx,rax
0x566b: call 0x28e0
0x5670: mov esi,dword ptr [r12]
0x5674: mov rcx,rbx
0x5677: mov rdx,rax
0x567a: xor edi,edi
0x567c: xor eax,eax
0x567e: call 0x2cb0
0x5683: movzx ebx,byte ptr [rbp+0x26]
0x5687: add rsp,0x8
0x568b: xor ebx,0x1
0x568e: mov eax,ebx
0x5690: pop rbx
0x5691: pop rbp
0x5692: pop r12
0x5694: pop r13
0x5696: ret 
0x56c0: movzx ebx,byte ptr [rbp+0x26]
0x56c4: test bl,bl
0x56c6: jne 0x5645
0x56cc: mov dword ptr [rax],0x5f
0x56d2: jmp 0x5687
0x56d8: call 0x2770
0x56dd: mov dword ptr [rax],0x5f
0x56e3: add rsp,0x8
0x56e7: mov eax,ebx
0x56e9: pop rbx
0x56ea: pop rbp
0x56eb: pop r12
0x56ed: pop r13
0x56ef: ret 
0x5723: lea rsi,[rip+0xf10e]
0x572a: mov edx,0x5
0x572f: xor edi,edi
0x5731: mov rbp,rax
0x5734: call 0x28e0
0x5739: mov esi,dword ptr [rbx]
0x573b: mov rcx,rbp
0x573e: mov rdx,rax
0x5741: xor edi,edi
0x5743: xor eax,eax
0x5745: call 0x2cb0
0x574a: pop rbx
0x574b: xor eax,eax
0x574d: pop rbp
0x574e: pop r12
0x5750: ret 
0x59a3: lea rsi,[rip+0xf451]
0x59aa: xor edi,edi
0x59ac: mov edx,0x5
0x59b1: mov r12,rax
0x59b4: call 0x28e0
0x59b9: mov esi,dword ptr [rbx]
0x59bb: mov rdx,rax
0x59be: mov rcx,r12
0x59c1: xor edi,edi
0x59c3: xor eax,eax
0x59c5: call 0x2cb0
0x59ca: jmp 0x5a0c
0x59dd: lea rsi,[rip+0xd714]
0x59e4: mov edx,0x5
0x59e9: xor edi,edi
0x59eb: mov r12,rax
0x59ee: call 0x28e0
0x59f3: mov rbx,rax
0x59f6: call 0x2770
0x59fb: mov esi,dword ptr [rax]
0x59fd: mov rcx,r12
0x5a00: mov rdx,rbx
0x5a03: xor edi,edi
0x5a05: xor eax,eax
0x5a07: call 0x2cb0
0x5b02: test r15d,r15d
0x5b05: js 0x5da0
0x5b0b: mov rax,qword ptr [rbp-0x320]
0x5b12: test r15d,r15d
0x5b15: sete r14b
0x5b19: test rax,rax
0x5b1c: je 0x5b21
0x5b1e: mov byte ptr [rax],r14b
0x5c95: cmp dword ptr [rbx+0x4],0x2
0x5c99: je 0x7010
0x5ca9: mov eax,dword ptr [rbp-0x314]
0x5caf: and eax,0xf000
0x5cb4: cmp eax,0x4000
0x5cb9: je 0x70e0
0x5cbf: xor ecx,ecx
0x5cc1: cmp byte ptr [rbx+0x1f],0x0
0x5cc5: je 0x5ce5
0x5cc7: cmp byte ptr [rbx+0x18],0x0
0x5ccb: mov ecx,0x1
0x5cd0: je 0x5ce5
0x5cd2: xor ecx,ecx
0x5cd4: mov rax,qword ptr [rbp-0x280]
0x5cdb: cmp qword ptr [rbp-0x1f0],rax
0x5ce2: setne cl
0x5ce5: lea r10,[rbp-0x280]
0x5cec: mov rdi,qword ptr [rbp-0x308]
0x5cf3: lea rsi,[rbp-0x1f0]
0x5cfa: mov byte ptr [rbp-0x358],r9b
0x5d01: mov byte ptr [rbp-0x350],r8b
0x5d08: mov rdx,r10
0x5d0b: call 0x10130
0x5d10: test eax,eax
0x5d12: movzx r8d,byte ptr [rbp-0x350]
0x5d1a: movzx r9d,byte ptr [rbp-0x358]
0x5d22: js 0x6c70
0x5d28: mov rax,qword ptr [rbp-0x320]
0x5d2f: test rax,rax
0x5d32: je 0x5d37
0x5d34: mov byte ptr [rax],0x1
0x5d37: mov rdx,qword ptr [rbp-0x280]
0x5d3e: mov rsi,qword ptr [rbp-0x278]
0x5d45: mov rdi,qword ptr [rbp-0x308]
0x5d4c: call 0x9e20
0x5d51: test rax,rax
0x5d54: je 0x62c0
0x5d5a: movzx ecx,byte ptr [rbx+0x2e]
0x5d5e: mov r8d,dword ptr [rbp-0x328]
0x5d65: mov edx,0x1
0x5d6a: mov rsi,qword ptr [rbp-0x308]
0x5d71: mov rdi,rax
0x5d74: call 0x4ef0
0x5d79: test al,al
0x5d7b: jne 0x62c0
0x5d81: cmp byte ptr [rbx+0x25],0x0
0x5d85: jne 0x6b90
0x5d8b: nop dword ptr [rax+rax]
0x5da0: mov edx,0xffffff9c
0x5da5: mov rcx,rsi
0x5da8: mov r8d,0x1
0x5dae: mov rsi,rdi
0x5db1: mov edi,edx
0x5db3: call 0xeda0
0x5db8: test eax,eax
0x5dba: jne 0x6930
0x5dc0: mov rax,qword ptr [rbp-0x320]
0x5dc7: mov r14d,r12d
0x5dca: test rax,rax
0x5dcd: je 0x5dd8
0x5dcf: mov byte ptr [rax],0x1
0x5dd2: nop word ptr [rax+rax]
0x5e83: mov rdx,qword ptr [rbp-0x310]
0x5e8a: xor edi,edi
0x5e8c: mov esi,0x4
0x5e91: mov r13,rax
0x5e94: call 0xe990
0x5e99: lea rsi,[rip+0xeb70]
0x5ea0: mov rbx,rax
0x5ea3: xor edi,edi
0x5ea5: mov edx,0x5
0x5eaa: call 0x28e0
0x5eaf: mov r8,r13
0x5eb2: mov rdx,rax
0x5eb5: mov rcx,rbx
0x5eb8: xor esi,esi
0x5eba: xor edi,edi
0x5ebc: xor eax,eax
0x5ebe: call 0x2cb0
0x5ec3: jmp 0x62c6
0x5ed6: cmp byte ptr [rbx+0x18],0x0
0x5eda: je 0x6490
0x5eef: mov eax,dword ptr [rbp-0x314]
0x5ef5: and eax,0xf000
0x5efa: cmp eax,0x4000
0x5eff: je 0x6ad0
0x5f44: mov r12d,dword ptr [rbx+0x10]
0x5f48: and r12d,0xfff
0x5fc4: cmp byte ptr [rbx+0x16],0x0
0x5fc8: mov edx,0x1
0x5fcd: jne 0x5fd8
0x5fcf: xor edx,edx
0x5fd1: cmp dword ptr [rbx+0x8],0x3
0x5fd5: sete dl
0x5fd8: mov r8d,dword ptr [rbp-0x328]
0x5fdf: mov rsi,qword ptr [rbp-0x308]
0x5fe6: xor ecx,ecx
0x5fe8: mov rdi,qword ptr [rbp-0x310]
0x5fef: call 0x4ef0
0x5ff4: test al,al
0x5ff6: je 0x6a10
0x5ffc: xor r8d,r8d
0x60f7: call 0x10760
0x60fc: test eax,eax
0x60fe: je 0x6158
0x6100: call 0x2770
0x6105: cmp dword ptr [rax],0x26
0x6108: je 0x6158
0x611b: lea rsi,[rip+0xee49]
0x6122: xor edi,edi
0x6124: mov edx,0x5
0x6129: mov r13,rax
0x612c: call 0x28e0
0x6131: mov r15,rax
0x6134: call 0x2770
0x6139: mov esi,dword ptr [rax]
0x613b: xor edi,edi
0x613d: xor eax,eax
0x613f: mov rcx,r13
0x6142: mov rdx,r15
0x6145: call 0x2cb0
0x614a: cmp byte ptr [rbx+0x24],0x0
0x614e: jne 0x5d90
0x6154: nop dword ptr [rax]
0x623b: lea rsi,[rip+0xed41]
0x6242: mov edx,0x5
0x6247: xor edi,edi
0x6249: mov r14,rax
0x624c: call 0x28e0
0x6251: mov r13,rax
0x6254: call 0x2770
0x6259: mov esi,dword ptr [rax]
0x625b: mov rcx,r14
0x625e: mov rdx,r13
0x6261: xor edi,edi
0x6263: xor eax,eax
0x6265: call 0x2cb0
0x628a: cmp byte ptr [rbx+0x2e],0x0
0x628e: jne 0x6e10
0x6294: cmp byte ptr [rbx+0x21],0x0
0x6298: jne 0x6df0
0x629e: mov rax,qword ptr [rbp-0x320]
0x62a5: test rax,rax
0x62a8: je 0x62ad
0x62aa: mov byte ptr [rax],0x1
0x62ad: test r13b,r13b
0x62b0: je 0x62c0
0x62b2: cmp byte ptr [rbx+0x31],0x0
0x62b6: je 0x6d28
0x62bc: nop dword ptr [rax]
0x636f: lea rsi,[rip+0xeaa1]
0x6376: mov r12,rax
0x6379: mov edx,0x5
0x637e: xor edi,edi
0x6380: call 0x28e0
0x6385: mov rbx,rax
0x6388: call 0x2770
0x638d: mov esi,dword ptr [rax]
0x638f: mov rcx,r12
0x6392: mov rdx,rbx
0x6395: xor edi,edi
0x6397: xor eax,eax
0x6399: xor r12d,r12d
0x639c: call 0x2cb0
0x63a1: jmp 0x62c6
0x63b0: cmp qword ptr [rbp-0x270],0x1
0x63b8: je 0x73e8
0x63be: cmp byte ptr [rbx+0x22],0x0
0x63c2: mov qword ptr [rbp-0x358],0x0
0x63cd: je 0x63d9
0x63cf: cmp byte ptr [rbx+0x17],0x0
0x63d3: je 0x6b98
0x63d9: cmp r15d,0x11
0x63dd: jne 0x640b
0x63df: mov rsi,qword ptr [rbp-0x308]
0x63e6: mov rdi,qword ptr [rbp-0x310]
0x63ed: call 0x2d10
0x63f2: test eax,eax
0x63f4: je 0x628a
0x63fa: call 0x2770
0x63ff: mov r15d,dword ptr [rax]
0x6402: test r15d,r15d
0x6405: je 0x628a
0x640b: cmp r15d,0x16
0x640f: je 0x7430
0x6415: cmp r15d,0x12
0x6419: jne 0x6be8
0x641f: mov r12d,dword ptr [rbp-0x314]
0x6426: mov rdi,qword ptr [rbp-0x308]
0x642d: and r12d,0xf000
0x6434: cmp r12d,0x4000
0x643b: je 0x74a0
0x6441: call 0x2780
0x6446: test eax,eax
0x6448: je 0x645b
0x644a: call 0x2770
0x644f: cmp dword ptr [rax],0x2
0x6452: mov r14,rax
0x6455: jne 0x74be
0x645b: cmp r12d,0x4000
0x6462: setne dl
0x6465: and dl,byte ptr [rbx+0x2e]
0x6468: mov r14d,edx
0x646b: jne 0x7db0
0x6471: mov dword ptr [rbp-0x320],0x1
0x647b: mov r14d,0x1
0x6481: jmp 0x5f30
0x6490: mov eax,dword ptr [rbp-0x314]
0x6496: and eax,0xf000
0x649b: cmp eax,0x4000
0x64a0: je 0x5ee0
0x64a6: mov rdx,qword ptr [rbp-0x350]
0x64ad: mov rsi,qword ptr [rbp-0x308]
0x64b4: mov rdi,qword ptr [rbp-0x310]
0x64bb: call 0x4e30
0x64c0: jmp 0x5ee0
0x656a: xor r8d,r8d
0x656d: xor r9d,r9d
0x6570: jmp 0x5c9f
0x6578: mov ecx,dword ptr [rbp-0x320]
0x657e: mov edx,dword ptr [rbp-0x314]
0x6584: mov r8,rbx
0x6587: mov rsi,qword ptr [rbp-0x308]
0x658e: mov rdi,qword ptr [rbp-0x310]
0x6595: call 0x5620
0x659a: test al,al
0x659c: je 0x5d90
0x65a2: mov r15d,dword ptr [rbp-0x314]
0x65a9: mov eax,r12d
0x65ac: and eax,0x3f
0x65af: mov dword ptr [rbp-0x35c],eax
0x65b5: and r15d,0xf000
0x65bc: cmp r15d,0x4000
0x65c3: jne 0x5fa8
0x65c9: mov rax,qword ptr [rbp-0x330]
0x65d0: mov rdx,qword ptr [rbp-0x278]
0x65d7: mov rcx,qword ptr [rbp-0x280]
0x65de: test rax,rax
0x65e1: jne 0x65fc
0x65e3: jmp 0x6ee0
0x65f0: mov rax,qword ptr [rax]
0x65f3: test rax,rax
0x65f6: je 0x6ee0
0x65fc: cmp qword ptr [rax+0x8],rdx
0x6600: jne 0x65f0
0x6602: cmp qword ptr [rax+0x10],rcx
0x6606: jne 0x65f0
0x6608: mov rsi,qword ptr [rbp-0x310]
0x660f: mov edi,0x4
0x6614: call 0xeab0
0x6619: lea rsi,[rip+0xe5d8]
0x6620: mov r12,rax
0x6623: mov edx,0x5
0x6628: xor edi,edi
0x662a: call 0x28e0
0x662f: mov rcx,r12
0x6632: mov rdx,rax
0x6635: xor esi,esi
0x6637: xor edi,edi
0x6639: xor eax,eax
0x663b: call 0x2cb0
0x6640: jmp 0x6a10
0x6667: cmp byte ptr [rbx+0x19],0x0
0x666b: mov r13,rax
0x666e: mov edx,0x5
0x6673: jne 0x7410
0x6679: lea rsi,[rip+0xe1e8]
0x6680: xor edi,edi
0x6682: call 0x28e0
0x6687: mov rdx,rax
0x668a: mov rcx,r13
0x668d: xor esi,esi
0x668f: xor edi,edi
0x6691: xor eax,eax
0x6693: call 0x2cb0
0x6698: jmp 0x62c6
0x66cd: mov rsi,qword ptr [rbp-0x308]
0x66d4: lea rdx,[rbp-0x1d8]
0x66db: mov rdi,rbx
0x66de: mov byte ptr [rbp-0x358],r9b
0x66e5: mov byte ptr [rbp-0x350],r8b
0x66ec: call 0x5000
0x66f1: test al,al
0x66f3: movzx r8d,byte ptr [rbp-0x350]
0x66fb: movzx r9d,byte ptr [rbp-0x358]
0x6703: je 0x62c0
0x6709: nop dword ptr [rax]
0x6764: cmp byte ptr [rbx+0x18],0x0
0x6768: jne 0x7a07
0x676e: mov rdi,qword ptr [rbp-0x310]
0x6775: mov byte ptr [rbp-0x358],r9b
0x677c: mov byte ptr [rbp-0x350],r8b
0x6783: call 0xb590
0x6788: cmp byte ptr [rax],0x2e
0x678b: mov r14,rax
0x678e: movzx r8d,byte ptr [rbp-0x350]
0x6796: movzx r9d,byte ptr [rbp-0x358]
0x679e: jne 0x67c7
0x67a0: xor eax,eax
0x67a2: xor edx,edx
0x67a4: cmp byte ptr [r14+0x1],0x2e
0x67a9: sete dl
0x67ac: movzx edx,byte ptr [r14+rdx+0x1]
0x67b2: test dl,dl
0x67b4: je 0x7288
0x67ba: cmp dl,0x2f
0x67bd: je 0x7288
0x67c3: test al,al
0x67c5: jne 0x67dd
0x67c7: mov eax,dword ptr [rbp-0x1d8]
0x67cd: and eax,0xf000
0x67d2: cmp eax,0x4000
0x67d7: je 0x72a7
0x67dd: cmp r15d,0x3
0x67e1: je 0x6849
0x67e3: mov rdi,r14
0x67e6: mov byte ptr [rbp-0x35c],r9b
0x67ed: call 0x2900
0x67f2: mov rdi,qword ptr [rbp-0x308]
0x67f9: mov qword ptr [rbp-0x350],rax
0x6800: call 0xb590
0x6805: mov rdi,rax
0x6808: mov qword ptr [rbp-0x358],rax
0x680f: call 0x2900
0x6814: mov r15,qword ptr [rip+0x213d65]
0x681b: mov r12,rax
0x681e: mov rdi,r15
0x6821: call 0x2900
0x6826: mov r8,rax
0x6829: lea rax,[r12+rax]
0x682d: cmp qword ptr [rbp-0x350],rax
0x6834: mov rsi,qword ptr [rbp-0x358]
0x683b: movzx r9d,byte ptr [rbp-0x35c]
0x6843: je 0x829e
0x6849: mov edx,dword ptr [rbx]
0x684b: mov rsi,qword ptr [rbp-0x308]
0x6852: mov edi,0xffffff9c
0x6857: mov byte ptr [rbp-0x350],r9b
0x685e: call 0xb170
0x6863: test rax,rax
0x6866: mov r12,rax
0x6869: movzx r9d,byte ptr [rbp-0x350]
0x6871: je 0x8191
0x6877: mov rdi,rax
0x687a: mov byte ptr [rbp-0x358],r9b
0x6881: mov r14d,0x1
0x6887: call 0x2900
0x688c: lea rdx,[rax+0x1]
0x6890: add rax,0x1f
0x6894: mov rsi,r12
0x6897: and rax,-0x10
0x689b: mov r15d,0x11
0x68a1: sub rsp,rax
0x68a4: lea rdi,[rsp+0xf]
0x68a9: and rdi,-0x10
0x68ad: call 0x2b60
0x68b2: mov rdi,r12
0x68b5: mov qword ptr [rbp-0x350],rax
0x68bc: call 0x2e10
0x68c1: movzx r9d,byte ptr [rbp-0x358]
0x68c9: jmp 0x5e0e
0x68f5: lea rsi,[rip+0xe51b]
0x68fc: mov edx,0x5
0x6901: xor edi,edi
0x6903: mov rbx,rax
0x6906: call 0x28e0
0x690b: mov r9,qword ptr [rbp-0x310]
0x6912: mov rdx,rax
0x6915: mov rcx,rbx
0x6918: xor edi,edi
0x691a: xor eax,eax
0x691c: mov esi,dword ptr [r9]
0x691f: call 0x2cb0
0x6924: jmp 0x62c6
0x6930: call 0x2770
0x6935: mov r15d,dword ptr [rax]
0x6938: jmp 0x5b0b
0x6940: mov rax,qword ptr [rbp-0x310]
0x6947: cmp byte ptr [rax],0x2f
0x694a: je 0x6984
0x694c: mov rdi,qword ptr [rbp-0x308]
0x6953: call 0xb4b0
0x6958: lea r8,[rip+0xc0da]
0x695f: mov rdi,rax
0x6962: mov ecx,0x2
0x6967: mov r12,rax
0x696a: mov rsi,r8
0x696d: rep cmpsb [rsi],es:[rdi]
0x696f: seta al
0x6972: sbb al,0x0
0x6974: test al,al
0x6976: jne 0x7c58
0x697c: mov rdi,r12
0x697f: call 0x2e10
0x6984: movzx ecx,byte ptr [rbx+0x16]
0x6988: mov rdx,qword ptr [rbp-0x308]
0x698f: mov r8d,0xffffffff
0x6995: mov rdi,qword ptr [rbp-0x310]
0x699c: mov esi,0xffffff9c
0x69a1: call 0xa440
0x69a6: xor r8d,r8d
0x69a9: test eax,eax
0x69ab: mov r12d,eax
0x69ae: jle 0x5fff
0x69b4: mov rdx,qword ptr [rbp-0x310]
0x69bb: mov esi,0x4
0x69c0: mov edi,0x1
0x69c5: call 0xe990
0x69ca: mov rdx,qword ptr [rbp-0x308]
0x69d1: mov esi,0x4
0x69d6: xor edi,edi
0x69d8: mov r13,rax
0x69db: call 0xe990
0x69e0: lea rsi,[rip+0xe169]
0x69e7: mov r14,rax
0x69ea: mov edx,0x5
0x69ef: xor edi,edi
0x69f1: call 0x28e0
0x69f6: mov r8,r13
0x69f9: mov rdx,rax
0x69fc: mov rcx,r14
0x69ff: mov esi,r12d
0x6a02: xor edi,edi
0x6a04: xor eax,eax
0x6a06: call 0x2cb0
0x6a0b: nop dword ptr [rax+rax]
0x6a6f: mov rdx,qword ptr [rbp-0x350]
0x6a76: xor edi,edi
0x6a78: mov esi,0x4
0x6a7d: mov r12,rax
0x6a80: call 0xe990
0x6a85: lea rsi,[rip+0xe5a6]
0x6a8c: mov rbx,rax
0x6a8f: xor edi,edi
0x6a91: mov edx,0x5
0x6a96: call 0x28e0
0x6a9b: mov rcx,r12
0x6a9e: mov rsi,rax
0x6aa1: mov rdx,rbx
0x6aa4: mov edi,0x1
0x6aa9: xor eax,eax
0x6aab: call 0x2c60
0x6ab0: jmp 0x5d90
0x6ab8: cmp byte ptr [rbx+0x2e],0x0
0x6abc: jne 0x6490
0x6ac2: test r15d,r15d
0x6ac5: je 0x5f1b
0x6acb: jmp 0x5ee9
0x6ad0: test r13b,r13b
0x6ad3: mov rdx,qword ptr [rbp-0x280]
0x6ada: mov rdi,qword ptr [rbp-0x278]
0x6ae1: je 0x7390
0x6ae7: mov rsi,rdi
0x6aea: mov rdi,qword ptr [rbp-0x308]
0x6af1: call 0x9e20
0x6af6: mov qword ptr [rbp-0x358],rax
0x6afd: cmp qword ptr [rbp-0x358],0x0
0x6b05: je 0x7000
0x6b0b: mov rsi,qword ptr [rbp-0x358]
0x6b12: mov rdi,qword ptr [rbp-0x310]
0x6b19: call 0xf240
0x6b1e: test al,al
0x6b20: je 0x7a60
0x6b26: mov rdx,qword ptr [rip+0x213a3b]
0x6b2d: mov esi,0x4
0x6b32: mov edi,0x1
0x6b37: call 0xe990
0x6b3c: mov rdx,qword ptr [rip+0x213a2d]
0x6b43: mov esi,0x4
0x6b48: xor edi,edi
0x6b4a: mov r13,rax
0x6b4d: call 0xe990
0x6b52: lea rsi,[rip+0xdeef]
0x6b59: mov r12,rax
0x6b5c: mov edx,0x5
0x6b61: xor edi,edi
0x6b63: call 0x28e0
0x6b68: mov r8,r13
0x6b6b: mov rdx,rax
0x6b6e: mov rcx,r12
0x6b71: xor eax,eax
0x6b73: xor esi,esi
0x6b75: xor edi,edi
0x6b77: call 0x2cb0
0x6b7c: mov rax,qword ptr [rbp-0x340]
0x6b83: mov byte ptr [rax],0x1
0x6b86: cmp byte ptr [rbx+0x25],0x0
0x6b8a: je 0x6a28
0x6b95: nop dword ptr [rax]
0x6b98: cmp qword ptr [rbp-0x270],0x1
0x6ba0: ja 0x6f88
0x6ba6: test r13b,r13b
0x6ba9: mov edx,dword ptr [rbx+0x4]
0x6bac: je 0x6bb7
0x6bae: cmp edx,0x3
0x6bb1: je 0x6f88
0x6bb7: cmp edx,0x4
0x6bba: mov qword ptr [rbp-0x358],0x0
0x6bc5: je 0x6f88
0x6bcb: test al,al
0x6bcd: jne 0x63d9
0x6bd3: movzx eax,r14b
0x6bd7: mov dword ptr [rbp-0x320],eax
0x6bdd: jmp 0x5f30
0x6be8: mov rdx,qword ptr [rbp-0x308]
0x6bef: mov esi,0x4
0x6bf4: mov edi,0x1
0x6bf9: call 0xe990
0x6bfe: mov rdx,qword ptr [rbp-0x310]
0x6c05: mov esi,0x4
0x6c0a: xor edi,edi
0x6c0c: mov r12,rax
0x6c0f: call 0xe990
0x6c14: lea rsi,[rip+0xe268]
0x6c1b: mov rbx,rax
0x6c1e: mov edx,0x5
0x6c23: xor edi,edi
0x6c25: call 0x28e0
0x6c2a: mov r8,r12
0x6c2d: mov rcx,rbx
0x6c30: mov rdx,rax
0x6c33: mov esi,r15d
0x6c36: xor edi,edi
0x6c38: xor eax,eax
0x6c3a: call 0x2cb0
0x6c3f: mov rsi,qword ptr [rbp-0x280]
0x6c46: mov rdi,qword ptr [rbp-0x278]
0x6c4d: call 0x9d50
0x6c52: jmp 0x5d90
0x6c60: xor r8d,r8d
0x6c63: jmp 0x6312
0x6c70: cmp byte ptr [rbx+0x18],0x0
0x6c74: je 0x66bc
0x6c7a: nop word ptr [rax+rax]
0x6c80: mov eax,dword ptr [rbx+0x8]
0x6c83: cmp eax,0x2
0x6c86: je 0x6d04
0x6c88: cmp eax,0x3
0x6c8b: je 0x6cd8
0x6c8d: cmp eax,0x4
0x6c90: jne 0x6710
0x6c96: cmp byte ptr [rbx+0x2f],0x0
0x6c9a: je 0x6710
0x6ca0: mov esi,dword ptr [rbp-0x1d8]
0x6ca6: mov rdi,qword ptr [rbp-0x308]
0x6cad: mov byte ptr [rbp-0x358],r9b
0x6cb4: mov byte ptr [rbp-0x350],r8b
0x6cbb: call 0x4cf0
0x6cc0: test al,al
0x6cc2: movzx r8d,byte ptr [rbp-0x350]
0x6cca: movzx r9d,byte ptr [rbp-0x358]
0x6cd2: jne 0x6710
0x6cd8: mov rsi,qword ptr [rbp-0x308]
0x6cdf: lea rdx,[rbp-0x1d8]
0x6ce6: mov rdi,rbx
0x6ce9: mov byte ptr [rbp-0x358],r9b
0x6cf0: mov byte ptr [rbp-0x350],r8b
0x6cf7: call 0x5000
0x6cfc: test al,al
0x6cfe: jne 0x8110
0x6d04: cmp qword ptr [rbp-0x320],0x0
0x6d0c: je 0x62c0
0x6d12: mov rax,qword ptr [rbp-0x320]
0x6d19: mov byte ptr [rax],0x1
0x6d1c: jmp 0x62c0
0x6d28: mov rdi,qword ptr [rbx+0x40]
0x6d2c: mov rsi,qword ptr [rbp-0x308]
0x6d33: lea rdx,[rbp-0x280]
0x6d3a: mov r12d,r13d
0x6d3d: call 0xb730
0x6d42: jmp 0x62c6
0x6d63: mov r15d,dword ptr [rbx]
0x6d66: test r15d,r15d
0x6d69: jne 0x7a07
0x6d83: lea rsi,[rip+0xdba6]
0x6d8a: mov rbx,rax
0x6d8d: mov edx,0x5
0x6d92: xor edi,edi
0x6d94: call 0x28e0
0x6d99: mov rcx,rbx
0x6d9c: mov rdx,rax
0x6d9f: xor esi,esi
0x6da1: xor edi,edi
0x6da3: xor eax,eax
0x6da5: call 0x2cb0
0x6daa: jmp 0x62c6
0x6db0: mov ecx,dword ptr [rbp-0x320]
0x6db6: mov edx,dword ptr [rbp-0x314]
0x6dbc: mov r8,rbx
0x6dbf: mov rsi,qword ptr [rbp-0x308]
0x6dc6: mov rdi,qword ptr [rbp-0x310]
0x6dcd: call 0x5620
0x6dd2: test al,al
0x6dd4: je 0x5d90
0x6dda: mov eax,r12d
0x6ddd: and eax,0x12
0x6de0: mov dword ptr [rbp-0x35c],eax
0x6de6: jmp 0x65c9
0x6df0: mov rdi,qword ptr [rbp-0x308]
0x6df7: mov rcx,rbx
0x6dfa: mov edx,0x1
0x6dff: xor esi,esi
0x6e01: call 0x56f0
0x6e06: jmp 0x629e
0x6e10: lea rsi,[rip+0xe063]
0x6e17: mov edx,0x5
0x6e1c: xor edi,edi
0x6e1e: call 0x28e0
0x6e23: mov edi,0x1
0x6e28: mov rsi,rax
0x6e2b: xor eax,eax
0x6e2d: call 0x2c60
0x6e32: mov rdx,qword ptr [rbp-0x350]
0x6e39: mov rsi,qword ptr [rbp-0x308]
0x6e40: mov rdi,qword ptr [rbp-0x310]
0x6e47: call 0x4e30
0x6e4c: jmp 0x6294
0x6ee0: sub rsp,0x30
0x6ee4: mov rsi,qword ptr [rbp-0x330]
0x6eeb: lea rax,[rsp+0xf]
0x6ef0: and rax,-0x10
0x6ef4: test r14b,r14b
0x6ef7: mov qword ptr [rbp-0x328],rax
0x6efe: mov qword ptr [rax],rsi
0x6f01: mov qword ptr [rax+0x8],rdx
0x6f05: mov qword ptr [rax+0x10],rcx
0x6f09: jne 0x6f21
0x6f0b: mov eax,dword ptr [rbp-0x1d8]
0x6f11: and eax,0xf000
0x6f16: cmp eax,0x4000
0x6f1b: je 0x7f78
0x6f21: mov esi,dword ptr [rbp-0x35c]
0x6f27: mov r15,qword ptr [rbp-0x308]
0x6f2e: not esi
0x6f30: mov rdi,r15
0x6f33: and esi,r12d
0x6f36: call 0x27e0
0x6f3b: test eax,eax
0x6f3d: je 0x7700
0x6f43: mov rsi,r15
0x6f46: mov edi,0x4
0x6f4b: call 0xeab0
0x6f50: lea rsi,[rip+0xdf49]
0x6f57: mov r13,rax
0x6f5a: mov edx,0x5
0x6f5f: xor edi,edi
0x6f61: call 0x28e0
0x6f66: mov r12,rax
0x6f69: call 0x2770
0x6f6e: mov esi,dword ptr [rax]
0x6f70: mov rcx,r13
0x6f73: mov rdx,r12
0x6f76: xor edi,edi
0x6f78: xor eax,eax
0x6f7a: call 0x2cb0
0x6f7f: jmp 0x6a10
0x6f88: mov rdx,qword ptr [rbp-0x280]
0x6f8f: mov rsi,qword ptr [rbp-0x278]
0x6f96: mov rdi,qword ptr [rbp-0x308]
0x6f9d: call 0x9e20
0x6fa2: mov qword ptr [rbp-0x358],rax
0x6fa9: cmp qword ptr [rbp-0x358],0x0
0x6fb1: je 0x7000
0x6fb3: mov eax,dword ptr [rbp-0x314]
0x6fb9: and eax,0xf000
0x6fbe: cmp eax,0x4000
0x6fc3: je 0x6b0b
0x6fc9: movzx ecx,byte ptr [rbx+0x2e]
0x6fcd: mov r8d,dword ptr [rbp-0x328]
0x6fd4: mov edx,0x1
0x6fd9: mov rsi,qword ptr [rbp-0x308]
0x6fe0: mov rdi,qword ptr [rbp-0x358]
0x6fe7: call 0x4ef0
0x6fec: test al,al
0x6fee: je 0x6b86
0x6ff4: jmp 0x62c0
0x7000: movzx eax,byte ptr [rbx+0x18]
0x7004: jmp 0x6bcb
0x7010: xor ecx,ecx
0x7012: xor r15d,r15d
0x703c: test cl,cl
0x703e: jne 0x80d2
0x7044: cmp byte ptr [rbx+0x18],0x0
0x7048: jne 0x6ece
0x704e: cmp dword ptr [rbx+0x4],0x2
0x7052: je 0x6ece
0x7058: mov eax,dword ptr [rdx+0x18]
0x705b: and eax,0xf000
0x7060: cmp eax,0xa000
0x7065: jne 0x6ece
0x706b: mov eax,dword ptr [r12+0x18]
0x7070: and eax,0xf000
0x7075: cmp eax,0xa000
0x707a: je 0x6ece
0x7096: mov rdx,qword ptr [rbp-0x310]
0x709d: mov esi,0x4
0x70a2: xor edi,edi
0x70a4: mov r12,rax
0x70a7: call 0xe990
0x70ac: lea rsi,[rip+0xdd89]
0x70b3: mov rbx,rax
0x70b6: mov edx,0x5
0x70bb: xor edi,edi
0x70bd: call 0x28e0
0x70c2: mov r8,r12
0x70c5: mov rdx,rax
0x70c8: mov rcx,rbx
0x70cb: xor esi,esi
0x70cd: xor edi,edi
0x70cf: xor eax,eax
0x70d1: call 0x2cb0
0x70d6: jmp 0x5d90
0x70e0: cmp byte ptr [rbx+0x18],0x0
0x70e4: je 0x6710
0x70ea: jmp 0x6c80
0x70f0: mov eax,dword ptr [r12+0x18]
0x70f5: and eax,0xf000
0x70fa: cmp eax,0xa000
0x70ff: je 0x5c9f
0x7105: test cl,cl
0x7107: je 0x7115
0x7109: cmp qword ptr [r12+0x10],0x1
0x710f: ja 0x84cb
0x7115: mov eax,dword ptr [rdx+0x18]
0x7118: and eax,0xf000
0x711d: cmp eax,0xa000
0x7122: je 0x7150
0x7159: mov eax,dword ptr [rbp-0x268]
0x715f: and eax,0xf000
0x7164: cmp eax,0xa000
0x7169: jne 0x7542
0x716f: cmp qword ptr [r12+0x10],0x1
0x7175: jbe 0x7542
0x717b: mov rdi,qword ptr [rbp-0x310]
0x7182: mov byte ptr [rbp-0x35c],r9b
0x7189: mov byte ptr [rbp-0x358],r8b
0x7190: mov qword ptr [rbp-0x350],rdx
0x7197: call 0x2a20
0x719c: test rax,rax
0x719f: mov r15,rax
0x71a2: mov rdx,qword ptr [rbp-0x350]
0x71a9: movzx r8d,byte ptr [rbp-0x358]
0x71b1: movzx r9d,byte ptr [rbp-0x35c]
0x71b9: je 0x7542
0x71bf: mov rsi,qword ptr [rbp-0x308]
0x71c6: mov rdi,rax
0x71c9: mov byte ptr [rbp-0x358],r9b
0x71d0: mov byte ptr [rbp-0x350],r8b
0x71d7: call 0xf240
0x71dc: mov rdi,r15
0x71df: xor eax,0x1
0x71e2: mov r12d,eax
0x71e5: call 0x2e10
0x71ea: movzx r8d,byte ptr [rbp-0x350]
0x71f2: movzx r9d,byte ptr [rbp-0x358]
0x71fa: xor eax,eax
0x71fc: test r12b,r12b
0x71ff: je 0x7080
0x7205: nop dword ptr [rax]
0x7208: mov r14d,eax
0x720b: jmp 0x5c9f
0x72f1: mov edx,0x5
0x72f6: mov r12,rax
0x72f9: lea rsi,[rip+0xdd1e]
0x7300: jmp 0x637e
0x732a: cmp r15d,0x1000
0x7331: je 0x83f2
0x7337: mov eax,r15d
0x733a: and ah,-0x41
0x733d: cmp eax,0x2000
0x7342: je 0x802c
0x7348: cmp r15d,0xc000
0x734f: je 0x802c
0x7355: cmp r15d,0xa000
0x735c: je 0x86e0
0x7362: mov rsi,qword ptr [rbp-0x310]
0x7369: mov edi,0x4
0x736e: call 0xeab0
0x7373: mov edx,0x5
0x7378: mov r12,rax
0x737b: lea rsi,[rip+0xdc83]
0x7382: jmp 0x6628
0x7390: mov rsi,rdx
0x7393: call 0x9dc0
0x7398: mov qword ptr [rbp-0x358],rax
0x739f: jmp 0x6afd
0x73b9: lea rsi,[rip+0xd4d0]
0x73c0: mov rbx,rax
0x73c3: xor edi,edi
0x73c5: mov edx,0x5
0x73ca: call 0x28e0
0x73cf: mov rcx,rbx
0x73d2: mov rdx,rax
0x73d5: xor esi,esi
0x73d7: xor edi,edi
0x73d9: xor eax,eax
0x73db: call 0x2cb0
0x73e0: jmp 0x62c6
0x73e8: mov rsi,qword ptr [rbp-0x280]
0x73ef: mov rdi,qword ptr [rbp-0x278]
0x73f6: call 0x9dc0
0x73fb: mov qword ptr [rbp-0x358],rax
0x7402: jmp 0x6fa9
0x7410: lea rsi,[rip+0xda0f]
0x7417: xor edi,edi
0x7419: call 0x28e0
0x741e: mov rdx,rax
0x7421: jmp 0x668a
0x7430: mov rdx,qword ptr [rip+0x213131]
0x7437: mov esi,0x4
0x743c: mov edi,0x1
0x7441: call 0xe990
0x7446: mov rdx,qword ptr [rip+0x213123]
0x744d: mov esi,0x4
0x7452: xor edi,edi
0x7454: mov r12,rax
0x7457: call 0xe990
0x745c: lea rsi,[rip+0xd67d]
0x7463: mov rbx,rax
0x7466: mov edx,0x5
0x746b: xor edi,edi
0x746d: call 0x28e0
0x7472: mov r8,r12
0x7475: mov rdx,rax
0x7478: mov rcx,rbx
0x747b: xor eax,eax
0x747d: xor esi,esi
0x747f: xor edi,edi
0x7481: call 0x2cb0
0x7486: mov rax,qword ptr [rbp-0x340]
0x748d: mov r12d,0x1
0x7493: mov byte ptr [rax],0x1
0x7496: jmp 0x62c6
0x74a0: call 0x28d0
0x74a5: test eax,eax
0x74a7: je 0x6471
0x74ad: call 0x2770
0x74b2: cmp dword ptr [rax],0x2
0x74b5: mov r14,rax
0x74b8: je 0x6471
0x74be: mov rdx,qword ptr [rbp-0x308]
0x74c5: mov esi,0x4
0x74ca: mov edi,0x1
0x74cf: call 0xe990
0x74d4: mov rdx,qword ptr [rbp-0x310]
0x74db: mov esi,0x4
0x74e0: xor edi,edi
0x74e2: mov r12,rax
0x74e5: call 0xe990
0x74ea: lea rsi,[rip+0xd61f]
0x74f1: mov rbx,rax
0x74f4: mov edx,0x5
0x74f9: xor edi,edi
0x74fb: call 0x28e0
0x7500: mov r8,r12
0x7503: mov rcx,rbx
0x7506: mov rdx,rax
0x7509: mov esi,dword ptr [r14]
0x750c: jmp 0x6c36
0x7548: mov eax,dword ptr [r12+0x18]
0x754d: and eax,0xf000
0x7552: cmp eax,0xa000
0x7557: je 0x5c9f
0x76a3: mov eax,dword ptr [r12+0x18]
0x76a8: and eax,0xf000
0x76ad: cmp eax,0xa000
0x76b2: setne r14b
0x76b6: jmp 0x5c9f
0x7700: mov rsi,qword ptr [rbp-0x308]
0x7707: lea rdx,[rbp-0x1f0]
0x770e: mov edi,0x1
0x7713: call 0x2910
0x7718: test eax,eax
0x771a: jne 0x8125
0x7720: mov r12d,dword ptr [rbp-0x1d8]
0x7727: mov byte ptr [rbp-0x330],0x0
0x772e: mov eax,r12d
0x7731: and eax,0x1c0
0x7736: cmp eax,0x1c0
0x773b: je 0x7768
0x773d: mov rdi,qword ptr [rbp-0x308]
0x7744: mov esi,r12d
0x7747: or esi,0x1c0
0x774d: call 0x2c90
0x7752: test eax,eax
0x7754: mov dword ptr [rbp-0x38c],r12d
0x775b: mov byte ptr [rbp-0x330],0x1
0x7762: jne 0x8783
0x7768: mov rax,qword ptr [rbp-0x338]
0x776f: cmp byte ptr [rax],0x0
0x7772: je 0x856c
0x7778: cmp byte ptr [rbx+0x2e],0x0
0x777c: je 0x77c8
0x777e: cmp byte ptr [rbx+0x18],0x0
0x7782: je 0x862d
0x7788: mov rsi,qword ptr [rbp-0x308]
0x778f: mov edi,0x4
0x7794: call 0xeab0
0x7799: lea rsi,[rip+0xd71b]
0x77a0: mov r12,rax
0x77a3: mov edx,0x5
0x77a8: xor edi,edi
0x77aa: call 0x28e0
0x77af: mov rdx,r12
0x77b2: mov rsi,rax
0x77b5: mov edi,0x1
0x77ba: xor eax,eax
0x77bc: call 0x2c60
0x77c1: nop dword ptr [rax]
0x77c8: mov rax,qword ptr [rbp-0x348]
0x77cf: test rax,rax
0x77d2: setne r12b
0x77d6: and r12b,byte ptr [rbx+0x1c]
0x77da: jne 0x7fbb
0x77e0: movdqu xmm0,[rbx]
0x77e4: mov esi,0x2
0x77e9: mov rdi,qword ptr [rbp-0x310]
0x77f0: movaps [rbp-0x2f0],xmm0
0x77f7: movdqu xmm0,[rbx+0x10]
0x77fc: movaps [rbp-0x2e0],xmm0
0x7803: movdqu xmm0,[rbx+0x20]
0x7808: movaps [rbp-0x2d0],xmm0
0x780f: movdqu xmm0,[rbx+0x30]
0x7814: movaps [rbp-0x2c0],xmm0
0x781b: movdqu xmm0,[rbx+0x40]
0x7820: movaps [rbp-0x2b0],xmm0
0x7827: call 0xf610
0x782c: test rax,rax
0x782f: mov qword ptr [rbp-0x368],rax
0x7836: je 0x8698
0x783c: cmp dword ptr [rbx+0x4],0x3
0x7840: jne 0x784c
0x7842: mov dword ptr [rbp-0x2ec],0x2
0x784c: mov rax,qword ptr [rbp-0x368]
0x7853: cmp byte ptr [rax],0x0
0x7856: je 0x8d95
0x785c: lea rax,[rbp-0x2f0]
0x7863: lea r10,[rbp-0x280]
0x786a: mov dword ptr [rbp-0x380],r13d
0x7871: mov r15,qword ptr [rbp-0x368]
0x7878: mov r13,qword ptr [rbp-0x340]
0x787f: mov r12d,0x1
0x7885: mov qword ptr [rbp-0x348],rax
0x788c: lea rax,[rbp-0x2f9]
0x7893: mov byte ptr [rbp-0x315],0x0
0x789a: mov byte ptr [rbp-0x370],r14b
0x78a1: mov qword ptr [rbp-0x378],rbx
0x78a8: mov qword ptr [rbp-0x350],rax
0x78af: lea rax,[rbp-0x2f8]
0x78b6: mov qword ptr [rbp-0x340],r10
0x78bd: mov qword ptr [rbp-0x358],rax
0x78c4: jmp 0x78f4
0x78d0: movzx eax,byte ptr [rbp-0x2f8]
0x78d7: mov rdi,r15
0x78da: or byte ptr [rbp-0x315],al
0x78e0: call 0x2900
0x78e5: lea r15,[r15+rax+0x1]
0x78ea: cmp byte ptr [r15],0x0
0x78ee: je 0x7991
0x78f4: mov rdi,qword ptr [rbp-0x310]
0x78fb: xor edx,edx
0x78fd: mov rsi,r15
0x7900: call 0xb9c0
0x7905: mov rdi,qword ptr [rbp-0x308]
0x790c: xor edx,edx
0x790e: mov rsi,r15
0x7911: mov rbx,rax
0x7914: call 0xb9c0
0x7919: mov r14,rax
0x791c: mov rax,qword ptr [rbp-0x338]
0x7923: mov r9,qword ptr [rbp-0x348]
0x792a: mov r8,qword ptr [rbp-0x328]
0x7931: mov rcx,qword ptr [rbp-0x340]
0x7938: mov rsi,r14
0x793b: mov edx,dword ptr [rbp-0x320]
0x7941: mov rdi,rbx
0x7944: movzx eax,byte ptr [rax]
0x7947: push 0x0
0x7949: push qword ptr [rbp-0x350]
0x794f: push qword ptr [rbp-0x358]
0x7955: push 0x0
0x7957: mov byte ptr [rbp-0x2f8],al
0x795d: call 0x5a80
0x7962: and r12d,eax
0x7965: movzx eax,byte ptr [rbp-0x2f9]
0x796c: add rsp,0x20
0x7970: or byte ptr [r13],al
0x7974: mov rdi,r14
0x7977: call 0x2e10
0x797c: mov rdi,rbx
0x797f: call 0x2e10
0x7984: cmp byte ptr [rbp-0x2f9],0x0
0x798b: je 0x78d0
0x7991: movzx r14d,byte ptr [rbp-0x370]
0x7999: mov rbx,qword ptr [rbp-0x378]
0x79a0: mov r13d,dword ptr [rbp-0x380]
0x79a7: mov rdi,qword ptr [rbp-0x368]
0x79ae: call 0x2e10
0x79b3: movzx ecx,byte ptr [rbp-0x315]
0x79ba: mov rax,qword ptr [rbp-0x338]
0x79c1: mov byte ptr [rax],cl
0x79c3: test r13b,r13b
0x79c6: jne 0x7fa2
0x79cc: movzx eax,byte ptr [rbp-0x330]
0x79d3: mov byte ptr [rbp-0x320],0x0
0x79da: mov byte ptr [rbp-0x315],al
0x79e0: jmp 0x609a
0x79f2: mov r15d,dword ptr [rbx]
0x79f5: test r15d,r15d
0x79f8: je 0x7dfb
0x79fe: test r13b,r13b
0x7a01: jne 0x675a
0x7a07: mov edx,dword ptr [rbp-0x268]
0x7a0d: and edx,0xf000
0x7a13: cmp edx,0x4000
0x7a19: je 0x7fd6
0x7a1f: mov rdi,qword ptr [rbp-0x310]
0x7a26: mov byte ptr [rbp-0x358],r9b
0x7a2d: mov byte ptr [rbp-0x350],r8b
0x7a34: call 0xb590
0x7a39: cmp byte ptr [rax],0x2e
0x7a3c: mov r14,rax
0x7a3f: movzx r8d,byte ptr [rbp-0x350]
0x7a47: movzx r9d,byte ptr [rbp-0x358]
0x7a4f: jne 0x67dd
0x7a55: mov eax,0x1
0x7a5a: jmp 0x67a2
0x7a60: mov rsi,qword ptr [rbp-0x358]
0x7a67: mov rdi,qword ptr [rbp-0x308]
0x7a6e: call 0xf240
0x7a73: test al,al
0x7a75: jne 0x814a
0x7a7b: mov eax,dword ptr [rbx+0x4]
0x7a7e: cmp eax,0x4
0x7a81: je 0x7000
0x7a87: cmp eax,0x3
0x7a8a: jne 0x7a95
0x7a8c: test r13b,r13b
0x7a8f: jne 0x7000
0x7a95: mov rdx,qword ptr [rbp-0x358]
0x7a9c: mov esi,0x4
0x7aa1: mov edi,0x1
0x7aa6: call 0xe990
0x7aab: mov rdx,qword ptr [rbp-0x308]
0x7ab2: xor edi,edi
0x7ab4: mov esi,0x4
0x7ab9: mov r13,rax
0x7abc: call 0xe990
0x7ac1: lea rsi,[rip+0xcfe8]
0x7ac8: mov r12,rax
0x7acb: xor edi,edi
0x7acd: mov edx,0x5
0x7ad2: call 0x28e0
0x7ad7: mov r8,r13
0x7ada: mov rdx,rax
0x7add: mov rcx,r12
0x7ae0: xor esi,esi
0x7ae2: xor edi,edi
0x7ae4: xor eax,eax
0x7ae6: call 0x2cb0
0x7aeb: jmp 0x6b86
0x7af0: cmp byte ptr [rbx+0x17],0x0
0x7af4: je 0x6b98
0x7afa: mov qword ptr [rbp-0x358],0x0
0x7b05: jmp 0x6bd3
0x7b92: mov rsi,qword ptr [rbp-0x310]
0x7b99: mov edi,0x4
0x7b9e: call 0xeab0
0x7ba3: lea rsi,[rip+0xcfce]
0x7baa: mov r12,rax
0x7bad: mov edx,0x5
0x7bb2: xor edi,edi
0x7bb4: call 0x28e0
0x7bb9: mov rcx,r12
0x7bbc: mov rdx,rax
0x7bbf: xor esi,esi
0x7bc1: xor edi,edi
0x7bc3: xor eax,eax
0x7bc5: call 0x2cb0
0x7bca: xor r8d,r8d
0x7bcd: mov qword ptr [rbp-0x330],0x0
0x7c30: mov eax,dword ptr [rbp-0x268]
0x7c36: and eax,0xf000
0x7c3b: cmp eax,0x4000
0x7c40: je 0x7fd0
0x7c46: test r15d,r15d
0x7c49: je 0x72a7
0x7c4f: jmp 0x7a1f
0x7c58: lea rdx,[rbp-0x160]
0x7c5f: mov rsi,r8
0x7c62: mov edi,0x1
0x7c67: call 0x2ba0
0x7c6c: test eax,eax
0x7c6e: jne 0x697c
0x7c74: lea rdx,[rbp-0xd0]
0x7c7b: mov rsi,r12
0x7c7e: mov edi,0x1
0x7c83: call 0x2ba0
0x7c88: test eax,eax
0x7c8a: jne 0x697c
0x7c90: mov rax,qword ptr [rbp-0xc8]
0x7c97: cmp qword ptr [rbp-0x158],rax
0x7c9e: je 0x8da7
0x7ca4: mov rdi,r12
0x7ca7: call 0x2e10
0x7cac: mov rdx,qword ptr [rbp-0x308]
0x7cb3: mov esi,0x3
0x7cb8: xor edi,edi
0x7cba: call 0xebb0
0x7cbf: mov edx,0x5
0x7cc4: mov r12,rax
0x7cc7: lea rsi,[rip+0xcf52]
0x7cce: jmp 0x6628
0x7cd3: mov eax,dword ptr [rbp-0x1d8]
0x7cd9: lea rdx,[rbp-0x280]
0x7ce0: and eax,0xf000
0x7ce5: cmp eax,0xa000
0x7cea: jne 0x7032
0x7cf0: mov rsi,qword ptr [rbp-0x308]
0x7cf7: mov rdi,qword ptr [rbp-0x310]
0x7cfe: mov byte ptr [rbp-0x358],r9b
0x7d05: mov byte ptr [rbp-0x350],r8b
0x7d0c: call 0xf240
0x7d11: test al,al
0x7d13: jne 0x7080
0x7d19: mov edi,dword ptr [rbx]
0x7d1b: movzx r8d,byte ptr [rbp-0x350]
0x7d23: movzx r9d,byte ptr [rbp-0x358]
0x7d2b: test edi,edi
0x7d2d: jne 0x6ece
0x7d33: test r15d,r15d
0x7d36: je 0x6ece
0x7d3c: movzx r12d,byte ptr [rbx+0x18]
0x7d41: mov eax,0x1
0x7d46: xor r12d,0x1
0x7d4a: jmp 0x71fc
0x7db0: lea rsi,[rip+0xd0e1]
0x7db7: mov edx,0x5
0x7dbc: xor edi,edi
0x7dbe: call 0x28e0
0x7dc3: mov edi,0x1
0x7dc8: mov rsi,rax
0x7dcb: xor eax,eax
0x7dcd: call 0x2c60
0x7dd2: mov rdx,qword ptr [rbp-0x350]
0x7dd9: mov rsi,qword ptr [rbp-0x308]
0x7de0: mov rdi,qword ptr [rbp-0x310]
0x7de7: call 0x4e30
0x7dec: mov dword ptr [rbp-0x320],0x1
0x7df6: jmp 0x5f30
0x7e11: mov rdx,qword ptr [rbp-0x308]
0x7e18: mov esi,0x4
0x7e1d: xor edi,edi
0x7e1f: mov r12,rax
0x7e22: call 0xe990
0x7e27: mov edx,0x5
0x7e2c: mov rbx,rax
0x7e2f: lea rsi,[rip+0xca92]
0x7e36: jmp 0x70bb
0x7e4b: cmp qword ptr [rbp-0x1e0],0x1
0x7e53: jbe 0x8226
0x7ea5: lea rsi,[rip+0xcfbd]
0x7eac: xor edi,edi
0x7eae: mov edx,0x5
0x7eb3: mov rbx,rax
0x7eb6: call 0x28e0
0x7ebb: mov esi,dword ptr [r15]
0x7ebe: mov rdx,rax
0x7ec1: mov rcx,rbx
0x7ec4: xor edi,edi
0x7ec6: xor eax,eax
0x7ec8: call 0x2cb0
0x7ecd: jmp 0x62c6
0x7f6c: jmp 0x6ece
0x7f78: movabsq rax,0xff000000ff00
0x7f82: test qword ptr [rbx+0x20],rax
0x7f86: jne 0x8540
0x7f8c: mov byte ptr [rbp-0x330],0x0
0x7f93: mov dword ptr [rbp-0x35c],0x0
0x7f9d: jmp 0x77c8
0x7fa2: mov byte ptr [rbp-0x315],r12b
0x7fa9: xor r15d,r15d
0x7fac: xor r8d,r8d
0x7faf: mov byte ptr [rbp-0x320],0x0
0x7fb6: jmp 0x6034
0x7fbb: mov rcx,qword ptr [rbp-0x280]
0x7fc2: cmp qword ptr [rax],rcx
0x7fc5: jne 0x79c3
0x7fcb: jmp 0x77e0
0x7fd0: mov eax,dword ptr [rbp-0x1d8]
0x7fd6: and eax,0xf000
0x7fdb: cmp eax,0x4000
0x7fe0: je 0x7c46
0x7fe6: test r15d,r15d
0x7fe9: jne 0x7a1f
0x7fef: mov rdx,qword ptr [rbp-0x308]
0x7ff6: mov esi,0x3
0x7ffb: xor edi,edi
0x7ffd: call 0xebb0
0x8002: mov rdx,qword ptr [rbp-0x310]
0x8009: mov esi,0x3
0x800e: xor edi,edi
0x8010: mov r12,rax
0x8013: call 0xebb0
0x8018: mov edx,0x5
0x801d: mov rbx,rax
0x8020: lea rsi,[rip+0xc941]
0x8027: jmp 0x70bb
0x802c: mov edx,dword ptr [rbp-0x35c]
0x8032: mov rax,qword ptr [rbp-0x258]
0x8039: lea rcx,[rbp-0x2f0]
0x8040: mov rsi,qword ptr [rbp-0x308]
0x8047: xor edi,edi
0x8049: mov byte ptr [rbp-0x328],r8b
0x8050: not edx
0x8052: and edx,dword ptr [rbp-0x314]
0x8058: mov qword ptr [rbp-0x2f0],rax
0x805f: call 0x2b70
0x8064: test eax,eax
0x8066: mov byte ptr [rbp-0x320],0x0
0x806d: movzx r8d,byte ptr [rbp-0x328]
0x8075: je 0x5fff
0x807b: mov rsi,qword ptr [rbp-0x308]
0x8082: mov edi,0x4
0x8087: call 0xeab0
0x808c: mov edx,0x5
0x8091: mov r13,rax
0x8094: lea rsi,[rip+0xcf2f]
0x809b: jmp 0x6f5f
0x80d2: mov rsi,qword ptr [rbp-0x308]
0x80d9: mov rdi,qword ptr [rbp-0x310]
0x80e0: mov byte ptr [rbp-0x358],r9b
0x80e7: mov byte ptr [rbp-0x350],r8b
0x80ee: call 0xf240
0x80f3: xor eax,0x1
0x80f6: movzx r8d,byte ptr [rbp-0x350]
0x80fe: movzx r9d,byte ptr [rbp-0x358]
0x8106: mov r12d,eax
0x8109: xor eax,eax
0x810b: jmp 0x71fc
0x8110: movzx r8d,byte ptr [rbp-0x350]
0x8118: movzx r9d,byte ptr [rbp-0x358]
0x8120: jmp 0x6710
0x8125: mov rsi,qword ptr [rbp-0x308]
0x812c: mov edi,0x4
0x8131: call 0xeab0
0x8136: mov edx,0x5
0x813b: mov r13,rax
0x813e: lea rsi,[rip+0xccd2]
0x8145: jmp 0x6f5f
0x814a: mov rsi,qword ptr [rip+0x21241f]
0x8151: mov edi,0x4
0x8156: call 0xeab0
0x815b: lea rsi,[rip+0xc916]
0x8162: xor edi,edi
0x8164: mov r12,rax
0x8167: mov edx,0x5
0x816c: call 0x28e0
0x8171: xor esi,esi
0x8173: mov rdx,rax
0x8176: xor edi,edi
0x8178: xor eax,eax
0x817a: mov rcx,r12
0x817d: call 0x2cb0
0x8182: cmp byte ptr [rbx+0x18],0x0
0x8186: jne 0x6d04
0x818c: jmp 0x62c0
0x8191: mov byte ptr [rbp-0x350],r9b
0x8198: call 0x2770
0x819d: cmp dword ptr [rax],0x2
0x81a0: mov r12,rax
0x81a3: movzx r9d,byte ptr [rbp-0x350]
0x81ab: je 0x8611
0x81b1: mov rsi,qword ptr [rbp-0x308]
0x81b8: mov edi,0x4
0x81bd: call 0xeab0
0x81c2: lea rsi,[rip+0xcc8f]
0x81c9: mov edx,0x5
0x81ce: xor edi,edi
0x81d0: mov rbx,rax
0x81d3: call 0x28e0
0x81d8: mov esi,dword ptr [r12]
0x81dc: mov rdx,rax
0x81df: mov rcx,rbx
0x81e2: xor edi,edi
0x81e4: xor eax,eax
0x81e6: xor r12d,r12d
0x81e9: call 0x2cb0
0x81ee: jmp 0x62c6
0x820a: mov qword ptr [rbp-0x350],0x0
0x8215: mov r14d,0x1
0x821b: mov r15d,0x11
0x8221: jmp 0x5ee9
0x825c: mov edx,0x5
0x8261: mov r13,rax
0x8264: lea rsi,[rip+0xcc77]
0x826b: jmp 0x6f5f
0x829e: mov rdx,r12
0x82a1: mov rdi,r14
0x82a4: mov byte ptr [rbp-0x350],r9b
0x82ab: mov qword ptr [rbp-0x358],r8
0x82b2: call 0x2a90
0x82b7: test eax,eax
0x82b9: movzx r9d,byte ptr [rbp-0x350]
0x82c1: jne 0x6849
0x82c7: lea rdi,[r14+r12]
0x82cb: mov rsi,r15
0x82ce: call 0x2af0
0x82d3: test eax,eax
0x82d5: movzx r9d,byte ptr [rbp-0x350]
0x82dd: mov r8,qword ptr [rbp-0x358]
0x82e4: jne 0x6849
0x82ea: mov rdi,qword ptr [rbp-0x308]
0x82f1: or rcx,-0x1
0x82f5: repne scasb al,es:[rdi]
0x82f7: mov rax,rcx
0x82fa: not rax
0x82fd: lea r14,[rax-0x1]
0x8301: lea rdi,[r14+r8+0x1]
0x8306: call 0x11020
0x830b: mov r15,qword ptr [rip+0x21226e]
0x8312: mov rsi,qword ptr [rbp-0x308]
0x8319: mov rdx,r14
0x831c: mov rdi,rax
0x831f: mov r12,rax
0x8322: call 0x2ca0
0x8327: mov rsi,r15
0x832a: mov rdi,rax
0x832d: call 0x27b0
0x8332: lea rdx,[rbp-0xd0]
0x8339: mov rsi,r12
0x833c: mov edi,0x1
0x8341: call 0x2ba0
0x8346: mov rdi,r12
0x8349: mov r15d,eax
0x834c: call 0x2e10
0x8351: test r15d,r15d
0x8354: movzx r9d,byte ptr [rbp-0x350]
0x835c: jne 0x6849
0x8362: mov rax,qword ptr [rbp-0xc8]
0x8369: cmp qword ptr [rbp-0x278],rax
0x8370: jne 0x6849
0x8376: mov rax,qword ptr [rbp-0xd0]
0x837d: cmp qword ptr [rbp-0x280],rax
0x8384: jne 0x6849
0x838a: cmp byte ptr [rbx+0x18],0x0
0x838e: je 0x85f6
0x8394: lea rsi,[rip+0xc605]
0x839b: mov edx,0x5
0x83a0: xor edi,edi
0x83a2: call 0x28e0
0x83a7: mov rbx,rax
0x83aa: mov rdx,qword ptr [rbp-0x310]
0x83b1: mov esi,0x4
0x83b6: mov edi,0x1
0x83bb: call 0xe990
0x83c0: mov rdx,qword ptr [rbp-0x308]
0x83c7: mov r12,rax
0x83ca: mov esi,0x4
0x83cf: xor edi,edi
0x83d1: call 0xe990
0x83d6: mov r8,r12
0x83d9: mov rcx,rax
0x83dc: mov rdx,rbx
0x83df: xor esi,esi
0x83e1: xor edi,edi
0x83e3: xor eax,eax
0x83e5: call 0x2cb0
0x83ea: xor r12d,r12d
0x83ed: jmp 0x62c6
0x83f2: mov r12d,dword ptr [rbp-0x35c]
0x83f9: mov rsi,qword ptr [rbp-0x308]
0x8400: lea rcx,[rbp-0x2f8]
0x8407: xor edi,edi
0x8409: mov byte ptr [rbp-0x320],r8b
0x8410: mov qword ptr [rbp-0x2f8],0x0
0x841b: not r12d
0x841e: and r12d,dword ptr [rbp-0x314]
0x8425: mov edx,r12d
0x8428: call 0x2b70
0x842d: test eax,eax
0x842f: movzx r8d,byte ptr [rbp-0x320]
0x8437: je 0x5fff
0x843d: mov rdi,qword ptr [rbp-0x308]
0x8444: mov esi,r12d
0x8447: and esi,0xffffefff
0x844d: call 0x2b40
0x8452: test eax,eax
0x8454: movzx r8d,byte ptr [rbp-0x320]
0x845c: je 0x5fff
0x8462: mov rsi,qword ptr [rbp-0x308]
0x8469: mov edi,0x4
0x846e: call 0xeab0
0x8473: mov edx,0x5
0x8478: mov r13,rax
0x847b: lea rsi,[rip+0xcb32]
0x8482: jmp 0x6f5f
0x8498: lea rsi,[rip+0xca5e]
0x849f: mov edx,0x5
0x84a4: mov r12,rax
0x84a7: xor edi,edi
0x84a9: call 0x28e0
0x84ae: mov qword ptr [rbp-0x328],rax
0x84b5: call 0x2770
0x84ba: mov rcx,r12
0x84bd: mov rdx,qword ptr [rbp-0x328]
0x84c4: mov esi,dword ptr [rax]
0x84c6: jmp 0x7bc1
0x84cb: mov rsi,qword ptr [rbp-0x308]
0x84d2: mov rdi,qword ptr [rbp-0x310]
0x84d9: mov byte ptr [rbp-0x35c],r9b
0x84e0: mov byte ptr [rbp-0x358],r8b
0x84e7: mov qword ptr [rbp-0x350],rdx
0x84ee: call 0xf240
0x84f3: test al,al
0x84f5: mov rdx,qword ptr [rbp-0x350]
0x84fc: movzx r8d,byte ptr [rbp-0x358]
0x8504: movzx r9d,byte ptr [rbp-0x35c]
0x850c: je 0x8d87
0x8512: mov eax,dword ptr [rdx+0x18]
0x8515: and eax,0xf000
0x851a: cmp eax,0xa000
0x851f: je 0x714c
0x8540: movzx esi,byte ptr [rbx+0x25]
0x8544: mov rdi,qword ptr [rbp-0x308]
0x854b: xor edx,edx
0x854d: mov rcx,rbx
0x8550: call 0x56f0
0x8555: test al,al
0x8557: jne 0x7f8c
0x855d: cmp byte ptr [rbx+0x26],0x0
0x8561: jne 0x6a10
0x8567: jmp 0x7f8c
0x856c: mov rdx,qword ptr [rbp-0x1f0]
0x8573: mov rsi,qword ptr [rbp-0x1e8]
0x857a: mov rdi,qword ptr [rbp-0x308]
0x8581: call 0x9e20
0x8586: mov rax,qword ptr [rbp-0x338]
0x858d: mov byte ptr [rax],0x1
0x8590: jmp 0x7778
0x85ab: mov rdx,qword ptr [rbp-0x308]
0x85b2: mov esi,0x4
0x85b7: xor edi,edi
0x85b9: mov r12,rax
0x85bc: call 0xe990
0x85c1: mov edx,0x5
0x85c6: mov rbx,rax
0x85c9: lea rsi,[rip+0xc330]
0x85d0: jmp 0x70bb
0x85f6: lea rsi,[rip+0xc3db]
0x85fd: mov edx,0x5
0x8602: xor edi,edi
0x8604: call 0x28e0
0x8609: mov rbx,rax
0x860c: jmp 0x83aa
0x8611: mov qword ptr [rbp-0x350],0x0
0x861c: mov r14d,0x1
0x8622: mov r15d,0x11
0x8628: jmp 0x5e0e
0x862d: mov rsi,qword ptr [rbp-0x308]
0x8634: mov rdi,qword ptr [rbp-0x310]
0x863b: xor edx,edx
0x863d: call 0x4e30
0x8642: jmp 0x77c8
0x8658: lea rsi,[rip+0xc942]
0x865f: xor edi,edi
0x8661: mov edx,0x5
0x8666: mov r12,rax
0x8669: call 0x28e0
0x866e: mov r13,rax
0x8671: call 0x2770
0x8676: mov esi,dword ptr [rax]
0x8678: xor edi,edi
0x867a: mov rcx,r12
0x867d: mov rdx,r13
0x8680: xor eax,eax
0x8682: call 0x2cb0
0x8687: mov rdi,qword ptr [rbp-0x330]
0x868e: call 0x2e10
0x8693: jmp 0x6a10
0x8698: mov rsi,qword ptr [rbp-0x310]
0x869f: mov edi,0x4
0x86a4: call 0xeab0
0x86a9: lea rsi,[rip+0xc821]
0x86b0: mov edx,0x5
0x86b5: xor edi,edi
0x86b7: mov r12,rax
0x86ba: call 0x28e0
0x86bf: mov r15,rax
0x86c2: call 0x2770
0x86c7: mov esi,dword ptr [rax]
0x86c9: mov rcx,r12
0x86cc: mov rdx,r15
0x86cf: xor edi,edi
0x86d1: xor eax,eax
0x86d3: xor r12d,r12d
0x86d6: call 0x2cb0
0x86db: jmp 0x79c3
0x86e0: mov rsi,qword ptr [rbp-0x250]
0x86e7: mov rdi,qword ptr [rbp-0x310]
0x86ee: call 0xa680
0x86f3: test rax,rax
0x86f6: mov r12,rax
0x86f9: je 0x8f43
0x86ff: movzx ecx,byte ptr [rbx+0x16]
0x8703: mov rdx,qword ptr [rbp-0x308]
0x870a: mov r8d,0xffffffff
0x8710: mov esi,0xffffff9c
0x8715: mov rdi,rax
0x8718: call 0xa440
0x871d: test eax,eax
0x871f: mov dword ptr [rbp-0x320],eax
0x8725: jle 0x8f68
0x872b: cmp byte ptr [rbx+0x2d],0x1
0x872f: jne 0x873a
0x8731: test r14b,r14b
0x8734: je 0x9319
0x873a: mov rdi,r12
0x873d: call 0x2e10
0x8742: mov rsi,qword ptr [rbp-0x308]
0x8749: mov edi,0x4
0x874e: call 0xeab0
0x8753: lea rsi,[rip+0xc506]
0x875a: xor edi,edi
0x875c: mov edx,0x5
0x8761: mov r12,rax
0x8764: call 0x28e0
0x8769: mov esi,dword ptr [rbp-0x320]
0x876f: mov rdx,rax
0x8772: mov rcx,r12
0x8775: xor edi,edi
0x8777: xor eax,eax
0x8779: call 0x2cb0
0x877e: jmp 0x6a10
0x8783: mov rsi,qword ptr [rbp-0x308]
0x878a: mov edi,0x4
0x878f: call 0xeab0
0x8794: mov edx,0x5
0x8799: mov r13,rax
0x879c: lea rsi,[rip+0xa187]
0x87a3: jmp 0x6f5f
0x87cc: mov rsi,qword ptr [rbp-0x308]
0x87d3: mov edi,0x4
0x87d8: mov byte ptr [rbp-0x358],r9b
0x87df: mov r15d,0x11
0x87e5: call 0xeab0
0x87ea: lea rsi,[rip+0xc58f]
0x87f1: mov r12,rax
0x87f4: mov edx,0x5
0x87f9: xor edi,edi
0x87fb: call 0x28e0
0x8800: mov rdx,r12
0x8803: mov rsi,rax
0x8806: mov edi,0x1
0x880b: xor eax,eax
0x880d: call 0x2c60
0x8812: mov qword ptr [rbp-0x350],0x0
0x881d: movzx r9d,byte ptr [rbp-0x358]
0x8825: jmp 0x5e0e
0x8c33: lea eax,[r13+0x1]
0x8c37: cmp rax,qword ptr [rbp-0x2d8]
0x8c3e: mov rcx,r12
0x8c41: mov rdx,rbx
0x8c44: mov r13,rax
0x8c47: jae 0x964e
0x8d48: lea rsi,[rip+0xc252]
0x8d4f: mov edx,0x5
0x8d54: xor edi,edi
0x8d56: mov r12,rax
0x8d59: call 0x28e0
0x8d5e: mov qword ptr [rbp-0x328],rax
0x8d65: call 0x2770
0x8d6a: mov rdx,qword ptr [rbp-0x328]
0x8d71: mov esi,dword ptr [rax]
0x8d73: mov rcx,r12
0x8d76: xor edi,edi
0x8d78: xor eax,eax
0x8d7a: call 0x2cb0
0x8d7f: xor r8d,r8d
0x8d82: jmp 0x7bd8
0x8d87: movzx r12d,byte ptr [rbx+0x18]
0x8d8c: xor r12d,0x1
0x8d90: jmp 0x71fc
0x8d95: mov byte ptr [rbp-0x315],0x0
0x8d9c: mov r12d,0x1
0x8da2: jmp 0x79a7
0x8da7: mov rax,qword ptr [rbp-0xd0]
0x8dae: cmp qword ptr [rbp-0x160],rax
0x8db5: jne 0x7ca4
0x8dbb: jmp 0x697c
0x8dc0: mov rdi,qword ptr [rbp-0x308]
0x8dc7: call 0x2780
0x8dcc: test eax,eax
0x8dce: jne 0x9a06
0x8dd4: cmp byte ptr [rbx+0x2e],0x0
0x8dd8: je 0x8e13
0x8dda: mov rsi,qword ptr [rbp-0x308]
0x8de1: mov edi,0x4
0x8de6: call 0xeab0
0x8deb: lea rsi,[rip+0xbf8e]
0x8df2: mov r12,rax
0x8df5: mov edx,0x5
0x8dfa: xor edi,edi
0x8dfc: call 0x28e0
0x8e01: mov rdx,r12
0x8e04: mov rsi,rax
0x8e07: mov edi,0x1
0x8e0c: xor eax,eax
0x8e0e: call 0x2c60
0x8e13: movzx r14d,byte ptr [rbx+0x21]
0x8e18: mov eax,dword ptr [rbp-0x35c]
0x8e1e: mov dword ptr [rbp-0x378],eax
0x8e24: test r14b,r14b
0x8e27: je 0x8e6c
0x8e29: mov edx,dword ptr [rbp-0x3a4]
0x8e2f: mov rsi,qword ptr [rbp-0x308]
0x8e36: mov r8,rbx
0x8e39: mov rdi,qword ptr [rbp-0x310]
0x8e40: mov ecx,0x1
0x8e45: call 0x5620
0x8e4a: test al,al
0x8e4c: mov r8d,eax
0x8e4f: mov qword ptr [rbp-0x330],0x0
0x8e5a: je 0x7bd8
0x8eaa: mov eax,esi
0x8ef6: lea rsi,[rip+0xc010]
0x8efd: mov edx,0x5
0x8f02: xor edi,edi
0x8f04: mov r12,rax
0x8f07: call 0x28e0
0x8f0c: mov r8d,dword ptr [rbp-0x328]
0x8f13: mov rdx,rax
0x8f16: mov rcx,r12
0x8f19: xor edi,edi
0x8f1b: xor eax,eax
0x8f1d: mov esi,r8d
0x8f20: call 0x2cb0
0x8f25: movzx r9d,byte ptr [rbp-0x330]
0x8f2d: xor r8d,r8d
0x8f30: mov qword ptr [rbp-0x330],0x0
0x8f3b: mov r14d,r9d
0x8f3e: jmp 0x7bd8
0x8f43: mov rsi,qword ptr [rbp-0x310]
0x8f4a: mov edi,0x4
0x8f4f: call 0xeab0
0x8f54: mov edx,0x5
0x8f59: mov r13,rax
0x8f5c: lea rsi,[rip+0xc085]
0x8f63: jmp 0x6f5f
0x8f68: mov rdi,r12
0x8f6b: call 0x2e10
0x8f70: movzx r8d,byte ptr [rbx+0x25]
0x8f75: test r8b,r8b
0x8f78: jne 0x6b90
0x8f7e: movzx eax,byte ptr [rbx+0x1d]
0x8f82: test al,al
0x8f84: mov byte ptr [rbp-0x320],al
0x8f8a: jne 0x9203
0x8f90: movzx r8d,byte ptr [rbp-0x320]
0x8f98: mov byte ptr [rbp-0x320],0x1
0x8f9f: jmp 0x5fff
0x9150: lea rsi,[rip+0xbe2c]
0x9157: mov edx,0x5
0x915c: xor edi,edi
0x915e: mov r12,rax
0x9161: call 0x28e0
0x9166: mov qword ptr [rbp-0x338],rax
0x916d: call 0x2770
0x9172: mov rdx,qword ptr [rbp-0x338]
0x9179: mov esi,dword ptr [rax]
0x917b: mov rcx,r12
0x917e: xor edi,edi
0x9180: xor eax,eax
0x9182: call 0x2cb0
0x9203: mov edx,dword ptr [rbp-0x260]
0x9209: mov esi,dword ptr [rbp-0x264]
0x920f: mov rdi,qword ptr [rbp-0x308]
0x9216: mov byte ptr [rbp-0x328],r8b
0x921d: call 0x2c00
0x9222: test eax,eax
0x9224: movzx r8d,byte ptr [rbp-0x328]
0x922c: je 0x5fff
0x9232: mov rdi,rbx
0x9235: call 0x5810
0x923a: test al,al
0x923c: movzx r8d,byte ptr [rbp-0x328]
0x9244: je 0x9a44
0x924a: mov byte ptr [rbp-0x320],al
0x9250: jmp 0x5fff
0x9291: movzx r8d,byte ptr [rbx+0x30]
0x9296: test r8b,r8b
0x9299: je 0x9a87
0x929f: mov edx,dword ptr [rbp-0x330]
0x92a5: mov rdi,qword ptr [rbp-0x308]
0x92ac: mov esi,0x41
0x92b1: xor eax,eax
0x92b3: call 0xb6c0
0x92b8: mov r8d,dword ptr [r12]
0x92bc: mov dword ptr [rbp-0x328],eax
0x9319: mov eax,dword ptr [rbp-0x1d8]
0x931f: and eax,0xf000
0x9324: cmp eax,0xa000
0x9329: jne 0x873a
0x932f: or rcx,-0x1
0x9333: mov eax,r14d
0x9336: mov rdi,r12
0x9339: repne scasb al,es:[rdi]
0x933b: mov rsi,qword ptr [rbp-0x1c0]
0x9342: not rcx
0x9345: lea rax,[rcx-0x1]
0x9349: cmp rsi,rax
0x934c: jne 0x873a
0x9352: mov rdi,qword ptr [rbp-0x308]
0x9359: call 0xa680
0x935e: test rax,rax
0x9361: je 0x873a
0x9367: mov rdi,rax
0x936a: mov rsi,r12
0x936d: mov qword ptr [rbp-0x328],rax
0x9374: call 0x2af0
0x9379: mov rdx,qword ptr [rbp-0x328]
0x9380: test eax,eax
0x9382: mov rdi,rdx
0x9385: jne 0x9b82
0x938b: call 0x2e10
0x9390: mov rdi,r12
0x9393: call 0x2e10
0x9398: jmp 0x8f70
0x94b0: lea rsi,[rip+0xbab4]
0x94b7: xor edi,edi
0x94b9: mov edx,0x5
0x94be: mov r12,rax
0x94c1: call 0x28e0
0x94c6: mov qword ptr [rbp-0x338],rax
0x94cd: call 0x2770
0x94d2: mov rdx,qword ptr [rbp-0x338]
0x94d9: mov esi,dword ptr [rax]
0x94db: xor edi,edi
0x94dd: xor eax,eax
0x94df: mov rcx,r12
0x94e2: call 0x2cb0
0x94e7: cmp byte ptr [rbx+0x24],0x0
0x94eb: je 0x9044
0x94f1: jmp 0x8d12
0x9507: lea rsi,[rip+0xb9ef]
0x950e: mov edx,0x5
0x9513: xor edi,edi
0x9515: mov r12,rax
0x9518: call 0x28e0
0x951d: mov qword ptr [rbp-0x330],rax
0x9524: call 0x2770
0x9529: mov rdx,qword ptr [rbp-0x330]
0x9530: mov esi,dword ptr [rax]
0x9532: mov rcx,r12
0x9535: xor edi,edi
0x9537: xor eax,eax
0x9539: call 0x2cb0
0x953e: xor r8d,r8d
0x9541: mov qword ptr [rbp-0x330],0x0
0x954c: jmp 0x8d15
0x960b: lea rsi,[rip+0xb945]
0x9612: mov r12,rax
0x9615: mov edx,0x5
0x961a: xor edi,edi
0x961c: call 0x28e0
0x9621: mov qword ptr [rbp-0x338],rax
0x9628: call 0x2770
0x962d: mov rdx,qword ptr [rbp-0x338]
0x9634: mov esi,dword ptr [rax]
0x9636: mov rcx,r12
0x9639: xor edi,edi
0x963b: xor eax,eax
0x963d: call 0x2cb0
0x9642: jmp 0x8d12
0x971a: mov edx,0x5
0x971f: mov r12,rax
0x9722: lea rsi,[rip+0xb686]
0x9729: jmp 0x961a
0x9761: add rax,0x1
0x9765: mov qword ptr [rbp-0x370],rax
0x976c: jmp 0x8a83
0x97c4: mov edx,dword ptr [rbp-0x320]
0x97ca: mov edi,dword ptr [rbp-0x328]
0x97d0: xor eax,eax
0x97d2: mov esi,0x40049409
0x97d7: call 0x2a10
0x97dc: test eax,eax
0x97de: je 0x902f
0x97e4: cmp dword ptr [rbx+0x38],0x2
0x97e8: jne 0x896c
0x97ee: mov rdx,qword ptr [rbp-0x310]
0x97f5: mov esi,0x4
0x97fa: mov edi,0x1
0x97ff: call 0xe990
0x9804: mov rdx,qword ptr [rbp-0x308]
0x980b: mov esi,0x4
0x9810: xor edi,edi
0x9812: mov r12,rax
0x9815: call 0xe990
0x981a: lea rsi,[rip+0xb70a]
0x9821: mov edx,0x5
0x9826: xor edi,edi
0x9828: mov qword ptr [rbp-0x338],rax
0x982f: call 0x28e0
0x9834: mov qword ptr [rbp-0x330],rax
0x983b: call 0x2770
0x9840: mov rcx,qword ptr [rbp-0x338]
0x9847: mov esi,dword ptr [rax]
0x9849: mov r8,r12
0x984c: mov rdx,qword ptr [rbp-0x330]
0x9853: xor edi,edi
0x9855: xor eax,eax
0x9857: call 0x2cb0
0x985c: xor r8d,r8d
0x985f: mov qword ptr [rbp-0x330],0x0
0x986a: jmp 0x8d15
0x98fe: mov rax,qword ptr [rbp-0x370]
0x9905: lea rdi,[r12+rax]
0x9909: call 0x11020
0x990e: lea rcx,[rax+r12-0x1]
0x9913: xor edx,edx
0x9915: mov qword ptr [rbp-0x330],rax
0x991c: mov rax,rcx
0x991f: div r12
0x9922: sub rcx,rdx
0x9925: cmp dword ptr [rbp-0x348],0x0
0x992c: mov qword ptr [rbp-0x3b0],rcx
0x9933: jne 0x98bf
0x9935: xor r9d,r9d
0x9938: cmp dword ptr [rbx+0xc],0x3
0x993c: lea rax,[rbp-0x2f0]
0x9943: mov qword ptr [rbp-0x348],rax
0x994a: sete r9b
0x994e: jmp 0x9581
0x9974: lea rsi,[rip+0xb5cb]
0x997b: mov r12,rax
0x997e: mov edx,0x5
0x9983: xor edi,edi
0x9985: call 0x28e0
0x998a: mov qword ptr [rbp-0x338],rax
0x9991: call 0x2770
0x9996: mov rdx,qword ptr [rbp-0x338]
0x999d: mov esi,dword ptr [rax]
0x999f: mov rcx,r12
0x99a2: xor edi,edi
0x99a4: xor eax,eax
0x99a6: call 0x2cb0
0x99ab: jmp 0x8d06
0x99c3: mov edx,0x5
0x99c8: mov r12,rax
0x99cb: lea rsi,[rip+0xb206]
0x99d2: jmp 0x961a
0x9a06: mov rsi,qword ptr [rbp-0x308]
0x9a0d: mov edi,0x4
0x9a12: call 0xeab0
0x9a17: lea rsi,[rip+0xb44b]
0x9a1e: mov edx,0x5
0x9a23: xor edi,edi
0x9a25: mov qword ptr [rbp-0x328],rax
0x9a2c: call 0x28e0
0x9a31: mov rcx,qword ptr [rbp-0x328]
0x9a38: mov rdx,rax
0x9a3b: mov esi,dword ptr [r12]
0x9a3f: jmp 0x7bc1
0x9a44: lea rsi,[rip+0x96ad]
0x9a4b: xor edi,edi
0x9a4d: mov edx,0x5
0x9a52: call 0x28e0
0x9a57: mov r12,rax
0x9a5a: call 0x2770
0x9a5f: mov rcx,qword ptr [rbp-0x308]
0x9a66: mov esi,dword ptr [rax]
0x9a68: xor edi,edi
0x9a6a: xor eax,eax
0x9a6c: mov rdx,r12
0x9a6f: call 0x2cb0
0x9a74: movzx r8d,byte ptr [rbx+0x24]
0x9a79: test r8b,r8b
0x9a7c: jne 0x6a10
0x9a82: jmp 0x5fff
0x9a87: mov rsi,qword ptr [rbp-0x308]
0x9a8e: mov edi,0x4
0x9a93: mov byte ptr [rbp-0x328],r8b
0x9a9a: call 0xeab0
0x9a9f: lea rsi,[rip+0xb10a]
0x9aa6: mov r12,rax
0x9aa9: mov edx,0x5
0x9aae: xor edi,edi
0x9ab0: call 0x28e0
0x9ab5: mov rcx,r12
0x9ab8: mov rdx,rax
0x9abb: xor esi,esi
0x9abd: xor edi,edi
0x9abf: xor eax,eax
0x9ac1: call 0x2cb0
0x9ac6: mov qword ptr [rbp-0x330],0x0
0x9ad1: movzx r8d,byte ptr [rbp-0x328]
0x9ad9: jmp 0x7bd8
0x9b4e: mov edx,0x5
0x9b53: mov r12,rax
0x9b56: lea rsi,[rip+0xb242]
0x9b5d: jmp 0x9983
0x9b82: call 0x2e10
0x9b87: jmp 0x873a
0x9be0: cmp r10d,0x2
0x9be4: je 0x9c55
0x9c15: add rsp,0x20
0x9c19: mov rsi,qword ptr [rsp+0x8]
0x9c1e: xor rsi,qword ptr fs:0x28
0x9c27: jne 0x9c74
0x9c29: add rsp,0x18
0x9c2d: ret 
0x9c30: cmp byte ptr [rcx+0x2c],0x0
0x9c34: je 0x9bdb
0x9c36: lea rcx,[rip+0xb433]
0x9c3d: lea rsi,[rip+0xb403]
0x9c44: lea rdi,[rip+0xb0ad]
0x9c4b: mov edx,0xb8a
0x9c50: call 0x29e0
0x9c55: lea rcx,[rip+0xb414]
0x9c5c: lea rsi,[rip+0xb3e4]
0x9c63: lea rdi,[rip+0xb0b6]
0x9c6a: mov edx,0xb8d
0x9c6f: call 0x29e0
0x9c74: call 0x2930
0x9c79: lea rcx,[rip+0xb3f0]
0x9c80: lea rsi,[rip+0xb3c0]
0x9c87: lea rdi,[rip+0xb042]
0x9c8e: mov edx,0xb89
0x9c93: call 0x29e0
0x9c98: lea rcx,[rip+0xb3d1]
0x9c9f: lea rsi,[rip+0xb3a1]
0x9ca6: lea rdi,[rip+0xaffb]
0x9cad: mov edx,0xb88
0x9cb2: call 0x29e0
0x9cb7: lea rcx,[rip+0xb3b2]
0x9cbe: lea rsi,[rip+0xb382]
0x9cc5: lea rdi,[rip+0xafb4]
0x9ccc: mov edx,0xb87
0x9cd1: call 0x29e0
0x9cd6: lea rcx,[rip+0xb393]
0x9cdd: lea rsi,[rip+0xb363]
0x9ce4: lea rdi,[rip+0xb379]
0x9ceb: mov edx,0xb86
0x9cf0: call 0x29e0
0x9cf5: nop word ptr cs:[rax+rax]
0x9cff: nop 
0x9d30: push rbx
0x9d31: mov rbx,rdi
0x9d34: mov rdi,qword ptr [rdi+0x10]
0x9d38: call 0x2e10
0x9d3d: mov rdi,rbx
0x9d40: pop rbx
0x9d41: jmp 0x2e10
0x9db5: call 0x2930
0x9dba: nop word ptr [rax+rax]
0x9dc0: sub rsp,0x28
0x9dc4: mov qword ptr [rsp],rdi
0x9dc8: mov rdi,qword ptr [rip+0x2107a9]
0x9dcf: mov qword ptr [rsp+0x8],rsi
0x9dd4: mov rsi,rsp
0x9dd7: mov rax,qword ptr fs:0x28
0x9de0: mov qword ptr [rsp+0x18],rax
0x9de5: xor eax,eax
0x9de7: call 0xc160
0x9dec: test rax,rax
0x9def: je 0x9e10
0x9df1: mov rax,qword ptr [rax+0x10]
0x9df5: mov rdx,qword ptr [rsp+0x18]
0x9dfa: xor rdx,qword ptr fs:0x28
0x9e03: jne 0x9e14
0x9e05: add rsp,0x28
0x9e09: ret 
0x9e10: xor eax,eax
0x9e12: jmp 0x9df5
0x9e14: call 0x2930
0x9e19: nop dword ptr [rax]
0x9e20: push r13
0x9e22: push r12
0x9e24: mov r13,rdi
0x9e27: push rbp
0x9e28: push rbx
0x9e29: mov edi,0x18
0x9e2e: mov r12,rsi
0x9e31: mov rbp,rdx
0x9e34: sub rsp,0x8
0x9e38: call 0x11020
0x9e3d: mov rdi,r13
0x9e40: mov rbx,rax
0x9e43: call 0x11250
0x9e48: mov rdi,qword ptr [rip+0x210729]
0x9e4f: mov rsi,rbx
0x9e52: mov qword ptr [rbx+0x10],rax
0x9e56: mov qword ptr [rbx],r12
0x9e59: mov qword ptr [rbx+0x8],rbp
0x9e5d: call 0xcbd0
0x9e62: test rax,rax
0x9e65: je 0x9e94
0x9e67: cmp rbx,rax
0x9e6a: mov rbp,rax
0x9e6d: je 0x9e90
0x9e6f: mov rdi,qword ptr [rbx+0x10]
0x9e73: call 0x2e10
0x9e78: mov rdi,rbx
0x9e7b: call 0x2e10
0x9e80: mov rax,qword ptr [rbp+0x10]
0x9e84: add rsp,0x8
0x9e88: pop rbx
0x9e89: pop rbp
0x9e8a: pop r12
0x9e8c: pop r13
0x9e8e: ret 
0x9e90: xor eax,eax
0x9e92: jmp 0x9e84
0x9e94: call 0x11270
0x9e99: nop dword ptr [rax]
0x9edb: nop dword ptr [rax+rax]
0x9ee0: mov rdi,qword ptr [rip+0x210691]
0x9ee7: jmp 0xc620
0xa129: nop dword ptr [rax]
0xa228: call 0x2930
0xa22d: nop dword ptr [rax]
0xa230: mov rax,rsi
0xa233: mov rcx,rdi
0xa236: mov edx,dword ptr [rsi+0x10]
0xa239: mov r8d,dword ptr [rax+0x14]
0xa23d: mov rsi,qword ptr [rsi+0x8]
0xa241: mov edi,dword ptr [rax]
0xa243: jmp 0x2c40
0xa250: push r12
0xa252: push rbp
0xa253: mov rbp,rdi
0xa256: push rbx
0xa257: mov r12,rsi
0xa25a: call 0xb590
0xa25f: sub rax,rbp
0xa262: lea rdi,[rax+0x9]
0xa266: mov rbx,rax
0xa269: cmp rdi,0x100
0xa270: jbe 0xa281
0xa272: call 0x2bc0
0xa277: mov r12,rax
0xa27a: xor eax,eax
0xa27c: test r12,r12
0xa27f: je 0xa2a3
0xa281: mov rdx,rbx
0xa284: mov rsi,rbp
0xa287: mov rdi,r12
0xa28a: call 0x2ca0
0xa28f: movabsq rcx,0x5858585858587543
0xa299: mov byte ptr [rax+0x8],0x0
0xa29d: mov qword ptr [rax],rcx
0xa2a0: mov rax,r12
0xa2a3: pop rbx
0xa2a4: pop rbp
0xa2a5: pop r12
0xa2a7: ret 
0xa2b0: mov rax,rsi
0xa2b3: mov rdx,rdi
0xa2b6: mov esi,dword ptr [rsi+0x8]
0xa2b9: mov rdi,qword ptr [rax]
0xa2bc: jmp 0x2dd0
0xa2d0: push r15
0xa2d2: push r14
0xa2d4: mov r14d,edi
0xa2d7: push r13
0xa2d9: push r12
0xa2db: mov r13,rsi
0xa2de: push rbp
0xa2df: push rbx
0xa2e0: mov rbx,rcx
0xa2e3: mov ebp,edx
0xa2e5: mov r12d,r8d
0xa2e8: sub rsp,0x148
0xa2ef: mov ecx,dword ptr [rsp+0x180]
0xa2f6: mov rax,qword ptr fs:0x28
0xa2ff: mov qword ptr [rsp+0x138],rax
0xa307: xor eax,eax
0xa309: test ecx,ecx
0xa30b: js 0xa3c0
0xa311: cmp r9b,0x1
0xa315: jne 0xa390
0xa317: cmp ecx,0x11
0xa31a: jne 0xa390
0xa31c: lea rax,[rsp+0x30]
0xa321: mov rdi,rbx
0xa324: mov rsi,rax
0xa327: mov qword ptr [rsp],rax
0xa32b: call 0xa250
0xa330: test rax,rax
0xa333: mov r15,rax
0xa336: je 0xa420
0xa33c: lea rdx,[rsp+0x10]
0xa341: lea rcx,[rip-0x118]
0xa348: xor esi,esi
0xa34a: mov r8d,0x6
0xa350: mov rdi,rax
0xa353: mov dword ptr [rsp+0x10],r14d
0xa358: mov qword ptr [rsp+0x18],r13
0xa35d: mov dword ptr [rsp+0x20],ebp
0xa361: mov dword ptr [rsp+0x24],r12d
0xa366: call 0xf720
0xa36b: test eax,eax
0xa36d: je 0xa3e8
0xa36f: call 0x2770
0xa374: mov ecx,dword ptr [rax]
0xa376: cmp r15,qword ptr [rsp]
0xa37a: je 0xa390
0xa37c: mov rdi,r15
0xa37f: mov dword ptr [rsp],ecx
0xa382: call 0x2e10
0xa387: mov ecx,dword ptr [rsp]
0xa38a: nop word ptr [rax+rax]
0xa390: mov rbx,qword ptr [rsp+0x138]
0xa398: xor rbx,qword ptr fs:0x28
0xa3a1: mov eax,ecx
0xa3a3: jne 0xa42c
0xa3a9: add rsp,0x148
0xa3b0: pop rbx
0xa3b1: pop rbp
0xa3b2: pop r12
0xa3b4: pop r13
0xa3b6: pop r14
0xa3b8: pop r15
0xa3ba: ret 
0xa3c0: mov rcx,rbx
0xa3c3: mov dword ptr [rsp],r9d
0xa3c7: call 0x2c40
0xa3cc: test eax,eax
0xa3ce: mov ecx,eax
0xa3d0: je 0xa390
0xa3d2: call 0x2770
0xa3d7: mov r9d,dword ptr [rsp]
0xa3db: mov ecx,dword ptr [rax]
0xa3dd: jmp 0xa311
0xa3e8: mov rcx,rbx
0xa3eb: mov edx,ebp
0xa3ed: mov rsi,r15
0xa3f0: mov edi,ebp
0xa3f2: call 0x2d60
0xa3f7: test eax,eax
0xa3f9: mov ecx,0xffffffff
0xa3fe: je 0xa407
0xa400: call 0x2770
0xa405: mov ecx,dword ptr [rax]
0xa407: xor edx,edx
0xa409: mov rsi,r15
0xa40c: mov edi,ebp
0xa40e: mov dword ptr [rsp+0xc],ecx
0xa412: call 0x27f0
0xa417: mov ecx,dword ptr [rsp+0xc]
0xa41b: jmp 0xa376
0xa420: call 0x2770
0xa425: mov ecx,dword ptr [rax]
0xa427: jmp 0xa390
0xa42c: call 0x2930
0xa431: nop dword ptr [rax+rax]
0xa436: nop word ptr cs:[rax+rax]
0xa440: push r14
0xa442: push r13
0xa444: push r12
0xa446: push rbp
0xa447: mov r12,rdi
0xa44a: push rbx
0xa44b: mov ebp,esi
0xa44d: mov rbx,rdx
0xa450: sub rsp,0x130
0xa457: mov rax,qword ptr fs:0x28
0xa460: mov qword ptr [rsp+0x128],rax
0xa468: xor eax,eax
0xa46a: test r8d,r8d
0xa46d: js 0xa518
0xa473: cmp cl,0x1
0xa476: jne 0xa4e8
0xa478: cmp r8d,0x11
0xa47c: jne 0xa4e8
0xa47e: lea r14,[rsp+0x20]
0xa483: mov rdi,rbx
0xa486: mov rsi,r14
0xa489: call 0xa250
0xa48e: test rax,rax
0xa491: mov r13,rax
0xa494: je 0xa580
0xa49a: lea rdx,[rsp+0x10]
0xa49f: lea rcx,[rip-0x1f6]
0xa4a6: xor esi,esi
0xa4a8: mov r8d,0x6
0xa4ae: mov rdi,rax
0xa4b1: mov qword ptr [rsp+0x10],r12
0xa4b6: mov dword ptr [rsp+0x18],ebp
0xa4ba: call 0xf720
0xa4bf: test eax,eax
0xa4c1: je 0xa540
0xa4c3: call 0x2770
0xa4c8: mov r8d,dword ptr [rax]
0xa4cb: cmp r13,r14
0xa4ce: je 0xa4e8
0xa4d0: mov rdi,r13
0xa4d3: mov dword ptr [rsp+0xc],r8d
0xa4d8: call 0x2e10
0xa4dd: mov r8d,dword ptr [rsp+0xc]
0xa4e2: nop word ptr [rax+rax]
0xa4e8: mov rbx,qword ptr [rsp+0x128]
0xa4f0: xor rbx,qword ptr fs:0x28
0xa4f9: mov eax,r8d
0xa4fc: jne 0xa58d
0xa502: add rsp,0x130
0xa509: pop rbx
0xa50a: pop rbp
0xa50b: pop r12
0xa50d: pop r13
0xa50f: pop r14
0xa511: ret 
0xa518: mov dword ptr [rsp+0xc],ecx
0xa51c: call 0x2dd0
0xa521: test eax,eax
0xa523: mov r8d,eax
0xa526: je 0xa4e8
0xa528: call 0x2770
0xa52d: mov ecx,dword ptr [rsp+0xc]
0xa531: mov r8d,dword ptr [rax]
0xa534: jmp 0xa473
0xa540: mov rcx,rbx
0xa543: mov edx,ebp
0xa545: mov rsi,r13
0xa548: mov edi,ebp
0xa54a: call 0x2d60
0xa54f: test eax,eax
0xa551: mov r8d,0xffffffff
0xa557: je 0xa4cb
0xa55d: call 0x2770
0xa562: mov r8d,dword ptr [rax]
0xa565: xor edx,edx
0xa567: mov rsi,r13
0xa56a: mov edi,ebp
0xa56c: mov dword ptr [rsp+0xc],r8d
0xa571: call 0x27f0
0xa576: mov r8d,dword ptr [rsp+0xc]
0xa57b: jmp 0xa4cb
0xa580: call 0x2770
0xa585: mov r8d,dword ptr [rax]
0xa588: jmp 0xa4e8
0xa58d: call 0x2930
0xa592: nop word ptr cs:[rax+rax]
0xa59c: nop dword ptr [rax]
0xa5c3: lea rsi,[rip+0xa9b9]
0xa5ca: mov edx,0x5
0xa5cf: xor edi,edi
0xa5d1: mov r12,rax
0xa5d4: call 0x28e0
0xa5d9: mov rbp,rax
0xa5dc: call 0x2770
0xa5e1: mov esi,dword ptr [rax]
0xa5e3: mov rcx,r12
0xa5e6: mov rdx,rbp
0xa5e9: xor edi,edi
0xa5eb: xor eax,eax
0xa5ed: call 0x2cb0
0xa608: mov rbp,rax
0xa60b: call 0x2770
0xa610: mov esi,dword ptr [rax]
0xa612: lea rdx,[rip+0xab74]
0xa619: mov rcx,rbp
0xa61c: xor eax,eax
0xa61e: xor edi,edi
0xa620: call 0x2cb0
0xa625: mov eax,ebx
0xa627: pop rbx
0xa628: pop rbp
0xa629: pop r12
0xa62b: ret 
0xa64a: lea rsi,[rip+0x82d9]
0xa651: mov edx,0x5
0xa656: xor edi,edi
0xa658: mov r12,rax
0xa65b: call 0x28e0
0xa660: mov rbp,rax
0xa663: call 0x2770
0xa668: mov esi,dword ptr [rax]
0xa66a: mov rcx,r12
0xa66d: mov rdx,rbp
0xa670: xor edi,edi
0xa672: xor eax,eax
0xa674: call 0x2cb0
0xa680: push r15
0xa682: push r14
0xa684: mov eax,0x401
0xa689: push r13
0xa68b: push r12
0xa68d: mov r13,rdi
0xa690: push rbp
0xa691: push rbx
0xa692: lea rbx,[rsi+0x1]
0xa696: movabsq r14,0x3fffffffffffffff
0xa6a0: movabsq r15,0x7ffffffffffffffe
0xa6aa: sub rsp,0x8
0xa6ae: cmp rsi,0x401
0xa6b5: cmovae rbx,rax
0xa6b9: nop dword ptr [rax]
0xa6c0: mov rdi,rbx
0xa6c3: call 0x2bc0
0xa6c8: test rax,rax
0xa6cb: mov rbp,rax
0xa6ce: je 0xa70b
0xa6d0: mov rdx,rbx
0xa6d3: mov rsi,rax
0xa6d6: mov rdi,r13
0xa6d9: call 0x2810
0xa6de: test rax,rax
0xa6e1: mov r12,rax
0xa6e4: js 0xa738
0xa6e6: cmp rbx,r12
0xa6e9: ja 0xa750
0xa6eb: mov rdi,rbp
0xa6ee: call 0x2e10
0xa6f3: cmp rbx,r14
0xa6f6: ja 0xa720
0xa6f8: add rbx,rbx
0xa6fb: mov rdi,rbx
0xa6fe: call 0x2bc0
0xa703: test rax,rax
0xa706: mov rbp,rax
0xa709: jne 0xa6d0
0xa70b: add rsp,0x8
0xa70f: mov rax,rbp
0xa712: pop rbx
0xa713: pop rbp
0xa714: pop r12
0xa716: pop r13
0xa718: pop r14
0xa71a: pop r15
0xa71c: ret 
0xa720: cmp rbx,r15
0xa723: ja 0xa760
0xa725: movabsq rbx,0x7fffffffffffffff
0xa72f: jmp 0xa6c0
0xa738: call 0x2770
0xa73d: cmp dword ptr [rax],0x22
0xa740: je 0xa6e6
0xa742: mov rdi,rbp
0xa745: xor ebp,ebp
0xa747: call 0x2e10
0xa74c: jmp 0xa70b
0xa750: mov byte ptr [rbp+r12],0x0
0xa756: jmp 0xa70b
0xa760: call 0x2770
0xa765: xor ebp,ebp
0xa767: mov dword ptr [rax],0xc
0xa76d: jmp 0xa70b
0xa770: mov edi,0x1
0xa775: jmp 0x4220
0xa780: push r15
0xa782: push r14
0xa784: mov r15,rsi
0xa787: push r13
0xa789: push r12
0xa78b: mov r13,rcx
0xa78e: push rbp
0xa78f: push rbx
0xa790: mov rbp,rdx
0xa793: sub rsp,0x28
0xa797: mov qword ptr [rsp+0x8],rdi
0xa79c: mov qword ptr [rsp+0x18],rdx
0xa7a1: call 0x2900
0xa7a6: mov r14,qword ptr [r15]
0xa7a9: mov qword ptr [rsp],-0x1
0xa7b1: test r14,r14
0xa7b4: je 0xa86d
0xa7ba: mov r12,rax
0xa7bd: mov byte ptr [rsp+0x17],0x0
0xa7c2: xor ebx,ebx
0xa7c4: jmp 0xa817
0xa7d0: mov rax,qword ptr [rsp+0x18]
0xa7d5: test rax,rax
0xa7d8: je 0xa880
0xa7de: mov rdi,qword ptr [rsp]
0xa7e2: mov rdx,r13
0xa7e5: mov rsi,rbp
0xa7e8: imul rdi,r13
0xa7ec: add rdi,rax
0xa7ef: call 0x2a90
0xa7f4: test eax,eax
0xa7f6: movzx eax,byte ptr [rsp+0x17]
0xa7fb: mov ecx,0x1
0xa800: cmovne eax,ecx
0xa803: mov byte ptr [rsp+0x17],al
0xa807: add rbx,0x1
0xa80b: add rbp,r13
0xa80e: mov r14,qword ptr [r15+rbx*8]
0xa812: test r14,r14
0xa815: je 0xa858
0xa817: mov rsi,qword ptr [rsp+0x8]
0xa81c: mov rdx,r12
0xa81f: mov rdi,r14
0xa822: call 0x2790
0xa827: test eax,eax
0xa829: jne 0xa807
0xa82b: mov rdi,r14
0xa82e: call 0x2900
0xa833: cmp rax,r12
0xa836: je 0xa890
0xa838: cmp qword ptr [rsp],-0x1
0xa83d: jne 0xa7d0
0xa83f: mov qword ptr [rsp],rbx
0xa843: add rbx,0x1
0xa847: add rbp,r13
0xa84a: mov r14,qword ptr [r15+rbx*8]
0xa84e: test r14,r14
0xa851: jne 0xa817
0xa853: nop dword ptr [rax+rax]
0xa858: cmp byte ptr [rsp+0x17],0x0
0xa85d: mov rax,-0x2
0xa864: cmove rax,qword ptr [rsp]
0xa869: mov qword ptr [rsp],rax
0xa86d: mov rax,qword ptr [rsp]
0xa871: add rsp,0x28
0xa875: pop rbx
0xa876: pop rbp
0xa877: pop r12
0xa879: pop r13
0xa87b: pop r14
0xa87d: pop r15
0xa87f: ret 
0xa880: mov byte ptr [rsp+0x17],0x1
0xa885: jmp 0xa807
0xa890: mov qword ptr [rsp],rbx
0xa894: jmp 0xa86d
0xa8a0: cmp rdx,-0x1
0xa8a4: push r12
0xa8a6: mov edx,0x5
0xa8ab: push rbp
0xa8ac: mov r12,rsi
0xa8af: push rbx
0xa8b0: mov rbp,rdi
0xa8b3: je 0xa900
0xa8b5: lea rsi,[rip+0xa895]
0xa8bc: xor edi,edi
0xa8be: call 0x28e0
0xa8c3: mov rbx,rax
0xa8c6: mov rsi,rbp
0xa8c9: mov edi,0x1
0xa8ce: call 0xed60
0xa8d3: mov rdx,r12
0xa8d6: mov rbp,rax
0xa8d9: mov esi,0x8
0xa8de: xor edi,edi
0xa8e0: call 0xe990
0xa8e5: mov r8,rbp
0xa8e8: mov rdx,rbx
0xa8eb: mov rcx,rax
0xa8ee: pop rbx
0xa8ef: pop rbp
0xa8f0: pop r12
0xa8f2: xor esi,esi
0xa8f4: xor edi,edi
0xa8f6: xor eax,eax
0xa8f8: jmp 0x2cb0
0xa900: lea rsi,[rip+0xa82f]
0xa907: xor edi,edi
0xa909: call 0x28e0
0xa90e: mov rbx,rax
0xa911: jmp 0xa8c6
0xa920: push r15
0xa922: push r14
0xa924: mov r14,rdi
0xa927: push r13
0xa929: push r12
0xa92b: xor edi,edi
0xa92d: push rbp
0xa92e: push rbx
0xa92f: mov rbp,rsi
0xa932: lea rsi,[rip+0xa835]
0xa939: mov r12,rdx
0xa93c: mov edx,0x5
0xa941: sub rsp,0x8
0xa945: mov rbx,qword ptr [rip+0x20f794]
0xa94c: call 0x28e0
0xa951: mov rdi,rax
0xa954: mov rsi,rbx
0xa957: call 0x2ab0
0xa95c: mov r15,qword ptr [r14]
0xa95f: test r15,r15
0xa962: je 0xa9f8
0xa968: xor r13d,r13d
0xa96b: xor ebx,ebx
0xa96d: jmp 0xa9a8
0xa970: mov rdi,r15
0xa973: add rbx,0x1
0xa977: mov r13,rbp
0xa97a: call 0xed80
0xa97f: mov rdi,qword ptr [rip+0x20f75a]
0xa986: lea rdx,[rip+0xa7f6]
0xa98d: mov rcx,rax
0xa990: mov esi,0x1
0xa995: xor eax,eax
0xa997: add rbp,r12
0xa99a: call 0x2db0
0xa99f: mov r15,qword ptr [r14+rbx*8]
0xa9a3: test r15,r15
0xa9a6: je 0xa9f8
0xa9a8: test rbx,rbx
0xa9ab: je 0xa970
0xa9ad: mov rdx,r12
0xa9b0: mov rsi,rbp
0xa9b3: mov rdi,r13
0xa9b6: call 0x2a90
0xa9bb: test eax,eax
0xa9bd: jne 0xa970
0xa9bf: mov rdi,r15
0xa9c2: add rbx,0x1
0xa9c6: add rbp,r12
0xa9c9: call 0xed80
0xa9ce: mov rdi,qword ptr [rip+0x20f70b]
0xa9d5: lea rdx,[rip+0xa7af]
0xa9dc: mov rcx,rax
0xa9df: mov esi,0x1
0xa9e4: xor eax,eax
0xa9e6: call 0x2db0
0xa9eb: mov r15,qword ptr [r14+rbx*8]
0xa9ef: test r15,r15
0xa9f2: jne 0xa9a8
0xa9f4: nop dword ptr [rax]
0xa9f8: mov rdi,qword ptr [rip+0x20f6e1]
0xa9ff: mov rax,qword ptr [rdi+0x28]
0xaa03: cmp rax,qword ptr [rdi+0x30]
0xaa07: jae 0xaa28
0xaa09: lea rdx,[rax+0x1]
0xaa0d: mov qword ptr [rdi+0x28],rdx
0xaa11: mov byte ptr [rax],0xa
0xaa14: add rsp,0x8
0xaa18: pop rbx
0xaa19: pop rbp
0xaa1a: pop r12
0xaa1c: pop r13
0xaa1e: pop r14
0xaa20: pop r15
0xaa22: ret 
0xaa28: add rsp,0x8
0xaa2c: mov esi,0xa
0xaa31: pop rbx
0xaa32: pop rbp
0xaa33: pop r12
0xaa35: pop r13
0xaa37: pop r14
0xaa39: pop r15
0xaa3b: jmp 0x2990
0xaa40: push r15
0xaa42: push r14
0xaa44: mov r14,rdi
0xaa47: push r13
0xaa49: push r12
0xaa4b: mov r12,rsi
0xaa4e: push rbp
0xaa4f: push rbx
0xaa50: mov rbp,rcx
0xaa53: mov rbx,rdx
0xaa56: mov rcx,r8
0xaa59: mov rdx,rbp
0xaa5c: sub rsp,0x8
0xaa60: mov rsi,rbx
0xaa63: mov rdi,r12
0xaa66: mov r15,r8
0xaa69: mov r13,r9
0xaa6c: call 0xa780
0xaa71: test rax,rax
0xaa74: js 0xaa85
0xaa76: add rsp,0x8
0xaa7a: pop rbx
0xaa7b: pop rbp
0xaa7c: pop r12
0xaa7e: pop r13
0xaa80: pop r14
0xaa82: pop r15
0xaa84: ret 
0xaa85: mov rdx,rax
0xaa88: mov rsi,r12
0xaa8b: mov rdi,r14
0xaa8e: call 0xa8a0
0xaa93: mov rdx,r15
0xaa96: mov rsi,rbp
0xaa99: mov rdi,rbx
0xaa9c: call 0xa920
0xaaa1: call r13
0xaaa4: mov rax,-0x1
0xaaab: jmp 0xaa76
0xaab0: push r14
0xaab2: push r13
0xaab4: push r12
0xaab6: push rbp
0xaab7: push rbx
0xaab8: mov r14,qword ptr [rsi]
0xaabb: test r14,r14
0xaabe: je 0xaaf1
0xaac0: mov r12,rcx
0xaac3: mov r13,rdi
0xaac6: mov rbp,rdx
0xaac9: lea rbx,[rsi+0x8]
0xaacd: jmp 0xaadf
0xaad0: mov r14,qword ptr [rbx]
0xaad3: add rbp,r12
0xaad6: add rbx,0x8
0xaada: test r14,r14
0xaadd: je 0xaaf1
0xaadf: mov rdx,r12
0xaae2: mov rsi,rbp
0xaae5: mov rdi,r13
0xaae8: call 0x2a90
0xaaed: test eax,eax
0xaaef: jne 0xaad0
0xaaf1: pop rbx
0xaaf2: mov rax,r14
0xaaf5: pop rbp
0xaaf6: pop r12
0xaaf8: pop r13
0xaafa: pop r14
0xaafc: ret 
0xab50: push r15
0xab52: push r14
0xab54: push r13
0xab56: push r12
0xab58: push rbp
0xab59: push rbx
0xab5a: mov rbx,rsi
0xab5d: sub rsp,0x88
0xab64: mov dword ptr [rsp+0x64],edi
0xab68: mov rdi,rsi
0xab6b: mov qword ptr [rsp+0x10],rsi
0xab70: mov dword ptr [rsp+0x20],edx
0xab74: mov byte ptr [rsp+0x63],cl
0xab78: mov rax,qword ptr fs:0x28
0xab81: mov qword ptr [rsp+0x78],rax
0xab86: xor eax,eax
0xab88: call 0xb590
0xab8d: mov rdi,rax
0xab90: mov r14,rax
0xab93: call 0x2900
0xab98: mov rdi,qword ptr [rip+0x20f9e1]
0xab9f: sub r14,rbx
0xaba2: add rax,r14
0xaba5: mov qword ptr [rsp+0x18],rax
0xabaa: test rdi,rdi
0xabad: je 0xb134
0xabb3: call 0x2900
0xabb8: mov rsi,qword ptr [rsp+0x18]
0xabbd: add rax,0x1
0xabc1: cmp rax,0x9
0xabc5: mov qword ptr [rsp+0x50],rax
0xabca: lea rdx,[rsi+0x1]
0xabce: mov rsi,rax
0xabd1: mov eax,0x9
0xabd6: cmovae rax,rsi
0xabda: add rax,rdx
0xabdd: mov qword ptr [rsp+0x38],rdx
0xabe2: mov rdi,rax
0xabe5: mov qword ptr [rsp+0x40],rax
0xabea: call 0x2bc0
0xabef: test rax,rax
0xabf2: mov r15,rax
0xabf5: je 0xaee0
0xabfb: lea rax,[rsp+0x74]
0xac00: mov dword ptr [rsp+0x74],0xffffffff
0xac08: mov qword ptr [rsp+0x48],0x0
0xac11: xor r13d,r13d
0xac14: mov qword ptr [rsp+0x68],rax
0xac19: mov rdx,qword ptr [rsp+0x38]
0xac1e: mov rsi,qword ptr [rsp+0x10]
0xac23: mov rdi,r15
0xac26: call 0x2b60
0xac2b: cmp dword ptr [rsp+0x20],0x1
0xac30: je 0xaf10
0xac36: lea rbp,[r15+r14]
0xac3a: mov rdi,rbp
0xac3d: call 0xb5f0
0xac42: test r13,r13
0xac45: mov r12,rax
0xac48: je 0xaff0
0xac4e: mov rdi,r13
0xac51: call 0x2a40
0xac56: mov rax,qword ptr [rsp+0x40]
0xac5b: mov qword ptr [rsp+0x28],0x1
0xac64: mov dword ptr [rsp+0x24],0x2
0xac6c: mov qword ptr [rsp+0x30],rax
0xac71: lea rax,[r12+0x4]
0xac76: mov qword ptr [rsp+0x8],rax
0xac7b: nop dword ptr [rax+rax]
0xac80: mov rdi,r13
0xac83: call 0x2bb0
0xac88: test rax,rax
0xac8b: je 0xae40
0xac91: lea rbx,[rax+0x13]
0xac95: mov rdi,rbx
0xac98: call 0x2900
0xac9d: cmp rax,qword ptr [rsp+0x8]
0xaca2: jb 0xac80
0xaca4: lea rbp,[r12+0x2]
0xaca9: lea rdi,[r15+r14]
0xacad: mov rsi,rbx
0xacb0: mov rdx,rbp
0xacb3: call 0x2a90
0xacb8: test eax,eax
0xacba: jne 0xac80
0xacbc: add rbx,rbp
0xacbf: movzx eax,byte ptr [rbx]
0xacc2: lea edx,[rax-0x31]
0xacc5: cmp dl,0x8
0xacc8: ja 0xac80
0xacca: cmp al,0x39
0xaccc: movsx eax,byte ptr [rbx+0x1]
0xacd0: mov ebp,0x1
0xacd5: sete r8b
0xacd9: mov ecx,eax
0xacdb: sub eax,0x30
0xacde: cmp eax,0x9
0xace1: ja 0xad03
0xace3: nop dword ptr [rax+rax]
0xace8: cmp cl,0x39
0xaceb: sete al
0xacee: add rbp,0x1
0xacf2: and r8d,eax
0xacf5: movsx eax,byte ptr [rbx+rbp]
0xacf9: mov ecx,eax
0xacfb: sub eax,0x30
0xacfe: cmp eax,0x9
0xad01: jbe 0xace8
0xad03: cmp cl,0x7e
0xad06: jne 0xac80
0xad0c: cmp byte ptr [rbx+rbp+0x1],0x0
0xad11: jne 0xac80
0xad17: mov rdx,qword ptr [rsp+0x28]
0xad1c: cmp rdx,rbp
0xad1f: jb 0xad4c
0xad21: mov byte ptr [rsp+0x58],r8b
0xad26: jne 0xac80
0xad2c: mov rax,qword ptr [rsp+0x18]
0xad31: mov rsi,rbx
0xad34: lea rdi,[r15+rax+0x2]
0xad39: call 0x2a90
0xad3e: test eax,eax
0xad40: movzx r8d,byte ptr [rsp+0x58]
0xad46: jg 0xac80
0xad4c: movzx esi,r8b
0xad50: movzx r9d,r8b
0xad54: mov dword ptr [rsp+0x24],esi
0xad58: mov rsi,qword ptr [rsp+0x18]
0xad5d: lea rax,[r9+rbp]
0xad61: mov qword ptr [rsp+0x28],rax
0xad66: lea rcx,[rsi+rax+0x4]
0xad6b: cmp rcx,qword ptr [rsp+0x30]
0xad70: jbe 0xb0a8
0xad76: mov edx,0x2
0xad7b: xor esi,esi
0xad7d: mov rax,rdx
0xad80: mul rcx
0xad83: jo 0xb153
0xad89: test rax,rax
0xad8c: js 0xb040
0xad92: test rsi,rsi
0xad95: jne 0xb040
0xad9b: lea rax,[rcx+rcx]
0xad9f: mov qword ptr [rsp+0x30],rax
0xada4: mov rsi,qword ptr [rsp+0x30]
0xada9: mov rdi,r15
0xadac: mov qword ptr [rsp+0x58],r9
0xadb1: call 0x2c20
0xadb6: test rax,rax
0xadb9: mov r8,rax
0xadbc: mov r9,qword ptr [rsp+0x58]
0xadc1: je 0xb050
0xadc7: mov rax,qword ptr [rsp+0x18]
0xadcc: lea rdx,[rbp+0x2]
0xadd0: mov qword ptr [rsp+0x58],r8
0xadd5: mov rsi,rbx
0xadd8: add rax,r8
0xaddb: mov r8d,0x7e2e
0xade1: lea rcx,[rax+r9+0x2]
0xade6: mov word ptr [rax],r8w
0xadea: mov byte ptr [rax+0x2],0x30
0xadee: mov rdi,rcx
0xadf1: call 0x2b60
0xadf6: add rbp,rax
0xadf9: mov r8,qword ptr [rsp+0x58]
0xadfe: movzx edx,byte ptr [rbp-0x1]
0xae02: lea rax,[rbp-0x1]
0xae06: cmp dl,0x39
0xae09: jne 0xae1f
0xae0b: nop dword ptr [rax+rax]
0xae10: mov byte ptr [rax],0x30
0xae13: sub rax,0x1
0xae17: movzx edx,byte ptr [rax]
0xae1a: cmp dl,0x39
0xae1d: je 0xae10
0xae1f: add edx,0x1
0xae22: mov rdi,r13
0xae25: mov r15,r8
0xae28: mov byte ptr [rax],dl
0xae2a: call 0x2bb0
0xae2f: test rax,rax
0xae32: jne 0xac91
0xae38: nop dword ptr [rax+rax]
0xae40: mov eax,dword ptr [rsp+0x24]
0xae44: cmp eax,0x2
0xae47: je 0xaf30
0xae4d: cmp eax,0x3
0xae50: je 0xb050
0xae56: cmp eax,0x1
0xae59: je 0xaf60
0xae5f: cmp byte ptr [rsp+0x63],0x0
0xae64: je 0xb11e
0xae6a: mov edx,dword ptr [rsp+0x74]
0xae6e: lea rcx,[r15+r14]
0xae72: test edx,edx
0xae74: jns 0xae89
0xae76: mov dword ptr [rsp+0x74],0xffffff9c
0xae7e: mov rcx,r15
0xae81: mov edx,0xffffff9c
0xae86: xor r14d,r14d
0xae89: xor r8d,r8d
0xae8c: cmp dword ptr [rsp+0x20],0x1
0xae91: mov rsi,qword ptr [rsp+0x10]
0xae96: mov edi,0xffffff9c
0xae9b: setne r8b
0xae9f: call 0xeda0
0xaea4: test eax,eax
0xaea6: je 0xb11e
0xaeac: call 0x2770
0xaeb1: mov ebp,dword ptr [rax]
0xaeb3: cmp ebp,0x11
0xaeb6: je 0xac19
0xaebc: test r13,r13
0xaebf: mov rbx,rax
0xaec2: je 0xaecc
0xaec4: mov rdi,r13
0xaec7: call 0x2a60
0xaecc: mov rdi,r15
0xaecf: xor r15d,r15d
0xaed2: call 0x2e10
0xaed7: mov dword ptr [rbx],ebp
0xaed9: nop dword ptr [rax]
0xaee0: mov rsi,qword ptr [rsp+0x78]
0xaee5: xor rsi,qword ptr fs:0x28
0xaeee: mov rax,r15
0xaef1: jne 0xb15d
0xaef7: add rsp,0x88
0xaefe: pop rbx
0xaeff: pop rbp
0xaf00: pop r12
0xaf02: pop r13
0xaf04: pop r14
0xaf06: pop r15
0xaf08: ret 
0xaf10: mov rax,qword ptr [rsp+0x18]
0xaf15: mov rdx,qword ptr [rsp+0x50]
0xaf1a: mov rsi,qword ptr [rip+0x20f65f]
0xaf21: lea rdi,[r15+rax]
0xaf25: call 0x2b60
0xaf2a: jmp 0xae5f
0xaf30: cmp dword ptr [rsp+0x20],0x2
0xaf35: jne 0xaf60
0xaf37: mov rax,qword ptr [rsp+0x18]
0xaf3c: mov rdx,qword ptr [rsp+0x50]
0xaf41: mov rsi,qword ptr [rip+0x20f638]
0xaf48: lea rdi,[r15+rax]
0xaf4c: call 0x2b60
0xaf51: mov dword ptr [rsp+0x20],0x1
0xaf59: nop dword ptr [rax]
0xaf60: mov rdi,r15
0xaf63: call 0xb590
0xaf68: mov rdi,rax
0xaf6b: mov rbx,rax
0xaf6e: call 0xb5f0
0xaf73: cmp rax,0xe
0xaf77: mov rbp,rax
0xaf7a: jbe 0xae5f
0xaf80: cmp qword ptr [rsp+0x48],0x0
0xaf86: jne 0xb070
0xaf8c: mov edi,dword ptr [rsp+0x74]
0xaf90: mov dword ptr [rsp+0x8],edi
0xaf94: call 0x2770
0xaf99: mov edi,dword ptr [rsp+0x8]
0xaf9d: mov r12,rax
0xafa0: test edi,edi
0xafa2: js 0xb0e2
0xafa8: mov dword ptr [rax],0x0
0xafae: mov esi,0x3
0xafb3: call 0x2b10
0xafb8: mov ecx,dword ptr [r12]
0xafbc: xor edx,edx
0xafbe: test ecx,ecx
0xafc0: sete dl
0xafc3: sub rax,rdx
0xafc6: test rax,rax
0xafc9: mov qword ptr [rsp+0x48],rax
0xafce: jns 0xb070
0xafd4: cmp rax,-0x1
0xafd8: jne 0xb145
0xafde: mov qword ptr [rsp+0x48],-0x1
0xafe7: jmp 0xae5f
0xaff0: mov rcx,qword ptr [rsp+0x68]
0xaff5: mov edi,dword ptr [rsp+0x64]
0xaff9: mov r9d,0x2e
0xafff: xor edx,edx
0xb001: movzx ebx,word ptr [rbp]
0xb005: mov rsi,r15
0xb008: mov word ptr [rbp],r9w
0xb00d: call 0xcf10
0xb012: test rax,rax
0xb015: mov r13,rax
0xb018: lea rdx,[rbp+r12]
0xb01d: je 0xb0b0
0xb023: mov word ptr [rbp],bx
0xb027: mov dword ptr [rdx],0x7e317e2e
0xb02d: mov byte ptr [rdx+0x4],0x0
0xb031: jmp 0xac56
0xb040: mov qword ptr [rsp+0x30],rcx
0xb045: jmp 0xada4
0xb050: mov rdi,r15
0xb053: xor r15d,r15d
0xb056: call 0x2e10
0xb05b: call 0x2770
0xb060: mov dword ptr [rax],0xc
0xb066: jmp 0xaee0
0xb070: cmp rbp,qword ptr [rsp+0x48]
0xb075: jbe 0xae5f
0xb07b: mov rax,qword ptr [rsp+0x18]
0xb080: mov rsi,qword ptr [rsp+0x48]
0xb085: add rax,r15
0xb088: lea rdx,[rsi-0x1]
0xb08c: sub rax,rbx
0xb08f: cmp rax,rsi
0xb092: cmovae rax,rdx
0xb096: mov byte ptr [rbx+rax],0x7e
0xb09a: mov byte ptr [rbx+rax+0x1],0x0
0xb09f: jmp 0xae5f
0xb0a8: mov r8,r15
0xb0ab: jmp 0xadc7
0xb0b0: mov qword ptr [rsp+0x8],rdx
0xb0b5: call 0x2770
0xb0ba: cmp dword ptr [rax],0xc
0xb0bd: mov rdx,qword ptr [rsp+0x8]
0xb0c2: mov word ptr [rbp],bx
0xb0c6: mov dword ptr [rdx],0x7e317e2e
0xb0cc: mov byte ptr [rdx+0x4],0x0
0xb0d0: sete al
0xb0d3: movzx eax,al
0xb0d6: add eax,0x2
0xb0d9: mov dword ptr [rsp+0x24],eax
0xb0dd: jmp 0xae40
0xb0e2: movzx edx,word ptr [rbx]
0xb0e5: mov esi,0x2e
0xb0ea: mov rdi,r15
0xb0ed: mov word ptr [rbx],si
0xb0f0: mov dword ptr [rax],0x0
0xb0f6: mov esi,0x3
0xb0fb: mov dword ptr [rsp+0x8],edx
0xb0ff: call 0x2880
0xb104: mov edi,dword ptr [r12]
0xb108: mov edx,dword ptr [rsp+0x8]
0xb10c: xor ecx,ecx
0xb10e: test edi,edi
0xb110: mov word ptr [rbx],dx
0xb113: sete cl
0xb116: sub rax,rcx
0xb119: jmp 0xafc6
0xb11e: test r13,r13
0xb121: je 0xaee0
0xb127: mov rdi,r13
0xb12a: call 0x2a60
0xb12f: jmp 0xaee0
0xb134: call 0xab00
0xb139: mov rdi,qword ptr [rip+0x20f440]
0xb140: jmp 0xabb3
0xb145: mov qword ptr [rsp+0x48],0xe
0xb14e: jmp 0xb07b
0xb153: mov esi,0x1
0xb158: jmp 0xad89
0xb15d: call 0x2930
0xb162: nop word ptr cs:[rax+rax]
0xb16c: nop dword ptr [rax]
0xb170: mov ecx,0x1
0xb175: jmp 0xab50
0xb180: sub rsp,0x8
0xb184: mov r9,qword ptr [rip+0x20ee9d]
0xb18b: lea rdx,[rip+0x20e7ee]
0xb192: lea rcx,[rip+0xa047]
0xb199: mov r8d,0x4
0xb19f: call 0xaa40
0xb1a4: lea rdx,[rip+0xa035]
0xb1ab: mov eax,dword ptr [rdx+rax*4]
0xb1ae: add rsp,0x8
0xb1b2: ret 
0xb1c0: sub rsp,0x8
0xb1c4: xor ecx,ecx
0xb1c6: call 0xab50
0xb1cb: test rax,rax
0xb1ce: je 0xb1d5
0xb1d0: add rsp,0x8
0xb1d4: ret 
0xb1d5: call 0x11270
0xb1da: nop word ptr [rax+rax]
0xb1e0: test rsi,rsi
0xb1e3: je 0xb1f0
0xb1e5: cmp byte ptr [rsi],0x0
0xb1e8: je 0xb1f0
0xb1ea: jmp 0xb180
0xb1f0: mov eax,0x2
0xb1f5: ret 
0xb200: test rsi,rsi
0xb203: je 0xb20a
0xb205: cmp byte ptr [rsi],0x0
0xb208: jne 0xb232
0xb20a: lea rdi,[rip+0x9f97]
0xb211: sub rsp,0x8
0xb215: call 0x2740
0xb21a: test rax,rax
0xb21d: je 0xb240
0xb21f: cmp byte ptr [rax],0x0
0xb222: je 0xb240
0xb224: lea rdi,[rip+0x9f7c]
0xb22b: mov rsi,rax
0xb22e: add rsp,0x8
0xb232: jmp 0xb180
0xb240: mov eax,0x2
0xb245: add rsp,0x8
0xb249: ret 
0xb2c0: mov qword ptr [rip+0x20f2c1],rdi
0xb2c7: ret 
0xb2d0: push r12
0xb2d2: push rbp
0xb2d3: push rbx
0xb2d4: mov rbx,qword ptr [rip+0x20edd5]
0xb2db: mov rdi,rbx
0xb2de: call 0x11390
0xb2e3: test rax,rax
0xb2e6: jne 0xb388
0xb2ec: mov rdi,rbx
0xb2ef: call 0x11520
0xb2f4: test eax,eax
0xb2f6: jne 0xb328
0xb2f8: pop rbx
0xb2f9: pop rbp
0xb2fa: pop r12
0xb2fc: jmp 0xb400
0xb308: call 0x11350
0xb30d: test eax,eax
0xb30f: mov rdi,qword ptr [rip+0x20ed9a]
0xb316: je 0xb3a6
0xb31c: call 0x11520
0xb321: nop dword ptr [rax]
0xb328: lea rsi,[rip+0x9ed1]
0xb32f: xor edi,edi
0xb331: mov edx,0x5
0xb336: call 0x28e0
0xb33b: mov rbx,qword ptr [rip+0x20f246]
0xb342: mov r12,rax
0xb345: call 0x2770
0xb34a: mov rbp,rax
0xb34d: test rbx,rbx
0xb350: je 0xb3c0
0xb352: mov rdi,rbx
0xb355: call 0xeb80
0xb35a: mov esi,dword ptr [rbp]
0xb35d: lea rdx,[rip+0x9eaf]
0xb364: mov rcx,rax
0xb367: mov r8,r12
0xb36a: xor edi,edi
0xb36c: xor eax,eax
0xb36e: call 0x2cb0
0xb373: call 0xb400
0xb378: mov edi,dword ptr [rip+0x20ecb2]
0xb37e: call 0x27a0
0xb383: nop dword ptr [rax+rax]
0xb388: xor esi,esi
0xb38a: mov rdi,rbx
0xb38d: mov edx,0x1
0xb392: call 0x113c0
0xb397: test eax,eax
0xb399: mov rdi,qword ptr [rip+0x20ed10]
0xb3a0: je 0xb308
0xb3a6: call 0x11520
0xb3ab: test eax,eax
0xb3ad: jne 0xb328
0xb3b3: pop rbx
0xb3b4: pop rbp
0xb3b5: pop r12
0xb3b7: jmp 0xb400
0xb3c0: mov esi,dword ptr [rax]
0xb3c2: lea rdx,[rip+0x9dc4]
0xb3c9: mov rcx,r12
0xb3cc: xor edi,edi
0xb3ce: xor eax,eax
0xb3d0: call 0x2cb0
0xb3d5: jmp 0xb373
0xb3e0: mov qword ptr [rip+0x20f1b1],rdi
0xb3e7: ret 
0xb3f0: mov byte ptr [rip+0x20f199],dil
0xb3f7: ret 
0xb400: push rbp
0xb401: push rbx
0xb402: sub rsp,0x8
0xb406: mov rdi,qword ptr [rip+0x20ec9b]
0xb40d: call 0x11520
0xb412: test eax,eax
0xb414: je 0xb42c
0xb416: call 0x2770
0xb41b: cmp byte ptr [rip+0x20f16e],0x0
0xb422: mov rbx,rax
0xb425: je 0xb443
0xb427: cmp dword ptr [rax],0x20
0xb42a: jne 0xb443
0xb42c: mov rdi,qword ptr [rip+0x20ecad]
0xb433: call 0x11520
0xb438: test eax,eax
0xb43a: jne 0xb482
0xb43c: add rsp,0x8
0xb440: pop rbx
0xb441: pop rbp
0xb442: ret 
0xb443: lea rsi,[rip+0x9dd0]
0xb44a: xor edi,edi
0xb44c: mov edx,0x5
0xb451: call 0x28e0
0xb456: mov rdi,qword ptr [rip+0x20f13b]
0xb45d: mov rbp,rax
0xb460: test rdi,rdi
0xb463: je 0xb48d
0xb465: call 0xeb80
0xb46a: mov esi,dword ptr [rbx]
0xb46c: lea rdx,[rip+0x9da0]
0xb473: mov rcx,rax
0xb476: mov r8,rbp
0xb479: xor edi,edi
0xb47b: xor eax,eax
0xb47d: call 0x2cb0
0xb482: mov edi,dword ptr [rip+0x20eba8]
0xb488: call 0x27a0
0xb48d: mov esi,dword ptr [rbx]
0xb48f: lea rdx,[rip+0x9cf7]
0xb496: mov rcx,rax
0xb499: xor edi,edi
0xb49b: xor eax,eax
0xb49d: call 0x2cb0
0xb4a2: jmp 0xb482
0xb4b0: sub rsp,0x8
0xb4b4: call 0xb530
0xb4b9: test rax,rax
0xb4bc: je 0xb4c3
0xb4be: add rsp,0x8
0xb4c2: ret 
0xb4c3: call 0x11270
0xb4c8: nop dword ptr [rax+rax]
0xb530: push rbp
0xb531: push rbx
0xb532: mov rbp,rdi
0xb535: sub rsp,0x8
0xb539: call 0xb4d0
0xb53e: test rax,rax
0xb541: mov rbx,rax
0xb544: sete al
0xb547: movzx eax,al
0xb54a: lea rdi,[rbx+rax+0x1]
0xb54f: call 0x2bc0
0xb554: test rax,rax
0xb557: mov rcx,rax
0xb55a: je 0xb576
0xb55c: mov rdx,rbx
0xb55f: mov rsi,rbp
0xb562: mov rdi,rax
0xb565: call 0x2b60
0xb56a: test rbx,rbx
0xb56d: mov rcx,rax
0xb570: je 0xb580
0xb572: mov byte ptr [rcx+rbx],0x0
0xb576: add rsp,0x8
0xb57a: mov rax,rcx
0xb57d: pop rbx
0xb57e: pop rbp
0xb57f: ret 
0xb580: mov byte ptr [rax],0x2e
0xb583: mov ebx,0x1
0xb588: jmp 0xb572
0xb690: test rdi,rdi
0xb693: je 0xb6b0
0xb695: push rbx
0xb696: mov ebx,esi
0xb698: call 0x2b80
0xb69d: mov ecx,ebx
0xb69f: xor edx,edx
0xb6a1: xor esi,esi
0xb6a3: pop rbx
0xb6a4: mov edi,eax
0xb6a6: jmp 0x2a70
0xb6b0: rep ret 
0xb729: call 0x2930
0xb72e: nop 
0xb7b7: nop word ptr [rax+rax]
0xb811: call 0x2930
0xb816: nop word ptr cs:[rax+rax]
0xb820: mov edx,edi
0xb822: mov eax,0x2d
0xb827: and edx,0xf000
0xb82d: cmp edx,0x8000
0xb833: je 0xb890
0xb835: cmp edx,0x4000
0xb83b: mov eax,0x64
0xb840: je 0xb890
0xb842: cmp edx,0x6000
0xb848: mov eax,0x62
0xb84d: je 0xb890
0xb84f: cmp edx,0x2000
0xb855: mov eax,0x63
0xb85a: je 0xb890
0xb85c: cmp edx,0xa000
0xb862: mov eax,0x6c
0xb867: je 0xb890
0xb869: cmp edx,0x1000
0xb86f: mov eax,0x70
0xb874: je 0xb890
0xb876: cmp edx,0xc000
0xb87c: mov eax,0x73
0xb881: mov edx,0x3f
0xb886: cmovne eax,edx
0xb889: nop dword ptr [rax]
0xb890: mov byte ptr [rsi],al
0xb892: mov eax,edi
0xb894: and eax,0x100
0xb899: cmp eax,0x1
0xb89c: sbb eax,eax
0xb89e: and eax,-0x45
0xb8a1: add eax,0x72
0xb8a4: mov byte ptr [rsi+0x1],al
0xb8a7: mov eax,edi
0xb8a9: and eax,0x80
0xb8ae: cmp eax,0x1
0xb8b1: sbb eax,eax
0xb8b3: and eax,-0x4a
0xb8b6: add eax,0x77
0xb8b9: mov byte ptr [rsi+0x2],al
0xb8bc: mov eax,edi
0xb8be: and eax,0x40
0xb8c1: cmp eax,0x1
0xb8c4: sbb eax,eax
0xb8c6: test edi,0x800
0xb8cc: je 0xb970
0xb8d2: and eax,-0x20
0xb8d5: add eax,0x73
0xb8d8: mov byte ptr [rsi+0x3],al
0xb8db: mov eax,edi
0xb8dd: and eax,0x20
0xb8e0: cmp eax,0x1
0xb8e3: sbb eax,eax
0xb8e5: and eax,-0x45
0xb8e8: add eax,0x72
0xb8eb: mov byte ptr [rsi+0x4],al
0xb8ee: mov eax,edi
0xb8f0: and eax,0x10
0xb8f3: cmp eax,0x1
0xb8f6: sbb eax,eax
0xb8f8: and eax,-0x4a
0xb8fb: add eax,0x77
0xb8fe: mov byte ptr [rsi+0x5],al
0xb901: mov eax,edi
0xb903: and eax,0x8
0xb906: cmp eax,0x1
0xb909: sbb eax,eax
0xb90b: test edi,0x400
0xb911: je 0xb998
0xb917: and eax,-0x20
0xb91a: add eax,0x73
0xb91d: mov byte ptr [rsi+0x6],al
0xb920: mov eax,edi
0xb922: and eax,0x4
0xb925: cmp eax,0x1
0xb928: sbb eax,eax
0xb92a: and eax,-0x45
0xb92d: add eax,0x72
0xb930: mov byte ptr [rsi+0x7],al
0xb933: mov eax,edi
0xb935: and eax,0x2
0xb938: cmp eax,0x1
0xb93b: sbb eax,eax
0xb93d: and eax,-0x4a
0xb940: add eax,0x77
0xb943: mov byte ptr [rsi+0x8],al
0xb946: mov eax,edi
0xb948: and eax,0x1
0xb94b: cmp eax,0x1
0xb94e: sbb eax,eax
0xb950: and edi,0x200
0xb956: je 0xb980
0xb958: and eax,-0x20
0xb95b: add eax,0x74
0xb95e: mov byte ptr [rsi+0x9],al
0xb961: mov eax,0x20
0xb966: mov word ptr [rsi+0xa],ax
0xb96a: ret 
0xb970: and eax,-0x4b
0xb973: add eax,0x78
0xb976: jmp 0xb8d8
0xb980: and eax,-0x4b
0xb983: add eax,0x78
0xb986: mov byte ptr [rsi+0x9],al
0xb989: mov eax,0x20
0xb98e: mov word ptr [rsi+0xa],ax
0xb992: ret 
0xb998: and eax,-0x4b
0xb99b: add eax,0x78
0xb99e: jmp 0xb91d
0xb9b0: mov edi,dword ptr [rdi+0x18]
0xb9b3: jmp 0xb820
0xb9d8: nop dword ptr [rax+rax]
0xbaa5: mov qword ptr [r15],rdi
0xbc00: mov rax,rdi
0xbc03: xor edx,edx
0xbc05: ror rax,0x3
0xbc09: div rsi
0xbc0c: mov rax,rdx
0xbc0f: ret 
0xbc10: cmp rdi,rsi
0xbc13: sete al
0xbc16: ret 
0xbc42: nop dword ptr [rax]
0xbc46: nop word ptr cs:[rax+rax]
0xbf30: mov rax,qword ptr [rdi+0x10]
0xbf34: ret 
0xbf40: mov rax,qword ptr [rdi+0x18]
0xbf44: ret 
0xbf50: mov rax,qword ptr [rdi+0x20]
0xbf54: ret 
0xbf60: mov rsi,qword ptr [rdi]
0xbf63: mov rdi,qword ptr [rdi+0x8]
0xbf67: xor eax,eax
0xbf69: cmp rsi,rdi
0xbf6c: jae 0xbfa7
0xbf6e: nop 
0xbf70: cmp qword ptr [rsi],0x0
0xbf74: je 0xbf9c
0xbf76: mov rdx,qword ptr [rsi+0x8]
0xbf7a: mov ecx,0x1
0xbf7f: test rdx,rdx
0xbf82: je 0xbf95
0xbf84: nop dword ptr [rax]
0xbf88: mov rdx,qword ptr [rdx+0x8]
0xbf8c: add rcx,0x1
0xbf90: test rdx,rdx
0xbf93: jne 0xbf88
0xbf95: cmp rax,rcx
0xbf98: cmovb rax,rcx
0xbf9c: add rsi,0x10
0xbfa0: cmp rsi,rdi
0xbfa3: jb 0xbf70
0xbfa5: rep ret 
0xbfa7: rep ret 
0xbfb0: mov rcx,qword ptr [rdi]
0xbfb3: mov r8,qword ptr [rdi+0x8]
0xbfb7: xor edx,edx
0xbfb9: xor esi,esi
0xbfbb: cmp rcx,r8
0xbfbe: jae 0xbff6
0xbfc0: cmp qword ptr [rcx],0x0
0xbfc4: je 0xbfed
0xbfc6: mov rax,qword ptr [rcx+0x8]
0xbfca: add rsi,0x1
0xbfce: add rdx,0x1
0xbfd2: test rax,rax
0xbfd5: je 0xbfed
0xbfd7: nop word ptr [rax+rax]
0xbfe0: mov rax,qword ptr [rax+0x8]
0xbfe4: add rdx,0x1
0xbfe8: test rax,rax
0xbfeb: jne 0xbfe0
0xbfed: add rcx,0x10
0xbff1: cmp rcx,r8
0xbff4: jb 0xbfc0
0xbff6: xor eax,eax
0xbff8: cmp qword ptr [rdi+0x18],rsi
0xbffc: je 0xc000
0xbffe: rep ret 
0xc000: cmp qword ptr [rdi+0x20],rdx
0xc004: sete al
0xc007: ret 
0xc010: push r13
0xc012: push r12
0xc014: mov r12,rsi
0xc017: push rbp
0xc018: push rbx
0xc019: xor ebx,ebx
0xc01b: sub rsp,0x8
0xc01f: mov rsi,qword ptr [rdi]
0xc022: mov rcx,qword ptr [rdi+0x20]
0xc026: mov rbp,qword ptr [rdi+0x10]
0xc02a: mov r13,qword ptr [rdi+0x18]
0xc02e: mov rdi,qword ptr [rdi+0x8]
0xc032: cmp rsi,rdi
0xc035: jae 0xc075
0xc037: nop word ptr [rax+rax]
0xc040: cmp qword ptr [rsi],0x0
0xc044: je 0xc06c
0xc046: mov rax,qword ptr [rsi+0x8]
0xc04a: mov edx,0x1
0xc04f: test rax,rax
0xc052: je 0xc065
0xc054: nop dword ptr [rax]
0xc058: mov rax,qword ptr [rax+0x8]
0xc05c: add rdx,0x1
0xc060: test rax,rax
0xc063: jne 0xc058
0xc065: cmp rbx,rdx
0xc068: cmovb rbx,rdx
0xc06c: add rsi,0x10
0xc070: cmp rsi,rdi
0xc073: jb 0xc040
0xc075: lea rdx,[rip+0x91aa]
0xc07c: mov esi,0x1
0xc081: mov rdi,r12
0xc084: xor eax,eax
0xc086: call 0x2db0
0xc08b: lea rdx,[rip+0x91ac]
0xc092: xor eax,eax
0xc094: mov rcx,rbp
0xc097: mov esi,0x1
0xc09c: mov rdi,r12
0xc09f: call 0x2db0
0xc0a4: test r13,r13
0xc0a7: js 0xc110
0xc0a9: pxor xmm0,xmm0
0xc0ad: test rbp,rbp
0xc0b0: cvtsi2sdq xmm0,r13
0xc0b5: mulsd xmm0,[rip+0x921b]
0xc0bd: js 0xc139
0xc0bf: pxor xmm1,xmm1
0xc0c3: cvtsi2sdq xmm1,rbp
0xc0c8: divsd xmm0,xmm1
0xc0cc: lea rdx,[rip+0x919d]
0xc0d3: mov rcx,r13
0xc0d6: mov rdi,r12
0xc0d9: mov esi,0x1
0xc0de: mov eax,0x1
0xc0e3: call 0x2db0
0xc0e8: add rsp,0x8
0xc0ec: mov rcx,rbx
0xc0ef: mov rdi,r12
0xc0f2: pop rbx
0xc0f3: pop rbp
0xc0f4: pop r12
0xc0f6: pop r13
0xc0f8: lea rdx,[rip+0x9157]
0xc0ff: mov esi,0x1
0xc104: xor eax,eax
0xc106: jmp 0x2db0
0xc110: mov rax,r13
0xc113: mov rdx,r13
0xc116: pxor xmm0,xmm0
0xc11a: shr rax, 1
0xc11d: and edx,0x1
0xc120: or rax,rdx
0xc123: test rbp,rbp
0xc126: cvtsi2sdq xmm0,rax
0xc12b: addsd xmm0,xmm0
0xc12f: mulsd xmm0,[rip+0x91a1]
0xc137: jns 0xc0bf
0xc139: mov rax,rbp
0xc13c: pxor xmm1,xmm1
0xc140: shr rax, 1
0xc143: and ebp,0x1
0xc146: or rax,rbp
0xc149: cvtsi2sdq xmm1,rax
0xc14e: addsd xmm1,xmm1
0xc152: jmp 0xc0c8
0xc180: mov rsi,qword ptr [rbx]
0xc190: test al,al
0xc192: jne 0xc1b0
0xc194: mov rbx,qword ptr [rbx+0x8]
0xc198: test rbx,rbx
0xc19b: jne 0xc180
0xc1b0: mov rsi,qword ptr [rbx]
0xc1b3: pop rbx
0xc1b4: pop rbp
0xc1b5: mov rax,rsi
0xc1b8: pop r12
0xc1ba: ret 
0xc1c0: cmp qword ptr [rdi+0x20],0x0
0xc1c5: je 0xc1f3
0xc1c7: mov rdx,qword ptr [rdi]
0xc1ca: mov rcx,qword ptr [rdi+0x8]
0xc1ce: cmp rdx,rcx
0xc1d1: jae 0xc1f8
0xc1d3: mov rax,qword ptr [rdx]
0xc1d6: test rax,rax
0xc1d9: jne 0xc1f6
0xc1db: nop dword ptr [rax+rax]
0xc1e0: add rdx,0x10
0xc1e4: cmp rdx,rcx
0xc1e7: jae 0xc1f8
0xc1e9: mov rax,qword ptr [rdx]
0xc1ec: test rax,rax
0xc1ef: je 0xc1e0
0xc1f1: rep ret 
0xc1f3: xor eax,eax
0xc1f5: ret 
0xc1f6: rep ret 
0xc1f8: sub rsp,0x8
0xc1fc: call 0x2760
0xc201: nop dword ptr [rax+rax]
0xc206: nop word ptr cs:[rax+rax]
0xc210: push rbp
0xc211: push rbx
0xc212: mov rbp,rdi
0xc215: mov rbx,rsi
0xc218: sub rsp,0x8
0xc21c: call 0xbc20
0xc221: mov rdx,rax
0xc224: mov rcx,rax
0xc227: mov rax,qword ptr [rdx]
0xc22a: mov rdx,qword ptr [rdx+0x8]
0xc22e: cmp rax,rbx
0xc231: je 0xc249
0xc233: nop dword ptr [rax+rax]
0xc238: test rdx,rdx
0xc23b: je 0xc24e
0xc23d: mov rax,qword ptr [rdx]
0xc240: mov rdx,qword ptr [rdx+0x8]
0xc244: cmp rax,rbx
0xc247: jne 0xc238
0xc249: test rdx,rdx
0xc24c: jne 0xc278
0xc24e: mov rdx,qword ptr [rbp+0x8]
0xc252: jmp 0xc260
0xc258: mov rax,qword ptr [rcx]
0xc25b: test rax,rax
0xc25e: jne 0xc26b
0xc260: add rcx,0x10
0xc264: cmp rdx,rcx
0xc267: ja 0xc258
0xc269: xor eax,eax
0xc26b: add rsp,0x8
0xc26f: pop rbx
0xc270: pop rbp
0xc271: ret 
0xc278: mov rax,qword ptr [rdx]
0xc27b: add rsp,0x8
0xc27f: pop rbx
0xc280: pop rbp
0xc281: ret 
0xc290: mov r9,qword ptr [rdi]
0xc293: cmp qword ptr [rdi+0x8],r9
0xc297: jbe 0xc2f2
0xc299: xor r8d,r8d
0xc29c: mov rcx,qword ptr [r9]
0xc29f: test rcx,rcx
0xc2a2: je 0xc2dd
0xc2a4: cmp rdx,r8
0xc2a7: jbe 0xc2e7
0xc2a9: mov qword ptr [rsi+r8*8],rcx
0xc2ad: mov rcx,qword ptr [r9+0x8]
0xc2b1: lea rax,[r8+0x1]
0xc2b5: test rcx,rcx
0xc2b8: je 0xc2da
0xc2ba: nop word ptr [rax+rax]
0xc2c0: cmp rdx,rax
0xc2c3: je 0xc2f0
0xc2c5: mov r8,qword ptr [rcx]
0xc2c8: add rax,0x1
0xc2cc: mov qword ptr [rsi+rax*8-0x8],r8
0xc2d1: mov rcx,qword ptr [rcx+0x8]
0xc2d5: test rcx,rcx
0xc2d8: jne 0xc2c0
0xc2da: mov r8,rax
0xc2dd: add r9,0x10
0xc2e1: cmp qword ptr [rdi+0x8],r9
0xc2e5: ja 0xc29c
0xc2e7: mov rax,r8
0xc2ea: ret 
0xc2f0: rep ret 
0xc2f2: xor eax,eax
0xc2f4: ret 
0xc300: push r15
0xc302: push r14
0xc304: push r13
0xc306: push r12
0xc308: push rbp
0xc309: push rbx
0xc30a: sub rsp,0x8
0xc30e: mov r14,qword ptr [rdi]
0xc311: cmp qword ptr [rdi+0x8],r14
0xc315: jbe 0xc366
0xc317: mov r13,rdx
0xc31a: mov r12,rsi
0xc31d: mov r15,rdi
0xc320: xor ebp,ebp
0xc322: mov rdi,qword ptr [r14]
0xc325: test rdi,rdi
0xc328: je 0xc34a
0xc32a: mov rbx,r14
0xc32d: jmp 0xc333
0xc330: mov rdi,qword ptr [rbx]
0xc333: mov rsi,r13
0xc336: call r12
0xc339: test al,al
0xc33b: je 0xc354
0xc33d: mov rbx,qword ptr [rbx+0x8]
0xc341: add rbp,0x1
0xc345: test rbx,rbx
0xc348: jne 0xc330
0xc34a: add r14,0x10
0xc34e: cmp qword ptr [r15+0x8],r14
0xc352: ja 0xc322
0xc354: add rsp,0x8
0xc358: mov rax,rbp
0xc35b: pop rbx
0xc35c: pop rbp
0xc35d: pop r12
0xc35f: pop r13
0xc361: pop r14
0xc363: pop r15
0xc365: ret 
0xc366: xor ebp,ebp
0xc368: jmp 0xc354
0xc370: movzx ecx,byte ptr [rdi]
0xc373: xor edx,edx
0xc375: test cl,cl
0xc377: je 0xc39d
0xc379: nop dword ptr [rax]
0xc380: mov rax,rdx
0xc383: add rdi,0x1
0xc387: shl rax,0x5
0xc38b: sub rax,rdx
0xc38e: xor edx,edx
0xc390: add rax,rcx
0xc393: movzx ecx,byte ptr [rdi]
0xc396: div rsi
0xc399: test cl,cl
0xc39b: jne 0xc380
0xc39d: mov rax,rdx
0xc3a0: ret 
0xc3b0: movabsq rax,0x3f80000000000000
0xc3ba: mov byte ptr [rdi+0x10],0x0
0xc3be: mov qword ptr [rdi],rax
0xc3c1: movabsq rax,0x3fb4fdf43f4ccccd
0xc3cb: mov qword ptr [rdi+0x8],rax
0xc3cf: ret 
0xc42c: mov qword ptr [rax+0x28],r15
0xc430: call 0xbd70
0xc435: test al,al
0xc437: je 0xc4c0
0xc43d: cmp byte ptr [r15+0x10],0x0
0xc442: je 0xc540
0xc540: test rbp,rbp
0xc543: movxd xmm1,[r15+0x8]
0xc549: jns 0xc501
0xc590: push r12
0xc592: push rbp
0xc593: mov rbp,rdi
0xc596: push rbx
0xc597: mov r12,qword ptr [rdi]
0xc59a: cmp r12,qword ptr [rdi+0x8]
0xc59e: jae 0xc60b
0xc5a0: cmp qword ptr [r12],0x0
0xc5a5: je 0xc601
0xc5a7: mov rbx,qword ptr [r12+0x8]
0xc5ac: mov rax,qword ptr [rbp+0x40]
0xc5b0: test rbx,rbx
0xc5b3: je 0xc5e5
0xc5b5: nop dword ptr [rax]
0xc5b8: test rax,rax
0xc5bb: je 0xc5c6
0xc5bd: mov rdi,qword ptr [rbx]
0xc5c0: call rax
0xc5c2: mov rax,qword ptr [rbp+0x40]
0xc5c6: mov rdx,qword ptr [rbx+0x8]
0xc5ca: mov rcx,qword ptr [rbp+0x48]
0xc5ce: mov qword ptr [rbx],0x0
0xc5d5: test rdx,rdx
0xc5d8: mov qword ptr [rbx+0x8],rcx
0xc5dc: mov qword ptr [rbp+0x48],rbx
0xc5e0: mov rbx,rdx
0xc5e3: jne 0xc5b8
0xc5e5: test rax,rax
0xc5e8: je 0xc5f0
0xc5ea: mov rdi,qword ptr [r12]
0xc5ee: call rax
0xc5f0: mov qword ptr [r12],0x0
0xc5f8: mov qword ptr [r12+0x8],0x0
0xc601: add r12,0x10
0xc605: cmp qword ptr [rbp+0x8],r12
0xc609: ja 0xc5a0
0xc60b: mov qword ptr [rbp+0x18],0x0
0xc613: mov qword ptr [rbp+0x20],0x0
0xc61b: pop rbx
0xc61c: pop rbp
0xc61d: pop r12
0xc61f: ret 
0xc620: push r12
0xc622: push rbp
0xc623: mov r12,rdi
0xc626: push rbx
0xc627: cmp qword ptr [rdi+0x40],0x0
0xc62c: mov rbp,qword ptr [rdi]
0xc62f: mov rax,qword ptr [rdi+0x8]
0xc633: je 0xc683
0xc635: cmp qword ptr [rdi+0x20],0x0
0xc63a: je 0xc683
0xc63c: cmp rbp,rax
0xc63f: jae 0xc6bc
0xc641: nop dword ptr [rax]
0xc648: mov rdi,qword ptr [rbp]
0xc64c: test rdi,rdi
0xc64f: je 0xc676
0xc651: mov rbx,rbp
0xc654: jmp 0xc663
0xc660: mov rdi,qword ptr [rbx]
0xc663: call qword ptr [r12+0x40]
0xc668: mov rbx,qword ptr [rbx+0x8]
0xc66c: test rbx,rbx
0xc66f: jne 0xc660
0xc671: mov rax,qword ptr [r12+0x8]
0xc676: add rbp,0x10
0xc67a: cmp rax,rbp
0xc67d: ja 0xc648
0xc67f: mov rbp,qword ptr [r12]
0xc683: cmp rbp,rax
0xc686: jae 0xc6bc
0xc688: nop dword ptr [rax+rax]
0xc690: mov rdi,qword ptr [rbp+0x8]
0xc694: test rdi,rdi
0xc697: je 0xc6b1
0xc699: nop dword ptr [rax]
0xc6a0: mov rbx,qword ptr [rdi+0x8]
0xc6a4: call 0x2e10
0xc6a9: test rbx,rbx
0xc6ac: mov rdi,rbx
0xc6af: jne 0xc6a0
0xc6b1: add rbp,0x10
0xc6b5: cmp qword ptr [r12+0x8],rbp
0xc6ba: ja 0xc690
0xc6bc: mov rdi,qword ptr [r12+0x48]
0xc6c1: test rdi,rdi
0xc6c4: je 0xc6e1
0xc6c6: nop word ptr cs:[rax+rax]
0xc6d0: mov rbx,qword ptr [rdi+0x8]
0xc6d4: call 0x2e10
0xc6d9: test rbx,rbx
0xc6dc: mov rdi,rbx
0xc6df: jne 0xc6d0
0xc6e1: mov rdi,qword ptr [r12]
0xc6e5: call 0x2e10
0xc6ea: pop rbx
0xc6eb: mov rdi,r12
0xc6ee: pop rbp
0xc6ef: pop r12
0xc6f1: jmp 0x2e10
0xc92a: call 0x2930
0xc93e: nop 
0xcb22: nop word ptr [rax+rax]
0xcbbf: call 0x2930
0xcbc4: nop 
0xcbc6: nop word ptr cs:[rax+rax]
0xcc24: call 0x2930
0xcc29: nop dword ptr [rax]
0xce2e: call 0x2930
0xce33: nop word ptr cs:[rax+rax]
0xce3d: nop dword ptr [rax]
0xce40: push rbp
0xce41: push rbx
0xce42: mov rbp,rdi
0xce45: mov rbx,rsi
0xce48: sub rsp,0x8
0xce4c: mov rdi,qword ptr [rdi]
0xce4f: call 0x11700
0xce54: xor rax,qword ptr [rbp+0x8]
0xce58: xor edx,edx
0xce5a: add rsp,0x8
0xce5e: div rbx
0xce61: pop rbx
0xce62: pop rbp
0xce63: mov rax,rdx
0xce66: ret 
0xce70: mov rax,qword ptr [rdi+0x8]
0xce74: xor edx,edx
0xce76: div rsi
0xce79: mov rax,rdx
0xce7c: ret 
0xce80: xor eax,eax
0xce82: mov rdx,qword ptr [rsi+0x8]
0xce86: cmp qword ptr [rdi+0x8],rdx
0xce8a: je 0xce90
0xce8c: rep ret 
0xce90: mov rcx,qword ptr [rsi+0x10]
0xce94: cmp qword ptr [rdi+0x10],rcx
0xce98: jne 0xce8c
0xce9a: sub rsp,0x8
0xce9e: mov rsi,qword ptr [rsi]
0xcea1: mov rdi,qword ptr [rdi]
0xcea4: call 0xf240
0xcea9: add rsp,0x8
0xcead: ret 
0xceb0: xor eax,eax
0xceb2: mov rdx,qword ptr [rsi+0x8]
0xceb6: cmp qword ptr [rdi+0x8],rdx
0xceba: je 0xcec0
0xcebc: rep ret 
0xcec0: mov rcx,qword ptr [rsi+0x10]
0xcec4: cmp qword ptr [rdi+0x10],rcx
0xcec8: jne 0xcebc
0xceca: sub rsp,0x8
0xcece: mov rsi,qword ptr [rsi]
0xced1: mov rdi,qword ptr [rdi]
0xced4: call 0x2af0
0xced9: test eax,eax
0xcedb: sete al
0xcede: add rsp,0x8
0xcee2: ret 
0xcf10: push r13
0xcf12: push r12
0xcf14: or edx,0x90900
0xcf1a: push rbp
0xcf1b: push rbx
0xcf1c: xor eax,eax
0xcf1e: mov r12,rcx
0xcf21: sub rsp,0x8
0xcf25: call 0x11780
0xcf2a: test eax,eax
0xcf2c: js 0xcf80
0xcf2e: mov edi,eax
0xcf30: mov ebx,eax
0xcf32: call 0x2d20
0xcf37: test rax,rax
0xcf3a: mov rbp,rax
0xcf3d: je 0xcf58
0xcf3f: mov dword ptr [r12],ebx
0xcf43: add rsp,0x8
0xcf47: mov rax,rbp
0xcf4a: pop rbx
0xcf4b: pop rbp
0xcf4c: pop r12
0xcf4e: pop r13
0xcf50: ret 
0xcf58: call 0x2770
0xcf5d: mov r13d,dword ptr [rax]
0xcf60: mov r12,rax
0xcf63: mov edi,ebx
0xcf65: call 0x2a30
0xcf6a: mov rax,rbp
0xcf6d: mov dword ptr [r12],r13d
0xcf71: add rsp,0x8
0xcf75: pop rbx
0xcf76: pop rbp
0xcf77: pop r12
0xcf79: pop r13
0xcf7b: ret 
0xcf80: add rsp,0x8
0xcf84: xor ebp,ebp
0xcf86: pop rbx
0xcf87: mov rax,rbp
0xcf8a: pop rbp
0xcf8b: pop r12
0xcf8d: pop r13
0xcf8f: ret 
0xd02f: nop 
0xd098: mov ebp,0xfffffffe
0xd09d: jmp 0xd07a
0xd09f: call 0x2930
0xd0a4: nop word ptr cs:[rax+rax]
0xd0ae: nop 
0xd0ff: call 0x2930
0xd104: nop word ptr cs:[rax+rax]
0xd10e: nop 
0xd110: push rbp
0xd111: push rbx
0xd112: mov rbp,rdi
0xd115: mov ebx,esi
0xd117: sub rsp,0x8
0xd11b: call 0x11740
0xd120: movzx edx,byte ptr [rax]
0xd123: and edx,-0x21
0xd126: cmp dl,0x55
0xd129: je 0xd1a0
0xd12b: cmp dl,0x47
0xd12e: je 0xd150
0xd130: lea rax,[rip+0x81fc]
0xd137: lea rdx,[rip+0x81f7]
0xd13e: cmp ebx,0x9
0xd141: cmovne rax,rdx
0xd145: add rsp,0x8
0xd149: pop rbx
0xd14a: pop rbp
0xd14b: ret 
0xd150: movzx edx,byte ptr [rax+0x1]
0xd154: and edx,-0x21
0xd157: cmp dl,0x42
0xd15a: jne 0xd130
0xd15c: cmp byte ptr [rax+0x2],0x31
0xd160: jne 0xd130
0xd162: cmp byte ptr [rax+0x3],0x38
0xd166: jne 0xd130
0xd168: cmp byte ptr [rax+0x4],0x30
0xd16c: jne 0xd130
0xd16e: cmp byte ptr [rax+0x5],0x33
0xd172: jne 0xd130
0xd174: cmp byte ptr [rax+0x6],0x30
0xd178: jne 0xd130
0xd17a: cmp byte ptr [rax+0x7],0x0
0xd17e: jne 0xd130
0xd180: cmp byte ptr [rbp],0x60
0xd184: lea rax,[rip+0x81a1]
0xd18b: lea rdx,[rip+0x819e]
0xd192: cmovne rax,rdx
0xd196: add rsp,0x8
0xd19a: pop rbx
0xd19b: pop rbp
0xd19c: ret 
0xd1a0: movzx edx,byte ptr [rax+0x1]
0xd1a4: and edx,-0x21
0xd1a7: cmp dl,0x54
0xd1aa: jne 0xd130
0xd1ac: movzx edx,byte ptr [rax+0x2]
0xd1b0: and edx,-0x21
0xd1b3: cmp dl,0x46
0xd1b6: jne 0xd130
0xd1bc: cmp byte ptr [rax+0x3],0x2d
0xd1c0: jne 0xd130
0xd1c6: cmp byte ptr [rax+0x4],0x38
0xd1ca: jne 0xd130
0xd1d0: cmp byte ptr [rax+0x5],0x0
0xd1d4: jne 0xd130
0xd1da: cmp byte ptr [rbp],0x60
0xd1de: lea rax,[rip+0x813f]
0xd1e5: lea rdx,[rip+0x813c]
0xd1ec: cmovne rax,rdx
0xd1f0: add rsp,0x8
0xd1f4: pop rbx
0xd1f5: pop rbp
0xd1f6: ret 
0xd2d3: xor r11d,r11d
0xd2d6: mov rax,rbp
0xd2d9: mov r8d,r12d
0xd2dc: mov rbp,r11
0xd2df: mov r11,rax
0xd2e2: nop word ptr [rax+rax]
0xd2e8: cmp r11,rbp
0xd2eb: setne r12b
0xd2ef: cmp r11,-0x1
0xd2f3: jne 0xd302
0xd2f5: mov rax,qword ptr [rsp+0x10]
0xd2fa: cmp byte ptr [rax+rbp],0x0
0xd2fe: setne r12b
0xd302: test r12b,r12b
0xd305: je 0xd960
0xd30b: cmp dword ptr [rsp+0x8],0x2
0xd310: mov rdi,qword ptr [rsp+0x10]
0xd315: lea r9,[rdi+rbp]
0xd319: setne al
0xd31c: and al,byte ptr [rsp+0xd]
0xd320: mov r10d,eax
0xd323: je 0xd3d0
0xd329: mov rax,qword ptr [rsp+0x18]
0xd32e: test rax,rax
0xd331: je 0xd760
0xd337: cmp r11,-0x1
0xd33b: lea rbx,[rbp+rax]
0xd340: jne 0xd370
0xd342: cmp rax,0x1
0xd346: jbe 0xd370
0xd348: mov byte ptr [rsp+0x38],r8b
0xd34d: mov byte ptr [rsp+0x30],r10b
0xd352: mov qword ptr [rsp+0x28],r9
0xd357: call 0x2900
0xd35c: movzx r8d,byte ptr [rsp+0x38]
0xd362: movzx r10d,byte ptr [rsp+0x30]
0xd368: mov r11,rax
0xd36b: mov r9,qword ptr [rsp+0x28]
0xd370: cmp rbx,r11
0xd373: mov byte ptr [rsp+0x28],r10b
0xd378: ja 0xd930
0xd37e: mov rdx,qword ptr [rsp+0x18]
0xd383: mov rsi,qword ptr [rsp+0x48]
0xd388: mov rdi,r9
0xd38b: mov qword ptr [rsp+0x40],r11
0xd390: mov byte ptr [rsp+0x38],r8b
0xd395: mov qword ptr [rsp+0x30],r9
0xd39a: call 0x2a90
0xd39f: test eax,eax
0xd3a1: mov r9,qword ptr [rsp+0x30]
0xd3a6: movzx r8d,byte ptr [rsp+0x38]
0xd3ac: mov r11,qword ptr [rsp+0x40]
0xd3b1: jne 0xd930
0xd3b7: cmp byte ptr [rsp+0xf],0x0
0xd3bc: movzx r10d,byte ptr [rsp+0x28]
0xd3c2: jne 0xe345
0xd3c8: nop dword ptr [rax+rax]
0xd3d0: movzx ebx,byte ptr [r9]
0xd3d4: cmp bl,0x7e
0xd3d7: ja 0xd6f8
0xd3dd: lea rcx,[rip+0x7fe8]
0xd3e4: movzx edx,bl
0xd3e7: movsxd rax,dword ptr [rcx+rdx*4]
0xd3eb: add rax,rcx
0xd3ee: jmp rax
0xd428: cmp byte ptr [rsp+0xd],0x1
0xd42d: jne 0xd542
0xd433: test dl,dl
0xd435: jne 0xd542
0xd43b: mov rsi,qword ptr [rsp+0x20]
0xd440: test rsi,rsi
0xd443: je 0xd459
0xd445: mov edx,ebx
0xd447: shr dl,0x5
0xd44a: movzx edx,dl
0xd44d: mov edx,dword ptr [rsi+rdx*4]
0xd450: btl edx,ebx
0xd453: jb 0xd5a3
0xd459: test r10b,r10b
0xd45c: jne 0xd5a3
0xd462: xor eax,0x1
0xd465: add rbp,0x1
0xd469: and eax,r8d
0xd46c: test al,al
0xd46e: je 0xd490
0xd470: cmp r13,r15
0xd473: jbe 0xd47a
0xd475: mov byte ptr [r14+r15],0x27
0xd47a: lea rax,[r15+0x1]
0xd47e: cmp r13,rax
0xd481: jbe 0xd489
0xd483: mov byte ptr [r14+r15+0x1],0x27
0xd489: add r15,0x2
0xd48d: xor r8d,r8d
0xd490: cmp r15,r13
0xd493: jae 0xd499
0xd495: mov byte ptr [r14+r15],bl
0xd499: movzx edi,byte ptr [rsp+0xe]
0xd49e: add r15,0x1
0xd4a2: mov eax,0x0
0xd4a7: test r12b,r12b
0xd4aa: cmove edi,eax
0xd4ad: mov byte ptr [rsp+0xe],dil
0xd4b2: jmp 0xd2e8
0xd542: cmp byte ptr [rsp+0xf],0x0
0xd547: jne 0xd43b
0xd54d: jmp 0xd459
0xd5a3: cmp dword ptr [rsp+0x8],0x2
0xd5a8: sete dl
0xd5ab: cmp byte ptr [rsp+0xf],0x0
0xd5b0: mov eax,edx
0xd5b2: jne 0xde08
0xd5b8: mov eax,r8d
0xd5bb: xor eax,0x1
0xd5be: and al,dl
0xd5c0: je 0xd5f1
0xd5c2: cmp r13,r15
0xd5c5: jbe 0xd5cc
0xd5c7: mov byte ptr [r14+r15],0x27
0xd5cc: lea rdx,[r15+0x1]
0xd5d0: cmp r13,rdx
0xd5d3: jbe 0xd5db
0xd5d5: mov byte ptr [r14+r15+0x1],0x24
0xd5db: lea rdx,[r15+0x2]
0xd5df: cmp r13,rdx
0xd5e2: jbe 0xd5ea
0xd5e4: mov byte ptr [r14+r15+0x2],0x27
0xd5ea: add r15,0x3
0xd5ee: mov r8d,eax
0xd5f1: cmp r13,r15
0xd5f4: jbe 0xd5fb
0xd5f6: mov byte ptr [r14+r15],0x5c
0xd5fb: add r15,0x1
0xd5ff: add rbp,0x1
0xd603: jmp 0xd490
0xd6f0: xor r10d,r10d
0xd6f3: nop dword ptr [rax+rax]
0xd6f8: cmp qword ptr [rsp+0x58],0x1
0xd6fe: jne 0xdaa8
0xd704: mov qword ptr [rsp+0x38],r11
0xd709: mov byte ptr [rsp+0x30],r8b
0xd70e: mov byte ptr [rsp+0x28],r10b
0xd713: call 0x2e00
0xd718: mov rcx,qword ptr [rax]
0xd71b: movzx edx,bl
0xd71e: movzx r10d,byte ptr [rsp+0x28]
0xd724: movzx r8d,byte ptr [rsp+0x30]
0xd72a: mov r11,qword ptr [rsp+0x38]
0xd72f: mov edi,0x1
0xd734: movzx eax,word ptr [rcx+rdx*2]
0xd738: and ax,0x4000
0xd73c: setne r12b
0xd740: sete al
0xd743: and al,byte ptr [rsp+0xd]
0xd747: test al,al
0xd749: jne 0xe0e1
0xd74f: cmp dword ptr [rsp+0x8],0x2
0xd754: sete dl
0xd757: jmp 0xd428
0xd760: movzx ebx,byte ptr [r9]
0xd764: cmp bl,0x7e
0xd767: ja 0xd6f0
0xd769: lea rcx,[rip+0x7e58]
0xd770: movzx edx,bl
0xd773: movsxd rax,dword ptr [rcx+rdx*4]
0xd777: add rax,rcx
0xd77a: jmp rax
0xd930: xor r10d,r10d
0xd933: jmp 0xd3d0
0xd960: cmp dword ptr [rsp+0x8],0x2
0xd965: movzx ebx,byte ptr [rsp+0xf]
0xd96a: mov r12d,r8d
0xd96d: mov rbp,r11
0xd970: sete dl
0xd973: mov eax,ebx
0xd975: test r15,r15
0xd978: sete cl
0xd97b: and eax,edx
0xd97d: and al,cl
0xd97f: jne 0xe3e6
0xd985: mov eax,ebx
0xd987: xor eax,0x1
0xd98a: and dl,al
0xd98c: je 0xe2fc
0xd992: cmp byte ptr [rsp+0x7c],0x0
0xd997: je 0xe2fa
0xd99d: cmp byte ptr [rsp+0xe],0x0
0xd9a2: jne 0xe39d
0xd9a8: test r13,r13
0xd9ab: sete al
0xd9ae: cmp qword ptr [rsp+0x50],0x0
0xd9b4: setne dl
0xd9b7: and al,dl
0xd9b9: je 0xe3dc
0xd9bf: mov r13,qword ptr [rsp+0x50]
0xd9c4: lea rbx,[rip+0x796a]
0xd9cb: mov byte ptr [r14],0x27
0xd9cf: mov dword ptr [rsp+0x8],0x2
0xd9d7: mov r15d,0x1
0xd9dd: mov qword ptr [rsp+0x18],0x1
0xd9e6: mov byte ptr [rsp+0xf],0x0
0xd9eb: mov qword ptr [rsp+0x48],rbx
0xd9f0: mov byte ptr [rsp+0x7c],al
0xd9f4: jmp 0xd2d3
0xdaa8: lea rax,[rsp+0xa0]
0xdab0: cmp r11,-0x1
0xdab4: mov qword ptr [rsp+0xa0],0x0
0xdac0: mov qword ptr [rsp+0x28],rax
0xdac5: jne 0xdaf4
0xdac7: mov rdi,qword ptr [rsp+0x10]
0xdacc: mov byte ptr [rsp+0x40],r8b
0xdad1: mov byte ptr [rsp+0x38],r10b
0xdad6: mov qword ptr [rsp+0x30],r9
0xdadb: call 0x2900
0xdae0: movzx r8d,byte ptr [rsp+0x40]
0xdae6: movzx r10d,byte ptr [rsp+0x38]
0xdaec: mov r11,rax
0xdaef: mov r9,qword ptr [rsp+0x30]
0xdaf4: lea rax,[rsp+0x9c]
0xdafc: xor ecx,ecx
0xdafe: mov byte ptr [rsp+0x7e],bl
0xdb02: mov byte ptr [rsp+0x7d],r8b
0xdb07: mov rbx,rcx
0xdb0a: mov qword ptr [rsp+0x88],r9
0xdb12: mov qword ptr [rsp+0x38],rax
0xdb17: mov byte ptr [rsp+0x7f],r10b
0xdb1c: mov qword ptr [rsp+0x80],r15
0xdb24: mov qword ptr [rsp+0x40],r14
0xdb29: mov qword ptr [rsp+0x70],r13
0xdb2e: mov qword ptr [rsp+0x30],r11
0xdb33: mov rax,qword ptr [rsp+0x10]
0xdb38: lea r14,[rbp+rbx]
0xdb3d: mov rdx,qword ptr [rsp+0x30]
0xdb42: mov rcx,qword ptr [rsp+0x28]
0xdb47: mov rdi,qword ptr [rsp+0x38]
0xdb4c: lea r13,[rax+r14]
0xdb50: sub rdx,r14
0xdb53: mov rsi,r13
0xdb56: call 0x11420
0xdb5b: test rax,rax
0xdb5e: mov r15,rax
0xdb61: je 0xdbb1
0xdb63: cmp rax,-0x1
0xdb67: je 0xe185
0xdb6d: cmp rax,-0x2
0xdb71: je 0xe111
0xdb77: cmp dword ptr [rsp+0x8],0x2
0xdb7c: sete al
0xdb7f: and al,byte ptr [rsp+0xf]
0xdb83: jne 0xdd20
0xdb89: mov edi,dword ptr [rsp+0x9c]
0xdb90: call 0x2de0
0xdb95: mov rdi,qword ptr [rsp+0x28]
0xdb9a: test eax,eax
0xdb9c: mov eax,0x0
0xdba1: cmove r12d,eax
0xdba5: add rbx,r15
0xdba8: call 0x2dc0
0xdbad: test eax,eax
0xdbaf: je 0xdb33
0xdbb1: mov edx,r12d
0xdbb4: mov rdi,rbx
0xdbb7: movzx r8d,byte ptr [rsp+0x7d]
0xdbbd: xor edx,0x1
0xdbc0: movzx ebx,byte ptr [rsp+0x7e]
0xdbc5: movzx r10d,byte ptr [rsp+0x7f]
0xdbcb: and dl,byte ptr [rsp+0xd]
0xdbcf: mov r15,qword ptr [rsp+0x80]
0xdbd7: mov r14,qword ptr [rsp+0x40]
0xdbdc: mov r13,qword ptr [rsp+0x70]
0xdbe1: mov r11,qword ptr [rsp+0x30]
0xdbe6: cmp rdi,0x1
0xdbea: jbe 0xe1eb
0xdbf0: mov rcx,rdi
0xdbf3: xor esi,esi
0xdbf5: movzx r9d,byte ptr [rsp+0xf]
0xdbfb: add rcx,rbp
0xdbfe: mov rdi,qword ptr [rsp+0x10]
0xdc03: jmp 0xdcbe
0xdc10: cmp dword ptr [rsp+0x8],0x2
0xdc15: sete al
0xdc18: test r9b,r9b
0xdc1b: jne 0xe0d0
0xdc21: mov esi,r8d
0xdc24: xor esi,0x1
0xdc27: and al,sil
0xdc2a: je 0xdc5b
0xdc2c: cmp r13,r15
0xdc2f: jbe 0xdc36
0xdc31: mov byte ptr [r14+r15],0x27
0xdc36: lea rsi,[r15+0x1]
0xdc3a: cmp r13,rsi
0xdc3d: jbe 0xdc45
0xdc3f: mov byte ptr [r14+r15+0x1],0x24
0xdc45: lea rsi,[r15+0x2]
0xdc49: cmp r13,rsi
0xdc4c: jbe 0xdc54
0xdc4e: mov byte ptr [r14+r15+0x2],0x27
0xdc54: add r15,0x3
0xdc58: mov r8d,eax
0xdc5b: cmp r13,r15
0xdc5e: jbe 0xdc65
0xdc60: mov byte ptr [r14+r15],0x5c
0xdc65: lea rax,[r15+0x1]
0xdc69: cmp r13,rax
0xdc6c: jbe 0xdc7b
0xdc6e: mov eax,ebx
0xdc70: shr al,0x6
0xdc73: add eax,0x30
0xdc76: mov byte ptr [r14+r15+0x1],al
0xdc7b: lea rax,[r15+0x2]
0xdc7f: cmp r13,rax
0xdc82: jbe 0xdc94
0xdc84: mov eax,ebx
0xdc86: shr al,0x3
0xdc89: and eax,0x7
0xdc8c: add eax,0x30
0xdc8f: mov byte ptr [r14+r15+0x2],al
0xdc94: and ebx,0x7
0xdc97: add rbp,0x1
0xdc9b: add r15,0x3
0xdc9f: add ebx,0x30
0xdca2: cmp rbp,rcx
0xdca5: jae 0xd490
0xdcab: mov esi,edx
0xdcad: cmp r13,r15
0xdcb0: jbe 0xdcb6
0xdcb2: mov byte ptr [r14+r15],bl
0xdcb6: movzx ebx,byte ptr [rdi+rbp]
0xdcba: add r15,0x1
0xdcbe: test dl,dl
0xdcc0: jne 0xdc10
0xdcc6: mov eax,esi
0xdcc8: xor eax,0x1
0xdccb: and eax,r8d
0xdcce: test r10b,r10b
0xdcd1: je 0xdce1
0xdcd3: cmp r13,r15
0xdcd6: jbe 0xdcdd
0xdcd8: mov byte ptr [r14+r15],0x5c
0xdcdd: add r15,0x1
0xdce1: add rbp,0x1
0xdce5: cmp rbp,rcx
0xdce8: jae 0xd46c
0xdcee: test al,al
0xdcf0: je 0xe0ee
0xdcf6: cmp r13,r15
0xdcf9: jbe 0xdd00
0xdcfb: mov byte ptr [r14+r15],0x27
0xdd00: lea rax,[r15+0x1]
0xdd04: cmp r13,rax
0xdd07: jbe 0xdd0f
0xdd09: mov byte ptr [r14+r15+0x1],0x27
0xdd0f: add r15,0x2
0xdd13: xor r10d,r10d
0xdd16: xor r8d,r8d
0xdd19: jmp 0xdcad
0xdd20: cmp r15,0x1
0xdd24: je 0xdb89
0xdd2a: mov rdi,qword ptr [rsp+0x10]
0xdd2f: lea rcx,[rdi+r15]
0xdd33: lea rdx,[rdi+r14+0x1]
0xdd38: lea r8,[rcx+r14]
0xdd3c: jmp 0xdd4d
0xdd40: add rdx,0x1
0xdd44: cmp r8,rdx
0xdd47: je 0xdb89
0xdd4d: movzx ecx,byte ptr [rdx]
0xdd50: sub ecx,0x5b
0xdd53: cmp cl,0x21
0xdd56: ja 0xdd40
0xdd58: mov esi,0x1
0xdd5d: shl rsi,cl
0xdd60: mov rcx,rsi
0xdd63: movabsq rsi,0x20000002b
0xdd6d: test rcx,rsi
0xdd70: je 0xdd40
0xdd72: mov r14,qword ptr [rsp+0x40]
0xdd77: mov r13,qword ptr [rsp+0x70]
0xdd7c: mov rbp,qword ptr [rsp+0x30]
0xdd81: mov dword ptr [rsp+0x8],0x2
0xdd89: cmp byte ptr [rsp+0xd],0x0
0xdd8e: je 0xdda0
0xdd90: test al,al
0xdd92: mov eax,0x4
0xdd97: cmove eax,dword ptr [rsp+0x8]
0xdd9c: mov dword ptr [rsp+0x8],eax
0xdda0: sub rsp,0x8
0xdda4: mov rcx,rbp
0xdda7: mov rsi,r13
0xddaa: push qword ptr [rsp+0x68]
0xddae: push qword ptr [rsp+0x78]
0xddb2: mov rdi,r14
0xddb5: push 0x0
0xddb7: mov r9d,dword ptr [rsp+0x98]
0xddbf: mov r8d,dword ptr [rsp+0x28]
0xddc4: mov rdx,qword ptr [rsp+0x30]
0xddc9: and r9d,-0x3
0xddcd: call 0xd200
0xddd2: add rsp,0x20
0xddd6: mov r15,rax
0xddd9: mov rbx,qword ptr [rsp+0xa8]
0xdde1: xor rbx,qword ptr fs:0x28
0xddea: mov rax,r15
0xdded: jne 0xe3f3
0xddf3: add rsp,0xb8
0xddfa: pop rbx
0xddfb: pop rbp
0xddfc: pop r12
0xddfe: pop r13
0xde00: pop r14
0xde02: pop r15
0xde04: ret 
0xde08: mov rbp,r11
0xde0b: jmp 0xdd89
0xde71: test r13,r13
0xde74: jne 0xe40a
0xde7a: lea rax,[rip+0x74b4]
0xde81: mov qword ptr [rsp+0x50],0x0
0xde8a: mov byte ptr [rsp+0xe],0x1
0xde8f: mov byte ptr [rsp+0x7c],0x0
0xde94: xor r12d,r12d
0xde97: mov byte ptr [rsp+0xf],0x0
0xde9c: mov qword ptr [rsp+0x18],0x1
0xdea5: mov qword ptr [rsp+0x48],rax
0xdeaa: mov r15d,0x1
0xdeb0: mov dword ptr [rsp+0x8],0x2
0xdeb8: jmp 0xd2d3
0xe0d0: movzx ebx,byte ptr [rsp+0xf]
0xe0d5: mov rbp,r11
0xe0d8: mov byte ptr [rsp+0xd],bl
0xe0dc: jmp 0xdd89
0xe0e1: movzx edx,byte ptr [rsp+0xd]
0xe0e6: xor r12d,r12d
0xe0e9: jmp 0xdbf0
0xe0ee: xor r10d,r10d
0xe0f1: jmp 0xdcad
0xe111: mov r11,qword ptr [rsp+0x30]
0xe116: mov rsi,r14
0xe119: mov rcx,r13
0xe11c: mov rax,rbx
0xe11f: mov rdi,rbx
0xe122: movzx r8d,byte ptr [rsp+0x7d]
0xe128: movzx ebx,byte ptr [rsp+0x7e]
0xe12d: mov r9,qword ptr [rsp+0x88]
0xe135: cmp rsi,r11
0xe138: movzx r10d,byte ptr [rsp+0x7f]
0xe13e: mov r15,qword ptr [rsp+0x80]
0xe146: mov r14,qword ptr [rsp+0x40]
0xe14b: mov r13,qword ptr [rsp+0x70]
0xe150: jae 0xe178
0xe152: cmp byte ptr [rcx],0x0
0xe155: jne 0xe167
0xe157: jmp 0xe178
0xe160: cmp byte ptr [r9+rax],0x0
0xe165: je 0xe175
0xe167: add rax,0x1
0xe16b: lea rdx,[rbp+rax]
0xe170: cmp r11,rdx
0xe173: ja 0xe160
0xe175: mov rdi,rax
0xe178: movzx edx,byte ptr [rsp+0xd]
0xe17d: xor r12d,r12d
0xe180: jmp 0xdbe6
0xe185: mov rdi,rbx
0xe188: movzx r8d,byte ptr [rsp+0x7d]
0xe18e: movzx ebx,byte ptr [rsp+0x7e]
0xe193: movzx r10d,byte ptr [rsp+0x7f]
0xe199: mov r15,qword ptr [rsp+0x80]
0xe1a1: xor r12d,r12d
0xe1a4: mov r14,qword ptr [rsp+0x40]
0xe1a9: mov r13,qword ptr [rsp+0x70]
0xe1ae: mov r11,qword ptr [rsp+0x30]
0xe1b3: movzx edx,byte ptr [rsp+0xd]
0xe1b8: jmp 0xdbe6
0xe1eb: mov eax,edx
0xe1ed: jmp 0xd747
0xe2fa: mov eax,edx
0xe2fc: mov rbx,qword ptr [rsp+0x48]
0xe301: test rbx,rbx
0xe304: je 0xe332
0xe306: test al,al
0xe308: je 0xe332
0xe30a: movzx ecx,byte ptr [rbx]
0xe30d: mov rax,rbx
0xe310: test cl,cl
0xe312: je 0xe332
0xe314: mov rdx,r15
0xe317: sub rax,r15
0xe31a: cmp r13,rdx
0xe31d: jbe 0xe323
0xe31f: mov byte ptr [r14+rdx],cl
0xe323: add rdx,0x1
0xe327: movzx ecx,byte ptr [rax+rdx]
0xe32b: test cl,cl
0xe32d: jne 0xe31a
0xe32f: mov r15,rdx
0xe332: cmp r13,r15
0xe335: jbe 0xddd9
0xe33b: mov byte ptr [r14+r15],0x0
0xe340: jmp 0xddd9
0xe345: cmp dword ptr [rsp+0x8],0x2
0xe34a: movzx ebx,byte ptr [rsp+0xf]
0xe34f: mov rbp,r11
0xe352: sete al
0xe355: mov byte ptr [rsp+0xd],bl
0xe359: jmp 0xdd89
0xe39d: sub rsp,0x8
0xe3a1: mov r8d,0x5
0xe3a7: mov rcx,r11
0xe3aa: push qword ptr [rsp+0x68]
0xe3ae: push qword ptr [rsp+0x78]
0xe3b2: mov rdi,r14
0xe3b5: push qword ptr [rsp+0x38]
0xe3b9: mov r9d,dword ptr [rsp+0x98]
0xe3c1: mov rdx,qword ptr [rsp+0x30]
0xe3c6: mov rsi,qword ptr [rsp+0x70]
0xe3cb: call 0xd200
0xe3d0: add rsp,0x20
0xe3d4: mov r15,rax
0xe3d7: jmp 0xddd9
0xe3dc: movzx eax,byte ptr [rsp+0x7c]
0xe3e1: jmp 0xe2fc
0xe3e6: mov dword ptr [rsp+0x8],0x2
0xe3ee: jmp 0xdd89
0xe3f3: call 0x2930
0xe3f8: mov byte ptr [rsp+0xd],0x0
0xe3fd: jmp 0xde71
0xe40a: mov byte ptr [rsp+0xe],0x1
0xe40f: xor eax,eax
0xe411: xor r12d,r12d
0xe414: mov qword ptr [rsp+0x50],0x0
0xe41d: jmp 0xd9c4
0xe434: nop 
0xe436: nop word ptr cs:[rax+rax]
0xe52c: add rsp,0x20
0xe530: mov r11,qword ptr [rsp+0x10]
0xe535: cmp r11,rax
0xe538: ja 0xe5a1
0xe53a: lea rsi,[rax+0x1]
0xe53e: lea rax,[rip+0x20c07b]
0xe545: cmp r12,rax
0xe548: mov qword ptr [rbx],rsi
0xe54b: je 0xe55f
0xe54d: mov rdi,r12
0xe550: mov qword ptr [rsp+0x10],rsi
0xe555: call 0x2e10
0xe55a: mov rsi,qword ptr [rsp+0x10]
0xe55f: mov rdi,rsi
0xe562: mov qword ptr [rsp+0x10],rsi
0xe567: call 0x11020
0xe56c: sub rsp,0x8
0xe570: mov qword ptr [rbx+0x8],rax
0xe574: mov r8d,dword ptr [rbp]
0xe578: push qword ptr [rbp+0x30]
0xe57b: push qword ptr [rbp+0x28]
0xe57e: mov rcx,r14
0xe581: push r15
0xe583: mov r9d,dword ptr [rsp+0x3c]
0xe588: mov rdi,rax
0xe58b: mov rdx,qword ptr [rsp+0x28]
0xe590: mov rsi,qword ptr [rsp+0x30]
0xe595: mov r12,rax
0xe598: call 0xd200
0xe59d: add rsp,0x20
0xe5a1: mov eax,dword ptr [rsp+0x18]
0xe5a5: mov dword ptr [r13],eax
0xe5a9: add rsp,0x28
0xe5ad: mov rax,r12
0xe5b0: pop rbx
0xe5b1: pop rbp
0xe5b2: pop r12
0xe5b4: pop r13
0xe5b6: pop r14
0xe5b8: pop r15
0xe5ba: ret 
0xe5eb: nop dword ptr [rax+rax]
0xe5f0: push r12
0xe5f2: push rbp
0xe5f3: push rbx
0xe5f4: mov rbx,rdi
0xe5f7: call 0x2770
0xe5fc: mov r12d,dword ptr [rax]
0xe5ff: mov rbp,rax
0xe602: lea rax,[rip+0x20c0b7]
0xe609: test rbx,rbx
0xe60c: mov esi,0x38
0xe611: cmove rbx,rax
0xe615: mov rdi,rbx
0xe618: call 0x11220
0xe61d: mov dword ptr [rbp],r12d
0xe621: pop rbx
0xe622: pop rbp
0xe623: pop r12
0xe625: ret 
0xe630: lea rax,[rip+0x20c089]
0xe637: test rdi,rdi
0xe63a: cmove rdi,rax
0xe63e: mov eax,dword ptr [rdi]
0xe640: ret 
0xe650: lea rax,[rip+0x20c069]
0xe657: test rdi,rdi
0xe65a: cmove rdi,rax
0xe65e: mov dword ptr [rdi],esi
0xe660: ret 
0xe670: lea rax,[rip+0x20c049]
0xe677: test rdi,rdi
0xe67a: mov ecx,esi
0xe67c: cmove rdi,rax
0xe680: mov eax,esi
0xe682: and ecx,0x1f
0xe685: shr al,0x5
0xe688: movzx eax,al
0xe68b: lea rdi,[rdi+rax*4+0x8]
0xe690: mov esi,dword ptr [rdi]
0xe692: mov eax,esi
0xe694: shr eax,cl
0xe696: xor edx,eax
0xe698: and eax,0x1
0xe69b: and edx,0x1
0xe69e: shl edx,cl
0xe6a0: xor edx,esi
0xe6a2: mov dword ptr [rdi],edx
0xe6a4: ret 
0xe6b0: lea rax,[rip+0x20c009]
0xe6b7: test rdi,rdi
0xe6ba: cmove rdi,rax
0xe6be: mov eax,dword ptr [rdi+0x4]
0xe6c1: mov dword ptr [rdi+0x4],esi
0xe6c4: ret 
0xe6d0: lea rax,[rip+0x20bfe9]
0xe6d7: test rdi,rdi
0xe6da: cmove rdi,rax
0xe6de: test rsi,rsi
0xe6e1: mov dword ptr [rdi],0xa
0xe6e7: je 0xe6f7
0xe6e9: test rdx,rdx
0xe6ec: je 0xe6f7
0xe6ee: mov qword ptr [rdi+0x28],rsi
0xe6f2: mov qword ptr [rdi+0x30],rdx
0xe6f6: ret 
0xe6f7: sub rsp,0x8
0xe6fb: call 0x2760
0xe700: push r15
0xe702: push r14
0xe704: lea rax,[rip+0x20bfb5]
0xe70b: push r13
0xe70d: push r12
0xe70f: mov r13,rdi
0xe712: push rbp
0xe713: push rbx
0xe714: mov rbx,r8
0xe717: mov r14,rsi
0xe71a: mov r15,rdx
0xe71d: sub rsp,0x18
0xe721: test r8,r8
0xe724: cmove rbx,rax
0xe728: mov qword ptr [rsp+0x8],rcx
0xe72d: call 0x2770
0xe732: mov r12d,dword ptr [rax]
0xe735: mov rbp,rax
0xe738: lea rax,[rbx+0x8]
0xe73c: sub rsp,0x8
0xe740: mov r9d,dword ptr [rbx+0x4]
0xe744: push qword ptr [rbx+0x30]
0xe747: mov r8d,dword ptr [rbx]
0xe74a: push qword ptr [rbx+0x28]
0xe74d: mov rdx,r15
0xe750: push rax
0xe751: mov rcx,qword ptr [rsp+0x28]
0xe756: mov rsi,r14
0xe759: mov rdi,r13
0xe75c: call 0xd200
0xe761: mov dword ptr [rbp],r12d
0xe765: add rsp,0x38
0xe769: pop rbx
0xe76a: pop rbp
0xe76b: pop r12
0xe76d: pop r13
0xe76f: pop r14
0xe771: pop r15
0xe773: ret 
0xe780: push r15
0xe782: push r14
0xe784: lea rax,[rip+0x20bf35]
0xe78b: push r13
0xe78d: push r12
0xe78f: mov r12,rdx
0xe792: push rbp
0xe793: push rbx
0xe794: mov rbx,rcx
0xe797: mov r14,rdi
0xe79a: mov r15,rsi
0xe79d: sub rsp,0x38
0xe7a1: test rcx,rcx
0xe7a4: cmove rbx,rax
0xe7a8: xor ebp,ebp
0xe7aa: call 0x2770
0xe7af: test r12,r12
0xe7b2: mov r13,rax
0xe7b5: mov eax,dword ptr [rax]
0xe7b7: sete bpl
0xe7bb: or ebp,dword ptr [rbx+0x4]
0xe7be: lea r10,[rbx+0x8]
0xe7c2: sub rsp,0x8
0xe7c6: mov r8d,dword ptr [rbx]
0xe7c9: mov rcx,r15
0xe7cc: mov dword ptr [rsp+0x14],eax
0xe7d0: push qword ptr [rbx+0x30]
0xe7d3: mov rdx,r14
0xe7d6: push qword ptr [rbx+0x28]
0xe7d9: push r10
0xe7db: xor esi,esi
0xe7dd: mov r9d,ebp
0xe7e0: xor edi,edi
0xe7e2: mov qword ptr [rsp+0x40],r10
0xe7e7: call 0xd200
0xe7ec: lea rsi,[rax+0x1]
0xe7f0: mov qword ptr [rsp+0x48],rax
0xe7f5: add rsp,0x20
0xe7f9: mov rdi,rsi
0xe7fc: mov qword ptr [rsp+0x18],rsi
0xe801: call 0x11020
0xe806: mov qword ptr [rsp+0x10],rax
0xe80b: sub rsp,0x8
0xe80f: push qword ptr [rbx+0x30]
0xe812: push qword ptr [rbx+0x28]
0xe815: mov r10,qword ptr [rsp+0x38]
0xe81a: mov r9d,ebp
0xe81d: mov r8d,dword ptr [rbx]
0xe820: mov rcx,r15
0xe823: mov rdx,r14
0xe826: mov rdi,rax
0xe829: push r10
0xe82b: mov rsi,qword ptr [rsp+0x38]
0xe830: call 0xd200
0xe835: mov eax,dword ptr [rsp+0x2c]
0xe839: add rsp,0x20
0xe83d: test r12,r12
0xe840: mov dword ptr [r13],eax
0xe844: je 0xe84f
0xe846: mov r11,qword ptr [rsp+0x28]
0xe84b: mov qword ptr [r12],r11
0xe84f: mov rax,qword ptr [rsp+0x10]
0xe854: add rsp,0x38
0xe858: pop rbx
0xe859: pop rbp
0xe85a: pop r12
0xe85c: pop r13
0xe85e: pop r14
0xe860: pop r15
0xe862: ret 
0xe870: mov rcx,rdx
0xe873: xor edx,edx
0xe875: jmp 0xe780
0xe880: mov eax,dword ptr [rip+0x20b7f2]
0xe886: push r12
0xe888: mov r12,qword ptr [rip+0x20b7f1]
0xe88f: push rbp
0xe890: push rbx
0xe891: cmp eax,0x1
0xe894: jle 0xe8c1
0xe896: sub eax,0x2
0xe899: lea rbx,[r12+0x18]
0xe89e: shl rax,0x4
0xe8a2: lea rbp,[r12+rax+0x28]
0xe8a7: nop word ptr [rax+rax]
0xe8b0: mov rdi,qword ptr [rbx]
0xe8b3: add rbx,0x10
0xe8b7: call 0x2e10
0xe8bc: cmp rbx,rbp
0xe8bf: jne 0xe8b0
0xe8c1: mov rdi,qword ptr [r12+0x8]
0xe8c6: lea rbx,[rip+0x20bcf3]
0xe8cd: cmp rdi,rbx
0xe8d0: je 0xe8e9
0xe8d2: call 0x2e10
0xe8d7: mov qword ptr [rip+0x20b7ae],0x100
0xe8e2: mov qword ptr [rip+0x20b7af],rbx
0xe8e9: lea rbx,[rip+0x20b7a0]
0xe8f0: cmp r12,rbx
0xe8f3: je 0xe904
0xe8f5: mov rdi,r12
0xe8f8: call 0x2e10
0xe8fd: mov qword ptr [rip+0x20b77c],rbx
0xe904: pop rbx
0xe905: mov dword ptr [rip+0x20b769],0x1
0xe90f: pop rbp
0xe910: pop r12
0xe912: ret 
0xe920: lea rcx,[rip+0x20bd99]
0xe927: mov rdx,-0x1
0xe92e: jmp 0xe440
0xe940: lea rcx,[rip+0x20bd79]
0xe947: jmp 0xe440
0xe950: lea rcx,[rip+0x20bd69]
0xe957: mov rsi,rdi
0xe95a: mov rdx,-0x1
0xe961: xor edi,edi
0xe963: jmp 0xe440
0xe970: lea rcx,[rip+0x20bd49]
0xe977: mov rdx,rsi
0xe97a: mov rsi,rdi
0xe97d: xor edi,edi
0xe97f: jmp 0xe440
0xe9ff: mov rcx,qword ptr [rsp+0x38]
0xea04: xor rcx,qword ptr fs:0x28
0xea0d: jne 0xea19
0xea0f: add rsp,0x48
0xea13: ret 
0xea14: call 0x2760
0xea19: call 0x2930
0xea1e: nop 
0xea20: sub rsp,0x48
0xea24: mov rax,rdx
0xea27: mov rdx,rcx
0xea2a: mov rcx,qword ptr fs:0x28
0xea33: mov qword ptr [rsp+0x38],rcx
0xea38: xor ecx,ecx
0xea3a: cmp esi,0xa
0xea3d: je 0xeaa0
0xea3f: mov dword ptr [rsp],esi
0xea42: mov rcx,rsp
0xea45: mov rsi,rax
0xea48: mov qword ptr [rsp+0x4],0x0
0xea51: mov qword ptr [rsp+0xc],0x0
0xea5a: mov qword ptr [rsp+0x14],0x0
0xea63: mov qword ptr [rsp+0x1c],0x0
0xea6c: mov qword ptr [rsp+0x24],0x0
0xea75: mov qword ptr [rsp+0x2c],0x0
0xea7e: mov dword ptr [rsp+0x34],0x0
0xea86: call 0xe440
0xea8b: mov rdx,qword ptr [rsp+0x38]
0xea90: xor rdx,qword ptr fs:0x28
0xea99: jne 0xeaa5
0xea9b: add rsp,0x48
0xea9f: ret 
0xeaa0: call 0x2760
0xeaa5: call 0x2930
0xeaaa: nop word ptr [rax+rax]
0xeac0: mov rcx,rdx
0xeac3: mov rdx,rsi
0xeac6: mov esi,edi
0xeac8: xor edi,edi
0xeaca: jmp 0xea20
0xead0: sub rsp,0x48
0xead4: mov ecx,edx
0xead6: mov rax,qword ptr fs:0x28
0xeadf: mov qword ptr [rsp+0x38],rax
0xeae4: xor eax,eax
0xeae6: mov rax,qword ptr [rip+0x20bc03]
0xeaed: mov r8,rsp
0xeaf0: and ecx,0x1f
0xeaf3: movdqa xmm0,[rip+0x20bbc5]
0xeafb: mov qword ptr [rsp+0x30],rax
0xeb00: mov eax,edx
0xeb02: movaps [rsp],xmm0
0xeb06: shr al,0x5
0xeb09: movzx eax,al
0xeb0c: lea r9,[r8+rax*4+0x8]
0xeb11: movdqa xmm0,[rip+0x20bbb7]
0xeb19: movaps [rsp+0x10],xmm0
0xeb1e: movdqa xmm0,[rip+0x20bbba]
0xeb26: movaps [rsp+0x20],xmm0
0xeb2b: mov edx,dword ptr [r9]
0xeb2e: mov eax,edx
0xeb30: shr eax,cl
0xeb32: not eax
0xeb34: and eax,0x1
0xeb37: shl eax,cl
0xeb39: mov rcx,r8
0xeb3c: xor eax,edx
0xeb3e: mov rdx,rsi
0xeb41: mov rsi,rdi
0xeb44: mov dword ptr [r9],eax
0xeb47: xor edi,edi
0xeb49: call 0xe440
0xeb4e: mov rsi,qword ptr [rsp+0x38]
0xeb53: xor rsi,qword ptr fs:0x28
0xeb5c: jne 0xeb63
0xeb5e: add rsp,0x48
0xeb62: ret 
0xeb63: call 0x2930
0xeb68: nop dword ptr [rax+rax]
0xeb70: movsx edx,sil
0xeb74: mov rsi,-0x1
0xeb7b: jmp 0xead0
0xeb80: mov edx,0x3a
0xeb85: mov rsi,-0x1
0xeb8c: jmp 0xead0
0xeba0: mov edx,0x3a
0xeba5: jmp 0xead0
0xec1f: mov rcx,qword ptr [rsp+0x38]
0xec24: xor rcx,qword ptr fs:0x28
0xec2d: jne 0xec39
0xec2f: add rsp,0x48
0xec33: ret 
0xec34: call 0x2760
0xec39: call 0x2930
0xec3e: nop 
0xec40: sub rsp,0x48
0xec44: mov r9,rcx
0xec47: mov rcx,qword ptr [rip+0x20baa2]
0xec4e: movdqa xmm0,[rip+0x20ba6a]
0xec56: mov rax,qword ptr fs:0x28
0xec5f: mov qword ptr [rsp+0x38],rax
0xec64: xor eax,eax
0xec66: movaps [rsp],xmm0
0xec6a: test rsi,rsi
0xec6d: mov qword ptr [rsp+0x30],rcx
0xec72: mov dword ptr [rsp],0xa
0xec79: movdqa xmm0,[rip+0x20ba4f]
0xec81: movaps [rsp+0x10],xmm0
0xec86: movdqa xmm0,[rip+0x20ba52]
0xec8e: movaps [rsp+0x20],xmm0
0xec93: je 0xecc7
0xec95: test rdx,rdx
0xec98: je 0xecc7
0xec9a: mov qword ptr [rsp+0x28],rsi
0xec9f: mov qword ptr [rsp+0x30],rdx
0xeca4: mov rcx,rsp
0xeca7: mov rdx,r8
0xecaa: mov rsi,r9
0xecad: call 0xe440
0xecb2: mov rdi,qword ptr [rsp+0x38]
0xecb7: xor rdi,qword ptr fs:0x28
0xecc0: jne 0xeccc
0xecc2: add rsp,0x48
0xecc6: ret 
0xecc7: call 0x2760
0xeccc: call 0x2930
0xecd1: nop dword ptr [rax+rax]
0xecd6: nop word ptr cs:[rax+rax]
0xece0: mov r8,-0x1
0xece7: jmp 0xec40
0xecf0: mov rcx,rdx
0xecf3: mov r8,-0x1
0xecfa: mov rdx,rsi
0xecfd: mov rsi,rdi
0xed00: xor edi,edi
0xed02: jmp 0xec40
0xed10: mov r8,rcx
0xed13: mov rcx,rdx
0xed16: mov rdx,rsi
0xed19: mov rsi,rdi
0xed1c: xor edi,edi
0xed1e: jmp 0xec40
0xed30: lea rcx,[rip+0x20b309]
0xed37: jmp 0xe440
0xed40: lea rcx,[rip+0x20b2f9]
0xed47: mov rdx,rsi
0xed4a: mov rsi,rdi
0xed4d: xor edi,edi
0xed4f: jmp 0xe440
0xed60: lea rcx,[rip+0x20b2d9]
0xed67: mov rdx,-0x1
0xed6e: jmp 0xe440
0xeda0: push r15
0xeda2: push r14
0xeda4: mov r9d,r8d
0xeda7: push r13
0xeda9: push r12
0xedab: mov r14d,edx
0xedae: push rbp
0xedaf: push rbx
0xedb0: mov r12,rsi
0xedb3: mov r13,rcx
0xedb6: mov ebp,r8d
0xedb9: mov r8,rcx
0xedbc: sub rsp,0x148
0xedc3: mov ecx,edx
0xedc5: mov rdx,rsi
0xedc8: mov rax,qword ptr fs:0x28
0xedd1: mov qword ptr [rsp+0x138],rax
0xedd9: xor eax,eax
0xeddb: mov esi,edi
0xeddd: mov dword ptr [rsp+0x4],edi
0xede1: mov edi,0x13c
0xede6: call 0x2b30
0xedeb: mov rbx,rax
0xedee: mov r15d,eax
0xedf1: call 0x2770
0xedf6: test ebx,ebx
0xedf8: js 0xee30
0xedfa: mov rdx,qword ptr [rsp+0x138]
0xee02: xor rdx,qword ptr fs:0x28
0xee0b: mov eax,r15d
0xee0e: jne 0xf005
0xee14: add rsp,0x148
0xee1b: pop rbx
0xee1c: pop rbp
0xee1d: pop r12
0xee1f: pop r13
0xee21: pop r14
0xee23: pop r15
0xee25: ret 
0xee30: mov r9,rax
0xee33: mov eax,dword ptr [rax]
0xee35: lea ecx,[rax-0x16]
0xee38: and ecx,-0x11
0xee3b: setne bl
0xee3e: cmp eax,0x5f
0xee41: setne al
0xee44: and bl,al
0xee46: jne 0xedfa
0xee48: test ebp,ebp
0xee4a: jne 0xeea0
0xee4c: mov rdi,r12
0xee4f: mov qword ptr [rsp+0x8],r9
0xee54: call 0x2900
0xee59: mov rdi,r13
0xee5c: mov rbp,rax
0xee5f: call 0x2900
0xee64: test rbp,rbp
0xee67: je 0xee83
0xee69: test rax,rax
0xee6c: mov r9,qword ptr [rsp+0x8]
0xee71: je 0xee83
0xee73: cmp byte ptr [r12+rbp-0x1],0x2f
0xee79: je 0xeec0
0xee7b: cmp byte ptr [r13+rax-0x1],0x2f
0xee81: je 0xeec0
0xee83: mov edi,dword ptr [rsp+0x4]
0xee87: mov rcx,r13
0xee8a: mov edx,r14d
0xee8d: mov rsi,r12
0xee90: call 0x2d60
0xee95: mov r15d,eax
0xee98: jmp 0xedfa
0xeea0: and ebp,-0x2
0xeea3: je 0xef10
0xeea5: mov dword ptr [r9],0x5f
0xeeac: mov r15d,0xffffffff
0xeeb2: jmp 0xedfa
0xeec0: mov esi,dword ptr [rsp+0x4]
0xeec4: lea rcx,[rsp+0x10]
0xeec9: mov r8d,0x100
0xeecf: mov rdx,r12
0xeed2: mov edi,0x1
0xeed7: mov qword ptr [rsp+0x8],r9
0xeedc: call 0x2980
0xeee1: test eax,eax
0xeee3: jne 0xef49
0xeee5: test bl,bl
0xeee7: mov r9,qword ptr [rsp+0x8]
0xeeec: je 0xef6a
0xeeee: mov eax,dword ptr [rsp+0x28]
0xeef2: and eax,0xf000
0xeef7: cmp eax,0x4000
0xeefc: je 0xee83
0xeefe: mov dword ptr [r9],0x2
0xef05: mov r15d,0xffffffff
0xef0b: jmp 0xedfa
0xef10: lea rcx,[rsp+0xa0]
0xef18: mov r8d,0x100
0xef1e: mov rdx,r13
0xef21: mov esi,r14d
0xef24: mov edi,0x1
0xef29: mov qword ptr [rsp+0x8],r9
0xef2e: call 0x2980
0xef33: test eax,eax
0xef35: mov r9,qword ptr [rsp+0x8]
0xef3a: je 0xef58
0xef3c: mov eax,dword ptr [r9]
0xef3f: cmp eax,0x4b
0xef42: je 0xef58
0xef44: cmp eax,0x2
0xef47: je 0xefb8
0xef49: mov r15d,0xffffffff
0xef4f: jmp 0xedfa
0xef58: mov dword ptr [r9],0x11
0xef5f: mov r15d,0xffffffff
0xef65: jmp 0xedfa
0xef6a: lea rcx,[rsp+0xa0]
0xef72: mov r8d,0x100
0xef78: mov rdx,r13
0xef7b: mov esi,r14d
0xef7e: mov edi,0x1
0xef83: mov qword ptr [rsp+0x8],r9
0xef88: call 0x2980
0xef8d: test eax,eax
0xef8f: mov r9,qword ptr [rsp+0x8]
0xef94: je 0xefc2
0xef96: cmp dword ptr [r9],0x2
0xef9a: jne 0xef49
0xef9c: mov eax,dword ptr [rsp+0x28]
0xefa0: and eax,0xf000
0xefa5: cmp eax,0x4000
0xefaa: jne 0xef49
0xefac: jmp 0xee83
0xefb8: mov ebx,0x1
0xefbd: jmp 0xee4c
0xefc2: mov eax,dword ptr [rsp+0xb8]
0xefc9: and eax,0xf000
0xefce: cmp eax,0x4000
0xefd3: je 0xefe1
0xefd5: mov dword ptr [r9],0x14
0xefdc: jmp 0xef49
0xefe1: mov eax,dword ptr [rsp+0x28]
0xefe5: and eax,0xf000
0xefea: cmp eax,0x4000
0xefef: je 0xee83
0xeff5: mov dword ptr [r9],0x15
0xeffc: or r15d,-0x1
0xf000: jmp 0xedfa
0xf005: call 0x2930
0xf00a: nop word ptr [rax+rax]
0xf070: push r13
0xf072: push r12
0xf074: mov r13d,edi
0xf077: push rbp
0xf078: push rbx
0xf079: mov rdi,rsi
0xf07c: mov ebp,edx
0xf07e: mov r12,rcx
0xf081: sub rsp,0x138
0xf088: mov rax,qword ptr fs:0x28
0xf091: mov qword ptr [rsp+0x128],rax
0xf099: xor eax,eax
0xf09b: call 0xb4b0
0xf0a0: mov rcx,rsp
0xf0a3: mov r8d,0x100
0xf0a9: mov rdx,rax
0xf0ac: mov esi,r13d
0xf0af: mov edi,0x1
0xf0b4: mov rbx,rax
0xf0b7: call 0x2980
0xf0bc: test eax,eax
0xf0be: jne 0xf170
0xf0c4: mov rdi,rbx
0xf0c7: call 0x2e10
0xf0cc: mov rdi,r12
0xf0cf: call 0xb4b0
0xf0d4: lea rcx,[rsp+0x90]
0xf0dc: mov r8d,0x100
0xf0e2: mov rdx,rax
0xf0e5: mov esi,ebp
0xf0e7: mov edi,0x1
0xf0ec: mov rbx,rax
0xf0ef: call 0x2980
0xf0f4: test eax,eax
0xf0f6: jne 0xf148
0xf0f8: xor ebp,ebp
0xf0fa: mov rax,qword ptr [rsp+0x98]
0xf102: cmp qword ptr [rsp+0x8],rax
0xf107: jne 0xf119
0xf109: mov rax,qword ptr [rsp+0x90]
0xf111: cmp qword ptr [rsp],rax
0xf115: sete bpl
0xf119: mov rdi,rbx
0xf11c: call 0x2e10
0xf121: mov rdx,qword ptr [rsp+0x128]
0xf129: xor rdx,qword ptr fs:0x28
0xf132: mov eax,ebp
0xf134: jne 0xf192
0xf136: add rsp,0x138
0xf13d: pop rbx
0xf13e: pop rbp
0xf13f: pop r12
0xf141: pop r13
0xf143: ret 
0xf148: call 0x2770
0xf14d: mov esi,dword ptr [rax]
0xf14f: lea rdx,[rip+0x6037]
0xf156: mov rcx,rbx
0xf159: mov edi,0x1
0xf15e: xor eax,eax
0xf160: call 0x2cb0
0xf165: jmp 0xf0f8
0xf170: call 0x2770
0xf175: mov esi,dword ptr [rax]
0xf177: lea rdx,[rip+0x600f]
0xf17e: mov rcx,rbx
0xf181: mov edi,0x1
0xf186: xor eax,eax
0xf188: call 0x2cb0
0xf18d: jmp 0xf0c4
0xf192: call 0x2930
0xf197: nop word ptr [rax+rax]
0xf1a0: push r15
0xf1a2: push r14
0xf1a4: mov r15d,edx
0xf1a7: push r13
0xf1a9: push r12
0xf1ab: push rbp
0xf1ac: push rbx
0xf1ad: mov rbp,rcx
0xf1b0: mov rbx,rsi
0xf1b3: sub rsp,0x18
0xf1b7: mov dword ptr [rsp+0xc],edi
0xf1bb: mov rdi,rsi
0xf1be: call 0xb590
0xf1c3: mov rdi,rbp
0xf1c6: mov r12,rax
0xf1c9: call 0xb590
0xf1ce: mov rdi,r12
0xf1d1: mov r13,rax
0xf1d4: call 0xb5f0
0xf1d9: mov rdi,r13
0xf1dc: mov r14,rax
0xf1df: call 0xb5f0
0xf1e4: cmp r14,rax
0xf1e7: je 0xf200
0xf1e9: add rsp,0x18
0xf1ed: xor eax,eax
0xf1ef: pop rbx
0xf1f0: pop rbp
0xf1f1: pop r12
0xf1f3: pop r13
0xf1f5: pop r14
0xf1f7: pop r15
0xf1f9: ret 
0xf200: mov rdx,r14
0xf203: mov rsi,r13
0xf206: mov rdi,r12
0xf209: call 0x2a90
0xf20e: test eax,eax
0xf210: jne 0xf1e9
0xf212: mov edi,dword ptr [rsp+0xc]
0xf216: add rsp,0x18
0xf21a: mov rcx,rbp
0xf21d: mov edx,r15d
0xf220: mov rsi,rbx
0xf223: pop rbx
0xf224: pop rbp
0xf225: pop r12
0xf227: pop r13
0xf229: pop r14
0xf22b: pop r15
0xf22d: jmp 0xf070
0xf240: mov edx,0xffffff9c
0xf245: mov rcx,rsi
0xf248: mov rsi,rdi
0xf24b: mov edi,edx
0xf24d: jmp 0xf1a0
0xf260: mov rax,qword ptr [rsi+0x8]
0xf264: cmp qword ptr [rdi+0x8],rax
0xf268: jb 0xf278
0xf26a: seta al
0xf26d: movzx eax,al
0xf270: ret 
0xf278: mov eax,0xffffffff
0xf27d: ret 
0xf280: mov rsi,qword ptr [rsi]
0xf283: mov rdi,qword ptr [rdi]
0xf286: jmp 0x2af0
0xf290: push r15
0xf292: lea rax,[rip+0x20a7a7]
0xf299: push r14
0xf29b: push r13
0xf29d: push r12
0xf29f: mov esi,esi
0xf2a1: push rbp
0xf2a2: push rbx
0xf2a3: sub rsp,0x48
0xf2a7: mov rax,qword ptr [rax+rsi*8]
0xf2ab: test rdi,rdi
0xf2ae: mov qword ptr [rsp+0x8],rax
0xf2b3: je 0xf5bd
0xf2b9: mov rbx,rdi
0xf2bc: xor r14d,r14d
0xf2bf: xor r12d,r12d
0xf2c2: call 0x2770
0xf2c7: xor r13d,r13d
0xf2ca: mov rbp,rax
0xf2cd: mov qword ptr [rsp+0x28],0x0
0xf2d6: mov qword ptr [rsp+0x10],0x0
0xf2df: mov qword ptr [rsp+0x20],0x0
0xf2e8: jmp 0xf2f4
0xf2f0: test al,al
0xf2f2: jne 0xf329
0xf2f4: mov dword ptr [rbp],0x0
0xf2fb: mov rdi,rbx
0xf2fe: call 0x2bb0
0xf303: test rax,rax
0xf306: mov rcx,rax
0xf309: je 0xf3b0
0xf30f: lea r15,[rax+0x13]
0xf313: movzx eax,byte ptr [rax+0x13]
0xf317: cmp al,0x2e
0xf319: jne 0xf2f0
0xf31b: cmp byte ptr [rcx+0x14],0x2e
0xf31f: je 0xf3a0
0xf321: movzx eax,byte ptr [rcx+0x14]
0xf325: test al,al
0xf327: je 0xf2f4
0xf329: mov rdi,r15
0xf32c: mov qword ptr [rsp+0x30],rcx
0xf331: call 0x2900
0xf336: add rax,0x1
0xf33a: cmp qword ptr [rsp+0x8],0x0
0xf340: mov qword ptr [rsp+0x18],rax
0xf345: je 0xf488
0xf34b: cmp r12,qword ptr [rsp+0x28]
0xf350: lea rax,[r12+0x1]
0xf355: mov rcx,qword ptr [rsp+0x30]
0xf35a: mov qword ptr [rsp+0x38],rax
0xf35f: je 0xf511
0xf365: shl r12,0x4
0xf369: mov rdi,r15
0xf36c: add r12,qword ptr [rsp+0x10]
0xf371: mov qword ptr [rsp+0x30],rcx
0xf376: call 0x11250
0xf37b: mov rcx,qword ptr [rsp+0x30]
0xf380: add r14,qword ptr [rsp+0x18]
0xf385: mov qword ptr [r12],rax
0xf389: mov rax,qword ptr [rcx]
0xf38c: mov qword ptr [r12+0x8],rax
0xf391: mov r12,qword ptr [rsp+0x38]
0xf396: jmp 0xf2f4
0xf3a0: movzx eax,byte ptr [rcx+0x15]
0xf3a4: jmp 0xf2f0
0xf3b0: mov ebx,dword ptr [rbp]
0xf3b3: test ebx,ebx
0xf3b5: jne 0xf5a0
0xf3bb: cmp qword ptr [rsp+0x8],0x0
0xf3c1: je 0xf470
0xf3c7: test r12,r12
0xf3ca: lea rbx,[r14+0x1]
0xf3ce: jne 0xf400
0xf3d0: mov rdi,rbx
0xf3d3: call 0x11020
0xf3d8: mov r13,rax
0xf3db: mov rbx,rax
0xf3de: mov rdi,qword ptr [rsp+0x10]
0xf3e3: call 0x2e10
0xf3e8: mov byte ptr [rbx],0x0
0xf3eb: add rsp,0x48
0xf3ef: mov rax,r13
0xf3f2: pop rbx
0xf3f3: pop rbp
0xf3f4: pop r12
0xf3f6: pop r13
0xf3f8: pop r14
0xf3fa: pop r15
0xf3fc: ret 
0xf400: mov r15,qword ptr [rsp+0x10]
0xf405: mov rcx,qword ptr [rsp+0x8]
0xf40a: mov rsi,r12
0xf40d: mov edx,0x10
0xf412: shl r12,0x4
0xf416: mov rdi,r15
0xf419: mov rbp,r15
0xf41c: add r12,r15
0xf41f: call 0x2800
0xf424: mov rdi,rbx
0xf427: xor ebx,ebx
0xf429: call 0x11020
0xf42e: mov r13,rax
0xf431: nop dword ptr [rax]
0xf438: mov rsi,qword ptr [rbp]
0xf43c: lea r14,[r13+rbx]
0xf441: add rbp,0x10
0xf445: mov rdi,r14
0xf448: call 0x28c0
0xf44d: mov rdi,qword ptr [rbp-0x10]
0xf451: sub rax,r14
0xf454: lea rbx,[rbx+rax+0x1]
0xf459: call 0x2e10
0xf45e: cmp r12,rbp
0xf461: jne 0xf438
0xf463: add rbx,r13
0xf466: jmp 0xf3de
0xf470: cmp qword ptr [rsp+0x20],r14
0xf475: je 0xf563
0xf47b: lea rbx,[r13+r14]
0xf480: jmp 0xf3e8
0xf488: mov rsi,qword ptr [rsp+0x18]
0xf48d: mov rax,qword ptr [rsp+0x20]
0xf492: mov rdx,rsi
0xf495: sub rax,r14
0xf498: add rdx,r14
0xf49b: mov qword ptr [rsp+0x30],rdx
0xf4a0: setb dl
0xf4a3: cmp rax,rsi
0xf4a6: movzx edx,dl
0xf4a9: ja 0xf4f5
0xf4ab: test rdx,rdx
0xf4ae: jne 0xf599
0xf4b4: test r13,r13
0xf4b7: mov rdx,qword ptr [rsp+0x30]
0xf4bc: je 0xf57f
0xf4c2: movabsq rax,0x5555555555555553
0xf4cc: cmp rdx,rax
0xf4cf: ja 0xf599
0xf4d5: mov rax,rdx
0xf4d8: shr rax, 1
0xf4db: lea rax,[rdx+rax+0x1]
0xf4e0: mov qword ptr [rsp+0x20],rax
0xf4e5: mov rsi,qword ptr [rsp+0x20]
0xf4ea: mov rdi,r13
0xf4ed: call 0x11080
0xf4f2: mov r13,rax
0xf4f5: mov rdx,qword ptr [rsp+0x18]
0xf4fa: lea rdi,[r13+r14]
0xf4ff: mov rsi,r15
0xf502: call 0x2b60
0xf507: mov r14,qword ptr [rsp+0x30]
0xf50c: jmp 0xf2f4
0xf511: cmp qword ptr [rsp+0x10],0x0
0xf517: je 0xf5c5
0xf51d: movabsq rax,0x555555555555554
0xf527: cmp r12,rax
0xf52a: ja 0xf599
0xf52c: mov rax,r12
0xf52f: shr rax, 1
0xf532: add rax,qword ptr [rsp+0x38]
0xf537: mov qword ptr [rsp+0x28],rax
0xf53c: mov rsi,qword ptr [rsp+0x28]
0xf541: mov rdi,qword ptr [rsp+0x10]
0xf546: mov qword ptr [rsp+0x30],rcx
0xf54b: shl rsi,0x4
0xf54f: call 0x11080
0xf554: mov rcx,qword ptr [rsp+0x30]
0xf559: mov qword ptr [rsp+0x10],rax
0xf55e: jmp 0xf365
0xf563: mov rbx,qword ptr [rsp+0x20]
0xf568: mov rdi,r13
0xf56b: lea rsi,[rbx+0x1]
0xf56f: call 0x11080
0xf574: mov r13,rax
0xf577: add rbx,rax
0xf57a: jmp 0xf3e8
0xf57f: test rdx,rdx
0xf582: mov eax,0x80
0xf587: cmovne rax,rdx
0xf58b: test rax,rax
0xf58e: mov qword ptr [rsp+0x20],rax
0xf593: jns 0xf4e5
0xf599: call 0x11270
0xf59e: nop 
0xf5a0: mov rdi,qword ptr [rsp+0x10]
0xf5a5: call 0x2e10
0xf5aa: mov rdi,r13
0xf5ad: xor r13d,r13d
0xf5b0: call 0x2e10
0xf5b5: mov dword ptr [rbp],ebx
0xf5b8: jmp 0xf3eb
0xf5bd: xor r13d,r13d
0xf5c0: jmp 0xf3eb
0xf5c5: test r12,r12
0xf5c8: mov eax,0x8
0xf5cd: mov edx,0x10
0xf5d2: cmovne rax,r12
0xf5d6: xor esi,esi
0xf5d8: mov rdi,rax
0xf5db: mov qword ptr [rsp+0x28],rax
0xf5e0: mov rax,rdx
0xf5e3: mul rdi
0xf5e6: jo 0xf601
0xf5e8: test rax,rax
0xf5eb: js 0xf599
0xf5ed: test rsi,rsi
0xf5f0: jne 0xf599
0xf5f2: lea rax,[r12+0x1]
0xf5f7: mov qword ptr [rsp+0x38],rax
0xf5fc: jmp 0xf53c
0xf601: mov esi,0x1
0xf606: jmp 0xf5e8
0xf610: push r12
0xf612: push rbp
0xf613: mov ebp,esi
0xf615: push rbx
0xf616: call 0x115a0
0xf61b: test rax,rax
0xf61e: je 0xf648
0xf620: mov esi,ebp
0xf622: mov rbx,rax
0xf625: mov rdi,rax
0xf628: call 0xf290
0xf62d: mov rdi,rbx
0xf630: mov rbp,rax
0xf633: call 0x2a60
0xf638: test eax,eax
0xf63a: jne 0xf650
0xf63c: mov rax,rbp
0xf63f: pop rbx
0xf640: pop rbp
0xf641: pop r12
0xf643: ret 
0xf648: xor ebp,ebp
0xf64a: jmp 0xf63c
0xf650: call 0x2770
0xf655: mov r12d,dword ptr [rax]
0xf658: mov rbx,rax
0xf65b: mov rdi,rbp
0xf65e: call 0x2e10
0xf663: xor ebp,ebp
0xf665: mov dword ptr [rbx],r12d
0xf668: jmp 0xf63c
0xf670: push rbx
0xf671: mov rsi,rdi
0xf674: mov edi,0x1
0xf679: sub rsp,0xa0
0xf680: mov rdx,rsp
0xf683: mov rax,qword ptr fs:0x28
0xf68c: mov qword ptr [rsp+0x98],rax
0xf694: xor eax,eax
0xf696: call 0x2910
0xf69b: mov ebx,eax
0xf69d: call 0x2770
0xf6a2: test ebx,ebx
0xf6a4: je 0xf6c0
0xf6a6: mov edx,dword ptr [rax]
0xf6a8: cmp edx,0x4b
0xf6ab: je 0xf6c0
0xf6ad: xor eax,eax
0xf6af: cmp edx,0x2
0xf6b2: setne al
0xf6b5: neg eax
0xf6b7: jmp 0xf6cb
0xf6c0: mov dword ptr [rax],0x11
0xf6c6: mov eax,0xffffffff
0xf6cb: mov rcx,qword ptr [rsp+0x98]
0xf6d3: xor rcx,qword ptr fs:0x28
0xf6dc: jne 0xf6e7
0xf6de: add rsp,0xa0
0xf6e5: pop rbx
0xf6e6: ret 
0xf6e7: call 0x2930
0xf6ec: nop dword ptr [rax]
0xf6f0: mov esi,0x1c0
0xf6f5: jmp 0x27e0
0xf700: mov esi,dword ptr [rsi]
0xf702: mov edx,0x180
0xf707: xor eax,eax
0xf709: and sil,0x3c
0xf70d: or sil,-0x3e
0xf711: jmp 0x2cd0
0xf720: push r15
0xf722: push r14
0xf724: mov r15,rdi
0xf727: push r13
0xf729: push r12
0xf72b: mov r14,r8
0xf72e: push rbp
0xf72f: push rbx
0xf730: mov ebp,esi
0xf732: sub rsp,0x38
0xf736: mov qword ptr [rsp+0x18],rdx
0xf73b: mov qword ptr [rsp],rdi
0xf73f: mov qword ptr [rsp+0x20],rcx
0xf744: call 0x2770
0xf749: mov qword ptr [rsp+0x8],rax
0xf74e: mov eax,dword ptr [rax]
0xf750: mov rdi,r15
0xf753: mov dword ptr [rsp+0x2c],eax
0xf757: call 0x2900
0xf75c: movsxd rsi,ebp
0xf75f: lea rdx,[rsi+r14]
0xf763: cmp rdx,rax
0xf766: ja 0xf87b
0xf76c: sub rax,r14
0xf76f: mov rbx,rax
0xf772: sub rbx,rsi
0xf775: lea rsi,[rip+0x5a29]
0xf77c: lea rax,[r15+rbx]
0xf780: mov rdi,rax
0xf783: mov qword ptr [rsp+0x10],rax
0xf788: call 0x2a50
0xf78d: cmp r14,rax
0xf790: ja 0xf87b
0xf796: xor edi,edi
0xf798: mov rsi,r14
0xf79b: call 0x11820
0xf7a0: test rax,rax
0xf7a3: mov rbp,rax
0xf7a6: je 0xf88d
0xf7ac: mov rax,qword ptr [rsp]
0xf7b0: lea r12,[rip+0x60c9]
0xf7b7: mov r13d,0x3a2f8
0xf7bd: add rax,r14
0xf7c0: add rbx,rax
0xf7c3: nop dword ptr [rax+rax]
0xf7c8: test r14,r14
0xf7cb: mov r15,qword ptr [rsp+0x10]
0xf7d0: je 0xf7f7
0xf7d2: nop word ptr [rax+rax]
0xf7d8: mov esi,0x3d
0xf7dd: mov rdi,rbp
0xf7e0: add r15,0x1
0xf7e4: call 0x11870
0xf7e9: movzx eax,byte ptr [r12+rax]
0xf7ee: mov byte ptr [r15-0x1],al
0xf7f2: cmp r15,rbx
0xf7f5: jne 0xf7d8
0xf7f7: mov rsi,qword ptr [rsp+0x18]
0xf7fc: mov rdi,qword ptr [rsp]
0xf800: mov rax,qword ptr [rsp+0x20]
0xf805: call rax
0xf807: test eax,eax
0xf809: mov edx,eax
0xf80b: jns 0xf839
0xf80d: mov rax,qword ptr [rsp+0x8]
0xf812: mov ecx,dword ptr [rax]
0xf814: cmp ecx,0x11
0xf817: jne 0xf874
0xf819: sub r13d,0x1
0xf81d: jne 0xf7c8
0xf81f: mov rdi,rbp
0xf822: call 0x119b0
0xf827: mov rax,qword ptr [rsp+0x8]
0xf82c: mov edx,0xffffffff
0xf831: mov dword ptr [rax],0x11
0xf837: jmp 0xf863
0xf839: mov rcx,qword ptr [rsp+0x8]
0xf83e: mov eax,dword ptr [rsp+0x2c]
0xf842: mov dword ptr [rcx],eax
0xf844: mov ecx,eax
0xf846: mov rdi,rbp
0xf849: mov dword ptr [rsp+0x10],edx
0xf84d: mov dword ptr [rsp],ecx
0xf850: call 0x119b0
0xf855: mov rax,qword ptr [rsp+0x8]
0xf85a: mov ecx,dword ptr [rsp]
0xf85d: mov edx,dword ptr [rsp+0x10]
0xf861: mov dword ptr [rax],ecx
0xf863: add rsp,0x38
0xf867: mov eax,edx
0xf869: pop rbx
0xf86a: pop rbp
0xf86b: pop r12
0xf86d: pop r13
0xf86f: pop r14
0xf871: pop r15
0xf873: ret 
0xf874: mov edx,0xffffffff
0xf879: jmp 0xf846
0xf87b: mov rax,qword ptr [rsp+0x8]
0xf880: mov edx,0xffffffff
0xf885: mov dword ptr [rax],0x16
0xf88b: jmp 0xf863
0xf88d: mov edx,0xffffffff
0xf892: jmp 0xf863
0xf8a0: sub rsp,0x18
0xf8a4: cmp ecx,0x1
0xf8a7: mov dword ptr [rsp+0xc],edx
0xf8ab: je 0xf910
0xf8ad: cmp ecx,0x2
0xf8b0: je 0xf8d8
0xf8b2: test ecx,ecx
0xf8b4: je 0xf8f0
0xf8b6: lea rcx,[rip+0x5fa3]
0xf8bd: lea rsi,[rip+0x5f44]
0xf8c4: lea rdi,[rip+0x5f65]
0xf8cb: mov edx,0x147
0xf8d0: call 0x29e0
0xf8d5: nop dword ptr [rax]
0xf8d8: lea rdx,[rsp+0xc]
0xf8dd: lea rcx,[rip-0x274]
0xf8e4: call 0xf720
0xf8e9: add rsp,0x18
0xf8ed: ret 
0xf8f0: lea rdx,[rsp+0xc]
0xf8f5: lea rcx,[rip-0x1fc]
0xf8fc: call 0xf720
0xf901: add rsp,0x18
0xf905: ret 
0xf910: lea rdx,[rsp+0xc]
0xf915: lea rcx,[rip-0x22c]
0xf91c: call 0xf720
0xf921: add rsp,0x18
0xf925: ret 
0xf930: mov r8d,0x6
0xf936: jmp 0xf8a0
0xf940: mov r8d,0x6
0xf946: jmp 0xf720
0xf990: mov rax,qword ptr [rdi]
0xf993: xor edx,edx
0xf995: div rsi
0xf998: mov rax,rdx
0xf99b: ret 
0xf9a0: mov rax,qword ptr [rsi]
0xf9a3: cmp qword ptr [rdi],rax
0xf9a6: sete al
0xf9a9: ret 
0xf9b0: push r15
0xf9b2: push r14
0xf9b4: push r13
0xf9b6: push r12
0xf9b8: push rbp
0xf9b9: push rbx
0xf9ba: mov ebx,r8d
0xf9bd: and ebx,0x1
0xf9c0: sub rsp,0x128
0xf9c7: mov r13,qword ptr [rcx+0x60]
0xf9cb: mov r14,qword ptr [rdx+0x58]
0xf9cf: mov rax,qword ptr fs:0x28
0xf9d8: mov qword ptr [rsp+0x118],rax
0xf9e0: xor eax,eax
0xf9e2: test ebx,ebx
0xf9e4: mov r12,qword ptr [rcx+0x58]
0xf9e8: mov r15,qword ptr [rdx+0x60]
0xf9ec: mov r9d,r13d
0xf9ef: je 0xfad8
0xf9f5: cmp r14,r12
0xf9f8: mov r10d,edi
0xf9fb: sete qword ptr [rsp+0x38]
0xfa00: movzx edi,byte ptr [rsp+0x38]
0xfa05: cmp r15d,r13d
0xfa08: sete al
0xfa0b: and al,dil
0xfa0e: mov byte ptr [rsp+0x8],al
0xfa12: jne 0xfb20
0xfa18: lea rax,[r12-0x1]
0xfa1d: cmp rax,r14
0xfa20: jg 0xfb28
0xfa26: lea rax,[r14-0x1]
0xfa2a: cmp rax,r12
0xfa2d: jg 0xfaef
0xfa33: mov rbp,rdx
0xfa36: mov rdx,qword ptr [rip+0x20acc3]
0xfa3d: mov r11,rsi
0xfa40: test rdx,rdx
0xfa43: je 0xffe0
0xfa49: mov rsi,qword ptr [rip+0x20aca8]
0xfa50: test rsi,rsi
0xfa53: je 0xfb30
0xfa59: mov rax,qword ptr [rbp]
0xfa5d: mov rdi,rdx
0xfa60: mov qword ptr [rsp+0x28],r11
0xfa65: mov dword ptr [rsp+0x20],r10d
0xfa6a: mov dword ptr [rsp+0x18],r9d
0xfa6f: mov qword ptr [rsi],rax
0xfa72: call 0xcbd0
0xfa77: test rax,rax
0xfa7a: mov qword ptr [rsp+0x10],rax
0xfa7f: mov r9d,dword ptr [rsp+0x18]
0xfa84: mov r10d,dword ptr [rsp+0x20]
0xfa89: mov r11,qword ptr [rsp+0x28]
0xfa8e: je 0xfb88
0xfa94: cmp qword ptr [rip+0x20ac5d],rax
0xfa9b: je 0x10040
0xfaa1: mov rax,qword ptr [rsp+0x10]
0xfaa6: cmp byte ptr [rax+0xc],0x0
0xfaaa: mov esi,dword ptr [rax+0x8]
0xfaad: mov dword ptr [rsp+0x18],esi
0xfab1: je 0xfc0a
0xfab7: xor eax,eax
0xfab9: cmp esi,0x77359400
0xfabf: sete al
0xfac2: not eax
0xfac4: cltq 
0xfac6: and r12,rax
0xfac9: mov eax,r9d
0xfacc: mov r9d,r13d
0xfacf: cltd 
0xfad0: idiv esi
0xfad2: sub r9d,edx
0xfad5: nop dword ptr [rax]
0xfad8: cmp r12,r14
0xfadb: jg 0xfb28
0xfadd: mov ebx,0x1
0xfae2: jl 0xfaef
0xfae4: cmp r9d,r15d
0xfae7: jg 0xfb28
0xfae9: setl bl
0xfaec: movzx ebx,bl
0xfaef: mov rsi,qword ptr [rsp+0x118]
0xfaf7: xor rsi,qword ptr fs:0x28
0xfb00: mov eax,ebx
0xfb02: jne 0x100d8
0xfb08: add rsp,0x128
0xfb0f: pop rbx
0xfb10: pop rbp
0xfb11: pop r12
0xfb13: pop r13
0xfb15: pop r14
0xfb17: pop r15
0xfb19: ret 
0xfb20: xor ebx,ebx
0xfb22: jmp 0xfaef
0xfb28: mov ebx,0xffffffff
0xfb2d: jmp 0xfaef
0xfb30: mov edi,0x10
0xfb35: mov qword ptr [rsp+0x28],r11
0xfb3a: mov dword ptr [rsp+0x20],r10d
0xfb3f: mov dword ptr [rsp+0x18],r9d
0xfb44: mov qword ptr [rsp+0x10],rdx
0xfb49: call 0x2bc0
0xfb4e: test rax,rax
0xfb51: mov rsi,rax
0xfb54: mov qword ptr [rip+0x20ab9d],rax
0xfb5b: mov rdx,qword ptr [rsp+0x10]
0xfb60: mov r9d,dword ptr [rsp+0x18]
0xfb65: mov r10d,dword ptr [rsp+0x20]
0xfb6a: mov r11,qword ptr [rsp+0x28]
0xfb6f: je 0xfb98
0xfb71: mov dword ptr [rax+0x8],0x77359400
0xfb78: mov byte ptr [rax+0xc],0x0
0xfb7c: jmp 0xfa59
0xfb88: mov rdx,qword ptr [rip+0x20ab71]
0xfb8f: test rdx,rdx
0xfb92: je 0x10032
0xfb98: lea rcx,[rsp+0x50]
0xfb9d: mov rax,qword ptr [rbp]
0xfba1: mov rdi,rdx
0xfba4: mov qword ptr [rsp+0x30],r11
0xfba9: mov dword ptr [rsp+0x28],r10d
0xfbae: mov rsi,rcx
0xfbb1: mov dword ptr [rsp+0x20],r9d
0xfbb6: mov qword ptr [rsp+0x18],rcx
0xfbbb: mov qword ptr [rsp+0x50],rax
0xfbc0: call 0xc160
0xfbc5: test rax,rax
0xfbc8: mov qword ptr [rsp+0x10],rax
0xfbcd: mov rcx,qword ptr [rsp+0x18]
0xfbd2: mov r9d,dword ptr [rsp+0x20]
0xfbd7: mov r10d,dword ptr [rsp+0x28]
0xfbdc: mov r11,qword ptr [rsp+0x30]
0xfbe1: jne 0xfaa1
0xfbe7: nop word ptr [rax+rax]
0xfbf0: mov dword ptr [rsp+0x58],0x77359400
0xfbf8: mov byte ptr [rsp+0x5c],0x0
0xfbfd: mov dword ptr [rsp+0x18],0x77359400
0xfc05: mov qword ptr [rsp+0x10],rcx
0xfc0a: mov rcx,qword ptr [rbp+0x50]
0xfc0e: mov eax,0x66666667
0xfc13: mov rsi,qword ptr [rbp+0x70]
0xfc17: imul ecx
0xfc19: mov eax,ecx
0xfc1b: mov qword ptr [rsp+0x28],rcx
0xfc20: sar eax,0x1f
0xfc23: sar edx,0x2
0xfc26: sub edx,eax
0xfc28: lea eax,[rdx+rdx*4]
0xfc2b: mov dword ptr [rsp+0x20],edx
0xfc2f: add eax,eax
0xfc31: sub ecx,eax
0xfc33: mov eax,0x66666667
0xfc38: imul esi
0xfc3a: mov eax,esi
0xfc3c: sar eax,0x1f
0xfc3f: sar edx,0x2
0xfc42: mov edi,edx
0xfc44: sub edi,eax
0xfc46: lea eax,[rdi+rdi*4]
0xfc49: add eax,eax
0xfc4b: sub esi,eax
0xfc4d: mov eax,0x66666667
0xfc52: imul r15d
0xfc55: mov eax,r15d
0xfc58: or ecx,esi
0xfc5a: sar eax,0x1f
0xfc5d: mov esi,r15d
0xfc60: sar edx,0x2
0xfc63: mov r8d,edx
0xfc66: sub r8d,eax
0xfc69: lea eax,[r8+r8*4]
0xfc6d: add eax,eax
0xfc6f: sub esi,eax
0xfc71: or ecx,esi
0xfc73: jne 0xffc8
0xfc79: cmp dword ptr [rsp+0x18],0xa
0xfc7e: mov rax,qword ptr [rbp+0x48]
0xfc82: mov ecx,edi
0xfc84: mov edx,dword ptr [rsp+0x20]
0xfc88: mov esi,r8d
0xfc8b: mov qword ptr [rsp+0x48],rax
0xfc90: mov dword ptr [rsp+0x30],edx
0xfc94: jle 0x100a8
0xfc9a: mov eax,0x66666667
0xfc9f: imul edi
0xfca1: mov eax,edi
0xfca3: sar eax,0x1f
0xfca6: sar edx,0x2
0xfca9: sub edx,eax
0xfcab: lea eax,[rdx+rdx*4]
0xfcae: add eax,eax
0xfcb0: sub edi,eax
0xfcb2: mov eax,0x66666667
0xfcb7: imul dword ptr [rsp+0x20]
0xfcbb: mov eax,dword ptr [rsp+0x20]
0xfcbf: sar eax,0x1f
0xfcc2: sar edx,0x2
0xfcc5: sub edx,eax
0xfcc7: lea eax,[rdx+rdx*4]
0xfcca: mov edx,dword ptr [rsp+0x20]
0xfcce: mov dword ptr [rsp+0x20],0xa
0xfcd6: add eax,eax
0xfcd8: sub edx,eax
0xfcda: mov eax,0x66666667
0xfcdf: or edi,edx
0xfce1: imul r8d
0xfce4: mov eax,r8d
0xfce7: mov dword ptr [rsp+0x3c],edi
0xfceb: sar eax,0x1f
0xfcee: mov edi,0x66666667
0xfcf3: sar edx,0x2
0xfcf6: sub edx,eax
0xfcf8: lea eax,[rdx+rdx*4]
0xfcfb: mov edx,0x8
0xfd00: add eax,eax
0xfd02: sub r8d,eax
0xfd05: mov eax,dword ptr [rsp+0x3c]
0xfd09: or eax,r8d
0xfd0c: jne 0x100c4
0xfd12: mov dword ptr [rsp+0x3c],r9d
0xfd17: mov qword ptr [rsp+0x40],r14
0xfd1c: mov r9d,0xa
0xfd22: mov r8d,dword ptr [rsp+0x30]
0xfd27: mov qword ptr [rsp+0x20],r12
0xfd2c: mov r14d,edx
0xfd2f: mov qword ptr [rsp+0x30],rbp
0xfd34: mov eax,r8d
0xfd37: sar r8d,0x1f
0xfd3b: lea ebp,[r9+r9*4]
0xfd3f: imul edi
0xfd41: mov eax,ecx
0xfd43: sar ecx,0x1f
0xfd46: add ebp,ebp
0xfd48: mov r9d,ebp
0xfd4b: sar edx,0x2
0xfd4e: sub edx,r8d
0xfd51: mov r8d,edx
0xfd54: imul edi
0xfd56: mov eax,esi
0xfd58: sar esi,0x1f
0xfd5b: sar edx,0x2
0xfd5e: sub edx,ecx
0xfd60: mov ecx,edx
0xfd62: imul edi
0xfd64: sar edx,0x2
0xfd67: sub edx,esi
0xfd69: cmp ebp,dword ptr [rsp+0x18]
0xfd6d: mov esi,edx
0xfd6f: jge 0x10050
0xfd75: mov eax,r8d
0xfd78: mov r12d,r8d
0xfd7b: imul edi
0xfd7d: mov eax,r8d
0xfd80: sar eax,0x1f
0xfd83: sar edx,0x2
0xfd86: sub edx,eax
0xfd88: lea eax,[rdx+rdx*4]
0xfd8b: add eax,eax
0xfd8d: sub r12d,eax
0xfd90: mov eax,ecx
0xfd92: imul edi
0xfd94: mov eax,ecx
0xfd96: sar eax,0x1f
0xfd99: sar edx,0x2
0xfd9c: sub edx,eax
0xfd9e: lea eax,[rdx+rdx*4]
0xfda1: mov edx,ecx
0xfda3: add eax,eax
0xfda5: sub edx,eax
0xfda7: mov eax,esi
0xfda9: or r12d,edx
0xfdac: imul edi
0xfdae: mov eax,esi
0xfdb0: sar eax,0x1f
0xfdb3: sar edx,0x2
0xfdb6: sub edx,eax
0xfdb8: lea eax,[rdx+rdx*4]
0xfdbb: mov edx,esi
0xfdbd: add eax,eax
0xfdbf: sub edx,eax
0xfdc1: or r12d,edx
0xfdc4: jne 0x10050
0xfdca: sub r14d,0x1
0xfdce: jne 0xfd34
0xfdd4: mov r14,qword ptr [rsp+0x40]
0xfdd9: mov rbp,qword ptr [rsp+0x30]
0xfdde: mov rax,qword ptr [rsp+0x48]
0xfde3: mov r12,qword ptr [rsp+0x20]
0xfde8: mov r9d,dword ptr [rsp+0x3c]
0xfded: or rax,r14
0xfdf0: or rax,qword ptr [rbp+0x68]
0xfdf4: test al,0x1
0xfdf6: mov rax,qword ptr [rsp+0x10]
0xfdfb: je 0x10088
0xfe01: mov dword ptr [rax+0x8],0x3b9aca00
0xfe08: mov dword ptr [rsp+0x20],0x3b9aca00
0xfe10: mov rax,r12
0xfe13: cmp r14,r12
0xfe16: jg 0xfaef
0xfe1c: cmp r15d,r13d
0xfe1f: jl 0xfe2c
0xfe21: cmp byte ptr [rsp+0x38],0x0
0xfe26: jne 0xfaef
0xfe2c: cmp r14,rax
0xfe2f: jl 0xfb28
0xfe35: jne 0xfe4d
0xfe37: mov eax,r9d
0xfe3a: cltd 
0xfe3b: idiv dword ptr [rsp+0x20]
0xfe3f: mov eax,r13d
0xfe42: sub eax,edx
0xfe44: cmp eax,r15d
0xfe47: jg 0xfb28
0xfe4d: mov rax,qword ptr [rsp+0x48]
0xfe52: mov edx,0x38e38e39
0xfe57: lea rbp,[rsp+0x60]
0xfe5c: mov rsi,r11
0xfe5f: mov edi,r10d
0xfe62: mov ecx,0x100
0xfe67: mov dword ptr [rsp+0x18],r9d
0xfe6c: mov dword ptr [rsp+0x38],r10d
0xfe71: mov qword ptr [rsp+0x60],rax
0xfe76: movsxd rax,dword ptr [rsp+0x28]
0xfe7b: mov qword ptr [rsp+0x68],rax
0xfe80: movzx eax,byte ptr [rsp+0x8]
0xfe85: mov qword ptr [rsp+0x8],r11
0xfe8a: or rax,r14
0xfe8d: mov qword ptr [rsp+0x70],rax
0xfe92: mov eax,dword ptr [rsp+0x20]
0xfe96: mul edx
0xfe98: mov eax,edx
0xfe9a: mov rdx,rbp
0xfe9d: shr eax, 1
0xfe9f: add eax,r15d
0xfea2: cltq 
0xfea4: mov qword ptr [rsp+0x78],rax
0xfea9: call 0x2750
0xfeae: test eax,eax
0xfeb0: mov r10d,dword ptr [rsp+0x38]
0xfeb5: mov r11,qword ptr [rsp+0x8]
0xfeba: mov r9d,dword ptr [rsp+0x18]
0xfebf: je 0xfecb
0xfec1: mov ebx,0xfffffffe
0xfec6: jmp 0xfaef
0xfecb: lea rcx,[rsp+0x80]
0xfed3: mov rdx,r11
0xfed6: mov r8d,0x100
0xfedc: mov esi,r10d
0xfedf: mov edi,0x1
0xfee4: mov dword ptr [rsp+0x18],r9d
0xfee9: mov qword ptr [rsp+0x8],r11
0xfeee: mov dword ptr [rsp+0x38],r10d
0xfef3: call 0x2980
0xfef8: mov rcx,qword ptr [rsp+0xe0]
0xff00: mov r8d,eax
0xff03: mov rax,qword ptr [rsp+0xd8]
0xff0b: movsxd rdx,r15d
0xff0e: mov r10d,dword ptr [rsp+0x38]
0xff13: mov r11,qword ptr [rsp+0x8]
0xff18: mov r9d,dword ptr [rsp+0x18]
0xff1d: xor rcx,rdx
0xff20: xor rax,r14
0xff23: or rax,rcx
0xff26: movsxd rcx,r8d
0xff29: or rax,rcx
0xff2c: jne 0x100dd
0xff32: mov ecx,dword ptr [rsp+0xd8]
0xff39: mov esi,0xa
0xff3e: and ecx,0x1
0xff41: imul ecx,ecx,0x3b9aca00
0xff47: add ecx,dword ptr [rsp+0xe0]
0xff4e: mov eax,ecx
0xff50: cltd 
0xff51: idiv esi
0xff53: test edx,edx
0xff55: jne 0x10125
0xff5b: cmp dword ptr [rsp+0x20],0xa
0xff60: je 0xff9d
0xff62: mov r8d,0x9
0xff68: mov esi,0xa
0xff6d: mov edi,0xa
0xff72: jmp 0xff7d
0xff74: imul esi,esi,0xa
0xff77: cmp esi,dword ptr [rsp+0x20]
0xff7b: je 0xff9d
0xff7d: mov eax,ecx
0xff7f: cltd 
0xff80: idiv edi
0xff82: cltd 
0xff83: mov ecx,eax
0xff85: idiv edi
0xff87: test edx,edx
0xff89: jne 0x1011c
0xff8f: sub r8d,0x1
0xff93: jne 0xff74
0xff95: mov dword ptr [rsp+0x20],0x77359400
0xff9d: mov esi,dword ptr [rsp+0x20]
0xffa1: xor eax,eax
0xffa3: cmp esi,0x77359400
0xffa9: mov ebx,esi
0xffab: sete al
0xffae: not eax
0xffb0: cltq 
0xffb2: and r12,rax
0xffb5: mov eax,r9d
0xffb8: mov r9d,r13d
0xffbb: cltd 
0xffbc: idiv esi
0xffbe: sub r9d,edx
0xffc1: nop dword ptr [rax]
0xffc8: mov rax,qword ptr [rsp+0x10]
0xffcd: mov dword ptr [rax+0x8],ebx
0xffd0: mov byte ptr [rax+0xc],0x1
0xffd4: jmp 0xfad8
0xffe0: mov r8,qword ptr [rip+0x209fe1]
0xffe7: lea rdx,[rip-0x65e]
0xffee: lea rcx,[rip-0x655]
0xfff5: mov qword ptr [rsp+0x20],rsi
0xfffa: mov edi,0x10
0xffff: xor esi,esi
0x10001: mov dword ptr [rsp+0x18],r10d
0x10006: mov dword ptr [rsp+0x10],r13d
0x1000b: call 0xc3d0
0x10010: test rax,rax
0x10013: mov rdx,rax
0x10016: mov qword ptr [rip+0x20a6e3],rax
0x1001d: mov r9d,dword ptr [rsp+0x10]
0x10022: mov r10d,dword ptr [rsp+0x18]
0x10027: mov r11,qword ptr [rsp+0x20]
0x1002c: jne 0xfa49
0x10032: lea rcx,[rsp+0x50]
0x10037: jmp 0xfbf0
0x10040: mov qword ptr [rip+0x20a6ad],0x0
0x1004b: jmp 0xfaa1
0x10050: cmp ebp,0x77359400
0x10056: mov r12,qword ptr [rsp+0x20]
0x1005b: mov rsi,qword ptr [rsp+0x10]
0x10060: sete qword ptr [rsp+0x8]
0x10065: movzx eax,byte ptr [rsp+0x8]
0x1006a: mov dword ptr [rsp+0x20],r9d
0x1006f: mov r14,qword ptr [rsp+0x40]
0x10074: mov r9d,dword ptr [rsp+0x3c]
0x10079: mov dword ptr [rsi+0x8],ebp
0x1007c: not eax
0x1007e: cltq 
0x10080: and rax,r12
0x10083: jmp 0xfe13
0x10088: mov dword ptr [rax+0x8],0x77359400
0x1008f: mov rax,r12
0x10092: mov byte ptr [rsp+0x8],0x1
0x10097: and rax,-0x2
0x1009b: mov dword ptr [rsp+0x20],0x77359400
0x100a3: jmp 0xfe13
0x100a8: mov rax,qword ptr [rsp+0x10]
0x100ad: mov dword ptr [rsp+0x20],0xa
0x100b5: mov dword ptr [rax+0x8],0xa
0x100bc: mov rax,r12
0x100bf: jmp 0xfe13
0x100c4: mov rax,qword ptr [rsp+0x10]
0x100c9: mov dword ptr [rax+0x8],0xa
0x100d0: mov rax,r12
0x100d3: jmp 0xfe13
0x100d8: call 0x2930
0x100dd: mov qword ptr [rsp+0x78],rdx
0x100e2: mov ecx,0x100
0x100e7: mov rdx,rbp
0x100ea: mov rsi,r11
0x100ed: mov edi,r10d
0x100f0: mov dword ptr [rsp+0x8],r8d
0x100f5: mov dword ptr [rsp+0x38],r9d
0x100fa: mov qword ptr [rsp+0x70],r14
0x100ff: call 0x2750
0x10104: mov r8d,dword ptr [rsp+0x8]
0x10109: mov r9d,dword ptr [rsp+0x38]
0x1010e: test r8d,r8d
0x10111: jne 0xfec1
0x10117: jmp 0xff32
0x1011c: mov dword ptr [rsp+0x20],esi
0x10120: jmp 0xff9d
0x10125: mov dword ptr [rsp+0x20],ebx
0x10129: jmp 0xff9d
0x10130: mov r8d,ecx
0x10133: mov rcx,rdx
0x10136: mov rdx,rsi
0x10139: mov rsi,rdi
0x1013c: mov edi,0xffffff9c
0x10141: jmp 0xf9b0
0x102e0: mov ecx,0x100
0x102e5: jmp 0x2750
0x10736: call 0x2930
0x10760: push r12
0x10762: push rbp
0x10763: mov r12,rdi
0x10766: push rbx
0x10767: sub rsp,0xd0
0x1076e: mov rax,qword ptr fs:0x28
0x10777: mov qword ptr [rsp+0xc8],rax
0x1077f: xor eax,eax
0x10781: test rsi,rsi
0x10784: je 0x10880
0x1078a: movdqu xmm0,[rsi]
0x1078e: lea rdi,[rsp+0x10]
0x10793: movaps [rsp+0x10],xmm0
0x10798: mov qword ptr [rsp+0x8],rdi
0x1079d: movdqu xmm0,[rsi+0x10]
0x107a2: movaps [rsp+0x20],xmm0
0x107a7: call 0x10230
0x107ac: test eax,eax
0x107ae: mov ebx,eax
0x107b0: js 0x108c0
0x107b6: mov eax,dword ptr [rip+0x209f4c]
0x107bc: test eax,eax
0x107be: js 0x107f6
0x107c0: cmp ebx,0x2
0x107c3: je 0x108f0
0x107c9: mov rdx,qword ptr [rsp+0x8]
0x107ce: mov ecx,0x100
0x107d3: mov rsi,r12
0x107d6: mov edi,0xffffff9c
0x107db: call 0x2750
0x107e0: cmp eax,0x0
0x107e3: mov ebp,eax
0x107e5: jle 0x108d0
0x107eb: call 0x2770
0x107f0: mov dword ptr [rax],0x26
0x107f6: test ebx,ebx
0x107f8: mov dword ptr [rip+0x209f06],0xffffffff
0x10802: je 0x108a5
0x10808: cmp ebx,0x3
0x1080b: jne 0x10948
0x10811: cmp qword ptr [rsp+0x8],0x0
0x10817: je 0x10830
0x10819: lea rsi,[rsp+0x8]
0x1081e: lea rdi,[rsp+0x30]
0x10823: xor ebp,ebp
0x10825: call 0x10150
0x1082a: test al,al
0x1082c: jne 0x10858
0x1082e: nop 
0x10830: mov eax,dword ptr [rsp+0x48]
0x10834: and eax,0xf000
0x10839: cmp eax,0xa000
0x1083e: je 0x10996
0x10844: mov rdx,qword ptr [rsp+0x8]
0x10849: mov rsi,r12
0x1084c: mov edi,0xffffffff
0x10851: call 0x102f0
0x10856: mov ebp,eax
0x10858: mov rcx,qword ptr [rsp+0xc8]
0x10860: xor rcx,qword ptr fs:0x28
0x10869: mov eax,ebp
0x1086b: jne 0x109a6
0x10871: add rsp,0xd0
0x10878: pop rbx
0x10879: pop rbp
0x1087a: pop r12
0x1087c: ret 
0x10880: mov ecx,dword ptr [rip+0x209e82]
0x10886: xor edx,edx
0x10888: xor ebx,ebx
0x1088a: mov qword ptr [rsp+0x8],0x0
0x10893: test ecx,ecx
0x10895: jns 0x107ce
0x1089b: mov dword ptr [rip+0x209e63],0xffffffff
0x108a5: lea rdx,[rsp+0x30]
0x108aa: mov rsi,r12
0x108ad: mov edi,0x1
0x108b2: call 0x2910
0x108b7: test eax,eax
0x108b9: je 0x10830
0x108bf: nop 
0x108c0: mov ebp,0xffffffff
0x108c5: jmp 0x10858
0x108d0: jne 0x109ab
0x108d6: mov dword ptr [rip+0x209e2c],0x1
0x108e0: mov dword ptr [rip+0x209e1e],0x1
0x108ea: jmp 0x10858
0x108f0: lea rdx,[rsp+0x30]
0x108f5: mov rsi,r12
0x108f8: mov edi,0x1
0x108fd: call 0x2910
0x10902: test eax,eax
0x10904: jne 0x108c0
0x10906: mov rdx,qword ptr [rsp+0x8]
0x1090b: cmp qword ptr [rdx+0x8],0x3ffffffe
0x10913: je 0x10978
0x10915: cmp qword ptr [rdx+0x18],0x3ffffffe
0x1091d: mov ebx,0x3
0x10922: jne 0x107ce
0x10928: mov rax,qword ptr [rsp+0x90]
0x10930: mov rcx,qword ptr [rsp+0x88]
0x10938: mov qword ptr [rdx+0x18],rax
0x1093c: mov qword ptr [rdx+0x10],rcx
0x10940: jmp 0x107ce
0x10948: lea rdx,[rsp+0x30]
0x1094d: mov rsi,r12
0x10950: mov edi,0x1
0x10955: call 0x2910
0x1095a: test eax,eax
0x1095c: jne 0x108c0
0x10962: cmp qword ptr [rsp+0x8],0x0
0x10968: jne 0x10819
0x1096e: jmp 0x10830
0x10978: mov rax,qword ptr [rsp+0x80]
0x10980: mov rcx,qword ptr [rsp+0x78]
0x10985: mov ebx,0x3
0x1098a: mov qword ptr [rdx],rcx
0x1098d: mov qword ptr [rdx+0x8],rax
0x10991: jmp 0x107ce
0x10996: call 0x2770
0x1099b: mov dword ptr [rax],0x26
0x109a1: jmp 0x108c0
0x109a6: call 0x2930
0x109ab: call 0x2770
0x109b0: cmp dword ptr [rax],0x26
0x109b3: jne 0x108d6
0x109b9: jmp 0x107f6
0x109c0: push r15
0x109c2: push r14
0x109c4: push r13
0x109c6: push r12
0x109c8: mov r12,r9
0x109cb: push rbp
0x109cc: push rbx
0x109cd: mov rbp,rdi
0x109d0: mov rbx,r8
0x109d3: sub rsp,0x28
0x109d7: test rsi,rsi
0x109da: je 0x10af8
0x109e0: mov r8,rdx
0x109e3: lea rdx,[rip+0x4ed5]
0x109ea: mov r9,rcx
0x109ed: xor eax,eax
0x109ef: mov rcx,rsi
0x109f2: mov esi,0x1
0x109f7: call 0x2db0
0x109fc: lea rsi,[rip+0x4ecf]
0x10a03: xor edi,edi
0x10a05: mov edx,0x5
0x10a0a: call 0x28e0
0x10a0f: lea rdx,[rip+0x51ca]
0x10a16: mov rcx,rax
0x10a19: mov r8d,0x7e3
0x10a1f: mov esi,0x1
0x10a24: mov rdi,rbp
0x10a27: xor eax,eax
0x10a29: call 0x2db0
0x10a2e: lea rsi,[rip+0x4f23]
0x10a35: xor edi,edi
0x10a37: mov edx,0x5
0x10a3c: call 0x28e0
0x10a41: mov rsi,rbp
0x10a44: mov rdi,rax
0x10a47: call 0x2ab0
0x10a4c: cmp r12,0x9
0x10a50: ja 0x10d90
0x10a56: lea rdx,[rip+0x515b]
0x10a5d: movsxd rax,dword ptr [rdx+r12*4]
0x10a61: add rax,rdx
0x10a64: jmp rax
0x10ab4: mov r9,qword ptr [rsp+0x18]
0x10ab9: mov rdx,rax
0x10abc: mov rcx,rbx
0x10abf: mov esi,0x1
0x10ac4: mov rdi,rbp
0x10ac7: xor eax,eax
0x10ac9: push r9
0x10acb: push r13
0x10acd: push r12
0x10acf: push r15
0x10ad1: push r14
0x10ad3: mov r9,qword ptr [rsp+0x30]
0x10ad8: mov r8,qword ptr [rsp+0x38]
0x10add: call 0x2db0
0x10ae2: add rsp,0x30
0x10ae6: add rsp,0x28
0x10aea: pop rbx
0x10aeb: pop rbp
0x10aec: pop r12
0x10aee: pop r13
0x10af0: pop r14
0x10af2: pop r15
0x10af4: ret 
0x10af8: mov r8,rcx
0x10afb: mov rcx,rdx
0x10afe: lea rdx,[rip+0x4dc6]
0x10b05: mov esi,0x1
0x10b0a: xor eax,eax
0x10b0c: call 0x2db0
0x10b11: jmp 0x109fc
0x10b62: xor edi,edi
0x10b64: call 0x28e0
0x10b69: mov r10,qword ptr [rsp+0x18]
0x10b6e: push r10
0x10b70: jmp 0x10ab4
0x10d0d: push r12
0x10d0f: push r15
0x10d11: push r14
0x10d13: mov r8,qword ptr [rsp+0x20]
0x10d18: mov rcx,rbx
0x10d1b: mov rdx,rax
0x10d1e: mov rdi,rbp
0x10d21: mov esi,0x1
0x10d26: xor eax,eax
0x10d28: call 0x2db0
0x10d2d: add rsp,0x20
0x10d31: add rsp,0x28
0x10d35: pop rbx
0x10d36: pop rbp
0x10d37: pop r12
0x10d39: pop r13
0x10d3b: pop r14
0x10d3d: pop r15
0x10d3f: ret 
0x10d79: push r12
0x10d7b: push r15
0x10d7d: push r14
0x10d7f: mov r9,qword ptr [rsp+0x28]
0x10d84: jmp 0x10d13
0x10d90: mov r10,qword ptr [rbx+0x40]
0x10d94: mov r9,qword ptr [rbx+0x38]
0x10d98: mov edx,0x5
0x10d9d: mov rax,qword ptr [rbx+0x10]
0x10da1: mov r8,qword ptr [rbx+0x8]
0x10da5: lea rsi,[rip+0x4d84]
0x10dac: mov r13,qword ptr [rbx+0x30]
0x10db0: mov r12,qword ptr [rbx+0x28]
0x10db4: mov r15,qword ptr [rbx+0x20]
0x10db8: mov r14,qword ptr [rbx+0x18]
0x10dbc: mov qword ptr [rsp+0x18],r10
0x10dc1: mov qword ptr [rsp+0x10],r9
0x10dc6: mov qword ptr [rsp],rax
0x10dca: mov qword ptr [rsp+0x8],r8
0x10dcf: mov rbx,qword ptr [rbx]
0x10dd2: jmp 0x10b62
0x10de0: xor r9d,r9d
0x10de3: cmp qword ptr [r8],0x0
0x10de7: je 0x10dfb
0x10de9: nop dword ptr [rax]
0x10df0: add r9,0x1
0x10df4: cmp qword ptr [r8+r9*8],0x0
0x10df9: jne 0x10df0
0x10dfb: jmp 0x109c0
0x10e00: sub rsp,0x68
0x10e04: mov r10,r8
0x10e07: xor r9d,r9d
0x10e0a: mov rax,qword ptr fs:0x28
0x10e13: mov qword ptr [rsp+0x58],rax
0x10e18: xor eax,eax
0x10e1a: mov r8,rsp
0x10e1d: nop dword ptr [rax]
0x10e20: mov eax,dword ptr [r10]
0x10e23: cmp eax,0x2f
0x10e26: ja 0x10e6a
0x10e28: mov r11d,eax
0x10e2b: add r11,qword ptr [r10+0x10]
0x10e2f: add eax,0x8
0x10e32: mov dword ptr [r10],eax
0x10e35: mov rax,qword ptr [r11]
0x10e38: test rax,rax
0x10e3b: mov qword ptr [r8+r9*8],rax
0x10e3f: je 0x10e4b
0x10e41: add r9,0x1
0x10e45: cmp r9,0xa
0x10e49: jne 0x10e20
0x10e4b: call 0x109c0
0x10e50: mov rax,qword ptr [rsp+0x58]
0x10e55: xor rax,qword ptr fs:0x28
0x10e5e: jne 0x10e65
0x10e60: add rsp,0x68
0x10e64: ret 
0x10e65: call 0x2930
0x10e6a: mov r11,qword ptr [r10+0x8]
0x10e6e: lea rax,[r11+0x8]
0x10e72: mov qword ptr [r10+0x8],rax
0x10e76: jmp 0x10e35
0x10e80: push rbp
0x10e81: push rbx
0x10e82: mov r10d,0x20
0x10e88: xor r11d,r11d
0x10e8b: sub rsp,0xb8
0x10e92: mov rax,qword ptr fs:0x28
0x10e9b: mov qword ptr [rsp+0x78],rax
0x10ea0: xor eax,eax
0x10ea2: lea rax,[rsp+0xd0]
0x10eaa: mov qword ptr [rsp+0xa0],r8
0x10eb2: lea rbx,[rsp+0xd0]
0x10eba: lea r8,[rsp+0x20]
0x10ebf: mov qword ptr [rsp+0xa8],r9
0x10ec7: mov dword ptr [rsp+0x8],0x20
0x10ecf: mov qword ptr [rsp+0x10],rax
0x10ed4: lea rax,[rsp+0x80]
0x10edc: xor r9d,r9d
0x10edf: mov qword ptr [rsp+0x18],rax
0x10ee4: mov rbp,rax
0x10ee7: nop word ptr [rax+rax]
0x10ef0: cmp r10d,0x2f
0x10ef4: ja 0x10f4c
0x10ef6: mov eax,r10d
0x10ef9: mov r11d,0x1
0x10eff: add r10d,0x8
0x10f03: add rax,rbp
0x10f06: mov rax,qword ptr [rax]
0x10f09: test rax,rax
0x10f0c: mov qword ptr [r8+r9*8],rax
0x10f10: je 0x10f1c
0x10f12: add r9,0x1
0x10f16: cmp r9,0xa
0x10f1a: jne 0x10ef0
0x10f1c: test r11b,r11b
0x10f1f: jne 0x10f45
0x10f21: call 0x109c0
0x10f26: mov rax,qword ptr [rsp+0x78]
0x10f2b: xor rax,qword ptr fs:0x28
0x10f34: jne 0x10f40
0x10f36: add rsp,0xb8
0x10f3d: pop rbx
0x10f3e: pop rbp
0x10f3f: ret 
0x10f40: call 0x2930
0x10f45: mov dword ptr [rsp+0x8],r10d
0x10f4a: jmp 0x10f21
0x10f4c: mov rax,rbx
0x10f4f: add rbx,0x8
0x10f53: jmp 0x10f06
0x10f60: push rbx
0x10f61: lea rsi,[rip+0x49b1]
0x10f68: mov edx,0x5
0x10f6d: xor edi,edi
0x10f6f: call 0x28e0
0x10f74: lea rdx,[rip+0x49b3]
0x10f7b: mov rsi,rax
0x10f7e: mov edi,0x1
0x10f83: xor eax,eax
0x10f85: call 0x2c60
0x10f8a: lea rsi,[rip+0x49b3]
0x10f91: mov edx,0x5
0x10f96: xor edi,edi
0x10f98: call 0x28e0
0x10f9d: lea rcx,[rip+0x3444]
0x10fa4: lea rdx,[rip+0x1a13]
0x10fab: mov rsi,rax
0x10fae: mov edi,0x1
0x10fb3: xor eax,eax
0x10fb5: call 0x2c60
0x10fba: mov rbx,qword ptr [rip+0x2090e7]
0x10fc1: lea rsi,[rip+0x4ba8]
0x10fc8: xor edi,edi
0x10fca: mov edx,0x5
0x10fcf: call 0x28e0
0x10fd4: mov rsi,rbx
0x10fd7: mov rdi,rax
0x10fda: pop rbx
0x10fdb: jmp 0x2ab0
0x10fe0: cmp byte ptr [rip+0x20972a],0x0
0x10fe7: je 0x10ff8
0x10fe9: movzx eax,byte ptr [rip+0x209720]
0x10ff0: ret 
0x10ff8: sub rsp,0x8
0x10ffc: call 0x2a00
0x11001: test eax,eax
0x11003: mov byte ptr [rip+0x209707],0x1
0x1100a: sete al
0x1100d: mov byte ptr [rip+0x2096fd],al
0x11013: add rsp,0x8
0x11017: ret 
0x1103a: nop word ptr [rax+rax]
0x11040: mov rax,rdi
0x11043: mul rsi
0x11046: mov rdi,rax
0x11049: seto al
0x1104c: test rdi,rdi
0x1104f: js 0x1105b
0x11051: movzx eax,al
0x11054: test rax,rax
0x11057: jne 0x1105b
0x11059: jmp 0x11020
0x1105b: sub rsp,0x8
0x1105f: call 0x11270
0x11064: nop 
0x11066: nop word ptr cs:[rax+rax]
0x11070: jmp 0x11020
0x110b6: nop word ptr cs:[rax+rax]
0x110c0: mov rax,rsi
0x110c3: mul rdx
0x110c6: mov rsi,rax
0x110c9: seto al
0x110cc: test rsi,rsi
0x110cf: js 0x110db
0x110d1: movzx eax,al
0x110d4: test rax,rax
0x110d7: jne 0x110db
0x110d9: jmp 0x11080
0x110db: sub rsp,0x8
0x110df: call 0x11270
0x110e4: nop 
0x110e6: nop word ptr cs:[rax+rax]
0x110f0: test rdi,rdi
0x110f3: mov r9,rdx
0x110f6: mov rcx,qword ptr [rsi]
0x110f9: je 0x11130
0x110fb: xor edx,edx
0x110fd: movabsq rax,0x5555555555555554
0x11107: div r9
0x1110a: cmp rax,rcx
0x1110d: jbe 0x1114b
0x1110f: mov rax,rcx
0x11112: shr rax, 1
0x11115: lea rcx,[rax+rcx+0x1]
0x1111a: mov qword ptr [rsi],rcx
0x1111d: imul rcx,r9
0x11121: mov rsi,rcx
0x11124: jmp 0x11080
0x11130: test rcx,rcx
0x11133: je 0x11158
0x11135: mov rax,rcx
0x11138: mul r9
0x1113b: seto dl
0x1113e: test rax,rax
0x11141: movzx edx,dl
0x11144: js 0x1114b
0x11146: test rdx,rdx
0x11149: je 0x1111a
0x1114b: sub rsp,0x8
0x1114f: call 0x11270
0x11154: nop dword ptr [rax]
0x11158: xor edx,edx
0x1115a: mov eax,0x80
0x1115f: xor r8d,r8d
0x11162: div r9
0x11165: test rax,rax
0x11168: sete r8b
0x1116c: lea rcx,[r8+rax]
0x11170: jmp 0x11135
0x11180: test rdi,rdi
0x11183: mov rax,qword ptr [rsi]
0x11186: je 0x111b0
0x11188: movabsq rdx,0x5555555555555553
0x11192: cmp rax,rdx
0x11195: ja 0x111c1
0x11197: mov rdx,rax
0x1119a: shr rdx, 1
0x1119d: lea rax,[rdx+rax+0x1]
0x111a2: mov qword ptr [rsi],rax
0x111a5: mov rsi,rax
0x111a8: jmp 0x11080
0x111b0: test rax,rax
0x111b3: mov edx,0x80
0x111b8: cmove rax,rdx
0x111bc: test rax,rax
0x111bf: jns 0x111a2
0x111c1: sub rsp,0x8
0x111c5: call 0x11270
0x111ca: nop word ptr [rax+rax]
0x111d0: push rbx
0x111d1: mov rbx,rdi
0x111d4: call 0x11020
0x111d9: mov rdx,rbx
0x111dc: xor esi,esi
0x111de: mov rdi,rax
0x111e1: pop rbx
0x111e2: jmp 0x29f0
0x111f0: mov rax,rdi
0x111f3: sub rsp,0x8
0x111f7: mul rsi
0x111fa: seto dl
0x111fd: test rax,rax
0x11200: js 0x11219
0x11202: movzx edx,dl
0x11205: test rdx,rdx
0x11208: jne 0x11219
0x1120a: call 0x2ad0
0x1120f: test rax,rax
0x11212: je 0x11219
0x11214: add rsp,0x8
0x11218: ret 
0x11219: call 0x11270
0x1121e: nop 
0x112a0: call 0x2760
0x112a5: nop word ptr cs:[rax+rax]
0x112af: nop 
0x112b0: push rbx
0x112b1: mov edx,0xa
0x112b6: xor ebx,ebx
0x112b8: sub rsp,0x20
0x112bc: mov rcx,qword ptr [rip+0x208ded]
0x112c3: lea rsi,[rsp+0x10]
0x112c8: lea rdi,[rsp+0x8]
0x112cd: mov qword ptr [rsp+0x8],0x0
0x112d6: mov rax,qword ptr fs:0x28
0x112df: mov qword ptr [rsp+0x18],rax
0x112e4: xor eax,eax
0x112e6: mov qword ptr [rsp+0x10],0x0
0x112ef: call 0x2ae0
0x112f4: test rax,rax
0x112f7: jle 0x11312
0x112f9: mov rdi,qword ptr [rsp+0x8]
0x112fe: lea rax,[rdi+rax-0x1]
0x11303: cmp byte ptr [rax],0xa
0x11306: je 0x11338
0x11308: call 0x2b20
0x1130d: test eax,eax
0x1130f: setg bl
0x11312: mov rdi,qword ptr [rsp+0x8]
0x11317: call 0x2e10
0x1131c: mov rdx,qword ptr [rsp+0x18]
0x11321: xor rdx,qword ptr fs:0x28
0x1132a: mov eax,ebx
0x1132c: jne 0x11342
0x1132e: add rsp,0x20
0x11332: pop rbx
0x11333: ret 
0x11338: mov byte ptr [rax],0x0
0x1133b: mov rdi,qword ptr [rsp+0x8]
0x11340: jmp 0x11308
0x11342: call 0x2930
0x11347: nop word ptr [rax+rax]
0x11350: test rdi,rdi
0x11353: push rbx
0x11354: mov rbx,rdi
0x11357: je 0x1136a
0x11359: call 0x2c10
0x1135e: test eax,eax
0x11360: je 0x1136a
0x11362: test dword ptr [rbx],0x100
0x11368: jne 0x11378
0x1136a: mov rdi,rbx
0x1136d: pop rbx
0x1136e: jmp 0x2bd0
0x11378: mov rdi,rbx
0x1137b: mov edx,0x1
0x11380: xor esi,esi
0x11382: call 0x113c0
0x11387: mov rdi,rbx
0x1138a: pop rbx
0x1138b: jmp 0x2bd0
0x11390: xor eax,eax
0x11392: mov rcx,qword ptr [rdi+0x20]
0x11396: cmp qword ptr [rdi+0x28],rcx
0x1139a: ja 0x113b7
0x1139c: mov rax,qword ptr [rdi+0x10]
0x113a0: sub rax,qword ptr [rdi+0x8]
0x113a4: test dword ptr [rdi],0x100
0x113aa: je 0x113b7
0x113ac: mov rdx,qword ptr [rdi+0x58]
0x113b0: sub rdx,qword ptr [rdi+0x48]
0x113b4: add rax,rdx
0x113b7: rep ret 
0x113c0: mov rax,qword ptr [rdi+0x8]
0x113c4: cmp qword ptr [rdi+0x10],rax
0x113c8: je 0x113d0
0x113ca: jmp 0x2ce0
0x113d0: mov rax,qword ptr [rdi+0x20]
0x113d4: cmp qword ptr [rdi+0x28],rax
0x113d8: jne 0x113ca
0x113da: cmp qword ptr [rdi+0x48],0x0
0x113df: jne 0x113ca
0x113e1: push r12
0x113e3: push rbp
0x113e4: mov r12d,edx
0x113e7: push rbx
0x113e8: mov rbp,rsi
0x113eb: mov rbx,rdi
0x113ee: call 0x2b80
0x113f3: mov edx,r12d
0x113f6: mov rsi,rbp
0x113f9: mov edi,eax
0x113fb: call 0x29c0
0x11400: cmp rax,-0x1
0x11404: je 0x11412
0x11406: and dword ptr [rbx],-0x11
0x11409: mov qword ptr [rbx+0x90],rax
0x11410: xor eax,eax
0x11412: pop rbx
0x11413: pop rbp
0x11414: pop r12
0x11416: ret 
0x11420: push r13
0x11422: push r12
0x11424: mov r13,rsi
0x11427: push rbp
0x11428: push rbx
0x11429: mov rbx,rdi
0x1142c: mov r12,rdx
0x1142f: sub rsp,0x18
0x11433: mov rax,qword ptr fs:0x28
0x1143c: mov qword ptr [rsp+0x8],rax
0x11441: xor eax,eax
0x11443: lea rax,[rsp+0x4]
0x11448: test rdi,rdi
0x1144b: cmove rbx,rax
0x1144f: mov rdi,rbx
0x11452: call 0x2960
0x11457: cmp rax,-0x3
0x1145b: mov rbp,rax
0x1145e: jbe 0x11480
0x11460: test r12,r12
0x11463: je 0x11480
0x11465: xor edi,edi
0x11467: call 0x116a0
0x1146c: test al,al
0x1146e: jne 0x11480
0x11470: movzx eax,byte ptr [r13]
0x11475: mov ebp,0x1
0x1147a: mov dword ptr [rbx],eax
0x1147c: nop dword ptr [rax]
0x11480: mov rdx,qword ptr [rsp+0x8]
0x11485: xor rdx,qword ptr fs:0x28
0x1148e: mov rax,rbp
0x11491: jne 0x1149e
0x11493: add rsp,0x18
0x11497: pop rbx
0x11498: pop rbp
0x11499: pop r12
0x1149b: pop r13
0x1149d: ret 
0x1149e: call 0x2930
0x114a3: nop word ptr cs:[rax+rax]
0x114ad: nop dword ptr [rax]
0x11520: push r12
0x11522: push rbp
0x11523: mov rbp,rdi
0x11526: push rbx
0x11527: call 0x27c0
0x1152c: mov ebx,dword ptr [rbp]
0x1152f: mov rdi,rbp
0x11532: mov r12,rax
0x11535: call 0x12490
0x1153a: and ebx,0x20
0x1153d: test ebx,ebx
0x1153f: jne 0x11558
0x11541: test eax,eax
0x11543: je 0x1154f
0x11545: test r12,r12
0x11548: mov eax,0xffffffff
0x1154d: je 0x11588
0x1154f: pop rbx
0x11550: pop rbp
0x11551: pop r12
0x11553: ret 
0x11558: test eax,eax
0x1155a: jne 0x11578
0x1155c: call 0x2770
0x11561: mov dword ptr [rax],0x0
0x11567: mov eax,0xffffffff
0x1156c: pop rbx
0x1156d: pop rbp
0x1156e: pop r12
0x11570: ret 
0x11578: pop rbx
0x11579: mov eax,0xffffffff
0x1157e: pop rbp
0x1157f: pop r12
0x11581: ret 
0x11588: call 0x2770
0x1158d: cmp dword ptr [rax],0x9
0x11590: pop rbx
0x11591: pop rbp
0x11592: pop r12
0x11594: setne al
0x11597: movzx eax,al
0x1159a: neg eax
0x1159c: ret 
0x115a0: push r14
0x115a2: push r13
0x115a4: push r12
0x115a6: push rbp
0x115a7: push rbx
0x115a8: call 0x28a0
0x115ad: test rax,rax
0x115b0: mov rbx,rax
0x115b3: je 0x115c2
0x115b5: mov rdi,rax
0x115b8: call 0x2b00
0x115bd: cmp eax,0x2
0x115c0: jbe 0x115d0
0x115c2: mov rax,rbx
0x115c5: pop rbx
0x115c6: pop rbp
0x115c7: pop r12
0x115c9: pop r13
0x115cb: pop r14
0x115cd: ret 
0x115d0: mov edi,eax
0x115d2: mov edx,0x3
0x115d7: mov esi,0x406
0x115dc: xor eax,eax
0x115de: call 0x12510
0x115e3: mov r12d,eax
0x115e6: call 0x2770
0x115eb: test r12d,r12d
0x115ee: mov rbp,rax
0x115f1: jns 0x11618
0x115f3: mov r14d,dword ptr [rax]
0x115f6: xor r13d,r13d
0x115f9: mov rdi,rbx
0x115fc: mov rbx,r13
0x115ff: call 0x2a60
0x11604: mov dword ptr [rbp],r14d
0x11608: mov rax,rbx
0x1160b: pop rbx
0x1160c: pop rbp
0x1160d: pop r12
0x1160f: pop r13
0x11611: pop r14
0x11613: ret 
0x11618: mov edi,r12d
0x1161b: call 0x2d20
0x11620: test rax,rax
0x11623: mov r13,rax
0x11626: mov r14d,dword ptr [rbp]
0x1162a: jne 0x115f9
0x1162c: mov edi,r12d
0x1162f: call 0x2a30
0x11634: jmp 0x115f9
0x11650: sub rsp,0x28
0x11654: xor edi,edi
0x11656: mov rsi,rsp
0x11659: mov rax,qword ptr fs:0x28
0x11662: mov qword ptr [rsp+0x18],rax
0x11667: xor eax,eax
0x11669: call 0x2830
0x1166e: mov rcx,qword ptr [rsp+0x18]
0x11673: xor rcx,qword ptr fs:0x28
0x1167c: mov rax,qword ptr [rsp]
0x11680: mov rdx,qword ptr [rsp+0x8]
0x11685: jne 0x1168c
0x11687: add rsp,0x28
0x1168b: ret 
0x1168c: call 0x2930
0x11691: nop word ptr cs:[rax+rax]
0x1169b: nop dword ptr [rax+rax]
0x116a0: sub rsp,0x8
0x116a4: xor esi,esi
0x116a6: call 0x2c50
0x116ab: mov rdx,rax
0x116ae: mov eax,0x1
0x116b3: test rdx,rdx
0x116b6: je 0x116d5
0x116b8: lea rdi,[rip+0x4561]
0x116bf: mov ecx,0x2
0x116c4: mov rsi,rdx
0x116c7: rep cmpsb [rsi],es:[rdi]
0x116c9: seta cl
0x116cc: sbb cl,0x0
0x116cf: xor eax,eax
0x116d1: test cl,cl
0x116d3: jne 0x116e0
0x116d5: add rsp,0x8
0x116d9: ret 
0x116e0: lea rdi,[rip+0x453b]
0x116e7: mov ecx,0x6
0x116ec: mov rsi,rdx
0x116ef: rep cmpsb [rsi],es:[rdi]
0x116f1: seta al
0x116f4: sbb al,0x0
0x116f6: test al,al
0x116f8: setne al
0x116fb: add rsp,0x8
0x116ff: ret 
0x11700: movsx rcx,byte ptr [rdi]
0x11704: test cl,cl
0x11706: je 0x11730
0x11708: xor eax,eax
0x1170a: nop word ptr [rax+rax]
0x11710: rol rax,0x9
0x11714: add rdi,0x1
0x11718: add rax,rcx
0x1171b: movsx rcx,byte ptr [rdi]
0x1171f: test cl,cl
0x11721: jne 0x11710
0x11723: xor edx,edx
0x11725: div rsi
0x11728: mov rax,rdx
0x1172b: ret 
0x11730: xor edx,edx
0x11732: mov rax,rdx
0x11735: ret 
0x11740: sub rsp,0x8
0x11744: mov edi,0xe
0x11749: call 0x2be0
0x1174e: test rax,rax
0x11751: je 0x11770
0x11753: cmp byte ptr [rax],0x0
0x11756: lea rdx,[rip+0x44cb]
0x1175d: cmove rax,rdx
0x11761: add rsp,0x8
0x11765: ret 
0x11770: lea rax,[rip+0x44b1]
0x11777: add rsp,0x8
0x1177b: ret 
0x11780: sub rsp,0x58
0x11784: mov qword ptr [rsp+0x38],rcx
0x11789: xor ecx,ecx
0x1178b: mov rax,qword ptr fs:0x28
0x11794: mov qword ptr [rsp+0x18],rax
0x11799: xor eax,eax
0x1179b: test dl,0x40
0x1179e: jne 0x117c8
0x117a0: xor eax,eax
0x117a2: call 0x2920
0x117a7: mov edi,eax
0x117a9: call 0xf950
0x117ae: mov rsi,qword ptr [rsp+0x18]
0x117b3: xor rsi,qword ptr fs:0x28
0x117bc: jne 0x117e9
0x117be: add rsp,0x58
0x117c2: ret 
0x117c8: lea rax,[rsp+0x60]
0x117cd: mov dword ptr [rsp],0x18
0x117d4: mov ecx,dword ptr [rsp+0x38]
0x117d8: mov qword ptr [rsp+0x8],rax
0x117dd: lea rax,[rsp+0x20]
0x117e2: mov qword ptr [rsp+0x10],rax
0x117e7: jmp 0x117a0
0x117e9: call 0x2930
0x117ee: nop 
0x117f0: push rbx
0x117f1: mov rbx,rdi
0x117f4: mov edi,0x18
0x117f9: call 0x11020
0x117fe: mov qword ptr [rax],rbx
0x11801: mov qword ptr [rax+0x10],0x0
0x11809: mov qword ptr [rax+0x8],0x0
0x11811: pop rbx
0x11812: ret 
0x11820: push rbx
0x11821: call 0x11a70
0x11826: test rax,rax
0x11829: je 0x11850
0x1182b: mov rbx,rax
0x1182e: mov edi,0x18
0x11833: call 0x11020
0x11838: mov qword ptr [rax],rbx
0x1183b: mov qword ptr [rax+0x10],0x0
0x11843: mov qword ptr [rax+0x8],0x0
0x1184b: pop rbx
0x1184c: ret 
0x11850: xor eax,eax
0x11852: pop rbx
0x11853: ret 
0x11860: mov rax,qword ptr [rdi]
0x11863: ret 
0x11870: push r15
0x11872: push r14
0x11874: lea r15,[rsi+0x1]
0x11878: push r13
0x1187a: push r12
0x1187c: mov r13,rdi
0x1187f: push rbp
0x11880: push rbx
0x11881: mov r14,rsi
0x11884: sub rsp,0x28
0x11888: mov rbp,qword ptr [rdi+0x8]
0x1188c: mov rbx,qword ptr [rdi+0x10]
0x11890: mov rax,qword ptr fs:0x28
0x11899: mov qword ptr [rsp+0x18],rax
0x1189e: xor eax,eax
0x118a0: mov rax,qword ptr [rdi]
0x118a3: lea r12,[rsp+0x10]
0x118a8: mov qword ptr [rsp+0x8],rax
0x118ad: jmp 0x118e5
0x118b0: cmp rbx,r14
0x118b3: je 0x1193f
0x118b9: mov rax,rbx
0x118bc: xor edx,edx
0x118be: sub rax,r14
0x118c1: div r15
0x118c4: sub rbx,rdx
0x118c7: mov rdi,rdx
0x118ca: mov rsi,rax
0x118cd: xor edx,edx
0x118cf: mov rax,rbp
0x118d2: div r15
0x118d5: cmp rbp,rbx
0x118d8: jbe 0x11978
0x118de: lea rbx,[rdi-0x1]
0x118e2: mov rbp,rdx
0x118e5: cmp rbx,r14
0x118e8: jae 0x118b0
0x118ea: mov rax,rbx
0x118ed: xor edx,edx
0x118ef: nop 
0x118f0: shl rax,0x8
0x118f4: add rdx,0x1
0x118f8: add rax,0xff
0x118fe: cmp r14,rax
0x11901: ja 0x118f0
0x11903: mov rdi,qword ptr [rsp+0x8]
0x11908: mov rsi,r12
0x1190b: call 0x11dc0
0x11910: mov rax,r12
0x11913: nop dword ptr [rax+rax]
0x11918: movzx edx,byte ptr [rax]
0x1191b: shl rbx,0x8
0x1191f: shl rbp,0x8
0x11923: add rbx,0xff
0x1192a: add rax,0x1
0x1192e: add rbp,rdx
0x11931: cmp r14,rbx
0x11934: ja 0x11918
0x11936: cmp rbx,r14
0x11939: jne 0x118b9
0x1193f: mov qword ptr [r13+0x10],0x0
0x11947: mov qword ptr [r13+0x8],0x0
0x1194f: mov rcx,qword ptr [rsp+0x18]
0x11954: xor rcx,qword ptr fs:0x28
0x1195d: mov rax,rbp
0x11960: jne 0x11985
0x11962: add rsp,0x28
0x11966: pop rbx
0x11967: pop rbp
0x11968: pop r12
0x1196a: pop r13
0x1196c: pop r14
0x1196e: pop r15
0x11970: ret 
0x11978: mov qword ptr [r13+0x8],rax
0x1197c: mov qword ptr [r13+0x10],rsi
0x11980: mov rbp,rdx
0x11983: jmp 0x1194f
0x11985: call 0x2930
0x1198a: nop word ptr [rax+rax]
0x11990: push rbx
0x11991: mov rdx,-0x1
0x11998: mov rbx,rdi
0x1199b: mov esi,0x18
0x119a0: call 0x2cc0
0x119a5: mov rdi,rbx
0x119a8: pop rbx
0x119a9: jmp 0x2e10
0x119b0: push r13
0x119b2: push r12
0x119b4: push rbp
0x119b5: push rbx
0x119b6: mov rbx,rdi
0x119b9: sub rsp,0x8
0x119bd: mov rdi,qword ptr [rdi]
0x119c0: call 0x11f60
0x119c5: mov r12d,eax
0x119c8: call 0x2770
0x119cd: mov r13d,dword ptr [rax]
0x119d0: mov rdi,rbx
0x119d3: mov rdx,-0x1
0x119da: mov esi,0x18
0x119df: mov rbp,rax
0x119e2: call 0x2cc0
0x119e7: mov rdi,rbx
0x119ea: call 0x2e10
0x119ef: mov dword ptr [rbp],r13d
0x119f3: add rsp,0x8
0x119f7: mov eax,r12d
0x119fa: pop rbx
0x119fb: pop rbp
0x119fc: pop r12
0x119fe: pop r13
0x11a00: ret 
0x11a10: push rbp
0x11a11: push rbx
0x11a12: sub rsp,0x8
0x11a16: test rdi,rdi
0x11a19: je 0x11a58
0x11a1b: call 0xed80
0x11a20: mov rbp,rax
0x11a23: call 0x2770
0x11a28: cmp dword ptr [rax],0x0
0x11a2b: mov rbx,rax
0x11a2e: mov edx,0x5
0x11a33: je 0x11a5d
0x11a35: lea rsi,[rip+0x4202]
0x11a3c: xor edi,edi
0x11a3e: call 0x28e0
0x11a43: mov edi,dword ptr [rip+0x2085e7]
0x11a49: mov esi,dword ptr [rbx]
0x11a4b: mov rdx,rax
0x11a4e: mov rcx,rbp
0x11a51: xor eax,eax
0x11a53: call 0x2cb0
0x11a58: call 0x2760
0x11a5d: lea rsi,[rip+0x41ca]
0x11a64: xor edi,edi
0x11a66: call 0x28e0
0x11a6b: jmp 0x11a43
0x11a70: push r15
0x11a72: push r14
0x11a74: push r13
0x11a76: push r12
0x11a78: push rbp
0x11a79: push rbx
0x11a7a: sub rsp,0x38
0x11a7e: mov rax,qword ptr fs:0x28
0x11a87: mov qword ptr [rsp+0x28],rax
0x11a8c: xor eax,eax
0x11a8e: test rsi,rsi
0x11a91: je 0x11bb8
0x11a97: test rdi,rdi
0x11a9a: mov r12,rdi
0x11a9d: mov rbp,rsi
0x11aa0: je 0x11b20
0x11aa2: lea rsi,[rip+0x41b1]
0x11aa9: call 0x12790
0x11aae: test rax,rax
0x11ab1: mov r13,rax
0x11ab4: je 0x11cb8
0x11aba: mov edi,0x1038
0x11abf: call 0x11020
0x11ac4: mov rbx,rax
0x11ac7: mov qword ptr [rax],r13
0x11aca: lea rax,[rip-0xc1]
0x11ad1: cmp rbp,0x1000
0x11ad8: mov ecx,0x1000
0x11add: lea rsi,[rbx+0x18]
0x11ae1: cmovbe rcx,rbp
0x11ae5: mov qword ptr [rbx+0x8],rax
0x11ae9: mov qword ptr [rbx+0x10],r12
0x11aed: xor edx,edx
0x11aef: mov rdi,r13
0x11af2: call 0x2c80
0x11af7: mov rdx,qword ptr [rsp+0x28]
0x11afc: xor rdx,qword ptr fs:0x28
0x11b05: mov rax,rbx
0x11b08: jne 0x11cbf
0x11b0e: add rsp,0x38
0x11b12: pop rbx
0x11b13: pop rbp
0x11b14: pop r12
0x11b16: pop r13
0x11b18: pop r14
0x11b1a: pop r15
0x11b1c: ret 
0x11b20: mov edi,0x1038
0x11b25: call 0x11020
0x11b2a: mov rbx,rax
0x11b2d: mov qword ptr [rax],0x0
0x11b34: lea rax,[rip-0x12b]
0x11b3b: lea rdi,[rip+0x410b]
0x11b42: xor esi,esi
0x11b44: mov qword ptr [rbx+0x10],0x0
0x11b4c: mov qword ptr [rbx+0x8],rax
0x11b50: mov qword ptr [rbx+0x18],0x0
0x11b58: xor eax,eax
0x11b5a: call 0x2cd0
0x11b5f: test eax,eax
0x11b61: lea r13,[rbx+0x20]
0x11b65: mov r15d,eax
0x11b68: js 0x11be8
0x11b6a: cmp rbp,0x800
0x11b71: mov rdx,rbp
0x11b74: mov r14d,0x800
0x11b7a: cmova rdx,r14
0x11b7e: mov ecx,0x1018
0x11b83: mov rsi,r13
0x11b86: mov edi,eax
0x11b88: call 0x27d0
0x11b8d: mov edi,r15d
0x11b90: mov rbp,rax
0x11b93: call 0x2a30
0x11b98: cmp rbp,0x7ff
0x11b9f: jle 0x11cc4
0x11ba5: mov rdi,r13
0x11ba8: call 0x12240
0x11bad: jmp 0x11af7
0x11bb8: mov edi,0x1038
0x11bbd: call 0x11020
0x11bc2: mov rbx,rax
0x11bc5: mov qword ptr [rax],0x0
0x11bcc: lea rax,[rip-0x1c3]
0x11bd3: mov qword ptr [rbx+0x10],0x0
0x11bdb: mov qword ptr [rbx+0x8],rax
0x11bdf: jmp 0x11af7
0x11be8: lea r12,[rsp+0x10]
0x11bed: xor esi,esi
0x11bef: mov r14d,0x18
0x11bf5: mov rdi,r12
0x11bf8: call 0x29d0
0x11bfd: movdqa xmm0,[rsp+0x10]
0x11c03: movups [rbx+0x20],xmm0
0x11c07: call 0x2850
0x11c0c: mov dword ptr [rbx+0x30],eax
0x11c0f: mov dword ptr [rsp+0x10],eax
0x11c13: call 0x2d80
0x11c18: mov dword ptr [rsp+0x10],eax
0x11c1c: mov dword ptr [rbx+0x34],eax
0x11c1f: mov ebp,0x800
0x11c24: mov eax,0x4
0x11c29: sub rbp,r14
0x11c2c: cmp rbp,0x4
0x11c30: cmova rbp,rax
0x11c34: call 0x2940
0x11c39: test ebp,ebp
0x11c3b: mov dword ptr [rsp+0x10],eax
0x11c3f: lea rcx,[r13+r14]
0x11c44: mov esi,ebp
0x11c46: je 0x11c5c
0x11c48: xor eax,eax
0x11c4a: mov edx,eax
0x11c4c: add eax,0x1
0x11c4f: movzx edi,byte ptr [r12+rdx]
0x11c54: cmp eax,esi
0x11c56: mov byte ptr [rcx+rdx],dil
0x11c5a: jb 0x11c4a
0x11c5c: add rbp,r14
0x11c5f: cmp rbp,0x7ff
0x11c66: ja 0x11ba5
0x11c6c: call 0x2b90
0x11c71: mov dword ptr [rsp+0x10],eax
0x11c75: mov eax,0x800
0x11c7a: mov edx,0x4
0x11c7f: sub rax,rbp
0x11c82: lea rcx,[r13+rbp]
0x11c87: cmp rax,0x4
0x11c8b: cmova rax,rdx
0x11c8f: test eax,eax
0x11c91: mov esi,eax
0x11c93: je 0x11ba5
0x11c99: xor eax,eax
0x11c9b: mov edx,eax
0x11c9d: add eax,0x1
0x11ca0: movzx edi,byte ptr [r12+rdx]
0x11ca5: cmp eax,esi
0x11ca7: mov byte ptr [rcx+rdx],dil
0x11cab: jb 0x11c9b
0x11cad: jmp 0x11ba5
0x11cb8: xor ebx,ebx
0x11cba: jmp 0x11af7
0x11cbf: call 0x2930
0x11cc4: test rbp,rbp
0x11cc7: mov r15,r14
0x11cca: mov eax,0x10
0x11ccf: cmovs rbp,r12
0x11cd3: lea r12,[rsp+0x10]
0x11cd8: sub r15,rbp
0x11cdb: cmp r15,0x10
0x11cdf: mov rdi,r12
0x11ce2: cmova r15,rax
0x11ce6: xor esi,esi
0x11ce8: call 0x29d0
0x11ced: lea rax,[r13+rbp]
0x11cf2: add rbp,r15
0x11cf5: mov ecx,r15d
0x11cf8: cmp rbp,0x7ff
0x11cff: mov rsi,r12
0x11d02: mov rdi,rax
0x11d05: rep movsb byte ptr es:[rdi],byte ptr [rsi]
0x11d07: ja 0x11ba5
0x11d0d: mov r15,r14
0x11d10: mov r8d,0x4
0x11d16: sub r15,rbp
0x11d19: mov qword ptr [rsp+0x8],r8
0x11d1e: cmp r15,0x4
0x11d22: cmova r15,r8
0x11d26: lea rdx,[rbp+r15]
0x11d2b: add rbp,r13
0x11d2e: mov qword ptr [rsp],rdx
0x11d32: call 0x2850
0x11d37: mov rdx,qword ptr [rsp]
0x11d3b: mov dword ptr [rsp+0x10],eax
0x11d3f: mov ecx,r15d
0x11d42: mov rdi,rbp
0x11d45: mov rsi,r12
0x11d48: mov r8,qword ptr [rsp+0x8]
0x11d4d: rep movsb byte ptr es:[rdi],byte ptr [rsi]
0x11d4f: cmp rdx,0x7ff
0x11d56: jg 0x11ba5
0x11d5c: sub r14,rdx
0x11d5f: cmp r14,0x4
0x11d63: cmova r14,r8
0x11d67: call 0x2d80
0x11d6c: mov rdx,qword ptr [rsp]
0x11d70: mov dword ptr [rsp+0x10],eax
0x11d74: mov ecx,r14d
0x11d77: mov rsi,r12
0x11d7a: lea rax,[r13+rdx]
0x11d7f: add r14,rdx
0x11d82: cmp r14,0x7ff
0x11d89: mov rdi,rax
0x11d8c: rep movsb byte ptr es:[rdi],byte ptr [rsi]
0x11d8e: ja 0x11ba5
0x11d94: jmp 0x11c1f
0x11da0: mov qword ptr [rdi+0x8],rsi
0x11da4: ret 
0x11db0: mov qword ptr [rdi+0x10],rsi
0x11db4: ret 
0x11dc0: push r15
0x11dc2: push r14
0x11dc4: push r13
0x11dc6: push r12
0x11dc8: mov r12,rdi
0x11dcb: push rbp
0x11dcc: push rbx
0x11dcd: mov rbp,rdx
0x11dd0: mov rbx,rsi
0x11dd3: sub rsp,0x18
0x11dd7: mov rcx,qword ptr [rdi]
0x11dda: test rcx,rcx
0x11ddd: mov qword ptr [rsp+0x8],rcx
0x11de2: je 0x11e48
0x11de4: call 0x2770
0x11de9: mov rcx,qword ptr [rsp+0x8]
0x11dee: mov r13,rax
0x11df1: jmp 0x11e16
0x11df8: mov rax,qword ptr [r12]
0x11dfc: mov rdi,qword ptr [r12+0x10]
0x11e01: mov eax,dword ptr [rax]
0x11e03: and eax,0x20
0x11e06: cmovne eax,edx
0x11e09: mov dword ptr [r13],eax
0x11e0d: call qword ptr [r12+0x8]
0x11e12: mov rcx,qword ptr [r12]
0x11e16: mov rdx,rbp
0x11e19: mov rdi,rbx
0x11e1c: mov esi,0x1
0x11e21: call 0x2860
0x11e26: add rbx,rax
0x11e29: sub rbp,rax
0x11e2c: mov edx,dword ptr [r13]
0x11e30: jne 0x11df8
0x11e32: add rsp,0x18
0x11e36: pop rbx
0x11e37: pop rbp
0x11e38: pop r12
0x11e3a: pop r13
0x11e3c: pop r14
0x11e3e: pop r15
0x11e40: ret 
0x11e48: mov r14,qword ptr [rdi+0x18]
0x11e4c: lea rax,[rdi+0x838]
0x11e53: lea r13,[rdi+0x20]
0x11e57: mov qword ptr [rsp+0x8],rax
0x11e5c: cmp rdx,r14
0x11e5f: jbe 0x11f42
0x11e65: mov esi,0x800
0x11e6a: mov rdi,rbx
0x11e6d: mov rdx,r14
0x11e70: sub rsi,r14
0x11e73: add rsi,qword ptr [rsp+0x8]
0x11e78: add rbx,r14
0x11e7b: sub rbp,r14
0x11e7e: call 0x2b60
0x11e83: test bl,0x7
0x11e86: jne 0x11ef0
0x11e88: cmp rbp,0x7ff
0x11e8f: jbe 0x11f33
0x11e95: lea r15,[rbp-0x800]
0x11e9c: mov r14,r15
0x11e9f: and r14d,0x7ff
0x11ea6: jmp 0x11ebc
0x11eb0: cmp r15,r14
0x11eb3: je 0x11ef0
0x11eb5: sub r15,0x800
0x11ebc: mov rsi,rbx
0x11ebf: mov rdi,r13
0x11ec2: add rbx,0x800
0x11ec9: call 0x11fb0
0x11ece: test r15,r15
0x11ed1: mov rbp,r15
0x11ed4: jne 0x11eb0
0x11ed6: mov qword ptr [r12+0x18],0x0
0x11edf: add rsp,0x18
0x11ee3: pop rbx
0x11ee4: pop rbp
0x11ee5: pop r12
0x11ee7: pop r13
0x11ee9: pop r14
0x11eeb: pop r15
0x11eed: ret 
0x11ef0: mov rsi,qword ptr [rsp+0x8]
0x11ef5: mov rdi,r13
0x11ef8: mov r14d,0x800
0x11efe: call 0x11fb0
0x11f03: cmp rbp,0x800
0x11f0a: ja 0x11e65
0x11f10: mov r14d,0x800
0x11f16: mov rsi,qword ptr [rsp+0x8]
0x11f1b: mov rdx,rbp
0x11f1e: mov rdi,rbx
0x11f21: sub r14,rbp
0x11f24: call 0x2b60
0x11f29: mov qword ptr [r12+0x18],r14
0x11f2e: jmp 0x11e32
0x11f33: mov rsi,qword ptr [rsp+0x8]
0x11f38: mov rdi,r13
0x11f3b: call 0x11fb0
0x11f40: jmp 0x11f10
0x11f42: mov r15,rax
0x11f45: sub r15,r14
0x11f48: lea rax,[r15+0x800]
0x11f4f: mov qword ptr [rsp+0x8],rax
0x11f54: jmp 0x11f16
0x11f60: push rbp
0x11f61: push rbx
0x11f62: mov rdx,-0x1
0x11f69: mov rbx,rdi
0x11f6c: mov esi,0x1038
0x11f71: sub rsp,0x8
0x11f75: mov rbp,qword ptr [rdi]
0x11f78: call 0x2cc0
0x11f7d: mov rdi,rbx
0x11f80: call 0x2e10
0x11f85: test rbp,rbp
0x11f88: je 0x11fa0
0x11f8a: add rsp,0x8
0x11f8e: mov rdi,rbp
0x11f91: pop rbx
0x11f92: pop rbp
0x11f93: jmp 0x12490
0x11fa0: add rsp,0x8
0x11fa4: xor eax,eax
0x11fa6: pop rbx
0x11fa7: pop rbp
0x11fa8: ret 
0x11fb0: mov rax,qword ptr [rdi+0x810]
0x11fb7: mov rdx,qword ptr [rdi+0x800]
0x11fbe: lea r9,[rdi+0x400]
0x11fc5: lea rcx,[rax+0x1]
0x11fc9: mov rax,rdi
0x11fcc: mov qword ptr [rdi+0x810],rcx
0x11fd3: add rcx,qword ptr [rdi+0x808]
0x11fda: nop word ptr [rax+rax]
0x11fe0: mov r8,rdx
0x11fe3: shl r8,0x15
0x11fe7: xor rdx,r8
0x11fea: mov r8,qword ptr [rax]
0x11fed: not rdx
0x11ff0: add rdx,qword ptr [rax+0x400]
0x11ff7: mov r10,r8
0x11ffa: and r10d,0x7f8
0x12001: mov r11,qword ptr [rdi+r10]
0x12005: mov r10,rdx
0x12008: shr r10,0x5
0x1200c: add r11,rdx
0x1200f: xor rdx,r10
0x12012: add rcx,r11
0x12015: mov qword ptr [rax],rcx
0x12018: shr rcx,0x8
0x1201c: and ecx,0x7f8
0x12022: mov r11,qword ptr [rdi+rcx]
0x12026: add r11,r8
0x12029: mov qword ptr [rsi],r11
0x1202c: add rdx,qword ptr [rax+0x408]
0x12033: mov rcx,qword ptr [rax+0x8]
0x12037: mov r10,rdx
0x1203a: mov rdx,rcx
0x1203d: and edx,0x7f8
0x12043: mov r8,qword ptr [rdi+rdx]
0x12047: mov rdx,r10
0x1204a: shl rdx,0xc
0x1204e: xor rdx,r10
0x12051: add r8,r10
0x12054: add r8,r11
0x12057: mov qword ptr [rax+0x8],r8
0x1205b: shr r8,0x8
0x1205f: and r8d,0x7f8
0x12066: add rcx,qword ptr [rdi+r8]
0x1206a: mov qword ptr [rsi+0x8],rcx
0x1206e: mov r8,qword ptr [rax+0x10]
0x12072: mov r11,rcx
0x12075: add rdx,qword ptr [rax+0x410]
0x1207c: mov rcx,r8
0x1207f: and ecx,0x7f8
0x12085: mov r10,qword ptr [rdi+rcx]
0x12089: add r10,rdx
0x1208c: mov rcx,r10
0x1208f: add rcx,r11
0x12092: mov qword ptr [rax+0x10],rcx
0x12096: shr rcx,0x8
0x1209a: and ecx,0x7f8
0x120a0: mov r10,qword ptr [rdi+rcx]
0x120a4: mov rcx,rdx
0x120a7: shr rcx,0x21
0x120ab: xor rdx,rcx
0x120ae: add r10,r8
0x120b1: mov qword ptr [rsi+0x10],r10
0x120b5: mov rcx,qword ptr [rax+0x18]
0x120b9: add rdx,qword ptr [rax+0x418]
0x120c0: mov r8,rcx
0x120c3: and r8d,0x7f8
0x120ca: mov r11,qword ptr [rdi+r8]
0x120ce: add r11,rdx
0x120d1: mov r8,r11
0x120d4: add r8,r10
0x120d7: add rax,0x20
0x120db: add rsi,0x20
0x120df: mov qword ptr [rax-0x8],r8
0x120e3: shr r8,0x8
0x120e7: and r8d,0x7f8
0x120ee: add rcx,qword ptr [rdi+r8]
0x120f2: mov qword ptr [rsi-0x8],rcx
0x120f6: cmp rax,r9
0x120f9: jb 0x11fe0
0x120ff: lea r9,[rdi+0x800]
0x12106: nop word ptr cs:[rax+rax]
0x12110: mov r8,rdx
0x12113: shl r8,0x15
0x12117: xor rdx,r8
0x1211a: mov r8,qword ptr [rax]
0x1211d: not rdx
0x12120: add rdx,qword ptr [rax-0x400]
0x12127: mov r10,r8
0x1212a: and r10d,0x7f8
0x12131: mov r11,qword ptr [rdi+r10]
0x12135: mov r10,rdx
0x12138: shr r10,0x5
0x1213c: add r11,rdx
0x1213f: xor rdx,r10
0x12142: add rcx,r11
0x12145: mov qword ptr [rax],rcx
0x12148: shr rcx,0x8
0x1214c: and ecx,0x7f8
0x12152: mov r11,qword ptr [rdi+rcx]
0x12156: add r11,r8
0x12159: mov qword ptr [rsi],r11
0x1215c: add rdx,qword ptr [rax-0x3f8]
0x12163: mov rcx,qword ptr [rax+0x8]
0x12167: mov r10,rdx
0x1216a: mov rdx,rcx
0x1216d: and edx,0x7f8
0x12173: mov r8,qword ptr [rdi+rdx]
0x12177: mov rdx,r10
0x1217a: shl rdx,0xc
0x1217e: xor rdx,r10
0x12181: add r8,r10
0x12184: add r8,r11
0x12187: mov qword ptr [rax+0x8],r8
0x1218b: shr r8,0x8
0x1218f: and r8d,0x7f8
0x12196: add rcx,qword ptr [rdi+r8]
0x1219a: mov qword ptr [rsi+0x8],rcx
0x1219e: mov r8,qword ptr [rax+0x10]
0x121a2: mov r11,rcx
0x121a5: add rdx,qword ptr [rax-0x3f0]
0x121ac: mov rcx,r8
0x121af: and ecx,0x7f8
0x121b5: mov r10,qword ptr [rdi+rcx]
0x121b9: add r10,rdx
0x121bc: mov rcx,r10
0x121bf: add rcx,r11
0x121c2: mov qword ptr [rax+0x10],rcx
0x121c6: shr rcx,0x8
0x121ca: and ecx,0x7f8
0x121d0: mov r10,qword ptr [rdi+rcx]
0x121d4: mov rcx,rdx
0x121d7: shr rcx,0x21
0x121db: xor rdx,rcx
0x121de: add r10,r8
0x121e1: mov qword ptr [rsi+0x10],r10
0x121e5: mov rcx,qword ptr [rax+0x18]
0x121e9: add rdx,qword ptr [rax-0x3e8]
0x121f0: mov r8,rcx
0x121f3: and r8d,0x7f8
0x121fa: mov r11,qword ptr [rdi+r8]
0x121fe: add r11,rdx
0x12201: mov r8,r11
0x12204: add r8,r10
0x12207: add rax,0x20
0x1220b: add rsi,0x20
0x1220f: mov qword ptr [rax-0x8],r8
0x12213: shr r8,0x8
0x12217: and r8d,0x7f8
0x1221e: add rcx,qword ptr [rdi+r8]
0x12222: mov qword ptr [rsi-0x8],rcx
0x12226: cmp rax,r9
0x12229: jb 0x12110
0x1222f: mov qword ptr [rdi+0x800],rdx
0x12236: mov qword ptr [rdi+0x808],rcx
0x1223d: ret 
0x12240: push r13
0x12242: push r12
0x12244: lea r12,[rdi+0x800]
0x1224b: push rbp
0x1224c: mov rdx,rdi
0x1224f: push rbx
0x12250: mov rax,rdi
0x12253: movabsq rcx,-0x670a8fb093bb3f55
0x1225d: movabsq r10,-0x5167a40d34037613
0x12267: movabsq rbp,0x48fe4a0fa5a09315
0x12271: movabsq rsi,-0x7d0fac247caa1f32
0x1227b: movabsq r8,-0x4d64d17db5a6aadc
0x12285: movabsq rbx,-0x73f15afac2b8ed60
0x1228f: movabsq r11,-0x46074cdd38c5379e
0x12299: movabsq r9,0x647c4677a2884b7c
0x122a3: nop dword ptr [rax+rax]
0x122a8: add rsi,qword ptr [rax+0x20]
0x122ac: add rcx,qword ptr [rax+0x38]
0x122b0: mov r13,qword ptr [rax]
0x122b3: add rbp,qword ptr [rax+0x28]
0x122b7: add r10,qword ptr [rax+0x30]
0x122bb: sub r13,rsi
0x122be: add r9,r13
0x122c1: mov r13,rcx
0x122c4: shr r13,0x9
0x122c8: add rcx,r9
0x122cb: xor rbp,r13
0x122ce: mov r13,qword ptr [rax+0x8]
0x122d2: sub r13,rbp
0x122d5: add r11,r13
0x122d8: mov r13,r9
0x122db: shl r13,0x9
0x122df: add r9,r11
0x122e2: xor r10,r13
0x122e5: mov r13,qword ptr [rax+0x10]
0x122e9: sub r13,r10
0x122ec: add rbx,r13
0x122ef: mov r13,r11
0x122f2: shr r13,0x17
0x122f6: add r11,rbx
0x122f9: xor rcx,r13
0x122fc: mov r13,qword ptr [rax+0x18]
0x12300: sub r13,rcx
0x12303: add r8,r13
0x12306: mov r13,rbx
0x12309: shl r13,0xf
0x1230d: add rbx,r8
0x12310: xor r9,r13
0x12313: mov r13,r8
0x12316: sub rsi,r9
0x12319: shr r13,0xe
0x1231d: mov qword ptr [rax],r9
0x12320: xor r11,r13
0x12323: mov r13,rsi
0x12326: add r8,rsi
0x12329: sub rbp,r11
0x1232c: shl r13,0x14
0x12330: mov qword ptr [rax+0x8],r11
0x12334: xor rbx,r13
0x12337: lea r13,[rsi+rbp]
0x1233b: mov rsi,rbp
0x1233e: sub r10,rbx
0x12341: shr rsi,0x11
0x12345: mov qword ptr [rax+0x10],rbx
0x12349: xor r8,rsi
0x1234c: mov rsi,r10
0x1234f: add rbp,r10
0x12352: sub rcx,r8
0x12355: shl rsi,0xe
0x12359: mov qword ptr [rax+0x18],r8
0x1235d: xor rsi,r13
0x12360: add r10,rcx
0x12363: mov qword ptr [rax+0x28],rbp
0x12367: mov qword ptr [rax+0x20],rsi
0x1236b: mov qword ptr [rax+0x30],r10
0x1236f: add rax,0x40
0x12373: mov qword ptr [rax-0x8],rcx
0x12377: cmp r12,rax
0x1237a: jne 0x122a8
0x12380: add rsi,qword ptr [rdx+0x20]
0x12384: add rcx,qword ptr [rdx+0x38]
0x12388: mov r12,qword ptr [rdx]
0x1238b: add rbp,qword ptr [rdx+0x28]
0x1238f: add r10,qword ptr [rdx+0x30]
0x12393: sub r12,rsi
0x12396: add r9,r12
0x12399: mov r12,rcx
0x1239c: shr r12,0x9
0x123a0: add rcx,r9
0x123a3: xor rbp,r12
0x123a6: mov r12,qword ptr [rdx+0x8]
0x123aa: sub r12,rbp
0x123ad: add r11,r12
0x123b0: mov r12,r9
0x123b3: shl r12,0x9
0x123b7: add r9,r11
0x123ba: xor r10,r12
0x123bd: mov r12,qword ptr [rdx+0x10]
0x123c1: sub r12,r10
0x123c4: add rbx,r12
0x123c7: mov r12,r11
0x123ca: shr r12,0x17
0x123ce: add r11,rbx
0x123d1: xor rcx,r12
0x123d4: mov r12,qword ptr [rdx+0x18]
0x123d8: sub r12,rcx
0x123db: add r8,r12
0x123de: mov r12,rbx
0x123e1: shl r12,0xf
0x123e5: add rbx,r8
0x123e8: xor r9,r12
0x123eb: mov r12,r8
0x123ee: sub rsi,r9
0x123f1: shr r12,0xe
0x123f5: mov qword ptr [rdx],r9
0x123f8: xor r11,r12
0x123fb: mov r12,rsi
0x123fe: add r8,rsi
0x12401: sub rbp,r11
0x12404: shl r12,0x14
0x12408: mov qword ptr [rdx+0x8],r11
0x1240c: xor rbx,r12
0x1240f: lea r12,[rsi+rbp]
0x12413: mov rsi,rbp
0x12416: sub r10,rbx
0x12419: shr rsi,0x11
0x1241d: mov qword ptr [rdx+0x10],rbx
0x12421: xor r8,rsi
0x12424: mov rsi,r10
0x12427: add rbp,r10
0x1242a: sub rcx,r8
0x1242d: shl rsi,0xe
0x12431: mov qword ptr [rdx+0x18],r8
0x12435: xor rsi,r12
0x12438: add r10,rcx
0x1243b: mov qword ptr [rdx+0x28],rbp
0x1243f: mov qword ptr [rdx+0x20],rsi
0x12443: mov qword ptr [rdx+0x30],r10
0x12447: add rdx,0x40
0x1244b: mov qword ptr [rdx-0x8],rcx
0x1244f: cmp rax,rdx
0x12452: jne 0x12380
0x12458: pop rbx
0x12459: mov qword ptr [rdi+0x810],0x0
0x12464: mov qword ptr [rdi+0x808],0x0
0x1246f: pop rbp
0x12470: mov qword ptr [rdi+0x800],0x0
0x1247b: pop r12
0x1247d: pop r13
0x1247f: ret 
0x12490: push r12
0x12492: push rbp
0x12493: push rbx
0x12494: mov rbx,rdi
0x12497: call 0x2b80
0x1249c: test eax,eax
0x1249e: mov rdi,rbx
0x124a1: js 0x124f7
0x124a3: call 0x2c10
0x124a8: test eax,eax
0x124aa: jne 0x124d8
0x124ac: mov rdi,rbx
0x124af: call 0x11350
0x124b4: test eax,eax
0x124b6: je 0x124f4
0x124b8: call 0x2770
0x124bd: mov r12d,dword ptr [rax]
0x124c0: mov rdi,rbx
0x124c3: mov rbp,rax
0x124c6: call 0x2890
0x124cb: test r12d,r12d
0x124ce: jne 0x12500
0x124d0: pop rbx
0x124d1: pop rbp
0x124d2: pop r12
0x124d4: ret 
0x124d8: mov rdi,rbx
0x124db: call 0x2b80
0x124e0: xor esi,esi
0x124e2: mov edx,0x1
0x124e7: mov edi,eax
0x124e9: call 0x29c0
0x124ee: cmp rax,-0x1
0x124f2: jne 0x124ac
0x124f4: mov rdi,rbx
0x124f7: pop rbx
0x124f8: pop rbp
0x124f9: pop r12
0x124fb: jmp 0x2890
0x12500: mov dword ptr [rbp],r12d
0x12504: mov eax,0xffffffff
0x12509: jmp 0x124d0
0x12561: cmp esi,0x406
0x12567: jne 0x125b0
0x12569: mov rax,qword ptr [rsp+0x10]
0x1256e: cmp dword ptr [rip+0x20819f],0x0
0x12575: mov dword ptr [rsp],0x18
0x1257c: mov r12d,dword ptr [rax+0x10]
0x12580: mov edx,r12d
0x12583: js 0x126b3
0x12589: xor eax,eax
0x1258b: mov esi,0x406
0x12590: call 0x2820
0x12595: test eax,eax
0x12597: mov ebx,eax
0x12599: js 0x12728
0x1259f: mov dword ptr [rip+0x20816b],0x1
0x125a9: jmp 0x125f0
0x125b0: cmp esi,0xb
0x125b3: je 0x125e0
0x125b5: jg 0x12610
0x125b7: cmp esi,0x4
0x125ba: je 0x12690
0x125c0: jg 0x12680
0x125c6: cmp esi,0x2
0x125c9: je 0x12690
0x125cf: jg 0x125e0
0x125d1: cmp esi,0x1
0x125d4: jne 0x12638
0x125d6: nop word ptr cs:[rax+rax]
0x125e0: mov edi,ebp
0x125e2: xor eax,eax
0x125e4: call 0x2820
0x125e9: mov ebx,eax
0x125eb: nop dword ptr [rax+rax]
0x12610: cmp esi,0x407
0x12616: jg 0x12660
0x12618: cmp esi,0x406
0x1261e: jge 0x12690
0x12620: cmp esi,0x401
0x12626: je 0x125e0
0x12628: cmp esi,0x402
0x1262e: je 0x12690
0x12630: cmp esi,0x400
0x12636: je 0x12690
0x12638: mov eax,dword ptr [rsp]
0x1263b: cmp eax,0x2f
0x1263e: ja 0x1277a
0x12644: add rax,qword ptr [rsp+0x10]
0x12649: mov rdx,qword ptr [rax]
0x1264c: mov edi,ebp
0x1264e: xor eax,eax
0x12650: call 0x2820
0x12655: mov ebx,eax
0x12657: jmp 0x125f0
0x12660: cmp esi,0x409
0x12666: je 0x12690
0x12668: jl 0x125e0
0x1266e: cmp esi,0x40a
0x12674: jne 0x12638
0x12676: jmp 0x125e0
0x12680: cmp esi,0x9
0x12683: je 0x125e0
0x12689: jg 0x12690
0x1268b: cmp esi,0x8
0x1268e: jne 0x12638
0x12690: mov eax,dword ptr [rsp]
0x12693: cmp eax,0x2f
0x12696: ja 0x12784
0x1269c: add rax,qword ptr [rsp+0x10]
0x126a1: mov edx,dword ptr [rax]
0x126a3: mov edi,ebp
0x126a5: xor eax,eax
0x126a7: call 0x2820
0x126ac: mov ebx,eax
0x126ae: jmp 0x125f0
0x126b3: xor esi,esi
0x126b5: xor eax,eax
0x126b7: call 0x2820
0x126bc: test eax,eax
0x126be: mov ebx,eax
0x126c0: js 0x125f0
0x126c6: cmp dword ptr [rip+0x208047],-0x1
0x126cd: jne 0x125f0
0x126d3: xor eax,eax
0x126d5: mov esi,0x1
0x126da: mov edi,ebx
0x126dc: call 0x2820
0x126e1: test eax,eax
0x126e3: js 0x12701
0x126e5: or eax,0x1
0x126e8: mov esi,0x2
0x126ed: mov edi,ebx
0x126ef: mov edx,eax
0x126f1: xor eax,eax
0x126f3: call 0x2820
0x126f8: cmp eax,-0x1
0x126fb: jne 0x125f0
0x12701: call 0x2770
0x12706: mov r12d,dword ptr [rax]
0x12709: mov rbp,rax
0x1270c: mov edi,ebx
0x1270e: call 0x2a30
0x12713: mov ebx,0xffffffff
0x12718: mov dword ptr [rbp],r12d
0x1271c: jmp 0x125f0
0x12728: call 0x2770
0x1272d: cmp dword ptr [rax],0x16
0x12730: jne 0x1259f
0x12736: xor esi,esi
0x12738: xor eax,eax
0x1273a: mov edx,r12d
0x1273d: mov edi,ebp
0x1273f: call 0x2820
0x12744: test eax,eax
0x12746: mov ebx,eax
0x12748: js 0x125f0
0x1274e: mov dword ptr [rip+0x207fbc],0xffffffff
0x12758: jmp 0x126d3
0x1275d: call 0x2930
0x1277a: mov rax,qword ptr [rsp+0x8]
0x1277f: jmp 0x12649
0x12784: mov rax,qword ptr [rsp+0x8]
0x12789: jmp 0x126a1
0x12790: push r12
0x12792: push rbp
0x12793: mov rbp,rsi
0x12796: push rbx
0x12797: call 0x2d00
0x1279c: test rax,rax
0x1279f: mov rbx,rax
0x127a2: je 0x127b1
0x127a4: mov rdi,rax
0x127a7: call 0x2b80
0x127ac: cmp eax,0x2
0x127af: jbe 0x127c0
0x127b1: mov rax,rbx
0x127b4: pop rbx
0x127b5: pop rbp
0x127b6: pop r12
0x127b8: ret 
0x127c0: mov edi,eax
0x127c2: call 0x12480
0x127c7: test eax,eax
0x127c9: mov r12d,eax
0x127cc: js 0x12808
0x127ce: mov rdi,rbx
0x127d1: call 0x12490
0x127d6: test eax,eax
0x127d8: jne 0x127ed
0x127da: mov rsi,rbp
0x127dd: mov edi,r12d
0x127e0: call 0x2c30
0x127e5: test rax,rax
0x127e8: mov rbx,rax
0x127eb: jne 0x127b1
0x127ed: call 0x2770
0x127f2: mov ebp,dword ptr [rax]
0x127f4: mov rbx,rax
0x127f7: mov edi,r12d
0x127fa: call 0x2a30
0x127ff: mov dword ptr [rbx],ebp
0x12801: xor ebx,ebx
0x12803: jmp 0x127b1
0x12808: call 0x2770
0x1280d: mov r12d,dword ptr [rax]
0x12810: mov rbp,rax
0x12813: mov rdi,rbx
0x12816: call 0x12490
0x1281b: xor ebx,ebx
0x1281d: mov dword ptr [rbp],r12d
0x12821: jmp 0x127b1
0x12830: push r15
0x12832: push r14
0x12834: mov r15,rdx
0x12837: push r13
0x12839: push r12
0x1283b: lea r12,[rip+0x206cee]
0x12842: push rbp
0x12843: lea rbp,[rip+0x206cee]
0x1284a: push rbx
0x1284b: mov r13d,edi
0x1284e: mov r14,rsi
0x12851: sub rbp,r12
0x12854: sub rsp,0x8
0x12858: sar rbp,0x3
0x1285c: call 0x2710
0x12861: test rbp,rbp
0x12864: je 0x12886
0x12866: xor ebx,ebx
0x12868: nop dword ptr [rax+rax]
0x12870: mov rdx,r15
0x12873: mov rsi,r14
0x12876: mov edi,r13d
0x12879: call qword ptr [r12+rbx*8]
0x1287d: add rbx,0x1
0x12881: cmp rbp,rbx
0x12884: jne 0x12870
0x12886: add rsp,0x8
0x1288a: pop rbx
0x1288b: pop rbp
0x1288c: pop r12
0x1288e: pop r13
0x12890: pop r14
0x12892: pop r15
0x12894: ret 
0x128a0: rep ret 
