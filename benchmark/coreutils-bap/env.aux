0x1858: sub rsp,0x8
0x185c: mov rax,qword ptr [rip+0x20877d]
0x1863: test rax,rax
0x1866: je 0x186a
0x1868: call rax
0x186a: add rsp,0x8
0x186e: ret 
0x1876: jmp qword ptr [rip+0x20855c]
0x18e0: jmp qword ptr [rip+0x20852a]
0x1900: jmp qword ptr [rip+0x20851a]
0x1930: jmp qword ptr [rip+0x208502]
0x19a0: jmp qword ptr [rip+0x2084ca]
0x19c0: jmp qword ptr [rip+0x2084ba]
0x19f0: jmp qword ptr [rip+0x2084a2]
0x1a30: jmp qword ptr [rip+0x208482]
0x1a50: jmp qword ptr [rip+0x208472]
0x1ac0: jmp qword ptr [rip+0x20843a]
0x1ae0: jmp qword ptr [rip+0x20842a]
0x1af0: jmp qword ptr [rip+0x208422]
0x1b00: jmp qword ptr [rip+0x20841a]
0x1b50: jmp qword ptr [rip+0x2083f2]
0x1c10: jmp qword ptr [rip+0x208392]
0x1c20: jmp qword ptr [rip+0x20838a]
0x1c60: jmp qword ptr [rip+0x20838a]
0x1d8f: nop 
0x1f3d: nop dword ptr [rax]
0x204d: nop dword ptr [rax]
0x21b1: mov rdi,qword ptr [rip+0x2080c8]
0x21b8: lea rdx,[rip+0x4b0e]
0x21bf: mov rcx,rax
0x21c2: mov esi,0x1
0x21c7: xor eax,eax
0x21c9: call 0x1bf0
0x21ce: cmp byte ptr [rip+0x208203],0x0
0x21d5: mov r10,qword ptr [rsp+0x20]
0x21da: jne 0x2c4e
0x21e0: mov rbx,r10
0x21e3: mov rdi,qword ptr [r14]
0x21e6: movzx eax,byte ptr [rip+0x2081eb]
0x21ed: jmp 0x21f8
0x21f0: test al,al
0x21f2: jne 0x2a35
0x21f8: test rdi,rdi
0x21fb: jne 0x21f0
0x21fd: mov r10,rbx
0x299a: mov rcx,rax
0x299d: mov rax,qword ptr [rsp+0x10]
0x29a2: lea rdx,[rip+0x4d8c]
0x29a9: xor edi,edi
0x29ab: mov esi,dword ptr [rax]
0x29ad: xor eax,eax
0x29af: call 0x1b40
0x29b4: mov eax,0x7e
0x29b9: jmp 0x2787
0x2a35: call 0x5c90
0x2a3a: mov rdi,qword ptr [rip+0x20783f]
0x2a41: lea rdx,[rip+0x42a2]
0x2a48: mov rcx,rax
0x2a4b: mov esi,0x1
0x2a50: xor eax,eax
0x2a52: add r14,0x8
0x2a56: call 0x1bf0
0x2a5b: jmp 0x21e3
0x2ad7: jmp 0x1d85
0x2af5: mov rdi,qword ptr [rip+0x207784]
0x2afc: lea rdx,[rip+0x42a9]
0x2b03: mov rcx,rax
0x2b06: mov esi,0x1
0x2b0b: xor eax,eax
0x2b0d: call 0x1bf0
0x2b12: jmp 0x2947
0x2b95: mov rcx,rax
0x2b98: mov rax,qword ptr [rsp+0x10]
0x2b9d: lea rdx,[rip+0x4b91]
0x2ba4: xor edi,edi
0x2ba6: mov esi,dword ptr [rax]
0x2ba8: xor eax,eax
0x2baa: call 0x1b40
0x2baf: movsxd rax,dword ptr [rip+0x20769a]
0x2bb6: mov esi,0x20
0x2bbb: mov rdi,qword ptr [r15+rax*8]
0x2bbf: call 0x19d0
0x2bc4: test rax,rax
0x2bc7: je 0x2e1e
0x2bcd: lea rsi,[rip+0x49c4]
0x2bd4: mov edx,0x5
0x2bd9: xor edi,edi
0x2bdb: call 0x1960
0x2be0: xor esi,esi
0x2be2: mov rdx,rax
0x2be5: xor edi,edi
0x2be7: xor eax,eax
0x2be9: call 0x1b40
0x2bee: mov eax,0x7f
0x2bf3: jmp 0x2787
0x2c16: mov rcx,qword ptr [rsp+0x28]
0x2c1b: mov rdi,qword ptr [rip+0x20765e]
0x2c22: lea rdx,[rip+0x408b]
0x2c29: mov r8,rax
0x2c2c: mov esi,0x1
0x2c31: xor eax,eax
0x2c33: call 0x1bf0
0x2c38: movzx r11d,byte ptr [rsp+0x40]
0x2c3e: mov r10,qword ptr [rsp+0x38]
0x2c43: movzx r9d,byte ptr [rsp+0x30]
0x2c49: jmp 0x2452
0x2c4e: mov rdi,qword ptr [r10+0x8]
0x2c52: lea r14,[r10+0x10]
0x2c56: call 0x5c90
0x2c5b: mov rdi,qword ptr [rip+0x20761e]
0x2c62: lea rdx,[rip+0x4073]
0x2c69: mov rcx,rax
0x2c6c: mov esi,0x1
0x2c71: xor eax,eax
0x2c73: call 0x1bf0
0x2c78: mov r10,qword ptr [rsp+0x20]
0x2c7d: mov rbx,r10
0x2c80: jmp 0x21e3
0x2ccc: mov ecx,ebp
0x2cce: sub ecx,dword ptr [rip+0x20757c]
0x2cd4: mov rdi,qword ptr [rip+0x2075a5]
0x2cdb: mov r8,rax
0x2cde: mov rdx,r12
0x2ce1: mov esi,0x1
0x2ce6: xor eax,eax
0x2ce8: call 0x1bf0
0x2e1e: mov eax,0x7f
0x2e23: jmp 0x2787
0x2e5f: mov edx,0x5
0x2e64: lea rsi,[rip+0x472d]
0x2e6b: jmp 0x2ac2
0x2ee5: lea rsi,[rip+0x3e71]
0x2eec: mov edx,0x5
0x2ef1: xor edi,edi
0x2ef3: mov rbp,rax
0x2ef6: call 0x1960
0x2efb: mov rbx,rax
0x2efe: call 0x18c0
0x2f03: mov esi,dword ptr [rax]
0x2f05: mov rcx,rbp
0x2f08: mov rdx,rbx
0x2f0b: mov edi,0x7d
0x2f10: xor eax,eax
0x2f12: call 0x1b40
0x2ff5: call 0x19a0
0x303d: lea rsi,[rip+0x3d37]
0x3044: mov edx,0x5
0x3049: xor edi,edi
0x304b: mov rbp,rax
0x304e: call 0x1960
0x3053: mov rbx,rax
0x3056: call 0x18c0
0x305b: mov esi,dword ptr [rax]
0x305d: mov rcx,rbp
0x3060: mov rdx,rbx
0x3063: mov edi,0x7d
0x3068: xor eax,eax
0x306a: call 0x1b40
0x30a2: lea rsi,[rip+0x3d11]
0x30a9: mov edx,0x5
0x30ae: xor edi,edi
0x30b0: mov rbx,rax
0x30b3: call 0x1960
0x30b8: mov rdx,rax
0x30bb: mov rax,qword ptr [rsp+0x10]
0x30c0: mov rcx,rbx
0x30c3: mov edi,0x7d
0x30c8: mov esi,dword ptr [rax]
0x30ca: xor eax,eax
0x30cc: call 0x1b40
0x30d1: nop word ptr cs:[rax+rax]
0x30db: nop dword ptr [rax+rax]
0x310a: hlt 
0x310b: nop dword ptr [rax+rax]
0x3110: lea rdi,[rip+0x207111]
0x3117: push rbp
0x3118: lea rax,[rip+0x207109]
0x311f: cmp rax,rdi
0x3122: mov rbp,rsp
0x3125: je 0x3140
0x3127: mov rax,qword ptr [rip+0x206ea2]
0x312e: test rax,rax
0x3131: je 0x3140
0x3133: pop rbp
0x3134: jmp rax
0x3140: pop rbp
0x3141: ret 
0x3150: lea rdi,[rip+0x2070d1]
0x3157: lea rsi,[rip+0x2070ca]
0x315e: push rbp
0x315f: sub rsi,rdi
0x3162: mov rbp,rsp
0x3165: sar rsi,0x3
0x3169: mov rax,rsi
0x316c: shr rax,0x3f
0x3170: add rsi,rax
0x3173: sar rsi, 1
0x3176: je 0x3190
0x3178: mov rax,qword ptr [rip+0x206e69]
0x317f: test rax,rax
0x3182: je 0x3190
0x3184: pop rbp
0x3185: jmp rax
0x3190: pop rbp
0x3191: ret 
0x31b1: push rbp
0x31b2: mov rbp,rsp
0x31b5: je 0x31c3
0x31b7: mov rdi,qword ptr [rip+0x206e4a]
0x31be: call 0x1c60
0x31c3: call 0x3110
0x31c8: mov byte ptr [rip+0x2070b9],0x1
0x31cf: pop rbp
0x31d0: ret 
0x31e0: push rbp
0x31e1: mov rbp,rsp
0x31e4: pop rbp
0x31e5: jmp 0x3150
0x3318: nop dword ptr [rax+rax]
0x33dc: push rbx
0x3481: call 0x19a0
0x3486: nop word ptr cs:[rax+rax]
0x3a10: lea rsi,[rip+0x3221]
0x3a17: mov rbx,rax
0x3a1a: mov edx,0x5
0x3a1f: xor edi,edi
0x3a21: call 0x1960
0x3a26: mov rcx,rbx
0x3a29: mov rdx,rax
0x3a2c: xor esi,esi
0x3a2e: xor edi,edi
0x3a30: xor eax,eax
0x3a32: call 0x1b40
0x3a42: nop word ptr [rax+rax]
0x3ad2: call 0x19a0
0x3ad7: nop word ptr [rax+rax]
0x3bd0: lea rsi,[rip+0x3061]
0x3bd7: mov rbx,rax
0x3bda: mov edx,0x5
0x3bdf: xor edi,edi
0x3be1: call 0x1960
0x3be6: mov rcx,rbx
0x3be9: mov rdx,rax
0x3bec: xor esi,esi
0x3bee: xor edi,edi
0x3bf0: xor eax,eax
0x3bf2: call 0x1b40
0x3c02: nop word ptr [rax+rax]
0x3cb5: call 0x19a0
0x3cba: nop word ptr [rax+rax]
0x3d48: lea rsi,[rip+0x2ee9]
0x3d4f: mov rbx,rax
0x3d52: mov edx,0x5
0x3d57: xor edi,edi
0x3d59: call 0x1960
0x3d5e: mov rcx,rbx
0x3d61: mov rdx,rax
0x3d64: xor esi,esi
0x3d66: xor eax,eax
0x3d68: xor edi,edi
0x3d6a: call 0x1b40
0x3d6f: mov eax,0xffffffff
0x3d74: jmp 0x3e00
0x3e9c: call 0x19a0
0x3ea1: nop word ptr cs:[rax+rax]
0x3eab: nop dword ptr [rax+rax]
0x3eb0: mov qword ptr [rip+0x206549],rdi
0x3eb7: ret 
0x3ec0: mov byte ptr [rip+0x206531],dil
0x3ec7: ret 
0x3ed0: push rbp
0x3ed1: push rbx
0x3ed2: sub rsp,0x8
0x3ed6: mov rdi,qword ptr [rip+0x20636b]
0x3edd: call 0x6860
0x3ee2: test eax,eax
0x3ee4: je 0x3efc
0x3ee6: call 0x18c0
0x3eeb: cmp byte ptr [rip+0x206506],0x0
0x3ef2: mov rbx,rax
0x3ef5: je 0x3f13
0x3ef7: cmp dword ptr [rax],0x20
0x3efa: jne 0x3f13
0x3efc: mov rdi,qword ptr [rip+0x20637d]
0x3f03: call 0x6860
0x3f08: test eax,eax
0x3f0a: jne 0x3f52
0x3f0c: add rsp,0x8
0x3f10: pop rbx
0x3f11: pop rbp
0x3f12: ret 
0x3f13: lea rsi,[rip+0x380b]
0x3f1a: xor edi,edi
0x3f1c: mov edx,0x5
0x3f21: call 0x1960
0x3f26: mov rdi,qword ptr [rip+0x2064d3]
0x3f2d: mov rbp,rax
0x3f30: test rdi,rdi
0x3f33: je 0x3f5d
0x3f35: call 0x5a90
0x3f3a: mov esi,dword ptr [rbx]
0x3f3c: lea rdx,[rip+0x37ee]
0x3f43: mov rcx,rax
0x3f46: mov r8,rbp
0x3f49: xor edi,edi
0x3f4b: xor eax,eax
0x3f4d: call 0x1b40
0x3f52: mov edi,dword ptr [rip+0x2060c0]
0x3f58: call 0x18e0
0x3f5d: mov esi,dword ptr [rbx]
0x3f5f: lea rdx,[rip+0x37cf]
0x3f66: mov rcx,rax
0x3f69: xor edi,edi
0x3f6b: xor eax,eax
0x3f6d: call 0x1b40
0x3f72: jmp 0x3f52
0x401f: nop 
0x4020: push rbp
0x4021: push rbx
0x4022: mov rbp,rdi
0x4025: mov ebx,esi
0x4027: sub rsp,0x8
0x402b: call 0x6940
0x4030: movzx edx,byte ptr [rax]
0x4033: and edx,-0x21
0x4036: cmp dl,0x55
0x4039: je 0x40b0
0x403b: cmp dl,0x47
0x403e: je 0x4060
0x4040: lea rax,[rip+0x3744]
0x4047: lea rdx,[rip+0x2b23]
0x404e: cmp ebx,0x9
0x4051: cmovne rax,rdx
0x4055: add rsp,0x8
0x4059: pop rbx
0x405a: pop rbp
0x405b: ret 
0x4060: movzx edx,byte ptr [rax+0x1]
0x4064: and edx,-0x21
0x4067: cmp dl,0x42
0x406a: jne 0x4040
0x406c: cmp byte ptr [rax+0x2],0x31
0x4070: jne 0x4040
0x4072: cmp byte ptr [rax+0x3],0x38
0x4076: jne 0x4040
0x4078: cmp byte ptr [rax+0x4],0x30
0x407c: jne 0x4040
0x407e: cmp byte ptr [rax+0x5],0x33
0x4082: jne 0x4040
0x4084: cmp byte ptr [rax+0x6],0x30
0x4088: jne 0x4040
0x408a: cmp byte ptr [rax+0x7],0x0
0x408e: jne 0x4040
0x4090: cmp byte ptr [rbp],0x60
0x4094: lea rax,[rip+0x36e9]
0x409b: lea rdx,[rip+0x36e6]
0x40a2: cmovne rax,rdx
0x40a6: add rsp,0x8
0x40aa: pop rbx
0x40ab: pop rbp
0x40ac: ret 
0x40b0: movzx edx,byte ptr [rax+0x1]
0x40b4: and edx,-0x21
0x40b7: cmp dl,0x54
0x40ba: jne 0x4040
0x40bc: movzx edx,byte ptr [rax+0x2]
0x40c0: and edx,-0x21
0x40c3: cmp dl,0x46
0x40c6: jne 0x4040
0x40cc: cmp byte ptr [rax+0x3],0x2d
0x40d0: jne 0x4040
0x40d6: cmp byte ptr [rax+0x4],0x38
0x40da: jne 0x4040
0x40e0: cmp byte ptr [rax+0x5],0x0
0x40e4: jne 0x4040
0x40ea: cmp byte ptr [rbp],0x60
0x40ee: lea rax,[rip+0x3687]
0x40f5: lea rdx,[rip+0x3684]
0x40fc: cmovne rax,rdx
0x4100: add rsp,0x8
0x4104: pop rbx
0x4105: pop rbp
0x4106: ret 
0x41e3: xor r11d,r11d
0x41e6: mov rax,rbp
0x41e9: mov r8d,r12d
0x41ec: mov rbp,r11
0x41ef: mov r11,rax
0x41f2: nop word ptr [rax+rax]
0x41f8: cmp r11,rbp
0x41fb: setne r12b
0x41ff: cmp r11,-0x1
0x4203: jne 0x4212
0x4205: mov rax,qword ptr [rsp+0x10]
0x420a: cmp byte ptr [rax+rbp],0x0
0x420e: setne r12b
0x4212: test r12b,r12b
0x4215: je 0x4870
0x421b: cmp dword ptr [rsp+0x8],0x2
0x4220: mov rdi,qword ptr [rsp+0x10]
0x4225: lea r9,[rdi+rbp]
0x4229: setne al
0x422c: and al,byte ptr [rsp+0xd]
0x4230: mov r10d,eax
0x4233: je 0x42e0
0x4239: mov rax,qword ptr [rsp+0x18]
0x423e: test rax,rax
0x4241: je 0x4670
0x4247: cmp r11,-0x1
0x424b: lea rbx,[rbp+rax]
0x4250: jne 0x4280
0x4252: cmp rax,0x1
0x4256: jbe 0x4280
0x4258: mov byte ptr [rsp+0x38],r8b
0x425d: mov byte ptr [rsp+0x30],r10b
0x4262: mov qword ptr [rsp+0x28],r9
0x4267: call 0x1980
0x426c: movzx r8d,byte ptr [rsp+0x38]
0x4272: movzx r10d,byte ptr [rsp+0x30]
0x4278: mov r11,rax
0x427b: mov r9,qword ptr [rsp+0x28]
0x4280: cmp rbx,r11
0x4283: mov byte ptr [rsp+0x28],r10b
0x4288: ja 0x4840
0x428e: mov rdx,qword ptr [rsp+0x18]
0x4293: mov rsi,qword ptr [rsp+0x48]
0x4298: mov rdi,r9
0x429b: mov qword ptr [rsp+0x40],r11
0x42a0: mov byte ptr [rsp+0x38],r8b
0x42a5: mov qword ptr [rsp+0x30],r9
0x42aa: call 0x1a30
0x42af: test eax,eax
0x42b1: mov r9,qword ptr [rsp+0x30]
0x42b6: movzx r8d,byte ptr [rsp+0x38]
0x42bc: mov r11,qword ptr [rsp+0x40]
0x42c1: jne 0x4840
0x42c7: cmp byte ptr [rsp+0xf],0x0
0x42cc: movzx r10d,byte ptr [rsp+0x28]
0x42d2: jne 0x5255
0x42d8: nop dword ptr [rax+rax]
0x42e0: movzx ebx,byte ptr [r9]
0x42e4: cmp bl,0x7e
0x42e7: ja 0x4608
0x42ed: lea rcx,[rip+0x3518]
0x42f4: movzx edx,bl
0x42f7: movsxd rax,dword ptr [rcx+rdx*4]
0x42fb: add rax,rcx
0x42fe: jmp rax
0x4338: cmp byte ptr [rsp+0xd],0x1
0x433d: jne 0x4452
0x4343: test dl,dl
0x4345: jne 0x4452
0x434b: mov rsi,qword ptr [rsp+0x20]
0x4350: test rsi,rsi
0x4353: je 0x4369
0x4355: mov edx,ebx
0x4357: shr dl,0x5
0x435a: movzx edx,dl
0x435d: mov edx,dword ptr [rsi+rdx*4]
0x4360: btl edx,ebx
0x4363: jb 0x44b3
0x4369: test r10b,r10b
0x436c: jne 0x44b3
0x4372: xor eax,0x1
0x4375: add rbp,0x1
0x4379: and eax,r8d
0x437c: test al,al
0x437e: je 0x43a0
0x4380: cmp r13,r15
0x4383: jbe 0x438a
0x4385: mov byte ptr [r14+r15],0x27
0x438a: lea rax,[r15+0x1]
0x438e: cmp r13,rax
0x4391: jbe 0x4399
0x4393: mov byte ptr [r14+r15+0x1],0x27
0x4399: add r15,0x2
0x439d: xor r8d,r8d
0x43a0: cmp r15,r13
0x43a3: jae 0x43a9
0x43a5: mov byte ptr [r14+r15],bl
0x43a9: movzx edi,byte ptr [rsp+0xe]
0x43ae: add r15,0x1
0x43b2: mov eax,0x0
0x43b7: test r12b,r12b
0x43ba: cmove edi,eax
0x43bd: mov byte ptr [rsp+0xe],dil
0x43c2: jmp 0x41f8
0x4452: cmp byte ptr [rsp+0xf],0x0
0x4457: jne 0x434b
0x445d: jmp 0x4369
0x44b3: cmp dword ptr [rsp+0x8],0x2
0x44b8: sete dl
0x44bb: cmp byte ptr [rsp+0xf],0x0
0x44c0: mov eax,edx
0x44c2: jne 0x4d18
0x44c8: mov eax,r8d
0x44cb: xor eax,0x1
0x44ce: and al,dl
0x44d0: je 0x4501
0x44d2: cmp r13,r15
0x44d5: jbe 0x44dc
0x44d7: mov byte ptr [r14+r15],0x27
0x44dc: lea rdx,[r15+0x1]
0x44e0: cmp r13,rdx
0x44e3: jbe 0x44eb
0x44e5: mov byte ptr [r14+r15+0x1],0x24
0x44eb: lea rdx,[r15+0x2]
0x44ef: cmp r13,rdx
0x44f2: jbe 0x44fa
0x44f4: mov byte ptr [r14+r15+0x2],0x27
0x44fa: add r15,0x3
0x44fe: mov r8d,eax
0x4501: cmp r13,r15
0x4504: jbe 0x450b
0x4506: mov byte ptr [r14+r15],0x5c
0x450b: add r15,0x1
0x450f: add rbp,0x1
0x4513: jmp 0x43a0
0x4600: xor r10d,r10d
0x4603: nop dword ptr [rax+rax]
0x4608: cmp qword ptr [rsp+0x58],0x1
0x460e: jne 0x49b8
0x4614: mov qword ptr [rsp+0x38],r11
0x4619: mov byte ptr [rsp+0x30],r8b
0x461e: mov byte ptr [rsp+0x28],r10b
0x4623: call 0x1c40
0x4628: mov rcx,qword ptr [rax]
0x462b: movzx edx,bl
0x462e: movzx r10d,byte ptr [rsp+0x28]
0x4634: movzx r8d,byte ptr [rsp+0x30]
0x463a: mov r11,qword ptr [rsp+0x38]
0x463f: mov edi,0x1
0x4644: movzx eax,word ptr [rcx+rdx*2]
0x4648: and ax,0x4000
0x464c: setne r12b
0x4650: sete al
0x4653: and al,byte ptr [rsp+0xd]
0x4657: test al,al
0x4659: jne 0x4ff1
0x465f: cmp dword ptr [rsp+0x8],0x2
0x4664: sete dl
0x4667: jmp 0x4338
0x4670: movzx ebx,byte ptr [r9]
0x4674: cmp bl,0x7e
0x4677: ja 0x4600
0x4679: lea rcx,[rip+0x3388]
0x4680: movzx edx,bl
0x4683: movsxd rax,dword ptr [rcx+rdx*4]
0x4687: add rax,rcx
0x468a: jmp rax
0x4840: xor r10d,r10d
0x4843: jmp 0x42e0
0x4870: cmp dword ptr [rsp+0x8],0x2
0x4875: movzx ebx,byte ptr [rsp+0xf]
0x487a: mov r12d,r8d
0x487d: mov rbp,r11
0x4880: sete dl
0x4883: mov eax,ebx
0x4885: test r15,r15
0x4888: sete cl
0x488b: and eax,edx
0x488d: and al,cl
0x488f: jne 0x52f6
0x4895: mov eax,ebx
0x4897: xor eax,0x1
0x489a: and dl,al
0x489c: je 0x520c
0x48a2: cmp byte ptr [rsp+0x7c],0x0
0x48a7: je 0x520a
0x48ad: cmp byte ptr [rsp+0xe],0x0
0x48b2: jne 0x52ad
0x48b8: test r13,r13
0x48bb: sete al
0x48be: cmp qword ptr [rsp+0x50],0x0
0x48c4: setne dl
0x48c7: and al,dl
0x48c9: je 0x52ec
0x48cf: mov r13,qword ptr [rsp+0x50]
0x48d4: lea rbx,[rip+0x2296]
0x48db: mov byte ptr [r14],0x27
0x48df: mov dword ptr [rsp+0x8],0x2
0x48e7: mov r15d,0x1
0x48ed: mov qword ptr [rsp+0x18],0x1
0x48f6: mov byte ptr [rsp+0xf],0x0
0x48fb: mov qword ptr [rsp+0x48],rbx
0x4900: mov byte ptr [rsp+0x7c],al
0x4904: jmp 0x41e3
0x49b8: lea rax,[rsp+0xa0]
0x49c0: cmp r11,-0x1
0x49c4: mov qword ptr [rsp+0xa0],0x0
0x49d0: mov qword ptr [rsp+0x28],rax
0x49d5: jne 0x4a04
0x49d7: mov rdi,qword ptr [rsp+0x10]
0x49dc: mov byte ptr [rsp+0x40],r8b
0x49e1: mov byte ptr [rsp+0x38],r10b
0x49e6: mov qword ptr [rsp+0x30],r9
0x49eb: call 0x1980
0x49f0: movzx r8d,byte ptr [rsp+0x40]
0x49f6: movzx r10d,byte ptr [rsp+0x38]
0x49fc: mov r11,rax
0x49ff: mov r9,qword ptr [rsp+0x30]
0x4a04: lea rax,[rsp+0x9c]
0x4a0c: xor ecx,ecx
0x4a0e: mov byte ptr [rsp+0x7e],bl
0x4a12: mov byte ptr [rsp+0x7d],r8b
0x4a17: mov rbx,rcx
0x4a1a: mov qword ptr [rsp+0x88],r9
0x4a22: mov qword ptr [rsp+0x38],rax
0x4a27: mov byte ptr [rsp+0x7f],r10b
0x4a2c: mov qword ptr [rsp+0x80],r15
0x4a34: mov qword ptr [rsp+0x40],r14
0x4a39: mov qword ptr [rsp+0x70],r13
0x4a3e: mov qword ptr [rsp+0x30],r11
0x4a43: mov rax,qword ptr [rsp+0x10]
0x4a48: lea r14,[rbp+rbx]
0x4a4d: mov rdx,qword ptr [rsp+0x30]
0x4a52: mov rcx,qword ptr [rsp+0x28]
0x4a57: mov rdi,qword ptr [rsp+0x38]
0x4a5c: lea r13,[rax+r14]
0x4a60: sub rdx,r14
0x4a63: mov rsi,r13
0x4a66: call 0x6560
0x4a6b: test rax,rax
0x4a6e: mov r15,rax
0x4a71: je 0x4ac1
0x4a73: cmp rax,-0x1
0x4a77: je 0x5095
0x4a7d: cmp rax,-0x2
0x4a81: je 0x5021
0x4a87: cmp dword ptr [rsp+0x8],0x2
0x4a8c: sete al
0x4a8f: and al,byte ptr [rsp+0xf]
0x4a93: jne 0x4c30
0x4a99: mov edi,dword ptr [rsp+0x9c]
0x4aa0: call 0x1c20
0x4aa5: mov rdi,qword ptr [rsp+0x28]
0x4aaa: test eax,eax
0x4aac: mov eax,0x0
0x4ab1: cmove r12d,eax
0x4ab5: add rbx,r15
0x4ab8: call 0x1c10
0x4abd: test eax,eax
0x4abf: je 0x4a43
0x4ac1: mov edx,r12d
0x4ac4: mov rdi,rbx
0x4ac7: movzx r8d,byte ptr [rsp+0x7d]
0x4acd: xor edx,0x1
0x4ad0: movzx ebx,byte ptr [rsp+0x7e]
0x4ad5: movzx r10d,byte ptr [rsp+0x7f]
0x4adb: and dl,byte ptr [rsp+0xd]
0x4adf: mov r15,qword ptr [rsp+0x80]
0x4ae7: mov r14,qword ptr [rsp+0x40]
0x4aec: mov r13,qword ptr [rsp+0x70]
0x4af1: mov r11,qword ptr [rsp+0x30]
0x4af6: cmp rdi,0x1
0x4afa: jbe 0x50fb
0x4b00: mov rcx,rdi
0x4b03: xor esi,esi
0x4b05: movzx r9d,byte ptr [rsp+0xf]
0x4b0b: add rcx,rbp
0x4b0e: mov rdi,qword ptr [rsp+0x10]
0x4b13: jmp 0x4bce
0x4b20: cmp dword ptr [rsp+0x8],0x2
0x4b25: sete al
0x4b28: test r9b,r9b
0x4b2b: jne 0x4fe0
0x4b31: mov esi,r8d
0x4b34: xor esi,0x1
0x4b37: and al,sil
0x4b3a: je 0x4b6b
0x4b3c: cmp r13,r15
0x4b3f: jbe 0x4b46
0x4b41: mov byte ptr [r14+r15],0x27
0x4b46: lea rsi,[r15+0x1]
0x4b4a: cmp r13,rsi
0x4b4d: jbe 0x4b55
0x4b4f: mov byte ptr [r14+r15+0x1],0x24
0x4b55: lea rsi,[r15+0x2]
0x4b59: cmp r13,rsi
0x4b5c: jbe 0x4b64
0x4b5e: mov byte ptr [r14+r15+0x2],0x27
0x4b64: add r15,0x3
0x4b68: mov r8d,eax
0x4b6b: cmp r13,r15
0x4b6e: jbe 0x4b75
0x4b70: mov byte ptr [r14+r15],0x5c
0x4b75: lea rax,[r15+0x1]
0x4b79: cmp r13,rax
0x4b7c: jbe 0x4b8b
0x4b7e: mov eax,ebx
0x4b80: shr al,0x6
0x4b83: add eax,0x30
0x4b86: mov byte ptr [r14+r15+0x1],al
0x4b8b: lea rax,[r15+0x2]
0x4b8f: cmp r13,rax
0x4b92: jbe 0x4ba4
0x4b94: mov eax,ebx
0x4b96: shr al,0x3
0x4b99: and eax,0x7
0x4b9c: add eax,0x30
0x4b9f: mov byte ptr [r14+r15+0x2],al
0x4ba4: and ebx,0x7
0x4ba7: add rbp,0x1
0x4bab: add r15,0x3
0x4baf: add ebx,0x30
0x4bb2: cmp rbp,rcx
0x4bb5: jae 0x43a0
0x4bbb: mov esi,edx
0x4bbd: cmp r13,r15
0x4bc0: jbe 0x4bc6
0x4bc2: mov byte ptr [r14+r15],bl
0x4bc6: movzx ebx,byte ptr [rdi+rbp]
0x4bca: add r15,0x1
0x4bce: test dl,dl
0x4bd0: jne 0x4b20
0x4bd6: mov eax,esi
0x4bd8: xor eax,0x1
0x4bdb: and eax,r8d
0x4bde: test r10b,r10b
0x4be1: je 0x4bf1
0x4be3: cmp r13,r15
0x4be6: jbe 0x4bed
0x4be8: mov byte ptr [r14+r15],0x5c
0x4bed: add r15,0x1
0x4bf1: add rbp,0x1
0x4bf5: cmp rbp,rcx
0x4bf8: jae 0x437c
0x4bfe: test al,al
0x4c00: je 0x4ffe
0x4c06: cmp r13,r15
0x4c09: jbe 0x4c10
0x4c0b: mov byte ptr [r14+r15],0x27
0x4c10: lea rax,[r15+0x1]
0x4c14: cmp r13,rax
0x4c17: jbe 0x4c1f
0x4c19: mov byte ptr [r14+r15+0x1],0x27
0x4c1f: add r15,0x2
0x4c23: xor r10d,r10d
0x4c26: xor r8d,r8d
0x4c29: jmp 0x4bbd
0x4c30: cmp r15,0x1
0x4c34: je 0x4a99
0x4c3a: mov rdi,qword ptr [rsp+0x10]
0x4c3f: lea rcx,[rdi+r15]
0x4c43: lea rdx,[rdi+r14+0x1]
0x4c48: lea r8,[rcx+r14]
0x4c4c: jmp 0x4c5d
0x4c50: add rdx,0x1
0x4c54: cmp r8,rdx
0x4c57: je 0x4a99
0x4c5d: movzx ecx,byte ptr [rdx]
0x4c60: sub ecx,0x5b
0x4c63: cmp cl,0x21
0x4c66: ja 0x4c50
0x4c68: mov esi,0x1
0x4c6d: shl rsi,cl
0x4c70: mov rcx,rsi
0x4c73: movabsq rsi,0x20000002b
0x4c7d: test rcx,rsi
0x4c80: je 0x4c50
0x4c82: mov r14,qword ptr [rsp+0x40]
0x4c87: mov r13,qword ptr [rsp+0x70]
0x4c8c: mov rbp,qword ptr [rsp+0x30]
0x4c91: mov dword ptr [rsp+0x8],0x2
0x4c99: cmp byte ptr [rsp+0xd],0x0
0x4c9e: je 0x4cb0
0x4ca0: test al,al
0x4ca2: mov eax,0x4
0x4ca7: cmove eax,dword ptr [rsp+0x8]
0x4cac: mov dword ptr [rsp+0x8],eax
0x4cb0: sub rsp,0x8
0x4cb4: mov rcx,rbp
0x4cb7: mov rsi,r13
0x4cba: push qword ptr [rsp+0x68]
0x4cbe: push qword ptr [rsp+0x78]
0x4cc2: mov rdi,r14
0x4cc5: push 0x0
0x4cc7: mov r9d,dword ptr [rsp+0x98]
0x4ccf: mov r8d,dword ptr [rsp+0x28]
0x4cd4: mov rdx,qword ptr [rsp+0x30]
0x4cd9: and r9d,-0x3
0x4cdd: call 0x4110
0x4ce2: add rsp,0x20
0x4ce6: mov r15,rax
0x4ce9: mov rbx,qword ptr [rsp+0xa8]
0x4cf1: xor rbx,qword ptr fs:0x28
0x4cfa: mov rax,r15
0x4cfd: jne 0x5303
0x4d03: add rsp,0xb8
0x4d0a: pop rbx
0x4d0b: pop rbp
0x4d0c: pop r12
0x4d0e: pop r13
0x4d10: pop r14
0x4d12: pop r15
0x4d14: ret 
0x4d18: mov rbp,r11
0x4d1b: jmp 0x4c99
0x4d81: test r13,r13
0x4d84: jne 0x531a
0x4d8a: lea rax,[rip+0x1de0]
0x4d91: mov qword ptr [rsp+0x50],0x0
0x4d9a: mov byte ptr [rsp+0xe],0x1
0x4d9f: mov byte ptr [rsp+0x7c],0x0
0x4da4: xor r12d,r12d
0x4da7: mov byte ptr [rsp+0xf],0x0
0x4dac: mov qword ptr [rsp+0x18],0x1
0x4db5: mov qword ptr [rsp+0x48],rax
0x4dba: mov r15d,0x1
0x4dc0: mov dword ptr [rsp+0x8],0x2
0x4dc8: jmp 0x41e3
0x4fe0: movzx ebx,byte ptr [rsp+0xf]
0x4fe5: mov rbp,r11
0x4fe8: mov byte ptr [rsp+0xd],bl
0x4fec: jmp 0x4c99
0x4ff1: movzx edx,byte ptr [rsp+0xd]
0x4ff6: xor r12d,r12d
0x4ff9: jmp 0x4b00
0x4ffe: xor r10d,r10d
0x5001: jmp 0x4bbd
0x5021: mov r11,qword ptr [rsp+0x30]
0x5026: mov rsi,r14
0x5029: mov rcx,r13
0x502c: mov rax,rbx
0x502f: mov rdi,rbx
0x5032: movzx r8d,byte ptr [rsp+0x7d]
0x5038: movzx ebx,byte ptr [rsp+0x7e]
0x503d: mov r9,qword ptr [rsp+0x88]
0x5045: cmp rsi,r11
0x5048: movzx r10d,byte ptr [rsp+0x7f]
0x504e: mov r15,qword ptr [rsp+0x80]
0x5056: mov r14,qword ptr [rsp+0x40]
0x505b: mov r13,qword ptr [rsp+0x70]
0x5060: jae 0x5088
0x5062: cmp byte ptr [rcx],0x0
0x5065: jne 0x5077
0x5067: jmp 0x5088
0x5070: cmp byte ptr [r9+rax],0x0
0x5075: je 0x5085
0x5077: add rax,0x1
0x507b: lea rdx,[rbp+rax]
0x5080: cmp r11,rdx
0x5083: ja 0x5070
0x5085: mov rdi,rax
0x5088: movzx edx,byte ptr [rsp+0xd]
0x508d: xor r12d,r12d
0x5090: jmp 0x4af6
0x5095: mov rdi,rbx
0x5098: movzx r8d,byte ptr [rsp+0x7d]
0x509e: movzx ebx,byte ptr [rsp+0x7e]
0x50a3: movzx r10d,byte ptr [rsp+0x7f]
0x50a9: mov r15,qword ptr [rsp+0x80]
0x50b1: xor r12d,r12d
0x50b4: mov r14,qword ptr [rsp+0x40]
0x50b9: mov r13,qword ptr [rsp+0x70]
0x50be: mov r11,qword ptr [rsp+0x30]
0x50c3: movzx edx,byte ptr [rsp+0xd]
0x50c8: jmp 0x4af6
0x50fb: mov eax,edx
0x50fd: jmp 0x4657
0x520a: mov eax,edx
0x520c: mov rbx,qword ptr [rsp+0x48]
0x5211: test rbx,rbx
0x5214: je 0x5242
0x5216: test al,al
0x5218: je 0x5242
0x521a: movzx ecx,byte ptr [rbx]
0x521d: mov rax,rbx
0x5220: test cl,cl
0x5222: je 0x5242
0x5224: mov rdx,r15
0x5227: sub rax,r15
0x522a: cmp r13,rdx
0x522d: jbe 0x5233
0x522f: mov byte ptr [r14+rdx],cl
0x5233: add rdx,0x1
0x5237: movzx ecx,byte ptr [rax+rdx]
0x523b: test cl,cl
0x523d: jne 0x522a
0x523f: mov r15,rdx
0x5242: cmp r13,r15
0x5245: jbe 0x4ce9
0x524b: mov byte ptr [r14+r15],0x0
0x5250: jmp 0x4ce9
0x5255: cmp dword ptr [rsp+0x8],0x2
0x525a: movzx ebx,byte ptr [rsp+0xf]
0x525f: mov rbp,r11
0x5262: sete al
0x5265: mov byte ptr [rsp+0xd],bl
0x5269: jmp 0x4c99
0x52ad: sub rsp,0x8
0x52b1: mov r8d,0x5
0x52b7: mov rcx,r11
0x52ba: push qword ptr [rsp+0x68]
0x52be: push qword ptr [rsp+0x78]
0x52c2: mov rdi,r14
0x52c5: push qword ptr [rsp+0x38]
0x52c9: mov r9d,dword ptr [rsp+0x98]
0x52d1: mov rdx,qword ptr [rsp+0x30]
0x52d6: mov rsi,qword ptr [rsp+0x70]
0x52db: call 0x4110
0x52e0: add rsp,0x20
0x52e4: mov r15,rax
0x52e7: jmp 0x4ce9
0x52ec: movzx eax,byte ptr [rsp+0x7c]
0x52f1: jmp 0x520c
0x52f6: mov dword ptr [rsp+0x8],0x2
0x52fe: jmp 0x4c99
0x5303: call 0x19a0
0x5308: mov byte ptr [rsp+0xd],0x0
0x530d: jmp 0x4d81
0x531a: mov byte ptr [rsp+0xe],0x1
0x531f: xor eax,eax
0x5321: xor r12d,r12d
0x5324: mov qword ptr [rsp+0x50],0x0
0x532d: jmp 0x48d4
0x5344: nop 
0x5346: nop word ptr cs:[rax+rax]
0x543c: add rsp,0x20
0x5440: mov r11,qword ptr [rsp+0x10]
0x5445: cmp r11,rax
0x5448: ja 0x54b1
0x544a: lea rsi,[rax+0x1]
0x544e: lea rax,[rip+0x204fcb]
0x5455: cmp r12,rax
0x5458: mov qword ptr [rbx],rsi
0x545b: je 0x546f
0x545d: mov rdi,r12
0x5460: mov qword ptr [rsp+0x10],rsi
0x5465: call 0x18a0
0x546a: mov rsi,qword ptr [rsp+0x10]
0x546f: mov rdi,rsi
0x5472: mov qword ptr [rsp+0x10],rsi
0x5477: call 0x62d0
0x547c: sub rsp,0x8
0x5480: mov qword ptr [rbx+0x8],rax
0x5484: mov r8d,dword ptr [rbp]
0x5488: push qword ptr [rbp+0x30]
0x548b: push qword ptr [rbp+0x28]
0x548e: mov rcx,r14
0x5491: push r15
0x5493: mov r9d,dword ptr [rsp+0x3c]
0x5498: mov rdi,rax
0x549b: mov rdx,qword ptr [rsp+0x28]
0x54a0: mov rsi,qword ptr [rsp+0x30]
0x54a5: mov r12,rax
0x54a8: call 0x4110
0x54ad: add rsp,0x20
0x54b1: mov eax,dword ptr [rsp+0x18]
0x54b5: mov dword ptr [r13],eax
0x54b9: add rsp,0x28
0x54bd: mov rax,r12
0x54c0: pop rbx
0x54c1: pop rbp
0x54c2: pop r12
0x54c4: pop r13
0x54c6: pop r14
0x54c8: pop r15
0x54ca: ret 
0x54f1: call 0x18b0
0x54f6: call 0x6520
0x54fb: nop dword ptr [rax+rax]
0x5500: push r12
0x5502: push rbp
0x5503: push rbx
0x5504: mov rbx,rdi
0x5507: call 0x18c0
0x550c: mov r12d,dword ptr [rax]
0x550f: mov rbp,rax
0x5512: lea rax,[rip+0x205007]
0x5519: test rbx,rbx
0x551c: mov esi,0x38
0x5521: cmove rbx,rax
0x5525: mov rdi,rbx
0x5528: call 0x64d0
0x552d: mov dword ptr [rbp],r12d
0x5531: pop rbx
0x5532: pop rbp
0x5533: pop r12
0x5535: ret 
0x5540: lea rax,[rip+0x204fd9]
0x5547: test rdi,rdi
0x554a: cmove rdi,rax
0x554e: mov eax,dword ptr [rdi]
0x5550: ret 
0x5560: lea rax,[rip+0x204fb9]
0x5567: test rdi,rdi
0x556a: cmove rdi,rax
0x556e: mov dword ptr [rdi],esi
0x5570: ret 
0x5580: lea rax,[rip+0x204f99]
0x5587: test rdi,rdi
0x558a: mov ecx,esi
0x558c: cmove rdi,rax
0x5590: mov eax,esi
0x5592: and ecx,0x1f
0x5595: shr al,0x5
0x5598: movzx eax,al
0x559b: lea rdi,[rdi+rax*4+0x8]
0x55a0: mov esi,dword ptr [rdi]
0x55a2: mov eax,esi
0x55a4: shr eax,cl
0x55a6: xor edx,eax
0x55a8: and eax,0x1
0x55ab: and edx,0x1
0x55ae: shl edx,cl
0x55b0: xor edx,esi
0x55b2: mov dword ptr [rdi],edx
0x55b4: ret 
0x55c0: lea rax,[rip+0x204f59]
0x55c7: test rdi,rdi
0x55ca: cmove rdi,rax
0x55ce: mov eax,dword ptr [rdi+0x4]
0x55d1: mov dword ptr [rdi+0x4],esi
0x55d4: ret 
0x55e0: lea rax,[rip+0x204f39]
0x55e7: test rdi,rdi
0x55ea: cmove rdi,rax
0x55ee: test rsi,rsi
0x55f1: mov dword ptr [rdi],0xa
0x55f7: je 0x5607
0x55f9: test rdx,rdx
0x55fc: je 0x5607
0x55fe: mov qword ptr [rdi+0x28],rsi
0x5602: mov qword ptr [rdi+0x30],rdx
0x5606: ret 
0x5607: sub rsp,0x8
0x560b: call 0x18b0
0x5610: push r15
0x5612: push r14
0x5614: lea rax,[rip+0x204f05]
0x561b: push r13
0x561d: push r12
0x561f: mov r13,rdi
0x5622: push rbp
0x5623: push rbx
0x5624: mov rbx,r8
0x5627: mov r14,rsi
0x562a: mov r15,rdx
0x562d: sub rsp,0x18
0x5631: test r8,r8
0x5634: cmove rbx,rax
0x5638: mov qword ptr [rsp+0x8],rcx
0x563d: call 0x18c0
0x5642: mov r12d,dword ptr [rax]
0x5645: mov rbp,rax
0x5648: lea rax,[rbx+0x8]
0x564c: sub rsp,0x8
0x5650: mov r9d,dword ptr [rbx+0x4]
0x5654: push qword ptr [rbx+0x30]
0x5657: mov r8d,dword ptr [rbx]
0x565a: push qword ptr [rbx+0x28]
0x565d: mov rdx,r15
0x5660: push rax
0x5661: mov rcx,qword ptr [rsp+0x28]
0x5666: mov rsi,r14
0x5669: mov rdi,r13
0x566c: call 0x4110
0x5671: mov dword ptr [rbp],r12d
0x5675: add rsp,0x38
0x5679: pop rbx
0x567a: pop rbp
0x567b: pop r12
0x567d: pop r13
0x567f: pop r14
0x5681: pop r15
0x5683: ret 
0x5690: push r15
0x5692: push r14
0x5694: lea rax,[rip+0x204e85]
0x569b: push r13
0x569d: push r12
0x569f: mov r12,rdx
0x56a2: push rbp
0x56a3: push rbx
0x56a4: mov rbx,rcx
0x56a7: mov r14,rdi
0x56aa: mov r15,rsi
0x56ad: sub rsp,0x38
0x56b1: test rcx,rcx
0x56b4: cmove rbx,rax
0x56b8: xor ebp,ebp
0x56ba: call 0x18c0
0x56bf: test r12,r12
0x56c2: mov r13,rax
0x56c5: mov eax,dword ptr [rax]
0x56c7: sete bpl
0x56cb: or ebp,dword ptr [rbx+0x4]
0x56ce: lea r10,[rbx+0x8]
0x56d2: sub rsp,0x8
0x56d6: mov r8d,dword ptr [rbx]
0x56d9: mov rcx,r15
0x56dc: mov dword ptr [rsp+0x14],eax
0x56e0: push qword ptr [rbx+0x30]
0x56e3: mov rdx,r14
0x56e6: push qword ptr [rbx+0x28]
0x56e9: push r10
0x56eb: xor esi,esi
0x56ed: mov r9d,ebp
0x56f0: xor edi,edi
0x56f2: mov qword ptr [rsp+0x40],r10
0x56f7: call 0x4110
0x56fc: lea rsi,[rax+0x1]
0x5700: mov qword ptr [rsp+0x48],rax
0x5705: add rsp,0x20
0x5709: mov rdi,rsi
0x570c: mov qword ptr [rsp+0x18],rsi
0x5711: call 0x62d0
0x5716: mov qword ptr [rsp+0x10],rax
0x571b: sub rsp,0x8
0x571f: push qword ptr [rbx+0x30]
0x5722: push qword ptr [rbx+0x28]
0x5725: mov r10,qword ptr [rsp+0x38]
0x572a: mov r9d,ebp
0x572d: mov r8d,dword ptr [rbx]
0x5730: mov rcx,r15
0x5733: mov rdx,r14
0x5736: mov rdi,rax
0x5739: push r10
0x573b: mov rsi,qword ptr [rsp+0x38]
0x5740: call 0x4110
0x5745: mov eax,dword ptr [rsp+0x2c]
0x5749: add rsp,0x20
0x574d: test r12,r12
0x5750: mov dword ptr [r13],eax
0x5754: je 0x575f
0x5756: mov r11,qword ptr [rsp+0x28]
0x575b: mov qword ptr [r12],r11
0x575f: mov rax,qword ptr [rsp+0x10]
0x5764: add rsp,0x38
0x5768: pop rbx
0x5769: pop rbp
0x576a: pop r12
0x576c: pop r13
0x576e: pop r14
0x5770: pop r15
0x5772: ret 
0x5780: mov rcx,rdx
0x5783: xor edx,edx
0x5785: jmp 0x5690
0x5790: mov eax,dword ptr [rip+0x2048c2]
0x5796: push r12
0x5798: mov r12,qword ptr [rip+0x2048c1]
0x579f: push rbp
0x57a0: push rbx
0x57a1: cmp eax,0x1
0x57a4: jle 0x57d1
0x57a6: sub eax,0x2
0x57a9: lea rbx,[r12+0x18]
0x57ae: shl rax,0x4
0x57b2: lea rbp,[r12+rax+0x28]
0x57b7: nop word ptr [rax+rax]
0x57c0: mov rdi,qword ptr [rbx]
0x57c3: add rbx,0x10
0x57c7: call 0x18a0
0x57cc: cmp rbx,rbp
0x57cf: jne 0x57c0
0x57d1: mov rdi,qword ptr [r12+0x8]
0x57d6: lea rbx,[rip+0x204c43]
0x57dd: cmp rdi,rbx
0x57e0: je 0x57f9
0x57e2: call 0x18a0
0x57e7: mov qword ptr [rip+0x20487e],0x100
0x57f2: mov qword ptr [rip+0x20487f],rbx
0x57f9: lea rbx,[rip+0x204870]
0x5800: cmp r12,rbx
0x5803: je 0x5814
0x5805: mov rdi,r12
0x5808: call 0x18a0
0x580d: mov qword ptr [rip+0x20484c],rbx
0x5814: pop rbx
0x5815: mov dword ptr [rip+0x204839],0x1
0x581f: pop rbp
0x5820: pop r12
0x5822: ret 
0x5830: lea rcx,[rip+0x204ce9]
0x5837: mov rdx,-0x1
0x583e: jmp 0x5350
0x5850: lea rcx,[rip+0x204cc9]
0x5857: jmp 0x5350
0x5860: lea rcx,[rip+0x204cb9]
0x5867: mov rsi,rdi
0x586a: mov rdx,-0x1
0x5871: xor edi,edi
0x5873: jmp 0x5350
0x5880: lea rcx,[rip+0x204c99]
0x5887: mov rdx,rsi
0x588a: mov rsi,rdi
0x588d: xor edi,edi
0x588f: jmp 0x5350
0x590f: mov rcx,qword ptr [rsp+0x38]
0x5914: xor rcx,qword ptr fs:0x28
0x591d: jne 0x5929
0x591f: add rsp,0x48
0x5923: ret 
0x5924: call 0x18b0
0x5929: call 0x19a0
0x592e: nop 
0x5930: sub rsp,0x48
0x5934: mov rax,rdx
0x5937: mov rdx,rcx
0x593a: mov rcx,qword ptr fs:0x28
0x5943: mov qword ptr [rsp+0x38],rcx
0x5948: xor ecx,ecx
0x594a: cmp esi,0xa
0x594d: je 0x59b0
0x594f: mov dword ptr [rsp],esi
0x5952: mov rcx,rsp
0x5955: mov rsi,rax
0x5958: mov qword ptr [rsp+0x4],0x0
0x5961: mov qword ptr [rsp+0xc],0x0
0x596a: mov qword ptr [rsp+0x14],0x0
0x5973: mov qword ptr [rsp+0x1c],0x0
0x597c: mov qword ptr [rsp+0x24],0x0
0x5985: mov qword ptr [rsp+0x2c],0x0
0x598e: mov dword ptr [rsp+0x34],0x0
0x5996: call 0x5350
0x599b: mov rdx,qword ptr [rsp+0x38]
0x59a0: xor rdx,qword ptr fs:0x28
0x59a9: jne 0x59b5
0x59ab: add rsp,0x48
0x59af: ret 
0x59b0: call 0x18b0
0x59b5: call 0x19a0
0x59ba: nop word ptr [rax+rax]
0x59d0: mov rcx,rdx
0x59d3: mov rdx,rsi
0x59d6: mov esi,edi
0x59d8: xor edi,edi
0x59da: jmp 0x5930
0x59e0: sub rsp,0x48
0x59e4: mov ecx,edx
0x59e6: mov rax,qword ptr fs:0x28
0x59ef: mov qword ptr [rsp+0x38],rax
0x59f4: xor eax,eax
0x59f6: mov rax,qword ptr [rip+0x204b53]
0x59fd: mov r8,rsp
0x5a00: and ecx,0x1f
0x5a03: movdqa xmm0,[rip+0x204b15]
0x5a0b: mov qword ptr [rsp+0x30],rax
0x5a10: mov eax,edx
0x5a12: movaps [rsp],xmm0
0x5a16: shr al,0x5
0x5a19: movzx eax,al
0x5a1c: lea r9,[r8+rax*4+0x8]
0x5a21: movdqa xmm0,[rip+0x204b07]
0x5a29: movaps [rsp+0x10],xmm0
0x5a2e: movdqa xmm0,[rip+0x204b0a]
0x5a36: movaps [rsp+0x20],xmm0
0x5a3b: mov edx,dword ptr [r9]
0x5a3e: mov eax,edx
0x5a40: shr eax,cl
0x5a42: not eax
0x5a44: and eax,0x1
0x5a47: shl eax,cl
0x5a49: mov rcx,r8
0x5a4c: xor eax,edx
0x5a4e: mov rdx,rsi
0x5a51: mov rsi,rdi
0x5a54: mov dword ptr [r9],eax
0x5a57: xor edi,edi
0x5a59: call 0x5350
0x5a5e: mov rsi,qword ptr [rsp+0x38]
0x5a63: xor rsi,qword ptr fs:0x28
0x5a6c: jne 0x5a73
0x5a6e: add rsp,0x48
0x5a72: ret 
0x5a73: call 0x19a0
0x5a78: nop dword ptr [rax+rax]
0x5a80: movsx edx,sil
0x5a84: mov rsi,-0x1
0x5a8b: jmp 0x59e0
0x5a90: mov edx,0x3a
0x5a95: mov rsi,-0x1
0x5a9c: jmp 0x59e0
0x5ab0: mov edx,0x3a
0x5ab5: jmp 0x59e0
0x5ac0: sub rsp,0x48
0x5ac4: mov rax,rdx
0x5ac7: mov rdx,qword ptr fs:0x28
0x5ad0: mov qword ptr [rsp+0x38],rdx
0x5ad5: xor edx,edx
0x5ad7: cmp esi,0xa
0x5ada: je 0x5b44
0x5adc: mov dword ptr [rsp],esi
0x5adf: mov rcx,rsp
0x5ae2: mov rdx,-0x1
0x5ae9: mov rsi,rax
0x5aec: mov qword ptr [rsp+0x4],0x0
0x5af5: mov qword ptr [rsp+0xc],0x4000000
0x5afe: mov qword ptr [rsp+0x14],0x0
0x5b07: mov qword ptr [rsp+0x1c],0x0
0x5b10: mov qword ptr [rsp+0x24],0x0
0x5b19: mov qword ptr [rsp+0x2c],0x0
0x5b22: mov dword ptr [rsp+0x34],0x0
0x5b2a: call 0x5350
0x5b2f: mov rcx,qword ptr [rsp+0x38]
0x5b34: xor rcx,qword ptr fs:0x28
0x5b3d: jne 0x5b49
0x5b3f: add rsp,0x48
0x5b43: ret 
0x5b44: call 0x18b0
0x5b49: call 0x19a0
0x5b4e: nop 
0x5b50: sub rsp,0x48
0x5b54: mov r9,rcx
0x5b57: mov rcx,qword ptr [rip+0x2049f2]
0x5b5e: movdqa xmm0,[rip+0x2049ba]
0x5b66: mov rax,qword ptr fs:0x28
0x5b6f: mov qword ptr [rsp+0x38],rax
0x5b74: xor eax,eax
0x5b76: movaps [rsp],xmm0
0x5b7a: test rsi,rsi
0x5b7d: mov qword ptr [rsp+0x30],rcx
0x5b82: mov dword ptr [rsp],0xa
0x5b89: movdqa xmm0,[rip+0x20499f]
0x5b91: movaps [rsp+0x10],xmm0
0x5b96: movdqa xmm0,[rip+0x2049a2]
0x5b9e: movaps [rsp+0x20],xmm0
0x5ba3: je 0x5bd7
0x5ba5: test rdx,rdx
0x5ba8: je 0x5bd7
0x5baa: mov qword ptr [rsp+0x28],rsi
0x5baf: mov qword ptr [rsp+0x30],rdx
0x5bb4: mov rcx,rsp
0x5bb7: mov rdx,r8
0x5bba: mov rsi,r9
0x5bbd: call 0x5350
0x5bc2: mov rdi,qword ptr [rsp+0x38]
0x5bc7: xor rdi,qword ptr fs:0x28
0x5bd0: jne 0x5bdc
0x5bd2: add rsp,0x48
0x5bd6: ret 
0x5bd7: call 0x18b0
0x5bdc: call 0x19a0
0x5be1: nop dword ptr [rax+rax]
0x5be6: nop word ptr cs:[rax+rax]
0x5bf0: mov r8,-0x1
0x5bf7: jmp 0x5b50
0x5c00: mov rcx,rdx
0x5c03: mov r8,-0x1
0x5c0a: mov rdx,rsi
0x5c0d: mov rsi,rdi
0x5c10: xor edi,edi
0x5c12: jmp 0x5b50
0x5c20: mov r8,rcx
0x5c23: mov rcx,rdx
0x5c26: mov rdx,rsi
0x5c29: mov rsi,rdi
0x5c2c: xor edi,edi
0x5c2e: jmp 0x5b50
0x5c40: lea rcx,[rip+0x2043d9]
0x5c47: jmp 0x5350
0x5c50: lea rcx,[rip+0x2043c9]
0x5c57: mov rdx,rsi
0x5c5a: mov rsi,rdi
0x5c5d: xor edi,edi
0x5c5f: jmp 0x5350
0x5c70: lea rcx,[rip+0x2043a9]
0x5c77: mov rdx,-0x1
0x5c7e: jmp 0x5350
0x5de8: mov r8,rcx
0x5deb: mov rcx,rdx
0x5dee: lea rdx,[rip+0x1e5f]
0x5df5: mov esi,0x1
0x5dfa: xor eax,eax
0x5dfc: call 0x1bf0
0x5e01: jmp 0x5cec
0x5ffd: push r12
0x5fff: push r15
0x6001: push r14
0x6003: mov r8,qword ptr [rsp+0x20]
0x6008: mov rcx,rbx
0x600b: mov rdx,rax
0x600e: mov rdi,rbp
0x6011: mov esi,0x1
0x6016: xor eax,eax
0x6018: call 0x1bf0
0x601d: add rsp,0x20
0x6021: add rsp,0x28
0x6025: pop rbx
0x6026: pop rbp
0x6027: pop r12
0x6029: pop r13
0x602b: pop r14
0x602d: pop r15
0x602f: ret 
0x6069: push r12
0x606b: push r15
0x606d: push r14
0x606f: mov r9,qword ptr [rsp+0x28]
0x6074: jmp 0x6003
0x60d0: xor r9d,r9d
0x60d3: cmp qword ptr [r8],0x0
0x60d7: je 0x60eb
0x60d9: nop dword ptr [rax]
0x60e0: add r9,0x1
0x60e4: cmp qword ptr [r8+r9*8],0x0
0x60e9: jne 0x60e0
0x60eb: jmp 0x5cb0
0x60f0: sub rsp,0x68
0x60f4: mov r10,r8
0x60f7: xor r9d,r9d
0x60fa: mov rax,qword ptr fs:0x28
0x6103: mov qword ptr [rsp+0x58],rax
0x6108: xor eax,eax
0x610a: mov r8,rsp
0x610d: nop dword ptr [rax]
0x6110: mov eax,dword ptr [r10]
0x6113: cmp eax,0x2f
0x6116: ja 0x615a
0x6118: mov r11d,eax
0x611b: add r11,qword ptr [r10+0x10]
0x611f: add eax,0x8
0x6122: mov dword ptr [r10],eax
0x6125: mov rax,qword ptr [r11]
0x6128: test rax,rax
0x612b: mov qword ptr [r8+r9*8],rax
0x612f: je 0x613b
0x6131: add r9,0x1
0x6135: cmp r9,0xa
0x6139: jne 0x6110
0x613b: call 0x5cb0
0x6140: mov rax,qword ptr [rsp+0x58]
0x6145: xor rax,qword ptr fs:0x28
0x614e: jne 0x6155
0x6150: add rsp,0x68
0x6154: ret 
0x6155: call 0x19a0
0x615a: mov r11,qword ptr [r10+0x8]
0x615e: lea rax,[r11+0x8]
0x6162: mov qword ptr [r10+0x8],rax
0x6166: jmp 0x6125
0x6230: call 0x19a0
0x623c: mov rax,rbx
0x623f: add rbx,0x8
0x6243: jmp 0x61f6
0x6250: push rbx
0x6251: lea rsi,[rip+0x1a4a]
0x6258: mov edx,0x5
0x625d: xor edi,edi
0x625f: call 0x1960
0x6264: lea rdx,[rip+0x1a4c]
0x626b: mov rsi,rax
0x626e: mov edi,0x1
0x6273: xor eax,eax
0x6275: call 0x1b30
0x627a: lea rsi,[rip+0x1a4c]
0x6281: mov edx,0x5
0x6286: xor edi,edi
0x6288: call 0x1960
0x628d: lea rcx,[rip+0x1174]
0x6294: lea rdx,[rip+0x970]
0x629b: mov rsi,rax
0x629e: mov edi,0x1
0x62a3: xor eax,eax
0x62a5: call 0x1b30
0x62aa: mov rbx,qword ptr [rip+0x203f97]
0x62b1: lea rsi,[rip+0x1c48]
0x62b8: xor edi,edi
0x62ba: mov edx,0x5
0x62bf: call 0x1960
0x62c4: mov rsi,rbx
0x62c7: mov rdi,rax
0x62ca: pop rbx
0x62cb: jmp 0x1a40
0x62ea: nop word ptr [rax+rax]
0x62f0: mov rax,rdi
0x62f3: mul rsi
0x62f6: mov rdi,rax
0x62f9: seto al
0x62fc: test rdi,rdi
0x62ff: js 0x630b
0x6301: movzx eax,al
0x6304: test rax,rax
0x6307: jne 0x630b
0x6309: jmp 0x62d0
0x630b: sub rsp,0x8
0x630f: call 0x6520
0x6314: nop 
0x6316: nop word ptr cs:[rax+rax]
0x6320: jmp 0x62d0
0x6366: nop word ptr cs:[rax+rax]
0x6370: mov rax,rsi
0x6373: mul rdx
0x6376: mov rsi,rax
0x6379: seto al
0x637c: test rsi,rsi
0x637f: js 0x638b
0x6381: movzx eax,al
0x6384: test rax,rax
0x6387: jne 0x638b
0x6389: jmp 0x6330
0x638b: sub rsp,0x8
0x638f: call 0x6520
0x6394: nop 
0x6396: nop word ptr cs:[rax+rax]
0x63a0: test rdi,rdi
0x63a3: mov r9,rdx
0x63a6: mov rcx,qword ptr [rsi]
0x63a9: je 0x63e0
0x63ab: xor edx,edx
0x63ad: movabsq rax,0x5555555555555554
0x63b7: div r9
0x63ba: cmp rax,rcx
0x63bd: jbe 0x63fb
0x63bf: mov rax,rcx
0x63c2: shr rax, 1
0x63c5: lea rcx,[rax+rcx+0x1]
0x63ca: mov qword ptr [rsi],rcx
0x63cd: imul rcx,r9
0x63d1: mov rsi,rcx
0x63d4: jmp 0x6330
0x63e0: test rcx,rcx
0x63e3: je 0x6408
0x63e5: mov rax,rcx
0x63e8: mul r9
0x63eb: seto dl
0x63ee: test rax,rax
0x63f1: movzx edx,dl
0x63f4: js 0x63fb
0x63f6: test rdx,rdx
0x63f9: je 0x63ca
0x63fb: sub rsp,0x8
0x63ff: call 0x6520
0x6404: nop dword ptr [rax]
0x6408: xor edx,edx
0x640a: mov eax,0x80
0x640f: xor r8d,r8d
0x6412: div r9
0x6415: test rax,rax
0x6418: sete r8b
0x641c: lea rcx,[r8+rax]
0x6420: jmp 0x63e5
0x6430: test rdi,rdi
0x6433: mov rax,qword ptr [rsi]
0x6436: je 0x6460
0x6438: movabsq rdx,0x5555555555555553
0x6442: cmp rax,rdx
0x6445: ja 0x6471
0x6447: mov rdx,rax
0x644a: shr rdx, 1
0x644d: lea rax,[rdx+rax+0x1]
0x6452: mov qword ptr [rsi],rax
0x6455: mov rsi,rax
0x6458: jmp 0x6330
0x6460: test rax,rax
0x6463: mov edx,0x80
0x6468: cmove rax,rdx
0x646c: test rax,rax
0x646f: jns 0x6452
0x6471: sub rsp,0x8
0x6475: call 0x6520
0x647a: nop word ptr [rax+rax]
0x6480: push rbx
0x6481: mov rbx,rdi
0x6484: call 0x62d0
0x6489: mov rdx,rbx
0x648c: xor esi,esi
0x648e: mov rdi,rax
0x6491: pop rbx
0x6492: jmp 0x1a10
0x64a0: mov rax,rdi
0x64a3: sub rsp,0x8
0x64a7: mul rsi
0x64aa: seto dl
0x64ad: test rax,rax
0x64b0: js 0x64c9
0x64b2: movzx edx,dl
0x64b5: test rdx,rdx
0x64b8: jne 0x64c9
0x64ba: call 0x1a50
0x64bf: test rax,rax
0x64c2: je 0x64c9
0x64c4: add rsp,0x8
0x64c8: ret 
0x64c9: call 0x6520
0x64ce: nop 
0x6550: call 0x18b0
0x6555: nop word ptr cs:[rax+rax]
0x655f: nop 
0x6560: push r13
0x6562: push r12
0x6564: mov r13,rsi
0x6567: push rbp
0x6568: push rbx
0x6569: mov rbx,rdi
0x656c: mov r12,rdx
0x656f: sub rsp,0x18
0x6573: mov rax,qword ptr fs:0x28
0x657c: mov qword ptr [rsp+0x8],rax
0x6581: xor eax,eax
0x6583: lea rax,[rsp+0x4]
0x6588: test rdi,rdi
0x658b: cmove rbx,rax
0x658f: mov rdi,rbx
0x6592: call 0x19c0
0x6597: cmp rax,-0x3
0x659b: mov rbp,rax
0x659e: jbe 0x65c0
0x65a0: test r12,r12
0x65a3: je 0x65c0
0x65a5: xor edi,edi
0x65a7: call 0x68e0
0x65ac: test al,al
0x65ae: jne 0x65c0
0x65b0: movzx eax,byte ptr [r13]
0x65b5: mov ebp,0x1
0x65ba: mov dword ptr [rbx],eax
0x65bc: nop dword ptr [rax]
0x65c0: mov rdx,qword ptr [rsp+0x8]
0x65c5: xor rdx,qword ptr fs:0x28
0x65ce: mov rax,rbp
0x65d1: jne 0x65de
0x65d3: add rsp,0x18
0x65d7: pop rbx
0x65d8: pop rbp
0x65d9: pop r12
0x65db: pop r13
0x65dd: ret 
0x65de: call 0x19a0
0x65e3: nop word ptr cs:[rax+rax]
0x65ed: nop dword ptr [rax]
0x6770: call 0x19a0
0x6775: nop 
0x6776: nop word ptr cs:[rax+rax]
0x6860: push r12
0x6862: push rbp
0x6863: mov rbp,rdi
0x6866: push rbx
0x6867: call 0x1900
0x686c: mov ebx,dword ptr [rbp]
0x686f: mov rdi,rbp
0x6872: mov r12,rax
0x6875: call 0x6980
0x687a: and ebx,0x20
0x687d: test ebx,ebx
0x687f: jne 0x6898
0x6881: test eax,eax
0x6883: je 0x688f
0x6885: test r12,r12
0x6888: mov eax,0xffffffff
0x688d: je 0x68c8
0x688f: pop rbx
0x6890: pop rbp
0x6891: pop r12
0x6893: ret 
0x6898: test eax,eax
0x689a: jne 0x68b8
0x689c: call 0x18c0
0x68a1: mov dword ptr [rax],0x0
0x68a7: mov eax,0xffffffff
0x68ac: pop rbx
0x68ad: pop rbp
0x68ae: pop r12
0x68b0: ret 
0x68b8: pop rbx
0x68b9: mov eax,0xffffffff
0x68be: pop rbp
0x68bf: pop r12
0x68c1: ret 
0x68c8: call 0x18c0
0x68cd: cmp dword ptr [rax],0x9
0x68d0: pop rbx
0x68d1: pop rbp
0x68d2: pop r12
0x68d4: setne al
0x68d7: movzx eax,al
0x68da: neg eax
0x68dc: ret 
0x68e0: sub rsp,0x8
0x68e4: xor esi,esi
0x68e6: call 0x1b20
0x68eb: mov rdx,rax
0x68ee: mov eax,0x1
0x68f3: test rdx,rdx
0x68f6: je 0x6915
0x68f8: lea rdi,[rip+0x16d1]
0x68ff: mov ecx,0x2
0x6904: mov rsi,rdx
0x6907: rep cmpsb [rsi],es:[rdi]
0x6909: seta cl
0x690c: sbb cl,0x0
0x690f: xor eax,eax
0x6911: test cl,cl
0x6913: jne 0x6920
0x6915: add rsp,0x8
0x6919: ret 
0x6920: lea rdi,[rip+0x16ab]
0x6927: mov ecx,0x6
0x692c: mov rsi,rdx
0x692f: rep cmpsb [rsi],es:[rdi]
0x6931: seta al
0x6934: sbb al,0x0
0x6936: test al,al
0x6938: setne al
0x693b: add rsp,0x8
0x693f: ret 
0x6940: sub rsp,0x8
0x6944: mov edi,0xe
0x6949: call 0x1af0
0x694e: test rax,rax
0x6951: je 0x6970
0x6953: cmp byte ptr [rax],0x0
0x6956: lea rdx,[rip+0x167b]
0x695d: cmove rax,rdx
0x6961: add rsp,0x8
0x6965: ret 
0x6970: lea rax,[rip+0x1661]
0x6977: add rsp,0x8
0x697b: ret 
0x6980: push r12
0x6982: push rbp
0x6983: push rbx
0x6984: mov rbx,rdi
0x6987: call 0x1ac0
0x698c: test eax,eax
0x698e: mov rdi,rbx
0x6991: js 0x69e7
0x6993: call 0x1b00
0x6998: test eax,eax
0x699a: jne 0x69c8
0x699c: mov rdi,rbx
0x699f: call 0x6a00
0x69a4: test eax,eax
0x69a6: je 0x69e4
0x69a8: call 0x18c0
0x69ad: mov r12d,dword ptr [rax]
0x69b0: mov rdi,rbx
0x69b3: mov rbp,rax
0x69b6: call 0x1930
0x69bb: test r12d,r12d
0x69be: jne 0x69f0
0x69c0: pop rbx
0x69c1: pop rbp
0x69c2: pop r12
0x69c4: ret 
0x69c8: mov rdi,rbx
0x69cb: call 0x1ac0
0x69d0: xor esi,esi
0x69d2: mov edx,0x1
0x69d7: mov edi,eax
0x69d9: call 0x19f0
0x69de: cmp rax,-0x1
0x69e2: jne 0x699c
0x69e4: mov rdi,rbx
0x69e7: pop rbx
0x69e8: pop rbp
0x69e9: pop r12
0x69eb: jmp 0x1930
0x69f0: mov dword ptr [rbp],r12d
0x69f4: mov eax,0xffffffff
0x69f9: jmp 0x69c0
0x6a00: test rdi,rdi
0x6a03: push rbx
0x6a04: mov rbx,rdi
0x6a07: je 0x6a1a
0x6a09: call 0x1b00
0x6a0e: test eax,eax
0x6a10: je 0x6a1a
0x6a12: test dword ptr [rbx],0x100
0x6a18: jne 0x6a28
0x6a1a: mov rdi,rbx
0x6a1d: pop rbx
0x6a1e: jmp 0x1ae0
0x6a28: mov rdi,rbx
0x6a2b: mov edx,0x1
0x6a30: xor esi,esi
0x6a32: call 0x6a40
0x6a37: mov rdi,rbx
0x6a3a: pop rbx
0x6a3b: jmp 0x1ae0
0x6a40: mov rax,qword ptr [rdi+0x8]
0x6a44: cmp qword ptr [rdi+0x10],rax
0x6a48: je 0x6a50
0x6a4a: jmp 0x1b50
0x6a50: mov rax,qword ptr [rdi+0x20]
0x6a54: cmp qword ptr [rdi+0x28],rax
0x6a58: jne 0x6a4a
0x6a5a: cmp qword ptr [rdi+0x48],0x0
0x6a5f: jne 0x6a4a
0x6a61: push r12
0x6a63: push rbp
0x6a64: mov r12d,edx
0x6a67: push rbx
0x6a68: mov rbp,rsi
0x6a6b: mov rbx,rdi
0x6a6e: call 0x1ac0
0x6a73: mov edx,r12d
0x6a76: mov rsi,rbp
0x6a79: mov edi,eax
0x6a7b: call 0x19f0
0x6a80: cmp rax,-0x1
0x6a84: je 0x6a92
0x6a86: and dword ptr [rbx],-0x11
0x6a89: mov qword ptr [rbx+0x90],rax
0x6a90: xor eax,eax
0x6a92: pop rbx
0x6a93: pop rbp
0x6a94: pop r12
0x6a96: ret 
0x6aa0: push r15
0x6aa2: push r14
0x6aa4: mov r15,rdx
0x6aa7: push r13
0x6aa9: push r12
0x6aab: lea r12,[rip+0x202f1e]
0x6ab2: push rbp
0x6ab3: lea rbp,[rip+0x202f1e]
0x6aba: push rbx
0x6abb: mov r13d,edi
0x6abe: mov r14,rsi
0x6ac1: sub rbp,r12
0x6ac4: sub rsp,0x8
0x6ac8: sar rbp,0x3
0x6acc: call 0x1858
0x6ad1: test rbp,rbp
0x6ad4: je 0x6af6
0x6ad6: xor ebx,ebx
0x6ad8: nop dword ptr [rax+rax]
0x6ae0: mov rdx,r15
0x6ae3: mov rsi,r14
0x6ae6: mov edi,r13d
0x6ae9: call qword ptr [r12+rbx*8]
0x6aed: add rbx,0x1
0x6af1: cmp rbp,rbx
0x6af4: jne 0x6ae0
0x6af6: add rsp,0x8
0x6afa: pop rbx
0x6afb: pop rbp
0x6afc: pop r12
0x6afe: pop r13
0x6b00: pop r14
0x6b02: pop r15
0x6b04: ret 
0x6b10: rep ret 
