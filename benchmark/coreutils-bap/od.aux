0x1790: sub rsp,0x8
0x1794: mov rax,qword ptr [rip+0x20e845]
0x179b: test rax,rax
0x179e: je 0x17a2
0x17a0: call rax
0x17a2: add rsp,0x8
0x17a6: ret 
0x17b6: jmp qword ptr [rip+0x20e63c]
0x17c0: jmp qword ptr [rip+0x20e63a]
0x17d0: jmp qword ptr [rip+0x20e632]
0x1800: jmp qword ptr [rip+0x20e61a]
0x1810: jmp qword ptr [rip+0x20e612]
0x1820: jmp qword ptr [rip+0x20e60a]
0x1830: jmp qword ptr [rip+0x20e602]
0x1840: jmp qword ptr [rip+0x20e5fa]
0x1850: jmp qword ptr [rip+0x20e5f2]
0x1860: jmp qword ptr [rip+0x20e5ea]
0x1870: jmp qword ptr [rip+0x20e5e2]
0x1890: jmp qword ptr [rip+0x20e5d2]
0x18d0: jmp qword ptr [rip+0x20e5b2]
0x18e0: jmp qword ptr [rip+0x20e5aa]
0x1900: jmp qword ptr [rip+0x20e59a]
0x1920: jmp qword ptr [rip+0x20e58a]
0x1940: jmp qword ptr [rip+0x20e57a]
0x1970: jmp qword ptr [rip+0x20e562]
0x1990: jmp qword ptr [rip+0x20e552]
0x19a0: jmp qword ptr [rip+0x20e54a]
0x19b0: jmp qword ptr [rip+0x20e542]
0x19c0: jmp qword ptr [rip+0x20e53a]
0x19d0: jmp qword ptr [rip+0x20e532]
0x19e0: jmp qword ptr [rip+0x20e52a]
0x19f0: jmp qword ptr [rip+0x20e522]
0x1a00: jmp qword ptr [rip+0x20e51a]
0x1a10: jmp qword ptr [rip+0x20e512]
0x1a20: jmp qword ptr [rip+0x20e50a]
0x1a30: jmp qword ptr [rip+0x20e502]
0x1a40: jmp qword ptr [rip+0x20e4fa]
0x1a70: jmp qword ptr [rip+0x20e4e2]
0x1a80: jmp qword ptr [rip+0x20e4da]
0x1a90: jmp qword ptr [rip+0x20e4d2]
0x1ab0: jmp qword ptr [rip+0x20e4c2]
0x1ac0: jmp qword ptr [rip+0x20e4ba]
0x1ad0: jmp qword ptr [rip+0x20e4b2]
0x1b20: jmp qword ptr [rip+0x20e48a]
0x1b30: jmp qword ptr [rip+0x20e482]
0x1b50: jmp qword ptr [rip+0x20e472]
0x1b60: jmp qword ptr [rip+0x20e48a]
0x1de0: mov edi,0x1
0x1de5: jmp 0x1cd0
0x2112: cmp qword ptr [rip+0x20e0b6],0x0
0x211a: jne 0x2d02
0x213a: test dl,dl
0x213c: jne 0x26b5
0x21aa: test r14d,r14d
0x21ad: jle 0x2650
0x21b3: movsxd rax,dword ptr [rip+0x20defe]
0x21ba: lea rax,[r13+rax*8]
0x21bf: mov qword ptr [rip+0x20dfea],rax
0x21c6: call 0x45e0
0x21cb: cmp qword ptr [rip+0x20dfd5],0x0
0x21d3: mov r13d,eax
0x21d6: je 0x2412
0x21dc: mov rdi,qword ptr [rip+0x20e015]
0x21e3: call 0x4700
0x21e8: and r13d,eax
0x21eb: cmp qword ptr [rip+0x20dfb5],0x0
0x21f3: je 0x2412
0x21f9: xor eax,eax
0x21fb: cmp byte ptr [rip+0x20e00e],0x0
0x2202: jne 0x2700
0x2208: mov r9,qword ptr [rip+0x20dfc1]
0x220f: mov r10,qword ptr [rip+0x20dfc2]
0x2216: lea r11,[rip+0xa3c3]
0x221d: mov qword ptr [rip+0x20dfe4],rax
0x2224: xor edi,edi
0x2226: mov r8d,0x1
0x222c: cmp rdi,r9
0x222f: je 0x24e2
0x2235: imul rax,rdi,0x28
0x2239: movsxd r8,r8d
0x223c: mov eax,dword ptr [r10+rax+0x4]
0x2241: movsxd rsi,dword ptr [r11+rax*4]
0x2245: mov rax,r8
0x2248: mov rcx,rsi
0x224b: jmp 0x2253
0x2250: mov rcx,rdx
0x2253: xor edx,edx
0x2255: div rcx
0x2258: mov rax,rcx
0x225b: test rdx,rdx
0x225e: jne 0x2250
0x2260: mov rax,rsi
0x2263: xor edx,edx
0x2265: add rdi,0x1
0x2269: div rcx
0x226c: imul r8d,eax
0x2270: jmp 0x222c
0x22d6: mov eax,0x1
0x22db: mov rbx,qword ptr [rsp+0x48]
0x22e0: xor rbx,qword ptr fs:0x28
0x22e9: jne 0x2cb7
0x22ef: add rsp,0x58
0x22f3: pop rbx
0x22f4: pop rbp
0x22f5: pop r12
0x22f7: pop r13
0x22f9: pop r14
0x22fb: pop r15
0x22fd: ret 
0x22fe: mov eax,0x2
0x2303: xor ecx,ecx
0x2305: mul rdi
0x2308: jo 0x2c6f
0x230e: test rax,rax
0x2311: js 0x2c6a
0x2317: test rcx,rcx
0x231a: jne 0x2c6a
0x2320: add rdi,rdi
0x2323: call 0x7e60
0x2328: movzx ebx,byte ptr [rip+0x20dec1]
0x232f: mov rdi,qword ptr [rip+0x20de8a]
0x2336: mov qword ptr [rsp+0x30],rax
0x233b: mov r14,qword ptr [rip+0x20deb6]
0x2342: add rax,rdi
0x2345: test bl,bl
0x2347: mov qword ptr [rsp+0x38],rax
0x234c: je 0x28d0
0x2352: lea r12,[rsp+0x28]
0x2357: mov byte ptr [rsp],r13b
0x235b: jmp 0x23bb
0x235d: movzx edx,bpl
0x2361: mov rdi,qword ptr [rip+0x20de58]
0x2368: sub rax,r14
0x236b: mov r13,qword ptr [rsp+rdx*8+0x30]
0x2370: mov r15,rdx
0x2373: mov rdx,r12
0x2376: cmp rax,rdi
0x2379: cmovbe rdi,rax
0x237d: mov rsi,r13
0x2380: call 0x4ca0
0x2385: mov rsi,qword ptr [rsp+0x28]
0x238a: and ebx,eax
0x238c: cmp rsi,qword ptr [rip+0x20de2d]
0x2393: jb 0x2935
0x2399: jne 0x2c79
0x239f: xor ebp,0x1
0x23a2: mov rdi,r14
0x23a5: mov rcx,r13
0x23a8: movzx eax,bpl
0x23ac: mov rdx,qword ptr [rsp+rax*8+0x30]
0x23b1: call 0x4940
0x23b6: add r14,qword ptr [rsp+0x28]
0x23bb: mov rax,qword ptr [rip+0x20de1e]
0x23c2: cmp rax,r14
0x23c5: ja 0x235d
0x23c7: movzx r13d,byte ptr [rsp]
0x23cc: mov qword ptr [rsp+0x28],0x0
0x23d5: mov esi,0xa
0x23da: mov rdi,r14
0x23dd: call qword ptr [rip+0x20de1d]
0x23e3: cmp byte ptr [rip+0x20de06],0x0
0x23ea: je 0x23fe
0x23ec: cmp r14,qword ptr [rip+0x20dded]
0x23f3: jb 0x23fe
0x23f5: xor edi,edi
0x23f7: call 0x4490
0x23fc: and ebx,eax
0x23fe: mov rdi,qword ptr [rsp+0x30]
0x2403: movzx ebx,bl
0x2406: call 0x17d0
0x240b: and r13d,ebx
0x240e: and r13d,0x1
0x2412: cmp byte ptr [rip+0x20dd8b],0x0
0x2419: jne 0x2674
0x241f: xor r13d,0x1
0x2423: movzx eax,r13b
0x2427: jmp 0x22db
0x2489: lea rsi,[rip+0x8a25]
0x2490: mov rbx,rax
0x2493: mov edx,0x5
0x2498: xor edi,edi
0x249a: call 0x18b0
0x249f: mov rcx,rbx
0x24a2: mov rdx,rax
0x24a5: xor esi,esi
0x24a7: xor edi,edi
0x24a9: xor eax,eax
0x24ab: call 0x1aa0
0x24b0: lea rsi,[rip+0x9a61]
0x24b7: mov edx,0x5
0x24bc: xor edi,edi
0x24be: call 0x18b0
0x24c3: lea rdx,[rip+0xa316]
0x24ca: mov rcx,rax
0x24cd: xor esi,esi
0x24cf: xor edi,edi
0x24d1: xor eax,eax
0x24d3: call 0x1aa0
0x24e2: cmp byte ptr [rsp],0x0
0x24e6: jne 0x2788
0x24ec: cmp r8d,0xf
0x24f0: jg 0x2a5f
0x24f6: mov eax,0x10
0x24fb: cltd 
0x24fc: idiv r8d
0x24ff: imul eax,r8d
0x2503: cltq 
0x2505: mov qword ptr [rip+0x20dcb4],rax
0x250c: imul r9,r9,0x28
0x2510: lea rcx,[r10+0x4]
0x2514: mov rdi,qword ptr [rip+0x20dca5]
0x251b: xor r8d,r8d
0x251e: mov rsi,rcx
0x2521: lea r9,[r10+r9+0x4]
0x2526: lea r10,[rip+0xa0b3]
0x252d: jmp 0x2553
0x252f: mov eax,dword ptr [rsi]
0x2531: xor edx,edx
0x2533: movsxd r11,dword ptr [r10+rax*4]
0x2537: mov rax,rdi
0x253a: div r11
0x253d: mov edx,dword ptr [rsi+0x18]
0x2540: add edx,0x1
0x2543: imul eax,edx
0x2546: cltq 
0x2548: cmp r8,rax
0x254b: cmovb r8,rax
0x254f: add rsi,0x28
0x2553: cmp r9,rsi
0x2556: jne 0x252f
0x2558: lea r10,[rip+0xa081]
0x255f: jmp 0x257f
0x2561: mov eax,dword ptr [rcx]
0x2563: xor edx,edx
0x2565: add rcx,0x28
0x2569: movsxd r9,dword ptr [r10+rax*4]
0x256d: mov rax,rdi
0x2570: div r9
0x2573: mov edx,r8d
0x2576: imul eax,dword ptr [rcx-0x10]
0x257a: sub edx,eax
0x257c: mov dword ptr [rcx-0xc],edx
0x257f: cmp rsi,rcx
0x2582: jne 0x2561
0x2584: movzx ebp,byte ptr [rip+0x20dc87]
0x258b: test bpl,bpl
0x258e: je 0x22fe
0x2594: cmp qword ptr [rip+0x20dc7c],0x64
0x259c: mov edi,0x64
0x25a1: cmovae rdi,qword ptr [rip+0x20dc6f]
0x25a9: mov qword ptr [rsp+0x28],rdi
0x25ae: call 0x7e60
0x25b3: mov r14,qword ptr [rip+0x20dc3e]
0x25ba: mov qword ptr [rsp],rax
0x25be: lea rax,[rsp+0x28]
0x25c3: mov byte ptr [rsp+0x8],r13b
0x25c8: mov qword ptr [rsp+0x10],rax
0x25cd: cmp byte ptr [rip+0x20dc1c],0x0
0x25d4: je 0x25f9
0x25d6: mov rdx,qword ptr [rip+0x20dc3b]
0x25dd: mov rax,qword ptr [rip+0x20dbfc]
0x25e4: cmp rax,rdx
0x25e7: jb 0x2ba2
0x25ed: sub rax,rdx
0x25f0: cmp rax,r14
0x25f3: jbe 0x2ba2
0x25f9: mov r13,qword ptr [rsp]
0x25fd: mov r12,r14
0x2600: sub r13,r14
0x2603: jmp 0x263c
0x2605: mov rdi,rbx
0x2608: add r12,0x1
0x260c: call 0x48e0
0x2611: mov r15d,dword ptr [rsp+0x20]
0x2616: and ebp,eax
0x2618: test r15d,r15d
0x261b: js 0x2843
0x2621: call 0x1b40
0x2626: mov rsi,qword ptr [rax]
0x2629: movsxd rcx,r15d
0x262c: test byte ptr [rsi+rcx*2+0x1],0x40
0x2631: je 0x2818
0x2637: mov byte ptr [r13+r12-0x1],r15b
0x263c: mov rax,r12
0x263f: sub rax,r14
0x2642: cmp qword ptr [rip+0x20dbcf],rax
0x2649: ja 0x2605
0x264b: jmp 0x2763
0x2650: lea rax,[rip+0x20d529]
0x2657: mov qword ptr [rip+0x20db52],rax
0x265e: jmp 0x21c6
0x266f: jmp 0x21aa
0x2674: mov rdi,qword ptr [rip+0x20da35]
0x267b: call 0x8800
0x2680: add eax,0x1
0x2683: jne 0x241f
0x2689: lea rsi,[rip+0x86fa]
0x2690: mov edx,0x5
0x2695: xor edi,edi
0x2697: call 0x18b0
0x269c: mov rbx,rax
0x269f: call 0x17f0
0x26a4: mov esi,dword ptr [rax]
0x26a6: mov rdx,rbx
0x26a9: mov edi,0x1
0x26ae: xor eax,eax
0x26b0: call 0x1aa0
0x26b5: cmp r14d,0x2
0x26b9: je 0x2820
0x26bf: cmp r14d,0x3
0x26c3: je 0x27b6
0x26c9: cmp r14d,0x1
0x26cd: jne 0x246d
0x2700: mov rax,qword ptr [rsp+0x18]
0x2705: sub rax,qword ptr [rip+0x20daec]
0x270c: jmp 0x2208
0x2711: mov rsi,qword ptr [rsp+0x10]
0x2716: mov rdi,qword ptr [rsp]
0x271a: call 0x7fc0
0x271f: mov qword ptr [rsp],rax
0x2723: mov rdi,rbx
0x2726: add r12,0x1
0x272a: call 0x48e0
0x272f: mov r15d,dword ptr [rsp+0x20]
0x2734: and ebp,eax
0x2736: test r15d,r15d
0x2739: js 0x2843
0x273f: je 0x2a79
0x2745: call 0x1b40
0x274a: mov rsi,qword ptr [rax]
0x274d: movsxd rdx,r15d
0x2750: test byte ptr [rsi+rdx*2+0x1],0x40
0x2755: je 0x2818
0x275b: mov rax,qword ptr [rsp]
0x275f: mov byte ptr [rax+r13],r15b
0x2763: mov r13,r12
0x2766: sub r13,r14
0x2769: cmp byte ptr [rip+0x20da80],0x0
0x2770: je 0x277f
0x2772: cmp r12,qword ptr [rip+0x20da67]
0x2779: jae 0x2a79
0x277f: cmp r13,qword ptr [rsp+0x28]
0x2784: jne 0x2723
0x2786: jmp 0x2711
0x2788: mov rsi,qword ptr [rsp+0x10]
0x278d: movsxd rbp,r8d
0x2790: test rsi,rsi
0x2793: mov rax,rsi
0x2796: je 0x29c6
0x279c: xor edx,edx
0x279e: div rbp
0x27a1: test rdx,rdx
0x27a4: jne 0x29c6
0x27aa: mov qword ptr [rip+0x20da0f],rsi
0x27b1: jmp 0x250c
0x27ff: mov rax,qword ptr [rcx+0x28]
0x2803: cmp rax,qword ptr [rcx+0x30]
0x2807: jae 0x2c1a
0x280d: lea rdx,[rax+0x1]
0x2811: mov qword ptr [rcx+0x28],rdx
0x2815: mov byte ptr [rax],0xa
0x2818: mov r14,r12
0x281b: jmp 0x25cd
0x2843: mov rdi,qword ptr [rsp]
0x2847: movzx r13d,byte ptr [rsp+0x8]
0x284d: call 0x17d0
0x2852: movzx ebx,bpl
0x2856: jmp 0x240b
0x28a9: lea rax,[rip+0x2340]
0x28b0: mov dword ptr [rip+0x20d96a],0x8
0x28ba: mov dword ptr [rip+0x20d95c],0x7
0x28c4: mov qword ptr [rip+0x20d935],rax
0x28cb: jmp 0x216d
0x28d0: lea rax,[rsp+0x28]
0x28d5: mov ebx,r12d
0x28d8: xor ebp,ebp
0x28da: xor r15d,r15d
0x28dd: mov byte ptr [rsp],r13b
0x28e1: mov r12,rax
0x28e4: jmp 0x2912
0x28e6: jne 0x2c98
0x28ec: xor ebp,0x1
0x28ef: mov rdi,r14
0x28f2: mov rcx,r13
0x28f5: movzx eax,bpl
0x28f9: mov rdx,qword ptr [rsp+rax*8+0x30]
0x28fe: mov r15,rax
0x2901: call 0x4940
0x2906: add r14,qword ptr [rsp+0x28]
0x290b: mov rdi,qword ptr [rip+0x20d8ae]
0x2912: movsxd rax,r15d
0x2915: mov rdx,r12
0x2918: mov r13,qword ptr [rsp+rax*8+0x30]
0x291d: mov rsi,r13
0x2920: call 0x4ca0
0x2925: mov rsi,qword ptr [rsp+0x28]
0x292a: and ebx,eax
0x292c: cmp rsi,qword ptr [rip+0x20d88d]
0x2933: jae 0x28e6
0x2935: test rsi,rsi
0x2938: movzx r13d,byte ptr [rsp]
0x293d: mov r8,rsi
0x2940: je 0x23d5
0x2946: mov r10,qword ptr [rip+0x20d883]
0x294d: mov r12,qword ptr [rip+0x20d884]
0x2954: lea r11,[rip+0x9c85]
0x295b: xor r9d,r9d
0x295e: mov esi,0x1
0x2963: cmp r9,r10
0x2966: movsxd rsi,esi
0x2969: je 0x2a0e
0x296f: imul rax,r9,0x28
0x2973: mov eax,dword ptr [r12+rax+0x4]
0x2978: movsxd rdi,dword ptr [r11+rax*4]
0x297c: mov rax,rsi
0x297f: mov rcx,rdi
0x2982: jmp 0x2987
0x2984: mov rcx,rdx
0x2987: xor edx,edx
0x2989: div rcx
0x298c: mov rax,rcx
0x298f: test rdx,rdx
0x2992: jne 0x2984
0x2994: mov rax,rdi
0x2997: xor edx,edx
0x2999: add r9,0x1
0x299d: div rcx
0x29a0: imul esi,eax
0x29a3: jmp 0x2963
0x29c6: lea rsi,[rip+0x95a3]
0x29cd: mov edx,0x5
0x29d2: xor edi,edi
0x29d4: mov dword ptr [rsp],r8d
0x29d8: call 0x18b0
0x29dd: mov r8d,dword ptr [rsp]
0x29e1: mov rcx,qword ptr [rsp+0x10]
0x29e6: mov rdx,rax
0x29e9: xor esi,esi
0x29eb: xor edi,edi
0x29ed: xor eax,eax
0x29ef: call 0x1aa0
0x29f4: mov qword ptr [rip+0x20d7c5],rbp
0x29fb: mov r9,qword ptr [rip+0x20d7ce]
0x2a02: mov r10,qword ptr [rip+0x20d7cf]
0x2a09: jmp 0x250c
0x2a0e: lea rax,[rsi+r8-0x1]
0x2a13: xor edx,edx
0x2a15: mov r12,qword ptr [rsp+r15*8+0x30]
0x2a1a: mov qword ptr [rsp],r8
0x2a1e: div rsi
0x2a21: lea rdi,[r12+r8]
0x2a25: imul rax,rsi
0x2a29: xor esi,esi
0x2a2b: sub rax,r8
0x2a2e: mov rdx,rax
0x2a31: call 0x1980
0x2a36: mov eax,ebp
0x2a38: mov r8,qword ptr [rsp]
0x2a3c: mov rdi,r14
0x2a3f: xor eax,0x1
0x2a42: mov rcx,r12
0x2a45: movzx eax,al
0x2a48: mov rdx,qword ptr [rsp+rax*8+0x30]
0x2a4d: mov rsi,r8
0x2a50: call 0x4940
0x2a55: add r14,qword ptr [rsp+0x28]
0x2a5a: jmp 0x23d5
0x2a5f: movsxd r8,r8d
0x2a62: mov qword ptr [rip+0x20d757],r8
0x2a69: jmp 0x250c
0x2a79: mov r15,qword ptr [rsp]
0x2a7d: mov rdi,r13
0x2a80: mov esi,0x20
0x2a85: not rdi
0x2a88: add rdi,r12
0x2a8b: mov byte ptr [r15+r13],0x0
0x2a90: mov r13,r15
0x2a93: call qword ptr [rip+0x20d767]
0x2a99: movzx eax,byte ptr [r13]
0x2a9e: mov rcx,qword ptr [rip+0x20d603]
0x2aa5: movsx edx,al
0x2aa8: test edx,edx
0x2aaa: mov dword ptr [rsp+0x20],edx
0x2aae: je 0x27ff
0x2ab4: lea edx,[rax-0x7]
0x2ab7: cmp dl,0x6
0x2aba: ja 0x2b43
0x2ac0: lea rsi,[rip+0x99bd]
0x2ac7: movzx edx,dl
0x2aca: movsxd rax,dword ptr [rsi+rdx*4]
0x2ace: mov edx,0x2
0x2ad3: add rax,rsi
0x2ad6: mov esi,0x1
0x2adb: jmp rax
0x2ae9: add r13,0x1
0x2aed: jmp 0x2a99
0x2b43: mov rdx,qword ptr [rcx+0x28]
0x2b47: cmp rdx,qword ptr [rcx+0x30]
0x2b4b: jae 0x2c2c
0x2b51: lea rsi,[rdx+0x1]
0x2b55: mov qword ptr [rcx+0x28],rsi
0x2b59: mov byte ptr [rdx],al
0x2b5b: jmp 0x2ae9
0x2ba2: mov rdi,qword ptr [rsp]
0x2ba6: movzx r13d,byte ptr [rsp+0x8]
0x2bac: call 0x17d0
0x2bb1: xor edi,edi
0x2bb3: call 0x4490
0x2bb8: and ebp,eax
0x2bba: jmp 0x2852
0x2c1a: mov esi,0xa
0x2c1f: mov rdi,rcx
0x2c22: call 0x1920
0x2c27: jmp 0x2818
0x2c2c: movzx esi,al
0x2c2f: mov rdi,rcx
0x2c32: call 0x1920
0x2c37: jmp 0x2ae9
0x2c6a: call 0x80b0
0x2c6f: mov ecx,0x1
0x2c74: jmp 0x230e
0x2c79: lea rcx,[rip+0x982b]
0x2c80: lea rsi,[rip+0x8065]
0x2c87: lea rdi,[rip+0x9312]
0x2c8e: mov edx,0x576
0x2c93: call 0x1950
0x2c98: lea rcx,[rip+0x980c]
0x2c9f: lea rsi,[rip+0x8046]
0x2ca6: lea rdi,[rip+0x92f3]
0x2cad: mov edx,0x584
0x2cb2: call 0x1950
0x2cb7: call 0x18e0
0x2cbc: lea rsi,[rip+0x91dd]
0x2cc3: mov edx,0x5
0x2cc8: xor edi,edi
0x2cca: call 0x18b0
0x2ccf: movsx ecx,r15b
0x2cd3: mov rdx,rax
0x2cd6: xor esi,esi
0x2cd8: mov edi,0x1
0x2cdd: xor eax,eax
0x2cdf: call 0x1aa0
0x2ce4: mov r8,qword ptr [rip+0x20d3d5]
0x2ceb: mov esi,dword ptr [rsp+0x20]
0x2cef: lea rcx,[rip+0x20ccea]
0x2cf6: mov edx,0x77
0x2cfb: mov edi,eax
0x2cfd: call 0x8330
0x2d02: lea rsi,[rip+0x91df]
0x2d09: mov edx,0x5
0x2d0e: xor edi,edi
0x2d10: call 0x18b0
0x2d15: xor esi,esi
0x2d17: mov rdx,rax
0x2d1a: mov edi,0x1
0x2d1f: xor eax,eax
0x2d21: call 0x1aa0
0x2d26: mov r8,qword ptr [rip+0x20d393]
0x2d2d: mov esi,dword ptr [rsp+0x20]
0x2d31: lea rcx,[rip+0x20cca8]
0x2d38: mov edx,0x6a
0x2d3d: mov edi,eax
0x2d3f: call 0x8330
0x2d44: mov r8,qword ptr [rip+0x20d375]
0x2d4b: mov esi,dword ptr [rsp+0x20]
0x2d4f: lea rcx,[rip+0x20cc8a]
0x2d56: mov edx,0x53
0x2d5b: mov edi,eax
0x2d5d: call 0x8330
0x2d62: nop word ptr cs:[rax+rax]
0x2d6c: nop dword ptr [rax]
0x2d9a: hlt 
0x2d9b: nop dword ptr [rax+rax]
0x2da0: lea rdi,[rip+0x20d2f9]
0x2da7: push rbp
0x2da8: lea rax,[rip+0x20d2f1]
0x2daf: cmp rax,rdi
0x2db2: mov rbp,rsp
0x2db5: je 0x2dd0
0x2db7: mov rax,qword ptr [rip+0x20d212]
0x2dbe: test rax,rax
0x2dc1: je 0x2dd0
0x2dc3: pop rbp
0x2dc4: jmp rax
0x2dd0: pop rbp
0x2dd1: ret 
0x2de0: lea rdi,[rip+0x20d2b9]
0x2de7: lea rsi,[rip+0x20d2b2]
0x2dee: push rbp
0x2def: sub rsi,rdi
0x2df2: mov rbp,rsp
0x2df5: sar rsi,0x3
0x2df9: mov rax,rsi
0x2dfc: shr rax,0x3f
0x2e00: add rsi,rax
0x2e03: sar rsi, 1
0x2e06: je 0x2e20
0x2e08: mov rax,qword ptr [rip+0x20d1d9]
0x2e0f: test rax,rax
0x2e12: je 0x2e20
0x2e14: pop rbp
0x2e15: jmp rax
0x2e20: pop rbp
0x2e21: ret 
0x2e41: push rbp
0x2e42: mov rbp,rsp
0x2e45: je 0x2e53
0x2e47: mov rdi,qword ptr [rip+0x20d1ba]
0x2e4e: call 0x1b60
0x2e53: call 0x2da0
0x2e58: mov byte ptr [rip+0x20d289],0x1
0x2e5f: pop rbp
0x2e60: ret 
0x2e70: push rbp
0x2e71: mov rbp,rsp
0x2e74: pop rbp
0x2e75: jmp 0x2de0
0x2e80: rep ret 
0x2e90: sub rsp,0x38
0x2e94: mov rcx,rdi
0x2e97: mov rax,qword ptr fs:0x28
0x2ea0: mov qword ptr [rsp+0x28],rax
0x2ea5: xor eax,eax
0x2ea7: movsxd rax,dword ptr [rip+0x20d372]
0x2eae: lea rdi,[rsp+0x17]
0x2eb3: mov byte ptr [rsp+0x17],sil
0x2eb8: mov byte ptr [rsp+0x18],0x0
0x2ebd: mov rsi,rdi
0x2ec0: sub rsi,rax
0x2ec3: mov eax,dword ptr [rip+0x20d35b]
0x2ec9: cmp eax,0xa
0x2ecc: je 0x2f40
0x2ece: cmp eax,0x10
0x2ed1: je 0x2f80
0x2ed7: cmp eax,0x8
0x2eda: je 0x2f20
0x2edc: cmp rsi,rdi
0x2edf: mov rax,rdi
0x2ee2: jae 0x2ef7
0x2ee4: nop dword ptr [rax]
0x2ee8: sub rax,0x1
0x2eec: mov byte ptr [rax],0x30
0x2eef: cmp rsi,rax
0x2ef2: jne 0x2ee8
0x2ef4: mov rdi,rsi
0x2ef7: mov rsi,qword ptr [rip+0x20d1aa]
0x2efe: call 0x19b0
0x2f03: mov rax,qword ptr [rsp+0x28]
0x2f08: xor rax,qword ptr fs:0x28
0x2f11: jne 0x2fae
0x2f17: add rsp,0x38
0x2f1b: ret 
0x2f20: mov eax,ecx
0x2f22: shr rcx,0x3
0x2f26: sub rdi,0x1
0x2f2a: and eax,0x7
0x2f2d: add eax,0x30
0x2f30: test rcx,rcx
0x2f33: mov byte ptr [rdi],al
0x2f35: jne 0x2f20
0x2f37: jmp 0x2edc
0x2f40: movabsq r8,-0x3333333333333333
0x2f4a: nop word ptr [rax+rax]
0x2f50: mov rax,rcx
0x2f53: sub rdi,0x1
0x2f57: mul r8
0x2f5a: shr rdx,0x3
0x2f5e: lea rax,[rdx+rdx*4]
0x2f62: add rax,rax
0x2f65: sub rcx,rax
0x2f68: add ecx,0x30
0x2f6b: test rdx,rdx
0x2f6e: mov byte ptr [rdi],cl
0x2f70: mov rcx,rdx
0x2f73: jne 0x2f50
0x2f75: jmp 0x2edc
0x2f80: lea rdx,[rip+0x7d3d]
0x2f87: nop word ptr [rax+rax]
0x2f90: mov rax,rcx
0x2f93: shr rcx,0x4
0x2f97: sub rdi,0x1
0x2f9b: and eax,0xf
0x2f9e: test rcx,rcx
0x2fa1: movzx eax,byte ptr [rdx+rax]
0x2fa5: mov byte ptr [rdi],al
0x2fa7: jne 0x2f90
0x2fa9: jmp 0x2edc
0x2fae: call 0x18e0
0x2fb3: nop dword ptr [rax]
0x2fb6: nop word ptr cs:[rax+rax]
0x3040: push r15
0x3042: push r14
0x3044: push r13
0x3046: push r12
0x3048: push rbp
0x3049: push rbx
0x304a: sub rsp,0x28
0x304e: mov rax,qword ptr fs:0x28
0x3057: mov qword ptr [rsp+0x18],rax
0x305c: xor eax,eax
0x305e: cmp rdi,rsi
0x3061: jbe 0x3108
0x3067: mov r13d,r8d
0x306a: mov rbp,rdi
0x306d: lea r8,[rdi-0x1]
0x3071: movsxd r12,r9d
0x3074: sub rbp,rsi
0x3077: mov rbx,rdi
0x307a: lea rax,[rdx+rbp]
0x307e: mov r14,rdx
0x3081: imul r8,r12
0x3085: mov qword ptr [rsp],rax
0x3089: lea rax,[rsp+0x16]
0x308e: mov qword ptr [rsp+0x8],rax
0x3093: mov r15,r8
0x3096: jmp 0x30cf
0x30a0: lea rcx,[rip+0x9499]
0x30a7: movzx eax,al
0x30aa: lea rdx,[rcx+rax*4]
0x30ae: sub r9d,ebp
0x30b1: lea rdi,[rip+0x7c24]
0x30b8: xor eax,eax
0x30ba: lea esi,[r9+r13]
0x30be: sub r15,r12
0x30c1: call 0x8150
0x30c6: cmp r14,qword ptr [rsp]
0x30ca: mov r9d,ebp
0x30cd: je 0x3108
0x30cf: xor edx,edx
0x30d1: mov rax,r15
0x30d4: add r14,0x1
0x30d8: div rbx
0x30db: lea rdx,[rip+0x7bf6]
0x30e2: mov rbp,rax
0x30e5: movzx eax,byte ptr [r14-0x1]
0x30ea: and eax,0x7f
0x30ed: cmp al,0x7f
0x30ef: je 0x30ae
0x30f1: cmp al,0x20
0x30f3: jbe 0x30a0
0x30f5: mov byte ptr [rsp+0x16],al
0x30f9: mov byte ptr [rsp+0x17],0x0
0x30fe: mov rdx,qword ptr [rsp+0x8]
0x3103: jmp 0x30ae
0x3108: mov rax,qword ptr [rsp+0x18]
0x310d: xor rax,qword ptr fs:0x28
0x3116: jne 0x3127
0x3118: add rsp,0x28
0x311c: pop rbx
0x311d: pop rbp
0x311e: pop r12
0x3120: pop r13
0x3122: pop r14
0x3124: pop r15
0x3126: ret 
0x3127: call 0x18e0
0x312c: nop dword ptr [rax]
0x3130: push r15
0x3132: push r14
0x3134: push r13
0x3136: push r12
0x3138: push rbp
0x3139: push rbx
0x313a: sub rsp,0x38
0x313e: mov rax,qword ptr fs:0x28
0x3147: mov qword ptr [rsp+0x28],rax
0x314c: xor eax,eax
0x314e: cmp rdi,rsi
0x3151: mov qword ptr [rsp+0x8],rcx
0x3156: mov dword ptr [rsp+0x14],r8d
0x315b: jbe 0x3200
0x3161: lea rcx,[rdi-0x1]
0x3165: movsxd rax,r9d
0x3168: mov rbx,rdi
0x316b: mov rbp,rsi
0x316e: mov r15,rdx
0x3171: mov qword ptr [rsp+0x18],rax
0x3176: imul rcx,rax
0x317a: mov r13,rdi
0x317d: mov r14,rcx
0x3180: jmp 0x31a8
0x3188: mov rdx,qword ptr [r15]
0x318b: mov rdi,qword ptr [rsp+0x8]
0x3190: xor eax,eax
0x3192: add r15,0x8
0x3196: call 0x8150
0x319b: sub r14,qword ptr [rsp+0x18]
0x31a0: cmp r13,rbp
0x31a3: mov r9d,r12d
0x31a6: je 0x3200
0x31a8: xor edx,edx
0x31aa: mov rax,r14
0x31ad: sub r13,0x1
0x31b1: div rbx
0x31b4: sub r9d,eax
0x31b7: cmp byte ptr [rip+0x20cf43],0x0
0x31be: mov r12,rax
0x31c1: mov eax,dword ptr [rsp+0x14]
0x31c5: lea esi,[r9+rax]
0x31c9: je 0x3188
0x31cb: lea rdx,[r15+0x7]
0x31cf: lea r9,[rsp+0x20]
0x31d4: xor eax,eax
0x31d6: nop word ptr cs:[rax+rax]
0x31e0: movzx edi,byte ptr [rdx]
0x31e3: sub rdx,0x1
0x31e7: mov byte ptr [r9+rax],dil
0x31eb: add rax,0x1
0x31ef: cmp rax,0x8
0x31f3: jne 0x31e0
0x31f5: mov rdx,qword ptr [rsp+0x20]
0x31fa: jmp 0x318b
0x3200: mov rax,qword ptr [rsp+0x28]
0x3205: xor rax,qword ptr fs:0x28
0x320e: jne 0x321f
0x3210: add rsp,0x38
0x3214: pop rbx
0x3215: pop rbp
0x3216: pop r12
0x3218: pop r13
0x321a: pop r14
0x321c: pop r15
0x321e: ret 
0x321f: call 0x18e0
0x3224: nop 
0x3226: nop word ptr cs:[rax+rax]
0x3230: push r15
0x3232: push r14
0x3234: push r13
0x3236: push r12
0x3238: push rbp
0x3239: push rbx
0x323a: sub rsp,0x38
0x323e: mov rax,qword ptr fs:0x28
0x3247: mov qword ptr [rsp+0x28],rax
0x324c: xor eax,eax
0x324e: cmp rdi,rsi
0x3251: mov qword ptr [rsp+0x8],rcx
0x3256: mov dword ptr [rsp+0x14],r8d
0x325b: jbe 0x3300
0x3261: lea rcx,[rdi-0x1]
0x3265: movsxd rax,r9d
0x3268: mov rbx,rdi
0x326b: mov rbp,rsi
0x326e: mov r15,rdx
0x3271: mov qword ptr [rsp+0x18],rax
0x3276: imul rcx,rax
0x327a: mov r13,rdi
0x327d: mov r14,rcx
0x3280: jmp 0x32a8
0x3288: mov rdx,qword ptr [r15]
0x328b: mov rdi,qword ptr [rsp+0x8]
0x3290: xor eax,eax
0x3292: add r15,0x8
0x3296: call 0x8150
0x329b: sub r14,qword ptr [rsp+0x18]
0x32a0: cmp r13,rbp
0x32a3: mov r9d,r12d
0x32a6: je 0x3300
0x32a8: xor edx,edx
0x32aa: mov rax,r14
0x32ad: sub r13,0x1
0x32b1: div rbx
0x32b4: sub r9d,eax
0x32b7: cmp byte ptr [rip+0x20ce43],0x0
0x32be: mov r12,rax
0x32c1: mov eax,dword ptr [rsp+0x14]
0x32c5: lea esi,[r9+rax]
0x32c9: je 0x3288
0x32cb: lea rdx,[r15+0x7]
0x32cf: lea r9,[rsp+0x20]
0x32d4: xor eax,eax
0x32d6: nop word ptr cs:[rax+rax]
0x32e0: movzx edi,byte ptr [rdx]
0x32e3: sub rdx,0x1
0x32e7: mov byte ptr [r9+rax],dil
0x32eb: add rax,0x1
0x32ef: cmp rax,0x8
0x32f3: jne 0x32e0
0x32f5: mov rdx,qword ptr [rsp+0x20]
0x32fa: jmp 0x328b
0x3300: mov rax,qword ptr [rsp+0x28]
0x3305: xor rax,qword ptr fs:0x28
0x330e: jne 0x331f
0x3310: add rsp,0x38
0x3314: pop rbx
0x3315: pop rbp
0x3316: pop r12
0x3318: pop r13
0x331a: pop r14
0x331c: pop r15
0x331e: ret 
0x331f: call 0x18e0
0x3324: nop 
0x3326: nop word ptr cs:[rax+rax]
0x3330: push r15
0x3332: push r14
0x3334: push r13
0x3336: push r12
0x3338: push rbp
0x3339: push rbx
0x333a: mov rbx,rdi
0x333d: sub rsp,0x38
0x3341: mov rdi,qword ptr fs:0x28
0x334a: mov qword ptr [rsp+0x28],rdi
0x334f: xor edi,edi
0x3351: cmp rbx,rsi
0x3354: mov qword ptr [rsp],rsi
0x3358: mov qword ptr [rsp+0x8],rcx
0x335d: mov dword ptr [rsp+0x14],r8d
0x3362: jbe 0x3400
0x3368: lea rcx,[rbx-0x1]
0x336c: movsxd rax,r9d
0x336f: mov r15,rdx
0x3372: mov qword ptr [rsp+0x18],rax
0x3377: mov r13,rbx
0x337a: imul rcx,rax
0x337e: mov r14,rcx
0x3381: jmp 0x33a9
0x3388: mov edx,dword ptr [r15]
0x338b: mov rdi,qword ptr [rsp+0x8]
0x3390: xor eax,eax
0x3392: add r15,0x4
0x3396: call 0x8150
0x339b: sub r14,qword ptr [rsp+0x18]
0x33a0: cmp r13,qword ptr [rsp]
0x33a4: mov r9d,ebp
0x33a7: je 0x3400
0x33a9: xor edx,edx
0x33ab: mov rax,r14
0x33ae: sub r13,0x1
0x33b2: div rbx
0x33b5: sub r9d,eax
0x33b8: cmp byte ptr [rip+0x20cd42],0x0
0x33bf: mov rbp,rax
0x33c2: mov eax,dword ptr [rsp+0x14]
0x33c6: lea esi,[r9+rax]
0x33ca: je 0x3388
0x33cc: mov r12b,byte ptr [r15+0x3]
0x33d0: movzx ecx,byte ptr [r15+0x2]
0x33d5: movzx edx,byte ptr [r15+0x1]
0x33da: mov eax,r12d
0x33dd: mov ah,cl
0x33df: movzx r10d,ax
0x33e3: movzx eax,byte ptr [r15]
0x33e7: shl edx,0x10
0x33ea: or r10d,edx
0x33ed: shl eax,0x18
0x33f0: or r10d,eax
0x33f3: mov r12d,r10d
0x33f6: mov edx,r10d
0x33f9: jmp 0x338b
0x3400: mov rax,qword ptr [rsp+0x28]
0x3405: xor rax,qword ptr fs:0x28
0x340e: jne 0x341f
0x3410: add rsp,0x38
0x3414: pop rbx
0x3415: pop rbp
0x3416: pop r12
0x3418: pop r13
0x341a: pop r14
0x341c: pop r15
0x341e: ret 
0x341f: call 0x18e0
0x3424: nop 
0x3426: nop word ptr cs:[rax+rax]
0x3430: push r15
0x3432: push r14
0x3434: push r13
0x3436: push r12
0x3438: push rbp
0x3439: push rbx
0x343a: sub rsp,0x38
0x343e: mov rax,qword ptr fs:0x28
0x3447: mov qword ptr [rsp+0x28],rax
0x344c: xor eax,eax
0x344e: cmp rdi,rsi
0x3451: mov qword ptr [rsp],rcx
0x3455: mov dword ptr [rsp+0xc],r8d
0x345a: jbe 0x34f0
0x3460: lea r8,[rdi-0x1]
0x3464: movsxd rax,r9d
0x3467: mov rbx,rdi
0x346a: mov qword ptr [rsp+0x18],rax
0x346f: mov rbp,rdx
0x3472: xor r15d,r15d
0x3475: imul r8,rax
0x3479: mov rax,rdi
0x347c: sub rax,rsi
0x347f: mov qword ptr [rsp+0x10],rax
0x3484: mov r13,r8
0x3487: jmp 0x34b4
0x3490: movzx edx,word ptr [rbp+r15*2]
0x3496: mov rdi,qword ptr [rsp]
0x349a: xor eax,eax
0x349c: add r15,0x1
0x34a0: call 0x8150
0x34a5: sub r13,qword ptr [rsp+0x18]
0x34aa: cmp qword ptr [rsp+0x10],r15
0x34af: mov r9d,r12d
0x34b2: je 0x34f0
0x34b4: xor edx,edx
0x34b6: mov rax,r13
0x34b9: div rbx
0x34bc: sub r9d,eax
0x34bf: cmp byte ptr [rip+0x20cc3b],0x0
0x34c6: mov r12,rax
0x34c9: mov eax,dword ptr [rsp+0xc]
0x34cd: lea esi,[r9+rax]
0x34d1: je 0x3490
0x34d3: mov r14b,byte ptr [rbp+r15*2+0x1]
0x34d8: movzx eax,byte ptr [rbp+r15*2]
0x34de: mov ecx,r14d
0x34e1: mov ch,al
0x34e3: mov r14d,ecx
0x34e6: movzx edx,cx
0x34e9: jmp 0x3496
0x34f0: mov rax,qword ptr [rsp+0x28]
0x34f5: xor rax,qword ptr fs:0x28
0x34fe: jne 0x350f
0x3500: add rsp,0x38
0x3504: pop rbx
0x3505: pop rbp
0x3506: pop r12
0x3508: pop r13
0x350a: pop r14
0x350c: pop r15
0x350e: ret 
0x350f: call 0x18e0
0x3514: nop 
0x3516: nop word ptr cs:[rax+rax]
0x3520: push r15
0x3522: push r14
0x3524: push r13
0x3526: push r12
0x3528: push rbp
0x3529: push rbx
0x352a: sub rsp,0x38
0x352e: mov rax,qword ptr fs:0x28
0x3537: mov qword ptr [rsp+0x28],rax
0x353c: xor eax,eax
0x353e: cmp rdi,rsi
0x3541: mov qword ptr [rsp],rcx
0x3545: mov dword ptr [rsp+0xc],r8d
0x354a: jbe 0x35e0
0x3550: lea r8,[rdi-0x1]
0x3554: movsxd rax,r9d
0x3557: mov rbx,rdi
0x355a: mov qword ptr [rsp+0x18],rax
0x355f: mov rbp,rdx
0x3562: xor r15d,r15d
0x3565: imul r8,rax
0x3569: mov rax,rdi
0x356c: sub rax,rsi
0x356f: mov qword ptr [rsp+0x10],rax
0x3574: mov r13,r8
0x3577: jmp 0x35a4
0x3580: movsx edx,word ptr [rbp+r15*2]
0x3586: mov rdi,qword ptr [rsp]
0x358a: xor eax,eax
0x358c: add r15,0x1
0x3590: call 0x8150
0x3595: sub r13,qword ptr [rsp+0x18]
0x359a: cmp qword ptr [rsp+0x10],r15
0x359f: mov r9d,r12d
0x35a2: je 0x35e0
0x35a4: xor edx,edx
0x35a6: mov rax,r13
0x35a9: div rbx
0x35ac: sub r9d,eax
0x35af: cmp byte ptr [rip+0x20cb4b],0x0
0x35b6: mov r12,rax
0x35b9: mov eax,dword ptr [rsp+0xc]
0x35bd: lea esi,[r9+rax]
0x35c1: je 0x3580
0x35c3: mov r14b,byte ptr [rbp+r15*2+0x1]
0x35c8: movzx eax,byte ptr [rbp+r15*2]
0x35ce: mov ecx,r14d
0x35d1: mov ch,al
0x35d3: mov r14d,ecx
0x35d6: movsx edx,cx
0x35d9: jmp 0x3586
0x35e0: mov rax,qword ptr [rsp+0x28]
0x35e5: xor rax,qword ptr fs:0x28
0x35ee: jne 0x35ff
0x35f0: add rsp,0x38
0x35f4: pop rbx
0x35f5: pop rbp
0x35f6: pop r12
0x35f8: pop r13
0x35fa: pop r14
0x35fc: pop r15
0x35fe: ret 
0x35ff: call 0x18e0
0x3604: nop 
0x3606: nop word ptr cs:[rax+rax]
0x3610: push r15
0x3612: push r14
0x3614: push r13
0x3616: push r12
0x3618: push rbp
0x3619: push rbx
0x361a: sub rsp,0x18
0x361e: cmp rdi,rsi
0x3621: mov qword ptr [rsp],rcx
0x3625: jbe 0x3682
0x3627: lea rcx,[rdi-0x1]
0x362b: movsxd r12,r9d
0x362e: mov rbp,rdi
0x3631: sub rbp,rsi
0x3634: mov rbx,rdi
0x3637: mov r15,rdx
0x363a: imul rcx,r12
0x363e: lea rax,[rdx+rbp]
0x3642: mov r14d,r8d
0x3645: mov qword ptr [rsp+0x8],rax
0x364a: mov r13,rcx
0x364d: nop dword ptr [rax]
0x3650: mov rax,r13
0x3653: xor edx,edx
0x3655: mov rdi,qword ptr [rsp]
0x3659: div rbx
0x365c: movzx edx,byte ptr [r15]
0x3660: sub r13,r12
0x3663: add r15,0x1
0x3667: sub r9d,eax
0x366a: mov rbp,rax
0x366d: xor eax,eax
0x366f: lea esi,[r9+r14]
0x3673: call 0x8150
0x3678: cmp r15,qword ptr [rsp+0x8]
0x367d: mov r9d,ebp
0x3680: jne 0x3650
0x3682: add rsp,0x18
0x3686: pop rbx
0x3687: pop rbp
0x3688: pop r12
0x368a: pop r13
0x368c: pop r14
0x368e: pop r15
0x3690: ret 
0x36a0: push r15
0x36a2: push r14
0x36a4: push r13
0x36a6: push r12
0x36a8: push rbp
0x36a9: push rbx
0x36aa: sub rsp,0x18
0x36ae: cmp rdi,rsi
0x36b1: mov qword ptr [rsp],rcx
0x36b5: jbe 0x3712
0x36b7: lea rcx,[rdi-0x1]
0x36bb: movsxd r12,r9d
0x36be: mov rbp,rdi
0x36c1: sub rbp,rsi
0x36c4: mov rbx,rdi
0x36c7: mov r15,rdx
0x36ca: imul rcx,r12
0x36ce: lea rax,[rdx+rbp]
0x36d2: mov r14d,r8d
0x36d5: mov qword ptr [rsp+0x8],rax
0x36da: mov r13,rcx
0x36dd: nop dword ptr [rax]
0x36e0: mov rax,r13
0x36e3: xor edx,edx
0x36e5: mov rdi,qword ptr [rsp]
0x36e9: div rbx
0x36ec: movsx edx,byte ptr [r15]
0x36f0: sub r13,r12
0x36f3: add r15,0x1
0x36f7: sub r9d,eax
0x36fa: mov rbp,rax
0x36fd: xor eax,eax
0x36ff: lea esi,[r9+r14]
0x3703: call 0x8150
0x3708: cmp r15,qword ptr [rsp+0x8]
0x370d: mov r9d,ebp
0x3710: jne 0x36e0
0x3712: add rsp,0x18
0x3716: pop rbx
0x3717: pop rbp
0x3718: pop r12
0x371a: pop r13
0x371c: pop r14
0x371e: pop r15
0x3720: ret 
0x3730: push r15
0x3732: push r14
0x3734: push r13
0x3736: push r12
0x3738: mov r12,rdi
0x373b: push rbp
0x373c: push rbx
0x373d: sub rsp,0x78
0x3741: mov rdi,qword ptr fs:0x28
0x374a: mov qword ptr [rsp+0x68],rdi
0x374f: xor edi,edi
0x3751: cmp r12,rsi
0x3754: mov qword ptr [rsp+0x8],rsi
0x3759: mov dword ptr [rsp+0x14],r8d
0x375e: jbe 0x3820
0x3764: lea r8,[r12-0x1]
0x3769: movsxd rax,r9d
0x376c: mov rbx,rdx
0x376f: mov qword ptr [rsp+0x18],rax
0x3774: mov r15,r12
0x3777: lea r13,[rsp+0x30]
0x377c: imul r8,rax
0x3780: mov r14,r8
0x3783: jmp 0x37cc
0x3788: fldt [rbx]
0x378a: sub rsp,0x10
0x378e: xor ecx,ecx
0x3790: xor edx,edx
0x3792: mov esi,0x2d
0x3797: mov rdi,r13
0x379a: add rbx,0x10
0x379e: fstpt [rsp]
0x37a1: call 0x59c0
0x37a6: lea rdi,[rip+0x752f]
0x37ad: mov rdx,r13
0x37b0: xor eax,eax
0x37b2: mov esi,dword ptr [rsp+0x20]
0x37b6: call 0x8150
0x37bb: sub r14,qword ptr [rsp+0x28]
0x37c0: mov r9d,ebp
0x37c3: pop rax
0x37c4: pop rdx
0x37c5: cmp r15,qword ptr [rsp+0x8]
0x37ca: je 0x3820
0x37cc: xor edx,edx
0x37ce: mov rax,r14
0x37d1: sub r15,0x1
0x37d5: div r12
0x37d8: sub r9d,eax
0x37db: add r9d,dword ptr [rsp+0x14]
0x37e0: cmp byte ptr [rip+0x20c91a],0x0
0x37e7: mov rbp,rax
0x37ea: mov dword ptr [rsp+0x10],r9d
0x37ef: je 0x3788
0x37f1: lea rdx,[rbx+0xf]
0x37f5: lea rax,[rsp+0x20]
0x37fa: lea rsi,[rsp+0x30]
0x37ff: nop 
0x3800: movzx ecx,byte ptr [rdx]
0x3803: add rax,0x1
0x3807: sub rdx,0x1
0x380b: mov byte ptr [rax-0x1],cl
0x380e: cmp rsi,rax
0x3811: jne 0x3800
0x3813: fldt [rsp+0x20]
0x3817: jmp 0x378a
0x3820: mov rax,qword ptr [rsp+0x68]
0x3825: xor rax,qword ptr fs:0x28
0x382e: jne 0x383f
0x3830: add rsp,0x78
0x3834: pop rbx
0x3835: pop rbp
0x3836: pop r12
0x3838: pop r13
0x383a: pop r14
0x383c: pop r15
0x383e: ret 
0x383f: call 0x18e0
0x3844: nop 
0x3846: nop word ptr cs:[rax+rax]
0x3850: push r15
0x3852: push r14
0x3854: push r13
0x3856: push r12
0x3858: push rbp
0x3859: push rbx
0x385a: mov rbp,rdi
0x385d: sub rsp,0x68
0x3861: mov rdi,qword ptr fs:0x28
0x386a: mov qword ptr [rsp+0x58],rdi
0x386f: xor edi,edi
0x3871: cmp rbp,rsi
0x3874: mov qword ptr [rsp+0x8],rsi
0x3879: mov dword ptr [rsp+0x14],r8d
0x387e: jbe 0x3940
0x3884: lea r8,[rbp-0x1]
0x3888: movsxd rax,r9d
0x388b: mov r13,rdx
0x388e: mov qword ptr [rsp+0x18],rax
0x3893: mov r15,rbp
0x3896: lea r12,[rsp+0x30]
0x389b: imul r8,rax
0x389f: mov r14,r8
0x38a2: jmp 0x38e7
0x38a8: movsd xmm0,dword ptr [r13]
0x38ae: xor ecx,ecx
0x38b0: xor edx,edx
0x38b2: mov esi,0x28
0x38b7: mov rdi,r12
0x38ba: add r13,0x8
0x38be: call 0x56e0
0x38c3: mov esi,dword ptr [rsp+0x10]
0x38c7: lea rdi,[rip+0x740e]
0x38ce: xor eax,eax
0x38d0: mov rdx,r12
0x38d3: call 0x8150
0x38d8: sub r14,qword ptr [rsp+0x18]
0x38dd: cmp r15,qword ptr [rsp+0x8]
0x38e2: mov r9d,ebx
0x38e5: je 0x3940
0x38e7: xor edx,edx
0x38e9: mov rax,r14
0x38ec: sub r15,0x1
0x38f0: div rbp
0x38f3: sub r9d,eax
0x38f6: add r9d,dword ptr [rsp+0x14]
0x38fb: cmp byte ptr [rip+0x20c7ff],0x0
0x3902: mov rbx,rax
0x3905: mov dword ptr [rsp+0x10],r9d
0x390a: je 0x38a8
0x390c: lea rdx,[r13+0x7]
0x3910: lea rsi,[rsp+0x28]
0x3915: xor eax,eax
0x3917: nop word ptr [rax+rax]
0x3920: movzx ecx,byte ptr [rdx]
0x3923: sub rdx,0x1
0x3927: mov byte ptr [rsi+rax],cl
0x392a: add rax,0x1
0x392e: cmp rax,0x8
0x3932: jne 0x3920
0x3934: movsd xmm0,dword ptr [rsp+0x28]
0x393a: jmp 0x38ae
0x3940: mov rax,qword ptr [rsp+0x58]
0x3945: xor rax,qword ptr fs:0x28
0x394e: jne 0x395f
0x3950: add rsp,0x68
0x3954: pop rbx
0x3955: pop rbp
0x3956: pop r12
0x3958: pop r13
0x395a: pop r14
0x395c: pop r15
0x395e: ret 
0x395f: call 0x18e0
0x3964: nop 
0x3966: nop word ptr cs:[rax+rax]
0x3970: push r15
0x3972: push r14
0x3973: push rsi
0x3974: mov rax,rsi
0x3977: push r13
0x3979: push r12
0x397b: push rbp
0x397c: push rbx
0x397d: sub rsp,0x68
0x3981: mov qword ptr [rsp+0x10],rsi
0x3986: mov dword ptr [rsp+0x28],r8d
0x398b: mov rsi,qword ptr fs:0x28
0x3994: mov qword ptr [rsp+0x58],rsi
0x3999: xor esi,esi
0x399b: cmp rdi,rax
0x399e: jbe 0x3a70
0x39a4: lea r8,[rdi-0x1]
0x39a8: movsxd rax,r9d
0x39ab: mov r12d,ebp
0x39ae: mov qword ptr [rsp+0x18],rax
0x39b3: mov rbx,rdx
0x39b6: mov qword ptr [rsp+0x20],rdi
0x39bb: imul r8,rax
0x39bf: lea rax,[rsp+0x30]
0x39c4: mov rbp,rdi
0x39c7: mov r13d,r9d
0x39ca: mov qword ptr [rsp+0x8],rax
0x39cf: mov r15,r8
0x39d2: jmp 0x3a18
0x39d8: movxd xmm0,[rbx]
0x39dc: mov rdi,qword ptr [rsp+0x8]
0x39e1: xor ecx,ecx
0x39e3: xor edx,edx
0x39e5: mov esi,0x1f
0x39ea: add rbx,0x4
0x39ee: call 0x5850
0x39f3: mov rdx,qword ptr [rsp+0x8]
0x39f8: lea rdi,[rip+0x72dd]
0x39ff: mov esi,r13d
0x3a02: xor eax,eax
0x3a04: mov r13d,r14d
0x3a07: call 0x8150
0x3a0c: sub r15,qword ptr [rsp+0x18]
0x3a11: cmp rbp,qword ptr [rsp+0x10]
0x3a16: je 0x3a70
0x3a18: xor edx,edx
0x3a1a: mov rax,r15
0x3a1d: sub rbp,0x1
0x3a21: div qword ptr [rsp+0x20]
0x3a26: sub r13d,eax
0x3a29: add r13d,dword ptr [rsp+0x28]
0x3a2e: cmp byte ptr [rip+0x20c6cc],0x0
0x3a35: mov r14,rax
0x3a38: je 0x39d8
0x3a3a: mov r12b,byte ptr [rbx+0x3]
0x3a3e: movzx edx,byte ptr [rbx+0x1]
0x3a42: mov eax,r12d
0x3a45: mov ah,byte ptr [rbx+0x2]
0x3a48: shl edx,0x10
0x3a4b: movzx r10d,ax
0x3a4f: movzx eax,byte ptr [rbx]
0x3a52: or r10d,edx
0x3a55: shl eax,0x18
0x3a58: or r10d,eax
0x3a5b: mov dword ptr [rsp+0x2c],r10d
0x3a60: mov r12d,r10d
0x3a63: movxd xmm0,[rsp+0x2c]
0x3a69: jmp 0x39dc
0x3a70: mov rax,qword ptr [rsp+0x58]
0x3a75: xor rax,qword ptr fs:0x28
0x3a7e: jne 0x3a8f
0x3a80: add rsp,0x68
0x3a84: pop rbx
0x3a85: pop rbp
0x3a86: pop r12
0x3a88: pop r13
0x3a8a: pop r14
0x3a8c: pop r15
0x3a8e: ret 
0x3a8f: call 0x18e0
0x3a94: nop 
0x3a96: nop word ptr cs:[rax+rax]
0x3b10: movzx eax,al
0x3b13: movsxd rax,dword ptr [r14+rax*4]
0x3b17: add rax,r14
0x3b1a: jmp rax
0x3c30: lea eax,[r13-0x4]
0x3c34: lea r9,[rip+0x711a]
0x3c3b: lea r10,[rbp+0x10]
0x3c3f: lea rcx,[rip+0x70df]
0x3c46: mov edx,0x8
0x3c4b: mov esi,0x1
0x3c50: cmp eax,0x1
0x3c53: lea rax,[rip+0x7089]
0x3c5a: mov rdi,r10
0x3c5d: mov qword ptr [rsp+0x8],r10
0x3c62: cmovbe r9,rax
0x3c66: lea rax,[rip+0x8ad3]
0x3c6d: mov r15d,dword ptr [rax+r8*4]
0x3c71: xor eax,eax
0x3c73: mov r8d,r15d
0x3c76: call 0x1b50
0x3c7b: mov edx,0x2
0x3c80: mov r10,qword ptr [rsp+0x8]
0x3c85: jmp 0x3e93
0x3cad: mov qword ptr [rbp+0x8],rax
0x3cb1: mov dword ptr [rbp+0x4],r13d
0x3cb5: mov dword ptr [rbp],edx
0x3cb8: mov dword ptr [rbp+0x1c],r15d
0x3cbc: cmp byte ptr [rbx],0x7a
0x3cbf: sete al
0x3cc2: mov byte ptr [rbp+0x18],al
0x3cc5: movzx eax,al
0x3cc8: add rbx,rax
0x3ccb: cmp r12,rbx
0x3cce: je 0x423e
0x3cd4: mov rax,qword ptr [rip+0x20c4f5]
0x3cdb: mov r12,rbx
0x3cde: add rax,0x1
0x3ce2: cmp byte ptr [rbx],0x0
0x3ce5: mov qword ptr [rip+0x20c4e4],rax
0x3cec: jne 0x3ad8
0x3cf2: add rsp,0x18
0x3cf6: mov eax,0x1
0x3cfb: pop rbx
0x3cfc: pop rbp
0x3cfd: pop r12
0x3cff: pop r13
0x3d01: pop r14
0x3d03: pop r15
0x3d05: ret 
0x3d41: movsx ebx,byte ptr [r12]
0x3d46: lea rsi,[rip+0x72cb]
0x3d4d: mov rbp,rax
0x3d50: mov edx,0x5
0x3d55: xor edi,edi
0x3d57: call 0x18b0
0x3d5c: mov r8,rbp
0x3d5f: mov rdx,rax
0x3d62: xor esi,esi
0x3d64: mov ecx,ebx
0x3d66: xor eax,eax
0x3d68: xor edi,edi
0x3d6a: call 0x1aa0
0x3d6f: add rsp,0x18
0x3d73: xor eax,eax
0x3d75: pop rbx
0x3d76: pop rbp
0x3d77: pop r12
0x3d79: pop r13
0x3d7b: pop r14
0x3d7d: pop r15
0x3d7f: ret 
0x3d85: movabsq rax,0x222222222222221
0x3d8f: cmp rcx,rax
0x3d92: ja 0x3df9
0x3d94: mov rax,rcx
0x3d97: shr rax, 1
0x3d9a: lea rcx,[rcx+rax+0x1]
0x3dfe: nop 
0x3e00: cmp al,0x43
0x3e02: jne 0x3f40
0x3e08: mov r13d,dword ptr [rip+0x20c375]
0x3e0f: lea rbx,[r12+0x2]
0x3e14: mov r8d,0x1
0x3e1a: cmp sil,0x6f
0x3e1e: je 0x3c30
0x3e24: jle 0x40e0
0x3e2a: cmp sil,0x75
0x3e2e: je 0x4140
0x3e34: cmp sil,0x78
0x3e38: jne 0x4049
0x3e3e: lea eax,[r13-0x4]
0x3e42: lea r9,[rip+0x7097]
0x3e49: lea r10,[rbp+0x10]
0x3e4d: lea rcx,[rip+0x6ed1]
0x3e54: mov edx,0x8
0x3e59: mov esi,0x1
0x3e5e: cmp eax,0x1
0x3e61: lea rax,[rip+0x6e81]
0x3e68: mov rdi,r10
0x3e6b: mov qword ptr [rsp+0x8],r10
0x3e70: cmovbe r9,rax
0x3e74: lea rax,[rip+0x87a5]
0x3e7b: mov r15d,dword ptr [rax+r8*4]
0x3e7f: xor eax,eax
0x3e81: mov r8d,r15d
0x3e84: call 0x1b50
0x3e89: mov r10,qword ptr [rsp+0x8]
0x3e8e: mov edx,0x3
0x3e93: mov rdi,r10
0x3e96: mov dword ptr [rsp+0x8],edx
0x3e9a: call 0x18d0
0x3e9f: cmp rax,0x7
0x3ea3: mov edx,dword ptr [rsp+0x8]
0x3ea7: ja 0x427c
0x3ead: cmp r13d,0x5
0x3eb1: ja 0x4049
0x3eb7: lea rsi,[rip+0x8162]
0x3ebe: mov ecx,r13d
0x3ec1: movsxd rax,dword ptr [rsi+rcx*4]
0x3ec5: add rax,rsi
0x3ec8: jmp rax
0x3f40: movsx ecx,al
0x3f43: lea rdi,[r12+0x1]
0x3f48: sub ecx,0x30
0x3f4b: cmp ecx,0x9
0x3f4e: ja 0x4229
0x3f54: lea rbx,[r12+0x2]
0x3f59: movsxd rcx,ecx
0x3f5c: xor r8d,r8d
0x3f5f: jmp 0x3f8f
0x3f68: movsxd rcx,eax
0x3f6b: movabsq rax,-0x3333333333333333
0x3f75: add rbx,0x1
0x3f79: mov rdx,rcx
0x3f7c: not rdx
0x3f7f: mul rdx
0x3f82: shr rdx,0x3
0x3f86: cmp rdx,r8
0x3f89: jb 0x41a0
0x3f8f: lea rax,[r8+r8*4]
0x3f93: lea r8,[rcx+rax*2]
0x3f97: movsx eax,byte ptr [rbx]
0x3f9a: sub eax,0x30
0x3f9d: cmp eax,0x9
0x3fa0: jbe 0x3f68
0x3fa2: cmp rdi,rbx
0x3fa5: je 0x4217
0x3fab: cmp r8,0x8
0x3faf: ja 0x3fc5
0x3fb1: lea rax,[rip+0x20c1c8]
0x3fb8: mov r13d,dword ptr [rax+r8*4]
0x3fbc: test r13d,r13d
0x3fbf: jne 0x3e1a
0x3fc5: mov rdi,qword ptr [rsp]
0x3fc9: mov qword ptr [rsp+0x8],r8
0x3fce: call 0x7820
0x3fd3: lea rsi,[rip+0x6f5e]
0x3fda: mov rbx,rax
0x3fdd: mov edx,0x5
0x3fe2: xor edi,edi
0x3fe4: call 0x18b0
0x3fe9: mov r8,qword ptr [rsp+0x8]
0x3fee: mov rcx,rbx
0x3ff1: mov rdx,rax
0x3ff4: xor esi,esi
0x3ff6: xor eax,eax
0x3ff8: xor edi,edi
0x3ffa: call 0x1aa0
0x3fff: add rsp,0x18
0x4003: xor eax,eax
0x4005: pop rbx
0x4006: pop rbp
0x4007: pop r12
0x4009: pop r13
0x400b: pop r14
0x400d: pop r15
0x400f: ret 
0x4049: call 0x17e0
0x404e: nop 
0x4050: lea r15d,[rax+0x17]
0x4054: mov edx,0x4
0x4059: lea rax,[rip-0x810]
0x4060: jmp 0x3cad
0x40e0: cmp sil,0x64
0x40e4: jne 0x4049
0x40ea: lea rax,[rip+0x85ef]
0x40f1: lea r10,[rbp+0x10]
0x40f5: lea rcx,[rip+0x6c23]
0x40fc: mov edx,0x8
0x4101: mov esi,0x1
0x4106: mov r15d,dword ptr [rax+r8*4]
0x410a: lea eax,[r13-0x4]
0x410e: lea r8,[rip+0x8fc9]
0x4115: mov rdi,r10
0x4118: mov qword ptr [rsp+0x8],r10
0x411d: cmp eax,0x1
0x4120: lea rax,[rip+0x6bb9]
0x4127: cmovbe r8,rax
0x412b: xor eax,eax
0x412d: call 0x1b50
0x4132: xor edx,edx
0x4134: mov r10,qword ptr [rsp+0x8]
0x4139: jmp 0x3e93
0x4140: lea rax,[rip+0x8539]
0x4147: lea r10,[rbp+0x10]
0x414b: lea rcx,[rip+0x6bcd]
0x4152: mov edx,0x8
0x4157: mov esi,0x1
0x415c: mov r15d,dword ptr [rax+r8*4]
0x4160: lea eax,[r13-0x4]
0x4164: lea r8,[rip+0x6b7c]
0x416b: mov rdi,r10
0x416e: mov qword ptr [rsp+0x8],r10
0x4173: cmp eax,0x1
0x4176: lea rax,[rip+0x6b69]
0x417d: cmovbe r8,rax
0x4181: xor eax,eax
0x4183: call 0x1b50
0x4188: mov edx,0x1
0x418d: mov r10,qword ptr [rsp+0x8]
0x4192: jmp 0x3e93
0x41a0: mov rdi,qword ptr [rsp]
0x41a4: call 0x7820
0x41a9: lea rsi,[rip+0x6b88]
0x41b0: mov rbx,rax
0x41b3: mov edx,0x5
0x41b8: xor edi,edi
0x41ba: call 0x18b0
0x41bf: mov rcx,rbx
0x41c2: mov rdx,rax
0x41c5: xor esi,esi
0x41c7: xor eax,eax
0x41c9: xor edi,edi
0x41cb: call 0x1aa0
0x41d0: add rsp,0x18
0x41d4: xor eax,eax
0x41d6: pop rbx
0x41d7: pop rbp
0x41d8: pop r12
0x41da: pop r13
0x41dc: pop r14
0x41de: pop r15
0x41e0: ret 
0x4217: mov r13d,dword ptr [rip+0x20bf72]
0x421e: mov r8d,0x4
0x4224: jmp 0x3e1a
0x4229: mov r13d,dword ptr [rip+0x20bf60]
0x4230: mov rbx,rdi
0x4233: mov r8d,0x4
0x4239: jmp 0x3e1a
0x423e: lea rcx,[rip+0x828b]
0x4245: lea rsi,[rip+0x6aa0]
0x424c: lea rdi,[rip+0x6adb]
0x4253: mov edx,0x3e4
0x4258: call 0x1950
0x427c: lea rcx,[rip+0x822d]
0x4283: lea rsi,[rip+0x6a62]
0x428a: lea rdi,[rip+0x6cf7]
0x4291: mov edx,0x2e9
0x4296: call 0x1950
0x42a5: lea rcx,[rip+0x8224]
0x42ac: lea rsi,[rip+0x6a39]
0x42b3: lea rdi,[rip+0x6a4d]
0x42ba: mov edx,0x3d8
0x42bf: call 0x1950
0x42c4: nop 
0x42c6: nop word ptr cs:[rax+rax]
0x42d0: push r15
0x42d2: push r14
0x42d4: push r13
0x42d6: push r12
0x42d8: push rbp
0x42d9: push rbx
0x42da: sub rsp,0x38
0x42de: mov rax,qword ptr fs:0x28
0x42e7: mov qword ptr [rsp+0x28],rax
0x42ec: xor eax,eax
0x42ee: cmp rdi,rsi
0x42f1: mov dword ptr [rsp+0x18],r8d
0x42f6: jbe 0x4385
0x42fc: lea rbx,[rdi-0x1]
0x4300: movsxd r14,r9d
0x4303: mov rax,rdi
0x4306: sub rax,rsi
0x4309: lea r13,[rip+0x7d28]
0x4310: mov r12,rdi
0x4313: imul rbx,r14
0x4317: add rax,rdx
0x431a: mov r15,rdx
0x431d: mov qword ptr [rsp],rax
0x4321: nop dword ptr [rax]
0x4328: xor edx,edx
0x432a: mov rax,rbx
0x432d: add r15,0x1
0x4331: movzx r8d,byte ptr [r15-0x1]
0x4336: div r12
0x4339: cmp r8b,0xd
0x433d: movzx edx,r8b
0x4341: mov rbp,rax
0x4344: ja 0x4420
0x434a: movsxd rax,dword ptr [r13+rdx*4]
0x434f: add rax,r13
0x4352: jmp rax
0x4360: mov eax,dword ptr [rsp+0x18]
0x4364: sub r9d,ebp
0x4367: lea rdi,[rip+0x696e]
0x436e: sub rbx,r14
0x4371: lea esi,[r9+rax]
0x4375: xor eax,eax
0x4377: call 0x8150
0x437c: cmp r15,qword ptr [rsp]
0x4380: mov r9d,ebp
0x4383: jne 0x4328
0x4385: mov rax,qword ptr [rsp+0x28]
0x438a: xor rax,qword ptr fs:0x28
0x4393: jne 0x4489
0x4399: add rsp,0x38
0x439d: pop rbx
0x439e: pop rbp
0x439f: pop r12
0x43a1: pop r13
0x43a3: pop r14
0x43a5: pop r15
0x43a7: ret 
0x4420: mov dword ptr [rsp+0x1c],r9d
0x4425: mov qword ptr [rsp+0x10],rdx
0x442a: mov byte ptr [rsp+0x8],r8b
0x442f: call 0x1b40
0x4434: mov rdx,qword ptr [rsp+0x10]
0x4439: mov rax,qword ptr [rax]
0x443c: lea r11,[rsp+0x24]
0x4441: movzx r8d,byte ptr [rsp+0x8]
0x4447: lea rcx,[rip+0x6901]
0x444e: mov esi,0x1
0x4453: mov rdi,r11
0x4456: mov qword ptr [rsp+0x8],r11
0x445b: test byte ptr [rax+rdx*2+0x1],0x40
0x4460: lea rax,[rip+0x68eb]
0x4467: mov edx,0x4
0x446c: cmove rcx,rax
0x4470: xor eax,eax
0x4472: call 0x1b50
0x4477: mov r11,qword ptr [rsp+0x8]
0x447c: mov r9d,dword ptr [rsp+0x1c]
0x4481: mov rdx,r11
0x4484: jmp 0x4360
0x4489: call 0x18e0
0x448e: nop 
0x4490: push rbp
0x4491: push rbx
0x4492: mov ebx,0x1
0x4497: sub rsp,0x8
0x449b: mov rax,qword ptr [rip+0x20bd06]
0x44a2: test rax,rax
0x44a5: je 0x44e5
0x44a7: test byte ptr [rax],0x20
0x44aa: mov ebp,edi
0x44ac: jne 0x4520
0x44ae: mov rdx,qword ptr [rip+0x20bcfb]
0x44b5: lea rdi,[rip+0x8c7d]
0x44bc: mov ecx,0x2
0x44c1: mov rsi,qword ptr [rdx-0x8]
0x44c5: rep cmpsb [rsi],es:[rdi]
0x44c7: seta dl
0x44ca: sbb dl,0x0
0x44cd: test dl,dl
0x44cf: jne 0x4598
0x44d5: mov ebx,0x1
0x44da: mov qword ptr [rip+0x20bcc3],0x0
0x44e5: mov rax,qword ptr [rip+0x20bbbc]
0x44ec: test byte ptr [rax],0x20
0x44ef: je 0x4514
0x44f1: lea rsi,[rip+0x6886]
0x44f8: mov edx,0x5
0x44fd: xor edi,edi
0x44ff: xor ebx,ebx
0x4501: call 0x18b0
0x4506: xor esi,esi
0x4508: mov rdx,rax
0x450b: xor edi,edi
0x450d: xor eax,eax
0x450f: call 0x1aa0
0x4514: add rsp,0x8
0x4518: mov eax,ebx
0x451a: pop rbx
0x451b: pop rbp
0x451c: ret 
0x4520: mov rdx,qword ptr [rip+0x20bc91]
0x4527: xor edi,edi
0x4529: mov esi,0x3
0x452e: call 0x7650
0x4533: lea rsi,[rip+0x6835]
0x453a: mov rbx,rax
0x453d: xor edi,edi
0x453f: mov edx,0x5
0x4544: call 0x18b0
0x4549: mov rcx,rbx
0x454c: xor edi,edi
0x454e: mov rdx,rax
0x4551: mov esi,ebp
0x4553: xor eax,eax
0x4555: call 0x1aa0
0x455a: mov rax,qword ptr [rip+0x20bc4f]
0x4561: lea rdi,[rip+0x8bd1]
0x4568: mov ecx,0x2
0x456d: mov rsi,qword ptr [rax-0x8]
0x4571: rep cmpsb [rsi],es:[rdi]
0x4573: seta al
0x4576: sbb al,0x0
0x4578: xor ebx,ebx
0x457a: test al,al
0x457c: je 0x44da
0x4582: mov rdi,qword ptr [rip+0x20bc1f]
0x4589: call 0x8800
0x458e: jmp 0x44da
0x4598: mov rdi,rax
0x459b: call 0x8800
0x45a0: test eax,eax
0x45a2: je 0x44d5
0x45a8: mov rdx,qword ptr [rip+0x20bc09]
0x45af: mov esi,0x3
0x45b4: xor edi,edi
0x45b6: call 0x7650
0x45bb: mov rbx,rax
0x45be: call 0x17f0
0x45c3: mov esi,dword ptr [rax]
0x45c5: lea rdx,[rip+0x8214]
0x45cc: mov rcx,rbx
0x45cf: xor edi,edi
0x45d1: xor eax,eax
0x45d3: xor ebx,ebx
0x45d5: call 0x1aa0
0x45da: jmp 0x44da
0x45e0: push rbp
0x45e1: push rbx
0x45e2: lea rbx,[rip+0x8b50]
0x45e9: mov ebp,0x1
0x45ee: sub rsp,0x8
0x45f2: mov rax,qword ptr [rip+0x20bbb7]
0x45f9: mov rdx,qword ptr [rax]
0x45fc: test rdx,rdx
0x45ff: mov qword ptr [rip+0x20bbb2],rdx
0x4606: je 0x4695
0x460c: mov ecx,0x2
0x4611: mov rsi,rdx
0x4614: mov rdi,rbx
0x4617: add rax,0x8
0x461b: rep cmpsb [rsi],es:[rdi]
0x461d: mov qword ptr [rip+0x20bb8c],rax
0x4624: seta al
0x4627: sbb al,0x0
0x4629: test al,al
0x462b: jne 0x4668
0x462d: lea rsi,[rip+0x6756]
0x4634: mov edx,0x5
0x4639: xor edi,edi
0x463b: call 0x18b0
0x4640: mov qword ptr [rip+0x20bb71],rax
0x4647: mov rax,qword ptr [rip+0x20ba62]
0x464e: mov byte ptr [rip+0x20bb4f],0x1
0x4655: mov qword ptr [rip+0x20bb4c],rax
0x465c: test rax,rax
0x465f: je 0x45f2
0x4661: jmp 0x4683
0x4668: lea rsi,[rip+0x66f8]
0x466f: mov rdi,rdx
0x4672: call 0x1ac0
0x4677: test rax,rax
0x467a: mov qword ptr [rip+0x20bb27],rax
0x4681: je 0x46a0
0x4683: cmp byte ptr [rip+0x20bb66],0x0
0x468a: je 0x4695
0x468c: cmp byte ptr [rip+0x20bb7f],0x0
0x4693: je 0x46e0
0x4695: add rsp,0x8
0x4699: mov eax,ebp
0x469b: pop rbx
0x469c: pop rbp
0x469d: ret 
0x46a0: mov rdx,qword ptr [rip+0x20bb11]
0x46a7: mov esi,0x3
0x46ac: xor edi,edi
0x46ae: call 0x7650
0x46b3: mov rbp,rax
0x46b6: call 0x17f0
0x46bb: mov esi,dword ptr [rax]
0x46bd: lea rdx,[rip+0x811c]
0x46c4: mov rcx,rbp
0x46c7: xor eax,eax
0x46c9: xor edi,edi
0x46cb: xor ebp,ebp
0x46cd: call 0x1aa0
0x46d2: mov rax,qword ptr [rip+0x20bacf]
0x46d9: jmp 0x465c
0x46e0: xor ecx,ecx
0x46e2: mov edx,0x2
0x46e7: xor esi,esi
0x46e9: mov rdi,rax
0x46ec: call 0x1a80
0x46f1: jmp 0x4695
0x4700: push r15
0x4702: push r14
0x4704: push r13
0x4706: push r12
0x4708: push rbp
0x4709: push rbx
0x470a: sub rsp,0x20a8
0x4711: mov rax,qword ptr fs:0x28
0x471a: mov qword ptr [rsp+0x2098],rax
0x4722: xor eax,eax
0x4724: test rdi,rdi
0x4727: je 0x48a8
0x472d: mov r15,qword ptr [rip+0x20ba74]
0x4734: test r15,r15
0x4737: je 0x480e
0x473d: mov r13,rdi
0x4740: mov ebx,0x1
0x4745: mov r12,rsp
0x4748: lea rbp,[rsp+0x90]
0x4750: movabsq r14,0x1fffffffffffffff
0x475a: jmp 0x47bf
0x4760: mov eax,dword ptr [rsp+0x18]
0x4764: and eax,0xd000
0x4769: cmp eax,0x8000
0x476e: jne 0x4838
0x4774: mov rax,qword ptr [rsp+0x38]
0x4779: mov ecx,0x200
0x477e: lea rdx,[rax-0x1]
0x4782: cmp rdx,r14
0x4785: mov rdx,qword ptr [rsp+0x30]
0x478a: cmova rax,rcx
0x478e: cmp rdx,rax
0x4791: jle 0x4838
0x4797: cmp rdx,r13
0x479a: jae 0x48be
0x47a0: sub r13,rdx
0x47a3: xor edi,edi
0x47a5: call 0x4490
0x47aa: and ebx,eax
0x47ac: call 0x45e0
0x47b1: mov r15,qword ptr [rip+0x20b9f0]
0x47b8: and ebx,eax
0x47ba: test r15,r15
0x47bd: je 0x480e
0x47bf: mov rdi,r15
0x47c2: call 0x19e0
0x47c7: mov rdx,r12
0x47ca: mov esi,eax
0x47cc: mov edi,0x1
0x47d1: call 0x1a20
0x47d6: test eax,eax
0x47d8: je 0x4760
0x47da: mov rdx,qword ptr [rip+0x20b9d7]
0x47e1: mov esi,0x3
0x47e6: xor edi,edi
0x47e8: call 0x7650
0x47ed: mov rbx,rax
0x47f0: call 0x17f0
0x47f5: mov esi,dword ptr [rax]
0x47f7: lea rdx,[rip+0x7fe2]
0x47fe: mov rcx,rbx
0x4801: xor edi,edi
0x4803: xor eax,eax
0x4805: xor ebx,ebx
0x4807: call 0x1aa0
0x480c: jmp 0x47a3
0x480e: lea rsi,[rip+0x6833]
0x4815: mov edx,0x5
0x481a: xor edi,edi
0x481c: call 0x18b0
0x4821: xor esi,esi
0x4823: mov rdx,rax
0x4826: mov edi,0x1
0x482b: xor eax,eax
0x482d: call 0x1aa0
0x4832: nop word ptr [rax+rax]
0x4838: mov r15d,0x2000
0x483e: nop 
0x4840: cmp r15,r13
0x4843: mov r8,qword ptr [rip+0x20b95e]
0x484a: mov edx,0x1
0x484f: cmova r15,r13
0x4853: mov esi,0x2000
0x4858: mov rdi,rbp
0x485b: mov rcx,r15
0x485e: call 0x1ad0
0x4863: sub r13,rax
0x4866: cmp rax,r15
0x4869: je 0x487c
0x486b: mov rax,qword ptr [rip+0x20b936]
0x4872: mov eax,dword ptr [rax]
0x4874: test al,0x20
0x4876: jne 0x48af
0x4878: test al,0x10
0x487a: jne 0x48b3
0x487c: test r13,r13
0x487f: jne 0x4840
0x4881: mov rcx,qword ptr [rsp+0x2098]
0x4889: xor rcx,qword ptr fs:0x28
0x4892: mov eax,ebx
0x4894: jne 0x48da
0x4896: add rsp,0x20a8
0x489d: pop rbx
0x489e: pop rbp
0x489f: pop r12
0x48a1: pop r13
0x48a3: pop r14
0x48a5: pop r15
0x48a7: ret 
0x48a8: mov ebx,0x1
0x48ad: jmp 0x4881
0x48af: xor ebx,ebx
0x48b1: jmp 0x4881
0x48b3: test r13,r13
0x48b6: jne 0x47a3
0x48bc: jmp 0x4881
0x48be: mov edx,0x1
0x48c3: mov rsi,r13
0x48c6: mov rdi,r15
0x48c9: call 0x88c0
0x48ce: test eax,eax
0x48d0: mov eax,0x0
0x48d5: cmovne ebx,eax
0x48d8: jmp 0x4881
0x48da: call 0x18e0
0x48df: nop 
0x48e0: push r12
0x48e2: mov r12,rdi
0x48e5: push rbp
0x48e6: push rbx
0x48e7: mov dword ptr [rdi],0xffffffff
0x48ed: mov ebp,0x1
0x48f2: mov rdi,qword ptr [rip+0x20b8af]
0x48f9: test rdi,rdi
0x48fc: jne 0x4923
0x48fe: jmp 0x4931
0x4900: call 0x17f0
0x4905: mov edi,dword ptr [rax]
0x4907: call 0x4490
0x490c: mov ebx,eax
0x490e: call 0x45e0
0x4913: mov rdi,qword ptr [rip+0x20b88e]
0x491a: and ebx,eax
0x491c: and ebp,ebx
0x491e: test rdi,rdi
0x4921: je 0x4931
0x4923: call 0x1990
0x4928: cmp eax,-0x1
0x492b: mov dword ptr [r12],eax
0x492f: je 0x4900
0x4931: mov eax,ebp
0x4933: pop rbx
0x4934: pop rbp
0x4935: pop r12
0x4937: ret 
0x4940: push r15
0x4942: push r14
0x4944: mov r14,rsi
0x4947: push r13
0x4949: push r12
0x494b: push rbp
0x494c: push rbx
0x494d: sub rsp,0x28
0x4951: cmp byte ptr [rip+0x20b6b9],0x0
0x4958: mov qword ptr [rsp+0x18],rdi
0x495d: mov qword ptr [rsp+0x8],rcx
0x4962: je 0x4971
0x4964: cmp byte ptr [rip+0x20b6a5],0x0
0x496b: je 0x4b40
0x4971: cmp qword ptr [rip+0x20b857],0x0
0x4979: mov byte ptr [rip+0x20b780],0x0
0x4980: je 0x4b7f
0x4986: mov rax,qword ptr [rsp+0x8]
0x498b: xor ebp,ebp
0x498d: xor r12d,r12d
0x4990: mov qword ptr [rsp+0x10],r14
0x4995: lea r13,[rax+r14]
0x4999: jmp 0x49d5
0x49a0: mov rdi,qword ptr [rip+0x20b701]
0x49a7: mov rax,qword ptr [rdi+0x28]
0x49ab: cmp rax,qword ptr [rdi+0x30]
0x49af: jae 0x4b98
0x49b5: lea rdx,[rax+0x1]
0x49b9: mov qword ptr [rdi+0x28],rdx
0x49bd: mov byte ptr [rax],0xa
0x49c0: add r12,0x1
0x49c4: add rbp,0x28
0x49c8: cmp qword ptr [rip+0x20b801],r12
0x49cf: jbe 0x4b7f
0x49d5: mov rax,qword ptr [rip+0x20b7fc]
0x49dc: lea rsi,[rip+0x7bfd]
0x49e3: mov rbx,qword ptr [rip+0x20b7d6]
0x49ea: xor edx,edx
0x49ec: mov eax,dword ptr [rax+rbp+0x4]
0x49f0: movsxd rcx,dword ptr [rsi+rax*4]
0x49f4: mov rax,rbx
0x49f7: sub rbx,qword ptr [rsp+0x10]
0x49fc: div rcx
0x49ff: xor edx,edx
0x4a01: mov r14,rax
0x4a04: mov r15d,eax
0x4a07: mov rax,rbx
0x4a0a: div rcx
0x4a0d: test r12,r12
0x4a10: mov rbx,rax
0x4a13: jne 0x4bb0
0x4a19: xor esi,esi
0x4a1b: mov rdi,qword ptr [rsp+0x18]
0x4a20: call qword ptr [rip+0x20b7da]
0x4a26: mov rax,qword ptr [rip+0x20b7ab]
0x4a2d: movsxd rsi,ebx
0x4a30: movsxd rdi,r14d
0x4a33: mov rdx,qword ptr [rsp+0x8]
0x4a38: add rax,rbp
0x4a3b: lea rcx,[rax+0x10]
0x4a3f: mov r9d,dword ptr [rax+0x20]
0x4a43: mov r8d,dword ptr [rax+0x1c]
0x4a47: call qword ptr [rax+0x8]
0x4a4a: mov rcx,qword ptr [rip+0x20b787]
0x4a51: add rcx,rbp
0x4a54: cmp byte ptr [rcx+0x18],0x0
0x4a58: je 0x49a0
0x4a5e: mov eax,dword ptr [rcx+0x20]
0x4a61: lea rsi,[rip+0x6274]
0x4a68: mov edi,0x1
0x4a6d: imul eax,ebx
0x4a70: imul ebx,dword ptr [rcx+0x1c]
0x4a74: lea rcx,[rip+0x8346]
0x4a7b: cltd 
0x4a7c: idiv r15d
0x4a7f: lea edx,[rax+rbx]
0x4a82: xor eax,eax
0x4a84: call 0x1a70
0x4a89: mov rcx,qword ptr [rip+0x20b618]
0x4a90: lea rdi,[rip+0x6304]
0x4a97: mov edx,0x3
0x4a9c: mov esi,0x1
0x4aa1: call 0x1a40
0x4aa6: cmp qword ptr [rsp+0x10],0x0
0x4aac: je 0x4b02
0x4aae: call 0x1b40
0x4ab3: mov rbx,qword ptr [rsp+0x8]
0x4ab8: mov r15,rax
0x4abb: nop dword ptr [rax+rax]
0x4ac0: add rbx,0x1
0x4ac4: movzx ecx,byte ptr [rbx-0x1]
0x4ac8: mov rdx,qword ptr [r15]
0x4ac9: mov edx,dword ptr [rdi]
0x4acb: test byte ptr [rdx+rcx*2+0x1],0x40
0x4ad0: mov rax,rcx
0x4ad3: movzx esi,cl
0x4ad6: jne 0x4ae2
0x4ad8: mov esi,0x2e
0x4add: mov eax,0x2e
0x4ae2: mov rdi,qword ptr [rip+0x20b5bf]
0x4ae9: mov rdx,qword ptr [rdi+0x28]
0x4aed: cmp rdx,qword ptr [rdi+0x30]
0x4af1: jae 0x4b30
0x4af3: lea rcx,[rdx+0x1]
0x4af7: mov qword ptr [rdi+0x28],rcx
0x4afb: mov byte ptr [rdx],al
0x4afd: cmp rbx,r13
0x4b00: jne 0x4ac0
0x4b02: mov rdi,qword ptr [rip+0x20b59f]
0x4b09: mov rax,qword ptr [rdi+0x28]
0x4b0d: cmp rax,qword ptr [rdi+0x30]
0x4b11: jae 0x4bd8
0x4b17: lea rdx,[rax+0x1]
0x4b1b: mov qword ptr [rdi+0x28],rdx
0x4b1f: mov byte ptr [rax],0x3c
0x4b22: jmp 0x49a0
0x4b30: call 0x1920
0x4b35: jmp 0x4afd
0x4b40: mov rdi,rdx
0x4b43: mov rdx,qword ptr [rip+0x20b676]
0x4b4a: cmp rdx,rsi
0x4b4d: jne 0x4971
0x4b53: mov rsi,rcx
0x4b56: call 0x19a0
0x4b5b: test eax,eax
0x4b5d: jne 0x4971
0x4b63: cmp byte ptr [rip+0x20b596],0x0
0x4b6a: jne 0x4b7f
0x4b6c: lea rdi,[rip+0x6226]
0x4b73: call 0x1830
0x4b78: mov byte ptr [rip+0x20b581],0x1
0x4b7f: mov byte ptr [rip+0x20b48a],0x0
0x4b86: add rsp,0x28
0x4b8a: pop rbx
0x4b8b: pop rbp
0x4b8c: pop r12
0x4b8e: pop r13
0x4b90: pop r14
0x4b92: pop r15
0x4b94: ret 
0x4b98: mov esi,0xa
0x4b9d: call 0x1920
0x4ba2: jmp 0x49c0
0x4bb0: mov edx,dword ptr [rip+0x20b66a]
0x4bb6: lea rcx,[rip+0x8204]
0x4bbd: lea rsi,[rip+0x6118]
0x4bc4: mov edi,0x1
0x4bc9: xor eax,eax
0x4bcb: call 0x1a70
0x4bd0: jmp 0x4a26
0x4bd8: mov esi,0x3c
0x4bdd: call 0x1920
0x4be2: jmp 0x49a0
0x4bf0: push rbp
0x4bf1: push rbx
0x4bf2: mov rbp,rdi
0x4bf5: mov ebx,esi
0x4bf7: sub rsp,0x8
0x4bfb: mov rdi,qword ptr [rip+0x20b4a6]
0x4c02: mov rax,qword ptr [rdi+0x28]
0x4c06: cmp rax,qword ptr [rdi+0x30]
0x4c0a: jae 0x4c60
0x4c0c: lea rdx,[rax+0x1]
0x4c10: mov qword ptr [rdi+0x28],rdx
0x4c14: mov byte ptr [rax],0x28
0x4c17: mov esi,0x29
0x4c1c: mov rdi,rbp
0x4c1f: call 0x2e90
0x4c24: test bl,bl
0x4c26: je 0x4c43
0x4c28: mov rdi,qword ptr [rip+0x20b479]
0x4c2f: mov rax,qword ptr [rdi+0x28]
0x4c33: cmp rax,qword ptr [rdi+0x30]
0x4c37: jae 0x4c50
0x4c39: lea rdx,[rax+0x1]
0x4c3d: mov qword ptr [rdi+0x28],rdx
0x4c41: mov byte ptr [rax],bl
0x4c43: add rsp,0x8
0x4c47: pop rbx
0x4c48: pop rbp
0x4c49: ret 
0x4c50: add rsp,0x8
0x4c54: movzx esi,bl
0x4c57: pop rbx
0x4c58: pop rbp
0x4c59: jmp 0x1920
0x4c60: mov esi,0x28
0x4c65: call 0x1920
0x4c6a: jmp 0x4c17
0x4c70: push rbp
0x4c71: push rbx
0x4c72: mov ebp,esi
0x4c74: mov esi,0x20
0x4c79: mov rbx,rdi
0x4c7c: sub rsp,0x8
0x4c80: call 0x2e90
0x4c85: add rbx,qword ptr [rip+0x20b57c]
0x4c8c: add rsp,0x8
0x4c90: movsx esi,bpl
0x4c94: mov rdi,rbx
0x4c97: pop rbx
0x4c98: pop rbp
0x4c99: jmp 0x4bf0
0x4ca0: test rdi,rdi
0x4ca3: push r14
0x4ca5: push r13
0x4ca7: push r12
0x4ca9: push rbp
0x4caa: push rbx
0x4cab: je 0x4d47
0x4cb1: cmp qword ptr [rip+0x20b508],rdi
0x4cb8: mov r12,rdi
0x4cbb: jb 0x4d47
0x4cc1: mov rcx,qword ptr [rip+0x20b4e0]
0x4cc8: mov rbx,rdx
0x4ccb: mov qword ptr [rdx],0x0
0x4cd2: test rcx,rcx
0x4cd5: je 0x4d40
0x4cd7: mov r13,rsi
0x4cda: xor edi,edi
0x4cdc: mov ebp,0x1
0x4ce1: jmp 0x4d11
0x4ce8: call 0x17f0
0x4ced: mov edi,dword ptr [rax]
0x4cef: call 0x4490
0x4cf4: mov r14d,eax
0x4cf7: call 0x45e0
0x4cfc: mov rcx,qword ptr [rip+0x20b4a5]
0x4d03: and r14d,eax
0x4d06: and ebp,r14d
0x4d09: test rcx,rcx
0x4d0c: je 0x4d2f
0x4d0e: mov rdi,qword ptr [rbx]
0x4d11: mov r14,r12
0x4d14: mov esi,0x1
0x4d19: sub r14,rdi
0x4d1c: add rdi,r13
0x4d1f: mov rdx,r14
0x4d22: call 0x1870
0x4d27: add qword ptr [rbx],rax
0x4d2a: cmp r14,rax
0x4d2d: jne 0x4ce8
0x4d2f: pop rbx
0x4d30: mov eax,ebp
0x4d32: pop rbp
0x4d33: pop r12
0x4d35: pop r13
0x4d37: pop r14
0x4d39: ret 
0x4d40: mov ebp,0x1
0x4d45: jmp 0x4d2f
0x4d47: lea rcx,[rip+0x7752]
0x4d4e: lea rsi,[rip+0x5f97]
0x4d55: lea rdi,[rip+0x6043]
0x4d5c: mov edx,0x508
0x4d61: call 0x1950
0x4d66: nop word ptr cs:[rax+rax]
0x4dcd: lea rsi,[rip+0x62c4]
0x4dd4: xor edi,edi
0x4dd6: call 0x18b0
0x4ddb: mov rcx,rbx
0x4dde: mov r8,rbx
0x4de1: mov rdx,rbx
0x4de4: mov rsi,rax
0x4de7: mov edi,0x1
0x4dec: xor eax,eax
0x4dee: call 0x1a70
0x4df3: mov rbx,qword ptr [rip+0x20b2ae]
0x4dfa: lea rsi,[rip+0x633f]
0x4e01: mov edx,0x5
0x4e06: xor edi,edi
0x4e08: call 0x18b0
0x4e0d: mov rsi,rbx
0x4e10: mov rdi,rax
0x4e13: call 0x19b0
0x4e18: mov rbx,qword ptr [rip+0x20b289]
0x4e1f: lea rsi,[rip+0x63d2]
0x4e26: mov edx,0x5
0x4e2b: xor edi,edi
0x4e2d: call 0x18b0
0x4e32: mov rsi,rbx
0x4e35: mov rdi,rax
0x4e38: call 0x19b0
0x4e3d: mov rbx,qword ptr [rip+0x20b264]
0x4e44: lea rsi,[rip+0x63e5]
0x4e4b: mov edx,0x5
0x4e50: xor edi,edi
0x4e52: call 0x18b0
0x4e57: mov rsi,rbx
0x4e5a: mov rdi,rax
0x4e5d: call 0x19b0
0x4e62: mov rbx,qword ptr [rip+0x20b23f]
0x4e69: lea rsi,[rip+0x6548]
0x4e70: mov edx,0x5
0x4e75: xor edi,edi
0x4e77: call 0x18b0
0x4e7c: mov rsi,rbx
0x4e7f: mov rdi,rax
0x4e82: call 0x19b0
0x4e87: mov rbx,qword ptr [rip+0x20b21a]
0x4e8e: lea rsi,[rip+0x6573]
0x4e95: mov edx,0x5
0x4e9a: xor edi,edi
0x4e9c: call 0x18b0
0x4ea1: mov rsi,rbx
0x4ea4: mov rdi,rax
0x4ea7: call 0x19b0
0x4eac: mov rbx,qword ptr [rip+0x20b1f5]
0x4eb3: lea rsi,[rip+0x666e]
0x4eba: mov edx,0x5
0x4ebf: xor edi,edi
0x4ec1: call 0x18b0
0x4ec6: mov rsi,rbx
0x4ec9: mov rdi,rax
0x4ecc: call 0x19b0
0x4ed1: mov rbx,qword ptr [rip+0x20b1d0]
0x4ed8: lea rsi,[rip+0x6871]
0x4edf: mov edx,0x5
0x4ee4: xor edi,edi
0x4ee6: call 0x18b0
0x4eeb: mov rsi,rbx
0x4eee: mov rdi,rax
0x4ef1: call 0x19b0
0x4ef6: mov rbx,qword ptr [rip+0x20b1ab]
0x4efd: lea rsi,[rip+0x687c]
0x4f04: mov edx,0x5
0x4f09: xor edi,edi
0x4f0b: call 0x18b0
0x4f10: mov rsi,rbx
0x4f13: mov rdi,rax
0x4f16: call 0x19b0
0x4f1b: mov rbx,qword ptr [rip+0x20b186]
0x4f22: lea rsi,[rip+0x688f]
0x4f29: mov edx,0x5
0x4f2e: xor edi,edi
0x4f30: call 0x18b0
0x4f35: mov rsi,rbx
0x4f38: mov rdi,rax
0x4f3b: call 0x19b0
0x4f40: mov rbx,qword ptr [rip+0x20b161]
0x4f47: lea rsi,[rip+0x69aa]
0x4f4e: mov edx,0x5
0x4f53: xor edi,edi
0x4f55: call 0x18b0
0x4f5a: mov rsi,rbx
0x4f5d: mov rdi,rax
0x4f60: call 0x19b0
0x4f65: mov rbx,qword ptr [rip+0x20b13c]
0x4f6c: lea rsi,[rip+0x6a9d]
0x4f73: mov edx,0x5
0x4f78: xor edi,edi
0x4f7a: call 0x18b0
0x4f7f: mov rsi,rbx
0x4f82: mov rdi,rax
0x4f85: call 0x19b0
0x4f8a: mov rbx,qword ptr [rip+0x20b117]
0x4f91: lea rsi,[rip+0x6b20]
0x4f98: mov edx,0x5
0x4f9d: xor edi,edi
0x4f9f: call 0x18b0
0x4fa4: mov rsi,rbx
0x4fa7: mov rdi,rax
0x4faa: call 0x19b0
0x4faf: mov rbx,qword ptr [rip+0x20b0f2]
0x4fb6: lea rsi,[rip+0x6bfb]
0x4fbd: mov edx,0x5
0x4fc2: xor edi,edi
0x4fc4: call 0x18b0
0x4fc9: mov rsi,rbx
0x4fcc: mov rdi,rax
0x4fcf: call 0x19b0
0x4fd4: mov rbx,qword ptr [rip+0x20b0cd]
0x4fdb: lea rsi,[rip+0x6cce]
0x4fe2: mov edx,0x5
0x4fe7: xor edi,edi
0x4fe9: call 0x18b0
0x4fee: mov rsi,rbx
0x4ff1: mov rdi,rax
0x4ff4: call 0x19b0
0x4ff9: mov rbx,qword ptr [rip+0x20b0a8]
0x5000: lea rsi,[rip+0x6d09]
0x5007: mov edx,0x5
0x500c: xor edi,edi
0x500e: call 0x18b0
0x5013: mov rsi,rbx
0x5016: mov rdi,rax
0x5019: lea rbx,[rip+0x5d9d]
0x5020: call 0x19b0
0x5025: lea rax,[rip+0x5d94]
0x502c: lea rcx,[rip+0x5dce]
0x5033: mov qword ptr [rsp+0x60],0x0
0x503c: mov qword ptr [rsp+0x68],0x0
0x5045: mov rdx,rsp
0x5048: mov qword ptr [rsp],rax
0x504c: lea rax,[rip+0x5d6f]
0x5053: mov qword ptr [rsp+0x30],rcx
0x5058: lea rcx,[rip+0x5dac]
0x505f: mov qword ptr [rsp+0x8],rax
0x5064: lea rax,[rip+0x5dcf]
0x506b: mov qword ptr [rsp+0x40],rcx
0x5070: lea rcx,[rip+0x5d9e]
0x5077: mov qword ptr [rsp+0x10],rax
0x507c: lea rax,[rip+0x5d4f]
0x5083: mov qword ptr [rsp+0x50],rcx
0x5088: mov qword ptr [rsp+0x18],rax
0x508d: lea rax,[rip+0x5d54]
0x5094: mov qword ptr [rsp+0x20],rax
0x5099: lea rax,[rip+0x5d52]
0x50a0: mov qword ptr [rsp+0x28],rax
0x50a5: mov qword ptr [rsp+0x38],rax
0x50aa: mov qword ptr [rsp+0x48],rax
0x50af: mov qword ptr [rsp+0x58],rax
0x50b4: nop dword ptr [rax]
0x50b8: add rdx,0x10
0x50bc: mov rdi,qword ptr [rdx]
0x50bf: test rdi,rdi
0x50c2: je 0x50d7
0x50c4: mov ecx,0x3
0x50c9: mov rsi,rbx
0x50cc: rep cmpsb [rsi],es:[rdi]
0x50ce: seta al
0x50d1: sbb al,0x0
0x50d3: test al,al
0x50d5: jne 0x50b8
0x50d7: mov r12,qword ptr [rdx+0x8]
0x50db: xor edi,edi
0x50dd: mov edx,0x5
0x50e2: lea rsi,[rip+0x5d36]
0x50e9: test r12,r12
0x50ec: je 0x51b3
0x50f2: call 0x18b0
0x50f7: lea rcx,[rip+0x6cfa]
0x50fe: lea rdx,[rip+0x5d31]
0x5105: mov rsi,rax
0x5108: mov edi,0x1
0x510d: xor eax,eax
0x510f: call 0x1a70
0x5114: xor esi,esi
0x5116: mov edi,0x5
0x511b: call 0x1a60
0x5120: test rax,rax
0x5123: je 0x5141
0x5125: lea rsi,[rip+0x5d18]
0x512c: mov edx,0x3
0x5131: mov rdi,rax
0x5134: call 0x1800
0x5139: test eax,eax
0x513b: jne 0x5248
0x5141: lea rsi,[rip+0x5d00]
0x5148: xor edi,edi
0x514a: mov edx,0x5
0x514f: call 0x18b0
0x5154: lea rcx,[rip+0x5c62]
0x515b: lea rdx,[rip+0x6c96]
0x5162: mov rsi,rax
0x5165: mov edi,0x1
0x516a: xor eax,eax
0x516c: call 0x1a70
0x5171: cmp r12,rbx
0x5174: lea rcx,[rip+0x5c61]
0x517b: lea rbx,[rip+0x7c3f]
0x5182: cmove rbx,rcx
0x5186: lea rsi,[rip+0x6cdb]
0x518d: xor edi,edi
0x518f: mov edx,0x5
0x5194: call 0x18b0
0x5199: mov rcx,rbx
0x519c: mov rsi,rax
0x519f: mov rdx,r12
0x51a2: mov edi,0x1
0x51a7: xor eax,eax
0x51a9: call 0x1a70
0x51ae: jmp 0x4dc6
0x51b3: call 0x18b0
0x51b8: lea rcx,[rip+0x6c39]
0x51bf: lea rdx,[rip+0x5c70]
0x51c6: mov rsi,rax
0x51c9: mov edi,0x1
0x51ce: xor eax,eax
0x51d0: call 0x1a70
0x51d5: xor esi,esi
0x51d7: mov edi,0x5
0x51dc: call 0x1a60
0x51e1: test rax,rax
0x51e4: je 0x51fe
0x51e6: lea rsi,[rip+0x5c57]
0x51ed: mov edx,0x3
0x51f2: mov rdi,rax
0x51f5: call 0x1800
0x51fa: test eax,eax
0x51fc: jne 0x5241
0x51fe: lea rsi,[rip+0x5c43]
0x5205: mov edx,0x5
0x520a: xor edi,edi
0x520c: lea r12,[rip+0x5baa]
0x5213: lea rbx,[rip+0x5bc2]
0x521a: call 0x18b0
0x521f: lea rcx,[rip+0x5b97]
0x5226: lea rdx,[rip+0x6bcb]
0x522d: mov rsi,rax
0x5230: mov edi,0x1
0x5235: xor eax,eax
0x5237: call 0x1a70
0x523c: jmp 0x5186
0x5241: lea r12,[rip+0x5b75]
0x5248: mov r13,qword ptr [rip+0x20ae59]
0x524f: lea rsi,[rip+0x6bca]
0x5256: xor edi,edi
0x5258: mov edx,0x5
0x525d: call 0x18b0
0x5262: mov rsi,r13
0x5265: mov rdi,rax
0x5268: call 0x19b0
0x526d: jmp 0x5141
0x5280: mov edi,0x1
0x5285: jmp 0x4d70
0x5290: push r15
0x5292: push r14
0x5294: mov r15,rsi
0x5297: push r13
0x5299: push r12
0x529b: mov r13,rcx
0x529e: push rbp
0x529f: push rbx
0x52a0: mov rbp,rdx
0x52a3: sub rsp,0x28
0x52a7: mov qword ptr [rsp+0x8],rdi
0x52ac: mov qword ptr [rsp+0x18],rdx
0x52b1: call 0x18d0
0x52b6: mov r14,qword ptr [r15]
0x52b9: mov qword ptr [rsp],-0x1
0x52c1: test r14,r14
0x52c4: je 0x537d
0x52ca: mov r12,rax
0x52cd: mov byte ptr [rsp+0x17],0x0
0x52d2: xor ebx,ebx
0x52d4: jmp 0x5327
0x52e0: mov rax,qword ptr [rsp+0x18]
0x52e5: test rax,rax
0x52e8: je 0x5390
0x52ee: mov rdi,qword ptr [rsp]
0x52f2: mov rdx,r13
0x52f5: mov rsi,rbp
0x52f8: imul rdi,r13
0x52fc: add rdi,rax
0x52ff: call 0x19a0
0x5304: test eax,eax
0x5306: movzx eax,byte ptr [rsp+0x17]
0x530b: mov ecx,0x1
0x5310: cmovne eax,ecx
0x5313: mov byte ptr [rsp+0x17],al
0x5317: add rbx,0x1
0x531b: add rbp,r13
0x531e: mov r14,qword ptr [r15+rbx*8]
0x5322: test r14,r14
0x5325: je 0x5368
0x5327: mov rsi,qword ptr [rsp+0x8]
0x532c: mov rdx,r12
0x532f: mov rdi,r14
0x5332: call 0x1800
0x5337: test eax,eax
0x5339: jne 0x5317
0x533b: mov rdi,r14
0x533e: call 0x18d0
0x5343: cmp rax,r12
0x5346: je 0x53a0
0x5348: cmp qword ptr [rsp],-0x1
0x534d: jne 0x52e0
0x534f: mov qword ptr [rsp],rbx
0x5353: add rbx,0x1
0x5357: add rbp,r13
0x535a: mov r14,qword ptr [r15+rbx*8]
0x535e: test r14,r14
0x5361: jne 0x5327
0x5363: nop dword ptr [rax+rax]
0x5368: cmp byte ptr [rsp+0x17],0x0
0x536d: mov rax,-0x2
0x5374: cmove rax,qword ptr [rsp]
0x5379: mov qword ptr [rsp],rax
0x537d: mov rax,qword ptr [rsp]
0x5381: add rsp,0x28
0x5385: pop rbx
0x5386: pop rbp
0x5387: pop r12
0x5389: pop r13
0x538b: pop r14
0x538d: pop r15
0x538f: ret 
0x5390: mov byte ptr [rsp+0x17],0x1
0x5395: jmp 0x5317
0x53a0: mov qword ptr [rsp],rbx
0x53a4: jmp 0x537d
0x53b0: cmp rdx,-0x1
0x53b4: push r12
0x53b6: mov edx,0x5
0x53bb: push rbp
0x53bc: mov r12,rsi
0x53bf: push rbx
0x53c0: mov rbp,rdi
0x53c3: je 0x5410
0x53c5: lea rsi,[rip+0x73d8]
0x53cc: xor edi,edi
0x53ce: call 0x18b0
0x53d3: mov rbx,rax
0x53d6: mov rsi,rbp
0x53d9: mov edi,0x1
0x53de: call 0x7800
0x53e3: mov rdx,r12
0x53e6: mov rbp,rax
0x53e9: mov esi,0x8
0x53ee: xor edi,edi
0x53f0: call 0x7430
0x53f5: mov r8,rbp
0x53f8: mov rdx,rbx
0x53fb: mov rcx,rax
0x53fe: pop rbx
0x53ff: pop rbp
0x5400: pop r12
0x5402: xor esi,esi
0x5404: xor edi,edi
0x5406: xor eax,eax
0x5408: jmp 0x1aa0
0x5410: lea rsi,[rip+0x7372]
0x5417: xor edi,edi
0x5419: call 0x18b0
0x541e: mov rbx,rax
0x5421: jmp 0x53d6
0x5430: push r15
0x5432: push r14
0x5434: mov r14,rdi
0x5437: push r13
0x5439: push r12
0x543b: xor edi,edi
0x543d: push rbp
0x543e: push rbx
0x543f: mov rbp,rsi
0x5442: lea rsi,[rip+0x7378]
0x5449: mov r12,rdx
0x544c: mov edx,0x5
0x5451: sub rsp,0x8
0x5455: mov rbx,qword ptr [rip+0x20ac84]
0x545c: call 0x18b0
0x5461: mov rdi,rax
0x5464: mov rsi,rbx
0x5467: call 0x19b0
0x546c: mov r15,qword ptr [r14]
0x546f: test r15,r15
0x5472: je 0x5508
0x5478: xor r13d,r13d
0x547b: xor ebx,ebx
0x547d: jmp 0x54b8
0x5480: mov rdi,r15
0x5483: add rbx,0x1
0x5487: mov r13,rbp
0x548a: call 0x7820
0x548f: mov rdi,qword ptr [rip+0x20ac4a]
0x5496: lea rdx,[rip+0x7339]
0x549d: mov rcx,rax
0x54a0: mov esi,0x1
0x54a5: xor eax,eax
0x54a7: add rbp,r12
0x54aa: call 0x1b10
0x54af: mov r15,qword ptr [r14+rbx*8]
0x54b3: test r15,r15
0x54b6: je 0x5508
0x54b8: test rbx,rbx
0x54bb: je 0x5480
0x54bd: mov rdx,r12
0x54c0: mov rsi,rbp
0x54c3: mov rdi,r13
0x54c6: call 0x19a0
0x54cb: test eax,eax
0x54cd: jne 0x5480
0x54cf: mov rdi,r15
0x54d2: add rbx,0x1
0x54d6: add rbp,r12
0x54d9: call 0x7820
0x54de: mov rdi,qword ptr [rip+0x20abfb]
0x54e5: lea rdx,[rip+0x72f2]
0x54ec: mov rcx,rax
0x54ef: mov esi,0x1
0x54f4: xor eax,eax
0x54f6: call 0x1b10
0x54fb: mov r15,qword ptr [r14+rbx*8]
0x54ff: test r15,r15
0x5502: jne 0x54b8
0x5504: nop dword ptr [rax]
0x5508: mov rdi,qword ptr [rip+0x20abd1]
0x550f: mov rax,qword ptr [rdi+0x28]
0x5513: cmp rax,qword ptr [rdi+0x30]
0x5517: jae 0x5538
0x5519: lea rdx,[rax+0x1]
0x551d: mov qword ptr [rdi+0x28],rdx
0x5521: mov byte ptr [rax],0xa
0x5524: add rsp,0x8
0x5528: pop rbx
0x5529: pop rbp
0x552a: pop r12
0x552c: pop r13
0x552e: pop r14
0x5530: pop r15
0x5532: ret 
0x5538: add rsp,0x8
0x553c: mov esi,0xa
0x5541: pop rbx
0x5542: pop rbp
0x5543: pop r12
0x5545: pop r13
0x5547: pop r14
0x5549: pop r15
0x554b: jmp 0x1920
0x5550: push r15
0x5552: push r14
0x5554: mov r14,rdi
0x5557: push r13
0x5559: push r12
0x555b: mov r12,rsi
0x555e: push rbp
0x555f: push rbx
0x5560: mov rbp,rcx
0x5563: mov rbx,rdx
0x5566: mov rcx,r8
0x5569: mov rdx,rbp
0x556c: sub rsp,0x8
0x5570: mov rsi,rbx
0x5573: mov rdi,r12
0x5576: mov r15,r8
0x5579: mov r13,r9
0x557c: call 0x5290
0x5581: test rax,rax
0x5584: js 0x5595
0x5586: add rsp,0x8
0x558a: pop rbx
0x558b: pop rbp
0x558c: pop r12
0x558e: pop r13
0x5590: pop r14
0x5592: pop r15
0x5594: ret 
0x5595: mov rdx,rax
0x5598: mov rsi,r12
0x559b: mov rdi,r14
0x559e: call 0x53b0
0x55a3: mov rdx,r15
0x55a6: mov rsi,rbp
0x55a9: mov rdi,rbx
0x55ac: call 0x5430
0x55b1: call r13
0x55b4: mov rax,-0x1
0x55bb: jmp 0x5586
0x55c0: push r14
0x55c2: push r13
0x55c4: push r12
0x55c6: push rbp
0x55c7: push rbx
0x55c8: mov r14,qword ptr [rsi]
0x55cb: test r14,r14
0x55ce: je 0x5601
0x55d0: mov r12,rcx
0x55d3: mov r13,rdi
0x55d6: mov rbp,rdx
0x55d9: lea rbx,[rsi+0x8]
0x55dd: jmp 0x55ef
0x55e0: mov r14,qword ptr [rbx]
0x55e3: add rbp,r12
0x55e6: add rbx,0x8
0x55ea: test r14,r14
0x55ed: je 0x5601
0x55ef: mov rdx,r12
0x55f2: mov rsi,rbp
0x55f5: mov rdi,r13
0x55f8: call 0x19a0
0x55fd: test eax,eax
0x55ff: jne 0x55e0
0x5601: pop rbx
0x5602: mov rax,r14
0x5605: pop rbp
0x5606: pop r12
0x5608: pop r13
0x560a: pop r14
0x560c: ret 
0x5610: mov qword ptr [rip+0x20ac19],rdi
0x5617: ret 
0x5620: mov byte ptr [rip+0x20ac01],dil
0x5627: ret 
0x5630: push rbp
0x5631: push rbx
0x5632: sub rsp,0x8
0x5636: mov rdi,qword ptr [rip+0x20aa6b]
0x563d: call 0x8ad0
0x5642: test eax,eax
0x5644: je 0x565c
0x5646: call 0x17f0
0x564b: cmp byte ptr [rip+0x20abd6],0x0
0x5652: mov rbx,rax
0x5655: je 0x5673
0x5657: cmp dword ptr [rax],0x20
0x565a: jne 0x5673
0x565c: mov rdi,qword ptr [rip+0x20aa7d]
0x5663: call 0x8ad0
0x5668: test eax,eax
0x566a: jne 0x56b2
0x566c: add rsp,0x8
0x5670: pop rbx
0x5671: pop rbp
0x5672: ret 
0x5673: lea rsi,[rip+0x5704]
0x567a: xor edi,edi
0x567c: mov edx,0x5
0x5681: call 0x18b0
0x5686: mov rdi,qword ptr [rip+0x20aba3]
0x568d: mov rbp,rax
0x5690: test rdi,rdi
0x5693: je 0x56bd
0x5695: call 0x7620
0x569a: mov esi,dword ptr [rbx]
0x569c: lea rdx,[rip+0x7140]
0x56a3: mov rcx,rax
0x56a6: mov r8,rbp
0x56a9: xor edi,edi
0x56ab: xor eax,eax
0x56ad: call 0x1aa0
0x56b2: mov edi,dword ptr [rip+0x20a970]
0x56b8: call 0x1810
0x56bd: mov esi,dword ptr [rbx]
0x56bf: lea rdx,[rip+0x711a]
0x56c6: mov rcx,rax
0x56c9: xor edi,edi
0x56cb: xor eax,eax
0x56cd: call 0x1aa0
0x56d2: jmp 0x56b2
0x56e0: push r15
0x56e2: push r14
0x56e4: mov r14d,ecx
0x56e7: push r13
0x56e9: push r12
0x56eb: mov r12,rdi
0x56ee: push rbp
0x56ef: push rbx
0x56f0: mov rbp,rsi
0x56f3: movapd xmm3,xmm0
0x56f7: sub rsp,0x38
0x56fb: movsd dword ptr [rsp],xmm0
0x5700: pxor xmm0,xmm0
0x5704: mov rax,qword ptr fs:0x28
0x570d: mov qword ptr [rsp+0x28],rax
0x5712: xor eax,eax
0x5714: ucomisd xmm0,xmm3
0x5718: ja 0x5830
0x571e: movsd xmm0,dword ptr [rsp]
0x5723: mov eax,edx
0x5725: lea r13,[rsp+0x1d]
0x572a: mov ecx,edx
0x572c: and eax,0x1
0x572f: shr ecx, 1
0x5731: mov esi,0x2d25
0x5736: lea rdi,[r13+rax+0x1]
0x573b: and ecx,0x1
0x573e: mov eax,edx
0x5740: mov word ptr [rsp+0x1d],si
0x5745: shr eax,0x2
0x5748: mov ebx,0x1
0x574d: lea rsi,[rdi+rcx]
0x5751: and eax,0x1
0x5754: mov byte ptr [rdi],0x2b
0x5757: movsd xmm1,dword ptr [rip+0x70a1]
0x575f: mov edi,0x2e2a
0x5764: lea rcx,[rsi+rax]
0x5768: mov eax,edx
0x576a: and edx,0x10
0x576d: shr eax,0x3
0x5770: mov byte ptr [rsi],0x20
0x5773: mov r15,-0x1
0x577a: and eax,0x1
0x577d: mov byte ptr [rcx],0x30
0x5780: add rax,rcx
0x5783: cmp edx,0x1
0x5786: sbb edx,edx
0x5788: mov word ptr [rax],di
0x578b: mov byte ptr [rax+0x2],0x2a
0x578f: and edx,0x20
0x5792: mov byte ptr [rax+0x4],0x0
0x5796: add edx,0x47
0x5799: ucomisd xmm1,xmm0
0x579d: mov byte ptr [rax+0x3],dl
0x57a0: mov eax,0xf
0x57a5: cmovbe ebx,eax
0x57a8: jmp 0x57b3
0x57b0: add ebx,0x1
0x57b3: sub rsp,0x8
0x57b7: mov rcx,r15
0x57ba: mov edx,0x1
0x57bf: push rbx
0x57c0: mov r9d,r14d
0x57c3: mov r8,r13
0x57c6: mov rsi,rbp
0x57c9: mov rdi,r12
0x57cc: mov eax,0x1
0x57d1: movsd xmm0,dword ptr [rsp+0x10]
0x57d7: call 0x17c0
0x57dc: test eax,eax
0x57de: pop rdx
0x57df: pop rcx
0x57e0: js 0x580a
0x57e2: cmp ebx,0x10
0x57e5: jg 0x580a
0x57e7: movsxd rdx,eax
0x57ea: cmp rdx,rbp
0x57ed: jae 0x57b0
0x57ef: xor esi,esi
0x57f1: mov rdi,r12
0x57f4: mov dword ptr [rsp+0xc],eax
0x57f8: call 0x1850
0x57fd: ucomisd xmm0,[rsp]
0x5802: jp 0x57b0
0x5804: mov eax,dword ptr [rsp+0xc]
0x5808: jne 0x57b0
0x580a: mov rsi,qword ptr [rsp+0x28]
0x580f: xor rsi,qword ptr fs:0x28
0x5818: jne 0x5841
0x581a: add rsp,0x38
0x581e: pop rbx
0x581f: pop rbp
0x5820: pop r12
0x5822: pop r13
0x5824: pop r14
0x5826: pop r15
0x5828: ret 
0x5830: movapd xmm0,xmm3
0x5834: xorpd xmm0,[rip+0x6fb4]
0x583c: jmp 0x5723
0x5841: call 0x18e0
0x5846: nop word ptr cs:[rax+rax]
0x5850: push r15
0x5852: pxor xmm4,xmm4
0x5856: push r14
0x5858: push r13
0x585a: mov r15d,ecx
0x585d: push r12
0x585f: push rbp
0x5860: mov r12,rdi
0x5863: push rbx
0x5864: movaps xmm3,xmm0
0x5867: cvtss2sd xmm4,xmm0
0x586b: mov rbp,rsi
0x586e: sub rsp,0x38
0x5872: movxd [rsp+0xc],xmm0
0x5878: pxor xmm0,xmm0
0x587c: mov rax,qword ptr fs:0x28
0x5885: mov qword ptr [rsp+0x28],rax
0x588a: xor eax,eax
0x588c: movsd dword ptr [rsp],xmm4
0x5891: ucomiss xmm0,xmm3
0x5894: ja 0x59a8
0x589a: movxd xmm0,[rsp+0xc]
0x58a0: mov eax,edx
0x58a2: lea r13,[rsp+0x1d]
0x58a7: mov ecx,edx
0x58a9: and eax,0x1
0x58ac: shr ecx, 1
0x58ae: mov esi,0x2d25
0x58b3: lea rdi,[r13+rax+0x1]
0x58b8: and ecx,0x1
0x58bb: mov eax,edx
0x58bd: mov word ptr [rsp+0x1d],si
0x58c2: shr eax,0x2
0x58c5: mov r14,-0x1
0x58cc: lea rsi,[rdi+rcx]
0x58d0: and eax,0x1
0x58d3: mov byte ptr [rdi],0x2b
0x58d6: movxd xmm1,[rip+0x6f42]
0x58de: mov edi,0x2e2a
0x58e3: lea rcx,[rsi+rax]
0x58e7: mov eax,edx
0x58e9: and edx,0x10
0x58ec: shr eax,0x3
0x58ef: mov byte ptr [rsi],0x20
0x58f2: and eax,0x1
0x58f5: mov byte ptr [rcx],0x30
0x58f8: add rax,rcx
0x58fb: cmp edx,0x1
0x58fe: sbb edx,edx
0x5900: xor ebx,ebx
0x5902: mov word ptr [rax],di
0x5905: and edx,0x20
0x5908: mov byte ptr [rax+0x2],0x2a
0x590c: mov byte ptr [rax+0x4],0x0
0x5910: add edx,0x47
0x5913: ucomiss xmm1,xmm0
0x5916: mov byte ptr [rax+0x3],dl
0x5919: setbe bl
0x591c: lea ebx,[rbx+rbx*4+0x1]
0x5920: jmp 0x592b
0x5928: add ebx,0x1
0x592b: sub rsp,0x8
0x592f: mov rcx,r14
0x5932: mov edx,0x1
0x5937: push rbx
0x5938: mov r9d,r15d
0x593b: mov r8,r13
0x593e: mov rsi,rbp
0x5941: mov rdi,r12
0x5944: mov eax,0x1
0x5949: movsd xmm0,dword ptr [rsp+0x10]
0x594f: call 0x17c0
0x5954: test eax,eax
0x5956: pop rdx
0x5957: pop rcx
0x5958: js 0x5982
0x595a: cmp ebx,0x8
0x595d: jg 0x5982
0x595f: movsxd rdx,eax
0x5962: cmp rdx,rbp
0x5965: jae 0x5928
0x5967: xor esi,esi
0x5969: mov rdi,r12
0x596c: mov dword ptr [rsp+0x8],eax
0x5970: call 0x1970
0x5975: ucomiss xmm0,[rsp+0xc]
0x597a: jp 0x5928
0x597c: mov eax,dword ptr [rsp+0x8]
0x5980: jne 0x5928
0x5982: mov rsi,qword ptr [rsp+0x28]
0x5987: xor rsi,qword ptr fs:0x28
0x5990: jne 0x59b7
0x5992: add rsp,0x38
0x5996: pop rbx
0x5997: pop rbp
0x5998: pop r12
0x599a: pop r13
0x599c: pop r14
0x599e: pop r15
0x59a0: ret 
0x59a8: movaps xmm0,xmm3
0x59ab: xorps xmm0,[rip+0x6e5e]
0x59b2: jmp 0x58a0
0x59b7: call 0x18e0
0x59bc: nop dword ptr [rax]
0x59c0: push r15
0x59c2: push r14
0x59c4: fldz 
0x59c6: push r13
0x59c8: push r12
0x59ca: mov r14d,ecx
0x59cd: push rbp
0x59ce: push rbx
0x59cf: mov r12,rdi
0x59d2: mov rbp,rsi
0x59d5: sub rsp,0x38
0x59d9: fldt [rsp+0x70]
0x59dd: fxch [1+st]
0x59df: mov rax,qword ptr fs:0x28
0x59e8: mov qword ptr [rsp+0x28],rax
0x59ed: xor eax,eax
0x59ef: fucompi [1+st]
0x59f1: ja 0x5b00
0x59f7: fstp [0+st]
0x59f9: fldt [rsp+0x70]
0x59fd: mov eax,0x2d25
0x5a02: lea r13,[rsp+0x1d]
0x5a07: mov ecx,edx
0x5a09: mov word ptr [rsp+0x1d],ax
0x5a0e: mov eax,edx
0x5a10: shr ecx, 1
0x5a12: and eax,0x1
0x5a15: and ecx,0x1
0x5a18: mov ebx,0x1
0x5a1d: lea rdi,[r13+rax+0x1]
0x5a22: mov eax,edx
0x5a24: mov r15,-0x1
0x5a2b: shr eax,0x2
0x5a2e: lea rsi,[rdi+rcx]
0x5a32: and eax,0x1
0x5a35: mov byte ptr [rdi],0x2b
0x5a38: lea rcx,[rsi+rax]
0x5a3c: mov eax,edx
0x5a3e: and edx,0x10
0x5a41: fldt [rip+0x6de9]
0x5a47: shr eax,0x3
0x5a4a: mov byte ptr [rsi],0x20
0x5a4d: mov byte ptr [rcx],0x30
0x5a50: and eax,0x1
0x5a53: add rax,rcx
0x5a56: cmp edx,0x1
0x5a59: sbb edx,edx
0x5a5b: mov dword ptr [rax],0x4c2a2e2a
0x5a61: mov byte ptr [rax+0x5],0x0
0x5a65: and edx,0x20
0x5a68: add edx,0x47
0x5a6b: mov byte ptr [rax+0x4],dl
0x5a6e: mov eax,0x12
0x5a73: fucompi [1+st]
0x5a75: fstp [0+st]
0x5a77: cmovbe ebx,eax
0x5a7a: jmp 0x5a83
0x5a80: add ebx,0x1
0x5a83: push qword ptr [rsp+0x78]
0x5a87: push qword ptr [rsp+0x78]
0x5a8b: xor eax,eax
0x5a8d: mov r9d,r14d
0x5a90: mov r8,r13
0x5a93: mov rcx,r15
0x5a94: mov ecx,edi
0x5a96: sub rsp,0x8
0x5a9a: mov edx,0x1
0x5a9f: mov rsi,rbp
0x5aa2: push rbx
0x5aa3: mov rdi,r12
0x5aa6: call 0x17c0
0x5aab: add rsp,0x20
0x5aaf: test eax,eax
0x5ab1: js 0x5ae0
0x5ab3: cmp ebx,0x14
0x5ab6: jg 0x5ae0
0x5ab8: movsxd rdx,eax
0x5abb: cmp rdx,rbp
0x5abe: jae 0x5a80
0x5ac0: xor esi,esi
0x5ac2: mov rdi,r12
0x5ac5: mov dword ptr [rsp+0xc],eax
0x5ac9: call 0x1a90
0x5ace: fldt [rsp+0x70]
0x5ad2: fxch [1+st]
0x5ad4: fucompi [1+st]
0x5ad6: fstp [0+st]
0x5ad8: jp 0x5a80
0x5ada: mov eax,dword ptr [rsp+0xc]
0x5ade: jne 0x5a80
0x5ae0: mov rsi,qword ptr [rsp+0x28]
0x5ae5: xor rsi,qword ptr fs:0x28
0x5aee: jne 0x5b07
0x5af0: add rsp,0x38
0x5af4: pop rbx
0x5af5: pop rbp
0x5af6: pop r12
0x5af8: pop r13
0x5afa: pop r14
0x5afc: pop r15
0x5afe: ret 
0x5b00: fchs 
0x5b02: jmp 0x59fd
0x5b07: call 0x18e0
0x5b0c: nop dword ptr [rax]
0x5baf: nop 
0x5bb0: push rbp
0x5bb1: push rbx
0x5bb2: mov rbp,rdi
0x5bb5: mov ebx,esi
0x5bb7: sub rsp,0x8
0x5bbb: call 0x8bb0
0x5bc0: movzx edx,byte ptr [rax]
0x5bc3: and edx,-0x21
0x5bc6: cmp dl,0x55
0x5bc9: je 0x5c40
0x5bcb: cmp dl,0x47
0x5bce: je 0x5bf0
0x5bd0: lea rax,[rip+0x6cbc]
0x5bd7: lea rdx,[rip+0x753b]
0x5bde: cmp ebx,0x9
0x5be1: cmovne rax,rdx
0x5be5: add rsp,0x8
0x5be9: pop rbx
0x5bea: pop rbp
0x5beb: ret 
0x5bf0: movzx edx,byte ptr [rax+0x1]
0x5bf4: and edx,-0x21
0x5bf7: cmp dl,0x42
0x5bfa: jne 0x5bd0
0x5bfc: cmp byte ptr [rax+0x2],0x31
0x5c00: jne 0x5bd0
0x5c02: cmp byte ptr [rax+0x3],0x38
0x5c06: jne 0x5bd0
0x5c08: cmp byte ptr [rax+0x4],0x30
0x5c0c: jne 0x5bd0
0x5c0e: cmp byte ptr [rax+0x5],0x33
0x5c12: jne 0x5bd0
0x5c14: cmp byte ptr [rax+0x6],0x30
0x5c18: jne 0x5bd0
0x5c1a: cmp byte ptr [rax+0x7],0x0
0x5c1e: jne 0x5bd0
0x5c20: cmp byte ptr [rbp],0x60
0x5c24: lea rax,[rip+0x6c61]
0x5c2b: lea rdx,[rip+0x6c5e]
0x5c32: cmovne rax,rdx
0x5c36: add rsp,0x8
0x5c3a: pop rbx
0x5c3b: pop rbp
0x5c3c: ret 
0x5c40: movzx edx,byte ptr [rax+0x1]
0x5c44: and edx,-0x21
0x5c47: cmp dl,0x54
0x5c4a: jne 0x5bd0
0x5c4c: movzx edx,byte ptr [rax+0x2]
0x5c50: and edx,-0x21
0x5c53: cmp dl,0x46
0x5c56: jne 0x5bd0
0x5c5c: cmp byte ptr [rax+0x3],0x2d
0x5c60: jne 0x5bd0
0x5c66: cmp byte ptr [rax+0x4],0x38
0x5c6a: jne 0x5bd0
0x5c70: cmp byte ptr [rax+0x5],0x0
0x5c74: jne 0x5bd0
0x5c7a: cmp byte ptr [rbp],0x60
0x5c7e: lea rax,[rip+0x6bff]
0x5c85: lea rdx,[rip+0x6bfc]
0x5c8c: cmovne rax,rdx
0x5c90: add rsp,0x8
0x5c94: pop rbx
0x5c95: pop rbp
0x5c96: ret 
0x5d73: xor r11d,r11d
0x5d76: mov rax,rbp
0x5d79: mov r8d,r12d
0x5d7c: mov rbp,r11
0x5d7f: mov r11,rax
0x5d82: nop word ptr [rax+rax]
0x5d88: cmp r11,rbp
0x5d8b: setne r12b
0x5d8f: cmp r11,-0x1
0x5d93: jne 0x5da2
0x5d95: mov rax,qword ptr [rsp+0x10]
0x5d9a: cmp byte ptr [rax+rbp],0x0
0x5d9e: setne r12b
0x5da2: test r12b,r12b
0x5da5: je 0x6400
0x5dab: cmp dword ptr [rsp+0x8],0x2
0x5db0: mov rdi,qword ptr [rsp+0x10]
0x5db5: lea r9,[rdi+rbp]
0x5db9: setne al
0x5dbc: and al,byte ptr [rsp+0xd]
0x5dc0: mov r10d,eax
0x5dc3: je 0x5e70
0x5dc9: mov rax,qword ptr [rsp+0x18]
0x5dce: test rax,rax
0x5dd1: je 0x6200
0x5dd7: cmp r11,-0x1
0x5ddb: lea rbx,[rbp+rax]
0x5de0: jne 0x5e10
0x5de2: cmp rax,0x1
0x5de6: jbe 0x5e10
0x5de8: mov byte ptr [rsp+0x38],r8b
0x5ded: mov byte ptr [rsp+0x30],r10b
0x5df2: mov qword ptr [rsp+0x28],r9
0x5df7: call 0x18d0
0x5dfc: movzx r8d,byte ptr [rsp+0x38]
0x5e02: movzx r10d,byte ptr [rsp+0x30]
0x5e08: mov r11,rax
0x5e0b: mov r9,qword ptr [rsp+0x28]
0x5e10: cmp rbx,r11
0x5e13: mov byte ptr [rsp+0x28],r10b
0x5e18: ja 0x63d0
0x5e1e: mov rdx,qword ptr [rsp+0x18]
0x5e23: mov rsi,qword ptr [rsp+0x48]
0x5e28: mov rdi,r9
0x5e2b: mov qword ptr [rsp+0x40],r11
0x5e30: mov byte ptr [rsp+0x38],r8b
0x5e35: mov qword ptr [rsp+0x30],r9
0x5e3a: call 0x19a0
0x5e3f: test eax,eax
0x5e41: mov r9,qword ptr [rsp+0x30]
0x5e46: movzx r8d,byte ptr [rsp+0x38]
0x5e4c: mov r11,qword ptr [rsp+0x40]
0x5e51: jne 0x63d0
0x5e57: cmp byte ptr [rsp+0xf],0x0
0x5e5c: movzx r10d,byte ptr [rsp+0x28]
0x5e62: jne 0x6de5
0x5e68: nop dword ptr [rax+rax]
0x5e70: movzx ebx,byte ptr [r9]
0x5e74: cmp bl,0x7e
0x5e77: ja 0x6198
0x5e7d: lea rcx,[rip+0x6aa8]
0x5e84: movzx edx,bl
0x5e87: movsxd rax,dword ptr [rcx+rdx*4]
0x5e8b: add rax,rcx
0x5e8e: jmp rax
0x5ec8: cmp byte ptr [rsp+0xd],0x1
0x5ecd: jne 0x5fe2
0x5ed3: test dl,dl
0x5ed5: jne 0x5fe2
0x5edb: mov rsi,qword ptr [rsp+0x20]
0x5ee0: test rsi,rsi
0x5ee3: je 0x5ef9
0x5ee5: mov edx,ebx
0x5ee7: shr dl,0x5
0x5eea: movzx edx,dl
0x5eed: mov edx,dword ptr [rsi+rdx*4]
0x5ef0: btl edx,ebx
0x5ef3: jb 0x6043
0x5ef9: test r10b,r10b
0x5efc: jne 0x6043
0x5f02: xor eax,0x1
0x5f05: add rbp,0x1
0x5f09: and eax,r8d
0x5f0c: test al,al
0x5f0e: je 0x5f30
0x5f10: cmp r13,r15
0x5f13: jbe 0x5f1a
0x5f15: mov byte ptr [r14+r15],0x27
0x5f1a: lea rax,[r15+0x1]
0x5f1e: cmp r13,rax
0x5f21: jbe 0x5f29
0x5f23: mov byte ptr [r14+r15+0x1],0x27
0x5f29: add r15,0x2
0x5f2d: xor r8d,r8d
0x5f30: cmp r15,r13
0x5f33: jae 0x5f39
0x5f35: mov byte ptr [r14+r15],bl
0x5f39: movzx edi,byte ptr [rsp+0xe]
0x5f3e: add r15,0x1
0x5f42: mov eax,0x0
0x5f47: test r12b,r12b
0x5f4a: cmove edi,eax
0x5f4d: mov byte ptr [rsp+0xe],dil
0x5f52: jmp 0x5d88
0x5fe2: cmp byte ptr [rsp+0xf],0x0
0x5fe7: jne 0x5edb
0x5fed: jmp 0x5ef9
0x6043: cmp dword ptr [rsp+0x8],0x2
0x6048: sete dl
0x604b: cmp byte ptr [rsp+0xf],0x0
0x6050: mov eax,edx
0x6052: jne 0x68a8
0x6058: mov eax,r8d
0x605b: xor eax,0x1
0x605e: and al,dl
0x6060: je 0x6091
0x6062: cmp r13,r15
0x6065: jbe 0x606c
0x6067: mov byte ptr [r14+r15],0x27
0x606c: lea rdx,[r15+0x1]
0x6070: cmp r13,rdx
0x6073: jbe 0x607b
0x6075: mov byte ptr [r14+r15+0x1],0x24
0x607b: lea rdx,[r15+0x2]
0x607f: cmp r13,rdx
0x6082: jbe 0x608a
0x6084: mov byte ptr [r14+r15+0x2],0x27
0x608a: add r15,0x3
0x608e: mov r8d,eax
0x6091: cmp r13,r15
0x6094: jbe 0x609b
0x6096: mov byte ptr [r14+r15],0x5c
0x609b: add r15,0x1
0x609f: add rbp,0x1
0x60a3: jmp 0x5f30
0x6190: xor r10d,r10d
0x6193: nop dword ptr [rax+rax]
0x6198: cmp qword ptr [rsp+0x58],0x1
0x619e: jne 0x6548
0x61a4: mov qword ptr [rsp+0x38],r11
0x61a9: mov byte ptr [rsp+0x30],r8b
0x61ae: mov byte ptr [rsp+0x28],r10b
0x61b3: call 0x1b40
0x61b8: mov rcx,qword ptr [rax]
0x61bb: movzx edx,bl
0x61be: movzx r10d,byte ptr [rsp+0x28]
0x61c4: movzx r8d,byte ptr [rsp+0x30]
0x61ca: mov r11,qword ptr [rsp+0x38]
0x61cf: mov edi,0x1
0x61d4: movzx eax,word ptr [rcx+rdx*2]
0x61d8: and ax,0x4000
0x61dc: setne r12b
0x61e0: sete al
0x61e3: and al,byte ptr [rsp+0xd]
0x61e7: test al,al
0x61e9: jne 0x6b81
0x61ef: cmp dword ptr [rsp+0x8],0x2
0x61f4: sete dl
0x61f7: jmp 0x5ec8
0x6200: movzx ebx,byte ptr [r9]
0x6204: cmp bl,0x7e
0x6207: ja 0x6190
0x6209: lea rcx,[rip+0x6918]
0x6210: movzx edx,bl
0x6213: movsxd rax,dword ptr [rcx+rdx*4]
0x6217: add rax,rcx
0x621a: jmp rax
0x63d0: xor r10d,r10d
0x63d3: jmp 0x5e70
0x6400: cmp dword ptr [rsp+0x8],0x2
0x6405: movzx ebx,byte ptr [rsp+0xf]
0x640a: mov r12d,r8d
0x640d: mov rbp,r11
0x6410: sete dl
0x6413: mov eax,ebx
0x6415: test r15,r15
0x6418: sete cl
0x641b: and eax,edx
0x641d: and al,cl
0x641f: jne 0x6e86
0x6425: mov eax,ebx
0x6427: xor eax,0x1
0x642a: and dl,al
0x642c: je 0x6d9c
0x6432: cmp byte ptr [rsp+0x7c],0x0
0x6437: je 0x6d9a
0x643d: cmp byte ptr [rsp+0xe],0x0
0x6442: jne 0x6e3d
0x6448: test r13,r13
0x644b: sete al
0x644e: cmp qword ptr [rsp+0x50],0x0
0x6454: setne dl
0x6457: and al,dl
0x6459: je 0x6e7c
0x645f: mov r13,qword ptr [rsp+0x50]
0x6464: lea rbx,[rip+0x6cae]
0x646b: mov byte ptr [r14],0x27
0x646f: mov dword ptr [rsp+0x8],0x2
0x6477: mov r15d,0x1
0x647d: mov qword ptr [rsp+0x18],0x1
0x6486: mov byte ptr [rsp+0xf],0x0
0x648b: mov qword ptr [rsp+0x48],rbx
0x6490: mov byte ptr [rsp+0x7c],al
0x6494: jmp 0x5d73
0x6548: lea rax,[rsp+0xa0]
0x6550: cmp r11,-0x1
0x6554: mov qword ptr [rsp+0xa0],0x0
0x6560: mov qword ptr [rsp+0x28],rax
0x6565: jne 0x6594
0x6567: mov rdi,qword ptr [rsp+0x10]
0x656c: mov byte ptr [rsp+0x40],r8b
0x6571: mov byte ptr [rsp+0x38],r10b
0x6576: mov qword ptr [rsp+0x30],r9
0x657b: call 0x18d0
0x6580: movzx r8d,byte ptr [rsp+0x40]
0x6586: movzx r10d,byte ptr [rsp+0x38]
0x658c: mov r11,rax
0x658f: mov r9,qword ptr [rsp+0x30]
0x6594: lea rax,[rsp+0x9c]
0x659c: xor ecx,ecx
0x659e: mov byte ptr [rsp+0x7e],bl
0x65a2: mov byte ptr [rsp+0x7d],r8b
0x65a7: mov rbx,rcx
0x65aa: mov qword ptr [rsp+0x88],r9
0x65b2: mov qword ptr [rsp+0x38],rax
0x65b7: mov byte ptr [rsp+0x7f],r10b
0x65bc: mov qword ptr [rsp+0x80],r15
0x65c4: mov qword ptr [rsp+0x40],r14
0x65c9: mov qword ptr [rsp+0x70],r13
0x65ce: mov qword ptr [rsp+0x30],r11
0x65d3: mov rax,qword ptr [rsp+0x10]
0x65d8: lea r14,[rbp+rbx]
0x65dd: mov rdx,qword ptr [rsp+0x30]
0x65e2: mov rcx,qword ptr [rsp+0x28]
0x65e7: mov rdi,qword ptr [rsp+0x38]
0x65ec: lea r13,[rax+r14]
0x65f0: sub rdx,r14
0x65f3: mov rsi,r13
0x65f6: call 0x8920
0x65fb: test rax,rax
0x65fe: mov r15,rax
0x6601: je 0x6651
0x6603: cmp rax,-0x1
0x6607: je 0x6c25
0x660d: cmp rax,-0x2
0x6611: je 0x6bb1
0x6617: cmp dword ptr [rsp+0x8],0x2
0x661c: sete al
0x661f: and al,byte ptr [rsp+0xf]
0x6623: jne 0x67c0
0x6629: mov edi,dword ptr [rsp+0x9c]
0x6630: call 0x1b30
0x6635: mov rdi,qword ptr [rsp+0x28]
0x663a: test eax,eax
0x663c: mov eax,0x0
0x6641: cmove r12d,eax
0x6645: add rbx,r15
0x6648: call 0x1b20
0x664d: test eax,eax
0x664f: je 0x65d3
0x6651: mov edx,r12d
0x6654: mov rdi,rbx
0x6657: movzx r8d,byte ptr [rsp+0x7d]
0x665d: xor edx,0x1
0x6660: movzx ebx,byte ptr [rsp+0x7e]
0x6665: movzx r10d,byte ptr [rsp+0x7f]
0x666b: and dl,byte ptr [rsp+0xd]
0x666f: mov r15,qword ptr [rsp+0x80]
0x6677: mov r14,qword ptr [rsp+0x40]
0x667c: mov r13,qword ptr [rsp+0x70]
0x6681: mov r11,qword ptr [rsp+0x30]
0x6686: cmp rdi,0x1
0x668a: jbe 0x6c8b
0x6690: mov rcx,rdi
0x6693: xor esi,esi
0x6695: movzx r9d,byte ptr [rsp+0xf]
0x669b: add rcx,rbp
0x669e: mov rdi,qword ptr [rsp+0x10]
0x66a3: jmp 0x675e
0x66b0: cmp dword ptr [rsp+0x8],0x2
0x66b5: sete al
0x66b8: test r9b,r9b
0x66bb: jne 0x6b70
0x66c1: mov esi,r8d
0x66c4: xor esi,0x1
0x66c7: and al,sil
0x66ca: je 0x66fb
0x66cc: cmp r13,r15
0x66cf: jbe 0x66d6
0x66d1: mov byte ptr [r14+r15],0x27
0x66d6: lea rsi,[r15+0x1]
0x66da: cmp r13,rsi
0x66dd: jbe 0x66e5
0x66df: mov byte ptr [r14+r15+0x1],0x24
0x66e5: lea rsi,[r15+0x2]
0x66e9: cmp r13,rsi
0x66ec: jbe 0x66f4
0x66ee: mov byte ptr [r14+r15+0x2],0x27
0x66f4: add r15,0x3
0x66f8: mov r8d,eax
0x66fb: cmp r13,r15
0x66fe: jbe 0x6705
0x6700: mov byte ptr [r14+r15],0x5c
0x6705: lea rax,[r15+0x1]
0x6709: cmp r13,rax
0x670c: jbe 0x671b
0x670e: mov eax,ebx
0x6710: shr al,0x6
0x6713: add eax,0x30
0x6716: mov byte ptr [r14+r15+0x1],al
0x671b: lea rax,[r15+0x2]
0x671f: cmp r13,rax
0x6722: jbe 0x6734
0x6724: mov eax,ebx
0x6726: shr al,0x3
0x6729: and eax,0x7
0x672c: add eax,0x30
0x672f: mov byte ptr [r14+r15+0x2],al
0x6734: and ebx,0x7
0x6737: add rbp,0x1
0x673b: add r15,0x3
0x673f: add ebx,0x30
0x6742: cmp rbp,rcx
0x6745: jae 0x5f30
0x674b: mov esi,edx
0x674d: cmp r13,r15
0x6750: jbe 0x6756
0x6752: mov byte ptr [r14+r15],bl
0x6756: movzx ebx,byte ptr [rdi+rbp]
0x675a: add r15,0x1
0x675e: test dl,dl
0x6760: jne 0x66b0
0x6766: mov eax,esi
0x6768: xor eax,0x1
0x676b: and eax,r8d
0x676e: test r10b,r10b
0x6771: je 0x6781
0x6773: cmp r13,r15
0x6776: jbe 0x677d
0x6778: mov byte ptr [r14+r15],0x5c
0x677d: add r15,0x1
0x6781: add rbp,0x1
0x6785: cmp rbp,rcx
0x6788: jae 0x5f0c
0x678e: test al,al
0x6790: je 0x6b8e
0x6796: cmp r13,r15
0x6799: jbe 0x67a0
0x679b: mov byte ptr [r14+r15],0x27
0x67a0: lea rax,[r15+0x1]
0x67a4: cmp r13,rax
0x67a7: jbe 0x67af
0x67a9: mov byte ptr [r14+r15+0x1],0x27
0x67af: add r15,0x2
0x67b3: xor r10d,r10d
0x67b6: xor r8d,r8d
0x67b9: jmp 0x674d
0x67c0: cmp r15,0x1
0x67c4: je 0x6629
0x67ca: mov rdi,qword ptr [rsp+0x10]
0x67cf: lea rcx,[rdi+r15]
0x67d3: lea rdx,[rdi+r14+0x1]
0x67d8: lea r8,[rcx+r14]
0x67dc: jmp 0x67ed
0x67e0: add rdx,0x1
0x67e4: cmp r8,rdx
0x67e7: je 0x6629
0x67ed: movzx ecx,byte ptr [rdx]
0x67f0: sub ecx,0x5b
0x67f3: cmp cl,0x21
0x67f6: ja 0x67e0
0x67f8: mov esi,0x1
0x67fd: shl rsi,cl
0x6800: mov rcx,rsi
0x6803: movabsq rsi,0x20000002b
0x680d: test rcx,rsi
0x6810: je 0x67e0
0x6812: mov r14,qword ptr [rsp+0x40]
0x6817: mov r13,qword ptr [rsp+0x70]
0x681c: mov rbp,qword ptr [rsp+0x30]
0x6821: mov dword ptr [rsp+0x8],0x2
0x6829: cmp byte ptr [rsp+0xd],0x0
0x682e: je 0x6840
0x6830: test al,al
0x6832: mov eax,0x4
0x6837: cmove eax,dword ptr [rsp+0x8]
0x683c: mov dword ptr [rsp+0x8],eax
0x6840: sub rsp,0x8
0x6844: mov rcx,rbp
0x6847: mov rsi,r13
0x684a: push qword ptr [rsp+0x68]
0x684e: push qword ptr [rsp+0x78]
0x6852: mov rdi,r14
0x6855: push 0x0
0x6857: mov r9d,dword ptr [rsp+0x98]
0x685f: mov r8d,dword ptr [rsp+0x28]
0x6864: mov rdx,qword ptr [rsp+0x30]
0x6869: and r9d,-0x3
0x686d: call 0x5ca0
0x6872: add rsp,0x20
0x6876: mov r15,rax
0x6879: mov rbx,qword ptr [rsp+0xa8]
0x6881: xor rbx,qword ptr fs:0x28
0x688a: mov rax,r15
0x688d: jne 0x6e93
0x6893: add rsp,0xb8
0x689a: pop rbx
0x689b: pop rbp
0x689c: pop r12
0x689e: pop r13
0x68a0: pop r14
0x68a2: pop r15
0x68a4: ret 
0x68a8: mov rbp,r11
0x68ab: jmp 0x6829
0x6911: test r13,r13
0x6914: jne 0x6eaa
0x691a: lea rax,[rip+0x67f8]
0x6921: mov qword ptr [rsp+0x50],0x0
0x692a: mov byte ptr [rsp+0xe],0x1
0x692f: mov byte ptr [rsp+0x7c],0x0
0x6934: xor r12d,r12d
0x6937: mov byte ptr [rsp+0xf],0x0
0x693c: mov qword ptr [rsp+0x18],0x1
0x6945: mov qword ptr [rsp+0x48],rax
0x694a: mov r15d,0x1
0x6950: mov dword ptr [rsp+0x8],0x2
0x6958: jmp 0x5d73
0x6b70: movzx ebx,byte ptr [rsp+0xf]
0x6b75: mov rbp,r11
0x6b78: mov byte ptr [rsp+0xd],bl
0x6b7c: jmp 0x6829
0x6b81: movzx edx,byte ptr [rsp+0xd]
0x6b86: xor r12d,r12d
0x6b89: jmp 0x6690
0x6b8e: xor r10d,r10d
0x6b91: jmp 0x674d
0x6bb1: mov r11,qword ptr [rsp+0x30]
0x6bb6: mov rsi,r14
0x6bb9: mov rcx,r13
0x6bbc: mov rax,rbx
0x6bbf: mov rdi,rbx
0x6bc2: movzx r8d,byte ptr [rsp+0x7d]
0x6bc8: movzx ebx,byte ptr [rsp+0x7e]
0x6bcd: mov r9,qword ptr [rsp+0x88]
0x6bd5: cmp rsi,r11
0x6bd8: movzx r10d,byte ptr [rsp+0x7f]
0x6bde: mov r15,qword ptr [rsp+0x80]
0x6be6: mov r14,qword ptr [rsp+0x40]
0x6beb: mov r13,qword ptr [rsp+0x70]
0x6bf0: jae 0x6c18
0x6bf2: cmp byte ptr [rcx],0x0
0x6bf5: jne 0x6c07
0x6bf7: jmp 0x6c18
0x6c00: cmp byte ptr [r9+rax],0x0
0x6c05: je 0x6c15
0x6c07: add rax,0x1
0x6c0b: lea rdx,[rbp+rax]
0x6c10: cmp r11,rdx
0x6c13: ja 0x6c00
0x6c15: mov rdi,rax
0x6c18: movzx edx,byte ptr [rsp+0xd]
0x6c1d: xor r12d,r12d
0x6c20: jmp 0x6686
0x6c25: mov rdi,rbx
0x6c28: movzx r8d,byte ptr [rsp+0x7d]
0x6c2e: movzx ebx,byte ptr [rsp+0x7e]
0x6c33: movzx r10d,byte ptr [rsp+0x7f]
0x6c39: mov r15,qword ptr [rsp+0x80]
0x6c41: xor r12d,r12d
0x6c44: mov r14,qword ptr [rsp+0x40]
0x6c49: mov r13,qword ptr [rsp+0x70]
0x6c4e: mov r11,qword ptr [rsp+0x30]
0x6c53: movzx edx,byte ptr [rsp+0xd]
0x6c58: jmp 0x6686
0x6c8b: mov eax,edx
0x6c8d: jmp 0x61e7
0x6d9a: mov eax,edx
0x6d9c: mov rbx,qword ptr [rsp+0x48]
0x6da1: test rbx,rbx
0x6da4: je 0x6dd2
0x6da6: test al,al
0x6da8: je 0x6dd2
0x6daa: movzx ecx,byte ptr [rbx]
0x6dad: mov rax,rbx
0x6db0: test cl,cl
0x6db2: je 0x6dd2
0x6db4: mov rdx,r15
0x6db7: sub rax,r15
0x6dba: cmp r13,rdx
0x6dbd: jbe 0x6dc3
0x6dbf: mov byte ptr [r14+rdx],cl
0x6dc3: add rdx,0x1
0x6dc7: movzx ecx,byte ptr [rax+rdx]
0x6dcb: test cl,cl
0x6dcd: jne 0x6dba
0x6dcf: mov r15,rdx
0x6dd2: cmp r13,r15
0x6dd5: jbe 0x6879
0x6ddb: mov byte ptr [r14+r15],0x0
0x6de0: jmp 0x6879
0x6de5: cmp dword ptr [rsp+0x8],0x2
0x6dea: movzx ebx,byte ptr [rsp+0xf]
0x6def: mov rbp,r11
0x6df2: sete al
0x6df5: mov byte ptr [rsp+0xd],bl
0x6df9: jmp 0x6829
0x6e3d: sub rsp,0x8
0x6e41: mov r8d,0x5
0x6e47: mov rcx,r11
0x6e4a: push qword ptr [rsp+0x68]
0x6e4e: push qword ptr [rsp+0x78]
0x6e52: mov rdi,r14
0x6e55: push qword ptr [rsp+0x38]
0x6e59: mov r9d,dword ptr [rsp+0x98]
0x6e61: mov rdx,qword ptr [rsp+0x30]
0x6e66: mov rsi,qword ptr [rsp+0x70]
0x6e6b: call 0x5ca0
0x6e70: add rsp,0x20
0x6e74: mov r15,rax
0x6e77: jmp 0x6879
0x6e7c: movzx eax,byte ptr [rsp+0x7c]
0x6e81: jmp 0x6d9c
0x6e86: mov dword ptr [rsp+0x8],0x2
0x6e8e: jmp 0x6829
0x6e93: call 0x18e0
0x6e98: mov byte ptr [rsp+0xd],0x0
0x6e9d: jmp 0x6911
0x6eaa: mov byte ptr [rsp+0xe],0x1
0x6eaf: xor eax,eax
0x6eb1: xor r12d,r12d
0x6eb4: mov qword ptr [rsp+0x50],0x0
0x6ebd: jmp 0x6464
0x6ed4: nop 
0x6ed6: nop word ptr cs:[rax+rax]
0x6fcc: add rsp,0x20
0x6fd0: mov r11,qword ptr [rsp+0x10]
0x6fd5: cmp r11,rax
0x6fd8: ja 0x7041
0x6fda: lea rsi,[rax+0x1]
0x6fde: lea rax,[rip+0x20925b]
0x6fe5: cmp r12,rax
0x6fe8: mov qword ptr [rbx],rsi
0x6feb: je 0x6fff
0x6fed: mov rdi,r12
0x6ff0: mov qword ptr [rsp+0x10],rsi
0x6ff5: call 0x17d0
0x6ffa: mov rsi,qword ptr [rsp+0x10]
0x6fff: mov rdi,rsi
0x7002: mov qword ptr [rsp+0x10],rsi
0x7007: call 0x7e60
0x700c: sub rsp,0x8
0x7010: mov qword ptr [rbx+0x8],rax
0x7014: mov r8d,dword ptr [rbp]
0x7018: push qword ptr [rbp+0x30]
0x701b: push qword ptr [rbp+0x28]
0x701e: mov rcx,r14
0x7021: push r15
0x7023: mov r9d,dword ptr [rsp+0x3c]
0x7028: mov rdi,rax
0x702b: mov rdx,qword ptr [rsp+0x28]
0x7030: mov rsi,qword ptr [rsp+0x30]
0x7035: mov r12,rax
0x7038: call 0x5ca0
0x703d: add rsp,0x20
0x7041: mov eax,dword ptr [rsp+0x18]
0x7045: mov dword ptr [r13],eax
0x7049: add rsp,0x28
0x704d: mov rax,r12
0x7050: pop rbx
0x7051: pop rbp
0x7052: pop r12
0x7054: pop r13
0x7056: pop r14
0x7058: pop r15
0x705a: ret 
0x7081: call 0x17e0
0x7086: call 0x80b0
0x708b: nop dword ptr [rax+rax]
0x7090: push r12
0x7092: push rbp
0x7093: push rbx
0x7094: mov rbx,rdi
0x7097: call 0x17f0
0x709c: mov r12d,dword ptr [rax]
0x709f: mov rbp,rax
0x70a2: lea rax,[rip+0x209297]
0x70a9: test rbx,rbx
0x70ac: mov esi,0x38
0x70b1: cmove rbx,rax
0x70b5: mov rdi,rbx
0x70b8: call 0x8060
0x70bd: mov dword ptr [rbp],r12d
0x70c1: pop rbx
0x70c2: pop rbp
0x70c3: pop r12
0x70c5: ret 
0x70d0: lea rax,[rip+0x209269]
0x70d7: test rdi,rdi
0x70da: cmove rdi,rax
0x70de: mov eax,dword ptr [rdi]
0x70e0: ret 
0x70f0: lea rax,[rip+0x209249]
0x70f7: test rdi,rdi
0x70fa: cmove rdi,rax
0x70fe: mov dword ptr [rdi],esi
0x7100: ret 
0x7110: lea rax,[rip+0x209229]
0x7117: test rdi,rdi
0x711a: mov ecx,esi
0x711c: cmove rdi,rax
0x7120: mov eax,esi
0x7122: and ecx,0x1f
0x7125: shr al,0x5
0x7128: movzx eax,al
0x712b: lea rdi,[rdi+rax*4+0x8]
0x7130: mov esi,dword ptr [rdi]
0x7132: mov eax,esi
0x7134: shr eax,cl
0x7136: xor edx,eax
0x7138: and eax,0x1
0x713b: and edx,0x1
0x713e: shl edx,cl
0x7140: xor edx,esi
0x7142: mov dword ptr [rdi],edx
0x7144: ret 
0x7150: lea rax,[rip+0x2091e9]
0x7157: test rdi,rdi
0x715a: cmove rdi,rax
0x715e: mov eax,dword ptr [rdi+0x4]
0x7161: mov dword ptr [rdi+0x4],esi
0x7164: ret 
0x7170: lea rax,[rip+0x2091c9]
0x7177: test rdi,rdi
0x717a: cmove rdi,rax
0x717e: test rsi,rsi
0x7181: mov dword ptr [rdi],0xa
0x7187: je 0x7197
0x7189: test rdx,rdx
0x718c: je 0x7197
0x718e: mov qword ptr [rdi+0x28],rsi
0x7192: mov qword ptr [rdi+0x30],rdx
0x7196: ret 
0x7197: sub rsp,0x8
0x719b: call 0x17e0
0x71a0: push r15
0x71a2: push r14
0x71a4: lea rax,[rip+0x209195]
0x71ab: push r13
0x71ad: push r12
0x71af: mov r13,rdi
0x71b2: push rbp
0x71b3: push rbx
0x71b4: mov rbx,r8
0x71b7: mov r14,rsi
0x71ba: mov r15,rdx
0x71bd: sub rsp,0x18
0x71c1: test r8,r8
0x71c4: cmove rbx,rax
0x71c8: mov qword ptr [rsp+0x8],rcx
0x71cd: call 0x17f0
0x71d2: mov r12d,dword ptr [rax]
0x71d5: mov rbp,rax
0x71d8: lea rax,[rbx+0x8]
0x71dc: sub rsp,0x8
0x71e0: mov r9d,dword ptr [rbx+0x4]
0x71e4: push qword ptr [rbx+0x30]
0x71e7: mov r8d,dword ptr [rbx]
0x71ea: push qword ptr [rbx+0x28]
0x71ed: mov rdx,r15
0x71f0: push rax
0x71f1: mov rcx,qword ptr [rsp+0x28]
0x71f6: mov rsi,r14
0x71f9: mov rdi,r13
0x71fc: call 0x5ca0
0x7201: mov dword ptr [rbp],r12d
0x7205: add rsp,0x38
0x7209: pop rbx
0x720a: pop rbp
0x720b: pop r12
0x720d: pop r13
0x720f: pop r14
0x7211: pop r15
0x7213: ret 
0x7220: push r15
0x7222: push r14
0x7224: lea rax,[rip+0x209115]
0x722b: push r13
0x722d: push r12
0x722f: mov r12,rdx
0x7232: push rbp
0x7233: push rbx
0x7234: mov rbx,rcx
0x7237: mov r14,rdi
0x723a: mov r15,rsi
0x723d: sub rsp,0x38
0x7241: test rcx,rcx
0x7244: cmove rbx,rax
0x7248: xor ebp,ebp
0x724a: call 0x17f0
0x724f: test r12,r12
0x7252: mov r13,rax
0x7255: mov eax,dword ptr [rax]
0x7257: sete bpl
0x725b: or ebp,dword ptr [rbx+0x4]
0x725e: lea r10,[rbx+0x8]
0x7262: sub rsp,0x8
0x7266: mov r8d,dword ptr [rbx]
0x7269: mov rcx,r15
0x726c: mov dword ptr [rsp+0x14],eax
0x7270: push qword ptr [rbx+0x30]
0x7273: mov rdx,r14
0x7276: push qword ptr [rbx+0x28]
0x7279: push r10
0x727b: xor esi,esi
0x727d: mov r9d,ebp
0x7280: xor edi,edi
0x7282: mov qword ptr [rsp+0x40],r10
0x7287: call 0x5ca0
0x728c: lea rsi,[rax+0x1]
0x7290: mov qword ptr [rsp+0x48],rax
0x7295: add rsp,0x20
0x7299: mov rdi,rsi
0x729c: mov qword ptr [rsp+0x18],rsi
0x72a1: call 0x7e60
0x72a6: mov qword ptr [rsp+0x10],rax
0x72ab: sub rsp,0x8
0x72af: push qword ptr [rbx+0x30]
0x72b2: push qword ptr [rbx+0x28]
0x72b5: mov r10,qword ptr [rsp+0x38]
0x72ba: mov r9d,ebp
0x72bd: mov r8d,dword ptr [rbx]
0x72c0: mov rcx,r15
0x72c3: mov rdx,r14
0x72c6: mov rdi,rax
0x72c9: push r10
0x72cb: mov rsi,qword ptr [rsp+0x38]
0x72d0: call 0x5ca0
0x72d5: mov eax,dword ptr [rsp+0x2c]
0x72d9: add rsp,0x20
0x72dd: test r12,r12
0x72e0: mov dword ptr [r13],eax
0x72e4: je 0x72ef
0x72e6: mov r11,qword ptr [rsp+0x28]
0x72eb: mov qword ptr [r12],r11
0x72ef: mov rax,qword ptr [rsp+0x10]
0x72f4: add rsp,0x38
0x72f8: pop rbx
0x72f9: pop rbp
0x72fa: pop r12
0x72fc: pop r13
0x72fe: pop r14
0x7300: pop r15
0x7302: ret 
0x7310: mov rcx,rdx
0x7313: xor edx,edx
0x7315: jmp 0x7220
0x7320: mov eax,dword ptr [rip+0x208d52]
0x7326: push r12
0x7328: mov r12,qword ptr [rip+0x208d51]
0x732f: push rbp
0x7330: push rbx
0x7331: cmp eax,0x1
0x7334: jle 0x7361
0x7336: sub eax,0x2
0x7339: lea rbx,[r12+0x18]
0x733e: shl rax,0x4
0x7342: lea rbp,[r12+rax+0x28]
0x7347: nop word ptr [rax+rax]
0x7350: mov rdi,qword ptr [rbx]
0x7353: add rbx,0x10
0x7357: call 0x17d0
0x735c: cmp rbx,rbp
0x735f: jne 0x7350
0x7361: mov rdi,qword ptr [r12+0x8]
0x7366: lea rbx,[rip+0x208ed3]
0x736d: cmp rdi,rbx
0x7370: je 0x7389
0x7372: call 0x17d0
0x7377: mov qword ptr [rip+0x208d0e],0x100
0x7382: mov qword ptr [rip+0x208d0f],rbx
0x7389: lea rbx,[rip+0x208d00]
0x7390: cmp r12,rbx
0x7393: je 0x73a4
0x7395: mov rdi,r12
0x7398: call 0x17d0
0x739d: mov qword ptr [rip+0x208cdc],rbx
0x73a4: pop rbx
0x73a5: mov dword ptr [rip+0x208cc9],0x1
0x73af: pop rbp
0x73b0: pop r12
0x73b2: ret 
0x73c0: lea rcx,[rip+0x208f79]
0x73c7: mov rdx,-0x1
0x73ce: jmp 0x6ee0
0x73e0: lea rcx,[rip+0x208f59]
0x73e7: jmp 0x6ee0
0x73f0: lea rcx,[rip+0x208f49]
0x73f7: mov rsi,rdi
0x73fa: mov rdx,-0x1
0x7401: xor edi,edi
0x7403: jmp 0x6ee0
0x7410: lea rcx,[rip+0x208f29]
0x7417: mov rdx,rsi
0x741a: mov rsi,rdi
0x741d: xor edi,edi
0x741f: jmp 0x6ee0
0x7430: sub rsp,0x48
0x7434: mov rax,rdx
0x7437: mov rdx,qword ptr fs:0x28
0x7440: mov qword ptr [rsp+0x38],rdx
0x7445: xor edx,edx
0x7447: cmp esi,0xa
0x744a: je 0x74b4
0x744c: mov dword ptr [rsp],esi
0x744f: mov rcx,rsp
0x7452: mov rdx,-0x1
0x7459: mov rsi,rax
0x745c: mov qword ptr [rsp+0x4],0x0
0x7465: mov qword ptr [rsp+0xc],0x0
0x746e: mov qword ptr [rsp+0x14],0x0
0x7477: mov qword ptr [rsp+0x1c],0x0
0x7480: mov qword ptr [rsp+0x24],0x0
0x7489: mov qword ptr [rsp+0x2c],0x0
0x7492: mov dword ptr [rsp+0x34],0x0
0x749a: call 0x6ee0
0x749f: mov rcx,qword ptr [rsp+0x38]
0x74a4: xor rcx,qword ptr fs:0x28
0x74ad: jne 0x74b9
0x74af: add rsp,0x48
0x74b3: ret 
0x74b4: call 0x17e0
0x74b9: call 0x18e0
0x74be: nop 
0x74c0: sub rsp,0x48
0x74c4: mov rax,rdx
0x74c7: mov rdx,rcx
0x74ca: mov rcx,qword ptr fs:0x28
0x74d3: mov qword ptr [rsp+0x38],rcx
0x74d8: xor ecx,ecx
0x74da: cmp esi,0xa
0x74dd: je 0x7540
0x74df: mov dword ptr [rsp],esi
0x74e2: mov rcx,rsp
0x74e5: mov rsi,rax
0x74e8: mov qword ptr [rsp+0x4],0x0
0x74f1: mov qword ptr [rsp+0xc],0x0
0x74fa: mov qword ptr [rsp+0x14],0x0
0x7503: mov qword ptr [rsp+0x1c],0x0
0x750c: mov qword ptr [rsp+0x24],0x0
0x7515: mov qword ptr [rsp+0x2c],0x0
0x751e: mov dword ptr [rsp+0x34],0x0
0x7526: call 0x6ee0
0x752b: mov rdx,qword ptr [rsp+0x38]
0x7530: xor rdx,qword ptr fs:0x28
0x7539: jne 0x7545
0x753b: add rsp,0x48
0x753f: ret 
0x7540: call 0x17e0
0x7545: call 0x18e0
0x754a: nop word ptr [rax+rax]
0x7550: mov rdx,rsi
0x7553: mov esi,edi
0x7555: xor edi,edi
0x7557: jmp 0x7430
0x7560: mov rcx,rdx
0x7563: mov rdx,rsi
0x7566: mov esi,edi
0x7568: xor edi,edi
0x756a: jmp 0x74c0
0x7570: sub rsp,0x48
0x7574: mov ecx,edx
0x7576: mov rax,qword ptr fs:0x28
0x757f: mov qword ptr [rsp+0x38],rax
0x7584: xor eax,eax
0x7586: mov rax,qword ptr [rip+0x208de3]
0x758d: mov r8,rsp
0x7590: and ecx,0x1f
0x7593: movdqa xmm0,[rip+0x208da5]
0x759b: mov qword ptr [rsp+0x30],rax
0x75a0: mov eax,edx
0x75a2: movaps [rsp],xmm0
0x75a6: shr al,0x5
0x75a9: movzx eax,al
0x75ac: lea r9,[r8+rax*4+0x8]
0x75b1: movdqa xmm0,[rip+0x208d97]
0x75b9: movaps [rsp+0x10],xmm0
0x75be: movdqa xmm0,[rip+0x208d9a]
0x75c6: movaps [rsp+0x20],xmm0
0x75cb: mov edx,dword ptr [r9]
0x75ce: mov eax,edx
0x75d0: shr eax,cl
0x75d2: not eax
0x75d4: and eax,0x1
0x75d7: shl eax,cl
0x75d9: mov rcx,r8
0x75dc: xor eax,edx
0x75de: mov rdx,rsi
0x75e1: mov rsi,rdi
0x75e4: mov dword ptr [r9],eax
0x75e7: xor edi,edi
0x75e9: call 0x6ee0
0x75ee: mov rsi,qword ptr [rsp+0x38]
0x75f3: xor rsi,qword ptr fs:0x28
0x75fc: jne 0x7603
0x75fe: add rsp,0x48
0x7602: ret 
0x7603: call 0x18e0
0x7608: nop dword ptr [rax+rax]
0x7610: movsx edx,sil
0x7614: mov rsi,-0x1
0x761b: jmp 0x7570
0x7620: mov edx,0x3a
0x7625: mov rsi,-0x1
0x762c: jmp 0x7570
0x7640: mov edx,0x3a
0x7645: jmp 0x7570
0x7650: sub rsp,0x48
0x7654: mov rax,rdx
0x7657: mov rdx,qword ptr fs:0x28
0x7660: mov qword ptr [rsp+0x38],rdx
0x7665: xor edx,edx
0x7667: cmp esi,0xa
0x766a: je 0x76d4
0x766c: mov dword ptr [rsp],esi
0x766f: mov rcx,rsp
0x7672: mov rdx,-0x1
0x7679: mov rsi,rax
0x767c: mov qword ptr [rsp+0x4],0x0
0x7685: mov qword ptr [rsp+0xc],0x4000000
0x768e: mov qword ptr [rsp+0x14],0x0
0x7697: mov qword ptr [rsp+0x1c],0x0
0x76a0: mov qword ptr [rsp+0x24],0x0
0x76a9: mov qword ptr [rsp+0x2c],0x0
0x76b2: mov dword ptr [rsp+0x34],0x0
0x76ba: call 0x6ee0
0x76bf: mov rcx,qword ptr [rsp+0x38]
0x76c4: xor rcx,qword ptr fs:0x28
0x76cd: jne 0x76d9
0x76cf: add rsp,0x48
0x76d3: ret 
0x76d4: call 0x17e0
0x76d9: call 0x18e0
0x76de: nop 
0x76e0: sub rsp,0x48
0x76e4: mov r9,rcx
0x76e7: mov rcx,qword ptr [rip+0x208c82]
0x76ee: movdqa xmm0,[rip+0x208c4a]
0x76f6: mov rax,qword ptr fs:0x28
0x76ff: mov qword ptr [rsp+0x38],rax
0x7704: xor eax,eax
0x7706: movaps [rsp],xmm0
0x770a: test rsi,rsi
0x770d: mov qword ptr [rsp+0x30],rcx
0x7712: mov dword ptr [rsp],0xa
0x7719: movdqa xmm0,[rip+0x208c2f]
0x7721: movaps [rsp+0x10],xmm0
0x7726: movdqa xmm0,[rip+0x208c32]
0x772e: movaps [rsp+0x20],xmm0
0x7733: je 0x7767
0x7735: test rdx,rdx
0x7738: je 0x7767
0x773a: mov qword ptr [rsp+0x28],rsi
0x773f: mov qword ptr [rsp+0x30],rdx
0x7744: mov rcx,rsp
0x7747: mov rdx,r8
0x774a: mov rsi,r9
0x774d: call 0x6ee0
0x7752: mov rdi,qword ptr [rsp+0x38]
0x7757: xor rdi,qword ptr fs:0x28
0x7760: jne 0x776c
0x7762: add rsp,0x48
0x7766: ret 
0x7767: call 0x17e0
0x776c: call 0x18e0
0x7771: nop dword ptr [rax+rax]
0x7776: nop word ptr cs:[rax+rax]
0x7780: mov r8,-0x1
0x7787: jmp 0x76e0
0x7790: mov rcx,rdx
0x7793: mov r8,-0x1
0x779a: mov rdx,rsi
0x779d: mov rsi,rdi
0x77a0: xor edi,edi
0x77a2: jmp 0x76e0
0x77b0: mov r8,rcx
0x77b3: mov rcx,rdx
0x77b6: mov rdx,rsi
0x77b9: mov rsi,rdi
0x77bc: xor edi,edi
0x77be: jmp 0x76e0
0x77d0: lea rcx,[rip+0x208869]
0x77d7: jmp 0x6ee0
0x77e0: lea rcx,[rip+0x208859]
0x77e7: mov rdx,rsi
0x77ea: mov rsi,rdi
0x77ed: xor edi,edi
0x77ef: jmp 0x6ee0
0x7800: lea rcx,[rip+0x208839]
0x7807: mov rdx,-0x1
0x780e: jmp 0x6ee0
0x7840: push r15
0x7842: push r14
0x7844: push r13
0x7846: push r12
0x7848: mov r12,r9
0x784b: push rbp
0x784c: push rbx
0x784d: mov rbp,rdi
0x7850: mov rbx,r8
0x7853: sub rsp,0x28
0x7857: test rsi,rsi
0x785a: je 0x7978
0x7860: mov r8,rdx
0x7863: lea rdx,[rip+0x54fe]
0x786a: mov r9,rcx
0x786d: xor eax,eax
0x786f: mov rcx,rsi
0x7872: mov esi,0x1
0x7877: call 0x1b10
0x787c: lea rsi,[rip+0x54f8]
0x7883: xor edi,edi
0x7885: mov edx,0x5
0x788a: call 0x18b0
0x788f: lea rdx,[rip+0x580a]
0x7896: mov rcx,rax
0x7899: mov r8d,0x7e3
0x789f: mov esi,0x1
0x78a4: mov rdi,rbp
0x78a7: xor eax,eax
0x78a9: call 0x1b10
0x78ae: lea rsi,[rip+0x5553]
0x78b5: xor edi,edi
0x78b7: mov edx,0x5
0x78bc: call 0x18b0
0x78c1: mov rsi,rbp
0x78c4: mov rdi,rax
0x78c7: call 0x19b0
0x78cc: cmp r12,0x9
0x78d0: ja 0x7c10
0x78d6: lea rdx,[rip+0x5787]
0x78dd: movsxd rax,dword ptr [rdx+r12*4]
0x78e1: add rax,rdx
0x78e4: jmp rax
0x7934: mov r9,qword ptr [rsp+0x18]
0x7939: mov rdx,rax
0x793c: mov rcx,rbx
0x793f: mov esi,0x1
0x7944: mov rdi,rbp
0x7947: xor eax,eax
0x7949: push r9
0x794b: push r13
0x794d: push r12
0x794f: push r15
0x7951: push r14
0x7953: mov r9,qword ptr [rsp+0x30]
0x7958: mov r8,qword ptr [rsp+0x38]
0x795d: call 0x1b10
0x7962: add rsp,0x30
0x7966: add rsp,0x28
0x796a: pop rbx
0x796b: pop rbp
0x796c: pop r12
0x796e: pop r13
0x7970: pop r14
0x7972: pop r15
0x7974: ret 
0x7978: mov r8,rcx
0x797b: mov rcx,rdx
0x797e: lea rdx,[rip+0x53ef]
0x7985: mov esi,0x1
0x798a: xor eax,eax
0x798c: call 0x1b10
0x7991: jmp 0x787c
0x79e2: xor edi,edi
0x79e4: call 0x18b0
0x79e9: mov r10,qword ptr [rsp+0x18]
0x79ee: push r10
0x79f0: jmp 0x7934
0x7b8d: push r12
0x7b8f: push r15
0x7b91: push r14
0x7b93: mov r8,qword ptr [rsp+0x20]
0x7b98: mov rcx,rbx
0x7b9b: mov rdx,rax
0x7b9e: mov rdi,rbp
0x7ba1: mov esi,0x1
0x7ba6: xor eax,eax
0x7ba8: call 0x1b10
0x7bad: add rsp,0x20
0x7bb1: add rsp,0x28
0x7bb5: pop rbx
0x7bb6: pop rbp
0x7bb7: pop r12
0x7bb9: pop r13
0x7bbb: pop r14
0x7bbd: pop r15
0x7bbf: ret 
0x7bf9: push r12
0x7bfb: push r15
0x7bfd: push r14
0x7bff: mov r9,qword ptr [rsp+0x28]
0x7c04: jmp 0x7b93
0x7c10: mov r10,qword ptr [rbx+0x40]
0x7c14: mov r9,qword ptr [rbx+0x38]
0x7c18: mov edx,0x5
0x7c1d: mov rax,qword ptr [rbx+0x10]
0x7c21: mov r8,qword ptr [rbx+0x8]
0x7c25: lea rsi,[rip+0x53b4]
0x7c2c: mov r13,qword ptr [rbx+0x30]
0x7c30: mov r12,qword ptr [rbx+0x28]
0x7c34: mov r15,qword ptr [rbx+0x20]
0x7c38: mov r14,qword ptr [rbx+0x18]
0x7c3c: mov qword ptr [rsp+0x18],r10
0x7c41: mov qword ptr [rsp+0x10],r9
0x7c46: mov qword ptr [rsp],rax
0x7c4a: mov qword ptr [rsp+0x8],r8
0x7c4f: mov rbx,qword ptr [rbx]
0x7c52: jmp 0x79e2
0x7c60: xor r9d,r9d
0x7c63: cmp qword ptr [r8],0x0
0x7c67: je 0x7c7b
0x7c69: nop dword ptr [rax]
0x7c70: add r9,0x1
0x7c74: cmp qword ptr [r8+r9*8],0x0
0x7c79: jne 0x7c70
0x7c7b: jmp 0x7840
0x7c80: sub rsp,0x68
0x7c84: mov r10,r8
0x7c87: xor r9d,r9d
0x7c8a: mov rax,qword ptr fs:0x28
0x7c93: mov qword ptr [rsp+0x58],rax
0x7c98: xor eax,eax
0x7c9a: mov r8,rsp
0x7c9d: nop dword ptr [rax]
0x7ca0: mov eax,dword ptr [r10]
0x7ca3: cmp eax,0x2f
0x7ca6: ja 0x7cea
0x7ca8: mov r11d,eax
0x7cab: add r11,qword ptr [r10+0x10]
0x7caf: add eax,0x8
0x7cb2: mov dword ptr [r10],eax
0x7cb5: mov rax,qword ptr [r11]
0x7cb8: test rax,rax
0x7cbb: mov qword ptr [r8+r9*8],rax
0x7cbf: je 0x7ccb
0x7cc1: add r9,0x1
0x7cc5: cmp r9,0xa
0x7cc9: jne 0x7ca0
0x7ccb: call 0x7840
0x7cd0: mov rax,qword ptr [rsp+0x58]
0x7cd5: xor rax,qword ptr fs:0x28
0x7cde: jne 0x7ce5
0x7ce0: add rsp,0x68
0x7ce4: ret 
0x7ce5: call 0x18e0
0x7cea: mov r11,qword ptr [r10+0x8]
0x7cee: lea rax,[r11+0x8]
0x7cf2: mov qword ptr [r10+0x8],rax
0x7cf6: jmp 0x7cb5
0x7d00: push rbp
0x7d01: push rbx
0x7d02: mov r10d,0x20
0x7d08: xor r11d,r11d
0x7d0b: sub rsp,0xb8
0x7d12: mov rax,qword ptr fs:0x28
0x7d1b: mov qword ptr [rsp+0x78],rax
0x7d20: xor eax,eax
0x7d22: lea rax,[rsp+0xd0]
0x7d2a: mov qword ptr [rsp+0xa0],r8
0x7d32: lea rbx,[rsp+0xd0]
0x7d3a: lea r8,[rsp+0x20]
0x7d3f: mov qword ptr [rsp+0xa8],r9
0x7d47: mov dword ptr [rsp+0x8],0x20
0x7d4f: mov qword ptr [rsp+0x10],rax
0x7d54: lea rax,[rsp+0x80]
0x7d5c: xor r9d,r9d
0x7d5f: mov qword ptr [rsp+0x18],rax
0x7d64: mov rbp,rax
0x7d67: nop word ptr [rax+rax]
0x7d70: cmp r10d,0x2f
0x7d74: ja 0x7dcc
0x7d76: mov eax,r10d
0x7d79: mov r11d,0x1
0x7d7f: add r10d,0x8
0x7d83: add rax,rbp
0x7d86: mov rax,qword ptr [rax]
0x7d89: test rax,rax
0x7d8c: mov qword ptr [r8+r9*8],rax
0x7d90: je 0x7d9c
0x7d92: add r9,0x1
0x7d96: cmp r9,0xa
0x7d9a: jne 0x7d70
0x7d9c: test r11b,r11b
0x7d9f: jne 0x7dc5
0x7da1: call 0x7840
0x7da6: mov rax,qword ptr [rsp+0x78]
0x7dab: xor rax,qword ptr fs:0x28
0x7db4: jne 0x7dc0
0x7db6: add rsp,0xb8
0x7dbd: pop rbx
0x7dbe: pop rbp
0x7dbf: ret 
0x7dc0: call 0x18e0
0x7dc5: mov dword ptr [rsp+0x8],r10d
0x7dca: jmp 0x7da1
0x7dcc: mov rax,rbx
0x7dcf: add rbx,0x8
0x7dd3: jmp 0x7d86
0x7de0: push rbx
0x7de1: lea rsi,[rip+0x4fda]
0x7de8: mov edx,0x5
0x7ded: xor edi,edi
0x7def: call 0x18b0
0x7df4: lea rdx,[rip+0x4fdc]
0x7dfb: mov rsi,rax
0x7dfe: mov edi,0x1
0x7e03: xor eax,eax
0x7e05: call 0x1a70
0x7e0a: lea rsi,[rip+0x4fdc]
0x7e11: mov edx,0x5
0x7e16: xor edi,edi
0x7e18: call 0x18b0
0x7e1d: lea rcx,[rip+0x3fd4]
0x7e24: lea rdx,[rip+0x300b]
0x7e2b: mov rsi,rax
0x7e2e: mov edi,0x1
0x7e33: xor eax,eax
0x7e35: call 0x1a70
0x7e3a: mov rbx,qword ptr [rip+0x208267]
0x7e41: lea rsi,[rip+0x51d8]
0x7e48: xor edi,edi
0x7e4a: mov edx,0x5
0x7e4f: call 0x18b0
0x7e54: mov rsi,rbx
0x7e57: mov rdi,rax
0x7e5a: pop rbx
0x7e5b: jmp 0x19b0
0x7e60: push rbx
0x7e61: mov rbx,rdi
0x7e64: call 0x19f0
0x7e69: test rax,rax
0x7e6c: jne 0x7e73
0x7e6e: test rbx,rbx
0x7e71: jne 0x7e75
0x7e73: pop rbx
0x7e74: ret 
0x7e75: call 0x80b0
0x7e7a: nop word ptr [rax+rax]
0x7e80: mov rax,rdi
0x7e83: mul rsi
0x7e86: mov rdi,rax
0x7e89: seto al
0x7e8c: test rdi,rdi
0x7e8f: js 0x7e9b
0x7e91: movzx eax,al
0x7e94: test rax,rax
0x7e97: jne 0x7e9b
0x7e99: jmp 0x7e60
0x7e9b: sub rsp,0x8
0x7e9f: call 0x80b0
0x7ea4: nop 
0x7ea6: nop word ptr cs:[rax+rax]
0x7eb0: jmp 0x7e60
0x7ec9: test rdi,rdi
0x7ecc: jne 0x7ee8
0x7ee8: call 0x17d0
0x7eed: xor eax,eax
0x7eef: pop rbx
0x7ef0: ret 
0x7ef6: nop word ptr cs:[rax+rax]
0x7f00: mov rax,rsi
0x7f03: mul rdx
0x7f06: mov rsi,rax
0x7f09: seto al
0x7f0c: test rsi,rsi
0x7f0f: js 0x7f1b
0x7f11: movzx eax,al
0x7f14: test rax,rax
0x7f17: jne 0x7f1b
0x7f19: jmp 0x7ec0
0x7f1b: sub rsp,0x8
0x7f1f: call 0x80b0
0x7f24: nop 
0x7f26: nop word ptr cs:[rax+rax]
0x7f30: test rdi,rdi
0x7f33: mov r9,rdx
0x7f36: mov rcx,qword ptr [rsi]
0x7f39: je 0x7f70
0x7f3b: xor edx,edx
0x7f3d: movabsq rax,0x5555555555555554
0x7f47: div r9
0x7f4a: cmp rax,rcx
0x7f4d: jbe 0x7f8b
0x7f4f: mov rax,rcx
0x7f52: shr rax, 1
0x7f55: lea rcx,[rax+rcx+0x1]
0x7f5a: mov qword ptr [rsi],rcx
0x7f5d: imul rcx,r9
0x7f61: mov rsi,rcx
0x7f64: jmp 0x7ec0
0x7f70: test rcx,rcx
0x7f73: je 0x7f98
0x7f75: mov rax,rcx
0x7f78: mul r9
0x7f7b: seto dl
0x7f7e: test rax,rax
0x7f81: movzx edx,dl
0x7f84: js 0x7f8b
0x7f86: test rdx,rdx
0x7f89: je 0x7f5a
0x7f8b: sub rsp,0x8
0x7f8f: call 0x80b0
0x7f94: nop dword ptr [rax]
0x7f98: xor edx,edx
0x7f9a: mov eax,0x80
0x7f9f: xor r8d,r8d
0x7fa2: div r9
0x7fa5: test rax,rax
0x7fa8: sete r8b
0x7fac: lea rcx,[r8+rax]
0x7fb0: jmp 0x7f75
0x7fc0: test rdi,rdi
0x7fc3: mov rax,qword ptr [rsi]
0x7fc6: je 0x7ff0
0x7fc8: movabsq rdx,0x5555555555555553
0x7fd2: cmp rax,rdx
0x7fd5: ja 0x8001
0x7fd7: mov rdx,rax
0x7fda: shr rdx, 1
0x7fdd: lea rax,[rdx+rax+0x1]
0x7fe2: mov qword ptr [rsi],rax
0x7fe5: mov rsi,rax
0x7fe8: jmp 0x7ec0
0x7ff0: test rax,rax
0x7ff3: mov edx,0x80
0x7ff8: cmove rax,rdx
0x7ffc: test rax,rax
0x7fff: jns 0x7fe2
0x8001: sub rsp,0x8
0x8005: call 0x80b0
0x800a: nop word ptr [rax+rax]
0x8010: push rbx
0x8011: mov rbx,rdi
0x8014: call 0x7e60
0x8019: mov rdx,rbx
0x801c: xor esi,esi
0x801e: mov rdi,rax
0x8021: pop rbx
0x8022: jmp 0x1980
0x8030: mov rax,rdi
0x8033: sub rsp,0x8
0x8037: mul rsi
0x803a: seto dl
0x803d: test rax,rax
0x8040: js 0x8059
0x8042: movzx edx,dl
0x8045: test rdx,rdx
0x8048: jne 0x8059
0x804a: call 0x19c0
0x804f: test rax,rax
0x8052: je 0x8059
0x8054: add rsp,0x8
0x8058: ret 
0x8059: call 0x80b0
0x805e: nop 
0x8060: push rbp
0x8061: push rbx
0x8062: mov rbp,rdi
0x8065: mov rdi,rsi
0x8068: mov rbx,rsi
0x806b: sub rsp,0x8
0x806f: call 0x7e60
0x8074: add rsp,0x8
0x8078: mov rdx,rbx
0x807b: mov rsi,rbp
0x807e: pop rbx
0x807f: pop rbp
0x8080: mov rdi,rax
0x8083: jmp 0x19d0
0x8090: push rbx
0x8091: mov rbx,rdi
0x8094: call 0x18d0
0x8099: mov rdi,rbx
0x809c: lea rsi,[rax+0x1]
0x80a0: pop rbx
0x80a1: jmp 0x8060
0x80e0: call 0x17e0
0x80e5: nop word ptr cs:[rax+rax]
0x80ef: nop 
0x80f0: push rbp
0x80f1: push rbx
0x80f2: sub rsp,0x8
0x80f6: call 0x8ab0
0x80fb: test eax,eax
0x80fd: mov ebx,eax
0x80ff: js 0x8110
0x8101: add rsp,0x8
0x8105: mov eax,ebx
0x8107: pop rbx
0x8108: pop rbp
0x8109: ret 
0x8110: mov rdi,qword ptr [rip+0x207f91]
0x8117: call 0x1840
0x811c: test eax,eax
0x811e: jne 0x8101
0x8120: lea rsi,[rip+0x4fb9]
0x8127: xor edi,edi
0x8129: mov edx,0x5
0x812e: call 0x18b0
0x8133: mov rbp,rax
0x8136: call 0x17f0
0x813b: mov edi,dword ptr [rip+0x207ee7]
0x8141: mov esi,dword ptr [rax]
0x8143: mov rdx,rbp
0x8146: xor eax,eax
0x8148: call 0x1aa0
0x814d: jmp 0x8101
0x8150: sub rsp,0xd8
0x8157: test al,al
0x8159: mov qword ptr [rsp+0x28],rsi
0x815e: mov qword ptr [rsp+0x30],rdx
0x8163: mov qword ptr [rsp+0x38],rcx
0x8168: mov qword ptr [rsp+0x40],r8
0x816d: mov qword ptr [rsp+0x48],r9
0x8172: je 0x81ab
0x8174: movaps [rsp+0x50],xmm0
0x8179: movaps [rsp+0x60],xmm1
0x817e: movaps [rsp+0x70],xmm2
0x8183: movaps [rsp+0x80],xmm3
0x818b: movaps [rsp+0x90],xmm4
0x8193: movaps [rsp+0xa0],xmm5
0x819b: movaps [rsp+0xb0],xmm6
0x81a3: movaps [rsp+0xc0],xmm7
0x81ab: mov rax,qword ptr fs:0x28
0x81b4: mov qword ptr [rsp+0x18],rax
0x81b9: xor eax,eax
0x81bb: lea rax,[rsp+0xe0]
0x81c3: mov rsi,rsp
0x81c6: mov qword ptr [rsp+0x8],rax
0x81cb: lea rax,[rsp+0x20]
0x81d0: mov dword ptr [rsp],0x8
0x81d7: mov dword ptr [rsp+0x4],0x30
0x81df: mov qword ptr [rsp+0x10],rax
0x81e4: call 0x80f0
0x81e9: mov rdx,qword ptr [rsp+0x18]
0x81ee: xor rdx,qword ptr fs:0x28
0x81f7: jne 0x8201
0x81f9: add rsp,0xd8
0x8200: ret 
0x8201: call 0x18e0
0x8206: nop word ptr cs:[rax+rax]
0x8210: push rbp
0x8211: push rbx
0x8212: mov rbp,rdi
0x8215: sub rsp,0x8
0x8219: call 0x89b0
0x821e: test eax,eax
0x8220: mov ebx,eax
0x8222: js 0x8230
0x8224: add rsp,0x8
0x8228: mov eax,ebx
0x822a: pop rbx
0x822b: pop rbp
0x822c: ret 
0x8230: mov rdi,rbp
0x8233: call 0x1840
0x8238: test eax,eax
0x823a: jne 0x8224
0x823c: lea rsi,[rip+0x4e9d]
0x8243: xor edi,edi
0x8245: mov edx,0x5
0x824a: call 0x18b0
0x824f: mov rbp,rax
0x8252: call 0x17f0
0x8257: mov edi,dword ptr [rip+0x207dcb]
0x825d: mov esi,dword ptr [rax]
0x825f: mov rdx,rbp
0x8262: xor eax,eax
0x8264: call 0x1aa0
0x8269: jmp 0x8224
0x8270: sub rsp,0xd8
0x8277: test al,al
0x8279: mov qword ptr [rsp+0x30],rdx
0x827e: mov qword ptr [rsp+0x38],rcx
0x8283: mov qword ptr [rsp+0x40],r8
0x8288: mov qword ptr [rsp+0x48],r9
0x828d: je 0x82c6
0x828f: movaps [rsp+0x50],xmm0
0x8294: movaps [rsp+0x60],xmm1
0x8299: movaps [rsp+0x70],xmm2
0x829e: movaps [rsp+0x80],xmm3
0x82a6: movaps [rsp+0x90],xmm4
0x82ae: movaps [rsp+0xa0],xmm5
0x82b6: movaps [rsp+0xb0],xmm6
0x82be: movaps [rsp+0xc0],xmm7
0x82c6: mov rax,qword ptr fs:0x28
0x82cf: mov qword ptr [rsp+0x18],rax
0x82d4: xor eax,eax
0x82d6: lea rax,[rsp+0xe0]
0x82de: mov rdx,rsp
0x82e1: mov qword ptr [rsp+0x8],rax
0x82e6: lea rax,[rsp+0x20]
0x82eb: mov dword ptr [rsp],0x10
0x82f2: mov dword ptr [rsp+0x4],0x30
0x82fa: mov qword ptr [rsp+0x10],rax
0x82ff: call 0x8210
0x8304: mov rcx,qword ptr [rsp+0x18]
0x8309: xor rcx,qword ptr fs:0x28
0x8312: jne 0x831c
0x8314: add rsp,0xd8
0x831b: ret 
0x831c: call 0x18e0
0x8321: nop word ptr cs:[rax+rax]
0x832b: nop dword ptr [rax+rax]
0x8330: push r13
0x8332: push r12
0x8334: mov r10d,esi
0x8337: push rbp
0x8338: push rbx
0x8339: mov r12,r8
0x833c: sub rsp,0x18
0x8340: mov rax,qword ptr fs:0x28
0x8349: mov qword ptr [rsp+0x8],rax
0x834e: xor eax,eax
0x8350: cmp edi,0x3
0x8353: mov ebp,dword ptr [rip+0x207ccf]
0x8359: ja 0x83b4
0x835b: cmp edi,0x2
0x835e: jae 0x83ab
0x8360: sub edi,0x1
0x8363: lea rsi,[rip+0x4db1]
0x836a: jne 0x83a6
0x836c: test r10d,r10d
0x836f: movsxd rax,r10d
0x8372: js 0x83c2
0x8374: shl rax,0x5
0x8378: lea rbx,[rip+0x4db9]
0x837f: mov r13,qword ptr [rcx+rax]
0x8383: mov edx,0x5
0x8388: xor edi,edi
0x838a: call 0x18b0
0x838f: mov r9,r12
0x8392: mov rdx,rax
0x8395: mov r8,r13
0x8398: mov rcx,rbx
0x839b: xor esi,esi
0x839d: mov edi,ebp
0x839f: xor eax,eax
0x83a1: call 0x1aa0
0x83a6: call 0x17e0
0x83ab: lea rsi,[rip+0x4d8e]
0x83b2: jmp 0x836c
0x83b4: cmp edi,0x4
0x83b7: lea rsi,[rip+0x4d42]
0x83be: je 0x836c
0x83c0: jmp 0x83a6
0x83c2: lea rbx,[rip+0x4d6f]
0x83c9: mov byte ptr [rsp+0x6],dl
0x83cd: mov byte ptr [rsp+0x7],0x0
0x83d2: lea r13,[rsp+0x6]
0x83d7: sub rbx,rax
0x83da: jmp 0x8383
0x8486: cmp eax,0x22
0x8489: mov ebp,0x1
0x848e: jne 0x84b8
0x84b2: nop word ptr [rax+rax]
0x85e0: movsxd rdi,edi
0x85e3: mov eax,ebp
0x85e5: add rcx,rdi
0x85e8: or eax,0x2
0x85eb: mov qword ptr [r15],rcx
0x85ee: cmp byte ptr [rcx],0x0
0x85f1: mov qword ptr [r14],rbx
0x85f4: cmovne ebp,eax
0x85f7: jmp 0x84bd
0x8655: or ebp,r9d
0x8658: jmp 0x85e0
0x86ec: mov rax,rbx
0x86ef: mul rsi
0x86f2: mov rbx,rax
0x86f5: jo 0x8784
0x86fb: sub r8d,0x1
0x86ff: jne 0x86ec
0x8701: jmp 0x8655
0x8760: call 0x18e0
0x8784: mov r9d,0x1
0x878a: or rbx,-0x1
0x878e: jmp 0x86fb
0x8800: push r12
0x8802: push rbp
0x8803: push rbx
0x8804: mov rbx,rdi
0x8807: call 0x19e0
0x880c: test eax,eax
0x880e: mov rdi,rbx
0x8811: js 0x8867
0x8813: call 0x1a30
0x8818: test eax,eax
0x881a: jne 0x8848
0x881c: mov rdi,rbx
0x881f: call 0x8880
0x8824: test eax,eax
0x8826: je 0x8864
0x8828: call 0x17f0
0x882d: mov r12d,dword ptr [rax]
0x8830: mov rdi,rbx
0x8833: mov rbp,rax
0x8836: call 0x1890
0x883b: test r12d,r12d
0x883e: jne 0x8870
0x8840: pop rbx
0x8841: pop rbp
0x8842: pop r12
0x8844: ret 
0x8848: mov rdi,rbx
0x884b: call 0x19e0
0x8850: xor esi,esi
0x8852: mov edx,0x1
0x8857: mov edi,eax
0x8859: call 0x1940
0x885e: cmp rax,-0x1
0x8862: jne 0x881c
0x8864: mov rdi,rbx
0x8867: pop rbx
0x8868: pop rbp
0x8869: pop r12
0x886b: jmp 0x1890
0x8870: mov dword ptr [rbp],r12d
0x8874: mov eax,0xffffffff
0x8879: jmp 0x8840
0x8880: test rdi,rdi
0x8883: push rbx
0x8884: mov rbx,rdi
0x8887: je 0x889a
0x8889: call 0x1a30
0x888e: test eax,eax
0x8890: je 0x889a
0x8892: test dword ptr [rbx],0x100
0x8898: jne 0x88a8
0x889a: mov rdi,rbx
0x889d: pop rbx
0x889e: jmp 0x1a00
0x88a8: mov rdi,rbx
0x88ab: mov edx,0x1
0x88b0: xor esi,esi
0x88b2: call 0x88c0
0x88b7: mov rdi,rbx
0x88ba: pop rbx
0x88bb: jmp 0x1a00
0x88c0: mov rax,qword ptr [rdi+0x8]
0x88c4: cmp qword ptr [rdi+0x10],rax
0x88c8: je 0x88d0
0x88ca: jmp 0x1ab0
0x88d0: mov rax,qword ptr [rdi+0x20]
0x88d4: cmp qword ptr [rdi+0x28],rax
0x88d8: jne 0x88ca
0x88da: cmp qword ptr [rdi+0x48],0x0
0x88df: jne 0x88ca
0x88e1: push r12
0x88e3: push rbp
0x88e4: mov r12d,edx
0x88e7: push rbx
0x88e8: mov rbp,rsi
0x88eb: mov rbx,rdi
0x88ee: call 0x19e0
0x88f3: mov edx,r12d
0x88f6: mov rsi,rbp
0x88f9: mov edi,eax
0x88fb: call 0x1940
0x8900: cmp rax,-0x1
0x8904: je 0x8912
0x8906: and dword ptr [rbx],-0x11
0x8909: mov qword ptr [rbx+0x90],rax
0x8910: xor eax,eax
0x8912: pop rbx
0x8913: pop rbp
0x8914: pop r12
0x8916: ret 
0x8920: push r13
0x8922: push r12
0x8924: mov r13,rsi
0x8927: push rbp
0x8928: push rbx
0x8929: mov rbx,rdi
0x892c: mov r12,rdx
0x892f: sub rsp,0x18
0x8933: mov rax,qword ptr fs:0x28
0x893c: mov qword ptr [rsp+0x8],rax
0x8941: xor eax,eax
0x8943: lea rax,[rsp+0x4]
0x8948: test rdi,rdi
0x894b: cmove rbx,rax
0x894f: mov rdi,rbx
0x8952: call 0x1900
0x8957: cmp rax,-0x3
0x895b: mov rbp,rax
0x895e: jbe 0x8980
0x8960: test r12,r12
0x8963: je 0x8980
0x8965: xor edi,edi
0x8967: call 0x8b50
0x896c: test al,al
0x896e: jne 0x8980
0x8970: movzx eax,byte ptr [r13]
0x8975: mov ebp,0x1
0x897a: mov dword ptr [rbx],eax
0x897c: nop dword ptr [rax]
0x8980: mov rdx,qword ptr [rsp+0x8]
0x8985: xor rdx,qword ptr fs:0x28
0x898e: mov rax,rbp
0x8991: jne 0x899e
0x8993: add rsp,0x18
0x8997: pop rbx
0x8998: pop rbp
0x8999: pop r12
0x899b: pop r13
0x899d: ret 
0x899e: call 0x18e0
0x89a3: nop word ptr cs:[rax+rax]
0x89ad: nop dword ptr [rax]
0x89b0: push r13
0x89b2: push r12
0x89b4: mov rax,rsi
0x89b7: push rbp
0x89b8: push rbx
0x89b9: mov r13,rdi
0x89bc: sub rsp,0x7f8
0x89c3: lea r12,[rsp+0x10]
0x89c8: lea rsi,[rsp+0x8]
0x89cd: mov qword ptr [rsp+0x8],0x7d0
0x89d6: mov rcx,qword ptr fs:0x28
0x89df: mov qword ptr [rsp+0x7e8],rcx
0x89e7: xor ecx,ecx
0x89e9: mov rdi,r12
0x89ec: mov rcx,rdx
0x89ef: mov rdx,rax
0x89f2: call 0x8c00
0x89f7: test rax,rax
0x89fa: mov rbx,qword ptr [rsp+0x8]
0x89ff: je 0x8a8e
0x8a05: mov rcx,r13
0x8a08: mov rdx,rbx
0x8a0b: mov esi,0x1
0x8a10: mov rdi,rax
0x8a13: mov rbp,rax
0x8a16: call 0x1b00
0x8a1b: cmp rax,rbx
0x8a1e: jb 0x8a60
0x8a20: cmp rbp,r12
0x8a23: je 0x8a2d
0x8a25: mov rdi,rbp
0x8a28: call 0x17d0
0x8a2d: cmp rbx,0x7fffffff
0x8a34: ja 0x8a83
0x8a36: mov rcx,qword ptr [rsp+0x7e8]
0x8a3e: xor rcx,qword ptr fs:0x28
0x8a47: mov eax,ebx
0x8a49: jne 0x8a9d
0x8a4b: add rsp,0x7f8
0x8a52: pop rbx
0x8a53: pop rbp
0x8a54: pop r12
0x8a56: pop r13
0x8a58: ret 
0x8a60: cmp rbp,r12
0x8a63: mov ebx,0xffffffff
0x8a68: je 0x8a36
0x8a6a: call 0x17f0
0x8a6f: mov r13d,dword ptr [rax]
0x8a72: mov r12,rax
0x8a75: mov rdi,rbp
0x8a78: call 0x17d0
0x8a7d: mov dword ptr [r12],r13d
0x8a81: jmp 0x8a36
0x8a83: call 0x17f0
0x8a88: mov dword ptr [rax],0x4b
0x8a8e: mov rdi,r13
0x8a91: mov ebx,0xffffffff
0x8a96: call 0x8bf0
0x8a9b: jmp 0x8a36
0x8a9d: call 0x18e0
0x8aa2: nop word ptr cs:[rax+rax]
0x8aac: nop dword ptr [rax]
0x8ab0: mov rdx,rsi
0x8ab3: mov rsi,rdi
0x8ab6: mov rdi,qword ptr [rip+0x2075eb]
0x8abd: jmp 0x89b0
0x8ad0: push r12
0x8ad2: push rbp
0x8ad3: mov rbp,rdi
0x8ad6: push rbx
0x8ad7: call 0x1820
0x8adc: mov ebx,dword ptr [rbp]
0x8adf: mov rdi,rbp
0x8ae2: mov r12,rax
0x8ae5: call 0x8800
0x8aea: and ebx,0x20
0x8aed: test ebx,ebx
0x8aef: jne 0x8b08
0x8af1: test eax,eax
0x8af3: je 0x8aff
0x8af5: test r12,r12
0x8af8: mov eax,0xffffffff
0x8afd: je 0x8b38
0x8aff: pop rbx
0x8b00: pop rbp
0x8b01: pop r12
0x8b03: ret 
0x8b08: test eax,eax
0x8b0a: jne 0x8b28
0x8b0c: call 0x17f0
0x8b11: mov dword ptr [rax],0x0
0x8b17: mov eax,0xffffffff
0x8b1c: pop rbx
0x8b1d: pop rbp
0x8b1e: pop r12
0x8b20: ret 
0x8b28: pop rbx
0x8b29: mov eax,0xffffffff
0x8b2e: pop rbp
0x8b2f: pop r12
0x8b31: ret 
0x8b38: call 0x17f0
0x8b3d: cmp dword ptr [rax],0x9
0x8b40: pop rbx
0x8b41: pop rbp
0x8b42: pop r12
0x8b44: setne al
0x8b47: movzx eax,al
0x8b4a: neg eax
0x8b4c: ret 
0x8b50: sub rsp,0x8
0x8b54: xor esi,esi
0x8b56: call 0x1a60
0x8b5b: mov rdx,rax
0x8b5e: mov eax,0x1
0x8b63: test rdx,rdx
0x8b66: je 0x8b85
0x8b68: lea rdi,[rip+0x4724]
0x8b6f: mov ecx,0x2
0x8b74: mov rsi,rdx
0x8b77: rep cmpsb [rsi],es:[rdi]
0x8b79: seta cl
0x8b7c: sbb cl,0x0
0x8b7f: xor eax,eax
0x8b81: test cl,cl
0x8b83: jne 0x8b90
0x8b85: add rsp,0x8
0x8b89: ret 
0x8b90: lea rdi,[rip+0x46fe]
0x8b97: mov ecx,0x6
0x8b9c: mov rsi,rdx
0x8b9f: rep cmpsb [rsi],es:[rdi]
0x8ba1: seta al
0x8ba4: sbb al,0x0
0x8ba6: test al,al
0x8ba8: setne al
0x8bab: add rsp,0x8
0x8baf: ret 
0x8bb0: sub rsp,0x8
0x8bb4: mov edi,0xe
0x8bb9: call 0x1a10
0x8bbe: test rax,rax
0x8bc1: je 0x8be0
0x8bc3: cmp byte ptr [rax],0x0
0x8bc6: lea rdx,[rip+0x46ce]
0x8bcd: cmove rax,rdx
0x8bd1: add rsp,0x8
0x8bd5: ret 
0x8be0: lea rax,[rip+0x46b4]
0x8be7: add rsp,0x8
0x8beb: ret 
0x8bf0: or dword ptr [rdi],0x20
0x8bf3: ret 
0x8c00: push rbp
0x8c01: mov rbp,rsp
0x8c04: push r15
0x8c06: push r14
0x8c08: push r13
0x8c0a: push r12
0x8c0c: lea r14,[rbp-0x3b0]
0x8c13: push rbx
0x8c14: mov rbx,rdx
0x8c17: mov r12,rcx
0x8c1a: mov rdx,r14
0x8c1d: sub rsp,0x408
0x8c24: mov qword ptr [rbp-0x418],rsi
0x8c2b: lea rsi,[rbp-0x2c0]
0x8c32: mov qword ptr [rbp-0x3e8],rdi
0x8c39: mov rdi,rbx
0x8c3c: mov qword ptr [rbp-0x410],r14
0x8c43: mov rax,qword ptr fs:0x28
0x8c4c: mov qword ptr [rbp-0x38],rax
0x8c50: xor eax,eax
0x8c52: mov qword ptr [rbp-0x408],rsi
0x8c59: call 0x9f20
0x8c5e: test eax,eax
0x8c60: js 0x9ac8
0x8c66: mov rsi,r14
0x8c69: mov rdi,r12
0x8c6c: call 0x9d20
0x8c71: test eax,eax
0x8c73: js 0x9b30
0x8c79: mov rax,qword ptr [rbp-0x2b0]
0x8c80: mov rdx,-0x1
0x8c87: add rax,0x7
0x8c8b: cmp rax,0x6
0x8c8f: cmovbe rax,rdx
0x8c93: add rax,qword ptr [rbp-0x2a8]
0x8c9a: jb 0x96c8
0x8ca0: mov rdi,rax
0x8ca3: xor r8d,r8d
0x8ca6: add rdi,0x6
0x8caa: setb r8b
0x8cae: jb 0x96c8
0x8cb4: cmp rdi,0xf9f
0x8cbb: jbe 0x8e08
0x8cc1: cmp rdi,-0x1
0x8cc5: mov qword ptr [rbp-0x3c8],r8
0x8ccc: je 0x96c8
0x8cd2: call 0x19f0
0x8cd7: test rax,rax
0x8cda: mov qword ptr [rbp-0x3d8],rax
0x8ce1: je 0x96c8
0x8ce7: mov r8,qword ptr [rbp-0x3c8]
0x8cee: mov qword ptr [rbp-0x420],rax
0x8cf5: xor r12d,r12d
0x8cf8: cmp qword ptr [rbp-0x3e8],0x0
0x8d00: je 0x8d0c
0x8d02: mov rax,qword ptr [rbp-0x418]
0x8d09: mov r12,qword ptr [rax]
0x8d0c: mov r13,qword ptr [rbp-0x2b8]
0x8d13: lea rax,[rbp-0x3bc]
0x8d1a: mov r15,qword ptr [rbp-0x3e8]
0x8d21: mov qword ptr [rbp-0x400],0x0
0x8d2c: mov qword ptr [rbp-0x3f0],rax
0x8d33: mov rax,rbx
0x8d36: mov rbx,r8
0x8d39: mov rcx,qword ptr [r13]
0x8d3d: mov r8,rax
0x8d40: cmp rcx,r8
0x8d43: je 0x96b1
0x8d49: sub rcx,r8
0x8d4c: mov rax,rbx
0x8d4f: add rax,rcx
0x8d52: mov r14,rax
0x8d55: jae 0x8e38
0x8d5b: cmp r12,-0x1
0x8d5f: je 0x9830
0x8d65: call 0x17f0
0x8d6a: mov qword ptr [rbp-0x3c8],rax
0x8d71: cmp r15,qword ptr [rbp-0x3e8]
0x8d78: je 0x8d83
0x8d7a: test r15,r15
0x8d7d: jne 0x9860
0x8d83: mov rax,qword ptr [rbp-0x420]
0x8d8a: test rax,rax
0x8d8d: je 0x8d97
0x8d8f: mov rdi,rax
0x8d92: call 0x17d0
0x8d97: mov rax,qword ptr [rbp-0x408]
0x8d9e: mov rdi,qword ptr [rbp-0x2b8]
0x8da5: add rax,0x20
0x8da9: cmp rdi,rax
0x8dac: je 0x8db3
0x8dae: call 0x17d0
0x8db3: mov rax,qword ptr [rbp-0x410]
0x8dba: mov rdi,qword ptr [rbp-0x3a8]
0x8dc1: add rax,0x10
0x8dc5: cmp rdi,rax
0x8dc8: je 0x8dcf
0x8dca: call 0x17d0
0x8dcf: mov rax,qword ptr [rbp-0x3c8]
0x8dd6: xor r15d,r15d
0x8dd9: mov dword ptr [rax],0xc
0x8ddf: mov rdi,qword ptr [rbp-0x38]
0x8de3: xor rdi,qword ptr fs:0x28
0x8dec: mov rax,r15
0x8def: jne 0x9cf7
0x8df5: lea rsp,[rbp-0x28]
0x8df9: pop rbx
0x8dfa: pop r12
0x8dfc: pop r13
0x8dfe: pop r14
0x8e00: pop r15
0x8e02: pop rbp
0x8e03: ret 
0x8e08: add rax,0x24
0x8e0c: mov qword ptr [rbp-0x420],0x0
0x8e17: and rax,-0x10
0x8e1b: sub rsp,rax
0x8e1e: lea rax,[rsp+0xf]
0x8e23: and rax,-0x10
0x8e27: mov qword ptr [rbp-0x3d8],rax
0x8e2e: jmp 0x8cf5
0x8e38: cmp r12,rax
0x8e3b: jae 0x8ea4
0x8e3d: test r12,r12
0x8e40: jne 0x9770
0x8e46: cmp rax,0xc
0x8e4a: ja 0x9782
0x8e50: mov r12d,0xc
0x8e56: cmp r15,qword ptr [rbp-0x3e8]
0x8e5d: sete dl
0x8e60: test r15,r15
0x8e63: je 0x97a8
0x8e69: test dl,dl
0x8e6b: jne 0x97a8
0x8e71: mov rsi,r12
0x8e74: mov rdi,r15
0x8e77: mov qword ptr [rbp-0x3d0],r8
0x8e7e: mov qword ptr [rbp-0x3c8],rcx
0x8e85: call 0x1a50
0x8e8a: test rax,rax
0x8e8d: mov rcx,qword ptr [rbp-0x3c8]
0x8e94: mov r8,qword ptr [rbp-0x3d0]
0x8e9b: je 0x984b
0x8ea1: mov r15,rax
0x8ea4: lea rdi,[r15+rbx]
0x8ea8: mov rdx,rcx
0x8eab: mov rsi,r8
0x8eae: call 0x19d0
0x8eb3: mov rax,qword ptr [rbp-0x400]
0x8eba: cmp qword ptr [rbp-0x2c0],rax
0x8ec1: je 0x9b7b
0x8ec7: movzx edx,byte ptr [r13+0x48]
0x8ecc: mov rax,qword ptr [r13+0x50]
0x8ed0: cmp dl,0x25
0x8ed3: je 0x9668
0x8ed9: cmp rax,-0x1
0x8edd: je 0x9b26
0x8ee3: mov r8,qword ptr [rbp-0x3a8]
0x8eea: shl rax,0x5
0x8eee: add rax,r8
0x8ef1: cmp dl,0x6e
0x8ef4: mov edi,dword ptr [rax]
0x8ef6: mov dword ptr [rbp-0x3d0],edi
0x8efc: je 0x96e0
0x8f02: mov eax,dword ptr [r13+0x10]
0x8f06: mov rdi,qword ptr [rbp-0x3d8]
0x8f0d: test al,0x1
0x8f0f: mov byte ptr [rdi],0x25
0x8f12: lea rbx,[rdi+0x1]
0x8f16: je 0x8f27
0x8f18: mov rdi,qword ptr [rbp-0x3d8]
0x8f1f: lea rbx,[rdi+0x2]
0x8f23: mov byte ptr [rdi+0x1],0x27
0x8f27: test al,0x2
0x8f29: je 0x8f32
0x8f2b: mov byte ptr [rbx],0x2d
0x8f2e: add rbx,0x1
0x8f32: test al,0x4
0x8f34: je 0x8f3d
0x8f36: mov byte ptr [rbx],0x2b
0x8f39: add rbx,0x1
0x8f3d: test al,0x8
0x8f3f: je 0x8f48
0x8f41: mov byte ptr [rbx],0x20
0x8f44: add rbx,0x1
0x8f48: test al,0x10
0x8f4a: je 0x8f53
0x8f4c: mov byte ptr [rbx],0x23
0x8f4f: add rbx,0x1
0x8f53: test al,0x40
0x8f55: je 0x8f5e
0x8f57: mov byte ptr [rbx],0x49
0x8f5a: add rbx,0x1
0x8f5e: test al,0x20
0x8f60: je 0x8f69
0x8f62: mov byte ptr [rbx],0x30
0x8f65: add rbx,0x1
0x8f69: mov rsi,qword ptr [r13+0x18]
0x8f6d: mov rdx,qword ptr [r13+0x20]
0x8f71: cmp rsi,rdx
0x8f74: je 0x8fa6
0x8f76: mov rcx,rdx
0x8f79: mov rdi,rbx
0x8f7c: mov qword ptr [rbp-0x3e0],r8
0x8f83: sub rcx,rsi
0x8f86: mov rdx,rcx
0x8f89: mov qword ptr [rbp-0x3c8],rcx
0x8f90: call 0x19d0
0x8f95: mov rcx,qword ptr [rbp-0x3c8]
0x8f9c: mov r8,qword ptr [rbp-0x3e0]
0x8fa3: add rbx,rcx
0x8fa6: mov rsi,qword ptr [r13+0x30]
0x8faa: mov rdx,qword ptr [r13+0x38]
0x8fae: cmp rsi,rdx
0x8fb1: je 0x8fe3
0x8fb3: mov rcx,rdx
0x8fb6: mov rdi,rbx
0x8fb9: mov qword ptr [rbp-0x3e0],r8
0x8fc0: sub rcx,rsi
0x8fc3: mov rdx,rcx
0x8fc6: mov qword ptr [rbp-0x3c8],rcx
0x8fcd: call 0x19d0
0x8fd2: mov rcx,qword ptr [rbp-0x3c8]
0x8fd9: mov r8,qword ptr [rbp-0x3e0]
0x8fe0: add rbx,rcx
0x8fe3: mov edi,dword ptr [rbp-0x3d0]
0x8fe9: cmp edi,0x10
0x8fec: ja 0x901b
0x8fee: mov eax,0x1
0x8ff3: mov ecx,edi
0x8ff5: shl rax,cl
0x8ff8: test eax,0x14180
0x8ffd: jne 0x9014
0x8fff: test ah,0x10
0x9002: jne 0x9960
0x9008: test ah,0x6
0x900b: je 0x901b
0x900d: mov byte ptr [rbx],0x6c
0x9010: add rbx,0x1
0x9014: mov byte ptr [rbx],0x6c
0x9017: add rbx,0x1
0x901b: movzx eax,byte ptr [r13+0x48]
0x9020: mov byte ptr [rbx+0x1],0x0
0x9024: mov byte ptr [rbx],al
0x9026: mov rax,qword ptr [r13+0x28]
0x902a: cmp rax,-0x1
0x902e: je 0x9760
0x9034: shl rax,0x5
0x9038: add rax,r8
0x903b: cmp dword ptr [rax],0x5
0x903e: jne 0x9b26
0x9044: mov eax,dword ptr [rax+0x10]
0x9047: mov dword ptr [rbp-0x3e0],0x1
0x9051: mov dword ptr [rbp-0x3b8],eax
0x9057: mov rax,qword ptr [r13+0x40]
0x905b: cmp rax,-0x1
0x905f: je 0x908c
0x9061: shl rax,0x5
0x9065: add r8,rax
0x9068: cmp dword ptr [r8],0x5
0x906c: jne 0x9b26
0x9072: mov eax,dword ptr [rbp-0x3e0]
0x9078: mov edx,dword ptr [r8+0x10]
0x907c: mov dword ptr [rbp+rax*4-0x3b8],edx
0x9083: lea eax,[rax+0x1]
0x9086: mov dword ptr [rbp-0x3e0],eax
0x908c: mov rax,r14
0x908f: xor edx,edx
0x9091: add rax,0x2
0x9095: jb 0x9cfc
0x909b: cmp r12,rax
0x909e: jae 0x90eb
0x90a0: test r12,r12
0x90a3: jne 0x98c8
0x90a9: cmp rax,0xc
0x90ad: ja 0x98e0
0x90b3: mov r12d,0xc
0x90b9: cmp r15,qword ptr [rbp-0x3e8]
0x90c0: sete dl
0x90c3: test r15,r15
0x90c6: je 0x9910
0x90cc: test dl,dl
0x90ce: jne 0x9910
0x90d4: mov rsi,r12
0x90d7: mov rdi,r15
0x90da: call 0x1a50
0x90df: test rax,rax
0x90e2: je 0x8d65
0x90e8: mov r15,rax
0x90eb: mov byte ptr [r15+r14],0x0
0x90f0: call 0x17f0
0x90f5: mov qword ptr [rbp-0x3c8],rax
0x90fc: mov eax,dword ptr [rax]
0x90fe: mov qword ptr [rbp-0x3f8],rbx
0x9105: mov dword ptr [rbp-0x424],eax
0x910b: nop dword ptr [rax+rax]
0x9110: mov rax,qword ptr [rbp-0x3c8]
0x9117: mov rbx,r12
0x911a: mov r10d,0x7fffffff
0x9120: sub rbx,r14
0x9123: mov dword ptr [rbp-0x3bc],0xffffffff
0x912d: cmp rbx,0x7fffffff
0x9134: mov dword ptr [rax],0x0
0x913a: mov eax,dword ptr [rbp-0x3d0]
0x9140: cmovbe r10,rbx
0x9144: cmp eax,0x11
0x9147: ja 0x9b26
0x914d: lea rsi,[rip+0x4150]
0x9154: movsxd rax,dword ptr [rsi+rax*4]
0x9158: add rax,rsi
0x915b: jmp rax
0x9668: cmp rax,-0x1
0x966c: jne 0x9b26
0x9672: mov rax,r14
0x9675: add rax,0x1
0x9679: mov rbx,rax
0x967c: jae 0x9708
0x9682: cmp r12,-0x1
0x9686: jne 0x8d65
0x968c: mov rbx,r12
0x968f: mov byte ptr [r15+r14],0x25
0x9694: mov r8,qword ptr [r13+0x8]
0x9698: add r13,0x58
0x969c: mov rcx,qword ptr [r13]
0x96a0: add qword ptr [rbp-0x400],0x1
0x96a8: cmp rcx,r8
0x96ab: jne 0x8d49
0x96b1: mov r14,rbx
0x96b4: jmp 0x8eb3
0x96c8: call 0x17f0
0x96cd: mov qword ptr [rbp-0x3c8],rax
0x96d4: jmp 0x8d97
0x96e0: mov edx,edi
0x96e2: sub edx,0x12
0x96e5: cmp edx,0x4
0x96e8: ja 0x9b26
0x96ee: lea rdi,[rip+0x3bf7]
0x96f5: mov rax,qword ptr [rax+0x10]
0x96f9: movsxd rdx,dword ptr [rdi+rdx*4]
0x96fd: add rdx,rdi
0x9700: jmp rdx
0x9708: cmp r12,rax
0x970b: jae 0x968f
0x970d: test r12,r12
0x9710: jne 0x9ae0
0x9716: cmp rax,0xc
0x971a: ja 0x9af2
0x9720: mov r12d,0xc
0x9726: cmp r15,qword ptr [rbp-0x3e8]
0x972d: sete dl
0x9730: test r15,r15
0x9733: je 0x99a0
0x9739: test dl,dl
0x973b: jne 0x99a0
0x9741: mov rsi,r12
0x9744: mov rdi,r15
0x9747: call 0x1a50
0x974c: test rax,rax
0x974f: je 0x984b
0x9755: mov r15,rax
0x9758: jmp 0x968f
0x9760: mov dword ptr [rbp-0x3e0],0x0
0x976a: jmp 0x9057
0x9770: js 0x8d65
0x9776: add r12,r12
0x9779: cmp r12,rax
0x977c: jae 0x8e56
0x9782: cmp rax,-0x1
0x9786: je 0x8d65
0x978c: cmp r15,qword ptr [rbp-0x3e8]
0x9793: mov r12,rax
0x9796: sete dl
0x9799: test r15,r15
0x979c: jne 0x8e69
0x97a2: nop word ptr [rax+rax]
0x97a8: mov rdi,r12
0x97ab: mov qword ptr [rbp-0x3e0],r8
0x97b2: mov byte ptr [rbp-0x3d0],dl
0x97b8: mov qword ptr [rbp-0x3c8],rcx
0x97bf: call 0x19f0
0x97c4: test rax,rax
0x97c7: mov r9,rax
0x97ca: mov rcx,qword ptr [rbp-0x3c8]
0x97d1: movzx edx,byte ptr [rbp-0x3d0]
0x97d8: mov r8,qword ptr [rbp-0x3e0]
0x97df: je 0x8d65
0x97e5: test rbx,rbx
0x97e8: je 0x99f0
0x97ee: test dl,dl
0x97f0: je 0x99f0
0x97f6: mov rsi,r15
0x97f9: mov rdx,rbx
0x97fc: mov rdi,rax
0x97ff: mov qword ptr [rbp-0x3d0],r8
0x9806: mov qword ptr [rbp-0x3c8],rcx
0x980d: call 0x19d0
0x9812: mov rcx,qword ptr [rbp-0x3c8]
0x9819: mov r15,rax
0x981c: mov r8,qword ptr [rbp-0x3d0]
0x9823: jmp 0x8ea4
0x9830: mov r14,r12
0x9833: jmp 0x8ea4
0x984b: call 0x17f0
0x9850: mov qword ptr [rbp-0x3c8],rax
0x9857: nop word ptr [rax+rax]
0x9860: mov rdi,r15
0x9863: call 0x17d0
0x9868: jmp 0x8d83
0x98c8: js 0x8d65
0x98ce: add r12,r12
0x98d1: cmp r12,rax
0x98d4: jae 0x90b9
0x98da: nop word ptr [rax+rax]
0x98e0: test rdx,rdx
0x98e3: jne 0x8d65
0x98e9: cmp rax,-0x1
0x98ed: je 0x8d65
0x98f3: cmp r15,qword ptr [rbp-0x3e8]
0x98fa: mov r12,rax
0x98fd: sete dl
0x9900: test r15,r15
0x9903: jne 0x90cc
0x9909: nop dword ptr [rax]
0x9910: mov rdi,r12
0x9913: mov byte ptr [rbp-0x3c8],dl
0x9919: call 0x19f0
0x991e: test rax,rax
0x9921: mov rcx,rax
0x9924: movzx edx,byte ptr [rbp-0x3c8]
0x992b: je 0x8d65
0x9931: test r14,r14
0x9934: je 0x9ad0
0x993a: test dl,dl
0x993c: je 0x9ad0
0x9942: mov rsi,r15
0x9945: mov rdx,r14
0x9948: mov rdi,rax
0x994b: call 0x19d0
0x9950: mov r15,rax
0x9953: jmp 0x90eb
0x9960: mov byte ptr [rbx],0x4c
0x9963: add rbx,0x1
0x9967: jmp 0x901b
0x99a0: mov rdi,r12
0x99a3: mov byte ptr [rbp-0x3c8],dl
0x99a9: call 0x19f0
0x99ae: test rax,rax
0x99b1: mov rcx,rax
0x99b4: movzx edx,byte ptr [rbp-0x3c8]
0x99bb: je 0x8d65
0x99c1: test r14,r14
0x99c4: je 0x9b04
0x99ca: test dl,dl
0x99cc: je 0x9b04
0x99d2: mov rsi,r15
0x99d5: mov rdx,r14
0x99d8: mov rdi,rax
0x99db: call 0x19d0
0x99e0: mov r15,rax
0x99e3: jmp 0x968f
0x99f0: mov r15,r9
0x99f3: jmp 0x8ea4
0x9ac8: xor r15d,r15d
0x9acb: jmp 0x8ddf
0x9ad0: mov r15,rcx
0x9ad3: jmp 0x90eb
0x9ae0: js 0x8d65
0x9ae6: add r12,r12
0x9ae9: cmp r12,rax
0x9aec: jae 0x9726
0x9af2: cmp rax,-0x1
0x9af6: je 0x8d65
0x9afc: mov r12,rax
0x9aff: jmp 0x9726
0x9b04: mov r15,rcx
0x9b07: jmp 0x968f
0x9b26: call 0x17e0
0x9b2b: nop dword ptr [rax+rax]
0x9b30: mov rax,qword ptr [rbp-0x408]
0x9b37: mov rdi,qword ptr [rbp-0x2b8]
0x9b3e: add rax,0x20
0x9b42: cmp rdi,rax
0x9b45: je 0x9b4c
0x9b47: call 0x17d0
0x9b4c: mov rax,qword ptr [rbp-0x410]
0x9b53: mov rdi,qword ptr [rbp-0x3a8]
0x9b5a: add rax,0x10
0x9b5e: cmp rdi,rax
0x9b61: je 0x9b68
0x9b63: call 0x17d0
0x9b68: call 0x17f0
0x9b6d: xor r15d,r15d
0x9b70: mov dword ptr [rax],0x16
0x9b76: jmp 0x8ddf
0x9b7b: mov rbx,r14
0x9b7e: xor eax,eax
0x9b80: add rbx,0x1
0x9b84: jb 0x9c90
0x9b8a: cmp r12,rbx
0x9b8d: jae 0x9bdc
0x9b8f: test r12,r12
0x9b92: jne 0x9cc9
0x9b98: cmp rbx,0xc
0x9b9c: ja 0x9cae
0x9ba2: mov r12d,0xc
0x9ba8: cmp r15,qword ptr [rbp-0x3e8]
0x9baf: sete r13b
0x9bb3: test r15,r15
0x9bb6: je 0x9c5c
0x9bbc: test r13b,r13b
0x9bbf: jne 0x9c5c
0x9bc5: mov rsi,r12
0x9bc8: mov rdi,r15
0x9bcb: call 0x1a50
0x9bd0: test rax,rax
0x9bd3: je 0x984b
0x9bd9: mov r15,rax
0x9bdc: cmp r15,qword ptr [rbp-0x3e8]
0x9be3: mov byte ptr [r15+r14],0x0
0x9be8: je 0x9c01
0x9bea: cmp r12,rbx
0x9bed: jbe 0x9c01
0x9bef: mov rdi,r15
0x9bf2: mov rsi,rbx
0x9bf5: call 0x1a50
0x9bfa: test rax,rax
0x9bfd: cmovne r15,rax
0x9c01: mov rax,qword ptr [rbp-0x420]
0x9c08: test rax,rax
0x9c0b: je 0x9c15
0x9c0d: mov rdi,rax
0x9c10: call 0x17d0
0x9c15: mov rax,qword ptr [rbp-0x408]
0x9c1c: mov rdi,qword ptr [rbp-0x2b8]
0x9c23: add rax,0x20
0x9c27: cmp rdi,rax
0x9c2a: je 0x9c31
0x9c2c: call 0x17d0
0x9c31: mov rax,qword ptr [rbp-0x410]
0x9c38: mov rdi,qword ptr [rbp-0x3a8]
0x9c3f: add rax,0x10
0x9c43: cmp rdi,rax
0x9c46: je 0x9c4d
0x9c48: call 0x17d0
0x9c4d: mov rax,qword ptr [rbp-0x418]
0x9c54: mov qword ptr [rax],r14
0x9c57: jmp 0x8ddf
0x9c5c: mov rdi,r12
0x9c5f: call 0x19f0
0x9c64: test rax,rax
0x9c67: mov rcx,rax
0x9c6a: je 0x8d65
0x9c70: test r14,r14
0x9c73: je 0x9ce0
0x9c75: test r13b,r13b
0x9c78: je 0x9ce0
0x9c7a: mov rsi,r15
0x9c7d: mov rdx,r14
0x9c80: mov rdi,rax
0x9c83: call 0x19d0
0x9c88: mov r15,rax
0x9c8b: jmp 0x9bdc
0x9c90: cmp r12,-0x1
0x9c94: mov eax,0x1
0x9c99: je 0x9bdc
0x9c9f: test r12,r12
0x9ca2: je 0x8d65
0x9ca8: js 0x8d65
0x9cae: test rax,rax
0x9cb1: jne 0x8d65
0x9cb7: cmp rbx,-0x1
0x9cbb: je 0x8d65
0x9cc1: mov r12,rbx
0x9cc4: jmp 0x9ba8
0x9cc9: js 0x8d65
0x9ccf: add r12,r12
0x9cd2: cmp r12,rbx
0x9cd5: jae 0x9ba8
0x9cdb: jmp 0x9cae
0x9ce0: mov r15,rcx
0x9ce3: jmp 0x9bdc
0x9cf7: call 0x18e0
0x9cfc: cmp r12,-0x1
0x9d00: mov edx,0x1
0x9d05: je 0x90eb
0x9d0b: test r12,r12
0x9d0e: je 0x8d65
0x9d14: jns 0x98e0
0x9d1a: jmp 0x8d65
0x9d20: cmp qword ptr [rsi],0x0
0x9d24: mov rax,qword ptr [rsi+0x8]
0x9d28: je 0x9d8d
0x9d2a: lea r8,[rip+0x35df]
0x9d31: lea r10,[rip+0x3638]
0x9d38: lea r9,[rip+0x35c1]
0x9d3f: xor ecx,ecx
0x9d41: nop dword ptr [rax]
0x9d48: cmp dword ptr [rax],0x16
0x9d4b: ja 0x9d90
0x9d4d: mov edx,dword ptr [rax]
0x9d4f: movsxd rdx,dword ptr [r8+rdx*4]
0x9d53: add rdx,r8
0x9d56: jmp rdx
0x9d8d: xor eax,eax
0x9d8f: ret 
0x9d90: mov eax,0xffffffff
0x9d95: ret 
0x9f20: push r15
0x9f22: push r14
0x9f24: lea rcx,[rsi+0x20]
0x9f28: push r13
0x9f2a: push r12
0x9f2c: lea rax,[rdx+0x10]
0x9f30: push rbp
0x9f31: push rbx
0x9f32: mov r14,rsi
0x9f35: mov r15,rdx
0x9f38: xor ebx,ebx
0x9f3a: mov r9d,0x7
0x9f40: sub rsp,0x58
0x9f44: mov r10d,0x7
0x9f4a: mov qword ptr [rsi],0x0
0x9f51: mov qword ptr [rsi+0x8],rcx
0x9f55: mov qword ptr [rsp+0x28],rcx
0x9f5a: mov r8,-0x1
0x9f61: mov qword ptr [rdx],0x0
0x9f68: mov qword ptr [rsp+0x8],rax
0x9f6d: mov qword ptr [rdx+0x8],rax
0x9f71: mov qword ptr [rsp+0x18],0x0
0x9f7a: mov qword ptr [rsp+0x10],0x0
0x9f83: mov qword ptr [rsp+0x20],0x0
0x9f8c: jmp 0x9f9b
0x9f90: cmp al,0x25
0x9f92: lea rbp,[rdi+0x1]
0x9f96: je 0x9fd8
0x9f98: mov rdi,rbp
0x9f9b: movzx eax,byte ptr [rdi]
0x9f9e: test al,al
0x9fa0: jne 0x9f90
0x9fa2: lea rax,[rbx+rbx*4]
0x9fa6: lea rax,[rbx+rax*2]
0x9faa: mov qword ptr [rcx+rax*8],rdi
0x9fae: mov rax,qword ptr [rsp+0x10]
0x9fb3: mov qword ptr [r14+0x10],rax
0x9fb7: mov rax,qword ptr [rsp+0x18]
0x9fbc: mov qword ptr [r14+0x18],rax
0x9fc0: xor eax,eax
0x9fc2: add rsp,0x58
0x9fc6: pop rbx
0x9fc7: pop rbp
0x9fc8: pop r12
0x9fca: pop r13
0x9fcc: pop r14
0x9fce: pop r15
0x9fd0: ret 
0x9fd8: lea rax,[rbx+rbx*4]
0x9fdc: mov r13,r8
0x9fdf: lea rax,[rbx+rax*2]
0x9fe3: lea r12,[rcx+rax*8]
0x9fe7: mov qword ptr [r12],rdi
0x9feb: mov dword ptr [r12+0x10],0x0
0x9ff4: mov qword ptr [r12+0x18],0x0
0x9ffd: mov qword ptr [r12+0x20],0x0
0xa006: mov qword ptr [r12+0x28],r8
0xa00b: mov qword ptr [r12+0x30],0x0
0xa014: mov qword ptr [r12+0x38],0x0
0xa01d: mov qword ptr [r12+0x40],r8
0xa022: mov qword ptr [r12+0x50],r8
0xa027: movzx ebx,byte ptr [rdi+0x1]
0xa02b: lea eax,[rbx-0x30]
0xa02e: cmp al,0x9
0xa030: ja 0xa06e
0xa032: jmp 0xa46a
0xa040: cmp bl,0x2d
0xa043: je 0xa088
0xa045: cmp bl,0x2b
0xa048: je 0xa090
0xa04a: cmp bl,0x20
0xa04d: je 0xa0a0
0xa04f: cmp bl,0x23
0xa052: je 0xa0b0
0xa054: cmp bl,0x30
0xa057: je 0xa0c0
0xa059: cmp bl,0x49
0xa05c: jne 0xa0d0
0xa05e: or dword ptr [r12+0x10],0x40
0xa064: nop dword ptr [rax]
0xa068: movzx ebx,byte ptr [rax]
0xa06b: mov rbp,rax
0xa06e: lea rax,[rbp+0x1]
0xa072: cmp bl,0x27
0xa075: mov rdx,rax
0xa078: jne 0xa040
0xa07a: or dword ptr [r12+0x10],0x1
0xa080: jmp 0xa068
0xa088: or dword ptr [r12+0x10],0x2
0xa08e: jmp 0xa068
0xa090: or dword ptr [r12+0x10],0x4
0xa096: jmp 0xa068
0xa0a0: or dword ptr [r12+0x10],0x8
0xa0a6: jmp 0xa068
0xa0b0: or dword ptr [r12+0x10],0x10
0xa0b6: jmp 0xa068
0xa0c0: or dword ptr [r12+0x10],0x20
0xa0c6: jmp 0xa068
0xa0d0: cmp bl,0x2a
0xa0d3: je 0xa289
0xa0d9: lea ecx,[rbx-0x30]
0xa0dc: cmp cl,0x9
0xa0df: jbe 0xa4f7
0xa0e5: cmp bl,0x2e
0xa0e8: je 0xa3bf
0xa0ee: xor eax,eax
0xa0f0: mov esi,0x1
0xa0f5: jmp 0xa127
0xa100: cmp bl,0x4c
0xa103: je 0xa140
0xa105: cmp bl,0x6c
0xa108: je 0xa120
0xa10a: cmp bl,0x6a
0xa10d: je 0xa120
0xa10f: mov edx,ebx
0xa111: and edx,-0x21
0xa114: cmp dl,0x5a
0xa117: je 0xa120
0xa119: cmp bl,0x74
0xa11c: jne 0xa148
0xa11e: nop 
0xa120: add eax,0x8
0xa123: movzx ebx,byte ptr [rbp]
0xa127: add rbp,0x1
0xa12b: cmp bl,0x68
0xa12e: jne 0xa100
0xa130: mov ecx,eax
0xa132: mov edx,esi
0xa134: and ecx,0x1
0xa137: shl edx,cl
0xa139: or eax,edx
0xa13b: jmp 0xa123
0xa140: or eax,0x4
0xa143: jmp 0xa123
0xa148: lea edx,[rbx-0x25]
0xa14b: cmp dl,0x53
0xa14e: ja 0xa76b
0xa154: lea rcx,[rip+0x3231]
0xa15b: movzx edx,dl
0xa15e: movsxd rdx,dword ptr [rcx+rdx*4]
0xa162: add rdx,rcx
0xa165: jmp rdx
0xa289: mov rsi,qword ptr [rsp+0x10]
0xa28e: mov ecx,0x1
0xa293: mov qword ptr [r12+0x18],rbp
0xa298: mov qword ptr [r12+0x20],rax
0xa29d: test rsi,rsi
0xa2a0: cmovne rcx,rsi
0xa2a4: mov qword ptr [rsp+0x10],rcx
0xa2a9: movzx ecx,byte ptr [rbp+0x1]
0xa2ad: lea esi,[rcx-0x30]
0xa2b0: cmp sil,0x9
0xa2b4: jbe 0xa595
0xa2ba: mov rsi,qword ptr [rsp+0x20]
0xa2bf: cmp rsi,-0x1
0xa2c3: lea rdx,[rsi+0x1]
0xa2c7: mov qword ptr [r12+0x28],rsi
0xa2cc: je 0xa76b
0xa2d2: mov rbx,qword ptr [rsp+0x20]
0xa2d7: mov rbp,rax
0xa2da: mov qword ptr [rsp+0x20],rdx
0xa2df: cmp r9,rbx
0xa2e2: mov rcx,qword ptr [r15+0x8]
0xa2e6: ja 0xa962
0xa2ec: add r9,r9
0xa2ef: lea rax,[rbx+0x1]
0xa2f3: cmp r9,rbx
0xa2f6: cmovbe r9,rax
0xa2fa: movabsq rax,0x7ffffffffffffff
0xa304: cmp r9,rax
0xa307: ja 0xabab
0xa30d: mov rsi,r9
0xa310: mov qword ptr [rsp+0x40],r9
0xa315: mov qword ptr [rsp+0x38],r10
0xa31a: shl rsi,0x5
0xa31e: cmp qword ptr [rsp+0x8],rcx
0xa323: mov qword ptr [rsp+0x30],r8
0xa328: je 0xaa41
0xa32e: mov rdi,rcx
0xa331: call 0x1a50
0xa336: mov rdx,qword ptr [r15+0x8]
0xa33a: mov r8,qword ptr [rsp+0x30]
0xa33f: mov rcx,rax
0xa342: mov r10,qword ptr [rsp+0x38]
0xa347: mov r9,qword ptr [rsp+0x40]
0xa34c: test rcx,rcx
0xa34f: je 0xac07
0xa355: cmp qword ptr [rsp+0x8],rdx
0xa35a: mov rax,qword ptr [r15]
0xa35d: je 0xab1b
0xa363: mov qword ptr [r15+0x8],rcx
0xa367: mov rdx,rax
0xa36a: shl rdx,0x5
0xa36e: add rdx,rcx
0xa371: cmp rax,rbx
0xa374: ja 0xa396
0xa376: nop word ptr cs:[rax+rax]
0xa380: add rax,0x1
0xa384: mov dword ptr [rdx],0x0
0xa38a: add rdx,0x20
0xa38e: cmp rax,rbx
0xa391: jbe 0xa380
0xa393: mov qword ptr [r15],rax
0xa396: shl rbx,0x5
0xa39a: lea rax,[rcx+rbx]
0xa39e: mov edx,dword ptr [rax]
0xa3a0: test edx,edx
0xa3a2: jne 0xa87b
0xa3a8: mov dword ptr [rax],0x5
0xa3ae: movzx ebx,byte ptr [rbp]
0xa3b2: lea rdx,[rbp+0x1]
0xa3b6: cmp bl,0x2e
0xa3b9: jne 0xa0ee
0xa3bf: cmp byte ptr [rbp+0x1],0x2a
0xa3c3: mov qword ptr [r12+0x30],rbp
0xa3c8: jne 0xa54e
0xa3ce: mov rsi,qword ptr [rsp+0x18]
0xa3d3: lea r11,[rbp+0x2]
0xa3d7: mov eax,0x2
0xa3dc: mov qword ptr [r12+0x38],r11
0xa3e1: cmp rsi,0x2
0xa3e5: cmovae rax,rsi
0xa3e9: mov qword ptr [rsp+0x18],rax
0xa3ee: movsx eax,byte ptr [rbp+0x2]
0xa3f2: lea edx,[rax-0x30]
0xa3f5: cmp dl,0x9
0xa3f8: jbe 0xaa8c
0xa3fe: mov rbx,qword ptr [r12+0x40]
0xa403: cmp rbx,-0x1
0xa407: je 0xaa65
0xa40d: cmp r9,rbx
0xa410: mov rcx,qword ptr [r15+0x8]
0xa414: jbe 0xa97f
0xa41a: mov rax,qword ptr [r15]
0xa41d: mov rdx,rax
0xa420: shl rdx,0x5
0xa424: add rdx,rcx
0xa427: cmp rax,rbx
0xa42a: ja 0xa446
0xa42c: nop dword ptr [rax]
0xa430: add rax,0x1
0xa434: mov dword ptr [rdx],0x0
0xa43a: add rdx,0x20
0xa43e: cmp rax,rbx
0xa441: jbe 0xa430
0xa443: mov qword ptr [r15],rax
0xa446: shl rbx,0x5
0xa44a: lea rax,[rcx+rbx]
0xa44e: mov edx,dword ptr [rax]
0xa450: test edx,edx
0xa452: jne 0xa96a
0xa458: mov dword ptr [rax],0x5
0xa45e: mov rbp,r11
0xa461: movzx ebx,byte ptr [r11]
0xa465: jmp 0xa0ee
0xa46a: mov rax,rbp
0xa46d: nop dword ptr [rax]
0xa470: add rax,0x1
0xa474: movzx edx,byte ptr [rax]
0xa477: lea ecx,[rdx-0x30]
0xa47a: cmp cl,0x9
0xa47d: jbe 0xa470
0xa47f: cmp dl,0x24
0xa482: mov r13,r8
0xa485: jne 0xa06e
0xa48b: xor edx,edx
0xa48d: movsx eax,bl
0xa490: movabsq rdi,0x1999999999999999
0xa49a: mov rsi,r8
0xa49d: sub eax,0x30
0xa4a0: cmp rdx,rdi
0xa4a3: cltq 
0xa4a5: ja 0xa4ae
0xa4a7: lea rsi,[rdx+rdx*4]
0xa4ab: add rsi,rsi
0xa4ae: mov rcx,rbp
0xa4b1: add rax,rsi
0xa4b4: movzx ebx,byte ptr [rbp+0x1]
0xa4b8: setb sil
0xa4bc: add rbp,0x1
0xa4c0: mov rdx,rax
0xa4c3: movzx esi,sil
0xa4c7: test rsi,rsi
0xa4ca: lea edi,[rbx-0x30]
0xa4cd: jne 0xa85e
0xa4d3: cmp dil,0x9
0xa4d7: jbe 0xa48d
0xa4d9: mov r13,rax
0xa4dc: sub r13,0x1
0xa4e0: cmp r13,-0x3
0xa4e4: ja 0xa76b
0xa4ea: lea rbp,[rcx+0x2]
0xa4ee: movzx ebx,byte ptr [rcx+0x2]
0xa4f2: jmp 0xa06e
0xa4f7: mov qword ptr [r12+0x18],rbp
0xa4fc: movzx edi,byte ptr [rbp]
0xa500: mov rsi,rbp
0xa503: lea ecx,[rdi-0x30]
0xa506: cmp cl,0x9
0xa509: jbe 0xa517
0xa50b: jmp 0xa540
0xa510: mov rbp,rax
0xa513: add rax,0x1
0xa517: movzx edi,byte ptr [rax]
0xa51a: lea edx,[rdi-0x30]
0xa51d: cmp dl,0x9
0xa520: jbe 0xa510
0xa522: mov rcx,rax
0xa525: lea rdx,[rbp+0x2]
0xa529: mov rbp,rax
0xa52c: sub rcx,rsi
0xa52f: mov rsi,qword ptr [rsp+0x10]
0xa534: cmp rsi,rcx
0xa537: cmovae rcx,rsi
0xa53b: mov qword ptr [rsp+0x10],rcx
0xa540: mov qword ptr [r12+0x20],rbp
0xa545: movzx ebx,byte ptr [rbp]
0xa549: jmp 0xa0e5
0xa54e: movzx eax,byte ptr [rbp+0x1]
0xa552: sub eax,0x30
0xa555: cmp al,0x9
0xa557: ja 0xa56e
0xa559: nop dword ptr [rax]
0xa560: add rdx,0x1
0xa564: movzx eax,byte ptr [rdx]
0xa567: sub eax,0x30
0xa56a: cmp al,0x9
0xa56c: jbe 0xa560
0xa56e: mov rsi,qword ptr [rsp+0x18]
0xa573: mov rax,rdx
0xa576: mov qword ptr [r12+0x38],rdx
0xa57b: sub rax,rbp
0xa57e: movzx ebx,byte ptr [rdx]
0xa581: mov rbp,rdx
0xa584: cmp rsi,rax
0xa587: cmovae rax,rsi
0xa58b: mov qword ptr [rsp+0x18],rax
0xa590: jmp 0xa0ee
0xa595: mov rsi,rax
0xa598: add rsi,0x1
0xa59c: movzx edi,byte ptr [rsi]
0xa59f: lea r11d,[rdi-0x30]
0xa5a3: cmp r11b,0x9
0xa5a7: jbe 0xa598
0xa5a9: cmp dil,0x24
0xa5ad: jne 0xa2ba
0xa5b3: xor esi,esi
0xa5b5: movsx eax,cl
0xa5b8: movabsq rdi,0x1999999999999999
0xa5c2: mov rcx,r8
0xa5c5: sub eax,0x30
0xa5c8: cmp rsi,rdi
0xa5cb: cltq 
0xa5cd: ja 0xa5d6
0xa5cf: lea rcx,[rsi+rsi*4]
0xa5d3: add rcx,rcx
0xa5d6: mov rbp,rdx
0xa5d9: xor r11d,r11d
0xa5dc: add rax,rcx
0xa5df: movzx ecx,byte ptr [rdx+0x1]
0xa5e3: setb r11b
0xa5e7: add rdx,0x1
0xa5eb: mov rsi,rax
0xa5ee: test r11,r11
0xa5f1: lea edi,[rcx-0x30]
0xa5f4: jne 0xaafe
0xa5fa: cmp dil,0x9
0xa5fe: jbe 0xa5b5
0xa600: lea rbx,[rax-0x1]
0xa604: cmp rbx,-0x3
0xa608: ja 0xa76b
0xa60e: mov qword ptr [r12+0x28],rbx
0xa613: add rbp,0x2
0xa617: jmp 0xa2df
0xa76b: mov rcx,qword ptr [r15+0x8]
0xa76f: cmp qword ptr [rsp+0x8],rcx
0xa774: je 0xa77e
0xa776: mov rdi,rcx
0xa779: call 0x17d0
0xa77e: mov rdi,qword ptr [r14+0x8]
0xa782: cmp qword ptr [rsp+0x28],rdi
0xa787: je 0xa78e
0xa789: call 0x17d0
0xa78e: call 0x17f0
0xa793: mov dword ptr [rax],0x16
0xa799: mov eax,0xffffffff
0xa79e: jmp 0x9fc2
0xa85e: cmp dil,0x9
0xa862: ja 0xa76b
0xa868: movsx eax,bl
0xa86b: mov rsi,r8
0xa86e: mov rcx,rbp
0xa871: sub eax,0x30
0xa874: cltq 
0xa876: jmp 0xa4b1
0xa87b: cmp edx,0x5
0xa87e: jne 0xa76f
0xa884: movzx ebx,byte ptr [rbp]
0xa888: lea rdx,[rbp+0x1]
0xa88c: jmp 0xa0e5
0xa962: mov rax,qword ptr [r15]
0xa965: jmp 0xa367
0xa96a: cmp edx,0x5
0xa96d: jne 0xa76f
0xa973: movzx ebx,byte ptr [r11]
0xa977: mov rbp,r11
0xa97a: jmp 0xa0ee
0xa97f: add r9,r9
0xa982: lea rax,[rbx+0x1]
0xa986: cmp r9,rbx
0xa989: cmovbe r9,rax
0xa98d: movabsq rax,0x7ffffffffffffff
0xa997: cmp r9,rax
0xa99a: ja 0xabab
0xa9a0: mov rsi,r9
0xa9a3: mov qword ptr [rsp+0x48],r9
0xa9a8: mov qword ptr [rsp+0x40],r10
0xa9ad: shl rsi,0x5
0xa9b1: cmp qword ptr [rsp+0x8],rcx
0xa9b6: mov qword ptr [rsp+0x38],r8
0xa9bb: mov qword ptr [rsp+0x30],r11
0xa9c0: je 0xab7e
0xa9c6: mov rdi,rcx
0xa9c9: call 0x1a50
0xa9ce: mov rdx,qword ptr [r15+0x8]
0xa9d2: mov r11,qword ptr [rsp+0x30]
0xa9d7: mov rcx,rax
0xa9da: mov r8,qword ptr [rsp+0x38]
0xa9df: mov r10,qword ptr [rsp+0x40]
0xa9e4: mov r9,qword ptr [rsp+0x48]
0xa9e9: test rcx,rcx
0xa9ec: je 0xac07
0xa9f2: cmp qword ptr [rsp+0x8],rdx
0xa9f7: mov rax,qword ptr [r15]
0xa9fa: je 0xabc0
0xaa00: mov qword ptr [r15+0x8],rcx
0xaa04: jmp 0xa41d
0xaa14: mov rdi,rcx
0xaa17: call 0x17d0
0xaa1c: mov rdi,qword ptr [r14+0x8]
0xaa20: cmp qword ptr [rsp+0x28],rdi
0xaa25: je 0xaa2c
0xaa27: call 0x17d0
0xaa2c: call 0x17f0
0xaa31: mov dword ptr [rax],0xc
0xaa37: mov eax,0xffffffff
0xaa3c: jmp 0x9fc2
0xaa41: mov rdi,rsi
0xaa44: call 0x19f0
0xaa49: mov rdx,qword ptr [rsp+0x8]
0xaa4e: mov rcx,rax
0xaa51: mov r9,qword ptr [rsp+0x40]
0xaa56: mov r10,qword ptr [rsp+0x38]
0xaa5b: mov r8,qword ptr [rsp+0x30]
0xaa60: jmp 0xa34c
0xaa65: mov rsi,qword ptr [rsp+0x20]
0xaa6a: cmp rsi,-0x1
0xaa6e: lea rax,[rsi+0x1]
0xaa72: mov qword ptr [r12+0x40],rsi
0xaa77: je 0xa76b
0xaa7d: mov rbx,qword ptr [rsp+0x20]
0xaa82: mov qword ptr [rsp+0x20],rax
0xaa87: jmp 0xa40d
0xaa8c: mov rdx,r11
0xaa8f: add rdx,0x1
0xaa93: movzx ecx,byte ptr [rdx]
0xaa96: lea esi,[rcx-0x30]
0xaa99: cmp sil,0x9
0xaa9d: jbe 0xaa8f
0xaa9f: cmp cl,0x24
0xaaa2: jne 0xa3fe
0xaaa8: xor ecx,ecx
0xaaaa: movabsq rsi,0x1999999999999999
0xaab4: sub eax,0x30
0xaab7: mov rdx,r8
0xaaba: cmp rcx,rsi
0xaabd: cltq 
0xaabf: ja 0xaac8
0xaac1: lea rdx,[rcx+rcx*4]
0xaac5: add rdx,rdx
0xaac8: mov rsi,r11
0xaacb: xor ebx,ebx
0xaacd: add rdx,rax
0xaad0: movsx eax,byte ptr [r11+0x1]
0xaad5: setb bl
0xaad8: add r11,0x1
0xaadc: mov rcx,rdx
0xaadf: test rbx,rbx
0xaae2: lea edi,[rax-0x30]
0xaae5: je 0xab58
0xaae7: cmp dil,0x9
0xaaeb: ja 0xa76b
0xaaf1: sub eax,0x30
0xaaf4: mov rdx,r8
0xaaf7: mov rsi,r11
0xaafa: cltq 
0xaafc: jmp 0xaacb
0xaafe: cmp dil,0x9
0xab02: ja 0xa76b
0xab08: movsx eax,cl
0xab0b: mov rbp,rdx
0xab0e: mov rcx,r8
0xab11: sub eax,0x30
0xab14: cltq 
0xab16: jmp 0xa5d9
0xab1b: mov rsi,qword ptr [rsp+0x8]
0xab20: shl rax,0x5
0xab24: mov rdi,rcx
0xab27: mov rdx,rax
0xab2a: mov qword ptr [rsp+0x40],r9
0xab2f: mov qword ptr [rsp+0x38],r10
0xab34: mov qword ptr [rsp+0x30],r8
0xab39: call 0x19d0
0xab3e: mov r9,qword ptr [rsp+0x40]
0xab43: mov rcx,rax
0xab46: mov r10,qword ptr [rsp+0x38]
0xab4b: mov rax,qword ptr [r15]
0xab4e: mov r8,qword ptr [rsp+0x30]
0xab53: jmp 0xa363
0xab58: cmp dil,0x9
0xab5c: jbe 0xaaaa
0xab62: lea rbx,[rdx-0x1]
0xab66: cmp rbx,-0x3
0xab6a: ja 0xa76b
0xab70: mov qword ptr [r12+0x40],rbx
0xab75: lea r11,[rsi+0x2]
0xab79: jmp 0xa40d
0xab7e: mov rdi,rsi
0xab81: call 0x19f0
0xab86: mov rdx,qword ptr [rsp+0x8]
0xab8b: mov rcx,rax
0xab8e: mov r9,qword ptr [rsp+0x48]
0xab93: mov r10,qword ptr [rsp+0x40]
0xab98: mov r8,qword ptr [rsp+0x38]
0xab9d: mov r11,qword ptr [rsp+0x30]
0xaba2: jmp 0xa9e9
0xabab: cmp qword ptr [rsp+0x8],rcx
0xabb0: jne 0xaa14
0xabb6: jmp 0xaa1c
0xabc0: mov rsi,qword ptr [rsp+0x8]
0xabc5: shl rax,0x5
0xabc9: mov rdi,rcx
0xabcc: mov rdx,rax
0xabcf: mov qword ptr [rsp+0x48],r9
0xabd4: mov qword ptr [rsp+0x40],r10
0xabd9: mov qword ptr [rsp+0x38],r8
0xabde: mov qword ptr [rsp+0x30],r11
0xabe3: call 0x19d0
0xabe8: mov r9,qword ptr [rsp+0x48]
0xabed: mov rcx,rax
0xabf0: mov r10,qword ptr [rsp+0x40]
0xabf5: mov rax,qword ptr [r15]
0xabf8: mov r8,qword ptr [rsp+0x38]
0xabfd: mov r11,qword ptr [rsp+0x30]
0xac02: jmp 0xaa00
0xac07: mov rcx,rdx
0xac0a: jmp 0xabab
0xac10: push r15
0xac12: push r14
0xac14: mov r15,rdx
0xac17: push r13
0xac19: push r12
0xac1b: lea r12,[rip+0x204dae]
0xac22: push rbp
0xac23: lea rbp,[rip+0x204dae]
0xac2a: push rbx
0xac2b: mov r13d,edi
0xac2e: mov r14,rsi
0xac31: sub rbp,r12
0xac34: sub rsp,0x8
0xac38: sar rbp,0x3
0xac3c: call 0x1790
0xac41: test rbp,rbp
0xac44: je 0xac66
0xac46: xor ebx,ebx
0xac48: nop dword ptr [rax+rax]
0xac50: mov rdx,r15
0xac53: mov rsi,r14
0xac56: mov edi,r13d
0xac59: call qword ptr [r12+rbx*8]
0xac5d: add rbx,0x1
0xac61: cmp rbp,rbx
0xac64: jne 0xac50
0xac66: add rsp,0x8
0xac6a: pop rbx
0xac6b: pop rbp
0xac6c: pop r12
0xac6e: pop r13
0xac70: pop r14
0xac72: pop r15
0xac74: ret 
0xac80: rep ret 
