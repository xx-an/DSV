0x15b0: sub rsp,0x8
0x15b4: mov rax,qword ptr [rip+0x209a25]
0x15bb: test rax,rax
0x15be: je 0x15c2
0x15c0: call rax
0x15c2: add rsp,0x8
0x15c6: ret 
0x15d6: jmp qword ptr [rip+0x20985c]
0x1630: jmp qword ptr [rip+0x209832]
0x1640: jmp qword ptr [rip+0x20982a]
0x1660: jmp qword ptr [rip+0x20981a]
0x16c0: jmp qword ptr [rip+0x2097ea]
0x16e0: jmp qword ptr [rip+0x2097da]
0x16f0: jmp qword ptr [rip+0x2097d2]
0x1710: jmp qword ptr [rip+0x2097c2]
0x1780: jmp qword ptr [rip+0x20978a]
0x17b0: jmp qword ptr [rip+0x209772]
0x17e0: jmp qword ptr [rip+0x20975a]
0x17f0: jmp qword ptr [rip+0x209752]
0x1800: jmp qword ptr [rip+0x20974a]
0x1860: jmp qword ptr [rip+0x20971a]
0x18b0: jmp qword ptr [rip+0x2096f2]
0x18c0: jmp qword ptr [rip+0x2096ea]
0x1900: jmp qword ptr [rip+0x2096ea]
0x1933: nop word ptr cs:[rax+rax]
0x193d: nop dword ptr [rax]
0x1a31: nop dword ptr [rax]
0x1a6c: nop dword ptr [rax]
0x1e2f: movzx r14d,byte ptr [rcx+0x10]
0x1e34: sub rax,rdx
0x1e37: mov edi,0x20
0x1e3c: mov r13,rax
0x1e3f: call 0x65e0
0x1e44: mov rdx,qword ptr [rbx+0x8]
0x1e48: mov qword ptr [rax+0x8],0x0
0x1e50: mov dword ptr [rax],0x4
0x1e56: mov byte ptr [rax+0x10],r14b
0x1e5a: mov qword ptr [rax+0x18],r13
0x1e5e: test rdx,rdx
0x1e61: je 0x2690
0x1e67: mov qword ptr [rdx+0x8],rax
0x1e6b: mov qword ptr [rbx+0x8],rax
0x1e6f: mov rax,qword ptr [rsp+0x68]
0x1e74: mov qword ptr [rbx+0x18],rax
0x21fd: cmp byte ptr [rip+0x20b1dd],0x0
0x2204: jne 0x1e78
0x220a: test rdx,rdx
0x220d: je 0x266c
0x2213: mov rcx,qword ptr [rbx+0x8]
0x2217: mov esi,dword ptr [rcx]
0x2219: cmp esi,0x1
0x221c: je 0x2450
0x2222: jb 0x1e2f
0x2228: cmp esi,0x2
0x222b: je 0x2648
0x2231: cmp esi,0x4
0x2234: je 0x1e2f
0x223a: call 0x1600
0x2450: movzx r14d,byte ptr [rcx+0x11]
0x2455: jmp 0x1e34
0x2461: call 0x16c0
0x257e: jmp 0x1a27
0x258d: lea rsi,[rip+0x4bf1]
0x2594: xor edi,edi
0x2596: mov rbx,rax
0x2599: mov edx,0x5
0x259e: call 0x1690
0x25a3: xor esi,esi
0x25a5: mov rdx,rax
0x25a8: xor edi,edi
0x25aa: xor eax,eax
0x25ac: mov rcx,rbx
0x25af: call 0x1850
0x25b4: cmp byte ptr [rip+0x20ae29],0x0
0x25bb: lea rsi,[rip+0x5a46]
0x25c2: lea rax,[rip+0x59f7]
0x25c9: mov edx,0x5
0x25ce: cmovne rsi,rax
0x25d2: xor edi,edi
0x25d4: call 0x1690
0x25d9: mov rdi,qword ptr [rip+0x208ae0]
0x25e0: lea rdx,[rip+0x62a9]
0x25e7: mov rcx,rax
0x25ea: mov esi,0x1
0x25ef: xor eax,eax
0x25f1: call 0x18a0
0x25f6: jmp 0x1a27
0x2609: lea rsi,[rip+0x4b8e]
0x2610: xor edi,edi
0x2612: mov rbx,rax
0x2615: mov edx,0x5
0x261a: call 0x1690
0x261f: xor esi,esi
0x2621: mov rdx,rax
0x2624: xor edi,edi
0x2626: xor eax,eax
0x2628: mov rcx,rbx
0x262b: call 0x1850
0x2630: cmp r12d,0x2
0x2634: mov edx,0x5
0x2639: lea rsi,[rip+0x59f8]
0x2640: jne 0x1a27
0x2646: jmp 0x25d2
0x2648: lea rsi,[rip+0x5be1]
0x264f: mov edx,0x5
0x2654: xor edi,edi
0x2656: call 0x1690
0x265b: xor esi,esi
0x265d: mov rdx,rax
0x2660: mov edi,0x1
0x2665: xor eax,eax
0x2667: call 0x1850
0x266c: lea rsi,[rip+0x5b85]
0x2673: mov edx,0x5
0x2678: xor edi,edi
0x267a: call 0x1690
0x267f: xor esi,esi
0x2681: mov rdx,rax
0x2684: mov edi,0x1
0x2689: xor eax,eax
0x268b: call 0x1850
0x2690: call 0x1910
0x2695: nop word ptr cs:[rax+rax]
0x269f: nop 
0x26ca: hlt 
0x26cb: nop dword ptr [rax+rax]
0x26d0: lea rdi,[rip+0x2089a9]
0x26d7: push rbp
0x26d8: lea rax,[rip+0x2089a1]
0x26df: cmp rax,rdi
0x26e2: mov rbp,rsp
0x26e5: je 0x2700
0x26e7: mov rax,qword ptr [rip+0x2088e2]
0x26ee: test rax,rax
0x26f1: je 0x2700
0x26f3: pop rbp
0x26f4: jmp rax
0x2700: pop rbp
0x2701: ret 
0x2710: lea rdi,[rip+0x208969]
0x2717: lea rsi,[rip+0x208962]
0x271e: push rbp
0x271f: sub rsi,rdi
0x2722: mov rbp,rsp
0x2725: sar rsi,0x3
0x2729: mov rax,rsi
0x272c: shr rax,0x3f
0x2730: add rsi,rax
0x2733: sar rsi, 1
0x2736: je 0x2750
0x2738: mov rax,qword ptr [rip+0x2088a9]
0x273f: test rax,rax
0x2742: je 0x2750
0x2744: pop rbp
0x2745: jmp rax
0x2750: pop rbp
0x2751: ret 
0x2771: push rbp
0x2772: mov rbp,rsp
0x2775: je 0x2783
0x2777: mov rdi,qword ptr [rip+0x20888a]
0x277e: call 0x1900
0x2783: call 0x26d0
0x2788: mov byte ptr [rip+0x208939],0x1
0x278f: pop rbp
0x2790: ret 
0x27a0: push rbp
0x27a1: mov rbp,rsp
0x27a4: pop rbp
0x27a5: jmp 0x2710
0x27b0: mov r8,qword ptr [rdi]
0x27b3: xor eax,eax
0x27b5: cmp byte ptr [r8+rsi],0x2a
0x27ba: je 0x27c0
0x27bc: rep ret 
0x27c0: mov r10,qword ptr [rdi+0x8]
0x27c4: cmp byte ptr [r10+rsi],0x0
0x27c9: jne 0x27bc
0x27cb: mov r9,qword ptr [rdi+0x10]
0x27cf: lea rdx,[rsi+0x1]
0x27d3: cmp rdx,r9
0x27d6: jae 0x27bc
0x27d8: movzx eax,byte ptr [r8+rsi+0x1]
0x27de: mov edi,eax
0x27e0: sub eax,0x30
0x27e3: cmp eax,0x9
0x27e6: ja 0x2820
0x27e8: movzx eax,byte ptr [r10+rsi+0x1]
0x27ee: test al,al
0x27f0: je 0x280e
0x27f2: jmp 0x283a
0x27f8: movzx ecx,byte ptr [r8+rdx]
0x27fd: mov edi,ecx
0x27ff: sub ecx,0x30
0x2802: cmp ecx,0x9
0x2805: ja 0x2820
0x2807: cmp byte ptr [r10+rdx],0x0
0x280c: jne 0x2838
0x280e: add rdx,0x1
0x2812: cmp rdx,r9
0x2815: jb 0x27f8
0x2817: rep ret 
0x2820: xor eax,eax
0x2822: cmp dil,0x5d
0x2826: jne 0x27bc
0x2828: movzx eax,byte ptr [r10+rdx]
0x282d: xor eax,0x1
0x2830: ret 
0x2838: rep ret 
0x283a: xor eax,eax
0x283c: ret 
0x2a3a: call 0x16c0
0x2a50: cmp edi,0xb
0x2a53: push rbx
0x2a54: ja 0x2be3
0x2a5a: lea rdx,[rip+0x481f]
0x2a61: mov edi,edi
0x2a63: mov ebx,esi
0x2a65: movsxd rax,dword ptr [rdx+rdi*4]
0x2a69: add rax,rdx
0x2a6c: jmp rax
0x2be3: call 0x1600
0x2be8: nop dword ptr [rax+rax]
0x2d65: lea rcx,[rip+0x459c]
0x2d6c: lea rsi,[rip+0x42ae]
0x2d73: lea rdi,[rip+0x462e]
0x2d7a: mov edx,0x4ee
0x2d7f: call 0x1720
0x2d84: lea rsi,[rip+0x42b1]
0x2d8b: mov edx,0x5
0x2d90: xor edi,edi
0x2d92: call 0x1690
0x2d97: xor esi,esi
0x2d99: mov rdx,rax
0x2d9c: mov edi,0x1
0x2da1: xor eax,eax
0x2da3: call 0x1850
0x2da8: nop dword ptr [rax+rax]
0x2fe3: lea rcx,[rip+0x42ee]
0x2fea: lea rsi,[rip+0x4030]
0x2ff1: lea rdi,[rip+0x43e0]
0x2ff8: mov edx,0x437
0x2ffd: call 0x1720
0x3002: nop dword ptr [rax]
0x3006: nop word ptr cs:[rax+rax]
0x303d: nop dword ptr [rax]
0x3061: nop dword ptr [rax+rax]
0x3066: nop word ptr cs:[rax+rax]
0x3116: nop word ptr cs:[rax+rax]
0x316a: nop word ptr [rax+rax]
0x31ce: nop 
0x3572: cmp sil,0x3a
0x3576: je 0x383b
0x357c: cmp qword ptr [rsp+0x20],0x1
0x3582: je 0x3997
0x3588: lea rdi,[rsp+0x80]
0x3590: mov rsi,rcx
0x3593: mov byte ptr [rsp+0x48],r9b
0x3598: mov qword ptr [rsp+0x40],rcx
0x359d: call 0x27b0
0x35a2: test al,al
0x35a4: mov rcx,qword ptr [rsp+0x40]
0x35a9: movzx r9d,byte ptr [rsp+0x48]
0x35af: jne 0x3391
0x35b5: mov rsi,qword ptr [rsp+0x20]
0x35ba: mov rdi,qword ptr [rsp+0x28]
0x35bf: call 0x28b0
0x35c4: lea rsi,[rip+0x3f4d]
0x35cb: mov rbx,rax
0x35ce: mov edx,0x5
0x35d3: xor edi,edi
0x35d5: call 0x1690
0x35da: mov rcx,rbx
0x35dd: jmp 0x379e
0x3625: mov rdi,r13
0x3628: call 0x15f0
0x362d: mov rdi,rbx
0x3630: call 0x15f0
0x36b8: mov r10,qword ptr [rsp+0x18]
0x36bd: lea eax,[rbx+0x1]
0x36c0: mov byte ptr [r12],0x0
0x36c5: mov r12d,0x5c
0x36cb: nop dword ptr [rax+rax]
0x3785: lea rsi,[rip+0x3dcc]
0x378c: mov rbp,rax
0x378f: mov edx,0x5
0x3794: xor edi,edi
0x3796: call 0x1690
0x379b: mov rcx,rbp
0x379e: mov rdx,rax
0x37a1: xor edi,edi
0x37a3: xor esi,esi
0x37a5: xor eax,eax
0x37a7: call 0x1850
0x37ac: mov rdi,rbx
0x37af: call 0x15f0
0x37b4: jmp 0x3635
0x383b: mov qword ptr [rsp+0x68],rbx
0x3840: mov qword ptr [rsp+0x60],rbp
0x3845: xor r8d,r8d
0x3848: mov rbx,qword ptr [rsp+0x20]
0x384d: mov rbp,qword ptr [rsp+0x28]
0x3852: mov qword ptr [rsp+0x50],r12
0x3857: mov qword ptr [rsp+0x40],r13
0x385c: mov r12,r8
0x385f: mov qword ptr [rsp+0x48],rcx
0x3864: mov byte ptr [rsp+0x5f],r9b
0x3869: nop dword ptr [rax]
0x3870: lea rax,[rip+0x207309]
0x3877: mov rdx,rbx
0x387a: mov rdi,rbp
0x387d: mov r13,qword ptr [rax+r12*8]
0x3881: mov rsi,r13
0x3884: call 0x1620
0x3889: test eax,eax
0x388b: jne 0x389e
0x388d: mov rdi,r13
0x3890: call 0x16b0
0x3895: cmp rbx,rax
0x3898: je 0x3944
0x389e: add r12,0x1
0x38a2: cmp r12,0xc
0x38a6: jne 0x3870
0x38a8: mov rcx,qword ptr [rsp+0x48]
0x38ad: movzx r9d,byte ptr [rsp+0x5f]
0x38b3: lea rdi,[rsp+0x80]
0x38bb: mov r13,qword ptr [rsp+0x40]
0x38c0: mov r12,qword ptr [rsp+0x50]
0x38c5: mov rbp,qword ptr [rsp+0x60]
0x38ca: mov rsi,rcx
0x38cd: mov qword ptr [rsp+0x40],rcx
0x38d2: mov byte ptr [rsp+0x48],r9b
0x38d7: call 0x27b0
0x38dc: test al,al
0x38de: mov rcx,qword ptr [rsp+0x40]
0x38e3: movzx r9d,byte ptr [rsp+0x48]
0x38e9: jne 0x3391
0x38ef: mov rsi,qword ptr [rsp+0x20]
0x38f4: mov rdi,qword ptr [rsp+0x28]
0x38f9: call 0x28b0
0x38fe: mov rdi,rax
0x3901: mov rbx,rax
0x3904: call 0x5f40
0x3909: mov edx,0x5
0x390e: mov rbp,rax
0x3911: lea rsi,[rip+0x3761]
0x3918: jmp 0x3794
0x3944: mov edi,0x20
0x3949: mov rbx,qword ptr [rsp+0x68]
0x394e: mov qword ptr [rsp+0x18],r12
0x3953: call 0x65e0
0x3958: mov rdi,qword ptr [rsp+0x10]
0x395d: mov r8,qword ptr [rsp+0x18]
0x3962: mov qword ptr [rax+0x8],0x0
0x396a: mov dword ptr [rax],0x2
0x3970: mov rdx,qword ptr [rdi+0x8]
0x3974: mov dword ptr [rax+0x10],r8d
0x3978: test rdx,rdx
0x397b: je 0x3aad
0x3981: mov rdi,qword ptr [rsp+0x10]
0x3986: mov qword ptr [rdx+0x8],rax
0x398a: lea r13,[rbx+0x2]
0x398e: mov qword ptr [rdi+0x8],rax
0x3992: jmp 0x3463
0x3997: mov edi,0x20
0x399c: call 0x65e0
0x39a1: mov rdi,qword ptr [rsp+0x28]
0x39a6: mov qword ptr [rax+0x8],0x0
0x39ae: mov dword ptr [rax],0x3
0x39b4: movzx edx,byte ptr [rdi]
0x39b7: mov rdi,qword ptr [rsp+0x10]
0x39bc: mov byte ptr [rax+0x10],dl
0x39bf: mov rdx,qword ptr [rdi+0x8]
0x39c3: test rdx,rdx
0x39c6: jne 0x3981
0x39c8: lea rcx,[rip+0x39a1]
0x39cf: lea rsi,[rip+0x364b]
0x39d6: lea rdi,[rip+0x3691]
0x39dd: mov edx,0x2e5
0x39e2: call 0x1720
0x3a43: add rsp,0x20
0x3a47: lea eax,[rbx+0x3]
0x3a4a: mov r10,qword ptr [rsp+0x30]
0x3a4f: jmp 0x36d0
0x3a7b: jmp 0x3635
0x3aa8: call 0x16c0
0x3aad: lea rcx,[rip+0x38dc]
0x3ab4: lea rsi,[rip+0x3566]
0x3abb: lea rdi,[rip+0x35ac]
0x3ac2: mov edx,0x2bb
0x3ac7: call 0x1720
0x3ad1: nop dword ptr [rax+rax]
0x3ad6: nop word ptr cs:[rax+rax]
0x3cbd: nop dword ptr [rax]
0x4120: mov qword ptr [rip+0x2092c9],rdi
0x4127: ret 
0x4130: mov byte ptr [rip+0x2092b1],dil
0x4137: ret 
0x4140: push rbp
0x4141: push rbx
0x4142: sub rsp,0x8
0x4146: mov rdi,qword ptr [rip+0x206f3b]
0x414d: call 0x6d20
0x4152: test eax,eax
0x4154: je 0x416c
0x4156: call 0x1610
0x415b: cmp byte ptr [rip+0x209286],0x0
0x4162: mov rbx,rax
0x4165: je 0x4183
0x4167: cmp dword ptr [rax],0x20
0x416a: jne 0x4183
0x416c: mov rdi,qword ptr [rip+0x206f4d]
0x4173: call 0x6d20
0x4178: test eax,eax
0x417a: jne 0x41c2
0x417c: add rsp,0x8
0x4180: pop rbx
0x4181: pop rbp
0x4182: ret 
0x4183: lea rsi,[rip+0x2f0a]
0x418a: xor edi,edi
0x418c: mov edx,0x5
0x4191: call 0x1690
0x4196: mov rdi,qword ptr [rip+0x209253]
0x419d: mov rbp,rax
0x41a0: test rdi,rdi
0x41a3: je 0x41cd
0x41a5: call 0x5d40
0x41aa: mov esi,dword ptr [rbx]
0x41ac: lea rdx,[rip+0x41a1]
0x41b3: mov rcx,rax
0x41b6: mov r8,rbp
0x41b9: xor edi,edi
0x41bb: xor eax,eax
0x41bd: call 0x1850
0x41c2: mov edi,dword ptr [rip+0x206e50]
0x41c8: call 0x1630
0x41cd: mov esi,dword ptr [rbx]
0x41cf: lea rdx,[rip+0x4182]
0x41d6: mov rcx,rax
0x41d9: xor edi,edi
0x41db: xor eax,eax
0x41dd: call 0x1850
0x41e2: jmp 0x41c2
0x41f0: jmp 0x1760
0x42cf: nop 
0x42d0: push rbp
0x42d1: push rbx
0x42d2: mov rbp,rdi
0x42d5: mov ebx,esi
0x42d7: sub rsp,0x8
0x42db: call 0x6e00
0x42e0: movzx edx,byte ptr [rax]
0x42e3: and edx,-0x21
0x42e6: cmp dl,0x55
0x42e9: je 0x4360
0x42eb: cmp dl,0x47
0x42ee: je 0x4310
0x42f0: lea rax,[rip+0x40bc]
0x42f7: lea rdx,[rip+0x40b7]
0x42fe: cmp ebx,0x9
0x4301: cmovne rax,rdx
0x4305: add rsp,0x8
0x4309: pop rbx
0x430a: pop rbp
0x430b: ret 
0x4310: movzx edx,byte ptr [rax+0x1]
0x4314: and edx,-0x21
0x4317: cmp dl,0x42
0x431a: jne 0x42f0
0x431c: cmp byte ptr [rax+0x2],0x31
0x4320: jne 0x42f0
0x4322: cmp byte ptr [rax+0x3],0x38
0x4326: jne 0x42f0
0x4328: cmp byte ptr [rax+0x4],0x30
0x432c: jne 0x42f0
0x432e: cmp byte ptr [rax+0x5],0x33
0x4332: jne 0x42f0
0x4334: cmp byte ptr [rax+0x6],0x30
0x4338: jne 0x42f0
0x433a: cmp byte ptr [rax+0x7],0x0
0x433e: jne 0x42f0
0x4340: cmp byte ptr [rbp],0x60
0x4344: lea rax,[rip+0x4061]
0x434b: lea rdx,[rip+0x405e]
0x4352: cmovne rax,rdx
0x4356: add rsp,0x8
0x435a: pop rbx
0x435b: pop rbp
0x435c: ret 
0x4360: movzx edx,byte ptr [rax+0x1]
0x4364: and edx,-0x21
0x4367: cmp dl,0x54
0x436a: jne 0x42f0
0x436c: movzx edx,byte ptr [rax+0x2]
0x4370: and edx,-0x21
0x4373: cmp dl,0x46
0x4376: jne 0x42f0
0x437c: cmp byte ptr [rax+0x3],0x2d
0x4380: jne 0x42f0
0x4386: cmp byte ptr [rax+0x4],0x38
0x438a: jne 0x42f0
0x4390: cmp byte ptr [rax+0x5],0x0
0x4394: jne 0x42f0
0x439a: cmp byte ptr [rbp],0x60
0x439e: lea rax,[rip+0x3fff]
0x43a5: lea rdx,[rip+0x3ffc]
0x43ac: cmovne rax,rdx
0x43b0: add rsp,0x8
0x43b4: pop rbx
0x43b5: pop rbp
0x43b6: ret 
0x4493: xor r11d,r11d
0x4496: mov rax,rbp
0x4499: mov r8d,r12d
0x449c: mov rbp,r11
0x449f: mov r11,rax
0x44a2: nop word ptr [rax+rax]
0x44a8: cmp r11,rbp
0x44ab: setne r12b
0x44af: cmp r11,-0x1
0x44b3: jne 0x44c2
0x44b5: mov rax,qword ptr [rsp+0x10]
0x44ba: cmp byte ptr [rax+rbp],0x0
0x44be: setne r12b
0x44c2: test r12b,r12b
0x44c5: je 0x4b20
0x44cb: cmp dword ptr [rsp+0x8],0x2
0x44d0: mov rdi,qword ptr [rsp+0x10]
0x44d5: lea r9,[rdi+rbp]
0x44d9: setne al
0x44dc: and al,byte ptr [rsp+0xd]
0x44e0: mov r10d,eax
0x44e3: je 0x4590
0x44e9: mov rax,qword ptr [rsp+0x18]
0x44ee: test rax,rax
0x44f1: je 0x4920
0x44f7: cmp r11,-0x1
0x44fb: lea rbx,[rbp+rax]
0x4500: jne 0x4530
0x4502: cmp rax,0x1
0x4506: jbe 0x4530
0x4508: mov byte ptr [rsp+0x38],r8b
0x450d: mov byte ptr [rsp+0x30],r10b
0x4512: mov qword ptr [rsp+0x28],r9
0x4517: call 0x16b0
0x451c: movzx r8d,byte ptr [rsp+0x38]
0x4522: movzx r10d,byte ptr [rsp+0x30]
0x4528: mov r11,rax
0x452b: mov r9,qword ptr [rsp+0x28]
0x4530: cmp rbx,r11
0x4533: mov byte ptr [rsp+0x28],r10b
0x4538: ja 0x4af0
0x453e: mov rdx,qword ptr [rsp+0x18]
0x4543: mov rsi,qword ptr [rsp+0x48]
0x4548: mov rdi,r9
0x454b: mov qword ptr [rsp+0x40],r11
0x4550: mov byte ptr [rsp+0x38],r8b
0x4555: mov qword ptr [rsp+0x30],r9
0x455a: call 0x1780
0x455f: test eax,eax
0x4561: mov r9,qword ptr [rsp+0x30]
0x4566: movzx r8d,byte ptr [rsp+0x38]
0x456c: mov r11,qword ptr [rsp+0x40]
0x4571: jne 0x4af0
0x4577: cmp byte ptr [rsp+0xf],0x0
0x457c: movzx r10d,byte ptr [rsp+0x28]
0x4582: jne 0x5505
0x4588: nop dword ptr [rax+rax]
0x4590: movzx ebx,byte ptr [r9]
0x4594: cmp bl,0x7e
0x4597: ja 0x48b8
0x459d: lea rcx,[rip+0x3ea8]
0x45a4: movzx edx,bl
0x45a7: movsxd rax,dword ptr [rcx+rdx*4]
0x45ab: add rax,rcx
0x45ae: jmp rax
0x45e8: cmp byte ptr [rsp+0xd],0x1
0x45ed: jne 0x4702
0x45f3: test dl,dl
0x45f5: jne 0x4702
0x45fb: mov rsi,qword ptr [rsp+0x20]
0x4600: test rsi,rsi
0x4603: je 0x4619
0x4605: mov edx,ebx
0x4607: shr dl,0x5
0x460a: movzx edx,dl
0x460d: mov edx,dword ptr [rsi+rdx*4]
0x4610: btl edx,ebx
0x4613: jb 0x4763
0x4619: test r10b,r10b
0x461c: jne 0x4763
0x4622: xor eax,0x1
0x4625: add rbp,0x1
0x4629: and eax,r8d
0x462c: test al,al
0x462e: je 0x4650
0x4630: cmp r13,r15
0x4633: jbe 0x463a
0x4635: mov byte ptr [r14+r15],0x27
0x463a: lea rax,[r15+0x1]
0x463e: cmp r13,rax
0x4641: jbe 0x4649
0x4643: mov byte ptr [r14+r15+0x1],0x27
0x4649: add r15,0x2
0x464d: xor r8d,r8d
0x4650: cmp r15,r13
0x4653: jae 0x4659
0x4655: mov byte ptr [r14+r15],bl
0x4659: movzx edi,byte ptr [rsp+0xe]
0x465e: add r15,0x1
0x4662: mov eax,0x0
0x4667: test r12b,r12b
0x466a: cmove edi,eax
0x466d: mov byte ptr [rsp+0xe],dil
0x4672: jmp 0x44a8
0x4702: cmp byte ptr [rsp+0xf],0x0
0x4707: jne 0x45fb
0x470d: jmp 0x4619
0x4763: cmp dword ptr [rsp+0x8],0x2
0x4768: sete dl
0x476b: cmp byte ptr [rsp+0xf],0x0
0x4770: mov eax,edx
0x4772: jne 0x4fc8
0x4778: mov eax,r8d
0x477b: xor eax,0x1
0x477e: and al,dl
0x4780: je 0x47b1
0x4782: cmp r13,r15
0x4785: jbe 0x478c
0x4787: mov byte ptr [r14+r15],0x27
0x478c: lea rdx,[r15+0x1]
0x4790: cmp r13,rdx
0x4793: jbe 0x479b
0x4795: mov byte ptr [r14+r15+0x1],0x24
0x479b: lea rdx,[r15+0x2]
0x479f: cmp r13,rdx
0x47a2: jbe 0x47aa
0x47a4: mov byte ptr [r14+r15+0x2],0x27
0x47aa: add r15,0x3
0x47ae: mov r8d,eax
0x47b1: cmp r13,r15
0x47b4: jbe 0x47bb
0x47b6: mov byte ptr [r14+r15],0x5c
0x47bb: add r15,0x1
0x47bf: add rbp,0x1
0x47c3: jmp 0x4650
0x48b0: xor r10d,r10d
0x48b3: nop dword ptr [rax+rax]
0x48b8: cmp qword ptr [rsp+0x58],0x1
0x48be: jne 0x4c68
0x48c4: mov qword ptr [rsp+0x38],r11
0x48c9: mov byte ptr [rsp+0x30],r8b
0x48ce: mov byte ptr [rsp+0x28],r10b
0x48d3: call 0x18e0
0x48d8: mov rcx,qword ptr [rax]
0x48db: movzx edx,bl
0x48de: movzx r10d,byte ptr [rsp+0x28]
0x48e4: movzx r8d,byte ptr [rsp+0x30]
0x48ea: mov r11,qword ptr [rsp+0x38]
0x48ef: mov edi,0x1
0x48f4: movzx eax,word ptr [rcx+rdx*2]
0x48f8: and ax,0x4000
0x48fc: setne r12b
0x4900: sete al
0x4903: and al,byte ptr [rsp+0xd]
0x4907: test al,al
0x4909: jne 0x52a1
0x490f: cmp dword ptr [rsp+0x8],0x2
0x4914: sete dl
0x4917: jmp 0x45e8
0x4920: movzx ebx,byte ptr [r9]
0x4924: cmp bl,0x7e
0x4927: ja 0x48b0
0x4929: lea rcx,[rip+0x3d18]
0x4930: movzx edx,bl
0x4933: movsxd rax,dword ptr [rcx+rdx*4]
0x4937: add rax,rcx
0x493a: jmp rax
0x4af0: xor r10d,r10d
0x4af3: jmp 0x4590
0x4b20: cmp dword ptr [rsp+0x8],0x2
0x4b25: movzx ebx,byte ptr [rsp+0xf]
0x4b2a: mov r12d,r8d
0x4b2d: mov rbp,r11
0x4b30: sete dl
0x4b33: mov eax,ebx
0x4b35: test r15,r15
0x4b38: sete cl
0x4b3b: and eax,edx
0x4b3d: and al,cl
0x4b3f: jne 0x55a6
0x4b45: mov eax,ebx
0x4b47: xor eax,0x1
0x4b4a: and dl,al
0x4b4c: je 0x54bc
0x4b52: cmp byte ptr [rsp+0x7c],0x0
0x4b57: je 0x54ba
0x4b5d: cmp byte ptr [rsp+0xe],0x0
0x4b62: jne 0x555d
0x4b68: test r13,r13
0x4b6b: sete al
0x4b6e: cmp qword ptr [rsp+0x50],0x0
0x4b74: setne dl
0x4b77: and al,dl
0x4b79: je 0x559c
0x4b7f: mov r13,qword ptr [rsp+0x50]
0x4b84: lea rbx,[rip+0x382a]
0x4b8b: mov byte ptr [r14],0x27
0x4b8f: mov dword ptr [rsp+0x8],0x2
0x4b97: mov r15d,0x1
0x4b9d: mov qword ptr [rsp+0x18],0x1
0x4ba6: mov byte ptr [rsp+0xf],0x0
0x4bab: mov qword ptr [rsp+0x48],rbx
0x4bb0: mov byte ptr [rsp+0x7c],al
0x4bb4: jmp 0x4493
0x4c68: lea rax,[rsp+0xa0]
0x4c70: cmp r11,-0x1
0x4c74: mov qword ptr [rsp+0xa0],0x0
0x4c80: mov qword ptr [rsp+0x28],rax
0x4c85: jne 0x4cb4
0x4c87: mov rdi,qword ptr [rsp+0x10]
0x4c8c: mov byte ptr [rsp+0x40],r8b
0x4c91: mov byte ptr [rsp+0x38],r10b
0x4c96: mov qword ptr [rsp+0x30],r9
0x4c9b: call 0x16b0
0x4ca0: movzx r8d,byte ptr [rsp+0x40]
0x4ca6: movzx r10d,byte ptr [rsp+0x38]
0x4cac: mov r11,rax
0x4caf: mov r9,qword ptr [rsp+0x30]
0x4cb4: lea rax,[rsp+0x9c]
0x4cbc: xor ecx,ecx
0x4cbe: mov byte ptr [rsp+0x7e],bl
0x4cc2: mov byte ptr [rsp+0x7d],r8b
0x4cc7: mov rbx,rcx
0x4cca: mov qword ptr [rsp+0x88],r9
0x4cd2: mov qword ptr [rsp+0x38],rax
0x4cd7: mov byte ptr [rsp+0x7f],r10b
0x4cdc: mov qword ptr [rsp+0x80],r15
0x4ce4: mov qword ptr [rsp+0x40],r14
0x4ce9: mov qword ptr [rsp+0x70],r13
0x4cee: mov qword ptr [rsp+0x30],r11
0x4cf3: mov rax,qword ptr [rsp+0x10]
0x4cf8: lea r14,[rbp+rbx]
0x4cfd: mov rdx,qword ptr [rsp+0x30]
0x4d02: mov rcx,qword ptr [rsp+0x28]
0x4d07: mov rdi,qword ptr [rsp+0x38]
0x4d0c: lea r13,[rax+r14]
0x4d10: sub rdx,r14
0x4d13: mov rsi,r13
0x4d16: call 0x6c90
0x4d1b: test rax,rax
0x4d1e: mov r15,rax
0x4d21: je 0x4d71
0x4d23: cmp rax,-0x1
0x4d27: je 0x5345
0x4d2d: cmp rax,-0x2
0x4d31: je 0x52d1
0x4d37: cmp dword ptr [rsp+0x8],0x2
0x4d3c: sete al
0x4d3f: and al,byte ptr [rsp+0xf]
0x4d43: jne 0x4ee0
0x4d49: mov edi,dword ptr [rsp+0x9c]
0x4d50: call 0x18c0
0x4d55: mov rdi,qword ptr [rsp+0x28]
0x4d5a: test eax,eax
0x4d5c: mov eax,0x0
0x4d61: cmove r12d,eax
0x4d65: add rbx,r15
0x4d68: call 0x18b0
0x4d6d: test eax,eax
0x4d6f: je 0x4cf3
0x4d71: mov edx,r12d
0x4d74: mov rdi,rbx
0x4d77: movzx r8d,byte ptr [rsp+0x7d]
0x4d7d: xor edx,0x1
0x4d80: movzx ebx,byte ptr [rsp+0x7e]
0x4d85: movzx r10d,byte ptr [rsp+0x7f]
0x4d8b: and dl,byte ptr [rsp+0xd]
0x4d8f: mov r15,qword ptr [rsp+0x80]
0x4d97: mov r14,qword ptr [rsp+0x40]
0x4d9c: mov r13,qword ptr [rsp+0x70]
0x4da1: mov r11,qword ptr [rsp+0x30]
0x4da6: cmp rdi,0x1
0x4daa: jbe 0x53ab
0x4db0: mov rcx,rdi
0x4db3: xor esi,esi
0x4db5: movzx r9d,byte ptr [rsp+0xf]
0x4dbb: add rcx,rbp
0x4dbe: mov rdi,qword ptr [rsp+0x10]
0x4dc3: jmp 0x4e7e
0x4dd0: cmp dword ptr [rsp+0x8],0x2
0x4dd5: sete al
0x4dd8: test r9b,r9b
0x4ddb: jne 0x5290
0x4de1: mov esi,r8d
0x4de4: xor esi,0x1
0x4de7: and al,sil
0x4dea: je 0x4e1b
0x4dec: cmp r13,r15
0x4def: jbe 0x4df6
0x4df1: mov byte ptr [r14+r15],0x27
0x4df6: lea rsi,[r15+0x1]
0x4dfa: cmp r13,rsi
0x4dfd: jbe 0x4e05
0x4dff: mov byte ptr [r14+r15+0x1],0x24
0x4e05: lea rsi,[r15+0x2]
0x4e09: cmp r13,rsi
0x4e0c: jbe 0x4e14
0x4e0e: mov byte ptr [r14+r15+0x2],0x27
0x4e14: add r15,0x3
0x4e18: mov r8d,eax
0x4e1b: cmp r13,r15
0x4e1e: jbe 0x4e25
0x4e20: mov byte ptr [r14+r15],0x5c
0x4e25: lea rax,[r15+0x1]
0x4e29: cmp r13,rax
0x4e2c: jbe 0x4e3b
0x4e2e: mov eax,ebx
0x4e30: shr al,0x6
0x4e33: add eax,0x30
0x4e36: mov byte ptr [r14+r15+0x1],al
0x4e3b: lea rax,[r15+0x2]
0x4e3f: cmp r13,rax
0x4e42: jbe 0x4e54
0x4e44: mov eax,ebx
0x4e46: shr al,0x3
0x4e49: and eax,0x7
0x4e4c: add eax,0x30
0x4e4f: mov byte ptr [r14+r15+0x2],al
0x4e54: and ebx,0x7
0x4e57: add rbp,0x1
0x4e5b: add r15,0x3
0x4e5f: add ebx,0x30
0x4e62: cmp rbp,rcx
0x4e65: jae 0x4650
0x4e6b: mov esi,edx
0x4e6d: cmp r13,r15
0x4e70: jbe 0x4e76
0x4e72: mov byte ptr [r14+r15],bl
0x4e76: movzx ebx,byte ptr [rdi+rbp]
0x4e7a: add r15,0x1
0x4e7e: test dl,dl
0x4e80: jne 0x4dd0
0x4e86: mov eax,esi
0x4e88: xor eax,0x1
0x4e8b: and eax,r8d
0x4e8e: test r10b,r10b
0x4e91: je 0x4ea1
0x4e93: cmp r13,r15
0x4e96: jbe 0x4e9d
0x4e98: mov byte ptr [r14+r15],0x5c
0x4e9d: add r15,0x1
0x4ea1: add rbp,0x1
0x4ea5: cmp rbp,rcx
0x4ea8: jae 0x462c
0x4eae: test al,al
0x4eb0: je 0x52ae
0x4eb6: cmp r13,r15
0x4eb9: jbe 0x4ec0
0x4ebb: mov byte ptr [r14+r15],0x27
0x4ec0: lea rax,[r15+0x1]
0x4ec4: cmp r13,rax
0x4ec7: jbe 0x4ecf
0x4ec9: mov byte ptr [r14+r15+0x1],0x27
0x4ecf: add r15,0x2
0x4ed3: xor r10d,r10d
0x4ed6: xor r8d,r8d
0x4ed9: jmp 0x4e6d
0x4ee0: cmp r15,0x1
0x4ee4: je 0x4d49
0x4eea: mov rdi,qword ptr [rsp+0x10]
0x4eef: lea rcx,[rdi+r15]
0x4ef3: lea rdx,[rdi+r14+0x1]
0x4ef8: lea r8,[rcx+r14]
0x4efc: jmp 0x4f0d
0x4f00: add rdx,0x1
0x4f04: cmp r8,rdx
0x4f07: je 0x4d49
0x4f0d: movzx ecx,byte ptr [rdx]
0x4f10: sub ecx,0x5b
0x4f13: cmp cl,0x21
0x4f16: ja 0x4f00
0x4f18: mov esi,0x1
0x4f1d: shl rsi,cl
0x4f20: mov rcx,rsi
0x4f23: movabsq rsi,0x20000002b
0x4f2d: test rcx,rsi
0x4f30: je 0x4f00
0x4f32: mov r14,qword ptr [rsp+0x40]
0x4f37: mov r13,qword ptr [rsp+0x70]
0x4f3c: mov rbp,qword ptr [rsp+0x30]
0x4f41: mov dword ptr [rsp+0x8],0x2
0x4f49: cmp byte ptr [rsp+0xd],0x0
0x4f4e: je 0x4f60
0x4f50: test al,al
0x4f52: mov eax,0x4
0x4f57: cmove eax,dword ptr [rsp+0x8]
0x4f5c: mov dword ptr [rsp+0x8],eax
0x4f60: sub rsp,0x8
0x4f64: mov rcx,rbp
0x4f67: mov rsi,r13
0x4f6a: push qword ptr [rsp+0x68]
0x4f6e: push qword ptr [rsp+0x78]
0x4f72: mov rdi,r14
0x4f75: push 0x0
0x4f77: mov r9d,dword ptr [rsp+0x98]
0x4f7f: mov r8d,dword ptr [rsp+0x28]
0x4f84: mov rdx,qword ptr [rsp+0x30]
0x4f89: and r9d,-0x3
0x4f8d: call 0x43c0
0x4f92: add rsp,0x20
0x4f96: mov r15,rax
0x4f99: mov rbx,qword ptr [rsp+0xa8]
0x4fa1: xor rbx,qword ptr fs:0x28
0x4faa: mov rax,r15
0x4fad: jne 0x55b3
0x4fb3: add rsp,0xb8
0x4fba: pop rbx
0x4fbb: pop rbp
0x4fbc: pop r12
0x4fbe: pop r13
0x4fc0: pop r14
0x4fc2: pop r15
0x4fc4: ret 
0x4fc8: mov rbp,r11
0x4fcb: jmp 0x4f49
0x5031: test r13,r13
0x5034: jne 0x55ca
0x503a: lea rax,[rip+0x3374]
0x5041: mov qword ptr [rsp+0x50],0x0
0x504a: mov byte ptr [rsp+0xe],0x1
0x504f: mov byte ptr [rsp+0x7c],0x0
0x5054: xor r12d,r12d
0x5057: mov byte ptr [rsp+0xf],0x0
0x505c: mov qword ptr [rsp+0x18],0x1
0x5065: mov qword ptr [rsp+0x48],rax
0x506a: mov r15d,0x1
0x5070: mov dword ptr [rsp+0x8],0x2
0x5078: jmp 0x4493
0x5290: movzx ebx,byte ptr [rsp+0xf]
0x5295: mov rbp,r11
0x5298: mov byte ptr [rsp+0xd],bl
0x529c: jmp 0x4f49
0x52a1: movzx edx,byte ptr [rsp+0xd]
0x52a6: xor r12d,r12d
0x52a9: jmp 0x4db0
0x52ae: xor r10d,r10d
0x52b1: jmp 0x4e6d
0x52d1: mov r11,qword ptr [rsp+0x30]
0x52d6: mov rsi,r14
0x52d9: mov rcx,r13
0x52dc: mov rax,rbx
0x52df: mov rdi,rbx
0x52e2: movzx r8d,byte ptr [rsp+0x7d]
0x52e8: movzx ebx,byte ptr [rsp+0x7e]
0x52ed: mov r9,qword ptr [rsp+0x88]
0x52f5: cmp rsi,r11
0x52f8: movzx r10d,byte ptr [rsp+0x7f]
0x52fe: mov r15,qword ptr [rsp+0x80]
0x5306: mov r14,qword ptr [rsp+0x40]
0x530b: mov r13,qword ptr [rsp+0x70]
0x5310: jae 0x5338
0x5312: cmp byte ptr [rcx],0x0
0x5315: jne 0x5327
0x5317: jmp 0x5338
0x5320: cmp byte ptr [r9+rax],0x0
0x5325: je 0x5335
0x5327: add rax,0x1
0x532b: lea rdx,[rbp+rax]
0x5330: cmp r11,rdx
0x5333: ja 0x5320
0x5335: mov rdi,rax
0x5338: movzx edx,byte ptr [rsp+0xd]
0x533d: xor r12d,r12d
0x5340: jmp 0x4da6
0x5345: mov rdi,rbx
0x5348: movzx r8d,byte ptr [rsp+0x7d]
0x534e: movzx ebx,byte ptr [rsp+0x7e]
0x5353: movzx r10d,byte ptr [rsp+0x7f]
0x5359: mov r15,qword ptr [rsp+0x80]
0x5361: xor r12d,r12d
0x5364: mov r14,qword ptr [rsp+0x40]
0x5369: mov r13,qword ptr [rsp+0x70]
0x536e: mov r11,qword ptr [rsp+0x30]
0x5373: movzx edx,byte ptr [rsp+0xd]
0x5378: jmp 0x4da6
0x53ab: mov eax,edx
0x53ad: jmp 0x4907
0x54ba: mov eax,edx
0x54bc: mov rbx,qword ptr [rsp+0x48]
0x54c1: test rbx,rbx
0x54c4: je 0x54f2
0x54c6: test al,al
0x54c8: je 0x54f2
0x54ca: movzx ecx,byte ptr [rbx]
0x54cd: mov rax,rbx
0x54d0: test cl,cl
0x54d2: je 0x54f2
0x54d4: mov rdx,r15
0x54d7: sub rax,r15
0x54da: cmp r13,rdx
0x54dd: jbe 0x54e3
0x54df: mov byte ptr [r14+rdx],cl
0x54e3: add rdx,0x1
0x54e7: movzx ecx,byte ptr [rax+rdx]
0x54eb: test cl,cl
0x54ed: jne 0x54da
0x54ef: mov r15,rdx
0x54f2: cmp r13,r15
0x54f5: jbe 0x4f99
0x54fb: mov byte ptr [r14+r15],0x0
0x5500: jmp 0x4f99
0x5505: cmp dword ptr [rsp+0x8],0x2
0x550a: movzx ebx,byte ptr [rsp+0xf]
0x550f: mov rbp,r11
0x5512: sete al
0x5515: mov byte ptr [rsp+0xd],bl
0x5519: jmp 0x4f49
0x555d: sub rsp,0x8
0x5561: mov r8d,0x5
0x5567: mov rcx,r11
0x556a: push qword ptr [rsp+0x68]
0x556e: push qword ptr [rsp+0x78]
0x5572: mov rdi,r14
0x5575: push qword ptr [rsp+0x38]
0x5579: mov r9d,dword ptr [rsp+0x98]
0x5581: mov rdx,qword ptr [rsp+0x30]
0x5586: mov rsi,qword ptr [rsp+0x70]
0x558b: call 0x43c0
0x5590: add rsp,0x20
0x5594: mov r15,rax
0x5597: jmp 0x4f99
0x559c: movzx eax,byte ptr [rsp+0x7c]
0x55a1: jmp 0x54bc
0x55a6: mov dword ptr [rsp+0x8],0x2
0x55ae: jmp 0x4f49
0x55b3: call 0x16c0
0x55b8: mov byte ptr [rsp+0xd],0x0
0x55bd: jmp 0x5031
0x55ca: mov byte ptr [rsp+0xe],0x1
0x55cf: xor eax,eax
0x55d1: xor r12d,r12d
0x55d4: mov qword ptr [rsp+0x50],0x0
0x55dd: jmp 0x4b84
0x55f4: nop 
0x55f6: nop word ptr cs:[rax+rax]
0x56ec: add rsp,0x20
0x56f0: mov r11,qword ptr [rsp+0x10]
0x56f5: cmp r11,rax
0x56f8: ja 0x5761
0x56fa: lea rsi,[rax+0x1]
0x56fe: lea rax,[rip+0x207cfb]
0x5705: cmp r12,rax
0x5708: mov qword ptr [rbx],rsi
0x570b: je 0x571f
0x570d: mov rdi,r12
0x5710: mov qword ptr [rsp+0x10],rsi
0x5715: call 0x15f0
0x571a: mov rsi,qword ptr [rsp+0x10]
0x571f: mov rdi,rsi
0x5722: mov qword ptr [rsp+0x10],rsi
0x5727: call 0x65e0
0x572c: sub rsp,0x8
0x5730: mov qword ptr [rbx+0x8],rax
0x5734: mov r8d,dword ptr [rbp]
0x5738: push qword ptr [rbp+0x30]
0x573b: push qword ptr [rbp+0x28]
0x573e: mov rcx,r14
0x5741: push r15
0x5743: mov r9d,dword ptr [rsp+0x3c]
0x5748: mov rdi,rax
0x574b: mov rdx,qword ptr [rsp+0x28]
0x5750: mov rsi,qword ptr [rsp+0x30]
0x5755: mov r12,rax
0x5758: call 0x43c0
0x575d: add rsp,0x20
0x5761: mov eax,dword ptr [rsp+0x18]
0x5765: mov dword ptr [r13],eax
0x5769: add rsp,0x28
0x576d: mov rax,r12
0x5770: pop rbx
0x5771: pop rbp
0x5772: pop r12
0x5774: pop r13
0x5776: pop r14
0x5778: pop r15
0x577a: ret 
0x57a1: call 0x1600
0x57a6: call 0x6830
0x57ab: nop dword ptr [rax+rax]
0x57b0: push r12
0x57b2: push rbp
0x57b3: push rbx
0x57b4: mov rbx,rdi
0x57b7: call 0x1610
0x57bc: mov r12d,dword ptr [rax]
0x57bf: mov rbp,rax
0x57c2: lea rax,[rip+0x207d37]
0x57c9: test rbx,rbx
0x57cc: mov esi,0x38
0x57d1: cmove rbx,rax
0x57d5: mov rdi,rbx
0x57d8: call 0x67e0
0x57dd: mov dword ptr [rbp],r12d
0x57e1: pop rbx
0x57e2: pop rbp
0x57e3: pop r12
0x57e5: ret 
0x57f0: lea rax,[rip+0x207d09]
0x57f7: test rdi,rdi
0x57fa: cmove rdi,rax
0x57fe: mov eax,dword ptr [rdi]
0x5800: ret 
0x5810: lea rax,[rip+0x207ce9]
0x5817: test rdi,rdi
0x581a: cmove rdi,rax
0x581e: mov dword ptr [rdi],esi
0x5820: ret 
0x5830: lea rax,[rip+0x207cc9]
0x5837: test rdi,rdi
0x583a: mov ecx,esi
0x583c: cmove rdi,rax
0x5840: mov eax,esi
0x5842: and ecx,0x1f
0x5845: shr al,0x5
0x5848: movzx eax,al
0x584b: lea rdi,[rdi+rax*4+0x8]
0x5850: mov esi,dword ptr [rdi]
0x5852: mov eax,esi
0x5854: shr eax,cl
0x5856: xor edx,eax
0x5858: and eax,0x1
0x585b: and edx,0x1
0x585e: shl edx,cl
0x5860: xor edx,esi
0x5862: mov dword ptr [rdi],edx
0x5864: ret 
0x5870: lea rax,[rip+0x207c89]
0x5877: test rdi,rdi
0x587a: cmove rdi,rax
0x587e: mov eax,dword ptr [rdi+0x4]
0x5881: mov dword ptr [rdi+0x4],esi
0x5884: ret 
0x5890: lea rax,[rip+0x207c69]
0x5897: test rdi,rdi
0x589a: cmove rdi,rax
0x589e: test rsi,rsi
0x58a1: mov dword ptr [rdi],0xa
0x58a7: je 0x58b7
0x58a9: test rdx,rdx
0x58ac: je 0x58b7
0x58ae: mov qword ptr [rdi+0x28],rsi
0x58b2: mov qword ptr [rdi+0x30],rdx
0x58b6: ret 
0x58b7: sub rsp,0x8
0x58bb: call 0x1600
0x58c0: push r15
0x58c2: push r14
0x58c4: lea rax,[rip+0x207c35]
0x58cb: push r13
0x58cd: push r12
0x58cf: mov r13,rdi
0x58d2: push rbp
0x58d3: push rbx
0x58d4: mov rbx,r8
0x58d7: mov r14,rsi
0x58da: mov r15,rdx
0x58dd: sub rsp,0x18
0x58e1: test r8,r8
0x58e4: cmove rbx,rax
0x58e8: mov qword ptr [rsp+0x8],rcx
0x58ed: call 0x1610
0x58f2: mov r12d,dword ptr [rax]
0x58f5: mov rbp,rax
0x58f8: lea rax,[rbx+0x8]
0x58fc: sub rsp,0x8
0x5900: mov r9d,dword ptr [rbx+0x4]
0x5904: push qword ptr [rbx+0x30]
0x5907: mov r8d,dword ptr [rbx]
0x590a: push qword ptr [rbx+0x28]
0x590d: mov rdx,r15
0x5910: push rax
0x5911: mov rcx,qword ptr [rsp+0x28]
0x5916: mov rsi,r14
0x5919: mov rdi,r13
0x591c: call 0x43c0
0x5921: mov dword ptr [rbp],r12d
0x5925: add rsp,0x38
0x5929: pop rbx
0x592a: pop rbp
0x592b: pop r12
0x592d: pop r13
0x592f: pop r14
0x5931: pop r15
0x5933: ret 
0x5940: push r15
0x5942: push r14
0x5944: lea rax,[rip+0x207bb5]
0x594b: push r13
0x594d: push r12
0x594f: mov r12,rdx
0x5952: push rbp
0x5953: push rbx
0x5954: mov rbx,rcx
0x5957: mov r14,rdi
0x595a: mov r15,rsi
0x595d: sub rsp,0x38
0x5961: test rcx,rcx
0x5964: cmove rbx,rax
0x5968: xor ebp,ebp
0x596a: call 0x1610
0x596f: test r12,r12
0x5972: mov r13,rax
0x5975: mov eax,dword ptr [rax]
0x5977: sete bpl
0x597b: or ebp,dword ptr [rbx+0x4]
0x597e: lea r10,[rbx+0x8]
0x5982: sub rsp,0x8
0x5986: mov r8d,dword ptr [rbx]
0x5989: mov rcx,r15
0x598c: mov dword ptr [rsp+0x14],eax
0x5990: push qword ptr [rbx+0x30]
0x5993: mov rdx,r14
0x5996: push qword ptr [rbx+0x28]
0x5999: push r10
0x599b: xor esi,esi
0x599d: mov r9d,ebp
0x59a0: xor edi,edi
0x59a2: mov qword ptr [rsp+0x40],r10
0x59a7: call 0x43c0
0x59ac: lea rsi,[rax+0x1]
0x59b0: mov qword ptr [rsp+0x48],rax
0x59b5: add rsp,0x20
0x59b9: mov rdi,rsi
0x59bc: mov qword ptr [rsp+0x18],rsi
0x59c1: call 0x65e0
0x59c6: mov qword ptr [rsp+0x10],rax
0x59cb: sub rsp,0x8
0x59cf: push qword ptr [rbx+0x30]
0x59d2: push qword ptr [rbx+0x28]
0x59d5: mov r10,qword ptr [rsp+0x38]
0x59da: mov r9d,ebp
0x59dd: mov r8d,dword ptr [rbx]
0x59e0: mov rcx,r15
0x59e3: mov rdx,r14
0x59e6: mov rdi,rax
0x59e9: push r10
0x59eb: mov rsi,qword ptr [rsp+0x38]
0x59f0: call 0x43c0
0x59f5: mov eax,dword ptr [rsp+0x2c]
0x59f9: add rsp,0x20
0x59fd: test r12,r12
0x5a00: mov dword ptr [r13],eax
0x5a04: je 0x5a0f
0x5a06: mov r11,qword ptr [rsp+0x28]
0x5a0b: mov qword ptr [r12],r11
0x5a0f: mov rax,qword ptr [rsp+0x10]
0x5a14: add rsp,0x38
0x5a18: pop rbx
0x5a19: pop rbp
0x5a1a: pop r12
0x5a1c: pop r13
0x5a1e: pop r14
0x5a20: pop r15
0x5a22: ret 
0x5a30: mov rcx,rdx
0x5a33: xor edx,edx
0x5a35: jmp 0x5940
0x5a40: mov eax,dword ptr [rip+0x205612]
0x5a46: push r12
0x5a48: mov r12,qword ptr [rip+0x205611]
0x5a4f: push rbp
0x5a50: push rbx
0x5a51: cmp eax,0x1
0x5a54: jle 0x5a81
0x5a56: sub eax,0x2
0x5a59: lea rbx,[r12+0x18]
0x5a5e: shl rax,0x4
0x5a62: lea rbp,[r12+rax+0x28]
0x5a67: nop word ptr [rax+rax]
0x5a70: mov rdi,qword ptr [rbx]
0x5a73: add rbx,0x10
0x5a77: call 0x15f0
0x5a7c: cmp rbx,rbp
0x5a7f: jne 0x5a70
0x5a81: mov rdi,qword ptr [r12+0x8]
0x5a86: lea rbx,[rip+0x207973]
0x5a8d: cmp rdi,rbx
0x5a90: je 0x5aa9
0x5a92: call 0x15f0
0x5a97: mov qword ptr [rip+0x2055ce],0x100
0x5aa2: mov qword ptr [rip+0x2055cf],rbx
0x5aa9: lea rbx,[rip+0x2055c0]
0x5ab0: cmp r12,rbx
0x5ab3: je 0x5ac4
0x5ab5: mov rdi,r12
0x5ab8: call 0x15f0
0x5abd: mov qword ptr [rip+0x20559c],rbx
0x5ac4: pop rbx
0x5ac5: mov dword ptr [rip+0x205589],0x1
0x5acf: pop rbp
0x5ad0: pop r12
0x5ad2: ret 
0x5ae0: lea rcx,[rip+0x207a19]
0x5ae7: mov rdx,-0x1
0x5aee: jmp 0x5600
0x5b00: lea rcx,[rip+0x2079f9]
0x5b07: jmp 0x5600
0x5b10: lea rcx,[rip+0x2079e9]
0x5b17: mov rsi,rdi
0x5b1a: mov rdx,-0x1
0x5b21: xor edi,edi
0x5b23: jmp 0x5600
0x5b30: lea rcx,[rip+0x2079c9]
0x5b37: mov rdx,rsi
0x5b3a: mov rsi,rdi
0x5b3d: xor edi,edi
0x5b3f: jmp 0x5600
0x5b50: sub rsp,0x48
0x5b54: mov rax,rdx
0x5b57: mov rdx,qword ptr fs:0x28
0x5b60: mov qword ptr [rsp+0x38],rdx
0x5b65: xor edx,edx
0x5b67: cmp esi,0xa
0x5b6a: je 0x5bd4
0x5b6c: mov dword ptr [rsp],esi
0x5b6f: mov rcx,rsp
0x5b72: mov rdx,-0x1
0x5b79: mov rsi,rax
0x5b7c: mov qword ptr [rsp+0x4],0x0
0x5b85: mov qword ptr [rsp+0xc],0x0
0x5b8e: mov qword ptr [rsp+0x14],0x0
0x5b97: mov qword ptr [rsp+0x1c],0x0
0x5ba0: mov qword ptr [rsp+0x24],0x0
0x5ba9: mov qword ptr [rsp+0x2c],0x0
0x5bb2: mov dword ptr [rsp+0x34],0x0
0x5bba: call 0x5600
0x5bbf: mov rcx,qword ptr [rsp+0x38]
0x5bc4: xor rcx,qword ptr fs:0x28
0x5bcd: jne 0x5bd9
0x5bcf: add rsp,0x48
0x5bd3: ret 
0x5bd4: call 0x1600
0x5bd9: call 0x16c0
0x5bde: nop 
0x5be0: sub rsp,0x48
0x5be4: mov rax,rdx
0x5be7: mov rdx,rcx
0x5bea: mov rcx,qword ptr fs:0x28
0x5bf3: mov qword ptr [rsp+0x38],rcx
0x5bf8: xor ecx,ecx
0x5bfa: cmp esi,0xa
0x5bfd: je 0x5c60
0x5bff: mov dword ptr [rsp],esi
0x5c02: mov rcx,rsp
0x5c05: mov rsi,rax
0x5c08: mov qword ptr [rsp+0x4],0x0
0x5c11: mov qword ptr [rsp+0xc],0x0
0x5c1a: mov qword ptr [rsp+0x14],0x0
0x5c23: mov qword ptr [rsp+0x1c],0x0
0x5c2c: mov qword ptr [rsp+0x24],0x0
0x5c35: mov qword ptr [rsp+0x2c],0x0
0x5c3e: mov dword ptr [rsp+0x34],0x0
0x5c46: call 0x5600
0x5c4b: mov rdx,qword ptr [rsp+0x38]
0x5c50: xor rdx,qword ptr fs:0x28
0x5c59: jne 0x5c65
0x5c5b: add rsp,0x48
0x5c5f: ret 
0x5c60: call 0x1600
0x5c65: call 0x16c0
0x5c6a: nop word ptr [rax+rax]
0x5c70: mov rdx,rsi
0x5c73: mov esi,edi
0x5c75: xor edi,edi
0x5c77: jmp 0x5b50
0x5c80: mov rcx,rdx
0x5c83: mov rdx,rsi
0x5c86: mov esi,edi
0x5c88: xor edi,edi
0x5c8a: jmp 0x5be0
0x5c90: sub rsp,0x48
0x5c94: mov ecx,edx
0x5c96: mov rax,qword ptr fs:0x28
0x5c9f: mov qword ptr [rsp+0x38],rax
0x5ca4: xor eax,eax
0x5ca6: mov rax,qword ptr [rip+0x207883]
0x5cad: mov r8,rsp
0x5cb0: and ecx,0x1f
0x5cb3: movdqa xmm0,[rip+0x207845]
0x5cbb: mov qword ptr [rsp+0x30],rax
0x5cc0: mov eax,edx
0x5cc2: movaps [rsp],xmm0
0x5cc6: shr al,0x5
0x5cc9: movzx eax,al
0x5ccc: lea r9,[r8+rax*4+0x8]
0x5cd1: movdqa xmm0,[rip+0x207837]
0x5cd9: movaps [rsp+0x10],xmm0
0x5cde: movdqa xmm0,[rip+0x20783a]
0x5ce6: movaps [rsp+0x20],xmm0
0x5ceb: mov edx,dword ptr [r9]
0x5cee: mov eax,edx
0x5cf0: shr eax,cl
0x5cf2: not eax
0x5cf4: and eax,0x1
0x5cf7: shl eax,cl
0x5cf9: mov rcx,r8
0x5cfc: xor eax,edx
0x5cfe: mov rdx,rsi
0x5d01: mov rsi,rdi
0x5d04: mov dword ptr [r9],eax
0x5d07: xor edi,edi
0x5d09: call 0x5600
0x5d0e: mov rsi,qword ptr [rsp+0x38]
0x5d13: xor rsi,qword ptr fs:0x28
0x5d1c: jne 0x5d23
0x5d1e: add rsp,0x48
0x5d22: ret 
0x5d23: call 0x16c0
0x5d28: nop dword ptr [rax+rax]
0x5d30: movsx edx,sil
0x5d34: mov rsi,-0x1
0x5d3b: jmp 0x5c90
0x5d40: mov edx,0x3a
0x5d45: mov rsi,-0x1
0x5d4c: jmp 0x5c90
0x5d60: mov edx,0x3a
0x5d65: jmp 0x5c90
0x5d70: sub rsp,0x48
0x5d74: mov rax,rdx
0x5d77: mov rdx,qword ptr fs:0x28
0x5d80: mov qword ptr [rsp+0x38],rdx
0x5d85: xor edx,edx
0x5d87: cmp esi,0xa
0x5d8a: je 0x5df4
0x5d8c: mov dword ptr [rsp],esi
0x5d8f: mov rcx,rsp
0x5d92: mov rdx,-0x1
0x5d99: mov rsi,rax
0x5d9c: mov qword ptr [rsp+0x4],0x0
0x5da5: mov qword ptr [rsp+0xc],0x4000000
0x5dae: mov qword ptr [rsp+0x14],0x0
0x5db7: mov qword ptr [rsp+0x1c],0x0
0x5dc0: mov qword ptr [rsp+0x24],0x0
0x5dc9: mov qword ptr [rsp+0x2c],0x0
0x5dd2: mov dword ptr [rsp+0x34],0x0
0x5dda: call 0x5600
0x5ddf: mov rcx,qword ptr [rsp+0x38]
0x5de4: xor rcx,qword ptr fs:0x28
0x5ded: jne 0x5df9
0x5def: add rsp,0x48
0x5df3: ret 
0x5df4: call 0x1600
0x5df9: call 0x16c0
0x5dfe: nop 
0x5e00: sub rsp,0x48
0x5e04: mov r9,rcx
0x5e07: mov rcx,qword ptr [rip+0x207722]
0x5e0e: movdqa xmm0,[rip+0x2076ea]
0x5e16: mov rax,qword ptr fs:0x28
0x5e1f: mov qword ptr [rsp+0x38],rax
0x5e24: xor eax,eax
0x5e26: movaps [rsp],xmm0
0x5e2a: test rsi,rsi
0x5e2d: mov qword ptr [rsp+0x30],rcx
0x5e32: mov dword ptr [rsp],0xa
0x5e39: movdqa xmm0,[rip+0x2076cf]
0x5e41: movaps [rsp+0x10],xmm0
0x5e46: movdqa xmm0,[rip+0x2076d2]
0x5e4e: movaps [rsp+0x20],xmm0
0x5e53: je 0x5e87
0x5e55: test rdx,rdx
0x5e58: je 0x5e87
0x5e5a: mov qword ptr [rsp+0x28],rsi
0x5e5f: mov qword ptr [rsp+0x30],rdx
0x5e64: mov rcx,rsp
0x5e67: mov rdx,r8
0x5e6a: mov rsi,r9
0x5e6d: call 0x5600
0x5e72: mov rdi,qword ptr [rsp+0x38]
0x5e77: xor rdi,qword ptr fs:0x28
0x5e80: jne 0x5e8c
0x5e82: add rsp,0x48
0x5e86: ret 
0x5e87: call 0x1600
0x5e8c: call 0x16c0
0x5e91: nop dword ptr [rax+rax]
0x5e96: nop word ptr cs:[rax+rax]
0x5ea0: mov r8,-0x1
0x5ea7: jmp 0x5e00
0x5eb0: mov rcx,rdx
0x5eb3: mov r8,-0x1
0x5eba: mov rdx,rsi
0x5ebd: mov rsi,rdi
0x5ec0: xor edi,edi
0x5ec2: jmp 0x5e00
0x5ed0: mov r8,rcx
0x5ed3: mov rcx,rdx
0x5ed6: mov rdx,rsi
0x5ed9: mov rsi,rdi
0x5edc: xor edi,edi
0x5ede: jmp 0x5e00
0x5ef0: lea rcx,[rip+0x205129]
0x5ef7: jmp 0x5600
0x5f00: lea rcx,[rip+0x205119]
0x5f07: mov rdx,rsi
0x5f0a: mov rsi,rdi
0x5f0d: xor edi,edi
0x5f0f: jmp 0x5600
0x5f20: lea rcx,[rip+0x2050f9]
0x5f27: mov rdx,-0x1
0x5f2e: jmp 0x5600
0x60f8: mov r8,rcx
0x60fb: mov rcx,rdx
0x60fe: lea rdx,[rip+0x278f]
0x6105: mov esi,0x1
0x610a: xor eax,eax
0x610c: call 0x18a0
0x6111: jmp 0x5ffc
0x630d: push r12
0x630f: push r15
0x6311: push r14
0x6313: mov r8,qword ptr [rsp+0x20]
0x6318: mov rcx,rbx
0x631b: mov rdx,rax
0x631e: mov rdi,rbp
0x6321: mov esi,0x1
0x6326: xor eax,eax
0x6328: call 0x18a0
0x632d: add rsp,0x20
0x6331: add rsp,0x28
0x6335: pop rbx
0x6336: pop rbp
0x6337: pop r12
0x6339: pop r13
0x633b: pop r14
0x633d: pop r15
0x633f: ret 
0x6379: push r12
0x637b: push r15
0x637d: push r14
0x637f: mov r9,qword ptr [rsp+0x28]
0x6384: jmp 0x6313
0x63e0: xor r9d,r9d
0x63e3: cmp qword ptr [r8],0x0
0x63e7: je 0x63fb
0x63e9: nop dword ptr [rax]
0x63f0: add r9,0x1
0x63f4: cmp qword ptr [r8+r9*8],0x0
0x63f9: jne 0x63f0
0x63fb: jmp 0x5fc0
0x6400: sub rsp,0x68
0x6404: mov r10,r8
0x6407: xor r9d,r9d
0x640a: mov rax,qword ptr fs:0x28
0x6413: mov qword ptr [rsp+0x58],rax
0x6418: xor eax,eax
0x641a: mov r8,rsp
0x641d: nop dword ptr [rax]
0x6420: mov eax,dword ptr [r10]
0x6423: cmp eax,0x2f
0x6426: ja 0x646a
0x6428: mov r11d,eax
0x642b: add r11,qword ptr [r10+0x10]
0x642f: add eax,0x8
0x6432: mov dword ptr [r10],eax
0x6435: mov rax,qword ptr [r11]
0x6438: test rax,rax
0x643b: mov qword ptr [r8+r9*8],rax
0x643f: je 0x644b
0x6441: add r9,0x1
0x6445: cmp r9,0xa
0x6449: jne 0x6420
0x644b: call 0x5fc0
0x6450: mov rax,qword ptr [rsp+0x58]
0x6455: xor rax,qword ptr fs:0x28
0x645e: jne 0x6465
0x6460: add rsp,0x68
0x6464: ret 
0x6465: call 0x16c0
0x646a: mov r11,qword ptr [r10+0x8]
0x646e: lea rax,[r11+0x8]
0x6472: mov qword ptr [r10+0x8],rax
0x6476: jmp 0x6435
0x6540: call 0x16c0
0x654c: mov rax,rbx
0x654f: add rbx,0x8
0x6553: jmp 0x6506
0x6560: push rbx
0x6561: lea rsi,[rip+0x237a]
0x6568: mov edx,0x5
0x656d: xor edi,edi
0x656f: call 0x1690
0x6574: lea rdx,[rip+0x237c]
0x657b: mov rsi,rax
0x657e: mov edi,0x1
0x6583: xor eax,eax
0x6585: call 0x1840
0x658a: lea rsi,[rip+0x237c]
0x6591: mov edx,0x5
0x6596: xor edi,edi
0x6598: call 0x1690
0x659d: lea rcx,[rip+0x1974]
0x65a4: lea rdx,[rip+0xb6e]
0x65ab: mov rsi,rax
0x65ae: mov edi,0x1
0x65b3: xor eax,eax
0x65b5: call 0x1840
0x65ba: mov rbx,qword ptr [rip+0x204ac7]
0x65c1: lea rsi,[rip+0x2578]
0x65c8: xor edi,edi
0x65ca: mov edx,0x5
0x65cf: call 0x1690
0x65d4: mov rsi,rbx
0x65d7: mov rdi,rax
0x65da: pop rbx
0x65db: jmp 0x1790
0x65fa: nop word ptr [rax+rax]
0x6600: mov rax,rdi
0x6603: mul rsi
0x6606: mov rdi,rax
0x6609: seto al
0x660c: test rdi,rdi
0x660f: js 0x661b
0x6611: movzx eax,al
0x6614: test rax,rax
0x6617: jne 0x661b
0x6619: jmp 0x65e0
0x661b: sub rsp,0x8
0x661f: call 0x6830
0x6624: nop 
0x6626: nop word ptr cs:[rax+rax]
0x6630: jmp 0x65e0
0x6649: test rdi,rdi
0x664c: jne 0x6668
0x6668: call 0x15f0
0x666d: xor eax,eax
0x666f: pop rbx
0x6670: ret 
0x6676: nop word ptr cs:[rax+rax]
0x6680: mov rax,rsi
0x6683: mul rdx
0x6686: mov rsi,rax
0x6689: seto al
0x668c: test rsi,rsi
0x668f: js 0x669b
0x6691: movzx eax,al
0x6694: test rax,rax
0x6697: jne 0x669b
0x6699: jmp 0x6640
0x669b: sub rsp,0x8
0x669f: call 0x6830
0x66a4: nop 
0x66a6: nop word ptr cs:[rax+rax]
0x66b0: test rdi,rdi
0x66b3: mov r9,rdx
0x66b6: mov rcx,qword ptr [rsi]
0x66b9: je 0x66f0
0x66bb: xor edx,edx
0x66bd: movabsq rax,0x5555555555555554
0x66c7: div r9
0x66ca: cmp rax,rcx
0x66cd: jbe 0x670b
0x66cf: mov rax,rcx
0x66d2: shr rax, 1
0x66d5: lea rcx,[rax+rcx+0x1]
0x66da: mov qword ptr [rsi],rcx
0x66dd: imul rcx,r9
0x66e1: mov rsi,rcx
0x66e4: jmp 0x6640
0x66f0: test rcx,rcx
0x66f3: je 0x6718
0x66f5: mov rax,rcx
0x66f8: mul r9
0x66fb: seto dl
0x66fe: test rax,rax
0x6701: movzx edx,dl
0x6704: js 0x670b
0x6706: test rdx,rdx
0x6709: je 0x66da
0x670b: sub rsp,0x8
0x670f: call 0x6830
0x6714: nop dword ptr [rax]
0x6718: xor edx,edx
0x671a: mov eax,0x80
0x671f: xor r8d,r8d
0x6722: div r9
0x6725: test rax,rax
0x6728: sete r8b
0x672c: lea rcx,[r8+rax]
0x6730: jmp 0x66f5
0x6740: test rdi,rdi
0x6743: mov rax,qword ptr [rsi]
0x6746: je 0x6770
0x6748: movabsq rdx,0x5555555555555553
0x6752: cmp rax,rdx
0x6755: ja 0x6781
0x6757: mov rdx,rax
0x675a: shr rdx, 1
0x675d: lea rax,[rdx+rax+0x1]
0x6762: mov qword ptr [rsi],rax
0x6765: mov rsi,rax
0x6768: jmp 0x6640
0x6770: test rax,rax
0x6773: mov edx,0x80
0x6778: cmove rax,rdx
0x677c: test rax,rax
0x677f: jns 0x6762
0x6781: sub rsp,0x8
0x6785: call 0x6830
0x678a: nop word ptr [rax+rax]
0x6790: push rbx
0x6791: mov rbx,rdi
0x6794: call 0x65e0
0x6799: mov rdx,rbx
0x679c: xor esi,esi
0x679e: mov rdi,rax
0x67a1: pop rbx
0x67a2: jmp 0x1740
0x67de: nop 
0x67e0: push rbp
0x67e1: push rbx
0x67e2: mov rbp,rdi
0x67e5: mov rdi,rsi
0x67e8: mov rbx,rsi
0x67eb: sub rsp,0x8
0x67ef: call 0x65e0
0x67f4: add rsp,0x8
0x67f8: mov rdx,rbx
0x67fb: mov rsi,rbp
0x67fe: pop rbx
0x67ff: pop rbp
0x6800: mov rdi,rax
0x6803: jmp 0x17b0
0x6810: push rbx
0x6811: mov rbx,rdi
0x6814: call 0x16b0
0x6819: mov rdi,rbx
0x681c: lea rsi,[rax+0x1]
0x6820: pop rbx
0x6821: jmp 0x67e0
0x6860: call 0x1600
0x6865: nop word ptr cs:[rax+rax]
0x686f: nop 
0x6916: cmp eax,0x22
0x6919: mov ebp,0x1
0x691e: jne 0x6948
0x6925: movzx r12d,byte ptr [rcx]
0x6929: test r12b,r12b
0x692c: jne 0x69a7
0x6980: movzx r12d,byte ptr [rbp]
0x6985: test r12b,r12b
0x6988: je 0x6948
0x698a: movsx esi,r12b
0x698e: mov rdi,r13
0x6991: xor ebp,ebp
0x6993: call 0x16f0
0x6998: test rax,rax
0x699b: mov ebx,0x1
0x69a0: mov rcx,qword ptr [rsp+0x8]
0x69a5: je 0x6948
0x69a7: movsx esi,r12b
0x69ab: mov rdi,r13
0x69ae: mov qword ptr [rsp+0x8],rcx
0x69b3: call 0x16f0
0x69b8: test rax,rax
0x69bb: mov rcx,qword ptr [rsp+0x8]
0x69c0: je 0x6a8c
0x69c6: lea eax,[r12-0x45]
0x69cb: cmp al,0x2f
0x69cd: ja 0x6a20
0x69cf: movabsq rdx,0x814400308945
0x69d9: btq rdx,rax
0x69dd: jae 0x6a20
0x69df: mov esi,0x30
0x69e4: mov rdi,r13
0x69e7: mov qword ptr [rsp+0x8],rcx
0x69ec: call 0x16f0
0x69f1: test rax,rax
0x69f4: mov rcx,qword ptr [rsp+0x8]
0x69f9: je 0x6a20
0x69fb: movzx eax,byte ptr [rcx+0x1]
0x69ff: cmp al,0x44
0x6a01: je 0x6a0f
0x6a03: cmp al,0x69
0x6a05: je 0x6bd8
0x6a0b: cmp al,0x42
0x6a0d: jne 0x6a20
0x6a0f: mov edi,0x2
0x6a14: mov esi,0x3e8
0x6a19: jmp 0x6a2a
0x6a20: mov edi,0x1
0x6a25: mov esi,0x400
0x6a2a: sub r12d,0x42
0x6a2e: cmp r12b,0x35
0x6a32: ja 0x6a8c
0x6a34: lea rdx,[rip+0x220d]
0x6a3b: movzx r12d,r12b
0x6a3f: movsxd rax,dword ptr [rdx+r12*4]
0x6a43: add rax,rdx
0x6a46: jmp rax
0x6a70: movsxd rdi,edi
0x6a73: mov eax,ebp
0x6a75: add rcx,rdi
0x6a78: or eax,0x2
0x6a7b: mov qword ptr [r15],rcx
0x6a7e: cmp byte ptr [rcx],0x0
0x6a81: mov qword ptr [r14],rbx
0x6a84: cmovne ebp,eax
0x6a87: jmp 0x694d
0x6a8c: mov qword ptr [r14],rbx
0x6a8f: or ebp,0x2
0x6a92: jmp 0x694d
0x6ae5: or ebp,r9d
0x6ae8: jmp 0x6a70
0x6b7c: mov rax,rbx
0x6b7f: mul rsi
0x6b82: mov rbx,rax
0x6b85: jo 0x6c14
0x6b8b: sub r8d,0x1
0x6b8f: jne 0x6b7c
0x6b91: jmp 0x6ae5
0x6bd8: xor edi,edi
0x6bda: cmp byte ptr [rcx+0x2],0x42
0x6bde: mov esi,0x400
0x6be3: sete dil
0x6be7: lea edi,[rdi+rdi+0x1]
0x6beb: jmp 0x6a2a
0x6bf0: call 0x16c0
0x6c14: mov r9d,0x1
0x6c1a: or rbx,-0x1
0x6c1e: jmp 0x6b8b
0x6c90: push r13
0x6c92: push r12
0x6c94: mov r13,rsi
0x6c97: push rbp
0x6c98: push rbx
0x6c99: mov rbx,rdi
0x6c9c: mov r12,rdx
0x6c9f: sub rsp,0x18
0x6ca3: mov rax,qword ptr fs:0x28
0x6cac: mov qword ptr [rsp+0x8],rax
0x6cb1: xor eax,eax
0x6cb3: lea rax,[rsp+0x4]
0x6cb8: test rdi,rdi
0x6cbb: cmove rbx,rax
0x6cbf: mov rdi,rbx
0x6cc2: call 0x16e0
0x6cc7: cmp rax,-0x3
0x6ccb: mov rbp,rax
0x6cce: jbe 0x6cf0
0x6cd0: test r12,r12
0x6cd3: je 0x6cf0
0x6cd5: xor edi,edi
0x6cd7: call 0x6da0
0x6cdc: test al,al
0x6cde: jne 0x6cf0
0x6ce0: movzx eax,byte ptr [r13]
0x6ce5: mov ebp,0x1
0x6cea: mov dword ptr [rbx],eax
0x6cec: nop dword ptr [rax]
0x6cf0: mov rdx,qword ptr [rsp+0x8]
0x6cf5: xor rdx,qword ptr fs:0x28
0x6cfe: mov rax,rbp
0x6d01: jne 0x6d0e
0x6d03: add rsp,0x18
0x6d07: pop rbx
0x6d08: pop rbp
0x6d09: pop r12
0x6d0b: pop r13
0x6d0d: ret 
0x6d0e: call 0x16c0
0x6d13: nop word ptr cs:[rax+rax]
0x6d1d: nop dword ptr [rax]
0x6d20: push r12
0x6d22: push rbp
0x6d23: mov rbp,rdi
0x6d26: push rbx
0x6d27: call 0x1640
0x6d2c: mov ebx,dword ptr [rbp]
0x6d2f: mov rdi,rbp
0x6d32: mov r12,rax
0x6d35: call 0x6e40
0x6d3a: and ebx,0x20
0x6d3d: test ebx,ebx
0x6d3f: jne 0x6d58
0x6d41: test eax,eax
0x6d43: je 0x6d4f
0x6d45: test r12,r12
0x6d48: mov eax,0xffffffff
0x6d4d: je 0x6d88
0x6d4f: pop rbx
0x6d50: pop rbp
0x6d51: pop r12
0x6d53: ret 
0x6d58: test eax,eax
0x6d5a: jne 0x6d78
0x6d5c: call 0x1610
0x6d61: mov dword ptr [rax],0x0
0x6d67: mov eax,0xffffffff
0x6d6c: pop rbx
0x6d6d: pop rbp
0x6d6e: pop r12
0x6d70: ret 
0x6d78: pop rbx
0x6d79: mov eax,0xffffffff
0x6d7e: pop rbp
0x6d7f: pop r12
0x6d81: ret 
0x6d88: call 0x1610
0x6d8d: cmp dword ptr [rax],0x9
0x6d90: pop rbx
0x6d91: pop rbp
0x6d92: pop r12
0x6d94: setne al
0x6d97: movzx eax,al
0x6d9a: neg eax
0x6d9c: ret 
0x6da0: sub rsp,0x8
0x6da4: xor esi,esi
0x6da6: call 0x1830
0x6dab: mov rdx,rax
0x6dae: mov eax,0x1
0x6db3: test rdx,rdx
0x6db6: je 0x6dd5
0x6db8: lea rdi,[rip+0x39f]
0x6dbf: mov ecx,0x2
0x6dc4: mov rsi,rdx
0x6dc7: rep cmpsb [rsi],es:[rdi]
0x6dc9: seta cl
0x6dcc: sbb cl,0x0
0x6dcf: xor eax,eax
0x6dd1: test cl,cl
0x6dd3: jne 0x6de0
0x6dd5: add rsp,0x8
0x6dd9: ret 
0x6de0: lea rdi,[rip+0x1f44]
0x6de7: mov ecx,0x6
0x6dec: mov rsi,rdx
0x6def: rep cmpsb [rsi],es:[rdi]
0x6df1: seta al
0x6df4: sbb al,0x0
0x6df6: test al,al
0x6df8: setne al
0x6dfb: add rsp,0x8
0x6dff: ret 
0x6e00: sub rsp,0x8
0x6e04: mov edi,0xe
0x6e09: call 0x17f0
0x6e0e: test rax,rax
0x6e11: je 0x6e30
0x6e13: cmp byte ptr [rax],0x0
0x6e16: lea rdx,[rip+0x1f14]
0x6e1d: cmove rax,rdx
0x6e21: add rsp,0x8
0x6e25: ret 
0x6e30: lea rax,[rip+0x1efa]
0x6e37: add rsp,0x8
0x6e3b: ret 
0x6e40: push r12
0x6e42: push rbp
0x6e43: push rbx
0x6e44: mov rbx,rdi
0x6e47: call 0x17c0
0x6e4c: test eax,eax
0x6e4e: mov rdi,rbx
0x6e51: js 0x6ea7
0x6e53: call 0x1800
0x6e58: test eax,eax
0x6e5a: jne 0x6e88
0x6e5c: mov rdi,rbx
0x6e5f: call 0x6ec0
0x6e64: test eax,eax
0x6e66: je 0x6ea4
0x6e68: call 0x1610
0x6e6d: mov r12d,dword ptr [rax]
0x6e70: mov rdi,rbx
0x6e73: mov rbp,rax
0x6e76: call 0x1660
0x6e7b: test r12d,r12d
0x6e7e: jne 0x6eb0
0x6e80: pop rbx
0x6e81: pop rbp
0x6e82: pop r12
0x6e84: ret 
0x6e88: mov rdi,rbx
0x6e8b: call 0x17c0
0x6e90: xor esi,esi
0x6e92: mov edx,0x1
0x6e97: mov edi,eax
0x6e99: call 0x1710
0x6e9e: cmp rax,-0x1
0x6ea2: jne 0x6e5c
0x6ea4: mov rdi,rbx
0x6ea7: pop rbx
0x6ea8: pop rbp
0x6ea9: pop r12
0x6eab: jmp 0x1660
0x6eb0: mov dword ptr [rbp],r12d
0x6eb4: mov eax,0xffffffff
0x6eb9: jmp 0x6e80
0x6ec0: test rdi,rdi
0x6ec3: push rbx
0x6ec4: mov rbx,rdi
0x6ec7: je 0x6eda
0x6ec9: call 0x1800
0x6ece: test eax,eax
0x6ed0: je 0x6eda
0x6ed2: test dword ptr [rbx],0x100
0x6ed8: jne 0x6ee8
0x6eda: mov rdi,rbx
0x6edd: pop rbx
0x6ede: jmp 0x17e0
0x6ee8: mov rdi,rbx
0x6eeb: mov edx,0x1
0x6ef0: xor esi,esi
0x6ef2: call 0x6f00
0x6ef7: mov rdi,rbx
0x6efa: pop rbx
0x6efb: jmp 0x17e0
0x6f00: mov rax,qword ptr [rdi+0x8]
0x6f04: cmp qword ptr [rdi+0x10],rax
0x6f08: je 0x6f10
0x6f0a: jmp 0x1860
0x6f10: mov rax,qword ptr [rdi+0x20]
0x6f14: cmp qword ptr [rdi+0x28],rax
0x6f18: jne 0x6f0a
0x6f1a: cmp qword ptr [rdi+0x48],0x0
0x6f1f: jne 0x6f0a
0x6f21: push r12
0x6f23: push rbp
0x6f24: mov r12d,edx
0x6f27: push rbx
0x6f28: mov rbp,rsi
0x6f2b: mov rbx,rdi
0x6f2e: call 0x17c0
0x6f33: mov edx,r12d
0x6f36: mov rsi,rbp
0x6f39: mov edi,eax
0x6f3b: call 0x1710
0x6f40: cmp rax,-0x1
0x6f44: je 0x6f52
0x6f46: and dword ptr [rbx],-0x11
0x6f49: mov qword ptr [rbx+0x90],rax
0x6f50: xor eax,eax
0x6f52: pop rbx
0x6f53: pop rbp
0x6f54: pop r12
0x6f56: ret 
0x6f60: push r15
0x6f62: push r14
0x6f64: mov r15,rdx
0x6f67: push r13
0x6f69: push r12
0x6f6b: lea r12,[rip+0x203b1e]
0x6f72: push rbp
0x6f73: lea rbp,[rip+0x203b1e]
0x6f7a: push rbx
0x6f7b: mov r13d,edi
0x6f7e: mov r14,rsi
0x6f81: sub rbp,r12
0x6f84: sub rsp,0x8
0x6f88: sar rbp,0x3
0x6f8c: call 0x15b0
0x6f91: test rbp,rbp
0x6f94: je 0x6fb6
0x6f96: xor ebx,ebx
0x6f98: nop dword ptr [rax+rax]
0x6fa0: mov rdx,r15
0x6fa3: mov rsi,r14
0x6fa6: mov edi,r13d
0x6fa9: call qword ptr [r12+rbx*8]
0x6fad: add rbx,0x1
0x6fb1: cmp rbp,rbx
0x6fb4: jne 0x6fa0
0x6fb6: add rsp,0x8
0x6fba: pop rbx
0x6fbb: pop rbp
0x6fbc: pop r12
0x6fbe: pop r13
0x6fc0: pop r14
0x6fc2: pop r15
0x6fc4: ret 
0x6fd0: rep ret 
