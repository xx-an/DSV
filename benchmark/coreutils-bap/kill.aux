0x1470: sub rsp,0x8
0x1474: mov rax,qword ptr [rip+0x206b65]
0x147b: test rax,rax
0x147e: je 0x1482
0x1480: call rax
0x1482: add rsp,0x8
0x1486: ret 
0x1496: jmp qword ptr [rip+0x20699c]
0x14e0: jmp qword ptr [rip+0x20697a]
0x1500: jmp qword ptr [rip+0x20696a]
0x1510: jmp qword ptr [rip+0x206962]
0x1540: jmp qword ptr [rip+0x20694a]
0x1590: jmp qword ptr [rip+0x206922]
0x15b0: jmp qword ptr [rip+0x206912]
0x15e0: jmp qword ptr [rip+0x2068fa]
0x1600: jmp qword ptr [rip+0x2068ea]
0x1620: jmp qword ptr [rip+0x2068da]
0x1670: jmp qword ptr [rip+0x2068b2]
0x1690: jmp qword ptr [rip+0x2068a2]
0x16a0: jmp qword ptr [rip+0x20689a]
0x16b0: jmp qword ptr [rip+0x206892]
0x16c0: jmp qword ptr [rip+0x20688a]
0x1710: jmp qword ptr [rip+0x206862]
0x1780: jmp qword ptr [rip+0x20682a]
0x1790: jmp qword ptr [rip+0x206822]
0x17a0: jmp qword ptr [rip+0x20681a]
0x17c0: jmp qword ptr [rip+0x20682a]
0x1921: nop dword ptr [rax]
0x194a: jmp 0x18a6
0x1a3e: lea rsi,[rip+0x37eb]
0x1a45: mov rbx,rax
0x1a48: mov edx,0x5
0x1a4d: xor edi,edi
0x1a4f: call 0x1560
0x1a54: mov rcx,rbx
0x1a57: mov rdx,rax
0x1a5a: xor esi,esi
0x1a5c: xor edi,edi
0x1a5e: xor eax,eax
0x1a60: mov ebx,0x1
0x1a65: call 0x1700
0x1aa0: xor ebx,ebx
0x1aa2: nop word ptr [rax+rax]
0x1ae7: mov esi,dword ptr [r14]
0x1aea: lea rdx,[rip+0x3d23]
0x1af1: mov rcx,rax
0x1af4: xor edi,edi
0x1af6: xor eax,eax
0x1af8: call 0x1700
0x1afd: jmp 0x1a6a
0x1b02: test r13b,r13b
0x1b05: je 0x1d9e
0x1b0b: xor ebp,ebp
0x1b0d: cmp r12d,eax
0x1b10: jle 0x1b16
0x1b12: lea rbp,[rbx+rax*8]
0x1b16: test r15b,r15b
0x1b19: je 0x1bfb
0x1b1f: lea r12,[rsp+0x40]
0x1b24: xor r13d,r13d
0x1b27: mov ebx,0x1
0x1b2c: nop dword ptr [rax]
0x1b30: mov rsi,r12
0x1b33: mov edi,ebx
0x1b35: call 0x4d60
0x1b3a: test eax,eax
0x1b3c: jne 0x1b83
0x1b3e: mov rdx,r12
0x1b41: mov ecx,dword ptr [rdx]
0x1b43: add rdx,0x4
0x1b47: lea eax,[rcx-0x1010101]
0x1b4d: not ecx
0x1b4f: and eax,ecx
0x1b51: and eax,0x80808080
0x1b56: je 0x1b41
0x1b58: mov ecx,eax
0x1b5a: shr ecx,0x10
0x1b5d: test eax,0x8080
0x1b62: cmove eax,ecx
0x1b65: lea rcx,[rdx+0x2]
0x1b69: mov esi,eax
0x1b6b: cmove rdx,rcx
0x1b6f: add sil,al
0x1b72: mov eax,r13d
0x1b75: sbb rdx,0x3
0x1b79: sub rdx,r12
0x1b7c: cmp rdx,rax
0x1b7f: cmova r13d,edx
0x1b83: add ebx,0x1
0x1b86: cmp ebx,0x41
0x1b89: jne 0x1b30
0x1b8b: xor ebx,ebx
0x1b8d: test rbp,rbp
0x1b90: lea r14,[rip+0x3635]
0x1b97: jne 0x1ba7
0x1b99: jmp 0x1c8c
0x1b9e: mov ebx,0x1
0x1ba3: add rbp,0x8
0x1ba7: mov rdi,qword ptr [rbp]
0x1bab: test rdi,rdi
0x1bae: je 0x1aa8
0x1bb4: mov rsi,r12
0x1bb7: call 0x22a0
0x1bbc: test eax,eax
0x1bbe: mov r15d,eax
0x1bc1: js 0x1b9e
0x1bc3: mov edi,eax
0x1bc5: call 0x16c0
0x1bca: test rax,rax
0x1bcd: lea rsi,[rip+0x364b]
0x1bd4: mov ecx,r15d
0x1bd7: cmove rax,r14
0x1bdb: sub rsp,0x8
0x1bdf: mov r9,r12
0x1be2: push rax
0x1be3: mov r8d,r13d
0x1be6: mov edx,0x2
0x1beb: mov edi,0x1
0x1bf0: xor eax,eax
0x1bf2: call 0x16f0
0x1bf7: pop rcx
0x1bf8: pop rsi
0x1bf9: jmp 0x1ba3
0x1bfb: xor ebx,ebx
0x1bfd: test rbp,rbp
0x1c00: lea r12,[rsp+0x40]
0x1c05: jne 0x1c24
0x1c07: jmp 0x1c5b
0x1c09: mov rdx,qword ptr [rbp]
0x1c0d: movsx ecx,byte ptr [rdx]
0x1c10: sub ecx,0x30
0x1c13: cmp ecx,0x9
0x1c16: ja 0x1c44
0x1c18: mov rdi,r12
0x1c1b: call 0x1510
0x1c20: add rbp,0x8
0x1c24: mov rdi,qword ptr [rbp]
0x1c28: test rdi,rdi
0x1c2b: je 0x1aa8
0x1c31: mov rsi,r12
0x1c34: call 0x22a0
0x1c39: test eax,eax
0x1c3b: jns 0x1c09
0x1c3d: mov ebx,0x1
0x1c42: jmp 0x1c20
0x1c44: lea rsi,[rip+0x35e1]
0x1c4b: mov edx,eax
0x1c4d: mov edi,0x1
0x1c52: xor eax,eax
0x1c54: call 0x16f0
0x1c59: jmp 0x1c20
0x1c5b: mov ebx,0x1
0x1c60: jmp 0x1c74
0x1c68: add ebx,0x1
0x1c6b: cmp ebx,0x41
0x1c6e: je 0x1aa0
0x1c74: mov rsi,r12
0x1c77: mov edi,ebx
0x1c79: call 0x4d60
0x1c7e: test eax,eax
0x1c80: jne 0x1c68
0x1c82: mov rdi,r12
0x1c85: call 0x1510
0x1c8a: jmp 0x1c68
0x1c8c: mov ebx,0x1
0x1c91: mov rbp,r14
0x1c94: jmp 0x1cac
0x1ca0: add ebx,0x1
0x1ca3: cmp ebx,0x41
0x1ca6: je 0x1aa0
0x1cac: mov rsi,r12
0x1caf: mov edi,ebx
0x1cb1: call 0x4d60
0x1cb6: test eax,eax
0x1cb8: jne 0x1ca0
0x1cba: mov edi,ebx
0x1cbc: call 0x16c0
0x1cc1: test rax,rax
0x1cc4: lea rsi,[rip+0x3554]
0x1ccb: mov edx,0x2
0x1cd0: cmove rax,rbp
0x1cd4: sub rsp,0x8
0x1cd8: mov r9,r12
0x1cdb: push rax
0x1cdc: mov r8d,r13d
0x1cdf: mov ecx,ebx
0x1ce1: mov edi,0x1
0x1ce6: xor eax,eax
0x1ce8: call 0x16f0
0x1ced: pop rax
0x1cee: pop rdx
0x1cef: jmp 0x1ca0
0x1d0a: lea rsi,[rip+0x39d7]
0x1d11: mov rbx,rax
0x1d14: mov edx,0x5
0x1d19: xor edi,edi
0x1d1b: call 0x1560
0x1d20: xor edi,edi
0x1d22: mov rdx,rax
0x1d25: mov rcx,rbx
0x1d28: xor esi,esi
0x1d2a: xor eax,eax
0x1d2c: call 0x1700
0x1d31: mov edi,0x1
0x1d36: call 0x1ec0
0x1d3b: call 0x1590
0x1d61: jmp 0x18a6
0x1d94: mov edi,0x1
0x1d99: call 0x1ec0
0x1d9e: mov ebp,0xf
0x1da3: jmp 0x19f5
0x1dda: hlt 
0x1ddb: nop dword ptr [rax+rax]
0x1de0: lea rdi,[rip+0x206441]
0x1de7: push rbp
0x1de8: lea rax,[rip+0x206439]
0x1def: cmp rax,rdi
0x1df2: mov rbp,rsp
0x1df5: je 0x1e10
0x1df7: mov rax,qword ptr [rip+0x2061d2]
0x1dfe: test rax,rax
0x1e01: je 0x1e10
0x1e03: pop rbp
0x1e04: jmp rax
0x1e10: pop rbp
0x1e11: ret 
0x1e20: lea rdi,[rip+0x206401]
0x1e27: lea rsi,[rip+0x2063fa]
0x1e2e: push rbp
0x1e2f: sub rsi,rdi
0x1e32: mov rbp,rsp
0x1e35: sar rsi,0x3
0x1e39: mov rax,rsi
0x1e3c: shr rax,0x3f
0x1e40: add rsi,rax
0x1e43: sar rsi, 1
0x1e46: je 0x1e60
0x1e48: mov rax,qword ptr [rip+0x206199]
0x1e4f: test rax,rax
0x1e52: je 0x1e60
0x1e54: pop rbp
0x1e55: jmp rax
0x1e60: pop rbp
0x1e61: ret 
0x1e81: push rbp
0x1e82: mov rbp,rsp
0x1e85: je 0x1e93
0x1e87: mov rdi,qword ptr [rip+0x20617a]
0x1e8e: call 0x17c0
0x1e93: call 0x1de0
0x1e98: mov byte ptr [rip+0x2063e9],0x1
0x1e9f: pop rbp
0x1ea0: ret 
0x1eb0: push rbp
0x1eb1: mov rbp,rsp
0x1eb4: pop rbp
0x1eb5: jmp 0x1e20
0x2328: lea rsi,[rip+0x34bd]
0x232f: mov rbx,rax
0x2332: mov edx,0x5
0x2337: xor edi,edi
0x2339: call 0x1560
0x233e: mov rcx,rbx
0x2341: mov rdx,rax
0x2344: xor esi,esi
0x2346: xor eax,eax
0x2348: xor edi,edi
0x234a: call 0x1700
0x234f: mov eax,0xffffffff
0x2354: jmp 0x23e0
0x247c: call 0x1590
0x2481: nop word ptr cs:[rax+rax]
0x248b: nop dword ptr [rax+rax]
0x2490: mov qword ptr [rip+0x205e01],rdi
0x2497: ret 
0x24a0: mov byte ptr [rip+0x205de9],dil
0x24a7: ret 
0x24b0: push rbp
0x24b1: push rbx
0x24b2: sub rsp,0x8
0x24b6: mov rdi,qword ptr [rip+0x205d8b]
0x24bd: call 0x4e40
0x24c2: test eax,eax
0x24c4: je 0x24dc
0x24c6: call 0x14c0
0x24cb: cmp byte ptr [rip+0x205dbe],0x0
0x24d2: mov rbx,rax
0x24d5: je 0x24f3
0x24d7: cmp dword ptr [rax],0x20
0x24da: jne 0x24f3
0x24dc: mov rdi,qword ptr [rip+0x205d9d]
0x24e3: call 0x4e40
0x24e8: test eax,eax
0x24ea: jne 0x2532
0x24ec: add rsp,0x8
0x24f0: pop rbx
0x24f1: pop rbp
0x24f2: ret 
0x24f3: lea rsi,[rip+0x330a]
0x24fa: xor edi,edi
0x24fc: mov edx,0x5
0x2501: call 0x1560
0x2506: mov rdi,qword ptr [rip+0x205d8b]
0x250d: mov rbp,rax
0x2510: test rdi,rdi
0x2513: je 0x253d
0x2515: call 0x4070
0x251a: mov esi,dword ptr [rbx]
0x251c: lea rdx,[rip+0x32ed]
0x2523: mov rcx,rax
0x2526: mov r8,rbp
0x2529: xor edi,edi
0x252b: xor eax,eax
0x252d: call 0x1700
0x2532: mov edi,dword ptr [rip+0x205ae0]
0x2538: call 0x14e0
0x253d: mov esi,dword ptr [rbx]
0x253f: lea rdx,[rip+0x32ce]
0x2546: mov rcx,rax
0x2549: xor edi,edi
0x254b: xor eax,eax
0x254d: call 0x1700
0x2552: jmp 0x2532
0x25ff: nop 
0x2600: push rbp
0x2601: push rbx
0x2602: mov rbp,rdi
0x2605: mov ebx,esi
0x2607: sub rsp,0x8
0x260b: call 0x4f20
0x2610: movzx edx,byte ptr [rax]
0x2613: and edx,-0x21
0x2616: cmp dl,0x55
0x2619: je 0x2690
0x261b: cmp dl,0x47
0x261e: je 0x2640
0x2620: lea rax,[rip+0x3244]
0x2627: lea rdx,[rip+0x323f]
0x262e: cmp ebx,0x9
0x2631: cmovne rax,rdx
0x2635: add rsp,0x8
0x2639: pop rbx
0x263a: pop rbp
0x263b: ret 
0x2640: movzx edx,byte ptr [rax+0x1]
0x2644: and edx,-0x21
0x2647: cmp dl,0x42
0x264a: jne 0x2620
0x264c: cmp byte ptr [rax+0x2],0x31
0x2650: jne 0x2620
0x2652: cmp byte ptr [rax+0x3],0x38
0x2656: jne 0x2620
0x2658: cmp byte ptr [rax+0x4],0x30
0x265c: jne 0x2620
0x265e: cmp byte ptr [rax+0x5],0x33
0x2662: jne 0x2620
0x2664: cmp byte ptr [rax+0x6],0x30
0x2668: jne 0x2620
0x266a: cmp byte ptr [rax+0x7],0x0
0x266e: jne 0x2620
0x2670: cmp byte ptr [rbp],0x60
0x2674: lea rax,[rip+0x31e9]
0x267b: lea rdx,[rip+0x31e6]
0x2682: cmovne rax,rdx
0x2686: add rsp,0x8
0x268a: pop rbx
0x268b: pop rbp
0x268c: ret 
0x2690: movzx edx,byte ptr [rax+0x1]
0x2694: and edx,-0x21
0x2697: cmp dl,0x54
0x269a: jne 0x2620
0x269c: movzx edx,byte ptr [rax+0x2]
0x26a0: and edx,-0x21
0x26a3: cmp dl,0x46
0x26a6: jne 0x2620
0x26ac: cmp byte ptr [rax+0x3],0x2d
0x26b0: jne 0x2620
0x26b6: cmp byte ptr [rax+0x4],0x38
0x26ba: jne 0x2620
0x26c0: cmp byte ptr [rax+0x5],0x0
0x26c4: jne 0x2620
0x26ca: cmp byte ptr [rbp],0x60
0x26ce: lea rax,[rip+0x3187]
0x26d5: lea rdx,[rip+0x3184]
0x26dc: cmovne rax,rdx
0x26e0: add rsp,0x8
0x26e4: pop rbx
0x26e5: pop rbp
0x26e6: ret 
0x27c3: xor r11d,r11d
0x27c6: mov rax,rbp
0x27c9: mov r8d,r12d
0x27cc: mov rbp,r11
0x27cf: mov r11,rax
0x27d2: nop word ptr [rax+rax]
0x27d8: cmp r11,rbp
0x27db: setne r12b
0x27df: cmp r11,-0x1
0x27e3: jne 0x27f2
0x27e5: mov rax,qword ptr [rsp+0x10]
0x27ea: cmp byte ptr [rax+rbp],0x0
0x27ee: setne r12b
0x27f2: test r12b,r12b
0x27f5: je 0x2e50
0x27fb: cmp dword ptr [rsp+0x8],0x2
0x2800: mov rdi,qword ptr [rsp+0x10]
0x2805: lea r9,[rdi+rbp]
0x2809: setne al
0x280c: and al,byte ptr [rsp+0xd]
0x2810: mov r10d,eax
0x2813: je 0x28c0
0x2819: mov rax,qword ptr [rsp+0x18]
0x281e: test rax,rax
0x2821: je 0x2c50
0x2827: cmp r11,-0x1
0x282b: lea rbx,[rbp+rax]
0x2830: jne 0x2860
0x2832: cmp rax,0x1
0x2836: jbe 0x2860
0x2838: mov byte ptr [rsp+0x38],r8b
0x283d: mov byte ptr [rsp+0x30],r10b
0x2842: mov qword ptr [rsp+0x28],r9
0x2847: call 0x1580
0x284c: movzx r8d,byte ptr [rsp+0x38]
0x2852: movzx r10d,byte ptr [rsp+0x30]
0x2858: mov r11,rax
0x285b: mov r9,qword ptr [rsp+0x28]
0x2860: cmp rbx,r11
0x2863: mov byte ptr [rsp+0x28],r10b
0x2868: ja 0x2e20
0x286e: mov rdx,qword ptr [rsp+0x18]
0x2873: mov rsi,qword ptr [rsp+0x48]
0x2878: mov rdi,r9
0x287b: mov qword ptr [rsp+0x40],r11
0x2880: mov byte ptr [rsp+0x38],r8b
0x2885: mov qword ptr [rsp+0x30],r9
0x288a: call 0x1600
0x288f: test eax,eax
0x2891: mov r9,qword ptr [rsp+0x30]
0x2896: movzx r8d,byte ptr [rsp+0x38]
0x289c: mov r11,qword ptr [rsp+0x40]
0x28a1: jne 0x2e20
0x28a7: cmp byte ptr [rsp+0xf],0x0
0x28ac: movzx r10d,byte ptr [rsp+0x28]
0x28b2: jne 0x3835
0x28b8: nop dword ptr [rax+rax]
0x28c0: movzx ebx,byte ptr [r9]
0x28c4: cmp bl,0x7e
0x28c7: ja 0x2be8
0x28cd: lea rcx,[rip+0x3018]
0x28d4: movzx edx,bl
0x28d7: movsxd rax,dword ptr [rcx+rdx*4]
0x28db: add rax,rcx
0x28de: jmp rax
0x2918: cmp byte ptr [rsp+0xd],0x1
0x291d: jne 0x2a32
0x2923: test dl,dl
0x2925: jne 0x2a32
0x292b: mov rsi,qword ptr [rsp+0x20]
0x2930: test rsi,rsi
0x2933: je 0x2949
0x2935: mov edx,ebx
0x2937: shr dl,0x5
0x293a: movzx edx,dl
0x293d: mov edx,dword ptr [rsi+rdx*4]
0x2940: btl edx,ebx
0x2943: jb 0x2a93
0x2949: test r10b,r10b
0x294c: jne 0x2a93
0x2952: xor eax,0x1
0x2955: add rbp,0x1
0x2959: and eax,r8d
0x295c: test al,al
0x295e: je 0x2980
0x2960: cmp r13,r15
0x2963: jbe 0x296a
0x2965: mov byte ptr [r14+r15],0x27
0x296a: lea rax,[r15+0x1]
0x296e: cmp r13,rax
0x2971: jbe 0x2979
0x2973: mov byte ptr [r14+r15+0x1],0x27
0x2979: add r15,0x2
0x297d: xor r8d,r8d
0x2980: cmp r15,r13
0x2983: jae 0x2989
0x2985: mov byte ptr [r14+r15],bl
0x2989: movzx edi,byte ptr [rsp+0xe]
0x298e: add r15,0x1
0x2992: mov eax,0x0
0x2997: test r12b,r12b
0x299a: cmove edi,eax
0x299d: mov byte ptr [rsp+0xe],dil
0x29a2: jmp 0x27d8
0x2a32: cmp byte ptr [rsp+0xf],0x0
0x2a37: jne 0x292b
0x2a3d: jmp 0x2949
0x2a93: cmp dword ptr [rsp+0x8],0x2
0x2a98: sete dl
0x2a9b: cmp byte ptr [rsp+0xf],0x0
0x2aa0: mov eax,edx
0x2aa2: jne 0x32f8
0x2aa8: mov eax,r8d
0x2aab: xor eax,0x1
0x2aae: and al,dl
0x2ab0: je 0x2ae1
0x2ab2: cmp r13,r15
0x2ab5: jbe 0x2abc
0x2ab7: mov byte ptr [r14+r15],0x27
0x2abc: lea rdx,[r15+0x1]
0x2ac0: cmp r13,rdx
0x2ac3: jbe 0x2acb
0x2ac5: mov byte ptr [r14+r15+0x1],0x24
0x2acb: lea rdx,[r15+0x2]
0x2acf: cmp r13,rdx
0x2ad2: jbe 0x2ada
0x2ad4: mov byte ptr [r14+r15+0x2],0x27
0x2ada: add r15,0x3
0x2ade: mov r8d,eax
0x2ae1: cmp r13,r15
0x2ae4: jbe 0x2aeb
0x2ae6: mov byte ptr [r14+r15],0x5c
0x2aeb: add r15,0x1
0x2aef: add rbp,0x1
0x2af3: jmp 0x2980
0x2be0: xor r10d,r10d
0x2be3: nop dword ptr [rax+rax]
0x2be8: cmp qword ptr [rsp+0x58],0x1
0x2bee: jne 0x2f98
0x2bf4: mov qword ptr [rsp+0x38],r11
0x2bf9: mov byte ptr [rsp+0x30],r8b
0x2bfe: mov byte ptr [rsp+0x28],r10b
0x2c03: call 0x17a0
0x2c08: mov rcx,qword ptr [rax]
0x2c0b: movzx edx,bl
0x2c0e: movzx r10d,byte ptr [rsp+0x28]
0x2c14: movzx r8d,byte ptr [rsp+0x30]
0x2c1a: mov r11,qword ptr [rsp+0x38]
0x2c1f: mov edi,0x1
0x2c24: movzx eax,word ptr [rcx+rdx*2]
0x2c28: and ax,0x4000
0x2c2c: setne r12b
0x2c30: sete al
0x2c33: and al,byte ptr [rsp+0xd]
0x2c37: test al,al
0x2c39: jne 0x35d1
0x2c3f: cmp dword ptr [rsp+0x8],0x2
0x2c44: sete dl
0x2c47: jmp 0x2918
0x2c50: movzx ebx,byte ptr [r9]
0x2c54: cmp bl,0x7e
0x2c57: ja 0x2be0
0x2c59: lea rcx,[rip+0x2e88]
0x2c60: movzx edx,bl
0x2c63: movsxd rax,dword ptr [rcx+rdx*4]
0x2c67: add rax,rcx
0x2c6a: jmp rax
0x2e20: xor r10d,r10d
0x2e23: jmp 0x28c0
0x2e50: cmp dword ptr [rsp+0x8],0x2
0x2e55: movzx ebx,byte ptr [rsp+0xf]
0x2e5a: mov r12d,r8d
0x2e5d: mov rbp,r11
0x2e60: sete dl
0x2e63: mov eax,ebx
0x2e65: test r15,r15
0x2e68: sete cl
0x2e6b: and eax,edx
0x2e6d: and al,cl
0x2e6f: jne 0x38d6
0x2e75: mov eax,ebx
0x2e77: xor eax,0x1
0x2e7a: and dl,al
0x2e7c: je 0x37ec
0x2e82: cmp byte ptr [rsp+0x7c],0x0
0x2e87: je 0x37ea
0x2e8d: cmp byte ptr [rsp+0xe],0x0
0x2e92: jne 0x388d
0x2e98: test r13,r13
0x2e9b: sete al
0x2e9e: cmp qword ptr [rsp+0x50],0x0
0x2ea4: setne dl
0x2ea7: and al,dl
0x2ea9: je 0x38cc
0x2eaf: mov r13,qword ptr [rsp+0x50]
0x2eb4: lea rbx,[rip+0x29b2]
0x2ebb: mov byte ptr [r14],0x27
0x2ebf: mov dword ptr [rsp+0x8],0x2
0x2ec7: mov r15d,0x1
0x2ecd: mov qword ptr [rsp+0x18],0x1
0x2ed6: mov byte ptr [rsp+0xf],0x0
0x2edb: mov qword ptr [rsp+0x48],rbx
0x2ee0: mov byte ptr [rsp+0x7c],al
0x2ee4: jmp 0x27c3
0x2f98: lea rax,[rsp+0xa0]
0x2fa0: cmp r11,-0x1
0x2fa4: mov qword ptr [rsp+0xa0],0x0
0x2fb0: mov qword ptr [rsp+0x28],rax
0x2fb5: jne 0x2fe4
0x2fb7: mov rdi,qword ptr [rsp+0x10]
0x2fbc: mov byte ptr [rsp+0x40],r8b
0x2fc1: mov byte ptr [rsp+0x38],r10b
0x2fc6: mov qword ptr [rsp+0x30],r9
0x2fcb: call 0x1580
0x2fd0: movzx r8d,byte ptr [rsp+0x40]
0x2fd6: movzx r10d,byte ptr [rsp+0x38]
0x2fdc: mov r11,rax
0x2fdf: mov r9,qword ptr [rsp+0x30]
0x2fe4: lea rax,[rsp+0x9c]
0x2fec: xor ecx,ecx
0x2fee: mov byte ptr [rsp+0x7e],bl
0x2ff2: mov byte ptr [rsp+0x7d],r8b
0x2ff7: mov rbx,rcx
0x2ffa: mov qword ptr [rsp+0x88],r9
0x3002: mov qword ptr [rsp+0x38],rax
0x3007: mov byte ptr [rsp+0x7f],r10b
0x300c: mov qword ptr [rsp+0x80],r15
0x3014: mov qword ptr [rsp+0x40],r14
0x3019: mov qword ptr [rsp+0x70],r13
0x301e: mov qword ptr [rsp+0x30],r11
0x3023: mov rax,qword ptr [rsp+0x10]
0x3028: lea r14,[rbp+rbx]
0x302d: mov rdx,qword ptr [rsp+0x30]
0x3032: mov rcx,qword ptr [rsp+0x28]
0x3037: mov rdi,qword ptr [rsp+0x38]
0x303c: lea r13,[rax+r14]
0x3040: sub rdx,r14
0x3043: mov rsi,r13
0x3046: call 0x4b40
0x304b: test rax,rax
0x304e: mov r15,rax
0x3051: je 0x30a1
0x3053: cmp rax,-0x1
0x3057: je 0x3675
0x305d: cmp rax,-0x2
0x3061: je 0x3601
0x3067: cmp dword ptr [rsp+0x8],0x2
0x306c: sete al
0x306f: and al,byte ptr [rsp+0xf]
0x3073: jne 0x3210
0x3079: mov edi,dword ptr [rsp+0x9c]
0x3080: call 0x1790
0x3085: mov rdi,qword ptr [rsp+0x28]
0x308a: test eax,eax
0x308c: mov eax,0x0
0x3091: cmove r12d,eax
0x3095: add rbx,r15
0x3098: call 0x1780
0x309d: test eax,eax
0x309f: je 0x3023
0x30a1: mov edx,r12d
0x30a4: mov rdi,rbx
0x30a7: movzx r8d,byte ptr [rsp+0x7d]
0x30ad: xor edx,0x1
0x30b0: movzx ebx,byte ptr [rsp+0x7e]
0x30b5: movzx r10d,byte ptr [rsp+0x7f]
0x30bb: and dl,byte ptr [rsp+0xd]
0x30bf: mov r15,qword ptr [rsp+0x80]
0x30c7: mov r14,qword ptr [rsp+0x40]
0x30cc: mov r13,qword ptr [rsp+0x70]
0x30d1: mov r11,qword ptr [rsp+0x30]
0x30d6: cmp rdi,0x1
0x30da: jbe 0x36db
0x30e0: mov rcx,rdi
0x30e3: xor esi,esi
0x30e5: movzx r9d,byte ptr [rsp+0xf]
0x30eb: add rcx,rbp
0x30ee: mov rdi,qword ptr [rsp+0x10]
0x30f3: jmp 0x31ae
0x3100: cmp dword ptr [rsp+0x8],0x2
0x3105: sete al
0x3108: test r9b,r9b
0x310b: jne 0x35c0
0x3111: mov esi,r8d
0x3114: xor esi,0x1
0x3117: and al,sil
0x311a: je 0x314b
0x311c: cmp r13,r15
0x311f: jbe 0x3126
0x3121: mov byte ptr [r14+r15],0x27
0x3126: lea rsi,[r15+0x1]
0x312a: cmp r13,rsi
0x312d: jbe 0x3135
0x312f: mov byte ptr [r14+r15+0x1],0x24
0x3135: lea rsi,[r15+0x2]
0x3139: cmp r13,rsi
0x313c: jbe 0x3144
0x313e: mov byte ptr [r14+r15+0x2],0x27
0x3144: add r15,0x3
0x3148: mov r8d,eax
0x314b: cmp r13,r15
0x314e: jbe 0x3155
0x3150: mov byte ptr [r14+r15],0x5c
0x3155: lea rax,[r15+0x1]
0x3159: cmp r13,rax
0x315c: jbe 0x316b
0x315e: mov eax,ebx
0x3160: shr al,0x6
0x3163: add eax,0x30
0x3166: mov byte ptr [r14+r15+0x1],al
0x316b: lea rax,[r15+0x2]
0x316f: cmp r13,rax
0x3172: jbe 0x3184
0x3174: mov eax,ebx
0x3176: shr al,0x3
0x3179: and eax,0x7
0x317c: add eax,0x30
0x317f: mov byte ptr [r14+r15+0x2],al
0x3184: and ebx,0x7
0x3187: add rbp,0x1
0x318b: add r15,0x3
0x318f: add ebx,0x30
0x3192: cmp rbp,rcx
0x3195: jae 0x2980
0x319b: mov esi,edx
0x319d: cmp r13,r15
0x31a0: jbe 0x31a6
0x31a2: mov byte ptr [r14+r15],bl
0x31a6: movzx ebx,byte ptr [rdi+rbp]
0x31aa: add r15,0x1
0x31ae: test dl,dl
0x31b0: jne 0x3100
0x31b6: mov eax,esi
0x31b8: xor eax,0x1
0x31bb: and eax,r8d
0x31be: test r10b,r10b
0x31c1: je 0x31d1
0x31c3: cmp r13,r15
0x31c6: jbe 0x31cd
0x31c8: mov byte ptr [r14+r15],0x5c
0x31cd: add r15,0x1
0x31d1: add rbp,0x1
0x31d5: cmp rbp,rcx
0x31d8: jae 0x295c
0x31de: test al,al
0x31e0: je 0x35de
0x31e6: cmp r13,r15
0x31e9: jbe 0x31f0
0x31eb: mov byte ptr [r14+r15],0x27
0x31f0: lea rax,[r15+0x1]
0x31f4: cmp r13,rax
0x31f7: jbe 0x31ff
0x31f9: mov byte ptr [r14+r15+0x1],0x27
0x31ff: add r15,0x2
0x3203: xor r10d,r10d
0x3206: xor r8d,r8d
0x3209: jmp 0x319d
0x3210: cmp r15,0x1
0x3214: je 0x3079
0x321a: mov rdi,qword ptr [rsp+0x10]
0x321f: lea rcx,[rdi+r15]
0x3223: lea rdx,[rdi+r14+0x1]
0x3228: lea r8,[rcx+r14]
0x322c: jmp 0x323d
0x3230: add rdx,0x1
0x3234: cmp r8,rdx
0x3237: je 0x3079
0x323d: movzx ecx,byte ptr [rdx]
0x3240: sub ecx,0x5b
0x3243: cmp cl,0x21
0x3246: ja 0x3230
0x3248: mov esi,0x1
0x324d: shl rsi,cl
0x3250: mov rcx,rsi
0x3253: movabsq rsi,0x20000002b
0x325d: test rcx,rsi
0x3260: je 0x3230
0x3262: mov r14,qword ptr [rsp+0x40]
0x3267: mov r13,qword ptr [rsp+0x70]
0x326c: mov rbp,qword ptr [rsp+0x30]
0x3271: mov dword ptr [rsp+0x8],0x2
0x3279: cmp byte ptr [rsp+0xd],0x0
0x327e: je 0x3290
0x3280: test al,al
0x3282: mov eax,0x4
0x3287: cmove eax,dword ptr [rsp+0x8]
0x328c: mov dword ptr [rsp+0x8],eax
0x3290: sub rsp,0x8
0x3294: mov rcx,rbp
0x3297: mov rsi,r13
0x329a: push qword ptr [rsp+0x68]
0x329e: push qword ptr [rsp+0x78]
0x32a2: mov rdi,r14
0x32a5: push 0x0
0x32a7: mov r9d,dword ptr [rsp+0x98]
0x32af: mov r8d,dword ptr [rsp+0x28]
0x32b4: mov rdx,qword ptr [rsp+0x30]
0x32b9: and r9d,-0x3
0x32bd: call 0x26f0
0x32c2: add rsp,0x20
0x32c6: mov r15,rax
0x32c9: mov rbx,qword ptr [rsp+0xa8]
0x32d1: xor rbx,qword ptr fs:0x28
0x32da: mov rax,r15
0x32dd: jne 0x38e3
0x32e3: add rsp,0xb8
0x32ea: pop rbx
0x32eb: pop rbp
0x32ec: pop r12
0x32ee: pop r13
0x32f0: pop r14
0x32f2: pop r15
0x32f4: ret 
0x32f8: mov rbp,r11
0x32fb: jmp 0x3279
0x3361: test r13,r13
0x3364: jne 0x38fa
0x336a: lea rax,[rip+0x24fc]
0x3371: mov qword ptr [rsp+0x50],0x0
0x337a: mov byte ptr [rsp+0xe],0x1
0x337f: mov byte ptr [rsp+0x7c],0x0
0x3384: xor r12d,r12d
0x3387: mov byte ptr [rsp+0xf],0x0
0x338c: mov qword ptr [rsp+0x18],0x1
0x3395: mov qword ptr [rsp+0x48],rax
0x339a: mov r15d,0x1
0x33a0: mov dword ptr [rsp+0x8],0x2
0x33a8: jmp 0x27c3
0x35c0: movzx ebx,byte ptr [rsp+0xf]
0x35c5: mov rbp,r11
0x35c8: mov byte ptr [rsp+0xd],bl
0x35cc: jmp 0x3279
0x35d1: movzx edx,byte ptr [rsp+0xd]
0x35d6: xor r12d,r12d
0x35d9: jmp 0x30e0
0x35de: xor r10d,r10d
0x35e1: jmp 0x319d
0x3601: mov r11,qword ptr [rsp+0x30]
0x3606: mov rsi,r14
0x3609: mov rcx,r13
0x360c: mov rax,rbx
0x360f: mov rdi,rbx
0x3612: movzx r8d,byte ptr [rsp+0x7d]
0x3618: movzx ebx,byte ptr [rsp+0x7e]
0x361d: mov r9,qword ptr [rsp+0x88]
0x3625: cmp rsi,r11
0x3628: movzx r10d,byte ptr [rsp+0x7f]
0x362e: mov r15,qword ptr [rsp+0x80]
0x3636: mov r14,qword ptr [rsp+0x40]
0x363b: mov r13,qword ptr [rsp+0x70]
0x3640: jae 0x3668
0x3642: cmp byte ptr [rcx],0x0
0x3645: jne 0x3657
0x3647: jmp 0x3668
0x3650: cmp byte ptr [r9+rax],0x0
0x3655: je 0x3665
0x3657: add rax,0x1
0x365b: lea rdx,[rbp+rax]
0x3660: cmp r11,rdx
0x3663: ja 0x3650
0x3665: mov rdi,rax
0x3668: movzx edx,byte ptr [rsp+0xd]
0x366d: xor r12d,r12d
0x3670: jmp 0x30d6
0x3675: mov rdi,rbx
0x3678: movzx r8d,byte ptr [rsp+0x7d]
0x367e: movzx ebx,byte ptr [rsp+0x7e]
0x3683: movzx r10d,byte ptr [rsp+0x7f]
0x3689: mov r15,qword ptr [rsp+0x80]
0x3691: xor r12d,r12d
0x3694: mov r14,qword ptr [rsp+0x40]
0x3699: mov r13,qword ptr [rsp+0x70]
0x369e: mov r11,qword ptr [rsp+0x30]
0x36a3: movzx edx,byte ptr [rsp+0xd]
0x36a8: jmp 0x30d6
0x36db: mov eax,edx
0x36dd: jmp 0x2c37
0x37ea: mov eax,edx
0x37ec: mov rbx,qword ptr [rsp+0x48]
0x37f1: test rbx,rbx
0x37f4: je 0x3822
0x37f6: test al,al
0x37f8: je 0x3822
0x37fa: movzx ecx,byte ptr [rbx]
0x37fd: mov rax,rbx
0x3800: test cl,cl
0x3802: je 0x3822
0x3804: mov rdx,r15
0x3807: sub rax,r15
0x380a: cmp r13,rdx
0x380d: jbe 0x3813
0x380f: mov byte ptr [r14+rdx],cl
0x3813: add rdx,0x1
0x3817: movzx ecx,byte ptr [rax+rdx]
0x381b: test cl,cl
0x381d: jne 0x380a
0x381f: mov r15,rdx
0x3822: cmp r13,r15
0x3825: jbe 0x32c9
0x382b: mov byte ptr [r14+r15],0x0
0x3830: jmp 0x32c9
0x3835: cmp dword ptr [rsp+0x8],0x2
0x383a: movzx ebx,byte ptr [rsp+0xf]
0x383f: mov rbp,r11
0x3842: sete al
0x3845: mov byte ptr [rsp+0xd],bl
0x3849: jmp 0x3279
0x388d: sub rsp,0x8
0x3891: mov r8d,0x5
0x3897: mov rcx,r11
0x389a: push qword ptr [rsp+0x68]
0x389e: push qword ptr [rsp+0x78]
0x38a2: mov rdi,r14
0x38a5: push qword ptr [rsp+0x38]
0x38a9: mov r9d,dword ptr [rsp+0x98]
0x38b1: mov rdx,qword ptr [rsp+0x30]
0x38b6: mov rsi,qword ptr [rsp+0x70]
0x38bb: call 0x26f0
0x38c0: add rsp,0x20
0x38c4: mov r15,rax
0x38c7: jmp 0x32c9
0x38cc: movzx eax,byte ptr [rsp+0x7c]
0x38d1: jmp 0x37ec
0x38d6: mov dword ptr [rsp+0x8],0x2
0x38de: jmp 0x3279
0x38e3: call 0x1590
0x38e8: mov byte ptr [rsp+0xd],0x0
0x38ed: jmp 0x3361
0x38fa: mov byte ptr [rsp+0xe],0x1
0x38ff: xor eax,eax
0x3901: xor r12d,r12d
0x3904: mov qword ptr [rsp+0x50],0x0
0x390d: jmp 0x2eb4
0x3924: nop 
0x3926: nop word ptr cs:[rax+rax]
0x3a1c: add rsp,0x20
0x3a20: mov r11,qword ptr [rsp+0x10]
0x3a25: cmp r11,rax
0x3a28: ja 0x3a91
0x3a2a: lea rsi,[rax+0x1]
0x3a2e: lea rax,[rip+0x20488b]
0x3a35: cmp r12,rax
0x3a38: mov qword ptr [rbx],rsi
0x3a3b: je 0x3a4f
0x3a3d: mov rdi,r12
0x3a40: mov qword ptr [rsp+0x10],rsi
0x3a45: call 0x14a0
0x3a4a: mov rsi,qword ptr [rsp+0x10]
0x3a4f: mov rdi,rsi
0x3a52: mov qword ptr [rsp+0x10],rsi
0x3a57: call 0x48b0
0x3a5c: sub rsp,0x8
0x3a60: mov qword ptr [rbx+0x8],rax
0x3a64: mov r8d,dword ptr [rbp]
0x3a68: push qword ptr [rbp+0x30]
0x3a6b: push qword ptr [rbp+0x28]
0x3a6e: mov rcx,r14
0x3a71: push r15
0x3a73: mov r9d,dword ptr [rsp+0x3c]
0x3a78: mov rdi,rax
0x3a7b: mov rdx,qword ptr [rsp+0x28]
0x3a80: mov rsi,qword ptr [rsp+0x30]
0x3a85: mov r12,rax
0x3a88: call 0x26f0
0x3a8d: add rsp,0x20
0x3a91: mov eax,dword ptr [rsp+0x18]
0x3a95: mov dword ptr [r13],eax
0x3a99: add rsp,0x28
0x3a9d: mov rax,r12
0x3aa0: pop rbx
0x3aa1: pop rbp
0x3aa2: pop r12
0x3aa4: pop r13
0x3aa6: pop r14
0x3aa8: pop r15
0x3aaa: ret 
0x3ad1: call 0x14b0
0x3ad6: call 0x4b00
0x3adb: nop dword ptr [rax+rax]
0x3ae0: push r12
0x3ae2: push rbp
0x3ae3: push rbx
0x3ae4: mov rbx,rdi
0x3ae7: call 0x14c0
0x3aec: mov r12d,dword ptr [rax]
0x3aef: mov rbp,rax
0x3af2: lea rax,[rip+0x2048c7]
0x3af9: test rbx,rbx
0x3afc: mov esi,0x38
0x3b01: cmove rbx,rax
0x3b05: mov rdi,rbx
0x3b08: call 0x4ab0
0x3b0d: mov dword ptr [rbp],r12d
0x3b11: pop rbx
0x3b12: pop rbp
0x3b13: pop r12
0x3b15: ret 
0x3b20: lea rax,[rip+0x204899]
0x3b27: test rdi,rdi
0x3b2a: cmove rdi,rax
0x3b2e: mov eax,dword ptr [rdi]
0x3b30: ret 
0x3b40: lea rax,[rip+0x204879]
0x3b47: test rdi,rdi
0x3b4a: cmove rdi,rax
0x3b4e: mov dword ptr [rdi],esi
0x3b50: ret 
0x3b60: lea rax,[rip+0x204859]
0x3b67: test rdi,rdi
0x3b6a: mov ecx,esi
0x3b6c: cmove rdi,rax
0x3b70: mov eax,esi
0x3b72: and ecx,0x1f
0x3b75: shr al,0x5
0x3b78: movzx eax,al
0x3b7b: lea rdi,[rdi+rax*4+0x8]
0x3b80: mov esi,dword ptr [rdi]
0x3b82: mov eax,esi
0x3b84: shr eax,cl
0x3b86: xor edx,eax
0x3b88: and eax,0x1
0x3b8b: and edx,0x1
0x3b8e: shl edx,cl
0x3b90: xor edx,esi
0x3b92: mov dword ptr [rdi],edx
0x3b94: ret 
0x3ba0: lea rax,[rip+0x204819]
0x3ba7: test rdi,rdi
0x3baa: cmove rdi,rax
0x3bae: mov eax,dword ptr [rdi+0x4]
0x3bb1: mov dword ptr [rdi+0x4],esi
0x3bb4: ret 
0x3bc0: lea rax,[rip+0x2047f9]
0x3bc7: test rdi,rdi
0x3bca: cmove rdi,rax
0x3bce: test rsi,rsi
0x3bd1: mov dword ptr [rdi],0xa
0x3bd7: je 0x3be7
0x3bd9: test rdx,rdx
0x3bdc: je 0x3be7
0x3bde: mov qword ptr [rdi+0x28],rsi
0x3be2: mov qword ptr [rdi+0x30],rdx
0x3be6: ret 
0x3be7: sub rsp,0x8
0x3beb: call 0x14b0
0x3bf0: push r15
0x3bf2: push r14
0x3bf4: lea rax,[rip+0x2047c5]
0x3bfb: push r13
0x3bfd: push r12
0x3bff: mov r13,rdi
0x3c02: push rbp
0x3c03: push rbx
0x3c04: mov rbx,r8
0x3c07: mov r14,rsi
0x3c0a: mov r15,rdx
0x3c0d: sub rsp,0x18
0x3c11: test r8,r8
0x3c14: cmove rbx,rax
0x3c18: mov qword ptr [rsp+0x8],rcx
0x3c1d: call 0x14c0
0x3c22: mov r12d,dword ptr [rax]
0x3c25: mov rbp,rax
0x3c28: lea rax,[rbx+0x8]
0x3c2c: sub rsp,0x8
0x3c30: mov r9d,dword ptr [rbx+0x4]
0x3c34: push qword ptr [rbx+0x30]
0x3c37: mov r8d,dword ptr [rbx]
0x3c3a: push qword ptr [rbx+0x28]
0x3c3d: mov rdx,r15
0x3c40: push rax
0x3c41: mov rcx,qword ptr [rsp+0x28]
0x3c46: mov rsi,r14
0x3c49: mov rdi,r13
0x3c4c: call 0x26f0
0x3c51: mov dword ptr [rbp],r12d
0x3c55: add rsp,0x38
0x3c59: pop rbx
0x3c5a: pop rbp
0x3c5b: pop r12
0x3c5d: pop r13
0x3c5f: pop r14
0x3c61: pop r15
0x3c63: ret 
0x3c70: push r15
0x3c72: push r14
0x3c74: lea rax,[rip+0x204745]
0x3c7b: push r13
0x3c7d: push r12
0x3c7f: mov r12,rdx
0x3c82: push rbp
0x3c83: push rbx
0x3c84: mov rbx,rcx
0x3c87: mov r14,rdi
0x3c8a: mov r15,rsi
0x3c8d: sub rsp,0x38
0x3c91: test rcx,rcx
0x3c94: cmove rbx,rax
0x3c98: xor ebp,ebp
0x3c9a: call 0x14c0
0x3c9f: test r12,r12
0x3ca2: mov r13,rax
0x3ca5: mov eax,dword ptr [rax]
0x3ca7: sete bpl
0x3cab: or ebp,dword ptr [rbx+0x4]
0x3cae: lea r10,[rbx+0x8]
0x3cb2: sub rsp,0x8
0x3cb6: mov r8d,dword ptr [rbx]
0x3cb9: mov rcx,r15
0x3cbc: mov dword ptr [rsp+0x14],eax
0x3cc0: push qword ptr [rbx+0x30]
0x3cc3: mov rdx,r14
0x3cc6: push qword ptr [rbx+0x28]
0x3cc9: push r10
0x3ccb: xor esi,esi
0x3ccd: mov r9d,ebp
0x3cd0: xor edi,edi
0x3cd2: mov qword ptr [rsp+0x40],r10
0x3cd7: call 0x26f0
0x3cdc: lea rsi,[rax+0x1]
0x3ce0: mov qword ptr [rsp+0x48],rax
0x3ce5: add rsp,0x20
0x3ce9: mov rdi,rsi
0x3cec: mov qword ptr [rsp+0x18],rsi
0x3cf1: call 0x48b0
0x3cf6: mov qword ptr [rsp+0x10],rax
0x3cfb: sub rsp,0x8
0x3cff: push qword ptr [rbx+0x30]
0x3d02: push qword ptr [rbx+0x28]
0x3d05: mov r10,qword ptr [rsp+0x38]
0x3d0a: mov r9d,ebp
0x3d0d: mov r8d,dword ptr [rbx]
0x3d10: mov rcx,r15
0x3d13: mov rdx,r14
0x3d16: mov rdi,rax
0x3d19: push r10
0x3d1b: mov rsi,qword ptr [rsp+0x38]
0x3d20: call 0x26f0
0x3d25: mov eax,dword ptr [rsp+0x2c]
0x3d29: add rsp,0x20
0x3d2d: test r12,r12
0x3d30: mov dword ptr [r13],eax
0x3d34: je 0x3d3f
0x3d36: mov r11,qword ptr [rsp+0x28]
0x3d3b: mov qword ptr [r12],r11
0x3d3f: mov rax,qword ptr [rsp+0x10]
0x3d44: add rsp,0x38
0x3d48: pop rbx
0x3d49: pop rbp
0x3d4a: pop r12
0x3d4c: pop r13
0x3d4e: pop r14
0x3d50: pop r15
0x3d52: ret 
0x3d60: mov rcx,rdx
0x3d63: xor edx,edx
0x3d65: jmp 0x3c70
0x3d70: mov eax,dword ptr [rip+0x2042e2]
0x3d76: push r12
0x3d78: mov r12,qword ptr [rip+0x2042e1]
0x3d7f: push rbp
0x3d80: push rbx
0x3d81: cmp eax,0x1
0x3d84: jle 0x3db1
0x3d86: sub eax,0x2
0x3d89: lea rbx,[r12+0x18]
0x3d8e: shl rax,0x4
0x3d92: lea rbp,[r12+rax+0x28]
0x3d97: nop word ptr [rax+rax]
0x3da0: mov rdi,qword ptr [rbx]
0x3da3: add rbx,0x10
0x3da7: call 0x14a0
0x3dac: cmp rbx,rbp
0x3daf: jne 0x3da0
0x3db1: mov rdi,qword ptr [r12+0x8]
0x3db6: lea rbx,[rip+0x204503]
0x3dbd: cmp rdi,rbx
0x3dc0: je 0x3dd9
0x3dc2: call 0x14a0
0x3dc7: mov qword ptr [rip+0x20429e],0x100
0x3dd2: mov qword ptr [rip+0x20429f],rbx
0x3dd9: lea rbx,[rip+0x204290]
0x3de0: cmp r12,rbx
0x3de3: je 0x3df4
0x3de5: mov rdi,r12
0x3de8: call 0x14a0
0x3ded: mov qword ptr [rip+0x20426c],rbx
0x3df4: pop rbx
0x3df5: mov dword ptr [rip+0x204259],0x1
0x3dff: pop rbp
0x3e00: pop r12
0x3e02: ret 
0x3e10: lea rcx,[rip+0x2045a9]
0x3e17: mov rdx,-0x1
0x3e1e: jmp 0x3930
0x3e30: lea rcx,[rip+0x204589]
0x3e37: jmp 0x3930
0x3e40: lea rcx,[rip+0x204579]
0x3e47: mov rsi,rdi
0x3e4a: mov rdx,-0x1
0x3e51: xor edi,edi
0x3e53: jmp 0x3930
0x3e60: lea rcx,[rip+0x204559]
0x3e67: mov rdx,rsi
0x3e6a: mov rsi,rdi
0x3e6d: xor edi,edi
0x3e6f: jmp 0x3930
0x3e80: sub rsp,0x48
0x3e84: mov rax,rdx
0x3e87: mov rdx,qword ptr fs:0x28
0x3e90: mov qword ptr [rsp+0x38],rdx
0x3e95: xor edx,edx
0x3e97: cmp esi,0xa
0x3e9a: je 0x3f04
0x3e9c: mov dword ptr [rsp],esi
0x3e9f: mov rcx,rsp
0x3ea2: mov rdx,-0x1
0x3ea9: mov rsi,rax
0x3eac: mov qword ptr [rsp+0x4],0x0
0x3eb5: mov qword ptr [rsp+0xc],0x0
0x3ebe: mov qword ptr [rsp+0x14],0x0
0x3ec7: mov qword ptr [rsp+0x1c],0x0
0x3ed0: mov qword ptr [rsp+0x24],0x0
0x3ed9: mov qword ptr [rsp+0x2c],0x0
0x3ee2: mov dword ptr [rsp+0x34],0x0
0x3eea: call 0x3930
0x3eef: mov rcx,qword ptr [rsp+0x38]
0x3ef4: xor rcx,qword ptr fs:0x28
0x3efd: jne 0x3f09
0x3eff: add rsp,0x48
0x3f03: ret 
0x3f04: call 0x14b0
0x3f09: call 0x1590
0x3f0e: nop 
0x3f10: sub rsp,0x48
0x3f14: mov rax,rdx
0x3f17: mov rdx,rcx
0x3f1a: mov rcx,qword ptr fs:0x28
0x3f23: mov qword ptr [rsp+0x38],rcx
0x3f28: xor ecx,ecx
0x3f2a: cmp esi,0xa
0x3f2d: je 0x3f90
0x3f2f: mov dword ptr [rsp],esi
0x3f32: mov rcx,rsp
0x3f35: mov rsi,rax
0x3f38: mov qword ptr [rsp+0x4],0x0
0x3f41: mov qword ptr [rsp+0xc],0x0
0x3f4a: mov qword ptr [rsp+0x14],0x0
0x3f53: mov qword ptr [rsp+0x1c],0x0
0x3f5c: mov qword ptr [rsp+0x24],0x0
0x3f65: mov qword ptr [rsp+0x2c],0x0
0x3f6e: mov dword ptr [rsp+0x34],0x0
0x3f76: call 0x3930
0x3f7b: mov rdx,qword ptr [rsp+0x38]
0x3f80: xor rdx,qword ptr fs:0x28
0x3f89: jne 0x3f95
0x3f8b: add rsp,0x48
0x3f8f: ret 
0x3f90: call 0x14b0
0x3f95: call 0x1590
0x3f9a: nop word ptr [rax+rax]
0x3fa0: mov rdx,rsi
0x3fa3: mov esi,edi
0x3fa5: xor edi,edi
0x3fa7: jmp 0x3e80
0x3fb0: mov rcx,rdx
0x3fb3: mov rdx,rsi
0x3fb6: mov esi,edi
0x3fb8: xor edi,edi
0x3fba: jmp 0x3f10
0x3fc0: sub rsp,0x48
0x3fc4: mov ecx,edx
0x3fc6: mov rax,qword ptr fs:0x28
0x3fcf: mov qword ptr [rsp+0x38],rax
0x3fd4: xor eax,eax
0x3fd6: mov rax,qword ptr [rip+0x204413]
0x3fdd: mov r8,rsp
0x3fe0: and ecx,0x1f
0x3fe3: movdqa xmm0,[rip+0x2043d5]
0x3feb: mov qword ptr [rsp+0x30],rax
0x3ff0: mov eax,edx
0x3ff2: movaps [rsp],xmm0
0x3ff6: shr al,0x5
0x3ff9: movzx eax,al
0x3ffc: lea r9,[r8+rax*4+0x8]
0x4001: movdqa xmm0,[rip+0x2043c7]
0x4009: movaps [rsp+0x10],xmm0
0x400e: movdqa xmm0,[rip+0x2043ca]
0x4016: movaps [rsp+0x20],xmm0
0x401b: mov edx,dword ptr [r9]
0x401e: mov eax,edx
0x4020: shr eax,cl
0x4022: not eax
0x4024: and eax,0x1
0x4027: shl eax,cl
0x4029: mov rcx,r8
0x402c: xor eax,edx
0x402e: mov rdx,rsi
0x4031: mov rsi,rdi
0x4034: mov dword ptr [r9],eax
0x4037: xor edi,edi
0x4039: call 0x3930
0x403e: mov rsi,qword ptr [rsp+0x38]
0x4043: xor rsi,qword ptr fs:0x28
0x404c: jne 0x4053
0x404e: add rsp,0x48
0x4052: ret 
0x4053: call 0x1590
0x4058: nop dword ptr [rax+rax]
0x4060: movsx edx,sil
0x4064: mov rsi,-0x1
0x406b: jmp 0x3fc0
0x4070: mov edx,0x3a
0x4075: mov rsi,-0x1
0x407c: jmp 0x3fc0
0x4090: mov edx,0x3a
0x4095: jmp 0x3fc0
0x40a0: sub rsp,0x48
0x40a4: mov rax,rdx
0x40a7: mov rdx,qword ptr fs:0x28
0x40b0: mov qword ptr [rsp+0x38],rdx
0x40b5: xor edx,edx
0x40b7: cmp esi,0xa
0x40ba: je 0x4124
0x40bc: mov dword ptr [rsp],esi
0x40bf: mov rcx,rsp
0x40c2: mov rdx,-0x1
0x40c9: mov rsi,rax
0x40cc: mov qword ptr [rsp+0x4],0x0
0x40d5: mov qword ptr [rsp+0xc],0x4000000
0x40de: mov qword ptr [rsp+0x14],0x0
0x40e7: mov qword ptr [rsp+0x1c],0x0
0x40f0: mov qword ptr [rsp+0x24],0x0
0x40f9: mov qword ptr [rsp+0x2c],0x0
0x4102: mov dword ptr [rsp+0x34],0x0
0x410a: call 0x3930
0x410f: mov rcx,qword ptr [rsp+0x38]
0x4114: xor rcx,qword ptr fs:0x28
0x411d: jne 0x4129
0x411f: add rsp,0x48
0x4123: ret 
0x4124: call 0x14b0
0x4129: call 0x1590
0x412e: nop 
0x4130: sub rsp,0x48
0x4134: mov r9,rcx
0x4137: mov rcx,qword ptr [rip+0x2042b2]
0x413e: movdqa xmm0,[rip+0x20427a]
0x4146: mov rax,qword ptr fs:0x28
0x414f: mov qword ptr [rsp+0x38],rax
0x4154: xor eax,eax
0x4156: movaps [rsp],xmm0
0x415a: test rsi,rsi
0x415d: mov qword ptr [rsp+0x30],rcx
0x4162: mov dword ptr [rsp],0xa
0x4169: movdqa xmm0,[rip+0x20425f]
0x4171: movaps [rsp+0x10],xmm0
0x4176: movdqa xmm0,[rip+0x204262]
0x417e: movaps [rsp+0x20],xmm0
0x4183: je 0x41b7
0x4185: test rdx,rdx
0x4188: je 0x41b7
0x418a: mov qword ptr [rsp+0x28],rsi
0x418f: mov qword ptr [rsp+0x30],rdx
0x4194: mov rcx,rsp
0x4197: mov rdx,r8
0x419a: mov rsi,r9
0x419d: call 0x3930
0x41a2: mov rdi,qword ptr [rsp+0x38]
0x41a7: xor rdi,qword ptr fs:0x28
0x41b0: jne 0x41bc
0x41b2: add rsp,0x48
0x41b6: ret 
0x41b7: call 0x14b0
0x41bc: call 0x1590
0x41c1: nop dword ptr [rax+rax]
0x41c6: nop word ptr cs:[rax+rax]
0x41d0: mov r8,-0x1
0x41d7: jmp 0x4130
0x41e0: mov rcx,rdx
0x41e3: mov r8,-0x1
0x41ea: mov rdx,rsi
0x41ed: mov rsi,rdi
0x41f0: xor edi,edi
0x41f2: jmp 0x4130
0x4200: mov r8,rcx
0x4203: mov rcx,rdx
0x4206: mov rdx,rsi
0x4209: mov rsi,rdi
0x420c: xor edi,edi
0x420e: jmp 0x4130
0x4220: lea rcx,[rip+0x203df9]
0x4227: jmp 0x3930
0x4230: lea rcx,[rip+0x203de9]
0x4237: mov rdx,rsi
0x423a: mov rsi,rdi
0x423d: xor edi,edi
0x423f: jmp 0x3930
0x4250: lea rcx,[rip+0x203dc9]
0x4257: mov rdx,-0x1
0x425e: jmp 0x3930
0x43c8: mov r8,rcx
0x43cb: mov rcx,rdx
0x43ce: lea rdx,[rip+0x195f]
0x43d5: mov esi,0x1
0x43da: xor eax,eax
0x43dc: call 0x1760
0x43e1: jmp 0x42cc
0x45dd: push r12
0x45df: push r15
0x45e1: push r14
0x45e3: mov r8,qword ptr [rsp+0x20]
0x45e8: mov rcx,rbx
0x45eb: mov rdx,rax
0x45ee: mov rdi,rbp
0x45f1: mov esi,0x1
0x45f6: xor eax,eax
0x45f8: call 0x1760
0x45fd: add rsp,0x20
0x4601: add rsp,0x28
0x4605: pop rbx
0x4606: pop rbp
0x4607: pop r12
0x4609: pop r13
0x460b: pop r14
0x460d: pop r15
0x460f: ret 
0x4649: push r12
0x464b: push r15
0x464d: push r14
0x464f: mov r9,qword ptr [rsp+0x28]
0x4654: jmp 0x45e3
0x46b0: xor r9d,r9d
0x46b3: cmp qword ptr [r8],0x0
0x46b7: je 0x46cb
0x46b9: nop dword ptr [rax]
0x46c0: add r9,0x1
0x46c4: cmp qword ptr [r8+r9*8],0x0
0x46c9: jne 0x46c0
0x46cb: jmp 0x4290
0x46d0: sub rsp,0x68
0x46d4: mov r10,r8
0x46d7: xor r9d,r9d
0x46da: mov rax,qword ptr fs:0x28
0x46e3: mov qword ptr [rsp+0x58],rax
0x46e8: xor eax,eax
0x46ea: mov r8,rsp
0x46ed: nop dword ptr [rax]
0x46f0: mov eax,dword ptr [r10]
0x46f3: cmp eax,0x2f
0x46f6: ja 0x473a
0x46f8: mov r11d,eax
0x46fb: add r11,qword ptr [r10+0x10]
0x46ff: add eax,0x8
0x4702: mov dword ptr [r10],eax
0x4705: mov rax,qword ptr [r11]
0x4708: test rax,rax
0x470b: mov qword ptr [r8+r9*8],rax
0x470f: je 0x471b
0x4711: add r9,0x1
0x4715: cmp r9,0xa
0x4719: jne 0x46f0
0x471b: call 0x4290
0x4720: mov rax,qword ptr [rsp+0x58]
0x4725: xor rax,qword ptr fs:0x28
0x472e: jne 0x4735
0x4730: add rsp,0x68
0x4734: ret 
0x4735: call 0x1590
0x473a: mov r11,qword ptr [r10+0x8]
0x473e: lea rax,[r11+0x8]
0x4742: mov qword ptr [r10+0x8],rax
0x4746: jmp 0x4705
0x4810: call 0x1590
0x481c: mov rax,rbx
0x481f: add rbx,0x8
0x4823: jmp 0x47d6
0x4830: push rbx
0x4831: lea rsi,[rip+0x154a]
0x4838: mov edx,0x5
0x483d: xor edi,edi
0x483f: call 0x1560
0x4844: lea rdx,[rip+0x154c]
0x484b: mov rsi,rax
0x484e: mov edi,0x1
0x4853: xor eax,eax
0x4855: call 0x16f0
0x485a: lea rsi,[rip+0x154c]
0x4861: mov edx,0x5
0x4866: xor edi,edi
0x4868: call 0x1560
0x486d: lea rcx,[rip+0xdcc]
0x4874: lea rdx,[rip+0x924]
0x487b: mov rsi,rax
0x487e: mov edi,0x1
0x4883: xor eax,eax
0x4885: call 0x16f0
0x488a: mov rbx,qword ptr [rip+0x2039b7]
0x4891: lea rsi,[rip+0x1748]
0x4898: xor edi,edi
0x489a: mov edx,0x5
0x489f: call 0x1560
0x48a4: mov rsi,rbx
0x48a7: mov rdi,rax
0x48aa: pop rbx
0x48ab: jmp 0x1610
0x48ca: nop word ptr [rax+rax]
0x48d0: mov rax,rdi
0x48d3: mul rsi
0x48d6: mov rdi,rax
0x48d9: seto al
0x48dc: test rdi,rdi
0x48df: js 0x48eb
0x48e1: movzx eax,al
0x48e4: test rax,rax
0x48e7: jne 0x48eb
0x48e9: jmp 0x48b0
0x48eb: sub rsp,0x8
0x48ef: call 0x4b00
0x48f4: nop 
0x48f6: nop word ptr cs:[rax+rax]
0x4900: jmp 0x48b0
0x4919: test rdi,rdi
0x491c: jne 0x4938
0x4938: call 0x14a0
0x493d: xor eax,eax
0x493f: pop rbx
0x4940: ret 
0x4946: nop word ptr cs:[rax+rax]
0x4950: mov rax,rsi
0x4953: mul rdx
0x4956: mov rsi,rax
0x4959: seto al
0x495c: test rsi,rsi
0x495f: js 0x496b
0x4961: movzx eax,al
0x4964: test rax,rax
0x4967: jne 0x496b
0x4969: jmp 0x4910
0x496b: sub rsp,0x8
0x496f: call 0x4b00
0x4974: nop 
0x4976: nop word ptr cs:[rax+rax]
0x4980: test rdi,rdi
0x4983: mov r9,rdx
0x4986: mov rcx,qword ptr [rsi]
0x4989: je 0x49c0
0x498b: xor edx,edx
0x498d: movabsq rax,0x5555555555555554
0x4997: div r9
0x499a: cmp rax,rcx
0x499d: jbe 0x49db
0x499f: mov rax,rcx
0x49a2: shr rax, 1
0x49a5: lea rcx,[rax+rcx+0x1]
0x49aa: mov qword ptr [rsi],rcx
0x49ad: imul rcx,r9
0x49b1: mov rsi,rcx
0x49b4: jmp 0x4910
0x49c0: test rcx,rcx
0x49c3: je 0x49e8
0x49c5: mov rax,rcx
0x49c8: mul r9
0x49cb: seto dl
0x49ce: test rax,rax
0x49d1: movzx edx,dl
0x49d4: js 0x49db
0x49d6: test rdx,rdx
0x49d9: je 0x49aa
0x49db: sub rsp,0x8
0x49df: call 0x4b00
0x49e4: nop dword ptr [rax]
0x49e8: xor edx,edx
0x49ea: mov eax,0x80
0x49ef: xor r8d,r8d
0x49f2: div r9
0x49f5: test rax,rax
0x49f8: sete r8b
0x49fc: lea rcx,[r8+rax]
0x4a00: jmp 0x49c5
0x4a10: test rdi,rdi
0x4a13: mov rax,qword ptr [rsi]
0x4a16: je 0x4a40
0x4a18: movabsq rdx,0x5555555555555553
0x4a22: cmp rax,rdx
0x4a25: ja 0x4a51
0x4a27: mov rdx,rax
0x4a2a: shr rdx, 1
0x4a2d: lea rax,[rdx+rax+0x1]
0x4a32: mov qword ptr [rsi],rax
0x4a35: mov rsi,rax
0x4a38: jmp 0x4910
0x4a40: test rax,rax
0x4a43: mov edx,0x80
0x4a48: cmove rax,rdx
0x4a4c: test rax,rax
0x4a4f: jns 0x4a32
0x4a51: sub rsp,0x8
0x4a55: call 0x4b00
0x4a5a: nop word ptr [rax+rax]
0x4a60: push rbx
0x4a61: mov rbx,rdi
0x4a64: call 0x48b0
0x4a69: mov rdx,rbx
0x4a6c: xor esi,esi
0x4a6e: mov rdi,rax
0x4a71: pop rbx
0x4a72: jmp 0x15f0
0x4a80: mov rax,rdi
0x4a83: sub rsp,0x8
0x4a87: mul rsi
0x4a8a: seto dl
0x4a8d: test rax,rax
0x4a90: js 0x4aa9
0x4a92: movzx edx,dl
0x4a95: test rdx,rdx
0x4a98: jne 0x4aa9
0x4a9a: call 0x1620
0x4a9f: test rax,rax
0x4aa2: je 0x4aa9
0x4aa4: add rsp,0x8
0x4aa8: ret 
0x4aa9: call 0x4b00
0x4aae: nop 
0x4b30: call 0x14b0
0x4b35: nop word ptr cs:[rax+rax]
0x4b3f: nop 
0x4b40: push r13
0x4b42: push r12
0x4b44: mov r13,rsi
0x4b47: push rbp
0x4b48: push rbx
0x4b49: mov rbx,rdi
0x4b4c: mov r12,rdx
0x4b4f: sub rsp,0x18
0x4b53: mov rax,qword ptr fs:0x28
0x4b5c: mov qword ptr [rsp+0x8],rax
0x4b61: xor eax,eax
0x4b63: lea rax,[rsp+0x4]
0x4b68: test rdi,rdi
0x4b6b: cmove rbx,rax
0x4b6f: mov rdi,rbx
0x4b72: call 0x15b0
0x4b77: cmp rax,-0x3
0x4b7b: mov rbp,rax
0x4b7e: jbe 0x4ba0
0x4b80: test r12,r12
0x4b83: je 0x4ba0
0x4b85: xor edi,edi
0x4b87: call 0x4ec0
0x4b8c: test al,al
0x4b8e: jne 0x4ba0
0x4b90: movzx eax,byte ptr [r13]
0x4b95: mov ebp,0x1
0x4b9a: mov dword ptr [rbx],eax
0x4b9c: nop dword ptr [rax]
0x4ba0: mov rdx,qword ptr [rsp+0x8]
0x4ba5: xor rdx,qword ptr fs:0x28
0x4bae: mov rax,rbp
0x4bb1: jne 0x4bbe
0x4bb3: add rsp,0x18
0x4bb7: pop rbx
0x4bb8: pop rbp
0x4bb9: pop r12
0x4bbb: pop r13
0x4bbd: ret 
0x4bbe: call 0x1590
0x4bc3: nop word ptr cs:[rax+rax]
0x4bcd: nop dword ptr [rax]
0x4d50: call 0x1590
0x4d55: nop 
0x4d56: nop word ptr cs:[rax+rax]
0x4e40: push r12
0x4e42: push rbp
0x4e43: mov rbp,rdi
0x4e46: push rbx
0x4e47: call 0x1500
0x4e4c: mov ebx,dword ptr [rbp]
0x4e4f: mov rdi,rbp
0x4e52: mov r12,rax
0x4e55: call 0x4f60
0x4e5a: and ebx,0x20
0x4e5d: test ebx,ebx
0x4e5f: jne 0x4e78
0x4e61: test eax,eax
0x4e63: je 0x4e6f
0x4e65: test r12,r12
0x4e68: mov eax,0xffffffff
0x4e6d: je 0x4ea8
0x4e6f: pop rbx
0x4e70: pop rbp
0x4e71: pop r12
0x4e73: ret 
0x4e78: test eax,eax
0x4e7a: jne 0x4e98
0x4e7c: call 0x14c0
0x4e81: mov dword ptr [rax],0x0
0x4e87: mov eax,0xffffffff
0x4e8c: pop rbx
0x4e8d: pop rbp
0x4e8e: pop r12
0x4e90: ret 
0x4e98: pop rbx
0x4e99: mov eax,0xffffffff
0x4e9e: pop rbp
0x4e9f: pop r12
0x4ea1: ret 
0x4ea8: call 0x14c0
0x4ead: cmp dword ptr [rax],0x9
0x4eb0: pop rbx
0x4eb1: pop rbp
0x4eb2: pop r12
0x4eb4: setne al
0x4eb7: movzx eax,al
0x4eba: neg eax
0x4ebc: ret 
0x4ec0: sub rsp,0x8
0x4ec4: xor esi,esi
0x4ec6: call 0x16e0
0x4ecb: mov rdx,rax
0x4ece: mov eax,0x1
0x4ed3: test rdx,rdx
0x4ed6: je 0x4ef5
0x4ed8: lea rdi,[rip+0x11d1]
0x4edf: mov ecx,0x2
0x4ee4: mov rsi,rdx
0x4ee7: rep cmpsb [rsi],es:[rdi]
0x4ee9: seta cl
0x4eec: sbb cl,0x0
0x4eef: xor eax,eax
0x4ef1: test cl,cl
0x4ef3: jne 0x4f00
0x4ef5: add rsp,0x8
0x4ef9: ret 
0x4f00: lea rdi,[rip+0x11ab]
0x4f07: mov ecx,0x6
0x4f0c: mov rsi,rdx
0x4f0f: rep cmpsb [rsi],es:[rdi]
0x4f11: seta al
0x4f14: sbb al,0x0
0x4f16: test al,al
0x4f18: setne al
0x4f1b: add rsp,0x8
0x4f1f: ret 
0x4f20: sub rsp,0x8
0x4f24: mov edi,0xe
0x4f29: call 0x16a0
0x4f2e: test rax,rax
0x4f31: je 0x4f50
0x4f33: cmp byte ptr [rax],0x0
0x4f36: lea rdx,[rip+0x117b]
0x4f3d: cmove rax,rdx
0x4f41: add rsp,0x8
0x4f45: ret 
0x4f50: lea rax,[rip+0x1161]
0x4f57: add rsp,0x8
0x4f5b: ret 
0x4f60: push r12
0x4f62: push rbp
0x4f63: push rbx
0x4f64: mov rbx,rdi
0x4f67: call 0x1670
0x4f6c: test eax,eax
0x4f6e: mov rdi,rbx
0x4f71: js 0x4fc7
0x4f73: call 0x16b0
0x4f78: test eax,eax
0x4f7a: jne 0x4fa8
0x4f7c: mov rdi,rbx
0x4f7f: call 0x4fe0
0x4f84: test eax,eax
0x4f86: je 0x4fc4
0x4f88: call 0x14c0
0x4f8d: mov r12d,dword ptr [rax]
0x4f90: mov rdi,rbx
0x4f93: mov rbp,rax
0x4f96: call 0x1540
0x4f9b: test r12d,r12d
0x4f9e: jne 0x4fd0
0x4fa0: pop rbx
0x4fa1: pop rbp
0x4fa2: pop r12
0x4fa4: ret 
0x4fa8: mov rdi,rbx
0x4fab: call 0x1670
0x4fb0: xor esi,esi
0x4fb2: mov edx,0x1
0x4fb7: mov edi,eax
0x4fb9: call 0x15e0
0x4fbe: cmp rax,-0x1
0x4fc2: jne 0x4f7c
0x4fc4: mov rdi,rbx
0x4fc7: pop rbx
0x4fc8: pop rbp
0x4fc9: pop r12
0x4fcb: jmp 0x1540
0x4fd0: mov dword ptr [rbp],r12d
0x4fd4: mov eax,0xffffffff
0x4fd9: jmp 0x4fa0
0x4fe0: test rdi,rdi
0x4fe3: push rbx
0x4fe4: mov rbx,rdi
0x4fe7: je 0x4ffa
0x4fe9: call 0x16b0
0x4fee: test eax,eax
0x4ff0: je 0x4ffa
0x4ff2: test dword ptr [rbx],0x100
0x4ff8: jne 0x5008
0x4ffa: mov rdi,rbx
0x4ffd: pop rbx
0x4ffe: jmp 0x1690
0x5008: mov rdi,rbx
0x500b: mov edx,0x1
0x5010: xor esi,esi
0x5012: call 0x5020
0x5017: mov rdi,rbx
0x501a: pop rbx
0x501b: jmp 0x1690
0x5020: mov rax,qword ptr [rdi+0x8]
0x5024: cmp qword ptr [rdi+0x10],rax
0x5028: je 0x5030
0x502a: jmp 0x1710
0x5030: mov rax,qword ptr [rdi+0x20]
0x5034: cmp qword ptr [rdi+0x28],rax
0x5038: jne 0x502a
0x503a: cmp qword ptr [rdi+0x48],0x0
0x503f: jne 0x502a
0x5041: push r12
0x5043: push rbp
0x5044: mov r12d,edx
0x5047: push rbx
0x5048: mov rbp,rsi
0x504b: mov rbx,rdi
0x504e: call 0x1670
0x5053: mov edx,r12d
0x5056: mov rsi,rbp
0x5059: mov edi,eax
0x505b: call 0x15e0
0x5060: cmp rax,-0x1
0x5064: je 0x5072
0x5066: and dword ptr [rbx],-0x11
0x5069: mov qword ptr [rbx+0x90],rax
0x5070: xor eax,eax
0x5072: pop rbx
0x5073: pop rbp
0x5074: pop r12
0x5076: ret 
0x5080: push r15
0x5082: push r14
0x5084: mov r15,rdx
0x5087: push r13
0x5089: push r12
0x508b: lea r12,[rip+0x202a7e]
0x5092: push rbp
0x5093: lea rbp,[rip+0x202a7e]
0x509a: push rbx
0x509b: mov r13d,edi
0x509e: mov r14,rsi
0x50a1: sub rbp,r12
0x50a4: sub rsp,0x8
0x50a8: sar rbp,0x3
0x50ac: call 0x1470
0x50b1: test rbp,rbp
0x50b4: je 0x50d6
0x50b6: xor ebx,ebx
0x50b8: nop dword ptr [rax+rax]
0x50c0: mov rdx,r15
0x50c3: mov rsi,r14
0x50c6: mov edi,r13d
0x50c9: call qword ptr [r12+rbx*8]
0x50cd: add rbx,0x1
0x50d1: cmp rbp,rbx
0x50d4: jne 0x50c0
0x50d6: add rsp,0x8
0x50da: pop rbx
0x50db: pop rbp
0x50dc: pop r12
0x50de: pop r13
0x50e0: pop r14
0x50e2: pop r15
0x50e4: ret 
0x50f0: rep ret 
