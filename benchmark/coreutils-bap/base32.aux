0x14a8: sub rsp,0x8
0x14ac: mov rax,qword ptr [rip+0x207b2d]
0x14b3: test rax,rax
0x14b6: je 0x14ba
0x14b8: call rax
0x14ba: add rsp,0x8
0x14be: ret 
0x14c6: jmp qword ptr [rip+0x20796c]
0x14d0: jmp qword ptr [rip+0x20796a]
0x1510: jmp qword ptr [rip+0x20794a]
0x1520: jmp qword ptr [rip+0x207942]
0x1590: jmp qword ptr [rip+0x20790a]
0x15a0: jmp qword ptr [rip+0x207902]
0x15c0: jmp qword ptr [rip+0x2078f2]
0x1610: jmp qword ptr [rip+0x2078ca]
0x1660: jmp qword ptr [rip+0x2078a2]
0x1680: jmp qword ptr [rip+0x207892]
0x16a0: jmp qword ptr [rip+0x207882]
0x16e0: jmp qword ptr [rip+0x207862]
0x17c0: jmp qword ptr [rip+0x2077f2]
0x17d0: jmp qword ptr [rip+0x2077ea]
0x17f0: jmp qword ptr [rip+0x2077fa]
0x19af: mov rbx,rax
0x19b2: call 0x14f0
0x19b7: mov esi,dword ptr [rax]
0x19b9: lea rdx,[rip+0x49a4]
0x19c0: mov rcx,rbx
0x19c3: mov edi,0x1
0x19c8: xor eax,eax
0x19ca: call 0x1750
0x1e20: add eax,0x1
0x1e23: jne 0x1d49
0x1e29: lea rsi,[rip+0x3f9a]
0x1e30: mov edx,0x5
0x1e35: xor edi,edi
0x1e37: call 0x1570
0x1e3c: mov rbx,rax
0x1e3f: call 0x14f0
0x1e44: mov esi,dword ptr [rax]
0x1e46: mov rdx,rbx
0x1e49: mov edi,0x1
0x1e4e: xor eax,eax
0x1e50: call 0x1750
0x1ea9: mov esi,dword ptr [rbx]
0x1eab: lea rdx,[rip+0x44b2]
0x1eb2: mov rcx,rax
0x1eb5: mov edi,0x1
0x1eba: xor eax,eax
0x1ebc: call 0x1750
0x1f3d: call 0x15a0
0x1f86: lea rsi,[rip+0x3e1e]
0x1f8d: mov rbx,rax
0x1f90: mov edx,0x5
0x1f95: xor edi,edi
0x1f97: call 0x1570
0x1f9c: mov rcx,rbx
0x1f9f: mov rdx,rax
0x1fa2: xor esi,esi
0x1fa4: xor edi,edi
0x1fa6: xor eax,eax
0x1fa8: call 0x1750
0x1fc4: add eax,0x1
0x1fc7: jne 0x1c97
0x1fcd: lea rsi,[rip+0x3df6]
0x1fd4: mov edx,0x5
0x1fd9: xor edi,edi
0x1fdb: call 0x1570
0x1fe0: mov rbx,rax
0x1fe3: call 0x14f0
0x1fe8: mov esi,dword ptr [rax]
0x1fea: mov rdx,rbx
0x1fed: mov edi,0x1
0x1ff2: xor eax,eax
0x1ff4: call 0x1750
0x1ff9: nop dword ptr [rax]
0x202a: hlt 
0x202b: nop dword ptr [rax+rax]
0x2030: lea rdi,[rip+0x207049]
0x2037: push rbp
0x2038: lea rax,[rip+0x207041]
0x203f: cmp rax,rdi
0x2042: mov rbp,rsp
0x2045: je 0x2060
0x2047: mov rax,qword ptr [rip+0x206f82]
0x204e: test rax,rax
0x2051: je 0x2060
0x2053: pop rbp
0x2054: jmp rax
0x2060: pop rbp
0x2061: ret 
0x2070: lea rdi,[rip+0x207009]
0x2077: lea rsi,[rip+0x207002]
0x207e: push rbp
0x207f: sub rsi,rdi
0x2082: mov rbp,rsp
0x2085: sar rsi,0x3
0x2089: mov rax,rsi
0x208c: shr rax,0x3f
0x2090: add rsi,rax
0x2093: sar rsi, 1
0x2096: je 0x20b0
0x2098: mov rax,qword ptr [rip+0x206f49]
0x209f: test rax,rax
0x20a2: je 0x20b0
0x20a4: pop rbp
0x20a5: jmp rax
0x20b0: pop rbp
0x20b1: ret 
0x20d1: push rbp
0x20d2: mov rbp,rsp
0x20d5: je 0x20e3
0x20d7: mov rdi,qword ptr [rip+0x206f2a]
0x20de: call 0x17f0
0x20e3: call 0x2030
0x20e8: mov byte ptr [rip+0x206fd9],0x1
0x20ef: pop rbp
0x20f0: ret 
0x2100: push rbp
0x2101: mov rbp,rsp
0x2104: pop rbp
0x2105: jmp 0x2070
0x28c0: push r14
0x28c2: push r13
0x28c4: mov r13,rdx
0x28c7: lea rdx,[rsi+0x4]
0x28cb: push r12
0x28cd: push rbp
0x28ce: push rbx
0x28cf: movabsq rbx,-0x3333333333333333
0x28d9: mov rax,rdx
0x28dc: mul rbx
0x28df: shr rdx,0x2
0x28e3: lea rbx,[rdx*8]
0x28eb: lea rbp,[rbx+0x1]
0x28ef: cmp rsi,rbp
0x28f2: jbe 0x2910
0x28f4: mov qword ptr [r13],0x0
0x28fc: xor ebp,ebp
0x28fe: pop rbx
0x28ff: mov rax,rbp
0x2902: pop rbp
0x2903: pop r12
0x2905: pop r13
0x2907: pop r14
0x2909: ret 
0x2910: mov r14,rdi
0x2913: mov rdi,rbp
0x2916: mov r12,rsi
0x2919: call 0x16c0
0x291e: test rax,rax
0x2921: mov qword ptr [r13],rax
0x2925: je 0x28fe
0x2927: mov rcx,rbp
0x292a: mov rdx,rax
0x292d: mov rbp,rbx
0x2930: mov rsi,r12
0x2933: mov rdi,r14
0x2936: call 0x26a0
0x293b: pop rbx
0x293c: mov rax,rbp
0x293f: pop rbp
0x2940: pop r12
0x2942: pop r13
0x2944: pop r14
0x2946: ret 
0x2a3c: mov rdi,r12
0x2bb6: jmp 0x2b57
0x2bd8: sub rdx,r15
0x2bdb: mov qword ptr [rsp+0x20],r15
0x2be0: add qword ptr [rsp+0x18],rdx
0x2be5: lea r15,[r12+r11]
0x2be9: jmp 0x2a3c
0x2bf0: mov r13d,0x1
0x2bf6: mov byte ptr [rsp+0x6],0x1
0x2bfb: jmp 0x29df
0x2c00: mov rdx,r15
0x2c03: mov eax,0x1
0x2c08: jmp 0x2a90
0x2c29: call 0x15a0
0x2c2e: nop 
0x2c30: push r14
0x2c32: push r13
0x2c34: mov r14,rdx
0x2c37: push r12
0x2c39: push rbp
0x2c3a: mov r12,rdi
0x2c3d: push rbx
0x2c3e: mov r13,rsi
0x2c41: mov rbx,rcx
0x2c44: mov rbp,r8
0x2c47: sub rsp,0x20
0x2c4b: mov rax,qword ptr fs:0x28
0x2c54: mov qword ptr [rsp+0x18],rax
0x2c59: xor eax,eax
0x2c5b: mov rax,rdx
0x2c5e: shr rax,0x3
0x2c62: lea rdi,[rax+rax*4+0x5]
0x2c67: mov qword ptr [rsp+0x10],rdi
0x2c6c: call 0x16c0
0x2c71: test rax,rax
0x2c74: mov qword ptr [rbx],rax
0x2c77: je 0x2ca8
0x2c79: lea r8,[rsp+0x10]
0x2c7e: mov rcx,rax
0x2c81: mov rdx,r14
0x2c84: mov rsi,r13
0x2c87: mov rdi,r12
0x2c8a: call 0x2980
0x2c8f: test al,al
0x2c91: je 0x2cd0
0x2c93: test rbp,rbp
0x2c96: je 0x2ca8
0x2c98: mov rdx,qword ptr [rsp+0x10]
0x2c9d: mov qword ptr [rbp],rdx
0x2ca1: jmp 0x2cad
0x2ca8: mov eax,0x1
0x2cad: mov rcx,qword ptr [rsp+0x18]
0x2cb2: xor rcx,qword ptr fs:0x28
0x2cbb: jne 0x2cea
0x2cbd: add rsp,0x20
0x2cc1: pop rbx
0x2cc2: pop rbp
0x2cc3: pop r12
0x2cc5: pop r13
0x2cc7: pop r14
0x2cc9: ret 
0x2cd0: mov rdi,qword ptr [rbx]
0x2cd3: mov byte ptr [rsp+0xf],al
0x2cd7: call 0x14d0
0x2cdc: mov qword ptr [rbx],0x0
0x2ce3: movzx eax,byte ptr [rsp+0xf]
0x2ce8: jmp 0x2cad
0x2cea: call 0x15a0
0x2cef: nop 
0x2cf0: mov qword ptr [rip+0x2063e1],rdi
0x2cf7: ret 
0x2d00: mov byte ptr [rip+0x2063c9],dil
0x2d07: ret 
0x2d10: push rbp
0x2d11: push rbx
0x2d12: sub rsp,0x8
0x2d16: mov rdi,qword ptr [rip+0x20636b]
0x2d1d: call 0x5ae0
0x2d22: test eax,eax
0x2d24: je 0x2d3c
0x2d26: call 0x14f0
0x2d2b: cmp byte ptr [rip+0x20639e],0x0
0x2d32: mov rbx,rax
0x2d35: je 0x2d53
0x2d37: cmp dword ptr [rax],0x20
0x2d3a: jne 0x2d53
0x2d3c: mov rdi,qword ptr [rip+0x20637d]
0x2d43: call 0x5ae0
0x2d48: test eax,eax
0x2d4a: jne 0x2d92
0x2d4c: add rsp,0x8
0x2d50: pop rbx
0x2d51: pop rbp
0x2d52: ret 
0x2d53: lea rsi,[rip+0x3070]
0x2d5a: xor edi,edi
0x2d5c: mov edx,0x5
0x2d61: call 0x1570
0x2d66: mov rdi,qword ptr [rip+0x20636b]
0x2d6d: mov rbp,rax
0x2d70: test rdi,rdi
0x2d73: je 0x2d9d
0x2d75: call 0x4910
0x2d7a: mov esi,dword ptr [rbx]
0x2d7c: lea rdx,[rip+0x35dd]
0x2d83: mov rcx,rax
0x2d86: mov r8,rbp
0x2d89: xor edi,edi
0x2d8b: xor eax,eax
0x2d8d: call 0x1750
0x2d92: mov edi,dword ptr [rip+0x206280]
0x2d98: call 0x1510
0x2d9d: mov esi,dword ptr [rbx]
0x2d9f: lea rdx,[rip+0x35be]
0x2da6: mov rcx,rax
0x2da9: xor edi,edi
0x2dab: xor eax,eax
0x2dad: call 0x1750
0x2db2: jmp 0x2d92
0x2dc0: jmp 0x1640
0x2e9f: nop 
0x2ea0: push rbp
0x2ea1: push rbx
0x2ea2: mov rbp,rdi
0x2ea5: mov ebx,esi
0x2ea7: sub rsp,0x8
0x2eab: call 0x5bc0
0x2eb0: movzx edx,byte ptr [rax]
0x2eb3: and edx,-0x21
0x2eb6: cmp dl,0x55
0x2eb9: je 0x2f30
0x2ebb: cmp dl,0x47
0x2ebe: je 0x2ee0
0x2ec0: lea rax,[rip+0x34f4]
0x2ec7: lea rdx,[rip+0x34ef]
0x2ece: cmp ebx,0x9
0x2ed1: cmovne rax,rdx
0x2ed5: add rsp,0x8
0x2ed9: pop rbx
0x2eda: pop rbp
0x2edb: ret 
0x2ee0: movzx edx,byte ptr [rax+0x1]
0x2ee4: and edx,-0x21
0x2ee7: cmp dl,0x42
0x2eea: jne 0x2ec0
0x2eec: cmp byte ptr [rax+0x2],0x31
0x2ef0: jne 0x2ec0
0x2ef2: cmp byte ptr [rax+0x3],0x38
0x2ef6: jne 0x2ec0
0x2ef8: cmp byte ptr [rax+0x4],0x30
0x2efc: jne 0x2ec0
0x2efe: cmp byte ptr [rax+0x5],0x33
0x2f02: jne 0x2ec0
0x2f04: cmp byte ptr [rax+0x6],0x30
0x2f08: jne 0x2ec0
0x2f0a: cmp byte ptr [rax+0x7],0x0
0x2f0e: jne 0x2ec0
0x2f10: cmp byte ptr [rbp],0x60
0x2f14: lea rax,[rip+0x3499]
0x2f1b: lea rdx,[rip+0x3496]
0x2f22: cmovne rax,rdx
0x2f26: add rsp,0x8
0x2f2a: pop rbx
0x2f2b: pop rbp
0x2f2c: ret 
0x2f30: movzx edx,byte ptr [rax+0x1]
0x2f34: and edx,-0x21
0x2f37: cmp dl,0x54
0x2f3a: jne 0x2ec0
0x2f3c: movzx edx,byte ptr [rax+0x2]
0x2f40: and edx,-0x21
0x2f43: cmp dl,0x46
0x2f46: jne 0x2ec0
0x2f4c: cmp byte ptr [rax+0x3],0x2d
0x2f50: jne 0x2ec0
0x2f56: cmp byte ptr [rax+0x4],0x38
0x2f5a: jne 0x2ec0
0x2f60: cmp byte ptr [rax+0x5],0x0
0x2f64: jne 0x2ec0
0x2f6a: cmp byte ptr [rbp],0x60
0x2f6e: lea rax,[rip+0x3437]
0x2f75: lea rdx,[rip+0x3434]
0x2f7c: cmovne rax,rdx
0x2f80: add rsp,0x8
0x2f84: pop rbx
0x2f85: pop rbp
0x2f86: ret 
0x3063: xor r11d,r11d
0x3066: mov rax,rbp
0x3069: mov r8d,r12d
0x306c: mov rbp,r11
0x306f: mov r11,rax
0x3072: nop word ptr [rax+rax]
0x3078: cmp r11,rbp
0x307b: setne r12b
0x307f: cmp r11,-0x1
0x3083: jne 0x3092
0x3085: mov rax,qword ptr [rsp+0x10]
0x308a: cmp byte ptr [rax+rbp],0x0
0x308e: setne r12b
0x3092: test r12b,r12b
0x3095: je 0x36f0
0x309b: cmp dword ptr [rsp+0x8],0x2
0x30a0: mov rdi,qword ptr [rsp+0x10]
0x30a5: lea r9,[rdi+rbp]
0x30a9: setne al
0x30ac: and al,byte ptr [rsp+0xd]
0x30b0: mov r10d,eax
0x30b3: je 0x3160
0x30b9: mov rax,qword ptr [rsp+0x18]
0x30be: test rax,rax
0x30c1: je 0x34f0
0x30c7: cmp r11,-0x1
0x30cb: lea rbx,[rbp+rax]
0x30d0: jne 0x3100
0x30d2: cmp rax,0x1
0x30d6: jbe 0x3100
0x30d8: mov byte ptr [rsp+0x38],r8b
0x30dd: mov byte ptr [rsp+0x30],r10b
0x30e2: mov qword ptr [rsp+0x28],r9
0x30e7: call 0x1590
0x30ec: movzx r8d,byte ptr [rsp+0x38]
0x30f2: movzx r10d,byte ptr [rsp+0x30]
0x30f8: mov r11,rax
0x30fb: mov r9,qword ptr [rsp+0x28]
0x3100: cmp rbx,r11
0x3103: mov byte ptr [rsp+0x28],r10b
0x3108: ja 0x36c0
0x310e: mov rdx,qword ptr [rsp+0x18]
0x3113: mov rsi,qword ptr [rsp+0x48]
0x3118: mov rdi,r9
0x311b: mov qword ptr [rsp+0x40],r11
0x3120: mov byte ptr [rsp+0x38],r8b
0x3125: mov qword ptr [rsp+0x30],r9
0x312a: call 0x1660
0x312f: test eax,eax
0x3131: mov r9,qword ptr [rsp+0x30]
0x3136: movzx r8d,byte ptr [rsp+0x38]
0x313c: mov r11,qword ptr [rsp+0x40]
0x3141: jne 0x36c0
0x3147: cmp byte ptr [rsp+0xf],0x0
0x314c: movzx r10d,byte ptr [rsp+0x28]
0x3152: jne 0x40d5
0x3158: nop dword ptr [rax+rax]
0x3160: movzx ebx,byte ptr [r9]
0x3164: cmp bl,0x7e
0x3167: ja 0x3488
0x316d: lea rcx,[rip+0x32d8]
0x3174: movzx edx,bl
0x3177: movsxd rax,dword ptr [rcx+rdx*4]
0x317b: add rax,rcx
0x317e: jmp rax
0x31b8: cmp byte ptr [rsp+0xd],0x1
0x31bd: jne 0x32d2
0x31c3: test dl,dl
0x31c5: jne 0x32d2
0x31cb: mov rsi,qword ptr [rsp+0x20]
0x31d0: test rsi,rsi
0x31d3: je 0x31e9
0x31d5: mov edx,ebx
0x31d7: shr dl,0x5
0x31da: movzx edx,dl
0x31dd: mov edx,dword ptr [rsi+rdx*4]
0x31e0: btl edx,ebx
0x31e3: jb 0x3333
0x31e9: test r10b,r10b
0x31ec: jne 0x3333
0x31f2: xor eax,0x1
0x31f5: add rbp,0x1
0x31f9: and eax,r8d
0x31fc: test al,al
0x31fe: je 0x3220
0x3200: cmp r13,r15
0x3203: jbe 0x320a
0x3205: mov byte ptr [r14+r15],0x27
0x320a: lea rax,[r15+0x1]
0x320e: cmp r13,rax
0x3211: jbe 0x3219
0x3213: mov byte ptr [r14+r15+0x1],0x27
0x3219: add r15,0x2
0x321d: xor r8d,r8d
0x3220: cmp r15,r13
0x3223: jae 0x3229
0x3225: mov byte ptr [r14+r15],bl
0x3229: movzx edi,byte ptr [rsp+0xe]
0x322e: add r15,0x1
0x3232: mov eax,0x0
0x3237: test r12b,r12b
0x323a: cmove edi,eax
0x323d: mov byte ptr [rsp+0xe],dil
0x3242: jmp 0x3078
0x32d2: cmp byte ptr [rsp+0xf],0x0
0x32d7: jne 0x31cb
0x32dd: jmp 0x31e9
0x3333: cmp dword ptr [rsp+0x8],0x2
0x3338: sete dl
0x333b: cmp byte ptr [rsp+0xf],0x0
0x3340: mov eax,edx
0x3342: jne 0x3b98
0x3348: mov eax,r8d
0x334b: xor eax,0x1
0x334e: and al,dl
0x3350: je 0x3381
0x3352: cmp r13,r15
0x3355: jbe 0x335c
0x3357: mov byte ptr [r14+r15],0x27
0x335c: lea rdx,[r15+0x1]
0x3360: cmp r13,rdx
0x3363: jbe 0x336b
0x3365: mov byte ptr [r14+r15+0x1],0x24
0x336b: lea rdx,[r15+0x2]
0x336f: cmp r13,rdx
0x3372: jbe 0x337a
0x3374: mov byte ptr [r14+r15+0x2],0x27
0x337a: add r15,0x3
0x337e: mov r8d,eax
0x3381: cmp r13,r15
0x3384: jbe 0x338b
0x3386: mov byte ptr [r14+r15],0x5c
0x338b: add r15,0x1
0x338f: add rbp,0x1
0x3393: jmp 0x3220
0x3480: xor r10d,r10d
0x3483: nop dword ptr [rax+rax]
0x3488: cmp qword ptr [rsp+0x58],0x1
0x348e: jne 0x3838
0x3494: mov qword ptr [rsp+0x38],r11
0x3499: mov byte ptr [rsp+0x30],r8b
0x349e: mov byte ptr [rsp+0x28],r10b
0x34a3: call 0x17e0
0x34a8: mov rcx,qword ptr [rax]
0x34ab: movzx edx,bl
0x34ae: movzx r10d,byte ptr [rsp+0x28]
0x34b4: movzx r8d,byte ptr [rsp+0x30]
0x34ba: mov r11,qword ptr [rsp+0x38]
0x34bf: mov edi,0x1
0x34c4: movzx eax,word ptr [rcx+rdx*2]
0x34c8: and ax,0x4000
0x34cc: setne r12b
0x34d0: sete al
0x34d3: and al,byte ptr [rsp+0xd]
0x34d7: test al,al
0x34d9: jne 0x3e71
0x34df: cmp dword ptr [rsp+0x8],0x2
0x34e4: sete dl
0x34e7: jmp 0x31b8
0x34f0: movzx ebx,byte ptr [r9]
0x34f4: cmp bl,0x7e
0x34f7: ja 0x3480
0x34f9: lea rcx,[rip+0x3148]
0x3500: movzx edx,bl
0x3503: movsxd rax,dword ptr [rcx+rdx*4]
0x3507: add rax,rcx
0x350a: jmp rax
0x36c0: xor r10d,r10d
0x36c3: jmp 0x3160
0x36f0: cmp dword ptr [rsp+0x8],0x2
0x36f5: movzx ebx,byte ptr [rsp+0xf]
0x36fa: mov r12d,r8d
0x36fd: mov rbp,r11
0x3700: sete dl
0x3703: mov eax,ebx
0x3705: test r15,r15
0x3708: sete cl
0x370b: and eax,edx
0x370d: and al,cl
0x370f: jne 0x4176
0x3715: mov eax,ebx
0x3717: xor eax,0x1
0x371a: and dl,al
0x371c: je 0x408c
0x3722: cmp byte ptr [rsp+0x7c],0x0
0x3727: je 0x408a
0x372d: cmp byte ptr [rsp+0xe],0x0
0x3732: jne 0x412d
0x3738: test r13,r13
0x373b: sete al
0x373e: cmp qword ptr [rsp+0x50],0x0
0x3744: setne dl
0x3747: and al,dl
0x3749: je 0x416c
0x374f: mov r13,qword ptr [rsp+0x50]
0x3754: lea rbx,[rip+0x2c62]
0x375b: mov byte ptr [r14],0x27
0x375f: mov dword ptr [rsp+0x8],0x2
0x3767: mov r15d,0x1
0x376d: mov qword ptr [rsp+0x18],0x1
0x3776: mov byte ptr [rsp+0xf],0x0
0x377b: mov qword ptr [rsp+0x48],rbx
0x3780: mov byte ptr [rsp+0x7c],al
0x3784: jmp 0x3063
0x3838: lea rax,[rsp+0xa0]
0x3840: cmp r11,-0x1
0x3844: mov qword ptr [rsp+0xa0],0x0
0x3850: mov qword ptr [rsp+0x28],rax
0x3855: jne 0x3884
0x3857: mov rdi,qword ptr [rsp+0x10]
0x385c: mov byte ptr [rsp+0x40],r8b
0x3861: mov byte ptr [rsp+0x38],r10b
0x3866: mov qword ptr [rsp+0x30],r9
0x386b: call 0x1590
0x3870: movzx r8d,byte ptr [rsp+0x40]
0x3876: movzx r10d,byte ptr [rsp+0x38]
0x387c: mov r11,rax
0x387f: mov r9,qword ptr [rsp+0x30]
0x3884: lea rax,[rsp+0x9c]
0x388c: xor ecx,ecx
0x388e: mov byte ptr [rsp+0x7e],bl
0x3892: mov byte ptr [rsp+0x7d],r8b
0x3897: mov rbx,rcx
0x389a: mov qword ptr [rsp+0x88],r9
0x38a2: mov qword ptr [rsp+0x38],rax
0x38a7: mov byte ptr [rsp+0x7f],r10b
0x38ac: mov qword ptr [rsp+0x80],r15
0x38b4: mov qword ptr [rsp+0x40],r14
0x38b9: mov qword ptr [rsp+0x70],r13
0x38be: mov qword ptr [rsp+0x30],r11
0x38c3: mov rax,qword ptr [rsp+0x10]
0x38c8: lea r14,[rbp+rbx]
0x38cd: mov rdx,qword ptr [rsp+0x30]
0x38d2: mov rcx,qword ptr [rsp+0x28]
0x38d7: mov rdi,qword ptr [rsp+0x38]
0x38dc: lea r13,[rax+r14]
0x38e0: sub rdx,r14
0x38e3: mov rsi,r13
0x38e6: call 0x5a50
0x38eb: test rax,rax
0x38ee: mov r15,rax
0x38f1: je 0x3941
0x38f3: cmp rax,-0x1
0x38f7: je 0x3f15
0x38fd: cmp rax,-0x2
0x3901: je 0x3ea1
0x3907: cmp dword ptr [rsp+0x8],0x2
0x390c: sete al
0x390f: and al,byte ptr [rsp+0xf]
0x3913: jne 0x3ab0
0x3919: mov edi,dword ptr [rsp+0x9c]
0x3920: call 0x17d0
0x3925: mov rdi,qword ptr [rsp+0x28]
0x392a: test eax,eax
0x392c: mov eax,0x0
0x3931: cmove r12d,eax
0x3935: add rbx,r15
0x3938: call 0x17c0
0x393d: test eax,eax
0x393f: je 0x38c3
0x3941: mov edx,r12d
0x3944: mov rdi,rbx
0x3947: movzx r8d,byte ptr [rsp+0x7d]
0x394d: xor edx,0x1
0x3950: movzx ebx,byte ptr [rsp+0x7e]
0x3955: movzx r10d,byte ptr [rsp+0x7f]
0x395b: and dl,byte ptr [rsp+0xd]
0x395f: mov r15,qword ptr [rsp+0x80]
0x3967: mov r14,qword ptr [rsp+0x40]
0x396c: mov r13,qword ptr [rsp+0x70]
0x3971: mov r11,qword ptr [rsp+0x30]
0x3976: cmp rdi,0x1
0x397a: jbe 0x3f7b
0x3980: mov rcx,rdi
0x3983: xor esi,esi
0x3985: movzx r9d,byte ptr [rsp+0xf]
0x398b: add rcx,rbp
0x398e: mov rdi,qword ptr [rsp+0x10]
0x3993: jmp 0x3a4e
0x39a0: cmp dword ptr [rsp+0x8],0x2
0x39a5: sete al
0x39a8: test r9b,r9b
0x39ab: jne 0x3e60
0x39b1: mov esi,r8d
0x39b4: xor esi,0x1
0x39b7: and al,sil
0x39ba: je 0x39eb
0x39bc: cmp r13,r15
0x39bf: jbe 0x39c6
0x39c1: mov byte ptr [r14+r15],0x27
0x39c6: lea rsi,[r15+0x1]
0x39ca: cmp r13,rsi
0x39cd: jbe 0x39d5
0x39cf: mov byte ptr [r14+r15+0x1],0x24
0x39d5: lea rsi,[r15+0x2]
0x39d9: cmp r13,rsi
0x39dc: jbe 0x39e4
0x39de: mov byte ptr [r14+r15+0x2],0x27
0x39e4: add r15,0x3
0x39e8: mov r8d,eax
0x39eb: cmp r13,r15
0x39ee: jbe 0x39f5
0x39f0: mov byte ptr [r14+r15],0x5c
0x39f5: lea rax,[r15+0x1]
0x39f9: cmp r13,rax
0x39fc: jbe 0x3a0b
0x39fe: mov eax,ebx
0x3a00: shr al,0x6
0x3a03: add eax,0x30
0x3a06: mov byte ptr [r14+r15+0x1],al
0x3a0b: lea rax,[r15+0x2]
0x3a0f: cmp r13,rax
0x3a12: jbe 0x3a24
0x3a14: mov eax,ebx
0x3a16: shr al,0x3
0x3a19: and eax,0x7
0x3a1c: add eax,0x30
0x3a1f: mov byte ptr [r14+r15+0x2],al
0x3a24: and ebx,0x7
0x3a27: add rbp,0x1
0x3a2b: add r15,0x3
0x3a2f: add ebx,0x30
0x3a32: cmp rbp,rcx
0x3a35: jae 0x3220
0x3a3b: mov esi,edx
0x3a3d: cmp r13,r15
0x3a40: jbe 0x3a46
0x3a42: mov byte ptr [r14+r15],bl
0x3a46: movzx ebx,byte ptr [rdi+rbp]
0x3a4a: add r15,0x1
0x3a4e: test dl,dl
0x3a50: jne 0x39a0
0x3a56: mov eax,esi
0x3a58: xor eax,0x1
0x3a5b: and eax,r8d
0x3a5e: test r10b,r10b
0x3a61: je 0x3a71
0x3a63: cmp r13,r15
0x3a66: jbe 0x3a6d
0x3a68: mov byte ptr [r14+r15],0x5c
0x3a6d: add r15,0x1
0x3a71: add rbp,0x1
0x3a75: cmp rbp,rcx
0x3a78: jae 0x31fc
0x3a7e: test al,al
0x3a80: je 0x3e7e
0x3a86: cmp r13,r15
0x3a89: jbe 0x3a90
0x3a8b: mov byte ptr [r14+r15],0x27
0x3a90: lea rax,[r15+0x1]
0x3a94: cmp r13,rax
0x3a97: jbe 0x3a9f
0x3a99: mov byte ptr [r14+r15+0x1],0x27
0x3a9f: add r15,0x2
0x3aa3: xor r10d,r10d
0x3aa6: xor r8d,r8d
0x3aa9: jmp 0x3a3d
0x3ab0: cmp r15,0x1
0x3ab4: je 0x3919
0x3aba: mov rdi,qword ptr [rsp+0x10]
0x3abf: lea rcx,[rdi+r15]
0x3ac3: lea rdx,[rdi+r14+0x1]
0x3ac8: lea r8,[rcx+r14]
0x3acc: jmp 0x3add
0x3ad0: add rdx,0x1
0x3ad4: cmp r8,rdx
0x3ad7: je 0x3919
0x3add: movzx ecx,byte ptr [rdx]
0x3ae0: sub ecx,0x5b
0x3ae3: cmp cl,0x21
0x3ae6: ja 0x3ad0
0x3ae8: mov esi,0x1
0x3aed: shl rsi,cl
0x3af0: mov rcx,rsi
0x3af3: movabsq rsi,0x20000002b
0x3afd: test rcx,rsi
0x3b00: je 0x3ad0
0x3b02: mov r14,qword ptr [rsp+0x40]
0x3b07: mov r13,qword ptr [rsp+0x70]
0x3b0c: mov rbp,qword ptr [rsp+0x30]
0x3b11: mov dword ptr [rsp+0x8],0x2
0x3b19: cmp byte ptr [rsp+0xd],0x0
0x3b1e: je 0x3b30
0x3b20: test al,al
0x3b22: mov eax,0x4
0x3b27: cmove eax,dword ptr [rsp+0x8]
0x3b2c: mov dword ptr [rsp+0x8],eax
0x3b30: sub rsp,0x8
0x3b34: mov rcx,rbp
0x3b37: mov rsi,r13
0x3b3a: push qword ptr [rsp+0x68]
0x3b3e: push qword ptr [rsp+0x78]
0x3b42: mov rdi,r14
0x3b45: push 0x0
0x3b47: mov r9d,dword ptr [rsp+0x98]
0x3b4f: mov r8d,dword ptr [rsp+0x28]
0x3b54: mov rdx,qword ptr [rsp+0x30]
0x3b59: and r9d,-0x3
0x3b5d: call 0x2f90
0x3b62: add rsp,0x20
0x3b66: mov r15,rax
0x3b69: mov rbx,qword ptr [rsp+0xa8]
0x3b71: xor rbx,qword ptr fs:0x28
0x3b7a: mov rax,r15
0x3b7d: jne 0x4183
0x3b83: add rsp,0xb8
0x3b8a: pop rbx
0x3b8b: pop rbp
0x3b8c: pop r12
0x3b8e: pop r13
0x3b90: pop r14
0x3b92: pop r15
0x3b94: ret 
0x3b98: mov rbp,r11
0x3b9b: jmp 0x3b19
0x3c01: test r13,r13
0x3c04: jne 0x419a
0x3c0a: lea rax,[rip+0x27ac]
0x3c11: mov qword ptr [rsp+0x50],0x0
0x3c1a: mov byte ptr [rsp+0xe],0x1
0x3c1f: mov byte ptr [rsp+0x7c],0x0
0x3c24: xor r12d,r12d
0x3c27: mov byte ptr [rsp+0xf],0x0
0x3c2c: mov qword ptr [rsp+0x18],0x1
0x3c35: mov qword ptr [rsp+0x48],rax
0x3c3a: mov r15d,0x1
0x3c40: mov dword ptr [rsp+0x8],0x2
0x3c48: jmp 0x3063
0x3e60: movzx ebx,byte ptr [rsp+0xf]
0x3e65: mov rbp,r11
0x3e68: mov byte ptr [rsp+0xd],bl
0x3e6c: jmp 0x3b19
0x3e71: movzx edx,byte ptr [rsp+0xd]
0x3e76: xor r12d,r12d
0x3e79: jmp 0x3980
0x3e7e: xor r10d,r10d
0x3e81: jmp 0x3a3d
0x3ea1: mov r11,qword ptr [rsp+0x30]
0x3ea6: mov rsi,r14
0x3ea9: mov rcx,r13
0x3eac: mov rax,rbx
0x3eaf: mov rdi,rbx
0x3eb2: movzx r8d,byte ptr [rsp+0x7d]
0x3eb8: movzx ebx,byte ptr [rsp+0x7e]
0x3ebd: mov r9,qword ptr [rsp+0x88]
0x3ec5: cmp rsi,r11
0x3ec8: movzx r10d,byte ptr [rsp+0x7f]
0x3ece: mov r15,qword ptr [rsp+0x80]
0x3ed6: mov r14,qword ptr [rsp+0x40]
0x3edb: mov r13,qword ptr [rsp+0x70]
0x3ee0: jae 0x3f08
0x3ee2: cmp byte ptr [rcx],0x0
0x3ee5: jne 0x3ef7
0x3ee7: jmp 0x3f08
0x3ef0: cmp byte ptr [r9+rax],0x0
0x3ef5: je 0x3f05
0x3ef7: add rax,0x1
0x3efb: lea rdx,[rbp+rax]
0x3f00: cmp r11,rdx
0x3f03: ja 0x3ef0
0x3f05: mov rdi,rax
0x3f08: movzx edx,byte ptr [rsp+0xd]
0x3f0d: xor r12d,r12d
0x3f10: jmp 0x3976
0x3f15: mov rdi,rbx
0x3f18: movzx r8d,byte ptr [rsp+0x7d]
0x3f1e: movzx ebx,byte ptr [rsp+0x7e]
0x3f23: movzx r10d,byte ptr [rsp+0x7f]
0x3f29: mov r15,qword ptr [rsp+0x80]
0x3f31: xor r12d,r12d
0x3f34: mov r14,qword ptr [rsp+0x40]
0x3f39: mov r13,qword ptr [rsp+0x70]
0x3f3e: mov r11,qword ptr [rsp+0x30]
0x3f43: movzx edx,byte ptr [rsp+0xd]
0x3f48: jmp 0x3976
0x3f7b: mov eax,edx
0x3f7d: jmp 0x34d7
0x408a: mov eax,edx
0x408c: mov rbx,qword ptr [rsp+0x48]
0x4091: test rbx,rbx
0x4094: je 0x40c2
0x4096: test al,al
0x4098: je 0x40c2
0x409a: movzx ecx,byte ptr [rbx]
0x409d: mov rax,rbx
0x40a0: test cl,cl
0x40a2: je 0x40c2
0x40a4: mov rdx,r15
0x40a7: sub rax,r15
0x40aa: cmp r13,rdx
0x40ad: jbe 0x40b3
0x40af: mov byte ptr [r14+rdx],cl
0x40b3: add rdx,0x1
0x40b7: movzx ecx,byte ptr [rax+rdx]
0x40bb: test cl,cl
0x40bd: jne 0x40aa
0x40bf: mov r15,rdx
0x40c2: cmp r13,r15
0x40c5: jbe 0x3b69
0x40cb: mov byte ptr [r14+r15],0x0
0x40d0: jmp 0x3b69
0x40d5: cmp dword ptr [rsp+0x8],0x2
0x40da: movzx ebx,byte ptr [rsp+0xf]
0x40df: mov rbp,r11
0x40e2: sete al
0x40e5: mov byte ptr [rsp+0xd],bl
0x40e9: jmp 0x3b19
0x412d: sub rsp,0x8
0x4131: mov r8d,0x5
0x4137: mov rcx,r11
0x413a: push qword ptr [rsp+0x68]
0x413e: push qword ptr [rsp+0x78]
0x4142: mov rdi,r14
0x4145: push qword ptr [rsp+0x38]
0x4149: mov r9d,dword ptr [rsp+0x98]
0x4151: mov rdx,qword ptr [rsp+0x30]
0x4156: mov rsi,qword ptr [rsp+0x70]
0x415b: call 0x2f90
0x4160: add rsp,0x20
0x4164: mov r15,rax
0x4167: jmp 0x3b69
0x416c: movzx eax,byte ptr [rsp+0x7c]
0x4171: jmp 0x408c
0x4176: mov dword ptr [rsp+0x8],0x2
0x417e: jmp 0x3b19
0x4183: call 0x15a0
0x4188: mov byte ptr [rsp+0xd],0x0
0x418d: jmp 0x3c01
0x419a: mov byte ptr [rsp+0xe],0x1
0x419f: xor eax,eax
0x41a1: xor r12d,r12d
0x41a4: mov qword ptr [rsp+0x50],0x0
0x41ad: jmp 0x3754
0x41c4: nop 
0x41c6: nop word ptr cs:[rax+rax]
0x42bc: add rsp,0x20
0x42c0: mov r11,qword ptr [rsp+0x10]
0x42c5: cmp r11,rax
0x42c8: ja 0x4331
0x42ca: lea rsi,[rax+0x1]
0x42ce: lea rax,[rip+0x204e2b]
0x42d5: cmp r12,rax
0x42d8: mov qword ptr [rbx],rsi
0x42db: je 0x42ef
0x42dd: mov rdi,r12
0x42e0: mov qword ptr [rsp+0x10],rsi
0x42e5: call 0x14d0
0x42ea: mov rsi,qword ptr [rsp+0x10]
0x42ef: mov rdi,rsi
0x42f2: mov qword ptr [rsp+0x10],rsi
0x42f7: call 0x5150
0x42fc: sub rsp,0x8
0x4300: mov qword ptr [rbx+0x8],rax
0x4304: mov r8d,dword ptr [rbp]
0x4308: push qword ptr [rbp+0x30]
0x430b: push qword ptr [rbp+0x28]
0x430e: mov rcx,r14
0x4311: push r15
0x4313: mov r9d,dword ptr [rsp+0x3c]
0x4318: mov rdi,rax
0x431b: mov rdx,qword ptr [rsp+0x28]
0x4320: mov rsi,qword ptr [rsp+0x30]
0x4325: mov r12,rax
0x4328: call 0x2f90
0x432d: add rsp,0x20
0x4331: mov eax,dword ptr [rsp+0x18]
0x4335: mov dword ptr [r13],eax
0x4339: add rsp,0x28
0x433d: mov rax,r12
0x4340: pop rbx
0x4341: pop rbp
0x4342: pop r12
0x4344: pop r13
0x4346: pop r14
0x4348: pop r15
0x434a: ret 
0x4371: call 0x14e0
0x4376: call 0x53a0
0x437b: nop dword ptr [rax+rax]
0x4380: push r12
0x4382: push rbp
0x4383: push rbx
0x4384: mov rbx,rdi
0x4387: call 0x14f0
0x438c: mov r12d,dword ptr [rax]
0x438f: mov rbp,rax
0x4392: lea rax,[rip+0x204e67]
0x4399: test rbx,rbx
0x439c: mov esi,0x38
0x43a1: cmove rbx,rax
0x43a5: mov rdi,rbx
0x43a8: call 0x5350
0x43ad: mov dword ptr [rbp],r12d
0x43b1: pop rbx
0x43b2: pop rbp
0x43b3: pop r12
0x43b5: ret 
0x43c0: lea rax,[rip+0x204e39]
0x43c7: test rdi,rdi
0x43ca: cmove rdi,rax
0x43ce: mov eax,dword ptr [rdi]
0x43d0: ret 
0x43e0: lea rax,[rip+0x204e19]
0x43e7: test rdi,rdi
0x43ea: cmove rdi,rax
0x43ee: mov dword ptr [rdi],esi
0x43f0: ret 
0x4400: lea rax,[rip+0x204df9]
0x4407: test rdi,rdi
0x440a: mov ecx,esi
0x440c: cmove rdi,rax
0x4410: mov eax,esi
0x4412: and ecx,0x1f
0x4415: shr al,0x5
0x4418: movzx eax,al
0x441b: lea rdi,[rdi+rax*4+0x8]
0x4420: mov esi,dword ptr [rdi]
0x4422: mov eax,esi
0x4424: shr eax,cl
0x4426: xor edx,eax
0x4428: and eax,0x1
0x442b: and edx,0x1
0x442e: shl edx,cl
0x4430: xor edx,esi
0x4432: mov dword ptr [rdi],edx
0x4434: ret 
0x4440: lea rax,[rip+0x204db9]
0x4447: test rdi,rdi
0x444a: cmove rdi,rax
0x444e: mov eax,dword ptr [rdi+0x4]
0x4451: mov dword ptr [rdi+0x4],esi
0x4454: ret 
0x4460: lea rax,[rip+0x204d99]
0x4467: test rdi,rdi
0x446a: cmove rdi,rax
0x446e: test rsi,rsi
0x4471: mov dword ptr [rdi],0xa
0x4477: je 0x4487
0x4479: test rdx,rdx
0x447c: je 0x4487
0x447e: mov qword ptr [rdi+0x28],rsi
0x4482: mov qword ptr [rdi+0x30],rdx
0x4486: ret 
0x4487: sub rsp,0x8
0x448b: call 0x14e0
0x4490: push r15
0x4492: push r14
0x4494: lea rax,[rip+0x204d65]
0x449b: push r13
0x449d: push r12
0x449f: mov r13,rdi
0x44a2: push rbp
0x44a3: push rbx
0x44a4: mov rbx,r8
0x44a7: mov r14,rsi
0x44aa: mov r15,rdx
0x44ad: sub rsp,0x18
0x44b1: test r8,r8
0x44b4: cmove rbx,rax
0x44b8: mov qword ptr [rsp+0x8],rcx
0x44bd: call 0x14f0
0x44c2: mov r12d,dword ptr [rax]
0x44c5: mov rbp,rax
0x44c8: lea rax,[rbx+0x8]
0x44cc: sub rsp,0x8
0x44d0: mov r9d,dword ptr [rbx+0x4]
0x44d4: push qword ptr [rbx+0x30]
0x44d7: mov r8d,dword ptr [rbx]
0x44da: push qword ptr [rbx+0x28]
0x44dd: mov rdx,r15
0x44e0: push rax
0x44e1: mov rcx,qword ptr [rsp+0x28]
0x44e6: mov rsi,r14
0x44e9: mov rdi,r13
0x44ec: call 0x2f90
0x44f1: mov dword ptr [rbp],r12d
0x44f5: add rsp,0x38
0x44f9: pop rbx
0x44fa: pop rbp
0x44fb: pop r12
0x44fd: pop r13
0x44ff: pop r14
0x4501: pop r15
0x4503: ret 
0x4510: push r15
0x4512: push r14
0x4514: lea rax,[rip+0x204ce5]
0x451b: push r13
0x451d: push r12
0x451f: mov r12,rdx
0x4522: push rbp
0x4523: push rbx
0x4524: mov rbx,rcx
0x4527: mov r14,rdi
0x452a: mov r15,rsi
0x452d: sub rsp,0x38
0x4531: test rcx,rcx
0x4534: cmove rbx,rax
0x4538: xor ebp,ebp
0x453a: call 0x14f0
0x453f: test r12,r12
0x4542: mov r13,rax
0x4545: mov eax,dword ptr [rax]
0x4547: sete bpl
0x454b: or ebp,dword ptr [rbx+0x4]
0x454e: lea r10,[rbx+0x8]
0x4552: sub rsp,0x8
0x4556: mov r8d,dword ptr [rbx]
0x4559: mov rcx,r15
0x455c: mov dword ptr [rsp+0x14],eax
0x4560: push qword ptr [rbx+0x30]
0x4563: mov rdx,r14
0x4566: push qword ptr [rbx+0x28]
0x4569: push r10
0x456b: xor esi,esi
0x456d: mov r9d,ebp
0x4570: xor edi,edi
0x4572: mov qword ptr [rsp+0x40],r10
0x4577: call 0x2f90
0x457c: lea rsi,[rax+0x1]
0x4580: mov qword ptr [rsp+0x48],rax
0x4585: add rsp,0x20
0x4589: mov rdi,rsi
0x458c: mov qword ptr [rsp+0x18],rsi
0x4591: call 0x5150
0x4596: mov qword ptr [rsp+0x10],rax
0x459b: sub rsp,0x8
0x459f: push qword ptr [rbx+0x30]
0x45a2: push qword ptr [rbx+0x28]
0x45a5: mov r10,qword ptr [rsp+0x38]
0x45aa: mov r9d,ebp
0x45ad: mov r8d,dword ptr [rbx]
0x45b0: mov rcx,r15
0x45b3: mov rdx,r14
0x45b6: mov rdi,rax
0x45b9: push r10
0x45bb: mov rsi,qword ptr [rsp+0x38]
0x45c0: call 0x2f90
0x45c5: mov eax,dword ptr [rsp+0x2c]
0x45c9: add rsp,0x20
0x45cd: test r12,r12
0x45d0: mov dword ptr [r13],eax
0x45d4: je 0x45df
0x45d6: mov r11,qword ptr [rsp+0x28]
0x45db: mov qword ptr [r12],r11
0x45df: mov rax,qword ptr [rsp+0x10]
0x45e4: add rsp,0x38
0x45e8: pop rbx
0x45e9: pop rbp
0x45ea: pop r12
0x45ec: pop r13
0x45ee: pop r14
0x45f0: pop r15
0x45f2: ret 
0x4600: mov rcx,rdx
0x4603: xor edx,edx
0x4605: jmp 0x4510
0x4610: mov eax,dword ptr [rip+0x204a42]
0x4616: push r12
0x4618: mov r12,qword ptr [rip+0x204a41]
0x461f: push rbp
0x4620: push rbx
0x4621: cmp eax,0x1
0x4624: jle 0x4651
0x4626: sub eax,0x2
0x4629: lea rbx,[r12+0x18]
0x462e: shl rax,0x4
0x4632: lea rbp,[r12+rax+0x28]
0x4637: nop word ptr [rax+rax]
0x4640: mov rdi,qword ptr [rbx]
0x4643: add rbx,0x10
0x4647: call 0x14d0
0x464c: cmp rbx,rbp
0x464f: jne 0x4640
0x4651: mov rdi,qword ptr [r12+0x8]
0x4656: lea rbx,[rip+0x204aa3]
0x465d: cmp rdi,rbx
0x4660: je 0x4679
0x4662: call 0x14d0
0x4667: mov qword ptr [rip+0x2049fe],0x100
0x4672: mov qword ptr [rip+0x2049ff],rbx
0x4679: lea rbx,[rip+0x2049f0]
0x4680: cmp r12,rbx
0x4683: je 0x4694
0x4685: mov rdi,r12
0x4688: call 0x14d0
0x468d: mov qword ptr [rip+0x2049cc],rbx
0x4694: pop rbx
0x4695: mov dword ptr [rip+0x2049b9],0x1
0x469f: pop rbp
0x46a0: pop r12
0x46a2: ret 
0x46b0: lea rcx,[rip+0x204b49]
0x46b7: mov rdx,-0x1
0x46be: jmp 0x41d0
0x46d0: lea rcx,[rip+0x204b29]
0x46d7: jmp 0x41d0
0x46e0: lea rcx,[rip+0x204b19]
0x46e7: mov rsi,rdi
0x46ea: mov rdx,-0x1
0x46f1: xor edi,edi
0x46f3: jmp 0x41d0
0x4700: lea rcx,[rip+0x204af9]
0x4707: mov rdx,rsi
0x470a: mov rsi,rdi
0x470d: xor edi,edi
0x470f: jmp 0x41d0
0x4720: sub rsp,0x48
0x4724: mov rax,rdx
0x4727: mov rdx,qword ptr fs:0x28
0x4730: mov qword ptr [rsp+0x38],rdx
0x4735: xor edx,edx
0x4737: cmp esi,0xa
0x473a: je 0x47a4
0x473c: mov dword ptr [rsp],esi
0x473f: mov rcx,rsp
0x4742: mov rdx,-0x1
0x4749: mov rsi,rax
0x474c: mov qword ptr [rsp+0x4],0x0
0x4755: mov qword ptr [rsp+0xc],0x0
0x475e: mov qword ptr [rsp+0x14],0x0
0x4767: mov qword ptr [rsp+0x1c],0x0
0x4770: mov qword ptr [rsp+0x24],0x0
0x4779: mov qword ptr [rsp+0x2c],0x0
0x4782: mov dword ptr [rsp+0x34],0x0
0x478a: call 0x41d0
0x478f: mov rcx,qword ptr [rsp+0x38]
0x4794: xor rcx,qword ptr fs:0x28
0x479d: jne 0x47a9
0x479f: add rsp,0x48
0x47a3: ret 
0x47a4: call 0x14e0
0x47a9: call 0x15a0
0x47ae: nop 
0x47b0: sub rsp,0x48
0x47b4: mov rax,rdx
0x47b7: mov rdx,rcx
0x47ba: mov rcx,qword ptr fs:0x28
0x47c3: mov qword ptr [rsp+0x38],rcx
0x47c8: xor ecx,ecx
0x47ca: cmp esi,0xa
0x47cd: je 0x4830
0x47cf: mov dword ptr [rsp],esi
0x47d2: mov rcx,rsp
0x47d5: mov rsi,rax
0x47d8: mov qword ptr [rsp+0x4],0x0
0x47e1: mov qword ptr [rsp+0xc],0x0
0x47ea: mov qword ptr [rsp+0x14],0x0
0x47f3: mov qword ptr [rsp+0x1c],0x0
0x47fc: mov qword ptr [rsp+0x24],0x0
0x4805: mov qword ptr [rsp+0x2c],0x0
0x480e: mov dword ptr [rsp+0x34],0x0
0x4816: call 0x41d0
0x481b: mov rdx,qword ptr [rsp+0x38]
0x4820: xor rdx,qword ptr fs:0x28
0x4829: jne 0x4835
0x482b: add rsp,0x48
0x482f: ret 
0x4830: call 0x14e0
0x4835: call 0x15a0
0x483a: nop word ptr [rax+rax]
0x4840: mov rdx,rsi
0x4843: mov esi,edi
0x4845: xor edi,edi
0x4847: jmp 0x4720
0x4850: mov rcx,rdx
0x4853: mov rdx,rsi
0x4856: mov esi,edi
0x4858: xor edi,edi
0x485a: jmp 0x47b0
0x4860: sub rsp,0x48
0x4864: mov ecx,edx
0x4866: mov rax,qword ptr fs:0x28
0x486f: mov qword ptr [rsp+0x38],rax
0x4874: xor eax,eax
0x4876: mov rax,qword ptr [rip+0x2049b3]
0x487d: mov r8,rsp
0x4880: and ecx,0x1f
0x4883: movdqa xmm0,[rip+0x204975]
0x488b: mov qword ptr [rsp+0x30],rax
0x4890: mov eax,edx
0x4892: movaps [rsp],xmm0
0x4896: shr al,0x5
0x4899: movzx eax,al
0x489c: lea r9,[r8+rax*4+0x8]
0x48a1: movdqa xmm0,[rip+0x204967]
0x48a9: movaps [rsp+0x10],xmm0
0x48ae: movdqa xmm0,[rip+0x20496a]
0x48b6: movaps [rsp+0x20],xmm0
0x48bb: mov edx,dword ptr [r9]
0x48be: mov eax,edx
0x48c0: shr eax,cl
0x48c2: not eax
0x48c4: and eax,0x1
0x48c7: shl eax,cl
0x48c9: mov rcx,r8
0x48cc: xor eax,edx
0x48ce: mov rdx,rsi
0x48d1: mov rsi,rdi
0x48d4: mov dword ptr [r9],eax
0x48d7: xor edi,edi
0x48d9: call 0x41d0
0x48de: mov rsi,qword ptr [rsp+0x38]
0x48e3: xor rsi,qword ptr fs:0x28
0x48ec: jne 0x48f3
0x48ee: add rsp,0x48
0x48f2: ret 
0x48f3: call 0x15a0
0x48f8: nop dword ptr [rax+rax]
0x4900: movsx edx,sil
0x4904: mov rsi,-0x1
0x490b: jmp 0x4860
0x4910: mov edx,0x3a
0x4915: mov rsi,-0x1
0x491c: jmp 0x4860
0x4930: mov edx,0x3a
0x4935: jmp 0x4860
0x49af: mov rcx,qword ptr [rsp+0x38]
0x49b4: xor rcx,qword ptr fs:0x28
0x49bd: jne 0x49c9
0x49bf: add rsp,0x48
0x49c3: ret 
0x49c4: call 0x14e0
0x49c9: call 0x15a0
0x49ce: nop 
0x49d0: sub rsp,0x48
0x49d4: mov r9,rcx
0x49d7: mov rcx,qword ptr [rip+0x204852]
0x49de: movdqa xmm0,[rip+0x20481a]
0x49e6: mov rax,qword ptr fs:0x28
0x49ef: mov qword ptr [rsp+0x38],rax
0x49f4: xor eax,eax
0x49f6: movaps [rsp],xmm0
0x49fa: test rsi,rsi
0x49fd: mov qword ptr [rsp+0x30],rcx
0x4a02: mov dword ptr [rsp],0xa
0x4a09: movdqa xmm0,[rip+0x2047ff]
0x4a11: movaps [rsp+0x10],xmm0
0x4a16: movdqa xmm0,[rip+0x204802]
0x4a1e: movaps [rsp+0x20],xmm0
0x4a23: je 0x4a57
0x4a25: test rdx,rdx
0x4a28: je 0x4a57
0x4a2a: mov qword ptr [rsp+0x28],rsi
0x4a2f: mov qword ptr [rsp+0x30],rdx
0x4a34: mov rcx,rsp
0x4a37: mov rdx,r8
0x4a3a: mov rsi,r9
0x4a3d: call 0x41d0
0x4a42: mov rdi,qword ptr [rsp+0x38]
0x4a47: xor rdi,qword ptr fs:0x28
0x4a50: jne 0x4a5c
0x4a52: add rsp,0x48
0x4a56: ret 
0x4a57: call 0x14e0
0x4a5c: call 0x15a0
0x4a61: nop dword ptr [rax+rax]
0x4a66: nop word ptr cs:[rax+rax]
0x4a70: mov r8,-0x1
0x4a77: jmp 0x49d0
0x4a80: mov rcx,rdx
0x4a83: mov r8,-0x1
0x4a8a: mov rdx,rsi
0x4a8d: mov rsi,rdi
0x4a90: xor edi,edi
0x4a92: jmp 0x49d0
0x4aa0: mov r8,rcx
0x4aa3: mov rcx,rdx
0x4aa6: mov rdx,rsi
0x4aa9: mov rsi,rdi
0x4aac: xor edi,edi
0x4aae: jmp 0x49d0
0x4ac0: lea rcx,[rip+0x204559]
0x4ac7: jmp 0x41d0
0x4ad0: lea rcx,[rip+0x204549]
0x4ad7: mov rdx,rsi
0x4ada: mov rsi,rdi
0x4add: xor edi,edi
0x4adf: jmp 0x41d0
0x4af0: lea rcx,[rip+0x204529]
0x4af7: mov rdx,-0x1
0x4afe: jmp 0x41d0
0x4c68: mov r8,rcx
0x4c6b: mov rcx,rdx
0x4c6e: lea rdx,[rip+0x1c1f]
0x4c75: mov esi,0x1
0x4c7a: xor eax,eax
0x4c7c: call 0x17b0
0x4c81: jmp 0x4b6c
0x4e7d: push r12
0x4e7f: push r15
0x4e81: push r14
0x4e83: mov r8,qword ptr [rsp+0x20]
0x4e88: mov rcx,rbx
0x4e8b: mov rdx,rax
0x4e8e: mov rdi,rbp
0x4e91: mov esi,0x1
0x4e96: xor eax,eax
0x4e98: call 0x17b0
0x4e9d: add rsp,0x20
0x4ea1: add rsp,0x28
0x4ea5: pop rbx
0x4ea6: pop rbp
0x4ea7: pop r12
0x4ea9: pop r13
0x4eab: pop r14
0x4ead: pop r15
0x4eaf: ret 
0x4ee9: push r12
0x4eeb: push r15
0x4eed: push r14
0x4eef: mov r9,qword ptr [rsp+0x28]
0x4ef4: jmp 0x4e83
0x4f50: xor r9d,r9d
0x4f53: cmp qword ptr [r8],0x0
0x4f57: je 0x4f6b
0x4f59: nop dword ptr [rax]
0x4f60: add r9,0x1
0x4f64: cmp qword ptr [r8+r9*8],0x0
0x4f69: jne 0x4f60
0x4f6b: jmp 0x4b30
0x4f70: sub rsp,0x68
0x4f74: mov r10,r8
0x4f77: xor r9d,r9d
0x4f7a: mov rax,qword ptr fs:0x28
0x4f83: mov qword ptr [rsp+0x58],rax
0x4f88: xor eax,eax
0x4f8a: mov r8,rsp
0x4f8d: nop dword ptr [rax]
0x4f90: mov eax,dword ptr [r10]
0x4f93: cmp eax,0x2f
0x4f96: ja 0x4fda
0x4f98: mov r11d,eax
0x4f9b: add r11,qword ptr [r10+0x10]
0x4f9f: add eax,0x8
0x4fa2: mov dword ptr [r10],eax
0x4fa5: mov rax,qword ptr [r11]
0x4fa8: test rax,rax
0x4fab: mov qword ptr [r8+r9*8],rax
0x4faf: je 0x4fbb
0x4fb1: add r9,0x1
0x4fb5: cmp r9,0xa
0x4fb9: jne 0x4f90
0x4fbb: call 0x4b30
0x4fc0: mov rax,qword ptr [rsp+0x58]
0x4fc5: xor rax,qword ptr fs:0x28
0x4fce: jne 0x4fd5
0x4fd0: add rsp,0x68
0x4fd4: ret 
0x4fd5: call 0x15a0
0x4fda: mov r11,qword ptr [r10+0x8]
0x4fde: lea rax,[r11+0x8]
0x4fe2: mov qword ptr [r10+0x8],rax
0x4fe6: jmp 0x4fa5
0x50b0: call 0x15a0
0x50bc: mov rax,rbx
0x50bf: add rbx,0x8
0x50c3: jmp 0x5076
0x50d0: push rbx
0x50d1: lea rsi,[rip+0x180a]
0x50d8: mov edx,0x5
0x50dd: xor edi,edi
0x50df: call 0x1570
0x50e4: lea rdx,[rip+0x180c]
0x50eb: mov rsi,rax
0x50ee: mov edi,0x1
0x50f3: xor eax,eax
0x50f5: call 0x1730
0x50fa: lea rsi,[rip+0x180c]
0x5101: mov edx,0x5
0x5106: xor edi,edi
0x5108: call 0x1570
0x510d: lea rcx,[rip+0x107c]
0x5114: lea rdx,[rip+0xc24]
0x511b: mov rsi,rax
0x511e: mov edi,0x1
0x5123: xor eax,eax
0x5125: call 0x1730
0x512a: mov rbx,qword ptr [rip+0x203f57]
0x5131: lea rsi,[rip+0x1a08]
0x5138: xor edi,edi
0x513a: mov edx,0x5
0x513f: call 0x1570
0x5144: mov rsi,rbx
0x5147: mov rdi,rax
0x514a: pop rbx
0x514b: jmp 0x1670
0x516a: nop word ptr [rax+rax]
0x5170: mov rax,rdi
0x5173: mul rsi
0x5176: mov rdi,rax
0x5179: seto al
0x517c: test rdi,rdi
0x517f: js 0x518b
0x5181: movzx eax,al
0x5184: test rax,rax
0x5187: jne 0x518b
0x5189: jmp 0x5150
0x518b: sub rsp,0x8
0x518f: call 0x53a0
0x5194: nop 
0x5196: nop word ptr cs:[rax+rax]
0x51a0: jmp 0x5150
0x51b9: test rdi,rdi
0x51bc: jne 0x51d8
0x51d8: call 0x14d0
0x51dd: xor eax,eax
0x51df: pop rbx
0x51e0: ret 
0x51e6: nop word ptr cs:[rax+rax]
0x51f0: mov rax,rsi
0x51f3: mul rdx
0x51f6: mov rsi,rax
0x51f9: seto al
0x51fc: test rsi,rsi
0x51ff: js 0x520b
0x5201: movzx eax,al
0x5204: test rax,rax
0x5207: jne 0x520b
0x5209: jmp 0x51b0
0x520b: sub rsp,0x8
0x520f: call 0x53a0
0x5214: nop 
0x5216: nop word ptr cs:[rax+rax]
0x5220: test rdi,rdi
0x5223: mov r9,rdx
0x5226: mov rcx,qword ptr [rsi]
0x5229: je 0x5260
0x522b: xor edx,edx
0x522d: movabsq rax,0x5555555555555554
0x5237: div r9
0x523a: cmp rax,rcx
0x523d: jbe 0x527b
0x523f: mov rax,rcx
0x5242: shr rax, 1
0x5245: lea rcx,[rax+rcx+0x1]
0x524a: mov qword ptr [rsi],rcx
0x524d: imul rcx,r9
0x5251: mov rsi,rcx
0x5254: jmp 0x51b0
0x5260: test rcx,rcx
0x5263: je 0x5288
0x5265: mov rax,rcx
0x5268: mul r9
0x526b: seto dl
0x526e: test rax,rax
0x5271: movzx edx,dl
0x5274: js 0x527b
0x5276: test rdx,rdx
0x5279: je 0x524a
0x527b: sub rsp,0x8
0x527f: call 0x53a0
0x5284: nop dword ptr [rax]
0x5288: xor edx,edx
0x528a: mov eax,0x80
0x528f: xor r8d,r8d
0x5292: div r9
0x5295: test rax,rax
0x5298: sete r8b
0x529c: lea rcx,[r8+rax]
0x52a0: jmp 0x5265
0x52b0: test rdi,rdi
0x52b3: mov rax,qword ptr [rsi]
0x52b6: je 0x52e0
0x52b8: movabsq rdx,0x5555555555555553
0x52c2: cmp rax,rdx
0x52c5: ja 0x52f1
0x52c7: mov rdx,rax
0x52ca: shr rdx, 1
0x52cd: lea rax,[rdx+rax+0x1]
0x52d2: mov qword ptr [rsi],rax
0x52d5: mov rsi,rax
0x52d8: jmp 0x51b0
0x52e0: test rax,rax
0x52e3: mov edx,0x80
0x52e8: cmove rax,rdx
0x52ec: test rax,rax
0x52ef: jns 0x52d2
0x52f1: sub rsp,0x8
0x52f5: call 0x53a0
0x52fa: nop word ptr [rax+rax]
0x5300: push rbx
0x5301: mov rbx,rdi
0x5304: call 0x5150
0x5309: mov rdx,rbx
0x530c: xor esi,esi
0x530e: mov rdi,rax
0x5311: pop rbx
0x5312: jmp 0x1630
0x5320: mov rax,rdi
0x5323: sub rsp,0x8
0x5327: mul rsi
0x532a: seto dl
0x532d: test rax,rax
0x5330: js 0x5349
0x5332: movzx edx,dl
0x5335: test rdx,rdx
0x5338: jne 0x5349
0x533a: call 0x1680
0x533f: test rax,rax
0x5342: je 0x5349
0x5344: add rsp,0x8
0x5348: ret 
0x5349: call 0x53a0
0x534e: nop 
0x5350: push rbp
0x5351: push rbx
0x5352: mov rbp,rdi
0x5355: mov rdi,rsi
0x5358: mov rbx,rsi
0x535b: sub rsp,0x8
0x535f: call 0x5150
0x5364: add rsp,0x8
0x5368: mov rdx,rbx
0x536b: mov rsi,rbp
0x536e: pop rbx
0x536f: pop rbp
0x5370: mov rdi,rax
0x5373: jmp 0x16a0
0x5380: push rbx
0x5381: mov rbx,rdi
0x5384: call 0x1590
0x5389: mov rdi,rbx
0x538c: lea rsi,[rax+0x1]
0x5390: pop rbx
0x5391: jmp 0x5350
0x53d0: call 0x14e0
0x53d5: nop word ptr cs:[rax+rax]
0x53df: nop 
0x5452: mov esi,dword ptr [r14]
0x5455: mov r8,rax
0x5458: mov eax,0x0
0x545d: lea rdx,[rip+0xefc]
0x5464: mov rcx,r13
0x5467: cmp esi,0x16
0x546a: cmove esi,eax
0x546d: test ebx,ebx
0x546f: mov eax,0x1
0x5474: cmove ebx,eax
0x5477: xor eax,eax
0x5479: mov edi,ebx
0x547b: call 0x1750
0x5480: mov rbp,qword ptr [rsp]
0x54db: call 0x15a0
0x55b6: cmp eax,0x22
0x55b9: mov ebp,0x1
0x55be: jne 0x55e8
0x55e2: nop word ptr [rax+rax]
0x5710: movsxd rdi,edi
0x5713: mov eax,ebp
0x5715: add rcx,rdi
0x5718: or eax,0x2
0x571b: mov qword ptr [r15],rcx
0x571e: cmp byte ptr [rcx],0x0
0x5721: mov qword ptr [r14],rbx
0x5724: cmovne ebp,eax
0x5727: jmp 0x55ed
0x5785: or ebp,r9d
0x5788: jmp 0x5710
0x581c: mov rax,rbx
0x581f: mul rsi
0x5822: mov rbx,rax
0x5825: jo 0x58b4
0x582b: sub r8d,0x1
0x582f: jne 0x581c
0x5831: jmp 0x5785
0x5890: call 0x15a0
0x5895: lea rcx,[rip+0x1484]
0x589c: lea rsi,[rip+0x135d]
0x58a3: lea rdi,[rip+0x1376]
0x58aa: mov edx,0x54
0x58af: call 0x1610
0x58b4: mov r9d,0x1
0x58ba: or rbx,-0x1
0x58be: jmp 0x582b
0x5a50: push r13
0x5a52: push r12
0x5a54: mov r13,rsi
0x5a57: push rbp
0x5a58: push rbx
0x5a59: mov rbx,rdi
0x5a5c: mov r12,rdx
0x5a5f: sub rsp,0x18
0x5a63: mov rax,qword ptr fs:0x28
0x5a6c: mov qword ptr [rsp+0x8],rax
0x5a71: xor eax,eax
0x5a73: lea rax,[rsp+0x4]
0x5a78: test rdi,rdi
0x5a7b: cmove rbx,rax
0x5a7f: mov rdi,rbx
0x5a82: call 0x15c0
0x5a87: cmp rax,-0x3
0x5a8b: mov rbp,rax
0x5a8e: jbe 0x5ab0
0x5a90: test r12,r12
0x5a93: je 0x5ab0
0x5a95: xor edi,edi
0x5a97: call 0x5b60
0x5a9c: test al,al
0x5a9e: jne 0x5ab0
0x5aa0: movzx eax,byte ptr [r13]
0x5aa5: mov ebp,0x1
0x5aaa: mov dword ptr [rbx],eax
0x5aac: nop dword ptr [rax]
0x5ab0: mov rdx,qword ptr [rsp+0x8]
0x5ab5: xor rdx,qword ptr fs:0x28
0x5abe: mov rax,rbp
0x5ac1: jne 0x5ace
0x5ac3: add rsp,0x18
0x5ac7: pop rbx
0x5ac8: pop rbp
0x5ac9: pop r12
0x5acb: pop r13
0x5acd: ret 
0x5ace: call 0x15a0
0x5ad3: nop word ptr cs:[rax+rax]
0x5add: nop dword ptr [rax]
0x5ae0: push r12
0x5ae2: push rbp
0x5ae3: mov rbp,rdi
0x5ae6: push rbx
0x5ae7: call 0x1520
0x5aec: mov ebx,dword ptr [rbp]
0x5aef: mov rdi,rbp
0x5af2: mov r12,rax
0x5af5: call 0x5930
0x5afa: and ebx,0x20
0x5afd: test ebx,ebx
0x5aff: jne 0x5b18
0x5b01: test eax,eax
0x5b03: je 0x5b0f
0x5b05: test r12,r12
0x5b08: mov eax,0xffffffff
0x5b0d: je 0x5b48
0x5b0f: pop rbx
0x5b10: pop rbp
0x5b11: pop r12
0x5b13: ret 
0x5b18: test eax,eax
0x5b1a: jne 0x5b38
0x5b1c: call 0x14f0
0x5b21: mov dword ptr [rax],0x0
0x5b27: mov eax,0xffffffff
0x5b2c: pop rbx
0x5b2d: pop rbp
0x5b2e: pop r12
0x5b30: ret 
0x5b38: pop rbx
0x5b39: mov eax,0xffffffff
0x5b3e: pop rbp
0x5b3f: pop r12
0x5b41: ret 
0x5b48: call 0x14f0
0x5b4d: cmp dword ptr [rax],0x9
0x5b50: pop rbx
0x5b51: pop rbp
0x5b52: pop r12
0x5b54: setne al
0x5b57: movzx eax,al
0x5b5a: neg eax
0x5b5c: ret 
0x5b60: sub rsp,0x8
0x5b64: xor esi,esi
0x5b66: call 0x1720
0x5b6b: mov rdx,rax
0x5b6e: mov eax,0x1
0x5b73: test rdx,rdx
0x5b76: je 0x5b95
0x5b78: lea rdi,[rip+0x11ac]
0x5b7f: mov ecx,0x2
0x5b84: mov rsi,rdx
0x5b87: rep cmpsb [rsi],es:[rdi]
0x5b89: seta cl
0x5b8c: sbb cl,0x0
0x5b8f: xor eax,eax
0x5b91: test cl,cl
0x5b93: jne 0x5ba0
0x5b95: add rsp,0x8
0x5b99: ret 
0x5ba0: lea rdi,[rip+0x1186]
0x5ba7: mov ecx,0x6
0x5bac: mov rsi,rdx
0x5baf: rep cmpsb [rsi],es:[rdi]
0x5bb1: seta al
0x5bb4: sbb al,0x0
0x5bb6: test al,al
0x5bb8: setne al
0x5bbb: add rsp,0x8
0x5bbf: ret 
0x5bc0: sub rsp,0x8
0x5bc4: mov edi,0xe
0x5bc9: call 0x16e0
0x5bce: test rax,rax
0x5bd1: je 0x5bf0
0x5bd3: cmp byte ptr [rax],0x0
0x5bd6: lea rdx,[rip+0x1156]
0x5bdd: cmove rax,rdx
0x5be1: add rsp,0x8
0x5be5: ret 
0x5bf0: lea rax,[rip+0x113c]
0x5bf7: add rsp,0x8
0x5bfb: ret 
0x5c00: push r15
0x5c02: push r14
0x5c04: mov r15,rdx
0x5c07: push r13
0x5c09: push r12
0x5c0b: lea r12,[rip+0x202efe]
0x5c12: push rbp
0x5c13: lea rbp,[rip+0x202efe]
0x5c1a: push rbx
0x5c1b: mov r13d,edi
0x5c1e: mov r14,rsi
0x5c21: sub rbp,r12
0x5c24: sub rsp,0x8
0x5c28: sar rbp,0x3
0x5c2c: call 0x14a8
0x5c31: test rbp,rbp
0x5c34: je 0x5c56
0x5c36: xor ebx,ebx
0x5c38: nop dword ptr [rax+rax]
0x5c40: mov rdx,r15
0x5c43: mov rsi,r14
0x5c46: mov edi,r13d
0x5c49: call qword ptr [r12+rbx*8]
0x5c4d: add rbx,0x1
0x5c51: cmp rbp,rbx
0x5c54: jne 0x5c40
0x5c56: add rsp,0x8
0x5c5a: pop rbx
0x5c5b: pop rbp
0x5c5c: pop r12
0x5c5e: pop r13
0x5c60: pop r14
0x5c62: pop r15
0x5c64: ret 
0x5c70: rep ret 
0x635f: jmp qword ptr [rip+0x25203a73]
