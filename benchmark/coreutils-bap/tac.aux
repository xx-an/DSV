0x1838: sub rsp,0x8
0x183c: mov rax,qword ptr [rip+0x21779d]
0x1843: test rax,rax
0x1846: je 0x184a
0x1848: call rax
0x184a: add rsp,0x8
0x184e: ret 
0x1856: jmp qword ptr [rip+0x21755c]
0x18d0: jmp qword ptr [rip+0x217522]
0x18e0: jmp qword ptr [rip+0x21751a]
0x1940: jmp qword ptr [rip+0x2174ea]
0x19e0: jmp qword ptr [rip+0x21749a]
0x1a50: jmp qword ptr [rip+0x217462]
0x1a80: jmp qword ptr [rip+0x21744a]
0x1ae0: jmp qword ptr [rip+0x21741a]
0x1b10: jmp qword ptr [rip+0x217402]
0x1c50: jmp qword ptr [rip+0x217362]
0x1c80: jmp qword ptr [rip+0x21736a]
0x1da1: nop dword ptr [rax]
0x204d: iretl 
0x2110: lea rsi,[rip+0x12541]
0x2117: mov rbx,rax
0x211a: mov edx,0x5
0x211f: xor edi,edi
0x2121: call 0x1960
0x2126: mov r13,rax
0x2129: call 0x18a0
0x212e: mov esi,dword ptr [rax]
0x2130: mov rcx,rbx
0x2133: mov rdx,r13
0x2136: xor edi,edi
0x2138: xor eax,eax
0x213a: call 0x1ba0
0x2169: lea rsi,[rip+0x12112]
0x2170: mov rbp,rax
0x2173: mov edx,0x5
0x2178: xor edi,edi
0x217a: call 0x1960
0x217f: mov rbx,rax
0x2182: call 0x18a0
0x2187: mov esi,dword ptr [rax]
0x2189: mov rdx,rbx
0x218c: mov rcx,rbp
0x218f: xor edi,edi
0x2191: xor eax,eax
0x2193: xor ebx,ebx
0x2195: call 0x1ba0
0x219a: jmp 0x20b5
0x21bd: mov edx,0x5
0x21c2: mov rbp,rax
0x21c5: lea rsi,[rip+0x11f88]
0x21cc: jmp 0x2178
0x21dd: mov edx,0x5
0x21e2: mov rbx,rax
0x21e5: lea rsi,[rip+0x11f68]
0x21ec: jmp 0x211f
0x2202: mov edx,0x5
0x2207: mov rbx,rax
0x220a: lea rsi,[rip+0x120b7]
0x2211: jmp 0x211f
0x22c7: mov byte ptr [rsp+0xf],0x0
0x22cc: jmp 0x20e5
0x230e: lea rsi,[rip+0x1231b]
0x2315: mov edx,0x5
0x231a: xor edi,edi
0x231c: mov rbx,rax
0x231f: call 0x1960
0x2324: mov r13,rax
0x2327: call 0x18a0
0x232c: mov esi,dword ptr [rax]
0x232e: mov rcx,rbx
0x2331: mov rdx,r13
0x2334: xor edi,edi
0x2336: xor eax,eax
0x2338: call 0x1ba0
0x233d: mov rdi,qword ptr [rip+0x218dac]
0x2344: xor ebx,ebx
0x2346: call 0x1880
0x234b: mov qword ptr [rip+0x218d9a],0x0
0x2356: jmp 0x20ac
0x2368: lea rsi,[rip+0x11f3b]
0x236f: xor edi,edi
0x2371: mov edx,0x5
0x2376: mov rbx,rax
0x2379: call 0x1960
0x237e: mov qword ptr [rsp+0x18],rax
0x2383: call 0x18a0
0x2388: mov rdx,qword ptr [rsp+0x18]
0x238d: mov esi,dword ptr [rax]
0x238f: mov rcx,rbx
0x2392: xor edi,edi
0x2394: xor eax,eax
0x2396: call 0x1ba0
0x239b: mov edi,r13d
0x239e: call 0x1a20
0x23a3: mov rdi,qword ptr [rip+0x218d46]
0x23aa: call 0x18b0
0x23af: jmp 0x233d
0x2411: nop word ptr cs:[rax+rax]
0x241b: nop dword ptr [rax+rax]
0x244a: hlt 
0x244b: nop dword ptr [rax+rax]
0x2450: lea rdi,[rip+0x216c29]
0x2457: push rbp
0x2458: lea rax,[rip+0x216c21]
0x245f: cmp rax,rdi
0x2462: mov rbp,rsp
0x2465: je 0x2480
0x2467: mov rax,qword ptr [rip+0x216b62]
0x246e: test rax,rax
0x2471: je 0x2480
0x2473: pop rbp
0x2474: jmp rax
0x2480: pop rbp
0x2481: ret 
0x2490: lea rdi,[rip+0x216be9]
0x2497: lea rsi,[rip+0x216be2]
0x249e: push rbp
0x249f: sub rsi,rdi
0x24a2: mov rbp,rsp
0x24a5: sar rsi,0x3
0x24a9: mov rax,rsi
0x24ac: shr rax,0x3f
0x24b0: add rsi,rax
0x24b3: sar rsi, 1
0x24b6: je 0x24d0
0x24b8: mov rax,qword ptr [rip+0x216b29]
0x24bf: test rax,rax
0x24c2: je 0x24d0
0x24c4: pop rbp
0x24c5: jmp rax
0x24d0: pop rbp
0x24d1: ret 
0x24f1: push rbp
0x24f2: mov rbp,rsp
0x24f5: je 0x2503
0x24f7: mov rdi,qword ptr [rip+0x216b0a]
0x24fe: call 0x1c80
0x2503: call 0x2450
0x2508: mov byte ptr [rip+0x216bb9],0x1
0x250f: pop rbp
0x2510: ret 
0x2520: push rbp
0x2521: mov rbp,rsp
0x2524: pop rbp
0x2525: jmp 0x2490
0x26e8: mov edx,0x5
0x26ed: mov rsi,r12
0x26f0: xor edi,edi
0x26f2: mov rbx,rax
0x26f5: call 0x1960
0x26fa: mov r15,rax
0x26fd: call 0x18a0
0x2702: mov esi,dword ptr [rax]
0x2704: mov rcx,rbx
0x2707: mov rdx,r15
0x270a: xor edi,edi
0x270c: xor eax,eax
0x270e: call 0x1ba0
0x2713: mov rbx,qword ptr [rip+0x218b4e]
0x271a: jmp 0x2690
0x2a59: lea rsi,[rip+0x116e4]
0x2a60: xor edi,edi
0x2a62: mov edx,0x5
0x2a67: mov r12,rax
0x2a6a: call 0x1960
0x2a6f: mov r15,rax
0x2a72: call 0x18a0
0x2a77: mov esi,dword ptr [rax]
0x2a79: mov rcx,r12
0x2a7c: mov rdx,r15
0x2a7f: xor edi,edi
0x2a81: xor eax,eax
0x2a83: call 0x1ba0
0x2a88: jmp 0x28bf
0x2a9e: lea rsi,[rip+0x116af]
0x2aa5: mov edx,0x5
0x2aaa: xor edi,edi
0x2aac: mov rbp,rax
0x2aaf: call 0x1960
0x2ab4: mov rbx,rax
0x2ab7: call 0x18a0
0x2abc: mov esi,dword ptr [rax]
0x2abe: mov rcx,rbp
0x2ac1: mov rdx,rbx
0x2ac4: xor eax,eax
0x2ac6: xor edi,edi
0x2ac8: call 0x1ba0
0x2acd: add rsp,0x38
0x2ad1: xor eax,eax
0x2ad3: pop rbx
0x2ad4: pop rbp
0x2ad5: pop r12
0x2ad7: pop r13
0x2ad9: pop r14
0x2adb: pop r15
0x2add: ret 
0x2b40: lea rsi,[rip+0x115fd]
0x2b47: mov edx,0x5
0x2b4c: xor edi,edi
0x2b4e: mov rbx,rax
0x2b51: call 0x1960
0x2b56: mov r12,rax
0x2b59: call 0x18a0
0x2b5e: mov esi,dword ptr [rax]
0x2b60: mov rcx,rbx
0x2b63: mov rdx,r12
0x2b66: xor edi,edi
0x2b68: xor eax,eax
0x2b6a: call 0x1ba0
0x2b6f: mov rbx,qword ptr [rip+0x2186f2]
0x2b76: jmp 0x2686
0x2f90: mov qword ptr [rip+0x218309],rdi
0x2f97: ret 
0x2fa0: mov byte ptr [rip+0x2182f1],dil
0x2fa7: ret 
0x2fb0: push rbp
0x2fb1: push rbx
0x2fb2: sub rsp,0x8
0x2fb6: mov rdi,qword ptr [rip+0x2160cb]
0x2fbd: call 0x13b20
0x2fc2: test eax,eax
0x2fc4: je 0x2fdc
0x2fc6: call 0x18a0
0x2fcb: cmp byte ptr [rip+0x2182c6],0x0
0x2fd2: mov rbx,rax
0x2fd5: je 0x2ff3
0x2fd7: cmp dword ptr [rax],0x20
0x2fda: jne 0x2ff3
0x2fdc: mov rdi,qword ptr [rip+0x2160dd]
0x2fe3: call 0x13b20
0x2fe8: test eax,eax
0x2fea: jne 0x3032
0x2fec: add rsp,0x8
0x2ff0: pop rbx
0x2ff1: pop rbp
0x2ff2: ret 
0x2ff3: lea rsi,[rip+0x112d2]
0x2ffa: xor edi,edi
0x2ffc: mov edx,0x5
0x3001: call 0x1960
0x3006: mov rdi,qword ptr [rip+0x218293]
0x300d: mov rbp,rax
0x3010: test rdi,rdi
0x3013: je 0x303d
0x3015: call 0x4c70
0x301a: mov esi,dword ptr [rbx]
0x301c: lea rdx,[rip+0x11659]
0x3023: mov rcx,rax
0x3026: mov r8,rbp
0x3029: xor edi,edi
0x302b: xor eax,eax
0x302d: call 0x1ba0
0x3032: mov edi,dword ptr [rip+0x215fe0]
0x3038: call 0x18d0
0x303d: mov esi,dword ptr [rbx]
0x303f: lea rdx,[rip+0x1163a]
0x3046: mov rcx,rax
0x3049: xor edi,edi
0x304b: xor eax,eax
0x304d: call 0x1ba0
0x3052: jmp 0x3032
0x3125: mov qword ptr [r15],rdi
0x31ff: nop 
0x3200: push rbp
0x3201: push rbx
0x3202: mov rbp,rdi
0x3205: mov ebx,esi
0x3207: sub rsp,0x8
0x320b: call 0x13d10
0x3210: movzx edx,byte ptr [rax]
0x3213: and edx,-0x21
0x3216: cmp dl,0x55
0x3219: je 0x3290
0x321b: cmp dl,0x47
0x321e: je 0x3240
0x3220: lea rax,[rip+0x114b4]
0x3227: lea rdx,[rip+0x114af]
0x322e: cmp ebx,0x9
0x3231: cmovne rax,rdx
0x3235: add rsp,0x8
0x3239: pop rbx
0x323a: pop rbp
0x323b: ret 
0x3240: movzx edx,byte ptr [rax+0x1]
0x3244: and edx,-0x21
0x3247: cmp dl,0x42
0x324a: jne 0x3220
0x324c: cmp byte ptr [rax+0x2],0x31
0x3250: jne 0x3220
0x3252: cmp byte ptr [rax+0x3],0x38
0x3256: jne 0x3220
0x3258: cmp byte ptr [rax+0x4],0x30
0x325c: jne 0x3220
0x325e: cmp byte ptr [rax+0x5],0x33
0x3262: jne 0x3220
0x3264: cmp byte ptr [rax+0x6],0x30
0x3268: jne 0x3220
0x326a: cmp byte ptr [rax+0x7],0x0
0x326e: jne 0x3220
0x3270: cmp byte ptr [rbp],0x60
0x3274: lea rax,[rip+0x11459]
0x327b: lea rdx,[rip+0x11456]
0x3282: cmovne rax,rdx
0x3286: add rsp,0x8
0x328a: pop rbx
0x328b: pop rbp
0x328c: ret 
0x3290: movzx edx,byte ptr [rax+0x1]
0x3294: and edx,-0x21
0x3297: cmp dl,0x54
0x329a: jne 0x3220
0x329c: movzx edx,byte ptr [rax+0x2]
0x32a0: and edx,-0x21
0x32a3: cmp dl,0x46
0x32a6: jne 0x3220
0x32ac: cmp byte ptr [rax+0x3],0x2d
0x32b0: jne 0x3220
0x32b6: cmp byte ptr [rax+0x4],0x38
0x32ba: jne 0x3220
0x32c0: cmp byte ptr [rax+0x5],0x0
0x32c4: jne 0x3220
0x32ca: cmp byte ptr [rbp],0x60
0x32ce: lea rax,[rip+0x113f7]
0x32d5: lea rdx,[rip+0x113f4]
0x32dc: cmovne rax,rdx
0x32e0: add rsp,0x8
0x32e4: pop rbx
0x32e5: pop rbp
0x32e6: ret 
0x33c3: xor r11d,r11d
0x33c6: mov rax,rbp
0x33c9: mov r8d,r12d
0x33cc: mov rbp,r11
0x33cf: mov r11,rax
0x33d2: nop word ptr [rax+rax]
0x33d8: cmp r11,rbp
0x33db: setne r12b
0x33df: cmp r11,-0x1
0x33e3: jne 0x33f2
0x33e5: mov rax,qword ptr [rsp+0x10]
0x33ea: cmp byte ptr [rax+rbp],0x0
0x33ee: setne r12b
0x33f2: test r12b,r12b
0x33f5: je 0x3a50
0x33fb: cmp dword ptr [rsp+0x8],0x2
0x3400: mov rdi,qword ptr [rsp+0x10]
0x3405: lea r9,[rdi+rbp]
0x3409: setne al
0x340c: and al,byte ptr [rsp+0xd]
0x3410: mov r10d,eax
0x3413: je 0x34c0
0x3419: mov rax,qword ptr [rsp+0x18]
0x341e: test rax,rax
0x3421: je 0x3850
0x3427: cmp r11,-0x1
0x342b: lea rbx,[rbp+rax]
0x3430: jne 0x3460
0x3432: cmp rax,0x1
0x3436: jbe 0x3460
0x3438: mov byte ptr [rsp+0x38],r8b
0x343d: mov byte ptr [rsp+0x30],r10b
0x3442: mov qword ptr [rsp+0x28],r9
0x3447: call 0x1980
0x344c: movzx r8d,byte ptr [rsp+0x38]
0x3452: movzx r10d,byte ptr [rsp+0x30]
0x3458: mov r11,rax
0x345b: mov r9,qword ptr [rsp+0x28]
0x3460: cmp rbx,r11
0x3463: mov byte ptr [rsp+0x28],r10b
0x3468: ja 0x3a20
0x346e: mov rdx,qword ptr [rsp+0x18]
0x3473: mov rsi,qword ptr [rsp+0x48]
0x3478: mov rdi,r9
0x347b: mov qword ptr [rsp+0x40],r11
0x3480: mov byte ptr [rsp+0x38],r8b
0x3485: mov qword ptr [rsp+0x30],r9
0x348a: call 0x1a40
0x348f: test eax,eax
0x3491: mov r9,qword ptr [rsp+0x30]
0x3496: movzx r8d,byte ptr [rsp+0x38]
0x349c: mov r11,qword ptr [rsp+0x40]
0x34a1: jne 0x3a20
0x34a7: cmp byte ptr [rsp+0xf],0x0
0x34ac: movzx r10d,byte ptr [rsp+0x28]
0x34b2: jne 0x4435
0x34b8: nop dword ptr [rax+rax]
0x34c0: movzx ebx,byte ptr [r9]
0x34c4: cmp bl,0x7e
0x34c7: ja 0x37e8
0x34cd: lea rcx,[rip+0x11298]
0x34d4: movzx edx,bl
0x34d7: movsxd rax,dword ptr [rcx+rdx*4]
0x34db: add rax,rcx
0x34de: jmp rax
0x3518: cmp byte ptr [rsp+0xd],0x1
0x351d: jne 0x3632
0x3523: test dl,dl
0x3525: jne 0x3632
0x352b: mov rsi,qword ptr [rsp+0x20]
0x3530: test rsi,rsi
0x3533: je 0x3549
0x3535: mov edx,ebx
0x3537: shr dl,0x5
0x353a: movzx edx,dl
0x353d: mov edx,dword ptr [rsi+rdx*4]
0x3540: btl edx,ebx
0x3543: jb 0x3693
0x3549: test r10b,r10b
0x354c: jne 0x3693
0x3552: xor eax,0x1
0x3555: add rbp,0x1
0x3559: and eax,r8d
0x355c: test al,al
0x355e: je 0x3580
0x3560: cmp r13,r15
0x3563: jbe 0x356a
0x3565: mov byte ptr [r14+r15],0x27
0x356a: lea rax,[r15+0x1]
0x356e: cmp r13,rax
0x3571: jbe 0x3579
0x3573: mov byte ptr [r14+r15+0x1],0x27
0x3579: add r15,0x2
0x357d: xor r8d,r8d
0x3580: cmp r15,r13
0x3583: jae 0x3589
0x3585: mov byte ptr [r14+r15],bl
0x3589: movzx edi,byte ptr [rsp+0xe]
0x358e: add r15,0x1
0x3592: mov eax,0x0
0x3597: test r12b,r12b
0x359a: cmove edi,eax
0x359d: mov byte ptr [rsp+0xe],dil
0x35a2: jmp 0x33d8
0x3632: cmp byte ptr [rsp+0xf],0x0
0x3637: jne 0x352b
0x363d: jmp 0x3549
0x3693: cmp dword ptr [rsp+0x8],0x2
0x3698: sete dl
0x369b: cmp byte ptr [rsp+0xf],0x0
0x36a0: mov eax,edx
0x36a2: jne 0x3ef8
0x36a8: mov eax,r8d
0x36ab: xor eax,0x1
0x36ae: and al,dl
0x36b0: je 0x36e1
0x36b2: cmp r13,r15
0x36b5: jbe 0x36bc
0x36b7: mov byte ptr [r14+r15],0x27
0x36bc: lea rdx,[r15+0x1]
0x36c0: cmp r13,rdx
0x36c3: jbe 0x36cb
0x36c5: mov byte ptr [r14+r15+0x1],0x24
0x36cb: lea rdx,[r15+0x2]
0x36cf: cmp r13,rdx
0x36d2: jbe 0x36da
0x36d4: mov byte ptr [r14+r15+0x2],0x27
0x36da: add r15,0x3
0x36de: mov r8d,eax
0x36e1: cmp r13,r15
0x36e4: jbe 0x36eb
0x36e6: mov byte ptr [r14+r15],0x5c
0x36eb: add r15,0x1
0x36ef: add rbp,0x1
0x36f3: jmp 0x3580
0x37e0: xor r10d,r10d
0x37e3: nop dword ptr [rax+rax]
0x37e8: cmp qword ptr [rsp+0x58],0x1
0x37ee: jne 0x3b98
0x37f4: mov qword ptr [rsp+0x38],r11
0x37f9: mov byte ptr [rsp+0x30],r8b
0x37fe: mov byte ptr [rsp+0x28],r10b
0x3803: call 0x1c70
0x3808: mov rcx,qword ptr [rax]
0x380b: movzx edx,bl
0x380e: movzx r10d,byte ptr [rsp+0x28]
0x3814: movzx r8d,byte ptr [rsp+0x30]
0x381a: mov r11,qword ptr [rsp+0x38]
0x381f: mov edi,0x1
0x3824: movzx eax,word ptr [rcx+rdx*2]
0x3828: and ax,0x4000
0x382c: setne r12b
0x3830: sete al
0x3833: and al,byte ptr [rsp+0xd]
0x3837: test al,al
0x3839: jne 0x41d1
0x383f: cmp dword ptr [rsp+0x8],0x2
0x3844: sete dl
0x3847: jmp 0x3518
0x3850: movzx ebx,byte ptr [r9]
0x3854: cmp bl,0x7e
0x3857: ja 0x37e0
0x3859: lea rcx,[rip+0x11108]
0x3860: movzx edx,bl
0x3863: movsxd rax,dword ptr [rcx+rdx*4]
0x3867: add rax,rcx
0x386a: jmp rax
0x3a20: xor r10d,r10d
0x3a23: jmp 0x34c0
0x3a50: cmp dword ptr [rsp+0x8],0x2
0x3a55: movzx ebx,byte ptr [rsp+0xf]
0x3a5a: mov r12d,r8d
0x3a5d: mov rbp,r11
0x3a60: sete dl
0x3a63: mov eax,ebx
0x3a65: test r15,r15
0x3a68: sete cl
0x3a6b: and eax,edx
0x3a6d: and al,cl
0x3a6f: jne 0x44d6
0x3a75: mov eax,ebx
0x3a77: xor eax,0x1
0x3a7a: and dl,al
0x3a7c: je 0x43ec
0x3a82: cmp byte ptr [rsp+0x7c],0x0
0x3a87: je 0x43ea
0x3a8d: cmp byte ptr [rsp+0xe],0x0
0x3a92: jne 0x448d
0x3a98: test r13,r13
0x3a9b: sete al
0x3a9e: cmp qword ptr [rsp+0x50],0x0
0x3aa4: setne dl
0x3aa7: and al,dl
0x3aa9: je 0x44cc
0x3aaf: mov r13,qword ptr [rsp+0x50]
0x3ab4: lea rbx,[rip+0x10c22]
0x3abb: mov byte ptr [r14],0x27
0x3abf: mov dword ptr [rsp+0x8],0x2
0x3ac7: mov r15d,0x1
0x3acd: mov qword ptr [rsp+0x18],0x1
0x3ad6: mov byte ptr [rsp+0xf],0x0
0x3adb: mov qword ptr [rsp+0x48],rbx
0x3ae0: mov byte ptr [rsp+0x7c],al
0x3ae4: jmp 0x33c3
0x3b98: lea rax,[rsp+0xa0]
0x3ba0: cmp r11,-0x1
0x3ba4: mov qword ptr [rsp+0xa0],0x0
0x3bb0: mov qword ptr [rsp+0x28],rax
0x3bb5: jne 0x3be4
0x3bb7: mov rdi,qword ptr [rsp+0x10]
0x3bbc: mov byte ptr [rsp+0x40],r8b
0x3bc1: mov byte ptr [rsp+0x38],r10b
0x3bc6: mov qword ptr [rsp+0x30],r9
0x3bcb: call 0x1980
0x3bd0: movzx r8d,byte ptr [rsp+0x40]
0x3bd6: movzx r10d,byte ptr [rsp+0x38]
0x3bdc: mov r11,rax
0x3bdf: mov r9,qword ptr [rsp+0x30]
0x3be4: lea rax,[rsp+0x9c]
0x3bec: xor ecx,ecx
0x3bee: mov byte ptr [rsp+0x7e],bl
0x3bf2: mov byte ptr [rsp+0x7d],r8b
0x3bf7: mov rbx,rcx
0x3bfa: mov qword ptr [rsp+0x88],r9
0x3c02: mov qword ptr [rsp+0x38],rax
0x3c07: mov byte ptr [rsp+0x7f],r10b
0x3c0c: mov qword ptr [rsp+0x80],r15
0x3c14: mov qword ptr [rsp+0x40],r14
0x3c19: mov qword ptr [rsp+0x70],r13
0x3c1e: mov qword ptr [rsp+0x30],r11
0x3c23: mov rax,qword ptr [rsp+0x10]
0x3c28: lea r14,[rbp+rbx]
0x3c2d: mov rdx,qword ptr [rsp+0x30]
0x3c32: mov rcx,qword ptr [rsp+0x28]
0x3c37: mov rdi,qword ptr [rsp+0x38]
0x3c3c: lea r13,[rax+r14]
0x3c40: sub rdx,r14
0x3c43: mov rsi,r13
0x3c46: call 0x5880
0x3c4b: test rax,rax
0x3c4e: mov r15,rax
0x3c51: je 0x3ca1
0x3c53: cmp rax,-0x1
0x3c57: je 0x4275
0x3c5d: cmp rax,-0x2
0x3c61: je 0x4201
0x3c67: cmp dword ptr [rsp+0x8],0x2
0x3c6c: sete al
0x3c6f: and al,byte ptr [rsp+0xf]
0x3c73: jne 0x3e10
0x3c79: mov edi,dword ptr [rsp+0x9c]
0x3c80: call 0x1c50
0x3c85: mov rdi,qword ptr [rsp+0x28]
0x3c8a: test eax,eax
0x3c8c: mov eax,0x0
0x3c91: cmove r12d,eax
0x3c95: add rbx,r15
0x3c98: call 0x1c40
0x3c9d: test eax,eax
0x3c9f: je 0x3c23
0x3ca1: mov edx,r12d
0x3ca4: mov rdi,rbx
0x3ca7: movzx r8d,byte ptr [rsp+0x7d]
0x3cad: xor edx,0x1
0x3cb0: movzx ebx,byte ptr [rsp+0x7e]
0x3cb5: movzx r10d,byte ptr [rsp+0x7f]
0x3cbb: and dl,byte ptr [rsp+0xd]
0x3cbf: mov r15,qword ptr [rsp+0x80]
0x3cc7: mov r14,qword ptr [rsp+0x40]
0x3ccc: mov r13,qword ptr [rsp+0x70]
0x3cd1: mov r11,qword ptr [rsp+0x30]
0x3cd6: cmp rdi,0x1
0x3cda: jbe 0x42db
0x3ce0: mov rcx,rdi
0x3ce3: xor esi,esi
0x3ce5: movzx r9d,byte ptr [rsp+0xf]
0x3ceb: add rcx,rbp
0x3cee: mov rdi,qword ptr [rsp+0x10]
0x3cf3: jmp 0x3dae
0x3d00: cmp dword ptr [rsp+0x8],0x2
0x3d05: sete al
0x3d08: test r9b,r9b
0x3d0b: jne 0x41c0
0x3d11: mov esi,r8d
0x3d14: xor esi,0x1
0x3d17: and al,sil
0x3d1a: je 0x3d4b
0x3d1c: cmp r13,r15
0x3d1f: jbe 0x3d26
0x3d21: mov byte ptr [r14+r15],0x27
0x3d26: lea rsi,[r15+0x1]
0x3d2a: cmp r13,rsi
0x3d2d: jbe 0x3d35
0x3d2f: mov byte ptr [r14+r15+0x1],0x24
0x3d35: lea rsi,[r15+0x2]
0x3d39: cmp r13,rsi
0x3d3c: jbe 0x3d44
0x3d3e: mov byte ptr [r14+r15+0x2],0x27
0x3d44: add r15,0x3
0x3d48: mov r8d,eax
0x3d4b: cmp r13,r15
0x3d4e: jbe 0x3d55
0x3d50: mov byte ptr [r14+r15],0x5c
0x3d55: lea rax,[r15+0x1]
0x3d59: cmp r13,rax
0x3d5c: jbe 0x3d6b
0x3d5e: mov eax,ebx
0x3d60: shr al,0x6
0x3d63: add eax,0x30
0x3d66: mov byte ptr [r14+r15+0x1],al
0x3d6b: lea rax,[r15+0x2]
0x3d6f: cmp r13,rax
0x3d72: jbe 0x3d84
0x3d74: mov eax,ebx
0x3d76: shr al,0x3
0x3d79: and eax,0x7
0x3d7c: add eax,0x30
0x3d7f: mov byte ptr [r14+r15+0x2],al
0x3d84: and ebx,0x7
0x3d87: add rbp,0x1
0x3d8b: add r15,0x3
0x3d8f: add ebx,0x30
0x3d92: cmp rbp,rcx
0x3d95: jae 0x3580
0x3d9b: mov esi,edx
0x3d9d: cmp r13,r15
0x3da0: jbe 0x3da6
0x3da2: mov byte ptr [r14+r15],bl
0x3da6: movzx ebx,byte ptr [rdi+rbp]
0x3daa: add r15,0x1
0x3dae: test dl,dl
0x3db0: jne 0x3d00
0x3db6: mov eax,esi
0x3db8: xor eax,0x1
0x3dbb: and eax,r8d
0x3dbe: test r10b,r10b
0x3dc1: je 0x3dd1
0x3dc3: cmp r13,r15
0x3dc6: jbe 0x3dcd
0x3dc8: mov byte ptr [r14+r15],0x5c
0x3dcd: add r15,0x1
0x3dd1: add rbp,0x1
0x3dd5: cmp rbp,rcx
0x3dd8: jae 0x355c
0x3dde: test al,al
0x3de0: je 0x41de
0x3de6: cmp r13,r15
0x3de9: jbe 0x3df0
0x3deb: mov byte ptr [r14+r15],0x27
0x3df0: lea rax,[r15+0x1]
0x3df4: cmp r13,rax
0x3df7: jbe 0x3dff
0x3df9: mov byte ptr [r14+r15+0x1],0x27
0x3dff: add r15,0x2
0x3e03: xor r10d,r10d
0x3e06: xor r8d,r8d
0x3e09: jmp 0x3d9d
0x3e10: cmp r15,0x1
0x3e14: je 0x3c79
0x3e1a: mov rdi,qword ptr [rsp+0x10]
0x3e1f: lea rcx,[rdi+r15]
0x3e23: lea rdx,[rdi+r14+0x1]
0x3e28: lea r8,[rcx+r14]
0x3e2c: jmp 0x3e3d
0x3e30: add rdx,0x1
0x3e34: cmp r8,rdx
0x3e37: je 0x3c79
0x3e3d: movzx ecx,byte ptr [rdx]
0x3e40: sub ecx,0x5b
0x3e43: cmp cl,0x21
0x3e46: ja 0x3e30
0x3e48: mov esi,0x1
0x3e4d: shl rsi,cl
0x3e50: mov rcx,rsi
0x3e53: movabsq rsi,0x20000002b
0x3e5d: test rcx,rsi
0x3e60: je 0x3e30
0x3e62: mov r14,qword ptr [rsp+0x40]
0x3e67: mov r13,qword ptr [rsp+0x70]
0x3e6c: mov rbp,qword ptr [rsp+0x30]
0x3e71: mov dword ptr [rsp+0x8],0x2
0x3e79: cmp byte ptr [rsp+0xd],0x0
0x3e7e: je 0x3e90
0x3e80: test al,al
0x3e82: mov eax,0x4
0x3e87: cmove eax,dword ptr [rsp+0x8]
0x3e8c: mov dword ptr [rsp+0x8],eax
0x3e90: sub rsp,0x8
0x3e94: mov rcx,rbp
0x3e97: mov rsi,r13
0x3e9a: push qword ptr [rsp+0x68]
0x3e9e: push qword ptr [rsp+0x78]
0x3ea2: mov rdi,r14
0x3ea5: push 0x0
0x3ea7: mov r9d,dword ptr [rsp+0x98]
0x3eaf: mov r8d,dword ptr [rsp+0x28]
0x3eb4: mov rdx,qword ptr [rsp+0x30]
0x3eb9: and r9d,-0x3
0x3ebd: call 0x32f0
0x3ec2: add rsp,0x20
0x3ec6: mov r15,rax
0x3ec9: mov rbx,qword ptr [rsp+0xa8]
0x3ed1: xor rbx,qword ptr fs:0x28
0x3eda: mov rax,r15
0x3edd: jne 0x44e3
0x3ee3: add rsp,0xb8
0x3eea: pop rbx
0x3eeb: pop rbp
0x3eec: pop r12
0x3eee: pop r13
0x3ef0: pop r14
0x3ef2: pop r15
0x3ef4: ret 
0x3ef8: mov rbp,r11
0x3efb: jmp 0x3e79
0x3f61: test r13,r13
0x3f64: jne 0x44fa
0x3f6a: lea rax,[rip+0x1076c]
0x3f71: mov qword ptr [rsp+0x50],0x0
0x3f7a: mov byte ptr [rsp+0xe],0x1
0x3f7f: mov byte ptr [rsp+0x7c],0x0
0x3f84: xor r12d,r12d
0x3f87: mov byte ptr [rsp+0xf],0x0
0x3f8c: mov qword ptr [rsp+0x18],0x1
0x3f95: mov qword ptr [rsp+0x48],rax
0x3f9a: mov r15d,0x1
0x3fa0: mov dword ptr [rsp+0x8],0x2
0x3fa8: jmp 0x33c3
0x41c0: movzx ebx,byte ptr [rsp+0xf]
0x41c5: mov rbp,r11
0x41c8: mov byte ptr [rsp+0xd],bl
0x41cc: jmp 0x3e79
0x41d1: movzx edx,byte ptr [rsp+0xd]
0x41d6: xor r12d,r12d
0x41d9: jmp 0x3ce0
0x41de: xor r10d,r10d
0x41e1: jmp 0x3d9d
0x4201: mov r11,qword ptr [rsp+0x30]
0x4206: mov rsi,r14
0x4209: mov rcx,r13
0x420c: mov rax,rbx
0x420f: mov rdi,rbx
0x4212: movzx r8d,byte ptr [rsp+0x7d]
0x4218: movzx ebx,byte ptr [rsp+0x7e]
0x421d: mov r9,qword ptr [rsp+0x88]
0x4225: cmp rsi,r11
0x4228: movzx r10d,byte ptr [rsp+0x7f]
0x422e: mov r15,qword ptr [rsp+0x80]
0x4236: mov r14,qword ptr [rsp+0x40]
0x423b: mov r13,qword ptr [rsp+0x70]
0x4240: jae 0x4268
0x4242: cmp byte ptr [rcx],0x0
0x4245: jne 0x4257
0x4247: jmp 0x4268
0x4250: cmp byte ptr [r9+rax],0x0
0x4255: je 0x4265
0x4257: add rax,0x1
0x425b: lea rdx,[rbp+rax]
0x4260: cmp r11,rdx
0x4263: ja 0x4250
0x4265: mov rdi,rax
0x4268: movzx edx,byte ptr [rsp+0xd]
0x426d: xor r12d,r12d
0x4270: jmp 0x3cd6
0x4275: mov rdi,rbx
0x4278: movzx r8d,byte ptr [rsp+0x7d]
0x427e: movzx ebx,byte ptr [rsp+0x7e]
0x4283: movzx r10d,byte ptr [rsp+0x7f]
0x4289: mov r15,qword ptr [rsp+0x80]
0x4291: xor r12d,r12d
0x4294: mov r14,qword ptr [rsp+0x40]
0x4299: mov r13,qword ptr [rsp+0x70]
0x429e: mov r11,qword ptr [rsp+0x30]
0x42a3: movzx edx,byte ptr [rsp+0xd]
0x42a8: jmp 0x3cd6
0x42db: mov eax,edx
0x42dd: jmp 0x3837
0x43ea: mov eax,edx
0x43ec: mov rbx,qword ptr [rsp+0x48]
0x43f1: test rbx,rbx
0x43f4: je 0x4422
0x43f6: test al,al
0x43f8: je 0x4422
0x43fa: movzx ecx,byte ptr [rbx]
0x43fd: mov rax,rbx
0x4400: test cl,cl
0x4402: je 0x4422
0x4404: mov rdx,r15
0x4407: sub rax,r15
0x440a: cmp r13,rdx
0x440d: jbe 0x4413
0x440f: mov byte ptr [r14+rdx],cl
0x4413: add rdx,0x1
0x4417: movzx ecx,byte ptr [rax+rdx]
0x441b: test cl,cl
0x441d: jne 0x440a
0x441f: mov r15,rdx
0x4422: cmp r13,r15
0x4425: jbe 0x3ec9
0x442b: mov byte ptr [r14+r15],0x0
0x4430: jmp 0x3ec9
0x4435: cmp dword ptr [rsp+0x8],0x2
0x443a: movzx ebx,byte ptr [rsp+0xf]
0x443f: mov rbp,r11
0x4442: sete al
0x4445: mov byte ptr [rsp+0xd],bl
0x4449: jmp 0x3e79
0x448d: sub rsp,0x8
0x4491: mov r8d,0x5
0x4497: mov rcx,r11
0x449a: push qword ptr [rsp+0x68]
0x449e: push qword ptr [rsp+0x78]
0x44a2: mov rdi,r14
0x44a5: push qword ptr [rsp+0x38]
0x44a9: mov r9d,dword ptr [rsp+0x98]
0x44b1: mov rdx,qword ptr [rsp+0x30]
0x44b6: mov rsi,qword ptr [rsp+0x70]
0x44bb: call 0x32f0
0x44c0: add rsp,0x20
0x44c4: mov r15,rax
0x44c7: jmp 0x3ec9
0x44cc: movzx eax,byte ptr [rsp+0x7c]
0x44d1: jmp 0x43ec
0x44d6: mov dword ptr [rsp+0x8],0x2
0x44de: jmp 0x3e79
0x44e3: call 0x1990
0x44e8: mov byte ptr [rsp+0xd],0x0
0x44ed: jmp 0x3f61
0x44fa: mov byte ptr [rsp+0xe],0x1
0x44ff: xor eax,eax
0x4501: xor r12d,r12d
0x4504: mov qword ptr [rsp+0x50],0x0
0x450d: jmp 0x3ab4
0x4524: nop 
0x4526: nop word ptr cs:[rax+rax]
0x461c: add rsp,0x20
0x4620: mov r11,qword ptr [rsp+0x10]
0x4625: cmp r11,rax
0x4628: ja 0x4691
0x462a: lea rsi,[rax+0x1]
0x462e: lea rax,[rip+0x216c8b]
0x4635: cmp r12,rax
0x4638: mov qword ptr [rbx],rsi
0x463b: je 0x464f
0x463d: mov rdi,r12
0x4640: mov qword ptr [rsp+0x10],rsi
0x4645: call 0x1880
0x464a: mov rsi,qword ptr [rsp+0x10]
0x464f: mov rdi,rsi
0x4652: mov qword ptr [rsp+0x10],rsi
0x4657: call 0x5590
0x465c: sub rsp,0x8
0x4660: mov qword ptr [rbx+0x8],rax
0x4664: mov r8d,dword ptr [rbp]
0x4668: push qword ptr [rbp+0x30]
0x466b: push qword ptr [rbp+0x28]
0x466e: mov rcx,r14
0x4671: push r15
0x4673: mov r9d,dword ptr [rsp+0x3c]
0x4678: mov rdi,rax
0x467b: mov rdx,qword ptr [rsp+0x28]
0x4680: mov rsi,qword ptr [rsp+0x30]
0x4685: mov r12,rax
0x4688: call 0x32f0
0x468d: add rsp,0x20
0x4691: mov eax,dword ptr [rsp+0x18]
0x4695: mov dword ptr [r13],eax
0x4699: add rsp,0x28
0x469d: mov rax,r12
0x46a0: pop rbx
0x46a1: pop rbp
0x46a2: pop r12
0x46a4: pop r13
0x46a6: pop r14
0x46a8: pop r15
0x46aa: ret 
0x46d1: call 0x1890
0x46d6: call 0x57e0
0x46db: nop dword ptr [rax+rax]
0x46e0: push r12
0x46e2: push rbp
0x46e3: push rbx
0x46e4: mov rbx,rdi
0x46e7: call 0x18a0
0x46ec: mov r12d,dword ptr [rax]
0x46ef: mov rbp,rax
0x46f2: lea rax,[rip+0x216cc7]
0x46f9: test rbx,rbx
0x46fc: mov esi,0x38
0x4701: cmove rbx,rax
0x4705: mov rdi,rbx
0x4708: call 0x5790
0x470d: mov dword ptr [rbp],r12d
0x4711: pop rbx
0x4712: pop rbp
0x4713: pop r12
0x4715: ret 
0x4720: lea rax,[rip+0x216c99]
0x4727: test rdi,rdi
0x472a: cmove rdi,rax
0x472e: mov eax,dword ptr [rdi]
0x4730: ret 
0x4740: lea rax,[rip+0x216c79]
0x4747: test rdi,rdi
0x474a: cmove rdi,rax
0x474e: mov dword ptr [rdi],esi
0x4750: ret 
0x4760: lea rax,[rip+0x216c59]
0x4767: test rdi,rdi
0x476a: mov ecx,esi
0x476c: cmove rdi,rax
0x4770: mov eax,esi
0x4772: and ecx,0x1f
0x4775: shr al,0x5
0x4778: movzx eax,al
0x477b: lea rdi,[rdi+rax*4+0x8]
0x4780: mov esi,dword ptr [rdi]
0x4782: mov eax,esi
0x4784: shr eax,cl
0x4786: xor edx,eax
0x4788: and eax,0x1
0x478b: and edx,0x1
0x478e: shl edx,cl
0x4790: xor edx,esi
0x4792: mov dword ptr [rdi],edx
0x4794: ret 
0x47a0: lea rax,[rip+0x216c19]
0x47a7: test rdi,rdi
0x47aa: cmove rdi,rax
0x47ae: mov eax,dword ptr [rdi+0x4]
0x47b1: mov dword ptr [rdi+0x4],esi
0x47b4: ret 
0x47c0: lea rax,[rip+0x216bf9]
0x47c7: test rdi,rdi
0x47ca: cmove rdi,rax
0x47ce: test rsi,rsi
0x47d1: mov dword ptr [rdi],0xa
0x47d7: je 0x47e7
0x47d9: test rdx,rdx
0x47dc: je 0x47e7
0x47de: mov qword ptr [rdi+0x28],rsi
0x47e2: mov qword ptr [rdi+0x30],rdx
0x47e6: ret 
0x47e7: sub rsp,0x8
0x47eb: call 0x1890
0x47f0: push r15
0x47f2: push r14
0x47f4: lea rax,[rip+0x216bc5]
0x47fb: push r13
0x47fd: push r12
0x47ff: mov r13,rdi
0x4802: push rbp
0x4803: push rbx
0x4804: mov rbx,r8
0x4807: mov r14,rsi
0x480a: mov r15,rdx
0x480d: sub rsp,0x18
0x4811: test r8,r8
0x4814: cmove rbx,rax
0x4818: mov qword ptr [rsp+0x8],rcx
0x481d: call 0x18a0
0x4822: mov r12d,dword ptr [rax]
0x4825: mov rbp,rax
0x4828: lea rax,[rbx+0x8]
0x482c: sub rsp,0x8
0x4830: mov r9d,dword ptr [rbx+0x4]
0x4834: push qword ptr [rbx+0x30]
0x4837: mov r8d,dword ptr [rbx]
0x483a: push qword ptr [rbx+0x28]
0x483d: mov rdx,r15
0x4840: push rax
0x4841: mov rcx,qword ptr [rsp+0x28]
0x4846: mov rsi,r14
0x4849: mov rdi,r13
0x484c: call 0x32f0
0x4851: mov dword ptr [rbp],r12d
0x4855: add rsp,0x38
0x4859: pop rbx
0x485a: pop rbp
0x485b: pop r12
0x485d: pop r13
0x485f: pop r14
0x4861: pop r15
0x4863: ret 
0x4870: push r15
0x4872: push r14
0x4874: lea rax,[rip+0x216b45]
0x487b: push r13
0x487d: push r12
0x487f: mov r12,rdx
0x4882: push rbp
0x4883: push rbx
0x4884: mov rbx,rcx
0x4887: mov r14,rdi
0x488a: mov r15,rsi
0x488d: sub rsp,0x38
0x4891: test rcx,rcx
0x4894: cmove rbx,rax
0x4898: xor ebp,ebp
0x489a: call 0x18a0
0x489f: test r12,r12
0x48a2: mov r13,rax
0x48a5: mov eax,dword ptr [rax]
0x48a7: sete bpl
0x48ab: or ebp,dword ptr [rbx+0x4]
0x48ae: lea r10,[rbx+0x8]
0x48b2: sub rsp,0x8
0x48b6: mov r8d,dword ptr [rbx]
0x48b9: mov rcx,r15
0x48bc: mov dword ptr [rsp+0x14],eax
0x48c0: push qword ptr [rbx+0x30]
0x48c3: mov rdx,r14
0x48c6: push qword ptr [rbx+0x28]
0x48c9: push r10
0x48cb: xor esi,esi
0x48cd: mov r9d,ebp
0x48d0: xor edi,edi
0x48d2: mov qword ptr [rsp+0x40],r10
0x48d7: call 0x32f0
0x48dc: lea rsi,[rax+0x1]
0x48e0: mov qword ptr [rsp+0x48],rax
0x48e5: add rsp,0x20
0x48e9: mov rdi,rsi
0x48ec: mov qword ptr [rsp+0x18],rsi
0x48f1: call 0x5590
0x48f6: mov qword ptr [rsp+0x10],rax
0x48fb: sub rsp,0x8
0x48ff: push qword ptr [rbx+0x30]
0x4902: push qword ptr [rbx+0x28]
0x4905: mov r10,qword ptr [rsp+0x38]
0x490a: mov r9d,ebp
0x490d: mov r8d,dword ptr [rbx]
0x4910: mov rcx,r15
0x4913: mov rdx,r14
0x4916: mov rdi,rax
0x4919: push r10
0x491b: mov rsi,qword ptr [rsp+0x38]
0x4920: call 0x32f0
0x4925: mov eax,dword ptr [rsp+0x2c]
0x4929: add rsp,0x20
0x492d: test r12,r12
0x4930: mov dword ptr [r13],eax
0x4934: je 0x493f
0x4936: mov r11,qword ptr [rsp+0x28]
0x493b: mov qword ptr [r12],r11
0x493f: mov rax,qword ptr [rsp+0x10]
0x4944: add rsp,0x38
0x4948: pop rbx
0x4949: pop rbp
0x494a: pop r12
0x494c: pop r13
0x494e: pop r14
0x4950: pop r15
0x4952: ret 
0x4960: mov rcx,rdx
0x4963: xor edx,edx
0x4965: jmp 0x4870
0x4970: mov eax,dword ptr [rip+0x2146e2]
0x4976: push r12
0x4978: mov r12,qword ptr [rip+0x2146e1]
0x497f: push rbp
0x4980: push rbx
0x4981: cmp eax,0x1
0x4984: jle 0x49b1
0x4986: sub eax,0x2
0x4989: lea rbx,[r12+0x18]
0x498e: shl rax,0x4
0x4992: lea rbp,[r12+rax+0x28]
0x4997: nop word ptr [rax+rax]
0x49a0: mov rdi,qword ptr [rbx]
0x49a3: add rbx,0x10
0x49a7: call 0x1880
0x49ac: cmp rbx,rbp
0x49af: jne 0x49a0
0x49b1: mov rdi,qword ptr [r12+0x8]
0x49b6: lea rbx,[rip+0x216903]
0x49bd: cmp rdi,rbx
0x49c0: je 0x49d9
0x49c2: call 0x1880
0x49c7: mov qword ptr [rip+0x21469e],0x100
0x49d2: mov qword ptr [rip+0x21469f],rbx
0x49d9: lea rbx,[rip+0x214690]
0x49e0: cmp r12,rbx
0x49e3: je 0x49f4
0x49e5: mov rdi,r12
0x49e8: call 0x1880
0x49ed: mov qword ptr [rip+0x21466c],rbx
0x49f4: pop rbx
0x49f5: mov dword ptr [rip+0x214659],0x1
0x49ff: pop rbp
0x4a00: pop r12
0x4a02: ret 
0x4a10: lea rcx,[rip+0x2169a9]
0x4a17: mov rdx,-0x1
0x4a1e: jmp 0x4530
0x4a30: lea rcx,[rip+0x216989]
0x4a37: jmp 0x4530
0x4a40: lea rcx,[rip+0x216979]
0x4a47: mov rsi,rdi
0x4a4a: mov rdx,-0x1
0x4a51: xor edi,edi
0x4a53: jmp 0x4530
0x4a60: lea rcx,[rip+0x216959]
0x4a67: mov rdx,rsi
0x4a6a: mov rsi,rdi
0x4a6d: xor edi,edi
0x4a6f: jmp 0x4530
0x4aef: mov rcx,qword ptr [rsp+0x38]
0x4af4: xor rcx,qword ptr fs:0x28
0x4afd: jne 0x4b09
0x4aff: add rsp,0x48
0x4b03: ret 
0x4b04: call 0x1890
0x4b09: call 0x1990
0x4b0e: nop 
0x4b10: sub rsp,0x48
0x4b14: mov rax,rdx
0x4b17: mov rdx,rcx
0x4b1a: mov rcx,qword ptr fs:0x28
0x4b23: mov qword ptr [rsp+0x38],rcx
0x4b28: xor ecx,ecx
0x4b2a: cmp esi,0xa
0x4b2d: je 0x4b90
0x4b2f: mov dword ptr [rsp],esi
0x4b32: mov rcx,rsp
0x4b35: mov rsi,rax
0x4b38: mov qword ptr [rsp+0x4],0x0
0x4b41: mov qword ptr [rsp+0xc],0x0
0x4b4a: mov qword ptr [rsp+0x14],0x0
0x4b53: mov qword ptr [rsp+0x1c],0x0
0x4b5c: mov qword ptr [rsp+0x24],0x0
0x4b65: mov qword ptr [rsp+0x2c],0x0
0x4b6e: mov dword ptr [rsp+0x34],0x0
0x4b76: call 0x4530
0x4b7b: mov rdx,qword ptr [rsp+0x38]
0x4b80: xor rdx,qword ptr fs:0x28
0x4b89: jne 0x4b95
0x4b8b: add rsp,0x48
0x4b8f: ret 
0x4b90: call 0x1890
0x4b95: call 0x1990
0x4b9a: nop word ptr [rax+rax]
0x4bb0: mov rcx,rdx
0x4bb3: mov rdx,rsi
0x4bb6: mov esi,edi
0x4bb8: xor edi,edi
0x4bba: jmp 0x4b10
0x4bc0: sub rsp,0x48
0x4bc4: mov ecx,edx
0x4bc6: mov rax,qword ptr fs:0x28
0x4bcf: mov qword ptr [rsp+0x38],rax
0x4bd4: xor eax,eax
0x4bd6: mov rax,qword ptr [rip+0x216813]
0x4bdd: mov r8,rsp
0x4be0: and ecx,0x1f
0x4be3: movdqa xmm0,[rip+0x2167d5]
0x4beb: mov qword ptr [rsp+0x30],rax
0x4bf0: mov eax,edx
0x4bf2: movaps [rsp],xmm0
0x4bf6: shr al,0x5
0x4bf9: movzx eax,al
0x4bfc: lea r9,[r8+rax*4+0x8]
0x4c01: movdqa xmm0,[rip+0x2167c7]
0x4c09: movaps [rsp+0x10],xmm0
0x4c0e: movdqa xmm0,[rip+0x2167ca]
0x4c16: movaps [rsp+0x20],xmm0
0x4c1b: mov edx,dword ptr [r9]
0x4c1e: mov eax,edx
0x4c20: shr eax,cl
0x4c22: not eax
0x4c24: and eax,0x1
0x4c27: shl eax,cl
0x4c29: mov rcx,r8
0x4c2c: xor eax,edx
0x4c2e: mov rdx,rsi
0x4c31: mov rsi,rdi
0x4c34: mov dword ptr [r9],eax
0x4c37: xor edi,edi
0x4c39: call 0x4530
0x4c3e: mov rsi,qword ptr [rsp+0x38]
0x4c43: xor rsi,qword ptr fs:0x28
0x4c4c: jne 0x4c53
0x4c4e: add rsp,0x48
0x4c52: ret 
0x4c53: call 0x1990
0x4c58: nop dword ptr [rax+rax]
0x4c60: movsx edx,sil
0x4c64: mov rsi,-0x1
0x4c6b: jmp 0x4bc0
0x4c70: mov edx,0x3a
0x4c75: mov rsi,-0x1
0x4c7c: jmp 0x4bc0
0x4c90: mov edx,0x3a
0x4c95: jmp 0x4bc0
0x4d0f: mov rcx,qword ptr [rsp+0x38]
0x4d14: xor rcx,qword ptr fs:0x28
0x4d1d: jne 0x4d29
0x4d1f: add rsp,0x48
0x4d23: ret 
0x4d24: call 0x1890
0x4d29: call 0x1990
0x4d2e: nop 
0x4d30: sub rsp,0x48
0x4d34: mov r9,rcx
0x4d37: mov rcx,qword ptr [rip+0x2166b2]
0x4d3e: movdqa xmm0,[rip+0x21667a]
0x4d46: mov rax,qword ptr fs:0x28
0x4d4f: mov qword ptr [rsp+0x38],rax
0x4d54: xor eax,eax
0x4d56: movaps [rsp],xmm0
0x4d5a: test rsi,rsi
0x4d5d: mov qword ptr [rsp+0x30],rcx
0x4d62: mov dword ptr [rsp],0xa
0x4d69: movdqa xmm0,[rip+0x21665f]
0x4d71: movaps [rsp+0x10],xmm0
0x4d76: movdqa xmm0,[rip+0x216662]
0x4d7e: movaps [rsp+0x20],xmm0
0x4d83: je 0x4db7
0x4d85: test rdx,rdx
0x4d88: je 0x4db7
0x4d8a: mov qword ptr [rsp+0x28],rsi
0x4d8f: mov qword ptr [rsp+0x30],rdx
0x4d94: mov rcx,rsp
0x4d97: mov rdx,r8
0x4d9a: mov rsi,r9
0x4d9d: call 0x4530
0x4da2: mov rdi,qword ptr [rsp+0x38]
0x4da7: xor rdi,qword ptr fs:0x28
0x4db0: jne 0x4dbc
0x4db2: add rsp,0x48
0x4db6: ret 
0x4db7: call 0x1890
0x4dbc: call 0x1990
0x4dc1: nop dword ptr [rax+rax]
0x4dc6: nop word ptr cs:[rax+rax]
0x4dd0: mov r8,-0x1
0x4dd7: jmp 0x4d30
0x4de0: mov rcx,rdx
0x4de3: mov r8,-0x1
0x4dea: mov rdx,rsi
0x4ded: mov rsi,rdi
0x4df0: xor edi,edi
0x4df2: jmp 0x4d30
0x4e00: mov r8,rcx
0x4e03: mov rcx,rdx
0x4e06: mov rdx,rsi
0x4e09: mov rsi,rdi
0x4e0c: xor edi,edi
0x4e0e: jmp 0x4d30
0x4e20: lea rcx,[rip+0x2141f9]
0x4e27: jmp 0x4530
0x4e30: lea rcx,[rip+0x2141e9]
0x4e37: mov rdx,rsi
0x4e3a: mov rsi,rdi
0x4e3d: xor edi,edi
0x4e3f: jmp 0x4530
0x4e50: lea rcx,[rip+0x2141c9]
0x4e57: mov rdx,-0x1
0x4e5e: jmp 0x4530
0x4e70: lea rcx,[rip+0x2141a9]
0x4e77: mov rsi,rdi
0x4e7a: mov rdx,-0x1
0x4e81: xor edi,edi
0x4e83: jmp 0x4530
0x4f10: push rbx
0x4f11: mov ebx,esi
0x4f13: call 0x19e0
0x4f18: mov esi,ebx
0x4f1a: mov edi,eax
0x4f1c: pop rbx
0x4f1d: jmp 0x13c50
0x50a8: mov r8,rcx
0x50ab: mov rcx,rdx
0x50ae: lea rdx,[rip+0xfaff]
0x50b5: mov esi,0x1
0x50ba: xor eax,eax
0x50bc: call 0x1c20
0x50c1: jmp 0x4fac
0x52bd: push r12
0x52bf: push r15
0x52c1: push r14
0x52c3: mov r8,qword ptr [rsp+0x20]
0x52c8: mov rcx,rbx
0x52cb: mov rdx,rax
0x52ce: mov rdi,rbp
0x52d1: mov esi,0x1
0x52d6: xor eax,eax
0x52d8: call 0x1c20
0x52dd: add rsp,0x20
0x52e1: add rsp,0x28
0x52e5: pop rbx
0x52e6: pop rbp
0x52e7: pop r12
0x52e9: pop r13
0x52eb: pop r14
0x52ed: pop r15
0x52ef: ret 
0x5329: push r12
0x532b: push r15
0x532d: push r14
0x532f: mov r9,qword ptr [rsp+0x28]
0x5334: jmp 0x52c3
0x5390: xor r9d,r9d
0x5393: cmp qword ptr [r8],0x0
0x5397: je 0x53ab
0x5399: nop dword ptr [rax]
0x53a0: add r9,0x1
0x53a4: cmp qword ptr [r8+r9*8],0x0
0x53a9: jne 0x53a0
0x53ab: jmp 0x4f70
0x53b0: sub rsp,0x68
0x53b4: mov r10,r8
0x53b7: xor r9d,r9d
0x53ba: mov rax,qword ptr fs:0x28
0x53c3: mov qword ptr [rsp+0x58],rax
0x53c8: xor eax,eax
0x53ca: mov r8,rsp
0x53cd: nop dword ptr [rax]
0x53d0: mov eax,dword ptr [r10]
0x53d3: cmp eax,0x2f
0x53d6: ja 0x541a
0x53d8: mov r11d,eax
0x53db: add r11,qword ptr [r10+0x10]
0x53df: add eax,0x8
0x53e2: mov dword ptr [r10],eax
0x53e5: mov rax,qword ptr [r11]
0x53e8: test rax,rax
0x53eb: mov qword ptr [r8+r9*8],rax
0x53ef: je 0x53fb
0x53f1: add r9,0x1
0x53f5: cmp r9,0xa
0x53f9: jne 0x53d0
0x53fb: call 0x4f70
0x5400: mov rax,qword ptr [rsp+0x58]
0x5405: xor rax,qword ptr fs:0x28
0x540e: jne 0x5415
0x5410: add rsp,0x68
0x5414: ret 
0x5415: call 0x1990
0x541a: mov r11,qword ptr [r10+0x8]
0x541e: lea rax,[r11+0x8]
0x5422: mov qword ptr [r10+0x8],rax
0x5426: jmp 0x53e5
0x54f0: call 0x1990
0x54fc: mov rax,rbx
0x54ff: add rbx,0x8
0x5503: jmp 0x54b6
0x5510: push rbx
0x5511: lea rsi,[rip+0xf6ea]
0x5518: mov edx,0x5
0x551d: xor edi,edi
0x551f: call 0x1960
0x5524: lea rdx,[rip+0xf6ec]
0x552b: mov rsi,rax
0x552e: mov edi,0x1
0x5533: xor eax,eax
0x5535: call 0x1b60
0x553a: lea rsi,[rip+0xf6ec]
0x5541: mov edx,0x5
0x5546: xor edi,edi
0x5548: call 0x1960
0x554d: lea rcx,[rip+0xf034]
0x5554: lea rdx,[rip+0xec93]
0x555b: mov rsi,rax
0x555e: mov edi,0x1
0x5563: xor eax,eax
0x5565: call 0x1b60
0x556a: mov rbx,qword ptr [rip+0x213b17]
0x5571: lea rsi,[rip+0xf8e8]
0x5578: xor edi,edi
0x557a: mov edx,0x5
0x557f: call 0x1960
0x5584: mov rsi,rbx
0x5587: mov rdi,rax
0x558a: pop rbx
0x558b: jmp 0x1a60
0x55aa: nop word ptr [rax+rax]
0x55b0: mov rax,rdi
0x55b3: mul rsi
0x55b6: mov rdi,rax
0x55b9: seto al
0x55bc: test rdi,rdi
0x55bf: js 0x55cb
0x55c1: movzx eax,al
0x55c4: test rax,rax
0x55c7: jne 0x55cb
0x55c9: jmp 0x5590
0x55cb: sub rsp,0x8
0x55cf: call 0x57e0
0x55d4: nop 
0x55d6: nop word ptr cs:[rax+rax]
0x55e0: jmp 0x5590
0x5626: nop word ptr cs:[rax+rax]
0x5630: mov rax,rsi
0x5633: mul rdx
0x5636: mov rsi,rax
0x5639: seto al
0x563c: test rsi,rsi
0x563f: js 0x564b
0x5641: movzx eax,al
0x5644: test rax,rax
0x5647: jne 0x564b
0x5649: jmp 0x55f0
0x564b: sub rsp,0x8
0x564f: call 0x57e0
0x5654: nop 
0x5656: nop word ptr cs:[rax+rax]
0x5660: test rdi,rdi
0x5663: mov r9,rdx
0x5666: mov rcx,qword ptr [rsi]
0x5669: je 0x56a0
0x566b: xor edx,edx
0x566d: movabsq rax,0x5555555555555554
0x5677: div r9
0x567a: cmp rax,rcx
0x567d: jbe 0x56bb
0x567f: mov rax,rcx
0x5682: shr rax, 1
0x5685: lea rcx,[rax+rcx+0x1]
0x568a: mov qword ptr [rsi],rcx
0x568d: imul rcx,r9
0x5691: mov rsi,rcx
0x5694: jmp 0x55f0
0x56a0: test rcx,rcx
0x56a3: je 0x56c8
0x56a5: mov rax,rcx
0x56a8: mul r9
0x56ab: seto dl
0x56ae: test rax,rax
0x56b1: movzx edx,dl
0x56b4: js 0x56bb
0x56b6: test rdx,rdx
0x56b9: je 0x568a
0x56bb: sub rsp,0x8
0x56bf: call 0x57e0
0x56c4: nop dword ptr [rax]
0x56c8: xor edx,edx
0x56ca: mov eax,0x80
0x56cf: xor r8d,r8d
0x56d2: div r9
0x56d5: test rax,rax
0x56d8: sete r8b
0x56dc: lea rcx,[r8+rax]
0x56e0: jmp 0x56a5
0x56f0: test rdi,rdi
0x56f3: mov rax,qword ptr [rsi]
0x56f6: je 0x5720
0x56f8: movabsq rdx,0x5555555555555553
0x5702: cmp rax,rdx
0x5705: ja 0x5731
0x5707: mov rdx,rax
0x570a: shr rdx, 1
0x570d: lea rax,[rdx+rax+0x1]
0x5712: mov qword ptr [rsi],rax
0x5715: mov rsi,rax
0x5718: jmp 0x55f0
0x5720: test rax,rax
0x5723: mov edx,0x80
0x5728: cmove rax,rdx
0x572c: test rax,rax
0x572f: jns 0x5712
0x5731: sub rsp,0x8
0x5735: call 0x57e0
0x573a: nop word ptr [rax+rax]
0x5740: push rbx
0x5741: mov rbx,rdi
0x5744: call 0x5590
0x5749: mov rdx,rbx
0x574c: xor esi,esi
0x574e: mov rdi,rax
0x5751: pop rbx
0x5752: jmp 0x1a10
0x5760: mov rax,rdi
0x5763: sub rsp,0x8
0x5767: mul rsi
0x576a: seto dl
0x576d: test rax,rax
0x5770: js 0x5789
0x5772: movzx edx,dl
0x5775: test rdx,rdx
0x5778: jne 0x5789
0x577a: call 0x1a70
0x577f: test rax,rax
0x5782: je 0x5789
0x5784: add rsp,0x8
0x5788: ret 
0x5789: call 0x57e0
0x578e: nop 
0x5790: push rbp
0x5791: push rbx
0x5792: mov rbp,rdi
0x5795: mov rdi,rsi
0x5798: mov rbx,rsi
0x579b: sub rsp,0x8
0x579f: call 0x5590
0x57a4: add rsp,0x8
0x57a8: mov rdx,rbx
0x57ab: mov rsi,rbp
0x57ae: pop rbx
0x57af: pop rbp
0x57b0: mov rdi,rax
0x57b3: jmp 0x1a90
0x57c0: push rbx
0x57c1: mov rbx,rdi
0x57c4: call 0x1980
0x57c9: mov rdi,rbx
0x57cc: lea rsi,[rax+0x1]
0x57d0: pop rbx
0x57d1: jmp 0x5790
0x5810: call 0x1890
0x5815: nop word ptr cs:[rax+rax]
0x581f: nop 
0x58fe: call 0x1990
0x5903: nop word ptr cs:[rax+rax]
0x590d: nop dword ptr [rax]
0x5910: mov rax,qword ptr [rsi+0x48]
0x5914: cmp qword ptr [rsi+0x68],rax
0x5918: jle 0x5970
0x591a: mov r8,qword ptr [rsi+0x8]
0x591e: cmp dword ptr [rsi+0x90],0x1
0x5925: movzx ecx,byte ptr [r8+rax]
0x592a: mov byte ptr [rdi],cl
0x592c: jle 0x5943
0x592e: cmp rax,qword ptr [rsi+0x30]
0x5932: je 0x5943
0x5934: mov r9,qword ptr [rsi+0x10]
0x5938: cmp dword ptr [r9+rax*4],-0x1
0x593d: je 0x59bf
0x5943: cmp cl,0x5c
0x5946: je 0x59b0
0x5948: cmp cl,0x5b
0x594b: je 0x5980
0x594d: cmp cl,0x5d
0x5950: je 0x59f0
0x5956: cmp cl,0x5e
0x5959: je 0x59e0
0x595f: cmp cl,0x2d
0x5962: jne 0x59bf
0x5964: mov byte ptr [rdi+0x8],0x16
0x5968: mov eax,0x1
0x596d: ret 
0x5970: mov byte ptr [rdi+0x8],0x2
0x5974: xor eax,eax
0x5976: ret 
0x5980: lea rcx,[rax+0x1]
0x5984: cmp rcx,qword ptr [rsi+0x58]
0x5988: jge 0x59d0
0x598a: movzx eax,byte ptr [r8+rax+0x1]
0x5990: cmp al,0x3a
0x5992: mov byte ptr [rdi],al
0x5994: je 0x5a30
0x599a: cmp al,0x3d
0x599c: je 0x5a20
0x59a2: cmp al,0x2e
0x59a4: jne 0x59d0
0x59a6: mov byte ptr [rdi+0x8],0x1a
0x59aa: mov eax,0x2
0x59af: ret 
0x59b0: and edx,0x1
0x59b3: je 0x59bf
0x59b5: lea rdx,[rax+0x1]
0x59b9: cmp rdx,qword ptr [rsi+0x58]
0x59bd: jl 0x5a00
0x59bf: mov byte ptr [rdi+0x8],0x1
0x59c3: mov eax,0x1
0x59c8: ret 
0x59d0: mov byte ptr [rdi+0x8],0x1
0x59d4: mov byte ptr [rdi],0x5b
0x59d7: mov eax,0x1
0x59dc: ret 
0x59e0: mov byte ptr [rdi+0x8],0x19
0x59e4: mov eax,0x1
0x59e9: ret 
0x59f0: mov byte ptr [rdi+0x8],0x15
0x59f4: mov eax,0x1
0x59f9: ret 
0x5a00: mov qword ptr [rsi+0x48],rdx
0x5a04: movzx eax,byte ptr [r8+rax+0x1]
0x5a0a: mov byte ptr [rdi+0x8],0x1
0x5a0e: mov byte ptr [rdi],al
0x5a10: mov eax,0x1
0x5a15: ret 
0x5a20: mov byte ptr [rdi+0x8],0x1c
0x5a24: mov eax,0x2
0x5a29: ret 
0x5a30: and edx,0x4
0x5a33: je 0x59d0
0x5a35: mov byte ptr [rdi+0x8],0x1e
0x5a39: mov eax,0x2
0x5a3e: ret 
0x5a40: cmp byte ptr [rsi+0x30],0x11
0x5a44: je 0x5a50
0x5a46: xor eax,eax
0x5a48: ret 
0x5a50: cmp rdi,qword ptr [rsi+0x28]
0x5a54: jne 0x5a46
0x5a56: or byte ptr [rsi+0x32],0x8
0x5a5a: xor eax,eax
0x5a5c: ret 
0x6168: movzx edx,byte ptr [rcx+rdx]
0x616c: jmp 0x613f
0x62b0: mov ecx,dword ptr [rbx+0x90]
0x62b6: xor eax,eax
0x62b8: lea rsi,[rsp+0x10]
0x62bd: test ecx,ecx
0x62bf: jg 0x62e1
0x62c1: jmp 0x61d9
0x62d0: add rax,0x1
0x62d4: cmp rdx,rax
0x62d7: je 0x61d9
0x62dd: mov rdi,qword ptr [rbx+0x78]
0x62e1: mov rcx,qword ptr [rbx]
0x62e4: add rcx,rbp
0x62e7: add rcx,rax
0x62ea: add rcx,qword ptr [rbx+0x28]
0x62ee: movzx ecx,byte ptr [rcx]
0x62f1: movzx ecx,byte ptr [rdi+rcx]
0x62f5: mov rdi,qword ptr [rbx+0x8]
0x62f9: add rdi,rbp
0x62fc: mov byte ptr [rdi+rax],cl
0x62ff: mov byte ptr [rsi+rax],cl
0x6302: lea ecx,[rax+0x1]
0x6305: cmp ecx,dword ptr [rbx+0x90]
0x630b: jl 0x62d0
0x630d: jmp 0x61d9
0x6321: movzx edx,byte ptr [rcx+rdx]
0x6325: mov dword ptr [rsp+0xc],edx
0x6329: jmp 0x629e
0x632e: call 0x1990
0x6333: nop dword ptr [rax]
0x6336: nop word ptr cs:[rax+rax]
0x693a: call 0x1990
0x6a0e: mov rsi,qword ptr [rbx+0x58]
0x6a12: cmp qword ptr [rbx+0x40],rsi
0x6a16: cmovle rsi,qword ptr [rbx+0x40]
0x6a1b: mov rax,qword ptr [rbx+0x30]
0x6a1f: cmp rsi,rax
0x6a22: jg 0x6a34
0x6a24: jmp 0x6a55
0x6a30: mov rcx,qword ptr [rbx+0x78]
0x6a34: mov rdx,qword ptr [rbx]
0x6a37: add rdx,rax
0x6a3a: add rdx,qword ptr [rbx+0x28]
0x6a3e: movzx edx,byte ptr [rdx]
0x6a41: movzx ecx,byte ptr [rcx+rdx]
0x6a45: mov rdx,qword ptr [rbx+0x8]
0x6a49: mov byte ptr [rdx+rax],cl
0x6a4c: add rax,0x1
0x6a50: cmp rsi,rax
0x6a53: jne 0x6a30
0x6a55: mov qword ptr [rbx+0x30],rax
0x6a59: mov qword ptr [rbx+0x38],rax
0x6e33: push rsi
0x7dca: call 0x1990
0x7dcf: nop 
0x7f24: call 0x1990
0x7f29: nop dword ptr [rax]
0x8037: test rax,rax
0x803a: js 0x807d
0x803c: nop dword ptr [rax]
0x8040: mov r8,qword ptr [rdi+r9*8]
0x8044: mov rcx,qword ptr [rdi+rax*8]
0x8048: lea r10,[rax+rdx]
0x804c: lea r10,[rdi+r10*8]
0x8050: cmp r8,rcx
0x8053: jle 0x8070
0x8055: sub r9,0x1
0x8059: sub rdx,0x1
0x805d: mov qword ptr [r10],r8
0x8060: jne 0x8040
0x8062: xor edx,edx
0x8064: jmp 0x8081
0x8070: sub rax,0x1
0x8074: mov qword ptr [r10],rcx
0x8077: cmp rax,-0x1
0x807b: jne 0x8040
0x81c0: push r14
0x81c2: push r13
0x81c4: lea r13,[rsi+0x70]
0x81c8: push r12
0x81ca: push rbp
0x81cb: lea r12,[rsi+0x80]
0x81d2: push rbx
0x81d3: mov rbx,rdi
0x81d6: sub rsp,0x10
0x81da: mov rbp,qword ptr [rdi]
0x81dd: mov rax,qword ptr fs:0x28
0x81e6: mov qword ptr [rsp+0x8],rax
0x81eb: xor eax,eax
0x81ed: mov r14,rsp
0x81f0: lea r8,[rbx+0x28]
0x81f4: xor ecx,ecx
0x81f6: xor edx,edx
0x81f8: mov rsi,r12
0x81fb: mov rdi,r13
0x81fe: call 0x80e0
0x8203: test rax,rax
0x8206: mov qword ptr [r14],rax
0x8209: je 0x825c
0x820b: mov qword ptr [rax],rbp
0x820e: mov rbp,qword ptr [r14]
0x8211: or byte ptr [rbp+0x32],0x4
0x8215: mov rax,qword ptr [rbx+0x8]
0x8219: test rax,rax
0x821c: je 0x8230
0x821e: lea r14,[rbp+0x8]
0x8222: mov rbx,rax
0x8225: jmp 0x81f0
0x8230: xor edx,edx
0x8232: jmp 0x823b
0x8238: mov rbx,rax
0x823b: mov rax,qword ptr [rbx+0x10]
0x823f: test rax,rax
0x8242: je 0x8249
0x8244: cmp rax,rdx
0x8247: jne 0x8280
0x8249: mov rax,qword ptr [rbx]
0x824c: mov rbp,qword ptr [rbp]
0x8250: mov rdx,rbx
0x8253: test rax,rax
0x8256: jne 0x8238
0x8258: mov rax,qword ptr [rsp]
0x825c: mov rcx,qword ptr [rsp+0x8]
0x8261: xor rcx,qword ptr fs:0x28
0x826a: jne 0x828c
0x826c: add rsp,0x10
0x8270: pop rbx
0x8271: pop rbp
0x8272: pop r12
0x8274: pop r13
0x8276: pop r14
0x8278: ret 
0x8280: lea r14,[rbp+0x10]
0x8284: mov rbx,rax
0x8287: jmp 0x81f0
0x828c: call 0x1990
0x8291: nop dword ptr [rax+rax]
0x8296: nop word ptr cs:[rax+rax]
0x84d2: call 0x1990
0x84d7: nop word ptr [rax+rax]
0x857b: call 0x1990
0x8d07: call 0x1990
0x8d0c: nop dword ptr [rax]
0x90a9: call 0x1990
0x90ae: nop 
0x9a5a: cmp qword ptr [rbx+0x40],rax
0x9a5e: mov rdx,qword ptr [rbx+0x30]
0x9a62: cmovle rax,qword ptr [rbx+0x40]
0x9a67: cmp rax,rdx
0x9a6a: jg 0x9a78
0x9a6c: jmp 0x9a98
0x9a70: mov r15,qword ptr [rbx+0x28]
0x9a74: mov rcx,qword ptr [rbx+0x78]
0x9a78: mov rsi,qword ptr [rbx]
0x9a7b: add rsi,rdx
0x9a7e: movzx esi,byte ptr [rsi+r15]
0x9a83: movzx esi,byte ptr [rcx+rsi]
0x9a87: mov rcx,qword ptr [rbx+0x8]
0x9a8b: mov byte ptr [rcx+rdx],sil
0x9a8f: add rdx,0x1
0x9a93: cmp rax,rdx
0x9a96: jne 0x9a70
0x9a98: mov qword ptr [rbx+0x30],rdx
0x9a9c: mov qword ptr [rbx+0x38],rdx
0x9aa0: jmp 0x9603
0x9ac5: movzx eax,byte ptr [rdx+rax]
0x9c32: cmp rdx,0x6
0x9c36: mov edi,0x6
0x9c3b: lea r11,[rsp+0x32]
0x9c40: cmovle rdi,rdx
0x9c44: sub edi,0x1
0x9c47: test edi,edi
0x9c49: movsxd rax,edi
0x9c4c: js 0x9c62
0x9c4e: movzx edi,byte ptr [rsi+rax]
0x9c52: movzx edi,byte ptr [rcx+rdi]
0x9c56: mov byte ptr [r11+rax],dil
0x9c5a: sub rax,0x1
0x9c5e: test eax,eax
0x9c60: jns 0x9c4e
0x9c62: mov rsi,r11
0x9c65: jmp 0x99ea
0x9c6a: call 0x1990
0x9c6f: nop 
0x9ea6: call 0x1990
0x9eab: nop dword ptr [rax+rax]
0xaa24: call 0x1990
0xabc4: nop 
0xabc6: nop word ptr cs:[rax+rax]
0xabd0: push rbp
0xabd1: push rbx
0xabd2: mov rbp,rdi
0xabd5: mov rdi,rsi
0xabd8: mov rbx,rsi
0xabdb: sub rsp,0x8
0xabdf: call 0x1980
0xabe4: cmp rax,0x1
0xabe8: jne 0xac10
0xabea: movzx ecx,byte ptr [rbx]
0xabed: mov rdx,rcx
0xabf0: and ecx,0x3f
0xabf3: shr rdx,0x3
0xabf7: shl rax,cl
0xabfa: and edx,0x18
0xabfd: or qword ptr [rbp+rdx],rax
0xac02: add rsp,0x8
0xac06: xor eax,eax
0xac08: pop rbx
0xac09: pop rbp
0xac0a: ret 
0xac10: add rsp,0x8
0xac14: mov eax,0x3
0xac19: pop rbx
0xac1a: pop rbp
0xac1b: ret 
0xac20: push r14
0xac22: push r13
0xac24: mov r13,rcx
0xac27: push r12
0xac29: push rbp
0xac2a: mov r12,r9
0xac2d: push rbx
0xac2e: mov rbp,rdi
0xac31: mov rbx,rsi
0xac34: sub rsp,0x10
0xac38: test qword ptr [rsp+0x40],0x400000
0xac41: je 0xac68
0xac43: lea rdi,[rip+0xa34d]
0xac4a: mov ecx,0x6
0xac4f: mov rsi,r9
0xac52: rep cmpsb [rsi],es:[rdi]
0xac54: seta al
0xac57: sbb al,0x0
0xac59: test al,al
0xac5b: jne 0xad56
0xac61: lea r12,[rip+0xa329]
0xac68: mov rcx,qword ptr [r13]
0xac6c: cmp qword ptr [r8],rcx
0xac6f: mov rax,qword ptr [rdx]
0xac72: je 0xad89
0xac78: lea rdx,[rcx+0x1]
0xac7c: mov rdi,r12
0xac7f: mov qword ptr [r13],rdx
0xac83: lea r13,[rax+rcx*8]
0xac87: call 0x1a50
0xac8c: lea rdi,[rip+0xa310]
0xac93: mov qword ptr [r13],rax
0xac97: mov ecx,0x6
0xac9c: mov rsi,r12
0xac9f: rep cmpsb [rsi],es:[rdi]
0xaca1: seta al
0xaca4: sbb al,0x0
0xaca6: test al,al
0xaca8: je 0xad18
0xacaa: lea rdi,[rip+0xa2f8]
0xacb1: mov ecx,0x6
0xacb6: mov rsi,r12
0xacb9: rep cmpsb [rsi],es:[rdi]
0xacbb: seta al
0xacbe: sbb al,0x0
0xacc0: test al,al
0xacc2: jne 0xadc8
0xacc8: call 0x1c70
0xaccd: xor ecx,ecx
0xaccf: test rbp,rbp
0xacd2: mov rdx,qword ptr [rax]
0xacd5: mov edi,0x1
0xacda: jne 0xaf9a
0xace0: test byte ptr [rdx+rcx*2],0x2
0xace4: je 0xacf7
0xace6: mov rax,rcx
0xace9: mov rsi,rdi
0xacec: sar rax,0x6
0xacf0: shl rsi,cl
0xacf3: or qword ptr [rbx+rax*8],rsi
0xacf7: add rcx,0x1
0xacfb: cmp rcx,0x100
0xad02: jne 0xace0
0xad04: xor eax,eax
0xad06: add rsp,0x10
0xad0a: pop rbx
0xad0b: pop rbp
0xad0c: pop r12
0xad0e: pop r13
0xad10: pop r14
0xad12: ret 
0xad18: call 0x1c70
0xad1d: xor ecx,ecx
0xad1f: test rbp,rbp
0xad22: mov rdx,qword ptr [rax]
0xad25: mov edi,0x1
0xad2a: jne 0xaf1a
0xad30: test byte ptr [rdx+rcx*2],0x8
0xad34: je 0xad47
0xad36: mov rax,rcx
0xad39: mov rsi,rdi
0xad3c: sar rax,0x6
0xad40: shl rsi,cl
0xad43: or qword ptr [rbx+rax*8],rsi
0xad47: add rcx,0x1
0xad4b: cmp rcx,0x100
0xad52: jne 0xad30
0xad54: jmp 0xad04
0xad56: lea rdi,[rip+0xa240]
0xad5d: mov ecx,0x6
0xad62: mov rsi,r9
0xad65: rep cmpsb [rsi],es:[rdi]
0xad67: mov rcx,qword ptr [r13]
0xad6b: seta al
0xad6e: sbb al,0x0
0xad70: test al,al
0xad72: lea rax,[rip+0xa218]
0xad79: cmove r12,rax
0xad7d: cmp qword ptr [r8],rcx
0xad80: mov rax,qword ptr [rdx]
0xad83: jne 0xac78
0xad89: lea r14,[rcx+rcx+0x1]
0xad8e: mov rdi,rax
0xad91: mov qword ptr [rsp+0x8],r8
0xad96: mov qword ptr [rsp],rdx
0xad9a: lea rsi,[r14*8]
0xada2: call 0x1b30
0xada7: test rax,rax
0xadaa: je 0xb0c8
0xadb0: mov rdx,qword ptr [rsp]
0xadb4: mov r8,qword ptr [rsp+0x8]
0xadb9: mov qword ptr [rdx],rax
0xadbc: mov qword ptr [r8],r14
0xadbf: mov rcx,qword ptr [r13]
0xadc3: jmp 0xac78
0xadc8: lea rdi,[rip+0xa1ce]
0xadcf: mov ecx,0x6
0xadd4: mov rsi,r12
0xadd7: rep cmpsb [rsi],es:[rdi]
0xadd9: seta al
0xaddc: sbb al,0x0
0xadde: test al,al
0xade0: je 0xae4a
0xade2: lea rdi,[rip+0xa1c6]
0xade9: mov ecx,0x6
0xadee: mov rsi,r12
0xadf1: rep cmpsb [rsi],es:[rdi]
0xadf3: seta al
0xadf6: sbb al,0x0
0xadf8: test al,al
0xadfa: jne 0xae92
0xae00: call 0x1c70
0xae05: xor ecx,ecx
0xae07: test rbp,rbp
0xae0a: mov rdx,qword ptr [rax]
0xae0d: mov edi,0x1
0xae12: jne 0xb16e
0xae18: nop dword ptr [rax+rax]
0xae20: test byte ptr [rdx+rcx*2+0x1],0x20
0xae25: je 0xae38
0xae27: mov rax,rcx
0xae2a: mov rsi,rdi
0xae2d: sar rax,0x6
0xae31: shl rsi,cl
0xae34: or qword ptr [rbx+rax*8],rsi
0xae38: add rcx,0x1
0xae3c: cmp rcx,0x100
0xae43: jne 0xae20
0xae45: jmp 0xad04
0xae4a: call 0x1c70
0xae4f: xor ecx,ecx
0xae51: test rbp,rbp
0xae54: mov rdx,qword ptr [rax]
0xae57: mov edi,0x1
0xae5c: jne 0xb032
0xae62: nop word ptr [rax+rax]
0xae68: test byte ptr [rdx+rcx*2+0x1],0x2
0xae6d: je 0xae80
0xae6f: mov rax,rcx
0xae72: mov rsi,rdi
0xae75: sar rax,0x6
0xae79: shl rsi,cl
0xae7c: or qword ptr [rbx+rax*8],rsi
0xae80: add rcx,0x1
0xae84: cmp rcx,0x100
0xae8b: jne 0xae68
0xae8d: jmp 0xad04
0xae92: lea rdi,[rip+0xa0f8]
0xae99: mov ecx,0x6
0xae9e: mov rsi,r12
0xaea1: rep cmpsb [rsi],es:[rdi]
0xaea3: seta al
0xaea6: sbb al,0x0
0xaea8: test al,al
0xaeaa: je 0xaf53
0xaeb0: lea rdi,[rip+0xa117]
0xaeb7: mov ecx,0x6
0xaebc: mov rsi,r12
0xaebf: rep cmpsb [rsi],es:[rdi]
0xaec1: seta al
0xaec4: sbb al,0x0
0xaec6: test al,al
0xaec8: jne 0xafd3
0xaece: call 0x1c70
0xaed3: xor ecx,ecx
0xaed5: test rbp,rbp
0xaed8: mov rdx,qword ptr [rax]
0xaedb: mov edi,0x1
0xaee0: jne 0xb38a
0xaee6: nop word ptr cs:[rax+rax]
0xaef0: test byte ptr [rdx+rcx*2+0x1],0x8
0xaef5: je 0xaf08
0xaef7: mov rax,rcx
0xaefa: mov rsi,rdi
0xaefd: sar rax,0x6
0xaf01: shl rsi,cl
0xaf04: or qword ptr [rbx+rax*8],rsi
0xaf08: add rcx,0x1
0xaf0c: cmp rcx,0x100
0xaf13: jne 0xaef0
0xaf15: jmp 0xad04
0xaf1a: xor eax,eax
0xaf1c: nop dword ptr [rax]
0xaf20: test byte ptr [rdx+rax*2],0x8
0xaf24: je 0xaf42
0xaf26: movzx ecx,byte ptr [rbp+rax]
0xaf2b: mov r10,rdi
0xaf2e: mov rsi,rcx
0xaf31: and ecx,0x3f
0xaf34: shr rsi,0x3
0xaf38: shl r10,cl
0xaf3b: and esi,0x18
0xaf3e: or qword ptr [rbx+rsi],r10
0xaf42: add rax,0x1
0xaf46: cmp rax,0x100
0xaf4c: jne 0xaf20
0xaf4e: jmp 0xad04
0xaf53: call 0x1c70
0xaf58: xor ecx,ecx
0xaf5a: test rbp,rbp
0xaf5d: mov rdx,qword ptr [rax]
0xaf60: mov edi,0x1
0xaf65: jne 0xb138
0xaf6b: nop dword ptr [rax+rax]
0xaf70: test byte ptr [rdx+rcx*2+0x1],0x4
0xaf75: je 0xaf88
0xaf77: mov rax,rcx
0xaf7a: mov rsi,rdi
0xaf7d: sar rax,0x6
0xaf81: shl rsi,cl
0xaf84: or qword ptr [rbx+rax*8],rsi
0xaf88: add rcx,0x1
0xaf8c: cmp rcx,0x100
0xaf93: jne 0xaf70
0xaf95: jmp 0xad04
0xaf9a: xor eax,eax
0xaf9c: nop dword ptr [rax]
0xafa0: test byte ptr [rdx+rax*2],0x2
0xafa4: je 0xafc2
0xafa6: movzx ecx,byte ptr [rbp+rax]
0xafab: mov r11,rdi
0xafae: mov rsi,rcx
0xafb1: and ecx,0x3f
0xafb4: shr rsi,0x3
0xafb8: shl r11,cl
0xafbb: and esi,0x18
0xafbe: or qword ptr [rbx+rsi],r11
0xafc2: add rax,0x1
0xafc6: cmp rax,0x100
0xafcc: jne 0xafa0
0xafce: jmp 0xad04
0xafd3: lea rdi,[rip+0x9fdb]
0xafda: mov ecx,0x6
0xafdf: mov rsi,r12
0xafe2: rep cmpsb [rsi],es:[rdi]
0xafe4: seta al
0xafe7: sbb al,0x0
0xafe9: test al,al
0xafeb: jne 0xb06c
0xafed: call 0x1c70
0xaff2: xor ecx,ecx
0xaff4: test rbp,rbp
0xaff7: mov rdx,qword ptr [rax]
0xaffa: mov edi,0x1
0xafff: jne 0xb3f7
0xb005: nop dword ptr [rax]
0xb008: test byte ptr [rdx+rcx*2+0x1],0x40
0xb00d: je 0xb020
0xb00f: mov rax,rcx
0xb012: mov rsi,rdi
0xb015: sar rax,0x6
0xb019: shl rsi,cl
0xb01c: or qword ptr [rbx+rax*8],rsi
0xb020: add rcx,0x1
0xb024: cmp rcx,0x100
0xb02b: jne 0xb008
0xb02d: jmp 0xad04
0xb032: xor eax,eax
0xb034: nop dword ptr [rax]
0xb038: test byte ptr [rdx+rax*2+0x1],0x2
0xb03d: je 0xb05b
0xb03f: movzx ecx,byte ptr [rbp+rax]
0xb044: mov r14,rdi
0xb047: mov rsi,rcx
0xb04a: and ecx,0x3f
0xb04d: shr rsi,0x3
0xb051: shl r14,cl
0xb054: and esi,0x18
0xb057: or qword ptr [rbx+rsi],r14
0xb05b: add rax,0x1
0xb05f: cmp rax,0x100
0xb065: jne 0xb038
0xb067: jmp 0xad04
0xb06c: lea rdi,[rip+0x9f24]
0xb073: mov ecx,0x6
0xb078: mov rsi,r12
0xb07b: rep cmpsb [rsi],es:[rdi]
0xb07d: seta al
0xb080: sbb al,0x0
0xb082: test al,al
0xb084: jne 0xb0d2
0xb086: call 0x1c70
0xb08b: xor ecx,ecx
0xb08d: test rbp,rbp
0xb090: mov rax,qword ptr [rax]
0xb093: mov edi,0x1
0xb098: jne 0xb3c0
0xb09e: test byte ptr [rax+rcx*2+0x1],0x1
0xb0a3: je 0xb0b6
0xb0a5: mov rdx,rcx
0xb0a8: mov rsi,rdi
0xb0ab: sar rdx,0x6
0xb0af: shl rsi,cl
0xb0b2: or qword ptr [rbx+rdx*8],rsi
0xb0b6: add rcx,0x1
0xb0ba: cmp rcx,0x100
0xb0c1: jne 0xb09e
0xb0c3: jmp 0xad04
0xb0c8: mov eax,0xc
0xb0cd: jmp 0xad06
0xb0d2: lea rdi,[rip+0x9ee2]
0xb0d9: mov ecx,0x6
0xb0de: mov rsi,r12
0xb0e1: rep cmpsb [rsi],es:[rdi]
0xb0e3: seta al
0xb0e6: sbb al,0x0
0xb0e8: test al,al
0xb0ea: jne 0xb1de
0xb0f0: call 0x1c70
0xb0f5: xor ecx,ecx
0xb0f7: test rbp,rbp
0xb0fa: mov rdx,qword ptr [rax]
0xb0fd: mov esi,0x1
0xb102: jne 0xb1a4
0xb108: test byte ptr [rdx+rcx*2],0x1
0xb10c: je 0xb11f
0xb10e: mov rax,rcx
0xb111: mov rdi,rsi
0xb114: sar rax,0x6
0xb118: shl rdi,cl
0xb11b: or qword ptr [rbx+rax*8],rdi
0xb11f: add rcx,0x1
0xb123: cmp rcx,0x100
0xb12a: jne 0xb108
0xb12c: jmp 0xad04
0xb138: xor eax,eax
0xb13a: test byte ptr [rdx+rax*2+0x1],0x4
0xb13f: je 0xb15d
0xb141: movzx ecx,byte ptr [rbp+rax]
0xb146: mov r9,rdi
0xb149: mov rsi,rcx
0xb14c: and ecx,0x3f
0xb14f: shr rsi,0x3
0xb153: shl r9,cl
0xb156: and esi,0x18
0xb159: or qword ptr [rbx+rsi],r9
0xb15d: add rax,0x1
0xb161: cmp rax,0x100
0xb167: jne 0xb13a
0xb169: jmp 0xad04
0xb16e: xor eax,eax
0xb170: test byte ptr [rdx+rax*2+0x1],0x20
0xb175: je 0xb193
0xb177: movzx ecx,byte ptr [rbp+rax]
0xb17c: mov r9,rdi
0xb17f: mov rsi,rcx
0xb182: and ecx,0x3f
0xb185: shr rsi,0x3
0xb189: shl r9,cl
0xb18c: and esi,0x18
0xb18f: or qword ptr [rbx+rsi],r9
0xb193: add rax,0x1
0xb197: cmp rax,0x100
0xb19d: jne 0xb170
0xb19f: jmp 0xad04
0xb1a4: xor eax,eax
0xb1a6: mov edi,0x1
0xb1ab: test byte ptr [rdx+rax*2],0x1
0xb1af: je 0xb1cd
0xb1b1: movzx ecx,byte ptr [rbp+rax]
0xb1b6: mov r14,rdi
0xb1b9: mov rsi,rcx
0xb1bc: and ecx,0x3f
0xb1bf: shr rsi,0x3
0xb1c3: shl r14,cl
0xb1c6: and esi,0x18
0xb1c9: or qword ptr [rbx+rsi],r14
0xb1cd: add rax,0x1
0xb1d1: cmp rax,0x100
0xb1d7: jne 0xb1ab
0xb1d9: jmp 0xad04
0xb1de: lea rsi,[rip+0x9ddc]
0xb1e5: mov rdi,r12
0xb1e8: call 0x1a80
0xb1ed: test eax,eax
0xb1ef: jne 0xb26a
0xb1f1: call 0x1c70
0xb1f6: xor ecx,ecx
0xb1f8: test rbp,rbp
0xb1fb: mov rsi,qword ptr [rax]
0xb1fe: mov edx,0x1
0xb203: jne 0xb22f
0xb205: cmp word ptr [rsi+rcx*2],0x0
0xb20a: jns 0xb21d
0xb20c: mov rax,rcx
0xb20f: mov rdi,rdx
0xb212: sar rax,0x6
0xb216: shl rdi,cl
0xb219: or qword ptr [rbx+rax*8],rdi
0xb21d: add rcx,0x1
0xb221: cmp rcx,0x100
0xb228: jne 0xb205
0xb22a: jmp 0xad04
0xb22f: xor eax,eax
0xb231: mov edi,0x1
0xb236: cmp word ptr [rsi+rax*2],0x0
0xb23b: jns 0xb259
0xb23d: movzx ecx,byte ptr [rbp+rax]
0xb242: mov r9,rdi
0xb245: mov rdx,rcx
0xb248: and ecx,0x3f
0xb24b: shr rdx,0x3
0xb24f: shl r9,cl
0xb252: and edx,0x18
0xb255: or qword ptr [rbx+rdx],r9
0xb259: add rax,0x1
0xb25d: cmp rax,0x100
0xb263: jne 0xb236
0xb265: jmp 0xad04
0xb26a: lea rsi,[rip+0x9d56]
0xb271: mov rdi,r12
0xb274: call 0x1a80
0xb279: test eax,eax
0xb27b: jne 0xb2f4
0xb27d: call 0x1c70
0xb282: xor ecx,ecx
0xb284: test rbp,rbp
0xb287: mov rsi,qword ptr [rax]
0xb28a: mov edx,0x1
0xb28f: jne 0xb2ba
0xb291: test byte ptr [rsi+rcx*2],0x4
0xb295: je 0xb2a8
0xb297: mov rax,rcx
0xb29a: mov rdi,rdx
0xb29d: sar rax,0x6
0xb2a1: shl rdi,cl
0xb2a4: or qword ptr [rbx+rax*8],rdi
0xb2a8: add rcx,0x1
0xb2ac: cmp rcx,0x100
0xb2b3: jne 0xb291
0xb2b5: jmp 0xad04
0xb2ba: xor eax,eax
0xb2bc: mov edi,0x1
0xb2c1: test byte ptr [rsi+rax*2],0x4
0xb2c5: je 0xb2e3
0xb2c7: movzx ecx,byte ptr [rbp+rax]
0xb2cc: mov r14,rdi
0xb2cf: mov rdx,rcx
0xb2d2: and ecx,0x3f
0xb2d5: shr rdx,0x3
0xb2d9: shl r14,cl
0xb2dc: and edx,0x18
0xb2df: or qword ptr [rbx+rdx],r14
0xb2e3: add rax,0x1
0xb2e7: cmp rax,0x100
0xb2ed: jne 0xb2c1
0xb2ef: jmp 0xad04
0xb2f4: lea rsi,[rip+0x9cd2]
0xb2fb: mov rdi,r12
0xb2fe: call 0x1a80
0xb303: test eax,eax
0xb305: jne 0xb380
0xb307: call 0x1c70
0xb30c: xor ecx,ecx
0xb30e: test rbp,rbp
0xb311: mov rsi,qword ptr [rax]
0xb314: mov edx,0x1
0xb319: jne 0xb345
0xb31b: test byte ptr [rsi+rcx*2+0x1],0x10
0xb320: je 0xb333
0xb322: mov rax,rcx
0xb325: mov rdi,rdx
0xb328: sar rax,0x6
0xb32c: shl rdi,cl
0xb32f: or qword ptr [rbx+rax*8],rdi
0xb333: add rcx,0x1
0xb337: cmp rcx,0x100
0xb33e: jne 0xb31b
0xb340: jmp 0xad04
0xb345: xor eax,eax
0xb347: mov edi,0x1
0xb34c: test byte ptr [rsi+rax*2+0x1],0x10
0xb351: je 0xb36f
0xb353: movzx ecx,byte ptr [rbp+rax]
0xb358: mov r9,rdi
0xb35b: mov rdx,rcx
0xb35e: and ecx,0x3f
0xb361: shr rdx,0x3
0xb365: shl r9,cl
0xb368: and edx,0x18
0xb36b: or qword ptr [rbx+rdx],r9
0xb36f: add rax,0x1
0xb373: cmp rax,0x100
0xb379: jne 0xb34c
0xb37b: jmp 0xad04
0xb380: mov eax,0x4
0xb385: jmp 0xad06
0xb38a: xor eax,eax
0xb38c: test byte ptr [rdx+rax*2+0x1],0x8
0xb391: je 0xb3af
0xb393: movzx ecx,byte ptr [rbp+rax]
0xb398: mov r14,rdi
0xb39b: mov rsi,rcx
0xb39e: and ecx,0x3f
0xb3a1: shr rsi,0x3
0xb3a5: shl r14,cl
0xb3a8: and esi,0x18
0xb3ab: or qword ptr [rbx+rsi],r14
0xb3af: add rax,0x1
0xb3b3: cmp rax,0x100
0xb3b9: jne 0xb38c
0xb3bb: jmp 0xad04
0xb3c0: xor edx,edx
0xb3c2: test byte ptr [rax+rdx*2+0x1],0x1
0xb3c7: je 0xb3e5
0xb3c9: movzx ecx,byte ptr [rbp+rdx]
0xb3ce: mov r9,rdi
0xb3d1: mov rsi,rcx
0xb3d4: and ecx,0x3f
0xb3d7: shr rsi,0x3
0xb3db: shl r9,cl
0xb3de: and esi,0x18
0xb3e1: or qword ptr [rbx+rsi],r9
0xb3e5: add rdx,0x1
0xb3e9: cmp rdx,0x100
0xb3f0: jne 0xb3c2
0xb3f2: jmp 0xad04
0xb3f7: xor eax,eax
0xb3f9: test byte ptr [rdx+rax*2+0x1],0x40
0xb3fe: je 0xb41c
0xb400: movzx ecx,byte ptr [rbp+rax]
0xb405: mov r14,rdi
0xb408: mov rsi,rcx
0xb40b: and ecx,0x3f
0xb40e: shr rsi,0x3
0xb412: shl r14,cl
0xb415: and esi,0x18
0xb418: or qword ptr [rbx+rsi],r14
0xb41c: add rax,0x1
0xb420: cmp rax,0x100
0xb426: jne 0xb3f9
0xb428: jmp 0xad04
0xb430: push r15
0xb432: push r14
0xb434: mov r14,rdx
0xb437: push r13
0xb439: push r12
0xb43b: mov r13,rcx
0xb43e: push rbp
0xb43f: push rbx
0xb440: mov rbp,rdi
0xb443: mov edi,0x20
0xb448: mov r12d,r8d
0xb44b: sub rsp,0x58
0xb44f: mov qword ptr [rsp],rsi
0xb453: mov esi,0x1
0xb458: mov qword ptr [rsp+0x8],r9
0xb45d: mov rax,qword ptr fs:0x28
0xb466: mov qword ptr [rsp+0x48],rax
0xb46b: xor eax,eax
0xb46d: mov qword ptr [rsp+0x18],0x0
0xb476: call 0x1a70
0xb47b: test rax,rax
0xb47e: je 0xb640
0xb484: mov esi,0x1
0xb489: mov edi,0x50
0xb48e: mov rbx,rax
0xb491: call 0x1a70
0xb496: test rax,rax
0xb499: mov r15,rax
0xb49c: je 0xb650
0xb4a2: movzx eax,byte ptr [rax+0x20]
0xb4a6: sub rsp,0x8
0xb4aa: mov edx,r12d
0xb4ad: push 0x0
0xb4af: and edx,0x1
0xb4b2: mov rdi,qword ptr [rsp+0x10]
0xb4b7: lea rcx,[r15+0x48]
0xb4bb: mov r9,r14
0xb4be: mov rsi,rbx
0xb4c1: lea r8,[rsp+0x28]
0xb4c6: and eax,-0x2
0xb4c9: or eax,edx
0xb4cb: lea rdx,[r15+0x18]
0xb4cf: mov byte ptr [r15+0x20],al
0xb4d3: call 0xac20
0xb4d8: test eax,eax
0xb4da: pop rdx
0xb4db: pop rcx
0xb4dc: jne 0xb670
0xb4e2: movsx rcx,byte ptr [r13]
0xb4e7: mov esi,0x1
0xb4ec: test cl,cl
0xb4ee: je 0xb52a
0xb4f0: lea rax,[rcx+0x3f]
0xb4f4: test rcx,rcx
0xb4f7: mov rdx,rcx
0xb4fa: cmovns rax,rcx
0xb4fe: sar rdx,0x3f
0xb502: add r13,0x1
0xb506: shr rdx,0x3a
0xb50a: sar rax,0x6
0xb50e: add rcx,rdx
0xb511: and ecx,0x3f
0xb514: sub rcx,rdx
0xb517: mov rdx,rsi
0xb51a: shl rdx,cl
0xb51d: movsx rcx,byte ptr [r13]
0xb522: or qword ptr [rbx+rax*8],rdx
0xb526: test cl,cl
0xb528: jne 0xb4f0
0xb52a: test r12b,r12b
0xb52d: je 0xb542
0xb52f: lea rdx,[rbx+0x20]
0xb533: mov rax,rbx
0xb536: not qword ptr [rax]
0xb539: add rax,0x8
0xb53d: cmp rdx,rax
0xb540: jne 0xb536
0xb542: cmp dword ptr [rbp+0xb4],0x1
0xb549: jle 0xb563
0xb54b: mov rcx,qword ptr [rbp+0x78]
0xb54f: xor eax,eax
0xb551: mov rdx,qword ptr [rcx+rax]
0xb555: and qword ptr [rbx+rax],rdx
0xb559: add rax,0x8
0xb55d: cmp rax,0x20
0xb561: jne 0xb551
0xb563: lea r9,[rsp+0x20]
0xb568: lea r12,[rbp+0x70]
0xb56c: lea r13,[rbp+0x80]
0xb573: xor ecx,ecx
0xb575: xor edx,edx
0xb577: mov byte ptr [rsp+0x28],0x3
0xb57c: mov r8,r9
0xb57f: mov rsi,r13
0xb582: mov rdi,r12
0xb585: mov qword ptr [rsp+0x20],rbx
0xb58a: mov qword ptr [rsp],r9
0xb58e: call 0x80e0
0xb593: test rax,rax
0xb596: mov r14,rax
0xb599: je 0xb630
0xb59f: cmp dword ptr [rbp+0xb4],0x1
0xb5a6: jle 0xb620
0xb5a8: or byte ptr [rbp+0xb0],0x2
0xb5af: mov r9,qword ptr [rsp]
0xb5b3: xor ecx,ecx
0xb5b5: xor edx,edx
0xb5b7: mov rsi,r13
0xb5ba: mov rdi,r12
0xb5bd: mov byte ptr [rsp+0x28],0x6
0xb5c2: mov qword ptr [rsp+0x20],r15
0xb5c7: mov r8,r9
0xb5ca: call 0x80e0
0xb5cf: test rax,rax
0xb5d2: je 0xb630
0xb5d4: lea r8,[rsp+0x30]
0xb5d9: mov rdx,r14
0xb5dc: mov rcx,rax
0xb5df: mov rsi,r13
0xb5e2: mov rdi,r12
0xb5e5: mov byte ptr [rsp+0x38],0xa
0xb5ea: call 0x80e0
0xb5ef: mov r14,rax
0xb5f2: mov rdi,qword ptr [rsp+0x48]
0xb5f7: xor rdi,qword ptr fs:0x28
0xb600: mov rax,r14
0xb603: jne 0xb695
0xb609: add rsp,0x58
0xb60d: pop rbx
0xb60e: pop rbp
0xb60f: pop r12
0xb611: pop r13
0xb613: pop r14
0xb615: pop r15
0xb617: ret 
0xb620: mov rdi,r15
0xb623: call 0x6b40
0xb628: jmp 0xb5f2
0xb630: mov rdi,rbx
0xb633: call 0x1880
0xb638: mov rdi,r15
0xb63b: call 0x6b40
0xb640: mov rax,qword ptr [rsp+0x8]
0xb645: xor r14d,r14d
0xb648: mov dword ptr [rax],0xc
0xb64e: jmp 0xb5f2
0xb650: mov rdi,rbx
0xb653: xor r14d,r14d
0xb656: call 0x1880
0xb65b: mov rax,qword ptr [rsp+0x8]
0xb660: mov dword ptr [rax],0xc
0xb666: jmp 0xb5f2
0xb670: mov rdi,rbx
0xb673: mov dword ptr [rsp],eax
0xb676: xor r14d,r14d
0xb679: call 0x1880
0xb67e: mov rdi,r15
0xb681: call 0x6b40
0xb686: mov rdi,qword ptr [rsp+0x8]
0xb68b: mov eax,dword ptr [rsp]
0xb68e: mov dword ptr [rdi],eax
0xb690: jmp 0xb5f2
0xb695: call 0x1990
0xb69a: nop word ptr [rax+rax]
0xbbc2: call 0x1990
0xbbc7: nop word ptr [rax+rax]
0xc459: iretl 
0xc57c: call 0x1990
0xc581: nop dword ptr [rax+rax]
0xc586: nop word ptr cs:[rax+rax]
0xca88: mov rdi,qword ptr [rbp-0x88]
0xca8f: call 0xaae0
0xca94: mov eax,0xc
0xca99: jmp 0xcca9
0xcb08: test rcx,rcx
0xcb0b: je 0xcbc0
0xcc96: mov rdi,qword ptr [rbp-0x88]
0xcc9d: test rdi,rdi
0xcca0: je 0xcca7
0xcd36: mov rdi,qword ptr [rbp-0xb8]
0xcd3d: call 0x1ac0
0xcd42: test rax,rax
0xcd45: mov qword ptr [rbp-0xc0],rax
0xcd4c: mov byte ptr [rbp-0xc9],0x1
0xcd53: jne 0xc667
0xcd59: mov rdi,qword ptr [rbp-0x88]
0xcd60: test rdi,rdi
0xcd63: je 0xcd2c
0xcd65: call 0xaae0
0xcd6a: jmp 0xcd2c
0xcd88: jmp 0xcca7
0xcddc: mov rdi,qword ptr [rbp-0x60]
0xcde0: call 0x1880
0xcde5: cmp byte ptr [rbp-0xc9],0x0
0xcdec: je 0xcca7
0xcdf2: mov rdi,qword ptr [rbp-0xc0]
0xcdf9: call 0x1880
0xcdfe: xor eax,eax
0xce00: jmp 0xcca9
0xce7a: nop word ptr [rax+rax]
0xd8fc: call 0x1990
0xd901: nop dword ptr [rax+rax]
0xd906: nop word ptr cs:[rax+rax]
0xdaf7: call 0x1990
0xdafc: nop dword ptr [rax]
0xde3b: call 0x1990
0xded1: cmp rbp,r8
0xded4: je 0xe360
0xdeda: and edx,0x1
0xdedd: cmove rax,rdi
0xdee1: mov qword ptr [rsp+0x68],rax
0xe286: cmp esi,0x1
0xe289: mov ecx,0x4
0xe28e: je 0xe2ae
0xe290: mov rax,qword ptr [rsp+0x48]
0xe295: test byte ptr [rax+0x1a],0x40
0xe299: jne 0xf01e
0xe29f: cmp qword ptr [rsp+0xb0],0x0
0xe2a8: jne 0xf01e
0xe2ae: xor edx,edx
0xe2b0: cmp rbp,r12
0xe2b3: movzx eax,bl
0xe2b6: setle dl
0xe2b9: or eax,ecx
0xe2bb: add edx,edx
0xe2bd: or eax,edx
0xee8c: nop dword ptr [rax]
0xf01e: xor ecx,ecx
0xf020: jmp 0xe2ae
0xf196: test eax,eax
0xf198: jne 0xf46d
0xf19e: mov rax,qword ptr [rbx]
0xf56b: call 0x1990
0xfdb7: xor eax,eax
0xfdb9: jmp 0xfd8a
0xfdbb: call 0x1990
0xfdc0: push r14
0xfdc2: push r13
0xfdc4: mov r10,rsi
0xfdc7: push r12
0xfdc9: push rbp
0xfdca: movsxd r11,ecx
0xfdcd: push rbx
0xfdce: mov rbp,rdx
0xfdd1: mov rbx,rdi
0xfdd4: sub rsp,0x20
0xfdd8: mov r12,qword ptr [rsi+0x48]
0xfddc: mov rax,qword ptr fs:0x28
0xfde5: mov qword ptr [rsp+0x18],rax
0xfdea: xor eax,eax
0xfdec: cmp dword ptr [rsi+0x90],0x1
0xfdf3: je 0xfe48
0xfdf5: mov rsi,r12
0xfdf8: mov rdi,r10
0xfdfb: call 0x7370
0xfe00: cmp eax,0x1
0xfe03: jle 0xfe48
0xfe05: mov rdx,qword ptr [r10+0x10]
0xfe09: cltq 
0xfe0b: mov dword ptr [rbx],0x1
0xfe11: add rax,r12
0xfe14: mov edx,dword ptr [rdx+r12*4]
0xfe18: mov dword ptr [rbx+0x8],edx
0xfe1b: mov qword ptr [r10+0x48],rax
0xfe1f: xor eax,eax
0xfe21: mov rcx,qword ptr [rsp+0x18]
0xfe26: xor rcx,qword ptr fs:0x28
0xfe2f: jne 0x10018
0xfe35: add rsp,0x20
0xfe39: pop rbx
0xfe3a: pop rbp
0xfe3b: pop r12
0xfe3d: pop r13
0xfe3f: pop r14
0xfe41: ret 
0xfe48: movzx eax,byte ptr [rbp+0x8]
0xfe4c: add r11,r12
0xfe4f: mov qword ptr [r10+0x48],r11
0xfe53: mov edx,eax
0xfe55: and edx,-0x5
0xfe58: cmp dl,0x1a
0xfe5b: je 0xfe80
0xfe5d: cmp al,0x1c
0xfe5f: je 0xfe80
0xfe61: cmp al,0x16
0xfe63: jne 0xfe6e
0xfe65: test r9b,r9b
0xfe68: je 0xffb2
0xfe6e: movzx eax,byte ptr [rbp]
0xfe72: mov dword ptr [rbx],0x0
0xfe78: mov byte ptr [rbx+0x8],al
0xfe7b: xor eax,eax
0xfe7d: jmp 0xfe21
0xfe80: mov r12,qword ptr [r10+0x68]
0xfe84: cmp r11,r12
0xfe87: jge 0xffa8
0xfe8d: movzx r13d,byte ptr [rbp]
0xfe92: xor r8d,r8d
0xfe95: jmp 0xfec2
0xfea0: mov rax,qword ptr [rbx+0x8]
0xfea4: mov byte ptr [rax+r8],r9b
0xfea8: add r8,0x1
0xfeac: cmp r8,0x20
0xfeb0: je 0xffa8
0xfeb6: movzx eax,byte ptr [rbp+0x8]
0xfeba: mov r11,qword ptr [r10+0x48]
0xfebe: mov r12,qword ptr [r10+0x68]
0xfec2: cmp al,0x1e
0xfec4: movsxd r14,r8d
0xfec7: je 0xff30
0xfec9: mov rdx,qword ptr [r10+0x8]
0xfecd: lea rax,[r11+0x1]
0xfed1: mov qword ptr [r10+0x48],rax
0xfed5: movzx r9d,byte ptr [rdx+r11]
0xfeda: cmp rax,r12
0xfedd: jge 0xffa8
0xfee3: cmp r13b,r9b
0xfee6: jne 0xfea0
0xfee8: mov rdx,qword ptr [r10+0x8]
0xfeec: cmp byte ptr [rdx+rax],0x5d
0xfef0: jne 0xfea0
0xfef2: add rax,0x1
0xfef6: mov qword ptr [r10+0x48],rax
0xfefa: mov rax,qword ptr [rbx+0x8]
0xfefe: mov byte ptr [rax+r14],0x0
0xff03: movzx eax,byte ptr [rbp+0x8]
0xff07: cmp al,0x1c
0xff09: je 0x1000b
0xff0f: cmp al,0x1e
0xff11: je 0xfffe
0xff17: cmp al,0x1a
0xff19: je 0xfff1
0xff1f: xor eax,eax
0xff21: jmp 0xfe21
0xff30: cmp byte ptr [r10+0x8b],0x0
0xff38: je 0xfec9
0xff3a: cmp byte ptr [r10+0x8c],0x0
0xff42: je 0xffd8
0xff48: cmp r11,qword ptr [r10+0x30]
0xff4c: je 0xff5d
0xff4e: mov rax,qword ptr [r10+0x10]
0xff52: cmp dword ptr [rax+r11*4],-0x1
0xff57: je 0xfec9
0xff5d: mov rax,qword ptr [r10+0x18]
0xff61: mov rax,qword ptr [rax+r11*8]
0xff65: add rax,qword ptr [r10]
0xff68: add rax,qword ptr [r10+0x28]
0xff6c: movzx r9d,byte ptr [rax]
0xff70: test r9b,-0x80
0xff74: jne 0xfec9
0xff7a: cmp dword ptr [r10+0x90],0x1
0xff82: mov eax,0x1
0xff87: je 0xff96
0xff89: mov rsi,r11
0xff8c: mov rdi,r10
0xff8f: call 0x7370
0xff94: cltq 
0xff96: add rax,r11
0xff99: mov qword ptr [r10+0x48],rax
0xff9d: jmp 0xfeda
0xffa8: mov eax,0x7
0xffad: jmp 0xfe21
0xffb2: mov rdi,rsp
0xffb5: mov rdx,r8
0xffb8: mov rsi,r10
0xffbb: call 0x5910
0xffc0: cmp byte ptr [rsp+0x8],0x15
0xffc5: mov eax,0xb
0xffca: je 0xfe6e
0xffd0: jmp 0xfe21
0xffd8: lea rax,[r11+0x1]
0xffdc: add r11,qword ptr [r10]
0xffdf: mov rdx,qword ptr [r10+0x28]
0xffe3: mov qword ptr [r10+0x48],rax
0xffe7: movzx r9d,byte ptr [r11+rdx]
0xffec: jmp 0xfeda
0xfff1: mov dword ptr [rbx],0x3
0xfff7: xor eax,eax
0xfff9: jmp 0xfe21
0xfffe: mov dword ptr [rbx],0x4
0x10004: xor eax,eax
0x10006: jmp 0xfe21
0x1000b: mov dword ptr [rbx],0x2
0x10011: xor eax,eax
0x10013: jmp 0xfe21
0x10018: call 0x1990
0x1001d: nop dword ptr [rax]
0x10718: call 0x1990
0x1071d: nop dword ptr [rax]
0x10720: push r14
0x10722: mov r14,rdi
0x10725: push r13
0x10727: mov r13,rsi
0x1072a: push r12
0x1072c: mov r12,-0x2
0x10733: push rbp
0x10734: mov rbp,rdx
0x10737: push rbx
0x10738: mov rbx,-0x1
0x1073f: nop 
0x10740: mov rdx,rbp
0x10743: mov rsi,r14
0x10746: mov rdi,r13
0x10749: call 0x10020
0x1074e: cltq 
0x10750: add qword ptr [r14+0x48],rax
0x10754: movzx eax,byte ptr [r13+0x8]
0x10759: movzx edx,byte ptr [r13]
0x1075e: cmp al,0x2
0x10760: je 0x107b0
0x10762: cmp al,0x18
0x10764: je 0x107b7
0x10766: cmp dl,0x2c
0x10769: je 0x107b7
0x1076b: cmp al,0x1
0x1076d: je 0x10778
0x1076f: mov rbx,r12
0x10772: jmp 0x10740
0x10778: lea eax,[rdx-0x30]
0x1077b: cmp al,0x9
0x1077d: ja 0x1076f
0x1077f: cmp rbx,-0x2
0x10783: je 0x1076f
0x10785: cmp rbx,-0x1
0x10789: je 0x107c8
0x1078b: lea rax,[rbx+rbx*4]
0x1078f: lea rbx,[rdx+rax*2]
0x10793: mov eax,0x8030
0x10798: cmp rbx,0x8030
0x1079f: cmovg rbx,rax
0x107a3: sub rbx,0x30
0x107a7: jmp 0x10740
0x107b0: mov rbx,-0x2
0x107b7: mov rax,rbx
0x107ba: pop rbx
0x107bb: pop rbp
0x107bc: pop r12
0x107be: pop r13
0x107c0: pop r14
0x107c2: ret 
0x107c8: movzx ebx,dl
0x107cb: sub ebx,0x30
0x107ce: movsxd rbx,ebx
0x107d1: jmp 0x10740
0x10c6b: mov rdi,qword ptr [rsp+0x28]
0x10c70: lea rsi,[rip-0xa0d7]
0x10c77: xor edx,edx
0x10c79: call 0x5d00
0x10c7e: mov qword ptr [rsp+0x28],0x0
0x10c87: jmp 0x108f0
0x10e80: mov rax,qword ptr [rsp+0x40]
0x10e85: mov dword ptr [rax],0xa
0x10e8b: cmp qword ptr [rsp+0x28],0x0
0x10e91: jne 0x10c6b
0x10e97: jmp 0x108e0
0x11c7e: call 0x1990
0x11c83: mov rax,qword ptr [rsp+0x18]
0x11c88: cmp byte ptr [rax+0x8],0x2
0x11c8c: jne 0x10e80
0x11c92: mov rax,qword ptr [rsp+0x40]
0x11c97: mov dword ptr [rax],0x9
0x11c9d: jmp 0x10e8b
0x11e3d: call 0x1990
0x11e42: nop dword ptr [rax]
0x11e46: nop word ptr cs:[rax+rax]
0x11fca: call 0x1990
0x11fcf: nop 
0x120c4: mov esi,0x1
0x120c9: nop dword ptr [rax]
0x120d0: add rsi,rsi
0x120d3: cmp qword ptr [rsp],rsi
0x120d7: jae 0x120d0
0x120d9: lea rbp,[rsi-0x1]
0x126a5: mov rsi,qword ptr [rsp+0x28]
0x126aa: mov rdi,rbp
0x126ad: call 0x5dd0
0x126b2: test eax,eax
0x126b4: jne 0x122f0
0x126ba: movzx esi,byte ptr [rsp+0x10b]
0x126c2: mov ecx,dword ptr [rbx+0xb4]
0x126c8: test sil,sil
0x126cb: je 0x1227f
0x126d1: jmp 0x12272
0x13063: lea rcx,[rip+0x2496]
0x1306a: lea rsi,[rip+0x1ecf]
0x13071: lea rdi,[rip+0x1f8d]
0x13078: mov edx,0x5b0
0x1307d: call 0x1a00
0x130a1: lea rcx,[rip+0x2458]
0x130a8: lea rsi,[rip+0x1e91]
0x130af: lea rdi,[rip+0x1f45]
0x130b6: mov edx,0x5af
0x130bb: call 0x1a00
0x130c0: call 0x1990
0x130c5: nop 
0x130c6: nop word ptr cs:[rax+rax]
0x13140: mov rax,qword ptr [rip+0x2082b9]
0x13147: mov qword ptr [rip+0x2082b2],rdi
0x1314e: ret 
0x13385: cmp eax,0x1
0x13388: je 0x135a0
0x1338e: cmp eax,0x2
0x13391: jne 0x13680
0x13397: cmp r14,qword ptr [r12]
0x1339b: ja 0x13661
0x133a1: mov r9d,0x2
0x13460: mov r14,qword ptr [r12]
0x13464: cmp r14,rcx
0x13467: ja 0x132d1
0x1346d: test r14,r14
0x13470: mov r13,r14
0x13473: jg 0x132d8
0x13479: nop dword ptr [rax]
0x135a0: cmp qword ptr [r12],rdx
0x135a4: mov r9d,0x1
0x135aa: jae 0x133a7
0x135b0: lea rcx,[rdx*8]
0x135b8: mov rdi,qword ptr [r12+0x8]
0x135bd: mov byte ptr [rsp+0x18],r9b
0x135c2: mov qword ptr [rsp+0x10],rdx
0x135c7: mov rsi,rcx
0x135ca: mov qword ptr [rsp+0x8],rcx
0x135cf: call 0x1b30
0x135d4: test rax,rax
0x135d7: mov r14,rax
0x135da: je 0x1362a
0x135dc: mov rcx,qword ptr [rsp+0x8]
0x135e1: mov rdi,qword ptr [r12+0x10]
0x135e6: mov rsi,rcx
0x135e9: call 0x1b30
0x135ee: test rax,rax
0x135f1: mov rdx,qword ptr [rsp+0x10]
0x135f6: movzx r9d,byte ptr [rsp+0x18]
0x135fc: je 0x13632
0x135fe: mov qword ptr [r12+0x8],r14
0x13603: mov qword ptr [r12+0x10],rax
0x13608: mov qword ptr [r12],rdx
0x1360c: jmp 0x133a7
0x13632: mov rdi,r14
0x13635: call 0x1880
0x1363a: xor r9d,r9d
0x1363d: jmp 0x1341d
0x13661: lea rcx,[rip+0x1e58]
0x13668: lea rsi,[rip+0x18b1]
0x1366f: lea rdi,[rip+0x19b7]
0x13676: mov edx,0x1fb
0x1367b: call 0x1a00
0x13680: lea rcx,[rip+0x1e39]
0x13687: lea rsi,[rip+0x1892]
0x1368e: lea rdi,[rip+0x197b]
0x13695: mov edx,0x1f9
0x1369a: call 0x1a00
0x1369f: nop 
0x136a0: push r15
0x136a2: push r14
0x136a4: push r13
0x136a6: push r12
0x136a8: mov r12,rdi
0x136ab: push rbp
0x136ac: push rbx
0x136ad: mov rbp,r8
0x136b0: mov rbx,rdx
0x136b3: mov rdx,rbp
0x136b6: sub rsp,0x28
0x136ba: shr rdx,0x3f
0x136be: mov rax,qword ptr [rsp+0x70]
0x136c3: mov edi,edx
0x136c5: mov r8d,dword ptr [rsp+0x78]
0x136ca: shr rax,0x3f
0x136ce: or dil,al
0x136d1: jne 0x137a0
0x136d7: test rbx,rbx
0x136da: js 0x137a0
0x136e0: mov r15,rbx
0x136e3: add r15,rbp
0x136e6: jo 0x137a0
0x136ec: test rbp,rbp
0x136ef: mov r14,rcx
0x136f2: mov rcx,r9
0x136f5: je 0x137b0
0x136fb: xor r13d,r13d
0x136fe: test rbx,rbx
0x13701: mov qword ptr [rsp+0x8],rsi
0x13706: jne 0x13750
0x13708: movzx r8d,r8b
0x1370c: mov rdx,r15
0x1370f: mov rsi,r14
0x13712: push r8
0x13714: push qword ptr [rsp+0x70]
0x13718: mov rdi,r12
0x1371b: mov r9,qword ptr [rsp+0x80]
0x13723: mov r8,qword ptr [rsp+0x70]
0x13728: call 0x13220
0x1372d: mov rdi,r13
0x13730: mov rbx,rax
0x13733: call 0x1880
0x13738: pop rax
0x13739: pop rdx
0x1373a: add rsp,0x28
0x1373e: mov rax,rbx
0x13741: pop rbx
0x13742: pop rbp
0x13743: pop r12
0x13745: pop r13
0x13747: pop r14
0x13749: pop r15
0x1374b: ret 
0x13750: mov rdi,r15
0x13753: mov dword ptr [rsp+0x1c],r8d
0x13758: mov qword ptr [rsp+0x10],r9
0x1375d: call 0x1ac0
0x13762: test rax,rax
0x13765: mov r13,rax
0x13768: je 0x137a0
0x1376a: mov rsi,qword ptr [rsp+0x8]
0x1376f: mov rdx,rbx
0x13772: mov rdi,rax
0x13775: call 0x1a90
0x1377a: lea rdi,[r13+rbx]
0x1377f: mov rsi,r14
0x13782: mov rdx,rbp
0x13785: mov r14,r13
0x13788: call 0x1a90
0x1378d: mov rcx,qword ptr [rsp+0x10]
0x13792: mov r8d,dword ptr [rsp+0x1c]
0x13797: jmp 0x13708
0x137a0: mov rbx,-0x2
0x137a7: jmp 0x1373a
0x137b0: mov r14,rsi
0x137b3: xor r13d,r13d
0x137b6: jmp 0x13708
0x137c0: mov eax,edx
0x137c2: push r14
0x137c4: push r13
0x137c6: and eax,0x1
0x137c9: push r12
0x137cb: push rbp
0x137cc: cmp eax,0x1
0x137cf: push rbx
0x137d0: mov rbx,rdi
0x137d3: sbb r14,r14
0x137d6: mov qword ptr [rdi],0x0
0x137dd: mov qword ptr [rdi+0x8],0x0
0x137e5: and r14d,0xfd4fca
0x137ec: mov qword ptr [rdi+0x10],0x0
0x137f4: mov edi,0x100
0x137f9: mov r12,rsi
0x137fc: mov ebp,edx
0x137fe: add r14,0x3b2fc
0x13805: call 0x1ac0
0x1380a: test rax,rax
0x1380d: mov qword ptr [rbx+0x20],rax
0x13811: je 0x138c0
0x13817: mov r13,rbp
0x1381a: shl r13,0x15
0x1381e: and r13d,0x400000
0x13825: or r13,r14
0x13828: test bpl,0x4
0x1382c: jne 0x13890
0x1382e: and byte ptr [rbx+0x38],0x7f
0x13832: movzx edx,byte ptr [rbx+0x38]
0x13836: shr ebp,0x3
0x13839: mov rdi,r12
0x1383c: and ebp,0x1
0x1383f: mov qword ptr [rbx+0x28],0x0
0x13847: shl ebp,0x4
0x1384a: and edx,-0x11
0x1384d: or ebp,edx
0x1384f: mov byte ptr [rbx+0x38],bpl
0x13853: call 0x1980
0x13858: mov rcx,r13
0x1385b: mov rdx,rax
0x1385e: mov rsi,r12
0x13861: mov rdi,rbx
0x13864: call 0x11fd0
0x13869: cmp eax,0x10
0x1386c: mov ebp,eax
0x1386e: je 0x138a8
0x13870: test eax,eax
0x13872: jne 0x138ad
0x13874: mov rdi,rbx
0x13877: call 0x13150
0x1387c: pop rbx
0x1387d: mov eax,ebp
0x1387f: pop rbp
0x13880: pop r12
0x13882: pop r13
0x13884: pop r14
0x13886: ret 
0x13890: and r13,-0x41
0x13894: or byte ptr [rbx+0x38],-0x80
0x13898: or r13,0x100
0x1389f: jmp 0x13832
0x138a8: mov ebp,0x8
0x138ad: mov rdi,qword ptr [rbx+0x20]
0x138b1: call 0x1880
0x138b6: mov qword ptr [rbx+0x20],0x0
0x138be: jmp 0x1387c
0x138c0: mov ebp,0xc
0x138c5: pop rbx
0x138c6: mov eax,ebp
0x138c8: pop rbp
0x138c9: pop r12
0x138cb: pop r13
0x138cd: pop r14
0x138cf: ret 
0x138d0: push r13
0x138d2: push r12
0x138d4: push rbp
0x138d5: push rbx
0x138d6: sub rsp,0x8
0x138da: cmp edi,0x10
0x138dd: ja 0x13940
0x138df: lea rax,[rip+0x1c7a]
0x138e6: movsxd rdi,edi
0x138e9: lea rsi,[rip+0x1d10]
0x138f0: mov rbp,rdx
0x138f3: mov edx,0x5
0x138f8: mov r12,rcx
0x138fb: add rsi,qword ptr [rax+rdi*8]
0x138ff: xor edi,edi
0x13901: call 0x1960
0x13906: mov rdi,rax
0x13909: mov r13,rax
0x1390c: call 0x1980
0x13911: test r12,r12
0x13914: lea rbx,[rax+0x1]
0x13918: je 0x1392d
0x1391a: cmp rbx,r12
0x1391d: mov rdx,rbx
0x13920: ja 0x13948
0x13922: mov rsi,r13
0x13925: mov rdi,rbp
0x13928: call 0x1a90
0x1392d: add rsp,0x8
0x13931: mov rax,rbx
0x13934: pop rbx
0x13935: pop rbp
0x13936: pop r12
0x13938: pop r13
0x1393a: ret 
0x13940: call 0x1890
0x13945: nop dword ptr [rax]
0x13948: lea rdx,[r12-0x1]
0x1394d: mov byte ptr [rbp+r12-0x1],0x0
0x13953: jmp 0x13922
0x13960: push rbx
0x13961: mov rbx,rdi
0x13964: mov rdi,qword ptr [rdi]
0x13967: test rdi,rdi
0x1396a: je 0x13971
0x1396c: call 0x7150
0x13971: mov rdi,qword ptr [rbx+0x20]
0x13975: mov qword ptr [rbx],0x0
0x1397c: mov qword ptr [rbx+0x8],0x0
0x13984: call 0x1880
0x13989: mov rdi,qword ptr [rbx+0x28]
0x1398d: mov qword ptr [rbx+0x20],0x0
0x13995: call 0x1880
0x1399a: mov qword ptr [rbx+0x28],0x0
0x139a2: pop rbx
0x139a3: ret 
0x139b0: test r8d,0xfffffff8
0x139b7: jne 0x13a48
0x139bd: push r13
0x139bf: push r12
0x139c1: mov r13,rdx
0x139c4: push rbp
0x139c5: push rbx
0x139c6: mov r12,rcx
0x139c9: mov ebx,r8d
0x139cc: mov rbp,rdi
0x139cf: sub rsp,0x18
0x139d3: test r8b,0x4
0x139d7: jne 0x13a28
0x139d9: mov rdi,rsi
0x139dc: mov qword ptr [rsp+0x8],rsi
0x139e1: call 0x1980
0x139e6: xor ecx,ecx
0x139e8: test byte ptr [rbp+0x38],0x10
0x139ec: mov rdx,rax
0x139ef: mov rsi,qword ptr [rsp+0x8]
0x139f4: je 0x13a36
0x139f6: sub rsp,0x8
0x139fa: push rbx
0x139fb: push 0x0
0x139fd: push 0x0
0x139ff: mov rdi,rbp
0x13a02: mov r9,rdx
0x13a05: mov r8,rdx
0x13a08: call 0xde40
0x13a0d: add rsp,0x20
0x13a11: test eax,eax
0x13a13: setne al
0x13a16: add rsp,0x18
0x13a1a: pop rbx
0x13a1b: movzx eax,al
0x13a1e: pop rbp
0x13a1f: pop r12
0x13a21: pop r13
0x13a23: ret 
0x13a28: test byte ptr [rbp+0x38],0x10
0x13a2c: mov rcx,qword ptr [rcx]
0x13a2f: mov rdx,qword ptr [r12+0x8]
0x13a34: jne 0x139f6
0x13a36: sub rsp,0x8
0x13a3a: push rbx
0x13a3b: push r12
0x13a3d: push r13
0x13a3f: jmp 0x139ff
0x13a48: mov eax,0x2
0x13a4d: ret 
0x13a50: sub rsp,0x8
0x13a54: mov r9,rdx
0x13a57: push 0x1
0x13a59: push r8
0x13a5b: xor r8d,r8d
0x13a5e: call 0x13220
0x13a63: add rsp,0x18
0x13a67: ret 
0x13a90: sub rsp,0x8
0x13a94: push 0x1
0x13a96: push qword ptr [rsp+0x20]
0x13a9a: push qword ptr [rsp+0x20]
0x13a9e: push 0x0
0x13aa0: call 0x136a0
0x13aa5: add rsp,0x28
0x13aa9: ret 
0x13ab0: sub rsp,0x8
0x13ab4: push 0x0
0x13ab6: push qword ptr [rsp+0x28]
0x13aba: push qword ptr [rsp+0x28]
0x13abe: push qword ptr [rsp+0x28]
0x13ac2: call 0x136a0
0x13ac7: add rsp,0x28
0x13acb: ret 
0x13ad0: test rdx,rdx
0x13ad3: jne 0x13af8
0x13ad5: and byte ptr [rdi+0x38],-0x7
0x13ad9: mov qword ptr [rsi],0x0
0x13ae0: mov qword ptr [rsi+0x10],0x0
0x13ae8: mov qword ptr [rsi+0x8],0x0
0x13af0: ret 
0x13af8: movzx eax,byte ptr [rdi+0x38]
0x13afc: and eax,-0x7
0x13aff: or eax,0x2
0x13b02: mov byte ptr [rdi+0x38],al
0x13b05: mov qword ptr [rsi],rdx
0x13b08: mov qword ptr [rsi+0x8],rcx
0x13b0c: mov qword ptr [rsi+0x10],r8
0x13b10: ret 
0x13b20: push r12
0x13b22: push rbp
0x13b23: mov rbp,rdi
0x13b26: push rbx
0x13b27: call 0x18e0
0x13b2c: mov ebx,dword ptr [rbp]
0x13b2f: mov rdi,rbp
0x13b32: mov r12,rax
0x13b35: call 0x13d60
0x13b3a: and ebx,0x20
0x13b3d: test ebx,ebx
0x13b3f: jne 0x13b58
0x13b41: test eax,eax
0x13b43: je 0x13b4f
0x13b45: test r12,r12
0x13b48: mov eax,0xffffffff
0x13b4d: je 0x13b88
0x13b4f: pop rbx
0x13b50: pop rbp
0x13b51: pop r12
0x13b53: ret 
0x13b58: test eax,eax
0x13b5a: jne 0x13b78
0x13b5c: call 0x18a0
0x13b61: mov dword ptr [rax],0x0
0x13b67: mov eax,0xffffffff
0x13b6c: pop rbx
0x13b6d: pop rbp
0x13b6e: pop r12
0x13b70: ret 
0x13b78: pop rbx
0x13b79: mov eax,0xffffffff
0x13b7e: pop rbp
0x13b7f: pop r12
0x13b81: ret 
0x13b88: call 0x18a0
0x13b8d: cmp dword ptr [rax],0x9
0x13b90: pop rbx
0x13b91: pop rbp
0x13b92: pop r12
0x13b94: setne al
0x13b97: movzx eax,al
0x13b9a: neg eax
0x13b9c: ret 
0x13c50: push r13
0x13c52: push r12
0x13c54: push rbp
0x13c55: push rbx
0x13c56: mov ebx,edi
0x13c58: sub rsp,0x8
0x13c5c: cmp edi,0x2
0x13c5f: ja 0x13c82
0x13c61: call 0x13c90
0x13c66: mov r12d,eax
0x13c69: call 0x18a0
0x13c6e: mov r13d,dword ptr [rax]
0x13c71: mov rbp,rax
0x13c74: mov edi,ebx
0x13c76: call 0x1a20
0x13c7b: mov ebx,r12d
0x13c7e: mov dword ptr [rbp],r13d
0x13c82: add rsp,0x8
0x13c86: mov eax,ebx
0x13c88: pop rbx
0x13c89: pop rbp
0x13c8a: pop r12
0x13c8c: pop r13
0x13c8e: ret 
0x13c90: and esi,0x80000
0x13c96: mov eax,0x406
0x13c9b: mov edx,0x3
0x13ca0: cmovne esi,eax
0x13ca3: xor eax,eax
0x13ca5: jmp 0x13de0
0x13d10: sub rsp,0x8
0x13d14: mov edi,0xe
0x13d19: call 0x1af0
0x13d1e: test rax,rax
0x13d21: je 0x13d40
0x13d23: cmp byte ptr [rax],0x0
0x13d26: lea rdx,[rip+0x1a6b]
0x13d2d: cmove rax,rdx
0x13d31: add rsp,0x8
0x13d35: ret 
0x13d40: lea rax,[rip+0x1a51]
0x13d47: add rsp,0x8
0x13d4b: ret 
0x13d60: push r12
0x13d62: push rbp
0x13d63: push rbx
0x13d64: mov rbx,rdi
0x13d67: call 0x1aa0
0x13d6c: test eax,eax
0x13d6e: mov rdi,rbx
0x13d71: js 0x13dc7
0x13d73: call 0x1b10
0x13d78: test eax,eax
0x13d7a: jne 0x13da8
0x13d7c: mov rdi,rbx
0x13d7f: call 0x14060
0x13d84: test eax,eax
0x13d86: je 0x13dc4
0x13d88: call 0x18a0
0x13d8d: mov r12d,dword ptr [rax]
0x13d90: mov rdi,rbx
0x13d93: mov rbp,rax
0x13d96: call 0x1940
0x13d9b: test r12d,r12d
0x13d9e: jne 0x13dd0
0x13da0: pop rbx
0x13da1: pop rbp
0x13da2: pop r12
0x13da4: ret 
0x13da8: mov rdi,rbx
0x13dab: call 0x1aa0
0x13db0: xor esi,esi
0x13db2: mov edx,0x1
0x13db7: mov edi,eax
0x13db9: call 0x19f0
0x13dbe: cmp rax,-0x1
0x13dc2: jne 0x13d7c
0x13dc4: mov rdi,rbx
0x13dc7: pop rbx
0x13dc8: pop rbp
0x13dc9: pop r12
0x13dcb: jmp 0x1940
0x13dd0: mov dword ptr [rbp],r12d
0x13dd4: mov eax,0xffffffff
0x13dd9: jmp 0x13da0
0x13e31: cmp esi,0x406
0x13e37: jne 0x13e80
0x13e39: mov rax,qword ptr [rsp+0x10]
0x13e3e: cmp dword ptr [rip+0x2075b3],0x0
0x13e45: mov dword ptr [rsp],0x18
0x13e4c: mov r12d,dword ptr [rax+0x10]
0x13e50: mov edx,r12d
0x13e53: js 0x13f83
0x13e59: xor eax,eax
0x13e5b: mov esi,0x406
0x13e60: call 0x1900
0x13e65: test eax,eax
0x13e67: mov ebx,eax
0x13e69: js 0x13ff8
0x13e6f: mov dword ptr [rip+0x20757f],0x1
0x13e79: jmp 0x13ec0
0x13e80: cmp esi,0xb
0x13e83: je 0x13eb0
0x13e85: jg 0x13ee0
0x13e87: cmp esi,0x4
0x13e8a: je 0x13f60
0x13e90: jg 0x13f50
0x13e96: cmp esi,0x2
0x13e99: je 0x13f60
0x13e9f: jg 0x13eb0
0x13ea1: cmp esi,0x1
0x13ea4: jne 0x13f08
0x13ea6: nop word ptr cs:[rax+rax]
0x13eb0: mov edi,ebp
0x13eb2: xor eax,eax
0x13eb4: call 0x1900
0x13eb9: mov ebx,eax
0x13ebb: nop dword ptr [rax+rax]
0x13ee0: cmp esi,0x407
0x13ee6: jg 0x13f30
0x13ee8: cmp esi,0x406
0x13eee: jge 0x13f60
0x13ef0: cmp esi,0x401
0x13ef6: je 0x13eb0
0x13ef8: cmp esi,0x402
0x13efe: je 0x13f60
0x13f00: cmp esi,0x400
0x13f06: je 0x13f60
0x13f08: mov eax,dword ptr [rsp]
0x13f0b: cmp eax,0x2f
0x13f0e: ja 0x1404a
0x13f14: add rax,qword ptr [rsp+0x10]
0x13f19: mov rdx,qword ptr [rax]
0x13f1c: mov edi,ebp
0x13f1e: xor eax,eax
0x13f20: call 0x1900
0x13f25: mov ebx,eax
0x13f27: jmp 0x13ec0
0x13f30: cmp esi,0x409
0x13f36: je 0x13f60
0x13f38: jl 0x13eb0
0x13f3e: cmp esi,0x40a
0x13f44: jne 0x13f08
0x13f46: jmp 0x13eb0
0x13f50: cmp esi,0x9
0x13f53: je 0x13eb0
0x13f59: jg 0x13f60
0x13f5b: cmp esi,0x8
0x13f5e: jne 0x13f08
0x13f60: mov eax,dword ptr [rsp]
0x13f63: cmp eax,0x2f
0x13f66: ja 0x14054
0x13f6c: add rax,qword ptr [rsp+0x10]
0x13f71: mov edx,dword ptr [rax]
0x13f73: mov edi,ebp
0x13f75: xor eax,eax
0x13f77: call 0x1900
0x13f7c: mov ebx,eax
0x13f7e: jmp 0x13ec0
0x13f83: xor esi,esi
0x13f85: xor eax,eax
0x13f87: call 0x1900
0x13f8c: test eax,eax
0x13f8e: mov ebx,eax
0x13f90: js 0x13ec0
0x13f96: cmp dword ptr [rip+0x20745b],-0x1
0x13f9d: jne 0x13ec0
0x13fa3: xor eax,eax
0x13fa5: mov esi,0x1
0x13faa: mov edi,ebx
0x13fac: call 0x1900
0x13fb1: test eax,eax
0x13fb3: js 0x13fd1
0x13fb5: or eax,0x1
0x13fb8: mov esi,0x2
0x13fbd: mov edi,ebx
0x13fbf: mov edx,eax
0x13fc1: xor eax,eax
0x13fc3: call 0x1900
0x13fc8: cmp eax,-0x1
0x13fcb: jne 0x13ec0
0x13fd1: call 0x18a0
0x13fd6: mov r12d,dword ptr [rax]
0x13fd9: mov rbp,rax
0x13fdc: mov edi,ebx
0x13fde: call 0x1a20
0x13fe3: mov ebx,0xffffffff
0x13fe8: mov dword ptr [rbp],r12d
0x13fec: jmp 0x13ec0
0x13ff8: call 0x18a0
0x13ffd: cmp dword ptr [rax],0x16
0x14000: jne 0x13e6f
0x14006: xor esi,esi
0x14008: xor eax,eax
0x1400a: mov edx,r12d
0x1400d: mov edi,ebp
0x1400f: call 0x1900
0x14014: test eax,eax
0x14016: mov ebx,eax
0x14018: js 0x13ec0
0x1401e: mov dword ptr [rip+0x2073d0],0xffffffff
0x14028: jmp 0x13fa3
0x1402d: call 0x1990
0x1404a: mov rax,qword ptr [rsp+0x8]
0x1404f: jmp 0x13f19
0x14054: mov rax,qword ptr [rsp+0x8]
0x14059: jmp 0x13f71
0x14060: test rdi,rdi
0x14063: push rbx
0x14064: mov rbx,rdi
0x14067: je 0x1407a
0x14069: call 0x1b10
0x1406e: test eax,eax
0x14070: je 0x1407a
0x14072: test dword ptr [rbx],0x100
0x14078: jne 0x14088
0x1407a: mov rdi,rbx
0x1407d: pop rbx
0x1407e: jmp 0x1ae0
0x14088: mov rdi,rbx
0x1408b: mov edx,0x1
0x14090: xor esi,esi
0x14092: call 0x5820
0x14097: mov rdi,rbx
0x1409a: pop rbx
0x1409b: jmp 0x1ae0
0x140a0: push r15
0x140a2: push r14
0x140a4: mov r15,rdx
0x140a7: push r13
0x140a9: push r12
0x140ab: lea r12,[rip+0x2049be]
0x140b2: push rbp
0x140b3: lea rbp,[rip+0x2049be]
0x140ba: push rbx
0x140bb: mov r13d,edi
0x140be: mov r14,rsi
0x140c1: sub rbp,r12
0x140c4: sub rsp,0x8
0x140c8: sar rbp,0x3
0x140cc: call 0x1838
0x140d1: test rbp,rbp
0x140d4: je 0x140f6
0x140d6: xor ebx,ebx
0x140d8: nop dword ptr [rax+rax]
0x140e0: mov rdx,r15
0x140e3: mov rsi,r14
0x140e6: mov edi,r13d
0x140e9: call qword ptr [r12+rbx*8]
0x140ed: add rbx,0x1
0x140f1: cmp rbp,rbx
0x140f4: jne 0x140e0
0x140f6: add rsp,0x8
0x140fa: pop rbx
0x140fb: pop rbp
0x140fc: pop r12
0x140fe: pop r13
0x14100: pop r14
0x14102: pop r15
0x14104: ret 
0x14110: rep ret 
