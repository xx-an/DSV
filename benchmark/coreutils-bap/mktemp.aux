0x1758: sub rsp,0x8
0x175c: mov rax,qword ptr [rip+0x20887d]
0x1763: test rax,rax
0x1766: je 0x176a
0x1768: call rax
0x176a: add rsp,0x8
0x176e: ret 
0x1776: jmp qword ptr [rip+0x20865c]
0x17e0: jmp qword ptr [rip+0x20862a]
0x1830: jmp qword ptr [rip+0x208602]
0x1850: jmp qword ptr [rip+0x2085f2]
0x18d0: jmp qword ptr [rip+0x2085b2]
0x1900: jmp qword ptr [rip+0x20859a]
0x1980: jmp qword ptr [rip+0x20855a]
0x19a0: jmp qword ptr [rip+0x20854a]
0x1a10: jmp qword ptr [rip+0x208512]
0x1a40: jmp qword ptr [rip+0x2084fa]
0x1a70: jmp qword ptr [rip+0x2084e2]
0x1ad0: jmp qword ptr [rip+0x2084b2]
0x1b30: jmp qword ptr [rip+0x208482]
0x1b40: jmp qword ptr [rip+0x20847a]
0x1b50: jmp qword ptr [rip+0x208472]
0x1b60: jmp qword ptr [rip+0x20848a]
0x1db1: mov rdi,r8
0x1db4: mov qword ptr [rsp+0x18],r8
0x1db9: call 0x28e0
0x1dbe: mov r8,qword ptr [rsp+0x18]
0x1dc3: cmp rax,r8
0x1dc6: jne 0x21f7
0x1efe: lea rsi,[rip+0x4edb]
0x1f05: mov rbx,rax
0x1f08: mov edx,0x5
0x1f0d: xor edi,edi
0x1f0f: call 0x1890
0x1f14: mov rcx,rbx
0x1f17: mov rdx,rax
0x1f1a: xor esi,esi
0x1f1c: mov edi,0x1
0x1f21: xor eax,eax
0x1f23: call 0x1a90
0x1fa9: mov edx,0x5
0x1fae: mov rbp,rax
0x1fb1: lea rsi,[rip+0x4f30]
0x1fb8: jmp 0x206a
0x203e: jmp 0x1eae
0x205b: lea rsi,[rip+0x4e56]
0x2062: mov rbp,rax
0x2065: mov edx,0x5
0x206a: xor edi,edi
0x206c: call 0x1890
0x2071: mov rbx,rax
0x2074: call 0x17b0
0x2079: mov esi,dword ptr [rax]
0x207b: mov rcx,rbp
0x207e: mov rdx,rbx
0x2081: xor edi,edi
0x2083: xor eax,eax
0x2085: call 0x1a90
0x208a: jmp 0x1ea9
0x2111: lea rsi,[rip+0x4d28]
0x2118: mov rbx,rax
0x211b: mov edx,0x5
0x2120: xor edi,edi
0x2122: call 0x1890
0x2127: mov rcx,rbx
0x212a: mov rdx,rax
0x212d: xor esi,esi
0x212f: mov edi,0x1
0x2134: xor eax,eax
0x2136: call 0x1a90
0x219b: lea rsi,[rip+0x4cd6]
0x21a2: mov rbx,rax
0x21a5: mov edx,0x5
0x21aa: xor edi,edi
0x21ac: call 0x1890
0x21b1: mov rcx,rbx
0x21b4: mov rdx,rax
0x21b7: xor esi,esi
0x21b9: mov edi,0x1
0x21be: xor eax,eax
0x21c0: call 0x1a90
0x21cd: lea rsi,[rip+0x4559]
0x21d4: mov rbx,rax
0x21d7: mov edx,0x5
0x21dc: xor edi,edi
0x21de: call 0x1890
0x21e3: mov rcx,rbx
0x21e6: mov rdx,rax
0x21e9: xor esi,esi
0x21eb: mov edi,0x1
0x21f0: xor eax,eax
0x21f2: call 0x1a90
0x21f7: mov rdi,r8
0x21fa: call 0x47c0
0x21ff: lea rsi,[rip+0x4c0a]
0x2206: mov rbx,rax
0x2209: mov edx,0x5
0x220e: xor edi,edi
0x2210: call 0x1890
0x2215: mov rcx,rbx
0x2218: mov rdx,rax
0x221b: xor esi,esi
0x221d: mov edi,0x1
0x2222: xor eax,eax
0x2224: call 0x1a90
0x2229: nop dword ptr [rax]
0x225a: hlt 
0x225b: nop dword ptr [rax+rax]
0x2260: lea rdi,[rip+0x207e19]
0x2267: push rbp
0x2268: lea rax,[rip+0x207e11]
0x226f: cmp rax,rdi
0x2272: mov rbp,rsp
0x2275: je 0x2290
0x2277: mov rax,qword ptr [rip+0x207d52]
0x227e: test rax,rax
0x2281: je 0x2290
0x2283: pop rbp
0x2284: jmp rax
0x2290: pop rbp
0x2291: ret 
0x22a0: lea rdi,[rip+0x207dd9]
0x22a7: lea rsi,[rip+0x207dd2]
0x22ae: push rbp
0x22af: sub rsi,rdi
0x22b2: mov rbp,rsp
0x22b5: sar rsi,0x3
0x22b9: mov rax,rsi
0x22bc: shr rax,0x3f
0x22c0: add rsi,rax
0x22c3: sar rsi
0x22c6: je 0x22e0
0x22c8: mov rax,qword ptr [rip+0x207d19]
0x22cf: test rax,rax
0x22d2: je 0x22e0
0x22d4: pop rbp
0x22d5: jmp rax
0x22e0: pop rbp
0x22e1: ret 
0x2301: push rbp
0x2302: mov rbp,rsp
0x2305: je 0x2313
0x2307: mov rdi,qword ptr [rip+0x207cfa]
0x230e: call 0x1b60
0x2313: call 0x2260
0x2318: mov byte ptr [rip+0x207da9],0x1
0x231f: pop rbp
0x2320: ret 
0x2330: push rbp
0x2331: mov rbp,rsp
0x2334: pop rbp
0x2335: jmp 0x22a0
0x2340: cmp byte ptr [rip+0x207d82],0x0
0x2347: je 0x2368
0x2349: sub rsp,0x8
0x234d: mov rdi,qword ptr [rip+0x207d6c]
0x2354: call 0x2790
0x2359: test eax,eax
0x235b: jne 0x236d
0x235d: add rsp,0x8
0x2361: ret 
0x2368: jmp 0x2830
0x236d: mov edi,0x1
0x2372: call 0x17e0
0x2377: nop word ptr [rax+rax]
0x2810: mov qword ptr [rip+0x2078c1],rdi
0x2817: ret 
0x2820: mov byte ptr [rip+0x2078a9],dil
0x2827: ret 
0x2830: push rbp
0x2831: push rbx
0x2832: sub rsp,0x8
0x2836: mov rdi,qword ptr [rip+0x20784b]
0x283d: call 0x2790
0x2842: test eax,eax
0x2844: je 0x285c
0x2846: call 0x17b0
0x284b: cmp byte ptr [rip+0x20787e],0x0
0x2852: mov rbx,rax
0x2855: je 0x2873
0x2857: cmp dword ptr [rax],0x20
0x285a: jne 0x2873
0x285c: mov rdi,qword ptr [rip+0x20785d]
0x2863: call 0x2790
0x2868: test eax,eax
0x286a: jne 0x28b2
0x286c: add rsp,0x8
0x2870: pop rbx
0x2871: pop rbp
0x2872: ret 
0x2873: lea rsi,[rip+0x3ed5]
0x287a: xor edi,edi
0x287c: mov edx,0x5
0x2881: call 0x1890
0x2886: mov rdi,qword ptr [rip+0x20784b]
0x288d: mov rbp,rax
0x2890: test rdi,rdi
0x2893: je 0x28bd
0x2895: call 0x45c0
0x289a: mov esi,dword ptr [rbx]
0x289c: lea rdx,[rip+0x4670]
0x28a3: mov rcx,rax
0x28a6: mov r8,rbp
0x28a9: xor edi,edi
0x28ab: xor eax,eax
0x28ad: call 0x1a90
0x28b2: mov edi,dword ptr [rip+0x207760]
0x28b8: call 0x17e0
0x28bd: mov esi,dword ptr [rbx]
0x28bf: lea rdx,[rip+0x4651]
0x28c6: mov rcx,rax
0x28c9: xor edi,edi
0x28cb: xor eax,eax
0x28cd: call 0x1a90
0x28d2: jmp 0x28b2
0x29a8: nop dword ptr [rax+rax]
0x2a75: mov qword ptr [r15],rdi
0x2b4f: nop 
0x2b50: push rbp
0x2b51: push rbx
0x2b52: mov rbp,rdi
0x2b55: mov ebx,esi
0x2b57: sub rsp,0x8
0x2b5b: call 0x5580
0x2b60: movzx edx,byte ptr [rax]
0x2b63: and edx,-0x21
0x2b66: cmp dl,0x55
0x2b69: je 0x2be0
0x2b6b: cmp dl,0x47
0x2b6e: je 0x2b90
0x2b70: lea rax,[rip+0x43fc]
0x2b77: lea rdx,[rip+0x43f7]
0x2b7e: cmp ebx,0x9
0x2b81: cmovne rax,rdx
0x2b85: add rsp,0x8
0x2b89: pop rbx
0x2b8a: pop rbp
0x2b8b: ret 
0x2b90: movzx edx,byte ptr [rax+0x1]
0x2b94: and edx,-0x21
0x2b97: cmp dl,0x42
0x2b9a: jne 0x2b70
0x2b9c: cmp byte ptr [rax+0x2],0x31
0x2ba0: jne 0x2b70
0x2ba2: cmp byte ptr [rax+0x3],0x38
0x2ba6: jne 0x2b70
0x2ba8: cmp byte ptr [rax+0x4],0x30
0x2bac: jne 0x2b70
0x2bae: cmp byte ptr [rax+0x5],0x33
0x2bb2: jne 0x2b70
0x2bb4: cmp byte ptr [rax+0x6],0x30
0x2bb8: jne 0x2b70
0x2bba: cmp byte ptr [rax+0x7],0x0
0x2bbe: jne 0x2b70
0x2bc0: cmp byte ptr [rbp],0x60
0x2bc4: lea rax,[rip+0x43a1]
0x2bcb: lea rdx,[rip+0x439e]
0x2bd2: cmovne rax,rdx
0x2bd6: add rsp,0x8
0x2bda: pop rbx
0x2bdb: pop rbp
0x2bdc: ret 
0x2be0: movzx edx,byte ptr [rax+0x1]
0x2be4: and edx,-0x21
0x2be7: cmp dl,0x54
0x2bea: jne 0x2b70
0x2bec: movzx edx,byte ptr [rax+0x2]
0x2bf0: and edx,-0x21
0x2bf3: cmp dl,0x46
0x2bf6: jne 0x2b70
0x2bfc: cmp byte ptr [rax+0x3],0x2d
0x2c00: jne 0x2b70
0x2c06: cmp byte ptr [rax+0x4],0x38
0x2c0a: jne 0x2b70
0x2c10: cmp byte ptr [rax+0x5],0x0
0x2c14: jne 0x2b70
0x2c1a: cmp byte ptr [rbp],0x60
0x2c1e: lea rax,[rip+0x433f]
0x2c25: lea rdx,[rip+0x433c]
0x2c2c: cmovne rax,rdx
0x2c30: add rsp,0x8
0x2c34: pop rbx
0x2c35: pop rbp
0x2c36: ret 
0x2d13: xor r11d,r11d
0x2d16: mov rax,rbp
0x2d19: mov r8d,r12d
0x2d1c: mov rbp,r11
0x2d1f: mov r11,rax
0x2d22: nop word ptr [rax+rax]
0x2d28: cmp r11,rbp
0x2d2b: setne r12b
0x2d2f: cmp r11,-0x1
0x2d33: jne 0x2d42
0x2d35: mov rax,qword ptr [rsp+0x10]
0x2d3a: cmp byte ptr [rax+rbp],0x0
0x2d3e: setne r12b
0x2d42: test r12b,r12b
0x2d45: je 0x33a0
0x2d4b: cmp dword ptr [rsp+0x8],0x2
0x2d50: mov rdi,qword ptr [rsp+0x10]
0x2d55: lea r9,[rdi+rbp]
0x2d59: setne al
0x2d5c: and al,byte ptr [rsp+0xd]
0x2d60: mov r10d,eax
0x2d63: je 0x2e10
0x2d69: mov rax,qword ptr [rsp+0x18]
0x2d6e: test rax,rax
0x2d71: je 0x31a0
0x2d77: cmp r11,-0x1
0x2d7b: lea rbx,[rbp+rax]
0x2d80: jne 0x2db0
0x2d82: cmp rax,0x1
0x2d86: jbe 0x2db0
0x2d88: mov byte ptr [rsp+0x38],r8b
0x2d8d: mov byte ptr [rsp+0x30],r10b
0x2d92: mov qword ptr [rsp+0x28],r9
0x2d97: call 0x18b0
0x2d9c: movzx r8d,byte ptr [rsp+0x38]
0x2da2: movzx r10d,byte ptr [rsp+0x30]
0x2da8: mov r11,rax
0x2dab: mov r9,qword ptr [rsp+0x28]
0x2db0: cmp rbx,r11
0x2db3: mov byte ptr [rsp+0x28],r10b
0x2db8: ja 0x3370
0x2dbe: mov rdx,qword ptr [rsp+0x18]
0x2dc3: mov rsi,qword ptr [rsp+0x48]
0x2dc8: mov rdi,r9
0x2dcb: mov qword ptr [rsp+0x40],r11
0x2dd0: mov byte ptr [rsp+0x38],r8b
0x2dd5: mov qword ptr [rsp+0x30],r9
0x2dda: call 0x1980
0x2ddf: test eax,eax
0x2de1: mov r9,qword ptr [rsp+0x30]
0x2de6: movzx r8d,byte ptr [rsp+0x38]
0x2dec: mov r11,qword ptr [rsp+0x40]
0x2df1: jne 0x3370
0x2df7: cmp byte ptr [rsp+0xf],0x0
0x2dfc: movzx r10d,byte ptr [rsp+0x28]
0x2e02: jne 0x3d85
0x2e08: nop dword ptr [rax+rax]
0x2e10: movzx ebx,byte ptr [r9]
0x2e14: cmp bl,0x7e
0x2e17: ja 0x3138
0x2e1d: lea rcx,[rip+0x41e8]
0x2e24: movzx edx,bl
0x2e27: movsxd rax,dword ptr [rcx+rdx*4]
0x2e2b: add rax,rcx
0x2e2e: jmp rax
0x2e68: cmp byte ptr [rsp+0xd],0x1
0x2e6d: jne 0x2f82
0x2e73: test dl,dl
0x2e75: jne 0x2f82
0x2e7b: mov rsi,qword ptr [rsp+0x20]
0x2e80: test rsi,rsi
0x2e83: je 0x2e99
0x2e85: mov edx,ebx
0x2e87: shr dl,0x5
0x2e8a: movzx edx,dl
0x2e8d: mov edx,dword ptr [rsi+rdx*4]
0x2e90: btl edx,ebx
0x2e93: jb 0x2fe3
0x2e99: test r10b,r10b
0x2e9c: jne 0x2fe3
0x2ea2: xor eax,0x1
0x2ea5: add rbp,0x1
0x2ea9: and eax,r8d
0x2eac: test al,al
0x2eae: je 0x2ed0
0x2eb0: cmp r13,r15
0x2eb3: jbe 0x2eba
0x2eb5: mov byte ptr [r14+r15],0x27
0x2eba: lea rax,[r15+0x1]
0x2ebe: cmp r13,rax
0x2ec1: jbe 0x2ec9
0x2ec3: mov byte ptr [r14+r15+0x1],0x27
0x2ec9: add r15,0x2
0x2ecd: xor r8d,r8d
0x2ed0: cmp r15,r13
0x2ed3: jae 0x2ed9
0x2ed5: mov byte ptr [r14+r15],bl
0x2ed9: movzx edi,byte ptr [rsp+0xe]
0x2ede: add r15,0x1
0x2ee2: mov eax,0x0
0x2ee7: test r12b,r12b
0x2eea: cmove edi,eax
0x2eed: mov byte ptr [rsp+0xe],dil
0x2ef2: jmp 0x2d28
0x2f82: cmp byte ptr [rsp+0xf],0x0
0x2f87: jne 0x2e7b
0x2f8d: jmp 0x2e99
0x2fe3: cmp dword ptr [rsp+0x8],0x2
0x2fe8: sete dl
0x2feb: cmp byte ptr [rsp+0xf],0x0
0x2ff0: mov eax,edx
0x2ff2: jne 0x3848
0x2ff8: mov eax,r8d
0x2ffb: xor eax,0x1
0x2ffe: and al,dl
0x3000: je 0x3031
0x3002: cmp r13,r15
0x3005: jbe 0x300c
0x3007: mov byte ptr [r14+r15],0x27
0x300c: lea rdx,[r15+0x1]
0x3010: cmp r13,rdx
0x3013: jbe 0x301b
0x3015: mov byte ptr [r14+r15+0x1],0x24
0x301b: lea rdx,[r15+0x2]
0x301f: cmp r13,rdx
0x3022: jbe 0x302a
0x3024: mov byte ptr [r14+r15+0x2],0x27
0x302a: add r15,0x3
0x302e: mov r8d,eax
0x3031: cmp r13,r15
0x3034: jbe 0x303b
0x3036: mov byte ptr [r14+r15],0x5c
0x303b: add r15,0x1
0x303f: add rbp,0x1
0x3043: jmp 0x2ed0
0x3130: xor r10d,r10d
0x3133: nop dword ptr [rax+rax]
0x3138: cmp qword ptr [rsp+0x58],0x1
0x313e: jne 0x34e8
0x3144: mov qword ptr [rsp+0x38],r11
0x3149: mov byte ptr [rsp+0x30],r8b
0x314e: mov byte ptr [rsp+0x28],r10b
0x3153: call 0x1b50
0x3158: mov rcx,qword ptr [rax]
0x315b: movzx edx,bl
0x315e: movzx r10d,byte ptr [rsp+0x28]
0x3164: movzx r8d,byte ptr [rsp+0x30]
0x316a: mov r11,qword ptr [rsp+0x38]
0x316f: mov edi,0x1
0x3174: movzx eax,word ptr [rcx+rdx*2]
0x3178: and ax,0x4000
0x317c: setne r12b
0x3180: sete al
0x3183: and al,byte ptr [rsp+0xd]
0x3187: test al,al
0x3189: jne 0x3b21
0x318f: cmp dword ptr [rsp+0x8],0x2
0x3194: sete dl
0x3197: jmp 0x2e68
0x31a0: movzx ebx,byte ptr [r9]
0x31a4: cmp bl,0x7e
0x31a7: ja 0x3130
0x31a9: lea rcx,[rip+0x4058]
0x31b0: movzx edx,bl
0x31b3: movsxd rax,dword ptr [rcx+rdx*4]
0x31b7: add rax,rcx
0x31ba: jmp rax
0x3370: xor r10d,r10d
0x3373: jmp 0x2e10
0x33a0: cmp dword ptr [rsp+0x8],0x2
0x33a5: movzx ebx,byte ptr [rsp+0xf]
0x33aa: mov r12d,r8d
0x33ad: mov rbp,r11
0x33b0: sete dl
0x33b3: mov eax,ebx
0x33b5: test r15,r15
0x33b8: sete cl
0x33bb: and eax,edx
0x33bd: and al,cl
0x33bf: jne 0x3e26
0x33c5: mov eax,ebx
0x33c7: xor eax,0x1
0x33ca: and dl,al
0x33cc: je 0x3d3c
0x33d2: cmp byte ptr [rsp+0x7c],0x0
0x33d7: je 0x3d3a
0x33dd: cmp byte ptr [rsp+0xe],0x0
0x33e2: jne 0x3ddd
0x33e8: test r13,r13
0x33eb: sete al
0x33ee: cmp qword ptr [rsp+0x50],0x0
0x33f4: setne dl
0x33f7: and al,dl
0x33f9: je 0x3e1c
0x33ff: mov r13,qword ptr [rsp+0x50]
0x3404: lea rbx,[rip+0x3b6a]
0x340b: mov byte ptr [r14],0x27
0x340f: mov dword ptr [rsp+0x8],0x2
0x3417: mov r15d,0x1
0x341d: mov qword ptr [rsp+0x18],0x1
0x3426: mov byte ptr [rsp+0xf],0x0
0x342b: mov qword ptr [rsp+0x48],rbx
0x3430: mov byte ptr [rsp+0x7c],al
0x3434: jmp 0x2d13
0x34e8: lea rax,[rsp+0xa0]
0x34f0: cmp r11,-0x1
0x34f4: mov qword ptr [rsp+0xa0],0x0
0x3500: mov qword ptr [rsp+0x28],rax
0x3505: jne 0x3534
0x3507: mov rdi,qword ptr [rsp+0x10]
0x350c: mov byte ptr [rsp+0x40],r8b
0x3511: mov byte ptr [rsp+0x38],r10b
0x3516: mov qword ptr [rsp+0x30],r9
0x351b: call 0x18b0
0x3520: movzx r8d,byte ptr [rsp+0x40]
0x3526: movzx r10d,byte ptr [rsp+0x38]
0x352c: mov r11,rax
0x352f: mov r9,qword ptr [rsp+0x30]
0x3534: lea rax,[rsp+0x9c]
0x353c: xor ecx,ecx
0x353e: mov byte ptr [rsp+0x7e],bl
0x3542: mov byte ptr [rsp+0x7d],r8b
0x3547: mov rbx,rcx
0x354a: mov qword ptr [rsp+0x88],r9
0x3552: mov qword ptr [rsp+0x38],rax
0x3557: mov byte ptr [rsp+0x7f],r10b
0x355c: mov qword ptr [rsp+0x80],r15
0x3564: mov qword ptr [rsp+0x40],r14
0x3569: mov qword ptr [rsp+0x70],r13
0x356e: mov qword ptr [rsp+0x30],r11
0x3573: mov rax,qword ptr [rsp+0x10]
0x3578: lea r14,[rbp+rbx]
0x357d: mov rdx,qword ptr [rsp+0x30]
0x3582: mov rcx,qword ptr [rsp+0x28]
0x3587: mov rdi,qword ptr [rsp+0x38]
0x358c: lea r13,[rax+r14]
0x3590: sub rdx,r14
0x3593: mov rsi,r13
0x3596: call 0x5490
0x359b: test rax,rax
0x359e: mov r15,rax
0x35a1: je 0x35f1
0x35a3: cmp rax,-0x1
0x35a7: je 0x3bc5
0x35ad: cmp rax,-0x2
0x35b1: je 0x3b51
0x35b7: cmp dword ptr [rsp+0x8],0x2
0x35bc: sete al
0x35bf: and al,byte ptr [rsp+0xf]
0x35c3: jne 0x3760
0x35c9: mov edi,dword ptr [rsp+0x9c]
0x35d0: call 0x1b40
0x35d5: mov rdi,qword ptr [rsp+0x28]
0x35da: test eax,eax
0x35dc: mov eax,0x0
0x35e1: cmove r12d,eax
0x35e5: add rbx,r15
0x35e8: call 0x1b30
0x35ed: test eax,eax
0x35ef: je 0x3573
0x35f1: mov edx,r12d
0x35f4: mov rdi,rbx
0x35f7: movzx r8d,byte ptr [rsp+0x7d]
0x35fd: xor edx,0x1
0x3600: movzx ebx,byte ptr [rsp+0x7e]
0x3605: movzx r10d,byte ptr [rsp+0x7f]
0x360b: and dl,byte ptr [rsp+0xd]
0x360f: mov r15,qword ptr [rsp+0x80]
0x3617: mov r14,qword ptr [rsp+0x40]
0x361c: mov r13,qword ptr [rsp+0x70]
0x3621: mov r11,qword ptr [rsp+0x30]
0x3626: cmp rdi,0x1
0x362a: jbe 0x3c2b
0x3630: mov rcx,rdi
0x3633: xor esi,esi
0x3635: movzx r9d,byte ptr [rsp+0xf]
0x363b: add rcx,rbp
0x363e: mov rdi,qword ptr [rsp+0x10]
0x3643: jmp 0x36fe
0x3650: cmp dword ptr [rsp+0x8],0x2
0x3655: sete al
0x3658: test r9b,r9b
0x365b: jne 0x3b10
0x3661: mov esi,r8d
0x3664: xor esi,0x1
0x3667: and al,sil
0x366a: je 0x369b
0x366c: cmp r13,r15
0x366f: jbe 0x3676
0x3671: mov byte ptr [r14+r15],0x27
0x3676: lea rsi,[r15+0x1]
0x367a: cmp r13,rsi
0x367d: jbe 0x3685
0x367f: mov byte ptr [r14+r15+0x1],0x24
0x3685: lea rsi,[r15+0x2]
0x3689: cmp r13,rsi
0x368c: jbe 0x3694
0x368e: mov byte ptr [r14+r15+0x2],0x27
0x3694: add r15,0x3
0x3698: mov r8d,eax
0x369b: cmp r13,r15
0x369e: jbe 0x36a5
0x36a0: mov byte ptr [r14+r15],0x5c
0x36a5: lea rax,[r15+0x1]
0x36a9: cmp r13,rax
0x36ac: jbe 0x36bb
0x36ae: mov eax,ebx
0x36b0: shr al,0x6
0x36b3: add eax,0x30
0x36b6: mov byte ptr [r14+r15+0x1],al
0x36bb: lea rax,[r15+0x2]
0x36bf: cmp r13,rax
0x36c2: jbe 0x36d4
0x36c4: mov eax,ebx
0x36c6: shr al,0x3
0x36c9: and eax,0x7
0x36cc: add eax,0x30
0x36cf: mov byte ptr [r14+r15+0x2],al
0x36d4: and ebx,0x7
0x36d7: add rbp,0x1
0x36db: add r15,0x3
0x36df: add ebx,0x30
0x36e2: cmp rbp,rcx
0x36e5: jae 0x2ed0
0x36eb: mov esi,edx
0x36ed: cmp r13,r15
0x36f0: jbe 0x36f6
0x36f2: mov byte ptr [r14+r15],bl
0x36f6: movzx ebx,byte ptr [rdi+rbp]
0x36fa: add r15,0x1
0x36fe: test dl,dl
0x3700: jne 0x3650
0x3706: mov eax,esi
0x3708: xor eax,0x1
0x370b: and eax,r8d
0x370e: test r10b,r10b
0x3711: je 0x3721
0x3713: cmp r13,r15
0x3716: jbe 0x371d
0x3718: mov byte ptr [r14+r15],0x5c
0x371d: add r15,0x1
0x3721: add rbp,0x1
0x3725: cmp rbp,rcx
0x3728: jae 0x2eac
0x372e: test al,al
0x3730: je 0x3b2e
0x3736: cmp r13,r15
0x3739: jbe 0x3740
0x373b: mov byte ptr [r14+r15],0x27
0x3740: lea rax,[r15+0x1]
0x3744: cmp r13,rax
0x3747: jbe 0x374f
0x3749: mov byte ptr [r14+r15+0x1],0x27
0x374f: add r15,0x2
0x3753: xor r10d,r10d
0x3756: xor r8d,r8d
0x3759: jmp 0x36ed
0x3760: cmp r15,0x1
0x3764: je 0x35c9
0x376a: mov rdi,qword ptr [rsp+0x10]
0x376f: lea rcx,[rdi+r15]
0x3773: lea rdx,[rdi+r14+0x1]
0x3778: lea r8,[rcx+r14]
0x377c: jmp 0x378d
0x3780: add rdx,0x1
0x3784: cmp r8,rdx
0x3787: je 0x35c9
0x378d: movzx ecx,byte ptr [rdx]
0x3790: sub ecx,0x5b
0x3793: cmp cl,0x21
0x3796: ja 0x3780
0x3798: mov esi,0x1
0x379d: shl rsi,cl
0x37a0: mov rcx,rsi
0x37a3: movabsq rsi,0x20000002b
0x37ad: test rcx,rsi
0x37b0: je 0x3780
0x37b2: mov r14,qword ptr [rsp+0x40]
0x37b7: mov r13,qword ptr [rsp+0x70]
0x37bc: mov rbp,qword ptr [rsp+0x30]
0x37c1: mov dword ptr [rsp+0x8],0x2
0x37c9: cmp byte ptr [rsp+0xd],0x0
0x37ce: je 0x37e0
0x37d0: test al,al
0x37d2: mov eax,0x4
0x37d7: cmove eax,dword ptr [rsp+0x8]
0x37dc: mov dword ptr [rsp+0x8],eax
0x37e0: sub rsp,0x8
0x37e4: mov rcx,rbp
0x37e7: mov rsi,r13
0x37ea: push qword ptr [rsp+0x68]
0x37ee: push qword ptr [rsp+0x78]
0x37f2: mov rdi,r14
0x37f5: push 0x0
0x37f7: mov r9d,dword ptr [rsp+0x98]
0x37ff: mov r8d,dword ptr [rsp+0x28]
0x3804: mov rdx,qword ptr [rsp+0x30]
0x3809: and r9d,-0x3
0x380d: call 0x2c40
0x3812: add rsp,0x20
0x3816: mov r15,rax
0x3819: mov rbx,qword ptr [rsp+0xa8]
0x3821: xor rbx,qword ptr fs:0x28
0x382a: mov rax,r15
0x382d: jne 0x3e33
0x3833: add rsp,0xb8
0x383a: pop rbx
0x383b: pop rbp
0x383c: pop r12
0x383e: pop r13
0x3840: pop r14
0x3842: pop r15
0x3844: ret 
0x3848: mov rbp,r11
0x384b: jmp 0x37c9
0x38b1: test r13,r13
0x38b4: jne 0x3e4a
0x38ba: lea rax,[rip+0x36b4]
0x38c1: mov qword ptr [rsp+0x50],0x0
0x38ca: mov byte ptr [rsp+0xe],0x1
0x38cf: mov byte ptr [rsp+0x7c],0x0
0x38d4: xor r12d,r12d
0x38d7: mov byte ptr [rsp+0xf],0x0
0x38dc: mov qword ptr [rsp+0x18],0x1
0x38e5: mov qword ptr [rsp+0x48],rax
0x38ea: mov r15d,0x1
0x38f0: mov dword ptr [rsp+0x8],0x2
0x38f8: jmp 0x2d13
0x3b10: movzx ebx,byte ptr [rsp+0xf]
0x3b15: mov rbp,r11
0x3b18: mov byte ptr [rsp+0xd],bl
0x3b1c: jmp 0x37c9
0x3b21: movzx edx,byte ptr [rsp+0xd]
0x3b26: xor r12d,r12d
0x3b29: jmp 0x3630
0x3b2e: xor r10d,r10d
0x3b31: jmp 0x36ed
0x3b51: mov r11,qword ptr [rsp+0x30]
0x3b56: mov rsi,r14
0x3b59: mov rcx,r13
0x3b5c: mov rax,rbx
0x3b5f: mov rdi,rbx
0x3b62: movzx r8d,byte ptr [rsp+0x7d]
0x3b68: movzx ebx,byte ptr [rsp+0x7e]
0x3b6d: mov r9,qword ptr [rsp+0x88]
0x3b75: cmp rsi,r11
0x3b78: movzx r10d,byte ptr [rsp+0x7f]
0x3b7e: mov r15,qword ptr [rsp+0x80]
0x3b86: mov r14,qword ptr [rsp+0x40]
0x3b8b: mov r13,qword ptr [rsp+0x70]
0x3b90: jae 0x3bb8
0x3b92: cmp byte ptr [rcx],0x0
0x3b95: jne 0x3ba7
0x3b97: jmp 0x3bb8
0x3ba0: cmp byte ptr [r9+rax],0x0
0x3ba5: je 0x3bb5
0x3ba7: add rax,0x1
0x3bab: lea rdx,[rbp+rax]
0x3bb0: cmp r11,rdx
0x3bb3: ja 0x3ba0
0x3bb5: mov rdi,rax
0x3bb8: movzx edx,byte ptr [rsp+0xd]
0x3bbd: xor r12d,r12d
0x3bc0: jmp 0x3626
0x3bc5: mov rdi,rbx
0x3bc8: movzx r8d,byte ptr [rsp+0x7d]
0x3bce: movzx ebx,byte ptr [rsp+0x7e]
0x3bd3: movzx r10d,byte ptr [rsp+0x7f]
0x3bd9: mov r15,qword ptr [rsp+0x80]
0x3be1: xor r12d,r12d
0x3be4: mov r14,qword ptr [rsp+0x40]
0x3be9: mov r13,qword ptr [rsp+0x70]
0x3bee: mov r11,qword ptr [rsp+0x30]
0x3bf3: movzx edx,byte ptr [rsp+0xd]
0x3bf8: jmp 0x3626
0x3c2b: mov eax,edx
0x3c2d: jmp 0x3187
0x3d3a: mov eax,edx
0x3d3c: mov rbx,qword ptr [rsp+0x48]
0x3d41: test rbx,rbx
0x3d44: je 0x3d72
0x3d46: test al,al
0x3d48: je 0x3d72
0x3d4a: movzx ecx,byte ptr [rbx]
0x3d4d: mov rax,rbx
0x3d50: test cl,cl
0x3d52: je 0x3d72
0x3d54: mov rdx,r15
0x3d57: sub rax,r15
0x3d5a: cmp r13,rdx
0x3d5d: jbe 0x3d63
0x3d5f: mov byte ptr [r14+rdx],cl
0x3d63: add rdx,0x1
0x3d67: movzx ecx,byte ptr [rax+rdx]
0x3d6b: test cl,cl
0x3d6d: jne 0x3d5a
0x3d6f: mov r15,rdx
0x3d72: cmp r13,r15
0x3d75: jbe 0x3819
0x3d7b: mov byte ptr [r14+r15],0x0
0x3d80: jmp 0x3819
0x3d85: cmp dword ptr [rsp+0x8],0x2
0x3d8a: movzx ebx,byte ptr [rsp+0xf]
0x3d8f: mov rbp,r11
0x3d92: sete al
0x3d95: mov byte ptr [rsp+0xd],bl
0x3d99: jmp 0x37c9
0x3ddd: sub rsp,0x8
0x3de1: mov r8d,0x5
0x3de7: mov rcx,r11
0x3dea: push qword ptr [rsp+0x68]
0x3dee: push qword ptr [rsp+0x78]
0x3df2: mov rdi,r14
0x3df5: push qword ptr [rsp+0x38]
0x3df9: mov r9d,dword ptr [rsp+0x98]
0x3e01: mov rdx,qword ptr [rsp+0x30]
0x3e06: mov rsi,qword ptr [rsp+0x70]
0x3e0b: call 0x2c40
0x3e10: add rsp,0x20
0x3e14: mov r15,rax
0x3e17: jmp 0x3819
0x3e1c: movzx eax,byte ptr [rsp+0x7c]
0x3e21: jmp 0x3d3c
0x3e26: mov dword ptr [rsp+0x8],0x2
0x3e2e: jmp 0x37c9
0x3e33: call 0x18d0
0x3e38: mov byte ptr [rsp+0xd],0x0
0x3e3d: jmp 0x38b1
0x3e4a: mov byte ptr [rsp+0xe],0x1
0x3e4f: xor eax,eax
0x3e51: xor r12d,r12d
0x3e54: mov qword ptr [rsp+0x50],0x0
0x3e5d: jmp 0x3404
0x3e74: nop 
0x3e76: nop word ptr cs:[rax+rax]
0x3f6c: add rsp,0x20
0x3f70: mov r11,qword ptr [rsp+0x10]
0x3f75: cmp r11,rax
0x3f78: ja 0x3fe1
0x3f7a: lea rsi,[rax+0x1]
0x3f7e: lea rax,[rip+0x20617b]
0x3f85: cmp r12,rax
0x3f88: mov qword ptr [rbx],rsi
0x3f8b: je 0x3f9f
0x3f8d: mov rdi,r12
0x3f90: mov qword ptr [rsp+0x10],rsi
0x3f95: call 0x1790
0x3f9a: mov rsi,qword ptr [rsp+0x10]
0x3f9f: mov rdi,rsi
0x3fa2: mov qword ptr [rsp+0x10],rsi
0x3fa7: call 0x50e0
0x3fac: sub rsp,0x8
0x3fb0: mov qword ptr [rbx+0x8],rax
0x3fb4: mov r8d,dword ptr [rbp]
0x3fb8: push qword ptr [rbp+0x30]
0x3fbb: push qword ptr [rbp+0x28]
0x3fbe: mov rcx,r14
0x3fc1: push r15
0x3fc3: mov r9d,dword ptr [rsp+0x3c]
0x3fc8: mov rdi,rax
0x3fcb: mov rdx,qword ptr [rsp+0x28]
0x3fd0: mov rsi,qword ptr [rsp+0x30]
0x3fd5: mov r12,rax
0x3fd8: call 0x2c40
0x3fdd: add rsp,0x20
0x3fe1: mov eax,dword ptr [rsp+0x18]
0x3fe5: mov dword ptr [r13],eax
0x3fe9: add rsp,0x28
0x3fed: mov rax,r12
0x3ff0: pop rbx
0x3ff1: pop rbp
0x3ff2: pop r12
0x3ff4: pop r13
0x3ff6: pop r14
0x3ff8: pop r15
0x3ffa: ret 
0x4021: call 0x17a0
0x4026: call 0x5330
0x402b: nop dword ptr [rax+rax]
0x4030: push r12
0x4032: push rbp
0x4033: push rbx
0x4034: mov rbx,rdi
0x4037: call 0x17b0
0x403c: mov r12d,dword ptr [rax]
0x403f: mov rbp,rax
0x4042: lea rax,[rip+0x2061b7]
0x4049: test rbx,rbx
0x404c: mov esi,0x38
0x4051: cmove rbx,rax
0x4055: mov rdi,rbx
0x4058: call 0x52e0
0x405d: mov dword ptr [rbp],r12d
0x4061: pop rbx
0x4062: pop rbp
0x4063: pop r12
0x4065: ret 
0x4070: lea rax,[rip+0x206189]
0x4077: test rdi,rdi
0x407a: cmove rdi,rax
0x407e: mov eax,dword ptr [rdi]
0x4080: ret 
0x4090: lea rax,[rip+0x206169]
0x4097: test rdi,rdi
0x409a: cmove rdi,rax
0x409e: mov dword ptr [rdi],esi
0x40a0: ret 
0x40b0: lea rax,[rip+0x206149]
0x40b7: test rdi,rdi
0x40ba: mov ecx,esi
0x40bc: cmove rdi,rax
0x40c0: mov eax,esi
0x40c2: and ecx,0x1f
0x40c5: shr al,0x5
0x40c8: movzx eax,al
0x40cb: lea rdi,[rdi+rax*4+0x8]
0x40d0: mov esi,dword ptr [rdi]
0x40d2: mov eax,esi
0x40d4: shr eax,cl
0x40d6: xor edx,eax
0x40d8: and eax,0x1
0x40db: and edx,0x1
0x40de: shl edx,cl
0x40e0: xor edx,esi
0x40e2: mov dword ptr [rdi],edx
0x40e4: ret 
0x40f0: lea rax,[rip+0x206109]
0x40f7: test rdi,rdi
0x40fa: cmove rdi,rax
0x40fe: mov eax,dword ptr [rdi+0x4]
0x4101: mov dword ptr [rdi+0x4],esi
0x4104: ret 
0x4110: lea rax,[rip+0x2060e9]
0x4117: test rdi,rdi
0x411a: cmove rdi,rax
0x411e: test rsi,rsi
0x4121: mov dword ptr [rdi],0xa
0x4127: je 0x4137
0x4129: test rdx,rdx
0x412c: je 0x4137
0x412e: mov qword ptr [rdi+0x28],rsi
0x4132: mov qword ptr [rdi+0x30],rdx
0x4136: ret 
0x4137: sub rsp,0x8
0x413b: call 0x17a0
0x4140: push r15
0x4142: push r14
0x4144: lea rax,[rip+0x2060b5]
0x414b: push r13
0x414d: push r12
0x414f: mov r13,rdi
0x4152: push rbp
0x4153: push rbx
0x4154: mov rbx,r8
0x4157: mov r14,rsi
0x415a: mov r15,rdx
0x415d: sub rsp,0x18
0x4161: test r8,r8
0x4164: cmove rbx,rax
0x4168: mov qword ptr [rsp+0x8],rcx
0x416d: call 0x17b0
0x4172: mov r12d,dword ptr [rax]
0x4175: mov rbp,rax
0x4178: lea rax,[rbx+0x8]
0x417c: sub rsp,0x8
0x4180: mov r9d,dword ptr [rbx+0x4]
0x4184: push qword ptr [rbx+0x30]
0x4187: mov r8d,dword ptr [rbx]
0x418a: push qword ptr [rbx+0x28]
0x418d: mov rdx,r15
0x4190: push rax
0x4191: mov rcx,qword ptr [rsp+0x28]
0x4196: mov rsi,r14
0x4199: mov rdi,r13
0x419c: call 0x2c40
0x41a1: mov dword ptr [rbp],r12d
0x41a5: add rsp,0x38
0x41a9: pop rbx
0x41aa: pop rbp
0x41ab: pop r12
0x41ad: pop r13
0x41af: pop r14
0x41b1: pop r15
0x41b3: ret 
0x41c0: push r15
0x41c2: push r14
0x41c4: lea rax,[rip+0x206035]
0x41cb: push r13
0x41cd: push r12
0x41cf: mov r12,rdx
0x41d2: push rbp
0x41d3: push rbx
0x41d4: mov rbx,rcx
0x41d7: mov r14,rdi
0x41da: mov r15,rsi
0x41dd: sub rsp,0x38
0x41e1: test rcx,rcx
0x41e4: cmove rbx,rax
0x41e8: xor ebp,ebp
0x41ea: call 0x17b0
0x41ef: test r12,r12
0x41f2: mov r13,rax
0x41f5: mov eax,dword ptr [rax]
0x41f7: sete bpl
0x41fb: or ebp,dword ptr [rbx+0x4]
0x41fe: lea r10,[rbx+0x8]
0x4202: sub rsp,0x8
0x4206: mov r8d,dword ptr [rbx]
0x4209: mov rcx,r15
0x420c: mov dword ptr [rsp+0x14],eax
0x4210: push qword ptr [rbx+0x30]
0x4213: mov rdx,r14
0x4216: push qword ptr [rbx+0x28]
0x4219: push r10
0x421b: xor esi,esi
0x421d: mov r9d,ebp
0x4220: xor edi,edi
0x4222: mov qword ptr [rsp+0x40],r10
0x4227: call 0x2c40
0x422c: lea rsi,[rax+0x1]
0x4230: mov qword ptr [rsp+0x48],rax
0x4235: add rsp,0x20
0x4239: mov rdi,rsi
0x423c: mov qword ptr [rsp+0x18],rsi
0x4241: call 0x50e0
0x4246: mov qword ptr [rsp+0x10],rax
0x424b: sub rsp,0x8
0x424f: push qword ptr [rbx+0x30]
0x4252: push qword ptr [rbx+0x28]
0x4255: mov r10,qword ptr [rsp+0x38]
0x425a: mov r9d,ebp
0x425d: mov r8d,dword ptr [rbx]
0x4260: mov rcx,r15
0x4263: mov rdx,r14
0x4266: mov rdi,rax
0x4269: push r10
0x426b: mov rsi,qword ptr [rsp+0x38]
0x4270: call 0x2c40
0x4275: mov eax,dword ptr [rsp+0x2c]
0x4279: add rsp,0x20
0x427d: test r12,r12
0x4280: mov dword ptr [r13],eax
0x4284: je 0x428f
0x4286: mov r11,qword ptr [rsp+0x28]
0x428b: mov qword ptr [r12],r11
0x428f: mov rax,qword ptr [rsp+0x10]
0x4294: add rsp,0x38
0x4298: pop rbx
0x4299: pop rbp
0x429a: pop r12
0x429c: pop r13
0x429e: pop r14
0x42a0: pop r15
0x42a2: ret 
0x42b0: mov rcx,rdx
0x42b3: xor edx,edx
0x42b5: jmp 0x41c0
0x42c0: mov eax,dword ptr [rip+0x205d92]
0x42c6: push r12
0x42c8: mov r12,qword ptr [rip+0x205d91]
0x42cf: push rbp
0x42d0: push rbx
0x42d1: cmp eax,0x1
0x42d4: jle 0x4301
0x42d6: sub eax,0x2
0x42d9: lea rbx,[r12+0x18]
0x42de: shl rax,0x4
0x42e2: lea rbp,[r12+rax+0x28]
0x42e7: nop word ptr [rax+rax]
0x42f0: mov rdi,qword ptr [rbx]
0x42f3: add rbx,0x10
0x42f7: call 0x1790
0x42fc: cmp rbx,rbp
0x42ff: jne 0x42f0
0x4301: mov rdi,qword ptr [r12+0x8]
0x4306: lea rbx,[rip+0x205df3]
0x430d: cmp rdi,rbx
0x4310: je 0x4329
0x4312: call 0x1790
0x4317: mov qword ptr [rip+0x205d4e],0x100
0x4322: mov qword ptr [rip+0x205d4f],rbx
0x4329: lea rbx,[rip+0x205d40]
0x4330: cmp r12,rbx
0x4333: je 0x4344
0x4335: mov rdi,r12
0x4338: call 0x1790
0x433d: mov qword ptr [rip+0x205d1c],rbx
0x4344: pop rbx
0x4345: mov dword ptr [rip+0x205d09],0x1
0x434f: pop rbp
0x4350: pop r12
0x4352: ret 
0x4360: lea rcx,[rip+0x205e99]
0x4367: mov rdx,-0x1
0x436e: jmp 0x3e80
0x4380: lea rcx,[rip+0x205e79]
0x4387: jmp 0x3e80
0x4390: lea rcx,[rip+0x205e69]
0x4397: mov rsi,rdi
0x439a: mov rdx,-0x1
0x43a1: xor edi,edi
0x43a3: jmp 0x3e80
0x43b0: lea rcx,[rip+0x205e49]
0x43b7: mov rdx,rsi
0x43ba: mov rsi,rdi
0x43bd: xor edi,edi
0x43bf: jmp 0x3e80
0x43d0: sub rsp,0x48
0x43d4: mov rax,rdx
0x43d7: mov rdx,qword ptr fs:0x28
0x43e0: mov qword ptr [rsp+0x38],rdx
0x43e5: xor edx,edx
0x43e7: cmp esi,0xa
0x43ea: je 0x4454
0x43ec: mov dword ptr [rsp],esi
0x43ef: mov rcx,rsp
0x43f2: mov rdx,-0x1
0x43f9: mov rsi,rax
0x43fc: mov qword ptr [rsp+0x4],0x0
0x4405: mov qword ptr [rsp+0xc],0x0
0x440e: mov qword ptr [rsp+0x14],0x0
0x4417: mov qword ptr [rsp+0x1c],0x0
0x4420: mov qword ptr [rsp+0x24],0x0
0x4429: mov qword ptr [rsp+0x2c],0x0
0x4432: mov dword ptr [rsp+0x34],0x0
0x443a: call 0x3e80
0x443f: mov rcx,qword ptr [rsp+0x38]
0x4444: xor rcx,qword ptr fs:0x28
0x444d: jne 0x4459
0x444f: add rsp,0x48
0x4453: ret 
0x4454: call 0x17a0
0x4459: call 0x18d0
0x445e: nop 
0x4460: sub rsp,0x48
0x4464: mov rax,rdx
0x4467: mov rdx,rcx
0x446a: mov rcx,qword ptr fs:0x28
0x4473: mov qword ptr [rsp+0x38],rcx
0x4478: xor ecx,ecx
0x447a: cmp esi,0xa
0x447d: je 0x44e0
0x447f: mov dword ptr [rsp],esi
0x4482: mov rcx,rsp
0x4485: mov rsi,rax
0x4488: mov qword ptr [rsp+0x4],0x0
0x4491: mov qword ptr [rsp+0xc],0x0
0x449a: mov qword ptr [rsp+0x14],0x0
0x44a3: mov qword ptr [rsp+0x1c],0x0
0x44ac: mov qword ptr [rsp+0x24],0x0
0x44b5: mov qword ptr [rsp+0x2c],0x0
0x44be: mov dword ptr [rsp+0x34],0x0
0x44c6: call 0x3e80
0x44cb: mov rdx,qword ptr [rsp+0x38]
0x44d0: xor rdx,qword ptr fs:0x28
0x44d9: jne 0x44e5
0x44db: add rsp,0x48
0x44df: ret 
0x44e0: call 0x17a0
0x44e5: call 0x18d0
0x44ea: nop word ptr [rax+rax]
0x44f0: mov rdx,rsi
0x44f3: mov esi,edi
0x44f5: xor edi,edi
0x44f7: jmp 0x43d0
0x4500: mov rcx,rdx
0x4503: mov rdx,rsi
0x4506: mov esi,edi
0x4508: xor edi,edi
0x450a: jmp 0x4460
0x4510: sub rsp,0x48
0x4514: mov ecx,edx
0x4516: mov rax,qword ptr fs:0x28
0x451f: mov qword ptr [rsp+0x38],rax
0x4524: xor eax,eax
0x4526: mov rax,qword ptr [rip+0x205d03]
0x452d: mov r8,rsp
0x4530: and ecx,0x1f
0x4533: movdqa xmm0,[rip+0x205cc5]
0x453b: mov qword ptr [rsp+0x30],rax
0x4540: mov eax,edx
0x4542: movaps [rsp],xmm0
0x4546: shr al,0x5
0x4549: movzx eax,al
0x454c: lea r9,[r8+rax*4+0x8]
0x4551: movdqa xmm0,[rip+0x205cb7]
0x4559: movaps [rsp+0x10],xmm0
0x455e: movdqa xmm0,[rip+0x205cba]
0x4566: movaps [rsp+0x20],xmm0
0x456b: mov edx,dword ptr [r9]
0x456e: mov eax,edx
0x4570: shr eax,cl
0x4572: not eax
0x4574: and eax,0x1
0x4577: shl eax,cl
0x4579: mov rcx,r8
0x457c: xor eax,edx
0x457e: mov rdx,rsi
0x4581: mov rsi,rdi
0x4584: mov dword ptr [r9],eax
0x4587: xor edi,edi
0x4589: call 0x3e80
0x458e: mov rsi,qword ptr [rsp+0x38]
0x4593: xor rsi,qword ptr fs:0x28
0x459c: jne 0x45a3
0x459e: add rsp,0x48
0x45a2: ret 
0x45a3: call 0x18d0
0x45a8: nop dword ptr [rax+rax]
0x45b0: movsx edx,sil
0x45b4: mov rsi,-0x1
0x45bb: jmp 0x4510
0x45c0: mov edx,0x3a
0x45c5: mov rsi,-0x1
0x45cc: jmp 0x4510
0x45e0: mov edx,0x3a
0x45e5: jmp 0x4510
0x45f0: sub rsp,0x48
0x45f4: mov rax,rdx
0x45f7: mov rdx,qword ptr fs:0x28
0x4600: mov qword ptr [rsp+0x38],rdx
0x4605: xor edx,edx
0x4607: cmp esi,0xa
0x460a: je 0x4674
0x460c: mov dword ptr [rsp],esi
0x460f: mov rcx,rsp
0x4612: mov rdx,-0x1
0x4619: mov rsi,rax
0x461c: mov qword ptr [rsp+0x4],0x0
0x4625: mov qword ptr [rsp+0xc],0x4000000
0x462e: mov qword ptr [rsp+0x14],0x0
0x4637: mov qword ptr [rsp+0x1c],0x0
0x4640: mov qword ptr [rsp+0x24],0x0
0x4649: mov qword ptr [rsp+0x2c],0x0
0x4652: mov dword ptr [rsp+0x34],0x0
0x465a: call 0x3e80
0x465f: mov rcx,qword ptr [rsp+0x38]
0x4664: xor rcx,qword ptr fs:0x28
0x466d: jne 0x4679
0x466f: add rsp,0x48
0x4673: ret 
0x4674: call 0x17a0
0x4679: call 0x18d0
0x467e: nop 
0x4680: sub rsp,0x48
0x4684: mov r9,rcx
0x4687: mov rcx,qword ptr [rip+0x205ba2]
0x468e: movdqa xmm0,[rip+0x205b6a]
0x4696: mov rax,qword ptr fs:0x28
0x469f: mov qword ptr [rsp+0x38],rax
0x46a4: xor eax,eax
0x46a6: movaps [rsp],xmm0
0x46aa: test rsi,rsi
0x46ad: mov qword ptr [rsp+0x30],rcx
0x46b2: mov dword ptr [rsp],0xa
0x46b9: movdqa xmm0,[rip+0x205b4f]
0x46c1: movaps [rsp+0x10],xmm0
0x46c6: movdqa xmm0,[rip+0x205b52]
0x46ce: movaps [rsp+0x20],xmm0
0x46d3: je 0x4707
0x46d5: test rdx,rdx
0x46d8: je 0x4707
0x46da: mov qword ptr [rsp+0x28],rsi
0x46df: mov qword ptr [rsp+0x30],rdx
0x46e4: mov rcx,rsp
0x46e7: mov rdx,r8
0x46ea: mov rsi,r9
0x46ed: call 0x3e80
0x46f2: mov rdi,qword ptr [rsp+0x38]
0x46f7: xor rdi,qword ptr fs:0x28
0x4700: jne 0x470c
0x4702: add rsp,0x48
0x4706: ret 
0x4707: call 0x17a0
0x470c: call 0x18d0
0x4711: nop dword ptr [rax+rax]
0x4716: nop word ptr cs:[rax+rax]
0x4720: mov r8,-0x1
0x4727: jmp 0x4680
0x4730: mov rcx,rdx
0x4733: mov r8,-0x1
0x473a: mov rdx,rsi
0x473d: mov rsi,rdi
0x4740: xor edi,edi
0x4742: jmp 0x4680
0x4750: mov r8,rcx
0x4753: mov rcx,rdx
0x4756: mov rdx,rsi
0x4759: mov rsi,rdi
0x475c: xor edi,edi
0x475e: jmp 0x4680
0x4770: lea rcx,[rip+0x2058a9]
0x4777: jmp 0x3e80
0x4780: lea rcx,[rip+0x205899]
0x4787: mov rdx,rsi
0x478a: mov rsi,rdi
0x478d: xor edi,edi
0x478f: jmp 0x3e80
0x47a0: lea rcx,[rip+0x205879]
0x47a7: mov rdx,-0x1
0x47ae: jmp 0x3e80
0x4857: call 0x18d0
0x485c: nop dword ptr [rax]
0x4a45: nop dword ptr [rax]
0x4aa0: mov r8d,0x6
0x4aa6: jmp 0x4a10
0x4ab0: mov r8d,0x6
0x4ab6: jmp 0x4890
0x4bf8: mov r8,rcx
0x4bfb: mov rcx,rdx
0x4bfe: lea rdx,[rip+0x2906]
0x4c05: mov esi,0x1
0x4c0a: xor eax,eax
0x4c0c: call 0x1b20
0x4c11: jmp 0x4afc
0x4e0d: push r12
0x4e0f: push r15
0x4e11: push r14
0x4e13: mov r8,qword ptr [rsp+0x20]
0x4e18: mov rcx,rbx
0x4e1b: mov rdx,rax
0x4e1e: mov rdi,rbp
0x4e21: mov esi,0x1
0x4e26: xor eax,eax
0x4e28: call 0x1b20
0x4e2d: add rsp,0x20
0x4e31: add rsp,0x28
0x4e35: pop rbx
0x4e36: pop rbp
0x4e37: pop r12
0x4e39: pop r13
0x4e3b: pop r14
0x4e3d: pop r15
0x4e3f: ret 
0x4e79: push r12
0x4e7b: push r15
0x4e7d: push r14
0x4e7f: mov r9,qword ptr [rsp+0x28]
0x4e84: jmp 0x4e13
0x4ee0: xor r9d,r9d
0x4ee3: cmp qword ptr [r8],0x0
0x4ee7: je 0x4efb
0x4ee9: nop dword ptr [rax]
0x4ef0: add r9,0x1
0x4ef4: cmp qword ptr [r8+r9*8],0x0
0x4ef9: jne 0x4ef0
0x4efb: jmp 0x4ac0
0x4f00: sub rsp,0x68
0x4f04: mov r10,r8
0x4f07: xor r9d,r9d
0x4f0a: mov rax,qword ptr fs:0x28
0x4f13: mov qword ptr [rsp+0x58],rax
0x4f18: xor eax,eax
0x4f1a: mov r8,rsp
0x4f1d: nop dword ptr [rax]
0x4f20: mov eax,dword ptr [r10]
0x4f23: cmp eax,0x2f
0x4f26: ja 0x4f6a
0x4f28: mov r11d,eax
0x4f2b: add r11,qword ptr [r10+0x10]
0x4f2f: add eax,0x8
0x4f32: mov dword ptr [r10],eax
0x4f35: mov rax,qword ptr [r11]
0x4f38: test rax,rax
0x4f3b: mov qword ptr [r8+r9*8],rax
0x4f3f: je 0x4f4b
0x4f41: add r9,0x1
0x4f45: cmp r9,0xa
0x4f49: jne 0x4f20
0x4f4b: call 0x4ac0
0x4f50: mov rax,qword ptr [rsp+0x58]
0x4f55: xor rax,qword ptr fs:0x28
0x4f5e: jne 0x4f65
0x4f60: add rsp,0x68
0x4f64: ret 
0x4f65: call 0x18d0
0x4f6a: mov r11,qword ptr [r10+0x8]
0x4f6e: lea rax,[r11+0x8]
0x4f72: mov qword ptr [r10+0x8],rax
0x4f76: jmp 0x4f35
0x5040: call 0x18d0
0x504c: mov rax,rbx
0x504f: add rbx,0x8
0x5053: jmp 0x5006
0x5060: push rbx
0x5061: lea rsi,[rip+0x24f1]
0x5068: mov edx,0x5
0x506d: xor edi,edi
0x506f: call 0x1890
0x5074: lea rdx,[rip+0x24f3]
0x507b: mov rsi,rax
0x507e: mov edi,0x1
0x5083: xor eax,eax
0x5085: call 0x1a60
0x508a: lea rsi,[rip+0x24f3]
0x5091: mov edx,0x5
0x5096: xor edi,edi
0x5098: call 0x1890
0x509d: lea rcx,[rip+0x1c94]
0x50a4: lea rdx,[rip+0x15f6]
0x50ab: mov rsi,rax
0x50ae: mov edi,0x1
0x50b3: xor eax,eax
0x50b5: call 0x1a60
0x50ba: mov rbx,qword ptr [rip+0x204fc7]
0x50c1: lea rsi,[rip+0x26e8]
0x50c8: xor edi,edi
0x50ca: mov edx,0x5
0x50cf: call 0x1890
0x50d4: mov rsi,rbx
0x50d7: mov rdi,rax
0x50da: pop rbx
0x50db: jmp 0x1990
0x50fa: nop word ptr [rax+rax]
0x5100: mov rax,rdi
0x5103: mul rsi
0x5106: mov rdi,rax
0x5109: seto al
0x510c: test rdi,rdi
0x510f: js 0x511b
0x5111: movzx eax,al
0x5114: test rax,rax
0x5117: jne 0x511b
0x5119: jmp 0x50e0
0x511b: sub rsp,0x8
0x511f: call 0x5330
0x5124: nop 
0x5126: nop word ptr cs:[rax+rax]
0x5130: jmp 0x50e0
0x5149: test rdi,rdi
0x514c: jne 0x5168
0x5168: call 0x1790
0x516d: xor eax,eax
0x516f: pop rbx
0x5170: ret 
0x5176: nop word ptr cs:[rax+rax]
0x5180: mov rax,rsi
0x5183: mul rdx
0x5186: mov rsi,rax
0x5189: seto al
0x518c: test rsi,rsi
0x518f: js 0x519b
0x5191: movzx eax,al
0x5194: test rax,rax
0x5197: jne 0x519b
0x5199: jmp 0x5140
0x519b: sub rsp,0x8
0x519f: call 0x5330
0x51a4: nop 
0x51a6: nop word ptr cs:[rax+rax]
0x51b0: test rdi,rdi
0x51b3: mov r9,rdx
0x51b6: mov rcx,qword ptr [rsi]
0x51b9: je 0x51f0
0x51bb: xor edx,edx
0x51bd: movabsq rax,0x5555555555555554
0x51c7: div r9
0x51ca: cmp rax,rcx
0x51cd: jbe 0x520b
0x51cf: mov rax,rcx
0x51d2: shr rax
0x51d5: lea rcx,[rax+rcx+0x1]
0x51da: mov qword ptr [rsi],rcx
0x51dd: imul rcx,r9
0x51e1: mov rsi,rcx
0x51e4: jmp 0x5140
0x51f0: test rcx,rcx
0x51f3: je 0x5218
0x51f5: mov rax,rcx
0x51f8: mul r9
0x51fb: seto dl
0x51fe: test rax,rax
0x5201: movzx edx,dl
0x5204: js 0x520b
0x5206: test rdx,rdx
0x5209: je 0x51da
0x520b: sub rsp,0x8
0x520f: call 0x5330
0x5214: nop dword ptr [rax]
0x5218: xor edx,edx
0x521a: mov eax,0x80
0x521f: xor r8d,r8d
0x5222: div r9
0x5225: test rax,rax
0x5228: sete r8b
0x522c: lea rcx,[r8+rax]
0x5230: jmp 0x51f5
0x5240: test rdi,rdi
0x5243: mov rax,qword ptr [rsi]
0x5246: je 0x5270
0x5248: movabsq rdx,0x5555555555555553
0x5252: cmp rax,rdx
0x5255: ja 0x5281
0x5257: mov rdx,rax
0x525a: shr rdx
0x525d: lea rax,[rdx+rax+0x1]
0x5262: mov qword ptr [rsi],rax
0x5265: mov rsi,rax
0x5268: jmp 0x5140
0x5270: test rax,rax
0x5273: mov edx,0x80
0x5278: cmove rax,rdx
0x527c: test rax,rax
0x527f: jns 0x5262
0x5281: sub rsp,0x8
0x5285: call 0x5330
0x528a: nop word ptr [rax+rax]
0x5290: push rbx
0x5291: mov rbx,rdi
0x5294: call 0x50e0
0x5299: mov rdx,rbx
0x529c: xor esi,esi
0x529e: mov rdi,rax
0x52a1: pop rbx
0x52a2: jmp 0x1950
0x52b0: mov rax,rdi
0x52b3: sub rsp,0x8
0x52b7: mul rsi
0x52ba: seto dl
0x52bd: test rax,rax
0x52c0: js 0x52d9
0x52c2: movzx edx,dl
0x52c5: test rdx,rdx
0x52c8: jne 0x52d9
0x52ca: call 0x19a0
0x52cf: test rax,rax
0x52d2: je 0x52d9
0x52d4: add rsp,0x8
0x52d8: ret 
0x52d9: call 0x5330
0x52de: nop 
0x5360: call 0x17a0
0x5365: nop word ptr cs:[rax+rax]
0x536f: nop 
0x5490: push r13
0x5492: push r12
0x5494: mov r13,rsi
0x5497: push rbp
0x5498: push rbx
0x5499: mov rbx,rdi
0x549c: mov r12,rdx
0x549f: sub rsp,0x18
0x54a3: mov rax,qword ptr fs:0x28
0x54ac: mov qword ptr [rsp+0x8],rax
0x54b1: xor eax,eax
0x54b3: lea rax,[rsp+0x4]
0x54b8: test rdi,rdi
0x54bb: cmove rbx,rax
0x54bf: mov rdi,rbx
0x54c2: call 0x1900
0x54c7: cmp rax,-0x3
0x54cb: mov rbp,rax
0x54ce: jbe 0x54f0
0x54d0: test r12,r12
0x54d3: je 0x54f0
0x54d5: xor edi,edi
0x54d7: call 0x5520
0x54dc: test al,al
0x54de: jne 0x54f0
0x54e0: movzx eax,byte ptr [r13]
0x54e5: mov ebp,0x1
0x54ea: mov dword ptr [rbx],eax
0x54ec: nop dword ptr [rax]
0x54f0: mov rdx,qword ptr [rsp+0x8]
0x54f5: xor rdx,qword ptr fs:0x28
0x54fe: mov rax,rbp
0x5501: jne 0x550e
0x5503: add rsp,0x18
0x5507: pop rbx
0x5508: pop rbp
0x5509: pop r12
0x550b: pop r13
0x550d: ret 
0x550e: call 0x18d0
0x5513: nop word ptr cs:[rax+rax]
0x551d: nop dword ptr [rax]
0x5520: sub rsp,0x8
0x5524: xor esi,esi
0x5526: call 0x1a50
0x552b: mov rdx,rax
0x552e: mov eax,0x1
0x5533: test rdx,rdx
0x5536: je 0x5555
0x5538: lea rdi,[rip+0x2321]
0x553f: mov ecx,0x2
0x5544: mov rsi,rdx
0x5547: rep cmpsb [rsi],es:[rdi]
0x5549: seta cl
0x554c: sbb cl,0x0
0x554f: xor eax,eax
0x5551: test cl,cl
0x5553: jne 0x5560
0x5555: add rsp,0x8
0x5559: ret 
0x5560: lea rdi,[rip+0x22fb]
0x5567: mov ecx,0x6
0x556c: mov rsi,rdx
0x556f: rep cmpsb [rsi],es:[rdi]
0x5571: seta al
0x5574: sbb al,0x0
0x5576: test al,al
0x5578: setne al
0x557b: add rsp,0x8
0x557f: ret 
0x5580: sub rsp,0x8
0x5584: mov edi,0xe
0x5589: call 0x1a10
0x558e: test rax,rax
0x5591: je 0x55b0
0x5593: cmp byte ptr [rax],0x0
0x5596: lea rdx,[rip+0x22cb]
0x559d: cmove rax,rdx
0x55a1: add rsp,0x8
0x55a5: ret 
0x55b0: lea rax,[rip+0x22b1]
0x55b7: add rsp,0x8
0x55bb: ret 
0x55c0: push rbx
0x55c1: mov rbx,rdi
0x55c4: mov edi,0x18
0x55c9: call 0x50e0
0x55ce: mov qword ptr [rax],rbx
0x55d1: mov qword ptr [rax+0x10],0x0
0x55d9: mov qword ptr [rax+0x8],0x0
0x55e1: pop rbx
0x55e2: ret 
0x5630: mov rax,qword ptr [rdi]
0x5633: ret 
0x5755: call 0x18d0
0x575a: nop word ptr [rax+rax]
0x5760: push rbx
0x5761: mov rdx,-0x1
0x5768: mov rbx,rdi
0x576b: mov esi,0x18
0x5770: call 0x1aa0
0x5775: mov rdi,rbx
0x5778: pop rbx
0x5779: jmp 0x1790
0x57e0: push rbp
0x57e1: push rbx
0x57e2: sub rsp,0x8
0x57e6: test rdi,rdi
0x57e9: je 0x5828
0x57eb: call 0x47c0
0x57f0: mov rbp,rax
0x57f3: call 0x17b0
0x57f8: cmp dword ptr [rax],0x0
0x57fb: mov rbx,rax
0x57fe: mov edx,0x5
0x5803: je 0x582d
0x5805: lea rsi,[rip+0x2072]
0x580c: xor edi,edi
0x580e: call 0x1890
0x5813: mov edi,dword ptr [rip+0x2047ff]
0x5819: mov esi,dword ptr [rbx]
0x581b: mov rdx,rax
0x581e: mov rcx,rbp
0x5821: xor eax,eax
0x5823: call 0x1a90
0x5828: call 0x17a0
0x582d: lea rsi,[rip+0x203a]
0x5834: xor edi,edi
0x5836: call 0x1890
0x583b: jmp 0x5813
0x5872: lea rsi,[rip+0x2021]
0x5879: call 0x6250
0x587e: test rax,rax
0x5881: mov r13,rax
0x5884: je 0x5a88
0x588a: mov edi,0x1038
0x588f: call 0x50e0
0x5894: mov rbx,rax
0x5897: mov qword ptr [rax],r13
0x589a: lea rax,[rip-0xc1]
0x58a1: cmp rbp,0x1000
0x58a8: mov ecx,0x1000
0x58ad: lea rsi,[rbx+0x18]
0x58b1: cmovbe rcx,rbp
0x58b5: mov qword ptr [rbx+0x8],rax
0x58b9: mov qword ptr [rbx+0x10],r12
0x58bd: xor edx,edx
0x58bf: mov rdi,r13
0x58c2: call 0x1a70
0x5a88: xor ebx,ebx
0x5a8a: jmp 0x58c7
0x5a8f: call 0x18d0
0x5add: mov r15,r14
0x5ae0: mov r8d,0x4
0x5ae6: sub r15,rbp
0x5ae9: mov qword ptr [rsp+0x8],r8
0x5aee: cmp r15,0x4
0x5af2: cmova r15,r8
0x5af6: lea rdx,[rbp+r15]
0x5afb: add rbp,r13
0x5afe: mov qword ptr [rsp],rdx
0x5b02: call 0x1840
0x5b07: mov rdx,qword ptr [rsp]
0x5b0b: mov dword ptr [rsp+0x10],eax
0x5b0f: mov ecx,r15d
0x5b12: mov rdi,rbp
0x5b15: mov rsi,r12
0x5b18: mov r8,qword ptr [rsp+0x8]
0x5b1d: rep movsb byte ptr es:[rdi],byte ptr [rsi]
0x5b1f: cmp rdx,0x7ff
0x5b26: jg 0x5975
0x5b2c: sub r14,rdx
0x5b2f: cmp r14,0x4
0x5b33: cmova r14,r8
0x5b37: call 0x1af0
0x5b3c: mov rdx,qword ptr [rsp]
0x5b40: mov dword ptr [rsp+0x10],eax
0x5b44: mov ecx,r14d
0x5b47: mov rsi,r12
0x5b4a: lea rax,[r13+rdx]
0x5b4f: add r14,rdx
0x5b52: cmp r14,0x7ff
0x5b59: mov rdi,rax
0x5b5c: rep movsb byte ptr es:[rdi],byte ptr [rsi]
0x5b5e: ja 0x5975
0x5b64: jmp 0x59ef
0x5b70: mov qword ptr [rdi+0x8],rsi
0x5b74: ret 
0x5b80: mov qword ptr [rdi+0x10],rsi
0x5b84: ret 
0x5bb4: call 0x17b0
0x5bb9: mov rcx,qword ptr [rsp+0x8]
0x5bbe: mov r13,rax
0x5bc1: jmp 0x5be6
0x5bc8: mov rax,qword ptr [r12]
0x5bcc: mov rdi,qword ptr [r12+0x10]
0x5bd1: mov eax,dword ptr [rax]
0x5bd3: and eax,0x20
0x5bd6: cmovne eax,edx
0x5bd9: mov dword ptr [r13],eax
0x5bdd: call qword ptr [r12+0x8]
0x5be2: mov rcx,qword ptr [r12]
0x5be6: mov rdx,rbp
0x5be9: mov rdi,rbx
0x5bec: mov esi,0x1
0x5bf1: call 0x1850
0x5bf6: add rbx,rax
0x5bf9: sub rbp,rax
0x5bfc: mov edx,dword ptr [r13]
0x5c00: jne 0x5bc8
0x5d5a: add rsp,0x8
0x5d5e: mov rdi,rbp
0x5d61: pop rbx
0x5d62: pop rbp
0x5d63: jmp 0x5370
0x6250: push r12
0x6252: push rbp
0x6253: mov rbp,rsi
0x6256: push rbx
0x6257: call 0x1ad0
0x625c: test rax,rax
0x625f: mov rbx,rax
0x6262: je 0x6271
0x6264: mov rdi,rax
0x6267: call 0x19d0
0x626c: cmp eax,0x2
0x626f: jbe 0x6280
0x6271: mov rax,rbx
0x6274: pop rbx
0x6275: pop rbp
0x6276: pop r12
0x6278: ret 
0x6280: mov edi,eax
0x6282: call 0x62f0
0x6287: test eax,eax
0x6289: mov r12d,eax
0x628c: js 0x62c8
0x628e: mov rdi,rbx
0x6291: call 0x5370
0x6296: test eax,eax
0x6298: jne 0x62ad
0x629a: mov rsi,rbp
0x629d: mov edi,r12d
0x62a0: call 0x1a40
0x62a5: test rax,rax
0x62a8: mov rbx,rax
0x62ab: jne 0x6271
0x62ad: call 0x17b0
0x62b2: mov ebp,dword ptr [rax]
0x62b4: mov rbx,rax
0x62b7: mov edi,r12d
0x62ba: call 0x1960
0x62bf: mov dword ptr [rbx],ebp
0x62c1: xor ebx,ebx
0x62c3: jmp 0x6271
0x62c8: call 0x17b0
0x62cd: mov r12d,dword ptr [rax]
0x62d0: mov rbp,rax
0x62d3: mov rdi,rbx
0x62d6: call 0x5370
0x62db: xor ebx,ebx
0x62dd: mov dword ptr [rbp],r12d
0x62e1: jmp 0x6271
0x62f0: mov edx,0x3
0x62f5: xor esi,esi
0x62f7: xor eax,eax
0x62f9: jmp 0x6300
0x6300: push r12
0x6302: push rbp
0x6303: mov ebp,edi
0x6305: push rbx
0x6306: sub rsp,0x50
0x630a: mov rax,qword ptr fs:0x28
0x6313: mov qword ptr [rsp+0x18],rax
0x6318: xor eax,eax
0x631a: lea rax,[rsp+0x70]
0x631f: test esi,esi
0x6321: mov qword ptr [rsp+0x30],rdx
0x6326: mov qword ptr [rsp+0x38],rcx
0x632b: mov qword ptr [rsp+0x40],r8
0x6330: mov qword ptr [rsp+0x8],rax
0x6335: lea rax,[rsp+0x20]
0x633a: mov qword ptr [rsp+0x48],r9
0x633f: mov dword ptr [rsp],0x10
0x6346: mov qword ptr [rsp+0x10],rax
0x634b: je 0x6552
0x6351: cmp esi,0x406
0x6357: jne 0x63a0
0x6359: mov rax,qword ptr [rsp+0x10]
0x635e: cmp dword ptr [rip+0x203ed3],0x0
0x6365: mov dword ptr [rsp],0x18
0x636c: mov r12d,dword ptr [rax+0x10]
0x6370: mov edx,r12d
0x6373: js 0x64a3
0x6379: xor eax,eax
0x637b: mov esi,0x406
0x6380: call 0x1830
0x6385: test eax,eax
0x6387: mov ebx,eax
0x6389: js 0x6518
0x638f: mov dword ptr [rip+0x203e9f],0x1
0x6399: jmp 0x63e0
0x63a0: cmp esi,0xb
0x63a3: je 0x63d0
0x63a5: jg 0x6400
0x63a7: cmp esi,0x4
0x63aa: je 0x6480
0x63b0: jg 0x6470
0x63b6: cmp esi,0x2
0x63b9: je 0x6480
0x63bf: jg 0x63d0
0x63c1: cmp esi,0x1
0x63c4: jne 0x6428
0x63c6: nop word ptr cs:[rax+rax]
0x63d0: mov edi,ebp
0x63d2: xor eax,eax
0x63d4: call 0x1830
0x63d9: mov ebx,eax
0x63db: nop dword ptr [rax+rax]
0x63e0: mov rcx,qword ptr [rsp+0x18]
0x63e5: xor rcx,qword ptr fs:0x28
0x63ee: mov eax,ebx
0x63f0: jne 0x654d
0x63f6: add rsp,0x50
0x63fa: pop rbx
0x63fb: pop rbp
0x63fc: pop r12
0x63fe: ret 
0x6400: cmp esi,0x407
0x6406: jg 0x6450
0x6408: cmp esi,0x406
0x640e: jge 0x6480
0x6410: cmp esi,0x401
0x6416: je 0x63d0
0x6418: cmp esi,0x402
0x641e: je 0x6480
0x6420: cmp esi,0x400
0x6426: je 0x6480
0x6428: mov eax,dword ptr [rsp]
0x642b: cmp eax,0x2f
0x642e: ja 0x656a
0x6434: add rax,qword ptr [rsp+0x10]
0x6439: mov rdx,qword ptr [rax]
0x643c: mov edi,ebp
0x643e: xor eax,eax
0x6440: call 0x1830
0x6445: mov ebx,eax
0x6447: jmp 0x63e0
0x6450: cmp esi,0x409
0x6456: je 0x6480
0x6458: jl 0x63d0
0x645e: cmp esi,0x40a
0x6464: jne 0x6428
0x6466: jmp 0x63d0
0x6470: cmp esi,0x9
0x6473: je 0x63d0
0x6479: jg 0x6480
0x647b: cmp esi,0x8
0x647e: jne 0x6428
0x6480: mov eax,dword ptr [rsp]
0x6483: cmp eax,0x2f
0x6486: ja 0x6574
0x648c: add rax,qword ptr [rsp+0x10]
0x6491: mov edx,dword ptr [rax]
0x6493: mov edi,ebp
0x6495: xor eax,eax
0x6497: call 0x1830
0x649c: mov ebx,eax
0x649e: jmp 0x63e0
0x64a3: xor esi,esi
0x64a5: xor eax,eax
0x64a7: call 0x1830
0x64ac: test eax,eax
0x64ae: mov ebx,eax
0x64b0: js 0x63e0
0x64b6: cmp dword ptr [rip+0x203d7b],-0x1
0x64bd: jne 0x63e0
0x64c3: xor eax,eax
0x64c5: mov esi,0x1
0x64ca: mov edi,ebx
0x64cc: call 0x1830
0x64d1: test eax,eax
0x64d3: js 0x64f1
0x64d5: or eax,0x1
0x64d8: mov esi,0x2
0x64dd: mov edi,ebx
0x64df: mov edx,eax
0x64e1: xor eax,eax
0x64e3: call 0x1830
0x64e8: cmp eax,-0x1
0x64eb: jne 0x63e0
0x64f1: call 0x17b0
0x64f6: mov r12d,dword ptr [rax]
0x64f9: mov rbp,rax
0x64fc: mov edi,ebx
0x64fe: call 0x1960
0x6503: mov ebx,0xffffffff
0x6508: mov dword ptr [rbp],r12d
0x650c: jmp 0x63e0
0x6518: call 0x17b0
0x651d: cmp dword ptr [rax],0x16
0x6520: jne 0x638f
0x6526: xor esi,esi
0x6528: xor eax,eax
0x652a: mov edx,r12d
0x652d: mov edi,ebp
0x652f: call 0x1830
0x6534: test eax,eax
0x6536: mov ebx,eax
0x6538: js 0x63e0
0x653e: mov dword ptr [rip+0x203cf0],0xffffffff
0x6548: jmp 0x64c3
0x654d: call 0x18d0
0x6552: mov rax,qword ptr [rsp+0x10]
0x6557: xor esi,esi
0x6559: mov edx,dword ptr [rax+0x10]
0x655c: xor eax,eax
0x655e: call 0x1830
0x6563: mov ebx,eax
0x6565: jmp 0x63e0
0x656a: mov rax,qword ptr [rsp+0x8]
0x656f: jmp 0x6439
0x6574: mov rax,qword ptr [rsp+0x8]
0x6579: jmp 0x6491
0x6580: push r15
0x6582: push r14
0x6584: mov r15,rdx
0x6587: push r13
0x6589: push r12
0x658b: lea r12,[rip+0x2034de]
0x6592: push rbp
0x6593: lea rbp,[rip+0x2034de]
0x659a: push rbx
0x659b: mov r13d,edi
0x659e: mov r14,rsi
0x65a1: sub rbp,r12
0x65a4: sub rsp,0x8
0x65a8: sar rbp,0x3
0x65ac: call 0x1758
0x65b1: test rbp,rbp
0x65b4: je 0x65d6
0x65b6: xor ebx,ebx
0x65b8: nop dword ptr [rax+rax]
0x65c0: mov rdx,r15
0x65c3: mov rsi,r14
0x65c6: mov edi,r13d
0x65c9: call qword ptr [r12+rbx*8]
0x65cd: add rbx,0x1
0x65d1: cmp rbp,rbx
0x65d4: jne 0x65c0
0x65d6: add rsp,0x8
0x65da: pop rbx
0x65db: pop rbp
0x65dc: pop r12
0x65de: pop r13
0x65e0: pop r14
0x65e2: pop r15
0x65e4: ret 
0x65f0: rep ret 
