0x23e0: sub rsp,0x8
0x23e4: mov rax,qword ptr [rip+0x20ebfd]
0x23eb: test rax,rax
0x23ee: je 0x23f2
0x23f0: call rax
0x23f2: add rsp,0x8
0x23f6: ret 
0x2406: jmp qword ptr [rip+0x20e9ec]
0x2420: jmp qword ptr [rip+0x20e9e2]
0x2470: jmp qword ptr [rip+0x20e9ba]
0x2480: jmp qword ptr [rip+0x20e9b2]
0x24c0: jmp qword ptr [rip+0x20e992]
0x2510: jmp qword ptr [rip+0x20e96a]
0x2540: jmp qword ptr [rip+0x20e952]
0x2590: jmp qword ptr [rip+0x20e92a]
0x25a0: jmp qword ptr [rip+0x20e922]
0x2610: jmp qword ptr [rip+0x20e8ea]
0x2650: jmp qword ptr [rip+0x20e8ca]
0x2670: jmp qword ptr [rip+0x20e8ba]
0x2680: jmp qword ptr [rip+0x20e8b2]
0x2690: jmp qword ptr [rip+0x20e8aa]
0x2720: jmp qword ptr [rip+0x20e862]
0x2790: jmp qword ptr [rip+0x20e82a]
0x27a0: jmp qword ptr [rip+0x20e822]
0x27c0: jmp qword ptr [rip+0x20e832]
0x293b: nop dword ptr [rax+rax]
0x2b53: mov rbx,rax
0x2b56: call 0x2450
0x2b5b: mov esi,dword ptr [rax]
0x2b5d: lea rdx,[rip+0xaf68]
0x2b64: mov rcx,rbx
0x2b67: mov edi,0x1
0x2b6c: xor eax,eax
0x2b6e: call 0x26e0
0x2baf: movzx esi,byte ptr [rip+0x20e5da]
0x2bb6: lea rdi,[rip+0x8a37]
0x2bbd: xor eax,eax
0x2bbf: call 0x3520
0x2bc4: mov rdi,qword ptr [rip+0x20e4dd]
0x2bcb: mov rax,qword ptr [rdi+0x28]
0x2bcf: cmp rax,qword ptr [rdi+0x30]
0x2bd3: jae 0x3196
0x2bd9: lea rdx,[rax+0x1]
0x2bdd: mov qword ptr [rdi+0x28],rdx
0x2be1: mov byte ptr [rax],0xa
0x2be4: mov dword ptr [rip+0x20e60e],0x0
0x2bee: lea r15,[rip+0x20d28b]
0x2bf5: mov r13d,0x1
0x2bfb: lea rbp,[rip+0x8942]
0x2c02: lea r12,[rip+0x20e577]
0x2c09: jmp 0x2c56
0x2c0b: mov rax,qword ptr [r15+0x10]
0x2c0f: movzx r14d,byte ptr [r12+rax+0x11]
0x2c15: cmp r14b,byte ptr [r15+0x8]
0x2c19: je 0x2c52
0x2c1b: lea rsi,[rip+0x89dd]
0x2c22: mov rdi,rbx
0x2c25: call 0x2620
0x2c2a: test eax,eax
0x2c2c: je 0x2c52
0x2c2e: test r14b,r14b
0x2c31: lea rdx,[rip+0x8970]
0x2c38: jne 0x2efa
0x2c3e: lea rdi,[rip+0x89c0]
0x2c45: mov rsi,rbx
0x2c48: xor eax,eax
0x2c4a: xor r13d,r13d
0x2c4d: call 0x3520
0x2c52: add r15,0x18
0x2c56: mov rbx,qword ptr [r15]
0x2c59: mov rsi,rbp
0x2c5c: mov rdi,rbx
0x2c5f: call 0x2620
0x2c64: test eax,eax
0x2c66: jne 0x2c0b
0x2c68: test byte ptr [rip+0x20e51d],0x2
0x2c6f: je 0x313b
0x2c75: test r13b,r13b
0x2c78: jne 0x2c9a
0x2c7a: mov rdi,qword ptr [rip+0x20e427]
0x2c81: mov rax,qword ptr [rdi+0x28]
0x2c85: cmp rax,qword ptr [rdi+0x30]
0x2c89: jae 0x3228
0x2c8f: lea rdx,[rax+0x1]
0x2c93: mov qword ptr [rdi+0x28],rdx
0x2c97: mov byte ptr [rax],0xa
0x2c9a: mov dword ptr [rip+0x20e558],0x0
0x2ca4: lea rbx,[rip+0x20d3b5]
0x2cab: xor ebp,ebp
0x2cad: mov r12d,0x1
0x2cb3: jmp 0x2cc5
0x2cb5: and ecx,0x5
0x2cb8: cmp cl,0x5
0x2cbb: je 0x2ead
0x2cc1: add rbx,0x20
0x2cc5: cmp qword ptr [rbx],0x0
0x2cc9: je 0x2ec6
0x2ccf: test byte ptr [rbx+0xc],0x8
0x2cd3: jne 0x2cc1
0x2cd5: cmp dword ptr [rbx+0x8],ebp
0x2cd8: mov edi,ebp
0x2cda: je 0x2d16
0x2cdc: test r12b,r12b
0x2cdf: jne 0x2d0b
0x2ce1: mov rdi,qword ptr [rip+0x20e3c0]
0x2ce8: mov rax,qword ptr [rdi+0x28]
0x2cec: cmp rax,qword ptr [rdi+0x30]
0x2cf0: jae 0x315a
0x2cf6: lea rdx,[rax+0x1]
0x2cfa: mov qword ptr [rdi+0x28],rdx
0x2cfe: mov byte ptr [rax],0xa
0x2d01: mov dword ptr [rip+0x20e4f1],0x0
0x2d0b: mov edi,dword ptr [rbx+0x8]
0x2d0e: mov r12d,0x1
0x2d14: mov ebp,edi
0x2d16: lea rsi,[rip+0x20e463]
0x2d1d: call 0x34d0
0x2d22: mov rdx,qword ptr [rbx+0x18]
0x2d26: test rdx,rdx
0x2d29: jne 0x2d2f
0x2d2b: mov rdx,qword ptr [rbx+0x10]
0x2d2f: test rax,rax
0x2d32: je 0x31a5
0x2d38: and edx,dword ptr [rax]
0x2d3a: movzx ecx,byte ptr [rbx+0xc]
0x2d3e: cmp rdx,qword ptr [rbx+0x10]
0x2d42: jne 0x2cb5
0x2d48: and cl,0x2
0x2d4b: je 0x2cc1
0x2d51: mov rsi,qword ptr [rbx]
0x2d54: lea rdi,[rip+0xad71]
0x2d5b: xor eax,eax
0x2d5d: xor r12d,r12d
0x2d60: call 0x3520
0x2d65: jmp 0x2cc1
0x2e83: lea rsi,[rip+0xabfe]
0x2e8a: mov rbx,rax
0x2e8d: mov edx,0x5
0x2e92: xor edi,edi
0x2e94: call 0x24f0
0x2e99: mov rcx,rbx
0x2e9c: mov rdx,rax
0x2e9f: xor esi,esi
0x2ea1: mov edi,0x1
0x2ea6: xor eax,eax
0x2ea8: call 0x26e0
0x2ead: mov rsi,qword ptr [rbx]
0x2eb0: lea rdi,[rip+0x876f]
0x2eb7: xor eax,eax
0x2eb9: xor r12d,r12d
0x2ebc: call 0x3520
0x2ec1: jmp 0x2cc1
0x2ec6: test r12b,r12b
0x2ec9: jne 0x2eeb
0x2ecb: mov rdi,qword ptr [rip+0x20e1d6]
0x2ed2: mov rax,qword ptr [rdi+0x28]
0x2ed6: cmp rax,qword ptr [rdi+0x30]
0x2eda: jae 0x3187
0x2ee0: lea rdx,[rax+0x1]
0x2ee4: mov qword ptr [rdi+0x28],rdx
0x2ee8: mov byte ptr [rax],0xa
0x2eeb: mov dword ptr [rip+0x20e307],0x0
0x2ef5: jmp 0x2aee
0x2efa: movzx edi,r14b
0x2efe: call 0x38b0
0x2f03: mov rdx,rax
0x2f06: jmp 0x2c3e
0x2f1c: mov rsi,r14
0x2f1f: mov edi,0x1
0x2f24: call 0x3b20
0x2f29: movzx esi,byte ptr [rip+0x20e260]
0x2f30: lea rdi,[rip+0x86bd]
0x2f37: xor eax,eax
0x2f39: call 0x3520
0x2f3e: mov rdi,qword ptr [rip+0x20e163]
0x2f45: mov rax,qword ptr [rdi+0x28]
0x2f49: cmp rax,qword ptr [rdi+0x30]
0x2f4d: jae 0x3169
0x2f53: lea rdx,[rax+0x1]
0x2f57: mov qword ptr [rdi+0x28],rdx
0x2f5b: mov byte ptr [rax],0xa
0x2f5e: mov dword ptr [rip+0x20e294],0x0
0x2f68: lea rbx,[rip+0x20cf11]
0x2f6f: lea r12,[rip+0x85ce]
0x2f76: lea r13,[rip+0x8682]
0x2f7d: lea r15,[rip+0x20e1fc]
0x2f84: lea r14,[rip+0x861d]
0x2f8b: jmp 0x2fcd
0x2f8d: mov rsi,r13
0x2f90: mov rdi,rbp
0x2f93: call 0x2620
0x2f98: test eax,eax
0x2f9a: je 0x2fc9
0x2f9c: mov rax,qword ptr [rbx+0x10]
0x2fa0: mov rdx,r14
0x2fa3: movzx ecx,byte ptr [r15+rax+0x11]
0x2fa9: test cl,cl
0x2fab: je 0x2fb8
0x2fad: movzx edi,cl
0x2fb0: call 0x38b0
0x2fb5: mov rdx,rax
0x2fb8: lea rdi,[rip+0x8646]
0x2fbf: mov rsi,rbp
0x2fc2: xor eax,eax
0x2fc4: call 0x3520
0x2fc9: add rbx,0x18
0x2fcd: mov rbp,qword ptr [rbx]
0x2fd0: mov rsi,r12
0x2fd3: mov rdi,rbp
0x2fd6: call 0x2620
0x2fdb: test eax,eax
0x2fdd: jne 0x2f8d
0x2fdf: movzx edx,byte ptr [rip+0x20e1b0]
0x2fe6: movzx esi,byte ptr [rip+0x20e1aa]
0x2fed: lea rdi,[rip+0x8636]
0x2ff4: call 0x3520
0x2ff9: cmp dword ptr [rip+0x20e1fc],0x0
0x3000: je 0x3022
0x3002: mov rdi,qword ptr [rip+0x20e09f]
0x3009: mov rax,qword ptr [rdi+0x28]
0x300d: cmp rax,qword ptr [rdi+0x30]
0x3011: jae 0x3219
0x3017: lea rdx,[rax+0x1]
0x301b: mov qword ptr [rdi+0x28],rdx
0x301f: mov byte ptr [rax],0xa
0x3022: mov dword ptr [rip+0x20e1d0],0x0
0x302c: lea rbx,[rip+0x20d02d]
0x3033: xor r12d,r12d
0x3036: lea r13,[rip+0x20e143]
0x303d: jmp 0x3043
0x303f: add rbx,0x20
0x3043: cmp qword ptr [rbx],0x0
0x3047: je 0x2ecb
0x304d: test byte ptr [rbx+0xc],0x8
0x3051: jne 0x303f
0x3053: mov ebp,dword ptr [rbx+0x8]
0x3056: cmp ebp,r12d
0x3059: je 0x308b
0x305b: mov rdi,qword ptr [rip+0x20e046]
0x3062: mov rax,qword ptr [rdi+0x28]
0x3066: cmp rax,qword ptr [rdi+0x30]
0x306a: jae 0x312c
0x3070: lea rdx,[rax+0x1]
0x3074: mov qword ptr [rdi+0x28],rdx
0x3078: mov byte ptr [rax],0xa
0x307b: mov r12d,ebp
0x307e: mov ebp,dword ptr [rbx+0x8]
0x3081: mov dword ptr [rip+0x20e171],0x0
0x308b: mov rsi,r13
0x308e: mov edi,ebp
0x3090: call 0x34d0
0x3095: mov rdx,qword ptr [rbx+0x18]
0x3099: test rdx,rdx
0x309c: jne 0x30a2
0x309e: mov rdx,qword ptr [rbx+0x10]
0x30a2: test rax,rax
0x30a5: je 0x3295
0x30ab: and edx,dword ptr [rax]
0x30ad: cmp rdx,qword ptr [rbx+0x10]
0x30b1: je 0x30cf
0x30b3: test byte ptr [rbx+0xc],0x4
0x30b7: je 0x303f
0x30b9: mov rsi,qword ptr [rbx]
0x30bc: lea rdi,[rip+0x8563]
0x30c3: xor eax,eax
0x30c5: call 0x3520
0x30ca: jmp 0x303f
0x30cf: mov rsi,qword ptr [rbx]
0x30d2: lea rdi,[rip+0xa9f3]
0x30d9: xor eax,eax
0x30db: call 0x3520
0x30e0: jmp 0x303f
0x312c: mov esi,0xa
0x3131: call 0x2570
0x3136: jmp 0x307b
0x313b: movzx edx,byte ptr [rip+0x20e054]
0x3142: movzx esi,byte ptr [rip+0x20e04e]
0x3149: lea rdi,[rip+0x84be]
0x3150: call 0x3520
0x3155: jmp 0x2c9a
0x315a: mov esi,0xa
0x315f: call 0x2570
0x3164: jmp 0x2d01
0x3169: mov esi,0xa
0x316e: call 0x2570
0x3173: jmp 0x2f5e
0x3182: jmp 0x2aee
0x3187: mov esi,0xa
0x318c: call 0x2570
0x3191: jmp 0x2eeb
0x3196: mov esi,0xa
0x319b: call 0x2570
0x31a0: jmp 0x2be4
0x31a5: lea rcx,[rip+0x8784]
0x31ac: lea rsi,[rip+0x8303]
0x31b3: lea rdi,[rip+0x8319]
0x31ba: mov edx,0x7a2
0x31bf: call 0x25a0
0x31c4: call 0x2520
0x3219: mov esi,0xa
0x321e: call 0x2570
0x3223: jmp 0x3022
0x3228: mov esi,0xa
0x322d: call 0x2570
0x3232: jmp 0x2c9a
0x3246: mov rbx,rax
0x3249: call 0x2450
0x324e: mov esi,dword ptr [rax]
0x3250: lea rdx,[rip+0xa875]
0x3257: mov rcx,rbx
0x325a: mov edi,0x1
0x325f: xor eax,eax
0x3261: call 0x26e0
0x3275: mov rbx,rax
0x3278: call 0x2450
0x327d: mov esi,dword ptr [rax]
0x327f: lea rdx,[rip+0xa846]
0x3286: mov rcx,rbx
0x3289: mov edi,0x1
0x328e: xor eax,eax
0x3290: call 0x26e0
0x3295: lea rcx,[rip+0x867c]
0x329c: lea rsi,[rip+0x8213]
0x32a3: lea rdi,[rip+0x8229]
0x32aa: mov edx,0x7f6
0x32af: call 0x25a0
0x32e7: lea rsi,[rip+0xa772]
0x32ee: mov edx,0x5
0x32f3: xor edi,edi
0x32f5: mov rbp,rax
0x32f8: call 0x24f0
0x32fd: mov rbx,rax
0x3300: call 0x2450
0x3305: mov esi,dword ptr [rax]
0x3307: mov rcx,rbp
0x330a: mov rdx,rbx
0x330d: mov edi,0x1
0x3312: xor eax,eax
0x3314: call 0x26e0
0x3328: mov rbx,rax
0x332b: call 0x2450
0x3330: mov esi,dword ptr [rax]
0x3332: lea rdx,[rip+0xa793]
0x3339: mov rcx,rbx
0x333c: mov edi,0x1
0x3341: xor eax,eax
0x3343: call 0x26e0
0x3348: nop dword ptr [rax+rax]
0x337a: hlt 
0x337b: nop dword ptr [rax+rax]
0x3380: lea rdi,[rip+0x20dd19]
0x3387: push rbp
0x3388: lea rax,[rip+0x20dd11]
0x338f: cmp rax,rdi
0x3392: mov rbp,rsp
0x3395: je 0x33b0
0x3397: mov rax,qword ptr [rip+0x20dc3a]
0x339e: test rax,rax
0x33a1: je 0x33b0
0x33a3: pop rbp
0x33a4: jmp rax
0x33b0: pop rbp
0x33b1: ret 
0x33c0: lea rdi,[rip+0x20dcd9]
0x33c7: lea rsi,[rip+0x20dcd2]
0x33ce: push rbp
0x33cf: sub rsi,rdi
0x33d2: mov rbp,rsp
0x33d5: sar rsi,0x3
0x33d9: mov rax,rsi
0x33dc: shr rax,0x3f
0x33e0: add rsi,rax
0x33e3: sar rsi, 1
0x33e6: je 0x3400
0x33e8: mov rax,qword ptr [rip+0x20dc01]
0x33ef: test rax,rax
0x33f2: je 0x3400
0x33f4: pop rbp
0x33f5: jmp rax
0x3400: pop rbp
0x3401: ret 
0x3421: push rbp
0x3422: mov rbp,rsp
0x3425: je 0x3433
0x3427: mov rdi,qword ptr [rip+0x20dbda]
0x342e: call 0x27c0
0x3433: call 0x3380
0x3438: mov byte ptr [rip+0x20dcc9],0x1
0x343f: pop rbp
0x3440: ret 
0x3450: push rbp
0x3451: mov rbp,rsp
0x3454: pop rbp
0x3455: jmp 0x33c0
0x351c: nop dword ptr [rax]
0x3548: movaps [rsp+0x60],xmm0
0x354d: movaps [rsp+0x70],xmm1
0x3552: movaps [rsp+0x80],xmm2
0x355a: movaps [rsp+0x90],xmm3
0x3562: movaps [rsp+0xa0],xmm4
0x356a: movaps [rsp+0xb0],xmm5
0x3572: movaps [rsp+0xc0],xmm6
0x357a: movaps [rsp+0xd0],xmm7
0x35cb: test eax,eax
0x35cd: mov ebx,eax
0x35cf: js 0x36a7
0x35d5: mov eax,dword ptr [rip+0x20dc21]
0x35db: mov rdi,qword ptr [rip+0x20dac6]
0x35e2: test eax,eax
0x35e4: jle 0x361f
0x35e6: mov edx,dword ptr [rip+0x20dc14]
0x35ec: mov rcx,qword ptr [rdi+0x28]
0x35f0: mov rsi,qword ptr [rdi+0x30]
0x35f4: sub edx,eax
0x35f6: cmp edx,ebx
0x35f8: jge 0x3658
0x35fa: cmp rcx,rsi
0x35fd: jae 0x3698
0x3603: lea rax,[rcx+0x1]
0x3607: mov qword ptr [rdi+0x28],rax
0x360b: mov byte ptr [rcx],0xa
0x360e: mov rdi,qword ptr [rip+0x20da93]
0x3615: mov dword ptr [rip+0x20dbdd],0x0
0x361f: mov rsi,rdi
0x3622: mov rdi,qword ptr [rsp+0x8]
0x3627: call 0x2600
0x362c: mov rdi,qword ptr [rsp+0x8]
0x3631: call 0x2430
0x3636: add dword ptr [rip+0x20dbc0],ebx
0x363c: mov rax,qword ptr [rsp+0x28]
0x3641: xor rax,qword ptr fs:0x28
0x364a: jne 0x36ac
0x364c: add rsp,0xe0
0x3653: pop rbx
0x3654: ret 
0x3658: cmp rcx,rsi
0x365b: jae 0x3680
0x365d: lea rdx,[rcx+0x1]
0x3661: mov qword ptr [rdi+0x28],rdx
0x3665: mov byte ptr [rcx],0x20
0x3668: add eax,0x1
0x366b: mov rdi,qword ptr [rip+0x20da36]
0x3672: mov dword ptr [rip+0x20db84],eax
0x3678: jmp 0x361f
0x3680: mov esi,0x20
0x3685: call 0x2570
0x368a: mov eax,dword ptr [rip+0x20db6c]
0x3690: jmp 0x3668
0x3698: mov esi,0xa
0x369d: call 0x2570
0x36a2: jmp 0x360e
0x36a7: call 0x8010
0x36ac: call 0x2520
0x36b1: nop dword ptr [rax+rax]
0x36b6: nop word ptr cs:[rax+rax]
0x3744: test bl,bl
0x3746: jne 0x3752
0x3748: mov dword ptr [rip+0x20daaa],0x0
0x3752: pop rbx
0x3753: pop rbp
0x3754: pop r12
0x3756: ret 
0x37f5: jmp 0x3744
0x38b0: cmp dil,0x1f
0x38b4: jbe 0x38d8
0x38b6: cmp dil,0x7e
0x38ba: ja 0x3900
0x38bc: lea rax,[rip+0x20d85e]
0x38c3: mov byte ptr [rip+0x20d856],dil
0x38ca: mov byte ptr [rax],0x0
0x38cd: lea rax,[rip+0x20d84c]
0x38d4: ret 
0x38d8: add edi,0x40
0x38db: lea rax,[rip+0x20d840]
0x38e2: mov byte ptr [rip+0x20d837],0x5e
0x38e9: mov byte ptr [rip+0x20d831],dil
0x38f0: mov byte ptr [rax],0x0
0x38f3: lea rax,[rip+0x20d826]
0x38fa: ret 
0x3900: cmp dil,0x7f
0x3904: je 0x3938
0x3906: mov edx,0x2d4d
0x390b: cmp dil,-0x61
0x390f: mov word ptr [rip+0x20d80a],dx
0x3916: jbe 0x3950
0x3918: cmp dil,-0x1
0x391c: je 0x3970
0x391e: add edi,-0x80
0x3921: lea rax,[rip+0x20d7fb]
0x3928: mov byte ptr [rip+0x20d7f3],dil
0x392f: jmp 0x38f0
0x3938: mov ecx,0x3f5e
0x393d: lea rax,[rip+0x20d7de]
0x3944: mov word ptr [rip+0x20d7d5],cx
0x394b: jmp 0x38f0
0x3950: sub edi,0x40
0x3953: mov byte ptr [rip+0x20d7c8],0x5e
0x395a: lea rax,[rip+0x20d7c3]
0x3961: mov byte ptr [rip+0x20d7bb],dil
0x3968: jmp 0x38f0
0x3970: mov eax,0x3f5e
0x3975: mov word ptr [rip+0x20d7a6],ax
0x397c: lea rax,[rip+0x20d7a1]
0x3983: jmp 0x38f0
0x3a24: call 0x2520
0x3a29: nop dword ptr [rax]
0x3ad2: mov esi,dword ptr [r14]
0x3ad5: lea rdx,[rip+0x9ff0]
0x3adc: mov rcx,rax
0x3adf: mov edi,0x1
0x3ae4: xor eax,eax
0x3ae6: call 0x26e0
0x3aeb: call 0x2520
0x3aff: mov rbx,rax
0x3b02: call 0x2450
0x3b07: mov esi,dword ptr [rax]
0x3b09: lea rdx,[rip+0x9fbc]
0x3b10: mov rcx,rbx
0x3b13: mov edi,0x1
0x3b18: xor eax,eax
0x3b1a: call 0x26e0
0x3b1f: nop 
0x3b65: mov rax,qword ptr [rsp+0x8]
0x3b6a: xor rax,qword ptr fs:0x28
0x3b73: jne 0x3be3
0x3b75: add rsp,0x10
0x3b79: pop rbx
0x3b7a: pop rbp
0x3b7b: pop r12
0x3b7d: ret 
0x3b8d: lea rdi,[rip+0x7794]
0x3b94: xor eax,eax
0x3b96: call 0x3520
0x3b9b: jmp 0x3b65
0x3bae: mov dword ptr [rip+0x20d644],0x0
0x3bb8: jmp 0x3b65
0x3bc9: mov esi,dword ptr [r12]
0x3bcd: lea rdx,[rip+0x9ef8]
0x3bd4: mov rcx,rax
0x3bd7: mov edi,0x1
0x3bdc: xor eax,eax
0x3bde: call 0x26e0
0x3be3: call 0x2520
0x3bf7: lea rsi,[rip+0x7d6a]
0x3bfe: mov rbx,rax
0x3c01: mov edx,0x5
0x3c06: xor edi,edi
0x3c08: call 0x24f0
0x3c0d: mov rcx,rbx
0x3c10: mov rdx,rax
0x3c13: xor esi,esi
0x3c15: mov edi,0x1
0x3c1a: xor eax,eax
0x3c1c: call 0x26e0
0x3c21: nop dword ptr [rax+rax]
0x3c26: nop word ptr cs:[rax+rax]
0x3c5f: lea rsi,[rip+0x7d2a]
0x3c66: xor edi,edi
0x3c68: call 0x24f0
0x3c6d: mov rdi,qword ptr [rip+0x20d48c]
0x3c74: mov rdx,rax
0x3c77: mov rcx,rbx
0x3c7a: mov esi,0x1
0x3c7f: xor eax,eax
0x3c81: call 0x2780
0x4dfe: movzx edx,byte ptr [rdi+0x1]
0x4f21: test rax,rax
0x4f24: je 0x52a9
0x4f2a: mov rdx,qword ptr [r12+0x10]
0x4f2f: or edx,dword ptr [r12+0x18]
0x4f34: not edx
0x4f36: and dword ptr [rax],edx
0x4f38: mov rax,qword ptr [rsp+0x20]
0x4f3d: mov byte ptr [rax],0x1
0x4f40: jmp 0x4be4
0x4fe7: test rax,rax
0x4fea: je 0x50d8
0x4ff0: mov edx,dword ptr [r12+0x18]
0x4ff5: not edx
0x4ff7: and edx,dword ptr [rax]
0x4ff9: or edx,dword ptr [r12+0x10]
0x4ffe: mov dword ptr [rax],edx
0x5000: mov rax,qword ptr [rsp+0x20]
0x5005: mov byte ptr [rax],0x1
0x5008: jmp 0x4be4
0x50a2: lea rsi,[rip+0x6470]
0x50a9: mov rbx,rax
0x50ac: mov edx,0x5
0x50b1: xor edi,edi
0x50b3: call 0x24f0
0x50b8: xor edi,edi
0x50ba: mov rdx,rax
0x50bd: mov rcx,rbx
0x50c0: xor esi,esi
0x50c2: xor eax,eax
0x50c4: call 0x26e0
0x50c9: mov edi,0x1
0x50ce: call 0x3c30
0x50d3: nop dword ptr [rax+rax]
0x50d8: lea rdi,[rip+0x64bc]
0x50df: mov ecx,0x6
0x50e4: mov rsi,r15
0x50e7: rep cmpsb [rsi],es:[rdi]
0x50e9: seta al
0x50ec: sbb al,0x0
0x50ee: test al,al
0x50f0: je 0x5207
0x50f6: lea rsi,[rip+0x64a4]
0x50fd: mov rdi,r15
0x5100: call 0x2620
0x5105: test eax,eax
0x5107: je 0x5207
0x510d: lea rsi,[rip+0x6395]
0x5114: mov rdi,r15
0x5117: call 0x2620
0x511c: test eax,eax
0x511e: jne 0x525d
0x5124: cmp byte ptr [rsp],0x0
0x5128: mov rcx,qword ptr [rsp+0x18]
0x512d: mov eax,dword ptr [rcx+0x8]
0x5130: jne 0x52cb
0x5136: mov rcx,qword ptr [rsp+0x18]
0x513b: and eax,0xfffffccf
0x5140: or eax,0x320
0x5145: mov dword ptr [rcx+0x8],eax
0x5148: mov rax,qword ptr [rsp+0x20]
0x514d: mov byte ptr [rax],0x1
0x5150: jmp 0x4be4
0x51d3: lea rsi,[rip+0x639f]
0x51da: mov rbx,rax
0x51dd: mov edx,0x5
0x51e2: xor edi,edi
0x51e4: call 0x24f0
0x51e9: mov rcx,rbx
0x51ec: mov rdx,rax
0x51ef: xor esi,esi
0x51f1: xor edi,edi
0x51f3: xor eax,eax
0x51f5: call 0x26e0
0x5207: mov rcx,qword ptr [rsp+0x18]
0x520c: mov eax,dword ptr [rcx+0x8]
0x520f: mov dword ptr [rsp],eax
0x5212: and eax,0xfffffccf
0x5217: or eax,0x120
0x521c: mov dword ptr [rcx+0x8],eax
0x521f: mov rax,qword ptr [rsp+0x20]
0x5224: mov byte ptr [rax],0x1
0x5227: jmp 0x4be4
0x5258: jmp 0x4be4
0x525d: lea rsi,[rip+0x6631]
0x5264: mov rdi,r15
0x5267: call 0x2620
0x526c: test eax,eax
0x526e: jne 0x5321
0x5274: cmp byte ptr [rsp],0x0
0x5278: mov rcx,qword ptr [rsp+0x18]
0x527d: mov eax,dword ptr [rcx+0x4]
0x5280: mov edx,dword ptr [rcx]
0x5282: je 0x53c0
0x5288: and eax,-0x2d
0x528b: and edx,0xfffffe3f
0x5291: or eax,0x4
0x5294: or dh,0x1
0x5297: mov dword ptr [rcx+0x4],eax
0x529a: mov rax,qword ptr [rsp+0x20]
0x529f: mov dword ptr [rcx],edx
0x52a1: mov byte ptr [rax],0x1
0x52a4: jmp 0x4be4
0x52a9: lea rsi,[rip+0x62eb]
0x52b0: mov rdi,r15
0x52b3: call 0x2620
0x52b8: test eax,eax
0x52ba: jne 0x5669
0x52c0: mov rcx,qword ptr [rsp+0x18]
0x52c5: mov eax,dword ptr [rcx+0x8]
0x52c8: mov dword ptr [rsp],eax
0x52cb: and eax,0xfffffecf
0x52d0: or eax,0x30
0x52d3: mov dword ptr [rcx+0x8],eax
0x52d6: mov rax,qword ptr [rsp+0x20]
0x52db: mov byte ptr [rax],0x1
0x52de: jmp 0x4be4
0x531c: jmp 0x4be4
0x5321: lea rsi,[rip+0x6186]
0x5328: mov rdi,r15
0x532b: call 0x2620
0x5330: test eax,eax
0x5332: je 0x53dd
0x5338: lea rsi,[rip+0x6172]
0x533f: mov rdi,r15
0x5342: call 0x2620
0x5347: test eax,eax
0x5349: je 0x5578
0x534f: lea rsi,[rip+0x6183]
0x5356: mov rdi,r15
0x5359: call 0x2620
0x535e: test eax,eax
0x5360: jne 0x552a
0x5366: cmp byte ptr [rsp],0x0
0x536a: mov rcx,qword ptr [rsp+0x18]
0x536f: mov eax,dword ptr [rcx+0xc]
0x5372: je 0x5685
0x5378: or eax,0x2
0x537b: mov dword ptr [rcx+0xc],eax
0x537e: mov rax,qword ptr [rsp+0x20]
0x5383: mov byte ptr [rax],0x1
0x5386: jmp 0x4be4
0x53c0: mov rcx,qword ptr [rsp+0x18]
0x53c5: and eax,-0x5
0x53c8: and dh,-0x2
0x53cb: mov dword ptr [rcx+0x4],eax
0x53ce: mov rax,qword ptr [rsp+0x20]
0x53d3: mov dword ptr [rcx],edx
0x53d5: mov byte ptr [rax],0x1
0x53d8: jmp 0x4be4
0x53dd: mov rax,qword ptr [rsp+0x18]
0x53e2: mov word ptr [rax+0x13],0x157f
0x53e8: mov rax,qword ptr [rsp+0x20]
0x53ed: mov byte ptr [rax],0x1
0x53f0: jmp 0x4be4
0x550b: mov edx,0x5
0x5510: mov rbx,rax
0x5513: lea rsi,[rip+0x5fff]
0x551a: jmp 0x50b1
0x552a: lea rsi,[rip+0x5faf]
0x5531: mov rdi,r15
0x5534: call 0x2620
0x5539: test eax,eax
0x553b: jne 0x56ba
0x5541: mov rcx,qword ptr [rsp+0x18]
0x5546: mov eax,dword ptr [rcx+0x8]
0x5549: mov edx,dword ptr [rcx]
0x554b: mov dword ptr [rsp+0x10],eax
0x554f: and eax,0xfffffecf
0x5554: cmp byte ptr [rsp],0x0
0x5558: je 0x569d
0x555e: or eax,0x120
0x5563: or edx,0x20
0x5566: mov dword ptr [rcx+0x8],eax
0x5569: mov rax,qword ptr [rsp+0x20]
0x556e: mov dword ptr [rcx],edx
0x5570: mov byte ptr [rax],0x1
0x5573: jmp 0x4be4
0x5578: lea rax,[rip+0x20a901]
0x557f: add rax,0x18
0x5583: cmp qword ptr [rax-0x18],0x0
0x5588: je 0x559d
0x558a: movzx ecx,byte ptr [rax-0x10]
0x558e: mov rdx,qword ptr [rax-0x8]
0x5592: mov rsi,qword ptr [rsp+0x18]
0x5597: mov byte ptr [rsi+rdx+0x11],cl
0x559b: jmp 0x557f
0x559d: lea rbx,[rip+0x20aabc]
0x55a4: jmp 0x55c8
0x55a6: mov edi,dword ptr [rbx+0x8]
0x55a9: mov rsi,qword ptr [rsp+0x18]
0x55ae: call 0x34d0
0x55b3: test rax,rax
0x55b6: je 0x561d
0x55b8: mov edx,dword ptr [rbx+0x18]
0x55bb: not edx
0x55bd: and edx,dword ptr [rax]
0x55bf: or edx,dword ptr [rbx+0x10]
0x55c2: mov dword ptr [rax],edx
0x55c4: add rbx,0x20
0x55c8: cmp qword ptr [rbx],0x0
0x55cc: je 0x51fa
0x55d2: movzx eax,byte ptr [rbx+0xc]
0x55d6: test al,0x10
0x55d8: jne 0x55c4
0x55da: test al,0x1
0x55dc: jne 0x55a6
0x55de: test al,0x2
0x55e0: je 0x55c4
0x55e2: mov edi,dword ptr [rbx+0x8]
0x55e5: mov rsi,qword ptr [rsp+0x18]
0x55ea: call 0x34d0
0x55ef: test rax,rax
0x55f2: je 0x563c
0x55f4: mov rdx,qword ptr [rbx+0x10]
0x55f8: or edx,dword ptr [rbx+0x18]
0x55fb: not edx
0x55fd: and dword ptr [rax],edx
0x55ff: jmp 0x55c4
0x5609: mov edx,0x5
0x560e: mov rbx,rax
0x5611: lea rsi,[rip+0x5f15]
0x5618: jmp 0x50b1
0x561d: lea rcx,[rip+0x62e4]
0x5624: lea rsi,[rip+0x5e8b]
0x562b: lea rdi,[rip+0x5ea1]
0x5632: mov edx,0x8cb
0x5637: call 0x25a0
0x563c: lea rcx,[rip+0x62c5]
0x5643: lea rsi,[rip+0x5e6c]
0x564a: lea rdi,[rip+0x5e82]
0x5651: mov edx,0x8d1
0x5656: call 0x25a0
0x565b: call 0x2520
0x5669: lea rsi,[rip+0x5f31]
0x5670: mov rdi,r15
0x5673: call 0x2620
0x5678: test eax,eax
0x567a: je 0x52c0
0x5680: jmp 0x510d
0x5685: mov rcx,qword ptr [rsp+0x18]
0x568a: and eax,-0x3
0x568d: mov dword ptr [rcx+0xc],eax
0x5690: mov rax,qword ptr [rsp+0x20]
0x5695: mov byte ptr [rax],0x1
0x5698: jmp 0x4be4
0x569d: mov rcx,qword ptr [rsp+0x18]
0x56a2: or eax,0x30
0x56a5: and edx,-0x21
0x56a8: mov dword ptr [rcx+0x8],eax
0x56ab: mov rax,qword ptr [rsp+0x20]
0x56b0: mov dword ptr [rcx],edx
0x56b2: mov byte ptr [rax],0x1
0x56b5: jmp 0x4be4
0x56ba: lea rsi,[rip+0x5e25]
0x56c1: mov rdi,r15
0x56c4: call 0x2620
0x56c9: test eax,eax
0x56cb: jne 0x570d
0x56cd: mov rsi,qword ptr [rsp+0x18]
0x56d2: mov eax,dword ptr [rsi+0x8]
0x56d5: mov edx,dword ptr [rsi+0x4]
0x56d8: mov ecx,dword ptr [rsi]
0x56da: mov dword ptr [rsp+0x10],eax
0x56de: and eax,0xfffffecf
0x56e3: cmp byte ptr [rsp],0x0
0x56e7: je 0x5795
0x56ed: or eax,0x120
0x56f2: or ecx,0x20
0x56f5: or edx,0x1
0x56f8: mov dword ptr [rsi+0x8],eax
0x56fb: mov rax,qword ptr [rsp+0x20]
0x5700: mov dword ptr [rsi],ecx
0x5702: mov dword ptr [rsi+0x4],edx
0x5705: mov byte ptr [rax],0x1
0x5708: jmp 0x4be4
0x570d: lea rsi,[rip+0x5dd9]
0x5714: mov rdi,r15
0x5717: call 0x2620
0x571c: test eax,eax
0x571e: je 0x5737
0x5720: lea rsi,[rip+0x5dca]
0x5727: mov rdi,r15
0x572a: call 0x2620
0x572f: test eax,eax
0x5731: jne 0x57b8
0x5737: movzx eax,byte ptr [r15]
0x573b: cmp al,0x72
0x573d: je 0x576f
0x573f: cmp al,0x63
0x5741: jne 0x5749
0x5743: cmp byte ptr [rsp],0x0
0x5747: je 0x5775
0x5749: mov rax,qword ptr [rsp+0x18]
0x574e: mov dword ptr [rax],0x0
0x5754: and dword ptr [rax+0x4],-0x2
0x5758: and dword ptr [rax+0xc],-0x8
0x575c: mov word ptr [rax+0x16],0x100
0x5762: mov rax,qword ptr [rsp+0x20]
0x5767: mov byte ptr [rax],0x1
0x576a: jmp 0x4be4
0x576f: cmp byte ptr [rsp],0x0
0x5773: je 0x5749
0x5775: mov rax,qword ptr [rsp+0x18]
0x577a: or dword ptr [rax],0x526
0x5780: or dword ptr [rax+0x4],0x1
0x5784: or dword ptr [rax+0xc],0x3
0x5788: mov rax,qword ptr [rsp+0x20]
0x578d: mov byte ptr [rax],0x1
0x5790: jmp 0x4be4
0x5795: mov rsi,qword ptr [rsp+0x18]
0x579a: or eax,0x30
0x579d: and ecx,-0x21
0x57a0: and edx,-0x2
0x57a3: mov dword ptr [rsi+0x8],eax
0x57a6: mov rax,qword ptr [rsp+0x20]
0x57ab: mov dword ptr [rsi],ecx
0x57ad: mov dword ptr [rsi+0x4],edx
0x57b0: mov byte ptr [rax],0x1
0x57b3: jmp 0x4be4
0x57b8: lea rsi,[rip+0x5d39]
0x57bf: mov rdi,r15
0x57c2: call 0x2620
0x57c7: test eax,eax
0x57c9: jne 0x57ea
0x57cb: cmp byte ptr [rsp],0x0
0x57cf: mov rcx,qword ptr [rsp+0x18]
0x57d4: mov eax,dword ptr [rcx]
0x57d6: je 0x581e
0x57d8: or ah,0x8
0x57db: mov dword ptr [rcx],eax
0x57dd: mov rax,qword ptr [rsp+0x20]
0x57e2: mov byte ptr [rax],0x1
0x57e5: jmp 0x4be4
0x57ea: lea rsi,[rip+0x5d0f]
0x57f1: mov rdi,r15
0x57f4: call 0x2620
0x57f9: test eax,eax
0x57fb: jne 0x584d
0x57fd: cmp byte ptr [rsp],0x0
0x5801: mov rcx,qword ptr [rsp+0x18]
0x5806: mov eax,dword ptr [rcx+0x4]
0x5809: je 0x5835
0x580b: or ah,0x18
0x580e: mov dword ptr [rcx+0x4],eax
0x5811: mov rax,qword ptr [rsp+0x20]
0x5816: mov byte ptr [rax],0x1
0x5819: jmp 0x4be4
0x581e: mov rcx,qword ptr [rsp+0x18]
0x5823: and ah,-0x9
0x5826: mov dword ptr [rcx],eax
0x5828: mov rax,qword ptr [rsp+0x20]
0x582d: mov byte ptr [rax],0x1
0x5830: jmp 0x4be4
0x5835: mov rcx,qword ptr [rsp+0x18]
0x583a: and ah,-0x19
0x583d: mov dword ptr [rcx+0x4],eax
0x5840: mov rax,qword ptr [rsp+0x20]
0x5845: mov byte ptr [rax],0x1
0x5848: jmp 0x4be4
0x584d: lea rsi,[rip+0x5cb1]
0x5854: mov rdi,r15
0x5857: call 0x2620
0x585c: test eax,eax
0x585e: je 0x5873
0x5860: lea rsi,[rip+0x5ca4]
0x5867: mov rdi,r15
0x586a: call 0x2620
0x586f: test eax,eax
0x5871: jne 0x58a4
0x5873: cmp byte ptr [rsp],0x0
0x5877: mov rsi,qword ptr [rsp+0x18]
0x587c: mov eax,dword ptr [rsi+0x4]
0x587f: mov ecx,dword ptr [rsi+0xc]
0x5882: mov edx,dword ptr [rsi]
0x5884: je 0x58f7
0x5886: and eax,-0x3
0x5889: and ecx,-0x5
0x588c: and dh,-0x3
0x588f: mov dword ptr [rsi+0x4],eax
0x5892: mov rax,qword ptr [rsp+0x20]
0x5897: mov dword ptr [rsi+0xc],ecx
0x589a: mov dword ptr [rsi],edx
0x589c: mov byte ptr [rax],0x1
0x589f: jmp 0x4be4
0x58a4: lea rsi,[rip+0x5c66]
0x58ab: mov rdi,r15
0x58ae: call 0x2620
0x58b3: test eax,eax
0x58b5: je 0x591a
0x58b7: lea rsi,[rip+0x5c57]
0x58be: mov rdi,r15
0x58c1: call 0x2620
0x58c6: test eax,eax
0x58c8: jne 0x51fa
0x58ce: mov rax,qword ptr [rsp+0x18]
0x58d3: and dword ptr [rax],0xfffff7ff
0x58d9: mov byte ptr [rax+0x11],0x3
0x58dd: mov word ptr [rax+0x13],0x157f
0x58e3: or dword ptr [rax+0xc],0xa10
0x58ea: mov rax,qword ptr [rsp+0x20]
0x58ef: mov byte ptr [rax],0x1
0x58f2: jmp 0x4be4
0x58f7: mov rsi,qword ptr [rsp+0x18]
0x58fc: or eax,0x2
0x58ff: or ecx,0x4
0x5902: or dh,0x2
0x5905: mov dword ptr [rsi+0x4],eax
0x5908: mov rax,qword ptr [rsp+0x20]
0x590d: mov dword ptr [rsi+0xc],ecx
0x5910: mov dword ptr [rsi],edx
0x5912: mov byte ptr [rax],0x1
0x5915: jmp 0x4be4
0x591a: mov rax,qword ptr [rsp+0x18]
0x591f: or dword ptr [rax+0xc],0xa10
0x5926: mov rax,qword ptr [rsp+0x20]
0x592b: mov byte ptr [rax],0x1
0x592e: jmp 0x4be4
0x5940: mov qword ptr [rip+0x20b8c9],rdi
0x5947: ret 
0x5950: mov byte ptr [rip+0x20b8b1],dil
0x5957: ret 
0x5960: push rbp
0x5961: push rbx
0x5962: sub rsp,0x8
0x5966: mov rdi,qword ptr [rip+0x20b73b]
0x596d: call 0x8ff0
0x5972: test eax,eax
0x5974: je 0x598c
0x5976: call 0x2450
0x597b: cmp byte ptr [rip+0x20b886],0x0
0x5982: mov rbx,rax
0x5985: je 0x59a3
0x5987: cmp dword ptr [rax],0x20
0x598a: jne 0x59a3
0x598c: mov rdi,qword ptr [rip+0x20b76d]
0x5993: call 0x8ff0
0x5998: test eax,eax
0x599a: jne 0x59e2
0x599c: add rsp,0x8
0x59a0: pop rbx
0x59a1: pop rbp
0x59a2: ret 
0x59a3: lea rsi,[rip+0x8112]
0x59aa: xor edi,edi
0x59ac: mov edx,0x5
0x59b1: call 0x24f0
0x59b6: mov rdi,qword ptr [rip+0x20b853]
0x59bd: mov rbp,rax
0x59c0: test rdi,rdi
0x59c3: je 0x59ed
0x59c5: call 0x7580
0x59ca: mov esi,dword ptr [rbx]
0x59cc: lea rdx,[rip+0x80f5]
0x59d3: mov rcx,rax
0x59d6: mov r8,rbp
0x59d9: xor edi,edi
0x59db: xor eax,eax
0x59dd: call 0x26e0
0x59e2: mov edi,dword ptr [rip+0x20b638]
0x59e8: call 0x2470
0x59ed: mov esi,dword ptr [rbx]
0x59ef: lea rdx,[rip+0x80d6]
0x59f6: mov rcx,rax
0x59f9: xor edi,edi
0x59fb: xor eax,eax
0x59fd: call 0x26e0
0x5a02: jmp 0x59e2
0x5b0f: nop 
0x5b10: push rbp
0x5b11: push rbx
0x5b12: mov rbp,rdi
0x5b15: mov ebx,esi
0x5b17: sub rsp,0x8
0x5b1b: call 0x90d0
0x5b20: movzx edx,byte ptr [rax]
0x5b23: and edx,-0x21
0x5b26: cmp dl,0x55
0x5b29: je 0x5ba0
0x5b2b: cmp dl,0x47
0x5b2e: je 0x5b50
0x5b30: lea rax,[rip+0x7fec]
0x5b37: lea rdx,[rip+0x7fe7]
0x5b3e: cmp ebx,0x9
0x5b41: cmovne rax,rdx
0x5b45: add rsp,0x8
0x5b49: pop rbx
0x5b4a: pop rbp
0x5b4b: ret 
0x5b50: movzx edx,byte ptr [rax+0x1]
0x5b54: and edx,-0x21
0x5b57: cmp dl,0x42
0x5b5a: jne 0x5b30
0x5b5c: cmp byte ptr [rax+0x2],0x31
0x5b60: jne 0x5b30
0x5b62: cmp byte ptr [rax+0x3],0x38
0x5b66: jne 0x5b30
0x5b68: cmp byte ptr [rax+0x4],0x30
0x5b6c: jne 0x5b30
0x5b6e: cmp byte ptr [rax+0x5],0x33
0x5b72: jne 0x5b30
0x5b74: cmp byte ptr [rax+0x6],0x30
0x5b78: jne 0x5b30
0x5b7a: cmp byte ptr [rax+0x7],0x0
0x5b7e: jne 0x5b30
0x5b80: cmp byte ptr [rbp],0x60
0x5b84: lea rax,[rip+0x7f91]
0x5b8b: lea rdx,[rip+0x7f8e]
0x5b92: cmovne rax,rdx
0x5b96: add rsp,0x8
0x5b9a: pop rbx
0x5b9b: pop rbp
0x5b9c: ret 
0x5ba0: movzx edx,byte ptr [rax+0x1]
0x5ba4: and edx,-0x21
0x5ba7: cmp dl,0x54
0x5baa: jne 0x5b30
0x5bac: movzx edx,byte ptr [rax+0x2]
0x5bb0: and edx,-0x21
0x5bb3: cmp dl,0x46
0x5bb6: jne 0x5b30
0x5bbc: cmp byte ptr [rax+0x3],0x2d
0x5bc0: jne 0x5b30
0x5bc6: cmp byte ptr [rax+0x4],0x38
0x5bca: jne 0x5b30
0x5bd0: cmp byte ptr [rax+0x5],0x0
0x5bd4: jne 0x5b30
0x5bda: cmp byte ptr [rbp],0x60
0x5bde: lea rax,[rip+0x7f2f]
0x5be5: lea rdx,[rip+0x7f2c]
0x5bec: cmovne rax,rdx
0x5bf0: add rsp,0x8
0x5bf4: pop rbx
0x5bf5: pop rbp
0x5bf6: ret 
0x5cd3: xor r11d,r11d
0x5cd6: mov rax,rbp
0x5cd9: mov r8d,r12d
0x5cdc: mov rbp,r11
0x5cdf: mov r11,rax
0x5ce2: nop word ptr [rax+rax]
0x5ce8: cmp r11,rbp
0x5ceb: setne r12b
0x5cef: cmp r11,-0x1
0x5cf3: jne 0x5d02
0x5cf5: mov rax,qword ptr [rsp+0x10]
0x5cfa: cmp byte ptr [rax+rbp],0x0
0x5cfe: setne r12b
0x5d02: test r12b,r12b
0x5d05: je 0x6360
0x5d0b: cmp dword ptr [rsp+0x8],0x2
0x5d10: mov rdi,qword ptr [rsp+0x10]
0x5d15: lea r9,[rdi+rbp]
0x5d19: setne al
0x5d1c: and al,byte ptr [rsp+0xd]
0x5d20: mov r10d,eax
0x5d23: je 0x5dd0
0x5d29: mov rax,qword ptr [rsp+0x18]
0x5d2e: test rax,rax
0x5d31: je 0x6160
0x5d37: cmp r11,-0x1
0x5d3b: lea rbx,[rbp+rax]
0x5d40: jne 0x5d70
0x5d42: cmp rax,0x1
0x5d46: jbe 0x5d70
0x5d48: mov byte ptr [rsp+0x38],r8b
0x5d4d: mov byte ptr [rsp+0x30],r10b
0x5d52: mov qword ptr [rsp+0x28],r9
0x5d57: call 0x2510
0x5d5c: movzx r8d,byte ptr [rsp+0x38]
0x5d62: movzx r10d,byte ptr [rsp+0x30]
0x5d68: mov r11,rax
0x5d6b: mov r9,qword ptr [rsp+0x28]
0x5d70: cmp rbx,r11
0x5d73: mov byte ptr [rsp+0x28],r10b
0x5d78: ja 0x6330
0x5d7e: mov rdx,qword ptr [rsp+0x18]
0x5d83: mov rsi,qword ptr [rsp+0x48]
0x5d88: mov rdi,r9
0x5d8b: mov qword ptr [rsp+0x40],r11
0x5d90: mov byte ptr [rsp+0x38],r8b
0x5d95: mov qword ptr [rsp+0x30],r9
0x5d9a: call 0x25f0
0x5d9f: test eax,eax
0x5da1: mov r9,qword ptr [rsp+0x30]
0x5da6: movzx r8d,byte ptr [rsp+0x38]
0x5dac: mov r11,qword ptr [rsp+0x40]
0x5db1: jne 0x6330
0x5db7: cmp byte ptr [rsp+0xf],0x0
0x5dbc: movzx r10d,byte ptr [rsp+0x28]
0x5dc2: jne 0x6d45
0x5dc8: nop dword ptr [rax+rax]
0x5dd0: movzx ebx,byte ptr [r9]
0x5dd4: cmp bl,0x7e
0x5dd7: ja 0x60f8
0x5ddd: lea rcx,[rip+0x7dc8]
0x5de4: movzx edx,bl
0x5de7: movsxd rax,dword ptr [rcx+rdx*4]
0x5deb: add rax,rcx
0x5dee: jmp rax
0x5e28: cmp byte ptr [rsp+0xd],0x1
0x5e2d: jne 0x5f42
0x5e33: test dl,dl
0x5e35: jne 0x5f42
0x5e3b: mov rsi,qword ptr [rsp+0x20]
0x5e40: test rsi,rsi
0x5e43: je 0x5e59
0x5e45: mov edx,ebx
0x5e47: shr dl,0x5
0x5e4a: movzx edx,dl
0x5e4d: mov edx,dword ptr [rsi+rdx*4]
0x5e50: btl edx,ebx
0x5e53: jb 0x5fa3
0x5e59: test r10b,r10b
0x5e5c: jne 0x5fa3
0x5e62: xor eax,0x1
0x5e65: add rbp,0x1
0x5e69: and eax,r8d
0x5e6c: test al,al
0x5e6e: je 0x5e90
0x5e70: cmp r13,r15
0x5e73: jbe 0x5e7a
0x5e75: mov byte ptr [r14+r15],0x27
0x5e7a: lea rax,[r15+0x1]
0x5e7e: cmp r13,rax
0x5e81: jbe 0x5e89
0x5e83: mov byte ptr [r14+r15+0x1],0x27
0x5e89: add r15,0x2
0x5e8d: xor r8d,r8d
0x5e90: cmp r15,r13
0x5e93: jae 0x5e99
0x5e95: mov byte ptr [r14+r15],bl
0x5e99: movzx edi,byte ptr [rsp+0xe]
0x5e9e: add r15,0x1
0x5ea2: mov eax,0x0
0x5ea7: test r12b,r12b
0x5eaa: cmove edi,eax
0x5ead: mov byte ptr [rsp+0xe],dil
0x5eb2: jmp 0x5ce8
0x5f42: cmp byte ptr [rsp+0xf],0x0
0x5f47: jne 0x5e3b
0x5f4d: jmp 0x5e59
0x5fa3: cmp dword ptr [rsp+0x8],0x2
0x5fa8: sete dl
0x5fab: cmp byte ptr [rsp+0xf],0x0
0x5fb0: mov eax,edx
0x5fb2: jne 0x6808
0x5fb8: mov eax,r8d
0x5fbb: xor eax,0x1
0x5fbe: and al,dl
0x5fc0: je 0x5ff1
0x5fc2: cmp r13,r15
0x5fc5: jbe 0x5fcc
0x5fc7: mov byte ptr [r14+r15],0x27
0x5fcc: lea rdx,[r15+0x1]
0x5fd0: cmp r13,rdx
0x5fd3: jbe 0x5fdb
0x5fd5: mov byte ptr [r14+r15+0x1],0x24
0x5fdb: lea rdx,[r15+0x2]
0x5fdf: cmp r13,rdx
0x5fe2: jbe 0x5fea
0x5fe4: mov byte ptr [r14+r15+0x2],0x27
0x5fea: add r15,0x3
0x5fee: mov r8d,eax
0x5ff1: cmp r13,r15
0x5ff4: jbe 0x5ffb
0x5ff6: mov byte ptr [r14+r15],0x5c
0x5ffb: add r15,0x1
0x5fff: add rbp,0x1
0x6003: jmp 0x5e90
0x60f0: xor r10d,r10d
0x60f3: nop dword ptr [rax+rax]
0x60f8: cmp qword ptr [rsp+0x58],0x1
0x60fe: jne 0x64a8
0x6104: mov qword ptr [rsp+0x38],r11
0x6109: mov byte ptr [rsp+0x30],r8b
0x610e: mov byte ptr [rsp+0x28],r10b
0x6113: call 0x27b0
0x6118: mov rcx,qword ptr [rax]
0x611b: movzx edx,bl
0x611e: movzx r10d,byte ptr [rsp+0x28]
0x6124: movzx r8d,byte ptr [rsp+0x30]
0x612a: mov r11,qword ptr [rsp+0x38]
0x612f: mov edi,0x1
0x6134: movzx eax,word ptr [rcx+rdx*2]
0x6138: and ax,0x4000
0x613c: setne r12b
0x6140: sete al
0x6143: and al,byte ptr [rsp+0xd]
0x6147: test al,al
0x6149: jne 0x6ae1
0x614f: cmp dword ptr [rsp+0x8],0x2
0x6154: sete dl
0x6157: jmp 0x5e28
0x6160: movzx ebx,byte ptr [r9]
0x6164: cmp bl,0x7e
0x6167: ja 0x60f0
0x6169: lea rcx,[rip+0x7c38]
0x6170: movzx edx,bl
0x6173: movsxd rax,dword ptr [rcx+rdx*4]
0x6177: add rax,rcx
0x617a: jmp rax
0x6330: xor r10d,r10d
0x6333: jmp 0x5dd0
0x6360: cmp dword ptr [rsp+0x8],0x2
0x6365: movzx ebx,byte ptr [rsp+0xf]
0x636a: mov r12d,r8d
0x636d: mov rbp,r11
0x6370: sete dl
0x6373: mov eax,ebx
0x6375: test r15,r15
0x6378: sete cl
0x637b: and eax,edx
0x637d: and al,cl
0x637f: jne 0x6de6
0x6385: mov eax,ebx
0x6387: xor eax,0x1
0x638a: and dl,al
0x638c: je 0x6cfc
0x6392: cmp byte ptr [rsp+0x7c],0x0
0x6397: je 0x6cfa
0x639d: cmp byte ptr [rsp+0xe],0x0
0x63a2: jne 0x6d9d
0x63a8: test r13,r13
0x63ab: sete al
0x63ae: cmp qword ptr [rsp+0x50],0x0
0x63b4: setne dl
0x63b7: and al,dl
0x63b9: je 0x6ddc
0x63bf: mov r13,qword ptr [rsp+0x50]
0x63c4: lea rbx,[rip+0x775a]
0x63cb: mov byte ptr [r14],0x27
0x63cf: mov dword ptr [rsp+0x8],0x2
0x63d7: mov r15d,0x1
0x63dd: mov qword ptr [rsp+0x18],0x1
0x63e6: mov byte ptr [rsp+0xf],0x0
0x63eb: mov qword ptr [rsp+0x48],rbx
0x63f0: mov byte ptr [rsp+0x7c],al
0x63f4: jmp 0x5cd3
0x64a8: lea rax,[rsp+0xa0]
0x64b0: cmp r11,-0x1
0x64b4: mov qword ptr [rsp+0xa0],0x0
0x64c0: mov qword ptr [rsp+0x28],rax
0x64c5: jne 0x64f4
0x64c7: mov rdi,qword ptr [rsp+0x10]
0x64cc: mov byte ptr [rsp+0x40],r8b
0x64d1: mov byte ptr [rsp+0x38],r10b
0x64d6: mov qword ptr [rsp+0x30],r9
0x64db: call 0x2510
0x64e0: movzx r8d,byte ptr [rsp+0x40]
0x64e6: movzx r10d,byte ptr [rsp+0x38]
0x64ec: mov r11,rax
0x64ef: mov r9,qword ptr [rsp+0x30]
0x64f4: lea rax,[rsp+0x9c]
0x64fc: xor ecx,ecx
0x64fe: mov byte ptr [rsp+0x7e],bl
0x6502: mov byte ptr [rsp+0x7d],r8b
0x6507: mov rbx,rcx
0x650a: mov qword ptr [rsp+0x88],r9
0x6512: mov qword ptr [rsp+0x38],rax
0x6517: mov byte ptr [rsp+0x7f],r10b
0x651c: mov qword ptr [rsp+0x80],r15
0x6524: mov qword ptr [rsp+0x40],r14
0x6529: mov qword ptr [rsp+0x70],r13
0x652e: mov qword ptr [rsp+0x30],r11
0x6533: mov rax,qword ptr [rsp+0x10]
0x6538: lea r14,[rbp+rbx]
0x653d: mov rdx,qword ptr [rsp+0x30]
0x6542: mov rcx,qword ptr [rsp+0x28]
0x6547: mov rdi,qword ptr [rsp+0x38]
0x654c: lea r13,[rax+r14]
0x6550: sub rdx,r14
0x6553: mov rsi,r13
0x6556: call 0x8ee0
0x655b: test rax,rax
0x655e: mov r15,rax
0x6561: je 0x65b1
0x6563: cmp rax,-0x1
0x6567: je 0x6b85
0x656d: cmp rax,-0x2
0x6571: je 0x6b11
0x6577: cmp dword ptr [rsp+0x8],0x2
0x657c: sete al
0x657f: and al,byte ptr [rsp+0xf]
0x6583: jne 0x6720
0x6589: mov edi,dword ptr [rsp+0x9c]
0x6590: call 0x27a0
0x6595: mov rdi,qword ptr [rsp+0x28]
0x659a: test eax,eax
0x659c: mov eax,0x0
0x65a1: cmove r12d,eax
0x65a5: add rbx,r15
0x65a8: call 0x2790
0x65ad: test eax,eax
0x65af: je 0x6533
0x65b1: mov edx,r12d
0x65b4: mov rdi,rbx
0x65b7: movzx r8d,byte ptr [rsp+0x7d]
0x65bd: xor edx,0x1
0x65c0: movzx ebx,byte ptr [rsp+0x7e]
0x65c5: movzx r10d,byte ptr [rsp+0x7f]
0x65cb: and dl,byte ptr [rsp+0xd]
0x65cf: mov r15,qword ptr [rsp+0x80]
0x65d7: mov r14,qword ptr [rsp+0x40]
0x65dc: mov r13,qword ptr [rsp+0x70]
0x65e1: mov r11,qword ptr [rsp+0x30]
0x65e6: cmp rdi,0x1
0x65ea: jbe 0x6beb
0x65f0: mov rcx,rdi
0x65f3: xor esi,esi
0x65f5: movzx r9d,byte ptr [rsp+0xf]
0x65fb: add rcx,rbp
0x65fe: mov rdi,qword ptr [rsp+0x10]
0x6603: jmp 0x66be
0x6610: cmp dword ptr [rsp+0x8],0x2
0x6615: sete al
0x6618: test r9b,r9b
0x661b: jne 0x6ad0
0x6621: mov esi,r8d
0x6624: xor esi,0x1
0x6627: and al,sil
0x662a: je 0x665b
0x662c: cmp r13,r15
0x662f: jbe 0x6636
0x6631: mov byte ptr [r14+r15],0x27
0x6636: lea rsi,[r15+0x1]
0x663a: cmp r13,rsi
0x663d: jbe 0x6645
0x663f: mov byte ptr [r14+r15+0x1],0x24
0x6645: lea rsi,[r15+0x2]
0x6649: cmp r13,rsi
0x664c: jbe 0x6654
0x664e: mov byte ptr [r14+r15+0x2],0x27
0x6654: add r15,0x3
0x6658: mov r8d,eax
0x665b: cmp r13,r15
0x665e: jbe 0x6665
0x6660: mov byte ptr [r14+r15],0x5c
0x6665: lea rax,[r15+0x1]
0x6669: cmp r13,rax
0x666c: jbe 0x667b
0x666e: mov eax,ebx
0x6670: shr al,0x6
0x6673: add eax,0x30
0x6676: mov byte ptr [r14+r15+0x1],al
0x667b: lea rax,[r15+0x2]
0x667f: cmp r13,rax
0x6682: jbe 0x6694
0x6684: mov eax,ebx
0x6686: shr al,0x3
0x6689: and eax,0x7
0x668c: add eax,0x30
0x668f: mov byte ptr [r14+r15+0x2],al
0x6694: and ebx,0x7
0x6697: add rbp,0x1
0x669b: add r15,0x3
0x669f: add ebx,0x30
0x66a2: cmp rbp,rcx
0x66a5: jae 0x5e90
0x66ab: mov esi,edx
0x66ad: cmp r13,r15
0x66b0: jbe 0x66b6
0x66b2: mov byte ptr [r14+r15],bl
0x66b6: movzx ebx,byte ptr [rdi+rbp]
0x66ba: add r15,0x1
0x66be: test dl,dl
0x66c0: jne 0x6610
0x66c6: mov eax,esi
0x66c8: xor eax,0x1
0x66cb: and eax,r8d
0x66ce: test r10b,r10b
0x66d1: je 0x66e1
0x66d3: cmp r13,r15
0x66d6: jbe 0x66dd
0x66d8: mov byte ptr [r14+r15],0x5c
0x66dd: add r15,0x1
0x66e1: add rbp,0x1
0x66e5: cmp rbp,rcx
0x66e8: jae 0x5e6c
0x66ee: test al,al
0x66f0: je 0x6aee
0x66f6: cmp r13,r15
0x66f9: jbe 0x6700
0x66fb: mov byte ptr [r14+r15],0x27
0x6700: lea rax,[r15+0x1]
0x6704: cmp r13,rax
0x6707: jbe 0x670f
0x6709: mov byte ptr [r14+r15+0x1],0x27
0x670f: add r15,0x2
0x6713: xor r10d,r10d
0x6716: xor r8d,r8d
0x6719: jmp 0x66ad
0x6720: cmp r15,0x1
0x6724: je 0x6589
0x672a: mov rdi,qword ptr [rsp+0x10]
0x672f: lea rcx,[rdi+r15]
0x6733: lea rdx,[rdi+r14+0x1]
0x6738: lea r8,[rcx+r14]
0x673c: jmp 0x674d
0x6740: add rdx,0x1
0x6744: cmp r8,rdx
0x6747: je 0x6589
0x674d: movzx ecx,byte ptr [rdx]
0x6750: sub ecx,0x5b
0x6753: cmp cl,0x21
0x6756: ja 0x6740
0x6758: mov esi,0x1
0x675d: shl rsi,cl
0x6760: mov rcx,rsi
0x6763: movabsq rsi,0x20000002b
0x676d: test rcx,rsi
0x6770: je 0x6740
0x6772: mov r14,qword ptr [rsp+0x40]
0x6777: mov r13,qword ptr [rsp+0x70]
0x677c: mov rbp,qword ptr [rsp+0x30]
0x6781: mov dword ptr [rsp+0x8],0x2
0x6789: cmp byte ptr [rsp+0xd],0x0
0x678e: je 0x67a0
0x6790: test al,al
0x6792: mov eax,0x4
0x6797: cmove eax,dword ptr [rsp+0x8]
0x679c: mov dword ptr [rsp+0x8],eax
0x67a0: sub rsp,0x8
0x67a4: mov rcx,rbp
0x67a7: mov rsi,r13
0x67aa: push qword ptr [rsp+0x68]
0x67ae: push qword ptr [rsp+0x78]
0x67b2: mov rdi,r14
0x67b5: push 0x0
0x67b7: mov r9d,dword ptr [rsp+0x98]
0x67bf: mov r8d,dword ptr [rsp+0x28]
0x67c4: mov rdx,qword ptr [rsp+0x30]
0x67c9: and r9d,-0x3
0x67cd: call 0x5c00
0x67d2: add rsp,0x20
0x67d6: mov r15,rax
0x67d9: mov rbx,qword ptr [rsp+0xa8]
0x67e1: xor rbx,qword ptr fs:0x28
0x67ea: mov rax,r15
0x67ed: jne 0x6df3
0x67f3: add rsp,0xb8
0x67fa: pop rbx
0x67fb: pop rbp
0x67fc: pop r12
0x67fe: pop r13
0x6800: pop r14
0x6802: pop r15
0x6804: ret 
0x6808: mov rbp,r11
0x680b: jmp 0x6789
0x6871: test r13,r13
0x6874: jne 0x6e0a
0x687a: lea rax,[rip+0x72a4]
0x6881: mov qword ptr [rsp+0x50],0x0
0x688a: mov byte ptr [rsp+0xe],0x1
0x688f: mov byte ptr [rsp+0x7c],0x0
0x6894: xor r12d,r12d
0x6897: mov byte ptr [rsp+0xf],0x0
0x689c: mov qword ptr [rsp+0x18],0x1
0x68a5: mov qword ptr [rsp+0x48],rax
0x68aa: mov r15d,0x1
0x68b0: mov dword ptr [rsp+0x8],0x2
0x68b8: jmp 0x5cd3
0x6ad0: movzx ebx,byte ptr [rsp+0xf]
0x6ad5: mov rbp,r11
0x6ad8: mov byte ptr [rsp+0xd],bl
0x6adc: jmp 0x6789
0x6ae1: movzx edx,byte ptr [rsp+0xd]
0x6ae6: xor r12d,r12d
0x6ae9: jmp 0x65f0
0x6aee: xor r10d,r10d
0x6af1: jmp 0x66ad
0x6b11: mov r11,qword ptr [rsp+0x30]
0x6b16: mov rsi,r14
0x6b19: mov rcx,r13
0x6b1c: mov rax,rbx
0x6b1f: mov rdi,rbx
0x6b22: movzx r8d,byte ptr [rsp+0x7d]
0x6b28: movzx ebx,byte ptr [rsp+0x7e]
0x6b2d: mov r9,qword ptr [rsp+0x88]
0x6b35: cmp rsi,r11
0x6b38: movzx r10d,byte ptr [rsp+0x7f]
0x6b3e: mov r15,qword ptr [rsp+0x80]
0x6b46: mov r14,qword ptr [rsp+0x40]
0x6b4b: mov r13,qword ptr [rsp+0x70]
0x6b50: jae 0x6b78
0x6b52: cmp byte ptr [rcx],0x0
0x6b55: jne 0x6b67
0x6b57: jmp 0x6b78
0x6b60: cmp byte ptr [r9+rax],0x0
0x6b65: je 0x6b75
0x6b67: add rax,0x1
0x6b6b: lea rdx,[rbp+rax]
0x6b70: cmp r11,rdx
0x6b73: ja 0x6b60
0x6b75: mov rdi,rax
0x6b78: movzx edx,byte ptr [rsp+0xd]
0x6b7d: xor r12d,r12d
0x6b80: jmp 0x65e6
0x6b85: mov rdi,rbx
0x6b88: movzx r8d,byte ptr [rsp+0x7d]
0x6b8e: movzx ebx,byte ptr [rsp+0x7e]
0x6b93: movzx r10d,byte ptr [rsp+0x7f]
0x6b99: mov r15,qword ptr [rsp+0x80]
0x6ba1: xor r12d,r12d
0x6ba4: mov r14,qword ptr [rsp+0x40]
0x6ba9: mov r13,qword ptr [rsp+0x70]
0x6bae: mov r11,qword ptr [rsp+0x30]
0x6bb3: movzx edx,byte ptr [rsp+0xd]
0x6bb8: jmp 0x65e6
0x6beb: mov eax,edx
0x6bed: jmp 0x6147
0x6cfa: mov eax,edx
0x6cfc: mov rbx,qword ptr [rsp+0x48]
0x6d01: test rbx,rbx
0x6d04: je 0x6d32
0x6d06: test al,al
0x6d08: je 0x6d32
0x6d0a: movzx ecx,byte ptr [rbx]
0x6d0d: mov rax,rbx
0x6d10: test cl,cl
0x6d12: je 0x6d32
0x6d14: mov rdx,r15
0x6d17: sub rax,r15
0x6d1a: cmp r13,rdx
0x6d1d: jbe 0x6d23
0x6d1f: mov byte ptr [r14+rdx],cl
0x6d23: add rdx,0x1
0x6d27: movzx ecx,byte ptr [rax+rdx]
0x6d2b: test cl,cl
0x6d2d: jne 0x6d1a
0x6d2f: mov r15,rdx
0x6d32: cmp r13,r15
0x6d35: jbe 0x67d9
0x6d3b: mov byte ptr [r14+r15],0x0
0x6d40: jmp 0x67d9
0x6d45: cmp dword ptr [rsp+0x8],0x2
0x6d4a: movzx ebx,byte ptr [rsp+0xf]
0x6d4f: mov rbp,r11
0x6d52: sete al
0x6d55: mov byte ptr [rsp+0xd],bl
0x6d59: jmp 0x6789
0x6d9d: sub rsp,0x8
0x6da1: mov r8d,0x5
0x6da7: mov rcx,r11
0x6daa: push qword ptr [rsp+0x68]
0x6dae: push qword ptr [rsp+0x78]
0x6db2: mov rdi,r14
0x6db5: push qword ptr [rsp+0x38]
0x6db9: mov r9d,dword ptr [rsp+0x98]
0x6dc1: mov rdx,qword ptr [rsp+0x30]
0x6dc6: mov rsi,qword ptr [rsp+0x70]
0x6dcb: call 0x5c00
0x6dd0: add rsp,0x20
0x6dd4: mov r15,rax
0x6dd7: jmp 0x67d9
0x6ddc: movzx eax,byte ptr [rsp+0x7c]
0x6de1: jmp 0x6cfc
0x6de6: mov dword ptr [rsp+0x8],0x2
0x6dee: jmp 0x6789
0x6df3: call 0x2520
0x6df8: mov byte ptr [rsp+0xd],0x0
0x6dfd: jmp 0x6871
0x6e0a: mov byte ptr [rsp+0xe],0x1
0x6e0f: xor eax,eax
0x6e11: xor r12d,r12d
0x6e14: mov qword ptr [rsp+0x50],0x0
0x6e1d: jmp 0x63c4
0x6e34: nop 
0x6e36: nop word ptr cs:[rax+rax]
0x6f2c: add rsp,0x20
0x6f30: mov r11,qword ptr [rsp+0x10]
0x6f35: cmp r11,rax
0x6f38: ja 0x6fa1
0x6f3a: lea rsi,[rax+0x1]
0x6f3e: lea rax,[rip+0x20a2db]
0x6f45: cmp r12,rax
0x6f48: mov qword ptr [rbx],rsi
0x6f4b: je 0x6f5f
0x6f4d: mov rdi,r12
0x6f50: mov qword ptr [rsp+0x10],rsi
0x6f55: call 0x2430
0x6f5a: mov rsi,qword ptr [rsp+0x10]
0x6f5f: mov rdi,rsi
0x6f62: mov qword ptr [rsp+0x10],rsi
0x6f67: call 0x7dc0
0x6f6c: sub rsp,0x8
0x6f70: mov qword ptr [rbx+0x8],rax
0x6f74: mov r8d,dword ptr [rbp]
0x6f78: push qword ptr [rbp+0x30]
0x6f7b: push qword ptr [rbp+0x28]
0x6f7e: mov rcx,r14
0x6f81: push r15
0x6f83: mov r9d,dword ptr [rsp+0x3c]
0x6f88: mov rdi,rax
0x6f8b: mov rdx,qword ptr [rsp+0x28]
0x6f90: mov rsi,qword ptr [rsp+0x30]
0x6f95: mov r12,rax
0x6f98: call 0x5c00
0x6f9d: add rsp,0x20
0x6fa1: mov eax,dword ptr [rsp+0x18]
0x6fa5: mov dword ptr [r13],eax
0x6fa9: add rsp,0x28
0x6fad: mov rax,r12
0x6fb0: pop rbx
0x6fb1: pop rbp
0x6fb2: pop r12
0x6fb4: pop r13
0x6fb6: pop r14
0x6fb8: pop r15
0x6fba: ret 
0x6fe1: call 0x2440
0x6fe6: call 0x8010
0x6feb: nop dword ptr [rax+rax]
0x6ff0: push r12
0x6ff2: push rbp
0x6ff3: push rbx
0x6ff4: mov rbx,rdi
0x6ff7: call 0x2450
0x6ffc: mov r12d,dword ptr [rax]
0x6fff: mov rbp,rax
0x7002: lea rax,[rip+0x20a317]
0x7009: test rbx,rbx
0x700c: mov esi,0x38
0x7011: cmove rbx,rax
0x7015: mov rdi,rbx
0x7018: call 0x7fc0
0x701d: mov dword ptr [rbp],r12d
0x7021: pop rbx
0x7022: pop rbp
0x7023: pop r12
0x7025: ret 
0x7030: lea rax,[rip+0x20a2e9]
0x7037: test rdi,rdi
0x703a: cmove rdi,rax
0x703e: mov eax,dword ptr [rdi]
0x7040: ret 
0x7050: lea rax,[rip+0x20a2c9]
0x7057: test rdi,rdi
0x705a: cmove rdi,rax
0x705e: mov dword ptr [rdi],esi
0x7060: ret 
0x7070: lea rax,[rip+0x20a2a9]
0x7077: test rdi,rdi
0x707a: mov ecx,esi
0x707c: cmove rdi,rax
0x7080: mov eax,esi
0x7082: and ecx,0x1f
0x7085: shr al,0x5
0x7088: movzx eax,al
0x708b: lea rdi,[rdi+rax*4+0x8]
0x7090: mov esi,dword ptr [rdi]
0x7092: mov eax,esi
0x7094: shr eax,cl
0x7096: xor edx,eax
0x7098: and eax,0x1
0x709b: and edx,0x1
0x709e: shl edx,cl
0x70a0: xor edx,esi
0x70a2: mov dword ptr [rdi],edx
0x70a4: ret 
0x70b0: lea rax,[rip+0x20a269]
0x70b7: test rdi,rdi
0x70ba: cmove rdi,rax
0x70be: mov eax,dword ptr [rdi+0x4]
0x70c1: mov dword ptr [rdi+0x4],esi
0x70c4: ret 
0x70d0: lea rax,[rip+0x20a249]
0x70d7: test rdi,rdi
0x70da: cmove rdi,rax
0x70de: test rsi,rsi
0x70e1: mov dword ptr [rdi],0xa
0x70e7: je 0x70f7
0x70e9: test rdx,rdx
0x70ec: je 0x70f7
0x70ee: mov qword ptr [rdi+0x28],rsi
0x70f2: mov qword ptr [rdi+0x30],rdx
0x70f6: ret 
0x70f7: sub rsp,0x8
0x70fb: call 0x2440
0x7100: push r15
0x7102: push r14
0x7104: lea rax,[rip+0x20a215]
0x710b: push r13
0x710d: push r12
0x710f: mov r13,rdi
0x7112: push rbp
0x7113: push rbx
0x7114: mov rbx,r8
0x7117: mov r14,rsi
0x711a: mov r15,rdx
0x711d: sub rsp,0x18
0x7121: test r8,r8
0x7124: cmove rbx,rax
0x7128: mov qword ptr [rsp+0x8],rcx
0x712d: call 0x2450
0x7132: mov r12d,dword ptr [rax]
0x7135: mov rbp,rax
0x7138: lea rax,[rbx+0x8]
0x713c: sub rsp,0x8
0x7140: mov r9d,dword ptr [rbx+0x4]
0x7144: push qword ptr [rbx+0x30]
0x7147: mov r8d,dword ptr [rbx]
0x714a: push qword ptr [rbx+0x28]
0x714d: mov rdx,r15
0x7150: push rax
0x7151: mov rcx,qword ptr [rsp+0x28]
0x7156: mov rsi,r14
0x7159: mov rdi,r13
0x715c: call 0x5c00
0x7161: mov dword ptr [rbp],r12d
0x7165: add rsp,0x38
0x7169: pop rbx
0x716a: pop rbp
0x716b: pop r12
0x716d: pop r13
0x716f: pop r14
0x7171: pop r15
0x7173: ret 
0x7180: push r15
0x7182: push r14
0x7184: lea rax,[rip+0x20a195]
0x718b: push r13
0x718d: push r12
0x718f: mov r12,rdx
0x7192: push rbp
0x7193: push rbx
0x7194: mov rbx,rcx
0x7197: mov r14,rdi
0x719a: mov r15,rsi
0x719d: sub rsp,0x38
0x71a1: test rcx,rcx
0x71a4: cmove rbx,rax
0x71a8: xor ebp,ebp
0x71aa: call 0x2450
0x71af: test r12,r12
0x71b2: mov r13,rax
0x71b5: mov eax,dword ptr [rax]
0x71b7: sete bpl
0x71bb: or ebp,dword ptr [rbx+0x4]
0x71be: lea r10,[rbx+0x8]
0x71c2: sub rsp,0x8
0x71c6: mov r8d,dword ptr [rbx]
0x71c9: mov rcx,r15
0x71cc: mov dword ptr [rsp+0x14],eax
0x71d0: push qword ptr [rbx+0x30]
0x71d3: mov rdx,r14
0x71d6: push qword ptr [rbx+0x28]
0x71d9: push r10
0x71db: xor esi,esi
0x71dd: mov r9d,ebp
0x71e0: xor edi,edi
0x71e2: mov qword ptr [rsp+0x40],r10
0x71e7: call 0x5c00
0x71ec: lea rsi,[rax+0x1]
0x71f0: mov qword ptr [rsp+0x48],rax
0x71f5: add rsp,0x20
0x71f9: mov rdi,rsi
0x71fc: mov qword ptr [rsp+0x18],rsi
0x7201: call 0x7dc0
0x7206: mov qword ptr [rsp+0x10],rax
0x720b: sub rsp,0x8
0x720f: push qword ptr [rbx+0x30]
0x7212: push qword ptr [rbx+0x28]
0x7215: mov r10,qword ptr [rsp+0x38]
0x721a: mov r9d,ebp
0x721d: mov r8d,dword ptr [rbx]
0x7220: mov rcx,r15
0x7223: mov rdx,r14
0x7226: mov rdi,rax
0x7229: push r10
0x722b: mov rsi,qword ptr [rsp+0x38]
0x7230: call 0x5c00
0x7235: mov eax,dword ptr [rsp+0x2c]
0x7239: add rsp,0x20
0x723d: test r12,r12
0x7240: mov dword ptr [r13],eax
0x7244: je 0x724f
0x7246: mov r11,qword ptr [rsp+0x28]
0x724b: mov qword ptr [r12],r11
0x724f: mov rax,qword ptr [rsp+0x10]
0x7254: add rsp,0x38
0x7258: pop rbx
0x7259: pop rbp
0x725a: pop r12
0x725c: pop r13
0x725e: pop r14
0x7260: pop r15
0x7262: ret 
0x7270: mov rcx,rdx
0x7273: xor edx,edx
0x7275: jmp 0x7180
0x7280: mov eax,dword ptr [rip+0x209df2]
0x7286: push r12
0x7288: mov r12,qword ptr [rip+0x209df1]
0x728f: push rbp
0x7290: push rbx
0x7291: cmp eax,0x1
0x7294: jle 0x72c1
0x7296: sub eax,0x2
0x7299: lea rbx,[r12+0x18]
0x729e: shl rax,0x4
0x72a2: lea rbp,[r12+rax+0x28]
0x72a7: nop word ptr [rax+rax]
0x72b0: mov rdi,qword ptr [rbx]
0x72b3: add rbx,0x10
0x72b7: call 0x2430
0x72bc: cmp rbx,rbp
0x72bf: jne 0x72b0
0x72c1: mov rdi,qword ptr [r12+0x8]
0x72c6: lea rbx,[rip+0x209f53]
0x72cd: cmp rdi,rbx
0x72d0: je 0x72e9
0x72d2: call 0x2430
0x72d7: mov qword ptr [rip+0x209dae],0x100
0x72e2: mov qword ptr [rip+0x209daf],rbx
0x72e9: lea rbx,[rip+0x209da0]
0x72f0: cmp r12,rbx
0x72f3: je 0x7304
0x72f5: mov rdi,r12
0x72f8: call 0x2430
0x72fd: mov qword ptr [rip+0x209d7c],rbx
0x7304: pop rbx
0x7305: mov dword ptr [rip+0x209d69],0x1
0x730f: pop rbp
0x7310: pop r12
0x7312: ret 
0x7320: lea rcx,[rip+0x209ff9]
0x7327: mov rdx,-0x1
0x732e: jmp 0x6e40
0x7340: lea rcx,[rip+0x209fd9]
0x7347: jmp 0x6e40
0x7350: lea rcx,[rip+0x209fc9]
0x7357: mov rsi,rdi
0x735a: mov rdx,-0x1
0x7361: xor edi,edi
0x7363: jmp 0x6e40
0x7370: lea rcx,[rip+0x209fa9]
0x7377: mov rdx,rsi
0x737a: mov rsi,rdi
0x737d: xor edi,edi
0x737f: jmp 0x6e40
0x7390: sub rsp,0x48
0x7394: mov rax,rdx
0x7397: mov rdx,qword ptr fs:0x28
0x73a0: mov qword ptr [rsp+0x38],rdx
0x73a5: xor edx,edx
0x73a7: cmp esi,0xa
0x73aa: je 0x7414
0x73ac: mov dword ptr [rsp],esi
0x73af: mov rcx,rsp
0x73b2: mov rdx,-0x1
0x73b9: mov rsi,rax
0x73bc: mov qword ptr [rsp+0x4],0x0
0x73c5: mov qword ptr [rsp+0xc],0x0
0x73ce: mov qword ptr [rsp+0x14],0x0
0x73d7: mov qword ptr [rsp+0x1c],0x0
0x73e0: mov qword ptr [rsp+0x24],0x0
0x73e9: mov qword ptr [rsp+0x2c],0x0
0x73f2: mov dword ptr [rsp+0x34],0x0
0x73fa: call 0x6e40
0x73ff: mov rcx,qword ptr [rsp+0x38]
0x7404: xor rcx,qword ptr fs:0x28
0x740d: jne 0x7419
0x740f: add rsp,0x48
0x7413: ret 
0x7414: call 0x2440
0x7419: call 0x2520
0x741e: nop 
0x7420: sub rsp,0x48
0x7424: mov rax,rdx
0x7427: mov rdx,rcx
0x742a: mov rcx,qword ptr fs:0x28
0x7433: mov qword ptr [rsp+0x38],rcx
0x7438: xor ecx,ecx
0x743a: cmp esi,0xa
0x743d: je 0x74a0
0x743f: mov dword ptr [rsp],esi
0x7442: mov rcx,rsp
0x7445: mov rsi,rax
0x7448: mov qword ptr [rsp+0x4],0x0
0x7451: mov qword ptr [rsp+0xc],0x0
0x745a: mov qword ptr [rsp+0x14],0x0
0x7463: mov qword ptr [rsp+0x1c],0x0
0x746c: mov qword ptr [rsp+0x24],0x0
0x7475: mov qword ptr [rsp+0x2c],0x0
0x747e: mov dword ptr [rsp+0x34],0x0
0x7486: call 0x6e40
0x748b: mov rdx,qword ptr [rsp+0x38]
0x7490: xor rdx,qword ptr fs:0x28
0x7499: jne 0x74a5
0x749b: add rsp,0x48
0x749f: ret 
0x74a0: call 0x2440
0x74a5: call 0x2520
0x74aa: nop word ptr [rax+rax]
0x74b0: mov rdx,rsi
0x74b3: mov esi,edi
0x74b5: xor edi,edi
0x74b7: jmp 0x7390
0x74c0: mov rcx,rdx
0x74c3: mov rdx,rsi
0x74c6: mov esi,edi
0x74c8: xor edi,edi
0x74ca: jmp 0x7420
0x74d0: sub rsp,0x48
0x74d4: mov ecx,edx
0x74d6: mov rax,qword ptr fs:0x28
0x74df: mov qword ptr [rsp+0x38],rax
0x74e4: xor eax,eax
0x74e6: mov rax,qword ptr [rip+0x209e63]
0x74ed: mov r8,rsp
0x74f0: and ecx,0x1f
0x74f3: movdqa xmm0,[rip+0x209e25]
0x74fb: mov qword ptr [rsp+0x30],rax
0x7500: mov eax,edx
0x7502: movaps [rsp],xmm0
0x7506: shr al,0x5
0x7509: movzx eax,al
0x750c: lea r9,[r8+rax*4+0x8]
0x7511: movdqa xmm0,[rip+0x209e17]
0x7519: movaps [rsp+0x10],xmm0
0x751e: movdqa xmm0,[rip+0x209e1a]
0x7526: movaps [rsp+0x20],xmm0
0x752b: mov edx,dword ptr [r9]
0x752e: mov eax,edx
0x7530: shr eax,cl
0x7532: not eax
0x7534: and eax,0x1
0x7537: shl eax,cl
0x7539: mov rcx,r8
0x753c: xor eax,edx
0x753e: mov rdx,rsi
0x7541: mov rsi,rdi
0x7544: mov dword ptr [r9],eax
0x7547: xor edi,edi
0x7549: call 0x6e40
0x754e: mov rsi,qword ptr [rsp+0x38]
0x7553: xor rsi,qword ptr fs:0x28
0x755c: jne 0x7563
0x755e: add rsp,0x48
0x7562: ret 
0x7563: call 0x2520
0x7568: nop dword ptr [rax+rax]
0x7570: movsx edx,sil
0x7574: mov rsi,-0x1
0x757b: jmp 0x74d0
0x7580: mov edx,0x3a
0x7585: mov rsi,-0x1
0x758c: jmp 0x74d0
0x75a0: mov edx,0x3a
0x75a5: jmp 0x74d0
0x761f: mov rcx,qword ptr [rsp+0x38]
0x7624: xor rcx,qword ptr fs:0x28
0x762d: jne 0x7639
0x762f: add rsp,0x48
0x7633: ret 
0x7634: call 0x2440
0x7639: call 0x2520
0x763e: nop 
0x7640: sub rsp,0x48
0x7644: mov r9,rcx
0x7647: mov rcx,qword ptr [rip+0x209d02]
0x764e: movdqa xmm0,[rip+0x209cca]
0x7656: mov rax,qword ptr fs:0x28
0x765f: mov qword ptr [rsp+0x38],rax
0x7664: xor eax,eax
0x7666: movaps [rsp],xmm0
0x766a: test rsi,rsi
0x766d: mov qword ptr [rsp+0x30],rcx
0x7672: mov dword ptr [rsp],0xa
0x7679: movdqa xmm0,[rip+0x209caf]
0x7681: movaps [rsp+0x10],xmm0
0x7686: movdqa xmm0,[rip+0x209cb2]
0x768e: movaps [rsp+0x20],xmm0
0x7693: je 0x76c7
0x7695: test rdx,rdx
0x7698: je 0x76c7
0x769a: mov qword ptr [rsp+0x28],rsi
0x769f: mov qword ptr [rsp+0x30],rdx
0x76a4: mov rcx,rsp
0x76a7: mov rdx,r8
0x76aa: mov rsi,r9
0x76ad: call 0x6e40
0x76b2: mov rdi,qword ptr [rsp+0x38]
0x76b7: xor rdi,qword ptr fs:0x28
0x76c0: jne 0x76cc
0x76c2: add rsp,0x48
0x76c6: ret 
0x76c7: call 0x2440
0x76cc: call 0x2520
0x76d1: nop dword ptr [rax+rax]
0x76d6: nop word ptr cs:[rax+rax]
0x76e0: mov r8,-0x1
0x76e7: jmp 0x7640
0x76f0: mov rcx,rdx
0x76f3: mov r8,-0x1
0x76fa: mov rdx,rsi
0x76fd: mov rsi,rdi
0x7700: xor edi,edi
0x7702: jmp 0x7640
0x7710: mov r8,rcx
0x7713: mov rcx,rdx
0x7716: mov rdx,rsi
0x7719: mov rsi,rdi
0x771c: xor edi,edi
0x771e: jmp 0x7640
0x7730: lea rcx,[rip+0x209909]
0x7737: jmp 0x6e40
0x7740: lea rcx,[rip+0x2098f9]
0x7747: mov rdx,rsi
0x774a: mov rsi,rdi
0x774d: xor edi,edi
0x774f: jmp 0x6e40
0x7760: lea rcx,[rip+0x2098d9]
0x7767: mov rdx,-0x1
0x776e: jmp 0x6e40
0x78d8: mov r8,rcx
0x78db: mov rcx,rdx
0x78de: lea rdx,[rip+0x670f]
0x78e5: mov esi,0x1
0x78ea: xor eax,eax
0x78ec: call 0x2780
0x78f1: jmp 0x77dc
0x7aed: push r12
0x7aef: push r15
0x7af1: push r14
0x7af3: mov r8,qword ptr [rsp+0x20]
0x7af8: mov rcx,rbx
0x7afb: mov rdx,rax
0x7afe: mov rdi,rbp
0x7b01: mov esi,0x1
0x7b06: xor eax,eax
0x7b08: call 0x2780
0x7b0d: add rsp,0x20
0x7b11: add rsp,0x28
0x7b15: pop rbx
0x7b16: pop rbp
0x7b17: pop r12
0x7b19: pop r13
0x7b1b: pop r14
0x7b1d: pop r15
0x7b1f: ret 
0x7b59: push r12
0x7b5b: push r15
0x7b5d: push r14
0x7b5f: mov r9,qword ptr [rsp+0x28]
0x7b64: jmp 0x7af3
0x7bc0: xor r9d,r9d
0x7bc3: cmp qword ptr [r8],0x0
0x7bc7: je 0x7bdb
0x7bc9: nop dword ptr [rax]
0x7bd0: add r9,0x1
0x7bd4: cmp qword ptr [r8+r9*8],0x0
0x7bd9: jne 0x7bd0
0x7bdb: jmp 0x77a0
0x7be0: sub rsp,0x68
0x7be4: mov r10,r8
0x7be7: xor r9d,r9d
0x7bea: mov rax,qword ptr fs:0x28
0x7bf3: mov qword ptr [rsp+0x58],rax
0x7bf8: xor eax,eax
0x7bfa: mov r8,rsp
0x7bfd: nop dword ptr [rax]
0x7c00: mov eax,dword ptr [r10]
0x7c03: cmp eax,0x2f
0x7c06: ja 0x7c4a
0x7c08: mov r11d,eax
0x7c0b: add r11,qword ptr [r10+0x10]
0x7c0f: add eax,0x8
0x7c12: mov dword ptr [r10],eax
0x7c15: mov rax,qword ptr [r11]
0x7c18: test rax,rax
0x7c1b: mov qword ptr [r8+r9*8],rax
0x7c1f: je 0x7c2b
0x7c21: add r9,0x1
0x7c25: cmp r9,0xa
0x7c29: jne 0x7c00
0x7c2b: call 0x77a0
0x7c30: mov rax,qword ptr [rsp+0x58]
0x7c35: xor rax,qword ptr fs:0x28
0x7c3e: jne 0x7c45
0x7c40: add rsp,0x68
0x7c44: ret 
0x7c45: call 0x2520
0x7c4a: mov r11,qword ptr [r10+0x8]
0x7c4e: lea rax,[r11+0x8]
0x7c52: mov qword ptr [r10+0x8],rax
0x7c56: jmp 0x7c15
0x7d20: call 0x2520
0x7d2c: mov rax,rbx
0x7d2f: add rbx,0x8
0x7d33: jmp 0x7ce6
0x7d40: push rbx
0x7d41: lea rsi,[rip+0x62fa]
0x7d48: mov edx,0x5
0x7d4d: xor edi,edi
0x7d4f: call 0x24f0
0x7d54: lea rdx,[rip+0x62fc]
0x7d5b: mov rsi,rax
0x7d5e: mov edi,0x1
0x7d63: xor eax,eax
0x7d65: call 0x26d0
0x7d6a: lea rsi,[rip+0x62fc]
0x7d71: mov edx,0x5
0x7d76: xor edi,edi
0x7d78: call 0x24f0
0x7d7d: lea rcx,[rip+0x5b84]
0x7d84: lea rdx,[rip+0x36e5]
0x7d8b: mov rsi,rax
0x7d8e: mov edi,0x1
0x7d93: xor eax,eax
0x7d95: call 0x26d0
0x7d9a: mov rbx,qword ptr [rip+0x209307]
0x7da1: lea rsi,[rip+0x64f8]
0x7da8: xor edi,edi
0x7daa: mov edx,0x5
0x7daf: call 0x24f0
0x7db4: mov rsi,rbx
0x7db7: mov rdi,rax
0x7dba: pop rbx
0x7dbb: jmp 0x2600
0x7dc0: push rbx
0x7dc1: mov rbx,rdi
0x7dc4: call 0x2660
0x7dc9: test rax,rax
0x7dcc: jne 0x7dd3
0x7dce: test rbx,rbx
0x7dd1: jne 0x7dd5
0x7dd3: pop rbx
0x7dd4: ret 
0x7dd5: call 0x8010
0x7dda: nop word ptr [rax+rax]
0x7de0: mov rax,rdi
0x7de3: mul rsi
0x7de6: mov rdi,rax
0x7de9: seto al
0x7dec: test rdi,rdi
0x7def: js 0x7dfb
0x7df1: movzx eax,al
0x7df4: test rax,rax
0x7df7: jne 0x7dfb
0x7df9: jmp 0x7dc0
0x7dfb: sub rsp,0x8
0x7dff: call 0x8010
0x7e04: nop 
0x7e06: nop word ptr cs:[rax+rax]
0x7e10: jmp 0x7dc0
0x7e29: test rdi,rdi
0x7e2c: jne 0x7e48
0x7e48: call 0x2430
0x7e4d: xor eax,eax
0x7e4f: pop rbx
0x7e50: ret 
0x7e56: nop word ptr cs:[rax+rax]
0x7e60: mov rax,rsi
0x7e63: mul rdx
0x7e66: mov rsi,rax
0x7e69: seto al
0x7e6c: test rsi,rsi
0x7e6f: js 0x7e7b
0x7e71: movzx eax,al
0x7e74: test rax,rax
0x7e77: jne 0x7e7b
0x7e79: jmp 0x7e20
0x7e7b: sub rsp,0x8
0x7e7f: call 0x8010
0x7e84: nop 
0x7e86: nop word ptr cs:[rax+rax]
0x7e90: test rdi,rdi
0x7e93: mov r9,rdx
0x7e96: mov rcx,qword ptr [rsi]
0x7e99: je 0x7ed0
0x7e9b: xor edx,edx
0x7e9d: movabsq rax,0x5555555555555554
0x7ea7: div r9
0x7eaa: cmp rax,rcx
0x7ead: jbe 0x7eeb
0x7eaf: mov rax,rcx
0x7eb2: shr rax, 1
0x7eb5: lea rcx,[rax+rcx+0x1]
0x7eba: mov qword ptr [rsi],rcx
0x7ebd: imul rcx,r9
0x7ec1: mov rsi,rcx
0x7ec4: jmp 0x7e20
0x7ed0: test rcx,rcx
0x7ed3: je 0x7ef8
0x7ed5: mov rax,rcx
0x7ed8: mul r9
0x7edb: seto dl
0x7ede: test rax,rax
0x7ee1: movzx edx,dl
0x7ee4: js 0x7eeb
0x7ee6: test rdx,rdx
0x7ee9: je 0x7eba
0x7eeb: sub rsp,0x8
0x7eef: call 0x8010
0x7ef4: nop dword ptr [rax]
0x7ef8: xor edx,edx
0x7efa: mov eax,0x80
0x7eff: xor r8d,r8d
0x7f02: div r9
0x7f05: test rax,rax
0x7f08: sete r8b
0x7f0c: lea rcx,[r8+rax]
0x7f10: jmp 0x7ed5
0x7f20: test rdi,rdi
0x7f23: mov rax,qword ptr [rsi]
0x7f26: je 0x7f50
0x7f28: movabsq rdx,0x5555555555555553
0x7f32: cmp rax,rdx
0x7f35: ja 0x7f61
0x7f37: mov rdx,rax
0x7f3a: shr rdx, 1
0x7f3d: lea rax,[rdx+rax+0x1]
0x7f42: mov qword ptr [rsi],rax
0x7f45: mov rsi,rax
0x7f48: jmp 0x7e20
0x7f50: test rax,rax
0x7f53: mov edx,0x80
0x7f58: cmove rax,rdx
0x7f5c: test rax,rax
0x7f5f: jns 0x7f42
0x7f61: sub rsp,0x8
0x7f65: call 0x8010
0x7f6a: nop word ptr [rax+rax]
0x7f70: push rbx
0x7f71: mov rbx,rdi
0x7f74: call 0x7dc0
0x7f79: mov rdx,rbx
0x7f7c: xor esi,esi
0x7f7e: mov rdi,rax
0x7f81: pop rbx
0x7f82: jmp 0x25c0
0x7f90: mov rax,rdi
0x7f93: sub rsp,0x8
0x7f97: mul rsi
0x7f9a: seto dl
0x7f9d: test rax,rax
0x7fa0: js 0x7fb9
0x7fa2: movzx edx,dl
0x7fa5: test rdx,rdx
0x7fa8: jne 0x7fb9
0x7faa: call 0x2610
0x7faf: test rax,rax
0x7fb2: je 0x7fb9
0x7fb4: add rsp,0x8
0x7fb8: ret 
0x7fb9: call 0x8010
0x7fbe: nop 
0x7fc0: push rbp
0x7fc1: push rbx
0x7fc2: mov rbp,rdi
0x7fc5: mov rdi,rsi
0x7fc8: mov rbx,rsi
0x7fcb: sub rsp,0x8
0x7fcf: call 0x7dc0
0x7fd4: add rsp,0x8
0x7fd8: mov rdx,rbx
0x7fdb: mov rsi,rbp
0x7fde: pop rbx
0x7fdf: pop rbp
0x7fe0: mov rdi,rax
0x7fe3: jmp 0x2640
0x7ff0: push rbx
0x7ff1: mov rbx,rdi
0x7ff4: call 0x2510
0x7ff9: mov rdi,rbx
0x7ffc: lea rsi,[rax+0x1]
0x8000: pop rbx
0x8001: jmp 0x7fc0
0x8040: call 0x2440
0x8045: nop word ptr cs:[rax+rax]
0x804f: nop 
0x80c2: mov esi,dword ptr [r14]
0x80c5: mov r8,rax
0x80c8: mov eax,0x0
0x80cd: lea rdx,[rip+0x59f4]
0x80d4: mov rcx,r13
0x80d7: cmp esi,0x16
0x80da: cmove esi,eax
0x80dd: test ebx,ebx
0x80df: mov eax,0x1
0x80e4: cmove ebx,eax
0x80e7: xor eax,eax
0x80e9: mov edi,ebx
0x80eb: call 0x26e0
0x80f0: mov rbp,qword ptr [rsp]
0x814b: call 0x2520
0x8150: sub rsp,0x10
0x8154: push r9
0x8156: mov r9,r8
0x8159: mov r8,rcx
0x815c: mov rcx,rdx
0x815f: mov rdx,rsi
0x8162: mov esi,0xa
0x8167: call 0x8050
0x816c: add rsp,0x18
0x8170: ret 
0x8230: cmp eax,0x22
0x8233: mov r12d,0x4
0x8239: jne 0x8207
0x823b: mov r12d,0x1
0x8241: jmp 0x81f2
0x86e0: mov r12d,0x4
0x86e6: jmp 0x8207
0x880f: lea rcx,[rip+0x5c6a]
0x8816: lea rsi,[rip+0x5b43]
0x881d: lea rdi,[rip+0x5b5c]
0x8824: mov edx,0x54
0x8829: call 0x25a0
0x882e: call 0x2520
0x8833: nop word ptr cs:[rax+rax]
0x883d: nop dword ptr [rax]
0x88e6: cmp eax,0x22
0x88e9: mov ebp,0x1
0x88ee: jne 0x8918
0x8912: nop word ptr [rax+rax]
0x8a40: movsxd rdi,edi
0x8a43: mov eax,ebp
0x8a45: add rcx,rdi
0x8a48: or eax,0x2
0x8a4b: mov qword ptr [r15],rcx
0x8a4e: cmp byte ptr [rcx],0x0
0x8a51: mov qword ptr [r14],rbx
0x8a54: cmovne ebp,eax
0x8a57: jmp 0x891d
0x8ab5: or ebp,r9d
0x8ab8: jmp 0x8a40
0x8b4c: mov rax,rbx
0x8b4f: mul rsi
0x8b52: mov rbx,rax
0x8b55: jo 0x8be4
0x8b5b: sub r8d,0x1
0x8b5f: jne 0x8b4c
0x8b61: jmp 0x8ab5
0x8bc0: call 0x2520
0x8bc5: lea rcx,[rip+0x5994]
0x8bcc: lea rsi,[rip+0x578d]
0x8bd3: lea rdi,[rip+0x57a6]
0x8bda: mov edx,0x54
0x8bdf: call 0x25a0
0x8be4: mov r9d,0x1
0x8bea: or rbx,-0x1
0x8bee: jmp 0x8b5b
0x8ead: call 0x2520
0x8eca: mov rax,qword ptr [rsp+0x8]
0x8ecf: jmp 0x8d99
0x8ed4: mov rax,qword ptr [rsp+0x8]
0x8ed9: jmp 0x8df1
0x8ee0: push r13
0x8ee2: push r12
0x8ee4: mov r13,rsi
0x8ee7: push rbp
0x8ee8: push rbx
0x8ee9: mov rbx,rdi
0x8eec: mov r12,rdx
0x8eef: sub rsp,0x18
0x8ef3: mov rax,qword ptr fs:0x28
0x8efc: mov qword ptr [rsp+0x8],rax
0x8f01: xor eax,eax
0x8f03: lea rax,[rsp+0x4]
0x8f08: test rdi,rdi
0x8f0b: cmove rbx,rax
0x8f0f: mov rdi,rbx
0x8f12: call 0x2540
0x8f17: cmp rax,-0x3
0x8f1b: mov rbp,rax
0x8f1e: jbe 0x8f40
0x8f20: test r12,r12
0x8f23: je 0x8f40
0x8f25: xor edi,edi
0x8f27: call 0x9070
0x8f2c: test al,al
0x8f2e: jne 0x8f40
0x8f30: movzx eax,byte ptr [r13]
0x8f35: mov ebp,0x1
0x8f3a: mov dword ptr [rbx],eax
0x8f3c: nop dword ptr [rax]
0x8f40: mov rdx,qword ptr [rsp+0x8]
0x8f45: xor rdx,qword ptr fs:0x28
0x8f4e: mov rax,rbp
0x8f51: jne 0x8f5e
0x8f53: add rsp,0x18
0x8f57: pop rbx
0x8f58: pop rbp
0x8f59: pop r12
0x8f5b: pop r13
0x8f5d: ret 
0x8f5e: call 0x2520
0x8f63: nop word ptr cs:[rax+rax]
0x8f6d: nop dword ptr [rax]
0x8f9b: test rax,rax
0x8f9e: je 0x8fe2
0x8fa0: mov rdx,qword ptr [rsp]
0x8fa4: cmp rdx,0x7fffffff
0x8fab: ja 0x8fc8
0x8fad: mov qword ptr [rbx],rax
0x8fb0: mov eax,edx
0x8fb2: mov rbx,qword ptr [rsp+0x8]
0x8fb7: xor rbx,qword ptr fs:0x28
0x8fc0: jne 0x8fe9
0x8fc2: add rsp,0x10
0x8fc6: pop rbx
0x8fc7: ret 
0x8fc8: mov rdi,rax
0x8fcb: call 0x2430
0x8fd0: call 0x2450
0x8fd5: mov dword ptr [rax],0x4b
0x8fdb: mov eax,0xffffffff
0x8fe0: jmp 0x8fb2
0x8fe2: mov eax,0xffffffff
0x8fe7: jmp 0x8fb2
0x8fe9: call 0x2520
0x8fee: nop 
0x8ff0: push r12
0x8ff2: push rbp
0x8ff3: mov rbp,rdi
0x8ff6: push rbx
0x8ff7: call 0x2480
0x8ffc: mov ebx,dword ptr [rbp]
0x8fff: mov rdi,rbp
0x9002: mov r12,rax
0x9005: call 0x9110
0x900a: and ebx,0x20
0x900d: test ebx,ebx
0x900f: jne 0x9028
0x9011: test eax,eax
0x9013: je 0x901f
0x9015: test r12,r12
0x9018: mov eax,0xffffffff
0x901d: je 0x9058
0x901f: pop rbx
0x9020: pop rbp
0x9021: pop r12
0x9023: ret 
0x9028: test eax,eax
0x902a: jne 0x9048
0x902c: call 0x2450
0x9031: mov dword ptr [rax],0x0
0x9037: mov eax,0xffffffff
0x903c: pop rbx
0x903d: pop rbp
0x903e: pop r12
0x9040: ret 
0x9048: pop rbx
0x9049: mov eax,0xffffffff
0x904e: pop rbp
0x904f: pop r12
0x9051: ret 
0x9058: call 0x2450
0x905d: cmp dword ptr [rax],0x9
0x9060: pop rbx
0x9061: pop rbp
0x9062: pop r12
0x9064: setne al
0x9067: movzx eax,al
0x906a: neg eax
0x906c: ret 
0x9070: sub rsp,0x8
0x9074: xor esi,esi
0x9076: call 0x26b0
0x907b: mov rdx,rax
0x907e: mov eax,0x1
0x9083: test rdx,rdx
0x9086: je 0x90a5
0x9088: lea rdi,[rip+0x54dc]
0x908f: mov ecx,0x2
0x9094: mov rsi,rdx
0x9097: rep cmpsb [rsi],es:[rdi]
0x9099: seta cl
0x909c: sbb cl,0x0
0x909f: xor eax,eax
0x90a1: test cl,cl
0x90a3: jne 0x90b0
0x90a5: add rsp,0x8
0x90a9: ret 
0x90b0: lea rdi,[rip+0x54b6]
0x90b7: mov ecx,0x6
0x90bc: mov rsi,rdx
0x90bf: rep cmpsb [rsi],es:[rdi]
0x90c1: seta al
0x90c4: sbb al,0x0
0x90c6: test al,al
0x90c8: setne al
0x90cb: add rsp,0x8
0x90cf: ret 
0x90d0: sub rsp,0x8
0x90d4: mov edi,0xe
0x90d9: call 0x2680
0x90de: test rax,rax
0x90e1: je 0x9100
0x90e3: cmp byte ptr [rax],0x0
0x90e6: lea rdx,[rip+0x5486]
0x90ed: cmove rax,rdx
0x90f1: add rsp,0x8
0x90f5: ret 
0x9100: lea rax,[rip+0x546c]
0x9107: add rsp,0x8
0x910b: ret 
0x9110: push r12
0x9112: push rbp
0x9113: push rbx
0x9114: mov rbx,rdi
0x9117: call 0x2650
0x911c: test eax,eax
0x911e: mov rdi,rbx
0x9121: js 0x9177
0x9123: call 0x2690
0x9128: test eax,eax
0x912a: jne 0x9158
0x912c: mov rdi,rbx
0x912f: call 0x9190
0x9134: test eax,eax
0x9136: je 0x9174
0x9138: call 0x2450
0x913d: mov r12d,dword ptr [rax]
0x9140: mov rdi,rbx
0x9143: mov rbp,rax
0x9146: call 0x24c0
0x914b: test r12d,r12d
0x914e: jne 0x9180
0x9150: pop rbx
0x9151: pop rbp
0x9152: pop r12
0x9154: ret 
0x9158: mov rdi,rbx
0x915b: call 0x2650
0x9160: xor esi,esi
0x9162: mov edx,0x1
0x9167: mov edi,eax
0x9169: call 0x2590
0x916e: cmp rax,-0x1
0x9172: jne 0x912c
0x9174: mov rdi,rbx
0x9177: pop rbx
0x9178: pop rbp
0x9179: pop r12
0x917b: jmp 0x24c0
0x9180: mov dword ptr [rbp],r12d
0x9184: mov eax,0xffffffff
0x9189: jmp 0x9150
0x9190: test rdi,rdi
0x9193: push rbx
0x9194: mov rbx,rdi
0x9197: je 0x91aa
0x9199: call 0x2690
0x919e: test eax,eax
0x91a0: je 0x91aa
0x91a2: test dword ptr [rbx],0x100
0x91a8: jne 0x91b8
0x91aa: mov rdi,rbx
0x91ad: pop rbx
0x91ae: jmp 0x2670
0x91b8: mov rdi,rbx
0x91bb: mov edx,0x1
0x91c0: xor esi,esi
0x91c2: call 0x91d0
0x91c7: mov rdi,rbx
0x91ca: pop rbx
0x91cb: jmp 0x2670
0x91d0: mov rax,qword ptr [rdi+0x8]
0x91d4: cmp qword ptr [rdi+0x10],rax
0x91d8: je 0x91e0
0x91da: jmp 0x2720
0x91e0: mov rax,qword ptr [rdi+0x20]
0x91e4: cmp qword ptr [rdi+0x28],rax
0x91e8: jne 0x91da
0x91ea: cmp qword ptr [rdi+0x48],0x0
0x91ef: jne 0x91da
0x91f1: push r12
0x91f3: push rbp
0x91f4: mov r12d,edx
0x91f7: push rbx
0x91f8: mov rbp,rsi
0x91fb: mov rbx,rdi
0x91fe: call 0x2650
0x9203: mov edx,r12d
0x9206: mov rsi,rbp
0x9209: mov edi,eax
0x920b: call 0x2590
0x9210: cmp rax,-0x1
0x9214: je 0x9222
0x9216: and dword ptr [rbx],-0x11
0x9219: mov qword ptr [rbx+0x90],rax
0x9220: xor eax,eax
0x9222: pop rbx
0x9223: pop rbp
0x9224: pop r12
0x9226: ret 
0x94f7: movzx edx,byte ptr [r13+0x48]
0x94fc: mov rax,qword ptr [r13+0x50]
0x9500: cmp dl,0x25
0x9503: je 0x9c98
0x9509: cmp rax,-0x1
0x950d: je 0xa156
0x9513: mov r8,qword ptr [rbp-0x3a8]
0x951a: shl rax,0x5
0x951e: add rax,r8
0x9521: cmp dl,0x6e
0x9524: mov edi,dword ptr [rax]
0x9526: mov dword ptr [rbp-0x3d0],edi
0x952c: je 0x9d10
0x9532: mov eax,dword ptr [r13+0x10]
0x9536: mov rdi,qword ptr [rbp-0x3d8]
0x953d: test al,0x1
0x953f: mov byte ptr [rdi],0x25
0x9542: lea rbx,[rdi+0x1]
0x9546: je 0x9557
0x9548: mov rdi,qword ptr [rbp-0x3d8]
0x954f: lea rbx,[rdi+0x2]
0x9553: mov byte ptr [rdi+0x1],0x27
0x9557: test al,0x2
0x9559: je 0x9562
0x955b: mov byte ptr [rbx],0x2d
0x955e: add rbx,0x1
0x9562: test al,0x4
0x9564: je 0x956d
0x9566: mov byte ptr [rbx],0x2b
0x9569: add rbx,0x1
0x956d: test al,0x8
0x956f: je 0x9578
0x9571: mov byte ptr [rbx],0x20
0x9574: add rbx,0x1
0x9578: test al,0x10
0x957a: je 0x9583
0x957c: mov byte ptr [rbx],0x23
0x957f: add rbx,0x1
0x9583: test al,0x40
0x9585: je 0x958e
0x9587: mov byte ptr [rbx],0x49
0x958a: add rbx,0x1
0x958e: test al,0x20
0x9590: je 0x9599
0x9592: mov byte ptr [rbx],0x30
0x9595: add rbx,0x1
0x9599: mov rsi,qword ptr [r13+0x18]
0x959d: mov rdx,qword ptr [r13+0x20]
0x95a1: cmp rsi,rdx
0x95a4: je 0x95d6
0x95a6: mov rcx,rdx
0x95a9: mov rdi,rbx
0x95ac: mov qword ptr [rbp-0x3e0],r8
0x95b3: sub rcx,rsi
0x95b6: mov rdx,rcx
0x95b9: mov qword ptr [rbp-0x3c8],rcx
0x95c0: call 0x2640
0x95c5: mov rcx,qword ptr [rbp-0x3c8]
0x95cc: mov r8,qword ptr [rbp-0x3e0]
0x95d3: add rbx,rcx
0x95d6: mov rsi,qword ptr [r13+0x30]
0x95da: mov rdx,qword ptr [r13+0x38]
0x95de: cmp rsi,rdx
0x95e1: je 0x9613
0x95e3: mov rcx,rdx
0x95e6: mov rdi,rbx
0x95e9: mov qword ptr [rbp-0x3e0],r8
0x95f0: sub rcx,rsi
0x95f3: mov rdx,rcx
0x95f6: mov qword ptr [rbp-0x3c8],rcx
0x95fd: call 0x2640
0x9602: mov rcx,qword ptr [rbp-0x3c8]
0x9609: mov r8,qword ptr [rbp-0x3e0]
0x9610: add rbx,rcx
0x9613: mov edi,dword ptr [rbp-0x3d0]
0x9619: cmp edi,0x10
0x961c: ja 0x964b
0x961e: mov eax,0x1
0x9623: mov ecx,edi
0x9625: shl rax,cl
0x9628: test eax,0x14180
0x962d: jne 0x9644
0x962f: test ah,0x10
0x9632: jne 0x9f90
0x9638: test ah,0x6
0x963b: je 0x964b
0x963d: mov byte ptr [rbx],0x6c
0x9640: add rbx,0x1
0x9644: mov byte ptr [rbx],0x6c
0x9647: add rbx,0x1
0x964b: movzx eax,byte ptr [r13+0x48]
0x9650: mov byte ptr [rbx+0x1],0x0
0x9654: mov byte ptr [rbx],al
0x9656: mov rax,qword ptr [r13+0x28]
0x965a: cmp rax,-0x1
0x965e: je 0x9d90
0x9664: shl rax,0x5
0x9668: add rax,r8
0x966b: cmp dword ptr [rax],0x5
0x966e: jne 0xa156
0x9674: mov eax,dword ptr [rax+0x10]
0x9677: mov dword ptr [rbp-0x3e0],0x1
0x9681: mov dword ptr [rbp-0x3b8],eax
0x9687: mov rax,qword ptr [r13+0x40]
0x968b: cmp rax,-0x1
0x968f: je 0x96bc
0x9691: shl rax,0x5
0x9695: add r8,rax
0x9698: cmp dword ptr [r8],0x5
0x969c: jne 0xa156
0x96a2: mov eax,dword ptr [rbp-0x3e0]
0x96a8: mov edx,dword ptr [r8+0x10]
0x96ac: mov dword ptr [rbp+rax*4-0x3b8],edx
0x96b3: lea eax,[rax+0x1]
0x96b6: mov dword ptr [rbp-0x3e0],eax
0x96bc: mov rax,r14
0x96bf: xor edx,edx
0x96c1: add rax,0x2
0x96c5: jb 0xa32c
0x96cb: cmp r12,rax
0x96ce: jae 0x971b
0x96d0: test r12,r12
0x96d3: jne 0x9ef8
0x96d9: cmp rax,0xc
0x96dd: ja 0x9f10
0x96e3: mov r12d,0xc
0x96e9: cmp r15,qword ptr [rbp-0x3e8]
0x96f0: sete dl
0x96f3: test r15,r15
0x96f6: je 0x9f40
0x96fc: test dl,dl
0x96fe: jne 0x9f40
0x9704: mov rsi,r12
0x9707: mov rdi,r15
0x970a: call 0x26a0
0x970f: test rax,rax
0x9712: je 0x9395
0x9718: mov r15,rax
0x971b: mov byte ptr [r15+r14],0x0
0x9720: call 0x2450
0x9725: mov qword ptr [rbp-0x3c8],rax
0x972c: mov eax,dword ptr [rax]
0x972e: mov qword ptr [rbp-0x3f8],rbx
0x9735: mov dword ptr [rbp-0x424],eax
0x973b: nop dword ptr [rax+rax]
0x9740: mov rax,qword ptr [rbp-0x3c8]
0x9747: mov rbx,r12
0x974a: mov r10d,0x7fffffff
0x9750: sub rbx,r14
0x9753: mov dword ptr [rbp-0x3bc],0xffffffff
0x975d: cmp rbx,0x7fffffff
0x9764: mov dword ptr [rax],0x0
0x976a: mov eax,dword ptr [rbp-0x3d0]
0x9770: cmovbe r10,rbx
0x9774: cmp eax,0x11
0x9777: ja 0xa156
0x977d: lea rsi,[rip+0x4df8]
0x9784: movsxd rax,dword ptr [rsi+rax*4]
0x9788: add rax,rsi
0x978b: jmp rax
0x9c98: cmp rax,-0x1
0x9c9c: jne 0xa156
0x9ca2: mov rax,r14
0x9ca5: add rax,0x1
0x9ca9: mov rbx,rax
0x9cac: jae 0x9d38
0x9cb2: cmp r12,-0x1
0x9cb6: jne 0x9395
0x9cbc: mov rbx,r12
0x9cbf: mov byte ptr [r15+r14],0x25
0x9cc4: mov r8,qword ptr [r13+0x8]
0x9cc8: add r13,0x58
0x9ccc: mov rcx,qword ptr [r13]
0x9cd0: add qword ptr [rbp-0x400],0x1
0x9cd8: cmp rcx,r8
0x9cdb: jne 0x9379
0x9d10: mov edx,edi
0x9d12: sub edx,0x12
0x9d15: cmp edx,0x4
0x9d18: ja 0xa156
0x9d1e: lea rdi,[rip+0x489f]
0x9d25: mov rax,qword ptr [rax+0x10]
0x9d29: movsxd rdx,dword ptr [rdi+rdx*4]
0x9d2d: add rdx,rdi
0x9d30: jmp rdx
0x9d38: cmp r12,rax
0x9d3b: jae 0x9cbf
0x9d3d: test r12,r12
0x9d40: jne 0xa110
0x9d46: cmp rax,0xc
0x9d4a: ja 0xa122
0x9d50: mov r12d,0xc
0x9d56: cmp r15,qword ptr [rbp-0x3e8]
0x9d5d: sete dl
0x9d60: test r15,r15
0x9d63: je 0x9fd0
0x9d69: test dl,dl
0x9d6b: jne 0x9fd0
0x9d71: mov rsi,r12
0x9d74: mov rdi,r15
0x9d77: call 0x26a0
0x9d7c: test rax,rax
0x9d7f: je 0x9e7b
0x9d85: mov r15,rax
0x9d88: jmp 0x9cbf
0x9d90: mov dword ptr [rbp-0x3e0],0x0
0x9d9a: jmp 0x9687
0x9ef8: js 0x9395
0x9efe: add r12,r12
0x9f01: cmp r12,rax
0x9f04: jae 0x96e9
0x9f0a: nop word ptr [rax+rax]
0x9f10: test rdx,rdx
0x9f13: jne 0x9395
0x9f19: cmp rax,-0x1
0x9f1d: je 0x9395
0x9f23: cmp r15,qword ptr [rbp-0x3e8]
0x9f2a: mov r12,rax
0x9f2d: sete dl
0x9f30: test r15,r15
0x9f33: jne 0x96fc
0x9f39: nop dword ptr [rax]
0x9f40: mov rdi,r12
0x9f43: mov byte ptr [rbp-0x3c8],dl
0x9f49: call 0x2660
0x9f4e: test rax,rax
0x9f51: mov rcx,rax
0x9f54: movzx edx,byte ptr [rbp-0x3c8]
0x9f5b: je 0x9395
0x9f61: test r14,r14
0x9f64: je 0xa100
0x9f6a: test dl,dl
0x9f6c: je 0xa100
0x9f72: mov rsi,r15
0x9f75: mov rdx,r14
0x9f78: mov rdi,rax
0x9f7b: call 0x2640
0x9f80: mov r15,rax
0x9f83: jmp 0x971b
0x9f90: mov byte ptr [rbx],0x4c
0x9f93: add rbx,0x1
0x9f97: jmp 0x964b
0x9fd0: mov rdi,r12
0x9fd3: mov byte ptr [rbp-0x3c8],dl
0x9fd9: call 0x2660
0x9fde: test rax,rax
0x9fe1: mov rcx,rax
0x9fe4: movzx edx,byte ptr [rbp-0x3c8]
0x9feb: je 0x9395
0x9ff1: test r14,r14
0x9ff4: je 0xa134
0x9ffa: test dl,dl
0x9ffc: je 0xa134
0xa002: mov rsi,r15
0xa005: mov rdx,r14
0xa008: mov rdi,rax
0xa00b: call 0x2640
0xa010: mov r15,rax
0xa013: jmp 0x9cbf
0xa100: mov r15,rcx
0xa103: jmp 0x971b
0xa110: js 0x9395
0xa116: add r12,r12
0xa119: cmp r12,rax
0xa11c: jae 0x9d56
0xa122: cmp rax,-0x1
0xa126: je 0x9395
0xa12c: mov r12,rax
0xa12f: jmp 0x9d56
0xa134: mov r15,rcx
0xa137: jmp 0x9cbf
0xa156: call 0x2440
0xa15b: nop dword ptr [rax+rax]
0xa32c: cmp r12,-0x1
0xa330: mov edx,0x1
0xa335: je 0x971b
0xa33b: test r12,r12
0xa33e: je 0x9395
0xa344: jns 0x9f10
0xa34a: jmp 0x9395
0xa95e: mov rdi,rcx
0xa961: call 0x26a0
0xa966: mov rdx,qword ptr [r15+0x8]
0xa96a: mov r8,qword ptr [rsp+0x30]
0xa96f: mov rcx,rax
0xa972: mov r10,qword ptr [rsp+0x38]
0xa977: mov r9,qword ptr [rsp+0x40]
0xaff6: mov rdi,rcx
0xaff9: call 0x26a0
0xaffe: mov rdx,qword ptr [r15+0x8]
0xb002: mov r11,qword ptr [rsp+0x30]
0xb007: mov rcx,rax
0xb00a: mov r8,qword ptr [rsp+0x38]
0xb00f: mov r10,qword ptr [rsp+0x40]
0xb014: mov r9,qword ptr [rsp+0x48]
0xb044: mov rdi,rcx
0xb047: call 0x2430
0xb240: push r15
0xb242: push r14
0xb244: mov r15,rdx
0xb247: push r13
0xb249: push r12
0xb24b: lea r12,[rip+0x2047fe]
0xb252: push rbp
0xb253: lea rbp,[rip+0x2047fe]
0xb25a: push rbx
0xb25b: mov r13d,edi
0xb25e: mov r14,rsi
0xb261: sub rbp,r12
0xb264: sub rsp,0x8
0xb268: sar rbp,0x3
0xb26c: call 0x23e0
0xb271: test rbp,rbp
0xb274: je 0xb296
0xb276: xor ebx,ebx
0xb278: nop dword ptr [rax+rax]
0xb280: mov rdx,r15
0xb283: mov rsi,r14
0xb286: mov edi,r13d
0xb289: call qword ptr [r12+rbx*8]
0xb28d: add rbx,0x1
0xb291: cmp rbp,rbx
0xb294: jne 0xb280
0xb296: add rsp,0x8
0xb29a: pop rbx
0xb29b: pop rbp
0xb29c: pop r12
0xb29e: pop r13
0xb2a0: pop r14
0xb2a2: pop r15
0xb2a4: ret 
0xb2b0: rep ret 
