0x1648: sub rsp,0x8
0x164c: mov rax,qword ptr [rip+0x207995]
0x1653: test rax,rax
0x1656: je 0x165a
0x1658: call rax
0x165a: add rsp,0x8
0x165e: ret 
0x1666: jmp qword ptr [rip+0x2077ac]
0x16c0: jmp qword ptr [rip+0x207782]
0x16d0: jmp qword ptr [rip+0x20777a]
0x1770: jmp qword ptr [rip+0x20772a]
0x1790: jmp qword ptr [rip+0x20771a]
0x17d0: jmp qword ptr [rip+0x2076fa]
0x1840: jmp qword ptr [rip+0x2076c2]
0x1860: jmp qword ptr [rip+0x2076b2]
0x18b0: jmp qword ptr [rip+0x20768a]
0x19b0: jmp qword ptr [rip+0x20760a]
0x19c0: jmp qword ptr [rip+0x207602]
0x19e0: jmp qword ptr [rip+0x207612]
0x1b2f: nop 
0x1bd0: mov esi,0x1
0x1dae: jmp 0x1d1a
0x1e8a: hlt 
0x1e8b: nop dword ptr [rax+rax]
0x1e90: lea rdi,[rip+0x207209]
0x1e97: push rbp
0x1e98: lea rax,[rip+0x207201]
0x1e9f: cmp rax,rdi
0x1ea2: mov rbp,rsp
0x1ea5: je 0x1ec0
0x1ea7: mov rax,qword ptr [rip+0x20712a]
0x1eae: test rax,rax
0x1eb1: je 0x1ec0
0x1eb3: pop rbp
0x1eb4: jmp rax
0x1ec0: pop rbp
0x1ec1: ret 
0x1ed0: lea rdi,[rip+0x2071c9]
0x1ed7: lea rsi,[rip+0x2071c2]
0x1ede: push rbp
0x1edf: sub rsi,rdi
0x1ee2: mov rbp,rsp
0x1ee5: sar rsi,0x3
0x1ee9: mov rax,rsi
0x1eec: shr rax,0x3f
0x1ef0: add rsi,rax
0x1ef3: sar rsi, 1
0x1ef6: je 0x1f10
0x1ef8: mov rax,qword ptr [rip+0x2070f1]
0x1eff: test rax,rax
0x1f02: je 0x1f10
0x1f04: pop rbp
0x1f05: jmp rax
0x1f10: pop rbp
0x1f11: ret 
0x1f31: push rbp
0x1f32: mov rbp,rsp
0x1f35: je 0x1f43
0x1f37: mov rdi,qword ptr [rip+0x2070ca]
0x1f3e: call 0x19e0
0x1f43: call 0x1e90
0x1f48: mov byte ptr [rip+0x207199],0x1
0x1f4f: pop rbp
0x1f50: ret 
0x1f60: push rbp
0x1f61: mov rbp,rsp
0x1f64: pop rbp
0x1f65: jmp 0x1ed0
0x1f73: push rsi
0x2170: je 0x2738
0x2176: mov rdi,qword ptr [rip+0x206f9b]
0x217d: movzx eax,byte ptr [rip+0x206f85]
0x2184: lea rdx,[r13-0x1]
0x2188: cmp byte ptr [rdi+r13-0x1],al
0x218d: je 0x2208
0x218f: cmp byte ptr [rip+0x206f75],0x0
0x2196: jne 0x23d0
0x219c: mov rcx,qword ptr [rip+0x206f05]
0x21a3: mov rdx,r13
0x21a6: mov esi,0x1
0x21ab: call 0x18e0
0x21b0: mov rdx,qword ptr [rip+0x206f61]
0x21b7: movzx r14d,byte ptr [rip+0x206e51]
0x21bf: movsx edx,byte ptr [rdx+r13-0x1]
0x21c5: cmp edx,r14d
0x21c8: je 0x21ea
0x21ca: mov rdi,qword ptr [rip+0x206ed7]
0x21d1: mov rdx,qword ptr [rdi+0x28]
0x21d5: cmp rdx,qword ptr [rdi+0x30]
0x21d9: jae 0x2654
0x21df: lea rcx,[rdx+0x1]
0x21e3: mov qword ptr [rdi+0x28],rcx
0x21e7: mov byte ptr [rdx],r14b
0x21ea: mov r13d,0x1
0x21f0: jmp 0x2020
0x2200: jmp 0x20c6
0x2208: mov rax,qword ptr [rip+0x206f11]
0x220f: cmp qword ptr [rax],0x1
0x2213: jbe 0x23e0
0x2219: cmp qword ptr [rax+0x8],0x1
0x221e: ja 0x23c0
0x2224: add rax,0x10
0x2228: mov r13d,0x2
0x222e: xor r14d,r14d
0x2231: mov qword ptr [rip+0x206ee8],rax
0x2238: jmp 0x2037
0x234a: mov rax,qword ptr [rip+0x206f47]
0x2351: xor r12d,r12d
0x2354: mov r13d,0x1
0x235a: mov qword ptr [rip+0x206dbf],rax
0x2361: jmp 0x2020
0x23c0: mov r13d,0x2
0x23c6: xor r14d,r14d
0x23c9: jmp 0x2037
0x23d0: mov r13d,0x1
0x23d6: xor r14d,r14d
0x23d9: jmp 0x2020
0x23e0: mov rcx,qword ptr [rip+0x206cc1]
0x23e7: mov esi,0x1
0x23ec: call 0x18e0
0x23f1: movzx eax,byte ptr [rip+0x206c18]
0x23f8: cmp byte ptr [rip+0x206d0b],al
0x23fe: je 0x240f
0x2400: mov rax,qword ptr [rip+0x206d19]
0x2407: mov r12d,ebx
0x240a: jmp 0x2219
0x240f: mov rax,qword ptr [r15+0x8]
0x2413: cmp rax,qword ptr [r15+0x10]
0x2417: jae 0x270c
0x241d: lea rdx,[rax+0x1]
0x2421: mov qword ptr [r15+0x8],rdx
0x2425: movzx edi,byte ptr [rax]
0x2428: mov rsi,r15
0x242b: mov r12d,ebx
0x242e: call 0x18c0
0x2433: mov rax,qword ptr [rip+0x206ce6]
0x243a: jmp 0x2219
0x24cc: mov rbx,rax
0x24cf: call 0x16a0
0x24d4: mov esi,dword ptr [rax]
0x24d6: lea rdx,[rip+0x4b39]
0x24dd: mov rcx,rbx
0x24e0: xor eax,eax
0x24e2: xor edi,edi
0x24e4: call 0x1940
0x24e9: add rsp,0x18
0x24ed: xor eax,eax
0x24ef: pop rbx
0x24f0: pop rbp
0x24f1: pop r12
0x24f3: pop r13
0x24f5: pop r14
0x24f7: pop r15
0x24f9: ret 
0x252e: lea rdx,[rax+0x1]
0x2532: movzx esi,byte ptr [rip+0x206ad7]
0x2539: mov qword ptr [r15+0x8],rdx
0x253d: movzx ebp,byte ptr [rax]
0x2540: cmp ebp,esi
0x2542: je 0x2610
0x264f: jmp 0x2342
0x2654: mov esi,r14d
0x2657: call 0x17a0
0x265c: movzx r14d,byte ptr [rip+0x2069ac]
0x2664: jmp 0x21ea
0x26d2: jmp 0x2630
0x26e3: jmp 0x2520
0x270c: mov rdi,r15
0x270f: call 0x1670
0x2714: cmp eax,-0x1
0x2717: mov edi,eax
0x2719: jne 0x2428
0x271f: mov rax,qword ptr [rip+0x2069fa]
0x2726: jmp 0x2219
0x2730: mov eax,dword ptr [r15]
0x2733: jmp 0x245b
0x2738: lea rcx,[rip+0x4721]
0x273f: lea rsi,[rip+0x3d3e]
0x2746: lea rdi,[rip+0x3d53]
0x274d: mov edx,0x149
0x2752: call 0x17d0
0x2757: nop word ptr [rax+rax]
0x2bf0: mov eax,dword ptr [rsi]
0x2bf2: cmp dword ptr [rdi],eax
0x2bf4: jl 0x2c00
0x2bf6: setg al
0x2bf9: movzx eax,al
0x2bfc: ret 
0x2c00: mov eax,0xffffffff
0x2c05: ret 
0x2ce3: push rsi
0x312e: mov edi,0x1
0x3133: call 0x2760
0x31a9: test byte ptr [rsp+0x1c],0x4
0x31ae: mov rbp,rax
0x31b1: mov edx,0x5
0x31b6: je 0x320d
0x31b8: lea rsi,[rip+0x3dc9]
0x31bf: xor edi,edi
0x31c1: call 0x1740
0x31c6: mov rdx,rax
0x31c9: mov rcx,rbp
0x31cc: xor esi,esi
0x31ce: xor edi,edi
0x31d0: xor eax,eax
0x31d2: call 0x1940
0x31d7: mov rdi,rbx
0x31da: call 0x1680
0x31df: mov edi,0x1
0x31e4: call 0x2760
0x320d: lea rsi,[rip+0x3caa]
0x3214: xor edi,edi
0x3216: call 0x1740
0x321b: jmp 0x31c6
0x3244: test byte ptr [rsp+0x1c],0x4
0x3249: mov rbx,rax
0x324c: mov edx,0x5
0x3251: je 0x3288
0x3253: lea rsi,[rip+0x3d56]
0x325a: xor edi,edi
0x325c: call 0x1740
0x3261: mov rdx,rax
0x3264: xor edi,edi
0x3266: mov rcx,rbx
0x3269: xor esi,esi
0x326b: xor eax,eax
0x326d: call 0x1940
0x3272: mov edi,0x1
0x3277: call 0x2760
0x3288: lea rsi,[rip+0x3c4c]
0x328f: xor edi,edi
0x3291: call 0x1740
0x3296: jmp 0x3261
0x32a0: sub rsp,0x8
0x32a4: mov rdi,qword ptr [rip+0x205fed]
0x32ab: mov qword ptr [rip+0x205fea],0x0
0x32b6: mov qword ptr [rip+0x205e6f],0x0
0x32c1: call 0x1680
0x32c6: mov qword ptr [rip+0x205fc7],0x0
0x32d1: add rsp,0x8
0x32d5: ret 
0x32e0: mov qword ptr [rip+0x205e59],rdi
0x32e7: ret 
0x32f0: mov byte ptr [rip+0x205e41],dil
0x32f7: ret 
0x3300: push rbp
0x3301: push rbx
0x3302: sub rsp,0x8
0x3306: mov rdi,qword ptr [rip+0x205d9b]
0x330d: call 0x6110
0x3312: test eax,eax
0x3314: je 0x332c
0x3316: call 0x16a0
0x331b: cmp byte ptr [rip+0x205e16],0x0
0x3322: mov rbx,rax
0x3325: je 0x3343
0x3327: cmp dword ptr [rax],0x20
0x332a: jne 0x3343
0x332c: mov rdi,qword ptr [rip+0x205dad]
0x3333: call 0x6110
0x3338: test eax,eax
0x333a: jne 0x3382
0x333c: add rsp,0x8
0x3340: pop rbx
0x3341: pop rbp
0x3342: ret 
0x3343: lea rsi,[rip+0x3cbc]
0x334a: xor edi,edi
0x334c: mov edx,0x5
0x3351: call 0x1740
0x3356: mov rdi,qword ptr [rip+0x205de3]
0x335d: mov rbp,rax
0x3360: test rdi,rdi
0x3363: je 0x338d
0x3365: call 0x5440
0x336a: mov esi,dword ptr [rbx]
0x336c: lea rdx,[rip+0x3c9f]
0x3373: mov rcx,rax
0x3376: mov r8,rbp
0x3379: xor edi,edi
0x337b: xor eax,eax
0x337d: call 0x1940
0x3382: mov edi,dword ptr [rip+0x205c98]
0x3388: call 0x16c0
0x338d: mov esi,dword ptr [rbx]
0x338f: lea rdx,[rip+0x3c80]
0x3396: mov rcx,rax
0x3399: xor edi,edi
0x339b: xor eax,eax
0x339d: call 0x1940
0x33a2: jmp 0x3382
0x33b0: jmp 0x1810
0x35d0: mov eax,dword ptr [rsp+0x34]
0x35d4: mov dword ptr [rsp+0x14],eax
0x35d8: jmp 0x34ba
0x376a: call 0x1770
0x376f: nop 
0x39cf: nop 
0x39d0: push rbp
0x39d1: push rbx
0x39d2: mov rbp,rdi
0x39d5: mov ebx,esi
0x39d7: sub rsp,0x8
0x39db: call 0x6360
0x39e0: movzx edx,byte ptr [rax]
0x39e3: and edx,-0x21
0x39e6: cmp dl,0x55
0x39e9: je 0x3a60
0x39eb: cmp dl,0x47
0x39ee: je 0x3a10
0x39f0: lea rax,[rip+0x367c]
0x39f7: lea rdx,[rip+0x3677]
0x39fe: cmp ebx,0x9
0x3a01: cmovne rax,rdx
0x3a05: add rsp,0x8
0x3a09: pop rbx
0x3a0a: pop rbp
0x3a0b: ret 
0x3a10: movzx edx,byte ptr [rax+0x1]
0x3a14: and edx,-0x21
0x3a17: cmp dl,0x42
0x3a1a: jne 0x39f0
0x3a1c: cmp byte ptr [rax+0x2],0x31
0x3a20: jne 0x39f0
0x3a22: cmp byte ptr [rax+0x3],0x38
0x3a26: jne 0x39f0
0x3a28: cmp byte ptr [rax+0x4],0x30
0x3a2c: jne 0x39f0
0x3a2e: cmp byte ptr [rax+0x5],0x33
0x3a32: jne 0x39f0
0x3a34: cmp byte ptr [rax+0x6],0x30
0x3a38: jne 0x39f0
0x3a3a: cmp byte ptr [rax+0x7],0x0
0x3a3e: jne 0x39f0
0x3a40: cmp byte ptr [rbp],0x60
0x3a44: lea rax,[rip+0x3621]
0x3a4b: lea rdx,[rip+0x361e]
0x3a52: cmovne rax,rdx
0x3a56: add rsp,0x8
0x3a5a: pop rbx
0x3a5b: pop rbp
0x3a5c: ret 
0x3a60: movzx edx,byte ptr [rax+0x1]
0x3a64: and edx,-0x21
0x3a67: cmp dl,0x54
0x3a6a: jne 0x39f0
0x3a6c: movzx edx,byte ptr [rax+0x2]
0x3a70: and edx,-0x21
0x3a73: cmp dl,0x46
0x3a76: jne 0x39f0
0x3a7c: cmp byte ptr [rax+0x3],0x2d
0x3a80: jne 0x39f0
0x3a86: cmp byte ptr [rax+0x4],0x38
0x3a8a: jne 0x39f0
0x3a90: cmp byte ptr [rax+0x5],0x0
0x3a94: jne 0x39f0
0x3a9a: cmp byte ptr [rbp],0x60
0x3a9e: lea rax,[rip+0x35bf]
0x3aa5: lea rdx,[rip+0x35bc]
0x3aac: cmovne rax,rdx
0x3ab0: add rsp,0x8
0x3ab4: pop rbx
0x3ab5: pop rbp
0x3ab6: ret 
0x3b93: xor r11d,r11d
0x3b96: mov rax,rbp
0x3b99: mov r8d,r12d
0x3b9c: mov rbp,r11
0x3b9f: mov r11,rax
0x3ba2: nop word ptr [rax+rax]
0x3ba8: cmp r11,rbp
0x3bab: setne r12b
0x3baf: cmp r11,-0x1
0x3bb3: jne 0x3bc2
0x3bb5: mov rax,qword ptr [rsp+0x10]
0x3bba: cmp byte ptr [rax+rbp],0x0
0x3bbe: setne r12b
0x3bc2: test r12b,r12b
0x3bc5: je 0x4220
0x3bcb: cmp dword ptr [rsp+0x8],0x2
0x3bd0: mov rdi,qword ptr [rsp+0x10]
0x3bd5: lea r9,[rdi+rbp]
0x3bd9: setne al
0x3bdc: and al,byte ptr [rsp+0xd]
0x3be0: mov r10d,eax
0x3be3: je 0x3c90
0x3be9: mov rax,qword ptr [rsp+0x18]
0x3bee: test rax,rax
0x3bf1: je 0x4020
0x3bf7: cmp r11,-0x1
0x3bfb: lea rbx,[rbp+rax]
0x3c00: jne 0x3c30
0x3c02: cmp rax,0x1
0x3c06: jbe 0x3c30
0x3c08: mov byte ptr [rsp+0x38],r8b
0x3c0d: mov byte ptr [rsp+0x30],r10b
0x3c12: mov qword ptr [rsp+0x28],r9
0x3c17: call 0x1760
0x3c1c: movzx r8d,byte ptr [rsp+0x38]
0x3c22: movzx r10d,byte ptr [rsp+0x30]
0x3c28: mov r11,rax
0x3c2b: mov r9,qword ptr [rsp+0x28]
0x3c30: cmp rbx,r11
0x3c33: mov byte ptr [rsp+0x28],r10b
0x3c38: ja 0x41f0
0x3c3e: mov rdx,qword ptr [rsp+0x18]
0x3c43: mov rsi,qword ptr [rsp+0x48]
0x3c48: mov rdi,r9
0x3c4b: mov qword ptr [rsp+0x40],r11
0x3c50: mov byte ptr [rsp+0x38],r8b
0x3c55: mov qword ptr [rsp+0x30],r9
0x3c5a: call 0x1840
0x3c5f: test eax,eax
0x3c61: mov r9,qword ptr [rsp+0x30]
0x3c66: movzx r8d,byte ptr [rsp+0x38]
0x3c6c: mov r11,qword ptr [rsp+0x40]
0x3c71: jne 0x41f0
0x3c77: cmp byte ptr [rsp+0xf],0x0
0x3c7c: movzx r10d,byte ptr [rsp+0x28]
0x3c82: jne 0x4c05
0x3c88: nop dword ptr [rax+rax]
0x3c90: movzx ebx,byte ptr [r9]
0x3c94: cmp bl,0x7e
0x3c97: ja 0x3fb8
0x3c9d: lea rcx,[rip+0x3468]
0x3ca4: movzx edx,bl
0x3ca7: movsxd rax,dword ptr [rcx+rdx*4]
0x3cab: add rax,rcx
0x3cae: jmp rax
0x3ce8: cmp byte ptr [rsp+0xd],0x1
0x3ced: jne 0x3e02
0x3cf3: test dl,dl
0x3cf5: jne 0x3e02
0x3cfb: mov rsi,qword ptr [rsp+0x20]
0x3d00: test rsi,rsi
0x3d03: je 0x3d19
0x3d05: mov edx,ebx
0x3d07: shr dl,0x5
0x3d0a: movzx edx,dl
0x3d0d: mov edx,dword ptr [rsi+rdx*4]
0x3d10: btl edx,ebx
0x3d13: jb 0x3e63
0x3d19: test r10b,r10b
0x3d1c: jne 0x3e63
0x3d22: xor eax,0x1
0x3d25: add rbp,0x1
0x3d29: and eax,r8d
0x3d2c: test al,al
0x3d2e: je 0x3d50
0x3d30: cmp r13,r15
0x3d33: jbe 0x3d3a
0x3d35: mov byte ptr [r14+r15],0x27
0x3d3a: lea rax,[r15+0x1]
0x3d3e: cmp r13,rax
0x3d41: jbe 0x3d49
0x3d43: mov byte ptr [r14+r15+0x1],0x27
0x3d49: add r15,0x2
0x3d4d: xor r8d,r8d
0x3d50: cmp r15,r13
0x3d53: jae 0x3d59
0x3d55: mov byte ptr [r14+r15],bl
0x3d59: movzx edi,byte ptr [rsp+0xe]
0x3d5e: add r15,0x1
0x3d62: mov eax,0x0
0x3d67: test r12b,r12b
0x3d6a: cmove edi,eax
0x3d6d: mov byte ptr [rsp+0xe],dil
0x3d72: jmp 0x3ba8
0x3e02: cmp byte ptr [rsp+0xf],0x0
0x3e07: jne 0x3cfb
0x3e0d: jmp 0x3d19
0x3e63: cmp dword ptr [rsp+0x8],0x2
0x3e68: sete dl
0x3e6b: cmp byte ptr [rsp+0xf],0x0
0x3e70: mov eax,edx
0x3e72: jne 0x46c8
0x3e78: mov eax,r8d
0x3e7b: xor eax,0x1
0x3e7e: and al,dl
0x3e80: je 0x3eb1
0x3e82: cmp r13,r15
0x3e85: jbe 0x3e8c
0x3e87: mov byte ptr [r14+r15],0x27
0x3e8c: lea rdx,[r15+0x1]
0x3e90: cmp r13,rdx
0x3e93: jbe 0x3e9b
0x3e95: mov byte ptr [r14+r15+0x1],0x24
0x3e9b: lea rdx,[r15+0x2]
0x3e9f: cmp r13,rdx
0x3ea2: jbe 0x3eaa
0x3ea4: mov byte ptr [r14+r15+0x2],0x27
0x3eaa: add r15,0x3
0x3eae: mov r8d,eax
0x3eb1: cmp r13,r15
0x3eb4: jbe 0x3ebb
0x3eb6: mov byte ptr [r14+r15],0x5c
0x3ebb: add r15,0x1
0x3ebf: add rbp,0x1
0x3ec3: jmp 0x3d50
0x3fb0: xor r10d,r10d
0x3fb3: nop dword ptr [rax+rax]
0x3fb8: cmp qword ptr [rsp+0x58],0x1
0x3fbe: jne 0x4368
0x3fc4: mov qword ptr [rsp+0x38],r11
0x3fc9: mov byte ptr [rsp+0x30],r8b
0x3fce: mov byte ptr [rsp+0x28],r10b
0x3fd3: call 0x19d0
0x3fd8: mov rcx,qword ptr [rax]
0x3fdb: movzx edx,bl
0x3fde: movzx r10d,byte ptr [rsp+0x28]
0x3fe4: movzx r8d,byte ptr [rsp+0x30]
0x3fea: mov r11,qword ptr [rsp+0x38]
0x3fef: mov edi,0x1
0x3ff4: movzx eax,word ptr [rcx+rdx*2]
0x3ff8: and ax,0x4000
0x3ffc: setne r12b
0x4000: sete al
0x4003: and al,byte ptr [rsp+0xd]
0x4007: test al,al
0x4009: jne 0x49a1
0x400f: cmp dword ptr [rsp+0x8],0x2
0x4014: sete dl
0x4017: jmp 0x3ce8
0x4020: movzx ebx,byte ptr [r9]
0x4024: cmp bl,0x7e
0x4027: ja 0x3fb0
0x4029: lea rcx,[rip+0x32d8]
0x4030: movzx edx,bl
0x4033: movsxd rax,dword ptr [rcx+rdx*4]
0x4037: add rax,rcx
0x403a: jmp rax
0x41f0: xor r10d,r10d
0x41f3: jmp 0x3c90
0x4220: cmp dword ptr [rsp+0x8],0x2
0x4225: movzx ebx,byte ptr [rsp+0xf]
0x422a: mov r12d,r8d
0x422d: mov rbp,r11
0x4230: sete dl
0x4233: mov eax,ebx
0x4235: test r15,r15
0x4238: sete cl
0x423b: and eax,edx
0x423d: and al,cl
0x423f: jne 0x4ca6
0x4245: mov eax,ebx
0x4247: xor eax,0x1
0x424a: and dl,al
0x424c: je 0x4bbc
0x4252: cmp byte ptr [rsp+0x7c],0x0
0x4257: je 0x4bba
0x425d: cmp byte ptr [rsp+0xe],0x0
0x4262: jne 0x4c5d
0x4268: test r13,r13
0x426b: sete al
0x426e: cmp qword ptr [rsp+0x50],0x0
0x4274: setne dl
0x4277: and al,dl
0x4279: je 0x4c9c
0x427f: mov r13,qword ptr [rsp+0x50]
0x4284: lea rbx,[rip+0x2dea]
0x428b: mov byte ptr [r14],0x27
0x428f: mov dword ptr [rsp+0x8],0x2
0x4297: mov r15d,0x1
0x429d: mov qword ptr [rsp+0x18],0x1
0x42a6: mov byte ptr [rsp+0xf],0x0
0x42ab: mov qword ptr [rsp+0x48],rbx
0x42b0: mov byte ptr [rsp+0x7c],al
0x42b4: jmp 0x3b93
0x4368: lea rax,[rsp+0xa0]
0x4370: cmp r11,-0x1
0x4374: mov qword ptr [rsp+0xa0],0x0
0x4380: mov qword ptr [rsp+0x28],rax
0x4385: jne 0x43b4
0x4387: mov rdi,qword ptr [rsp+0x10]
0x438c: mov byte ptr [rsp+0x40],r8b
0x4391: mov byte ptr [rsp+0x38],r10b
0x4396: mov qword ptr [rsp+0x30],r9
0x439b: call 0x1760
0x43a0: movzx r8d,byte ptr [rsp+0x40]
0x43a6: movzx r10d,byte ptr [rsp+0x38]
0x43ac: mov r11,rax
0x43af: mov r9,qword ptr [rsp+0x30]
0x43b4: lea rax,[rsp+0x9c]
0x43bc: xor ecx,ecx
0x43be: mov byte ptr [rsp+0x7e],bl
0x43c2: mov byte ptr [rsp+0x7d],r8b
0x43c7: mov rbx,rcx
0x43ca: mov qword ptr [rsp+0x88],r9
0x43d2: mov qword ptr [rsp+0x38],rax
0x43d7: mov byte ptr [rsp+0x7f],r10b
0x43dc: mov qword ptr [rsp+0x80],r15
0x43e4: mov qword ptr [rsp+0x40],r14
0x43e9: mov qword ptr [rsp+0x70],r13
0x43ee: mov qword ptr [rsp+0x30],r11
0x43f3: mov rax,qword ptr [rsp+0x10]
0x43f8: lea r14,[rbp+rbx]
0x43fd: mov rdx,qword ptr [rsp+0x30]
0x4402: mov rcx,qword ptr [rsp+0x28]
0x4407: mov rdi,qword ptr [rsp+0x38]
0x440c: lea r13,[rax+r14]
0x4410: sub rdx,r14
0x4413: mov rsi,r13
0x4416: call 0x6080
0x441b: test rax,rax
0x441e: mov r15,rax
0x4421: je 0x4471
0x4423: cmp rax,-0x1
0x4427: je 0x4a45
0x442d: cmp rax,-0x2
0x4431: je 0x49d1
0x4437: cmp dword ptr [rsp+0x8],0x2
0x443c: sete al
0x443f: and al,byte ptr [rsp+0xf]
0x4443: jne 0x45e0
0x4449: mov edi,dword ptr [rsp+0x9c]
0x4450: call 0x19c0
0x4455: mov rdi,qword ptr [rsp+0x28]
0x445a: test eax,eax
0x445c: mov eax,0x0
0x4461: cmove r12d,eax
0x4465: add rbx,r15
0x4468: call 0x19b0
0x446d: test eax,eax
0x446f: je 0x43f3
0x4471: mov edx,r12d
0x4474: mov rdi,rbx
0x4477: movzx r8d,byte ptr [rsp+0x7d]
0x447d: xor edx,0x1
0x4480: movzx ebx,byte ptr [rsp+0x7e]
0x4485: movzx r10d,byte ptr [rsp+0x7f]
0x448b: and dl,byte ptr [rsp+0xd]
0x448f: mov r15,qword ptr [rsp+0x80]
0x4497: mov r14,qword ptr [rsp+0x40]
0x449c: mov r13,qword ptr [rsp+0x70]
0x44a1: mov r11,qword ptr [rsp+0x30]
0x44a6: cmp rdi,0x1
0x44aa: jbe 0x4aab
0x44b0: mov rcx,rdi
0x44b3: xor esi,esi
0x44b5: movzx r9d,byte ptr [rsp+0xf]
0x44bb: add rcx,rbp
0x44be: mov rdi,qword ptr [rsp+0x10]
0x44c3: jmp 0x457e
0x44d0: cmp dword ptr [rsp+0x8],0x2
0x44d5: sete al
0x44d8: test r9b,r9b
0x44db: jne 0x4990
0x44e1: mov esi,r8d
0x44e4: xor esi,0x1
0x44e7: and al,sil
0x44ea: je 0x451b
0x44ec: cmp r13,r15
0x44ef: jbe 0x44f6
0x44f1: mov byte ptr [r14+r15],0x27
0x44f6: lea rsi,[r15+0x1]
0x44fa: cmp r13,rsi
0x44fd: jbe 0x4505
0x44ff: mov byte ptr [r14+r15+0x1],0x24
0x4505: lea rsi,[r15+0x2]
0x4509: cmp r13,rsi
0x450c: jbe 0x4514
0x450e: mov byte ptr [r14+r15+0x2],0x27
0x4514: add r15,0x3
0x4518: mov r8d,eax
0x451b: cmp r13,r15
0x451e: jbe 0x4525
0x4520: mov byte ptr [r14+r15],0x5c
0x4525: lea rax,[r15+0x1]
0x4529: cmp r13,rax
0x452c: jbe 0x453b
0x452e: mov eax,ebx
0x4530: shr al,0x6
0x4533: add eax,0x30
0x4536: mov byte ptr [r14+r15+0x1],al
0x453b: lea rax,[r15+0x2]
0x453f: cmp r13,rax
0x4542: jbe 0x4554
0x4544: mov eax,ebx
0x4546: shr al,0x3
0x4549: and eax,0x7
0x454c: add eax,0x30
0x454f: mov byte ptr [r14+r15+0x2],al
0x4554: and ebx,0x7
0x4557: add rbp,0x1
0x455b: add r15,0x3
0x455f: add ebx,0x30
0x4562: cmp rbp,rcx
0x4565: jae 0x3d50
0x456b: mov esi,edx
0x456d: cmp r13,r15
0x4570: jbe 0x4576
0x4572: mov byte ptr [r14+r15],bl
0x4576: movzx ebx,byte ptr [rdi+rbp]
0x457a: add r15,0x1
0x457e: test dl,dl
0x4580: jne 0x44d0
0x4586: mov eax,esi
0x4588: xor eax,0x1
0x458b: and eax,r8d
0x458e: test r10b,r10b
0x4591: je 0x45a1
0x4593: cmp r13,r15
0x4596: jbe 0x459d
0x4598: mov byte ptr [r14+r15],0x5c
0x459d: add r15,0x1
0x45a1: add rbp,0x1
0x45a5: cmp rbp,rcx
0x45a8: jae 0x3d2c
0x45ae: test al,al
0x45b0: je 0x49ae
0x45b6: cmp r13,r15
0x45b9: jbe 0x45c0
0x45bb: mov byte ptr [r14+r15],0x27
0x45c0: lea rax,[r15+0x1]
0x45c4: cmp r13,rax
0x45c7: jbe 0x45cf
0x45c9: mov byte ptr [r14+r15+0x1],0x27
0x45cf: add r15,0x2
0x45d3: xor r10d,r10d
0x45d6: xor r8d,r8d
0x45d9: jmp 0x456d
0x45e0: cmp r15,0x1
0x45e4: je 0x4449
0x45ea: mov rdi,qword ptr [rsp+0x10]
0x45ef: lea rcx,[rdi+r15]
0x45f3: lea rdx,[rdi+r14+0x1]
0x45f8: lea r8,[rcx+r14]
0x45fc: jmp 0x460d
0x4600: add rdx,0x1
0x4604: cmp r8,rdx
0x4607: je 0x4449
0x460d: movzx ecx,byte ptr [rdx]
0x4610: sub ecx,0x5b
0x4613: cmp cl,0x21
0x4616: ja 0x4600
0x4618: mov esi,0x1
0x461d: shl rsi,cl
0x4620: mov rcx,rsi
0x4623: movabsq rsi,0x20000002b
0x462d: test rcx,rsi
0x4630: je 0x4600
0x4632: mov r14,qword ptr [rsp+0x40]
0x4637: mov r13,qword ptr [rsp+0x70]
0x463c: mov rbp,qword ptr [rsp+0x30]
0x4641: mov dword ptr [rsp+0x8],0x2
0x4649: cmp byte ptr [rsp+0xd],0x0
0x464e: je 0x4660
0x4650: test al,al
0x4652: mov eax,0x4
0x4657: cmove eax,dword ptr [rsp+0x8]
0x465c: mov dword ptr [rsp+0x8],eax
0x4660: sub rsp,0x8
0x4664: mov rcx,rbp
0x4667: mov rsi,r13
0x466a: push qword ptr [rsp+0x68]
0x466e: push qword ptr [rsp+0x78]
0x4672: mov rdi,r14
0x4675: push 0x0
0x4677: mov r9d,dword ptr [rsp+0x98]
0x467f: mov r8d,dword ptr [rsp+0x28]
0x4684: mov rdx,qword ptr [rsp+0x30]
0x4689: and r9d,-0x3
0x468d: call 0x3ac0
0x4692: add rsp,0x20
0x4696: mov r15,rax
0x4699: mov rbx,qword ptr [rsp+0xa8]
0x46a1: xor rbx,qword ptr fs:0x28
0x46aa: mov rax,r15
0x46ad: jne 0x4cb3
0x46b3: add rsp,0xb8
0x46ba: pop rbx
0x46bb: pop rbp
0x46bc: pop r12
0x46be: pop r13
0x46c0: pop r14
0x46c2: pop r15
0x46c4: ret 
0x46c8: mov rbp,r11
0x46cb: jmp 0x4649
0x4731: test r13,r13
0x4734: jne 0x4cca
0x473a: lea rax,[rip+0x2934]
0x4741: mov qword ptr [rsp+0x50],0x0
0x474a: mov byte ptr [rsp+0xe],0x1
0x474f: mov byte ptr [rsp+0x7c],0x0
0x4754: xor r12d,r12d
0x4757: mov byte ptr [rsp+0xf],0x0
0x475c: mov qword ptr [rsp+0x18],0x1
0x4765: mov qword ptr [rsp+0x48],rax
0x476a: mov r15d,0x1
0x4770: mov dword ptr [rsp+0x8],0x2
0x4778: jmp 0x3b93
0x4990: movzx ebx,byte ptr [rsp+0xf]
0x4995: mov rbp,r11
0x4998: mov byte ptr [rsp+0xd],bl
0x499c: jmp 0x4649
0x49a1: movzx edx,byte ptr [rsp+0xd]
0x49a6: xor r12d,r12d
0x49a9: jmp 0x44b0
0x49ae: xor r10d,r10d
0x49b1: jmp 0x456d
0x49d1: mov r11,qword ptr [rsp+0x30]
0x49d6: mov rsi,r14
0x49d9: mov rcx,r13
0x49dc: mov rax,rbx
0x49df: mov rdi,rbx
0x49e2: movzx r8d,byte ptr [rsp+0x7d]
0x49e8: movzx ebx,byte ptr [rsp+0x7e]
0x49ed: mov r9,qword ptr [rsp+0x88]
0x49f5: cmp rsi,r11
0x49f8: movzx r10d,byte ptr [rsp+0x7f]
0x49fe: mov r15,qword ptr [rsp+0x80]
0x4a06: mov r14,qword ptr [rsp+0x40]
0x4a0b: mov r13,qword ptr [rsp+0x70]
0x4a10: jae 0x4a38
0x4a12: cmp byte ptr [rcx],0x0
0x4a15: jne 0x4a27
0x4a17: jmp 0x4a38
0x4a20: cmp byte ptr [r9+rax],0x0
0x4a25: je 0x4a35
0x4a27: add rax,0x1
0x4a2b: lea rdx,[rbp+rax]
0x4a30: cmp r11,rdx
0x4a33: ja 0x4a20
0x4a35: mov rdi,rax
0x4a38: movzx edx,byte ptr [rsp+0xd]
0x4a3d: xor r12d,r12d
0x4a40: jmp 0x44a6
0x4a45: mov rdi,rbx
0x4a48: movzx r8d,byte ptr [rsp+0x7d]
0x4a4e: movzx ebx,byte ptr [rsp+0x7e]
0x4a53: movzx r10d,byte ptr [rsp+0x7f]
0x4a59: mov r15,qword ptr [rsp+0x80]
0x4a61: xor r12d,r12d
0x4a64: mov r14,qword ptr [rsp+0x40]
0x4a69: mov r13,qword ptr [rsp+0x70]
0x4a6e: mov r11,qword ptr [rsp+0x30]
0x4a73: movzx edx,byte ptr [rsp+0xd]
0x4a78: jmp 0x44a6
0x4aab: mov eax,edx
0x4aad: jmp 0x4007
0x4bba: mov eax,edx
0x4bbc: mov rbx,qword ptr [rsp+0x48]
0x4bc1: test rbx,rbx
0x4bc4: je 0x4bf2
0x4bc6: test al,al
0x4bc8: je 0x4bf2
0x4bca: movzx ecx,byte ptr [rbx]
0x4bcd: mov rax,rbx
0x4bd0: test cl,cl
0x4bd2: je 0x4bf2
0x4bd4: mov rdx,r15
0x4bd7: sub rax,r15
0x4bda: cmp r13,rdx
0x4bdd: jbe 0x4be3
0x4bdf: mov byte ptr [r14+rdx],cl
0x4be3: add rdx,0x1
0x4be7: movzx ecx,byte ptr [rax+rdx]
0x4beb: test cl,cl
0x4bed: jne 0x4bda
0x4bef: mov r15,rdx
0x4bf2: cmp r13,r15
0x4bf5: jbe 0x4699
0x4bfb: mov byte ptr [r14+r15],0x0
0x4c00: jmp 0x4699
0x4c05: cmp dword ptr [rsp+0x8],0x2
0x4c0a: movzx ebx,byte ptr [rsp+0xf]
0x4c0f: mov rbp,r11
0x4c12: sete al
0x4c15: mov byte ptr [rsp+0xd],bl
0x4c19: jmp 0x4649
0x4c5d: sub rsp,0x8
0x4c61: mov r8d,0x5
0x4c67: mov rcx,r11
0x4c6a: push qword ptr [rsp+0x68]
0x4c6e: push qword ptr [rsp+0x78]
0x4c72: mov rdi,r14
0x4c75: push qword ptr [rsp+0x38]
0x4c79: mov r9d,dword ptr [rsp+0x98]
0x4c81: mov rdx,qword ptr [rsp+0x30]
0x4c86: mov rsi,qword ptr [rsp+0x70]
0x4c8b: call 0x3ac0
0x4c90: add rsp,0x20
0x4c94: mov r15,rax
0x4c97: jmp 0x4699
0x4c9c: movzx eax,byte ptr [rsp+0x7c]
0x4ca1: jmp 0x4bbc
0x4ca6: mov dword ptr [rsp+0x8],0x2
0x4cae: jmp 0x4649
0x4cb3: call 0x1770
0x4cb8: mov byte ptr [rsp+0xd],0x0
0x4cbd: jmp 0x4731
0x4cca: mov byte ptr [rsp+0xe],0x1
0x4ccf: xor eax,eax
0x4cd1: xor r12d,r12d
0x4cd4: mov qword ptr [rsp+0x50],0x0
0x4cdd: jmp 0x4284
0x4cf4: nop 
0x4cf6: nop word ptr cs:[rax+rax]
0x4dec: add rsp,0x20
0x4df0: mov r11,qword ptr [rsp+0x10]
0x4df5: cmp r11,rax
0x4df8: ja 0x4e61
0x4dfa: lea rsi,[rax+0x1]
0x4dfe: lea rax,[rip+0x20435b]
0x4e05: cmp r12,rax
0x4e08: mov qword ptr [rbx],rsi
0x4e0b: je 0x4e1f
0x4e0d: mov rdi,r12
0x4e10: mov qword ptr [rsp+0x10],rsi
0x4e15: call 0x1680
0x4e1a: mov rsi,qword ptr [rsp+0x10]
0x4e1f: mov rdi,rsi
0x4e22: mov qword ptr [rsp+0x10],rsi
0x4e27: call 0x5c80
0x4e2c: sub rsp,0x8
0x4e30: mov qword ptr [rbx+0x8],rax
0x4e34: mov r8d,dword ptr [rbp]
0x4e38: push qword ptr [rbp+0x30]
0x4e3b: push qword ptr [rbp+0x28]
0x4e3e: mov rcx,r14
0x4e41: push r15
0x4e43: mov r9d,dword ptr [rsp+0x3c]
0x4e48: mov rdi,rax
0x4e4b: mov rdx,qword ptr [rsp+0x28]
0x4e50: mov rsi,qword ptr [rsp+0x30]
0x4e55: mov r12,rax
0x4e58: call 0x3ac0
0x4e5d: add rsp,0x20
0x4e61: mov eax,dword ptr [rsp+0x18]
0x4e65: mov dword ptr [r13],eax
0x4e69: add rsp,0x28
0x4e6d: mov rax,r12
0x4e70: pop rbx
0x4e71: pop rbp
0x4e72: pop r12
0x4e74: pop r13
0x4e76: pop r14
0x4e78: pop r15
0x4e7a: ret 
0x4ea1: call 0x1690
0x4ea6: call 0x5ed0
0x4eab: nop dword ptr [rax+rax]
0x4eb0: push r12
0x4eb2: push rbp
0x4eb3: push rbx
0x4eb4: mov rbx,rdi
0x4eb7: call 0x16a0
0x4ebc: mov r12d,dword ptr [rax]
0x4ebf: mov rbp,rax
0x4ec2: lea rax,[rip+0x204397]
0x4ec9: test rbx,rbx
0x4ecc: mov esi,0x38
0x4ed1: cmove rbx,rax
0x4ed5: mov rdi,rbx
0x4ed8: call 0x5e80
0x4edd: mov dword ptr [rbp],r12d
0x4ee1: pop rbx
0x4ee2: pop rbp
0x4ee3: pop r12
0x4ee5: ret 
0x4ef0: lea rax,[rip+0x204369]
0x4ef7: test rdi,rdi
0x4efa: cmove rdi,rax
0x4efe: mov eax,dword ptr [rdi]
0x4f00: ret 
0x4f10: lea rax,[rip+0x204349]
0x4f17: test rdi,rdi
0x4f1a: cmove rdi,rax
0x4f1e: mov dword ptr [rdi],esi
0x4f20: ret 
0x4f30: lea rax,[rip+0x204329]
0x4f37: test rdi,rdi
0x4f3a: mov ecx,esi
0x4f3c: cmove rdi,rax
0x4f40: mov eax,esi
0x4f42: and ecx,0x1f
0x4f45: shr al,0x5
0x4f48: movzx eax,al
0x4f4b: lea rdi,[rdi+rax*4+0x8]
0x4f50: mov esi,dword ptr [rdi]
0x4f52: mov eax,esi
0x4f54: shr eax,cl
0x4f56: xor edx,eax
0x4f58: and eax,0x1
0x4f5b: and edx,0x1
0x4f5e: shl edx,cl
0x4f60: xor edx,esi
0x4f62: mov dword ptr [rdi],edx
0x4f64: ret 
0x4f70: lea rax,[rip+0x2042e9]
0x4f77: test rdi,rdi
0x4f7a: cmove rdi,rax
0x4f7e: mov eax,dword ptr [rdi+0x4]
0x4f81: mov dword ptr [rdi+0x4],esi
0x4f84: ret 
0x4f90: lea rax,[rip+0x2042c9]
0x4f97: test rdi,rdi
0x4f9a: cmove rdi,rax
0x4f9e: test rsi,rsi
0x4fa1: mov dword ptr [rdi],0xa
0x4fa7: je 0x4fb7
0x4fa9: test rdx,rdx
0x4fac: je 0x4fb7
0x4fae: mov qword ptr [rdi+0x28],rsi
0x4fb2: mov qword ptr [rdi+0x30],rdx
0x4fb6: ret 
0x4fb7: sub rsp,0x8
0x4fbb: call 0x1690
0x4fc0: push r15
0x4fc2: push r14
0x4fc4: lea rax,[rip+0x204295]
0x4fcb: push r13
0x4fcd: push r12
0x4fcf: mov r13,rdi
0x4fd2: push rbp
0x4fd3: push rbx
0x4fd4: mov rbx,r8
0x4fd7: mov r14,rsi
0x4fda: mov r15,rdx
0x4fdd: sub rsp,0x18
0x4fe1: test r8,r8
0x4fe4: cmove rbx,rax
0x4fe8: mov qword ptr [rsp+0x8],rcx
0x4fed: call 0x16a0
0x4ff2: mov r12d,dword ptr [rax]
0x4ff5: mov rbp,rax
0x4ff8: lea rax,[rbx+0x8]
0x4ffc: sub rsp,0x8
0x5000: mov r9d,dword ptr [rbx+0x4]
0x5004: push qword ptr [rbx+0x30]
0x5007: mov r8d,dword ptr [rbx]
0x500a: push qword ptr [rbx+0x28]
0x500d: mov rdx,r15
0x5010: push rax
0x5011: mov rcx,qword ptr [rsp+0x28]
0x5016: mov rsi,r14
0x5019: mov rdi,r13
0x501c: call 0x3ac0
0x5021: mov dword ptr [rbp],r12d
0x5025: add rsp,0x38
0x5029: pop rbx
0x502a: pop rbp
0x502b: pop r12
0x502d: pop r13
0x502f: pop r14
0x5031: pop r15
0x5033: ret 
0x5040: push r15
0x5042: push r14
0x5044: lea rax,[rip+0x204215]
0x504b: push r13
0x504d: push r12
0x504f: mov r12,rdx
0x5052: push rbp
0x5053: push rbx
0x5054: mov rbx,rcx
0x5057: mov r14,rdi
0x505a: mov r15,rsi
0x505d: sub rsp,0x38
0x5061: test rcx,rcx
0x5064: cmove rbx,rax
0x5068: xor ebp,ebp
0x506a: call 0x16a0
0x506f: test r12,r12
0x5072: mov r13,rax
0x5075: mov eax,dword ptr [rax]
0x5077: sete bpl
0x507b: or ebp,dword ptr [rbx+0x4]
0x507e: lea r10,[rbx+0x8]
0x5082: sub rsp,0x8
0x5086: mov r8d,dword ptr [rbx]
0x5089: mov rcx,r15
0x508c: mov dword ptr [rsp+0x14],eax
0x5090: push qword ptr [rbx+0x30]
0x5093: mov rdx,r14
0x5096: push qword ptr [rbx+0x28]
0x5099: push r10
0x509b: xor esi,esi
0x509d: mov r9d,ebp
0x50a0: xor edi,edi
0x50a2: mov qword ptr [rsp+0x40],r10
0x50a7: call 0x3ac0
0x50ac: lea rsi,[rax+0x1]
0x50b0: mov qword ptr [rsp+0x48],rax
0x50b5: add rsp,0x20
0x50b9: mov rdi,rsi
0x50bc: mov qword ptr [rsp+0x18],rsi
0x50c1: call 0x5c80
0x50c6: mov qword ptr [rsp+0x10],rax
0x50cb: sub rsp,0x8
0x50cf: push qword ptr [rbx+0x30]
0x50d2: push qword ptr [rbx+0x28]
0x50d5: mov r10,qword ptr [rsp+0x38]
0x50da: mov r9d,ebp
0x50dd: mov r8d,dword ptr [rbx]
0x50e0: mov rcx,r15
0x50e3: mov rdx,r14
0x50e6: mov rdi,rax
0x50e9: push r10
0x50eb: mov rsi,qword ptr [rsp+0x38]
0x50f0: call 0x3ac0
0x50f5: mov eax,dword ptr [rsp+0x2c]
0x50f9: add rsp,0x20
0x50fd: test r12,r12
0x5100: mov dword ptr [r13],eax
0x5104: je 0x510f
0x5106: mov r11,qword ptr [rsp+0x28]
0x510b: mov qword ptr [r12],r11
0x510f: mov rax,qword ptr [rsp+0x10]
0x5114: add rsp,0x38
0x5118: pop rbx
0x5119: pop rbp
0x511a: pop r12
0x511c: pop r13
0x511e: pop r14
0x5120: pop r15
0x5122: ret 
0x5130: mov rcx,rdx
0x5133: xor edx,edx
0x5135: jmp 0x5040
0x5140: mov eax,dword ptr [rip+0x203f32]
0x5146: push r12
0x5148: mov r12,qword ptr [rip+0x203f31]
0x514f: push rbp
0x5150: push rbx
0x5151: cmp eax,0x1
0x5154: jle 0x5181
0x5156: sub eax,0x2
0x5159: lea rbx,[r12+0x18]
0x515e: shl rax,0x4
0x5162: lea rbp,[r12+rax+0x28]
0x5167: nop word ptr [rax+rax]
0x5170: mov rdi,qword ptr [rbx]
0x5173: add rbx,0x10
0x5177: call 0x1680
0x517c: cmp rbx,rbp
0x517f: jne 0x5170
0x5181: mov rdi,qword ptr [r12+0x8]
0x5186: lea rbx,[rip+0x203fd3]
0x518d: cmp rdi,rbx
0x5190: je 0x51a9
0x5192: call 0x1680
0x5197: mov qword ptr [rip+0x203eee],0x100
0x51a2: mov qword ptr [rip+0x203eef],rbx
0x51a9: lea rbx,[rip+0x203ee0]
0x51b0: cmp r12,rbx
0x51b3: je 0x51c4
0x51b5: mov rdi,r12
0x51b8: call 0x1680
0x51bd: mov qword ptr [rip+0x203ebc],rbx
0x51c4: pop rbx
0x51c5: mov dword ptr [rip+0x203ea9],0x1
0x51cf: pop rbp
0x51d0: pop r12
0x51d2: ret 
0x51e0: lea rcx,[rip+0x204079]
0x51e7: mov rdx,-0x1
0x51ee: jmp 0x4d00
0x5200: lea rcx,[rip+0x204059]
0x5207: jmp 0x4d00
0x5210: lea rcx,[rip+0x204049]
0x5217: mov rsi,rdi
0x521a: mov rdx,-0x1
0x5221: xor edi,edi
0x5223: jmp 0x4d00
0x5230: lea rcx,[rip+0x204029]
0x5237: mov rdx,rsi
0x523a: mov rsi,rdi
0x523d: xor edi,edi
0x523f: jmp 0x4d00
0x5250: sub rsp,0x48
0x5254: mov rax,rdx
0x5257: mov rdx,qword ptr fs:0x28
0x5260: mov qword ptr [rsp+0x38],rdx
0x5265: xor edx,edx
0x5267: cmp esi,0xa
0x526a: je 0x52d4
0x526c: mov dword ptr [rsp],esi
0x526f: mov rcx,rsp
0x5272: mov rdx,-0x1
0x5279: mov rsi,rax
0x527c: mov qword ptr [rsp+0x4],0x0
0x5285: mov qword ptr [rsp+0xc],0x0
0x528e: mov qword ptr [rsp+0x14],0x0
0x5297: mov qword ptr [rsp+0x1c],0x0
0x52a0: mov qword ptr [rsp+0x24],0x0
0x52a9: mov qword ptr [rsp+0x2c],0x0
0x52b2: mov dword ptr [rsp+0x34],0x0
0x52ba: call 0x4d00
0x52bf: mov rcx,qword ptr [rsp+0x38]
0x52c4: xor rcx,qword ptr fs:0x28
0x52cd: jne 0x52d9
0x52cf: add rsp,0x48
0x52d3: ret 
0x52d4: call 0x1690
0x52d9: call 0x1770
0x52de: nop 
0x52e0: sub rsp,0x48
0x52e4: mov rax,rdx
0x52e7: mov rdx,rcx
0x52ea: mov rcx,qword ptr fs:0x28
0x52f3: mov qword ptr [rsp+0x38],rcx
0x52f8: xor ecx,ecx
0x52fa: cmp esi,0xa
0x52fd: je 0x5360
0x52ff: mov dword ptr [rsp],esi
0x5302: mov rcx,rsp
0x5305: mov rsi,rax
0x5308: mov qword ptr [rsp+0x4],0x0
0x5311: mov qword ptr [rsp+0xc],0x0
0x531a: mov qword ptr [rsp+0x14],0x0
0x5323: mov qword ptr [rsp+0x1c],0x0
0x532c: mov qword ptr [rsp+0x24],0x0
0x5335: mov qword ptr [rsp+0x2c],0x0
0x533e: mov dword ptr [rsp+0x34],0x0
0x5346: call 0x4d00
0x534b: mov rdx,qword ptr [rsp+0x38]
0x5350: xor rdx,qword ptr fs:0x28
0x5359: jne 0x5365
0x535b: add rsp,0x48
0x535f: ret 
0x5360: call 0x1690
0x5365: call 0x1770
0x536a: nop word ptr [rax+rax]
0x5370: mov rdx,rsi
0x5373: mov esi,edi
0x5375: xor edi,edi
0x5377: jmp 0x5250
0x5380: mov rcx,rdx
0x5383: mov rdx,rsi
0x5386: mov esi,edi
0x5388: xor edi,edi
0x538a: jmp 0x52e0
0x5390: sub rsp,0x48
0x5394: mov ecx,edx
0x5396: mov rax,qword ptr fs:0x28
0x539f: mov qword ptr [rsp+0x38],rax
0x53a4: xor eax,eax
0x53a6: mov rax,qword ptr [rip+0x203ee3]
0x53ad: mov r8,rsp
0x53b0: and ecx,0x1f
0x53b3: movdqa xmm0,[rip+0x203ea5]
0x53bb: mov qword ptr [rsp+0x30],rax
0x53c0: mov eax,edx
0x53c2: movaps [rsp],xmm0
0x53c6: shr al,0x5
0x53c9: movzx eax,al
0x53cc: lea r9,[r8+rax*4+0x8]
0x53d1: movdqa xmm0,[rip+0x203e97]
0x53d9: movaps [rsp+0x10],xmm0
0x53de: movdqa xmm0,[rip+0x203e9a]
0x53e6: movaps [rsp+0x20],xmm0
0x53eb: mov edx,dword ptr [r9]
0x53ee: mov eax,edx
0x53f0: shr eax,cl
0x53f2: not eax
0x53f4: and eax,0x1
0x53f7: shl eax,cl
0x53f9: mov rcx,r8
0x53fc: xor eax,edx
0x53fe: mov rdx,rsi
0x5401: mov rsi,rdi
0x5404: mov dword ptr [r9],eax
0x5407: xor edi,edi
0x5409: call 0x4d00
0x540e: mov rsi,qword ptr [rsp+0x38]
0x5413: xor rsi,qword ptr fs:0x28
0x541c: jne 0x5423
0x541e: add rsp,0x48
0x5422: ret 
0x5423: call 0x1770
0x5428: nop dword ptr [rax+rax]
0x5430: movsx edx,sil
0x5434: mov rsi,-0x1
0x543b: jmp 0x5390
0x5440: mov edx,0x3a
0x5445: mov rsi,-0x1
0x544c: jmp 0x5390
0x5460: mov edx,0x3a
0x5465: jmp 0x5390
0x54df: mov rcx,qword ptr [rsp+0x38]
0x54e4: xor rcx,qword ptr fs:0x28
0x54ed: jne 0x54f9
0x54ef: add rsp,0x48
0x54f3: ret 
0x54f4: call 0x1690
0x54f9: call 0x1770
0x54fe: nop 
0x5500: sub rsp,0x48
0x5504: mov r9,rcx
0x5507: mov rcx,qword ptr [rip+0x203d82]
0x550e: movdqa xmm0,[rip+0x203d4a]
0x5516: mov rax,qword ptr fs:0x28
0x551f: mov qword ptr [rsp+0x38],rax
0x5524: xor eax,eax
0x5526: movaps [rsp],xmm0
0x552a: test rsi,rsi
0x552d: mov qword ptr [rsp+0x30],rcx
0x5532: mov dword ptr [rsp],0xa
0x5539: movdqa xmm0,[rip+0x203d2f]
0x5541: movaps [rsp+0x10],xmm0
0x5546: movdqa xmm0,[rip+0x203d32]
0x554e: movaps [rsp+0x20],xmm0
0x5553: je 0x5587
0x5555: test rdx,rdx
0x5558: je 0x5587
0x555a: mov qword ptr [rsp+0x28],rsi
0x555f: mov qword ptr [rsp+0x30],rdx
0x5564: mov rcx,rsp
0x5567: mov rdx,r8
0x556a: mov rsi,r9
0x556d: call 0x4d00
0x5572: mov rdi,qword ptr [rsp+0x38]
0x5577: xor rdi,qword ptr fs:0x28
0x5580: jne 0x558c
0x5582: add rsp,0x48
0x5586: ret 
0x5587: call 0x1690
0x558c: call 0x1770
0x5591: nop dword ptr [rax+rax]
0x5596: nop word ptr cs:[rax+rax]
0x55a0: mov r8,-0x1
0x55a7: jmp 0x5500
0x55b0: mov rcx,rdx
0x55b3: mov r8,-0x1
0x55ba: mov rdx,rsi
0x55bd: mov rsi,rdi
0x55c0: xor edi,edi
0x55c2: jmp 0x5500
0x55d0: mov r8,rcx
0x55d3: mov rcx,rdx
0x55d6: mov rdx,rsi
0x55d9: mov rsi,rdi
0x55dc: xor edi,edi
0x55de: jmp 0x5500
0x55f0: lea rcx,[rip+0x203a49]
0x55f7: jmp 0x4d00
0x5600: lea rcx,[rip+0x203a39]
0x5607: mov rdx,rsi
0x560a: mov rsi,rdi
0x560d: xor edi,edi
0x560f: jmp 0x4d00
0x5620: lea rcx,[rip+0x203a19]
0x5627: mov rdx,-0x1
0x562e: jmp 0x4d00
0x5798: mov r8,rcx
0x579b: mov rcx,rdx
0x579e: lea rdx,[rip+0x1daf]
0x57a5: mov esi,0x1
0x57aa: xor eax,eax
0x57ac: call 0x19a0
0x57b1: jmp 0x569c
0x59ad: push r12
0x59af: push r15
0x59b1: push r14
0x59b3: mov r8,qword ptr [rsp+0x20]
0x59b8: mov rcx,rbx
0x59bb: mov rdx,rax
0x59be: mov rdi,rbp
0x59c1: mov esi,0x1
0x59c6: xor eax,eax
0x59c8: call 0x19a0
0x59cd: add rsp,0x20
0x59d1: add rsp,0x28
0x59d5: pop rbx
0x59d6: pop rbp
0x59d7: pop r12
0x59d9: pop r13
0x59db: pop r14
0x59dd: pop r15
0x59df: ret 
0x5a19: push r12
0x5a1b: push r15
0x5a1d: push r14
0x5a1f: mov r9,qword ptr [rsp+0x28]
0x5a24: jmp 0x59b3
0x5a80: xor r9d,r9d
0x5a83: cmp qword ptr [r8],0x0
0x5a87: je 0x5a9b
0x5a89: nop dword ptr [rax]
0x5a90: add r9,0x1
0x5a94: cmp qword ptr [r8+r9*8],0x0
0x5a99: jne 0x5a90
0x5a9b: jmp 0x5660
0x5aa0: sub rsp,0x68
0x5aa4: mov r10,r8
0x5aa7: xor r9d,r9d
0x5aaa: mov rax,qword ptr fs:0x28
0x5ab3: mov qword ptr [rsp+0x58],rax
0x5ab8: xor eax,eax
0x5aba: mov r8,rsp
0x5abd: nop dword ptr [rax]
0x5ac0: mov eax,dword ptr [r10]
0x5ac3: cmp eax,0x2f
0x5ac6: ja 0x5b0a
0x5ac8: mov r11d,eax
0x5acb: add r11,qword ptr [r10+0x10]
0x5acf: add eax,0x8
0x5ad2: mov dword ptr [r10],eax
0x5ad5: mov rax,qword ptr [r11]
0x5ad8: test rax,rax
0x5adb: mov qword ptr [r8+r9*8],rax
0x5adf: je 0x5aeb
0x5ae1: add r9,0x1
0x5ae5: cmp r9,0xa
0x5ae9: jne 0x5ac0
0x5aeb: call 0x5660
0x5af0: mov rax,qword ptr [rsp+0x58]
0x5af5: xor rax,qword ptr fs:0x28
0x5afe: jne 0x5b05
0x5b00: add rsp,0x68
0x5b04: ret 
0x5b05: call 0x1770
0x5b0a: mov r11,qword ptr [r10+0x8]
0x5b0e: lea rax,[r11+0x8]
0x5b12: mov qword ptr [r10+0x8],rax
0x5b16: jmp 0x5ad5
0x5be0: call 0x1770
0x5bec: mov rax,rbx
0x5bef: add rbx,0x8
0x5bf3: jmp 0x5ba6
0x5c00: push rbx
0x5c01: lea rsi,[rip+0x199a]
0x5c08: mov edx,0x5
0x5c0d: xor edi,edi
0x5c0f: call 0x1740
0x5c14: lea rdx,[rip+0x199c]
0x5c1b: mov rsi,rax
0x5c1e: mov edi,0x1
0x5c23: xor eax,eax
0x5c25: call 0x1910
0x5c2a: lea rsi,[rip+0x199c]
0x5c31: mov edx,0x5
0x5c36: xor edi,edi
0x5c38: call 0x1740
0x5c3d: lea rcx,[rip+0x104c]
0x5c44: lea rdx,[rip+0x8dc]
0x5c4b: mov rsi,rax
0x5c4e: mov edi,0x1
0x5c53: xor eax,eax
0x5c55: call 0x1910
0x5c5a: mov rbx,qword ptr [rip+0x203447]
0x5c61: lea rsi,[rip+0x1b98]
0x5c68: xor edi,edi
0x5c6a: mov edx,0x5
0x5c6f: call 0x1740
0x5c74: mov rsi,rbx
0x5c77: mov rdi,rax
0x5c7a: pop rbx
0x5c7b: jmp 0x1850
0x5c9a: nop word ptr [rax+rax]
0x5ca0: mov rax,rdi
0x5ca3: mul rsi
0x5ca6: mov rdi,rax
0x5ca9: seto al
0x5cac: test rdi,rdi
0x5caf: js 0x5cbb
0x5cb1: movzx eax,al
0x5cb4: test rax,rax
0x5cb7: jne 0x5cbb
0x5cb9: jmp 0x5c80
0x5cbb: sub rsp,0x8
0x5cbf: call 0x5ed0
0x5cc4: nop 
0x5cc6: nop word ptr cs:[rax+rax]
0x5cd0: jmp 0x5c80
0x5d16: nop word ptr cs:[rax+rax]
0x5d20: mov rax,rsi
0x5d23: mul rdx
0x5d26: mov rsi,rax
0x5d29: seto al
0x5d2c: test rsi,rsi
0x5d2f: js 0x5d3b
0x5d31: movzx eax,al
0x5d34: test rax,rax
0x5d37: jne 0x5d3b
0x5d39: jmp 0x5ce0
0x5d3b: sub rsp,0x8
0x5d3f: call 0x5ed0
0x5d44: nop 
0x5d46: nop word ptr cs:[rax+rax]
0x5d50: test rdi,rdi
0x5d53: mov r9,rdx
0x5d56: mov rcx,qword ptr [rsi]
0x5d59: je 0x5d90
0x5d5b: xor edx,edx
0x5d5d: movabsq rax,0x5555555555555554
0x5d67: div r9
0x5d6a: cmp rax,rcx
0x5d6d: jbe 0x5dab
0x5d6f: mov rax,rcx
0x5d72: shr rax, 1
0x5d75: lea rcx,[rax+rcx+0x1]
0x5d7a: mov qword ptr [rsi],rcx
0x5d7d: imul rcx,r9
0x5d81: mov rsi,rcx
0x5d84: jmp 0x5ce0
0x5d90: test rcx,rcx
0x5d93: je 0x5db8
0x5d95: mov rax,rcx
0x5d98: mul r9
0x5d9b: seto dl
0x5d9e: test rax,rax
0x5da1: movzx edx,dl
0x5da4: js 0x5dab
0x5da6: test rdx,rdx
0x5da9: je 0x5d7a
0x5dab: sub rsp,0x8
0x5daf: call 0x5ed0
0x5db4: nop dword ptr [rax]
0x5db8: xor edx,edx
0x5dba: mov eax,0x80
0x5dbf: xor r8d,r8d
0x5dc2: div r9
0x5dc5: test rax,rax
0x5dc8: sete r8b
0x5dcc: lea rcx,[r8+rax]
0x5dd0: jmp 0x5d95
0x5de0: test rdi,rdi
0x5de3: mov rax,qword ptr [rsi]
0x5de6: je 0x5e10
0x5de8: movabsq rdx,0x5555555555555553
0x5df2: cmp rax,rdx
0x5df5: ja 0x5e21
0x5df7: mov rdx,rax
0x5dfa: shr rdx, 1
0x5dfd: lea rax,[rdx+rax+0x1]
0x5e02: mov qword ptr [rsi],rax
0x5e05: mov rsi,rax
0x5e08: jmp 0x5ce0
0x5e10: test rax,rax
0x5e13: mov edx,0x80
0x5e18: cmove rax,rdx
0x5e1c: test rax,rax
0x5e1f: jns 0x5e02
0x5e21: sub rsp,0x8
0x5e25: call 0x5ed0
0x5e2a: nop word ptr [rax+rax]
0x5e30: push rbx
0x5e31: mov rbx,rdi
0x5e34: call 0x5c80
0x5e39: mov rdx,rbx
0x5e3c: xor esi,esi
0x5e3e: mov rdi,rax
0x5e41: pop rbx
0x5e42: jmp 0x17e0
0x5e50: mov rax,rdi
0x5e53: sub rsp,0x8
0x5e57: mul rsi
0x5e5a: seto dl
0x5e5d: test rax,rax
0x5e60: js 0x5e79
0x5e62: movzx edx,dl
0x5e65: test rdx,rdx
0x5e68: jne 0x5e79
0x5e6a: call 0x1860
0x5e6f: test rax,rax
0x5e72: je 0x5e79
0x5e74: add rsp,0x8
0x5e78: ret 
0x5e79: call 0x5ed0
0x5e7e: nop 
0x5f00: call 0x1690
0x5f05: nop word ptr cs:[rax+rax]
0x5f0f: nop 
0x5f28: nop dword ptr [rax+rax]
0x6080: push r13
0x6082: push r12
0x6084: mov r13,rsi
0x6087: push rbp
0x6088: push rbx
0x6089: mov rbx,rdi
0x608c: mov r12,rdx
0x608f: sub rsp,0x18
0x6093: mov rax,qword ptr fs:0x28
0x609c: mov qword ptr [rsp+0x8],rax
0x60a1: xor eax,eax
0x60a3: lea rax,[rsp+0x4]
0x60a8: test rdi,rdi
0x60ab: cmove rbx,rax
0x60af: mov rdi,rbx
0x60b2: call 0x1790
0x60b7: cmp rax,-0x3
0x60bb: mov rbp,rax
0x60be: jbe 0x60e0
0x60c0: test r12,r12
0x60c3: je 0x60e0
0x60c5: xor edi,edi
0x60c7: call 0x6300
0x60cc: test al,al
0x60ce: jne 0x60e0
0x60d0: movzx eax,byte ptr [r13]
0x60d5: mov ebp,0x1
0x60da: mov dword ptr [rbx],eax
0x60dc: nop dword ptr [rax]
0x60e0: mov rdx,qword ptr [rsp+0x8]
0x60e5: xor rdx,qword ptr fs:0x28
0x60ee: mov rax,rbp
0x60f1: jne 0x60fe
0x60f3: add rsp,0x18
0x60f7: pop rbx
0x60f8: pop rbp
0x60f9: pop r12
0x60fb: pop r13
0x60fd: ret 
0x60fe: call 0x1770
0x6103: nop word ptr cs:[rax+rax]
0x610d: nop dword ptr [rax]
0x6110: push r12
0x6112: push rbp
0x6113: mov rbp,rdi
0x6116: push rbx
0x6117: call 0x16d0
0x611c: mov ebx,dword ptr [rbp]
0x611f: mov rdi,rbp
0x6122: mov r12,rax
0x6125: call 0x5f30
0x612a: and ebx,0x20
0x612d: test ebx,ebx
0x612f: jne 0x6148
0x6131: test eax,eax
0x6133: je 0x613f
0x6135: test r12,r12
0x6138: mov eax,0xffffffff
0x613d: je 0x6178
0x613f: pop rbx
0x6140: pop rbp
0x6141: pop r12
0x6143: ret 
0x6148: test eax,eax
0x614a: jne 0x6168
0x614c: call 0x16a0
0x6151: mov dword ptr [rax],0x0
0x6157: mov eax,0xffffffff
0x615c: pop rbx
0x615d: pop rbp
0x615e: pop r12
0x6160: ret 
0x6168: pop rbx
0x6169: mov eax,0xffffffff
0x616e: pop rbp
0x616f: pop r12
0x6171: ret 
0x6178: call 0x16a0
0x617d: cmp dword ptr [rax],0x9
0x6180: pop rbx
0x6181: pop rbp
0x6182: pop r12
0x6184: setne al
0x6187: movzx eax,al
0x618a: neg eax
0x618c: ret 
0x62f8: call 0x1770
0x62fd: nop dword ptr [rax]
0x6300: sub rsp,0x8
0x6304: xor esi,esi
0x6306: call 0x1900
0x630b: mov rdx,rax
0x630e: mov eax,0x1
0x6313: test rdx,rdx
0x6316: je 0x6335
0x6318: lea rdi,[rip+0x15a1]
0x631f: mov ecx,0x2
0x6324: mov rsi,rdx
0x6327: rep cmpsb [rsi],es:[rdi]
0x6329: seta cl
0x632c: sbb cl,0x0
0x632f: xor eax,eax
0x6331: test cl,cl
0x6333: jne 0x6340
0x6335: add rsp,0x8
0x6339: ret 
0x6340: lea rdi,[rip+0x157b]
0x6347: mov ecx,0x6
0x634c: mov rsi,rdx
0x634f: rep cmpsb [rsi],es:[rdi]
0x6351: seta al
0x6354: sbb al,0x0
0x6356: test al,al
0x6358: setne al
0x635b: add rsp,0x8
0x635f: ret 
0x6360: sub rsp,0x8
0x6364: mov edi,0xe
0x6369: call 0x18b0
0x636e: test rax,rax
0x6371: je 0x6390
0x6373: cmp byte ptr [rax],0x0
0x6376: lea rdx,[rip+0x154b]
0x637d: cmove rax,rdx
0x6381: add rsp,0x8
0x6385: ret 
0x6390: lea rax,[rip+0x1531]
0x6397: add rsp,0x8
0x639b: ret 
0x63d0: push r15
0x63d2: push r14
0x63d4: mov r15,rdx
0x63d7: push r13
0x63d9: push r12
0x63db: lea r12,[rip+0x20266e]
0x63e2: push rbp
0x63e3: lea rbp,[rip+0x20266e]
0x63ea: push rbx
0x63eb: mov r13d,edi
0x63ee: mov r14,rsi
0x63f1: sub rbp,r12
0x63f4: sub rsp,0x8
0x63f8: sar rbp,0x3
0x63fc: call 0x1648
0x6401: test rbp,rbp
0x6404: je 0x6426
0x6406: xor ebx,ebx
0x6408: nop dword ptr [rax+rax]
0x6410: mov rdx,r15
0x6413: mov rsi,r14
0x6416: mov edi,r13d
0x6419: call qword ptr [r12+rbx*8]
0x641d: add rbx,0x1
0x6421: cmp rbp,rbx
0x6424: jne 0x6410
0x6426: add rsp,0x8
0x642a: pop rbx
0x642b: pop rbp
0x642c: pop r12
0x642e: pop r13
0x6430: pop r14
0x6432: pop r15
0x6434: ret 
0x6440: rep ret 
