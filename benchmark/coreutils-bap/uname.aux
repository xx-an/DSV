0x1328: sub rsp,0x8
0x132c: mov rax,qword ptr [rip+0x205cad]
0x1333: test rax,rax
0x1336: je 0x133a
0x1338: call rax
0x133a: add rsp,0x8
0x133e: ret 
0x1346: jmp qword ptr [rip+0x205b2c]
0x1350: jmp qword ptr [rip+0x205b2a]
0x1390: jmp qword ptr [rip+0x205b0a]
0x13a0: jmp qword ptr [rip+0x205b02]
0x13c0: jmp qword ptr [rip+0x205af2]
0x1400: jmp qword ptr [rip+0x205ad2]
0x1430: jmp qword ptr [rip+0x205aba]
0x1470: jmp qword ptr [rip+0x205a9a]
0x1490: jmp qword ptr [rip+0x205a8a]
0x14b0: jmp qword ptr [rip+0x205a7a]
0x14d0: jmp qword ptr [rip+0x205a6a]
0x14e0: jmp qword ptr [rip+0x205a62]
0x14f0: jmp qword ptr [rip+0x205a5a]
0x1500: jmp qword ptr [rip+0x205a52]
0x1510: jmp qword ptr [rip+0x205a4a]
0x1520: jmp qword ptr [rip+0x205a42]
0x1570: jmp qword ptr [rip+0x205a1a]
0x15c0: jmp qword ptr [rip+0x2059f2]
0x15d0: jmp qword ptr [rip+0x2059ea]
0x15e0: jmp qword ptr [rip+0x2059e2]
0x15f0: jmp qword ptr [rip+0x2059fa]
0x19b4: jmp 0x18d5
0x19d1: lea rsi,[rip+0x306b]
0x19d8: mov rbx,rax
0x19db: mov edx,0x5
0x19e0: xor edi,edi
0x19e2: call 0x13e0
0x19e7: mov rcx,rbx
0x19ea: mov rdx,rax
0x19ed: xor esi,esi
0x19ef: xor edi,edi
0x19f1: xor eax,eax
0x19f3: call 0x1560
0x1a07: nop word ptr [rax+rax]
0x1a3a: hlt 
0x1a3b: nop dword ptr [rax+rax]
0x1a40: lea rdi,[rip+0x205659]
0x1a47: push rbp
0x1a48: lea rax,[rip+0x205651]
0x1a4f: cmp rax,rdi
0x1a52: mov rbp,rsp
0x1a55: je 0x1a70
0x1a57: mov rax,qword ptr [rip+0x205572]
0x1a5e: test rax,rax
0x1a61: je 0x1a70
0x1a63: pop rbp
0x1a64: jmp rax
0x1a70: pop rbp
0x1a71: ret 
0x1a80: lea rdi,[rip+0x205619]
0x1a87: lea rsi,[rip+0x205612]
0x1a8e: push rbp
0x1a8f: sub rsi,rdi
0x1a92: mov rbp,rsp
0x1a95: sar rsi,0x3
0x1a99: mov rax,rsi
0x1a9c: shr rax,0x3f
0x1aa0: add rsi,rax
0x1aa3: sar rsi, 1
0x1aa6: je 0x1ac0
0x1aa8: mov rax,qword ptr [rip+0x205539]
0x1aaf: test rax,rax
0x1ab2: je 0x1ac0
0x1ab4: pop rbp
0x1ab5: jmp rax
0x1ac0: pop rbp
0x1ac1: ret 
0x1ae1: push rbp
0x1ae2: mov rbp,rsp
0x1ae5: je 0x1af3
0x1ae7: mov rdi,qword ptr [rip+0x20551a]
0x1aee: call 0x15f0
0x1af3: call 0x1a40
0x1af8: mov byte ptr [rip+0x2055c9],0x1
0x1aff: pop rbp
0x1b00: ret 
0x1b10: push rbp
0x1b11: mov rbp,rsp
0x1b14: pop rbp
0x1b15: jmp 0x1a80
0x1b6a: jmp 0x1b49
0x1ef0: mov qword ptr [rip+0x2051e1],rdi
0x1ef7: ret 
0x1f00: mov byte ptr [rip+0x2051c9],dil
0x1f07: ret 
0x1f10: push rbp
0x1f11: push rbx
0x1f12: sub rsp,0x8
0x1f16: mov rdi,qword ptr [rip+0x20518b]
0x1f1d: call 0x4630
0x1f22: test eax,eax
0x1f24: je 0x1f3c
0x1f26: call 0x1370
0x1f2b: cmp byte ptr [rip+0x20519e],0x0
0x1f32: mov rbx,rax
0x1f35: je 0x1f53
0x1f37: cmp dword ptr [rax],0x20
0x1f3a: jne 0x1f53
0x1f3c: mov rdi,qword ptr [rip+0x20517d]
0x1f43: call 0x4630
0x1f48: test eax,eax
0x1f4a: jne 0x1f92
0x1f4c: add rsp,0x8
0x1f50: pop rbx
0x1f51: pop rbp
0x1f52: ret 
0x1f53: lea rsi,[rip+0x2f7b]
0x1f5a: xor edi,edi
0x1f5c: mov edx,0x5
0x1f61: call 0x13e0
0x1f66: mov rdi,qword ptr [rip+0x20516b]
0x1f6d: mov rbp,rax
0x1f70: test rdi,rdi
0x1f73: je 0x1f9d
0x1f75: call 0x3ad0
0x1f7a: mov esi,dword ptr [rbx]
0x1f7c: lea rdx,[rip+0x2f5e]
0x1f83: mov rcx,rax
0x1f86: mov r8,rbp
0x1f89: xor edi,edi
0x1f8b: xor eax,eax
0x1f8d: call 0x1560
0x1f92: mov edi,dword ptr [rip+0x205088]
0x1f98: call 0x1390
0x1f9d: mov esi,dword ptr [rbx]
0x1f9f: lea rdx,[rip+0x2f3f]
0x1fa6: mov rcx,rax
0x1fa9: xor edi,edi
0x1fab: xor eax,eax
0x1fad: call 0x1560
0x1fb2: jmp 0x1f92
0x205f: nop 
0x2060: push rbp
0x2061: push rbx
0x2062: mov rbp,rdi
0x2065: mov ebx,esi
0x2067: sub rsp,0x8
0x206b: call 0x4710
0x2070: movzx edx,byte ptr [rax]
0x2073: and edx,-0x21
0x2076: cmp dl,0x55
0x2079: je 0x20f0
0x207b: cmp dl,0x47
0x207e: je 0x20a0
0x2080: lea rax,[rip+0x2eb4]
0x2087: lea rdx,[rip+0x2eaf]
0x208e: cmp ebx,0x9
0x2091: cmovne rax,rdx
0x2095: add rsp,0x8
0x2099: pop rbx
0x209a: pop rbp
0x209b: ret 
0x20a0: movzx edx,byte ptr [rax+0x1]
0x20a4: and edx,-0x21
0x20a7: cmp dl,0x42
0x20aa: jne 0x2080
0x20ac: cmp byte ptr [rax+0x2],0x31
0x20b0: jne 0x2080
0x20b2: cmp byte ptr [rax+0x3],0x38
0x20b6: jne 0x2080
0x20b8: cmp byte ptr [rax+0x4],0x30
0x20bc: jne 0x2080
0x20be: cmp byte ptr [rax+0x5],0x33
0x20c2: jne 0x2080
0x20c4: cmp byte ptr [rax+0x6],0x30
0x20c8: jne 0x2080
0x20ca: cmp byte ptr [rax+0x7],0x0
0x20ce: jne 0x2080
0x20d0: cmp byte ptr [rbp],0x60
0x20d4: lea rax,[rip+0x2e59]
0x20db: lea rdx,[rip+0x2e56]
0x20e2: cmovne rax,rdx
0x20e6: add rsp,0x8
0x20ea: pop rbx
0x20eb: pop rbp
0x20ec: ret 
0x20f0: movzx edx,byte ptr [rax+0x1]
0x20f4: and edx,-0x21
0x20f7: cmp dl,0x54
0x20fa: jne 0x2080
0x20fc: movzx edx,byte ptr [rax+0x2]
0x2100: and edx,-0x21
0x2103: cmp dl,0x46
0x2106: jne 0x2080
0x210c: cmp byte ptr [rax+0x3],0x2d
0x2110: jne 0x2080
0x2116: cmp byte ptr [rax+0x4],0x38
0x211a: jne 0x2080
0x2120: cmp byte ptr [rax+0x5],0x0
0x2124: jne 0x2080
0x212a: cmp byte ptr [rbp],0x60
0x212e: lea rax,[rip+0x2df7]
0x2135: lea rdx,[rip+0x2df4]
0x213c: cmovne rax,rdx
0x2140: add rsp,0x8
0x2144: pop rbx
0x2145: pop rbp
0x2146: ret 
0x2223: xor r11d,r11d
0x2226: mov rax,rbp
0x2229: mov r8d,r12d
0x222c: mov rbp,r11
0x222f: mov r11,rax
0x2232: nop word ptr [rax+rax]
0x2238: cmp r11,rbp
0x223b: setne r12b
0x223f: cmp r11,-0x1
0x2243: jne 0x2252
0x2245: mov rax,qword ptr [rsp+0x10]
0x224a: cmp byte ptr [rax+rbp],0x0
0x224e: setne r12b
0x2252: test r12b,r12b
0x2255: je 0x28b0
0x225b: cmp dword ptr [rsp+0x8],0x2
0x2260: mov rdi,qword ptr [rsp+0x10]
0x2265: lea r9,[rdi+rbp]
0x2269: setne al
0x226c: and al,byte ptr [rsp+0xd]
0x2270: mov r10d,eax
0x2273: je 0x2320
0x2279: mov rax,qword ptr [rsp+0x18]
0x227e: test rax,rax
0x2281: je 0x26b0
0x2287: cmp r11,-0x1
0x228b: lea rbx,[rbp+rax]
0x2290: jne 0x22c0
0x2292: cmp rax,0x1
0x2296: jbe 0x22c0
0x2298: mov byte ptr [rsp+0x38],r8b
0x229d: mov byte ptr [rsp+0x30],r10b
0x22a2: mov qword ptr [rsp+0x28],r9
0x22a7: call 0x1400
0x22ac: movzx r8d,byte ptr [rsp+0x38]
0x22b2: movzx r10d,byte ptr [rsp+0x30]
0x22b8: mov r11,rax
0x22bb: mov r9,qword ptr [rsp+0x28]
0x22c0: cmp rbx,r11
0x22c3: mov byte ptr [rsp+0x28],r10b
0x22c8: ja 0x2880
0x22ce: mov rdx,qword ptr [rsp+0x18]
0x22d3: mov rsi,qword ptr [rsp+0x48]
0x22d8: mov rdi,r9
0x22db: mov qword ptr [rsp+0x40],r11
0x22e0: mov byte ptr [rsp+0x38],r8b
0x22e5: mov qword ptr [rsp+0x30],r9
0x22ea: call 0x1490
0x22ef: test eax,eax
0x22f1: mov r9,qword ptr [rsp+0x30]
0x22f6: movzx r8d,byte ptr [rsp+0x38]
0x22fc: mov r11,qword ptr [rsp+0x40]
0x2301: jne 0x2880
0x2307: cmp byte ptr [rsp+0xf],0x0
0x230c: movzx r10d,byte ptr [rsp+0x28]
0x2312: jne 0x3295
0x2318: nop dword ptr [rax+rax]
0x2320: movzx ebx,byte ptr [r9]
0x2324: cmp bl,0x7e
0x2327: ja 0x2648
0x232d: lea rcx,[rip+0x2c98]
0x2334: movzx edx,bl
0x2337: movsxd rax,dword ptr [rcx+rdx*4]
0x233b: add rax,rcx
0x233e: jmp rax
0x2378: cmp byte ptr [rsp+0xd],0x1
0x237d: jne 0x2492
0x2383: test dl,dl
0x2385: jne 0x2492
0x238b: mov rsi,qword ptr [rsp+0x20]
0x2390: test rsi,rsi
0x2393: je 0x23a9
0x2395: mov edx,ebx
0x2397: shr dl,0x5
0x239a: movzx edx,dl
0x239d: mov edx,dword ptr [rsi+rdx*4]
0x23a0: btl edx,ebx
0x23a3: jb 0x24f3
0x23a9: test r10b,r10b
0x23ac: jne 0x24f3
0x23b2: xor eax,0x1
0x23b5: add rbp,0x1
0x23b9: and eax,r8d
0x23bc: test al,al
0x23be: je 0x23e0
0x23c0: cmp r13,r15
0x23c3: jbe 0x23ca
0x23c5: mov byte ptr [r14+r15],0x27
0x23ca: lea rax,[r15+0x1]
0x23ce: cmp r13,rax
0x23d1: jbe 0x23d9
0x23d3: mov byte ptr [r14+r15+0x1],0x27
0x23d9: add r15,0x2
0x23dd: xor r8d,r8d
0x23e0: cmp r15,r13
0x23e3: jae 0x23e9
0x23e5: mov byte ptr [r14+r15],bl
0x23e9: movzx edi,byte ptr [rsp+0xe]
0x23ee: add r15,0x1
0x23f2: mov eax,0x0
0x23f7: test r12b,r12b
0x23fa: cmove edi,eax
0x23fd: mov byte ptr [rsp+0xe],dil
0x2402: jmp 0x2238
0x2492: cmp byte ptr [rsp+0xf],0x0
0x2497: jne 0x238b
0x249d: jmp 0x23a9
0x24f3: cmp dword ptr [rsp+0x8],0x2
0x24f8: sete dl
0x24fb: cmp byte ptr [rsp+0xf],0x0
0x2500: mov eax,edx
0x2502: jne 0x2d58
0x2508: mov eax,r8d
0x250b: xor eax,0x1
0x250e: and al,dl
0x2510: je 0x2541
0x2512: cmp r13,r15
0x2515: jbe 0x251c
0x2517: mov byte ptr [r14+r15],0x27
0x251c: lea rdx,[r15+0x1]
0x2520: cmp r13,rdx
0x2523: jbe 0x252b
0x2525: mov byte ptr [r14+r15+0x1],0x24
0x252b: lea rdx,[r15+0x2]
0x252f: cmp r13,rdx
0x2532: jbe 0x253a
0x2534: mov byte ptr [r14+r15+0x2],0x27
0x253a: add r15,0x3
0x253e: mov r8d,eax
0x2541: cmp r13,r15
0x2544: jbe 0x254b
0x2546: mov byte ptr [r14+r15],0x5c
0x254b: add r15,0x1
0x254f: add rbp,0x1
0x2553: jmp 0x23e0
0x2640: xor r10d,r10d
0x2643: nop dword ptr [rax+rax]
0x2648: cmp qword ptr [rsp+0x58],0x1
0x264e: jne 0x29f8
0x2654: mov qword ptr [rsp+0x38],r11
0x2659: mov byte ptr [rsp+0x30],r8b
0x265e: mov byte ptr [rsp+0x28],r10b
0x2663: call 0x15e0
0x2668: mov rcx,qword ptr [rax]
0x266b: movzx edx,bl
0x266e: movzx r10d,byte ptr [rsp+0x28]
0x2674: movzx r8d,byte ptr [rsp+0x30]
0x267a: mov r11,qword ptr [rsp+0x38]
0x267f: mov edi,0x1
0x2684: movzx eax,word ptr [rcx+rdx*2]
0x2688: and ax,0x4000
0x268c: setne r12b
0x2690: sete al
0x2693: and al,byte ptr [rsp+0xd]
0x2697: test al,al
0x2699: jne 0x3031
0x269f: cmp dword ptr [rsp+0x8],0x2
0x26a4: sete dl
0x26a7: jmp 0x2378
0x26b0: movzx ebx,byte ptr [r9]
0x26b4: cmp bl,0x7e
0x26b7: ja 0x2640
0x26b9: lea rcx,[rip+0x2b08]
0x26c0: movzx edx,bl
0x26c3: movsxd rax,dword ptr [rcx+rdx*4]
0x26c7: add rax,rcx
0x26ca: jmp rax
0x2880: xor r10d,r10d
0x2883: jmp 0x2320
0x28b0: cmp dword ptr [rsp+0x8],0x2
0x28b5: movzx ebx,byte ptr [rsp+0xf]
0x28ba: mov r12d,r8d
0x28bd: mov rbp,r11
0x28c0: sete dl
0x28c3: mov eax,ebx
0x28c5: test r15,r15
0x28c8: sete cl
0x28cb: and eax,edx
0x28cd: and al,cl
0x28cf: jne 0x3336
0x28d5: mov eax,ebx
0x28d7: xor eax,0x1
0x28da: and dl,al
0x28dc: je 0x324c
0x28e2: cmp byte ptr [rsp+0x7c],0x0
0x28e7: je 0x324a
0x28ed: cmp byte ptr [rsp+0xe],0x0
0x28f2: jne 0x32ed
0x28f8: test r13,r13
0x28fb: sete al
0x28fe: cmp qword ptr [rsp+0x50],0x0
0x2904: setne dl
0x2907: and al,dl
0x2909: je 0x332c
0x290f: mov r13,qword ptr [rsp+0x50]
0x2914: lea rbx,[rip+0x2622]
0x291b: mov byte ptr [r14],0x27
0x291f: mov dword ptr [rsp+0x8],0x2
0x2927: mov r15d,0x1
0x292d: mov qword ptr [rsp+0x18],0x1
0x2936: mov byte ptr [rsp+0xf],0x0
0x293b: mov qword ptr [rsp+0x48],rbx
0x2940: mov byte ptr [rsp+0x7c],al
0x2944: jmp 0x2223
0x29f8: lea rax,[rsp+0xa0]
0x2a00: cmp r11,-0x1
0x2a04: mov qword ptr [rsp+0xa0],0x0
0x2a10: mov qword ptr [rsp+0x28],rax
0x2a15: jne 0x2a44
0x2a17: mov rdi,qword ptr [rsp+0x10]
0x2a1c: mov byte ptr [rsp+0x40],r8b
0x2a21: mov byte ptr [rsp+0x38],r10b
0x2a26: mov qword ptr [rsp+0x30],r9
0x2a2b: call 0x1400
0x2a30: movzx r8d,byte ptr [rsp+0x40]
0x2a36: movzx r10d,byte ptr [rsp+0x38]
0x2a3c: mov r11,rax
0x2a3f: mov r9,qword ptr [rsp+0x30]
0x2a44: lea rax,[rsp+0x9c]
0x2a4c: xor ecx,ecx
0x2a4e: mov byte ptr [rsp+0x7e],bl
0x2a52: mov byte ptr [rsp+0x7d],r8b
0x2a57: mov rbx,rcx
0x2a5a: mov qword ptr [rsp+0x88],r9
0x2a62: mov qword ptr [rsp+0x38],rax
0x2a67: mov byte ptr [rsp+0x7f],r10b
0x2a6c: mov qword ptr [rsp+0x80],r15
0x2a74: mov qword ptr [rsp+0x40],r14
0x2a79: mov qword ptr [rsp+0x70],r13
0x2a7e: mov qword ptr [rsp+0x30],r11
0x2a83: mov rax,qword ptr [rsp+0x10]
0x2a88: lea r14,[rbp+rbx]
0x2a8d: mov rdx,qword ptr [rsp+0x30]
0x2a92: mov rcx,qword ptr [rsp+0x28]
0x2a97: mov rdi,qword ptr [rsp+0x38]
0x2a9c: lea r13,[rax+r14]
0x2aa0: sub rdx,r14
0x2aa3: mov rsi,r13
0x2aa6: call 0x45a0
0x2aab: test rax,rax
0x2aae: mov r15,rax
0x2ab1: je 0x2b01
0x2ab3: cmp rax,-0x1
0x2ab7: je 0x30d5
0x2abd: cmp rax,-0x2
0x2ac1: je 0x3061
0x2ac7: cmp dword ptr [rsp+0x8],0x2
0x2acc: sete al
0x2acf: and al,byte ptr [rsp+0xf]
0x2ad3: jne 0x2c70
0x2ad9: mov edi,dword ptr [rsp+0x9c]
0x2ae0: call 0x15d0
0x2ae5: mov rdi,qword ptr [rsp+0x28]
0x2aea: test eax,eax
0x2aec: mov eax,0x0
0x2af1: cmove r12d,eax
0x2af5: add rbx,r15
0x2af8: call 0x15c0
0x2afd: test eax,eax
0x2aff: je 0x2a83
0x2b01: mov edx,r12d
0x2b04: mov rdi,rbx
0x2b07: movzx r8d,byte ptr [rsp+0x7d]
0x2b0d: xor edx,0x1
0x2b10: movzx ebx,byte ptr [rsp+0x7e]
0x2b15: movzx r10d,byte ptr [rsp+0x7f]
0x2b1b: and dl,byte ptr [rsp+0xd]
0x2b1f: mov r15,qword ptr [rsp+0x80]
0x2b27: mov r14,qword ptr [rsp+0x40]
0x2b2c: mov r13,qword ptr [rsp+0x70]
0x2b31: mov r11,qword ptr [rsp+0x30]
0x2b36: cmp rdi,0x1
0x2b3a: jbe 0x313b
0x2b40: mov rcx,rdi
0x2b43: xor esi,esi
0x2b45: movzx r9d,byte ptr [rsp+0xf]
0x2b4b: add rcx,rbp
0x2b4e: mov rdi,qword ptr [rsp+0x10]
0x2b53: jmp 0x2c0e
0x2b60: cmp dword ptr [rsp+0x8],0x2
0x2b65: sete al
0x2b68: test r9b,r9b
0x2b6b: jne 0x3020
0x2b71: mov esi,r8d
0x2b74: xor esi,0x1
0x2b77: and al,sil
0x2b7a: je 0x2bab
0x2b7c: cmp r13,r15
0x2b7f: jbe 0x2b86
0x2b81: mov byte ptr [r14+r15],0x27
0x2b86: lea rsi,[r15+0x1]
0x2b8a: cmp r13,rsi
0x2b8d: jbe 0x2b95
0x2b8f: mov byte ptr [r14+r15+0x1],0x24
0x2b95: lea rsi,[r15+0x2]
0x2b99: cmp r13,rsi
0x2b9c: jbe 0x2ba4
0x2b9e: mov byte ptr [r14+r15+0x2],0x27
0x2ba4: add r15,0x3
0x2ba8: mov r8d,eax
0x2bab: cmp r13,r15
0x2bae: jbe 0x2bb5
0x2bb0: mov byte ptr [r14+r15],0x5c
0x2bb5: lea rax,[r15+0x1]
0x2bb9: cmp r13,rax
0x2bbc: jbe 0x2bcb
0x2bbe: mov eax,ebx
0x2bc0: shr al,0x6
0x2bc3: add eax,0x30
0x2bc6: mov byte ptr [r14+r15+0x1],al
0x2bcb: lea rax,[r15+0x2]
0x2bcf: cmp r13,rax
0x2bd2: jbe 0x2be4
0x2bd4: mov eax,ebx
0x2bd6: shr al,0x3
0x2bd9: and eax,0x7
0x2bdc: add eax,0x30
0x2bdf: mov byte ptr [r14+r15+0x2],al
0x2be4: and ebx,0x7
0x2be7: add rbp,0x1
0x2beb: add r15,0x3
0x2bef: add ebx,0x30
0x2bf2: cmp rbp,rcx
0x2bf5: jae 0x23e0
0x2bfb: mov esi,edx
0x2bfd: cmp r13,r15
0x2c00: jbe 0x2c06
0x2c02: mov byte ptr [r14+r15],bl
0x2c06: movzx ebx,byte ptr [rdi+rbp]
0x2c0a: add r15,0x1
0x2c0e: test dl,dl
0x2c10: jne 0x2b60
0x2c16: mov eax,esi
0x2c18: xor eax,0x1
0x2c1b: and eax,r8d
0x2c1e: test r10b,r10b
0x2c21: je 0x2c31
0x2c23: cmp r13,r15
0x2c26: jbe 0x2c2d
0x2c28: mov byte ptr [r14+r15],0x5c
0x2c2d: add r15,0x1
0x2c31: add rbp,0x1
0x2c35: cmp rbp,rcx
0x2c38: jae 0x23bc
0x2c3e: test al,al
0x2c40: je 0x303e
0x2c46: cmp r13,r15
0x2c49: jbe 0x2c50
0x2c4b: mov byte ptr [r14+r15],0x27
0x2c50: lea rax,[r15+0x1]
0x2c54: cmp r13,rax
0x2c57: jbe 0x2c5f
0x2c59: mov byte ptr [r14+r15+0x1],0x27
0x2c5f: add r15,0x2
0x2c63: xor r10d,r10d
0x2c66: xor r8d,r8d
0x2c69: jmp 0x2bfd
0x2c70: cmp r15,0x1
0x2c74: je 0x2ad9
0x2c7a: mov rdi,qword ptr [rsp+0x10]
0x2c7f: lea rcx,[rdi+r15]
0x2c83: lea rdx,[rdi+r14+0x1]
0x2c88: lea r8,[rcx+r14]
0x2c8c: jmp 0x2c9d
0x2c90: add rdx,0x1
0x2c94: cmp r8,rdx
0x2c97: je 0x2ad9
0x2c9d: movzx ecx,byte ptr [rdx]
0x2ca0: sub ecx,0x5b
0x2ca3: cmp cl,0x21
0x2ca6: ja 0x2c90
0x2ca8: mov esi,0x1
0x2cad: shl rsi,cl
0x2cb0: mov rcx,rsi
0x2cb3: movabsq rsi,0x20000002b
0x2cbd: test rcx,rsi
0x2cc0: je 0x2c90
0x2cc2: mov r14,qword ptr [rsp+0x40]
0x2cc7: mov r13,qword ptr [rsp+0x70]
0x2ccc: mov rbp,qword ptr [rsp+0x30]
0x2cd1: mov dword ptr [rsp+0x8],0x2
0x2cd9: cmp byte ptr [rsp+0xd],0x0
0x2cde: je 0x2cf0
0x2ce0: test al,al
0x2ce2: mov eax,0x4
0x2ce7: cmove eax,dword ptr [rsp+0x8]
0x2cec: mov dword ptr [rsp+0x8],eax
0x2cf0: sub rsp,0x8
0x2cf4: mov rcx,rbp
0x2cf7: mov rsi,r13
0x2cfa: push qword ptr [rsp+0x68]
0x2cfe: push qword ptr [rsp+0x78]
0x2d02: mov rdi,r14
0x2d05: push 0x0
0x2d07: mov r9d,dword ptr [rsp+0x98]
0x2d0f: mov r8d,dword ptr [rsp+0x28]
0x2d14: mov rdx,qword ptr [rsp+0x30]
0x2d19: and r9d,-0x3
0x2d1d: call 0x2150
0x2d22: add rsp,0x20
0x2d26: mov r15,rax
0x2d29: mov rbx,qword ptr [rsp+0xa8]
0x2d31: xor rbx,qword ptr fs:0x28
0x2d3a: mov rax,r15
0x2d3d: jne 0x3343
0x2d43: add rsp,0xb8
0x2d4a: pop rbx
0x2d4b: pop rbp
0x2d4c: pop r12
0x2d4e: pop r13
0x2d50: pop r14
0x2d52: pop r15
0x2d54: ret 
0x2d58: mov rbp,r11
0x2d5b: jmp 0x2cd9
0x2dc1: test r13,r13
0x2dc4: jne 0x335a
0x2dca: lea rax,[rip+0x216c]
0x2dd1: mov qword ptr [rsp+0x50],0x0
0x2dda: mov byte ptr [rsp+0xe],0x1
0x2ddf: mov byte ptr [rsp+0x7c],0x0
0x2de4: xor r12d,r12d
0x2de7: mov byte ptr [rsp+0xf],0x0
0x2dec: mov qword ptr [rsp+0x18],0x1
0x2df5: mov qword ptr [rsp+0x48],rax
0x2dfa: mov r15d,0x1
0x2e00: mov dword ptr [rsp+0x8],0x2
0x2e08: jmp 0x2223
0x3020: movzx ebx,byte ptr [rsp+0xf]
0x3025: mov rbp,r11
0x3028: mov byte ptr [rsp+0xd],bl
0x302c: jmp 0x2cd9
0x3031: movzx edx,byte ptr [rsp+0xd]
0x3036: xor r12d,r12d
0x3039: jmp 0x2b40
0x303e: xor r10d,r10d
0x3041: jmp 0x2bfd
0x3061: mov r11,qword ptr [rsp+0x30]
0x3066: mov rsi,r14
0x3069: mov rcx,r13
0x306c: mov rax,rbx
0x306f: mov rdi,rbx
0x3072: movzx r8d,byte ptr [rsp+0x7d]
0x3078: movzx ebx,byte ptr [rsp+0x7e]
0x307d: mov r9,qword ptr [rsp+0x88]
0x3085: cmp rsi,r11
0x3088: movzx r10d,byte ptr [rsp+0x7f]
0x308e: mov r15,qword ptr [rsp+0x80]
0x3096: mov r14,qword ptr [rsp+0x40]
0x309b: mov r13,qword ptr [rsp+0x70]
0x30a0: jae 0x30c8
0x30a2: cmp byte ptr [rcx],0x0
0x30a5: jne 0x30b7
0x30a7: jmp 0x30c8
0x30b0: cmp byte ptr [r9+rax],0x0
0x30b5: je 0x30c5
0x30b7: add rax,0x1
0x30bb: lea rdx,[rbp+rax]
0x30c0: cmp r11,rdx
0x30c3: ja 0x30b0
0x30c5: mov rdi,rax
0x30c8: movzx edx,byte ptr [rsp+0xd]
0x30cd: xor r12d,r12d
0x30d0: jmp 0x2b36
0x30d5: mov rdi,rbx
0x30d8: movzx r8d,byte ptr [rsp+0x7d]
0x30de: movzx ebx,byte ptr [rsp+0x7e]
0x30e3: movzx r10d,byte ptr [rsp+0x7f]
0x30e9: mov r15,qword ptr [rsp+0x80]
0x30f1: xor r12d,r12d
0x30f4: mov r14,qword ptr [rsp+0x40]
0x30f9: mov r13,qword ptr [rsp+0x70]
0x30fe: mov r11,qword ptr [rsp+0x30]
0x3103: movzx edx,byte ptr [rsp+0xd]
0x3108: jmp 0x2b36
0x313b: mov eax,edx
0x313d: jmp 0x2697
0x324a: mov eax,edx
0x324c: mov rbx,qword ptr [rsp+0x48]
0x3251: test rbx,rbx
0x3254: je 0x3282
0x3256: test al,al
0x3258: je 0x3282
0x325a: movzx ecx,byte ptr [rbx]
0x325d: mov rax,rbx
0x3260: test cl,cl
0x3262: je 0x3282
0x3264: mov rdx,r15
0x3267: sub rax,r15
0x326a: cmp r13,rdx
0x326d: jbe 0x3273
0x326f: mov byte ptr [r14+rdx],cl
0x3273: add rdx,0x1
0x3277: movzx ecx,byte ptr [rax+rdx]
0x327b: test cl,cl
0x327d: jne 0x326a
0x327f: mov r15,rdx
0x3282: cmp r13,r15
0x3285: jbe 0x2d29
0x328b: mov byte ptr [r14+r15],0x0
0x3290: jmp 0x2d29
0x3295: cmp dword ptr [rsp+0x8],0x2
0x329a: movzx ebx,byte ptr [rsp+0xf]
0x329f: mov rbp,r11
0x32a2: sete al
0x32a5: mov byte ptr [rsp+0xd],bl
0x32a9: jmp 0x2cd9
0x32ed: sub rsp,0x8
0x32f1: mov r8d,0x5
0x32f7: mov rcx,r11
0x32fa: push qword ptr [rsp+0x68]
0x32fe: push qword ptr [rsp+0x78]
0x3302: mov rdi,r14
0x3305: push qword ptr [rsp+0x38]
0x3309: mov r9d,dword ptr [rsp+0x98]
0x3311: mov rdx,qword ptr [rsp+0x30]
0x3316: mov rsi,qword ptr [rsp+0x70]
0x331b: call 0x2150
0x3320: add rsp,0x20
0x3324: mov r15,rax
0x3327: jmp 0x2d29
0x332c: movzx eax,byte ptr [rsp+0x7c]
0x3331: jmp 0x324c
0x3336: mov dword ptr [rsp+0x8],0x2
0x333e: jmp 0x2cd9
0x3343: call 0x1410
0x3348: mov byte ptr [rsp+0xd],0x0
0x334d: jmp 0x2dc1
0x335a: mov byte ptr [rsp+0xe],0x1
0x335f: xor eax,eax
0x3361: xor r12d,r12d
0x3364: mov qword ptr [rsp+0x50],0x0
0x336d: jmp 0x2914
0x3384: nop 
0x3386: nop word ptr cs:[rax+rax]
0x347c: add rsp,0x20
0x3480: mov r11,qword ptr [rsp+0x10]
0x3485: cmp r11,rax
0x3488: ja 0x34f1
0x348a: lea rsi,[rax+0x1]
0x348e: lea rax,[rip+0x203c6b]
0x3495: cmp r12,rax
0x3498: mov qword ptr [rbx],rsi
0x349b: je 0x34af
0x349d: mov rdi,r12
0x34a0: mov qword ptr [rsp+0x10],rsi
0x34a5: call 0x1350
0x34aa: mov rsi,qword ptr [rsp+0x10]
0x34af: mov rdi,rsi
0x34b2: mov qword ptr [rsp+0x10],rsi
0x34b7: call 0x4310
0x34bc: sub rsp,0x8
0x34c0: mov qword ptr [rbx+0x8],rax
0x34c4: mov r8d,dword ptr [rbp]
0x34c8: push qword ptr [rbp+0x30]
0x34cb: push qword ptr [rbp+0x28]
0x34ce: mov rcx,r14
0x34d1: push r15
0x34d3: mov r9d,dword ptr [rsp+0x3c]
0x34d8: mov rdi,rax
0x34db: mov rdx,qword ptr [rsp+0x28]
0x34e0: mov rsi,qword ptr [rsp+0x30]
0x34e5: mov r12,rax
0x34e8: call 0x2150
0x34ed: add rsp,0x20
0x34f1: mov eax,dword ptr [rsp+0x18]
0x34f5: mov dword ptr [r13],eax
0x34f9: add rsp,0x28
0x34fd: mov rax,r12
0x3500: pop rbx
0x3501: pop rbp
0x3502: pop r12
0x3504: pop r13
0x3506: pop r14
0x3508: pop r15
0x350a: ret 
0x3531: call 0x1360
0x3536: call 0x4560
0x353b: nop dword ptr [rax+rax]
0x3540: push r12
0x3542: push rbp
0x3543: push rbx
0x3544: mov rbx,rdi
0x3547: call 0x1370
0x354c: mov r12d,dword ptr [rax]
0x354f: mov rbp,rax
0x3552: lea rax,[rip+0x203ca7]
0x3559: test rbx,rbx
0x355c: mov esi,0x38
0x3561: cmove rbx,rax
0x3565: mov rdi,rbx
0x3568: call 0x4510
0x356d: mov dword ptr [rbp],r12d
0x3571: pop rbx
0x3572: pop rbp
0x3573: pop r12
0x3575: ret 
0x3580: lea rax,[rip+0x203c79]
0x3587: test rdi,rdi
0x358a: cmove rdi,rax
0x358e: mov eax,dword ptr [rdi]
0x3590: ret 
0x35a0: lea rax,[rip+0x203c59]
0x35a7: test rdi,rdi
0x35aa: cmove rdi,rax
0x35ae: mov dword ptr [rdi],esi
0x35b0: ret 
0x35c0: lea rax,[rip+0x203c39]
0x35c7: test rdi,rdi
0x35ca: mov ecx,esi
0x35cc: cmove rdi,rax
0x35d0: mov eax,esi
0x35d2: and ecx,0x1f
0x35d5: shr al,0x5
0x35d8: movzx eax,al
0x35db: lea rdi,[rdi+rax*4+0x8]
0x35e0: mov esi,dword ptr [rdi]
0x35e2: mov eax,esi
0x35e4: shr eax,cl
0x35e6: xor edx,eax
0x35e8: and eax,0x1
0x35eb: and edx,0x1
0x35ee: shl edx,cl
0x35f0: xor edx,esi
0x35f2: mov dword ptr [rdi],edx
0x35f4: ret 
0x3600: lea rax,[rip+0x203bf9]
0x3607: test rdi,rdi
0x360a: cmove rdi,rax
0x360e: mov eax,dword ptr [rdi+0x4]
0x3611: mov dword ptr [rdi+0x4],esi
0x3614: ret 
0x3620: lea rax,[rip+0x203bd9]
0x3627: test rdi,rdi
0x362a: cmove rdi,rax
0x362e: test rsi,rsi
0x3631: mov dword ptr [rdi],0xa
0x3637: je 0x3647
0x3639: test rdx,rdx
0x363c: je 0x3647
0x363e: mov qword ptr [rdi+0x28],rsi
0x3642: mov qword ptr [rdi+0x30],rdx
0x3646: ret 
0x3647: sub rsp,0x8
0x364b: call 0x1360
0x3650: push r15
0x3652: push r14
0x3654: lea rax,[rip+0x203ba5]
0x365b: push r13
0x365d: push r12
0x365f: mov r13,rdi
0x3662: push rbp
0x3663: push rbx
0x3664: mov rbx,r8
0x3667: mov r14,rsi
0x366a: mov r15,rdx
0x366d: sub rsp,0x18
0x3671: test r8,r8
0x3674: cmove rbx,rax
0x3678: mov qword ptr [rsp+0x8],rcx
0x367d: call 0x1370
0x3682: mov r12d,dword ptr [rax]
0x3685: mov rbp,rax
0x3688: lea rax,[rbx+0x8]
0x368c: sub rsp,0x8
0x3690: mov r9d,dword ptr [rbx+0x4]
0x3694: push qword ptr [rbx+0x30]
0x3697: mov r8d,dword ptr [rbx]
0x369a: push qword ptr [rbx+0x28]
0x369d: mov rdx,r15
0x36a0: push rax
0x36a1: mov rcx,qword ptr [rsp+0x28]
0x36a6: mov rsi,r14
0x36a9: mov rdi,r13
0x36ac: call 0x2150
0x36b1: mov dword ptr [rbp],r12d
0x36b5: add rsp,0x38
0x36b9: pop rbx
0x36ba: pop rbp
0x36bb: pop r12
0x36bd: pop r13
0x36bf: pop r14
0x36c1: pop r15
0x36c3: ret 
0x36d0: push r15
0x36d2: push r14
0x36d4: lea rax,[rip+0x203b25]
0x36db: push r13
0x36dd: push r12
0x36df: mov r12,rdx
0x36e2: push rbp
0x36e3: push rbx
0x36e4: mov rbx,rcx
0x36e7: mov r14,rdi
0x36ea: mov r15,rsi
0x36ed: sub rsp,0x38
0x36f1: test rcx,rcx
0x36f4: cmove rbx,rax
0x36f8: xor ebp,ebp
0x36fa: call 0x1370
0x36ff: test r12,r12
0x3702: mov r13,rax
0x3705: mov eax,dword ptr [rax]
0x3707: sete bpl
0x370b: or ebp,dword ptr [rbx+0x4]
0x370e: lea r10,[rbx+0x8]
0x3712: sub rsp,0x8
0x3716: mov r8d,dword ptr [rbx]
0x3719: mov rcx,r15
0x371c: mov dword ptr [rsp+0x14],eax
0x3720: push qword ptr [rbx+0x30]
0x3723: mov rdx,r14
0x3726: push qword ptr [rbx+0x28]
0x3729: push r10
0x372b: xor esi,esi
0x372d: mov r9d,ebp
0x3730: xor edi,edi
0x3732: mov qword ptr [rsp+0x40],r10
0x3737: call 0x2150
0x373c: lea rsi,[rax+0x1]
0x3740: mov qword ptr [rsp+0x48],rax
0x3745: add rsp,0x20
0x3749: mov rdi,rsi
0x374c: mov qword ptr [rsp+0x18],rsi
0x3751: call 0x4310
0x3756: mov qword ptr [rsp+0x10],rax
0x375b: sub rsp,0x8
0x375f: push qword ptr [rbx+0x30]
0x3762: push qword ptr [rbx+0x28]
0x3765: mov r10,qword ptr [rsp+0x38]
0x376a: mov r9d,ebp
0x376d: mov r8d,dword ptr [rbx]
0x3770: mov rcx,r15
0x3773: mov rdx,r14
0x3776: mov rdi,rax
0x3779: push r10
0x377b: mov rsi,qword ptr [rsp+0x38]
0x3780: call 0x2150
0x3785: mov eax,dword ptr [rsp+0x2c]
0x3789: add rsp,0x20
0x378d: test r12,r12
0x3790: mov dword ptr [r13],eax
0x3794: je 0x379f
0x3796: mov r11,qword ptr [rsp+0x28]
0x379b: mov qword ptr [r12],r11
0x379f: mov rax,qword ptr [rsp+0x10]
0x37a4: add rsp,0x38
0x37a8: pop rbx
0x37a9: pop rbp
0x37aa: pop r12
0x37ac: pop r13
0x37ae: pop r14
0x37b0: pop r15
0x37b2: ret 
0x37c0: mov rcx,rdx
0x37c3: xor edx,edx
0x37c5: jmp 0x36d0
0x37d0: mov eax,dword ptr [rip+0x2038a2]
0x37d6: push r12
0x37d8: mov r12,qword ptr [rip+0x2038a1]
0x37df: push rbp
0x37e0: push rbx
0x37e1: cmp eax,0x1
0x37e4: jle 0x3811
0x37e6: sub eax,0x2
0x37e9: lea rbx,[r12+0x18]
0x37ee: shl rax,0x4
0x37f2: lea rbp,[r12+rax+0x28]
0x37f7: nop word ptr [rax+rax]
0x3800: mov rdi,qword ptr [rbx]
0x3803: add rbx,0x10
0x3807: call 0x1350
0x380c: cmp rbx,rbp
0x380f: jne 0x3800
0x3811: mov rdi,qword ptr [r12+0x8]
0x3816: lea rbx,[rip+0x2038e3]
0x381d: cmp rdi,rbx
0x3820: je 0x3839
0x3822: call 0x1350
0x3827: mov qword ptr [rip+0x20385e],0x100
0x3832: mov qword ptr [rip+0x20385f],rbx
0x3839: lea rbx,[rip+0x203850]
0x3840: cmp r12,rbx
0x3843: je 0x3854
0x3845: mov rdi,r12
0x3848: call 0x1350
0x384d: mov qword ptr [rip+0x20382c],rbx
0x3854: pop rbx
0x3855: mov dword ptr [rip+0x203819],0x1
0x385f: pop rbp
0x3860: pop r12
0x3862: ret 
0x3870: lea rcx,[rip+0x203989]
0x3877: mov rdx,-0x1
0x387e: jmp 0x3390
0x3890: lea rcx,[rip+0x203969]
0x3897: jmp 0x3390
0x38a0: lea rcx,[rip+0x203959]
0x38a7: mov rsi,rdi
0x38aa: mov rdx,-0x1
0x38b1: xor edi,edi
0x38b3: jmp 0x3390
0x38c0: lea rcx,[rip+0x203939]
0x38c7: mov rdx,rsi
0x38ca: mov rsi,rdi
0x38cd: xor edi,edi
0x38cf: jmp 0x3390
0x38e0: sub rsp,0x48
0x38e4: mov rax,rdx
0x38e7: mov rdx,qword ptr fs:0x28
0x38f0: mov qword ptr [rsp+0x38],rdx
0x38f5: xor edx,edx
0x38f7: cmp esi,0xa
0x38fa: je 0x3964
0x38fc: mov dword ptr [rsp],esi
0x38ff: mov rcx,rsp
0x3902: mov rdx,-0x1
0x3909: mov rsi,rax
0x390c: mov qword ptr [rsp+0x4],0x0
0x3915: mov qword ptr [rsp+0xc],0x0
0x391e: mov qword ptr [rsp+0x14],0x0
0x3927: mov qword ptr [rsp+0x1c],0x0
0x3930: mov qword ptr [rsp+0x24],0x0
0x3939: mov qword ptr [rsp+0x2c],0x0
0x3942: mov dword ptr [rsp+0x34],0x0
0x394a: call 0x3390
0x394f: mov rcx,qword ptr [rsp+0x38]
0x3954: xor rcx,qword ptr fs:0x28
0x395d: jne 0x3969
0x395f: add rsp,0x48
0x3963: ret 
0x3964: call 0x1360
0x3969: call 0x1410
0x396e: nop 
0x3970: sub rsp,0x48
0x3974: mov rax,rdx
0x3977: mov rdx,rcx
0x397a: mov rcx,qword ptr fs:0x28
0x3983: mov qword ptr [rsp+0x38],rcx
0x3988: xor ecx,ecx
0x398a: cmp esi,0xa
0x398d: je 0x39f0
0x398f: mov dword ptr [rsp],esi
0x3992: mov rcx,rsp
0x3995: mov rsi,rax
0x3998: mov qword ptr [rsp+0x4],0x0
0x39a1: mov qword ptr [rsp+0xc],0x0
0x39aa: mov qword ptr [rsp+0x14],0x0
0x39b3: mov qword ptr [rsp+0x1c],0x0
0x39bc: mov qword ptr [rsp+0x24],0x0
0x39c5: mov qword ptr [rsp+0x2c],0x0
0x39ce: mov dword ptr [rsp+0x34],0x0
0x39d6: call 0x3390
0x39db: mov rdx,qword ptr [rsp+0x38]
0x39e0: xor rdx,qword ptr fs:0x28
0x39e9: jne 0x39f5
0x39eb: add rsp,0x48
0x39ef: ret 
0x39f0: call 0x1360
0x39f5: call 0x1410
0x39fa: nop word ptr [rax+rax]
0x3a00: mov rdx,rsi
0x3a03: mov esi,edi
0x3a05: xor edi,edi
0x3a07: jmp 0x38e0
0x3a10: mov rcx,rdx
0x3a13: mov rdx,rsi
0x3a16: mov esi,edi
0x3a18: xor edi,edi
0x3a1a: jmp 0x3970
0x3a20: sub rsp,0x48
0x3a24: mov ecx,edx
0x3a26: mov rax,qword ptr fs:0x28
0x3a2f: mov qword ptr [rsp+0x38],rax
0x3a34: xor eax,eax
0x3a36: mov rax,qword ptr [rip+0x2037f3]
0x3a3d: mov r8,rsp
0x3a40: and ecx,0x1f
0x3a43: movdqa xmm0,xmmword ptr [rip+0x2037b5]
0x3a4b: mov qword ptr [rsp+0x30],rax
0x3a50: mov eax,edx
0x3a52: movaps xmmword ptr [rsp],xmm0
0x3a56: shr al,0x5
0x3a59: movzx eax,al
0x3a5c: lea r9,[r8+rax*4+0x8]
0x3a61: movdqa xmm0,xmmword ptr [rip+0x2037a7]
0x3a69: movaps xmmword ptr [rsp+0x10],xmm0
0x3a6e: movdqa xmm0,xmmword ptr [rip+0x2037aa]
0x3a76: movaps xmmword ptr [rsp+0x20],xmm0
0x3a7b: mov edx,dword ptr [r9]
0x3a7e: mov eax,edx
0x3a80: shr eax,cl
0x3a82: not eax
0x3a84: and eax,0x1
0x3a87: shl eax,cl
0x3a89: mov rcx,r8
0x3a8c: xor eax,edx
0x3a8e: mov rdx,rsi
0x3a91: mov rsi,rdi
0x3a94: mov dword ptr [r9],eax
0x3a97: xor edi,edi
0x3a99: call 0x3390
0x3a9e: mov rsi,qword ptr [rsp+0x38]
0x3aa3: xor rsi,qword ptr fs:0x28
0x3aac: jne 0x3ab3
0x3aae: add rsp,0x48
0x3ab2: ret 
0x3ab3: call 0x1410
0x3ab8: nop dword ptr [rax+rax]
0x3ac0: movsx edx,sil
0x3ac4: mov rsi,-0x1
0x3acb: jmp 0x3a20
0x3ad0: mov edx,0x3a
0x3ad5: mov rsi,-0x1
0x3adc: jmp 0x3a20
0x3af0: mov edx,0x3a
0x3af5: jmp 0x3a20
0x3b00: sub rsp,0x48
0x3b04: mov rax,rdx
0x3b07: mov rdx,qword ptr fs:0x28
0x3b10: mov qword ptr [rsp+0x38],rdx
0x3b15: xor edx,edx
0x3b17: cmp esi,0xa
0x3b1a: je 0x3b84
0x3b1c: mov dword ptr [rsp],esi
0x3b1f: mov rcx,rsp
0x3b22: mov rdx,-0x1
0x3b29: mov rsi,rax
0x3b2c: mov qword ptr [rsp+0x4],0x0
0x3b35: mov qword ptr [rsp+0xc],0x4000000
0x3b3e: mov qword ptr [rsp+0x14],0x0
0x3b47: mov qword ptr [rsp+0x1c],0x0
0x3b50: mov qword ptr [rsp+0x24],0x0
0x3b59: mov qword ptr [rsp+0x2c],0x0
0x3b62: mov dword ptr [rsp+0x34],0x0
0x3b6a: call 0x3390
0x3b6f: mov rcx,qword ptr [rsp+0x38]
0x3b74: xor rcx,qword ptr fs:0x28
0x3b7d: jne 0x3b89
0x3b7f: add rsp,0x48
0x3b83: ret 
0x3b84: call 0x1360
0x3b89: call 0x1410
0x3b8e: nop 
0x3b90: sub rsp,0x48
0x3b94: mov r9,rcx
0x3b97: mov rcx,qword ptr [rip+0x203692]
0x3b9e: movdqa xmm0,xmmword ptr [rip+0x20365a]
0x3ba6: mov rax,qword ptr fs:0x28
0x3baf: mov qword ptr [rsp+0x38],rax
0x3bb4: xor eax,eax
0x3bb6: movaps xmmword ptr [rsp],xmm0
0x3bba: test rsi,rsi
0x3bbd: mov qword ptr [rsp+0x30],rcx
0x3bc2: mov dword ptr [rsp],0xa
0x3bc9: movdqa xmm0,xmmword ptr [rip+0x20363f]
0x3bd1: movaps xmmword ptr [rsp+0x10],xmm0
0x3bd6: movdqa xmm0,xmmword ptr [rip+0x203642]
0x3bde: movaps xmmword ptr [rsp+0x20],xmm0
0x3be3: je 0x3c17
0x3be5: test rdx,rdx
0x3be8: je 0x3c17
0x3bea: mov qword ptr [rsp+0x28],rsi
0x3bef: mov qword ptr [rsp+0x30],rdx
0x3bf4: mov rcx,rsp
0x3bf7: mov rdx,r8
0x3bfa: mov rsi,r9
0x3bfd: call 0x3390
0x3c02: mov rdi,qword ptr [rsp+0x38]
0x3c07: xor rdi,qword ptr fs:0x28
0x3c10: jne 0x3c1c
0x3c12: add rsp,0x48
0x3c16: ret 
0x3c17: call 0x1360
0x3c1c: call 0x1410
0x3c21: nop dword ptr [rax+rax]
0x3c26: nop word ptr cs:[rax+rax]
0x3c30: mov r8,-0x1
0x3c37: jmp 0x3b90
0x3c40: mov rcx,rdx
0x3c43: mov r8,-0x1
0x3c4a: mov rdx,rsi
0x3c4d: mov rsi,rdi
0x3c50: xor edi,edi
0x3c52: jmp 0x3b90
0x3c60: mov r8,rcx
0x3c63: mov rcx,rdx
0x3c66: mov rdx,rsi
0x3c69: mov rsi,rdi
0x3c6c: xor edi,edi
0x3c6e: jmp 0x3b90
0x3c80: lea rcx,[rip+0x2033b9]
0x3c87: jmp 0x3390
0x3c90: lea rcx,[rip+0x2033a9]
0x3c97: mov rdx,rsi
0x3c9a: mov rsi,rdi
0x3c9d: xor edi,edi
0x3c9f: jmp 0x3390
0x3cb0: lea rcx,[rip+0x203389]
0x3cb7: mov rdx,-0x1
0x3cbe: jmp 0x3390
0x403d: push r12
0x403f: push r15
0x4041: push r14
0x4043: mov r8,qword ptr [rsp+0x20]
0x4048: mov rcx,rbx
0x404b: mov rdx,rax
0x404e: mov rdi,rbp
0x4051: mov esi,0x1
0x4056: xor eax,eax
0x4058: call 0x15b0
0x405d: add rsp,0x20
0x4061: add rsp,0x28
0x4065: pop rbx
0x4066: pop rbp
0x4067: pop r12
0x4069: pop r13
0x406b: pop r14
0x406d: pop r15
0x406f: ret 
0x40a9: push r12
0x40ab: push r15
0x40ad: push r14
0x40af: mov r9,qword ptr [rsp+0x28]
0x40b4: jmp 0x4043
0x4110: xor r9d,r9d
0x4113: cmp qword ptr [r8],0x0
0x4117: je 0x412b
0x4119: nop dword ptr [rax]
0x4120: add r9,0x1
0x4124: cmp qword ptr [r8+r9*8],0x0
0x4129: jne 0x4120
0x412b: jmp 0x3cf0
0x4130: sub rsp,0x68
0x4134: mov r10,r8
0x4137: xor r9d,r9d
0x413a: mov rax,qword ptr fs:0x28
0x4143: mov qword ptr [rsp+0x58],rax
0x4148: xor eax,eax
0x414a: mov r8,rsp
0x414d: nop dword ptr [rax]
0x4150: mov eax,dword ptr [r10]
0x4153: cmp eax,0x2f
0x4156: ja 0x419a
0x4158: mov r11d,eax
0x415b: add r11,qword ptr [r10+0x10]
0x415f: add eax,0x8
0x4162: mov dword ptr [r10],eax
0x4165: mov rax,qword ptr [r11]
0x4168: test rax,rax
0x416b: mov qword ptr [r8+r9*8],rax
0x416f: je 0x417b
0x4171: add r9,0x1
0x4175: cmp r9,0xa
0x4179: jne 0x4150
0x417b: call 0x3cf0
0x4180: mov rax,qword ptr [rsp+0x58]
0x4185: xor rax,qword ptr fs:0x28
0x418e: jne 0x4195
0x4190: add rsp,0x68
0x4194: ret 
0x4195: call 0x1410
0x419a: mov r11,qword ptr [r10+0x8]
0x419e: lea rax,[r11+0x8]
0x41a2: mov qword ptr [r10+0x8],rax
0x41a6: jmp 0x4165
0x4290: push rbx
0x4291: lea rsi,[rip+0x11ca]
0x4298: mov edx,0x5
0x429d: xor edi,edi
0x429f: call 0x13e0
0x42a4: lea rdx,[rip+0x11cc]
0x42ab: mov rsi,rax
0x42ae: mov edi,0x1
0x42b3: xor eax,eax
0x42b5: call 0x1550
0x42ba: lea rsi,[rip+0x11cc]
0x42c1: mov edx,0x5
0x42c6: xor edi,edi
0x42c8: call 0x13e0
0x42cd: lea rcx,[rip+0xb4c]
0x42d4: lea rdx,[rip+0x6ff]
0x42db: mov rsi,rax
0x42de: mov edi,0x1
0x42e3: xor eax,eax
0x42e5: call 0x1550
0x42ea: mov rbx,qword ptr [rip+0x202db7]
0x42f1: lea rsi,[rip+0x13c8]
0x42f8: xor edi,edi
0x42fa: mov edx,0x5
0x42ff: call 0x13e0
0x4304: mov rsi,rbx
0x4307: mov rdi,rax
0x430a: pop rbx
0x430b: jmp 0x14a0
0x4310: push rbx
0x4311: mov rbx,rdi
0x4314: call 0x14f0
0x4319: test rax,rax
0x431c: jne 0x4323
0x431e: test rbx,rbx
0x4321: jne 0x4325
0x4323: pop rbx
0x4324: ret 
0x4325: call 0x4560
0x432a: nop word ptr [rax+rax]
0x4330: mov rax,rdi
0x4333: mul rsi
0x4336: mov rdi,rax
0x4339: seto al
0x433c: test rdi,rdi
0x433f: js 0x434b
0x4341: movzx eax,al
0x4344: test rax,rax
0x4347: jne 0x434b
0x4349: jmp 0x4310
0x434b: sub rsp,0x8
0x434f: call 0x4560
0x4354: nop 
0x4356: nop word ptr cs:[rax+rax]
0x4360: jmp 0x4310
0x4379: test rdi,rdi
0x437c: jne 0x4398
0x438b: test rbx,rbx
0x438e: jne 0x43a1
0x4398: call 0x1350
0x439d: xor eax,eax
0x439f: pop rbx
0x43a0: ret 
0x43a1: call 0x4560
0x43a6: nop word ptr cs:[rax+rax]
0x43b0: mov rax,rsi
0x43b3: mul rdx
0x43b6: mov rsi,rax
0x43b9: seto al
0x43bc: test rsi,rsi
0x43bf: js 0x43cb
0x43c1: movzx eax,al
0x43c4: test rax,rax
0x43c7: jne 0x43cb
0x43c9: jmp 0x4370
0x43cb: sub rsp,0x8
0x43cf: call 0x4560
0x43d4: nop 
0x43d6: nop word ptr cs:[rax+rax]
0x43e0: test rdi,rdi
0x43e3: mov r9,rdx
0x43e6: mov rcx,qword ptr [rsi]
0x43e9: je 0x4420
0x43eb: xor edx,edx
0x43ed: movabsq rax,0x5555555555555554
0x43f7: div r9
0x43fa: cmp rax,rcx
0x43fd: jbe 0x443b
0x43ff: mov rax,rcx
0x4402: shr rax, 1
0x4405: lea rcx,[rax+rcx+0x1]
0x440a: mov qword ptr [rsi],rcx
0x440d: imul rcx,r9
0x4411: mov rsi,rcx
0x4414: jmp 0x4370
0x4420: test rcx,rcx
0x4423: je 0x4448
0x4425: mov rax,rcx
0x4428: mul r9
0x442b: seto dl
0x442e: test rax,rax
0x4431: movzx edx,dl
0x4434: js 0x443b
0x4436: test rdx,rdx
0x4439: je 0x440a
0x443b: sub rsp,0x8
0x443f: call 0x4560
0x4444: nop dword ptr [rax]
0x4448: xor edx,edx
0x444a: mov eax,0x80
0x444f: xor r8d,r8d
0x4452: div r9
0x4455: test rax,rax
0x4458: sete r8b
0x445c: lea rcx,[r8+rax]
0x4460: jmp 0x4425
0x4470: test rdi,rdi
0x4473: mov rax,qword ptr [rsi]
0x4476: je 0x44a0
0x4478: movabsq rdx,0x5555555555555553
0x4482: cmp rax,rdx
0x4485: ja 0x44b1
0x4487: mov rdx,rax
0x448a: shr rdx, 1
0x448d: lea rax,[rdx+rax+0x1]
0x4492: mov qword ptr [rsi],rax
0x4495: mov rsi,rax
0x4498: jmp 0x4370
0x44a0: test rax,rax
0x44a3: mov edx,0x80
0x44a8: cmove rax,rdx
0x44ac: test rax,rax
0x44af: jns 0x4492
0x44b1: sub rsp,0x8
0x44b5: call 0x4560
0x44ba: nop word ptr [rax+rax]
0x44c0: push rbx
0x44c1: mov rbx,rdi
0x44c4: call 0x4310
0x44c9: mov rdx,rbx
0x44cc: xor esi,esi
0x44ce: mov rdi,rax
0x44d1: pop rbx
0x44d2: jmp 0x1480
0x44e0: mov rax,rdi
0x44e3: sub rsp,0x8
0x44e7: mul rsi
0x44ea: seto dl
0x44ed: test rax,rax
0x44f0: js 0x4509
0x44f2: movzx edx,dl
0x44f5: test rdx,rdx
0x44f8: jne 0x4509
0x44fa: call 0x14b0
0x44ff: test rax,rax
0x4502: je 0x4509
0x4504: add rsp,0x8
0x4508: ret 
0x4509: call 0x4560
0x450e: nop 
0x4510: push rbp
0x4511: push rbx
0x4512: mov rbp,rdi
0x4515: mov rdi,rsi
0x4518: mov rbx,rsi
0x451b: sub rsp,0x8
0x451f: call 0x4310
0x4524: add rsp,0x8
0x4528: mov rdx,rbx
0x452b: mov rsi,rbp
0x452e: pop rbx
0x452f: pop rbp
0x4530: mov rdi,rax
0x4533: jmp 0x14d0
0x4540: push rbx
0x4541: mov rbx,rdi
0x4544: call 0x1400
0x4549: mov rdi,rbx
0x454c: lea rsi,[rax+0x1]
0x4550: pop rbx
0x4551: jmp 0x4510
0x4560: lea rsi,[rip+0x1208]
0x4567: sub rsp,0x8
0x456b: mov edx,0x5
0x4570: xor edi,edi
0x4572: call 0x13e0
0x4577: mov edi,dword ptr [rip+0x202aa3]
0x457d: lea rdx,[rip+0x961]
0x4584: mov rcx,rax
0x4587: xor esi,esi
0x4589: xor eax,eax
0x458b: call 0x1560
0x4590: call 0x1360
0x4595: nop word ptr cs:[rax+rax]
0x459f: nop 
0x45a0: push r13
0x45a2: push r12
0x45a4: mov r13,rsi
0x45a7: push rbp
0x45a8: push rbx
0x45a9: mov rbx,rdi
0x45ac: mov r12,rdx
0x45af: sub rsp,0x18
0x45b3: mov rax,qword ptr fs:0x28
0x45bc: mov qword ptr [rsp+0x8],rax
0x45c1: xor eax,eax
0x45c3: lea rax,[rsp+0x4]
0x45c8: test rdi,rdi
0x45cb: cmove rbx,rax
0x45cf: mov rdi,rbx
0x45d2: call 0x1430
0x45d7: cmp rax,-0x3
0x45db: mov rbp,rax
0x45de: jbe 0x4600
0x45e0: test r12,r12
0x45e3: je 0x4600
0x45e5: xor edi,edi
0x45e7: call 0x46b0
0x45ec: test al,al
0x45ee: jne 0x4600
0x45f0: movzx eax,byte ptr [r13]
0x45f5: mov ebp,0x1
0x45fa: mov dword ptr [rbx],eax
0x45fc: nop dword ptr [rax]
0x4600: mov rdx,qword ptr [rsp+0x8]
0x4605: xor rdx,qword ptr fs:0x28
0x460e: mov rax,rbp
0x4611: jne 0x461e
0x4613: add rsp,0x18
0x4617: pop rbx
0x4618: pop rbp
0x4619: pop r12
0x461b: pop r13
0x461d: ret 
0x461e: call 0x1410
0x4623: nop word ptr cs:[rax+rax]
0x462d: nop dword ptr [rax]
0x4630: push r12
0x4632: push rbp
0x4633: mov rbp,rdi
0x4636: push rbx
0x4637: call 0x13a0
0x463c: mov ebx,dword ptr [rbp]
0x463f: mov rdi,rbp
0x4642: mov r12,rax
0x4645: call 0x4750
0x464a: and ebx,0x20
0x464d: test ebx,ebx
0x464f: jne 0x4668
0x4651: test eax,eax
0x4653: je 0x465f
0x4655: test r12,r12
0x4658: mov eax,0xffffffff
0x465d: je 0x4698
0x465f: pop rbx
0x4660: pop rbp
0x4661: pop r12
0x4663: ret 
0x4668: test eax,eax
0x466a: jne 0x4688
0x466c: call 0x1370
0x4671: mov dword ptr [rax],0x0
0x4677: mov eax,0xffffffff
0x467c: pop rbx
0x467d: pop rbp
0x467e: pop r12
0x4680: ret 
0x4688: pop rbx
0x4689: mov eax,0xffffffff
0x468e: pop rbp
0x468f: pop r12
0x4691: ret 
0x4698: call 0x1370
0x469d: cmp dword ptr [rax],0x9
0x46a0: pop rbx
0x46a1: pop rbp
0x46a2: pop r12
0x46a4: setne al
0x46a7: movzx eax,al
0x46aa: neg eax
0x46ac: ret 
0x46b0: sub rsp,0x8
0x46b4: xor esi,esi
0x46b6: call 0x1540
0x46bb: mov rdx,rax
0x46be: mov eax,0x1
0x46c3: test rdx,rdx
0x46c6: je 0x46e5
0x46c8: lea rdi,[rip+0x10b1]
0x46cf: mov ecx,0x2
0x46d4: mov rsi,rdx
0x46d7: rep cmpsb [rsi],es:[rdi]
0x46d9: seta cl
0x46dc: sbb cl,0x0
0x46df: xor eax,eax
0x46e1: test cl,cl
0x46e3: jne 0x46f0
0x46e5: add rsp,0x8
0x46e9: ret 
0x46f0: lea rdi,[rip+0x108b]
0x46f7: mov ecx,0x6
0x46fc: mov rsi,rdx
0x46ff: rep cmpsb [rsi],es:[rdi]
0x4701: seta al
0x4704: sbb al,0x0
0x4706: test al,al
0x4708: setne al
0x470b: add rsp,0x8
0x470f: ret 
0x4710: sub rsp,0x8
0x4714: mov edi,0xe
0x4719: call 0x1510
0x471e: test rax,rax
0x4721: je 0x4740
0x4723: cmp byte ptr [rax],0x0
0x4726: lea rdx,[rip+0x105b]
0x472d: cmove rax,rdx
0x4731: add rsp,0x8
0x4735: ret 
0x4740: lea rax,[rip+0x1041]
0x4747: add rsp,0x8
0x474b: ret 
0x4750: push r12
0x4752: push rbp
0x4753: push rbx
0x4754: mov rbx,rdi
0x4757: call 0x14e0
0x475c: test eax,eax
0x475e: mov rdi,rbx
0x4761: js 0x47b7
0x4763: call 0x1520
0x4768: test eax,eax
0x476a: jne 0x4798
0x476c: mov rdi,rbx
0x476f: call 0x47d0
0x4774: test eax,eax
0x4776: je 0x47b4
0x4778: call 0x1370
0x477d: mov r12d,dword ptr [rax]
0x4780: mov rdi,rbx
0x4783: mov rbp,rax
0x4786: call 0x13c0
0x478b: test r12d,r12d
0x478e: jne 0x47c0
0x4790: pop rbx
0x4791: pop rbp
0x4792: pop r12
0x4794: ret 
0x4798: mov rdi,rbx
0x479b: call 0x14e0
0x47a0: xor esi,esi
0x47a2: mov edx,0x1
0x47a7: mov edi,eax
0x47a9: call 0x1470
0x47ae: cmp rax,-0x1
0x47b2: jne 0x476c
0x47b4: mov rdi,rbx
0x47b7: pop rbx
0x47b8: pop rbp
0x47b9: pop r12
0x47bb: jmp 0x13c0
0x47c0: mov dword ptr [rbp],r12d
0x47c4: mov eax,0xffffffff
0x47c9: jmp 0x4790
0x47d0: test rdi,rdi
0x47d3: push rbx
0x47d4: mov rbx,rdi
0x47d7: je 0x47ea
0x47d9: call 0x1520
0x47de: test eax,eax
0x47e0: je 0x47ea
0x47e2: test dword ptr [rbx],0x100
0x47e8: jne 0x47f8
0x47ea: mov rdi,rbx
0x47ed: pop rbx
0x47ee: jmp 0x1500
0x47f8: mov rdi,rbx
0x47fb: mov edx,0x1
0x4800: xor esi,esi
0x4802: call 0x4810
0x4807: mov rdi,rbx
0x480a: pop rbx
0x480b: jmp 0x1500
0x4810: mov rax,qword ptr [rdi+0x8]
0x4814: cmp qword ptr [rdi+0x10],rax
0x4818: je 0x4820
0x481a: jmp 0x1570
0x4820: mov rax,qword ptr [rdi+0x20]
0x4824: cmp qword ptr [rdi+0x28],rax
0x4828: jne 0x481a
0x482a: cmp qword ptr [rdi+0x48],0x0
0x482f: jne 0x481a
0x4831: push r12
0x4833: push rbp
0x4834: mov r12d,edx
0x4837: push rbx
0x4838: mov rbp,rsi
0x483b: mov rbx,rdi
0x483e: call 0x14e0
0x4843: mov edx,r12d
0x4846: mov rsi,rbp
0x4849: mov edi,eax
0x484b: call 0x1470
0x4850: cmp rax,-0x1
0x4854: je 0x4862
0x4856: and dword ptr [rbx],-0x11
0x4859: mov qword ptr [rbx+0x90],rax
0x4860: xor eax,eax
0x4862: pop rbx
0x4863: pop rbp
0x4864: pop r12
0x4866: ret 
0x4870: push r15
0x4872: push r14
0x4874: mov r15,rdx
0x4877: push r13
0x4879: push r12
0x487b: lea r12,[rip+0x20216e]
0x4882: push rbp
0x4883: lea rbp,[rip+0x20216e]
0x488a: push rbx
0x488b: mov r13d,edi
0x488e: mov r14,rsi
0x4891: sub rbp,r12
0x4894: sub rsp,0x8
0x4898: sar rbp,0x3
0x489c: call 0x1328
0x48a1: test rbp,rbp
0x48a4: je 0x48c6
0x48a6: xor ebx,ebx
0x48a8: nop dword ptr [rax+rax]
0x48b0: mov rdx,r15
0x48b3: mov rsi,r14
0x48b6: mov edi,r13d
0x48b9: call qword ptr [r12+rbx*8]
0x48bd: add rbx,0x1
0x48c1: cmp rbp,rbx
0x48c4: jne 0x48b0
0x48c6: add rsp,0x8
0x48ca: pop rbx
0x48cb: pop rbp
0x48cc: pop r12
0x48ce: pop r13
0x48d0: pop r14
0x48d2: pop r15
0x48d4: ret 
0x48e0: rep ret 
