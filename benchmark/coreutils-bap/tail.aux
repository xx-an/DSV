0x1aa8: sub rsp,0x8
0x1aac: mov rax,qword ptr [rip+0x20e535]
0x1ab3: test rax,rax
0x1ab6: je 0x1aba
0x1ab8: call rax
0x1aba: add rsp,0x8
0x1abe: ret 
0x1ac6: jmp qword ptr [rip+0x20e2cc]
0x1b30: jmp qword ptr [rip+0x20e29a]
0x1b40: jmp qword ptr [rip+0x20e292]
0x1bb0: jmp qword ptr [rip+0x20e25a]
0x1c00: jmp qword ptr [rip+0x20e232]
0x1c30: jmp qword ptr [rip+0x20e21a]
0x1c50: jmp qword ptr [rip+0x20e20a]
0x1c80: jmp qword ptr [rip+0x20e1f2]
0x1d30: jmp qword ptr [rip+0x20e19a]
0x1d80: jmp qword ptr [rip+0x20e172]
0x1d90: jmp qword ptr [rip+0x20e16a]
0x1db0: jmp qword ptr [rip+0x20e15a]
0x1dd0: jmp qword ptr [rip+0x20e14a]
0x1de0: jmp qword ptr [rip+0x20e142]
0x1df0: jmp qword ptr [rip+0x20e13a]
0x1e10: jmp qword ptr [rip+0x20e12a]
0x1e90: jmp qword ptr [rip+0x20e0ea]
0x1f00: jmp qword ptr [rip+0x20e0b2]
0x1f10: jmp qword ptr [rip+0x20e0aa]
0x1f20: jmp qword ptr [rip+0x20e0a2]
0x1f40: jmp qword ptr [rip+0x20e0b2]
0x2191: nop dword ptr [rax]
0x224e: lea rsi,[rip+0x9606]
0x2255: mov rbx,rax
0x2258: mov edx,0x5
0x225d: xor edi,edi
0x225f: call 0x1bd0
0x2264: mov rcx,rbx
0x2267: mov rdx,rax
0x226a: xor esi,esi
0x226c: mov edi,0x1
0x2271: xor eax,eax
0x2273: call 0x1e60
0x2278: nop dword ptr [rax+rax]
0x247e: lea rcx,[rsp+0x90]
0x2486: lea r8,[rip+0x9364]
0x248d: xor esi,esi
0x248f: mov edx,0xa
0x2494: call 0xa9e0
0x2499: and eax,-0x3
0x249c: jne 0x4714
0x255c: mov dword ptr [rip+0x20dbaa],0x0
0x28e5: jmp 0x2566
0x2929: jmp 0x2650
0x29a8: lea rsi,[rip+0x8f32]
0x29af: mov edx,0x5
0x29b4: xor edi,edi
0x29b6: mov rbx,rax
0x29b9: call 0x1bd0
0x29be: mov esi,dword ptr [rbp]
0x29c1: mov rdx,rax
0x29c4: mov rcx,rbx
0x29c7: xor edi,edi
0x29c9: xor eax,eax
0x29cb: call 0x1e60
0x29d0: mov byte ptr [rsp+0x18],0x0
0x2cea: lea rsi,[rip+0x8956]
0x2cf1: mov edx,0x5
0x2cf6: xor edi,edi
0x2cf8: mov rbx,rax
0x2cfb: call 0x1bd0
0x2d00: mov rbp,rax
0x2d03: call 0x1b10
0x2d08: mov esi,dword ptr [rax]
0x2d0a: mov rcx,rbx
0x2d0d: mov rdx,rbp
0x2d10: xor edi,edi
0x2d12: xor eax,eax
0x2d14: call 0x1e60
0x2d19: mov byte ptr [rsp+0x18],0x0
0x2d1e: jmp 0x29d5
0x2e57: lea rsi,[rip+0x99d2]
0x2e5e: mov rbx,rax
0x2e61: mov edx,0x5
0x2e66: xor edi,edi
0x2e68: call 0x1bd0
0x2e6d: mov r8,rbp
0x2e70: mov rdx,rax
0x2e73: mov rcx,rbx
0x2e76: xor esi,esi
0x2e78: xor edi,edi
0x2e7a: xor eax,eax
0x2e7c: call 0x1e60
0x2fad: lea rsi,[rip+0x8948]
0x2fb4: xor edi,edi
0x2fb6: mov edx,0x5
0x2fbb: mov rbx,rax
0x2fbe: call 0x1bd0
0x2fc3: mov rbp,rax
0x2fc6: call 0x1b10
0x2fcb: mov esi,dword ptr [rax]
0x2fcd: mov rcx,rbx
0x2fd0: mov rdx,rbp
0x2fd3: xor edi,edi
0x2fd5: xor eax,eax
0x2fd7: call 0x1e60
0x2fdc: jmp 0x2cb0
0x2ff0: lea rsi,[rip+0x8905]
0x2ff7: mov edx,0x5
0x2ffc: xor edi,edi
0x2ffe: mov rbx,rax
0x3001: call 0x1bd0
0x3006: mov rbp,rax
0x3009: call 0x1b10
0x300e: mov esi,dword ptr [rax]
0x3010: mov rcx,rbx
0x3013: mov rdx,rbp
0x3016: xor edi,edi
0x3018: xor eax,eax
0x301a: call 0x1e60
0x301f: mov byte ptr [rsp+0x18],0x0
0x3024: jmp 0x2cb0
0x32e0: lea rsi,[rip+0x8360]
0x32e7: xor edi,edi
0x32e9: mov edx,0x5
0x32ee: mov rbp,rax
0x32f1: call 0x1bd0
0x32f6: mov esi,dword ptr [rbx]
0x32f8: mov rdx,rax
0x32fb: mov rcx,rbp
0x32fe: xor edi,edi
0x3300: xor eax,eax
0x3302: call 0x1e60
0x3307: jmp 0x2e81
0x342e: cmp dword ptr [rdx+0x3],0x0
0x3432: js 0x343f
0x3434: movzx ecx,byte ptr [rdx]
0x3437: test cl,cl
0x3439: je 0x3c7b
0x343f: add rdx,0x60
0x37c3: nop dword ptr [rax+rax]
0x38a1: lea rsi,[rip+0x7ddb]
0x38a8: mov edx,0x5
0x38ad: xor edi,edi
0x38af: mov qword ptr [rsp+0x38],rax
0x38b4: call 0x1bd0
0x38b9: mov rcx,qword ptr [rsp+0x38]
0x38be: mov rdx,rax
0x38c1: xor esi,esi
0x38c3: xor edi,edi
0x38c5: xor eax,eax
0x38c7: call 0x1e60
0x38cc: mov rcx,r13
0x38cf: xor edx,edx
0x38d1: xor esi,esi
0x38d3: mov edi,ebp
0x38d5: call 0x4ea0
0x38da: mov qword ptr [r14+0x8],0x0
0x38e2: jmp 0x35d6
0x390c: mov esi,dword ptr [r12]
0x3910: lea rdx,[rip+0x90b5]
0x3917: mov rcx,rax
0x391a: xor edi,edi
0x391c: xor eax,eax
0x391e: call 0x1e60
0x3923: mov edi,ebp
0x3925: call 0x1ce0
0x392a: jmp 0x34e2
0x39ac: jmp 0x2a0d
0x3a48: mov rsi,qword ptr [rbx+0x2000]
0x3a4f: test rsi,rsi
0x3a52: je 0x3a3c
0x3a54: mov rdi,rbx
0x3a57: call 0x4a90
0x3a5c: jmp 0x3a3c
0x3a90: lea rsi,[rip+0x7bb0]
0x3a97: mov edx,0x5
0x3a9c: xor edi,edi
0x3a9e: mov rbx,rax
0x3aa1: call 0x1bd0
0x3aa6: mov rbp,rax
0x3aa9: call 0x1b10
0x3aae: mov esi,dword ptr [rax]
0x3ab0: mov rcx,rbx
0x3ab3: mov rdx,rbp
0x3ab6: xor edi,edi
0x3ab8: xor eax,eax
0x3aba: call 0x1e60
0x3abf: mov byte ptr [rsp+0x18],0x0
0x3ac4: jmp 0x2c86
0x3c05: lea rsi,[rip+0x7a3b]
0x3c0c: mov edx,0x5
0x3c11: xor edi,edi
0x3c13: mov rbx,rax
0x3c16: call 0x1bd0
0x3c1b: mov r12,rax
0x3c1e: call 0x1b10
0x3c23: mov esi,dword ptr [rax]
0x3c25: xor edi,edi
0x3c27: mov rcx,rbx
0x3c2a: mov rdx,r12
0x3c2d: xor eax,eax
0x3c2f: call 0x1e60
0x3c34: mov rdi,rbp
0x3c37: jmp 0x3a77
0x3c7b: lea rbx,[rsp+0x220]
0x3c83: mov byte ptr [rsp+0x20],cl
0x3c87: xor r12d,r12d
0x3c8a: cmp r12,qword ptr [rsp]
0x3c8e: je 0x3cf7
0x3c90: imul rax,r12,0x60
0x3c94: mov rcx,qword ptr [rsp+0x28]
0x3c99: mov rdx,rbx
0x3c9c: mov edi,0x1
0x3ca1: mov rsi,qword ptr [rcx+rax]
0x3ca5: call 0x1c00
0x3caa: test eax,eax
0x3cac: jne 0x3cc5
0x3cae: mov eax,dword ptr [rsp+0x238]
0x3cb5: and eax,0xf000
0x3cba: cmp eax,0xa000
0x3cbf: je 0x3448
0x3cc5: add r12,0x1
0x3cc9: jmp 0x3c8a
0x3cf7: mov rsi,qword ptr [rsp+0x28]
0x3cfc: mov rcx,qword ptr [rsp+0x60]
0x3d01: mov qword ptr [rsp+0x18],r12
0x3d06: lea rax,[rsi+0x30]
0x3d0a: lea rcx,[rsi+rcx+0x30]
0x3d0f: jmp 0x3d37
0x3d11: cmp dword ptr [rax+0x8],0x0
0x3d15: js 0x3d33
0x3d17: mov edx,dword ptr [rax]
0x3d19: and edx,0xf000
0x3d1f: cmp edx,0x8000
0x3d25: je 0x3d33
0x3d27: cmp edx,0x1000
0x3d2d: jne 0x3448
0x3d33: add rax,0x60
0x3d37: cmp rcx,rax
0x3d3a: jne 0x3d11
0x3d3c: cmp byte ptr [rsp+0x8b],0x0
0x3d44: jne 0x3d53
0x3d46: cmp dword ptr [rip+0x20c2d3],0x2
0x3d4d: je 0x3448
0x3d53: call 0x1d80
0x3d58: test eax,eax
0x3d5a: mov r13d,eax
0x3d5d: js 0x3efd
0x3d63: mov rdi,qword ptr [rip+0x20c35e]
0x3d6a: call 0x1ef0
0x3d6f: test eax,eax
0x3d71: jne 0x4756
0x3d77: mov rdi,qword ptr [rsp+0x18]
0x3d7c: lea rcx,[rip+0xc4d]
0x3d83: lea rdx,[rip+0xc36]
0x3d8a: xor r8d,r8d
0x3d8d: xor esi,esi
0x3d8f: call 0x7540
0x3d94: test rax,rax
0x3d97: mov r14,rax
0x3d9a: je 0x44fb
0x3da0: cmp dword ptr [rip+0x20c279],0x1
0x3da7: mov edx,0xc06
0x3dac: mov eax,0x2
0x3db1: mov r15,qword ptr [rsp+0x28]
0x3db6: mov byte ptr [rsp+0x10],0x0
0x3dbb: mov byte ptr [rsp+0x38],0x0
0x3dc0: mov qword ptr [rsp+0x8],r14
0x3dc5: cmove eax,edx
0x3dc8: mov edx,dword ptr [rip+0x20c252]
0x3dce: xor r12d,r12d
0x3dd1: mov dword ptr [rsp+0x44],eax
0x3dd5: mov rbx,r15
0x3dd8: cmp rbx,rbp
0x3ddb: je 0x3fdd
0x3de1: cmp byte ptr [rbx+0x34],0x0
0x3de5: jne 0x3f8e
0x3deb: mov r15,qword ptr [rbx]
0x3dee: xor eax,eax
0x3df0: or rcx,-0x1
0x3df4: mov rdi,r15
0x3df7: repne scasb al,es:[rdi]
0x3df9: mov dword ptr [rbx+0x44],0xffffffff
0x3e00: mov rax,rcx
0x3e03: not rax
0x3e06: sub rax,0x1
0x3e0a: cmp r12,rax
0x3e0d: cmovb r12,rax
0x3e11: sub edx,0x1
0x3e14: jne 0x3e7d
0x3e16: mov rdi,r15
0x3e19: call 0x6af0
0x3e1e: lea rdx,[r15+rax]
0x3e22: mov r14,rax
0x3e25: mov rdi,r15
0x3e28: movzx eax,byte ptr [rdx]
0x3e2b: mov qword ptr [rsp+0x58],rdx
0x3e30: mov byte ptr [rsp+0x48],al
0x3e34: call 0x6bb0
0x3e39: mov rdx,qword ptr [rsp+0x58]
0x3e3e: sub rax,r15
0x3e41: test r14,r14
0x3e44: mov qword ptr [rbx+0x50],rax
0x3e48: lea rsi,[rip+0x7985]
0x3e4f: mov byte ptr [rdx],0x0
0x3e52: je 0x3e57
0x3e54: mov rsi,qword ptr [rbx]
0x3e57: mov edx,0x784
0x3e5c: mov edi,r13d
0x3e5f: call 0x1de0
0x3e64: movzx ecx,byte ptr [rsp+0x48]
0x3e69: mov dword ptr [rbx+0x48],eax
0x3e6c: mov rax,qword ptr [rbx]
0x3e6f: mov byte ptr [rax+r14],cl
0x3e73: cmp dword ptr [rbx+0x48],0x0
0x3e77: js 0x46c2
0x3e7d: mov edx,dword ptr [rsp+0x44]
0x3e81: mov rsi,qword ptr [rbx]
0x3e84: mov edi,r13d
0x3e87: call 0x1de0
0x3e8c: test eax,eax
0x3e8e: mov dword ptr [rbx+0x44],eax
0x3e91: jns 0x3f69
0x3e97: cmp dword ptr [rbx+0x38],-0x1
0x3e9b: movzx eax,byte ptr [rsp+0x10]
0x3ea0: movzx esi,byte ptr [rsp+0x50]
0x3ea5: cmovne eax,esi
0x3ea8: mov byte ptr [rsp+0x10],al
0x3eac: call 0x1b10
0x3eb1: mov r14,rax
0x3eb4: mov eax,dword ptr [rax]
0x3eb6: mov edx,eax
0x3eb8: and edx,-0x11
0x3ebb: cmp edx,0xc
0x3ebe: jne 0x3f97
0x3ec4: mov r14,qword ptr [rsp+0x8]
0x3ec9: lea rsi,[rip+0x7a40]
0x3ed0: mov edx,0x5
0x3ed5: xor edi,edi
0x3ed7: call 0x1bd0
0x3edc: xor esi,esi
0x3ede: mov rdx,rax
0x3ee1: xor edi,edi
0x3ee3: xor eax,eax
0x3ee5: call 0x1e60
0x3eea: mov rdi,r14
0x3eed: call 0x7790
0x3ef2: call 0x1b10
0x3ef7: mov dword ptr [rax],0x0
0x3efd: lea rsi,[rip+0x89e4]
0x3f04: mov edx,0x5
0x3f09: xor edi,edi
0x3f0b: call 0x1bd0
0x3f10: mov rbx,rax
0x3f13: call 0x1b10
0x3f18: mov esi,dword ptr [rax]
0x3f1a: mov rdx,rbx
0x3f1d: xor eax,eax
0x3f1f: xor edi,edi
0x3f21: call 0x1e60
0x3f26: mov rax,qword ptr [rsp+0x28]
0x3f2b: mov rsi,qword ptr [rsp+0x60]
0x3f30: lea rbp,[rax+0x44]
0x3f34: lea rbx,[rax+rsi+0x44]
0x3f39: jmp 0x3f5f
0x3f3b: mov esi,dword ptr [rbp]
0x3f3e: cmp esi,-0x1
0x3f41: je 0x3f4b
0x3f43: mov edi,r13d
0x3f46: call 0x1f20
0x3f4b: mov esi,dword ptr [rbp+0x4]
0x3f4e: cmp esi,-0x1
0x3f51: je 0x3f5b
0x3f53: mov edi,r13d
0x3f56: call 0x1f20
0x3f5b: add rbp,0x60
0x3f5f: cmp rbx,rbp
0x3f62: jne 0x3f3b
0x3f64: jmp 0x3448
0x3f69: mov rdi,qword ptr [rsp+0x8]
0x3f6e: mov rsi,rbx
0x3f71: call 0x7d40
0x3f76: test rax,rax
0x3f79: je 0x44fb
0x3f7f: movzx eax,byte ptr [rsp+0x50]
0x3f84: mov byte ptr [rsp+0x38],al
0x3f88: mov edx,dword ptr [rip+0x20c092]
0x3f8e: add rbx,0x60
0x3f92: jmp 0x3dd8
0x3f97: cmp eax,dword ptr [rbx+0x3c]
0x3f9a: je 0x3f88
0x3f9c: mov rsi,qword ptr [rbx]
0x3f9f: mov edi,0x4
0x3fa4: call 0x9b20
0x3fa9: lea rsi,[rip+0x797c]
0x3fb0: mov edx,0x5
0x3fb5: xor edi,edi
0x3fb7: mov qword ptr [rsp+0x48],rax
0x3fbc: call 0x1bd0
0x3fc1: mov rcx,qword ptr [rsp+0x48]
0x3fc6: mov esi,dword ptr [r14]
0x3fc9: mov rdx,rax
0x3fcc: xor edi,edi
0x3fce: xor eax,eax
0x3fd0: call 0x1e60
0x3fd5: mov edx,dword ptr [rip+0x20c045]
0x3fdb: jmp 0x3f8e
0x3fdd: cmp edx,0x2
0x3fe0: mov r14,qword ptr [rsp+0x8]
0x3fe5: je 0x4598
0x3feb: mov r15,qword ptr [rsp+0x28]
0x3ff0: mov rax,qword ptr [rsp+0x60]
0x3ff5: lea rbx,[rsp+0x98]
0x3ffd: lea rax,[r15+rax-0x60]
0x4002: mov qword ptr [rsp+0x98],rax
0x400a: lea rax,[rsp+0x220]
0x4012: mov qword ptr [rsp+0x8],rax
0x4017: jmp 0x4069
0x4019: cmp dword ptr [r15+0x38],-0x1
0x401e: je 0x405a
0x4020: mov rdx,qword ptr [rsp+0x8]
0x4025: mov rsi,qword ptr [r15]
0x4028: mov edi,0x1
0x402d: call 0x1db0
0x4032: test eax,eax
0x4034: jne 0x405a
0x4036: mov rax,qword ptr [rsp+0x220]
0x403e: cmp qword ptr [r15+0x20],rax
0x4042: jne 0x45e7
0x4048: mov rax,qword ptr [rsp+0x228]
0x4050: cmp qword ptr [r15+0x28],rax
0x4054: jne 0x45e7
0x405a: mov rsi,rbx
0x405d: mov rdi,r15
0x4060: call 0x51d0
0x4065: add r15,0x60
0x4069: cmp r15,rbp
0x406c: je 0x408a
0x406e: cmp byte ptr [r15+0x34],0x0
0x4073: jne 0x4065
0x4075: cmp dword ptr [rip+0x20bfa4],0x1
0x407c: jne 0x4019
0x407e: xor esi,esi
0x4080: mov rdi,r15
0x4083: call 0x5a90
0x4088: jmp 0x405a
0x408a: lea rax,[r12+0x11]
0x408f: xor r15d,r15d
0x4092: mov rdi,rax
0x4095: mov qword ptr [rsp+0x38],rax
0x409a: call 0xa4d0
0x409f: mov ecx,r13d
0x40a2: mov qword ptr [rsp+0x10],rax
0x40a7: mov eax,0x1
0x40ac: shl rax,cl
0x40af: mov qword ptr [rsp+0x8],0x0
0x40b8: mov dword ptr [rsp+0x48],0x3
0x40c0: mov qword ptr [rsp+0x70],rax
0x40c5: lea rax,[rsp+0x110]
0x40cd: mov qword ptr [rsp+0x58],rax
0x40d2: movsxd rax,r13d
0x40d5: mov qword ptr [rsp+0x80],rax
0x40dd: cmp dword ptr [rip+0x20bf3c],0x1
0x40e4: je 0x427b
0x40ea: movzx ebp,byte ptr [rsp+0x20]
0x40ef: lea rbx,[rsp+0xa0]
0x40f7: cmp r15,qword ptr [rsp+0x8]
0x40fc: jb 0x45dd
0x4102: mov edi,dword ptr [rip+0x20c008]
0x4108: test edi,edi
0x410a: je 0x414f
0x410c: test bpl,bpl
0x410f: jne 0x468f
0x4115: xor esi,esi
0x4117: call 0x1d70
0x411c: test eax,eax
0x411e: je 0x423d
0x4124: call 0x1b10
0x4129: cmp dword ptr [rax],0x1
0x412c: je 0x423d
0x4132: movzx ebp,byte ptr [rsp+0x50]
0x4137: mov qword ptr [rsp+0xa8],0x0
0x4143: mov qword ptr [rsp+0xa0],0x0
0x414f: xor eax,eax
0x4151: mov ecx,0x10
0x4156: mov rdi,qword ptr [rsp+0x58]
0x415b: cld 
0x415c: rep stos qword ptr es:[rdi],rax
0x415f: mov rdi,qword ptr [rsp+0x80]
0x4167: call 0x1c50
0x416c: mov rcx,qword ptr [rsp+0x70]
0x4171: or qword ptr [rsp+rax*8+0x110],rcx
0x4179: cmp byte ptr [rip+0x20bf97],0x0
0x4180: je 0x418b
0x4182: or qword ptr [rsp+0x110],0x2
0x418b: xor r8d,r8d
0x418e: cmp dword ptr [rip+0x20bf7b],0x0
0x4195: mov edi,0x1
0x419a: mov rsi,qword ptr [rsp+0x58]
0x419f: cmovne r8,rbx
0x41a3: test r13d,r13d
0x41a6: cmovg edi,r13d
0x41aa: xor ecx,ecx
0x41ac: xor edx,edx
0x41ae: add edi,0x1
0x41b1: call 0x1da0
0x41b6: test eax,eax
0x41b8: je 0x40f7
0x41be: add eax,0x1
0x41c1: mov byte ptr [rsp+0x20],bpl
0x41c6: je 0x4696
0x41cc: test byte ptr [rsp+0x110],0x2
0x41d4: jne 0x4841
0x41da: mov rdx,qword ptr [rsp+0x38]
0x41df: mov rsi,qword ptr [rsp+0x10]
0x41e4: mov edi,r13d
0x41e7: call 0x9e10
0x41ec: test rax,rax
0x41ef: mov qword ptr [rsp+0x8],rax
0x41f4: jne 0x42c4
0x41fa: cmp dword ptr [rsp+0x48],0x0
0x41ff: je 0x456c
0x4205: mov rsi,qword ptr [rsp+0x38]
0x420a: mov rdi,qword ptr [rsp+0x10]
0x420f: xor r15d,r15d
0x4212: sub dword ptr [rsp+0x48],0x1
0x4217: mov rax,rsi
0x421a: add rax,rsi
0x421d: mov rsi,rax
0x4220: mov qword ptr [rsp+0x38],rax
0x4225: call 0xa530
0x422a: mov qword ptr [rsp+0x8],0x0
0x4233: mov qword ptr [rsp+0x10],rax
0x4238: jmp 0x40dd
0x423d: movsd xmm4,dword ptr [rsp+0x30]
0x4243: pxor xmm0,xmm0
0x4247: cvttsd2si rax,xmm4
0x424c: cvtsi2sdq xmm0,rax
0x4251: mov qword ptr [rsp+0xa0],rax
0x4259: subsd xmm4,xmm0
0x425d: movsd xmm0,dword ptr [rip+0x8703]
0x4265: mulsd xmm0,xmm4
0x4269: cvttsd2si rax,xmm0
0x426e: mov qword ptr [rsp+0xa8],rax
0x4276: jmp 0x414f
0x427b: cmp byte ptr [rip+0x20be98],0x0
0x4282: jne 0x40ea
0x4288: mov rdi,r14
0x428b: call 0x70c0
0x4290: test rax,rax
0x4293: jne 0x40ea
0x4299: lea rsi,[rip+0x76ac]
0x42a0: mov edx,0x5
0x42a5: xor edi,edi
0x42a7: call 0x1bd0
0x42ac: xor esi,esi
0x42ae: mov rdx,rax
0x42b1: xor edi,edi
0x42b3: xor eax,eax
0x42b5: call 0x1e60
0x42ba: mov eax,0x1
0x42bf: jmp 0x2a28
0x42c4: xor r15d,r15d
0x42c7: cmp qword ptr [rsp+0x8],-0x1
0x42cd: je 0x455e
0x42d3: mov rax,qword ptr [rsp+0x10]
0x42d8: lea rbp,[rax+r15]
0x42dc: mov edx,dword ptr [rbp+0xc]
0x42df: mov ecx,dword ptr [rbp+0x4]
0x42e2: test ch,0x4
0x42e5: lea r15,[r15+rdx+0x10]
0x42ea: je 0x43b3
0x42f0: test edx,edx
0x42f2: je 0x4500
0x42f8: lea rax,[rbp+0x10]
0x42fc: mov qword ptr [rsp+0x68],r15
0x4301: mov rbx,qword ptr [rsp+0x28]
0x4306: mov r15,r14
0x4309: xor r12d,r12d
0x430c: mov r14d,r13d
0x430f: mov qword ptr [rsp+0x78],rax
0x4314: mov r13,rbp
0x4317: mov rbp,qword ptr [rsp+0x18]
0x431c: jmp 0x4326
0x431e: add r12,0x1
0x4322: add rbx,0x60
0x4326: cmp rbp,r12
0x4329: je 0x43da
0x432f: mov eax,dword ptr [r13]
0x4333: cmp dword ptr [rbx+0x48],eax
0x4336: jne 0x431e
0x4338: mov rsi,qword ptr [rbx+0x50]
0x433c: add rsi,qword ptr [rbx]
0x433f: mov rdi,qword ptr [rsp+0x78]
0x4344: mov dword ptr [rsp+0x8c],ecx
0x434b: call 0x1d40
0x4350: test eax,eax
0x4352: mov ecx,dword ptr [rsp+0x8c]
0x4359: jne 0x431e
0x435b: imul rbx,r12,0x60
0x435f: mov rbp,r13
0x4362: mov r13d,r14d
0x4365: add rbx,qword ptr [rsp+0x28]
0x436a: and ch,0x2
0x436d: mov r14,r15
0x4370: mov r15,qword ptr [rsp+0x68]
0x4375: je 0x43ff
0x437b: cmp dword ptr [rip+0x20bc9e],0x1
0x4382: je 0x45ce
0x4388: test rbx,rbx
0x438b: je 0x40dd
0x4391: mov eax,dword ptr [rbp+0x4]
0x4394: test eax,0xe04
0x4399: je 0x43ea
0x439b: test ah,0x4
0x439e: jne 0x45b3
0x43a4: xor esi,esi
0x43a6: mov rdi,rbx
0x43a9: call 0x5a90
0x43ae: jmp 0x40dd
0x43b3: test edx,edx
0x43b5: jne 0x42f8
0x43bb: mov edx,dword ptr [rbp]
0x43be: lea rsi,[rsp+0xb0]
0x43c6: mov rdi,r14
0x43c9: mov dword ptr [rsp+0xf4],edx
0x43d0: call 0x72d0
0x43d5: mov rbx,rax
0x43d8: jmp 0x4388
0x43da: mov r13d,r14d
0x43dd: mov r14,r15
0x43e0: mov r15,qword ptr [rsp+0x68]
0x43e5: jmp 0x40dd
0x43ea: lea rsi,[rsp+0x98]
0x43f2: mov rdi,rbx
0x43f5: call 0x51d0
0x43fa: jmp 0x40dd
0x43ff: mov edx,dword ptr [rsp+0x44]
0x4403: mov rsi,qword ptr [rbx]
0x4406: mov edi,r13d
0x4409: call 0x1de0
0x440e: test eax,eax
0x4410: mov r12d,eax
0x4413: jns 0x446e
0x4415: call 0x1b10
0x441a: mov r8,rax
0x441d: mov eax,dword ptr [rax]
0x441f: and eax,-0x11
0x4422: cmp eax,0xc
0x4425: je 0x4641
0x442b: mov rsi,qword ptr [rbx]
0x442e: mov edi,0x4
0x4433: mov qword ptr [rsp+0x78],r8
0x4438: call 0x9b20
0x443d: lea rsi,[rip+0x74e8]
0x4444: mov edx,0x5
0x4449: xor edi,edi
0x444b: mov qword ptr [rsp+0x68],rax
0x4450: call 0x1bd0
0x4455: mov r8,qword ptr [rsp+0x78]
0x445a: mov rcx,qword ptr [rsp+0x68]
0x445f: mov rdx,rax
0x4462: xor edi,edi
0x4464: xor eax,eax
0x4466: mov esi,dword ptr [r8]
0x4469: call 0x1e60
0x446e: mov esi,dword ptr [rbx+0x44]
0x4471: test esi,esi
0x4473: js 0x447e
0x4475: cmp r12d,esi
0x4478: je 0x437b
0x447e: test esi,esi
0x4480: js 0x4495
0x4482: mov edi,r13d
0x4485: call 0x1f20
0x448a: mov rsi,rbx
0x448d: mov rdi,r14
0x4490: call 0x7da0
0x4495: mov dword ptr [rbx+0x44],r12d
0x4499: add r12d,0x1
0x449d: je 0x40dd
0x44a3: mov rsi,rbx
0x44a6: mov rdi,r14
0x44a9: call 0x7da0
0x44ae: test rax,rax
0x44b1: mov r12,rax
0x44b4: je 0x44e7
0x44b6: cmp rbx,rax
0x44b9: je 0x44e7
0x44bb: cmp dword ptr [rip+0x20bb5e],0x1
0x44c2: je 0x4680
0x44c8: mov rdi,qword ptr [r12]
0x44cc: mov dword ptr [r12+0x44],0xffffffff
0x44d5: call 0x49e0
0x44da: mov edi,dword ptr [r12+0x38]
0x44df: mov rsi,rax
0x44e2: call 0x4a20
0x44e7: mov rsi,rbx
0x44ea: mov rdi,r14
0x44ed: call 0x7d40
0x44f2: test rax,rax
0x44f5: jne 0x437b
0x4500: mov edx,dword ptr [rbp]
0x4503: xor eax,eax
0x4505: jmp 0x450b
0x4507: add rax,0x1
0x450b: cmp qword ptr [rsp+0x18],rax
0x4510: je 0x43be
0x4516: imul rcx,rax,0x60
0x451a: mov rsi,qword ptr [rsp+0x28]
0x451f: cmp dword ptr [rsi+rcx+0x48],edx
0x4523: jne 0x4507
0x4525: mov rdi,r14
0x4528: call 0x7790
0x452d: lea rsi,[rip+0x8384]
0x4534: mov edx,0x5
0x4539: xor edi,edi
0x453b: call 0x1bd0
0x4540: xor esi,esi
0x4542: mov rdx,rax
0x4545: xor edi,edi
0x4547: xor eax,eax
0x4549: call 0x1e60
0x454e: call 0x1b10
0x4553: mov dword ptr [rax],0x0
0x4559: jmp 0x3efd
0x455e: call 0x1b10
0x4563: cmp dword ptr [rax],0x16
0x4566: je 0x41fa
0x456c: lea rsi,[rip+0x73ec]
0x4573: mov edx,0x5
0x4578: xor edi,edi
0x457a: call 0x1bd0
0x457f: mov rbx,rax
0x4582: call 0x1b10
0x4587: mov esi,dword ptr [rax]
0x4589: mov rdx,rbx
0x458c: mov edi,0x1
0x4591: xor eax,eax
0x4593: call 0x1e60
0x4598: cmp byte ptr [rsp+0x10],0x0
0x459d: jne 0x3eea
0x45a3: cmp byte ptr [rsp+0x38],0x0
0x45a8: jne 0x3feb
0x45ae: jmp 0x42ba
0x45b3: mov esi,dword ptr [rbx+0x44]
0x45b6: mov edi,r13d
0x45b9: call 0x1f20
0x45be: mov rsi,rbx
0x45c1: mov rdi,r14
0x45c4: call 0x7da0
0x45c9: jmp 0x43a4
0x45ce: xor esi,esi
0x45d0: mov rdi,rbx
0x45d3: call 0x5a90
0x45d8: jmp 0x4388
0x45dd: mov byte ptr [rsp+0x20],bpl
0x45e2: jmp 0x42d3
0x45e7: mov rdi,qword ptr [r15]
0x45ea: call 0x49e0
0x45ef: mov edi,0x4
0x45f4: mov rsi,rax
0x45f7: call 0x9b20
0x45fc: lea rsi,[rip+0x7339]
0x4603: mov edx,0x5
0x4608: xor edi,edi
0x460a: mov rbp,rax
0x460d: call 0x1bd0
0x4612: mov r12,rax
0x4615: call 0x1b10
0x461a: mov esi,dword ptr [rax]
0x461c: mov rbx,rax
0x461f: mov rcx,rbp
0x4622: mov rdx,r12
0x4625: xor edi,edi
0x4627: xor eax,eax
0x4629: call 0x1e60
0x462e: mov rdi,r14
0x4631: call 0x7790
0x4636: mov dword ptr [rbx],0x0
0x463c: jmp 0x3efd
0x4641: lea rsi,[rip+0x72c8]
0x4648: mov edx,0x5
0x464d: xor edi,edi
0x464f: mov qword ptr [rsp+0x8],r8
0x4654: call 0x1bd0
0x4659: xor esi,esi
0x465b: mov rdx,rax
0x465e: xor edi,edi
0x4660: xor eax,eax
0x4662: call 0x1e60
0x4667: mov rdi,r14
0x466a: call 0x7790
0x466f: mov r8,qword ptr [rsp+0x8]
0x4674: mov dword ptr [r8],0x0
0x467b: jmp 0x3efd
0x4680: xor esi,esi
0x4682: mov rdi,rax
0x4685: call 0x5a90
0x468a: jmp 0x44c8
0x468f: xor edi,edi
0x4691: call 0x1ec0
0x4696: lea rsi,[rip+0x81eb]
0x469d: mov edx,0x5
0x46a2: xor edi,edi
0x46a4: call 0x1bd0
0x46a9: mov rbx,rax
0x46ac: call 0x1b10
0x46b1: mov esi,dword ptr [rax]
0x46b3: mov rdx,rbx
0x46b6: mov edi,0x1
0x46bb: xor eax,eax
0x46bd: call 0x1e60
0x46c2: call 0x1b10
0x46c7: cmp dword ptr [rax],0x1c
0x46ca: mov r15,rbx
0x46cd: mov r14,qword ptr [rsp+0x8]
0x46d2: mov rbx,rax
0x46d5: je 0x3ec9
0x46db: mov rsi,qword ptr [r15]
0x46de: mov edi,0x4
0x46e3: call 0x9b20
0x46e8: lea rsi,[rip+0x8171]
0x46ef: xor edi,edi
0x46f1: mov edx,0x5
0x46f6: mov rbp,rax
0x46f9: call 0x1bd0
0x46fe: mov esi,dword ptr [rbx]
0x4700: mov rdx,rax
0x4703: mov rcx,rbp
0x4706: xor edi,edi
0x4708: xor eax,eax
0x470a: call 0x1e60
0x470f: jmp 0x3eea
0x4714: mov rdi,qword ptr [rbp+0x8]
0x4718: call 0x9df0
0x471d: lea rsi,[rip+0x70cf]
0x4724: mov edx,0x5
0x4729: xor edi,edi
0x472b: mov rbp,rax
0x472e: call 0x1bd0
0x4733: mov rbx,rax
0x4736: call 0x1b10
0x473b: mov esi,dword ptr [rax]
0x473d: lea rdx,[rip+0x70be]
0x4744: mov r8,rbp
0x4747: mov rcx,rbx
0x474a: mov edi,0x1
0x474f: xor eax,eax
0x4751: call 0x1e60
0x4756: lea rsi,[rip+0x6f39]
0x475d: mov edx,0x5
0x4762: xor edi,edi
0x4764: call 0x1bd0
0x4769: mov rbx,rax
0x476c: call 0x1b10
0x4771: mov esi,dword ptr [rax]
0x4773: mov rdx,rbx
0x4776: mov edi,0x1
0x477b: xor eax,eax
0x477d: call 0x1e60
0x47a1: lea rsi,[rip+0x8170]
0x47a8: mov edx,0x5
0x47ad: xor edi,edi
0x47af: mov rbx,rax
0x47b2: call 0x1bd0
0x47b7: mov r9,qword ptr [rsp]
0x47bb: mov rdx,rax
0x47be: mov rcx,rbx
0x47c1: mov edi,0x1
0x47c6: xor eax,eax
0x47c8: mov esi,dword ptr [r9]
0x47cb: call 0x1e60
0x47e9: lea rsi,[rip+0x70d8]
0x47f0: mov rbx,rax
0x47f3: mov edx,0x5
0x47f8: xor edi,edi
0x47fa: call 0x1bd0
0x47ff: mov rcx,rbx
0x4802: mov rdx,rax
0x4805: xor esi,esi
0x4807: mov edi,0x1
0x480c: xor eax,eax
0x480e: call 0x1e60
0x483c: call 0x1c10
0x484b: mov edi,0x1
0x4850: call 0x1ec0
0x48ad: nop dword ptr [rax]
0x48da: hlt 
0x48db: nop dword ptr [rax+rax]
0x48e0: lea rdi,[rip+0x20b7d9]
0x48e7: push rbp
0x48e8: lea rax,[rip+0x20b7d1]
0x48ef: cmp rax,rdi
0x48f2: mov rbp,rsp
0x48f5: je 0x4910
0x48f7: mov rax,qword ptr [rip+0x20b6da]
0x48fe: test rax,rax
0x4901: je 0x4910
0x4903: pop rbp
0x4904: jmp rax
0x4910: pop rbp
0x4911: ret 
0x4920: lea rdi,[rip+0x20b799]
0x4927: lea rsi,[rip+0x20b792]
0x492e: push rbp
0x492f: sub rsi,rdi
0x4932: mov rbp,rsp
0x4935: sar rsi,0x3
0x4939: mov rax,rsi
0x493c: shr rax,0x3f
0x4940: add rsi,rax
0x4943: sar rsi, 1
0x4946: je 0x4960
0x4948: mov rax,qword ptr [rip+0x20b6a1]
0x494f: test rax,rax
0x4952: je 0x4960
0x4954: pop rbp
0x4955: jmp rax
0x4960: pop rbp
0x4961: ret 
0x4981: push rbp
0x4982: mov rbp,rsp
0x4985: je 0x4993
0x4987: mov rdi,qword ptr [rip+0x20b67a]
0x498e: call 0x1f40
0x4993: call 0x48e0
0x4998: mov byte ptr [rip+0x20b769],0x1
0x499f: pop rbp
0x49a0: ret 
0x49b0: push rbp
0x49b1: mov rbp,rsp
0x49b4: pop rbp
0x49b5: jmp 0x4920
0x49c0: movsxd rax,dword ptr [rdi+0x44]
0x49c4: xor edx,edx
0x49c6: div rsi
0x49c9: mov rax,rdx
0x49cc: ret 
0x49d0: mov eax,dword ptr [rsi+0x44]
0x49d3: cmp dword ptr [rdi+0x44],eax
0x49d6: sete al
0x49d9: ret 
0x4a55: lea rsi,[rip+0x6bb7]
0x4a5c: mov edx,0x5
0x4a61: xor edi,edi
0x4a63: mov r12,rax
0x4a66: call 0x1bd0
0x4a6b: mov rbp,rax
0x4a6e: call 0x1b10
0x4a73: mov r8d,ebx
0x4a76: mov rcx,r12
0x4a79: mov rdx,rbp
0x4a7c: pop rbx
0x4a7d: pop rbp
0x4a7e: pop r12
0x4a80: mov esi,dword ptr [rax]
0x4a82: xor edi,edi
0x4a84: xor eax,eax
0x4a86: jmp 0x1e60
0x4ad6: lea rsi,[rip+0x6b59]
0x4add: mov edx,0x5
0x4ae2: xor edi,edi
0x4ae4: mov rbp,rax
0x4ae7: call 0x1bd0
0x4aec: mov rbx,rax
0x4aef: call 0x1b10
0x4af4: mov esi,dword ptr [rax]
0x4af6: mov rcx,rbp
0x4af9: mov rdx,rbx
0x4afc: mov edi,0x1
0x4b01: xor eax,eax
0x4b03: call 0x1e60
0x4b08: nop dword ptr [rax+rax]
0x4c08: lea rsi,[rip+0x6a38]
0x4c0f: mov edx,0x5
0x4c14: xor edi,edi
0x4c16: mov rbp,rax
0x4c19: call 0x1bd0
0x4c1e: mov rbx,rax
0x4c21: call 0x1b10
0x4c26: mov esi,dword ptr [rax]
0x4c28: mov rcx,rbp
0x4c2b: xor eax,eax
0x4c2d: mov rdx,rbx
0x4c30: xor edi,edi
0x4c32: call 0x1e60
0x4c37: mov eax,0x1
0x4c3c: jmp 0x4bb8
0x4c41: call 0x1c10
0x4c46: nop word ptr cs:[rax+rax]
0x4cbf: cmp byte ptr [rip+0x20b34a],0x0
0x4cc6: lea rax,[rip+0x8334]
0x4ccd: lea rdx,[rip+0x832c]
0x4cd4: mov rcx,qword ptr [rsp+0x8]
0x4cd9: lea rsi,[rip+0x6978]
0x4ce0: mov edi,0x1
0x4ce5: cmovne rdx,rax
0x4ce9: xor eax,eax
0x4ceb: call 0x1e50
0x4cf0: mov byte ptr [rip+0x20b319],0x0
0x4d55: call 0x1c10
0x4d69: lea rsi,[rip+0x68d7]
0x4d70: mov edx,0x5
0x4d75: xor edi,edi
0x4d77: mov rbp,rax
0x4d7a: call 0x1bd0
0x4d7f: mov esi,dword ptr [rbx]
0x4d81: mov rdx,rax
0x4d84: mov rcx,rbp
0x4d87: mov edi,0x1
0x4d8c: xor eax,eax
0x4d8e: call 0x1e60
0x4d93: nop dword ptr [rax]
0x4d96: nop word ptr cs:[rax+rax]
0x4e5d: lea rsi,[rip+0x67e3]
0x4e64: mov edx,0x5
0x4e69: xor edi,edi
0x4e6b: mov rbp,rax
0x4e6e: call 0x1bd0
0x4e73: mov rbx,rax
0x4e76: call 0x1b10
0x4e7b: mov esi,dword ptr [rax]
0x4e7d: mov rcx,rbp
0x4e80: xor eax,eax
0x4e82: mov rdx,rbx
0x4e85: xor edi,edi
0x4e87: call 0x1e60
0x4e8c: mov eax,0x1
0x4e91: jmp 0x4e2a
0x4e93: call 0x1c10
0x4e98: nop dword ptr [rax+rax]
0x4f1a: lea rsi,[rip+0x6745]
0x4f21: mov rbx,rax
0x4f24: mov edx,0x5
0x4f29: xor edi,edi
0x4f2b: call 0x1bd0
0x4f30: mov esi,dword ptr [rbp]
0x4f33: mov rdx,rax
0x4f36: xor edi,edi
0x4f38: mov r8,r13
0x4f3b: mov rcx,rbx
0x4f3e: xor eax,eax
0x4f40: call 0x1e60
0x4f45: mov edi,0x1
0x4f4a: call 0x1ec0
0x4f4f: nop 
0x4f55: mov edx,0x5
0x4f5a: mov rbx,rax
0x4f5d: lea rsi,[rip+0x6ac4]
0x4f64: jmp 0x4f29
0x4f66: call 0x1c10
0x4f6b: nop dword ptr [rax+rax]
0x514f: lea rsi,[rip+0x64f1]
0x5156: mov edx,0x5
0x515b: xor edi,edi
0x515d: mov rbp,rax
0x5160: call 0x1bd0
0x5165: mov rbx,rax
0x5168: call 0x1b10
0x516d: mov esi,dword ptr [rax]
0x516f: mov rcx,rbp
0x5172: xor eax,eax
0x5174: mov rdx,rbx
0x5177: xor edi,edi
0x5179: call 0x1e60
0x517e: xor eax,eax
0x5180: jmp 0x50d5
0x51c0: call 0x1c10
0x51c5: nop 
0x51c6: nop word ptr cs:[rax+rax]
0x51d0: push r14
0x51d2: push r13
0x51d4: push r12
0x51d6: push rbp
0x51d7: push rbx
0x51d8: sub rsp,0xa0
0x51df: mov rax,qword ptr fs:0x28
0x51e8: mov qword ptr [rsp+0x98],rax
0x51f0: xor eax,eax
0x51f2: cmp dword ptr [rdi+0x38],-0x1
0x51f6: jne 0x5220
0x51f8: mov rax,qword ptr [rsp+0x98]
0x5200: xor rax,qword ptr fs:0x28
0x5209: jne 0x5392
0x520f: add rsp,0xa0
0x5216: pop rbx
0x5217: pop rbp
0x5218: pop r12
0x521a: pop r13
0x521c: pop r14
0x521e: ret 
0x5220: mov rbx,rdi
0x5223: mov rdi,qword ptr [rdi]
0x5226: mov r12,rsi
0x5229: call 0x49e0
0x522e: mov esi,dword ptr [rbx+0x38]
0x5231: mov rdx,rsp
0x5234: mov edi,0x1
0x5239: mov r13,rax
0x523c: call 0x1e00
0x5241: test eax,eax
0x5243: mov ebp,eax
0x5245: jne 0x52e0
0x524b: mov eax,dword ptr [rbx+0x30]
0x524e: and eax,0xf000
0x5253: cmp eax,0x8000
0x5258: je 0x5308
0x525e: cmp byte ptr [rip+0x20aeb0],0x0
0x5265: je 0x5271
0x5267: xor ebp,ebp
0x5269: cmp qword ptr [r12],rbx
0x526d: setne bpl
0x5271: mov edx,dword ptr [rbx+0x38]
0x5274: mov rcx,-0x1
0x527b: mov rsi,r13
0x527e: mov edi,ebp
0x5280: call 0x4c50
0x5285: add qword ptr [rbx+0x8],rax
0x5289: test rax,rax
0x528c: je 0x51f8
0x5292: mov rdi,qword ptr [rip+0x20ae2f]
0x5299: mov qword ptr [r12],rbx
0x529d: call 0x1ef0
0x52a2: test eax,eax
0x52a4: je 0x51f8
0x52aa: lea rsi,[rip+0x63e5]
0x52b1: mov edx,0x5
0x52b6: xor edi,edi
0x52b8: call 0x1bd0
0x52bd: mov rbx,rax
0x52c0: call 0x1b10
0x52c5: mov esi,dword ptr [rax]
0x52c7: mov rdx,rbx
0x52ca: mov edi,0x1
0x52cf: xor eax,eax
0x52d1: call 0x1e60
0x52d6: nop word ptr cs:[rax+rax]
0x52e0: call 0x1b10
0x52e5: mov eax,dword ptr [rax]
0x52e7: mov edi,dword ptr [rbx+0x38]
0x52ea: mov rsi,r13
0x52ed: mov dword ptr [rbx+0x3c],eax
0x52f0: call 0x4a20
0x52f5: mov dword ptr [rbx+0x38],0xffffffff
0x52fc: jmp 0x51f8
0x5308: mov rax,qword ptr [rbx+0x8]
0x530c: cmp qword ptr [rsp+0x30],rax
0x5311: jl 0x5340
0x5313: jne 0x525e
0x5319: mov rax,qword ptr [rbx+0x10]
0x531d: cmp qword ptr [rsp+0x58],rax
0x5322: jne 0x525e
0x5328: mov eax,dword ptr [rsp+0x60]
0x532c: cmp dword ptr [rbx+0x18],eax
0x532f: jne 0x525e
0x5335: jmp 0x51f8
0x5340: mov rdx,r13
0x5343: mov esi,0x3
0x5348: xor edi,edi
0x534a: call 0x9c20
0x534f: lea rsi,[rip+0x632d]
0x5356: mov r14,rax
0x5359: mov edx,0x5
0x535e: xor edi,edi
0x5360: call 0x1bd0
0x5365: mov rcx,r14
0x5368: mov rdx,rax
0x536b: xor esi,esi
0x536d: xor edi,edi
0x536f: xor eax,eax
0x5371: call 0x1e60
0x5376: mov edi,dword ptr [rbx+0x38]
0x5379: mov rcx,r13
0x537c: xor edx,edx
0x537e: xor esi,esi
0x5380: call 0x4ea0
0x5385: mov qword ptr [rbx+0x8],0x0
0x538d: jmp 0x525e
0x5392: call 0x1c10
0x5397: nop word ptr [rax+rax]
0x547d: lea rsi,[rip+0x65cc]
0x5484: xor edi,edi
0x5486: mov edx,0x5
0x548b: mov rbp,rax
0x548e: call 0x1bd0
0x5493: mov esi,dword ptr [r12]
0x5497: mov rdx,rax
0x549a: mov rcx,rbp
0x549d: xor edi,edi
0x549f: xor eax,eax
0x54a1: call 0x1e60
0x54a6: jmp 0x53dd
0x5a87: call 0x1c10
0x5a8c: nop dword ptr [rax]
0x5b87: mov esi,dword ptr [r13]
0x5b8b: lea rdx,[rip+0x6e3a]
0x5b92: mov rcx,rax
0x5b95: xor edi,edi
0x5b97: xor eax,eax
0x5b99: call 0x1e60
0x5b9e: mov rbp,qword ptr [rbx]
0x5d00: lea rsi,[rip+0x5a0c]
0x5d07: mov r14,rax
0x5d0a: mov edx,0x5
0x5d0f: xor edi,edi
0x5d11: call 0x1bd0
0x5d16: mov rcx,r14
0x5d19: mov rdx,rax
0x5d1c: xor esi,esi
0x5d1e: xor edi,edi
0x5d20: xor eax,eax
0x5d22: call 0x1e60
0x5d27: test ebp,ebp
0x5d29: mov eax,0xffffffff
0x5d2e: movzx r13d,r13b
0x5d32: cmove r13d,eax
0x5d36: mov rax,qword ptr [rsp+0x68]
0x5d3b: mov rdi,qword ptr [rbx]
0x5d3e: mov dword ptr [rbx+0x38],r12d
0x5d42: mov qword ptr [rbx+0x8],0x0
0x5d4a: mov dword ptr [rbx+0x40],r13d
0x5d4e: mov qword ptr [rbx+0x58],0x0
0x5d56: mov qword ptr [rbx+0x10],rax
0x5d5a: mov rax,qword ptr [rsp+0x70]
0x5d5f: mov byte ptr [rbx+0x34],0x0
0x5d63: mov qword ptr [rbx+0x18],rax
0x5d67: mov rax,qword ptr [rsp+0x10]
0x5d6c: mov qword ptr [rbx+0x20],rax
0x5d70: mov rax,qword ptr [rsp+0x18]
0x5d75: mov qword ptr [rbx+0x28],rax
0x5d79: mov eax,dword ptr [rsp+0x28]
0x5d7d: mov dword ptr [rbx+0x30],eax
0x5d80: call 0x49e0
0x5d85: xor edx,edx
0x5d87: mov rcx,rax
0x5d8a: xor esi,esi
0x5d8c: mov edi,r12d
0x5d8f: call 0x4ea0
0x5d94: jmp 0x5bce
0x5dd9: lea rsi,[rip+0x58f3]
0x5de0: mov edx,0x5
0x5de5: xor edi,edi
0x5de7: mov rbp,rax
0x5dea: call 0x1bd0
0x5def: mov esi,dword ptr [rbx+0x3c]
0x5df2: mov rcx,rbp
0x5df5: mov rdx,rax
0x5df8: xor edi,edi
0x5dfa: xor eax,eax
0x5dfc: call 0x1e60
0x5e01: mov rbp,qword ptr [rbx]
0x5e04: jmp 0x5ba1
0x5e1d: mov rdi,qword ptr [rbx]
0x5e20: mov dword ptr [rbx+0x3c],0xffffffff
0x5e27: call 0x49e0
0x5e2c: mov edi,0x4
0x5e31: mov rsi,rax
0x5e34: call 0x9b20
0x5e39: lea rsi,[rip+0x5cb0]
0x5e40: mov rbp,rax
0x5e43: mov edx,0x5
0x5e48: xor edi,edi
0x5e4a: call 0x1bd0
0x5e4f: mov rcx,rbp
0x5e52: mov rdx,rax
0x5e55: xor esi,esi
0x5e57: xor edi,edi
0x5e59: xor eax,eax
0x5e5b: call 0x1e60
0x5e60: mov byte ptr [rbx+0x34],0x1
0x5e64: mov byte ptr [rbx+0x35],0x1
0x5e68: mov rbp,qword ptr [rbx]
0x5e6b: jmp 0x5ba1
0x5eaf: lea rsi,[rip+0x5c0a]
0x5eb6: mov rbp,rax
0x5eb9: mov edx,0x5
0x5ebe: xor edi,edi
0x5ec0: call 0x1bd0
0x5ec5: mov r8,r13
0x5ec8: mov rdx,rax
0x5ecb: mov rcx,rbp
0x5ece: xor esi,esi
0x5ed0: xor edi,edi
0x5ed2: xor eax,eax
0x5ed4: call 0x1e60
0x5ee8: lea r8,[rsp+0x10]
0x5eed: mov rsi,qword ptr [rbx]
0x5ef0: mov edi,0x1
0x5ef5: mov rdx,r8
0x5ef8: call 0x1c00
0x5efd: test eax,eax
0x5eff: jne 0x5b42
0x5f05: mov eax,dword ptr [rsp+0x28]
0x5f09: and eax,0xf000
0x5f0e: cmp eax,0xa000
0x5f13: jne 0x5b42
0x5f19: mov rdi,qword ptr [rbx]
0x5f1c: mov dword ptr [rbx+0x3c],0xffffffff
0x5f23: mov byte ptr [rbx+0x34],0x1
0x5f27: call 0x49e0
0x5f2c: mov edi,0x4
0x5f31: mov rsi,rax
0x5f34: call 0x9b20
0x5f39: lea rsi,[rip+0x5b48]
0x5f40: mov rbp,rax
0x5f43: mov edx,0x5
0x5f48: xor edi,edi
0x5f4a: call 0x1bd0
0x5f4f: mov rcx,rbp
0x5f52: mov rdx,rax
0x5f55: xor esi,esi
0x5f57: xor edi,edi
0x5f59: xor eax,eax
0x5f5b: call 0x1e60
0x5f60: mov rbp,qword ptr [rbx]
0x5f63: jmp 0x5ba1
0x5f80: mov rsi,qword ptr [rbx]
0x5f83: mov rdx,r8
0x5f86: mov edi,0x1
0x5f8b: mov qword ptr [rsp+0x8],r8
0x5f90: call 0x1c00
0x5f95: test eax,eax
0x5f97: mov r8,qword ptr [rsp+0x8]
0x5f9c: jne 0x5c2b
0x5fa2: mov eax,dword ptr [rsp+0x28]
0x5fa6: and eax,0xf000
0x5fab: cmp eax,0xa000
0x5fb0: jne 0x5c2b
0x5fb6: jmp 0x5f19
0x6012: lea rsi,[rip+0x5b37]
0x6019: mov r14,rax
0x601c: xor edi,edi
0x601e: mov edx,0x5
0x6023: call 0x1bd0
0x6028: xor esi,esi
0x602a: mov rdx,rax
0x602d: mov rcx,r14
0x6030: xor edi,edi
0x6032: xor eax,eax
0x6034: call 0x1e60
0x6039: mov rdi,qword ptr [rbx]
0x603c: call 0x49e0
0x6041: mov edi,dword ptr [rbx+0x38]
0x6044: mov rsi,rax
0x6047: call 0x4a20
0x604c: jmp 0x5d27
0x6058: lea rdx,[rsp+0x10]
0x605d: mov rsi,rbp
0x6060: mov edi,0x1
0x6065: call 0x1c00
0x606a: test eax,eax
0x606c: jne 0x5b4c
0x6072: mov eax,dword ptr [rsp+0x28]
0x6076: and eax,0xf000
0x607b: cmp eax,0xa000
0x6080: jne 0x5b4c
0x6086: jmp 0x5f19
0x60a2: mov edx,0x5
0x60a7: mov r14,rax
0x60aa: lea rsi,[rip+0x5a77]
0x60b1: jmp 0x5d0f
0x60b6: call 0x1c10
0x610f: nop 
0x65d0: mov edi,0x1
0x65d5: jmp 0x6110
0x66e0: mov byte ptr [rsp+0x17],0x1
0x66e5: jmp 0x6667
0x6733: mov rdx,r12
0x6736: mov rbp,rax
0x6739: mov esi,0x8
0x673e: xor edi,edi
0x6740: call 0x9a00
0x6745: mov r8,rbp
0x6748: mov rdx,rbx
0x674b: mov rcx,rax
0x674e: pop rbx
0x674f: pop rbp
0x6750: pop r12
0x6752: xor esi,esi
0x6754: xor edi,edi
0x6756: xor eax,eax
0x6758: jmp 0x1e60
0x6780: push r15
0x6782: push r14
0x6784: mov r14,rdi
0x6787: push r13
0x6789: push r12
0x678b: xor edi,edi
0x678d: push rbp
0x678e: push rbx
0x678f: mov rbp,rsi
0x6792: lea rsi,[rip+0x6214]
0x6799: mov r12,rdx
0x679c: mov edx,0x5
0x67a1: sub rsp,0x8
0x67a5: mov rbx,qword ptr [rip+0x209954]
0x67ac: call 0x1bd0
0x67b1: mov rdi,rax
0x67b4: mov rsi,rbx
0x67b7: call 0x1d20
0x67bc: mov r15,qword ptr [r14]
0x67bf: test r15,r15
0x67c2: je 0x6858
0x67c8: xor r13d,r13d
0x67cb: xor ebx,ebx
0x67cd: jmp 0x6808
0x67d0: mov rdi,r15
0x67d3: add rbx,0x1
0x67d7: mov r13,rbp
0x67da: call 0x9df0
0x67df: mov rdi,qword ptr [rip+0x20991a]
0x67e6: lea rdx,[rip+0x61d5]
0x67ed: mov rcx,rax
0x67f0: mov esi,0x1
0x67f5: xor eax,eax
0x67f7: add rbp,r12
0x67fa: call 0x1ee0
0x67ff: mov r15,qword ptr [r14+rbx*8]
0x6803: test r15,r15
0x6806: je 0x6858
0x6808: test rbx,rbx
0x680b: je 0x67d0
0x680d: mov rdx,r12
0x6810: mov rsi,rbp
0x6813: mov rdi,r13
0x6816: call 0x1d10
0x681b: test eax,eax
0x681d: jne 0x67d0
0x681f: mov rdi,r15
0x6822: add rbx,0x1
0x6826: add rbp,r12
0x6829: call 0x9df0
0x682e: mov rdi,qword ptr [rip+0x2098cb]
0x6835: lea rdx,[rip+0x618e]
0x683c: mov rcx,rax
0x683f: mov esi,0x1
0x6844: xor eax,eax
0x6846: call 0x1ee0
0x684b: mov r15,qword ptr [r14+rbx*8]
0x684f: test r15,r15
0x6852: jne 0x6808
0x6854: nop dword ptr [rax]
0x6858: mov rdi,qword ptr [rip+0x2098a1]
0x685f: mov rax,qword ptr [rdi+0x28]
0x6863: cmp rax,qword ptr [rdi+0x30]
0x6867: jae 0x6888
0x6869: lea rdx,[rax+0x1]
0x686d: mov qword ptr [rdi+0x28],rdx
0x6871: mov byte ptr [rax],0xa
0x6874: add rsp,0x8
0x6878: pop rbx
0x6879: pop rbp
0x687a: pop r12
0x687c: pop r13
0x687e: pop r14
0x6880: pop r15
0x6882: ret 
0x6888: add rsp,0x8
0x688c: mov esi,0xa
0x6891: pop rbx
0x6892: pop rbp
0x6893: pop r12
0x6895: pop r13
0x6897: pop r14
0x6899: pop r15
0x689b: jmp 0x1c80
0x68f3: mov rdx,r15
0x68f6: mov rsi,rbp
0x68f9: mov rdi,rbx
0x68fc: call 0x6780
0x6901: call r13
0x6904: mov rax,-0x1
0x690b: jmp 0x68d6
0x6910: push r14
0x6912: push r13
0x6914: push r12
0x6916: push rbp
0x6917: push rbx
0x6918: mov r14,qword ptr [rsi]
0x691b: test r14,r14
0x691e: je 0x6951
0x6920: mov r12,rcx
0x6923: mov r13,rdi
0x6926: mov rbp,rdx
0x6929: lea rbx,[rsi+0x8]
0x692d: jmp 0x693f
0x6930: mov r14,qword ptr [rbx]
0x6933: add rbp,r12
0x6936: add rbx,0x8
0x693a: test r14,r14
0x693d: je 0x6951
0x693f: mov rdx,r12
0x6942: mov rsi,rbp
0x6945: mov rdi,r13
0x6948: call 0x1d10
0x694d: test eax,eax
0x694f: jne 0x6930
0x6951: pop rbx
0x6952: mov rax,r14
0x6955: pop rbp
0x6956: pop r12
0x6958: pop r13
0x695a: pop r14
0x695c: ret 
0x6a13: nop word ptr cs:[rax+rax]
0x6a1d: nop dword ptr [rax]
0x6a20: mov qword ptr [rip+0x209701],rdi
0x6a27: ret 
0x6a30: mov byte ptr [rip+0x2096e9],dil
0x6a37: ret 
0x6a40: push rbp
0x6a41: push rbx
0x6a42: sub rsp,0x8
0x6a46: mov rdi,qword ptr [rip+0x20967b]
0x6a4d: call 0xb250
0x6a52: test eax,eax
0x6a54: je 0x6a6c
0x6a56: call 0x1b10
0x6a5b: cmp byte ptr [rip+0x2096be],0x0
0x6a62: mov rbx,rax
0x6a65: je 0x6a83
0x6a67: cmp dword ptr [rax],0x20
0x6a6a: jne 0x6a83
0x6a6c: mov rdi,qword ptr [rip+0x20968d]
0x6a73: call 0xb250
0x6a78: test eax,eax
0x6a7a: jne 0x6ac2
0x6a7c: add rsp,0x8
0x6a80: pop rbx
0x6a81: pop rbp
0x6a82: ret 
0x6a83: lea rsi,[rip+0x4c0c]
0x6a8a: xor edi,edi
0x6a8c: mov edx,0x5
0x6a91: call 0x1bd0
0x6a96: mov rdi,qword ptr [rip+0x20968b]
0x6a9d: mov rbp,rax
0x6aa0: test rdi,rdi
0x6aa3: je 0x6acd
0x6aa5: call 0x9bf0
0x6aaa: mov esi,dword ptr [rbx]
0x6aac: lea rdx,[rip+0x4d4f]
0x6ab3: mov rcx,rax
0x6ab6: mov r8,rbp
0x6ab9: xor edi,edi
0x6abb: xor eax,eax
0x6abd: call 0x1e60
0x6ac2: mov edi,dword ptr [rip+0x209578]
0x6ac8: call 0x1b30
0x6acd: mov esi,dword ptr [rbx]
0x6acf: lea rdx,[rip+0x5ef6]
0x6ad6: mov rcx,rax
0x6ad9: xor edi,edi
0x6adb: xor eax,eax
0x6add: call 0x1e60
0x6ae2: jmp 0x6ac2
0x6af0: push rbp
0x6af1: push rbx
0x6af2: xor ebp,ebp
0x6af4: mov rbx,rdi
0x6af7: sub rsp,0x8
0x6afb: cmp byte ptr [rdi],0x2f
0x6afe: sete bpl
0x6b02: call 0x6bb0
0x6b07: mov rcx,rax
0x6b0a: sub rcx,rbx
0x6b0d: cmp rcx,rbp
0x6b10: jbe 0x6b40
0x6b12: cmp byte ptr [rax-0x1],0x2f
0x6b16: lea rdx,[rcx-0x1]
0x6b1a: je 0x6b2e
0x6b1c: jmp 0x6b40
0x6b20: cmp byte ptr [rbx+rdx-0x1],0x2f
0x6b25: lea rax,[rdx-0x1]
0x6b29: jne 0x6b33
0x6b2b: mov rdx,rax
0x6b2e: cmp rbp,rdx
0x6b31: jne 0x6b20
0x6b33: add rsp,0x8
0x6b37: mov rax,rdx
0x6b3a: pop rbx
0x6b3b: pop rbp
0x6b3c: ret 
0x6b40: add rsp,0x8
0x6b44: mov rdx,rcx
0x6b47: mov rax,rdx
0x6b4a: pop rbx
0x6b4b: pop rbp
0x6b4c: ret 
0x6b50: push rbp
0x6b51: push rbx
0x6b52: mov rbp,rdi
0x6b55: sub rsp,0x8
0x6b59: call 0x6af0
0x6b5e: test rax,rax
0x6b61: mov rbx,rax
0x6b64: sete al
0x6b67: movzx eax,al
0x6b6a: lea rdi,[rbx+rax+0x1]
0x6b6f: call 0x1dc0
0x6b74: test rax,rax
0x6b77: mov rcx,rax
0x6b7a: je 0x6b96
0x6b7c: mov rdx,rbx
0x6b7f: mov rsi,rbp
0x6b82: mov rdi,rax
0x6b85: call 0x1d60
0x6b8a: test rbx,rbx
0x6b8d: mov rcx,rax
0x6b90: je 0x6ba0
0x6b92: mov byte ptr [rcx+rbx],0x0
0x6b96: add rsp,0x8
0x6b9a: mov rax,rcx
0x6b9d: pop rbx
0x6b9e: pop rbp
0x6b9f: ret 
0x6ba0: mov byte ptr [rax],0x2e
0x6ba3: mov ebx,0x1
0x6ba8: jmp 0x6b92
0x6bb0: movzx edx,byte ptr [rdi]
0x6bb3: mov rax,rdi
0x6bb6: cmp dl,0x2f
0x6bb9: jne 0x6bcc
0x6bbb: nop dword ptr [rax+rax]
0x6bc0: add rax,0x1
0x6bc4: movzx edx,byte ptr [rax]
0x6bc7: cmp dl,0x2f
0x6bca: je 0x6bc0
0x6bcc: test dl,dl
0x6bce: je 0x6c0a
0x6bd0: mov rcx,rax
0x6bd3: xor esi,esi
0x6bd5: jmp 0x6bf5
0x6be0: test sil,sil
0x6be3: je 0x6bea
0x6be5: mov rax,rcx
0x6be8: xor esi,esi
0x6bea: add rcx,0x1
0x6bee: movzx edx,byte ptr [rcx]
0x6bf1: test dl,dl
0x6bf3: je 0x6c0a
0x6bf5: cmp dl,0x2f
0x6bf8: jne 0x6be0
0x6bfa: add rcx,0x1
0x6bfe: movzx edx,byte ptr [rcx]
0x6c01: mov esi,0x1
0x6c06: test dl,dl
0x6c08: jne 0x6bf5
0x6c0a: rep ret 
0x6c10: push rbx
0x6c11: mov rbx,rdi
0x6c14: call 0x1bf0
0x6c19: cmp rax,0x1
0x6c1d: jbe 0x6c2a
0x6c1f: cmp byte ptr [rbx+rax-0x1],0x2f
0x6c24: lea rdx,[rax-0x1]
0x6c28: je 0x6c38
0x6c2a: pop rbx
0x6c2b: ret 
0x6c30: mov rdx,rax
0x6c33: nop dword ptr [rax+rax]
0x6c38: cmp rdx,0x1
0x6c3c: je 0x6c50
0x6c3e: cmp byte ptr [rbx+rdx-0x1],0x2f
0x6c43: lea rax,[rdx-0x1]
0x6c47: je 0x6c30
0x6c49: mov rax,rdx
0x6c4c: pop rbx
0x6c4d: ret 
0x6c50: mov eax,0x1
0x6c55: pop rbx
0x6c56: ret 
0x6ca8: lea rax,[rsp+0x60]
0x6cad: mov dword ptr [rsp],0x10
0x6cb4: mov edx,dword ptr [rsp+0x30]
0x6cb8: mov qword ptr [rsp+0x8],rax
0x6cbd: lea rax,[rsp+0x20]
0x6cc2: mov qword ptr [rsp+0x10],rax
0x6cc7: jmp 0x6c81
0x6cc9: call 0x1c10
0x6cce: nop 
0x6cd0: cmp rdi,0xa
0x6cd4: mov eax,0xa
0x6cd9: movabsq r9,-0x5555555555555555
0x6ce3: cmovb rdi,rax
0x6ce7: or rdi,0x1
0x6ceb: cmp rdi,-0x1
0x6cef: je 0x6d5f
0x6cf1: nop dword ptr [rax]
0x6cf8: mov rax,rdi
0x6cfb: mov rcx,rdi
0x6cfe: mul r9
0x6d01: mov rax,rdx
0x6d04: shr rax, 1
0x6d07: lea rax,[rax+rax*2]
0x6d0b: sub rcx,rax
0x6d0e: cmp rdi,0x9
0x6d12: mov rax,rcx
0x6d15: jbe 0x6d50
0x6d17: test rcx,rcx
0x6d1a: je 0x6d55
0x6d1c: mov r8d,0x10
0x6d22: mov esi,0x9
0x6d27: mov ecx,0x3
0x6d2c: jmp 0x6d39
0x6d30: add r8,0x8
0x6d34: test rdx,rdx
0x6d37: je 0x6d55
0x6d39: add rcx,0x2
0x6d3d: xor edx,edx
0x6d3f: mov rax,rdi
0x6d42: div rcx
0x6d45: add rsi,r8
0x6d48: cmp rsi,rdi
0x6d4b: mov rax,rdx
0x6d4e: jb 0x6d30
0x6d50: test rax,rax
0x6d53: jne 0x6d5f
0x6d55: add rdi,0x2
0x6d59: cmp rdi,-0x1
0x6d5d: jne 0x6cf8
0x6d5f: mov rax,rdi
0x6d62: ret 
0x6d70: mov rax,rdi
0x6d73: xor edx,edx
0x6d75: ror rax,0x3
0x6d79: div rsi
0x6d7c: mov rax,rdx
0x6d7f: ret 
0x6d80: cmp rdi,rsi
0x6d83: sete al
0x6d86: ret 
0x6d90: push rbx
0x6d91: mov rbx,rdi
0x6d94: mov rdi,rsi
0x6d97: mov rsi,qword ptr [rbx+0x10]
0x6d9b: call qword ptr [rbx+0x30]
0x6d9e: cmp qword ptr [rbx+0x10],rax
0x6da2: jbe 0x6dad
0x6da4: shl rax,0x4
0x6da8: add rax,qword ptr [rbx]
0x6dab: pop rbx
0x6dac: ret 
0x6dad: call 0x1b00
0x6db2: nop dword ptr [rax]
0x6db6: nop word ptr cs:[rax+rax]
0x6dc0: push r14
0x6dc2: push r13
0x6dc4: mov r14,rdx
0x6dc7: push r12
0x6dc9: push rbp
0x6dca: mov r12,rdi
0x6dcd: push rbx
0x6dce: mov rbp,rsi
0x6dd1: mov r13d,ecx
0x6dd4: call 0x6d90
0x6dd9: mov qword ptr [r14],rax
0x6ddc: mov rsi,qword ptr [rax]
0x6ddf: test rsi,rsi
0x6de2: je 0x6ed0
0x6de8: cmp rsi,rbp
0x6deb: mov rbx,rax
0x6dee: je 0x6e83
0x6df4: mov rdi,rbp
0x6df7: call qword ptr [r12+0x38]
0x6dfc: test al,al
0x6dfe: jne 0x6e80
0x6e04: mov rax,qword ptr [rbx+0x8]
0x6e08: test rax,rax
0x6e0b: je 0x6ed0
0x6e11: mov rsi,qword ptr [rax]
0x6e14: cmp rbp,rsi
0x6e17: jne 0x6e39
0x6e19: jmp 0x6e4c
0x6e20: mov rbx,qword ptr [rbx+0x8]
0x6e24: mov rax,qword ptr [rbx+0x8]
0x6e28: test rax,rax
0x6e2b: je 0x6ed0
0x6e31: mov rsi,qword ptr [rax]
0x6e34: cmp rsi,rbp
0x6e37: je 0x6e4c
0x6e39: mov rdi,rbp
0x6e3c: call qword ptr [r12+0x38]
0x6e41: test al,al
0x6e43: je 0x6e20
0x6e45: mov rax,qword ptr [rbx+0x8]
0x6e49: mov rsi,qword ptr [rax]
0x6e4c: test r13b,r13b
0x6e4f: je 0x6e6e
0x6e51: mov rdx,qword ptr [rax+0x8]
0x6e55: mov qword ptr [rbx+0x8],rdx
0x6e59: mov qword ptr [rax],0x0
0x6e60: mov rdx,qword ptr [r12+0x48]
0x6e65: mov qword ptr [rax+0x8],rdx
0x6e69: mov qword ptr [r12+0x48],rax
0x6e6e: pop rbx
0x6e6f: mov rax,rsi
0x6e72: pop rbp
0x6e73: pop r12
0x6e75: pop r13
0x6e77: pop r14
0x6e79: ret 
0x6e80: mov rsi,qword ptr [rbx]
0x6e83: test r13b,r13b
0x6e86: je 0x6e6e
0x6e88: mov rax,qword ptr [rbx+0x8]
0x6e8c: test rax,rax
0x6e8f: je 0x6ec0
0x6e91: movdqu xmm0,[rax]
0x6e95: movups [rbx],xmm0
0x6e98: mov qword ptr [rax],0x0
0x6e9f: mov rdx,qword ptr [r12+0x48]
0x6ea4: mov qword ptr [rax+0x8],rdx
0x6ea8: mov qword ptr [r12+0x48],rax
0x6ead: mov rax,rsi
0x6eb0: pop rbx
0x6eb1: pop rbp
0x6eb2: pop r12
0x6eb4: pop r13
0x6eb6: pop r14
0x6eb8: ret 
0x6ec0: mov qword ptr [rbx],0x0
0x6ec7: jmp 0x6e6e
0x6ed0: xor esi,esi
0x6ed2: pop rbx
0x6ed3: mov rax,rsi
0x6ed6: pop rbp
0x6ed7: pop r12
0x6ed9: pop r13
0x6edb: pop r14
0x6edd: ret 
0x6ee0: mov rdx,qword ptr [rdi]
0x6ee3: lea rcx,[rip+0x5b56]
0x6eea: mov eax,0x1
0x6eef: cmp rdx,rcx
0x6ef2: je 0x6f55
0x6ef4: movxd xmm0,[rdx+0x8]
0x6ef9: ucomiss xmm0,[rip+0x5b54]
0x6f00: jbe 0x6f50
0x6f02: movxd xmm1,[rip+0x5b4e]
0x6f0a: ucomiss xmm1,xmm0
0x6f0d: jbe 0x6f50
0x6f0f: movxd xmm1,[rdx+0xc]
0x6f14: ucomiss xmm1,[rip+0x5b41]
0x6f1b: jbe 0x6f50
0x6f1d: movxd xmm1,[rdx]
0x6f21: ucomiss xmm1,[rip+0x5b38]
0x6f28: jb 0x6f50
0x6f2a: addss xmm1,[rip+0x5b22]
0x6f32: movxd xmm2,[rdx+0x4]
0x6f37: ucomiss xmm2,xmm1
0x6f3a: jbe 0x6f50
0x6f3c: movxd xmm3,[rip+0x5b20]
0x6f44: ucomiss xmm3,xmm2
0x6f47: jb 0x6f50
0x6f49: ucomiss xmm0,xmm1
0x6f4c: ja 0x6f55
0x6f4e: nop 
0x6f50: mov qword ptr [rdi],rcx
0x6f53: xor eax,eax
0x6f55: rep ret 
0x6f60: push r15
0x6f62: push r14
0x6f64: push r13
0x6f66: push r12
0x6f68: push rbp
0x6f69: push rbx
0x6f6a: sub rsp,0x8
0x6f6e: mov r12,qword ptr [rsi]
0x6f71: cmp r12,qword ptr [rsi+0x8]
0x6f75: jae 0x7058
0x6f7b: mov rbp,rdi
0x6f7e: mov r13,rsi
0x6f81: mov r14d,edx
0x6f84: nop dword ptr [rax]
0x6f88: mov r15,qword ptr [r12]
0x6f8c: test r15,r15
0x6f8f: je 0x704a
0x6f95: mov rbx,qword ptr [r12+0x8]
0x6f9a: test rbx,rbx
0x6f9d: jne 0x6fbc
0x6f9f: jmp 0x6ffb
0x6fa8: mov rcx,qword ptr [rax+0x8]
0x6fac: test rdx,rdx
0x6faf: mov qword ptr [rbx+0x8],rcx
0x6fb3: mov qword ptr [rax+0x8],rbx
0x6fb7: mov rbx,rdx
0x6fba: je 0x6ff7
0x6fbc: mov r15,qword ptr [rbx]
0x6fbf: mov rdi,rbp
0x6fc2: mov rsi,r15
0x6fc5: call 0x6d90
0x6fca: cmp qword ptr [rax],0x0
0x6fce: mov rdx,qword ptr [rbx+0x8]
0x6fd2: jne 0x6fa8
0x6fd4: mov qword ptr [rax],r15
0x6fd7: add qword ptr [rbp+0x18],0x1
0x6fdc: test rdx,rdx
0x6fdf: mov qword ptr [rbx],0x0
0x6fe6: mov rax,qword ptr [rbp+0x48]
0x6fea: mov qword ptr [rbx+0x8],rax
0x6fee: mov qword ptr [rbp+0x48],rbx
0x6ff2: mov rbx,rdx
0x6ff5: jne 0x6fbc
0x6ff7: mov r15,qword ptr [r12]
0x6ffb: test r14b,r14b
0x6ffe: mov qword ptr [r12+0x8],0x0
0x7007: jne 0x704a
0x7009: mov rsi,r15
0x700c: mov rdi,rbp
0x700f: call 0x6d90
0x7014: cmp qword ptr [rax],0x0
0x7018: mov rbx,rax
0x701b: je 0x7070
0x701d: mov rax,qword ptr [rbp+0x48]
0x7021: test rax,rax
0x7024: je 0x7080
0x7026: mov rdx,qword ptr [rax+0x8]
0x702a: mov qword ptr [rbp+0x48],rdx
0x702e: mov rdx,qword ptr [rbx+0x8]
0x7032: mov qword ptr [rax],r15
0x7035: mov qword ptr [rax+0x8],rdx
0x7039: mov qword ptr [rbx+0x8],rax
0x703d: mov qword ptr [r12],0x0
0x7045: sub qword ptr [r13+0x18],0x1
0x704a: add r12,0x10
0x704e: cmp qword ptr [r13+0x8],r12
0x7052: ja 0x6f88
0x7058: add rsp,0x8
0x705c: mov eax,0x1
0x7061: pop rbx
0x7062: pop rbp
0x7063: pop r12
0x7065: pop r13
0x7067: pop r14
0x7069: pop r15
0x706b: ret 
0x7070: mov qword ptr [rax],r15
0x7073: add qword ptr [rbp+0x18],0x1
0x7078: jmp 0x703d
0x7080: mov edi,0x10
0x7085: call 0x1dc0
0x708a: test rax,rax
0x708d: jne 0x702e
0x708f: add rsp,0x8
0x7093: xor eax,eax
0x7095: pop rbx
0x7096: pop rbp
0x7097: pop r12
0x7099: pop r13
0x709b: pop r14
0x709d: pop r15
0x709f: ret 
0x70a0: mov rax,qword ptr [rdi+0x10]
0x70a4: ret 
0x70b0: mov rax,qword ptr [rdi+0x18]
0x70b4: ret 
0x70c0: mov rax,qword ptr [rdi+0x20]
0x70c4: ret 
0x70d0: mov rsi,qword ptr [rdi]
0x70d3: mov rdi,qword ptr [rdi+0x8]
0x70d7: xor eax,eax
0x70d9: cmp rsi,rdi
0x70dc: jae 0x7117
0x70de: nop 
0x70e0: cmp qword ptr [rsi],0x0
0x70e4: je 0x710c
0x70e6: mov rdx,qword ptr [rsi+0x8]
0x70ea: mov ecx,0x1
0x70ef: test rdx,rdx
0x70f2: je 0x7105
0x70f4: nop dword ptr [rax]
0x70f8: mov rdx,qword ptr [rdx+0x8]
0x70fc: add rcx,0x1
0x7100: test rdx,rdx
0x7103: jne 0x70f8
0x7105: cmp rax,rcx
0x7108: cmovb rax,rcx
0x710c: add rsi,0x10
0x7110: cmp rsi,rdi
0x7113: jb 0x70e0
0x7115: rep ret 
0x7117: rep ret 
0x7120: mov rcx,qword ptr [rdi]
0x7123: mov r8,qword ptr [rdi+0x8]
0x7127: xor edx,edx
0x7129: xor esi,esi
0x712b: cmp rcx,r8
0x712e: jae 0x7166
0x7130: cmp qword ptr [rcx],0x0
0x7134: je 0x715d
0x7136: mov rax,qword ptr [rcx+0x8]
0x713a: add rsi,0x1
0x713e: add rdx,0x1
0x7142: test rax,rax
0x7145: je 0x715d
0x7147: nop word ptr [rax+rax]
0x7150: mov rax,qword ptr [rax+0x8]
0x7154: add rdx,0x1
0x7158: test rax,rax
0x715b: jne 0x7150
0x715d: add rcx,0x10
0x7161: cmp rcx,r8
0x7164: jb 0x7130
0x7166: xor eax,eax
0x7168: cmp qword ptr [rdi+0x18],rsi
0x716c: je 0x7170
0x716e: rep ret 
0x7170: cmp qword ptr [rdi+0x20],rdx
0x7174: sete al
0x7177: ret 
0x7180: push r13
0x7182: push r12
0x7184: mov r12,rsi
0x7187: push rbp
0x7188: push rbx
0x7189: xor ebx,ebx
0x718b: sub rsp,0x8
0x718f: mov rsi,qword ptr [rdi]
0x7192: mov rcx,qword ptr [rdi+0x20]
0x7196: mov rbp,qword ptr [rdi+0x10]
0x719a: mov r13,qword ptr [rdi+0x18]
0x719e: mov rdi,qword ptr [rdi+0x8]
0x71a2: cmp rsi,rdi
0x71a5: jae 0x71e5
0x71a7: nop word ptr [rax+rax]
0x71b0: cmp qword ptr [rsi],0x0
0x71b4: je 0x71dc
0x71b6: mov rax,qword ptr [rsi+0x8]
0x71ba: mov edx,0x1
0x71bf: test rax,rax
0x71c2: je 0x71d5
0x71c4: nop dword ptr [rax]
0x71c8: mov rax,qword ptr [rax+0x8]
0x71cc: add rdx,0x1
0x71d0: test rax,rax
0x71d3: jne 0x71c8
0x71d5: cmp rbx,rdx
0x71d8: cmovb rbx,rdx
0x71dc: add rsi,0x10
0x71e0: cmp rsi,rdi
0x71e3: jb 0x71b0
0x71e5: lea rdx,[rip+0x57e3]
0x71ec: mov esi,0x1
0x71f1: mov rdi,r12
0x71f4: xor eax,eax
0x71f6: call 0x1ee0
0x71fb: lea rdx,[rip+0x57e5]
0x7202: xor eax,eax
0x7204: mov rcx,rbp
0x7207: mov esi,0x1
0x720c: mov rdi,r12
0x720f: call 0x1ee0
0x7214: test r13,r13
0x7217: js 0x7280
0x7219: pxor xmm0,xmm0
0x721d: test rbp,rbp
0x7220: cvtsi2sdq xmm0,r13
0x7225: mulsd xmm0,[rip+0x584b]
0x722d: js 0x72a9
0x722f: pxor xmm1,xmm1
0x7233: cvtsi2sdq xmm1,rbp
0x7238: divsd xmm0,xmm1
0x723c: lea rdx,[rip+0x57d5]
0x7243: mov rcx,r13
0x7246: mov rdi,r12
0x7249: mov esi,0x1
0x724e: mov eax,0x1
0x7253: call 0x1ee0
0x7258: add rsp,0x8
0x725c: mov rcx,rbx
0x725f: mov rdi,r12
0x7262: pop rbx
0x7263: pop rbp
0x7264: pop r12
0x7266: pop r13
0x7268: lea rdx,[rip+0x5790]
0x726f: mov esi,0x1
0x7274: xor eax,eax
0x7276: jmp 0x1ee0
0x7280: mov rax,r13
0x7283: mov rdx,r13
0x7286: pxor xmm0,xmm0
0x728a: shr rax, 1
0x728d: and edx,0x1
0x7290: or rax,rdx
0x7293: test rbp,rbp
0x7296: cvtsi2sdq xmm0,rax
0x729b: addsd xmm0,xmm0
0x729f: mulsd xmm0,[rip+0x57d1]
0x72a7: jns 0x722f
0x72a9: mov rax,rbp
0x72ac: pxor xmm1,xmm1
0x72b0: shr rax, 1
0x72b3: and ebp,0x1
0x72b6: or rax,rbp
0x72b9: cvtsi2sdq xmm1,rax
0x72be: addsd xmm1,xmm1
0x72c2: jmp 0x7238
0x72d0: push r12
0x72d2: push rbp
0x72d3: mov r12,rdi
0x72d6: push rbx
0x72d7: mov rbp,rsi
0x72da: call 0x6d90
0x72df: mov rsi,qword ptr [rax]
0x72e2: test rsi,rsi
0x72e5: je 0x730d
0x72e7: mov rbx,rax
0x72ea: jmp 0x72f3
0x72f0: mov rsi,qword ptr [rbx]
0x72f3: cmp rsi,rbp
0x72f6: je 0x730f
0x72f8: mov rdi,rbp
0x72fb: call qword ptr [r12+0x38]
0x7300: test al,al
0x7302: jne 0x7320
0x7304: mov rbx,qword ptr [rbx+0x8]
0x7308: test rbx,rbx
0x730b: jne 0x72f0
0x730d: xor esi,esi
0x730f: pop rbx
0x7310: mov rax,rsi
0x7313: pop rbp
0x7314: pop r12
0x7316: ret 
0x7320: mov rsi,qword ptr [rbx]
0x7323: pop rbx
0x7324: pop rbp
0x7325: mov rax,rsi
0x7328: pop r12
0x732a: ret 
0x7330: cmp qword ptr [rdi+0x20],0x0
0x7335: je 0x7363
0x7337: mov rdx,qword ptr [rdi]
0x733a: mov rcx,qword ptr [rdi+0x8]
0x733e: cmp rdx,rcx
0x7341: jae 0x7368
0x7343: mov rax,qword ptr [rdx]
0x7346: test rax,rax
0x7349: jne 0x7366
0x734b: nop dword ptr [rax+rax]
0x7350: add rdx,0x10
0x7354: cmp rdx,rcx
0x7357: jae 0x7368
0x7359: mov rax,qword ptr [rdx]
0x735c: test rax,rax
0x735f: je 0x7350
0x7361: rep ret 
0x7363: xor eax,eax
0x7365: ret 
0x7366: rep ret 
0x7368: sub rsp,0x8
0x736c: call 0x1b00
0x7371: nop dword ptr [rax+rax]
0x7376: nop word ptr cs:[rax+rax]
0x7380: push rbp
0x7381: push rbx
0x7382: mov rbp,rdi
0x7385: mov rbx,rsi
0x7388: sub rsp,0x8
0x738c: call 0x6d90
0x7391: mov rdx,rax
0x7394: mov rcx,rax
0x7397: mov rax,qword ptr [rdx]
0x739a: mov rdx,qword ptr [rdx+0x8]
0x739e: cmp rax,rbx
0x73a1: je 0x73b9
0x73a3: nop dword ptr [rax+rax]
0x73a8: test rdx,rdx
0x73ab: je 0x73be
0x73ad: mov rax,qword ptr [rdx]
0x73b0: mov rdx,qword ptr [rdx+0x8]
0x73b4: cmp rax,rbx
0x73b7: jne 0x73a8
0x73b9: test rdx,rdx
0x73bc: jne 0x73e8
0x73be: mov rdx,qword ptr [rbp+0x8]
0x73c2: jmp 0x73d0
0x73c8: mov rax,qword ptr [rcx]
0x73cb: test rax,rax
0x73ce: jne 0x73db
0x73d0: add rcx,0x10
0x73d4: cmp rdx,rcx
0x73d7: ja 0x73c8
0x73d9: xor eax,eax
0x73db: add rsp,0x8
0x73df: pop rbx
0x73e0: pop rbp
0x73e1: ret 
0x73e8: mov rax,qword ptr [rdx]
0x73eb: add rsp,0x8
0x73ef: pop rbx
0x73f0: pop rbp
0x73f1: ret 
0x7400: mov r9,qword ptr [rdi]
0x7403: cmp qword ptr [rdi+0x8],r9
0x7407: jbe 0x7462
0x7409: xor r8d,r8d
0x740c: mov rcx,qword ptr [r9]
0x740f: test rcx,rcx
0x7412: je 0x744d
0x7414: cmp rdx,r8
0x7417: jbe 0x7457
0x7419: mov qword ptr [rsi+r8*8],rcx
0x741d: mov rcx,qword ptr [r9+0x8]
0x7421: lea rax,[r8+0x1]
0x7425: test rcx,rcx
0x7428: je 0x744a
0x742a: nop word ptr [rax+rax]
0x7430: cmp rdx,rax
0x7433: je 0x7460
0x7435: mov r8,qword ptr [rcx]
0x7438: add rax,0x1
0x743c: mov qword ptr [rsi+rax*8-0x8],r8
0x7441: mov rcx,qword ptr [rcx+0x8]
0x7445: test rcx,rcx
0x7448: jne 0x7430
0x744a: mov r8,rax
0x744d: add r9,0x10
0x7451: cmp qword ptr [rdi+0x8],r9
0x7455: ja 0x740c
0x7457: mov rax,r8
0x745a: ret 
0x7460: rep ret 
0x7462: xor eax,eax
0x7464: ret 
0x7470: push r15
0x7472: push r14
0x7474: push r13
0x7476: push r12
0x7478: push rbp
0x7479: push rbx
0x747a: sub rsp,0x8
0x747e: mov r14,qword ptr [rdi]
0x7481: cmp qword ptr [rdi+0x8],r14
0x7485: jbe 0x74d6
0x7487: mov r13,rdx
0x748a: mov r12,rsi
0x748d: mov r15,rdi
0x7490: xor ebp,ebp
0x7492: mov rdi,qword ptr [r14]
0x7495: test rdi,rdi
0x7498: je 0x74ba
0x749a: mov rbx,r14
0x749d: jmp 0x74a3
0x74a0: mov rdi,qword ptr [rbx]
0x74a3: mov rsi,r13
0x74a6: call r12
0x74a9: test al,al
0x74ab: je 0x74c4
0x74ad: mov rbx,qword ptr [rbx+0x8]
0x74b1: add rbp,0x1
0x74b5: test rbx,rbx
0x74b8: jne 0x74a0
0x74ba: add r14,0x10
0x74be: cmp qword ptr [r15+0x8],r14
0x74c2: ja 0x7492
0x74c4: add rsp,0x8
0x74c8: mov rax,rbp
0x74cb: pop rbx
0x74cc: pop rbp
0x74cd: pop r12
0x74cf: pop r13
0x74d1: pop r14
0x74d3: pop r15
0x74d5: ret 
0x74d6: xor ebp,ebp
0x74d8: jmp 0x74c4
0x74e0: movzx ecx,byte ptr [rdi]
0x74e3: xor edx,edx
0x74e5: test cl,cl
0x74e7: je 0x750d
0x74e9: nop dword ptr [rax]
0x74f0: mov rax,rdx
0x74f3: add rdi,0x1
0x74f7: shl rax,0x5
0x74fb: sub rax,rdx
0x74fe: xor edx,edx
0x7500: add rax,rcx
0x7503: movzx ecx,byte ptr [rdi]
0x7506: div rsi
0x7509: test cl,cl
0x750b: jne 0x74f0
0x750d: mov rax,rdx
0x7510: ret 
0x7520: movabsq rax,0x3f80000000000000
0x752a: mov byte ptr [rdi+0x10],0x0
0x752e: mov qword ptr [rdi],rax
0x7531: movabsq rax,0x3fb4fdf43f4ccccd
0x753b: mov qword ptr [rdi+0x8],rax
0x753f: ret 
0x7540: push r15
0x7542: push r14
0x7544: lea rax,[rip-0x7db]
0x754b: push r13
0x754d: push r12
0x754f: mov r12,rdx
0x7552: push rbp
0x7553: push rbx
0x7554: mov r13,rcx
0x7557: mov rbp,rdi
0x755a: mov edi,0x50
0x755f: mov r15,rsi
0x7562: sub rsp,0x8
0x7566: test rdx,rdx
0x7569: mov r14,r8
0x756c: cmove r12,rax
0x7570: lea rax,[rip-0x7f7]
0x7577: test rcx,rcx
0x757a: cmove r13,rax
0x757e: call 0x1dc0
0x7583: test rax,rax
0x7586: mov rbx,rax
0x7589: je 0x763a
0x758f: test r15,r15
0x7592: lea rdi,[rax+0x28]
0x7596: je 0x7650
0x759c: mov qword ptr [rax+0x28],r15
0x75a0: call 0x6ee0
0x75a5: test al,al
0x75a7: je 0x7630
0x75ad: cmp byte ptr [r15+0x10],0x0
0x75b2: je 0x76b0
0x75b8: mov rdi,rbp
0x75bb: call 0x6cd0
0x75c0: mov edx,0x8
0x75c5: mov rbp,rax
0x75c8: xor ecx,ecx
0x75ca: mov rax,rdx
0x75cd: mul rbp
0x75d0: jo 0x76ea
0x75d6: test rax,rax
0x75d9: js 0x7630
0x75db: test rcx,rcx
0x75de: jne 0x7630
0x75e0: test rbp,rbp
0x75e3: mov qword ptr [rbx+0x10],rbp
0x75e7: je 0x7630
0x75e9: mov esi,0x10
0x75ee: mov rdi,rbp
0x75f1: call 0x1d30
0x75f6: test rax,rax
0x75f9: mov qword ptr [rbx],rax
0x75fc: je 0x7630
0x75fe: shl rbp,0x4
0x7602: mov qword ptr [rbx+0x18],0x0
0x760a: mov qword ptr [rbx+0x20],0x0
0x7612: add rbp,rax
0x7615: mov qword ptr [rbx+0x30],r12
0x7619: mov qword ptr [rbx+0x38],r13
0x761d: mov qword ptr [rbx+0x8],rbp
0x7621: mov qword ptr [rbx+0x40],r14
0x7625: mov qword ptr [rbx+0x48],0x0
0x762d: jmp 0x763a
0x7630: mov rdi,rbx
0x7633: xor ebx,ebx
0x7635: call 0x1af0
0x763a: add rsp,0x8
0x763e: mov rax,rbx
0x7641: pop rbx
0x7642: pop rbp
0x7643: pop r12
0x7645: pop r13
0x7647: pop r14
0x7649: pop r15
0x764b: ret 
0x7650: lea rax,[rip+0x53e9]
0x7657: mov qword ptr [rbx+0x28],rax
0x765b: call 0x6ee0
0x7660: test al,al
0x7662: movxd xmm1,[rip+0x53fe]
0x766a: je 0x7630
0x766c: test rbp,rbp
0x766f: js 0x76bb
0x7671: pxor xmm0,xmm0
0x7675: cvtsi2ssq xmm0,rbp
0x767a: divss xmm0,xmm1
0x767e: ucomiss xmm0,[rip+0x53e7]
0x7685: jae 0x7630
0x7687: ucomiss xmm0,[rip+0x53e2]
0x768e: jb 0x76e0
0x7690: subss xmm0,[rip+0x53d8]
0x7698: movabsq rax,-0x8000000000000000
0x76a2: cvttss2si rbp,xmm0
0x76a7: xor rbp,rax
0x76aa: jmp 0x75b8
0x76b0: test rbp,rbp
0x76b3: movxd xmm1,[r15+0x8]
0x76b9: jns 0x7671
0x76bb: mov rax,rbp
0x76be: pxor xmm0,xmm0
0x76c2: shr rax, 1
0x76c5: and ebp,0x1
0x76c8: or rax,rbp
0x76cb: cvtsi2ssq xmm0,rax
0x76d0: addss xmm0,xmm0
0x76d4: jmp 0x767a
0x76e0: cvttss2si rbp,xmm0
0x76e5: jmp 0x75b8
0x76ea: mov ecx,0x1
0x76ef: jmp 0x75d6
0x7700: push r12
0x7702: push rbp
0x7703: mov rbp,rdi
0x7706: push rbx
0x7707: mov r12,qword ptr [rdi]
0x770a: cmp r12,qword ptr [rdi+0x8]
0x770e: jae 0x777b
0x7710: cmp qword ptr [r12],0x0
0x7715: je 0x7771
0x7717: mov rbx,qword ptr [r12+0x8]
0x771c: mov rax,qword ptr [rbp+0x40]
0x7720: test rbx,rbx
0x7723: je 0x7755
0x7725: nop dword ptr [rax]
0x7728: test rax,rax
0x772b: je 0x7736
0x772d: mov rdi,qword ptr [rbx]
0x7730: call rax
0x7732: mov rax,qword ptr [rbp+0x40]
0x7736: mov rdx,qword ptr [rbx+0x8]
0x773a: mov rcx,qword ptr [rbp+0x48]
0x773e: mov qword ptr [rbx],0x0
0x7745: test rdx,rdx
0x7748: mov qword ptr [rbx+0x8],rcx
0x774c: mov qword ptr [rbp+0x48],rbx
0x7750: mov rbx,rdx
0x7753: jne 0x7728
0x7755: test rax,rax
0x7758: je 0x7760
0x775a: mov rdi,qword ptr [r12]
0x775e: call rax
0x7760: mov qword ptr [r12],0x0
0x7768: mov qword ptr [r12+0x8],0x0
0x7771: add r12,0x10
0x7775: cmp qword ptr [rbp+0x8],r12
0x7779: ja 0x7710
0x777b: mov qword ptr [rbp+0x18],0x0
0x7783: mov qword ptr [rbp+0x20],0x0
0x778b: pop rbx
0x778c: pop rbp
0x778d: pop r12
0x778f: ret 
0x7790: push r12
0x7792: push rbp
0x7793: mov r12,rdi
0x7796: push rbx
0x7797: cmp qword ptr [rdi+0x40],0x0
0x779c: mov rbp,qword ptr [rdi]
0x779f: mov rax,qword ptr [rdi+0x8]
0x77a3: je 0x77f3
0x77a5: cmp qword ptr [rdi+0x20],0x0
0x77aa: je 0x77f3
0x77ac: cmp rbp,rax
0x77af: jae 0x782c
0x77b1: nop dword ptr [rax]
0x77b8: mov rdi,qword ptr [rbp]
0x77bc: test rdi,rdi
0x77bf: je 0x77e6
0x77c1: mov rbx,rbp
0x77c4: jmp 0x77d3
0x77d0: mov rdi,qword ptr [rbx]
0x77d3: call qword ptr [r12+0x40]
0x77d8: mov rbx,qword ptr [rbx+0x8]
0x77dc: test rbx,rbx
0x77df: jne 0x77d0
0x77e1: mov rax,qword ptr [r12+0x8]
0x77e6: add rbp,0x10
0x77ea: cmp rax,rbp
0x77ed: ja 0x77b8
0x77ef: mov rbp,qword ptr [r12]
0x77f3: cmp rbp,rax
0x77f6: jae 0x782c
0x77f8: nop dword ptr [rax+rax]
0x7800: mov rdi,qword ptr [rbp+0x8]
0x7804: test rdi,rdi
0x7807: je 0x7821
0x7809: nop dword ptr [rax]
0x7810: mov rbx,qword ptr [rdi+0x8]
0x7814: call 0x1af0
0x7819: test rbx,rbx
0x781c: mov rdi,rbx
0x781f: jne 0x7810
0x7821: add rbp,0x10
0x7825: cmp qword ptr [r12+0x8],rbp
0x782a: ja 0x7800
0x782c: mov rdi,qword ptr [r12+0x48]
0x7831: test rdi,rdi
0x7834: je 0x7851
0x7836: nop word ptr cs:[rax+rax]
0x7840: mov rbx,qword ptr [rdi+0x8]
0x7844: call 0x1af0
0x7849: test rbx,rbx
0x784c: mov rdi,rbx
0x784f: jne 0x7840
0x7851: mov rdi,qword ptr [r12]
0x7855: call 0x1af0
0x785a: pop rbx
0x785b: mov rdi,r12
0x785e: pop rbp
0x785f: pop r12
0x7861: jmp 0x1af0
0x7870: push r12
0x7872: push rbp
0x7873: mov rbp,rdi
0x7876: push rbx
0x7877: sub rsp,0x60
0x787b: mov r12,qword ptr [rdi+0x28]
0x787f: mov rax,qword ptr fs:0x28
0x7888: mov qword ptr [rsp+0x58],rax
0x788d: xor eax,eax
0x788f: cmp byte ptr [r12+0x10],0x0
0x7895: jne 0x78e8
0x7897: test rsi,rsi
0x789a: js 0x7a18
0x78a0: pxor xmm0,xmm0
0x78a4: cvtsi2ssq xmm0,rsi
0x78a9: divss xmm0,[r12+0x8]
0x78b0: ucomiss xmm0,[rip+0x51b5]
0x78b7: jae 0x79f0
0x78bd: ucomiss xmm0,[rip+0x51ac]
0x78c4: jb 0x7a40
0x78ca: subss xmm0,[rip+0x519e]
0x78d2: movabsq rax,-0x8000000000000000
0x78dc: cvttss2si rsi,xmm0
0x78e1: xor rsi,rax
0x78e4: nop dword ptr [rax]
0x78e8: mov rdi,rsi
0x78eb: call 0x6cd0
0x78f0: mov edx,0x8
0x78f5: mov rbx,rax
0x78f8: xor ecx,ecx
0x78fa: mov rax,rdx
0x78fd: mul rbx
0x7900: jo 0x7a9f
0x7906: test rax,rax
0x7909: mov eax,0x1
0x790e: cmovs rcx,rax
0x7912: test rbx,rbx
0x7915: je 0x79f0
0x791b: and ecx,0x1
0x791e: jne 0x79f0
0x7924: cmp qword ptr [rbp+0x10],rbx
0x7928: je 0x7a50
0x792e: mov esi,0x10
0x7933: mov rdi,rbx
0x7936: call 0x1d30
0x793b: test rax,rax
0x793e: mov qword ptr [rsp],rax
0x7942: je 0x79f0
0x7948: mov qword ptr [rsp+0x10],rbx
0x794d: shl rbx,0x4
0x7951: mov qword ptr [rsp+0x28],r12
0x7956: add rbx,rax
0x7959: mov rax,qword ptr [rbp+0x30]
0x795d: mov r12,rsp
0x7960: xor edx,edx
0x7962: mov rsi,rbp
0x7965: mov rdi,r12
0x7968: mov qword ptr [rsp+0x8],rbx
0x796d: mov qword ptr [rsp+0x18],0x0
0x7976: mov qword ptr [rsp+0x30],rax
0x797b: mov rax,qword ptr [rbp+0x38]
0x797f: mov qword ptr [rsp+0x20],0x0
0x7988: mov qword ptr [rsp+0x38],rax
0x798d: mov rax,qword ptr [rbp+0x40]
0x7991: mov qword ptr [rsp+0x40],rax
0x7996: mov rax,qword ptr [rbp+0x48]
0x799a: mov qword ptr [rsp+0x48],rax
0x799f: call 0x6f60
0x79a4: test al,al
0x79a6: mov ebx,eax
0x79a8: jne 0x7a60
0x79ae: mov rax,qword ptr [rsp+0x48]
0x79b3: mov edx,0x1
0x79b8: mov rsi,r12
0x79bb: mov rdi,rbp
0x79be: mov qword ptr [rbp+0x48],rax
0x79c2: call 0x6f60
0x79c7: test al,al
0x79c9: je 0x7aa9
0x79cf: xor edx,edx
0x79d1: mov rsi,r12
0x79d4: mov rdi,rbp
0x79d7: call 0x6f60
0x79dc: test al,al
0x79de: je 0x7aa9
0x79e4: mov rdi,qword ptr [rsp]
0x79e8: call 0x1af0
0x79ed: jmp 0x79f2
0x79f0: xor ebx,ebx
0x79f2: mov rcx,qword ptr [rsp+0x58]
0x79f7: xor rcx,qword ptr fs:0x28
0x7a00: mov eax,ebx
0x7a02: jne 0x7a9a
0x7a08: add rsp,0x60
0x7a0c: pop rbx
0x7a0d: pop rbp
0x7a0e: pop r12
0x7a10: ret 
0x7a18: mov rax,rsi
0x7a1b: pxor xmm0,xmm0
0x7a1f: shr rax, 1
0x7a22: and esi,0x1
0x7a25: or rax,rsi
0x7a28: cvtsi2ssq xmm0,rax
0x7a2d: addss xmm0,xmm0
0x7a31: jmp 0x78a9
0x7a40: cvttss2si rsi,xmm0
0x7a45: jmp 0x78e8
0x7a50: mov ebx,0x1
0x7a55: jmp 0x79f2
0x7a60: mov rdi,qword ptr [rbp]
0x7a64: call 0x1af0
0x7a69: mov rax,qword ptr [rsp]
0x7a6d: mov qword ptr [rbp],rax
0x7a71: mov rax,qword ptr [rsp+0x8]
0x7a76: mov qword ptr [rbp+0x8],rax
0x7a7a: mov rax,qword ptr [rsp+0x10]
0x7a7f: mov qword ptr [rbp+0x10],rax
0x7a83: mov rax,qword ptr [rsp+0x18]
0x7a88: mov qword ptr [rbp+0x18],rax
0x7a8c: mov rax,qword ptr [rsp+0x48]
0x7a91: mov qword ptr [rbp+0x48],rax
0x7a95: jmp 0x79f2
0x7a9a: call 0x1c10
0x7a9f: mov ecx,0x1
0x7aa4: jmp 0x7906
0x7aa9: call 0x1b00
0x7aae: nop 
0x7ab0: push r13
0x7ab2: push r12
0x7ab4: push rbp
0x7ab5: push rbx
0x7ab6: sub rsp,0x18
0x7aba: mov rax,qword ptr fs:0x28
0x7ac3: mov qword ptr [rsp+0x8],rax
0x7ac8: xor eax,eax
0x7aca: test rsi,rsi
0x7acd: je 0x7c8d
0x7ad3: mov r12,rsp
0x7ad6: xor ecx,ecx
0x7ad8: mov r13,rdx
0x7adb: mov rdx,r12
0x7ade: mov rbx,rdi
0x7ae1: mov rbp,rsi
0x7ae4: call 0x6dc0
0x7ae9: test rax,rax
0x7aec: mov rdx,rax
0x7aef: je 0x7b20
0x7af1: xor eax,eax
0x7af3: test r13,r13
0x7af6: je 0x7afc
0x7af8: mov qword ptr [r13],rdx
0x7afc: mov rcx,qword ptr [rsp+0x8]
0x7b01: xor rcx,qword ptr fs:0x28
0x7b0a: jne 0x7d2f
0x7b10: add rsp,0x18
0x7b14: pop rbx
0x7b15: pop rbp
0x7b16: pop r12
0x7b18: pop r13
0x7b1a: ret 
0x7b20: mov rax,qword ptr [rbx+0x18]
0x7b24: test rax,rax
0x7b27: js 0x7ba0
0x7b29: pxor xmm1,xmm1
0x7b2d: mov rdx,qword ptr [rbx+0x28]
0x7b31: cvtsi2ssq xmm1,rax
0x7b36: mov rax,qword ptr [rbx+0x10]
0x7b3a: test rax,rax
0x7b3d: js 0x7bca
0x7b43: pxor xmm0,xmm0
0x7b47: cvtsi2ssq xmm0,rax
0x7b4c: mulss xmm0,[rdx+0x8]
0x7b51: ucomiss xmm1,xmm0
0x7b54: ja 0x7bf0
0x7b5a: mov r12,qword ptr [rsp]
0x7b5e: cmp qword ptr [r12],0x0
0x7b63: je 0x7c98
0x7b69: mov rax,qword ptr [rbx+0x48]
0x7b6d: test rax,rax
0x7b70: je 0x7cb0
0x7b76: mov rdx,qword ptr [rax+0x8]
0x7b7a: mov qword ptr [rbx+0x48],rdx
0x7b7e: mov rdx,qword ptr [r12+0x8]
0x7b83: mov qword ptr [rax],rbp
0x7b86: mov qword ptr [rax+0x8],rdx
0x7b8a: mov qword ptr [r12+0x8],rax
0x7b8f: mov eax,0x1
0x7b94: add qword ptr [rbx+0x20],0x1
0x7b99: jmp 0x7afc
0x7ba0: mov rdx,rax
0x7ba3: pxor xmm1,xmm1
0x7ba7: and eax,0x1
0x7baa: shr rdx, 1
0x7bad: or rdx,rax
0x7bb0: mov rax,qword ptr [rbx+0x10]
0x7bb4: cvtsi2ssq xmm1,rdx
0x7bb9: mov rdx,qword ptr [rbx+0x28]
0x7bbd: test rax,rax
0x7bc0: addss xmm1,xmm1
0x7bc4: jns 0x7b43
0x7bca: mov rcx,rax
0x7bcd: pxor xmm0,xmm0
0x7bd1: shr rcx, 1
0x7bd4: and eax,0x1
0x7bd7: or rcx,rax
0x7bda: cvtsi2ssq xmm0,rcx
0x7bdf: addss xmm0,xmm0
0x7be3: jmp 0x7b4c
0x7bf0: lea rdi,[rbx+0x28]
0x7bf4: call 0x6ee0
0x7bf9: mov rax,qword ptr [rbx+0x10]
0x7bfd: mov rdx,qword ptr [rbx+0x28]
0x7c01: test rax,rax
0x7c04: movxd xmm2,[rdx+0x8]
0x7c09: js 0x7cd0
0x7c0f: pxor xmm0,xmm0
0x7c13: cvtsi2ssq xmm0,rax
0x7c18: mov rax,qword ptr [rbx+0x18]
0x7c1c: test rax,rax
0x7c1f: js 0x7cf0
0x7c25: pxor xmm1,xmm1
0x7c29: cvtsi2ssq xmm1,rax
0x7c2e: movaps xmm3,xmm2
0x7c31: mulss xmm3,xmm0
0x7c35: ucomiss xmm1,xmm3
0x7c38: jbe 0x7b5a
0x7c3e: cmp byte ptr [rdx+0x10],0x0
0x7c42: mulss xmm0,[rdx+0xc]
0x7c47: jne 0x7c4d
0x7c49: mulss xmm0,xmm2
0x7c4d: ucomiss xmm0,[rip+0x4e18]
0x7c54: jae 0x7cc3
0x7c56: ucomiss xmm0,[rip+0x4e13]
0x7c5d: jae 0x7d10
0x7c63: cvttss2si rsi,xmm0
0x7c68: mov rdi,rbx
0x7c6b: call 0x7870
0x7c70: test al,al
0x7c72: je 0x7cc3
0x7c74: xor ecx,ecx
0x7c76: mov rdx,r12
0x7c79: mov rsi,rbp
0x7c7c: mov rdi,rbx
0x7c7f: call 0x6dc0
0x7c84: test rax,rax
0x7c87: je 0x7b5a
0x7c8d: call 0x1b00
0x7c92: nop word ptr [rax+rax]
0x7c98: mov qword ptr [r12],rbp
0x7c9c: mov eax,0x1
0x7ca1: add qword ptr [rbx+0x20],0x1
0x7ca6: add qword ptr [rbx+0x18],0x1
0x7cab: jmp 0x7afc
0x7cb0: mov edi,0x10
0x7cb5: call 0x1dc0
0x7cba: test rax,rax
0x7cbd: jne 0x7b7e
0x7cc3: mov eax,0xffffffff
0x7cc8: jmp 0x7afc
0x7cd0: mov rcx,rax
0x7cd3: pxor xmm0,xmm0
0x7cd7: shr rcx, 1
0x7cda: and eax,0x1
0x7cdd: or rcx,rax
0x7ce0: cvtsi2ssq xmm0,rcx
0x7ce5: addss xmm0,xmm0
0x7ce9: jmp 0x7c18
0x7cf0: mov rcx,rax
0x7cf3: pxor xmm1,xmm1
0x7cf7: shr rcx, 1
0x7cfa: and eax,0x1
0x7cfd: or rcx,rax
0x7d00: cvtsi2ssq xmm1,rcx
0x7d05: addss xmm1,xmm1
0x7d09: jmp 0x7c2e
0x7d10: subss xmm0,[rip+0x4d58]
0x7d18: movabsq rax,-0x8000000000000000
0x7d22: cvttss2si rsi,xmm0
0x7d27: xor rsi,rax
0x7d2a: jmp 0x7c68
0x7d2f: call 0x1c10
0x7d34: nop 
0x7d36: nop word ptr cs:[rax+rax]
0x7d40: push rbx
0x7d41: mov rbx,rsi
0x7d44: sub rsp,0x10
0x7d48: mov rdx,rsp
0x7d4b: mov rax,qword ptr fs:0x28
0x7d54: mov qword ptr [rsp+0x8],rax
0x7d59: xor eax,eax
0x7d5b: call 0x7ab0
0x7d60: cmp eax,-0x1
0x7d63: je 0x7d90
0x7d65: test eax,eax
0x7d67: jne 0x7d6d
0x7d69: mov rbx,qword ptr [rsp]
0x7d6d: mov rcx,qword ptr [rsp+0x8]
0x7d72: xor rcx,qword ptr fs:0x28
0x7d7b: mov rax,rbx
0x7d7e: jne 0x7d94
0x7d80: add rsp,0x10
0x7d84: pop rbx
0x7d85: ret 
0x7d90: xor ebx,ebx
0x7d92: jmp 0x7d6d
0x7d94: call 0x1c10
0x7d99: nop dword ptr [rax]
0x7da0: push r12
0x7da2: push rbp
0x7da3: mov ecx,0x1
0x7da8: push rbx
0x7da9: mov rbx,rdi
0x7dac: sub rsp,0x10
0x7db0: mov rdx,rsp
0x7db3: mov rax,qword ptr fs:0x28
0x7dbc: mov qword ptr [rsp+0x8],rax
0x7dc1: xor eax,eax
0x7dc3: call 0x6dc0
0x7dc8: test rax,rax
0x7dcb: mov rbp,rax
0x7dce: je 0x7ddf
0x7dd0: mov rax,qword ptr [rsp]
0x7dd4: sub qword ptr [rbx+0x20],0x1
0x7dd9: cmp qword ptr [rax],0x0
0x7ddd: je 0x7e00
0x7ddf: mov rcx,qword ptr [rsp+0x8]
0x7de4: xor rcx,qword ptr fs:0x28
0x7ded: mov rax,rbp
0x7df0: jne 0x7f9e
0x7df6: add rsp,0x10
0x7dfa: pop rbx
0x7dfb: pop rbp
0x7dfc: pop r12
0x7dfe: ret 
0x7e00: mov rax,qword ptr [rbx+0x18]
0x7e04: sub rax,0x1
0x7e08: test rax,rax
0x7e0b: mov qword ptr [rbx+0x18],rax
0x7e0f: js 0x7f10
0x7e15: pxor xmm0,xmm0
0x7e19: cvtsi2ssq xmm0,rax
0x7e1e: mov rax,qword ptr [rbx+0x10]
0x7e22: mov rdx,qword ptr [rbx+0x28]
0x7e26: test rax,rax
0x7e29: js 0x7ef0
0x7e2f: pxor xmm1,xmm1
0x7e33: cvtsi2ssq xmm1,rax
0x7e38: mulss xmm1,[rdx]
0x7e3c: ucomiss xmm1,xmm0
0x7e3f: jbe 0x7ddf
0x7e41: lea rdi,[rbx+0x28]
0x7e45: call 0x6ee0
0x7e4a: mov rax,qword ptr [rbx+0x10]
0x7e4e: mov rdx,qword ptr [rbx+0x28]
0x7e52: test rax,rax
0x7e55: js 0x7f80
0x7e5b: pxor xmm0,xmm0
0x7e5f: cvtsi2ssq xmm0,rax
0x7e64: mov rax,qword ptr [rbx+0x18]
0x7e68: test rax,rax
0x7e6b: js 0x7f60
0x7e71: pxor xmm1,xmm1
0x7e75: cvtsi2ssq xmm1,rax
0x7e7a: movxd xmm2,[rdx]
0x7e7e: mulss xmm2,xmm0
0x7e82: ucomiss xmm2,xmm1
0x7e85: jbe 0x7ddf
0x7e8b: cmp byte ptr [rdx+0x10],0x0
0x7e8f: mulss xmm0,[rdx+0x4]
0x7e94: je 0x7f50
0x7e9a: ucomiss xmm0,[rip+0x4bcf]
0x7ea1: jae 0x7f30
0x7ea7: cvttss2si rsi,xmm0
0x7eac: mov rdi,rbx
0x7eaf: call 0x7870
0x7eb4: test al,al
0x7eb6: jne 0x7ddf
0x7ebc: mov rdi,qword ptr [rbx+0x48]
0x7ec0: test rdi,rdi
0x7ec3: je 0x7ed9
0x7ec5: nop dword ptr [rax]
0x7ec8: mov r12,qword ptr [rdi+0x8]
0x7ecc: call 0x1af0
0x7ed1: test r12,r12
0x7ed4: mov rdi,r12
0x7ed7: jne 0x7ec8
0x7ed9: mov qword ptr [rbx+0x48],0x0
0x7ee1: jmp 0x7ddf
0x7ef0: mov rcx,rax
0x7ef3: pxor xmm1,xmm1
0x7ef7: shr rcx, 1
0x7efa: and eax,0x1
0x7efd: or rcx,rax
0x7f00: cvtsi2ssq xmm1,rcx
0x7f05: addss xmm1,xmm1
0x7f09: jmp 0x7e38
0x7f10: mov rdx,rax
0x7f13: pxor xmm0,xmm0
0x7f17: shr rdx, 1
0x7f1a: and eax,0x1
0x7f1d: or rdx,rax
0x7f20: cvtsi2ssq xmm0,rdx
0x7f25: addss xmm0,xmm0
0x7f29: jmp 0x7e1e
0x7f30: subss xmm0,[rip+0x4b38]
0x7f38: movabsq rax,-0x8000000000000000
0x7f42: cvttss2si rsi,xmm0
0x7f47: xor rsi,rax
0x7f4a: jmp 0x7eac
0x7f50: mulss xmm0,[rdx+0x8]
0x7f55: jmp 0x7e9a
0x7f60: mov rcx,rax
0x7f63: pxor xmm1,xmm1
0x7f67: shr rcx, 1
0x7f6a: and eax,0x1
0x7f6d: or rcx,rax
0x7f70: cvtsi2ssq xmm1,rcx
0x7f75: addss xmm1,xmm1
0x7f79: jmp 0x7e7a
0x7f80: mov rcx,rax
0x7f83: pxor xmm0,xmm0
0x7f87: shr rcx, 1
0x7f8a: and eax,0x1
0x7f8d: or rcx,rax
0x7f90: cvtsi2ssq xmm0,rcx
0x7f95: addss xmm0,xmm0
0x7f99: jmp 0x7e64
0x7f9e: call 0x1c10
0x7fa3: nop word ptr cs:[rax+rax]
0x7fad: nop dword ptr [rax]
0x80d9: call 0x1c10
0x80de: nop 
0x817f: nop 
0x8180: push rbp
0x8181: push rbx
0x8182: mov rbp,rdi
0x8185: mov ebx,esi
0x8187: sub rsp,0x8
0x818b: call 0xb3f0
0x8190: movzx edx,byte ptr [rax]
0x8193: and edx,-0x21
0x8196: cmp dl,0x55
0x8199: je 0x8210
0x819b: cmp dl,0x47
0x819e: je 0x81c0
0x81a0: lea rax,[rip+0x493c]
0x81a7: lea rdx,[rip+0x4937]
0x81ae: cmp ebx,0x9
0x81b1: cmovne rax,rdx
0x81b5: add rsp,0x8
0x81b9: pop rbx
0x81ba: pop rbp
0x81bb: ret 
0x81c0: movzx edx,byte ptr [rax+0x1]
0x81c4: and edx,-0x21
0x81c7: cmp dl,0x42
0x81ca: jne 0x81a0
0x81cc: cmp byte ptr [rax+0x2],0x31
0x81d0: jne 0x81a0
0x81d2: cmp byte ptr [rax+0x3],0x38
0x81d6: jne 0x81a0
0x81d8: cmp byte ptr [rax+0x4],0x30
0x81dc: jne 0x81a0
0x81de: cmp byte ptr [rax+0x5],0x33
0x81e2: jne 0x81a0
0x81e4: cmp byte ptr [rax+0x6],0x30
0x81e8: jne 0x81a0
0x81ea: cmp byte ptr [rax+0x7],0x0
0x81ee: jne 0x81a0
0x81f0: cmp byte ptr [rbp],0x60
0x81f4: lea rax,[rip+0x48e1]
0x81fb: lea rdx,[rip+0x48de]
0x8202: cmovne rax,rdx
0x8206: add rsp,0x8
0x820a: pop rbx
0x820b: pop rbp
0x820c: ret 
0x8210: movzx edx,byte ptr [rax+0x1]
0x8214: and edx,-0x21
0x8217: cmp dl,0x54
0x821a: jne 0x81a0
0x821c: movzx edx,byte ptr [rax+0x2]
0x8220: and edx,-0x21
0x8223: cmp dl,0x46
0x8226: jne 0x81a0
0x822c: cmp byte ptr [rax+0x3],0x2d
0x8230: jne 0x81a0
0x8236: cmp byte ptr [rax+0x4],0x38
0x823a: jne 0x81a0
0x8240: cmp byte ptr [rax+0x5],0x0
0x8244: jne 0x81a0
0x824a: cmp byte ptr [rbp],0x60
0x824e: lea rax,[rip+0x487f]
0x8255: lea rdx,[rip+0x487c]
0x825c: cmovne rax,rdx
0x8260: add rsp,0x8
0x8264: pop rbx
0x8265: pop rbp
0x8266: ret 
0x8343: xor r11d,r11d
0x8346: mov rax,rbp
0x8349: mov r8d,r12d
0x834c: mov rbp,r11
0x834f: mov r11,rax
0x8352: nop word ptr [rax+rax]
0x8358: cmp r11,rbp
0x835b: setne r12b
0x835f: cmp r11,-0x1
0x8363: jne 0x8372
0x8365: mov rax,qword ptr [rsp+0x10]
0x836a: cmp byte ptr [rax+rbp],0x0
0x836e: setne r12b
0x8372: test r12b,r12b
0x8375: je 0x89d0
0x837b: cmp dword ptr [rsp+0x8],0x2
0x8380: mov rdi,qword ptr [rsp+0x10]
0x8385: lea r9,[rdi+rbp]
0x8389: setne al
0x838c: and al,byte ptr [rsp+0xd]
0x8390: mov r10d,eax
0x8393: je 0x8440
0x8399: mov rax,qword ptr [rsp+0x18]
0x839e: test rax,rax
0x83a1: je 0x87d0
0x83a7: cmp r11,-0x1
0x83ab: lea rbx,[rbp+rax]
0x83b0: jne 0x83e0
0x83b2: cmp rax,0x1
0x83b6: jbe 0x83e0
0x83b8: mov byte ptr [rsp+0x38],r8b
0x83bd: mov byte ptr [rsp+0x30],r10b
0x83c2: mov qword ptr [rsp+0x28],r9
0x83c7: call 0x1bf0
0x83cc: movzx r8d,byte ptr [rsp+0x38]
0x83d2: movzx r10d,byte ptr [rsp+0x30]
0x83d8: mov r11,rax
0x83db: mov r9,qword ptr [rsp+0x28]
0x83e0: cmp rbx,r11
0x83e3: mov byte ptr [rsp+0x28],r10b
0x83e8: ja 0x89a0
0x83ee: mov rdx,qword ptr [rsp+0x18]
0x83f3: mov rsi,qword ptr [rsp+0x48]
0x83f8: mov rdi,r9
0x83fb: mov qword ptr [rsp+0x40],r11
0x8400: mov byte ptr [rsp+0x38],r8b
0x8405: mov qword ptr [rsp+0x30],r9
0x840a: call 0x1d10
0x840f: test eax,eax
0x8411: mov r9,qword ptr [rsp+0x30]
0x8416: movzx r8d,byte ptr [rsp+0x38]
0x841c: mov r11,qword ptr [rsp+0x40]
0x8421: jne 0x89a0
0x8427: cmp byte ptr [rsp+0xf],0x0
0x842c: movzx r10d,byte ptr [rsp+0x28]
0x8432: jne 0x93b5
0x8438: nop dword ptr [rax+rax]
0x8440: movzx ebx,byte ptr [r9]
0x8444: cmp bl,0x7e
0x8447: ja 0x8768
0x844d: lea rcx,[rip+0x4718]
0x8454: movzx edx,bl
0x8457: movsxd rax,dword ptr [rcx+rdx*4]
0x845b: add rax,rcx
0x845e: jmp rax
0x8498: cmp byte ptr [rsp+0xd],0x1
0x849d: jne 0x85b2
0x84a3: test dl,dl
0x84a5: jne 0x85b2
0x84ab: mov rsi,qword ptr [rsp+0x20]
0x84b0: test rsi,rsi
0x84b3: je 0x84c9
0x84b5: mov edx,ebx
0x84b7: shr dl,0x5
0x84ba: movzx edx,dl
0x84bd: mov edx,dword ptr [rsi+rdx*4]
0x84c0: btl edx,ebx
0x84c3: jb 0x8613
0x84c9: test r10b,r10b
0x84cc: jne 0x8613
0x84d2: xor eax,0x1
0x84d5: add rbp,0x1
0x84d9: and eax,r8d
0x84dc: test al,al
0x84de: je 0x8500
0x84e0: cmp r13,r15
0x84e3: jbe 0x84ea
0x84e5: mov byte ptr [r14+r15],0x27
0x84ea: lea rax,[r15+0x1]
0x84ee: cmp r13,rax
0x84f1: jbe 0x84f9
0x84f3: mov byte ptr [r14+r15+0x1],0x27
0x84f9: add r15,0x2
0x84fd: xor r8d,r8d
0x8500: cmp r15,r13
0x8503: jae 0x8509
0x8505: mov byte ptr [r14+r15],bl
0x8509: movzx edi,byte ptr [rsp+0xe]
0x850e: add r15,0x1
0x8512: mov eax,0x0
0x8517: test r12b,r12b
0x851a: cmove edi,eax
0x851d: mov byte ptr [rsp+0xe],dil
0x8522: jmp 0x8358
0x85b2: cmp byte ptr [rsp+0xf],0x0
0x85b7: jne 0x84ab
0x85bd: jmp 0x84c9
0x8613: cmp dword ptr [rsp+0x8],0x2
0x8618: sete dl
0x861b: cmp byte ptr [rsp+0xf],0x0
0x8620: mov eax,edx
0x8622: jne 0x8e78
0x8628: mov eax,r8d
0x862b: xor eax,0x1
0x862e: and al,dl
0x8630: je 0x8661
0x8632: cmp r13,r15
0x8635: jbe 0x863c
0x8637: mov byte ptr [r14+r15],0x27
0x863c: lea rdx,[r15+0x1]
0x8640: cmp r13,rdx
0x8643: jbe 0x864b
0x8645: mov byte ptr [r14+r15+0x1],0x24
0x864b: lea rdx,[r15+0x2]
0x864f: cmp r13,rdx
0x8652: jbe 0x865a
0x8654: mov byte ptr [r14+r15+0x2],0x27
0x865a: add r15,0x3
0x865e: mov r8d,eax
0x8661: cmp r13,r15
0x8664: jbe 0x866b
0x8666: mov byte ptr [r14+r15],0x5c
0x866b: add r15,0x1
0x866f: add rbp,0x1
0x8673: jmp 0x8500
0x8760: xor r10d,r10d
0x8763: nop dword ptr [rax+rax]
0x8768: cmp qword ptr [rsp+0x58],0x1
0x876e: jne 0x8b18
0x8774: mov qword ptr [rsp+0x38],r11
0x8779: mov byte ptr [rsp+0x30],r8b
0x877e: mov byte ptr [rsp+0x28],r10b
0x8783: call 0x1f30
0x8788: mov rcx,qword ptr [rax]
0x878b: movzx edx,bl
0x878e: movzx r10d,byte ptr [rsp+0x28]
0x8794: movzx r8d,byte ptr [rsp+0x30]
0x879a: mov r11,qword ptr [rsp+0x38]
0x879f: mov edi,0x1
0x87a4: movzx eax,word ptr [rcx+rdx*2]
0x87a8: and ax,0x4000
0x87ac: setne r12b
0x87b0: sete al
0x87b3: and al,byte ptr [rsp+0xd]
0x87b7: test al,al
0x87b9: jne 0x9151
0x87bf: cmp dword ptr [rsp+0x8],0x2
0x87c4: sete dl
0x87c7: jmp 0x8498
0x87d0: movzx ebx,byte ptr [r9]
0x87d4: cmp bl,0x7e
0x87d7: ja 0x8760
0x87d9: lea rcx,[rip+0x4588]
0x87e0: movzx edx,bl
0x87e3: movsxd rax,dword ptr [rcx+rdx*4]
0x87e7: add rax,rcx
0x87ea: jmp rax
0x89a0: xor r10d,r10d
0x89a3: jmp 0x8440
0x89d0: cmp dword ptr [rsp+0x8],0x2
0x89d5: movzx ebx,byte ptr [rsp+0xf]
0x89da: mov r12d,r8d
0x89dd: mov rbp,r11
0x89e0: sete dl
0x89e3: mov eax,ebx
0x89e5: test r15,r15
0x89e8: sete cl
0x89eb: and eax,edx
0x89ed: and al,cl
0x89ef: jne 0x9456
0x89f5: mov eax,ebx
0x89f7: xor eax,0x1
0x89fa: and dl,al
0x89fc: je 0x936c
0x8a02: cmp byte ptr [rsp+0x7c],0x0
0x8a07: je 0x936a
0x8a0d: cmp byte ptr [rsp+0xe],0x0
0x8a12: jne 0x940d
0x8a18: test r13,r13
0x8a1b: sete al
0x8a1e: cmp qword ptr [rsp+0x50],0x0
0x8a24: setne dl
0x8a27: and al,dl
0x8a29: je 0x944c
0x8a2f: mov r13,qword ptr [rsp+0x50]
0x8a34: lea rbx,[rip+0x40aa]
0x8a3b: mov byte ptr [r14],0x27
0x8a3f: mov dword ptr [rsp+0x8],0x2
0x8a47: mov r15d,0x1
0x8a4d: mov qword ptr [rsp+0x18],0x1
0x8a56: mov byte ptr [rsp+0xf],0x0
0x8a5b: mov qword ptr [rsp+0x48],rbx
0x8a60: mov byte ptr [rsp+0x7c],al
0x8a64: jmp 0x8343
0x8b18: lea rax,[rsp+0xa0]
0x8b20: cmp r11,-0x1
0x8b24: mov qword ptr [rsp+0xa0],0x0
0x8b30: mov qword ptr [rsp+0x28],rax
0x8b35: jne 0x8b64
0x8b37: mov rdi,qword ptr [rsp+0x10]
0x8b3c: mov byte ptr [rsp+0x40],r8b
0x8b41: mov byte ptr [rsp+0x38],r10b
0x8b46: mov qword ptr [rsp+0x30],r9
0x8b4b: call 0x1bf0
0x8b50: movzx r8d,byte ptr [rsp+0x40]
0x8b56: movzx r10d,byte ptr [rsp+0x38]
0x8b5c: mov r11,rax
0x8b5f: mov r9,qword ptr [rsp+0x30]
0x8b64: lea rax,[rsp+0x9c]
0x8b6c: xor ecx,ecx
0x8b6e: mov byte ptr [rsp+0x7e],bl
0x8b72: mov byte ptr [rsp+0x7d],r8b
0x8b77: mov rbx,rcx
0x8b7a: mov qword ptr [rsp+0x88],r9
0x8b82: mov qword ptr [rsp+0x38],rax
0x8b87: mov byte ptr [rsp+0x7f],r10b
0x8b8c: mov qword ptr [rsp+0x80],r15
0x8b94: mov qword ptr [rsp+0x40],r14
0x8b99: mov qword ptr [rsp+0x70],r13
0x8b9e: mov qword ptr [rsp+0x30],r11
0x8ba3: mov rax,qword ptr [rsp+0x10]
0x8ba8: lea r14,[rbp+rbx]
0x8bad: mov rdx,qword ptr [rsp+0x30]
0x8bb2: mov rcx,qword ptr [rsp+0x28]
0x8bb7: mov rdi,qword ptr [rsp+0x38]
0x8bbc: lea r13,[rax+r14]
0x8bc0: sub rdx,r14
0x8bc3: mov rsi,r13
0x8bc6: call 0xb080
0x8bcb: test rax,rax
0x8bce: mov r15,rax
0x8bd1: je 0x8c21
0x8bd3: cmp rax,-0x1
0x8bd7: je 0x91f5
0x8bdd: cmp rax,-0x2
0x8be1: je 0x9181
0x8be7: cmp dword ptr [rsp+0x8],0x2
0x8bec: sete al
0x8bef: and al,byte ptr [rsp+0xf]
0x8bf3: jne 0x8d90
0x8bf9: mov edi,dword ptr [rsp+0x9c]
0x8c00: call 0x1f10
0x8c05: mov rdi,qword ptr [rsp+0x28]
0x8c0a: test eax,eax
0x8c0c: mov eax,0x0
0x8c11: cmove r12d,eax
0x8c15: add rbx,r15
0x8c18: call 0x1f00
0x8c1d: test eax,eax
0x8c1f: je 0x8ba3
0x8c21: mov edx,r12d
0x8c24: mov rdi,rbx
0x8c27: movzx r8d,byte ptr [rsp+0x7d]
0x8c2d: xor edx,0x1
0x8c30: movzx ebx,byte ptr [rsp+0x7e]
0x8c35: movzx r10d,byte ptr [rsp+0x7f]
0x8c3b: and dl,byte ptr [rsp+0xd]
0x8c3f: mov r15,qword ptr [rsp+0x80]
0x8c47: mov r14,qword ptr [rsp+0x40]
0x8c4c: mov r13,qword ptr [rsp+0x70]
0x8c51: mov r11,qword ptr [rsp+0x30]
0x8c56: cmp rdi,0x1
0x8c5a: jbe 0x925b
0x8c60: mov rcx,rdi
0x8c63: xor esi,esi
0x8c65: movzx r9d,byte ptr [rsp+0xf]
0x8c6b: add rcx,rbp
0x8c6e: mov rdi,qword ptr [rsp+0x10]
0x8c73: jmp 0x8d2e
0x8c80: cmp dword ptr [rsp+0x8],0x2
0x8c85: sete al
0x8c88: test r9b,r9b
0x8c8b: jne 0x9140
0x8c91: mov esi,r8d
0x8c94: xor esi,0x1
0x8c97: and al,sil
0x8c9a: je 0x8ccb
0x8c9c: cmp r13,r15
0x8c9f: jbe 0x8ca6
0x8ca1: mov byte ptr [r14+r15],0x27
0x8ca6: lea rsi,[r15+0x1]
0x8caa: cmp r13,rsi
0x8cad: jbe 0x8cb5
0x8caf: mov byte ptr [r14+r15+0x1],0x24
0x8cb5: lea rsi,[r15+0x2]
0x8cb9: cmp r13,rsi
0x8cbc: jbe 0x8cc4
0x8cbe: mov byte ptr [r14+r15+0x2],0x27
0x8cc4: add r15,0x3
0x8cc8: mov r8d,eax
0x8ccb: cmp r13,r15
0x8cce: jbe 0x8cd5
0x8cd0: mov byte ptr [r14+r15],0x5c
0x8cd5: lea rax,[r15+0x1]
0x8cd9: cmp r13,rax
0x8cdc: jbe 0x8ceb
0x8cde: mov eax,ebx
0x8ce0: shr al,0x6
0x8ce3: add eax,0x30
0x8ce6: mov byte ptr [r14+r15+0x1],al
0x8ceb: lea rax,[r15+0x2]
0x8cef: cmp r13,rax
0x8cf2: jbe 0x8d04
0x8cf4: mov eax,ebx
0x8cf6: shr al,0x3
0x8cf9: and eax,0x7
0x8cfc: add eax,0x30
0x8cff: mov byte ptr [r14+r15+0x2],al
0x8d04: and ebx,0x7
0x8d07: add rbp,0x1
0x8d0b: add r15,0x3
0x8d0f: add ebx,0x30
0x8d12: cmp rbp,rcx
0x8d15: jae 0x8500
0x8d1b: mov esi,edx
0x8d1d: cmp r13,r15
0x8d20: jbe 0x8d26
0x8d22: mov byte ptr [r14+r15],bl
0x8d26: movzx ebx,byte ptr [rdi+rbp]
0x8d2a: add r15,0x1
0x8d2e: test dl,dl
0x8d30: jne 0x8c80
0x8d36: mov eax,esi
0x8d38: xor eax,0x1
0x8d3b: and eax,r8d
0x8d3e: test r10b,r10b
0x8d41: je 0x8d51
0x8d43: cmp r13,r15
0x8d46: jbe 0x8d4d
0x8d48: mov byte ptr [r14+r15],0x5c
0x8d4d: add r15,0x1
0x8d51: add rbp,0x1
0x8d55: cmp rbp,rcx
0x8d58: jae 0x84dc
0x8d5e: test al,al
0x8d60: je 0x915e
0x8d66: cmp r13,r15
0x8d69: jbe 0x8d70
0x8d6b: mov byte ptr [r14+r15],0x27
0x8d70: lea rax,[r15+0x1]
0x8d74: cmp r13,rax
0x8d77: jbe 0x8d7f
0x8d79: mov byte ptr [r14+r15+0x1],0x27
0x8d7f: add r15,0x2
0x8d83: xor r10d,r10d
0x8d86: xor r8d,r8d
0x8d89: jmp 0x8d1d
0x8d90: cmp r15,0x1
0x8d94: je 0x8bf9
0x8d9a: mov rdi,qword ptr [rsp+0x10]
0x8d9f: lea rcx,[rdi+r15]
0x8da3: lea rdx,[rdi+r14+0x1]
0x8da8: lea r8,[rcx+r14]
0x8dac: jmp 0x8dbd
0x8db0: add rdx,0x1
0x8db4: cmp r8,rdx
0x8db7: je 0x8bf9
0x8dbd: movzx ecx,byte ptr [rdx]
0x8dc0: sub ecx,0x5b
0x8dc3: cmp cl,0x21
0x8dc6: ja 0x8db0
0x8dc8: mov esi,0x1
0x8dcd: shl rsi,cl
0x8dd0: mov rcx,rsi
0x8dd3: movabsq rsi,0x20000002b
0x8ddd: test rcx,rsi
0x8de0: je 0x8db0
0x8de2: mov r14,qword ptr [rsp+0x40]
0x8de7: mov r13,qword ptr [rsp+0x70]
0x8dec: mov rbp,qword ptr [rsp+0x30]
0x8df1: mov dword ptr [rsp+0x8],0x2
0x8df9: cmp byte ptr [rsp+0xd],0x0
0x8dfe: je 0x8e10
0x8e00: test al,al
0x8e02: mov eax,0x4
0x8e07: cmove eax,dword ptr [rsp+0x8]
0x8e0c: mov dword ptr [rsp+0x8],eax
0x8e10: sub rsp,0x8
0x8e14: mov rcx,rbp
0x8e17: mov rsi,r13
0x8e1a: push qword ptr [rsp+0x68]
0x8e1e: push qword ptr [rsp+0x78]
0x8e22: mov rdi,r14
0x8e25: push 0x0
0x8e27: mov r9d,dword ptr [rsp+0x98]
0x8e2f: mov r8d,dword ptr [rsp+0x28]
0x8e34: mov rdx,qword ptr [rsp+0x30]
0x8e39: and r9d,-0x3
0x8e3d: call 0x8270
0x8e42: add rsp,0x20
0x8e46: mov r15,rax
0x8e49: mov rbx,qword ptr [rsp+0xa8]
0x8e51: xor rbx,qword ptr fs:0x28
0x8e5a: mov rax,r15
0x8e5d: jne 0x9463
0x8e63: add rsp,0xb8
0x8e6a: pop rbx
0x8e6b: pop rbp
0x8e6c: pop r12
0x8e6e: pop r13
0x8e70: pop r14
0x8e72: pop r15
0x8e74: ret 
0x8e78: mov rbp,r11
0x8e7b: jmp 0x8df9
0x8ee1: test r13,r13
0x8ee4: jne 0x947a
0x8eea: lea rax,[rip+0x3bf4]
0x8ef1: mov qword ptr [rsp+0x50],0x0
0x8efa: mov byte ptr [rsp+0xe],0x1
0x8eff: mov byte ptr [rsp+0x7c],0x0
0x8f04: xor r12d,r12d
0x8f07: mov byte ptr [rsp+0xf],0x0
0x8f0c: mov qword ptr [rsp+0x18],0x1
0x8f15: mov qword ptr [rsp+0x48],rax
0x8f1a: mov r15d,0x1
0x8f20: mov dword ptr [rsp+0x8],0x2
0x8f28: jmp 0x8343
0x9140: movzx ebx,byte ptr [rsp+0xf]
0x9145: mov rbp,r11
0x9148: mov byte ptr [rsp+0xd],bl
0x914c: jmp 0x8df9
0x9151: movzx edx,byte ptr [rsp+0xd]
0x9156: xor r12d,r12d
0x9159: jmp 0x8c60
0x915e: xor r10d,r10d
0x9161: jmp 0x8d1d
0x9181: mov r11,qword ptr [rsp+0x30]
0x9186: mov rsi,r14
0x9189: mov rcx,r13
0x918c: mov rax,rbx
0x918f: mov rdi,rbx
0x9192: movzx r8d,byte ptr [rsp+0x7d]
0x9198: movzx ebx,byte ptr [rsp+0x7e]
0x919d: mov r9,qword ptr [rsp+0x88]
0x91a5: cmp rsi,r11
0x91a8: movzx r10d,byte ptr [rsp+0x7f]
0x91ae: mov r15,qword ptr [rsp+0x80]
0x91b6: mov r14,qword ptr [rsp+0x40]
0x91bb: mov r13,qword ptr [rsp+0x70]
0x91c0: jae 0x91e8
0x91c2: cmp byte ptr [rcx],0x0
0x91c5: jne 0x91d7
0x91c7: jmp 0x91e8
0x91d0: cmp byte ptr [r9+rax],0x0
0x91d5: je 0x91e5
0x91d7: add rax,0x1
0x91db: lea rdx,[rbp+rax]
0x91e0: cmp r11,rdx
0x91e3: ja 0x91d0
0x91e5: mov rdi,rax
0x91e8: movzx edx,byte ptr [rsp+0xd]
0x91ed: xor r12d,r12d
0x91f0: jmp 0x8c56
0x91f5: mov rdi,rbx
0x91f8: movzx r8d,byte ptr [rsp+0x7d]
0x91fe: movzx ebx,byte ptr [rsp+0x7e]
0x9203: movzx r10d,byte ptr [rsp+0x7f]
0x9209: mov r15,qword ptr [rsp+0x80]
0x9211: xor r12d,r12d
0x9214: mov r14,qword ptr [rsp+0x40]
0x9219: mov r13,qword ptr [rsp+0x70]
0x921e: mov r11,qword ptr [rsp+0x30]
0x9223: movzx edx,byte ptr [rsp+0xd]
0x9228: jmp 0x8c56
0x925b: mov eax,edx
0x925d: jmp 0x87b7
0x936a: mov eax,edx
0x936c: mov rbx,qword ptr [rsp+0x48]
0x9371: test rbx,rbx
0x9374: je 0x93a2
0x9376: test al,al
0x9378: je 0x93a2
0x937a: movzx ecx,byte ptr [rbx]
0x937d: mov rax,rbx
0x9380: test cl,cl
0x9382: je 0x93a2
0x9384: mov rdx,r15
0x9387: sub rax,r15
0x938a: cmp r13,rdx
0x938d: jbe 0x9393
0x938f: mov byte ptr [r14+rdx],cl
0x9393: add rdx,0x1
0x9397: movzx ecx,byte ptr [rax+rdx]
0x939b: test cl,cl
0x939d: jne 0x938a
0x939f: mov r15,rdx
0x93a2: cmp r13,r15
0x93a5: jbe 0x8e49
0x93ab: mov byte ptr [r14+r15],0x0
0x93b0: jmp 0x8e49
0x93b5: cmp dword ptr [rsp+0x8],0x2
0x93ba: movzx ebx,byte ptr [rsp+0xf]
0x93bf: mov rbp,r11
0x93c2: sete al
0x93c5: mov byte ptr [rsp+0xd],bl
0x93c9: jmp 0x8df9
0x940d: sub rsp,0x8
0x9411: mov r8d,0x5
0x9417: mov rcx,r11
0x941a: push qword ptr [rsp+0x68]
0x941e: push qword ptr [rsp+0x78]
0x9422: mov rdi,r14
0x9425: push qword ptr [rsp+0x38]
0x9429: mov r9d,dword ptr [rsp+0x98]
0x9431: mov rdx,qword ptr [rsp+0x30]
0x9436: mov rsi,qword ptr [rsp+0x70]
0x943b: call 0x8270
0x9440: add rsp,0x20
0x9444: mov r15,rax
0x9447: jmp 0x8e49
0x944c: movzx eax,byte ptr [rsp+0x7c]
0x9451: jmp 0x936c
0x9456: mov dword ptr [rsp+0x8],0x2
0x945e: jmp 0x8df9
0x9463: call 0x1c10
0x9468: mov byte ptr [rsp+0xd],0x0
0x946d: jmp 0x8ee1
0x947a: mov byte ptr [rsp+0xe],0x1
0x947f: xor eax,eax
0x9481: xor r12d,r12d
0x9484: mov qword ptr [rsp+0x50],0x0
0x948d: jmp 0x8a34
0x94a4: nop 
0x94a6: nop word ptr cs:[rax+rax]
0x959c: add rsp,0x20
0x95a0: mov r11,qword ptr [rsp+0x10]
0x95a5: cmp r11,rax
0x95a8: ja 0x9611
0x95aa: lea rsi,[rax+0x1]
0x95ae: lea rax,[rip+0x206b8b]
0x95b5: cmp r12,rax
0x95b8: mov qword ptr [rbx],rsi
0x95bb: je 0x95cf
0x95bd: mov rdi,r12
0x95c0: mov qword ptr [rsp+0x10],rsi
0x95c5: call 0x1af0
0x95ca: mov rsi,qword ptr [rsp+0x10]
0x95cf: mov rdi,rsi
0x95d2: mov qword ptr [rsp+0x10],rsi
0x95d7: call 0xa4d0
0x95dc: sub rsp,0x8
0x95e0: mov qword ptr [rbx+0x8],rax
0x95e4: mov r8d,dword ptr [rbp]
0x95e8: push qword ptr [rbp+0x30]
0x95eb: push qword ptr [rbp+0x28]
0x95ee: mov rcx,r14
0x95f1: push r15
0x95f3: mov r9d,dword ptr [rsp+0x3c]
0x95f8: mov rdi,rax
0x95fb: mov rdx,qword ptr [rsp+0x28]
0x9600: mov rsi,qword ptr [rsp+0x30]
0x9605: mov r12,rax
0x9608: call 0x8270
0x960d: add rsp,0x20
0x9611: mov eax,dword ptr [rsp+0x18]
0x9615: mov dword ptr [r13],eax
0x9619: add rsp,0x28
0x961d: mov rax,r12
0x9620: pop rbx
0x9621: pop rbp
0x9622: pop r12
0x9624: pop r13
0x9626: pop r14
0x9628: pop r15
0x962a: ret 
0x9651: call 0x1b00
0x9656: call 0xa720
0x965b: nop dword ptr [rax+rax]
0x9660: push r12
0x9662: push rbp
0x9663: push rbx
0x9664: mov rbx,rdi
0x9667: call 0x1b10
0x966c: mov r12d,dword ptr [rax]
0x966f: mov rbp,rax
0x9672: lea rax,[rip+0x206bc7]
0x9679: test rbx,rbx
0x967c: mov esi,0x38
0x9681: cmove rbx,rax
0x9685: mov rdi,rbx
0x9688: call 0xa6d0
0x968d: mov dword ptr [rbp],r12d
0x9691: pop rbx
0x9692: pop rbp
0x9693: pop r12
0x9695: ret 
0x96a0: lea rax,[rip+0x206b99]
0x96a7: test rdi,rdi
0x96aa: cmove rdi,rax
0x96ae: mov eax,dword ptr [rdi]
0x96b0: ret 
0x96c0: lea rax,[rip+0x206b79]
0x96c7: test rdi,rdi
0x96ca: cmove rdi,rax
0x96ce: mov dword ptr [rdi],esi
0x96d0: ret 
0x96e0: lea rax,[rip+0x206b59]
0x96e7: test rdi,rdi
0x96ea: mov ecx,esi
0x96ec: cmove rdi,rax
0x96f0: mov eax,esi
0x96f2: and ecx,0x1f
0x96f5: shr al,0x5
0x96f8: movzx eax,al
0x96fb: lea rdi,[rdi+rax*4+0x8]
0x9700: mov esi,dword ptr [rdi]
0x9702: mov eax,esi
0x9704: shr eax,cl
0x9706: xor edx,eax
0x9708: and eax,0x1
0x970b: and edx,0x1
0x970e: shl edx,cl
0x9710: xor edx,esi
0x9712: mov dword ptr [rdi],edx
0x9714: ret 
0x9720: lea rax,[rip+0x206b19]
0x9727: test rdi,rdi
0x972a: cmove rdi,rax
0x972e: mov eax,dword ptr [rdi+0x4]
0x9731: mov dword ptr [rdi+0x4],esi
0x9734: ret 
0x9740: lea rax,[rip+0x206af9]
0x9747: test rdi,rdi
0x974a: cmove rdi,rax
0x974e: test rsi,rsi
0x9751: mov dword ptr [rdi],0xa
0x9757: je 0x9767
0x9759: test rdx,rdx
0x975c: je 0x9767
0x975e: mov qword ptr [rdi+0x28],rsi
0x9762: mov qword ptr [rdi+0x30],rdx
0x9766: ret 
0x9767: sub rsp,0x8
0x976b: call 0x1b00
0x9770: push r15
0x9772: push r14
0x9774: lea rax,[rip+0x206ac5]
0x977b: push r13
0x977d: push r12
0x977f: mov r13,rdi
0x9782: push rbp
0x9783: push rbx
0x9784: mov rbx,r8
0x9787: mov r14,rsi
0x978a: mov r15,rdx
0x978d: sub rsp,0x18
0x9791: test r8,r8
0x9794: cmove rbx,rax
0x9798: mov qword ptr [rsp+0x8],rcx
0x979d: call 0x1b10
0x97a2: mov r12d,dword ptr [rax]
0x97a5: mov rbp,rax
0x97a8: lea rax,[rbx+0x8]
0x97ac: sub rsp,0x8
0x97b0: mov r9d,dword ptr [rbx+0x4]
0x97b4: push qword ptr [rbx+0x30]
0x97b7: mov r8d,dword ptr [rbx]
0x97ba: push qword ptr [rbx+0x28]
0x97bd: mov rdx,r15
0x97c0: push rax
0x97c1: mov rcx,qword ptr [rsp+0x28]
0x97c6: mov rsi,r14
0x97c9: mov rdi,r13
0x97cc: call 0x8270
0x97d1: mov dword ptr [rbp],r12d
0x97d5: add rsp,0x38
0x97d9: pop rbx
0x97da: pop rbp
0x97db: pop r12
0x97dd: pop r13
0x97df: pop r14
0x97e1: pop r15
0x97e3: ret 
0x97f0: push r15
0x97f2: push r14
0x97f4: lea rax,[rip+0x206a45]
0x97fb: push r13
0x97fd: push r12
0x97ff: mov r12,rdx
0x9802: push rbp
0x9803: push rbx
0x9804: mov rbx,rcx
0x9807: mov r14,rdi
0x980a: mov r15,rsi
0x980d: sub rsp,0x38
0x9811: test rcx,rcx
0x9814: cmove rbx,rax
0x9818: xor ebp,ebp
0x981a: call 0x1b10
0x981f: test r12,r12
0x9822: mov r13,rax
0x9825: mov eax,dword ptr [rax]
0x9827: sete bpl
0x982b: or ebp,dword ptr [rbx+0x4]
0x982e: lea r10,[rbx+0x8]
0x9832: sub rsp,0x8
0x9836: mov r8d,dword ptr [rbx]
0x9839: mov rcx,r15
0x983c: mov dword ptr [rsp+0x14],eax
0x9840: push qword ptr [rbx+0x30]
0x9843: mov rdx,r14
0x9846: push qword ptr [rbx+0x28]
0x9849: push r10
0x984b: xor esi,esi
0x984d: mov r9d,ebp
0x9850: xor edi,edi
0x9852: mov qword ptr [rsp+0x40],r10
0x9857: call 0x8270
0x985c: lea rsi,[rax+0x1]
0x9860: mov qword ptr [rsp+0x48],rax
0x9865: add rsp,0x20
0x9869: mov rdi,rsi
0x986c: mov qword ptr [rsp+0x18],rsi
0x9871: call 0xa4d0
0x9876: mov qword ptr [rsp+0x10],rax
0x987b: sub rsp,0x8
0x987f: push qword ptr [rbx+0x30]
0x9882: push qword ptr [rbx+0x28]
0x9885: mov r10,qword ptr [rsp+0x38]
0x988a: mov r9d,ebp
0x988d: mov r8d,dword ptr [rbx]
0x9890: mov rcx,r15
0x9893: mov rdx,r14
0x9896: mov rdi,rax
0x9899: push r10
0x989b: mov rsi,qword ptr [rsp+0x38]
0x98a0: call 0x8270
0x98a5: mov eax,dword ptr [rsp+0x2c]
0x98a9: add rsp,0x20
0x98ad: test r12,r12
0x98b0: mov dword ptr [r13],eax
0x98b4: je 0x98bf
0x98b6: mov r11,qword ptr [rsp+0x28]
0x98bb: mov qword ptr [r12],r11
0x98bf: mov rax,qword ptr [rsp+0x10]
0x98c4: add rsp,0x38
0x98c8: pop rbx
0x98c9: pop rbp
0x98ca: pop r12
0x98cc: pop r13
0x98ce: pop r14
0x98d0: pop r15
0x98d2: ret 
0x98e0: mov rcx,rdx
0x98e3: xor edx,edx
0x98e5: jmp 0x97f0
0x98f0: mov eax,dword ptr [rip+0x2067a2]
0x98f6: push r12
0x98f8: mov r12,qword ptr [rip+0x2067a1]
0x98ff: push rbp
0x9900: push rbx
0x9901: cmp eax,0x1
0x9904: jle 0x9931
0x9906: sub eax,0x2
0x9909: lea rbx,[r12+0x18]
0x990e: shl rax,0x4
0x9912: lea rbp,[r12+rax+0x28]
0x9917: nop word ptr [rax+rax]
0x9920: mov rdi,qword ptr [rbx]
0x9923: add rbx,0x10
0x9927: call 0x1af0
0x992c: cmp rbx,rbp
0x992f: jne 0x9920
0x9931: mov rdi,qword ptr [r12+0x8]
0x9936: lea rbx,[rip+0x206803]
0x993d: cmp rdi,rbx
0x9940: je 0x9959
0x9942: call 0x1af0
0x9947: mov qword ptr [rip+0x20675e],0x100
0x9952: mov qword ptr [rip+0x20675f],rbx
0x9959: lea rbx,[rip+0x206750]
0x9960: cmp r12,rbx
0x9963: je 0x9974
0x9965: mov rdi,r12
0x9968: call 0x1af0
0x996d: mov qword ptr [rip+0x20672c],rbx
0x9974: pop rbx
0x9975: mov dword ptr [rip+0x206719],0x1
0x997f: pop rbp
0x9980: pop r12
0x9982: ret 
0x9990: lea rcx,[rip+0x2068a9]
0x9997: mov rdx,-0x1
0x999e: jmp 0x94b0
0x99b0: lea rcx,[rip+0x206889]
0x99b7: jmp 0x94b0
0x99c0: lea rcx,[rip+0x206879]
0x99c7: mov rsi,rdi
0x99ca: mov rdx,-0x1
0x99d1: xor edi,edi
0x99d3: jmp 0x94b0
0x99e0: lea rcx,[rip+0x206859]
0x99e7: mov rdx,rsi
0x99ea: mov rsi,rdi
0x99ed: xor edi,edi
0x99ef: jmp 0x94b0
0x9a6f: mov rcx,qword ptr [rsp+0x38]
0x9a74: xor rcx,qword ptr fs:0x28
0x9a7d: jne 0x9a89
0x9a7f: add rsp,0x48
0x9a83: ret 
0x9a84: call 0x1b00
0x9a89: call 0x1c10
0x9a8e: nop 
0x9a90: sub rsp,0x48
0x9a94: mov rax,rdx
0x9a97: mov rdx,rcx
0x9a9a: mov rcx,qword ptr fs:0x28
0x9aa3: mov qword ptr [rsp+0x38],rcx
0x9aa8: xor ecx,ecx
0x9aaa: cmp esi,0xa
0x9aad: je 0x9b10
0x9aaf: mov dword ptr [rsp],esi
0x9ab2: mov rcx,rsp
0x9ab5: mov rsi,rax
0x9ab8: mov qword ptr [rsp+0x4],0x0
0x9ac1: mov qword ptr [rsp+0xc],0x0
0x9aca: mov qword ptr [rsp+0x14],0x0
0x9ad3: mov qword ptr [rsp+0x1c],0x0
0x9adc: mov qword ptr [rsp+0x24],0x0
0x9ae5: mov qword ptr [rsp+0x2c],0x0
0x9aee: mov dword ptr [rsp+0x34],0x0
0x9af6: call 0x94b0
0x9afb: mov rdx,qword ptr [rsp+0x38]
0x9b00: xor rdx,qword ptr fs:0x28
0x9b09: jne 0x9b15
0x9b0b: add rsp,0x48
0x9b0f: ret 
0x9b10: call 0x1b00
0x9b15: call 0x1c10
0x9b1a: nop word ptr [rax+rax]
0x9b30: mov rcx,rdx
0x9b33: mov rdx,rsi
0x9b36: mov esi,edi
0x9b38: xor edi,edi
0x9b3a: jmp 0x9a90
0x9b40: sub rsp,0x48
0x9b44: mov ecx,edx
0x9b46: mov rax,qword ptr fs:0x28
0x9b4f: mov qword ptr [rsp+0x38],rax
0x9b54: xor eax,eax
0x9b56: mov rax,qword ptr [rip+0x206713]
0x9b5d: mov r8,rsp
0x9b60: and ecx,0x1f
0x9b63: movdqa xmm0,[rip+0x2066d5]
0x9b6b: mov qword ptr [rsp+0x30],rax
0x9b70: mov eax,edx
0x9b72: movaps [rsp],xmm0
0x9b76: shr al,0x5
0x9b79: movzx eax,al
0x9b7c: lea r9,[r8+rax*4+0x8]
0x9b81: movdqa xmm0,[rip+0x2066c7]
0x9b89: movaps [rsp+0x10],xmm0
0x9b8e: movdqa xmm0,[rip+0x2066ca]
0x9b96: movaps [rsp+0x20],xmm0
0x9b9b: mov edx,dword ptr [r9]
0x9b9e: mov eax,edx
0x9ba0: shr eax,cl
0x9ba2: not eax
0x9ba4: and eax,0x1
0x9ba7: shl eax,cl
0x9ba9: mov rcx,r8
0x9bac: xor eax,edx
0x9bae: mov rdx,rsi
0x9bb1: mov rsi,rdi
0x9bb4: mov dword ptr [r9],eax
0x9bb7: xor edi,edi
0x9bb9: call 0x94b0
0x9bbe: mov rsi,qword ptr [rsp+0x38]
0x9bc3: xor rsi,qword ptr fs:0x28
0x9bcc: jne 0x9bd3
0x9bce: add rsp,0x48
0x9bd2: ret 
0x9bd3: call 0x1c10
0x9bd8: nop dword ptr [rax+rax]
0x9be0: movsx edx,sil
0x9be4: mov rsi,-0x1
0x9beb: jmp 0x9b40
0x9bf0: mov edx,0x3a
0x9bf5: mov rsi,-0x1
0x9bfc: jmp 0x9b40
0x9c10: mov edx,0x3a
0x9c15: jmp 0x9b40
0x9c8f: mov rcx,qword ptr [rsp+0x38]
0x9c94: xor rcx,qword ptr fs:0x28
0x9c9d: jne 0x9ca9
0x9c9f: add rsp,0x48
0x9ca3: ret 
0x9ca4: call 0x1b00
0x9ca9: call 0x1c10
0x9cae: nop 
0x9cb0: sub rsp,0x48
0x9cb4: mov r9,rcx
0x9cb7: mov rcx,qword ptr [rip+0x2065b2]
0x9cbe: movdqa xmm0,[rip+0x20657a]
0x9cc6: mov rax,qword ptr fs:0x28
0x9ccf: mov qword ptr [rsp+0x38],rax
0x9cd4: xor eax,eax
0x9cd6: movaps [rsp],xmm0
0x9cda: test rsi,rsi
0x9cdd: mov qword ptr [rsp+0x30],rcx
0x9ce2: mov dword ptr [rsp],0xa
0x9ce9: movdqa xmm0,[rip+0x20655f]
0x9cf1: movaps [rsp+0x10],xmm0
0x9cf6: movdqa xmm0,[rip+0x206562]
0x9cfe: movaps [rsp+0x20],xmm0
0x9d03: je 0x9d37
0x9d05: test rdx,rdx
0x9d08: je 0x9d37
0x9d0a: mov qword ptr [rsp+0x28],rsi
0x9d0f: mov qword ptr [rsp+0x30],rdx
0x9d14: mov rcx,rsp
0x9d17: mov rdx,r8
0x9d1a: mov rsi,r9
0x9d1d: call 0x94b0
0x9d22: mov rdi,qword ptr [rsp+0x38]
0x9d27: xor rdi,qword ptr fs:0x28
0x9d30: jne 0x9d3c
0x9d32: add rsp,0x48
0x9d36: ret 
0x9d37: call 0x1b00
0x9d3c: call 0x1c10
0x9d41: nop dword ptr [rax+rax]
0x9d46: nop word ptr cs:[rax+rax]
0x9d50: mov r8,-0x1
0x9d57: jmp 0x9cb0
0x9d60: mov rcx,rdx
0x9d63: mov r8,-0x1
0x9d6a: mov rdx,rsi
0x9d6d: mov rsi,rdi
0x9d70: xor edi,edi
0x9d72: jmp 0x9cb0
0x9d80: mov r8,rcx
0x9d83: mov rcx,rdx
0x9d86: mov rdx,rsi
0x9d89: mov rsi,rdi
0x9d8c: xor edi,edi
0x9d8e: jmp 0x9cb0
0x9da0: lea rcx,[rip+0x2062b9]
0x9da7: jmp 0x94b0
0x9db0: lea rcx,[rip+0x2062a9]
0x9db7: mov rdx,rsi
0x9dba: mov rsi,rdi
0x9dbd: xor edi,edi
0x9dbf: jmp 0x94b0
0x9fe8: mov r8,rcx
0x9feb: mov rcx,rdx
0x9fee: lea rdx,[rip+0x2fbf]
0x9ff5: mov esi,0x1
0x9ffa: xor eax,eax
0x9ffc: call 0x1ee0
0xa001: jmp 0x9eec
0xa1fd: push r12
0xa1ff: push r15
0xa201: push r14
0xa203: mov r8,qword ptr [rsp+0x20]
0xa208: mov rcx,rbx
0xa20b: mov rdx,rax
0xa20e: mov rdi,rbp
0xa211: mov esi,0x1
0xa216: xor eax,eax
0xa218: call 0x1ee0
0xa21d: add rsp,0x20
0xa221: add rsp,0x28
0xa225: pop rbx
0xa226: pop rbp
0xa227: pop r12
0xa229: pop r13
0xa22b: pop r14
0xa22d: pop r15
0xa22f: ret 
0xa269: push r12
0xa26b: push r15
0xa26d: push r14
0xa26f: mov r9,qword ptr [rsp+0x28]
0xa274: jmp 0xa203
0xa2d0: xor r9d,r9d
0xa2d3: cmp qword ptr [r8],0x0
0xa2d7: je 0xa2eb
0xa2d9: nop dword ptr [rax]
0xa2e0: add r9,0x1
0xa2e4: cmp qword ptr [r8+r9*8],0x0
0xa2e9: jne 0xa2e0
0xa2eb: jmp 0x9eb0
0xa2f0: sub rsp,0x68
0xa2f4: mov r10,r8
0xa2f7: xor r9d,r9d
0xa2fa: mov rax,qword ptr fs:0x28
0xa303: mov qword ptr [rsp+0x58],rax
0xa308: xor eax,eax
0xa30a: mov r8,rsp
0xa30d: nop dword ptr [rax]
0xa310: mov eax,dword ptr [r10]
0xa313: cmp eax,0x2f
0xa316: ja 0xa35a
0xa318: mov r11d,eax
0xa31b: add r11,qword ptr [r10+0x10]
0xa31f: add eax,0x8
0xa322: mov dword ptr [r10],eax
0xa325: mov rax,qword ptr [r11]
0xa328: test rax,rax
0xa32b: mov qword ptr [r8+r9*8],rax
0xa32f: je 0xa33b
0xa331: add r9,0x1
0xa335: cmp r9,0xa
0xa339: jne 0xa310
0xa33b: call 0x9eb0
0xa340: mov rax,qword ptr [rsp+0x58]
0xa345: xor rax,qword ptr fs:0x28
0xa34e: jne 0xa355
0xa350: add rsp,0x68
0xa354: ret 
0xa355: call 0x1c10
0xa35a: mov r11,qword ptr [r10+0x8]
0xa35e: lea rax,[r11+0x8]
0xa362: mov qword ptr [r10+0x8],rax
0xa366: jmp 0xa325
0xa430: call 0x1c10
0xa43c: mov rax,rbx
0xa43f: add rbx,0x8
0xa443: jmp 0xa3f6
0xa450: push rbx
0xa451: lea rsi,[rip+0x2baa]
0xa458: mov edx,0x5
0xa45d: xor edi,edi
0xa45f: call 0x1bd0
0xa464: lea rdx,[rip+0x2bac]
0xa46b: mov rsi,rax
0xa46e: mov edi,0x1
0xa473: xor eax,eax
0xa475: call 0x1e50
0xa47a: lea rsi,[rip+0x2bac]
0xa481: mov edx,0x5
0xa486: xor edi,edi
0xa488: call 0x1bd0
0xa48d: lea rcx,[rip+0x2164]
0xa494: lea rdx,[rip+0x130c]
0xa49b: mov rsi,rax
0xa49e: mov edi,0x1
0xa4a3: xor eax,eax
0xa4a5: call 0x1e50
0xa4aa: mov rbx,qword ptr [rip+0x205c17]
0xa4b1: lea rsi,[rip+0x2da8]
0xa4b8: xor edi,edi
0xa4ba: mov edx,0x5
0xa4bf: call 0x1bd0
0xa4c4: mov rsi,rbx
0xa4c7: mov rdi,rax
0xa4ca: pop rbx
0xa4cb: jmp 0x1d20
0xa4ea: nop word ptr [rax+rax]
0xa4f0: mov rax,rdi
0xa4f3: mul rsi
0xa4f6: mov rdi,rax
0xa4f9: seto al
0xa4fc: test rdi,rdi
0xa4ff: js 0xa50b
0xa501: movzx eax,al
0xa504: test rax,rax
0xa507: jne 0xa50b
0xa509: jmp 0xa4d0
0xa50b: sub rsp,0x8
0xa50f: call 0xa720
0xa514: nop 
0xa516: nop word ptr cs:[rax+rax]
0xa520: jmp 0xa4d0
0xa539: test rdi,rdi
0xa53c: jne 0xa558
0xa558: call 0x1af0
0xa55d: xor eax,eax
0xa55f: pop rbx
0xa560: ret 
0xa566: nop word ptr cs:[rax+rax]
0xa570: mov rax,rsi
0xa573: mul rdx
0xa576: mov rsi,rax
0xa579: seto al
0xa57c: test rsi,rsi
0xa57f: js 0xa58b
0xa581: movzx eax,al
0xa584: test rax,rax
0xa587: jne 0xa58b
0xa589: jmp 0xa530
0xa58b: sub rsp,0x8
0xa58f: call 0xa720
0xa594: nop 
0xa596: nop word ptr cs:[rax+rax]
0xa5a0: test rdi,rdi
0xa5a3: mov r9,rdx
0xa5a6: mov rcx,qword ptr [rsi]
0xa5a9: je 0xa5e0
0xa5ab: xor edx,edx
0xa5ad: movabsq rax,0x5555555555555554
0xa5b7: div r9
0xa5ba: cmp rax,rcx
0xa5bd: jbe 0xa5fb
0xa5bf: mov rax,rcx
0xa5c2: shr rax, 1
0xa5c5: lea rcx,[rax+rcx+0x1]
0xa5ca: mov qword ptr [rsi],rcx
0xa5cd: imul rcx,r9
0xa5d1: mov rsi,rcx
0xa5d4: jmp 0xa530
0xa5e0: test rcx,rcx
0xa5e3: je 0xa608
0xa5e5: mov rax,rcx
0xa5e8: mul r9
0xa5eb: seto dl
0xa5ee: test rax,rax
0xa5f1: movzx edx,dl
0xa5f4: js 0xa5fb
0xa5f6: test rdx,rdx
0xa5f9: je 0xa5ca
0xa5fb: sub rsp,0x8
0xa5ff: call 0xa720
0xa604: nop dword ptr [rax]
0xa608: xor edx,edx
0xa60a: mov eax,0x80
0xa60f: xor r8d,r8d
0xa612: div r9
0xa615: test rax,rax
0xa618: sete r8b
0xa61c: lea rcx,[r8+rax]
0xa620: jmp 0xa5e5
0xa630: test rdi,rdi
0xa633: mov rax,qword ptr [rsi]
0xa636: je 0xa660
0xa638: movabsq rdx,0x5555555555555553
0xa642: cmp rax,rdx
0xa645: ja 0xa671
0xa647: mov rdx,rax
0xa64a: shr rdx, 1
0xa64d: lea rax,[rdx+rax+0x1]
0xa652: mov qword ptr [rsi],rax
0xa655: mov rsi,rax
0xa658: jmp 0xa530
0xa660: test rax,rax
0xa663: mov edx,0x80
0xa668: cmove rax,rdx
0xa66c: test rax,rax
0xa66f: jns 0xa652
0xa671: sub rsp,0x8
0xa675: call 0xa720
0xa67a: nop word ptr [rax+rax]
0xa680: push rbx
0xa681: mov rbx,rdi
0xa684: call 0xa4d0
0xa689: mov rdx,rbx
0xa68c: xor esi,esi
0xa68e: mov rdi,rax
0xa691: pop rbx
0xa692: jmp 0x1cd0
0xa6a0: mov rax,rdi
0xa6a3: sub rsp,0x8
0xa6a7: mul rsi
0xa6aa: seto dl
0xa6ad: test rax,rax
0xa6b0: js 0xa6c9
0xa6b2: movzx edx,dl
0xa6b5: test rdx,rdx
0xa6b8: jne 0xa6c9
0xa6ba: call 0x1d30
0xa6bf: test rax,rax
0xa6c2: je 0xa6c9
0xa6c4: add rsp,0x8
0xa6c8: ret 
0xa6c9: call 0xa720
0xa6ce: nop 
0xa6d0: push rbp
0xa6d1: push rbx
0xa6d2: mov rbp,rdi
0xa6d5: mov rdi,rsi
0xa6d8: mov rbx,rsi
0xa6db: sub rsp,0x8
0xa6df: call 0xa4d0
0xa6e4: add rsp,0x8
0xa6e8: mov rdx,rbx
0xa6eb: mov rsi,rbp
0xa6ee: pop rbx
0xa6ef: pop rbp
0xa6f0: mov rdi,rax
0xa6f3: jmp 0x1d60
0xa700: push rbx
0xa701: mov rbx,rdi
0xa704: call 0x1bf0
0xa709: mov rdi,rbx
0xa70c: lea rsi,[rax+0x1]
0xa710: pop rbx
0xa711: jmp 0xa6d0
0xa750: call 0x1b00
0xa755: nop word ptr cs:[rax+rax]
0xa75f: nop 
0xa7d2: mov esi,dword ptr [r14]
0xa7d5: mov r8,rax
0xa7d8: mov eax,0x0
0xa7dd: lea rdx,[rip+0x101e]
0xa7e4: mov rcx,r13
0xa7e7: cmp esi,0x16
0xa7ea: cmove esi,eax
0xa7ed: test ebx,ebx
0xa7ef: mov eax,0x1
0xa7f4: cmove ebx,eax
0xa7f7: xor eax,eax
0xa7f9: mov edi,ebx
0xa7fb: call 0x1e60
0xa800: mov rbp,qword ptr [rsp]
0xa85b: call 0x1c10
0xa900: mov eax,0xffffffff
0xa905: jmp 0xa8e4
0xa907: call 0x1c10
0xa90c: nop dword ptr [rax]
0xa95d: ucomisd xmm0,[rip+0x29bb]
0xa965: jp 0xa96e
0xa967: mov eax,0x1
0xa96c: je 0xa97b
0xa97b: mov qword ptr [rbx],rcx
0xa9d1: nop word ptr cs:[rax+rax]
0xa9db: nop dword ptr [rax+rax]
0xaa86: cmp eax,0x22
0xaa89: mov ebp,0x1
0xaa8e: jne 0xaab8
0xabe0: movsxd rdi,edi
0xabe3: mov eax,ebp
0xabe5: add rcx,rdi
0xabe8: or eax,0x2
0xabeb: mov qword ptr [r15],rcx
0xabee: cmp byte ptr [rcx],0x0
0xabf1: mov qword ptr [r14],rbx
0xabf4: cmovne ebp,eax
0xabf7: jmp 0xaabd
0xac55: or ebp,r9d
0xac58: jmp 0xabe0
0xacec: mov rax,rbx
0xacef: mul rsi
0xacf2: mov rbx,rax
0xacf5: jo 0xad84
0xacfb: sub r8d,0x1
0xacff: jne 0xacec
0xad01: jmp 0xac55
0xad60: call 0x1c10
0xad65: lea rcx,[rip+0x26dc]
0xad6c: lea rsi,[rip+0x25b5]
0xad73: lea rdi,[rip+0x25ce]
0xad7a: mov edx,0x54
0xad7f: call 0x1cb0
0xad84: mov r9d,0x1
0xad8a: or rbx,-0x1
0xad8e: jmp 0xacfb
0xb04d: call 0x1c10
0xb06a: mov rax,qword ptr [rsp+0x8]
0xb06f: jmp 0xaf39
0xb074: mov rax,qword ptr [rsp+0x8]
0xb079: jmp 0xaf91
0xb080: push r13
0xb082: push r12
0xb084: mov r13,rsi
0xb087: push rbp
0xb088: push rbx
0xb089: mov rbx,rdi
0xb08c: mov r12,rdx
0xb08f: sub rsp,0x18
0xb093: mov rax,qword ptr fs:0x28
0xb09c: mov qword ptr [rsp+0x8],rax
0xb0a1: xor eax,eax
0xb0a3: lea rax,[rsp+0x4]
0xb0a8: test rdi,rdi
0xb0ab: cmove rbx,rax
0xb0af: mov rdi,rbx
0xb0b2: call 0x1c30
0xb0b7: cmp rax,-0x3
0xb0bb: mov rbp,rax
0xb0be: jbe 0xb0e0
0xb0c0: test r12,r12
0xb0c3: je 0xb0e0
0xb0c5: xor edi,edi
0xb0c7: call 0xb390
0xb0cc: test al,al
0xb0ce: jne 0xb0e0
0xb0d0: movzx eax,byte ptr [r13]
0xb0d5: mov ebp,0x1
0xb0da: mov dword ptr [rbx],eax
0xb0dc: nop dword ptr [rax]
0xb0e0: mov rdx,qword ptr [rsp+0x8]
0xb0e5: xor rdx,qword ptr fs:0x28
0xb0ee: mov rax,rbp
0xb0f1: jne 0xb0fe
0xb0f3: add rsp,0x18
0xb0f7: pop rbx
0xb0f8: pop rbp
0xb0f9: pop r12
0xb0fb: pop r13
0xb0fd: ret 
0xb0fe: call 0x1c10
0xb103: nop word ptr cs:[rax+rax]
0xb10d: nop dword ptr [rax]
0xb18d: add qword ptr [rbp],rbx
0xb191: jmp 0xb1a7
0xb1d2: call 0x1c10
0xb1d7: nop word ptr [rax+rax]
0xb250: push r12
0xb252: push rbp
0xb253: mov rbp,rdi
0xb256: push rbx
0xb257: call 0x1b40
0xb25c: mov ebx,dword ptr [rbp]
0xb25f: mov rdi,rbp
0xb262: mov r12,rax
0xb265: call 0xb440
0xb26a: and ebx,0x20
0xb26d: test ebx,ebx
0xb26f: jne 0xb288
0xb271: test eax,eax
0xb273: je 0xb27f
0xb275: test r12,r12
0xb278: mov eax,0xffffffff
0xb27d: je 0xb2b8
0xb27f: pop rbx
0xb280: pop rbp
0xb281: pop r12
0xb283: ret 
0xb288: test eax,eax
0xb28a: jne 0xb2a8
0xb28c: call 0x1b10
0xb291: mov dword ptr [rax],0x0
0xb297: mov eax,0xffffffff
0xb29c: pop rbx
0xb29d: pop rbp
0xb29e: pop r12
0xb2a0: ret 
0xb2a8: pop rbx
0xb2a9: mov eax,0xffffffff
0xb2ae: pop rbp
0xb2af: pop r12
0xb2b1: ret 
0xb2b8: call 0x1b10
0xb2bd: cmp dword ptr [rax],0x9
0xb2c0: pop rbx
0xb2c1: pop rbp
0xb2c2: pop r12
0xb2c4: setne al
0xb2c7: movzx eax,al
0xb2ca: neg eax
0xb2cc: ret 
0xb390: sub rsp,0x8
0xb394: xor esi,esi
0xb396: call 0x1e40
0xb39b: mov rdx,rax
0xb39e: mov eax,0x1
0xb3a3: test rdx,rdx
0xb3a6: je 0xb3c5
0xb3a8: lea rdi,[rip+0x20a4]
0xb3af: mov ecx,0x2
0xb3b4: mov rsi,rdx
0xb3b7: rep cmpsb [rsi],es:[rdi]
0xb3b9: seta cl
0xb3bc: sbb cl,0x0
0xb3bf: xor eax,eax
0xb3c1: test cl,cl
0xb3c3: jne 0xb3d0
0xb3c5: add rsp,0x8
0xb3c9: ret 
0xb3d0: lea rdi,[rip+0x2099]
0xb3d7: mov ecx,0x6
0xb3dc: mov rsi,rdx
0xb3df: rep cmpsb [rsi],es:[rdi]
0xb3e1: seta al
0xb3e4: sbb al,0x0
0xb3e6: test al,al
0xb3e8: setne al
0xb3eb: add rsp,0x8
0xb3ef: ret 
0xb3f0: sub rsp,0x8
0xb3f4: mov edi,0xe
0xb3f9: call 0x1df0
0xb3fe: test rax,rax
0xb401: je 0xb420
0xb403: cmp byte ptr [rax],0x0
0xb406: lea rdx,[rip+0x2069]
0xb40d: cmove rax,rdx
0xb411: add rsp,0x8
0xb415: ret 
0xb420: lea rax,[rip+0x204f]
0xb427: add rsp,0x8
0xb42b: ret 
0xb440: push r12
0xb442: push rbp
0xb443: push rbx
0xb444: mov rbx,rdi
0xb447: call 0x1d90
0xb44c: test eax,eax
0xb44e: mov rdi,rbx
0xb451: js 0xb4a7
0xb453: call 0x1e10
0xb458: test eax,eax
0xb45a: jne 0xb488
0xb45c: mov rdi,rbx
0xb45f: call 0xb4c0
0xb464: test eax,eax
0xb466: je 0xb4a4
0xb468: call 0x1b10
0xb46d: mov r12d,dword ptr [rax]
0xb470: mov rdi,rbx
0xb473: mov rbp,rax
0xb476: call 0x1bb0
0xb47b: test r12d,r12d
0xb47e: jne 0xb4b0
0xb480: pop rbx
0xb481: pop rbp
0xb482: pop r12
0xb484: ret 
0xb488: mov rdi,rbx
0xb48b: call 0x1d90
0xb490: xor esi,esi
0xb492: mov edx,0x1
0xb497: mov edi,eax
0xb499: call 0x1ca0
0xb49e: cmp rax,-0x1
0xb4a2: jne 0xb45c
0xb4a4: mov rdi,rbx
0xb4a7: pop rbx
0xb4a8: pop rbp
0xb4a9: pop r12
0xb4ab: jmp 0x1bb0
0xb4b0: mov dword ptr [rbp],r12d
0xb4b4: mov eax,0xffffffff
0xb4b9: jmp 0xb480
0xb4c0: test rdi,rdi
0xb4c3: push rbx
0xb4c4: mov rbx,rdi
0xb4c7: je 0xb4da
0xb4c9: call 0x1e10
0xb4ce: test eax,eax
0xb4d0: je 0xb4da
0xb4d2: test dword ptr [rbx],0x100
0xb4d8: jne 0xb4e8
0xb4da: mov rdi,rbx
0xb4dd: pop rbx
0xb4de: jmp 0x1dd0
0xb4e8: mov rdi,rbx
0xb4eb: mov edx,0x1
0xb4f0: xor esi,esi
0xb4f2: call 0xb500
0xb4f7: mov rdi,rbx
0xb4fa: pop rbx
0xb4fb: jmp 0x1dd0
0xb500: mov rax,qword ptr [rdi+0x8]
0xb504: cmp qword ptr [rdi+0x10],rax
0xb508: je 0xb510
0xb50a: jmp 0x1e90
0xb510: mov rax,qword ptr [rdi+0x20]
0xb514: cmp qword ptr [rdi+0x28],rax
0xb518: jne 0xb50a
0xb51a: cmp qword ptr [rdi+0x48],0x0
0xb51f: jne 0xb50a
0xb521: push r12
0xb523: push rbp
0xb524: mov r12d,edx
0xb527: push rbx
0xb528: mov rbp,rsi
0xb52b: mov rbx,rdi
0xb52e: call 0x1d90
0xb533: mov edx,r12d
0xb536: mov rsi,rbp
0xb539: mov edi,eax
0xb53b: call 0x1ca0
0xb540: cmp rax,-0x1
0xb544: je 0xb552
0xb546: and dword ptr [rbx],-0x11
0xb549: mov qword ptr [rbx+0x90],rax
0xb550: xor eax,eax
0xb552: pop rbx
0xb553: pop rbp
0xb554: pop r12
0xb556: ret 
0xb560: push r15
0xb562: push r14
0xb564: mov r15,rdx
0xb567: push r13
0xb569: push r12
0xb56b: lea r12,[rip+0x20439e]
0xb572: push rbp
0xb573: lea rbp,[rip+0x20439e]
0xb57a: push rbx
0xb57b: mov r13d,edi
0xb57e: mov r14,rsi
0xb581: sub rbp,r12
0xb584: sub rsp,0x8
0xb588: sar rbp,0x3
0xb58c: call 0x1aa8
0xb591: test rbp,rbp
0xb594: je 0xb5b6
0xb596: xor ebx,ebx
0xb598: nop dword ptr [rax+rax]
0xb5a0: mov rdx,r15
0xb5a3: mov rsi,r14
0xb5a6: mov edi,r13d
0xb5a9: call qword ptr [r12+rbx*8]
0xb5ad: add rbx,0x1
0xb5b1: cmp rbp,rbx
0xb5b4: jne 0xb5a0
0xb5b6: add rsp,0x8
0xb5ba: pop rbx
0xb5bb: pop rbp
0xb5bc: pop r12
0xb5be: pop r13
0xb5c0: pop r14
0xb5c2: pop r15
0xb5c4: ret 
0xb5d0: rep ret 
