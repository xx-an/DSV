0x19a0: sub rsp,0x8
0x19a4: mov rax,qword ptr [rip+0x208625]
0x19ab: test rax,rax
0x19ae: je 0x19b2
0x19b0: call rax
0x19b2: add rsp,0x8
0x19b6: ret 
0x19c6: jmp qword ptr [rip+0x2083ec]
0x1a10: jmp qword ptr [rip+0x2083ca]
0x1a20: jmp qword ptr [rip+0x2083c2]
0x1a40: jmp qword ptr [rip+0x2083b2]
0x1aa0: jmp qword ptr [rip+0x208382]
0x1ab0: jmp qword ptr [rip+0x20837a]
0x1b90: jmp qword ptr [rip+0x20830a]
0x1bb0: jmp qword ptr [rip+0x2082fa]
0x1c40: jmp qword ptr [rip+0x2082b2]
0x1dd0: jmp qword ptr [rip+0x208212]
0x1f69: nop dword ptr [rax]
0x1fae: nop 
0x22cd: mov r15,rax
0x22d0: call 0x19f0
0x22d5: mov esi,dword ptr [rax]
0x22d7: lea rdx,[rip+0x55af]
0x22de: mov rcx,r15
0x22e1: xor edi,edi
0x22e3: xor eax,eax
0x22e5: call 0x1cd0
0x22ea: xor edx,edx
0x22ec: jmp 0x22a2
0x22fb: lea rsi,[rip+0x5526]
0x2302: xor edi,edi
0x2304: mov r12,rax
0x2307: mov edx,0x5
0x230c: call 0x1a80
0x2311: xor esi,esi
0x2313: mov rdx,rax
0x2316: xor edi,edi
0x2318: xor eax,eax
0x231a: mov rcx,r12
0x231d: call 0x1cd0
0x2322: cmp byte ptr [r15],0x0
0x2326: jne 0x2402
0x235c: lea rdx,[rip+0x4df9]
0x2363: mov r9,r12
0x2366: mov rcx,rax
0x2369: mov r8,r15
0x236c: xor esi,esi
0x236e: xor edi,edi
0x2370: xor eax,eax
0x2372: xor r12d,r12d
0x2375: call 0x1cd0
0x237a: jmp 0x22a5
0x2402: xor r12d,r12d
0x2405: jmp 0x22a5
0x251b: lea rsi,[rip+0x4bec]
0x2522: mov edx,0x5
0x2527: xor edi,edi
0x2529: mov rbp,rax
0x252c: xor r12d,r12d
0x252f: call 0x1a80
0x2534: mov rbx,rax
0x2537: call 0x19f0
0x253c: mov esi,dword ptr [rax]
0x253e: mov rcx,rbp
0x2541: mov rdx,rbx
0x2544: xor edi,edi
0x2546: xor eax,eax
0x2548: call 0x1cd0
0x254d: jmp 0x2465
0x2628: lea rsi,[rip+0x4ac4]
0x262f: mov edx,0x5
0x2634: xor edi,edi
0x2636: mov rbp,rax
0x2639: call 0x1a80
0x263e: mov rbx,rax
0x2641: call 0x19f0
0x2646: mov esi,dword ptr [rax]
0x2648: mov rcx,rbp
0x264b: mov rdx,rbx
0x264e: mov edi,0x1
0x2653: xor eax,eax
0x2655: call 0x1cd0
0x2784: call 0x1ab0
0x27a6: lea rsi,[rip+0x4935]
0x27ad: mov rbx,rax
0x27b0: xor edi,edi
0x27b2: mov edx,0x5
0x27b7: call 0x1a80
0x27bc: mov rcx,rbx
0x27bf: mov rdx,rax
0x27c2: xor esi,esi
0x27c4: xor edi,edi
0x27c6: xor eax,eax
0x27c8: call 0x1cd0
0x27cd: lea rsi,[rip+0x4fd4]
0x27d4: xor edi,edi
0x27d6: mov edx,0x5
0x27db: call 0x1a80
0x27e0: mov rdi,qword ptr [rip+0x2078f9]
0x27e7: lea rdx,[rip+0x5602]
0x27ee: mov rcx,rax
0x27f1: mov esi,0x1
0x27f6: xor eax,eax
0x27f8: call 0x1d70
0x27fd: jmp 0x1f5f
0x280f: lea rsi,[rip+0x4fca]
0x2816: mov rbx,rax
0x2819: mov edx,0x5
0x281e: xor edi,edi
0x2820: call 0x1a80
0x2825: mov rcx,rbx
0x2828: mov rdx,rax
0x282b: xor esi,esi
0x282d: mov edi,0x1
0x2832: xor eax,eax
0x2834: call 0x1cd0
0x2839: nop dword ptr [rax]
0x286a: hlt 
0x286b: nop dword ptr [rax+rax]
0x2870: lea rdi,[rip+0x207811]
0x2877: push rbp
0x2878: lea rax,[rip+0x207809]
0x287f: cmp rax,rdi
0x2882: mov rbp,rsp
0x2885: je 0x28a0
0x2887: mov rax,qword ptr [rip+0x207732]
0x288e: test rax,rax
0x2891: je 0x28a0
0x2893: pop rbp
0x2894: jmp rax
0x28a0: pop rbp
0x28a1: ret 
0x28b0: lea rdi,[rip+0x2077d1]
0x28b7: lea rsi,[rip+0x2077ca]
0x28be: push rbp
0x28bf: sub rsi,rdi
0x28c2: mov rbp,rsp
0x28c5: sar rsi,0x3
0x28c9: mov rax,rsi
0x28cc: shr rax,0x3f
0x28d0: add rsi,rax
0x28d3: sar rsi, 1
0x28d6: je 0x28f0
0x28d8: mov rax,qword ptr [rip+0x207701]
0x28df: test rax,rax
0x28e2: je 0x28f0
0x28e4: pop rbp
0x28e5: jmp rax
0x28f0: pop rbp
0x28f1: ret 
0x2911: push rbp
0x2912: mov rbp,rsp
0x2915: je 0x2923
0x2917: mov rdi,qword ptr [rip+0x2076ea]
0x291e: call 0x1dd0
0x2923: call 0x2870
0x2928: mov byte ptr [rip+0x2077b9],0x1
0x292f: pop rbp
0x2930: ret 
0x2940: push rbp
0x2941: mov rbp,rsp
0x2944: pop rbp
0x2945: jmp 0x28b0
0x29eb: mov rbx,rax
0x2b4a: jmp 0x2a24
0x2b4f: call 0x1ab0
0x2b54: nop 
0x2b56: nop word ptr cs:[rax+rax]
0x300f: mov rbx,rax
0x3012: call 0x19f0
0x3017: mov esi,dword ptr [rax]
0x3019: lea rdx,[rip+0x486d]
0x3020: mov rcx,rbx
0x3023: xor edi,edi
0x3025: xor eax,eax
0x3027: call 0x1cd0
0x302c: jmp 0x2f5e
0x34fc: mov r12,rax
0x34ff: call 0x19f0
0x3504: mov esi,dword ptr [rax]
0x3506: lea rdx,[rip+0x4380]
0x350d: mov rcx,r12
0x3510: xor edi,edi
0x3512: xor eax,eax
0x3514: call 0x1cd0
0x3519: jmp 0x34ce
0x3574: mov r14,rax
0x3577: call 0x19f0
0x357c: mov esi,dword ptr [rax]
0x357e: lea rdx,[rip+0x4308]
0x3585: mov rcx,r14
0x3588: xor edi,edi
0x358a: xor eax,eax
0x358c: call 0x1cd0
0x3591: jmp 0x353f
0x35b1: mov rbx,rax
0x35b4: call 0x19f0
0x35b9: mov esi,dword ptr [rax]
0x35bb: lea rdx,[rip+0x42cb]
0x35c2: mov rcx,rbx
0x35c5: xor edi,edi
0x35c7: xor eax,eax
0x35c9: call 0x1cd0
0x35ce: mov qword ptr [rsp],0x0
0x35d6: jmp 0x2f5e
0x3626: call 0x1ab0
0x3b50: mov qword ptr [rip+0x2065f1],rdi
0x3b57: ret 
0x3b60: mov byte ptr [rip+0x2065d9],dil
0x3b67: ret 
0x3b70: push rbp
0x3b71: push rbx
0x3b72: sub rsp,0x8
0x3b76: mov rdi,qword ptr [rip+0x20652b]
0x3b7d: call 0x6e10
0x3b82: test eax,eax
0x3b84: je 0x3b9c
0x3b86: call 0x19f0
0x3b8b: cmp byte ptr [rip+0x2065ae],0x0
0x3b92: mov rbx,rax
0x3b95: je 0x3bb3
0x3b97: cmp dword ptr [rax],0x20
0x3b9a: jne 0x3bb3
0x3b9c: mov rdi,qword ptr [rip+0x20653d]
0x3ba3: call 0x6e10
0x3ba8: test eax,eax
0x3baa: jne 0x3bf2
0x3bac: add rsp,0x8
0x3bb0: pop rbx
0x3bb1: pop rbp
0x3bb2: ret 
0x3bb3: lea rsi,[rip+0x3cc3]
0x3bba: xor edi,edi
0x3bbc: mov edx,0x5
0x3bc1: call 0x1a80
0x3bc6: mov rdi,qword ptr [rip+0x20657b]
0x3bcd: mov rbp,rax
0x3bd0: test rdi,rdi
0x3bd3: je 0x3bfd
0x3bd5: call 0x5a70
0x3bda: mov esi,dword ptr [rbx]
0x3bdc: lea rdx,[rip+0x3ca6]
0x3be3: mov rcx,rax
0x3be6: mov r8,rbp
0x3be9: xor edi,edi
0x3beb: xor eax,eax
0x3bed: call 0x1cd0
0x3bf2: mov edi,dword ptr [rip+0x206420]
0x3bf8: call 0x1a10
0x3bfd: mov esi,dword ptr [rbx]
0x3bff: lea rdx,[rip+0x3c87]
0x3c06: mov rcx,rax
0x3c09: xor edi,edi
0x3c0b: xor eax,eax
0x3c0d: call 0x1cd0
0x3c12: jmp 0x3bf2
0x3c30: test rdi,rdi
0x3c33: je 0x3c50
0x3c35: push rbx
0x3c36: mov ebx,esi
0x3c38: call 0x1c00
0x3c3d: mov ecx,ebx
0x3c3f: xor edx,edx
0x3c41: xor esi,esi
0x3c43: pop rbx
0x3c44: mov edi,eax
0x3c46: jmp 0x1b60
0x3c50: rep ret 
0x3cb0: push rbx
0x3cb1: mov ebx,edi
0x3cb3: call 0x1c20
0x3cb8: test eax,eax
0x3cba: js 0x3cc0
0x3cbc: pop rbx
0x3cbd: ret 
0x3cc0: mov edi,ebx
0x3cc2: call 0x1a40
0x3cc7: test eax,eax
0x3cc9: sete al
0x3ccc: movzx eax,al
0x3ccf: pop rbx
0x3cd0: ret 
0x3ce0: push rbp
0x3ce1: push rbx
0x3ce2: mov rbx,rsi
0x3ce5: lea rax,[rbx+0x18]
0x3ce9: mov rbp,rdi
0x3cec: sub rsp,0x8
0x3cf0: mov rsi,qword ptr [rsi]
0x3cf3: mov rdx,qword ptr [rbx+0x8]
0x3cf7: cmp rsi,rax
0x3cfa: je 0x3d20
0x3cfc: mov qword ptr [rdi],rsi
0x3cff: movzx eax,byte ptr [rbx+0x10]
0x3d03: mov qword ptr [rbp+0x8],rdx
0x3d07: test al,al
0x3d09: mov byte ptr [rbp+0x10],al
0x3d0c: je 0x3d14
0x3d0e: mov eax,dword ptr [rbx+0x14]
0x3d11: mov dword ptr [rbp+0x14],eax
0x3d14: add rsp,0x8
0x3d18: pop rbx
0x3d19: pop rbp
0x3d1a: ret 
0x3d20: lea rcx,[rdi+0x18]
0x3d24: mov rdi,rcx
0x3d27: call 0x1bf0
0x3d2c: mov rdx,qword ptr [rbx+0x8]
0x3d30: mov qword ptr [rbp],rax
0x3d34: jmp 0x3cff
0x3d40: mov eax,edi
0x3d42: lea rdx,[rip+0x3b57]
0x3d49: mov ecx,edi
0x3d4b: shr al,0x5
0x3d4e: and ecx,0x1f
0x3d51: and eax,0x7
0x3d54: mov eax,dword ptr [rdx+rax*4]
0x3d57: shr eax,cl
0x3d59: and eax,0x1
0x3d5c: ret 
0x3e3b: call 0x1ab0
0x3f5b: call 0x1ab0
0x3fff: nop 
0x4000: push rbp
0x4001: push rbx
0x4002: mov rbp,rdi
0x4005: mov ebx,esi
0x4007: sub rsp,0x8
0x400b: call 0x6ef0
0x4010: movzx edx,byte ptr [rax]
0x4013: and edx,-0x21
0x4016: cmp dl,0x55
0x4019: je 0x4090
0x401b: cmp dl,0x47
0x401e: je 0x4040
0x4020: lea rax,[rip+0x38fc]
0x4027: lea rdx,[rip+0x38f7]
0x402e: cmp ebx,0x9
0x4031: cmovne rax,rdx
0x4035: add rsp,0x8
0x4039: pop rbx
0x403a: pop rbp
0x403b: ret 
0x4040: movzx edx,byte ptr [rax+0x1]
0x4044: and edx,-0x21
0x4047: cmp dl,0x42
0x404a: jne 0x4020
0x404c: cmp byte ptr [rax+0x2],0x31
0x4050: jne 0x4020
0x4052: cmp byte ptr [rax+0x3],0x38
0x4056: jne 0x4020
0x4058: cmp byte ptr [rax+0x4],0x30
0x405c: jne 0x4020
0x405e: cmp byte ptr [rax+0x5],0x33
0x4062: jne 0x4020
0x4064: cmp byte ptr [rax+0x6],0x30
0x4068: jne 0x4020
0x406a: cmp byte ptr [rax+0x7],0x0
0x406e: jne 0x4020
0x4070: cmp byte ptr [rbp],0x60
0x4074: lea rax,[rip+0x38a1]
0x407b: lea rdx,[rip+0x389e]
0x4082: cmovne rax,rdx
0x4086: add rsp,0x8
0x408a: pop rbx
0x408b: pop rbp
0x408c: ret 
0x4090: movzx edx,byte ptr [rax+0x1]
0x4094: and edx,-0x21
0x4097: cmp dl,0x54
0x409a: jne 0x4020
0x409c: movzx edx,byte ptr [rax+0x2]
0x40a0: and edx,-0x21
0x40a3: cmp dl,0x46
0x40a6: jne 0x4020
0x40ac: cmp byte ptr [rax+0x3],0x2d
0x40b0: jne 0x4020
0x40b6: cmp byte ptr [rax+0x4],0x38
0x40ba: jne 0x4020
0x40c0: cmp byte ptr [rax+0x5],0x0
0x40c4: jne 0x4020
0x40ca: cmp byte ptr [rbp],0x60
0x40ce: lea rax,[rip+0x383f]
0x40d5: lea rdx,[rip+0x383c]
0x40dc: cmovne rax,rdx
0x40e0: add rsp,0x8
0x40e4: pop rbx
0x40e5: pop rbp
0x40e6: ret 
0x41c3: xor r11d,r11d
0x41c6: mov rax,rbp
0x41c9: mov r8d,r12d
0x41cc: mov rbp,r11
0x41cf: mov r11,rax
0x41d2: nop word ptr [rax+rax]
0x41d8: cmp r11,rbp
0x41db: setne r12b
0x41df: cmp r11,-0x1
0x41e3: jne 0x41f2
0x41e5: mov rax,qword ptr [rsp+0x10]
0x41ea: cmp byte ptr [rax+rbp],0x0
0x41ee: setne r12b
0x41f2: test r12b,r12b
0x41f5: je 0x4850
0x41fb: cmp dword ptr [rsp+0x8],0x2
0x4200: mov rdi,qword ptr [rsp+0x10]
0x4205: lea r9,[rdi+rbp]
0x4209: setne al
0x420c: and al,byte ptr [rsp+0xd]
0x4210: mov r10d,eax
0x4213: je 0x42c0
0x4219: mov rax,qword ptr [rsp+0x18]
0x421e: test rax,rax
0x4221: je 0x4650
0x4227: cmp r11,-0x1
0x422b: lea rbx,[rbp+rax]
0x4230: jne 0x4260
0x4232: cmp rax,0x1
0x4236: jbe 0x4260
0x4238: mov byte ptr [rsp+0x38],r8b
0x423d: mov byte ptr [rsp+0x30],r10b
0x4242: mov qword ptr [rsp+0x28],r9
0x4247: call 0x1aa0
0x424c: movzx r8d,byte ptr [rsp+0x38]
0x4252: movzx r10d,byte ptr [rsp+0x30]
0x4258: mov r11,rax
0x425b: mov r9,qword ptr [rsp+0x28]
0x4260: cmp rbx,r11
0x4263: mov byte ptr [rsp+0x28],r10b
0x4268: ja 0x4820
0x426e: mov rdx,qword ptr [rsp+0x18]
0x4273: mov rsi,qword ptr [rsp+0x48]
0x4278: mov rdi,r9
0x427b: mov qword ptr [rsp+0x40],r11
0x4280: mov byte ptr [rsp+0x38],r8b
0x4285: mov qword ptr [rsp+0x30],r9
0x428a: call 0x1b90
0x428f: test eax,eax
0x4291: mov r9,qword ptr [rsp+0x30]
0x4296: movzx r8d,byte ptr [rsp+0x38]
0x429c: mov r11,qword ptr [rsp+0x40]
0x42a1: jne 0x4820
0x42a7: cmp byte ptr [rsp+0xf],0x0
0x42ac: movzx r10d,byte ptr [rsp+0x28]
0x42b2: jne 0x5235
0x42b8: nop dword ptr [rax+rax]
0x42c0: movzx ebx,byte ptr [r9]
0x42c4: cmp bl,0x7e
0x42c7: ja 0x45e8
0x42cd: lea rcx,[rip+0x36d8]
0x42d4: movzx edx,bl
0x42d7: movsxd rax,dword ptr [rcx+rdx*4]
0x42db: add rax,rcx
0x42de: jmp rax
0x4318: cmp byte ptr [rsp+0xd],0x1
0x431d: jne 0x4432
0x4323: test dl,dl
0x4325: jne 0x4432
0x432b: mov rsi,qword ptr [rsp+0x20]
0x4330: test rsi,rsi
0x4333: je 0x4349
0x4335: mov edx,ebx
0x4337: shr dl,0x5
0x433a: movzx edx,dl
0x433d: mov edx,dword ptr [rsi+rdx*4]
0x4340: btl edx,ebx
0x4343: jb 0x4493
0x4349: test r10b,r10b
0x434c: jne 0x4493
0x4352: xor eax,0x1
0x4355: add rbp,0x1
0x4359: and eax,r8d
0x435c: test al,al
0x435e: je 0x4380
0x4360: cmp r13,r15
0x4363: jbe 0x436a
0x4365: mov byte ptr [r14+r15],0x27
0x436a: lea rax,[r15+0x1]
0x436e: cmp r13,rax
0x4371: jbe 0x4379
0x4373: mov byte ptr [r14+r15+0x1],0x27
0x4379: add r15,0x2
0x437d: xor r8d,r8d
0x4380: cmp r15,r13
0x4383: jae 0x4389
0x4385: mov byte ptr [r14+r15],bl
0x4389: movzx edi,byte ptr [rsp+0xe]
0x438e: add r15,0x1
0x4392: mov eax,0x0
0x4397: test r12b,r12b
0x439a: cmove edi,eax
0x439d: mov byte ptr [rsp+0xe],dil
0x43a2: jmp 0x41d8
0x4432: cmp byte ptr [rsp+0xf],0x0
0x4437: jne 0x432b
0x443d: jmp 0x4349
0x4493: cmp dword ptr [rsp+0x8],0x2
0x4498: sete dl
0x449b: cmp byte ptr [rsp+0xf],0x0
0x44a0: mov eax,edx
0x44a2: jne 0x4cf8
0x44a8: mov eax,r8d
0x44ab: xor eax,0x1
0x44ae: and al,dl
0x44b0: je 0x44e1
0x44b2: cmp r13,r15
0x44b5: jbe 0x44bc
0x44b7: mov byte ptr [r14+r15],0x27
0x44bc: lea rdx,[r15+0x1]
0x44c0: cmp r13,rdx
0x44c3: jbe 0x44cb
0x44c5: mov byte ptr [r14+r15+0x1],0x24
0x44cb: lea rdx,[r15+0x2]
0x44cf: cmp r13,rdx
0x44d2: jbe 0x44da
0x44d4: mov byte ptr [r14+r15+0x2],0x27
0x44da: add r15,0x3
0x44de: mov r8d,eax
0x44e1: cmp r13,r15
0x44e4: jbe 0x44eb
0x44e6: mov byte ptr [r14+r15],0x5c
0x44eb: add r15,0x1
0x44ef: add rbp,0x1
0x44f3: jmp 0x4380
0x45e0: xor r10d,r10d
0x45e3: nop dword ptr [rax+rax]
0x45e8: cmp qword ptr [rsp+0x58],0x1
0x45ee: jne 0x4998
0x45f4: mov qword ptr [rsp+0x38],r11
0x45f9: mov byte ptr [rsp+0x30],r8b
0x45fe: mov byte ptr [rsp+0x28],r10b
0x4603: call 0x1db0
0x4608: mov rcx,qword ptr [rax]
0x460b: movzx edx,bl
0x460e: movzx r10d,byte ptr [rsp+0x28]
0x4614: movzx r8d,byte ptr [rsp+0x30]
0x461a: mov r11,qword ptr [rsp+0x38]
0x461f: mov edi,0x1
0x4624: movzx eax,word ptr [rcx+rdx*2]
0x4628: and ax,0x4000
0x462c: setne r12b
0x4630: sete al
0x4633: and al,byte ptr [rsp+0xd]
0x4637: test al,al
0x4639: jne 0x4fd1
0x463f: cmp dword ptr [rsp+0x8],0x2
0x4644: sete dl
0x4647: jmp 0x4318
0x4650: movzx ebx,byte ptr [r9]
0x4654: cmp bl,0x7e
0x4657: ja 0x45e0
0x4659: lea rcx,[rip+0x3548]
0x4660: movzx edx,bl
0x4663: movsxd rax,dword ptr [rcx+rdx*4]
0x4667: add rax,rcx
0x466a: jmp rax
0x4820: xor r10d,r10d
0x4823: jmp 0x42c0
0x4850: cmp dword ptr [rsp+0x8],0x2
0x4855: movzx ebx,byte ptr [rsp+0xf]
0x485a: mov r12d,r8d
0x485d: mov rbp,r11
0x4860: sete dl
0x4863: mov eax,ebx
0x4865: test r15,r15
0x4868: sete cl
0x486b: and eax,edx
0x486d: and al,cl
0x486f: jne 0x52d6
0x4875: mov eax,ebx
0x4877: xor eax,0x1
0x487a: and dl,al
0x487c: je 0x51ec
0x4882: cmp byte ptr [rsp+0x7c],0x0
0x4887: je 0x51ea
0x488d: cmp byte ptr [rsp+0xe],0x0
0x4892: jne 0x528d
0x4898: test r13,r13
0x489b: sete al
0x489e: cmp qword ptr [rsp+0x50],0x0
0x48a4: setne dl
0x48a7: and al,dl
0x48a9: je 0x52cc
0x48af: mov r13,qword ptr [rsp+0x50]
0x48b4: lea rbx,[rip+0x306a]
0x48bb: mov byte ptr [r14],0x27
0x48bf: mov dword ptr [rsp+0x8],0x2
0x48c7: mov r15d,0x1
0x48cd: mov qword ptr [rsp+0x18],0x1
0x48d6: mov byte ptr [rsp+0xf],0x0
0x48db: mov qword ptr [rsp+0x48],rbx
0x48e0: mov byte ptr [rsp+0x7c],al
0x48e4: jmp 0x41c3
0x4998: lea rax,[rsp+0xa0]
0x49a0: cmp r11,-0x1
0x49a4: mov qword ptr [rsp+0xa0],0x0
0x49b0: mov qword ptr [rsp+0x28],rax
0x49b5: jne 0x49e4
0x49b7: mov rdi,qword ptr [rsp+0x10]
0x49bc: mov byte ptr [rsp+0x40],r8b
0x49c1: mov byte ptr [rsp+0x38],r10b
0x49c6: mov qword ptr [rsp+0x30],r9
0x49cb: call 0x1aa0
0x49d0: movzx r8d,byte ptr [rsp+0x40]
0x49d6: movzx r10d,byte ptr [rsp+0x38]
0x49dc: mov r11,rax
0x49df: mov r9,qword ptr [rsp+0x30]
0x49e4: lea rax,[rsp+0x9c]
0x49ec: xor ecx,ecx
0x49ee: mov byte ptr [rsp+0x7e],bl
0x49f2: mov byte ptr [rsp+0x7d],r8b
0x49f7: mov rbx,rcx
0x49fa: mov qword ptr [rsp+0x88],r9
0x4a02: mov qword ptr [rsp+0x38],rax
0x4a07: mov byte ptr [rsp+0x7f],r10b
0x4a0c: mov qword ptr [rsp+0x80],r15
0x4a14: mov qword ptr [rsp+0x40],r14
0x4a19: mov qword ptr [rsp+0x70],r13
0x4a1e: mov qword ptr [rsp+0x30],r11
0x4a23: mov rax,qword ptr [rsp+0x10]
0x4a28: lea r14,[rbp+rbx]
0x4a2d: mov rdx,qword ptr [rsp+0x30]
0x4a32: mov rcx,qword ptr [rsp+0x28]
0x4a37: mov rdi,qword ptr [rsp+0x38]
0x4a3c: lea r13,[rax+r14]
0x4a40: sub rdx,r14
0x4a43: mov rsi,r13
0x4a46: call 0x6a60
0x4a4b: test rax,rax
0x4a4e: mov r15,rax
0x4a51: je 0x4aa1
0x4a53: cmp rax,-0x1
0x4a57: je 0x5075
0x4a5d: cmp rax,-0x2
0x4a61: je 0x5001
0x4a67: cmp dword ptr [rsp+0x8],0x2
0x4a6c: sete al
0x4a6f: and al,byte ptr [rsp+0xf]
0x4a73: jne 0x4c10
0x4a79: mov edi,dword ptr [rsp+0x9c]
0x4a80: call 0x1d90
0x4a85: mov rdi,qword ptr [rsp+0x28]
0x4a8a: test eax,eax
0x4a8c: mov eax,0x0
0x4a91: cmove r12d,eax
0x4a95: add rbx,r15
0x4a98: call 0x1d80
0x4a9d: test eax,eax
0x4a9f: je 0x4a23
0x4aa1: mov edx,r12d
0x4aa4: mov rdi,rbx
0x4aa7: movzx r8d,byte ptr [rsp+0x7d]
0x4aad: xor edx,0x1
0x4ab0: movzx ebx,byte ptr [rsp+0x7e]
0x4ab5: movzx r10d,byte ptr [rsp+0x7f]
0x4abb: and dl,byte ptr [rsp+0xd]
0x4abf: mov r15,qword ptr [rsp+0x80]
0x4ac7: mov r14,qword ptr [rsp+0x40]
0x4acc: mov r13,qword ptr [rsp+0x70]
0x4ad1: mov r11,qword ptr [rsp+0x30]
0x4ad6: cmp rdi,0x1
0x4ada: jbe 0x50db
0x4ae0: mov rcx,rdi
0x4ae3: xor esi,esi
0x4ae5: movzx r9d,byte ptr [rsp+0xf]
0x4aeb: add rcx,rbp
0x4aee: mov rdi,qword ptr [rsp+0x10]
0x4af3: jmp 0x4bae
0x4b00: cmp dword ptr [rsp+0x8],0x2
0x4b05: sete al
0x4b08: test r9b,r9b
0x4b0b: jne 0x4fc0
0x4b11: mov esi,r8d
0x4b14: xor esi,0x1
0x4b17: and al,sil
0x4b1a: je 0x4b4b
0x4b1c: cmp r13,r15
0x4b1f: jbe 0x4b26
0x4b21: mov byte ptr [r14+r15],0x27
0x4b26: lea rsi,[r15+0x1]
0x4b2a: cmp r13,rsi
0x4b2d: jbe 0x4b35
0x4b2f: mov byte ptr [r14+r15+0x1],0x24
0x4b35: lea rsi,[r15+0x2]
0x4b39: cmp r13,rsi
0x4b3c: jbe 0x4b44
0x4b3e: mov byte ptr [r14+r15+0x2],0x27
0x4b44: add r15,0x3
0x4b48: mov r8d,eax
0x4b4b: cmp r13,r15
0x4b4e: jbe 0x4b55
0x4b50: mov byte ptr [r14+r15],0x5c
0x4b55: lea rax,[r15+0x1]
0x4b59: cmp r13,rax
0x4b5c: jbe 0x4b6b
0x4b5e: mov eax,ebx
0x4b60: shr al,0x6
0x4b63: add eax,0x30
0x4b66: mov byte ptr [r14+r15+0x1],al
0x4b6b: lea rax,[r15+0x2]
0x4b6f: cmp r13,rax
0x4b72: jbe 0x4b84
0x4b74: mov eax,ebx
0x4b76: shr al,0x3
0x4b79: and eax,0x7
0x4b7c: add eax,0x30
0x4b7f: mov byte ptr [r14+r15+0x2],al
0x4b84: and ebx,0x7
0x4b87: add rbp,0x1
0x4b8b: add r15,0x3
0x4b8f: add ebx,0x30
0x4b92: cmp rbp,rcx
0x4b95: jae 0x4380
0x4b9b: mov esi,edx
0x4b9d: cmp r13,r15
0x4ba0: jbe 0x4ba6
0x4ba2: mov byte ptr [r14+r15],bl
0x4ba6: movzx ebx,byte ptr [rdi+rbp]
0x4baa: add r15,0x1
0x4bae: test dl,dl
0x4bb0: jne 0x4b00
0x4bb6: mov eax,esi
0x4bb8: xor eax,0x1
0x4bbb: and eax,r8d
0x4bbe: test r10b,r10b
0x4bc1: je 0x4bd1
0x4bc3: cmp r13,r15
0x4bc6: jbe 0x4bcd
0x4bc8: mov byte ptr [r14+r15],0x5c
0x4bcd: add r15,0x1
0x4bd1: add rbp,0x1
0x4bd5: cmp rbp,rcx
0x4bd8: jae 0x435c
0x4bde: test al,al
0x4be0: je 0x4fde
0x4be6: cmp r13,r15
0x4be9: jbe 0x4bf0
0x4beb: mov byte ptr [r14+r15],0x27
0x4bf0: lea rax,[r15+0x1]
0x4bf4: cmp r13,rax
0x4bf7: jbe 0x4bff
0x4bf9: mov byte ptr [r14+r15+0x1],0x27
0x4bff: add r15,0x2
0x4c03: xor r10d,r10d
0x4c06: xor r8d,r8d
0x4c09: jmp 0x4b9d
0x4c10: cmp r15,0x1
0x4c14: je 0x4a79
0x4c1a: mov rdi,qword ptr [rsp+0x10]
0x4c1f: lea rcx,[rdi+r15]
0x4c23: lea rdx,[rdi+r14+0x1]
0x4c28: lea r8,[rcx+r14]
0x4c2c: jmp 0x4c3d
0x4c30: add rdx,0x1
0x4c34: cmp r8,rdx
0x4c37: je 0x4a79
0x4c3d: movzx ecx,byte ptr [rdx]
0x4c40: sub ecx,0x5b
0x4c43: cmp cl,0x21
0x4c46: ja 0x4c30
0x4c48: mov esi,0x1
0x4c4d: shl rsi,cl
0x4c50: mov rcx,rsi
0x4c53: movabsq rsi,0x20000002b
0x4c5d: test rcx,rsi
0x4c60: je 0x4c30
0x4c62: mov r14,qword ptr [rsp+0x40]
0x4c67: mov r13,qword ptr [rsp+0x70]
0x4c6c: mov rbp,qword ptr [rsp+0x30]
0x4c71: mov dword ptr [rsp+0x8],0x2
0x4c79: cmp byte ptr [rsp+0xd],0x0
0x4c7e: je 0x4c90
0x4c80: test al,al
0x4c82: mov eax,0x4
0x4c87: cmove eax,dword ptr [rsp+0x8]
0x4c8c: mov dword ptr [rsp+0x8],eax
0x4c90: sub rsp,0x8
0x4c94: mov rcx,rbp
0x4c97: mov rsi,r13
0x4c9a: push qword ptr [rsp+0x68]
0x4c9e: push qword ptr [rsp+0x78]
0x4ca2: mov rdi,r14
0x4ca5: push 0x0
0x4ca7: mov r9d,dword ptr [rsp+0x98]
0x4caf: mov r8d,dword ptr [rsp+0x28]
0x4cb4: mov rdx,qword ptr [rsp+0x30]
0x4cb9: and r9d,-0x3
0x4cbd: call 0x40f0
0x4cc2: add rsp,0x20
0x4cc6: mov r15,rax
0x4cc9: mov rbx,qword ptr [rsp+0xa8]
0x4cd1: xor rbx,qword ptr fs:0x28
0x4cda: mov rax,r15
0x4cdd: jne 0x52e3
0x4ce3: add rsp,0xb8
0x4cea: pop rbx
0x4ceb: pop rbp
0x4cec: pop r12
0x4cee: pop r13
0x4cf0: pop r14
0x4cf2: pop r15
0x4cf4: ret 
0x4cf8: mov rbp,r11
0x4cfb: jmp 0x4c79
0x4d61: test r13,r13
0x4d64: jne 0x52fa
0x4d6a: lea rax,[rip+0x2bb4]
0x4d71: mov qword ptr [rsp+0x50],0x0
0x4d7a: mov byte ptr [rsp+0xe],0x1
0x4d7f: mov byte ptr [rsp+0x7c],0x0
0x4d84: xor r12d,r12d
0x4d87: mov byte ptr [rsp+0xf],0x0
0x4d8c: mov qword ptr [rsp+0x18],0x1
0x4d95: mov qword ptr [rsp+0x48],rax
0x4d9a: mov r15d,0x1
0x4da0: mov dword ptr [rsp+0x8],0x2
0x4da8: jmp 0x41c3
0x4fc0: movzx ebx,byte ptr [rsp+0xf]
0x4fc5: mov rbp,r11
0x4fc8: mov byte ptr [rsp+0xd],bl
0x4fcc: jmp 0x4c79
0x4fd1: movzx edx,byte ptr [rsp+0xd]
0x4fd6: xor r12d,r12d
0x4fd9: jmp 0x4ae0
0x4fde: xor r10d,r10d
0x4fe1: jmp 0x4b9d
0x5001: mov r11,qword ptr [rsp+0x30]
0x5006: mov rsi,r14
0x5009: mov rcx,r13
0x500c: mov rax,rbx
0x500f: mov rdi,rbx
0x5012: movzx r8d,byte ptr [rsp+0x7d]
0x5018: movzx ebx,byte ptr [rsp+0x7e]
0x501d: mov r9,qword ptr [rsp+0x88]
0x5025: cmp rsi,r11
0x5028: movzx r10d,byte ptr [rsp+0x7f]
0x502e: mov r15,qword ptr [rsp+0x80]
0x5036: mov r14,qword ptr [rsp+0x40]
0x503b: mov r13,qword ptr [rsp+0x70]
0x5040: jae 0x5068
0x5042: cmp byte ptr [rcx],0x0
0x5045: jne 0x5057
0x5047: jmp 0x5068
0x5050: cmp byte ptr [r9+rax],0x0
0x5055: je 0x5065
0x5057: add rax,0x1
0x505b: lea rdx,[rbp+rax]
0x5060: cmp r11,rdx
0x5063: ja 0x5050
0x5065: mov rdi,rax
0x5068: movzx edx,byte ptr [rsp+0xd]
0x506d: xor r12d,r12d
0x5070: jmp 0x4ad6
0x5075: mov rdi,rbx
0x5078: movzx r8d,byte ptr [rsp+0x7d]
0x507e: movzx ebx,byte ptr [rsp+0x7e]
0x5083: movzx r10d,byte ptr [rsp+0x7f]
0x5089: mov r15,qword ptr [rsp+0x80]
0x5091: xor r12d,r12d
0x5094: mov r14,qword ptr [rsp+0x40]
0x5099: mov r13,qword ptr [rsp+0x70]
0x509e: mov r11,qword ptr [rsp+0x30]
0x50a3: movzx edx,byte ptr [rsp+0xd]
0x50a8: jmp 0x4ad6
0x50db: mov eax,edx
0x50dd: jmp 0x4637
0x51ea: mov eax,edx
0x51ec: mov rbx,qword ptr [rsp+0x48]
0x51f1: test rbx,rbx
0x51f4: je 0x5222
0x51f6: test al,al
0x51f8: je 0x5222
0x51fa: movzx ecx,byte ptr [rbx]
0x51fd: mov rax,rbx
0x5200: test cl,cl
0x5202: je 0x5222
0x5204: mov rdx,r15
0x5207: sub rax,r15
0x520a: cmp r13,rdx
0x520d: jbe 0x5213
0x520f: mov byte ptr [r14+rdx],cl
0x5213: add rdx,0x1
0x5217: movzx ecx,byte ptr [rax+rdx]
0x521b: test cl,cl
0x521d: jne 0x520a
0x521f: mov r15,rdx
0x5222: cmp r13,r15
0x5225: jbe 0x4cc9
0x522b: mov byte ptr [r14+r15],0x0
0x5230: jmp 0x4cc9
0x5235: cmp dword ptr [rsp+0x8],0x2
0x523a: movzx ebx,byte ptr [rsp+0xf]
0x523f: mov rbp,r11
0x5242: sete al
0x5245: mov byte ptr [rsp+0xd],bl
0x5249: jmp 0x4c79
0x528d: sub rsp,0x8
0x5291: mov r8d,0x5
0x5297: mov rcx,r11
0x529a: push qword ptr [rsp+0x68]
0x529e: push qword ptr [rsp+0x78]
0x52a2: mov rdi,r14
0x52a5: push qword ptr [rsp+0x38]
0x52a9: mov r9d,dword ptr [rsp+0x98]
0x52b1: mov rdx,qword ptr [rsp+0x30]
0x52b6: mov rsi,qword ptr [rsp+0x70]
0x52bb: call 0x40f0
0x52c0: add rsp,0x20
0x52c4: mov r15,rax
0x52c7: jmp 0x4cc9
0x52cc: movzx eax,byte ptr [rsp+0x7c]
0x52d1: jmp 0x51ec
0x52d6: mov dword ptr [rsp+0x8],0x2
0x52de: jmp 0x4c79
0x52e3: call 0x1ab0
0x52e8: mov byte ptr [rsp+0xd],0x0
0x52ed: jmp 0x4d61
0x52fa: mov byte ptr [rsp+0xe],0x1
0x52ff: xor eax,eax
0x5301: xor r12d,r12d
0x5304: mov qword ptr [rsp+0x50],0x0
0x530d: jmp 0x48b4
0x5324: nop 
0x5326: nop word ptr cs:[rax+rax]
0x541c: add rsp,0x20
0x5420: mov r11,qword ptr [rsp+0x10]
0x5425: cmp r11,rax
0x5428: ja 0x5491
0x542a: lea rsi,[rax+0x1]
0x542e: lea rax,[rip+0x204d2b]
0x5435: cmp r12,rax
0x5438: mov qword ptr [rbx],rsi
0x543b: je 0x544f
0x543d: mov rdi,r12
0x5440: mov qword ptr [rsp+0x10],rsi
0x5445: call 0x1dc0
0x544a: mov rsi,qword ptr [rsp+0x10]
0x544f: mov rdi,rsi
0x5452: mov qword ptr [rsp+0x10],rsi
0x5457: call 0x66b0
0x545c: sub rsp,0x8
0x5460: mov qword ptr [rbx+0x8],rax
0x5464: mov r8d,dword ptr [rbp]
0x5468: push qword ptr [rbp+0x30]
0x546b: push qword ptr [rbp+0x28]
0x546e: mov rcx,r14
0x5471: push r15
0x5473: mov r9d,dword ptr [rsp+0x3c]
0x5478: mov rdi,rax
0x547b: mov rdx,qword ptr [rsp+0x28]
0x5480: mov rsi,qword ptr [rsp+0x30]
0x5485: mov r12,rax
0x5488: call 0x40f0
0x548d: add rsp,0x20
0x5491: mov eax,dword ptr [rsp+0x18]
0x5495: mov dword ptr [r13],eax
0x5499: add rsp,0x28
0x549d: mov rax,r12
0x54a0: pop rbx
0x54a1: pop rbp
0x54a2: pop r12
0x54a4: pop r13
0x54a6: pop r14
0x54a8: pop r15
0x54aa: ret 
0x54d1: call 0x19e0
0x54d6: call 0x6900
0x54db: nop dword ptr [rax+rax]
0x54e0: push r12
0x54e2: push rbp
0x54e3: push rbx
0x54e4: mov rbx,rdi
0x54e7: call 0x19f0
0x54ec: mov r12d,dword ptr [rax]
0x54ef: mov rbp,rax
0x54f2: lea rax,[rip+0x204d67]
0x54f9: test rbx,rbx
0x54fc: mov esi,0x38
0x5501: cmove rbx,rax
0x5505: mov rdi,rbx
0x5508: call 0x68b0
0x550d: mov dword ptr [rbp],r12d
0x5511: pop rbx
0x5512: pop rbp
0x5513: pop r12
0x5515: ret 
0x5520: lea rax,[rip+0x204d39]
0x5527: test rdi,rdi
0x552a: cmove rdi,rax
0x552e: mov eax,dword ptr [rdi]
0x5530: ret 
0x5540: lea rax,[rip+0x204d19]
0x5547: test rdi,rdi
0x554a: cmove rdi,rax
0x554e: mov dword ptr [rdi],esi
0x5550: ret 
0x5560: lea rax,[rip+0x204cf9]
0x5567: test rdi,rdi
0x556a: mov ecx,esi
0x556c: cmove rdi,rax
0x5570: mov eax,esi
0x5572: and ecx,0x1f
0x5575: shr al,0x5
0x5578: movzx eax,al
0x557b: lea rdi,[rdi+rax*4+0x8]
0x5580: mov esi,dword ptr [rdi]
0x5582: mov eax,esi
0x5584: shr eax,cl
0x5586: xor edx,eax
0x5588: and eax,0x1
0x558b: and edx,0x1
0x558e: shl edx,cl
0x5590: xor edx,esi
0x5592: mov dword ptr [rdi],edx
0x5594: ret 
0x55a0: lea rax,[rip+0x204cb9]
0x55a7: test rdi,rdi
0x55aa: cmove rdi,rax
0x55ae: mov eax,dword ptr [rdi+0x4]
0x55b1: mov dword ptr [rdi+0x4],esi
0x55b4: ret 
0x55c0: lea rax,[rip+0x204c99]
0x55c7: test rdi,rdi
0x55ca: cmove rdi,rax
0x55ce: test rsi,rsi
0x55d1: mov dword ptr [rdi],0xa
0x55d7: je 0x55e7
0x55d9: test rdx,rdx
0x55dc: je 0x55e7
0x55de: mov qword ptr [rdi+0x28],rsi
0x55e2: mov qword ptr [rdi+0x30],rdx
0x55e6: ret 
0x55e7: sub rsp,0x8
0x55eb: call 0x19e0
0x55f0: push r15
0x55f2: push r14
0x55f4: lea rax,[rip+0x204c65]
0x55fb: push r13
0x55fd: push r12
0x55ff: mov r13,rdi
0x5602: push rbp
0x5603: push rbx
0x5604: mov rbx,r8
0x5607: mov r14,rsi
0x560a: mov r15,rdx
0x560d: sub rsp,0x18
0x5611: test r8,r8
0x5614: cmove rbx,rax
0x5618: mov qword ptr [rsp+0x8],rcx
0x561d: call 0x19f0
0x5622: mov r12d,dword ptr [rax]
0x5625: mov rbp,rax
0x5628: lea rax,[rbx+0x8]
0x562c: sub rsp,0x8
0x5630: mov r9d,dword ptr [rbx+0x4]
0x5634: push qword ptr [rbx+0x30]
0x5637: mov r8d,dword ptr [rbx]
0x563a: push qword ptr [rbx+0x28]
0x563d: mov rdx,r15
0x5640: push rax
0x5641: mov rcx,qword ptr [rsp+0x28]
0x5646: mov rsi,r14
0x5649: mov rdi,r13
0x564c: call 0x40f0
0x5651: mov dword ptr [rbp],r12d
0x5655: add rsp,0x38
0x5659: pop rbx
0x565a: pop rbp
0x565b: pop r12
0x565d: pop r13
0x565f: pop r14
0x5661: pop r15
0x5663: ret 
0x5670: push r15
0x5672: push r14
0x5674: lea rax,[rip+0x204be5]
0x567b: push r13
0x567d: push r12
0x567f: mov r12,rdx
0x5682: push rbp
0x5683: push rbx
0x5684: mov rbx,rcx
0x5687: mov r14,rdi
0x568a: mov r15,rsi
0x568d: sub rsp,0x38
0x5691: test rcx,rcx
0x5694: cmove rbx,rax
0x5698: xor ebp,ebp
0x569a: call 0x19f0
0x569f: test r12,r12
0x56a2: mov r13,rax
0x56a5: mov eax,dword ptr [rax]
0x56a7: sete bpl
0x56ab: or ebp,dword ptr [rbx+0x4]
0x56ae: lea r10,[rbx+0x8]
0x56b2: sub rsp,0x8
0x56b6: mov r8d,dword ptr [rbx]
0x56b9: mov rcx,r15
0x56bc: mov dword ptr [rsp+0x14],eax
0x56c0: push qword ptr [rbx+0x30]
0x56c3: mov rdx,r14
0x56c6: push qword ptr [rbx+0x28]
0x56c9: push r10
0x56cb: xor esi,esi
0x56cd: mov r9d,ebp
0x56d0: xor edi,edi
0x56d2: mov qword ptr [rsp+0x40],r10
0x56d7: call 0x40f0
0x56dc: lea rsi,[rax+0x1]
0x56e0: mov qword ptr [rsp+0x48],rax
0x56e5: add rsp,0x20
0x56e9: mov rdi,rsi
0x56ec: mov qword ptr [rsp+0x18],rsi
0x56f1: call 0x66b0
0x56f6: mov qword ptr [rsp+0x10],rax
0x56fb: sub rsp,0x8
0x56ff: push qword ptr [rbx+0x30]
0x5702: push qword ptr [rbx+0x28]
0x5705: mov r10,qword ptr [rsp+0x38]
0x570a: mov r9d,ebp
0x570d: mov r8d,dword ptr [rbx]
0x5710: mov rcx,r15
0x5713: mov rdx,r14
0x5716: mov rdi,rax
0x5719: push r10
0x571b: mov rsi,qword ptr [rsp+0x38]
0x5720: call 0x40f0
0x5725: mov eax,dword ptr [rsp+0x2c]
0x5729: add rsp,0x20
0x572d: test r12,r12
0x5730: mov dword ptr [r13],eax
0x5734: je 0x573f
0x5736: mov r11,qword ptr [rsp+0x28]
0x573b: mov qword ptr [r12],r11
0x573f: mov rax,qword ptr [rsp+0x10]
0x5744: add rsp,0x38
0x5748: pop rbx
0x5749: pop rbp
0x574a: pop r12
0x574c: pop r13
0x574e: pop r14
0x5750: pop r15
0x5752: ret 
0x5760: mov rcx,rdx
0x5763: xor edx,edx
0x5765: jmp 0x5670
0x5770: mov eax,dword ptr [rip+0x2048e2]
0x5776: push r12
0x5778: mov r12,qword ptr [rip+0x2048e1]
0x577f: push rbp
0x5780: push rbx
0x5781: cmp eax,0x1
0x5784: jle 0x57b1
0x5786: sub eax,0x2
0x5789: lea rbx,[r12+0x18]
0x578e: shl rax,0x4
0x5792: lea rbp,[r12+rax+0x28]
0x5797: nop word ptr [rax+rax]
0x57a0: mov rdi,qword ptr [rbx]
0x57a3: add rbx,0x10
0x57a7: call 0x1dc0
0x57ac: cmp rbx,rbp
0x57af: jne 0x57a0
0x57b1: mov rdi,qword ptr [r12+0x8]
0x57b6: lea rbx,[rip+0x2049a3]
0x57bd: cmp rdi,rbx
0x57c0: je 0x57d9
0x57c2: call 0x1dc0
0x57c7: mov qword ptr [rip+0x20489e],0x100
0x57d2: mov qword ptr [rip+0x20489f],rbx
0x57d9: lea rbx,[rip+0x204890]
0x57e0: cmp r12,rbx
0x57e3: je 0x57f4
0x57e5: mov rdi,r12
0x57e8: call 0x1dc0
0x57ed: mov qword ptr [rip+0x20486c],rbx
0x57f4: pop rbx
0x57f5: mov dword ptr [rip+0x204859],0x1
0x57ff: pop rbp
0x5800: pop r12
0x5802: ret 
0x5810: lea rcx,[rip+0x204a49]
0x5817: mov rdx,-0x1
0x581e: jmp 0x5330
0x5830: lea rcx,[rip+0x204a29]
0x5837: jmp 0x5330
0x5840: lea rcx,[rip+0x204a19]
0x5847: mov rsi,rdi
0x584a: mov rdx,-0x1
0x5851: xor edi,edi
0x5853: jmp 0x5330
0x5860: lea rcx,[rip+0x2049f9]
0x5867: mov rdx,rsi
0x586a: mov rsi,rdi
0x586d: xor edi,edi
0x586f: jmp 0x5330
0x58ef: mov rcx,qword ptr [rsp+0x38]
0x58f4: xor rcx,qword ptr fs:0x28
0x58fd: jne 0x5909
0x58ff: add rsp,0x48
0x5903: ret 
0x5904: call 0x19e0
0x5909: call 0x1ab0
0x590e: nop 
0x5910: sub rsp,0x48
0x5914: mov rax,rdx
0x5917: mov rdx,rcx
0x591a: mov rcx,qword ptr fs:0x28
0x5923: mov qword ptr [rsp+0x38],rcx
0x5928: xor ecx,ecx
0x592a: cmp esi,0xa
0x592d: je 0x5990
0x592f: mov dword ptr [rsp],esi
0x5932: mov rcx,rsp
0x5935: mov rsi,rax
0x5938: mov qword ptr [rsp+0x4],0x0
0x5941: mov qword ptr [rsp+0xc],0x0
0x594a: mov qword ptr [rsp+0x14],0x0
0x5953: mov qword ptr [rsp+0x1c],0x0
0x595c: mov qword ptr [rsp+0x24],0x0
0x5965: mov qword ptr [rsp+0x2c],0x0
0x596e: mov dword ptr [rsp+0x34],0x0
0x5976: call 0x5330
0x597b: mov rdx,qword ptr [rsp+0x38]
0x5980: xor rdx,qword ptr fs:0x28
0x5989: jne 0x5995
0x598b: add rsp,0x48
0x598f: ret 
0x5990: call 0x19e0
0x5995: call 0x1ab0
0x599a: nop word ptr [rax+rax]
0x59b0: mov rcx,rdx
0x59b3: mov rdx,rsi
0x59b6: mov esi,edi
0x59b8: xor edi,edi
0x59ba: jmp 0x5910
0x59c0: sub rsp,0x48
0x59c4: mov ecx,edx
0x59c6: mov rax,qword ptr fs:0x28
0x59cf: mov qword ptr [rsp+0x38],rax
0x59d4: xor eax,eax
0x59d6: mov rax,qword ptr [rip+0x2048b3]
0x59dd: mov r8,rsp
0x59e0: and ecx,0x1f
0x59e3: movdqa xmm0,[rip+0x204875]
0x59eb: mov qword ptr [rsp+0x30],rax
0x59f0: mov eax,edx
0x59f2: movaps [rsp],xmm0
0x59f6: shr al,0x5
0x59f9: movzx eax,al
0x59fc: lea r9,[r8+rax*4+0x8]
0x5a01: movdqa xmm0,[rip+0x204867]
0x5a09: movaps [rsp+0x10],xmm0
0x5a0e: movdqa xmm0,[rip+0x20486a]
0x5a16: movaps [rsp+0x20],xmm0
0x5a1b: mov edx,dword ptr [r9]
0x5a1e: mov eax,edx
0x5a20: shr eax,cl
0x5a22: not eax
0x5a24: and eax,0x1
0x5a27: shl eax,cl
0x5a29: mov rcx,r8
0x5a2c: xor eax,edx
0x5a2e: mov rdx,rsi
0x5a31: mov rsi,rdi
0x5a34: mov dword ptr [r9],eax
0x5a37: xor edi,edi
0x5a39: call 0x5330
0x5a3e: mov rsi,qword ptr [rsp+0x38]
0x5a43: xor rsi,qword ptr fs:0x28
0x5a4c: jne 0x5a53
0x5a4e: add rsp,0x48
0x5a52: ret 
0x5a53: call 0x1ab0
0x5a58: nop dword ptr [rax+rax]
0x5a60: movsx edx,sil
0x5a64: mov rsi,-0x1
0x5a6b: jmp 0x59c0
0x5a70: mov edx,0x3a
0x5a75: mov rsi,-0x1
0x5a7c: jmp 0x59c0
0x5a90: mov edx,0x3a
0x5a95: jmp 0x59c0
0x5b0f: mov rcx,qword ptr [rsp+0x38]
0x5b14: xor rcx,qword ptr fs:0x28
0x5b1d: jne 0x5b29
0x5b1f: add rsp,0x48
0x5b23: ret 
0x5b24: call 0x19e0
0x5b29: call 0x1ab0
0x5b2e: nop 
0x5b30: sub rsp,0x48
0x5b34: mov r9,rcx
0x5b37: mov rcx,qword ptr [rip+0x204752]
0x5b3e: movdqa xmm0,[rip+0x20471a]
0x5b46: mov rax,qword ptr fs:0x28
0x5b4f: mov qword ptr [rsp+0x38],rax
0x5b54: xor eax,eax
0x5b56: movaps [rsp],xmm0
0x5b5a: test rsi,rsi
0x5b5d: mov qword ptr [rsp+0x30],rcx
0x5b62: mov dword ptr [rsp],0xa
0x5b69: movdqa xmm0,[rip+0x2046ff]
0x5b71: movaps [rsp+0x10],xmm0
0x5b76: movdqa xmm0,[rip+0x204702]
0x5b7e: movaps [rsp+0x20],xmm0
0x5b83: je 0x5bb7
0x5b85: test rdx,rdx
0x5b88: je 0x5bb7
0x5b8a: mov qword ptr [rsp+0x28],rsi
0x5b8f: mov qword ptr [rsp+0x30],rdx
0x5b94: mov rcx,rsp
0x5b97: mov rdx,r8
0x5b9a: mov rsi,r9
0x5b9d: call 0x5330
0x5ba2: mov rdi,qword ptr [rsp+0x38]
0x5ba7: xor rdi,qword ptr fs:0x28
0x5bb0: jne 0x5bbc
0x5bb2: add rsp,0x48
0x5bb6: ret 
0x5bb7: call 0x19e0
0x5bbc: call 0x1ab0
0x5bc1: nop dword ptr [rax+rax]
0x5bc6: nop word ptr cs:[rax+rax]
0x5bd0: mov r8,-0x1
0x5bd7: jmp 0x5b30
0x5be0: mov rcx,rdx
0x5be3: mov r8,-0x1
0x5bea: mov rdx,rsi
0x5bed: mov rsi,rdi
0x5bf0: xor edi,edi
0x5bf2: jmp 0x5b30
0x5c00: mov r8,rcx
0x5c03: mov rcx,rdx
0x5c06: mov rdx,rsi
0x5c09: mov rsi,rdi
0x5c0c: xor edi,edi
0x5c0e: jmp 0x5b30
0x5c20: lea rcx,[rip+0x2043f9]
0x5c27: jmp 0x5330
0x5c30: lea rcx,[rip+0x2043e9]
0x5c37: mov rdx,rsi
0x5c3a: mov rsi,rdi
0x5c3d: xor edi,edi
0x5c3f: jmp 0x5330
0x5c50: lea rcx,[rip+0x2043c9]
0x5c57: mov rdx,-0x1
0x5c5e: jmp 0x5330
0x5c70: lea rcx,[rip+0x2043a9]
0x5c77: mov rsi,rdi
0x5c7a: mov rdx,-0x1
0x5c81: xor edi,edi
0x5c83: jmp 0x5330
0x5d32: mov rdx,qword ptr [rbx+0xe0]
0x5eaa: cmp qword ptr [rbx+0x38],rax
0x5eae: je 0x6010
0x5eb4: lea rdx,[rax+0x1]
0x5eb8: mov rdi,rbx
0x5ebb: mov qword ptr [rbx+0x30],rdx
0x5ebf: mov byte ptr [rax],0x0
0x5ec2: call 0x5c90
0x6010: lea rdi,[rbx+0x18]
0x6014: mov esi,0x1
0x6019: call 0x6c40
0x601e: mov rax,qword ptr [rbx+0x30]
0x6022: jmp 0x5eb4
0x61c8: mov r8,rcx
0x61cb: mov rcx,rdx
0x61ce: lea rdx,[rip+0x1c1f]
0x61d5: mov esi,0x1
0x61da: xor eax,eax
0x61dc: call 0x1d70
0x61e1: jmp 0x60cc
0x63dd: push r12
0x63df: push r15
0x63e1: push r14
0x63e3: mov r8,qword ptr [rsp+0x20]
0x63e8: mov rcx,rbx
0x63eb: mov rdx,rax
0x63ee: mov rdi,rbp
0x63f1: mov esi,0x1
0x63f6: xor eax,eax
0x63f8: call 0x1d70
0x63fd: add rsp,0x20
0x6401: add rsp,0x28
0x6405: pop rbx
0x6406: pop rbp
0x6407: pop r12
0x6409: pop r13
0x640b: pop r14
0x640d: pop r15
0x640f: ret 
0x6449: push r12
0x644b: push r15
0x644d: push r14
0x644f: mov r9,qword ptr [rsp+0x28]
0x6454: jmp 0x63e3
0x64b0: xor r9d,r9d
0x64b3: cmp qword ptr [r8],0x0
0x64b7: je 0x64cb
0x64b9: nop dword ptr [rax]
0x64c0: add r9,0x1
0x64c4: cmp qword ptr [r8+r9*8],0x0
0x64c9: jne 0x64c0
0x64cb: jmp 0x6090
0x64d0: sub rsp,0x68
0x64d4: mov r10,r8
0x64d7: xor r9d,r9d
0x64da: mov rax,qword ptr fs:0x28
0x64e3: mov qword ptr [rsp+0x58],rax
0x64e8: xor eax,eax
0x64ea: mov r8,rsp
0x64ed: nop dword ptr [rax]
0x64f0: mov eax,dword ptr [r10]
0x64f3: cmp eax,0x2f
0x64f6: ja 0x653a
0x64f8: mov r11d,eax
0x64fb: add r11,qword ptr [r10+0x10]
0x64ff: add eax,0x8
0x6502: mov dword ptr [r10],eax
0x6505: mov rax,qword ptr [r11]
0x6508: test rax,rax
0x650b: mov qword ptr [r8+r9*8],rax
0x650f: je 0x651b
0x6511: add r9,0x1
0x6515: cmp r9,0xa
0x6519: jne 0x64f0
0x651b: call 0x6090
0x6520: mov rax,qword ptr [rsp+0x58]
0x6525: xor rax,qword ptr fs:0x28
0x652e: jne 0x6535
0x6530: add rsp,0x68
0x6534: ret 
0x6535: call 0x1ab0
0x653a: mov r11,qword ptr [r10+0x8]
0x653e: lea rax,[r11+0x8]
0x6542: mov qword ptr [r10+0x8],rax
0x6546: jmp 0x6505
0x6610: call 0x1ab0
0x661c: mov rax,rbx
0x661f: add rbx,0x8
0x6623: jmp 0x65d6
0x6630: push rbx
0x6631: lea rsi,[rip+0x180a]
0x6638: mov edx,0x5
0x663d: xor edi,edi
0x663f: call 0x1a80
0x6644: lea rdx,[rip+0x180c]
0x664b: mov rsi,rax
0x664e: mov edi,0x1
0x6653: xor eax,eax
0x6655: call 0x1c90
0x665a: lea rsi,[rip+0x180c]
0x6661: mov edx,0x5
0x6666: xor edi,edi
0x6668: call 0x1a80
0x666d: lea rcx,[rip+0x108c]
0x6674: lea rdx,[rip+0x9f1]
0x667b: mov rsi,rax
0x667e: mov edi,0x1
0x6683: xor eax,eax
0x6685: call 0x1c90
0x668a: mov rbx,qword ptr [rip+0x203a17]
0x6691: lea rsi,[rip+0x1a08]
0x6698: xor edi,edi
0x669a: mov edx,0x5
0x669f: call 0x1a80
0x66a4: mov rsi,rbx
0x66a7: mov rdi,rax
0x66aa: pop rbx
0x66ab: jmp 0x1ba0
0x66ca: nop word ptr [rax+rax]
0x66d0: mov rax,rdi
0x66d3: mul rsi
0x66d6: mov rdi,rax
0x66d9: seto al
0x66dc: test rdi,rdi
0x66df: js 0x66eb
0x66e1: movzx eax,al
0x66e4: test rax,rax
0x66e7: jne 0x66eb
0x66e9: jmp 0x66b0
0x66eb: sub rsp,0x8
0x66ef: call 0x6900
0x66f4: nop 
0x66f6: nop word ptr cs:[rax+rax]
0x6700: jmp 0x66b0
0x6719: test rdi,rdi
0x671c: jne 0x6738
0x6738: call 0x1dc0
0x673d: xor eax,eax
0x673f: pop rbx
0x6740: ret 
0x6746: nop word ptr cs:[rax+rax]
0x6750: mov rax,rsi
0x6753: mul rdx
0x6756: mov rsi,rax
0x6759: seto al
0x675c: test rsi,rsi
0x675f: js 0x676b
0x6761: movzx eax,al
0x6764: test rax,rax
0x6767: jne 0x676b
0x6769: jmp 0x6710
0x676b: sub rsp,0x8
0x676f: call 0x6900
0x6774: nop 
0x6776: nop word ptr cs:[rax+rax]
0x6780: test rdi,rdi
0x6783: mov r9,rdx
0x6786: mov rcx,qword ptr [rsi]
0x6789: je 0x67c0
0x678b: xor edx,edx
0x678d: movabsq rax,0x5555555555555554
0x6797: div r9
0x679a: cmp rax,rcx
0x679d: jbe 0x67db
0x679f: mov rax,rcx
0x67a2: shr rax, 1
0x67a5: lea rcx,[rax+rcx+0x1]
0x67aa: mov qword ptr [rsi],rcx
0x67ad: imul rcx,r9
0x67b1: mov rsi,rcx
0x67b4: jmp 0x6710
0x67c0: test rcx,rcx
0x67c3: je 0x67e8
0x67c5: mov rax,rcx
0x67c8: mul r9
0x67cb: seto dl
0x67ce: test rax,rax
0x67d1: movzx edx,dl
0x67d4: js 0x67db
0x67d6: test rdx,rdx
0x67d9: je 0x67aa
0x67db: sub rsp,0x8
0x67df: call 0x6900
0x67e4: nop dword ptr [rax]
0x67e8: xor edx,edx
0x67ea: mov eax,0x80
0x67ef: xor r8d,r8d
0x67f2: div r9
0x67f5: test rax,rax
0x67f8: sete r8b
0x67fc: lea rcx,[r8+rax]
0x6800: jmp 0x67c5
0x6810: test rdi,rdi
0x6813: mov rax,qword ptr [rsi]
0x6816: je 0x6840
0x6818: movabsq rdx,0x5555555555555553
0x6822: cmp rax,rdx
0x6825: ja 0x6851
0x6827: mov rdx,rax
0x682a: shr rdx, 1
0x682d: lea rax,[rdx+rax+0x1]
0x6832: mov qword ptr [rsi],rax
0x6835: mov rsi,rax
0x6838: jmp 0x6710
0x6840: test rax,rax
0x6843: mov edx,0x80
0x6848: cmove rax,rdx
0x684c: test rax,rax
0x684f: jns 0x6832
0x6851: sub rsp,0x8
0x6855: call 0x6900
0x685a: nop word ptr [rax+rax]
0x6860: push rbx
0x6861: mov rbx,rdi
0x6864: call 0x66b0
0x6869: mov rdx,rbx
0x686c: xor esi,esi
0x686e: mov rdi,rax
0x6871: pop rbx
0x6872: jmp 0x1b30
0x6880: mov rax,rdi
0x6883: sub rsp,0x8
0x6887: mul rsi
0x688a: seto dl
0x688d: test rax,rax
0x6890: js 0x68a9
0x6892: movzx edx,dl
0x6895: test rdx,rdx
0x6898: jne 0x68a9
0x689a: call 0x1bb0
0x689f: test rax,rax
0x68a2: je 0x68a9
0x68a4: add rsp,0x8
0x68a8: ret 
0x68a9: call 0x6900
0x68ae: nop 
0x68b0: push rbp
0x68b1: push rbx
0x68b2: mov rbp,rdi
0x68b5: mov rdi,rsi
0x68b8: mov rbx,rsi
0x68bb: sub rsp,0x8
0x68bf: call 0x66b0
0x68c4: add rsp,0x8
0x68c8: mov rdx,rbx
0x68cb: mov rsi,rbp
0x68ce: pop rbx
0x68cf: pop rbp
0x68d0: mov rdi,rax
0x68d3: jmp 0x1bf0
0x68e0: push rbx
0x68e1: mov rbx,rdi
0x68e4: call 0x1aa0
0x68e9: mov rdi,rbx
0x68ec: lea rsi,[rax+0x1]
0x68f0: pop rbx
0x68f1: jmp 0x68b0
0x6930: call 0x19e0
0x6935: nop word ptr cs:[rax+rax]
0x693f: nop 
0x6ade: call 0x1ab0
0x6ae3: nop word ptr cs:[rax+rax]
0x6aed: nop dword ptr [rax]
0x6af0: lea rsi,[rip+0x1658]
0x6af7: sub rsp,0x8
0x6afb: mov edx,0x5
0x6b00: xor edi,edi
0x6b02: call 0x1a80
0x6b07: mov rdi,qword ptr [rip+0x2035d2]
0x6b0e: lea rdx,[rip+0x12db]
0x6b15: mov rcx,rax
0x6b18: mov esi,0x1
0x6b1d: xor eax,eax
0x6b1f: call 0x1d70
0x6b24: mov edi,dword ptr [rip+0x2034ee]
0x6b2a: call 0x1d50
0x6b2f: nop 
0x6b60: mov rdi,qword ptr [rdi+0x48]
0x6b64: jmp rax
0x6b7c: lea r12,[rdx-0x1]
0x6b80: mov rbp,rdx
0x6bf3: nop dword ptr [rax]
0x6bf6: nop word ptr cs:[rax+rax]
0x6c20: or byte ptr [rdi+0x50],0x1
0x6c24: mov qword ptr [rdi+0x38],rcx
0x6c28: mov qword ptr [rdi+0x40],r8
0x6c2c: mov qword ptr [rdi+0x48],r9
0x6c30: jmp 0x6b70
0x6c43: push rbp
0x6d2b: nop dword ptr [rax+rax]
0x6d30: mov rax,qword ptr [rdi+0x8]
0x6d34: test rax,rax
0x6d37: je 0x6d66
0x6d39: nop dword ptr [rax]
0x6d40: cmp rsi,rax
0x6d43: jbe 0x6d4a
0x6d45: cmp qword ptr [rax],rsi
0x6d48: jae 0x6d60
0x6d4a: mov rax,qword ptr [rax+0x8]
0x6d4e: test rax,rax
0x6d51: jne 0x6d40
0x6d53: xor eax,eax
0x6d55: ret 
0x6d60: mov eax,0x1
0x6d65: ret 
0x6d66: rep ret 
0x6dda: nop word ptr [rax+rax]
0x6de0: mov rdx,qword ptr [rdi+0x8]
0x6de4: xor eax,eax
0x6de6: test rdx,rdx
0x6de9: je 0x6e08
0x6deb: nop dword ptr [rax+rax]
0x6df0: mov rcx,qword ptr [rdx]
0x6df3: sub rcx,rdx
0x6df6: mov rdx,qword ptr [rdx+0x8]
0x6dfa: add rax,rcx
0x6dfd: test rdx,rdx
0x6e00: jne 0x6df0
0x6e02: rep ret 
0x6e08: rep ret 
0x6e10: push r12
0x6e12: push rbp
0x6e13: mov rbp,rdi
0x6e16: push rbx
0x6e17: call 0x1a20
0x6e1c: mov ebx,dword ptr [rbp]
0x6e1f: mov rdi,rbp
0x6e22: mov r12,rax
0x6e25: call 0x6940
0x6e2a: and ebx,0x20
0x6e2d: test ebx,ebx
0x6e2f: jne 0x6e48
0x6e31: test eax,eax
0x6e33: je 0x6e3f
0x6e35: test r12,r12
0x6e38: mov eax,0xffffffff
0x6e3d: je 0x6e78
0x6e3f: pop rbx
0x6e40: pop rbp
0x6e41: pop r12
0x6e43: ret 
0x6e48: test eax,eax
0x6e4a: jne 0x6e68
0x6e4c: call 0x19f0
0x6e51: mov dword ptr [rax],0x0
0x6e57: mov eax,0xffffffff
0x6e5c: pop rbx
0x6e5d: pop rbp
0x6e5e: pop r12
0x6e60: ret 
0x6e68: pop rbx
0x6e69: mov eax,0xffffffff
0x6e6e: pop rbp
0x6e6f: pop r12
0x6e71: ret 
0x6e78: call 0x19f0
0x6e7d: cmp dword ptr [rax],0x9
0x6e80: pop rbx
0x6e81: pop rbp
0x6e82: pop r12
0x6e84: setne al
0x6e87: movzx eax,al
0x6e8a: neg eax
0x6e8c: ret 
0x6ef0: sub rsp,0x8
0x6ef4: mov edi,0xe
0x6ef9: call 0x1c40
0x6efe: test rax,rax
0x6f01: je 0x6f20
0x6f03: cmp byte ptr [rax],0x0
0x6f06: lea rdx,[rip+0x125b]
0x6f0d: cmove rax,rdx
0x6f11: add rsp,0x8
0x6f15: ret 
0x6f20: lea rax,[rip+0x1241]
0x6f27: add rsp,0x8
0x6f2b: ret 
0x6f30: push r15
0x6f32: push r14
0x6f34: mov r15,rdx
0x6f37: push r13
0x6f39: push r12
0x6f3b: lea r12,[rip+0x202aee]
0x6f42: push rbp
0x6f43: lea rbp,[rip+0x202aee]
0x6f4a: push rbx
0x6f4b: mov r13d,edi
0x6f4e: mov r14,rsi
0x6f51: sub rbp,r12
0x6f54: sub rsp,0x8
0x6f58: sar rbp,0x3
0x6f5c: call 0x19a0
0x6f61: test rbp,rbp
0x6f64: je 0x6f86
0x6f66: xor ebx,ebx
0x6f68: nop dword ptr [rax+rax]
0x6f70: mov rdx,r15
0x6f73: mov rsi,r14
0x6f76: mov edi,r13d
0x6f79: call qword ptr [r12+rbx*8]
0x6f7d: add rbx,0x1
0x6f81: cmp rbp,rbx
0x6f84: jne 0x6f70
0x6f86: add rsp,0x8
0x6f8a: pop rbx
0x6f8b: pop rbp
0x6f8c: pop r12
0x6f8e: pop r13
0x6f90: pop r14
0x6f92: pop r15
0x6f94: ret 
0x6fa0: rep ret 
