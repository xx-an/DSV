0x1448: sub rsp,0x8
0x144c: mov rax,qword ptr [rip+0x206b7d]
0x1453: test rax,rax
0x1456: je 0x145a
0x1458: call rax
0x145a: add rsp,0x8
0x145e: ret 
0x1466: jmp qword ptr [rip+0x2069cc]
0x14c0: jmp qword ptr [rip+0x2069a2]
0x14d0: jmp qword ptr [rip+0x20699a]
0x1540: jmp qword ptr [rip+0x206962]
0x1550: jmp qword ptr [rip+0x20695a]
0x1570: jmp qword ptr [rip+0x20694a]
0x1600: jmp qword ptr [rip+0x206902]
0x1620: jmp qword ptr [rip+0x2068f2]
0x1630: jmp qword ptr [rip+0x2068ea]
0x1670: jmp qword ptr [rip+0x2068ca]
0x1740: jmp qword ptr [rip+0x206862]
0x1750: jmp qword ptr [rip+0x20685a]
0x1770: jmp qword ptr [rip+0x20686a]
0x18cb: nop dword ptr [rax+rax]
0x1b6f: test eax,eax
0x1b71: jns 0x1a60
0x1b77: lea rsi,[rip+0x3b9c]
0x1b7e: mov edx,0x5
0x1b83: xor edi,edi
0x1b85: call 0x1520
0x1b8a: mov rbx,rax
0x1b8d: call 0x14a0
0x1b92: mov esi,dword ptr [rax]
0x1b94: mov rdx,rbx
0x1b97: mov edi,0x1
0x1b9c: xor eax,eax
0x1b9e: call 0x16d0
0x1c5c: call 0x1550
0x1cd5: nop word ptr cs:[rax+rax]
0x1cdf: nop 
0x1d0a: hlt 
0x1d0b: nop dword ptr [rax+rax]
0x1d10: lea rdi,[rip+0x206389]
0x1d17: push rbp
0x1d18: lea rax,[rip+0x206381]
0x1d1f: cmp rax,rdi
0x1d22: mov rbp,rsp
0x1d25: je 0x1d40
0x1d27: mov rax,qword ptr [rip+0x206292]
0x1d2e: test rax,rax
0x1d31: je 0x1d40
0x1d33: pop rbp
0x1d34: jmp rax
0x1d40: pop rbp
0x1d41: ret 
0x1d50: lea rdi,[rip+0x206349]
0x1d57: lea rsi,[rip+0x206342]
0x1d5e: push rbp
0x1d5f: sub rsi,rdi
0x1d62: mov rbp,rsp
0x1d65: sar rsi,0x3
0x1d69: mov rax,rsi
0x1d6c: shr rax,0x3f
0x1d70: add rsi,rax
0x1d73: sar rsi, 1
0x1d76: je 0x1d90
0x1d78: mov rax,qword ptr [rip+0x206259]
0x1d7f: test rax,rax
0x1d82: je 0x1d90
0x1d84: pop rbp
0x1d85: jmp rax
0x1d90: pop rbp
0x1d91: ret 
0x1db1: push rbp
0x1db2: mov rbp,rsp
0x1db5: je 0x1dc3
0x1db7: mov rdi,qword ptr [rip+0x20624a]
0x1dbe: call 0x1770
0x1dc3: call 0x1d10
0x1dc8: mov byte ptr [rip+0x206319],0x1
0x1dcf: pop rbp
0x1dd0: ret 
0x1de0: push rbp
0x1de1: mov rbp,rsp
0x1de4: pop rbp
0x1de5: jmp 0x1d50
0x21e4: xor eax,eax
0x2224: xor eax,eax
0x256b: lea rsi,[rip+0x37e6]
0x2572: mov edx,0x5
0x2577: xor edi,edi
0x2579: mov qword ptr [rsp+0x8],rax
0x257e: call 0x1520
0x2583: mov rcx,qword ptr [rsp+0x8]
0x2588: mov rdx,rax
0x258b: xor esi,esi
0x258d: xor eax,eax
0x258f: xor edi,edi
0x2591: call 0x16d0
0x2596: mov rdi,r15
0x2599: call 0x1480
0x259e: mov rax,qword ptr [rsp]
0x25a2: mov byte ptr [rsp+0x8],0x0
0x25a7: lea rax,[rax+rbx-0x1]
0x25ac: jmp 0x23e0
0x25c3: lea rsi,[rip+0x34ee]
0x25ca: mov r12,rax
0x25cd: mov edx,0x5
0x25d2: xor edi,edi
0x25d4: call 0x1520
0x25d9: mov rcx,r12
0x25dc: mov rdx,rax
0x25df: xor esi,esi
0x25e1: xor eax,eax
0x25e3: xor edi,edi
0x25e5: mov r12d,ebp
0x25e8: call 0x16d0
0x25ed: mov rax,rbx
0x25f0: mov byte ptr [rsp+0x8],0x0
0x25f5: jmp 0x23e0
0x260b: lea rsi,[rip+0x34d6]
0x2612: mov r12,rax
0x2615: mov edx,0x5
0x261a: xor edi,edi
0x261c: call 0x1520
0x2621: mov rcx,r12
0x2624: mov rdx,rax
0x2627: xor esi,esi
0x2629: xor eax,eax
0x262b: xor edi,edi
0x262d: xor r12d,r12d
0x2630: call 0x16d0
0x2635: mov rax,rbx
0x2638: mov byte ptr [rsp+0x8],0x0
0x263d: jmp 0x23e0
0x2678: lea rsi,[rip+0x3499]
0x267f: mov rbx,rax
0x2682: mov edx,0x5
0x2687: xor edi,edi
0x2689: call 0x1520
0x268e: mov rcx,rbx
0x2691: mov rdx,rax
0x2694: xor esi,esi
0x2696: xor edi,edi
0x2698: xor eax,eax
0x269a: call 0x16d0
0x26a9: nop dword ptr [rax]
0x27ec: nop dword ptr [rax]
0x295f: mov r12,rax
0x2962: call 0x14a0
0x2967: mov esi,dword ptr [rax]
0x2969: lea rdx,[rip+0x3453]
0x2970: xor eax,eax
0x2972: xor edi,edi
0x2974: mov rcx,r12
0x2977: call 0x16d0
0x297c: mov rax,qword ptr [rip+0x205785]
0x2983: mov dword ptr [rip+0x205763],0x1
0x298d: lea rdx,[rax+0x8]
0x2991: mov qword ptr [rip+0x205770],rdx
0x2998: mov rdx,qword ptr [rax]
0x299b: test rdx,rdx
0x299e: je 0x2a00
0x2a30: mov rbx,rax
0x2a33: call 0x14a0
0x2a38: mov esi,dword ptr [rax]
0x2a3a: lea rdx,[rip+0x3382]
0x2a41: mov rcx,rbx
0x2a44: xor edi,edi
0x2a46: xor eax,eax
0x2a48: call 0x16d0
0x2a4d: mov dword ptr [rip+0x205699],0x1
0x2a57: jmp 0x290f
0x2a6f: mov rbx,rax
0x2a72: call 0x14a0
0x2a77: mov esi,dword ptr [rax]
0x2a79: lea rdx,[rip+0x3343]
0x2a80: mov rcx,rbx
0x2a83: xor edi,edi
0x2a85: xor eax,eax
0x2a87: call 0x16d0
0x2a8c: mov dword ptr [rip+0x20565a],0x1
0x2a96: mov rsi,qword ptr [rip+0x20565b]
0x2a9d: jmp 0x28e9
0x2ac1: nop dword ptr [rax+rax]
0x2ac6: nop word ptr cs:[rax+rax]
0x2b13: nop dword ptr [rax]
0x2b16: nop word ptr cs:[rax+rax]
0x2b70: mov qword ptr [rip+0x2055d1],rdi
0x2b77: ret 
0x2b80: mov byte ptr [rip+0x2055b9],dil
0x2b87: ret 
0x2b90: push rbp
0x2b91: push rbx
0x2b92: sub rsp,0x8
0x2b96: mov rdi,qword ptr [rip+0x20550b]
0x2b9d: call 0x5430
0x2ba2: test eax,eax
0x2ba4: je 0x2bbc
0x2ba6: call 0x14a0
0x2bab: cmp byte ptr [rip+0x20558e],0x0
0x2bb2: mov rbx,rax
0x2bb5: je 0x2bd3
0x2bb7: cmp dword ptr [rax],0x20
0x2bba: jne 0x2bd3
0x2bbc: mov rdi,qword ptr [rip+0x20551d]
0x2bc3: call 0x5430
0x2bc8: test eax,eax
0x2bca: jne 0x2c12
0x2bcc: add rsp,0x8
0x2bd0: pop rbx
0x2bd1: pop rbp
0x2bd2: ret 
0x2bd3: lea rsi,[rip+0x2b40]
0x2bda: xor edi,edi
0x2bdc: mov edx,0x5
0x2be1: call 0x1520
0x2be6: mov rdi,qword ptr [rip+0x20555b]
0x2bed: mov rbp,rax
0x2bf0: test rdi,rdi
0x2bf3: je 0x2c1d
0x2bf5: call 0x4790
0x2bfa: mov esi,dword ptr [rbx]
0x2bfc: lea rdx,[rip+0x31bc]
0x2c03: mov rcx,rax
0x2c06: mov r8,rbp
0x2c09: xor edi,edi
0x2c0b: xor eax,eax
0x2c0d: call 0x16d0
0x2c12: mov edi,dword ptr [rip+0x205410]
0x2c18: call 0x14c0
0x2c1d: mov esi,dword ptr [rbx]
0x2c1f: lea rdx,[rip+0x319d]
0x2c26: mov rcx,rax
0x2c29: xor edi,edi
0x2c2b: xor eax,eax
0x2c2d: call 0x16d0
0x2c32: jmp 0x2c12
0x2c40: jmp 0x15e0
0x2d1f: nop 
0x2d20: push rbp
0x2d21: push rbx
0x2d22: mov rbp,rdi
0x2d25: mov ebx,esi
0x2d27: sub rsp,0x8
0x2d2b: call 0x5510
0x2d30: movzx edx,byte ptr [rax]
0x2d33: and edx,-0x21
0x2d36: cmp dl,0x55
0x2d39: je 0x2db0
0x2d3b: cmp dl,0x47
0x2d3e: je 0x2d60
0x2d40: lea rax,[rip+0x30d4]
0x2d47: lea rdx,[rip+0x30cf]
0x2d4e: cmp ebx,0x9
0x2d51: cmovne rax,rdx
0x2d55: add rsp,0x8
0x2d59: pop rbx
0x2d5a: pop rbp
0x2d5b: ret 
0x2d60: movzx edx,byte ptr [rax+0x1]
0x2d64: and edx,-0x21
0x2d67: cmp dl,0x42
0x2d6a: jne 0x2d40
0x2d6c: cmp byte ptr [rax+0x2],0x31
0x2d70: jne 0x2d40
0x2d72: cmp byte ptr [rax+0x3],0x38
0x2d76: jne 0x2d40
0x2d78: cmp byte ptr [rax+0x4],0x30
0x2d7c: jne 0x2d40
0x2d7e: cmp byte ptr [rax+0x5],0x33
0x2d82: jne 0x2d40
0x2d84: cmp byte ptr [rax+0x6],0x30
0x2d88: jne 0x2d40
0x2d8a: cmp byte ptr [rax+0x7],0x0
0x2d8e: jne 0x2d40
0x2d90: cmp byte ptr [rbp],0x60
0x2d94: lea rax,[rip+0x3079]
0x2d9b: lea rdx,[rip+0x3076]
0x2da2: cmovne rax,rdx
0x2da6: add rsp,0x8
0x2daa: pop rbx
0x2dab: pop rbp
0x2dac: ret 
0x2db0: movzx edx,byte ptr [rax+0x1]
0x2db4: and edx,-0x21
0x2db7: cmp dl,0x54
0x2dba: jne 0x2d40
0x2dbc: movzx edx,byte ptr [rax+0x2]
0x2dc0: and edx,-0x21
0x2dc3: cmp dl,0x46
0x2dc6: jne 0x2d40
0x2dcc: cmp byte ptr [rax+0x3],0x2d
0x2dd0: jne 0x2d40
0x2dd6: cmp byte ptr [rax+0x4],0x38
0x2dda: jne 0x2d40
0x2de0: cmp byte ptr [rax+0x5],0x0
0x2de4: jne 0x2d40
0x2dea: cmp byte ptr [rbp],0x60
0x2dee: lea rax,[rip+0x3017]
0x2df5: lea rdx,[rip+0x3014]
0x2dfc: cmovne rax,rdx
0x2e00: add rsp,0x8
0x2e04: pop rbx
0x2e05: pop rbp
0x2e06: ret 
0x2ee3: xor r11d,r11d
0x2ee6: mov rax,rbp
0x2ee9: mov r8d,r12d
0x2eec: mov rbp,r11
0x2eef: mov r11,rax
0x2ef2: nop word ptr [rax+rax]
0x2ef8: cmp r11,rbp
0x2efb: setne r12b
0x2eff: cmp r11,-0x1
0x2f03: jne 0x2f12
0x2f05: mov rax,qword ptr [rsp+0x10]
0x2f0a: cmp byte ptr [rax+rbp],0x0
0x2f0e: setne r12b
0x2f12: test r12b,r12b
0x2f15: je 0x3570
0x2f1b: cmp dword ptr [rsp+0x8],0x2
0x2f20: mov rdi,qword ptr [rsp+0x10]
0x2f25: lea r9,[rdi+rbp]
0x2f29: setne al
0x2f2c: and al,byte ptr [rsp+0xd]
0x2f30: mov r10d,eax
0x2f33: je 0x2fe0
0x2f39: mov rax,qword ptr [rsp+0x18]
0x2f3e: test rax,rax
0x2f41: je 0x3370
0x2f47: cmp r11,-0x1
0x2f4b: lea rbx,[rbp+rax]
0x2f50: jne 0x2f80
0x2f52: cmp rax,0x1
0x2f56: jbe 0x2f80
0x2f58: mov byte ptr [rsp+0x38],r8b
0x2f5d: mov byte ptr [rsp+0x30],r10b
0x2f62: mov qword ptr [rsp+0x28],r9
0x2f67: call 0x1540
0x2f6c: movzx r8d,byte ptr [rsp+0x38]
0x2f72: movzx r10d,byte ptr [rsp+0x30]
0x2f78: mov r11,rax
0x2f7b: mov r9,qword ptr [rsp+0x28]
0x2f80: cmp rbx,r11
0x2f83: mov byte ptr [rsp+0x28],r10b
0x2f88: ja 0x3540
0x2f8e: mov rdx,qword ptr [rsp+0x18]
0x2f93: mov rsi,qword ptr [rsp+0x48]
0x2f98: mov rdi,r9
0x2f9b: mov qword ptr [rsp+0x40],r11
0x2fa0: mov byte ptr [rsp+0x38],r8b
0x2fa5: mov qword ptr [rsp+0x30],r9
0x2faa: call 0x1600
0x2faf: test eax,eax
0x2fb1: mov r9,qword ptr [rsp+0x30]
0x2fb6: movzx r8d,byte ptr [rsp+0x38]
0x2fbc: mov r11,qword ptr [rsp+0x40]
0x2fc1: jne 0x3540
0x2fc7: cmp byte ptr [rsp+0xf],0x0
0x2fcc: movzx r10d,byte ptr [rsp+0x28]
0x2fd2: jne 0x3f55
0x2fd8: nop dword ptr [rax+rax]
0x2fe0: movzx ebx,byte ptr [r9]
0x2fe4: cmp bl,0x7e
0x2fe7: ja 0x3308
0x2fed: lea rcx,[rip+0x2eb8]
0x2ff4: movzx edx,bl
0x2ff7: movsxd rax,dword ptr [rcx+rdx*4]
0x2ffb: add rax,rcx
0x2ffe: jmp rax
0x3038: cmp byte ptr [rsp+0xd],0x1
0x303d: jne 0x3152
0x3043: test dl,dl
0x3045: jne 0x3152
0x304b: mov rsi,qword ptr [rsp+0x20]
0x3050: test rsi,rsi
0x3053: je 0x3069
0x3055: mov edx,ebx
0x3057: shr dl,0x5
0x305a: movzx edx,dl
0x305d: mov edx,dword ptr [rsi+rdx*4]
0x3060: btl edx,ebx
0x3063: jb 0x31b3
0x3069: test r10b,r10b
0x306c: jne 0x31b3
0x3072: xor eax,0x1
0x3075: add rbp,0x1
0x3079: and eax,r8d
0x307c: test al,al
0x307e: je 0x30a0
0x3080: cmp r13,r15
0x3083: jbe 0x308a
0x3085: mov byte ptr [r14+r15],0x27
0x308a: lea rax,[r15+0x1]
0x308e: cmp r13,rax
0x3091: jbe 0x3099
0x3093: mov byte ptr [r14+r15+0x1],0x27
0x3099: add r15,0x2
0x309d: xor r8d,r8d
0x30a0: cmp r15,r13
0x30a3: jae 0x30a9
0x30a5: mov byte ptr [r14+r15],bl
0x30a9: movzx edi,byte ptr [rsp+0xe]
0x30ae: add r15,0x1
0x30b2: mov eax,0x0
0x30b7: test r12b,r12b
0x30ba: cmove edi,eax
0x30bd: mov byte ptr [rsp+0xe],dil
0x30c2: jmp 0x2ef8
0x3152: cmp byte ptr [rsp+0xf],0x0
0x3157: jne 0x304b
0x315d: jmp 0x3069
0x31b3: cmp dword ptr [rsp+0x8],0x2
0x31b8: sete dl
0x31bb: cmp byte ptr [rsp+0xf],0x0
0x31c0: mov eax,edx
0x31c2: jne 0x3a18
0x31c8: mov eax,r8d
0x31cb: xor eax,0x1
0x31ce: and al,dl
0x31d0: je 0x3201
0x31d2: cmp r13,r15
0x31d5: jbe 0x31dc
0x31d7: mov byte ptr [r14+r15],0x27
0x31dc: lea rdx,[r15+0x1]
0x31e0: cmp r13,rdx
0x31e3: jbe 0x31eb
0x31e5: mov byte ptr [r14+r15+0x1],0x24
0x31eb: lea rdx,[r15+0x2]
0x31ef: cmp r13,rdx
0x31f2: jbe 0x31fa
0x31f4: mov byte ptr [r14+r15+0x2],0x27
0x31fa: add r15,0x3
0x31fe: mov r8d,eax
0x3201: cmp r13,r15
0x3204: jbe 0x320b
0x3206: mov byte ptr [r14+r15],0x5c
0x320b: add r15,0x1
0x320f: add rbp,0x1
0x3213: jmp 0x30a0
0x3300: xor r10d,r10d
0x3303: nop dword ptr [rax+rax]
0x3308: cmp qword ptr [rsp+0x58],0x1
0x330e: jne 0x36b8
0x3314: mov qword ptr [rsp+0x38],r11
0x3319: mov byte ptr [rsp+0x30],r8b
0x331e: mov byte ptr [rsp+0x28],r10b
0x3323: call 0x1760
0x3328: mov rcx,qword ptr [rax]
0x332b: movzx edx,bl
0x332e: movzx r10d,byte ptr [rsp+0x28]
0x3334: movzx r8d,byte ptr [rsp+0x30]
0x333a: mov r11,qword ptr [rsp+0x38]
0x333f: mov edi,0x1
0x3344: movzx eax,word ptr [rcx+rdx*2]
0x3348: and ax,0x4000
0x334c: setne r12b
0x3350: sete al
0x3353: and al,byte ptr [rsp+0xd]
0x3357: test al,al
0x3359: jne 0x3cf1
0x335f: cmp dword ptr [rsp+0x8],0x2
0x3364: sete dl
0x3367: jmp 0x3038
0x3370: movzx ebx,byte ptr [r9]
0x3374: cmp bl,0x7e
0x3377: ja 0x3300
0x3379: lea rcx,[rip+0x2d28]
0x3380: movzx edx,bl
0x3383: movsxd rax,dword ptr [rcx+rdx*4]
0x3387: add rax,rcx
0x338a: jmp rax
0x3540: xor r10d,r10d
0x3543: jmp 0x2fe0
0x3570: cmp dword ptr [rsp+0x8],0x2
0x3575: movzx ebx,byte ptr [rsp+0xf]
0x357a: mov r12d,r8d
0x357d: mov rbp,r11
0x3580: sete dl
0x3583: mov eax,ebx
0x3585: test r15,r15
0x3588: sete cl
0x358b: and eax,edx
0x358d: and al,cl
0x358f: jne 0x3ff6
0x3595: mov eax,ebx
0x3597: xor eax,0x1
0x359a: and dl,al
0x359c: je 0x3f0c
0x35a2: cmp byte ptr [rsp+0x7c],0x0
0x35a7: je 0x3f0a
0x35ad: cmp byte ptr [rsp+0xe],0x0
0x35b2: jne 0x3fad
0x35b8: test r13,r13
0x35bb: sete al
0x35be: cmp qword ptr [rsp+0x50],0x0
0x35c4: setne dl
0x35c7: and al,dl
0x35c9: je 0x3fec
0x35cf: mov r13,qword ptr [rsp+0x50]
0x35d4: lea rbx,[rip+0x2842]
0x35db: mov byte ptr [r14],0x27
0x35df: mov dword ptr [rsp+0x8],0x2
0x35e7: mov r15d,0x1
0x35ed: mov qword ptr [rsp+0x18],0x1
0x35f6: mov byte ptr [rsp+0xf],0x0
0x35fb: mov qword ptr [rsp+0x48],rbx
0x3600: mov byte ptr [rsp+0x7c],al
0x3604: jmp 0x2ee3
0x36b8: lea rax,[rsp+0xa0]
0x36c0: cmp r11,-0x1
0x36c4: mov qword ptr [rsp+0xa0],0x0
0x36d0: mov qword ptr [rsp+0x28],rax
0x36d5: jne 0x3704
0x36d7: mov rdi,qword ptr [rsp+0x10]
0x36dc: mov byte ptr [rsp+0x40],r8b
0x36e1: mov byte ptr [rsp+0x38],r10b
0x36e6: mov qword ptr [rsp+0x30],r9
0x36eb: call 0x1540
0x36f0: movzx r8d,byte ptr [rsp+0x40]
0x36f6: movzx r10d,byte ptr [rsp+0x38]
0x36fc: mov r11,rax
0x36ff: mov r9,qword ptr [rsp+0x30]
0x3704: lea rax,[rsp+0x9c]
0x370c: xor ecx,ecx
0x370e: mov byte ptr [rsp+0x7e],bl
0x3712: mov byte ptr [rsp+0x7d],r8b
0x3717: mov rbx,rcx
0x371a: mov qword ptr [rsp+0x88],r9
0x3722: mov qword ptr [rsp+0x38],rax
0x3727: mov byte ptr [rsp+0x7f],r10b
0x372c: mov qword ptr [rsp+0x80],r15
0x3734: mov qword ptr [rsp+0x40],r14
0x3739: mov qword ptr [rsp+0x70],r13
0x373e: mov qword ptr [rsp+0x30],r11
0x3743: mov rax,qword ptr [rsp+0x10]
0x3748: lea r14,[rbp+rbx]
0x374d: mov rdx,qword ptr [rsp+0x30]
0x3752: mov rcx,qword ptr [rsp+0x28]
0x3757: mov rdi,qword ptr [rsp+0x38]
0x375c: lea r13,[rax+r14]
0x3760: sub rdx,r14
0x3763: mov rsi,r13
0x3766: call 0x53a0
0x376b: test rax,rax
0x376e: mov r15,rax
0x3771: je 0x37c1
0x3773: cmp rax,-0x1
0x3777: je 0x3d95
0x377d: cmp rax,-0x2
0x3781: je 0x3d21
0x3787: cmp dword ptr [rsp+0x8],0x2
0x378c: sete al
0x378f: and al,byte ptr [rsp+0xf]
0x3793: jne 0x3930
0x3799: mov edi,dword ptr [rsp+0x9c]
0x37a0: call 0x1750
0x37a5: mov rdi,qword ptr [rsp+0x28]
0x37aa: test eax,eax
0x37ac: mov eax,0x0
0x37b1: cmove r12d,eax
0x37b5: add rbx,r15
0x37b8: call 0x1740
0x37bd: test eax,eax
0x37bf: je 0x3743
0x37c1: mov edx,r12d
0x37c4: mov rdi,rbx
0x37c7: movzx r8d,byte ptr [rsp+0x7d]
0x37cd: xor edx,0x1
0x37d0: movzx ebx,byte ptr [rsp+0x7e]
0x37d5: movzx r10d,byte ptr [rsp+0x7f]
0x37db: and dl,byte ptr [rsp+0xd]
0x37df: mov r15,qword ptr [rsp+0x80]
0x37e7: mov r14,qword ptr [rsp+0x40]
0x37ec: mov r13,qword ptr [rsp+0x70]
0x37f1: mov r11,qword ptr [rsp+0x30]
0x37f6: cmp rdi,0x1
0x37fa: jbe 0x3dfb
0x3800: mov rcx,rdi
0x3803: xor esi,esi
0x3805: movzx r9d,byte ptr [rsp+0xf]
0x380b: add rcx,rbp
0x380e: mov rdi,qword ptr [rsp+0x10]
0x3813: jmp 0x38ce
0x3820: cmp dword ptr [rsp+0x8],0x2
0x3825: sete al
0x3828: test r9b,r9b
0x382b: jne 0x3ce0
0x3831: mov esi,r8d
0x3834: xor esi,0x1
0x3837: and al,sil
0x383a: je 0x386b
0x383c: cmp r13,r15
0x383f: jbe 0x3846
0x3841: mov byte ptr [r14+r15],0x27
0x3846: lea rsi,[r15+0x1]
0x384a: cmp r13,rsi
0x384d: jbe 0x3855
0x384f: mov byte ptr [r14+r15+0x1],0x24
0x3855: lea rsi,[r15+0x2]
0x3859: cmp r13,rsi
0x385c: jbe 0x3864
0x385e: mov byte ptr [r14+r15+0x2],0x27
0x3864: add r15,0x3
0x3868: mov r8d,eax
0x386b: cmp r13,r15
0x386e: jbe 0x3875
0x3870: mov byte ptr [r14+r15],0x5c
0x3875: lea rax,[r15+0x1]
0x3879: cmp r13,rax
0x387c: jbe 0x388b
0x387e: mov eax,ebx
0x3880: shr al,0x6
0x3883: add eax,0x30
0x3886: mov byte ptr [r14+r15+0x1],al
0x388b: lea rax,[r15+0x2]
0x388f: cmp r13,rax
0x3892: jbe 0x38a4
0x3894: mov eax,ebx
0x3896: shr al,0x3
0x3899: and eax,0x7
0x389c: add eax,0x30
0x389f: mov byte ptr [r14+r15+0x2],al
0x38a4: and ebx,0x7
0x38a7: add rbp,0x1
0x38ab: add r15,0x3
0x38af: add ebx,0x30
0x38b2: cmp rbp,rcx
0x38b5: jae 0x30a0
0x38bb: mov esi,edx
0x38bd: cmp r13,r15
0x38c0: jbe 0x38c6
0x38c2: mov byte ptr [r14+r15],bl
0x38c6: movzx ebx,byte ptr [rdi+rbp]
0x38ca: add r15,0x1
0x38ce: test dl,dl
0x38d0: jne 0x3820
0x38d6: mov eax,esi
0x38d8: xor eax,0x1
0x38db: and eax,r8d
0x38de: test r10b,r10b
0x38e1: je 0x38f1
0x38e3: cmp r13,r15
0x38e6: jbe 0x38ed
0x38e8: mov byte ptr [r14+r15],0x5c
0x38ed: add r15,0x1
0x38f1: add rbp,0x1
0x38f5: cmp rbp,rcx
0x38f8: jae 0x307c
0x38fe: test al,al
0x3900: je 0x3cfe
0x3906: cmp r13,r15
0x3909: jbe 0x3910
0x390b: mov byte ptr [r14+r15],0x27
0x3910: lea rax,[r15+0x1]
0x3914: cmp r13,rax
0x3917: jbe 0x391f
0x3919: mov byte ptr [r14+r15+0x1],0x27
0x391f: add r15,0x2
0x3923: xor r10d,r10d
0x3926: xor r8d,r8d
0x3929: jmp 0x38bd
0x3930: cmp r15,0x1
0x3934: je 0x3799
0x393a: mov rdi,qword ptr [rsp+0x10]
0x393f: lea rcx,[rdi+r15]
0x3943: lea rdx,[rdi+r14+0x1]
0x3948: lea r8,[rcx+r14]
0x394c: jmp 0x395d
0x3950: add rdx,0x1
0x3954: cmp r8,rdx
0x3957: je 0x3799
0x395d: movzx ecx,byte ptr [rdx]
0x3960: sub ecx,0x5b
0x3963: cmp cl,0x21
0x3966: ja 0x3950
0x3968: mov esi,0x1
0x396d: shl rsi,cl
0x3970: mov rcx,rsi
0x3973: movabsq rsi,0x20000002b
0x397d: test rcx,rsi
0x3980: je 0x3950
0x3982: mov r14,qword ptr [rsp+0x40]
0x3987: mov r13,qword ptr [rsp+0x70]
0x398c: mov rbp,qword ptr [rsp+0x30]
0x3991: mov dword ptr [rsp+0x8],0x2
0x3999: cmp byte ptr [rsp+0xd],0x0
0x399e: je 0x39b0
0x39a0: test al,al
0x39a2: mov eax,0x4
0x39a7: cmove eax,dword ptr [rsp+0x8]
0x39ac: mov dword ptr [rsp+0x8],eax
0x39b0: sub rsp,0x8
0x39b4: mov rcx,rbp
0x39b7: mov rsi,r13
0x39ba: push qword ptr [rsp+0x68]
0x39be: push qword ptr [rsp+0x78]
0x39c2: mov rdi,r14
0x39c5: push 0x0
0x39c7: mov r9d,dword ptr [rsp+0x98]
0x39cf: mov r8d,dword ptr [rsp+0x28]
0x39d4: mov rdx,qword ptr [rsp+0x30]
0x39d9: and r9d,-0x3
0x39dd: call 0x2e10
0x39e2: add rsp,0x20
0x39e6: mov r15,rax
0x39e9: mov rbx,qword ptr [rsp+0xa8]
0x39f1: xor rbx,qword ptr fs:0x28
0x39fa: mov rax,r15
0x39fd: jne 0x4003
0x3a03: add rsp,0xb8
0x3a0a: pop rbx
0x3a0b: pop rbp
0x3a0c: pop r12
0x3a0e: pop r13
0x3a10: pop r14
0x3a12: pop r15
0x3a14: ret 
0x3a18: mov rbp,r11
0x3a1b: jmp 0x3999
0x3a81: test r13,r13
0x3a84: jne 0x401a
0x3a8a: lea rax,[rip+0x238c]
0x3a91: mov qword ptr [rsp+0x50],0x0
0x3a9a: mov byte ptr [rsp+0xe],0x1
0x3a9f: mov byte ptr [rsp+0x7c],0x0
0x3aa4: xor r12d,r12d
0x3aa7: mov byte ptr [rsp+0xf],0x0
0x3aac: mov qword ptr [rsp+0x18],0x1
0x3ab5: mov qword ptr [rsp+0x48],rax
0x3aba: mov r15d,0x1
0x3ac0: mov dword ptr [rsp+0x8],0x2
0x3ac8: jmp 0x2ee3
0x3ce0: movzx ebx,byte ptr [rsp+0xf]
0x3ce5: mov rbp,r11
0x3ce8: mov byte ptr [rsp+0xd],bl
0x3cec: jmp 0x3999
0x3cf1: movzx edx,byte ptr [rsp+0xd]
0x3cf6: xor r12d,r12d
0x3cf9: jmp 0x3800
0x3cfe: xor r10d,r10d
0x3d01: jmp 0x38bd
0x3d21: mov r11,qword ptr [rsp+0x30]
0x3d26: mov rsi,r14
0x3d29: mov rcx,r13
0x3d2c: mov rax,rbx
0x3d2f: mov rdi,rbx
0x3d32: movzx r8d,byte ptr [rsp+0x7d]
0x3d38: movzx ebx,byte ptr [rsp+0x7e]
0x3d3d: mov r9,qword ptr [rsp+0x88]
0x3d45: cmp rsi,r11
0x3d48: movzx r10d,byte ptr [rsp+0x7f]
0x3d4e: mov r15,qword ptr [rsp+0x80]
0x3d56: mov r14,qword ptr [rsp+0x40]
0x3d5b: mov r13,qword ptr [rsp+0x70]
0x3d60: jae 0x3d88
0x3d62: cmp byte ptr [rcx],0x0
0x3d65: jne 0x3d77
0x3d67: jmp 0x3d88
0x3d70: cmp byte ptr [r9+rax],0x0
0x3d75: je 0x3d85
0x3d77: add rax,0x1
0x3d7b: lea rdx,[rbp+rax]
0x3d80: cmp r11,rdx
0x3d83: ja 0x3d70
0x3d85: mov rdi,rax
0x3d88: movzx edx,byte ptr [rsp+0xd]
0x3d8d: xor r12d,r12d
0x3d90: jmp 0x37f6
0x3d95: mov rdi,rbx
0x3d98: movzx r8d,byte ptr [rsp+0x7d]
0x3d9e: movzx ebx,byte ptr [rsp+0x7e]
0x3da3: movzx r10d,byte ptr [rsp+0x7f]
0x3da9: mov r15,qword ptr [rsp+0x80]
0x3db1: xor r12d,r12d
0x3db4: mov r14,qword ptr [rsp+0x40]
0x3db9: mov r13,qword ptr [rsp+0x70]
0x3dbe: mov r11,qword ptr [rsp+0x30]
0x3dc3: movzx edx,byte ptr [rsp+0xd]
0x3dc8: jmp 0x37f6
0x3dfb: mov eax,edx
0x3dfd: jmp 0x3357
0x3f0a: mov eax,edx
0x3f0c: mov rbx,qword ptr [rsp+0x48]
0x3f11: test rbx,rbx
0x3f14: je 0x3f42
0x3f16: test al,al
0x3f18: je 0x3f42
0x3f1a: movzx ecx,byte ptr [rbx]
0x3f1d: mov rax,rbx
0x3f20: test cl,cl
0x3f22: je 0x3f42
0x3f24: mov rdx,r15
0x3f27: sub rax,r15
0x3f2a: cmp r13,rdx
0x3f2d: jbe 0x3f33
0x3f2f: mov byte ptr [r14+rdx],cl
0x3f33: add rdx,0x1
0x3f37: movzx ecx,byte ptr [rax+rdx]
0x3f3b: test cl,cl
0x3f3d: jne 0x3f2a
0x3f3f: mov r15,rdx
0x3f42: cmp r13,r15
0x3f45: jbe 0x39e9
0x3f4b: mov byte ptr [r14+r15],0x0
0x3f50: jmp 0x39e9
0x3f55: cmp dword ptr [rsp+0x8],0x2
0x3f5a: movzx ebx,byte ptr [rsp+0xf]
0x3f5f: mov rbp,r11
0x3f62: sete al
0x3f65: mov byte ptr [rsp+0xd],bl
0x3f69: jmp 0x3999
0x3fad: sub rsp,0x8
0x3fb1: mov r8d,0x5
0x3fb7: mov rcx,r11
0x3fba: push qword ptr [rsp+0x68]
0x3fbe: push qword ptr [rsp+0x78]
0x3fc2: mov rdi,r14
0x3fc5: push qword ptr [rsp+0x38]
0x3fc9: mov r9d,dword ptr [rsp+0x98]
0x3fd1: mov rdx,qword ptr [rsp+0x30]
0x3fd6: mov rsi,qword ptr [rsp+0x70]
0x3fdb: call 0x2e10
0x3fe0: add rsp,0x20
0x3fe4: mov r15,rax
0x3fe7: jmp 0x39e9
0x3fec: movzx eax,byte ptr [rsp+0x7c]
0x3ff1: jmp 0x3f0c
0x3ff6: mov dword ptr [rsp+0x8],0x2
0x3ffe: jmp 0x3999
0x4003: call 0x1550
0x4008: mov byte ptr [rsp+0xd],0x0
0x400d: jmp 0x3a81
0x401a: mov byte ptr [rsp+0xe],0x1
0x401f: xor eax,eax
0x4021: xor r12d,r12d
0x4024: mov qword ptr [rsp+0x50],0x0
0x402d: jmp 0x35d4
0x4044: nop 
0x4046: nop word ptr cs:[rax+rax]
0x413c: add rsp,0x20
0x4140: mov r11,qword ptr [rsp+0x10]
0x4145: cmp r11,rax
0x4148: ja 0x41b1
0x414a: lea rsi,[rax+0x1]
0x414e: lea rax,[rip+0x20400b]
0x4155: cmp r12,rax
0x4158: mov qword ptr [rbx],rsi
0x415b: je 0x416f
0x415d: mov rdi,r12
0x4160: mov qword ptr [rsp+0x10],rsi
0x4165: call 0x1480
0x416a: mov rsi,qword ptr [rsp+0x10]
0x416f: mov rdi,rsi
0x4172: mov qword ptr [rsp+0x10],rsi
0x4177: call 0x4fd0
0x417c: sub rsp,0x8
0x4180: mov qword ptr [rbx+0x8],rax
0x4184: mov r8d,dword ptr [rbp]
0x4188: push qword ptr [rbp+0x30]
0x418b: push qword ptr [rbp+0x28]
0x418e: mov rcx,r14
0x4191: push r15
0x4193: mov r9d,dword ptr [rsp+0x3c]
0x4198: mov rdi,rax
0x419b: mov rdx,qword ptr [rsp+0x28]
0x41a0: mov rsi,qword ptr [rsp+0x30]
0x41a5: mov r12,rax
0x41a8: call 0x2e10
0x41ad: add rsp,0x20
0x41b1: mov eax,dword ptr [rsp+0x18]
0x41b5: mov dword ptr [r13],eax
0x41b9: add rsp,0x28
0x41bd: mov rax,r12
0x41c0: pop rbx
0x41c1: pop rbp
0x41c2: pop r12
0x41c4: pop r13
0x41c6: pop r14
0x41c8: pop r15
0x41ca: ret 
0x41f1: call 0x1490
0x41f6: call 0x5220
0x41fb: nop dword ptr [rax+rax]
0x4200: push r12
0x4202: push rbp
0x4203: push rbx
0x4204: mov rbx,rdi
0x4207: call 0x14a0
0x420c: mov r12d,dword ptr [rax]
0x420f: mov rbp,rax
0x4212: lea rax,[rip+0x204047]
0x4219: test rbx,rbx
0x421c: mov esi,0x38
0x4221: cmove rbx,rax
0x4225: mov rdi,rbx
0x4228: call 0x51d0
0x422d: mov dword ptr [rbp],r12d
0x4231: pop rbx
0x4232: pop rbp
0x4233: pop r12
0x4235: ret 
0x4240: lea rax,[rip+0x204019]
0x4247: test rdi,rdi
0x424a: cmove rdi,rax
0x424e: mov eax,dword ptr [rdi]
0x4250: ret 
0x4260: lea rax,[rip+0x203ff9]
0x4267: test rdi,rdi
0x426a: cmove rdi,rax
0x426e: mov dword ptr [rdi],esi
0x4270: ret 
0x4280: lea rax,[rip+0x203fd9]
0x4287: test rdi,rdi
0x428a: mov ecx,esi
0x428c: cmove rdi,rax
0x4290: mov eax,esi
0x4292: and ecx,0x1f
0x4295: shr al,0x5
0x4298: movzx eax,al
0x429b: lea rdi,[rdi+rax*4+0x8]
0x42a0: mov esi,dword ptr [rdi]
0x42a2: mov eax,esi
0x42a4: shr eax,cl
0x42a6: xor edx,eax
0x42a8: and eax,0x1
0x42ab: and edx,0x1
0x42ae: shl edx,cl
0x42b0: xor edx,esi
0x42b2: mov dword ptr [rdi],edx
0x42b4: ret 
0x42c0: lea rax,[rip+0x203f99]
0x42c7: test rdi,rdi
0x42ca: cmove rdi,rax
0x42ce: mov eax,dword ptr [rdi+0x4]
0x42d1: mov dword ptr [rdi+0x4],esi
0x42d4: ret 
0x42e0: lea rax,[rip+0x203f79]
0x42e7: test rdi,rdi
0x42ea: cmove rdi,rax
0x42ee: test rsi,rsi
0x42f1: mov dword ptr [rdi],0xa
0x42f7: je 0x4307
0x42f9: test rdx,rdx
0x42fc: je 0x4307
0x42fe: mov qword ptr [rdi+0x28],rsi
0x4302: mov qword ptr [rdi+0x30],rdx
0x4306: ret 
0x4307: sub rsp,0x8
0x430b: call 0x1490
0x4310: push r15
0x4312: push r14
0x4314: lea rax,[rip+0x203f45]
0x431b: push r13
0x431d: push r12
0x431f: mov r13,rdi
0x4322: push rbp
0x4323: push rbx
0x4324: mov rbx,r8
0x4327: mov r14,rsi
0x432a: mov r15,rdx
0x432d: sub rsp,0x18
0x4331: test r8,r8
0x4334: cmove rbx,rax
0x4338: mov qword ptr [rsp+0x8],rcx
0x433d: call 0x14a0
0x4342: mov r12d,dword ptr [rax]
0x4345: mov rbp,rax
0x4348: lea rax,[rbx+0x8]
0x434c: sub rsp,0x8
0x4350: mov r9d,dword ptr [rbx+0x4]
0x4354: push qword ptr [rbx+0x30]
0x4357: mov r8d,dword ptr [rbx]
0x435a: push qword ptr [rbx+0x28]
0x435d: mov rdx,r15
0x4360: push rax
0x4361: mov rcx,qword ptr [rsp+0x28]
0x4366: mov rsi,r14
0x4369: mov rdi,r13
0x436c: call 0x2e10
0x4371: mov dword ptr [rbp],r12d
0x4375: add rsp,0x38
0x4379: pop rbx
0x437a: pop rbp
0x437b: pop r12
0x437d: pop r13
0x437f: pop r14
0x4381: pop r15
0x4383: ret 
0x4390: push r15
0x4392: push r14
0x4394: lea rax,[rip+0x203ec5]
0x439b: push r13
0x439d: push r12
0x439f: mov r12,rdx
0x43a2: push rbp
0x43a3: push rbx
0x43a4: mov rbx,rcx
0x43a7: mov r14,rdi
0x43aa: mov r15,rsi
0x43ad: sub rsp,0x38
0x43b1: test rcx,rcx
0x43b4: cmove rbx,rax
0x43b8: xor ebp,ebp
0x43ba: call 0x14a0
0x43bf: test r12,r12
0x43c2: mov r13,rax
0x43c5: mov eax,dword ptr [rax]
0x43c7: sete bpl
0x43cb: or ebp,dword ptr [rbx+0x4]
0x43ce: lea r10,[rbx+0x8]
0x43d2: sub rsp,0x8
0x43d6: mov r8d,dword ptr [rbx]
0x43d9: mov rcx,r15
0x43dc: mov dword ptr [rsp+0x14],eax
0x43e0: push qword ptr [rbx+0x30]
0x43e3: mov rdx,r14
0x43e6: push qword ptr [rbx+0x28]
0x43e9: push r10
0x43eb: xor esi,esi
0x43ed: mov r9d,ebp
0x43f0: xor edi,edi
0x43f2: mov qword ptr [rsp+0x40],r10
0x43f7: call 0x2e10
0x43fc: lea rsi,[rax+0x1]
0x4400: mov qword ptr [rsp+0x48],rax
0x4405: add rsp,0x20
0x4409: mov rdi,rsi
0x440c: mov qword ptr [rsp+0x18],rsi
0x4411: call 0x4fd0
0x4416: mov qword ptr [rsp+0x10],rax
0x441b: sub rsp,0x8
0x441f: push qword ptr [rbx+0x30]
0x4422: push qword ptr [rbx+0x28]
0x4425: mov r10,qword ptr [rsp+0x38]
0x442a: mov r9d,ebp
0x442d: mov r8d,dword ptr [rbx]
0x4430: mov rcx,r15
0x4433: mov rdx,r14
0x4436: mov rdi,rax
0x4439: push r10
0x443b: mov rsi,qword ptr [rsp+0x38]
0x4440: call 0x2e10
0x4445: mov eax,dword ptr [rsp+0x2c]
0x4449: add rsp,0x20
0x444d: test r12,r12
0x4450: mov dword ptr [r13],eax
0x4454: je 0x445f
0x4456: mov r11,qword ptr [rsp+0x28]
0x445b: mov qword ptr [r12],r11
0x445f: mov rax,qword ptr [rsp+0x10]
0x4464: add rsp,0x38
0x4468: pop rbx
0x4469: pop rbp
0x446a: pop r12
0x446c: pop r13
0x446e: pop r14
0x4470: pop r15
0x4472: ret 
0x4480: mov rcx,rdx
0x4483: xor edx,edx
0x4485: jmp 0x4390
0x4490: mov eax,dword ptr [rip+0x203be2]
0x4496: push r12
0x4498: mov r12,qword ptr [rip+0x203be1]
0x449f: push rbp
0x44a0: push rbx
0x44a1: cmp eax,0x1
0x44a4: jle 0x44d1
0x44a6: sub eax,0x2
0x44a9: lea rbx,[r12+0x18]
0x44ae: shl rax,0x4
0x44b2: lea rbp,[r12+rax+0x28]
0x44b7: nop word ptr [rax+rax]
0x44c0: mov rdi,qword ptr [rbx]
0x44c3: add rbx,0x10
0x44c7: call 0x1480
0x44cc: cmp rbx,rbp
0x44cf: jne 0x44c0
0x44d1: mov rdi,qword ptr [r12+0x8]
0x44d6: lea rbx,[rip+0x203c83]
0x44dd: cmp rdi,rbx
0x44e0: je 0x44f9
0x44e2: call 0x1480
0x44e7: mov qword ptr [rip+0x203b9e],0x100
0x44f2: mov qword ptr [rip+0x203b9f],rbx
0x44f9: lea rbx,[rip+0x203b90]
0x4500: cmp r12,rbx
0x4503: je 0x4514
0x4505: mov rdi,r12
0x4508: call 0x1480
0x450d: mov qword ptr [rip+0x203b6c],rbx
0x4514: pop rbx
0x4515: mov dword ptr [rip+0x203b59],0x1
0x451f: pop rbp
0x4520: pop r12
0x4522: ret 
0x4530: lea rcx,[rip+0x203d29]
0x4537: mov rdx,-0x1
0x453e: jmp 0x4050
0x4550: lea rcx,[rip+0x203d09]
0x4557: jmp 0x4050
0x4560: lea rcx,[rip+0x203cf9]
0x4567: mov rsi,rdi
0x456a: mov rdx,-0x1
0x4571: xor edi,edi
0x4573: jmp 0x4050
0x4580: lea rcx,[rip+0x203cd9]
0x4587: mov rdx,rsi
0x458a: mov rsi,rdi
0x458d: xor edi,edi
0x458f: jmp 0x4050
0x45a0: sub rsp,0x48
0x45a4: mov rax,rdx
0x45a7: mov rdx,qword ptr fs:0x28
0x45b0: mov qword ptr [rsp+0x38],rdx
0x45b5: xor edx,edx
0x45b7: cmp esi,0xa
0x45ba: je 0x4624
0x45bc: mov dword ptr [rsp],esi
0x45bf: mov rcx,rsp
0x45c2: mov rdx,-0x1
0x45c9: mov rsi,rax
0x45cc: mov qword ptr [rsp+0x4],0x0
0x45d5: mov qword ptr [rsp+0xc],0x0
0x45de: mov qword ptr [rsp+0x14],0x0
0x45e7: mov qword ptr [rsp+0x1c],0x0
0x45f0: mov qword ptr [rsp+0x24],0x0
0x45f9: mov qword ptr [rsp+0x2c],0x0
0x4602: mov dword ptr [rsp+0x34],0x0
0x460a: call 0x4050
0x460f: mov rcx,qword ptr [rsp+0x38]
0x4614: xor rcx,qword ptr fs:0x28
0x461d: jne 0x4629
0x461f: add rsp,0x48
0x4623: ret 
0x4624: call 0x1490
0x4629: call 0x1550
0x462e: nop 
0x4630: sub rsp,0x48
0x4634: mov rax,rdx
0x4637: mov rdx,rcx
0x463a: mov rcx,qword ptr fs:0x28
0x4643: mov qword ptr [rsp+0x38],rcx
0x4648: xor ecx,ecx
0x464a: cmp esi,0xa
0x464d: je 0x46b0
0x464f: mov dword ptr [rsp],esi
0x4652: mov rcx,rsp
0x4655: mov rsi,rax
0x4658: mov qword ptr [rsp+0x4],0x0
0x4661: mov qword ptr [rsp+0xc],0x0
0x466a: mov qword ptr [rsp+0x14],0x0
0x4673: mov qword ptr [rsp+0x1c],0x0
0x467c: mov qword ptr [rsp+0x24],0x0
0x4685: mov qword ptr [rsp+0x2c],0x0
0x468e: mov dword ptr [rsp+0x34],0x0
0x4696: call 0x4050
0x469b: mov rdx,qword ptr [rsp+0x38]
0x46a0: xor rdx,qword ptr fs:0x28
0x46a9: jne 0x46b5
0x46ab: add rsp,0x48
0x46af: ret 
0x46b0: call 0x1490
0x46b5: call 0x1550
0x46ba: nop word ptr [rax+rax]
0x46c0: mov rdx,rsi
0x46c3: mov esi,edi
0x46c5: xor edi,edi
0x46c7: jmp 0x45a0
0x46d0: mov rcx,rdx
0x46d3: mov rdx,rsi
0x46d6: mov esi,edi
0x46d8: xor edi,edi
0x46da: jmp 0x4630
0x46e0: sub rsp,0x48
0x46e4: mov ecx,edx
0x46e6: mov rax,qword ptr fs:0x28
0x46ef: mov qword ptr [rsp+0x38],rax
0x46f4: xor eax,eax
0x46f6: mov rax,qword ptr [rip+0x203b93]
0x46fd: mov r8,rsp
0x4700: and ecx,0x1f
0x4703: movdqa xmm0,[rip+0x203b55]
0x470b: mov qword ptr [rsp+0x30],rax
0x4710: mov eax,edx
0x4712: movaps [rsp],xmm0
0x4716: shr al,0x5
0x4719: movzx eax,al
0x471c: lea r9,[r8+rax*4+0x8]
0x4721: movdqa xmm0,[rip+0x203b47]
0x4729: movaps [rsp+0x10],xmm0
0x472e: movdqa xmm0,[rip+0x203b4a]
0x4736: movaps [rsp+0x20],xmm0
0x473b: mov edx,dword ptr [r9]
0x473e: mov eax,edx
0x4740: shr eax,cl
0x4742: not eax
0x4744: and eax,0x1
0x4747: shl eax,cl
0x4749: mov rcx,r8
0x474c: xor eax,edx
0x474e: mov rdx,rsi
0x4751: mov rsi,rdi
0x4754: mov dword ptr [r9],eax
0x4757: xor edi,edi
0x4759: call 0x4050
0x475e: mov rsi,qword ptr [rsp+0x38]
0x4763: xor rsi,qword ptr fs:0x28
0x476c: jne 0x4773
0x476e: add rsp,0x48
0x4772: ret 
0x4773: call 0x1550
0x4778: nop dword ptr [rax+rax]
0x4780: movsx edx,sil
0x4784: mov rsi,-0x1
0x478b: jmp 0x46e0
0x4790: mov edx,0x3a
0x4795: mov rsi,-0x1
0x479c: jmp 0x46e0
0x47b0: mov edx,0x3a
0x47b5: jmp 0x46e0
0x482f: mov rcx,qword ptr [rsp+0x38]
0x4834: xor rcx,qword ptr fs:0x28
0x483d: jne 0x4849
0x483f: add rsp,0x48
0x4843: ret 
0x4844: call 0x1490
0x4849: call 0x1550
0x484e: nop 
0x4850: sub rsp,0x48
0x4854: mov r9,rcx
0x4857: mov rcx,qword ptr [rip+0x203a32]
0x485e: movdqa xmm0,[rip+0x2039fa]
0x4866: mov rax,qword ptr fs:0x28
0x486f: mov qword ptr [rsp+0x38],rax
0x4874: xor eax,eax
0x4876: movaps [rsp],xmm0
0x487a: test rsi,rsi
0x487d: mov qword ptr [rsp+0x30],rcx
0x4882: mov dword ptr [rsp],0xa
0x4889: movdqa xmm0,[rip+0x2039df]
0x4891: movaps [rsp+0x10],xmm0
0x4896: movdqa xmm0,[rip+0x2039e2]
0x489e: movaps [rsp+0x20],xmm0
0x48a3: je 0x48d7
0x48a5: test rdx,rdx
0x48a8: je 0x48d7
0x48aa: mov qword ptr [rsp+0x28],rsi
0x48af: mov qword ptr [rsp+0x30],rdx
0x48b4: mov rcx,rsp
0x48b7: mov rdx,r8
0x48ba: mov rsi,r9
0x48bd: call 0x4050
0x48c2: mov rdi,qword ptr [rsp+0x38]
0x48c7: xor rdi,qword ptr fs:0x28
0x48d0: jne 0x48dc
0x48d2: add rsp,0x48
0x48d6: ret 
0x48d7: call 0x1490
0x48dc: call 0x1550
0x48e1: nop dword ptr [rax+rax]
0x48e6: nop word ptr cs:[rax+rax]
0x48f0: mov r8,-0x1
0x48f7: jmp 0x4850
0x4900: mov rcx,rdx
0x4903: mov r8,-0x1
0x490a: mov rdx,rsi
0x490d: mov rsi,rdi
0x4910: xor edi,edi
0x4912: jmp 0x4850
0x4920: mov r8,rcx
0x4923: mov rcx,rdx
0x4926: mov rdx,rsi
0x4929: mov rsi,rdi
0x492c: xor edi,edi
0x492e: jmp 0x4850
0x4940: lea rcx,[rip+0x2036f9]
0x4947: jmp 0x4050
0x4950: lea rcx,[rip+0x2036e9]
0x4957: mov rdx,rsi
0x495a: mov rsi,rdi
0x495d: xor edi,edi
0x495f: jmp 0x4050
0x4970: lea rcx,[rip+0x2036c9]
0x4977: mov rdx,-0x1
0x497e: jmp 0x4050
0x4ae8: mov r8,rcx
0x4aeb: mov rcx,rdx
0x4aee: lea rdx,[rip+0x17ff]
0x4af5: mov esi,0x1
0x4afa: xor eax,eax
0x4afc: call 0x1730
0x4b01: jmp 0x49ec
0x4cfd: push r12
0x4cff: push r15
0x4d01: push r14
0x4d03: mov r8,qword ptr [rsp+0x20]
0x4d08: mov rcx,rbx
0x4d0b: mov rdx,rax
0x4d0e: mov rdi,rbp
0x4d11: mov esi,0x1
0x4d16: xor eax,eax
0x4d18: call 0x1730
0x4d1d: add rsp,0x20
0x4d21: add rsp,0x28
0x4d25: pop rbx
0x4d26: pop rbp
0x4d27: pop r12
0x4d29: pop r13
0x4d2b: pop r14
0x4d2d: pop r15
0x4d2f: ret 
0x4d69: push r12
0x4d6b: push r15
0x4d6d: push r14
0x4d6f: mov r9,qword ptr [rsp+0x28]
0x4d74: jmp 0x4d03
0x4dd0: xor r9d,r9d
0x4dd3: cmp qword ptr [r8],0x0
0x4dd7: je 0x4deb
0x4dd9: nop dword ptr [rax]
0x4de0: add r9,0x1
0x4de4: cmp qword ptr [r8+r9*8],0x0
0x4de9: jne 0x4de0
0x4deb: jmp 0x49b0
0x4df0: sub rsp,0x68
0x4df4: mov r10,r8
0x4df7: xor r9d,r9d
0x4dfa: mov rax,qword ptr fs:0x28
0x4e03: mov qword ptr [rsp+0x58],rax
0x4e08: xor eax,eax
0x4e0a: mov r8,rsp
0x4e0d: nop dword ptr [rax]
0x4e10: mov eax,dword ptr [r10]
0x4e13: cmp eax,0x2f
0x4e16: ja 0x4e5a
0x4e18: mov r11d,eax
0x4e1b: add r11,qword ptr [r10+0x10]
0x4e1f: add eax,0x8
0x4e22: mov dword ptr [r10],eax
0x4e25: mov rax,qword ptr [r11]
0x4e28: test rax,rax
0x4e2b: mov qword ptr [r8+r9*8],rax
0x4e2f: je 0x4e3b
0x4e31: add r9,0x1
0x4e35: cmp r9,0xa
0x4e39: jne 0x4e10
0x4e3b: call 0x49b0
0x4e40: mov rax,qword ptr [rsp+0x58]
0x4e45: xor rax,qword ptr fs:0x28
0x4e4e: jne 0x4e55
0x4e50: add rsp,0x68
0x4e54: ret 
0x4e55: call 0x1550
0x4e5a: mov r11,qword ptr [r10+0x8]
0x4e5e: lea rax,[r11+0x8]
0x4e62: mov qword ptr [r10+0x8],rax
0x4e66: jmp 0x4e25
0x4f30: call 0x1550
0x4f3c: mov rax,rbx
0x4f3f: add rbx,0x8
0x4f43: jmp 0x4ef6
0x4f50: push rbx
0x4f51: lea rsi,[rip+0x13ea]
0x4f58: mov edx,0x5
0x4f5d: xor edi,edi
0x4f5f: call 0x1520
0x4f64: lea rdx,[rip+0x13ec]
0x4f6b: mov rsi,rax
0x4f6e: mov edi,0x1
0x4f73: xor eax,eax
0x4f75: call 0x16c0
0x4f7a: lea rsi,[rip+0x13ec]
0x4f81: mov edx,0x5
0x4f86: xor edi,edi
0x4f88: call 0x1520
0x4f8d: lea rcx,[rip+0xa1c]
0x4f94: lea rdx,[rip+0x6e8]
0x4f9b: mov rsi,rax
0x4f9e: mov edi,0x1
0x4fa3: xor eax,eax
0x4fa5: call 0x16c0
0x4faa: mov rbx,qword ptr [rip+0x2030f7]
0x4fb1: lea rsi,[rip+0x15e8]
0x4fb8: xor edi,edi
0x4fba: mov edx,0x5
0x4fbf: call 0x1520
0x4fc4: mov rsi,rbx
0x4fc7: mov rdi,rax
0x4fca: pop rbx
0x4fcb: jmp 0x1610
0x4fea: nop word ptr [rax+rax]
0x4ff0: mov rax,rdi
0x4ff3: mul rsi
0x4ff6: mov rdi,rax
0x4ff9: seto al
0x4ffc: test rdi,rdi
0x4fff: js 0x500b
0x5001: movzx eax,al
0x5004: test rax,rax
0x5007: jne 0x500b
0x5009: jmp 0x4fd0
0x500b: sub rsp,0x8
0x500f: call 0x5220
0x5014: nop 
0x5016: nop word ptr cs:[rax+rax]
0x5020: jmp 0x4fd0
0x5066: nop word ptr cs:[rax+rax]
0x5070: mov rax,rsi
0x5073: mul rdx
0x5076: mov rsi,rax
0x5079: seto al
0x507c: test rsi,rsi
0x507f: js 0x508b
0x5081: movzx eax,al
0x5084: test rax,rax
0x5087: jne 0x508b
0x5089: jmp 0x5030
0x508b: sub rsp,0x8
0x508f: call 0x5220
0x5094: nop 
0x5096: nop word ptr cs:[rax+rax]
0x50a0: test rdi,rdi
0x50a3: mov r9,rdx
0x50a6: mov rcx,qword ptr [rsi]
0x50a9: je 0x50e0
0x50ab: xor edx,edx
0x50ad: movabsq rax,0x5555555555555554
0x50b7: div r9
0x50ba: cmp rax,rcx
0x50bd: jbe 0x50fb
0x50bf: mov rax,rcx
0x50c2: shr rax, 1
0x50c5: lea rcx,[rax+rcx+0x1]
0x50ca: mov qword ptr [rsi],rcx
0x50cd: imul rcx,r9
0x50d1: mov rsi,rcx
0x50d4: jmp 0x5030
0x50e0: test rcx,rcx
0x50e3: je 0x5108
0x50e5: mov rax,rcx
0x50e8: mul r9
0x50eb: seto dl
0x50ee: test rax,rax
0x50f1: movzx edx,dl
0x50f4: js 0x50fb
0x50f6: test rdx,rdx
0x50f9: je 0x50ca
0x50fb: sub rsp,0x8
0x50ff: call 0x5220
0x5104: nop dword ptr [rax]
0x5108: xor edx,edx
0x510a: mov eax,0x80
0x510f: xor r8d,r8d
0x5112: div r9
0x5115: test rax,rax
0x5118: sete r8b
0x511c: lea rcx,[r8+rax]
0x5120: jmp 0x50e5
0x5130: test rdi,rdi
0x5133: mov rax,qword ptr [rsi]
0x5136: je 0x5160
0x5138: movabsq rdx,0x5555555555555553
0x5142: cmp rax,rdx
0x5145: ja 0x5171
0x5147: mov rdx,rax
0x514a: shr rdx, 1
0x514d: lea rax,[rdx+rax+0x1]
0x5152: mov qword ptr [rsi],rax
0x5155: mov rsi,rax
0x5158: jmp 0x5030
0x5160: test rax,rax
0x5163: mov edx,0x80
0x5168: cmove rax,rdx
0x516c: test rax,rax
0x516f: jns 0x5152
0x5171: sub rsp,0x8
0x5175: call 0x5220
0x517a: nop word ptr [rax+rax]
0x5180: push rbx
0x5181: mov rbx,rdi
0x5184: call 0x4fd0
0x5189: mov rdx,rbx
0x518c: xor esi,esi
0x518e: mov rdi,rax
0x5191: pop rbx
0x5192: jmp 0x15c0
0x51a0: mov rax,rdi
0x51a3: sub rsp,0x8
0x51a7: mul rsi
0x51aa: seto dl
0x51ad: test rax,rax
0x51b0: js 0x51c9
0x51b2: movzx edx,dl
0x51b5: test rdx,rdx
0x51b8: jne 0x51c9
0x51ba: call 0x1620
0x51bf: test rax,rax
0x51c2: je 0x51c9
0x51c4: add rsp,0x8
0x51c8: ret 
0x51c9: call 0x5220
0x51ce: nop 
0x51d0: push rbp
0x51d1: push rbx
0x51d2: mov rbp,rdi
0x51d5: mov rdi,rsi
0x51d8: mov rbx,rsi
0x51db: sub rsp,0x8
0x51df: call 0x4fd0
0x51e4: add rsp,0x8
0x51e8: mov rdx,rbx
0x51eb: mov rsi,rbp
0x51ee: pop rbx
0x51ef: pop rbp
0x51f0: mov rdi,rax
0x51f3: jmp 0x1630
0x5200: push rbx
0x5201: mov rbx,rdi
0x5204: call 0x1540
0x5209: mov rdi,rbx
0x520c: lea rsi,[rax+0x1]
0x5210: pop rbx
0x5211: jmp 0x51d0
0x5250: call 0x1490
0x5255: nop word ptr cs:[rax+rax]
0x525f: nop 
0x5278: nop dword ptr [rax+rax]
0x53a0: push r13
0x53a2: push r12
0x53a4: mov r13,rsi
0x53a7: push rbp
0x53a8: push rbx
0x53a9: mov rbx,rdi
0x53ac: mov r12,rdx
0x53af: sub rsp,0x18
0x53b3: mov rax,qword ptr fs:0x28
0x53bc: mov qword ptr [rsp+0x8],rax
0x53c1: xor eax,eax
0x53c3: lea rax,[rsp+0x4]
0x53c8: test rdi,rdi
0x53cb: cmove rbx,rax
0x53cf: mov rdi,rbx
0x53d2: call 0x1570
0x53d7: cmp rax,-0x3
0x53db: mov rbp,rax
0x53de: jbe 0x5400
0x53e0: test r12,r12
0x53e3: je 0x5400
0x53e5: xor edi,edi
0x53e7: call 0x54b0
0x53ec: test al,al
0x53ee: jne 0x5400
0x53f0: movzx eax,byte ptr [r13]
0x53f5: mov ebp,0x1
0x53fa: mov dword ptr [rbx],eax
0x53fc: nop dword ptr [rax]
0x5400: mov rdx,qword ptr [rsp+0x8]
0x5405: xor rdx,qword ptr fs:0x28
0x540e: mov rax,rbp
0x5411: jne 0x541e
0x5413: add rsp,0x18
0x5417: pop rbx
0x5418: pop rbp
0x5419: pop r12
0x541b: pop r13
0x541d: ret 
0x541e: call 0x1550
0x5423: nop word ptr cs:[rax+rax]
0x542d: nop dword ptr [rax]
0x5430: push r12
0x5432: push rbp
0x5433: mov rbp,rdi
0x5436: push rbx
0x5437: call 0x14d0
0x543c: mov ebx,dword ptr [rbp]
0x543f: mov rdi,rbp
0x5442: mov r12,rax
0x5445: call 0x5280
0x544a: and ebx,0x20
0x544d: test ebx,ebx
0x544f: jne 0x5468
0x5451: test eax,eax
0x5453: je 0x545f
0x5455: test r12,r12
0x5458: mov eax,0xffffffff
0x545d: je 0x5498
0x545f: pop rbx
0x5460: pop rbp
0x5461: pop r12
0x5463: ret 
0x5468: test eax,eax
0x546a: jne 0x5488
0x546c: call 0x14a0
0x5471: mov dword ptr [rax],0x0
0x5477: mov eax,0xffffffff
0x547c: pop rbx
0x547d: pop rbp
0x547e: pop r12
0x5480: ret 
0x5488: pop rbx
0x5489: mov eax,0xffffffff
0x548e: pop rbp
0x548f: pop r12
0x5491: ret 
0x5498: call 0x14a0
0x549d: cmp dword ptr [rax],0x9
0x54a0: pop rbx
0x54a1: pop rbp
0x54a2: pop r12
0x54a4: setne al
0x54a7: movzx eax,al
0x54aa: neg eax
0x54ac: ret 
0x54b0: sub rsp,0x8
0x54b4: xor esi,esi
0x54b6: call 0x16b0
0x54bb: mov rdx,rax
0x54be: mov eax,0x1
0x54c3: test rdx,rdx
0x54c6: je 0x54e5
0x54c8: lea rdi,[rip+0x1191]
0x54cf: mov ecx,0x2
0x54d4: mov rsi,rdx
0x54d7: rep cmpsb [rsi],es:[rdi]
0x54d9: seta cl
0x54dc: sbb cl,0x0
0x54df: xor eax,eax
0x54e1: test cl,cl
0x54e3: jne 0x54f0
0x54e5: add rsp,0x8
0x54e9: ret 
0x54f0: lea rdi,[rip+0x116b]
0x54f7: mov ecx,0x6
0x54fc: mov rsi,rdx
0x54ff: rep cmpsb [rsi],es:[rdi]
0x5501: seta al
0x5504: sbb al,0x0
0x5506: test al,al
0x5508: setne al
0x550b: add rsp,0x8
0x550f: ret 
0x5510: sub rsp,0x8
0x5514: mov edi,0xe
0x5519: call 0x1670
0x551e: test rax,rax
0x5521: je 0x5540
0x5523: cmp byte ptr [rax],0x0
0x5526: lea rdx,[rip+0x113b]
0x552d: cmove rax,rdx
0x5531: add rsp,0x8
0x5535: ret 
0x5540: lea rax,[rip+0x1121]
0x5547: add rsp,0x8
0x554b: ret 
0x5550: push r15
0x5552: push r14
0x5554: mov r15,rdx
0x5557: push r13
0x5559: push r12
0x555b: lea r12,[rip+0x2025ae]
0x5562: push rbp
0x5563: lea rbp,[rip+0x2025ae]
0x556a: push rbx
0x556b: mov r13d,edi
0x556e: mov r14,rsi
0x5571: sub rbp,r12
0x5574: sub rsp,0x8
0x5578: sar rbp,0x3
0x557c: call 0x1448
0x5581: test rbp,rbp
0x5584: je 0x55a6
0x5586: xor ebx,ebx
0x5588: nop dword ptr [rax+rax]
0x5590: mov rdx,r15
0x5593: mov rsi,r14
0x5596: mov edi,r13d
0x5599: call qword ptr [r12+rbx*8]
0x559d: add rbx,0x1
0x55a1: cmp rbp,rbx
0x55a4: jne 0x5590
0x55a6: add rsp,0x8
0x55aa: pop rbx
0x55ab: pop rbp
0x55ac: pop r12
0x55ae: pop r13
0x55b0: pop r14
0x55b2: pop r15
0x55b4: ret 
0x55c0: rep ret 
