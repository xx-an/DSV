0x18f8: sub rsp,0x8
0x18fc: mov rax,qword ptr [rip+0x2076e5]
0x1903: test rax,rax
0x1906: je 0x190a
0x1908: call rax
0x190a: add rsp,0x8
0x190e: ret 
0x1916: jmp qword ptr [rip+0x20749c]
0x1930: jmp qword ptr [rip+0x207492]
0x1990: jmp qword ptr [rip+0x207462]
0x19b0: jmp qword ptr [rip+0x207452]
0x1a00: jmp qword ptr [rip+0x20742a]
0x1a70: jmp qword ptr [rip+0x2073f2]
0x1ab0: jmp qword ptr [rip+0x2073d2]
0x1ae0: jmp qword ptr [rip+0x2073ba]
0x1b00: jmp qword ptr [rip+0x2073aa]
0x1b70: jmp qword ptr [rip+0x207372]
0x1b80: jmp qword ptr [rip+0x20736a]
0x1ba0: jmp qword ptr [rip+0x20735a]
0x1bb0: jmp qword ptr [rip+0x207352]
0x1bd0: jmp qword ptr [rip+0x207342]
0x1c30: jmp qword ptr [rip+0x207312]
0x1cc0: jmp qword ptr [rip+0x2072ca]
0x1cf0: jmp qword ptr [rip+0x2072b2]
0x1d00: jmp qword ptr [rip+0x2072aa]
0x1d30: jmp qword ptr [rip+0x207292]
0x1d50: jmp qword ptr [rip+0x2072a2]
0x1e34: nop dword ptr [rax]
0x1e93: nop dword ptr [rax+rax]
0x1ed6: jmp 0x1e2a
0x208b: lea rsi,[rip+0x3f40]
0x2092: mov edx,0x5
0x2097: xor edi,edi
0x2099: mov r12,rax
0x209c: add ebx,0x7e
0x209f: call 0x1a20
0x20a4: mov esi,dword ptr [rbp]
0x20a7: mov rdx,rax
0x20aa: mov rcx,r12
0x20ad: xor edi,edi
0x20af: xor eax,eax
0x20b1: call 0x1c10
0x2256: jmp 0x2177
0x2289: jmp 0x20b6
0x22b7: mov dword ptr [rsp+0x1c],0x7d
0x22bf: jmp 0x21f3
0x22ed: jmp 0x21ec
0x2315: mov dword ptr [rsp+0x1c],0x1
0x231d: jmp 0x21f3
0x234b: jmp 0x21ec
0x2357: call 0x1a50
0x235c: nop dword ptr [rax]
0x238a: hlt 
0x238b: nop dword ptr [rax+rax]
0x2390: lea rdi,[rip+0x206eb1]
0x2397: push rbp
0x2398: lea rax,[rip+0x206ea9]
0x239f: cmp rax,rdi
0x23a2: mov rbp,rsp
0x23a5: je 0x23c0
0x23a7: mov rax,qword ptr [rip+0x206c2a]
0x23ae: test rax,rax
0x23b1: je 0x23c0
0x23b3: pop rbp
0x23b4: jmp rax
0x23c0: pop rbp
0x23c1: ret 
0x23d0: lea rdi,[rip+0x206e71]
0x23d7: lea rsi,[rip+0x206e6a]
0x23de: push rbp
0x23df: sub rsi,rdi
0x23e2: mov rbp,rsp
0x23e5: sar rsi,0x3
0x23e9: mov rax,rsi
0x23ec: shr rax,0x3f
0x23f0: add rsi,rax
0x23f3: sar rsi, 1
0x23f6: je 0x2410
0x23f8: mov rax,qword ptr [rip+0x206bf1]
0x23ff: test rax,rax
0x2402: je 0x2410
0x2404: pop rbp
0x2405: jmp rax
0x2410: pop rbp
0x2411: ret 
0x2431: push rbp
0x2432: mov rbp,rsp
0x2435: je 0x2443
0x2437: mov rdi,qword ptr [rip+0x206bca]
0x243e: call 0x1d50
0x2443: call 0x2390
0x2448: mov byte ptr [rip+0x206e59],0x1
0x244f: pop rbp
0x2450: ret 
0x2460: push rbp
0x2461: mov rbp,rsp
0x2464: pop rbp
0x2465: jmp 0x23d0
0x2470: rep ret 
0x2553: mov rdi,qword ptr [rsp+0x18]
0x2558: call 0x1cc0
0x255d: jmp 0x24e1
0x2581: jmp 0x24e1
0x25b9: jmp 0x2553
0x25bb: call 0x1a50
0x264c: call 0x1a50
0x2651: nop dword ptr [rax+rax]
0x2656: nop word ptr cs:[rax+rax]
0x2660: push r12
0x2662: push rbp
0x2663: push rbx
0x2664: mov ebx,edi
0x2666: sub rsp,0x30
0x266a: mov rax,qword ptr fs:0x28
0x2673: mov qword ptr [rsp+0x28],rax
0x2678: xor eax,eax
0x267a: cmp edi,0xe
0x267d: jne 0x268f
0x267f: mov ebx,dword ptr [rip+0x20698b]
0x2685: mov dword ptr [rip+0x206c3d],0x1
0x268f: mov ebp,dword ptr [rip+0x206c33]
0x2695: test ebp,ebp
0x2697: je 0x2838
0x269d: movsd xmm0,dword ptr [rip+0x206c1b]
0x26a5: ucomisd xmm0,[rip+0x41cb]
0x26ad: jp 0x26f0
0x26af: jne 0x26f0
0x26b1: cmp byte ptr [rip+0x206c00],0x0
0x26b8: jne 0x2730
0x26ba: mov esi,ebx
0x26bc: mov edi,ebp
0x26be: call 0x1b70
0x26c3: cmp byte ptr [rip+0x206bf0],0x0
0x26ca: je 0x27a0
0x26d0: mov rax,qword ptr [rsp+0x28]
0x26d5: xor rax,qword ptr fs:0x28
0x26de: jne 0x2843
0x26e4: add rsp,0x30
0x26e8: pop rbx
0x26e9: pop rbp
0x26ea: pop r12
0x26ec: ret 
0x26f0: movsd dword ptr [rsp+0x8],xmm0
0x26f6: call 0x1970
0x26fb: movsd xmm0,dword ptr [rsp+0x8]
0x2701: xor edi,edi
0x2703: mov rbp,rax
0x2706: mov r12d,dword ptr [rax]
0x2709: mov dword ptr [rip+0x2068fd],0x9
0x2713: call 0x2480
0x2718: cmp byte ptr [rip+0x206b99],0x0
0x271f: mov qword ptr [rip+0x206b96],0x0
0x272a: mov dword ptr [rbp],r12d
0x272e: je 0x277d
0x2730: lea rbp,[rsp+0x10]
0x2735: mov edi,ebx
0x2737: mov rsi,rbp
0x273a: call 0x5a50
0x273f: test eax,eax
0x2741: jne 0x2810
0x2747: mov rdi,qword ptr [rip+0x206b62]
0x274e: call 0x4e90
0x2753: lea rsi,[rip+0x38e6]
0x275a: mov r12,rax
0x275d: mov edx,0x5
0x2762: xor edi,edi
0x2764: call 0x1a20
0x2769: mov r8,r12
0x276c: mov rdx,rax
0x276f: mov rcx,rbp
0x2772: xor esi,esi
0x2774: xor edi,edi
0x2776: xor eax,eax
0x2778: call 0x1c10
0x277d: mov ebp,dword ptr [rip+0x206b45]
0x2783: test ebp,ebp
0x2785: jne 0x26ba
0x278b: mov esi,0x1
0x2790: mov edi,ebx
0x2792: call 0x1b20
0x2797: jmp 0x26ba
0x27a0: mov esi,0x1
0x27a5: mov edi,ebx
0x27a7: call 0x1b20
0x27ac: xor edi,edi
0x27ae: mov esi,ebx
0x27b0: call 0x1b70
0x27b5: cmp ebx,0x9
0x27b8: je 0x26d0
0x27be: cmp ebx,0x12
0x27c1: je 0x26d0
0x27c7: test ebp,ebp
0x27c9: jne 0x27da
0x27cb: mov esi,0x1
0x27d0: mov edi,0x12
0x27d5: call 0x1b20
0x27da: mov edi,ebp
0x27dc: mov esi,0x12
0x27e1: call 0x1b70
0x27e6: mov esi,0x1
0x27eb: mov edi,0x12
0x27f0: call 0x1b20
0x27f5: mov esi,0x12
0x27fa: xor edi,edi
0x27fc: call 0x1b70
0x2801: jmp 0x26d0
0x2810: lea r8,[rip+0x36af]
0x2817: mov r9d,ebx
0x281a: mov ecx,0x13
0x281f: mov edx,0x1
0x2824: mov esi,0x13
0x2829: mov rdi,rbp
0x282c: xor eax,eax
0x282e: call 0x1930
0x2833: jmp 0x2747
0x2838: lea edi,[rbx+0x80]
0x283e: call 0x1990
0x2843: call 0x1a50
0x2848: nop dword ptr [rax+rax]
0x2c82: call 0x1970
0x2c87: cmp dword ptr [rax],0x22
0x2c8a: jne 0x2d02
0x2d0a: lea rsi,[rip+0x3263]
0x2d11: mov rbx,rax
0x2d14: mov edx,0x5
0x2d19: xor edi,edi
0x2d1b: call 0x1a20
0x2d20: xor edi,edi
0x2d22: mov rdx,rax
0x2d25: mov rcx,rbx
0x2d28: xor esi,esi
0x2d2a: xor eax,eax
0x2d2c: call 0x1c10
0x2d31: mov edi,0x7d
0x2d36: call 0x2850
0x2d3b: call 0x1a50
0x2dc8: lea rsi,[rip+0x3ae4]
0x2dcf: mov rbx,rax
0x2dd2: mov edx,0x5
0x2dd7: xor edi,edi
0x2dd9: call 0x1a20
0x2dde: mov rcx,rbx
0x2de1: mov rdx,rax
0x2de4: xor esi,esi
0x2de6: xor eax,eax
0x2de8: xor edi,edi
0x2dea: call 0x1c10
0x2def: mov eax,0xffffffff
0x2df4: jmp 0x2e80
0x2f1c: call 0x1a50
0x2f21: nop word ptr cs:[rax+rax]
0x2f2b: nop dword ptr [rax+rax]
0x2fe3: nop word ptr cs:[rax+rax]
0x2fed: nop dword ptr [rax]
0x2ff0: mov qword ptr [rip+0x2062e1],rdi
0x2ff7: ret 
0x3000: mov byte ptr [rip+0x2062c9],dil
0x3007: ret 
0x3010: push rbp
0x3011: push rbx
0x3012: sub rsp,0x8
0x3016: mov rdi,qword ptr [rip+0x20624b]
0x301d: call 0x5ba0
0x3022: test eax,eax
0x3024: je 0x303c
0x3026: call 0x1970
0x302b: cmp byte ptr [rip+0x20629e],0x0
0x3032: mov rbx,rax
0x3035: je 0x3053
0x3037: cmp dword ptr [rax],0x20
0x303a: jne 0x3053
0x303c: mov rdi,qword ptr [rip+0x20625d]
0x3043: call 0x5ba0
0x3048: test eax,eax
0x304a: jne 0x3092
0x304c: add rsp,0x8
0x3050: pop rbx
0x3051: pop rbp
0x3052: ret 
0x3053: lea rsi,[rip+0x3871]
0x305a: xor edi,edi
0x305c: mov edx,0x5
0x3061: call 0x1a20
0x3066: mov rdi,qword ptr [rip+0x20626b]
0x306d: mov rbp,rax
0x3070: test rdi,rdi
0x3073: je 0x309d
0x3075: call 0x4c90
0x307a: mov esi,dword ptr [rbx]
0x307c: lea rdx,[rip+0x3854]
0x3083: mov rcx,rax
0x3086: mov r8,rbp
0x3089: xor edi,edi
0x308b: xor eax,eax
0x308d: call 0x1c10
0x3092: mov edi,dword ptr [rip+0x205f88]
0x3098: call 0x1990
0x309d: mov esi,dword ptr [rbx]
0x309f: lea rdx,[rip+0x3835]
0x30a6: mov rcx,rax
0x30a9: xor edi,edi
0x30ab: xor eax,eax
0x30ad: call 0x1c10
0x30b2: jmp 0x3092
0x321f: nop 
0x3220: push rbp
0x3221: push rbx
0x3222: mov rbp,rdi
0x3225: mov ebx,esi
0x3227: sub rsp,0x8
0x322b: call 0x5c80
0x3230: movzx edx,byte ptr [rax]
0x3233: and edx,-0x21
0x3236: cmp dl,0x55
0x3239: je 0x32b0
0x323b: cmp dl,0x47
0x323e: je 0x3260
0x3240: lea rax,[rip+0x3704]
0x3247: lea rdx,[rip+0x36ff]
0x324e: cmp ebx,0x9
0x3251: cmovne rax,rdx
0x3255: add rsp,0x8
0x3259: pop rbx
0x325a: pop rbp
0x325b: ret 
0x3260: movzx edx,byte ptr [rax+0x1]
0x3264: and edx,-0x21
0x3267: cmp dl,0x42
0x326a: jne 0x3240
0x326c: cmp byte ptr [rax+0x2],0x31
0x3270: jne 0x3240
0x3272: cmp byte ptr [rax+0x3],0x38
0x3276: jne 0x3240
0x3278: cmp byte ptr [rax+0x4],0x30
0x327c: jne 0x3240
0x327e: cmp byte ptr [rax+0x5],0x33
0x3282: jne 0x3240
0x3284: cmp byte ptr [rax+0x6],0x30
0x3288: jne 0x3240
0x328a: cmp byte ptr [rax+0x7],0x0
0x328e: jne 0x3240
0x3290: cmp byte ptr [rbp],0x60
0x3294: lea rax,[rip+0x36a9]
0x329b: lea rdx,[rip+0x36a6]
0x32a2: cmovne rax,rdx
0x32a6: add rsp,0x8
0x32aa: pop rbx
0x32ab: pop rbp
0x32ac: ret 
0x32b0: movzx edx,byte ptr [rax+0x1]
0x32b4: and edx,-0x21
0x32b7: cmp dl,0x54
0x32ba: jne 0x3240
0x32bc: movzx edx,byte ptr [rax+0x2]
0x32c0: and edx,-0x21
0x32c3: cmp dl,0x46
0x32c6: jne 0x3240
0x32cc: cmp byte ptr [rax+0x3],0x2d
0x32d0: jne 0x3240
0x32d6: cmp byte ptr [rax+0x4],0x38
0x32da: jne 0x3240
0x32e0: cmp byte ptr [rax+0x5],0x0
0x32e4: jne 0x3240
0x32ea: cmp byte ptr [rbp],0x60
0x32ee: lea rax,[rip+0x3647]
0x32f5: lea rdx,[rip+0x3644]
0x32fc: cmovne rax,rdx
0x3300: add rsp,0x8
0x3304: pop rbx
0x3305: pop rbp
0x3306: ret 
0x33e3: xor r11d,r11d
0x33e6: mov rax,rbp
0x33e9: mov r8d,r12d
0x33ec: mov rbp,r11
0x33ef: mov r11,rax
0x33f2: nop word ptr [rax+rax]
0x33f8: cmp r11,rbp
0x33fb: setne r12b
0x33ff: cmp r11,-0x1
0x3403: jne 0x3412
0x3405: mov rax,qword ptr [rsp+0x10]
0x340a: cmp byte ptr [rax+rbp],0x0
0x340e: setne r12b
0x3412: test r12b,r12b
0x3415: je 0x3a70
0x341b: cmp dword ptr [rsp+0x8],0x2
0x3420: mov rdi,qword ptr [rsp+0x10]
0x3425: lea r9,[rdi+rbp]
0x3429: setne al
0x342c: and al,byte ptr [rsp+0xd]
0x3430: mov r10d,eax
0x3433: je 0x34e0
0x3439: mov rax,qword ptr [rsp+0x18]
0x343e: test rax,rax
0x3441: je 0x3870
0x3447: cmp r11,-0x1
0x344b: lea rbx,[rbp+rax]
0x3450: jne 0x3480
0x3452: cmp rax,0x1
0x3456: jbe 0x3480
0x3458: mov byte ptr [rsp+0x38],r8b
0x345d: mov byte ptr [rsp+0x30],r10b
0x3462: mov qword ptr [rsp+0x28],r9
0x3467: call 0x1a40
0x346c: movzx r8d,byte ptr [rsp+0x38]
0x3472: movzx r10d,byte ptr [rsp+0x30]
0x3478: mov r11,rax
0x347b: mov r9,qword ptr [rsp+0x28]
0x3480: cmp rbx,r11
0x3483: mov byte ptr [rsp+0x28],r10b
0x3488: ja 0x3a40
0x348e: mov rdx,qword ptr [rsp+0x18]
0x3493: mov rsi,qword ptr [rsp+0x48]
0x3498: mov rdi,r9
0x349b: mov qword ptr [rsp+0x40],r11
0x34a0: mov byte ptr [rsp+0x38],r8b
0x34a5: mov qword ptr [rsp+0x30],r9
0x34aa: call 0x1ae0
0x34af: test eax,eax
0x34b1: mov r9,qword ptr [rsp+0x30]
0x34b6: movzx r8d,byte ptr [rsp+0x38]
0x34bc: mov r11,qword ptr [rsp+0x40]
0x34c1: jne 0x3a40
0x34c7: cmp byte ptr [rsp+0xf],0x0
0x34cc: movzx r10d,byte ptr [rsp+0x28]
0x34d2: jne 0x4455
0x34d8: nop dword ptr [rax+rax]
0x34e0: movzx ebx,byte ptr [r9]
0x34e4: cmp bl,0x7e
0x34e7: ja 0x3808
0x34ed: lea rcx,[rip+0x34d8]
0x34f4: movzx edx,bl
0x34f7: movsxd rax,dword ptr [rcx+rdx*4]
0x34fb: add rax,rcx
0x34fe: jmp rax
0x3538: cmp byte ptr [rsp+0xd],0x1
0x353d: jne 0x3652
0x3543: test dl,dl
0x3545: jne 0x3652
0x354b: mov rsi,qword ptr [rsp+0x20]
0x3550: test rsi,rsi
0x3553: je 0x3569
0x3555: mov edx,ebx
0x3557: shr dl,0x5
0x355a: movzx edx,dl
0x355d: mov edx,dword ptr [rsi+rdx*4]
0x3560: btl edx,ebx
0x3563: jb 0x36b3
0x3569: test r10b,r10b
0x356c: jne 0x36b3
0x3572: xor eax,0x1
0x3575: add rbp,0x1
0x3579: and eax,r8d
0x357c: test al,al
0x357e: je 0x35a0
0x3580: cmp r13,r15
0x3583: jbe 0x358a
0x3585: mov byte ptr [r14+r15],0x27
0x358a: lea rax,[r15+0x1]
0x358e: cmp r13,rax
0x3591: jbe 0x3599
0x3593: mov byte ptr [r14+r15+0x1],0x27
0x3599: add r15,0x2
0x359d: xor r8d,r8d
0x35a0: cmp r15,r13
0x35a3: jae 0x35a9
0x35a5: mov byte ptr [r14+r15],bl
0x35a9: movzx edi,byte ptr [rsp+0xe]
0x35ae: add r15,0x1
0x35b2: mov eax,0x0
0x35b7: test r12b,r12b
0x35ba: cmove edi,eax
0x35bd: mov byte ptr [rsp+0xe],dil
0x35c2: jmp 0x33f8
0x3652: cmp byte ptr [rsp+0xf],0x0
0x3657: jne 0x354b
0x365d: jmp 0x3569
0x36b3: cmp dword ptr [rsp+0x8],0x2
0x36b8: sete dl
0x36bb: cmp byte ptr [rsp+0xf],0x0
0x36c0: mov eax,edx
0x36c2: jne 0x3f18
0x36c8: mov eax,r8d
0x36cb: xor eax,0x1
0x36ce: and al,dl
0x36d0: je 0x3701
0x36d2: cmp r13,r15
0x36d5: jbe 0x36dc
0x36d7: mov byte ptr [r14+r15],0x27
0x36dc: lea rdx,[r15+0x1]
0x36e0: cmp r13,rdx
0x36e3: jbe 0x36eb
0x36e5: mov byte ptr [r14+r15+0x1],0x24
0x36eb: lea rdx,[r15+0x2]
0x36ef: cmp r13,rdx
0x36f2: jbe 0x36fa
0x36f4: mov byte ptr [r14+r15+0x2],0x27
0x36fa: add r15,0x3
0x36fe: mov r8d,eax
0x3701: cmp r13,r15
0x3704: jbe 0x370b
0x3706: mov byte ptr [r14+r15],0x5c
0x370b: add r15,0x1
0x370f: add rbp,0x1
0x3713: jmp 0x35a0
0x3800: xor r10d,r10d
0x3803: nop dword ptr [rax+rax]
0x3808: cmp qword ptr [rsp+0x58],0x1
0x380e: jne 0x3bb8
0x3814: mov qword ptr [rsp+0x38],r11
0x3819: mov byte ptr [rsp+0x30],r8b
0x381e: mov byte ptr [rsp+0x28],r10b
0x3823: call 0x1d30
0x3828: mov rcx,qword ptr [rax]
0x382b: movzx edx,bl
0x382e: movzx r10d,byte ptr [rsp+0x28]
0x3834: movzx r8d,byte ptr [rsp+0x30]
0x383a: mov r11,qword ptr [rsp+0x38]
0x383f: mov edi,0x1
0x3844: movzx eax,word ptr [rcx+rdx*2]
0x3848: and ax,0x4000
0x384c: setne r12b
0x3850: sete al
0x3853: and al,byte ptr [rsp+0xd]
0x3857: test al,al
0x3859: jne 0x41f1
0x385f: cmp dword ptr [rsp+0x8],0x2
0x3864: sete dl
0x3867: jmp 0x3538
0x3870: movzx ebx,byte ptr [r9]
0x3874: cmp bl,0x7e
0x3877: ja 0x3800
0x3879: lea rcx,[rip+0x3348]
0x3880: movzx edx,bl
0x3883: movsxd rax,dword ptr [rcx+rdx*4]
0x3887: add rax,rcx
0x388a: jmp rax
0x3a40: xor r10d,r10d
0x3a43: jmp 0x34e0
0x3a70: cmp dword ptr [rsp+0x8],0x2
0x3a75: movzx ebx,byte ptr [rsp+0xf]
0x3a7a: mov r12d,r8d
0x3a7d: mov rbp,r11
0x3a80: sete dl
0x3a83: mov eax,ebx
0x3a85: test r15,r15
0x3a88: sete cl
0x3a8b: and eax,edx
0x3a8d: and al,cl
0x3a8f: jne 0x44f6
0x3a95: mov eax,ebx
0x3a97: xor eax,0x1
0x3a9a: and dl,al
0x3a9c: je 0x440c
0x3aa2: cmp byte ptr [rsp+0x7c],0x0
0x3aa7: je 0x440a
0x3aad: cmp byte ptr [rsp+0xe],0x0
0x3ab2: jne 0x44ad
0x3ab8: test r13,r13
0x3abb: sete al
0x3abe: cmp qword ptr [rsp+0x50],0x0
0x3ac4: setne dl
0x3ac7: and al,dl
0x3ac9: je 0x44ec
0x3acf: mov r13,qword ptr [rsp+0x50]
0x3ad4: lea rbx,[rip+0x2e72]
0x3adb: mov byte ptr [r14],0x27
0x3adf: mov dword ptr [rsp+0x8],0x2
0x3ae7: mov r15d,0x1
0x3aed: mov qword ptr [rsp+0x18],0x1
0x3af6: mov byte ptr [rsp+0xf],0x0
0x3afb: mov qword ptr [rsp+0x48],rbx
0x3b00: mov byte ptr [rsp+0x7c],al
0x3b04: jmp 0x33e3
0x3bb8: lea rax,[rsp+0xa0]
0x3bc0: cmp r11,-0x1
0x3bc4: mov qword ptr [rsp+0xa0],0x0
0x3bd0: mov qword ptr [rsp+0x28],rax
0x3bd5: jne 0x3c04
0x3bd7: mov rdi,qword ptr [rsp+0x10]
0x3bdc: mov byte ptr [rsp+0x40],r8b
0x3be1: mov byte ptr [rsp+0x38],r10b
0x3be6: mov qword ptr [rsp+0x30],r9
0x3beb: call 0x1a40
0x3bf0: movzx r8d,byte ptr [rsp+0x40]
0x3bf6: movzx r10d,byte ptr [rsp+0x38]
0x3bfc: mov r11,rax
0x3bff: mov r9,qword ptr [rsp+0x30]
0x3c04: lea rax,[rsp+0x9c]
0x3c0c: xor ecx,ecx
0x3c0e: mov byte ptr [rsp+0x7e],bl
0x3c12: mov byte ptr [rsp+0x7d],r8b
0x3c17: mov rbx,rcx
0x3c1a: mov qword ptr [rsp+0x88],r9
0x3c22: mov qword ptr [rsp+0x38],rax
0x3c27: mov byte ptr [rsp+0x7f],r10b
0x3c2c: mov qword ptr [rsp+0x80],r15
0x3c34: mov qword ptr [rsp+0x40],r14
0x3c39: mov qword ptr [rsp+0x70],r13
0x3c3e: mov qword ptr [rsp+0x30],r11
0x3c43: mov rax,qword ptr [rsp+0x10]
0x3c48: lea r14,[rbp+rbx]
0x3c4d: mov rdx,qword ptr [rsp+0x30]
0x3c52: mov rcx,qword ptr [rsp+0x28]
0x3c57: mov rdi,qword ptr [rsp+0x38]
0x3c5c: lea r13,[rax+r14]
0x3c60: sub rdx,r14
0x3c63: mov rsi,r13
0x3c66: call 0x5830
0x3c6b: test rax,rax
0x3c6e: mov r15,rax
0x3c71: je 0x3cc1
0x3c73: cmp rax,-0x1
0x3c77: je 0x4295
0x3c7d: cmp rax,-0x2
0x3c81: je 0x4221
0x3c87: cmp dword ptr [rsp+0x8],0x2
0x3c8c: sete al
0x3c8f: and al,byte ptr [rsp+0xf]
0x3c93: jne 0x3e30
0x3c99: mov edi,dword ptr [rsp+0x9c]
0x3ca0: call 0x1d00
0x3ca5: mov rdi,qword ptr [rsp+0x28]
0x3caa: test eax,eax
0x3cac: mov eax,0x0
0x3cb1: cmove r12d,eax
0x3cb5: add rbx,r15
0x3cb8: call 0x1cf0
0x3cbd: test eax,eax
0x3cbf: je 0x3c43
0x3cc1: mov edx,r12d
0x3cc4: mov rdi,rbx
0x3cc7: movzx r8d,byte ptr [rsp+0x7d]
0x3ccd: xor edx,0x1
0x3cd0: movzx ebx,byte ptr [rsp+0x7e]
0x3cd5: movzx r10d,byte ptr [rsp+0x7f]
0x3cdb: and dl,byte ptr [rsp+0xd]
0x3cdf: mov r15,qword ptr [rsp+0x80]
0x3ce7: mov r14,qword ptr [rsp+0x40]
0x3cec: mov r13,qword ptr [rsp+0x70]
0x3cf1: mov r11,qword ptr [rsp+0x30]
0x3cf6: cmp rdi,0x1
0x3cfa: jbe 0x42fb
0x3d00: mov rcx,rdi
0x3d03: xor esi,esi
0x3d05: movzx r9d,byte ptr [rsp+0xf]
0x3d0b: add rcx,rbp
0x3d0e: mov rdi,qword ptr [rsp+0x10]
0x3d13: jmp 0x3dce
0x3d20: cmp dword ptr [rsp+0x8],0x2
0x3d25: sete al
0x3d28: test r9b,r9b
0x3d2b: jne 0x41e0
0x3d31: mov esi,r8d
0x3d34: xor esi,0x1
0x3d37: and al,sil
0x3d3a: je 0x3d6b
0x3d3c: cmp r13,r15
0x3d3f: jbe 0x3d46
0x3d41: mov byte ptr [r14+r15],0x27
0x3d46: lea rsi,[r15+0x1]
0x3d4a: cmp r13,rsi
0x3d4d: jbe 0x3d55
0x3d4f: mov byte ptr [r14+r15+0x1],0x24
0x3d55: lea rsi,[r15+0x2]
0x3d59: cmp r13,rsi
0x3d5c: jbe 0x3d64
0x3d5e: mov byte ptr [r14+r15+0x2],0x27
0x3d64: add r15,0x3
0x3d68: mov r8d,eax
0x3d6b: cmp r13,r15
0x3d6e: jbe 0x3d75
0x3d70: mov byte ptr [r14+r15],0x5c
0x3d75: lea rax,[r15+0x1]
0x3d79: cmp r13,rax
0x3d7c: jbe 0x3d8b
0x3d7e: mov eax,ebx
0x3d80: shr al,0x6
0x3d83: add eax,0x30
0x3d86: mov byte ptr [r14+r15+0x1],al
0x3d8b: lea rax,[r15+0x2]
0x3d8f: cmp r13,rax
0x3d92: jbe 0x3da4
0x3d94: mov eax,ebx
0x3d96: shr al,0x3
0x3d99: and eax,0x7
0x3d9c: add eax,0x30
0x3d9f: mov byte ptr [r14+r15+0x2],al
0x3da4: and ebx,0x7
0x3da7: add rbp,0x1
0x3dab: add r15,0x3
0x3daf: add ebx,0x30
0x3db2: cmp rbp,rcx
0x3db5: jae 0x35a0
0x3dbb: mov esi,edx
0x3dbd: cmp r13,r15
0x3dc0: jbe 0x3dc6
0x3dc2: mov byte ptr [r14+r15],bl
0x3dc6: movzx ebx,byte ptr [rdi+rbp]
0x3dca: add r15,0x1
0x3dce: test dl,dl
0x3dd0: jne 0x3d20
0x3dd6: mov eax,esi
0x3dd8: xor eax,0x1
0x3ddb: and eax,r8d
0x3dde: test r10b,r10b
0x3de1: je 0x3df1
0x3de3: cmp r13,r15
0x3de6: jbe 0x3ded
0x3de8: mov byte ptr [r14+r15],0x5c
0x3ded: add r15,0x1
0x3df1: add rbp,0x1
0x3df5: cmp rbp,rcx
0x3df8: jae 0x357c
0x3dfe: test al,al
0x3e00: je 0x41fe
0x3e06: cmp r13,r15
0x3e09: jbe 0x3e10
0x3e0b: mov byte ptr [r14+r15],0x27
0x3e10: lea rax,[r15+0x1]
0x3e14: cmp r13,rax
0x3e17: jbe 0x3e1f
0x3e19: mov byte ptr [r14+r15+0x1],0x27
0x3e1f: add r15,0x2
0x3e23: xor r10d,r10d
0x3e26: xor r8d,r8d
0x3e29: jmp 0x3dbd
0x3e30: cmp r15,0x1
0x3e34: je 0x3c99
0x3e3a: mov rdi,qword ptr [rsp+0x10]
0x3e3f: lea rcx,[rdi+r15]
0x3e43: lea rdx,[rdi+r14+0x1]
0x3e48: lea r8,[rcx+r14]
0x3e4c: jmp 0x3e5d
0x3e50: add rdx,0x1
0x3e54: cmp r8,rdx
0x3e57: je 0x3c99
0x3e5d: movzx ecx,byte ptr [rdx]
0x3e60: sub ecx,0x5b
0x3e63: cmp cl,0x21
0x3e66: ja 0x3e50
0x3e68: mov esi,0x1
0x3e6d: shl rsi,cl
0x3e70: mov rcx,rsi
0x3e73: movabsq rsi,0x20000002b
0x3e7d: test rcx,rsi
0x3e80: je 0x3e50
0x3e82: mov r14,qword ptr [rsp+0x40]
0x3e87: mov r13,qword ptr [rsp+0x70]
0x3e8c: mov rbp,qword ptr [rsp+0x30]
0x3e91: mov dword ptr [rsp+0x8],0x2
0x3e99: cmp byte ptr [rsp+0xd],0x0
0x3e9e: je 0x3eb0
0x3ea0: test al,al
0x3ea2: mov eax,0x4
0x3ea7: cmove eax,dword ptr [rsp+0x8]
0x3eac: mov dword ptr [rsp+0x8],eax
0x3eb0: sub rsp,0x8
0x3eb4: mov rcx,rbp
0x3eb7: mov rsi,r13
0x3eba: push qword ptr [rsp+0x68]
0x3ebe: push qword ptr [rsp+0x78]
0x3ec2: mov rdi,r14
0x3ec5: push 0x0
0x3ec7: mov r9d,dword ptr [rsp+0x98]
0x3ecf: mov r8d,dword ptr [rsp+0x28]
0x3ed4: mov rdx,qword ptr [rsp+0x30]
0x3ed9: and r9d,-0x3
0x3edd: call 0x3310
0x3ee2: add rsp,0x20
0x3ee6: mov r15,rax
0x3ee9: mov rbx,qword ptr [rsp+0xa8]
0x3ef1: xor rbx,qword ptr fs:0x28
0x3efa: mov rax,r15
0x3efd: jne 0x4503
0x3f03: add rsp,0xb8
0x3f0a: pop rbx
0x3f0b: pop rbp
0x3f0c: pop r12
0x3f0e: pop r13
0x3f10: pop r14
0x3f12: pop r15
0x3f14: ret 
0x3f18: mov rbp,r11
0x3f1b: jmp 0x3e99
0x3f81: test r13,r13
0x3f84: jne 0x451a
0x3f8a: lea rax,[rip+0x29bc]
0x3f91: mov qword ptr [rsp+0x50],0x0
0x3f9a: mov byte ptr [rsp+0xe],0x1
0x3f9f: mov byte ptr [rsp+0x7c],0x0
0x3fa4: xor r12d,r12d
0x3fa7: mov byte ptr [rsp+0xf],0x0
0x3fac: mov qword ptr [rsp+0x18],0x1
0x3fb5: mov qword ptr [rsp+0x48],rax
0x3fba: mov r15d,0x1
0x3fc0: mov dword ptr [rsp+0x8],0x2
0x3fc8: jmp 0x33e3
0x41e0: movzx ebx,byte ptr [rsp+0xf]
0x41e5: mov rbp,r11
0x41e8: mov byte ptr [rsp+0xd],bl
0x41ec: jmp 0x3e99
0x41f1: movzx edx,byte ptr [rsp+0xd]
0x41f6: xor r12d,r12d
0x41f9: jmp 0x3d00
0x41fe: xor r10d,r10d
0x4201: jmp 0x3dbd
0x4221: mov r11,qword ptr [rsp+0x30]
0x4226: mov rsi,r14
0x4229: mov rcx,r13
0x422c: mov rax,rbx
0x422f: mov rdi,rbx
0x4232: movzx r8d,byte ptr [rsp+0x7d]
0x4238: movzx ebx,byte ptr [rsp+0x7e]
0x423d: mov r9,qword ptr [rsp+0x88]
0x4245: cmp rsi,r11
0x4248: movzx r10d,byte ptr [rsp+0x7f]
0x424e: mov r15,qword ptr [rsp+0x80]
0x4256: mov r14,qword ptr [rsp+0x40]
0x425b: mov r13,qword ptr [rsp+0x70]
0x4260: jae 0x4288
0x4262: cmp byte ptr [rcx],0x0
0x4265: jne 0x4277
0x4267: jmp 0x4288
0x4270: cmp byte ptr [r9+rax],0x0
0x4275: je 0x4285
0x4277: add rax,0x1
0x427b: lea rdx,[rbp+rax]
0x4280: cmp r11,rdx
0x4283: ja 0x4270
0x4285: mov rdi,rax
0x4288: movzx edx,byte ptr [rsp+0xd]
0x428d: xor r12d,r12d
0x4290: jmp 0x3cf6
0x4295: mov rdi,rbx
0x4298: movzx r8d,byte ptr [rsp+0x7d]
0x429e: movzx ebx,byte ptr [rsp+0x7e]
0x42a3: movzx r10d,byte ptr [rsp+0x7f]
0x42a9: mov r15,qword ptr [rsp+0x80]
0x42b1: xor r12d,r12d
0x42b4: mov r14,qword ptr [rsp+0x40]
0x42b9: mov r13,qword ptr [rsp+0x70]
0x42be: mov r11,qword ptr [rsp+0x30]
0x42c3: movzx edx,byte ptr [rsp+0xd]
0x42c8: jmp 0x3cf6
0x42fb: mov eax,edx
0x42fd: jmp 0x3857
0x440a: mov eax,edx
0x440c: mov rbx,qword ptr [rsp+0x48]
0x4411: test rbx,rbx
0x4414: je 0x4442
0x4416: test al,al
0x4418: je 0x4442
0x441a: movzx ecx,byte ptr [rbx]
0x441d: mov rax,rbx
0x4420: test cl,cl
0x4422: je 0x4442
0x4424: mov rdx,r15
0x4427: sub rax,r15
0x442a: cmp r13,rdx
0x442d: jbe 0x4433
0x442f: mov byte ptr [r14+rdx],cl
0x4433: add rdx,0x1
0x4437: movzx ecx,byte ptr [rax+rdx]
0x443b: test cl,cl
0x443d: jne 0x442a
0x443f: mov r15,rdx
0x4442: cmp r13,r15
0x4445: jbe 0x3ee9
0x444b: mov byte ptr [r14+r15],0x0
0x4450: jmp 0x3ee9
0x4455: cmp dword ptr [rsp+0x8],0x2
0x445a: movzx ebx,byte ptr [rsp+0xf]
0x445f: mov rbp,r11
0x4462: sete al
0x4465: mov byte ptr [rsp+0xd],bl
0x4469: jmp 0x3e99
0x44ad: sub rsp,0x8
0x44b1: mov r8d,0x5
0x44b7: mov rcx,r11
0x44ba: push qword ptr [rsp+0x68]
0x44be: push qword ptr [rsp+0x78]
0x44c2: mov rdi,r14
0x44c5: push qword ptr [rsp+0x38]
0x44c9: mov r9d,dword ptr [rsp+0x98]
0x44d1: mov rdx,qword ptr [rsp+0x30]
0x44d6: mov rsi,qword ptr [rsp+0x70]
0x44db: call 0x3310
0x44e0: add rsp,0x20
0x44e4: mov r15,rax
0x44e7: jmp 0x3ee9
0x44ec: movzx eax,byte ptr [rsp+0x7c]
0x44f1: jmp 0x440c
0x44f6: mov dword ptr [rsp+0x8],0x2
0x44fe: jmp 0x3e99
0x4503: call 0x1a50
0x4508: mov byte ptr [rsp+0xd],0x0
0x450d: jmp 0x3f81
0x451a: mov byte ptr [rsp+0xe],0x1
0x451f: xor eax,eax
0x4521: xor r12d,r12d
0x4524: mov qword ptr [rsp+0x50],0x0
0x452d: jmp 0x3ad4
0x4544: nop 
0x4546: nop word ptr cs:[rax+rax]
0x463c: add rsp,0x20
0x4640: mov r11,qword ptr [rsp+0x10]
0x4645: cmp r11,rax
0x4648: ja 0x46b1
0x464a: lea rsi,[rax+0x1]
0x464e: lea rax,[rip+0x204cab]
0x4655: cmp r12,rax
0x4658: mov qword ptr [rbx],rsi
0x465b: je 0x466f
0x465d: mov rdi,r12
0x4660: mov qword ptr [rsp+0x10],rsi
0x4665: call 0x1950
0x466a: mov rsi,qword ptr [rsp+0x10]
0x466f: mov rdi,rsi
0x4672: mov qword ptr [rsp+0x10],rsi
0x4677: call 0x54d0
0x467c: sub rsp,0x8
0x4680: mov qword ptr [rbx+0x8],rax
0x4684: mov r8d,dword ptr [rbp]
0x4688: push qword ptr [rbp+0x30]
0x468b: push qword ptr [rbp+0x28]
0x468e: mov rcx,r14
0x4691: push r15
0x4693: mov r9d,dword ptr [rsp+0x3c]
0x4698: mov rdi,rax
0x469b: mov rdx,qword ptr [rsp+0x28]
0x46a0: mov rsi,qword ptr [rsp+0x30]
0x46a5: mov r12,rax
0x46a8: call 0x3310
0x46ad: add rsp,0x20
0x46b1: mov eax,dword ptr [rsp+0x18]
0x46b5: mov dword ptr [r13],eax
0x46b9: add rsp,0x28
0x46bd: mov rax,r12
0x46c0: pop rbx
0x46c1: pop rbp
0x46c2: pop r12
0x46c4: pop r13
0x46c6: pop r14
0x46c8: pop r15
0x46ca: ret 
0x46f1: call 0x1960
0x46f6: call 0x5720
0x46fb: nop dword ptr [rax+rax]
0x4700: push r12
0x4702: push rbp
0x4703: push rbx
0x4704: mov rbx,rdi
0x4707: call 0x1970
0x470c: mov r12d,dword ptr [rax]
0x470f: mov rbp,rax
0x4712: lea rax,[rip+0x204ce7]
0x4719: test rbx,rbx
0x471c: mov esi,0x38
0x4721: cmove rbx,rax
0x4725: mov rdi,rbx
0x4728: call 0x56d0
0x472d: mov dword ptr [rbp],r12d
0x4731: pop rbx
0x4732: pop rbp
0x4733: pop r12
0x4735: ret 
0x4740: lea rax,[rip+0x204cb9]
0x4747: test rdi,rdi
0x474a: cmove rdi,rax
0x474e: mov eax,dword ptr [rdi]
0x4750: ret 
0x4760: lea rax,[rip+0x204c99]
0x4767: test rdi,rdi
0x476a: cmove rdi,rax
0x476e: mov dword ptr [rdi],esi
0x4770: ret 
0x4780: lea rax,[rip+0x204c79]
0x4787: test rdi,rdi
0x478a: mov ecx,esi
0x478c: cmove rdi,rax
0x4790: mov eax,esi
0x4792: and ecx,0x1f
0x4795: shr al,0x5
0x4798: movzx eax,al
0x479b: lea rdi,[rdi+rax*4+0x8]
0x47a0: mov esi,dword ptr [rdi]
0x47a2: mov eax,esi
0x47a4: shr eax,cl
0x47a6: xor edx,eax
0x47a8: and eax,0x1
0x47ab: and edx,0x1
0x47ae: shl edx,cl
0x47b0: xor edx,esi
0x47b2: mov dword ptr [rdi],edx
0x47b4: ret 
0x47c0: lea rax,[rip+0x204c39]
0x47c7: test rdi,rdi
0x47ca: cmove rdi,rax
0x47ce: mov eax,dword ptr [rdi+0x4]
0x47d1: mov dword ptr [rdi+0x4],esi
0x47d4: ret 
0x47e0: lea rax,[rip+0x204c19]
0x47e7: test rdi,rdi
0x47ea: cmove rdi,rax
0x47ee: test rsi,rsi
0x47f1: mov dword ptr [rdi],0xa
0x47f7: je 0x4807
0x47f9: test rdx,rdx
0x47fc: je 0x4807
0x47fe: mov qword ptr [rdi+0x28],rsi
0x4802: mov qword ptr [rdi+0x30],rdx
0x4806: ret 
0x4807: sub rsp,0x8
0x480b: call 0x1960
0x4810: push r15
0x4812: push r14
0x4814: lea rax,[rip+0x204be5]
0x481b: push r13
0x481d: push r12
0x481f: mov r13,rdi
0x4822: push rbp
0x4823: push rbx
0x4824: mov rbx,r8
0x4827: mov r14,rsi
0x482a: mov r15,rdx
0x482d: sub rsp,0x18
0x4831: test r8,r8
0x4834: cmove rbx,rax
0x4838: mov qword ptr [rsp+0x8],rcx
0x483d: call 0x1970
0x4842: mov r12d,dword ptr [rax]
0x4845: mov rbp,rax
0x4848: lea rax,[rbx+0x8]
0x484c: sub rsp,0x8
0x4850: mov r9d,dword ptr [rbx+0x4]
0x4854: push qword ptr [rbx+0x30]
0x4857: mov r8d,dword ptr [rbx]
0x485a: push qword ptr [rbx+0x28]
0x485d: mov rdx,r15
0x4860: push rax
0x4861: mov rcx,qword ptr [rsp+0x28]
0x4866: mov rsi,r14
0x4869: mov rdi,r13
0x486c: call 0x3310
0x4871: mov dword ptr [rbp],r12d
0x4875: add rsp,0x38
0x4879: pop rbx
0x487a: pop rbp
0x487b: pop r12
0x487d: pop r13
0x487f: pop r14
0x4881: pop r15
0x4883: ret 
0x4890: push r15
0x4892: push r14
0x4894: lea rax,[rip+0x204b65]
0x489b: push r13
0x489d: push r12
0x489f: mov r12,rdx
0x48a2: push rbp
0x48a3: push rbx
0x48a4: mov rbx,rcx
0x48a7: mov r14,rdi
0x48aa: mov r15,rsi
0x48ad: sub rsp,0x38
0x48b1: test rcx,rcx
0x48b4: cmove rbx,rax
0x48b8: xor ebp,ebp
0x48ba: call 0x1970
0x48bf: test r12,r12
0x48c2: mov r13,rax
0x48c5: mov eax,dword ptr [rax]
0x48c7: sete bpl
0x48cb: or ebp,dword ptr [rbx+0x4]
0x48ce: lea r10,[rbx+0x8]
0x48d2: sub rsp,0x8
0x48d6: mov r8d,dword ptr [rbx]
0x48d9: mov rcx,r15
0x48dc: mov dword ptr [rsp+0x14],eax
0x48e0: push qword ptr [rbx+0x30]
0x48e3: mov rdx,r14
0x48e6: push qword ptr [rbx+0x28]
0x48e9: push r10
0x48eb: xor esi,esi
0x48ed: mov r9d,ebp
0x48f0: xor edi,edi
0x48f2: mov qword ptr [rsp+0x40],r10
0x48f7: call 0x3310
0x48fc: lea rsi,[rax+0x1]
0x4900: mov qword ptr [rsp+0x48],rax
0x4905: add rsp,0x20
0x4909: mov rdi,rsi
0x490c: mov qword ptr [rsp+0x18],rsi
0x4911: call 0x54d0
0x4916: mov qword ptr [rsp+0x10],rax
0x491b: sub rsp,0x8
0x491f: push qword ptr [rbx+0x30]
0x4922: push qword ptr [rbx+0x28]
0x4925: mov r10,qword ptr [rsp+0x38]
0x492a: mov r9d,ebp
0x492d: mov r8d,dword ptr [rbx]
0x4930: mov rcx,r15
0x4933: mov rdx,r14
0x4936: mov rdi,rax
0x4939: push r10
0x493b: mov rsi,qword ptr [rsp+0x38]
0x4940: call 0x3310
0x4945: mov eax,dword ptr [rsp+0x2c]
0x4949: add rsp,0x20
0x494d: test r12,r12
0x4950: mov dword ptr [r13],eax
0x4954: je 0x495f
0x4956: mov r11,qword ptr [rsp+0x28]
0x495b: mov qword ptr [r12],r11
0x495f: mov rax,qword ptr [rsp+0x10]
0x4964: add rsp,0x38
0x4968: pop rbx
0x4969: pop rbp
0x496a: pop r12
0x496c: pop r13
0x496e: pop r14
0x4970: pop r15
0x4972: ret 
0x4980: mov rcx,rdx
0x4983: xor edx,edx
0x4985: jmp 0x4890
0x4990: mov eax,dword ptr [rip+0x2046e2]
0x4996: push r12
0x4998: mov r12,qword ptr [rip+0x2046e1]
0x499f: push rbp
0x49a0: push rbx
0x49a1: cmp eax,0x1
0x49a4: jle 0x49d1
0x49a6: sub eax,0x2
0x49a9: lea rbx,[r12+0x18]
0x49ae: shl rax,0x4
0x49b2: lea rbp,[r12+rax+0x28]
0x49b7: nop word ptr [rax+rax]
0x49c0: mov rdi,qword ptr [rbx]
0x49c3: add rbx,0x10
0x49c7: call 0x1950
0x49cc: cmp rbx,rbp
0x49cf: jne 0x49c0
0x49d1: mov rdi,qword ptr [r12+0x8]
0x49d6: lea rbx,[rip+0x204923]
0x49dd: cmp rdi,rbx
0x49e0: je 0x49f9
0x49e2: call 0x1950
0x49e7: mov qword ptr [rip+0x20469e],0x100
0x49f2: mov qword ptr [rip+0x20469f],rbx
0x49f9: lea rbx,[rip+0x204690]
0x4a00: cmp r12,rbx
0x4a03: je 0x4a14
0x4a05: mov rdi,r12
0x4a08: call 0x1950
0x4a0d: mov qword ptr [rip+0x20466c],rbx
0x4a14: pop rbx
0x4a15: mov dword ptr [rip+0x204659],0x1
0x4a1f: pop rbp
0x4a20: pop r12
0x4a22: ret 
0x4a30: lea rcx,[rip+0x2049c9]
0x4a37: mov rdx,-0x1
0x4a3e: jmp 0x4550
0x4a50: lea rcx,[rip+0x2049a9]
0x4a57: jmp 0x4550
0x4a60: lea rcx,[rip+0x204999]
0x4a67: mov rsi,rdi
0x4a6a: mov rdx,-0x1
0x4a71: xor edi,edi
0x4a73: jmp 0x4550
0x4a80: lea rcx,[rip+0x204979]
0x4a87: mov rdx,rsi
0x4a8a: mov rsi,rdi
0x4a8d: xor edi,edi
0x4a8f: jmp 0x4550
0x4aa0: sub rsp,0x48
0x4aa4: mov rax,rdx
0x4aa7: mov rdx,qword ptr fs:0x28
0x4ab0: mov qword ptr [rsp+0x38],rdx
0x4ab5: xor edx,edx
0x4ab7: cmp esi,0xa
0x4aba: je 0x4b24
0x4abc: mov dword ptr [rsp],esi
0x4abf: mov rcx,rsp
0x4ac2: mov rdx,-0x1
0x4ac9: mov rsi,rax
0x4acc: mov qword ptr [rsp+0x4],0x0
0x4ad5: mov qword ptr [rsp+0xc],0x0
0x4ade: mov qword ptr [rsp+0x14],0x0
0x4ae7: mov qword ptr [rsp+0x1c],0x0
0x4af0: mov qword ptr [rsp+0x24],0x0
0x4af9: mov qword ptr [rsp+0x2c],0x0
0x4b02: mov dword ptr [rsp+0x34],0x0
0x4b0a: call 0x4550
0x4b0f: mov rcx,qword ptr [rsp+0x38]
0x4b14: xor rcx,qword ptr fs:0x28
0x4b1d: jne 0x4b29
0x4b1f: add rsp,0x48
0x4b23: ret 
0x4b24: call 0x1960
0x4b29: call 0x1a50
0x4b2e: nop 
0x4b30: sub rsp,0x48
0x4b34: mov rax,rdx
0x4b37: mov rdx,rcx
0x4b3a: mov rcx,qword ptr fs:0x28
0x4b43: mov qword ptr [rsp+0x38],rcx
0x4b48: xor ecx,ecx
0x4b4a: cmp esi,0xa
0x4b4d: je 0x4bb0
0x4b4f: mov dword ptr [rsp],esi
0x4b52: mov rcx,rsp
0x4b55: mov rsi,rax
0x4b58: mov qword ptr [rsp+0x4],0x0
0x4b61: mov qword ptr [rsp+0xc],0x0
0x4b6a: mov qword ptr [rsp+0x14],0x0
0x4b73: mov qword ptr [rsp+0x1c],0x0
0x4b7c: mov qword ptr [rsp+0x24],0x0
0x4b85: mov qword ptr [rsp+0x2c],0x0
0x4b8e: mov dword ptr [rsp+0x34],0x0
0x4b96: call 0x4550
0x4b9b: mov rdx,qword ptr [rsp+0x38]
0x4ba0: xor rdx,qword ptr fs:0x28
0x4ba9: jne 0x4bb5
0x4bab: add rsp,0x48
0x4baf: ret 
0x4bb0: call 0x1960
0x4bb5: call 0x1a50
0x4bba: nop word ptr [rax+rax]
0x4bc0: mov rdx,rsi
0x4bc3: mov esi,edi
0x4bc5: xor edi,edi
0x4bc7: jmp 0x4aa0
0x4bd0: mov rcx,rdx
0x4bd3: mov rdx,rsi
0x4bd6: mov esi,edi
0x4bd8: xor edi,edi
0x4bda: jmp 0x4b30
0x4be0: sub rsp,0x48
0x4be4: mov ecx,edx
0x4be6: mov rax,qword ptr fs:0x28
0x4bef: mov qword ptr [rsp+0x38],rax
0x4bf4: xor eax,eax
0x4bf6: mov rax,qword ptr [rip+0x204833]
0x4bfd: mov r8,rsp
0x4c00: and ecx,0x1f
0x4c03: movdqa xmm0,[rip+0x2047f5]
0x4c0b: mov qword ptr [rsp+0x30],rax
0x4c10: mov eax,edx
0x4c12: movaps [rsp],xmm0
0x4c16: shr al,0x5
0x4c19: movzx eax,al
0x4c1c: lea r9,[r8+rax*4+0x8]
0x4c21: movdqa xmm0,[rip+0x2047e7]
0x4c29: movaps [rsp+0x10],xmm0
0x4c2e: movdqa xmm0,[rip+0x2047ea]
0x4c36: movaps [rsp+0x20],xmm0
0x4c3b: mov edx,dword ptr [r9]
0x4c3e: mov eax,edx
0x4c40: shr eax,cl
0x4c42: not eax
0x4c44: and eax,0x1
0x4c47: shl eax,cl
0x4c49: mov rcx,r8
0x4c4c: xor eax,edx
0x4c4e: mov rdx,rsi
0x4c51: mov rsi,rdi
0x4c54: mov dword ptr [r9],eax
0x4c57: xor edi,edi
0x4c59: call 0x4550
0x4c5e: mov rsi,qword ptr [rsp+0x38]
0x4c63: xor rsi,qword ptr fs:0x28
0x4c6c: jne 0x4c73
0x4c6e: add rsp,0x48
0x4c72: ret 
0x4c73: call 0x1a50
0x4c78: nop dword ptr [rax+rax]
0x4c80: movsx edx,sil
0x4c84: mov rsi,-0x1
0x4c8b: jmp 0x4be0
0x4c90: mov edx,0x3a
0x4c95: mov rsi,-0x1
0x4c9c: jmp 0x4be0
0x4cb0: mov edx,0x3a
0x4cb5: jmp 0x4be0
0x4cc0: sub rsp,0x48
0x4cc4: mov rax,rdx
0x4cc7: mov rdx,qword ptr fs:0x28
0x4cd0: mov qword ptr [rsp+0x38],rdx
0x4cd5: xor edx,edx
0x4cd7: cmp esi,0xa
0x4cda: je 0x4d44
0x4cdc: mov dword ptr [rsp],esi
0x4cdf: mov rcx,rsp
0x4ce2: mov rdx,-0x1
0x4ce9: mov rsi,rax
0x4cec: mov qword ptr [rsp+0x4],0x0
0x4cf5: mov qword ptr [rsp+0xc],0x4000000
0x4cfe: mov qword ptr [rsp+0x14],0x0
0x4d07: mov qword ptr [rsp+0x1c],0x0
0x4d10: mov qword ptr [rsp+0x24],0x0
0x4d19: mov qword ptr [rsp+0x2c],0x0
0x4d22: mov dword ptr [rsp+0x34],0x0
0x4d2a: call 0x4550
0x4d2f: mov rcx,qword ptr [rsp+0x38]
0x4d34: xor rcx,qword ptr fs:0x28
0x4d3d: jne 0x4d49
0x4d3f: add rsp,0x48
0x4d43: ret 
0x4d44: call 0x1960
0x4d49: call 0x1a50
0x4d4e: nop 
0x4d50: sub rsp,0x48
0x4d54: mov r9,rcx
0x4d57: mov rcx,qword ptr [rip+0x2046d2]
0x4d5e: movdqa xmm0,[rip+0x20469a]
0x4d66: mov rax,qword ptr fs:0x28
0x4d6f: mov qword ptr [rsp+0x38],rax
0x4d74: xor eax,eax
0x4d76: movaps [rsp],xmm0
0x4d7a: test rsi,rsi
0x4d7d: mov qword ptr [rsp+0x30],rcx
0x4d82: mov dword ptr [rsp],0xa
0x4d89: movdqa xmm0,[rip+0x20467f]
0x4d91: movaps [rsp+0x10],xmm0
0x4d96: movdqa xmm0,[rip+0x204682]
0x4d9e: movaps [rsp+0x20],xmm0
0x4da3: je 0x4dd7
0x4da5: test rdx,rdx
0x4da8: je 0x4dd7
0x4daa: mov qword ptr [rsp+0x28],rsi
0x4daf: mov qword ptr [rsp+0x30],rdx
0x4db4: mov rcx,rsp
0x4db7: mov rdx,r8
0x4dba: mov rsi,r9
0x4dbd: call 0x4550
0x4dc2: mov rdi,qword ptr [rsp+0x38]
0x4dc7: xor rdi,qword ptr fs:0x28
0x4dd0: jne 0x4ddc
0x4dd2: add rsp,0x48
0x4dd6: ret 
0x4dd7: call 0x1960
0x4ddc: call 0x1a50
0x4de1: nop dword ptr [rax+rax]
0x4de6: nop word ptr cs:[rax+rax]
0x4df0: mov r8,-0x1
0x4df7: jmp 0x4d50
0x4e00: mov rcx,rdx
0x4e03: mov r8,-0x1
0x4e0a: mov rdx,rsi
0x4e0d: mov rsi,rdi
0x4e10: xor edi,edi
0x4e12: jmp 0x4d50
0x4e20: mov r8,rcx
0x4e23: mov rcx,rdx
0x4e26: mov rdx,rsi
0x4e29: mov rsi,rdi
0x4e2c: xor edi,edi
0x4e2e: jmp 0x4d50
0x4e40: lea rcx,[rip+0x2041f9]
0x4e47: jmp 0x4550
0x4e50: lea rcx,[rip+0x2041e9]
0x4e57: mov rdx,rsi
0x4e5a: mov rsi,rdi
0x4e5d: xor edi,edi
0x4e5f: jmp 0x4550
0x4e70: lea rcx,[rip+0x2041c9]
0x4e77: mov rdx,-0x1
0x4e7e: jmp 0x4550
0x4fe8: mov r8,rcx
0x4feb: mov rcx,rdx
0x4fee: lea rdx,[rip+0x1e1f]
0x4ff5: mov esi,0x1
0x4ffa: xor eax,eax
0x4ffc: call 0x1cd0
0x5001: jmp 0x4eec
0x51fd: push r12
0x51ff: push r15
0x5201: push r14
0x5203: mov r8,qword ptr [rsp+0x20]
0x5208: mov rcx,rbx
0x520b: mov rdx,rax
0x520e: mov rdi,rbp
0x5211: mov esi,0x1
0x5216: xor eax,eax
0x5218: call 0x1cd0
0x521d: add rsp,0x20
0x5221: add rsp,0x28
0x5225: pop rbx
0x5226: pop rbp
0x5227: pop r12
0x5229: pop r13
0x522b: pop r14
0x522d: pop r15
0x522f: ret 
0x5269: push r12
0x526b: push r15
0x526d: push r14
0x526f: mov r9,qword ptr [rsp+0x28]
0x5274: jmp 0x5203
0x52d0: xor r9d,r9d
0x52d3: cmp qword ptr [r8],0x0
0x52d7: je 0x52eb
0x52d9: nop dword ptr [rax]
0x52e0: add r9,0x1
0x52e4: cmp qword ptr [r8+r9*8],0x0
0x52e9: jne 0x52e0
0x52eb: jmp 0x4eb0
0x52f0: sub rsp,0x68
0x52f4: mov r10,r8
0x52f7: xor r9d,r9d
0x52fa: mov rax,qword ptr fs:0x28
0x5303: mov qword ptr [rsp+0x58],rax
0x5308: xor eax,eax
0x530a: mov r8,rsp
0x530d: nop dword ptr [rax]
0x5310: mov eax,dword ptr [r10]
0x5313: cmp eax,0x2f
0x5316: ja 0x535a
0x5318: mov r11d,eax
0x531b: add r11,qword ptr [r10+0x10]
0x531f: add eax,0x8
0x5322: mov dword ptr [r10],eax
0x5325: mov rax,qword ptr [r11]
0x5328: test rax,rax
0x532b: mov qword ptr [r8+r9*8],rax
0x532f: je 0x533b
0x5331: add r9,0x1
0x5335: cmp r9,0xa
0x5339: jne 0x5310
0x533b: call 0x4eb0
0x5340: mov rax,qword ptr [rsp+0x58]
0x5345: xor rax,qword ptr fs:0x28
0x534e: jne 0x5355
0x5350: add rsp,0x68
0x5354: ret 
0x5355: call 0x1a50
0x535a: mov r11,qword ptr [r10+0x8]
0x535e: lea rax,[r11+0x8]
0x5362: mov qword ptr [r10+0x8],rax
0x5366: jmp 0x5325
0x5430: call 0x1a50
0x543c: mov rax,rbx
0x543f: add rbx,0x8
0x5443: jmp 0x53f6
0x5450: push rbx
0x5451: lea rsi,[rip+0x1a0a]
0x5458: mov edx,0x5
0x545d: xor edi,edi
0x545f: call 0x1a20
0x5464: lea rdx,[rip+0x1a0c]
0x546b: mov rsi,rax
0x546e: mov edi,0x1
0x5473: xor eax,eax
0x5475: call 0x1c00
0x547a: lea rsi,[rip+0x1a0c]
0x5481: mov edx,0x5
0x5486: xor edi,edi
0x5488: call 0x1a20
0x548d: lea rcx,[rip+0x12bc]
0x5494: lea rdx,[rip+0xaac]
0x549b: mov rsi,rax
0x549e: mov edi,0x1
0x54a3: xor eax,eax
0x54a5: call 0x1c00
0x54aa: mov rbx,qword ptr [rip+0x203db7]
0x54b1: lea rsi,[rip+0x1c08]
0x54b8: xor edi,edi
0x54ba: mov edx,0x5
0x54bf: call 0x1a20
0x54c4: mov rsi,rbx
0x54c7: mov rdi,rax
0x54ca: pop rbx
0x54cb: jmp 0x1af0
0x54ea: nop word ptr [rax+rax]
0x54f0: mov rax,rdi
0x54f3: mul rsi
0x54f6: mov rdi,rax
0x54f9: seto al
0x54fc: test rdi,rdi
0x54ff: js 0x550b
0x5501: movzx eax,al
0x5504: test rax,rax
0x5507: jne 0x550b
0x5509: jmp 0x54d0
0x550b: sub rsp,0x8
0x550f: call 0x5720
0x5514: nop 
0x5516: nop word ptr cs:[rax+rax]
0x5520: jmp 0x54d0
0x5539: test rdi,rdi
0x553c: jne 0x5558
0x5558: call 0x1950
0x555d: xor eax,eax
0x555f: pop rbx
0x5560: ret 
0x5566: nop word ptr cs:[rax+rax]
0x5570: mov rax,rsi
0x5573: mul rdx
0x5576: mov rsi,rax
0x5579: seto al
0x557c: test rsi,rsi
0x557f: js 0x558b
0x5581: movzx eax,al
0x5584: test rax,rax
0x5587: jne 0x558b
0x5589: jmp 0x5530
0x558b: sub rsp,0x8
0x558f: call 0x5720
0x5594: nop 
0x5596: nop word ptr cs:[rax+rax]
0x55a0: test rdi,rdi
0x55a3: mov r9,rdx
0x55a6: mov rcx,qword ptr [rsi]
0x55a9: je 0x55e0
0x55ab: xor edx,edx
0x55ad: movabsq rax,0x5555555555555554
0x55b7: div r9
0x55ba: cmp rax,rcx
0x55bd: jbe 0x55fb
0x55bf: mov rax,rcx
0x55c2: shr rax, 1
0x55c5: lea rcx,[rax+rcx+0x1]
0x55ca: mov qword ptr [rsi],rcx
0x55cd: imul rcx,r9
0x55d1: mov rsi,rcx
0x55d4: jmp 0x5530
0x55e0: test rcx,rcx
0x55e3: je 0x5608
0x55e5: mov rax,rcx
0x55e8: mul r9
0x55eb: seto dl
0x55ee: test rax,rax
0x55f1: movzx edx,dl
0x55f4: js 0x55fb
0x55f6: test rdx,rdx
0x55f9: je 0x55ca
0x55fb: sub rsp,0x8
0x55ff: call 0x5720
0x5604: nop dword ptr [rax]
0x5608: xor edx,edx
0x560a: mov eax,0x80
0x560f: xor r8d,r8d
0x5612: div r9
0x5615: test rax,rax
0x5618: sete r8b
0x561c: lea rcx,[r8+rax]
0x5620: jmp 0x55e5
0x5630: test rdi,rdi
0x5633: mov rax,qword ptr [rsi]
0x5636: je 0x5660
0x5638: movabsq rdx,0x5555555555555553
0x5642: cmp rax,rdx
0x5645: ja 0x5671
0x5647: mov rdx,rax
0x564a: shr rdx, 1
0x564d: lea rax,[rdx+rax+0x1]
0x5652: mov qword ptr [rsi],rax
0x5655: mov rsi,rax
0x5658: jmp 0x5530
0x5660: test rax,rax
0x5663: mov edx,0x80
0x5668: cmove rax,rdx
0x566c: test rax,rax
0x566f: jns 0x5652
0x5671: sub rsp,0x8
0x5675: call 0x5720
0x567a: nop word ptr [rax+rax]
0x5680: push rbx
0x5681: mov rbx,rdi
0x5684: call 0x54d0
0x5689: mov rdx,rbx
0x568c: xor esi,esi
0x568e: mov rdi,rax
0x5691: pop rbx
0x5692: jmp 0x1ac0
0x56a0: mov rax,rdi
0x56a3: sub rsp,0x8
0x56a7: mul rsi
0x56aa: seto dl
0x56ad: test rax,rax
0x56b0: js 0x56c9
0x56b2: movzx edx,dl
0x56b5: test rdx,rdx
0x56b8: jne 0x56c9
0x56ba: call 0x1b00
0x56bf: test rax,rax
0x56c2: je 0x56c9
0x56c4: add rsp,0x8
0x56c8: ret 
0x56c9: call 0x5720
0x56ce: nop 
0x5750: call 0x1960
0x5755: nop word ptr cs:[rax+rax]
0x575f: nop 
0x57f8: xor eax,eax
0x57fa: cmp byte ptr [rcx],0x0
0x57fd: jne 0x57ce
0x57ff: ucomisd xmm0,[rip+0x1071]
0x5807: jp 0x57be
0x5809: jne 0x57be
0x580b: mov eax,0x1
0x5810: jmp 0x57ce
0x5821: nop word ptr cs:[rax+rax]
0x582b: nop dword ptr [rax+rax]
0x5830: push r13
0x5832: push r12
0x5834: mov r13,rsi
0x5837: push rbp
0x5838: push rbx
0x5839: mov rbx,rdi
0x583c: mov r12,rdx
0x583f: sub rsp,0x18
0x5843: mov rax,qword ptr fs:0x28
0x584c: mov qword ptr [rsp+0x8],rax
0x5851: xor eax,eax
0x5853: lea rax,[rsp+0x4]
0x5858: test rdi,rdi
0x585b: cmove rbx,rax
0x585f: mov rdi,rbx
0x5862: call 0x1a70
0x5867: cmp rax,-0x3
0x586b: mov rbp,rax
0x586e: jbe 0x5890
0x5870: test r12,r12
0x5873: je 0x5890
0x5875: xor edi,edi
0x5877: call 0x5c20
0x587c: test al,al
0x587e: jne 0x5890
0x5880: movzx eax,byte ptr [r13]
0x5885: mov ebp,0x1
0x588a: mov dword ptr [rbx],eax
0x588c: nop dword ptr [rax]
0x5890: mov rdx,qword ptr [rsp+0x8]
0x5895: xor rdx,qword ptr fs:0x28
0x589e: mov rax,rbp
0x58a1: jne 0x58ae
0x58a3: add rsp,0x18
0x58a7: pop rbx
0x58a8: pop rbp
0x58a9: pop r12
0x58ab: pop r13
0x58ad: ret 
0x58ae: call 0x1a50
0x58b3: nop word ptr cs:[rax+rax]
0x58bd: nop dword ptr [rax]
0x5a40: call 0x1a50
0x5a45: nop 
0x5a46: nop word ptr cs:[rax+rax]
0x5ba0: push r12
0x5ba2: push rbp
0x5ba3: mov rbp,rdi
0x5ba6: push rbx
0x5ba7: call 0x19b0
0x5bac: mov ebx,dword ptr [rbp]
0x5baf: mov rdi,rbp
0x5bb2: mov r12,rax
0x5bb5: call 0x5cc0
0x5bba: and ebx,0x20
0x5bbd: test ebx,ebx
0x5bbf: jne 0x5bd8
0x5bc1: test eax,eax
0x5bc3: je 0x5bcf
0x5bc5: test r12,r12
0x5bc8: mov eax,0xffffffff
0x5bcd: je 0x5c08
0x5bcf: pop rbx
0x5bd0: pop rbp
0x5bd1: pop r12
0x5bd3: ret 
0x5bd8: test eax,eax
0x5bda: jne 0x5bf8
0x5bdc: call 0x1970
0x5be1: mov dword ptr [rax],0x0
0x5be7: mov eax,0xffffffff
0x5bec: pop rbx
0x5bed: pop rbp
0x5bee: pop r12
0x5bf0: ret 
0x5bf8: pop rbx
0x5bf9: mov eax,0xffffffff
0x5bfe: pop rbp
0x5bff: pop r12
0x5c01: ret 
0x5c08: call 0x1970
0x5c0d: cmp dword ptr [rax],0x9
0x5c10: pop rbx
0x5c11: pop rbp
0x5c12: pop r12
0x5c14: setne al
0x5c17: movzx eax,al
0x5c1a: neg eax
0x5c1c: ret 
0x5c20: sub rsp,0x8
0x5c24: xor esi,esi
0x5c26: call 0x1bf0
0x5c2b: mov rdx,rax
0x5c2e: mov eax,0x1
0x5c33: test rdx,rdx
0x5c36: je 0x5c55
0x5c38: lea rdi,[rip+0x1551]
0x5c3f: mov ecx,0x2
0x5c44: mov rsi,rdx
0x5c47: rep cmpsb [rsi],es:[rdi]
0x5c49: seta cl
0x5c4c: sbb cl,0x0
0x5c4f: xor eax,eax
0x5c51: test cl,cl
0x5c53: jne 0x5c60
0x5c55: add rsp,0x8
0x5c59: ret 
0x5c60: lea rdi,[rip+0x152b]
0x5c67: mov ecx,0x6
0x5c6c: mov rsi,rdx
0x5c6f: rep cmpsb [rsi],es:[rdi]
0x5c71: seta al
0x5c74: sbb al,0x0
0x5c76: test al,al
0x5c78: setne al
0x5c7b: add rsp,0x8
0x5c7f: ret 
0x5c80: sub rsp,0x8
0x5c84: mov edi,0xe
0x5c89: call 0x1bb0
0x5c8e: test rax,rax
0x5c91: je 0x5cb0
0x5c93: cmp byte ptr [rax],0x0
0x5c96: lea rdx,[rip+0x14fb]
0x5c9d: cmove rax,rdx
0x5ca1: add rsp,0x8
0x5ca5: ret 
0x5cb0: lea rax,[rip+0x14e1]
0x5cb7: add rsp,0x8
0x5cbb: ret 
0x5cc0: push r12
0x5cc2: push rbp
0x5cc3: push rbx
0x5cc4: mov rbx,rdi
0x5cc7: call 0x1b80
0x5ccc: test eax,eax
0x5cce: mov rdi,rbx
0x5cd1: js 0x5d27
0x5cd3: call 0x1bd0
0x5cd8: test eax,eax
0x5cda: jne 0x5d08
0x5cdc: mov rdi,rbx
0x5cdf: call 0x5d40
0x5ce4: test eax,eax
0x5ce6: je 0x5d24
0x5ce8: call 0x1970
0x5ced: mov r12d,dword ptr [rax]
0x5cf0: mov rdi,rbx
0x5cf3: mov rbp,rax
0x5cf6: call 0x1a00
0x5cfb: test r12d,r12d
0x5cfe: jne 0x5d30
0x5d00: pop rbx
0x5d01: pop rbp
0x5d02: pop r12
0x5d04: ret 
0x5d08: mov rdi,rbx
0x5d0b: call 0x1b80
0x5d10: xor esi,esi
0x5d12: mov edx,0x1
0x5d17: mov edi,eax
0x5d19: call 0x1ab0
0x5d1e: cmp rax,-0x1
0x5d22: jne 0x5cdc
0x5d24: mov rdi,rbx
0x5d27: pop rbx
0x5d28: pop rbp
0x5d29: pop r12
0x5d2b: jmp 0x1a00
0x5d30: mov dword ptr [rbp],r12d
0x5d34: mov eax,0xffffffff
0x5d39: jmp 0x5d00
0x5d40: test rdi,rdi
0x5d43: push rbx
0x5d44: mov rbx,rdi
0x5d47: je 0x5d5a
0x5d49: call 0x1bd0
0x5d4e: test eax,eax
0x5d50: je 0x5d5a
0x5d52: test dword ptr [rbx],0x100
0x5d58: jne 0x5d68
0x5d5a: mov rdi,rbx
0x5d5d: pop rbx
0x5d5e: jmp 0x1ba0
0x5d68: mov rdi,rbx
0x5d6b: mov edx,0x1
0x5d70: xor esi,esi
0x5d72: call 0x5d80
0x5d77: mov rdi,rbx
0x5d7a: pop rbx
0x5d7b: jmp 0x1ba0
0x5d80: mov rax,qword ptr [rdi+0x8]
0x5d84: cmp qword ptr [rdi+0x10],rax
0x5d88: je 0x5d90
0x5d8a: jmp 0x1c30
0x5d90: mov rax,qword ptr [rdi+0x20]
0x5d94: cmp qword ptr [rdi+0x28],rax
0x5d98: jne 0x5d8a
0x5d9a: cmp qword ptr [rdi+0x48],0x0
0x5d9f: jne 0x5d8a
0x5da1: push r12
0x5da3: push rbp
0x5da4: mov r12d,edx
0x5da7: push rbx
0x5da8: mov rbp,rsi
0x5dab: mov rbx,rdi
0x5dae: call 0x1b80
0x5db3: mov edx,r12d
0x5db6: mov rsi,rbp
0x5db9: mov edi,eax
0x5dbb: call 0x1ab0
0x5dc0: cmp rax,-0x1
0x5dc4: je 0x5dd2
0x5dc6: and dword ptr [rbx],-0x11
0x5dc9: mov qword ptr [rbx+0x90],rax
0x5dd0: xor eax,eax
0x5dd2: pop rbx
0x5dd3: pop rbp
0x5dd4: pop r12
0x5dd6: ret 
0x5de0: push r15
0x5de2: push r14
0x5de4: mov r15,rdx
0x5de7: push r13
0x5de9: push r12
0x5deb: lea r12,[rip+0x202c3e]
0x5df2: push rbp
0x5df3: lea rbp,[rip+0x202c3e]
0x5dfa: push rbx
0x5dfb: mov r13d,edi
0x5dfe: mov r14,rsi
0x5e01: sub rbp,r12
0x5e04: sub rsp,0x8
0x5e08: sar rbp,0x3
0x5e0c: call 0x18f8
0x5e11: test rbp,rbp
0x5e14: je 0x5e36
0x5e16: xor ebx,ebx
0x5e18: nop dword ptr [rax+rax]
0x5e20: mov rdx,r15
0x5e23: mov rsi,r14
0x5e26: mov edi,r13d
0x5e29: call qword ptr [r12+rbx*8]
0x5e2d: add rbx,0x1
0x5e31: cmp rbp,rbx
0x5e34: jne 0x5e20
0x5e36: add rsp,0x8
0x5e3a: pop rbx
0x5e3b: pop rbp
0x5e3c: pop r12
0x5e3e: pop r13
0x5e40: pop r14
0x5e42: pop r15
0x5e44: ret 
0x5e50: rep ret 
