0x1230: sub rsp,0x8
0x1234: mov rax,qword ptr [rip+0x205da5]
0x123b: test rax,rax
0x123e: je 0x1242
0x1240: call rax
0x1242: add rsp,0x8
0x1246: ret 
0x1256: jmp qword ptr [rip+0x205c1c]
0x1260: jmp qword ptr [rip+0x205c1a]
0x12a0: jmp qword ptr [rip+0x205bfa]
0x12b0: jmp qword ptr [rip+0x205bf2]
0x12e0: jmp qword ptr [rip+0x205bda]
0x1330: jmp qword ptr [rip+0x205bb2]
0x1340: jmp qword ptr [rip+0x205baa]
0x1360: jmp qword ptr [rip+0x205b9a]
0x1380: jmp qword ptr [rip+0x205b8a]
0x13b0: jmp qword ptr [rip+0x205b72]
0x13d0: jmp qword ptr [rip+0x205b62]
0x13e0: jmp qword ptr [rip+0x205b5a]
0x13f0: jmp qword ptr [rip+0x205b52]
0x1400: jmp qword ptr [rip+0x205b4a]
0x1410: jmp qword ptr [rip+0x205b42]
0x1420: jmp qword ptr [rip+0x205b3a]
0x1430: jmp qword ptr [rip+0x205b32]
0x1480: jmp qword ptr [rip+0x205b0a]
0x14d0: jmp qword ptr [rip+0x205ae2]
0x14e0: jmp qword ptr [rip+0x205ada]
0x14f0: jmp qword ptr [rip+0x205ad2]
0x1500: jmp qword ptr [rip+0x205aea]
0x1618: lea rsi,[rip+0x322f]
0x161f: mov rbx,rax
0x1622: mov edx,0x5
0x1627: xor edi,edi
0x1629: call 0x1310
0x162e: xor edi,edi
0x1630: mov rdx,rax
0x1633: mov rcx,rbx
0x1636: xor esi,esi
0x1638: xor eax,eax
0x163a: call 0x1470
0x163f: mov edi,0x1
0x1644: call 0x1760
0x1649: nop dword ptr [rax]
0x167a: hlt 
0x167b: nop dword ptr [rax+rax]
0x1680: lea rdi,[rip+0x2059f9]
0x1687: push rbp
0x1688: lea rax,[rip+0x2059f1]
0x168f: cmp rax,rdi
0x1692: mov rbp,rsp
0x1695: je 0x16b0
0x1697: mov rax,qword ptr [rip+0x205932]
0x169e: test rax,rax
0x16a1: je 0x16b0
0x16a3: pop rbp
0x16a4: jmp rax
0x16b0: pop rbp
0x16b1: ret 
0x16c0: lea rdi,[rip+0x2059b9]
0x16c7: lea rsi,[rip+0x2059b2]
0x16ce: push rbp
0x16cf: sub rsi,rdi
0x16d2: mov rbp,rsp
0x16d5: sar rsi,0x3
0x16d9: mov rax,rsi
0x16dc: shr rax,0x3f
0x16e0: add rsi,rax
0x16e3: sar rsi, 1
0x16e6: je 0x1700
0x16e8: mov rax,qword ptr [rip+0x2058f9]
0x16ef: test rax,rax
0x16f2: je 0x1700
0x16f4: pop rbp
0x16f5: jmp rax
0x1700: pop rbp
0x1701: ret 
0x1721: push rbp
0x1722: mov rbp,rsp
0x1725: je 0x1733
0x1727: mov rdi,qword ptr [rip+0x2058da]
0x172e: call 0x1500
0x1733: call 0x1680
0x1738: mov byte ptr [rip+0x205989],0x1
0x173f: pop rbp
0x1740: ret 
0x1750: push rbp
0x1751: mov rbp,rsp
0x1754: pop rbp
0x1755: jmp 0x16c0
0x183d: iretl 
0x1ab0: mov qword ptr [rip+0x205621],rdi
0x1ab7: ret 
0x1ac0: mov byte ptr [rip+0x205609],dil
0x1ac7: ret 
0x1ad0: push rbp
0x1ad1: push rbx
0x1ad2: sub rsp,0x8
0x1ad6: mov rdi,qword ptr [rip+0x2055ab]
0x1add: call 0x4470
0x1ae2: test eax,eax
0x1ae4: je 0x1afc
0x1ae6: call 0x1280
0x1aeb: cmp byte ptr [rip+0x2055de],0x0
0x1af2: mov rbx,rax
0x1af5: je 0x1b13
0x1af7: cmp dword ptr [rax],0x20
0x1afa: jne 0x1b13
0x1afc: mov rdi,qword ptr [rip+0x2055bd]
0x1b03: call 0x4470
0x1b08: test eax,eax
0x1b0a: jne 0x1b52
0x1b0c: add rsp,0x8
0x1b10: pop rbx
0x1b11: pop rbp
0x1b12: ret 
0x1b13: lea rsi,[rip+0x2efc]
0x1b1a: xor edi,edi
0x1b1c: mov edx,0x5
0x1b21: call 0x1310
0x1b26: mov rdi,qword ptr [rip+0x2055ab]
0x1b2d: mov rbp,rax
0x1b30: test rdi,rdi
0x1b33: je 0x1b5d
0x1b35: call 0x3910
0x1b3a: mov esi,dword ptr [rbx]
0x1b3c: lea rdx,[rip+0x2edf]
0x1b43: mov rcx,rax
0x1b46: mov r8,rbp
0x1b49: xor edi,edi
0x1b4b: xor eax,eax
0x1b4d: call 0x1470
0x1b52: mov edi,dword ptr [rip+0x2054c0]
0x1b58: call 0x12a0
0x1b5d: mov esi,dword ptr [rbx]
0x1b5f: lea rdx,[rip+0x2ec0]
0x1b66: mov rcx,rax
0x1b69: xor edi,edi
0x1b6b: xor eax,eax
0x1b6d: call 0x1470
0x1b72: jmp 0x1b52
0x1b80: push r13
0x1b82: push r12
0x1b84: mov r13,r8
0x1b87: push rbp
0x1b88: push rbx
0x1b89: mov rbp,rdx
0x1b8c: mov r12,rcx
0x1b8f: sub rsp,0xe8
0x1b96: test al,al
0x1b98: je 0x1bd4
0x1b9a: movaps [rsp+0x60],xmm0
0x1b9f: movaps [rsp+0x70],xmm1
0x1ba4: movaps [rsp+0x80],xmm2
0x1bac: movaps [rsp+0x90],xmm3
0x1bb4: movaps [rsp+0xa0],xmm4
0x1bbc: movaps [rsp+0xb0],xmm5
0x1bc4: movaps [rsp+0xc0],xmm6
0x1bcc: movaps [rsp+0xd0],xmm7
0x1bd4: mov rax,qword ptr fs:0x28
0x1bdd: mov qword ptr [rsp+0x28],rax
0x1be2: xor eax,eax
0x1be4: cmp edi,0x2
0x1be7: mov ebx,dword ptr [rip+0x2054b3]
0x1bed: mov dword ptr [rip+0x2054a9],0x0
0x1bf7: je 0x1c30
0x1bf9: mov rax,qword ptr [rsp+0x28]
0x1bfe: xor rax,qword ptr fs:0x28
0x1c07: mov dword ptr [rip+0x205493],ebx
0x1c0d: mov dword ptr [rip+0x205479],0x0
0x1c17: jne 0x1cba
0x1c1d: add rsp,0xe8
0x1c24: pop rbx
0x1c25: pop rbp
0x1c26: pop r12
0x1c28: pop r13
0x1c2a: ret 
0x1c30: lea rcx,[rip+0x204f89]
0x1c37: lea rdx,[rip+0x2deb]
0x1c3e: xor r8d,r8d
0x1c41: mov qword ptr [rsp+0x8],r9
0x1c46: call 0x1350
0x1c4b: cmp eax,-0x1
0x1c4e: je 0x1bf9
0x1c50: cmp eax,0x68
0x1c53: mov r9,qword ptr [rsp+0x8]
0x1c58: je 0x1cb0
0x1c5a: cmp eax,0x76
0x1c5d: jne 0x1bf9
0x1c5f: lea rax,[rsp+0x110]
0x1c67: mov rdi,qword ptr [rip+0x20541a]
0x1c6e: lea r8,[rsp+0x10]
0x1c73: mov rcx,r13
0x1c76: mov rdx,r12
0x1c79: mov rsi,rbp
0x1c7c: mov qword ptr [rsp+0x18],rax
0x1c81: lea rax,[rsp+0x30]
0x1c86: mov dword ptr [rsp+0x10],0x30
0x1c8e: mov dword ptr [rsp+0x14],0x30
0x1c96: mov qword ptr [rsp+0x20],rax
0x1c9b: call 0x3f70
0x1ca0: xor edi,edi
0x1ca2: call 0x14a0
0x1ca7: nop word ptr [rax+rax]
0x1cb0: xor edi,edi
0x1cb2: call r9
0x1cb5: jmp 0x1bf9
0x1cba: call 0x1340
0x1cbf: nop 
0x1ce4: movaps [rsp+0x50],xmm0
0x1ce9: movaps [rsp+0x60],xmm1
0x1cee: movaps [rsp+0x70],xmm2
0x1cf3: movaps [rsp+0x80],xmm3
0x1cfb: movaps [rsp+0x90],xmm4
0x1d03: movaps [rsp+0xa0],xmm5
0x1d0b: movaps [rsp+0xb0],xmm6
0x1d13: movaps [rsp+0xc0],xmm7
0x1db7: nop word ptr [rax+rax]
0x1df4: jmp 0x1dc8
0x1df6: call 0x1340
0x1dfb: nop dword ptr [rax+rax]
0x1e9f: nop 
0x1ea0: push rbp
0x1ea1: push rbx
0x1ea2: mov rbp,rdi
0x1ea5: mov ebx,esi
0x1ea7: sub rsp,0x8
0x1eab: call 0x4550
0x1eb0: movzx edx,byte ptr [rax]
0x1eb3: and edx,-0x21
0x1eb6: cmp dl,0x55
0x1eb9: je 0x1f30
0x1ebb: cmp dl,0x47
0x1ebe: je 0x1ee0
0x1ec0: lea rax,[rip+0x2bc4]
0x1ec7: lea rdx,[rip+0x2bbf]
0x1ece: cmp ebx,0x9
0x1ed1: cmovne rax,rdx
0x1ed5: add rsp,0x8
0x1ed9: pop rbx
0x1eda: pop rbp
0x1edb: ret 
0x1ee0: movzx edx,byte ptr [rax+0x1]
0x1ee4: and edx,-0x21
0x1ee7: cmp dl,0x42
0x1eea: jne 0x1ec0
0x1eec: cmp byte ptr [rax+0x2],0x31
0x1ef0: jne 0x1ec0
0x1ef2: cmp byte ptr [rax+0x3],0x38
0x1ef6: jne 0x1ec0
0x1ef8: cmp byte ptr [rax+0x4],0x30
0x1efc: jne 0x1ec0
0x1efe: cmp byte ptr [rax+0x5],0x33
0x1f02: jne 0x1ec0
0x1f04: cmp byte ptr [rax+0x6],0x30
0x1f08: jne 0x1ec0
0x1f0a: cmp byte ptr [rax+0x7],0x0
0x1f0e: jne 0x1ec0
0x1f10: cmp byte ptr [rbp],0x60
0x1f14: lea rax,[rip+0x2b69]
0x1f1b: lea rdx,[rip+0x2b66]
0x1f22: cmovne rax,rdx
0x1f26: add rsp,0x8
0x1f2a: pop rbx
0x1f2b: pop rbp
0x1f2c: ret 
0x1f30: movzx edx,byte ptr [rax+0x1]
0x1f34: and edx,-0x21
0x1f37: cmp dl,0x54
0x1f3a: jne 0x1ec0
0x1f3c: movzx edx,byte ptr [rax+0x2]
0x1f40: and edx,-0x21
0x1f43: cmp dl,0x46
0x1f46: jne 0x1ec0
0x1f4c: cmp byte ptr [rax+0x3],0x2d
0x1f50: jne 0x1ec0
0x1f56: cmp byte ptr [rax+0x4],0x38
0x1f5a: jne 0x1ec0
0x1f60: cmp byte ptr [rax+0x5],0x0
0x1f64: jne 0x1ec0
0x1f6a: cmp byte ptr [rbp],0x60
0x1f6e: lea rax,[rip+0x2b07]
0x1f75: lea rdx,[rip+0x2b04]
0x1f7c: cmovne rax,rdx
0x1f80: add rsp,0x8
0x1f84: pop rbx
0x1f85: pop rbp
0x1f86: ret 
0x2063: xor r11d,r11d
0x2066: mov rax,rbp
0x2069: mov r8d,r12d
0x206c: mov rbp,r11
0x206f: mov r11,rax
0x2072: nop word ptr [rax+rax]
0x2078: cmp r11,rbp
0x207b: setne r12b
0x207f: cmp r11,-0x1
0x2083: jne 0x2092
0x2085: mov rax,qword ptr [rsp+0x10]
0x208a: cmp byte ptr [rax+rbp],0x0
0x208e: setne r12b
0x2092: test r12b,r12b
0x2095: je 0x26f0
0x209b: cmp dword ptr [rsp+0x8],0x2
0x20a0: mov rdi,qword ptr [rsp+0x10]
0x20a5: lea r9,[rdi+rbp]
0x20a9: setne al
0x20ac: and al,byte ptr [rsp+0xd]
0x20b0: mov r10d,eax
0x20b3: je 0x2160
0x20b9: mov rax,qword ptr [rsp+0x18]
0x20be: test rax,rax
0x20c1: je 0x24f0
0x20c7: cmp r11,-0x1
0x20cb: lea rbx,[rbp+rax]
0x20d0: jne 0x2100
0x20d2: cmp rax,0x1
0x20d6: jbe 0x2100
0x20d8: mov byte ptr [rsp+0x38],r8b
0x20dd: mov byte ptr [rsp+0x30],r10b
0x20e2: mov qword ptr [rsp+0x28],r9
0x20e7: call 0x1330
0x20ec: movzx r8d,byte ptr [rsp+0x38]
0x20f2: movzx r10d,byte ptr [rsp+0x30]
0x20f8: mov r11,rax
0x20fb: mov r9,qword ptr [rsp+0x28]
0x2100: cmp rbx,r11
0x2103: mov byte ptr [rsp+0x28],r10b
0x2108: ja 0x26c0
0x210e: mov rdx,qword ptr [rsp+0x18]
0x2113: mov rsi,qword ptr [rsp+0x48]
0x2118: mov rdi,r9
0x211b: mov qword ptr [rsp+0x40],r11
0x2120: mov byte ptr [rsp+0x38],r8b
0x2125: mov qword ptr [rsp+0x30],r9
0x212a: call 0x13b0
0x212f: test eax,eax
0x2131: mov r9,qword ptr [rsp+0x30]
0x2136: movzx r8d,byte ptr [rsp+0x38]
0x213c: mov r11,qword ptr [rsp+0x40]
0x2141: jne 0x26c0
0x2147: cmp byte ptr [rsp+0xf],0x0
0x214c: movzx r10d,byte ptr [rsp+0x28]
0x2152: jne 0x30d5
0x2158: nop dword ptr [rax+rax]
0x2160: movzx ebx,byte ptr [r9]
0x2164: cmp bl,0x7e
0x2167: ja 0x2488
0x216d: lea rcx,[rip+0x2998]
0x2174: movzx edx,bl
0x2177: movsxd rax,dword ptr [rcx+rdx*4]
0x217b: add rax,rcx
0x217e: jmp rax
0x21b8: cmp byte ptr [rsp+0xd],0x1
0x21bd: jne 0x22d2
0x21c3: test dl,dl
0x21c5: jne 0x22d2
0x21cb: mov rsi,qword ptr [rsp+0x20]
0x21d0: test rsi,rsi
0x21d3: je 0x21e9
0x21d5: mov edx,ebx
0x21d7: shr dl,0x5
0x21da: movzx edx,dl
0x21dd: mov edx,dword ptr [rsi+rdx*4]
0x21e0: btl edx,ebx
0x21e3: jb 0x2333
0x21e9: test r10b,r10b
0x21ec: jne 0x2333
0x21f2: xor eax,0x1
0x21f5: add rbp,0x1
0x21f9: and eax,r8d
0x21fc: test al,al
0x21fe: je 0x2220
0x2200: cmp r13,r15
0x2203: jbe 0x220a
0x2205: mov byte ptr [r14+r15],0x27
0x220a: lea rax,[r15+0x1]
0x220e: cmp r13,rax
0x2211: jbe 0x2219
0x2213: mov byte ptr [r14+r15+0x1],0x27
0x2219: add r15,0x2
0x221d: xor r8d,r8d
0x2220: cmp r15,r13
0x2223: jae 0x2229
0x2225: mov byte ptr [r14+r15],bl
0x2229: movzx edi,byte ptr [rsp+0xe]
0x222e: add r15,0x1
0x2232: mov eax,0x0
0x2237: test r12b,r12b
0x223a: cmove edi,eax
0x223d: mov byte ptr [rsp+0xe],dil
0x2242: jmp 0x2078
0x22d2: cmp byte ptr [rsp+0xf],0x0
0x22d7: jne 0x21cb
0x22dd: jmp 0x21e9
0x2333: cmp dword ptr [rsp+0x8],0x2
0x2338: sete dl
0x233b: cmp byte ptr [rsp+0xf],0x0
0x2340: mov eax,edx
0x2342: jne 0x2b98
0x2348: mov eax,r8d
0x234b: xor eax,0x1
0x234e: and al,dl
0x2350: je 0x2381
0x2352: cmp r13,r15
0x2355: jbe 0x235c
0x2357: mov byte ptr [r14+r15],0x27
0x235c: lea rdx,[r15+0x1]
0x2360: cmp r13,rdx
0x2363: jbe 0x236b
0x2365: mov byte ptr [r14+r15+0x1],0x24
0x236b: lea rdx,[r15+0x2]
0x236f: cmp r13,rdx
0x2372: jbe 0x237a
0x2374: mov byte ptr [r14+r15+0x2],0x27
0x237a: add r15,0x3
0x237e: mov r8d,eax
0x2381: cmp r13,r15
0x2384: jbe 0x238b
0x2386: mov byte ptr [r14+r15],0x5c
0x238b: add r15,0x1
0x238f: add rbp,0x1
0x2393: jmp 0x2220
0x2480: xor r10d,r10d
0x2483: nop dword ptr [rax+rax]
0x2488: cmp qword ptr [rsp+0x58],0x1
0x248e: jne 0x2838
0x2494: mov qword ptr [rsp+0x38],r11
0x2499: mov byte ptr [rsp+0x30],r8b
0x249e: mov byte ptr [rsp+0x28],r10b
0x24a3: call 0x14f0
0x24a8: mov rcx,qword ptr [rax]
0x24ab: movzx edx,bl
0x24ae: movzx r10d,byte ptr [rsp+0x28]
0x24b4: movzx r8d,byte ptr [rsp+0x30]
0x24ba: mov r11,qword ptr [rsp+0x38]
0x24bf: mov edi,0x1
0x24c4: movzx eax,word ptr [rcx+rdx*2]
0x24c8: and ax,0x4000
0x24cc: setne r12b
0x24d0: sete al
0x24d3: and al,byte ptr [rsp+0xd]
0x24d7: test al,al
0x24d9: jne 0x2e71
0x24df: cmp dword ptr [rsp+0x8],0x2
0x24e4: sete dl
0x24e7: jmp 0x21b8
0x24f0: movzx ebx,byte ptr [r9]
0x24f4: cmp bl,0x7e
0x24f7: ja 0x2480
0x24f9: lea rcx,[rip+0x2808]
0x2500: movzx edx,bl
0x2503: movsxd rax,dword ptr [rcx+rdx*4]
0x2507: add rax,rcx
0x250a: jmp rax
0x26c0: xor r10d,r10d
0x26c3: jmp 0x2160
0x26f0: cmp dword ptr [rsp+0x8],0x2
0x26f5: movzx ebx,byte ptr [rsp+0xf]
0x26fa: mov r12d,r8d
0x26fd: mov rbp,r11
0x2700: sete dl
0x2703: mov eax,ebx
0x2705: test r15,r15
0x2708: sete cl
0x270b: and eax,edx
0x270d: and al,cl
0x270f: jne 0x3176
0x2715: mov eax,ebx
0x2717: xor eax,0x1
0x271a: and dl,al
0x271c: je 0x308c
0x2722: cmp byte ptr [rsp+0x7c],0x0
0x2727: je 0x308a
0x272d: cmp byte ptr [rsp+0xe],0x0
0x2732: jne 0x312d
0x2738: test r13,r13
0x273b: sete al
0x273e: cmp qword ptr [rsp+0x50],0x0
0x2744: setne dl
0x2747: and al,dl
0x2749: je 0x316c
0x274f: mov r13,qword ptr [rsp+0x50]
0x2754: lea rbx,[rip+0x2332]
0x275b: mov byte ptr [r14],0x27
0x275f: mov dword ptr [rsp+0x8],0x2
0x2767: mov r15d,0x1
0x276d: mov qword ptr [rsp+0x18],0x1
0x2776: mov byte ptr [rsp+0xf],0x0
0x277b: mov qword ptr [rsp+0x48],rbx
0x2780: mov byte ptr [rsp+0x7c],al
0x2784: jmp 0x2063
0x2838: lea rax,[rsp+0xa0]
0x2840: cmp r11,-0x1
0x2844: mov qword ptr [rsp+0xa0],0x0
0x2850: mov qword ptr [rsp+0x28],rax
0x2855: jne 0x2884
0x2857: mov rdi,qword ptr [rsp+0x10]
0x285c: mov byte ptr [rsp+0x40],r8b
0x2861: mov byte ptr [rsp+0x38],r10b
0x2866: mov qword ptr [rsp+0x30],r9
0x286b: call 0x1330
0x2870: movzx r8d,byte ptr [rsp+0x40]
0x2876: movzx r10d,byte ptr [rsp+0x38]
0x287c: mov r11,rax
0x287f: mov r9,qword ptr [rsp+0x30]
0x2884: lea rax,[rsp+0x9c]
0x288c: xor ecx,ecx
0x288e: mov byte ptr [rsp+0x7e],bl
0x2892: mov byte ptr [rsp+0x7d],r8b
0x2897: mov rbx,rcx
0x289a: mov qword ptr [rsp+0x88],r9
0x28a2: mov qword ptr [rsp+0x38],rax
0x28a7: mov byte ptr [rsp+0x7f],r10b
0x28ac: mov qword ptr [rsp+0x80],r15
0x28b4: mov qword ptr [rsp+0x40],r14
0x28b9: mov qword ptr [rsp+0x70],r13
0x28be: mov qword ptr [rsp+0x30],r11
0x28c3: mov rax,qword ptr [rsp+0x10]
0x28c8: lea r14,[rbp+rbx]
0x28cd: mov rdx,qword ptr [rsp+0x30]
0x28d2: mov rcx,qword ptr [rsp+0x28]
0x28d7: mov rdi,qword ptr [rsp+0x38]
0x28dc: lea r13,[rax+r14]
0x28e0: sub rdx,r14
0x28e3: mov rsi,r13
0x28e6: call 0x43e0
0x28eb: test rax,rax
0x28ee: mov r15,rax
0x28f1: je 0x2941
0x28f3: cmp rax,-0x1
0x28f7: je 0x2f15
0x28fd: cmp rax,-0x2
0x2901: je 0x2ea1
0x2907: cmp dword ptr [rsp+0x8],0x2
0x290c: sete al
0x290f: and al,byte ptr [rsp+0xf]
0x2913: jne 0x2ab0
0x2919: mov edi,dword ptr [rsp+0x9c]
0x2920: call 0x14e0
0x2925: mov rdi,qword ptr [rsp+0x28]
0x292a: test eax,eax
0x292c: mov eax,0x0
0x2931: cmove r12d,eax
0x2935: add rbx,r15
0x2938: call 0x14d0
0x293d: test eax,eax
0x293f: je 0x28c3
0x2941: mov edx,r12d
0x2944: mov rdi,rbx
0x2947: movzx r8d,byte ptr [rsp+0x7d]
0x294d: xor edx,0x1
0x2950: movzx ebx,byte ptr [rsp+0x7e]
0x2955: movzx r10d,byte ptr [rsp+0x7f]
0x295b: and dl,byte ptr [rsp+0xd]
0x295f: mov r15,qword ptr [rsp+0x80]
0x2967: mov r14,qword ptr [rsp+0x40]
0x296c: mov r13,qword ptr [rsp+0x70]
0x2971: mov r11,qword ptr [rsp+0x30]
0x2976: cmp rdi,0x1
0x297a: jbe 0x2f7b
0x2980: mov rcx,rdi
0x2983: xor esi,esi
0x2985: movzx r9d,byte ptr [rsp+0xf]
0x298b: add rcx,rbp
0x298e: mov rdi,qword ptr [rsp+0x10]
0x2993: jmp 0x2a4e
0x29a0: cmp dword ptr [rsp+0x8],0x2
0x29a5: sete al
0x29a8: test r9b,r9b
0x29ab: jne 0x2e60
0x29b1: mov esi,r8d
0x29b4: xor esi,0x1
0x29b7: and al,sil
0x29ba: je 0x29eb
0x29bc: cmp r13,r15
0x29bf: jbe 0x29c6
0x29c1: mov byte ptr [r14+r15],0x27
0x29c6: lea rsi,[r15+0x1]
0x29ca: cmp r13,rsi
0x29cd: jbe 0x29d5
0x29cf: mov byte ptr [r14+r15+0x1],0x24
0x29d5: lea rsi,[r15+0x2]
0x29d9: cmp r13,rsi
0x29dc: jbe 0x29e4
0x29de: mov byte ptr [r14+r15+0x2],0x27
0x29e4: add r15,0x3
0x29e8: mov r8d,eax
0x29eb: cmp r13,r15
0x29ee: jbe 0x29f5
0x29f0: mov byte ptr [r14+r15],0x5c
0x29f5: lea rax,[r15+0x1]
0x29f9: cmp r13,rax
0x29fc: jbe 0x2a0b
0x29fe: mov eax,ebx
0x2a00: shr al,0x6
0x2a03: add eax,0x30
0x2a06: mov byte ptr [r14+r15+0x1],al
0x2a0b: lea rax,[r15+0x2]
0x2a0f: cmp r13,rax
0x2a12: jbe 0x2a24
0x2a14: mov eax,ebx
0x2a16: shr al,0x3
0x2a19: and eax,0x7
0x2a1c: add eax,0x30
0x2a1f: mov byte ptr [r14+r15+0x2],al
0x2a24: and ebx,0x7
0x2a27: add rbp,0x1
0x2a2b: add r15,0x3
0x2a2f: add ebx,0x30
0x2a32: cmp rbp,rcx
0x2a35: jae 0x2220
0x2a3b: mov esi,edx
0x2a3d: cmp r13,r15
0x2a40: jbe 0x2a46
0x2a42: mov byte ptr [r14+r15],bl
0x2a46: movzx ebx,byte ptr [rdi+rbp]
0x2a4a: add r15,0x1
0x2a4e: test dl,dl
0x2a50: jne 0x29a0
0x2a56: mov eax,esi
0x2a58: xor eax,0x1
0x2a5b: and eax,r8d
0x2a5e: test r10b,r10b
0x2a61: je 0x2a71
0x2a63: cmp r13,r15
0x2a66: jbe 0x2a6d
0x2a68: mov byte ptr [r14+r15],0x5c
0x2a6d: add r15,0x1
0x2a71: add rbp,0x1
0x2a75: cmp rbp,rcx
0x2a78: jae 0x21fc
0x2a7e: test al,al
0x2a80: je 0x2e7e
0x2a86: cmp r13,r15
0x2a89: jbe 0x2a90
0x2a8b: mov byte ptr [r14+r15],0x27
0x2a90: lea rax,[r15+0x1]
0x2a94: cmp r13,rax
0x2a97: jbe 0x2a9f
0x2a99: mov byte ptr [r14+r15+0x1],0x27
0x2a9f: add r15,0x2
0x2aa3: xor r10d,r10d
0x2aa6: xor r8d,r8d
0x2aa9: jmp 0x2a3d
0x2ab0: cmp r15,0x1
0x2ab4: je 0x2919
0x2aba: mov rdi,qword ptr [rsp+0x10]
0x2abf: lea rcx,[rdi+r15]
0x2ac3: lea rdx,[rdi+r14+0x1]
0x2ac8: lea r8,[rcx+r14]
0x2acc: jmp 0x2add
0x2ad0: add rdx,0x1
0x2ad4: cmp r8,rdx
0x2ad7: je 0x2919
0x2add: movzx ecx,byte ptr [rdx]
0x2ae0: sub ecx,0x5b
0x2ae3: cmp cl,0x21
0x2ae6: ja 0x2ad0
0x2ae8: mov esi,0x1
0x2aed: shl rsi,cl
0x2af0: mov rcx,rsi
0x2af3: movabsq rsi,0x20000002b
0x2afd: test rcx,rsi
0x2b00: je 0x2ad0
0x2b02: mov r14,qword ptr [rsp+0x40]
0x2b07: mov r13,qword ptr [rsp+0x70]
0x2b0c: mov rbp,qword ptr [rsp+0x30]
0x2b11: mov dword ptr [rsp+0x8],0x2
0x2b19: cmp byte ptr [rsp+0xd],0x0
0x2b1e: je 0x2b30
0x2b20: test al,al
0x2b22: mov eax,0x4
0x2b27: cmove eax,dword ptr [rsp+0x8]
0x2b2c: mov dword ptr [rsp+0x8],eax
0x2b30: sub rsp,0x8
0x2b34: mov rcx,rbp
0x2b37: mov rsi,r13
0x2b3a: push qword ptr [rsp+0x68]
0x2b3e: push qword ptr [rsp+0x78]
0x2b42: mov rdi,r14
0x2b45: push 0x0
0x2b47: mov r9d,dword ptr [rsp+0x98]
0x2b4f: mov r8d,dword ptr [rsp+0x28]
0x2b54: mov rdx,qword ptr [rsp+0x30]
0x2b59: and r9d,-0x3
0x2b5d: call 0x1f90
0x2b62: add rsp,0x20
0x2b66: mov r15,rax
0x2b69: mov rbx,qword ptr [rsp+0xa8]
0x2b71: xor rbx,qword ptr fs:0x28
0x2b7a: mov rax,r15
0x2b7d: jne 0x3183
0x2b83: add rsp,0xb8
0x2b8a: pop rbx
0x2b8b: pop rbp
0x2b8c: pop r12
0x2b8e: pop r13
0x2b90: pop r14
0x2b92: pop r15
0x2b94: ret 
0x2b98: mov rbp,r11
0x2b9b: jmp 0x2b19
0x2c01: test r13,r13
0x2c04: jne 0x319a
0x2c0a: lea rax,[rip+0x1e7c]
0x2c11: mov qword ptr [rsp+0x50],0x0
0x2c1a: mov byte ptr [rsp+0xe],0x1
0x2c1f: mov byte ptr [rsp+0x7c],0x0
0x2c24: xor r12d,r12d
0x2c27: mov byte ptr [rsp+0xf],0x0
0x2c2c: mov qword ptr [rsp+0x18],0x1
0x2c35: mov qword ptr [rsp+0x48],rax
0x2c3a: mov r15d,0x1
0x2c40: mov dword ptr [rsp+0x8],0x2
0x2c48: jmp 0x2063
0x2e60: movzx ebx,byte ptr [rsp+0xf]
0x2e65: mov rbp,r11
0x2e68: mov byte ptr [rsp+0xd],bl
0x2e6c: jmp 0x2b19
0x2e71: movzx edx,byte ptr [rsp+0xd]
0x2e76: xor r12d,r12d
0x2e79: jmp 0x2980
0x2e7e: xor r10d,r10d
0x2e81: jmp 0x2a3d
0x2ea1: mov r11,qword ptr [rsp+0x30]
0x2ea6: mov rsi,r14
0x2ea9: mov rcx,r13
0x2eac: mov rax,rbx
0x2eaf: mov rdi,rbx
0x2eb2: movzx r8d,byte ptr [rsp+0x7d]
0x2eb8: movzx ebx,byte ptr [rsp+0x7e]
0x2ebd: mov r9,qword ptr [rsp+0x88]
0x2ec5: cmp rsi,r11
0x2ec8: movzx r10d,byte ptr [rsp+0x7f]
0x2ece: mov r15,qword ptr [rsp+0x80]
0x2ed6: mov r14,qword ptr [rsp+0x40]
0x2edb: mov r13,qword ptr [rsp+0x70]
0x2ee0: jae 0x2f08
0x2ee2: cmp byte ptr [rcx],0x0
0x2ee5: jne 0x2ef7
0x2ee7: jmp 0x2f08
0x2ef0: cmp byte ptr [r9+rax],0x0
0x2ef5: je 0x2f05
0x2ef7: add rax,0x1
0x2efb: lea rdx,[rbp+rax]
0x2f00: cmp r11,rdx
0x2f03: ja 0x2ef0
0x2f05: mov rdi,rax
0x2f08: movzx edx,byte ptr [rsp+0xd]
0x2f0d: xor r12d,r12d
0x2f10: jmp 0x2976
0x2f15: mov rdi,rbx
0x2f18: movzx r8d,byte ptr [rsp+0x7d]
0x2f1e: movzx ebx,byte ptr [rsp+0x7e]
0x2f23: movzx r10d,byte ptr [rsp+0x7f]
0x2f29: mov r15,qword ptr [rsp+0x80]
0x2f31: xor r12d,r12d
0x2f34: mov r14,qword ptr [rsp+0x40]
0x2f39: mov r13,qword ptr [rsp+0x70]
0x2f3e: mov r11,qword ptr [rsp+0x30]
0x2f43: movzx edx,byte ptr [rsp+0xd]
0x2f48: jmp 0x2976
0x2f7b: mov eax,edx
0x2f7d: jmp 0x24d7
0x308a: mov eax,edx
0x308c: mov rbx,qword ptr [rsp+0x48]
0x3091: test rbx,rbx
0x3094: je 0x30c2
0x3096: test al,al
0x3098: je 0x30c2
0x309a: movzx ecx,byte ptr [rbx]
0x309d: mov rax,rbx
0x30a0: test cl,cl
0x30a2: je 0x30c2
0x30a4: mov rdx,r15
0x30a7: sub rax,r15
0x30aa: cmp r13,rdx
0x30ad: jbe 0x30b3
0x30af: mov byte ptr [r14+rdx],cl
0x30b3: add rdx,0x1
0x30b7: movzx ecx,byte ptr [rax+rdx]
0x30bb: test cl,cl
0x30bd: jne 0x30aa
0x30bf: mov r15,rdx
0x30c2: cmp r13,r15
0x30c5: jbe 0x2b69
0x30cb: mov byte ptr [r14+r15],0x0
0x30d0: jmp 0x2b69
0x30d5: cmp dword ptr [rsp+0x8],0x2
0x30da: movzx ebx,byte ptr [rsp+0xf]
0x30df: mov rbp,r11
0x30e2: sete al
0x30e5: mov byte ptr [rsp+0xd],bl
0x30e9: jmp 0x2b19
0x312d: sub rsp,0x8
0x3131: mov r8d,0x5
0x3137: mov rcx,r11
0x313a: push qword ptr [rsp+0x68]
0x313e: push qword ptr [rsp+0x78]
0x3142: mov rdi,r14
0x3145: push qword ptr [rsp+0x38]
0x3149: mov r9d,dword ptr [rsp+0x98]
0x3151: mov rdx,qword ptr [rsp+0x30]
0x3156: mov rsi,qword ptr [rsp+0x70]
0x315b: call 0x1f90
0x3160: add rsp,0x20
0x3164: mov r15,rax
0x3167: jmp 0x2b69
0x316c: movzx eax,byte ptr [rsp+0x7c]
0x3171: jmp 0x308c
0x3176: mov dword ptr [rsp+0x8],0x2
0x317e: jmp 0x2b19
0x3183: call 0x1340
0x3188: mov byte ptr [rsp+0xd],0x0
0x318d: jmp 0x2c01
0x319a: mov byte ptr [rsp+0xe],0x1
0x319f: xor eax,eax
0x31a1: xor r12d,r12d
0x31a4: mov qword ptr [rsp+0x50],0x0
0x31ad: jmp 0x2754
0x31c4: nop 
0x31c6: nop word ptr cs:[rax+rax]
0x32bc: add rsp,0x20
0x32c0: mov r11,qword ptr [rsp+0x10]
0x32c5: cmp r11,rax
0x32c8: ja 0x3331
0x32ca: lea rsi,[rax+0x1]
0x32ce: lea rax,[rip+0x203e2b]
0x32d5: cmp r12,rax
0x32d8: mov qword ptr [rbx],rsi
0x32db: je 0x32ef
0x32dd: mov rdi,r12
0x32e0: mov qword ptr [rsp+0x10],rsi
0x32e5: call 0x1260
0x32ea: mov rsi,qword ptr [rsp+0x10]
0x32ef: mov rdi,rsi
0x32f2: mov qword ptr [rsp+0x10],rsi
0x32f7: call 0x4150
0x32fc: sub rsp,0x8
0x3300: mov qword ptr [rbx+0x8],rax
0x3304: mov r8d,dword ptr [rbp]
0x3308: push qword ptr [rbp+0x30]
0x330b: push qword ptr [rbp+0x28]
0x330e: mov rcx,r14
0x3311: push r15
0x3313: mov r9d,dword ptr [rsp+0x3c]
0x3318: mov rdi,rax
0x331b: mov rdx,qword ptr [rsp+0x28]
0x3320: mov rsi,qword ptr [rsp+0x30]
0x3325: mov r12,rax
0x3328: call 0x1f90
0x332d: add rsp,0x20
0x3331: mov eax,dword ptr [rsp+0x18]
0x3335: mov dword ptr [r13],eax
0x3339: add rsp,0x28
0x333d: mov rax,r12
0x3340: pop rbx
0x3341: pop rbp
0x3342: pop r12
0x3344: pop r13
0x3346: pop r14
0x3348: pop r15
0x334a: ret 
0x3371: call 0x1270
0x3376: call 0x43a0
0x337b: nop dword ptr [rax+rax]
0x3380: push r12
0x3382: push rbp
0x3383: push rbx
0x3384: mov rbx,rdi
0x3387: call 0x1280
0x338c: mov r12d,dword ptr [rax]
0x338f: mov rbp,rax
0x3392: lea rax,[rip+0x203e67]
0x3399: test rbx,rbx
0x339c: mov esi,0x38
0x33a1: cmove rbx,rax
0x33a5: mov rdi,rbx
0x33a8: call 0x4350
0x33ad: mov dword ptr [rbp],r12d
0x33b1: pop rbx
0x33b2: pop rbp
0x33b3: pop r12
0x33b5: ret 
0x33c0: lea rax,[rip+0x203e39]
0x33c7: test rdi,rdi
0x33ca: cmove rdi,rax
0x33ce: mov eax,dword ptr [rdi]
0x33d0: ret 
0x33e0: lea rax,[rip+0x203e19]
0x33e7: test rdi,rdi
0x33ea: cmove rdi,rax
0x33ee: mov dword ptr [rdi],esi
0x33f0: ret 
0x3400: lea rax,[rip+0x203df9]
0x3407: test rdi,rdi
0x340a: mov ecx,esi
0x340c: cmove rdi,rax
0x3410: mov eax,esi
0x3412: and ecx,0x1f
0x3415: shr al,0x5
0x3418: movzx eax,al
0x341b: lea rdi,[rdi+rax*4+0x8]
0x3420: mov esi,dword ptr [rdi]
0x3422: mov eax,esi
0x3424: shr eax,cl
0x3426: xor edx,eax
0x3428: and eax,0x1
0x342b: and edx,0x1
0x342e: shl edx,cl
0x3430: xor edx,esi
0x3432: mov dword ptr [rdi],edx
0x3434: ret 
0x3440: lea rax,[rip+0x203db9]
0x3447: test rdi,rdi
0x344a: cmove rdi,rax
0x344e: mov eax,dword ptr [rdi+0x4]
0x3451: mov dword ptr [rdi+0x4],esi
0x3454: ret 
0x3460: lea rax,[rip+0x203d99]
0x3467: test rdi,rdi
0x346a: cmove rdi,rax
0x346e: test rsi,rsi
0x3471: mov dword ptr [rdi],0xa
0x3477: je 0x3487
0x3479: test rdx,rdx
0x347c: je 0x3487
0x347e: mov qword ptr [rdi+0x28],rsi
0x3482: mov qword ptr [rdi+0x30],rdx
0x3486: ret 
0x3487: sub rsp,0x8
0x348b: call 0x1270
0x3490: push r15
0x3492: push r14
0x3494: lea rax,[rip+0x203d65]
0x349b: push r13
0x349d: push r12
0x349f: mov r13,rdi
0x34a2: push rbp
0x34a3: push rbx
0x34a4: mov rbx,r8
0x34a7: mov r14,rsi
0x34aa: mov r15,rdx
0x34ad: sub rsp,0x18
0x34b1: test r8,r8
0x34b4: cmove rbx,rax
0x34b8: mov qword ptr [rsp+0x8],rcx
0x34bd: call 0x1280
0x34c2: mov r12d,dword ptr [rax]
0x34c5: mov rbp,rax
0x34c8: lea rax,[rbx+0x8]
0x34cc: sub rsp,0x8
0x34d0: mov r9d,dword ptr [rbx+0x4]
0x34d4: push qword ptr [rbx+0x30]
0x34d7: mov r8d,dword ptr [rbx]
0x34da: push qword ptr [rbx+0x28]
0x34dd: mov rdx,r15
0x34e0: push rax
0x34e1: mov rcx,qword ptr [rsp+0x28]
0x34e6: mov rsi,r14
0x34e9: mov rdi,r13
0x34ec: call 0x1f90
0x34f1: mov dword ptr [rbp],r12d
0x34f5: add rsp,0x38
0x34f9: pop rbx
0x34fa: pop rbp
0x34fb: pop r12
0x34fd: pop r13
0x34ff: pop r14
0x3501: pop r15
0x3503: ret 
0x3510: push r15
0x3512: push r14
0x3514: lea rax,[rip+0x203ce5]
0x351b: push r13
0x351d: push r12
0x351f: mov r12,rdx
0x3522: push rbp
0x3523: push rbx
0x3524: mov rbx,rcx
0x3527: mov r14,rdi
0x352a: mov r15,rsi
0x352d: sub rsp,0x38
0x3531: test rcx,rcx
0x3534: cmove rbx,rax
0x3538: xor ebp,ebp
0x353a: call 0x1280
0x353f: test r12,r12
0x3542: mov r13,rax
0x3545: mov eax,dword ptr [rax]
0x3547: sete bpl
0x354b: or ebp,dword ptr [rbx+0x4]
0x354e: lea r10,[rbx+0x8]
0x3552: sub rsp,0x8
0x3556: mov r8d,dword ptr [rbx]
0x3559: mov rcx,r15
0x355c: mov dword ptr [rsp+0x14],eax
0x3560: push qword ptr [rbx+0x30]
0x3563: mov rdx,r14
0x3566: push qword ptr [rbx+0x28]
0x3569: push r10
0x356b: xor esi,esi
0x356d: mov r9d,ebp
0x3570: xor edi,edi
0x3572: mov qword ptr [rsp+0x40],r10
0x3577: call 0x1f90
0x357c: lea rsi,[rax+0x1]
0x3580: mov qword ptr [rsp+0x48],rax
0x3585: add rsp,0x20
0x3589: mov rdi,rsi
0x358c: mov qword ptr [rsp+0x18],rsi
0x3591: call 0x4150
0x3596: mov qword ptr [rsp+0x10],rax
0x359b: sub rsp,0x8
0x359f: push qword ptr [rbx+0x30]
0x35a2: push qword ptr [rbx+0x28]
0x35a5: mov r10,qword ptr [rsp+0x38]
0x35aa: mov r9d,ebp
0x35ad: mov r8d,dword ptr [rbx]
0x35b0: mov rcx,r15
0x35b3: mov rdx,r14
0x35b6: mov rdi,rax
0x35b9: push r10
0x35bb: mov rsi,qword ptr [rsp+0x38]
0x35c0: call 0x1f90
0x35c5: mov eax,dword ptr [rsp+0x2c]
0x35c9: add rsp,0x20
0x35cd: test r12,r12
0x35d0: mov dword ptr [r13],eax
0x35d4: je 0x35df
0x35d6: mov r11,qword ptr [rsp+0x28]
0x35db: mov qword ptr [r12],r11
0x35df: mov rax,qword ptr [rsp+0x10]
0x35e4: add rsp,0x38
0x35e8: pop rbx
0x35e9: pop rbp
0x35ea: pop r12
0x35ec: pop r13
0x35ee: pop r14
0x35f0: pop r15
0x35f2: ret 
0x3600: mov rcx,rdx
0x3603: xor edx,edx
0x3605: jmp 0x3510
0x3610: mov eax,dword ptr [rip+0x203a42]
0x3616: push r12
0x3618: mov r12,qword ptr [rip+0x203a41]
0x361f: push rbp
0x3620: push rbx
0x3621: cmp eax,0x1
0x3624: jle 0x3651
0x3626: sub eax,0x2
0x3629: lea rbx,[r12+0x18]
0x362e: shl rax,0x4
0x3632: lea rbp,[r12+rax+0x28]
0x3637: nop word ptr [rax+rax]
0x3640: mov rdi,qword ptr [rbx]
0x3643: add rbx,0x10
0x3647: call 0x1260
0x364c: cmp rbx,rbp
0x364f: jne 0x3640
0x3651: mov rdi,qword ptr [r12+0x8]
0x3656: lea rbx,[rip+0x203aa3]
0x365d: cmp rdi,rbx
0x3660: je 0x3679
0x3662: call 0x1260
0x3667: mov qword ptr [rip+0x2039fe],0x100
0x3672: mov qword ptr [rip+0x2039ff],rbx
0x3679: lea rbx,[rip+0x2039f0]
0x3680: cmp r12,rbx
0x3683: je 0x3694
0x3685: mov rdi,r12
0x3688: call 0x1260
0x368d: mov qword ptr [rip+0x2039cc],rbx
0x3694: pop rbx
0x3695: mov dword ptr [rip+0x2039b9],0x1
0x369f: pop rbp
0x36a0: pop r12
0x36a2: ret 
0x36b0: lea rcx,[rip+0x203b49]
0x36b7: mov rdx,-0x1
0x36be: jmp 0x31d0
0x36d0: lea rcx,[rip+0x203b29]
0x36d7: jmp 0x31d0
0x36e0: lea rcx,[rip+0x203b19]
0x36e7: mov rsi,rdi
0x36ea: mov rdx,-0x1
0x36f1: xor edi,edi
0x36f3: jmp 0x31d0
0x3700: lea rcx,[rip+0x203af9]
0x3707: mov rdx,rsi
0x370a: mov rsi,rdi
0x370d: xor edi,edi
0x370f: jmp 0x31d0
0x3720: sub rsp,0x48
0x3724: mov rax,rdx
0x3727: mov rdx,qword ptr fs:0x28
0x3730: mov qword ptr [rsp+0x38],rdx
0x3735: xor edx,edx
0x3737: cmp esi,0xa
0x373a: je 0x37a4
0x373c: mov dword ptr [rsp],esi
0x373f: mov rcx,rsp
0x3742: mov rdx,-0x1
0x3749: mov rsi,rax
0x374c: mov qword ptr [rsp+0x4],0x0
0x3755: mov qword ptr [rsp+0xc],0x0
0x375e: mov qword ptr [rsp+0x14],0x0
0x3767: mov qword ptr [rsp+0x1c],0x0
0x3770: mov qword ptr [rsp+0x24],0x0
0x3779: mov qword ptr [rsp+0x2c],0x0
0x3782: mov dword ptr [rsp+0x34],0x0
0x378a: call 0x31d0
0x378f: mov rcx,qword ptr [rsp+0x38]
0x3794: xor rcx,qword ptr fs:0x28
0x379d: jne 0x37a9
0x379f: add rsp,0x48
0x37a3: ret 
0x37a4: call 0x1270
0x37a9: call 0x1340
0x37ae: nop 
0x37b0: sub rsp,0x48
0x37b4: mov rax,rdx
0x37b7: mov rdx,rcx
0x37ba: mov rcx,qword ptr fs:0x28
0x37c3: mov qword ptr [rsp+0x38],rcx
0x37c8: xor ecx,ecx
0x37ca: cmp esi,0xa
0x37cd: je 0x3830
0x37cf: mov dword ptr [rsp],esi
0x37d2: mov rcx,rsp
0x37d5: mov rsi,rax
0x37d8: mov qword ptr [rsp+0x4],0x0
0x37e1: mov qword ptr [rsp+0xc],0x0
0x37ea: mov qword ptr [rsp+0x14],0x0
0x37f3: mov qword ptr [rsp+0x1c],0x0
0x37fc: mov qword ptr [rsp+0x24],0x0
0x3805: mov qword ptr [rsp+0x2c],0x0
0x380e: mov dword ptr [rsp+0x34],0x0
0x3816: call 0x31d0
0x381b: mov rdx,qword ptr [rsp+0x38]
0x3820: xor rdx,qword ptr fs:0x28
0x3829: jne 0x3835
0x382b: add rsp,0x48
0x382f: ret 
0x3830: call 0x1270
0x3835: call 0x1340
0x383a: nop word ptr [rax+rax]
0x3840: mov rdx,rsi
0x3843: mov esi,edi
0x3845: xor edi,edi
0x3847: jmp 0x3720
0x3850: mov rcx,rdx
0x3853: mov rdx,rsi
0x3856: mov esi,edi
0x3858: xor edi,edi
0x385a: jmp 0x37b0
0x3860: sub rsp,0x48
0x3864: mov ecx,edx
0x3866: mov rax,qword ptr fs:0x28
0x386f: mov qword ptr [rsp+0x38],rax
0x3874: xor eax,eax
0x3876: mov rax,qword ptr [rip+0x2039b3]
0x387d: mov r8,rsp
0x3880: and ecx,0x1f
0x3883: movdqa xmm0,[rip+0x203975]
0x388b: mov qword ptr [rsp+0x30],rax
0x3890: mov eax,edx
0x3892: movaps [rsp],xmm0
0x3896: shr al,0x5
0x3899: movzx eax,al
0x389c: lea r9,[r8+rax*4+0x8]
0x38a1: movdqa xmm0,[rip+0x203967]
0x38a9: movaps [rsp+0x10],xmm0
0x38ae: movdqa xmm0,[rip+0x20396a]
0x38b6: movaps [rsp+0x20],xmm0
0x38bb: mov edx,dword ptr [r9]
0x38be: mov eax,edx
0x38c0: shr eax,cl
0x38c2: not eax
0x38c4: and eax,0x1
0x38c7: shl eax,cl
0x38c9: mov rcx,r8
0x38cc: xor eax,edx
0x38ce: mov rdx,rsi
0x38d1: mov rsi,rdi
0x38d4: mov dword ptr [r9],eax
0x38d7: xor edi,edi
0x38d9: call 0x31d0
0x38de: mov rsi,qword ptr [rsp+0x38]
0x38e3: xor rsi,qword ptr fs:0x28
0x38ec: jne 0x38f3
0x38ee: add rsp,0x48
0x38f2: ret 
0x38f3: call 0x1340
0x38f8: nop dword ptr [rax+rax]
0x3900: movsx edx,sil
0x3904: mov rsi,-0x1
0x390b: jmp 0x3860
0x3910: mov edx,0x3a
0x3915: mov rsi,-0x1
0x391c: jmp 0x3860
0x3930: mov edx,0x3a
0x3935: jmp 0x3860
0x3940: sub rsp,0x48
0x3944: mov rax,rdx
0x3947: mov rdx,qword ptr fs:0x28
0x3950: mov qword ptr [rsp+0x38],rdx
0x3955: xor edx,edx
0x3957: cmp esi,0xa
0x395a: je 0x39c4
0x395c: mov dword ptr [rsp],esi
0x395f: mov rcx,rsp
0x3962: mov rdx,-0x1
0x3969: mov rsi,rax
0x396c: mov qword ptr [rsp+0x4],0x0
0x3975: mov qword ptr [rsp+0xc],0x4000000
0x397e: mov qword ptr [rsp+0x14],0x0
0x3987: mov qword ptr [rsp+0x1c],0x0
0x3990: mov qword ptr [rsp+0x24],0x0
0x3999: mov qword ptr [rsp+0x2c],0x0
0x39a2: mov dword ptr [rsp+0x34],0x0
0x39aa: call 0x31d0
0x39af: mov rcx,qword ptr [rsp+0x38]
0x39b4: xor rcx,qword ptr fs:0x28
0x39bd: jne 0x39c9
0x39bf: add rsp,0x48
0x39c3: ret 
0x39c4: call 0x1270
0x39c9: call 0x1340
0x39ce: nop 
0x39d0: sub rsp,0x48
0x39d4: mov r9,rcx
0x39d7: mov rcx,qword ptr [rip+0x203852]
0x39de: movdqa xmm0,[rip+0x20381a]
0x39e6: mov rax,qword ptr fs:0x28
0x39ef: mov qword ptr [rsp+0x38],rax
0x39f4: xor eax,eax
0x39f6: movaps [rsp],xmm0
0x39fa: test rsi,rsi
0x39fd: mov qword ptr [rsp+0x30],rcx
0x3a02: mov dword ptr [rsp],0xa
0x3a09: movdqa xmm0,[rip+0x2037ff]
0x3a11: movaps [rsp+0x10],xmm0
0x3a16: movdqa xmm0,[rip+0x203802]
0x3a1e: movaps [rsp+0x20],xmm0
0x3a23: je 0x3a57
0x3a25: test rdx,rdx
0x3a28: je 0x3a57
0x3a2a: mov qword ptr [rsp+0x28],rsi
0x3a2f: mov qword ptr [rsp+0x30],rdx
0x3a34: mov rcx,rsp
0x3a37: mov rdx,r8
0x3a3a: mov rsi,r9
0x3a3d: call 0x31d0
0x3a42: mov rdi,qword ptr [rsp+0x38]
0x3a47: xor rdi,qword ptr fs:0x28
0x3a50: jne 0x3a5c
0x3a52: add rsp,0x48
0x3a56: ret 
0x3a57: call 0x1270
0x3a5c: call 0x1340
0x3a61: nop dword ptr [rax+rax]
0x3a66: nop word ptr cs:[rax+rax]
0x3a70: mov r8,-0x1
0x3a77: jmp 0x39d0
0x3a80: mov rcx,rdx
0x3a83: mov r8,-0x1
0x3a8a: mov rdx,rsi
0x3a8d: mov rsi,rdi
0x3a90: xor edi,edi
0x3a92: jmp 0x39d0
0x3aa0: mov r8,rcx
0x3aa3: mov rcx,rdx
0x3aa6: mov rdx,rsi
0x3aa9: mov rsi,rdi
0x3aac: xor edi,edi
0x3aae: jmp 0x39d0
0x3ac0: lea rcx,[rip+0x203559]
0x3ac7: jmp 0x31d0
0x3ad0: lea rcx,[rip+0x203549]
0x3ad7: mov rdx,rsi
0x3ada: mov rsi,rdi
0x3add: xor edi,edi
0x3adf: jmp 0x31d0
0x3af0: lea rcx,[rip+0x203529]
0x3af7: mov rdx,-0x1
0x3afe: jmp 0x31d0
0x3c68: mov r8,rcx
0x3c6b: mov rcx,rdx
0x3c6e: lea rdx,[rip+0x12df]
0x3c75: mov esi,0x1
0x3c7a: xor eax,eax
0x3c7c: call 0x14c0
0x3c81: jmp 0x3b6c
0x3e7d: push r12
0x3e7f: push r15
0x3e81: push r14
0x3e83: mov r8,qword ptr [rsp+0x20]
0x3e88: mov rcx,rbx
0x3e8b: mov rdx,rax
0x3e8e: mov rdi,rbp
0x3e91: mov esi,0x1
0x3e96: xor eax,eax
0x3e98: call 0x14c0
0x3e9d: add rsp,0x20
0x3ea1: add rsp,0x28
0x3ea5: pop rbx
0x3ea6: pop rbp
0x3ea7: pop r12
0x3ea9: pop r13
0x3eab: pop r14
0x3ead: pop r15
0x3eaf: ret 
0x3ee9: push r12
0x3eeb: push r15
0x3eed: push r14
0x3eef: mov r9,qword ptr [rsp+0x28]
0x3ef4: jmp 0x3e83
0x3f50: xor r9d,r9d
0x3f53: cmp qword ptr [r8],0x0
0x3f57: je 0x3f6b
0x3f59: nop dword ptr [rax]
0x3f60: add r9,0x1
0x3f64: cmp qword ptr [r8+r9*8],0x0
0x3f69: jne 0x3f60
0x3f6b: jmp 0x3b30
0x3f98: mov r11d,eax
0x3f9b: add r11,qword ptr [r10+0x10]
0x3f9f: add eax,0x8
0x3fa2: mov dword ptr [r10],eax
0x3fd5: call 0x1340
0x3ff0: push rbp
0x3ff1: push rbx
0x3ff2: mov r10d,0x20
0x3ff8: xor r11d,r11d
0x3ffb: sub rsp,0xb8
0x4002: mov rax,qword ptr fs:0x28
0x400b: mov qword ptr [rsp+0x78],rax
0x4010: xor eax,eax
0x4012: lea rax,[rsp+0xd0]
0x401a: mov qword ptr [rsp+0xa0],r8
0x4022: lea rbx,[rsp+0xd0]
0x402a: lea r8,[rsp+0x20]
0x402f: mov qword ptr [rsp+0xa8],r9
0x4037: mov dword ptr [rsp+0x8],0x20
0x403f: mov qword ptr [rsp+0x10],rax
0x4044: lea rax,[rsp+0x80]
0x404c: xor r9d,r9d
0x404f: mov qword ptr [rsp+0x18],rax
0x4054: mov rbp,rax
0x4057: nop word ptr [rax+rax]
0x4060: cmp r10d,0x2f
0x4064: ja 0x40bc
0x4066: mov eax,r10d
0x4069: mov r11d,0x1
0x406f: add r10d,0x8
0x4073: add rax,rbp
0x4076: mov rax,qword ptr [rax]
0x4079: test rax,rax
0x407c: mov qword ptr [r8+r9*8],rax
0x4080: je 0x408c
0x4082: add r9,0x1
0x4086: cmp r9,0xa
0x408a: jne 0x4060
0x408c: test r11b,r11b
0x408f: jne 0x40b5
0x4091: call 0x3b30
0x4096: mov rax,qword ptr [rsp+0x78]
0x409b: xor rax,qword ptr fs:0x28
0x40a4: jne 0x40b0
0x40a6: add rsp,0xb8
0x40ad: pop rbx
0x40ae: pop rbp
0x40af: ret 
0x40b0: call 0x1340
0x40b5: mov dword ptr [rsp+0x8],r10d
0x40ba: jmp 0x4091
0x40bc: mov rax,rbx
0x40bf: add rbx,0x8
0x40c3: jmp 0x4076
0x40d0: push rbx
0x40d1: lea rsi,[rip+0xeca]
0x40d8: mov edx,0x5
0x40dd: xor edi,edi
0x40df: call 0x1310
0x40e4: lea rdx,[rip+0xecc]
0x40eb: mov rsi,rax
0x40ee: mov edi,0x1
0x40f3: xor eax,eax
0x40f5: call 0x1460
0x40fa: lea rsi,[rip+0xecc]
0x4101: mov edx,0x5
0x4106: xor edi,edi
0x4108: call 0x1310
0x410d: lea rcx,[rip+0x834]
0x4114: lea rdx,[rip+0x6dd]
0x411b: mov rsi,rax
0x411e: mov edi,0x1
0x4123: xor eax,eax
0x4125: call 0x1460
0x412a: mov rbx,qword ptr [rip+0x202f57]
0x4131: lea rsi,[rip+0x10c8]
0x4138: xor edi,edi
0x413a: mov edx,0x5
0x413f: call 0x1310
0x4144: mov rsi,rbx
0x4147: mov rdi,rax
0x414a: pop rbx
0x414b: jmp 0x13c0
0x4150: push rbx
0x4151: mov rbx,rdi
0x4154: call 0x1400
0x4159: test rax,rax
0x415c: jne 0x4163
0x415e: test rbx,rbx
0x4161: jne 0x4165
0x4163: pop rbx
0x4164: ret 
0x4165: call 0x43a0
0x416a: nop word ptr [rax+rax]
0x4170: mov rax,rdi
0x4173: mul rsi
0x4176: mov rdi,rax
0x4179: seto al
0x417c: test rdi,rdi
0x417f: js 0x418b
0x4181: movzx eax,al
0x4184: test rax,rax
0x4187: jne 0x418b
0x4189: jmp 0x4150
0x418b: sub rsp,0x8
0x418f: call 0x43a0
0x4194: nop 
0x4196: nop word ptr cs:[rax+rax]
0x41a0: jmp 0x4150
0x41b9: test rdi,rdi
0x41bc: jne 0x41d8
0x41d8: call 0x1260
0x41dd: xor eax,eax
0x41df: pop rbx
0x41e0: ret 
0x41e6: nop word ptr cs:[rax+rax]
0x41f0: mov rax,rsi
0x41f3: mul rdx
0x41f6: mov rsi,rax
0x41f9: seto al
0x41fc: test rsi,rsi
0x41ff: js 0x420b
0x4201: movzx eax,al
0x4204: test rax,rax
0x4207: jne 0x420b
0x4209: jmp 0x41b0
0x420b: sub rsp,0x8
0x420f: call 0x43a0
0x4214: nop 
0x4216: nop word ptr cs:[rax+rax]
0x4220: test rdi,rdi
0x4223: mov r9,rdx
0x4226: mov rcx,qword ptr [rsi]
0x4229: je 0x4260
0x422b: xor edx,edx
0x422d: movabsq rax,0x5555555555555554
0x4237: div r9
0x423a: cmp rax,rcx
0x423d: jbe 0x427b
0x423f: mov rax,rcx
0x4242: shr rax, 1
0x4245: lea rcx,[rax+rcx+0x1]
0x424a: mov qword ptr [rsi],rcx
0x424d: imul rcx,r9
0x4251: mov rsi,rcx
0x4254: jmp 0x41b0
0x4260: test rcx,rcx
0x4263: je 0x4288
0x4265: mov rax,rcx
0x4268: mul r9
0x426b: seto dl
0x426e: test rax,rax
0x4271: movzx edx,dl
0x4274: js 0x427b
0x4276: test rdx,rdx
0x4279: je 0x424a
0x427b: sub rsp,0x8
0x427f: call 0x43a0
0x4284: nop dword ptr [rax]
0x4288: xor edx,edx
0x428a: mov eax,0x80
0x428f: xor r8d,r8d
0x4292: div r9
0x4295: test rax,rax
0x4298: sete r8b
0x429c: lea rcx,[r8+rax]
0x42a0: jmp 0x4265
0x42b0: test rdi,rdi
0x42b3: mov rax,qword ptr [rsi]
0x42b6: je 0x42e0
0x42b8: movabsq rdx,0x5555555555555553
0x42c2: cmp rax,rdx
0x42c5: ja 0x42f1
0x42c7: mov rdx,rax
0x42ca: shr rdx, 1
0x42cd: lea rax,[rdx+rax+0x1]
0x42d2: mov qword ptr [rsi],rax
0x42d5: mov rsi,rax
0x42d8: jmp 0x41b0
0x42e0: test rax,rax
0x42e3: mov edx,0x80
0x42e8: cmove rax,rdx
0x42ec: test rax,rax
0x42ef: jns 0x42d2
0x42f1: sub rsp,0x8
0x42f5: call 0x43a0
0x42fa: nop word ptr [rax+rax]
0x4300: push rbx
0x4301: mov rbx,rdi
0x4304: call 0x4150
0x4309: mov rdx,rbx
0x430c: xor esi,esi
0x430e: mov rdi,rax
0x4311: pop rbx
0x4312: jmp 0x1390
0x4320: mov rax,rdi
0x4323: sub rsp,0x8
0x4327: mul rsi
0x432a: seto dl
0x432d: test rax,rax
0x4330: js 0x4349
0x4332: movzx edx,dl
0x4335: test rdx,rdx
0x4338: jne 0x4349
0x433a: call 0x13d0
0x433f: test rax,rax
0x4342: je 0x4349
0x4344: add rsp,0x8
0x4348: ret 
0x4349: call 0x43a0
0x434e: nop 
0x4350: push rbp
0x4351: push rbx
0x4352: mov rbp,rdi
0x4355: mov rdi,rsi
0x4358: mov rbx,rsi
0x435b: sub rsp,0x8
0x435f: call 0x4150
0x4364: add rsp,0x8
0x4368: mov rdx,rbx
0x436b: mov rsi,rbp
0x436e: pop rbx
0x436f: pop rbp
0x4370: mov rdi,rax
0x4373: jmp 0x13e0
0x4380: push rbx
0x4381: mov rbx,rdi
0x4384: call 0x1330
0x4389: mov rdi,rbx
0x438c: lea rsi,[rax+0x1]
0x4390: pop rbx
0x4391: jmp 0x4350
0x43d0: call 0x1270
0x43d5: nop word ptr cs:[rax+rax]
0x43df: nop 
0x43e0: push r13
0x43e2: push r12
0x43e4: mov r13,rsi
0x43e7: push rbp
0x43e8: push rbx
0x43e9: mov rbx,rdi
0x43ec: mov r12,rdx
0x43ef: sub rsp,0x18
0x43f3: mov rax,qword ptr fs:0x28
0x43fc: mov qword ptr [rsp+0x8],rax
0x4401: xor eax,eax
0x4403: lea rax,[rsp+0x4]
0x4408: test rdi,rdi
0x440b: cmove rbx,rax
0x440f: mov rdi,rbx
0x4412: call 0x1360
0x4417: cmp rax,-0x3
0x441b: mov rbp,rax
0x441e: jbe 0x4440
0x4420: test r12,r12
0x4423: je 0x4440
0x4425: xor edi,edi
0x4427: call 0x44f0
0x442c: test al,al
0x442e: jne 0x4440
0x4430: movzx eax,byte ptr [r13]
0x4435: mov ebp,0x1
0x443a: mov dword ptr [rbx],eax
0x443c: nop dword ptr [rax]
0x4440: mov rdx,qword ptr [rsp+0x8]
0x4445: xor rdx,qword ptr fs:0x28
0x444e: mov rax,rbp
0x4451: jne 0x445e
0x4453: add rsp,0x18
0x4457: pop rbx
0x4458: pop rbp
0x4459: pop r12
0x445b: pop r13
0x445d: ret 
0x445e: call 0x1340
0x4463: nop word ptr cs:[rax+rax]
0x446d: nop dword ptr [rax]
0x4470: push r12
0x4472: push rbp
0x4473: mov rbp,rdi
0x4476: push rbx
0x4477: call 0x12b0
0x447c: mov ebx,dword ptr [rbp]
0x447f: mov rdi,rbp
0x4482: mov r12,rax
0x4485: call 0x4590
0x448a: and ebx,0x20
0x448d: test ebx,ebx
0x448f: jne 0x44a8
0x4491: test eax,eax
0x4493: je 0x449f
0x4495: test r12,r12
0x4498: mov eax,0xffffffff
0x449d: je 0x44d8
0x449f: pop rbx
0x44a0: pop rbp
0x44a1: pop r12
0x44a3: ret 
0x44a8: test eax,eax
0x44aa: jne 0x44c8
0x44ac: call 0x1280
0x44b1: mov dword ptr [rax],0x0
0x44b7: mov eax,0xffffffff
0x44bc: pop rbx
0x44bd: pop rbp
0x44be: pop r12
0x44c0: ret 
0x44c8: pop rbx
0x44c9: mov eax,0xffffffff
0x44ce: pop rbp
0x44cf: pop r12
0x44d1: ret 
0x44d8: call 0x1280
0x44dd: cmp dword ptr [rax],0x9
0x44e0: pop rbx
0x44e1: pop rbp
0x44e2: pop r12
0x44e4: setne al
0x44e7: movzx eax,al
0x44ea: neg eax
0x44ec: ret 
0x44f0: sub rsp,0x8
0x44f4: xor esi,esi
0x44f6: call 0x1450
0x44fb: mov rdx,rax
0x44fe: mov eax,0x1
0x4503: test rdx,rdx
0x4506: je 0x4525
0x4508: lea rdi,[rip+0xdb1]
0x450f: mov ecx,0x2
0x4514: mov rsi,rdx
0x4517: rep cmpsb [rsi],es:[rdi]
0x4519: seta cl
0x451c: sbb cl,0x0
0x451f: xor eax,eax
0x4521: test cl,cl
0x4523: jne 0x4530
0x4525: add rsp,0x8
0x4529: ret 
0x4530: lea rdi,[rip+0xd8b]
0x4537: mov ecx,0x6
0x453c: mov rsi,rdx
0x453f: rep cmpsb [rsi],es:[rdi]
0x4541: seta al
0x4544: sbb al,0x0
0x4546: test al,al
0x4548: setne al
0x454b: add rsp,0x8
0x454f: ret 
0x4550: sub rsp,0x8
0x4554: mov edi,0xe
0x4559: call 0x1420
0x455e: test rax,rax
0x4561: je 0x4580
0x4563: cmp byte ptr [rax],0x0
0x4566: lea rdx,[rip+0xd5b]
0x456d: cmove rax,rdx
0x4571: add rsp,0x8
0x4575: ret 
0x4580: lea rax,[rip+0xd41]
0x4587: add rsp,0x8
0x458b: ret 
0x4590: push r12
0x4592: push rbp
0x4593: push rbx
0x4594: mov rbx,rdi
0x4597: call 0x13f0
0x459c: test eax,eax
0x459e: mov rdi,rbx
0x45a1: js 0x45f7
0x45a3: call 0x1430
0x45a8: test eax,eax
0x45aa: jne 0x45d8
0x45ac: mov rdi,rbx
0x45af: call 0x4610
0x45b4: test eax,eax
0x45b6: je 0x45f4
0x45b8: call 0x1280
0x45bd: mov r12d,dword ptr [rax]
0x45c0: mov rdi,rbx
0x45c3: mov rbp,rax
0x45c6: call 0x12e0
0x45cb: test r12d,r12d
0x45ce: jne 0x4600
0x45d0: pop rbx
0x45d1: pop rbp
0x45d2: pop r12
0x45d4: ret 
0x45d8: mov rdi,rbx
0x45db: call 0x13f0
0x45e0: xor esi,esi
0x45e2: mov edx,0x1
0x45e7: mov edi,eax
0x45e9: call 0x1380
0x45ee: cmp rax,-0x1
0x45f2: jne 0x45ac
0x45f4: mov rdi,rbx
0x45f7: pop rbx
0x45f8: pop rbp
0x45f9: pop r12
0x45fb: jmp 0x12e0
0x4600: mov dword ptr [rbp],r12d
0x4604: mov eax,0xffffffff
0x4609: jmp 0x45d0
0x4610: test rdi,rdi
0x4613: push rbx
0x4614: mov rbx,rdi
0x4617: je 0x462a
0x4619: call 0x1430
0x461e: test eax,eax
0x4620: je 0x462a
0x4622: test dword ptr [rbx],0x100
0x4628: jne 0x4638
0x462a: mov rdi,rbx
0x462d: pop rbx
0x462e: jmp 0x1410
0x4638: mov rdi,rbx
0x463b: mov edx,0x1
0x4640: xor esi,esi
0x4642: call 0x4650
0x4647: mov rdi,rbx
0x464a: pop rbx
0x464b: jmp 0x1410
0x4650: mov rax,qword ptr [rdi+0x8]
0x4654: cmp qword ptr [rdi+0x10],rax
0x4658: je 0x4660
0x465a: jmp 0x1480
0x4660: mov rax,qword ptr [rdi+0x20]
0x4664: cmp qword ptr [rdi+0x28],rax
0x4668: jne 0x465a
0x466a: cmp qword ptr [rdi+0x48],0x0
0x466f: jne 0x465a
0x4671: push r12
0x4673: push rbp
0x4674: mov r12d,edx
0x4677: push rbx
0x4678: mov rbp,rsi
0x467b: mov rbx,rdi
0x467e: call 0x13f0
0x4683: mov edx,r12d
0x4686: mov rsi,rbp
0x4689: mov edi,eax
0x468b: call 0x1380
0x4690: cmp rax,-0x1
0x4694: je 0x46a2
0x4696: and dword ptr [rbx],-0x11
0x4699: mov qword ptr [rbx+0x90],rax
0x46a0: xor eax,eax
0x46a2: pop rbx
0x46a3: pop rbp
0x46a4: pop r12
0x46a6: ret 
0x46b0: push r15
0x46b2: push r14
0x46b4: mov r15,rdx
0x46b7: push r13
0x46b9: push r12
0x46bb: lea r12,[rip+0x2024ee]
0x46c2: push rbp
0x46c3: lea rbp,[rip+0x2024ee]
0x46ca: push rbx
0x46cb: mov r13d,edi
0x46ce: mov r14,rsi
0x46d1: sub rbp,r12
0x46d4: sub rsp,0x8
0x46d8: sar rbp,0x3
0x46dc: call 0x1230
0x46e1: test rbp,rbp
0x46e4: je 0x4706
0x46e6: xor ebx,ebx
0x46e8: nop dword ptr [rax+rax]
0x46f0: mov rdx,r15
0x46f3: mov rsi,r14
0x46f6: mov edi,r13d
0x46f9: call qword ptr [r12+rbx*8]
0x46fd: add rbx,0x1
0x4701: cmp rbp,rbx
0x4704: jne 0x46f0
0x4706: add rsp,0x8
0x470a: pop rbx
0x470b: pop rbp
0x470c: pop r12
0x470e: pop r13
0x4710: pop r14
0x4712: pop r15
0x4714: ret 
0x4720: rep ret 
