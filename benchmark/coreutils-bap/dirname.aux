0x11d8: sub rsp,0x8
0x11dc: mov rax,qword ptr [rip+0x205df5]
0x11e3: test rax,rax
0x11e6: je 0x11ea
0x11e8: call rax
0x11ea: add rsp,0x8
0x11ee: ret 
0x11f6: jmp qword ptr [rip+0x205c7c]
0x1200: jmp qword ptr [rip+0x205c7a]
0x1220: jmp qword ptr [rip+0x205c6a]
0x1240: jmp qword ptr [rip+0x205c5a]
0x1250: jmp qword ptr [rip+0x205c52]
0x1270: jmp qword ptr [rip+0x205c42]
0x12a0: jmp qword ptr [rip+0x205c2a]
0x12b0: jmp qword ptr [rip+0x205c22]
0x12e0: jmp qword ptr [rip+0x205c0a]
0x1310: jmp qword ptr [rip+0x205bf2]
0x1320: jmp qword ptr [rip+0x205bea]
0x1330: jmp qword ptr [rip+0x205be2]
0x1350: jmp qword ptr [rip+0x205bd2]
0x1360: jmp qword ptr [rip+0x205bca]
0x1370: jmp qword ptr [rip+0x205bc2]
0x1380: jmp qword ptr [rip+0x205bba]
0x1390: jmp qword ptr [rip+0x205bb2]
0x13a0: jmp qword ptr [rip+0x205baa]
0x13b0: jmp qword ptr [rip+0x205ba2]
0x13d0: jmp qword ptr [rip+0x205b92]
0x1410: jmp qword ptr [rip+0x205b72]
0x1460: jmp qword ptr [rip+0x205b4a]
0x1470: jmp qword ptr [rip+0x205b42]
0x1480: jmp qword ptr [rip+0x205b3a]
0x1490: jmp qword ptr [rip+0x205b52]
0x153b: nop dword ptr [rax+rax]
0x1619: jmp 0x15b1
0x162e: jmp 0x15cd
0x1658: jmp 0x1531
0x168a: hlt 
0x168b: nop dword ptr [rax+rax]
0x1690: lea rdi,[rip+0x2059e9]
0x1697: push rbp
0x1698: lea rax,[rip+0x2059e1]
0x169f: cmp rax,rdi
0x16a2: mov rbp,rsp
0x16a5: je 0x16c0
0x16a7: mov rax,qword ptr [rip+0x20591a]
0x16ae: test rax,rax
0x16b1: je 0x16c0
0x16b3: pop rbp
0x16b4: jmp rax
0x16c0: pop rbp
0x16c1: ret 
0x16d0: lea rdi,[rip+0x2059a9]
0x16d7: lea rsi,[rip+0x2059a2]
0x16de: push rbp
0x16df: sub rsi,rdi
0x16e2: mov rbp,rsp
0x16e5: sar rsi,0x3
0x16e9: mov rax,rsi
0x16ec: shr rax,0x3f
0x16f0: add rsi,rax
0x16f3: sar rsi, 1
0x16f6: je 0x1710
0x16f8: mov rax,qword ptr [rip+0x2058e1]
0x16ff: test rax,rax
0x1702: je 0x1710
0x1704: pop rbp
0x1705: jmp rax
0x1710: pop rbp
0x1711: ret 
0x1731: push rbp
0x1732: mov rbp,rsp
0x1735: je 0x1743
0x1737: mov rdi,qword ptr [rip+0x2058ca]
0x173e: call 0x1490
0x1743: call 0x1690
0x1748: mov byte ptr [rip+0x205959],0x1
0x174f: pop rbp
0x1750: ret 
0x1760: push rbp
0x1761: mov rbp,rsp
0x1764: pop rbp
0x1765: jmp 0x16d0
0x1b10: mov qword ptr [rip+0x2055a1],rdi
0x1b17: ret 
0x1b20: mov byte ptr [rip+0x205589],dil
0x1b27: ret 
0x1b30: push rbp
0x1b31: push rbx
0x1b32: sub rsp,0x8
0x1b36: mov rdi,qword ptr [rip+0x20554b]
0x1b3d: call 0x43c0
0x1b42: test eax,eax
0x1b44: je 0x1b5c
0x1b46: call 0x1220
0x1b4b: cmp byte ptr [rip+0x20555e],0x0
0x1b52: mov rbx,rax
0x1b55: je 0x1b73
0x1b57: cmp dword ptr [rax],0x20
0x1b5a: jne 0x1b73
0x1b5c: mov rdi,qword ptr [rip+0x20553d]
0x1b63: call 0x43c0
0x1b68: test eax,eax
0x1b6a: jne 0x1bb2
0x1b6c: add rsp,0x8
0x1b70: pop rbx
0x1b71: pop rbp
0x1b72: ret 
0x1b73: lea rsi,[rip+0x2ee6]
0x1b7a: xor edi,edi
0x1b7c: mov edx,0x5
0x1b81: call 0x1290
0x1b86: mov rdi,qword ptr [rip+0x20552b]
0x1b8d: mov rbp,rax
0x1b90: test rdi,rdi
0x1b93: je 0x1bbd
0x1b95: call 0x3860
0x1b9a: mov esi,dword ptr [rbx]
0x1b9c: lea rdx,[rip+0x2ec9]
0x1ba3: mov rcx,rax
0x1ba6: mov r8,rbp
0x1ba9: xor edi,edi
0x1bab: xor eax,eax
0x1bad: call 0x1400
0x1bb2: mov edi,dword ptr [rip+0x205460]
0x1bb8: call 0x1240
0x1bbd: mov esi,dword ptr [rbx]
0x1bbf: lea rdx,[rip+0x2eaa]
0x1bc6: mov rcx,rax
0x1bc9: xor edi,edi
0x1bcb: xor eax,eax
0x1bcd: call 0x1400
0x1bd2: jmp 0x1bb2
0x1c40: push rbp
0x1c41: push rbx
0x1c42: mov rbp,rdi
0x1c45: sub rsp,0x8
0x1c49: call 0x1be0
0x1c4e: test rax,rax
0x1c51: mov rbx,rax
0x1c54: sete al
0x1c57: movzx eax,al
0x1c5a: lea rdi,[rbx+rax+0x1]
0x1c5f: call 0x1380
0x1c64: test rax,rax
0x1c67: mov rcx,rax
0x1c6a: je 0x1c86
0x1c6c: mov rdx,rbx
0x1c6f: mov rsi,rbp
0x1c72: mov rdi,rax
0x1c75: call 0x1360
0x1c7a: test rbx,rbx
0x1c7d: mov rcx,rax
0x1c80: je 0x1c90
0x1c82: mov byte ptr [rcx+rbx],0x0
0x1c86: add rsp,0x8
0x1c8a: mov rax,rcx
0x1c8d: pop rbx
0x1c8e: pop rbp
0x1c8f: ret 
0x1c90: mov byte ptr [rax],0x2e
0x1c93: mov ebx,0x1
0x1c98: jmp 0x1c82
0x1d00: push rbx
0x1d01: mov rbx,rdi
0x1d04: call 0x12b0
0x1d09: cmp rax,0x1
0x1d0d: jbe 0x1d1a
0x1d0f: cmp byte ptr [rbx+rax-0x1],0x2f
0x1d14: lea rdx,[rax-0x1]
0x1d18: je 0x1d28
0x1d1a: pop rbx
0x1d1b: ret 
0x1d20: mov rdx,rax
0x1d23: nop dword ptr [rax+rax]
0x1d28: cmp rdx,0x1
0x1d2c: je 0x1d40
0x1d2e: cmp byte ptr [rbx+rdx-0x1],0x2f
0x1d33: lea rax,[rdx-0x1]
0x1d37: je 0x1d20
0x1d39: mov rax,rdx
0x1d3c: pop rbx
0x1d3d: ret 
0x1d40: mov eax,0x1
0x1d45: pop rbx
0x1d46: ret 
0x1def: nop 
0x1df0: push rbp
0x1df1: push rbx
0x1df2: mov rbp,rdi
0x1df5: mov ebx,esi
0x1df7: sub rsp,0x8
0x1dfb: call 0x44a0
0x1e00: movzx edx,byte ptr [rax]
0x1e03: and edx,-0x21
0x1e06: cmp dl,0x55
0x1e09: je 0x1e80
0x1e0b: cmp dl,0x47
0x1e0e: je 0x1e30
0x1e10: lea rax,[rip+0x2cb4]
0x1e17: lea rdx,[rip+0x2caf]
0x1e1e: cmp ebx,0x9
0x1e21: cmovne rax,rdx
0x1e25: add rsp,0x8
0x1e29: pop rbx
0x1e2a: pop rbp
0x1e2b: ret 
0x1e30: movzx edx,byte ptr [rax+0x1]
0x1e34: and edx,-0x21
0x1e37: cmp dl,0x42
0x1e3a: jne 0x1e10
0x1e3c: cmp byte ptr [rax+0x2],0x31
0x1e40: jne 0x1e10
0x1e42: cmp byte ptr [rax+0x3],0x38
0x1e46: jne 0x1e10
0x1e48: cmp byte ptr [rax+0x4],0x30
0x1e4c: jne 0x1e10
0x1e4e: cmp byte ptr [rax+0x5],0x33
0x1e52: jne 0x1e10
0x1e54: cmp byte ptr [rax+0x6],0x30
0x1e58: jne 0x1e10
0x1e5a: cmp byte ptr [rax+0x7],0x0
0x1e5e: jne 0x1e10
0x1e60: cmp byte ptr [rbp],0x60
0x1e64: lea rax,[rip+0x2c59]
0x1e6b: lea rdx,[rip+0x2c56]
0x1e72: cmovne rax,rdx
0x1e76: add rsp,0x8
0x1e7a: pop rbx
0x1e7b: pop rbp
0x1e7c: ret 
0x1e80: movzx edx,byte ptr [rax+0x1]
0x1e84: and edx,-0x21
0x1e87: cmp dl,0x54
0x1e8a: jne 0x1e10
0x1e8c: movzx edx,byte ptr [rax+0x2]
0x1e90: and edx,-0x21
0x1e93: cmp dl,0x46
0x1e96: jne 0x1e10
0x1e9c: cmp byte ptr [rax+0x3],0x2d
0x1ea0: jne 0x1e10
0x1ea6: cmp byte ptr [rax+0x4],0x38
0x1eaa: jne 0x1e10
0x1eb0: cmp byte ptr [rax+0x5],0x0
0x1eb4: jne 0x1e10
0x1eba: cmp byte ptr [rbp],0x60
0x1ebe: lea rax,[rip+0x2bf7]
0x1ec5: lea rdx,[rip+0x2bf4]
0x1ecc: cmovne rax,rdx
0x1ed0: add rsp,0x8
0x1ed4: pop rbx
0x1ed5: pop rbp
0x1ed6: ret 
0x1ee0: push r15
0x1ee2: push r14
0x1ee4: mov r15d,r8d
0x1ee7: push r13
0x1ee9: push r12
0x1eeb: mov r14,rdi
0x1eee: push rbp
0x1eef: push rbx
0x1ef0: mov ebx,r9d
0x1ef3: mov r13,rsi
0x1ef6: mov rbp,rcx
0x1ef9: and ebx,0x2
0x1efc: sub rsp,0xb8
0x1f03: mov rax,qword ptr [rsp+0xf0]
0x1f0b: mov qword ptr [rsp+0x10],rdx
0x1f10: mov dword ptr [rsp+0x8],r8d
0x1f15: mov dword ptr [rsp+0x78],r9d
0x1f1a: mov qword ptr [rsp+0x20],rax
0x1f1f: mov rax,qword ptr [rsp+0xf8]
0x1f27: mov qword ptr [rsp+0x68],rax
0x1f2c: mov rax,qword ptr [rsp+0x100]
0x1f34: mov qword ptr [rsp+0x60],rax
0x1f39: mov rax,qword ptr fs:0x28
0x1f42: mov qword ptr [rsp+0xa8],rax
0x1f4a: xor eax,eax
0x1f4c: call 0x12a0
0x1f51: cmp r15d,0xa
0x1f55: mov qword ptr [rsp+0x58],rax
0x1f5a: ja 0x310f
0x1f60: lea rcx,[rip+0x2bb9]
0x1f67: mov edx,r15d
0x1f6a: movsxd rax,dword ptr [rcx+rdx*4]
0x1f6e: add rax,rcx
0x1f71: jmp rax
0x1fb3: xor r11d,r11d
0x1fb6: mov rax,rbp
0x1fb9: mov r8d,r12d
0x1fbc: mov rbp,r11
0x1fbf: mov r11,rax
0x1fc2: nop word ptr [rax+rax]
0x1fc8: cmp r11,rbp
0x1fcb: setne r12b
0x1fcf: cmp r11,-0x1
0x1fd3: jne 0x1fe2
0x1fd5: mov rax,qword ptr [rsp+0x10]
0x1fda: cmp byte ptr [rax+rbp],0x0
0x1fde: setne r12b
0x1fe2: test r12b,r12b
0x1fe5: je 0x2640
0x1feb: cmp dword ptr [rsp+0x8],0x2
0x1ff0: mov rdi,qword ptr [rsp+0x10]
0x1ff5: lea r9,[rdi+rbp]
0x1ff9: setne al
0x1ffc: and al,byte ptr [rsp+0xd]
0x2000: mov r10d,eax
0x2003: je 0x20b0
0x2009: mov rax,qword ptr [rsp+0x18]
0x200e: test rax,rax
0x2011: je 0x2440
0x2017: cmp r11,-0x1
0x201b: lea rbx,[rbp+rax]
0x2020: jne 0x2050
0x2022: cmp rax,0x1
0x2026: jbe 0x2050
0x2028: mov byte ptr [rsp+0x38],r8b
0x202d: mov byte ptr [rsp+0x30],r10b
0x2032: mov qword ptr [rsp+0x28],r9
0x2037: call 0x12b0
0x203c: movzx r8d,byte ptr [rsp+0x38]
0x2042: movzx r10d,byte ptr [rsp+0x30]
0x2048: mov r11,rax
0x204b: mov r9,qword ptr [rsp+0x28]
0x2050: cmp rbx,r11
0x2053: mov byte ptr [rsp+0x28],r10b
0x2058: ja 0x2610
0x205e: mov rdx,qword ptr [rsp+0x18]
0x2063: mov rsi,qword ptr [rsp+0x48]
0x2068: mov rdi,r9
0x206b: mov qword ptr [rsp+0x40],r11
0x2070: mov byte ptr [rsp+0x38],r8b
0x2075: mov qword ptr [rsp+0x30],r9
0x207a: call 0x1330
0x207f: test eax,eax
0x2081: mov r9,qword ptr [rsp+0x30]
0x2086: movzx r8d,byte ptr [rsp+0x38]
0x208c: mov r11,qword ptr [rsp+0x40]
0x2091: jne 0x2610
0x2097: cmp byte ptr [rsp+0xf],0x0
0x209c: movzx r10d,byte ptr [rsp+0x28]
0x20a2: jne 0x3025
0x20a8: nop dword ptr [rax+rax]
0x20b0: movzx ebx,byte ptr [r9]
0x20b4: cmp bl,0x7e
0x20b7: ja 0x23d8
0x20bd: lea rcx,[rip+0x2a88]
0x20c4: movzx edx,bl
0x20c7: movsxd rax,dword ptr [rcx+rdx*4]
0x20cb: add rax,rcx
0x20ce: jmp rax
0x2108: cmp byte ptr [rsp+0xd],0x1
0x210d: jne 0x2222
0x2113: test dl,dl
0x2115: jne 0x2222
0x211b: mov rsi,qword ptr [rsp+0x20]
0x2120: test rsi,rsi
0x2123: je 0x2139
0x2125: mov edx,ebx
0x2127: shr dl,0x5
0x212a: movzx edx,dl
0x212d: mov edx,dword ptr [rsi+rdx*4]
0x2130: btl edx,ebx
0x2133: jb 0x2283
0x2139: test r10b,r10b
0x213c: jne 0x2283
0x2142: xor eax,0x1
0x2145: add rbp,0x1
0x2149: and eax,r8d
0x214c: test al,al
0x214e: je 0x2170
0x2150: cmp r13,r15
0x2153: jbe 0x215a
0x2155: mov byte ptr [r14+r15],0x27
0x215a: lea rax,[r15+0x1]
0x215e: cmp r13,rax
0x2161: jbe 0x2169
0x2163: mov byte ptr [r14+r15+0x1],0x27
0x2169: add r15,0x2
0x216d: xor r8d,r8d
0x2170: cmp r15,r13
0x2173: jae 0x2179
0x2175: mov byte ptr [r14+r15],bl
0x2179: movzx edi,byte ptr [rsp+0xe]
0x217e: add r15,0x1
0x2182: mov eax,0x0
0x2187: test r12b,r12b
0x218a: cmove edi,eax
0x218d: mov byte ptr [rsp+0xe],dil
0x2192: jmp 0x1fc8
0x2222: cmp byte ptr [rsp+0xf],0x0
0x2227: jne 0x211b
0x222d: jmp 0x2139
0x2283: cmp dword ptr [rsp+0x8],0x2
0x2288: sete dl
0x228b: cmp byte ptr [rsp+0xf],0x0
0x2290: mov eax,edx
0x2292: jne 0x2ae8
0x2298: mov eax,r8d
0x229b: xor eax,0x1
0x229e: and al,dl
0x22a0: je 0x22d1
0x22a2: cmp r13,r15
0x22a5: jbe 0x22ac
0x22a7: mov byte ptr [r14+r15],0x27
0x22ac: lea rdx,[r15+0x1]
0x22b0: cmp r13,rdx
0x22b3: jbe 0x22bb
0x22b5: mov byte ptr [r14+r15+0x1],0x24
0x22bb: lea rdx,[r15+0x2]
0x22bf: cmp r13,rdx
0x22c2: jbe 0x22ca
0x22c4: mov byte ptr [r14+r15+0x2],0x27
0x22ca: add r15,0x3
0x22ce: mov r8d,eax
0x22d1: cmp r13,r15
0x22d4: jbe 0x22db
0x22d6: mov byte ptr [r14+r15],0x5c
0x22db: add r15,0x1
0x22df: add rbp,0x1
0x22e3: jmp 0x2170
0x23d0: xor r10d,r10d
0x23d3: nop dword ptr [rax+rax]
0x23d8: cmp qword ptr [rsp+0x58],0x1
0x23de: jne 0x2788
0x23e4: mov qword ptr [rsp+0x38],r11
0x23e9: mov byte ptr [rsp+0x30],r8b
0x23ee: mov byte ptr [rsp+0x28],r10b
0x23f3: call 0x1480
0x23f8: mov rcx,qword ptr [rax]
0x23fb: movzx edx,bl
0x23fe: movzx r10d,byte ptr [rsp+0x28]
0x2404: movzx r8d,byte ptr [rsp+0x30]
0x240a: mov r11,qword ptr [rsp+0x38]
0x240f: mov edi,0x1
0x2414: movzx eax,word ptr [rcx+rdx*2]
0x2418: and ax,0x4000
0x241c: setne r12b
0x2420: sete al
0x2423: and al,byte ptr [rsp+0xd]
0x2427: test al,al
0x2429: jne 0x2dc1
0x242f: cmp dword ptr [rsp+0x8],0x2
0x2434: sete dl
0x2437: jmp 0x2108
0x2440: movzx ebx,byte ptr [r9]
0x2444: cmp bl,0x7e
0x2447: ja 0x23d0
0x2449: lea rcx,[rip+0x28f8]
0x2450: movzx edx,bl
0x2453: movsxd rax,dword ptr [rcx+rdx*4]
0x2457: add rax,rcx
0x245a: jmp rax
0x2610: xor r10d,r10d
0x2613: jmp 0x20b0
0x2640: cmp dword ptr [rsp+0x8],0x2
0x2645: movzx ebx,byte ptr [rsp+0xf]
0x264a: mov r12d,r8d
0x264d: mov rbp,r11
0x2650: sete dl
0x2653: mov eax,ebx
0x2655: test r15,r15
0x2658: sete cl
0x265b: and eax,edx
0x265d: and al,cl
0x265f: jne 0x30c6
0x2665: mov eax,ebx
0x2667: xor eax,0x1
0x266a: and dl,al
0x266c: je 0x2fdc
0x2672: cmp byte ptr [rsp+0x7c],0x0
0x2677: je 0x2fda
0x267d: cmp byte ptr [rsp+0xe],0x0
0x2682: jne 0x307d
0x2688: test r13,r13
0x268b: sete al
0x268e: cmp qword ptr [rsp+0x50],0x0
0x2694: setne dl
0x2697: and al,dl
0x2699: je 0x30bc
0x269f: mov r13,qword ptr [rsp+0x50]
0x26a4: lea rbx,[rip+0x2422]
0x26ab: mov byte ptr [r14],0x27
0x26af: mov dword ptr [rsp+0x8],0x2
0x26b7: mov r15d,0x1
0x26bd: mov qword ptr [rsp+0x18],0x1
0x26c6: mov byte ptr [rsp+0xf],0x0
0x26cb: mov qword ptr [rsp+0x48],rbx
0x26d0: mov byte ptr [rsp+0x7c],al
0x26d4: jmp 0x1fb3
0x2788: lea rax,[rsp+0xa0]
0x2790: cmp r11,-0x1
0x2794: mov qword ptr [rsp+0xa0],0x0
0x27a0: mov qword ptr [rsp+0x28],rax
0x27a5: jne 0x27d4
0x27a7: mov rdi,qword ptr [rsp+0x10]
0x27ac: mov byte ptr [rsp+0x40],r8b
0x27b1: mov byte ptr [rsp+0x38],r10b
0x27b6: mov qword ptr [rsp+0x30],r9
0x27bb: call 0x12b0
0x27c0: movzx r8d,byte ptr [rsp+0x40]
0x27c6: movzx r10d,byte ptr [rsp+0x38]
0x27cc: mov r11,rax
0x27cf: mov r9,qword ptr [rsp+0x30]
0x27d4: lea rax,[rsp+0x9c]
0x27dc: xor ecx,ecx
0x27de: mov byte ptr [rsp+0x7e],bl
0x27e2: mov byte ptr [rsp+0x7d],r8b
0x27e7: mov rbx,rcx
0x27ea: mov qword ptr [rsp+0x88],r9
0x27f2: mov qword ptr [rsp+0x38],rax
0x27f7: mov byte ptr [rsp+0x7f],r10b
0x27fc: mov qword ptr [rsp+0x80],r15
0x2804: mov qword ptr [rsp+0x40],r14
0x2809: mov qword ptr [rsp+0x70],r13
0x280e: mov qword ptr [rsp+0x30],r11
0x2813: mov rax,qword ptr [rsp+0x10]
0x2818: lea r14,[rbp+rbx]
0x281d: mov rdx,qword ptr [rsp+0x30]
0x2822: mov rcx,qword ptr [rsp+0x28]
0x2827: mov rdi,qword ptr [rsp+0x38]
0x282c: lea r13,[rax+r14]
0x2830: sub rdx,r14
0x2833: mov rsi,r13
0x2836: call 0x4330
0x283b: test rax,rax
0x283e: mov r15,rax
0x2841: je 0x2891
0x2843: cmp rax,-0x1
0x2847: je 0x2e65
0x284d: cmp rax,-0x2
0x2851: je 0x2df1
0x2857: cmp dword ptr [rsp+0x8],0x2
0x285c: sete al
0x285f: and al,byte ptr [rsp+0xf]
0x2863: jne 0x2a00
0x2869: mov edi,dword ptr [rsp+0x9c]
0x2870: call 0x1470
0x2875: mov rdi,qword ptr [rsp+0x28]
0x287a: test eax,eax
0x287c: mov eax,0x0
0x2881: cmove r12d,eax
0x2885: add rbx,r15
0x2888: call 0x1460
0x288d: test eax,eax
0x288f: je 0x2813
0x2891: mov edx,r12d
0x2894: mov rdi,rbx
0x2897: movzx r8d,byte ptr [rsp+0x7d]
0x289d: xor edx,0x1
0x28a0: movzx ebx,byte ptr [rsp+0x7e]
0x28a5: movzx r10d,byte ptr [rsp+0x7f]
0x28ab: and dl,byte ptr [rsp+0xd]
0x28af: mov r15,qword ptr [rsp+0x80]
0x28b7: mov r14,qword ptr [rsp+0x40]
0x28bc: mov r13,qword ptr [rsp+0x70]
0x28c1: mov r11,qword ptr [rsp+0x30]
0x28c6: cmp rdi,0x1
0x28ca: jbe 0x2ecb
0x28d0: mov rcx,rdi
0x28d3: xor esi,esi
0x28d5: movzx r9d,byte ptr [rsp+0xf]
0x28db: add rcx,rbp
0x28de: mov rdi,qword ptr [rsp+0x10]
0x28e3: jmp 0x299e
0x28f0: cmp dword ptr [rsp+0x8],0x2
0x28f5: sete al
0x28f8: test r9b,r9b
0x28fb: jne 0x2db0
0x2901: mov esi,r8d
0x2904: xor esi,0x1
0x2907: and al,sil
0x290a: je 0x293b
0x290c: cmp r13,r15
0x290f: jbe 0x2916
0x2911: mov byte ptr [r14+r15],0x27
0x2916: lea rsi,[r15+0x1]
0x291a: cmp r13,rsi
0x291d: jbe 0x2925
0x291f: mov byte ptr [r14+r15+0x1],0x24
0x2925: lea rsi,[r15+0x2]
0x2929: cmp r13,rsi
0x292c: jbe 0x2934
0x292e: mov byte ptr [r14+r15+0x2],0x27
0x2934: add r15,0x3
0x2938: mov r8d,eax
0x293b: cmp r13,r15
0x293e: jbe 0x2945
0x2940: mov byte ptr [r14+r15],0x5c
0x2945: lea rax,[r15+0x1]
0x2949: cmp r13,rax
0x294c: jbe 0x295b
0x294e: mov eax,ebx
0x2950: shr al,0x6
0x2953: add eax,0x30
0x2956: mov byte ptr [r14+r15+0x1],al
0x295b: lea rax,[r15+0x2]
0x295f: cmp r13,rax
0x2962: jbe 0x2974
0x2964: mov eax,ebx
0x2966: shr al,0x3
0x2969: and eax,0x7
0x296c: add eax,0x30
0x296f: mov byte ptr [r14+r15+0x2],al
0x2974: and ebx,0x7
0x2977: add rbp,0x1
0x297b: add r15,0x3
0x297f: add ebx,0x30
0x2982: cmp rbp,rcx
0x2985: jae 0x2170
0x298b: mov esi,edx
0x298d: cmp r13,r15
0x2990: jbe 0x2996
0x2992: mov byte ptr [r14+r15],bl
0x2996: movzx ebx,byte ptr [rdi+rbp]
0x299a: add r15,0x1
0x299e: test dl,dl
0x29a0: jne 0x28f0
0x29a6: mov eax,esi
0x29a8: xor eax,0x1
0x29ab: and eax,r8d
0x29ae: test r10b,r10b
0x29b1: je 0x29c1
0x29b3: cmp r13,r15
0x29b6: jbe 0x29bd
0x29b8: mov byte ptr [r14+r15],0x5c
0x29bd: add r15,0x1
0x29c1: add rbp,0x1
0x29c5: cmp rbp,rcx
0x29c8: jae 0x214c
0x29ce: test al,al
0x29d0: je 0x2dce
0x29d6: cmp r13,r15
0x29d9: jbe 0x29e0
0x29db: mov byte ptr [r14+r15],0x27
0x29e0: lea rax,[r15+0x1]
0x29e4: cmp r13,rax
0x29e7: jbe 0x29ef
0x29e9: mov byte ptr [r14+r15+0x1],0x27
0x29ef: add r15,0x2
0x29f3: xor r10d,r10d
0x29f6: xor r8d,r8d
0x29f9: jmp 0x298d
0x2a00: cmp r15,0x1
0x2a04: je 0x2869
0x2a0a: mov rdi,qword ptr [rsp+0x10]
0x2a0f: lea rcx,[rdi+r15]
0x2a13: lea rdx,[rdi+r14+0x1]
0x2a18: lea r8,[rcx+r14]
0x2a1c: jmp 0x2a2d
0x2a20: add rdx,0x1
0x2a24: cmp r8,rdx
0x2a27: je 0x2869
0x2a2d: movzx ecx,byte ptr [rdx]
0x2a30: sub ecx,0x5b
0x2a33: cmp cl,0x21
0x2a36: ja 0x2a20
0x2a38: mov esi,0x1
0x2a3d: shl rsi,cl
0x2a40: mov rcx,rsi
0x2a43: movabsq rsi,0x20000002b
0x2a4d: test rcx,rsi
0x2a50: je 0x2a20
0x2a52: mov r14,qword ptr [rsp+0x40]
0x2a57: mov r13,qword ptr [rsp+0x70]
0x2a5c: mov rbp,qword ptr [rsp+0x30]
0x2a61: mov dword ptr [rsp+0x8],0x2
0x2a69: cmp byte ptr [rsp+0xd],0x0
0x2a6e: je 0x2a80
0x2a70: test al,al
0x2a72: mov eax,0x4
0x2a77: cmove eax,dword ptr [rsp+0x8]
0x2a7c: mov dword ptr [rsp+0x8],eax
0x2a80: sub rsp,0x8
0x2a84: mov rcx,rbp
0x2a87: mov rsi,r13
0x2a8a: push qword ptr [rsp+0x68]
0x2a8e: push qword ptr [rsp+0x78]
0x2a92: mov rdi,r14
0x2a95: push 0x0
0x2a97: mov r9d,dword ptr [rsp+0x98]
0x2a9f: mov r8d,dword ptr [rsp+0x28]
0x2aa4: mov rdx,qword ptr [rsp+0x30]
0x2aa9: and r9d,-0x3
0x2aad: call 0x1ee0
0x2ab2: add rsp,0x20
0x2ab6: mov r15,rax
0x2ab9: mov rbx,qword ptr [rsp+0xa8]
0x2ac1: xor rbx,qword ptr fs:0x28
0x2aca: mov rax,r15
0x2acd: jne 0x30d3
0x2ad3: add rsp,0xb8
0x2ada: pop rbx
0x2adb: pop rbp
0x2adc: pop r12
0x2ade: pop r13
0x2ae0: pop r14
0x2ae2: pop r15
0x2ae4: ret 
0x2ae8: mov rbp,r11
0x2aeb: jmp 0x2a69
0x2b51: test r13,r13
0x2b54: jne 0x30ea
0x2b5a: lea rax,[rip+0x1f6c]
0x2b61: mov qword ptr [rsp+0x50],0x0
0x2b6a: mov byte ptr [rsp+0xe],0x1
0x2b6f: mov byte ptr [rsp+0x7c],0x0
0x2b74: xor r12d,r12d
0x2b77: mov byte ptr [rsp+0xf],0x0
0x2b7c: mov qword ptr [rsp+0x18],0x1
0x2b85: mov qword ptr [rsp+0x48],rax
0x2b8a: mov r15d,0x1
0x2b90: mov dword ptr [rsp+0x8],0x2
0x2b98: jmp 0x1fb3
0x2db0: movzx ebx,byte ptr [rsp+0xf]
0x2db5: mov rbp,r11
0x2db8: mov byte ptr [rsp+0xd],bl
0x2dbc: jmp 0x2a69
0x2dc1: movzx edx,byte ptr [rsp+0xd]
0x2dc6: xor r12d,r12d
0x2dc9: jmp 0x28d0
0x2dce: xor r10d,r10d
0x2dd1: jmp 0x298d
0x2df1: mov r11,qword ptr [rsp+0x30]
0x2df6: mov rsi,r14
0x2df9: mov rcx,r13
0x2dfc: mov rax,rbx
0x2dff: mov rdi,rbx
0x2e02: movzx r8d,byte ptr [rsp+0x7d]
0x2e08: movzx ebx,byte ptr [rsp+0x7e]
0x2e0d: mov r9,qword ptr [rsp+0x88]
0x2e15: cmp rsi,r11
0x2e18: movzx r10d,byte ptr [rsp+0x7f]
0x2e1e: mov r15,qword ptr [rsp+0x80]
0x2e26: mov r14,qword ptr [rsp+0x40]
0x2e2b: mov r13,qword ptr [rsp+0x70]
0x2e30: jae 0x2e58
0x2e32: cmp byte ptr [rcx],0x0
0x2e35: jne 0x2e47
0x2e37: jmp 0x2e58
0x2e40: cmp byte ptr [r9+rax],0x0
0x2e45: je 0x2e55
0x2e47: add rax,0x1
0x2e4b: lea rdx,[rbp+rax]
0x2e50: cmp r11,rdx
0x2e53: ja 0x2e40
0x2e55: mov rdi,rax
0x2e58: movzx edx,byte ptr [rsp+0xd]
0x2e5d: xor r12d,r12d
0x2e60: jmp 0x28c6
0x2e65: mov rdi,rbx
0x2e68: movzx r8d,byte ptr [rsp+0x7d]
0x2e6e: movzx ebx,byte ptr [rsp+0x7e]
0x2e73: movzx r10d,byte ptr [rsp+0x7f]
0x2e79: mov r15,qword ptr [rsp+0x80]
0x2e81: xor r12d,r12d
0x2e84: mov r14,qword ptr [rsp+0x40]
0x2e89: mov r13,qword ptr [rsp+0x70]
0x2e8e: mov r11,qword ptr [rsp+0x30]
0x2e93: movzx edx,byte ptr [rsp+0xd]
0x2e98: jmp 0x28c6
0x2ecb: mov eax,edx
0x2ecd: jmp 0x2427
0x2fda: mov eax,edx
0x2fdc: mov rbx,qword ptr [rsp+0x48]
0x2fe1: test rbx,rbx
0x2fe4: je 0x3012
0x2fe6: test al,al
0x2fe8: je 0x3012
0x2fea: movzx ecx,byte ptr [rbx]
0x2fed: mov rax,rbx
0x2ff0: test cl,cl
0x2ff2: je 0x3012
0x2ff4: mov rdx,r15
0x2ff7: sub rax,r15
0x2ffa: cmp r13,rdx
0x2ffd: jbe 0x3003
0x2fff: mov byte ptr [r14+rdx],cl
0x3003: add rdx,0x1
0x3007: movzx ecx,byte ptr [rax+rdx]
0x300b: test cl,cl
0x300d: jne 0x2ffa
0x300f: mov r15,rdx
0x3012: cmp r13,r15
0x3015: jbe 0x2ab9
0x301b: mov byte ptr [r14+r15],0x0
0x3020: jmp 0x2ab9
0x3025: cmp dword ptr [rsp+0x8],0x2
0x302a: movzx ebx,byte ptr [rsp+0xf]
0x302f: mov rbp,r11
0x3032: sete al
0x3035: mov byte ptr [rsp+0xd],bl
0x3039: jmp 0x2a69
0x307d: sub rsp,0x8
0x3081: mov r8d,0x5
0x3087: mov rcx,r11
0x308a: push qword ptr [rsp+0x68]
0x308e: push qword ptr [rsp+0x78]
0x3092: mov rdi,r14
0x3095: push qword ptr [rsp+0x38]
0x3099: mov r9d,dword ptr [rsp+0x98]
0x30a1: mov rdx,qword ptr [rsp+0x30]
0x30a6: mov rsi,qword ptr [rsp+0x70]
0x30ab: call 0x1ee0
0x30b0: add rsp,0x20
0x30b4: mov r15,rax
0x30b7: jmp 0x2ab9
0x30bc: movzx eax,byte ptr [rsp+0x7c]
0x30c1: jmp 0x2fdc
0x30c6: mov dword ptr [rsp+0x8],0x2
0x30ce: jmp 0x2a69
0x30d3: call 0x12c0
0x30d8: mov byte ptr [rsp+0xd],0x0
0x30dd: jmp 0x2b51
0x30ea: mov byte ptr [rsp+0xe],0x1
0x30ef: xor eax,eax
0x30f1: xor r12d,r12d
0x30f4: mov qword ptr [rsp+0x50],0x0
0x30fd: jmp 0x26a4
0x310f: call 0x1210
0x3114: nop 
0x3116: nop word ptr cs:[rax+rax]
0x3120: push r15
0x3122: push r14
0x3124: movsxd r15,edi
0x3127: push r13
0x3129: push r12
0x312b: mov r14,rdx
0x312e: push rbp
0x312f: push rbx
0x3130: mov rbp,rcx
0x3133: sub rsp,0x28
0x3137: mov qword ptr [rsp+0x8],rsi
0x313c: call 0x1220
0x3141: mov r13,rax
0x3144: mov eax,dword ptr [rax]
0x3146: test r15d,r15d
0x3149: mov rbx,qword ptr [rip+0x203f10]
0x3150: mov dword ptr [rsp+0x18],eax
0x3154: js 0x32c1
0x315a: cmp dword ptr [rip+0x203ef7],r15d
0x3161: jg 0x31c5
0x3163: cmp r15d,0x7fffffff
0x316a: je 0x32c6
0x3170: lea r12d,[r15+0x1]
0x3174: lea rax,[rip+0x203ef5]
0x317b: movsxd rsi,r12d
0x317e: shl rsi,0x4
0x3182: cmp rbx,rax
0x3185: je 0x32a0
0x318b: mov rdi,rbx
0x318e: call 0x4100
0x3193: mov rbx,rax
0x3196: mov qword ptr [rip+0x203ec3],rax
0x319d: movsxd rdi,dword ptr [rip+0x203eb4]
0x31a4: mov edx,r12d
0x31a7: xor esi,esi
0x31a9: sub edx,edi
0x31ab: shl rdi,0x4
0x31af: movsxd rdx,edx
0x31b2: add rdi,rbx
0x31b5: shl rdx,0x4
0x31b9: call 0x1320
0x31be: mov dword ptr [rip+0x203e93],r12d
0x31c5: mov eax,dword ptr [rbp+0x4]
0x31c8: shl r15,0x4
0x31cc: sub rsp,0x8
0x31d0: add rbx,r15
0x31d3: lea r15,[rbp+0x8]
0x31d7: mov r8d,dword ptr [rbp]
0x31db: mov r11,qword ptr [rbx]
0x31de: mov r12,qword ptr [rbx+0x8]
0x31e2: mov rcx,r14
0x31e5: or eax,0x1
0x31e8: mov dword ptr [rsp+0x24],eax
0x31ec: push qword ptr [rbp+0x30]
0x31ef: mov r9d,eax
0x31f2: push qword ptr [rbp+0x28]
0x31f5: push r15
0x31f7: mov rsi,r11
0x31fa: mov rdx,qword ptr [rsp+0x28]
0x31ff: mov rdi,r12
0x3202: mov qword ptr [rsp+0x30],r11
0x3207: call 0x1ee0
0x320c: add rsp,0x20
0x3210: mov r11,qword ptr [rsp+0x10]
0x3215: cmp r11,rax
0x3218: ja 0x3281
0x321a: lea rsi,[rax+0x1]
0x321e: lea rax,[rip+0x203ebb]
0x3225: cmp r12,rax
0x3228: mov qword ptr [rbx],rsi
0x322b: je 0x323f
0x322d: mov rdi,r12
0x3230: mov qword ptr [rsp+0x10],rsi
0x3235: call 0x1200
0x323a: mov rsi,qword ptr [rsp+0x10]
0x323f: mov rdi,rsi
0x3242: mov qword ptr [rsp+0x10],rsi
0x3247: call 0x40a0
0x324c: sub rsp,0x8
0x3250: mov qword ptr [rbx+0x8],rax
0x3254: mov r8d,dword ptr [rbp]
0x3258: push qword ptr [rbp+0x30]
0x325b: push qword ptr [rbp+0x28]
0x325e: mov rcx,r14
0x3261: push r15
0x3263: mov r9d,dword ptr [rsp+0x3c]
0x3268: mov rdi,rax
0x326b: mov rdx,qword ptr [rsp+0x28]
0x3270: mov rsi,qword ptr [rsp+0x30]
0x3275: mov r12,rax
0x3278: call 0x1ee0
0x327d: add rsp,0x20
0x3281: mov eax,dword ptr [rsp+0x18]
0x3285: mov dword ptr [r13],eax
0x3289: add rsp,0x28
0x328d: mov rax,r12
0x3290: pop rbx
0x3291: pop rbp
0x3292: pop r12
0x3294: pop r13
0x3296: pop r14
0x3298: pop r15
0x329a: ret 
0x32a0: xor edi,edi
0x32a2: call 0x4100
0x32a7: movdqa xmm0,xmmword ptr [rip+0x203dc1]
0x32af: mov rbx,rax
0x32b2: mov qword ptr [rip+0x203da7],rax
0x32b9: movups xmmword ptr [rax],xmm0
0x32bc: jmp 0x319d
0x32c1: call 0x1210
0x32c6: call 0x42f0
0x32cb: nop dword ptr [rax+rax]
0x32d0: push r12
0x32d2: push rbp
0x32d3: push rbx
0x32d4: mov rbx,rdi
0x32d7: call 0x1220
0x32dc: mov r12d,dword ptr [rax]
0x32df: mov rbp,rax
0x32e2: lea rax,[rip+0x203ef7]
0x32e9: test rbx,rbx
0x32ec: mov esi,0x38
0x32f1: cmove rbx,rax
0x32f5: mov rdi,rbx
0x32f8: call 0x42a0
0x32fd: mov dword ptr [rbp],r12d
0x3301: pop rbx
0x3302: pop rbp
0x3303: pop r12
0x3305: ret 
0x3310: lea rax,[rip+0x203ec9]
0x3317: test rdi,rdi
0x331a: cmove rdi,rax
0x331e: mov eax,dword ptr [rdi]
0x3320: ret 
0x3330: lea rax,[rip+0x203ea9]
0x3337: test rdi,rdi
0x333a: cmove rdi,rax
0x333e: mov dword ptr [rdi],esi
0x3340: ret 
0x3350: lea rax,[rip+0x203e89]
0x3357: test rdi,rdi
0x335a: mov ecx,esi
0x335c: cmove rdi,rax
0x3360: mov eax,esi
0x3362: and ecx,0x1f
0x3365: shr al,0x5
0x3368: movzx eax,al
0x336b: lea rdi,[rdi+rax*4+0x8]
0x3370: mov esi,dword ptr [rdi]
0x3372: mov eax,esi
0x3374: shr eax,cl
0x3376: xor edx,eax
0x3378: and eax,0x1
0x337b: and edx,0x1
0x337e: shl edx,cl
0x3380: xor edx,esi
0x3382: mov dword ptr [rdi],edx
0x3384: ret 
0x3390: lea rax,[rip+0x203e49]
0x3397: test rdi,rdi
0x339a: cmove rdi,rax
0x339e: mov eax,dword ptr [rdi+0x4]
0x33a1: mov dword ptr [rdi+0x4],esi
0x33a4: ret 
0x33b0: lea rax,[rip+0x203e29]
0x33b7: test rdi,rdi
0x33ba: cmove rdi,rax
0x33be: test rsi,rsi
0x33c1: mov dword ptr [rdi],0xa
0x33c7: je 0x33d7
0x33c9: test rdx,rdx
0x33cc: je 0x33d7
0x33ce: mov qword ptr [rdi+0x28],rsi
0x33d2: mov qword ptr [rdi+0x30],rdx
0x33d6: ret 
0x33d7: sub rsp,0x8
0x33db: call 0x1210
0x33e0: push r15
0x33e2: push r14
0x33e4: lea rax,[rip+0x203df5]
0x33eb: push r13
0x33ed: push r12
0x33ef: mov r13,rdi
0x33f2: push rbp
0x33f3: push rbx
0x33f4: mov rbx,r8
0x33f7: mov r14,rsi
0x33fa: mov r15,rdx
0x33fd: sub rsp,0x18
0x3401: test r8,r8
0x3404: cmove rbx,rax
0x3408: mov qword ptr [rsp+0x8],rcx
0x340d: call 0x1220
0x3412: mov r12d,dword ptr [rax]
0x3415: mov rbp,rax
0x3418: lea rax,[rbx+0x8]
0x341c: sub rsp,0x8
0x3420: mov r9d,dword ptr [rbx+0x4]
0x3424: push qword ptr [rbx+0x30]
0x3427: mov r8d,dword ptr [rbx]
0x342a: push qword ptr [rbx+0x28]
0x342d: mov rdx,r15
0x3430: push rax
0x3431: mov rcx,qword ptr [rsp+0x28]
0x3436: mov rsi,r14
0x3439: mov rdi,r13
0x343c: call 0x1ee0
0x3441: mov dword ptr [rbp],r12d
0x3445: add rsp,0x38
0x3449: pop rbx
0x344a: pop rbp
0x344b: pop r12
0x344d: pop r13
0x344f: pop r14
0x3451: pop r15
0x3453: ret 
0x3460: push r15
0x3462: push r14
0x3464: lea rax,[rip+0x203d75]
0x346b: push r13
0x346d: push r12
0x346f: mov r12,rdx
0x3472: push rbp
0x3473: push rbx
0x3474: mov rbx,rcx
0x3477: mov r14,rdi
0x347a: mov r15,rsi
0x347d: sub rsp,0x38
0x3481: test rcx,rcx
0x3484: cmove rbx,rax
0x3488: xor ebp,ebp
0x348a: call 0x1220
0x348f: test r12,r12
0x3492: mov r13,rax
0x3495: mov eax,dword ptr [rax]
0x3497: sete bpl
0x349b: or ebp,dword ptr [rbx+0x4]
0x349e: lea r10,[rbx+0x8]
0x34a2: sub rsp,0x8
0x34a6: mov r8d,dword ptr [rbx]
0x34a9: mov rcx,r15
0x34ac: mov dword ptr [rsp+0x14],eax
0x34b0: push qword ptr [rbx+0x30]
0x34b3: mov rdx,r14
0x34b6: push qword ptr [rbx+0x28]
0x34b9: push r10
0x34bb: xor esi,esi
0x34bd: mov r9d,ebp
0x34c0: xor edi,edi
0x34c2: mov qword ptr [rsp+0x40],r10
0x34c7: call 0x1ee0
0x34cc: lea rsi,[rax+0x1]
0x34d0: mov qword ptr [rsp+0x48],rax
0x34d5: add rsp,0x20
0x34d9: mov rdi,rsi
0x34dc: mov qword ptr [rsp+0x18],rsi
0x34e1: call 0x40a0
0x34e6: mov qword ptr [rsp+0x10],rax
0x34eb: sub rsp,0x8
0x34ef: push qword ptr [rbx+0x30]
0x34f2: push qword ptr [rbx+0x28]
0x34f5: mov r10,qword ptr [rsp+0x38]
0x34fa: mov r9d,ebp
0x34fd: mov r8d,dword ptr [rbx]
0x3500: mov rcx,r15
0x3503: mov rdx,r14
0x3506: mov rdi,rax
0x3509: push r10
0x350b: mov rsi,qword ptr [rsp+0x38]
0x3510: call 0x1ee0
0x3515: mov eax,dword ptr [rsp+0x2c]
0x3519: add rsp,0x20
0x351d: test r12,r12
0x3520: mov dword ptr [r13],eax
0x3524: je 0x352f
0x3526: mov r11,qword ptr [rsp+0x28]
0x352b: mov qword ptr [r12],r11
0x352f: mov rax,qword ptr [rsp+0x10]
0x3534: add rsp,0x38
0x3538: pop rbx
0x3539: pop rbp
0x353a: pop r12
0x353c: pop r13
0x353e: pop r14
0x3540: pop r15
0x3542: ret 
0x3550: mov rcx,rdx
0x3553: xor edx,edx
0x3555: jmp 0x3460
0x3560: mov eax,dword ptr [rip+0x203af2]
0x3566: push r12
0x3568: mov r12,qword ptr [rip+0x203af1]
0x356f: push rbp
0x3570: push rbx
0x3571: cmp eax,0x1
0x3574: jle 0x35a1
0x3576: sub eax,0x2
0x3579: lea rbx,[r12+0x18]
0x357e: shl rax,0x4
0x3582: lea rbp,[r12+rax+0x28]
0x3587: nop word ptr [rax+rax]
0x3590: mov rdi,qword ptr [rbx]
0x3593: add rbx,0x10
0x3597: call 0x1200
0x359c: cmp rbx,rbp
0x359f: jne 0x3590
0x35a1: mov rdi,qword ptr [r12+0x8]
0x35a6: lea rbx,[rip+0x203b33]
0x35ad: cmp rdi,rbx
0x35b0: je 0x35c9
0x35b2: call 0x1200
0x35b7: mov qword ptr [rip+0x203aae],0x100
0x35c2: mov qword ptr [rip+0x203aaf],rbx
0x35c9: lea rbx,[rip+0x203aa0]
0x35d0: cmp r12,rbx
0x35d3: je 0x35e4
0x35d5: mov rdi,r12
0x35d8: call 0x1200
0x35dd: mov qword ptr [rip+0x203a7c],rbx
0x35e4: pop rbx
0x35e5: mov dword ptr [rip+0x203a69],0x1
0x35ef: pop rbp
0x35f0: pop r12
0x35f2: ret 
0x3600: lea rcx,[rip+0x203bd9]
0x3607: mov rdx,-0x1
0x360e: jmp 0x3120
0x3620: lea rcx,[rip+0x203bb9]
0x3627: jmp 0x3120
0x3630: lea rcx,[rip+0x203ba9]
0x3637: mov rsi,rdi
0x363a: mov rdx,-0x1
0x3641: xor edi,edi
0x3643: jmp 0x3120
0x3650: lea rcx,[rip+0x203b89]
0x3657: mov rdx,rsi
0x365a: mov rsi,rdi
0x365d: xor edi,edi
0x365f: jmp 0x3120
0x3670: sub rsp,0x48
0x3674: mov rax,rdx
0x3677: mov rdx,qword ptr fs:0x28
0x3680: mov qword ptr [rsp+0x38],rdx
0x3685: xor edx,edx
0x3687: cmp esi,0xa
0x368a: je 0x36f4
0x368c: mov dword ptr [rsp],esi
0x368f: mov rcx,rsp
0x3692: mov rdx,-0x1
0x3699: mov rsi,rax
0x369c: mov qword ptr [rsp+0x4],0x0
0x36a5: mov qword ptr [rsp+0xc],0x0
0x36ae: mov qword ptr [rsp+0x14],0x0
0x36b7: mov qword ptr [rsp+0x1c],0x0
0x36c0: mov qword ptr [rsp+0x24],0x0
0x36c9: mov qword ptr [rsp+0x2c],0x0
0x36d2: mov dword ptr [rsp+0x34],0x0
0x36da: call 0x3120
0x36df: mov rcx,qword ptr [rsp+0x38]
0x36e4: xor rcx,qword ptr fs:0x28
0x36ed: jne 0x36f9
0x36ef: add rsp,0x48
0x36f3: ret 
0x36f4: call 0x1210
0x36f9: call 0x12c0
0x36fe: nop 
0x3700: sub rsp,0x48
0x3704: mov rax,rdx
0x3707: mov rdx,rcx
0x370a: mov rcx,qword ptr fs:0x28
0x3713: mov qword ptr [rsp+0x38],rcx
0x3718: xor ecx,ecx
0x371a: cmp esi,0xa
0x371d: je 0x3780
0x371f: mov dword ptr [rsp],esi
0x3722: mov rcx,rsp
0x3725: mov rsi,rax
0x3728: mov qword ptr [rsp+0x4],0x0
0x3731: mov qword ptr [rsp+0xc],0x0
0x373a: mov qword ptr [rsp+0x14],0x0
0x3743: mov qword ptr [rsp+0x1c],0x0
0x374c: mov qword ptr [rsp+0x24],0x0
0x3755: mov qword ptr [rsp+0x2c],0x0
0x375e: mov dword ptr [rsp+0x34],0x0
0x3766: call 0x3120
0x376b: mov rdx,qword ptr [rsp+0x38]
0x3770: xor rdx,qword ptr fs:0x28
0x3779: jne 0x3785
0x377b: add rsp,0x48
0x377f: ret 
0x3780: call 0x1210
0x3785: call 0x12c0
0x378a: nop word ptr [rax+rax]
0x3790: mov rdx,rsi
0x3793: mov esi,edi
0x3795: xor edi,edi
0x3797: jmp 0x3670
0x37a0: mov rcx,rdx
0x37a3: mov rdx,rsi
0x37a6: mov esi,edi
0x37a8: xor edi,edi
0x37aa: jmp 0x3700
0x37b0: sub rsp,0x48
0x37b4: mov ecx,edx
0x37b6: mov rax,qword ptr fs:0x28
0x37bf: mov qword ptr [rsp+0x38],rax
0x37c4: xor eax,eax
0x37c6: mov rax,qword ptr [rip+0x203a43]
0x37cd: mov r8,rsp
0x37d0: and ecx,0x1f
0x37d3: movdqa xmm0,xmmword ptr [rip+0x203a05]
0x37db: mov qword ptr [rsp+0x30],rax
0x37e0: mov eax,edx
0x37e2: movaps xmmword ptr [rsp],xmm0
0x37e6: shr al,0x5
0x37e9: movzx eax,al
0x37ec: lea r9,[r8+rax*4+0x8]
0x37f1: movdqa xmm0,xmmword ptr [rip+0x2039f7]
0x37f9: movaps xmmword ptr [rsp+0x10],xmm0
0x37fe: movdqa xmm0,xmmword ptr [rip+0x2039fa]
0x3806: movaps xmmword ptr [rsp+0x20],xmm0
0x380b: mov edx,dword ptr [r9]
0x380e: mov eax,edx
0x3810: shr eax,cl
0x3812: not eax
0x3814: and eax,0x1
0x3817: shl eax,cl
0x3819: mov rcx,r8
0x381c: xor eax,edx
0x381e: mov rdx,rsi
0x3821: mov rsi,rdi
0x3824: mov dword ptr [r9],eax
0x3827: xor edi,edi
0x3829: call 0x3120
0x382e: mov rsi,qword ptr [rsp+0x38]
0x3833: xor rsi,qword ptr fs:0x28
0x383c: jne 0x3843
0x383e: add rsp,0x48
0x3842: ret 
0x3843: call 0x12c0
0x3848: nop dword ptr [rax+rax]
0x3850: movsx edx,sil
0x3854: mov rsi,-0x1
0x385b: jmp 0x37b0
0x3860: mov edx,0x3a
0x3865: mov rsi,-0x1
0x386c: jmp 0x37b0
0x3880: mov edx,0x3a
0x3885: jmp 0x37b0
0x3890: sub rsp,0x48
0x3894: mov rax,rdx
0x3897: mov rdx,qword ptr fs:0x28
0x38a0: mov qword ptr [rsp+0x38],rdx
0x38a5: xor edx,edx
0x38a7: cmp esi,0xa
0x38aa: je 0x3914
0x38ac: mov dword ptr [rsp],esi
0x38af: mov rcx,rsp
0x38b2: mov rdx,-0x1
0x38b9: mov rsi,rax
0x38bc: mov qword ptr [rsp+0x4],0x0
0x38c5: mov qword ptr [rsp+0xc],0x4000000
0x38ce: mov qword ptr [rsp+0x14],0x0
0x38d7: mov qword ptr [rsp+0x1c],0x0
0x38e0: mov qword ptr [rsp+0x24],0x0
0x38e9: mov qword ptr [rsp+0x2c],0x0
0x38f2: mov dword ptr [rsp+0x34],0x0
0x38fa: call 0x3120
0x38ff: mov rcx,qword ptr [rsp+0x38]
0x3904: xor rcx,qword ptr fs:0x28
0x390d: jne 0x3919
0x390f: add rsp,0x48
0x3913: ret 
0x3914: call 0x1210
0x3919: call 0x12c0
0x391e: nop 
0x3920: sub rsp,0x48
0x3924: mov r9,rcx
0x3927: mov rcx,qword ptr [rip+0x2038e2]
0x392e: movdqa xmm0,xmmword ptr [rip+0x2038aa]
0x3936: mov rax,qword ptr fs:0x28
0x393f: mov qword ptr [rsp+0x38],rax
0x3944: xor eax,eax
0x3946: movaps xmmword ptr [rsp],xmm0
0x394a: test rsi,rsi
0x394d: mov qword ptr [rsp+0x30],rcx
0x3952: mov dword ptr [rsp],0xa
0x3959: movdqa xmm0,xmmword ptr [rip+0x20388f]
0x3961: movaps xmmword ptr [rsp+0x10],xmm0
0x3966: movdqa xmm0,xmmword ptr [rip+0x203892]
0x396e: movaps xmmword ptr [rsp+0x20],xmm0
0x3973: je 0x39a7
0x3975: test rdx,rdx
0x3978: je 0x39a7
0x397a: mov qword ptr [rsp+0x28],rsi
0x397f: mov qword ptr [rsp+0x30],rdx
0x3984: mov rcx,rsp
0x3987: mov rdx,r8
0x398a: mov rsi,r9
0x398d: call 0x3120
0x3992: mov rdi,qword ptr [rsp+0x38]
0x3997: xor rdi,qword ptr fs:0x28
0x39a0: jne 0x39ac
0x39a2: add rsp,0x48
0x39a6: ret 
0x39a7: call 0x1210
0x39ac: call 0x12c0
0x39b1: nop dword ptr [rax+rax]
0x39b6: nop word ptr cs:[rax+rax]
0x39c0: mov r8,-0x1
0x39c7: jmp 0x3920
0x39d0: mov rcx,rdx
0x39d3: mov r8,-0x1
0x39da: mov rdx,rsi
0x39dd: mov rsi,rdi
0x39e0: xor edi,edi
0x39e2: jmp 0x3920
0x39f0: mov r8,rcx
0x39f3: mov rcx,rdx
0x39f6: mov rdx,rsi
0x39f9: mov rsi,rdi
0x39fc: xor edi,edi
0x39fe: jmp 0x3920
0x3a10: lea rcx,[rip+0x203609]
0x3a17: jmp 0x3120
0x3a20: lea rcx,[rip+0x2035f9]
0x3a27: mov rdx,rsi
0x3a2a: mov rsi,rdi
0x3a2d: xor edi,edi
0x3a2f: jmp 0x3120
0x3a40: lea rcx,[rip+0x2035d9]
0x3a47: mov rdx,-0x1
0x3a4e: jmp 0x3120
0x3a60: lea rcx,[rip+0x2035b9]
0x3a67: mov rsi,rdi
0x3a6a: mov rdx,-0x1
0x3a71: xor edi,edi
0x3a73: jmp 0x3120
0x3bb8: mov r8,rcx
0x3bbb: mov rcx,rdx
0x3bbe: lea rdx,[rip+0x13cf]
0x3bc5: mov esi,0x1
0x3bca: xor eax,eax
0x3bcc: call 0x1450
0x3bd1: jmp 0x3abc
0x3dcd: push r12
0x3dcf: push r15
0x3dd1: push r14
0x3dd3: mov r8,qword ptr [rsp+0x20]
0x3dd8: mov rcx,rbx
0x3ddb: mov rdx,rax
0x3dde: mov rdi,rbp
0x3de1: mov esi,0x1
0x3de6: xor eax,eax
0x3de8: call 0x1450
0x3ded: add rsp,0x20
0x3df1: add rsp,0x28
0x3df5: pop rbx
0x3df6: pop rbp
0x3df7: pop r12
0x3df9: pop r13
0x3dfb: pop r14
0x3dfd: pop r15
0x3dff: ret 
0x3e39: push r12
0x3e3b: push r15
0x3e3d: push r14
0x3e3f: mov r9,qword ptr [rsp+0x28]
0x3e44: jmp 0x3dd3
0x3ea0: xor r9d,r9d
0x3ea3: cmp qword ptr [r8],0x0
0x3ea7: je 0x3ebb
0x3ea9: nop dword ptr [rax]
0x3eb0: add r9,0x1
0x3eb4: cmp qword ptr [r8+r9*8],0x0
0x3eb9: jne 0x3eb0
0x3ebb: jmp 0x3a80
0x3ec0: sub rsp,0x68
0x3ec4: mov r10,r8
0x3ec7: xor r9d,r9d
0x3eca: mov rax,qword ptr fs:0x28
0x3ed3: mov qword ptr [rsp+0x58],rax
0x3ed8: xor eax,eax
0x3eda: mov r8,rsp
0x3edd: nop dword ptr [rax]
0x3ee0: mov eax,dword ptr [r10]
0x3ee3: cmp eax,0x2f
0x3ee6: ja 0x3f2a
0x3ee8: mov r11d,eax
0x3eeb: add r11,qword ptr [r10+0x10]
0x3eef: add eax,0x8
0x3ef2: mov dword ptr [r10],eax
0x3ef5: mov rax,qword ptr [r11]
0x3ef8: test rax,rax
0x3efb: mov qword ptr [r8+r9*8],rax
0x3eff: je 0x3f0b
0x3f01: add r9,0x1
0x3f05: cmp r9,0xa
0x3f09: jne 0x3ee0
0x3f0b: call 0x3a80
0x3f10: mov rax,qword ptr [rsp+0x58]
0x3f15: xor rax,qword ptr fs:0x28
0x3f1e: jne 0x3f25
0x3f20: add rsp,0x68
0x3f24: ret 
0x3f25: call 0x12c0
0x3f2a: mov r11,qword ptr [r10+0x8]
0x3f2e: lea rax,[r11+0x8]
0x3f32: mov qword ptr [r10+0x8],rax
0x3f36: jmp 0x3ef5
0x4020: push rbx
0x4021: lea rsi,[rip+0xfba]
0x4028: mov edx,0x5
0x402d: xor edi,edi
0x402f: call 0x1290
0x4034: lea rdx,[rip+0xfbc]
0x403b: mov rsi,rax
0x403e: mov edi,0x1
0x4043: xor eax,eax
0x4045: call 0x13f0
0x404a: lea rsi,[rip+0xfbc]
0x4051: mov edx,0x5
0x4056: xor edi,edi
0x4058: call 0x1290
0x405d: lea rcx,[rip+0x954]
0x4064: lea rdx,[rip+0x6d3]
0x406b: mov rsi,rax
0x406e: mov edi,0x1
0x4073: xor eax,eax
0x4075: call 0x13f0
0x407a: mov rbx,qword ptr [rip+0x203007]
0x4081: lea rsi,[rip+0x11b8]
0x4088: xor edi,edi
0x408a: mov edx,0x5
0x408f: call 0x1290
0x4094: mov rsi,rbx
0x4097: mov rdi,rax
0x409a: pop rbx
0x409b: jmp 0x1340
0x40a0: push rbx
0x40a1: mov rbx,rdi
0x40a4: call 0x1380
0x40a9: test rax,rax
0x40ac: jne 0x40b3
0x40ae: test rbx,rbx
0x40b1: jne 0x40b5
0x40b3: pop rbx
0x40b4: ret 
0x40b5: call 0x42f0
0x40ba: nop word ptr [rax+rax]
0x40c0: mov rax,rdi
0x40c3: mul rsi
0x40c6: mov rdi,rax
0x40c9: seto al
0x40cc: test rdi,rdi
0x40cf: js 0x40db
0x40d1: movzx eax,al
0x40d4: test rax,rax
0x40d7: jne 0x40db
0x40d9: jmp 0x40a0
0x40db: sub rsp,0x8
0x40df: call 0x42f0
0x40e4: nop 
0x40e6: nop word ptr cs:[rax+rax]
0x40f0: jmp 0x40a0
0x4100: test rsi,rsi
0x4103: push rbx
0x4104: mov rbx,rsi
0x4107: jne 0x410e
0x4109: test rdi,rdi
0x410c: jne 0x4128
0x410e: mov rsi,rbx
0x4111: call 0x13d0
0x4116: test rax,rax
0x4119: jne 0x4120
0x411b: test rbx,rbx
0x411e: jne 0x4131
0x4120: pop rbx
0x4121: ret 
0x4128: call 0x1200
0x412d: xor eax,eax
0x412f: pop rbx
0x4130: ret 
0x4131: call 0x42f0
0x4136: nop word ptr cs:[rax+rax]
0x4140: mov rax,rsi
0x4143: mul rdx
0x4146: mov rsi,rax
0x4149: seto al
0x414c: test rsi,rsi
0x414f: js 0x415b
0x4151: movzx eax,al
0x4154: test rax,rax
0x4157: jne 0x415b
0x4159: jmp 0x4100
0x415b: sub rsp,0x8
0x415f: call 0x42f0
0x4164: nop 
0x4166: nop word ptr cs:[rax+rax]
0x4170: test rdi,rdi
0x4173: mov r9,rdx
0x4176: mov rcx,qword ptr [rsi]
0x4179: je 0x41b0
0x417b: xor edx,edx
0x417d: movabsq rax,0x5555555555555554
0x4187: div r9
0x418a: cmp rax,rcx
0x418d: jbe 0x41cb
0x418f: mov rax,rcx
0x4192: shr rax, 1
0x4195: lea rcx,[rax+rcx+0x1]
0x419a: mov qword ptr [rsi],rcx
0x419d: imul rcx,r9
0x41a1: mov rsi,rcx
0x41a4: jmp 0x4100
0x41b0: test rcx,rcx
0x41b3: je 0x41d8
0x41b5: mov rax,rcx
0x41b8: mul r9
0x41bb: seto dl
0x41be: test rax,rax
0x41c1: movzx edx,dl
0x41c4: js 0x41cb
0x41c6: test rdx,rdx
0x41c9: je 0x419a
0x41cb: sub rsp,0x8
0x41cf: call 0x42f0
0x41d4: nop dword ptr [rax]
0x41d8: xor edx,edx
0x41da: mov eax,0x80
0x41df: xor r8d,r8d
0x41e2: div r9
0x41e5: test rax,rax
0x41e8: sete r8b
0x41ec: lea rcx,[r8+rax]
0x41f0: jmp 0x41b5
0x4200: test rdi,rdi
0x4203: mov rax,qword ptr [rsi]
0x4206: je 0x4230
0x4208: movabsq rdx,0x5555555555555553
0x4212: cmp rax,rdx
0x4215: ja 0x4241
0x4217: mov rdx,rax
0x421a: shr rdx, 1
0x421d: lea rax,[rdx+rax+0x1]
0x4222: mov qword ptr [rsi],rax
0x4225: mov rsi,rax
0x4228: jmp 0x4100
0x4230: test rax,rax
0x4233: mov edx,0x80
0x4238: cmove rax,rdx
0x423c: test rax,rax
0x423f: jns 0x4222
0x4241: sub rsp,0x8
0x4245: call 0x42f0
0x424a: nop word ptr [rax+rax]
0x4250: push rbx
0x4251: mov rbx,rdi
0x4254: call 0x40a0
0x4259: mov rdx,rbx
0x425c: xor esi,esi
0x425e: mov rdi,rax
0x4261: pop rbx
0x4262: jmp 0x1320
0x4270: mov rax,rdi
0x4273: sub rsp,0x8
0x4277: mul rsi
0x427a: seto dl
0x427d: test rax,rax
0x4280: js 0x4299
0x4282: movzx edx,dl
0x4285: test rdx,rdx
0x4288: jne 0x4299
0x428a: call 0x1350
0x428f: test rax,rax
0x4292: je 0x4299
0x4294: add rsp,0x8
0x4298: ret 
0x4299: call 0x42f0
0x429e: nop 
0x42a0: push rbp
0x42a1: push rbx
0x42a2: mov rbp,rdi
0x42a5: mov rdi,rsi
0x42a8: mov rbx,rsi
0x42ab: sub rsp,0x8
0x42af: call 0x40a0
0x42b4: add rsp,0x8
0x42b8: mov rdx,rbx
0x42bb: mov rsi,rbp
0x42be: pop rbx
0x42bf: pop rbp
0x42c0: mov rdi,rax
0x42c3: jmp 0x1360
0x42d0: push rbx
0x42d1: mov rbx,rdi
0x42d4: call 0x12b0
0x42d9: mov rdi,rbx
0x42dc: lea rsi,[rax+0x1]
0x42e0: pop rbx
0x42e1: jmp 0x42a0
0x42f0: lea rsi,[rip+0xff8]
0x42f7: sub rsp,0x8
0x42fb: mov edx,0x5
0x4300: xor edi,edi
0x4302: call 0x1290
0x4307: mov edi,dword ptr [rip+0x202d0b]
0x430d: lea rdx,[rip+0x75c]
0x4314: mov rcx,rax
0x4317: xor esi,esi
0x4319: xor eax,eax
0x431b: call 0x1400
0x4320: call 0x1210
0x4325: nop word ptr cs:[rax+rax]
0x432f: nop 
0x4330: push r13
0x4332: push r12
0x4334: mov r13,rsi
0x4337: push rbp
0x4338: push rbx
0x4339: mov rbx,rdi
0x433c: mov r12,rdx
0x433f: sub rsp,0x18
0x4343: mov rax,qword ptr fs:0x28
0x434c: mov qword ptr [rsp+0x8],rax
0x4351: xor eax,eax
0x4353: lea rax,[rsp+0x4]
0x4358: test rdi,rdi
0x435b: cmove rbx,rax
0x435f: mov rdi,rbx
0x4362: call 0x12e0
0x4367: cmp rax,-0x3
0x436b: mov rbp,rax
0x436e: jbe 0x4390
0x4370: test r12,r12
0x4373: je 0x4390
0x4375: xor edi,edi
0x4377: call 0x4440
0x437c: test al,al
0x437e: jne 0x4390
0x4380: movzx eax,byte ptr [r13]
0x4385: mov ebp,0x1
0x438a: mov dword ptr [rbx],eax
0x438c: nop dword ptr [rax]
0x4390: mov rdx,qword ptr [rsp+0x8]
0x4395: xor rdx,qword ptr fs:0x28
0x439e: mov rax,rbp
0x43a1: jne 0x43ae
0x43a3: add rsp,0x18
0x43a7: pop rbx
0x43a8: pop rbp
0x43a9: pop r12
0x43ab: pop r13
0x43ad: ret 
0x43ae: call 0x12c0
0x43b3: nop word ptr cs:[rax+rax]
0x43bd: nop dword ptr [rax]
0x43c0: push r12
0x43c2: push rbp
0x43c3: mov rbp,rdi
0x43c6: push rbx
0x43c7: call 0x1250
0x43cc: mov ebx,dword ptr [rbp]
0x43cf: mov rdi,rbp
0x43d2: mov r12,rax
0x43d5: call 0x44e0
0x43da: and ebx,0x20
0x43dd: test ebx,ebx
0x43df: jne 0x43f8
0x43e1: test eax,eax
0x43e3: je 0x43ef
0x43e5: test r12,r12
0x43e8: mov eax,0xffffffff
0x43ed: je 0x4428
0x43ef: pop rbx
0x43f0: pop rbp
0x43f1: pop r12
0x43f3: ret 
0x43f8: test eax,eax
0x43fa: jne 0x4418
0x43fc: call 0x1220
0x4401: mov dword ptr [rax],0x0
0x4407: mov eax,0xffffffff
0x440c: pop rbx
0x440d: pop rbp
0x440e: pop r12
0x4410: ret 
0x4418: pop rbx
0x4419: mov eax,0xffffffff
0x441e: pop rbp
0x441f: pop r12
0x4421: ret 
0x4428: call 0x1220
0x442d: cmp dword ptr [rax],0x9
0x4430: pop rbx
0x4431: pop rbp
0x4432: pop r12
0x4434: setne al
0x4437: movzx eax,al
0x443a: neg eax
0x443c: ret 
0x4440: sub rsp,0x8
0x4444: xor esi,esi
0x4446: call 0x13e0
0x444b: mov rdx,rax
0x444e: mov eax,0x1
0x4453: test rdx,rdx
0x4456: je 0x4475
0x4458: lea rdi,[rip+0xea1]
0x445f: mov ecx,0x2
0x4464: mov rsi,rdx
0x4467: rep cmpsb [rsi],es:[rdi]
0x4469: seta cl
0x446c: sbb cl,0x0
0x446f: xor eax,eax
0x4471: test cl,cl
0x4473: jne 0x4480
0x4475: add rsp,0x8
0x4479: ret 
0x4480: lea rdi,[rip+0xe7b]
0x4487: mov ecx,0x6
0x448c: mov rsi,rdx
0x448f: rep cmpsb [rsi],es:[rdi]
0x4491: seta al
0x4494: sbb al,0x0
0x4496: test al,al
0x4498: setne al
0x449b: add rsp,0x8
0x449f: ret 
0x44a0: sub rsp,0x8
0x44a4: mov edi,0xe
0x44a9: call 0x13a0
0x44ae: test rax,rax
0x44b1: je 0x44d0
0x44b3: cmp byte ptr [rax],0x0
0x44b6: lea rdx,[rip+0xe4b]
0x44bd: cmove rax,rdx
0x44c1: add rsp,0x8
0x44c5: ret 
0x44d0: lea rax,[rip+0xe31]
0x44d7: add rsp,0x8
0x44db: ret 
0x44e0: push r12
0x44e2: push rbp
0x44e3: push rbx
0x44e4: mov rbx,rdi
0x44e7: call 0x1370
0x44ec: test eax,eax
0x44ee: mov rdi,rbx
0x44f1: js 0x4547
0x44f3: call 0x13b0
0x44f8: test eax,eax
0x44fa: jne 0x4528
0x44fc: mov rdi,rbx
0x44ff: call 0x4560
0x4504: test eax,eax
0x4506: je 0x4544
0x4508: call 0x1220
0x450d: mov r12d,dword ptr [rax]
0x4510: mov rdi,rbx
0x4513: mov rbp,rax
0x4516: call 0x1270
0x451b: test r12d,r12d
0x451e: jne 0x4550
0x4520: pop rbx
0x4521: pop rbp
0x4522: pop r12
0x4524: ret 
0x4528: mov rdi,rbx
0x452b: call 0x1370
0x4530: xor esi,esi
0x4532: mov edx,0x1
0x4537: mov edi,eax
0x4539: call 0x1310
0x453e: cmp rax,-0x1
0x4542: jne 0x44fc
0x4544: mov rdi,rbx
0x4547: pop rbx
0x4548: pop rbp
0x4549: pop r12
0x454b: jmp 0x1270
0x4550: mov dword ptr [rbp],r12d
0x4554: mov eax,0xffffffff
0x4559: jmp 0x4520
0x4560: test rdi,rdi
0x4563: push rbx
0x4564: mov rbx,rdi
0x4567: je 0x457a
0x4569: call 0x13b0
0x456e: test eax,eax
0x4570: je 0x457a
0x4572: test dword ptr [rbx],0x100
0x4578: jne 0x4588
0x457a: mov rdi,rbx
0x457d: pop rbx
0x457e: jmp 0x1390
0x4588: mov rdi,rbx
0x458b: mov edx,0x1
0x4590: xor esi,esi
0x4592: call 0x45a0
0x4597: mov rdi,rbx
0x459a: pop rbx
0x459b: jmp 0x1390
0x45a0: mov rax,qword ptr [rdi+0x8]
0x45a4: cmp qword ptr [rdi+0x10],rax
0x45a8: je 0x45b0
0x45aa: jmp 0x1410
0x45b0: mov rax,qword ptr [rdi+0x20]
0x45b4: cmp qword ptr [rdi+0x28],rax
0x45b8: jne 0x45aa
0x45ba: cmp qword ptr [rdi+0x48],0x0
0x45bf: jne 0x45aa
0x45c1: push r12
0x45c3: push rbp
0x45c4: mov r12d,edx
0x45c7: push rbx
0x45c8: mov rbp,rsi
0x45cb: mov rbx,rdi
0x45ce: call 0x1370
0x45d3: mov edx,r12d
0x45d6: mov rsi,rbp
0x45d9: mov edi,eax
0x45db: call 0x1310
0x45e0: cmp rax,-0x1
0x45e4: je 0x45f2
0x45e6: and dword ptr [rbx],-0x11
0x45e9: mov qword ptr [rbx+0x90],rax
0x45f0: xor eax,eax
0x45f2: pop rbx
0x45f3: pop rbp
0x45f4: pop r12
0x45f6: ret 
0x4600: push r15
0x4602: push r14
0x4604: mov r15,rdx
0x4607: push r13
0x4609: push r12
0x460b: lea r12,[rip+0x20257e]
0x4612: push rbp
0x4613: lea rbp,[rip+0x20257e]
0x461a: push rbx
0x461b: mov r13d,edi
0x461e: mov r14,rsi
0x4621: sub rbp,r12
0x4624: sub rsp,0x8
0x4628: sar rbp,0x3
0x462c: call 0x11d8
0x4631: test rbp,rbp
0x4634: je 0x4656
0x4636: xor ebx,ebx
0x4638: nop dword ptr [rax+rax]
0x4640: mov rdx,r15
0x4643: mov rsi,r14
0x4646: mov edi,r13d
0x4649: call qword ptr [r12+rbx*8]
0x464d: add rbx,0x1
0x4651: cmp rbp,rbx
0x4654: jne 0x4640
0x4656: add rsp,0x8
0x465a: pop rbx
0x465b: pop rbp
0x465c: pop r12
0x465e: pop r13
0x4660: pop r14
0x4662: pop r15
0x4664: ret 
0x4670: rep ret 
