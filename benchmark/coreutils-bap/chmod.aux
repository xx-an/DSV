0x16c8: sub rsp,0x8
0x16cc: mov rax,qword ptr [rip+0x20c915]
0x16d3: test rax,rax
0x16d6: je 0x16da
0x16d8: call rax
0x16da: add rsp,0x8
0x16de: ret 
0x16e6: jmp qword ptr [rip+0x20c70c]
0x1720: jmp qword ptr [rip+0x20c6f2]
0x1730: jmp qword ptr [rip+0x20c6ea]
0x1770: jmp qword ptr [rip+0x20c6ca]
0x17e0: jmp qword ptr [rip+0x20c692]
0x1800: jmp qword ptr [rip+0x20c682]
0x1830: jmp qword ptr [rip+0x20c66a]
0x1880: jmp qword ptr [rip+0x20c642]
0x18f0: jmp qword ptr [rip+0x20c60a]
0x1930: jmp qword ptr [rip+0x20c5ea]
0x1950: jmp qword ptr [rip+0x20c5da]
0x1970: jmp qword ptr [rip+0x20c5ca]
0x19f0: jmp qword ptr [rip+0x20c58a]
0x1a60: jmp qword ptr [rip+0x20c552]
0x1a70: jmp qword ptr [rip+0x20c54a]
0x1a80: jmp qword ptr [rip+0x20c542]
0x1a98: jmp qword ptr [rip+0x20c55a]
0x1c2c: nop dword ptr [rax]
0x20ae: lea rsi,[rip+0x7ca1]
0x20b5: xor edi,edi
0x20b7: mov edx,0x5
0x20bc: mov r15,rax
0x20bf: call 0x1790
0x20c4: mov rdx,rax
0x20c7: mov rax,qword ptr [rsp+0x20]
0x20cc: mov rcx,r15
0x20cf: xor edi,edi
0x20d1: mov esi,dword ptr [rax]
0x20d3: xor eax,eax
0x20d5: call 0x19d0
0x20da: jmp 0x1ef0
0x217d: mov ecx,dword ptr [rsp+0x4]
0x2181: sub rsp,0x8
0x2185: mov rsi,r15
0x2188: mov rdx,qword ptr [rsp+0x10]
0x218d: mov edi,0x1
0x2192: xor r15d,r15d
0x2195: and ecx,0xfff
0x219b: add rdx,0x1
0x219f: push rdx
0x21a0: mov r9d,dword ptr [rsp+0x10]
0x21a5: mov rdx,rax
0x21a8: mov r8,qword ptr [rsp+0x28]
0x21ad: xor eax,eax
0x21af: and r9d,0xfff
0x21b6: call 0x19b0
0x21bb: pop rax
0x21bc: pop rdx
0x21bd: jmp 0x1f09
0x21e4: lea rsi,[rip+0x82ed]
0x21eb: mov r13,rax
0x21ee: mov edx,0x5
0x21f3: xor edi,edi
0x21f5: call 0x1790
0x21fa: mov rdx,r13
0x21fd: mov rsi,rax
0x2200: mov edi,0x1
0x2205: xor eax,eax
0x2207: call 0x19b0
0x220c: jmp 0x1f09
0x2294: mov ecx,dword ptr [rsp+0x4]
0x2298: sub rsp,0x8
0x229c: mov edi,0x1
0x22a1: mov rsi,qword ptr [rsp+0x10]
0x22a6: and ecx,0xfff
0x22ac: lea rdx,[rsi+0x1]
0x22b0: mov rsi,r15
0x22b3: push rdx
0x22b4: mov r9d,dword ptr [rsp+0x10]
0x22b9: mov rdx,rax
0x22bc: mov r8,qword ptr [rsp+0x28]
0x22c1: xor eax,eax
0x22c3: and r9d,0xfff
0x22ca: call 0x19b0
0x22cf: pop rcx
0x22d0: pop rsi
0x2359: lea rsi,[rip+0x8118]
0x2360: mov edx,0x5
0x2365: xor edi,edi
0x2367: mov r13,rax
0x236a: call 0x1790
0x236f: mov r9,qword ptr [rsp+0x18]
0x2374: lea r8,[r15+0x1]
0x2378: mov rdx,rax
0x237b: mov rcx,r13
0x237e: xor esi,esi
0x2380: xor edi,edi
0x2382: xor eax,eax
0x2384: xor r15d,r15d
0x2387: call 0x19d0
0x238c: jmp 0x1f09
0x23c9: lea rsi,[rip+0x79a1]
0x23d0: mov edx,0x5
0x23d5: xor edi,edi
0x23d7: mov r15,rax
0x23da: call 0x1790
0x23df: mov rdx,rax
0x23e2: mov rax,qword ptr [rsp+0x20]
0x23e7: mov rcx,r15
0x23ea: xor edi,edi
0x23ec: mov esi,dword ptr [rax]
0x23ee: xor eax,eax
0x23f0: call 0x19d0
0x2450: mov rdx,qword ptr [rsp+0x8]
0x2455: mov ecx,dword ptr [rsp]
0x2458: mov rsi,r15
0x245b: mov edi,0x1
0x2460: lea r8,[rdx+0x1]
0x2464: and ecx,0xfff
0x246a: mov rdx,rax
0x246d: xor eax,eax
0x246f: call 0x19b0
0x2474: jmp 0x22d1
0x24bc: lea rsi,[rip+0x7f0d]
0x24c3: mov r13,rax
0x24c6: mov edx,0x5
0x24cb: xor edi,edi
0x24cd: call 0x1790
0x24d2: mov rcx,r13
0x24d5: mov rdx,rax
0x24d8: xor esi,esi
0x24da: xor edi,edi
0x24dc: xor eax,eax
0x24de: call 0x19d0
0x24e3: lea rsi,[rip+0x7f56]
0x24ea: mov edx,0x5
0x24ef: xor edi,edi
0x24f1: xor r15d,r15d
0x24f4: call 0x1790
0x24f9: xor esi,esi
0x24fb: mov rdx,rax
0x24fe: xor edi,edi
0x2500: xor eax,eax
0x2502: call 0x19d0
0x2507: mov edx,0x4
0x250c: mov rsi,r14
0x250f: mov rdi,rbp
0x2512: call 0x7ea0
0x2517: mov rdi,rbp
0x251a: call 0x7720
0x251f: jmp 0x1e48
0x25dc: jmp 0x1e76
0x260e: lea rsi,[rip+0x7cb3]
0x2615: mov edx,0x5
0x261a: xor edi,edi
0x261c: mov rbx,rax
0x261f: call 0x1790
0x2624: mov rdx,rax
0x2627: mov rax,qword ptr [rsp+0x20]
0x262c: mov rcx,rbx
0x262f: mov edi,0x1
0x2634: mov esi,dword ptr [rax]
0x2636: xor eax,eax
0x2638: call 0x19d0
0x263d: mov qword ptr [r14+0x20],0x1
0x2645: mov edx,0x1
0x264a: mov rsi,r14
0x264d: mov rdi,rbp
0x2650: mov r15d,0x1
0x2656: call 0x7ea0
0x265b: jmp 0x1e48
0x26c9: mov rdx,r13
0x26cc: xor edi,edi
0x26ce: mov esi,0x4
0x26d3: mov r15,rax
0x26d6: call 0x4e40
0x26db: lea rsi,[rip+0x7d1e]
0x26e2: mov r13,rax
0x26e5: xor edi,edi
0x26e7: mov edx,0x5
0x26ec: call 0x1790
0x26f1: mov r8,r15
0x26f4: mov rdx,rax
0x26f7: mov rcx,r13
0x26fa: xor esi,esi
0x26fc: xor edi,edi
0x26fe: xor eax,eax
0x2700: call 0x19d0
0x2705: jmp 0x24e3
0x2711: call 0x17e0
0x2723: lea rsi,[rip+0x7b9e]
0x272a: mov edx,0x5
0x272f: xor edi,edi
0x2731: mov rbx,rax
0x2734: call 0x1790
0x2739: mov esi,dword ptr [r12]
0x273d: mov rdx,rax
0x2740: mov rcx,rbx
0x2743: mov edi,0x1
0x2748: xor eax,eax
0x274a: call 0x19d0
0x2757: lea rsi,[rip+0x75ad]
0x275e: mov rbx,rax
0x2761: mov edx,0x5
0x2766: xor edi,edi
0x2768: call 0x1790
0x276d: xor edi,edi
0x276f: mov rdx,rax
0x2772: mov rcx,rbx
0x2775: xor esi,esi
0x2777: xor eax,eax
0x2779: call 0x19d0
0x277e: mov edi,0x1
0x2783: call 0x28f0
0x2792: lea rsi,[rip+0x7559]
0x2799: mov rbx,rax
0x279c: xor edi,edi
0x279e: mov edx,0x5
0x27a3: call 0x1790
0x27a8: mov rcx,rbx
0x27ab: mov rdx,rax
0x27ae: xor esi,esi
0x27b0: xor edi,edi
0x27b2: xor eax,eax
0x27b4: call 0x19d0
0x27b9: jmp 0x26a9
0x280a: hlt 
0x280b: nop dword ptr [rax+rax]
0x2810: lea rdi,[rip+0x20b889]
0x2817: push rbp
0x2818: lea rax,[rip+0x20b881]
0x281f: cmp rax,rdi
0x2822: mov rbp,rsp
0x2825: je 0x2840
0x2827: mov rax,qword ptr [rip+0x20b7aa]
0x282e: test rax,rax
0x2831: je 0x2840
0x2833: pop rbp
0x2834: jmp rax
0x2840: pop rbp
0x2841: ret 
0x2850: lea rdi,[rip+0x20b849]
0x2857: lea rsi,[rip+0x20b842]
0x285e: push rbp
0x285f: sub rsi,rdi
0x2862: mov rbp,rsp
0x2865: sar rsi,0x3
0x2869: mov rax,rsi
0x286c: shr rax,0x3f
0x2870: add rsi,rax
0x2873: sar rsi, 1
0x2876: je 0x2890
0x2878: mov rax,qword ptr [rip+0x20b771]
0x287f: test rax,rax
0x2882: je 0x2890
0x2884: pop rbp
0x2885: jmp rax
0x2890: pop rbp
0x2891: ret 
0x28b1: push rbp
0x28b2: mov rbp,rsp
0x28b5: je 0x28c3
0x28b7: mov rdi,qword ptr [rip+0x20b74a]
0x28be: call 0x1a98
0x28c3: call 0x2810
0x28c8: mov byte ptr [rip+0x20b819],0x1
0x28cf: pop rbp
0x28d0: ret 
0x28e0: push rbp
0x28e1: mov rbp,rsp
0x28e4: pop rbp
0x28e5: jmp 0x2850
0x2d00: mov qword ptr [rip+0x20b419],rdi
0x2d07: ret 
0x2d10: mov byte ptr [rip+0x20b401],dil
0x2d17: ret 
0x2d20: push rbp
0x2d21: push rbx
0x2d22: sub rsp,0x8
0x2d26: mov rdi,qword ptr [rip+0x20b37b]
0x2d2d: call 0x80b0
0x2d32: test eax,eax
0x2d34: je 0x2d4c
0x2d36: call 0x1700
0x2d3b: cmp byte ptr [rip+0x20b3d6],0x0
0x2d42: mov rbx,rax
0x2d45: je 0x2d63
0x2d47: cmp dword ptr [rax],0x20
0x2d4a: jne 0x2d63
0x2d4c: mov rdi,qword ptr [rip+0x20b38d]
0x2d53: call 0x80b0
0x2d58: test eax,eax
0x2d5a: jne 0x2da2
0x2d5c: add rsp,0x8
0x2d60: pop rbx
0x2d61: pop rbp
0x2d62: ret 
0x2d63: lea rsi,[rip+0x7847]
0x2d6a: xor edi,edi
0x2d6c: mov edx,0x5
0x2d71: call 0x1790
0x2d76: mov rdi,qword ptr [rip+0x20b3a3]
0x2d7d: mov rbp,rax
0x2d80: test rdi,rdi
0x2d83: je 0x2dad
0x2d85: call 0x5030
0x2d8a: mov esi,dword ptr [rbx]
0x2d8c: lea rdx,[rip+0x782a]
0x2d93: mov rcx,rax
0x2d96: mov r8,rbp
0x2d99: xor edi,edi
0x2d9b: xor eax,eax
0x2d9d: call 0x19d0
0x2da2: mov edi,dword ptr [rip+0x20b278]
0x2da8: call 0x1720
0x2dad: mov esi,dword ptr [rbx]
0x2daf: lea rdx,[rip+0x6f63]
0x2db6: mov rcx,rax
0x2db9: xor edi,edi
0x2dbb: xor eax,eax
0x2dbd: call 0x19d0
0x2dc2: jmp 0x2da2
0x2f60: mov edi,dword ptr [rdi+0x18]
0x2f63: jmp 0x2dd0
0x32ee: nop 
0x33a4: call 0x17e0
0x33a9: nop dword ptr [rax]
0x33e0: mov edi,r9d
0x33e3: or edi,edx
0x33e5: not edi
0x33e7: and esi,edi
0x33e9: cmp r12b,0x2d
0x33ed: je 0x3500
0x33f3: cmp r12b,0x3d
0x33f7: je 0x34ab
0x33fd: cmp r12b,0x2b
0x3401: jne 0x3408
0x3403: or r11d,esi
0x3406: or eax,esi
0x3408: add rcx,0x10
0x340c: movzx r10d,byte ptr [rcx+0x1]
0x3411: test r10b,r10b
0x3414: je 0x34cc
0x343a: and esi,eax
0x343c: mov r10d,esi
0x343f: and r10d,0x124
0x3446: cmp r10d,0x1
0x344a: sbb r10d,r10d
0x344d: not r10d
0x3450: and r10d,0x124
0x3457: mov r12d,r10d
0x345a: or r12b,-0x6e
0x345e: test sil,-0x6e
0x3462: cmovne r10d,r12d
0x3466: mov r12d,r10d
0x3469: or r12d,0x49
0x346d: test sil,0x49
0x3471: cmovne r10d,r12d
0x3475: or esi,r10d
0x34d1: mov dword ptr [r8],r11d
0x34e0: mov r12d,eax
0x34e3: mov r10d,esi
0x34e6: and r12d,0x49
0x34ea: or r10d,0x49
0x34ee: or r12d,ebp
0x34f1: cmovne esi,r10d
0x34f5: jmp 0x3478
0x3500: or r11d,esi
0x3503: not esi
0x3505: and eax,esi
0x3507: jmp 0x3408
0x3510: xor r11d,r11d
0x3513: test r8,r8
0x3516: je 0x351b
0x3518: mov dword ptr [r8],r11d
0x351b: rep ret 
0x35bf: nop 
0x35c0: push rbp
0x35c1: push rbx
0x35c2: mov rbp,rdi
0x35c5: mov ebx,esi
0x35c7: sub rsp,0x8
0x35cb: call 0x9630
0x35d0: movzx edx,byte ptr [rax]
0x35d3: and edx,-0x21
0x35d6: cmp dl,0x55
0x35d9: je 0x3650
0x35db: cmp dl,0x47
0x35de: je 0x3600
0x35e0: lea rax,[rip+0x70b4]
0x35e7: lea rdx,[rip+0x70af]
0x35ee: cmp ebx,0x9
0x35f1: cmovne rax,rdx
0x35f5: add rsp,0x8
0x35f9: pop rbx
0x35fa: pop rbp
0x35fb: ret 
0x3600: movzx edx,byte ptr [rax+0x1]
0x3604: and edx,-0x21
0x3607: cmp dl,0x42
0x360a: jne 0x35e0
0x360c: cmp byte ptr [rax+0x2],0x31
0x3610: jne 0x35e0
0x3612: cmp byte ptr [rax+0x3],0x38
0x3616: jne 0x35e0
0x3618: cmp byte ptr [rax+0x4],0x30
0x361c: jne 0x35e0
0x361e: cmp byte ptr [rax+0x5],0x33
0x3622: jne 0x35e0
0x3624: cmp byte ptr [rax+0x6],0x30
0x3628: jne 0x35e0
0x362a: cmp byte ptr [rax+0x7],0x0
0x362e: jne 0x35e0
0x3630: cmp byte ptr [rbp],0x60
0x3634: lea rax,[rip+0x7059]
0x363b: lea rdx,[rip+0x7056]
0x3642: cmovne rax,rdx
0x3646: add rsp,0x8
0x364a: pop rbx
0x364b: pop rbp
0x364c: ret 
0x3650: movzx edx,byte ptr [rax+0x1]
0x3654: and edx,-0x21
0x3657: cmp dl,0x54
0x365a: jne 0x35e0
0x365c: movzx edx,byte ptr [rax+0x2]
0x3660: and edx,-0x21
0x3663: cmp dl,0x46
0x3666: jne 0x35e0
0x366c: cmp byte ptr [rax+0x3],0x2d
0x3670: jne 0x35e0
0x3676: cmp byte ptr [rax+0x4],0x38
0x367a: jne 0x35e0
0x3680: cmp byte ptr [rax+0x5],0x0
0x3684: jne 0x35e0
0x368a: cmp byte ptr [rbp],0x60
0x368e: lea rax,[rip+0x6ff7]
0x3695: lea rdx,[rip+0x6ff4]
0x369c: cmovne rax,rdx
0x36a0: add rsp,0x8
0x36a4: pop rbx
0x36a5: pop rbp
0x36a6: ret 
0x3783: xor r11d,r11d
0x3786: mov rax,rbp
0x3789: mov r8d,r12d
0x378c: mov rbp,r11
0x378f: mov r11,rax
0x3792: nop word ptr [rax+rax]
0x3798: cmp r11,rbp
0x379b: setne r12b
0x379f: cmp r11,-0x1
0x37a3: jne 0x37b2
0x37a5: mov rax,qword ptr [rsp+0x10]
0x37aa: cmp byte ptr [rax+rbp],0x0
0x37ae: setne r12b
0x37b2: test r12b,r12b
0x37b5: je 0x3e10
0x37bb: cmp dword ptr [rsp+0x8],0x2
0x37c0: mov rdi,qword ptr [rsp+0x10]
0x37c5: lea r9,[rdi+rbp]
0x37c9: setne al
0x37cc: and al,byte ptr [rsp+0xd]
0x37d0: mov r10d,eax
0x37d3: je 0x3880
0x37d9: mov rax,qword ptr [rsp+0x18]
0x37de: test rax,rax
0x37e1: je 0x3c10
0x37e7: cmp r11,-0x1
0x37eb: lea rbx,[rbp+rax]
0x37f0: jne 0x3820
0x37f2: cmp rax,0x1
0x37f6: jbe 0x3820
0x37f8: mov byte ptr [rsp+0x38],r8b
0x37fd: mov byte ptr [rsp+0x30],r10b
0x3802: mov qword ptr [rsp+0x28],r9
0x3807: call 0x17b0
0x380c: movzx r8d,byte ptr [rsp+0x38]
0x3812: movzx r10d,byte ptr [rsp+0x30]
0x3818: mov r11,rax
0x381b: mov r9,qword ptr [rsp+0x28]
0x3820: cmp rbx,r11
0x3823: mov byte ptr [rsp+0x28],r10b
0x3828: ja 0x3de0
0x382e: mov rdx,qword ptr [rsp+0x18]
0x3833: mov rsi,qword ptr [rsp+0x48]
0x3838: mov rdi,r9
0x383b: mov qword ptr [rsp+0x40],r11
0x3840: mov byte ptr [rsp+0x38],r8b
0x3845: mov qword ptr [rsp+0x30],r9
0x384a: call 0x1880
0x384f: test eax,eax
0x3851: mov r9,qword ptr [rsp+0x30]
0x3856: movzx r8d,byte ptr [rsp+0x38]
0x385c: mov r11,qword ptr [rsp+0x40]
0x3861: jne 0x3de0
0x3867: cmp byte ptr [rsp+0xf],0x0
0x386c: movzx r10d,byte ptr [rsp+0x28]
0x3872: jne 0x47f5
0x3878: nop dword ptr [rax+rax]
0x3880: movzx ebx,byte ptr [r9]
0x3884: cmp bl,0x7e
0x3887: ja 0x3ba8
0x388d: lea rcx,[rip+0x6e98]
0x3894: movzx edx,bl
0x3897: movsxd rax,dword ptr [rcx+rdx*4]
0x389b: add rax,rcx
0x389e: jmp rax
0x38d8: cmp byte ptr [rsp+0xd],0x1
0x38dd: jne 0x39f2
0x38e3: test dl,dl
0x38e5: jne 0x39f2
0x38eb: mov rsi,qword ptr [rsp+0x20]
0x38f0: test rsi,rsi
0x38f3: je 0x3909
0x38f5: mov edx,ebx
0x38f7: shr dl,0x5
0x38fa: movzx edx,dl
0x38fd: mov edx,dword ptr [rsi+rdx*4]
0x3900: btl edx,ebx
0x3903: jb 0x3a53
0x3909: test r10b,r10b
0x390c: jne 0x3a53
0x3912: xor eax,0x1
0x3915: add rbp,0x1
0x3919: and eax,r8d
0x391c: test al,al
0x391e: je 0x3940
0x3920: cmp r13,r15
0x3923: jbe 0x392a
0x3925: mov byte ptr [r14+r15],0x27
0x392a: lea rax,[r15+0x1]
0x392e: cmp r13,rax
0x3931: jbe 0x3939
0x3933: mov byte ptr [r14+r15+0x1],0x27
0x3939: add r15,0x2
0x393d: xor r8d,r8d
0x3940: cmp r15,r13
0x3943: jae 0x3949
0x3945: mov byte ptr [r14+r15],bl
0x3949: movzx edi,byte ptr [rsp+0xe]
0x394e: add r15,0x1
0x3952: mov eax,0x0
0x3957: test r12b,r12b
0x395a: cmove edi,eax
0x395d: mov byte ptr [rsp+0xe],dil
0x3962: jmp 0x3798
0x39f2: cmp byte ptr [rsp+0xf],0x0
0x39f7: jne 0x38eb
0x39fd: jmp 0x3909
0x3a53: cmp dword ptr [rsp+0x8],0x2
0x3a58: sete dl
0x3a5b: cmp byte ptr [rsp+0xf],0x0
0x3a60: mov eax,edx
0x3a62: jne 0x42b8
0x3a68: mov eax,r8d
0x3a6b: xor eax,0x1
0x3a6e: and al,dl
0x3a70: je 0x3aa1
0x3a72: cmp r13,r15
0x3a75: jbe 0x3a7c
0x3a77: mov byte ptr [r14+r15],0x27
0x3a7c: lea rdx,[r15+0x1]
0x3a80: cmp r13,rdx
0x3a83: jbe 0x3a8b
0x3a85: mov byte ptr [r14+r15+0x1],0x24
0x3a8b: lea rdx,[r15+0x2]
0x3a8f: cmp r13,rdx
0x3a92: jbe 0x3a9a
0x3a94: mov byte ptr [r14+r15+0x2],0x27
0x3a9a: add r15,0x3
0x3a9e: mov r8d,eax
0x3aa1: cmp r13,r15
0x3aa4: jbe 0x3aab
0x3aa6: mov byte ptr [r14+r15],0x5c
0x3aab: add r15,0x1
0x3aaf: add rbp,0x1
0x3ab3: jmp 0x3940
0x3ba0: xor r10d,r10d
0x3ba3: nop dword ptr [rax+rax]
0x3ba8: cmp qword ptr [rsp+0x58],0x1
0x3bae: jne 0x3f58
0x3bb4: mov qword ptr [rsp+0x38],r11
0x3bb9: mov byte ptr [rsp+0x30],r8b
0x3bbe: mov byte ptr [rsp+0x28],r10b
0x3bc3: call 0x1a80
0x3bc8: mov rcx,qword ptr [rax]
0x3bcb: movzx edx,bl
0x3bce: movzx r10d,byte ptr [rsp+0x28]
0x3bd4: movzx r8d,byte ptr [rsp+0x30]
0x3bda: mov r11,qword ptr [rsp+0x38]
0x3bdf: mov edi,0x1
0x3be4: movzx eax,word ptr [rcx+rdx*2]
0x3be8: and ax,0x4000
0x3bec: setne r12b
0x3bf0: sete al
0x3bf3: and al,byte ptr [rsp+0xd]
0x3bf7: test al,al
0x3bf9: jne 0x4591
0x3bff: cmp dword ptr [rsp+0x8],0x2
0x3c04: sete dl
0x3c07: jmp 0x38d8
0x3c10: movzx ebx,byte ptr [r9]
0x3c14: cmp bl,0x7e
0x3c17: ja 0x3ba0
0x3c19: lea rcx,[rip+0x6d08]
0x3c20: movzx edx,bl
0x3c23: movsxd rax,dword ptr [rcx+rdx*4]
0x3c27: add rax,rcx
0x3c2a: jmp rax
0x3de0: xor r10d,r10d
0x3de3: jmp 0x3880
0x3e10: cmp dword ptr [rsp+0x8],0x2
0x3e15: movzx ebx,byte ptr [rsp+0xf]
0x3e1a: mov r12d,r8d
0x3e1d: mov rbp,r11
0x3e20: sete dl
0x3e23: mov eax,ebx
0x3e25: test r15,r15
0x3e28: sete cl
0x3e2b: and eax,edx
0x3e2d: and al,cl
0x3e2f: jne 0x4896
0x3e35: mov eax,ebx
0x3e37: xor eax,0x1
0x3e3a: and dl,al
0x3e3c: je 0x47ac
0x3e42: cmp byte ptr [rsp+0x7c],0x0
0x3e47: je 0x47aa
0x3e4d: cmp byte ptr [rsp+0xe],0x0
0x3e52: jne 0x484d
0x3e58: test r13,r13
0x3e5b: sete al
0x3e5e: cmp qword ptr [rsp+0x50],0x0
0x3e64: setne dl
0x3e67: and al,dl
0x3e69: je 0x488c
0x3e6f: mov r13,qword ptr [rsp+0x50]
0x3e74: lea rbx,[rip+0x6822]
0x3e7b: mov byte ptr [r14],0x27
0x3e7f: mov dword ptr [rsp+0x8],0x2
0x3e87: mov r15d,0x1
0x3e8d: mov qword ptr [rsp+0x18],0x1
0x3e96: mov byte ptr [rsp+0xf],0x0
0x3e9b: mov qword ptr [rsp+0x48],rbx
0x3ea0: mov byte ptr [rsp+0x7c],al
0x3ea4: jmp 0x3783
0x3f58: lea rax,[rsp+0xa0]
0x3f60: cmp r11,-0x1
0x3f64: mov qword ptr [rsp+0xa0],0x0
0x3f70: mov qword ptr [rsp+0x28],rax
0x3f75: jne 0x3fa4
0x3f77: mov rdi,qword ptr [rsp+0x10]
0x3f7c: mov byte ptr [rsp+0x40],r8b
0x3f81: mov byte ptr [rsp+0x38],r10b
0x3f86: mov qword ptr [rsp+0x30],r9
0x3f8b: call 0x17b0
0x3f90: movzx r8d,byte ptr [rsp+0x40]
0x3f96: movzx r10d,byte ptr [rsp+0x38]
0x3f9c: mov r11,rax
0x3f9f: mov r9,qword ptr [rsp+0x30]
0x3fa4: lea rax,[rsp+0x9c]
0x3fac: xor ecx,ecx
0x3fae: mov byte ptr [rsp+0x7e],bl
0x3fb2: mov byte ptr [rsp+0x7d],r8b
0x3fb7: mov rbx,rcx
0x3fba: mov qword ptr [rsp+0x88],r9
0x3fc2: mov qword ptr [rsp+0x38],rax
0x3fc7: mov byte ptr [rsp+0x7f],r10b
0x3fcc: mov qword ptr [rsp+0x80],r15
0x3fd4: mov qword ptr [rsp+0x40],r14
0x3fd9: mov qword ptr [rsp+0x70],r13
0x3fde: mov qword ptr [rsp+0x30],r11
0x3fe3: mov rax,qword ptr [rsp+0x10]
0x3fe8: lea r14,[rbp+rbx]
0x3fed: mov rdx,qword ptr [rsp+0x30]
0x3ff2: mov rcx,qword ptr [rsp+0x28]
0x3ff7: mov rdi,qword ptr [rsp+0x38]
0x3ffc: lea r13,[rax+r14]
0x4000: sub rdx,r14
0x4003: mov rsi,r13
0x4006: call 0x8020
0x400b: test rax,rax
0x400e: mov r15,rax
0x4011: je 0x4061
0x4013: cmp rax,-0x1
0x4017: je 0x4635
0x401d: cmp rax,-0x2
0x4021: je 0x45c1
0x4027: cmp dword ptr [rsp+0x8],0x2
0x402c: sete al
0x402f: and al,byte ptr [rsp+0xf]
0x4033: jne 0x41d0
0x4039: mov edi,dword ptr [rsp+0x9c]
0x4040: call 0x1a70
0x4045: mov rdi,qword ptr [rsp+0x28]
0x404a: test eax,eax
0x404c: mov eax,0x0
0x4051: cmove r12d,eax
0x4055: add rbx,r15
0x4058: call 0x1a60
0x405d: test eax,eax
0x405f: je 0x3fe3
0x4061: mov edx,r12d
0x4064: mov rdi,rbx
0x4067: movzx r8d,byte ptr [rsp+0x7d]
0x406d: xor edx,0x1
0x4070: movzx ebx,byte ptr [rsp+0x7e]
0x4075: movzx r10d,byte ptr [rsp+0x7f]
0x407b: and dl,byte ptr [rsp+0xd]
0x407f: mov r15,qword ptr [rsp+0x80]
0x4087: mov r14,qword ptr [rsp+0x40]
0x408c: mov r13,qword ptr [rsp+0x70]
0x4091: mov r11,qword ptr [rsp+0x30]
0x4096: cmp rdi,0x1
0x409a: jbe 0x469b
0x40a0: mov rcx,rdi
0x40a3: xor esi,esi
0x40a5: movzx r9d,byte ptr [rsp+0xf]
0x40ab: add rcx,rbp
0x40ae: mov rdi,qword ptr [rsp+0x10]
0x40b3: jmp 0x416e
0x40c0: cmp dword ptr [rsp+0x8],0x2
0x40c5: sete al
0x40c8: test r9b,r9b
0x40cb: jne 0x4580
0x40d1: mov esi,r8d
0x40d4: xor esi,0x1
0x40d7: and al,sil
0x40da: je 0x410b
0x40dc: cmp r13,r15
0x40df: jbe 0x40e6
0x40e1: mov byte ptr [r14+r15],0x27
0x40e6: lea rsi,[r15+0x1]
0x40ea: cmp r13,rsi
0x40ed: jbe 0x40f5
0x40ef: mov byte ptr [r14+r15+0x1],0x24
0x40f5: lea rsi,[r15+0x2]
0x40f9: cmp r13,rsi
0x40fc: jbe 0x4104
0x40fe: mov byte ptr [r14+r15+0x2],0x27
0x4104: add r15,0x3
0x4108: mov r8d,eax
0x410b: cmp r13,r15
0x410e: jbe 0x4115
0x4110: mov byte ptr [r14+r15],0x5c
0x4115: lea rax,[r15+0x1]
0x4119: cmp r13,rax
0x411c: jbe 0x412b
0x411e: mov eax,ebx
0x4120: shr al,0x6
0x4123: add eax,0x30
0x4126: mov byte ptr [r14+r15+0x1],al
0x412b: lea rax,[r15+0x2]
0x412f: cmp r13,rax
0x4132: jbe 0x4144
0x4134: mov eax,ebx
0x4136: shr al,0x3
0x4139: and eax,0x7
0x413c: add eax,0x30
0x413f: mov byte ptr [r14+r15+0x2],al
0x4144: and ebx,0x7
0x4147: add rbp,0x1
0x414b: add r15,0x3
0x414f: add ebx,0x30
0x4152: cmp rbp,rcx
0x4155: jae 0x3940
0x415b: mov esi,edx
0x415d: cmp r13,r15
0x4160: jbe 0x4166
0x4162: mov byte ptr [r14+r15],bl
0x4166: movzx ebx,byte ptr [rdi+rbp]
0x416a: add r15,0x1
0x416e: test dl,dl
0x4170: jne 0x40c0
0x4176: mov eax,esi
0x4178: xor eax,0x1
0x417b: and eax,r8d
0x417e: test r10b,r10b
0x4181: je 0x4191
0x4183: cmp r13,r15
0x4186: jbe 0x418d
0x4188: mov byte ptr [r14+r15],0x5c
0x418d: add r15,0x1
0x4191: add rbp,0x1
0x4195: cmp rbp,rcx
0x4198: jae 0x391c
0x419e: test al,al
0x41a0: je 0x459e
0x41a6: cmp r13,r15
0x41a9: jbe 0x41b0
0x41ab: mov byte ptr [r14+r15],0x27
0x41b0: lea rax,[r15+0x1]
0x41b4: cmp r13,rax
0x41b7: jbe 0x41bf
0x41b9: mov byte ptr [r14+r15+0x1],0x27
0x41bf: add r15,0x2
0x41c3: xor r10d,r10d
0x41c6: xor r8d,r8d
0x41c9: jmp 0x415d
0x41d0: cmp r15,0x1
0x41d4: je 0x4039
0x41da: mov rdi,qword ptr [rsp+0x10]
0x41df: lea rcx,[rdi+r15]
0x41e3: lea rdx,[rdi+r14+0x1]
0x41e8: lea r8,[rcx+r14]
0x41ec: jmp 0x41fd
0x41f0: add rdx,0x1
0x41f4: cmp r8,rdx
0x41f7: je 0x4039
0x41fd: movzx ecx,byte ptr [rdx]
0x4200: sub ecx,0x5b
0x4203: cmp cl,0x21
0x4206: ja 0x41f0
0x4208: mov esi,0x1
0x420d: shl rsi,cl
0x4210: mov rcx,rsi
0x4213: movabsq rsi,0x20000002b
0x421d: test rcx,rsi
0x4220: je 0x41f0
0x4222: mov r14,qword ptr [rsp+0x40]
0x4227: mov r13,qword ptr [rsp+0x70]
0x422c: mov rbp,qword ptr [rsp+0x30]
0x4231: mov dword ptr [rsp+0x8],0x2
0x4239: cmp byte ptr [rsp+0xd],0x0
0x423e: je 0x4250
0x4240: test al,al
0x4242: mov eax,0x4
0x4247: cmove eax,dword ptr [rsp+0x8]
0x424c: mov dword ptr [rsp+0x8],eax
0x4250: sub rsp,0x8
0x4254: mov rcx,rbp
0x4257: mov rsi,r13
0x425a: push qword ptr [rsp+0x68]
0x425e: push qword ptr [rsp+0x78]
0x4262: mov rdi,r14
0x4265: push 0x0
0x4267: mov r9d,dword ptr [rsp+0x98]
0x426f: mov r8d,dword ptr [rsp+0x28]
0x4274: mov rdx,qword ptr [rsp+0x30]
0x4279: and r9d,-0x3
0x427d: call 0x36b0
0x4282: add rsp,0x20
0x4286: mov r15,rax
0x4289: mov rbx,qword ptr [rsp+0xa8]
0x4291: xor rbx,qword ptr fs:0x28
0x429a: mov rax,r15
0x429d: jne 0x48a3
0x42a3: add rsp,0xb8
0x42aa: pop rbx
0x42ab: pop rbp
0x42ac: pop r12
0x42ae: pop r13
0x42b0: pop r14
0x42b2: pop r15
0x42b4: ret 
0x42b8: mov rbp,r11
0x42bb: jmp 0x4239
0x4321: test r13,r13
0x4324: jne 0x48ba
0x432a: lea rax,[rip+0x636c]
0x4331: mov qword ptr [rsp+0x50],0x0
0x433a: mov byte ptr [rsp+0xe],0x1
0x433f: mov byte ptr [rsp+0x7c],0x0
0x4344: xor r12d,r12d
0x4347: mov byte ptr [rsp+0xf],0x0
0x434c: mov qword ptr [rsp+0x18],0x1
0x4355: mov qword ptr [rsp+0x48],rax
0x435a: mov r15d,0x1
0x4360: mov dword ptr [rsp+0x8],0x2
0x4368: jmp 0x3783
0x4580: movzx ebx,byte ptr [rsp+0xf]
0x4585: mov rbp,r11
0x4588: mov byte ptr [rsp+0xd],bl
0x458c: jmp 0x4239
0x4591: movzx edx,byte ptr [rsp+0xd]
0x4596: xor r12d,r12d
0x4599: jmp 0x40a0
0x459e: xor r10d,r10d
0x45a1: jmp 0x415d
0x45c1: mov r11,qword ptr [rsp+0x30]
0x45c6: mov rsi,r14
0x45c9: mov rcx,r13
0x45cc: mov rax,rbx
0x45cf: mov rdi,rbx
0x45d2: movzx r8d,byte ptr [rsp+0x7d]
0x45d8: movzx ebx,byte ptr [rsp+0x7e]
0x45dd: mov r9,qword ptr [rsp+0x88]
0x45e5: cmp rsi,r11
0x45e8: movzx r10d,byte ptr [rsp+0x7f]
0x45ee: mov r15,qword ptr [rsp+0x80]
0x45f6: mov r14,qword ptr [rsp+0x40]
0x45fb: mov r13,qword ptr [rsp+0x70]
0x4600: jae 0x4628
0x4602: cmp byte ptr [rcx],0x0
0x4605: jne 0x4617
0x4607: jmp 0x4628
0x4610: cmp byte ptr [r9+rax],0x0
0x4615: je 0x4625
0x4617: add rax,0x1
0x461b: lea rdx,[rbp+rax]
0x4620: cmp r11,rdx
0x4623: ja 0x4610
0x4625: mov rdi,rax
0x4628: movzx edx,byte ptr [rsp+0xd]
0x462d: xor r12d,r12d
0x4630: jmp 0x4096
0x4635: mov rdi,rbx
0x4638: movzx r8d,byte ptr [rsp+0x7d]
0x463e: movzx ebx,byte ptr [rsp+0x7e]
0x4643: movzx r10d,byte ptr [rsp+0x7f]
0x4649: mov r15,qword ptr [rsp+0x80]
0x4651: xor r12d,r12d
0x4654: mov r14,qword ptr [rsp+0x40]
0x4659: mov r13,qword ptr [rsp+0x70]
0x465e: mov r11,qword ptr [rsp+0x30]
0x4663: movzx edx,byte ptr [rsp+0xd]
0x4668: jmp 0x4096
0x469b: mov eax,edx
0x469d: jmp 0x3bf7
0x47aa: mov eax,edx
0x47ac: mov rbx,qword ptr [rsp+0x48]
0x47b1: test rbx,rbx
0x47b4: je 0x47e2
0x47b6: test al,al
0x47b8: je 0x47e2
0x47ba: movzx ecx,byte ptr [rbx]
0x47bd: mov rax,rbx
0x47c0: test cl,cl
0x47c2: je 0x47e2
0x47c4: mov rdx,r15
0x47c7: sub rax,r15
0x47ca: cmp r13,rdx
0x47cd: jbe 0x47d3
0x47cf: mov byte ptr [r14+rdx],cl
0x47d3: add rdx,0x1
0x47d7: movzx ecx,byte ptr [rax+rdx]
0x47db: test cl,cl
0x47dd: jne 0x47ca
0x47df: mov r15,rdx
0x47e2: cmp r13,r15
0x47e5: jbe 0x4289
0x47eb: mov byte ptr [r14+r15],0x0
0x47f0: jmp 0x4289
0x47f5: cmp dword ptr [rsp+0x8],0x2
0x47fa: movzx ebx,byte ptr [rsp+0xf]
0x47ff: mov rbp,r11
0x4802: sete al
0x4805: mov byte ptr [rsp+0xd],bl
0x4809: jmp 0x4239
0x484d: sub rsp,0x8
0x4851: mov r8d,0x5
0x4857: mov rcx,r11
0x485a: push qword ptr [rsp+0x68]
0x485e: push qword ptr [rsp+0x78]
0x4862: mov rdi,r14
0x4865: push qword ptr [rsp+0x38]
0x4869: mov r9d,dword ptr [rsp+0x98]
0x4871: mov rdx,qword ptr [rsp+0x30]
0x4876: mov rsi,qword ptr [rsp+0x70]
0x487b: call 0x36b0
0x4880: add rsp,0x20
0x4884: mov r15,rax
0x4887: jmp 0x4289
0x488c: movzx eax,byte ptr [rsp+0x7c]
0x4891: jmp 0x47ac
0x4896: mov dword ptr [rsp+0x8],0x2
0x489e: jmp 0x4239
0x48a3: call 0x17e0
0x48a8: mov byte ptr [rsp+0xd],0x0
0x48ad: jmp 0x4321
0x48ba: mov byte ptr [rsp+0xe],0x1
0x48bf: xor eax,eax
0x48c1: xor r12d,r12d
0x48c4: mov qword ptr [rsp+0x50],0x0
0x48cd: jmp 0x3e74
0x48e4: nop 
0x48e6: nop word ptr cs:[rax+rax]
0x49dc: add rsp,0x20
0x49e0: mov r11,qword ptr [rsp+0x10]
0x49e5: cmp r11,rax
0x49e8: ja 0x4a51
0x49ea: lea rsi,[rax+0x1]
0x49ee: lea rax,[rip+0x20974b]
0x49f5: cmp r12,rax
0x49f8: mov qword ptr [rbx],rsi
0x49fb: je 0x4a0f
0x49fd: mov rdi,r12
0x4a00: mov qword ptr [rsp+0x10],rsi
0x4a05: call 0x1a90
0x4a0a: mov rsi,qword ptr [rsp+0x10]
0x4a0f: mov rdi,rsi
0x4a12: mov qword ptr [rsp+0x10],rsi
0x4a17: call 0x58f0
0x4a1c: sub rsp,0x8
0x4a20: mov qword ptr [rbx+0x8],rax
0x4a24: mov r8d,dword ptr [rbp]
0x4a28: push qword ptr [rbp+0x30]
0x4a2b: push qword ptr [rbp+0x28]
0x4a2e: mov rcx,r14
0x4a31: push r15
0x4a33: mov r9d,dword ptr [rsp+0x3c]
0x4a38: mov rdi,rax
0x4a3b: mov rdx,qword ptr [rsp+0x28]
0x4a40: mov rsi,qword ptr [rsp+0x30]
0x4a45: mov r12,rax
0x4a48: call 0x36b0
0x4a4d: add rsp,0x20
0x4a51: mov eax,dword ptr [rsp+0x18]
0x4a55: mov dword ptr [r13],eax
0x4a59: add rsp,0x28
0x4a5d: mov rax,r12
0x4a60: pop rbx
0x4a61: pop rbp
0x4a62: pop r12
0x4a64: pop r13
0x4a66: pop r14
0x4a68: pop r15
0x4a6a: ret 
0x4a91: call 0x16f0
0x4a96: call 0x5b40
0x4a9b: nop dword ptr [rax+rax]
0x4aa0: push r12
0x4aa2: push rbp
0x4aa3: push rbx
0x4aa4: mov rbx,rdi
0x4aa7: call 0x1700
0x4aac: mov r12d,dword ptr [rax]
0x4aaf: mov rbp,rax
0x4ab2: lea rax,[rip+0x209787]
0x4ab9: test rbx,rbx
0x4abc: mov esi,0x38
0x4ac1: cmove rbx,rax
0x4ac5: mov rdi,rbx
0x4ac8: call 0x5af0
0x4acd: mov dword ptr [rbp],r12d
0x4ad1: pop rbx
0x4ad2: pop rbp
0x4ad3: pop r12
0x4ad5: ret 
0x4ae0: lea rax,[rip+0x209759]
0x4ae7: test rdi,rdi
0x4aea: cmove rdi,rax
0x4aee: mov eax,dword ptr [rdi]
0x4af0: ret 
0x4b00: lea rax,[rip+0x209739]
0x4b07: test rdi,rdi
0x4b0a: cmove rdi,rax
0x4b0e: mov dword ptr [rdi],esi
0x4b10: ret 
0x4b20: lea rax,[rip+0x209719]
0x4b27: test rdi,rdi
0x4b2a: mov ecx,esi
0x4b2c: cmove rdi,rax
0x4b30: mov eax,esi
0x4b32: and ecx,0x1f
0x4b35: shr al,0x5
0x4b38: movzx eax,al
0x4b3b: lea rdi,[rdi+rax*4+0x8]
0x4b40: mov esi,dword ptr [rdi]
0x4b42: mov eax,esi
0x4b44: shr eax,cl
0x4b46: xor edx,eax
0x4b48: and eax,0x1
0x4b4b: and edx,0x1
0x4b4e: shl edx,cl
0x4b50: xor edx,esi
0x4b52: mov dword ptr [rdi],edx
0x4b54: ret 
0x4b60: lea rax,[rip+0x2096d9]
0x4b67: test rdi,rdi
0x4b6a: cmove rdi,rax
0x4b6e: mov eax,dword ptr [rdi+0x4]
0x4b71: mov dword ptr [rdi+0x4],esi
0x4b74: ret 
0x4b80: lea rax,[rip+0x2096b9]
0x4b87: test rdi,rdi
0x4b8a: cmove rdi,rax
0x4b8e: test rsi,rsi
0x4b91: mov dword ptr [rdi],0xa
0x4b97: je 0x4ba7
0x4b99: test rdx,rdx
0x4b9c: je 0x4ba7
0x4b9e: mov qword ptr [rdi+0x28],rsi
0x4ba2: mov qword ptr [rdi+0x30],rdx
0x4ba6: ret 
0x4ba7: sub rsp,0x8
0x4bab: call 0x16f0
0x4bb0: push r15
0x4bb2: push r14
0x4bb4: lea rax,[rip+0x209685]
0x4bbb: push r13
0x4bbd: push r12
0x4bbf: mov r13,rdi
0x4bc2: push rbp
0x4bc3: push rbx
0x4bc4: mov rbx,r8
0x4bc7: mov r14,rsi
0x4bca: mov r15,rdx
0x4bcd: sub rsp,0x18
0x4bd1: test r8,r8
0x4bd4: cmove rbx,rax
0x4bd8: mov qword ptr [rsp+0x8],rcx
0x4bdd: call 0x1700
0x4be2: mov r12d,dword ptr [rax]
0x4be5: mov rbp,rax
0x4be8: lea rax,[rbx+0x8]
0x4bec: sub rsp,0x8
0x4bf0: mov r9d,dword ptr [rbx+0x4]
0x4bf4: push qword ptr [rbx+0x30]
0x4bf7: mov r8d,dword ptr [rbx]
0x4bfa: push qword ptr [rbx+0x28]
0x4bfd: mov rdx,r15
0x4c00: push rax
0x4c01: mov rcx,qword ptr [rsp+0x28]
0x4c06: mov rsi,r14
0x4c09: mov rdi,r13
0x4c0c: call 0x36b0
0x4c11: mov dword ptr [rbp],r12d
0x4c15: add rsp,0x38
0x4c19: pop rbx
0x4c1a: pop rbp
0x4c1b: pop r12
0x4c1d: pop r13
0x4c1f: pop r14
0x4c21: pop r15
0x4c23: ret 
0x4c30: push r15
0x4c32: push r14
0x4c34: lea rax,[rip+0x209605]
0x4c3b: push r13
0x4c3d: push r12
0x4c3f: mov r12,rdx
0x4c42: push rbp
0x4c43: push rbx
0x4c44: mov rbx,rcx
0x4c47: mov r14,rdi
0x4c4a: mov r15,rsi
0x4c4d: sub rsp,0x38
0x4c51: test rcx,rcx
0x4c54: cmove rbx,rax
0x4c58: xor ebp,ebp
0x4c5a: call 0x1700
0x4c5f: test r12,r12
0x4c62: mov r13,rax
0x4c65: mov eax,dword ptr [rax]
0x4c67: sete bpl
0x4c6b: or ebp,dword ptr [rbx+0x4]
0x4c6e: lea r10,[rbx+0x8]
0x4c72: sub rsp,0x8
0x4c76: mov r8d,dword ptr [rbx]
0x4c79: mov rcx,r15
0x4c7c: mov dword ptr [rsp+0x14],eax
0x4c80: push qword ptr [rbx+0x30]
0x4c83: mov rdx,r14
0x4c86: push qword ptr [rbx+0x28]
0x4c89: push r10
0x4c8b: xor esi,esi
0x4c8d: mov r9d,ebp
0x4c90: xor edi,edi
0x4c92: mov qword ptr [rsp+0x40],r10
0x4c97: call 0x36b0
0x4c9c: lea rsi,[rax+0x1]
0x4ca0: mov qword ptr [rsp+0x48],rax
0x4ca5: add rsp,0x20
0x4ca9: mov rdi,rsi
0x4cac: mov qword ptr [rsp+0x18],rsi
0x4cb1: call 0x58f0
0x4cb6: mov qword ptr [rsp+0x10],rax
0x4cbb: sub rsp,0x8
0x4cbf: push qword ptr [rbx+0x30]
0x4cc2: push qword ptr [rbx+0x28]
0x4cc5: mov r10,qword ptr [rsp+0x38]
0x4cca: mov r9d,ebp
0x4ccd: mov r8d,dword ptr [rbx]
0x4cd0: mov rcx,r15
0x4cd3: mov rdx,r14
0x4cd6: mov rdi,rax
0x4cd9: push r10
0x4cdb: mov rsi,qword ptr [rsp+0x38]
0x4ce0: call 0x36b0
0x4ce5: mov eax,dword ptr [rsp+0x2c]
0x4ce9: add rsp,0x20
0x4ced: test r12,r12
0x4cf0: mov dword ptr [r13],eax
0x4cf4: je 0x4cff
0x4cf6: mov r11,qword ptr [rsp+0x28]
0x4cfb: mov qword ptr [r12],r11
0x4cff: mov rax,qword ptr [rsp+0x10]
0x4d04: add rsp,0x38
0x4d08: pop rbx
0x4d09: pop rbp
0x4d0a: pop r12
0x4d0c: pop r13
0x4d0e: pop r14
0x4d10: pop r15
0x4d12: ret 
0x4d20: mov rcx,rdx
0x4d23: xor edx,edx
0x4d25: jmp 0x4c30
0x4d30: mov eax,dword ptr [rip+0x209342]
0x4d36: push r12
0x4d38: mov r12,qword ptr [rip+0x209341]
0x4d3f: push rbp
0x4d40: push rbx
0x4d41: cmp eax,0x1
0x4d44: jle 0x4d71
0x4d46: sub eax,0x2
0x4d49: lea rbx,[r12+0x18]
0x4d4e: shl rax,0x4
0x4d52: lea rbp,[r12+rax+0x28]
0x4d57: nop word ptr [rax+rax]
0x4d60: mov rdi,qword ptr [rbx]
0x4d63: add rbx,0x10
0x4d67: call 0x1a90
0x4d6c: cmp rbx,rbp
0x4d6f: jne 0x4d60
0x4d71: mov rdi,qword ptr [r12+0x8]
0x4d76: lea rbx,[rip+0x2093c3]
0x4d7d: cmp rdi,rbx
0x4d80: je 0x4d99
0x4d82: call 0x1a90
0x4d87: mov qword ptr [rip+0x2092fe],0x100
0x4d92: mov qword ptr [rip+0x2092ff],rbx
0x4d99: lea rbx,[rip+0x2092f0]
0x4da0: cmp r12,rbx
0x4da3: je 0x4db4
0x4da5: mov rdi,r12
0x4da8: call 0x1a90
0x4dad: mov qword ptr [rip+0x2092cc],rbx
0x4db4: pop rbx
0x4db5: mov dword ptr [rip+0x2092b9],0x1
0x4dbf: pop rbp
0x4dc0: pop r12
0x4dc2: ret 
0x4dd0: lea rcx,[rip+0x209469]
0x4dd7: mov rdx,-0x1
0x4dde: jmp 0x48f0
0x4df0: lea rcx,[rip+0x209449]
0x4df7: jmp 0x48f0
0x4e00: lea rcx,[rip+0x209439]
0x4e07: mov rsi,rdi
0x4e0a: mov rdx,-0x1
0x4e11: xor edi,edi
0x4e13: jmp 0x48f0
0x4e20: lea rcx,[rip+0x209419]
0x4e27: mov rdx,rsi
0x4e2a: mov rsi,rdi
0x4e2d: xor edi,edi
0x4e2f: jmp 0x48f0
0x4eaf: mov rcx,qword ptr [rsp+0x38]
0x4eb4: xor rcx,qword ptr fs:0x28
0x4ebd: jne 0x4ec9
0x4ebf: add rsp,0x48
0x4ec3: ret 
0x4ec4: call 0x16f0
0x4ec9: call 0x17e0
0x4ece: nop 
0x4ed0: sub rsp,0x48
0x4ed4: mov rax,rdx
0x4ed7: mov rdx,rcx
0x4eda: mov rcx,qword ptr fs:0x28
0x4ee3: mov qword ptr [rsp+0x38],rcx
0x4ee8: xor ecx,ecx
0x4eea: cmp esi,0xa
0x4eed: je 0x4f50
0x4eef: mov dword ptr [rsp],esi
0x4ef2: mov rcx,rsp
0x4ef5: mov rsi,rax
0x4ef8: mov qword ptr [rsp+0x4],0x0
0x4f01: mov qword ptr [rsp+0xc],0x0
0x4f0a: mov qword ptr [rsp+0x14],0x0
0x4f13: mov qword ptr [rsp+0x1c],0x0
0x4f1c: mov qword ptr [rsp+0x24],0x0
0x4f25: mov qword ptr [rsp+0x2c],0x0
0x4f2e: mov dword ptr [rsp+0x34],0x0
0x4f36: call 0x48f0
0x4f3b: mov rdx,qword ptr [rsp+0x38]
0x4f40: xor rdx,qword ptr fs:0x28
0x4f49: jne 0x4f55
0x4f4b: add rsp,0x48
0x4f4f: ret 
0x4f50: call 0x16f0
0x4f55: call 0x17e0
0x4f5a: nop word ptr [rax+rax]
0x4f70: mov rcx,rdx
0x4f73: mov rdx,rsi
0x4f76: mov esi,edi
0x4f78: xor edi,edi
0x4f7a: jmp 0x4ed0
0x4f80: sub rsp,0x48
0x4f84: mov ecx,edx
0x4f86: mov rax,qword ptr fs:0x28
0x4f8f: mov qword ptr [rsp+0x38],rax
0x4f94: xor eax,eax
0x4f96: mov rax,qword ptr [rip+0x2092d3]
0x4f9d: mov r8,rsp
0x4fa0: and ecx,0x1f
0x4fa3: movdqa xmm0,[rip+0x209295]
0x4fab: mov qword ptr [rsp+0x30],rax
0x4fb0: mov eax,edx
0x4fb2: movaps [rsp],xmm0
0x4fb6: shr al,0x5
0x4fb9: movzx eax,al
0x4fbc: lea r9,[r8+rax*4+0x8]
0x4fc1: movdqa xmm0,[rip+0x209287]
0x4fc9: movaps [rsp+0x10],xmm0
0x4fce: movdqa xmm0,[rip+0x20928a]
0x4fd6: movaps [rsp+0x20],xmm0
0x4fdb: mov edx,dword ptr [r9]
0x4fde: mov eax,edx
0x4fe0: shr eax,cl
0x4fe2: not eax
0x4fe4: and eax,0x1
0x4fe7: shl eax,cl
0x4fe9: mov rcx,r8
0x4fec: xor eax,edx
0x4fee: mov rdx,rsi
0x4ff1: mov rsi,rdi
0x4ff4: mov dword ptr [r9],eax
0x4ff7: xor edi,edi
0x4ff9: call 0x48f0
0x4ffe: mov rsi,qword ptr [rsp+0x38]
0x5003: xor rsi,qword ptr fs:0x28
0x500c: jne 0x5013
0x500e: add rsp,0x48
0x5012: ret 
0x5013: call 0x17e0
0x5018: nop dword ptr [rax+rax]
0x5020: movsx edx,sil
0x5024: mov rsi,-0x1
0x502b: jmp 0x4f80
0x5030: mov edx,0x3a
0x5035: mov rsi,-0x1
0x503c: jmp 0x4f80
0x5050: mov edx,0x3a
0x5055: jmp 0x4f80
0x50cf: mov rcx,qword ptr [rsp+0x38]
0x50d4: xor rcx,qword ptr fs:0x28
0x50dd: jne 0x50e9
0x50df: add rsp,0x48
0x50e3: ret 
0x50e4: call 0x16f0
0x50e9: call 0x17e0
0x50ee: nop 
0x50f0: sub rsp,0x48
0x50f4: mov r9,rcx
0x50f7: mov rcx,qword ptr [rip+0x209172]
0x50fe: movdqa xmm0,[rip+0x20913a]
0x5106: mov rax,qword ptr fs:0x28
0x510f: mov qword ptr [rsp+0x38],rax
0x5114: xor eax,eax
0x5116: movaps [rsp],xmm0
0x511a: test rsi,rsi
0x511d: mov qword ptr [rsp+0x30],rcx
0x5122: mov dword ptr [rsp],0xa
0x5129: movdqa xmm0,[rip+0x20911f]
0x5131: movaps [rsp+0x10],xmm0
0x5136: movdqa xmm0,[rip+0x209122]
0x513e: movaps [rsp+0x20],xmm0
0x5143: je 0x5177
0x5145: test rdx,rdx
0x5148: je 0x5177
0x514a: mov qword ptr [rsp+0x28],rsi
0x514f: mov qword ptr [rsp+0x30],rdx
0x5154: mov rcx,rsp
0x5157: mov rdx,r8
0x515a: mov rsi,r9
0x515d: call 0x48f0
0x5162: mov rdi,qword ptr [rsp+0x38]
0x5167: xor rdi,qword ptr fs:0x28
0x5170: jne 0x517c
0x5172: add rsp,0x48
0x5176: ret 
0x5177: call 0x16f0
0x517c: call 0x17e0
0x5181: nop dword ptr [rax+rax]
0x5186: nop word ptr cs:[rax+rax]
0x5190: mov r8,-0x1
0x5197: jmp 0x50f0
0x51a0: mov rcx,rdx
0x51a3: mov r8,-0x1
0x51aa: mov rdx,rsi
0x51ad: mov rsi,rdi
0x51b0: xor edi,edi
0x51b2: jmp 0x50f0
0x51c0: mov r8,rcx
0x51c3: mov rcx,rdx
0x51c6: mov rdx,rsi
0x51c9: mov rsi,rdi
0x51cc: xor edi,edi
0x51ce: jmp 0x50f0
0x51e0: lea rcx,[rip+0x208e59]
0x51e7: jmp 0x48f0
0x51f0: lea rcx,[rip+0x208e49]
0x51f7: mov rdx,rsi
0x51fa: mov rsi,rdi
0x51fd: xor edi,edi
0x51ff: jmp 0x48f0
0x5210: lea rcx,[rip+0x208e29]
0x5217: mov rdx,-0x1
0x521e: jmp 0x48f0
0x52bc: call 0x17e0
0x52c1: nop word ptr cs:[rax+rax]
0x52cb: nop dword ptr [rax+rax]
0x5408: mov r8,rcx
0x540b: mov rcx,rdx
0x540e: lea rdx,[rip+0x575f]
0x5415: mov esi,0x1
0x541a: xor eax,eax
0x541c: call 0x1a50
0x5421: jmp 0x530c
0x561d: push r12
0x561f: push r15
0x5621: push r14
0x5623: mov r8,qword ptr [rsp+0x20]
0x5628: mov rcx,rbx
0x562b: mov rdx,rax
0x562e: mov rdi,rbp
0x5631: mov esi,0x1
0x5636: xor eax,eax
0x5638: call 0x1a50
0x563d: add rsp,0x20
0x5641: add rsp,0x28
0x5645: pop rbx
0x5646: pop rbp
0x5647: pop r12
0x5649: pop r13
0x564b: pop r14
0x564d: pop r15
0x564f: ret 
0x5689: push r12
0x568b: push r15
0x568d: push r14
0x568f: mov r9,qword ptr [rsp+0x28]
0x5694: jmp 0x5623
0x56f0: xor r9d,r9d
0x56f3: cmp qword ptr [r8],0x0
0x56f7: je 0x570b
0x56f9: nop dword ptr [rax]
0x5700: add r9,0x1
0x5704: cmp qword ptr [r8+r9*8],0x0
0x5709: jne 0x5700
0x570b: jmp 0x52d0
0x5710: sub rsp,0x68
0x5714: mov r10,r8
0x5717: xor r9d,r9d
0x571a: mov rax,qword ptr fs:0x28
0x5723: mov qword ptr [rsp+0x58],rax
0x5728: xor eax,eax
0x572a: mov r8,rsp
0x572d: nop dword ptr [rax]
0x5730: mov eax,dword ptr [r10]
0x5733: cmp eax,0x2f
0x5736: ja 0x577a
0x5738: mov r11d,eax
0x573b: add r11,qword ptr [r10+0x10]
0x573f: add eax,0x8
0x5742: mov dword ptr [r10],eax
0x5745: mov rax,qword ptr [r11]
0x5748: test rax,rax
0x574b: mov qword ptr [r8+r9*8],rax
0x574f: je 0x575b
0x5751: add r9,0x1
0x5755: cmp r9,0xa
0x5759: jne 0x5730
0x575b: call 0x52d0
0x5760: mov rax,qword ptr [rsp+0x58]
0x5765: xor rax,qword ptr fs:0x28
0x576e: jne 0x5775
0x5770: add rsp,0x68
0x5774: ret 
0x5775: call 0x17e0
0x577a: mov r11,qword ptr [r10+0x8]
0x577e: lea rax,[r11+0x8]
0x5782: mov qword ptr [r10+0x8],rax
0x5786: jmp 0x5745
0x5850: call 0x17e0
0x585c: mov rax,rbx
0x585f: add rbx,0x8
0x5863: jmp 0x5816
0x5870: push rbx
0x5871: lea rsi,[rip+0x534a]
0x5878: mov edx,0x5
0x587d: xor edi,edi
0x587f: call 0x1790
0x5884: lea rdx,[rip+0x534c]
0x588b: mov rsi,rax
0x588e: mov edi,0x1
0x5893: xor eax,eax
0x5895: call 0x19b0
0x589a: lea rsi,[rip+0x534c]
0x58a1: mov edx,0x5
0x58a6: xor edi,edi
0x58a8: call 0x1790
0x58ad: lea rcx,[rip+0x48f4]
0x58b4: lea rdx,[rip+0x43c5]
0x58bb: mov rsi,rax
0x58be: mov edi,0x1
0x58c3: xor eax,eax
0x58c5: call 0x19b0
0x58ca: mov rbx,qword ptr [rip+0x2087d7]
0x58d1: lea rsi,[rip+0x5548]
0x58d8: xor edi,edi
0x58da: mov edx,0x5
0x58df: call 0x1790
0x58e4: mov rsi,rbx
0x58e7: mov rdi,rax
0x58ea: pop rbx
0x58eb: jmp 0x1890
0x590a: nop word ptr [rax+rax]
0x5910: mov rax,rdi
0x5913: mul rsi
0x5916: mov rdi,rax
0x5919: seto al
0x591c: test rdi,rdi
0x591f: js 0x592b
0x5921: movzx eax,al
0x5924: test rax,rax
0x5927: jne 0x592b
0x5929: jmp 0x58f0
0x592b: sub rsp,0x8
0x592f: call 0x5b40
0x5934: nop 
0x5936: nop word ptr cs:[rax+rax]
0x5940: jmp 0x58f0
0x5986: nop word ptr cs:[rax+rax]
0x5990: mov rax,rsi
0x5993: mul rdx
0x5996: mov rsi,rax
0x5999: seto al
0x599c: test rsi,rsi
0x599f: js 0x59ab
0x59a1: movzx eax,al
0x59a4: test rax,rax
0x59a7: jne 0x59ab
0x59a9: jmp 0x5950
0x59ab: sub rsp,0x8
0x59af: call 0x5b40
0x59b4: nop 
0x59b6: nop word ptr cs:[rax+rax]
0x59c0: test rdi,rdi
0x59c3: mov r9,rdx
0x59c6: mov rcx,qword ptr [rsi]
0x59c9: je 0x5a00
0x59cb: xor edx,edx
0x59cd: movabsq rax,0x5555555555555554
0x59d7: div r9
0x59da: cmp rax,rcx
0x59dd: jbe 0x5a1b
0x59df: mov rax,rcx
0x59e2: shr rax, 1
0x59e5: lea rcx,[rax+rcx+0x1]
0x59ea: mov qword ptr [rsi],rcx
0x59ed: imul rcx,r9
0x59f1: mov rsi,rcx
0x59f4: jmp 0x5950
0x5a00: test rcx,rcx
0x5a03: je 0x5a28
0x5a05: mov rax,rcx
0x5a08: mul r9
0x5a0b: seto dl
0x5a0e: test rax,rax
0x5a11: movzx edx,dl
0x5a14: js 0x5a1b
0x5a16: test rdx,rdx
0x5a19: je 0x59ea
0x5a1b: sub rsp,0x8
0x5a1f: call 0x5b40
0x5a24: nop dword ptr [rax]
0x5a28: xor edx,edx
0x5a2a: mov eax,0x80
0x5a2f: xor r8d,r8d
0x5a32: div r9
0x5a35: test rax,rax
0x5a38: sete r8b
0x5a3c: lea rcx,[r8+rax]
0x5a40: jmp 0x5a05
0x5a9a: nop word ptr [rax+rax]
0x5aa0: push rbx
0x5aa1: mov rbx,rdi
0x5aa4: call 0x58f0
0x5aa9: mov rdx,rbx
0x5aac: xor esi,esi
0x5aae: mov rdi,rax
0x5ab1: pop rbx
0x5ab2: jmp 0x1850
0x5ac0: mov rax,rdi
0x5ac3: sub rsp,0x8
0x5ac7: mul rsi
0x5aca: seto dl
0x5acd: test rax,rax
0x5ad0: js 0x5ae9
0x5ad2: movzx edx,dl
0x5ad5: test rdx,rdx
0x5ad8: jne 0x5ae9
0x5ada: call 0x18a0
0x5adf: test rax,rax
0x5ae2: je 0x5ae9
0x5ae4: add rsp,0x8
0x5ae8: ret 
0x5ae9: call 0x5b40
0x5aee: nop 
0x5af0: push rbp
0x5af1: push rbx
0x5af2: mov rbp,rdi
0x5af5: mov rdi,rsi
0x5af8: mov rbx,rsi
0x5afb: sub rsp,0x8
0x5aff: call 0x58f0
0x5b04: add rsp,0x8
0x5b08: mov rdx,rbx
0x5b0b: mov rsi,rbp
0x5b0e: pop rbx
0x5b0f: pop rbp
0x5b10: mov rdi,rax
0x5b13: jmp 0x18e0
0x5b20: push rbx
0x5b21: mov rbx,rdi
0x5b24: call 0x17b0
0x5b29: mov rdi,rbx
0x5b2c: lea rsi,[rax+0x1]
0x5b30: pop rbx
0x5b31: jmp 0x5af0
0x5b70: call 0x16f0
0x5b75: nop word ptr cs:[rax+rax]
0x5b7f: nop 
0x5baf: nop 
0x5bcf: nop 
0x5bd0: mov edx,dword ptr [rdi+0x48]
0x5bd3: mov eax,0x1
0x5bd8: and edx,0x11
0x5bdb: cmp edx,0x10
0x5bde: je 0x5be7
0x5be0: xor eax,eax
0x5be2: cmp edx,0x11
0x5be5: je 0x5bf0
0x5be7: rep ret 
0x5bf0: cmp qword ptr [rsi+0x58],0x0
0x5bf5: setne al
0x5bf8: ret 
0x5c00: xor eax,eax
0x5c02: mov rdx,qword ptr [rsi+0x8]
0x5c06: cmp qword ptr [rdi+0x8],rdx
0x5c0a: je 0x5c10
0x5c0c: rep ret 
0x5c10: mov rax,qword ptr [rsi]
0x5c13: cmp qword ptr [rdi],rax
0x5c16: sete al
0x5c19: ret 
0x5c20: mov rax,qword ptr [rdi+0x8]
0x5c24: xor edx,edx
0x5c26: div rsi
0x5c29: mov rax,rdx
0x5c2c: ret 
0x5c50: mov rdx,qword ptr [rdi]
0x5c53: mov rax,qword ptr [rsi]
0x5c56: mov rax,qword ptr [rax+0x80]
0x5c5d: cmp qword ptr [rdx+0x80],rax
0x5c64: jb 0x5c70
0x5c66: seta al
0x5c69: movzx eax,al
0x5c6c: ret 
0x5c70: mov eax,0xffffffff
0x5c75: ret 
0x61a2: call 0x17e0
0x61ac: nop dword ptr [rax]
0x6286: nop word ptr cs:[rax+rax]
0x6665: call 0x17e0
0x67ee: call 0x17e0
0x67f8: nop dword ptr [rax+rax]
0x6859: mov qword ptr [rsp+0x38],-0x1
0x6943: test ah,0x4
0x6946: je 0x6c48
0x6b7e: sub rdx,qword ptr [rax+0x38]
0x6b82: add rdx,rcx
0x6b85: mov qword ptr [rax+0x30],rdx
0x6ba0: mov rax,qword ptr [r13+0x38]
0x6ba4: mov rdi,qword ptr [rsp+0x40]
0x6ba9: mov qword ptr [r13+0x30],rax
0x6bad: mov rax,qword ptr [r13+0x60]
0x6bb1: lea rdx,[rax+0x1]
0x6bb5: call 0x19c0
0x6bba: mov eax,dword ptr [r15+0x48]
0x6bbe: jmp 0x693c
0x6c10: and esi,0xfb
0x6c16: je 0x6961
0x6c1c: mov eax,0xb
0x6c21: cmp edx,0xb
0x6c24: mov word ptr [r13+0x70],ax
0x6c29: jbe 0x71b6
0x6c2f: mov dword ptr [r13+0x90],0x0
0x6c3a: mov eax,0x1
0x6c3f: jmp 0x698a
0x6c48: xor edx,edx
0x6c4a: mov rsi,r13
0x6c4d: mov rdi,r15
0x6c50: call 0x5c80
0x6c55: mov word ptr [r13+0x70],ax
0x6c5a: jmp 0x6991
0x6f0c: cmp rbx,0x1
0x6f10: je 0x6dc5
0x6f16: mov rsi,qword ptr [rsp+0x10]
0x6f1b: mov rdx,rbx
0x6f1e: mov rdi,r15
0x6f21: call 0x5e50
0x6f26: mov qword ptr [rsp+0x10],rax
0x6f2b: jmp 0x6dc5
0x6f8d: test rbx,rbx
0x6f90: mov dword ptr [rbp+0x40],eax
0x6f93: jne 0x70c9
0x6f99: cmp qword ptr [rsp+0x50],0x0
0x6f9f: mov eax,0x4
0x6fa4: jne 0x70c9
0x6faa: mov word ptr [rbp+0x70],ax
0x70c9: mov eax,0x7
0x70ce: jmp 0x6faa
0x71b1: call 0x17e0
0x71b6: lea rax,[rip+0x3d63]
0x71bd: mov eax,dword ptr [rax+rdx*4]
0x71c0: mov dword ptr [r13+0x90],eax
0x71c7: mov eax,0x1
0x71cc: jmp 0x698a
0x72f0: mov eax,dword ptr [rbx+0x48]
0x72f3: shr eax,0xa
0x72f6: and eax,0x1
0x72f9: mov byte ptr [rsp+0x16],al
0x73f5: cmp rbp,0x1
0x73f9: jbe 0x740c
0x73fb: mov rsi,r12
0x73fe: mov rdx,rbp
0x7401: mov rdi,rbx
0x7404: call 0x5e50
0x7409: mov r12,rax
0x745d: mov edi,dword ptr [rbx+0x2c]
0x7460: lea rdx,[rip+0x3ab4]
0x7467: call 0x63d0
0x746c: test eax,eax
0x746e: mov dword ptr [rbx+0x28],eax
0x7471: jns 0x7480
0x7473: or dword ptr [rbx+0x48],0x4
0x7477: nop word ptr [rax+rax]
0x74a0: mov rdi,qword ptr [r13]
0x74a4: mov eax,ebp
0x74a6: mov dword ptr [rbx+0x2c],0xffffff9c
0x74ad: and ah,-0x3
0x74b0: or eax,0x4
0x74b3: test rdi,rdi
0x74b6: mov dword ptr [rbx+0x48],eax
0x74b9: jne 0x725e
0x7578: call 0x1700
0x757d: xor ebx,ebx
0x757f: mov dword ptr [rax],0x16
0x7585: jmp 0x748e
0x7914: nop dword ptr [rax]
0x7eb0: sub rsp,0x8
0x7eb4: call 0x1700
0x7eb9: mov dword ptr [rax],0x16
0x7ebf: mov eax,0x1
0x7ec4: add rsp,0x8
0x7ec8: ret 
0x7ed0: push r14
0x7ed2: push r13
0x7ed4: push r12
0x7ed6: push rbp
0x7ed7: mov r12d,esi
0x7eda: push rbx
0x7edb: mov rbx,rdi
0x7ede: call 0x1700
0x7ee3: test r12d,0xffffefff
0x7eea: mov r13,rax
0x7eed: jne 0x7fd8
0x7ef3: mov rbp,qword ptr [rbx]
0x7ef6: mov dword ptr [rax],0x0
0x7efc: test byte ptr [rbx+0x49],0x20
0x7f00: jne 0x7f80
0x7f02: movzx eax,word ptr [rbp+0x70]
0x7f06: cmp ax,0x9
0x7f0a: je 0x7f70
0x7f0c: cmp ax,0x1
0x7f10: jne 0x7f80
0x7f12: mov rdi,qword ptr [rbx+0x8]
0x7f16: test rdi,rdi
0x7f19: je 0x7f20
0x7f1b: call 0x5ff0
0x7f20: cmp r12d,0x1000
0x7f27: mov r14d,0x1
0x7f2d: jne 0x7f3c
0x7f2f: or dword ptr [rbx+0x48],0x1000
0x7f36: mov r14d,0x2
0x7f3c: cmp qword ptr [rbp+0x58],0x0
0x7f41: jne 0x7f55
0x7f43: mov rax,qword ptr [rbp+0x30]
0x7f47: cmp byte ptr [rax],0x2f
0x7f4a: je 0x7f55
0x7f4c: mov esi,dword ptr [rbx+0x48]
0x7f4f: test sil,0x4
0x7f53: je 0x7f90
0x7f55: mov esi,r14d
0x7f58: mov rdi,rbx
0x7f5b: call 0x6800
0x7f60: mov qword ptr [rbx+0x8],rax
0x7f64: pop rbx
0x7f65: pop rbp
0x7f66: pop r12
0x7f68: pop r13
0x7f6a: pop r14
0x7f6c: ret 
0x7f70: pop rbx
0x7f71: mov rax,qword ptr [rbp+0x10]
0x7f75: pop rbp
0x7f76: pop r12
0x7f78: pop r13
0x7f7a: pop r14
0x7f7c: ret 
0x7f80: pop rbx
0x7f81: xor eax,eax
0x7f83: pop rbp
0x7f84: pop r12
0x7f86: pop r13
0x7f88: pop r14
0x7f8a: ret 
0x7f90: mov edi,dword ptr [rbx+0x2c]
0x7f93: lea rdx,[rip+0x2f81]
0x7f9a: call 0x63d0
0x7f9f: test eax,eax
0x7fa1: mov ebp,eax
0x7fa3: js 0x7ff9
0x7fa5: mov esi,r14d
0x7fa8: mov rdi,rbx
0x7fab: call 0x6800
0x7fb0: test byte ptr [rbx+0x49],0x2
0x7fb4: mov qword ptr [rbx+0x8],rax
0x7fb8: jne 0x7fe8
0x7fba: mov edi,ebp
0x7fbc: call 0x1980
0x7fc1: test eax,eax
0x7fc3: jne 0x8008
0x7fc5: mov edi,ebp
0x7fc7: call 0x1860
0x7fcc: mov rax,qword ptr [rbx+0x8]
0x7fd0: jmp 0x7f64
0x7fd8: mov dword ptr [rax],0x16
0x7fde: xor eax,eax
0x7fe0: jmp 0x7f64
0x7fe8: mov edx,0x1
0x7fed: mov esi,ebp
0x7fef: mov rdi,rbx
0x7ff2: call 0x6220
0x7ff7: jmp 0x7fcc
0x7ff9: mov qword ptr [rbx+0x8],0x0
0x8001: xor eax,eax
0x8003: jmp 0x7f64
0x8008: mov ebx,dword ptr [r13]
0x800c: mov edi,ebp
0x800e: call 0x1860
0x8013: xor eax,eax
0x8015: mov dword ptr [r13],ebx
0x8019: jmp 0x7f64
0x8020: push r13
0x8022: push r12
0x8024: mov r13,rsi
0x8027: push rbp
0x8028: push rbx
0x8029: mov rbx,rdi
0x802c: mov r12,rdx
0x802f: sub rsp,0x18
0x8033: mov rax,qword ptr fs:0x28
0x803c: mov qword ptr [rsp+0x8],rax
0x8041: xor eax,eax
0x8043: lea rax,[rsp+0x4]
0x8048: test rdi,rdi
0x804b: cmove rbx,rax
0x804f: mov rdi,rbx
0x8052: call 0x1800
0x8057: cmp rax,-0x3
0x805b: mov rbp,rax
0x805e: jbe 0x8080
0x8060: test r12,r12
0x8063: je 0x8080
0x8065: xor edi,edi
0x8067: call 0x8240
0x806c: test al,al
0x806e: jne 0x8080
0x8070: movzx eax,byte ptr [r13]
0x8075: mov ebp,0x1
0x807a: mov dword ptr [rbx],eax
0x807c: nop dword ptr [rax]
0x8080: mov rdx,qword ptr [rsp+0x8]
0x8085: xor rdx,qword ptr fs:0x28
0x808e: mov rax,rbp
0x8091: jne 0x809e
0x8093: add rsp,0x18
0x8097: pop rbx
0x8098: pop rbp
0x8099: pop r12
0x809b: pop r13
0x809d: ret 
0x809e: call 0x17e0
0x80a3: nop word ptr cs:[rax+rax]
0x80ad: nop dword ptr [rax]
0x80b0: push r12
0x80b2: push rbp
0x80b3: mov rbp,rdi
0x80b6: push rbx
0x80b7: call 0x1730
0x80bc: mov ebx,dword ptr [rbp]
0x80bf: mov rdi,rbp
0x80c2: mov r12,rax
0x80c5: call 0x97a0
0x80ca: and ebx,0x20
0x80cd: test ebx,ebx
0x80cf: jne 0x80e8
0x80d1: test eax,eax
0x80d3: je 0x80df
0x80d5: test r12,r12
0x80d8: mov eax,0xffffffff
0x80dd: je 0x8118
0x80df: pop rbx
0x80e0: pop rbp
0x80e1: pop r12
0x80e3: ret 
0x80e8: test eax,eax
0x80ea: jne 0x8108
0x80ec: call 0x1700
0x80f1: mov dword ptr [rax],0x0
0x80f7: mov eax,0xffffffff
0x80fc: pop rbx
0x80fd: pop rbp
0x80fe: pop r12
0x8100: ret 
0x8108: pop rbx
0x8109: mov eax,0xffffffff
0x810e: pop rbp
0x810f: pop r12
0x8111: ret 
0x8118: call 0x1700
0x811d: cmp dword ptr [rax],0x9
0x8120: pop rbx
0x8121: pop rbp
0x8122: pop r12
0x8124: setne al
0x8127: movzx eax,al
0x812a: neg eax
0x812c: ret 
0x81ca: nop word ptr [rax+rax]
0x8218: lea rax,[rsp+0x60]
0x821d: mov dword ptr [rsp],0x10
0x8224: mov edx,dword ptr [rsp+0x30]
0x8228: mov qword ptr [rsp+0x8],rax
0x822d: lea rax,[rsp+0x20]
0x8232: mov qword ptr [rsp+0x10],rax
0x8237: jmp 0x81f1
0x8239: call 0x17e0
0x823e: nop 
0x8240: sub rsp,0x8
0x8244: xor esi,esi
0x8246: call 0x19a0
0x824b: mov rdx,rax
0x824e: mov eax,0x1
0x8253: test rdx,rdx
0x8256: je 0x8275
0x8258: lea rdi,[rip+0x2d3d]
0x825f: mov ecx,0x2
0x8264: mov rsi,rdx
0x8267: rep cmpsb [rsi],es:[rdi]
0x8269: seta cl
0x826c: sbb cl,0x0
0x826f: xor eax,eax
0x8271: test cl,cl
0x8273: jne 0x8280
0x8275: add rsp,0x8
0x8279: ret 
0x8280: lea rdi,[rip+0x2d17]
0x8287: mov ecx,0x6
0x828c: mov rsi,rdx
0x828f: rep cmpsb [rsi],es:[rdi]
0x8291: seta al
0x8294: sbb al,0x0
0x8296: test al,al
0x8298: setne al
0x829b: add rsp,0x8
0x829f: ret 
0x8340: mov rax,rdi
0x8343: xor edx,edx
0x8345: ror rax,0x3
0x8349: div rsi
0x834c: mov rax,rdx
0x834f: ret 
0x8350: cmp rdi,rsi
0x8353: sete al
0x8356: ret 
0x8382: nop dword ptr [rax]
0x8386: nop word ptr cs:[rax+rax]
0x8670: mov rax,qword ptr [rdi+0x10]
0x8674: ret 
0x8680: mov rax,qword ptr [rdi+0x18]
0x8684: ret 
0x8690: mov rax,qword ptr [rdi+0x20]
0x8694: ret 
0x86a0: mov rsi,qword ptr [rdi]
0x86a3: mov rdi,qword ptr [rdi+0x8]
0x86a7: xor eax,eax
0x86a9: cmp rsi,rdi
0x86ac: jae 0x86e7
0x86ae: nop 
0x86b0: cmp qword ptr [rsi],0x0
0x86b4: je 0x86dc
0x86b6: mov rdx,qword ptr [rsi+0x8]
0x86ba: mov ecx,0x1
0x86bf: test rdx,rdx
0x86c2: je 0x86d5
0x86c4: nop dword ptr [rax]
0x86c8: mov rdx,qword ptr [rdx+0x8]
0x86cc: add rcx,0x1
0x86d0: test rdx,rdx
0x86d3: jne 0x86c8
0x86d5: cmp rax,rcx
0x86d8: cmovb rax,rcx
0x86dc: add rsi,0x10
0x86e0: cmp rsi,rdi
0x86e3: jb 0x86b0
0x86e5: rep ret 
0x86e7: rep ret 
0x86f0: mov rcx,qword ptr [rdi]
0x86f3: mov r8,qword ptr [rdi+0x8]
0x86f7: xor edx,edx
0x86f9: xor esi,esi
0x86fb: cmp rcx,r8
0x86fe: jae 0x8736
0x8700: cmp qword ptr [rcx],0x0
0x8704: je 0x872d
0x8706: mov rax,qword ptr [rcx+0x8]
0x870a: add rsi,0x1
0x870e: add rdx,0x1
0x8712: test rax,rax
0x8715: je 0x872d
0x8717: nop word ptr [rax+rax]
0x8720: mov rax,qword ptr [rax+0x8]
0x8724: add rdx,0x1
0x8728: test rax,rax
0x872b: jne 0x8720
0x872d: add rcx,0x10
0x8731: cmp rcx,r8
0x8734: jb 0x8700
0x8736: xor eax,eax
0x8738: cmp qword ptr [rdi+0x18],rsi
0x873c: je 0x8740
0x873e: rep ret 
0x8740: cmp qword ptr [rdi+0x20],rdx
0x8744: sete al
0x8747: ret 
0x8750: push r13
0x8752: push r12
0x8754: mov r12,rsi
0x8757: push rbp
0x8758: push rbx
0x8759: xor ebx,ebx
0x875b: sub rsp,0x8
0x875f: mov rsi,qword ptr [rdi]
0x8762: mov rcx,qword ptr [rdi+0x20]
0x8766: mov rbp,qword ptr [rdi+0x10]
0x876a: mov r13,qword ptr [rdi+0x18]
0x876e: mov rdi,qword ptr [rdi+0x8]
0x8772: cmp rsi,rdi
0x8775: jae 0x87b5
0x8777: nop word ptr [rax+rax]
0x8780: cmp qword ptr [rsi],0x0
0x8784: je 0x87ac
0x8786: mov rax,qword ptr [rsi+0x8]
0x878a: mov edx,0x1
0x878f: test rax,rax
0x8792: je 0x87a5
0x8794: nop dword ptr [rax]
0x8798: mov rax,qword ptr [rax+0x8]
0x879c: add rdx,0x1
0x87a0: test rax,rax
0x87a3: jne 0x8798
0x87a5: cmp rbx,rdx
0x87a8: cmovb rbx,rdx
0x87ac: add rsi,0x10
0x87b0: cmp rsi,rdi
0x87b3: jb 0x8780
0x87b5: lea rdx,[rip+0x27e8]
0x87bc: mov esi,0x1
0x87c1: mov rdi,r12
0x87c4: xor eax,eax
0x87c6: call 0x1a50
0x87cb: lea rdx,[rip+0x27ea]
0x87d2: xor eax,eax
0x87d4: mov rcx,rbp
0x87d7: mov esi,0x1
0x87dc: mov rdi,r12
0x87df: call 0x1a50
0x87e4: test r13,r13
0x87e7: js 0x8850
0x87e9: pxor xmm0,xmm0
0x87ed: test rbp,rbp
0x87f0: cvtsi2sdq xmm0,r13
0x87f5: mulsd xmm0,[rip+0x285b]
0x87fd: js 0x8879
0x87ff: pxor xmm1,xmm1
0x8803: cvtsi2sdq xmm1,rbp
0x8808: divsd xmm0,xmm1
0x880c: lea rdx,[rip+0x27dd]
0x8813: mov rcx,r13
0x8816: mov rdi,r12
0x8819: mov esi,0x1
0x881e: mov eax,0x1
0x8823: call 0x1a50
0x8828: add rsp,0x8
0x882c: mov rcx,rbx
0x882f: mov rdi,r12
0x8832: pop rbx
0x8833: pop rbp
0x8834: pop r12
0x8836: pop r13
0x8838: lea rdx,[rip+0x2795]
0x883f: mov esi,0x1
0x8844: xor eax,eax
0x8846: jmp 0x1a50
0x8850: mov rax,r13
0x8853: mov rdx,r13
0x8856: pxor xmm0,xmm0
0x885a: shr rax, 1
0x885d: and edx,0x1
0x8860: or rax,rdx
0x8863: test rbp,rbp
0x8866: cvtsi2sdq xmm0,rax
0x886b: addsd xmm0,xmm0
0x886f: mulsd xmm0,[rip+0x27e1]
0x8877: jns 0x87ff
0x8879: mov rax,rbp
0x887c: pxor xmm1,xmm1
0x8880: shr rax, 1
0x8883: and ebp,0x1
0x8886: or rax,rbp
0x8889: cvtsi2sdq xmm1,rax
0x888e: addsd xmm1,xmm1
0x8892: jmp 0x8808
0x88c0: mov rsi,qword ptr [rbx]
0x88d0: test al,al
0x88d2: jne 0x88f0
0x88d4: mov rbx,qword ptr [rbx+0x8]
0x88d8: test rbx,rbx
0x88db: jne 0x88c0
0x88f0: mov rsi,qword ptr [rbx]
0x88f3: pop rbx
0x88f4: pop rbp
0x88f5: mov rax,rsi
0x88f8: pop r12
0x88fa: ret 
0x8900: cmp qword ptr [rdi+0x20],0x0
0x8905: je 0x8933
0x8907: mov rdx,qword ptr [rdi]
0x890a: mov rcx,qword ptr [rdi+0x8]
0x890e: cmp rdx,rcx
0x8911: jae 0x8938
0x8913: mov rax,qword ptr [rdx]
0x8916: test rax,rax
0x8919: jne 0x8936
0x891b: nop dword ptr [rax+rax]
0x8920: add rdx,0x10
0x8924: cmp rdx,rcx
0x8927: jae 0x8938
0x8929: mov rax,qword ptr [rdx]
0x892c: test rax,rax
0x892f: je 0x8920
0x8931: rep ret 
0x8933: xor eax,eax
0x8935: ret 
0x8936: rep ret 
0x8938: sub rsp,0x8
0x893c: call 0x16f0
0x8941: nop dword ptr [rax+rax]
0x8946: nop word ptr cs:[rax+rax]
0x8950: push rbp
0x8951: push rbx
0x8952: mov rbp,rdi
0x8955: mov rbx,rsi
0x8958: sub rsp,0x8
0x895c: call 0x8360
0x8961: mov rdx,rax
0x8964: mov rcx,rax
0x8967: mov rax,qword ptr [rdx]
0x896a: mov rdx,qword ptr [rdx+0x8]
0x896e: cmp rax,rbx
0x8971: je 0x8989
0x8973: nop dword ptr [rax+rax]
0x8978: test rdx,rdx
0x897b: je 0x898e
0x897d: mov rax,qword ptr [rdx]
0x8980: mov rdx,qword ptr [rdx+0x8]
0x8984: cmp rax,rbx
0x8987: jne 0x8978
0x8989: test rdx,rdx
0x898c: jne 0x89b8
0x898e: mov rdx,qword ptr [rbp+0x8]
0x8992: jmp 0x89a0
0x8998: mov rax,qword ptr [rcx]
0x899b: test rax,rax
0x899e: jne 0x89ab
0x89a0: add rcx,0x10
0x89a4: cmp rdx,rcx
0x89a7: ja 0x8998
0x89a9: xor eax,eax
0x89ab: add rsp,0x8
0x89af: pop rbx
0x89b0: pop rbp
0x89b1: ret 
0x89b8: mov rax,qword ptr [rdx]
0x89bb: add rsp,0x8
0x89bf: pop rbx
0x89c0: pop rbp
0x89c1: ret 
0x89d0: mov r9,qword ptr [rdi]
0x89d3: cmp qword ptr [rdi+0x8],r9
0x89d7: jbe 0x8a32
0x89d9: xor r8d,r8d
0x89dc: mov rcx,qword ptr [r9]
0x89df: test rcx,rcx
0x89e2: je 0x8a1d
0x89e4: cmp rdx,r8
0x89e7: jbe 0x8a27
0x89e9: mov qword ptr [rsi+r8*8],rcx
0x89ed: mov rcx,qword ptr [r9+0x8]
0x89f1: lea rax,[r8+0x1]
0x89f5: test rcx,rcx
0x89f8: je 0x8a1a
0x89fa: nop word ptr [rax+rax]
0x8a00: cmp rdx,rax
0x8a03: je 0x8a30
0x8a05: mov r8,qword ptr [rcx]
0x8a08: add rax,0x1
0x8a0c: mov qword ptr [rsi+rax*8-0x8],r8
0x8a11: mov rcx,qword ptr [rcx+0x8]
0x8a15: test rcx,rcx
0x8a18: jne 0x8a00
0x8a1a: mov r8,rax
0x8a1d: add r9,0x10
0x8a21: cmp qword ptr [rdi+0x8],r9
0x8a25: ja 0x89dc
0x8a27: mov rax,r8
0x8a2a: ret 
0x8a30: rep ret 
0x8a32: xor eax,eax
0x8a34: ret 
0x8a40: push r15
0x8a42: push r14
0x8a44: push r13
0x8a46: push r12
0x8a48: push rbp
0x8a49: push rbx
0x8a4a: sub rsp,0x8
0x8a4e: mov r14,qword ptr [rdi]
0x8a51: cmp qword ptr [rdi+0x8],r14
0x8a55: jbe 0x8aa6
0x8a57: mov r13,rdx
0x8a5a: mov r12,rsi
0x8a5d: mov r15,rdi
0x8a60: xor ebp,ebp
0x8a62: mov rdi,qword ptr [r14]
0x8a65: test rdi,rdi
0x8a68: je 0x8a8a
0x8a6a: mov rbx,r14
0x8a6d: jmp 0x8a73
0x8a70: mov rdi,qword ptr [rbx]
0x8a73: mov rsi,r13
0x8a76: call r12
0x8a79: test al,al
0x8a7b: je 0x8a94
0x8a7d: mov rbx,qword ptr [rbx+0x8]
0x8a81: add rbp,0x1
0x8a85: test rbx,rbx
0x8a88: jne 0x8a70
0x8a8a: add r14,0x10
0x8a8e: cmp qword ptr [r15+0x8],r14
0x8a92: ja 0x8a62
0x8a94: add rsp,0x8
0x8a98: mov rax,rbp
0x8a9b: pop rbx
0x8a9c: pop rbp
0x8a9d: pop r12
0x8a9f: pop r13
0x8aa1: pop r14
0x8aa3: pop r15
0x8aa5: ret 
0x8aa6: xor ebp,ebp
0x8aa8: jmp 0x8a94
0x8ab0: movzx ecx,byte ptr [rdi]
0x8ab3: xor edx,edx
0x8ab5: test cl,cl
0x8ab7: je 0x8add
0x8ab9: nop dword ptr [rax]
0x8ac0: mov rax,rdx
0x8ac3: add rdi,0x1
0x8ac7: shl rax,0x5
0x8acb: sub rax,rdx
0x8ace: xor edx,edx
0x8ad0: add rax,rcx
0x8ad3: movzx ecx,byte ptr [rdi]
0x8ad6: div rsi
0x8ad9: test cl,cl
0x8adb: jne 0x8ac0
0x8add: mov rax,rdx
0x8ae0: ret 
0x8af0: movabsq rax,0x3f80000000000000
0x8afa: mov byte ptr [rdi+0x10],0x0
0x8afe: mov qword ptr [rdi],rax
0x8b01: movabsq rax,0x3fb4fdf43f4ccccd
0x8b0b: mov qword ptr [rdi+0x8],rax
0x8b0f: ret 
0x8b6c: mov qword ptr [rax+0x28],r15
0x8b70: call 0x84b0
0x8b75: test al,al
0x8b77: je 0x8c00
0x8b7d: cmp byte ptr [r15+0x10],0x0
0x8b82: je 0x8c80
0x8c80: test rbp,rbp
0x8c83: movxd xmm1,[r15+0x8]
0x8c89: jns 0x8c41
0x8cd0: push r12
0x8cd2: push rbp
0x8cd3: mov rbp,rdi
0x8cd6: push rbx
0x8cd7: mov r12,qword ptr [rdi]
0x8cda: cmp r12,qword ptr [rdi+0x8]
0x8cde: jae 0x8d4b
0x8ce0: cmp qword ptr [r12],0x0
0x8ce5: je 0x8d41
0x8ce7: mov rbx,qword ptr [r12+0x8]
0x8cec: mov rax,qword ptr [rbp+0x40]
0x8cf0: test rbx,rbx
0x8cf3: je 0x8d25
0x8cf5: nop dword ptr [rax]
0x8cf8: test rax,rax
0x8cfb: je 0x8d06
0x8cfd: mov rdi,qword ptr [rbx]
0x8d00: call rax
0x8d02: mov rax,qword ptr [rbp+0x40]
0x8d06: mov rdx,qword ptr [rbx+0x8]
0x8d0a: mov rcx,qword ptr [rbp+0x48]
0x8d0e: mov qword ptr [rbx],0x0
0x8d15: test rdx,rdx
0x8d18: mov qword ptr [rbx+0x8],rcx
0x8d1c: mov qword ptr [rbp+0x48],rbx
0x8d20: mov rbx,rdx
0x8d23: jne 0x8cf8
0x8d25: test rax,rax
0x8d28: je 0x8d30
0x8d2a: mov rdi,qword ptr [r12]
0x8d2e: call rax
0x8d30: mov qword ptr [r12],0x0
0x8d38: mov qword ptr [r12+0x8],0x0
0x8d41: add r12,0x10
0x8d45: cmp qword ptr [rbp+0x8],r12
0x8d49: ja 0x8ce0
0x8d4b: mov qword ptr [rbp+0x18],0x0
0x8d53: mov qword ptr [rbp+0x20],0x0
0x8d5b: pop rbx
0x8d5c: pop rbp
0x8d5d: pop r12
0x8d5f: ret 
0x8da0: mov rdi,qword ptr [rbx]
0x8da8: mov rbx,qword ptr [rbx+0x8]
0x8dac: test rbx,rbx
0x8daf: jne 0x8da0
0x8db1: mov rax,qword ptr [r12+0x8]
0x906a: call 0x17e0
0x907e: nop 
0x9262: nop word ptr [rax+rax]
0x92ff: call 0x17e0
0x9304: nop 
0x9306: nop word ptr cs:[rax+rax]
0x9364: call 0x17e0
0x9369: nop dword ptr [rax]
0x956e: call 0x17e0
0x9573: nop word ptr cs:[rax+rax]
0x957d: nop dword ptr [rax]
0x962e: nop 
0x9630: sub rsp,0x8
0x9634: mov edi,0xe
0x9639: call 0x1950
0x963e: test rax,rax
0x9641: je 0x9660
0x9643: cmp byte ptr [rax],0x0
0x9646: lea rdx,[rip+0x1a13]
0x964d: cmove rax,rdx
0x9651: add rsp,0x8
0x9655: ret 
0x9660: lea rax,[rip+0x19f9]
0x9667: add rsp,0x8
0x966b: ret 
0x96b8: lea rax,[rsp+0x60]
0x96bd: mov dword ptr [rsp],0x18
0x96c4: mov ecx,dword ptr [rsp+0x38]
0x96c8: mov qword ptr [rsp+0x8],rax
0x96cd: lea rax,[rsp+0x20]
0x96d2: mov qword ptr [rsp+0x10],rax
0x96d7: jmp 0x9690
0x96d9: call 0x17e0
0x96de: nop 
0x97a0: push r12
0x97a2: push rbp
0x97a3: push rbx
0x97a4: mov rbx,rdi
0x97a7: call 0x18f0
0x97ac: test eax,eax
0x97ae: mov rdi,rbx
0x97b1: js 0x9807
0x97b3: call 0x1970
0x97b8: test eax,eax
0x97ba: jne 0x97e8
0x97bc: mov rdi,rbx
0x97bf: call 0x9aa0
0x97c4: test eax,eax
0x97c6: je 0x9804
0x97c8: call 0x1700
0x97cd: mov r12d,dword ptr [rax]
0x97d0: mov rdi,rbx
0x97d3: mov rbp,rax
0x97d6: call 0x1770
0x97db: test r12d,r12d
0x97de: jne 0x9810
0x97e0: pop rbx
0x97e1: pop rbp
0x97e2: pop r12
0x97e4: ret 
0x97e8: mov rdi,rbx
0x97eb: call 0x18f0
0x97f0: xor esi,esi
0x97f2: mov edx,0x1
0x97f7: mov edi,eax
0x97f9: call 0x1830
0x97fe: cmp rax,-0x1
0x9802: jne 0x97bc
0x9804: mov rdi,rbx
0x9807: pop rbx
0x9808: pop rbp
0x9809: pop r12
0x980b: jmp 0x1770
0x9810: mov dword ptr [rbp],r12d
0x9814: mov eax,0xffffffff
0x9819: jmp 0x97e0
0x9a6d: call 0x17e0
0x9a8a: mov rax,qword ptr [rsp+0x8]
0x9a8f: jmp 0x9959
0x9a94: mov rax,qword ptr [rsp+0x8]
0x9a99: jmp 0x99b1
0x9aa0: test rdi,rdi
0x9aa3: push rbx
0x9aa4: mov rbx,rdi
0x9aa7: je 0x9aba
0x9aa9: call 0x1970
0x9aae: test eax,eax
0x9ab0: je 0x9aba
0x9ab2: test dword ptr [rbx],0x100
0x9ab8: jne 0x9ac8
0x9aba: mov rdi,rbx
0x9abd: pop rbx
0x9abe: jmp 0x1930
0x9ac8: mov rdi,rbx
0x9acb: mov edx,0x1
0x9ad0: xor esi,esi
0x9ad2: call 0x9ae0
0x9ad7: mov rdi,rbx
0x9ada: pop rbx
0x9adb: jmp 0x1930
0x9ae0: mov rax,qword ptr [rdi+0x8]
0x9ae4: cmp qword ptr [rdi+0x10],rax
0x9ae8: je 0x9af0
0x9aea: jmp 0x19f0
0x9af0: mov rax,qword ptr [rdi+0x20]
0x9af4: cmp qword ptr [rdi+0x28],rax
0x9af8: jne 0x9aea
0x9afa: cmp qword ptr [rdi+0x48],0x0
0x9aff: jne 0x9aea
0x9b01: push r12
0x9b03: push rbp
0x9b04: mov r12d,edx
0x9b07: push rbx
0x9b08: mov rbp,rsi
0x9b0b: mov rbx,rdi
0x9b0e: call 0x18f0
0x9b13: mov edx,r12d
0x9b16: mov rsi,rbp
0x9b19: mov edi,eax
0x9b1b: call 0x1830
0x9b20: cmp rax,-0x1
0x9b24: je 0x9b32
0x9b26: and dword ptr [rbx],-0x11
0x9b29: mov qword ptr [rbx+0x90],rax
0x9b30: xor eax,eax
0x9b32: pop rbx
0x9b33: pop rbp
0x9b34: pop r12
0x9b36: ret 
0x9b50: push r15
0x9b52: push r14
0x9b54: mov r15,rdx
0x9b57: push r13
0x9b59: push r12
0x9b5b: lea r12,[rip+0x203ece]
0x9b62: push rbp
0x9b63: lea rbp,[rip+0x203ece]
0x9b6a: push rbx
0x9b6b: mov r13d,edi
0x9b6e: mov r14,rsi
0x9b71: sub rbp,r12
0x9b74: sub rsp,0x8
0x9b78: sar rbp,0x3
0x9b7c: call 0x16c8
0x9b81: test rbp,rbp
0x9b84: je 0x9ba6
0x9b86: xor ebx,ebx
0x9b88: nop dword ptr [rax+rax]
0x9b90: mov rdx,r15
0x9b93: mov rsi,r14
0x9b96: mov edi,r13d
0x9b99: call qword ptr [r12+rbx*8]
0x9b9d: add rbx,0x1
0x9ba1: cmp rbp,rbx
0x9ba4: jne 0x9b90
0x9ba6: add rsp,0x8
0x9baa: pop rbx
0x9bab: pop rbp
0x9bac: pop r12
0x9bae: pop r13
0x9bb0: pop r14
0x9bb2: pop r15
0x9bb4: ret 
0x9bc0: rep ret 
