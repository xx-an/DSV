0x12b0: sub rsp,0x8
0x12b4: mov rax,qword ptr [rip+0x206d2d]
0x12bb: test rax,rax
0x12be: je 0x12c2
0x12c0: call rax
0x12c2: add rsp,0x8
0x12c6: ret 
0x12d6: jmp qword ptr [rip+0x206b9c]
0x12e0: jmp qword ptr [rip+0x206b9a]
0x1320: jmp qword ptr [rip+0x206b7a]
0x1330: jmp qword ptr [rip+0x206b72]
0x13a0: jmp qword ptr [rip+0x206b3a]
0x13b0: jmp qword ptr [rip+0x206b32]
0x13d0: jmp qword ptr [rip+0x206b22]
0x1420: jmp qword ptr [rip+0x206afa]
0x1440: jmp qword ptr [rip+0x206aea]
0x1450: jmp qword ptr [rip+0x206ae2]
0x1470: jmp qword ptr [rip+0x206ad2]
0x1490: jmp qword ptr [rip+0x206ac2]
0x1560: jmp qword ptr [rip+0x206a5a]
0x1570: jmp qword ptr [rip+0x206a52]
0x1580: jmp qword ptr [rip+0x206a4a]
0x1590: jmp qword ptr [rip+0x206a62]
0x172a: hlt 
0x172b: nop dword ptr [rax+rax]
0x1730: lea rdi,[rip+0x206949]
0x1737: push rbp
0x1738: lea rax,[rip+0x206941]
0x173f: cmp rax,rdi
0x1742: mov rbp,rsp
0x1745: je 0x1760
0x1747: mov rax,qword ptr [rip+0x20688a]
0x174e: test rax,rax
0x1751: je 0x1760
0x1753: pop rbp
0x1754: jmp rax
0x1760: pop rbp
0x1761: ret 
0x1770: lea rdi,[rip+0x206909]
0x1777: lea rsi,[rip+0x206902]
0x177e: push rbp
0x177f: sub rsi,rdi
0x1782: mov rbp,rsp
0x1785: sar rsi,0x3
0x1789: mov rax,rsi
0x178c: shr rax,0x3f
0x1790: add rsi,rax
0x1793: sar rsi, 1
0x1796: je 0x17b0
0x1798: mov rax,qword ptr [rip+0x206851]
0x179f: test rax,rax
0x17a2: je 0x17b0
0x17a4: pop rbp
0x17a5: jmp rax
0x17b0: pop rbp
0x17b1: ret 
0x17d1: push rbp
0x17d2: mov rbp,rsp
0x17d5: je 0x17e3
0x17d7: mov rdi,qword ptr [rip+0x20682a]
0x17de: call 0x1590
0x17e3: call 0x1730
0x17e8: mov byte ptr [rip+0x2068f9],0x1
0x17ef: pop rbp
0x17f0: ret 
0x1800: push rbp
0x1801: mov rbp,rsp
0x1804: pop rbp
0x1805: jmp 0x1770
0x19c7: mov rbx,rax
0x19ca: call 0x1300
0x19cf: mov esi,dword ptr [rax]
0x19d1: lea rdx,[rip+0x31de]
0x19d8: mov rcx,rbx
0x19db: xor edi,edi
0x19dd: xor eax,eax
0x19df: xor ebx,ebx
0x19e1: call 0x14f0
0x19e6: jmp 0x197c
0x1a22: mov rbx,rax
0x1a25: call 0x1300
0x1a2a: mov esi,dword ptr [rax]
0x1a2c: lea rdx,[rip+0x3183]
0x1a33: mov rcx,rbx
0x1a36: xor edi,edi
0x1a38: xor eax,eax
0x1a3a: call 0x14f0
0x1a3f: lea rdi,[rip+0x3c3c]
0x1a46: mov ecx,0x2
0x1a4b: mov rsi,r12
0x1a4e: rep cmpsb [rsi],es:[rdi]
0x1a50: seta al
0x1a53: sbb al,0x0
0x1a55: xor ebx,ebx
0x1a57: test al,al
0x1a59: je 0x197c
0x1a5f: mov rdi,rbp
0x1a62: call 0x4810
0x1a67: jmp 0x197c
0x1a9b: lea rsi,[rip+0x30e2]
0x1aa2: mov rbx,rax
0x1aa5: mov edx,0x5
0x1aaa: xor edi,edi
0x1aac: call 0x1380
0x1ab1: mov rcx,rbx
0x1ab4: mov rdx,rax
0x1ab7: xor esi,esi
0x1ab9: mov edi,0x1
0x1abe: xor eax,eax
0x1ac0: call 0x14f0
0x1af8: call 0x13b0
0x1afd: nop dword ptr [rax]
0x1e50: mov qword ptr [rip+0x2062a1],rdi
0x1e57: ret 
0x1e60: mov byte ptr [rip+0x206289],dil
0x1e67: ret 
0x1e70: push rbp
0x1e71: push rbx
0x1e72: sub rsp,0x8
0x1e76: mov rdi,qword ptr [rip+0x20620b]
0x1e7d: call 0x49c0
0x1e82: test eax,eax
0x1e84: je 0x1e9c
0x1e86: call 0x1300
0x1e8b: cmp byte ptr [rip+0x20625e],0x0
0x1e92: mov rbx,rax
0x1e95: je 0x1eb3
0x1e97: cmp dword ptr [rax],0x20
0x1e9a: jne 0x1eb3
0x1e9c: mov rdi,qword ptr [rip+0x20623d]
0x1ea3: call 0x49c0
0x1ea8: test eax,eax
0x1eaa: jne 0x1ef2
0x1eac: add rsp,0x8
0x1eb0: pop rbx
0x1eb1: pop rbp
0x1eb2: ret 
0x1eb3: lea rsi,[rip+0x2ced]
0x1eba: xor edi,edi
0x1ebc: mov edx,0x5
0x1ec1: call 0x1380
0x1ec6: mov rdi,qword ptr [rip+0x20622b]
0x1ecd: mov rbp,rax
0x1ed0: test rdi,rdi
0x1ed3: je 0x1efd
0x1ed5: call 0x3d40
0x1eda: mov esi,dword ptr [rbx]
0x1edc: lea rdx,[rip+0x3742]
0x1ee3: mov rcx,rax
0x1ee6: mov r8,rbp
0x1ee9: xor edi,edi
0x1eeb: xor eax,eax
0x1eed: call 0x14f0
0x1ef2: mov edi,dword ptr [rip+0x206120]
0x1ef8: call 0x1320
0x1efd: mov esi,dword ptr [rbx]
0x1eff: lea rdx,[rip+0x2cb0]
0x1f06: mov rcx,rax
0x1f09: xor edi,edi
0x1f0b: xor eax,eax
0x1f0d: call 0x14f0
0x1f12: jmp 0x1ef2
0x1f20: jmp 0x1410
0x1fb0: push r13
0x1fb2: push r12
0x1fb4: mov r13,r8
0x1fb7: push rbp
0x1fb8: push rbx
0x1fb9: mov rbp,rdx
0x1fbc: mov r12,rcx
0x1fbf: sub rsp,0xe8
0x1fc6: test al,al
0x1fc8: je 0x2004
0x1fca: movaps [rsp+0x60],xmm0
0x1fcf: movaps [rsp+0x70],xmm1
0x1fd4: movaps [rsp+0x80],xmm2
0x1fdc: movaps [rsp+0x90],xmm3
0x1fe4: movaps [rsp+0xa0],xmm4
0x1fec: movaps [rsp+0xb0],xmm5
0x1ff4: movaps [rsp+0xc0],xmm6
0x1ffc: movaps [rsp+0xd0],xmm7
0x2004: mov rax,qword ptr fs:0x28
0x200d: mov qword ptr [rsp+0x28],rax
0x2012: xor eax,eax
0x2014: cmp edi,0x2
0x2017: mov ebx,dword ptr [rip+0x2060a3]
0x201d: mov dword ptr [rip+0x206099],0x0
0x2027: je 0x2060
0x2029: mov rax,qword ptr [rsp+0x28]
0x202e: xor rax,qword ptr fs:0x28
0x2037: mov dword ptr [rip+0x206083],ebx
0x203d: mov dword ptr [rip+0x206051],0x0
0x2047: jne 0x20ea
0x204d: add rsp,0xe8
0x2054: pop rbx
0x2055: pop rbp
0x2056: pop r12
0x2058: pop r13
0x205a: ret 
0x2060: lea rcx,[rip+0x205b59]
0x2067: lea rdx,[rip+0x35be]
0x206e: xor r8d,r8d
0x2071: mov qword ptr [rsp+0x8],r9
0x2076: call 0x13c0
0x207b: cmp eax,-0x1
0x207e: je 0x2029
0x2080: cmp eax,0x68
0x2083: mov r9,qword ptr [rsp+0x8]
0x2088: je 0x20e0
0x208a: cmp eax,0x76
0x208d: jne 0x2029
0x208f: lea rax,[rsp+0x110]
0x2097: mov rdi,qword ptr [rip+0x205fea]
0x209e: lea r8,[rsp+0x10]
0x20a3: mov rcx,r13
0x20a6: mov rdx,r12
0x20a9: mov rsi,rbp
0x20ac: mov qword ptr [rsp+0x18],rax
0x20b1: lea rax,[rsp+0x30]
0x20b6: mov dword ptr [rsp+0x10],0x30
0x20be: mov dword ptr [rsp+0x14],0x30
0x20c6: mov qword ptr [rsp+0x20],rax
0x20cb: call 0x43a0
0x20d0: xor edi,edi
0x20d2: call 0x1530
0x20d7: nop word ptr [rax+rax]
0x20e0: xor edi,edi
0x20e2: call r9
0x20e5: jmp 0x2029
0x20ea: call 0x13b0
0x20ef: nop 
0x2114: movaps [rsp+0x50],xmm0
0x2119: movaps [rsp+0x60],xmm1
0x211e: movaps [rsp+0x70],xmm2
0x2123: movaps [rsp+0x80],xmm3
0x212b: movaps [rsp+0x90],xmm4
0x2133: movaps [rsp+0xa0],xmm5
0x213b: movaps [rsp+0xb0],xmm6
0x2143: movaps [rsp+0xc0],xmm7
0x21e7: nop word ptr [rax+rax]
0x2224: jmp 0x21f8
0x2226: call 0x13b0
0x222b: nop dword ptr [rax+rax]
0x22cf: nop 
0x22d0: push rbp
0x22d1: push rbx
0x22d2: mov rbp,rdi
0x22d5: mov ebx,esi
0x22d7: sub rsp,0x8
0x22db: call 0x4aa0
0x22e0: movzx edx,byte ptr [rax]
0x22e3: and edx,-0x21
0x22e6: cmp dl,0x55
0x22e9: je 0x2360
0x22eb: cmp dl,0x47
0x22ee: je 0x2310
0x22f0: lea rax,[rip+0x339c]
0x22f7: lea rdx,[rip+0x3397]
0x22fe: cmp ebx,0x9
0x2301: cmovne rax,rdx
0x2305: add rsp,0x8
0x2309: pop rbx
0x230a: pop rbp
0x230b: ret 
0x2310: movzx edx,byte ptr [rax+0x1]
0x2314: and edx,-0x21
0x2317: cmp dl,0x42
0x231a: jne 0x22f0
0x231c: cmp byte ptr [rax+0x2],0x31
0x2320: jne 0x22f0
0x2322: cmp byte ptr [rax+0x3],0x38
0x2326: jne 0x22f0
0x2328: cmp byte ptr [rax+0x4],0x30
0x232c: jne 0x22f0
0x232e: cmp byte ptr [rax+0x5],0x33
0x2332: jne 0x22f0
0x2334: cmp byte ptr [rax+0x6],0x30
0x2338: jne 0x22f0
0x233a: cmp byte ptr [rax+0x7],0x0
0x233e: jne 0x22f0
0x2340: cmp byte ptr [rbp],0x60
0x2344: lea rax,[rip+0x3341]
0x234b: lea rdx,[rip+0x333e]
0x2352: cmovne rax,rdx
0x2356: add rsp,0x8
0x235a: pop rbx
0x235b: pop rbp
0x235c: ret 
0x2360: movzx edx,byte ptr [rax+0x1]
0x2364: and edx,-0x21
0x2367: cmp dl,0x54
0x236a: jne 0x22f0
0x236c: movzx edx,byte ptr [rax+0x2]
0x2370: and edx,-0x21
0x2373: cmp dl,0x46
0x2376: jne 0x22f0
0x237c: cmp byte ptr [rax+0x3],0x2d
0x2380: jne 0x22f0
0x2386: cmp byte ptr [rax+0x4],0x38
0x238a: jne 0x22f0
0x2390: cmp byte ptr [rax+0x5],0x0
0x2394: jne 0x22f0
0x239a: cmp byte ptr [rbp],0x60
0x239e: lea rax,[rip+0x32df]
0x23a5: lea rdx,[rip+0x32dc]
0x23ac: cmovne rax,rdx
0x23b0: add rsp,0x8
0x23b4: pop rbx
0x23b5: pop rbp
0x23b6: ret 
0x2493: xor r11d,r11d
0x2496: mov rax,rbp
0x2499: mov r8d,r12d
0x249c: mov rbp,r11
0x249f: mov r11,rax
0x24a2: nop word ptr [rax+rax]
0x24a8: cmp r11,rbp
0x24ab: setne r12b
0x24af: cmp r11,-0x1
0x24b3: jne 0x24c2
0x24b5: mov rax,qword ptr [rsp+0x10]
0x24ba: cmp byte ptr [rax+rbp],0x0
0x24be: setne r12b
0x24c2: test r12b,r12b
0x24c5: je 0x2b20
0x24cb: cmp dword ptr [rsp+0x8],0x2
0x24d0: mov rdi,qword ptr [rsp+0x10]
0x24d5: lea r9,[rdi+rbp]
0x24d9: setne al
0x24dc: and al,byte ptr [rsp+0xd]
0x24e0: mov r10d,eax
0x24e3: je 0x2590
0x24e9: mov rax,qword ptr [rsp+0x18]
0x24ee: test rax,rax
0x24f1: je 0x2920
0x24f7: cmp r11,-0x1
0x24fb: lea rbx,[rbp+rax]
0x2500: jne 0x2530
0x2502: cmp rax,0x1
0x2506: jbe 0x2530
0x2508: mov byte ptr [rsp+0x38],r8b
0x250d: mov byte ptr [rsp+0x30],r10b
0x2512: mov qword ptr [rsp+0x28],r9
0x2517: call 0x13a0
0x251c: movzx r8d,byte ptr [rsp+0x38]
0x2522: movzx r10d,byte ptr [rsp+0x30]
0x2528: mov r11,rax
0x252b: mov r9,qword ptr [rsp+0x28]
0x2530: cmp rbx,r11
0x2533: mov byte ptr [rsp+0x28],r10b
0x2538: ja 0x2af0
0x253e: mov rdx,qword ptr [rsp+0x18]
0x2543: mov rsi,qword ptr [rsp+0x48]
0x2548: mov rdi,r9
0x254b: mov qword ptr [rsp+0x40],r11
0x2550: mov byte ptr [rsp+0x38],r8b
0x2555: mov qword ptr [rsp+0x30],r9
0x255a: call 0x1420
0x255f: test eax,eax
0x2561: mov r9,qword ptr [rsp+0x30]
0x2566: movzx r8d,byte ptr [rsp+0x38]
0x256c: mov r11,qword ptr [rsp+0x40]
0x2571: jne 0x2af0
0x2577: cmp byte ptr [rsp+0xf],0x0
0x257c: movzx r10d,byte ptr [rsp+0x28]
0x2582: jne 0x3505
0x2588: nop dword ptr [rax+rax]
0x2590: movzx ebx,byte ptr [r9]
0x2594: cmp bl,0x7e
0x2597: ja 0x28b8
0x259d: lea rcx,[rip+0x3188]
0x25a4: movzx edx,bl
0x25a7: movsxd rax,dword ptr [rcx+rdx*4]
0x25ab: add rax,rcx
0x25ae: jmp rax
0x25e8: cmp byte ptr [rsp+0xd],0x1
0x25ed: jne 0x2702
0x25f3: test dl,dl
0x25f5: jne 0x2702
0x25fb: mov rsi,qword ptr [rsp+0x20]
0x2600: test rsi,rsi
0x2603: je 0x2619
0x2605: mov edx,ebx
0x2607: shr dl,0x5
0x260a: movzx edx,dl
0x260d: mov edx,dword ptr [rsi+rdx*4]
0x2610: btl edx,ebx
0x2613: jb 0x2763
0x2619: test r10b,r10b
0x261c: jne 0x2763
0x2622: xor eax,0x1
0x2625: add rbp,0x1
0x2629: and eax,r8d
0x262c: test al,al
0x262e: je 0x2650
0x2630: cmp r13,r15
0x2633: jbe 0x263a
0x2635: mov byte ptr [r14+r15],0x27
0x263a: lea rax,[r15+0x1]
0x263e: cmp r13,rax
0x2641: jbe 0x2649
0x2643: mov byte ptr [r14+r15+0x1],0x27
0x2649: add r15,0x2
0x264d: xor r8d,r8d
0x2650: cmp r15,r13
0x2653: jae 0x2659
0x2655: mov byte ptr [r14+r15],bl
0x2659: movzx edi,byte ptr [rsp+0xe]
0x265e: add r15,0x1
0x2662: mov eax,0x0
0x2667: test r12b,r12b
0x266a: cmove edi,eax
0x266d: mov byte ptr [rsp+0xe],dil
0x2672: jmp 0x24a8
0x2702: cmp byte ptr [rsp+0xf],0x0
0x2707: jne 0x25fb
0x270d: jmp 0x2619
0x2763: cmp dword ptr [rsp+0x8],0x2
0x2768: sete dl
0x276b: cmp byte ptr [rsp+0xf],0x0
0x2770: mov eax,edx
0x2772: jne 0x2fc8
0x2778: mov eax,r8d
0x277b: xor eax,0x1
0x277e: and al,dl
0x2780: je 0x27b1
0x2782: cmp r13,r15
0x2785: jbe 0x278c
0x2787: mov byte ptr [r14+r15],0x27
0x278c: lea rdx,[r15+0x1]
0x2790: cmp r13,rdx
0x2793: jbe 0x279b
0x2795: mov byte ptr [r14+r15+0x1],0x24
0x279b: lea rdx,[r15+0x2]
0x279f: cmp r13,rdx
0x27a2: jbe 0x27aa
0x27a4: mov byte ptr [r14+r15+0x2],0x27
0x27aa: add r15,0x3
0x27ae: mov r8d,eax
0x27b1: cmp r13,r15
0x27b4: jbe 0x27bb
0x27b6: mov byte ptr [r14+r15],0x5c
0x27bb: add r15,0x1
0x27bf: add rbp,0x1
0x27c3: jmp 0x2650
0x28b0: xor r10d,r10d
0x28b3: nop dword ptr [rax+rax]
0x28b8: cmp qword ptr [rsp+0x58],0x1
0x28be: jne 0x2c68
0x28c4: mov qword ptr [rsp+0x38],r11
0x28c9: mov byte ptr [rsp+0x30],r8b
0x28ce: mov byte ptr [rsp+0x28],r10b
0x28d3: call 0x1580
0x28d8: mov rcx,qword ptr [rax]
0x28db: movzx edx,bl
0x28de: movzx r10d,byte ptr [rsp+0x28]
0x28e4: movzx r8d,byte ptr [rsp+0x30]
0x28ea: mov r11,qword ptr [rsp+0x38]
0x28ef: mov edi,0x1
0x28f4: movzx eax,word ptr [rcx+rdx*2]
0x28f8: and ax,0x4000
0x28fc: setne r12b
0x2900: sete al
0x2903: and al,byte ptr [rsp+0xd]
0x2907: test al,al
0x2909: jne 0x32a1
0x290f: cmp dword ptr [rsp+0x8],0x2
0x2914: sete dl
0x2917: jmp 0x25e8
0x2920: movzx ebx,byte ptr [r9]
0x2924: cmp bl,0x7e
0x2927: ja 0x28b0
0x2929: lea rcx,[rip+0x2ff8]
0x2930: movzx edx,bl
0x2933: movsxd rax,dword ptr [rcx+rdx*4]
0x2937: add rax,rcx
0x293a: jmp rax
0x2af0: xor r10d,r10d
0x2af3: jmp 0x2590
0x2b20: cmp dword ptr [rsp+0x8],0x2
0x2b25: movzx ebx,byte ptr [rsp+0xf]
0x2b2a: mov r12d,r8d
0x2b2d: mov rbp,r11
0x2b30: sete dl
0x2b33: mov eax,ebx
0x2b35: test r15,r15
0x2b38: sete cl
0x2b3b: and eax,edx
0x2b3d: and al,cl
0x2b3f: jne 0x35a6
0x2b45: mov eax,ebx
0x2b47: xor eax,0x1
0x2b4a: and dl,al
0x2b4c: je 0x34bc
0x2b52: cmp byte ptr [rsp+0x7c],0x0
0x2b57: je 0x34ba
0x2b5d: cmp byte ptr [rsp+0xe],0x0
0x2b62: jne 0x355d
0x2b68: test r13,r13
0x2b6b: sete al
0x2b6e: cmp qword ptr [rsp+0x50],0x0
0x2b74: setne dl
0x2b77: and al,dl
0x2b79: je 0x359c
0x2b7f: mov r13,qword ptr [rsp+0x50]
0x2b84: lea rbx,[rip+0x2b0a]
0x2b8b: mov byte ptr [r14],0x27
0x2b8f: mov dword ptr [rsp+0x8],0x2
0x2b97: mov r15d,0x1
0x2b9d: mov qword ptr [rsp+0x18],0x1
0x2ba6: mov byte ptr [rsp+0xf],0x0
0x2bab: mov qword ptr [rsp+0x48],rbx
0x2bb0: mov byte ptr [rsp+0x7c],al
0x2bb4: jmp 0x2493
0x2c68: lea rax,[rsp+0xa0]
0x2c70: cmp r11,-0x1
0x2c74: mov qword ptr [rsp+0xa0],0x0
0x2c80: mov qword ptr [rsp+0x28],rax
0x2c85: jne 0x2cb4
0x2c87: mov rdi,qword ptr [rsp+0x10]
0x2c8c: mov byte ptr [rsp+0x40],r8b
0x2c91: mov byte ptr [rsp+0x38],r10b
0x2c96: mov qword ptr [rsp+0x30],r9
0x2c9b: call 0x13a0
0x2ca0: movzx r8d,byte ptr [rsp+0x40]
0x2ca6: movzx r10d,byte ptr [rsp+0x38]
0x2cac: mov r11,rax
0x2caf: mov r9,qword ptr [rsp+0x30]
0x2cb4: lea rax,[rsp+0x9c]
0x2cbc: xor ecx,ecx
0x2cbe: mov byte ptr [rsp+0x7e],bl
0x2cc2: mov byte ptr [rsp+0x7d],r8b
0x2cc7: mov rbx,rcx
0x2cca: mov qword ptr [rsp+0x88],r9
0x2cd2: mov qword ptr [rsp+0x38],rax
0x2cd7: mov byte ptr [rsp+0x7f],r10b
0x2cdc: mov qword ptr [rsp+0x80],r15
0x2ce4: mov qword ptr [rsp+0x40],r14
0x2ce9: mov qword ptr [rsp+0x70],r13
0x2cee: mov qword ptr [rsp+0x30],r11
0x2cf3: mov rax,qword ptr [rsp+0x10]
0x2cf8: lea r14,[rbp+rbx]
0x2cfd: mov rdx,qword ptr [rsp+0x30]
0x2d02: mov rcx,qword ptr [rsp+0x28]
0x2d07: mov rdi,qword ptr [rsp+0x38]
0x2d0c: lea r13,[rax+r14]
0x2d10: sub rdx,r14
0x2d13: mov rsi,r13
0x2d16: call 0x4930
0x2d1b: test rax,rax
0x2d1e: mov r15,rax
0x2d21: je 0x2d71
0x2d23: cmp rax,-0x1
0x2d27: je 0x3345
0x2d2d: cmp rax,-0x2
0x2d31: je 0x32d1
0x2d37: cmp dword ptr [rsp+0x8],0x2
0x2d3c: sete al
0x2d3f: and al,byte ptr [rsp+0xf]
0x2d43: jne 0x2ee0
0x2d49: mov edi,dword ptr [rsp+0x9c]
0x2d50: call 0x1570
0x2d55: mov rdi,qword ptr [rsp+0x28]
0x2d5a: test eax,eax
0x2d5c: mov eax,0x0
0x2d61: cmove r12d,eax
0x2d65: add rbx,r15
0x2d68: call 0x1560
0x2d6d: test eax,eax
0x2d6f: je 0x2cf3
0x2d71: mov edx,r12d
0x2d74: mov rdi,rbx
0x2d77: movzx r8d,byte ptr [rsp+0x7d]
0x2d7d: xor edx,0x1
0x2d80: movzx ebx,byte ptr [rsp+0x7e]
0x2d85: movzx r10d,byte ptr [rsp+0x7f]
0x2d8b: and dl,byte ptr [rsp+0xd]
0x2d8f: mov r15,qword ptr [rsp+0x80]
0x2d97: mov r14,qword ptr [rsp+0x40]
0x2d9c: mov r13,qword ptr [rsp+0x70]
0x2da1: mov r11,qword ptr [rsp+0x30]
0x2da6: cmp rdi,0x1
0x2daa: jbe 0x33ab
0x2db0: mov rcx,rdi
0x2db3: xor esi,esi
0x2db5: movzx r9d,byte ptr [rsp+0xf]
0x2dbb: add rcx,rbp
0x2dbe: mov rdi,qword ptr [rsp+0x10]
0x2dc3: jmp 0x2e7e
0x2dd0: cmp dword ptr [rsp+0x8],0x2
0x2dd5: sete al
0x2dd8: test r9b,r9b
0x2ddb: jne 0x3290
0x2de1: mov esi,r8d
0x2de4: xor esi,0x1
0x2de7: and al,sil
0x2dea: je 0x2e1b
0x2dec: cmp r13,r15
0x2def: jbe 0x2df6
0x2df1: mov byte ptr [r14+r15],0x27
0x2df6: lea rsi,[r15+0x1]
0x2dfa: cmp r13,rsi
0x2dfd: jbe 0x2e05
0x2dff: mov byte ptr [r14+r15+0x1],0x24
0x2e05: lea rsi,[r15+0x2]
0x2e09: cmp r13,rsi
0x2e0c: jbe 0x2e14
0x2e0e: mov byte ptr [r14+r15+0x2],0x27
0x2e14: add r15,0x3
0x2e18: mov r8d,eax
0x2e1b: cmp r13,r15
0x2e1e: jbe 0x2e25
0x2e20: mov byte ptr [r14+r15],0x5c
0x2e25: lea rax,[r15+0x1]
0x2e29: cmp r13,rax
0x2e2c: jbe 0x2e3b
0x2e2e: mov eax,ebx
0x2e30: shr al,0x6
0x2e33: add eax,0x30
0x2e36: mov byte ptr [r14+r15+0x1],al
0x2e3b: lea rax,[r15+0x2]
0x2e3f: cmp r13,rax
0x2e42: jbe 0x2e54
0x2e44: mov eax,ebx
0x2e46: shr al,0x3
0x2e49: and eax,0x7
0x2e4c: add eax,0x30
0x2e4f: mov byte ptr [r14+r15+0x2],al
0x2e54: and ebx,0x7
0x2e57: add rbp,0x1
0x2e5b: add r15,0x3
0x2e5f: add ebx,0x30
0x2e62: cmp rbp,rcx
0x2e65: jae 0x2650
0x2e6b: mov esi,edx
0x2e6d: cmp r13,r15
0x2e70: jbe 0x2e76
0x2e72: mov byte ptr [r14+r15],bl
0x2e76: movzx ebx,byte ptr [rdi+rbp]
0x2e7a: add r15,0x1
0x2e7e: test dl,dl
0x2e80: jne 0x2dd0
0x2e86: mov eax,esi
0x2e88: xor eax,0x1
0x2e8b: and eax,r8d
0x2e8e: test r10b,r10b
0x2e91: je 0x2ea1
0x2e93: cmp r13,r15
0x2e96: jbe 0x2e9d
0x2e98: mov byte ptr [r14+r15],0x5c
0x2e9d: add r15,0x1
0x2ea1: add rbp,0x1
0x2ea5: cmp rbp,rcx
0x2ea8: jae 0x262c
0x2eae: test al,al
0x2eb0: je 0x32ae
0x2eb6: cmp r13,r15
0x2eb9: jbe 0x2ec0
0x2ebb: mov byte ptr [r14+r15],0x27
0x2ec0: lea rax,[r15+0x1]
0x2ec4: cmp r13,rax
0x2ec7: jbe 0x2ecf
0x2ec9: mov byte ptr [r14+r15+0x1],0x27
0x2ecf: add r15,0x2
0x2ed3: xor r10d,r10d
0x2ed6: xor r8d,r8d
0x2ed9: jmp 0x2e6d
0x2ee0: cmp r15,0x1
0x2ee4: je 0x2d49
0x2eea: mov rdi,qword ptr [rsp+0x10]
0x2eef: lea rcx,[rdi+r15]
0x2ef3: lea rdx,[rdi+r14+0x1]
0x2ef8: lea r8,[rcx+r14]
0x2efc: jmp 0x2f0d
0x2f00: add rdx,0x1
0x2f04: cmp r8,rdx
0x2f07: je 0x2d49
0x2f0d: movzx ecx,byte ptr [rdx]
0x2f10: sub ecx,0x5b
0x2f13: cmp cl,0x21
0x2f16: ja 0x2f00
0x2f18: mov esi,0x1
0x2f1d: shl rsi,cl
0x2f20: mov rcx,rsi
0x2f23: movabsq rsi,0x20000002b
0x2f2d: test rcx,rsi
0x2f30: je 0x2f00
0x2f32: mov r14,qword ptr [rsp+0x40]
0x2f37: mov r13,qword ptr [rsp+0x70]
0x2f3c: mov rbp,qword ptr [rsp+0x30]
0x2f41: mov dword ptr [rsp+0x8],0x2
0x2f49: cmp byte ptr [rsp+0xd],0x0
0x2f4e: je 0x2f60
0x2f50: test al,al
0x2f52: mov eax,0x4
0x2f57: cmove eax,dword ptr [rsp+0x8]
0x2f5c: mov dword ptr [rsp+0x8],eax
0x2f60: sub rsp,0x8
0x2f64: mov rcx,rbp
0x2f67: mov rsi,r13
0x2f6a: push qword ptr [rsp+0x68]
0x2f6e: push qword ptr [rsp+0x78]
0x2f72: mov rdi,r14
0x2f75: push 0x0
0x2f77: mov r9d,dword ptr [rsp+0x98]
0x2f7f: mov r8d,dword ptr [rsp+0x28]
0x2f84: mov rdx,qword ptr [rsp+0x30]
0x2f89: and r9d,-0x3
0x2f8d: call 0x23c0
0x2f92: add rsp,0x20
0x2f96: mov r15,rax
0x2f99: mov rbx,qword ptr [rsp+0xa8]
0x2fa1: xor rbx,qword ptr fs:0x28
0x2faa: mov rax,r15
0x2fad: jne 0x35b3
0x2fb3: add rsp,0xb8
0x2fba: pop rbx
0x2fbb: pop rbp
0x2fbc: pop r12
0x2fbe: pop r13
0x2fc0: pop r14
0x2fc2: pop r15
0x2fc4: ret 
0x2fc8: mov rbp,r11
0x2fcb: jmp 0x2f49
0x3031: test r13,r13
0x3034: jne 0x35ca
0x303a: lea rax,[rip+0x2654]
0x3041: mov qword ptr [rsp+0x50],0x0
0x304a: mov byte ptr [rsp+0xe],0x1
0x304f: mov byte ptr [rsp+0x7c],0x0
0x3054: xor r12d,r12d
0x3057: mov byte ptr [rsp+0xf],0x0
0x305c: mov qword ptr [rsp+0x18],0x1
0x3065: mov qword ptr [rsp+0x48],rax
0x306a: mov r15d,0x1
0x3070: mov dword ptr [rsp+0x8],0x2
0x3078: jmp 0x2493
0x3290: movzx ebx,byte ptr [rsp+0xf]
0x3295: mov rbp,r11
0x3298: mov byte ptr [rsp+0xd],bl
0x329c: jmp 0x2f49
0x32a1: movzx edx,byte ptr [rsp+0xd]
0x32a6: xor r12d,r12d
0x32a9: jmp 0x2db0
0x32ae: xor r10d,r10d
0x32b1: jmp 0x2e6d
0x32d1: mov r11,qword ptr [rsp+0x30]
0x32d6: mov rsi,r14
0x32d9: mov rcx,r13
0x32dc: mov rax,rbx
0x32df: mov rdi,rbx
0x32e2: movzx r8d,byte ptr [rsp+0x7d]
0x32e8: movzx ebx,byte ptr [rsp+0x7e]
0x32ed: mov r9,qword ptr [rsp+0x88]
0x32f5: cmp rsi,r11
0x32f8: movzx r10d,byte ptr [rsp+0x7f]
0x32fe: mov r15,qword ptr [rsp+0x80]
0x3306: mov r14,qword ptr [rsp+0x40]
0x330b: mov r13,qword ptr [rsp+0x70]
0x3310: jae 0x3338
0x3312: cmp byte ptr [rcx],0x0
0x3315: jne 0x3327
0x3317: jmp 0x3338
0x3320: cmp byte ptr [r9+rax],0x0
0x3325: je 0x3335
0x3327: add rax,0x1
0x332b: lea rdx,[rbp+rax]
0x3330: cmp r11,rdx
0x3333: ja 0x3320
0x3335: mov rdi,rax
0x3338: movzx edx,byte ptr [rsp+0xd]
0x333d: xor r12d,r12d
0x3340: jmp 0x2da6
0x3345: mov rdi,rbx
0x3348: movzx r8d,byte ptr [rsp+0x7d]
0x334e: movzx ebx,byte ptr [rsp+0x7e]
0x3353: movzx r10d,byte ptr [rsp+0x7f]
0x3359: mov r15,qword ptr [rsp+0x80]
0x3361: xor r12d,r12d
0x3364: mov r14,qword ptr [rsp+0x40]
0x3369: mov r13,qword ptr [rsp+0x70]
0x336e: mov r11,qword ptr [rsp+0x30]
0x3373: movzx edx,byte ptr [rsp+0xd]
0x3378: jmp 0x2da6
0x33ab: mov eax,edx
0x33ad: jmp 0x2907
0x34ba: mov eax,edx
0x34bc: mov rbx,qword ptr [rsp+0x48]
0x34c1: test rbx,rbx
0x34c4: je 0x34f2
0x34c6: test al,al
0x34c8: je 0x34f2
0x34ca: movzx ecx,byte ptr [rbx]
0x34cd: mov rax,rbx
0x34d0: test cl,cl
0x34d2: je 0x34f2
0x34d4: mov rdx,r15
0x34d7: sub rax,r15
0x34da: cmp r13,rdx
0x34dd: jbe 0x34e3
0x34df: mov byte ptr [r14+rdx],cl
0x34e3: add rdx,0x1
0x34e7: movzx ecx,byte ptr [rax+rdx]
0x34eb: test cl,cl
0x34ed: jne 0x34da
0x34ef: mov r15,rdx
0x34f2: cmp r13,r15
0x34f5: jbe 0x2f99
0x34fb: mov byte ptr [r14+r15],0x0
0x3500: jmp 0x2f99
0x3505: cmp dword ptr [rsp+0x8],0x2
0x350a: movzx ebx,byte ptr [rsp+0xf]
0x350f: mov rbp,r11
0x3512: sete al
0x3515: mov byte ptr [rsp+0xd],bl
0x3519: jmp 0x2f49
0x355d: sub rsp,0x8
0x3561: mov r8d,0x5
0x3567: mov rcx,r11
0x356a: push qword ptr [rsp+0x68]
0x356e: push qword ptr [rsp+0x78]
0x3572: mov rdi,r14
0x3575: push qword ptr [rsp+0x38]
0x3579: mov r9d,dword ptr [rsp+0x98]
0x3581: mov rdx,qword ptr [rsp+0x30]
0x3586: mov rsi,qword ptr [rsp+0x70]
0x358b: call 0x23c0
0x3590: add rsp,0x20
0x3594: mov r15,rax
0x3597: jmp 0x2f99
0x359c: movzx eax,byte ptr [rsp+0x7c]
0x35a1: jmp 0x34bc
0x35a6: mov dword ptr [rsp+0x8],0x2
0x35ae: jmp 0x2f49
0x35b3: call 0x13b0
0x35b8: mov byte ptr [rsp+0xd],0x0
0x35bd: jmp 0x3031
0x35ca: mov byte ptr [rsp+0xe],0x1
0x35cf: xor eax,eax
0x35d1: xor r12d,r12d
0x35d4: mov qword ptr [rsp+0x50],0x0
0x35dd: jmp 0x2b84
0x35ef: call 0x12f0
0x35f4: nop 
0x35f6: nop word ptr cs:[rax+rax]
0x36ec: add rsp,0x20
0x36f0: mov r11,qword ptr [rsp+0x10]
0x36f5: cmp r11,rax
0x36f8: ja 0x3761
0x36fa: lea rsi,[rax+0x1]
0x36fe: lea rax,[rip+0x204a1b]
0x3705: cmp r12,rax
0x3708: mov qword ptr [rbx],rsi
0x370b: je 0x371f
0x370d: mov rdi,r12
0x3710: mov qword ptr [rsp+0x10],rsi
0x3715: call 0x12e0
0x371a: mov rsi,qword ptr [rsp+0x10]
0x371f: mov rdi,rsi
0x3722: mov qword ptr [rsp+0x10],rsi
0x3727: call 0x4580
0x372c: sub rsp,0x8
0x3730: mov qword ptr [rbx+0x8],rax
0x3734: mov r8d,dword ptr [rbp]
0x3738: push qword ptr [rbp+0x30]
0x373b: push qword ptr [rbp+0x28]
0x373e: mov rcx,r14
0x3741: push r15
0x3743: mov r9d,dword ptr [rsp+0x3c]
0x3748: mov rdi,rax
0x374b: mov rdx,qword ptr [rsp+0x28]
0x3750: mov rsi,qword ptr [rsp+0x30]
0x3755: mov r12,rax
0x3758: call 0x23c0
0x375d: add rsp,0x20
0x3761: mov eax,dword ptr [rsp+0x18]
0x3765: mov dword ptr [r13],eax
0x3769: add rsp,0x28
0x376d: mov rax,r12
0x3770: pop rbx
0x3771: pop rbp
0x3772: pop r12
0x3774: pop r13
0x3776: pop r14
0x3778: pop r15
0x377a: ret 
0x37a1: call 0x12f0
0x37a6: call 0x47d0
0x37ab: nop dword ptr [rax+rax]
0x37b0: push r12
0x37b2: push rbp
0x37b3: push rbx
0x37b4: mov rbx,rdi
0x37b7: call 0x1300
0x37bc: mov r12d,dword ptr [rax]
0x37bf: mov rbp,rax
0x37c2: lea rax,[rip+0x204a57]
0x37c9: test rbx,rbx
0x37cc: mov esi,0x38
0x37d1: cmove rbx,rax
0x37d5: mov rdi,rbx
0x37d8: call 0x4780
0x37dd: mov dword ptr [rbp],r12d
0x37e1: pop rbx
0x37e2: pop rbp
0x37e3: pop r12
0x37e5: ret 
0x37f0: lea rax,[rip+0x204a29]
0x37f7: test rdi,rdi
0x37fa: cmove rdi,rax
0x37fe: mov eax,dword ptr [rdi]
0x3800: ret 
0x3810: lea rax,[rip+0x204a09]
0x3817: test rdi,rdi
0x381a: cmove rdi,rax
0x381e: mov dword ptr [rdi],esi
0x3820: ret 
0x3830: lea rax,[rip+0x2049e9]
0x3837: test rdi,rdi
0x383a: mov ecx,esi
0x383c: cmove rdi,rax
0x3840: mov eax,esi
0x3842: and ecx,0x1f
0x3845: shr al,0x5
0x3848: movzx eax,al
0x384b: lea rdi,[rdi+rax*4+0x8]
0x3850: mov esi,dword ptr [rdi]
0x3852: mov eax,esi
0x3854: shr eax,cl
0x3856: xor edx,eax
0x3858: and eax,0x1
0x385b: and edx,0x1
0x385e: shl edx,cl
0x3860: xor edx,esi
0x3862: mov dword ptr [rdi],edx
0x3864: ret 
0x3870: lea rax,[rip+0x2049a9]
0x3877: test rdi,rdi
0x387a: cmove rdi,rax
0x387e: mov eax,dword ptr [rdi+0x4]
0x3881: mov dword ptr [rdi+0x4],esi
0x3884: ret 
0x3890: lea rax,[rip+0x204989]
0x3897: test rdi,rdi
0x389a: cmove rdi,rax
0x389e: test rsi,rsi
0x38a1: mov dword ptr [rdi],0xa
0x38a7: je 0x38b7
0x38a9: test rdx,rdx
0x38ac: je 0x38b7
0x38ae: mov qword ptr [rdi+0x28],rsi
0x38b2: mov qword ptr [rdi+0x30],rdx
0x38b6: ret 
0x38b7: sub rsp,0x8
0x38bb: call 0x12f0
0x38c0: push r15
0x38c2: push r14
0x38c4: lea rax,[rip+0x204955]
0x38cb: push r13
0x38cd: push r12
0x38cf: mov r13,rdi
0x38d2: push rbp
0x38d3: push rbx
0x38d4: mov rbx,r8
0x38d7: mov r14,rsi
0x38da: mov r15,rdx
0x38dd: sub rsp,0x18
0x38e1: test r8,r8
0x38e4: cmove rbx,rax
0x38e8: mov qword ptr [rsp+0x8],rcx
0x38ed: call 0x1300
0x38f2: mov r12d,dword ptr [rax]
0x38f5: mov rbp,rax
0x38f8: lea rax,[rbx+0x8]
0x38fc: sub rsp,0x8
0x3900: mov r9d,dword ptr [rbx+0x4]
0x3904: push qword ptr [rbx+0x30]
0x3907: mov r8d,dword ptr [rbx]
0x390a: push qword ptr [rbx+0x28]
0x390d: mov rdx,r15
0x3910: push rax
0x3911: mov rcx,qword ptr [rsp+0x28]
0x3916: mov rsi,r14
0x3919: mov rdi,r13
0x391c: call 0x23c0
0x3921: mov dword ptr [rbp],r12d
0x3925: add rsp,0x38
0x3929: pop rbx
0x392a: pop rbp
0x392b: pop r12
0x392d: pop r13
0x392f: pop r14
0x3931: pop r15
0x3933: ret 
0x3940: push r15
0x3942: push r14
0x3944: lea rax,[rip+0x2048d5]
0x394b: push r13
0x394d: push r12
0x394f: mov r12,rdx
0x3952: push rbp
0x3953: push rbx
0x3954: mov rbx,rcx
0x3957: mov r14,rdi
0x395a: mov r15,rsi
0x395d: sub rsp,0x38
0x3961: test rcx,rcx
0x3964: cmove rbx,rax
0x3968: xor ebp,ebp
0x396a: call 0x1300
0x396f: test r12,r12
0x3972: mov r13,rax
0x3975: mov eax,dword ptr [rax]
0x3977: sete bpl
0x397b: or ebp,dword ptr [rbx+0x4]
0x397e: lea r10,[rbx+0x8]
0x3982: sub rsp,0x8
0x3986: mov r8d,dword ptr [rbx]
0x3989: mov rcx,r15
0x398c: mov dword ptr [rsp+0x14],eax
0x3990: push qword ptr [rbx+0x30]
0x3993: mov rdx,r14
0x3996: push qword ptr [rbx+0x28]
0x3999: push r10
0x399b: xor esi,esi
0x399d: mov r9d,ebp
0x39a0: xor edi,edi
0x39a2: mov qword ptr [rsp+0x40],r10
0x39a7: call 0x23c0
0x39ac: lea rsi,[rax+0x1]
0x39b0: mov qword ptr [rsp+0x48],rax
0x39b5: add rsp,0x20
0x39b9: mov rdi,rsi
0x39bc: mov qword ptr [rsp+0x18],rsi
0x39c1: call 0x4580
0x39c6: mov qword ptr [rsp+0x10],rax
0x39cb: sub rsp,0x8
0x39cf: push qword ptr [rbx+0x30]
0x39d2: push qword ptr [rbx+0x28]
0x39d5: mov r10,qword ptr [rsp+0x38]
0x39da: mov r9d,ebp
0x39dd: mov r8d,dword ptr [rbx]
0x39e0: mov rcx,r15
0x39e3: mov rdx,r14
0x39e6: mov rdi,rax
0x39e9: push r10
0x39eb: mov rsi,qword ptr [rsp+0x38]
0x39f0: call 0x23c0
0x39f5: mov eax,dword ptr [rsp+0x2c]
0x39f9: add rsp,0x20
0x39fd: test r12,r12
0x3a00: mov dword ptr [r13],eax
0x3a04: je 0x3a0f
0x3a06: mov r11,qword ptr [rsp+0x28]
0x3a0b: mov qword ptr [r12],r11
0x3a0f: mov rax,qword ptr [rsp+0x10]
0x3a14: add rsp,0x38
0x3a18: pop rbx
0x3a19: pop rbp
0x3a1a: pop r12
0x3a1c: pop r13
0x3a1e: pop r14
0x3a20: pop r15
0x3a22: ret 
0x3a30: mov rcx,rdx
0x3a33: xor edx,edx
0x3a35: jmp 0x3940
0x3a40: mov eax,dword ptr [rip+0x204612]
0x3a46: push r12
0x3a48: mov r12,qword ptr [rip+0x204611]
0x3a4f: push rbp
0x3a50: push rbx
0x3a51: cmp eax,0x1
0x3a54: jle 0x3a81
0x3a56: sub eax,0x2
0x3a59: lea rbx,[r12+0x18]
0x3a5e: shl rax,0x4
0x3a62: lea rbp,[r12+rax+0x28]
0x3a67: nop word ptr [rax+rax]
0x3a70: mov rdi,qword ptr [rbx]
0x3a73: add rbx,0x10
0x3a77: call 0x12e0
0x3a7c: cmp rbx,rbp
0x3a7f: jne 0x3a70
0x3a81: mov rdi,qword ptr [r12+0x8]
0x3a86: lea rbx,[rip+0x204693]
0x3a8d: cmp rdi,rbx
0x3a90: je 0x3aa9
0x3a92: call 0x12e0
0x3a97: mov qword ptr [rip+0x2045ce],0x100
0x3aa2: mov qword ptr [rip+0x2045cf],rbx
0x3aa9: lea rbx,[rip+0x2045c0]
0x3ab0: cmp r12,rbx
0x3ab3: je 0x3ac4
0x3ab5: mov rdi,r12
0x3ab8: call 0x12e0
0x3abd: mov qword ptr [rip+0x20459c],rbx
0x3ac4: pop rbx
0x3ac5: mov dword ptr [rip+0x204589],0x1
0x3acf: pop rbp
0x3ad0: pop r12
0x3ad2: ret 
0x3ae0: lea rcx,[rip+0x204739]
0x3ae7: mov rdx,-0x1
0x3aee: jmp 0x3600
0x3b00: lea rcx,[rip+0x204719]
0x3b07: jmp 0x3600
0x3b10: lea rcx,[rip+0x204709]
0x3b17: mov rsi,rdi
0x3b1a: mov rdx,-0x1
0x3b21: xor edi,edi
0x3b23: jmp 0x3600
0x3b30: lea rcx,[rip+0x2046e9]
0x3b37: mov rdx,rsi
0x3b3a: mov rsi,rdi
0x3b3d: xor edi,edi
0x3b3f: jmp 0x3600
0x3b50: sub rsp,0x48
0x3b54: mov rax,rdx
0x3b57: mov rdx,qword ptr fs:0x28
0x3b60: mov qword ptr [rsp+0x38],rdx
0x3b65: xor edx,edx
0x3b67: cmp esi,0xa
0x3b6a: je 0x3bd4
0x3b6c: mov dword ptr [rsp],esi
0x3b6f: mov rcx,rsp
0x3b72: mov rdx,-0x1
0x3b79: mov rsi,rax
0x3b7c: mov qword ptr [rsp+0x4],0x0
0x3b85: mov qword ptr [rsp+0xc],0x0
0x3b8e: mov qword ptr [rsp+0x14],0x0
0x3b97: mov qword ptr [rsp+0x1c],0x0
0x3ba0: mov qword ptr [rsp+0x24],0x0
0x3ba9: mov qword ptr [rsp+0x2c],0x0
0x3bb2: mov dword ptr [rsp+0x34],0x0
0x3bba: call 0x3600
0x3bbf: mov rcx,qword ptr [rsp+0x38]
0x3bc4: xor rcx,qword ptr fs:0x28
0x3bcd: jne 0x3bd9
0x3bcf: add rsp,0x48
0x3bd3: ret 
0x3bd4: call 0x12f0
0x3bd9: call 0x13b0
0x3bde: nop 
0x3be0: sub rsp,0x48
0x3be4: mov rax,rdx
0x3be7: mov rdx,rcx
0x3bea: mov rcx,qword ptr fs:0x28
0x3bf3: mov qword ptr [rsp+0x38],rcx
0x3bf8: xor ecx,ecx
0x3bfa: cmp esi,0xa
0x3bfd: je 0x3c60
0x3bff: mov dword ptr [rsp],esi
0x3c02: mov rcx,rsp
0x3c05: mov rsi,rax
0x3c08: mov qword ptr [rsp+0x4],0x0
0x3c11: mov qword ptr [rsp+0xc],0x0
0x3c1a: mov qword ptr [rsp+0x14],0x0
0x3c23: mov qword ptr [rsp+0x1c],0x0
0x3c2c: mov qword ptr [rsp+0x24],0x0
0x3c35: mov qword ptr [rsp+0x2c],0x0
0x3c3e: mov dword ptr [rsp+0x34],0x0
0x3c46: call 0x3600
0x3c4b: mov rdx,qword ptr [rsp+0x38]
0x3c50: xor rdx,qword ptr fs:0x28
0x3c59: jne 0x3c65
0x3c5b: add rsp,0x48
0x3c5f: ret 
0x3c60: call 0x12f0
0x3c65: call 0x13b0
0x3c6a: nop word ptr [rax+rax]
0x3c70: mov rdx,rsi
0x3c73: mov esi,edi
0x3c75: xor edi,edi
0x3c77: jmp 0x3b50
0x3c80: mov rcx,rdx
0x3c83: mov rdx,rsi
0x3c86: mov esi,edi
0x3c88: xor edi,edi
0x3c8a: jmp 0x3be0
0x3c90: sub rsp,0x48
0x3c94: mov ecx,edx
0x3c96: mov rax,qword ptr fs:0x28
0x3c9f: mov qword ptr [rsp+0x38],rax
0x3ca4: xor eax,eax
0x3ca6: mov rax,qword ptr [rip+0x2045a3]
0x3cad: mov r8,rsp
0x3cb0: and ecx,0x1f
0x3cb3: movdqa xmm0,[rip+0x204565]
0x3cbb: mov qword ptr [rsp+0x30],rax
0x3cc0: mov eax,edx
0x3cc2: movaps [rsp],xmm0
0x3cc6: shr al,0x5
0x3cc9: movzx eax,al
0x3ccc: lea r9,[r8+rax*4+0x8]
0x3cd1: movdqa xmm0,[rip+0x204557]
0x3cd9: movaps [rsp+0x10],xmm0
0x3cde: movdqa xmm0,[rip+0x20455a]
0x3ce6: movaps [rsp+0x20],xmm0
0x3ceb: mov edx,dword ptr [r9]
0x3cee: mov eax,edx
0x3cf0: shr eax,cl
0x3cf2: not eax
0x3cf4: and eax,0x1
0x3cf7: shl eax,cl
0x3cf9: mov rcx,r8
0x3cfc: xor eax,edx
0x3cfe: mov rdx,rsi
0x3d01: mov rsi,rdi
0x3d04: mov dword ptr [r9],eax
0x3d07: xor edi,edi
0x3d09: call 0x3600
0x3d0e: mov rsi,qword ptr [rsp+0x38]
0x3d13: xor rsi,qword ptr fs:0x28
0x3d1c: jne 0x3d23
0x3d1e: add rsp,0x48
0x3d22: ret 
0x3d23: call 0x13b0
0x3d28: nop dword ptr [rax+rax]
0x3d30: movsx edx,sil
0x3d34: mov rsi,-0x1
0x3d3b: jmp 0x3c90
0x3d40: mov edx,0x3a
0x3d45: mov rsi,-0x1
0x3d4c: jmp 0x3c90
0x3d60: mov edx,0x3a
0x3d65: jmp 0x3c90
0x3ddf: mov rcx,qword ptr [rsp+0x38]
0x3de4: xor rcx,qword ptr fs:0x28
0x3ded: jne 0x3df9
0x3def: add rsp,0x48
0x3df3: ret 
0x3df4: call 0x12f0
0x3df9: call 0x13b0
0x3dfe: nop 
0x3e00: sub rsp,0x48
0x3e04: mov r9,rcx
0x3e07: mov rcx,qword ptr [rip+0x204442]
0x3e0e: movdqa xmm0,[rip+0x20440a]
0x3e16: mov rax,qword ptr fs:0x28
0x3e1f: mov qword ptr [rsp+0x38],rax
0x3e24: xor eax,eax
0x3e26: movaps [rsp],xmm0
0x3e2a: test rsi,rsi
0x3e2d: mov qword ptr [rsp+0x30],rcx
0x3e32: mov dword ptr [rsp],0xa
0x3e39: movdqa xmm0,[rip+0x2043ef]
0x3e41: movaps [rsp+0x10],xmm0
0x3e46: movdqa xmm0,[rip+0x2043f2]
0x3e4e: movaps [rsp+0x20],xmm0
0x3e53: je 0x3e87
0x3e55: test rdx,rdx
0x3e58: je 0x3e87
0x3e5a: mov qword ptr [rsp+0x28],rsi
0x3e5f: mov qword ptr [rsp+0x30],rdx
0x3e64: mov rcx,rsp
0x3e67: mov rdx,r8
0x3e6a: mov rsi,r9
0x3e6d: call 0x3600
0x3e72: mov rdi,qword ptr [rsp+0x38]
0x3e77: xor rdi,qword ptr fs:0x28
0x3e80: jne 0x3e8c
0x3e82: add rsp,0x48
0x3e86: ret 
0x3e87: call 0x12f0
0x3e8c: call 0x13b0
0x3e91: nop dword ptr [rax+rax]
0x3e96: nop word ptr cs:[rax+rax]
0x3ea0: mov r8,-0x1
0x3ea7: jmp 0x3e00
0x3eb0: mov rcx,rdx
0x3eb3: mov r8,-0x1
0x3eba: mov rdx,rsi
0x3ebd: mov rsi,rdi
0x3ec0: xor edi,edi
0x3ec2: jmp 0x3e00
0x3ed0: mov r8,rcx
0x3ed3: mov rcx,rdx
0x3ed6: mov rdx,rsi
0x3ed9: mov rsi,rdi
0x3edc: xor edi,edi
0x3ede: jmp 0x3e00
0x3ef0: lea rcx,[rip+0x204129]
0x3ef7: jmp 0x3600
0x3f00: lea rcx,[rip+0x204119]
0x3f07: mov rdx,rsi
0x3f0a: mov rsi,rdi
0x3f0d: xor edi,edi
0x3f0f: jmp 0x3600
0x3f20: lea rcx,[rip+0x2040f9]
0x3f27: mov rdx,-0x1
0x3f2e: jmp 0x3600
0x3f40: lea rcx,[rip+0x2040d9]
0x3f47: mov rsi,rdi
0x3f4a: mov rdx,-0x1
0x3f51: xor edi,edi
0x3f53: jmp 0x3600
0x4098: mov r8,rcx
0x409b: mov rcx,rdx
0x409e: lea rdx,[rip+0xaf4]
0x40a5: mov esi,0x1
0x40aa: xor eax,eax
0x40ac: call 0x1550
0x40b1: jmp 0x3f9c
0x42ad: push r12
0x42af: push r15
0x42b1: push r14
0x42b3: mov r8,qword ptr [rsp+0x20]
0x42b8: mov rcx,rbx
0x42bb: mov rdx,rax
0x42be: mov rdi,rbp
0x42c1: mov esi,0x1
0x42c6: xor eax,eax
0x42c8: call 0x1550
0x42cd: add rsp,0x20
0x42d1: add rsp,0x28
0x42d5: pop rbx
0x42d6: pop rbp
0x42d7: pop r12
0x42d9: pop r13
0x42db: pop r14
0x42dd: pop r15
0x42df: ret 
0x4319: push r12
0x431b: push r15
0x431d: push r14
0x431f: mov r9,qword ptr [rsp+0x28]
0x4324: jmp 0x42b3
0x4380: xor r9d,r9d
0x4383: cmp qword ptr [r8],0x0
0x4387: je 0x439b
0x4389: nop dword ptr [rax]
0x4390: add r9,0x1
0x4394: cmp qword ptr [r8+r9*8],0x0
0x4399: jne 0x4390
0x439b: jmp 0x3f60
0x43c8: mov r11d,eax
0x43cb: add r11,qword ptr [r10+0x10]
0x43cf: add eax,0x8
0x43d2: mov dword ptr [r10],eax
0x4405: call 0x13b0
0x4420: push rbp
0x4421: push rbx
0x4422: mov r10d,0x20
0x4428: xor r11d,r11d
0x442b: sub rsp,0xb8
0x4432: mov rax,qword ptr fs:0x28
0x443b: mov qword ptr [rsp+0x78],rax
0x4440: xor eax,eax
0x4442: lea rax,[rsp+0xd0]
0x444a: mov qword ptr [rsp+0xa0],r8
0x4452: lea rbx,[rsp+0xd0]
0x445a: lea r8,[rsp+0x20]
0x445f: mov qword ptr [rsp+0xa8],r9
0x4467: mov dword ptr [rsp+0x8],0x20
0x446f: mov qword ptr [rsp+0x10],rax
0x4474: lea rax,[rsp+0x80]
0x447c: xor r9d,r9d
0x447f: mov qword ptr [rsp+0x18],rax
0x4484: mov rbp,rax
0x4487: nop word ptr [rax+rax]
0x4490: cmp r10d,0x2f
0x4494: ja 0x44ec
0x4496: mov eax,r10d
0x4499: mov r11d,0x1
0x449f: add r10d,0x8
0x44a3: add rax,rbp
0x44a6: mov rax,qword ptr [rax]
0x44a9: test rax,rax
0x44ac: mov qword ptr [r8+r9*8],rax
0x44b0: je 0x44bc
0x44b2: add r9,0x1
0x44b6: cmp r9,0xa
0x44ba: jne 0x4490
0x44bc: test r11b,r11b
0x44bf: jne 0x44e5
0x44c1: call 0x3f60
0x44c6: mov rax,qword ptr [rsp+0x78]
0x44cb: xor rax,qword ptr fs:0x28
0x44d4: jne 0x44e0
0x44d6: add rsp,0xb8
0x44dd: pop rbx
0x44de: pop rbp
0x44df: ret 
0x44e0: call 0x13b0
0x44e5: mov dword ptr [rsp+0x8],r10d
0x44ea: jmp 0x44c1
0x44ec: mov rax,rbx
0x44ef: add rbx,0x8
0x44f3: jmp 0x44a6
0x4500: push rbx
0x4501: lea rsi,[rip+0x16b3]
0x4508: mov edx,0x5
0x450d: xor edi,edi
0x450f: call 0x1380
0x4514: lea rdx,[rip+0x16b5]
0x451b: mov rsi,rax
0x451e: mov edi,0x1
0x4523: xor eax,eax
0x4525: call 0x14d0
0x452a: lea rsi,[rip+0x16b5]
0x4531: mov edx,0x5
0x4536: xor edi,edi
0x4538: call 0x1380
0x453d: lea rcx,[rip+0x834]
0x4544: lea rdx,[rip+0x6ea]
0x454b: mov rsi,rax
0x454e: mov edi,0x1
0x4553: xor eax,eax
0x4555: call 0x14d0
0x455a: mov rbx,qword ptr [rip+0x203b27]
0x4561: lea rsi,[rip+0x18b0]
0x4568: xor edi,edi
0x456a: mov edx,0x5
0x456f: call 0x1380
0x4574: mov rsi,rbx
0x4577: mov rdi,rax
0x457a: pop rbx
0x457b: jmp 0x1430
0x4580: push rbx
0x4581: mov rbx,rdi
0x4584: call 0x1470
0x4589: test rax,rax
0x458c: jne 0x4593
0x458e: test rbx,rbx
0x4591: jne 0x4595
0x4593: pop rbx
0x4594: ret 
0x4595: call 0x47d0
0x459a: nop word ptr [rax+rax]
0x45a0: mov rax,rdi
0x45a3: mul rsi
0x45a6: mov rdi,rax
0x45a9: seto al
0x45ac: test rdi,rdi
0x45af: js 0x45bb
0x45b1: movzx eax,al
0x45b4: test rax,rax
0x45b7: jne 0x45bb
0x45b9: jmp 0x4580
0x45bb: sub rsp,0x8
0x45bf: call 0x47d0
0x45c4: nop 
0x45c6: nop word ptr cs:[rax+rax]
0x45d0: jmp 0x4580
0x45e9: test rdi,rdi
0x45ec: jne 0x4608
0x4608: call 0x12e0
0x460d: xor eax,eax
0x460f: pop rbx
0x4610: ret 
0x4616: nop word ptr cs:[rax+rax]
0x4620: mov rax,rsi
0x4623: mul rdx
0x4626: mov rsi,rax
0x4629: seto al
0x462c: test rsi,rsi
0x462f: js 0x463b
0x4631: movzx eax,al
0x4634: test rax,rax
0x4637: jne 0x463b
0x4639: jmp 0x45e0
0x463b: sub rsp,0x8
0x463f: call 0x47d0
0x4644: nop 
0x4646: nop word ptr cs:[rax+rax]
0x4650: test rdi,rdi
0x4653: mov r9,rdx
0x4656: mov rcx,qword ptr [rsi]
0x4659: je 0x4690
0x465b: xor edx,edx
0x465d: movabsq rax,0x5555555555555554
0x4667: div r9
0x466a: cmp rax,rcx
0x466d: jbe 0x46ab
0x466f: mov rax,rcx
0x4672: shr rax, 1
0x4675: lea rcx,[rax+rcx+0x1]
0x467a: mov qword ptr [rsi],rcx
0x467d: imul rcx,r9
0x4681: mov rsi,rcx
0x4684: jmp 0x45e0
0x4690: test rcx,rcx
0x4693: je 0x46b8
0x4695: mov rax,rcx
0x4698: mul r9
0x469b: seto dl
0x469e: test rax,rax
0x46a1: movzx edx,dl
0x46a4: js 0x46ab
0x46a6: test rdx,rdx
0x46a9: je 0x467a
0x46ab: sub rsp,0x8
0x46af: call 0x47d0
0x46b4: nop dword ptr [rax]
0x46b8: xor edx,edx
0x46ba: mov eax,0x80
0x46bf: xor r8d,r8d
0x46c2: div r9
0x46c5: test rax,rax
0x46c8: sete r8b
0x46cc: lea rcx,[r8+rax]
0x46d0: jmp 0x4695
0x46e0: test rdi,rdi
0x46e3: mov rax,qword ptr [rsi]
0x46e6: je 0x4710
0x46e8: movabsq rdx,0x5555555555555553
0x46f2: cmp rax,rdx
0x46f5: ja 0x4721
0x46f7: mov rdx,rax
0x46fa: shr rdx, 1
0x46fd: lea rax,[rdx+rax+0x1]
0x4702: mov qword ptr [rsi],rax
0x4705: mov rsi,rax
0x4708: jmp 0x45e0
0x4710: test rax,rax
0x4713: mov edx,0x80
0x4718: cmove rax,rdx
0x471c: test rax,rax
0x471f: jns 0x4702
0x4721: sub rsp,0x8
0x4725: call 0x47d0
0x472a: nop word ptr [rax+rax]
0x4730: push rbx
0x4731: mov rbx,rdi
0x4734: call 0x4580
0x4739: mov rdx,rbx
0x473c: xor esi,esi
0x473e: mov rdi,rax
0x4741: pop rbx
0x4742: jmp 0x1400
0x4750: mov rax,rdi
0x4753: sub rsp,0x8
0x4757: mul rsi
0x475a: seto dl
0x475d: test rax,rax
0x4760: js 0x4779
0x4762: movzx edx,dl
0x4765: test rdx,rdx
0x4768: jne 0x4779
0x476a: call 0x1440
0x476f: test rax,rax
0x4772: je 0x4779
0x4774: add rsp,0x8
0x4778: ret 
0x4779: call 0x47d0
0x477e: nop 
0x4780: push rbp
0x4781: push rbx
0x4782: mov rbp,rdi
0x4785: mov rdi,rsi
0x4788: mov rbx,rsi
0x478b: sub rsp,0x8
0x478f: call 0x4580
0x4794: add rsp,0x8
0x4798: mov rdx,rbx
0x479b: mov rsi,rbp
0x479e: pop rbx
0x479f: pop rbp
0x47a0: mov rdi,rax
0x47a3: jmp 0x1450
0x47b0: push rbx
0x47b1: mov rbx,rdi
0x47b4: call 0x13a0
0x47b9: mov rdi,rbx
0x47bc: lea rsi,[rax+0x1]
0x47c0: pop rbx
0x47c1: jmp 0x4780
0x4800: call 0x12f0
0x4805: nop word ptr cs:[rax+rax]
0x480f: nop 
0x4930: push r13
0x4932: push r12
0x4934: mov r13,rsi
0x4937: push rbp
0x4938: push rbx
0x4939: mov rbx,rdi
0x493c: mov r12,rdx
0x493f: sub rsp,0x18
0x4943: mov rax,qword ptr fs:0x28
0x494c: mov qword ptr [rsp+0x8],rax
0x4951: xor eax,eax
0x4953: lea rax,[rsp+0x4]
0x4958: test rdi,rdi
0x495b: cmove rbx,rax
0x495f: mov rdi,rbx
0x4962: call 0x13d0
0x4967: cmp rax,-0x3
0x496b: mov rbp,rax
0x496e: jbe 0x4990
0x4970: test r12,r12
0x4973: je 0x4990
0x4975: xor edi,edi
0x4977: call 0x4a40
0x497c: test al,al
0x497e: jne 0x4990
0x4980: movzx eax,byte ptr [r13]
0x4985: mov ebp,0x1
0x498a: mov dword ptr [rbx],eax
0x498c: nop dword ptr [rax]
0x4990: mov rdx,qword ptr [rsp+0x8]
0x4995: xor rdx,qword ptr fs:0x28
0x499e: mov rax,rbp
0x49a1: jne 0x49ae
0x49a3: add rsp,0x18
0x49a7: pop rbx
0x49a8: pop rbp
0x49a9: pop r12
0x49ab: pop r13
0x49ad: ret 
0x49ae: call 0x13b0
0x49b3: nop word ptr cs:[rax+rax]
0x49bd: nop dword ptr [rax]
0x49c0: push r12
0x49c2: push rbp
0x49c3: mov rbp,rdi
0x49c6: push rbx
0x49c7: call 0x1330
0x49cc: mov ebx,dword ptr [rbp]
0x49cf: mov rdi,rbp
0x49d2: mov r12,rax
0x49d5: call 0x4810
0x49da: and ebx,0x20
0x49dd: test ebx,ebx
0x49df: jne 0x49f8
0x49e1: test eax,eax
0x49e3: je 0x49ef
0x49e5: test r12,r12
0x49e8: mov eax,0xffffffff
0x49ed: je 0x4a28
0x49ef: pop rbx
0x49f0: pop rbp
0x49f1: pop r12
0x49f3: ret 
0x49f8: test eax,eax
0x49fa: jne 0x4a18
0x49fc: call 0x1300
0x4a01: mov dword ptr [rax],0x0
0x4a07: mov eax,0xffffffff
0x4a0c: pop rbx
0x4a0d: pop rbp
0x4a0e: pop r12
0x4a10: ret 
0x4a18: pop rbx
0x4a19: mov eax,0xffffffff
0x4a1e: pop rbp
0x4a1f: pop r12
0x4a21: ret 
0x4a28: call 0x1300
0x4a2d: cmp dword ptr [rax],0x9
0x4a30: pop rbx
0x4a31: pop rbp
0x4a32: pop r12
0x4a34: setne al
0x4a37: movzx eax,al
0x4a3a: neg eax
0x4a3c: ret 
0x4a40: sub rsp,0x8
0x4a44: xor esi,esi
0x4a46: call 0x14c0
0x4a4b: mov rdx,rax
0x4a4e: mov eax,0x1
0x4a53: test rdx,rdx
0x4a56: je 0x4a75
0x4a58: lea rdi,[rip+0x1481]
0x4a5f: mov ecx,0x2
0x4a64: mov rsi,rdx
0x4a67: rep cmpsb [rsi],es:[rdi]
0x4a69: seta cl
0x4a6c: sbb cl,0x0
0x4a6f: xor eax,eax
0x4a71: test cl,cl
0x4a73: jne 0x4a80
0x4a75: add rsp,0x8
0x4a79: ret 
0x4a80: lea rdi,[rip+0x145b]
0x4a87: mov ecx,0x6
0x4a8c: mov rsi,rdx
0x4a8f: rep cmpsb [rsi],es:[rdi]
0x4a91: seta al
0x4a94: sbb al,0x0
0x4a96: test al,al
0x4a98: setne al
0x4a9b: add rsp,0x8
0x4a9f: ret 
0x4aa0: sub rsp,0x8
0x4aa4: mov edi,0xe
0x4aa9: call 0x1490
0x4aae: test rax,rax
0x4ab1: je 0x4ad0
0x4ab3: cmp byte ptr [rax],0x0
0x4ab6: lea rdx,[rip+0x142b]
0x4abd: cmove rax,rdx
0x4ac1: add rsp,0x8
0x4ac5: ret 
0x4ad0: lea rax,[rip+0x1411]
0x4ad7: add rsp,0x8
0x4adb: ret 
0x4ae0: push r15
0x4ae2: push r14
0x4ae4: mov r15,rdx
0x4ae7: push r13
0x4ae9: push r12
0x4aeb: lea r12,[rip+0x2030be]
0x4af2: push rbp
0x4af3: lea rbp,[rip+0x2030be]
0x4afa: push rbx
0x4afb: mov r13d,edi
0x4afe: mov r14,rsi
0x4b01: sub rbp,r12
0x4b04: sub rsp,0x8
0x4b08: sar rbp,0x3
0x4b0c: call 0x12b0
0x4b11: test rbp,rbp
0x4b14: je 0x4b36
0x4b16: xor ebx,ebx
0x4b18: nop dword ptr [rax+rax]
0x4b20: mov rdx,r15
0x4b23: mov rsi,r14
0x4b26: mov edi,r13d
0x4b29: call qword ptr [r12+rbx*8]
0x4b2d: add rbx,0x1
0x4b31: cmp rbp,rbx
0x4b34: jne 0x4b20
0x4b36: add rsp,0x8
0x4b3a: pop rbx
0x4b3b: pop rbp
0x4b3c: pop r12
0x4b3e: pop r13
0x4b40: pop r14
0x4b42: pop r15
0x4b44: ret 
0x4b50: rep ret 
