0x1358: sub rsp,0x8
0x135c: mov rax,qword ptr [rip+0x205c6d]
0x1363: test rax,rax
0x1366: je 0x136a
0x1368: call rax
0x136a: add rsp,0x8
0x136e: ret 
0x1376: jmp qword ptr [rip+0x205abc]
0x13c0: jmp qword ptr [rip+0x205a9a]
0x13d0: jmp qword ptr [rip+0x205a92]
0x13f0: jmp qword ptr [rip+0x205a82]
0x1440: jmp qword ptr [rip+0x205a5a]
0x1450: jmp qword ptr [rip+0x205a52]
0x1480: jmp qword ptr [rip+0x205a3a]
0x14c0: jmp qword ptr [rip+0x205a1a]
0x14e0: jmp qword ptr [rip+0x205a0a]
0x1500: jmp qword ptr [rip+0x2059fa]
0x1520: jmp qword ptr [rip+0x2059ea]
0x1530: jmp qword ptr [rip+0x2059e2]
0x1560: jmp qword ptr [rip+0x2059ca]
0x1570: jmp qword ptr [rip+0x2059c2]
0x1580: jmp qword ptr [rip+0x2059ba]
0x15a0: jmp qword ptr [rip+0x2059aa]
0x1600: jmp qword ptr [rip+0x20597a]
0x1650: jmp qword ptr [rip+0x205952]
0x1660: jmp qword ptr [rip+0x20594a]
0x1670: jmp qword ptr [rip+0x205942]
0x1680: jmp qword ptr [rip+0x20595a]
0x182d: lea rsi,[rip+0x36f2]
0x1834: mov rbp,rax
0x1837: mov edx,0x5
0x183c: xor edi,edi
0x183e: call 0x1420
0x1843: mov rcx,rbp
0x1846: mov rdx,rax
0x1849: xor esi,esi
0x184b: xor edi,edi
0x184d: xor eax,eax
0x184f: xor ebp,ebp
0x1851: call 0x15e0
0x1856: jmp 0x17f1
0x18f6: jmp 0x17f1
0x1900: lea rsi,[rip+0x35f2]
0x1907: mov edx,0x5
0x190c: xor edi,edi
0x190e: call 0x1420
0x1913: mov esi,dword ptr [rbx]
0x1915: mov rdx,rax
0x1918: mov edi,0x1
0x191d: xor eax,eax
0x191f: call 0x15e0
0x192d: lea rsi,[rip+0x35b1]
0x1934: mov edx,0x5
0x1939: xor edi,edi
0x193b: call 0x1420
0x1940: mov esi,dword ptr [rbx]
0x1942: mov rdx,rax
0x1945: mov edi,0x1
0x194a: xor eax,eax
0x194c: call 0x15e0
0x195a: lea rsi,[rip+0x35b1]
0x1961: mov edx,0x5
0x1966: xor edi,edi
0x1968: call 0x1420
0x196d: mov esi,dword ptr [rbx]
0x196f: mov rdx,rax
0x1972: mov edi,0x1
0x1977: xor eax,eax
0x1979: call 0x15e0
0x1988: jmp 0x18d9
0x19a5: nop word ptr cs:[rax+rax]
0x19af: nop 
0x19da: hlt 
0x19db: nop dword ptr [rax+rax]
0x19e0: lea rdi,[rip+0x205699]
0x19e7: push rbp
0x19e8: lea rax,[rip+0x205691]
0x19ef: cmp rax,rdi
0x19f2: mov rbp,rsp
0x19f5: je 0x1a10
0x19f7: mov rax,qword ptr [rip+0x2055c2]
0x19fe: test rax,rax
0x1a01: je 0x1a10
0x1a03: pop rbp
0x1a04: jmp rax
0x1a10: pop rbp
0x1a11: ret 
0x1a20: lea rdi,[rip+0x205659]
0x1a27: lea rsi,[rip+0x205652]
0x1a2e: push rbp
0x1a2f: sub rsi,rdi
0x1a32: mov rbp,rsp
0x1a35: sar rsi,0x3
0x1a39: mov rax,rsi
0x1a3c: shr rax,0x3f
0x1a40: add rsi,rax
0x1a43: sar rsi, 1
0x1a46: je 0x1a60
0x1a48: mov rax,qword ptr [rip+0x205589]
0x1a4f: test rax,rax
0x1a52: je 0x1a60
0x1a54: pop rbp
0x1a55: jmp rax
0x1a60: pop rbp
0x1a61: ret 
0x1a81: push rbp
0x1a82: mov rbp,rsp
0x1a85: je 0x1a93
0x1a87: mov rdi,qword ptr [rip+0x20557a]
0x1a8e: call 0x1680
0x1a93: call 0x19e0
0x1a98: mov byte ptr [rip+0x205609],0x1
0x1a9f: pop rbp
0x1aa0: ret 
0x1ab0: push rbp
0x1ab1: mov rbp,rsp
0x1ab4: pop rbp
0x1ab5: jmp 0x1a20
0x1e5e: nop 
0x1e60: lea rsi,[rip+0x205249]
0x1e67: mov rdi,rbp
0x1e6a: call 0x2190
0x1e6f: mov rdi,rax
0x2035: lea rsi,[rip+0x313c]
0x203c: mov edx,0x5
0x2041: xor edi,edi
0x2043: mov rbp,rax
0x2046: call 0x1420
0x204b: mov esi,dword ptr [rbx]
0x204d: mov rdx,rax
0x2050: mov rcx,rbp
0x2053: xor edi,edi
0x2055: xor eax,eax
0x2057: xor ebx,ebx
0x2059: call 0x15e0
0x205e: jmp 0x1fe3
0x2069: jmp 0x1fb9
0x2093: jmp 0x1fe3
0x20a9: jmp 0x1f2e
0x20ae: call 0x1450
0x20b3: nop word ptr cs:[rax+rax]
0x20bd: nop dword ptr [rax]
0x20c0: mov qword ptr [rip+0x205009],rdi
0x20c7: ret 
0x20d0: mov byte ptr [rip+0x204ff1],dil
0x20d7: ret 
0x20e0: push rbp
0x20e1: push rbx
0x20e2: sub rsp,0x8
0x20e6: mov rdi,qword ptr [rip+0x204f9b]
0x20ed: call 0x4880
0x20f2: test eax,eax
0x20f4: je 0x210c
0x20f6: call 0x13a0
0x20fb: cmp byte ptr [rip+0x204fc6],0x0
0x2102: mov rbx,rax
0x2105: je 0x2123
0x2107: cmp dword ptr [rax],0x20
0x210a: jne 0x2123
0x210c: mov rdi,qword ptr [rip+0x204f8d]
0x2113: call 0x4880
0x2118: test eax,eax
0x211a: jne 0x2162
0x211c: add rsp,0x8
0x2120: pop rbx
0x2121: pop rbp
0x2122: ret 
0x2123: lea rsi,[rip+0x30a8]
0x212a: xor edi,edi
0x212c: mov edx,0x5
0x2131: call 0x1420
0x2136: mov rdi,qword ptr [rip+0x204f93]
0x213d: mov rbp,rax
0x2140: test rdi,rdi
0x2143: je 0x216d
0x2145: call 0x3cf0
0x214a: mov esi,dword ptr [rbx]
0x214c: lea rdx,[rip+0x308b]
0x2153: mov rcx,rax
0x2156: mov r8,rbp
0x2159: xor edi,edi
0x215b: xor eax,eax
0x215d: call 0x15e0
0x2162: mov edi,dword ptr [rip+0x204eb0]
0x2168: call 0x13c0
0x216d: mov esi,dword ptr [rbx]
0x216f: lea rdx,[rip+0x306c]
0x2176: mov rcx,rax
0x2179: xor edi,edi
0x217b: xor eax,eax
0x217d: call 0x15e0
0x2182: jmp 0x2162
0x2190: lea rcx,[rsi+0x14]
0x2194: mov byte ptr [rsi+0x14],0x0
0x2198: movabsq rsi,-0x3333333333333333
0x21a2: nop word ptr [rax+rax]
0x21a8: mov rax,rdi
0x21ab: sub rcx,0x1
0x21af: mul rsi
0x21b2: shr rdx,0x3
0x21b6: lea rax,[rdx+rdx*4]
0x21ba: add rax,rax
0x21bd: sub rdi,rax
0x21c0: add edi,0x30
0x21c3: test rdx,rdx
0x21c6: mov byte ptr [rcx],dil
0x21c9: mov rdi,rdx
0x21cc: jne 0x21a8
0x21ce: mov rax,rcx
0x21d1: ret 
0x227f: nop 
0x2280: push rbp
0x2281: push rbx
0x2282: mov rbp,rdi
0x2285: mov ebx,esi
0x2287: sub rsp,0x8
0x228b: call 0x4960
0x2290: movzx edx,byte ptr [rax]
0x2293: and edx,-0x21
0x2296: cmp dl,0x55
0x2299: je 0x2310
0x229b: cmp dl,0x47
0x229e: je 0x22c0
0x22a0: lea rax,[rip+0x2f94]
0x22a7: lea rdx,[rip+0x2f8f]
0x22ae: cmp ebx,0x9
0x22b1: cmovne rax,rdx
0x22b5: add rsp,0x8
0x22b9: pop rbx
0x22ba: pop rbp
0x22bb: ret 
0x22c0: movzx edx,byte ptr [rax+0x1]
0x22c4: and edx,-0x21
0x22c7: cmp dl,0x42
0x22ca: jne 0x22a0
0x22cc: cmp byte ptr [rax+0x2],0x31
0x22d0: jne 0x22a0
0x22d2: cmp byte ptr [rax+0x3],0x38
0x22d6: jne 0x22a0
0x22d8: cmp byte ptr [rax+0x4],0x30
0x22dc: jne 0x22a0
0x22de: cmp byte ptr [rax+0x5],0x33
0x22e2: jne 0x22a0
0x22e4: cmp byte ptr [rax+0x6],0x30
0x22e8: jne 0x22a0
0x22ea: cmp byte ptr [rax+0x7],0x0
0x22ee: jne 0x22a0
0x22f0: cmp byte ptr [rbp],0x60
0x22f4: lea rax,[rip+0x2f39]
0x22fb: lea rdx,[rip+0x2f36]
0x2302: cmovne rax,rdx
0x2306: add rsp,0x8
0x230a: pop rbx
0x230b: pop rbp
0x230c: ret 
0x2310: movzx edx,byte ptr [rax+0x1]
0x2314: and edx,-0x21
0x2317: cmp dl,0x54
0x231a: jne 0x22a0
0x231c: movzx edx,byte ptr [rax+0x2]
0x2320: and edx,-0x21
0x2323: cmp dl,0x46
0x2326: jne 0x22a0
0x232c: cmp byte ptr [rax+0x3],0x2d
0x2330: jne 0x22a0
0x2336: cmp byte ptr [rax+0x4],0x38
0x233a: jne 0x22a0
0x2340: cmp byte ptr [rax+0x5],0x0
0x2344: jne 0x22a0
0x234a: cmp byte ptr [rbp],0x60
0x234e: lea rax,[rip+0x2ed7]
0x2355: lea rdx,[rip+0x2ed4]
0x235c: cmovne rax,rdx
0x2360: add rsp,0x8
0x2364: pop rbx
0x2365: pop rbp
0x2366: ret 
0x2443: xor r11d,r11d
0x2446: mov rax,rbp
0x2449: mov r8d,r12d
0x244c: mov rbp,r11
0x244f: mov r11,rax
0x2452: nop word ptr [rax+rax]
0x2458: cmp r11,rbp
0x245b: setne r12b
0x245f: cmp r11,-0x1
0x2463: jne 0x2472
0x2465: mov rax,qword ptr [rsp+0x10]
0x246a: cmp byte ptr [rax+rbp],0x0
0x246e: setne r12b
0x2472: test r12b,r12b
0x2475: je 0x2ad0
0x247b: cmp dword ptr [rsp+0x8],0x2
0x2480: mov rdi,qword ptr [rsp+0x10]
0x2485: lea r9,[rdi+rbp]
0x2489: setne al
0x248c: and al,byte ptr [rsp+0xd]
0x2490: mov r10d,eax
0x2493: je 0x2540
0x2499: mov rax,qword ptr [rsp+0x18]
0x249e: test rax,rax
0x24a1: je 0x28d0
0x24a7: cmp r11,-0x1
0x24ab: lea rbx,[rbp+rax]
0x24b0: jne 0x24e0
0x24b2: cmp rax,0x1
0x24b6: jbe 0x24e0
0x24b8: mov byte ptr [rsp+0x38],r8b
0x24bd: mov byte ptr [rsp+0x30],r10b
0x24c2: mov qword ptr [rsp+0x28],r9
0x24c7: call 0x1440
0x24cc: movzx r8d,byte ptr [rsp+0x38]
0x24d2: movzx r10d,byte ptr [rsp+0x30]
0x24d8: mov r11,rax
0x24db: mov r9,qword ptr [rsp+0x28]
0x24e0: cmp rbx,r11
0x24e3: mov byte ptr [rsp+0x28],r10b
0x24e8: ja 0x2aa0
0x24ee: mov rdx,qword ptr [rsp+0x18]
0x24f3: mov rsi,qword ptr [rsp+0x48]
0x24f8: mov rdi,r9
0x24fb: mov qword ptr [rsp+0x40],r11
0x2500: mov byte ptr [rsp+0x38],r8b
0x2505: mov qword ptr [rsp+0x30],r9
0x250a: call 0x14e0
0x250f: test eax,eax
0x2511: mov r9,qword ptr [rsp+0x30]
0x2516: movzx r8d,byte ptr [rsp+0x38]
0x251c: mov r11,qword ptr [rsp+0x40]
0x2521: jne 0x2aa0
0x2527: cmp byte ptr [rsp+0xf],0x0
0x252c: movzx r10d,byte ptr [rsp+0x28]
0x2532: jne 0x34b5
0x2538: nop dword ptr [rax+rax]
0x2540: movzx ebx,byte ptr [r9]
0x2544: cmp bl,0x7e
0x2547: ja 0x2868
0x254d: lea rcx,[rip+0x2d78]
0x2554: movzx edx,bl
0x2557: movsxd rax,dword ptr [rcx+rdx*4]
0x255b: add rax,rcx
0x255e: jmp rax
0x2598: cmp byte ptr [rsp+0xd],0x1
0x259d: jne 0x26b2
0x25a3: test dl,dl
0x25a5: jne 0x26b2
0x25ab: mov rsi,qword ptr [rsp+0x20]
0x25b0: test rsi,rsi
0x25b3: je 0x25c9
0x25b5: mov edx,ebx
0x25b7: shr dl,0x5
0x25ba: movzx edx,dl
0x25bd: mov edx,dword ptr [rsi+rdx*4]
0x25c0: btl edx,ebx
0x25c3: jb 0x2713
0x25c9: test r10b,r10b
0x25cc: jne 0x2713
0x25d2: xor eax,0x1
0x25d5: add rbp,0x1
0x25d9: and eax,r8d
0x25dc: test al,al
0x25de: je 0x2600
0x25e0: cmp r13,r15
0x25e3: jbe 0x25ea
0x25e5: mov byte ptr [r14+r15],0x27
0x25ea: lea rax,[r15+0x1]
0x25ee: cmp r13,rax
0x25f1: jbe 0x25f9
0x25f3: mov byte ptr [r14+r15+0x1],0x27
0x25f9: add r15,0x2
0x25fd: xor r8d,r8d
0x2600: cmp r15,r13
0x2603: jae 0x2609
0x2605: mov byte ptr [r14+r15],bl
0x2609: movzx edi,byte ptr [rsp+0xe]
0x260e: add r15,0x1
0x2612: mov eax,0x0
0x2617: test r12b,r12b
0x261a: cmove edi,eax
0x261d: mov byte ptr [rsp+0xe],dil
0x2622: jmp 0x2458
0x26b2: cmp byte ptr [rsp+0xf],0x0
0x26b7: jne 0x25ab
0x26bd: jmp 0x25c9
0x2713: cmp dword ptr [rsp+0x8],0x2
0x2718: sete dl
0x271b: cmp byte ptr [rsp+0xf],0x0
0x2720: mov eax,edx
0x2722: jne 0x2f78
0x2728: mov eax,r8d
0x272b: xor eax,0x1
0x272e: and al,dl
0x2730: je 0x2761
0x2732: cmp r13,r15
0x2735: jbe 0x273c
0x2737: mov byte ptr [r14+r15],0x27
0x273c: lea rdx,[r15+0x1]
0x2740: cmp r13,rdx
0x2743: jbe 0x274b
0x2745: mov byte ptr [r14+r15+0x1],0x24
0x274b: lea rdx,[r15+0x2]
0x274f: cmp r13,rdx
0x2752: jbe 0x275a
0x2754: mov byte ptr [r14+r15+0x2],0x27
0x275a: add r15,0x3
0x275e: mov r8d,eax
0x2761: cmp r13,r15
0x2764: jbe 0x276b
0x2766: mov byte ptr [r14+r15],0x5c
0x276b: add r15,0x1
0x276f: add rbp,0x1
0x2773: jmp 0x2600
0x2860: xor r10d,r10d
0x2863: nop dword ptr [rax+rax]
0x2868: cmp qword ptr [rsp+0x58],0x1
0x286e: jne 0x2c18
0x2874: mov qword ptr [rsp+0x38],r11
0x2879: mov byte ptr [rsp+0x30],r8b
0x287e: mov byte ptr [rsp+0x28],r10b
0x2883: call 0x1670
0x2888: mov rcx,qword ptr [rax]
0x288b: movzx edx,bl
0x288e: movzx r10d,byte ptr [rsp+0x28]
0x2894: movzx r8d,byte ptr [rsp+0x30]
0x289a: mov r11,qword ptr [rsp+0x38]
0x289f: mov edi,0x1
0x28a4: movzx eax,word ptr [rcx+rdx*2]
0x28a8: and ax,0x4000
0x28ac: setne r12b
0x28b0: sete al
0x28b3: and al,byte ptr [rsp+0xd]
0x28b7: test al,al
0x28b9: jne 0x3251
0x28bf: cmp dword ptr [rsp+0x8],0x2
0x28c4: sete dl
0x28c7: jmp 0x2598
0x28d0: movzx ebx,byte ptr [r9]
0x28d4: cmp bl,0x7e
0x28d7: ja 0x2860
0x28d9: lea rcx,[rip+0x2be8]
0x28e0: movzx edx,bl
0x28e3: movsxd rax,dword ptr [rcx+rdx*4]
0x28e7: add rax,rcx
0x28ea: jmp rax
0x2aa0: xor r10d,r10d
0x2aa3: jmp 0x2540
0x2ad0: cmp dword ptr [rsp+0x8],0x2
0x2ad5: movzx ebx,byte ptr [rsp+0xf]
0x2ada: mov r12d,r8d
0x2add: mov rbp,r11
0x2ae0: sete dl
0x2ae3: mov eax,ebx
0x2ae5: test r15,r15
0x2ae8: sete cl
0x2aeb: and eax,edx
0x2aed: and al,cl
0x2aef: jne 0x3556
0x2af5: mov eax,ebx
0x2af7: xor eax,0x1
0x2afa: and dl,al
0x2afc: je 0x346c
0x2b02: cmp byte ptr [rsp+0x7c],0x0
0x2b07: je 0x346a
0x2b0d: cmp byte ptr [rsp+0xe],0x0
0x2b12: jne 0x350d
0x2b18: test r13,r13
0x2b1b: sete al
0x2b1e: cmp qword ptr [rsp+0x50],0x0
0x2b24: setne dl
0x2b27: and al,dl
0x2b29: je 0x354c
0x2b2f: mov r13,qword ptr [rsp+0x50]
0x2b34: lea rbx,[rip+0x2702]
0x2b3b: mov byte ptr [r14],0x27
0x2b3f: mov dword ptr [rsp+0x8],0x2
0x2b47: mov r15d,0x1
0x2b4d: mov qword ptr [rsp+0x18],0x1
0x2b56: mov byte ptr [rsp+0xf],0x0
0x2b5b: mov qword ptr [rsp+0x48],rbx
0x2b60: mov byte ptr [rsp+0x7c],al
0x2b64: jmp 0x2443
0x2c18: lea rax,[rsp+0xa0]
0x2c20: cmp r11,-0x1
0x2c24: mov qword ptr [rsp+0xa0],0x0
0x2c30: mov qword ptr [rsp+0x28],rax
0x2c35: jne 0x2c64
0x2c37: mov rdi,qword ptr [rsp+0x10]
0x2c3c: mov byte ptr [rsp+0x40],r8b
0x2c41: mov byte ptr [rsp+0x38],r10b
0x2c46: mov qword ptr [rsp+0x30],r9
0x2c4b: call 0x1440
0x2c50: movzx r8d,byte ptr [rsp+0x40]
0x2c56: movzx r10d,byte ptr [rsp+0x38]
0x2c5c: mov r11,rax
0x2c5f: mov r9,qword ptr [rsp+0x30]
0x2c64: lea rax,[rsp+0x9c]
0x2c6c: xor ecx,ecx
0x2c6e: mov byte ptr [rsp+0x7e],bl
0x2c72: mov byte ptr [rsp+0x7d],r8b
0x2c77: mov rbx,rcx
0x2c7a: mov qword ptr [rsp+0x88],r9
0x2c82: mov qword ptr [rsp+0x38],rax
0x2c87: mov byte ptr [rsp+0x7f],r10b
0x2c8c: mov qword ptr [rsp+0x80],r15
0x2c94: mov qword ptr [rsp+0x40],r14
0x2c99: mov qword ptr [rsp+0x70],r13
0x2c9e: mov qword ptr [rsp+0x30],r11
0x2ca3: mov rax,qword ptr [rsp+0x10]
0x2ca8: lea r14,[rbp+rbx]
0x2cad: mov rdx,qword ptr [rsp+0x30]
0x2cb2: mov rcx,qword ptr [rsp+0x28]
0x2cb7: mov rdi,qword ptr [rsp+0x38]
0x2cbc: lea r13,[rax+r14]
0x2cc0: sub rdx,r14
0x2cc3: mov rsi,r13
0x2cc6: call 0x47f0
0x2ccb: test rax,rax
0x2cce: mov r15,rax
0x2cd1: je 0x2d21
0x2cd3: cmp rax,-0x1
0x2cd7: je 0x32f5
0x2cdd: cmp rax,-0x2
0x2ce1: je 0x3281
0x2ce7: cmp dword ptr [rsp+0x8],0x2
0x2cec: sete al
0x2cef: and al,byte ptr [rsp+0xf]
0x2cf3: jne 0x2e90
0x2cf9: mov edi,dword ptr [rsp+0x9c]
0x2d00: call 0x1660
0x2d05: mov rdi,qword ptr [rsp+0x28]
0x2d0a: test eax,eax
0x2d0c: mov eax,0x0
0x2d11: cmove r12d,eax
0x2d15: add rbx,r15
0x2d18: call 0x1650
0x2d1d: test eax,eax
0x2d1f: je 0x2ca3
0x2d21: mov edx,r12d
0x2d24: mov rdi,rbx
0x2d27: movzx r8d,byte ptr [rsp+0x7d]
0x2d2d: xor edx,0x1
0x2d30: movzx ebx,byte ptr [rsp+0x7e]
0x2d35: movzx r10d,byte ptr [rsp+0x7f]
0x2d3b: and dl,byte ptr [rsp+0xd]
0x2d3f: mov r15,qword ptr [rsp+0x80]
0x2d47: mov r14,qword ptr [rsp+0x40]
0x2d4c: mov r13,qword ptr [rsp+0x70]
0x2d51: mov r11,qword ptr [rsp+0x30]
0x2d56: cmp rdi,0x1
0x2d5a: jbe 0x335b
0x2d60: mov rcx,rdi
0x2d63: xor esi,esi
0x2d65: movzx r9d,byte ptr [rsp+0xf]
0x2d6b: add rcx,rbp
0x2d6e: mov rdi,qword ptr [rsp+0x10]
0x2d73: jmp 0x2e2e
0x2d80: cmp dword ptr [rsp+0x8],0x2
0x2d85: sete al
0x2d88: test r9b,r9b
0x2d8b: jne 0x3240
0x2d91: mov esi,r8d
0x2d94: xor esi,0x1
0x2d97: and al,sil
0x2d9a: je 0x2dcb
0x2d9c: cmp r13,r15
0x2d9f: jbe 0x2da6
0x2da1: mov byte ptr [r14+r15],0x27
0x2da6: lea rsi,[r15+0x1]
0x2daa: cmp r13,rsi
0x2dad: jbe 0x2db5
0x2daf: mov byte ptr [r14+r15+0x1],0x24
0x2db5: lea rsi,[r15+0x2]
0x2db9: cmp r13,rsi
0x2dbc: jbe 0x2dc4
0x2dbe: mov byte ptr [r14+r15+0x2],0x27
0x2dc4: add r15,0x3
0x2dc8: mov r8d,eax
0x2dcb: cmp r13,r15
0x2dce: jbe 0x2dd5
0x2dd0: mov byte ptr [r14+r15],0x5c
0x2dd5: lea rax,[r15+0x1]
0x2dd9: cmp r13,rax
0x2ddc: jbe 0x2deb
0x2dde: mov eax,ebx
0x2de0: shr al,0x6
0x2de3: add eax,0x30
0x2de6: mov byte ptr [r14+r15+0x1],al
0x2deb: lea rax,[r15+0x2]
0x2def: cmp r13,rax
0x2df2: jbe 0x2e04
0x2df4: mov eax,ebx
0x2df6: shr al,0x3
0x2df9: and eax,0x7
0x2dfc: add eax,0x30
0x2dff: mov byte ptr [r14+r15+0x2],al
0x2e04: and ebx,0x7
0x2e07: add rbp,0x1
0x2e0b: add r15,0x3
0x2e0f: add ebx,0x30
0x2e12: cmp rbp,rcx
0x2e15: jae 0x2600
0x2e1b: mov esi,edx
0x2e1d: cmp r13,r15
0x2e20: jbe 0x2e26
0x2e22: mov byte ptr [r14+r15],bl
0x2e26: movzx ebx,byte ptr [rdi+rbp]
0x2e2a: add r15,0x1
0x2e2e: test dl,dl
0x2e30: jne 0x2d80
0x2e36: mov eax,esi
0x2e38: xor eax,0x1
0x2e3b: and eax,r8d
0x2e3e: test r10b,r10b
0x2e41: je 0x2e51
0x2e43: cmp r13,r15
0x2e46: jbe 0x2e4d
0x2e48: mov byte ptr [r14+r15],0x5c
0x2e4d: add r15,0x1
0x2e51: add rbp,0x1
0x2e55: cmp rbp,rcx
0x2e58: jae 0x25dc
0x2e5e: test al,al
0x2e60: je 0x325e
0x2e66: cmp r13,r15
0x2e69: jbe 0x2e70
0x2e6b: mov byte ptr [r14+r15],0x27
0x2e70: lea rax,[r15+0x1]
0x2e74: cmp r13,rax
0x2e77: jbe 0x2e7f
0x2e79: mov byte ptr [r14+r15+0x1],0x27
0x2e7f: add r15,0x2
0x2e83: xor r10d,r10d
0x2e86: xor r8d,r8d
0x2e89: jmp 0x2e1d
0x2e90: cmp r15,0x1
0x2e94: je 0x2cf9
0x2e9a: mov rdi,qword ptr [rsp+0x10]
0x2e9f: lea rcx,[rdi+r15]
0x2ea3: lea rdx,[rdi+r14+0x1]
0x2ea8: lea r8,[rcx+r14]
0x2eac: jmp 0x2ebd
0x2eb0: add rdx,0x1
0x2eb4: cmp r8,rdx
0x2eb7: je 0x2cf9
0x2ebd: movzx ecx,byte ptr [rdx]
0x2ec0: sub ecx,0x5b
0x2ec3: cmp cl,0x21
0x2ec6: ja 0x2eb0
0x2ec8: mov esi,0x1
0x2ecd: shl rsi,cl
0x2ed0: mov rcx,rsi
0x2ed3: movabsq rsi,0x20000002b
0x2edd: test rcx,rsi
0x2ee0: je 0x2eb0
0x2ee2: mov r14,qword ptr [rsp+0x40]
0x2ee7: mov r13,qword ptr [rsp+0x70]
0x2eec: mov rbp,qword ptr [rsp+0x30]
0x2ef1: mov dword ptr [rsp+0x8],0x2
0x2ef9: cmp byte ptr [rsp+0xd],0x0
0x2efe: je 0x2f10
0x2f00: test al,al
0x2f02: mov eax,0x4
0x2f07: cmove eax,dword ptr [rsp+0x8]
0x2f0c: mov dword ptr [rsp+0x8],eax
0x2f10: sub rsp,0x8
0x2f14: mov rcx,rbp
0x2f17: mov rsi,r13
0x2f1a: push qword ptr [rsp+0x68]
0x2f1e: push qword ptr [rsp+0x78]
0x2f22: mov rdi,r14
0x2f25: push 0x0
0x2f27: mov r9d,dword ptr [rsp+0x98]
0x2f2f: mov r8d,dword ptr [rsp+0x28]
0x2f34: mov rdx,qword ptr [rsp+0x30]
0x2f39: and r9d,-0x3
0x2f3d: call 0x2370
0x2f42: add rsp,0x20
0x2f46: mov r15,rax
0x2f49: mov rbx,qword ptr [rsp+0xa8]
0x2f51: xor rbx,qword ptr fs:0x28
0x2f5a: mov rax,r15
0x2f5d: jne 0x3563
0x2f63: add rsp,0xb8
0x2f6a: pop rbx
0x2f6b: pop rbp
0x2f6c: pop r12
0x2f6e: pop r13
0x2f70: pop r14
0x2f72: pop r15
0x2f74: ret 
0x2f78: mov rbp,r11
0x2f7b: jmp 0x2ef9
0x2fe1: test r13,r13
0x2fe4: jne 0x357a
0x2fea: lea rax,[rip+0x224c]
0x2ff1: mov qword ptr [rsp+0x50],0x0
0x2ffa: mov byte ptr [rsp+0xe],0x1
0x2fff: mov byte ptr [rsp+0x7c],0x0
0x3004: xor r12d,r12d
0x3007: mov byte ptr [rsp+0xf],0x0
0x300c: mov qword ptr [rsp+0x18],0x1
0x3015: mov qword ptr [rsp+0x48],rax
0x301a: mov r15d,0x1
0x3020: mov dword ptr [rsp+0x8],0x2
0x3028: jmp 0x2443
0x3240: movzx ebx,byte ptr [rsp+0xf]
0x3245: mov rbp,r11
0x3248: mov byte ptr [rsp+0xd],bl
0x324c: jmp 0x2ef9
0x3251: movzx edx,byte ptr [rsp+0xd]
0x3256: xor r12d,r12d
0x3259: jmp 0x2d60
0x325e: xor r10d,r10d
0x3261: jmp 0x2e1d
0x3281: mov r11,qword ptr [rsp+0x30]
0x3286: mov rsi,r14
0x3289: mov rcx,r13
0x328c: mov rax,rbx
0x328f: mov rdi,rbx
0x3292: movzx r8d,byte ptr [rsp+0x7d]
0x3298: movzx ebx,byte ptr [rsp+0x7e]
0x329d: mov r9,qword ptr [rsp+0x88]
0x32a5: cmp rsi,r11
0x32a8: movzx r10d,byte ptr [rsp+0x7f]
0x32ae: mov r15,qword ptr [rsp+0x80]
0x32b6: mov r14,qword ptr [rsp+0x40]
0x32bb: mov r13,qword ptr [rsp+0x70]
0x32c0: jae 0x32e8
0x32c2: cmp byte ptr [rcx],0x0
0x32c5: jne 0x32d7
0x32c7: jmp 0x32e8
0x32d0: cmp byte ptr [r9+rax],0x0
0x32d5: je 0x32e5
0x32d7: add rax,0x1
0x32db: lea rdx,[rbp+rax]
0x32e0: cmp r11,rdx
0x32e3: ja 0x32d0
0x32e5: mov rdi,rax
0x32e8: movzx edx,byte ptr [rsp+0xd]
0x32ed: xor r12d,r12d
0x32f0: jmp 0x2d56
0x32f5: mov rdi,rbx
0x32f8: movzx r8d,byte ptr [rsp+0x7d]
0x32fe: movzx ebx,byte ptr [rsp+0x7e]
0x3303: movzx r10d,byte ptr [rsp+0x7f]
0x3309: mov r15,qword ptr [rsp+0x80]
0x3311: xor r12d,r12d
0x3314: mov r14,qword ptr [rsp+0x40]
0x3319: mov r13,qword ptr [rsp+0x70]
0x331e: mov r11,qword ptr [rsp+0x30]
0x3323: movzx edx,byte ptr [rsp+0xd]
0x3328: jmp 0x2d56
0x335b: mov eax,edx
0x335d: jmp 0x28b7
0x346a: mov eax,edx
0x346c: mov rbx,qword ptr [rsp+0x48]
0x3471: test rbx,rbx
0x3474: je 0x34a2
0x3476: test al,al
0x3478: je 0x34a2
0x347a: movzx ecx,byte ptr [rbx]
0x347d: mov rax,rbx
0x3480: test cl,cl
0x3482: je 0x34a2
0x3484: mov rdx,r15
0x3487: sub rax,r15
0x348a: cmp r13,rdx
0x348d: jbe 0x3493
0x348f: mov byte ptr [r14+rdx],cl
0x3493: add rdx,0x1
0x3497: movzx ecx,byte ptr [rax+rdx]
0x349b: test cl,cl
0x349d: jne 0x348a
0x349f: mov r15,rdx
0x34a2: cmp r13,r15
0x34a5: jbe 0x2f49
0x34ab: mov byte ptr [r14+r15],0x0
0x34b0: jmp 0x2f49
0x34b5: cmp dword ptr [rsp+0x8],0x2
0x34ba: movzx ebx,byte ptr [rsp+0xf]
0x34bf: mov rbp,r11
0x34c2: sete al
0x34c5: mov byte ptr [rsp+0xd],bl
0x34c9: jmp 0x2ef9
0x350d: sub rsp,0x8
0x3511: mov r8d,0x5
0x3517: mov rcx,r11
0x351a: push qword ptr [rsp+0x68]
0x351e: push qword ptr [rsp+0x78]
0x3522: mov rdi,r14
0x3525: push qword ptr [rsp+0x38]
0x3529: mov r9d,dword ptr [rsp+0x98]
0x3531: mov rdx,qword ptr [rsp+0x30]
0x3536: mov rsi,qword ptr [rsp+0x70]
0x353b: call 0x2370
0x3540: add rsp,0x20
0x3544: mov r15,rax
0x3547: jmp 0x2f49
0x354c: movzx eax,byte ptr [rsp+0x7c]
0x3551: jmp 0x346c
0x3556: mov dword ptr [rsp+0x8],0x2
0x355e: jmp 0x2ef9
0x3563: call 0x1450
0x3568: mov byte ptr [rsp+0xd],0x0
0x356d: jmp 0x2fe1
0x357a: mov byte ptr [rsp+0xe],0x1
0x357f: xor eax,eax
0x3581: xor r12d,r12d
0x3584: mov qword ptr [rsp+0x50],0x0
0x358d: jmp 0x2b34
0x35a4: nop 
0x35a6: nop word ptr cs:[rax+rax]
0x369c: add rsp,0x20
0x36a0: mov r11,qword ptr [rsp+0x10]
0x36a5: cmp r11,rax
0x36a8: ja 0x3711
0x36aa: lea rsi,[rax+0x1]
0x36ae: lea rax,[rip+0x203a2b]
0x36b5: cmp r12,rax
0x36b8: mov qword ptr [rbx],rsi
0x36bb: je 0x36cf
0x36bd: mov rdi,r12
0x36c0: mov qword ptr [rsp+0x10],rsi
0x36c5: call 0x1380
0x36ca: mov rsi,qword ptr [rsp+0x10]
0x36cf: mov rdi,rsi
0x36d2: mov qword ptr [rsp+0x10],rsi
0x36d7: call 0x4530
0x36dc: sub rsp,0x8
0x36e0: mov qword ptr [rbx+0x8],rax
0x36e4: mov r8d,dword ptr [rbp]
0x36e8: push qword ptr [rbp+0x30]
0x36eb: push qword ptr [rbp+0x28]
0x36ee: mov rcx,r14
0x36f1: push r15
0x36f3: mov r9d,dword ptr [rsp+0x3c]
0x36f8: mov rdi,rax
0x36fb: mov rdx,qword ptr [rsp+0x28]
0x3700: mov rsi,qword ptr [rsp+0x30]
0x3705: mov r12,rax
0x3708: call 0x2370
0x370d: add rsp,0x20
0x3711: mov eax,dword ptr [rsp+0x18]
0x3715: mov dword ptr [r13],eax
0x3719: add rsp,0x28
0x371d: mov rax,r12
0x3720: pop rbx
0x3721: pop rbp
0x3722: pop r12
0x3724: pop r13
0x3726: pop r14
0x3728: pop r15
0x372a: ret 
0x3751: call 0x1390
0x3756: call 0x4780
0x375b: nop dword ptr [rax+rax]
0x3760: push r12
0x3762: push rbp
0x3763: push rbx
0x3764: mov rbx,rdi
0x3767: call 0x13a0
0x376c: mov r12d,dword ptr [rax]
0x376f: mov rbp,rax
0x3772: lea rax,[rip+0x203a67]
0x3779: test rbx,rbx
0x377c: mov esi,0x38
0x3781: cmove rbx,rax
0x3785: mov rdi,rbx
0x3788: call 0x4730
0x378d: mov dword ptr [rbp],r12d
0x3791: pop rbx
0x3792: pop rbp
0x3793: pop r12
0x3795: ret 
0x37a0: lea rax,[rip+0x203a39]
0x37a7: test rdi,rdi
0x37aa: cmove rdi,rax
0x37ae: mov eax,dword ptr [rdi]
0x37b0: ret 
0x37c0: lea rax,[rip+0x203a19]
0x37c7: test rdi,rdi
0x37ca: cmove rdi,rax
0x37ce: mov dword ptr [rdi],esi
0x37d0: ret 
0x37e0: lea rax,[rip+0x2039f9]
0x37e7: test rdi,rdi
0x37ea: mov ecx,esi
0x37ec: cmove rdi,rax
0x37f0: mov eax,esi
0x37f2: and ecx,0x1f
0x37f5: shr al,0x5
0x37f8: movzx eax,al
0x37fb: lea rdi,[rdi+rax*4+0x8]
0x3800: mov esi,dword ptr [rdi]
0x3802: mov eax,esi
0x3804: shr eax,cl
0x3806: xor edx,eax
0x3808: and eax,0x1
0x380b: and edx,0x1
0x380e: shl edx,cl
0x3810: xor edx,esi
0x3812: mov dword ptr [rdi],edx
0x3814: ret 
0x3820: lea rax,[rip+0x2039b9]
0x3827: test rdi,rdi
0x382a: cmove rdi,rax
0x382e: mov eax,dword ptr [rdi+0x4]
0x3831: mov dword ptr [rdi+0x4],esi
0x3834: ret 
0x3840: lea rax,[rip+0x203999]
0x3847: test rdi,rdi
0x384a: cmove rdi,rax
0x384e: test rsi,rsi
0x3851: mov dword ptr [rdi],0xa
0x3857: je 0x3867
0x3859: test rdx,rdx
0x385c: je 0x3867
0x385e: mov qword ptr [rdi+0x28],rsi
0x3862: mov qword ptr [rdi+0x30],rdx
0x3866: ret 
0x3867: sub rsp,0x8
0x386b: call 0x1390
0x3870: push r15
0x3872: push r14
0x3874: lea rax,[rip+0x203965]
0x387b: push r13
0x387d: push r12
0x387f: mov r13,rdi
0x3882: push rbp
0x3883: push rbx
0x3884: mov rbx,r8
0x3887: mov r14,rsi
0x388a: mov r15,rdx
0x388d: sub rsp,0x18
0x3891: test r8,r8
0x3894: cmove rbx,rax
0x3898: mov qword ptr [rsp+0x8],rcx
0x389d: call 0x13a0
0x38a2: mov r12d,dword ptr [rax]
0x38a5: mov rbp,rax
0x38a8: lea rax,[rbx+0x8]
0x38ac: sub rsp,0x8
0x38b0: mov r9d,dword ptr [rbx+0x4]
0x38b4: push qword ptr [rbx+0x30]
0x38b7: mov r8d,dword ptr [rbx]
0x38ba: push qword ptr [rbx+0x28]
0x38bd: mov rdx,r15
0x38c0: push rax
0x38c1: mov rcx,qword ptr [rsp+0x28]
0x38c6: mov rsi,r14
0x38c9: mov rdi,r13
0x38cc: call 0x2370
0x38d1: mov dword ptr [rbp],r12d
0x38d5: add rsp,0x38
0x38d9: pop rbx
0x38da: pop rbp
0x38db: pop r12
0x38dd: pop r13
0x38df: pop r14
0x38e1: pop r15
0x38e3: ret 
0x38f0: push r15
0x38f2: push r14
0x38f4: lea rax,[rip+0x2038e5]
0x38fb: push r13
0x38fd: push r12
0x38ff: mov r12,rdx
0x3902: push rbp
0x3903: push rbx
0x3904: mov rbx,rcx
0x3907: mov r14,rdi
0x390a: mov r15,rsi
0x390d: sub rsp,0x38
0x3911: test rcx,rcx
0x3914: cmove rbx,rax
0x3918: xor ebp,ebp
0x391a: call 0x13a0
0x391f: test r12,r12
0x3922: mov r13,rax
0x3925: mov eax,dword ptr [rax]
0x3927: sete bpl
0x392b: or ebp,dword ptr [rbx+0x4]
0x392e: lea r10,[rbx+0x8]
0x3932: sub rsp,0x8
0x3936: mov r8d,dword ptr [rbx]
0x3939: mov rcx,r15
0x393c: mov dword ptr [rsp+0x14],eax
0x3940: push qword ptr [rbx+0x30]
0x3943: mov rdx,r14
0x3946: push qword ptr [rbx+0x28]
0x3949: push r10
0x394b: xor esi,esi
0x394d: mov r9d,ebp
0x3950: xor edi,edi
0x3952: mov qword ptr [rsp+0x40],r10
0x3957: call 0x2370
0x395c: lea rsi,[rax+0x1]
0x3960: mov qword ptr [rsp+0x48],rax
0x3965: add rsp,0x20
0x3969: mov rdi,rsi
0x396c: mov qword ptr [rsp+0x18],rsi
0x3971: call 0x4530
0x3976: mov qword ptr [rsp+0x10],rax
0x397b: sub rsp,0x8
0x397f: push qword ptr [rbx+0x30]
0x3982: push qword ptr [rbx+0x28]
0x3985: mov r10,qword ptr [rsp+0x38]
0x398a: mov r9d,ebp
0x398d: mov r8d,dword ptr [rbx]
0x3990: mov rcx,r15
0x3993: mov rdx,r14
0x3996: mov rdi,rax
0x3999: push r10
0x399b: mov rsi,qword ptr [rsp+0x38]
0x39a0: call 0x2370
0x39a5: mov eax,dword ptr [rsp+0x2c]
0x39a9: add rsp,0x20
0x39ad: test r12,r12
0x39b0: mov dword ptr [r13],eax
0x39b4: je 0x39bf
0x39b6: mov r11,qword ptr [rsp+0x28]
0x39bb: mov qword ptr [r12],r11
0x39bf: mov rax,qword ptr [rsp+0x10]
0x39c4: add rsp,0x38
0x39c8: pop rbx
0x39c9: pop rbp
0x39ca: pop r12
0x39cc: pop r13
0x39ce: pop r14
0x39d0: pop r15
0x39d2: ret 
0x39e0: mov rcx,rdx
0x39e3: xor edx,edx
0x39e5: jmp 0x38f0
0x39f0: mov eax,dword ptr [rip+0x203662]
0x39f6: push r12
0x39f8: mov r12,qword ptr [rip+0x203661]
0x39ff: push rbp
0x3a00: push rbx
0x3a01: cmp eax,0x1
0x3a04: jle 0x3a31
0x3a06: sub eax,0x2
0x3a09: lea rbx,[r12+0x18]
0x3a0e: shl rax,0x4
0x3a12: lea rbp,[r12+rax+0x28]
0x3a17: nop word ptr [rax+rax]
0x3a20: mov rdi,qword ptr [rbx]
0x3a23: add rbx,0x10
0x3a27: call 0x1380
0x3a2c: cmp rbx,rbp
0x3a2f: jne 0x3a20
0x3a31: mov rdi,qword ptr [r12+0x8]
0x3a36: lea rbx,[rip+0x2036a3]
0x3a3d: cmp rdi,rbx
0x3a40: je 0x3a59
0x3a42: call 0x1380
0x3a47: mov qword ptr [rip+0x20361e],0x100
0x3a52: mov qword ptr [rip+0x20361f],rbx
0x3a59: lea rbx,[rip+0x203610]
0x3a60: cmp r12,rbx
0x3a63: je 0x3a74
0x3a65: mov rdi,r12
0x3a68: call 0x1380
0x3a6d: mov qword ptr [rip+0x2035ec],rbx
0x3a74: pop rbx
0x3a75: mov dword ptr [rip+0x2035d9],0x1
0x3a7f: pop rbp
0x3a80: pop r12
0x3a82: ret 
0x3a90: lea rcx,[rip+0x203749]
0x3a97: mov rdx,-0x1
0x3a9e: jmp 0x35b0
0x3ab0: lea rcx,[rip+0x203729]
0x3ab7: jmp 0x35b0
0x3ac0: lea rcx,[rip+0x203719]
0x3ac7: mov rsi,rdi
0x3aca: mov rdx,-0x1
0x3ad1: xor edi,edi
0x3ad3: jmp 0x35b0
0x3ae0: lea rcx,[rip+0x2036f9]
0x3ae7: mov rdx,rsi
0x3aea: mov rsi,rdi
0x3aed: xor edi,edi
0x3aef: jmp 0x35b0
0x3b00: sub rsp,0x48
0x3b04: mov rax,rdx
0x3b07: mov rdx,qword ptr fs:0x28
0x3b10: mov qword ptr [rsp+0x38],rdx
0x3b15: xor edx,edx
0x3b17: cmp esi,0xa
0x3b1a: je 0x3b84
0x3b1c: mov dword ptr [rsp],esi
0x3b1f: mov rcx,rsp
0x3b22: mov rdx,-0x1
0x3b29: mov rsi,rax
0x3b2c: mov qword ptr [rsp+0x4],0x0
0x3b35: mov qword ptr [rsp+0xc],0x0
0x3b3e: mov qword ptr [rsp+0x14],0x0
0x3b47: mov qword ptr [rsp+0x1c],0x0
0x3b50: mov qword ptr [rsp+0x24],0x0
0x3b59: mov qword ptr [rsp+0x2c],0x0
0x3b62: mov dword ptr [rsp+0x34],0x0
0x3b6a: call 0x35b0
0x3b6f: mov rcx,qword ptr [rsp+0x38]
0x3b74: xor rcx,qword ptr fs:0x28
0x3b7d: jne 0x3b89
0x3b7f: add rsp,0x48
0x3b83: ret 
0x3b84: call 0x1390
0x3b89: call 0x1450
0x3b8e: nop 
0x3b90: sub rsp,0x48
0x3b94: mov rax,rdx
0x3b97: mov rdx,rcx
0x3b9a: mov rcx,qword ptr fs:0x28
0x3ba3: mov qword ptr [rsp+0x38],rcx
0x3ba8: xor ecx,ecx
0x3baa: cmp esi,0xa
0x3bad: je 0x3c10
0x3baf: mov dword ptr [rsp],esi
0x3bb2: mov rcx,rsp
0x3bb5: mov rsi,rax
0x3bb8: mov qword ptr [rsp+0x4],0x0
0x3bc1: mov qword ptr [rsp+0xc],0x0
0x3bca: mov qword ptr [rsp+0x14],0x0
0x3bd3: mov qword ptr [rsp+0x1c],0x0
0x3bdc: mov qword ptr [rsp+0x24],0x0
0x3be5: mov qword ptr [rsp+0x2c],0x0
0x3bee: mov dword ptr [rsp+0x34],0x0
0x3bf6: call 0x35b0
0x3bfb: mov rdx,qword ptr [rsp+0x38]
0x3c00: xor rdx,qword ptr fs:0x28
0x3c09: jne 0x3c15
0x3c0b: add rsp,0x48
0x3c0f: ret 
0x3c10: call 0x1390
0x3c15: call 0x1450
0x3c1a: nop word ptr [rax+rax]
0x3c20: mov rdx,rsi
0x3c23: mov esi,edi
0x3c25: xor edi,edi
0x3c27: jmp 0x3b00
0x3c30: mov rcx,rdx
0x3c33: mov rdx,rsi
0x3c36: mov esi,edi
0x3c38: xor edi,edi
0x3c3a: jmp 0x3b90
0x3c40: sub rsp,0x48
0x3c44: mov ecx,edx
0x3c46: mov rax,qword ptr fs:0x28
0x3c4f: mov qword ptr [rsp+0x38],rax
0x3c54: xor eax,eax
0x3c56: mov rax,qword ptr [rip+0x2035b3]
0x3c5d: mov r8,rsp
0x3c60: and ecx,0x1f
0x3c63: movdqa xmm0,[rip+0x203575]
0x3c6b: mov qword ptr [rsp+0x30],rax
0x3c70: mov eax,edx
0x3c72: movaps [rsp],xmm0
0x3c76: shr al,0x5
0x3c79: movzx eax,al
0x3c7c: lea r9,[r8+rax*4+0x8]
0x3c81: movdqa xmm0,[rip+0x203567]
0x3c89: movaps [rsp+0x10],xmm0
0x3c8e: movdqa xmm0,[rip+0x20356a]
0x3c96: movaps [rsp+0x20],xmm0
0x3c9b: mov edx,dword ptr [r9]
0x3c9e: mov eax,edx
0x3ca0: shr eax,cl
0x3ca2: not eax
0x3ca4: and eax,0x1
0x3ca7: shl eax,cl
0x3ca9: mov rcx,r8
0x3cac: xor eax,edx
0x3cae: mov rdx,rsi
0x3cb1: mov rsi,rdi
0x3cb4: mov dword ptr [r9],eax
0x3cb7: xor edi,edi
0x3cb9: call 0x35b0
0x3cbe: mov rsi,qword ptr [rsp+0x38]
0x3cc3: xor rsi,qword ptr fs:0x28
0x3ccc: jne 0x3cd3
0x3cce: add rsp,0x48
0x3cd2: ret 
0x3cd3: call 0x1450
0x3cd8: nop dword ptr [rax+rax]
0x3ce0: movsx edx,sil
0x3ce4: mov rsi,-0x1
0x3ceb: jmp 0x3c40
0x3cf0: mov edx,0x3a
0x3cf5: mov rsi,-0x1
0x3cfc: jmp 0x3c40
0x3d10: mov edx,0x3a
0x3d15: jmp 0x3c40
0x3d20: sub rsp,0x48
0x3d24: mov rax,rdx
0x3d27: mov rdx,qword ptr fs:0x28
0x3d30: mov qword ptr [rsp+0x38],rdx
0x3d35: xor edx,edx
0x3d37: cmp esi,0xa
0x3d3a: je 0x3da4
0x3d3c: mov dword ptr [rsp],esi
0x3d3f: mov rcx,rsp
0x3d42: mov rdx,-0x1
0x3d49: mov rsi,rax
0x3d4c: mov qword ptr [rsp+0x4],0x0
0x3d55: mov qword ptr [rsp+0xc],0x4000000
0x3d5e: mov qword ptr [rsp+0x14],0x0
0x3d67: mov qword ptr [rsp+0x1c],0x0
0x3d70: mov qword ptr [rsp+0x24],0x0
0x3d79: mov qword ptr [rsp+0x2c],0x0
0x3d82: mov dword ptr [rsp+0x34],0x0
0x3d8a: call 0x35b0
0x3d8f: mov rcx,qword ptr [rsp+0x38]
0x3d94: xor rcx,qword ptr fs:0x28
0x3d9d: jne 0x3da9
0x3d9f: add rsp,0x48
0x3da3: ret 
0x3da4: call 0x1390
0x3da9: call 0x1450
0x3dae: nop 
0x3db0: sub rsp,0x48
0x3db4: mov r9,rcx
0x3db7: mov rcx,qword ptr [rip+0x203452]
0x3dbe: movdqa xmm0,[rip+0x20341a]
0x3dc6: mov rax,qword ptr fs:0x28
0x3dcf: mov qword ptr [rsp+0x38],rax
0x3dd4: xor eax,eax
0x3dd6: movaps [rsp],xmm0
0x3dda: test rsi,rsi
0x3ddd: mov qword ptr [rsp+0x30],rcx
0x3de2: mov dword ptr [rsp],0xa
0x3de9: movdqa xmm0,[rip+0x2033ff]
0x3df1: movaps [rsp+0x10],xmm0
0x3df6: movdqa xmm0,[rip+0x203402]
0x3dfe: movaps [rsp+0x20],xmm0
0x3e03: je 0x3e37
0x3e05: test rdx,rdx
0x3e08: je 0x3e37
0x3e0a: mov qword ptr [rsp+0x28],rsi
0x3e0f: mov qword ptr [rsp+0x30],rdx
0x3e14: mov rcx,rsp
0x3e17: mov rdx,r8
0x3e1a: mov rsi,r9
0x3e1d: call 0x35b0
0x3e22: mov rdi,qword ptr [rsp+0x38]
0x3e27: xor rdi,qword ptr fs:0x28
0x3e30: jne 0x3e3c
0x3e32: add rsp,0x48
0x3e36: ret 
0x3e37: call 0x1390
0x3e3c: call 0x1450
0x3e41: nop dword ptr [rax+rax]
0x3e46: nop word ptr cs:[rax+rax]
0x3e50: mov r8,-0x1
0x3e57: jmp 0x3db0
0x3e60: mov rcx,rdx
0x3e63: mov r8,-0x1
0x3e6a: mov rdx,rsi
0x3e6d: mov rsi,rdi
0x3e70: xor edi,edi
0x3e72: jmp 0x3db0
0x3e80: mov r8,rcx
0x3e83: mov rcx,rdx
0x3e86: mov rdx,rsi
0x3e89: mov rsi,rdi
0x3e8c: xor edi,edi
0x3e8e: jmp 0x3db0
0x3ea0: lea rcx,[rip+0x203179]
0x3ea7: jmp 0x35b0
0x3eb0: lea rcx,[rip+0x203169]
0x3eb7: mov rdx,rsi
0x3eba: mov rsi,rdi
0x3ebd: xor edi,edi
0x3ebf: jmp 0x35b0
0x3ed0: lea rcx,[rip+0x203149]
0x3ed7: mov rdx,-0x1
0x3ede: jmp 0x35b0
0x4048: mov r8,rcx
0x404b: mov rcx,rdx
0x404e: lea rdx,[rip+0x16bf]
0x4055: mov esi,0x1
0x405a: xor eax,eax
0x405c: call 0x1640
0x4061: jmp 0x3f4c
0x425d: push r12
0x425f: push r15
0x4261: push r14
0x4263: mov r8,qword ptr [rsp+0x20]
0x4268: mov rcx,rbx
0x426b: mov rdx,rax
0x426e: mov rdi,rbp
0x4271: mov esi,0x1
0x4276: xor eax,eax
0x4278: call 0x1640
0x427d: add rsp,0x20
0x4281: add rsp,0x28
0x4285: pop rbx
0x4286: pop rbp
0x4287: pop r12
0x4289: pop r13
0x428b: pop r14
0x428d: pop r15
0x428f: ret 
0x42c9: push r12
0x42cb: push r15
0x42cd: push r14
0x42cf: mov r9,qword ptr [rsp+0x28]
0x42d4: jmp 0x4263
0x4330: xor r9d,r9d
0x4333: cmp qword ptr [r8],0x0
0x4337: je 0x434b
0x4339: nop dword ptr [rax]
0x4340: add r9,0x1
0x4344: cmp qword ptr [r8+r9*8],0x0
0x4349: jne 0x4340
0x434b: jmp 0x3f10
0x4350: sub rsp,0x68
0x4354: mov r10,r8
0x4357: xor r9d,r9d
0x435a: mov rax,qword ptr fs:0x28
0x4363: mov qword ptr [rsp+0x58],rax
0x4368: xor eax,eax
0x436a: mov r8,rsp
0x436d: nop dword ptr [rax]
0x4370: mov eax,dword ptr [r10]
0x4373: cmp eax,0x2f
0x4376: ja 0x43ba
0x4378: mov r11d,eax
0x437b: add r11,qword ptr [r10+0x10]
0x437f: add eax,0x8
0x4382: mov dword ptr [r10],eax
0x4385: mov rax,qword ptr [r11]
0x4388: test rax,rax
0x438b: mov qword ptr [r8+r9*8],rax
0x438f: je 0x439b
0x4391: add r9,0x1
0x4395: cmp r9,0xa
0x4399: jne 0x4370
0x439b: call 0x3f10
0x43a0: mov rax,qword ptr [rsp+0x58]
0x43a5: xor rax,qword ptr fs:0x28
0x43ae: jne 0x43b5
0x43b0: add rsp,0x68
0x43b4: ret 
0x43b5: call 0x1450
0x43ba: mov r11,qword ptr [r10+0x8]
0x43be: lea rax,[r11+0x8]
0x43c2: mov qword ptr [r10+0x8],rax
0x43c6: jmp 0x4385
0x4490: call 0x1450
0x449c: mov rax,rbx
0x449f: add rbx,0x8
0x44a3: jmp 0x4456
0x44b0: push rbx
0x44b1: lea rsi,[rip+0x12aa]
0x44b8: mov edx,0x5
0x44bd: xor edi,edi
0x44bf: call 0x1420
0x44c4: lea rdx,[rip+0x12ac]
0x44cb: mov rsi,rax
0x44ce: mov edi,0x1
0x44d3: xor eax,eax
0x44d5: call 0x15d0
0x44da: lea rsi,[rip+0x12ac]
0x44e1: mov edx,0x5
0x44e6: xor edi,edi
0x44e8: call 0x1420
0x44ed: lea rcx,[rip+0xbb4]
0x44f4: lea rdx,[rip+0x986]
0x44fb: mov rsi,rax
0x44fe: mov edi,0x1
0x4503: xor eax,eax
0x4505: call 0x15d0
0x450a: mov rbx,qword ptr [rip+0x202b77]
0x4511: lea rsi,[rip+0x14a8]
0x4518: xor edi,edi
0x451a: mov edx,0x5
0x451f: call 0x1420
0x4524: mov rsi,rbx
0x4527: mov rdi,rax
0x452a: pop rbx
0x452b: jmp 0x14f0
0x4530: push rbx
0x4531: mov rbx,rdi
0x4534: call 0x1560
0x4539: test rax,rax
0x453c: jne 0x4543
0x453e: test rbx,rbx
0x4541: jne 0x4545
0x4543: pop rbx
0x4544: ret 
0x4545: call 0x4780
0x454a: nop word ptr [rax+rax]
0x4550: mov rax,rdi
0x4553: mul rsi
0x4556: mov rdi,rax
0x4559: seto al
0x455c: test rdi,rdi
0x455f: js 0x456b
0x4561: movzx eax,al
0x4564: test rax,rax
0x4567: jne 0x456b
0x4569: jmp 0x4530
0x456b: sub rsp,0x8
0x456f: call 0x4780
0x4574: nop 
0x4576: nop word ptr cs:[rax+rax]
0x4580: jmp 0x4530
0x4599: test rdi,rdi
0x459c: jne 0x45b8
0x45b8: call 0x1380
0x45bd: xor eax,eax
0x45bf: pop rbx
0x45c0: ret 
0x45c6: nop word ptr cs:[rax+rax]
0x45d0: mov rax,rsi
0x45d3: mul rdx
0x45d6: mov rsi,rax
0x45d9: seto al
0x45dc: test rsi,rsi
0x45df: js 0x45eb
0x45e1: movzx eax,al
0x45e4: test rax,rax
0x45e7: jne 0x45eb
0x45e9: jmp 0x4590
0x45eb: sub rsp,0x8
0x45ef: call 0x4780
0x45f4: nop 
0x45f6: nop word ptr cs:[rax+rax]
0x4600: test rdi,rdi
0x4603: mov r9,rdx
0x4606: mov rcx,qword ptr [rsi]
0x4609: je 0x4640
0x460b: xor edx,edx
0x460d: movabsq rax,0x5555555555555554
0x4617: div r9
0x461a: cmp rax,rcx
0x461d: jbe 0x465b
0x461f: mov rax,rcx
0x4622: shr rax, 1
0x4625: lea rcx,[rax+rcx+0x1]
0x462a: mov qword ptr [rsi],rcx
0x462d: imul rcx,r9
0x4631: mov rsi,rcx
0x4634: jmp 0x4590
0x4640: test rcx,rcx
0x4643: je 0x4668
0x4645: mov rax,rcx
0x4648: mul r9
0x464b: seto dl
0x464e: test rax,rax
0x4651: movzx edx,dl
0x4654: js 0x465b
0x4656: test rdx,rdx
0x4659: je 0x462a
0x465b: sub rsp,0x8
0x465f: call 0x4780
0x4664: nop dword ptr [rax]
0x4668: xor edx,edx
0x466a: mov eax,0x80
0x466f: xor r8d,r8d
0x4672: div r9
0x4675: test rax,rax
0x4678: sete r8b
0x467c: lea rcx,[r8+rax]
0x4680: jmp 0x4645
0x4690: test rdi,rdi
0x4693: mov rax,qword ptr [rsi]
0x4696: je 0x46c0
0x4698: movabsq rdx,0x5555555555555553
0x46a2: cmp rax,rdx
0x46a5: ja 0x46d1
0x46a7: mov rdx,rax
0x46aa: shr rdx, 1
0x46ad: lea rax,[rdx+rax+0x1]
0x46b2: mov qword ptr [rsi],rax
0x46b5: mov rsi,rax
0x46b8: jmp 0x4590
0x46c0: test rax,rax
0x46c3: mov edx,0x80
0x46c8: cmove rax,rdx
0x46cc: test rax,rax
0x46cf: jns 0x46b2
0x46d1: sub rsp,0x8
0x46d5: call 0x4780
0x46da: nop word ptr [rax+rax]
0x46e0: push rbx
0x46e1: mov rbx,rdi
0x46e4: call 0x4530
0x46e9: mov rdx,rbx
0x46ec: xor esi,esi
0x46ee: mov rdi,rax
0x46f1: pop rbx
0x46f2: jmp 0x14d0
0x4700: mov rax,rdi
0x4703: sub rsp,0x8
0x4707: mul rsi
0x470a: seto dl
0x470d: test rax,rax
0x4710: js 0x4729
0x4712: movzx edx,dl
0x4715: test rdx,rdx
0x4718: jne 0x4729
0x471a: call 0x1500
0x471f: test rax,rax
0x4722: je 0x4729
0x4724: add rsp,0x8
0x4728: ret 
0x4729: call 0x4780
0x472e: nop 
0x4730: push rbp
0x4731: push rbx
0x4732: mov rbp,rdi
0x4735: mov rdi,rsi
0x4738: mov rbx,rsi
0x473b: sub rsp,0x8
0x473f: call 0x4530
0x4744: add rsp,0x8
0x4748: mov rdx,rbx
0x474b: mov rsi,rbp
0x474e: pop rbx
0x474f: pop rbp
0x4750: mov rdi,rax
0x4753: jmp 0x1520
0x4760: push rbx
0x4761: mov rbx,rdi
0x4764: call 0x1440
0x4769: mov rdi,rbx
0x476c: lea rsi,[rax+0x1]
0x4770: pop rbx
0x4771: jmp 0x4730
0x47b0: call 0x1390
0x47b5: nop word ptr cs:[rax+rax]
0x47bf: nop 
0x47e7: nop word ptr [rax+rax]
0x47f0: push r13
0x47f2: push r12
0x47f4: mov r13,rsi
0x47f7: push rbp
0x47f8: push rbx
0x47f9: mov rbx,rdi
0x47fc: mov r12,rdx
0x47ff: sub rsp,0x18
0x4803: mov rax,qword ptr fs:0x28
0x480c: mov qword ptr [rsp+0x8],rax
0x4811: xor eax,eax
0x4813: lea rax,[rsp+0x4]
0x4818: test rdi,rdi
0x481b: cmove rbx,rax
0x481f: mov rdi,rbx
0x4822: call 0x1480
0x4827: cmp rax,-0x3
0x482b: mov rbp,rax
0x482e: jbe 0x4850
0x4830: test r12,r12
0x4833: je 0x4850
0x4835: xor edi,edi
0x4837: call 0x4900
0x483c: test al,al
0x483e: jne 0x4850
0x4840: movzx eax,byte ptr [r13]
0x4845: mov ebp,0x1
0x484a: mov dword ptr [rbx],eax
0x484c: nop dword ptr [rax]
0x4850: mov rdx,qword ptr [rsp+0x8]
0x4855: xor rdx,qword ptr fs:0x28
0x485e: mov rax,rbp
0x4861: jne 0x486e
0x4863: add rsp,0x18
0x4867: pop rbx
0x4868: pop rbp
0x4869: pop r12
0x486b: pop r13
0x486d: ret 
0x486e: call 0x1450
0x4873: nop word ptr cs:[rax+rax]
0x487d: nop dword ptr [rax]
0x4880: push r12
0x4882: push rbp
0x4883: mov rbp,rdi
0x4886: push rbx
0x4887: call 0x13d0
0x488c: mov ebx,dword ptr [rbp]
0x488f: mov rdi,rbp
0x4892: mov r12,rax
0x4895: call 0x4c30
0x489a: and ebx,0x20
0x489d: test ebx,ebx
0x489f: jne 0x48b8
0x48a1: test eax,eax
0x48a3: je 0x48af
0x48a5: test r12,r12
0x48a8: mov eax,0xffffffff
0x48ad: je 0x48e8
0x48af: pop rbx
0x48b0: pop rbp
0x48b1: pop r12
0x48b3: ret 
0x48b8: test eax,eax
0x48ba: jne 0x48d8
0x48bc: call 0x13a0
0x48c1: mov dword ptr [rax],0x0
0x48c7: mov eax,0xffffffff
0x48cc: pop rbx
0x48cd: pop rbp
0x48ce: pop r12
0x48d0: ret 
0x48d8: pop rbx
0x48d9: mov eax,0xffffffff
0x48de: pop rbp
0x48df: pop r12
0x48e1: ret 
0x48e8: call 0x13a0
0x48ed: cmp dword ptr [rax],0x9
0x48f0: pop rbx
0x48f1: pop rbp
0x48f2: pop r12
0x48f4: setne al
0x48f7: movzx eax,al
0x48fa: neg eax
0x48fc: ret 
0x4900: sub rsp,0x8
0x4904: xor esi,esi
0x4906: call 0x15c0
0x490b: mov rdx,rax
0x490e: mov eax,0x1
0x4913: test rdx,rdx
0x4916: je 0x4935
0x4918: lea rdi,[rip+0x1161]
0x491f: mov ecx,0x2
0x4924: mov rsi,rdx
0x4927: rep cmpsb [rsi],es:[rdi]
0x4929: seta cl
0x492c: sbb cl,0x0
0x492f: xor eax,eax
0x4931: test cl,cl
0x4933: jne 0x4940
0x4935: add rsp,0x8
0x4939: ret 
0x4940: lea rdi,[rip+0x113b]
0x4947: mov ecx,0x6
0x494c: mov rsi,rdx
0x494f: rep cmpsb [rsi],es:[rdi]
0x4951: seta al
0x4954: sbb al,0x0
0x4956: test al,al
0x4958: setne al
0x495b: add rsp,0x8
0x495f: ret 
0x4960: sub rsp,0x8
0x4964: mov edi,0xe
0x4969: call 0x1580
0x496e: test rax,rax
0x4971: je 0x4990
0x4973: cmp byte ptr [rax],0x0
0x4976: lea rdx,[rip+0x110b]
0x497d: cmove rax,rdx
0x4981: add rsp,0x8
0x4985: ret 
0x4990: lea rax,[rip+0x10f1]
0x4997: add rsp,0x8
0x499b: ret 
0x4c27: call 0x1450
0x4c2c: nop dword ptr [rax]
0x4c30: push r12
0x4c32: push rbp
0x4c33: push rbx
0x4c34: mov rbx,rdi
0x4c37: call 0x1530
0x4c3c: test eax,eax
0x4c3e: mov rdi,rbx
0x4c41: js 0x4c97
0x4c43: call 0x15a0
0x4c48: test eax,eax
0x4c4a: jne 0x4c78
0x4c4c: mov rdi,rbx
0x4c4f: call 0x4cb0
0x4c54: test eax,eax
0x4c56: je 0x4c94
0x4c58: call 0x13a0
0x4c5d: mov r12d,dword ptr [rax]
0x4c60: mov rdi,rbx
0x4c63: mov rbp,rax
0x4c66: call 0x13f0
0x4c6b: test r12d,r12d
0x4c6e: jne 0x4ca0
0x4c70: pop rbx
0x4c71: pop rbp
0x4c72: pop r12
0x4c74: ret 
0x4c78: mov rdi,rbx
0x4c7b: call 0x1530
0x4c80: xor esi,esi
0x4c82: mov edx,0x1
0x4c87: mov edi,eax
0x4c89: call 0x14c0
0x4c8e: cmp rax,-0x1
0x4c92: jne 0x4c4c
0x4c94: mov rdi,rbx
0x4c97: pop rbx
0x4c98: pop rbp
0x4c99: pop r12
0x4c9b: jmp 0x13f0
0x4ca0: mov dword ptr [rbp],r12d
0x4ca4: mov eax,0xffffffff
0x4ca9: jmp 0x4c70
0x4cb0: test rdi,rdi
0x4cb3: push rbx
0x4cb4: mov rbx,rdi
0x4cb7: je 0x4cca
0x4cb9: call 0x15a0
0x4cbe: test eax,eax
0x4cc0: je 0x4cca
0x4cc2: test dword ptr [rbx],0x100
0x4cc8: jne 0x4cd8
0x4cca: mov rdi,rbx
0x4ccd: pop rbx
0x4cce: jmp 0x1570
0x4cd8: mov rdi,rbx
0x4cdb: mov edx,0x1
0x4ce0: xor esi,esi
0x4ce2: call 0x4cf0
0x4ce7: mov rdi,rbx
0x4cea: pop rbx
0x4ceb: jmp 0x1570
0x4cf0: mov rax,qword ptr [rdi+0x8]
0x4cf4: cmp qword ptr [rdi+0x10],rax
0x4cf8: je 0x4d00
0x4cfa: jmp 0x1600
0x4d00: mov rax,qword ptr [rdi+0x20]
0x4d04: cmp qword ptr [rdi+0x28],rax
0x4d08: jne 0x4cfa
0x4d0a: cmp qword ptr [rdi+0x48],0x0
0x4d0f: jne 0x4cfa
0x4d11: push r12
0x4d13: push rbp
0x4d14: mov r12d,edx
0x4d17: push rbx
0x4d18: mov rbp,rsi
0x4d1b: mov rbx,rdi
0x4d1e: call 0x1530
0x4d23: mov edx,r12d
0x4d26: mov rsi,rbp
0x4d29: mov edi,eax
0x4d2b: call 0x14c0
0x4d30: cmp rax,-0x1
0x4d34: je 0x4d42
0x4d36: and dword ptr [rbx],-0x11
0x4d39: mov qword ptr [rbx+0x90],rax
0x4d40: xor eax,eax
0x4d42: pop rbx
0x4d43: pop rbp
0x4d44: pop r12
0x4d46: ret 
0x4d50: push r15
0x4d52: push r14
0x4d54: mov r15,rdx
0x4d57: push r13
0x4d59: push r12
0x4d5b: lea r12,[rip+0x201e0e]
0x4d62: push rbp
0x4d63: lea rbp,[rip+0x201e0e]
0x4d6a: push rbx
0x4d6b: mov r13d,edi
0x4d6e: mov r14,rsi
0x4d71: sub rbp,r12
0x4d74: sub rsp,0x8
0x4d78: sar rbp,0x3
0x4d7c: call 0x1358
0x4d81: test rbp,rbp
0x4d84: je 0x4da6
0x4d86: xor ebx,ebx
0x4d88: nop dword ptr [rax+rax]
0x4d90: mov rdx,r15
0x4d93: mov rsi,r14
0x4d96: mov edi,r13d
0x4d99: call qword ptr [r12+rbx*8]
0x4d9d: add rbx,0x1
0x4da1: cmp rbp,rbx
0x4da4: jne 0x4d90
0x4da6: add rsp,0x8
0x4daa: pop rbx
0x4dab: pop rbp
0x4dac: pop r12
0x4dae: pop r13
0x4db0: pop r14
0x4db2: pop r15
0x4db4: ret 
0x4dc0: rep ret 
