0x1220: sub rsp,0x8
0x1224: mov rax,qword ptr [rip+0x205db5]
0x122b: test rax,rax
0x122e: je 0x1232
0x1230: call rax
0x1232: add rsp,0x8
0x1236: ret 
0x1246: jmp qword ptr [rip+0x205c2c]
0x1250: jmp qword ptr [rip+0x205c2a]
0x1290: jmp qword ptr [rip+0x205c0a]
0x12a0: jmp qword ptr [rip+0x205c02]
0x12e0: jmp qword ptr [rip+0x205be2]
0x1320: jmp qword ptr [rip+0x205bc2]
0x1330: jmp qword ptr [rip+0x205bba]
0x1350: jmp qword ptr [rip+0x205baa]
0x1370: jmp qword ptr [rip+0x205b9a]
0x1390: jmp qword ptr [rip+0x205b8a]
0x13b0: jmp qword ptr [rip+0x205b7a]
0x13c0: jmp qword ptr [rip+0x205b72]
0x13d0: jmp qword ptr [rip+0x205b6a]
0x13e0: jmp qword ptr [rip+0x205b62]
0x13f0: jmp qword ptr [rip+0x205b5a]
0x1400: jmp qword ptr [rip+0x205b52]
0x1410: jmp qword ptr [rip+0x205b4a]
0x1470: jmp qword ptr [rip+0x205b1a]
0x14c0: jmp qword ptr [rip+0x205af2]
0x14d0: jmp qword ptr [rip+0x205aea]
0x14e0: jmp qword ptr [rip+0x205ae2]
0x14f0: jmp qword ptr [rip+0x205afa]
0x15a2: nop word ptr [rax+rax]
0x15dc: nop dword ptr [rax]
0x1660: lea rsi,[rip+0x2f9f]
0x1667: mov rbx,rax
0x166a: xor edi,edi
0x166c: mov edx,0x5
0x1671: call 0x1300
0x1676: mov rcx,rbx
0x1679: mov rdx,rax
0x167c: xor esi,esi
0x167e: xor edi,edi
0x1680: xor eax,eax
0x1682: call 0x1460
0x1687: jmp 0x1598
0x16ba: hlt 
0x16bb: nop dword ptr [rax+rax]
0x16c0: lea rdi,[rip+0x2059b9]
0x16c7: push rbp
0x16c8: lea rax,[rip+0x2059b1]
0x16cf: cmp rax,rdi
0x16d2: mov rbp,rsp
0x16d5: je 0x16f0
0x16d7: mov rax,qword ptr [rip+0x2058f2]
0x16de: test rax,rax
0x16e1: je 0x16f0
0x16e3: pop rbp
0x16e4: jmp rax
0x16f0: pop rbp
0x16f1: ret 
0x1700: lea rdi,[rip+0x205979]
0x1707: lea rsi,[rip+0x205972]
0x170e: push rbp
0x170f: sub rsi,rdi
0x1712: mov rbp,rsp
0x1715: sar rsi,0x3
0x1719: mov rax,rsi
0x171c: shr rax,0x3f
0x1720: add rsi,rax
0x1723: sar rsi, 1
0x1726: je 0x1740
0x1728: mov rax,qword ptr [rip+0x2058b9]
0x172f: test rax,rax
0x1732: je 0x1740
0x1734: pop rbp
0x1735: jmp rax
0x1740: pop rbp
0x1741: ret 
0x1761: push rbp
0x1762: mov rbp,rsp
0x1765: je 0x1773
0x1767: mov rdi,qword ptr [rip+0x20589a]
0x176e: call 0x14f0
0x1773: call 0x16c0
0x1778: mov byte ptr [rip+0x205929],0x1
0x177f: pop rbp
0x1780: ret 
0x1790: push rbp
0x1791: mov rbp,rsp
0x1794: pop rbp
0x1795: jmp 0x1700
0x1af0: mov qword ptr [rip+0x2055c1],rdi
0x1af7: ret 
0x1b00: mov byte ptr [rip+0x2055a9],dil
0x1b07: ret 
0x1b10: push rbp
0x1b11: push rbx
0x1b12: sub rsp,0x8
0x1b16: mov rdi,qword ptr [rip+0x20556b]
0x1b1d: call 0x4230
0x1b22: test eax,eax
0x1b24: je 0x1b3c
0x1b26: call 0x1270
0x1b2b: cmp byte ptr [rip+0x20557e],0x0
0x1b32: mov rbx,rax
0x1b35: je 0x1b53
0x1b37: cmp dword ptr [rax],0x20
0x1b3a: jne 0x1b53
0x1b3c: mov rdi,qword ptr [rip+0x20555d]
0x1b43: call 0x4230
0x1b48: test eax,eax
0x1b4a: jne 0x1b92
0x1b4c: add rsp,0x8
0x1b50: pop rbx
0x1b51: pop rbp
0x1b52: ret 
0x1b53: lea rsi,[rip+0x2ca6]
0x1b5a: xor edi,edi
0x1b5c: mov edx,0x5
0x1b61: call 0x1300
0x1b66: mov rdi,qword ptr [rip+0x20554b]
0x1b6d: mov rbp,rax
0x1b70: test rdi,rdi
0x1b73: je 0x1b9d
0x1b75: call 0x36d0
0x1b7a: mov esi,dword ptr [rbx]
0x1b7c: lea rdx,[rip+0x2c89]
0x1b83: mov rcx,rax
0x1b86: mov r8,rbp
0x1b89: xor edi,edi
0x1b8b: xor eax,eax
0x1b8d: call 0x1460
0x1b92: mov edi,dword ptr [rip+0x205480]
0x1b98: call 0x1290
0x1b9d: mov esi,dword ptr [rbx]
0x1b9f: lea rdx,[rip+0x2c6a]
0x1ba6: mov rcx,rax
0x1ba9: xor edi,edi
0x1bab: xor eax,eax
0x1bad: call 0x1460
0x1bb2: jmp 0x1b92
0x1c5f: nop 
0x1c60: push rbp
0x1c61: push rbx
0x1c62: mov rbp,rdi
0x1c65: mov ebx,esi
0x1c67: sub rsp,0x8
0x1c6b: call 0x4310
0x1c70: movzx edx,byte ptr [rax]
0x1c73: and edx,-0x21
0x1c76: cmp dl,0x55
0x1c79: je 0x1cf0
0x1c7b: cmp dl,0x47
0x1c7e: je 0x1ca0
0x1c80: lea rax,[rip+0x2be4]
0x1c87: lea rdx,[rip+0x2bdf]
0x1c8e: cmp ebx,0x9
0x1c91: cmovne rax,rdx
0x1c95: add rsp,0x8
0x1c99: pop rbx
0x1c9a: pop rbp
0x1c9b: ret 
0x1ca0: movzx edx,byte ptr [rax+0x1]
0x1ca4: and edx,-0x21
0x1ca7: cmp dl,0x42
0x1caa: jne 0x1c80
0x1cac: cmp byte ptr [rax+0x2],0x31
0x1cb0: jne 0x1c80
0x1cb2: cmp byte ptr [rax+0x3],0x38
0x1cb6: jne 0x1c80
0x1cb8: cmp byte ptr [rax+0x4],0x30
0x1cbc: jne 0x1c80
0x1cbe: cmp byte ptr [rax+0x5],0x33
0x1cc2: jne 0x1c80
0x1cc4: cmp byte ptr [rax+0x6],0x30
0x1cc8: jne 0x1c80
0x1cca: cmp byte ptr [rax+0x7],0x0
0x1cce: jne 0x1c80
0x1cd0: cmp byte ptr [rbp],0x60
0x1cd4: lea rax,[rip+0x2b89]
0x1cdb: lea rdx,[rip+0x2b86]
0x1ce2: cmovne rax,rdx
0x1ce6: add rsp,0x8
0x1cea: pop rbx
0x1ceb: pop rbp
0x1cec: ret 
0x1cf0: movzx edx,byte ptr [rax+0x1]
0x1cf4: and edx,-0x21
0x1cf7: cmp dl,0x54
0x1cfa: jne 0x1c80
0x1cfc: movzx edx,byte ptr [rax+0x2]
0x1d00: and edx,-0x21
0x1d03: cmp dl,0x46
0x1d06: jne 0x1c80
0x1d0c: cmp byte ptr [rax+0x3],0x2d
0x1d10: jne 0x1c80
0x1d16: cmp byte ptr [rax+0x4],0x38
0x1d1a: jne 0x1c80
0x1d20: cmp byte ptr [rax+0x5],0x0
0x1d24: jne 0x1c80
0x1d2a: cmp byte ptr [rbp],0x60
0x1d2e: lea rax,[rip+0x2b27]
0x1d35: lea rdx,[rip+0x2b24]
0x1d3c: cmovne rax,rdx
0x1d40: add rsp,0x8
0x1d44: pop rbx
0x1d45: pop rbp
0x1d46: ret 
0x1e23: xor r11d,r11d
0x1e26: mov rax,rbp
0x1e29: mov r8d,r12d
0x1e2c: mov rbp,r11
0x1e2f: mov r11,rax
0x1e32: nop word ptr [rax+rax]
0x1e38: cmp r11,rbp
0x1e3b: setne r12b
0x1e3f: cmp r11,-0x1
0x1e43: jne 0x1e52
0x1e45: mov rax,qword ptr [rsp+0x10]
0x1e4a: cmp byte ptr [rax+rbp],0x0
0x1e4e: setne r12b
0x1e52: test r12b,r12b
0x1e55: je 0x24b0
0x1e5b: cmp dword ptr [rsp+0x8],0x2
0x1e60: mov rdi,qword ptr [rsp+0x10]
0x1e65: lea r9,[rdi+rbp]
0x1e69: setne al
0x1e6c: and al,byte ptr [rsp+0xd]
0x1e70: mov r10d,eax
0x1e73: je 0x1f20
0x1e79: mov rax,qword ptr [rsp+0x18]
0x1e7e: test rax,rax
0x1e81: je 0x22b0
0x1e87: cmp r11,-0x1
0x1e8b: lea rbx,[rbp+rax]
0x1e90: jne 0x1ec0
0x1e92: cmp rax,0x1
0x1e96: jbe 0x1ec0
0x1e98: mov byte ptr [rsp+0x38],r8b
0x1e9d: mov byte ptr [rsp+0x30],r10b
0x1ea2: mov qword ptr [rsp+0x28],r9
0x1ea7: call 0x1320
0x1eac: movzx r8d,byte ptr [rsp+0x38]
0x1eb2: movzx r10d,byte ptr [rsp+0x30]
0x1eb8: mov r11,rax
0x1ebb: mov r9,qword ptr [rsp+0x28]
0x1ec0: cmp rbx,r11
0x1ec3: mov byte ptr [rsp+0x28],r10b
0x1ec8: ja 0x2480
0x1ece: mov rdx,qword ptr [rsp+0x18]
0x1ed3: mov rsi,qword ptr [rsp+0x48]
0x1ed8: mov rdi,r9
0x1edb: mov qword ptr [rsp+0x40],r11
0x1ee0: mov byte ptr [rsp+0x38],r8b
0x1ee5: mov qword ptr [rsp+0x30],r9
0x1eea: call 0x1390
0x1eef: test eax,eax
0x1ef1: mov r9,qword ptr [rsp+0x30]
0x1ef6: movzx r8d,byte ptr [rsp+0x38]
0x1efc: mov r11,qword ptr [rsp+0x40]
0x1f01: jne 0x2480
0x1f07: cmp byte ptr [rsp+0xf],0x0
0x1f0c: movzx r10d,byte ptr [rsp+0x28]
0x1f12: jne 0x2e95
0x1f18: nop dword ptr [rax+rax]
0x1f20: movzx ebx,byte ptr [r9]
0x1f24: cmp bl,0x7e
0x1f27: ja 0x2248
0x1f2d: lea rcx,[rip+0x29b8]
0x1f34: movzx edx,bl
0x1f37: movsxd rax,dword ptr [rcx+rdx*4]
0x1f3b: add rax,rcx
0x1f3e: jmp rax
0x1f78: cmp byte ptr [rsp+0xd],0x1
0x1f7d: jne 0x2092
0x1f83: test dl,dl
0x1f85: jne 0x2092
0x1f8b: mov rsi,qword ptr [rsp+0x20]
0x1f90: test rsi,rsi
0x1f93: je 0x1fa9
0x1f95: mov edx,ebx
0x1f97: shr dl,0x5
0x1f9a: movzx edx,dl
0x1f9d: mov edx,dword ptr [rsi+rdx*4]
0x1fa0: btl edx,ebx
0x1fa3: jb 0x20f3
0x1fa9: test r10b,r10b
0x1fac: jne 0x20f3
0x1fb2: xor eax,0x1
0x1fb5: add rbp,0x1
0x1fb9: and eax,r8d
0x1fbc: test al,al
0x1fbe: je 0x1fe0
0x1fc0: cmp r13,r15
0x1fc3: jbe 0x1fca
0x1fc5: mov byte ptr [r14+r15],0x27
0x1fca: lea rax,[r15+0x1]
0x1fce: cmp r13,rax
0x1fd1: jbe 0x1fd9
0x1fd3: mov byte ptr [r14+r15+0x1],0x27
0x1fd9: add r15,0x2
0x1fdd: xor r8d,r8d
0x1fe0: cmp r15,r13
0x1fe3: jae 0x1fe9
0x1fe5: mov byte ptr [r14+r15],bl
0x1fe9: movzx edi,byte ptr [rsp+0xe]
0x1fee: add r15,0x1
0x1ff2: mov eax,0x0
0x1ff7: test r12b,r12b
0x1ffa: cmove edi,eax
0x1ffd: mov byte ptr [rsp+0xe],dil
0x2002: jmp 0x1e38
0x2092: cmp byte ptr [rsp+0xf],0x0
0x2097: jne 0x1f8b
0x209d: jmp 0x1fa9
0x20f3: cmp dword ptr [rsp+0x8],0x2
0x20f8: sete dl
0x20fb: cmp byte ptr [rsp+0xf],0x0
0x2100: mov eax,edx
0x2102: jne 0x2958
0x2108: mov eax,r8d
0x210b: xor eax,0x1
0x210e: and al,dl
0x2110: je 0x2141
0x2112: cmp r13,r15
0x2115: jbe 0x211c
0x2117: mov byte ptr [r14+r15],0x27
0x211c: lea rdx,[r15+0x1]
0x2120: cmp r13,rdx
0x2123: jbe 0x212b
0x2125: mov byte ptr [r14+r15+0x1],0x24
0x212b: lea rdx,[r15+0x2]
0x212f: cmp r13,rdx
0x2132: jbe 0x213a
0x2134: mov byte ptr [r14+r15+0x2],0x27
0x213a: add r15,0x3
0x213e: mov r8d,eax
0x2141: cmp r13,r15
0x2144: jbe 0x214b
0x2146: mov byte ptr [r14+r15],0x5c
0x214b: add r15,0x1
0x214f: add rbp,0x1
0x2153: jmp 0x1fe0
0x2240: xor r10d,r10d
0x2243: nop dword ptr [rax+rax]
0x2248: cmp qword ptr [rsp+0x58],0x1
0x224e: jne 0x25f8
0x2254: mov qword ptr [rsp+0x38],r11
0x2259: mov byte ptr [rsp+0x30],r8b
0x225e: mov byte ptr [rsp+0x28],r10b
0x2263: call 0x14e0
0x2268: mov rcx,qword ptr [rax]
0x226b: movzx edx,bl
0x226e: movzx r10d,byte ptr [rsp+0x28]
0x2274: movzx r8d,byte ptr [rsp+0x30]
0x227a: mov r11,qword ptr [rsp+0x38]
0x227f: mov edi,0x1
0x2284: movzx eax,word ptr [rcx+rdx*2]
0x2288: and ax,0x4000
0x228c: setne r12b
0x2290: sete al
0x2293: and al,byte ptr [rsp+0xd]
0x2297: test al,al
0x2299: jne 0x2c31
0x229f: cmp dword ptr [rsp+0x8],0x2
0x22a4: sete dl
0x22a7: jmp 0x1f78
0x22b0: movzx ebx,byte ptr [r9]
0x22b4: cmp bl,0x7e
0x22b7: ja 0x2240
0x22b9: lea rcx,[rip+0x2828]
0x22c0: movzx edx,bl
0x22c3: movsxd rax,dword ptr [rcx+rdx*4]
0x22c7: add rax,rcx
0x22ca: jmp rax
0x2480: xor r10d,r10d
0x2483: jmp 0x1f20
0x24b0: cmp dword ptr [rsp+0x8],0x2
0x24b5: movzx ebx,byte ptr [rsp+0xf]
0x24ba: mov r12d,r8d
0x24bd: mov rbp,r11
0x24c0: sete dl
0x24c3: mov eax,ebx
0x24c5: test r15,r15
0x24c8: sete cl
0x24cb: and eax,edx
0x24cd: and al,cl
0x24cf: jne 0x2f36
0x24d5: mov eax,ebx
0x24d7: xor eax,0x1
0x24da: and dl,al
0x24dc: je 0x2e4c
0x24e2: cmp byte ptr [rsp+0x7c],0x0
0x24e7: je 0x2e4a
0x24ed: cmp byte ptr [rsp+0xe],0x0
0x24f2: jne 0x2eed
0x24f8: test r13,r13
0x24fb: sete al
0x24fe: cmp qword ptr [rsp+0x50],0x0
0x2504: setne dl
0x2507: and al,dl
0x2509: je 0x2f2c
0x250f: mov r13,qword ptr [rsp+0x50]
0x2514: lea rbx,[rip+0x2352]
0x251b: mov byte ptr [r14],0x27
0x251f: mov dword ptr [rsp+0x8],0x2
0x2527: mov r15d,0x1
0x252d: mov qword ptr [rsp+0x18],0x1
0x2536: mov byte ptr [rsp+0xf],0x0
0x253b: mov qword ptr [rsp+0x48],rbx
0x2540: mov byte ptr [rsp+0x7c],al
0x2544: jmp 0x1e23
0x25f8: lea rax,[rsp+0xa0]
0x2600: cmp r11,-0x1
0x2604: mov qword ptr [rsp+0xa0],0x0
0x2610: mov qword ptr [rsp+0x28],rax
0x2615: jne 0x2644
0x2617: mov rdi,qword ptr [rsp+0x10]
0x261c: mov byte ptr [rsp+0x40],r8b
0x2621: mov byte ptr [rsp+0x38],r10b
0x2626: mov qword ptr [rsp+0x30],r9
0x262b: call 0x1320
0x2630: movzx r8d,byte ptr [rsp+0x40]
0x2636: movzx r10d,byte ptr [rsp+0x38]
0x263c: mov r11,rax
0x263f: mov r9,qword ptr [rsp+0x30]
0x2644: lea rax,[rsp+0x9c]
0x264c: xor ecx,ecx
0x264e: mov byte ptr [rsp+0x7e],bl
0x2652: mov byte ptr [rsp+0x7d],r8b
0x2657: mov rbx,rcx
0x265a: mov qword ptr [rsp+0x88],r9
0x2662: mov qword ptr [rsp+0x38],rax
0x2667: mov byte ptr [rsp+0x7f],r10b
0x266c: mov qword ptr [rsp+0x80],r15
0x2674: mov qword ptr [rsp+0x40],r14
0x2679: mov qword ptr [rsp+0x70],r13
0x267e: mov qword ptr [rsp+0x30],r11
0x2683: mov rax,qword ptr [rsp+0x10]
0x2688: lea r14,[rbp+rbx]
0x268d: mov rdx,qword ptr [rsp+0x30]
0x2692: mov rcx,qword ptr [rsp+0x28]
0x2697: mov rdi,qword ptr [rsp+0x38]
0x269c: lea r13,[rax+r14]
0x26a0: sub rdx,r14
0x26a3: mov rsi,r13
0x26a6: call 0x41a0
0x26ab: test rax,rax
0x26ae: mov r15,rax
0x26b1: je 0x2701
0x26b3: cmp rax,-0x1
0x26b7: je 0x2cd5
0x26bd: cmp rax,-0x2
0x26c1: je 0x2c61
0x26c7: cmp dword ptr [rsp+0x8],0x2
0x26cc: sete al
0x26cf: and al,byte ptr [rsp+0xf]
0x26d3: jne 0x2870
0x26d9: mov edi,dword ptr [rsp+0x9c]
0x26e0: call 0x14d0
0x26e5: mov rdi,qword ptr [rsp+0x28]
0x26ea: test eax,eax
0x26ec: mov eax,0x0
0x26f1: cmove r12d,eax
0x26f5: add rbx,r15
0x26f8: call 0x14c0
0x26fd: test eax,eax
0x26ff: je 0x2683
0x2701: mov edx,r12d
0x2704: mov rdi,rbx
0x2707: movzx r8d,byte ptr [rsp+0x7d]
0x270d: xor edx,0x1
0x2710: movzx ebx,byte ptr [rsp+0x7e]
0x2715: movzx r10d,byte ptr [rsp+0x7f]
0x271b: and dl,byte ptr [rsp+0xd]
0x271f: mov r15,qword ptr [rsp+0x80]
0x2727: mov r14,qword ptr [rsp+0x40]
0x272c: mov r13,qword ptr [rsp+0x70]
0x2731: mov r11,qword ptr [rsp+0x30]
0x2736: cmp rdi,0x1
0x273a: jbe 0x2d3b
0x2740: mov rcx,rdi
0x2743: xor esi,esi
0x2745: movzx r9d,byte ptr [rsp+0xf]
0x274b: add rcx,rbp
0x274e: mov rdi,qword ptr [rsp+0x10]
0x2753: jmp 0x280e
0x2760: cmp dword ptr [rsp+0x8],0x2
0x2765: sete al
0x2768: test r9b,r9b
0x276b: jne 0x2c20
0x2771: mov esi,r8d
0x2774: xor esi,0x1
0x2777: and al,sil
0x277a: je 0x27ab
0x277c: cmp r13,r15
0x277f: jbe 0x2786
0x2781: mov byte ptr [r14+r15],0x27
0x2786: lea rsi,[r15+0x1]
0x278a: cmp r13,rsi
0x278d: jbe 0x2795
0x278f: mov byte ptr [r14+r15+0x1],0x24
0x2795: lea rsi,[r15+0x2]
0x2799: cmp r13,rsi
0x279c: jbe 0x27a4
0x279e: mov byte ptr [r14+r15+0x2],0x27
0x27a4: add r15,0x3
0x27a8: mov r8d,eax
0x27ab: cmp r13,r15
0x27ae: jbe 0x27b5
0x27b0: mov byte ptr [r14+r15],0x5c
0x27b5: lea rax,[r15+0x1]
0x27b9: cmp r13,rax
0x27bc: jbe 0x27cb
0x27be: mov eax,ebx
0x27c0: shr al,0x6
0x27c3: add eax,0x30
0x27c6: mov byte ptr [r14+r15+0x1],al
0x27cb: lea rax,[r15+0x2]
0x27cf: cmp r13,rax
0x27d2: jbe 0x27e4
0x27d4: mov eax,ebx
0x27d6: shr al,0x3
0x27d9: and eax,0x7
0x27dc: add eax,0x30
0x27df: mov byte ptr [r14+r15+0x2],al
0x27e4: and ebx,0x7
0x27e7: add rbp,0x1
0x27eb: add r15,0x3
0x27ef: add ebx,0x30
0x27f2: cmp rbp,rcx
0x27f5: jae 0x1fe0
0x27fb: mov esi,edx
0x27fd: cmp r13,r15
0x2800: jbe 0x2806
0x2802: mov byte ptr [r14+r15],bl
0x2806: movzx ebx,byte ptr [rdi+rbp]
0x280a: add r15,0x1
0x280e: test dl,dl
0x2810: jne 0x2760
0x2816: mov eax,esi
0x2818: xor eax,0x1
0x281b: and eax,r8d
0x281e: test r10b,r10b
0x2821: je 0x2831
0x2823: cmp r13,r15
0x2826: jbe 0x282d
0x2828: mov byte ptr [r14+r15],0x5c
0x282d: add r15,0x1
0x2831: add rbp,0x1
0x2835: cmp rbp,rcx
0x2838: jae 0x1fbc
0x283e: test al,al
0x2840: je 0x2c3e
0x2846: cmp r13,r15
0x2849: jbe 0x2850
0x284b: mov byte ptr [r14+r15],0x27
0x2850: lea rax,[r15+0x1]
0x2854: cmp r13,rax
0x2857: jbe 0x285f
0x2859: mov byte ptr [r14+r15+0x1],0x27
0x285f: add r15,0x2
0x2863: xor r10d,r10d
0x2866: xor r8d,r8d
0x2869: jmp 0x27fd
0x2870: cmp r15,0x1
0x2874: je 0x26d9
0x287a: mov rdi,qword ptr [rsp+0x10]
0x287f: lea rcx,[rdi+r15]
0x2883: lea rdx,[rdi+r14+0x1]
0x2888: lea r8,[rcx+r14]
0x288c: jmp 0x289d
0x2890: add rdx,0x1
0x2894: cmp r8,rdx
0x2897: je 0x26d9
0x289d: movzx ecx,byte ptr [rdx]
0x28a0: sub ecx,0x5b
0x28a3: cmp cl,0x21
0x28a6: ja 0x2890
0x28a8: mov esi,0x1
0x28ad: shl rsi,cl
0x28b0: mov rcx,rsi
0x28b3: movabsq rsi,0x20000002b
0x28bd: test rcx,rsi
0x28c0: je 0x2890
0x28c2: mov r14,qword ptr [rsp+0x40]
0x28c7: mov r13,qword ptr [rsp+0x70]
0x28cc: mov rbp,qword ptr [rsp+0x30]
0x28d1: mov dword ptr [rsp+0x8],0x2
0x28d9: cmp byte ptr [rsp+0xd],0x0
0x28de: je 0x28f0
0x28e0: test al,al
0x28e2: mov eax,0x4
0x28e7: cmove eax,dword ptr [rsp+0x8]
0x28ec: mov dword ptr [rsp+0x8],eax
0x28f0: sub rsp,0x8
0x28f4: mov rcx,rbp
0x28f7: mov rsi,r13
0x28fa: push qword ptr [rsp+0x68]
0x28fe: push qword ptr [rsp+0x78]
0x2902: mov rdi,r14
0x2905: push 0x0
0x2907: mov r9d,dword ptr [rsp+0x98]
0x290f: mov r8d,dword ptr [rsp+0x28]
0x2914: mov rdx,qword ptr [rsp+0x30]
0x2919: and r9d,-0x3
0x291d: call 0x1d50
0x2922: add rsp,0x20
0x2926: mov r15,rax
0x2929: mov rbx,qword ptr [rsp+0xa8]
0x2931: xor rbx,qword ptr fs:0x28
0x293a: mov rax,r15
0x293d: jne 0x2f43
0x2943: add rsp,0xb8
0x294a: pop rbx
0x294b: pop rbp
0x294c: pop r12
0x294e: pop r13
0x2950: pop r14
0x2952: pop r15
0x2954: ret 
0x2958: mov rbp,r11
0x295b: jmp 0x28d9
0x29c1: test r13,r13
0x29c4: jne 0x2f5a
0x29ca: lea rax,[rip+0x1e9c]
0x29d1: mov qword ptr [rsp+0x50],0x0
0x29da: mov byte ptr [rsp+0xe],0x1
0x29df: mov byte ptr [rsp+0x7c],0x0
0x29e4: xor r12d,r12d
0x29e7: mov byte ptr [rsp+0xf],0x0
0x29ec: mov qword ptr [rsp+0x18],0x1
0x29f5: mov qword ptr [rsp+0x48],rax
0x29fa: mov r15d,0x1
0x2a00: mov dword ptr [rsp+0x8],0x2
0x2a08: jmp 0x1e23
0x2c20: movzx ebx,byte ptr [rsp+0xf]
0x2c25: mov rbp,r11
0x2c28: mov byte ptr [rsp+0xd],bl
0x2c2c: jmp 0x28d9
0x2c31: movzx edx,byte ptr [rsp+0xd]
0x2c36: xor r12d,r12d
0x2c39: jmp 0x2740
0x2c3e: xor r10d,r10d
0x2c41: jmp 0x27fd
0x2c61: mov r11,qword ptr [rsp+0x30]
0x2c66: mov rsi,r14
0x2c69: mov rcx,r13
0x2c6c: mov rax,rbx
0x2c6f: mov rdi,rbx
0x2c72: movzx r8d,byte ptr [rsp+0x7d]
0x2c78: movzx ebx,byte ptr [rsp+0x7e]
0x2c7d: mov r9,qword ptr [rsp+0x88]
0x2c85: cmp rsi,r11
0x2c88: movzx r10d,byte ptr [rsp+0x7f]
0x2c8e: mov r15,qword ptr [rsp+0x80]
0x2c96: mov r14,qword ptr [rsp+0x40]
0x2c9b: mov r13,qword ptr [rsp+0x70]
0x2ca0: jae 0x2cc8
0x2ca2: cmp byte ptr [rcx],0x0
0x2ca5: jne 0x2cb7
0x2ca7: jmp 0x2cc8
0x2cb0: cmp byte ptr [r9+rax],0x0
0x2cb5: je 0x2cc5
0x2cb7: add rax,0x1
0x2cbb: lea rdx,[rbp+rax]
0x2cc0: cmp r11,rdx
0x2cc3: ja 0x2cb0
0x2cc5: mov rdi,rax
0x2cc8: movzx edx,byte ptr [rsp+0xd]
0x2ccd: xor r12d,r12d
0x2cd0: jmp 0x2736
0x2cd5: mov rdi,rbx
0x2cd8: movzx r8d,byte ptr [rsp+0x7d]
0x2cde: movzx ebx,byte ptr [rsp+0x7e]
0x2ce3: movzx r10d,byte ptr [rsp+0x7f]
0x2ce9: mov r15,qword ptr [rsp+0x80]
0x2cf1: xor r12d,r12d
0x2cf4: mov r14,qword ptr [rsp+0x40]
0x2cf9: mov r13,qword ptr [rsp+0x70]
0x2cfe: mov r11,qword ptr [rsp+0x30]
0x2d03: movzx edx,byte ptr [rsp+0xd]
0x2d08: jmp 0x2736
0x2d3b: mov eax,edx
0x2d3d: jmp 0x2297
0x2e4a: mov eax,edx
0x2e4c: mov rbx,qword ptr [rsp+0x48]
0x2e51: test rbx,rbx
0x2e54: je 0x2e82
0x2e56: test al,al
0x2e58: je 0x2e82
0x2e5a: movzx ecx,byte ptr [rbx]
0x2e5d: mov rax,rbx
0x2e60: test cl,cl
0x2e62: je 0x2e82
0x2e64: mov rdx,r15
0x2e67: sub rax,r15
0x2e6a: cmp r13,rdx
0x2e6d: jbe 0x2e73
0x2e6f: mov byte ptr [r14+rdx],cl
0x2e73: add rdx,0x1
0x2e77: movzx ecx,byte ptr [rax+rdx]
0x2e7b: test cl,cl
0x2e7d: jne 0x2e6a
0x2e7f: mov r15,rdx
0x2e82: cmp r13,r15
0x2e85: jbe 0x2929
0x2e8b: mov byte ptr [r14+r15],0x0
0x2e90: jmp 0x2929
0x2e95: cmp dword ptr [rsp+0x8],0x2
0x2e9a: movzx ebx,byte ptr [rsp+0xf]
0x2e9f: mov rbp,r11
0x2ea2: sete al
0x2ea5: mov byte ptr [rsp+0xd],bl
0x2ea9: jmp 0x28d9
0x2eed: sub rsp,0x8
0x2ef1: mov r8d,0x5
0x2ef7: mov rcx,r11
0x2efa: push qword ptr [rsp+0x68]
0x2efe: push qword ptr [rsp+0x78]
0x2f02: mov rdi,r14
0x2f05: push qword ptr [rsp+0x38]
0x2f09: mov r9d,dword ptr [rsp+0x98]
0x2f11: mov rdx,qword ptr [rsp+0x30]
0x2f16: mov rsi,qword ptr [rsp+0x70]
0x2f1b: call 0x1d50
0x2f20: add rsp,0x20
0x2f24: mov r15,rax
0x2f27: jmp 0x2929
0x2f2c: movzx eax,byte ptr [rsp+0x7c]
0x2f31: jmp 0x2e4c
0x2f36: mov dword ptr [rsp+0x8],0x2
0x2f3e: jmp 0x28d9
0x2f43: call 0x1330
0x2f48: mov byte ptr [rsp+0xd],0x0
0x2f4d: jmp 0x29c1
0x2f5a: mov byte ptr [rsp+0xe],0x1
0x2f5f: xor eax,eax
0x2f61: xor r12d,r12d
0x2f64: mov qword ptr [rsp+0x50],0x0
0x2f6d: jmp 0x2514
0x2f84: nop 
0x2f86: nop word ptr cs:[rax+rax]
0x307c: add rsp,0x20
0x3080: mov r11,qword ptr [rsp+0x10]
0x3085: cmp r11,rax
0x3088: ja 0x30f1
0x308a: lea rsi,[rax+0x1]
0x308e: lea rax,[rip+0x20404b]
0x3095: cmp r12,rax
0x3098: mov qword ptr [rbx],rsi
0x309b: je 0x30af
0x309d: mov rdi,r12
0x30a0: mov qword ptr [rsp+0x10],rsi
0x30a5: call 0x1250
0x30aa: mov rsi,qword ptr [rsp+0x10]
0x30af: mov rdi,rsi
0x30b2: mov qword ptr [rsp+0x10],rsi
0x30b7: call 0x3f10
0x30bc: sub rsp,0x8
0x30c0: mov qword ptr [rbx+0x8],rax
0x30c4: mov r8d,dword ptr [rbp]
0x30c8: push qword ptr [rbp+0x30]
0x30cb: push qword ptr [rbp+0x28]
0x30ce: mov rcx,r14
0x30d1: push r15
0x30d3: mov r9d,dword ptr [rsp+0x3c]
0x30d8: mov rdi,rax
0x30db: mov rdx,qword ptr [rsp+0x28]
0x30e0: mov rsi,qword ptr [rsp+0x30]
0x30e5: mov r12,rax
0x30e8: call 0x1d50
0x30ed: add rsp,0x20
0x30f1: mov eax,dword ptr [rsp+0x18]
0x30f5: mov dword ptr [r13],eax
0x30f9: add rsp,0x28
0x30fd: mov rax,r12
0x3100: pop rbx
0x3101: pop rbp
0x3102: pop r12
0x3104: pop r13
0x3106: pop r14
0x3108: pop r15
0x310a: ret 
0x3131: call 0x1260
0x3136: call 0x4160
0x313b: nop dword ptr [rax+rax]
0x3140: push r12
0x3142: push rbp
0x3143: push rbx
0x3144: mov rbx,rdi
0x3147: call 0x1270
0x314c: mov r12d,dword ptr [rax]
0x314f: mov rbp,rax
0x3152: lea rax,[rip+0x204087]
0x3159: test rbx,rbx
0x315c: mov esi,0x38
0x3161: cmove rbx,rax
0x3165: mov rdi,rbx
0x3168: call 0x4110
0x316d: mov dword ptr [rbp],r12d
0x3171: pop rbx
0x3172: pop rbp
0x3173: pop r12
0x3175: ret 
0x3180: lea rax,[rip+0x204059]
0x3187: test rdi,rdi
0x318a: cmove rdi,rax
0x318e: mov eax,dword ptr [rdi]
0x3190: ret 
0x31a0: lea rax,[rip+0x204039]
0x31a7: test rdi,rdi
0x31aa: cmove rdi,rax
0x31ae: mov dword ptr [rdi],esi
0x31b0: ret 
0x31c0: lea rax,[rip+0x204019]
0x31c7: test rdi,rdi
0x31ca: mov ecx,esi
0x31cc: cmove rdi,rax
0x31d0: mov eax,esi
0x31d2: and ecx,0x1f
0x31d5: shr al,0x5
0x31d8: movzx eax,al
0x31db: lea rdi,[rdi+rax*4+0x8]
0x31e0: mov esi,dword ptr [rdi]
0x31e2: mov eax,esi
0x31e4: shr eax,cl
0x31e6: xor edx,eax
0x31e8: and eax,0x1
0x31eb: and edx,0x1
0x31ee: shl edx,cl
0x31f0: xor edx,esi
0x31f2: mov dword ptr [rdi],edx
0x31f4: ret 
0x3200: lea rax,[rip+0x203fd9]
0x3207: test rdi,rdi
0x320a: cmove rdi,rax
0x320e: mov eax,dword ptr [rdi+0x4]
0x3211: mov dword ptr [rdi+0x4],esi
0x3214: ret 
0x3220: lea rax,[rip+0x203fb9]
0x3227: test rdi,rdi
0x322a: cmove rdi,rax
0x322e: test rsi,rsi
0x3231: mov dword ptr [rdi],0xa
0x3237: je 0x3247
0x3239: test rdx,rdx
0x323c: je 0x3247
0x323e: mov qword ptr [rdi+0x28],rsi
0x3242: mov qword ptr [rdi+0x30],rdx
0x3246: ret 
0x3247: sub rsp,0x8
0x324b: call 0x1260
0x3250: push r15
0x3252: push r14
0x3254: lea rax,[rip+0x203f85]
0x325b: push r13
0x325d: push r12
0x325f: mov r13,rdi
0x3262: push rbp
0x3263: push rbx
0x3264: mov rbx,r8
0x3267: mov r14,rsi
0x326a: mov r15,rdx
0x326d: sub rsp,0x18
0x3271: test r8,r8
0x3274: cmove rbx,rax
0x3278: mov qword ptr [rsp+0x8],rcx
0x327d: call 0x1270
0x3282: mov r12d,dword ptr [rax]
0x3285: mov rbp,rax
0x3288: lea rax,[rbx+0x8]
0x328c: sub rsp,0x8
0x3290: mov r9d,dword ptr [rbx+0x4]
0x3294: push qword ptr [rbx+0x30]
0x3297: mov r8d,dword ptr [rbx]
0x329a: push qword ptr [rbx+0x28]
0x329d: mov rdx,r15
0x32a0: push rax
0x32a1: mov rcx,qword ptr [rsp+0x28]
0x32a6: mov rsi,r14
0x32a9: mov rdi,r13
0x32ac: call 0x1d50
0x32b1: mov dword ptr [rbp],r12d
0x32b5: add rsp,0x38
0x32b9: pop rbx
0x32ba: pop rbp
0x32bb: pop r12
0x32bd: pop r13
0x32bf: pop r14
0x32c1: pop r15
0x32c3: ret 
0x32d0: push r15
0x32d2: push r14
0x32d4: lea rax,[rip+0x203f05]
0x32db: push r13
0x32dd: push r12
0x32df: mov r12,rdx
0x32e2: push rbp
0x32e3: push rbx
0x32e4: mov rbx,rcx
0x32e7: mov r14,rdi
0x32ea: mov r15,rsi
0x32ed: sub rsp,0x38
0x32f1: test rcx,rcx
0x32f4: cmove rbx,rax
0x32f8: xor ebp,ebp
0x32fa: call 0x1270
0x32ff: test r12,r12
0x3302: mov r13,rax
0x3305: mov eax,dword ptr [rax]
0x3307: sete bpl
0x330b: or ebp,dword ptr [rbx+0x4]
0x330e: lea r10,[rbx+0x8]
0x3312: sub rsp,0x8
0x3316: mov r8d,dword ptr [rbx]
0x3319: mov rcx,r15
0x331c: mov dword ptr [rsp+0x14],eax
0x3320: push qword ptr [rbx+0x30]
0x3323: mov rdx,r14
0x3326: push qword ptr [rbx+0x28]
0x3329: push r10
0x332b: xor esi,esi
0x332d: mov r9d,ebp
0x3330: xor edi,edi
0x3332: mov qword ptr [rsp+0x40],r10
0x3337: call 0x1d50
0x333c: lea rsi,[rax+0x1]
0x3340: mov qword ptr [rsp+0x48],rax
0x3345: add rsp,0x20
0x3349: mov rdi,rsi
0x334c: mov qword ptr [rsp+0x18],rsi
0x3351: call 0x3f10
0x3356: mov qword ptr [rsp+0x10],rax
0x335b: sub rsp,0x8
0x335f: push qword ptr [rbx+0x30]
0x3362: push qword ptr [rbx+0x28]
0x3365: mov r10,qword ptr [rsp+0x38]
0x336a: mov r9d,ebp
0x336d: mov r8d,dword ptr [rbx]
0x3370: mov rcx,r15
0x3373: mov rdx,r14
0x3376: mov rdi,rax
0x3379: push r10
0x337b: mov rsi,qword ptr [rsp+0x38]
0x3380: call 0x1d50
0x3385: mov eax,dword ptr [rsp+0x2c]
0x3389: add rsp,0x20
0x338d: test r12,r12
0x3390: mov dword ptr [r13],eax
0x3394: je 0x339f
0x3396: mov r11,qword ptr [rsp+0x28]
0x339b: mov qword ptr [r12],r11
0x339f: mov rax,qword ptr [rsp+0x10]
0x33a4: add rsp,0x38
0x33a8: pop rbx
0x33a9: pop rbp
0x33aa: pop r12
0x33ac: pop r13
0x33ae: pop r14
0x33b0: pop r15
0x33b2: ret 
0x33c0: mov rcx,rdx
0x33c3: xor edx,edx
0x33c5: jmp 0x32d0
0x33d0: mov eax,dword ptr [rip+0x203c82]
0x33d6: push r12
0x33d8: mov r12,qword ptr [rip+0x203c81]
0x33df: push rbp
0x33e0: push rbx
0x33e1: cmp eax,0x1
0x33e4: jle 0x3411
0x33e6: sub eax,0x2
0x33e9: lea rbx,[r12+0x18]
0x33ee: shl rax,0x4
0x33f2: lea rbp,[r12+rax+0x28]
0x33f7: nop word ptr [rax+rax]
0x3400: mov rdi,qword ptr [rbx]
0x3403: add rbx,0x10
0x3407: call 0x1250
0x340c: cmp rbx,rbp
0x340f: jne 0x3400
0x3411: mov rdi,qword ptr [r12+0x8]
0x3416: lea rbx,[rip+0x203cc3]
0x341d: cmp rdi,rbx
0x3420: je 0x3439
0x3422: call 0x1250
0x3427: mov qword ptr [rip+0x203c3e],0x100
0x3432: mov qword ptr [rip+0x203c3f],rbx
0x3439: lea rbx,[rip+0x203c30]
0x3440: cmp r12,rbx
0x3443: je 0x3454
0x3445: mov rdi,r12
0x3448: call 0x1250
0x344d: mov qword ptr [rip+0x203c0c],rbx
0x3454: pop rbx
0x3455: mov dword ptr [rip+0x203bf9],0x1
0x345f: pop rbp
0x3460: pop r12
0x3462: ret 
0x3470: lea rcx,[rip+0x203d69]
0x3477: mov rdx,-0x1
0x347e: jmp 0x2f90
0x3490: lea rcx,[rip+0x203d49]
0x3497: jmp 0x2f90
0x34a0: lea rcx,[rip+0x203d39]
0x34a7: mov rsi,rdi
0x34aa: mov rdx,-0x1
0x34b1: xor edi,edi
0x34b3: jmp 0x2f90
0x34c0: lea rcx,[rip+0x203d19]
0x34c7: mov rdx,rsi
0x34ca: mov rsi,rdi
0x34cd: xor edi,edi
0x34cf: jmp 0x2f90
0x34e0: sub rsp,0x48
0x34e4: mov rax,rdx
0x34e7: mov rdx,qword ptr fs:0x28
0x34f0: mov qword ptr [rsp+0x38],rdx
0x34f5: xor edx,edx
0x34f7: cmp esi,0xa
0x34fa: je 0x3564
0x34fc: mov dword ptr [rsp],esi
0x34ff: mov rcx,rsp
0x3502: mov rdx,-0x1
0x3509: mov rsi,rax
0x350c: mov qword ptr [rsp+0x4],0x0
0x3515: mov qword ptr [rsp+0xc],0x0
0x351e: mov qword ptr [rsp+0x14],0x0
0x3527: mov qword ptr [rsp+0x1c],0x0
0x3530: mov qword ptr [rsp+0x24],0x0
0x3539: mov qword ptr [rsp+0x2c],0x0
0x3542: mov dword ptr [rsp+0x34],0x0
0x354a: call 0x2f90
0x354f: mov rcx,qword ptr [rsp+0x38]
0x3554: xor rcx,qword ptr fs:0x28
0x355d: jne 0x3569
0x355f: add rsp,0x48
0x3563: ret 
0x3564: call 0x1260
0x3569: call 0x1330
0x356e: nop 
0x3570: sub rsp,0x48
0x3574: mov rax,rdx
0x3577: mov rdx,rcx
0x357a: mov rcx,qword ptr fs:0x28
0x3583: mov qword ptr [rsp+0x38],rcx
0x3588: xor ecx,ecx
0x358a: cmp esi,0xa
0x358d: je 0x35f0
0x358f: mov dword ptr [rsp],esi
0x3592: mov rcx,rsp
0x3595: mov rsi,rax
0x3598: mov qword ptr [rsp+0x4],0x0
0x35a1: mov qword ptr [rsp+0xc],0x0
0x35aa: mov qword ptr [rsp+0x14],0x0
0x35b3: mov qword ptr [rsp+0x1c],0x0
0x35bc: mov qword ptr [rsp+0x24],0x0
0x35c5: mov qword ptr [rsp+0x2c],0x0
0x35ce: mov dword ptr [rsp+0x34],0x0
0x35d6: call 0x2f90
0x35db: mov rdx,qword ptr [rsp+0x38]
0x35e0: xor rdx,qword ptr fs:0x28
0x35e9: jne 0x35f5
0x35eb: add rsp,0x48
0x35ef: ret 
0x35f0: call 0x1260
0x35f5: call 0x1330
0x35fa: nop word ptr [rax+rax]
0x3600: mov rdx,rsi
0x3603: mov esi,edi
0x3605: xor edi,edi
0x3607: jmp 0x34e0
0x3610: mov rcx,rdx
0x3613: mov rdx,rsi
0x3616: mov esi,edi
0x3618: xor edi,edi
0x361a: jmp 0x3570
0x3620: sub rsp,0x48
0x3624: mov ecx,edx
0x3626: mov rax,qword ptr fs:0x28
0x362f: mov qword ptr [rsp+0x38],rax
0x3634: xor eax,eax
0x3636: mov rax,qword ptr [rip+0x203bd3]
0x363d: mov r8,rsp
0x3640: and ecx,0x1f
0x3643: movdqa xmm0,[rip+0x203b95]
0x364b: mov qword ptr [rsp+0x30],rax
0x3650: mov eax,edx
0x3652: movaps [rsp],xmm0
0x3656: shr al,0x5
0x3659: movzx eax,al
0x365c: lea r9,[r8+rax*4+0x8]
0x3661: movdqa xmm0,[rip+0x203b87]
0x3669: movaps [rsp+0x10],xmm0
0x366e: movdqa xmm0,[rip+0x203b8a]
0x3676: movaps [rsp+0x20],xmm0
0x367b: mov edx,dword ptr [r9]
0x367e: mov eax,edx
0x3680: shr eax,cl
0x3682: not eax
0x3684: and eax,0x1
0x3687: shl eax,cl
0x3689: mov rcx,r8
0x368c: xor eax,edx
0x368e: mov rdx,rsi
0x3691: mov rsi,rdi
0x3694: mov dword ptr [r9],eax
0x3697: xor edi,edi
0x3699: call 0x2f90
0x369e: mov rsi,qword ptr [rsp+0x38]
0x36a3: xor rsi,qword ptr fs:0x28
0x36ac: jne 0x36b3
0x36ae: add rsp,0x48
0x36b2: ret 
0x36b3: call 0x1330
0x36b8: nop dword ptr [rax+rax]
0x36c0: movsx edx,sil
0x36c4: mov rsi,-0x1
0x36cb: jmp 0x3620
0x36d0: mov edx,0x3a
0x36d5: mov rsi,-0x1
0x36dc: jmp 0x3620
0x36f0: mov edx,0x3a
0x36f5: jmp 0x3620
0x3700: sub rsp,0x48
0x3704: mov rax,rdx
0x3707: mov rdx,qword ptr fs:0x28
0x3710: mov qword ptr [rsp+0x38],rdx
0x3715: xor edx,edx
0x3717: cmp esi,0xa
0x371a: je 0x3784
0x371c: mov dword ptr [rsp],esi
0x371f: mov rcx,rsp
0x3722: mov rdx,-0x1
0x3729: mov rsi,rax
0x372c: mov qword ptr [rsp+0x4],0x0
0x3735: mov qword ptr [rsp+0xc],0x4000000
0x373e: mov qword ptr [rsp+0x14],0x0
0x3747: mov qword ptr [rsp+0x1c],0x0
0x3750: mov qword ptr [rsp+0x24],0x0
0x3759: mov qword ptr [rsp+0x2c],0x0
0x3762: mov dword ptr [rsp+0x34],0x0
0x376a: call 0x2f90
0x376f: mov rcx,qword ptr [rsp+0x38]
0x3774: xor rcx,qword ptr fs:0x28
0x377d: jne 0x3789
0x377f: add rsp,0x48
0x3783: ret 
0x3784: call 0x1260
0x3789: call 0x1330
0x378e: nop 
0x3790: sub rsp,0x48
0x3794: mov r9,rcx
0x3797: mov rcx,qword ptr [rip+0x203a72]
0x379e: movdqa xmm0,[rip+0x203a3a]
0x37a6: mov rax,qword ptr fs:0x28
0x37af: mov qword ptr [rsp+0x38],rax
0x37b4: xor eax,eax
0x37b6: movaps [rsp],xmm0
0x37ba: test rsi,rsi
0x37bd: mov qword ptr [rsp+0x30],rcx
0x37c2: mov dword ptr [rsp],0xa
0x37c9: movdqa xmm0,[rip+0x203a1f]
0x37d1: movaps [rsp+0x10],xmm0
0x37d6: movdqa xmm0,[rip+0x203a22]
0x37de: movaps [rsp+0x20],xmm0
0x37e3: je 0x3817
0x37e5: test rdx,rdx
0x37e8: je 0x3817
0x37ea: mov qword ptr [rsp+0x28],rsi
0x37ef: mov qword ptr [rsp+0x30],rdx
0x37f4: mov rcx,rsp
0x37f7: mov rdx,r8
0x37fa: mov rsi,r9
0x37fd: call 0x2f90
0x3802: mov rdi,qword ptr [rsp+0x38]
0x3807: xor rdi,qword ptr fs:0x28
0x3810: jne 0x381c
0x3812: add rsp,0x48
0x3816: ret 
0x3817: call 0x1260
0x381c: call 0x1330
0x3821: nop dword ptr [rax+rax]
0x3826: nop word ptr cs:[rax+rax]
0x3830: mov r8,-0x1
0x3837: jmp 0x3790
0x3840: mov rcx,rdx
0x3843: mov r8,-0x1
0x384a: mov rdx,rsi
0x384d: mov rsi,rdi
0x3850: xor edi,edi
0x3852: jmp 0x3790
0x3860: mov r8,rcx
0x3863: mov rcx,rdx
0x3866: mov rdx,rsi
0x3869: mov rsi,rdi
0x386c: xor edi,edi
0x386e: jmp 0x3790
0x3880: lea rcx,[rip+0x203799]
0x3887: jmp 0x2f90
0x3890: lea rcx,[rip+0x203789]
0x3897: mov rdx,rsi
0x389a: mov rsi,rdi
0x389d: xor edi,edi
0x389f: jmp 0x2f90
0x38b0: lea rcx,[rip+0x203769]
0x38b7: mov rdx,-0x1
0x38be: jmp 0x2f90
0x3a28: mov r8,rcx
0x3a2b: mov rcx,rdx
0x3a2e: lea rdx,[rip+0x12ff]
0x3a35: mov esi,0x1
0x3a3a: xor eax,eax
0x3a3c: call 0x14b0
0x3a41: jmp 0x392c
0x3c3d: push r12
0x3c3f: push r15
0x3c41: push r14
0x3c43: mov r8,qword ptr [rsp+0x20]
0x3c48: mov rcx,rbx
0x3c4b: mov rdx,rax
0x3c4e: mov rdi,rbp
0x3c51: mov esi,0x1
0x3c56: xor eax,eax
0x3c58: call 0x14b0
0x3c5d: add rsp,0x20
0x3c61: add rsp,0x28
0x3c65: pop rbx
0x3c66: pop rbp
0x3c67: pop r12
0x3c69: pop r13
0x3c6b: pop r14
0x3c6d: pop r15
0x3c6f: ret 
0x3ca9: push r12
0x3cab: push r15
0x3cad: push r14
0x3caf: mov r9,qword ptr [rsp+0x28]
0x3cb4: jmp 0x3c43
0x3d10: xor r9d,r9d
0x3d13: cmp qword ptr [r8],0x0
0x3d17: je 0x3d2b
0x3d19: nop dword ptr [rax]
0x3d20: add r9,0x1
0x3d24: cmp qword ptr [r8+r9*8],0x0
0x3d29: jne 0x3d20
0x3d2b: jmp 0x38f0
0x3d30: sub rsp,0x68
0x3d34: mov r10,r8
0x3d37: xor r9d,r9d
0x3d3a: mov rax,qword ptr fs:0x28
0x3d43: mov qword ptr [rsp+0x58],rax
0x3d48: xor eax,eax
0x3d4a: mov r8,rsp
0x3d4d: nop dword ptr [rax]
0x3d50: mov eax,dword ptr [r10]
0x3d53: cmp eax,0x2f
0x3d56: ja 0x3d9a
0x3d58: mov r11d,eax
0x3d5b: add r11,qword ptr [r10+0x10]
0x3d5f: add eax,0x8
0x3d62: mov dword ptr [r10],eax
0x3d65: mov rax,qword ptr [r11]
0x3d68: test rax,rax
0x3d6b: mov qword ptr [r8+r9*8],rax
0x3d6f: je 0x3d7b
0x3d71: add r9,0x1
0x3d75: cmp r9,0xa
0x3d79: jne 0x3d50
0x3d7b: call 0x38f0
0x3d80: mov rax,qword ptr [rsp+0x58]
0x3d85: xor rax,qword ptr fs:0x28
0x3d8e: jne 0x3d95
0x3d90: add rsp,0x68
0x3d94: ret 
0x3d95: call 0x1330
0x3d9a: mov r11,qword ptr [r10+0x8]
0x3d9e: lea rax,[r11+0x8]
0x3da2: mov qword ptr [r10+0x8],rax
0x3da6: jmp 0x3d65
0x3e70: call 0x1330
0x3e7c: mov rax,rbx
0x3e7f: add rbx,0x8
0x3e83: jmp 0x3e36
0x3e90: push rbx
0x3e91: lea rsi,[rip+0xeea]
0x3e98: mov edx,0x5
0x3e9d: xor edi,edi
0x3e9f: call 0x1300
0x3ea4: lea rdx,[rip+0xeec]
0x3eab: mov rsi,rax
0x3eae: mov edi,0x1
0x3eb3: xor eax,eax
0x3eb5: call 0x1450
0x3eba: lea rsi,[rip+0xeec]
0x3ec1: mov edx,0x5
0x3ec6: xor edi,edi
0x3ec8: call 0x1300
0x3ecd: lea rcx,[rip+0x884]
0x3ed4: lea rdx,[rip+0x6d6]
0x3edb: mov rsi,rax
0x3ede: mov edi,0x1
0x3ee3: xor eax,eax
0x3ee5: call 0x1450
0x3eea: mov rbx,qword ptr [rip+0x203197]
0x3ef1: lea rsi,[rip+0x10e8]
0x3ef8: xor edi,edi
0x3efa: mov edx,0x5
0x3eff: call 0x1300
0x3f04: mov rsi,rbx
0x3f07: mov rdi,rax
0x3f0a: pop rbx
0x3f0b: jmp 0x13a0
0x3f10: push rbx
0x3f11: mov rbx,rdi
0x3f14: call 0x13e0
0x3f19: test rax,rax
0x3f1c: jne 0x3f23
0x3f1e: test rbx,rbx
0x3f21: jne 0x3f25
0x3f23: pop rbx
0x3f24: ret 
0x3f25: call 0x4160
0x3f2a: nop word ptr [rax+rax]
0x3f30: mov rax,rdi
0x3f33: mul rsi
0x3f36: mov rdi,rax
0x3f39: seto al
0x3f3c: test rdi,rdi
0x3f3f: js 0x3f4b
0x3f41: movzx eax,al
0x3f44: test rax,rax
0x3f47: jne 0x3f4b
0x3f49: jmp 0x3f10
0x3f4b: sub rsp,0x8
0x3f4f: call 0x4160
0x3f54: nop 
0x3f56: nop word ptr cs:[rax+rax]
0x3f60: jmp 0x3f10
0x3f79: test rdi,rdi
0x3f7c: jne 0x3f98
0x3f98: call 0x1250
0x3f9d: xor eax,eax
0x3f9f: pop rbx
0x3fa0: ret 
0x3fa6: nop word ptr cs:[rax+rax]
0x3fb0: mov rax,rsi
0x3fb3: mul rdx
0x3fb6: mov rsi,rax
0x3fb9: seto al
0x3fbc: test rsi,rsi
0x3fbf: js 0x3fcb
0x3fc1: movzx eax,al
0x3fc4: test rax,rax
0x3fc7: jne 0x3fcb
0x3fc9: jmp 0x3f70
0x3fcb: sub rsp,0x8
0x3fcf: call 0x4160
0x3fd4: nop 
0x3fd6: nop word ptr cs:[rax+rax]
0x3fe0: test rdi,rdi
0x3fe3: mov r9,rdx
0x3fe6: mov rcx,qword ptr [rsi]
0x3fe9: je 0x4020
0x3feb: xor edx,edx
0x3fed: movabsq rax,0x5555555555555554
0x3ff7: div r9
0x3ffa: cmp rax,rcx
0x3ffd: jbe 0x403b
0x3fff: mov rax,rcx
0x4002: shr rax, 1
0x4005: lea rcx,[rax+rcx+0x1]
0x400a: mov qword ptr [rsi],rcx
0x400d: imul rcx,r9
0x4011: mov rsi,rcx
0x4014: jmp 0x3f70
0x4020: test rcx,rcx
0x4023: je 0x4048
0x4025: mov rax,rcx
0x4028: mul r9
0x402b: seto dl
0x402e: test rax,rax
0x4031: movzx edx,dl
0x4034: js 0x403b
0x4036: test rdx,rdx
0x4039: je 0x400a
0x403b: sub rsp,0x8
0x403f: call 0x4160
0x4044: nop dword ptr [rax]
0x4048: xor edx,edx
0x404a: mov eax,0x80
0x404f: xor r8d,r8d
0x4052: div r9
0x4055: test rax,rax
0x4058: sete r8b
0x405c: lea rcx,[r8+rax]
0x4060: jmp 0x4025
0x4070: test rdi,rdi
0x4073: mov rax,qword ptr [rsi]
0x4076: je 0x40a0
0x4078: movabsq rdx,0x5555555555555553
0x4082: cmp rax,rdx
0x4085: ja 0x40b1
0x4087: mov rdx,rax
0x408a: shr rdx, 1
0x408d: lea rax,[rdx+rax+0x1]
0x4092: mov qword ptr [rsi],rax
0x4095: mov rsi,rax
0x4098: jmp 0x3f70
0x40a0: test rax,rax
0x40a3: mov edx,0x80
0x40a8: cmove rax,rdx
0x40ac: test rax,rax
0x40af: jns 0x4092
0x40b1: sub rsp,0x8
0x40b5: call 0x4160
0x40ba: nop word ptr [rax+rax]
0x40c0: push rbx
0x40c1: mov rbx,rdi
0x40c4: call 0x3f10
0x40c9: mov rdx,rbx
0x40cc: xor esi,esi
0x40ce: mov rdi,rax
0x40d1: pop rbx
0x40d2: jmp 0x1380
0x40e0: mov rax,rdi
0x40e3: sub rsp,0x8
0x40e7: mul rsi
0x40ea: seto dl
0x40ed: test rax,rax
0x40f0: js 0x4109
0x40f2: movzx edx,dl
0x40f5: test rdx,rdx
0x40f8: jne 0x4109
0x40fa: call 0x13b0
0x40ff: test rax,rax
0x4102: je 0x4109
0x4104: add rsp,0x8
0x4108: ret 
0x4109: call 0x4160
0x410e: nop 
0x4110: push rbp
0x4111: push rbx
0x4112: mov rbp,rdi
0x4115: mov rdi,rsi
0x4118: mov rbx,rsi
0x411b: sub rsp,0x8
0x411f: call 0x3f10
0x4124: add rsp,0x8
0x4128: mov rdx,rbx
0x412b: mov rsi,rbp
0x412e: pop rbx
0x412f: pop rbp
0x4130: mov rdi,rax
0x4133: jmp 0x13c0
0x4140: push rbx
0x4141: mov rbx,rdi
0x4144: call 0x1320
0x4149: mov rdi,rbx
0x414c: lea rsi,[rax+0x1]
0x4150: pop rbx
0x4151: jmp 0x4110
0x4190: call 0x1260
0x4195: nop word ptr cs:[rax+rax]
0x419f: nop 
0x41a0: push r13
0x41a2: push r12
0x41a4: mov r13,rsi
0x41a7: push rbp
0x41a8: push rbx
0x41a9: mov rbx,rdi
0x41ac: mov r12,rdx
0x41af: sub rsp,0x18
0x41b3: mov rax,qword ptr fs:0x28
0x41bc: mov qword ptr [rsp+0x8],rax
0x41c1: xor eax,eax
0x41c3: lea rax,[rsp+0x4]
0x41c8: test rdi,rdi
0x41cb: cmove rbx,rax
0x41cf: mov rdi,rbx
0x41d2: call 0x1350
0x41d7: cmp rax,-0x3
0x41db: mov rbp,rax
0x41de: jbe 0x4200
0x41e0: test r12,r12
0x41e3: je 0x4200
0x41e5: xor edi,edi
0x41e7: call 0x42b0
0x41ec: test al,al
0x41ee: jne 0x4200
0x41f0: movzx eax,byte ptr [r13]
0x41f5: mov ebp,0x1
0x41fa: mov dword ptr [rbx],eax
0x41fc: nop dword ptr [rax]
0x4200: mov rdx,qword ptr [rsp+0x8]
0x4205: xor rdx,qword ptr fs:0x28
0x420e: mov rax,rbp
0x4211: jne 0x421e
0x4213: add rsp,0x18
0x4217: pop rbx
0x4218: pop rbp
0x4219: pop r12
0x421b: pop r13
0x421d: ret 
0x421e: call 0x1330
0x4223: nop word ptr cs:[rax+rax]
0x422d: nop dword ptr [rax]
0x4230: push r12
0x4232: push rbp
0x4233: mov rbp,rdi
0x4236: push rbx
0x4237: call 0x12a0
0x423c: mov ebx,dword ptr [rbp]
0x423f: mov rdi,rbp
0x4242: mov r12,rax
0x4245: call 0x4350
0x424a: and ebx,0x20
0x424d: test ebx,ebx
0x424f: jne 0x4268
0x4251: test eax,eax
0x4253: je 0x425f
0x4255: test r12,r12
0x4258: mov eax,0xffffffff
0x425d: je 0x4298
0x425f: pop rbx
0x4260: pop rbp
0x4261: pop r12
0x4263: ret 
0x4268: test eax,eax
0x426a: jne 0x4288
0x426c: call 0x1270
0x4271: mov dword ptr [rax],0x0
0x4277: mov eax,0xffffffff
0x427c: pop rbx
0x427d: pop rbp
0x427e: pop r12
0x4280: ret 
0x4288: pop rbx
0x4289: mov eax,0xffffffff
0x428e: pop rbp
0x428f: pop r12
0x4291: ret 
0x4298: call 0x1270
0x429d: cmp dword ptr [rax],0x9
0x42a0: pop rbx
0x42a1: pop rbp
0x42a2: pop r12
0x42a4: setne al
0x42a7: movzx eax,al
0x42aa: neg eax
0x42ac: ret 
0x42b0: sub rsp,0x8
0x42b4: xor esi,esi
0x42b6: call 0x1440
0x42bb: mov rdx,rax
0x42be: mov eax,0x1
0x42c3: test rdx,rdx
0x42c6: je 0x42e5
0x42c8: lea rdi,[rip+0xdd1]
0x42cf: mov ecx,0x2
0x42d4: mov rsi,rdx
0x42d7: rep cmpsb [rsi],es:[rdi]
0x42d9: seta cl
0x42dc: sbb cl,0x0
0x42df: xor eax,eax
0x42e1: test cl,cl
0x42e3: jne 0x42f0
0x42e5: add rsp,0x8
0x42e9: ret 
0x42f0: lea rdi,[rip+0xdab]
0x42f7: mov ecx,0x6
0x42fc: mov rsi,rdx
0x42ff: rep cmpsb [rsi],es:[rdi]
0x4301: seta al
0x4304: sbb al,0x0
0x4306: test al,al
0x4308: setne al
0x430b: add rsp,0x8
0x430f: ret 
0x4310: sub rsp,0x8
0x4314: mov edi,0xe
0x4319: call 0x1400
0x431e: test rax,rax
0x4321: je 0x4340
0x4323: cmp byte ptr [rax],0x0
0x4326: lea rdx,[rip+0xd7b]
0x432d: cmove rax,rdx
0x4331: add rsp,0x8
0x4335: ret 
0x4340: lea rax,[rip+0xd61]
0x4347: add rsp,0x8
0x434b: ret 
0x4350: push r12
0x4352: push rbp
0x4353: push rbx
0x4354: mov rbx,rdi
0x4357: call 0x13d0
0x435c: test eax,eax
0x435e: mov rdi,rbx
0x4361: js 0x43b7
0x4363: call 0x1410
0x4368: test eax,eax
0x436a: jne 0x4398
0x436c: mov rdi,rbx
0x436f: call 0x43d0
0x4374: test eax,eax
0x4376: je 0x43b4
0x4378: call 0x1270
0x437d: mov r12d,dword ptr [rax]
0x4380: mov rdi,rbx
0x4383: mov rbp,rax
0x4386: call 0x12e0
0x438b: test r12d,r12d
0x438e: jne 0x43c0
0x4390: pop rbx
0x4391: pop rbp
0x4392: pop r12
0x4394: ret 
0x4398: mov rdi,rbx
0x439b: call 0x13d0
0x43a0: xor esi,esi
0x43a2: mov edx,0x1
0x43a7: mov edi,eax
0x43a9: call 0x1370
0x43ae: cmp rax,-0x1
0x43b2: jne 0x436c
0x43b4: mov rdi,rbx
0x43b7: pop rbx
0x43b8: pop rbp
0x43b9: pop r12
0x43bb: jmp 0x12e0
0x43c0: mov dword ptr [rbp],r12d
0x43c4: mov eax,0xffffffff
0x43c9: jmp 0x4390
0x43d0: test rdi,rdi
0x43d3: push rbx
0x43d4: mov rbx,rdi
0x43d7: je 0x43ea
0x43d9: call 0x1410
0x43de: test eax,eax
0x43e0: je 0x43ea
0x43e2: test dword ptr [rbx],0x100
0x43e8: jne 0x43f8
0x43ea: mov rdi,rbx
0x43ed: pop rbx
0x43ee: jmp 0x13f0
0x43f8: mov rdi,rbx
0x43fb: mov edx,0x1
0x4400: xor esi,esi
0x4402: call 0x4410
0x4407: mov rdi,rbx
0x440a: pop rbx
0x440b: jmp 0x13f0
0x4410: mov rax,qword ptr [rdi+0x8]
0x4414: cmp qword ptr [rdi+0x10],rax
0x4418: je 0x4420
0x441a: jmp 0x1470
0x4420: mov rax,qword ptr [rdi+0x20]
0x4424: cmp qword ptr [rdi+0x28],rax
0x4428: jne 0x441a
0x442a: cmp qword ptr [rdi+0x48],0x0
0x442f: jne 0x441a
0x4431: push r12
0x4433: push rbp
0x4434: mov r12d,edx
0x4437: push rbx
0x4438: mov rbp,rsi
0x443b: mov rbx,rdi
0x443e: call 0x13d0
0x4443: mov edx,r12d
0x4446: mov rsi,rbp
0x4449: mov edi,eax
0x444b: call 0x1370
0x4450: cmp rax,-0x1
0x4454: je 0x4462
0x4456: and dword ptr [rbx],-0x11
0x4459: mov qword ptr [rbx+0x90],rax
0x4460: xor eax,eax
0x4462: pop rbx
0x4463: pop rbp
0x4464: pop r12
0x4466: ret 
0x4470: push r15
0x4472: push r14
0x4474: mov r15,rdx
0x4477: push r13
0x4479: push r12
0x447b: lea r12,[rip+0x2026ee]
0x4482: push rbp
0x4483: lea rbp,[rip+0x2026ee]
0x448a: push rbx
0x448b: mov r13d,edi
0x448e: mov r14,rsi
0x4491: sub rbp,r12
0x4494: sub rsp,0x8
0x4498: sar rbp,0x3
0x449c: call 0x1220
0x44a1: test rbp,rbp
0x44a4: je 0x44c6
0x44a6: xor ebx,ebx
0x44a8: nop dword ptr [rax+rax]
0x44b0: mov rdx,r15
0x44b3: mov rsi,r14
0x44b6: mov edi,r13d
0x44b9: call qword ptr [r12+rbx*8]
0x44bd: add rbx,0x1
0x44c1: cmp rbp,rbx
0x44c4: jne 0x44b0
0x44c6: add rsp,0x8
0x44ca: pop rbx
0x44cb: pop rbp
0x44cc: pop r12
0x44ce: pop r13
0x44d0: pop r14
0x44d2: pop r15
0x44d4: ret 
0x44e0: rep ret 
