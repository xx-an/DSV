0x19e8: sub rsp,0x8
0x19ec: mov rax,qword ptr [rip+0x20f5e5]
0x19f3: test rax,rax
0x19f6: je 0x19fa
0x19f8: call rax
0x19fa: add rsp,0x8
0x19fe: ret 
0x1a06: jmp qword ptr [rip+0x20f36c]
0x1aa0: jmp qword ptr [rip+0x20f322]
0x1ac0: jmp qword ptr [rip+0x20f312]
0x1ad0: jmp qword ptr [rip+0x20f30a]
0x1b40: jmp qword ptr [rip+0x20f2d2]
0x1bb0: jmp qword ptr [rip+0x20f29a]
0x1c20: jmp qword ptr [rip+0x20f262]
0x1cb0: jmp qword ptr [rip+0x20f21a]
0x1cf0: jmp qword ptr [rip+0x20f1fa]
0x1d10: jmp qword ptr [rip+0x20f1ea]
0x1d20: jmp qword ptr [rip+0x20f1e2]
0x1d40: jmp qword ptr [rip+0x20f1d2]
0x1dc0: jmp qword ptr [rip+0x20f192]
0x1e40: jmp qword ptr [rip+0x20f152]
0x1e50: jmp qword ptr [rip+0x20f14a]
0x1ea0: jmp qword ptr [rip+0x20f142]
0x2b29: lea rsi,[rip+0xafa0]
0x2b30: mov rbp,rax
0x2b33: xor edi,edi
0x2b35: mov edx,0x5
0x2b3a: call 0x1b60
0x2b3f: mov rcx,rbp
0x2b42: mov rdx,rax
0x2b45: xor esi,esi
0x2b47: xor edi,edi
0x2b49: xor eax,eax
0x2b4b: call 0x4140
0x2b50: jmp 0x25fe
0x2c56: lea rsi,[rip+0x9b79]
0x2c5d: xor edi,edi
0x2c5f: mov edx,0x5
0x2c64: mov rbp,rax
0x2c67: call 0x1b60
0x2c6c: mov rdx,rax
0x2c6f: mov rax,qword ptr [rsp+0x10]
0x2c74: xor edi,edi
0x2c76: mov rcx,rbp
0x2c79: mov esi,dword ptr [rax]
0x2c7b: xor eax,eax
0x2c7d: call 0x4140
0x2c82: mov esi,dword ptr [rip+0x20e704]
0x2c88: test esi,0x100
0x2c8e: je 0x37a5
0x2c94: cmp dword ptr [rip+0x20e381],0x1
0x2c9b: je 0x2ca2
0x2c9d: call 0x4770
0x2cea: lea rsi,[rip+0x9ad5]
0x2cf1: mov edx,0x5
0x2cf6: xor edi,edi
0x2cf8: mov rbp,rax
0x2cfb: call 0x1b60
0x2d00: mov rdx,rax
0x2d03: mov rax,qword ptr [rsp+0x10]
0x2d08: mov rcx,rbp
0x2d0b: xor edi,edi
0x2d0d: mov esi,dword ptr [rax]
0x2d0f: xor eax,eax
0x2d11: call 0x4140
0x2d16: mov byte ptr [rip+0x20e61f],0x0
0x2d1d: mov dword ptr [rip+0x20e611],0x1d
0x2d27: mov dword ptr [rsp+0x18],0x1
0x2e7b: lea rsi,[rip+0xac76]
0x2e82: mov rbp,rax
0x2e85: xor edi,edi
0x2e87: mov edx,0x5
0x2e8c: call 0x1b60
0x2e91: mov rcx,rbp
0x2e94: mov rdx,rax
0x2e97: xor esi,esi
0x2e99: xor edi,edi
0x2e9b: xor eax,eax
0x2e9d: call 0x4140
0x2ea2: jmp 0x2d16
0x2ed3: lea rsi,[rip+0x9a5e]
0x2eda: mov rbx,rax
0x2edd: mov edx,0x5
0x2ee2: xor edi,edi
0x2ee4: call 0x1b60
0x2ee9: mov rdx,rax
0x2eec: mov rax,qword ptr [rsp+0x10]
0x2ef1: mov rcx,rbx
0x2ef4: xor edi,edi
0x2ef6: mov esi,dword ptr [rax]
0x2ef8: xor eax,eax
0x2efa: call 0x4140
0x2eff: mov dword ptr [rsp+0x18],0x1
0x30b7: jmp 0x2cd7
0x31f0: mov edx,0x5
0x31f5: mov rbx,rax
0x31f8: lea rsi,[rip+0x9762]
0x31ff: jmp 0x2ee2
0x32b0: lea rsi,[rip+0xa8f9]
0x32b7: mov edx,0x5
0x32bc: xor edi,edi
0x32be: mov rbx,rax
0x32c1: call 0x1b60
0x32c6: mov rdx,rax
0x32c9: mov rax,qword ptr [rsp+0x10]
0x32ce: mov rcx,rbx
0x32d1: xor edi,edi
0x32d3: mov esi,dword ptr [rax]
0x32d5: xor eax,eax
0x32d7: call 0x4140
0x32dc: mov dword ptr [rsp+0x18],0x1
0x32e4: jmp 0x2f4e
0x3487: lea rsi,[rip+0xa722]
0x348e: mov edx,0x5
0x3493: xor edi,edi
0x3495: mov rbx,rax
0x3498: call 0x1b60
0x349d: mov rdx,rax
0x34a0: mov rax,qword ptr [rsp+0x10]
0x34a5: mov rcx,rbx
0x34a8: xor edi,edi
0x34aa: mov esi,dword ptr [rax]
0x34ac: xor eax,eax
0x34ae: call 0x4140
0x34b3: mov dword ptr [rsp+0x18],0x1
0x34bb: jmp 0x327c
0x351a: lea rsi,[rip+0xa577]
0x3521: mov rbx,rax
0x3524: mov edx,0x5
0x3529: xor edi,edi
0x352b: call 0x1b60
0x3530: mov r8,rbx
0x3533: mov rdx,rax
0x3536: mov rcx,r12
0x3539: mov esi,ebp
0x353b: mov edi,0x1
0x3540: xor eax,eax
0x3542: call 0x4140
0x3575: jmp 0x3069
0x3603: lea rsi,[rip+0x936b]
0x360a: xor edi,edi
0x360c: mov edx,0x5
0x3611: mov rbx,rax
0x3614: call 0x1b60
0x3619: cmp dword ptr [rsp+0x38],0x1
0x361e: mov edx,0x0
0x3623: mov esi,0x4b
0x3628: mov rcx,rax
0x362b: mov r8,rbx
0x362e: mov edi,0x1
0x3633: cmovne esi,edx
0x3636: lea rdx,[rip+0x9162]
0x363d: xor eax,eax
0x363f: call 0x4140
0x3733: lea rsi,[rip+0xa43e]
0x373a: xor edi,edi
0x373c: mov edx,0x5
0x3741: mov rbp,rax
0x3744: call 0x1b60
0x3749: mov rdx,rax
0x374c: mov rax,qword ptr [rsp+0x10]
0x3751: mov r8,rbp
0x3754: mov rcx,rbx
0x3757: xor edi,edi
0x3759: mov esi,dword ptr [rax]
0x375b: xor eax,eax
0x375d: call 0x4140
0x3762: jmp 0x2eff
0x37a5: mov dword ptr [rsp+0x18],0x1
0x37ad: jmp 0x3142
0x38c3: mov edx,0x5
0x38c8: mov rbx,rax
0x38cb: lea rsi,[rip+0x8ed4]
0x38d2: jmp 0x2ee2
0x38e8: lea rsi,[rip+0x905a]
0x38ef: mov edx,0x5
0x38f4: xor edi,edi
0x38f6: mov rbx,rax
0x38f9: call 0x1b60
0x38fe: mov rdx,rax
0x3901: mov rax,qword ptr [rsp+0x10]
0x3906: mov rcx,rbx
0x3909: xor edi,edi
0x390b: mov esi,dword ptr [rax]
0x390d: xor eax,eax
0x390f: call 0x4140
0x3914: mov dword ptr [rsp+0x18],0x1
0x391c: jmp 0x36a5
0x3929: lea rsi,[rip+0x8f5b]
0x3930: mov rbx,rax
0x3933: mov edx,0x5
0x3938: xor edi,edi
0x393a: call 0x1b60
0x393f: xor edi,edi
0x3941: mov rdx,rax
0x3944: mov rcx,rbx
0x3947: xor esi,esi
0x3949: xor eax,eax
0x394b: call 0x4140
0x3950: mov edi,0x1
0x3955: call 0x5030
0x396b: lea rsi,[rip+0x8e75]
0x3972: mov edx,0x5
0x3977: xor edi,edi
0x3979: mov rbx,rax
0x397c: call 0x1b60
0x3981: mov rdx,rax
0x3984: mov rax,qword ptr [rsp+0x10]
0x3989: xor edi,edi
0x398b: mov rcx,rbx
0x398e: mov esi,dword ptr [rax]
0x3990: xor eax,eax
0x3992: call 0x4140
0x3997: call 0x4c00
0x399c: mov edi,0x1
0x39a1: call 0x1e10
0x3aea: lea rsi,[rip+0x8e25]
0x3af1: mov edx,0x5
0x3af6: xor edi,edi
0x3af8: mov rbx,rax
0x3afb: call 0x1b60
0x3b00: mov rdx,rax
0x3b03: mov rax,qword ptr [rsp+0x10]
0x3b08: mov rcx,rbx
0x3b0b: mov edi,0x1
0x3b10: mov esi,dword ptr [rax]
0x3b12: xor eax,eax
0x3b14: call 0x4140
0x3b54: lea rsi,[rip+0x8c4b]
0x3b5b: mov edx,0x5
0x3b60: xor edi,edi
0x3b62: mov rbx,rax
0x3b65: call 0x1b60
0x3b6a: mov rdx,rax
0x3b6d: mov rax,qword ptr [rsp+0x10]
0x3b72: mov rcx,rbx
0x3b75: mov edi,0x1
0x3b7a: mov esi,dword ptr [rax]
0x3b7c: xor eax,eax
0x3b7e: call 0x4140
0x3b8f: lea rsi,[rip+0x8d33]
0x3b96: mov rbx,rax
0x3b99: mov edx,0x5
0x3b9e: xor edi,edi
0x3ba0: call 0x1b60
0x3ba5: lea rdx,[rip+0x8bf3]
0x3bac: mov rcx,rax
0x3baf: xor edi,edi
0x3bb1: mov r8,rbx
0x3bb4: xor esi,esi
0x3bb6: xor eax,eax
0x3bb8: call 0x4140
0x3bbd: mov edi,0x1
0x3bc2: call 0x5030
0x3bc7: call 0x1b90
0x3bdd: lea rsi,[rip+0x8d32]
0x3be4: mov edx,0x5
0x3be9: xor edi,edi
0x3beb: mov rbx,rax
0x3bee: call 0x1b60
0x3bf3: mov rdx,rax
0x3bf6: mov rax,qword ptr [rsp+0x10]
0x3bfb: mov rcx,rbx
0x3bfe: mov edi,0x1
0x3c03: mov esi,dword ptr [rax]
0x3c05: xor eax,eax
0x3c07: call 0x4140
0x3c4b: mov edx,0x5
0x3c50: mov rbx,rax
0x3c53: lea rsi,[rip+0x8c6f]
0x3c5a: jmp 0x3b9e
0x3c6b: mov edx,0x5
0x3c70: mov rbx,rax
0x3c73: lea rsi,[rip+0x8c3c]
0x3c7a: jmp 0x3b9e
0x3caa: hlt 
0x3cab: nop dword ptr [rax+rax]
0x3cb0: lea rdi,[rip+0x20d3f1]
0x3cb7: push rbp
0x3cb8: lea rax,[rip+0x20d3e9]
0x3cbf: cmp rax,rdi
0x3cc2: mov rbp,rsp
0x3cc5: je 0x3ce0
0x3cc7: mov rax,qword ptr [rip+0x20d2fa]
0x3cce: test rax,rax
0x3cd1: je 0x3ce0
0x3cd3: pop rbp
0x3cd4: jmp rax
0x3ce0: pop rbp
0x3ce1: ret 
0x3cf0: lea rdi,[rip+0x20d3b1]
0x3cf7: lea rsi,[rip+0x20d3aa]
0x3cfe: push rbp
0x3cff: sub rsi,rdi
0x3d02: mov rbp,rsp
0x3d05: sar rsi,0x3
0x3d09: mov rax,rsi
0x3d0c: shr rax,0x3f
0x3d10: add rsi,rax
0x3d13: sar rsi, 1
0x3d16: je 0x3d30
0x3d18: mov rax,qword ptr [rip+0x20d2c1]
0x3d1f: test rax,rax
0x3d22: je 0x3d30
0x3d24: pop rbp
0x3d25: jmp rax
0x3d30: pop rbp
0x3d31: ret 
0x3d51: push rbp
0x3d52: mov rbp,rsp
0x3d55: je 0x3d63
0x3d57: mov rdi,qword ptr [rip+0x20d2aa]
0x3d5e: call 0x1ea0
0x3d63: call 0x3cb0
0x3d68: mov byte ptr [rip+0x20d399],0x1
0x3d6f: pop rbp
0x3d70: ret 
0x3d80: push rbp
0x3d81: mov rbp,rsp
0x3d84: pop rbp
0x3d85: jmp 0x3cf0
0x3d90: mov dword ptr [rip+0x20d4da],edi
0x3d96: ret 
0x3da0: mov eax,dword ptr [rip+0x20d4c6]
0x3da6: add eax,0x1
0x3da9: mov dword ptr [rip+0x20d4bd],eax
0x3daf: ret 
0x410a: jmp 0x3f5c
0x4120: lea r8,[rip+0x84dd]
0x4127: movsd xmm0,dword ptr [rsp+0x8]
0x412d: jmp 0x3eaf
0x4132: call 0x1b90
0x4137: nop word ptr [rax+rax]
0x4160: movaps [rsp+0x60],xmm0
0x4165: movaps [rsp+0x70],xmm1
0x416a: movaps [rsp+0x80],xmm2
0x4172: movaps [rsp+0x90],xmm3
0x417a: movaps [rsp+0xa0],xmm4
0x4182: movaps [rsp+0xb0],xmm5
0x418a: movaps [rsp+0xc0],xmm6
0x4192: movaps [rsp+0xd0],xmm7
0x420f: mov rax,qword ptr [rsp+0x28]
0x4214: xor rax,qword ptr fs:0x28
0x421d: jne 0x4246
0x421f: add rsp,0xe8
0x4226: pop rbx
0x4227: pop rbp
0x4228: ret 
0x423f: mov rdx,qword ptr [rsp+0x8]
0x4244: jmp 0x41d0
0x4246: call 0x1b90
0x424b: nop dword ptr [rax+rax]
0x4352: mov rsi,r12
0x4355: xor edi,edi
0x4357: mov r13,rax
0x435a: call 0x8c90
0x435f: lea rsi,[rip+0x864a]
0x4366: mov rbp,rax
0x4369: mov edx,0x5
0x436e: xor edi,edi
0x4370: call 0x1b60
0x4375: mov r8,r13
0x4378: mov rdx,rax
0x437b: mov rcx,rbp
0x437e: xor eax,eax
0x4380: xor esi,esi
0x4382: xor edi,edi
0x4384: call 0x4140
0x4389: mov rax,qword ptr [rsp+0x8]
0x438e: jmp 0x4338
0x4390: call 0x1b90
0x4395: nop 
0x4396: nop word ptr cs:[rax+rax]
0x4465: lea rsi,[rip+0x8219]
0x446c: mov edx,0x5
0x4471: xor edi,edi
0x4473: mov rbp,rax
0x4476: call 0x1b60
0x447b: mov rbx,rax
0x447e: call 0x1a80
0x4483: mov esi,dword ptr [rax]
0x4485: mov rcx,rbp
0x4488: mov rdx,rbx
0x448b: mov edi,0x1
0x4490: xor eax,eax
0x4492: call 0x4140
0x44ab: call 0x1b90
0x459e: call 0x1b90
0x45a3: nop dword ptr [rax]
0x45a6: nop word ptr cs:[rax+rax]
0x4730: cmp byte ptr [rip+0x20c8e1],0x0
0x4737: jne 0x4758
0x4739: sub rsp,0x8
0x473d: mov rdi,qword ptr [rip+0x20c9bc]
0x4744: call 0x5db0
0x4749: test eax,eax
0x474b: jne 0x475d
0x474d: add rsp,0x8
0x4751: ret 
0x4758: jmp 0x5e50
0x475d: mov edi,0x1
0x4762: call 0x1ac0
0x4767: nop word ptr [rax+rax]
0x47ec: push rbp
0x488a: jmp 0x47a4
0x48c7: lea rsi,[rip+0x7df9]
0x48ce: mov edx,0x5
0x48d3: xor edi,edi
0x48d5: mov rbp,rax
0x48d8: call 0x1b60
0x48dd: mov rbx,rax
0x48e0: call 0x1a80
0x48e5: mov esi,dword ptr [rax]
0x48e7: mov rcx,rbp
0x48ea: mov rdx,rbx
0x48ed: mov edi,0x1
0x48f2: xor eax,eax
0x48f4: call 0x4140
0x490a: lea rsi,[rip+0x7dcc]
0x4911: mov edx,0x5
0x4916: xor edi,edi
0x4918: mov rbp,rax
0x491b: call 0x1b60
0x4920: mov rbx,rax
0x4923: call 0x1a80
0x4928: mov esi,dword ptr [rax]
0x492a: mov rcx,rbp
0x492d: mov rdx,rbx
0x4930: mov edi,0x1
0x4935: xor eax,eax
0x4937: call 0x4140
0x493c: nop dword ptr [rax]
0x49e2: jmp 0x4960
0x4a0d: call 0x1b90
0x4a12: nop dword ptr [rax]
0x4a16: nop word ptr cs:[rax+rax]
0x4b15: mov r12,qword ptr [rip+0x20c61c]
0x4b1c: test r12,r12
0x4b1f: jle 0x4ae4
0x4b21: cmp r12,rbp
0x4b24: jae 0x4ae4
0x4b26: cmp dword ptr [rip+0x20c4ef],0x1
0x4b2d: je 0x4b5e
0x4b2f: lea rdx,[rip+0x7f5a]
0x4b36: lea rsi,[rip+0x7f93]
0x4b3d: mov rcx,r12
0x4b40: xor edi,edi
0x4b42: mov r8d,0x5
0x4b48: call 0x1dd0
0x4b4d: mov rcx,r12
0x4b50: mov rdx,rax
0x4b53: xor esi,esi
0x4b55: xor edi,edi
0x4b57: xor eax,eax
0x4b59: call 0x4140
0x4b5e: mov byte ptr [rip+0x20c7c3],0x0
0x4b65: jmp 0x4ae4
0x4cd5: call 0x1b90
0x4cda: nop word ptr [rax+rax]
0x4d95: call 0x1b90
0x4d9a: nop word ptr [rax+rax]
0x4db5: cmp qword ptr [rip+0x20c55b],0x0
0x4dbd: je 0x4dd3
0x4dbf: mov rax,qword ptr [rip+0x20c552]
0x4dc6: mov qword ptr [rip+0x20c543],rax
0x4dcd: ret 
0x4dd3: sub rsp,0x8
0x4dd7: call 0x4c20
0x4ddc: mov rax,qword ptr [rip+0x20c535]
0x4de3: mov qword ptr [rip+0x20c526],rax
0x4dea: pop rax
0x4deb: ret 
0x4ff9: lea rsi,[rip+0x7b88]
0x5000: xor edi,edi
0x5002: mov edx,0x5
0x5007: mov r13,rax
0x500a: call 0x1b60
0x500f: mov rbx,rax
0x5012: call 0x1a80
0x5017: mov esi,dword ptr [rax]
0x5019: mov rcx,r13
0x501c: mov rdx,rbx
0x501f: xor edi,edi
0x5021: xor eax,eax
0x5023: call 0x4140
0x5028: jmp 0x4fc4
0x56e1: mov edx,0x5
0x56e6: mov rsi,r13
0x56e9: xor edi,edi
0x56eb: mov rbx,rax
0x56ee: call 0x1b60
0x56f3: lea rdx,[rip+0x70a5]
0x56fa: mov rcx,rax
0x56fd: xor edi,edi
0x56ff: mov r8,rbx
0x5702: xor esi,esi
0x5704: xor eax,eax
0x5706: call 0x4140
0x570b: mov edi,0x1
0x5710: call 0x5030
0x590e: mov edx,0x5
0x5913: mov rbx,rax
0x5916: lea rsi,[rip+0x6e99]
0x591d: jmp 0x5a1d
0x59b0: lea rsi,[rip+0x6e1f]
0x59b7: xor edi,edi
0x59b9: mov edx,0x5
0x59be: mov rbx,rax
0x59c1: call 0x1b60
0x59c6: mov esi,dword ptr [r15]
0x59c9: mov rdx,rax
0x59cc: xor edi,edi
0x59ce: xor eax,eax
0x59d0: mov rcx,rbx
0x59d3: call 0x4140
0x59d8: test byte ptr [rip+0x20b9ae],0x1
0x59df: je 0x59ef
0x59e1: cmp dword ptr [rip+0x20b634],0x1
0x59e8: je 0x59ef
0x59ea: call 0x4770
0x59ef: call 0x4c00
0x59f4: mov edi,0x1
0x59f9: call 0x1e10
0x5a0e: lea rsi,[rip+0x6db1]
0x5a15: mov rbx,rax
0x5a18: mov edx,0x5
0x5a1d: xor edi,edi
0x5a1f: call 0x1b60
0x5a24: mov esi,dword ptr [rsp+0xc]
0x5a28: mov rdx,rax
0x5a2b: mov rcx,rbx
0x5a2e: xor edi,edi
0x5a30: xor eax,eax
0x5a32: call 0x4140
0x5a37: jmp 0x59ef
0x5a40: call 0x1b90
0x5a53: lea rsi,[rip+0x6d4c]
0x5a5a: mov edx,0x5
0x5a5f: xor edi,edi
0x5a61: mov rbx,rax
0x5a64: call 0x1b60
0x5a69: mov esi,dword ptr [r15]
0x5a6c: mov rdx,rax
0x5a6f: mov rcx,rbx
0x5a72: mov edi,0x1
0x5a77: xor eax,eax
0x5a79: call 0x4140
0x5a7e: nop 
0x5ad3: lea rsi,[rip+0x6d0d]
0x5ada: xor edi,edi
0x5adc: mov edx,0x5
0x5ae1: mov r12,rax
0x5ae4: call 0x1b60
0x5ae9: mov rbp,rax
0x5aec: call 0x1a80
0x5af1: mov esi,dword ptr [rax]
0x5af3: xor edi,edi
0x5af5: xor eax,eax
0x5af7: mov rcx,r12
0x5afa: mov rdx,rbp
0x5afd: call 0x4140
0x5b02: test rbx,rbx
0x5b05: je 0x5b0f
0x5b07: add qword ptr [rip+0x20b869],0x1
0x5b0f: call 0x4c00
0x5b14: mov edi,0x1
0x5b19: call 0x1e10
0x5b1e: nop 
0x5db0: push r12
0x5db2: push rbp
0x5db3: mov rbp,rdi
0x5db6: push rbx
0x5db7: call 0x1ad0
0x5dbc: mov ebx,dword ptr [rbp]
0x5dbf: mov rdi,rbp
0x5dc2: mov r12,rax
0x5dc5: call 0x9c70
0x5dca: and ebx,0x20
0x5dcd: test ebx,ebx
0x5dcf: jne 0x5de8
0x5dd1: test eax,eax
0x5dd3: je 0x5ddf
0x5dd5: test r12,r12
0x5dd8: mov eax,0xffffffff
0x5ddd: je 0x5e18
0x5ddf: pop rbx
0x5de0: pop rbp
0x5de1: pop r12
0x5de3: ret 
0x5de8: test eax,eax
0x5dea: jne 0x5e08
0x5dec: call 0x1a80
0x5df1: mov dword ptr [rax],0x0
0x5df7: mov eax,0xffffffff
0x5dfc: pop rbx
0x5dfd: pop rbp
0x5dfe: pop r12
0x5e00: ret 
0x5e08: pop rbx
0x5e09: mov eax,0xffffffff
0x5e0e: pop rbp
0x5e0f: pop r12
0x5e11: ret 
0x5e18: call 0x1a80
0x5e1d: cmp dword ptr [rax],0x9
0x5e20: pop rbx
0x5e21: pop rbp
0x5e22: pop r12
0x5e24: setne al
0x5e27: movzx eax,al
0x5e2a: neg eax
0x5e2c: ret 
0x5e30: mov qword ptr [rip+0x20b5c1],rdi
0x5e37: ret 
0x5e40: mov byte ptr [rip+0x20b5a9],dil
0x5e47: ret 
0x5e50: push rbp
0x5e51: push rbx
0x5e52: sub rsp,0x8
0x5e56: mov rdi,qword ptr [rip+0x20b26b]
0x5e5d: call 0x5db0
0x5e62: test eax,eax
0x5e64: je 0x5e7c
0x5e66: call 0x1a80
0x5e6b: cmp byte ptr [rip+0x20b57e],0x0
0x5e72: mov rbx,rax
0x5e75: je 0x5e93
0x5e77: cmp dword ptr [rax],0x20
0x5e7a: jne 0x5e93
0x5e7c: mov rdi,qword ptr [rip+0x20b27d]
0x5e83: call 0x5db0
0x5e88: test eax,eax
0x5e8a: jne 0x5ed2
0x5e8c: add rsp,0x8
0x5e90: pop rbx
0x5e91: pop rbp
0x5e92: ret 
0x5e93: lea rsi,[rip+0x82e3]
0x5e9a: xor edi,edi
0x5e9c: mov edx,0x5
0x5ea1: call 0x1b60
0x5ea6: mov rdi,qword ptr [rip+0x20b54b]
0x5ead: mov rbp,rax
0x5eb0: test rdi,rdi
0x5eb3: je 0x5edd
0x5eb5: call 0x8ab0
0x5eba: mov esi,dword ptr [rbx]
0x5ebc: lea rdx,[rip+0x68dc]
0x5ec3: mov rcx,rax
0x5ec6: mov r8,rbp
0x5ec9: xor edi,edi
0x5ecb: xor eax,eax
0x5ecd: call 0x1d90
0x5ed2: mov edi,dword ptr [rip+0x20b158]
0x5ed8: call 0x1ac0
0x5edd: mov esi,dword ptr [rbx]
0x5edf: lea rdx,[rip+0x6786]
0x5ee6: mov rcx,rax
0x5ee9: xor edi,edi
0x5eeb: xor eax,eax
0x5eed: call 0x1d90
0x5ef2: jmp 0x5ed2
0x5fe5: call 0x1b90
0x5fea: nop word ptr [rax+rax]
0x6000: sub rsp,0x28
0x6004: xor edi,edi
0x6006: mov rsi,rsp
0x6009: mov rax,qword ptr fs:0x28
0x6012: mov qword ptr [rsp+0x18],rax
0x6017: xor eax,eax
0x6019: call 0x1b10
0x601e: mov rcx,qword ptr [rsp+0x18]
0x6023: xor rcx,qword ptr fs:0x28
0x602c: mov rax,qword ptr [rsp]
0x6030: mov rdx,qword ptr [rsp+0x8]
0x6035: jne 0x603c
0x6037: add rsp,0x28
0x603b: ret 
0x603c: call 0x1b90
0x6041: nop word ptr cs:[rax+rax]
0x604b: nop dword ptr [rax+rax]
0x6123: push rsi
0x65a6: push rax
0x669d: pop rax
0x669e: pop rdx
0x669f: fldt [rsp+0x20]
0x66a3: jmp 0x62b9
0x66bf: pop r8
0x66c1: pop r9
0x66c3: jmp 0x642c
0x68cd: pop rbp
0x68ce: pop r14
0x68d0: flds [rsp+0x18]
0x68d4: jmp 0x6863
0x6adb: call 0x1b90
0x6b30: push r13
0x6b32: push r12
0x6b34: mov r13,rsi
0x6b37: push rbp
0x6b38: push rbx
0x6b39: mov r12,rdx
0x6b3c: mov rbx,rdi
0x6b3f: sub rsp,0x18
0x6b43: mov rax,qword ptr fs:0x28
0x6b4c: mov qword ptr [rsp+0x8],rax
0x6b51: xor eax,eax
0x6b53: test rdi,rdi
0x6b56: je 0x6c70
0x6b5c: xor ebp,ebp
0x6b5e: cmp byte ptr [rbx],0x27
0x6b61: jne 0x6b6c
0x6b63: add rbx,0x1
0x6b67: mov ebp,0x4
0x6b6c: lea rdx,[rip+0x765d]
0x6b73: lea rsi,[rip+0x209f26]
0x6b7a: mov ecx,0x4
0x6b7f: mov rdi,rbx
0x6b82: call 0xa130
0x6b87: test eax,eax
0x6b89: js 0x6bc8
0x6b8b: lea rdx,[rip+0x763e]
0x6b92: cltq 
0x6b94: mov qword ptr [r12],0x1
0x6b9c: or ebp,dword ptr [rdx+rax*4]
0x6b9f: xor eax,eax
0x6ba1: mov dword ptr [r13],ebp
0x6ba5: mov rcx,qword ptr [rsp+0x8]
0x6baa: xor rcx,qword ptr fs:0x28
0x6bb3: jne 0x6d11
0x6bb9: add rsp,0x18
0x6bbd: pop rbx
0x6bbe: pop rbp
0x6bbf: pop r12
0x6bc1: pop r13
0x6bc3: ret 
0x6bc8: lea r8,[rip+0x75dd]
0x6bcf: xor edx,edx
0x6bd1: mov rsi,rsp
0x6bd4: mov rcx,r12
0x6bd7: mov rdi,rbx
0x6bda: call 0x9650
0x6bdf: test eax,eax
0x6be1: jne 0x6c28
0x6be3: movzx esi,byte ptr [rbx]
0x6be6: lea edx,[rsi-0x30]
0x6be9: cmp dl,0x9
0x6bec: jbe 0x6c18
0x6bee: mov rcx,qword ptr [rsp]
0x6bf2: cmp rbx,rcx
0x6bf5: jne 0x6c09
0x6bf7: jmp 0x6cd0
0x6c00: cmp rbx,rcx
0x6c03: je 0x6cd0
0x6c09: add rbx,0x1
0x6c0d: movzx edi,byte ptr [rbx]
0x6c10: lea edx,[rdi-0x30]
0x6c13: cmp dl,0x9
0x6c16: ja 0x6c00
0x6c18: mov rdx,qword ptr [r12]
0x6c1c: mov dword ptr [r13],ebp
0x6c20: jmp 0x6c34
0x6c28: mov rdx,qword ptr [r12]
0x6c2c: mov dword ptr [r13],0x0
0x6c34: test rdx,rdx
0x6c37: jne 0x6ba5
0x6c3d: lea rdi,[rip+0x5bf8]
0x6c44: call 0x1a20
0x6c49: cmp rax,0x1
0x6c4d: sbb rax,rax
0x6c50: and eax,0x200
0x6c55: add rax,0x200
0x6c5b: mov qword ptr [r12],rax
0x6c5f: mov eax,0x4
0x6c64: jmp 0x6ba5
0x6c70: lea rdi,[rip+0x7520]
0x6c77: call 0x1a20
0x6c7c: test rax,rax
0x6c7f: mov rbx,rax
0x6c82: jne 0x6b5c
0x6c88: lea rdi,[rip+0x7513]
0x6c8f: call 0x1a20
0x6c94: test rax,rax
0x6c97: mov rbx,rax
0x6c9a: jne 0x6b5c
0x6ca0: lea rdi,[rip+0x5b95]
0x6ca7: call 0x1a20
0x6cac: test rax,rax
0x6caf: je 0x6cfa
0x6cb1: mov qword ptr [r12],0x200
0x6cb9: xor eax,eax
0x6cbb: mov dword ptr [r13],0x0
0x6cc3: jmp 0x6ba5
0x6cd0: cmp byte ptr [rcx-0x1],0x42
0x6cd4: je 0x6ce8
0x6cd6: or bpl,-0x80
0x6cda: or ebp,0x20
0x6cdd: jmp 0x6c18
0x6ce8: or ebp,0x180
0x6cee: cmp byte ptr [rcx-0x2],0x69
0x6cf2: jne 0x6c18
0x6cf8: jmp 0x6cda
0x6cfa: mov qword ptr [r12],0x400
0x6d02: xor eax,eax
0x6d04: mov dword ptr [r13],0x0
0x6d0c: jmp 0x6ba5
0x6d11: call 0x1b90
0x6d16: nop word ptr cs:[rax+rax]
0x6d20: push r13
0x6d22: push r12
0x6d24: mov r13,r8
0x6d27: push rbp
0x6d28: push rbx
0x6d29: mov rbp,rdx
0x6d2c: mov r12,rcx
0x6d2f: sub rsp,0xe8
0x6d36: test al,al
0x6d38: je 0x6d74
0x6d3a: movaps [rsp+0x60],xmm0
0x6d3f: movaps [rsp+0x70],xmm1
0x6d44: movaps [rsp+0x80],xmm2
0x6d4c: movaps [rsp+0x90],xmm3
0x6d54: movaps [rsp+0xa0],xmm4
0x6d5c: movaps [rsp+0xb0],xmm5
0x6d64: movaps [rsp+0xc0],xmm6
0x6d6c: movaps [rsp+0xd0],xmm7
0x6d74: mov rax,qword ptr fs:0x28
0x6d7d: mov qword ptr [rsp+0x28],rax
0x6d82: xor eax,eax
0x6d84: cmp edi,0x2
0x6d87: mov ebx,dword ptr [rip+0x20a353]
0x6d8d: mov dword ptr [rip+0x20a349],0x0
0x6d97: je 0x6dd0
0x6d99: mov rax,qword ptr [rsp+0x28]
0x6d9e: xor rax,qword ptr fs:0x28
0x6da7: mov dword ptr [rip+0x20a333],ebx
0x6dad: mov dword ptr [rip+0x20a319],0x0
0x6db7: jne 0x6e5a
0x6dbd: add rsp,0xe8
0x6dc4: pop rbx
0x6dc5: pop rbp
0x6dc6: pop r12
0x6dc8: pop r13
0x6dca: ret 
0x6dd0: lea rcx,[rip+0x209ce9]
0x6dd7: lea rdx,[rip+0x7422]
0x6dde: xor r8d,r8d
0x6de1: mov qword ptr [rsp+0x8],r9
0x6de6: call 0x1ba0
0x6deb: cmp eax,-0x1
0x6dee: je 0x6d99
0x6df0: cmp eax,0x68
0x6df3: mov r9,qword ptr [rsp+0x8]
0x6df8: je 0x6e50
0x6dfa: cmp eax,0x76
0x6dfd: jne 0x6d99
0x6dff: lea rax,[rsp+0x110]
0x6e07: mov rdi,qword ptr [rip+0x20a2ba]
0x6e0e: lea r8,[rsp+0x10]
0x6e13: mov rcx,r13
0x6e16: mov rdx,r12
0x6e19: mov rsi,rbp
0x6e1c: mov qword ptr [rsp+0x18],rax
0x6e21: lea rax,[rsp+0x30]
0x6e26: mov dword ptr [rsp+0x10],0x30
0x6e2e: mov dword ptr [rsp+0x14],0x30
0x6e36: mov qword ptr [rsp+0x20],rax
0x6e3b: call 0x91e0
0x6e40: xor edi,edi
0x6e42: call 0x1e10
0x6e47: nop word ptr [rax+rax]
0x6e50: xor edi,edi
0x6e52: call r9
0x6e55: jmp 0x6d99
0x6e5a: call 0x1b90
0x6e5f: nop 
0x6e84: movaps [rsp+0x50],xmm0
0x6e89: movaps [rsp+0x60],xmm1
0x6e8e: movaps [rsp+0x70],xmm2
0x6e93: movaps [rsp+0x80],xmm3
0x6e9b: movaps [rsp+0x90],xmm4
0x6ea3: movaps [rsp+0xa0],xmm5
0x6eab: movaps [rsp+0xb0],xmm6
0x6eb3: movaps [rsp+0xc0],xmm7
0x6f57: nop word ptr [rax+rax]
0x6f94: jmp 0x6f68
0x6f96: call 0x1b90
0x6f9b: nop dword ptr [rax+rax]
0x703f: nop 
0x7040: push rbp
0x7041: push rbx
0x7042: mov rbp,rdi
0x7045: mov ebx,esi
0x7047: sub rsp,0x8
0x704b: call 0xa510
0x7050: movzx edx,byte ptr [rax]
0x7053: and edx,-0x21
0x7056: cmp dl,0x55
0x7059: je 0x70d0
0x705b: cmp dl,0x47
0x705e: je 0x7080
0x7060: lea rax,[rip+0x71f4]
0x7067: lea rdx,[rip+0x71ef]
0x706e: cmp ebx,0x9
0x7071: cmovne rax,rdx
0x7075: add rsp,0x8
0x7079: pop rbx
0x707a: pop rbp
0x707b: ret 
0x7080: movzx edx,byte ptr [rax+0x1]
0x7084: and edx,-0x21
0x7087: cmp dl,0x42
0x708a: jne 0x7060
0x708c: cmp byte ptr [rax+0x2],0x31
0x7090: jne 0x7060
0x7092: cmp byte ptr [rax+0x3],0x38
0x7096: jne 0x7060
0x7098: cmp byte ptr [rax+0x4],0x30
0x709c: jne 0x7060
0x709e: cmp byte ptr [rax+0x5],0x33
0x70a2: jne 0x7060
0x70a4: cmp byte ptr [rax+0x6],0x30
0x70a8: jne 0x7060
0x70aa: cmp byte ptr [rax+0x7],0x0
0x70ae: jne 0x7060
0x70b0: cmp byte ptr [rbp],0x60
0x70b4: lea rax,[rip+0x7199]
0x70bb: lea rdx,[rip+0x7196]
0x70c2: cmovne rax,rdx
0x70c6: add rsp,0x8
0x70ca: pop rbx
0x70cb: pop rbp
0x70cc: ret 
0x70d0: movzx edx,byte ptr [rax+0x1]
0x70d4: and edx,-0x21
0x70d7: cmp dl,0x54
0x70da: jne 0x7060
0x70dc: movzx edx,byte ptr [rax+0x2]
0x70e0: and edx,-0x21
0x70e3: cmp dl,0x46
0x70e6: jne 0x7060
0x70ec: cmp byte ptr [rax+0x3],0x2d
0x70f0: jne 0x7060
0x70f6: cmp byte ptr [rax+0x4],0x38
0x70fa: jne 0x7060
0x7100: cmp byte ptr [rax+0x5],0x0
0x7104: jne 0x7060
0x710a: cmp byte ptr [rbp],0x60
0x710e: lea rax,[rip+0x7137]
0x7115: lea rdx,[rip+0x7134]
0x711c: cmovne rax,rdx
0x7120: add rsp,0x8
0x7124: pop rbx
0x7125: pop rbp
0x7126: ret 
0x7203: xor r11d,r11d
0x7206: mov rax,rbp
0x7209: mov r8d,r12d
0x720c: mov rbp,r11
0x720f: mov r11,rax
0x7212: nop word ptr [rax+rax]
0x7218: cmp r11,rbp
0x721b: setne r12b
0x721f: cmp r11,-0x1
0x7223: jne 0x7232
0x7225: mov rax,qword ptr [rsp+0x10]
0x722a: cmp byte ptr [rax+rbp],0x0
0x722e: setne r12b
0x7232: test r12b,r12b
0x7235: je 0x7890
0x723b: cmp dword ptr [rsp+0x8],0x2
0x7240: mov rdi,qword ptr [rsp+0x10]
0x7245: lea r9,[rdi+rbp]
0x7249: setne al
0x724c: and al,byte ptr [rsp+0xd]
0x7250: mov r10d,eax
0x7253: je 0x7300
0x7259: mov rax,qword ptr [rsp+0x18]
0x725e: test rax,rax
0x7261: je 0x7690
0x7267: cmp r11,-0x1
0x726b: lea rbx,[rbp+rax]
0x7270: jne 0x72a0
0x7272: cmp rax,0x1
0x7276: jbe 0x72a0
0x7278: mov byte ptr [rsp+0x38],r8b
0x727d: mov byte ptr [rsp+0x30],r10b
0x7282: mov qword ptr [rsp+0x28],r9
0x7287: call 0x1b80
0x728c: movzx r8d,byte ptr [rsp+0x38]
0x7292: movzx r10d,byte ptr [rsp+0x30]
0x7298: mov r11,rax
0x729b: mov r9,qword ptr [rsp+0x28]
0x72a0: cmp rbx,r11
0x72a3: mov byte ptr [rsp+0x28],r10b
0x72a8: ja 0x7860
0x72ae: mov rdx,qword ptr [rsp+0x18]
0x72b3: mov rsi,qword ptr [rsp+0x48]
0x72b8: mov rdi,r9
0x72bb: mov qword ptr [rsp+0x40],r11
0x72c0: mov byte ptr [rsp+0x38],r8b
0x72c5: mov qword ptr [rsp+0x30],r9
0x72ca: call 0x1c90
0x72cf: test eax,eax
0x72d1: mov r9,qword ptr [rsp+0x30]
0x72d6: movzx r8d,byte ptr [rsp+0x38]
0x72dc: mov r11,qword ptr [rsp+0x40]
0x72e1: jne 0x7860
0x72e7: cmp byte ptr [rsp+0xf],0x0
0x72ec: movzx r10d,byte ptr [rsp+0x28]
0x72f2: jne 0x8275
0x72f8: nop dword ptr [rax+rax]
0x7300: movzx ebx,byte ptr [r9]
0x7304: cmp bl,0x7e
0x7307: ja 0x7628
0x730d: lea rcx,[rip+0x6fd8]
0x7314: movzx edx,bl
0x7317: movsxd rax,dword ptr [rcx+rdx*4]
0x731b: add rax,rcx
0x731e: jmp rax
0x7358: cmp byte ptr [rsp+0xd],0x1
0x735d: jne 0x7472
0x7363: test dl,dl
0x7365: jne 0x7472
0x736b: mov rsi,qword ptr [rsp+0x20]
0x7370: test rsi,rsi
0x7373: je 0x7389
0x7375: mov edx,ebx
0x7377: shr dl,0x5
0x737a: movzx edx,dl
0x737d: mov edx,dword ptr [rsi+rdx*4]
0x7380: btl edx,ebx
0x7383: jb 0x74d3
0x7389: test r10b,r10b
0x738c: jne 0x74d3
0x7392: xor eax,0x1
0x7395: add rbp,0x1
0x7399: and eax,r8d
0x739c: test al,al
0x739e: je 0x73c0
0x73a0: cmp r13,r15
0x73a3: jbe 0x73aa
0x73a5: mov byte ptr [r14+r15],0x27
0x73aa: lea rax,[r15+0x1]
0x73ae: cmp r13,rax
0x73b1: jbe 0x73b9
0x73b3: mov byte ptr [r14+r15+0x1],0x27
0x73b9: add r15,0x2
0x73bd: xor r8d,r8d
0x73c0: cmp r15,r13
0x73c3: jae 0x73c9
0x73c5: mov byte ptr [r14+r15],bl
0x73c9: movzx edi,byte ptr [rsp+0xe]
0x73ce: add r15,0x1
0x73d2: mov eax,0x0
0x73d7: test r12b,r12b
0x73da: cmove edi,eax
0x73dd: mov byte ptr [rsp+0xe],dil
0x73e2: jmp 0x7218
0x7472: cmp byte ptr [rsp+0xf],0x0
0x7477: jne 0x736b
0x747d: jmp 0x7389
0x74d3: cmp dword ptr [rsp+0x8],0x2
0x74d8: sete dl
0x74db: cmp byte ptr [rsp+0xf],0x0
0x74e0: mov eax,edx
0x74e2: jne 0x7d38
0x74e8: mov eax,r8d
0x74eb: xor eax,0x1
0x74ee: and al,dl
0x74f0: je 0x7521
0x74f2: cmp r13,r15
0x74f5: jbe 0x74fc
0x74f7: mov byte ptr [r14+r15],0x27
0x74fc: lea rdx,[r15+0x1]
0x7500: cmp r13,rdx
0x7503: jbe 0x750b
0x7505: mov byte ptr [r14+r15+0x1],0x24
0x750b: lea rdx,[r15+0x2]
0x750f: cmp r13,rdx
0x7512: jbe 0x751a
0x7514: mov byte ptr [r14+r15+0x2],0x27
0x751a: add r15,0x3
0x751e: mov r8d,eax
0x7521: cmp r13,r15
0x7524: jbe 0x752b
0x7526: mov byte ptr [r14+r15],0x5c
0x752b: add r15,0x1
0x752f: add rbp,0x1
0x7533: jmp 0x73c0
0x7620: xor r10d,r10d
0x7623: nop dword ptr [rax+rax]
0x7628: cmp qword ptr [rsp+0x58],0x1
0x762e: jne 0x79d8
0x7634: mov qword ptr [rsp+0x38],r11
0x7639: mov byte ptr [rsp+0x30],r8b
0x763e: mov byte ptr [rsp+0x28],r10b
0x7643: call 0x1e80
0x7648: mov rcx,qword ptr [rax]
0x764b: movzx edx,bl
0x764e: movzx r10d,byte ptr [rsp+0x28]
0x7654: movzx r8d,byte ptr [rsp+0x30]
0x765a: mov r11,qword ptr [rsp+0x38]
0x765f: mov edi,0x1
0x7664: movzx eax,word ptr [rcx+rdx*2]
0x7668: and ax,0x4000
0x766c: setne r12b
0x7670: sete al
0x7673: and al,byte ptr [rsp+0xd]
0x7677: test al,al
0x7679: jne 0x8011
0x767f: cmp dword ptr [rsp+0x8],0x2
0x7684: sete dl
0x7687: jmp 0x7358
0x7690: movzx ebx,byte ptr [r9]
0x7694: cmp bl,0x7e
0x7697: ja 0x7620
0x7699: lea rcx,[rip+0x6e48]
0x76a0: movzx edx,bl
0x76a3: movsxd rax,dword ptr [rcx+rdx*4]
0x76a7: add rax,rcx
0x76aa: jmp rax
0x7860: xor r10d,r10d
0x7863: jmp 0x7300
0x7890: cmp dword ptr [rsp+0x8],0x2
0x7895: movzx ebx,byte ptr [rsp+0xf]
0x789a: mov r12d,r8d
0x789d: mov rbp,r11
0x78a0: sete dl
0x78a3: mov eax,ebx
0x78a5: test r15,r15
0x78a8: sete cl
0x78ab: and eax,edx
0x78ad: and al,cl
0x78af: jne 0x8316
0x78b5: mov eax,ebx
0x78b7: xor eax,0x1
0x78ba: and dl,al
0x78bc: je 0x822c
0x78c2: cmp byte ptr [rsp+0x7c],0x0
0x78c7: je 0x822a
0x78cd: cmp byte ptr [rsp+0xe],0x0
0x78d2: jne 0x82cd
0x78d8: test r13,r13
0x78db: sete al
0x78de: cmp qword ptr [rsp+0x50],0x0
0x78e4: setne dl
0x78e7: and al,dl
0x78e9: je 0x830c
0x78ef: mov r13,qword ptr [rsp+0x50]
0x78f4: lea rbx,[rip+0x6962]
0x78fb: mov byte ptr [r14],0x27
0x78ff: mov dword ptr [rsp+0x8],0x2
0x7907: mov r15d,0x1
0x790d: mov qword ptr [rsp+0x18],0x1
0x7916: mov byte ptr [rsp+0xf],0x0
0x791b: mov qword ptr [rsp+0x48],rbx
0x7920: mov byte ptr [rsp+0x7c],al
0x7924: jmp 0x7203
0x79d8: lea rax,[rsp+0xa0]
0x79e0: cmp r11,-0x1
0x79e4: mov qword ptr [rsp+0xa0],0x0
0x79f0: mov qword ptr [rsp+0x28],rax
0x79f5: jne 0x7a24
0x79f7: mov rdi,qword ptr [rsp+0x10]
0x79fc: mov byte ptr [rsp+0x40],r8b
0x7a01: mov byte ptr [rsp+0x38],r10b
0x7a06: mov qword ptr [rsp+0x30],r9
0x7a0b: call 0x1b80
0x7a10: movzx r8d,byte ptr [rsp+0x40]
0x7a16: movzx r10d,byte ptr [rsp+0x38]
0x7a1c: mov r11,rax
0x7a1f: mov r9,qword ptr [rsp+0x30]
0x7a24: lea rax,[rsp+0x9c]
0x7a2c: xor ecx,ecx
0x7a2e: mov byte ptr [rsp+0x7e],bl
0x7a32: mov byte ptr [rsp+0x7d],r8b
0x7a37: mov rbx,rcx
0x7a3a: mov qword ptr [rsp+0x88],r9
0x7a42: mov qword ptr [rsp+0x38],rax
0x7a47: mov byte ptr [rsp+0x7f],r10b
0x7a4c: mov qword ptr [rsp+0x80],r15
0x7a54: mov qword ptr [rsp+0x40],r14
0x7a59: mov qword ptr [rsp+0x70],r13
0x7a5e: mov qword ptr [rsp+0x30],r11
0x7a63: mov rax,qword ptr [rsp+0x10]
0x7a68: lea r14,[rbp+rbx]
0x7a6d: mov rdx,qword ptr [rsp+0x30]
0x7a72: mov rcx,qword ptr [rsp+0x28]
0x7a77: mov rdi,qword ptr [rsp+0x38]
0x7a7c: lea r13,[rax+r14]
0x7a80: sub rdx,r14
0x7a83: mov rsi,r13
0x7a86: call 0xa010
0x7a8b: test rax,rax
0x7a8e: mov r15,rax
0x7a91: je 0x7ae1
0x7a93: cmp rax,-0x1
0x7a97: je 0x80b5
0x7a9d: cmp rax,-0x2
0x7aa1: je 0x8041
0x7aa7: cmp dword ptr [rsp+0x8],0x2
0x7aac: sete al
0x7aaf: and al,byte ptr [rsp+0xf]
0x7ab3: jne 0x7c50
0x7ab9: mov edi,dword ptr [rsp+0x9c]
0x7ac0: call 0x1e50
0x7ac5: mov rdi,qword ptr [rsp+0x28]
0x7aca: test eax,eax
0x7acc: mov eax,0x0
0x7ad1: cmove r12d,eax
0x7ad5: add rbx,r15
0x7ad8: call 0x1e40
0x7add: test eax,eax
0x7adf: je 0x7a63
0x7ae1: mov edx,r12d
0x7ae4: mov rdi,rbx
0x7ae7: movzx r8d,byte ptr [rsp+0x7d]
0x7aed: xor edx,0x1
0x7af0: movzx ebx,byte ptr [rsp+0x7e]
0x7af5: movzx r10d,byte ptr [rsp+0x7f]
0x7afb: and dl,byte ptr [rsp+0xd]
0x7aff: mov r15,qword ptr [rsp+0x80]
0x7b07: mov r14,qword ptr [rsp+0x40]
0x7b0c: mov r13,qword ptr [rsp+0x70]
0x7b11: mov r11,qword ptr [rsp+0x30]
0x7b16: cmp rdi,0x1
0x7b1a: jbe 0x811b
0x7b20: mov rcx,rdi
0x7b23: xor esi,esi
0x7b25: movzx r9d,byte ptr [rsp+0xf]
0x7b2b: add rcx,rbp
0x7b2e: mov rdi,qword ptr [rsp+0x10]
0x7b33: jmp 0x7bee
0x7b40: cmp dword ptr [rsp+0x8],0x2
0x7b45: sete al
0x7b48: test r9b,r9b
0x7b4b: jne 0x8000
0x7b51: mov esi,r8d
0x7b54: xor esi,0x1
0x7b57: and al,sil
0x7b5a: je 0x7b8b
0x7b5c: cmp r13,r15
0x7b5f: jbe 0x7b66
0x7b61: mov byte ptr [r14+r15],0x27
0x7b66: lea rsi,[r15+0x1]
0x7b6a: cmp r13,rsi
0x7b6d: jbe 0x7b75
0x7b6f: mov byte ptr [r14+r15+0x1],0x24
0x7b75: lea rsi,[r15+0x2]
0x7b79: cmp r13,rsi
0x7b7c: jbe 0x7b84
0x7b7e: mov byte ptr [r14+r15+0x2],0x27
0x7b84: add r15,0x3
0x7b88: mov r8d,eax
0x7b8b: cmp r13,r15
0x7b8e: jbe 0x7b95
0x7b90: mov byte ptr [r14+r15],0x5c
0x7b95: lea rax,[r15+0x1]
0x7b99: cmp r13,rax
0x7b9c: jbe 0x7bab
0x7b9e: mov eax,ebx
0x7ba0: shr al,0x6
0x7ba3: add eax,0x30
0x7ba6: mov byte ptr [r14+r15+0x1],al
0x7bab: lea rax,[r15+0x2]
0x7baf: cmp r13,rax
0x7bb2: jbe 0x7bc4
0x7bb4: mov eax,ebx
0x7bb6: shr al,0x3
0x7bb9: and eax,0x7
0x7bbc: add eax,0x30
0x7bbf: mov byte ptr [r14+r15+0x2],al
0x7bc4: and ebx,0x7
0x7bc7: add rbp,0x1
0x7bcb: add r15,0x3
0x7bcf: add ebx,0x30
0x7bd2: cmp rbp,rcx
0x7bd5: jae 0x73c0
0x7bdb: mov esi,edx
0x7bdd: cmp r13,r15
0x7be0: jbe 0x7be6
0x7be2: mov byte ptr [r14+r15],bl
0x7be6: movzx ebx,byte ptr [rdi+rbp]
0x7bea: add r15,0x1
0x7bee: test dl,dl
0x7bf0: jne 0x7b40
0x7bf6: mov eax,esi
0x7bf8: xor eax,0x1
0x7bfb: and eax,r8d
0x7bfe: test r10b,r10b
0x7c01: je 0x7c11
0x7c03: cmp r13,r15
0x7c06: jbe 0x7c0d
0x7c08: mov byte ptr [r14+r15],0x5c
0x7c0d: add r15,0x1
0x7c11: add rbp,0x1
0x7c15: cmp rbp,rcx
0x7c18: jae 0x739c
0x7c1e: test al,al
0x7c20: je 0x801e
0x7c26: cmp r13,r15
0x7c29: jbe 0x7c30
0x7c2b: mov byte ptr [r14+r15],0x27
0x7c30: lea rax,[r15+0x1]
0x7c34: cmp r13,rax
0x7c37: jbe 0x7c3f
0x7c39: mov byte ptr [r14+r15+0x1],0x27
0x7c3f: add r15,0x2
0x7c43: xor r10d,r10d
0x7c46: xor r8d,r8d
0x7c49: jmp 0x7bdd
0x7c50: cmp r15,0x1
0x7c54: je 0x7ab9
0x7c5a: mov rdi,qword ptr [rsp+0x10]
0x7c5f: lea rcx,[rdi+r15]
0x7c63: lea rdx,[rdi+r14+0x1]
0x7c68: lea r8,[rcx+r14]
0x7c6c: jmp 0x7c7d
0x7c70: add rdx,0x1
0x7c74: cmp r8,rdx
0x7c77: je 0x7ab9
0x7c7d: movzx ecx,byte ptr [rdx]
0x7c80: sub ecx,0x5b
0x7c83: cmp cl,0x21
0x7c86: ja 0x7c70
0x7c88: mov esi,0x1
0x7c8d: shl rsi,cl
0x7c90: mov rcx,rsi
0x7c93: movabsq rsi,0x20000002b
0x7c9d: test rcx,rsi
0x7ca0: je 0x7c70
0x7ca2: mov r14,qword ptr [rsp+0x40]
0x7ca7: mov r13,qword ptr [rsp+0x70]
0x7cac: mov rbp,qword ptr [rsp+0x30]
0x7cb1: mov dword ptr [rsp+0x8],0x2
0x7cb9: cmp byte ptr [rsp+0xd],0x0
0x7cbe: je 0x7cd0
0x7cc0: test al,al
0x7cc2: mov eax,0x4
0x7cc7: cmove eax,dword ptr [rsp+0x8]
0x7ccc: mov dword ptr [rsp+0x8],eax
0x7cd0: sub rsp,0x8
0x7cd4: mov rcx,rbp
0x7cd7: mov rsi,r13
0x7cda: push qword ptr [rsp+0x68]
0x7cde: push qword ptr [rsp+0x78]
0x7ce2: mov rdi,r14
0x7ce5: push 0x0
0x7ce7: mov r9d,dword ptr [rsp+0x98]
0x7cef: mov r8d,dword ptr [rsp+0x28]
0x7cf4: mov rdx,qword ptr [rsp+0x30]
0x7cf9: and r9d,-0x3
0x7cfd: call 0x7130
0x7d02: add rsp,0x20
0x7d06: mov r15,rax
0x7d09: mov rbx,qword ptr [rsp+0xa8]
0x7d11: xor rbx,qword ptr fs:0x28
0x7d1a: mov rax,r15
0x7d1d: jne 0x8323
0x7d23: add rsp,0xb8
0x7d2a: pop rbx
0x7d2b: pop rbp
0x7d2c: pop r12
0x7d2e: pop r13
0x7d30: pop r14
0x7d32: pop r15
0x7d34: ret 
0x7d38: mov rbp,r11
0x7d3b: jmp 0x7cb9
0x7da1: test r13,r13
0x7da4: jne 0x833a
0x7daa: lea rax,[rip+0x64ac]
0x7db1: mov qword ptr [rsp+0x50],0x0
0x7dba: mov byte ptr [rsp+0xe],0x1
0x7dbf: mov byte ptr [rsp+0x7c],0x0
0x7dc4: xor r12d,r12d
0x7dc7: mov byte ptr [rsp+0xf],0x0
0x7dcc: mov qword ptr [rsp+0x18],0x1
0x7dd5: mov qword ptr [rsp+0x48],rax
0x7dda: mov r15d,0x1
0x7de0: mov dword ptr [rsp+0x8],0x2
0x7de8: jmp 0x7203
0x8000: movzx ebx,byte ptr [rsp+0xf]
0x8005: mov rbp,r11
0x8008: mov byte ptr [rsp+0xd],bl
0x800c: jmp 0x7cb9
0x8011: movzx edx,byte ptr [rsp+0xd]
0x8016: xor r12d,r12d
0x8019: jmp 0x7b20
0x801e: xor r10d,r10d
0x8021: jmp 0x7bdd
0x8041: mov r11,qword ptr [rsp+0x30]
0x8046: mov rsi,r14
0x8049: mov rcx,r13
0x804c: mov rax,rbx
0x804f: mov rdi,rbx
0x8052: movzx r8d,byte ptr [rsp+0x7d]
0x8058: movzx ebx,byte ptr [rsp+0x7e]
0x805d: mov r9,qword ptr [rsp+0x88]
0x8065: cmp rsi,r11
0x8068: movzx r10d,byte ptr [rsp+0x7f]
0x806e: mov r15,qword ptr [rsp+0x80]
0x8076: mov r14,qword ptr [rsp+0x40]
0x807b: mov r13,qword ptr [rsp+0x70]
0x8080: jae 0x80a8
0x8082: cmp byte ptr [rcx],0x0
0x8085: jne 0x8097
0x8087: jmp 0x80a8
0x8090: cmp byte ptr [r9+rax],0x0
0x8095: je 0x80a5
0x8097: add rax,0x1
0x809b: lea rdx,[rbp+rax]
0x80a0: cmp r11,rdx
0x80a3: ja 0x8090
0x80a5: mov rdi,rax
0x80a8: movzx edx,byte ptr [rsp+0xd]
0x80ad: xor r12d,r12d
0x80b0: jmp 0x7b16
0x80b5: mov rdi,rbx
0x80b8: movzx r8d,byte ptr [rsp+0x7d]
0x80be: movzx ebx,byte ptr [rsp+0x7e]
0x80c3: movzx r10d,byte ptr [rsp+0x7f]
0x80c9: mov r15,qword ptr [rsp+0x80]
0x80d1: xor r12d,r12d
0x80d4: mov r14,qword ptr [rsp+0x40]
0x80d9: mov r13,qword ptr [rsp+0x70]
0x80de: mov r11,qword ptr [rsp+0x30]
0x80e3: movzx edx,byte ptr [rsp+0xd]
0x80e8: jmp 0x7b16
0x811b: mov eax,edx
0x811d: jmp 0x7677
0x822a: mov eax,edx
0x822c: mov rbx,qword ptr [rsp+0x48]
0x8231: test rbx,rbx
0x8234: je 0x8262
0x8236: test al,al
0x8238: je 0x8262
0x823a: movzx ecx,byte ptr [rbx]
0x823d: mov rax,rbx
0x8240: test cl,cl
0x8242: je 0x8262
0x8244: mov rdx,r15
0x8247: sub rax,r15
0x824a: cmp r13,rdx
0x824d: jbe 0x8253
0x824f: mov byte ptr [r14+rdx],cl
0x8253: add rdx,0x1
0x8257: movzx ecx,byte ptr [rax+rdx]
0x825b: test cl,cl
0x825d: jne 0x824a
0x825f: mov r15,rdx
0x8262: cmp r13,r15
0x8265: jbe 0x7d09
0x826b: mov byte ptr [r14+r15],0x0
0x8270: jmp 0x7d09
0x8275: cmp dword ptr [rsp+0x8],0x2
0x827a: movzx ebx,byte ptr [rsp+0xf]
0x827f: mov rbp,r11
0x8282: sete al
0x8285: mov byte ptr [rsp+0xd],bl
0x8289: jmp 0x7cb9
0x82cd: sub rsp,0x8
0x82d1: mov r8d,0x5
0x82d7: mov rcx,r11
0x82da: push qword ptr [rsp+0x68]
0x82de: push qword ptr [rsp+0x78]
0x82e2: mov rdi,r14
0x82e5: push qword ptr [rsp+0x38]
0x82e9: mov r9d,dword ptr [rsp+0x98]
0x82f1: mov rdx,qword ptr [rsp+0x30]
0x82f6: mov rsi,qword ptr [rsp+0x70]
0x82fb: call 0x7130
0x8300: add rsp,0x20
0x8304: mov r15,rax
0x8307: jmp 0x7d09
0x830c: movzx eax,byte ptr [rsp+0x7c]
0x8311: jmp 0x822c
0x8316: mov dword ptr [rsp+0x8],0x2
0x831e: jmp 0x7cb9
0x8323: call 0x1b90
0x8328: mov byte ptr [rsp+0xd],0x0
0x832d: jmp 0x7da1
0x833a: mov byte ptr [rsp+0xe],0x1
0x833f: xor eax,eax
0x8341: xor r12d,r12d
0x8344: mov qword ptr [rsp+0x50],0x0
0x834d: jmp 0x78f4
0x8364: nop 
0x8366: nop word ptr cs:[rax+rax]
0x845c: add rsp,0x20
0x8460: mov r11,qword ptr [rsp+0x10]
0x8465: cmp r11,rax
0x8468: ja 0x84d1
0x846a: lea rsi,[rax+0x1]
0x846e: lea rax,[rip+0x208fab]
0x8475: cmp r12,rax
0x8478: mov qword ptr [rbx],rsi
0x847b: je 0x848f
0x847d: mov rdi,r12
0x8480: mov qword ptr [rsp+0x10],rsi
0x8485: call 0x1a60
0x848a: mov rsi,qword ptr [rsp+0x10]
0x848f: mov rdi,rsi
0x8492: mov qword ptr [rsp+0x10],rsi
0x8497: call 0x93c0
0x849c: sub rsp,0x8
0x84a0: mov qword ptr [rbx+0x8],rax
0x84a4: mov r8d,dword ptr [rbp]
0x84a8: push qword ptr [rbp+0x30]
0x84ab: push qword ptr [rbp+0x28]
0x84ae: mov rcx,r14
0x84b1: push r15
0x84b3: mov r9d,dword ptr [rsp+0x3c]
0x84b8: mov rdi,rax
0x84bb: mov rdx,qword ptr [rsp+0x28]
0x84c0: mov rsi,qword ptr [rsp+0x30]
0x84c5: mov r12,rax
0x84c8: call 0x7130
0x84cd: add rsp,0x20
0x84d1: mov eax,dword ptr [rsp+0x18]
0x84d5: mov dword ptr [r13],eax
0x84d9: add rsp,0x28
0x84dd: mov rax,r12
0x84e0: pop rbx
0x84e1: pop rbp
0x84e2: pop r12
0x84e4: pop r13
0x84e6: pop r14
0x84e8: pop r15
0x84ea: ret 
0x8511: call 0x1a70
0x8516: call 0x9610
0x851b: nop dword ptr [rax+rax]
0x8520: push r12
0x8522: push rbp
0x8523: push rbx
0x8524: mov rbx,rdi
0x8527: call 0x1a80
0x852c: mov r12d,dword ptr [rax]
0x852f: mov rbp,rax
0x8532: lea rax,[rip+0x208fe7]
0x8539: test rbx,rbx
0x853c: mov esi,0x38
0x8541: cmove rbx,rax
0x8545: mov rdi,rbx
0x8548: call 0x95c0
0x854d: mov dword ptr [rbp],r12d
0x8551: pop rbx
0x8552: pop rbp
0x8553: pop r12
0x8555: ret 
0x8560: lea rax,[rip+0x208fb9]
0x8567: test rdi,rdi
0x856a: cmove rdi,rax
0x856e: mov eax,dword ptr [rdi]
0x8570: ret 
0x8580: lea rax,[rip+0x208f99]
0x8587: test rdi,rdi
0x858a: cmove rdi,rax
0x858e: mov dword ptr [rdi],esi
0x8590: ret 
0x85a0: lea rax,[rip+0x208f79]
0x85a7: test rdi,rdi
0x85aa: mov ecx,esi
0x85ac: cmove rdi,rax
0x85b0: mov eax,esi
0x85b2: and ecx,0x1f
0x85b5: shr al,0x5
0x85b8: movzx eax,al
0x85bb: lea rdi,[rdi+rax*4+0x8]
0x85c0: mov esi,dword ptr [rdi]
0x85c2: mov eax,esi
0x85c4: shr eax,cl
0x85c6: xor edx,eax
0x85c8: and eax,0x1
0x85cb: and edx,0x1
0x85ce: shl edx,cl
0x85d0: xor edx,esi
0x85d2: mov dword ptr [rdi],edx
0x85d4: ret 
0x85e0: lea rax,[rip+0x208f39]
0x85e7: test rdi,rdi
0x85ea: cmove rdi,rax
0x85ee: mov eax,dword ptr [rdi+0x4]
0x85f1: mov dword ptr [rdi+0x4],esi
0x85f4: ret 
0x8600: lea rax,[rip+0x208f19]
0x8607: test rdi,rdi
0x860a: cmove rdi,rax
0x860e: test rsi,rsi
0x8611: mov dword ptr [rdi],0xa
0x8617: je 0x8627
0x8619: test rdx,rdx
0x861c: je 0x8627
0x861e: mov qword ptr [rdi+0x28],rsi
0x8622: mov qword ptr [rdi+0x30],rdx
0x8626: ret 
0x8627: sub rsp,0x8
0x862b: call 0x1a70
0x8630: push r15
0x8632: push r14
0x8634: lea rax,[rip+0x208ee5]
0x863b: push r13
0x863d: push r12
0x863f: mov r13,rdi
0x8642: push rbp
0x8643: push rbx
0x8644: mov rbx,r8
0x8647: mov r14,rsi
0x864a: mov r15,rdx
0x864d: sub rsp,0x18
0x8651: test r8,r8
0x8654: cmove rbx,rax
0x8658: mov qword ptr [rsp+0x8],rcx
0x865d: call 0x1a80
0x8662: mov r12d,dword ptr [rax]
0x8665: mov rbp,rax
0x8668: lea rax,[rbx+0x8]
0x866c: sub rsp,0x8
0x8670: mov r9d,dword ptr [rbx+0x4]
0x8674: push qword ptr [rbx+0x30]
0x8677: mov r8d,dword ptr [rbx]
0x867a: push qword ptr [rbx+0x28]
0x867d: mov rdx,r15
0x8680: push rax
0x8681: mov rcx,qword ptr [rsp+0x28]
0x8686: mov rsi,r14
0x8689: mov rdi,r13
0x868c: call 0x7130
0x8691: mov dword ptr [rbp],r12d
0x8695: add rsp,0x38
0x8699: pop rbx
0x869a: pop rbp
0x869b: pop r12
0x869d: pop r13
0x869f: pop r14
0x86a1: pop r15
0x86a3: ret 
0x86b0: push r15
0x86b2: push r14
0x86b4: lea rax,[rip+0x208e65]
0x86bb: push r13
0x86bd: push r12
0x86bf: mov r12,rdx
0x86c2: push rbp
0x86c3: push rbx
0x86c4: mov rbx,rcx
0x86c7: mov r14,rdi
0x86ca: mov r15,rsi
0x86cd: sub rsp,0x38
0x86d1: test rcx,rcx
0x86d4: cmove rbx,rax
0x86d8: xor ebp,ebp
0x86da: call 0x1a80
0x86df: test r12,r12
0x86e2: mov r13,rax
0x86e5: mov eax,dword ptr [rax]
0x86e7: sete bpl
0x86eb: or ebp,dword ptr [rbx+0x4]
0x86ee: lea r10,[rbx+0x8]
0x86f2: sub rsp,0x8
0x86f6: mov r8d,dword ptr [rbx]
0x86f9: mov rcx,r15
0x86fc: mov dword ptr [rsp+0x14],eax
0x8700: push qword ptr [rbx+0x30]
0x8703: mov rdx,r14
0x8706: push qword ptr [rbx+0x28]
0x8709: push r10
0x870b: xor esi,esi
0x870d: mov r9d,ebp
0x8710: xor edi,edi
0x8712: mov qword ptr [rsp+0x40],r10
0x8717: call 0x7130
0x871c: lea rsi,[rax+0x1]
0x8720: mov qword ptr [rsp+0x48],rax
0x8725: add rsp,0x20
0x8729: mov rdi,rsi
0x872c: mov qword ptr [rsp+0x18],rsi
0x8731: call 0x93c0
0x8736: mov qword ptr [rsp+0x10],rax
0x873b: sub rsp,0x8
0x873f: push qword ptr [rbx+0x30]
0x8742: push qword ptr [rbx+0x28]
0x8745: mov r10,qword ptr [rsp+0x38]
0x874a: mov r9d,ebp
0x874d: mov r8d,dword ptr [rbx]
0x8750: mov rcx,r15
0x8753: mov rdx,r14
0x8756: mov rdi,rax
0x8759: push r10
0x875b: mov rsi,qword ptr [rsp+0x38]
0x8760: call 0x7130
0x8765: mov eax,dword ptr [rsp+0x2c]
0x8769: add rsp,0x20
0x876d: test r12,r12
0x8770: mov dword ptr [r13],eax
0x8774: je 0x877f
0x8776: mov r11,qword ptr [rsp+0x28]
0x877b: mov qword ptr [r12],r11
0x877f: mov rax,qword ptr [rsp+0x10]
0x8784: add rsp,0x38
0x8788: pop rbx
0x8789: pop rbp
0x878a: pop r12
0x878c: pop r13
0x878e: pop r14
0x8790: pop r15
0x8792: ret 
0x87a0: mov rcx,rdx
0x87a3: xor edx,edx
0x87a5: jmp 0x86b0
0x87b0: mov eax,dword ptr [rip+0x2088c2]
0x87b6: push r12
0x87b8: mov r12,qword ptr [rip+0x2088c1]
0x87bf: push rbp
0x87c0: push rbx
0x87c1: cmp eax,0x1
0x87c4: jle 0x87f1
0x87c6: sub eax,0x2
0x87c9: lea rbx,[r12+0x18]
0x87ce: shl rax,0x4
0x87d2: lea rbp,[r12+rax+0x28]
0x87d7: nop word ptr [rax+rax]
0x87e0: mov rdi,qword ptr [rbx]
0x87e3: add rbx,0x10
0x87e7: call 0x1a60
0x87ec: cmp rbx,rbp
0x87ef: jne 0x87e0
0x87f1: mov rdi,qword ptr [r12+0x8]
0x87f6: lea rbx,[rip+0x208c23]
0x87fd: cmp rdi,rbx
0x8800: je 0x8819
0x8802: call 0x1a60
0x8807: mov qword ptr [rip+0x20887e],0x100
0x8812: mov qword ptr [rip+0x20887f],rbx
0x8819: lea rbx,[rip+0x208870]
0x8820: cmp r12,rbx
0x8823: je 0x8834
0x8825: mov rdi,r12
0x8828: call 0x1a60
0x882d: mov qword ptr [rip+0x20884c],rbx
0x8834: pop rbx
0x8835: mov dword ptr [rip+0x208839],0x1
0x883f: pop rbp
0x8840: pop r12
0x8842: ret 
0x8850: lea rcx,[rip+0x208cc9]
0x8857: mov rdx,-0x1
0x885e: jmp 0x8370
0x8870: lea rcx,[rip+0x208ca9]
0x8877: jmp 0x8370
0x8880: lea rcx,[rip+0x208c99]
0x8887: mov rsi,rdi
0x888a: mov rdx,-0x1
0x8891: xor edi,edi
0x8893: jmp 0x8370
0x88a0: lea rcx,[rip+0x208c79]
0x88a7: mov rdx,rsi
0x88aa: mov rsi,rdi
0x88ad: xor edi,edi
0x88af: jmp 0x8370
0x892f: mov rcx,qword ptr [rsp+0x38]
0x8934: xor rcx,qword ptr fs:0x28
0x893d: jne 0x8949
0x893f: add rsp,0x48
0x8943: ret 
0x8944: call 0x1a70
0x8949: call 0x1b90
0x894e: nop 
0x89bb: mov rdx,qword ptr [rsp+0x38]
0x89c0: xor rdx,qword ptr fs:0x28
0x89c9: jne 0x89d5
0x89cb: add rsp,0x48
0x89cf: ret 
0x89d0: call 0x1a70
0x89d5: call 0x1b90
0x89da: nop word ptr [rax+rax]
0x89f0: mov rcx,rdx
0x89f3: mov rdx,rsi
0x89f6: mov esi,edi
0x89f8: xor edi,edi
0x89fa: jmp 0x8950
0x8a00: sub rsp,0x48
0x8a04: mov ecx,edx
0x8a06: mov rax,qword ptr fs:0x28
0x8a0f: mov qword ptr [rsp+0x38],rax
0x8a14: xor eax,eax
0x8a16: mov rax,qword ptr [rip+0x208b33]
0x8a1d: mov r8,rsp
0x8a20: and ecx,0x1f
0x8a23: movdqa xmm0,[rip+0x208af5]
0x8a2b: mov qword ptr [rsp+0x30],rax
0x8a30: mov eax,edx
0x8a32: movaps [rsp],xmm0
0x8a36: shr al,0x5
0x8a39: movzx eax,al
0x8a3c: lea r9,[r8+rax*4+0x8]
0x8a41: movdqa xmm0,[rip+0x208ae7]
0x8a49: movaps [rsp+0x10],xmm0
0x8a4e: movdqa xmm0,[rip+0x208aea]
0x8a56: movaps [rsp+0x20],xmm0
0x8a5b: mov edx,dword ptr [r9]
0x8a5e: mov eax,edx
0x8a60: shr eax,cl
0x8a62: not eax
0x8a64: and eax,0x1
0x8a67: shl eax,cl
0x8a69: mov rcx,r8
0x8a6c: xor eax,edx
0x8a6e: mov rdx,rsi
0x8a71: mov rsi,rdi
0x8a74: mov dword ptr [r9],eax
0x8a77: xor edi,edi
0x8a79: call 0x8370
0x8a7e: mov rsi,qword ptr [rsp+0x38]
0x8a83: xor rsi,qword ptr fs:0x28
0x8a8c: jne 0x8a93
0x8a8e: add rsp,0x48
0x8a92: ret 
0x8a93: call 0x1b90
0x8a98: nop dword ptr [rax+rax]
0x8aa0: movsx edx,sil
0x8aa4: mov rsi,-0x1
0x8aab: jmp 0x8a00
0x8ab0: mov edx,0x3a
0x8ab5: mov rsi,-0x1
0x8abc: jmp 0x8a00
0x8ad0: mov edx,0x3a
0x8ad5: jmp 0x8a00
0x8b4f: mov rcx,qword ptr [rsp+0x38]
0x8b54: xor rcx,qword ptr fs:0x28
0x8b5d: jne 0x8b69
0x8b5f: add rsp,0x48
0x8b63: ret 
0x8b64: call 0x1a70
0x8b69: call 0x1b90
0x8b6e: nop 
0x8b70: sub rsp,0x48
0x8b74: mov r9,rcx
0x8b77: mov rcx,qword ptr [rip+0x2089d2]
0x8b7e: movdqa xmm0,[rip+0x20899a]
0x8b86: mov rax,qword ptr fs:0x28
0x8b8f: mov qword ptr [rsp+0x38],rax
0x8b94: xor eax,eax
0x8b96: movaps [rsp],xmm0
0x8b9a: test rsi,rsi
0x8b9d: mov qword ptr [rsp+0x30],rcx
0x8ba2: mov dword ptr [rsp],0xa
0x8ba9: movdqa xmm0,[rip+0x20897f]
0x8bb1: movaps [rsp+0x10],xmm0
0x8bb6: movdqa xmm0,[rip+0x208982]
0x8bbe: movaps [rsp+0x20],xmm0
0x8bc3: je 0x8bf7
0x8bc5: test rdx,rdx
0x8bc8: je 0x8bf7
0x8bca: mov qword ptr [rsp+0x28],rsi
0x8bcf: mov qword ptr [rsp+0x30],rdx
0x8bd4: mov rcx,rsp
0x8bd7: mov rdx,r8
0x8bda: mov rsi,r9
0x8bdd: call 0x8370
0x8be2: mov rdi,qword ptr [rsp+0x38]
0x8be7: xor rdi,qword ptr fs:0x28
0x8bf0: jne 0x8bfc
0x8bf2: add rsp,0x48
0x8bf6: ret 
0x8bf7: call 0x1a70
0x8bfc: call 0x1b90
0x8c01: nop dword ptr [rax+rax]
0x8c06: nop word ptr cs:[rax+rax]
0x8c10: mov r8,-0x1
0x8c17: jmp 0x8b70
0x8c20: mov rcx,rdx
0x8c23: mov r8,-0x1
0x8c2a: mov rdx,rsi
0x8c2d: mov rsi,rdi
0x8c30: xor edi,edi
0x8c32: jmp 0x8b70
0x8c40: mov r8,rcx
0x8c43: mov rcx,rdx
0x8c46: mov rdx,rsi
0x8c49: mov rsi,rdi
0x8c4c: xor edi,edi
0x8c4e: jmp 0x8b70
0x8c60: lea rcx,[rip+0x2083d9]
0x8c67: jmp 0x8370
0x8c70: lea rcx,[rip+0x2083c9]
0x8c77: mov rdx,rsi
0x8c7a: mov rsi,rdi
0x8c7d: xor edi,edi
0x8c7f: jmp 0x8370
0x8cfc: lea r8,[rip+0x3969]
0x8d03: mov edi,r12d
0x8d06: mov r9,rax
0x8d09: mov ecx,r14d
0x8d0c: mov rdx,rbp
0x8d0f: mov esi,r13d
0x8d12: xor eax,eax
0x8d14: call 0x1aa0
0x8d19: mov rdi,rbx
0x8d1c: pop rbx
0x8d1d: pop rbp
0x8d1e: pop r12
0x8d20: pop r13
0x8d22: pop r14
0x8d24: jmp 0x1a60
0x8d47: mov rdi,rbx
0x8d4a: pop rbx
0x8d4b: pop rbp
0x8d4c: pop r12
0x8d4e: pop r13
0x8d50: pop r14
0x8d52: jmp 0x1a60
0x8d80: call 0x1a70
0x8d85: nop 
0x8d86: nop word ptr cs:[rax+rax]
0x8ed8: mov r8,rcx
0x8edb: mov rcx,rdx
0x8ede: lea rdx,[rip+0x586f]
0x8ee5: mov esi,0x1
0x8eea: xor eax,eax
0x8eec: call 0x1e30
0x8ef1: jmp 0x8ddc
0x90ed: push r12
0x90ef: push r15
0x90f1: push r14
0x90f3: mov r8,qword ptr [rsp+0x20]
0x90f8: mov rcx,rbx
0x90fb: mov rdx,rax
0x90fe: mov rdi,rbp
0x9101: mov esi,0x1
0x9106: xor eax,eax
0x9108: call 0x1e30
0x910d: add rsp,0x20
0x9111: add rsp,0x28
0x9115: pop rbx
0x9116: pop rbp
0x9117: pop r12
0x9119: pop r13
0x911b: pop r14
0x911d: pop r15
0x911f: ret 
0x9159: push r12
0x915b: push r15
0x915d: push r14
0x915f: mov r9,qword ptr [rsp+0x28]
0x9164: jmp 0x90f3
0x91c0: xor r9d,r9d
0x91c3: cmp qword ptr [r8],0x0
0x91c7: je 0x91db
0x91c9: nop dword ptr [rax]
0x91d0: add r9,0x1
0x91d4: cmp qword ptr [r8+r9*8],0x0
0x91d9: jne 0x91d0
0x91db: jmp 0x8da0
0x9208: mov r11d,eax
0x920b: add r11,qword ptr [r10+0x10]
0x920f: add eax,0x8
0x9212: mov dword ptr [r10],eax
0x9245: call 0x1b90
0x9260: push rbp
0x9261: push rbx
0x9262: mov r10d,0x20
0x9268: xor r11d,r11d
0x926b: sub rsp,0xb8
0x9272: mov rax,qword ptr fs:0x28
0x927b: mov qword ptr [rsp+0x78],rax
0x9280: xor eax,eax
0x9282: lea rax,[rsp+0xd0]
0x928a: mov qword ptr [rsp+0xa0],r8
0x9292: lea rbx,[rsp+0xd0]
0x929a: lea r8,[rsp+0x20]
0x929f: mov qword ptr [rsp+0xa8],r9
0x92a7: mov dword ptr [rsp+0x8],0x20
0x92af: mov qword ptr [rsp+0x10],rax
0x92b4: lea rax,[rsp+0x80]
0x92bc: xor r9d,r9d
0x92bf: mov qword ptr [rsp+0x18],rax
0x92c4: mov rbp,rax
0x92c7: nop word ptr [rax+rax]
0x92d0: cmp r10d,0x2f
0x92d4: ja 0x932c
0x92d6: mov eax,r10d
0x92d9: mov r11d,0x1
0x92df: add r10d,0x8
0x92e3: add rax,rbp
0x92e6: mov rax,qword ptr [rax]
0x92e9: test rax,rax
0x92ec: mov qword ptr [r8+r9*8],rax
0x92f0: je 0x92fc
0x92f2: add r9,0x1
0x92f6: cmp r9,0xa
0x92fa: jne 0x92d0
0x92fc: test r11b,r11b
0x92ff: jne 0x9325
0x9301: call 0x8da0
0x9306: mov rax,qword ptr [rsp+0x78]
0x930b: xor rax,qword ptr fs:0x28
0x9314: jne 0x9320
0x9316: add rsp,0xb8
0x931d: pop rbx
0x931e: pop rbp
0x931f: ret 
0x9320: call 0x1b90
0x9325: mov dword ptr [rsp+0x8],r10d
0x932a: jmp 0x9301
0x932c: mov rax,rbx
0x932f: add rbx,0x8
0x9333: jmp 0x92e6
0x9340: push rbx
0x9341: lea rsi,[rip+0x545a]
0x9348: mov edx,0x5
0x934d: xor edi,edi
0x934f: call 0x1b60
0x9354: lea rdx,[rip+0x545c]
0x935b: mov rsi,rax
0x935e: mov edi,0x1
0x9363: xor eax,eax
0x9365: call 0x1d70
0x936a: lea rsi,[rip+0x545c]
0x9371: mov edx,0x5
0x9376: xor edi,edi
0x9378: call 0x1b60
0x937d: lea rcx,[rip+0x455c]
0x9384: lea rdx,[rip+0x33e7]
0x938b: mov rsi,rax
0x938e: mov edi,0x1
0x9393: xor eax,eax
0x9395: call 0x1d70
0x939a: mov rbx,qword ptr [rip+0x207d27]
0x93a1: lea rsi,[rip+0x5658]
0x93a8: xor edi,edi
0x93aa: mov edx,0x5
0x93af: call 0x1b60
0x93b4: mov rsi,rbx
0x93b7: mov rdi,rax
0x93ba: pop rbx
0x93bb: jmp 0x1ca0
0x93da: nop word ptr [rax+rax]
0x93e0: mov rax,rdi
0x93e3: mul rsi
0x93e6: mov rdi,rax
0x93e9: seto al
0x93ec: test rdi,rdi
0x93ef: js 0x93fb
0x93f1: movzx eax,al
0x93f4: test rax,rax
0x93f7: jne 0x93fb
0x93f9: jmp 0x93c0
0x93fb: sub rsp,0x8
0x93ff: call 0x9610
0x9404: nop 
0x9406: nop word ptr cs:[rax+rax]
0x9410: jmp 0x93c0
0x9429: test rdi,rdi
0x942c: jne 0x9448
0x9448: call 0x1a60
0x944d: xor eax,eax
0x944f: pop rbx
0x9450: ret 
0x9456: nop word ptr cs:[rax+rax]
0x9460: mov rax,rsi
0x9463: mul rdx
0x9466: mov rsi,rax
0x9469: seto al
0x946c: test rsi,rsi
0x946f: js 0x947b
0x9471: movzx eax,al
0x9474: test rax,rax
0x9477: jne 0x947b
0x9479: jmp 0x9420
0x947b: sub rsp,0x8
0x947f: call 0x9610
0x9484: nop 
0x9486: nop word ptr cs:[rax+rax]
0x9490: test rdi,rdi
0x9493: mov r9,rdx
0x9496: mov rcx,qword ptr [rsi]
0x9499: je 0x94d0
0x949b: xor edx,edx
0x949d: movabsq rax,0x5555555555555554
0x94a7: div r9
0x94aa: cmp rax,rcx
0x94ad: jbe 0x94eb
0x94af: mov rax,rcx
0x94b2: shr rax, 1
0x94b5: lea rcx,[rax+rcx+0x1]
0x94ba: mov qword ptr [rsi],rcx
0x94bd: imul rcx,r9
0x94c1: mov rsi,rcx
0x94c4: jmp 0x9420
0x94d0: test rcx,rcx
0x94d3: je 0x94f8
0x94d5: mov rax,rcx
0x94d8: mul r9
0x94db: seto dl
0x94de: test rax,rax
0x94e1: movzx edx,dl
0x94e4: js 0x94eb
0x94e6: test rdx,rdx
0x94e9: je 0x94ba
0x94eb: sub rsp,0x8
0x94ef: call 0x9610
0x94f4: nop dword ptr [rax]
0x94f8: xor edx,edx
0x94fa: mov eax,0x80
0x94ff: xor r8d,r8d
0x9502: div r9
0x9505: test rax,rax
0x9508: sete r8b
0x950c: lea rcx,[r8+rax]
0x9510: jmp 0x94d5
0x9520: test rdi,rdi
0x9523: mov rax,qword ptr [rsi]
0x9526: je 0x9550
0x9528: movabsq rdx,0x5555555555555553
0x9532: cmp rax,rdx
0x9535: ja 0x9561
0x9537: mov rdx,rax
0x953a: shr rdx, 1
0x953d: lea rax,[rdx+rax+0x1]
0x9542: mov qword ptr [rsi],rax
0x9545: mov rsi,rax
0x9548: jmp 0x9420
0x9550: test rax,rax
0x9553: mov edx,0x80
0x9558: cmove rax,rdx
0x955c: test rax,rax
0x955f: jns 0x9542
0x9561: sub rsp,0x8
0x9565: call 0x9610
0x956a: nop word ptr [rax+rax]
0x9570: push rbx
0x9571: mov rbx,rdi
0x9574: call 0x93c0
0x9579: mov rdx,rbx
0x957c: xor esi,esi
0x957e: mov rdi,rax
0x9581: pop rbx
0x9582: jmp 0x1c40
0x9590: mov rax,rdi
0x9593: sub rsp,0x8
0x9597: mul rsi
0x959a: seto dl
0x959d: test rax,rax
0x95a0: js 0x95b9
0x95a2: movzx edx,dl
0x95a5: test rdx,rdx
0x95a8: jne 0x95b9
0x95aa: call 0x1cb0
0x95af: test rax,rax
0x95b2: je 0x95b9
0x95b4: add rsp,0x8
0x95b8: ret 
0x95b9: call 0x9610
0x95be: nop 
0x95c0: push rbp
0x95c1: push rbx
0x95c2: mov rbp,rdi
0x95c5: mov rdi,rsi
0x95c8: mov rbx,rsi
0x95cb: sub rsp,0x8
0x95cf: call 0x93c0
0x95d4: add rsp,0x8
0x95d8: mov rdx,rbx
0x95db: mov rsi,rbp
0x95de: pop rbx
0x95df: pop rbp
0x95e0: mov rdi,rax
0x95e3: jmp 0x1ce0
0x95f0: push rbx
0x95f1: mov rbx,rdi
0x95f4: call 0x1b80
0x95f9: mov rdi,rbx
0x95fc: lea rsi,[rax+0x1]
0x9600: pop rbx
0x9601: jmp 0x95c0
0x9640: call 0x1a70
0x9645: nop word ptr cs:[rax+rax]
0x964f: nop 
0x96f6: cmp eax,0x22
0x96f9: mov ebp,0x1
0x96fe: jne 0x9728
0x9722: nop word ptr [rax+rax]
0x9850: movsxd rdi,edi
0x9853: mov eax,ebp
0x9855: add rcx,rdi
0x9858: or eax,0x2
0x985b: mov qword ptr [r15],rcx
0x985e: cmp byte ptr [rcx],0x0
0x9861: mov qword ptr [r14],rbx
0x9864: cmovne ebp,eax
0x9867: jmp 0x972d
0x98c5: or ebp,r9d
0x98c8: jmp 0x9850
0x995c: mov rax,rbx
0x995f: mul rsi
0x9962: mov rbx,rax
0x9965: jo 0x99f4
0x996b: sub r8d,0x1
0x996f: jne 0x995c
0x9971: jmp 0x98c5
0x99d0: call 0x1b90
0x99d5: lea rcx,[rip+0x5204]
0x99dc: lea rsi,[rip+0x50dd]
0x99e3: lea rdi,[rip+0x50f6]
0x99ea: mov edx,0x54
0x99ef: call 0x1c20
0x99f4: mov r9d,0x1
0x99fa: or rbx,-0x1
0x99fe: jmp 0x996b
0x9b85: call 0x1b90
0x9b8a: nop word ptr [rax+rax]
0x9c26: test eax,eax
0x9c28: js 0x9c48
0x9c2a: mov rax,qword ptr [rsp]
0x9c48: call 0x1a80
0x9c4d: cmp dword ptr [rax],0xc
0x9c50: je 0x9c5f
0x9c52: xor eax,eax
0x9c54: jmp 0x9c2e
0x9c5a: call 0x1b90
0x9c5f: call 0x9610
0x9c64: nop word ptr cs:[rax+rax]
0x9c6e: nop 
0x9c70: push r12
0x9c72: push rbp
0x9c73: push rbx
0x9c74: mov rbx,rdi
0x9c77: call 0x1cf0
0x9c7c: test eax,eax
0x9c7e: mov rdi,rbx
0x9c81: js 0x9cd7
0x9c83: call 0x1d40
0x9c88: test eax,eax
0x9c8a: jne 0x9cb8
0x9c8c: mov rdi,rbx
0x9c8f: call 0x9f70
0x9c94: test eax,eax
0x9c96: je 0x9cd4
0x9c98: call 0x1a80
0x9c9d: mov r12d,dword ptr [rax]
0x9ca0: mov rdi,rbx
0x9ca3: mov rbp,rax
0x9ca6: call 0x1b40
0x9cab: test r12d,r12d
0x9cae: jne 0x9ce0
0x9cb0: pop rbx
0x9cb1: pop rbp
0x9cb2: pop r12
0x9cb4: ret 
0x9cb8: mov rdi,rbx
0x9cbb: call 0x1cf0
0x9cc0: xor esi,esi
0x9cc2: mov edx,0x1
0x9cc7: mov edi,eax
0x9cc9: call 0x1c10
0x9cce: cmp rax,-0x1
0x9cd2: jne 0x9c8c
0x9cd4: mov rdi,rbx
0x9cd7: pop rbx
0x9cd8: pop rbp
0x9cd9: pop r12
0x9cdb: jmp 0x1b40
0x9ce0: mov dword ptr [rbp],r12d
0x9ce4: mov eax,0xffffffff
0x9ce9: jmp 0x9cb0
0x9f3d: call 0x1b90
0x9f5a: mov rax,qword ptr [rsp+0x8]
0x9f5f: jmp 0x9e29
0x9f64: mov rax,qword ptr [rsp+0x8]
0x9f69: jmp 0x9e81
0x9f70: test rdi,rdi
0x9f73: push rbx
0x9f74: mov rbx,rdi
0x9f77: je 0x9f8a
0x9f79: call 0x1d40
0x9f7e: test eax,eax
0x9f80: je 0x9f8a
0x9f82: test dword ptr [rbx],0x100
0x9f88: jne 0x9f98
0x9f8a: mov rdi,rbx
0x9f8d: pop rbx
0x9f8e: jmp 0x1d10
0x9f98: mov rdi,rbx
0x9f9b: mov edx,0x1
0x9fa0: xor esi,esi
0x9fa2: call 0x9fb0
0x9fa7: mov rdi,rbx
0x9faa: pop rbx
0x9fab: jmp 0x1d10
0x9fb0: mov rax,qword ptr [rdi+0x8]
0x9fb4: cmp qword ptr [rdi+0x10],rax
0x9fb8: je 0x9fc0
0x9fba: jmp 0x1dc0
0x9fc0: mov rax,qword ptr [rdi+0x20]
0x9fc4: cmp qword ptr [rdi+0x28],rax
0x9fc8: jne 0x9fba
0x9fca: cmp qword ptr [rdi+0x48],0x0
0x9fcf: jne 0x9fba
0x9fd1: push r12
0x9fd3: push rbp
0x9fd4: mov r12d,edx
0x9fd7: push rbx
0x9fd8: mov rbp,rsi
0x9fdb: mov rbx,rdi
0x9fde: call 0x1cf0
0x9fe3: mov edx,r12d
0x9fe6: mov rsi,rbp
0x9fe9: mov edi,eax
0x9feb: call 0x1c10
0x9ff0: cmp rax,-0x1
0x9ff4: je 0xa002
0x9ff6: and dword ptr [rbx],-0x11
0x9ff9: mov qword ptr [rbx+0x90],rax
0xa000: xor eax,eax
0xa002: pop rbx
0xa003: pop rbp
0xa004: pop r12
0xa006: ret 
0xa010: push r13
0xa012: push r12
0xa014: mov r13,rsi
0xa017: push rbp
0xa018: push rbx
0xa019: mov rbx,rdi
0xa01c: mov r12,rdx
0xa01f: sub rsp,0x18
0xa023: mov rax,qword ptr fs:0x28
0xa02c: mov qword ptr [rsp+0x8],rax
0xa031: xor eax,eax
0xa033: lea rax,[rsp+0x4]
0xa038: test rdi,rdi
0xa03b: cmove rbx,rax
0xa03f: mov rdi,rbx
0xa042: call 0x1bb0
0xa047: cmp rax,-0x3
0xa04b: mov rbp,rax
0xa04e: jbe 0xa070
0xa050: test r12,r12
0xa053: je 0xa070
0xa055: xor edi,edi
0xa057: call 0xa4b0
0xa05c: test al,al
0xa05e: jne 0xa070
0xa060: movzx eax,byte ptr [r13]
0xa065: mov ebp,0x1
0xa06a: mov dword ptr [rbx],eax
0xa06c: nop dword ptr [rax]
0xa070: mov rdx,qword ptr [rsp+0x8]
0xa075: xor rdx,qword ptr fs:0x28
0xa07e: mov rax,rbp
0xa081: jne 0xa08e
0xa083: add rsp,0x18
0xa087: pop rbx
0xa088: pop rbp
0xa089: pop r12
0xa08b: pop r13
0xa08d: ret 
0xa08e: call 0x1b90
0xa093: nop word ptr cs:[rax+rax]
0xa09d: nop dword ptr [rax]
0xa0cb: test rax,rax
0xa0ce: je 0xa112
0xa0d0: mov rdx,qword ptr [rsp]
0xa0d4: cmp rdx,0x7fffffff
0xa0db: ja 0xa0f8
0xa0dd: mov qword ptr [rbx],rax
0xa0e0: mov eax,edx
0xa0e2: mov rbx,qword ptr [rsp+0x8]
0xa0e7: xor rbx,qword ptr fs:0x28
0xa0f0: jne 0xa119
0xa0f2: add rsp,0x10
0xa0f6: pop rbx
0xa0f7: ret 
0xa0f8: mov rdi,rax
0xa0fb: call 0x1a60
0xa100: call 0x1a80
0xa105: mov dword ptr [rax],0x4b
0xa10b: mov eax,0xffffffff
0xa110: jmp 0xa0e2
0xa112: mov eax,0xffffffff
0xa117: jmp 0xa0e2
0xa119: call 0x1b90
0xa11e: nop 
0xa120: mov edi,0x1
0xa125: jmp 0x5030
0xa130: push r15
0xa132: push r14
0xa134: mov r15,rsi
0xa137: push r13
0xa139: push r12
0xa13b: mov r13,rcx
0xa13e: push rbp
0xa13f: push rbx
0xa140: mov rbp,rdx
0xa143: sub rsp,0x28
0xa147: mov qword ptr [rsp+0x8],rdi
0xa14c: mov qword ptr [rsp+0x18],rdx
0xa151: call 0x1b80
0xa156: mov r14,qword ptr [r15]
0xa159: mov qword ptr [rsp],-0x1
0xa161: test r14,r14
0xa164: je 0xa21d
0xa16a: mov r12,rax
0xa16d: mov byte ptr [rsp+0x17],0x0
0xa172: xor ebx,ebx
0xa174: jmp 0xa1c7
0xa180: mov rax,qword ptr [rsp+0x18]
0xa185: test rax,rax
0xa188: je 0xa230
0xa18e: mov rdi,qword ptr [rsp]
0xa192: mov rdx,r13
0xa195: mov rsi,rbp
0xa198: imul rdi,r13
0xa19c: add rdi,rax
0xa19f: call 0x1c90
0xa1a4: test eax,eax
0xa1a6: movzx eax,byte ptr [rsp+0x17]
0xa1ab: mov ecx,0x1
0xa1b0: cmovne eax,ecx
0xa1b3: mov byte ptr [rsp+0x17],al
0xa1b7: add rbx,0x1
0xa1bb: add rbp,r13
0xa1be: mov r14,qword ptr [r15+rbx*8]
0xa1c2: test r14,r14
0xa1c5: je 0xa208
0xa1c7: mov rsi,qword ptr [rsp+0x8]
0xa1cc: mov rdx,r12
0xa1cf: mov rdi,r14
0xa1d2: call 0x1ab0
0xa1d7: test eax,eax
0xa1d9: jne 0xa1b7
0xa1db: mov rdi,r14
0xa1de: call 0x1b80
0xa1e3: cmp rax,r12
0xa1e6: je 0xa240
0xa1e8: cmp qword ptr [rsp],-0x1
0xa1ed: jne 0xa180
0xa1ef: mov qword ptr [rsp],rbx
0xa1f3: add rbx,0x1
0xa1f7: add rbp,r13
0xa1fa: mov r14,qword ptr [r15+rbx*8]
0xa1fe: test r14,r14
0xa201: jne 0xa1c7
0xa203: nop dword ptr [rax+rax]
0xa208: cmp byte ptr [rsp+0x17],0x0
0xa20d: mov rax,-0x2
0xa214: cmove rax,qword ptr [rsp]
0xa219: mov qword ptr [rsp],rax
0xa21d: mov rax,qword ptr [rsp]
0xa221: add rsp,0x28
0xa225: pop rbx
0xa226: pop rbp
0xa227: pop r12
0xa229: pop r13
0xa22b: pop r14
0xa22d: pop r15
0xa22f: ret 
0xa230: mov byte ptr [rsp+0x17],0x1
0xa235: jmp 0xa1b7
0xa240: mov qword ptr [rsp],rbx
0xa244: jmp 0xa21d
0xa250: cmp rdx,-0x1
0xa254: push r12
0xa256: mov edx,0x5
0xa25b: push rbp
0xa25c: mov r12,rsi
0xa25f: push rbx
0xa260: mov rbp,rdi
0xa263: je 0xa2b0
0xa265: lea rsi,[rip+0x499a]
0xa26c: xor edi,edi
0xa26e: call 0x1b60
0xa273: mov rbx,rax
0xa276: mov rsi,rbp
0xa279: mov edi,0x1
0xa27e: call 0x8c90
0xa283: mov rdx,r12
0xa286: mov rbp,rax
0xa289: mov esi,0x8
0xa28e: xor edi,edi
0xa290: call 0x88c0
0xa295: mov r8,rbp
0xa298: mov rdx,rbx
0xa29b: mov rcx,rax
0xa29e: pop rbx
0xa29f: pop rbp
0xa2a0: pop r12
0xa2a2: xor esi,esi
0xa2a4: xor edi,edi
0xa2a6: xor eax,eax
0xa2a8: jmp 0x1d90
0xa2b0: lea rsi,[rip+0x4934]
0xa2b7: xor edi,edi
0xa2b9: call 0x1b60
0xa2be: mov rbx,rax
0xa2c1: jmp 0xa276
0xa2d0: push r15
0xa2d2: push r14
0xa2d4: mov r14,rdi
0xa2d7: push r13
0xa2d9: push r12
0xa2db: xor edi,edi
0xa2dd: push rbp
0xa2de: push rbx
0xa2df: mov rbp,rsi
0xa2e2: lea rsi,[rip+0x493a]
0xa2e9: mov r12,rdx
0xa2ec: mov edx,0x5
0xa2f1: sub rsp,0x8
0xa2f5: mov rbx,qword ptr [rip+0x206e04]
0xa2fc: call 0x1b60
0xa301: mov rdi,rax
0xa304: mov rsi,rbx
0xa307: call 0x1ca0
0xa30c: mov r15,qword ptr [r14]
0xa30f: test r15,r15
0xa312: je 0xa3a8
0xa318: xor r13d,r13d
0xa31b: xor ebx,ebx
0xa31d: jmp 0xa358
0xa320: mov rdi,r15
0xa323: add rbx,0x1
0xa327: mov r13,rbp
0xa32a: call 0x8cb0
0xa32f: mov rdi,qword ptr [rip+0x206dca]
0xa336: lea rdx,[rip+0x48fb]
0xa33d: mov rcx,rax
0xa340: mov esi,0x1
0xa345: xor eax,eax
0xa347: add rbp,r12
0xa34a: call 0x1e30
0xa34f: mov r15,qword ptr [r14+rbx*8]
0xa353: test r15,r15
0xa356: je 0xa3a8
0xa358: test rbx,rbx
0xa35b: je 0xa320
0xa35d: mov rdx,r12
0xa360: mov rsi,rbp
0xa363: mov rdi,r13
0xa366: call 0x1c90
0xa36b: test eax,eax
0xa36d: jne 0xa320
0xa36f: mov rdi,r15
0xa372: add rbx,0x1
0xa376: add rbp,r12
0xa379: call 0x8cb0
0xa37e: mov rdi,qword ptr [rip+0x206d7b]
0xa385: lea rdx,[rip+0x22de]
0xa38c: mov rcx,rax
0xa38f: mov esi,0x1
0xa394: xor eax,eax
0xa396: call 0x1e30
0xa39b: mov r15,qword ptr [r14+rbx*8]
0xa39f: test r15,r15
0xa3a2: jne 0xa358
0xa3a4: nop dword ptr [rax]
0xa3a8: mov rdi,qword ptr [rip+0x206d51]
0xa3af: mov rax,qword ptr [rdi+0x28]
0xa3b3: cmp rax,qword ptr [rdi+0x30]
0xa3b7: jae 0xa3d8
0xa3b9: lea rdx,[rax+0x1]
0xa3bd: mov qword ptr [rdi+0x28],rdx
0xa3c1: mov byte ptr [rax],0xa
0xa3c4: add rsp,0x8
0xa3c8: pop rbx
0xa3c9: pop rbp
0xa3ca: pop r12
0xa3cc: pop r13
0xa3ce: pop r14
0xa3d0: pop r15
0xa3d2: ret 
0xa3d8: add rsp,0x8
0xa3dc: mov esi,0xa
0xa3e1: pop rbx
0xa3e2: pop rbp
0xa3e3: pop r12
0xa3e5: pop r13
0xa3e7: pop r14
0xa3e9: pop r15
0xa3eb: jmp 0x1be0
0xa3f0: push r15
0xa3f2: push r14
0xa3f4: mov r14,rdi
0xa3f7: push r13
0xa3f9: push r12
0xa3fb: mov r12,rsi
0xa3fe: push rbp
0xa3ff: push rbx
0xa400: mov rbp,rcx
0xa403: mov rbx,rdx
0xa406: mov rcx,r8
0xa409: mov rdx,rbp
0xa40c: sub rsp,0x8
0xa410: mov rsi,rbx
0xa413: mov rdi,r12
0xa416: mov r15,r8
0xa419: mov r13,r9
0xa41c: call 0xa130
0xa421: test rax,rax
0xa424: js 0xa435
0xa426: add rsp,0x8
0xa42a: pop rbx
0xa42b: pop rbp
0xa42c: pop r12
0xa42e: pop r13
0xa430: pop r14
0xa432: pop r15
0xa434: ret 
0xa435: mov rdx,rax
0xa438: mov rsi,r12
0xa43b: mov rdi,r14
0xa43e: call 0xa250
0xa443: mov rdx,r15
0xa446: mov rsi,rbp
0xa449: mov rdi,rbx
0xa44c: call 0xa2d0
0xa451: call r13
0xa454: mov rax,-0x1
0xa45b: jmp 0xa426
0xa460: push r14
0xa462: push r13
0xa464: push r12
0xa466: push rbp
0xa467: push rbx
0xa468: mov r14,qword ptr [rsi]
0xa46b: test r14,r14
0xa46e: je 0xa4a1
0xa470: mov r12,rcx
0xa473: mov r13,rdi
0xa476: mov rbp,rdx
0xa479: lea rbx,[rsi+0x8]
0xa47d: jmp 0xa48f
0xa480: mov r14,qword ptr [rbx]
0xa483: add rbp,r12
0xa486: add rbx,0x8
0xa48a: test r14,r14
0xa48d: je 0xa4a1
0xa48f: mov rdx,r12
0xa492: mov rsi,rbp
0xa495: mov rdi,r13
0xa498: call 0x1c90
0xa49d: test eax,eax
0xa49f: jne 0xa480
0xa4a1: pop rbx
0xa4a2: mov rax,r14
0xa4a5: pop rbp
0xa4a6: pop r12
0xa4a8: pop r13
0xa4aa: pop r14
0xa4ac: ret 
0xa4b0: sub rsp,0x8
0xa4b4: xor esi,esi
0xa4b6: call 0x1d60
0xa4bb: mov rdx,rax
0xa4be: mov eax,0x1
0xa4c3: test rdx,rdx
0xa4c6: je 0xa4e5
0xa4c8: lea rdi,[rip+0x4771]
0xa4cf: mov ecx,0x2
0xa4d4: mov rsi,rdx
0xa4d7: rep cmpsb [rsi],es:[rdi]
0xa4d9: seta cl
0xa4dc: sbb cl,0x0
0xa4df: xor eax,eax
0xa4e1: test cl,cl
0xa4e3: jne 0xa4f0
0xa4e5: add rsp,0x8
0xa4e9: ret 
0xa4f0: lea rdi,[rip+0x474b]
0xa4f7: mov ecx,0x6
0xa4fc: mov rsi,rdx
0xa4ff: rep cmpsb [rsi],es:[rdi]
0xa501: seta al
0xa504: sbb al,0x0
0xa506: test al,al
0xa508: setne al
0xa50b: add rsp,0x8
0xa50f: ret 
0xa510: sub rsp,0x8
0xa514: mov edi,0xe
0xa519: call 0x1d20
0xa51e: test rax,rax
0xa521: je 0xa540
0xa523: cmp byte ptr [rax],0x0
0xa526: lea rdx,[rip+0x471b]
0xa52d: cmove rax,rdx
0xa531: add rsp,0x8
0xa535: ret 
0xa540: lea rax,[rip+0x4701]
0xa547: add rsp,0x8
0xa54b: ret 
0xa817: movzx edx,byte ptr [r13+0x48]
0xa81c: mov rax,qword ptr [r13+0x50]
0xa820: cmp dl,0x25
0xa823: je 0xafb8
0xa829: cmp rax,-0x1
0xa82d: je 0xb476
0xa833: mov r8,qword ptr [rbp-0x3a8]
0xa83a: shl rax,0x5
0xa83e: add rax,r8
0xa841: cmp dl,0x6e
0xa844: mov edi,dword ptr [rax]
0xa846: mov dword ptr [rbp-0x3d0],edi
0xa84c: je 0xb030
0xa852: mov eax,dword ptr [r13+0x10]
0xa856: mov rdi,qword ptr [rbp-0x3d8]
0xa85d: test al,0x1
0xa85f: mov byte ptr [rdi],0x25
0xa862: lea rbx,[rdi+0x1]
0xa866: je 0xa877
0xa868: mov rdi,qword ptr [rbp-0x3d8]
0xa86f: lea rbx,[rdi+0x2]
0xa873: mov byte ptr [rdi+0x1],0x27
0xa877: test al,0x2
0xa879: je 0xa882
0xa87b: mov byte ptr [rbx],0x2d
0xa87e: add rbx,0x1
0xa882: test al,0x4
0xa884: je 0xa88d
0xa886: mov byte ptr [rbx],0x2b
0xa889: add rbx,0x1
0xa88d: test al,0x8
0xa88f: je 0xa898
0xa891: mov byte ptr [rbx],0x20
0xa894: add rbx,0x1
0xa898: test al,0x10
0xa89a: je 0xa8a3
0xa89c: mov byte ptr [rbx],0x23
0xa89f: add rbx,0x1
0xa8a3: test al,0x40
0xa8a5: je 0xa8ae
0xa8a7: mov byte ptr [rbx],0x49
0xa8aa: add rbx,0x1
0xa8ae: test al,0x20
0xa8b0: je 0xa8b9
0xa8b2: mov byte ptr [rbx],0x30
0xa8b5: add rbx,0x1
0xa8b9: mov rsi,qword ptr [r13+0x18]
0xa8bd: mov rdx,qword ptr [r13+0x20]
0xa8c1: cmp rsi,rdx
0xa8c4: je 0xa8f6
0xa8c6: mov rcx,rdx
0xa8c9: mov rdi,rbx
0xa8cc: mov qword ptr [rbp-0x3e0],r8
0xa8d3: sub rcx,rsi
0xa8d6: mov rdx,rcx
0xa8d9: mov qword ptr [rbp-0x3c8],rcx
0xa8e0: call 0x1ce0
0xa8e5: mov rcx,qword ptr [rbp-0x3c8]
0xa8ec: mov r8,qword ptr [rbp-0x3e0]
0xa8f3: add rbx,rcx
0xa8f6: mov rsi,qword ptr [r13+0x30]
0xa8fa: mov rdx,qword ptr [r13+0x38]
0xa8fe: cmp rsi,rdx
0xa901: je 0xa933
0xa903: mov rcx,rdx
0xa906: mov rdi,rbx
0xa909: mov qword ptr [rbp-0x3e0],r8
0xa910: sub rcx,rsi
0xa913: mov rdx,rcx
0xa916: mov qword ptr [rbp-0x3c8],rcx
0xa91d: call 0x1ce0
0xa922: mov rcx,qword ptr [rbp-0x3c8]
0xa929: mov r8,qword ptr [rbp-0x3e0]
0xa930: add rbx,rcx
0xa933: mov edi,dword ptr [rbp-0x3d0]
0xa939: cmp edi,0x10
0xa93c: ja 0xa96b
0xa93e: mov eax,0x1
0xa943: mov ecx,edi
0xa945: shl rax,cl
0xa948: test eax,0x14180
0xa94d: jne 0xa964
0xa94f: test ah,0x10
0xa952: jne 0xb2b0
0xa958: test ah,0x6
0xa95b: je 0xa96b
0xa95d: mov byte ptr [rbx],0x6c
0xa960: add rbx,0x1
0xa964: mov byte ptr [rbx],0x6c
0xa967: add rbx,0x1
0xa96b: movzx eax,byte ptr [r13+0x48]
0xa970: mov byte ptr [rbx+0x1],0x0
0xa974: mov byte ptr [rbx],al
0xa976: mov rax,qword ptr [r13+0x28]
0xa97a: cmp rax,-0x1
0xa97e: je 0xb0b0
0xa984: shl rax,0x5
0xa988: add rax,r8
0xa98b: cmp dword ptr [rax],0x5
0xa98e: jne 0xb476
0xa994: mov eax,dword ptr [rax+0x10]
0xa997: mov dword ptr [rbp-0x3e0],0x1
0xa9a1: mov dword ptr [rbp-0x3b8],eax
0xa9a7: mov rax,qword ptr [r13+0x40]
0xa9ab: cmp rax,-0x1
0xa9af: je 0xa9dc
0xa9b1: shl rax,0x5
0xa9b5: add r8,rax
0xa9b8: cmp dword ptr [r8],0x5
0xa9bc: jne 0xb476
0xa9c2: mov eax,dword ptr [rbp-0x3e0]
0xa9c8: mov edx,dword ptr [r8+0x10]
0xa9cc: mov dword ptr [rbp+rax*4-0x3b8],edx
0xa9d3: lea eax,[rax+0x1]
0xa9d6: mov dword ptr [rbp-0x3e0],eax
0xa9dc: mov rax,r14
0xa9df: xor edx,edx
0xa9e1: add rax,0x2
0xa9e5: jb 0xb64c
0xa9eb: cmp r12,rax
0xa9ee: jae 0xaa3b
0xa9f0: test r12,r12
0xa9f3: jne 0xb218
0xa9f9: cmp rax,0xc
0xa9fd: ja 0xb230
0xaa03: mov r12d,0xc
0xaa09: cmp r15,qword ptr [rbp-0x3e8]
0xaa10: sete dl
0xaa13: test r15,r15
0xaa16: je 0xb260
0xaa1c: test dl,dl
0xaa1e: jne 0xb260
0xaa24: mov rsi,r12
0xaa27: mov rdi,r15
0xaa2a: call 0x1d50
0xaa2f: test rax,rax
0xaa32: je 0xa6b5
0xaa38: mov r15,rax
0xaa3b: mov byte ptr [r15+r14],0x0
0xaa40: call 0x1a80
0xaa45: mov qword ptr [rbp-0x3c8],rax
0xaa4c: mov eax,dword ptr [rax]
0xaa4e: mov qword ptr [rbp-0x3f8],rbx
0xaa55: mov dword ptr [rbp-0x424],eax
0xaa5b: nop dword ptr [rax+rax]
0xaa60: mov rax,qword ptr [rbp-0x3c8]
0xaa67: mov rbx,r12
0xaa6a: mov r10d,0x7fffffff
0xaa70: sub rbx,r14
0xaa73: mov dword ptr [rbp-0x3bc],0xffffffff
0xaa7d: cmp rbx,0x7fffffff
0xaa84: mov dword ptr [rax],0x0
0xaa8a: mov eax,dword ptr [rbp-0x3d0]
0xaa90: cmovbe r10,rbx
0xaa94: cmp eax,0x11
0xaa97: ja 0xb476
0xaa9d: lea rsi,[rip+0x41ac]
0xaaa4: movsxd rax,dword ptr [rsi+rax*4]
0xaaa8: add rax,rsi
0xaaab: jmp rax
0xafb8: cmp rax,-0x1
0xafbc: jne 0xb476
0xafc2: mov rax,r14
0xafc5: add rax,0x1
0xafc9: mov rbx,rax
0xafcc: jae 0xb058
0xafd2: cmp r12,-0x1
0xafd6: jne 0xa6b5
0xafdc: mov rbx,r12
0xafdf: mov byte ptr [r15+r14],0x25
0xafe4: mov r8,qword ptr [r13+0x8]
0xafe8: add r13,0x58
0xafec: mov rcx,qword ptr [r13]
0xaff0: add qword ptr [rbp-0x400],0x1
0xaff8: cmp rcx,r8
0xaffb: jne 0xa699
0xb030: mov edx,edi
0xb032: sub edx,0x12
0xb035: cmp edx,0x4
0xb038: ja 0xb476
0xb03e: lea rdi,[rip+0x3c53]
0xb045: mov rax,qword ptr [rax+0x10]
0xb049: movsxd rdx,dword ptr [rdi+rdx*4]
0xb04d: add rdx,rdi
0xb050: jmp rdx
0xb058: cmp r12,rax
0xb05b: jae 0xafdf
0xb05d: test r12,r12
0xb060: jne 0xb430
0xb066: cmp rax,0xc
0xb06a: ja 0xb442
0xb070: mov r12d,0xc
0xb076: cmp r15,qword ptr [rbp-0x3e8]
0xb07d: sete dl
0xb080: test r15,r15
0xb083: je 0xb2f0
0xb089: test dl,dl
0xb08b: jne 0xb2f0
0xb091: mov rsi,r12
0xb094: mov rdi,r15
0xb097: call 0x1d50
0xb09c: test rax,rax
0xb09f: je 0xb19b
0xb0a5: mov r15,rax
0xb0a8: jmp 0xafdf
0xb0b0: mov dword ptr [rbp-0x3e0],0x0
0xb0ba: jmp 0xa9a7
0xb218: js 0xa6b5
0xb21e: add r12,r12
0xb221: cmp r12,rax
0xb224: jae 0xaa09
0xb22a: nop word ptr [rax+rax]
0xb230: test rdx,rdx
0xb233: jne 0xa6b5
0xb239: cmp rax,-0x1
0xb23d: je 0xa6b5
0xb243: cmp r15,qword ptr [rbp-0x3e8]
0xb24a: mov r12,rax
0xb24d: sete dl
0xb250: test r15,r15
0xb253: jne 0xaa1c
0xb259: nop dword ptr [rax]
0xb260: mov rdi,r12
0xb263: mov byte ptr [rbp-0x3c8],dl
0xb269: call 0x1d00
0xb26e: test rax,rax
0xb271: mov rcx,rax
0xb274: movzx edx,byte ptr [rbp-0x3c8]
0xb27b: je 0xa6b5
0xb281: test r14,r14
0xb284: je 0xb420
0xb28a: test dl,dl
0xb28c: je 0xb420
0xb292: mov rsi,r15
0xb295: mov rdx,r14
0xb298: mov rdi,rax
0xb29b: call 0x1ce0
0xb2a0: mov r15,rax
0xb2a3: jmp 0xaa3b
0xb2b0: mov byte ptr [rbx],0x4c
0xb2b3: add rbx,0x1
0xb2b7: jmp 0xa96b
0xb2f0: mov rdi,r12
0xb2f3: mov byte ptr [rbp-0x3c8],dl
0xb2f9: call 0x1d00
0xb2fe: test rax,rax
0xb301: mov rcx,rax
0xb304: movzx edx,byte ptr [rbp-0x3c8]
0xb30b: je 0xa6b5
0xb311: test r14,r14
0xb314: je 0xb454
0xb31a: test dl,dl
0xb31c: je 0xb454
0xb322: mov rsi,r15
0xb325: mov rdx,r14
0xb328: mov rdi,rax
0xb32b: call 0x1ce0
0xb330: mov r15,rax
0xb333: jmp 0xafdf
0xb420: mov r15,rcx
0xb423: jmp 0xaa3b
0xb430: js 0xa6b5
0xb436: add r12,r12
0xb439: cmp r12,rax
0xb43c: jae 0xb076
0xb442: cmp rax,-0x1
0xb446: je 0xa6b5
0xb44c: mov r12,rax
0xb44f: jmp 0xb076
0xb454: mov r15,rcx
0xb457: jmp 0xafdf
0xb476: call 0x1a70
0xb47b: nop dword ptr [rax+rax]
0xb64c: cmp r12,-0x1
0xb650: mov edx,0x1
0xb655: je 0xaa3b
0xb65b: test r12,r12
0xb65e: je 0xa6b5
0xb664: jns 0xb230
0xb66a: jmp 0xa6b5
0xbc7e: mov rdi,rcx
0xbc81: call 0x1d50
0xbc86: mov rdx,qword ptr [r15+0x8]
0xbc8a: mov r8,qword ptr [rsp+0x30]
0xbc8f: mov rcx,rax
0xbc92: mov r10,qword ptr [rsp+0x38]
0xbc97: mov r9,qword ptr [rsp+0x40]
0xc316: mov rdi,rcx
0xc319: call 0x1d50
0xc31e: mov rdx,qword ptr [r15+0x8]
0xc322: mov r11,qword ptr [rsp+0x30]
0xc327: mov rcx,rax
0xc32a: mov r8,qword ptr [rsp+0x38]
0xc32f: mov r10,qword ptr [rsp+0x40]
0xc334: mov r9,qword ptr [rsp+0x48]
0xc364: mov rdi,rcx
0xc367: call 0x1a60
0xc560: push r15
0xc562: push r14
0xc564: mov r15,rdx
0xc567: push r13
0xc569: push r12
0xc56b: lea r12,[rip+0x20451e]
0xc572: push rbp
0xc573: lea rbp,[rip+0x20451e]
0xc57a: push rbx
0xc57b: mov r13d,edi
0xc57e: mov r14,rsi
0xc581: sub rbp,r12
0xc584: sub rsp,0x8
0xc588: sar rbp,0x3
0xc58c: call 0x19e8
0xc591: test rbp,rbp
0xc594: je 0xc5b6
0xc596: xor ebx,ebx
0xc598: nop dword ptr [rax+rax]
0xc5a0: mov rdx,r15
0xc5a3: mov rsi,r14
0xc5a6: mov edi,r13d
0xc5a9: call qword ptr [r12+rbx*8]
0xc5ad: add rbx,0x1
0xc5b1: cmp rbp,rbx
0xc5b4: jne 0xc5a0
0xc5b6: add rsp,0x8
0xc5ba: pop rbx
0xc5bb: pop rbp
0xc5bc: pop r12
0xc5be: pop r13
0xc5c0: pop r14
0xc5c2: pop r15
0xc5c4: ret 
0xc5d0: rep ret 
