0x1790: sub rsp,8
0x1794: mov rax,qword ptr [rip + 0x20e845]
0x179b: test rax,rax
0x179e: je 0x17a2
0x17a0: call rax
0x17a2: add rsp,8
0x17a6: ret 
0x17b0: push qword ptr [rip + 0x20e63a]
0x17b6: jmp qword ptr [rip + 0x20e63c]
0x17bc: nop dword ptr [rax]
0x17c6: push 0
0x17cb: jmp 0x17b0
0x17d6: push 1
0x17db: jmp 0x17b0
0x17e6: push 2
0x17eb: jmp 0x17b0
0x17f6: push 3
0x17fb: jmp 0x17b0
0x1806: push 4
0x180b: jmp 0x17b0
0x1810: jmp qword ptr [rip + 0x20e612]
0x1816: push 5
0x181b: jmp 0x17b0
0x1820: jmp qword ptr [rip + 0x20e60a]
0x1826: push 6
0x182b: jmp 0x17b0
0x1836: push 7
0x183b: jmp 0x17b0
0x1846: push 8
0x184b: jmp 0x17b0
0x1850: jmp qword ptr [rip + 0x20e5f2]
0x1856: push 9
0x185b: jmp 0x17b0
0x1866: push 0xa
0x186b: jmp 0x17b0
0x1876: push 0xb
0x187b: jmp 0x17b0
0x1886: push 0xc
0x188b: jmp 0x17b0
0x1896: push 0xd
0x189b: jmp 0x17b0
0x18a6: push 0xe
0x18ab: jmp 0x17b0
0x18b6: push 0xf
0x18bb: jmp 0x17b0
0x18c6: push 0x10
0x18cb: jmp 0x17b0
0x18d6: push 0x11
0x18db: jmp 0x17b0
0x18e0: jmp qword ptr [rip + 0x20e5aa]
0x18e6: push 0x12
0x18eb: jmp 0x17b0
0x18f6: push 0x13
0x18fb: jmp 0x17b0
0x1906: push 0x14
0x190b: jmp 0x17b0
0x1916: push 0x15
0x191b: jmp 0x17b0
0x1926: push 0x16
0x192b: jmp 0x17b0
0x1936: push 0x17
0x193b: jmp 0x17b0
0x1946: push 0x18
0x194b: jmp 0x17b0
0x1956: push 0x19
0x195b: jmp 0x17b0
0x1966: push 0x1a
0x196b: jmp 0x17b0
0x1976: push 0x1b
0x197b: jmp 0x17b0
0x1986: push 0x1c
0x198b: jmp 0x17b0
0x1996: push 0x1d
0x199b: jmp 0x17b0
0x19a6: push 0x1e
0x19ab: jmp 0x17b0
0x19b6: push 0x1f
0x19bb: jmp 0x17b0
0x19c0: jmp qword ptr [rip + 0x20e53a]
0x19c6: push 0x20
0x19cb: jmp 0x17b0
0x19d6: push 0x21
0x19db: jmp 0x17b0
0x19e6: push 0x22
0x19eb: jmp 0x17b0
0x19f6: push 0x23
0x19fb: jmp 0x17b0
0x1a06: push 0x24
0x1a0b: jmp 0x17b0
0x1a16: push 0x25
0x1a1b: jmp 0x17b0
0x1a26: push 0x26
0x1a2b: jmp 0x17b0
0x1a36: push 0x27
0x1a3b: jmp 0x17b0
0x1a46: push 0x28
0x1a4b: jmp 0x17b0
0x1a56: push 0x29
0x1a5b: jmp 0x17b0
0x1a66: push 0x2a
0x1a6b: jmp 0x17b0
0x1a76: push 0x2b
0x1a7b: jmp 0x17b0
0x1a86: push 0x2c
0x1a8b: jmp 0x17b0
0x1a90: jmp qword ptr [rip + 0x20e4d2]
0x1a96: push 0x2d
0x1a9b: jmp 0x17b0
0x1aa6: push 0x2e
0x1aab: jmp 0x17b0
0x1ab6: push 0x2f
0x1abb: jmp 0x17b0
0x1ac6: push 0x30
0x1acb: jmp 0x17b0
0x1ad6: push 0x31
0x1adb: jmp 0x17b0
0x1ae6: push 0x32
0x1aeb: jmp 0x17b0
0x1af6: push 0x33
0x1afb: jmp 0x17b0
0x1b06: push 0x34
0x1b0b: jmp 0x17b0
0x1b16: push 0x35
0x1b1b: jmp 0x17b0
0x1b26: push 0x36
0x1b2b: jmp 0x17b0
0x1b36: push 0x37
0x1b3b: jmp 0x17b0
0x1b46: push 0x38
0x1b4b: jmp 0x17b0
0x1b56: push 0x39
0x1b5b: jmp 0x17b0
0x1b60: jmp qword ptr [rip + 0x20e48a]
0x1d17: nop word ptr [rax + rax]
0x1d75: nop dword ptr [rax]
0x1d84: nop dword ptr [rax]
0x1dd1: nop dword ptr [rax]
0x1dea: nop word ptr [rax + rax]
0x1e0a: nop word ptr [rax + rax]
0x1e24: nop dword ptr [rax]
0x1e59: nop dword ptr [rax]
0x1e74: nop dword ptr [rax]
0x1e8c: nop dword ptr [rax]
0x1ea4: nop dword ptr [rax]
0x1ebc: nop dword ptr [rax]
0x1ed4: nop dword ptr [rax]
0x1eec: nop dword ptr [rax]
0x1f04: nop dword ptr [rax]
0x1f53: nop dword ptr [rax + rax]
0x1f6c: nop dword ptr [rax]
0x1fbb: nop dword ptr [rax + rax]
0x1fd4: nop dword ptr [rax]
0x1fec: nop dword ptr [rax]
0x2004: nop dword ptr [rax]
0x201c: nop dword ptr [rax]
0x2034: nop dword ptr [rax]
0x2094: nop dword ptr [rax]
0x224d: nop dword ptr [rax]
0x24b0: lea rsi,[rip + 0x9a61]
0x24b7: mov edx,5
0x24bc: xor edi,edi
0x24be: call 0x18b0
0x24c3: lea rdx,[rip + 0xa316]
0x24ca: mov rcx,rax
0x24cd: xor esi,esi
0x24cf: xor edi,edi
0x24d1: xor eax,eax
0x24d3: call 0x1aa0
0x29f4: mov qword ptr [rip + 0x20d7c5],rbp
0x29fb: mov r9,qword ptr [rip + 0x20d7ce]
0x2a02: mov r10,qword ptr [rip + 0x20d7cf]
0x2a09: jmp 0x250c
0x2c27: jmp 0x2818
0x2c37: jmp 0x2ae9
0x2cb7: call 0x18e0
0x2d62: nop word ptr cs:[rax + rax]
0x2d6c: nop dword ptr [rax]
0x2d9a: hlt 
0x2d9b: nop dword ptr [rax + rax]
0x2da0: lea rdi,[rip + 0x20d2f9]
0x2da7: push rbp
0x2da8: lea rax,[rip + 0x20d2f1]
0x2daf: cmp rax,rdi
0x2db2: mov rbp,rsp
0x2db5: je 0x2dd0
0x2db7: mov rax,qword ptr [rip + 0x20d212]
0x2dbe: test rax,rax
0x2dc1: je 0x2dd0
0x2dc3: pop rbp
0x2dc4: jmp rax
0x2dc6: nop word ptr cs:[rax + rax]
0x2dd0: pop rbp
0x2dd1: ret 
0x2dd2: nop dword ptr [rax]
0x2dd6: nop word ptr cs:[rax + rax]
0x2de0: lea rdi,[rip + 0x20d2b9]
0x2de7: lea rsi,[rip + 0x20d2b2]
0x2dee: push rbp
0x2def: sub rsi,rdi
0x2df2: mov rbp,rsp
0x2df5: sar rsi,3
0x2df9: mov rax,rsi
0x2dfc: shr rax,0x3f
0x2e00: add rsi,rax
0x2e03: sar rsi,1
0x2e06: je 0x2e20
0x2e08: mov rax,qword ptr [rip + 0x20d1d9]
0x2e0f: test rax,rax
0x2e12: je 0x2e20
0x2e14: pop rbp
0x2e15: jmp rax
0x2e17: nop word ptr [rax + rax]
0x2e20: pop rbp
0x2e21: ret 
0x2e22: nop dword ptr [rax]
0x2e26: nop word ptr cs:[rax + rax]
0x2e30: cmp byte ptr [rip + 0x20d2b1],0
0x2e37: jne 0x2e68
0x2e39: cmp qword ptr [rip + 0x20d1af],0
0x2e41: push rbp
0x2e42: mov rbp,rsp
0x2e45: je 0x2e53
0x2e47: mov rdi,qword ptr [rip + 0x20d1ba]
0x2e4e: call 0x1b60
0x2e53: call 0x2da0
0x2e58: mov byte ptr [rip + 0x20d289],1
0x2e5f: pop rbp
0x2e60: ret 
0x2e61: nop dword ptr [rax]
0x2e68: ret 
0x2e6a: nop word ptr [rax + rax]
0x2e70: push rbp
0x2e71: mov rbp,rsp
0x2e74: pop rbp
0x2e75: jmp 0x2de0
0x2e7a: nop word ptr [rax + rax]
0x2e82: nop dword ptr [rax]
0x2e86: nop word ptr cs:[rax + rax]
0x2f1c: nop dword ptr [rax]
0x2f39: nop dword ptr [rax]
0x2f7a: nop word ptr [rax + rax]
0x2fae: call 0x18e0
0x2fb3: nop dword ptr [rax]
0x2fb6: nop word ptr cs:[rax + rax]
0x3036: nop word ptr cs:[rax + rax]
0x3040: push r15
0x3042: push r14
0x3044: push r13
0x3046: push r12
0x3048: push rbp
0x3049: push rbx
0x304a: sub rsp,0x28
0x304e: mov rax,qword ptr fs:[0x28]
0x3057: mov qword ptr [rsp + 0x18],rax
0x305c: xor eax,eax
0x305e: cmp rdi,rsi
0x3061: jbe 0x3108
0x3067: mov r13d,r8d
0x306a: mov rbp,rdi
0x306d: lea r8,[rdi - 1]
0x3071: movsxd r12,r9d
0x3074: sub rbp,rsi
0x3077: mov rbx,rdi
0x307a: lea rax,[rdx + rbp]
0x307e: mov r14,rdx
0x3081: imul r8,r12
0x3085: mov qword ptr [rsp],rax
0x3089: lea rax,[rsp + 0x16]
0x308e: mov qword ptr [rsp + 8],rax
0x3093: mov r15,r8
0x3096: jmp 0x30cf
0x3098: nop dword ptr [rax + rax]
0x30a0: lea rcx,[rip + 0x9499]
0x30a7: movzx eax,al
0x30aa: lea rdx,[rcx + rax*4]
0x30ae: sub r9d,ebp
0x30b1: lea rdi,[rip + 0x7c24]
0x30b8: xor eax,eax
0x30ba: lea esi,[r9 + r13]
0x30be: sub r15,r12
0x30c1: call 0x8150
0x30c6: cmp r14,qword ptr [rsp]
0x30ca: mov r9d,ebp
0x30cd: je 0x3108
0x30cf: xor edx,edx
0x30d1: mov rax,r15
0x30d4: add r14,1
0x30d8: div rbx
0x30db: lea rdx,[rip + 0x7bf6]
0x30e2: mov rbp,rax
0x30e5: movzx eax,byte ptr [r14 - 1]
0x30ea: and eax,0x7f
0x30ed: cmp al,0x7f
0x30ef: je 0x30ae
0x30f1: cmp al,0x20
0x30f3: jbe 0x30a0
0x30f5: mov byte ptr [rsp + 0x16],al
0x30f9: mov byte ptr [rsp + 0x17],0
0x30fe: mov rdx,qword ptr [rsp + 8]
0x3103: jmp 0x30ae
0x3105: nop dword ptr [rax]
0x3108: mov rax,qword ptr [rsp + 0x18]
0x310d: xor rax,qword ptr fs:[0x28]
0x3116: jne 0x3127
0x3118: add rsp,0x28
0x311c: pop rbx
0x311d: pop rbp
0x311e: pop r12
0x3120: pop r13
0x3122: pop r14
0x3124: pop r15
0x3126: ret 
0x3127: call 0x18e0
0x312c: nop dword ptr [rax]
0x3130: push r15
0x3132: push r14
0x3134: push r13
0x3136: push r12
0x3138: push rbp
0x3139: push rbx
0x313a: sub rsp,0x38
0x313e: mov rax,qword ptr fs:[0x28]
0x3147: mov qword ptr [rsp + 0x28],rax
0x314c: xor eax,eax
0x314e: cmp rdi,rsi
0x3151: mov qword ptr [rsp + 8],rcx
0x3156: mov dword ptr [rsp + 0x14],r8d
0x315b: jbe 0x3200
0x3161: lea rcx,[rdi - 1]
0x3165: movsxd rax,r9d
0x3168: mov rbx,rdi
0x316b: mov rbp,rsi
0x316e: mov r15,rdx
0x3171: mov qword ptr [rsp + 0x18],rax
0x3176: imul rcx,rax
0x317a: mov r13,rdi
0x317d: mov r14,rcx
0x3180: jmp 0x31a8
0x3182: nop word ptr [rax + rax]
0x3188: mov rdx,qword ptr [r15]
0x318b: mov rdi,qword ptr [rsp + 8]
0x3190: xor eax,eax
0x3192: add r15,8
0x3196: call 0x8150
0x319b: sub r14,qword ptr [rsp + 0x18]
0x31a0: cmp r13,rbp
0x31a3: mov r9d,r12d
0x31a6: je 0x3200
0x31a8: xor edx,edx
0x31aa: mov rax,r14
0x31ad: sub r13,1
0x31b1: div rbx
0x31b4: sub r9d,eax
0x31b7: cmp byte ptr [rip + 0x20cf43],0
0x31be: mov r12,rax
0x31c1: mov eax,dword ptr [rsp + 0x14]
0x31c5: lea esi,[r9 + rax]
0x31c9: je 0x3188
0x31cb: lea rdx,[r15 + 7]
0x31cf: lea r9,[rsp + 0x20]
0x31d4: xor eax,eax
0x31d6: nop word ptr cs:[rax + rax]
0x31e0: movzx edi,byte ptr [rdx]
0x31e3: sub rdx,1
0x31e7: mov byte ptr [r9 + rax],dil
0x31eb: add rax,1
0x31ef: cmp rax,8
0x31f3: jne 0x31e0
0x31f5: mov rdx,qword ptr [rsp + 0x20]
0x31fa: jmp 0x318b
0x31fc: nop dword ptr [rax]
0x3200: mov rax,qword ptr [rsp + 0x28]
0x3205: xor rax,qword ptr fs:[0x28]
0x320e: jne 0x321f
0x3210: add rsp,0x38
0x3214: pop rbx
0x3215: pop rbp
0x3216: pop r12
0x3218: pop r13
0x321a: pop r14
0x321c: pop r15
0x321e: ret 
0x321f: call 0x18e0
0x3224: nop 
0x3226: nop word ptr cs:[rax + rax]
0x3230: push r15
0x3232: push r14
0x3234: push r13
0x3236: push r12
0x3238: push rbp
0x3239: push rbx
0x323a: sub rsp,0x38
0x323e: mov rax,qword ptr fs:[0x28]
0x3247: mov qword ptr [rsp + 0x28],rax
0x324c: xor eax,eax
0x324e: cmp rdi,rsi
0x3251: mov qword ptr [rsp + 8],rcx
0x3256: mov dword ptr [rsp + 0x14],r8d
0x325b: jbe 0x3300
0x3261: lea rcx,[rdi - 1]
0x3265: movsxd rax,r9d
0x3268: mov rbx,rdi
0x326b: mov rbp,rsi
0x326e: mov r15,rdx
0x3271: mov qword ptr [rsp + 0x18],rax
0x3276: imul rcx,rax
0x327a: mov r13,rdi
0x327d: mov r14,rcx
0x3280: jmp 0x32a8
0x3282: nop word ptr [rax + rax]
0x3288: mov rdx,qword ptr [r15]
0x328b: mov rdi,qword ptr [rsp + 8]
0x3290: xor eax,eax
0x3292: add r15,8
0x3296: call 0x8150
0x329b: sub r14,qword ptr [rsp + 0x18]
0x32a0: cmp r13,rbp
0x32a3: mov r9d,r12d
0x32a6: je 0x3300
0x32a8: xor edx,edx
0x32aa: mov rax,r14
0x32ad: sub r13,1
0x32b1: div rbx
0x32b4: sub r9d,eax
0x32b7: cmp byte ptr [rip + 0x20ce43],0
0x32be: mov r12,rax
0x32c1: mov eax,dword ptr [rsp + 0x14]
0x32c5: lea esi,[r9 + rax]
0x32c9: je 0x3288
0x32cb: lea rdx,[r15 + 7]
0x32cf: lea r9,[rsp + 0x20]
0x32d4: xor eax,eax
0x32d6: nop word ptr cs:[rax + rax]
0x32e0: movzx edi,byte ptr [rdx]
0x32e3: sub rdx,1
0x32e7: mov byte ptr [r9 + rax],dil
0x32eb: add rax,1
0x32ef: cmp rax,8
0x32f3: jne 0x32e0
0x32f5: mov rdx,qword ptr [rsp + 0x20]
0x32fa: jmp 0x328b
0x32fc: nop dword ptr [rax]
0x3300: mov rax,qword ptr [rsp + 0x28]
0x3305: xor rax,qword ptr fs:[0x28]
0x330e: jne 0x331f
0x3310: add rsp,0x38
0x3314: pop rbx
0x3315: pop rbp
0x3316: pop r12
0x3318: pop r13
0x331a: pop r14
0x331c: pop r15
0x331e: ret 
0x331f: call 0x18e0
0x3324: nop 
0x3326: nop word ptr cs:[rax + rax]
0x3330: push r15
0x3332: push r14
0x3334: push r13
0x3336: push r12
0x3338: push rbp
0x3339: push rbx
0x333a: mov rbx,rdi
0x333d: sub rsp,0x38
0x3341: mov rdi,qword ptr fs:[0x28]
0x334a: mov qword ptr [rsp + 0x28],rdi
0x334f: xor edi,edi
0x3351: cmp rbx,rsi
0x3354: mov qword ptr [rsp],rsi
0x3358: mov qword ptr [rsp + 8],rcx
0x335d: mov dword ptr [rsp + 0x14],r8d
0x3362: jbe 0x3400
0x3368: lea rcx,[rbx - 1]
0x336c: movsxd rax,r9d
0x336f: mov r15,rdx
0x3372: mov qword ptr [rsp + 0x18],rax
0x3377: mov r13,rbx
0x337a: imul rcx,rax
0x337e: mov r14,rcx
0x3381: jmp 0x33a9
0x3383: nop dword ptr [rax + rax]
0x3388: mov edx,dword ptr [r15]
0x338b: mov rdi,qword ptr [rsp + 8]
0x3390: xor eax,eax
0x3392: add r15,4
0x3396: call 0x8150
0x339b: sub r14,qword ptr [rsp + 0x18]
0x33a0: cmp r13,qword ptr [rsp]
0x33a4: mov r9d,ebp
0x33a7: je 0x3400
0x33a9: xor edx,edx
0x33ab: mov rax,r14
0x33ae: sub r13,1
0x33b2: div rbx
0x33b5: sub r9d,eax
0x33b8: cmp byte ptr [rip + 0x20cd42],0
0x33bf: mov rbp,rax
0x33c2: mov eax,dword ptr [rsp + 0x14]
0x33c6: lea esi,[r9 + rax]
0x33ca: je 0x3388
0x33cc: mov r12b,byte ptr [r15 + 3]
0x33d0: movzx ecx,byte ptr [r15 + 2]
0x33d5: movzx edx,byte ptr [r15 + 1]
0x33da: mov eax,r12d
0x33dd: mov ah,cl
0x33df: movzx r10d,ax
0x33e3: movzx eax,byte ptr [r15]
0x33e7: shl edx,0x10
0x33ea: or r10d,edx
0x33ed: shl eax,0x18
0x33f0: or r10d,eax
0x33f3: mov r12d,r10d
0x33f6: mov edx,r10d
0x33f9: jmp 0x338b
0x33fb: nop dword ptr [rax + rax]
0x3400: mov rax,qword ptr [rsp + 0x28]
0x3405: xor rax,qword ptr fs:[0x28]
0x340e: jne 0x341f
0x3410: add rsp,0x38
0x3414: pop rbx
0x3415: pop rbp
0x3416: pop r12
0x3418: pop r13
0x341a: pop r14
0x341c: pop r15
0x341e: ret 
0x341f: call 0x18e0
0x3424: nop 
0x3426: nop word ptr cs:[rax + rax]
0x3430: push r15
0x3432: push r14
0x3434: push r13
0x3436: push r12
0x3438: push rbp
0x3439: push rbx
0x343a: sub rsp,0x38
0x343e: mov rax,qword ptr fs:[0x28]
0x3447: mov qword ptr [rsp + 0x28],rax
0x344c: xor eax,eax
0x344e: cmp rdi,rsi
0x3451: mov qword ptr [rsp],rcx
0x3455: mov dword ptr [rsp + 0xc],r8d
0x345a: jbe 0x34f0
0x3460: lea r8,[rdi - 1]
0x3464: movsxd rax,r9d
0x3467: mov rbx,rdi
0x346a: mov qword ptr [rsp + 0x18],rax
0x346f: mov rbp,rdx
0x3472: xor r15d,r15d
0x3475: imul r8,rax
0x3479: mov rax,rdi
0x347c: sub rax,rsi
0x347f: mov qword ptr [rsp + 0x10],rax
0x3484: mov r13,r8
0x3487: jmp 0x34b4
0x3489: nop dword ptr [rax]
0x3490: movzx edx,word ptr [rbp + r15*2]
0x3496: mov rdi,qword ptr [rsp]
0x349a: xor eax,eax
0x349c: add r15,1
0x34a0: call 0x8150
0x34a5: sub r13,qword ptr [rsp + 0x18]
0x34aa: cmp qword ptr [rsp + 0x10],r15
0x34af: mov r9d,r12d
0x34b2: je 0x34f0
0x34b4: xor edx,edx
0x34b6: mov rax,r13
0x34b9: div rbx
0x34bc: sub r9d,eax
0x34bf: cmp byte ptr [rip + 0x20cc3b],0
0x34c6: mov r12,rax
0x34c9: mov eax,dword ptr [rsp + 0xc]
0x34cd: lea esi,[r9 + rax]
0x34d1: je 0x3490
0x34d3: mov r14b,byte ptr [rbp + r15*2 + 1]
0x34d8: movzx eax,byte ptr [rbp + r15*2]
0x34de: mov ecx,r14d
0x34e1: mov ch,al
0x34e3: mov r14d,ecx
0x34e6: movzx edx,cx
0x34e9: jmp 0x3496
0x34eb: nop dword ptr [rax + rax]
0x34f0: mov rax,qword ptr [rsp + 0x28]
0x34f5: xor rax,qword ptr fs:[0x28]
0x34fe: jne 0x350f
0x3500: add rsp,0x38
0x3504: pop rbx
0x3505: pop rbp
0x3506: pop r12
0x3508: pop r13
0x350a: pop r14
0x350c: pop r15
0x350e: ret 
0x350f: call 0x18e0
0x3514: nop 
0x3516: nop word ptr cs:[rax + rax]
0x3520: push r15
0x3522: push r14
0x3524: push r13
0x3526: push r12
0x3528: push rbp
0x3529: push rbx
0x352a: sub rsp,0x38
0x352e: mov rax,qword ptr fs:[0x28]
0x3537: mov qword ptr [rsp + 0x28],rax
0x353c: xor eax,eax
0x353e: cmp rdi,rsi
0x3541: mov qword ptr [rsp],rcx
0x3545: mov dword ptr [rsp + 0xc],r8d
0x354a: jbe 0x35e0
0x3550: lea r8,[rdi - 1]
0x3554: movsxd rax,r9d
0x3557: mov rbx,rdi
0x355a: mov qword ptr [rsp + 0x18],rax
0x355f: mov rbp,rdx
0x3562: xor r15d,r15d
0x3565: imul r8,rax
0x3569: mov rax,rdi
0x356c: sub rax,rsi
0x356f: mov qword ptr [rsp + 0x10],rax
0x3574: mov r13,r8
0x3577: jmp 0x35a4
0x3579: nop dword ptr [rax]
0x3580: movsx edx,word ptr [rbp + r15*2]
0x3586: mov rdi,qword ptr [rsp]
0x358a: xor eax,eax
0x358c: add r15,1
0x3590: call 0x8150
0x3595: sub r13,qword ptr [rsp + 0x18]
0x359a: cmp qword ptr [rsp + 0x10],r15
0x359f: mov r9d,r12d
0x35a2: je 0x35e0
0x35a4: xor edx,edx
0x35a6: mov rax,r13
0x35a9: div rbx
0x35ac: sub r9d,eax
0x35af: cmp byte ptr [rip + 0x20cb4b],0
0x35b6: mov r12,rax
0x35b9: mov eax,dword ptr [rsp + 0xc]
0x35bd: lea esi,[r9 + rax]
0x35c1: je 0x3580
0x35c3: mov r14b,byte ptr [rbp + r15*2 + 1]
0x35c8: movzx eax,byte ptr [rbp + r15*2]
0x35ce: mov ecx,r14d
0x35d1: mov ch,al
0x35d3: mov r14d,ecx
0x35d6: movsx edx,cx
0x35d9: jmp 0x3586
0x35db: nop dword ptr [rax + rax]
0x35e0: mov rax,qword ptr [rsp + 0x28]
0x35e5: xor rax,qword ptr fs:[0x28]
0x35ee: jne 0x35ff
0x35f0: add rsp,0x38
0x35f4: pop rbx
0x35f5: pop rbp
0x35f6: pop r12
0x35f8: pop r13
0x35fa: pop r14
0x35fc: pop r15
0x35fe: ret 
0x35ff: call 0x18e0
0x3604: nop 
0x3606: nop word ptr cs:[rax + rax]
0x3610: push r15
0x3612: push r14
0x3614: push r13
0x3616: push r12
0x3618: push rbp
0x3619: push rbx
0x361a: sub rsp,0x18
0x361e: cmp rdi,rsi
0x3621: mov qword ptr [rsp],rcx
0x3625: jbe 0x3682
0x3627: lea rcx,[rdi - 1]
0x362b: movsxd r12,r9d
0x362e: mov rbp,rdi
0x3631: sub rbp,rsi
0x3634: mov rbx,rdi
0x3637: mov r15,rdx
0x363a: imul rcx,r12
0x363e: lea rax,[rdx + rbp]
0x3642: mov r14d,r8d
0x3645: mov qword ptr [rsp + 8],rax
0x364a: mov r13,rcx
0x364d: nop dword ptr [rax]
0x3650: mov rax,r13
0x3653: xor edx,edx
0x3655: mov rdi,qword ptr [rsp]
0x3659: div rbx
0x365c: movzx edx,byte ptr [r15]
0x3660: sub r13,r12
0x3663: add r15,1
0x3667: sub r9d,eax
0x366a: mov rbp,rax
0x366d: xor eax,eax
0x366f: lea esi,[r9 + r14]
0x3673: call 0x8150
0x3678: cmp r15,qword ptr [rsp + 8]
0x367d: mov r9d,ebp
0x3680: jne 0x3650
0x3682: add rsp,0x18
0x3686: pop rbx
0x3687: pop rbp
0x3688: pop r12
0x368a: pop r13
0x368c: pop r14
0x368e: pop r15
0x3690: ret 
0x3691: nop dword ptr [rax + rax]
0x3696: nop word ptr cs:[rax + rax]
0x36a0: push r15
0x36a2: push r14
0x36a4: push r13
0x36a6: push r12
0x36a8: push rbp
0x36a9: push rbx
0x36aa: sub rsp,0x18
0x36ae: cmp rdi,rsi
0x36b1: mov qword ptr [rsp],rcx
0x36b5: jbe 0x3712
0x36b7: lea rcx,[rdi - 1]
0x36bb: movsxd r12,r9d
0x36be: mov rbp,rdi
0x36c1: sub rbp,rsi
0x36c4: mov rbx,rdi
0x36c7: mov r15,rdx
0x36ca: imul rcx,r12
0x36ce: lea rax,[rdx + rbp]
0x36d2: mov r14d,r8d
0x36d5: mov qword ptr [rsp + 8],rax
0x36da: mov r13,rcx
0x36dd: nop dword ptr [rax]
0x36e0: mov rax,r13
0x36e3: xor edx,edx
0x36e5: mov rdi,qword ptr [rsp]
0x36e9: div rbx
0x36ec: movsx edx,byte ptr [r15]
0x36f0: sub r13,r12
0x36f3: add r15,1
0x36f7: sub r9d,eax
0x36fa: mov rbp,rax
0x36fd: xor eax,eax
0x36ff: lea esi,[r9 + r14]
0x3703: call 0x8150
0x3708: cmp r15,qword ptr [rsp + 8]
0x370d: mov r9d,ebp
0x3710: jne 0x36e0
0x3712: add rsp,0x18
0x3716: pop rbx
0x3717: pop rbp
0x3718: pop r12
0x371a: pop r13
0x371c: pop r14
0x371e: pop r15
0x3720: ret 
0x3721: nop dword ptr [rax + rax]
0x3726: nop word ptr cs:[rax + rax]
0x3730: push r15
0x3732: push r14
0x3734: push r13
0x3736: push r12
0x3738: mov r12,rdi
0x373b: push rbp
0x373c: push rbx
0x373d: sub rsp,0x78
0x3741: mov rdi,qword ptr fs:[0x28]
0x374a: mov qword ptr [rsp + 0x68],rdi
0x374f: xor edi,edi
0x3751: cmp r12,rsi
0x3754: mov qword ptr [rsp + 8],rsi
0x3759: mov dword ptr [rsp + 0x14],r8d
0x375e: jbe 0x3820
0x3764: lea r8,[r12 - 1]
0x3769: movsxd rax,r9d
0x376c: mov rbx,rdx
0x376f: mov qword ptr [rsp + 0x18],rax
0x3774: mov r15,r12
0x3777: lea r13,[rsp + 0x30]
0x377c: imul r8,rax
0x3780: mov r14,r8
0x3783: jmp 0x37cc
0x3785: nop dword ptr [rax]
0x3788: fld xword ptr [rbx]
0x378a: sub rsp,0x10
0x378e: xor ecx,ecx
0x3790: xor edx,edx
0x3792: mov esi,0x2d
0x3797: mov rdi,r13
0x379a: add rbx,0x10
0x379e: fstp xword ptr [rsp]
0x37a1: call 0x59c0
0x37a6: lea rdi,[rip + 0x752f]
0x37ad: mov rdx,r13
0x37b0: xor eax,eax
0x37b2: mov esi,dword ptr [rsp + 0x20]
0x37b6: call 0x8150
0x37bb: sub r14,qword ptr [rsp + 0x28]
0x37c0: mov r9d,ebp
0x37c3: pop rax
0x37c4: pop rdx
0x37c5: cmp r15,qword ptr [rsp + 8]
0x37ca: je 0x3820
0x37cc: xor edx,edx
0x37ce: mov rax,r14
0x37d1: sub r15,1
0x37d5: div r12
0x37d8: sub r9d,eax
0x37db: add r9d,dword ptr [rsp + 0x14]
0x37e0: cmp byte ptr [rip + 0x20c91a],0
0x37e7: mov rbp,rax
0x37ea: mov dword ptr [rsp + 0x10],r9d
0x37ef: je 0x3788
0x37f1: lea rdx,[rbx + 0xf]
0x37f5: lea rax,[rsp + 0x20]
0x37fa: lea rsi,[rsp + 0x30]
0x37ff: nop 
0x3800: movzx ecx,byte ptr [rdx]
0x3803: add rax,1
0x3807: sub rdx,1
0x380b: mov byte ptr [rax - 1],cl
0x380e: cmp rsi,rax
0x3811: jne 0x3800
0x3813: fld xword ptr [rsp + 0x20]
0x3817: jmp 0x378a
0x381c: nop dword ptr [rax]
0x3820: mov rax,qword ptr [rsp + 0x68]
0x3825: xor rax,qword ptr fs:[0x28]
0x382e: jne 0x383f
0x3830: add rsp,0x78
0x3834: pop rbx
0x3835: pop rbp
0x3836: pop r12
0x3838: pop r13
0x383a: pop r14
0x383c: pop r15
0x383e: ret 
0x383f: call 0x18e0
0x3844: nop 
0x3846: nop word ptr cs:[rax + rax]
0x3850: push r15
0x3852: push r14
0x3854: push r13
0x3856: push r12
0x3858: push rbp
0x3859: push rbx
0x385a: mov rbp,rdi
0x385d: sub rsp,0x68
0x3861: mov rdi,qword ptr fs:[0x28]
0x386a: mov qword ptr [rsp + 0x58],rdi
0x386f: xor edi,edi
0x3871: cmp rbp,rsi
0x3874: mov qword ptr [rsp + 8],rsi
0x3879: mov dword ptr [rsp + 0x14],r8d
0x387e: jbe 0x3940
0x3884: lea r8,[rbp - 1]
0x3888: movsxd rax,r9d
0x388b: mov r13,rdx
0x388e: mov qword ptr [rsp + 0x18],rax
0x3893: mov r15,rbp
0x3896: lea r12,[rsp + 0x30]
0x389b: imul r8,rax
0x389f: mov r14,r8
0x38a2: jmp 0x38e7
0x38a4: nop dword ptr [rax]
0x38a8: movsd xmm0,qword ptr [r13]
0x38ae: xor ecx,ecx
0x38b0: xor edx,edx
0x38b2: mov esi,0x28
0x38b7: mov rdi,r12
0x38ba: add r13,8
0x38be: call 0x56e0
0x38c3: mov esi,dword ptr [rsp + 0x10]
0x38c7: lea rdi,[rip + 0x740e]
0x38ce: xor eax,eax
0x38d0: mov rdx,r12
0x38d3: call 0x8150
0x38d8: sub r14,qword ptr [rsp + 0x18]
0x38dd: cmp r15,qword ptr [rsp + 8]
0x38e2: mov r9d,ebx
0x38e5: je 0x3940
0x38e7: xor edx,edx
0x38e9: mov rax,r14
0x38ec: sub r15,1
0x38f0: div rbp
0x38f3: sub r9d,eax
0x38f6: add r9d,dword ptr [rsp + 0x14]
0x38fb: cmp byte ptr [rip + 0x20c7ff],0
0x3902: mov rbx,rax
0x3905: mov dword ptr [rsp + 0x10],r9d
0x390a: je 0x38a8
0x390c: lea rdx,[r13 + 7]
0x3910: lea rsi,[rsp + 0x28]
0x3915: xor eax,eax
0x3917: nop word ptr [rax + rax]
0x3920: movzx ecx,byte ptr [rdx]
0x3923: sub rdx,1
0x3927: mov byte ptr [rsi + rax],cl
0x392a: add rax,1
0x392e: cmp rax,8
0x3932: jne 0x3920
0x3934: movsd xmm0,qword ptr [rsp + 0x28]
0x393a: jmp 0x38ae
0x393f: nop 
0x3940: mov rax,qword ptr [rsp + 0x58]
0x3945: xor rax,qword ptr fs:[0x28]
0x394e: jne 0x395f
0x3950: add rsp,0x68
0x3954: pop rbx
0x3955: pop rbp
0x3956: pop r12
0x3958: pop r13
0x395a: pop r14
0x395c: pop r15
0x395e: ret 
0x395f: call 0x18e0
0x3964: nop 
0x3966: nop word ptr cs:[rax + rax]
0x39d4: nop dword ptr [rax]
0x3a6e: nop 
0x3a8f: call 0x18e0
0x3a94: nop 
0x3a96: nop word ptr cs:[rax + rax]
0x3b1c: nop dword ptr [rax]
0x3b5f: nop 
0x3be6: nop word ptr cs:[rax + rax]
0x3c8a: nop word ptr [rax + rax]
0x3d06: nop word ptr cs:[rax + rax]
0x3d32: nop word ptr [rax + rax]
0x3d6f: add rsp,0x18
0x3d73: xor eax,eax
0x3d75: pop rbx
0x3d76: pop rbp
0x3d77: pop r12
0x3d79: pop r13
0x3d7b: pop r14
0x3d7d: pop r15
0x3d7f: ret 
0x3dc9: nop dword ptr [rax]
0x3dfe: nop 
0x3eca: nop word ptr [rax + rax]
0x3edc: nop dword ptr [rax]
0x3eec: nop dword ptr [rax]
0x3efc: nop dword ptr [rax]
0x3f19: nop dword ptr [rax]
0x3f39: nop dword ptr [rax]
0x3f61: nop dword ptr [rax]
0x3fff: add rsp,0x18
0x4003: xor eax,eax
0x4005: pop rbx
0x4006: pop rbp
0x4007: pop r12
0x4009: pop r13
0x400b: pop r14
0x400d: pop r15
0x400f: ret 
0x404e: nop 
0x4065: nop dword ptr [rax]
0x407d: nop dword ptr [rax]
0x4095: nop dword ptr [rax]
0x40a9: nop dword ptr [rax]
0x40c1: nop dword ptr [rax]
0x40d9: nop dword ptr [rax]
0x413e: nop 
0x4197: nop word ptr [rax + rax]
0x41d0: add rsp,0x18
0x41d4: xor eax,eax
0x41d6: pop rbx
0x41d7: pop rbp
0x41d8: pop r12
0x41da: pop r13
0x41dc: pop r14
0x41de: pop r15
0x41e0: ret 
0x41e1: nop dword ptr [rax]
0x41ff: nop 
0x42c4: nop 
0x42c6: nop word ptr cs:[rax + rax]
0x42d0: push r15
0x42d2: push r14
0x42d4: push r13
0x42d6: push r12
0x42d8: push rbp
0x42d9: push rbx
0x42da: sub rsp,0x38
0x42de: mov rax,qword ptr fs:[0x28]
0x42e7: mov qword ptr [rsp + 0x28],rax
0x42ec: xor eax,eax
0x42ee: cmp rdi,rsi
0x42f1: mov dword ptr [rsp + 0x18],r8d
0x42f6: jbe 0x4385
0x42fc: lea rbx,[rdi - 1]
0x4300: movsxd r14,r9d
0x4303: mov rax,rdi
0x4306: sub rax,rsi
0x4309: lea r13,[rip + 0x7d28]
0x4310: mov r12,rdi
0x4313: imul rbx,r14
0x4317: add rax,rdx
0x431a: mov r15,rdx
0x431d: mov qword ptr [rsp],rax
0x4321: nop dword ptr [rax]
0x4328: xor edx,edx
0x432a: mov rax,rbx
0x432d: add r15,1
0x4331: movzx r8d,byte ptr [r15 - 1]
0x4336: div r12
0x4339: cmp r8b,0xd
0x433d: movzx edx,r8b
0x4341: mov rbp,rax
0x4344: ja 0x4420
0x434a: movsxd rax,dword ptr [r13 + rdx*4]
0x434f: add rax,r13
0x4352: jmp rax
0x4354: nop dword ptr [rax]
0x4358: lea rdx,[rip + 0x69fb]
0x435f: nop 
0x4360: mov eax,dword ptr [rsp + 0x18]
0x4364: sub r9d,ebp
0x4367: lea rdi,[rip + 0x696e]
0x436e: sub rbx,r14
0x4371: lea esi,[r9 + rax]
0x4375: xor eax,eax
0x4377: call 0x8150
0x437c: cmp r15,qword ptr [rsp]
0x4380: mov r9d,ebp
0x4383: jne 0x4328
0x4385: mov rax,qword ptr [rsp + 0x28]
0x438a: xor rax,qword ptr fs:[0x28]
0x4393: jne 0x4489
0x4399: add rsp,0x38
0x439d: pop rbx
0x439e: pop rbp
0x439f: pop r12
0x43a1: pop r13
0x43a3: pop r14
0x43a5: pop r15
0x43a7: ret 
0x43a8: nop dword ptr [rax + rax]
0x43b0: lea rdx,[rip + 0x69a0]
0x43b7: jmp 0x4360
0x43b9: nop dword ptr [rax]
0x43c0: lea rdx,[rip + 0x699f]
0x43c7: jmp 0x4360
0x43c9: nop dword ptr [rax]
0x43d0: lea rdx,[rip + 0x6989]
0x43d7: jmp 0x4360
0x43d9: nop dword ptr [rax]
0x43e0: lea rdx,[rip + 0x6985]
0x43e7: jmp 0x4360
0x43ec: nop dword ptr [rax]
0x43f0: lea rdx,[rip + 0x696c]
0x43f7: jmp 0x4360
0x43fc: nop dword ptr [rax]
0x4400: lea rdx,[rip + 0x6962]
0x4407: jmp 0x4360
0x440c: nop dword ptr [rax]
0x4410: lea rdx,[rip + 0x6946]
0x4417: jmp 0x4360
0x441c: nop dword ptr [rax]
0x4420: mov dword ptr [rsp + 0x1c],r9d
0x4425: mov qword ptr [rsp + 0x10],rdx
0x442a: mov byte ptr [rsp + 8],r8b
0x442f: call 0x1b40
0x4434: mov rdx,qword ptr [rsp + 0x10]
0x4439: mov rax,qword ptr [rax]
0x443c: lea r11,[rsp + 0x24]
0x4441: movzx r8d,byte ptr [rsp + 8]
0x4447: lea rcx,[rip + 0x6901]
0x444e: mov esi,1
0x4453: mov rdi,r11
0x4456: mov qword ptr [rsp + 8],r11
0x445b: test byte ptr [rax + rdx*2 + 1],0x40
0x4460: lea rax,[rip + 0x68eb]
0x4467: mov edx,4
0x446c: cmove rcx,rax
0x4470: xor eax,eax
0x4472: call 0x1b50
0x4477: mov r11,qword ptr [rsp + 8]
0x447c: mov r9d,dword ptr [rsp + 0x1c]
0x4481: mov rdx,r11
0x4484: jmp 0x4360
0x4489: call 0x18e0
0x448e: nop 
0x451d: nop dword ptr [rax]
0x455a: mov rax,qword ptr [rip + 0x20bc4f]
0x4561: lea rdi,[rip + 0x8bd1]
0x4568: mov ecx,2
0x456d: mov rsi,qword ptr [rax - 8]
0x4571: repe cmpsb byte ptr [rsi],byte ptr [rdi]
0x4573: seta al
0x4576: sbb al,0
0x4578: xor ebx,ebx
0x457a: test al,al
0x457c: je 0x44da
0x4582: mov rdi,qword ptr [rip + 0x20bc1f]
0x4589: call 0x8800
0x458e: jmp 0x44da
0x4593: nop dword ptr [rax + rax]
0x45da: jmp 0x44da
0x45df: nop 
0x4663: nop dword ptr [rax + rax]
0x469e: nop 
0x46d2: mov rax,qword ptr [rip + 0x20bacf]
0x46d9: jmp 0x465c
0x46de: nop 
0x46f3: nop dword ptr [rax]
0x46f6: nop word ptr cs:[rax + rax]
0x475c: nop dword ptr [rax]
0x480c: jmp 0x47a3
0x4832: nop word ptr [rax + rax]
0x48da: call 0x18e0
0x48df: nop 
0x4938: nop dword ptr [rax + rax]
0x499b: nop dword ptr [rax + rax]
0x4b27: nop word ptr [rax + rax]
0x4b35: jmp 0x4afd
0x4b37: nop word ptr [rax + rax]
0x4b95: nop dword ptr [rax]
0x4ba2: jmp 0x49c0
0x4ba7: nop word ptr [rax + rax]
0x4bd5: nop dword ptr [rax]
0x4be2: jmp 0x49a0
0x4be7: nop word ptr [rax + rax]
0x4c4a: nop word ptr [rax + rax]
0x4c5e: nop 
0x4c6a: jmp 0x4c17
0x4c6c: nop dword ptr [rax]
0x4c9e: nop 
0x4ce3: nop dword ptr [rax + rax]
0x4d3a: nop word ptr [rax + rax]
0x4d66: nop word ptr cs:[rax + rax]
0x5272: nop word ptr cs:[rax + rax]
0x527c: nop dword ptr [rax]
0x5280: mov edi,1
0x5285: jmp 0x4d70
0x528a: nop word ptr [rax + rax]
0x52d6: nop word ptr cs:[rax + rax]
0x5390: mov byte ptr [rsp + 0x17],1
0x5395: jmp 0x5317
0x5397: nop word ptr [rax + rax]
0x53a6: nop word ptr cs:[rax + rax]
0x540d: nop dword ptr [rax]
0x5423: nop dword ptr [rax]
0x5426: nop word ptr cs:[rax + rax]
0x5430: push r15
0x5432: push r14
0x5434: mov r14,rdi
0x5437: push r13
0x5439: push r12
0x543b: xor edi,edi
0x543d: push rbp
0x543e: push rbx
0x543f: mov rbp,rsi
0x5442: lea rsi,[rip + 0x7378]
0x5449: mov r12,rdx
0x544c: mov edx,5
0x5451: sub rsp,8
0x5455: mov rbx,qword ptr [rip + 0x20ac84]
0x545c: call 0x18b0
0x5461: mov rdi,rax
0x5464: mov rsi,rbx
0x5467: call 0x19b0
0x546c: mov r15,qword ptr [r14]
0x546f: test r15,r15
0x5472: je 0x5508
0x5478: xor r13d,r13d
0x547b: xor ebx,ebx
0x547d: jmp 0x54b8
0x547f: nop 
0x5480: mov rdi,r15
0x5483: add rbx,1
0x5487: mov r13,rbp
0x548a: call 0x7820
0x548f: mov rdi,qword ptr [rip + 0x20ac4a]
0x5496: lea rdx,[rip + 0x7339]
0x549d: mov rcx,rax
0x54a0: mov esi,1
0x54a5: xor eax,eax
0x54a7: add rbp,r12
0x54aa: call 0x1b10
0x54af: mov r15,qword ptr [r14 + rbx*8]
0x54b3: test r15,r15
0x54b6: je 0x5508
0x54b8: test rbx,rbx
0x54bb: je 0x5480
0x54bd: mov rdx,r12
0x54c0: mov rsi,rbp
0x54c3: mov rdi,r13
0x54c6: call 0x19a0
0x54cb: test eax,eax
0x54cd: jne 0x5480
0x54cf: mov rdi,r15
0x54d2: add rbx,1
0x54d6: add rbp,r12
0x54d9: call 0x7820
0x54de: mov rdi,qword ptr [rip + 0x20abfb]
0x54e5: lea rdx,[rip + 0x72f2]
0x54ec: mov rcx,rax
0x54ef: mov esi,1
0x54f4: xor eax,eax
0x54f6: call 0x1b10
0x54fb: mov r15,qword ptr [r14 + rbx*8]
0x54ff: test r15,r15
0x5502: jne 0x54b8
0x5504: nop dword ptr [rax]
0x5508: mov rdi,qword ptr [rip + 0x20abd1]
0x550f: mov rax,qword ptr [rdi + 0x28]
0x5513: cmp rax,qword ptr [rdi + 0x30]
0x5517: jae 0x5538
0x5519: lea rdx,[rax + 1]
0x551d: mov qword ptr [rdi + 0x28],rdx
0x5521: mov byte ptr [rax],0xa
0x5524: add rsp,8
0x5528: pop rbx
0x5529: pop rbp
0x552a: pop r12
0x552c: pop r13
0x552e: pop r14
0x5530: pop r15
0x5532: ret 
0x5533: nop dword ptr [rax + rax]
0x5538: add rsp,8
0x553c: mov esi,0xa
0x5541: pop rbx
0x5542: pop rbp
0x5543: pop r12
0x5545: pop r13
0x5547: pop r14
0x5549: pop r15
0x554b: jmp 0x1920
0x55a3: mov rdx,r15
0x55a6: mov rsi,rbp
0x55a9: mov rdi,rbx
0x55ac: call 0x5430
0x55b1: call r13
0x55b4: mov rax,-1
0x55bb: jmp 0x5586
0x55bd: nop dword ptr [rax]
0x55c0: push r14
0x55c2: push r13
0x55c4: push r12
0x55c6: push rbp
0x55c7: push rbx
0x55c8: mov r14,qword ptr [rsi]
0x55cb: test r14,r14
0x55ce: je 0x5601
0x55d0: mov r12,rcx
0x55d3: mov r13,rdi
0x55d6: mov rbp,rdx
0x55d9: lea rbx,[rsi + 8]
0x55dd: jmp 0x55ef
0x55df: nop 
0x55e0: mov r14,qword ptr [rbx]
0x55e3: add rbp,r12
0x55e6: add rbx,8
0x55ea: test r14,r14
0x55ed: je 0x5601
0x55ef: mov rdx,r12
0x55f2: mov rsi,rbp
0x55f5: mov rdi,r13
0x55f8: call 0x19a0
0x55fd: test eax,eax
0x55ff: jne 0x55e0
0x5601: pop rbx
0x5602: mov rax,r14
0x5605: pop rbp
0x5606: pop r12
0x5608: pop r13
0x560a: pop r14
0x560c: ret 
0x560d: nop dword ptr [rax]
0x5610: mov qword ptr [rip + 0x20ac19],rdi
0x5617: ret 
0x5618: nop dword ptr [rax + rax]
0x5620: mov byte ptr [rip + 0x20ac01],dil
0x5627: ret 
0x5628: nop dword ptr [rax + rax]
0x5630: push rbp
0x5631: push rbx
0x5632: sub rsp,8
0x5636: mov rdi,qword ptr [rip + 0x20aa6b]
0x563d: call 0x8ad0
0x5642: test eax,eax
0x5644: je 0x565c
0x5646: call 0x17f0
0x564b: cmp byte ptr [rip + 0x20abd6],0
0x5652: mov rbx,rax
0x5655: je 0x5673
0x5657: cmp dword ptr [rax],0x20
0x565a: jne 0x5673
0x565c: mov rdi,qword ptr [rip + 0x20aa7d]
0x5663: call 0x8ad0
0x5668: test eax,eax
0x566a: jne 0x56b2
0x566c: add rsp,8
0x5670: pop rbx
0x5671: pop rbp
0x5672: ret 
0x5673: lea rsi,[rip + 0x5704]
0x567a: xor edi,edi
0x567c: mov edx,5
0x5681: call 0x18b0
0x5686: mov rdi,qword ptr [rip + 0x20aba3]
0x568d: mov rbp,rax
0x5690: test rdi,rdi
0x5693: je 0x56bd
0x5695: call 0x7620
0x569a: mov esi,dword ptr [rbx]
0x569c: lea rdx,[rip + 0x7140]
0x56a3: mov rcx,rax
0x56a6: mov r8,rbp
0x56a9: xor edi,edi
0x56ab: xor eax,eax
0x56ad: call 0x1aa0
0x56b2: mov edi,dword ptr [rip + 0x20a970]
0x56b8: call 0x1810
0x56bd: mov esi,dword ptr [rbx]
0x56bf: lea rdx,[rip + 0x711a]
0x56c6: mov rcx,rax
0x56c9: xor edi,edi
0x56cb: xor eax,eax
0x56cd: call 0x1aa0
0x56d2: jmp 0x56b2
0x56d4: nop word ptr cs:[rax + rax]
0x56de: nop 
0x56e0: push r15
0x56e2: push r14
0x56e4: mov r14d,ecx
0x56e7: push r13
0x56e9: push r12
0x56eb: mov r12,rdi
0x56ee: push rbp
0x56ef: push rbx
0x56f0: mov rbp,rsi
0x56f3: movapd xmm3,xmm0
0x56f7: sub rsp,0x38
0x56fb: movsd qword ptr [rsp],xmm0
0x5700: pxor xmm0,xmm0
0x5704: mov rax,qword ptr fs:[0x28]
0x570d: mov qword ptr [rsp + 0x28],rax
0x5712: xor eax,eax
0x5714: ucomisd xmm0,xmm3
0x5718: ja 0x5830
0x571e: movsd xmm0,qword ptr [rsp]
0x5723: mov eax,edx
0x5725: lea r13,[rsp + 0x1d]
0x572a: mov ecx,edx
0x572c: and eax,1
0x572f: shr ecx,1
0x5731: mov esi,0x2d25
0x5736: lea rdi,[r13 + rax + 1]
0x573b: and ecx,1
0x573e: mov eax,edx
0x5740: mov word ptr [rsp + 0x1d],si
0x5745: shr eax,2
0x5748: mov ebx,1
0x574d: lea rsi,[rdi + rcx]
0x5751: and eax,1
0x5754: mov byte ptr [rdi],0x2b
0x5757: movsd xmm1,qword ptr [rip + 0x70a1]
0x575f: mov edi,0x2e2a
0x5764: lea rcx,[rsi + rax]
0x5768: mov eax,edx
0x576a: and edx,0x10
0x576d: shr eax,3
0x5770: mov byte ptr [rsi],0x20
0x5773: mov r15,-1
0x577a: and eax,1
0x577d: mov byte ptr [rcx],0x30
0x5780: add rax,rcx
0x5783: cmp edx,1
0x5786: sbb edx,edx
0x5788: mov word ptr [rax],di
0x578b: mov byte ptr [rax + 2],0x2a
0x578f: and edx,0x20
0x5792: mov byte ptr [rax + 4],0
0x5796: add edx,0x47
0x5799: ucomisd xmm1,xmm0
0x579d: mov byte ptr [rax + 3],dl
0x57a0: mov eax,0xf
0x57a5: cmovbe ebx,eax
0x57a8: jmp 0x57b3
0x57aa: nop word ptr [rax + rax]
0x57b0: add ebx,1
0x57b3: sub rsp,8
0x57b7: mov rcx,r15
0x57ba: mov edx,1
0x57bf: push rbx
0x57c0: mov r9d,r14d
0x57c3: mov r8,r13
0x57c6: mov rsi,rbp
0x57c9: mov rdi,r12
0x57cc: mov eax,1
0x57d1: movsd xmm0,qword ptr [rsp + 0x10]
0x57d7: call 0x17c0
0x57dc: test eax,eax
0x57de: pop rdx
0x57df: pop rcx
0x57e0: js 0x580a
0x57e2: cmp ebx,0x10
0x57e5: jg 0x580a
0x57e7: movsxd rdx,eax
0x57ea: cmp rdx,rbp
0x57ed: jae 0x57b0
0x57ef: xor esi,esi
0x57f1: mov rdi,r12
0x57f4: mov dword ptr [rsp + 0xc],eax
0x57f8: call 0x1850
0x57fd: ucomisd xmm0,qword ptr [rsp]
0x5802: jp 0x57b0
0x5804: mov eax,dword ptr [rsp + 0xc]
0x5808: jne 0x57b0
0x580a: mov rsi,qword ptr [rsp + 0x28]
0x580f: xor rsi,qword ptr fs:[0x28]
0x5818: jne 0x5841
0x581a: add rsp,0x38
0x581e: pop rbx
0x581f: pop rbp
0x5820: pop r12
0x5822: pop r13
0x5824: pop r14
0x5826: pop r15
0x5828: ret 
0x5829: nop dword ptr [rax]
0x5830: movapd xmm0,xmm3
0x5834: xorpd xmm0,xmmword ptr [rip + 0x6fb4]
0x583c: jmp 0x5723
0x5841: call 0x18e0
0x5846: nop word ptr cs:[rax + rax]
0x5922: nop word ptr [rax + rax]
0x59a1: nop dword ptr [rax]
0x59b7: call 0x18e0
0x59bc: nop dword ptr [rax]
0x59c0: push r15
0x59c2: push r14
0x59c4: fldz 
0x59c6: push r13
0x59c8: push r12
0x59ca: mov r14d,ecx
0x59cd: push rbp
0x59ce: push rbx
0x59cf: mov r12,rdi
0x59d2: mov rbp,rsi
0x59d5: sub rsp,0x38
0x59d9: fld xword ptr [rsp + 0x70]
0x59dd: fxch st(1)
0x59df: mov rax,qword ptr fs:[0x28]
0x59e8: mov qword ptr [rsp + 0x28],rax
0x59ed: xor eax,eax
0x59ef: fucomip st(1)
0x59f1: ja 0x5b00
0x59f7: fstp st(0)
0x59f9: fld xword ptr [rsp + 0x70]
0x59fd: mov eax,0x2d25
0x5a02: lea r13,[rsp + 0x1d]
0x5a07: mov ecx,edx
0x5a09: mov word ptr [rsp + 0x1d],ax
0x5a0e: mov eax,edx
0x5a10: shr ecx,1
0x5a12: and eax,1
0x5a15: and ecx,1
0x5a18: mov ebx,1
0x5a1d: lea rdi,[r13 + rax + 1]
0x5a22: mov eax,edx
0x5a24: mov r15,-1
0x5a2b: shr eax,2
0x5a2e: lea rsi,[rdi + rcx]
0x5a32: and eax,1
0x5a35: mov byte ptr [rdi],0x2b
0x5a38: lea rcx,[rsi + rax]
0x5a3c: mov eax,edx
0x5a3e: and edx,0x10
0x5a41: fld xword ptr [rip + 0x6de9]
0x5a47: shr eax,3
0x5a4a: mov byte ptr [rsi],0x20
0x5a4d: mov byte ptr [rcx],0x30
0x5a50: and eax,1
0x5a53: add rax,rcx
0x5a56: cmp edx,1
0x5a59: sbb edx,edx
0x5a5b: mov dword ptr [rax],0x4c2a2e2a
0x5a61: mov byte ptr [rax + 5],0
0x5a65: and edx,0x20
0x5a68: add edx,0x47
0x5a6b: mov byte ptr [rax + 4],dl
0x5a6e: mov eax,0x12
0x5a73: fucomip st(1)
0x5a75: fstp st(0)
0x5a77: cmovbe ebx,eax
0x5a7a: jmp 0x5a83
0x5a7c: nop dword ptr [rax]
0x5a80: add ebx,1
0x5a83: push qword ptr [rsp + 0x78]
0x5a87: push qword ptr [rsp + 0x78]
0x5a8b: xor eax,eax
0x5a8d: mov r9d,r14d
0x5a90: mov r8,r13
0x5a93: mov rcx,r15
0x5a96: sub rsp,8
0x5a9a: mov edx,1
0x5a9f: mov rsi,rbp
0x5aa2: push rbx
0x5aa3: mov rdi,r12
0x5aa6: call 0x17c0
0x5aab: add rsp,0x20
0x5aaf: test eax,eax
0x5ab1: js 0x5ae0
0x5ab3: cmp ebx,0x14
0x5ab6: jg 0x5ae0
0x5ab8: movsxd rdx,eax
0x5abb: cmp rdx,rbp
0x5abe: jae 0x5a80
0x5ac0: xor esi,esi
0x5ac2: mov rdi,r12
0x5ac5: mov dword ptr [rsp + 0xc],eax
0x5ac9: call 0x1a90
0x5ace: fld xword ptr [rsp + 0x70]
0x5ad2: fxch st(1)
0x5ad4: fucomip st(1)
0x5ad6: fstp st(0)
0x5ad8: jp 0x5a80
0x5ada: mov eax,dword ptr [rsp + 0xc]
0x5ade: jne 0x5a80
0x5ae0: mov rsi,qword ptr [rsp + 0x28]
0x5ae5: xor rsi,qword ptr fs:[0x28]
0x5aee: jne 0x5b07
0x5af0: add rsp,0x38
0x5af4: pop rbx
0x5af5: pop rbp
0x5af6: pop r12
0x5af8: pop r13
0x5afa: pop r14
0x5afc: pop r15
0x5afe: ret 
0x5aff: nop 
0x5b00: fchs 
0x5b02: jmp 0x59fd
0x5b07: call 0x18e0
0x5b0c: nop dword ptr [rax]
0x5baf: nop 
0x5bec: nop dword ptr [rax]
0x5c3d: nop dword ptr [rax]
0x5c97: nop word ptr [rax + rax]
0x5f57: nop word ptr [rax + rax]
0x5f8e: nop 
0x5fb1: nop dword ptr [rax]
0x5ff2: nop word ptr [rax + rax]
0x6004: nop dword ptr [rax]
0x60a8: nop dword ptr [rax + rax]
0x60d1: nop dword ptr [rax]
0x60e7: nop word ptr [rax + rax]
0x60ff: nop 
0x612e: nop 
0x613d: nop dword ptr [rax]
0x614f: nop 
0x615f: nop 
0x616f: nop 
0x617f: nop 
0x618f: nop 
0x61fc: nop dword ptr [rax]
0x621c: nop dword ptr [rax]
0x623f: nop 
0x6252: nop word ptr [rax + rax]
0x626a: nop word ptr [rax + rax]
0x627a: nop word ptr [rax + rax]
0x631b: nop dword ptr [rax + rax]
0x6335: nop dword ptr [rax]
0x6348: nop dword ptr [rax + rax]
0x6363: nop dword ptr [rax + rax]
0x6392: nop word ptr [rax + rax]
0x63a2: nop word ptr [rax + rax]
0x63ba: nop word ptr [rax + rax]
0x63ca: nop word ptr [rax + rax]
0x63d8: nop dword ptr [rax + rax]
0x63ff: nop 
0x6499: nop dword ptr [rax]
0x64e2: nop word ptr [rax + rax]
0x6521: nop dword ptr [rax]
0x6542: nop word ptr [rax + rax]
0x66a8: nop dword ptr [rax + rax]
0x67bb: nop dword ptr [rax + rax]
0x67de: nop 
0x68a5: nop dword ptr [rax]
0x695d: nop dword ptr [rax]
0x6b66: nop word ptr cs:[rax + rax]
0x6bf9: nop dword ptr [rax]
0x6d4d: nop dword ptr [rax]
0x6e93: call 0x18e0
0x6ed4: nop 
0x6ed6: nop word ptr cs:[rax + rax]
0x705b: nop dword ptr [rax + rax]
0x708b: nop dword ptr [rax + rax]
0x7090: push r12
0x7092: push rbp
0x7093: push rbx
0x7094: mov rbx,rdi
0x7097: call 0x17f0
0x709c: mov r12d,dword ptr [rax]
0x709f: mov rbp,rax
0x70a2: lea rax,[rip + 0x209297]
0x70a9: test rbx,rbx
0x70ac: mov esi,0x38
0x70b1: cmove rbx,rax
0x70b5: mov rdi,rbx
0x70b8: call 0x8060
0x70bd: mov dword ptr [rbp],r12d
0x70c1: pop rbx
0x70c2: pop rbp
0x70c3: pop r12
0x70c5: ret 
0x70c6: nop word ptr cs:[rax + rax]
0x70d0: lea rax,[rip + 0x209269]
0x70d7: test rdi,rdi
0x70da: cmove rdi,rax
0x70de: mov eax,dword ptr [rdi]
0x70e0: ret 
0x70e1: nop dword ptr [rax + rax]
0x70e6: nop word ptr cs:[rax + rax]
0x70f0: lea rax,[rip + 0x209249]
0x70f7: test rdi,rdi
0x70fa: cmove rdi,rax
0x70fe: mov dword ptr [rdi],esi
0x7100: ret 
0x7101: nop dword ptr [rax + rax]
0x7106: nop word ptr cs:[rax + rax]
0x7110: lea rax,[rip + 0x209229]
0x7117: test rdi,rdi
0x711a: mov ecx,esi
0x711c: cmove rdi,rax
0x7120: mov eax,esi
0x7122: and ecx,0x1f
0x7125: shr al,5
0x7128: movzx eax,al
0x712b: lea rdi,[rdi + rax*4 + 8]
0x7130: mov esi,dword ptr [rdi]
0x7132: mov eax,esi
0x7134: shr eax,cl
0x7136: xor edx,eax
0x7138: and eax,1
0x713b: and edx,1
0x713e: shl edx,cl
0x7140: xor edx,esi
0x7142: mov dword ptr [rdi],edx
0x7144: ret 
0x7145: nop 
0x7146: nop word ptr cs:[rax + rax]
0x7150: lea rax,[rip + 0x2091e9]
0x7157: test rdi,rdi
0x715a: cmove rdi,rax
0x715e: mov eax,dword ptr [rdi + 4]
0x7161: mov dword ptr [rdi + 4],esi
0x7164: ret 
0x7165: nop 
0x7166: nop word ptr cs:[rax + rax]
0x7170: lea rax,[rip + 0x2091c9]
0x7177: test rdi,rdi
0x717a: cmove rdi,rax
0x717e: test rsi,rsi
0x7181: mov dword ptr [rdi],0xa
0x7187: je 0x7197
0x7189: test rdx,rdx
0x718c: je 0x7197
0x718e: mov qword ptr [rdi + 0x28],rsi
0x7192: mov qword ptr [rdi + 0x30],rdx
0x7196: ret 
0x7197: sub rsp,8
0x719b: call 0x17e0
0x71a0: push r15
0x71a2: push r14
0x71a4: lea rax,[rip + 0x209195]
0x71ab: push r13
0x71ad: push r12
0x71af: mov r13,rdi
0x71b2: push rbp
0x71b3: push rbx
0x71b4: mov rbx,r8
0x71b7: mov r14,rsi
0x71ba: mov r15,rdx
0x71bd: sub rsp,0x18
0x71c1: test r8,r8
0x71c4: cmove rbx,rax
0x71c8: mov qword ptr [rsp + 8],rcx
0x71cd: call 0x17f0
0x71d2: mov r12d,dword ptr [rax]
0x71d5: mov rbp,rax
0x71d8: lea rax,[rbx + 8]
0x71dc: sub rsp,8
0x71e0: mov r9d,dword ptr [rbx + 4]
0x71e4: push qword ptr [rbx + 0x30]
0x71e7: mov r8d,dword ptr [rbx]
0x71ea: push qword ptr [rbx + 0x28]
0x71ed: mov rdx,r15
0x71f0: push rax
0x71f1: mov rcx,qword ptr [rsp + 0x28]
0x71f6: mov rsi,r14
0x71f9: mov rdi,r13
0x71fc: call 0x5ca0
0x7201: mov dword ptr [rbp],r12d
0x7205: add rsp,0x38
0x7209: pop rbx
0x720a: pop rbp
0x720b: pop r12
0x720d: pop r13
0x720f: pop r14
0x7211: pop r15
0x7213: ret 
0x7214: nop 
0x7216: nop word ptr cs:[rax + rax]
0x7220: push r15
0x7222: push r14
0x7224: lea rax,[rip + 0x209115]
0x722b: push r13
0x722d: push r12
0x722f: mov r12,rdx
0x7232: push rbp
0x7233: push rbx
0x7234: mov rbx,rcx
0x7237: mov r14,rdi
0x723a: mov r15,rsi
0x723d: sub rsp,0x38
0x7241: test rcx,rcx
0x7244: cmove rbx,rax
0x7248: xor ebp,ebp
0x724a: call 0x17f0
0x724f: test r12,r12
0x7252: mov r13,rax
0x7255: mov eax,dword ptr [rax]
0x7257: sete bpl
0x725b: or ebp,dword ptr [rbx + 4]
0x725e: lea r10,[rbx + 8]
0x7262: sub rsp,8
0x7266: mov r8d,dword ptr [rbx]
0x7269: mov rcx,r15
0x726c: mov dword ptr [rsp + 0x14],eax
0x7270: push qword ptr [rbx + 0x30]
0x7273: mov rdx,r14
0x7276: push qword ptr [rbx + 0x28]
0x7279: push r10
0x727b: xor esi,esi
0x727d: mov r9d,ebp
0x7280: xor edi,edi
0x7282: mov qword ptr [rsp + 0x40],r10
0x7287: call 0x5ca0
0x728c: lea rsi,[rax + 1]
0x7290: mov qword ptr [rsp + 0x48],rax
0x7295: add rsp,0x20
0x7299: mov rdi,rsi
0x729c: mov qword ptr [rsp + 0x18],rsi
0x72a1: call 0x7e60
0x72a6: mov qword ptr [rsp + 0x10],rax
0x72ab: sub rsp,8
0x72af: push qword ptr [rbx + 0x30]
0x72b2: push qword ptr [rbx + 0x28]
0x72b5: mov r10,qword ptr [rsp + 0x38]
0x72ba: mov r9d,ebp
0x72bd: mov r8d,dword ptr [rbx]
0x72c0: mov rcx,r15
0x72c3: mov rdx,r14
0x72c6: mov rdi,rax
0x72c9: push r10
0x72cb: mov rsi,qword ptr [rsp + 0x38]
0x72d0: call 0x5ca0
0x72d5: mov eax,dword ptr [rsp + 0x2c]
0x72d9: add rsp,0x20
0x72dd: test r12,r12
0x72e0: mov dword ptr [r13],eax
0x72e4: je 0x72ef
0x72e6: mov r11,qword ptr [rsp + 0x28]
0x72eb: mov qword ptr [r12],r11
0x72ef: mov rax,qword ptr [rsp + 0x10]
0x72f4: add rsp,0x38
0x72f8: pop rbx
0x72f9: pop rbp
0x72fa: pop r12
0x72fc: pop r13
0x72fe: pop r14
0x7300: pop r15
0x7302: ret 
0x7303: nop dword ptr [rax]
0x7306: nop word ptr cs:[rax + rax]
0x7310: mov rcx,rdx
0x7313: xor edx,edx
0x7315: jmp 0x7220
0x731a: nop word ptr [rax + rax]
0x7320: mov eax,dword ptr [rip + 0x208d52]
0x7326: push r12
0x7328: mov r12,qword ptr [rip + 0x208d51]
0x732f: push rbp
0x7330: push rbx
0x7331: cmp eax,1
0x7334: jle 0x7361
0x7336: sub eax,2
0x7339: lea rbx,[r12 + 0x18]
0x733e: shl rax,4
0x7342: lea rbp,[r12 + rax + 0x28]
0x7347: nop word ptr [rax + rax]
0x7350: mov rdi,qword ptr [rbx]
0x7353: add rbx,0x10
0x7357: call 0x17d0
0x735c: cmp rbx,rbp
0x735f: jne 0x7350
0x7361: mov rdi,qword ptr [r12 + 8]
0x7366: lea rbx,[rip + 0x208ed3]
0x736d: cmp rdi,rbx
0x7370: je 0x7389
0x7372: call 0x17d0
0x7377: mov qword ptr [rip + 0x208d0e],0x100
0x7382: mov qword ptr [rip + 0x208d0f],rbx
0x7389: lea rbx,[rip + 0x208d00]
0x7390: cmp r12,rbx
0x7393: je 0x73a4
0x7395: mov rdi,r12
0x7398: call 0x17d0
0x739d: mov qword ptr [rip + 0x208cdc],rbx
0x73a4: pop rbx
0x73a5: mov dword ptr [rip + 0x208cc9],1
0x73af: pop rbp
0x73b0: pop r12
0x73b2: ret 
0x73b3: nop dword ptr [rax]
0x73b6: nop word ptr cs:[rax + rax]
0x73c0: lea rcx,[rip + 0x208f79]
0x73c7: mov rdx,-1
0x73ce: jmp 0x6ee0
0x73d3: nop dword ptr [rax]
0x73d6: nop word ptr cs:[rax + rax]
0x73e0: lea rcx,[rip + 0x208f59]
0x73e7: jmp 0x6ee0
0x73ec: nop dword ptr [rax]
0x73f0: lea rcx,[rip + 0x208f49]
0x73f7: mov rsi,rdi
0x73fa: mov rdx,-1
0x7401: xor edi,edi
0x7403: jmp 0x6ee0
0x7408: nop dword ptr [rax + rax]
0x7410: lea rcx,[rip + 0x208f29]
0x7417: mov rdx,rsi
0x741a: mov rsi,rdi
0x741d: xor edi,edi
0x741f: jmp 0x6ee0
0x7424: nop 
0x7426: nop word ptr cs:[rax + rax]
0x74b4: call 0x17e0
0x74b9: call 0x18e0
0x74be: nop 
0x74c0: sub rsp,0x48
0x74c4: mov rax,rdx
0x74c7: mov rdx,rcx
0x74ca: mov rcx,qword ptr fs:[0x28]
0x74d3: mov qword ptr [rsp + 0x38],rcx
0x74d8: xor ecx,ecx
0x74da: cmp esi,0xa
0x74dd: je 0x7540
0x74df: mov dword ptr [rsp],esi
0x74e2: mov rcx,rsp
0x74e5: mov rsi,rax
0x74e8: mov qword ptr [rsp + 4],0
0x74f1: mov qword ptr [rsp + 0xc],0
0x74fa: mov qword ptr [rsp + 0x14],0
0x7503: mov qword ptr [rsp + 0x1c],0
0x750c: mov qword ptr [rsp + 0x24],0
0x7515: mov qword ptr [rsp + 0x2c],0
0x751e: mov dword ptr [rsp + 0x34],0
0x7526: call 0x6ee0
0x752b: mov rdx,qword ptr [rsp + 0x38]
0x7530: xor rdx,qword ptr fs:[0x28]
0x7539: jne 0x7545
0x753b: add rsp,0x48
0x753f: ret 
0x7540: call 0x17e0
0x7545: call 0x18e0
0x754a: nop word ptr [rax + rax]
0x7550: mov rdx,rsi
0x7553: mov esi,edi
0x7555: xor edi,edi
0x7557: jmp 0x7430
0x755c: nop dword ptr [rax]
0x7560: mov rcx,rdx
0x7563: mov rdx,rsi
0x7566: mov esi,edi
0x7568: xor edi,edi
0x756a: jmp 0x74c0
0x756f: nop 
0x7570: sub rsp,0x48
0x7574: mov ecx,edx
0x7576: mov rax,qword ptr fs:[0x28]
0x757f: mov qword ptr [rsp + 0x38],rax
0x7584: xor eax,eax
0x7586: mov rax,qword ptr [rip + 0x208de3]
0x758d: mov r8,rsp
0x7590: and ecx,0x1f
0x7593: movdqa xmm0,xmmword ptr [rip + 0x208da5]
0x759b: mov qword ptr [rsp + 0x30],rax
0x75a0: mov eax,edx
0x75a2: movaps xmmword ptr [rsp],xmm0
0x75a6: shr al,5
0x75a9: movzx eax,al
0x75ac: lea r9,[r8 + rax*4 + 8]
0x75b1: movdqa xmm0,xmmword ptr [rip + 0x208d97]
0x75b9: movaps xmmword ptr [rsp + 0x10],xmm0
0x75be: movdqa xmm0,xmmword ptr [rip + 0x208d9a]
0x75c6: movaps xmmword ptr [rsp + 0x20],xmm0
0x75cb: mov edx,dword ptr [r9]
0x75ce: mov eax,edx
0x75d0: shr eax,cl
0x75d2: not eax
0x75d4: and eax,1
0x75d7: shl eax,cl
0x75d9: mov rcx,r8
0x75dc: xor eax,edx
0x75de: mov rdx,rsi
0x75e1: mov rsi,rdi
0x75e4: mov dword ptr [r9],eax
0x75e7: xor edi,edi
0x75e9: call 0x6ee0
0x75ee: mov rsi,qword ptr [rsp + 0x38]
0x75f3: xor rsi,qword ptr fs:[0x28]
0x75fc: jne 0x7603
0x75fe: add rsp,0x48
0x7602: ret 
0x7603: call 0x18e0
0x7608: nop dword ptr [rax + rax]
0x7610: movsx edx,sil
0x7614: mov rsi,-1
0x761b: jmp 0x7570
0x7620: mov edx,0x3a
0x7625: mov rsi,-1
0x762c: jmp 0x7570
0x7631: nop dword ptr [rax + rax]
0x7636: nop word ptr cs:[rax + rax]
0x7640: mov edx,0x3a
0x7645: jmp 0x7570
0x764a: nop word ptr [rax + rax]
0x76d4: call 0x17e0
0x76d9: call 0x18e0
0x76de: nop 
0x76e0: sub rsp,0x48
0x76e4: mov r9,rcx
0x76e7: mov rcx,qword ptr [rip + 0x208c82]
0x76ee: movdqa xmm0,xmmword ptr [rip + 0x208c4a]
0x76f6: mov rax,qword ptr fs:[0x28]
0x76ff: mov qword ptr [rsp + 0x38],rax
0x7704: xor eax,eax
0x7706: movaps xmmword ptr [rsp],xmm0
0x770a: test rsi,rsi
0x770d: mov qword ptr [rsp + 0x30],rcx
0x7712: mov dword ptr [rsp],0xa
0x7719: movdqa xmm0,xmmword ptr [rip + 0x208c2f]
0x7721: movaps xmmword ptr [rsp + 0x10],xmm0
0x7726: movdqa xmm0,xmmword ptr [rip + 0x208c32]
0x772e: movaps xmmword ptr [rsp + 0x20],xmm0
0x7733: je 0x7767
0x7735: test rdx,rdx
0x7738: je 0x7767
0x773a: mov qword ptr [rsp + 0x28],rsi
0x773f: mov qword ptr [rsp + 0x30],rdx
0x7744: mov rcx,rsp
0x7747: mov rdx,r8
0x774a: mov rsi,r9
0x774d: call 0x6ee0
0x7752: mov rdi,qword ptr [rsp + 0x38]
0x7757: xor rdi,qword ptr fs:[0x28]
0x7760: jne 0x776c
0x7762: add rsp,0x48
0x7766: ret 
0x7767: call 0x17e0
0x776c: call 0x18e0
0x7771: nop dword ptr [rax + rax]
0x7776: nop word ptr cs:[rax + rax]
0x7780: mov r8,-1
0x7787: jmp 0x76e0
0x778c: nop dword ptr [rax]
0x7790: mov rcx,rdx
0x7793: mov r8,-1
0x779a: mov rdx,rsi
0x779d: mov rsi,rdi
0x77a0: xor edi,edi
0x77a2: jmp 0x76e0
0x77a7: nop word ptr [rax + rax]
0x77b0: mov r8,rcx
0x77b3: mov rcx,rdx
0x77b6: mov rdx,rsi
0x77b9: mov rsi,rdi
0x77bc: xor edi,edi
0x77be: jmp 0x76e0
0x77c3: nop dword ptr [rax]
0x77c6: nop word ptr cs:[rax + rax]
0x77d0: lea rcx,[rip + 0x208869]
0x77d7: jmp 0x6ee0
0x77dc: nop dword ptr [rax]
0x77e0: lea rcx,[rip + 0x208859]
0x77e7: mov rdx,rsi
0x77ea: mov rsi,rdi
0x77ed: xor edi,edi
0x77ef: jmp 0x6ee0
0x77f4: nop 
0x77f6: nop word ptr cs:[rax + rax]
0x7813: nop dword ptr [rax]
0x7816: nop word ptr cs:[rax + rax]
0x7838: nop dword ptr [rax + rax]
0x78e6: nop word ptr cs:[rax + rax]
0x7975: nop dword ptr [rax]
0x7978: mov r8,rcx
0x797b: mov rcx,rdx
0x797e: lea rdx,[rip + 0x53ef]
0x7985: mov esi,1
0x798a: xor eax,eax
0x798c: call 0x1b10
0x7991: jmp 0x787c
0x7996: nop word ptr cs:[rax + rax]
0x79f5: nop dword ptr [rax]
0x7a31: nop dword ptr [rax]
0x7a78: nop dword ptr [rax + rax]
0x7ac7: nop word ptr [rax + rax]
0x7b24: nop dword ptr [rax]
0x7b52: nop word ptr [rax + rax]
0x7c06: nop word ptr cs:[rax + rax]
0x7c57: nop word ptr [rax + rax]
0x7c60: xor r9d,r9d
0x7c63: cmp qword ptr [r8],0
0x7c67: je 0x7c7b
0x7c69: nop dword ptr [rax]
0x7c70: add r9,1
0x7c74: cmp qword ptr [r8 + r9*8],0
0x7c79: jne 0x7c70
0x7c7b: jmp 0x7840
0x7c80: sub rsp,0x68
0x7c84: mov r10,r8
0x7c87: xor r9d,r9d
0x7c8a: mov rax,qword ptr fs:[0x28]
0x7c93: mov qword ptr [rsp + 0x58],rax
0x7c98: xor eax,eax
0x7c9a: mov r8,rsp
0x7c9d: nop dword ptr [rax]
0x7ca0: mov eax,dword ptr [r10]
0x7ca3: cmp eax,0x2f
0x7ca6: ja 0x7cea
0x7ca8: mov r11d,eax
0x7cab: add r11,qword ptr [r10 + 0x10]
0x7caf: add eax,8
0x7cb2: mov dword ptr [r10],eax
0x7cb5: mov rax,qword ptr [r11]
0x7cb8: test rax,rax
0x7cbb: mov qword ptr [r8 + r9*8],rax
0x7cbf: je 0x7ccb
0x7cc1: add r9,1
0x7cc5: cmp r9,0xa
0x7cc9: jne 0x7ca0
0x7ccb: call 0x7840
0x7cd0: mov rax,qword ptr [rsp + 0x58]
0x7cd5: xor rax,qword ptr fs:[0x28]
0x7cde: jne 0x7ce5
0x7ce0: add rsp,0x68
0x7ce4: ret 
0x7ce5: call 0x18e0
0x7cea: mov r11,qword ptr [r10 + 8]
0x7cee: lea rax,[r11 + 8]
0x7cf2: mov qword ptr [r10 + 8],rax
0x7cf6: jmp 0x7cb5
0x7cf8: nop dword ptr [rax + rax]
0x7dc0: call 0x18e0
0x7dcc: mov rax,rbx
0x7dcf: add rbx,8
0x7dd3: jmp 0x7d86
0x7dd5: nop 
0x7dd6: nop word ptr cs:[rax + rax]
0x7de0: push rbx
0x7de1: lea rsi,[rip + 0x4fda]
0x7de8: mov edx,5
0x7ded: xor edi,edi
0x7def: call 0x18b0
0x7df4: lea rdx,[rip + 0x4fdc]
0x7dfb: mov rsi,rax
0x7dfe: mov edi,1
0x7e03: xor eax,eax
0x7e05: call 0x1a70
0x7e0a: lea rsi,[rip + 0x4fdc]
0x7e11: mov edx,5
0x7e16: xor edi,edi
0x7e18: call 0x18b0
0x7e1d: lea rcx,[rip + 0x3fd4]
0x7e24: lea rdx,[rip + 0x300b]
0x7e2b: mov rsi,rax
0x7e2e: mov edi,1
0x7e33: xor eax,eax
0x7e35: call 0x1a70
0x7e3a: mov rbx,qword ptr [rip + 0x208267]
0x7e41: lea rsi,[rip + 0x51d8]
0x7e48: xor edi,edi
0x7e4a: mov edx,5
0x7e4f: call 0x18b0
0x7e54: mov rsi,rbx
0x7e57: mov rdi,rax
0x7e5a: pop rbx
0x7e5b: jmp 0x19b0
0x7e7a: nop word ptr [rax + rax]
0x7e80: mov rax,rdi
0x7e83: mul rsi
0x7e86: mov rdi,rax
0x7e89: seto al
0x7e8c: test rdi,rdi
0x7e8f: js 0x7e9b
0x7e91: movzx eax,al
0x7e94: test rax,rax
0x7e97: jne 0x7e9b
0x7e99: jmp 0x7e60
0x7e9b: sub rsp,8
0x7e9f: call 0x80b0
0x7ea4: nop 
0x7ea6: nop word ptr cs:[rax + rax]
0x7eb0: jmp 0x7e60
0x7eb2: nop dword ptr [rax]
0x7eb6: nop word ptr cs:[rax + rax]
0x7ee2: nop word ptr [rax + rax]
0x7ef6: nop word ptr cs:[rax + rax]
0x7f00: mov rax,rsi
0x7f03: mul rdx
0x7f06: mov rsi,rax
0x7f09: seto al
0x7f0c: test rsi,rsi
0x7f0f: js 0x7f1b
0x7f11: movzx eax,al
0x7f14: test rax,rax
0x7f17: jne 0x7f1b
0x7f19: jmp 0x7ec0
0x7f1b: sub rsp,8
0x7f1f: call 0x80b0
0x7f24: nop 
0x7f26: nop word ptr cs:[rax + rax]
0x7f30: test rdi,rdi
0x7f33: mov r9,rdx
0x7f36: mov rcx,qword ptr [rsi]
0x7f39: je 0x7f70
0x7f3b: xor edx,edx
0x7f3d: movabs rax,0x5555555555555554
0x7f47: div r9
0x7f4a: cmp rax,rcx
0x7f4d: jbe 0x7f8b
0x7f4f: mov rax,rcx
0x7f52: shr rax,1
0x7f55: lea rcx,[rax + rcx + 1]
0x7f5a: mov qword ptr [rsi],rcx
0x7f5d: imul rcx,r9
0x7f61: mov rsi,rcx
0x7f64: jmp 0x7ec0
0x7f69: nop dword ptr [rax]
0x7f70: test rcx,rcx
0x7f73: je 0x7f98
0x7f75: mov rax,rcx
0x7f78: mul r9
0x7f7b: seto dl
0x7f7e: test rax,rax
0x7f81: movzx edx,dl
0x7f84: js 0x7f8b
0x7f86: test rdx,rdx
0x7f89: je 0x7f5a
0x7f8b: sub rsp,8
0x7f8f: call 0x80b0
0x7f94: nop dword ptr [rax]
0x7f98: xor edx,edx
0x7f9a: mov eax,0x80
0x7f9f: xor r8d,r8d
0x7fa2: div r9
0x7fa5: test rax,rax
0x7fa8: sete r8b
0x7fac: lea rcx,[r8 + rax]
0x7fb0: jmp 0x7f75
0x7fb2: nop dword ptr [rax]
0x7fb6: nop word ptr cs:[rax + rax]
0x7fed: nop dword ptr [rax]
0x800a: nop word ptr [rax + rax]
0x8010: push rbx
0x8011: mov rbx,rdi
0x8014: call 0x7e60
0x8019: mov rdx,rbx
0x801c: xor esi,esi
0x801e: mov rdi,rax
0x8021: pop rbx
0x8022: jmp 0x1980
0x8027: nop word ptr [rax + rax]
0x8030: mov rax,rdi
0x8033: sub rsp,8
0x8037: mul rsi
0x803a: seto dl
0x803d: test rax,rax
0x8040: js 0x8059
0x8042: movzx edx,dl
0x8045: test rdx,rdx
0x8048: jne 0x8059
0x804a: call 0x19c0
0x804f: test rax,rax
0x8052: je 0x8059
0x8054: add rsp,8
0x8058: ret 
0x8059: call 0x80b0
0x805e: nop 
0x8060: push rbp
0x8061: push rbx
0x8062: mov rbp,rdi
0x8065: mov rdi,rsi
0x8068: mov rbx,rsi
0x806b: sub rsp,8
0x806f: call 0x7e60
0x8074: add rsp,8
0x8078: mov rdx,rbx
0x807b: mov rsi,rbp
0x807e: pop rbx
0x807f: pop rbp
0x8080: mov rdi,rax
0x8083: jmp 0x19d0
0x8088: nop dword ptr [rax + rax]
0x8090: push rbx
0x8091: mov rbx,rdi
0x8094: call 0x18d0
0x8099: mov rdi,rbx
0x809c: lea rsi,[rax + 1]
0x80a0: pop rbx
0x80a1: jmp 0x8060
0x80a3: nop word ptr cs:[rax + rax]
0x80ad: nop dword ptr [rax]
0x80e0: call 0x17e0
0x80e5: nop word ptr cs:[rax + rax]
0x80ef: nop 
0x810a: nop word ptr [rax + rax]
0x814d: jmp 0x8101
0x814f: nop 
0x8174: movaps xmmword ptr [rsp + 0x50],xmm0
0x8179: movaps xmmword ptr [rsp + 0x60],xmm1
0x817e: movaps xmmword ptr [rsp + 0x70],xmm2
0x8183: movaps xmmword ptr [rsp + 0x80],xmm3
0x818b: movaps xmmword ptr [rsp + 0x90],xmm4
0x8193: movaps xmmword ptr [rsp + 0xa0],xmm5
0x819b: movaps xmmword ptr [rsp + 0xb0],xmm6
0x81a3: movaps xmmword ptr [rsp + 0xc0],xmm7
0x8201: call 0x18e0
0x8206: nop word ptr cs:[rax + rax]
0x8210: push rbp
0x8211: push rbx
0x8212: mov rbp,rdi
0x8215: sub rsp,8
0x8219: call 0x89b0
0x821e: test eax,eax
0x8220: mov ebx,eax
0x8222: js 0x8230
0x8224: add rsp,8
0x8228: mov eax,ebx
0x822a: pop rbx
0x822b: pop rbp
0x822c: ret 
0x822d: nop dword ptr [rax]
0x8230: mov rdi,rbp
0x8233: call 0x1840
0x8238: test eax,eax
0x823a: jne 0x8224
0x823c: lea rsi,[rip + 0x4e9d]
0x8243: xor edi,edi
0x8245: mov edx,5
0x824a: call 0x18b0
0x824f: mov rbp,rax
0x8252: call 0x17f0
0x8257: mov edi,dword ptr [rip + 0x207dcb]
0x825d: mov esi,dword ptr [rax]
0x825f: mov rdx,rbp
0x8262: xor eax,eax
0x8264: call 0x1aa0
0x8269: jmp 0x8224
0x826b: nop dword ptr [rax + rax]
0x8270: sub rsp,0xd8
0x8277: test al,al
0x8279: mov qword ptr [rsp + 0x30],rdx
0x827e: mov qword ptr [rsp + 0x38],rcx
0x8283: mov qword ptr [rsp + 0x40],r8
0x8288: mov qword ptr [rsp + 0x48],r9
0x828d: je 0x82c6
0x828f: movaps xmmword ptr [rsp + 0x50],xmm0
0x8294: movaps xmmword ptr [rsp + 0x60],xmm1
0x8299: movaps xmmword ptr [rsp + 0x70],xmm2
0x829e: movaps xmmword ptr [rsp + 0x80],xmm3
0x82a6: movaps xmmword ptr [rsp + 0x90],xmm4
0x82ae: movaps xmmword ptr [rsp + 0xa0],xmm5
0x82b6: movaps xmmword ptr [rsp + 0xb0],xmm6
0x82be: movaps xmmword ptr [rsp + 0xc0],xmm7
0x82c6: mov rax,qword ptr fs:[0x28]
0x82cf: mov qword ptr [rsp + 0x18],rax
0x82d4: xor eax,eax
0x82d6: lea rax,[rsp + 0xe0]
0x82de: mov rdx,rsp
0x82e1: mov qword ptr [rsp + 8],rax
0x82e6: lea rax,[rsp + 0x20]
0x82eb: mov dword ptr [rsp],0x10
0x82f2: mov dword ptr [rsp + 4],0x30
0x82fa: mov qword ptr [rsp + 0x10],rax
0x82ff: call 0x8210
0x8304: mov rcx,qword ptr [rsp + 0x18]
0x8309: xor rcx,qword ptr fs:[0x28]
0x8312: jne 0x831c
0x8314: add rsp,0xd8
0x831b: ret 
0x831c: call 0x18e0
0x8321: nop word ptr cs:[rax + rax]
0x832b: nop dword ptr [rax + rax]
0x83dc: nop dword ptr [rax]
0x8446: nop word ptr cs:[rax + rax]
0x8486: cmp eax,0x22
0x8489: mov ebp,1
0x848e: jne 0x84b8
0x84a3: nop dword ptr [rax + rax]
0x84e2: nop word ptr [rax + rax]
0x84ec: nop dword ptr [rax]
0x858b: nop dword ptr [rax + rax]
0x86bc: nop dword ptr [rax]
0x8743: nop dword ptr [rax + rax]
0x8760: call 0x18e0
0x87fc: nop dword ptr [rax]
0x8845: nop dword ptr [rax]
0x887b: nop dword ptr [rax + rax]
0x88a3: nop dword ptr [rax + rax]
0x88cf: nop 
0x8917: nop word ptr [rax + rax]
0x899e: call 0x18e0
0x89a3: nop word ptr cs:[rax + rax]
0x89ad: nop dword ptr [rax]
0x8a59: nop dword ptr [rax]
0x8a9d: call 0x18e0
0x8aa2: nop word ptr cs:[rax + rax]
0x8aac: nop dword ptr [rax]
0x8ac2: nop word ptr cs:[rax + rax]
0x8acc: nop dword ptr [rax]
0x8ad0: push r12
0x8ad2: push rbp
0x8ad3: mov rbp,rdi
0x8ad6: push rbx
0x8ad7: call 0x1820
0x8adc: mov ebx,dword ptr [rbp]
0x8adf: mov rdi,rbp
0x8ae2: mov r12,rax
0x8ae5: call 0x8800
0x8aea: and ebx,0x20
0x8aed: test ebx,ebx
0x8aef: jne 0x8b08
0x8af1: test eax,eax
0x8af3: je 0x8aff
0x8af5: test r12,r12
0x8af8: mov eax,0xffffffff
0x8afd: je 0x8b38
0x8aff: pop rbx
0x8b00: pop rbp
0x8b01: pop r12
0x8b03: ret 
0x8b04: nop dword ptr [rax]
0x8b08: test eax,eax
0x8b0a: jne 0x8b28
0x8b0c: call 0x17f0
0x8b11: mov dword ptr [rax],0
0x8b17: mov eax,0xffffffff
0x8b1c: pop rbx
0x8b1d: pop rbp
0x8b1e: pop r12
0x8b20: ret 
0x8b21: nop dword ptr [rax]
0x8b28: pop rbx
0x8b29: mov eax,0xffffffff
0x8b2e: pop rbp
0x8b2f: pop r12
0x8b31: ret 
0x8b32: nop word ptr [rax + rax]
0x8b38: call 0x17f0
0x8b3d: cmp dword ptr [rax],9
0x8b40: pop rbx
0x8b41: pop rbp
0x8b42: pop r12
0x8b44: setne al
0x8b47: movzx eax,al
0x8b4a: neg eax
0x8b4c: ret 
0x8b4d: nop dword ptr [rax]
0x8b8a: nop word ptr [rax + rax]
0x8bd6: nop word ptr cs:[rax + rax]
0x8bec: nop dword ptr [rax]
0x8bf4: nop word ptr cs:[rax + rax]
0x8bfe: nop 
0x8e04: nop dword ptr [rax]
0x8e33: nop dword ptr [rax + rax]
0x915d: nop dword ptr [rax]
0x91d4: movsxd rdx,ecx
0x91d7: cmp rdx,r10
0x91da: jae 0x91ea
0x91dc: add rdx,r15
0x91df: cmp byte ptr [rdx + r14],0
0x91e4: jne 0x9b26
0x91ea: cmp ecx,eax
0x91ec: jge 0x91f6
0x9292: nop word ptr [rax + rax]
0x93bf: nop 
0x9442: nop word ptr [rax + rax]
0x94c3: nop dword ptr [rax + rax]
0x9504: nop dword ptr [rax]
0x9586: nop word ptr cs:[rax + rax]
0x95bc: nop dword ptr [rax]
0x95ec: nop dword ptr [rax]
0x962b: nop dword ptr [rax + rax]
0x9641: nop dword ptr [rax]
0x9655: nop dword ptr [rax]
0x9658: mov byte ptr [rdi + 1],0
0x965c: jmp 0x9110
0x9661: nop dword ptr [rax]
0x96b9: nop dword ptr [rax]
0x96d9: nop dword ptr [rax]
0x9702: nop word ptr [rax + rax]
0x975d: nop dword ptr [rax]
0x976f: nop 
0x9828: nop dword ptr [rax + rax]
0x9838: nop dword ptr [rax + rax]
0x986d: nop dword ptr [rax]
0x98aa: nop word ptr [rax + rax]
0x98c3: nop dword ptr [rax + rax]
0x9958: nop dword ptr [rax + rax]
0x996c: nop dword ptr [rax]
0x997b: nop dword ptr [rax + rax]
0x998b: nop dword ptr [rax + rax]
0x999c: nop dword ptr [rax]
0x99e8: nop dword ptr [rax + rax]
0x99f8: nop dword ptr [rax + rax]
0x9a0f: nop 
0x9a26: nop word ptr cs:[rax + rax]
0x9a4a: nop word ptr [rax + rax]
0x9ac3: nop dword ptr [rax + rax]
0x9ad8: nop dword ptr [rax + rax]
0x9b2b: nop dword ptr [rax + rax]
0x9cdd: nop dword ptr [rax]
0x9cf7: call 0x18e0
0x9d1f: nop 
0x9d58: nop dword ptr [rax + rax]
0x9d60: mov rdx,qword ptr [rdi + 8]
0x9d64: add rdx,0xf
0x9d68: and rdx,0xfffffffffffffff0
0x9d6c: lea r11,[rdx + 0x10]
0x9d70: mov qword ptr [rdi + 8],r11
0x9d74: fld xword ptr [rdx]
0x9d76: fstp xword ptr [rax + 0x10]
0x9d79: nop dword ptr [rax]
0x9d96: mov r11d,dword ptr [rdi]
0x9d99: cmp r11d,0x2f
0x9d9d: ja 0x9eda
0x9da3: mov edx,r11d
0x9da6: add rdx,qword ptr [rdi + 0x10]
0x9daa: add r11d,8
0x9dae: mov dword ptr [rdi],r11d
0x9db1: mov rdx,qword ptr [rdx]
0x9db4: mov qword ptr [rax + 0x10],rdx
0x9db8: jmp 0x9d80
0x9ddc: mov r11d,dword ptr [rdi]
0x9ddf: cmp r11d,0x2f
0x9de3: ja 0x9eeb
0x9de9: mov edx,r11d
0x9dec: add rdx,qword ptr [rdi + 0x10]
0x9df0: add r11d,8
0x9df4: mov dword ptr [rdi],r11d
0x9df7: mov edx,dword ptr [rdx]
0x9df9: mov byte ptr [rax + 0x10],dl
0x9dfc: jmp 0x9d80
0x9dfe: mov r11d,dword ptr [rdi]
0x9e01: cmp r11d,0x2f
0x9e05: ja 0x9eaa
0x9e0b: mov edx,r11d
0x9e0e: add rdx,qword ptr [rdi + 0x10]
0x9e12: add r11d,8
0x9e16: mov dword ptr [rdi],r11d
0x9e19: mov edx,dword ptr [rdx]
0x9e1b: mov word ptr [rax + 0x10],dx
0x9e1f: jmp 0x9d80
0x9e24: mov r11d,dword ptr [rdi]
0x9e27: cmp r11d,0x2f
0x9e2b: ja 0x9ebb
0x9e31: mov edx,r11d
0x9e34: add rdx,qword ptr [rdi + 0x10]
0x9e38: add r11d,8
0x9e3c: mov dword ptr [rdi],r11d
0x9e3f: mov rdx,qword ptr [rdx]
0x9e42: test rdx,rdx
0x9e45: cmove rdx,r9
0x9e49: mov qword ptr [rax + 0x10],rdx
0x9e4d: jmp 0x9d80
0x9e52: mov r11d,dword ptr [rdi + 4]
0x9e56: cmp r11d,0xaf
0x9e5d: ja 0x9f0d
0x9e63: mov edx,r11d
0x9e66: add rdx,qword ptr [rdi + 0x10]
0x9e6a: add r11d,0x10
0x9e6e: mov dword ptr [rdi + 4],r11d
0x9e72: movsd xmm0,qword ptr [rdx]
0x9e76: movsd qword ptr [rax + 0x10],xmm0
0x9e7b: jmp 0x9d80
0x9e80: mov r11d,dword ptr [rdi]
0x9e83: cmp r11d,0x2f
0x9e87: ja 0x9ecc
0x9e89: mov edx,r11d
0x9e8c: add rdx,qword ptr [rdi + 0x10]
0x9e90: add r11d,8
0x9e94: mov dword ptr [rdi],r11d
0x9e97: mov rdx,qword ptr [rdx]
0x9e9a: test rdx,rdx
0x9e9d: cmove rdx,r10
0x9ea1: mov qword ptr [rax + 0x10],rdx
0x9ea5: jmp 0x9d80
0x9eaa: mov rdx,qword ptr [rdi + 8]
0x9eae: lea r11,[rdx + 8]
0x9eb2: mov qword ptr [rdi + 8],r11
0x9eb6: jmp 0x9e19
0x9ebb: mov rdx,qword ptr [rdi + 8]
0x9ebf: lea r11,[rdx + 8]
0x9ec3: mov qword ptr [rdi + 8],r11
0x9ec7: jmp 0x9e3f
0x9ecc: mov rdx,qword ptr [rdi + 8]
0x9ed0: lea r11,[rdx + 8]
0x9ed4: mov qword ptr [rdi + 8],r11
0x9ed8: jmp 0x9e97
0x9eda: mov rdx,qword ptr [rdi + 8]
0x9ede: lea r11,[rdx + 8]
0x9ee2: mov qword ptr [rdi + 8],r11
0x9ee6: jmp 0x9db1
0x9eeb: mov rdx,qword ptr [rdi + 8]
0x9eef: lea r11,[rdx + 8]
0x9ef3: mov qword ptr [rdi + 8],r11
0x9ef7: jmp 0x9df7
0x9efc: mov rdx,qword ptr [rdi + 8]
0x9f00: lea r11,[rdx + 8]
0x9f04: mov qword ptr [rdi + 8],r11
0x9f08: jmp 0x9dd5
0x9f0d: mov rdx,qword ptr [rdi + 8]
0x9f11: lea r11,[rdx + 8]
0x9f15: mov qword ptr [rdi + 8],r11
0x9f19: jmp 0x9e72
0x9f1e: nop 
0x9f8e: nop 
0x9fd1: nop dword ptr [rax]
0xa037: nop word ptr [rax + rax]
0xa082: nop word ptr [rax + rax]
0xa098: nop dword ptr [rax + rax]
0xa0a8: nop dword ptr [rax + rax]
0xa0b8: nop dword ptr [rax + rax]
0xa0c8: nop dword ptr [rax + rax]
0xa0f7: nop word ptr [rax + rax]
0xa13d: nop dword ptr [rax]
0xa145: nop dword ptr [rax]
0xa50d: nop dword ptr [rax]
0xa662: nop word ptr [rax + rax]
0xa6c5: nop dword ptr [rax]
0xa756: nop word ptr cs:[rax + rax]
0xa7ae: nop 
0xabbb: nop dword ptr [rax + rax]
0xac0c: nop dword ptr [rax]
0xac10: push r15
0xac12: push r14
0xac14: mov r15,rdx
0xac17: push r13
0xac19: push r12
0xac1b: lea r12,[rip + 0x204dae]
0xac22: push rbp
0xac23: lea rbp,[rip + 0x204dae]
0xac2a: push rbx
0xac2b: mov r13d,edi
0xac2e: mov r14,rsi
0xac31: sub rbp,r12
0xac34: sub rsp,8
0xac38: sar rbp,3
0xac3c: call 0x1790
0xac41: test rbp,rbp
0xac44: je 0xac66
0xac46: xor ebx,ebx
0xac48: nop dword ptr [rax + rax]
0xac50: mov rdx,r15
0xac53: mov rsi,r14
0xac56: mov edi,r13d
0xac59: call qword ptr [r12 + rbx*8]
0xac5d: add rbx,1
0xac61: cmp rbp,rbx
0xac64: jne 0xac50
0xac66: add rsp,8
0xac6a: pop rbx
0xac6b: pop rbp
0xac6c: pop r12
0xac6e: pop r13
0xac70: pop r14
0xac72: pop r15
0xac74: ret 
0xac75: nop 
0xac76: nop word ptr cs:[rax + rax]
0xac80: ret 
0xac82: nop word ptr cs:[rax + rax]
0xac8c: nop dword ptr [rax]
0xaca0: sub rsp,8
0xaca4: add rsp,8
0xaca8: ret 
