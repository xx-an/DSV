0x12f0: sub rsp,8
0x12f4: mov rax,qword ptr [rip + 0x205ce5]
0x12fb: test rax,rax
0x12fe: je 0x1302
0x1300: call rax
0x1302: add rsp,8
0x1306: ret 
0x1310: push qword ptr [rip + 0x205b3a]
0x1316: jmp qword ptr [rip + 0x205b3c]
0x131c: nop dword ptr [rax]
0x1326: push 0
0x132b: jmp 0x1310
0x1336: push 1
0x133b: jmp 0x1310
0x1346: push 2
0x134b: jmp 0x1310
0x1356: push 3
0x135b: jmp 0x1310
0x1366: push 4
0x136b: jmp 0x1310
0x1370: jmp qword ptr [rip + 0x205b12]
0x1376: push 5
0x137b: jmp 0x1310
0x1380: jmp qword ptr [rip + 0x205b0a]
0x1386: push 6
0x138b: jmp 0x1310
0x1396: push 7
0x139b: jmp 0x1310
0x13a6: push 8
0x13ab: jmp 0x1310
0x13b0: jmp qword ptr [rip + 0x205af2]
0x13b6: push 9
0x13bb: jmp 0x1310
0x13c6: push 0xa
0x13cb: jmp 0x1310
0x13d6: push 0xb
0x13db: jmp 0x1310
0x13e6: push 0xc
0x13eb: jmp 0x1310
0x13f6: push 0xd
0x13fb: jmp 0x1310
0x1406: push 0xe
0x140b: jmp 0x1310
0x1410: jmp qword ptr [rip + 0x205ac2]
0x1416: push 0xf
0x141b: jmp 0x1310
0x1426: push 0x10
0x142b: jmp 0x1310
0x1436: push 0x11
0x143b: jmp 0x1310
0x1446: push 0x12
0x144b: jmp 0x1310
0x1450: jmp qword ptr [rip + 0x205aa2]
0x1456: push 0x13
0x145b: jmp 0x1310
0x1466: push 0x14
0x146b: jmp 0x1310
0x1476: push 0x15
0x147b: jmp 0x1310
0x1486: push 0x16
0x148b: jmp 0x1310
0x1496: push 0x17
0x149b: jmp 0x1310
0x14a0: jmp qword ptr [rip + 0x205a7a]
0x14a6: push 0x18
0x14ab: jmp 0x1310
0x14b0: jmp qword ptr [rip + 0x205a72]
0x14b6: push 0x19
0x14bb: jmp 0x1310
0x14c0: jmp qword ptr [rip + 0x205a6a]
0x14c6: push 0x1a
0x14cb: jmp 0x1310
0x14d6: push 0x1b
0x14db: jmp 0x1310
0x14e6: push 0x1c
0x14eb: jmp 0x1310
0x14f0: jmp qword ptr [rip + 0x205a52]
0x14f6: push 0x1d
0x14fb: jmp 0x1310
0x1506: push 0x1e
0x150b: jmp 0x1310
0x1510: jmp qword ptr [rip + 0x205a42]
0x1516: push 0x1f
0x151b: jmp 0x1310
0x1526: push 0x20
0x152b: jmp 0x1310
0x1536: push 0x21
0x153b: jmp 0x1310
0x1546: push 0x22
0x154b: jmp 0x1310
0x1556: push 0x23
0x155b: jmp 0x1310
0x1566: push 0x24
0x156b: jmp 0x1310
0x1576: push 0x25
0x157b: jmp 0x1310
0x1580: jmp qword ptr [rip + 0x205a0a]
0x1586: push 0x26
0x158b: jmp 0x1310
0x1596: push 0x27
0x159b: jmp 0x1310
0x15a6: push 0x28
0x15ab: jmp 0x1310
0x15b6: push 0x29
0x15bb: jmp 0x1310
0x15c6: push 0x2a
0x15cb: jmp 0x1310
0x15d6: push 0x2b
0x15db: jmp 0x1310
0x15e6: push 0x2c
0x15eb: jmp 0x1310
0x15f6: push 0x2d
0x15fb: jmp 0x1310
0x1600: jmp qword ptr [rip + 0x2059ea]
0x16f9: nop dword ptr [rax]
0x1853: jmp 0x17c2
0x1899: jmp 0x17b2
0x18ff: jmp 0x17c2
0x19bc: nop dword ptr [rax]
0x19ea: hlt 
0x19eb: nop dword ptr [rax + rax]
0x19f0: lea rdi,[rip + 0x205689]
0x19f7: push rbp
0x19f8: lea rax,[rip + 0x205681]
0x19ff: cmp rax,rdi
0x1a02: mov rbp,rsp
0x1a05: je 0x1a20
0x1a07: mov rax,qword ptr [rip + 0x2055c2]
0x1a0e: test rax,rax
0x1a11: je 0x1a20
0x1a13: pop rbp
0x1a14: jmp rax
0x1a16: nop word ptr cs:[rax + rax]
0x1a20: pop rbp
0x1a21: ret 
0x1a22: nop dword ptr [rax]
0x1a26: nop word ptr cs:[rax + rax]
0x1a30: lea rdi,[rip + 0x205649]
0x1a37: lea rsi,[rip + 0x205642]
0x1a3e: push rbp
0x1a3f: sub rsi,rdi
0x1a42: mov rbp,rsp
0x1a45: sar rsi,3
0x1a49: mov rax,rsi
0x1a4c: shr rax,0x3f
0x1a50: add rsi,rax
0x1a53: sar rsi,1
0x1a56: je 0x1a70
0x1a58: mov rax,qword ptr [rip + 0x205589]
0x1a5f: test rax,rax
0x1a62: je 0x1a70
0x1a64: pop rbp
0x1a65: jmp rax
0x1a67: nop word ptr [rax + rax]
0x1a70: pop rbp
0x1a71: ret 
0x1a72: nop dword ptr [rax]
0x1a76: nop word ptr cs:[rax + rax]
0x1a80: cmp byte ptr [rip + 0x205621],0
0x1a87: jne 0x1ab8
0x1a89: cmp qword ptr [rip + 0x20555f],0
0x1a91: push rbp
0x1a92: mov rbp,rsp
0x1a95: je 0x1aa3
0x1a97: mov rdi,qword ptr [rip + 0x20556a]
0x1a9e: call 0x1600
0x1aa3: call 0x19f0
0x1aa8: mov byte ptr [rip + 0x2055f9],1
0x1aaf: pop rbp
0x1ab0: ret 
0x1ab1: nop dword ptr [rax]
0x1ab8: ret 
0x1aba: nop word ptr [rax + rax]
0x1ac0: push rbp
0x1ac1: mov rbp,rsp
0x1ac4: pop rbp
0x1ac5: jmp 0x1a30
0x1aca: nop word ptr [rax + rax]
0x1e5a: nop word ptr [rax + rax]
0x1e60: mov qword ptr [rip + 0x205251],rdi
0x1e67: ret 
0x1e68: nop dword ptr [rax + rax]
0x1e70: mov byte ptr [rip + 0x205239],dil
0x1e77: ret 
0x1e78: nop dword ptr [rax + rax]
0x1e80: push rbp
0x1e81: push rbx
0x1e82: sub rsp,8
0x1e86: mov rdi,qword ptr [rip + 0x2051fb]
0x1e8d: call 0x4820
0x1e92: test eax,eax
0x1e94: je 0x1eac
0x1e96: call 0x1340
0x1e9b: cmp byte ptr [rip + 0x20520e],0
0x1ea2: mov rbx,rax
0x1ea5: je 0x1ec3
0x1ea7: cmp dword ptr [rax],0x20
0x1eaa: jne 0x1ec3
0x1eac: mov rdi,qword ptr [rip + 0x2051ed]
0x1eb3: call 0x4820
0x1eb8: test eax,eax
0x1eba: jne 0x1f02
0x1ebc: add rsp,8
0x1ec0: pop rbx
0x1ec1: pop rbp
0x1ec2: ret 
0x1ec3: lea rsi,[rip + 0x3067]
0x1eca: xor edi,edi
0x1ecc: mov edx,5
0x1ed1: call 0x13d0
0x1ed6: mov rdi,qword ptr [rip + 0x2051db]
0x1edd: mov rbp,rax
0x1ee0: test rdi,rdi
0x1ee3: je 0x1f0d
0x1ee5: call 0x3a40
0x1eea: mov esi,dword ptr [rbx]
0x1eec: lea rdx,[rip + 0x304a]
0x1ef3: mov rcx,rax
0x1ef6: mov r8,rbp
0x1ef9: xor edi,edi
0x1efb: xor eax,eax
0x1efd: call 0x1550
0x1f02: mov edi,dword ptr [rip + 0x205110]
0x1f08: call 0x1370
0x1f0d: mov esi,dword ptr [rbx]
0x1f0f: lea rdx,[rip + 0x302b]
0x1f16: mov rcx,rax
0x1f19: xor edi,edi
0x1f1b: xor eax,eax
0x1f1d: call 0x1550
0x1f22: jmp 0x1f02
0x1f24: nop word ptr cs:[rax + rax]
0x1f2e: nop 
0x1fcf: nop 
0x200c: nop dword ptr [rax]
0x205d: nop dword ptr [rax]
0x20b7: nop word ptr [rax + rax]
0x2377: nop word ptr [rax + rax]
0x23ae: nop 
0x23d1: nop dword ptr [rax]
0x23fb: mov ebx,edx
0x23fd: xor r12d,r12d
0x2400: xor eax,eax
0x2412: nop word ptr [rax + rax]
0x2424: nop dword ptr [rax]
0x2449: cmp qword ptr [rsp + 0x18],0
0x244f: jne 0x280b
0x2455: mov ebx,0x5c
0x245a: nop word ptr [rax + rax]
0x24c8: nop dword ptr [rax + rax]
0x24db: xor edx,edx
0x24dd: test byte ptr [rsp + 0x78],1
0x24e2: je 0x23fb
0x24e8: add rbp,1
0x24ec: jmp 0x21a8
0x24f1: nop dword ptr [rax]
0x2507: nop word ptr [rax + rax]
0x251f: nop 
0x253e: mov rbp,r11
0x2541: mov dword ptr [rsp + 8],2
0x2549: jmp 0x2c49
0x254e: nop 
0x255d: nop dword ptr [rax]
0x256f: nop 
0x257f: nop 
0x258f: nop 
0x259f: nop 
0x25af: nop 
0x261c: nop dword ptr [rax]
0x263c: nop dword ptr [rax]
0x264e: nop 
0x265f: nop 
0x2672: nop word ptr [rax + rax]
0x268a: nop word ptr [rax + rax]
0x269a: nop word ptr [rax + rax]
0x273b: nop dword ptr [rax + rax]
0x2755: nop dword ptr [rax]
0x2768: nop dword ptr [rax + rax]
0x2783: nop dword ptr [rax + rax]
0x27b2: nop word ptr [rax + rax]
0x27c2: nop word ptr [rax + rax]
0x27da: nop word ptr [rax + rax]
0x27ea: nop word ptr [rax + rax]
0x27f8: nop dword ptr [rax + rax]
0x281f: nop 
0x28b9: nop dword ptr [rax]
0x2902: nop word ptr [rax + rax]
0x290f: lea rcx,[rbp + 2]
0x2913: cmp rcx,r11
0x2916: jae 0x2930
0x2918: mov rax,qword ptr [rsp + 0x10]
0x291d: cmp byte ptr [rax + rbp + 1],0x3f
0x2922: je 0x30b2
0x2928: nop dword ptr [rax + rax]
0x2941: nop dword ptr [rax]
0x2962: nop word ptr [rax + rax]
0x2ac8: nop dword ptr [rax + rax]
0x2bdb: nop dword ptr [rax + rax]
0x2be0: cmp r15,1
0x2be4: je 0x2a49
0x2bea: mov rdi,qword ptr [rsp + 0x10]
0x2bef: lea rcx,[rdi + r15]
0x2bf3: lea rdx,[rdi + r14 + 1]
0x2bf8: lea r8,[rcx + r14]
0x2bfc: jmp 0x2c0d
0x2bfe: nop 
0x2c00: add rdx,1
0x2c04: cmp r8,rdx
0x2c07: je 0x2a49
0x2c0d: movzx ecx,byte ptr [rdx]
0x2c10: sub ecx,0x5b
0x2c13: cmp cl,0x21
0x2c16: ja 0x2c00
0x2c18: mov esi,1
0x2c1d: shl rsi,cl
0x2c20: mov rcx,rsi
0x2c23: movabs rsi,0x20000002b
0x2c2d: test rcx,rsi
0x2c30: je 0x2c00
0x2c32: mov r14,qword ptr [rsp + 0x40]
0x2c37: mov r13,qword ptr [rsp + 0x70]
0x2c3c: mov rbp,qword ptr [rsp + 0x30]
0x2c41: mov dword ptr [rsp + 8],2
0x2c49: cmp byte ptr [rsp + 0xd],0
0x2c4e: je 0x2c60
0x2c50: test al,al
0x2c52: mov eax,4
0x2c57: cmove eax,dword ptr [rsp + 8]
0x2c5c: mov dword ptr [rsp + 8],eax
0x2c60: sub rsp,8
0x2c64: mov rcx,rbp
0x2c67: mov rsi,r13
0x2c6a: push qword ptr [rsp + 0x68]
0x2c6e: push qword ptr [rsp + 0x78]
0x2c72: mov rdi,r14
0x2c75: push 0
0x2c77: mov r9d,dword ptr [rsp + 0x98]
0x2c7f: mov r8d,dword ptr [rsp + 0x28]
0x2c84: mov rdx,qword ptr [rsp + 0x30]
0x2c89: and r9d,0xfffffffd
0x2c8d: call 0x20c0
0x2c92: add rsp,0x20
0x2c96: mov r15,rax
0x2cc5: nop dword ptr [rax]
0x2cc8: mov rbp,r11
0x2ccb: jmp 0x2c49
0x2d7d: nop dword ptr [rax]
0x2f86: nop word ptr cs:[rax + rax]
0x2f90: movzx ebx,byte ptr [rsp + 0xf]
0x2f95: mov rbp,r11
0x2f98: mov byte ptr [rsp + 0xd],bl
0x2f9c: jmp 0x2c49
0x3019: nop dword ptr [rax]
0x30b2: movzx ebx,byte ptr [rax + rcx]
0x30b6: cmp bl,0x3e
0x30b9: ja 0x2930
0x30bf: movabs rax,0x7000a38200000000
0x30c9: bt rax,rbx
0x30cd: jae 0x2930
0x30d3: cmp byte ptr [rsp + 0xf],0
0x30d8: jne 0x32c2
0x30de: cmp r13,r15
0x30e1: jbe 0x30e8
0x30e3: mov byte ptr [r14 + r15],0x3f
0x30e8: lea rax,[r15 + 1]
0x30ec: cmp r13,rax
0x30ef: jbe 0x30f7
0x30f1: mov byte ptr [r14 + r15 + 1],0x22
0x30f7: lea rax,[r15 + 2]
0x30fb: cmp r13,rax
0x30fe: jbe 0x3106
0x3100: mov byte ptr [r14 + r15 + 2],0x22
0x3106: lea rax,[r15 + 3]
0x310a: cmp r13,rax
0x310d: jbe 0x3115
0x310f: mov byte ptr [r14 + r15 + 3],0x3f
0x3115: add r15,4
0x3119: xor edx,edx
0x311b: xor r12d,r12d
0x311e: xor eax,eax
0x3120: mov rbp,rcx
0x3123: jmp 0x22e8
0x3130: lea rax,[rip + 0x1e66]
0x3137: mov byte ptr [rsp + 0xe],1
0x313c: mov byte ptr [rsp + 0x7c],0
0x3141: xor r12d,r12d
0x3144: mov qword ptr [rsp + 0x50],0
0x314d: mov byte ptr [rsp + 0xf],1
0x3152: mov byte ptr [rsp + 0xd],0
0x3157: mov qword ptr [rsp + 0x18],1
0x3160: xor r15d,r15d
0x3163: mov qword ptr [rsp + 0x48],rax
0x3168: jmp 0x2193
0x316d: nop dword ptr [rax]
0x3170: mov rbp,r11
0x3173: movzx eax,byte ptr [rsp + 0xf]
0x3178: jmp 0x2c49
0x317d: lea rax,[rip + 0x1e17]
0x3184: mov byte ptr [rsp + 0xe],1
0x3189: mov byte ptr [rsp + 0x7c],0
0x318e: xor r12d,r12d
0x3191: mov qword ptr [rsp + 0x50],0
0x319a: mov byte ptr [rsp + 0xf],1
0x319f: mov byte ptr [rsp + 0xd],1
0x31a4: mov qword ptr [rsp + 0x18],1
0x31ad: xor r15d,r15d
0x31b0: mov qword ptr [rsp + 0x48],rax
0x31b5: jmp 0x2193
0x3205: cmp dword ptr [rsp + 8],2
0x320a: movzx ebx,byte ptr [rsp + 0xf]
0x320f: mov rbp,r11
0x3212: sete al
0x3215: mov byte ptr [rsp + 0xd],bl
0x3219: jmp 0x2c49
0x324a: movzx ebx,byte ptr [rsp + 0xf]
0x324f: mov rbp,r11
0x3252: mov eax,edx
0x3254: mov byte ptr [rsp + 0xd],bl
0x3258: jmp 0x2c49
0x32a6: mov dword ptr [rsp + 8],2
0x32ae: jmp 0x2c49
0x32b3: call 0x1410
0x32c2: mov rbp,r11
0x32c5: jmp 0x2c60
0x32f4: nop 
0x32f6: nop word ptr cs:[rax + rax]
0x347b: nop dword ptr [rax + rax]
0x34a1: call 0x1330
0x34a6: call 0x44d0
0x34ab: nop dword ptr [rax + rax]
0x34b0: push r12
0x34b2: push rbp
0x34b3: push rbx
0x34b4: mov rbx,rdi
0x34b7: call 0x1340
0x34bc: mov r12d,dword ptr [rax]
0x34bf: mov rbp,rax
0x34c2: lea rax,[rip + 0x203d17]
0x34c9: test rbx,rbx
0x34cc: mov esi,0x38
0x34d1: cmove rbx,rax
0x34d5: mov rdi,rbx
0x34d8: call 0x4480
0x34dd: mov dword ptr [rbp],r12d
0x34e1: pop rbx
0x34e2: pop rbp
0x34e3: pop r12
0x34e5: ret 
0x34e6: nop word ptr cs:[rax + rax]
0x34f0: lea rax,[rip + 0x203ce9]
0x34f7: test rdi,rdi
0x34fa: cmove rdi,rax
0x34fe: mov eax,dword ptr [rdi]
0x3500: ret 
0x3501: nop dword ptr [rax + rax]
0x3506: nop word ptr cs:[rax + rax]
0x3510: lea rax,[rip + 0x203cc9]
0x3517: test rdi,rdi
0x351a: cmove rdi,rax
0x351e: mov dword ptr [rdi],esi
0x3520: ret 
0x3521: nop dword ptr [rax + rax]
0x3526: nop word ptr cs:[rax + rax]
0x3530: lea rax,[rip + 0x203ca9]
0x3537: test rdi,rdi
0x353a: mov ecx,esi
0x353c: cmove rdi,rax
0x3540: mov eax,esi
0x3542: and ecx,0x1f
0x3545: shr al,5
0x3548: movzx eax,al
0x354b: lea rdi,[rdi + rax*4 + 8]
0x3550: mov esi,dword ptr [rdi]
0x3552: mov eax,esi
0x3554: shr eax,cl
0x3556: xor edx,eax
0x3558: and eax,1
0x355b: and edx,1
0x355e: shl edx,cl
0x3560: xor edx,esi
0x3562: mov dword ptr [rdi],edx
0x3564: ret 
0x3565: nop 
0x3566: nop word ptr cs:[rax + rax]
0x3570: lea rax,[rip + 0x203c69]
0x3577: test rdi,rdi
0x357a: cmove rdi,rax
0x357e: mov eax,dword ptr [rdi + 4]
0x3581: mov dword ptr [rdi + 4],esi
0x3584: ret 
0x3585: nop 
0x3586: nop word ptr cs:[rax + rax]
0x3590: lea rax,[rip + 0x203c49]
0x3597: test rdi,rdi
0x359a: cmove rdi,rax
0x359e: test rsi,rsi
0x35a1: mov dword ptr [rdi],0xa
0x35a7: je 0x35b7
0x35a9: test rdx,rdx
0x35ac: je 0x35b7
0x35ae: mov qword ptr [rdi + 0x28],rsi
0x35b2: mov qword ptr [rdi + 0x30],rdx
0x35b6: ret 
0x35b7: sub rsp,8
0x35bb: call 0x1330
0x35c0: push r15
0x35c2: push r14
0x35c4: lea rax,[rip + 0x203c15]
0x35cb: push r13
0x35cd: push r12
0x35cf: mov r13,rdi
0x35d2: push rbp
0x35d3: push rbx
0x35d4: mov rbx,r8
0x35d7: mov r14,rsi
0x35da: mov r15,rdx
0x35dd: sub rsp,0x18
0x35e1: test r8,r8
0x35e4: cmove rbx,rax
0x35e8: mov qword ptr [rsp + 8],rcx
0x35ed: call 0x1340
0x35f2: mov r12d,dword ptr [rax]
0x35f5: mov rbp,rax
0x35f8: lea rax,[rbx + 8]
0x35fc: sub rsp,8
0x3600: mov r9d,dword ptr [rbx + 4]
0x3604: push qword ptr [rbx + 0x30]
0x3607: mov r8d,dword ptr [rbx]
0x360a: push qword ptr [rbx + 0x28]
0x360d: mov rdx,r15
0x3610: push rax
0x3611: mov rcx,qword ptr [rsp + 0x28]
0x3616: mov rsi,r14
0x3619: mov rdi,r13
0x361c: call 0x20c0
0x3621: mov dword ptr [rbp],r12d
0x3625: add rsp,0x38
0x3629: pop rbx
0x362a: pop rbp
0x362b: pop r12
0x362d: pop r13
0x362f: pop r14
0x3631: pop r15
0x3633: ret 
0x3634: nop 
0x3636: nop word ptr cs:[rax + rax]
0x3640: push r15
0x3642: push r14
0x3644: lea rax,[rip + 0x203b95]
0x364b: push r13
0x364d: push r12
0x364f: mov r12,rdx
0x3652: push rbp
0x3653: push rbx
0x3654: mov rbx,rcx
0x3657: mov r14,rdi
0x365a: mov r15,rsi
0x365d: sub rsp,0x38
0x3661: test rcx,rcx
0x3664: cmove rbx,rax
0x3668: xor ebp,ebp
0x366a: call 0x1340
0x366f: test r12,r12
0x3672: mov r13,rax
0x3675: mov eax,dword ptr [rax]
0x3677: sete bpl
0x367b: or ebp,dword ptr [rbx + 4]
0x367e: lea r10,[rbx + 8]
0x3682: sub rsp,8
0x3686: mov r8d,dword ptr [rbx]
0x3689: mov rcx,r15
0x368c: mov dword ptr [rsp + 0x14],eax
0x3690: push qword ptr [rbx + 0x30]
0x3693: mov rdx,r14
0x3696: push qword ptr [rbx + 0x28]
0x3699: push r10
0x369b: xor esi,esi
0x369d: mov r9d,ebp
0x36a0: xor edi,edi
0x36a2: mov qword ptr [rsp + 0x40],r10
0x36a7: call 0x20c0
0x36ac: lea rsi,[rax + 1]
0x36b0: mov qword ptr [rsp + 0x48],rax
0x36b5: add rsp,0x20
0x36b9: mov rdi,rsi
0x36bc: mov qword ptr [rsp + 0x18],rsi
0x36c1: call 0x4280
0x36c6: mov qword ptr [rsp + 0x10],rax
0x36cb: sub rsp,8
0x36cf: push qword ptr [rbx + 0x30]
0x36d2: push qword ptr [rbx + 0x28]
0x36d5: mov r10,qword ptr [rsp + 0x38]
0x36da: mov r9d,ebp
0x36dd: mov r8d,dword ptr [rbx]
0x36e0: mov rcx,r15
0x36e3: mov rdx,r14
0x36e6: mov rdi,rax
0x36e9: push r10
0x36eb: mov rsi,qword ptr [rsp + 0x38]
0x36f0: call 0x20c0
0x36f5: mov eax,dword ptr [rsp + 0x2c]
0x36f9: add rsp,0x20
0x36fd: test r12,r12
0x3700: mov dword ptr [r13],eax
0x3704: je 0x370f
0x3706: mov r11,qword ptr [rsp + 0x28]
0x370b: mov qword ptr [r12],r11
0x370f: mov rax,qword ptr [rsp + 0x10]
0x3714: add rsp,0x38
0x3718: pop rbx
0x3719: pop rbp
0x371a: pop r12
0x371c: pop r13
0x371e: pop r14
0x3720: pop r15
0x3722: ret 
0x3723: nop dword ptr [rax]
0x3726: nop word ptr cs:[rax + rax]
0x3730: mov rcx,rdx
0x3733: xor edx,edx
0x3735: jmp 0x3640
0x373a: nop word ptr [rax + rax]
0x3740: mov eax,dword ptr [rip + 0x203912]
0x3746: push r12
0x3748: mov r12,qword ptr [rip + 0x203911]
0x374f: push rbp
0x3750: push rbx
0x3751: cmp eax,1
0x3754: jle 0x3781
0x3756: sub eax,2
0x3759: lea rbx,[r12 + 0x18]
0x375e: shl rax,4
0x3762: lea rbp,[r12 + rax + 0x28]
0x3767: nop word ptr [rax + rax]
0x3770: mov rdi,qword ptr [rbx]
0x3773: add rbx,0x10
0x3777: call 0x1320
0x377c: cmp rbx,rbp
0x377f: jne 0x3770
0x3781: mov rdi,qword ptr [r12 + 8]
0x3786: lea rbx,[rip + 0x203953]
0x378d: cmp rdi,rbx
0x3790: je 0x37a9
0x3792: call 0x1320
0x3797: mov qword ptr [rip + 0x2038ce],0x100
0x37a2: mov qword ptr [rip + 0x2038cf],rbx
0x37a9: lea rbx,[rip + 0x2038c0]
0x37b0: cmp r12,rbx
0x37b3: je 0x37c4
0x37b5: mov rdi,r12
0x37b8: call 0x1320
0x37bd: mov qword ptr [rip + 0x20389c],rbx
0x37c4: pop rbx
0x37c5: mov dword ptr [rip + 0x203889],1
0x37cf: pop rbp
0x37d0: pop r12
0x37d2: ret 
0x37d3: nop dword ptr [rax]
0x37d6: nop word ptr cs:[rax + rax]
0x37e0: lea rcx,[rip + 0x2039f9]
0x37e7: mov rdx,-1
0x37ee: jmp 0x3300
0x37f3: nop dword ptr [rax]
0x37f6: nop word ptr cs:[rax + rax]
0x3800: lea rcx,[rip + 0x2039d9]
0x3807: jmp 0x3300
0x380c: nop dword ptr [rax]
0x3810: lea rcx,[rip + 0x2039c9]
0x3817: mov rsi,rdi
0x381a: mov rdx,-1
0x3821: xor edi,edi
0x3823: jmp 0x3300
0x3828: nop dword ptr [rax + rax]
0x3830: lea rcx,[rip + 0x2039a9]
0x3837: mov rdx,rsi
0x383a: mov rsi,rdi
0x383d: xor edi,edi
0x383f: jmp 0x3300
0x3844: nop 
0x3846: nop word ptr cs:[rax + rax]
0x38d4: call 0x1330
0x38d9: call 0x1410
0x38de: nop 
0x38e0: sub rsp,0x48
0x38e4: mov rax,rdx
0x38e7: mov rdx,rcx
0x38ea: mov rcx,qword ptr fs:[0x28]
0x38f3: mov qword ptr [rsp + 0x38],rcx
0x38f8: xor ecx,ecx
0x38fa: cmp esi,0xa
0x38fd: je 0x3960
0x38ff: mov dword ptr [rsp],esi
0x3902: mov rcx,rsp
0x3905: mov rsi,rax
0x3908: mov qword ptr [rsp + 4],0
0x3911: mov qword ptr [rsp + 0xc],0
0x391a: mov qword ptr [rsp + 0x14],0
0x3923: mov qword ptr [rsp + 0x1c],0
0x392c: mov qword ptr [rsp + 0x24],0
0x3935: mov qword ptr [rsp + 0x2c],0
0x393e: mov dword ptr [rsp + 0x34],0
0x3946: call 0x3300
0x394b: mov rdx,qword ptr [rsp + 0x38]
0x3950: xor rdx,qword ptr fs:[0x28]
0x3959: jne 0x3965
0x395b: add rsp,0x48
0x395f: ret 
0x3960: call 0x1330
0x3965: call 0x1410
0x396a: nop word ptr [rax + rax]
0x397c: nop dword ptr [rax]
0x3980: mov rcx,rdx
0x3983: mov rdx,rsi
0x3986: mov esi,edi
0x3988: xor edi,edi
0x398a: jmp 0x38e0
0x398f: nop 
0x3990: sub rsp,0x48
0x3994: mov ecx,edx
0x3996: mov rax,qword ptr fs:[0x28]
0x399f: mov qword ptr [rsp + 0x38],rax
0x39a4: xor eax,eax
0x39a6: mov rax,qword ptr [rip + 0x203863]
0x39ad: mov r8,rsp
0x39b0: and ecx,0x1f
0x39b3: movdqa xmm0,xmmword ptr [rip + 0x203825]
0x39bb: mov qword ptr [rsp + 0x30],rax
0x39c0: mov eax,edx
0x39c2: movaps xmmword ptr [rsp],xmm0
0x39c6: shr al,5
0x39c9: movzx eax,al
0x39cc: lea r9,[r8 + rax*4 + 8]
0x39d1: movdqa xmm0,xmmword ptr [rip + 0x203817]
0x39d9: movaps xmmword ptr [rsp + 0x10],xmm0
0x39de: movdqa xmm0,xmmword ptr [rip + 0x20381a]
0x39e6: movaps xmmword ptr [rsp + 0x20],xmm0
0x39eb: mov edx,dword ptr [r9]
0x39ee: mov eax,edx
0x39f0: shr eax,cl
0x39f2: not eax
0x39f4: and eax,1
0x39f7: shl eax,cl
0x39f9: mov rcx,r8
0x39fc: xor eax,edx
0x39fe: mov rdx,rsi
0x3a01: mov rsi,rdi
0x3a04: mov dword ptr [r9],eax
0x3a07: xor edi,edi
0x3a09: call 0x3300
0x3a0e: mov rsi,qword ptr [rsp + 0x38]
0x3a13: xor rsi,qword ptr fs:[0x28]
0x3a1c: jne 0x3a23
0x3a1e: add rsp,0x48
0x3a22: ret 
0x3a23: call 0x1410
0x3a28: nop dword ptr [rax + rax]
0x3a30: movsx edx,sil
0x3a34: mov rsi,-1
0x3a3b: jmp 0x3990
0x3a40: mov edx,0x3a
0x3a45: mov rsi,-1
0x3a4c: jmp 0x3990
0x3a51: nop dword ptr [rax + rax]
0x3a56: nop word ptr cs:[rax + rax]
0x3a60: mov edx,0x3a
0x3a65: jmp 0x3990
0x3a6a: nop word ptr [rax + rax]
0x3a70: sub rsp,0x48
0x3a74: mov rax,rdx
0x3a77: mov rdx,qword ptr fs:[0x28]
0x3a80: mov qword ptr [rsp + 0x38],rdx
0x3a85: xor edx,edx
0x3a87: cmp esi,0xa
0x3a8a: je 0x3af4
0x3a8c: mov dword ptr [rsp],esi
0x3a8f: mov rcx,rsp
0x3a92: mov rdx,-1
0x3a99: mov rsi,rax
0x3a9c: mov qword ptr [rsp + 4],0
0x3aa5: mov qword ptr [rsp + 0xc],0x4000000
0x3aae: mov qword ptr [rsp + 0x14],0
0x3ab7: mov qword ptr [rsp + 0x1c],0
0x3ac0: mov qword ptr [rsp + 0x24],0
0x3ac9: mov qword ptr [rsp + 0x2c],0
0x3ad2: mov dword ptr [rsp + 0x34],0
0x3ada: call 0x3300
0x3adf: mov rcx,qword ptr [rsp + 0x38]
0x3ae4: xor rcx,qword ptr fs:[0x28]
0x3aed: jne 0x3af9
0x3aef: add rsp,0x48
0x3af3: ret 
0x3af4: call 0x1330
0x3af9: call 0x1410
0x3afe: nop 
0x3b00: sub rsp,0x48
0x3b04: mov r9,rcx
0x3b07: mov rcx,qword ptr [rip + 0x203702]
0x3b0e: movdqa xmm0,xmmword ptr [rip + 0x2036ca]
0x3b16: mov rax,qword ptr fs:[0x28]
0x3b1f: mov qword ptr [rsp + 0x38],rax
0x3b24: xor eax,eax
0x3b26: movaps xmmword ptr [rsp],xmm0
0x3b2a: test rsi,rsi
0x3b2d: mov qword ptr [rsp + 0x30],rcx
0x3b32: mov dword ptr [rsp],0xa
0x3b39: movdqa xmm0,xmmword ptr [rip + 0x2036af]
0x3b41: movaps xmmword ptr [rsp + 0x10],xmm0
0x3b46: movdqa xmm0,xmmword ptr [rip + 0x2036b2]
0x3b4e: movaps xmmword ptr [rsp + 0x20],xmm0
0x3b53: je 0x3b87
0x3b55: test rdx,rdx
0x3b58: je 0x3b87
0x3b5a: mov qword ptr [rsp + 0x28],rsi
0x3b5f: mov qword ptr [rsp + 0x30],rdx
0x3b64: mov rcx,rsp
0x3b67: mov rdx,r8
0x3b6a: mov rsi,r9
0x3b6d: call 0x3300
0x3b72: mov rdi,qword ptr [rsp + 0x38]
0x3b77: xor rdi,qword ptr fs:[0x28]
0x3b80: jne 0x3b8c
0x3b82: add rsp,0x48
0x3b86: ret 
0x3b87: call 0x1330
0x3b8c: call 0x1410
0x3b91: nop dword ptr [rax + rax]
0x3b96: nop word ptr cs:[rax + rax]
0x3ba0: mov r8,-1
0x3ba7: jmp 0x3b00
0x3bac: nop dword ptr [rax]
0x3bb0: mov rcx,rdx
0x3bb3: mov r8,-1
0x3bba: mov rdx,rsi
0x3bbd: mov rsi,rdi
0x3bc0: xor edi,edi
0x3bc2: jmp 0x3b00
0x3bc7: nop word ptr [rax + rax]
0x3bd0: mov r8,rcx
0x3bd3: mov rcx,rdx
0x3bd6: mov rdx,rsi
0x3bd9: mov rsi,rdi
0x3bdc: xor edi,edi
0x3bde: jmp 0x3b00
0x3be3: nop dword ptr [rax]
0x3be6: nop word ptr cs:[rax + rax]
0x3bf0: lea rcx,[rip + 0x203429]
0x3bf7: jmp 0x3300
0x3bfc: nop dword ptr [rax]
0x3c00: lea rcx,[rip + 0x203419]
0x3c07: mov rdx,rsi
0x3c0a: mov rsi,rdi
0x3c0d: xor edi,edi
0x3c0f: jmp 0x3300
0x3c14: nop 
0x3c16: nop word ptr cs:[rax + rax]
0x3c20: lea rcx,[rip + 0x2033f9]
0x3c27: mov rdx,-1
0x3c2e: jmp 0x3300
0x3c33: nop dword ptr [rax]
0x3c36: nop word ptr cs:[rax + rax]
0x3c40: lea rcx,[rip + 0x2033d9]
0x3c47: mov rsi,rdi
0x3c4a: mov rdx,-1
0x3c51: xor edi,edi
0x3c53: jmp 0x3300
0x3c58: nop dword ptr [rax + rax]
0x3d06: nop word ptr cs:[rax + rax]
0x3d95: nop dword ptr [rax]
0x3d98: mov r8,rcx
0x3d9b: mov rcx,rdx
0x3d9e: lea rdx,[rip + 0x16cf]
0x3da5: mov esi,1
0x3daa: xor eax,eax
0x3dac: call 0x15c0
0x3db1: jmp 0x3c9c
0x3db6: nop word ptr cs:[rax + rax]
0x3e15: nop dword ptr [rax]
0x3e51: nop dword ptr [rax]
0x3e98: nop dword ptr [rax + rax]
0x3ee7: nop word ptr [rax + rax]
0x3f44: nop dword ptr [rax]
0x3f72: nop word ptr [rax + rax]
0x4026: nop word ptr cs:[rax + rax]
0x4077: nop word ptr [rax + rax]
0x4080: xor r9d,r9d
0x4083: cmp qword ptr [r8],0
0x4087: je 0x409b
0x4089: nop dword ptr [rax]
0x4090: add r9,1
0x4094: cmp qword ptr [r8 + r9*8],0
0x4099: jne 0x4090
0x409b: jmp 0x3c60
0x40a0: sub rsp,0x68
0x40a4: mov r10,r8
0x40a7: xor r9d,r9d
0x40aa: mov rax,qword ptr fs:[0x28]
0x40b3: mov qword ptr [rsp + 0x58],rax
0x40b8: xor eax,eax
0x40ba: mov r8,rsp
0x40bd: nop dword ptr [rax]
0x40c0: mov eax,dword ptr [r10]
0x40c3: cmp eax,0x2f
0x40c6: ja 0x410a
0x40c8: mov r11d,eax
0x40cb: add r11,qword ptr [r10 + 0x10]
0x40cf: add eax,8
0x40d2: mov dword ptr [r10],eax
0x40d5: mov rax,qword ptr [r11]
0x40d8: test rax,rax
0x40db: mov qword ptr [r8 + r9*8],rax
0x40df: je 0x40eb
0x40e1: add r9,1
0x40e5: cmp r9,0xa
0x40e9: jne 0x40c0
0x40eb: call 0x3c60
0x40f0: mov rax,qword ptr [rsp + 0x58]
0x40f5: xor rax,qword ptr fs:[0x28]
0x40fe: jne 0x4105
0x4100: add rsp,0x68
0x4104: ret 
0x4105: call 0x1410
0x410a: mov r11,qword ptr [r10 + 8]
0x410e: lea rax,[r11 + 8]
0x4112: mov qword ptr [r10 + 8],rax
0x4116: jmp 0x40d5
0x4118: nop dword ptr [rax + rax]
0x41e0: call 0x1410
0x41ec: mov rax,rbx
0x41ef: add rbx,8
0x41f3: jmp 0x41a6
0x41f5: nop 
0x41f6: nop word ptr cs:[rax + rax]
0x4200: push rbx
0x4201: lea rsi,[rip + 0x12ba]
0x4208: mov edx,5
0x420d: xor edi,edi
0x420f: call 0x13d0
0x4214: lea rdx,[rip + 0x12bc]
0x421b: mov rsi,rax
0x421e: mov edi,1
0x4223: xor eax,eax
0x4225: call 0x1540
0x422a: lea rsi,[rip + 0x12bc]
0x4231: mov edx,5
0x4236: xor edi,edi
0x4238: call 0x13d0
0x423d: lea rcx,[rip + 0xbc4]
0x4244: lea rdx,[rip + 0x952]
0x424b: mov rsi,rax
0x424e: mov edi,1
0x4253: xor eax,eax
0x4255: call 0x1540
0x425a: mov rbx,qword ptr [rip + 0x202e27]
0x4261: lea rsi,[rip + 0x14b8]
0x4268: xor edi,edi
0x426a: mov edx,5
0x426f: call 0x13d0
0x4274: mov rsi,rbx
0x4277: mov rdi,rax
0x427a: pop rbx
0x427b: jmp 0x1490
0x429a: nop word ptr [rax + rax]
0x42a0: mov rax,rdi
0x42a3: mul rsi
0x42a6: mov rdi,rax
0x42a9: seto al
0x42ac: test rdi,rdi
0x42af: js 0x42bb
0x42b1: movzx eax,al
0x42b4: test rax,rax
0x42b7: jne 0x42bb
0x42b9: jmp 0x4280
0x42bb: sub rsp,8
0x42bf: call 0x44d0
0x42c4: nop 
0x42c6: nop word ptr cs:[rax + rax]
0x42d0: jmp 0x4280
0x42d2: nop dword ptr [rax]
0x42d6: nop word ptr cs:[rax + rax]
0x42e9: test rdi,rdi
0x42ec: jne 0x4308
0x4302: nop word ptr [rax + rax]
0x4308: call 0x1320
0x430d: xor eax,eax
0x430f: pop rbx
0x4310: ret 
0x4316: nop word ptr cs:[rax + rax]
0x4320: mov rax,rsi
0x4323: mul rdx
0x4326: mov rsi,rax
0x4329: seto al
0x432c: test rsi,rsi
0x432f: js 0x433b
0x4331: movzx eax,al
0x4334: test rax,rax
0x4337: jne 0x433b
0x4339: jmp 0x42e0
0x433b: sub rsp,8
0x433f: call 0x44d0
0x4344: nop 
0x4346: nop word ptr cs:[rax + rax]
0x4350: test rdi,rdi
0x4353: mov r9,rdx
0x4356: mov rcx,qword ptr [rsi]
0x4359: je 0x4390
0x435b: xor edx,edx
0x435d: movabs rax,0x5555555555555554
0x4367: div r9
0x436a: cmp rax,rcx
0x436d: jbe 0x43ab
0x436f: mov rax,rcx
0x4372: shr rax,1
0x4375: lea rcx,[rax + rcx + 1]
0x437a: mov qword ptr [rsi],rcx
0x437d: imul rcx,r9
0x4381: mov rsi,rcx
0x4384: jmp 0x42e0
0x4389: nop dword ptr [rax]
0x4390: test rcx,rcx
0x4393: je 0x43b8
0x4395: mov rax,rcx
0x4398: mul r9
0x439b: seto dl
0x439e: test rax,rax
0x43a1: movzx edx,dl
0x43a4: js 0x43ab
0x43a6: test rdx,rdx
0x43a9: je 0x437a
0x43ab: sub rsp,8
0x43af: call 0x44d0
0x43b4: nop dword ptr [rax]
0x43b8: xor edx,edx
0x43ba: mov eax,0x80
0x43bf: xor r8d,r8d
0x43c2: div r9
0x43c5: test rax,rax
0x43c8: sete r8b
0x43cc: lea rcx,[r8 + rax]
0x43d0: jmp 0x4395
0x43d2: nop dword ptr [rax]
0x43d6: nop word ptr cs:[rax + rax]
0x43e0: test rdi,rdi
0x43e3: mov rax,qword ptr [rsi]
0x43e6: je 0x4410
0x43e8: movabs rdx,0x5555555555555553
0x43f2: cmp rax,rdx
0x43f5: ja 0x4421
0x43f7: mov rdx,rax
0x43fa: shr rdx,1
0x43fd: lea rax,[rdx + rax + 1]
0x4402: mov qword ptr [rsi],rax
0x4405: mov rsi,rax
0x4408: jmp 0x42e0
0x440d: nop dword ptr [rax]
0x4410: test rax,rax
0x4413: mov edx,0x80
0x4418: cmove rax,rdx
0x441c: test rax,rax
0x441f: jns 0x4402
0x4421: sub rsp,8
0x4425: call 0x44d0
0x442a: nop word ptr [rax + rax]
0x4430: push rbx
0x4431: mov rbx,rdi
0x4434: call 0x4280
0x4439: mov rdx,rbx
0x443c: xor esi,esi
0x443e: mov rdi,rax
0x4441: pop rbx
0x4442: jmp 0x1460
0x4447: nop word ptr [rax + rax]
0x4450: mov rax,rdi
0x4453: sub rsp,8
0x4457: mul rsi
0x445a: seto dl
0x445d: test rax,rax
0x4460: js 0x4479
0x4462: movzx edx,dl
0x4465: test rdx,rdx
0x4468: jne 0x4479
0x446a: call 0x14a0
0x446f: test rax,rax
0x4472: je 0x4479
0x4474: add rsp,8
0x4478: ret 
0x4479: call 0x44d0
0x447e: nop 
0x4480: push rbp
0x4481: push rbx
0x4482: mov rbp,rdi
0x4485: mov rdi,rsi
0x4488: mov rbx,rsi
0x448b: sub rsp,8
0x448f: call 0x4280
0x4494: add rsp,8
0x4498: mov rdx,rbx
0x449b: mov rsi,rbp
0x449e: pop rbx
0x449f: pop rbp
0x44a0: mov rdi,rax
0x44a3: jmp 0x14b0
0x44a8: nop dword ptr [rax + rax]
0x44b0: push rbx
0x44b1: mov rbx,rdi
0x44b4: call 0x13f0
0x44b9: mov rdi,rbx
0x44bc: lea rsi,[rax + 1]
0x44c0: pop rbx
0x44c1: jmp 0x4480
0x44c3: nop word ptr cs:[rax + rax]
0x44cd: nop dword ptr [rax]
0x4500: call 0x1330
0x4505: nop word ptr cs:[rax + rax]
0x450f: nop 
0x45ab: nop dword ptr [rax + rax]
0x460f: nop 
0x4659: nop dword ptr [rax]
0x467b: nop dword ptr [rax + rax]
0x4721: nop dword ptr [rax]
0x475d: call 0x1410
0x477a: mov rax,qword ptr [rsp + 8]
0x477f: jmp 0x4649
0x4784: mov rax,qword ptr [rsp + 8]
0x4789: jmp 0x46a1
0x478e: nop 
0x480e: call 0x1410
0x4813: nop word ptr cs:[rax + rax]
0x481d: nop dword ptr [rax]
0x4820: push r12
0x4822: push rbp
0x4823: mov rbp,rdi
0x4826: push rbx
0x4827: call 0x1380
0x482c: mov ebx,dword ptr [rbp]
0x482f: mov rdi,rbp
0x4832: mov r12,rax
0x4835: call 0x4940
0x483a: and ebx,0x20
0x483d: test ebx,ebx
0x483f: jne 0x4858
0x4841: test eax,eax
0x4843: je 0x484f
0x4845: test r12,r12
0x4848: mov eax,0xffffffff
0x484d: je 0x4888
0x484f: pop rbx
0x4850: pop rbp
0x4851: pop r12
0x4853: ret 
0x4854: nop dword ptr [rax]
0x4858: test eax,eax
0x485a: jne 0x4878
0x485c: call 0x1340
0x4861: mov dword ptr [rax],0
0x4867: mov eax,0xffffffff
0x486c: pop rbx
0x486d: pop rbp
0x486e: pop r12
0x4870: ret 
0x4871: nop dword ptr [rax]
0x4878: pop rbx
0x4879: mov eax,0xffffffff
0x487e: pop rbp
0x487f: pop r12
0x4881: ret 
0x4882: nop word ptr [rax + rax]
0x4888: call 0x1340
0x488d: cmp dword ptr [rax],9
0x4890: pop rbx
0x4891: pop rbp
0x4892: pop r12
0x4894: setne al
0x4897: movzx eax,al
0x489a: neg eax
0x489c: ret 
0x489d: nop dword ptr [rax]
0x48da: nop word ptr [rax + rax]
0x4926: nop word ptr cs:[rax + rax]
0x493c: nop dword ptr [rax]
0x4940: push r12
0x4942: push rbp
0x4943: push rbx
0x4944: mov rbx,rdi
0x4947: call 0x14c0
0x494c: test eax,eax
0x494e: mov rdi,rbx
0x4951: js 0x49a7
0x4953: call 0x1510
0x4958: test eax,eax
0x495a: jne 0x4988
0x495c: mov rdi,rbx
0x495f: call 0x49c0
0x4964: test eax,eax
0x4966: je 0x49a4
0x4968: call 0x1340
0x496d: mov r12d,dword ptr [rax]
0x4970: mov rdi,rbx
0x4973: mov rbp,rax
0x4976: call 0x13b0
0x497b: test r12d,r12d
0x497e: jne 0x49b0
0x4980: pop rbx
0x4981: pop rbp
0x4982: pop r12
0x4984: ret 
0x4985: nop dword ptr [rax]
0x4988: mov rdi,rbx
0x498b: call 0x14c0
0x4990: xor esi,esi
0x4992: mov edx,1
0x4997: mov edi,eax
0x4999: call 0x1450
0x499e: cmp rax,-1
0x49a2: jne 0x495c
0x49a4: mov rdi,rbx
0x49a7: pop rbx
0x49a8: pop rbp
0x49a9: pop r12
0x49ab: jmp 0x13b0
0x49b0: mov dword ptr [rbp],r12d
0x49b4: mov eax,0xffffffff
0x49b9: jmp 0x4980
0x49bb: nop dword ptr [rax + rax]
0x49c0: test rdi,rdi
0x49c3: push rbx
0x49c4: mov rbx,rdi
0x49c7: je 0x49da
0x49c9: call 0x1510
0x49ce: test eax,eax
0x49d0: je 0x49da
0x49d2: test dword ptr [rbx],0x100
0x49d8: jne 0x49e8
0x49da: mov rdi,rbx
0x49dd: pop rbx
0x49de: jmp 0x14f0
0x49e3: nop dword ptr [rax + rax]
0x49e8: mov rdi,rbx
0x49eb: mov edx,1
0x49f0: xor esi,esi
0x49f2: call 0x4a00
0x49f7: mov rdi,rbx
0x49fa: pop rbx
0x49fb: jmp 0x14f0
0x4a00: mov rax,qword ptr [rdi + 8]
0x4a04: cmp qword ptr [rdi + 0x10],rax
0x4a08: je 0x4a10
0x4a0a: jmp 0x1580
0x4a0f: nop 
0x4a10: mov rax,qword ptr [rdi + 0x20]
0x4a14: cmp qword ptr [rdi + 0x28],rax
0x4a18: jne 0x4a0a
0x4a1a: cmp qword ptr [rdi + 0x48],0
0x4a1f: jne 0x4a0a
0x4a21: push r12
0x4a23: push rbp
0x4a24: mov r12d,edx
0x4a27: push rbx
0x4a28: mov rbp,rsi
0x4a2b: mov rbx,rdi
0x4a2e: call 0x14c0
0x4a33: mov edx,r12d
0x4a36: mov rsi,rbp
0x4a39: mov edi,eax
0x4a3b: call 0x1450
0x4a40: cmp rax,-1
0x4a44: je 0x4a52
0x4a46: and dword ptr [rbx],0xffffffef
0x4a49: mov qword ptr [rbx + 0x90],rax
0x4a50: xor eax,eax
0x4a52: pop rbx
0x4a53: pop rbp
0x4a54: pop r12
0x4a56: ret 
0x4a57: nop word ptr [rax + rax]
0x4a60: push r15
0x4a62: push r14
0x4a64: mov r15,rdx
0x4a67: push r13
0x4a69: push r12
0x4a6b: lea r12,[rip + 0x2020de]
0x4a72: push rbp
0x4a73: lea rbp,[rip + 0x2020de]
0x4a7a: push rbx
0x4a7b: mov r13d,edi
0x4a7e: mov r14,rsi
0x4a81: sub rbp,r12
0x4a84: sub rsp,8
0x4a88: sar rbp,3
0x4a8c: call 0x12f0
0x4a91: test rbp,rbp
0x4a94: je 0x4ab6
0x4a96: xor ebx,ebx
0x4a98: nop dword ptr [rax + rax]
0x4aa0: mov rdx,r15
0x4aa3: mov rsi,r14
0x4aa6: mov edi,r13d
0x4aa9: call qword ptr [r12 + rbx*8]
0x4aad: add rbx,1
0x4ab1: cmp rbp,rbx
0x4ab4: jne 0x4aa0
0x4ab6: add rsp,8
0x4aba: pop rbx
0x4abb: pop rbp
0x4abc: pop r12
0x4abe: pop r13
0x4ac0: pop r14
0x4ac2: pop r15
0x4ac4: ret 
0x4ac5: nop 
0x4ac6: nop word ptr cs:[rax + rax]
0x4ad0: ret 
0x4ad2: nop word ptr cs:[rax + rax]
0x4adc: nop dword ptr [rax]
0x4af0: sub rsp,8
0x4af4: add rsp,8
0x4af8: ret 
