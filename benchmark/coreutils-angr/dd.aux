0x19e8: sub rsp,8
0x19ec: mov rax,qword ptr [rip + 0x20f5e5]
0x19f3: test rax,rax
0x19f6: je 0x19fa
0x19f8: call rax
0x19fa: add rsp,8
0x19fe: ret 
0x1a00: push qword ptr [rip + 0x20f36a]
0x1a06: jmp qword ptr [rip + 0x20f36c]
0x1a0c: nop dword ptr [rax]
0x1a16: push 0
0x1a1b: jmp 0x1a00
0x1a26: push 1
0x1a2b: jmp 0x1a00
0x1a36: push 2
0x1a3b: jmp 0x1a00
0x1a46: push 3
0x1a4b: jmp 0x1a00
0x1a56: push 4
0x1a5b: jmp 0x1a00
0x1a66: push 5
0x1a6b: jmp 0x1a00
0x1a76: push 6
0x1a7b: jmp 0x1a00
0x1a86: push 7
0x1a8b: jmp 0x1a00
0x1a96: push 8
0x1a9b: jmp 0x1a00
0x1aa6: push 9
0x1aab: jmp 0x1a00
0x1ab6: push 0xa
0x1abb: jmp 0x1a00
0x1ac0: jmp qword ptr [rip + 0x20f312]
0x1ac6: push 0xb
0x1acb: jmp 0x1a00
0x1ad0: jmp qword ptr [rip + 0x20f30a]
0x1ad6: push 0xc
0x1adb: jmp 0x1a00
0x1ae6: push 0xd
0x1aeb: jmp 0x1a00
0x1af6: push 0xe
0x1afb: jmp 0x1a00
0x1b06: push 0xf
0x1b0b: jmp 0x1a00
0x1b16: push 0x10
0x1b1b: jmp 0x1a00
0x1b26: push 0x11
0x1b2b: jmp 0x1a00
0x1b36: push 0x12
0x1b3b: jmp 0x1a00
0x1b40: jmp qword ptr [rip + 0x20f2d2]
0x1b46: push 0x13
0x1b4b: jmp 0x1a00
0x1b56: push 0x14
0x1b5b: jmp 0x1a00
0x1b66: push 0x15
0x1b6b: jmp 0x1a00
0x1b76: push 0x16
0x1b7b: jmp 0x1a00
0x1b86: push 0x17
0x1b8b: jmp 0x1a00
0x1b90: jmp qword ptr [rip + 0x20f2aa]
0x1b96: push 0x18
0x1b9b: jmp 0x1a00
0x1ba6: push 0x19
0x1bab: jmp 0x1a00
0x1bb6: push 0x1a
0x1bbb: jmp 0x1a00
0x1bc6: push 0x1b
0x1bcb: jmp 0x1a00
0x1bd6: push 0x1c
0x1bdb: jmp 0x1a00
0x1be6: push 0x1d
0x1beb: jmp 0x1a00
0x1bf6: push 0x1e
0x1bfb: jmp 0x1a00
0x1c06: push 0x1f
0x1c0b: jmp 0x1a00
0x1c16: push 0x20
0x1c1b: jmp 0x1a00
0x1c20: jmp qword ptr [rip + 0x20f262]
0x1c26: push 0x21
0x1c2b: jmp 0x1a00
0x1c36: push 0x22
0x1c3b: jmp 0x1a00
0x1c46: push 0x23
0x1c4b: jmp 0x1a00
0x1c56: push 0x24
0x1c5b: jmp 0x1a00
0x1c66: push 0x25
0x1c6b: jmp 0x1a00
0x1c76: push 0x26
0x1c7b: jmp 0x1a00
0x1c86: push 0x27
0x1c8b: jmp 0x1a00
0x1c96: push 0x28
0x1c9b: jmp 0x1a00
0x1ca6: push 0x29
0x1cab: jmp 0x1a00
0x1cb0: jmp qword ptr [rip + 0x20f21a]
0x1cb6: push 0x2a
0x1cbb: jmp 0x1a00
0x1cc6: push 0x2b
0x1ccb: jmp 0x1a00
0x1cd6: push 0x2c
0x1cdb: jmp 0x1a00
0x1ce6: push 0x2d
0x1ceb: jmp 0x1a00
0x1cf0: jmp qword ptr [rip + 0x20f1fa]
0x1cf6: push 0x2e
0x1cfb: jmp 0x1a00
0x1d06: push 0x2f
0x1d0b: jmp 0x1a00
0x1d10: jmp qword ptr [rip + 0x20f1ea]
0x1d16: push 0x30
0x1d1b: jmp 0x1a00
0x1d26: push 0x31
0x1d2b: jmp 0x1a00
0x1d36: push 0x32
0x1d3b: jmp 0x1a00
0x1d40: jmp qword ptr [rip + 0x20f1d2]
0x1d46: push 0x33
0x1d4b: jmp 0x1a00
0x1d56: push 0x34
0x1d5b: jmp 0x1a00
0x1d66: push 0x35
0x1d6b: jmp 0x1a00
0x1d76: push 0x36
0x1d7b: jmp 0x1a00
0x1d86: push 0x37
0x1d8b: jmp 0x1a00
0x1d96: push 0x38
0x1d9b: jmp 0x1a00
0x1da6: push 0x39
0x1dab: jmp 0x1a00
0x1db6: push 0x3a
0x1dbb: jmp 0x1a00
0x1dc0: jmp qword ptr [rip + 0x20f192]
0x1dc6: push 0x3b
0x1dcb: jmp 0x1a00
0x1dd6: push 0x3c
0x1ddb: jmp 0x1a00
0x1de6: push 0x3d
0x1deb: jmp 0x1a00
0x1df6: push 0x3e
0x1dfb: jmp 0x1a00
0x1e06: push 0x3f
0x1e0b: jmp 0x1a00
0x1e16: push 0x40
0x1e1b: jmp 0x1a00
0x1e26: push 0x41
0x1e2b: jmp 0x1a00
0x1e36: push 0x42
0x1e3b: jmp 0x1a00
0x1e46: push 0x43
0x1e4b: jmp 0x1a00
0x1e56: push 0x44
0x1e5b: jmp 0x1a00
0x1e66: push 0x45
0x1e6b: jmp 0x1a00
0x1e76: push 0x46
0x1e7b: jmp 0x1a00
0x1e86: push 0x47
0x1e8b: jmp 0x1a00
0x1e96: push 0x48
0x1e9b: jmp 0x1a00
0x1ea0: jmp qword ptr [rip + 0x20f142]
0x28a7: nop word ptr [rax + rax]
0x28ea: nop word ptr [rax + rax]
0x2b50: jmp 0x25fe
0x2bb1: nop dword ptr [rax]
0x2c0d: nop dword ptr [rax]
0x2c82: mov esi,dword ptr [rip + 0x20e704]
0x2c88: test esi,0x100
0x2c8e: je 0x37a5
0x2c94: cmp dword ptr [rip + 0x20e381],1
0x2c9b: je 0x2ca2
0x2c9d: call 0x4770
0x2d16: mov byte ptr [rip + 0x20e61f],0
0x2d1d: mov dword ptr [rip + 0x20e611],0x1d
0x2d27: mov dword ptr [rsp + 0x18],1
0x2ea2: jmp 0x2d16
0x2eff: mov dword ptr [rsp + 0x18],1
0x30b7: jmp 0x2cd7
0x32dc: mov dword ptr [rsp + 0x18],1
0x32e4: jmp 0x2f4e
0x34b3: mov dword ptr [rsp + 0x18],1
0x34bb: jmp 0x327c
0x3575: jmp 0x3069
0x3762: jmp 0x2eff
0x37a5: mov dword ptr [rsp + 0x18],1
0x37ad: jmp 0x3142
0x3914: mov dword ptr [rsp + 0x18],1
0x391c: jmp 0x36a5
0x3950: mov edi,1
0x3955: call 0x5030
0x3997: call 0x4c00
0x399c: mov edi,1
0x39a1: call 0x1e10
0x3bbd: mov edi,1
0x3bc2: call 0x5030
0x3bc7: call 0x1b90
0x3c7f: nop 
0x3caa: hlt 
0x3cab: nop dword ptr [rax + rax]
0x3cb0: lea rdi,[rip + 0x20d3f1]
0x3cb7: push rbp
0x3cb8: lea rax,[rip + 0x20d3e9]
0x3cbf: cmp rax,rdi
0x3cc2: mov rbp,rsp
0x3cc5: je 0x3ce0
0x3cc7: mov rax,qword ptr [rip + 0x20d2fa]
0x3cce: test rax,rax
0x3cd1: je 0x3ce0
0x3cd3: pop rbp
0x3cd4: jmp rax
0x3cd6: nop word ptr cs:[rax + rax]
0x3ce0: pop rbp
0x3ce1: ret 
0x3ce2: nop dword ptr [rax]
0x3ce6: nop word ptr cs:[rax + rax]
0x3cf0: lea rdi,[rip + 0x20d3b1]
0x3cf7: lea rsi,[rip + 0x20d3aa]
0x3cfe: push rbp
0x3cff: sub rsi,rdi
0x3d02: mov rbp,rsp
0x3d05: sar rsi,3
0x3d09: mov rax,rsi
0x3d0c: shr rax,0x3f
0x3d10: add rsi,rax
0x3d13: sar rsi,1
0x3d16: je 0x3d30
0x3d18: mov rax,qword ptr [rip + 0x20d2c1]
0x3d1f: test rax,rax
0x3d22: je 0x3d30
0x3d24: pop rbp
0x3d25: jmp rax
0x3d27: nop word ptr [rax + rax]
0x3d30: pop rbp
0x3d31: ret 
0x3d32: nop dword ptr [rax]
0x3d36: nop word ptr cs:[rax + rax]
0x3d40: cmp byte ptr [rip + 0x20d3c1],0
0x3d47: jne 0x3d78
0x3d49: cmp qword ptr [rip + 0x20d297],0
0x3d51: push rbp
0x3d52: mov rbp,rsp
0x3d55: je 0x3d63
0x3d57: mov rdi,qword ptr [rip + 0x20d2aa]
0x3d5e: call 0x1ea0
0x3d63: call 0x3cb0
0x3d68: mov byte ptr [rip + 0x20d399],1
0x3d6f: pop rbp
0x3d70: ret 
0x3d71: nop dword ptr [rax]
0x3d78: ret 
0x3d7a: nop word ptr [rax + rax]
0x3d80: push rbp
0x3d81: mov rbp,rsp
0x3d84: pop rbp
0x3d85: jmp 0x3cf0
0x3d8a: nop word ptr [rax + rax]
0x3d90: mov dword ptr [rip + 0x20d4da],edi
0x3d96: ret 
0x3d97: nop word ptr [rax + rax]
0x3da0: mov eax,dword ptr [rip + 0x20d4c6]
0x3da6: add eax,1
0x3da9: mov dword ptr [rip + 0x20d4bd],eax
0x3daf: ret 
0x3f85: nop dword ptr [rax]
0x4005: nop dword ptr [rax]
0x402d: nop dword ptr [rax]
0x403d: nop dword ptr [rax]
0x405b: nop dword ptr [rax + rax]
0x40ab: nop dword ptr [rax + rax]
0x40d1: nop dword ptr [rax]
0x410a: jmp 0x3f5c
0x410f: nop 
0x4120: lea r8,[rip + 0x84dd]
0x4127: movsd xmm0,qword ptr [rsp + 8]
0x412d: jmp 0x3eaf
0x4132: call 0x1b90
0x4137: nop word ptr [rax + rax]
0x4160: movaps xmmword ptr [rsp + 0x60],xmm0
0x4165: movaps xmmword ptr [rsp + 0x70],xmm1
0x416a: movaps xmmword ptr [rsp + 0x80],xmm2
0x4172: movaps xmmword ptr [rsp + 0x90],xmm3
0x417a: movaps xmmword ptr [rsp + 0xa0],xmm4
0x4182: movaps xmmword ptr [rsp + 0xb0],xmm5
0x418a: movaps xmmword ptr [rsp + 0xc0],xmm6
0x4192: movaps xmmword ptr [rsp + 0xd0],xmm7
0x420f: mov rax,qword ptr [rsp + 0x28]
0x4214: xor rax,qword ptr fs:[0x28]
0x421d: jne 0x4246
0x421f: add rsp,0xe8
0x4226: pop rbx
0x4227: pop rbp
0x4228: ret 
0x4229: nop dword ptr [rax]
0x423f: mov rdx,qword ptr [rsp + 8]
0x4244: jmp 0x41d0
0x4246: call 0x1b90
0x424b: nop dword ptr [rax + rax]
0x42ba: nop word ptr [rax + rax]
0x42d2: nop word ptr [rax + rax]
0x430e: nop 
0x4389: mov rax,qword ptr [rsp + 8]
0x438e: jmp 0x4338
0x4390: call 0x1b90
0x4395: nop 
0x4396: nop word ptr cs:[rax + rax]
0x44ab: call 0x1b90
0x459e: call 0x1b90
0x45a3: nop dword ptr [rax]
0x45a6: nop word ptr cs:[rax + rax]
0x460a: nop word ptr [rax + rax]
0x4648: nop dword ptr [rax + rax]
0x4664: nop dword ptr [rax]
0x466f: nop 
0x46e7: nop word ptr [rax + rax]
0x46fa: nop word ptr [rax + rax]
0x4705: nop dword ptr [rax]
0x4728: nop dword ptr [rax + rax]
0x4730: cmp byte ptr [rip + 0x20c8e1],0
0x4737: jne 0x4758
0x4739: sub rsp,8
0x473d: mov rdi,qword ptr [rip + 0x20c9bc]
0x4744: call 0x5db0
0x4749: test eax,eax
0x474b: jne 0x475d
0x474d: add rsp,8
0x4751: ret 
0x4752: nop word ptr [rax + rax]
0x4758: jmp 0x5e50
0x475d: mov edi,1
0x4762: call 0x1ac0
0x4767: nop word ptr [rax + rax]
0x482a: nop word ptr [rax + rax]
0x483b: nop dword ptr [rax + rax]
0x4879: nop dword ptr [rax]
0x488a: jmp 0x47a4
0x488f: nop 
0x493c: nop dword ptr [rax]
0x49c1: nop dword ptr [rax]
0x49e2: jmp 0x4960
0x49e7: nop word ptr [rax + rax]
0x4a0d: call 0x1b90
0x4a12: nop dword ptr [rax]
0x4a16: nop word ptr cs:[rax + rax]
0x4a35: nop dword ptr [rax]
0x4a68: nop dword ptr [rax + rax]
0x4a85: nop dword ptr [rax]
0x4af9: nop dword ptr [rax]
0x4b15: mov r12,qword ptr [rip + 0x20c61c]
0x4b1c: test r12,r12
0x4b1f: jle 0x4ae4
0x4b21: cmp r12,rbp
0x4b24: jae 0x4ae4
0x4b26: cmp dword ptr [rip + 0x20c4ef],1
0x4b2d: je 0x4b5e
0x4b2f: lea rdx,[rip + 0x7f5a]
0x4b36: lea rsi,[rip + 0x7f93]
0x4b3d: mov rcx,r12
0x4b40: xor edi,edi
0x4b42: mov r8d,5
0x4b48: call 0x1dd0
0x4b4d: mov rcx,r12
0x4b50: mov rdx,rax
0x4b53: xor esi,esi
0x4b55: xor edi,edi
0x4b57: xor eax,eax
0x4b59: call 0x4140
0x4b5e: mov byte ptr [rip + 0x20c7c3],0
0x4b65: jmp 0x4ae4
0x4b74: nop dword ptr [rax]
0x4b85: nop 
0x4b86: nop word ptr cs:[rax + rax]
0x4bad: nop dword ptr [rax]
0x4bdb: nop dword ptr [rax + rax]
0x4bf1: nop dword ptr [rax + rax]
0x4bf6: nop word ptr cs:[rax + rax]
0x4cd5: call 0x1b90
0x4cda: nop word ptr [rax + rax]
0x4d95: call 0x1b90
0x4d9a: nop word ptr [rax + rax]
0x4db5: cmp qword ptr [rip + 0x20c55b],0
0x4dbd: je 0x4dd3
0x4dbf: mov rax,qword ptr [rip + 0x20c552]
0x4dc6: mov qword ptr [rip + 0x20c543],rax
0x4dcd: ret 
0x4dd3: sub rsp,8
0x4dd7: call 0x4c20
0x4ddc: mov rax,qword ptr [rip + 0x20c535]
0x4de3: mov qword ptr [rip + 0x20c526],rax
0x4dea: pop rax
0x4deb: ret 
0x4dec: nop dword ptr [rax]
0x4dfb: nop dword ptr [rax + rax]
0x4e2b: nop dword ptr [rax + rax]
0x4e62: nop word ptr [rax + rax]
0x4f3a: nop word ptr [rax + rax]
0x4f53: nop dword ptr [rax + rax]
0x4f68: nop dword ptr [rax + rax]
0x4f8b: nop dword ptr [rax + rax]
0x5028: jmp 0x4fc4
0x502a: nop word ptr [rax + rax]
0x563a: nop word ptr [rax + rax]
0x570b: mov edi,1
0x5710: call 0x5030
0x572c: nop dword ptr [rax]
0x58a7: nop word ptr [rax + rax]
0x59d8: test byte ptr [rip + 0x20b9ae],1
0x59df: je 0x59ef
0x59e1: cmp dword ptr [rip + 0x20b634],1
0x59e8: je 0x59ef
0x59ea: call 0x4770
0x59ef: call 0x4c00
0x59f4: mov edi,1
0x59f9: call 0x1e10
0x5a37: jmp 0x59ef
0x5a40: call 0x1b90
0x5a7e: nop 
0x5b02: test rbx,rbx
0x5b05: je 0x5b0f
0x5b07: add qword ptr [rip + 0x20b869],1
0x5b0f: call 0x4c00
0x5b14: mov edi,1
0x5b19: call 0x1e10
0x5b1e: nop 
0x5b36: nop word ptr cs:[rax + rax]
0x5c01: nop dword ptr [rax]
0x5c15: nop dword ptr [rax]
0x5c29: nop dword ptr [rax]
0x5c32: nop dword ptr [rax]
0x5c36: nop word ptr cs:[rax + rax]
0x5c5d: nop dword ptr [rax]
0x5d0e: nop 
0x5da5: nop dword ptr [rax]
0x5daa: nop word ptr [rax + rax]
0x5db0: push r12
0x5db2: push rbp
0x5db3: mov rbp,rdi
0x5db6: push rbx
0x5db7: call 0x1ad0
0x5dbc: mov ebx,dword ptr [rbp]
0x5dbf: mov rdi,rbp
0x5dc2: mov r12,rax
0x5dc5: call 0x9c70
0x5dca: and ebx,0x20
0x5dcd: test ebx,ebx
0x5dcf: jne 0x5de8
0x5dd1: test eax,eax
0x5dd3: je 0x5ddf
0x5dd5: test r12,r12
0x5dd8: mov eax,0xffffffff
0x5ddd: je 0x5e18
0x5ddf: pop rbx
0x5de0: pop rbp
0x5de1: pop r12
0x5de3: ret 
0x5de4: nop dword ptr [rax]
0x5de8: test eax,eax
0x5dea: jne 0x5e08
0x5dec: call 0x1a80
0x5df1: mov dword ptr [rax],0
0x5df7: mov eax,0xffffffff
0x5dfc: pop rbx
0x5dfd: pop rbp
0x5dfe: pop r12
0x5e00: ret 
0x5e01: nop dword ptr [rax]
0x5e08: pop rbx
0x5e09: mov eax,0xffffffff
0x5e0e: pop rbp
0x5e0f: pop r12
0x5e11: ret 
0x5e12: nop word ptr [rax + rax]
0x5e18: call 0x1a80
0x5e1d: cmp dword ptr [rax],9
0x5e20: pop rbx
0x5e21: pop rbp
0x5e22: pop r12
0x5e24: setne al
0x5e27: movzx eax,al
0x5e2a: neg eax
0x5e2c: ret 
0x5e2d: nop dword ptr [rax]
0x5e30: mov qword ptr [rip + 0x20b5c1],rdi
0x5e37: ret 
0x5e38: nop dword ptr [rax + rax]
0x5e40: mov byte ptr [rip + 0x20b5a9],dil
0x5e47: ret 
0x5e48: nop dword ptr [rax + rax]
0x5e50: push rbp
0x5e51: push rbx
0x5e52: sub rsp,8
0x5e56: mov rdi,qword ptr [rip + 0x20b26b]
0x5e5d: call 0x5db0
0x5e62: test eax,eax
0x5e64: je 0x5e7c
0x5e66: call 0x1a80
0x5e6b: cmp byte ptr [rip + 0x20b57e],0
0x5e72: mov rbx,rax
0x5e75: je 0x5e93
0x5e77: cmp dword ptr [rax],0x20
0x5e7a: jne 0x5e93
0x5e7c: mov rdi,qword ptr [rip + 0x20b27d]
0x5e83: call 0x5db0
0x5e88: test eax,eax
0x5e8a: jne 0x5ed2
0x5e8c: add rsp,8
0x5e90: pop rbx
0x5e91: pop rbp
0x5e92: ret 
0x5e93: lea rsi,[rip + 0x82e3]
0x5e9a: xor edi,edi
0x5e9c: mov edx,5
0x5ea1: call 0x1b60
0x5ea6: mov rdi,qword ptr [rip + 0x20b54b]
0x5ead: mov rbp,rax
0x5eb0: test rdi,rdi
0x5eb3: je 0x5edd
0x5eb5: call 0x8ab0
0x5eba: mov esi,dword ptr [rbx]
0x5ebc: lea rdx,[rip + 0x68dc]
0x5ec3: mov rcx,rax
0x5ec6: mov r8,rbp
0x5ec9: xor edi,edi
0x5ecb: xor eax,eax
0x5ecd: call 0x1d90
0x5ed2: mov edi,dword ptr [rip + 0x20b158]
0x5ed8: call 0x1ac0
0x5edd: mov esi,dword ptr [rbx]
0x5edf: lea rdx,[rip + 0x6786]
0x5ee6: mov rcx,rax
0x5ee9: xor edi,edi
0x5eeb: xor eax,eax
0x5eed: call 0x1d90
0x5ef2: jmp 0x5ed2
0x5ef4: nop word ptr cs:[rax + rax]
0x5efe: nop 
0x5f56: nop word ptr cs:[rax + rax]
0x5fe5: call 0x1b90
0x5fea: nop word ptr [rax + rax]
0x5ffa: nop word ptr [rax + rax]
0x6000: sub rsp,0x28
0x6004: xor edi,edi
0x6006: mov rsi,rsp
0x6009: mov rax,qword ptr fs:[0x28]
0x6012: mov qword ptr [rsp + 0x18],rax
0x6017: xor eax,eax
0x6019: call 0x1b10
0x601e: mov rcx,qword ptr [rsp + 0x18]
0x6023: xor rcx,qword ptr fs:[0x28]
0x602c: mov rax,qword ptr [rsp]
0x6030: mov rdx,qword ptr [rsp + 8]
0x6035: jne 0x603c
0x6037: add rsp,0x28
0x603b: ret 
0x603c: call 0x1b90
0x6041: nop word ptr cs:[rax + rax]
0x604b: nop dword ptr [rax + rax]
0x60c4: nop dword ptr [rax]
0x60cc: nop dword ptr [rax]
0x6108: nop dword ptr [rax + rax]
0x6117: nop word ptr [rax + rax]
0x625e: nop 
0x627c: nop dword ptr [rax]
0x6333: nop dword ptr [rax + rax]
0x63b4: nop dword ptr [rax]
0x6412: nop word ptr [rax + rax]
0x646b: nop dword ptr [rax + rax]
0x6474: nop dword ptr [rax]
0x655b: nop dword ptr [rax + rax]
0x6582: nop word ptr [rax + rax]
0x65e2: nop word ptr [rax + rax]
0x6664: nop dword ptr [rax]
0x6684: nop dword ptr [rax]
0x66a8: nop dword ptr [rax + rax]
0x66c8: nop dword ptr [rax + rax]
0x67cb: nop dword ptr [rax + rax]
0x6807: nop word ptr [rax + rax]
0x68a4: nop dword ptr [rax]
0x68d6: nop word ptr cs:[rax + rax]
0x6904: nop dword ptr [rax]
0x6918: nop dword ptr [rax + rax]
0x692c: nop dword ptr [rax]
0x694e: nop 
0x6974: nop dword ptr [rax]
0x6a68: nop dword ptr [rax + rax]
0x6adb: call 0x1b90
0x6b27: nop word ptr [rax + rax]
0x6b30: push r13
0x6b32: push r12
0x6b34: mov r13,rsi
0x6b37: push rbp
0x6b38: push rbx
0x6b39: mov r12,rdx
0x6b3c: mov rbx,rdi
0x6b3f: sub rsp,0x18
0x6b43: mov rax,qword ptr fs:[0x28]
0x6b4c: mov qword ptr [rsp + 8],rax
0x6b51: xor eax,eax
0x6b53: test rdi,rdi
0x6b56: je 0x6c70
0x6b5c: xor ebp,ebp
0x6b5e: cmp byte ptr [rbx],0x27
0x6b61: jne 0x6b6c
0x6b63: add rbx,1
0x6b67: mov ebp,4
0x6b6c: lea rdx,[rip + 0x765d]
0x6b73: lea rsi,[rip + 0x209f26]
0x6b7a: mov ecx,4
0x6b7f: mov rdi,rbx
0x6b82: call 0xa130
0x6b87: test eax,eax
0x6b89: js 0x6bc8
0x6b8b: lea rdx,[rip + 0x763e]
0x6b92: cdqe 
0x6b94: mov qword ptr [r12],1
0x6b9c: or ebp,dword ptr [rdx + rax*4]
0x6b9f: xor eax,eax
0x6ba1: mov dword ptr [r13],ebp
0x6ba5: mov rcx,qword ptr [rsp + 8]
0x6baa: xor rcx,qword ptr fs:[0x28]
0x6bb3: jne 0x6d11
0x6bb9: add rsp,0x18
0x6bbd: pop rbx
0x6bbe: pop rbp
0x6bbf: pop r12
0x6bc1: pop r13
0x6bc3: ret 
0x6bc4: nop dword ptr [rax]
0x6bc8: lea r8,[rip + 0x75dd]
0x6bcf: xor edx,edx
0x6bd1: mov rsi,rsp
0x6bd4: mov rcx,r12
0x6bd7: mov rdi,rbx
0x6bda: call 0x9650
0x6bdf: test eax,eax
0x6be1: jne 0x6c28
0x6be3: movzx esi,byte ptr [rbx]
0x6be6: lea edx,[rsi - 0x30]
0x6be9: cmp dl,9
0x6bec: jbe 0x6c18
0x6bee: mov rcx,qword ptr [rsp]
0x6bf2: cmp rbx,rcx
0x6bf5: jne 0x6c09
0x6bf7: jmp 0x6cd0
0x6bfc: nop dword ptr [rax]
0x6c00: cmp rbx,rcx
0x6c03: je 0x6cd0
0x6c09: add rbx,1
0x6c0d: movzx edi,byte ptr [rbx]
0x6c10: lea edx,[rdi - 0x30]
0x6c13: cmp dl,9
0x6c16: ja 0x6c00
0x6c18: mov rdx,qword ptr [r12]
0x6c1c: mov dword ptr [r13],ebp
0x6c20: jmp 0x6c34
0x6c22: nop word ptr [rax + rax]
0x6c28: mov rdx,qword ptr [r12]
0x6c2c: mov dword ptr [r13],0
0x6c34: test rdx,rdx
0x6c37: jne 0x6ba5
0x6c3d: lea rdi,[rip + 0x5bf8]
0x6c44: call 0x1a20
0x6c49: cmp rax,1
0x6c4d: sbb rax,rax
0x6c50: and eax,0x200
0x6c55: add rax,0x200
0x6c5b: mov qword ptr [r12],rax
0x6c5f: mov eax,4
0x6c64: jmp 0x6ba5
0x6c69: nop dword ptr [rax]
0x6c70: lea rdi,[rip + 0x7520]
0x6c77: call 0x1a20
0x6c7c: test rax,rax
0x6c7f: mov rbx,rax
0x6c82: jne 0x6b5c
0x6c88: lea rdi,[rip + 0x7513]
0x6c8f: call 0x1a20
0x6c94: test rax,rax
0x6c97: mov rbx,rax
0x6c9a: jne 0x6b5c
0x6ca0: lea rdi,[rip + 0x5b95]
0x6ca7: call 0x1a20
0x6cac: test rax,rax
0x6caf: je 0x6cfa
0x6cb1: mov qword ptr [r12],0x200
0x6cb9: xor eax,eax
0x6cbb: mov dword ptr [r13],0
0x6cc3: jmp 0x6ba5
0x6cc8: nop dword ptr [rax + rax]
0x6cd0: cmp byte ptr [rcx - 1],0x42
0x6cd4: je 0x6ce8
0x6cd6: or bpl,0x80
0x6cda: or ebp,0x20
0x6cdd: jmp 0x6c18
0x6ce2: nop word ptr [rax + rax]
0x6ce8: or ebp,0x180
0x6cee: cmp byte ptr [rcx - 2],0x69
0x6cf2: jne 0x6c18
0x6cf8: jmp 0x6cda
0x6cfa: mov qword ptr [r12],0x400
0x6d02: xor eax,eax
0x6d04: mov dword ptr [r13],0
0x6d0c: jmp 0x6ba5
0x6d11: call 0x1b90
0x6d16: nop word ptr cs:[rax + rax]
0x6d20: push r13
0x6d22: push r12
0x6d24: mov r13,r8
0x6d27: push rbp
0x6d28: push rbx
0x6d29: mov rbp,rdx
0x6d2c: mov r12,rcx
0x6d2f: sub rsp,0xe8
0x6d36: test al,al
0x6d38: je 0x6d74
0x6d3a: movaps xmmword ptr [rsp + 0x60],xmm0
0x6d3f: movaps xmmword ptr [rsp + 0x70],xmm1
0x6d44: movaps xmmword ptr [rsp + 0x80],xmm2
0x6d4c: movaps xmmword ptr [rsp + 0x90],xmm3
0x6d54: movaps xmmword ptr [rsp + 0xa0],xmm4
0x6d5c: movaps xmmword ptr [rsp + 0xb0],xmm5
0x6d64: movaps xmmword ptr [rsp + 0xc0],xmm6
0x6d6c: movaps xmmword ptr [rsp + 0xd0],xmm7
0x6d74: mov rax,qword ptr fs:[0x28]
0x6d7d: mov qword ptr [rsp + 0x28],rax
0x6d82: xor eax,eax
0x6d84: cmp edi,2
0x6d87: mov ebx,dword ptr [rip + 0x20a353]
0x6d8d: mov dword ptr [rip + 0x20a349],0
0x6d97: je 0x6dd0
0x6d99: mov rax,qword ptr [rsp + 0x28]
0x6d9e: xor rax,qword ptr fs:[0x28]
0x6da7: mov dword ptr [rip + 0x20a333],ebx
0x6dad: mov dword ptr [rip + 0x20a319],0
0x6db7: jne 0x6e5a
0x6dbd: add rsp,0xe8
0x6dc4: pop rbx
0x6dc5: pop rbp
0x6dc6: pop r12
0x6dc8: pop r13
0x6dca: ret 
0x6dcb: nop dword ptr [rax + rax]
0x6dd0: lea rcx,[rip + 0x209ce9]
0x6dd7: lea rdx,[rip + 0x7422]
0x6dde: xor r8d,r8d
0x6de1: mov qword ptr [rsp + 8],r9
0x6de6: call 0x1ba0
0x6deb: cmp eax,-1
0x6dee: je 0x6d99
0x6df0: cmp eax,0x68
0x6df3: mov r9,qword ptr [rsp + 8]
0x6df8: je 0x6e50
0x6dfa: cmp eax,0x76
0x6dfd: jne 0x6d99
0x6dff: lea rax,[rsp + 0x110]
0x6e07: mov rdi,qword ptr [rip + 0x20a2ba]
0x6e0e: lea r8,[rsp + 0x10]
0x6e13: mov rcx,r13
0x6e16: mov rdx,r12
0x6e19: mov rsi,rbp
0x6e1c: mov qword ptr [rsp + 0x18],rax
0x6e21: lea rax,[rsp + 0x30]
0x6e26: mov dword ptr [rsp + 0x10],0x30
0x6e2e: mov dword ptr [rsp + 0x14],0x30
0x6e36: mov qword ptr [rsp + 0x20],rax
0x6e3b: call 0x91e0
0x6e40: xor edi,edi
0x6e42: call 0x1e10
0x6e47: nop word ptr [rax + rax]
0x6e50: xor edi,edi
0x6e52: call r9
0x6e55: jmp 0x6d99
0x6e5a: call 0x1b90
0x6e5f: nop 
0x6e84: movaps xmmword ptr [rsp + 0x50],xmm0
0x6e89: movaps xmmword ptr [rsp + 0x60],xmm1
0x6e8e: movaps xmmword ptr [rsp + 0x70],xmm2
0x6e93: movaps xmmword ptr [rsp + 0x80],xmm3
0x6e9b: movaps xmmword ptr [rsp + 0x90],xmm4
0x6ea3: movaps xmmword ptr [rsp + 0xa0],xmm5
0x6eab: movaps xmmword ptr [rsp + 0xb0],xmm6
0x6eb3: movaps xmmword ptr [rsp + 0xc0],xmm7
0x6f57: nop word ptr [rax + rax]
0x6f8e: nop 
0x6f94: jmp 0x6f68
0x6f96: call 0x1b90
0x6f9b: nop dword ptr [rax + rax]
0x703f: nop 
0x707c: nop dword ptr [rax]
0x70cd: nop dword ptr [rax]
0x7127: nop word ptr [rax + rax]
0x73e7: nop word ptr [rax + rax]
0x741e: nop 
0x7441: nop dword ptr [rax]
0x746b: mov ebx,edx
0x746d: xor r12d,r12d
0x7470: xor eax,eax
0x7482: nop word ptr [rax + rax]
0x7494: nop dword ptr [rax]
0x74b9: cmp qword ptr [rsp + 0x18],0
0x74bf: jne 0x787b
0x74c5: mov ebx,0x5c
0x74ca: nop word ptr [rax + rax]
0x7538: nop dword ptr [rax + rax]
0x754b: xor edx,edx
0x754d: test byte ptr [rsp + 0x78],1
0x7552: je 0x746b
0x7558: add rbp,1
0x755c: jmp 0x7218
0x7561: nop dword ptr [rax]
0x7577: nop word ptr [rax + rax]
0x758f: nop 
0x75ae: mov rbp,r11
0x75b1: mov dword ptr [rsp + 8],2
0x75b9: jmp 0x7cb9
0x75be: nop 
0x75cd: nop dword ptr [rax]
0x75df: nop 
0x75ef: nop 
0x75ff: nop 
0x760f: nop 
0x761f: nop 
0x768c: nop dword ptr [rax]
0x76ac: nop dword ptr [rax]
0x76be: nop 
0x76cf: nop 
0x76e2: nop word ptr [rax + rax]
0x76fa: nop word ptr [rax + rax]
0x770a: nop word ptr [rax + rax]
0x77ab: nop dword ptr [rax + rax]
0x77c5: nop dword ptr [rax]
0x77d8: nop dword ptr [rax + rax]
0x77f3: nop dword ptr [rax + rax]
0x7822: nop word ptr [rax + rax]
0x7832: nop word ptr [rax + rax]
0x784a: nop word ptr [rax + rax]
0x785a: nop word ptr [rax + rax]
0x7868: nop dword ptr [rax + rax]
0x788f: nop 
0x7929: nop dword ptr [rax]
0x7972: nop word ptr [rax + rax]
0x79b1: nop dword ptr [rax]
0x79d2: nop word ptr [rax + rax]
0x7b38: nop dword ptr [rax + rax]
0x7c4b: nop dword ptr [rax + rax]
0x7c50: cmp r15,1
0x7c54: je 0x7ab9
0x7c5a: mov rdi,qword ptr [rsp + 0x10]
0x7c5f: lea rcx,[rdi + r15]
0x7c63: lea rdx,[rdi + r14 + 1]
0x7c68: lea r8,[rcx + r14]
0x7c6c: jmp 0x7c7d
0x7c6e: nop 
0x7c70: add rdx,1
0x7c74: cmp r8,rdx
0x7c77: je 0x7ab9
0x7c7d: movzx ecx,byte ptr [rdx]
0x7c80: sub ecx,0x5b
0x7c83: cmp cl,0x21
0x7c86: ja 0x7c70
0x7c88: mov esi,1
0x7c8d: shl rsi,cl
0x7c90: mov rcx,rsi
0x7c93: movabs rsi,0x20000002b
0x7c9d: test rcx,rsi
0x7ca0: je 0x7c70
0x7ca2: mov r14,qword ptr [rsp + 0x40]
0x7ca7: mov r13,qword ptr [rsp + 0x70]
0x7cac: mov rbp,qword ptr [rsp + 0x30]
0x7cb1: mov dword ptr [rsp + 8],2
0x7cb9: cmp byte ptr [rsp + 0xd],0
0x7cbe: je 0x7cd0
0x7cc0: test al,al
0x7cc2: mov eax,4
0x7cc7: cmove eax,dword ptr [rsp + 8]
0x7ccc: mov dword ptr [rsp + 8],eax
0x7cd0: sub rsp,8
0x7cd4: mov rcx,rbp
0x7cd7: mov rsi,r13
0x7cda: push qword ptr [rsp + 0x68]
0x7cde: push qword ptr [rsp + 0x78]
0x7ce2: mov rdi,r14
0x7ce5: push 0
0x7ce7: mov r9d,dword ptr [rsp + 0x98]
0x7cef: mov r8d,dword ptr [rsp + 0x28]
0x7cf4: mov rdx,qword ptr [rsp + 0x30]
0x7cf9: and r9d,0xfffffffd
0x7cfd: call 0x7130
0x7d02: add rsp,0x20
0x7d06: mov r15,rax
0x7d35: nop dword ptr [rax]
0x7d38: mov rbp,r11
0x7d3b: jmp 0x7cb9
0x7ded: nop dword ptr [rax]
0x7ff6: nop word ptr cs:[rax + rax]
0x8000: movzx ebx,byte ptr [rsp + 0xf]
0x8005: mov rbp,r11
0x8008: mov byte ptr [rsp + 0xd],bl
0x800c: jmp 0x7cb9
0x8089: nop dword ptr [rax]
0x81dd: nop dword ptr [rax]
0x81e0: mov rbp,r11
0x81e3: movzx eax,byte ptr [rsp + 0xf]
0x81e8: jmp 0x7cb9
0x8275: cmp dword ptr [rsp + 8],2
0x827a: movzx ebx,byte ptr [rsp + 0xf]
0x827f: mov rbp,r11
0x8282: sete al
0x8285: mov byte ptr [rsp + 0xd],bl
0x8289: jmp 0x7cb9
0x82ba: movzx ebx,byte ptr [rsp + 0xf]
0x82bf: mov rbp,r11
0x82c2: mov eax,edx
0x82c4: mov byte ptr [rsp + 0xd],bl
0x82c8: jmp 0x7cb9
0x8316: mov dword ptr [rsp + 8],2
0x831e: jmp 0x7cb9
0x8323: call 0x1b90
0x8332: mov rbp,r11
0x8335: jmp 0x7cd0
0x8364: nop 
0x8366: nop word ptr cs:[rax + rax]
0x84eb: nop dword ptr [rax + rax]
0x851b: nop dword ptr [rax + rax]
0x8520: push r12
0x8522: push rbp
0x8523: push rbx
0x8524: mov rbx,rdi
0x8527: call 0x1a80
0x852c: mov r12d,dword ptr [rax]
0x852f: mov rbp,rax
0x8532: lea rax,[rip + 0x208fe7]
0x8539: test rbx,rbx
0x853c: mov esi,0x38
0x8541: cmove rbx,rax
0x8545: mov rdi,rbx
0x8548: call 0x95c0
0x854d: mov dword ptr [rbp],r12d
0x8551: pop rbx
0x8552: pop rbp
0x8553: pop r12
0x8555: ret 
0x8556: nop word ptr cs:[rax + rax]
0x8560: lea rax,[rip + 0x208fb9]
0x8567: test rdi,rdi
0x856a: cmove rdi,rax
0x856e: mov eax,dword ptr [rdi]
0x8570: ret 
0x8571: nop dword ptr [rax + rax]
0x8576: nop word ptr cs:[rax + rax]
0x8580: lea rax,[rip + 0x208f99]
0x8587: test rdi,rdi
0x858a: cmove rdi,rax
0x858e: mov dword ptr [rdi],esi
0x8590: ret 
0x8591: nop dword ptr [rax + rax]
0x8596: nop word ptr cs:[rax + rax]
0x85a0: lea rax,[rip + 0x208f79]
0x85a7: test rdi,rdi
0x85aa: mov ecx,esi
0x85ac: cmove rdi,rax
0x85b0: mov eax,esi
0x85b2: and ecx,0x1f
0x85b5: shr al,5
0x85b8: movzx eax,al
0x85bb: lea rdi,[rdi + rax*4 + 8]
0x85c0: mov esi,dword ptr [rdi]
0x85c2: mov eax,esi
0x85c4: shr eax,cl
0x85c6: xor edx,eax
0x85c8: and eax,1
0x85cb: and edx,1
0x85ce: shl edx,cl
0x85d0: xor edx,esi
0x85d2: mov dword ptr [rdi],edx
0x85d4: ret 
0x85d5: nop 
0x85d6: nop word ptr cs:[rax + rax]
0x85e0: lea rax,[rip + 0x208f39]
0x85e7: test rdi,rdi
0x85ea: cmove rdi,rax
0x85ee: mov eax,dword ptr [rdi + 4]
0x85f1: mov dword ptr [rdi + 4],esi
0x85f4: ret 
0x85f5: nop 
0x85f6: nop word ptr cs:[rax + rax]
0x8600: lea rax,[rip + 0x208f19]
0x8607: test rdi,rdi
0x860a: cmove rdi,rax
0x860e: test rsi,rsi
0x8611: mov dword ptr [rdi],0xa
0x8617: je 0x8627
0x8619: test rdx,rdx
0x861c: je 0x8627
0x861e: mov qword ptr [rdi + 0x28],rsi
0x8622: mov qword ptr [rdi + 0x30],rdx
0x8626: ret 
0x8627: sub rsp,8
0x862b: call 0x1a70
0x8630: push r15
0x8632: push r14
0x8634: lea rax,[rip + 0x208ee5]
0x863b: push r13
0x863d: push r12
0x863f: mov r13,rdi
0x8642: push rbp
0x8643: push rbx
0x8644: mov rbx,r8
0x8647: mov r14,rsi
0x864a: mov r15,rdx
0x864d: sub rsp,0x18
0x8651: test r8,r8
0x8654: cmove rbx,rax
0x8658: mov qword ptr [rsp + 8],rcx
0x865d: call 0x1a80
0x8662: mov r12d,dword ptr [rax]
0x8665: mov rbp,rax
0x8668: lea rax,[rbx + 8]
0x866c: sub rsp,8
0x8670: mov r9d,dword ptr [rbx + 4]
0x8674: push qword ptr [rbx + 0x30]
0x8677: mov r8d,dword ptr [rbx]
0x867a: push qword ptr [rbx + 0x28]
0x867d: mov rdx,r15
0x8680: push rax
0x8681: mov rcx,qword ptr [rsp + 0x28]
0x8686: mov rsi,r14
0x8689: mov rdi,r13
0x868c: call 0x7130
0x8691: mov dword ptr [rbp],r12d
0x8695: add rsp,0x38
0x8699: pop rbx
0x869a: pop rbp
0x869b: pop r12
0x869d: pop r13
0x869f: pop r14
0x86a1: pop r15
0x86a3: ret 
0x86a4: nop 
0x86a6: nop word ptr cs:[rax + rax]
0x86b0: push r15
0x86b2: push r14
0x86b4: lea rax,[rip + 0x208e65]
0x86bb: push r13
0x86bd: push r12
0x86bf: mov r12,rdx
0x86c2: push rbp
0x86c3: push rbx
0x86c4: mov rbx,rcx
0x86c7: mov r14,rdi
0x86ca: mov r15,rsi
0x86cd: sub rsp,0x38
0x86d1: test rcx,rcx
0x86d4: cmove rbx,rax
0x86d8: xor ebp,ebp
0x86da: call 0x1a80
0x86df: test r12,r12
0x86e2: mov r13,rax
0x86e5: mov eax,dword ptr [rax]
0x86e7: sete bpl
0x86eb: or ebp,dword ptr [rbx + 4]
0x86ee: lea r10,[rbx + 8]
0x86f2: sub rsp,8
0x86f6: mov r8d,dword ptr [rbx]
0x86f9: mov rcx,r15
0x86fc: mov dword ptr [rsp + 0x14],eax
0x8700: push qword ptr [rbx + 0x30]
0x8703: mov rdx,r14
0x8706: push qword ptr [rbx + 0x28]
0x8709: push r10
0x870b: xor esi,esi
0x870d: mov r9d,ebp
0x8710: xor edi,edi
0x8712: mov qword ptr [rsp + 0x40],r10
0x8717: call 0x7130
0x871c: lea rsi,[rax + 1]
0x8720: mov qword ptr [rsp + 0x48],rax
0x8725: add rsp,0x20
0x8729: mov rdi,rsi
0x872c: mov qword ptr [rsp + 0x18],rsi
0x8731: call 0x93c0
0x8736: mov qword ptr [rsp + 0x10],rax
0x873b: sub rsp,8
0x873f: push qword ptr [rbx + 0x30]
0x8742: push qword ptr [rbx + 0x28]
0x8745: mov r10,qword ptr [rsp + 0x38]
0x874a: mov r9d,ebp
0x874d: mov r8d,dword ptr [rbx]
0x8750: mov rcx,r15
0x8753: mov rdx,r14
0x8756: mov rdi,rax
0x8759: push r10
0x875b: mov rsi,qword ptr [rsp + 0x38]
0x8760: call 0x7130
0x8765: mov eax,dword ptr [rsp + 0x2c]
0x8769: add rsp,0x20
0x876d: test r12,r12
0x8770: mov dword ptr [r13],eax
0x8774: je 0x877f
0x8776: mov r11,qword ptr [rsp + 0x28]
0x877b: mov qword ptr [r12],r11
0x877f: mov rax,qword ptr [rsp + 0x10]
0x8784: add rsp,0x38
0x8788: pop rbx
0x8789: pop rbp
0x878a: pop r12
0x878c: pop r13
0x878e: pop r14
0x8790: pop r15
0x8792: ret 
0x8793: nop dword ptr [rax]
0x8796: nop word ptr cs:[rax + rax]
0x87a0: mov rcx,rdx
0x87a3: xor edx,edx
0x87a5: jmp 0x86b0
0x87aa: nop word ptr [rax + rax]
0x87b0: mov eax,dword ptr [rip + 0x2088c2]
0x87b6: push r12
0x87b8: mov r12,qword ptr [rip + 0x2088c1]
0x87bf: push rbp
0x87c0: push rbx
0x87c1: cmp eax,1
0x87c4: jle 0x87f1
0x87c6: sub eax,2
0x87c9: lea rbx,[r12 + 0x18]
0x87ce: shl rax,4
0x87d2: lea rbp,[r12 + rax + 0x28]
0x87d7: nop word ptr [rax + rax]
0x87e0: mov rdi,qword ptr [rbx]
0x87e3: add rbx,0x10
0x87e7: call 0x1a60
0x87ec: cmp rbx,rbp
0x87ef: jne 0x87e0
0x87f1: mov rdi,qword ptr [r12 + 8]
0x87f6: lea rbx,[rip + 0x208c23]
0x87fd: cmp rdi,rbx
0x8800: je 0x8819
0x8802: call 0x1a60
0x8807: mov qword ptr [rip + 0x20887e],0x100
0x8812: mov qword ptr [rip + 0x20887f],rbx
0x8819: lea rbx,[rip + 0x208870]
0x8820: cmp r12,rbx
0x8823: je 0x8834
0x8825: mov rdi,r12
0x8828: call 0x1a60
0x882d: mov qword ptr [rip + 0x20884c],rbx
0x8834: pop rbx
0x8835: mov dword ptr [rip + 0x208839],1
0x883f: pop rbp
0x8840: pop r12
0x8842: ret 
0x8843: nop dword ptr [rax]
0x8846: nop word ptr cs:[rax + rax]
0x8850: lea rcx,[rip + 0x208cc9]
0x8857: mov rdx,-1
0x885e: jmp 0x8370
0x8863: nop dword ptr [rax]
0x8866: nop word ptr cs:[rax + rax]
0x8870: lea rcx,[rip + 0x208ca9]
0x8877: jmp 0x8370
0x887c: nop dword ptr [rax]
0x8880: lea rcx,[rip + 0x208c99]
0x8887: mov rsi,rdi
0x888a: mov rdx,-1
0x8891: xor edi,edi
0x8893: jmp 0x8370
0x8898: nop dword ptr [rax + rax]
0x88a0: lea rcx,[rip + 0x208c79]
0x88a7: mov rdx,rsi
0x88aa: mov rsi,rdi
0x88ad: xor edi,edi
0x88af: jmp 0x8370
0x88b4: nop 
0x88b6: nop word ptr cs:[rax + rax]
0x8944: call 0x1a70
0x8949: call 0x1b90
0x894e: nop 
0x89d0: call 0x1a70
0x89d5: call 0x1b90
0x89da: nop word ptr [rax + rax]
0x89ec: nop dword ptr [rax]
0x89f0: mov rcx,rdx
0x89f3: mov rdx,rsi
0x89f6: mov esi,edi
0x89f8: xor edi,edi
0x89fa: jmp 0x8950
0x89ff: nop 
0x8a00: sub rsp,0x48
0x8a04: mov ecx,edx
0x8a06: mov rax,qword ptr fs:[0x28]
0x8a0f: mov qword ptr [rsp + 0x38],rax
0x8a14: xor eax,eax
0x8a16: mov rax,qword ptr [rip + 0x208b33]
0x8a1d: mov r8,rsp
0x8a20: and ecx,0x1f
0x8a23: movdqa xmm0,xmmword ptr [rip + 0x208af5]
0x8a2b: mov qword ptr [rsp + 0x30],rax
0x8a30: mov eax,edx
0x8a32: movaps xmmword ptr [rsp],xmm0
0x8a36: shr al,5
0x8a39: movzx eax,al
0x8a3c: lea r9,[r8 + rax*4 + 8]
0x8a41: movdqa xmm0,xmmword ptr [rip + 0x208ae7]
0x8a49: movaps xmmword ptr [rsp + 0x10],xmm0
0x8a4e: movdqa xmm0,xmmword ptr [rip + 0x208aea]
0x8a56: movaps xmmword ptr [rsp + 0x20],xmm0
0x8a5b: mov edx,dword ptr [r9]
0x8a5e: mov eax,edx
0x8a60: shr eax,cl
0x8a62: not eax
0x8a64: and eax,1
0x8a67: shl eax,cl
0x8a69: mov rcx,r8
0x8a6c: xor eax,edx
0x8a6e: mov rdx,rsi
0x8a71: mov rsi,rdi
0x8a74: mov dword ptr [r9],eax
0x8a77: xor edi,edi
0x8a79: call 0x8370
0x8a7e: mov rsi,qword ptr [rsp + 0x38]
0x8a83: xor rsi,qword ptr fs:[0x28]
0x8a8c: jne 0x8a93
0x8a8e: add rsp,0x48
0x8a92: ret 
0x8a93: call 0x1b90
0x8a98: nop dword ptr [rax + rax]
0x8aa0: movsx edx,sil
0x8aa4: mov rsi,-1
0x8aab: jmp 0x8a00
0x8ab0: mov edx,0x3a
0x8ab5: mov rsi,-1
0x8abc: jmp 0x8a00
0x8ac1: nop dword ptr [rax + rax]
0x8ac6: nop word ptr cs:[rax + rax]
0x8ad0: mov edx,0x3a
0x8ad5: jmp 0x8a00
0x8ada: nop word ptr [rax + rax]
0x8b64: call 0x1a70
0x8b69: call 0x1b90
0x8b6e: nop 
0x8b70: sub rsp,0x48
0x8b74: mov r9,rcx
0x8b77: mov rcx,qword ptr [rip + 0x2089d2]
0x8b7e: movdqa xmm0,xmmword ptr [rip + 0x20899a]
0x8b86: mov rax,qword ptr fs:[0x28]
0x8b8f: mov qword ptr [rsp + 0x38],rax
0x8b94: xor eax,eax
0x8b96: movaps xmmword ptr [rsp],xmm0
0x8b9a: test rsi,rsi
0x8b9d: mov qword ptr [rsp + 0x30],rcx
0x8ba2: mov dword ptr [rsp],0xa
0x8ba9: movdqa xmm0,xmmword ptr [rip + 0x20897f]
0x8bb1: movaps xmmword ptr [rsp + 0x10],xmm0
0x8bb6: movdqa xmm0,xmmword ptr [rip + 0x208982]
0x8bbe: movaps xmmword ptr [rsp + 0x20],xmm0
0x8bc3: je 0x8bf7
0x8bc5: test rdx,rdx
0x8bc8: je 0x8bf7
0x8bca: mov qword ptr [rsp + 0x28],rsi
0x8bcf: mov qword ptr [rsp + 0x30],rdx
0x8bd4: mov rcx,rsp
0x8bd7: mov rdx,r8
0x8bda: mov rsi,r9
0x8bdd: call 0x8370
0x8be2: mov rdi,qword ptr [rsp + 0x38]
0x8be7: xor rdi,qword ptr fs:[0x28]
0x8bf0: jne 0x8bfc
0x8bf2: add rsp,0x48
0x8bf6: ret 
0x8bf7: call 0x1a70
0x8bfc: call 0x1b90
0x8c01: nop dword ptr [rax + rax]
0x8c06: nop word ptr cs:[rax + rax]
0x8c10: mov r8,-1
0x8c17: jmp 0x8b70
0x8c1c: nop dword ptr [rax]
0x8c20: mov rcx,rdx
0x8c23: mov r8,-1
0x8c2a: mov rdx,rsi
0x8c2d: mov rsi,rdi
0x8c30: xor edi,edi
0x8c32: jmp 0x8b70
0x8c37: nop word ptr [rax + rax]
0x8c40: mov r8,rcx
0x8c43: mov rcx,rdx
0x8c46: mov rdx,rsi
0x8c49: mov rsi,rdi
0x8c4c: xor edi,edi
0x8c4e: jmp 0x8b70
0x8c53: nop dword ptr [rax]
0x8c56: nop word ptr cs:[rax + rax]
0x8c60: lea rcx,[rip + 0x2083d9]
0x8c67: jmp 0x8370
0x8c6c: nop dword ptr [rax]
0x8c70: lea rcx,[rip + 0x2083c9]
0x8c77: mov rdx,rsi
0x8c7a: mov rsi,rdi
0x8c7d: xor edi,edi
0x8c7f: jmp 0x8370
0x8c84: nop 
0x8c86: nop word ptr cs:[rax + rax]
0x8ca3: nop dword ptr [rax]
0x8ca6: nop word ptr cs:[rax + rax]
0x8cc8: nop dword ptr [rax + rax]
0x8d19: mov rdi,rbx
0x8d1c: pop rbx
0x8d1d: pop rbp
0x8d1e: pop r12
0x8d20: pop r13
0x8d22: pop r14
0x8d24: jmp 0x1a60
0x8d29: nop dword ptr [rax]
0x8d47: mov rdi,rbx
0x8d4a: pop rbx
0x8d4b: pop rbp
0x8d4c: pop r12
0x8d4e: pop r13
0x8d50: pop r14
0x8d52: jmp 0x1a60
0x8d80: call 0x1a70
0x8d85: nop 
0x8d86: nop word ptr cs:[rax + rax]
0x8d9f: nop 
0x8e46: nop word ptr cs:[rax + rax]
0x8ed5: nop dword ptr [rax]
0x8ed8: mov r8,rcx
0x8edb: mov rcx,rdx
0x8ede: lea rdx,[rip + 0x586f]
0x8ee5: mov esi,1
0x8eea: xor eax,eax
0x8eec: call 0x1e30
0x8ef1: jmp 0x8ddc
0x8ef6: nop word ptr cs:[rax + rax]
0x8f55: nop dword ptr [rax]
0x8f91: nop dword ptr [rax]
0x8fd8: nop dword ptr [rax + rax]
0x9027: nop word ptr [rax + rax]
0x9084: nop dword ptr [rax]
0x90b2: nop word ptr [rax + rax]
0x9166: nop word ptr cs:[rax + rax]
0x91b7: nop word ptr [rax + rax]
0x91c0: xor r9d,r9d
0x91c3: cmp qword ptr [r8],0
0x91c7: je 0x91db
0x91c9: nop dword ptr [rax]
0x91d0: add r9,1
0x91d4: cmp qword ptr [r8 + r9*8],0
0x91d9: jne 0x91d0
0x91db: jmp 0x8da0
0x9208: mov r11d,eax
0x920b: add r11,qword ptr [r10 + 0x10]
0x920f: add eax,8
0x9212: mov dword ptr [r10],eax
0x9245: call 0x1b90
0x9258: nop dword ptr [rax + rax]
0x9260: push rbp
0x9261: push rbx
0x9262: mov r10d,0x20
0x9268: xor r11d,r11d
0x926b: sub rsp,0xb8
0x9272: mov rax,qword ptr fs:[0x28]
0x927b: mov qword ptr [rsp + 0x78],rax
0x9280: xor eax,eax
0x9282: lea rax,[rsp + 0xd0]
0x928a: mov qword ptr [rsp + 0xa0],r8
0x9292: lea rbx,[rsp + 0xd0]
0x929a: lea r8,[rsp + 0x20]
0x929f: mov qword ptr [rsp + 0xa8],r9
0x92a7: mov dword ptr [rsp + 8],0x20
0x92af: mov qword ptr [rsp + 0x10],rax
0x92b4: lea rax,[rsp + 0x80]
0x92bc: xor r9d,r9d
0x92bf: mov qword ptr [rsp + 0x18],rax
0x92c4: mov rbp,rax
0x92c7: nop word ptr [rax + rax]
0x92d0: cmp r10d,0x2f
0x92d4: ja 0x932c
0x92d6: mov eax,r10d
0x92d9: mov r11d,1
0x92df: add r10d,8
0x92e3: add rax,rbp
0x92e6: mov rax,qword ptr [rax]
0x92e9: test rax,rax
0x92ec: mov qword ptr [r8 + r9*8],rax
0x92f0: je 0x92fc
0x92f2: add r9,1
0x92f6: cmp r9,0xa
0x92fa: jne 0x92d0
0x92fc: test r11b,r11b
0x92ff: jne 0x9325
0x9301: call 0x8da0
0x9306: mov rax,qword ptr [rsp + 0x78]
0x930b: xor rax,qword ptr fs:[0x28]
0x9314: jne 0x9320
0x9316: add rsp,0xb8
0x931d: pop rbx
0x931e: pop rbp
0x931f: ret 
0x9320: call 0x1b90
0x9325: mov dword ptr [rsp + 8],r10d
0x932a: jmp 0x9301
0x932c: mov rax,rbx
0x932f: add rbx,8
0x9333: jmp 0x92e6
0x9335: nop 
0x9336: nop word ptr cs:[rax + rax]
0x9340: push rbx
0x9341: lea rsi,[rip + 0x545a]
0x9348: mov edx,5
0x934d: xor edi,edi
0x934f: call 0x1b60
0x9354: lea rdx,[rip + 0x545c]
0x935b: mov rsi,rax
0x935e: mov edi,1
0x9363: xor eax,eax
0x9365: call 0x1d70
0x936a: lea rsi,[rip + 0x545c]
0x9371: mov edx,5
0x9376: xor edi,edi
0x9378: call 0x1b60
0x937d: lea rcx,[rip + 0x455c]
0x9384: lea rdx,[rip + 0x33e7]
0x938b: mov rsi,rax
0x938e: mov edi,1
0x9393: xor eax,eax
0x9395: call 0x1d70
0x939a: mov rbx,qword ptr [rip + 0x207d27]
0x93a1: lea rsi,[rip + 0x5658]
0x93a8: xor edi,edi
0x93aa: mov edx,5
0x93af: call 0x1b60
0x93b4: mov rsi,rbx
0x93b7: mov rdi,rax
0x93ba: pop rbx
0x93bb: jmp 0x1ca0
0x93da: nop word ptr [rax + rax]
0x93e0: mov rax,rdi
0x93e3: mul rsi
0x93e6: mov rdi,rax
0x93e9: seto al
0x93ec: test rdi,rdi
0x93ef: js 0x93fb
0x93f1: movzx eax,al
0x93f4: test rax,rax
0x93f7: jne 0x93fb
0x93f9: jmp 0x93c0
0x93fb: sub rsp,8
0x93ff: call 0x9610
0x9404: nop 
0x9406: nop word ptr cs:[rax + rax]
0x9410: jmp 0x93c0
0x9412: nop dword ptr [rax]
0x9416: nop word ptr cs:[rax + rax]
0x9442: nop word ptr [rax + rax]
0x9456: nop word ptr cs:[rax + rax]
0x9460: mov rax,rsi
0x9463: mul rdx
0x9466: mov rsi,rax
0x9469: seto al
0x946c: test rsi,rsi
0x946f: js 0x947b
0x9471: movzx eax,al
0x9474: test rax,rax
0x9477: jne 0x947b
0x9479: jmp 0x9420
0x947b: sub rsp,8
0x947f: call 0x9610
0x9484: nop 
0x9486: nop word ptr cs:[rax + rax]
0x9490: test rdi,rdi
0x9493: mov r9,rdx
0x9496: mov rcx,qword ptr [rsi]
0x9499: je 0x94d0
0x949b: xor edx,edx
0x949d: movabs rax,0x5555555555555554
0x94a7: div r9
0x94aa: cmp rax,rcx
0x94ad: jbe 0x94eb
0x94af: mov rax,rcx
0x94b2: shr rax,1
0x94b5: lea rcx,[rax + rcx + 1]
0x94ba: mov qword ptr [rsi],rcx
0x94bd: imul rcx,r9
0x94c1: mov rsi,rcx
0x94c4: jmp 0x9420
0x94c9: nop dword ptr [rax]
0x94d0: test rcx,rcx
0x94d3: je 0x94f8
0x94d5: mov rax,rcx
0x94d8: mul r9
0x94db: seto dl
0x94de: test rax,rax
0x94e1: movzx edx,dl
0x94e4: js 0x94eb
0x94e6: test rdx,rdx
0x94e9: je 0x94ba
0x94eb: sub rsp,8
0x94ef: call 0x9610
0x94f4: nop dword ptr [rax]
0x94f8: xor edx,edx
0x94fa: mov eax,0x80
0x94ff: xor r8d,r8d
0x9502: div r9
0x9505: test rax,rax
0x9508: sete r8b
0x950c: lea rcx,[r8 + rax]
0x9510: jmp 0x94d5
0x9512: nop dword ptr [rax]
0x9516: nop word ptr cs:[rax + rax]
0x9520: test rdi,rdi
0x9523: mov rax,qword ptr [rsi]
0x9526: je 0x9550
0x9528: movabs rdx,0x5555555555555553
0x9532: cmp rax,rdx
0x9535: ja 0x9561
0x9537: mov rdx,rax
0x953a: shr rdx,1
0x953d: lea rax,[rdx + rax + 1]
0x9542: mov qword ptr [rsi],rax
0x9545: mov rsi,rax
0x9548: jmp 0x9420
0x954d: nop dword ptr [rax]
0x9550: test rax,rax
0x9553: mov edx,0x80
0x9558: cmove rax,rdx
0x955c: test rax,rax
0x955f: jns 0x9542
0x9561: sub rsp,8
0x9565: call 0x9610
0x956a: nop word ptr [rax + rax]
0x9570: push rbx
0x9571: mov rbx,rdi
0x9574: call 0x93c0
0x9579: mov rdx,rbx
0x957c: xor esi,esi
0x957e: mov rdi,rax
0x9581: pop rbx
0x9582: jmp 0x1c40
0x9587: nop word ptr [rax + rax]
0x9590: mov rax,rdi
0x9593: sub rsp,8
0x9597: mul rsi
0x959a: seto dl
0x959d: test rax,rax
0x95a0: js 0x95b9
0x95a2: movzx edx,dl
0x95a5: test rdx,rdx
0x95a8: jne 0x95b9
0x95aa: call 0x1cb0
0x95af: test rax,rax
0x95b2: je 0x95b9
0x95b4: add rsp,8
0x95b8: ret 
0x95b9: call 0x9610
0x95be: nop 
0x95c0: push rbp
0x95c1: push rbx
0x95c2: mov rbp,rdi
0x95c5: mov rdi,rsi
0x95c8: mov rbx,rsi
0x95cb: sub rsp,8
0x95cf: call 0x93c0
0x95d4: add rsp,8
0x95d8: mov rdx,rbx
0x95db: mov rsi,rbp
0x95de: pop rbx
0x95df: pop rbp
0x95e0: mov rdi,rax
0x95e3: jmp 0x1ce0
0x95e8: nop dword ptr [rax + rax]
0x95f0: push rbx
0x95f1: mov rbx,rdi
0x95f4: call 0x1b80
0x95f9: mov rdi,rbx
0x95fc: lea rsi,[rax + 1]
0x9600: pop rbx
0x9601: jmp 0x95c0
0x9603: nop word ptr cs:[rax + rax]
0x960d: nop dword ptr [rax]
0x9640: call 0x1a70
0x9645: nop word ptr cs:[rax + rax]
0x964f: nop 
0x96b6: nop word ptr cs:[rax + rax]
0x96f6: cmp eax,0x22
0x96f9: mov ebp,1
0x96fe: jne 0x9728
0x9713: nop dword ptr [rax + rax]
0x9722: nop word ptr [rax + rax]
0x9752: nop word ptr [rax + rax]
0x975c: nop dword ptr [rax]
0x97fb: nop dword ptr [rax + rax]
0x992c: nop dword ptr [rax]
0x99b3: nop dword ptr [rax + rax]
0x99d0: call 0x1b90
0x99d5: lea rcx,[rip + 0x5204]
0x99dc: lea rsi,[rip + 0x50dd]
0x99e3: lea rdi,[rip + 0x50f6]
0x99ea: mov edx,0x54
0x99ef: call 0x1c20
0x9a6c: nop dword ptr [rax]
0x9b4b: nop dword ptr [rax + rax]
0x9b85: call 0x1b90
0x9b8a: nop word ptr [rax + rax]
0x9bb3: nop dword ptr [rax]
0x9bb6: nop word ptr cs:[rax + rax]
0x9bec: nop dword ptr [rax]
0x9c11: nop dword ptr [rax]
0x9c43: nop dword ptr [rax + rax]
0x9c5a: call 0x1b90
0x9c64: nop word ptr cs:[rax + rax]
0x9c6e: nop 
0x9c70: push r12
0x9c72: push rbp
0x9c73: push rbx
0x9c74: mov rbx,rdi
0x9c77: call 0x1cf0
0x9c7c: test eax,eax
0x9c7e: mov rdi,rbx
0x9c81: js 0x9cd7
0x9c83: call 0x1d40
0x9c88: test eax,eax
0x9c8a: jne 0x9cb8
0x9c8c: mov rdi,rbx
0x9c8f: call 0x9f70
0x9c94: test eax,eax
0x9c96: je 0x9cd4
0x9c98: call 0x1a80
0x9c9d: mov r12d,dword ptr [rax]
0x9ca0: mov rdi,rbx
0x9ca3: mov rbp,rax
0x9ca6: call 0x1b40
0x9cab: test r12d,r12d
0x9cae: jne 0x9ce0
0x9cb0: pop rbx
0x9cb1: pop rbp
0x9cb2: pop r12
0x9cb4: ret 
0x9cb5: nop dword ptr [rax]
0x9cb8: mov rdi,rbx
0x9cbb: call 0x1cf0
0x9cc0: xor esi,esi
0x9cc2: mov edx,1
0x9cc7: mov edi,eax
0x9cc9: call 0x1c10
0x9cce: cmp rax,-1
0x9cd2: jne 0x9c8c
0x9cd4: mov rdi,rbx
0x9cd7: pop rbx
0x9cd8: pop rbp
0x9cd9: pop r12
0x9cdb: jmp 0x1b40
0x9ce0: mov dword ptr [rbp],r12d
0x9ce4: mov eax,0xffffffff
0x9ce9: jmp 0x9cb0
0x9ceb: nop dword ptr [rax + rax]
0x9d8b: nop dword ptr [rax + rax]
0x9def: nop 
0x9e39: nop dword ptr [rax]
0x9e5b: nop dword ptr [rax + rax]
0x9f01: nop dword ptr [rax]
0x9f3d: call 0x1b90
0x9f5a: mov rax,qword ptr [rsp + 8]
0x9f5f: jmp 0x9e29
0x9f64: mov rax,qword ptr [rsp + 8]
0x9f69: jmp 0x9e81
0x9f6e: nop 
0x9f70: test rdi,rdi
0x9f73: push rbx
0x9f74: mov rbx,rdi
0x9f77: je 0x9f8a
0x9f79: call 0x1d40
0x9f7e: test eax,eax
0x9f80: je 0x9f8a
0x9f82: test dword ptr [rbx],0x100
0x9f88: jne 0x9f98
0x9f8a: mov rdi,rbx
0x9f8d: pop rbx
0x9f8e: jmp 0x1d10
0x9f93: nop dword ptr [rax + rax]
0x9f98: mov rdi,rbx
0x9f9b: mov edx,1
0x9fa0: xor esi,esi
0x9fa2: call 0x9fb0
0x9fa7: mov rdi,rbx
0x9faa: pop rbx
0x9fab: jmp 0x1d10
0x9fb0: mov rax,qword ptr [rdi + 8]
0x9fb4: cmp qword ptr [rdi + 0x10],rax
0x9fb8: je 0x9fc0
0x9fba: jmp 0x1dc0
0x9fbf: nop 
0x9fc0: mov rax,qword ptr [rdi + 0x20]
0x9fc4: cmp qword ptr [rdi + 0x28],rax
0x9fc8: jne 0x9fba
0x9fca: cmp qword ptr [rdi + 0x48],0
0x9fcf: jne 0x9fba
0x9fd1: push r12
0x9fd3: push rbp
0x9fd4: mov r12d,edx
0x9fd7: push rbx
0x9fd8: mov rbp,rsi
0x9fdb: mov rbx,rdi
0x9fde: call 0x1cf0
0x9fe3: mov edx,r12d
0x9fe6: mov rsi,rbp
0x9fe9: mov edi,eax
0x9feb: call 0x1c10
0x9ff0: cmp rax,-1
0x9ff4: je 0xa002
0x9ff6: and dword ptr [rbx],0xffffffef
0x9ff9: mov qword ptr [rbx + 0x90],rax
0xa000: xor eax,eax
0xa002: pop rbx
0xa003: pop rbp
0xa004: pop r12
0xa006: ret 
0xa007: nop word ptr [rax + rax]
0xa08e: call 0x1b90
0xa093: nop word ptr cs:[rax + rax]
0xa09d: nop dword ptr [rax]
0xa119: call 0x1b90
0xa11e: nop 
0xa120: mov edi,1
0xa125: jmp 0x5030
0xa12a: nop word ptr [rax + rax]
0xa130: push r15
0xa132: push r14
0xa134: mov r15,rsi
0xa137: push r13
0xa139: push r12
0xa13b: mov r13,rcx
0xa13e: push rbp
0xa13f: push rbx
0xa140: mov rbp,rdx
0xa143: sub rsp,0x28
0xa147: mov qword ptr [rsp + 8],rdi
0xa14c: mov qword ptr [rsp + 0x18],rdx
0xa151: call 0x1b80
0xa156: mov r14,qword ptr [r15]
0xa159: mov qword ptr [rsp],-1
0xa161: test r14,r14
0xa164: je 0xa21d
0xa16a: mov r12,rax
0xa16d: mov byte ptr [rsp + 0x17],0
0xa172: xor ebx,ebx
0xa174: jmp 0xa1c7
0xa176: nop word ptr cs:[rax + rax]
0xa180: mov rax,qword ptr [rsp + 0x18]
0xa185: test rax,rax
0xa188: je 0xa230
0xa18e: mov rdi,qword ptr [rsp]
0xa192: mov rdx,r13
0xa195: mov rsi,rbp
0xa198: imul rdi,r13
0xa19c: add rdi,rax
0xa19f: call 0x1c90
0xa1a4: test eax,eax
0xa1a6: movzx eax,byte ptr [rsp + 0x17]
0xa1ab: mov ecx,1
0xa1b0: cmovne eax,ecx
0xa1b3: mov byte ptr [rsp + 0x17],al
0xa1b7: add rbx,1
0xa1bb: add rbp,r13
0xa1be: mov r14,qword ptr [r15 + rbx*8]
0xa1c2: test r14,r14
0xa1c5: je 0xa208
0xa1c7: mov rsi,qword ptr [rsp + 8]
0xa1cc: mov rdx,r12
0xa1cf: mov rdi,r14
0xa1d2: call 0x1ab0
0xa1d7: test eax,eax
0xa1d9: jne 0xa1b7
0xa1db: mov rdi,r14
0xa1de: call 0x1b80
0xa1e3: cmp rax,r12
0xa1e6: je 0xa240
0xa1e8: cmp qword ptr [rsp],-1
0xa1ed: jne 0xa180
0xa1ef: mov qword ptr [rsp],rbx
0xa1f3: add rbx,1
0xa1f7: add rbp,r13
0xa1fa: mov r14,qword ptr [r15 + rbx*8]
0xa1fe: test r14,r14
0xa201: jne 0xa1c7
0xa203: nop dword ptr [rax + rax]
0xa208: cmp byte ptr [rsp + 0x17],0
0xa20d: mov rax,-2
0xa214: cmove rax,qword ptr [rsp]
0xa219: mov qword ptr [rsp],rax
0xa21d: mov rax,qword ptr [rsp]
0xa221: add rsp,0x28
0xa225: pop rbx
0xa226: pop rbp
0xa227: pop r12
0xa229: pop r13
0xa22b: pop r14
0xa22d: pop r15
0xa22f: ret 
0xa230: mov byte ptr [rsp + 0x17],1
0xa235: jmp 0xa1b7
0xa237: nop word ptr [rax + rax]
0xa240: mov qword ptr [rsp],rbx
0xa244: jmp 0xa21d
0xa246: nop word ptr cs:[rax + rax]
0xa250: cmp rdx,-1
0xa254: push r12
0xa256: mov edx,5
0xa25b: push rbp
0xa25c: mov r12,rsi
0xa25f: push rbx
0xa260: mov rbp,rdi
0xa263: je 0xa2b0
0xa265: lea rsi,[rip + 0x499a]
0xa26c: xor edi,edi
0xa26e: call 0x1b60
0xa273: mov rbx,rax
0xa276: mov rsi,rbp
0xa279: mov edi,1
0xa27e: call 0x8c90
0xa283: mov rdx,r12
0xa286: mov rbp,rax
0xa289: mov esi,8
0xa28e: xor edi,edi
0xa290: call 0x88c0
0xa295: mov r8,rbp
0xa298: mov rdx,rbx
0xa29b: mov rcx,rax
0xa29e: pop rbx
0xa29f: pop rbp
0xa2a0: pop r12
0xa2a2: xor esi,esi
0xa2a4: xor edi,edi
0xa2a6: xor eax,eax
0xa2a8: jmp 0x1d90
0xa2ad: nop dword ptr [rax]
0xa2b0: lea rsi,[rip + 0x4934]
0xa2b7: xor edi,edi
0xa2b9: call 0x1b60
0xa2be: mov rbx,rax
0xa2c1: jmp 0xa276
0xa2c3: nop dword ptr [rax]
0xa2c6: nop word ptr cs:[rax + rax]
0xa2d0: push r15
0xa2d2: push r14
0xa2d4: mov r14,rdi
0xa2d7: push r13
0xa2d9: push r12
0xa2db: xor edi,edi
0xa2dd: push rbp
0xa2de: push rbx
0xa2df: mov rbp,rsi
0xa2e2: lea rsi,[rip + 0x493a]
0xa2e9: mov r12,rdx
0xa2ec: mov edx,5
0xa2f1: sub rsp,8
0xa2f5: mov rbx,qword ptr [rip + 0x206e04]
0xa2fc: call 0x1b60
0xa301: mov rdi,rax
0xa304: mov rsi,rbx
0xa307: call 0x1ca0
0xa30c: mov r15,qword ptr [r14]
0xa30f: test r15,r15
0xa312: je 0xa3a8
0xa318: xor r13d,r13d
0xa31b: xor ebx,ebx
0xa31d: jmp 0xa358
0xa31f: nop 
0xa320: mov rdi,r15
0xa323: add rbx,1
0xa327: mov r13,rbp
0xa32a: call 0x8cb0
0xa32f: mov rdi,qword ptr [rip + 0x206dca]
0xa336: lea rdx,[rip + 0x48fb]
0xa33d: mov rcx,rax
0xa340: mov esi,1
0xa345: xor eax,eax
0xa347: add rbp,r12
0xa34a: call 0x1e30
0xa34f: mov r15,qword ptr [r14 + rbx*8]
0xa353: test r15,r15
0xa356: je 0xa3a8
0xa358: test rbx,rbx
0xa35b: je 0xa320
0xa35d: mov rdx,r12
0xa360: mov rsi,rbp
0xa363: mov rdi,r13
0xa366: call 0x1c90
0xa36b: test eax,eax
0xa36d: jne 0xa320
0xa36f: mov rdi,r15
0xa372: add rbx,1
0xa376: add rbp,r12
0xa379: call 0x8cb0
0xa37e: mov rdi,qword ptr [rip + 0x206d7b]
0xa385: lea rdx,[rip + 0x22de]
0xa38c: mov rcx,rax
0xa38f: mov esi,1
0xa394: xor eax,eax
0xa396: call 0x1e30
0xa39b: mov r15,qword ptr [r14 + rbx*8]
0xa39f: test r15,r15
0xa3a2: jne 0xa358
0xa3a4: nop dword ptr [rax]
0xa3a8: mov rdi,qword ptr [rip + 0x206d51]
0xa3af: mov rax,qword ptr [rdi + 0x28]
0xa3b3: cmp rax,qword ptr [rdi + 0x30]
0xa3b7: jae 0xa3d8
0xa3b9: lea rdx,[rax + 1]
0xa3bd: mov qword ptr [rdi + 0x28],rdx
0xa3c1: mov byte ptr [rax],0xa
0xa3c4: add rsp,8
0xa3c8: pop rbx
0xa3c9: pop rbp
0xa3ca: pop r12
0xa3cc: pop r13
0xa3ce: pop r14
0xa3d0: pop r15
0xa3d2: ret 
0xa3d3: nop dword ptr [rax + rax]
0xa3d8: add rsp,8
0xa3dc: mov esi,0xa
0xa3e1: pop rbx
0xa3e2: pop rbp
0xa3e3: pop r12
0xa3e5: pop r13
0xa3e7: pop r14
0xa3e9: pop r15
0xa3eb: jmp 0x1be0
0xa3f0: push r15
0xa3f2: push r14
0xa3f4: mov r14,rdi
0xa3f7: push r13
0xa3f9: push r12
0xa3fb: mov r12,rsi
0xa3fe: push rbp
0xa3ff: push rbx
0xa400: mov rbp,rcx
0xa403: mov rbx,rdx
0xa406: mov rcx,r8
0xa409: mov rdx,rbp
0xa40c: sub rsp,8
0xa410: mov rsi,rbx
0xa413: mov rdi,r12
0xa416: mov r15,r8
0xa419: mov r13,r9
0xa41c: call 0xa130
0xa421: test rax,rax
0xa424: js 0xa435
0xa426: add rsp,8
0xa42a: pop rbx
0xa42b: pop rbp
0xa42c: pop r12
0xa42e: pop r13
0xa430: pop r14
0xa432: pop r15
0xa434: ret 
0xa435: mov rdx,rax
0xa438: mov rsi,r12
0xa43b: mov rdi,r14
0xa43e: call 0xa250
0xa443: mov rdx,r15
0xa446: mov rsi,rbp
0xa449: mov rdi,rbx
0xa44c: call 0xa2d0
0xa451: call r13
0xa454: mov rax,-1
0xa45b: jmp 0xa426
0xa45d: nop dword ptr [rax]
0xa460: push r14
0xa462: push r13
0xa464: push r12
0xa466: push rbp
0xa467: push rbx
0xa468: mov r14,qword ptr [rsi]
0xa46b: test r14,r14
0xa46e: je 0xa4a1
0xa470: mov r12,rcx
0xa473: mov r13,rdi
0xa476: mov rbp,rdx
0xa479: lea rbx,[rsi + 8]
0xa47d: jmp 0xa48f
0xa47f: nop 
0xa480: mov r14,qword ptr [rbx]
0xa483: add rbp,r12
0xa486: add rbx,8
0xa48a: test r14,r14
0xa48d: je 0xa4a1
0xa48f: mov rdx,r12
0xa492: mov rsi,rbp
0xa495: mov rdi,r13
0xa498: call 0x1c90
0xa49d: test eax,eax
0xa49f: jne 0xa480
0xa4a1: pop rbx
0xa4a2: mov rax,r14
0xa4a5: pop rbp
0xa4a6: pop r12
0xa4a8: pop r13
0xa4aa: pop r14
0xa4ac: ret 
0xa4ad: nop dword ptr [rax]
0xa4ea: nop word ptr [rax + rax]
0xa536: nop word ptr cs:[rax + rax]
0xa54c: nop dword ptr [rax]
0xa652: mov rax,qword ptr [rbp - 0x418]
0xa659: mov r12,qword ptr [rax]
0xa754: nop dword ptr [rax]
0xa783: nop dword ptr [rax + rax]
0xaaad: nop dword ptr [rax]
0xab24: movsxd rdx,ecx
0xab27: cmp rdx,r10
0xab2a: jae 0xab3a
0xab2c: add rdx,r15
0xab2f: cmp byte ptr [rdx + r14],0
0xab34: jne 0xb476
0xab3a: cmp ecx,eax
0xab3c: jge 0xab46
0xabe2: nop word ptr [rax + rax]
0xad0f: nop 
0xad92: nop word ptr [rax + rax]
0xae13: nop dword ptr [rax + rax]
0xae54: nop dword ptr [rax]
0xaed6: nop word ptr cs:[rax + rax]
0xaf0c: nop dword ptr [rax]
0xaf3c: nop dword ptr [rax]
0xaf7b: nop dword ptr [rax + rax]
0xaf91: nop dword ptr [rax]
0xafa5: nop dword ptr [rax]
0xafa8: mov byte ptr [rdi + 1],0
0xafac: jmp 0xaa60
0xafb1: nop dword ptr [rax]
0xb009: nop dword ptr [rax]
0xb029: nop dword ptr [rax]
0xb052: nop word ptr [rax + rax]
0xb0ad: nop dword ptr [rax]
0xb0bf: nop 
0xb178: nop dword ptr [rax + rax]
0xb188: nop dword ptr [rax + rax]
0xb1bd: nop dword ptr [rax]
0xb1fa: nop word ptr [rax + rax]
0xb213: nop dword ptr [rax + rax]
0xb2a8: nop dword ptr [rax + rax]
0xb2bc: nop dword ptr [rax]
0xb2cb: nop dword ptr [rax + rax]
0xb2db: nop dword ptr [rax + rax]
0xb2ec: nop dword ptr [rax]
0xb338: nop dword ptr [rax + rax]
0xb348: nop dword ptr [rax + rax]
0xb35f: nop 
0xb376: nop word ptr cs:[rax + rax]
0xb39a: nop word ptr [rax + rax]
0xb413: nop dword ptr [rax + rax]
0xb428: nop dword ptr [rax + rax]
0xb47b: nop dword ptr [rax + rax]
0xb62d: nop dword ptr [rax]
0xb647: call 0x1b90
0xb66f: nop 
0xb6a8: nop dword ptr [rax + rax]
0xb6b0: mov rdx,qword ptr [rdi + 8]
0xb6b4: add rdx,0xf
0xb6b8: and rdx,0xfffffffffffffff0
0xb6bc: lea r11,[rdx + 0x10]
0xb6c0: mov qword ptr [rdi + 8],r11
0xb6c4: fld xword ptr [rdx]
0xb6c6: fstp xword ptr [rax + 0x10]
0xb6c9: nop dword ptr [rax]
0xb6d0: add rcx,1
0xb6d4: add rax,0x20
0xb6d8: cmp qword ptr [rsi],rcx
0xb6db: ja 0xb698
0xb6e6: mov r11d,dword ptr [rdi]
0xb6e9: cmp r11d,0x2f
0xb6ed: ja 0xb82a
0xb6f3: mov edx,r11d
0xb6f6: add rdx,qword ptr [rdi + 0x10]
0xb6fa: add r11d,8
0xb6fe: mov dword ptr [rdi],r11d
0xb701: mov rdx,qword ptr [rdx]
0xb704: mov qword ptr [rax + 0x10],rdx
0xb708: jmp 0xb6d0
0xb70a: mov r11d,dword ptr [rdi]
0xb70d: cmp r11d,0x2f
0xb711: ja 0xb84c
0xb717: mov edx,r11d
0xb71a: add rdx,qword ptr [rdi + 0x10]
0xb71e: add r11d,8
0xb722: mov dword ptr [rdi],r11d
0xb725: mov edx,dword ptr [rdx]
0xb727: mov dword ptr [rax + 0x10],edx
0xb72a: jmp 0xb6d0
0xb72c: mov r11d,dword ptr [rdi]
0xb72f: cmp r11d,0x2f
0xb733: ja 0xb83b
0xb739: mov edx,r11d
0xb73c: add rdx,qword ptr [rdi + 0x10]
0xb740: add r11d,8
0xb744: mov dword ptr [rdi],r11d
0xb747: mov edx,dword ptr [rdx]
0xb749: mov byte ptr [rax + 0x10],dl
0xb74c: jmp 0xb6d0
0xb74e: mov r11d,dword ptr [rdi]
0xb751: cmp r11d,0x2f
0xb755: ja 0xb7fa
0xb75b: mov edx,r11d
0xb75e: add rdx,qword ptr [rdi + 0x10]
0xb762: add r11d,8
0xb766: mov dword ptr [rdi],r11d
0xb769: mov edx,dword ptr [rdx]
0xb76b: mov word ptr [rax + 0x10],dx
0xb76f: jmp 0xb6d0
0xb774: mov r11d,dword ptr [rdi]
0xb777: cmp r11d,0x2f
0xb77b: ja 0xb80b
0xb781: mov edx,r11d
0xb784: add rdx,qword ptr [rdi + 0x10]
0xb788: add r11d,8
0xb78c: mov dword ptr [rdi],r11d
0xb78f: mov rdx,qword ptr [rdx]
0xb792: test rdx,rdx
0xb795: cmove rdx,r9
0xb799: mov qword ptr [rax + 0x10],rdx
0xb79d: jmp 0xb6d0
0xb7a2: mov r11d,dword ptr [rdi + 4]
0xb7a6: cmp r11d,0xaf
0xb7ad: ja 0xb85d
0xb7b3: mov edx,r11d
0xb7b6: add rdx,qword ptr [rdi + 0x10]
0xb7ba: add r11d,0x10
0xb7be: mov dword ptr [rdi + 4],r11d
0xb7c2: movsd xmm0,qword ptr [rdx]
0xb7c6: movsd qword ptr [rax + 0x10],xmm0
0xb7cb: jmp 0xb6d0
0xb7d0: mov r11d,dword ptr [rdi]
0xb7d3: cmp r11d,0x2f
0xb7d7: ja 0xb81c
0xb7d9: mov edx,r11d
0xb7dc: add rdx,qword ptr [rdi + 0x10]
0xb7e0: add r11d,8
0xb7e4: mov dword ptr [rdi],r11d
0xb7e7: mov rdx,qword ptr [rdx]
0xb7ea: test rdx,rdx
0xb7ed: cmove rdx,r10
0xb7f1: mov qword ptr [rax + 0x10],rdx
0xb7f5: jmp 0xb6d0
0xb7fa: mov rdx,qword ptr [rdi + 8]
0xb7fe: lea r11,[rdx + 8]
0xb802: mov qword ptr [rdi + 8],r11
0xb806: jmp 0xb769
0xb80b: mov rdx,qword ptr [rdi + 8]
0xb80f: lea r11,[rdx + 8]
0xb813: mov qword ptr [rdi + 8],r11
0xb817: jmp 0xb78f
0xb81c: mov rdx,qword ptr [rdi + 8]
0xb820: lea r11,[rdx + 8]
0xb824: mov qword ptr [rdi + 8],r11
0xb828: jmp 0xb7e7
0xb82a: mov rdx,qword ptr [rdi + 8]
0xb82e: lea r11,[rdx + 8]
0xb832: mov qword ptr [rdi + 8],r11
0xb836: jmp 0xb701
0xb83b: mov rdx,qword ptr [rdi + 8]
0xb83f: lea r11,[rdx + 8]
0xb843: mov qword ptr [rdi + 8],r11
0xb847: jmp 0xb747
0xb84c: mov rdx,qword ptr [rdi + 8]
0xb850: lea r11,[rdx + 8]
0xb854: mov qword ptr [rdi + 8],r11
0xb858: jmp 0xb725
0xb85d: mov rdx,qword ptr [rdi + 8]
0xb861: lea r11,[rdx + 8]
0xb865: mov qword ptr [rdi + 8],r11
0xb869: jmp 0xb7c2
0xb86e: nop 
0xb8de: nop 
0xb921: nop dword ptr [rax]
0xb987: nop word ptr [rax + rax]
0xb9d2: nop word ptr [rax + rax]
0xb9e8: nop dword ptr [rax + rax]
0xb9f8: nop dword ptr [rax + rax]
0xba08: nop dword ptr [rax + rax]
0xba18: nop dword ptr [rax + rax]
0xba47: nop word ptr [rax + rax]
0xba8d: nop dword ptr [rax]
0xba95: nop dword ptr [rax]
0xbe5d: nop dword ptr [rax]
0xbfb2: nop word ptr [rax + rax]
0xc015: nop dword ptr [rax]
0xc0a6: nop word ptr cs:[rax + rax]
0xc0fe: nop 
0xc50b: nop dword ptr [rax + rax]
0xc55c: nop dword ptr [rax]
0xc560: push r15
0xc562: push r14
0xc564: mov r15,rdx
0xc567: push r13
0xc569: push r12
0xc56b: lea r12,[rip + 0x20451e]
0xc572: push rbp
0xc573: lea rbp,[rip + 0x20451e]
0xc57a: push rbx
0xc57b: mov r13d,edi
0xc57e: mov r14,rsi
0xc581: sub rbp,r12
0xc584: sub rsp,8
0xc588: sar rbp,3
0xc58c: call 0x19e8
0xc591: test rbp,rbp
0xc594: je 0xc5b6
0xc596: xor ebx,ebx
0xc598: nop dword ptr [rax + rax]
0xc5a0: mov rdx,r15
0xc5a3: mov rsi,r14
0xc5a6: mov edi,r13d
0xc5a9: call qword ptr [r12 + rbx*8]
0xc5ad: add rbx,1
0xc5b1: cmp rbp,rbx
0xc5b4: jne 0xc5a0
0xc5b6: add rsp,8
0xc5ba: pop rbx
0xc5bb: pop rbp
0xc5bc: pop r12
0xc5be: pop r13
0xc5c0: pop r14
0xc5c2: pop r15
0xc5c4: ret 
0xc5c5: nop 
0xc5c6: nop word ptr cs:[rax + rax]
0xc5d0: ret 
0xc5d2: nop word ptr cs:[rax + rax]
0xc5dc: nop dword ptr [rax]
0xc5f0: sub rsp,8
0xc5f4: add rsp,8
0xc5f8: ret 
