0x13850:	sub	rsp, 8
0x13854:	add	rsp, 8
0x13858:	ret	


0x13840:	mov	rdx, qword ptr [rip + 0x2067c1]
0x13847:	xor	esi, esi
0x13849:	jmp	0x3090


0x13830:	ret	


0x137c0:	push	r15
0x137c2:	push	r14
0x137c4:	mov	r15, rdx
0x137c7:	push	r13
0x137c9:	push	r12
0x137cb:	lea	r12, [rip + 0x205d9e]
0x137d2:	push	rbp
0x137d3:	lea	rbp, [rip + 0x205d9e]
0x137da:	push	rbx
0x137db:	mov	r13d, edi
0x137de:	mov	r14, rsi
0x137e1:	sub	rbp, r12
0x137e4:	sub	rsp, 8
0x137e8:	sar	rbp, 3
0x137ec:	call	0x2a88


0x137b0:	mov	edx, 3
0x137b5:	xor	esi, esi
0x137b7:	xor	eax, eax
0x137b9:	jmp	0x12bc0


0x13750:	push	r12
0x13752:	push	rbp
0x13753:	mov	r12, rdx
0x13756:	push	rbx
0x13757:	mov	rbp, rdi
0x1375a:	mov	rbx, rsi
0x1375d:	sub	rsp, 0x10
0x13761:	cmp	rsi, rcx
0x13764:	jne	0x1377f


0x136a0:	push	r15
0x136a2:	push	r14
0x136a4:	mov	r15, rdx
0x136a7:	push	r13
0x136a9:	push	r12
0x136ab:	mov	r14, rdi
0x136ae:	push	rbp
0x136af:	push	rbx
0x136b0:	mov	rbp, rcx
0x136b3:	mov	rbx, rsi
0x136b6:	sub	rsp, 0x18
0x136ba:	cmp	rsi, rcx
0x136bd:	jne	0x136d2


0x135e0:	push	r15
0x135e2:	push	r14
0x135e4:	mov	r14, rcx
0x135e7:	push	r13
0x135e9:	push	r12
0x135eb:	mov	r13, rsi
0x135ee:	push	rbp
0x135ef:	push	rbx
0x135f0:	mov	r12, rdi
0x135f3:	mov	rbp, rdx
0x135f6:	sub	rsp, 8
0x135fa:	call	0x2b10


0x135a0:	sub	rsp, 8
0x135a4:	mov	edi, 0xe
0x135a9:	call	0x2f10


0x13500:	push	r12
0x13502:	push	rbp
0x13503:	mov	rbp, rsi
0x13506:	push	rbx
0x13507:	call	0x3030


0x134e0:	and	esi, 0x80000
0x134e6:	mov	eax, 0x406
0x134eb:	mov	edx, 3
0x134f0:	cmovne	esi, eax
0x134f3:	xor	eax, eax
0x134f5:	jmp	0x12bc0


0x134a0:	push	r13
0x134a2:	push	r12
0x134a4:	push	rbp
0x134a5:	push	rbx
0x134a6:	mov	ebx, edi
0x134a8:	sub	rsp, 8
0x134ac:	cmp	edi, 2
0x134af:	ja	0x134d2


0x133e0:	ucomisd	xmm0, qword ptr [rip + 0x3368]
0x133e8:	jbe	0x13480


0x13360:	push	r12
0x13362:	push	rbp
0x13363:	mov	rbp, rdi
0x13366:	push	rbx
0x13367:	call	0x2b60


0x13330:	mov	rdx, qword ptr [rdi + 8]
0x13334:	xor	eax, eax
0x13336:	test	rdx, rdx
0x13339:	je	0x13358


0x132c0:	push	r12
0x132c2:	push	rbp
0x132c3:	mov	rbp, rsi
0x132c6:	push	rbx
0x132c7:	mov	rsi, qword ptr [rdi + 8]
0x132cb:	mov	rbx, rdi
0x132ce:	test	rsi, rsi
0x132d1:	je	0x132fd


0x13280:	mov	rax, qword ptr [rdi + 8]
0x13284:	test	rax, rax
0x13287:	je	0x132b6


0x13190:	push	r14
0x13192:	push	r13
0x13194:	xor	edx, edx
0x13196:	push	r12
0x13198:	push	rbp
0x13199:	push	rbx
0x1319a:	mov	rbx, qword ptr [rdi + 0x18]
0x1319e:	sub	rbx, qword ptr [rdi + 0x10]
0x131a2:	mov	rbp, qword ptr [rdi + 8]
0x131a6:	add	rsi, rbx
0x131a9:	mov	rcx, rbx
0x131ac:	setb	dl
0x131af:	add	rsi, qword ptr [rdi + 0x30]
0x131b3:	setb	al
0x131b6:	shr	rcx, 3
0x131ba:	cmp	qword ptr [rdi], rsi
0x131bd:	lea	r12, [rsi + rcx + 0x64]
0x131c2:	cmovae	rsi, qword ptr [rdi]
0x131c6:	cmp	rsi, r12
0x131c9:	cmovae	r12, rsi
0x131cd:	test	rdx, rdx
0x131d0:	jne	0x13275


0x13170:	or	byte ptr [rdi + 0x50], 1
0x13174:	mov	qword ptr [rdi + 0x38], rcx
0x13178:	mov	qword ptr [rdi + 0x40], r8
0x1317c:	mov	qword ptr [rdi + 0x48], r9
0x13180:	jmp	0x130c0


0x13150:	and	byte ptr [rdi + 0x50], 0xfe
0x13154:	mov	qword ptr [rdi + 0x38], rcx
0x13158:	mov	qword ptr [rdi + 0x40], r8
0x1315c:	jmp	0x130c0


0x130c0:	test	rdx, rdx
0x130c3:	push	r12
0x130c5:	push	rbp
0x130c6:	push	rbx
0x130c7:	mov	rbx, rdi
0x130ca:	je	0x13130


0x130a0:	test	byte ptr [rdi + 0x50], 1
0x130a4:	mov	rax, qword ptr [rdi + 0x40]
0x130a8:	jne	0x130b0


0x13080:	test	byte ptr [rdi + 0x50], 1
0x13084:	mov	rax, qword ptr [rdi + 0x38]
0x13088:	jne	0x13090


0x13040:	lea	rsi, [rip + 0x3408]
0x13047:	sub	rsp, 8
0x1304b:	mov	edx, 5
0x13050:	xor	edi, edi
0x13052:	call	0x2c70


0x12f70:	push	r12
0x12f72:	push	rbp
0x12f73:	push	rbx
0x12f74:	sub	rsp, 0x20
0x12f78:	mov	rax, qword ptr fs:[0x28]
0x12f81:	mov	qword ptr [rsp + 0x18], rax
0x12f86:	xor	eax, eax
0x12f88:	mov	rax, qword ptr [rdi + 8]
0x12f8c:	cmp	rax, 0x3b9ac9ff
0x12f92:	ja	0x13020


0x12ee0:	push	r13
0x12ee2:	push	r12
0x12ee4:	mov	r13, rsi
0x12ee7:	push	rbp
0x12ee8:	push	rbx
0x12ee9:	mov	rbx, rdi
0x12eec:	mov	r12, rdx
0x12eef:	sub	rsp, 0x18
0x12ef3:	mov	rax, qword ptr fs:[0x28]
0x12efc:	mov	qword ptr [rsp + 8], rax
0x12f01:	xor	eax, eax
0x12f03:	lea	rax, [rsp + 4]
0x12f08:	test	rdi, rdi
0x12f0b:	cmove	rbx, rax
0x12f0f:	mov	rdi, rbx
0x12f12:	call	0x2cd0


0x12e80:	mov	rax, qword ptr [rdi + 8]
0x12e84:	cmp	qword ptr [rdi + 0x10], rax
0x12e88:	je	0x12e90


0x12e40:	test	rdi, rdi
0x12e43:	push	rbx
0x12e44:	mov	rbx, rdi
0x12e47:	je	0x12e5a


0x12bc0:	push	r12
0x12bc2:	push	rbp
0x12bc3:	mov	ebp, edi
0x12bc5:	push	rbx
0x12bc6:	sub	rsp, 0x50
0x12bca:	mov	rax, qword ptr fs:[0x28]
0x12bd3:	mov	qword ptr [rsp + 0x18], rax
0x12bd8:	xor	eax, eax
0x12bda:	lea	rax, [rsp + 0x70]
0x12bdf:	test	esi, esi
0x12be1:	mov	qword ptr [rsp + 0x30], rdx
0x12be6:	mov	qword ptr [rsp + 0x38], rcx
0x12beb:	mov	qword ptr [rsp + 0x40], r8
0x12bf0:	mov	qword ptr [rsp + 8], rax
0x12bf5:	lea	rax, [rsp + 0x20]
0x12bfa:	mov	qword ptr [rsp + 0x48], r9
0x12bff:	mov	dword ptr [rsp], 0x10
0x12c06:	mov	qword ptr [rsp + 0x10], rax
0x12c0b:	je	0x12e12


0x12b40:	push	r12
0x12b42:	push	rbp
0x12b43:	push	rbx
0x12b44:	mov	rbx, rdi
0x12b47:	call	0x2e90


0x12720:	push	r15
0x12722:	push	r14
0x12724:	push	r13
0x12726:	push	r12
0x12728:	push	rbp
0x12729:	push	rbx
0x1272a:	sub	rsp, 0x28
0x1272e:	mov	rax, qword ptr fs:[0x28]
0x12737:	mov	qword ptr [rsp + 0x18], rax
0x1273c:	xor	eax, eax
0x1273e:	cmp	edx, 0x24
0x12741:	ja	0x12aa5


0x12670:	push	r13
0x12672:	push	r12
0x12674:	mov	r10d, esi
0x12677:	push	rbp
0x12678:	push	rbx
0x12679:	mov	r12, r8
0x1267c:	sub	rsp, 0x18
0x12680:	mov	rax, qword ptr fs:[0x28]
0x12689:	mov	qword ptr [rsp + 8], rax
0x1268e:	xor	eax, eax
0x12690:	cmp	edi, 3
0x12693:	mov	ebp, dword ptr [rip + 0x207a97]
0x12699:	ja	0x126f4


0x12250:	push	r15
0x12252:	push	r14
0x12254:	push	r13
0x12256:	push	r12
0x12258:	push	rbp
0x12259:	push	rbx
0x1225a:	sub	rsp, 0x28
0x1225e:	mov	rax, qword ptr fs:[0x28]
0x12267:	mov	qword ptr [rsp + 0x18], rax
0x1226c:	xor	eax, eax
0x1226e:	cmp	edx, 0x24
0x12271:	ja	0x125d5


0x121d0:	push	rbp
0x121d1:	push	rbx
0x121d2:	sub	rsp, 0x28
0x121d6:	mov	rax, qword ptr fs:[0x28]
0x121df:	mov	qword ptr [rsp + 0x18], rax
0x121e4:	xor	eax, eax
0x121e6:	mov	rbp, rsp
0x121e9:	call	0x133e0


0x12180:	push	r14
0x12182:	push	r13
0x12184:	mov	r14, rcx
0x12187:	push	r12
0x12189:	push	rbp
0x1218a:	mov	r12, rdx
0x1218d:	push	rbx
0x1218e:	mov	rbp, rdi
0x12191:	mov	rbx, rsi
0x12194:	call	0x13750


0x12130:	push	r14
0x12132:	push	r13
0x12134:	mov	r13, rcx
0x12137:	push	r12
0x12139:	push	rbp
0x1213a:	mov	r12, rdx
0x1213d:	push	rbx
0x1213e:	mov	rbp, rsi
0x12141:	mov	rbx, rdi
0x12144:	call	0x136a0


0x12070:	push	r14
0x12072:	push	r13
0x12074:	mov	r14d, edi
0x12077:	push	r12
0x12079:	push	rbp
0x1207a:	mov	r12, rdx
0x1207d:	push	rbx
0x1207e:	mov	rbx, rsi
0x12081:	lea	rsi, [rip + 0x43d8]
0x12088:	mov	edx, 5
0x1208d:	xor	edi, edi
0x1208f:	mov	r13, r8
0x12092:	mov	rbp, rcx
0x12095:	call	0x2c70


0x12030:	lea	rsi, [rip + 0x4418]
0x12037:	sub	rsp, 8
0x1203b:	mov	edx, 5
0x12040:	xor	edi, edi
0x12042:	call	0x2c70


0x12010:	push	rbx
0x12011:	mov	rbx, rdi
0x12014:	call	0x2c90


0x11fe0:	push	rbp
0x11fe1:	push	rbx
0x11fe2:	mov	rbp, rdi
0x11fe5:	mov	rdi, rsi
0x11fe8:	mov	rbx, rsi
0x11feb:	sub	rsp, 8
0x11fef:	call	0x11de0


0x11fb0:	mov	rax, rdi
0x11fb3:	sub	rsp, 8
0x11fb7:	mul	rsi
0x11fba:	seto	dl
0x11fbd:	test	rax, rax
0x11fc0:	js	0x11fd9


0x11f90:	push	rbx
0x11f91:	mov	rbx, rdi
0x11f94:	call	0x11de0


0x11f40:	test	rdi, rdi
0x11f43:	mov	rax, qword ptr [rsi]
0x11f46:	je	0x11f70


0x11eb0:	test	rdi, rdi
0x11eb3:	mov	r9, rdx
0x11eb6:	mov	rcx, qword ptr [rsi]
0x11eb9:	je	0x11ef0


0x11e80:	mov	rax, rsi
0x11e83:	mul	rdx
0x11e86:	mov	rsi, rax
0x11e89:	seto	al
0x11e8c:	test	rsi, rsi
0x11e8f:	js	0x11e9b


0x11e40:	test	rsi, rsi
0x11e43:	push	rbx
0x11e44:	mov	rbx, rsi
0x11e47:	jne	0x11e4e


0x11e30:	jmp	0x11de0


0x11e00:	mov	rax, rdi
0x11e03:	mul	rsi
0x11e06:	mov	rdi, rax
0x11e09:	seto	al
0x11e0c:	test	rdi, rdi
0x11e0f:	js	0x11e1b


0x11de0:	push	rbx
0x11de1:	mov	rbx, rdi
0x11de4:	call	0x31c8


0x11d60:	push	rbx
0x11d61:	lea	rsi, [rip + 0x43e9]
0x11d68:	mov	edx, 5
0x11d6d:	xor	edi, edi
0x11d6f:	call	0x2c70


0x11c80:	push	rbp
0x11c81:	push	rbx
0x11c82:	mov	r10d, 0x20
0x11c88:	xor	r11d, r11d
0x11c8b:	sub	rsp, 0xb8
0x11c92:	mov	rax, qword ptr fs:[0x28]
0x11c9b:	mov	qword ptr [rsp + 0x78], rax
0x11ca0:	xor	eax, eax
0x11ca2:	lea	rax, [rsp + 0xd0]
0x11caa:	mov	qword ptr [rsp + 0xa0], r8
0x11cb2:	lea	rbx, [rsp + 0xd0]
0x11cba:	lea	r8, [rsp + 0x20]
0x11cbf:	mov	qword ptr [rsp + 0xa8], r9
0x11cc7:	mov	dword ptr [rsp + 8], 0x20
0x11ccf:	mov	qword ptr [rsp + 0x10], rax
0x11cd4:	lea	rax, [rsp + 0x80]
0x11cdc:	xor	r9d, r9d
0x11cdf:	mov	qword ptr [rsp + 0x18], rax
0x11ce4:	mov	rbp, rax
0x11ce7:	nop	word ptr [rax + rax]
0x11cf0:	cmp	r10d, 0x2f
0x11cf4:	ja	0x11d4c


0x11c00:	sub	rsp, 0x68
0x11c04:	mov	r10, r8
0x11c07:	xor	r9d, r9d
0x11c0a:	mov	rax, qword ptr fs:[0x28]
0x11c13:	mov	qword ptr [rsp + 0x58], rax
0x11c18:	xor	eax, eax
0x11c1a:	mov	r8, rsp
0x11c1d:	nop	dword ptr [rax]
0x11c20:	mov	eax, dword ptr [r10]
0x11c23:	cmp	eax, 0x2f
0x11c26:	ja	0x11c6a


0x11be0:	xor	r9d, r9d
0x11be3:	cmp	qword ptr [r8], 0
0x11be7:	je	0x11bfb


0x117c0:	push	r15
0x117c2:	push	r14
0x117c4:	push	r13
0x117c6:	push	r12
0x117c8:	mov	r12, r9
0x117cb:	push	rbp
0x117cc:	push	rbx
0x117cd:	mov	rbp, rdi
0x117d0:	mov	rbx, r8
0x117d3:	sub	rsp, 0x28
0x117d7:	test	rsi, rsi
0x117da:	je	0x118f8


0x11780:	push	r13
0x11782:	push	r12
0x11784:	push	rbp
0x11785:	push	rbx
0x11786:	mov	ebx, edi
0x11788:	sub	rsp, 8
0x1178c:	cmp	edi, 2
0x1178f:	ja	0x117b2


0x11200:	movzx	r10d, byte ptr [rdi]
0x11204:	movzx	r9d, byte ptr [rsi]
0x11208:	cmp	r10b, 0x2d
0x1120c:	je	0x11368


0x111e0:	push	rbx
0x111e1:	mov	ebx, esi
0x111e3:	call	0x2d40


0x111c0:	sub	rsp, 8
0x111c4:	call	0x2f40


0x10fb0:	push	r12
0x10fb2:	push	rbp
0x10fb3:	lea	r12, [rsi + 0x18]
0x10fb7:	push	rbx
0x10fb8:	mov	rbp, rdi
0x10fbb:	mov	rbx, rsi
0x10fbe:	sub	rsp, 0x10
0x10fc2:	jmp	0x10fd6


0x10f80:	push	rbx
0x10f81:	mov	rbx, rdi
0x10f84:	lea	rdi, [rdi + 0x18]
0x10f88:	xor	esi, esi
0x10f8a:	call	0x132c0


0x10f10:	push	r12
0x10f12:	mov	r12, qword ptr [rip + 0x20909f]
0x10f19:	xor	edx, edx
0x10f1b:	push	rbp
0x10f1c:	mov	rbp, qword ptr [rip + 0x2090b5]
0x10f23:	xor	esi, esi
0x10f25:	push	rbx
0x10f26:	mov	rbx, rdi
0x10f29:	mov	qword ptr [rdi], 0
0x10f30:	mov	qword ptr [rdi + 8], 0
0x10f38:	mov	qword ptr [rdi + 0x10], 0
0x10f40:	lea	rdi, [rdi + 0x18]
0x10f44:	mov	r8, r12
0x10f47:	mov	rcx, rbp
0x10f4a:	call	0x13150


0x10e20:	push	r12
0x10e22:	push	rbp
0x10e23:	push	rbx
0x10e24:	mov	rdx, qword ptr [rdi + 0x30]
0x10e28:	mov	rbx, rdi
0x10e2b:	mov	r12, qword ptr [rdi + 0x28]
0x10e2f:	mov	rbp, rdx
0x10e32:	sub	rbp, r12
0x10e35:	sub	rbp, 1
0x10e39:	cmp	rdx, r12
0x10e3c:	je	0x10f00


0x10be0:	push	r13
0x10be2:	push	r12
0x10be4:	lea	r12, [rdi + 0x800]
0x10beb:	push	rbp
0x10bec:	mov	rdx, rdi
0x10bef:	push	rbx
0x10bf0:	mov	rax, rdi
0x10bf3:	movabs	rcx, 0x98f5704f6c44c0ab
0x10bfd:	movabs	r10, 0xae985bf2cbfc89ed
0x10c07:	movabs	rbp, 0x48fe4a0fa5a09315
0x10c11:	movabs	rsi, 0x82f053db8355e0ce
0x10c1b:	movabs	r8, 0xb29b2e824a595524
0x10c25:	movabs	rbx, 0x8c0ea5053d4712a0
0x10c2f:	movabs	r11, 0xb9f8b322c73ac862
0x10c39:	movabs	r9, 0x647c4677a2884b7c
0x10c43:	nop	dword ptr [rax + rax]
0x10c48:	add	rsi, qword ptr [rax + 0x20]
0x10c4c:	add	rcx, qword ptr [rax + 0x38]
0x10c50:	mov	r13, qword ptr [rax]
0x10c53:	add	rbp, qword ptr [rax + 0x28]
0x10c57:	add	r10, qword ptr [rax + 0x30]
0x10c5b:	sub	r13, rsi
0x10c5e:	add	r9, r13
0x10c61:	mov	r13, rcx
0x10c64:	shr	r13, 9
0x10c68:	add	rcx, r9
0x10c6b:	xor	rbp, r13
0x10c6e:	mov	r13, qword ptr [rax + 8]
0x10c72:	sub	r13, rbp
0x10c75:	add	r11, r13
0x10c78:	mov	r13, r9
0x10c7b:	shl	r13, 9
0x10c7f:	add	r9, r11
0x10c82:	xor	r10, r13
0x10c85:	mov	r13, qword ptr [rax + 0x10]
0x10c89:	sub	r13, r10
0x10c8c:	add	rbx, r13
0x10c8f:	mov	r13, r11
0x10c92:	shr	r13, 0x17
0x10c96:	add	r11, rbx
0x10c99:	xor	rcx, r13
0x10c9c:	mov	r13, qword ptr [rax + 0x18]
0x10ca0:	sub	r13, rcx
0x10ca3:	add	r8, r13
0x10ca6:	mov	r13, rbx
0x10ca9:	shl	r13, 0xf
0x10cad:	add	rbx, r8
0x10cb0:	xor	r9, r13
0x10cb3:	mov	r13, r8
0x10cb6:	sub	rsi, r9
0x10cb9:	shr	r13, 0xe
0x10cbd:	mov	qword ptr [rax], r9
0x10cc0:	xor	r11, r13
0x10cc3:	mov	r13, rsi
0x10cc6:	add	r8, rsi
0x10cc9:	sub	rbp, r11
0x10ccc:	shl	r13, 0x14
0x10cd0:	mov	qword ptr [rax + 8], r11
0x10cd4:	xor	rbx, r13
0x10cd7:	lea	r13, [rsi + rbp]
0x10cdb:	mov	rsi, rbp
0x10cde:	sub	r10, rbx
0x10ce1:	shr	rsi, 0x11
0x10ce5:	mov	qword ptr [rax + 0x10], rbx
0x10ce9:	xor	r8, rsi
0x10cec:	mov	rsi, r10
0x10cef:	add	rbp, r10
0x10cf2:	sub	rcx, r8
0x10cf5:	shl	rsi, 0xe
0x10cf9:	mov	qword ptr [rax + 0x18], r8
0x10cfd:	xor	rsi, r13
0x10d00:	add	r10, rcx
0x10d03:	mov	qword ptr [rax + 0x28], rbp
0x10d07:	mov	qword ptr [rax + 0x20], rsi
0x10d0b:	mov	qword ptr [rax + 0x30], r10
0x10d0f:	add	rax, 0x40
0x10d13:	mov	qword ptr [rax - 8], rcx
0x10d17:	cmp	r12, rax
0x10d1a:	jne	0x10c48


0x10950:	mov	rax, qword ptr [rdi + 0x810]
0x10957:	mov	rdx, qword ptr [rdi + 0x800]
0x1095e:	lea	r9, [rdi + 0x400]
0x10965:	lea	rcx, [rax + 1]
0x10969:	mov	rax, rdi
0x1096c:	mov	qword ptr [rdi + 0x810], rcx
0x10973:	add	rcx, qword ptr [rdi + 0x808]
0x1097a:	nop	word ptr [rax + rax]
0x10980:	mov	r8, rdx
0x10983:	shl	r8, 0x15
0x10987:	xor	rdx, r8
0x1098a:	mov	r8, qword ptr [rax]
0x1098d:	not	rdx
0x10990:	add	rdx, qword ptr [rax + 0x400]
0x10997:	mov	r10, r8
0x1099a:	and	r10d, 0x7f8
0x109a1:	mov	r11, qword ptr [rdi + r10]
0x109a5:	mov	r10, rdx
0x109a8:	shr	r10, 5
0x109ac:	add	r11, rdx
0x109af:	xor	rdx, r10
0x109b2:	add	rcx, r11
0x109b5:	mov	qword ptr [rax], rcx
0x109b8:	shr	rcx, 8
0x109bc:	and	ecx, 0x7f8
0x109c2:	mov	r11, qword ptr [rdi + rcx]
0x109c6:	add	r11, r8
0x109c9:	mov	qword ptr [rsi], r11
0x109cc:	add	rdx, qword ptr [rax + 0x408]
0x109d3:	mov	rcx, qword ptr [rax + 8]
0x109d7:	mov	r10, rdx
0x109da:	mov	rdx, rcx
0x109dd:	and	edx, 0x7f8
0x109e3:	mov	r8, qword ptr [rdi + rdx]
0x109e7:	mov	rdx, r10
0x109ea:	shl	rdx, 0xc
0x109ee:	xor	rdx, r10
0x109f1:	add	r8, r10
0x109f4:	add	r8, r11
0x109f7:	mov	qword ptr [rax + 8], r8
0x109fb:	shr	r8, 8
0x109ff:	and	r8d, 0x7f8
0x10a06:	add	rcx, qword ptr [rdi + r8]
0x10a0a:	mov	qword ptr [rsi + 8], rcx
0x10a0e:	mov	r8, qword ptr [rax + 0x10]
0x10a12:	mov	r11, rcx
0x10a15:	add	rdx, qword ptr [rax + 0x410]
0x10a1c:	mov	rcx, r8
0x10a1f:	and	ecx, 0x7f8
0x10a25:	mov	r10, qword ptr [rdi + rcx]
0x10a29:	add	r10, rdx
0x10a2c:	mov	rcx, r10
0x10a2f:	add	rcx, r11
0x10a32:	mov	qword ptr [rax + 0x10], rcx
0x10a36:	shr	rcx, 8
0x10a3a:	and	ecx, 0x7f8
0x10a40:	mov	r10, qword ptr [rdi + rcx]
0x10a44:	mov	rcx, rdx
0x10a47:	shr	rcx, 0x21
0x10a4b:	xor	rdx, rcx
0x10a4e:	add	r10, r8
0x10a51:	mov	qword ptr [rsi + 0x10], r10
0x10a55:	mov	rcx, qword ptr [rax + 0x18]
0x10a59:	add	rdx, qword ptr [rax + 0x418]
0x10a60:	mov	r8, rcx
0x10a63:	and	r8d, 0x7f8
0x10a6a:	mov	r11, qword ptr [rdi + r8]
0x10a6e:	add	r11, rdx
0x10a71:	mov	r8, r11
0x10a74:	add	r8, r10
0x10a77:	add	rax, 0x20
0x10a7b:	add	rsi, 0x20
0x10a7f:	mov	qword ptr [rax - 8], r8
0x10a83:	shr	r8, 8
0x10a87:	and	r8d, 0x7f8
0x10a8e:	add	rcx, qword ptr [rdi + r8]
0x10a92:	mov	qword ptr [rsi - 8], rcx
0x10a96:	cmp	rax, r9
0x10a99:	jb	0x10980


0x10900:	push	rbp
0x10901:	push	rbx
0x10902:	mov	rdx, -1
0x10909:	mov	rbx, rdi
0x1090c:	mov	esi, 0x1038
0x10911:	sub	rsp, 8
0x10915:	mov	rbp, qword ptr [rdi]
0x10918:	call	0x3000


0x10760:	push	r15
0x10762:	push	r14
0x10764:	push	r13
0x10766:	push	r12
0x10768:	mov	r12, rdi
0x1076b:	push	rbp
0x1076c:	push	rbx
0x1076d:	mov	rbp, rdx
0x10770:	mov	rbx, rsi
0x10773:	sub	rsp, 0x18
0x10777:	mov	rcx, qword ptr [rdi]
0x1077a:	test	rcx, rcx
0x1077d:	mov	qword ptr [rsp + 8], rcx
0x10782:	je	0x107e8


0x10750:	mov	qword ptr [rdi + 0x10], rsi
0x10754:	ret	


0x10740:	mov	qword ptr [rdi + 8], rsi
0x10744:	ret	


0x10410:	push	r15
0x10412:	push	r14
0x10414:	push	r13
0x10416:	push	r12
0x10418:	push	rbp
0x10419:	push	rbx
0x1041a:	sub	rsp, 0x38
0x1041e:	mov	rax, qword ptr fs:[0x28]
0x10427:	mov	qword ptr [rsp + 0x28], rax
0x1042c:	xor	eax, eax
0x1042e:	test	rsi, rsi
0x10431:	je	0x10558


0x103b0:	push	rbp
0x103b1:	push	rbx
0x103b2:	sub	rsp, 8
0x103b6:	test	rdi, rdi
0x103b9:	je	0x103f8


0x10390:	lea	rcx, [rip + 0x209da9]
0x10397:	mov	rsi, rdi
0x1039a:	mov	rdx, -1
0x103a1:	xor	edi, edi
0x103a3:	jmp	0xfa50


0x10370:	lea	rcx, [rip + 0x209dc9]
0x10377:	mov	rdx, -1
0x1037e:	jmp	0xfa50


0x10350:	lea	rcx, [rip + 0x209de9]
0x10357:	mov	rdx, rsi
0x1035a:	mov	rsi, rdi
0x1035d:	xor	edi, edi
0x1035f:	jmp	0xfa50


0x10340:	lea	rcx, [rip + 0x209df9]
0x10347:	jmp	0xfa50


0x10320:	mov	r8, rcx
0x10323:	mov	rcx, rdx
0x10326:	mov	rdx, rsi
0x10329:	mov	rsi, rdi
0x1032c:	xor	edi, edi
0x1032e:	jmp	0x10250


0x10300:	mov	rcx, rdx
0x10303:	mov	r8, -1
0x1030a:	mov	rdx, rsi
0x1030d:	mov	rsi, rdi
0x10310:	xor	edi, edi
0x10312:	jmp	0x10250


0x102f0:	mov	r8, -1
0x102f7:	jmp	0x10250


0x10250:	sub	rsp, 0x48
0x10254:	mov	r9, rcx
0x10257:	mov	rcx, qword ptr [rip + 0x20a792]
0x1025e:	movdqa	xmm0, xmmword ptr [rip + 0x20a75a]
0x10266:	mov	rax, qword ptr fs:[0x28]
0x1026f:	mov	qword ptr [rsp + 0x38], rax
0x10274:	xor	eax, eax
0x10276:	movaps	xmmword ptr [rsp], xmm0
0x1027a:	test	rsi, rsi
0x1027d:	mov	qword ptr [rsp + 0x30], rcx
0x10282:	mov	dword ptr [rsp], 0xa
0x10289:	movdqa	xmm0, xmmword ptr [rip + 0x20a73f]
0x10291:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x10296:	movdqa	xmm0, xmmword ptr [rip + 0x20a742]
0x1029e:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x102a3:	je	0x102d7


0x101c0:	sub	rsp, 0x48
0x101c4:	mov	rax, rdx
0x101c7:	mov	rdx, qword ptr fs:[0x28]
0x101d0:	mov	qword ptr [rsp + 0x38], rdx
0x101d5:	xor	edx, edx
0x101d7:	cmp	esi, 0xa
0x101da:	je	0x10244


0x101b0:	mov	edx, 0x3a
0x101b5:	jmp	0x100e0


0x10190:	mov	edx, 0x3a
0x10195:	mov	rsi, -1
0x1019c:	jmp	0x100e0


0x10180:	movsx	edx, sil
0x10184:	mov	rsi, -1
0x1018b:	jmp	0x100e0


0x100e0:	sub	rsp, 0x48
0x100e4:	mov	ecx, edx
0x100e6:	mov	rax, qword ptr fs:[0x28]
0x100ef:	mov	qword ptr [rsp + 0x38], rax
0x100f4:	xor	eax, eax
0x100f6:	mov	rax, qword ptr [rip + 0x20a8f3]
0x100fd:	mov	r8, rsp
0x10100:	and	ecx, 0x1f
0x10103:	movdqa	xmm0, xmmword ptr [rip + 0x20a8b5]
0x1010b:	mov	qword ptr [rsp + 0x30], rax
0x10110:	mov	eax, edx
0x10112:	movaps	xmmword ptr [rsp], xmm0
0x10116:	shr	al, 5
0x10119:	movzx	eax, al
0x1011c:	lea	r9, [r8 + rax*4 + 8]
0x10121:	movdqa	xmm0, xmmword ptr [rip + 0x20a8a7]
0x10129:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x1012e:	movdqa	xmm0, xmmword ptr [rip + 0x20a8aa]
0x10136:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x1013b:	mov	edx, dword ptr [r9]
0x1013e:	mov	eax, edx
0x10140:	shr	eax, cl
0x10142:	not	eax
0x10144:	and	eax, 1
0x10147:	shl	eax, cl
0x10149:	mov	rcx, r8
0x1014c:	xor	eax, edx
0x1014e:	mov	rdx, rsi
0x10151:	mov	rsi, rdi
0x10154:	mov	dword ptr [r9], eax
0x10157:	xor	edi, edi
0x10159:	call	0xfa50


0x100d0:	mov	rcx, rdx
0x100d3:	mov	rdx, rsi
0x100d6:	mov	esi, edi
0x100d8:	xor	edi, edi
0x100da:	jmp	0x10030


0x100c0:	mov	rdx, rsi
0x100c3:	mov	esi, edi
0x100c5:	xor	edi, edi
0x100c7:	jmp	0xffa0


0x10030:	sub	rsp, 0x48
0x10034:	mov	rax, rdx
0x10037:	mov	rdx, rcx
0x1003a:	mov	rcx, qword ptr fs:[0x28]
0x10043:	mov	qword ptr [rsp + 0x38], rcx
0x10048:	xor	ecx, ecx
0x1004a:	cmp	esi, 0xa
0x1004d:	je	0x100b0


0xffa0:	sub	rsp, 0x48
0xffa4:	mov	rax, rdx
0xffa7:	mov	rdx, qword ptr fs:[0x28]
0xffb0:	mov	qword ptr [rsp + 0x38], rdx
0xffb5:	xor	edx, edx
0xffb7:	cmp	esi, 0xa
0xffba:	je	0x10024


0xff80:	lea	rcx, [rip + 0x20aa39]
0xff87:	mov	rdx, rsi
0xff8a:	mov	rsi, rdi
0xff8d:	xor	edi, edi
0xff8f:	jmp	0xfa50


0xff60:	lea	rcx, [rip + 0x20aa59]
0xff67:	mov	rsi, rdi
0xff6a:	mov	rdx, -1
0xff71:	xor	edi, edi
0xff73:	jmp	0xfa50


0xff50:	lea	rcx, [rip + 0x20aa69]
0xff57:	jmp	0xfa50


0xff30:	lea	rcx, [rip + 0x20aa89]
0xff37:	mov	rdx, -1
0xff3e:	jmp	0xfa50


0xfe90:	mov	eax, dword ptr [rip + 0x20a2e2]
0xfe96:	push	r12
0xfe98:	mov	r12, qword ptr [rip + 0x20a2e1]
0xfe9f:	push	rbp
0xfea0:	push	rbx
0xfea1:	cmp	eax, 1
0xfea4:	jle	0xfed1


0xfe80:	mov	rcx, rdx
0xfe83:	xor	edx, edx
0xfe85:	jmp	0xfd90


0xfd90:	push	r15
0xfd92:	push	r14
0xfd94:	lea	rax, [rip + 0x20ac25]
0xfd9b:	push	r13
0xfd9d:	push	r12
0xfd9f:	mov	r12, rdx
0xfda2:	push	rbp
0xfda3:	push	rbx
0xfda4:	mov	rbx, rcx
0xfda7:	mov	r14, rdi
0xfdaa:	mov	r15, rsi
0xfdad:	sub	rsp, 0x38
0xfdb1:	test	rcx, rcx
0xfdb4:	cmove	rbx, rax
0xfdb8:	xor	ebp, ebp
0xfdba:	call	0x2b10


0xfd10:	push	r15
0xfd12:	push	r14
0xfd14:	lea	rax, [rip + 0x20aca5]
0xfd1b:	push	r13
0xfd1d:	push	r12
0xfd1f:	mov	r13, rdi
0xfd22:	push	rbp
0xfd23:	push	rbx
0xfd24:	mov	rbx, r8
0xfd27:	mov	r14, rsi
0xfd2a:	mov	r15, rdx
0xfd2d:	sub	rsp, 0x18
0xfd31:	test	r8, r8
0xfd34:	cmove	rbx, rax
0xfd38:	mov	qword ptr [rsp + 8], rcx
0xfd3d:	call	0x2b10


0xfce0:	lea	rax, [rip + 0x20acd9]
0xfce7:	test	rdi, rdi
0xfcea:	cmove	rdi, rax
0xfcee:	test	rsi, rsi
0xfcf1:	mov	dword ptr [rdi], 0xa
0xfcf7:	je	0xfd07


0xfcc0:	lea	rax, [rip + 0x20acf9]
0xfcc7:	test	rdi, rdi
0xfcca:	cmove	rdi, rax
0xfcce:	mov	eax, dword ptr [rdi + 4]
0xfcd1:	mov	dword ptr [rdi + 4], esi
0xfcd4:	ret	


0xfc80:	lea	rax, [rip + 0x20ad39]
0xfc87:	test	rdi, rdi
0xfc8a:	mov	ecx, esi
0xfc8c:	cmove	rdi, rax
0xfc90:	mov	eax, esi
0xfc92:	and	ecx, 0x1f
0xfc95:	shr	al, 5
0xfc98:	movzx	eax, al
0xfc9b:	lea	rdi, [rdi + rax*4 + 8]
0xfca0:	mov	esi, dword ptr [rdi]
0xfca2:	mov	eax, esi
0xfca4:	shr	eax, cl
0xfca6:	xor	edx, eax
0xfca8:	and	eax, 1
0xfcab:	and	edx, 1
0xfcae:	shl	edx, cl
0xfcb0:	xor	edx, esi
0xfcb2:	mov	dword ptr [rdi], edx
0xfcb4:	ret	


0xfc60:	lea	rax, [rip + 0x20ad59]
0xfc67:	test	rdi, rdi
0xfc6a:	cmove	rdi, rax
0xfc6e:	mov	dword ptr [rdi], esi
0xfc70:	ret	


0xfc40:	lea	rax, [rip + 0x20ad79]
0xfc47:	test	rdi, rdi
0xfc4a:	cmove	rdi, rax
0xfc4e:	mov	eax, dword ptr [rdi]
0xfc50:	ret	


0xfc00:	push	r12
0xfc02:	push	rbp
0xfc03:	push	rbx
0xfc04:	mov	rbx, rdi
0xfc07:	call	0x2b10


0xfa50:	push	r15
0xfa52:	push	r14
0xfa54:	movsxd	r15, edi
0xfa57:	push	r13
0xfa59:	push	r12
0xfa5b:	mov	r14, rdx
0xfa5e:	push	rbp
0xfa5f:	push	rbx
0xfa60:	mov	rbp, rcx
0xfa63:	sub	rsp, 0x28
0xfa67:	mov	qword ptr [rsp + 8], rsi
0xfa6c:	call	0x2b10


0xe810:	push	r15
0xe812:	push	r14
0xe814:	mov	r15d, r8d
0xe817:	push	r13
0xe819:	push	r12
0xe81b:	mov	r14, rdi
0xe81e:	push	rbp
0xe81f:	push	rbx
0xe820:	mov	ebx, r9d
0xe823:	mov	r13, rsi
0xe826:	mov	rbp, rcx
0xe829:	and	ebx, 2
0xe82c:	sub	rsp, 0xb8
0xe833:	mov	rax, qword ptr [rsp + 0xf0]
0xe83b:	mov	qword ptr [rsp + 0x10], rdx
0xe840:	mov	dword ptr [rsp + 8], r8d
0xe845:	mov	dword ptr [rsp + 0x78], r9d
0xe84a:	mov	qword ptr [rsp + 0x20], rax
0xe84f:	mov	rax, qword ptr [rsp + 0xf8]
0xe857:	mov	qword ptr [rsp + 0x68], rax
0xe85c:	mov	rax, qword ptr [rsp + 0x100]
0xe864:	mov	qword ptr [rsp + 0x60], rax
0xe869:	mov	rax, qword ptr fs:[0x28]
0xe872:	mov	qword ptr [rsp + 0xa8], rax
0xe87a:	xor	eax, eax
0xe87c:	call	0x2c80


0xe720:	push	rbp
0xe721:	push	rbx
0xe722:	mov	rbp, rdi
0xe725:	mov	ebx, esi
0xe727:	sub	rsp, 8
0xe72b:	call	0x135a0


0xe680:	test	rdi, rdi
0xe683:	push	rbx
0xe684:	je	0xe6fd


0xe5f0:	push	rbx
0xe5f1:	lea	rdi, [rip + 0x75a8]
0xe5f8:	mov	ebx, 0x31069
0xe5fd:	sub	rsp, 0x10
0xe601:	mov	rax, qword ptr fs:[0x28]
0xe60a:	mov	qword ptr [rsp + 8], rax
0xe60f:	xor	eax, eax
0xe611:	call	0x2ac0


0xe3f0:	mov	eax, dword ptr [rip + 0x20c4aa]
0xe3f6:	push	r14
0xe3f8:	push	r13
0xe3fa:	push	r12
0xe3fc:	push	rbp
0xe3fd:	mov	ebp, esi
0xe3ff:	push	rbx
0xe400:	test	eax, eax
0xe402:	mov	rbx, rdi
0xe405:	mov	r13d, dword ptr [rdi]
0xe408:	mov	r14d, dword ptr [rdi + 4]
0xe40c:	jns	0xe4f0


0xe2d0:	sub	rsp, 0x98
0xe2d7:	mov	edi, 0x56
0xe2dc:	mov	rax, qword ptr fs:[0x28]
0xe2e5:	mov	qword ptr [rsp + 0x88], rax
0xe2ed:	xor	eax, eax
0xe2ef:	call	0x3050


0xe1f0:	sub	rsp, 0x98
0xe1f7:	mov	edi, 0x55
0xe1fc:	mov	rax, qword ptr fs:[0x28]
0xe205:	mov	qword ptr [rsp + 0x88], rax
0xe20d:	xor	eax, eax
0xe20f:	call	0x3050


0xe0a0:	push	rbp
0xe0a1:	push	rbx
0xe0a2:	sub	rsp, 8
0xe0a6:	cmp	edi, 2
0xe0a9:	je	0xe0e0


0xdf80:	sub	rsp, 0x18
0xdf84:	movzx	ecx, byte ptr [rdi]
0xdf87:	mov	rax, qword ptr fs:[0x28]
0xdf90:	mov	qword ptr [rsp + 8], rax
0xdf95:	xor	eax, eax
0xdf97:	test	cl, cl
0xdf99:	je	0xdfde


0xdf10:	push	rbx
0xdf11:	xor	edi, edi
0xdf13:	mov	esi, 0x80
0xdf18:	sub	rsp, 0x90
0xdf1f:	mov	rbx, rsp
0xdf22:	mov	rdx, rbx
0xdf25:	mov	rax, qword ptr fs:[0x28]
0xdf2e:	mov	qword ptr [rsp + 0x88], rax
0xdf36:	xor	eax, eax
0xdf38:	call	0x3120


0xdee0:	push	rbp
0xdee1:	push	rbx
0xdee2:	mov	ebp, esi
0xdee4:	mov	rbx, rdi
0xdee7:	sub	rsp, 8
0xdeeb:	call	0x2c90


0xdd20:	push	r15
0xdd22:	push	r14
0xdd24:	push	r13
0xdd26:	push	r12
0xdd28:	lea	r13, [rdi + rsi]
0xdd2c:	push	rbp
0xdd2d:	push	rbx
0xdd2e:	mov	rbx, rdi
0xdd31:	sub	rsp, 0x38
0xdd35:	mov	rax, qword ptr fs:[0x28]
0xdd3e:	mov	qword ptr [rsp + 0x28], rax
0xdd43:	xor	eax, eax
0xdd45:	mov	dword ptr [rsp + 0xc], edx
0xdd49:	call	0x2c80


0xdcd0:	lea	rcx, [rsi + 0x14]
0xdcd4:	mov	byte ptr [rsi + 0x14], 0
0xdcd8:	movabs	rsi, 0xcccccccccccccccd
0xdce2:	nop	word ptr [rax + rax]
0xdce8:	mov	rax, rdi
0xdceb:	sub	rcx, 1
0xdcef:	mul	rsi
0xdcf2:	shr	rdx, 3
0xdcf6:	lea	rax, [rdx + rdx*4]
0xdcfa:	add	rax, rax
0xdcfd:	sub	rdi, rax
0xdd00:	add	edi, 0x30
0xdd03:	test	rdx, rdx
0xdd06:	mov	byte ptr [rcx], dil
0xdd09:	mov	rdi, rdx
0xdd0c:	jne	0xdce8


0xdc90:	lea	rcx, [rsi + 0xa]
0xdc94:	mov	byte ptr [rsi + 0xa], 0
0xdc98:	mov	esi, 0xcccccccd
0xdc9d:	nop	dword ptr [rax]
0xdca0:	mov	eax, edi
0xdca2:	sub	rcx, 1
0xdca6:	mul	esi
0xdca8:	shr	edx, 3
0xdcab:	lea	eax, [rdx + rdx*4]
0xdcae:	add	eax, eax
0xdcb0:	sub	edi, eax
0xdcb2:	add	edi, 0x30
0xdcb5:	test	edx, edx
0xdcb7:	mov	byte ptr [rcx], dil
0xdcba:	mov	edi, edx
0xdcbc:	jne	0xdca0


0xdc10:	test	edi, edi
0xdc12:	lea	rcx, [rsi + 0xb]
0xdc16:	mov	byte ptr [rsi + 0xb], 0
0xdc1a:	mov	r9d, 0x66666667
0xdc20:	mov	esi, 0xcccccccd
0xdc25:	mov	r8d, 0x30
0xdc2b:	js	0xdc5b


0xdb00:	push	r15
0xdb02:	push	r14
0xdb04:	push	r13
0xdb06:	push	r12
0xdb08:	push	rbp
0xdb09:	push	rbx
0xdb0a:	sub	rsp, 0x38
0xdb0e:	mov	rax, qword ptr [rdi + 0x10]
0xdb12:	test	rax, rax
0xdb15:	je	0xdc00


0xd9e0:	push	r15
0xd9e2:	push	r14
0xd9e4:	push	r13
0xd9e6:	push	r12
0xd9e8:	mov	r12, rsi
0xd9eb:	push	rbp
0xd9ec:	push	rbx
0xd9ed:	mov	rbp, rdi
0xd9f0:	sub	rsp, 8
0xd9f4:	mov	rsi, qword ptr [rdi + 8]
0xd9f8:	mov	rbx, qword ptr [rdi + 0x10]
0xd9fc:	mov	rdi, qword ptr [rdi]
0xd9ff:	lea	rax, [rsi - 1]
0xda03:	cmp	rax, rbx
0xda06:	jbe	0xda80


0xd9c0:	push	rbx
0xd9c1:	mov	rbx, rdi
0xd9c4:	mov	rdi, qword ptr [rdi]
0xd9c7:	call	0x31c0


0xd930:	push	r12
0xd932:	push	rbp
0xd933:	mov	r12, rdi
0xd936:	push	rbx
0xd937:	mov	edi, 0x20
0xd93c:	mov	rbx, rsi
0xd93f:	call	0x11de0


0xd920:	xor	eax, eax
0xd922:	ret	


0xd710:	push	r12
0xd712:	push	rbp
0xd713:	mov	ecx, 1
0xd718:	push	rbx
0xd719:	mov	rbx, rdi
0xd71c:	sub	rsp, 0x10
0xd720:	mov	rdx, rsp
0xd723:	mov	rax, qword ptr fs:[0x28]
0xd72c:	mov	qword ptr [rsp + 8], rax
0xd731:	xor	eax, eax
0xd733:	call	0xc730


0xd6b0:	push	rbx
0xd6b1:	mov	rbx, rsi
0xd6b4:	sub	rsp, 0x10
0xd6b8:	mov	rdx, rsp
0xd6bb:	mov	rax, qword ptr fs:[0x28]
0xd6c4:	mov	qword ptr [rsp + 8], rax
0xd6c9:	xor	eax, eax
0xd6cb:	call	0xd420


0xd420:	push	r13
0xd422:	push	r12
0xd424:	push	rbp
0xd425:	push	rbx
0xd426:	sub	rsp, 0x18
0xd42a:	mov	rax, qword ptr fs:[0x28]
0xd433:	mov	qword ptr [rsp + 8], rax
0xd438:	xor	eax, eax
0xd43a:	test	rsi, rsi
0xd43d:	je	0xd5fd


0xd1e0:	push	r12
0xd1e2:	push	rbp
0xd1e3:	mov	rbp, rdi
0xd1e6:	push	rbx
0xd1e7:	sub	rsp, 0x60
0xd1eb:	mov	r12, qword ptr [rdi + 0x28]
0xd1ef:	mov	rax, qword ptr fs:[0x28]
0xd1f8:	mov	qword ptr [rsp + 0x58], rax
0xd1fd:	xor	eax, eax
0xd1ff:	cmp	byte ptr [r12 + 0x10], 0
0xd205:	jne	0xd258


0xd100:	push	r12
0xd102:	push	rbp
0xd103:	mov	r12, rdi
0xd106:	push	rbx
0xd107:	cmp	qword ptr [rdi + 0x40], 0
0xd10c:	mov	rbp, qword ptr [rdi]
0xd10f:	mov	rax, qword ptr [rdi + 8]
0xd113:	je	0xd163


0xd070:	push	r12
0xd072:	push	rbp
0xd073:	mov	rbp, rdi
0xd076:	push	rbx
0xd077:	mov	r12, qword ptr [rdi]
0xd07a:	cmp	r12, qword ptr [rdi + 8]
0xd07e:	jae	0xd0eb


0xceb0:	push	r15
0xceb2:	push	r14
0xceb4:	lea	rax, [rip - 0x7db]
0xcebb:	push	r13
0xcebd:	push	r12
0xcebf:	mov	r12, rdx
0xcec2:	push	rbp
0xcec3:	push	rbx
0xcec4:	mov	r13, rcx
0xcec7:	mov	rbp, rdi
0xceca:	mov	edi, 0x50
0xcecf:	mov	r15, rsi
0xced2:	sub	rsp, 8
0xced6:	test	rdx, rdx
0xced9:	mov	r14, r8
0xcedc:	cmove	r12, rax
0xcee0:	lea	rax, [rip - 0x7f7]
0xcee7:	test	rcx, rcx
0xceea:	cmove	r13, rax
0xceee:	call	0x31c8


0xce90:	movabs	rax, 0x3f80000000000000
0xce9a:	mov	byte ptr [rdi + 0x10], 0
0xce9e:	mov	qword ptr [rdi], rax
0xcea1:	movabs	rax, 0x3fb4fdf43f4ccccd
0xceab:	mov	qword ptr [rdi + 8], rax
0xceaf:	ret	


0xce50:	movzx	ecx, byte ptr [rdi]
0xce53:	xor	edx, edx
0xce55:	test	cl, cl
0xce57:	je	0xce7d


0xcde0:	push	r15
0xcde2:	push	r14
0xcde4:	push	r13
0xcde6:	push	r12
0xcde8:	push	rbp
0xcde9:	push	rbx
0xcdea:	sub	rsp, 8
0xcdee:	mov	r14, qword ptr [rdi]
0xcdf1:	cmp	qword ptr [rdi + 8], r14
0xcdf5:	jbe	0xce46


0xcd70:	mov	r9, qword ptr [rdi]
0xcd73:	cmp	qword ptr [rdi + 8], r9
0xcd77:	jbe	0xcdd2


0xccf0:	push	rbp
0xccf1:	push	rbx
0xccf2:	mov	rbp, rdi
0xccf5:	mov	rbx, rsi
0xccf8:	sub	rsp, 8
0xccfc:	call	0xc700


0xcca0:	cmp	qword ptr [rdi + 0x20], 0
0xcca5:	je	0xccd3


0xcc40:	push	r12
0xcc42:	push	rbp
0xcc43:	mov	r12, rdi
0xcc46:	push	rbx
0xcc47:	mov	rbp, rsi
0xcc4a:	call	0xc700


0xcaf0:	push	r13
0xcaf2:	push	r12
0xcaf4:	mov	r12, rsi
0xcaf7:	push	rbp
0xcaf8:	push	rbx
0xcaf9:	xor	ebx, ebx
0xcafb:	sub	rsp, 8
0xcaff:	mov	rsi, qword ptr [rdi]
0xcb02:	mov	rcx, qword ptr [rdi + 0x20]
0xcb06:	mov	rbp, qword ptr [rdi + 0x10]
0xcb0a:	mov	r13, qword ptr [rdi + 0x18]
0xcb0e:	mov	rdi, qword ptr [rdi + 8]
0xcb12:	cmp	rsi, rdi
0xcb15:	jae	0xcb55


0xca90:	mov	rcx, qword ptr [rdi]
0xca93:	mov	r8, qword ptr [rdi + 8]
0xca97:	xor	edx, edx
0xca99:	xor	esi, esi
0xca9b:	cmp	rcx, r8
0xca9e:	jae	0xcad6


0xca40:	mov	rsi, qword ptr [rdi]
0xca43:	mov	rdi, qword ptr [rdi + 8]
0xca47:	xor	eax, eax
0xca49:	cmp	rsi, rdi
0xca4c:	jae	0xca87


0xca30:	mov	rax, qword ptr [rdi + 0x20]
0xca34:	ret	


0xca20:	mov	rax, qword ptr [rdi + 0x18]
0xca24:	ret	


0xca10:	mov	rax, qword ptr [rdi + 0x10]
0xca14:	ret	


0xc8d0:	push	r15
0xc8d2:	push	r14
0xc8d4:	push	r13
0xc8d6:	push	r12
0xc8d8:	push	rbp
0xc8d9:	push	rbx
0xc8da:	sub	rsp, 8
0xc8de:	mov	r12, qword ptr [rsi]
0xc8e1:	cmp	r12, qword ptr [rsi + 8]
0xc8e5:	jae	0xc9c8


0xc850:	mov	rdx, qword ptr [rdi]
0xc853:	lea	rcx, [rip + 0x92e6]
0xc85a:	mov	eax, 1
0xc85f:	cmp	rdx, rcx
0xc862:	je	0xc8c5


0xc730:	push	r14
0xc732:	push	r13
0xc734:	mov	r14, rdx
0xc737:	push	r12
0xc739:	push	rbp
0xc73a:	mov	r12, rdi
0xc73d:	push	rbx
0xc73e:	mov	rbp, rsi
0xc741:	mov	r13d, ecx
0xc744:	call	0xc700


0xc700:	push	rbx
0xc701:	mov	rbx, rdi
0xc704:	mov	rdi, rsi
0xc707:	mov	rsi, qword ptr [rbx + 0x10]
0xc70b:	call	qword ptr [rbx + 0x30]


0xc6f0:	cmp	rdi, rsi
0xc6f3:	sete	al
0xc6f6:	ret	


0xc6e0:	mov	rax, rdi
0xc6e3:	xor	edx, edx
0xc6e5:	ror	rax, 3
0xc6e9:	div	rsi
0xc6ec:	mov	rax, rdx
0xc6ef:	ret	


0xc640:	cmp	rdi, 0xa
0xc644:	mov	eax, 0xa
0xc649:	movabs	r9, 0xaaaaaaaaaaaaaaab
0xc653:	cmovb	rdi, rax
0xc657:	or	rdi, 1
0xc65b:	cmp	rdi, -1
0xc65f:	je	0xc6cf


0xc5e0:	sub	rsp, 8
0xc5e4:	xor	esi, esi
0xc5e6:	call	0x2f90


0xc1b0:	push	r15
0xc1b2:	push	r14
0xc1b4:	push	r13
0xc1b6:	push	r12
0xc1b8:	push	rbp
0xc1b9:	push	rbx
0xc1ba:	mov	rbp, rsi
0xc1bd:	mov	rbx, rdi
0xc1c0:	sub	rsp, 0x38
0xc1c4:	mov	rax, qword ptr fs:[0x28]
0xc1cd:	mov	qword ptr [rsp + 0x28], rax
0xc1d2:	xor	eax, eax
0xc1d4:	call	0x2e40


0xc0e0:	mov	rsi, qword ptr [rdi]
0xc0e3:	movzx	edx, byte ptr [rsi]
0xc0e6:	test	dl, dl
0xc0e8:	je	0xc1a0


0xc0b0:	test	rdi, rdi
0xc0b3:	je	0xc0d0


0xc0a0:	jmp	0x2dd0


0xbf60:	push	r15
0xbf62:	push	r14
0xbf64:	mov	r14, rsi
0xbf67:	push	r13
0xbf69:	push	r12
0xbf6b:	push	rbp
0xbf6c:	push	rbx
0xbf6d:	mov	rbp, rdi
0xbf70:	mov	edi, 0x8048
0xbf75:	sub	rsp, 0xb8
0xbf7c:	mov	rax, qword ptr fs:[0x28]
0xbf85:	mov	qword ptr [rsp + 0xa8], rax
0xbf8d:	xor	eax, eax
0xbf8f:	call	0x31c8


0xbed0:	push	rbp
0xbed1:	push	rbx
0xbed2:	mov	rbp, rdx
0xbed5:	sub	rsp, 0xb8
0xbedc:	mov	rax, qword ptr fs:[0x28]
0xbee5:	mov	qword ptr [rsp + 0xa8], rax
0xbeed:	xor	eax, eax
0xbeef:	mov	rbx, rsp
0xbef2:	movabs	rax, 0xefcdab8967452301
0xbefc:	mov	qword ptr [rsp + 0x10], 0
0xbf05:	mov	qword ptr [rsp], rax
0xbf09:	mov	rdx, rbx
0xbf0c:	movabs	rax, 0x1032547698badcfe
0xbf16:	mov	qword ptr [rsp + 8], rax
0xbf1b:	mov	dword ptr [rsp + 0x18], 0
0xbf23:	call	0xbbf0


0xbbf0:	push	r15
0xbbf2:	push	r14
0xbbf4:	push	r13
0xbbf6:	push	r12
0xbbf8:	mov	r13, rdx
0xbbfb:	push	rbp
0xbbfc:	push	rbx
0xbbfd:	mov	r12, rsi
0xbc00:	mov	rbx, rdi
0xbc03:	sub	rsp, 8
0xbc07:	mov	eax, dword ptr [rdx + 0x18]
0xbc0a:	test	eax, eax
0xbc0c:	jne	0xbd40


0xbad0:	push	rbp
0xbad1:	push	rbx
0xbad2:	mov	rbx, rdi
0xbad5:	mov	eax, dword ptr [rdi + 0x18]
0xbad8:	mov	rbp, rsi
0xbadb:	mov	edx, dword ptr [rbx + 0x14]
0xbade:	cmp	eax, 0x38
0xbae1:	mov	esi, eax
0xbae3:	sbb	r8, r8
0xbae6:	and	r8, 0xffffffffffffffc0
0xbaea:	sub	r8, -0x80
0xbaee:	cmp	eax, 0x38
0xbaf1:	sbb	rcx, rcx
0xbaf4:	and	rcx, 0xfffffffffffffff0
0xbaf8:	add	rcx, 0x1f
0xbafc:	cmp	eax, 0x38
0xbaff:	sbb	rdi, rdi
0xbb02:	xor	r9d, r9d
0xbb05:	and	rdi, 0xfffffffffffffff0
0xbb09:	add	rdi, 0x1e
0xbb0d:	add	esi, dword ptr [rbx + 0x10]
0xbb10:	setb	r9b
0xbb14:	mov	dword ptr [rbx + 0x10], esi
0xbb17:	test	r9d, r9d
0xbb1a:	je	0xbb22


0xb360:	mov	rax, rsi
0xb363:	push	r15
0xb365:	push	r14
0xb367:	and	rax, 0xfffffffffffffffc
0xb36b:	push	r13
0xb36d:	push	r12
0xb36f:	push	rbp
0xb370:	push	rbx
0xb371:	mov	rbx, rdi
0xb374:	lea	rcx, [rbx + rax]
0xb378:	mov	eax, dword ptr [rdx]
0xb37a:	mov	rdi, rdx
0xb37d:	mov	r11d, dword ptr [rdx + 4]
0xb381:	mov	r10d, dword ptr [rdx + 8]
0xb385:	mov	qword ptr [rsp - 8], rdx
0xb38a:	mov	qword ptr [rsp - 0x10], rcx
0xb38f:	mov	dword ptr [rsp - 0x18], eax
0xb393:	mov	eax, dword ptr [rdx + 0xc]
0xb396:	mov	edx, esi
0xb398:	mov	dword ptr [rsp - 0x20], eax
0xb39c:	xor	eax, eax
0xb39e:	add	edx, dword ptr [rdi + 0x10]
0xb3a1:	setb	al
0xb3a4:	shr	rsi, 0x20
0xb3a8:	add	esi, dword ptr [rdi + 0x14]
0xb3ab:	mov	dword ptr [rdi + 0x10], edx
0xb3ae:	add	esi, eax
0xb3b0:	cmp	rbx, rcx
0xb3b3:	mov	dword ptr [rdi + 0x14], esi
0xb3b6:	jae	0xbaaa


0xb340:	mov	edx, dword ptr [rdi]
0xb342:	mov	rax, rsi
0xb345:	mov	dword ptr [rsi], edx
0xb347:	mov	edx, dword ptr [rdi + 4]
0xb34a:	mov	dword ptr [rsi + 4], edx
0xb34d:	mov	edx, dword ptr [rdi + 8]
0xb350:	mov	dword ptr [rsi + 8], edx
0xb353:	mov	edx, dword ptr [rdi + 0xc]
0xb356:	mov	dword ptr [rsi + 0xc], edx
0xb359:	ret	


0xb310:	movabs	rax, 0xefcdab8967452301
0xb31a:	mov	qword ptr [rdi + 0x10], 0
0xb322:	mov	dword ptr [rdi + 0x18], 0
0xb329:	mov	qword ptr [rdi], rax
0xb32c:	movabs	rax, 0x1032547698badcfe
0xb336:	mov	qword ptr [rdi + 8], rax
0xb33a:	ret	


0xb260:	push	rbp
0xb261:	push	rbx
0xb262:	sub	rsp, 8
0xb266:	mov	rdi, qword ptr [rip + 0x20ef5b]
0xb26d:	call	0x13360


0xb250:	mov	byte ptr [rip + 0x20f639], dil
0xb257:	ret	


0xb240:	mov	qword ptr [rip + 0x20f651], rdi
0xb247:	ret	


0xb1f0:	push	r14
0xb1f2:	push	r13
0xb1f4:	push	r12
0xb1f6:	push	rbp
0xb1f7:	push	rbx
0xb1f8:	mov	r14, qword ptr [rsi]
0xb1fb:	test	r14, r14
0xb1fe:	je	0xb231


0xb180:	push	r15
0xb182:	push	r14
0xb184:	mov	r14, rdi
0xb187:	push	r13
0xb189:	push	r12
0xb18b:	mov	r12, rsi
0xb18e:	push	rbp
0xb18f:	push	rbx
0xb190:	mov	rbp, rcx
0xb193:	mov	rbx, rdx
0xb196:	mov	rcx, r8
0xb199:	mov	rdx, rbp
0xb19c:	sub	rsp, 8
0xb1a0:	mov	rsi, rbx
0xb1a3:	mov	rdi, r12
0xb1a6:	mov	r15, r8
0xb1a9:	mov	r13, r9
0xb1ac:	call	0xaec0


0xb060:	push	r15
0xb062:	push	r14
0xb064:	mov	r14, rdi
0xb067:	push	r13
0xb069:	push	r12
0xb06b:	xor	edi, edi
0xb06d:	push	rbp
0xb06e:	push	rbx
0xb06f:	mov	rbp, rsi
0xb072:	lea	rsi, [rip + 0xa9bc]
0xb079:	mov	r12, rdx
0xb07c:	mov	edx, 5
0xb081:	sub	rsp, 8
0xb085:	mov	rbx, qword ptr [rip + 0x20f174]
0xb08c:	call	0x2c70


0xafe0:	cmp	rdx, -1
0xafe4:	push	r12
0xafe6:	mov	edx, 5
0xafeb:	push	rbp
0xafec:	mov	r12, rsi
0xafef:	push	rbx
0xaff0:	mov	rbp, rdi
0xaff3:	je	0xb040


0xaec0:	push	r15
0xaec2:	push	r14
0xaec4:	mov	r15, rsi
0xaec7:	push	r13
0xaec9:	push	r12
0xaecb:	mov	r13, rcx
0xaece:	push	rbp
0xaecf:	push	rbx
0xaed0:	mov	rbp, rdx
0xaed3:	sub	rsp, 0x28
0xaed7:	mov	qword ptr [rsp + 8], rdi
0xaedc:	mov	qword ptr [rsp + 0x18], rdx
0xaee1:	call	0x2c90


0xaeb0:	mov	edi, 1
0xaeb5:	jmp	0xa8c0


0xa8c0:	push	r13
0xa8c2:	push	r12
0xa8c4:	mov	edx, 5
0xa8c9:	push	rbp
0xa8ca:	push	rbx
0xa8cb:	mov	ebp, edi
0xa8cd:	sub	rsp, 0x88
0xa8d4:	mov	rbx, qword ptr [rip + 0x20ffcd]
0xa8db:	mov	rax, qword ptr fs:[0x28]
0xa8e4:	mov	qword ptr [rsp + 0x78], rax
0xa8e9:	xor	eax, eax
0xa8eb:	test	edi, edi
0xa8ed:	je	0xa91d


0xa3a0:	push	r15
0xa3a2:	push	r14
0xa3a4:	mov	r14, rdi
0xa3a7:	push	r13
0xa3a9:	push	r12
0xa3ab:	push	rbp
0xa3ac:	push	rbx
0xa3ad:	mov	rbp, rsi
0xa3b0:	sub	rsp, 0xf8
0xa3b7:	mov	qword ptr [rsp + 0x30], rcx
0xa3bc:	mov	ecx, dword ptr [rip + 0x20fc62]
0xa3c2:	mov	rax, qword ptr fs:[0x28]
0xa3cb:	mov	qword ptr [rsp + 0xe8], rax
0xa3d3:	xor	eax, eax
0xa3d5:	lea	rax, [rsp + 0x48]
0xa3da:	mov	qword ptr [rsp + 8], rdx
0xa3df:	cmp	rdx, rcx
0xa3e2:	mov	qword ptr [rsp + 0x10], rax
0xa3e7:	jbe	0xa558


0xa2f0:	push	r15
0xa2f2:	push	r14
0xa2f4:	mov	r15, r8
0xa2f7:	push	r13
0xa2f9:	push	r12
0xa2fb:	mov	r12, rdx
0xa2fe:	push	rbp
0xa2ff:	push	rbx
0xa300:	mov	r13, rsi
0xa303:	mov	rsi, r12
0xa306:	mov	rbp, rdi
0xa309:	mov	r14, rcx
0xa30c:	sub	rsp, 0x18
0xa310:	mov	rdx, rsp
0xa313:	mov	rax, qword ptr fs:[0x28]
0xa31c:	mov	qword ptr [rsp + 8], rax
0xa321:	xor	eax, eax
0xa323:	call	0x8a70


0x9ae0:	push	r15
0x9ae2:	push	r14
0x9ae4:	mov	r15, rdx
0x9ae7:	push	r13
0x9ae9:	push	r12
0x9aeb:	mov	edx, 0x38
0x9af0:	push	rbp
0x9af1:	push	rbx
0x9af2:	sub	rsp, 0xb8
0x9af9:	mov	rax, qword ptr fs:[0x28]
0x9b02:	mov	qword ptr [rsp + 0xa8], rax
0x9b0a:	xor	eax, eax
0x9b0c:	mov	rax, rdx
0x9b0f:	mov	qword ptr [rsp + 0x30], rdi
0x9b14:	mov	qword ptr [rsp + 0x60], rsi
0x9b19:	mul	r15
0x9b1c:	mov	qword ptr [rsp + 0x50], rcx
0x9b21:	mov	qword ptr [rsp + 0x58], r8
0x9b26:	mov	qword ptr [rsp + 0x18], r9
0x9b2b:	jo	0xa2d6


0x9710:	cmp	byte ptr [rdi + 0x30], 0
0x9714:	jne	0x9a81


0x96e0:	sub	rsp, 0x10
0x96e4:	mov	rcx, qword ptr [rdi + 0x18]
0x96e8:	mov	rdx, qword ptr [rdi + 0x10]
0x96ec:	mov	rsi, qword ptr [rdi + 8]
0x96f0:	mov	r9, qword ptr [rdi + 0x28]
0x96f4:	push	qword ptr [rdi + 0x30]
0x96f7:	mov	r8, qword ptr [rdi + 0x20]
0x96fb:	mov	rdi, qword ptr [rdi]
0x96fe:	call	0x8ff0


0x8ff0:	push	r15
0x8ff2:	push	r14
0x8ff4:	push	r13
0x8ff6:	push	r12
0x8ff8:	mov	r12, r8
0x8ffb:	push	rbp
0x8ffc:	push	rbx
0x8ffd:	mov	rbx, rcx
0x9000:	mov	r8, rsi
0x9003:	mov	rbp, rdi
0x9006:	sub	rsp, 0x98
0x900d:	mov	r15, qword ptr [rbx + 0x28]
0x9011:	mov	r14, qword ptr [rbx + 0x30]
0x9015:	mov	rax, qword ptr fs:[0x28]
0x901e:	mov	qword ptr [rsp + 0x88], rax
0x9026:	xor	eax, eax
0x9028:	mov	rax, qword ptr [rbx + 0x40]
0x902c:	mov	rcx, qword ptr [rsp + 0xd0]
0x9034:	shr	r8, 1
0x9037:	mov	qword ptr [rsp + 0x20], rdx
0x903c:	mov	qword ptr [rsp + 0x28], r9
0x9041:	mov	qword ptr [rsp + 0x50], rdi
0x9046:	mov	qword ptr [rsp + 0x58], r8
0x904b:	mov	qword ptr [rsp + 0x68], rax
0x9050:	lea	rax, [r15 + r14]
0x9054:	mov	qword ptr [rsp + 0x30], rcx
0x9059:	mov	qword ptr [rsp + 8], r8
0x905e:	mov	qword ptr [rsp + 0x60], rdx
0x9063:	cmp	rax, 0x1ffff
0x9069:	mov	qword ptr [rsp + 0x70], r12
0x906e:	mov	qword ptr [rsp + 0x78], r9
0x9073:	mov	qword ptr [rsp + 0x80], rcx
0x907b:	jbe	0x908a


0x8fa0:	mov	rcx, qword ptr [rsi + 0x10]
0x8fa4:	cmp	qword ptr [rsi], rcx
0x8fa7:	mov	rdx, qword ptr [rsi + 8]
0x8fab:	mov	rax, qword ptr [rsi + 0x18]
0x8faf:	je	0x8fd0


0x8d00:	push	r15
0x8d02:	push	r14
0x8d04:	push	r13
0x8d06:	push	r12
0x8d08:	push	rbp
0x8d09:	push	rbx
0x8d0a:	sub	rsp, 0xa8
0x8d11:	mov	rdx, qword ptr [rip + 0x211510]
0x8d18:	mov	rax, qword ptr fs:[0x28]
0x8d21:	mov	qword ptr [rsp + 0x98], rax
0x8d29:	xor	eax, eax
0x8d2b:	mov	rax, qword ptr [rip + 0x21171e]
0x8d32:	mov	qword ptr [rsp], rdi
0x8d36:	mov	dword ptr [rsp + 0xc], esi
0x8d3a:	mov	r12, qword ptr [rax + rdx*8]
0x8d3e:	mov	rdi, r12
0x8d41:	call	0x2c90


0x8a70:	push	r15
0x8a72:	push	r14
0x8a74:	push	r13
0x8a76:	push	r12
0x8a78:	mov	r12, rsi
0x8a7b:	push	rbp
0x8a7c:	push	rbx
0x8a7d:	mov	rbx, rdx
0x8a80:	mov	edx, 8
0x8a85:	mov	rbp, rdi
0x8a88:	sub	rsp, 0x28
0x8a8c:	mov	rax, qword ptr fs:[0x28]
0x8a95:	mov	qword ptr [rsp + 0x18], rax
0x8a9a:	xor	eax, eax
0x8a9c:	mov	rax, rdx
0x8a9f:	mul	rsi
0x8aa2:	jo	0x8ca5


0x8a60:	push	rbx
0x8a61:	mov	ebx, edi
0x8a63:	call	0x2ce0


0x89f0:	push	rbp
0x89f1:	push	rbx
0x89f2:	mov	rbp, rsi
0x89f5:	mov	rbx, rdi
0x89f8:	sub	rsp, 0x18
0x89fc:	cmp	byte ptr [rip + 0x211a36], 0
0x8a03:	je	0x8a40


0x87a0:	push	r15
0x87a2:	push	r14
0x87a4:	push	r13
0x87a6:	push	r12
0x87a8:	mov	r13, rdi
0x87ab:	push	rbp
0x87ac:	push	rbx
0x87ad:	mov	ebp, ecx
0x87af:	mov	rbx, rdx
0x87b2:	sub	rsp, 0x18
0x87b6:	cmp	rsi, 2
0x87ba:	je	0x8908


0x86e0:	push	r13
0x86e2:	push	r12
0x86e4:	push	rbp
0x86e5:	push	rbx
0x86e6:	mov	rbp, rsi
0x86e9:	mov	rbx, rdi
0x86ec:	sub	rsp, 8
0x86f0:	cmp	qword ptr [rip + 0x211d38], 0
0x86f8:	je	0x8718


0x7720:	push	r15
0x7722:	push	r14
0x7724:	lea	r14, [rip + 0x213035]
0x772b:	push	r13
0x772d:	push	r12
0x772f:	push	rbp
0x7730:	push	rbx
0x7731:	sub	rsp, 0x21a8
0x7738:	mov	rbp, qword ptr [rdi + 0x18]
0x773c:	mov	r8, qword ptr [rdi + 0x10]
0x7740:	lea	rax, [rsp + 0x110]
0x7748:	mov	rcx, qword ptr [rsi + 0x18]
0x774c:	mov	r15, qword ptr [rip + 0x212cdd]
0x7753:	mov	rbx, qword ptr [rsi + 0x10]
0x7757:	mov	qword ptr [rsp + 0x38], rdi
0x775c:	mov	qword ptr [rsp + 0x78], rax
0x7761:	lea	rax, [rsp + 0x1ac]
0x7769:	mov	r11, rbp
0x776c:	mov	rdx, qword ptr fs:[0x28]
0x7775:	mov	qword ptr [rsp + 0x2198], rdx
0x777d:	xor	edx, edx
0x777f:	mov	qword ptr [rsp + 0x40], rsi
0x7784:	mov	qword ptr [rsp + 0x80], rax
0x778c:	mov	r12, r8
0x778f:	mov	rbp, rcx
0x7792:	nop	word ptr [rax + rax]
0x7798:	cmp	r12, r11
0x779b:	mov	rcx, r11
0x779e:	mov	rax, rbp
0x77a1:	cmovae	rcx, r12
0x77a5:	cmp	rbx, rbp
0x77a8:	mov	rdx, qword ptr [r15 + 0x28]
0x77ac:	cmovae	rax, rbx
0x77b0:	mov	rbp, rcx
0x77b3:	mov	r13, qword ptr [r15 + 0x20]
0x77b7:	mov	r9, rax
0x77ba:	sub	rbp, r12
0x77bd:	sub	r9, rbx
0x77c0:	cmp	byte ptr [rip + 0x2130ba], 0
0x77c7:	jne	0x77dd


0x7280:	push	r15
0x7282:	push	r14
0x7284:	mov	rcx, rsi
0x7287:	push	r13
0x7289:	push	r12
0x728b:	push	rbp
0x728c:	push	rbx
0x728d:	mov	rbp, rdx
0x7290:	sub	rsp, 0x38
0x7294:	mov	r15, qword ptr [rdi]
0x7297:	mov	r13, qword ptr [rdi + 8]
0x729b:	mov	rax, qword ptr fs:[0x28]
0x72a4:	mov	qword ptr [rsp + 0x28], rax
0x72a9:	xor	eax, eax
0x72ab:	test	rdx, rdx
0x72ae:	lea	rbx, [r15 + r13]
0x72b2:	je	0x7300


0x71f0:	push	rbp
0x71f1:	push	rbx
0x71f2:	mov	rbp, rsi
0x71f5:	mov	rbx, rdi
0x71f8:	sub	rsp, 8
0x71fc:	call	0x2e90


0x70b0:	push	rbp
0x70b1:	push	rbx
0x70b2:	mov	rbx, rdi
0x70b5:	sub	rsp, 0x18
0x70b9:	movzx	eax, byte ptr [rsi]
0x70bc:	cmp	al, 0x72
0x70be:	je	0x70f0


0x6fc0:	push	r12
0x6fc2:	push	rbp
0x6fc3:	lea	r8, [rip + 0xe541]
0x6fca:	push	rbx
0x6fcb:	mov	rbp, rsi
0x6fce:	mov	r12, rdx
0x6fd1:	mov	edx, 0xa
0x6fd6:	mov	rbx, rdi
0x6fd9:	sub	rsp, 0x20
0x6fdd:	lea	rcx, [rsp + 0x10]
0x6fe2:	lea	rsi, [rsp + 8]
0x6fe7:	mov	rax, qword ptr fs:[0x28]
0x6ff0:	mov	qword ptr [rsp + 0x18], rax
0x6ff5:	xor	eax, eax
0x6ff7:	call	0x12720


0x6dd0:	push	r15
0x6dd2:	push	r14
0x6dd4:	push	r13
0x6dd6:	push	r12
0x6dd8:	push	rbp
0x6dd9:	push	rbx
0x6dda:	mov	rbx, rsi
0x6ddd:	mov	esi, 0x80000
0x6de2:	sub	rsp, 0xb8
0x6de9:	mov	rax, qword ptr fs:[0x28]
0x6df2:	mov	qword ptr [rsp + 0xa8], rax
0x6dfa:	xor	eax, eax
0x6dfc:	mov	qword ptr [rsp + 0x18], rdi
0x6e01:	call	0xe3f0


0x6c70:	push	r15
0x6c72:	push	r14
0x6c74:	push	r13
0x6c76:	push	r12
0x6c78:	lea	r13, [rip + 0x213709]
0x6c7f:	push	rbp
0x6c80:	push	rbx
0x6c81:	mov	rbp, rdi
0x6c84:	sub	rsp, 0xa8
0x6c8b:	mov	rax, qword ptr fs:[0x28]
0x6c94:	mov	qword ptr [rsp + 0x98], rax
0x6c9c:	xor	eax, eax
0x6c9e:	mov	rbx, qword ptr [rip + 0x2136e3]
0x6ca5:	lea	rax, [rbx + 0xd]
0x6ca9:	cmp	rdi, rax
0x6cac:	je	0x6ccf


0x6bc0:	push	rbp
0x6bc1:	push	rbx
0x6bc2:	sub	rsp, 0x98
0x6bc9:	mov	rax, qword ptr fs:[0x28]
0x6bd2:	mov	qword ptr [rsp + 0x88], rax
0x6bda:	xor	eax, eax
0x6bdc:	mov	rax, qword ptr [rip + 0x2137a5]
0x6be3:	test	rax, rax
0x6be6:	je	0x6c3c


0x6bb0:	lea	rsi, [rdi + 8]
0x6bb4:	xor	edx, edx
0x6bb6:	mov	edi, 2
0x6bbb:	jmp	0x2af0


0x6b80:	mov	eax, dword ptr [rsi + 0x50]
0x6b83:	cmp	dword ptr [rdi + 0x50], eax
0x6b86:	je	0x6b90


0x6a60:	mov	r9, qword ptr [rdx + 0x18]
0x6a64:	mov	rax, rdi
0x6a67:	lea	rcx, [rdi + rsi - 1]
0x6a6c:	mov	r10, qword ptr [rdx + 0x10]
0x6a70:	mov	edi, dword ptr [rip + 0x2135b2]
0x6a76:	cmp	r9, 1
0x6a7a:	adc	r10, 0
0x6a7e:	cmp	edi, 0x80
0x6a84:	je	0x6b18


0x6970:	lea	rax, [rdi + rsi - 1]
0x6975:	mov	esi, dword ptr [rip + 0x2136ad]
0x697b:	mov	r10, qword ptr [rdx]
0x697e:	mov	r9, qword ptr [rdx + 8]
0x6982:	cmp	esi, 0x80
0x6988:	je	0x69f8


0x6930:	push	r12
0x6932:	push	rbp
0x6933:	lea	rbp, [rdi + 8]
0x6937:	push	rbx
0x6938:	mov	rbx, rdi
0x693b:	mov	r12, rsi
0x693e:	mov	rdi, rbp
0x6941:	call	0x31a0


0x6800:	push	r15
0x6802:	mov	rax, r8
0x6805:	push	r14
0x6807:	push	r13
0x6809:	push	r12
0x680b:	shl	rax, 5
0x680f:	push	rbp
0x6810:	push	rbx
0x6811:	sub	rdx, rax
0x6814:	mov	rbx, rsi
0x6817:	mov	r15, rcx
0x681a:	mov	r12, r8
0x681d:	sub	rsp, 8
0x6821:	test	r9b, r9b
0x6824:	mov	rbp, rdx
0x6827:	je	0x68b8


0x67a0:	push	rbx
0x67a1:	mov	rbx, rdi
0x67a4:	mov	rdi, qword ptr [rip + 0x213bd5]
0x67ab:	test	rdi, rdi
0x67ae:	je	0x67c8


0x6740:	push	rbx
0x6741:	mov	ebx, edi
0x6743:	sub	rsp, 0x20
0x6747:	mov	dword ptr [rsp + 8], edi
0x674b:	mov	rdi, qword ptr [rip + 0x213c2e]
0x6752:	mov	rsi, rsp
0x6755:	mov	rax, qword ptr fs:[0x28]
0x675e:	mov	qword ptr [rsp + 0x18], rax
0x6763:	xor	eax, eax
0x6765:	call	0xd710


0x6620:	push	rbp
0x6621:	push	rbx
0x6622:	xor	edx, edx
0x6624:	mov	ebx, edi
0x6626:	sub	rsp, 0x38
0x662a:	mov	rax, qword ptr fs:[0x28]
0x6633:	mov	qword ptr [rsp + 0x28], rax
0x6638:	xor	eax, eax
0x663a:	lea	rsi, [rsp + 0xc]
0x663f:	test	edi, edi
0x6641:	mov	edi, 0xffffffff
0x6646:	sete	dl
0x6649:	cmovne	edi, ebx
0x664c:	call	0x2ff0


0x6560:	push	r13
0x6562:	push	r12
0x6564:	mov	r13, rdx
0x6567:	push	rbp
0x6568:	push	rbx
0x6569:	mov	r12, rdi
0x656c:	mov	rbp, rsi
0x656f:	sub	rsp, 8
0x6573:	call	0x2b10


0x6520:	push	rbp
0x6521:	push	rbx
0x6522:	mov	rbp, rsi
0x6525:	mov	rbx, rdi
0x6528:	sub	rsi, rdi
0x652b:	xor	edx, edx
0x652d:	sub	rsp, 8
0x6531:	call	0xdd20


0x64a0:	push	r13
0x64a2:	push	r12
0x64a4:	mov	r13, rsi
0x64a7:	push	rbp
0x64a8:	push	rbx
0x64a9:	mov	rbp, rdi
0x64ac:	mov	rbx, rdx
0x64af:	lea	r12, [rsi + 1]
0x64b3:	sub	rsp, 8
0x64b7:	jmp	0x64c8


0x63f0:	mov	rsi, qword ptr [rip + 0x214051]
0x63f7:	cmp	rsi, qword ptr [rip + 0x214042]
0x63fe:	push	rbx
0x63ff:	mov	rbx, rdi
0x6402:	mov	rdi, qword ptr [rip + 0x214047]
0x6409:	je	0x6420


0x6380:	sub	rsp, 8
0x6384:	mov	eax, dword ptr [rip + 0x213f46]
0x638a:	test	eax, eax
0x638c:	je	0x63a8


0x6320:	push	rbp
0x6321:	push	rbx
0x6322:	mov	rdx, rsi
0x6325:	mov	rbx, rdi
0x6328:	sub	rsp, 8
0x632c:	test	rsi, rsi
0x632f:	je	0x6360


0x62d0:	push	rbp
0x62d1:	push	rbx
0x62d2:	mov	ebp, edi
0x62d4:	sub	rsp, 8
0x62d8:	mov	rbx, qword ptr [rip + 0x2140a9]
0x62df:	test	rbx, rbx
0x62e2:	je	0x62f9


0x62a0:	push	rbx
0x62a1:	lea	rsi, [rip + 0xdc48]
0x62a8:	mov	rbx, rdi
0x62ab:	mov	edx, 5
0x62b0:	xor	edi, edi
0x62b2:	call	0x2c70


0x6290:	mov	rsi, qword ptr [rsi]
0x6293:	mov	rdi, qword ptr [rdi]
0x6296:	jmp	0x2e40


0x6180:	movzx	ecx, byte ptr [rdi]
0x6183:	mov	rax, rdi
0x6186:	test	cl, cl
0x6188:	je	0x61db


0x60d0:	cmp	word ptr [rdi + 0x30], 0
0x60d5:	je	0x60de


0x6070:	xor	eax, eax
0x6072:	cmp	qword ptr [rdi + 0x20], 0
0x6077:	je	0x6080


0x5fb0:	movzx	eax, byte ptr [rdi]
0x5fb3:	lea	rdx, [rip + 0x2147a6]
0x5fba:	push	rbp
0x5fbb:	push	rbx
0x5fbc:	cmp	byte ptr [rdx + rax], 0
0x5fc0:	je	0x5fd5


0x5f40:	push	rbx
0x5f41:	sub	rsp, 0x10
0x5f45:	movzx	ebx, byte ptr [rdi]
0x5f48:	mov	rax, qword ptr fs:[0x28]
0x5f51:	mov	qword ptr [rsp + 8], rax
0x5f56:	xor	eax, eax
0x5f58:	xor	eax, eax
0x5f5a:	cmp	bl, 0x2d
0x5f5d:	sete	al
0x5f60:	add	rdi, rax
0x5f63:	mov	qword ptr [rsp], rdi
0x5f67:	mov	rdi, rsp
0x5f6a:	call	0x5e80


0x5e80:	mov	rcx, qword ptr [rdi]
0x5e83:	mov	r11d, dword ptr [rip + 0x2149fa]
0x5e8a:	xor	r10d, r10d
0x5e8d:	xor	eax, eax
0x5e8f:	movzx	edx, byte ptr [rcx]
0x5e92:	jmp	0x5ebe


0x5e70:	mov	eax, dword ptr [rsi + 8]
0x5e73:	cmp	dword ptr [rdi + 8], eax
0x5e76:	sete	al
0x5e79:	ret	


0x5e60:	movsxd	rax, dword ptr [rdi + 8]
0x5e64:	xor	edx, edx
0x5e66:	div	rsi
0x5e69:	mov	rax, rdx
0x5e6c:	ret	


0x5e50:	push	rbp
0x5e51:	mov	rbp, rsp
0x5e54:	pop	rbp
0x5e55:	jmp	0x5dc0


0x5e10:	cmp	byte ptr [rip + 0x2143f1], 0
0x5e17:	jne	0x5e48


0x5dc0:	lea	rdi, [rip + 0x2143e1]
0x5dc7:	lea	rsi, [rip + 0x2143da]
0x5dce:	push	rbp
0x5dcf:	sub	rsi, rdi
0x5dd2:	mov	rbp, rsp
0x5dd5:	sar	rsi, 3
0x5dd9:	mov	rax, rsi
0x5ddc:	shr	rax, 0x3f
0x5de0:	add	rsi, rax
0x5de3:	sar	rsi, 1
0x5de6:	je	0x5e00


0x5d80:	lea	rdi, [rip + 0x214421]
0x5d87:	push	rbp
0x5d88:	lea	rax, [rip + 0x214419]
0x5d8f:	cmp	rax, rdi
0x5d92:	mov	rbp, rsp
0x5d95:	je	0x5db0


0x5d50:	xor	ebp, ebp
0x5d52:	mov	r9, rdx
0x5d55:	pop	rsi
0x5d56:	mov	rdx, rsp
0x5d59:	and	rsp, 0xfffffffffffffff0
0x5d5d:	push	rax
0x5d5e:	push	rsp
0x5d5f:	lea	r8, [rip + 0xdaca]
0x5d66:	lea	rcx, [rip + 0xda53]
0x5d6d:	lea	rdi, [rip - 0x2a74]
0x5d74:	call	qword ptr [rip + 0x21424e]


0x3300:	push	r15
0x3302:	push	r14
0x3304:	push	r13
0x3306:	push	r12
0x3308:	push	rbp
0x3309:	push	rbx
0x330a:	mov	ebx, edi
0x330c:	lea	rdi, [rip + 0x122b2]
0x3313:	mov	rbp, rsi
0x3316:	sub	rsp, 0x3f8
0x331d:	mov	rax, qword ptr fs:[0x28]
0x3326:	mov	qword ptr [rsp + 0x3e8], rax
0x332e:	xor	eax, eax
0x3330:	call	0x2ac0


0x32cf:	push	rbx
0x32d0:	lea	rsi, [rip + 0x121c8]
0x32d7:	mov	rbx, rdi
0x32da:	mov	edx, 5
0x32df:	xor	edi, edi
0x32e1:	call	0x2c70


0x322d:	push	r12
0x322f:	push	rbp
0x3230:	or	r12, 0xffffffffffffffff
0x3234:	push	rbx
0x3235:	xor	ebx, ebx
0x3237:	mov	ebp, edi
0x3239:	mov	rcx, r12
0x323c:	mov	rdi, rsi
0x323f:	sub	rsp, 0x20
0x3243:	mov	rax, qword ptr fs:[0x28]
0x324c:	mov	qword ptr [rsp + 0x18], rax
0x3251:	xor	eax, eax
0x3253:	mov	al, bl
0x3255:	repne scasb	al, byte ptr [rdi]


0x31e0:	push	rbp
0x31e1:	push	rbx
0x31e2:	mov	rbx, rsi
0x31e5:	sub	rsp, 8
0x31e9:	call	0x10390


0x2a88:	sub	rsp, 8
0x2a8c:	mov	rax, qword ptr [rip + 0x21753d]
0x2a93:	test	rax, rax
0x2a96:	je	0x2a9a


0x3090:	jmp	qword ptr [rip + 0x216e8a]


0x13766:	mov	rdx, rsi
0x13769:	mov	rsi, r12
0x1376c:	mov	qword ptr [rsp + 8], rcx
0x13771:	call	0x2df0


0x1377f:	add	rsp, 0x10
0x13783:	mov	rdx, r12
0x13786:	mov	rsi, rbx
0x13789:	mov	rdi, rbp
0x1378c:	pop	rbx
0x1378d:	pop	rbp
0x1378e:	pop	r12
0x13790:	jmp	0x135e0


0x136bf:	mov	rdx, rsi
0x136c2:	mov	rsi, r15
0x136c5:	call	0x2df0


0x136d2:	lea	r13, [r14 + rbx]
0x136d6:	lea	r12, [r15 + rbp]
0x136da:	lea	rcx, [rbp + 1]
0x136de:	lea	rsi, [rbx + 1]
0x136e2:	mov	rdx, r15
0x136e5:	mov	rdi, r14
0x136e8:	movzx	r9d, byte ptr [r13]
0x136ed:	movzx	r8d, byte ptr [r12]
0x136f2:	mov	byte ptr [r13], 0
0x136f7:	mov	byte ptr [r12], 0
0x136fc:	mov	byte ptr [rsp + 0xf], r9b
0x13701:	mov	byte ptr [rsp + 8], r8b
0x13706:	call	0x135e0


0x2b10:	jmp	qword ptr [rip + 0x21714a]


0x2f10:	jmp	qword ptr [rip + 0x216f4a]


0x3030:	jmp	qword ptr [rip + 0x216eba]


0x134b1:	call	0x134e0


0x134d2:	add	rsp, 8
0x134d6:	mov	eax, ebx
0x134d8:	pop	rbx
0x134d9:	pop	rbp
0x134da:	pop	r12
0x134dc:	pop	r13
0x134de:	ret	


0x13480:	movabs	rax, 0x8000000000000000
0x1348a:	xor	edx, edx
0x1348c:	ret	


0x133ee:	movsd	xmm1, qword ptr [rip + 0x25ea]
0x133f6:	ucomisd	xmm1, xmm0
0x133fa:	jbe	0x13468


0x2b60:	jmp	qword ptr [rip + 0x217122]


0x13358:	ret	


0x132fd:	test	rbp, rbp
0x13300:	jne	0x13325


0x132b6:	ret	


0x131d6:	movzx	eax, al
0x131d9:	test	rax, rax
0x131dc:	jne	0x13275


0x13275:	call	qword ptr [rip + 0x206f25]


0x13130:	mov	r12d, 0xf
0x13136:	mov	ebp, 0x10
0x1313b:	jmp	0x130d3


0x130cc:	lea	r12, [rdx - 1]
0x130d0:	mov	rbp, rdx
0x130d3:	test	rsi, rsi
0x130d6:	mov	eax, 0xfe0
0x130db:	mov	qword ptr [rbx + 0x30], r12
0x130df:	cmove	rsi, rax
0x130e3:	mov	rdi, rbx
0x130e6:	mov	qword ptr [rbx], rsi
0x130e9:	call	0x13080


0x130aa:	mov	rdi, rsi
0x130ad:	jmp	rax


0x130b0:	mov	rdi, qword ptr [rdi + 0x48]
0x130b4:	jmp	rax


0x1308a:	mov	rdi, rsi
0x1308d:	jmp	rax


0x13090:	mov	rdi, qword ptr [rdi + 0x48]
0x13094:	jmp	rax


0x2c70:	jmp	qword ptr [rip + 0x21709a]


0x12f98:	mov	rbx, qword ptr [rdi]
0x12f9b:	mov	rbp, rsi
0x12f9e:	mov	qword ptr [rsp + 8], rax
0x12fa3:	mov	r12, rsp
0x12fa6:	cmp	rbx, 0x1fa400
0x12fad:	jg	0x12fca


0x13020:	call	0x2b10


0x2cd0:	jmp	qword ptr [rip + 0x21706a]


0x12e90:	mov	rax, qword ptr [rdi + 0x20]
0x12e94:	cmp	qword ptr [rdi + 0x28], rax
0x12e98:	jne	0x12e8a


0x12e8a:	jmp	0x3020


0x12e5a:	mov	rdi, rbx
0x12e5d:	pop	rbx
0x12e5e:	jmp	0x2f00


0x12e49:	call	0x2f50


0x12e12:	mov	rax, qword ptr [rsp + 0x10]
0x12e17:	xor	esi, esi
0x12e19:	mov	edx, dword ptr [rax + 0x10]
0x12e1c:	xor	eax, eax
0x12e1e:	call	0x2bd0


0x12c11:	cmp	esi, 0x406
0x12c17:	jne	0x12c60


0x2e90:	jmp	qword ptr [rip + 0x216f8a]


0x12747:	lea	rax, [rsp + 0x10]
0x1274c:	mov	r15, rsi
0x1274f:	test	rsi, rsi
0x12752:	mov	rbp, rdi
0x12755:	mov	dword ptr [rsp + 8], edx
0x12759:	mov	r14, rcx
0x1275c:	mov	r13, r8
0x1275f:	cmove	r15, rax
0x12763:	call	0x2b10


0x12aa5:	lea	rcx, [rip + 0x3c94]
0x12aac:	lea	rsi, [rip + 0x3a25]
0x12ab3:	lea	rdi, [rip + 0x3a3e]
0x12aba:	mov	edx, 0x54
0x12abf:	call	0x2d70


0x1269b:	cmp	edi, 2
0x1269e:	jae	0x126eb


0x126f4:	cmp	edi, 4
0x126f7:	lea	rsi, [rip + 0x3f03]
0x126fe:	je	0x126ac


0x12277:	lea	rax, [rsp + 0x10]
0x1227c:	mov	r15, rsi
0x1227f:	test	rsi, rsi
0x12282:	mov	rbp, rdi
0x12285:	mov	dword ptr [rsp + 8], edx
0x12289:	mov	r14, rcx
0x1228c:	mov	r13, r8
0x1228f:	cmove	r15, rax
0x12293:	call	0x2b10


0x125d5:	lea	rcx, [rip + 0x401c]
0x125dc:	lea	rsi, [rip + 0x3ef5]
0x125e3:	lea	rdi, [rip + 0x3f0e]
0x125ea:	mov	edx, 0x54
0x125ef:	call	0x2d70


0x2c90:	jmp	qword ptr [rip + 0x21708a]


0x11fd9:	call	0x12030


0x11fc2:	movzx	edx, dl
0x11fc5:	test	rdx, rdx
0x11fc8:	jne	0x11fd9


0x11f70:	test	rax, rax
0x11f73:	mov	edx, 0x80
0x11f78:	cmove	rax, rdx
0x11f7c:	test	rax, rax
0x11f7f:	jns	0x11f62


0x11f48:	movabs	rdx, 0x5555555555555553
0x11f52:	cmp	rax, rdx
0x11f55:	ja	0x11f81


0x11ef0:	test	rcx, rcx
0x11ef3:	je	0x11f18


0x11ebb:	xor	edx, edx
0x11ebd:	movabs	rax, 0x5555555555555554
0x11ec7:	div	r9
0x11eca:	cmp	rax, rcx
0x11ecd:	jbe	0x11f0b


0x11e9b:	sub	rsp, 8
0x11e9f:	call	0x12030


0x11e91:	movzx	eax, al
0x11e94:	test	rax, rax
0x11e97:	jne	0x11e9b


0x11e49:	test	rdi, rdi
0x11e4c:	jne	0x11e68


0x11e4e:	mov	rsi, rbx
0x11e51:	call	0x2f70


0x11e1b:	sub	rsp, 8
0x11e1f:	call	0x12030


0x11e11:	movzx	eax, al
0x11e14:	test	rax, rax
0x11e17:	jne	0x11e1b


0x31c8:	jmp	qword ptr [rip + 0x216e0a]


0x11cf6:	mov	eax, r10d
0x11cf9:	mov	r11d, 1
0x11cff:	add	r10d, 8
0x11d03:	add	rax, rbp
0x11d06:	mov	rax, qword ptr [rax]
0x11d09:	test	rax, rax
0x11d0c:	mov	qword ptr [r8 + r9*8], rax
0x11d10:	je	0x11d1c


0x11d4c:	mov	rax, rbx
0x11d4f:	add	rbx, 8
0x11d53:	jmp	0x11d06


0x11c28:	mov	r11d, eax
0x11c2b:	add	r11, qword ptr [r10 + 0x10]
0x11c2f:	add	eax, 8
0x11c32:	mov	dword ptr [r10], eax
0x11c35:	mov	rax, qword ptr [r11]
0x11c38:	test	rax, rax
0x11c3b:	mov	qword ptr [r8 + r9*8], rax
0x11c3f:	je	0x11c4b


0x11c6a:	mov	r11, qword ptr [r10 + 8]
0x11c6e:	lea	rax, [r11 + 8]
0x11c72:	mov	qword ptr [r10 + 8], rax
0x11c76:	jmp	0x11c35


0x11bfb:	jmp	0x117c0


0x118f8:	mov	r8, rcx
0x118fb:	mov	rcx, rdx
0x118fe:	lea	rdx, [rip + 0x47fe]
0x11905:	mov	esi, 1
0x1190a:	xor	eax, eax
0x1190c:	call	0x3100


0x117e0:	mov	r8, rdx
0x117e3:	lea	rdx, [rip + 0x490d]
0x117ea:	mov	r9, rcx
0x117ed:	xor	eax, eax
0x117ef:	mov	rcx, rsi
0x117f2:	mov	esi, 1
0x117f7:	call	0x3100


0x11791:	call	0x137b0


0x117b2:	add	rsp, 8
0x117b6:	mov	eax, ebx
0x117b8:	pop	rbx
0x117b9:	pop	rbp
0x117ba:	pop	r12
0x117bc:	pop	r13
0x117be:	ret	


0x11368:	add	rdi, 1
0x1136c:	movzx	r8d, byte ptr [rdi]
0x11370:	cmp	r8b, 0x30
0x11374:	je	0x11368


0x11212:	cmp	r9b, 0x2d
0x11216:	jne	0x11258


0x2d40:	jmp	qword ptr [rip + 0x217032]


0x2f40:	jmp	qword ptr [rip + 0x216f32]


0x10fd6:	mov	rdi, rbp
0x10fd9:	call	0x2da0


0x10f00:	or	byte ptr [rdi + 0x68], 2
0x10f04:	jmp	0x10e42


0x10e42:	mov	rcx, qword ptr [rbx + 0x48]
0x10e46:	lea	rax, [rdx + rcx]
0x10e4a:	not	rcx
0x10e4d:	mov	rdx, qword ptr [rbx + 0x38]
0x10e51:	and	rax, rcx
0x10e54:	mov	rcx, qword ptr [rbx + 0x20]
0x10e58:	mov	rsi, rax
0x10e5b:	mov	rdi, rdx
0x10e5e:	mov	qword ptr [rbx + 0x30], rax
0x10e62:	sub	rsi, rcx
0x10e65:	sub	rdi, rcx
0x10e68:	cmp	rsi, rdi
0x10e6b:	jbe	0x10e74


0x10d20:	add	rsi, qword ptr [rdx + 0x20]
0x10d24:	add	rcx, qword ptr [rdx + 0x38]
0x10d28:	mov	r12, qword ptr [rdx]
0x10d2b:	add	rbp, qword ptr [rdx + 0x28]
0x10d2f:	add	r10, qword ptr [rdx + 0x30]
0x10d33:	sub	r12, rsi
0x10d36:	add	r9, r12
0x10d39:	mov	r12, rcx
0x10d3c:	shr	r12, 9
0x10d40:	add	rcx, r9
0x10d43:	xor	rbp, r12
0x10d46:	mov	r12, qword ptr [rdx + 8]
0x10d4a:	sub	r12, rbp
0x10d4d:	add	r11, r12
0x10d50:	mov	r12, r9
0x10d53:	shl	r12, 9
0x10d57:	add	r9, r11
0x10d5a:	xor	r10, r12
0x10d5d:	mov	r12, qword ptr [rdx + 0x10]
0x10d61:	sub	r12, r10
0x10d64:	add	rbx, r12
0x10d67:	mov	r12, r11
0x10d6a:	shr	r12, 0x17
0x10d6e:	add	r11, rbx
0x10d71:	xor	rcx, r12
0x10d74:	mov	r12, qword ptr [rdx + 0x18]
0x10d78:	sub	r12, rcx
0x10d7b:	add	r8, r12
0x10d7e:	mov	r12, rbx
0x10d81:	shl	r12, 0xf
0x10d85:	add	rbx, r8
0x10d88:	xor	r9, r12
0x10d8b:	mov	r12, r8
0x10d8e:	sub	rsi, r9
0x10d91:	shr	r12, 0xe
0x10d95:	mov	qword ptr [rdx], r9
0x10d98:	xor	r11, r12
0x10d9b:	mov	r12, rsi
0x10d9e:	add	r8, rsi
0x10da1:	sub	rbp, r11
0x10da4:	shl	r12, 0x14
0x10da8:	mov	qword ptr [rdx + 8], r11
0x10dac:	xor	rbx, r12
0x10daf:	lea	r12, [rsi + rbp]
0x10db3:	mov	rsi, rbp
0x10db6:	sub	r10, rbx
0x10db9:	shr	rsi, 0x11
0x10dbd:	mov	qword ptr [rdx + 0x10], rbx
0x10dc1:	xor	r8, rsi
0x10dc4:	mov	rsi, r10
0x10dc7:	add	rbp, r10
0x10dca:	sub	rcx, r8
0x10dcd:	shl	rsi, 0xe
0x10dd1:	mov	qword ptr [rdx + 0x18], r8
0x10dd5:	xor	rsi, r12
0x10dd8:	add	r10, rcx
0x10ddb:	mov	qword ptr [rdx + 0x28], rbp
0x10ddf:	mov	qword ptr [rdx + 0x20], rsi
0x10de3:	mov	qword ptr [rdx + 0x30], r10
0x10de7:	add	rdx, 0x40
0x10deb:	mov	qword ptr [rdx - 8], rcx
0x10def:	cmp	rax, rdx
0x10df2:	jne	0x10d20


0x10c48:	add	rsi, qword ptr [rax + 0x20]
0x10c4c:	add	rcx, qword ptr [rax + 0x38]
0x10c50:	mov	r13, qword ptr [rax]
0x10c53:	add	rbp, qword ptr [rax + 0x28]
0x10c57:	add	r10, qword ptr [rax + 0x30]
0x10c5b:	sub	r13, rsi
0x10c5e:	add	r9, r13
0x10c61:	mov	r13, rcx
0x10c64:	shr	r13, 9
0x10c68:	add	rcx, r9
0x10c6b:	xor	rbp, r13
0x10c6e:	mov	r13, qword ptr [rax + 8]
0x10c72:	sub	r13, rbp
0x10c75:	add	r11, r13
0x10c78:	mov	r13, r9
0x10c7b:	shl	r13, 9
0x10c7f:	add	r9, r11
0x10c82:	xor	r10, r13
0x10c85:	mov	r13, qword ptr [rax + 0x10]
0x10c89:	sub	r13, r10
0x10c8c:	add	rbx, r13
0x10c8f:	mov	r13, r11
0x10c92:	shr	r13, 0x17
0x10c96:	add	r11, rbx
0x10c99:	xor	rcx, r13
0x10c9c:	mov	r13, qword ptr [rax + 0x18]
0x10ca0:	sub	r13, rcx
0x10ca3:	add	r8, r13
0x10ca6:	mov	r13, rbx
0x10ca9:	shl	r13, 0xf
0x10cad:	add	rbx, r8
0x10cb0:	xor	r9, r13
0x10cb3:	mov	r13, r8
0x10cb6:	sub	rsi, r9
0x10cb9:	shr	r13, 0xe
0x10cbd:	mov	qword ptr [rax], r9
0x10cc0:	xor	r11, r13
0x10cc3:	mov	r13, rsi
0x10cc6:	add	r8, rsi
0x10cc9:	sub	rbp, r11
0x10ccc:	shl	r13, 0x14
0x10cd0:	mov	qword ptr [rax + 8], r11
0x10cd4:	xor	rbx, r13
0x10cd7:	lea	r13, [rsi + rbp]
0x10cdb:	mov	rsi, rbp
0x10cde:	sub	r10, rbx
0x10ce1:	shr	rsi, 0x11
0x10ce5:	mov	qword ptr [rax + 0x10], rbx
0x10ce9:	xor	r8, rsi
0x10cec:	mov	rsi, r10
0x10cef:	add	rbp, r10
0x10cf2:	sub	rcx, r8
0x10cf5:	shl	rsi, 0xe
0x10cf9:	mov	qword ptr [rax + 0x18], r8
0x10cfd:	xor	rsi, r13
0x10d00:	add	r10, rcx
0x10d03:	mov	qword ptr [rax + 0x28], rbp
0x10d07:	mov	qword ptr [rax + 0x20], rsi
0x10d0b:	mov	qword ptr [rax + 0x30], r10
0x10d0f:	add	rax, 0x40
0x10d13:	mov	qword ptr [rax - 8], rcx
0x10d17:	cmp	r12, rax
0x10d1a:	jne	0x10c48


0x10980:	mov	r8, rdx
0x10983:	shl	r8, 0x15
0x10987:	xor	rdx, r8
0x1098a:	mov	r8, qword ptr [rax]
0x1098d:	not	rdx
0x10990:	add	rdx, qword ptr [rax + 0x400]
0x10997:	mov	r10, r8
0x1099a:	and	r10d, 0x7f8
0x109a1:	mov	r11, qword ptr [rdi + r10]
0x109a5:	mov	r10, rdx
0x109a8:	shr	r10, 5
0x109ac:	add	r11, rdx
0x109af:	xor	rdx, r10
0x109b2:	add	rcx, r11
0x109b5:	mov	qword ptr [rax], rcx
0x109b8:	shr	rcx, 8
0x109bc:	and	ecx, 0x7f8
0x109c2:	mov	r11, qword ptr [rdi + rcx]
0x109c6:	add	r11, r8
0x109c9:	mov	qword ptr [rsi], r11
0x109cc:	add	rdx, qword ptr [rax + 0x408]
0x109d3:	mov	rcx, qword ptr [rax + 8]
0x109d7:	mov	r10, rdx
0x109da:	mov	rdx, rcx
0x109dd:	and	edx, 0x7f8
0x109e3:	mov	r8, qword ptr [rdi + rdx]
0x109e7:	mov	rdx, r10
0x109ea:	shl	rdx, 0xc
0x109ee:	xor	rdx, r10
0x109f1:	add	r8, r10
0x109f4:	add	r8, r11
0x109f7:	mov	qword ptr [rax + 8], r8
0x109fb:	shr	r8, 8
0x109ff:	and	r8d, 0x7f8
0x10a06:	add	rcx, qword ptr [rdi + r8]
0x10a0a:	mov	qword ptr [rsi + 8], rcx
0x10a0e:	mov	r8, qword ptr [rax + 0x10]
0x10a12:	mov	r11, rcx
0x10a15:	add	rdx, qword ptr [rax + 0x410]
0x10a1c:	mov	rcx, r8
0x10a1f:	and	ecx, 0x7f8
0x10a25:	mov	r10, qword ptr [rdi + rcx]
0x10a29:	add	r10, rdx
0x10a2c:	mov	rcx, r10
0x10a2f:	add	rcx, r11
0x10a32:	mov	qword ptr [rax + 0x10], rcx
0x10a36:	shr	rcx, 8
0x10a3a:	and	ecx, 0x7f8
0x10a40:	mov	r10, qword ptr [rdi + rcx]
0x10a44:	mov	rcx, rdx
0x10a47:	shr	rcx, 0x21
0x10a4b:	xor	rdx, rcx
0x10a4e:	add	r10, r8
0x10a51:	mov	qword ptr [rsi + 0x10], r10
0x10a55:	mov	rcx, qword ptr [rax + 0x18]
0x10a59:	add	rdx, qword ptr [rax + 0x418]
0x10a60:	mov	r8, rcx
0x10a63:	and	r8d, 0x7f8
0x10a6a:	mov	r11, qword ptr [rdi + r8]
0x10a6e:	add	r11, rdx
0x10a71:	mov	r8, r11
0x10a74:	add	r8, r10
0x10a77:	add	rax, 0x20
0x10a7b:	add	rsi, 0x20
0x10a7f:	mov	qword ptr [rax - 8], r8
0x10a83:	shr	r8, 8
0x10a87:	and	r8d, 0x7f8
0x10a8e:	add	rcx, qword ptr [rdi + r8]
0x10a92:	mov	qword ptr [rsi - 8], rcx
0x10a96:	cmp	rax, r9
0x10a99:	jb	0x10980


0x10a9f:	lea	r9, [rdi + 0x800]
0x10aa6:	nop	word ptr cs:[rax + rax]
0x10ab0:	mov	r8, rdx
0x10ab3:	shl	r8, 0x15
0x10ab7:	xor	rdx, r8
0x10aba:	mov	r8, qword ptr [rax]
0x10abd:	not	rdx
0x10ac0:	add	rdx, qword ptr [rax - 0x400]
0x10ac7:	mov	r10, r8
0x10aca:	and	r10d, 0x7f8
0x10ad1:	mov	r11, qword ptr [rdi + r10]
0x10ad5:	mov	r10, rdx
0x10ad8:	shr	r10, 5
0x10adc:	add	r11, rdx
0x10adf:	xor	rdx, r10
0x10ae2:	add	rcx, r11
0x10ae5:	mov	qword ptr [rax], rcx
0x10ae8:	shr	rcx, 8
0x10aec:	and	ecx, 0x7f8
0x10af2:	mov	r11, qword ptr [rdi + rcx]
0x10af6:	add	r11, r8
0x10af9:	mov	qword ptr [rsi], r11
0x10afc:	add	rdx, qword ptr [rax - 0x3f8]
0x10b03:	mov	rcx, qword ptr [rax + 8]
0x10b07:	mov	r10, rdx
0x10b0a:	mov	rdx, rcx
0x10b0d:	and	edx, 0x7f8
0x10b13:	mov	r8, qword ptr [rdi + rdx]
0x10b17:	mov	rdx, r10
0x10b1a:	shl	rdx, 0xc
0x10b1e:	xor	rdx, r10
0x10b21:	add	r8, r10
0x10b24:	add	r8, r11
0x10b27:	mov	qword ptr [rax + 8], r8
0x10b2b:	shr	r8, 8
0x10b2f:	and	r8d, 0x7f8
0x10b36:	add	rcx, qword ptr [rdi + r8]
0x10b3a:	mov	qword ptr [rsi + 8], rcx
0x10b3e:	mov	r8, qword ptr [rax + 0x10]
0x10b42:	mov	r11, rcx
0x10b45:	add	rdx, qword ptr [rax - 0x3f0]
0x10b4c:	mov	rcx, r8
0x10b4f:	and	ecx, 0x7f8
0x10b55:	mov	r10, qword ptr [rdi + rcx]
0x10b59:	add	r10, rdx
0x10b5c:	mov	rcx, r10
0x10b5f:	add	rcx, r11
0x10b62:	mov	qword ptr [rax + 0x10], rcx
0x10b66:	shr	rcx, 8
0x10b6a:	and	ecx, 0x7f8
0x10b70:	mov	r10, qword ptr [rdi + rcx]
0x10b74:	mov	rcx, rdx
0x10b77:	shr	rcx, 0x21
0x10b7b:	xor	rdx, rcx
0x10b7e:	add	r10, r8
0x10b81:	mov	qword ptr [rsi + 0x10], r10
0x10b85:	mov	rcx, qword ptr [rax + 0x18]
0x10b89:	add	rdx, qword ptr [rax - 0x3e8]
0x10b90:	mov	r8, rcx
0x10b93:	and	r8d, 0x7f8
0x10b9a:	mov	r11, qword ptr [rdi + r8]
0x10b9e:	add	r11, rdx
0x10ba1:	mov	r8, r11
0x10ba4:	add	r8, r10
0x10ba7:	add	rax, 0x20
0x10bab:	add	rsi, 0x20
0x10baf:	mov	qword ptr [rax - 8], r8
0x10bb3:	shr	r8, 8
0x10bb7:	and	r8d, 0x7f8
0x10bbe:	add	rcx, qword ptr [rdi + r8]
0x10bc2:	mov	qword ptr [rsi - 8], rcx
0x10bc6:	cmp	rax, r9
0x10bc9:	jb	0x10ab0


0x3000:	jmp	qword ptr [rip + 0x216ed2]


0x107e8:	mov	r14, qword ptr [rdi + 0x18]
0x107ec:	lea	rax, [rdi + 0x838]
0x107f3:	lea	r13, [rdi + 0x20]
0x107f7:	mov	qword ptr [rsp + 8], rax
0x107fc:	cmp	rdx, r14
0x107ff:	jbe	0x108e2


0x10784:	call	0x2b10


0x10558:	mov	edi, 0x1038
0x1055d:	call	0x11de0


0x10437:	test	rdi, rdi
0x1043a:	mov	r12, rdi
0x1043d:	mov	rbp, rsi
0x10440:	je	0x104c0


0x103f8:	call	0x2b00


0x103bb:	call	0x10390


0x102d7:	call	0x2b00


0x102a5:	test	rdx, rdx
0x102a8:	je	0x102d7


0x10244:	call	0x2b00


0x101dc:	mov	dword ptr [rsp], esi
0x101df:	mov	rcx, rsp
0x101e2:	mov	rdx, -1
0x101e9:	mov	rsi, rax
0x101ec:	mov	qword ptr [rsp + 4], 0
0x101f5:	mov	qword ptr [rsp + 0xc], 0x4000000
0x101fe:	mov	qword ptr [rsp + 0x14], 0
0x10207:	mov	qword ptr [rsp + 0x1c], 0
0x10210:	mov	qword ptr [rsp + 0x24], 0
0x10219:	mov	qword ptr [rsp + 0x2c], 0
0x10222:	mov	dword ptr [rsp + 0x34], 0
0x1022a:	call	0xfa50


0x100b0:	call	0x2b00


0x1004f:	mov	dword ptr [rsp], esi
0x10052:	mov	rcx, rsp
0x10055:	mov	rsi, rax
0x10058:	mov	qword ptr [rsp + 4], 0
0x10061:	mov	qword ptr [rsp + 0xc], 0
0x1006a:	mov	qword ptr [rsp + 0x14], 0
0x10073:	mov	qword ptr [rsp + 0x1c], 0
0x1007c:	mov	qword ptr [rsp + 0x24], 0
0x10085:	mov	qword ptr [rsp + 0x2c], 0
0x1008e:	mov	dword ptr [rsp + 0x34], 0
0x10096:	call	0xfa50


0x10024:	call	0x2b00


0xffbc:	mov	dword ptr [rsp], esi
0xffbf:	mov	rcx, rsp
0xffc2:	mov	rdx, -1
0xffc9:	mov	rsi, rax
0xffcc:	mov	qword ptr [rsp + 4], 0
0xffd5:	mov	qword ptr [rsp + 0xc], 0
0xffde:	mov	qword ptr [rsp + 0x14], 0
0xffe7:	mov	qword ptr [rsp + 0x1c], 0
0xfff0:	mov	qword ptr [rsp + 0x24], 0
0xfff9:	mov	qword ptr [rsp + 0x2c], 0
0x10002:	mov	dword ptr [rsp + 0x34], 0
0x1000a:	call	0xfa50


0xfed1:	mov	rdi, qword ptr [r12 + 8]
0xfed6:	lea	rbx, [rip + 0x20a9e3]
0xfedd:	cmp	rdi, rbx
0xfee0:	je	0xfef9


0xfea6:	sub	eax, 2
0xfea9:	lea	rbx, [r12 + 0x18]
0xfeae:	shl	rax, 4
0xfeb2:	lea	rbp, [r12 + rax + 0x28]
0xfeb7:	nop	word ptr [rax + rax]
0xfec0:	mov	rdi, qword ptr [rbx]
0xfec3:	add	rbx, 0x10
0xfec7:	call	0x31c0


0xfd07:	sub	rsp, 8
0xfd0b:	call	0x2b00


0xfcf9:	test	rdx, rdx
0xfcfc:	je	0xfd07


0x2c80:	jmp	qword ptr [rip + 0x217092]


0xe6fd:	mov	rcx, qword ptr [rip + 0x20bafc]
0xe704:	lea	rdi, [rip + 0x74a5]
0xe70b:	mov	edx, 0x37
0xe710:	mov	esi, 1
0xe715:	call	0x30f0


0xe686:	mov	esi, 0x2f
0xe68b:	mov	rbx, rdi
0xe68e:	call	0x2d20


0x2ac0:	jmp	qword ptr [rip + 0x217172]


0xe412:	mov	r12d, ebp
0xe415:	and	r12d, 0xfff7f7ff
0xe41c:	jne	0xe5c0


0xe4f0:	call	0x30b0


0x3050:	jmp	qword ptr [rip + 0x216eaa]


0xe0e0:	lea	rdi, [rip + 0x7a8d]
0xe0e7:	call	0x2ac0


0xe0ab:	cmp	edi, 1
0xe0ae:	je	0xe1b0


0xdfde:	xor	eax, eax
0xdfe0:	mov	rdx, qword ptr [rsp + 8]
0xdfe5:	xor	rdx, qword ptr fs:[0x28]
0xdfee:	jne	0xe08c


0xdf9b:	movsx	eax, cl
0xdf9e:	cmp	eax, 0x20
0xdfa1:	ja	0xe000


0x3120:	jmp	qword ptr [rip + 0x216e42]


0xdd0e:	mov	rax, rcx
0xdd11:	ret	


0xdce8:	mov	rax, rdi
0xdceb:	sub	rcx, 1
0xdcef:	mul	rsi
0xdcf2:	shr	rdx, 3
0xdcf6:	lea	rax, [rdx + rdx*4]
0xdcfa:	add	rax, rax
0xdcfd:	sub	rdi, rax
0xdd00:	add	edi, 0x30
0xdd03:	test	rdx, rdx
0xdd06:	mov	byte ptr [rcx], dil
0xdd09:	mov	rdi, rdx
0xdd0c:	jne	0xdce8


0xdcbe:	mov	rax, rcx
0xdcc1:	ret	


0xdca0:	mov	eax, edi
0xdca2:	sub	rcx, 1
0xdca6:	mul	esi
0xdca8:	shr	edx, 3
0xdcab:	lea	eax, [rdx + rdx*4]
0xdcae:	add	eax, eax
0xdcb0:	sub	edi, eax
0xdcb2:	add	edi, 0x30
0xdcb5:	test	edx, edx
0xdcb7:	mov	byte ptr [rcx], dil
0xdcba:	mov	edi, edx
0xdcbc:	jne	0xdca0


0xdc5b:	mov	eax, edi
0xdc5d:	lea	rsi, [rcx - 1]
0xdc61:	imul	r9d
0xdc64:	mov	eax, edi
0xdc66:	sar	eax, 0x1f
0xdc69:	sar	edx, 2
0xdc6c:	sub	edx, eax
0xdc6e:	lea	eax, [rdx + rdx*4]
0xdc71:	lea	eax, [r8 + rax*2]
0xdc75:	sub	eax, edi
0xdc77:	test	edx, edx
0xdc79:	mov	edi, edx
0xdc7b:	mov	byte ptr [rcx - 1], al
0xdc7e:	jne	0xdc58


0xdc00:	mov	qword ptr [rsp + 0x28], 0
0xdc09:	jmp	0xdbe0


0xdb1b:	mov	rdx, qword ptr [rdi]
0xdb1e:	lea	rsi, [rax - 1]
0xdb22:	mov	qword ptr [rsp + 0x18], rsi
0xdb27:	mov	rax, qword ptr [rdx + rax*8]
0xdb2b:	mov	rcx, qword ptr [rdx + 8]
0xdb2f:	mov	qword ptr [rdi + 0x10], rsi
0xdb33:	shr	rsi, 1
0xdb36:	mov	qword ptr [rsp + 0x20], rsi
0xdb3b:	mov	qword ptr [rdx + 8], rax
0xdb3f:	mov	rbp, qword ptr [rdi]
0xdb42:	mov	qword ptr [rsp + 0x28], rcx
0xdb47:	mov	r12, qword ptr [rdi + 0x18]
0xdb4b:	mov	rax, qword ptr [rbp + 8]
0xdb4f:	mov	qword ptr [rsp + 0x10], rax
0xdb54:	je	0xdbd0


0xda80:	test	rdi, rdi
0xda83:	je	0xdac0


0xda08:	add	rbx, 1
0xda0c:	mov	qword ptr [rbp + 0x10], rbx
0xda10:	mov	qword ptr [rdi + rbx*8], r12
0xda14:	cmp	rbx, 1
0xda18:	mov	r13, qword ptr [rbp]
0xda1c:	mov	r15, qword ptr [rbp + 0x18]
0xda20:	mov	r14, qword ptr [r13 + rbx*8]
0xda25:	jne	0xda40


0x31c0:	jmp	qword ptr [rip + 0x216df2]


0xd5fd:	call	0x2b00


0xd443:	mov	r12, rsp
0xd446:	xor	ecx, ecx
0xd448:	mov	r13, rdx
0xd44b:	mov	rdx, r12
0xd44e:	mov	rbx, rdi
0xd451:	mov	rbp, rsi
0xd454:	call	0xc730


0xd207:	test	rsi, rsi
0xd20a:	js	0xd388


0xd258:	mov	rdi, rsi
0xd25b:	call	0xc640


0xd163:	cmp	rbp, rax
0xd166:	jae	0xd19c


0xd115:	cmp	qword ptr [rdi + 0x20], 0
0xd11a:	je	0xd163


0xd080:	cmp	qword ptr [r12], 0
0xd085:	je	0xd0e1


0xd0eb:	mov	qword ptr [rbp + 0x18], 0
0xd0f3:	mov	qword ptr [rbp + 0x20], 0
0xd0fb:	pop	rbx
0xd0fc:	pop	rbp
0xd0fd:	pop	r12
0xd0ff:	ret	


0xce7d:	mov	rax, rdx
0xce80:	ret	


0xce46:	xor	ebp, ebp
0xce48:	jmp	0xce34


0xcdf7:	mov	r13, rdx
0xcdfa:	mov	r12, rsi
0xcdfd:	mov	r15, rdi
0xce00:	xor	ebp, ebp
0xce02:	mov	rdi, qword ptr [r14]
0xce05:	test	rdi, rdi
0xce08:	je	0xce2a


0xcdd2:	xor	eax, eax
0xcdd4:	ret	


0xcd79:	xor	r8d, r8d
0xcd7c:	mov	rcx, qword ptr [r9]
0xcd7f:	test	rcx, rcx
0xcd82:	je	0xcdbd


0xccd3:	xor	eax, eax
0xccd5:	ret	


0xcca7:	mov	rdx, qword ptr [rdi]
0xccaa:	mov	rcx, qword ptr [rdi + 8]
0xccae:	cmp	rdx, rcx
0xccb1:	jae	0xccd8


0xcb55:	lea	rdx, [rip + 0x8f6d]
0xcb5c:	mov	esi, 1
0xcb61:	mov	rdi, r12
0xcb64:	xor	eax, eax
0xcb66:	call	0x3100


0xcaa0:	cmp	qword ptr [rcx], 0
0xcaa4:	je	0xcacd


0xcad6:	xor	eax, eax
0xcad8:	cmp	qword ptr [rdi + 0x18], rsi
0xcadc:	je	0xcae0


0xca87:	ret	


0xc8eb:	mov	rbp, rdi
0xc8ee:	mov	r13, rsi
0xc8f1:	mov	r14d, edx
0xc8f4:	nop	dword ptr [rax]
0xc8f8:	mov	r15, qword ptr [r12]
0xc8fc:	test	r15, r15
0xc8ff:	je	0xc9ba


0xc9c8:	add	rsp, 8
0xc9cc:	mov	eax, 1
0xc9d1:	pop	rbx
0xc9d2:	pop	rbp
0xc9d3:	pop	r12
0xc9d5:	pop	r13
0xc9d7:	pop	r14
0xc9d9:	pop	r15
0xc9db:	ret	


0xc8c5:	ret	


0xc864:	movss	xmm0, dword ptr [rdx + 8]
0xc869:	ucomiss	xmm0, dword ptr [rip + 0x92e4]
0xc870:	jbe	0xc8c0


0xc6cf:	mov	rax, rdi
0xc6d2:	ret	


0x2f90:	jmp	qword ptr [rip + 0x216f0a]


0x2e40:	jmp	qword ptr [rip + 0x216fb2]


0xc1a0:	xor	eax, eax
0xc1a2:	ret	


0xc0ee:	xor	ecx, ecx
0xc0f0:	xor	eax, eax
0xc0f2:	xor	r8d, r8d
0xc0f5:	mov	r11d, 1
0xc0fb:	movabs	r10, 0x3ffffff03ffffff
0xc105:	jmp	0xc13f


0xc0d0:	ret	


0xc0b5:	push	rbx
0xc0b6:	mov	ebx, esi
0xc0b8:	call	0x2e90


0x2dd0:	jmp	qword ptr [rip + 0x216fea]


0xbc12:	cmp	r12, 0x3f
0xbc16:	jbe	0xbd24


0xbd40:	mov	ebp, eax
0xbd42:	mov	edx, 0x80
0xbd47:	lea	r15, [r13 + 0x1c]
0xbd4b:	sub	rdx, rbp
0xbd4e:	cmp	rdx, rsi
0xbd51:	lea	rdi, [r15 + rbp]
0xbd55:	cmova	rdx, rsi
0xbd59:	mov	rsi, rbx
0xbd5c:	mov	r14, rdx
0xbd5f:	call	0x2e80


0xbb22:	lea	r9d, [rsi*8]
0xbb2a:	shl	edx, 3
0xbb2d:	shr	esi, 0x1d
0xbb30:	or	edx, esi
0xbb32:	lea	rsi, [rip + 0x9f47]
0xbb39:	mov	dword ptr [rbx + rdi*4 + 0x1c], r9d
0xbb3e:	mov	rdi, r8
0xbb41:	mov	dword ptr [rbx + rcx*4 + 0x1c], edx
0xbb45:	sub	rdi, rax
0xbb48:	lea	r9, [rbx + 0x1c]
0xbb4c:	lea	rcx, [rdi - 8]
0xbb50:	lea	rdx, [r9 + rax]
0xbb54:	cmp	rcx, 8
0xbb58:	jae	0xbb80


0xbb1c:	add	edx, 1
0xbb1f:	mov	dword ptr [rbx + 0x14], edx
0xbb22:	lea	r9d, [rsi*8]
0xbb2a:	shl	edx, 3
0xbb2d:	shr	esi, 0x1d
0xbb30:	or	edx, esi
0xbb32:	lea	rsi, [rip + 0x9f47]
0xbb39:	mov	dword ptr [rbx + rdi*4 + 0x1c], r9d
0xbb3e:	mov	rdi, r8
0xbb41:	mov	dword ptr [rbx + rcx*4 + 0x1c], edx
0xbb45:	sub	rdi, rax
0xbb48:	lea	r9, [rbx + 0x1c]
0xbb4c:	lea	rcx, [rdi - 8]
0xbb50:	lea	rdx, [r9 + rax]
0xbb54:	cmp	rcx, 8
0xbb58:	jae	0xbb80


0xb3bc:	mov	r15d, r10d
0xb3bf:	nop	
0xb3c0:	mov	r14d, dword ptr [rbx]
0xb3c3:	mov	edi, dword ptr [rsp - 0x20]
0xb3c7:	mov	eax, dword ptr [rsp - 0x18]
0xb3cb:	mov	esi, dword ptr [rbx + 4]
0xb3ce:	mov	r8d, dword ptr [rbx + 0xc]
0xb3d2:	mov	r10d, dword ptr [rbx + 0x14]
0xb3d6:	mov	ebp, dword ptr [rbx + 0x18]
0xb3d9:	mov	r13d, dword ptr [rbx + 0x1c]
0xb3dd:	lea	edx, [r14 + rax - 0x28955b88]
0xb3e5:	mov	eax, edi
0xb3e7:	lea	ecx, [rsi + rdi - 0x173848aa]
0xb3ee:	xor	eax, r15d
0xb3f1:	mov	dword ptr [rsp - 0x44], esi
0xb3f5:	mov	dword ptr [rsp - 0x34], r10d
0xb3fa:	and	eax, r11d
0xb3fd:	mov	r12d, dword ptr [rbx + 0x24]
0xb401:	mov	dword ptr [rsp - 0x3c], r8d
0xb406:	xor	eax, edi
0xb408:	lea	edi, [r8 + r11 - 0x3e423112]
0xb410:	mov	r8d, dword ptr [rbx + 0x2c]
0xb414:	add	eax, edx
0xb416:	mov	edx, r11d
0xb419:	rol	eax, 7
0xb41c:	xor	edx, r15d
0xb41f:	mov	dword ptr [rsp - 0x2c], r12d
0xb424:	add	eax, r11d
0xb427:	mov	dword ptr [rsp - 0x24], r8d
0xb42c:	and	edx, eax
0xb42e:	mov	r9d, eax
0xb431:	xor	edx, r15d
0xb434:	xor	r9d, r11d
0xb437:	add	edx, ecx
0xb439:	mov	ecx, dword ptr [rbx + 8]
0xb43c:	rol	edx, 0xc
0xb43f:	add	edx, eax
0xb441:	lea	esi, [rcx + r15 + 0x242070db]
0xb449:	mov	dword ptr [rsp - 0x40], ecx
0xb44d:	mov	ecx, r9d
0xb450:	and	ecx, edx
0xb452:	mov	r9d, eax
0xb455:	xor	ecx, r11d
0xb458:	xor	r9d, edx
0xb45b:	add	ecx, esi
0xb45d:	mov	esi, r9d
0xb460:	mov	r9d, dword ptr [rbx + 0x10]
0xb464:	ror	ecx, 0xf
0xb467:	add	ecx, edx
0xb469:	and	esi, ecx
0xb46b:	mov	dword ptr [rsp - 0x38], r9d
0xb470:	xor	esi, eax
0xb472:	add	esi, edi
0xb474:	lea	edi, [r9 + rax - 0xa83f051]
0xb47c:	mov	eax, edx
0xb47e:	ror	esi, 0xa
0xb481:	xor	eax, ecx
0xb483:	mov	r9d, dword ptr [rbx + 0x3c]
0xb487:	add	esi, ecx
0xb489:	and	eax, esi
0xb48b:	xor	eax, edx
0xb48d:	add	eax, edi
0xb48f:	lea	edi, [r10 + rdx + 0x4787c62a]
0xb497:	mov	edx, ecx
0xb499:	rol	eax, 7
0xb49c:	xor	edx, esi
0xb49e:	mov	r10d, ebp
0xb4a1:	add	eax, esi
0xb4a3:	mov	dword ptr [rsp - 0x1c], r10d
0xb4a8:	and	edx, eax
0xb4aa:	xor	edx, ecx
0xb4ac:	add	edx, edi
0xb4ae:	lea	edi, [rbp + rcx - 0x57cfb9ed]
0xb4b5:	mov	ebp, esi
0xb4b7:	xor	ebp, eax
0xb4b9:	rol	edx, 0xc
0xb4bc:	add	edx, eax
0xb4be:	mov	ecx, ebp
0xb4c0:	mov	ebp, eax
0xb4c2:	and	ecx, edx
0xb4c4:	xor	ebp, edx
0xb4c6:	xor	ecx, esi
0xb4c8:	add	ecx, edi
0xb4ca:	lea	edi, [r13 + rsi - 0x2b96aff]
0xb4d2:	mov	esi, ebp
0xb4d4:	ror	ecx, 0xf
0xb4d7:	mov	ebp, dword ptr [rbx + 0x20]
0xb4da:	add	ecx, edx
0xb4dc:	and	esi, ecx
0xb4de:	xor	esi, eax
0xb4e0:	mov	dword ptr [rsp - 0x30], ebp
0xb4e4:	add	esi, edi
0xb4e6:	lea	edi, [rbp + rax + 0x698098d8]
0xb4ed:	mov	eax, edx
0xb4ef:	ror	esi, 0xa
0xb4f2:	xor	eax, ecx
0xb4f4:	mov	ebp, dword ptr [rbx + 0x30]
0xb4f7:	add	esi, ecx
0xb4f9:	and	eax, esi


0xbaaa:	mov	rax, qword ptr [rsp - 8]
0xbaaf:	mov	ebx, dword ptr [rsp - 0x18]
0xbab3:	mov	dword ptr [rax], ebx
0xbab5:	mov	ebx, dword ptr [rsp - 0x20]
0xbab9:	mov	dword ptr [rax + 4], r11d
0xbabd:	mov	dword ptr [rax + 8], r10d
0xbac1:	mov	dword ptr [rax + 0xc], ebx
0xbac4:	pop	rbx
0xbac5:	pop	rbp
0xbac6:	pop	r12
0xbac8:	pop	r13
0xbaca:	pop	r14
0xbacc:	pop	r15
0xbace:	ret	


0xb231:	pop	rbx
0xb232:	mov	rax, r14
0xb235:	pop	rbp
0xb236:	pop	r12
0xb238:	pop	r13
0xb23a:	pop	r14
0xb23c:	ret	


0xb200:	mov	r12, rcx
0xb203:	mov	r13, rdi
0xb206:	mov	rbp, rdx
0xb209:	lea	rbx, [rsi + 8]
0xb20d:	jmp	0xb21f


0xb040:	lea	rsi, [rip + 0xa9b6]
0xb047:	xor	edi, edi
0xb049:	call	0x2c70


0xaff5:	lea	rsi, [rip + 0xaa1c]
0xaffc:	xor	edi, edi
0xaffe:	call	0x2c70


0xa91d:	lea	rsi, [rip + 0x97ac]
0xa924:	xor	edi, edi
0xa926:	call	0x2c70


0xa8ef:	lea	rsi, [rip + 0x97b2]
0xa8f6:	xor	edi, edi
0xa8f8:	call	0x2c70


0xa558:	mov	rax, qword ptr [rsp + 8]
0xa55d:	cmp	rax, rbp
0xa560:	jbe	0xa68d


0xa3ed:	xor	r12d, r12d
0xa3f0:	xor	ebx, ebx
0xa3f2:	cmp	qword ptr [rsp + 8], rcx
0xa3f7:	jb	0xa847


0xa2d6:	mov	ecx, 1
0xa2db:	jmp	0x9b33


0x9b31:	xor	ecx, ecx
0x9b33:	test	rax, rax
0x9b36:	js	0xa2cc


0x971a:	push	r15
0x971c:	push	r14
0x971e:	mov	rax, rdi
0x9721:	push	r13
0x9723:	push	r12
0x9725:	push	rbp
0x9726:	push	rbx
0x9727:	sub	rsp, 0x48
0x972b:	mov	rbx, qword ptr [rip + 0x210cfe]
0x9732:	mov	rbp, qword ptr [rip + 0x2108f7]
0x9739:	mov	qword ptr [rsp + 0x28], rdi
0x973e:	movzx	edi, byte ptr [rip + 0x2108f3]
0x9745:	mov	qword ptr [rsp + 0x38], rdx
0x974a:	mov	qword ptr [rsp + 0x20], rsi
0x974f:	mov	byte ptr [rsp + 0x37], dil
0x9754:	mov	rdi, qword ptr [rax + 0x28]
0x9758:	mov	qword ptr [rsp + 8], rdi
0x975d:	mov	rdi, rax
0x9760:	mov	rax, qword ptr [rax + 8]
0x9764:	mov	rdx, qword ptr [rdi + 0x20]
0x9768:	mov	r15, qword ptr [rdi]
0x976b:	cmp	rax, rdx
0x976e:	jne	0x9909


0x9a81:	xor	eax, eax
0x9a83:	ret	


0x908a:	mov	rax, qword ptr [rsp + 0x20]
0x908f:	mov	r13, r15
0x9092:	mov	r8, rbp
0x9095:	shl	r13, 5
0x9099:	neg	r13
0x909c:	shl	rax, 5
0x90a0:	sub	r8, rax
0x90a3:	cmp	r14, 1
0x90a7:	lea	rax, [rbp + r13]
0x90ac:	jbe	0x90e2


0x907d:	cmp	rsi, 1
0x9081:	mov	r13, rsi
0x9084:	ja	0x9654


0x8fd0:	cmp	rdx, rax
0x8fd3:	je	0x8fc7


0x8fb1:	cmp	rdx, rax
0x8fb4:	je	0x8fc0


0x8ca5:	mov	ecx, 1
0x8caa:	jmp	0x8aaa


0x8aa8:	xor	ecx, ecx
0x8aaa:	test	rax, rax
0x8aad:	js	0x8ca0


0x2ce0:	jmp	qword ptr [rip + 0x217062]


0x8a40:	add	rsp, 0x18
0x8a44:	mov	rsi, rbp
0x8a47:	mov	rdi, rbx
0x8a4a:	pop	rbx
0x8a4b:	pop	rbp
0x8a4c:	jmp	0x7280


0x8a05:	cmp	qword ptr [rip + 0x211e53], 0
0x8a0d:	je	0x8a29


0x8908:	lea	rsi, [rdi - 0x40]
0x890c:	lea	rdi, [rdi - 0x20]
0x8910:	call	0x86e0


0x87c0:	mov	r15, rsi
0x87c3:	shr	r15, 1
0x87c6:	mov	r14, r15
0x87c9:	sub	rsi, r15
0x87cc:	shl	r14, 5
0x87d0:	mov	qword ptr [rsp + 8], rsi
0x87d5:	neg	r14
0x87d8:	test	cl, cl
0x87da:	lea	r12, [rdi + r14]
0x87de:	jne	0x88a0


0x8718:	mov	r8, qword ptr [rbx + 8]
0x871c:	mov	rcx, qword ptr [rbp + 8]
0x8720:	mov	r13, r8
0x8723:	lea	r12, [rcx - 1]
0x8727:	sub	r13, 1
0x872b:	jne	0x8750


0x86fa:	call	0x7720


0x77c9:	movabs	rsi, 0xffffffffff0000
0x77d3:	test	qword ptr [r15 + 0x30], rsi
0x77d7:	je	0x7c80


0x77dd:	test	r13, r13
0x77e0:	setne	dil
0x77e4:	test	rdx, rdx
0x77e7:	setne	sil
0x77eb:	or	dil, sil
0x77ee:	mov	byte ptr [rsp + 8], dil
0x77f3:	jne	0x7940


0x7300:	cmp	byte ptr [rip + 0x213119], 0
0x7307:	je	0x72b4


0x72b4:	movzx	eax, byte ptr [rip + 0x212d7d]
0x72bb:	mov	rdx, r13
0x72be:	mov	esi, 1
0x72c3:	mov	rdi, r15
0x72c6:	mov	byte ptr [rbx - 1], al
0x72c9:	call	0x2f60


0x70f0:	lea	rdi, [rip + 0xf543]
0x70f7:	mov	rbp, rsi
0x70fa:	mov	ecx, 2
0x70ff:	mov	rsi, rbx
0x7102:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x70c0:	cmp	al, 0x77
0x70c2:	jne	0x71c8


0x6ccf:	cmp	byte ptr [rbx + 0xc], 1
0x6cd3:	je	0x6db0


0x6cae:	mov	rax, qword ptr [rbx]
0x6cb1:	lea	rdx, [rax + 0xd]
0x6cb5:	cmp	rdx, rbp
0x6cb8:	je	0x6cc9


0x6c3c:	call	0xb260


0x6be8:	mov	rbp, rsp
0x6beb:	lea	rsi, [rip + 0x2137ae]
0x6bf2:	xor	edi, edi
0x6bf4:	lea	rdx, [rbp + 8]
0x6bf8:	call	0x2af0


0x2af0:	jmp	qword ptr [rip + 0x21715a]


0x6b90:	mov	rdx, qword ptr [rdi + 0x30]
0x6b94:	mov	rax, qword ptr [rsi + 0x30]
0x6b98:	add	rdx, qword ptr [rdi + 0x28]
0x6b9c:	add	rax, qword ptr [rsi + 0x28]
0x6ba0:	cmp	rdx, rax
0x6ba3:	setb	al
0x6ba6:	movzx	eax, al
0x6ba9:	ret	


0x6b88:	setb	al
0x6b8b:	movzx	eax, al
0x6b8e:	ret	


0x6b18:	cmp	rcx, rax
0x6b1b:	jbe	0x6ad8


0x6a8a:	cmp	rcx, rax
0x6a8d:	jbe	0x6ad8


0x69f8:	cmp	rax, rdi
0x69fb:	jbe	0x69ea


0x698a:	cmp	rax, rdi
0x698d:	jbe	0x69ea


0x31a0:	jmp	qword ptr [rip + 0x216e02]


0x68b8:	mov	rax, qword ptr [rdi + 0x30]
0x68bc:	mov	r14, rbp
0x68bf:	mov	rdx, rax
0x68c2:	shr	rdx, 1
0x68c5:	mov	rcx, rdx
0x68c8:	sub	rax, rdx
0x68cb:	shl	rcx, 5
0x68cf:	sub	r14, rcx
0x68d2:	lea	rcx, [rdi + 0x18]
0x68d6:	jmp	0x684b


0x682d:	mov	rax, qword ptr [rdi + 0x28]
0x6831:	mov	r14, rbp
0x6834:	mov	rdx, rax
0x6837:	shr	rdx, 1
0x683a:	mov	rcx, rdx
0x683d:	sub	rax, rdx
0x6840:	shl	rcx, 5
0x6844:	sub	r14, rcx
0x6847:	lea	rcx, [rdi + 0x10]
0x684b:	mov	qword ptr [rbx + 0x30], rax
0x684f:	mov	eax, dword ptr [rdi + 0x50]
0x6852:	xor	esi, esi
0x6854:	mov	qword ptr [rbx + 0x38], rdi
0x6858:	lea	rdi, [rbx + 0x58]
0x685c:	mov	qword ptr [rbx + 0x10], rbp
0x6860:	mov	qword ptr [rbx], rbp
0x6863:	mov	qword ptr [rbx + 0x18], r14
0x6867:	lea	r13, [rbx + 0x80]
0x686e:	add	eax, 1
0x6871:	mov	qword ptr [rbx + 8], r14
0x6875:	mov	qword ptr [rbx + 0x20], rcx
0x6879:	mov	qword ptr [rbx + 0x28], rdx
0x687d:	mov	dword ptr [rbx + 0x50], eax
0x6880:	mov	byte ptr [rbx + 0x54], 0
0x6884:	call	0x3170


0x67c8:	lea	rcx, [rip - 0x95f]
0x67cf:	lea	rdx, [rip - 0x976]
0x67d6:	xor	r8d, r8d
0x67d9:	xor	esi, esi
0x67db:	mov	edi, 0x2f
0x67e0:	call	0xceb0


0x67b0:	mov	byte ptr [rbx + 0xc], 1
0x67b4:	mov	rsi, rbx
0x67b7:	call	0xd6b0


0x2ff0:	jmp	qword ptr [rip + 0x216eda]


0x64c8:	and	rbx, 0xffffffffffffffe0
0x64cc:	add	rbx, 0x20
0x64d0:	mov	rdi, rbx
0x64d3:	call	0x31c8


0x6420:	test	rdi, rdi
0x6423:	je	0x6468


0x640b:	lea	rax, [rsi + 1]
0x640f:	mov	qword ptr [rdi + rsi*8], rbx
0x6413:	pop	rbx
0x6414:	mov	qword ptr [rip + 0x21402d], rax
0x641b:	ret	


0x63a8:	lea	rdx, [rip + 0x213e91]
0x63af:	mov	esi, 1
0x63b4:	mov	edi, 1
0x63b9:	call	0x2f20


0x638e:	test	eax, eax
0x6390:	lea	rax, [rip + 0x213ea9]
0x6397:	mov	edx, 0
0x639c:	cmovns	rax, rdx
0x63a0:	add	rsp, 8
0x63a4:	ret	


0x6360:	lea	rsi, [rip + 0xf07c]
0x6367:	mov	edx, 5
0x636c:	xor	edi, edi
0x636e:	call	0x2c70


0x6331:	mov	esi, 3
0x6336:	xor	edi, edi
0x6338:	call	0x101c0


0x62f9:	mov	edi, ebp
0x62fb:	xor	esi, esi
0x62fd:	mov	qword ptr [rip + 0x214080], 0
0x6308:	call	0x2e50


0x61db:	ret	


0x618a:	mov	r8d, edx
0x618d:	lea	rdi, [rip + 0xd6ec]
0x6194:	lea	r11, [rip + 0x2144c5]
0x619b:	lea	r10, [rip + 0x2142be]
0x61a2:	lea	r9, [rip + 0x2143b7]
0x61a9:	and	r8d, 0xfffffffd
0x61ad:	sub	edx, 1
0x61b0:	sub	ecx, 0x4d
0x61b3:	cmp	cl, 0x25
0x61b6:	ja	0x61db


0x60de:	lea	rax, [rip + 0x21447b]
0x60e5:	cmp	qword ptr [rdi + 0x20], rax
0x60e9:	je	0x6168


0x60d7:	mov	byte ptr [rsi], 0x62
0x60da:	add	rsi, 1
0x60de:	lea	rax, [rip + 0x21447b]
0x60e5:	cmp	qword ptr [rdi + 0x20], rax
0x60e9:	je	0x6168


0x6080:	cmp	qword ptr [rdi + 0x28], 0
0x6085:	jne	0x6079


0x6079:	ret	


0x5fd5:	lea	rbp, [rip + 0x214084]
0x5fdc:	lea	r9, [rip + 0x21447d]
0x5fe3:	mov	r11d, 0xc
0x5fe9:	xor	ebx, ebx
0x5feb:	lea	r10, [rbx + r11]
0x5fef:	shr	r10, 1
0x5ff2:	mov	rax, r10
0x5ff5:	shl	rax, 4
0x5ff9:	mov	rax, qword ptr [rbp + rax]
0x5ffe:	movzx	edx, byte ptr [rax]
0x6001:	test	dl, dl
0x6003:	je	0x6066


0x5ebe:	movzx	r8d, dl
0x5ec2:	lea	rsi, [rcx + 1]
0x5ec6:	lea	r9d, [r8 - 0x30]
0x5eca:	cmp	r9d, 9
0x5ece:	jbe	0x5e98


0x5e19:	cmp	qword ptr [rip + 0x2141c7], 0
0x5e21:	push	rbp
0x5e22:	mov	rbp, rsp
0x5e25:	je	0x5e33


0x5e48:	ret	


0x5e00:	pop	rbp
0x5e01:	ret	


0x5de8:	mov	rax, qword ptr [rip + 0x2141f1]
0x5def:	test	rax, rax
0x5df2:	je	0x5e00


0x5db0:	pop	rbp
0x5db1:	ret	


0x5d97:	mov	rax, qword ptr [rip + 0x214222]
0x5d9e:	test	rax, rax
0x5da1:	je	0x5db0




0x3255:	repne scasb	al, byte ptr [rdi]


0x3257:	mov	edi, 2
0x325c:	not	rcx
0x325f:	lea	rdx, [rcx + r12]
0x3263:	call	0x2bf0


0x2a9a:	add	rsp, 8
0x2a9e:	ret	


0x2a98:	call	rax




0x2df0:	jmp	qword ptr [rip + 0x216fda]








0x13468:	movabs	rax, 0x7fffffffffffffff
0x13472:	mov	edx, 0x3b9ac9ff
0x13477:	ret	


0x133fc:	cvttsd2si	rsi, xmm0
0x13401:	pxor	xmm1, xmm1
0x13405:	xor	ecx, ecx
0x13407:	cvtsi2sd	xmm1, rsi
0x1340c:	subsd	xmm0, xmm1
0x13410:	pxor	xmm1, xmm1
0x13414:	mulsd	xmm0, qword ptr [rip + 0x333c]
0x1341c:	cvttsd2si	rdx, xmm0
0x13421:	cvtsi2sd	xmm1, rdx
0x13426:	ucomisd	xmm0, xmm1
0x1342a:	seta	cl
0x1342d:	add	rcx, rdx
0x13430:	movabs	rdx, 0x112e0be826d694b3
0x1343a:	mov	rax, rcx
0x1343d:	imul	rdx
0x13440:	mov	rax, rcx
0x13443:	sar	rax, 0x3f
0x13447:	sar	rdx, 0x1a
0x1344b:	sub	rdx, rax
0x1344e:	lea	rax, [rdx + rsi]
0x13452:	imul	rdx, rdx, 0x3b9aca00
0x13459:	sub	rcx, rdx
0x1345c:	mov	rdx, rcx
0x1345f:	js	0x13490




0x13352:	ret	


0x13340:	mov	rcx, qword ptr [rdx]
0x13343:	sub	rcx, rdx
0x13346:	mov	rdx, qword ptr [rdx + 8]
0x1334a:	add	rax, rcx
0x1334d:	test	rdx, rdx
0x13350:	jne	0x13340


0x13302:	pop	rbx
0x13303:	pop	rbp
0x13304:	pop	r12
0x13306:	ret	


0x13325:	call	0x2b00


0x132dd:	mov	rax, qword ptr [rsi]
0x132e0:	cmp	rax, rbp
0x132e3:	jae	0x13310


0x132e5:	mov	r12, qword ptr [rsi + 8]
0x132e9:	mov	rdi, rbx
0x132ec:	call	0x130a0


0x1329a:	mov	rax, qword ptr [rax + 8]
0x1329e:	test	rax, rax
0x132a1:	jne	0x13290


0x13295:	cmp	qword ptr [rax], rsi
0x13298:	jae	0x132b0


0x131e2:	mov	rsi, r12
0x131e5:	mov	r13, rdi
0x131e8:	call	0x13080


0x130d3:	test	rsi, rsi
0x130d6:	mov	eax, 0xfe0
0x130db:	mov	qword ptr [rbx + 0x30], r12
0x130df:	cmove	rsi, rax
0x130e3:	mov	rdi, rbx
0x130e6:	mov	qword ptr [rbx], rsi
0x130e9:	call	0x13080




0x12faf:	jmp	0x12ff8


0x12fca:	mov	rsi, rbp
0x12fcd:	mov	rdi, r12
0x12fd0:	mov	qword ptr [rsp], 0x1fa400
0x12fd8:	sub	rbx, 0x1fa400
0x12fdf:	call	0x2d00




0x12e9a:	cmp	qword ptr [rdi + 0x48], 0
0x12e9f:	jne	0x12e8a


0x3020:	jmp	qword ptr [rip + 0x216ec2]


0x2f00:	jmp	qword ptr [rip + 0x216f52]


0x2f50:	jmp	qword ptr [rip + 0x216f2a]


0x2bd0:	jmp	qword ptr [rip + 0x2170ea]


0x12c19:	mov	rax, qword ptr [rsp + 0x10]
0x12c1e:	cmp	dword ptr [rip + 0x207dd3], 0
0x12c25:	mov	dword ptr [rsp], 0x18
0x12c2c:	mov	r12d, dword ptr [rax + 0x10]
0x12c30:	mov	edx, r12d
0x12c33:	js	0x12d63


0x12c60:	cmp	esi, 0xb
0x12c63:	je	0x12c90




0x2d70:	jmp	qword ptr [rip + 0x21701a]


0x126a0:	sub	edi, 1
0x126a3:	lea	rsi, [rip + 0x3f72]
0x126aa:	jne	0x126e6


0x126eb:	lea	rsi, [rip + 0x3f4e]
0x126f2:	jmp	0x126ac


0x126ac:	test	r10d, r10d
0x126af:	movsxd	rax, r10d
0x126b2:	js	0x12702


0x12700:	jmp	0x126e6




0x11fca:	call	0x2e20


0x11f81:	sub	rsp, 8
0x11f85:	call	0x12030


0x11f62:	mov	qword ptr [rsi], rax
0x11f65:	mov	rsi, rax
0x11f68:	jmp	0x11e40


0x11f57:	mov	rdx, rax
0x11f5a:	shr	rdx, 1
0x11f5d:	lea	rax, [rdx + rax + 1]
0x11f62:	mov	qword ptr [rsi], rax
0x11f65:	mov	rsi, rax
0x11f68:	jmp	0x11e40


0x11f18:	xor	edx, edx
0x11f1a:	mov	eax, 0x80
0x11f1f:	xor	r8d, r8d
0x11f22:	div	r9
0x11f25:	test	rax, rax
0x11f28:	sete	r8b
0x11f2c:	lea	rcx, [r8 + rax]
0x11f30:	jmp	0x11ef5


0x11ef5:	mov	rax, rcx
0x11ef8:	mul	r9
0x11efb:	seto	dl
0x11efe:	test	rax, rax
0x11f01:	movzx	edx, dl
0x11f04:	js	0x11f0b


0x11f0b:	sub	rsp, 8
0x11f0f:	call	0x12030


0x11ecf:	mov	rax, rcx
0x11ed2:	shr	rax, 1
0x11ed5:	lea	rcx, [rax + rcx + 1]
0x11eda:	mov	qword ptr [rsi], rcx
0x11edd:	imul	rcx, r9
0x11ee1:	mov	rsi, rcx
0x11ee4:	jmp	0x11e40


0x11e99:	jmp	0x11e40


0x11e68:	call	0x31c0


0x2f70:	jmp	qword ptr [rip + 0x216f1a]


0x11e19:	jmp	0x11de0




0x11d1c:	test	r11b, r11b
0x11d1f:	jne	0x11d45


0x11d12:	add	r9, 1
0x11d16:	cmp	r9, 0xa
0x11d1a:	jne	0x11cf0


0x11d06:	mov	rax, qword ptr [rax]
0x11d09:	test	rax, rax
0x11d0c:	mov	qword ptr [r8 + r9*8], rax
0x11d10:	je	0x11d1c


0x11c4b:	call	0x117c0


0x11c41:	add	r9, 1
0x11c45:	cmp	r9, 0xa
0x11c49:	jne	0x11c20


0x11c35:	mov	rax, qword ptr [r11]
0x11c38:	test	rax, rax
0x11c3b:	mov	qword ptr [r8 + r9*8], rax
0x11c3f:	je	0x11c4b


0x11bf0:	add	r9, 1
0x11bf4:	cmp	qword ptr [r8 + r9*8], 0
0x11bf9:	jne	0x11bf0


0x3100:	jmp	qword ptr [rip + 0x216e52]


0x11376:	movzx	eax, r8b
0x1137a:	cmp	ecx, eax
0x1137c:	mov	r11d, eax
0x1137f:	je	0x11368


0x11258:	cmp	r10b, 0x30
0x1125c:	je	0x11250






0x2da0:	jmp	qword ptr [rip + 0x217002]


0x10e74:	mov	qword ptr [rbx + 0x28], rax
0x10e78:	mov	rdx, qword ptr [rbx + 0x88]
0x10e7f:	mov	rax, qword ptr [rbx + 0x90]
0x10e86:	sub	rax, rdx
0x10e89:	cmp	rax, 7
0x10e8d:	jbe	0x10ee0


0x10e6d:	mov	qword ptr [rbx + 0x30], rdx
0x10e71:	mov	rax, rdx
0x10e74:	mov	qword ptr [rbx + 0x28], rax
0x10e78:	mov	rdx, qword ptr [rbx + 0x88]
0x10e7f:	mov	rax, qword ptr [rbx + 0x90]
0x10e86:	sub	rax, rdx
0x10e89:	cmp	rax, 7
0x10e8d:	jbe	0x10ee0


0x10df8:	pop	rbx
0x10df9:	mov	qword ptr [rdi + 0x810], 0
0x10e04:	mov	qword ptr [rdi + 0x808], 0
0x10e0f:	pop	rbp
0x10e10:	mov	qword ptr [rdi + 0x800], 0
0x10e1b:	pop	r12
0x10e1d:	pop	r13
0x10e1f:	ret	


0x10ab0:	mov	r8, rdx
0x10ab3:	shl	r8, 0x15
0x10ab7:	xor	rdx, r8
0x10aba:	mov	r8, qword ptr [rax]
0x10abd:	not	rdx
0x10ac0:	add	rdx, qword ptr [rax - 0x400]
0x10ac7:	mov	r10, r8
0x10aca:	and	r10d, 0x7f8
0x10ad1:	mov	r11, qword ptr [rdi + r10]
0x10ad5:	mov	r10, rdx
0x10ad8:	shr	r10, 5
0x10adc:	add	r11, rdx
0x10adf:	xor	rdx, r10
0x10ae2:	add	rcx, r11
0x10ae5:	mov	qword ptr [rax], rcx
0x10ae8:	shr	rcx, 8
0x10aec:	and	ecx, 0x7f8
0x10af2:	mov	r11, qword ptr [rdi + rcx]
0x10af6:	add	r11, r8
0x10af9:	mov	qword ptr [rsi], r11
0x10afc:	add	rdx, qword ptr [rax - 0x3f8]
0x10b03:	mov	rcx, qword ptr [rax + 8]
0x10b07:	mov	r10, rdx
0x10b0a:	mov	rdx, rcx
0x10b0d:	and	edx, 0x7f8
0x10b13:	mov	r8, qword ptr [rdi + rdx]
0x10b17:	mov	rdx, r10
0x10b1a:	shl	rdx, 0xc
0x10b1e:	xor	rdx, r10
0x10b21:	add	r8, r10
0x10b24:	add	r8, r11
0x10b27:	mov	qword ptr [rax + 8], r8
0x10b2b:	shr	r8, 8
0x10b2f:	and	r8d, 0x7f8
0x10b36:	add	rcx, qword ptr [rdi + r8]
0x10b3a:	mov	qword ptr [rsi + 8], rcx
0x10b3e:	mov	r8, qword ptr [rax + 0x10]
0x10b42:	mov	r11, rcx
0x10b45:	add	rdx, qword ptr [rax - 0x3f0]
0x10b4c:	mov	rcx, r8
0x10b4f:	and	ecx, 0x7f8
0x10b55:	mov	r10, qword ptr [rdi + rcx]
0x10b59:	add	r10, rdx
0x10b5c:	mov	rcx, r10
0x10b5f:	add	rcx, r11
0x10b62:	mov	qword ptr [rax + 0x10], rcx
0x10b66:	shr	rcx, 8
0x10b6a:	and	ecx, 0x7f8
0x10b70:	mov	r10, qword ptr [rdi + rcx]
0x10b74:	mov	rcx, rdx
0x10b77:	shr	rcx, 0x21
0x10b7b:	xor	rdx, rcx
0x10b7e:	add	r10, r8
0x10b81:	mov	qword ptr [rsi + 0x10], r10
0x10b85:	mov	rcx, qword ptr [rax + 0x18]
0x10b89:	add	rdx, qword ptr [rax - 0x3e8]
0x10b90:	mov	r8, rcx
0x10b93:	and	r8d, 0x7f8
0x10b9a:	mov	r11, qword ptr [rdi + r8]
0x10b9e:	add	r11, rdx
0x10ba1:	mov	r8, r11
0x10ba4:	add	r8, r10
0x10ba7:	add	rax, 0x20
0x10bab:	add	rsi, 0x20
0x10baf:	mov	qword ptr [rax - 8], r8
0x10bb3:	shr	r8, 8
0x10bb7:	and	r8d, 0x7f8
0x10bbe:	add	rcx, qword ptr [rdi + r8]
0x10bc2:	mov	qword ptr [rsi - 8], rcx
0x10bc6:	cmp	rax, r9
0x10bc9:	jb	0x10ab0


0x10bcf:	mov	qword ptr [rdi + 0x800], rdx
0x10bd6:	mov	qword ptr [rdi + 0x808], rcx
0x10bdd:	ret	




0x108e2:	mov	r15, rax
0x108e5:	sub	r15, r14
0x108e8:	lea	rax, [r15 + 0x800]
0x108ef:	mov	qword ptr [rsp + 8], rax
0x108f4:	jmp	0x108b6


0x10805:	mov	esi, 0x800
0x1080a:	mov	rdi, rbx
0x1080d:	mov	rdx, r14
0x10810:	sub	rsi, r14
0x10813:	add	rsi, qword ptr [rsp + 8]
0x10818:	add	rbx, r14
0x1081b:	sub	rbp, r14
0x1081e:	call	0x2e80


0x104c0:	mov	edi, 0x1038
0x104c5:	call	0x11de0


0x10442:	lea	rsi, [rip + 0x5cab]
0x10449:	call	0x13500


0x2b00:	jmp	qword ptr [rip + 0x217152]


0x102aa:	mov	qword ptr [rsp + 0x28], rsi
0x102af:	mov	qword ptr [rsp + 0x30], rdx
0x102b4:	mov	rcx, rsp
0x102b7:	mov	rdx, r8
0x102ba:	mov	rsi, r9
0x102bd:	call	0xfa50


0xfef9:	lea	rbx, [rip + 0x20a290]
0xff00:	cmp	r12, rbx
0xff03:	je	0xff14


0xfee2:	call	0x31c0


0xfcfe:	mov	qword ptr [rdi + 0x28], rsi
0xfd02:	mov	qword ptr [rdi + 0x30], rdx
0xfd06:	ret	




0x30f0:	jmp	qword ptr [rip + 0x216e5a]


0x2d20:	jmp	qword ptr [rip + 0x217042]




0xe422:	mov	rdi, rbx
0xe425:	call	0x2dc0


0xe5c0:	call	0x2b10


0x30b0:	jmp	qword ptr [rip + 0x216e7a]




0xe1b0:	call	0xdf10


0xe0b4:	mov	edi, 0x53
0xe0b9:	call	0x3050


0xdff4:	add	rsp, 0x18
0xdff8:	ret	


0xe08c:	call	0x2ca0


0xdfa3:	movabs	rax, 0x100003e00
0xdfad:	mov	esi, 1
0xdfb2:	bt	rax, rcx
0xdfb6:	mov	rdx, rax
0xdfb9:	jb	0xdfd3


0xe000:	sub	ecx, 0x30
0xe003:	xor	eax, eax
0xe005:	cmp	cl, 9
0xe008:	ja	0xdfe0




0xdc80:	sub	rcx, 2
0xdc84:	mov	byte ptr [rsi - 1], 0x2d
0xdc88:	mov	rax, rcx
0xdc8b:	ret	


0xdc58:	mov	rcx, rsi
0xdc5b:	mov	eax, edi
0xdc5d:	lea	rsi, [rcx - 1]
0xdc61:	imul	r9d
0xdc64:	mov	eax, edi
0xdc66:	sar	eax, 0x1f
0xdc69:	sar	edx, 2
0xdc6c:	sub	edx, eax
0xdc6e:	lea	eax, [rdx + rdx*4]
0xdc71:	lea	eax, [r8 + rax*2]
0xdc75:	sub	eax, edi
0xdc77:	test	edx, edx
0xdc79:	mov	edi, edx
0xdc7b:	mov	byte ptr [rcx - 1], al
0xdc7e:	jne	0xdc58


0xdc4e:	mov	rax, rcx
0xdc51:	ret	


0xdc30:	mov	eax, edi
0xdc32:	sub	rcx, 1
0xdc36:	mul	esi
0xdc38:	shr	edx, 3
0xdc3b:	lea	eax, [rdx + rdx*4]
0xdc3e:	add	eax, eax
0xdc40:	sub	edi, eax
0xdc42:	add	edi, 0x30
0xdc45:	test	edx, edx
0xdc47:	mov	byte ptr [rcx], dil
0xdc4a:	mov	edi, edx
0xdc4c:	jne	0xdc30


0xdbe0:	mov	rax, qword ptr [rsp + 0x28]
0xdbe5:	add	rsp, 0x38
0xdbe9:	pop	rbx
0xdbea:	pop	rbp
0xdbeb:	pop	r12
0xdbed:	pop	r13
0xdbef:	pop	r14
0xdbf1:	pop	r15
0xdbf3:	ret	


0xdbd0:	lea	rcx, [rbp + 8]
0xdbd4:	nop	dword ptr [rax]
0xdbd8:	mov	rax, qword ptr [rsp + 0x10]
0xdbdd:	mov	qword ptr [rcx], rax
0xdbe0:	mov	rax, qword ptr [rsp + 0x28]
0xdbe5:	add	rsp, 0x38
0xdbe9:	pop	rbx
0xdbea:	pop	rbp
0xdbeb:	pop	r12
0xdbed:	pop	r13
0xdbef:	pop	r14
0xdbf1:	pop	r15
0xdbf3:	ret	


0xdb56:	mov	r14d, 1
0xdb5c:	jmp	0xdb84


0xdac0:	test	rsi, rsi
0xdac3:	mov	eax, 0x10
0xdac8:	mov	edx, 8
0xdacd:	cmove	rsi, rax
0xdad1:	mov	rax, rdx
0xdad4:	xor	ecx, ecx
0xdad6:	mul	rsi
0xdad9:	jo	0xdaea


0xda85:	movabs	rax, 0xaaaaaaaaaaaaaa9
0xda8f:	cmp	rsi, rax
0xda92:	ja	0xdae5


0xda27:	jmp	0xda78


0xda40:	mov	r12, rbx
0xda43:	mov	rsi, r14
0xda46:	shr	r12, 1
0xda49:	lea	rbp, [r13 + r12*8]
0xda4e:	mov	rdi, qword ptr [rbp]
0xda52:	call	r15




0xd388:	mov	rax, rsi
0xd38b:	pxor	xmm0, xmm0
0xd38f:	shr	rax, 1
0xd392:	and	esi, 1
0xd395:	or	rax, rsi
0xd398:	cvtsi2ss	xmm0, rax
0xd39d:	addss	xmm0, xmm0
0xd3a1:	jmp	0xd219


0xd210:	pxor	xmm0, xmm0
0xd214:	cvtsi2ss	xmm0, rsi
0xd219:	divss	xmm0, dword ptr [r12 + 8]
0xd220:	ucomiss	xmm0, dword ptr [rip + 0x8945]
0xd227:	jae	0xd360


0xd19c:	mov	rdi, qword ptr [r12 + 0x48]
0xd1a1:	test	rdi, rdi
0xd1a4:	je	0xd1c1


0xd11c:	cmp	rbp, rax
0xd11f:	jae	0xd19c


0xd0e1:	add	r12, 0x10
0xd0e5:	cmp	qword ptr [rbp + 8], r12
0xd0e9:	ja	0xd080


0xd087:	mov	rbx, qword ptr [r12 + 8]
0xd08c:	mov	rax, qword ptr [rbp + 0x40]
0xd090:	test	rbx, rbx
0xd093:	je	0xd0c5


0xce60:	mov	rax, rdx
0xce63:	add	rdi, 1
0xce67:	shl	rax, 5
0xce6b:	sub	rax, rdx
0xce6e:	xor	edx, edx
0xce70:	add	rax, rcx
0xce73:	movzx	ecx, byte ptr [rdi]
0xce76:	div	rsi
0xce79:	test	cl, cl
0xce7b:	jne	0xce60


0xce34:	add	rsp, 8
0xce38:	mov	rax, rbp
0xce3b:	pop	rbx
0xce3c:	pop	rbp
0xce3d:	pop	r12
0xce3f:	pop	r13
0xce41:	pop	r14
0xce43:	pop	r15
0xce45:	ret	


0xce2a:	add	r14, 0x10
0xce2e:	cmp	qword ptr [r15 + 8], r14
0xce32:	ja	0xce02


0xce0a:	mov	rbx, r14
0xce0d:	jmp	0xce13


0xcdbd:	add	r9, 0x10
0xcdc1:	cmp	qword ptr [rdi + 8], r9
0xcdc5:	ja	0xcd7c


0xcd84:	cmp	rdx, r8
0xcd87:	jbe	0xcdc7


0xccb3:	mov	rax, qword ptr [rdx]
0xccb6:	test	rax, rax
0xccb9:	jne	0xccd6


0xccd8:	sub	rsp, 8
0xccdc:	call	0x2b00


0xcb4c:	add	rsi, 0x10
0xcb50:	cmp	rsi, rdi
0xcb53:	jb	0xcb20


0xcb26:	mov	rax, qword ptr [rsi + 8]
0xcb2a:	mov	edx, 1
0xcb2f:	test	rax, rax
0xcb32:	je	0xcb45


0xcacd:	add	rcx, 0x10
0xcad1:	cmp	rcx, r8
0xcad4:	jb	0xcaa0


0xcaa6:	mov	rax, qword ptr [rcx + 8]
0xcaaa:	add	rsi, 1
0xcaae:	add	rdx, 1
0xcab2:	test	rax, rax
0xcab5:	je	0xcacd


0xcae0:	cmp	qword ptr [rdi + 0x20], rdx
0xcae4:	sete	al
0xcae7:	ret	


0xcade:	ret	


0xca7c:	add	rsi, 0x10
0xca80:	cmp	rsi, rdi
0xca83:	jb	0xca50


0xca56:	mov	rdx, qword ptr [rsi + 8]
0xca5a:	mov	ecx, 1
0xca5f:	test	rdx, rdx
0xca62:	je	0xca75


0xc9ba:	add	r12, 0x10
0xc9be:	cmp	qword ptr [r13 + 8], r12
0xc9c2:	ja	0xc8f8


0xc905:	mov	rbx, qword ptr [r12 + 8]
0xc90a:	test	rbx, rbx
0xc90d:	jne	0xc92c


0xc8c0:	mov	qword ptr [rdi], rcx
0xc8c3:	xor	eax, eax
0xc8c5:	ret	


0xc872:	movss	xmm1, dword ptr [rip + 0x92de]
0xc87a:	ucomiss	xmm1, xmm0
0xc87d:	jbe	0xc8c0


0xc6c0:	test	rax, rax
0xc6c3:	jne	0xc6cf


0xc687:	test	rcx, rcx
0xc68a:	je	0xc6c5






0xc13f:	test	cl, cl
0xc141:	jne	0xc110




0xbd24:	test	r12, r12
0xbd27:	jne	0xbe98


0xbc1c:	test	bl, 3
0xbc1f:	je	0xbd08


0x2e80:	jmp	qword ptr [rip + 0x216f92]


0xbb5a:	test	cl, 4
0xbb5d:	jne	0xbbd0


0xbb80:	mov	rax, qword ptr [rip + 0x9ef9]
0xbb87:	lea	rdi, [rdx + 8]
0xbb8b:	and	rdi, 0xfffffffffffffff8
0xbb8f:	mov	qword ptr [rdx], rax
0xbb92:	mov	rax, qword ptr [rsi + rcx - 8]
0xbb97:	mov	qword ptr [rdx + rcx - 8], rax
0xbb9c:	sub	rdx, rdi
0xbb9f:	add	rcx, rdx
0xbba2:	sub	rsi, rdx
0xbba5:	shr	rcx, 3
0xbba9:	rep movsq	qword ptr [rdi], qword ptr [rsi]


0xb4fb:	xor	eax, edx
0xb4fd:	add	eax, edi
0xb4ff:	lea	edi, [r12 + rdx - 0x74bb0851]
0xb507:	mov	edx, ecx
0xb509:	rol	eax, 7
0xb50c:	xor	edx, esi
0xb50e:	mov	r12d, dword ptr [rbx + 0x38]
0xb512:	add	eax, esi
0xb514:	and	edx, eax
0xb516:	xor	edx, ecx
0xb518:	add	edx, edi
0xb51a:	mov	edi, dword ptr [rbx + 0x28]
0xb51d:	rol	edx, 0xc
0xb520:	add	edx, eax
0xb522:	mov	dword ptr [rsp - 0x28], edi
0xb526:	lea	edi, [rdi + rcx - 0xa44f]
0xb52d:	mov	ecx, esi
0xb52f:	xor	ecx, eax
0xb531:	and	ecx, edx
0xb533:	xor	ecx, esi
0xb535:	add	ecx, edi
0xb537:	lea	edi, [r8 + rsi - 0x76a32842]
0xb53f:	mov	esi, eax
0xb541:	ror	ecx, 0xf
0xb544:	xor	esi, edx
0xb546:	mov	r8d, dword ptr [rbx + 0x34]
0xb54a:	add	ecx, edx
0xb54c:	add	rbx, 0x40
0xb550:	and	esi, ecx
0xb552:	xor	esi, eax
0xb554:	add	esi, edi
0xb556:	lea	edi, [rbp + rax + 0x6b901122]
0xb55d:	mov	eax, edx
0xb55f:	ror	esi, 0xa
0xb562:	xor	eax, ecx
0xb564:	add	esi, ecx
0xb566:	and	eax, esi
0xb568:	xor	eax, edx
0xb56a:	add	eax, edi
0xb56c:	lea	edi, [r8 + rdx - 0x2678e6d]
0xb574:	mov	edx, ecx
0xb576:	rol	eax, 7
0xb579:	xor	edx, esi
0xb57b:	add	eax, esi
0xb57d:	and	edx, eax
0xb57f:	xor	edx, ecx
0xb581:	add	edx, edi
0xb583:	lea	edi, [r12 + rcx - 0x5986bc72]
0xb58b:	mov	ecx, esi
0xb58d:	rol	edx, 0xc
0xb590:	xor	ecx, eax
0xb592:	add	edx, eax
0xb594:	and	ecx, edx
0xb596:	xor	ecx, esi
0xb598:	add	ecx, edi
0xb59a:	lea	edi, [r9 + rsi + 0x49b40821]
0xb5a2:	mov	esi, eax
0xb5a4:	ror	ecx, 0xf
0xb5a7:	xor	esi, edx
0xb5a9:	add	ecx, edx
0xb5ab:	and	esi, ecx
0xb5ad:	xor	esi, eax
0xb5af:	add	esi, edi
0xb5b1:	mov	edi, dword ptr [rsp - 0x44]
0xb5b5:	ror	esi, 0xa
0xb5b8:	add	esi, ecx
0xb5ba:	lea	edi, [rdi + rax - 0x9e1da9e]
0xb5c1:	mov	eax, ecx
0xb5c3:	xor	eax, esi
0xb5c5:	and	eax, edx
0xb5c7:	xor	eax, ecx
0xb5c9:	add	eax, edi
0xb5cb:	lea	edi, [r10 + rdx - 0x3fbf4cc0]
0xb5d3:	mov	edx, esi
0xb5d5:	rol	eax, 5
0xb5d8:	add	eax, esi
0xb5da:	xor	edx, eax
0xb5dc:	and	edx, ecx
0xb5de:	xor	edx, esi
0xb5e0:	add	edx, edi
0xb5e2:	mov	edi, dword ptr [rsp - 0x24]
0xb5e6:	rol	edx, 9
0xb5e9:	add	edx, eax
0xb5eb:	lea	edi, [rdi + rcx + 0x265e5a51]
0xb5f2:	mov	ecx, eax
0xb5f4:	xor	ecx, edx
0xb5f6:	and	ecx, esi
0xb5f8:	xor	ecx, eax
0xb5fa:	add	ecx, edi
0xb5fc:	lea	edi, [r14 + rsi - 0x16493856]
0xb604:	mov	esi, edx
0xb606:	rol	ecx, 0xe
0xb609:	add	ecx, edx
0xb60b:	xor	esi, ecx
0xb60d:	and	esi, eax
0xb60f:	xor	esi, edx
0xb611:	add	esi, edi
0xb613:	mov	edi, dword ptr [rsp - 0x34]
0xb617:	ror	esi, 0xc


0xb21f:	mov	rdx, r12
0xb222:	mov	rsi, rbp
0xb225:	mov	rdi, r13
0xb228:	call	0x2df0


0xa68d:	lea	rax, [rsp + 0x40]
0xa692:	lea	r15, [rsp + 0x48]
0xa697:	mov	qword ptr [rsp + 0x10], rbp
0xa69c:	mov	qword ptr [rsp + 0x28], rax
0xa6a1:	nop	dword ptr [rax]
0xa6a8:	mov	rbp, qword ptr [rsp + 8]
0xa6ad:	mov	rdx, qword ptr [rsp + 0x28]
0xa6b2:	mov	rdi, r14
0xa6b5:	mov	rsi, rbp
0xa6b8:	call	0x8a70


0xa566:	sub	rax, rbp
0xa569:	mov	rbx, rbp
0xa56c:	xor	r13d, r13d
0xa56f:	mov	qword ptr [rsp + 0x10], rax
0xa574:	lea	rax, [rsp + 0x50]
0xa579:	shl	rbx, 4
0xa57d:	add	rbx, r14
0xa580:	xor	r15d, r15d
0xa583:	mov	qword ptr [rsp + 0x20], r14
0xa588:	mov	qword ptr [rsp + 0x18], rax
0xa58d:	lea	rax, [rsp + 0x48]
0xa592:	mov	qword ptr [rsp + 0x28], rbp
0xa597:	mov	r12, qword ptr [rsp + 0x30]
0xa59c:	mov	qword ptr [rsp + 0x38], rax
0xa5a1:	jmp	0xa5ef


0xa847:	mov	r9, r14
0xa84a:	mov	r10, r14
0xa84d:	mov	rsi, qword ptr [rsp + 8]
0xa852:	xor	edx, edx
0xa854:	jmp	0xa48d


0x9b33:	test	rax, rax
0x9b36:	js	0xa2cc


0xa2cc:	call	0x12030


0x9b3c:	test	rcx, rcx
0x9b3f:	jne	0xa2cc


0x9774:	mov	rax, qword ptr [rdi + 0x10]
0x9778:	mov	rdi, qword ptr [rsp + 8]
0x977d:	sub	rbp, 0x22
0x9781:	add	rdi, 1
0x9785:	mov	qword ptr [rsp + 0x10], rdi
0x978a:	mov	rdi, qword ptr [rsp + 0x28]
0x978f:	mov	r12, qword ptr [rdi + 0x18]
0x9793:	movsx	edi, byte ptr [rsp + 0x37]
0x9798:	mov	dword ptr [rsp + 0x30], edi
0x979c:	nop	dword ptr [rax]
0x97a0:	add	r12, r15
0x97a3:	lea	r13, [r15 + rdx]
0x97a7:	mov	rdx, rax
0x97aa:	shl	rdx, 5
0x97ae:	mov	r14, r12
0x97b1:	sub	r14, rdx
0x97b4:	mov	rdx, qword ptr [rsp + 8]
0x97b9:	imul	rdx, rax
0x97bd:	sub	r12, rdx
0x97c0:	sub	r12, r13
0x97c3:	test	rax, rax
0x97c6:	je	0x9a1b


0x9909:	sub	rax, rdx
0x990c:	mov	rdi, r15
0x990f:	lea	rsi, [r15 + rax]
0x9913:	call	0x2fc0


0x90e2:	cmp	r15, 1
0x90e6:	jbe	0x9102


0x90ae:	mov	rdx, r15
0x90b1:	mov	rcx, r8
0x90b4:	mov	rdi, rax
0x90b7:	shr	rdx, 1
0x90ba:	mov	rsi, r14
0x90bd:	mov	qword ptr [rsp + 0x10], r8
0x90c2:	shl	rdx, 5
0x90c6:	mov	qword ptr [rsp + 8], rax
0x90cb:	sub	rcx, rdx
0x90ce:	mov	rdx, rcx
0x90d1:	xor	ecx, ecx
0x90d3:	call	0x87a0


0x9654:	lea	rcx, [rsp + 0x50]
0x9659:	lea	rdi, [rsp + 0x48]
0x965e:	lea	rdx, [rip + 0x7b]
0x9665:	xor	esi, esi
0x9667:	call	0x2ae0


0x8fc7:	ret	


0x8fd5:	cmp	qword ptr [rsi + 0x28], 0
0x8fda:	jne	0x8fc7


0x8fc0:	cmp	qword ptr [rsi + 0x30], 0
0x8fc5:	je	0x8fb6


0x8fb6:	jmp	0x6930


0x8aaa:	test	rax, rax
0x8aad:	js	0x8ca0


0x8ca0:	call	0x12030


0x8ab3:	test	rcx, rcx
0x8ab6:	jne	0x8ca0




0x8a29:	movdqu	xmm0, xmmword ptr [rbx]
0x8a2d:	movaps	xmmword ptr [rip + 0x211e2c], xmm0
0x8a34:	movdqu	xmm0, xmmword ptr [rbx + 0x10]
0x8a39:	movaps	xmmword ptr [rip + 0x211e30], xmm0
0x8a40:	add	rsp, 0x18
0x8a44:	mov	rsi, rbp
0x8a47:	mov	rdi, rbx
0x8a4a:	pop	rbx
0x8a4b:	pop	rbp
0x8a4c:	jmp	0x7280


0x8a0f:	lea	rsi, [rip + 0x211e4a]
0x8a16:	mov	qword ptr [rsp + 8], rdx
0x8a1b:	call	0x86e0


0x87e4:	mov	rsi, qword ptr [rsp + 8]
0x87e9:	xor	ecx, ecx
0x87eb:	mov	rdi, r12
0x87ee:	call	0x87a0


0x88a0:	mov	rsi, qword ptr [rsp + 8]
0x88a5:	add	r14, rdx
0x88a8:	mov	ecx, 1
0x88ad:	mov	rdx, r14
0x88b0:	mov	rdi, r12
0x88b3:	call	0x87a0


0x872d:	xor	eax, eax
0x872f:	test	r12, r12
0x8732:	setne	al
0x8735:	neg	eax
0x8737:	cmp	byte ptr [rip + 0x211cfd], 0
0x873e:	je	0x8742


0x8750:	test	r12, r12
0x8753:	mov	eax, 1
0x8758:	je	0x8737


0x7c80:	cmp	byte ptr [r15 + 0x38], 0
0x7c85:	jne	0x77dd


0x77f9:	movzx	edx, byte ptr [rcx]
0x77fc:	mov	byte ptr [rcx], 0
0x77ff:	movzx	ecx, byte ptr [rax]
0x7802:	mov	byte ptr [rax], 0
0x7805:	cmp	byte ptr [r15 + 0x32], 0
0x780a:	mov	byte ptr [rsp + 0x36], dl
0x780e:	mov	byte ptr [rsp + 0x37], cl
0x7812:	jne	0x7a0d


0x7940:	lea	rdi, [rbp + r9 + 2]
0x7945:	cmp	rdi, 0xfa0
0x794c:	ja	0x7d80


0x7309:	cmp	r15, rbx
0x730c:	mov	r12, rdi
0x730f:	jb	0x7341


0x2f60:	jmp	qword ptr [rip + 0x216f22]


0x7102:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x7104:	seta	al
0x7107:	sbb	al, 0
0x7109:	test	al, al
0x710b:	jne	0x71a0


0x70c8:	test	rdi, rdi
0x70cb:	je	0x70dd


0x71c8:	lea	rcx, [rip + 0xcb89]
0x71cf:	lea	rsi, [rip + 0xe2ac]
0x71d6:	lea	rdi, [rip + 0xcdd3]
0x71dd:	mov	edx, 0x3d6
0x71e2:	call	0x2d70


0x6db0:	mov	edi, dword ptr [rbx + 8]
0x6db3:	call	0x6740


0x6cd9:	lea	rdx, [rsp + 0x18]
0x6cde:	lea	rsi, [rip + 0x2136bb]
0x6ce5:	xor	edi, edi
0x6ce7:	mov	r12, qword ptr [rbx]
0x6cea:	lea	r15, [rsp + 0x10]
0x6cef:	call	0x2af0


0x6cc9:	mov	r13, rbx
0x6ccc:	mov	rbx, rax
0x6ccf:	cmp	byte ptr [rbx + 0xc], 1
0x6cd3:	je	0x6db0


0x6cba:	mov	rbx, rax
0x6cbd:	mov	rax, qword ptr [rbx]
0x6cc0:	lea	rdx, [rax + 0xd]
0x6cc4:	cmp	rdx, rbp
0x6cc7:	jne	0x6cba




0x6ad8:	test	r9, r9
0x6adb:	je	0x6b7d


0x6b1d:	test	r10, r10
0x6b20:	lea	r8, [r10 - 1]
0x6b24:	lea	rsi, [rip + 0x213c35]
0x6b2b:	jne	0x6b39


0x6a8f:	test	r10, r10
0x6a92:	lea	r8, [r10 - 1]
0x6a96:	jne	0x6aa9


0x69ea:	add	rdi, r9
0x69ed:	cmp	rax, rdi
0x69f0:	cmova	rax, rdi
0x69f4:	ret	


0x69fd:	test	r10, r10
0x6a00:	lea	r8, [r10 - 1]
0x6a04:	lea	rcx, [rip + 0x213d55]
0x6a0b:	jne	0x6a19


0x698f:	test	r10, r10
0x6992:	lea	r8, [r10 - 1]
0x6996:	jne	0x69a9




0x684b:	mov	qword ptr [rbx + 0x30], rax
0x684f:	mov	eax, dword ptr [rdi + 0x50]
0x6852:	xor	esi, esi
0x6854:	mov	qword ptr [rbx + 0x38], rdi
0x6858:	lea	rdi, [rbx + 0x58]
0x685c:	mov	qword ptr [rbx + 0x10], rbp
0x6860:	mov	qword ptr [rbx], rbp
0x6863:	mov	qword ptr [rbx + 0x18], r14
0x6867:	lea	r13, [rbx + 0x80]
0x686e:	add	eax, 1
0x6871:	mov	qword ptr [rbx + 8], r14
0x6875:	mov	qword ptr [rbx + 0x20], rcx
0x6879:	mov	qword ptr [rbx + 0x28], rdx
0x687d:	mov	dword ptr [rbx + 0x50], eax
0x6880:	mov	byte ptr [rbx + 0x54], 0
0x6884:	call	0x3170


0x3170:	jmp	qword ptr [rip + 0x216e1a]




0x6468:	test	rsi, rsi
0x646b:	mov	eax, 0x10
0x6470:	mov	edx, 8
0x6475:	cmove	rsi, rax
0x6479:	mov	rax, rdx
0x647c:	xor	ecx, ecx
0x647e:	mul	rsi
0x6481:	jo	0x6492


0x6425:	movabs	rax, 0xaaaaaaaaaaaaaa9
0x642f:	cmp	rsi, rax
0x6432:	ja	0x648d


0x2f20:	jmp	qword ptr [rip + 0x216f42]


0x2e50:	jmp	qword ptr [rip + 0x216faa]


0x2b20:	jmp	qword ptr [rip + 0x217142]


0x61b8:	movzx	ecx, cl
0x61bb:	movsxd	rcx, dword ptr [rdi + rcx*4]
0x61bf:	add	rcx, rdi
0x61c2:	jmp	rcx


0x6168:	mov	byte ptr [rsi], 0x64
0x616b:	add	rsi, 1
0x616f:	jmp	0x60eb


0x60eb:	cmp	qword ptr [rdi + 0x28], 0
0x60f0:	mov	rax, rsi
0x60f3:	je	0x60fc


0x6087:	movzx	eax, byte ptr [rdi + 0x30]
0x608b:	test	al, al
0x608d:	jne	0x60c0


0x6066:	mov	rdx, rdi
0x6069:	jmp	0x6033


0x6005:	movzx	ecx, byte ptr [rdi]
0x6008:	cmp	byte ptr [r9 + rcx], dl
0x600c:	jb	0x6050


0x5fc8:	add	rdi, 1
0x5fcc:	movzx	eax, byte ptr [rdi]
0x5fcf:	cmp	byte ptr [rdx + rax], 0
0x5fd3:	jne	0x5fc8


0x5e98:	movsx	r8d, byte ptr [rcx + 1]
0x5e9d:	cmp	al, dl
0x5e9f:	cmovb	eax, edx
0x5ea2:	xor	r10d, r10d
0x5ea5:	cmp	r8d, r11d
0x5ea8:	mov	edx, r8d
0x5eab:	jne	0x5ebb


0x5ed0:	test	r10b, r10b
0x5ed3:	jne	0x5ef0


0x5e33:	call	0x5d80


0x5e27:	mov	rdi, qword ptr [rip + 0x2141da]
0x5e2e:	call	0x31d0


0x5df4:	pop	rbp
0x5df5:	jmp	rax


0x5da3:	pop	rbp
0x5da4:	jmp	rax


0x2bf0:	jmp	qword ptr [rip + 0x2170da]




0x13490:	sub	rax, 1
0x13494:	add	rdx, 0x3b9aca00
0x1349b:	ret	


0x13461:	ret	


0x13310:	mov	qword ptr [rbx + 0x18], rbp
0x13314:	mov	qword ptr [rbx + 0x10], rbp
0x13318:	mov	qword ptr [rbx + 0x20], rax
0x1331c:	mov	qword ptr [rbx + 8], rsi
0x13320:	pop	rbx
0x13321:	pop	rbp
0x13322:	pop	r12
0x13324:	ret	


0x132a3:	xor	eax, eax
0x132a5:	ret	


0x13290:	cmp	rsi, rax
0x13293:	jbe	0x1329a


0x132b0:	mov	eax, 1
0x132b5:	ret	


0x12ff8:	mov	rsi, rbp
0x12ffb:	mov	rdi, r12
0x12ffe:	mov	qword ptr [rsp], rbx
0x13002:	call	0x2d00


0x2d00:	jmp	qword ptr [rip + 0x217052]


0x12ea1:	push	r12
0x12ea3:	push	rbp
0x12ea4:	mov	r12d, edx
0x12ea7:	push	rbx
0x12ea8:	mov	rbp, rsi
0x12eab:	mov	rbx, rdi
0x12eae:	call	0x2e90










0x12d63:	xor	esi, esi
0x12d65:	xor	eax, eax
0x12d67:	call	0x2bd0


0x12c39:	xor	eax, eax
0x12c3b:	mov	esi, 0x406
0x12c40:	call	0x2bd0


0x12c90:	mov	edi, ebp
0x12c92:	xor	eax, eax
0x12c94:	call	0x2bd0


0x12c65:	jg	0x12cc0




0x126e6:	call	0x2b00


0x12702:	lea	rbx, [rip + 0x3f30]
0x12709:	mov	byte ptr [rsp + 6], dl
0x1270d:	mov	byte ptr [rsp + 7], 0
0x12712:	lea	r13, [rsp + 6]
0x12717:	sub	rbx, rax
0x1271a:	jmp	0x126c3


0x126b4:	shl	rax, 5
0x126b8:	lea	rbx, [rip + 0x3f7a]
0x126bf:	mov	r13, qword ptr [rcx + rax]
0x126c3:	mov	edx, 5
0x126c8:	xor	edi, edi
0x126ca:	call	0x2c70


0x2e20:	jmp	qword ptr [rip + 0x216fc2]


0x11f06:	test	rdx, rdx
0x11f09:	je	0x11eda




0x11d21:	call	0x117c0


0x11d45:	mov	dword ptr [rsp + 8], r10d
0x11d4a:	jmp	0x11d21


0x11cf0:	cmp	r10d, 0x2f
0x11cf4:	ja	0x11d4c


0x11c20:	mov	eax, dword ptr [r10]
0x11c23:	cmp	eax, 0x2f
0x11c26:	ja	0x11c6a




0x11381:	cmp	r9b, 0x2d
0x11385:	je	0x113d0


0x11220:	add	rsi, 1
0x11224:	movzx	eax, byte ptr [rsi]
0x11227:	cmp	al, 0x30
0x11229:	je	0x11220


0x1122b:	cmp	ecx, eax
0x1122d:	je	0x11220


0x11250:	add	rdi, 1
0x11254:	movzx	r10d, byte ptr [rdi]
0x11258:	cmp	r10b, 0x30
0x1125c:	je	0x11250


0x1125e:	movzx	r8d, r10b
0x11262:	cmp	ecx, r8d
0x11265:	mov	eax, r8d
0x11268:	je	0x11250




0x10ee0:	lea	rdi, [rbx + 0x70]
0x10ee4:	mov	esi, 8
0x10ee9:	call	0x13190


0x10e8f:	mov	qword ptr [rdx], r12
0x10e92:	mov	rdx, qword ptr [rbx + 0xe0]
0x10e99:	mov	rax, qword ptr [rbx + 0xe8]
0x10ea0:	add	qword ptr [rbx + 0x88], 8
0x10ea8:	sub	rax, rdx
0x10eab:	cmp	rax, 7
0x10eaf:	ja	0x10ec9


0x108b6:	mov	rsi, qword ptr [rsp + 8]
0x108bb:	mov	rdx, rbp
0x108be:	mov	rdi, rbx
0x108c1:	sub	r14, rbp
0x108c4:	call	0x2e80




0xff14:	pop	rbx
0xff15:	mov	dword ptr [rip + 0x20a259], 1
0xff1f:	pop	rbp
0xff20:	pop	r12
0xff22:	ret	


0xff05:	mov	rdi, r12
0xff08:	call	0x31c0






0x2dc0:	jmp	qword ptr [rip + 0x216ff2]




0x2ca0:	jmp	qword ptr [rip + 0x217082]


0xdfd3:	add	rdi, 1
0xdfd7:	movzx	ecx, byte ptr [rdi]
0xdfda:	test	cl, cl
0xdfdc:	jne	0xdfc0


0xdfbb:	jmp	0xe000


0xe00a:	mov	edx, 0xa
0xe00f:	mov	rsi, rsp
0xe012:	mov	qword ptr [rsp], 0
0xe01a:	call	0x3080


0xdfe0:	mov	rdx, qword ptr [rsp + 8]
0xdfe5:	xor	rdx, qword ptr fs:[0x28]
0xdfee:	jne	0xe08c


0xdb84:	mov	rdx, r14
0xdb87:	lea	rbx, [r14 + r14]
0xdb8b:	shl	rdx, 4
0xdb8f:	cmp	qword ptr [rsp + 0x18], rbx
0xdb94:	lea	r15, [rbp + rdx]
0xdb99:	mov	rdi, qword ptr [r15]
0xdb9c:	jbe	0xdb63


0xdaea:	mov	ecx, 1
0xdaef:	jmp	0xdadb


0xdadb:	test	rax, rax
0xdade:	js	0xdae5


0xda94:	mov	rax, rsi
0xda97:	shr	rax, 1
0xda9a:	lea	rsi, [rsi + rax + 1]
0xda9f:	mov	qword ptr [rbp + 8], rsi
0xdaa3:	shl	rsi, 3
0xdaa7:	call	0x11e40


0xdae5:	call	0x12030


0xda78:	lea	rdx, [r13 + 8]
0xda7c:	jmp	0xda5e


0xd219:	divss	xmm0, dword ptr [r12 + 8]
0xd220:	ucomiss	xmm0, dword ptr [rip + 0x8945]
0xd227:	jae	0xd360


0xd22d:	ucomiss	xmm0, dword ptr [rip + 0x893c]
0xd234:	jb	0xd3b0


0xd360:	xor	ebx, ebx
0xd362:	mov	rcx, qword ptr [rsp + 0x58]
0xd367:	xor	rcx, qword ptr fs:[0x28]
0xd370:	mov	eax, ebx
0xd372:	jne	0xd40a


0xd191:	add	rbp, 0x10
0xd195:	cmp	qword ptr [r12 + 8], rbp
0xd19a:	ja	0xd170


0xd1c1:	mov	rdi, qword ptr [r12]
0xd1c5:	call	0x31c0


0xd0c5:	test	rax, rax
0xd0c8:	je	0xd0d0


0xce02:	mov	rdi, qword ptr [r14]
0xce05:	test	rdi, rdi
0xce08:	je	0xce2a


0xce13:	mov	rsi, r13
0xce16:	call	r12


0xcdc7:	mov	rax, r8
0xcdca:	ret	


0xcd7c:	mov	rcx, qword ptr [r9]
0xcd7f:	test	rcx, rcx
0xcd82:	je	0xcdbd


0xcd89:	mov	qword ptr [rsi + r8*8], rcx
0xcd8d:	mov	rcx, qword ptr [r9 + 8]
0xcd91:	lea	rax, [r8 + 1]
0xcd95:	test	rcx, rcx
0xcd98:	je	0xcdba


0xccd6:	ret	


0xcb20:	cmp	qword ptr [rsi], 0
0xcb24:	je	0xcb4c


0xcb45:	cmp	rbx, rdx
0xcb48:	cmovb	rbx, rdx
0xcb4c:	add	rsi, 0x10
0xcb50:	cmp	rsi, rdi
0xcb53:	jb	0xcb20


0xca50:	cmp	qword ptr [rsi], 0
0xca54:	je	0xca7c


0xca85:	ret	


0xca75:	cmp	rax, rcx
0xca78:	cmovb	rax, rcx
0xca7c:	add	rsi, 0x10
0xca80:	cmp	rsi, rdi
0xca83:	jb	0xca50


0xc8f8:	mov	r15, qword ptr [r12]
0xc8fc:	test	r15, r15
0xc8ff:	je	0xc9ba


0xc90f:	jmp	0xc96b


0xc92c:	mov	r15, qword ptr [rbx]
0xc92f:	mov	rdi, rbp
0xc932:	mov	rsi, r15
0xc935:	call	0xc700


0xc87f:	movss	xmm1, dword ptr [rdx + 0xc]
0xc884:	ucomiss	xmm1, dword ptr [rip + 0x92d1]
0xc88b:	jbe	0xc8c0


0xc6c5:	add	rdi, 2
0xc6c9:	cmp	rdi, -1
0xc6cd:	jne	0xc668


0xc68c:	mov	r8d, 0x10
0xc692:	mov	esi, 9
0xc697:	mov	ecx, 3
0xc69c:	jmp	0xc6a9


0xc143:	cmp	dl, 0x2e
0xc146:	je	0xc178


0xc110:	movsx	ecx, dl
0xc113:	sub	ecx, 0x41
0xc116:	cmp	ecx, 0x39
0xc119:	ja	0xc128


0xbd2d:	add	rsp, 8
0xbd31:	pop	rbx
0xbd32:	pop	rbp
0xbd33:	pop	r12
0xbd35:	pop	r13
0xbd37:	pop	r14
0xbd39:	pop	r15
0xbd3b:	ret	


0xbe98:	lea	rbp, [r13 + 0x1c]
0xbe9c:	jmp	0xbc90


0xbd08:	mov	rbp, r12
0xbd0b:	mov	rdi, rbx
0xbd0e:	mov	rdx, r13
0xbd11:	and	rbp, 0xffffffffffffffc0
0xbd15:	and	r12d, 0x3f
0xbd19:	mov	rsi, rbp
0xbd1c:	add	rbx, rbp
0xbd1f:	call	0xb360


0xbc25:	cmp	r12, 0x40
0xbc29:	lea	rbp, [r13 + 0x1c]
0xbc2d:	je	0xbc90




0xbb5f:	test	rcx, rcx
0xbb62:	je	0xbbac


0xbbd0:	mov	eax, dword ptr [rip + 0x9eaa]
0xbbd6:	mov	dword ptr [rdx], eax
0xbbd8:	mov	eax, dword ptr [rsi + rcx - 4]
0xbbdc:	mov	dword ptr [rdx + rcx - 4], eax
0xbbe0:	jmp	0xbbac


0xbbac:	mov	rdx, rbx
0xbbaf:	mov	rsi, r8
0xbbb2:	mov	rdi, r9
0xbbb5:	call	0xb360


0xbba9:	rep movsq	qword ptr [rdi], qword ptr [rsi]


0xb61a:	add	esi, ecx
0xb61c:	lea	edi, [rdi + rax - 0x29d0efa3]
0xb623:	mov	eax, ecx
0xb625:	xor	eax, esi
0xb627:	and	eax, edx
0xb629:	xor	eax, ecx
0xb62b:	add	eax, edi
0xb62d:	mov	edi, dword ptr [rsp - 0x28]
0xb631:	rol	eax, 5
0xb634:	add	eax, esi
0xb636:	lea	edi, [rdi + rdx + 0x2441453]
0xb63d:	mov	edx, esi
0xb63f:	xor	edx, eax
0xb641:	and	edx, ecx
0xb643:	xor	edx, esi
0xb645:	add	edx, edi
0xb647:	lea	edi, [r9 + rcx - 0x275e197f]
0xb64f:	mov	ecx, eax
0xb651:	rol	edx, 9
0xb654:	add	edx, eax
0xb656:	xor	ecx, edx
0xb658:	and	ecx, esi
0xb65a:	xor	ecx, eax
0xb65c:	add	ecx, edi
0xb65e:	mov	edi, dword ptr [rsp - 0x38]
0xb662:	mov	r10d, dword ptr [rsp - 0x2c]
0xb667:	rol	ecx, 0xe
0xb66a:	add	ecx, edx
0xb66c:	lea	edi, [rdi + rsi - 0x182c0438]
0xb673:	mov	esi, edx
0xb675:	xor	esi, ecx
0xb677:	and	esi, eax
0xb679:	xor	esi, edx
0xb67b:	add	esi, edi
0xb67d:	lea	edi, [r10 + rax + 0x21e1cde6]
0xb685:	mov	eax, ecx
0xb687:	ror	esi, 0xc
0xb68a:	mov	r10d, dword ptr [rsp - 0x30]
0xb68f:	add	esi, ecx
0xb691:	xor	eax, esi
0xb693:	and	eax, edx
0xb695:	xor	eax, ecx
0xb697:	add	eax, edi
0xb699:	lea	edi, [r12 + rdx - 0x3cc8f82a]
0xb6a1:	mov	edx, esi
0xb6a3:	rol	eax, 5
0xb6a6:	add	eax, esi
0xb6a8:	xor	edx, eax
0xb6aa:	and	edx, ecx
0xb6ac:	xor	edx, esi
0xb6ae:	add	edx, edi
0xb6b0:	mov	edi, dword ptr [rsp - 0x3c]
0xb6b4:	rol	edx, 9
0xb6b7:	add	edx, eax
0xb6b9:	lea	edi, [rdi + rcx - 0xb2af279]
0xb6c0:	mov	ecx, eax
0xb6c2:	xor	ecx, edx
0xb6c4:	and	ecx, esi
0xb6c6:	lea	esi, [r10 + rsi + 0x455a14ed]
0xb6ce:	mov	r10d, edx
0xb6d1:	xor	ecx, eax
0xb6d3:	add	ecx, edi
0xb6d5:	rol	ecx, 0xe
0xb6d8:	add	ecx, edx
0xb6da:	xor	r10d, ecx
0xb6dd:	mov	edi, r10d
0xb6e0:	and	edi, eax
0xb6e2:	xor	edi, edx
0xb6e4:	add	edi, esi
0xb6e6:	lea	esi, [r8 + rax - 0x561c16fb]
0xb6ee:	mov	eax, ecx
0xb6f0:	ror	edi, 0xc
0xb6f3:	add	edi, ecx
0xb6f5:	xor	eax, edi
0xb6f7:	lea	r10d, [rbp + rdi - 0x72d5b376]
0xb6ff:	and	eax, edx
0xb701:	xor	eax, ecx
0xb703:	mov	dword ptr [rsp - 0x14], r10d
0xb708:	add	eax, esi
0xb70a:	mov	esi, dword ptr [rsp - 0x40]
0xb70e:	rol	eax, 5
0xb711:	add	eax, edi
0xb713:	lea	esi, [rsi + rdx - 0x3105c08]
0xb71a:	mov	edx, edi
0xb71c:	xor	edx, eax
0xb71e:	and	edx, ecx
0xb720:	lea	ecx, [r13 + rcx + 0x676f02d9]
0xb728:	xor	edx, edi
0xb72a:	add	edx, esi
0xb72c:	mov	esi, eax
0xb72e:	rol	edx, 9
0xb731:	add	edx, eax
0xb733:	xor	esi, edx
0xb735:	and	esi, edi
0xb737:	xor	esi, eax
0xb739:	add	esi, ecx
0xb73b:	mov	ecx, edx
0xb73d:	rol	esi, 0xe
0xb740:	add	esi, edx


0xa5ef:	mov	rax, qword ptr [rbx]
0xa5f2:	lea	rdi, [rip + 0xc041]
0xa5f9:	mov	ecx, 2
0xa5fe:	mov	rsi, rax
0xa601:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xa48d:	sub	rcx, rdx
0xa490:	cmp	rcx, rsi
0xa493:	jae	0xa521


0x9b45:	lea	rdi, [r15*8]
0x9b4d:	sub	rdi, r15
0x9b50:	shl	rdi, 3
0x9b54:	call	0x11de0


0x9a1b:	cmp	r12, qword ptr [rsp + 0x10]
0x9a20:	mov	rax, r15
0x9a23:	mov	r15, r13
0x9a26:	mov	r13, rax
0x9a29:	ja	0x97eb


0x97cc:	mov	r9, qword ptr [r14 + 8]
0x97d0:	add	r9, qword ptr [r14]
0x97d3:	mov	r15, r13
0x97d6:	mov	r13, r9
0x97d9:	nop	dword ptr [rax]
0x97e0:	cmp	r12, qword ptr [rsp + 0x10]
0x97e5:	jbe	0x9a2f


0x2fc0:	jmp	qword ptr [rip + 0x216ef2]


0x9102:	mov	rsi, r14
0x9105:	mov	qword ptr [rbx], rbp
0x9108:	mov	qword ptr [rbx + 8], rax
0x910c:	shl	rsi, 5
0x9110:	mov	qword ptr [rbx + 0x10], rax
0x9114:	mov	rdi, r12
0x9117:	sub	r13, rsi
0x911a:	mov	rsi, rbx
0x911d:	add	rbp, r13
0x9120:	lea	r13, [r12 + 8]
0x9125:	mov	qword ptr [rbx + 0x18], rbp
0x9129:	lea	rbp, [r12 + 0x30]
0x912e:	call	0x6930


0x90e8:	xor	ecx, ecx
0x90ea:	mov	rdx, r8
0x90ed:	mov	rsi, r15
0x90f0:	mov	rdi, rbp
0x90f3:	mov	qword ptr [rsp + 8], rax
0x90f8:	call	0x87a0


0x2ae0:	jmp	qword ptr [rip + 0x217162]


0x8fdc:	jmp	0x6930


0x8abc:	lea	rdi, [r12*8]
0x8ac4:	call	0x11de0


0x8742:	add	rsp, 8
0x8746:	pop	rbx
0x8747:	pop	rbp
0x8748:	pop	r12
0x874a:	pop	r13
0x874c:	ret	


0x8740:	neg	eax
0x8742:	add	rsp, 8
0x8746:	pop	rbx
0x8747:	pop	rbp
0x8748:	pop	r12
0x874a:	pop	r13
0x874c:	ret	


0x8737:	cmp	byte ptr [rip + 0x211cfd], 0
0x873e:	je	0x8742


0x875a:	cmp	byte ptr [rip + 0x212120], 0
0x8761:	mov	rsi, qword ptr [rbp]
0x8765:	mov	rdi, qword ptr [rbx]
0x8768:	jne	0x8790


0x7c8b:	test	r13, r13
0x7c8e:	je	0x8570


0x7818:	cmp	byte ptr [r15 + 0x34], 0
0x781d:	jne	0x7b48


0x7a0d:	movzx	eax, byte ptr [r12]
0x7a12:	mov	rdi, r12
0x7a15:	cmp	byte ptr [r14 + rax], 0
0x7a1a:	je	0x7a2e


0x7952:	lea	rsi, [rsp + 0x250]
0x795a:	test	rbp, rbp
0x795d:	mov	qword ptr [rsp + 0x58], 0
0x7966:	lea	rdi, [rsi + rbp + 1]
0x796b:	je	0x7daf


0x7d80:	mov	qword ptr [rsp + 0x20], rdx
0x7d85:	mov	qword ptr [rsp + 0x10], r9
0x7d8a:	call	0x11de0


0x7341:	add	r15, 1
0x7345:	movzx	eax, byte ptr [r15 - 1]
0x734a:	cmp	al, 9
0x734c:	jne	0x7320


0x7311:	jmp	0x73b9




0x7111:	mov	rax, qword ptr [rip + 0x2130b8]
0x7118:	mov	byte ptr [rip + 0x213319], 1
0x711f:	mov	rdi, rax
0x7122:	mov	esi, 2
0x7127:	mov	qword ptr [rsp + 8], rax
0x712c:	call	0xc0b0


0x71a0:	mov	rdi, rbx
0x71a3:	xor	eax, eax
0x71a5:	mov	esi, 0x80000
0x71aa:	call	0x3010


0x70dd:	mov	rax, qword ptr [rip + 0x2130e4]
0x70e4:	add	rsp, 0x18
0x70e8:	pop	rbx
0x70e9:	pop	rbp
0x70ea:	ret	


0x70cd:	xor	esi, esi
0x70cf:	mov	edi, 1
0x70d4:	call	0x2d30


0x6b7d:	ret	


0x6ae1:	cmp	byte ptr [rdx + 0x31], 0
0x6ae5:	je	0x6b0a


0x6b2d:	jmp	0x6ad8


0x6b39:	movzx	edi, byte ptr [rax]
0x6b3c:	cmp	byte ptr [rsi + rdi], 0
0x6b40:	jne	0x6b30


0x6a98:	jmp	0x6ad8


0x6aa9:	movsx	esi, byte ptr [rax]
0x6aac:	cmp	edi, esi
0x6aae:	jne	0x6aa0


0x6a0d:	jmp	0x69c3


0x6a19:	movzx	esi, byte ptr [rdi]
0x6a1c:	cmp	byte ptr [rcx + rsi], 0
0x6a20:	jne	0x6a10


0x6998:	jmp	0x69c3


0x69a9:	movsx	ecx, byte ptr [rdi]
0x69ac:	cmp	esi, ecx
0x69ae:	jne	0x69a0




0x6492:	mov	ecx, 1
0x6497:	jmp	0x6483


0x6483:	test	rax, rax
0x6486:	js	0x648d


0x6434:	mov	rax, rsi
0x6437:	shr	rax, 1
0x643a:	lea	rsi, [rsi + rax + 1]
0x643f:	mov	qword ptr [rip + 0x213ffa], rsi
0x6446:	shl	rsi, 3
0x644a:	call	0x11e40


0x648d:	call	0x12030








0x60fc:	cmp	byte ptr [rdi + 0x34], 0
0x6100:	je	0x6109


0x60f5:	add	rax, 1
0x60f9:	mov	byte ptr [rsi], 0x66
0x60fc:	cmp	byte ptr [rdi + 0x34], 0
0x6100:	je	0x6109


0x608f:	cmp	byte ptr [rdi + 0x31], 0
0x6093:	jne	0x6079


0x60c0:	xor	eax, eax
0x60c2:	ret	


0x6033:	test	rsi, rsi
0x6036:	je	0x603b


0x6050:	mov	r11, r10
0x6053:	cmp	rbx, r11
0x6056:	jb	0x5feb


0x600e:	ja	0x6060


0x5ead:	movzx	edx, byte ptr [rcx + 2]
0x5eb1:	lea	rsi, [rcx + 2]
0x5eb5:	mov	r10d, 1
0x5ebb:	mov	rcx, rsi
0x5ebe:	movzx	r8d, dl
0x5ec2:	lea	rsi, [rcx + 1]
0x5ec6:	lea	r9d, [r8 - 0x30]
0x5eca:	cmp	r9d, 9
0x5ece:	jbe	0x5e98


0x5ebb:	mov	rcx, rsi
0x5ebe:	movzx	r8d, dl
0x5ec2:	lea	rsi, [rcx + 1]
0x5ec6:	lea	r9d, [r8 - 0x30]
0x5eca:	cmp	r9d, 9
0x5ece:	jbe	0x5e98


0x5ed5:	cmp	r8d, dword ptr [rip + 0x2149ac]
0x5edc:	je	0x5f00


0x5ef0:	sub	rcx, 1
0x5ef4:	mov	qword ptr [rdi], rcx
0x5ef7:	ret	


0x31d0:	jmp	qword ptr [rip + 0x216e12]






0x12c67:	cmp	esi, 4
0x12c6a:	je	0x12d40


0x12cc0:	cmp	esi, 0x407
0x12cc6:	jg	0x12d10


0x126c3:	mov	edx, 5
0x126c8:	xor	edi, edi
0x126ca:	call	0x2c70




0x11eda:	mov	qword ptr [rsi], rcx
0x11edd:	imul	rcx, r9
0x11ee1:	mov	rsi, rcx
0x11ee4:	jmp	0x11e40


0x113d0:	add	rsi, 1
0x113d4:	movzx	r10d, byte ptr [rsi]
0x113d8:	cmp	r10b, 0x30
0x113dc:	je	0x113d0


0x11387:	cmp	edx, eax
0x11389:	je	0x114d0


0x1122f:	cmp	edx, eax
0x11231:	je	0x114f0


0x1126a:	cmp	r9b, 0x30
0x1126e:	jne	0x1127e


0x10eb1:	lea	rdi, [rbx + 0xc8]
0x10eb8:	mov	esi, 8
0x10ebd:	call	0x13190


0x10ec9:	mov	qword ptr [rdx], rbp
0x10ecc:	add	qword ptr [rbx + 0xe0], 8
0x10ed4:	add	qword ptr [rbx], 1
0x10ed8:	pop	rbx
0x10ed9:	pop	rbp
0x10eda:	pop	r12
0x10edc:	ret	






0xdfc0:	movsx	eax, cl
0xdfc3:	cmp	eax, 0x20
0xdfc6:	ja	0xe000


0x3080:	jmp	qword ptr [rip + 0x216e92]


0xdb63:	mov	rsi, qword ptr [rsp + 0x10]
0xdb68:	call	r12


0xdb9e:	lea	r13, [rbx + 1]
0xdba2:	lea	r8, [rbp + r13*8]
0xdba7:	mov	rsi, qword ptr [r8]
0xdbaa:	mov	qword ptr [rsp + 8], r8
0xdbaf:	call	r12


0xdae0:	test	rcx, rcx
0xdae3:	je	0xda9f


0xda5e:	mov	qword ptr [rdx], r14
0xda61:	add	rsp, 8
0xda65:	xor	eax, eax
0xda67:	pop	rbx
0xda68:	pop	rbp
0xda69:	pop	r12
0xda6b:	pop	r13
0xda6d:	pop	r14
0xda6f:	pop	r15
0xda71:	ret	


0xd3b0:	cvttss2si	rsi, xmm0
0xd3b5:	jmp	0xd258


0xd23a:	subss	xmm0, dword ptr [rip + 0x892e]
0xd242:	movabs	rax, 0x8000000000000000
0xd24c:	cvttss2si	rsi, xmm0
0xd251:	xor	rsi, rax
0xd254:	nop	dword ptr [rax]
0xd258:	mov	rdi, rsi
0xd25b:	call	0xc640


0xd378:	add	rsp, 0x60
0xd37c:	pop	rbx
0xd37d:	pop	rbp
0xd37e:	pop	r12
0xd380:	ret	


0xd40a:	call	0x2ca0


0xd170:	mov	rdi, qword ptr [rbp + 8]
0xd174:	test	rdi, rdi
0xd177:	je	0xd191


0xd156:	add	rbp, 0x10
0xd15a:	cmp	rax, rbp
0xd15d:	ja	0xd128


0xd131:	mov	rbx, rbp
0xd134:	jmp	0xd143


0xd0d0:	mov	qword ptr [r12], 0
0xd0d8:	mov	qword ptr [r12 + 8], 0
0xd0e1:	add	r12, 0x10
0xd0e5:	cmp	qword ptr [rbp + 8], r12
0xd0e9:	ja	0xd080


0xd0ca:	mov	rdi, qword ptr [r12]
0xd0ce:	call	rax


0xd0a6:	mov	rdx, qword ptr [rbx + 8]
0xd0aa:	mov	rcx, qword ptr [rbp + 0x48]
0xd0ae:	mov	qword ptr [rbx], 0
0xd0b5:	test	rdx, rdx
0xd0b8:	mov	qword ptr [rbx + 8], rcx
0xd0bc:	mov	qword ptr [rbp + 0x48], rbx
0xd0c0:	mov	rbx, rdx
0xd0c3:	jne	0xd098


0xd09d:	mov	rdi, qword ptr [rbx]
0xd0a0:	call	rax


0xcdba:	mov	r8, rax
0xcdbd:	add	r9, 0x10
0xcdc1:	cmp	qword ptr [rdi + 8], r9
0xcdc5:	ja	0xcd7c


0xccc9:	mov	rax, qword ptr [rdx]
0xcccc:	test	rax, rax
0xcccf:	je	0xccc0


0xcb38:	mov	rax, qword ptr [rax + 8]
0xcb3c:	add	rdx, 1
0xcb40:	test	rax, rax
0xcb43:	jne	0xcb38


0xcac0:	mov	rax, qword ptr [rax + 8]
0xcac4:	add	rdx, 1
0xcac8:	test	rax, rax
0xcacb:	jne	0xcac0


0xca68:	mov	rdx, qword ptr [rdx + 8]
0xca6c:	add	rcx, 1
0xca70:	test	rdx, rdx
0xca73:	jne	0xca68


0xc96b:	test	r14b, r14b
0xc96e:	mov	qword ptr [r12 + 8], 0
0xc977:	jne	0xc9ba


0xc88d:	movss	xmm1, dword ptr [rdx]
0xc891:	ucomiss	xmm1, dword ptr [rip + 0x92c8]
0xc898:	jb	0xc8c0


0xc668:	mov	rax, rdi
0xc66b:	mov	rcx, rdi
0xc66e:	mul	r9
0xc671:	mov	rax, rdx
0xc674:	shr	rax, 1
0xc677:	lea	rax, [rax + rax*2]
0xc67b:	sub	rcx, rax
0xc67e:	cmp	rdi, 9
0xc682:	mov	rax, rcx
0xc685:	jbe	0xc6c0


0xc6a9:	add	rcx, 2
0xc6ad:	xor	edx, edx
0xc6af:	mov	rax, rdi
0xc6b2:	div	rcx
0xc6b5:	add	rsi, r8
0xc6b8:	cmp	rsi, rdi
0xc6bb:	mov	rax, rdx
0xc6be:	jb	0xc6a0


0xc178:	test	rax, rax
0xc17b:	mov	ecx, 1
0xc180:	cmove	rax, rsi
0xc184:	jmp	0xc131


0xc148:	cmp	dl, 0x5a
0xc14b:	jg	0xc190


0xc11b:	mov	r9, r11
0xc11e:	shl	r9, cl
0xc121:	xor	ecx, ecx
0xc123:	test	r9, r10
0xc126:	jne	0xc131


0xc128:	xor	ecx, ecx
0xc12a:	cmp	dl, 0x7e
0xc12d:	cmovne	rax, r8
0xc131:	add	rsi, 1
0xc135:	mov	qword ptr [rdi], rsi
0xc138:	movzx	edx, byte ptr [rsi]
0xc13b:	test	dl, dl
0xc13d:	je	0xc171


0xbc90:	mov	edi, dword ptr [r13 + 0x18]
0xbc94:	cmp	r12d, 8
0xbc98:	mov	eax, r12d
0xbc9b:	lea	rcx, [rbp + rdi]
0xbca0:	jae	0xbd80


0xbc2f:	lea	r15, [r12 - 0x41]
0xbc34:	shr	r15, 6
0xbc38:	lea	r14, [r15 + 1]
0xbc3c:	shl	r14, 6
0xbc40:	add	r14, rbx
0xbc43:	nop	dword ptr [rax + rax]
0xbc48:	movdqu	xmm0, xmmword ptr [rbx]
0xbc4c:	mov	rdx, r13
0xbc4f:	mov	esi, 0x40
0xbc54:	mov	rdi, rbp
0xbc57:	add	rbx, 0x40
0xbc5b:	movups	xmmword ptr [rbp], xmm0
0xbc5f:	movdqu	xmm0, xmmword ptr [rbx - 0x30]
0xbc64:	movups	xmmword ptr [rbp + 0x10], xmm0
0xbc68:	movdqu	xmm0, xmmword ptr [rbx - 0x20]
0xbc6d:	movups	xmmword ptr [rbp + 0x20], xmm0
0xbc71:	movdqu	xmm0, xmmword ptr [rbx - 0x10]
0xbc76:	movups	xmmword ptr [rbp + 0x30], xmm0
0xbc7a:	call	0xb360


0xbb64:	movzx	eax, byte ptr [rip + 0x9f15]
0xbb6b:	test	cl, 2
0xbb6e:	mov	byte ptr [rdx], al
0xbb70:	je	0xbbac


0xb742:	xor	ecx, esi
0xb744:	mov	r10d, ecx
0xb747:	and	r10d, eax
0xb74a:	mov	edi, r10d
0xb74d:	mov	r10d, dword ptr [rsp - 0x34]
0xb752:	xor	edi, edx
0xb754:	add	edi, dword ptr [rsp - 0x14]
0xb758:	lea	eax, [r10 + rax - 0x5c6be]
0xb760:	ror	edi, 0xc
0xb763:	add	edi, esi
0xb765:	xor	ecx, edi
0xb767:	add	ecx, eax
0xb769:	mov	eax, dword ptr [rsp - 0x30]
0xb76d:	rol	ecx, 4
0xb770:	add	ecx, edi
0xb772:	lea	eax, [rax + rdx - 0x788e097f]
0xb779:	mov	edx, esi
0xb77b:	xor	edx, edi
0xb77d:	xor	edx, ecx
0xb77f:	add	edx, eax
0xb781:	mov	eax, dword ptr [rsp - 0x24]
0xb785:	rol	edx, 0xb
0xb788:	add	edx, ecx
0xb78a:	lea	eax, [rax + rsi + 0x6d9d6122]
0xb791:	mov	esi, edi
0xb793:	lea	edi, [r12 + rdi - 0x21ac7f4]
0xb79b:	xor	esi, ecx
0xb79d:	xor	esi, edx
0xb79f:	add	esi, eax
0xb7a1:	mov	eax, ecx
0xb7a3:	rol	esi, 0x10
0xb7a6:	xor	eax, edx
0xb7a8:	add	esi, edx
0xb7aa:	xor	eax, esi
0xb7ac:	mov	r10d, esi
0xb7af:	add	eax, edi
0xb7b1:	mov	edi, dword ptr [rsp - 0x44]
0xb7b5:	ror	eax, 9
0xb7b8:	add	eax, esi
0xb7ba:	lea	edi, [rdi + rcx - 0x5b4115bc]
0xb7c1:	mov	ecx, edx
0xb7c3:	xor	r10d, eax
0xb7c6:	xor	ecx, esi
0xb7c8:	lea	esi, [r13 + rsi - 0x944b4a0]
0xb7d0:	xor	ecx, eax
0xb7d2:	add	ecx, edi
0xb7d4:	mov	edi, dword ptr [rsp - 0x38]
0xb7d8:	rol	ecx, 4
0xb7db:	add	ecx, eax
0xb7dd:	lea	edx, [rdi + rdx + 0x4bdecfa9]
0xb7e4:	mov	edi, r10d
0xb7e7:	xor	edi, ecx
0xb7e9:	add	edi, edx
0xb7eb:	mov	edx, eax
0xb7ed:	rol	edi, 0xb
0xb7f0:	xor	edx, ecx
0xb7f2:	add	edi, ecx
0xb7f4:	xor	edx, edi
0xb7f6:	add	edx, esi
0xb7f8:	mov	esi, dword ptr [rsp - 0x28]
0xb7fc:	rol	edx, 0x10
0xb7ff:	add	edx, edi
0xb801:	lea	eax, [rsi + rax - 0x41404390]
0xb808:	mov	esi, ecx
0xb80a:	xor	esi, edi
0xb80c:	xor	esi, edx
0xb80e:	add	esi, eax
0xb810:	lea	eax, [r8 + rcx + 0x289b7ec6]
0xb818:	mov	ecx, edi
0xb81a:	ror	esi, 9
0xb81d:	xor	ecx, edx
0xb81f:	lea	edi, [r14 + rdi - 0x155ed806]
0xb827:	add	esi, edx
0xb829:	xor	ecx, esi
0xb82b:	mov	r10d, esi
0xb82e:	add	ecx, eax
0xb830:	mov	eax, edx
0xb832:	rol	ecx, 4
0xb835:	xor	eax, esi
0xb837:	add	ecx, esi
0xb839:	xor	eax, ecx
0xb83b:	xor	r10d, ecx
0xb83e:	add	eax, edi
0xb840:	mov	edi, dword ptr [rsp - 0x3c]
0xb844:	rol	eax, 0xb
0xb847:	add	eax, ecx
0xb849:	lea	edx, [rdi + rdx - 0x2b10cf7b]
0xb850:	mov	edi, r10d
0xb853:	xor	edi, eax
0xb855:	add	edi, edx
0xb857:	mov	edx, dword ptr [rsp - 0x1c]
0xb85b:	rol	edi, 0x10
0xb85e:	add	edi, eax
0xb860:	lea	edx, [rdx + rsi + 0x4881d05]
0xb867:	mov	esi, ecx
0xb869:	xor	esi, eax
0xb86b:	xor	esi, edi
0xb86d:	add	esi, edx
0xb86f:	mov	edx, dword ptr [rsp - 0x2c]


0xa601:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xa603:	seta	dl
0xa606:	sbb	dl, 0
0xa609:	test	r12, r12
0xa60c:	movsx	ebp, dl
0xa60f:	je	0xa620


0xa499:	lea	rdx, [rsi + 1]
0xa49d:	mov	rdi, qword ptr [rsp + 0x10]
0xa4a2:	xor	esi, esi
0xa4a4:	mov	qword ptr [rsp + 0x38], r9
0xa4a9:	mov	qword ptr [rsp + 0x28], r10
0xa4ae:	sub	rdx, rcx
0xa4b1:	mov	qword ptr [rsp + 0x20], rdx
0xa4b6:	call	0x8d00


0xa521:	mov	r15, qword ptr [rsp + 8]
0xa526:	mov	rsi, r10
0xa529:	mov	rdi, r9
0xa52c:	add	rbp, r12
0xa52f:	sub	r12, rbx
0xa532:	mov	rdx, r15
0xa535:	add	r15, r12
0xa538:	sub	rdx, rbx
0xa53b:	shl	rdx, 4
0xa53f:	call	0x2fc0


0x9a2f:	mov	rax, r13
0x9a32:	mov	r13, r15
0x9a35:	mov	qword ptr [rsp + 0x18], r13
0x9a3a:	mov	r15, rax
0x9a3d:	jmp	0x9956


0x97eb:	lea	rax, [r12 - 1]
0x97f0:	xor	edx, edx
0x97f2:	mov	rcx, qword ptr [rsp + 0x20]
0x97f7:	mov	rdi, r15
0x97fa:	mov	esi, 1
0x97ff:	div	qword ptr [rsp + 0x10]
0x9804:	mov	rdx, rax
0x9807:	mov	qword ptr [rsp + 0x18], rax
0x980c:	call	0x2c10






0x876a:	cmp	r13, r12
0x876d:	mov	rdx, r12
0x8770:	cmovbe	rdx, r13
0x8774:	call	0x2df0


0x8790:	mov	rdx, rsi
0x8793:	mov	rsi, r8
0x8796:	call	0x12180


0x8570:	test	rbp, rbp
0x8573:	je	0x85e5


0x7c94:	test	rdx, rdx
0x7c97:	mov	rdi, r12
0x7c9a:	je	0x7d3b


0x7823:	cmp	byte ptr [r15 + 0x35], 0
0x7828:	jne	0x7be0


0x7b48:	lea	rsi, [rsp + 0xc0]
0x7b50:	mov	rdi, r12
0x7b53:	mov	qword ptr [rsp + 0x20], r9
0x7b58:	call	0x2fd0


0x7a2e:	movzx	eax, byte ptr [rbx]
0x7a31:	mov	rsi, rbx
0x7a34:	cmp	byte ptr [r14 + rax], 0
0x7a39:	je	0x7a4e


0x7daf:	mov	rax, rsi
0x7db2:	test	r9, r9
0x7db5:	mov	byte ptr [rax], 0
0x7db8:	jne	0x79be


0x7971:	lea	r10, [r12 + rbp]
0x7975:	xor	ebp, ebp
0x7977:	nop	word ptr [rax + rax]
0x7980:	test	r13, r13
0x7983:	movzx	eax, byte ptr [r12]
0x7988:	je	0x7995


0x734e:	mov	rdx, qword ptr [rcx + 0x28]
0x7352:	cmp	qword ptr [rcx + 0x30], rdx
0x7356:	mov	esi, 0x3e
0x735b:	mov	eax, 0x3e
0x7360:	ja	0x7332


0x7320:	cmp	rbx, r15
0x7323:	movsx	esi, al
0x7326:	je	0x73a0


0x73b9:	mov	r14, qword ptr [rip + 0x213070]
0x73c0:	lea	rbp, [rip + 0x213399]
0x73c7:	lea	r9, [r15 + r13 - 1]
0x73cc:	test	r14, r14
0x73cf:	je	0x75cf


0x3010:	jmp	qword ptr [rip + 0x216eca]


0x2d30:	jmp	qword ptr [rip + 0x21703a]


0x6b0a:	add	rax, r9
0x6b0d:	cmp	rcx, rax
0x6b10:	cmovbe	rax, rcx
0x6b14:	ret	


0x6ae7:	cmp	rcx, rax
0x6aea:	jbe	0x6b0a


0x6b42:	add	rax, 1
0x6b46:	cmp	rcx, rax
0x6b49:	jbe	0x6ad8


0x6b30:	add	rax, 1
0x6b34:	cmp	rcx, rax
0x6b37:	je	0x6ad8


0x6ab0:	mov	rsi, r9
0x6ab3:	or	rsi, r8
0x6ab6:	jne	0x6ac0


0x6aa0:	add	rax, 1
0x6aa4:	cmp	rcx, rax
0x6aa7:	je	0x6ad8


0x69c3:	cmp	byte ptr [rdx + 0x30], 0
0x69c7:	lea	rcx, [rip + 0x213d92]
0x69ce:	jne	0x69e1


0x6a22:	add	rdi, 1
0x6a26:	cmp	rax, rdi
0x6a29:	jbe	0x69ea


0x6a10:	add	rdi, 1
0x6a14:	cmp	rax, rdi
0x6a17:	je	0x69ea


0x69b0:	add	rdi, 1
0x69b4:	cmp	rax, rdi
0x69b7:	jbe	0x69ea


0x69a0:	add	rdi, 1
0x69a4:	cmp	rax, rdi
0x69a7:	je	0x69ea


0x6488:	test	rcx, rcx
0x648b:	je	0x643f


0x6109:	cmp	byte ptr [rdi + 0x35], 0
0x610d:	je	0x6116


0x6102:	mov	byte ptr [rax], 0x67
0x6105:	add	rax, 1
0x6109:	cmp	byte ptr [rdi + 0x35], 0
0x610d:	je	0x6116


0x6095:	movabs	rdx, 0xffff00ff0000
0x609f:	test	qword ptr [rdi + 0x30], rdx
0x60a3:	jne	0x6079


0x603b:	shl	r10, 4
0x603f:	mov	eax, dword ptr [rbp + r10 + 8]
0x6044:	pop	rbx
0x6045:	pop	rbp
0x6046:	ret	


0x6038:	mov	qword ptr [rsi], rdx
0x603b:	shl	r10, 4
0x603f:	mov	eax, dword ptr [rbp + r10 + 8]
0x6044:	pop	rbx
0x6045:	pop	rbp
0x6046:	ret	


0x5feb:	lea	r10, [rbx + r11]
0x5fef:	shr	r10, 1
0x5ff2:	mov	rax, r10
0x5ff5:	shl	rax, 4
0x5ff9:	mov	rax, qword ptr [rbp + rax]
0x5ffe:	movzx	edx, byte ptr [rax]
0x6001:	test	dl, dl
0x6003:	je	0x6066


0x6058:	xor	eax, eax
0x605a:	pop	rbx
0x605b:	pop	rbp
0x605c:	ret	


0x6010:	mov	rdx, rdi
0x6013:	jmp	0x6024


0x6060:	lea	rbx, [r10 + 1]
0x6064:	jmp	0x6053


0x5f00:	lea	rsi, [rcx + 2]
0x5f04:	movzx	ecx, byte ptr [rcx + 1]
0x5f08:	mov	edx, ecx
0x5f0a:	sub	ecx, 0x30
0x5f0d:	cmp	ecx, 9
0x5f10:	ja	0x5ede


0x5ede:	sub	rsi, 1
0x5ee2:	mov	qword ptr [rdi], rsi
0x5ee5:	ret	


0x12d40:	mov	eax, dword ptr [rsp]
0x12d43:	cmp	eax, 0x2f
0x12d46:	ja	0x12e34


0x12c70:	jg	0x12d30


0x12cc8:	cmp	esi, 0x406
0x12cce:	jge	0x12d40


0x12d10:	cmp	esi, 0x409
0x12d16:	je	0x12d40


0x113de:	movzx	r9d, r10b
0x113e2:	cmp	ecx, r9d
0x113e5:	je	0x113d0


0x114d0:	add	rdi, 1
0x114d4:	movzx	r8d, byte ptr [rdi]
0x114d8:	cmp	r8b, 0x30
0x114dc:	je	0x114d0


0x1138f:	sub	eax, 0x30
0x11392:	cmp	eax, 9
0x11395:	ja	0x113a8


0x114f0:	add	rsi, 1
0x114f4:	movzx	eax, byte ptr [rsi]
0x114f7:	cmp	al, 0x30
0x114f9:	jne	0x11237


0x11237:	lea	esi, [rax - 0x30]
0x1123a:	mov	eax, 1
0x1123f:	cmp	esi, 9
0x11242:	ja	0x11518


0x11270:	add	rsi, 1
0x11274:	movzx	r9d, byte ptr [rsi]
0x11278:	cmp	r9b, 0x30
0x1127c:	je	0x11270


0x1127e:	movzx	r11d, r9b
0x11282:	cmp	ecx, r11d
0x11285:	je	0x11270


0xdfc8:	mov	rax, rsi
0xdfcb:	shl	rax, cl
0xdfce:	test	rax, rdx
0xdfd1:	je	0xe000




0xda9f:	mov	qword ptr [rbp + 8], rsi
0xdaa3:	shl	rsi, 3
0xdaa7:	call	0x11e40


0xd15f:	mov	rbp, qword ptr [r12]
0xd163:	cmp	rbp, rax
0xd166:	jae	0xd19c


0xd128:	mov	rdi, qword ptr [rbp]
0xd12c:	test	rdi, rdi
0xd12f:	je	0xd156


0xd143:	call	qword ptr [r12 + 0x40]


0xd098:	test	rax, rax
0xd09b:	je	0xd0a6


0xcdd0:	ret	


0xcda5:	mov	r8, qword ptr [rcx]
0xcda8:	add	rax, 1
0xcdac:	mov	qword ptr [rsi + rax*8 - 8], r8
0xcdb1:	mov	rcx, qword ptr [rcx + 8]
0xcdb5:	test	rcx, rcx
0xcdb8:	jne	0xcda0


0xccc0:	add	rdx, 0x10
0xccc4:	cmp	rdx, rcx
0xccc7:	jae	0xccd8


0xccd1:	ret	


0xc979:	mov	rsi, r15
0xc97c:	mov	rdi, rbp
0xc97f:	call	0xc700


0xc89a:	addss	xmm1, dword ptr [rip + 0x92b2]
0xc8a2:	movss	xmm2, dword ptr [rdx + 4]
0xc8a7:	ucomiss	xmm2, xmm1
0xc8aa:	jbe	0xc8c0


0xc6a0:	add	r8, 8
0xc6a4:	test	rdx, rdx
0xc6a7:	je	0xc6c5


0xc131:	add	rsi, 1
0xc135:	mov	qword ptr [rdi], rsi
0xc138:	movzx	edx, byte ptr [rsi]
0xc13b:	test	dl, dl
0xc13d:	je	0xc171


0xc14d:	cmp	dl, 0x41
0xc150:	jge	0xc131


0xc190:	lea	r9d, [rdx - 0x61]
0xc194:	cmp	r9b, 0x19
0xc198:	ja	0xc15c


0xc171:	ret	


0xbca6:	test	r12b, 4
0xbcaa:	jne	0xbea1


0xbd80:	mov	rax, qword ptr [rbx]
0xbd83:	mov	edx, r12d
0xbd86:	mov	qword ptr [rcx], rax
0xbd89:	mov	rax, qword ptr [rbx + rdx - 8]
0xbd8e:	mov	qword ptr [rcx + rdx - 8], rax
0xbd93:	lea	rdx, [rcx + 8]
0xbd97:	mov	rax, rcx
0xbd9a:	and	rdx, 0xfffffffffffffff8
0xbd9e:	sub	rax, rdx
0xbda1:	sub	rbx, rax
0xbda4:	add	eax, r12d
0xbda7:	and	eax, 0xfffffff8
0xbdaa:	cmp	eax, 8
0xbdad:	jb	0xbcc2


0xbb72:	movzx	eax, word ptr [rsi + rcx - 2]
0xbb77:	mov	word ptr [rdx + rcx - 2], ax
0xbb7c:	jmp	0xbbac


0xb873:	ror	esi, 9
0xb876:	add	esi, edi
0xb878:	lea	ecx, [rdx + rcx - 0x262b2fc7]
0xb87f:	mov	edx, eax
0xb881:	lea	eax, [rbp + rax - 0x1924661b]
0xb888:	xor	edx, edi
0xb88a:	mov	r10d, esi
0xb88d:	xor	edx, esi
0xb88f:	add	edx, ecx
0xb891:	mov	ecx, edi
0xb893:	rol	edx, 4
0xb896:	add	edx, esi
0xb898:	xor	ecx, esi
0xb89a:	xor	ecx, edx
0xb89c:	xor	r10d, edx
0xb89f:	add	ecx, eax
0xb8a1:	lea	eax, [r9 + rdi + 0x1fa27cf8]
0xb8a9:	mov	edi, r10d
0xb8ac:	rol	ecx, 0xb
0xb8af:	mov	r10d, dword ptr [rsp - 0x34]
0xb8b4:	add	ecx, edx
0xb8b6:	xor	edi, ecx
0xb8b8:	add	edi, eax
0xb8ba:	mov	eax, dword ptr [rsp - 0x40]
0xb8be:	rol	edi, 0x10
0xb8c1:	add	edi, ecx
0xb8c3:	lea	esi, [rax + rsi - 0x3b53a99b]
0xb8ca:	mov	eax, edx
0xb8cc:	xor	eax, ecx
0xb8ce:	xor	eax, edi
0xb8d0:	add	eax, esi
0xb8d2:	lea	esi, [r14 + rdx - 0xbd6ddbc]
0xb8da:	mov	edx, ecx
0xb8dc:	ror	eax, 9
0xb8df:	not	edx
0xb8e1:	mov	r14d, dword ptr [rsp - 0x44]
0xb8e6:	add	eax, edi
0xb8e8:	or	edx, eax
0xb8ea:	xor	edx, edi
0xb8ec:	add	edx, esi
0xb8ee:	lea	esi, [r13 + rcx + 0x432aff97]
0xb8f6:	mov	r13d, edi
0xb8f9:	rol	edx, 6
0xb8fc:	not	r13d
0xb8ff:	lea	edi, [r12 + rdi - 0x546bdc59]
0xb907:	add	edx, eax
0xb909:	mov	ecx, r13d
0xb90c:	or	ecx, edx
0xb90e:	mov	r13d, edx
0xb911:	xor	ecx, eax
0xb913:	not	r13d
0xb916:	add	ecx, esi
0xb918:	mov	esi, eax
0xb91a:	rol	ecx, 0xa
0xb91d:	not	esi
0xb91f:	add	ecx, edx
0xb921:	or	esi, ecx
0xb923:	mov	r12d, ecx
0xb926:	xor	esi, edx
0xb928:	not	r12d
0xb92b:	add	esi, edi
0xb92d:	lea	edi, [r10 + rax - 0x36c5fc7]
0xb935:	mov	eax, r13d
0xb938:	rol	esi, 0xf
0xb93b:	mov	r10d, dword ptr [rsp - 0x1c]
0xb940:	add	esi, ecx
0xb942:	or	eax, esi
0xb944:	xor	eax, ecx
0xb946:	add	eax, edi
0xb948:	lea	edi, [rbp + rdx + 0x655b59c3]
0xb94f:	mov	ebp, dword ptr [rsp - 0x3c]
0xb953:	ror	eax, 0xb
0xb956:	mov	edx, r12d
0xb959:	add	eax, esi
0xb95b:	or	edx, eax
0xb95d:	xor	edx, esi
0xb95f:	add	edx, edi
0xb961:	lea	edi, [rbp + rcx - 0x70f3336e]
0xb968:	mov	ebp, esi
0xb96a:	rol	edx, 6
0xb96d:	not	ebp
0xb96f:	add	edx, eax
0xb971:	mov	ecx, ebp
0xb973:	or	ecx, edx
0xb975:	mov	ebp, edx
0xb977:	xor	ecx, eax
0xb979:	not	ebp
0xb97b:	add	ecx, edi
0xb97d:	mov	edi, dword ptr [rsp - 0x28]
0xb981:	rol	ecx, 0xa
0xb984:	add	ecx, edx
0xb986:	lea	edi, [rdi + rsi - 0x100b83]
0xb98d:	mov	esi, eax
0xb98f:	not	esi
0xb991:	or	esi, ecx
0xb993:	xor	esi, edx
0xb995:	add	esi, edi
0xb997:	lea	edi, [r14 + rax - 0x7a7ba22f]
0xb99f:	mov	eax, ebp


0xa620:	call	0x6380


0xa611:	mov	rsi, rax
0xa614:	mov	rdi, r12
0xa617:	call	0x2e40


0x9956:	mov	rsi, qword ptr [rsp + 0x28]
0x995b:	mov	rax, qword ptr [rsp + 0x18]
0x9960:	mov	rdi, qword ptr [rsi]
0x9963:	mov	rdx, qword ptr [rsi + 0x18]
0x9967:	sub	rax, rdi
0x996a:	mov	qword ptr [rsi + 8], rax
0x996e:	lea	rax, [rdi + rdx]
0x9972:	sub	rax, r14
0x9975:	sar	rax, 5
0x9979:	test	rax, rax
0x997c:	mov	qword ptr [rsi + 0x10], rax
0x9980:	jne	0x9a84


0x2c10:	jmp	qword ptr [rip + 0x2170ca]


0x85e5:	xor	ebp, ebp
0x85e7:	test	r9, r9
0x85ea:	setne	bpl
0x85ee:	mov	r8d, ebp
0x85f1:	neg	r8d
0x85f4:	jmp	0x78a5


0x8575:	test	r9, r9
0x8578:	je	0x86b9


0x7d3b:	cmp	r12, rcx
0x7d3e:	jae	0x7d4d


0x7ca0:	cmp	rdi, rcx
0x7ca3:	jae	0x7cb0


0x782e:	cmp	byte ptr [r15 + 0x36], 0
0x7833:	jne	0x7df8


0x7be0:	movzx	eax, byte ptr [r12]
0x7be5:	mov	r13, r12
0x7be8:	cmp	byte ptr [r14 + rax], 0
0x7bed:	je	0x7c00


0x2fd0:	jmp	qword ptr [rip + 0x216eea]


0x7a4e:	mov	ecx, dword ptr [rip + 0x212e30]
0x7a54:	mov	edx, dword ptr [rip + 0x212e2e]
0x7a5a:	mov	qword ptr [rsp + 0x10], r9
0x7a5f:	call	0x11200


0x7a20:	add	rdi, 1
0x7a24:	movzx	eax, byte ptr [rdi]
0x7a27:	cmp	byte ptr [r14 + rax], 0
0x7a2c:	jne	0x7a20


0x79be:	lea	r10, [rbx + r9]
0x79c2:	xor	r9d, r9d
0x79c5:	nop	dword ptr [rax]
0x79c8:	test	r13, r13
0x79cb:	movzx	eax, byte ptr [rbx]
0x79ce:	je	0x79db


0x7995:	test	rdx, rdx
0x7998:	je	0x799e


0x798a:	movzx	ecx, al
0x798d:	cmp	byte ptr [r13 + rcx], 0
0x7993:	jne	0x79a5


0x7362:	mov	rdi, rcx
0x7365:	movzx	esi, sil
0x7369:	mov	qword ptr [rsp], rcx
0x736d:	call	0x2d10


0x7332:	lea	rsi, [rdx + 1]
0x7336:	mov	qword ptr [rcx + 0x28], rsi
0x733a:	mov	byte ptr [rdx], al
0x733c:	cmp	rbx, r15
0x733f:	je	0x73b0


0x73a0:	mov	esi, 0xa
0x73a5:	mov	eax, 0xa
0x73aa:	jmp	0x7328


0x7328:	mov	rdx, qword ptr [rcx + 0x28]
0x732c:	cmp	qword ptr [rcx + 0x30], rdx
0x7330:	jbe	0x7362


0x75cf:	mov	rbx, r15
0x75d2:	jmp	0x74f8






0x6aec:	lea	rsi, [rip + 0x213c6d]
0x6af3:	jmp	0x6b01


0x6b4b:	movzx	edi, byte ptr [rax]
0x6b4e:	cmp	byte ptr [rsi + rdi], 0
0x6b52:	jne	0x6b6e


0x6ab8:	ret	


0x6ac0:	add	rax, 1
0x6ac4:	cmp	rcx, rax
0x6ac7:	jbe	0x6ad8


0x69d0:	jmp	0x69ea


0x69e1:	movzx	edx, byte ptr [rdi]
0x69e4:	cmp	byte ptr [rcx + rdx], 0
0x69e8:	jne	0x69d8


0x6a2b:	movzx	esi, byte ptr [rdi]
0x6a2e:	cmp	byte ptr [rcx + rsi], 0
0x6a32:	jne	0x6a4a


0x69b9:	sub	r8, 1
0x69bd:	cmp	r8, -1
0x69c1:	jne	0x69a9


0x643f:	mov	qword ptr [rip + 0x213ffa], rsi
0x6446:	shl	rsi, 3
0x644a:	call	0x11e40


0x6116:	lea	rdx, [rip + 0x214543]
0x611d:	cmp	qword ptr [rdi + 0x20], rdx
0x6121:	je	0x6174


0x610f:	mov	byte ptr [rax], 0x68
0x6112:	add	rax, 1
0x6116:	lea	rdx, [rip + 0x214543]
0x611d:	cmp	qword ptr [rdi + 0x20], rdx
0x6121:	je	0x6174


0x60a5:	movzx	eax, byte ptr [rdi + 0x36]
0x60a9:	test	al, al
0x60ab:	jne	0x60c0


0x6024:	add	rax, 1
0x6028:	movzx	ecx, byte ptr [rax]
0x602b:	add	rdx, 1
0x602f:	test	cl, cl
0x6031:	jne	0x6018


0x6053:	cmp	rbx, r11
0x6056:	jb	0x5feb


0x12d4c:	add	rax, qword ptr [rsp + 0x10]
0x12d51:	mov	edx, dword ptr [rax]
0x12d53:	mov	edi, ebp
0x12d55:	xor	eax, eax
0x12d57:	call	0x2bd0


0x12e34:	mov	rax, qword ptr [rsp + 8]
0x12e39:	jmp	0x12d51


0x12c76:	cmp	esi, 2
0x12c79:	je	0x12d40


0x12d30:	cmp	esi, 9
0x12d33:	je	0x12c90


0x12cd0:	cmp	esi, 0x401
0x12cd6:	je	0x12c90


0x12d18:	jl	0x12c90


0x113e7:	cmp	r8b, r10b
0x113ea:	jne	0x115c6


0x114de:	movzx	eax, r8b
0x114e2:	jmp	0x1138f


0x11397:	jmp	0x11758


0x113a8:	cmp	r9b, 0x30
0x113ac:	je	0x113a0


0x114ff:	add	rsi, 1
0x11503:	movzx	eax, byte ptr [rsi]
0x11506:	cmp	al, 0x30
0x11508:	je	0x114f0


0x11248:	ret	


0x11518:	cmp	r10b, 0x30
0x1151c:	je	0x11510


0x11287:	cmp	r10b, r9b
0x1128a:	jne	0x11560


0xcda0:	cmp	rdx, rax
0xcda3:	je	0xcdd0


0xc8ac:	movss	xmm3, dword ptr [rip + 0x92b0]
0xc8b4:	ucomiss	xmm3, xmm2
0xc8b7:	jb	0xc8c0


0xc152:	lea	r9d, [rdx - 0x30]
0xc156:	cmp	r9b, 9
0xc15a:	jbe	0xc131


0xc19a:	jmp	0xc131


0xc15c:	cmp	dl, 0x7e
0xc15f:	cmovne	rax, r8
0xc163:	add	rsi, 1
0xc167:	mov	qword ptr [rdi], rsi
0xc16a:	movzx	edx, byte ptr [rsi]
0xc16d:	test	dl, dl
0xc16f:	jne	0xc13f


0xbcb0:	test	r12d, r12d
0xbcb3:	je	0xbcc2


0xbea1:	mov	edx, dword ptr [rbx]
0xbea3:	mov	dword ptr [rcx], edx
0xbea5:	mov	edx, r12d
0xbea8:	mov	eax, dword ptr [rbx + rdx - 4]
0xbeac:	mov	dword ptr [rcx + rdx - 4], eax
0xbeb0:	jmp	0xbcc2


0xbcc2:	add	r12, rdi
0xbcc5:	cmp	r12, 0x3f
0xbcc9:	jbe	0xbcee


0xbdb3:	and	eax, 0xfffffff8
0xbdb6:	xor	ecx, ecx
0xbdb8:	mov	esi, ecx
0xbdba:	add	ecx, 8
0xbdbd:	mov	r8, qword ptr [rbx + rsi]
0xbdc1:	cmp	ecx, eax
0xbdc3:	mov	qword ptr [rdx + rsi], r8
0xbdc7:	jb	0xbdb8


0xb9a1:	rol	esi, 0xf
0xb9a4:	mov	r14d, dword ptr [rsp - 0x30]
0xb9a9:	mov	ebp, ecx
0xb9ab:	add	esi, ecx
0xb9ad:	not	ebp
0xb9af:	or	eax, esi
0xb9b1:	xor	eax, ecx
0xb9b3:	add	eax, edi
0xb9b5:	lea	edi, [r14 + rdx + 0x6fa87e4f]
0xb9bd:	mov	edx, ebp
0xb9bf:	ror	eax, 0xb
0xb9c2:	mov	ebp, esi
0xb9c4:	mov	r14d, dword ptr [rsp - 0x24]
0xb9c9:	add	eax, esi
0xb9cb:	not	ebp
0xb9cd:	or	edx, eax
0xb9cf:	xor	edx, esi
0xb9d1:	add	edx, edi
0xb9d3:	lea	edi, [r9 + rcx - 0x1d31920]
0xb9db:	mov	ecx, ebp
0xb9dd:	rol	edx, 6
0xb9e0:	mov	r9d, dword ptr [rsp - 0x38]
0xb9e5:	add	edx, eax
0xb9e7:	or	ecx, edx
0xb9e9:	xor	ecx, eax
0xb9eb:	add	ecx, edi
0xb9ed:	lea	edi, [r10 + rsi - 0x5cfebcec]
0xb9f5:	mov	esi, eax
0xb9f7:	rol	ecx, 0xa
0xb9fa:	not	esi
0xb9fc:	lea	eax, [r8 + rax + 0x4e0811a1]
0xba04:	add	ecx, edx
0xba06:	mov	r8d, edx
0xba09:	mov	r10d, dword ptr [rsp - 0x2c]
0xba0e:	or	esi, ecx
0xba10:	not	r8d
0xba13:	xor	esi, edx
0xba15:	lea	edx, [r9 + rdx - 0x8ac817e]
0xba1d:	mov	r9d, ecx
0xba20:	add	esi, edi
0xba22:	mov	edi, r8d
0xba25:	not	r9d
0xba28:	rol	esi, 0xf
0xba2b:	add	esi, ecx
0xba2d:	or	edi, esi
0xba2f:	xor	edi, ecx
0xba31:	lea	ecx, [r14 + rcx - 0x42c50dcb]
0xba39:	add	edi, eax
0xba3b:	mov	eax, r9d
0xba3e:	ror	edi, 0xb
0xba41:	add	edi, esi
0xba43:	or	eax, edi
0xba45:	xor	eax, esi
0xba47:	add	eax, edx
0xba49:	mov	edx, esi
0xba4b:	rol	eax, 6
0xba4e:	not	edx
0xba50:	add	eax, edi
0xba52:	or	edx, eax
0xba54:	xor	edx, edi
0xba56:	add	edx, ecx
0xba58:	mov	ecx, dword ptr [rsp - 0x40]
0xba5c:	rol	edx, 0xa
0xba5f:	add	edx, eax
0xba61:	lea	esi, [rcx + rsi + 0x2ad7d2bb]
0xba68:	mov	ecx, edi
0xba6a:	lea	edi, [r10 + rdi - 0x14792c6f]
0xba72:	not	ecx
0xba74:	or	ecx, edx
0xba76:	xor	ecx, eax
0xba78:	add	ecx, esi
0xba7a:	mov	esi, eax
0xba7c:	rol	ecx, 0xf
0xba7f:	not	esi
0xba81:	add	ecx, edx
0xba83:	or	esi, ecx
0xba85:	xor	esi, edx
0xba87:	add	esi, edi
0xba89:	ror	esi, 0xb
0xba8c:	add	esi, ecx
0xba8e:	add	dword ptr [rsp - 0x18], eax
0xba92:	add	r15d, ecx
0xba95:	add	r11d, esi
0xba98:	add	dword ptr [rsp - 0x20], edx
0xba9c:	cmp	qword ptr [rsp - 0x10], rbx
0xbaa1:	ja	0xb3c0


0x9986:	mov	rsi, rdx
0x9989:	shr	rsi, 5
0x998d:	test	rdi, rdi
0x9990:	je	0x9a42


0x9a84:	mov	rax, qword ptr [rsp + 0x18]
0x9a89:	add	rbp, 0x22
0x9a8d:	mov	qword ptr [rip + 0x21059c], rbp
0x9a94:	sub	rax, r15
0x9a97:	mov	qword ptr [rsi + 0x20], rax
0x9a9b:	add	rsp, 0x48
0x9a9f:	mov	eax, 1
0x9aa4:	pop	rbx
0x9aa5:	pop	rbp
0x9aa6:	pop	r12
0x9aa8:	pop	r13
0x9aaa:	pop	r14
0x9aac:	pop	r15
0x9aae:	ret	




0x78a5:	test	r8d, r8d
0x78a8:	jne	0x7a98


0x86b9:	mov	ebp, 1
0x86be:	jmp	0x7a9b


0x857e:	test	rdx, rdx
0x8581:	je	0x8673


0x7d40:	movzx	edx, byte ptr [r12]
0x7d45:	cmp	byte ptr [r13 + rdx], 0
0x7d4b:	jne	0x7d37


0x7d4d:	cmp	rbx, rax
0x7d50:	jb	0x7d6d


0x7ca5:	movzx	esi, byte ptr [rdi]
0x7ca8:	cmp	byte ptr [r13 + rsi], 0
0x7cae:	jne	0x7d06


0x7cb0:	cmp	rbx, rax
0x7cb3:	jb	0x7ccd


0x7839:	cmp	byte ptr [r15 + 0x33], 0
0x783e:	jne	0x7e48


0x7df8:	xor	esi, esi
0x7dfa:	mov	rdi, r12
0x7dfd:	mov	qword ptr [rsp + 0x10], r9
0x7e02:	call	0x5fb0


0x7c00:	movzx	eax, byte ptr [rbx]
0x7c03:	mov	rsi, rbx
0x7c06:	cmp	byte ptr [r14 + rax], 0
0x7c0b:	je	0x7c1e




0x7a40:	add	rsi, 1
0x7a44:	movzx	eax, byte ptr [rsi]
0x7a47:	cmp	byte ptr [r14 + rax], 0
0x7a4c:	jne	0x7a40


0x79f9:	mov	byte ptr [rax], 0
0x79fc:	cmp	byte ptr [r15 + 0x32], 0
0x7a01:	mov	rbx, rdi
0x7a04:	mov	r12, rsi
0x7a07:	je	0x7818


0x79db:	test	rdx, rdx
0x79de:	je	0x79e4


0x79d0:	movzx	ecx, al
0x79d3:	cmp	byte ptr [r13 + rcx], 0
0x79d9:	jne	0x79ec


0x799e:	mov	byte ptr [rsi + rbp], al
0x79a1:	add	rbp, 1
0x79a5:	add	r12, 1
0x79a9:	cmp	r10, r12
0x79ac:	jne	0x7980


0x799a:	movzx	eax, byte ptr [rdx + rax]
0x799e:	mov	byte ptr [rsi + rbp], al
0x79a1:	add	rbp, 1
0x79a5:	add	r12, 1
0x79a9:	cmp	r10, r12
0x79ac:	jne	0x7980


0x79a5:	add	r12, 1
0x79a9:	cmp	r10, r12
0x79ac:	jne	0x7980


0x2d10:	jmp	qword ptr [rip + 0x21704a]


0x73b0:	mov	r15, qword ptr [r12]
0x73b4:	mov	r13, qword ptr [r12 + 8]
0x73b9:	mov	r14, qword ptr [rip + 0x213070]
0x73c0:	lea	rbp, [rip + 0x213399]
0x73c7:	lea	r9, [r15 + r13 - 1]
0x73cc:	test	r14, r14
0x73cf:	je	0x75cf


0x74f8:	lea	r13, [rip + 0xdfd4]
0x74ff:	mov	rsi, rbx
0x7502:	mov	rdi, r15
0x7505:	mov	qword ptr [rsp], r9
0x7509:	call	0x6520


0x7670:	cmp	r10, -1
0x7674:	mov	rbx, r15
0x7677:	jne	0x7412


0x73e9:	mov	rdx, r14
0x73ec:	mov	rsi, r13
0x73ef:	mov	rdi, r15
0x73f2:	mov	qword ptr [rsp + 8], r10
0x73f7:	mov	qword ptr [rsp], r9
0x73fb:	call	0x6970


0x6b01:	movzx	edx, byte ptr [rax]
0x6b04:	cmp	byte ptr [rsi + rdx], 0
0x6b08:	jne	0x6af8


0x6b6e:	sub	r8, 1
0x6b72:	cmp	r8, -1
0x6b76:	jne	0x6b39


0x6ac9:	sub	r8, 1
0x6acd:	cmp	r8, -1
0x6ad1:	jne	0x6aa9


0x69d8:	add	rdi, 1
0x69dc:	cmp	rax, rdi
0x69df:	jbe	0x69ea


0x6a4a:	sub	r8, 1
0x6a4e:	cmp	r8, -1
0x6a52:	jne	0x6a19


0x6174:	mov	byte ptr [rax], 0x69
0x6177:	add	rax, 1
0x617b:	jmp	0x6123


0x6123:	cmp	byte ptr [rdi + 0x36], 0
0x6127:	je	0x6130


0x60ad:	cmp	byte ptr [rdi + 0x38], 0
0x60b1:	jne	0x6079


0x6018:	movzx	r8d, byte ptr [rdx]
0x601c:	cmp	byte ptr [r9 + r8], cl
0x6020:	jb	0x6050


0x5f18:	cmp	al, dl
0x5f1a:	cmovb	eax, edx
0x5f1d:	add	rsi, 1
0x5f21:	movzx	ecx, byte ptr [rsi - 1]
0x5f25:	mov	edx, ecx
0x5f27:	sub	ecx, 0x30
0x5f2a:	cmp	ecx, 9
0x5f2d:	jbe	0x5f18


0x5f2f:	sub	rsi, 1
0x5f33:	mov	qword ptr [rdi], rsi
0x5f36:	ret	


0x12d51:	mov	edx, dword ptr [rax]
0x12d53:	mov	edi, ebp
0x12d55:	xor	eax, eax
0x12d57:	call	0x2bd0


0x12c7f:	jg	0x12c90


0x12d39:	jg	0x12d40


0x12cd8:	cmp	esi, 0x402
0x12cde:	je	0x12d40


0x12d1e:	cmp	esi, 0x40a
0x12d24:	jne	0x12ce8


0x113f0:	sub	r9d, 0x30
0x113f4:	cmp	r9d, 9
0x113f8:	ja	0x11750


0x115c6:	cmp	edx, eax
0x115c8:	jne	0x1144b


0x11758:	mov	eax, 0xffffffff
0x1175d:	ret	


0x113a0:	add	rsi, 1
0x113a4:	movzx	r9d, byte ptr [rsi]
0x113a8:	cmp	r9b, 0x30
0x113ac:	je	0x113a0


0x113ae:	movzx	r11d, r9b
0x113b2:	cmp	ecx, r11d
0x113b5:	je	0x113a0


0x1150a:	jmp	0x11237


0x11510:	add	rdi, 1
0x11514:	movzx	r10d, byte ptr [rdi]
0x11518:	cmp	r10b, 0x30
0x1151c:	je	0x11510


0x1151e:	movzx	r8d, r10b
0x11522:	cmp	ecx, r8d
0x11525:	je	0x11510


0x11290:	sub	r11d, 0x30
0x11294:	cmp	r11d, 9
0x11298:	ja	0x116d7


0x11560:	cmp	edx, r8d
0x11563:	jne	0x112ec


0xc8b9:	ucomiss	xmm0, xmm1
0xc8bc:	ja	0xc8c5


0xbcb5:	movzx	edx, byte ptr [rbx]
0xbcb8:	test	al, 2
0xbcba:	mov	byte ptr [rcx], dl
0xbcbc:	jne	0xbeb5


0xbcee:	mov	dword ptr [r13 + 0x18], r12d
0xbcf2:	add	rsp, 8
0xbcf6:	pop	rbx
0xbcf7:	pop	rbp
0xbcf8:	pop	r12
0xbcfa:	pop	r13
0xbcfc:	pop	r14
0xbcfe:	pop	r15
0xbd00:	ret	


0xbccb:	mov	rdx, r13
0xbcce:	mov	esi, 0x40
0xbcd3:	mov	rdi, rbp
0xbcd6:	call	0xb360


0xbdb8:	mov	esi, ecx
0xbdba:	add	ecx, 8
0xbdbd:	mov	r8, qword ptr [rbx + rsi]
0xbdc1:	cmp	ecx, eax
0xbdc3:	mov	qword ptr [rdx + rsi], r8
0xbdc7:	jb	0xbdb8


0xbdc9:	jmp	0xbcc2


0xbaa7:	mov	r10d, r15d
0xbaaa:	mov	rax, qword ptr [rsp - 8]
0xbaaf:	mov	ebx, dword ptr [rsp - 0x18]
0xbab3:	mov	dword ptr [rax], ebx
0xbab5:	mov	ebx, dword ptr [rsp - 0x20]
0xbab9:	mov	dword ptr [rax + 4], r11d
0xbabd:	mov	dword ptr [rax + 8], r10d
0xbac1:	mov	dword ptr [rax + 0xc], ebx
0xbac4:	pop	rbx
0xbac5:	pop	rbp
0xbac6:	pop	r12
0xbac8:	pop	r13
0xbaca:	pop	r14
0xbacc:	pop	r15
0xbace:	ret	


0xb3c0:	mov	r14d, dword ptr [rbx]
0xb3c3:	mov	edi, dword ptr [rsp - 0x20]
0xb3c7:	mov	eax, dword ptr [rsp - 0x18]
0xb3cb:	mov	esi, dword ptr [rbx + 4]
0xb3ce:	mov	r8d, dword ptr [rbx + 0xc]
0xb3d2:	mov	r10d, dword ptr [rbx + 0x14]
0xb3d6:	mov	ebp, dword ptr [rbx + 0x18]
0xb3d9:	mov	r13d, dword ptr [rbx + 0x1c]
0xb3dd:	lea	edx, [r14 + rax - 0x28955b88]
0xb3e5:	mov	eax, edi
0xb3e7:	lea	ecx, [rsi + rdi - 0x173848aa]
0xb3ee:	xor	eax, r15d
0xb3f1:	mov	dword ptr [rsp - 0x44], esi
0xb3f5:	mov	dword ptr [rsp - 0x34], r10d
0xb3fa:	and	eax, r11d
0xb3fd:	mov	r12d, dword ptr [rbx + 0x24]
0xb401:	mov	dword ptr [rsp - 0x3c], r8d
0xb406:	xor	eax, edi
0xb408:	lea	edi, [r8 + r11 - 0x3e423112]
0xb410:	mov	r8d, dword ptr [rbx + 0x2c]
0xb414:	add	eax, edx
0xb416:	mov	edx, r11d
0xb419:	rol	eax, 7
0xb41c:	xor	edx, r15d
0xb41f:	mov	dword ptr [rsp - 0x2c], r12d
0xb424:	add	eax, r11d
0xb427:	mov	dword ptr [rsp - 0x24], r8d
0xb42c:	and	edx, eax
0xb42e:	mov	r9d, eax
0xb431:	xor	edx, r15d
0xb434:	xor	r9d, r11d
0xb437:	add	edx, ecx
0xb439:	mov	ecx, dword ptr [rbx + 8]
0xb43c:	rol	edx, 0xc
0xb43f:	add	edx, eax
0xb441:	lea	esi, [rcx + r15 + 0x242070db]
0xb449:	mov	dword ptr [rsp - 0x40], ecx
0xb44d:	mov	ecx, r9d
0xb450:	and	ecx, edx
0xb452:	mov	r9d, eax
0xb455:	xor	ecx, r11d
0xb458:	xor	r9d, edx
0xb45b:	add	ecx, esi
0xb45d:	mov	esi, r9d
0xb460:	mov	r9d, dword ptr [rbx + 0x10]
0xb464:	ror	ecx, 0xf
0xb467:	add	ecx, edx
0xb469:	and	esi, ecx
0xb46b:	mov	dword ptr [rsp - 0x38], r9d
0xb470:	xor	esi, eax
0xb472:	add	esi, edi
0xb474:	lea	edi, [r9 + rax - 0xa83f051]
0xb47c:	mov	eax, edx
0xb47e:	ror	esi, 0xa
0xb481:	xor	eax, ecx
0xb483:	mov	r9d, dword ptr [rbx + 0x3c]
0xb487:	add	esi, ecx
0xb489:	and	eax, esi
0xb48b:	xor	eax, edx
0xb48d:	add	eax, edi
0xb48f:	lea	edi, [r10 + rdx + 0x4787c62a]
0xb497:	mov	edx, ecx
0xb499:	rol	eax, 7
0xb49c:	xor	edx, esi
0xb49e:	mov	r10d, ebp
0xb4a1:	add	eax, esi
0xb4a3:	mov	dword ptr [rsp - 0x1c], r10d
0xb4a8:	and	edx, eax
0xb4aa:	xor	edx, ecx
0xb4ac:	add	edx, edi
0xb4ae:	lea	edi, [rbp + rcx - 0x57cfb9ed]
0xb4b5:	mov	ebp, esi
0xb4b7:	xor	ebp, eax
0xb4b9:	rol	edx, 0xc
0xb4bc:	add	edx, eax
0xb4be:	mov	ecx, ebp
0xb4c0:	mov	ebp, eax
0xb4c2:	and	ecx, edx
0xb4c4:	xor	ebp, edx
0xb4c6:	xor	ecx, esi
0xb4c8:	add	ecx, edi
0xb4ca:	lea	edi, [r13 + rsi - 0x2b96aff]
0xb4d2:	mov	esi, ebp
0xb4d4:	ror	ecx, 0xf
0xb4d7:	mov	ebp, dword ptr [rbx + 0x20]
0xb4da:	add	ecx, edx
0xb4dc:	and	esi, ecx
0xb4de:	xor	esi, eax
0xb4e0:	mov	dword ptr [rsp - 0x30], ebp
0xb4e4:	add	esi, edi
0xb4e6:	lea	edi, [rbp + rax + 0x698098d8]
0xb4ed:	mov	eax, edx
0xb4ef:	ror	esi, 0xa
0xb4f2:	xor	eax, ecx
0xb4f4:	mov	ebp, dword ptr [rbx + 0x30]
0xb4f7:	add	esi, ecx
0xb4f9:	and	eax, esi
0xb4fb:	xor	eax, edx
0xb4fd:	add	eax, edi


0x9a42:	test	rsi, rsi
0x9a45:	mov	eax, 4
0x9a4a:	mov	edx, 0x20
0x9a4f:	cmove	rsi, rax
0x9a53:	mov	rax, rdx
0x9a56:	xor	ecx, ecx
0x9a58:	mul	rsi
0x9a5b:	jo	0x9acf


0x9996:	movabs	rax, 0x2aaaaaaaaaaaaa9
0x99a0:	cmp	rsi, rax
0x99a3:	ja	0x9a6b


0x78ae:	mov	r15, qword ptr [r15 + 0x40]
0x78b2:	test	r15, r15
0x78b5:	je	0x8560


0x7a98:	mov	ebp, r8d
0x7a9b:	cmp	byte ptr [r15 + 0x37], 0
0x7aa0:	je	0x7aa4


0x7a9b:	cmp	byte ptr [r15 + 0x37], 0
0x7aa0:	je	0x7aa4


0x8673:	cmp	rbp, r9
0x8676:	mov	rdx, r9
0x8679:	mov	rsi, rbx
0x867c:	cmovbe	rdx, rbp
0x8680:	mov	rdi, r12
0x8683:	mov	qword ptr [rsp + 8], r9
0x8688:	call	0x2df0


0x7d37:	add	r12, 1
0x7d3b:	cmp	r12, rcx
0x7d3e:	jae	0x7d4d


0x7d6d:	movzx	edx, byte ptr [rbx]
0x7d70:	cmp	byte ptr [r13 + rdx], 0
0x7d76:	jne	0x7d60


0x7d52:	jmp	0x8243


0x7d06:	add	rdi, 1
0x7d0a:	jmp	0x7ca0


0x7ccd:	movzx	esi, byte ptr [rbx]
0x7cd0:	cmp	byte ptr [r13 + rsi], 0
0x7cd6:	jne	0x7cc0


0x7cb5:	jmp	0x7dd3


0x7844:	cmp	byte ptr [r15 + 0x38], 0
0x7849:	je	0x7e28


0x7e48:	mov	rdx, qword ptr [rip + 0x212521]
0x7e4f:	mov	eax, dword ptr [rip + 0x212523]
0x7e55:	movdqa	xmm8, xmmword ptr [rip + 0x212482]
0x7e5e:	movdqa	xmm7, xmmword ptr [rip + 0x21248a]
0x7e66:	mov	qword ptr [rsp + 0x23c], rdx
0x7e6e:	mov	dword ptr [rsp + 0x244], eax
0x7e75:	movdqa	xmm6, xmmword ptr [rip + 0x212483]
0x7e7d:	mov	qword ptr [rsp + 0x1a0], rdx
0x7e85:	movdqa	xmm5, xmmword ptr [rip + 0x212483]
0x7e8d:	movdqa	xmm4, xmmword ptr [rip + 0x21248b]
0x7e95:	movdqa	xmm3, xmmword ptr [rip + 0x212493]
0x7e9d:	movdqa	xmm2, xmmword ptr [rip + 0x21249b]
0x7ea5:	movdqa	xmm1, xmmword ptr [rip + 0x2124a3]
0x7ead:	movdqa	xmm0, xmmword ptr [rip + 0x2124ab]
0x7eb5:	movups	xmmword ptr [rsp + 0x1ac], xmm8
0x7ebe:	movups	xmmword ptr [rsp + 0x1bc], xmm7
0x7ec6:	movups	xmmword ptr [rsp + 0x1cc], xmm6
0x7ece:	movups	xmmword ptr [rsp + 0x1dc], xmm5
0x7ed6:	movups	xmmword ptr [rsp + 0x1ec], xmm4
0x7ede:	movups	xmmword ptr [rsp + 0x1fc], xmm3
0x7ee6:	movups	xmmword ptr [rsp + 0x20c], xmm2
0x7eee:	movups	xmmword ptr [rsp + 0x21c], xmm1
0x7ef6:	movups	xmmword ptr [rsp + 0x22c], xmm0
0x7efe:	movaps	xmmword ptr [rsp + 0x110], xmm8
0x7f07:	movaps	xmmword ptr [rsp + 0x120], xmm7
0x7f0f:	movaps	xmmword ptr [rsp + 0x130], xmm6
0x7f17:	movaps	xmmword ptr [rsp + 0x140], xmm5
0x7f1f:	movaps	xmmword ptr [rsp + 0x150], xmm4
0x7f27:	movaps	xmmword ptr [rsp + 0x160], xmm3
0x7f2f:	movaps	xmmword ptr [rsp + 0x170], xmm2
0x7f37:	movaps	xmmword ptr [rsp + 0x180], xmm1
0x7f3f:	movaps	xmmword ptr [rsp + 0x190], xmm0
0x7f47:	mov	dword ptr [rsp + 0x1a8], eax
0x7f4e:	cmp	byte ptr [rip + 0x21292c], 0
0x7f55:	je	0x8288


0x7c1e:	mov	rdi, r13
0x7c21:	mov	qword ptr [rsp + 0x48], r9
0x7c26:	mov	qword ptr [rsp + 0x20], rsi
0x7c2b:	call	0x5f40


0x7bf0:	add	r13, 1
0x7bf4:	movzx	eax, byte ptr [r13]
0x7bf9:	cmp	byte ptr [r14 + rax], 0
0x7bfe:	jne	0x7bf0


0x79e4:	mov	byte ptr [rdi + r9], al
0x79e8:	add	r9, 1
0x79ec:	add	rbx, 1
0x79f0:	cmp	r10, rbx
0x79f3:	jne	0x79c8


0x79e0:	movzx	eax, byte ptr [rdx + rax]
0x79e4:	mov	byte ptr [rdi + r9], al
0x79e8:	add	r9, 1
0x79ec:	add	rbx, 1
0x79f0:	cmp	r10, rbx
0x79f3:	jne	0x79c8


0x79ec:	add	rbx, 1
0x79f0:	cmp	r10, rbx
0x79f3:	jne	0x79c8


0x79ae:	lea	rax, [rsi + rbp]
0x79b2:	test	r9, r9
0x79b5:	mov	byte ptr [rax], 0
0x79b8:	je	0x7dc0


0x7980:	test	r13, r13
0x7983:	movzx	eax, byte ptr [r12]
0x7988:	je	0x7995




0x767d:	jmp	0x7423


0x7412:	mov	rdx, r14
0x7415:	mov	rsi, r13
0x7418:	mov	rdi, r15
0x741b:	call	0x6a60


0x6af8:	add	rax, 1
0x6afc:	cmp	rcx, rax
0x6aff:	je	0x6b0a


0x6b65:	movzx	edi, byte ptr [rax]
0x6b68:	cmp	byte ptr [rsi + rdi], 0
0x6b6c:	je	0x6b58


0x6b78:	jmp	0x6ad8


0x6a41:	movzx	esi, byte ptr [rdi]
0x6a44:	cmp	byte ptr [rcx + rsi], 0
0x6a48:	je	0x6a38


0x6a54:	jmp	0x69c3


0x6130:	cmp	byte ptr [rdi + 0x32], 0
0x6134:	je	0x613d


0x6129:	mov	byte ptr [rax], 0x4d
0x612c:	add	rax, 1
0x6130:	cmp	byte ptr [rdi + 0x32], 0
0x6134:	je	0x613d


0x60b3:	movzx	eax, byte ptr [rdi + 0x33]
0x60b7:	xor	eax, 1
0x60ba:	ret	


0x6022:	ja	0x6060


0x12c81:	cmp	esi, 1
0x12c84:	jne	0x12ce8


0x12d3b:	cmp	esi, 8
0x12d3e:	jne	0x12ce8


0x12ce0:	cmp	esi, 0x400
0x12ce6:	je	0x12d40


0x12d26:	jmp	0x12c90


0x12ce8:	mov	eax, dword ptr [rsp]
0x12ceb:	cmp	eax, 0x2f
0x12cee:	ja	0x12e2a


0x11750:	mov	r10d, r8d
0x11753:	jmp	0x1143b


0x115ce:	lea	r8d, [r9 - 0x30]
0x115d2:	cmp	r8d, 9
0x115d6:	ja	0x11621


0x1144b:	cmp	edx, r9d
0x1144e:	lea	r8d, [rax - 0x30]
0x11452:	je	0x116c0


0x113b7:	cmp	edx, r11d
0x113ba:	je	0x11540


0x11527:	cmp	edx, r8d
0x1152a:	je	0x11580


0x116d7:	mov	r9d, r10d
0x116da:	jmp	0x112db


0x11569:	lea	eax, [r11 - 0x30]
0x1156d:	cmp	eax, 9
0x11570:	ja	0x115a0


0x112ec:	sub	r8d, 0x30
0x112f0:	cmp	edx, r11d
0x112f3:	je	0x115b5


0xbeb5:	mov	edx, r12d
0xbeb8:	movzx	eax, word ptr [rbx + rdx - 2]
0xbebd:	mov	word ptr [rcx + rdx - 2], ax
0xbec2:	jmp	0xbcc2


0xb4ff:	lea	edi, [r12 + rdx - 0x74bb0851]
0xb507:	mov	edx, ecx
0xb509:	rol	eax, 7
0xb50c:	xor	edx, esi
0xb50e:	mov	r12d, dword ptr [rbx + 0x38]
0xb512:	add	eax, esi
0xb514:	and	edx, eax
0xb516:	xor	edx, ecx
0xb518:	add	edx, edi
0xb51a:	mov	edi, dword ptr [rbx + 0x28]
0xb51d:	rol	edx, 0xc
0xb520:	add	edx, eax
0xb522:	mov	dword ptr [rsp - 0x28], edi
0xb526:	lea	edi, [rdi + rcx - 0xa44f]
0xb52d:	mov	ecx, esi
0xb52f:	xor	ecx, eax
0xb531:	and	ecx, edx
0xb533:	xor	ecx, esi
0xb535:	add	ecx, edi
0xb537:	lea	edi, [r8 + rsi - 0x76a32842]
0xb53f:	mov	esi, eax
0xb541:	ror	ecx, 0xf
0xb544:	xor	esi, edx
0xb546:	mov	r8d, dword ptr [rbx + 0x34]
0xb54a:	add	ecx, edx
0xb54c:	add	rbx, 0x40
0xb550:	and	esi, ecx
0xb552:	xor	esi, eax
0xb554:	add	esi, edi
0xb556:	lea	edi, [rbp + rax + 0x6b901122]
0xb55d:	mov	eax, edx
0xb55f:	ror	esi, 0xa
0xb562:	xor	eax, ecx
0xb564:	add	esi, ecx
0xb566:	and	eax, esi
0xb568:	xor	eax, edx
0xb56a:	add	eax, edi
0xb56c:	lea	edi, [r8 + rdx - 0x2678e6d]
0xb574:	mov	edx, ecx
0xb576:	rol	eax, 7
0xb579:	xor	edx, esi
0xb57b:	add	eax, esi
0xb57d:	and	edx, eax
0xb57f:	xor	edx, ecx
0xb581:	add	edx, edi
0xb583:	lea	edi, [r12 + rcx - 0x5986bc72]
0xb58b:	mov	ecx, esi
0xb58d:	rol	edx, 0xc
0xb590:	xor	ecx, eax
0xb592:	add	edx, eax
0xb594:	and	ecx, edx
0xb596:	xor	ecx, esi
0xb598:	add	ecx, edi
0xb59a:	lea	edi, [r9 + rsi + 0x49b40821]
0xb5a2:	mov	esi, eax
0xb5a4:	ror	ecx, 0xf
0xb5a7:	xor	esi, edx
0xb5a9:	add	ecx, edx
0xb5ab:	and	esi, ecx
0xb5ad:	xor	esi, eax
0xb5af:	add	esi, edi
0xb5b1:	mov	edi, dword ptr [rsp - 0x44]
0xb5b5:	ror	esi, 0xa
0xb5b8:	add	esi, ecx
0xb5ba:	lea	edi, [rdi + rax - 0x9e1da9e]
0xb5c1:	mov	eax, ecx
0xb5c3:	xor	eax, esi
0xb5c5:	and	eax, edx
0xb5c7:	xor	eax, ecx
0xb5c9:	add	eax, edi
0xb5cb:	lea	edi, [r10 + rdx - 0x3fbf4cc0]
0xb5d3:	mov	edx, esi
0xb5d5:	rol	eax, 5
0xb5d8:	add	eax, esi
0xb5da:	xor	edx, eax
0xb5dc:	and	edx, ecx
0xb5de:	xor	edx, esi
0xb5e0:	add	edx, edi
0xb5e2:	mov	edi, dword ptr [rsp - 0x24]
0xb5e6:	rol	edx, 9
0xb5e9:	add	edx, eax
0xb5eb:	lea	edi, [rdi + rcx + 0x265e5a51]
0xb5f2:	mov	ecx, eax
0xb5f4:	xor	ecx, edx
0xb5f6:	and	ecx, esi
0xb5f8:	xor	ecx, eax
0xb5fa:	add	ecx, edi
0xb5fc:	lea	edi, [r14 + rsi - 0x16493856]
0xb604:	mov	esi, edx
0xb606:	rol	ecx, 0xe
0xb609:	add	ecx, edx
0xb60b:	xor	esi, ecx
0xb60d:	and	esi, eax
0xb60f:	xor	esi, edx
0xb611:	add	esi, edi
0xb613:	mov	edi, dword ptr [rsp - 0x34]
0xb617:	ror	esi, 0xc
0xb61a:	add	esi, ecx
0xb61c:	lea	edi, [rdi + rax - 0x29d0efa3]


0x9acf:	mov	ecx, 1
0x9ad4:	jmp	0x9a5d


0x9a5d:	test	rax, rax
0x9a60:	js	0x9a6b


0x99a9:	shr	rdx, 6
0x99ad:	lea	rsi, [rsi + rdx + 1]
0x99b2:	shl	rsi, 5
0x99b6:	mov	r12, rsi
0x99b9:	call	0x11e40


0x9a6b:	call	0x12030


0x8560:	mov	ebp, r8d
0x8563:	jmp	0x7aa4


0x78bb:	mov	rax, qword ptr [rsp + 0x38]
0x78c0:	cmp	qword ptr [r15 + 0x10], -1
0x78c5:	mov	r12, qword ptr [rax]
0x78c8:	mov	r13, qword ptr [rax + 8]
0x78cc:	mov	rax, qword ptr [rsp + 0x40]
0x78d1:	mov	rbp, qword ptr [rax + 8]
0x78d5:	mov	rbx, qword ptr [rax]
0x78d8:	mov	qword ptr [rsp + 8], rbp
0x78dd:	je	0x7b30


0x7aa4:	mov	rcx, qword ptr [rsp + 0x2198]
0x7aac:	xor	rcx, qword ptr fs:[0x28]
0x7ab5:	mov	eax, ebp
0x7ab7:	jne	0x86d9


0x7aa2:	neg	ebp
0x7aa4:	mov	rcx, qword ptr [rsp + 0x2198]
0x7aac:	xor	rcx, qword ptr fs:[0x28]
0x7ab5:	mov	eax, ebp
0x7ab7:	jne	0x86d9


0x8599:	cmp	rbx, rax
0x859c:	jae	0x869d


0x869d:	cmp	rbp, r9
0x86a0:	jb	0x86af


0x7d78:	jmp	0x7d10


0x7d60:	add	rbx, 1
0x7d64:	cmp	rax, rbx
0x7d67:	je	0x8240


0x8243:	cmp	r12, rcx
0x8246:	jmp	0x7dd6


0x7cd8:	cmp	rcx, rdi
0x7cdb:	jbe	0x7dd3


0x7cc0:	add	rbx, 1
0x7cc4:	cmp	rax, rbx
0x7cc7:	je	0x7dd0


0x7dd3:	cmp	rdi, rcx
0x7dd6:	setb	bpl
0x7dda:	cmp	rax, rbx
0x7ddd:	seta	al
0x7de0:	movzx	ebp, bpl
0x7de4:	movzx	eax, al
0x7de7:	mov	r8d, ebp
0x7dea:	sub	r8d, eax
0x7ded:	jmp	0x78a5


0x7e28:	test	rbp, rbp
0x7e2b:	jne	0x8250


0x784f:	mov	rsi, rbx
0x7852:	mov	rdi, r12
0x7855:	mov	qword ptr [rsp + 0x10], r9
0x785a:	call	0xc1b0


0x8288:	mov	rdx, qword ptr [rsp + 0x78]
0x828d:	mov	rsi, rbp
0x8290:	mov	rdi, r12
0x8293:	mov	qword ptr [rsp + 0x10], r9
0x8298:	lea	r13, [rsp + 0xf0]
0x82a0:	call	0xbbf0


0x7f5b:	lea	rax, [r12 + rbp]
0x7f5f:	xor	r8d, r8d
0x7f62:	mov	qword ptr [rsp + 0x90], r15
0x7f6a:	mov	qword ptr [rsp + 0x20], rbx
0x7f6f:	mov	qword ptr [rsp + 0x68], 0
0x7f78:	mov	r15d, r8d
0x7f7b:	mov	qword ptr [rsp + 0x50], rax
0x7f80:	lea	rax, [rbx + r9]
0x7f84:	mov	qword ptr [rsp + 0x48], 0xfa0
0x7f8d:	mov	qword ptr [rsp + 0x98], r12
0x7f95:	mov	qword ptr [rsp + 0xa0], rbx
0x7f9d:	mov	qword ptr [rsp + 0x60], rax
0x7fa2:	lea	rax, [rbp + r9]
0x7fa7:	mov	qword ptr [rsp + 0xa8], rbp
0x7faf:	mov	qword ptr [rsp + 0xb0], r9
0x7fb7:	lea	rax, [rax + rax*2 + 2]
0x7fbc:	mov	qword ptr [rsp + 0x88], rax
0x7fc4:	lea	rax, [rsp + 0x11f0]
0x7fcc:	mov	qword ptr [rsp + 0xb8], rax
0x7fd4:	mov	qword ptr [rsp + 0x10], rax
0x7fd9:	nop	dword ptr [rax]
0x7fe0:	mov	rcx, qword ptr [rsp + 0x48]
0x7fe5:	cmp	qword ptr [rsp + 0x88], rcx
0x7fed:	ja	0x80eb


0x7c10:	add	rsi, 1
0x7c14:	movzx	eax, byte ptr [rsi]
0x7c17:	cmp	byte ptr [r14 + rax], 0
0x7c1c:	jne	0x7c10


0x79f5:	lea	rax, [rdi + r9]
0x79f9:	mov	byte ptr [rax], 0
0x79fc:	cmp	byte ptr [r15 + 0x32], 0
0x7a01:	mov	rbx, rdi
0x7a04:	mov	r12, rsi
0x7a07:	je	0x7818


0x79c8:	test	r13, r13
0x79cb:	movzx	eax, byte ptr [rbx]
0x79ce:	je	0x79db


0x7dc0:	mov	rax, rdi
0x7dc3:	jmp	0x79f9


0x7423:	cmp	byte ptr [r14 + 0x30], 0
0x7428:	je	0x7430


0x6b58:	add	rax, 1
0x6b5c:	cmp	rcx, rax
0x6b5f:	jbe	0x6ad8


0x6a38:	add	rdi, 1
0x6a3c:	cmp	rax, rdi
0x6a3f:	jbe	0x69ea


0x613d:	cmp	byte ptr [rdi + 0x33], 0
0x6141:	je	0x614a


0x6136:	mov	byte ptr [rax], 0x6e
0x6139:	add	rax, 1
0x613d:	cmp	byte ptr [rdi + 0x33], 0
0x6141:	je	0x614a


0x12cf4:	add	rax, qword ptr [rsp + 0x10]
0x12cf9:	mov	rdx, qword ptr [rax]
0x12cfc:	mov	edi, ebp
0x12cfe:	xor	eax, eax
0x12d00:	call	0x2bd0


0x12e2a:	mov	rax, qword ptr [rsp + 8]
0x12e2f:	jmp	0x12cf9


0x11400:	add	rdi, 1
0x11404:	movzx	eax, byte ptr [rdi]
0x11407:	cmp	ecx, eax
0x11409:	mov	r8d, eax
0x1140c:	mov	r11d, eax
0x1140f:	je	0x11400


0x1143b:	cmp	edx, eax
0x1143d:	je	0x11621


0x115d8:	mov	r11d, edx
0x115db:	jmp	0x1144b


0x11621:	cmp	dl, byte ptr [rsi]
0x11623:	movzx	r8d, byte ptr [rdi]
0x11627:	je	0x116f0


0x116c0:	cmp	r8d, 9
0x116c4:	ja	0x11621


0x11458:	mov	eax, r9d
0x1145b:	lea	edx, [r9 - 0x30]
0x1145f:	sub	eax, r11d
0x11462:	cmp	r8d, 9
0x11466:	ja	0x116df


0x11540:	add	rsi, 1
0x11544:	movzx	r9d, byte ptr [rsi]
0x11548:	cmp	r9b, 0x30
0x1154c:	je	0x11540


0x113c0:	sub	r11d, 0x30
0x113c4:	xor	eax, eax
0x113c6:	cmp	r11d, 9
0x113ca:	setbe	al
0x113cd:	neg	eax
0x113cf:	ret	


0x11580:	add	rdi, 1
0x11584:	movzx	r10d, byte ptr [rdi]
0x11588:	cmp	r10b, 0x30
0x1158c:	je	0x11580


0x1152c:	sub	r8d, 0x30
0x11530:	xor	eax, eax
0x11532:	cmp	r8d, 9
0x11536:	setbe	al
0x11539:	ret	


0x112a0:	add	rdi, 1
0x112a4:	movzx	r8d, byte ptr [rdi]
0x112a8:	cmp	ecx, r8d
0x112ab:	mov	r10d, r8d
0x112ae:	mov	eax, r8d
0x112b1:	je	0x112a0


0x112db:	cmp	edx, r8d
0x112de:	je	0x115a0


0x11572:	mov	eax, edx
0x11574:	jmp	0x112ec


0x115a0:	cmp	dl, byte ptr [rdi]
0x115a2:	movzx	r8d, byte ptr [rsi]
0x115a6:	je	0x11650


0x115b5:	cmp	r8d, 9
0x115b9:	ja	0x115a0


0x112f9:	sub	eax, r11d
0x112fc:	sub	r11d, 0x30
0x11300:	cmp	r8d, 9
0x11304:	ja	0x115e0


0xb623:	mov	eax, ecx
0xb625:	xor	eax, esi
0xb627:	and	eax, edx
0xb629:	xor	eax, ecx
0xb62b:	add	eax, edi
0xb62d:	mov	edi, dword ptr [rsp - 0x28]
0xb631:	rol	eax, 5
0xb634:	add	eax, esi
0xb636:	lea	edi, [rdi + rdx + 0x2441453]
0xb63d:	mov	edx, esi
0xb63f:	xor	edx, eax
0xb641:	and	edx, ecx
0xb643:	xor	edx, esi
0xb645:	add	edx, edi
0xb647:	lea	edi, [r9 + rcx - 0x275e197f]
0xb64f:	mov	ecx, eax
0xb651:	rol	edx, 9
0xb654:	add	edx, eax
0xb656:	xor	ecx, edx
0xb658:	and	ecx, esi
0xb65a:	xor	ecx, eax
0xb65c:	add	ecx, edi
0xb65e:	mov	edi, dword ptr [rsp - 0x38]
0xb662:	mov	r10d, dword ptr [rsp - 0x2c]
0xb667:	rol	ecx, 0xe
0xb66a:	add	ecx, edx
0xb66c:	lea	edi, [rdi + rsi - 0x182c0438]
0xb673:	mov	esi, edx
0xb675:	xor	esi, ecx
0xb677:	and	esi, eax
0xb679:	xor	esi, edx
0xb67b:	add	esi, edi
0xb67d:	lea	edi, [r10 + rax + 0x21e1cde6]
0xb685:	mov	eax, ecx
0xb687:	ror	esi, 0xc
0xb68a:	mov	r10d, dword ptr [rsp - 0x30]
0xb68f:	add	esi, ecx
0xb691:	xor	eax, esi
0xb693:	and	eax, edx
0xb695:	xor	eax, ecx
0xb697:	add	eax, edi
0xb699:	lea	edi, [r12 + rdx - 0x3cc8f82a]
0xb6a1:	mov	edx, esi
0xb6a3:	rol	eax, 5
0xb6a6:	add	eax, esi
0xb6a8:	xor	edx, eax
0xb6aa:	and	edx, ecx
0xb6ac:	xor	edx, esi
0xb6ae:	add	edx, edi
0xb6b0:	mov	edi, dword ptr [rsp - 0x3c]
0xb6b4:	rol	edx, 9
0xb6b7:	add	edx, eax
0xb6b9:	lea	edi, [rdi + rcx - 0xb2af279]
0xb6c0:	mov	ecx, eax
0xb6c2:	xor	ecx, edx
0xb6c4:	and	ecx, esi
0xb6c6:	lea	esi, [r10 + rsi + 0x455a14ed]
0xb6ce:	mov	r10d, edx
0xb6d1:	xor	ecx, eax
0xb6d3:	add	ecx, edi
0xb6d5:	rol	ecx, 0xe
0xb6d8:	add	ecx, edx
0xb6da:	xor	r10d, ecx
0xb6dd:	mov	edi, r10d
0xb6e0:	and	edi, eax
0xb6e2:	xor	edi, edx
0xb6e4:	add	edi, esi
0xb6e6:	lea	esi, [r8 + rax - 0x561c16fb]
0xb6ee:	mov	eax, ecx
0xb6f0:	ror	edi, 0xc
0xb6f3:	add	edi, ecx
0xb6f5:	xor	eax, edi
0xb6f7:	lea	r10d, [rbp + rdi - 0x72d5b376]
0xb6ff:	and	eax, edx
0xb701:	xor	eax, ecx
0xb703:	mov	dword ptr [rsp - 0x14], r10d
0xb708:	add	eax, esi
0xb70a:	mov	esi, dword ptr [rsp - 0x40]
0xb70e:	rol	eax, 5
0xb711:	add	eax, edi
0xb713:	lea	esi, [rsi + rdx - 0x3105c08]
0xb71a:	mov	edx, edi
0xb71c:	xor	edx, eax
0xb71e:	and	edx, ecx
0xb720:	lea	ecx, [r13 + rcx + 0x676f02d9]
0xb728:	xor	edx, edi
0xb72a:	add	edx, esi
0xb72c:	mov	esi, eax
0xb72e:	rol	edx, 9
0xb731:	add	edx, eax
0xb733:	xor	esi, edx
0xb735:	and	esi, edi
0xb737:	xor	esi, eax
0xb739:	add	esi, ecx
0xb73b:	mov	ecx, edx
0xb73d:	rol	esi, 0xe
0xb740:	add	esi, edx
0xb742:	xor	ecx, esi
0xb744:	mov	r10d, ecx


0x9a62:	test	rcx, rcx
0x9a65:	je	0x99b2


0x7b30:	mov	rax, qword ptr [rsp + 8]
0x7b35:	lea	r11, [r12 + r13 - 1]
0x7b3a:	lea	rbp, [rbx + rax - 1]
0x7b3f:	jmp	0x7905


0x78e3:	mov	rdx, r15
0x78e6:	mov	rsi, r13
0x78e9:	mov	rdi, r12
0x78ec:	call	0x6a60


0x7abd:	add	rsp, 0x21a8
0x7ac4:	pop	rbx
0x7ac5:	pop	rbp
0x7ac6:	pop	r12
0x7ac8:	pop	r13
0x7aca:	pop	r14
0x7acc:	pop	r15
0x7ace:	ret	


0x86d9:	call	0x2ca0


0x85a2:	add	r12, 1
0x85a6:	movzx	esi, byte ptr [r12 - 1]
0x85ac:	add	rbx, 1
0x85b0:	movzx	r8d, byte ptr [rdx + rsi]
0x85b5:	movzx	esi, byte ptr [rbx - 1]
0x85b9:	movzx	esi, byte ptr [rdx + rsi]
0x85bd:	sub	r8d, esi
0x85c0:	je	0x8590


0x86af:	mov	ebp, 0xffffffff
0x86b4:	jmp	0x7a9b


0x86a2:	setne	r8b
0x86a6:	movzx	r8d, r8b
0x86aa:	jmp	0x78a5


0x7d10:	cmp	rcx, r12
0x7d13:	jbe	0x8243


0x8240:	mov	rbx, rax
0x8243:	cmp	r12, rcx
0x8246:	jmp	0x7dd6


0x7dd6:	setb	bpl
0x7dda:	cmp	rax, rbx
0x7ddd:	seta	al
0x7de0:	movzx	ebp, bpl
0x7de4:	movzx	eax, al
0x7de7:	mov	r8d, ebp
0x7dea:	sub	r8d, eax
0x7ded:	jmp	0x78a5


0x7ce1:	cmp	rax, rbx
0x7ce4:	jbe	0x7dd3


0x7dd0:	mov	rbx, rax
0x7dd3:	cmp	rdi, rcx
0x7dd6:	setb	bpl
0x7dda:	cmp	rax, rbx
0x7ddd:	seta	al
0x7de0:	movzx	ebp, bpl
0x7de4:	movzx	eax, al
0x7de7:	mov	r8d, ebp
0x7dea:	sub	r8d, eax
0x7ded:	jmp	0x78a5


0x7e31:	xor	eax, eax
0x7e33:	test	r9, r9
0x7e36:	setne	al
0x7e39:	neg	eax
0x7e3b:	mov	r8d, eax
0x7e3e:	jmp	0x7888


0x8250:	test	r9, r9
0x8253:	mov	r8d, 1
0x8259:	je	0x7888


0x7ff3:	cmp	qword ptr [rsp + 0x50], r12
0x7ff8:	ja	0x8139


0x80eb:	mov	rdx, qword ptr [rsp + 0x88]
0x80f3:	lea	rax, [rcx + rcx*2]
0x80f7:	mov	rdi, qword ptr [rsp + 0x68]
0x80fc:	shr	rax, 1
0x80ff:	cmp	rdx, rax
0x8102:	cmovae	rax, rdx
0x8106:	mov	rbx, rax
0x8109:	mov	qword ptr [rsp + 0x48], rax
0x810e:	call	0x31c0


0x7430:	cmp	byte ptr [r14 + 0x36], 0
0x7435:	jne	0x744b


0x742a:	cmp	r11, -1
0x742e:	je	0x744b


0x614a:	cmp	byte ptr [rdi + 0x37], 0
0x614e:	je	0x6157


0x6143:	mov	byte ptr [rax], 0x52
0x6146:	add	rax, 1
0x614a:	cmp	byte ptr [rdi + 0x37], 0
0x614e:	je	0x6157


0x12cf9:	mov	rdx, qword ptr [rax]
0x12cfc:	mov	edi, ebp
0x12cfe:	xor	eax, eax
0x12d00:	call	0x2bd0


0x11418:	add	rsi, 1
0x1141c:	movzx	r9d, byte ptr [rsi]
0x11420:	cmp	ecx, r9d
0x11423:	mov	r10d, r9d
0x11426:	je	0x11418


0x11428:	cmp	r8b, r9b
0x1142b:	jne	0x115c6


0x11443:	movzx	eax, r10b
0x11447:	movzx	r9d, r8b
0x1144b:	cmp	edx, r9d
0x1144e:	lea	r8d, [rax - 0x30]
0x11452:	je	0x116c0


0x116f0:	cmp	dl, r8b
0x116f3:	movzx	ecx, byte ptr [rsi + 1]
0x116f7:	je	0x1171d


0x1162d:	xor	eax, eax
0x1162f:	cmp	dl, r8b
0x11632:	jne	0x115b3


0x116ca:	mov	eax, edx
0x116cc:	sub	edx, 0x30
0x116cf:	sub	eax, r11d
0x116d2:	jmp	0x1146c


0x1146c:	xor	r9d, r9d
0x1146f:	nop	
0x11470:	add	rdi, 1
0x11474:	movzx	r8d, byte ptr [rdi]
0x11478:	cmp	ecx, r8d
0x1147b:	je	0x11470


0x116df:	xor	r9d, r9d
0x116e2:	cmp	edx, 9
0x116e5:	jbe	0x11494


0x1154e:	movzx	r11d, r9b
0x11552:	jmp	0x113c0


0x1158e:	movzx	r8d, r10b
0x11592:	jmp	0x1152c


0x112b8:	add	rsi, 1
0x112bc:	movzx	r11d, byte ptr [rsi]
0x112c0:	cmp	ecx, r11d
0x112c3:	mov	r9d, r11d
0x112c6:	je	0x112b8


0x112c8:	cmp	r10b, r11b
0x112cb:	jne	0x11560


0x112e4:	movzx	r11d, r10b
0x112e8:	movzx	r8d, r9b
0x112ec:	sub	r8d, 0x30
0x112f0:	cmp	edx, r11d
0x112f3:	je	0x115b5


0x11650:	cmp	dl, r8b
0x11653:	movzx	ecx, byte ptr [rdi + 1]
0x11657:	je	0x1168a


0x115ac:	xor	eax, eax
0x115ae:	cmp	dl, r8b
0x115b1:	je	0x115f9


0x115bb:	sub	eax, edx
0x115bd:	lea	r11d, [rdx - 0x30]
0x115c1:	jmp	0x1130a


0x1130a:	xor	r8d, r8d
0x1130d:	nop	dword ptr [rax]
0x11310:	add	rdi, 1
0x11314:	movzx	edx, byte ptr [rdi]
0x11317:	cmp	ecx, edx
0x11319:	je	0x11310


0x115e0:	xor	r8d, r8d
0x115e3:	cmp	r11d, 9
0x115e7:	jbe	0x11331


0xb747:	and	r10d, eax
0xb74a:	mov	edi, r10d
0xb74d:	mov	r10d, dword ptr [rsp - 0x34]
0xb752:	xor	edi, edx
0xb754:	add	edi, dword ptr [rsp - 0x14]
0xb758:	lea	eax, [r10 + rax - 0x5c6be]
0xb760:	ror	edi, 0xc
0xb763:	add	edi, esi
0xb765:	xor	ecx, edi
0xb767:	add	ecx, eax
0xb769:	mov	eax, dword ptr [rsp - 0x30]
0xb76d:	rol	ecx, 4
0xb770:	add	ecx, edi
0xb772:	lea	eax, [rax + rdx - 0x788e097f]
0xb779:	mov	edx, esi
0xb77b:	xor	edx, edi
0xb77d:	xor	edx, ecx
0xb77f:	add	edx, eax
0xb781:	mov	eax, dword ptr [rsp - 0x24]
0xb785:	rol	edx, 0xb
0xb788:	add	edx, ecx
0xb78a:	lea	eax, [rax + rsi + 0x6d9d6122]
0xb791:	mov	esi, edi
0xb793:	lea	edi, [r12 + rdi - 0x21ac7f4]
0xb79b:	xor	esi, ecx
0xb79d:	xor	esi, edx
0xb79f:	add	esi, eax
0xb7a1:	mov	eax, ecx
0xb7a3:	rol	esi, 0x10
0xb7a6:	xor	eax, edx
0xb7a8:	add	esi, edx
0xb7aa:	xor	eax, esi
0xb7ac:	mov	r10d, esi
0xb7af:	add	eax, edi
0xb7b1:	mov	edi, dword ptr [rsp - 0x44]
0xb7b5:	ror	eax, 9
0xb7b8:	add	eax, esi
0xb7ba:	lea	edi, [rdi + rcx - 0x5b4115bc]
0xb7c1:	mov	ecx, edx
0xb7c3:	xor	r10d, eax
0xb7c6:	xor	ecx, esi
0xb7c8:	lea	esi, [r13 + rsi - 0x944b4a0]
0xb7d0:	xor	ecx, eax
0xb7d2:	add	ecx, edi
0xb7d4:	mov	edi, dword ptr [rsp - 0x38]
0xb7d8:	rol	ecx, 4
0xb7db:	add	ecx, eax
0xb7dd:	lea	edx, [rdi + rdx + 0x4bdecfa9]
0xb7e4:	mov	edi, r10d
0xb7e7:	xor	edi, ecx
0xb7e9:	add	edi, edx
0xb7eb:	mov	edx, eax
0xb7ed:	rol	edi, 0xb
0xb7f0:	xor	edx, ecx
0xb7f2:	add	edi, ecx
0xb7f4:	xor	edx, edi
0xb7f6:	add	edx, esi
0xb7f8:	mov	esi, dword ptr [rsp - 0x28]
0xb7fc:	rol	edx, 0x10
0xb7ff:	add	edx, edi
0xb801:	lea	eax, [rsi + rax - 0x41404390]
0xb808:	mov	esi, ecx
0xb80a:	xor	esi, edi
0xb80c:	xor	esi, edx
0xb80e:	add	esi, eax
0xb810:	lea	eax, [r8 + rcx + 0x289b7ec6]
0xb818:	mov	ecx, edi
0xb81a:	ror	esi, 9
0xb81d:	xor	ecx, edx
0xb81f:	lea	edi, [r14 + rdi - 0x155ed806]
0xb827:	add	esi, edx
0xb829:	xor	ecx, esi
0xb82b:	mov	r10d, esi
0xb82e:	add	ecx, eax
0xb830:	mov	eax, edx
0xb832:	rol	ecx, 4
0xb835:	xor	eax, esi
0xb837:	add	ecx, esi
0xb839:	xor	eax, ecx
0xb83b:	xor	r10d, ecx
0xb83e:	add	eax, edi
0xb840:	mov	edi, dword ptr [rsp - 0x3c]
0xb844:	rol	eax, 0xb
0xb847:	add	eax, ecx
0xb849:	lea	edx, [rdi + rdx - 0x2b10cf7b]
0xb850:	mov	edi, r10d
0xb853:	xor	edi, eax
0xb855:	add	edi, edx
0xb857:	mov	edx, dword ptr [rsp - 0x1c]
0xb85b:	rol	edi, 0x10
0xb85e:	add	edi, eax
0xb860:	lea	edx, [rdx + rsi + 0x4881d05]
0xb867:	mov	esi, ecx
0xb869:	xor	esi, eax
0xb86b:	xor	esi, edi
0xb86d:	add	esi, edx
0xb86f:	mov	edx, dword ptr [rsp - 0x2c]
0xb873:	ror	esi, 9
0xb876:	add	esi, edi


0x99b2:	shl	rsi, 5
0x99b6:	mov	r12, rsi
0x99b9:	call	0x11e40


0x7905:	cmp	qword ptr [r15], -1
0x7909:	je	0x7ad0


0x8590:	cmp	r12, rcx
0x8593:	jae	0x869d


0x85c2:	jmp	0x7a98


0x7d19:	cmp	rax, rbx
0x7d1c:	jbe	0x8243


0x7cea:	movzx	esi, byte ptr [rdi]
0x7ced:	movzx	r8d, byte ptr [rdx + rsi]
0x7cf2:	movzx	esi, byte ptr [rbx]
0x7cf5:	movzx	esi, byte ptr [rdx + rsi]
0x7cf9:	sub	r8d, esi
0x7cfc:	jne	0x7a98


0x7888:	cmp	byte ptr [rsp + 8], 0
0x788d:	jne	0x7a77


0x825f:	lea	rcx, [r9 + 1]
0x8263:	lea	rsi, [rbp + 1]
0x8267:	mov	rdx, rbx
0x826a:	mov	rdi, r12
0x826d:	mov	qword ptr [rsp + 0x10], r9
0x8272:	call	0x12180


0x7ffe:	mov	rdx, qword ptr [rsp + 0x20]
0x8003:	cmp	qword ptr [rsp + 0x60], rdx
0x8008:	ja	0x8498


0x8139:	mov	rbp, qword ptr [rsp + 0x48]
0x813e:	mov	rdi, qword ptr [rsp + 0x10]
0x8143:	mov	rsi, r12
0x8146:	xor	ebx, ebx
0x8148:	mov	rdx, rbp
0x814b:	call	0x6560


0x7437:	movabs	rax, 0xffff00ff0000
0x7441:	test	qword ptr [r14 + 0x30], rax
0x7445:	je	0x74f8


0x744b:	movzx	r13d, byte ptr [r9]
0x744f:	mov	byte ptr [r9], 0
0x7453:	movzx	eax, byte ptr [rbx]
0x7456:	cmp	byte ptr [rbp + rax], 0
0x745b:	je	0x746e


0x6157:	cmp	byte ptr [rdi + 0x38], 0
0x615b:	je	0x6164


0x6150:	mov	byte ptr [rax], 0x72
0x6153:	add	rax, 1
0x6157:	cmp	byte ptr [rdi + 0x38], 0
0x615b:	je	0x6164


0x11431:	sub	r9d, 0x30
0x11435:	cmp	r9d, 9
0x11439:	jbe	0x11400


0x1171d:	add	rdi, 1
0x11721:	movsx	r8d, byte ptr [rdi]
0x11725:	add	rsi, 1
0x11729:	cmp	r8b, cl
0x1172c:	lea	edx, [r8 - 0x30]
0x11730:	je	0x11710


0x116f9:	add	rsi, 1
0x116fd:	jmp	0x11706


0x11638:	add	rdi, 1
0x1163c:	movsx	eax, byte ptr [rdi]
0x1163f:	cmp	al, 0x30
0x11641:	je	0x11638


0x115b3:	ret	


0x11470:	add	rdi, 1
0x11474:	movzx	r8d, byte ptr [rdi]
0x11478:	cmp	ecx, r8d
0x1147b:	je	0x11470


0x1147d:	sub	r8d, 0x30
0x11481:	add	r9, 1
0x11485:	cmp	r8d, 9
0x11489:	jbe	0x11470


0x11494:	xor	edi, edi
0x11496:	nop	word ptr cs:[rax + rax]
0x114a0:	add	rsi, 1
0x114a4:	movzx	edx, byte ptr [rsi]
0x114a7:	cmp	ecx, edx
0x114a9:	je	0x114a0


0x116eb:	jmp	0x115ed


0x112d1:	sub	r11d, 0x30
0x112d5:	cmp	r11d, 9
0x112d9:	jbe	0x112a0


0x1168a:	add	rsi, 1
0x1168e:	movsx	r9d, byte ptr [rsi]
0x11692:	add	rdi, 1
0x11696:	cmp	r9b, cl
0x11699:	mov	edx, r9d
0x1169c:	lea	r8d, [r9 - 0x30]
0x116a0:	je	0x1167c


0x11659:	add	rdi, 1
0x1165d:	jmp	0x11667


0x115f9:	lea	rax, [rsi + 1]
0x115fd:	movzx	edx, byte ptr [rsi + 1]
0x11601:	jmp	0x1160a


0x11310:	add	rdi, 1
0x11314:	movzx	edx, byte ptr [rdi]
0x11317:	cmp	ecx, edx
0x11319:	je	0x11310


0x1131b:	sub	edx, 0x30
0x1131e:	add	r8, 1
0x11322:	cmp	edx, 9
0x11325:	jbe	0x11310


0x11331:	xor	edi, edi
0x11333:	nop	dword ptr [rax + rax]
0x11338:	add	rsi, 1
0x1133c:	movzx	edx, byte ptr [rsi]
0x1133f:	cmp	ecx, edx
0x11341:	je	0x11338


0x115ed:	xor	eax, eax
0x115ef:	ret	


0xb878:	lea	ecx, [rdx + rcx - 0x262b2fc7]
0xb87f:	mov	edx, eax
0xb881:	lea	eax, [rbp + rax - 0x1924661b]
0xb888:	xor	edx, edi
0xb88a:	mov	r10d, esi
0xb88d:	xor	edx, esi
0xb88f:	add	edx, ecx
0xb891:	mov	ecx, edi
0xb893:	rol	edx, 4
0xb896:	add	edx, esi
0xb898:	xor	ecx, esi
0xb89a:	xor	ecx, edx
0xb89c:	xor	r10d, edx
0xb89f:	add	ecx, eax
0xb8a1:	lea	eax, [r9 + rdi + 0x1fa27cf8]
0xb8a9:	mov	edi, r10d
0xb8ac:	rol	ecx, 0xb
0xb8af:	mov	r10d, dword ptr [rsp - 0x34]
0xb8b4:	add	ecx, edx
0xb8b6:	xor	edi, ecx
0xb8b8:	add	edi, eax
0xb8ba:	mov	eax, dword ptr [rsp - 0x40]
0xb8be:	rol	edi, 0x10
0xb8c1:	add	edi, ecx
0xb8c3:	lea	esi, [rax + rsi - 0x3b53a99b]
0xb8ca:	mov	eax, edx
0xb8cc:	xor	eax, ecx
0xb8ce:	xor	eax, edi
0xb8d0:	add	eax, esi
0xb8d2:	lea	esi, [r14 + rdx - 0xbd6ddbc]
0xb8da:	mov	edx, ecx
0xb8dc:	ror	eax, 9
0xb8df:	not	edx
0xb8e1:	mov	r14d, dword ptr [rsp - 0x44]
0xb8e6:	add	eax, edi
0xb8e8:	or	edx, eax
0xb8ea:	xor	edx, edi
0xb8ec:	add	edx, esi
0xb8ee:	lea	esi, [r13 + rcx + 0x432aff97]
0xb8f6:	mov	r13d, edi
0xb8f9:	rol	edx, 6
0xb8fc:	not	r13d
0xb8ff:	lea	edi, [r12 + rdi - 0x546bdc59]
0xb907:	add	edx, eax
0xb909:	mov	ecx, r13d
0xb90c:	or	ecx, edx
0xb90e:	mov	r13d, edx
0xb911:	xor	ecx, eax
0xb913:	not	r13d
0xb916:	add	ecx, esi
0xb918:	mov	esi, eax
0xb91a:	rol	ecx, 0xa
0xb91d:	not	esi
0xb91f:	add	ecx, edx
0xb921:	or	esi, ecx
0xb923:	mov	r12d, ecx
0xb926:	xor	esi, edx
0xb928:	not	r12d
0xb92b:	add	esi, edi
0xb92d:	lea	edi, [r10 + rax - 0x36c5fc7]
0xb935:	mov	eax, r13d
0xb938:	rol	esi, 0xf
0xb93b:	mov	r10d, dword ptr [rsp - 0x1c]
0xb940:	add	esi, ecx
0xb942:	or	eax, esi
0xb944:	xor	eax, ecx
0xb946:	add	eax, edi
0xb948:	lea	edi, [rbp + rdx + 0x655b59c3]
0xb94f:	mov	ebp, dword ptr [rsp - 0x3c]
0xb953:	ror	eax, 0xb
0xb956:	mov	edx, r12d
0xb959:	add	eax, esi
0xb95b:	or	edx, eax
0xb95d:	xor	edx, esi
0xb95f:	add	edx, edi
0xb961:	lea	edi, [rbp + rcx - 0x70f3336e]
0xb968:	mov	ebp, esi
0xb96a:	rol	edx, 6
0xb96d:	not	ebp
0xb96f:	add	edx, eax
0xb971:	mov	ecx, ebp
0xb973:	or	ecx, edx
0xb975:	mov	ebp, edx
0xb977:	xor	ecx, eax
0xb979:	not	ebp
0xb97b:	add	ecx, edi
0xb97d:	mov	edi, dword ptr [rsp - 0x28]
0xb981:	rol	ecx, 0xa
0xb984:	add	ecx, edx
0xb986:	lea	edi, [rdi + rsi - 0x100b83]
0xb98d:	mov	esi, eax
0xb98f:	not	esi
0xb991:	or	esi, ecx
0xb993:	xor	esi, edx
0xb995:	add	esi, edi
0xb997:	lea	edi, [r14 + rax - 0x7a7ba22f]
0xb99f:	mov	eax, ebp
0xb9a1:	rol	esi, 0xf
0xb9a4:	mov	r14d, dword ptr [rsp - 0x30]


0x7ad0:	cmp	byte ptr [r15 + 0x30], 0
0x7ad5:	je	0x7798


0x790f:	mov	rdi, r12
0x7912:	mov	rdx, r15
0x7915:	mov	rsi, r13
0x7918:	call	0x6970


0x7d22:	movzx	r8d, byte ptr [r12]
0x7d27:	movzx	edx, byte ptr [rbx]
0x7d2a:	sub	r8d, edx
0x7d2d:	jne	0x7a98


0x7d02:	add	rbx, 1
0x7d06:	add	rdi, 1
0x7d0a:	jmp	0x7ca0


0x7893:	movzx	eax, byte ptr [rsp + 0x36]
0x7898:	mov	byte ptr [r12 + rbp], al
0x789c:	movzx	eax, byte ptr [rsp + 0x37]
0x78a1:	mov	byte ptr [rbx + r9], al
0x78a5:	test	r8d, r8d
0x78a8:	jne	0x7a98


0x7a77:	mov	rdi, qword ptr [rsp + 0x58]
0x7a7c:	mov	dword ptr [rsp + 8], r8d
0x7a81:	call	0x31c0


0x800e:	xor	ebx, ebx
0x8010:	xor	r13d, r13d
0x8013:	mov	rax, qword ptr [rsp + 0x10]
0x8018:	add	rax, r13
0x801b:	cmp	qword ptr [rsp + 0x50], r12
0x8020:	mov	qword ptr [rsp + 0x70], rax
0x8025:	ja	0x8510


0x8498:	mov	rdi, qword ptr [rsp + 0x10]
0x849d:	mov	rdx, qword ptr [rsp + 0x48]
0x84a2:	xor	r13d, r13d
0x84a5:	jmp	0x816d


0x746e:	cmp	r9, rbx
0x7471:	mov	qword ptr [rsp + 0x18], rbx
0x7476:	jb	0x7600


0x6164:	mov	byte ptr [rax], 0
0x6167:	ret	


0x615d:	mov	byte ptr [rax], 0x56
0x6160:	add	rax, 1
0x6164:	mov	byte ptr [rax], 0
0x6167:	ret	


0x11710:	cmp	edx, 9
0x11713:	ja	0x115ed


0x11732:	movsx	eax, cl
0x11735:	lea	r9d, [rax - 0x30]
0x11739:	cmp	r9d, 9
0x1173d:	jbe	0x11772


0x11706:	cmp	cl, 0x30
0x11709:	je	0x116ff


0x11643:	jmp	0x11612


0x1148b:	cmp	edx, 9
0x1148e:	ja	0x11645


0x114a0:	add	rsi, 1
0x114a4:	movzx	edx, byte ptr [rsi]
0x114a7:	cmp	ecx, edx
0x114a9:	je	0x114a0


0x114ab:	sub	edx, 0x30
0x114ae:	add	rdi, 1
0x114b2:	cmp	edx, 9
0x114b5:	jbe	0x114a0


0x1167c:	cmp	r8d, 9
0x11680:	ja	0x115ed


0x116a2:	movsx	eax, cl
0x116a5:	lea	r10d, [rax - 0x30]
0x116a9:	cmp	r10d, 9
0x116ad:	ja	0x1175e


0x11667:	cmp	cl, 0x30
0x1166a:	je	0x11660


0x1160a:	cmp	dl, 0x30
0x1160d:	je	0x11603


0x11327:	cmp	r11d, 9
0x1132b:	ja	0x115f0


0x11338:	add	rsi, 1
0x1133c:	movzx	edx, byte ptr [rsi]
0x1133f:	cmp	ecx, edx
0x11341:	je	0x11338


0x11343:	sub	edx, 0x30
0x11346:	add	rdi, 1
0x1134a:	cmp	edx, 9
0x1134d:	jbe	0x11338


0xb9a9:	mov	ebp, ecx
0xb9ab:	add	esi, ecx
0xb9ad:	not	ebp
0xb9af:	or	eax, esi
0xb9b1:	xor	eax, ecx
0xb9b3:	add	eax, edi
0xb9b5:	lea	edi, [r14 + rdx + 0x6fa87e4f]
0xb9bd:	mov	edx, ebp
0xb9bf:	ror	eax, 0xb
0xb9c2:	mov	ebp, esi
0xb9c4:	mov	r14d, dword ptr [rsp - 0x24]
0xb9c9:	add	eax, esi
0xb9cb:	not	ebp
0xb9cd:	or	edx, eax
0xb9cf:	xor	edx, esi
0xb9d1:	add	edx, edi
0xb9d3:	lea	edi, [r9 + rcx - 0x1d31920]
0xb9db:	mov	ecx, ebp
0xb9dd:	rol	edx, 6
0xb9e0:	mov	r9d, dword ptr [rsp - 0x38]
0xb9e5:	add	edx, eax
0xb9e7:	or	ecx, edx
0xb9e9:	xor	ecx, eax
0xb9eb:	add	ecx, edi
0xb9ed:	lea	edi, [r10 + rsi - 0x5cfebcec]
0xb9f5:	mov	esi, eax
0xb9f7:	rol	ecx, 0xa
0xb9fa:	not	esi
0xb9fc:	lea	eax, [r8 + rax + 0x4e0811a1]
0xba04:	add	ecx, edx
0xba06:	mov	r8d, edx
0xba09:	mov	r10d, dword ptr [rsp - 0x2c]
0xba0e:	or	esi, ecx
0xba10:	not	r8d
0xba13:	xor	esi, edx
0xba15:	lea	edx, [r9 + rdx - 0x8ac817e]
0xba1d:	mov	r9d, ecx
0xba20:	add	esi, edi
0xba22:	mov	edi, r8d
0xba25:	not	r9d
0xba28:	rol	esi, 0xf
0xba2b:	add	esi, ecx
0xba2d:	or	edi, esi
0xba2f:	xor	edi, ecx
0xba31:	lea	ecx, [r14 + rcx - 0x42c50dcb]
0xba39:	add	edi, eax
0xba3b:	mov	eax, r9d
0xba3e:	ror	edi, 0xb
0xba41:	add	edi, esi
0xba43:	or	eax, edi
0xba45:	xor	eax, esi
0xba47:	add	eax, edx
0xba49:	mov	edx, esi
0xba4b:	rol	eax, 6
0xba4e:	not	edx
0xba50:	add	eax, edi
0xba52:	or	edx, eax
0xba54:	xor	edx, edi
0xba56:	add	edx, ecx
0xba58:	mov	ecx, dword ptr [rsp - 0x40]
0xba5c:	rol	edx, 0xa
0xba5f:	add	edx, eax
0xba61:	lea	esi, [rcx + rsi + 0x2ad7d2bb]
0xba68:	mov	ecx, edi
0xba6a:	lea	edi, [r10 + rdi - 0x14792c6f]
0xba72:	not	ecx
0xba74:	or	ecx, edx
0xba76:	xor	ecx, eax
0xba78:	add	ecx, esi
0xba7a:	mov	esi, eax
0xba7c:	rol	ecx, 0xf
0xba7f:	not	esi
0xba81:	add	ecx, edx
0xba83:	or	esi, ecx
0xba85:	xor	esi, edx
0xba87:	add	esi, edi
0xba89:	ror	esi, 0xb
0xba8c:	add	esi, ecx
0xba8e:	add	dword ptr [rsp - 0x18], eax
0xba92:	add	r15d, ecx
0xba95:	add	r11d, esi
0xba98:	add	dword ptr [rsp - 0x20], edx
0xba9c:	cmp	qword ptr [rsp - 0x10], rbx
0xbaa1:	ja	0xb3c0


0x7798:	cmp	r12, r11
0x779b:	mov	rcx, r11
0x779e:	mov	rax, rbp
0x77a1:	cmovae	rcx, r12
0x77a5:	cmp	rbx, rbp
0x77a8:	mov	rdx, qword ptr [r15 + 0x28]
0x77ac:	cmovae	rax, rbx
0x77b0:	mov	rbp, rcx
0x77b3:	mov	r13, qword ptr [r15 + 0x20]
0x77b7:	mov	r9, rax
0x77ba:	sub	rbp, r12
0x77bd:	sub	r9, rbx
0x77c0:	cmp	byte ptr [rip + 0x2130ba], 0
0x77c7:	jne	0x77dd


0x7adb:	cmp	r11, r12
0x7ade:	ja	0x7af5


0x7d33:	add	rbx, 1
0x7d37:	add	r12, 1
0x7d3b:	cmp	r12, rcx
0x7d3e:	jae	0x7d4d


0x802b:	mov	rcx, qword ptr [rsp + 0x20]
0x8030:	cmp	qword ptr [rsp + 0x60], rcx
0x8035:	mov	rbp, qword ptr [rsp + 0x48]
0x803a:	jbe	0x83ba


0x8510:	mov	rdi, r12
0x8513:	call	0x2c90


0x816d:	mov	rsi, qword ptr [rsp + 0x20]
0x8172:	call	0x6560


0x7600:	mov	qword ptr [rsp + 0x18], r9
0x7605:	jmp	0x74f0


0x747c:	cmp	byte ptr [r14 + 0x36], 0
0x7481:	jne	0x7688


0x7460:	add	rbx, 1
0x7464:	movzx	eax, byte ptr [rbx]
0x7467:	cmp	byte ptr [rbp + rax], 0
0x746c:	jne	0x7460


0x11719:	movzx	ecx, byte ptr [rsi + 1]
0x1171d:	add	rdi, 1
0x11721:	movsx	r8d, byte ptr [rdi]
0x11725:	add	rsi, 1
0x11729:	cmp	r8b, cl
0x1172c:	lea	edx, [r8 - 0x30]
0x11730:	je	0x11710


0x11772:	cmp	edx, 9
0x11775:	ja	0x11706


0x1173f:	xor	eax, eax
0x11741:	cmp	edx, 9
0x11744:	jbe	0x1163c


0x116ff:	add	rsi, 1
0x11703:	movzx	ecx, byte ptr [rsi]
0x11706:	cmp	cl, 0x30
0x11709:	je	0x116ff


0x1170b:	jmp	0x1166c


0x11612:	sub	eax, 0x30
0x11615:	cmp	eax, 9
0x11618:	setbe	al
0x1161b:	movzx	eax, al
0x1161e:	neg	eax
0x11620:	ret	


0x11645:	xor	eax, eax
0x11647:	test	r9, r9
0x1164a:	setne	al
0x1164d:	neg	eax
0x1164f:	ret	


0x114b7:	cmp	rdi, r9
0x114ba:	je	0x11594


0x11686:	movzx	ecx, byte ptr [rdi + 1]
0x1168a:	add	rsi, 1
0x1168e:	movsx	r9d, byte ptr [rsi]
0x11692:	add	rdi, 1
0x11696:	cmp	r9b, cl
0x11699:	mov	edx, r9d
0x1169c:	lea	r8d, [r9 - 0x30]
0x116a0:	je	0x1167c


0x116b3:	cmp	r8d, 9
0x116b7:	ja	0x11667


0x1175e:	xor	eax, eax
0x11760:	cmp	r8d, 9
0x11764:	ja	0x115b3


0x11660:	add	rdi, 1
0x11664:	movzx	ecx, byte ptr [rdi]
0x11667:	cmp	cl, 0x30
0x1166a:	je	0x11660


0x1166c:	movsx	eax, cl
0x1166f:	sub	eax, 0x30
0x11672:	cmp	eax, 9
0x11675:	setbe	al
0x11678:	movzx	eax, al
0x1167b:	ret	


0x11603:	add	rax, 1
0x11607:	movzx	edx, byte ptr [rax]
0x1160a:	cmp	dl, 0x30
0x1160d:	je	0x11603


0x1160f:	movsx	eax, dl
0x11612:	sub	eax, 0x30
0x11615:	cmp	eax, 9
0x11618:	setbe	al
0x1161b:	movzx	eax, al
0x1161e:	neg	eax
0x11620:	ret	


0x115f0:	xor	eax, eax
0x115f2:	test	r8, r8
0x115f5:	setne	al
0x115f8:	ret	


0x1134f:	cmp	rdi, r8
0x11352:	je	0x11594


0x7ae0:	jmp	0x7b01


0x7af5:	movzx	eax, byte ptr [r12]
0x7afa:	cmp	byte ptr [r14 + rax], 0
0x7aff:	jne	0x7ae8


0x83ba:	mov	r9, qword ptr [rsp + 0xb0]
0x83c2:	mov	rdx, qword ptr [rsp + 0x78]
0x83c7:	mov	r8d, r15d
0x83ca:	mov	rdi, qword ptr [rsp + 0x10]
0x83cf:	mov	rsi, r13
0x83d2:	mov	dword ptr [rsp + 0x88], r8d
0x83da:	mov	qword ptr [rsp + 0x20], rbx
0x83df:	mov	r12, qword ptr [rsp + 0x98]
0x83e7:	mov	qword ptr [rsp + 0x60], r9
0x83ec:	mov	rbp, qword ptr [rsp + 0xa8]
0x83f4:	mov	rbx, qword ptr [rsp + 0xa0]
0x83fc:	mov	r15, qword ptr [rsp + 0x90]
0x8404:	call	0xbbf0


0x8040:	mov	rdi, qword ptr [rsp + 0x20]
0x8045:	call	0x2c90


0x74f0:	mov	byte ptr [r9], r13b
0x74f3:	mov	r9, qword ptr [rsp + 0x18]
0x74f8:	lea	r13, [rip + 0xdfd4]
0x74ff:	mov	rsi, rbx
0x7502:	mov	rdi, r15
0x7505:	mov	qword ptr [rsp], r9
0x7509:	call	0x6520


0x7487:	cmp	byte ptr [r14 + 0x34], 0
0x748c:	jne	0x76c0


0x7688:	lea	rsi, [rsp + 0x18]
0x768d:	mov	rdi, rbx
0x7690:	mov	qword ptr [rsp], r9
0x7694:	call	0x5fb0


0x11777:	sub	eax, r8d
0x1177a:	ret	


0x1163c:	movsx	eax, byte ptr [rdi]
0x1163f:	cmp	al, 0x30
0x11641:	je	0x11638


0x1174a:	ret	


0x11594:	test	rdi, rdi
0x11597:	mov	edx, 0
0x1159c:	cmove	eax, edx
0x1159f:	ret	


0x114c0:	cmp	r9, rdi
0x114c3:	sbb	eax, eax
0x114c5:	and	eax, 2
0x114c8:	sub	eax, 1
0x114cb:	ret	


0x116b9:	sub	eax, r9d
0x116bc:	ret	


0x1176a:	mov	rax, rsi
0x1176d:	jmp	0x1160a


0x11358:	cmp	r8, rdi
0x1135b:	sbb	eax, eax
0x1135d:	or	eax, 1
0x11360:	ret	


0x7b01:	cmp	rbp, rbx
0x7b04:	jbe	0x7798


0x7ae8:	add	r12, 1
0x7aec:	cmp	r11, r12
0x7aef:	je	0x8230


0x7492:	movabs	rax, 0xff0000ff0000
0x749c:	test	qword ptr [r14 + 0x30], rax
0x74a0:	je	0x7600


0x76c0:	lea	rsi, [rsp + 0x18]
0x76c5:	mov	rdi, rbx
0x76c8:	mov	qword ptr [rsp], r9
0x76cc:	call	0x2fd0


0x8230:	mov	r12, r11
0x8233:	jmp	0x7b01


0x74a6:	cmp	r9, rbx
0x74a9:	mov	rax, rbx
0x74ac:	jbe	0x74b9


0x7b1e:	add	rbx, 1
0x7b22:	cmp	rbp, rbx
0x7b25:	jne	0x7b10


0x74b9:	lea	rdi, [rsp + 0x20]
0x74be:	mov	qword ptr [rsp], r9
0x74c2:	mov	qword ptr [rsp + 0x20], rax
0x74c7:	call	0x5e80


0x74ae:	xor	eax, eax
0x74b0:	cmp	byte ptr [rbx], 0x2d
0x74b3:	sete	al
0x74b6:	add	rax, rbx
0x74b9:	lea	rdi, [rsp + 0x20]
0x74be:	mov	qword ptr [rsp], r9
0x74c2:	mov	qword ptr [rsp + 0x20], rax
0x74c7:	call	0x5e80


0x7b27:	mov	rbx, rbp
0x7b2a:	jmp	0x7798


0x7b10:	movzx	eax, byte ptr [rbx]
0x7b13:	cmp	byte ptr [r14 + rax], 0
0x7b18:	je	0x7798


0x78f1:	mov	rsi, rbp
0x78f4:	mov	rdx, r15
0x78f7:	mov	rdi, rbx
0x78fa:	mov	r11, rax
0x78fd:	call	0x6a60


0x7902:	mov	rbp, rax
0x7905:	cmp	qword ptr [r15], -1
0x7909:	je	0x7ad0


0x7420:	mov	r9, rax
0x7423:	cmp	byte ptr [r14 + 0x30], 0
0x7428:	je	0x7430


0x791d:	mov	rsi, qword ptr [rsp + 8]
0x7922:	mov	rdi, rbx
0x7925:	mov	rdx, r15
0x7928:	mov	r12, rax
0x792b:	call	0x6970


0x7930:	mov	rbx, rax
0x7933:	jmp	0x7798


0x7400:	mov	r10, qword ptr [rsp + 8]
0x7405:	mov	rbx, rax
0x7408:	mov	r9, qword ptr [rsp]
0x740c:	cmp	r10, -1
0x7410:	je	0x7430


0x7699:	mov	r9, qword ptr [rsp]
0x769d:	jmp	0x74f0


0x7e07:	xor	esi, esi
0x7e09:	mov	r13d, eax
0x7e0c:	mov	rdi, rbx
0x7e0f:	call	0x5fb0


0x7e14:	mov	r8d, r13d
0x7e17:	mov	r9, qword ptr [rsp + 0x10]
0x7e1c:	sub	r8d, eax
0x7e1f:	jmp	0x7888


0x7a64:	cmp	byte ptr [rsp + 8], 0
0x7a69:	mov	r8d, eax
0x7a6c:	mov	r9, qword ptr [rsp + 0x10]
0x7a71:	je	0x7893


0xa625:	test	rax, rax
0xa628:	mov	r14, rax
0xa62b:	je	0xa683


0xa683:	mov	r14, qword ptr [rsp + 0x20]
0xa688:	mov	rbp, qword ptr [rsp + 0x28]
0xa68d:	lea	rax, [rsp + 0x40]
0xa692:	lea	r15, [rsp + 0x48]
0xa697:	mov	qword ptr [rsp + 0x10], rbp
0xa69c:	mov	qword ptr [rsp + 0x28], rax
0xa6a1:	nop	dword ptr [rax]
0xa6a8:	mov	rbp, qword ptr [rsp + 8]
0xa6ad:	mov	rdx, qword ptr [rsp + 0x28]
0xa6b2:	mov	rdi, r14
0xa6b5:	mov	rsi, rbp
0xa6b8:	call	0x8a70


0xa62d:	test	ebp, ebp
0xa62f:	je	0xa5bc


0xa5bc:	mov	rdx, qword ptr [rsp + 0x18]
0xa5c1:	xor	esi, esi
0xa5c3:	mov	edi, 1
0xa5c8:	call	0x2f20


0xa631:	mov	rdx, qword ptr [rsp + 0x18]
0xa636:	mov	rsi, qword ptr [rbx]
0xa639:	mov	edi, 1
0xa63e:	call	0x2ec0


0x2ec0:	jmp	qword ptr [rip + 0x216f72]




0x7131:	mov	rax, qword ptr [rsp + 8]
0x7136:	add	rsp, 0x18
0x713a:	pop	rbx
0x713b:	pop	rbp
0x713c:	ret	


0xbcdb:	sub	r12, 0x40
0xbcdf:	lea	rsi, [r13 + 0x5c]
0xbce3:	mov	rdi, rbp
0xbce6:	mov	rdx, r12
0xbce9:	call	0x2e80


0xbc7f:	cmp	rbx, r14
0xbc82:	jne	0xbc48


0xbc84:	neg	r15
0xbc87:	shl	r15, 6
0xbc8b:	lea	r12, [r12 + r15 - 0x40]
0xbc90:	mov	edi, dword ptr [r13 + 0x18]
0xbc94:	cmp	r12d, 8
0xbc98:	mov	eax, r12d
0xbc9b:	lea	rcx, [rbp + rdi]
0xbca0:	jae	0xbd80


0xbc48:	movdqu	xmm0, xmmword ptr [rbx]
0xbc4c:	mov	rdx, r13
0xbc4f:	mov	esi, 0x40
0xbc54:	mov	rdi, rbp
0xbc57:	add	rbx, 0x40
0xbc5b:	movups	xmmword ptr [rbp], xmm0
0xbc5f:	movdqu	xmm0, xmmword ptr [rbx - 0x30]
0xbc64:	movups	xmmword ptr [rbp + 0x10], xmm0
0xbc68:	movdqu	xmm0, xmmword ptr [rbx - 0x20]
0xbc6d:	movups	xmmword ptr [rbp + 0x20], xmm0
0xbc71:	movdqu	xmm0, xmmword ptr [rbx - 0x10]
0xbc76:	movups	xmmword ptr [rbp + 0x30], xmm0
0xbc7a:	call	0xb360


0xbbba:	mov	rsi, rbp
0xbbbd:	mov	rdi, rbx
0xbbc0:	pop	rbx
0xbbc1:	pop	rbp
0xbbc2:	jmp	0xb340


0x5e38:	mov	byte ptr [rip + 0x2143c9], 1
0x5e3f:	pop	rbp
0x5e40:	ret	


0x86ff:	test	eax, eax
0x8701:	jne	0x8742


0x8703:	cmp	byte ptr [rip + 0x211d2f], 0
0x870a:	jne	0x8742


0x870c:	cmp	byte ptr [rip + 0x211d27], 0
0x8713:	jne	0x8742


0x8a20:	test	eax, eax
0x8a22:	mov	rdx, qword ptr [rsp + 8]
0x8a27:	je	0x8a58


0x8a58:	add	rsp, 0x18
0x8a5c:	pop	rbx
0x8a5d:	pop	rbp
0x8a5e:	ret	


0x8915:	test	bpl, bpl
0x8918:	jne	0x8968


0x891a:	test	eax, eax
0x891c:	jle	0x8887


0x8968:	test	eax, eax
0x896a:	setg	al
0x896d:	movzx	eax, al
0x8970:	mov	edx, eax
0x8972:	sub	eax, 2
0x8975:	not	edx
0x8977:	cdqe	
0x8979:	movsxd	rdx, edx
0x897c:	shl	rax, 5
0x8980:	shl	rdx, 5
0x8984:	lea	r8, [r13 + rax]
0x8989:	add	rdx, r13
0x898c:	movdqu	xmm0, xmmword ptr [rdx]
0x8990:	movups	xmmword ptr [rbx - 0x20], xmm0
0x8994:	movdqu	xmm0, xmmword ptr [rdx + 0x10]
0x8999:	movups	xmmword ptr [rbx - 0x10], xmm0
0x899d:	movdqu	xmm0, xmmword ptr [r8]
0x89a2:	movups	xmmword ptr [rbx - 0x40], xmm0
0x89a6:	movdqu	xmm0, xmmword ptr [r8 + 0x10]
0x89ac:	movups	xmmword ptr [rbx - 0x30], xmm0
0x89b0:	add	rsp, 0x18
0x89b4:	pop	rbx
0x89b5:	pop	rbp
0x89b6:	pop	r12
0x89b8:	pop	r13
0x89ba:	pop	r14
0x89bc:	pop	r15
0x89be:	ret	


0x8887:	add	rsp, 0x18
0x888b:	pop	rbx
0x888c:	pop	rbp
0x888d:	pop	r12
0x888f:	pop	r13
0x8891:	pop	r14
0x8893:	pop	r15
0x8895:	ret	


0x8922:	movdqu	xmm2, xmmword ptr [r13 - 0x40]
0x8928:	movdqu	xmm1, xmmword ptr [r13 - 0x20]
0x892e:	movdqu	xmm0, xmmword ptr [r13 - 0x10]
0x8934:	movups	xmmword ptr [r13 - 0x20], xmm2
0x8939:	movups	xmmword ptr [rbx - 0x20], xmm1
0x893d:	movups	xmmword ptr [rbx - 0x10], xmm0
0x8941:	movups	xmmword ptr [r13 - 0x40], xmm1
0x8946:	movdqu	xmm2, xmmword ptr [r13 - 0x30]
0x894c:	movups	xmmword ptr [r13 - 0x30], xmm0
0x8951:	movups	xmmword ptr [r13 - 0x10], xmm2
0x8956:	add	rsp, 0x18
0x895a:	pop	rbx
0x895b:	pop	rbp
0x895c:	pop	r12
0x895e:	pop	r13
0x8960:	pop	r14
0x8962:	pop	r15
0x8964:	ret	


0x90fd:	mov	rax, qword ptr [rsp + 8]
0x9102:	mov	rsi, r14
0x9105:	mov	qword ptr [rbx], rbp
0x9108:	mov	qword ptr [rbx + 8], rax
0x910c:	shl	rsi, 5
0x9110:	mov	qword ptr [rbx + 0x10], rax
0x9114:	mov	rdi, r12
0x9117:	sub	r13, rsi
0x911a:	mov	rsi, rbx
0x911d:	add	rbp, r13
0x9120:	lea	r13, [r12 + 8]
0x9125:	mov	qword ptr [rbx + 0x18], rbp
0x9129:	lea	rbp, [r12 + 0x30]
0x912e:	call	0x6930


0x88b8:	cmp	r15, 1
0x88bc:	jbe	0x881d


0x881d:	lea	rbp, [r13 - 0x20]
0x8821:	lea	r12, [r14 - 0x20]
0x8825:	nop	dword ptr [rax]
0x8828:	mov	rsi, r12
0x882b:	mov	rdi, rbp
0x882e:	sub	rbx, 0x20
0x8832:	call	0x86e0


0x88c2:	xor	ecx, ecx
0x88c4:	mov	rdx, rbx
0x88c7:	mov	rsi, r15
0x88ca:	mov	rdi, r13
0x88cd:	call	0x87a0


0x8837:	test	eax, eax
0x8839:	jle	0x88e0


0x88e0:	movdqu	xmm0, xmmword ptr [r13 - 0x20]
0x88e6:	sub	r15, 1
0x88ea:	movups	xmmword ptr [rbx], xmm0
0x88ed:	movdqu	xmm0, xmmword ptr [r13 - 0x10]
0x88f3:	movups	xmmword ptr [rbx + 0x10], xmm0
0x88f7:	je	0x8887


0x883f:	movdqu	xmm0, xmmword ptr [r14 - 0x20]
0x8845:	sub	qword ptr [rsp + 8], 1
0x884b:	movups	xmmword ptr [rbx], xmm0
0x884e:	movdqu	xmm0, xmmword ptr [r14 - 0x10]
0x8854:	movups	xmmword ptr [rbx + 0x10], xmm0
0x8858:	je	0x886c


0x88f9:	mov	r13, rbp
0x88fc:	sub	rbp, 0x20
0x8900:	jmp	0x8828


0x886c:	movdqu	xmm0, xmmword ptr [rbp]
0x8871:	sub	rbx, 0x20
0x8875:	sub	r15, 1
0x8879:	movups	xmmword ptr [rbx], xmm0
0x887c:	movdqu	xmm0, xmmword ptr [rbp + 0x10]
0x8881:	movups	xmmword ptr [rbx + 0x10], xmm0
0x8885:	jne	0x8868


0x885a:	mov	r14, r12
0x885d:	sub	r12, 0x20
0x8861:	jmp	0x8828


0x8828:	mov	rsi, r12
0x882b:	mov	rdi, rbp
0x882e:	sub	rbx, 0x20
0x8832:	call	0x86e0


0x8868:	sub	rbp, 0x20
0x886c:	movdqu	xmm0, xmmword ptr [rbp]
0x8871:	sub	rbx, 0x20
0x8875:	sub	r15, 1
0x8879:	movups	xmmword ptr [rbx], xmm0
0x887c:	movdqu	xmm0, xmmword ptr [rbp + 0x10]
0x8881:	movups	xmmword ptr [rbx + 0x10], xmm0
0x8885:	jne	0x8868


0x88d2:	jmp	0x881d


0x87f3:	cmp	r15, 1
0x87f7:	ja	0x89bf


0x87fd:	movdqu	xmm0, xmmword ptr [r13 - 0x20]
0x8803:	mov	rax, rbx
0x8806:	mov	r14, r12
0x8809:	movups	xmmword ptr [rbx - 0x20], xmm0
0x880d:	movdqu	xmm0, xmmword ptr [r13 - 0x10]
0x8813:	movups	xmmword ptr [rbx - 0x10], xmm0
0x8817:	mov	rbx, r13
0x881a:	mov	r13, rax
0x881d:	lea	rbp, [r13 - 0x20]
0x8821:	lea	r12, [r14 - 0x20]
0x8825:	nop	dword ptr [rax]
0x8828:	mov	rsi, r12
0x882b:	mov	rdi, rbp
0x882e:	sub	rbx, 0x20
0x8832:	call	0x86e0


0x89bf:	mov	rdx, rbx
0x89c2:	mov	rdi, r13
0x89c5:	mov	ecx, 1
0x89ca:	mov	rsi, r15
0x89cd:	mov	r14, r12
0x89d0:	call	0x87a0


0x89d5:	mov	rax, rbx
0x89d8:	mov	rbx, r13
0x89db:	mov	r13, rax
0x89de:	jmp	0x881d


0x90d8:	mov	r8, qword ptr [rsp + 0x10]
0x90dd:	mov	rax, qword ptr [rsp + 8]
0x90e2:	cmp	r15, 1
0x90e6:	jbe	0x9102


0xd260:	mov	edx, 8
0xd265:	mov	rbx, rax
0xd268:	xor	ecx, ecx
0xd26a:	mov	rax, rdx
0xd26d:	mul	rbx
0xd270:	jo	0xd40f


0xd40f:	mov	ecx, 1
0xd414:	jmp	0xd276


0xd276:	test	rax, rax
0xd279:	mov	eax, 1
0xd27e:	cmovs	rcx, rax
0xd282:	test	rbx, rbx
0xd285:	je	0xd360


0xd28b:	and	ecx, 1
0xd28e:	jne	0xd360


0xd294:	cmp	qword ptr [rbp + 0x10], rbx
0xd298:	je	0xd3c0


0xd3c0:	mov	ebx, 1
0xd3c5:	jmp	0xd362


0xd29e:	mov	esi, 0x10
0xd2a3:	mov	rdi, rbx
0xd2a6:	call	0x2e20


0xd362:	mov	rcx, qword ptr [rsp + 0x58]
0xd367:	xor	rcx, qword ptr fs:[0x28]
0xd370:	mov	eax, ebx
0xd372:	jne	0xd40a


0x74cc:	cmp	al, 0x2f
0x74ce:	mov	r9, qword ptr [rsp]
0x74d2:	jbe	0x74f0


0x74d4:	cmp	byte ptr [r14 + 0x35], 0
0x74d9:	mov	rax, qword ptr [rsp + 0x20]
0x74de:	jne	0x76dc


0x74e4:	mov	qword ptr [rsp + 0x18], rax
0x74e9:	nop	dword ptr [rax]
0x74f0:	mov	byte ptr [r9], r13b
0x74f3:	mov	r9, qword ptr [rsp + 0x18]
0x74f8:	lea	r13, [rip + 0xdfd4]
0x74ff:	mov	rsi, rbx
0x7502:	mov	rdi, r15
0x7505:	mov	qword ptr [rsp], r9
0x7509:	call	0x6520


0x76dc:	movzx	edx, byte ptr [rax]
0x76df:	lea	rcx, [rip + 0xc6da]
0x76e6:	cmp	byte ptr [rcx + rdx], 0
0x76ea:	je	0x74e4


0x76f0:	add	rax, 1
0x76f4:	jmp	0x74e4


0x5f6f:	xor	edx, edx
0x5f71:	cmp	al, 0x30
0x5f73:	jbe	0x5f91


0x5f91:	mov	rcx, qword ptr [rsp + 8]
0x5f96:	xor	rcx, qword ptr fs:[0x28]
0x5f9f:	mov	eax, edx
0x5fa1:	jne	0x5fa9


0x5f75:	mov	rax, qword ptr [rsp]
0x5f79:	lea	rdx, [rip + 0xde40]
0x5f80:	movzx	eax, byte ptr [rax]
0x5f83:	movsx	edx, byte ptr [rdx + rax]
0x5f87:	mov	eax, edx
0x5f89:	neg	eax
0x5f8b:	cmp	bl, 0x2d
0x5f8e:	cmove	edx, eax
0x5f91:	mov	rcx, qword ptr [rsp + 8]
0x5f96:	xor	rcx, qword ptr fs:[0x28]
0x5f9f:	mov	eax, edx
0x5fa1:	jne	0x5fa9


0x5fa3:	add	rsp, 0x10
0x5fa7:	pop	rbx
0x5fa8:	ret	


0x5fa9:	call	0x2ca0


0x7c30:	mov	rsi, qword ptr [rsp + 0x20]
0x7c35:	mov	dword ptr [rsp + 0x10], eax
0x7c39:	mov	rdi, rsi
0x7c3c:	call	0x5f40


0x7c41:	mov	r8d, dword ptr [rsp + 0x10]
0x7c46:	mov	rsi, qword ptr [rsp + 0x20]
0x7c4b:	mov	r9, qword ptr [rsp + 0x48]
0x7c50:	sub	r8d, eax
0x7c53:	jne	0x7888


0x7c59:	mov	ecx, dword ptr [rip + 0x212c25]
0x7c5f:	mov	edx, dword ptr [rip + 0x212c23]
0x7c65:	mov	rdi, r13
0x7c68:	mov	qword ptr [rsp + 0x10], r9
0x7c6d:	call	0x11200


0x7c72:	mov	r9, qword ptr [rsp + 0x10]
0x7c77:	mov	r8d, eax
0x7c7a:	jmp	0x7888


0x8409:	lea	rax, [rsp + 0xf0]
0x8411:	mov	rdi, qword ptr [rsp + 0x78]
0x8416:	mov	rsi, rax
0x8419:	mov	qword ptr [rsp + 0x48], rax
0x841e:	call	0xbad0


0x82a5:	mov	rdi, qword ptr [rsp + 0x78]
0x82aa:	mov	rsi, r13
0x82ad:	call	0xbad0


0xbf28:	mov	rsi, rbp
0xbf2b:	mov	rdi, rbx
0xbf2e:	call	0xbad0


0x10f8f:	lea	rdi, [rbx + 0x70]
0x10f93:	xor	esi, esi
0x10f95:	call	0x132c0


0x10f9a:	lea	rdi, [rbx + 0xc8]
0x10fa1:	xor	esi, esi
0x10fa3:	pop	rbx
0x10fa4:	jmp	0x132c0


0x121ee:	mov	qword ptr [rsp], rax
0x121f2:	mov	qword ptr [rsp + 8], rdx
0x121f7:	call	0x2b10


0x137f1:	test	rbp, rbp
0x137f4:	je	0x13816


0x13816:	add	rsp, 8
0x1381a:	pop	rbx
0x1381b:	pop	rbp
0x1381c:	pop	r12
0x1381e:	pop	r13
0x13820:	pop	r14
0x13822:	pop	r15
0x13824:	ret	


0x137f6:	xor	ebx, ebx
0x137f8:	nop	dword ptr [rax + rax]
0x13800:	mov	rdx, r15
0x13803:	mov	rsi, r14
0x13806:	mov	edi, r13d
0x13809:	call	qword ptr [r12 + rbx*8]


0xbf33:	mov	rcx, qword ptr [rsp + 0xa8]
0xbf3b:	xor	rcx, qword ptr fs:[0x28]
0xbf44:	jne	0xbf50


0xbf46:	add	rsp, 0xb8
0xbf4d:	pop	rbx
0xbf4e:	pop	rbp
0xbf4f:	ret	


0xbf50:	call	0x2ca0


0x82b2:	mov	r9, qword ptr [rsp + 0x10]
0x82b7:	mov	rdx, qword ptr [rsp + 0x80]
0x82bf:	mov	rdi, rbx
0x82c2:	mov	rsi, r9
0x82c5:	mov	qword ptr [rsp + 0x20], r9
0x82ca:	call	0xbbf0


0x82cf:	lea	rcx, [r13 + 0x10]
0x82d3:	mov	rdi, qword ptr [rsp + 0x80]
0x82db:	mov	rsi, rcx
0x82de:	mov	qword ptr [rsp + 0x10], rcx
0x82e3:	call	0xbad0


0x82e8:	mov	rcx, qword ptr [rsp + 0x10]
0x82ed:	mov	edx, 0x10
0x82f2:	mov	rdi, r13
0x82f5:	mov	rsi, rcx
0x82f8:	call	0x2df0


0x8423:	mov	rdx, qword ptr [rsp + 0x80]
0x842b:	mov	rsi, qword ptr [rsp + 0x20]
0x8430:	mov	rdi, qword ptr [rsp + 0x70]
0x8435:	call	0xbbf0


0x843a:	mov	rax, qword ptr [rsp + 0x48]
0x843f:	mov	rdi, qword ptr [rsp + 0x80]
0x8447:	lea	rcx, [rax + 0x10]
0x844b:	mov	rsi, rcx
0x844e:	mov	qword ptr [rsp + 0x50], rcx
0x8453:	call	0xbad0


0x8458:	mov	rcx, qword ptr [rsp + 0x50]
0x845d:	mov	rdi, qword ptr [rsp + 0x48]
0x8462:	mov	edx, 0x10
0x8467:	mov	rsi, rcx
0x846a:	call	0x2df0


0xa643:	test	eax, eax
0xa645:	jne	0xa5dc


0xa647:	mov	rax, qword ptr [r14 + 8]
0xa64b:	cmp	qword ptr [rsp + 0x58], rax
0xa650:	jne	0xa5dc


0xa5dc:	add	r13, 1
0xa5e0:	add	rbx, 0x10
0xa5e4:	cmp	qword ptr [rsp + 0x10], r13
0xa5e9:	je	0xa683


0xa652:	mov	rax, qword ptr [r14]
0xa655:	cmp	qword ptr [rsp + 0x50], rax
0xa65a:	jne	0xa5dc


0xa65c:	test	r15, r15
0xa65f:	lea	r14, [r15 + 0xd]
0xa663:	je	0xa859


0xa859:	mov	rdi, qword ptr [rsp + 0x38]
0xa85e:	xor	esi, esi
0xa860:	call	0x8d00


0xa669:	mov	qword ptr [rbx], r14
0xa66c:	mov	qword ptr [rbx + 8], r15
0xa670:	add	r13, 1
0xa674:	add	rbx, 0x10
0xa678:	cmp	qword ptr [rsp + 0x10], r13
0xa67d:	jne	0xa5ef


0x7372:	cmp	eax, -1
0x7375:	mov	rcx, qword ptr [rsp]
0x7379:	jne	0x733c


0x737b:	lea	rsi, [rip + 0xe144]
0x7382:	xor	edi, edi
0x7384:	mov	edx, 5
0x7389:	call	0x2c70


0x733c:	cmp	rbx, r15
0x733f:	je	0x73b0


0x76d1:	fstp	st(0)
0x76d3:	mov	r9, qword ptr [rsp]
0x76d7:	jmp	0x74f0


0x7b5d:	fstp	xword ptr [rsp + 0x10]
0x7b61:	lea	rsi, [rsp + 0xc8]
0x7b69:	mov	rdi, rbx
0x7b6c:	call	0x2fd0


0x7b71:	cmp	r12, qword ptr [rsp + 0xc0]
0x7b79:	mov	r9, qword ptr [rsp + 0x20]
0x7b7e:	fld	xword ptr [rsp + 0x10]
0x7b82:	je	0x8210


0x8210:	fstp	st(0)
0x8212:	fstp	st(0)
0x8214:	xor	eax, eax
0x8216:	cmp	qword ptr [rsp + 0xc8], rbx
0x821e:	setne	al
0x8221:	neg	eax
0x8223:	mov	r8d, eax
0x8226:	jmp	0x7888


0x7b88:	cmp	rbx, qword ptr [rsp + 0xc8]
0x7b90:	mov	r8d, 1
0x7b96:	je	0x7870


0x7870:	fstp	st(0)
0x7872:	fstp	st(0)
0x7874:	jmp	0x7888


0x7b9c:	fxch	st(1)
0x7b9e:	fucomi	st(1)
0x7ba0:	ja	0x7bcc


0x7ba2:	fxch	st(1)
0x7ba4:	fucomi	st(1)
0x7ba6:	ja	0x7880


0x7bcc:	fstp	st(0)
0x7bce:	fstp	st(0)
0x7bd0:	mov	r8d, 0xffffffff
0x7bd6:	jmp	0x7888


0x7bac:	jp	0x7bb8


0x7880:	fstp	st(0)
0x7882:	fstp	st(0)
0x7884:	nop	dword ptr [rax]
0x7888:	cmp	byte ptr [rsp + 8], 0
0x788d:	jne	0x7a77


0x7bb8:	fxch	st(1)
0x7bba:	nop	word ptr [rax + rax]
0x7bc0:	fucomip	st(0)
0x7bc2:	jp	0x84fb


0x7bae:	je	0x8390


0x84fb:	fucomip	st(0)
0x84fd:	jp	0x85f9


0x7bc8:	fstp	st(0)
0x7bca:	jmp	0x7bd0


0x8390:	fstp	st(0)
0x8392:	fstp	st(0)
0x8394:	xor	r8d, r8d
0x8397:	jmp	0x7888


0x7bb4:	fxch	st(1)
0x7bb6:	jmp	0x7bc0


0x85f9:	pxor	xmm0, xmm0
0x85fd:	xor	esi, esi
0x85ff:	mov	rdi, r12
0x8602:	mov	qword ptr [rsp + 0x48], r9
0x8607:	lea	r13, [rsp + 0xd0]
0x860f:	movaps	xmmword ptr [rsp + 0xd0], xmm0
0x8617:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x861c:	call	0x2fd0


0x8503:	mov	r8d, 1
0x8509:	jmp	0x7888


0x7bd0:	mov	r8d, 0xffffffff
0x7bd6:	jmp	0x7888


0x7bc0:	fucomip	st(0)
0x7bc2:	jp	0x84fb


0x8621:	fstp	xword ptr [rsp + 0xd0]
0x8628:	lea	rax, [rsp + 0xe0]
0x8630:	xor	esi, esi
0x8632:	mov	rdi, rbx
0x8635:	mov	qword ptr [rsp + 0x10], rax
0x863a:	movdqa	xmm0, xmmword ptr [rsp + 0x20]
0x8640:	movaps	xmmword ptr [rsp + 0xe0], xmm0
0x8648:	call	0x2fd0


0x864d:	mov	edx, 0x10
0x8652:	mov	rdi, r13
0x8655:	fstp	xword ptr [rsp + 0xe0]
0x865c:	mov	rsi, qword ptr [rsp + 0x10]
0x8661:	call	0x2df0


0x9811:	mov	r11, qword ptr [rsp + 0x18]
0x9816:	lea	rdi, [r15 + rax]
0x981a:	sub	r12, rax
0x981d:	mov	qword ptr [rsp], rdi
0x9821:	cmp	r11, rax
0x9824:	je	0x9870


0x9870:	mov	rax, qword ptr [rsp]
0x9874:	mov	r11, r15
0x9877:	mov	qword ptr [rsp + 0x18], rax
0x987c:	jmp	0x9895


0x9826:	mov	rax, qword ptr [rsp + 0x20]
0x982b:	mov	eax, dword ptr [rax]
0x982d:	test	al, 0x20
0x982f:	jne	0x9aaf


0x9895:	mov	rdx, qword ptr [rsp]
0x9899:	mov	esi, dword ptr [rsp + 0x30]
0x989d:	mov	rdi, r11
0x98a0:	sub	rdx, r11
0x98a3:	call	0x2de0


0x9835:	test	al, 0x10
0x9837:	je	0x9870


0x9aaf:	lea	rsi, [rip + 0xba36]
0x9ab6:	xor	edi, edi
0x9ab8:	mov	edx, 5
0x9abd:	call	0x2c70


0x2de0:	jmp	qword ptr [rip + 0x216fe2]


0x9839:	mov	rax, qword ptr [rsp + 0x28]
0x983e:	mov	rsi, rax
0x9841:	mov	byte ptr [rax + 0x30], 1
0x9845:	mov	rax, qword ptr [rsp]
0x9849:	cmp	qword ptr [rsi], rax
0x984c:	je	0x9a70




0x9a70:	add	rsp, 0x48
0x9a74:	xor	eax, eax
0x9a76:	pop	rbx
0x9a77:	pop	rbp
0x9a78:	pop	r12
0x9a7a:	pop	r13
0x9a7c:	pop	r14
0x9a7e:	pop	r15
0x9a80:	ret	


0x9852:	cmp	r13, rax
0x9855:	je	0x9870


0x9857:	movzx	esi, byte ptr [rsp + 0x37]
0x985c:	cmp	byte ptr [rax - 1], sil
0x9860:	je	0x9870


0x9862:	mov	byte ptr [rax], sil
0x9865:	add	rax, 1
0x9869:	mov	qword ptr [rsp], rax
0x986d:	nop	dword ptr [rax]
0x9870:	mov	rax, qword ptr [rsp]
0x9874:	mov	r11, r15
0x9877:	mov	qword ptr [rsp + 0x18], rax
0x987c:	jmp	0x9895


0x70d9:	test	eax, eax
0x70db:	jne	0x7140


0x7140:	call	0x2b10


0x71af:	mov	edi, eax
0x71b1:	xor	eax, eax
0x71b3:	test	edi, edi
0x71b5:	js	0x711f


0x711f:	mov	rdi, rax
0x7122:	mov	esi, 2
0x7127:	mov	qword ptr [rsp + 8], rax
0x712c:	call	0xc0b0


0x71bb:	mov	rsi, rbp
0x71be:	call	0x2f80


0x2f80:	jmp	qword ptr [rip + 0x216f12]




0xe01f:	mov	rdx, qword ptr [rsp]
0xe023:	test	rdx, rdx
0xe026:	je	0xdfde


0xe028:	movzx	ecx, byte ptr [rdx]
0xe02b:	test	cl, cl
0xe02d:	je	0xdfe0


0xe02f:	movsx	esi, cl
0xe032:	cmp	esi, 0x20
0xe035:	ja	0xe07e


0xe037:	movabs	rdi, 0x100003e00
0xe041:	bt	rdi, rcx
0xe045:	jae	0xe07e


0xe07e:	cmp	cl, 0x2c
0xe081:	jne	0xdfde


0xe047:	add	rdx, 1
0xe04b:	mov	r8d, 1
0xe051:	jmp	0xe067


0xe087:	jmp	0xdfe0


0xe067:	mov	qword ptr [rsp], rdx
0xe06b:	movzx	ecx, byte ptr [rdx]
0xe06e:	test	cl, cl
0xe070:	je	0xdfe0


0xe076:	movsx	esi, cl
0xe079:	cmp	esi, 0x20
0xe07c:	jbe	0xe058


0xe058:	mov	rsi, r8
0xe05b:	add	rdx, 1
0xe05f:	shl	rsi, cl
0xe062:	test	rsi, rdi
0xe065:	je	0xe07e


0x966c:	test	eax, eax
0x966e:	mov	r8, qword ptr [rsp + 8]
0x9673:	je	0x9696


0x9696:	mov	rax, qword ptr [rbx + 0x28]
0x969a:	sub	rsp, 8
0x969e:	mov	rcx, qword ptr [rbx + 0x48]
0x96a2:	push	qword ptr [rsp + 0x38]
0x96a6:	mov	r9, qword ptr [rsp + 0x38]
0x96ab:	mov	rsi, r13
0x96ae:	mov	rdx, qword ptr [rsp + 0x30]
0x96b3:	mov	rdi, rbp
0x96b6:	sub	rsi, r8
0x96b9:	shl	rax, 5
0x96bd:	mov	r8, r12
0x96c0:	sub	rdi, rax
0x96c3:	call	0x8ff0


0x9675:	mov	r15, qword ptr [rbx + 0x28]
0x9679:	mov	r14, qword ptr [rbx + 0x30]
0x967d:	jmp	0x908a


0xa544:	mov	ecx, dword ptr [rip + 0x20fada]
0xa54a:	mov	qword ptr [rsp + 8], r15
0xa54f:	cmp	rcx, r15
0xa552:	jb	0xa3ed


0x9918:	mov	rax, qword ptr [rsp + 0x28]
0x991d:	mov	rdx, qword ptr [rax + 0x20]
0x9921:	mov	qword ptr [rax + 0x10], 0
0x9929:	mov	r15, qword ptr [rax]
0x992c:	mov	qword ptr [rax + 8], rdx
0x9930:	xor	eax, eax
0x9932:	jmp	0x9778


0x9778:	mov	rdi, qword ptr [rsp + 8]
0x977d:	sub	rbp, 0x22
0x9781:	add	rdi, 1
0x9785:	mov	qword ptr [rsp + 0x10], rdi
0x978a:	mov	rdi, qword ptr [rsp + 0x28]
0x978f:	mov	r12, qword ptr [rdi + 0x18]
0x9793:	movsx	edi, byte ptr [rsp + 0x37]
0x9798:	mov	dword ptr [rsp + 0x30], edi
0x979c:	nop	dword ptr [rax]
0x97a0:	add	r12, r15
0x97a3:	lea	r13, [r15 + rdx]
0x97a7:	mov	rdx, rax
0x97aa:	shl	rdx, 5
0x97ae:	mov	r14, r12
0x97b1:	sub	r14, rdx
0x97b4:	mov	rdx, qword ptr [rsp + 8]
0x97b9:	imul	rdx, rax
0x97bd:	sub	r12, rdx
0x97c0:	sub	r12, r13
0x97c3:	test	rax, rax
0x97c6:	je	0x9a1b


0xe42a:	test	eax, eax
0xe42c:	js	0xe5d6


0xe5d6:	mov	r12d, 0xffffffff
0xe5dc:	jmp	0xe446


0xe432:	test	ebp, 0x800
0xe438:	jne	0xe520


0xe446:	pop	rbx
0xe447:	mov	eax, r12d
0xe44a:	pop	rbp
0xe44b:	pop	r12
0xe44d:	pop	r13
0xe44f:	pop	r14
0xe451:	ret	


0xe43e:	and	ebp, 0x80000
0xe444:	jne	0xe458


0xe520:	mov	edi, dword ptr [rbx + 4]
0xe523:	xor	edx, edx
0xe525:	xor	eax, eax
0xe527:	mov	esi, 3
0xe52c:	call	0x12bc0


0xe458:	mov	edi, dword ptr [rbx + 4]
0xe45b:	xor	edx, edx
0xe45d:	xor	eax, eax
0xe45f:	mov	esi, 1
0xe464:	call	0x12bc0


0xd2ab:	test	rax, rax
0xd2ae:	mov	qword ptr [rsp], rax
0xd2b2:	je	0xd360


0xd2b8:	mov	qword ptr [rsp + 0x10], rbx
0xd2bd:	shl	rbx, 4
0xd2c1:	mov	qword ptr [rsp + 0x28], r12
0xd2c6:	add	rbx, rax
0xd2c9:	mov	rax, qword ptr [rbp + 0x30]
0xd2cd:	mov	r12, rsp
0xd2d0:	xor	edx, edx
0xd2d2:	mov	rsi, rbp
0xd2d5:	mov	rdi, r12
0xd2d8:	mov	qword ptr [rsp + 8], rbx
0xd2dd:	mov	qword ptr [rsp + 0x18], 0
0xd2e6:	mov	qword ptr [rsp + 0x30], rax
0xd2eb:	mov	rax, qword ptr [rbp + 0x38]
0xd2ef:	mov	qword ptr [rsp + 0x20], 0
0xd2f8:	mov	qword ptr [rsp + 0x38], rax
0xd2fd:	mov	rax, qword ptr [rbp + 0x40]
0xd301:	mov	qword ptr [rsp + 0x40], rax
0xd306:	mov	rax, qword ptr [rbp + 0x48]
0xd30a:	mov	qword ptr [rsp + 0x48], rax
0xd30f:	call	0xc8d0


0xd314:	test	al, al
0xd316:	mov	ebx, eax
0xd318:	jne	0xd3d0


0xd31e:	mov	rax, qword ptr [rsp + 0x48]
0xd323:	mov	edx, 1
0xd328:	mov	rsi, r12
0xd32b:	mov	rdi, rbp
0xd32e:	mov	qword ptr [rbp + 0x48], rax
0xd332:	call	0xc8d0


0xd3d0:	mov	rdi, qword ptr [rbp]
0xd3d4:	call	0x31c0


0xd337:	test	al, al
0xd339:	je	0xd419


0xd419:	call	0x2b00


0xd33f:	xor	edx, edx
0xd341:	mov	rsi, r12
0xd344:	mov	rdi, rbp
0xd347:	call	0xc8d0


0xd34c:	test	al, al
0xd34e:	je	0xd419


0xd354:	mov	rdi, qword ptr [rsp]
0xd358:	call	0x31c0


0x11fcf:	test	rax, rax
0x11fd2:	je	0x11fd9


0x11fd4:	add	rsp, 8
0x11fd8:	ret	


0x13007:	mov	rdx, qword ptr [rsp + 0x18]
0x1300c:	xor	rdx, qword ptr fs:[0x28]
0x13015:	jne	0x13032


0x13017:	add	rsp, 0x20
0x1301b:	pop	rbx
0x1301c:	pop	rbp
0x1301d:	pop	r12
0x1301f:	ret	


0x13032:	call	0x2ca0


0x12fe4:	test	eax, eax
0x12fe6:	je	0x12fb8


0x12fb8:	cmp	rbx, 0x1fa400
0x12fbf:	mov	qword ptr [rsp + 8], 0
0x12fc8:	jle	0x12ff8


0x12fe8:	test	rbp, rbp
0x12feb:	je	0x13007


0x12fed:	add	qword ptr [rbp], rbx
0x12ff1:	jmp	0x13007


0x3268:	test	ebp, ebp
0x326a:	je	0x32af


0x32af:	lea	rsi, [rip + 0x12254]
0x32b6:	mov	edi, 2
0x32bb:	mov	edx, 1
0x32c0:	call	0x2bf0


0x326c:	lea	rsi, [rsp + 0xc]
0x3271:	mov	edi, ebp
0x3273:	call	0xdc10


0x3278:	lea	rsi, [rip + 0x121ca]
0x327f:	mov	rbp, rax
0x3282:	mov	edx, 8
0x3287:	mov	edi, 2
0x328c:	call	0x2bf0


0x3291:	mov	rdi, rbp
0x3294:	mov	rcx, r12
0x3297:	mov	al, bl
0x3299:	repne scasb	al, byte ptr [rdi]


0x329b:	mov	rsi, rbp
0x329e:	mov	edi, 2
0x32a3:	not	rcx
0x32a6:	lea	rdx, [rcx + r12]
0x32aa:	call	0x2bf0


0x3299:	repne scasb	al, byte ptr [rdi]


0x32c5:	mov	edi, 2
0x32ca:	call	0x2b40


0x2b40:	jmp	qword ptr [rip + 0x217132]




0x62f1:	mov	rbx, qword ptr [rbx]
0x62f4:	test	rbx, rbx
0x62f7:	jne	0x62e8


0x62e8:	lea	rdi, [rbx + 0xd]
0x62ec:	call	0x2b20


0x630d:	add	rsp, 8
0x6311:	mov	edi, ebp
0x6313:	pop	rbx
0x6314:	pop	rbp
0x6315:	jmp	0x2ad0


0x2ad0:	jmp	qword ptr [rip + 0x21716a]




0xa5cd:	test	eax, eax
0xa5cf:	jne	0xa5dc


0xa5d1:	mov	rax, qword ptr [r14 + 8]
0xa5d5:	cmp	qword ptr [rsp + 0x58], rax
0xa5da:	je	0xa652


0x63be:	test	eax, eax
0x63c0:	je	0x63d8


0x63d8:	mov	dword ptr [rip + 0x213eee], 0xffffffff
0x63e2:	lea	rax, [rip + 0x213e57]
0x63e9:	add	rsp, 8
0x63ed:	ret	


0x63c2:	call	0x2b10


0x6889:	cmp	r15, 1
0x688d:	ja	0x68e0


0x688f:	mov	qword ptr [rbx + 0x40], 0
0x6897:	mov	qword ptr [rbx + 0x48], 0
0x689f:	add	rsp, 8
0x68a3:	pop	rbx
0x68a4:	mov	rax, r13
0x68a7:	pop	rbp
0x68a8:	pop	r12
0x68aa:	pop	r13
0x68ac:	pop	r14
0x68ae:	pop	r15
0x68b0:	ret	


0x68e0:	mov	rcx, r15
0x68e3:	mov	qword ptr [rbx + 0x40], r13
0x68e7:	mov	r8, r12
0x68ea:	shr	rcx, 1
0x68ed:	mov	rdx, rbp
0x68f0:	mov	rsi, r13
0x68f3:	mov	rdi, rbx
0x68f6:	mov	r9d, 1
0x68fc:	sub	r15, rcx
0x68ff:	call	0x6800


0x6904:	mov	qword ptr [rbx + 0x48], rax
0x6908:	add	rsp, 8
0x690c:	mov	r8, r12
0x690f:	mov	rcx, r15
0x6912:	mov	rdx, r14
0x6915:	mov	rdi, rbx
0x6918:	pop	rbx
0x6919:	pop	rbp
0x691a:	pop	r12
0x691c:	pop	r13
0x691e:	pop	r14
0x6920:	pop	r15
0x6922:	xor	r9d, r9d
0x6925:	mov	rsi, rax
0x6928:	jmp	0x6800


0x6cf4:	mov	rdi, rbp
0x6cf7:	test	eax, eax
0x6cf9:	sete	byte ptr [rsp + 0x10]
0x6cfe:	call	0x2b20


0x6d03:	mov	r14d, eax
0x6d06:	call	0x2b10


0x6bfd:	mov	rbx, qword ptr [rip + 0x213784]
0x6c04:	test	eax, eax
0x6c06:	sete	al
0x6c09:	mov	byte ptr [rsp], al
0x6c0c:	test	rbx, rbx
0x6c0f:	je	0x6c2d


0x6c2d:	test	al, al
0x6c2f:	mov	qword ptr [rip + 0x21374e], 0
0x6c3a:	jne	0x6c60


0x6c60:	mov	rdi, rbp
0x6c63:	call	0x6bb0


0x6c68:	jmp	0x6c3c


0x6c21:	mov	rbx, qword ptr [rbx]
0x6c24:	test	rbx, rbx
0x6c27:	jne	0x6c18


0x6c29:	movzx	eax, byte ptr [rsp]
0x6c2d:	test	al, al
0x6c2f:	mov	qword ptr [rip + 0x21374e], 0
0x6c3a:	jne	0x6c60


0x6c18:	lea	rdi, [rbx + 0xd]
0x6c1c:	call	0x2b20


0x72ce:	cmp	r13, rax
0x72d1:	jne	0x76fe


0x72d7:	mov	byte ptr [rbx - 1], 0
0x72db:	mov	rax, qword ptr [rsp + 0x28]
0x72e0:	xor	rax, qword ptr fs:[0x28]
0x72e9:	jne	0x76f9


0x76fe:	lea	rsi, [rip + 0xddc1]
0x7705:	xor	edi, edi
0x7707:	mov	edx, 5
0x770c:	call	0x2c70


0x72ef:	add	rsp, 0x38
0x72f3:	pop	rbx
0x72f4:	pop	rbp
0x72f5:	pop	r12
0x72f7:	pop	r13
0x72f9:	pop	r14
0x72fb:	pop	r15
0x72fd:	ret	


0x76f9:	call	0x2ca0


0x108c9:	mov	qword ptr [r12 + 0x18], r14
0x108ce:	jmp	0x107d2


0x107d2:	add	rsp, 0x18
0x107d6:	pop	rbx
0x107d7:	pop	rbp
0x107d8:	pop	r12
0x107da:	pop	r13
0x107dc:	pop	r14
0x107de:	pop	r15
0x107e0:	ret	


0x10823:	test	bl, 7
0x10826:	jne	0x10890


0x10828:	cmp	rbp, 0x7ff
0x1082f:	jbe	0x108d3


0x10890:	mov	rsi, qword ptr [rsp + 8]
0x10895:	mov	rdi, r13
0x10898:	mov	r14d, 0x800
0x1089e:	call	0x10950


0x108d3:	mov	rsi, qword ptr [rsp + 8]
0x108d8:	mov	rdi, r13
0x108db:	call	0x10950


0x10835:	lea	r15, [rbp - 0x800]
0x1083c:	mov	r14, r15
0x1083f:	and	r14d, 0x7ff
0x10846:	jmp	0x1085c


0x1085c:	mov	rsi, rbx
0x1085f:	mov	rdi, r13
0x10862:	add	rbx, 0x800
0x10869:	call	0x10950


0x1086e:	test	r15, r15
0x10871:	mov	rbp, r15
0x10874:	jne	0x10850


0x10876:	mov	qword ptr [r12 + 0x18], 0
0x1087f:	add	rsp, 0x18
0x10883:	pop	rbx
0x10884:	pop	rbp
0x10885:	pop	r12
0x10887:	pop	r13
0x10889:	pop	r14
0x1088b:	pop	r15
0x1088d:	ret	


0x10850:	cmp	r15, r14
0x10853:	je	0x10890


0x10855:	sub	r15, 0x800
0x1085c:	mov	rsi, rbx
0x1085f:	mov	rdi, r13
0x10862:	add	rbx, 0x800
0x10869:	call	0x10950


0x108e0:	jmp	0x108b0


0x108b0:	mov	r14d, 0x800
0x108b6:	mov	rsi, qword ptr [rsp + 8]
0x108bb:	mov	rdx, rbp
0x108be:	mov	rdi, rbx
0x108c1:	sub	r14, rbp
0x108c4:	call	0x2e80


0x108a3:	cmp	rbp, 0x800
0x108aa:	ja	0x10805


0xbd64:	mov	esi, dword ptr [r13 + 0x18]
0xbd68:	add	esi, r14d
0xbd6b:	cmp	esi, 0x40
0xbd6e:	mov	dword ptr [r13 + 0x18], esi
0xbd72:	ja	0xbdd0


0xbd74:	add	rbx, r14
0xbd77:	sub	r12, r14
0xbd7a:	jmp	0xbc12


0xbdd0:	and	esi, 0xffffffc0
0xbdd3:	mov	rdx, r13
0xbdd6:	mov	rdi, r15
0xbdd9:	call	0xb360


0xbdde:	mov	ecx, dword ptr [r13 + 0x18]
0xbde2:	lea	rax, [rbp + r14]
0xbde7:	and	rax, 0xffffffffffffffc0
0xbdeb:	mov	edx, ecx
0xbded:	add	rax, r15
0xbdf0:	and	edx, 0x3f
0xbdf3:	cmp	edx, 8
0xbdf6:	mov	dword ptr [r13 + 0x18], edx
0xbdfa:	jae	0xbe30


0xbdfc:	test	cl, 4
0xbdff:	jne	0xbe7f


0xbe30:	mov	rcx, qword ptr [rax]
0xbe33:	mov	qword ptr [r13 + 0x1c], rcx
0xbe37:	mov	ecx, edx
0xbe39:	mov	rsi, qword ptr [rax + rcx - 8]
0xbe3e:	mov	qword ptr [r15 + rcx - 8], rsi
0xbe43:	lea	rcx, [r13 + 0x24]
0xbe47:	and	rcx, 0xfffffffffffffff8
0xbe4b:	sub	r15, rcx
0xbe4e:	sub	rax, r15
0xbe51:	add	r15d, edx
0xbe54:	and	r15d, 0xfffffff8
0xbe58:	cmp	r15d, 8
0xbe5c:	jb	0xbd74


0xbe01:	test	edx, edx
0xbe03:	je	0xbd74


0xbe7f:	mov	ecx, dword ptr [rax]
0xbe81:	mov	dword ptr [r13 + 0x1c], ecx
0xbe85:	mov	eax, dword ptr [rax + rdx - 4]
0xbe89:	mov	dword ptr [r15 + rdx - 4], eax
0xbe8e:	jmp	0xbd74


0xbe62:	and	r15d, 0xfffffff8
0xbe66:	xor	edx, edx
0xbe68:	mov	esi, edx
0xbe6a:	add	edx, 8
0xbe6d:	mov	rdi, qword ptr [rax + rsi]
0xbe71:	cmp	edx, r15d
0xbe74:	mov	qword ptr [rcx + rsi], rdi
0xbe78:	jb	0xbe68


0xbe09:	movzx	esi, byte ptr [rax]
0xbe0c:	and	ecx, 2
0xbe0f:	mov	byte ptr [r13 + 0x1c], sil
0xbe13:	je	0xbd74


0xbe68:	mov	esi, edx
0xbe6a:	add	edx, 8
0xbe6d:	mov	rdi, qword ptr [rax + rsi]
0xbe71:	cmp	edx, r15d
0xbe74:	mov	qword ptr [rcx + rsi], rdi
0xbe78:	jb	0xbe68


0xbe7a:	jmp	0xbd74


0xbe19:	movzx	eax, word ptr [rax + rdx - 2]
0xbe1e:	mov	word ptr [r15 + rdx - 2], ax
0xbe24:	jmp	0xbd74


0xe4f5:	test	eax, eax
0xe4f7:	mov	r12d, eax
0xe4fa:	js	0xe5a0


0xe5a0:	call	0x2b10


0xe500:	pop	rbx
0xe501:	mov	eax, r12d
0xe504:	mov	dword ptr [rip + 0x20c392], 1
0xe50e:	pop	rbp
0xe50f:	pop	r12
0xe511:	pop	r13
0xe513:	pop	r14
0xe515:	ret	


0xe693:	test	rax, rax
0xe696:	je	0xe6ed


0xe6ed:	mov	qword ptr [rip + 0x20c1b4], rbx
0xe6f4:	mov	qword ptr [rip + 0x20baed], rbx
0xe6fb:	pop	rbx
0xe6fc:	ret	


0xe698:	lea	r8, [rax + 1]
0xe69c:	mov	rdx, r8
0xe69f:	sub	rdx, rbx
0xe6a2:	cmp	rdx, 6
0xe6a6:	jle	0xe6ed


0xe6a8:	lea	rsi, [rax - 6]
0xe6ac:	lea	rdi, [rip + 0x7535]
0xe6b3:	mov	ecx, 7
0xe6b8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xe6b8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xe6ba:	seta	dl
0xe6bd:	sbb	dl, 0
0xe6c0:	test	dl, dl
0xe6c2:	jne	0xe6ed


0xe6c4:	lea	rdi, [rip + 0x7525]
0xe6cb:	mov	ecx, 3
0xe6d0:	mov	rsi, r8
0xe6d3:	mov	rbx, r8
0xe6d6:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xe6d6:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xe6d8:	seta	dl
0xe6db:	sbb	dl, 0
0xe6de:	test	dl, dl
0xe6e0:	jne	0xe6ed


0xe6e2:	lea	rbx, [rax + 4]
0xe6e6:	mov	qword ptr [rip + 0x20bad3], rbx
0xe6ed:	mov	qword ptr [rip + 0x20c1b4], rbx
0xe6f4:	mov	qword ptr [rip + 0x20baed], rbx
0xe6fb:	pop	rbx
0xe6fc:	ret	


0xe71a:	call	0x2b00


0x10fde:	cmp	eax, -1
0x10fe1:	je	0x11030


0x11030:	mov	rax, qword ptr [rbx + 0x30]
0x11034:	cmp	qword ptr [rbx + 0x28], rax
0x11038:	je	0x11057


0x10fe3:	mov	rdx, qword ptr [rbx + 0x30]
0x10fe7:	cmp	qword ptr [rbx + 0x38], rdx
0x10feb:	jne	0x10fc8


0x11057:	mov	rdx, qword ptr [rbx + 0x88]
0x1105e:	mov	rax, qword ptr [rbx + 0x90]
0x11065:	sub	rax, rdx
0x11068:	cmp	rax, 7
0x1106c:	jbe	0x11160


0x1103a:	cmp	qword ptr [rbx + 0x38], rax
0x1103e:	je	0x111a0


0x10fed:	mov	esi, 1
0x10ff2:	mov	rdi, r12
0x10ff5:	mov	dword ptr [rsp + 0xc], eax
0x10ff9:	call	0x13190


0x10fc8:	lea	rcx, [rdx + 1]
0x10fcc:	test	eax, eax
0x10fce:	mov	qword ptr [rbx + 0x30], rcx
0x10fd2:	mov	byte ptr [rdx], al
0x10fd4:	je	0x11014


0x11160:	lea	rdi, [rbx + 0x70]
0x11164:	mov	esi, 8
0x11169:	call	0x13190


0x11072:	mov	qword ptr [rdx], 0
0x11079:	mov	rax, qword ptr [rbx + 0x88]
0x11080:	mov	rsi, qword ptr [rbx + 0x80]
0x11087:	lea	rdx, [rax + 8]
0x1108b:	cmp	rdx, rsi
0x1108e:	mov	qword ptr [rbx + 0x88], rdx
0x11095:	je	0x11190


0x111a0:	lea	rdi, [rbx + 0x18]
0x111a4:	mov	esi, 1
0x111a9:	call	0x13190


0x11044:	lea	rdx, [rax + 1]
0x11048:	mov	rdi, rbx
0x1104b:	mov	qword ptr [rbx + 0x30], rdx
0x1104f:	mov	byte ptr [rax], 0
0x11052:	call	0x10e20


0x11014:	mov	rdi, rbx
0x11017:	call	0x10e20


0x11190:	or	byte ptr [rbx + 0xc0], 2
0x11197:	jmp	0x1109b


0x1109b:	mov	rcx, qword ptr [rbx + 0xa0]
0x110a2:	lea	rax, [rdx + rcx]
0x110a6:	not	rcx
0x110a9:	mov	rdx, qword ptr [rbx + 0x78]
0x110ad:	and	rax, rcx
0x110b0:	mov	rcx, qword ptr [rbx + 0x90]
0x110b7:	mov	rdi, rax
0x110ba:	mov	qword ptr [rbx + 0x88], rax
0x110c1:	sub	rdi, rdx
0x110c4:	mov	r8, rcx
0x110c7:	sub	r8, rdx
0x110ca:	cmp	rdi, r8
0x110cd:	jbe	0x110d9


0x110d9:	mov	qword ptr [rbx + 8], rsi
0x110dd:	mov	rdx, qword ptr [rbx + 0xe0]
0x110e4:	mov	rsi, qword ptr [rbx + 0xd8]
0x110eb:	mov	qword ptr [rbx + 0x80], rax
0x110f2:	cmp	rdx, rsi
0x110f5:	je	0x11180


0x110cf:	mov	qword ptr [rbx + 0x88], rcx
0x110d6:	mov	rax, rcx
0x110d9:	mov	qword ptr [rbx + 8], rsi
0x110dd:	mov	rdx, qword ptr [rbx + 0xe0]
0x110e4:	mov	rsi, qword ptr [rbx + 0xd8]
0x110eb:	mov	qword ptr [rbx + 0x80], rax
0x110f2:	cmp	rdx, rsi
0x110f5:	je	0x11180


0x11180:	or	byte ptr [rbx + 0x118], 2
0x11187:	jmp	0x110fb


0x110fb:	mov	rcx, qword ptr [rbx + 0xf8]
0x11102:	lea	rax, [rdx + rcx]
0x11106:	not	rcx
0x11109:	mov	rdx, qword ptr [rbx + 0xe8]
0x11110:	and	rax, rcx
0x11113:	mov	rcx, qword ptr [rbx + 0xd0]
0x1111a:	mov	rdi, rax
0x1111d:	mov	r9, rdx
0x11120:	mov	qword ptr [rbx + 0xe0], rax
0x11127:	sub	rdi, rcx
0x1112a:	sub	r9, rcx
0x1112d:	cmp	rdi, r9
0x11130:	jbe	0x1113c


0x1113c:	mov	qword ptr [rbx + 0xd8], rax
0x11143:	mov	qword ptr [rbx + 0x10], rsi
0x11147:	mov	rdi, rbp
0x1114a:	call	0x2b80


0x11132:	mov	qword ptr [rbx + 0xe0], rdx
0x11139:	mov	rax, rdx
0x1113c:	mov	qword ptr [rbx + 0xd8], rax
0x11143:	mov	qword ptr [rbx + 0x10], rsi
0x11147:	mov	rdi, rbp
0x1114a:	call	0x2b80


0x2b80:	jmp	qword ptr [rip + 0x217112]




0x1101c:	mov	rdi, rbp
0x1101f:	call	0x2da0


0x11024:	cmp	eax, -1
0x11027:	jne	0x10fe3


0xcb6b:	lea	rdx, [rip + 0x8f6f]
0xcb72:	xor	eax, eax
0xcb74:	mov	rcx, rbp
0xcb77:	mov	esi, 1
0xcb7c:	mov	rdi, r12
0xcb7f:	call	0x3100


0xcb84:	test	r13, r13
0xcb87:	js	0xcbf0


0xcbf0:	mov	rax, r13
0xcbf3:	mov	rdx, r13
0xcbf6:	pxor	xmm0, xmm0
0xcbfa:	shr	rax, 1
0xcbfd:	and	edx, 1
0xcc00:	or	rax, rdx
0xcc03:	test	rbp, rbp
0xcc06:	cvtsi2sd	xmm0, rax
0xcc0b:	addsd	xmm0, xmm0
0xcc0f:	mulsd	xmm0, qword ptr [rip + 0x8db9]
0xcc17:	jns	0xcb9f


0xcb89:	pxor	xmm0, xmm0
0xcb8d:	test	rbp, rbp
0xcb90:	cvtsi2sd	xmm0, r13
0xcb95:	mulsd	xmm0, qword ptr [rip + 0x8e33]
0xcb9d:	js	0xcc19


0xcc19:	mov	rax, rbp
0xcc1c:	pxor	xmm1, xmm1
0xcc20:	shr	rax, 1
0xcc23:	and	ebp, 1
0xcc26:	or	rax, rbp
0xcc29:	cvtsi2sd	xmm1, rax
0xcc2e:	addsd	xmm1, xmm1
0xcc32:	jmp	0xcba8


0xcb9f:	pxor	xmm1, xmm1
0xcba3:	cvtsi2sd	xmm1, rbp
0xcba8:	divsd	xmm0, xmm1
0xcbac:	lea	rdx, [rip + 0x8f65]
0xcbb3:	mov	rcx, r13
0xcbb6:	mov	rdi, r12
0xcbb9:	mov	esi, 1
0xcbbe:	mov	eax, 1
0xcbc3:	call	0x3100


0xcba8:	divsd	xmm0, xmm1
0xcbac:	lea	rdx, [rip + 0x8f65]
0xcbb3:	mov	rcx, r13
0xcbb6:	mov	rdi, r12
0xcbb9:	mov	esi, 1
0xcbbe:	mov	eax, 1
0xcbc3:	call	0x3100


0xcbc8:	add	rsp, 8
0xcbcc:	mov	rcx, rbx
0xcbcf:	mov	rdi, r12
0xcbd2:	pop	rbx
0xcbd3:	pop	rbp
0xcbd4:	pop	r12
0xcbd6:	pop	r13
0xcbd8:	lea	rdx, [rip + 0x8f1a]
0xcbdf:	mov	esi, 1
0xcbe4:	xor	eax, eax
0xcbe6:	jmp	0x3100


0x117fc:	lea	rsi, [rip + 0x4907]
0x11803:	xor	edi, edi
0x11805:	mov	edx, 5
0x1180a:	call	0x2c70


0x11911:	jmp	0x117fc


0x11e56:	test	rax, rax
0x11e59:	jne	0x11e60


0x11e5b:	test	rbx, rbx
0x11e5e:	jne	0x11e71


0x11e60:	pop	rbx
0x11e61:	ret	


0x11e71:	call	0x12030


0x99be:	mov	r15, rax
0x99c1:	mov	rax, qword ptr [rsp + 0x28]
0x99c6:	mov	qword ptr [rax], r15
0x99c9:	mov	qword ptr [rax + 0x18], r12
0x99cd:	mov	rdx, qword ptr [rax + 8]
0x99d1:	mov	rax, qword ptr [rax + 0x10]
0x99d5:	jmp	0x97a0


0x97a0:	add	r12, r15
0x97a3:	lea	r13, [r15 + rdx]
0x97a7:	mov	rdx, rax
0x97aa:	shl	rdx, 5
0x97ae:	mov	r14, r12
0x97b1:	sub	r14, rdx
0x97b4:	mov	rdx, qword ptr [rsp + 8]
0x97b9:	imul	rdx, rax
0x97bd:	sub	r12, rdx
0x97c0:	sub	r12, r13
0x97c3:	test	rax, rax
0x97c6:	je	0x9a1b


0x644f:	mov	rsi, qword ptr [rip + 0x213ff2]
0x6456:	mov	rdi, rax
0x6459:	mov	qword ptr [rip + 0x213ff0], rax
0x6460:	jmp	0x640b


0xdaac:	mov	rbx, qword ptr [rbp + 0x10]
0xdab0:	mov	rdi, rax
0xdab3:	mov	qword ptr [rbp], rax
0xdab7:	jmp	0xda08


0x12d05:	mov	ebx, eax
0x12d07:	jmp	0x12ca0


0x12ca0:	mov	rcx, qword ptr [rsp + 0x18]
0x12ca5:	xor	rcx, qword ptr fs:[0x28]
0x12cae:	mov	eax, ebx
0x12cb0:	jne	0x12e0d


0x12cb6:	add	rsp, 0x50
0x12cba:	pop	rbx
0x12cbb:	pop	rbp
0x12cbc:	pop	r12
0x12cbe:	ret	


0x12e0d:	call	0x2ca0


0xe469:	test	eax, eax
0xe46b:	js	0xe4b8


0xe4b8:	call	0x2b10


0xe46d:	mov	edi, dword ptr [rbx + 4]
0xe470:	or	eax, 1
0xe473:	mov	esi, 2
0xe478:	mov	edx, eax
0xe47a:	xor	eax, eax
0xe47c:	call	0x12bc0


0xe481:	cmp	eax, -1
0xe484:	je	0xe4b8


0xe486:	mov	edi, dword ptr [rbx]
0xe488:	xor	edx, edx
0xe48a:	xor	eax, eax
0xe48c:	mov	esi, 1
0xe491:	call	0x12bc0


0xe496:	test	eax, eax
0xe498:	js	0xe4b8


0xe49a:	mov	edi, dword ptr [rbx]
0xe49c:	or	eax, 1
0xe49f:	mov	esi, 2
0xe4a4:	mov	edx, eax
0xe4a6:	xor	eax, eax
0xe4a8:	call	0x12bc0


0xe4ad:	cmp	eax, -1
0xe4b0:	jne	0xe446


0xe531:	test	eax, eax
0xe533:	js	0xe4b8


0xe535:	mov	edi, dword ptr [rbx + 4]
0xe538:	or	ah, 8
0xe53b:	mov	esi, 4
0xe540:	mov	edx, eax
0xe542:	xor	eax, eax
0xe544:	call	0x12bc0


0xe549:	cmp	eax, -1
0xe54c:	je	0xe4b8


0xe552:	mov	edi, dword ptr [rbx]
0xe554:	xor	edx, edx
0xe556:	xor	eax, eax
0xe558:	mov	esi, 3
0xe55d:	call	0x12bc0


0xe562:	test	eax, eax
0xe564:	js	0xe4b8


0xe56a:	mov	edi, dword ptr [rbx]
0xe56c:	or	ah, 8
0xe56f:	mov	esi, 4
0xe574:	mov	edx, eax
0xe576:	xor	eax, eax
0xe578:	call	0x12bc0


0xe57d:	cmp	eax, -1
0xe580:	je	0xe4b8


0xe586:	and	ebp, 0x80000
0xe58c:	je	0xe446


0xe592:	jmp	0xe458


0x12c99:	mov	ebx, eax
0x12c9b:	nop	dword ptr [rax + rax]
0x12ca0:	mov	rcx, qword ptr [rsp + 0x18]
0x12ca5:	xor	rcx, qword ptr fs:[0x28]
0x12cae:	mov	eax, ebx
0x12cb0:	jne	0x12e0d


0x12d5c:	mov	ebx, eax
0x12d5e:	jmp	0x12ca0


0x12c45:	test	eax, eax
0x12c47:	mov	ebx, eax
0x12c49:	js	0x12dd8


0x12dd8:	call	0x2b10


0x12c4f:	mov	dword ptr [rip + 0x207d9f], 1
0x12c59:	jmp	0x12ca0


0x12d6c:	test	eax, eax
0x12d6e:	mov	ebx, eax
0x12d70:	js	0x12ca0


0x12d76:	cmp	dword ptr [rip + 0x207c7b], -1
0x12d7d:	jne	0x12ca0


0x12d83:	xor	eax, eax
0x12d85:	mov	esi, 1
0x12d8a:	mov	edi, ebx
0x12d8c:	call	0x2bd0


0x12d91:	test	eax, eax
0x12d93:	js	0x12db1


0x12db1:	call	0x2b10


0x12d95:	or	eax, 1
0x12d98:	mov	esi, 2
0x12d9d:	mov	edi, ebx
0x12d9f:	mov	edx, eax
0x12da1:	xor	eax, eax
0x12da3:	call	0x2bd0


0x12da8:	cmp	eax, -1
0x12dab:	jne	0x12ca0


0x12e23:	mov	ebx, eax
0x12e25:	jmp	0x12ca0


0x12e4e:	test	eax, eax
0x12e50:	je	0x12e5a


0x12e52:	test	dword ptr [rbx], 0x100
0x12e58:	jne	0x12e68


0x12e68:	mov	rdi, rbx
0x12e6b:	mov	edx, 1
0x12e70:	xor	esi, esi
0x12e72:	call	0x12e80


0x8666:	mov	r9, qword ptr [rsp + 0x48]
0x866b:	mov	r8d, eax
0x866e:	jmp	0x7888


0x846f:	test	eax, eax
0x8471:	mov	r9, qword ptr [rsp + 0x60]
0x8476:	mov	r8d, dword ptr [rsp + 0x88]
0x847e:	jne	0x8367


0x8484:	test	r8d, r8d
0x8487:	jne	0x836a


0x8367:	mov	r8d, eax
0x836a:	mov	rdi, qword ptr [rsp + 0x68]
0x836f:	mov	dword ptr [rsp + 0x20], r8d
0x8374:	mov	qword ptr [rsp + 0x10], r9
0x8379:	call	0x31c0


0x848d:	jmp	0x8328


0x836a:	mov	rdi, qword ptr [rsp + 0x68]
0x836f:	mov	dword ptr [rsp + 0x20], r8d
0x8374:	mov	qword ptr [rsp + 0x10], r9
0x8379:	call	0x31c0


0x8328:	mov	rcx, qword ptr [rsp + 0x20]
0x832d:	mov	rsi, qword ptr [rsp + 0x70]
0x8332:	mov	rdi, qword ptr [rsp + 0x10]
0x8337:	mov	qword ptr [rsp + 0x48], r9
0x833c:	cmp	r13, rcx
0x833f:	mov	rdx, rcx
0x8342:	cmovbe	rdx, r13
0x8346:	call	0x2df0


0x834b:	test	eax, eax
0x834d:	mov	r8d, eax
0x8350:	mov	r9, qword ptr [rsp + 0x48]
0x8355:	jne	0x836a


0x8357:	mov	rcx, qword ptr [rsp + 0x20]
0x835c:	xor	eax, eax
0x835e:	cmp	r13, rcx
0x8361:	seta	al
0x8364:	sbb	eax, 0
0x8367:	mov	r8d, eax
0x836a:	mov	rdi, qword ptr [rsp + 0x68]
0x836f:	mov	dword ptr [rsp + 0x20], r8d
0x8374:	mov	qword ptr [rsp + 0x10], r9
0x8379:	call	0x31c0


0x82fd:	test	eax, eax
0x82ff:	mov	r8d, eax
0x8302:	mov	r9, qword ptr [rsp + 0x20]
0x8307:	jne	0x85d7


0x830d:	mov	qword ptr [rsp + 0x20], r9
0x8312:	mov	qword ptr [rsp + 0x70], rbx
0x8317:	mov	r13, rbp
0x831a:	mov	qword ptr [rsp + 0x10], r12
0x831f:	mov	qword ptr [rsp + 0x68], 0
0x8328:	mov	rcx, qword ptr [rsp + 0x20]
0x832d:	mov	rsi, qword ptr [rsp + 0x70]
0x8332:	mov	rdi, qword ptr [rsp + 0x10]
0x8337:	mov	qword ptr [rsp + 0x48], r9
0x833c:	cmp	r13, rcx
0x833f:	mov	rdx, rcx
0x8342:	cmovbe	rdx, r13
0x8346:	call	0x2df0


0x85d7:	mov	qword ptr [rsp + 0x68], 0
0x85e0:	jmp	0x836a


0x868d:	test	eax, eax
0x868f:	mov	r8d, eax
0x8692:	jne	0x7a98


0x8698:	mov	r9, qword ptr [rsp + 8]
0x869d:	cmp	rbp, r9
0x86a0:	jb	0x86af


0x8779:	test	eax, eax
0x877b:	jne	0x8737


0x877d:	xor	eax, eax
0x877f:	cmp	r13, r12
0x8782:	mov	edx, 0xffffffff
0x8787:	setne	al
0x878a:	cmovb	eax, edx
0x878d:	jmp	0x8737


0xb22d:	test	eax, eax
0xb22f:	jne	0xb210


0xb210:	mov	r14, qword ptr [rbx]
0xb213:	add	rbp, r12
0xb216:	add	rbx, 8
0xb21a:	test	r14, r14
0xb21d:	je	0xb231


0x136ca:	test	eax, eax
0x136cc:	mov	dword ptr [rsp + 8], eax
0x136d0:	je	0x13738


0x13738:	call	0x2b10


0x13776:	test	eax, eax
0x13778:	mov	rcx, qword ptr [rsp + 8]
0x1377d:	je	0x13798


0x13798:	call	0x2b10


0x6651:	test	eax, eax
0x6653:	js	0x66f3


0x66f3:	mov	rsi, qword ptr [rip + 0x213d2e]
0x66fa:	mov	edi, 4
0x66ff:	call	0x100c0


0x6659:	mov	ebp, eax
0x665b:	je	0x6675


0x6675:	mov	rcx, qword ptr [rsp + 0x28]
0x667a:	xor	rcx, qword ptr fs:[0x28]
0x6683:	mov	eax, ebp
0x6685:	jne	0x6736


0x665d:	test	ebx, ebx
0x665f:	jle	0x6698


0x668b:	add	rsp, 0x38
0x668f:	pop	rbx
0x6690:	pop	rbp
0x6691:	ret	


0x6736:	call	0x2ca0


0x6698:	mov	rdi, qword ptr [rip + 0x213ce1]
0x669f:	lea	rsi, [rsp + 0x10]
0x66a4:	mov	dword ptr [rsp + 0x18], eax
0x66a8:	call	0xd710


0x6661:	mov	eax, dword ptr [rsp + 0xc]
0x6665:	test	al, 0x7f
0x6667:	jne	0x66b8


0x6669:	test	ah, 0xff
0x666c:	jne	0x66b8


0x66b8:	mov	rsi, qword ptr [rip + 0x213d69]
0x66bf:	mov	edi, 4
0x66c4:	call	0x100c0


0x666e:	sub	dword ptr [rip + 0x213d07], 1
0x6675:	mov	rcx, qword ptr [rsp + 0x28]
0x667a:	xor	rcx, qword ptr fs:[0x28]
0x6683:	mov	eax, ebp
0x6685:	jne	0x6736


0x6946:	mov	rdi, qword ptr [rbx]
0x6949:	mov	rsi, r12
0x694c:	call	0xd9e0


0x6951:	lea	rdi, [rbx + 0x30]
0x6955:	mov	byte ptr [r12 + 0x54], 1
0x695b:	call	0x2e00


0x2e00:	jmp	qword ptr [rip + 0x216fd2]




0x6e06:	test	eax, eax
0x6e08:	js	0x6fb1


0x6fb1:	mov	ebp, 0xffffffff
0x6fb6:	jmp	0x6f10


0x6e0e:	mov	eax, dword ptr [rip + 0x213210]
0x6e14:	add	eax, 1
0x6e17:	cmp	eax, dword ptr [rip + 0x21355f]
0x6e1d:	jb	0x6f88


0x6f10:	mov	rcx, qword ptr [rsp + 0xa8]
0x6f18:	xor	rcx, qword ptr fs:[0x28]
0x6f21:	mov	eax, ebp
0x6f23:	jne	0x6fbb


0x6f88:	mov	edi, 0xffffffff
0x6f8d:	call	0x6620


0x6e23:	call	0x2b10


0x6f29:	add	rsp, 0xb8
0x6f30:	pop	rbx
0x6f31:	pop	rbp
0x6f32:	pop	r12
0x6f34:	pop	r13
0x6f36:	pop	r14
0x6f38:	pop	r15
0x6f3a:	ret	


0x6fbb:	call	0x2ca0


0x6f92:	mov	edx, dword ptr [rip + 0x2133e4]
0x6f98:	test	edx, edx
0x6f9a:	jle	0x6e23


0x6fa0:	xor	edi, edi
0x6fa2:	call	0x6620


0x6fa7:	test	eax, eax
0x6fa9:	je	0x6e23


0x6faf:	jmp	0x6f92


0x8a68:	mov	edi, ebx
0x8a6a:	pop	rbx
0x8a6b:	jmp	0x2db0


0x2db0:	jmp	qword ptr [rip + 0x216ffa]




0xa61c:	test	eax, eax
0xa61e:	je	0xa5a3


0xa5a3:	test	ebp, ebp
0xa5a5:	jne	0xa65c


0xa5ab:	call	0x6380


0xa5b0:	test	rax, rax
0xa5b3:	mov	r14, rax
0xa5b6:	je	0xa683


0xc1d9:	test	eax, eax
0xc1db:	mov	r12d, eax
0xc1de:	je	0xc428


0xc428:	mov	rbx, qword ptr [rsp + 0x28]
0xc42d:	xor	rbx, qword ptr fs:[0x28]
0xc436:	mov	eax, r12d
0xc439:	jne	0xc5ce


0xc1e4:	movzx	eax, byte ptr [rbx]
0xc1e7:	test	al, al
0xc1e9:	je	0xc568


0xc43f:	add	rsp, 0x38
0xc443:	pop	rbx
0xc444:	pop	rbp
0xc445:	pop	r12
0xc447:	pop	r13
0xc449:	pop	r14
0xc44b:	pop	r15
0xc44d:	ret	


0xc5ce:	call	0x2ca0


0xc568:	mov	r12d, 0xffffffff
0xc56e:	jmp	0xc428


0xc1ef:	movzx	r8d, byte ptr [rbp]
0xc1f4:	test	r8b, r8b
0xc1f7:	je	0xc450


0xc450:	mov	r12d, 1
0xc456:	jmp	0xc428


0xc1fd:	lea	r9, [rip + 0x98bd]
0xc204:	mov	ecx, 2
0xc209:	mov	rdi, rbx
0xc20c:	mov	rsi, r9
0xc20f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc20f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc211:	seta	dl
0xc214:	sbb	dl, 0
0xc217:	test	dl, dl
0xc219:	je	0xc568


0xc21f:	mov	ecx, 2
0xc224:	mov	rsi, r9
0xc227:	mov	rdi, rbp
0xc22a:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc22a:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc22c:	seta	dl
0xc22f:	sbb	dl, 0
0xc232:	test	dl, dl
0xc234:	je	0xc450


0xc23a:	lea	r9, [rip + 0x987f]
0xc241:	mov	ecx, 3
0xc246:	mov	rdi, rbx
0xc249:	mov	rsi, r9
0xc24c:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc24c:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc24e:	seta	dl
0xc251:	sbb	dl, 0
0xc254:	test	dl, dl
0xc256:	je	0xc568


0xc25c:	mov	ecx, 3
0xc261:	mov	rsi, r9
0xc264:	mov	rdi, rbp
0xc267:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc267:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc269:	seta	dl
0xc26c:	sbb	dl, 0
0xc26f:	test	dl, dl
0xc271:	je	0xc450


0xc277:	cmp	al, 0x2e
0xc279:	je	0xc550


0xc550:	add	rbx, 1
0xc554:	add	rbp, 1
0xc558:	cmp	r8b, 0x2e
0xc55c:	je	0xc289


0xc27f:	cmp	r8b, 0x2e
0xc283:	je	0xc450


0xc289:	lea	rdi, [rsp + 0x18]
0xc28e:	mov	qword ptr [rsp + 0x18], rbx
0xc293:	mov	qword ptr [rsp + 0x20], rbp
0xc298:	call	0xc0e0


0xc29d:	lea	rdi, [rsp + 0x20]
0xc2a2:	mov	r13, rax
0xc2a5:	call	0xc0e0


0xc2aa:	test	r13, r13
0xc2ad:	je	0xc4c0


0xc4c0:	mov	r13, qword ptr [rsp + 0x18]
0xc4c5:	sub	r13, rbx
0xc4c8:	test	rax, rax
0xc4cb:	jne	0xc2bf


0xc2b3:	sub	r13, rbx
0xc2b6:	test	rax, rax
0xc2b9:	je	0xc5d3


0xc4d1:	mov	r14, qword ptr [rsp + 0x20]
0xc4d6:	sub	r14, rbp
0xc4d9:	jmp	0xc2ce


0xc2bf:	sub	rax, rbp
0xc2c2:	mov	r14, rax
0xc2c5:	cmp	r13, r14
0xc2c8:	je	0xc5a0


0xc5d3:	mov	r14, qword ptr [rsp + 0x20]
0xc5d8:	sub	r14, rbp
0xc5db:	jmp	0xc2c5


0xc2ce:	xor	esi, esi
0xc2d0:	xor	edx, edx
0xc2d2:	mov	r10d, 1
0xc2d8:	movabs	r15, 0x3ffffff03ffffff
0xc2e2:	cmp	r13, rdx
0xc2e5:	ja	0xc2f0


0xc5a0:	mov	rdx, r13
0xc5a3:	mov	rsi, rbp
0xc5a6:	mov	rdi, rbx
0xc5a9:	call	0x2b30


0xc2c5:	cmp	r13, r14
0xc2c8:	je	0xc5a0


0xc2e7:	cmp	r14, rsi
0xc2ea:	jbe	0xc428


0xc2f0:	mov	r11, rsi
0xc2f3:	mov	qword ptr [rsp], rbp
0xc2f7:	sub	r11, rdx
0xc2fa:	lea	rax, [r13 + r11]
0xc2ff:	lea	r9, [rbp + r11]
0xc304:	mov	qword ptr [rsp + 8], rax
0xc309:	nop	dword ptr [rax]
0xc310:	cmp	r13, rdx
0xc313:	jbe	0xc320


0x2b30:	jmp	qword ptr [rip + 0x21713a]


0xc320:	cmp	r14, rsi
0xc323:	movsx	eax, byte ptr [r9 + rdx]
0xc328:	jbe	0xc4f0


0xc315:	movzx	eax, byte ptr [rbx + rdx]
0xc319:	sub	eax, 0x30
0xc31c:	cmp	al, 9
0xc31e:	ja	0xc33a




0xc4f0:	movzx	ecx, byte ptr [rbx + rdx]
0xc4f4:	mov	rbp, qword ptr [rsp]
0xc4f8:	cmp	cl, 0x30
0xc4fb:	jne	0xc3b9


0xc32e:	lea	ecx, [rax - 0x30]
0xc331:	cmp	cl, 9
0xc334:	jbe	0xc4f0


0xc33a:	cmp	r13, rdx
0xc33d:	je	0xc573


0xc3b9:	cmp	al, 0x30
0xc3bb:	je	0xc3b0


0xc573:	cmp	r14, qword ptr [rsp + 8]
0xc578:	je	0xc39b


0xc343:	movzx	eax, byte ptr [rbx + rdx]
0xc347:	lea	ecx, [rax - 0x30]
0xc34a:	cmp	cl, 9
0xc34d:	jbe	0xc4e0


0xc508:	add	rdx, 1
0xc50c:	movzx	ecx, byte ptr [rbx + rdx]
0xc510:	cmp	cl, 0x30
0xc513:	je	0xc508


0xc515:	jmp	0xc3b9


0xc3b0:	add	rsi, 1
0xc3b4:	movsx	eax, byte ptr [rbp + rsi]
0xc3b9:	cmp	al, 0x30
0xc3bb:	je	0xc3b0


0xc3bd:	sub	rsi, rdx
0xc3c0:	xor	r8d, r8d
0xc3c3:	mov	r9, rsi
0xc3c6:	lea	r11, [rbp + rsi]
0xc3cb:	jmp	0xc3f6


0xc39b:	add	rdx, 1
0xc39f:	add	rsi, 1
0xc3a3:	jmp	0xc310


0xc57e:	movzx	eax, byte ptr [r9 + r13]
0xc583:	lea	ecx, [rax - 0x30]
0xc586:	cmp	cl, 9
0xc589:	jbe	0xc39b


0xc4e0:	xor	r8d, r8d
0xc4e3:	jmp	0xc37a


0xc353:	movzx	r8d, al
0xc357:	lea	ecx, [r8 - 0x41]
0xc35b:	cmp	ecx, 0x39
0xc35e:	ja	0xc36b


0xc3f6:	lea	edi, [rcx - 0x30]
0xc3f9:	lea	rsi, [rdx + r9]
0xc3fd:	cmp	dil, 9
0xc401:	jbe	0xc3d0


0xc310:	cmp	r13, rdx
0xc313:	jbe	0xc320


0xc58f:	xor	r8d, r8d
0xc592:	jmp	0xc488


0xc37a:	cmp	r14, rsi
0xc37d:	je	0xc390


0xc360:	mov	rdi, r10
0xc363:	shl	rdi, cl
0xc366:	test	rdi, r15
0xc369:	jne	0xc37a


0xc36b:	add	r8d, 0x100
0xc372:	cmp	al, 0x7e
0xc374:	je	0xc460


0xc3d0:	lea	esi, [rax - 0x30]
0xc3d3:	cmp	sil, 9
0xc3d7:	ja	0xc540


0xc403:	sub	eax, 0x30
0xc406:	cmp	al, 9
0xc408:	jbe	0xc5c3


0xc488:	movzx	edi, al
0xc48b:	lea	ecx, [rdi - 0x41]
0xc48e:	cmp	ecx, 0x39
0xc491:	ja	0xc4a2


0xc390:	xor	edi, edi
0xc392:	cmp	edi, r8d
0xc395:	jne	0xc528


0xc37f:	movzx	eax, byte ptr [r9 + rdx]
0xc384:	lea	ecx, [rax - 0x30]
0xc387:	cmp	cl, 9
0xc38a:	ja	0xc488


0xc460:	lea	rax, [r11 + rdx]
0xc464:	cmp	r14, rax
0xc467:	je	0xc520


0xc3dd:	test	r8d, r8d
0xc3e0:	jne	0xc3e9


0xc540:	mov	r8d, 1
0xc546:	jmp	0xc420


0xc5c3:	mov	r8d, 0xffffffff
0xc5c9:	jmp	0xc420


0xc40e:	test	r8d, r8d
0xc411:	je	0xc2e2


0xc493:	mov	rbp, r10
0xc496:	shl	rbp, cl
0xc499:	test	rbp, r15
0xc49c:	jne	0xc392


0xc4a2:	add	edi, 0x100
0xc4a8:	cmp	al, 0x7e
0xc4aa:	mov	eax, 0xffffffff
0xc4af:	cmove	edi, eax
0xc4b2:	jmp	0xc392


0xc528:	sub	r8d, edi
0xc52b:	jne	0xc420


0xc520:	xor	edi, edi
0xc522:	mov	r8d, 0xffffffff
0xc528:	sub	r8d, edi
0xc52b:	jne	0xc420


0xc46d:	movzx	eax, byte ptr [r9 + rdx]
0xc472:	lea	ecx, [rax - 0x30]
0xc475:	cmp	cl, 9
0xc478:	jbe	0xc520


0xc3e2:	movsx	r8d, cl
0xc3e6:	sub	r8d, eax
0xc3e9:	add	rdx, 1
0xc3ed:	movzx	ecx, byte ptr [rbx + rdx]
0xc3f1:	movsx	eax, byte ptr [r11 + rdx]
0xc3f6:	lea	edi, [rcx - 0x30]
0xc3f9:	lea	rsi, [rdx + r9]
0xc3fd:	cmp	dil, 9
0xc401:	jbe	0xc3d0


0xc3e9:	add	rdx, 1
0xc3ed:	movzx	ecx, byte ptr [rbx + rdx]
0xc3f1:	movsx	eax, byte ptr [r11 + rdx]
0xc3f6:	lea	edi, [rcx - 0x30]
0xc3f9:	lea	rsi, [rdx + r9]
0xc3fd:	cmp	dil, 9
0xc401:	jbe	0xc3d0


0xc420:	mov	r12d, r8d
0xc423:	nop	dword ptr [rax + rax]
0xc428:	mov	rbx, qword ptr [rsp + 0x28]
0xc42d:	xor	rbx, qword ptr fs:[0x28]
0xc436:	mov	eax, r12d
0xc439:	jne	0xc5ce


0xc2e2:	cmp	r13, rdx
0xc2e5:	ja	0xc2f0


0xc392:	cmp	edi, r8d
0xc395:	jne	0xc528


0xc531:	jmp	0xc428


0xc47e:	mov	r8d, 0xffffffff
0xc484:	nop	dword ptr [rax]
0xc488:	movzx	edi, al
0xc48b:	lea	ecx, [rdi - 0x41]
0xc48e:	cmp	ecx, 0x39
0xc491:	ja	0xc4a2


0x785f:	mov	r9, qword ptr [rsp + 0x10]
0x7864:	mov	r8d, eax
0x7867:	jmp	0x7888


0xc5eb:	mov	rdx, rax
0xc5ee:	mov	eax, 1
0xc5f3:	test	rdx, rdx
0xc5f6:	je	0xc615


0xc615:	add	rsp, 8
0xc619:	ret	


0xc5f8:	lea	rdi, [rip + 0x939e]
0xc5ff:	mov	ecx, 2
0xc604:	mov	rsi, rdx
0xc607:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc607:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc609:	seta	cl
0xc60c:	sbb	cl, 0
0xc60f:	xor	eax, eax
0xc611:	test	cl, cl
0xc613:	jne	0xc620


0xc620:	lea	rdi, [rip + 0x949c]
0xc627:	mov	ecx, 6
0xc62c:	mov	rsi, rdx
0xc62f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc62f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc631:	seta	al
0xc634:	sbb	al, 0
0xc636:	test	al, al
0xc638:	setne	al
0xc63b:	add	rsp, 8
0xc63f:	ret	


0x837e:	mov	r9, qword ptr [rsp + 0x10]
0x8383:	mov	r8d, dword ptr [rsp + 0x20]
0x8388:	jmp	0x7888


0xd35d:	jmp	0xd362


0xd3d9:	mov	rax, qword ptr [rsp]
0xd3dd:	mov	qword ptr [rbp], rax
0xd3e1:	mov	rax, qword ptr [rsp + 8]
0xd3e6:	mov	qword ptr [rbp + 8], rax
0xd3ea:	mov	rax, qword ptr [rsp + 0x10]
0xd3ef:	mov	qword ptr [rbp + 0x10], rax
0xd3f3:	mov	rax, qword ptr [rsp + 0x18]
0xd3f8:	mov	qword ptr [rbp + 0x18], rax
0xd3fc:	mov	rax, qword ptr [rsp + 0x48]
0xd401:	mov	qword ptr [rbp + 0x48], rax
0xd405:	jmp	0xd362


0x7a86:	mov	r8d, dword ptr [rsp + 8]
0x7a8b:	test	r8d, r8d
0x7a8e:	je	0x78ae


0x8113:	mov	rdi, rbx
0x8116:	call	0x31c8


0xd1b9:	test	rbx, rbx
0xd1bc:	mov	rdi, rbx
0xd1bf:	jne	0xd1b0


0xd1b0:	mov	rbx, qword ptr [rdi + 8]
0xd1b4:	call	0x31c0


0xd1ca:	pop	rbx
0xd1cb:	mov	rdi, r12
0xd1ce:	pop	rbp
0xd1cf:	pop	r12
0xd1d1:	jmp	0x31c0


0xd189:	test	rbx, rbx
0xd18c:	mov	rdi, rbx
0xd18f:	jne	0xd180


0xd180:	mov	rbx, qword ptr [rdi + 8]
0xd184:	call	0x31c0


0xff0d:	mov	qword ptr [rip + 0x20a26c], rbx
0xff14:	pop	rbx
0xff15:	mov	dword ptr [rip + 0x20a259], 1
0xff1f:	pop	rbp
0xff20:	pop	r12
0xff22:	ret	


0xfee7:	mov	qword ptr [rip + 0x20a29e], 0x100
0xfef2:	mov	qword ptr [rip + 0x20a29f], rbx
0xfef9:	lea	rbx, [rip + 0x20a290]
0xff00:	cmp	r12, rbx
0xff03:	je	0xff14


0x11e6d:	xor	eax, eax
0x11e6f:	pop	rbx
0x11e70:	ret	


0xfecc:	cmp	rbx, rbp
0xfecf:	jne	0xfec0


0xfec0:	mov	rdi, qword ptr [rbx]
0xfec3:	add	rbx, 0x10
0xfec7:	call	0x31c0


0xd9cc:	mov	rdi, rbx
0xd9cf:	pop	rbx
0xd9d0:	jmp	0x31c0


0xdf3d:	test	eax, eax
0xdf3f:	je	0xdf60


0xdf60:	mov	rsi, rbx
0xdf63:	mov	edi, 0x80
0xdf68:	call	0x2c50


0xdf41:	xor	eax, eax
0xdf43:	mov	rcx, qword ptr [rsp + 0x88]
0xdf4b:	xor	rcx, qword ptr fs:[0x28]
0xdf54:	jne	0xdf76


0x2c50:	jmp	qword ptr [rip + 0x2170aa]


0xdf56:	add	rsp, 0x90
0xdf5d:	pop	rbx
0xdf5e:	ret	


0xdf76:	call	0x2ca0




0xe1b5:	test	rax, rax
0xe1b8:	mov	rbp, -1
0xe1bf:	jne	0xe173


0xe1c1:	mov	edi, 0x54
0xe1c6:	call	0x3050


0xe173:	cmp	rax, rbp
0xe176:	cmova	rax, rbp
0xe17a:	add	rsp, 8
0xe17e:	pop	rbx
0xe17f:	pop	rbp
0xe180:	ret	


0xe1cb:	mov	rdx, rax
0xe1ce:	mov	eax, 1
0xe1d3:	test	rdx, rdx
0xe1d6:	jle	0xe0d4


0xe0d4:	add	rsp, 8
0xe0d8:	pop	rbx
0xe0d9:	pop	rbp
0xe0da:	ret	


0xe1dc:	cmp	rdx, rbp
0xe1df:	mov	rax, rbp
0xe1e2:	cmovbe	rax, rdx
0xe1e6:	jmp	0xe0d4


0xe0be:	cmp	rax, 1
0xe0c2:	je	0xe188


0xe188:	call	0xdf10


0xe0c8:	test	rax, rax
0xe0cb:	mov	edx, 1
0xe0d0:	cmovle	rax, rdx
0xe0d4:	add	rsp, 8
0xe0d8:	pop	rbx
0xe0d9:	pop	rbp
0xe0da:	ret	


0xe18d:	mov	rdx, rax
0xe190:	mov	eax, 1
0xe195:	test	rdx, rdx
0xe198:	je	0xe0d4


0xe19e:	mov	rax, rdx
0xe1a1:	jmp	0xe0c8


0xe214:	pxor	xmm0, xmm0
0xe218:	mov	edi, 0x1e
0xe21d:	cvtsi2sd	xmm0, rax
0xe222:	movsd	qword ptr [rsp + 8], xmm0
0xe228:	call	0x3050


0xe22d:	pxor	xmm2, xmm2
0xe231:	movsd	xmm0, qword ptr [rsp + 8]
0xe237:	ucomisd	xmm0, xmm2
0xe23b:	jb	0xe270


0xe270:	lea	rdi, [rsp + 0x10]
0xe275:	call	0x30a0


0xe23d:	pxor	xmm1, xmm1
0xe241:	cvtsi2sd	xmm1, rax
0xe246:	ucomisd	xmm1, xmm2
0xe24a:	jb	0xe270


0x30a0:	jmp	qword ptr [rip + 0x216e82]


0xe24c:	mulsd	xmm0, xmm1
0xe250:	mov	rax, qword ptr [rsp + 0x88]
0xe258:	xor	rax, qword ptr fs:[0x28]
0xe261:	jne	0xe2cb




0xe263:	add	rsp, 0x98
0xe26a:	ret	


0xe2cb:	call	0x2ca0


0xe2f4:	pxor	xmm0, xmm0
0xe2f8:	mov	edi, 0x1e
0xe2fd:	cvtsi2sd	xmm0, rax
0xe302:	movsd	qword ptr [rsp + 8], xmm0
0xe308:	call	0x3050


0xe30d:	pxor	xmm2, xmm2
0xe311:	movsd	xmm0, qword ptr [rsp + 8]
0xe317:	ucomisd	xmm0, xmm2
0xe31b:	jb	0xe350


0xe350:	lea	rdi, [rsp + 0x10]
0xe355:	call	0x30a0


0xe31d:	pxor	xmm1, xmm1
0xe321:	cvtsi2sd	xmm1, rax
0xe326:	ucomisd	xmm1, xmm2
0xe32a:	jb	0xe350


0xe32c:	mulsd	xmm0, xmm1
0xe330:	mov	rax, qword ptr [rsp + 0x88]
0xe338:	xor	rax, qword ptr fs:[0x28]
0xe341:	jne	0xe3eb


0xe347:	add	rsp, 0x98
0xe34e:	ret	


0xe3eb:	call	0x2ca0


0xe0ec:	test	rax, rax
0xe0ef:	je	0xe148


0xe148:	lea	rdi, [rip + 0x7a35]
0xe14f:	call	0x2ac0


0xe0f1:	mov	rdi, rax
0xe0f4:	mov	rbp, -1
0xe0fb:	call	0xdf80


0xe100:	lea	rdi, [rip + 0x7a7d]
0xe107:	mov	rbx, rax
0xe10a:	call	0x2ac0


0xe10f:	test	rax, rax
0xe112:	je	0xe12d


0xe12d:	test	rbx, rbx
0xe130:	je	0xe169


0xe114:	mov	rdi, rax
0xe117:	call	0xdf80


0xe169:	call	0xdf10


0xe132:	cmp	rbp, rbx
0xe135:	mov	rax, rbx
0xe138:	cmovbe	rax, rbp
0xe13c:	add	rsp, 8
0xe140:	pop	rbx
0xe141:	pop	rbp
0xe142:	ret	


0xe16e:	test	rax, rax
0xe171:	je	0xe1c1


0xe11c:	mov	rbp, rax
0xe11f:	test	rax, rax
0xe122:	mov	rax, -1
0xe129:	cmove	rbp, rax
0xe12d:	test	rbx, rbx
0xe130:	je	0xe169


0xe154:	test	rax, rax
0xe157:	je	0xe1b0


0xe159:	mov	rdi, rax
0xe15c:	call	0xdf80


0xe161:	test	rax, rax
0xe164:	mov	rbp, rax
0xe167:	je	0xe1b0


0x3335:	test	rax, rax
0x3338:	mov	qword ptr [rsp + 0x68], rax
0x333d:	setne	byte ptr [rsp + 8]
0x3342:	call	0xe5f0


0xe616:	test	rax, rax
0xe619:	je	0xe620


0xe620:	mov	rcx, qword ptr [rsp + 8]
0xe625:	xor	rcx, qword ptr fs:[0x28]
0xe62e:	mov	eax, ebx
0xe630:	jne	0xe679


0xe61b:	cmp	byte ptr [rax], 0
0xe61e:	jne	0xe640


0xe632:	add	rsp, 0x10
0xe636:	pop	rbx
0xe637:	ret	


0xe679:	call	0x2ca0


0xe640:	mov	edx, 0xa
0xe645:	mov	rsi, rsp
0xe648:	mov	rdi, rax
0xe64b:	call	0x2e70


0x2e70:	jmp	qword ptr [rip + 0x216f9a]




0x3347:	mov	rdi, qword ptr [rbp]
0x334b:	sub	eax, 0x30db0
0x3350:	cmp	eax, 0x2b8
0x3355:	seta	byte ptr [rsp + 0x10]
0x335a:	call	0xe680


0x335f:	lea	rsi, [rip + 0x121a5]
0x3366:	mov	edi, 6
0x336b:	call	0x2f90


0x3370:	lea	rsi, [rip + 0x1225e]
0x3377:	lea	rdi, [rip + 0x1221e]
0x337e:	mov	qword ptr [rsp + 0x50], rax
0x3383:	call	0x2c60


0x2c60:	jmp	qword ptr [rip + 0x2170a2]




0xdd4e:	cmp	rax, 1
0xdd52:	jbe	0xde88


0xde88:	xor	ebp, ebp
0xde8a:	cmp	rbx, r13
0xde8d:	jae	0xde4d


0xdd58:	xor	ebp, ebp
0xdd5a:	cmp	rbx, r13
0xdd5d:	jae	0xde4d


0xde8f:	call	0x31b0


0xde4d:	mov	rsi, qword ptr [rsp + 0x28]
0xde52:	xor	rsi, qword ptr fs:[0x28]
0xde5b:	mov	eax, ebp
0xde5d:	jne	0xdeda


0xdd63:	lea	r12, [rsp + 0x20]
0xdd68:	lea	r14, [rsp + 0x1c]
0xdd6d:	jmp	0xdd8b


0x31b0:	jmp	qword ptr [rip + 0x216dfa]


0xde5f:	add	rsp, 0x38
0xde63:	pop	rbx
0xde64:	pop	rbp
0xde65:	pop	r12
0xde67:	pop	r13
0xde69:	pop	r14
0xde6b:	pop	r15
0xde6d:	ret	


0xdeda:	call	0x2ca0


0xdd8b:	movzx	eax, byte ptr [rbx]
0xdd8e:	cmp	al, 0x3f
0xdd90:	jle	0xdd70




0xdd70:	cmp	al, 0x25
0xdd72:	jge	0xdd7b


0xdd92:	cmp	al, 0x41
0xdd94:	jl	0xdda1


0xdd74:	sub	eax, 0x20
0xdd77:	cmp	al, 3
0xdd79:	ja	0xdda1


0xdd7b:	add	rbx, 1
0xdd7f:	add	ebp, 1
0xdd82:	cmp	rbx, r13
0xdd85:	jae	0xde4d


0xdda1:	mov	qword ptr [r12], 0
0xdda9:	jmp	0xddd0


0xdd96:	cmp	al, 0x5f
0xdd98:	jle	0xdd7b


0xddd0:	mov	rdx, r13
0xddd3:	mov	rcx, r12
0xddd6:	mov	rsi, rbx
0xddd9:	sub	rdx, rbx
0xdddc:	mov	rdi, r14
0xdddf:	call	0x12ee0


0xdd9a:	sub	eax, 0x61
0xdd9d:	cmp	al, 0x1d
0xdd9f:	jbe	0xdd7b


0x6536:	cmp	rbp, rbx
0x6539:	cdqe	
0x653b:	jbe	0x6555


0x6555:	add	rsp, 8
0x6559:	pop	rbx
0x655a:	pop	rbp
0x655b:	ret	


0x6540:	add	rbx, 1
0x6544:	xor	edx, edx
0x6546:	cmp	byte ptr [rbx - 1], 9
0x654a:	sete	dl
0x654d:	add	rax, rdx
0x6550:	cmp	rbp, rbx
0x6553:	jne	0x6540


0x750e:	mov	r9, qword ptr [rsp]
0x7512:	mov	rdi, rbx
0x7515:	mov	r15, rax
0x7518:	mov	rsi, r9
0x751b:	call	0x6520


0x7520:	mov	rbx, rax
0x7523:	sub	r15, 1
0x7527:	cmp	r15, -1
0x752b:	je	0x7557


0x7557:	test	rbx, rbx
0x755a:	je	0x7610


0x752d:	mov	rdi, qword ptr [rip + 0x212c94]
0x7534:	mov	rax, qword ptr [rdi + 0x28]
0x7538:	cmp	rax, qword ptr [rdi + 0x30]
0x753c:	jae	0x75e0


0x7610:	mov	rsi, r13
0x7613:	xor	edi, edi
0x7615:	mov	edx, 5
0x761a:	call	0x2c70


0x7560:	mov	rdi, qword ptr [rip + 0x212c61]
0x7567:	mov	rax, qword ptr [rdi + 0x28]
0x756b:	cmp	rax, qword ptr [rdi + 0x30]
0x756f:	jae	0x75f0


0x7542:	lea	rsi, [rax + 1]
0x7546:	sub	r15, 1
0x754a:	cmp	r15, -1
0x754e:	mov	qword ptr [rdi + 0x28], rsi
0x7552:	mov	byte ptr [rax], 0x20
0x7555:	jne	0x752d


0x75e0:	mov	esi, 0x20
0x75e5:	call	0x2d10


0x7571:	lea	rdx, [rax + 1]
0x7575:	mov	qword ptr [rdi + 0x28], rdx
0x7579:	mov	byte ptr [rax], 0x5f
0x757c:	sub	rbx, 1
0x7580:	jne	0x7560


0x75f0:	mov	esi, 0x5f
0x75f5:	call	0x2d10


0x7582:	mov	rdi, qword ptr [rip + 0x212c3f]
0x7589:	mov	rax, qword ptr [rdi + 0x28]
0x758d:	cmp	rax, qword ptr [rdi + 0x30]
0x7591:	jae	0x76a8


0x7597:	lea	rdx, [rax + 1]
0x759b:	mov	qword ptr [rdi + 0x28], rdx
0x759f:	mov	byte ptr [rax], 0xa
0x75a2:	test	r14, r14
0x75a5:	je	0x72db


0x76a8:	mov	esi, 0xa
0x76ad:	call	0x2d10


0x72db:	mov	rax, qword ptr [rsp + 0x28]
0x72e0:	xor	rax, qword ptr fs:[0x28]
0x72e9:	jne	0x76f9


0x75ab:	mov	r14, qword ptr [r14 + 0x40]
0x75af:	test	r14, r14
0x75b2:	je	0x7638


0x7638:	cmp	byte ptr [rip + 0x212dfa], 0
0x763f:	jne	0x72db


0x75b8:	mov	r15, qword ptr [r12]
0x75bc:	mov	r13, qword ptr [r12 + 8]
0x75c1:	test	r14, r14
0x75c4:	lea	r9, [r15 + r13 - 1]
0x75c9:	jne	0x73d8


0x7645:	cmp	byte ptr [rip + 0x212dee], 0
0x764c:	jne	0x72db


0x73d8:	mov	r11, qword ptr [r14]
0x73db:	mov	r10, qword ptr [r14 + 0x10]
0x73df:	cmp	r11, -1
0x73e3:	je	0x7670


0x7652:	mov	rbx, qword ptr [r12]
0x7656:	mov	rax, qword ptr [r12 + 8]
0x765b:	mov	r15, rbx
0x765e:	lea	r9, [rbx + rax - 1]
0x7663:	jmp	0x74ff


0x74ff:	mov	rsi, rbx
0x7502:	mov	rdi, r15
0x7505:	mov	qword ptr [rsp], r9
0x7509:	call	0x6520


0x76b2:	jmp	0x75a2


0x75a2:	test	r14, r14
0x75a5:	je	0x72db


0x75fa:	jmp	0x757c


0x757c:	sub	rbx, 1
0x7580:	jne	0x7560


0x75ea:	jmp	0x7523


0x7523:	sub	r15, 1
0x7527:	cmp	r15, -1
0x752b:	je	0x7557


0xe881:	cmp	r15d, 0xa
0xe885:	mov	qword ptr [rsp + 0x58], rax
0xe88a:	ja	0xfa3f


0xe890:	lea	rcx, [rip + 0x73c9]
0xe897:	mov	edx, r15d
0xe89a:	movsxd	rax, dword ptr [rcx + rdx*4]
0xe89e:	add	rax, rcx
0xe8a1:	jmp	rax


0xfa3f:	call	0x2b00


0x1091d:	mov	rdi, rbx
0x10920:	call	0x31c0


0x10925:	test	rbp, rbp
0x10928:	je	0x10940


0x10940:	add	rsp, 8
0x10944:	xor	eax, eax
0x10946:	pop	rbx
0x10947:	pop	rbp
0x10948:	ret	


0x1092a:	add	rsp, 8
0x1092e:	mov	rdi, rbp
0x10931:	pop	rbx
0x10932:	pop	rbp
0x10933:	jmp	0x12b40


0x111c9:	add	rsp, 8
0x111cd:	mov	edi, eax
0x111cf:	jmp	0x11780


0x111e8:	mov	esi, ebx
0x111ea:	mov	edi, eax
0x111ec:	pop	rbx
0x111ed:	jmp	0x134a0


0x811b:	test	rax, rax
0x811e:	mov	qword ptr [rsp + 0x68], rax
0x8123:	je	0x8540


0x8540:	mov	qword ptr [rsp + 0x48], 0xfa0
0x8549:	mov	rax, qword ptr [rsp + 0xb8]
0x8551:	jmp	0x8129


0x8129:	cmp	qword ptr [rsp + 0x50], r12
0x812e:	mov	qword ptr [rsp + 0x10], rax
0x8133:	jbe	0x7ffe


0x64d8:	test	rax, rax
0x64db:	mov	qword ptr [rbp], rax
0x64df:	je	0x64c0


0x64c0:	shr	rbx, 1
0x64c3:	cmp	r12, rbx
0x64c6:	jae	0x6510


0x64e1:	mov	qword ptr [rbp + 0x28], r13
0x64e5:	mov	qword ptr [rbp + 0x18], rbx
0x64e9:	mov	qword ptr [rbp + 0x10], 0
0x64f1:	mov	qword ptr [rbp + 0x20], 0
0x64f9:	mov	qword ptr [rbp + 8], 0
0x6501:	mov	byte ptr [rbp + 0x30], 0
0x6505:	add	rsp, 8
0x6509:	pop	rbx
0x650a:	pop	rbp
0x650b:	pop	r12
0x650d:	pop	r13
0x650f:	ret	


0x6510:	call	0x12030


0xbf94:	mov	r12, rax
0xbf97:	mov	eax, 1
0xbf9c:	test	r12, r12
0xbf9f:	je	0xc02b


0xc02b:	mov	rcx, qword ptr [rsp + 0xa8]
0xc033:	xor	rcx, qword ptr fs:[0x28]
0xc03c:	jne	0xc08d


0xbfa5:	movabs	rax, 0xefcdab8967452301
0xbfaf:	mov	qword ptr [rsp + 0x10], 0
0xbfb8:	mov	dword ptr [rsp + 0x18], 0
0xbfc0:	mov	qword ptr [rsp], rax
0xbfc4:	movabs	rax, 0x1032547698badcfe
0xbfce:	mov	r13d, 0x8000
0xbfd4:	mov	qword ptr [rsp + 8], rax
0xbfd9:	mov	r15, rsp
0xbfdc:	xor	ebx, ebx
0xbfde:	jmp	0xc008


0xc03e:	add	rsp, 0xb8
0xc045:	pop	rbx
0xc046:	pop	rbp
0xc047:	pop	r12
0xc049:	pop	r13
0xc04b:	pop	r14
0xc04d:	pop	r15
0xc04f:	ret	


0xc08d:	call	0x2ca0


0xc008:	test	byte ptr [rbp], 0x10
0xc00c:	je	0xbfe0


0xbfe0:	lea	rdi, [r12 + rbx]
0xbfe4:	mov	rdx, r13
0xbfe7:	mov	rcx, rbp
0xbfea:	sub	rdx, rbx
0xbfed:	mov	esi, 1
0xbff2:	call	0x2c10


0xc00e:	test	rbx, rbx
0xc011:	mov	rbp, rsp
0xc014:	jne	0xc050


0xc016:	mov	rsi, r14
0xc019:	mov	rdi, rbp
0xc01c:	call	0xbad0


0xc050:	mov	rdx, rbp
0xc053:	mov	rsi, rbx
0xc056:	mov	rdi, r12
0xc059:	call	0xbbf0


0xc05e:	jmp	0xc016


0xc021:	mov	rdi, r12
0xc024:	call	0x31c0


0xc029:	xor	eax, eax
0xc02b:	mov	rcx, qword ptr [rsp + 0xa8]
0xc033:	xor	rcx, qword ptr fs:[0x28]
0xc03c:	jne	0xc08d


0xbff7:	add	rbx, rax
0xbffa:	cmp	rbx, 0x8000
0xc001:	je	0xc060


0xc060:	mov	rdx, r15
0xc063:	mov	esi, 0x8000
0xc068:	mov	rdi, r12
0xc06b:	call	0xb360


0xc003:	test	rax, rax
0xc006:	je	0xc078


0xc078:	test	byte ptr [rbp], 0x20
0xc07c:	je	0xc00e


0xc07e:	mov	rdi, r12
0xc081:	call	0x31c0


0xc086:	mov	eax, 1
0xc08b:	jmp	0xc02b


0xc070:	jmp	0xbfdc


0xbfdc:	xor	ebx, ebx
0xbfde:	jmp	0xc008


0xcef3:	test	rax, rax
0xcef6:	mov	rbx, rax
0xcef9:	je	0xcfaa


0xcfaa:	add	rsp, 8
0xcfae:	mov	rax, rbx
0xcfb1:	pop	rbx
0xcfb2:	pop	rbp
0xcfb3:	pop	r12
0xcfb5:	pop	r13
0xcfb7:	pop	r14
0xcfb9:	pop	r15
0xcfbb:	ret	


0xceff:	test	r15, r15
0xcf02:	lea	rdi, [rax + 0x28]
0xcf06:	je	0xcfc0


0xcfc0:	lea	rax, [rip + 0x8b79]
0xcfc7:	mov	qword ptr [rbx + 0x28], rax
0xcfcb:	call	0xc850


0xcf0c:	mov	qword ptr [rax + 0x28], r15
0xcf10:	call	0xc850


0xcf15:	test	al, al
0xcf17:	je	0xcfa0


0xcfa0:	mov	rdi, rbx
0xcfa3:	xor	ebx, ebx
0xcfa5:	call	0x31c0


0xcf1d:	cmp	byte ptr [r15 + 0x10], 0
0xcf22:	je	0xd020


0xd020:	test	rbp, rbp
0xd023:	movss	xmm1, dword ptr [r15 + 8]
0xd029:	jns	0xcfe1


0xcf28:	mov	rdi, rbp
0xcf2b:	call	0xc640


0xd02b:	mov	rax, rbp
0xd02e:	pxor	xmm0, xmm0
0xd032:	shr	rax, 1
0xd035:	and	ebp, 1
0xd038:	or	rax, rbp
0xd03b:	cvtsi2ss	xmm0, rax
0xd040:	addss	xmm0, xmm0
0xd044:	jmp	0xcfea


0xcfe1:	pxor	xmm0, xmm0
0xcfe5:	cvtsi2ss	xmm0, rbp
0xcfea:	divss	xmm0, xmm1
0xcfee:	ucomiss	xmm0, dword ptr [rip + 0x8b77]
0xcff5:	jae	0xcfa0


0xcfea:	divss	xmm0, xmm1
0xcfee:	ucomiss	xmm0, dword ptr [rip + 0x8b77]
0xcff5:	jae	0xcfa0


0xcff7:	ucomiss	xmm0, dword ptr [rip + 0x8b72]
0xcffe:	jb	0xd050


0xd050:	cvttss2si	rbp, xmm0
0xd055:	jmp	0xcf28


0xd000:	subss	xmm0, dword ptr [rip + 0x8b68]
0xd008:	movabs	rax, 0x8000000000000000
0xd012:	cvttss2si	rbp, xmm0
0xd017:	xor	rbp, rax
0xd01a:	jmp	0xcf28


0xcf30:	mov	edx, 8
0xcf35:	mov	rbp, rax
0xcf38:	xor	ecx, ecx
0xcf3a:	mov	rax, rdx
0xcf3d:	mul	rbp
0xcf40:	jo	0xd05a


0xd05a:	mov	ecx, 1
0xd05f:	jmp	0xcf46


0xcf46:	test	rax, rax
0xcf49:	js	0xcfa0


0xcf4b:	test	rcx, rcx
0xcf4e:	jne	0xcfa0


0xcf50:	test	rbp, rbp
0xcf53:	mov	qword ptr [rbx + 0x10], rbp
0xcf57:	je	0xcfa0


0xcf59:	mov	esi, 0x10
0xcf5e:	mov	rdi, rbp
0xcf61:	call	0x2e20


0xcf66:	test	rax, rax
0xcf69:	mov	qword ptr [rbx], rax
0xcf6c:	je	0xcfa0


0xcf6e:	shl	rbp, 4
0xcf72:	mov	qword ptr [rbx + 0x18], 0
0xcf7a:	mov	qword ptr [rbx + 0x20], 0
0xcf82:	add	rbp, rax
0xcf85:	mov	qword ptr [rbx + 0x30], r12
0xcf89:	mov	qword ptr [rbx + 0x38], r13
0xcf8d:	mov	qword ptr [rbx + 8], rbp
0xcf91:	mov	qword ptr [rbx + 0x40], r14
0xcf95:	mov	qword ptr [rbx + 0x48], 0
0xcf9d:	jmp	0xcfaa


0xcfd0:	test	al, al
0xcfd2:	movss	xmm1, dword ptr [rip + 0x8b8e]
0xcfda:	je	0xcfa0


0xcfdc:	test	rbp, rbp
0xcfdf:	js	0xd02b


0x67e5:	test	rax, rax
0x67e8:	mov	rdi, rax
0x67eb:	mov	qword ptr [rip + 0x213b8e], rax
0x67f2:	jne	0x67b0


0x67f4:	call	0x12030


0x11de9:	test	rax, rax
0x11dec:	jne	0x11df3


0x11dee:	test	rbx, rbx
0x11df1:	jne	0x11df5


0x11df3:	pop	rbx
0x11df4:	ret	


0x11df5:	call	0x12030


0x7d8f:	test	rbp, rbp
0x7d92:	mov	rsi, rax
0x7d95:	mov	qword ptr [rsp + 0x58], rax
0x7d9a:	mov	r9, qword ptr [rsp + 0x10]
0x7d9f:	mov	rdx, qword ptr [rsp + 0x20]
0x7da4:	lea	rdi, [rsi + rbp + 1]
0x7da9:	jne	0x7971


0x8ac9:	mov	qword ptr [rbx], rax
0x8acc:	xor	ebx, ebx
0x8ace:	test	r12, r12
0x8ad1:	mov	r13, rax
0x8ad4:	je	0x8bc8


0x8bc8:	mov	rcx, qword ptr [rsp + 0x18]
0x8bcd:	xor	rcx, qword ptr fs:[0x28]
0x8bd6:	mov	rax, rbx
0x8bd9:	jne	0x8caf


0x8ada:	lea	rax, [rsp + 0x10]
0x8adf:	mov	qword ptr [rsp + 8], rax
0x8ae4:	jmp	0x8b1f


0x8bdf:	add	rsp, 0x28
0x8be3:	pop	rbx
0x8be4:	pop	rbp
0x8be5:	pop	r12
0x8be7:	pop	r13
0x8be9:	pop	r14
0x8beb:	pop	r15
0x8bed:	ret	


0x8caf:	call	0x2ca0


0x8b1f:	mov	r15, qword ptr [rbp + 8]
0x8b23:	test	r15, r15
0x8b26:	je	0x8af0


0x8af0:	mov	rdi, qword ptr [rbp]
0x8af4:	lea	rsi, [rip + 0xcd98]
0x8afb:	call	0x70b0


0x8b28:	movzx	eax, byte ptr [r15 + 0xc]
0x8b2d:	test	al, al
0x8b2f:	je	0x8af0


0x8b31:	cmp	al, 1
0x8b33:	je	0x8c20


0x8c20:	mov	edi, dword ptr [r15 + 8]
0x8c24:	call	0x6740


0x8b39:	lea	rdi, [r15 + 0xd]
0x8b3d:	xor	esi, esi
0x8b3f:	xor	eax, eax
0x8b41:	call	0x3010


0x8b46:	test	eax, eax
0x8b48:	mov	r14d, eax
0x8b4b:	js	0x8c10


0x8c10:	mov	qword ptr [r13 + rbx*8], 0
0x8c19:	jmp	0x8bc8


0x8b51:	mov	rdi, qword ptr [rsp + 8]
0x8b56:	mov	esi, 9
0x8b5b:	call	0x6dd0


0x8b60:	cmp	eax, -1
0x8b63:	je	0x8bf0


0x8bf0:	call	0x2b10


0x8b69:	test	eax, eax
0x8b6b:	je	0x8c52


0x8c52:	mov	edi, dword ptr [rsp + 0x10]
0x8c56:	call	0x2db0


0x8b71:	mov	dword ptr [r15 + 8], eax
0x8b75:	mov	rdi, r15
0x8b78:	call	0x67a0


0x8b00:	test	rax, rax
0x8b03:	mov	qword ptr [r13 + rbx*8], rax
0x8b08:	je	0x8bc8


0x8b0e:	add	rbx, 1
0x8b12:	add	rbp, 0x10
0x8b16:	cmp	r12, rbx
0x8b19:	je	0x8bc8


0xa6bd:	mov	rbx, rax
0xa6c0:	cmp	rbp, rbx
0xa6c3:	je	0xa7b0


0xa7b0:	mov	rdi, qword ptr [rsp + 0x30]
0xa7b5:	lea	rsi, [rip + 0xad2e]
0xa7bc:	call	0x70b0


0xa6c9:	cmp	rbx, 2
0xa6cd:	jbe	0xa888


0xa888:	shl	rbx, 4
0xa88c:	lea	rsi, [rip + 0xac0c]
0xa893:	xor	edi, edi
0xa895:	mov	rbx, qword ptr [r14 + rbx]
0xa899:	mov	edx, 5
0xa89e:	call	0x2c70


0xa6d3:	mov	rax, rbx
0xa6d6:	lea	r13, [rbx*8 - 8]
0xa6de:	shl	rax, 4
0xa6e2:	lea	rbp, [r14 + rax - 0x10]
0xa6e7:	nop	word ptr [rax + rax]
0xa6f0:	mov	rax, qword ptr [rsp + 0x40]
0xa6f5:	mov	rsi, qword ptr [rbp]
0xa6f9:	sub	rbx, 1
0xa6fd:	mov	r12, rbp
0xa700:	mov	rdi, qword ptr [rax + r13]
0xa704:	call	0x71f0


0xa7c1:	test	rax, rax
0xa7c4:	jne	0xa800


0xa7c6:	call	0x2b10


0xa800:	mov	rbp, qword ptr [rsp + 0x10]
0xa805:	mov	r9, qword ptr [rsp + 0x40]
0xa80a:	mov	rcx, rax
0xa80d:	mov	r8, qword ptr [rsp + 0x30]
0xa812:	mov	rdx, qword ptr [rsp + 8]
0xa817:	mov	rdi, r14
0xa81a:	mov	rsi, rbp
0xa81d:	call	0x9ae0


0xa328:	cmp	r12, rax
0xa32b:	mov	rbx, rax
0xa32e:	jbe	0xa336


0xa336:	mov	r9, qword ptr [rsp]
0xa33a:	mov	rcx, r14
0xa33d:	mov	r8, r15
0xa340:	mov	rdx, rbx
0xa343:	mov	rsi, r13
0xa346:	mov	rdi, rbp
0xa349:	call	0x9ae0


0xa330:	cmp	rax, 1
0xa334:	jbe	0xa370


0xa370:	shl	rbx, 4
0xa374:	lea	rsi, [rip + 0xb124]
0xa37b:	xor	edi, edi
0xa37d:	mov	rbx, qword ptr [rbp + rbx]
0xa382:	mov	edx, 5
0xa387:	call	0x2c70


0x9b59:	mov	edx, 8
0x9b5e:	mov	qword ptr [rsp + 0x28], rax
0x9b63:	xor	ecx, ecx
0x9b65:	mov	rax, rdx
0x9b68:	mul	r15
0x9b6b:	jo	0xa2e0


0xa2e0:	mov	ecx, 1
0xa2e5:	jmp	0x9b71


0x9b71:	test	rax, rax
0x9b74:	js	0xa2cc


0x9b7a:	test	rcx, rcx
0x9b7d:	jne	0xa2cc


0x9b83:	lea	rbx, [r15*8]
0x9b8b:	xor	r14d, r14d
0x9b8e:	mov	rdi, rbx
0x9b91:	call	0x11de0


0x9b96:	mov	rdi, rbx
0x9b99:	mov	rbp, rax
0x9b9c:	call	0x11de0


0x9ba1:	mov	rdi, rbx
0x9ba4:	mov	qword ptr [rsp + 0x10], rax
0x9ba9:	call	0x11de0


0x9bae:	mov	rbx, rax
0x9bb1:	mov	rax, qword ptr [rip + 0x210878]
0x9bb8:	mov	qword ptr [rsp + 0x80], 0
0x9bc4:	mov	qword ptr [rsp + 0x78], rax
0x9bc9:	mov	rax, qword ptr [rsp + 0x30]
0x9bce:	sub	rax, 0x10
0x9bd2:	test	r15, r15
0x9bd5:	mov	qword ptr [rsp + 8], rax
0x9bda:	je	0xa05b


0xa05b:	mov	rsi, qword ptr [rsp + 0x58]
0xa060:	mov	rdi, qword ptr [rsp + 0x50]
0xa065:	call	0x71f0


0x9be0:	mov	qword ptr [rsp + 0x20], rbx
0x9be5:	mov	qword ptr [rsp], rbp
0x9be9:	mov	rbx, r15
0x9bec:	nop	dword ptr [rax]
0x9bf0:	lea	r13, [r14*8]
0x9bf8:	mov	rcx, qword ptr [rsp + 0x28]
0x9bfd:	xor	edx, edx
0x9bff:	mov	esi, 0x20
0x9c04:	mov	rax, r13
0x9c07:	sub	rax, r14
0x9c0a:	lea	r15, [rcx + rax*8]
0x9c0e:	mov	rax, qword ptr [rip + 0x210843]
0x9c15:	mov	rdi, r15
0x9c18:	div	rbx
0x9c1b:	mov	rdx, qword ptr [rip + 0x21040e]
0x9c22:	cmp	rax, rdx
0x9c25:	cmovae	rdx, rax
0x9c29:	call	0x64a0


0x9c2e:	mov	rdi, qword ptr [rsp + 0x30]
0x9c33:	mov	rax, r14
0x9c36:	shl	rax, 4
0x9c3a:	lea	r12, [rdi + rax]
0x9c3e:	mov	rax, qword ptr [rsp + 0x18]
0x9c43:	mov	rdi, r15
0x9c46:	mov	rdx, qword ptr [r12]
0x9c4a:	lea	rbp, [rax + r13]
0x9c4e:	mov	rsi, qword ptr [rbp]
0x9c52:	call	0x9710


0x9c57:	test	al, al
0x9c59:	je	0x9fb8


0x9fb8:	mov	rsi, qword ptr [r12]
0x9fbc:	mov	rdi, qword ptr [rbp]
0x9fc0:	call	0x71f0


0x9c5f:	mov	rax, qword ptr [r15 + 0x18]
0x9c63:	add	rax, qword ptr [r15]
0x9c66:	mov	rcx, qword ptr [rsp]
0x9c6a:	lea	rdx, [rax - 0x20]
0x9c6e:	mov	qword ptr [rcx + r14*8], rdx
0x9c72:	mov	rdx, qword ptr [r15 + 0x10]
0x9c76:	mov	rcx, qword ptr [rsp + 0x10]
0x9c7b:	shl	rdx, 5
0x9c7f:	sub	rax, rdx
0x9c82:	mov	qword ptr [rcx + r14*8], rax
0x9c86:	add	r14, 1
0x9c8a:	cmp	r14, rbx
0x9c8d:	jb	0x9bf0


0x9bf0:	lea	r13, [r14*8]
0x9bf8:	mov	rcx, qword ptr [rsp + 0x28]
0x9bfd:	xor	edx, edx
0x9bff:	mov	esi, 0x20
0x9c04:	mov	rax, r13
0x9c07:	sub	rax, r14
0x9c0a:	lea	r15, [rcx + rax*8]
0x9c0e:	mov	rax, qword ptr [rip + 0x210843]
0x9c15:	mov	rdi, r15
0x9c18:	div	rbx
0x9c1b:	mov	rdx, qword ptr [rip + 0x21040e]
0x9c22:	cmp	rax, rdx
0x9c25:	cmovae	rdx, rax
0x9c29:	call	0x64a0


0x9c93:	mov	r15, rbx
0x9c96:	mov	rbp, qword ptr [rsp]
0x9c9a:	mov	rbx, qword ptr [rsp + 0x20]
0x9c9f:	test	r15, r15
0x9ca2:	je	0xa05b


0x9ca8:	xor	eax, eax
0x9caa:	nop	word ptr [rax + rax]
0x9cb0:	mov	qword ptr [rbx + rax*8], rax
0x9cb4:	add	rax, 1
0x9cb8:	cmp	rax, r15
0x9cbb:	jne	0x9cb0


0x9cbd:	cmp	rax, 1
0x9cc1:	mov	qword ptr [rsp + 0x20], rax
0x9cc6:	mov	r12d, 1
0x9ccc:	je	0x9d31


0x9cb0:	mov	qword ptr [rbx + rax*8], rax
0x9cb4:	add	rax, 1
0x9cb8:	cmp	rax, r15
0x9cbb:	jne	0x9cb0


0x9d31:	lea	rax, [rsp + 0x80]
0x9d39:	mov	qword ptr [rsp + 0x68], 0
0x9d42:	mov	qword ptr [rsp + 0x38], 0
0x9d4b:	mov	qword ptr [rsp + 0x70], rax
0x9d50:	lea	rax, [rbx - 8]
0x9d54:	mov	qword ptr [rsp + 0x40], rax
0x9d59:	nop	dword ptr [rax]
0x9d60:	mov	rax, qword ptr [rbx]
0x9d63:	cmp	byte ptr [rip + 0x2106cf], 0
0x9d6a:	lea	r15, [rax*8]
0x9d72:	mov	qword ptr [rsp], rax
0x9d76:	lea	r13, [rbp + r15]
0x9d7b:	mov	r14, qword ptr [r13]
0x9d7f:	je	0x9f18


0x9cce:	mov	rdx, rbp
0x9cd1:	mov	rbp, rbx
0x9cd4:	nop	dword ptr [rax]
0x9cd8:	lea	rax, [r12*8]
0x9ce0:	mov	qword ptr [rsp], rdx
0x9ce4:	lea	r13, [rbp + rax]
0x9ce9:	lea	r15, [rbp + rax - 8]
0x9cee:	mov	rbx, qword ptr [r13]
0x9cf2:	mov	r14, qword ptr [r15]
0x9cf5:	mov	rsi, qword ptr [rdx + rbx*8]
0x9cf9:	mov	rdi, qword ptr [rdx + r14*8]
0x9cfd:	call	0x86e0


0x9f18:	mov	rdx, qword ptr [rsp + 0x58]
0x9f1d:	mov	rsi, qword ptr [rsp + 0x50]
0x9f22:	mov	rdi, r14
0x9f25:	call	0x7280


0x9d85:	mov	rax, qword ptr [rsp + 0x38]
0x9d8a:	test	rax, rax
0x9d8d:	je	0x9f44


0x9f44:	mov	rdx, qword ptr [r14 + 8]
0x9f48:	cmp	rdx, qword ptr [rsp + 0x68]
0x9f4d:	mov	rdi, qword ptr [rsp + 0x80]
0x9f55:	ja	0xa230


0x9d93:	mov	rsi, r14
0x9d96:	mov	rdi, rax
0x9d99:	call	0x86e0


0x9f5b:	mov	rsi, qword ptr [r14]
0x9f5e:	mov	qword ptr [rsp + 0x88], rdx
0x9f66:	call	0x2e80


0xa230:	mov	rax, qword ptr [rsp + 0x68]
0xa235:	test	rax, rax
0xa238:	je	0xa248


0xa248:	mov	qword ptr [rsp + 8], rdx
0xa24d:	call	0x31c0


0xa23a:	mov	rsi, rax
0xa23d:	add	rsi, rsi
0xa240:	cmp	rdx, rsi
0xa243:	ja	0xa288


0xa245:	mov	rdx, rsi
0xa248:	mov	qword ptr [rsp + 8], rdx
0xa24d:	call	0x31c0


0xa288:	test	rsi, rsi
0xa28b:	jne	0xa280


0xa28d:	jmp	0xa248


0xa280:	add	rsi, rsi
0xa283:	cmp	rdx, rsi
0xa286:	jbe	0xa245


0xa252:	mov	rdx, qword ptr [rsp + 8]
0xa257:	mov	rdi, rdx
0xa25a:	call	0x11de0


0x9f6b:	cmp	qword ptr [rsp + 0x78], 0
0x9f71:	mov	rcx, qword ptr [rsp + 0x70]
0x9f76:	mov	qword ptr [rsp + 0x38], rcx
0x9f7b:	je	0x9da6


0x9da6:	mov	rax, qword ptr [rsp + 0x10]
0x9dab:	lea	r10, [rax + r15]
0x9daf:	cmp	qword ptr [r10], r14
0x9db2:	jae	0x9e80


0x9f81:	mov	rdx, qword ptr [r14 + 0x10]
0x9f85:	mov	rax, qword ptr [rsp + 0x80]
0x9f8d:	mov	rsi, qword ptr [r14]
0x9f90:	add	rdx, rax
0x9f93:	add	rax, qword ptr [r14 + 0x18]
0x9f97:	sub	rdx, rsi
0x9f9a:	mov	qword ptr [rsp + 0x90], rdx
0x9fa2:	sub	rax, rsi
0x9fa5:	mov	qword ptr [rsp + 0x98], rax
0x9fad:	jmp	0x9da6


0x9db8:	sub	r14, 0x20
0x9dbc:	mov	qword ptr [r13], r14
0x9dc0:	mov	r14, qword ptr [rsp + 0x20]
0x9dc5:	cmp	r14, 1
0x9dc9:	je	0x9f05


0x9e80:	mov	rax, qword ptr [rsp]
0x9e84:	mov	rcx, qword ptr [rsp + 0x18]
0x9e89:	mov	qword ptr [rsp + 0x48], r10
0x9e8e:	mov	rdi, rax
0x9e91:	mov	r14, rax
0x9e94:	lea	rax, [rax*8]
0x9e9c:	shl	r14, 4
0x9ea0:	add	r14, qword ptr [rsp + 0x30]
0x9ea5:	add	rcx, r15
0x9ea8:	sub	rax, rdi
0x9eab:	mov	rdi, qword ptr [rsp + 0x28]
0x9eb0:	mov	rsi, qword ptr [rcx]
0x9eb3:	mov	qword ptr [rsp + 8], rcx
0x9eb8:	lea	r15, [rdi + rax*8]
0x9ebc:	mov	rdx, qword ptr [r14]
0x9ebf:	mov	rdi, r15
0x9ec2:	call	0x9710


0x9f05:	mov	rax, qword ptr [rsp]
0x9f09:	mov	rsi, rbx
0x9f0c:	mov	qword ptr [rsi], rax
0x9f0f:	jmp	0x9d60


0x9dcf:	mov	rax, qword ptr [r13]
0x9dd3:	mov	r15d, 1
0x9dd9:	mov	r13d, 1
0x9ddf:	mov	qword ptr [rsp + 8], rax
0x9de4:	mov	rax, rbp
0x9de7:	mov	rbp, r15
0x9dea:	mov	r15, r14
0x9ded:	mov	r14, rax
0x9df0:	jmp	0x9e13


0x9d60:	mov	rax, qword ptr [rbx]
0x9d63:	cmp	byte ptr [rip + 0x2106cf], 0
0x9d6a:	lea	r15, [rax*8]
0x9d72:	mov	qword ptr [rsp], rax
0x9d76:	lea	r13, [rbp + r15]
0x9d7b:	mov	r14, qword ptr [r13]
0x9d7f:	je	0x9f18


0x9e13:	mov	r12, qword ptr [rbx + r13*8]
0x9e17:	mov	rdi, qword ptr [rsp + 8]
0x9e1c:	mov	rsi, qword ptr [r14 + r12*8]
0x9e20:	call	0x86e0


0x9ec7:	test	al, al
0x9ec9:	mov	rcx, qword ptr [rsp + 8]
0x9ece:	mov	r10, qword ptr [rsp + 0x48]
0x9ed3:	je	0xa0c0


0xa0c0:	cmp	qword ptr [rsp + 0x20], 1
0xa0c6:	je	0xa127


0x9ed9:	mov	rax, qword ptr [r15 + 0x18]
0x9edd:	add	rax, qword ptr [r15]
0x9ee0:	mov	r14, qword ptr [rsp + 0x20]
0x9ee5:	lea	rdx, [rax - 0x20]
0x9ee9:	mov	qword ptr [r13], rdx
0x9eed:	mov	rdx, qword ptr [r15 + 0x10]
0x9ef1:	shl	rdx, 5
0x9ef5:	sub	rax, rdx
0x9ef8:	cmp	r14, 1
0x9efc:	mov	qword ptr [r10], rax
0x9eff:	jne	0x9dcf


0xa127:	mov	rax, qword ptr [rsp + 0x20]
0xa12c:	mov	rdi, qword ptr [rcx]
0xa12f:	mov	rsi, qword ptr [r14]
0xa132:	lea	r13, [rax - 1]
0xa136:	call	0x71f0


0xa0c8:	mov	rdi, qword ptr [rsp + 0x20]
0xa0cd:	mov	rsi, qword ptr [rsp]
0xa0d1:	lea	rax, [rbx + 8]
0xa0d5:	lea	rcx, [rbx + rdi*8]
0xa0d9:	nop	dword ptr [rax]
0xa0e0:	mov	rdx, qword ptr [rax]
0xa0e3:	cmp	rdx, rsi
0xa0e6:	jbe	0xa0f2


0xa0f2:	add	rax, 8
0xa0f6:	cmp	rcx, rax
0xa0f9:	jne	0xa0e0


0xa0e8:	sub	rdx, 1
0xa0ec:	mov	qword ptr [rax], rdx
0xa0ef:	mov	rsi, qword ptr [rbx]
0xa0f2:	add	rax, 8
0xa0f6:	cmp	rcx, rax
0xa0f9:	jne	0xa0e0


0xa0fb:	mov	rcx, qword ptr [rsp + 0x18]
0xa100:	lea	rax, [rsi*8]
0xa108:	mov	r14, rsi
0xa10b:	mov	rdi, qword ptr [rsp + 0x28]
0xa110:	shl	r14, 4
0xa114:	add	r14, qword ptr [rsp + 0x30]
0xa119:	mov	qword ptr [rsp], rsi
0xa11d:	add	rcx, rax
0xa120:	sub	rax, rsi
0xa123:	lea	r15, [rdi + rax*8]
0xa127:	mov	rax, qword ptr [rsp + 0x20]
0xa12c:	mov	rdi, qword ptr [rcx]
0xa12f:	mov	rsi, qword ptr [r14]
0xa132:	lea	r13, [rax - 1]
0xa136:	call	0x71f0


0xa0e0:	mov	rdx, qword ptr [rax]
0xa0e3:	cmp	rdx, rsi
0xa0e6:	jbe	0xa0f2


0x9f2a:	jmp	0x9da6


0x9e25:	test	eax, eax
0x9e27:	jns	0x9df8


0x9e29:	mov	r15, r13
0x9e2c:	lea	r13, [rbp + r15]
0x9e31:	shr	r13, 1
0x9e34:	cmp	rbp, r15
0x9e37:	jb	0x9e13


0x9df8:	cmp	qword ptr [rsp], r12
0x9dfc:	jae	0x9e02


0x9e39:	mov	r15, rbp
0x9e3c:	mov	rbp, r14
0x9e3f:	lea	rax, [r15 - 1]
0x9e43:	test	rax, rax
0x9e46:	lea	rsi, [rbx + rax*8]
0x9e4a:	je	0x9e71


0x9dfe:	test	eax, eax
0x9e00:	je	0x9e29


0x9e02:	lea	rbp, [r13 + 1]
0x9e06:	lea	r13, [rbp + r15]
0x9e0b:	shr	r13, 1
0x9e0e:	cmp	rbp, r15
0x9e11:	jae	0x9e39


0x9e71:	mov	rax, qword ptr [rsp]
0x9e75:	mov	qword ptr [rsi], rax
0x9e78:	jmp	0x9d60


0x9e4c:	mov	rdi, qword ptr [rsp + 0x40]
0x9e51:	mov	rax, rbx
0x9e54:	lea	rcx, [rdi + r15*8]
0x9e58:	nop	dword ptr [rax + rax]
0x9e60:	mov	rdx, qword ptr [rax + 8]
0x9e64:	add	rax, 8
0x9e68:	mov	qword ptr [rax - 8], rdx
0x9e6c:	cmp	rax, rcx
0x9e6f:	jne	0x9e60


0x9e60:	mov	rdx, qword ptr [rax + 8]
0x9e64:	add	rax, 8
0x9e68:	mov	qword ptr [rax - 8], rdx
0x9e6c:	cmp	rax, rcx
0x9e6f:	jne	0x9e60


0x9d9e:	test	eax, eax
0x9da0:	jne	0x9f30


0x9f30:	mov	rdx, qword ptr [rsp + 0x58]
0x9f35:	mov	rsi, qword ptr [rsp + 0x50]
0x9f3a:	mov	rdi, qword ptr [rsp + 0x70]
0x9f3f:	call	0x7280


0x9d02:	test	eax, eax
0x9d04:	mov	rdx, qword ptr [rsp]
0x9d08:	jle	0x9d20


0x9d20:	add	r12, 1
0x9d24:	cmp	r12, qword ptr [rsp + 0x20]
0x9d29:	jb	0x9cd8


0x9d0a:	mov	qword ptr [r15], rbx
0x9d0d:	mov	r12d, 1
0x9d13:	mov	qword ptr [r13], r14
0x9d17:	jmp	0x9cd8


0x9cd8:	lea	rax, [r12*8]
0x9ce0:	mov	qword ptr [rsp], rdx
0x9ce4:	lea	r13, [rbp + rax]
0x9ce9:	lea	r15, [rbp + rax - 8]
0x9cee:	mov	rbx, qword ptr [r13]
0x9cf2:	mov	r14, qword ptr [r15]
0x9cf5:	mov	rsi, qword ptr [rdx + rbx*8]
0x9cf9:	mov	rdi, qword ptr [rdx + r14*8]
0x9cfd:	call	0x86e0


0x9d2b:	mov	rbx, rbp
0x9d2e:	mov	rbp, rdx
0x9d31:	lea	rax, [rsp + 0x80]
0x9d39:	mov	qword ptr [rsp + 0x68], 0
0x9d42:	mov	qword ptr [rsp + 0x38], 0
0x9d4b:	mov	qword ptr [rsp + 0x70], rax
0x9d50:	lea	rax, [rbx - 8]
0x9d54:	mov	qword ptr [rsp + 0x40], rax
0x9d59:	nop	dword ptr [rax]
0x9d60:	mov	rax, qword ptr [rbx]
0x9d63:	cmp	byte ptr [rip + 0x2106cf], 0
0x9d6a:	lea	r15, [rax*8]
0x9d72:	mov	qword ptr [rsp], rax
0x9d76:	lea	r13, [rbp + r15]
0x9d7b:	mov	r14, qword ptr [r13]
0x9d7f:	je	0x9f18


0xa25f:	mov	rdx, qword ptr [rsp + 8]
0xa264:	mov	rdi, rax
0xa267:	mov	qword ptr [rsp + 0x80], rax
0xa26f:	mov	qword ptr [rsp + 0x68], rdx
0xa274:	mov	rdx, qword ptr [r14 + 8]
0xa278:	jmp	0x9f5b


0x104ca:	mov	rbx, rax
0x104cd:	mov	qword ptr [rax], 0
0x104d4:	lea	rax, [rip - 0x12b]
0x104db:	lea	rdi, [rip + 0x5c05]
0x104e2:	xor	esi, esi
0x104e4:	mov	qword ptr [rbx + 0x10], 0
0x104ec:	mov	qword ptr [rbx + 8], rax
0x104f0:	mov	qword ptr [rbx + 0x18], 0
0x104f8:	xor	eax, eax
0x104fa:	call	0x3010


0x104ff:	test	eax, eax
0x10501:	lea	r13, [rbx + 0x20]
0x10505:	mov	r15d, eax
0x10508:	js	0x10588


0x10588:	lea	r12, [rsp + 0x10]
0x1058d:	xor	esi, esi
0x1058f:	mov	r14d, 0x18
0x10595:	mov	rdi, r12
0x10598:	call	0x2d60


0x1050a:	cmp	rbp, 0x800
0x10511:	mov	rdx, rbp
0x10514:	mov	r14d, 0x800
0x1051a:	cmova	rdx, r14
0x1051e:	mov	ecx, 0x1018
0x10523:	mov	rsi, r13
0x10526:	mov	edi, eax
0x10528:	call	0x2b70


0x2d60:	jmp	qword ptr [rip + 0x217022]


0x2b70:	jmp	qword ptr [rip + 0x21711a]






0x10562:	mov	rbx, rax
0x10565:	mov	qword ptr [rax], 0
0x1056c:	lea	rax, [rip - 0x1c3]
0x10573:	mov	qword ptr [rbx + 0x10], 0
0x1057b:	mov	qword ptr [rbx + 8], rax
0x1057f:	jmp	0x10497


0x10497:	mov	rdx, qword ptr [rsp + 0x28]
0x1049c:	xor	rdx, qword ptr fs:[0x28]
0x104a5:	mov	rax, rbx
0x104a8:	jne	0x1065f


0x104ae:	add	rsp, 0x38
0x104b2:	pop	rbx
0x104b3:	pop	rbp
0x104b4:	pop	r12
0x104b6:	pop	r13
0x104b8:	pop	r14
0x104ba:	pop	r15
0x104bc:	ret	


0x1065f:	call	0x2ca0


0xd944:	test	rbx, rbx
0xd947:	mov	edx, 8
0xd94c:	mov	rbp, rax
0xd94f:	mov	eax, 1
0xd954:	cmove	rbx, rax
0xd958:	mov	rax, rdx
0xd95b:	mul	rbx
0xd95e:	jo	0xd9aa


0xd9aa:	mov	ecx, 1
0xd9af:	jmp	0xd962


0xd960:	xor	ecx, ecx
0xd962:	test	rax, rax
0xd965:	js	0xd9b1


0xd962:	test	rax, rax
0xd965:	js	0xd9b1


0xd9b1:	call	0x12030


0xd967:	test	rcx, rcx
0xd96a:	jne	0xd9b1


0xd96c:	lea	rdi, [rbx*8]
0xd974:	call	0x11de0


0xd979:	mov	qword ptr [rbp], rax
0xd97d:	mov	qword ptr [rax], 0
0xd984:	lea	rax, [rip - 0x6b]
0xd98b:	test	r12, r12
0xd98e:	mov	qword ptr [rbp + 8], rbx
0xd992:	mov	qword ptr [rbp + 0x10], 0
0xd99a:	cmove	r12, rax
0xd99e:	mov	rax, rbp
0xd9a1:	mov	qword ptr [rbp + 0x18], r12
0xd9a5:	pop	rbx
0xd9a6:	pop	rbp
0xd9a7:	pop	r12
0xd9a9:	ret	


0x11f99:	mov	rdx, rbx
0x11f9c:	xor	esi, esi
0x11f9e:	mov	rdi, rax
0x11fa1:	pop	rbx
0x11fa2:	jmp	0x2d90


0x2d90:	jmp	qword ptr [rip + 0x21700a]




0x11ff4:	add	rsp, 8
0x11ff8:	mov	rdx, rbx
0x11ffb:	mov	rsi, rbp
0x11ffe:	pop	rbx
0x11fff:	pop	rbp
0x12000:	mov	rdi, rax
0x12003:	jmp	0x2e80


0x804a:	mov	rcx, qword ptr [rsp + 0x20]
0x804f:	mov	qword ptr [rsp + 0x48], rbp
0x8054:	lea	rax, [rcx + rax + 1]
0x8059:	mov	qword ptr [rsp + 0x20], rax
0x805e:	cmp	qword ptr [rsp + 0x50], r12
0x8063:	ja	0x8075


0x8065:	mov	rcx, qword ptr [rsp + 0x20]
0x806a:	cmp	qword ptr [rsp + 0x60], rcx
0x806f:	jbe	0x83ba


0x8075:	mov	rdx, qword ptr [rsp + 0x78]
0x807a:	mov	rdi, qword ptr [rsp + 0x10]
0x807f:	mov	rsi, r13
0x8082:	call	0xbbf0


0x8087:	mov	rbp, qword ptr [rsp + 0x70]
0x808c:	mov	rdx, qword ptr [rsp + 0x80]
0x8094:	mov	rsi, rbx
0x8097:	mov	rdi, rbp
0x809a:	call	0xbbf0


0x809f:	test	r15d, r15d
0x80a2:	jne	0x7fe0


0x80a8:	mov	rdi, qword ptr [rsp + 0x10]
0x80ad:	cmp	r13, rbx
0x80b0:	mov	rdx, rbx
0x80b3:	cmovbe	rdx, r13
0x80b7:	mov	rsi, rbp
0x80ba:	call	0x2df0


0x7fe0:	mov	rcx, qword ptr [rsp + 0x48]
0x7fe5:	cmp	qword ptr [rsp + 0x88], rcx
0x7fed:	ja	0x80eb


0x80bf:	test	eax, eax
0x80c1:	mov	r15d, eax
0x80c4:	jne	0x7fe0


0x80ca:	xor	r15d, r15d
0x80cd:	cmp	r13, rbx
0x80d0:	mov	rcx, qword ptr [rsp + 0x48]
0x80d5:	seta	r15b
0x80d9:	sbb	r15d, 0
0x80dd:	cmp	qword ptr [rsp + 0x88], rcx
0x80e5:	jbe	0x7ff3


0x8518:	mov	rcx, qword ptr [rsp + 0x20]
0x851d:	cmp	qword ptr [rsp + 0x60], rcx
0x8522:	lea	r12, [r12 + rax + 1]
0x8527:	jbe	0x805e


0x805e:	cmp	qword ptr [rsp + 0x50], r12
0x8063:	ja	0x8075


0x852d:	mov	rbp, qword ptr [rsp + 0x48]
0x8532:	jmp	0x8040


0x8d46:	lea	rdi, [rax + 0x20]
0x8d4a:	mov	r15, rax
0x8d4d:	and	rdi, 0xfffffffffffffff8
0x8d51:	call	0x11de0


0x8d56:	lea	rbp, [rax + 0xd]
0x8d5a:	mov	rdx, r15
0x8d5d:	mov	rsi, r12
0x8d60:	mov	rbx, rax
0x8d63:	mov	rdi, rbp
0x8d66:	call	0x2e80


0x8d6b:	movabs	rax, 0x58585874726f732f
0x8d75:	mov	qword ptr [rbx + r15 + 0xd], rax
0x8d7a:	mov	rax, qword ptr [rip + 0x2114a7]
0x8d81:	mov	dword ptr [rbp + r15 + 8], 0x585858
0x8d8a:	mov	qword ptr [rbx], 0
0x8d91:	add	rax, 1
0x8d95:	cmp	rax, qword ptr [rip + 0x2116ac]
0x8d9c:	mov	qword ptr [rip + 0x211485], rax
0x8da3:	jne	0x8db0


0x8da5:	mov	qword ptr [rip + 0x211478], 0
0x8db0:	lea	r13, [rsp + 0x10]
0x8db5:	lea	rsi, [rip + 0x2115e4]
0x8dbc:	xor	edi, edi
0x8dbe:	lea	rdx, [r13 + 8]
0x8dc2:	call	0x2af0


0x8db0:	lea	r13, [rsp + 0x10]
0x8db5:	lea	rsi, [rip + 0x2115e4]
0x8dbc:	xor	edi, edi
0x8dbe:	lea	rdx, [r13 + 8]
0x8dc2:	call	0x2af0


0x8dc7:	mov	esi, 0x80000
0x8dcc:	test	eax, eax
0x8dce:	mov	rdi, rbp
0x8dd1:	sete	byte ptr [rsp + 0x10]
0x8dd6:	call	0x111e0


0xaee6:	mov	r14, qword ptr [r15]
0xaee9:	mov	qword ptr [rsp], -1
0xaef1:	test	r14, r14
0xaef4:	je	0xafad


0xafad:	mov	rax, qword ptr [rsp]
0xafb1:	add	rsp, 0x28
0xafb5:	pop	rbx
0xafb6:	pop	rbp
0xafb7:	pop	r12
0xafb9:	pop	r13
0xafbb:	pop	r14
0xafbd:	pop	r15
0xafbf:	ret	


0xaefa:	mov	r12, rax
0xaefd:	mov	byte ptr [rsp + 0x17], 0
0xaf02:	xor	ebx, ebx
0xaf04:	jmp	0xaf57


0xaf57:	mov	rsi, qword ptr [rsp + 8]
0xaf5c:	mov	rdx, r12
0xaf5f:	mov	rdi, r14
0xaf62:	call	0x2b30


0xb1b1:	test	rax, rax
0xb1b4:	js	0xb1c5


0xb1c5:	mov	rdx, rax
0xb1c8:	mov	rsi, r12
0xb1cb:	mov	rdi, r14
0xb1ce:	call	0xafe0


0xb1b6:	add	rsp, 8
0xb1ba:	pop	rbx
0xb1bb:	pop	rbp
0xb1bc:	pop	r12
0xb1be:	pop	r13
0xb1c0:	pop	r14
0xb1c2:	pop	r15
0xb1c4:	ret	


0xdef0:	add	rsp, 8
0xdef4:	mov	edx, ebp
0xdef6:	mov	rdi, rbx
0xdef9:	pop	rbx
0xdefa:	pop	rbp
0xdefb:	mov	rsi, rax
0xdefe:	jmp	0xdd20


0x12019:	mov	rdi, rbx
0x1201c:	lea	rsi, [rax + 1]
0x12020:	pop	rbx
0x12021:	jmp	0x11fe0


0x12eb3:	mov	edx, r12d
0x12eb6:	mov	rsi, rbp
0x12eb9:	mov	edi, eax
0x12ebb:	call	0x2d50


0x2d50:	jmp	qword ptr [rip + 0x21702a]




0xc0bd:	mov	ecx, ebx
0xc0bf:	xor	edx, edx
0xc0c1:	xor	esi, esi
0xc0c3:	pop	rbx
0xc0c4:	mov	edi, eax
0xc0c6:	jmp	0x2dd0


0x7201:	test	eax, eax
0x7203:	je	0x7250


0x7250:	test	byte ptr [rbx], 0x10
0x7253:	je	0x7216


0x7205:	cmp	eax, 1
0x7208:	je	0x7220


0x7216:	add	rsp, 8
0x721a:	pop	rbx
0x721b:	pop	rbp
0x721c:	ret	


0x7255:	add	rsp, 8
0x7259:	mov	rdi, rbx
0x725c:	pop	rbx
0x725d:	pop	rbp
0x725e:	jmp	0x2be0


0x7220:	mov	rdi, rbx
0x7223:	call	0x3130


0x720a:	mov	rdi, rbx
0x720d:	call	0x12b40


0x2be0:	jmp	qword ptr [rip + 0x2170e2]


0x3130:	jmp	qword ptr [rip + 0x216e3a]






0xa13b:	mov	rdi, qword ptr [rsp]
0xa13f:	cmp	qword ptr [rsp + 0x60], rdi
0xa144:	ja	0xa2a8


0xa14a:	mov	rdi, qword ptr [r15]
0xa14d:	call	0x31c0


0xa2a8:	mov	rdi, qword ptr [r14]
0xa2ab:	sub	qword ptr [rsp + 0x60], 1
0xa2b1:	call	0x6c70


0xa152:	mov	rcx, qword ptr [rsp]
0xa156:	cmp	r13, rcx
0xa159:	jbe	0xa1f5


0xa1f5:	test	r13, r13
0xa1f8:	je	0xa026


0xa15f:	lea	rax, [rcx*8]
0xa167:	mov	rdi, qword ptr [rsp + 0x28]
0xa16c:	mov	r8, qword ptr [rsp + 0x18]
0xa171:	sub	rax, rcx
0xa174:	lea	rdx, [rdi + rax*8]
0xa178:	mov	rdi, qword ptr [rsp + 0x20]
0xa17d:	lea	rax, [rcx*8 + 8]
0xa185:	mov	rcx, qword ptr [rsp + 0x10]
0xa18a:	lea	rsi, [rdi*8]
0xa192:	mov	rdi, qword ptr [rsp + 0x30]
0xa197:	nop	word ptr [rax + rax]
0xa1a0:	mov	r9, qword ptr [r8 + rax]
0xa1a4:	add	rdx, 0x38
0xa1a8:	movdqu	xmm0, xmmword ptr [rdi + rax*2]
0xa1ad:	mov	qword ptr [r8 + rax - 8], r9
0xa1b2:	mov	r9, qword ptr [rdx + 0x30]
0xa1b6:	movups	xmmword ptr [rdi + rax*2 - 0x10], xmm0
0xa1bb:	mov	qword ptr [rdx - 8], r9
0xa1bf:	mov	r9, qword ptr [rbp + rax]
0xa1c4:	movdqu	xmm0, xmmword ptr [rdx]
0xa1c8:	mov	qword ptr [rbp + rax - 8], r9
0xa1cd:	mov	r9, qword ptr [rcx + rax]
0xa1d1:	movups	xmmword ptr [rdx - 0x38], xmm0
0xa1d5:	movdqu	xmm0, xmmword ptr [rdx + 0x10]
0xa1da:	mov	qword ptr [rcx + rax - 8], r9
0xa1df:	add	rax, 8
0xa1e3:	movups	xmmword ptr [rdx - 0x28], xmm0
0xa1e7:	movdqu	xmm0, xmmword ptr [rdx + 0x20]
0xa1ec:	movups	xmmword ptr [rdx - 0x18], xmm0
0xa1f0:	cmp	rsi, rax
0xa1f3:	jne	0xa1a0


0xa026:	cmp	qword ptr [rsp + 0x38], 0
0xa02c:	je	0xa05b


0xa1fe:	mov	rdi, qword ptr [rsp + 0x40]
0xa203:	mov	rcx, qword ptr [rsp + 0x20]
0xa208:	mov	rax, rbx
0xa20b:	lea	rcx, [rdi + rcx*8]
0xa20f:	nop	
0xa210:	mov	rdx, qword ptr [rax + 8]
0xa214:	add	rax, 8
0xa218:	mov	qword ptr [rax - 8], rdx
0xa21c:	cmp	rcx, rax
0xa21f:	jne	0xa210


0xa1a0:	mov	r9, qword ptr [r8 + rax]
0xa1a4:	add	rdx, 0x38
0xa1a8:	movdqu	xmm0, xmmword ptr [rdi + rax*2]
0xa1ad:	mov	qword ptr [r8 + rax - 8], r9
0xa1b2:	mov	r9, qword ptr [rdx + 0x30]
0xa1b6:	movups	xmmword ptr [rdi + rax*2 - 0x10], xmm0
0xa1bb:	mov	qword ptr [rdx - 8], r9
0xa1bf:	mov	r9, qword ptr [rbp + rax]
0xa1c4:	movdqu	xmm0, xmmword ptr [rdx]
0xa1c8:	mov	qword ptr [rbp + rax - 8], r9
0xa1cd:	mov	r9, qword ptr [rcx + rax]
0xa1d1:	movups	xmmword ptr [rdx - 0x38], xmm0
0xa1d5:	movdqu	xmm0, xmmword ptr [rdx + 0x10]
0xa1da:	mov	qword ptr [rcx + rax - 8], r9
0xa1df:	add	rax, 8
0xa1e3:	movups	xmmword ptr [rdx - 0x28], xmm0
0xa1e7:	movdqu	xmm0, xmmword ptr [rdx + 0x20]
0xa1ec:	movups	xmmword ptr [rdx - 0x18], xmm0
0xa1f0:	cmp	rsi, rax
0xa1f3:	jne	0xa1a0


0xa02e:	cmp	byte ptr [rip + 0x210404], 0
0xa035:	je	0xa05b


0xa221:	mov	qword ptr [rsp + 0x20], r13
0xa226:	jmp	0x9d60


0xa210:	mov	rdx, qword ptr [rax + 8]
0xa214:	add	rax, 8
0xa218:	mov	qword ptr [rax - 8], rdx
0xa21c:	cmp	rcx, rax
0xa21f:	jne	0xa210


0xa037:	mov	rdx, qword ptr [rsp + 0x58]
0xa03c:	mov	rsi, qword ptr [rsp + 0x50]
0xa041:	lea	rdi, [rsp + 0x80]
0xa049:	call	0x7280


0xa04e:	mov	rdi, qword ptr [rsp + 0x80]
0xa056:	call	0x31c0


0x9fc5:	cmp	qword ptr [rsp + 0x60], r14
0x9fca:	ja	0xa290


0x9fd0:	mov	rdi, qword ptr [r15]
0x9fd3:	call	0x31c0


0xa290:	mov	rdi, qword ptr [r12]
0xa294:	sub	qword ptr [rsp + 0x60], 1
0xa29a:	call	0x6c70


0x9fd8:	lea	rsi, [rbx - 1]
0x9fdc:	cmp	rsi, r14
0x9fdf:	jbe	0xa2bb


0xa2bb:	mov	rbx, qword ptr [rsp + 0x20]
0xa2c0:	mov	rbp, qword ptr [rsp]
0xa2c4:	mov	r15, rsi
0xa2c7:	jmp	0x9c9f


0x9fe5:	mov	rdi, qword ptr [rsp + 0x18]
0x9fea:	mov	rcx, qword ptr [rsp + 8]
0x9fef:	shl	rbx, 4
0x9ff3:	mov	rax, r12
0x9ff6:	lea	rdx, [rdi + r13 + 8]
0x9ffb:	add	rcx, rbx
0x9ffe:	nop	
0xa000:	movdqu	xmm0, xmmword ptr [rax + 0x10]
0xa005:	add	rax, 0x10
0xa009:	add	rdx, 8
0xa00d:	mov	rdi, qword ptr [rdx - 8]
0xa011:	movups	xmmword ptr [rax - 0x10], xmm0
0xa015:	mov	qword ptr [rdx - 0x10], rdi
0xa019:	cmp	rcx, rax
0xa01c:	jne	0xa000


0x9c9f:	test	r15, r15
0x9ca2:	je	0xa05b


0xa01e:	mov	rbx, rsi
0xa021:	jmp	0x9bf0


0xa000:	movdqu	xmm0, xmmword ptr [rax + 0x10]
0xa005:	add	rax, 0x10
0xa009:	add	rdx, 8
0xa00d:	mov	rdi, qword ptr [rdx - 8]
0xa011:	movups	xmmword ptr [rax - 0x10], xmm0
0xa015:	mov	qword ptr [rdx - 0x10], rdi
0xa019:	cmp	rcx, rax
0xa01c:	jne	0xa000


0xa06a:	mov	rdi, qword ptr [rsp + 0x18]
0xa06f:	call	0x31c0


0xa074:	mov	rdi, qword ptr [rsp + 0x28]
0xa079:	call	0x31c0


0xa07e:	mov	rdi, rbx
0xa081:	call	0x31c0


0xa086:	mov	rdi, qword ptr [rsp + 0x10]
0xa08b:	call	0x31c0


0xa090:	mov	rax, qword ptr [rsp + 0xa8]
0xa098:	xor	rax, qword ptr fs:[0x28]
0xa0a1:	jne	0xa2d1


0xa0a7:	add	rsp, 0xb8
0xa0ae:	mov	rdi, rbp
0xa0b1:	pop	rbx
0xa0b2:	pop	rbp
0xa0b3:	pop	r12
0xa0b5:	pop	r13
0xa0b7:	pop	r14
0xa0b9:	pop	r15
0xa0bb:	jmp	0x31c0


0xa2d1:	call	0x2ca0


0xa709:	xor	esi, esi
0xa70b:	cmp	rbx, 2
0xa70f:	mov	rdi, r15
0xa712:	seta	sil
0xa716:	sub	rbp, 0x10
0xa71a:	sub	r13, 8
0xa71e:	call	0x8d00


0x12b4c:	test	eax, eax
0x12b4e:	mov	rdi, rbx
0x12b51:	js	0x12ba7


0x12ba7:	pop	rbx
0x12ba8:	pop	rbp
0x12ba9:	pop	r12
0x12bab:	jmp	0x2c40


0x12b53:	call	0x2f50


0x2c40:	jmp	qword ptr [rip + 0x2170b2]




0x12b58:	test	eax, eax
0x12b5a:	jne	0x12b88


0x12b5c:	mov	rdi, rbx
0x12b5f:	call	0x12e40


0x12b88:	mov	rdi, rbx
0x12b8b:	call	0x2e90


0x12b90:	xor	esi, esi
0x12b92:	mov	edx, 1
0x12b97:	mov	edi, eax
0x12b99:	call	0x2d50


0x12f17:	cmp	rax, -3
0x12f1b:	mov	rbp, rax
0x12f1e:	jbe	0x12f40


0x12f40:	mov	rdx, qword ptr [rsp + 8]
0x12f45:	xor	rdx, qword ptr fs:[0x28]
0x12f4e:	mov	rax, rbp
0x12f51:	jne	0x12f5e


0x12f20:	test	r12, r12
0x12f23:	je	0x12f40


0x12f53:	add	rsp, 0x18
0x12f57:	pop	rbx
0x12f58:	pop	rbp
0x12f59:	pop	r12
0x12f5b:	pop	r13
0x12f5d:	ret	


0x12f5e:	call	0x2ca0


0x12f25:	xor	edi, edi
0x12f27:	call	0xc5e0


0x12f2c:	test	al, al
0x12f2e:	jne	0x12f40


0x12f30:	movzx	eax, byte ptr [r13]
0x12f35:	mov	ebp, 1
0x12f3a:	mov	dword ptr [rbx], eax
0x12f3c:	nop	dword ptr [rax]
0x12f40:	mov	rdx, qword ptr [rsp + 8]
0x12f45:	xor	rdx, qword ptr fs:[0x28]
0x12f4e:	mov	rax, rbp
0x12f51:	jne	0x12f5e


0xdde4:	cmp	rax, -1
0xdde8:	mov	r15, rax
0xddeb:	je	0xde38


0xde38:	test	byte ptr [rsp + 0xc], 1
0xde3d:	je	0xdd7b


0xdded:	cmp	rax, -2
0xddf1:	je	0xde70


0xde70:	test	byte ptr [rsp + 0xc], 1
0xde75:	jne	0xde48


0xddf3:	mov	edi, dword ptr [rsp + 0x1c]
0xddf7:	test	rax, rax
0xddfa:	mov	eax, 1
0xddff:	cmove	r15, rax
0xde03:	call	0x2ee0


0xde77:	add	ebp, 1
0xde7a:	mov	rbx, r13
0xde7d:	jmp	0xdd82


0xde48:	mov	ebp, 0xffffffff
0xde4d:	mov	rsi, qword ptr [rsp + 0x28]
0xde52:	xor	rsi, qword ptr fs:[0x28]
0xde5b:	mov	eax, ebp
0xde5d:	jne	0xdeda


0x2ee0:	jmp	qword ptr [rip + 0x216f62]


0xdd82:	cmp	rbx, r13
0xdd85:	jae	0xde4d




0xa38c:	mov	rdi, rax
0xa38f:	mov	rsi, rbx
0xa392:	call	0x6320


0xa8a3:	mov	rdi, rax
0xa8a6:	mov	rsi, rbx
0xa8a9:	call	0x6320


0x761f:	mov	edi, 1
0x7624:	mov	rsi, rax
0x7627:	xor	eax, eax
0x7629:	call	0x2fa0


0x2fa0:	jmp	qword ptr [rip + 0x216f02]




0x1180f:	lea	rdx, [rip + 0x4c0a]
0x11816:	mov	rcx, rax
0x11819:	mov	r8d, 0x7e3
0x1181f:	mov	esi, 1
0x11824:	mov	rdi, rbp
0x11827:	xor	eax, eax
0x11829:	call	0x3100


0x1182e:	lea	rsi, [rip + 0x495b]
0x11835:	xor	edi, edi
0x11837:	mov	edx, 5
0x1183c:	call	0x2c70


0x11841:	mov	rsi, rbp
0x11844:	mov	rdi, rax
0x11847:	call	0x2e10


0x2e10:	jmp	qword ptr [rip + 0x216fca]




0x7711:	mov	rsi, rbp
0x7714:	mov	rdi, rax
0x7717:	call	0x6320


0x9ac2:	mov	rsi, qword ptr [rsp + 0x38]
0x9ac7:	mov	rdi, rax
0x9aca:	call	0x6320


0x738e:	xor	esi, esi
0x7390:	mov	rdi, rax
0x7393:	call	0x6320


0x126cf:	mov	r9, r12
0x126d2:	mov	rdx, rax
0x126d5:	mov	r8, r13
0x126d8:	mov	rcx, rbx
0x126db:	xor	esi, esi
0x126dd:	mov	edi, ebp
0x126df:	xor	eax, eax
0x126e1:	call	0x2fe0


0x2fe0:	jmp	qword ptr [rip + 0x216ee2]




0x6373:	mov	rdx, rax
0x6376:	jmp	0x6331


0xa8fd:	mov	rdi, qword ptr [rip + 0x20f8fc]
0xa904:	mov	rdx, rax
0xa907:	mov	rcx, rbx
0xa90a:	mov	esi, 1
0xa90f:	xor	eax, eax
0xa911:	call	0x3100


0xa916:	mov	edi, ebp
0xa918:	call	0x30e0


0x30e0:	jmp	qword ptr [rip + 0x216e62]




0xa92b:	mov	rcx, rbx
0xa92e:	mov	rdx, rbx
0xa931:	mov	rsi, rax
0xa934:	mov	edi, 1
0xa939:	xor	eax, eax
0xa93b:	call	0x2fa0


0xb003:	mov	rbx, rax
0xb006:	mov	rsi, rbp
0xb009:	mov	edi, 1
0xb00e:	call	0x10370


0xb04e:	mov	rbx, rax
0xb051:	jmp	0xb006


0xb006:	mov	rsi, rbp
0xb009:	mov	edi, 1
0xb00e:	call	0x10370


0x32e6:	mov	rsi, rbx
0x32e9:	mov	rdi, rax
0x32ec:	call	0x6320


0x62b7:	mov	rcx, rbx
0x62ba:	mov	rdx, rax
0x62bd:	xor	esi, esi
0x62bf:	mov	edi, 2
0x62c4:	xor	eax, eax
0x62c6:	call	0x2fe0


0xb091:	mov	rdi, rax
0xb094:	mov	rsi, rbx
0xb097:	call	0x2e10


0x11d74:	lea	rdx, [rip + 0x43eb]
0x11d7b:	mov	rsi, rax
0x11d7e:	mov	edi, 1
0x11d83:	xor	eax, eax
0x11d85:	call	0x2fa0


0x12047:	mov	edi, dword ptr [rip + 0x2080e3]
0x1204d:	lea	rdx, [rip + 0x3a00]
0x12054:	mov	rcx, rax
0x12057:	xor	esi, esi
0x12059:	xor	eax, eax
0x1205b:	call	0x2fe0


0x1209a:	mov	esi, r14d
0x1209d:	mov	rdx, rax
0x120a0:	xor	edi, edi
0x120a2:	xor	eax, eax
0x120a4:	call	0x2fe0


0x13057:	mov	rdi, qword ptr [rip + 0x2071a2]
0x1305e:	lea	rdx, [rip + 0x309a]
0x13065:	mov	rcx, rax
0x13068:	mov	esi, 1
0x1306d:	xor	eax, eax
0x1306f:	call	0x3100


0x13074:	mov	edi, dword ptr [rip + 0x2070b6]
0x1307a:	call	0x30e0


0x1336c:	mov	ebx, dword ptr [rbp]
0x1336f:	mov	rdi, rbp
0x13372:	mov	r12, rax
0x13375:	call	0x12b40


0x1350c:	test	rax, rax
0x1350f:	mov	rbx, rax
0x13512:	je	0x13521


0x13521:	mov	rax, rbx
0x13524:	pop	rbx
0x13525:	pop	rbp
0x13526:	pop	r12
0x13528:	ret	


0x13514:	mov	rdi, rax
0x13517:	call	0x2e90


0x1351c:	cmp	eax, 2
0x1351f:	jbe	0x13530


0x13530:	mov	edi, eax
0x13532:	call	0x137b0


0x1044e:	test	rax, rax
0x10451:	mov	r13, rax
0x10454:	je	0x10658


0x10658:	xor	ebx, ebx
0x1065a:	jmp	0x10497


0x1045a:	mov	edi, 0x1038
0x1045f:	call	0x11de0


0x10464:	mov	rbx, rax
0x10467:	mov	qword ptr [rax], r13
0x1046a:	lea	rax, [rip - 0xc1]
0x10471:	cmp	rbp, 0x1000
0x10478:	mov	ecx, 0x1000
0x1047d:	lea	rsi, [rbx + 0x18]
0x10481:	cmovbe	rcx, rbp
0x10485:	mov	qword ptr [rbx + 8], rax
0x10489:	mov	qword ptr [rbx + 0x10], r12
0x1048d:	xor	edx, edx
0x1048f:	mov	rdi, r13
0x10492:	call	0x2fb0


0x2fb0:	jmp	qword ptr [rip + 0x216efa]




0x135ae:	test	rax, rax
0x135b1:	je	0x135d0


0x135d0:	lea	rax, [rip + 0x3189]
0x135d7:	add	rsp, 8
0x135db:	ret	


0x135b3:	cmp	byte ptr [rax], 0
0x135b6:	lea	rdx, [rip + 0x31a3]
0x135bd:	cmove	rax, rdx
0x135c1:	add	rsp, 8
0x135c5:	ret	


0xe730:	movzx	edx, byte ptr [rax]
0xe733:	and	edx, 0xffffffdf
0xe736:	cmp	dl, 0x55
0xe739:	je	0xe7b0


0xe7b0:	movzx	edx, byte ptr [rax + 1]
0xe7b4:	and	edx, 0xffffffdf
0xe7b7:	cmp	dl, 0x54
0xe7ba:	jne	0xe740


0xe73b:	cmp	dl, 0x47
0xe73e:	je	0xe760


0xe7bc:	movzx	edx, byte ptr [rax + 2]
0xe7c0:	and	edx, 0xffffffdf
0xe7c3:	cmp	dl, 0x46
0xe7c6:	jne	0xe740


0xe740:	lea	rax, [rip + 0x74bc]
0xe747:	lea	rdx, [rip + 0x6f64]
0xe74e:	cmp	ebx, 9
0xe751:	cmovne	rax, rdx
0xe755:	add	rsp, 8
0xe759:	pop	rbx
0xe75a:	pop	rbp
0xe75b:	ret	


0xe760:	movzx	edx, byte ptr [rax + 1]
0xe764:	and	edx, 0xffffffdf
0xe767:	cmp	dl, 0x42
0xe76a:	jne	0xe740


0xe7cc:	cmp	byte ptr [rax + 3], 0x2d
0xe7d0:	jne	0xe740


0xe76c:	cmp	byte ptr [rax + 2], 0x31
0xe770:	jne	0xe740


0xe7d6:	cmp	byte ptr [rax + 4], 0x38
0xe7da:	jne	0xe740


0xe772:	cmp	byte ptr [rax + 3], 0x38
0xe776:	jne	0xe740


0xe7e0:	cmp	byte ptr [rax + 5], 0
0xe7e4:	jne	0xe740


0xe778:	cmp	byte ptr [rax + 4], 0x30
0xe77c:	jne	0xe740


0xe7ea:	cmp	byte ptr [rbp], 0x60
0xe7ee:	lea	rax, [rip + 0x73ff]
0xe7f5:	lea	rdx, [rip + 0x73fc]
0xe7fc:	cmovne	rax, rdx
0xe800:	add	rsp, 8
0xe804:	pop	rbx
0xe805:	pop	rbp
0xe806:	ret	


0xe77e:	cmp	byte ptr [rax + 5], 0x33
0xe782:	jne	0xe740


0xe784:	cmp	byte ptr [rax + 6], 0x30
0xe788:	jne	0xe740


0xe78a:	cmp	byte ptr [rax + 7], 0
0xe78e:	jne	0xe740


0xe790:	cmp	byte ptr [rbp], 0x60
0xe794:	lea	rax, [rip + 0x7461]
0xe79b:	lea	rdx, [rip + 0x745e]
0xe7a2:	cmovne	rax, rdx
0xe7a6:	add	rsp, 8
0xe7aa:	pop	rbx
0xe7ab:	pop	rbp
0xe7ac:	ret	


0xa7cb:	cmp	dword ptr [rax], 0x18
0xa7ce:	jne	0xa7dc


0xa7d0:	cmp	qword ptr [rsp + 8], 2
0xa7d6:	ja	0xa6d3


0xa7dc:	lea	rsi, [rip + 0xacbc]
0xa7e3:	xor	edi, edi
0xa7e5:	mov	edx, 5
0xa7ea:	call	0x2c70


0xa7ef:	mov	rsi, qword ptr [rsp + 0x30]
0xa7f4:	mov	rdi, rax
0xa7f7:	call	0x6320


0x8bf5:	cmp	dword ptr [rax], 0x18
0x8bf8:	mov	rbp, rax
0x8bfb:	jne	0x8cc0


0x8c01:	mov	edi, r14d
0x8c04:	call	0x2db0


0x8cc0:	mov	rsi, qword ptr [rip + 0x211761]
0x8cc7:	mov	edi, 4
0x8ccc:	call	0x100c0


0x6e28:	movsd	xmm3, qword ptr [rip + 0xeb98]
0x6e30:	lea	r13, [rsp + 0x20]
0x6e35:	mov	r12, rax
0x6e38:	movsd	qword ptr [rsp + 8], xmm3
0x6e3e:	sub	rbx, 1
0x6e42:	cmp	rbx, -1
0x6e46:	je	0x6ef4


0x6ef4:	mov	r15d, dword ptr [r12]
0x6ef8:	mov	rbx, qword ptr [rsp + 0x18]
0x6efd:	mov	edi, dword ptr [rbx]
0x6eff:	call	0x2db0


0x6e4c:	lea	rdx, [r13 + 8]
0x6e50:	lea	rsi, [rip + 0x213549]
0x6e57:	xor	edi, edi
0x6e59:	call	0x2af0


0x6e5e:	test	eax, eax
0x6e60:	mov	r14, qword ptr [rip + 0x213521]
0x6e67:	mov	qword ptr [rip + 0x213516], 0
0x6e72:	sete	byte ptr [rsp + 0x20]
0x6e77:	call	0x3190


0x3190:	jmp	qword ptr [rip + 0x216e0a]




0x1379d:	mov	dword ptr [rax], 0
0x137a3:	add	rsp, 0x10
0x137a7:	xor	eax, eax
0x137a9:	pop	rbx
0x137aa:	pop	rbp
0x137ab:	pop	r12
0x137ad:	ret	


0x12199:	mov	r13d, eax
0x1219c:	call	0x2b10


0x121a1:	mov	edi, dword ptr [rax]
0x121a3:	test	edi, edi
0x121a5:	je	0x121ba


0x121ba:	pop	rbx
0x121bb:	mov	eax, r13d
0x121be:	pop	rbp
0x121bf:	pop	r12
0x121c1:	pop	r13
0x121c3:	pop	r14
0x121c5:	ret	


0x121a7:	lea	rdx, [rbx - 1]
0x121ab:	lea	r8, [r14 - 1]
0x121af:	mov	rcx, r12
0x121b2:	mov	rsi, rbp
0x121b5:	call	0x12070


0x8277:	mov	r9, qword ptr [rsp + 0x10]
0x827c:	mov	r8d, eax
0x827f:	jmp	0x7888


0x879b:	jmp	0x8737


0x1373d:	mov	edx, dword ptr [rsp + 8]
0x13741:	mov	dword ptr [rax], 0
0x13747:	jmp	0x13721


0x13721:	add	rsp, 0x18
0x13725:	mov	eax, edx
0x13727:	pop	rbx
0x13728:	pop	rbp
0x13729:	pop	r12
0x1372b:	pop	r13
0x1372d:	pop	r14
0x1372f:	pop	r15
0x13731:	ret	


0x12149:	mov	r14d, eax
0x1214c:	call	0x2b10


0x12151:	mov	edi, dword ptr [rax]
0x12153:	test	edi, edi
0x12155:	je	0x12168


0x12168:	pop	rbx
0x12169:	mov	eax, r14d
0x1216c:	pop	rbp
0x1216d:	pop	r12
0x1216f:	pop	r13
0x12171:	pop	r14
0x12173:	ret	


0x12157:	mov	r8, r13
0x1215a:	mov	rcx, r12
0x1215d:	mov	rdx, rbp
0x12160:	mov	rsi, rbx
0x12163:	call	0x12070


0x12db6:	mov	r12d, dword ptr [rax]
0x12db9:	mov	rbp, rax
0x12dbc:	mov	edi, ebx
0x12dbe:	call	0x2db0


0x12ddd:	cmp	dword ptr [rax], 0x16
0x12de0:	jne	0x12c4f


0x12de6:	xor	esi, esi
0x12de8:	xor	eax, eax
0x12dea:	mov	edx, r12d
0x12ded:	mov	edi, ebp
0x12def:	call	0x2bd0


0x12df4:	test	eax, eax
0x12df6:	mov	ebx, eax
0x12df8:	js	0x12ca0


0x12dfe:	mov	dword ptr [rip + 0x207bf0], 0xffffffff
0x12e08:	jmp	0x12d83


0xe4bd:	mov	edi, dword ptr [rbx]
0xe4bf:	mov	r12d, dword ptr [rax]
0xe4c2:	mov	rbp, rax
0xe4c5:	call	0x2db0


0xe5a5:	cmp	dword ptr [rax], 0x26
0xe5a8:	jne	0xe500


0xe5ae:	mov	dword ptr [rip + 0x20c2e8], 0xffffffff
0xe5b8:	jmp	0xe412


0x6d0b:	cmp	byte ptr [rsp + 0x10], 0
0x6d10:	mov	eax, dword ptr [rax]
0x6d12:	mov	qword ptr [r13], r12
0x6d16:	mov	dword ptr [rsp + 0xc], eax
0x6d1a:	jne	0x6da0


0x6d20:	test	r14d, r14d
0x6d23:	jne	0x6d60


0x6da0:	mov	rdi, r15
0x6da3:	call	0x6bb0


0x6d25:	test	r12, r12
0x6d28:	jne	0x6d31


0x6d60:	mov	rdx, rbp
0x6d63:	xor	edi, edi
0x6d65:	mov	esi, 3
0x6d6a:	call	0x101c0


0x6d2a:	mov	qword ptr [rip + 0x21330f], r13
0x6d31:	mov	rdi, rbx
0x6d34:	call	0x31c0


0x6d31:	mov	rdi, rbx
0x6d34:	call	0x31c0


0x6d39:	mov	rax, qword ptr [rsp + 0x98]
0x6d41:	xor	rax, qword ptr fs:[0x28]
0x6d4a:	jne	0x6dbd


0x6d4c:	add	rsp, 0xa8
0x6d53:	pop	rbx
0x6d54:	pop	rbp
0x6d55:	pop	r12
0x6d57:	pop	r13
0x6d59:	pop	r14
0x6d5b:	pop	r15
0x6d5d:	ret	


0x6dbd:	call	0x2ca0


0x6da8:	jmp	0x6d20


0xa29f:	jmp	0x9fd0


0xa2b6:	jmp	0xa14a


0x63c7:	mov	eax, dword ptr [rax]
0x63c9:	mov	dword ptr [rip + 0x213f01], eax
0x63cf:	jmp	0x638e


0x7145:	mov	ebp, dword ptr [rax]
0x7147:	call	0x6380


0x714c:	test	rax, rax
0x714f:	je	0x7164


0x7164:	mov	rdx, rbx
0x7167:	mov	esi, 3
0x716c:	xor	edi, edi
0x716e:	call	0x101c0


0x7151:	mov	eax, dword ptr [rax + 0x18]
0x7154:	and	eax, 0xf000
0x7159:	cmp	eax, 0x8000
0x715e:	jne	0x70dd


0x121fc:	mov	rbx, rax
0x121ff:	jmp	0x12210


0x12210:	xor	esi, esi
0x12212:	mov	dword ptr [rbx], 0
0x12218:	mov	rdi, rbp
0x1221b:	call	0x12f70


0x12220:	test	eax, eax
0x12222:	jne	0x12208


0x12224:	mov	rdx, qword ptr [rsp + 0x18]
0x12229:	xor	rdx, qword ptr fs:[0x28]
0x12232:	jne	0x12247


0x12208:	test	dword ptr [rbx], 0xfffffffb
0x1220e:	jne	0x12240


0x12234:	add	rsp, 0x28
0x12238:	pop	rbx
0x12239:	pop	rbp
0x1223a:	ret	


0x12247:	call	0x2ca0


0x12240:	mov	eax, 0xffffffff
0x12245:	jmp	0x12224


0xe5c5:	mov	r12d, 0xffffffff
0xe5cb:	mov	dword ptr [rax], 0x16
0xe5d1:	jmp	0xe446


0x10789:	mov	rcx, qword ptr [rsp + 8]
0x1078e:	mov	r13, rax
0x10791:	jmp	0x107b6


0x107b6:	mov	rdx, rbp
0x107b9:	mov	rdi, rbx
0x107bc:	mov	esi, 1
0x107c1:	call	0x2c10


0x107c6:	add	rbx, rax
0x107c9:	sub	rbp, rax
0x107cc:	mov	edx, dword ptr [r13]
0x107d0:	jne	0x10798


0x10798:	mov	rax, qword ptr [r12]
0x1079c:	mov	rdi, qword ptr [r12 + 0x10]
0x107a1:	mov	eax, dword ptr [rax]
0x107a3:	and	eax, 0x20
0x107a6:	cmovne	eax, edx
0x107a9:	mov	dword ptr [r13], eax
0x107ad:	call	qword ptr [r12 + 8]


0x12298:	mov	dword ptr [rax], 0
0x1229e:	mov	r12, rax
0x122a1:	movzx	ebx, byte ptr [rbp]
0x122a5:	call	0x31b0


0x12768:	mov	dword ptr [rax], 0
0x1276e:	mov	r12, rax
0x12771:	movzx	ebx, byte ptr [rbp]
0x12775:	call	0x31b0


0x13025:	mov	dword ptr [rax], 0x16
0x1302b:	mov	eax, 0xffffffff
0x13030:	jmp	0x13007


0x6578:	mov	rdx, r13
0x657b:	mov	rbx, rax
0x657e:	mov	dword ptr [rax], 0
0x6584:	mov	rsi, rbp
0x6587:	mov	rdi, r12
0x658a:	call	0x2e30


0x2e30:	jmp	qword ptr [rip + 0x216fba]




0xfa71:	mov	r13, rax
0xfa74:	mov	eax, dword ptr [rax]
0xfa76:	test	r15d, r15d
0xfa79:	mov	rbx, qword ptr [rip + 0x20a700]
0xfa80:	mov	dword ptr [rsp + 0x18], eax
0xfa84:	js	0xfbf1


0xfbf1:	call	0x2b00


0xfa8a:	cmp	dword ptr [rip + 0x20a6e7], r15d
0xfa91:	jg	0xfaf5


0xfa93:	cmp	r15d, 0x7fffffff
0xfa9a:	je	0xfbf6


0xfaf5:	mov	eax, dword ptr [rbp + 4]
0xfaf8:	shl	r15, 4
0xfafc:	sub	rsp, 8
0xfb00:	add	rbx, r15
0xfb03:	lea	r15, [rbp + 8]
0xfb07:	mov	r8d, dword ptr [rbp]
0xfb0b:	mov	r11, qword ptr [rbx]
0xfb0e:	mov	r12, qword ptr [rbx + 8]
0xfb12:	mov	rcx, r14
0xfb15:	or	eax, 1
0xfb18:	mov	dword ptr [rsp + 0x24], eax
0xfb1c:	push	qword ptr [rbp + 0x30]
0xfb1f:	mov	r9d, eax
0xfb22:	push	qword ptr [rbp + 0x28]
0xfb25:	push	r15
0xfb27:	mov	rsi, r11
0xfb2a:	mov	rdx, qword ptr [rsp + 0x28]
0xfb2f:	mov	rdi, r12
0xfb32:	mov	qword ptr [rsp + 0x30], r11
0xfb37:	call	0xe810


0xfbf6:	call	0x12030


0xfaa0:	lea	r12d, [r15 + 1]
0xfaa4:	lea	rax, [rip + 0x20a6e5]
0xfaab:	movsxd	rsi, r12d
0xfaae:	shl	rsi, 4
0xfab2:	cmp	rbx, rax
0xfab5:	je	0xfbd0


0xfbd0:	xor	edi, edi
0xfbd2:	call	0x11e40


0xfabb:	mov	rdi, rbx
0xfabe:	call	0x11e40


0xfac3:	mov	rbx, rax
0xfac6:	mov	qword ptr [rip + 0x20a6b3], rax
0xfacd:	movsxd	rdi, dword ptr [rip + 0x20a6a4]
0xfad4:	mov	edx, r12d
0xfad7:	xor	esi, esi
0xfad9:	sub	edx, edi
0xfadb:	shl	rdi, 4
0xfadf:	movsxd	rdx, edx
0xfae2:	add	rdi, rbx
0xfae5:	shl	rdx, 4
0xfae9:	call	0x2d90


0xfbd7:	movdqa	xmm0, xmmword ptr [rip + 0x20a5b1]
0xfbdf:	mov	rbx, rax
0xfbe2:	mov	qword ptr [rip + 0x20a597], rax
0xfbe9:	movups	xmmword ptr [rax], xmm0
0xfbec:	jmp	0xfacd


0xfacd:	movsxd	rdi, dword ptr [rip + 0x20a6a4]
0xfad4:	mov	edx, r12d
0xfad7:	xor	esi, esi
0xfad9:	sub	edx, edi
0xfadb:	shl	rdi, 4
0xfadf:	movsxd	rdx, edx
0xfae2:	add	rdi, rbx
0xfae5:	shl	rdx, 4
0xfae9:	call	0x2d90


0xfc0c:	mov	r12d, dword ptr [rax]
0xfc0f:	mov	rbp, rax
0xfc12:	lea	rax, [rip + 0x20ada7]
0xfc19:	test	rbx, rbx
0xfc1c:	mov	esi, 0x38
0xfc21:	cmove	rbx, rax
0xfc25:	mov	rdi, rbx
0xfc28:	call	0x11fe0


0xfd42:	mov	r12d, dword ptr [rax]
0xfd45:	mov	rbp, rax
0xfd48:	lea	rax, [rbx + 8]
0xfd4c:	sub	rsp, 8
0xfd50:	mov	r9d, dword ptr [rbx + 4]
0xfd54:	push	qword ptr [rbx + 0x30]
0xfd57:	mov	r8d, dword ptr [rbx]
0xfd5a:	push	qword ptr [rbx + 0x28]
0xfd5d:	mov	rdx, r15
0xfd60:	push	rax
0xfd61:	mov	rcx, qword ptr [rsp + 0x28]
0xfd66:	mov	rsi, r14
0xfd69:	mov	rdi, r13
0xfd6c:	call	0xe810


0xfdbf:	test	r12, r12
0xfdc2:	mov	r13, rax
0xfdc5:	mov	eax, dword ptr [rax]
0xfdc7:	sete	bpl
0xfdcb:	or	ebp, dword ptr [rbx + 4]
0xfdce:	lea	r10, [rbx + 8]
0xfdd2:	sub	rsp, 8
0xfdd6:	mov	r8d, dword ptr [rbx]
0xfdd9:	mov	rcx, r15
0xfddc:	mov	dword ptr [rsp + 0x14], eax
0xfde0:	push	qword ptr [rbx + 0x30]
0xfde3:	mov	rdx, r14
0xfde6:	push	qword ptr [rbx + 0x28]
0xfde9:	push	r10
0xfdeb:	xor	esi, esi
0xfded:	mov	r9d, ebp
0xfdf0:	xor	edi, edi
0xfdf2:	mov	qword ptr [rsp + 0x40], r10
0xfdf7:	call	0xe810


0x135ff:	mov	r15, rax
0x13602:	jmp	0x13633


0x13633:	mov	dword ptr [r15], 0
0x1363a:	mov	rsi, rbp
0x1363d:	mov	rdi, r12
0x13640:	call	0x2f30


0x2f30:	jmp	qword ptr [rip + 0x216f3a]




0x13645:	test	eax, eax
0x13647:	je	0x13608


0x13608:	mov	rdi, r12
0x1360b:	call	0x2c90


0x13649:	add	rsp, 8
0x1364d:	pop	rbx
0x1364e:	pop	rbp
0x1364f:	pop	r12
0x13651:	pop	r13
0x13653:	pop	r14
0x13655:	pop	r15
0x13657:	ret	


0x13610:	mov	rdi, rbp
0x13613:	lea	rbx, [rax + 1]
0x13617:	call	0x2c90


0x1361c:	add	rax, 1
0x13620:	add	r12, rbx
0x13623:	add	rbp, rax
0x13626:	sub	r14, rax
0x13629:	sub	r13, rbx
0x1362c:	je	0x13660


0x13660:	xor	eax, eax
0x13662:	test	r14, r14
0x13665:	setne	al
0x13668:	add	rsp, 8
0x1366c:	pop	rbx
0x1366d:	neg	eax
0x1366f:	pop	rbp
0x13670:	pop	r12
0x13672:	pop	r13
0x13674:	pop	r14
0x13676:	pop	r15
0x13678:	ret	


0x1362e:	test	r14, r14
0x13631:	je	0x13680


0x13680:	add	rsp, 8
0x13684:	mov	eax, 1
0x13689:	pop	rbx
0x1368a:	pop	rbp
0x1368b:	pop	r12
0x1368d:	pop	r13
0x1368f:	pop	r14
0x13691:	pop	r15
0x13693:	ret	


0xfc2d:	mov	dword ptr [rbp], r12d
0xfc31:	pop	rbx
0xfc32:	pop	rbp
0xfc33:	pop	r12
0xfc35:	ret	


0xfaee:	mov	dword ptr [rip + 0x20a683], r12d
0xfaf5:	mov	eax, dword ptr [rbp + 4]
0xfaf8:	shl	r15, 4
0xfafc:	sub	rsp, 8
0xfb00:	add	rbx, r15
0xfb03:	lea	r15, [rbp + 8]
0xfb07:	mov	r8d, dword ptr [rbp]
0xfb0b:	mov	r11, qword ptr [rbx]
0xfb0e:	mov	r12, qword ptr [rbx + 8]
0xfb12:	mov	rcx, r14
0xfb15:	or	eax, 1
0xfb18:	mov	dword ptr [rsp + 0x24], eax
0xfb1c:	push	qword ptr [rbp + 0x30]
0xfb1f:	mov	r9d, eax
0xfb22:	push	qword ptr [rbp + 0x28]
0xfb25:	push	r15
0xfb27:	mov	rsi, r11
0xfb2a:	mov	rdx, qword ptr [rsp + 0x28]
0xfb2f:	mov	rdi, r12
0xfb32:	mov	qword ptr [rsp + 0x30], r11
0xfb37:	call	0xe810


0x658f:	mov	edx, dword ptr [rbx]
0x6591:	test	edx, edx
0x6593:	jne	0x65a0


0x6595:	add	rsp, 8
0x6599:	pop	rbx
0x659a:	pop	rbp
0x659b:	pop	r12
0x659d:	pop	r13
0x659f:	ret	


0x65a0:	lea	rsi, [rip + 0xee53]
0x65a7:	mov	edx, 5
0x65ac:	xor	edi, edi
0x65ae:	call	0x2c70


0x65b3:	mov	esi, dword ptr [rbx]
0x65b5:	mov	rdx, rax
0x65b8:	xor	edi, edi
0x65ba:	xor	eax, eax
0x65bc:	call	0x2fe0


0x6e7c:	test	eax, eax
0x6e7e:	mov	ebp, eax
0x6e80:	mov	r15d, dword ptr [r12]
0x6e84:	je	0x6f40


0x6f40:	cmp	byte ptr [rsp + 0x20], 0
0x6f45:	je	0x6f70


0x6e8a:	cmp	byte ptr [rsp + 0x20], 0
0x6e8f:	mov	qword ptr [rip + 0x2134f2], r14
0x6e96:	jne	0x6f47


0x6f70:	xor	edi, edi
0x6f72:	xor	ebp, ebp
0x6f74:	call	0x2db0


0x6f47:	mov	rdi, r13
0x6f4a:	mov	dword ptr [rsp + 0x14], eax
0x6f4e:	call	0x6bb0


0x6e9c:	test	eax, eax
0x6e9e:	mov	dword ptr [r12], r15d
0x6ea2:	jns	0x6f5c


0x6ea8:	cmp	r15d, 0xb
0x6eac:	jne	0x6ef8


0x6f5c:	je	0x6f70


0x6eae:	movsd	xmm0, qword ptr [rsp + 8]
0x6eb4:	call	0x121d0


0x6ef8:	mov	rbx, qword ptr [rsp + 0x18]
0x6efd:	mov	edi, dword ptr [rbx]
0x6eff:	call	0x2db0


0x6f5e:	add	dword ptr [rip + 0x213417], 1
0x6f65:	jmp	0x6f10


0x6eb9:	movsd	xmm2, qword ptr [rsp + 8]
0x6ebf:	movapd	xmm1, xmm2
0x6ec3:	addsd	xmm1, xmm2
0x6ec7:	movsd	qword ptr [rsp + 8], xmm1
0x6ecd:	mov	eax, dword ptr [rip + 0x2134a9]
0x6ed3:	test	eax, eax
0x6ed5:	jle	0x6e3e


0x6e3e:	sub	rbx, 1
0x6e42:	cmp	rbx, -1
0x6e46:	je	0x6ef4


0x6edb:	xor	edi, edi
0x6edd:	call	0x6620


0x6ee2:	test	eax, eax
0x6ee4:	jne	0x6ecd


0x6ee6:	sub	rbx, 1
0x6eea:	cmp	rbx, -1
0x6eee:	jne	0x6e4c


0x6ecd:	mov	eax, dword ptr [rip + 0x2134a9]
0x6ed3:	test	eax, eax
0x6ed5:	jle	0x6e3e


0x6f53:	mov	eax, dword ptr [rsp + 0x14]
0x6f57:	jmp	0x6e9c


0x65c1:	lea	rsi, [rip + 0xd970]
0x65c8:	mov	edx, 5
0x65cd:	xor	edi, edi
0x65cf:	call	0x2c70


0x65d4:	xor	esi, esi
0x65d6:	mov	rdx, rax
0x65d9:	xor	edi, edi
0x65db:	xor	eax, eax
0x65dd:	call	0x2fe0


0x65e2:	mov	rdx, rbp
0x65e5:	mov	esi, 8
0x65ea:	xor	edi, edi
0x65ec:	call	0xffa0


0x120a9:	lea	rsi, [rip + 0x43d0]
0x120b0:	mov	edx, 5
0x120b5:	xor	edi, edi
0x120b7:	call	0x2c70


0x120bc:	xor	esi, esi
0x120be:	mov	rdx, rax
0x120c1:	xor	edi, edi
0x120c3:	xor	eax, eax
0x120c5:	call	0x2fe0


0x120ca:	mov	rcx, r13
0x120cd:	mov	rdx, rbp
0x120d0:	mov	esi, 8
0x120d5:	mov	edi, 1
0x120da:	call	0x10030


0x12060:	call	0x2b00


0x62cb:	nop	dword ptr [rax + rax]


0xb09c:	mov	r15, qword ptr [r14]
0xb09f:	test	r15, r15
0xb0a2:	je	0xb138


0xb138:	mov	rdi, qword ptr [rip + 0x20f0c1]
0xb13f:	mov	rax, qword ptr [rdi + 0x28]
0xb143:	cmp	rax, qword ptr [rdi + 0x30]
0xb147:	jae	0xb168


0xb0a8:	xor	r13d, r13d
0xb0ab:	xor	ebx, ebx
0xb0ad:	jmp	0xb0e8


0xb149:	lea	rdx, [rax + 1]
0xb14d:	mov	qword ptr [rdi + 0x28], rdx
0xb151:	mov	byte ptr [rax], 0xa
0xb154:	add	rsp, 8
0xb158:	pop	rbx
0xb159:	pop	rbp
0xb15a:	pop	r12
0xb15c:	pop	r13
0xb15e:	pop	r14
0xb160:	pop	r15
0xb162:	ret	


0xb168:	add	rsp, 8
0xb16c:	mov	esi, 0xa
0xb171:	pop	rbx
0xb172:	pop	rbp
0xb173:	pop	r12
0xb175:	pop	r13
0xb177:	pop	r14
0xb179:	pop	r15
0xb17b:	jmp	0x2d10


0xb0e8:	test	rbx, rbx
0xb0eb:	je	0xb0b0


0xb0b0:	mov	rdi, r15
0xb0b3:	add	rbx, 1
0xb0b7:	mov	r13, rbp
0xb0ba:	call	0x10390


0xb0ed:	mov	rdx, r12
0xb0f0:	mov	rsi, rbp
0xb0f3:	mov	rdi, r13
0xb0f6:	call	0x2df0


0xb0fb:	test	eax, eax
0xb0fd:	jne	0xb0b0


0xb0ff:	mov	rdi, r15
0xb102:	add	rbx, 1
0xb106:	add	rbp, r12
0xb109:	call	0x10390


0x1184c:	cmp	r12, 9
0x11850:	ja	0x11b90


0x11856:	lea	rdx, [rip + 0x4b8f]
0x1185d:	movsxd	rax, dword ptr [rdx + r12*4]
0x11861:	add	rax, rdx
0x11864:	jmp	rax


0x11b90:	mov	r10, qword ptr [rbx + 0x40]
0x11b94:	mov	r9, qword ptr [rbx + 0x38]
0x11b98:	mov	edx, 5
0x11b9d:	mov	rax, qword ptr [rbx + 0x10]
0x11ba1:	mov	r8, qword ptr [rbx + 8]
0x11ba5:	lea	rsi, [rip + 0x47bc]
0x11bac:	mov	r13, qword ptr [rbx + 0x30]
0x11bb0:	mov	r12, qword ptr [rbx + 0x28]
0x11bb4:	mov	r15, qword ptr [rbx + 0x20]
0x11bb8:	mov	r14, qword ptr [rbx + 0x18]
0x11bbc:	mov	qword ptr [rsp + 0x18], r10
0x11bc1:	mov	qword ptr [rsp + 0x10], r9
0x11bc6:	mov	qword ptr [rsp], rax
0x11bca:	mov	qword ptr [rsp + 8], r8
0x11bcf:	mov	rbx, qword ptr [rbx]
0x11bd2:	jmp	0x11962


0x11962:	xor	edi, edi
0x11964:	call	0x2c70


0x11969:	mov	r10, qword ptr [rsp + 0x18]
0x1196e:	push	r10
0x11970:	jmp	0x118b4


0x118b4:	mov	r9, qword ptr [rsp + 0x18]
0x118b9:	mov	rdx, rax
0x118bc:	mov	rcx, rbx
0x118bf:	mov	esi, 1
0x118c4:	mov	rdi, rbp
0x118c7:	xor	eax, eax
0x118c9:	push	r9
0x118cb:	push	r13
0x118cd:	push	r12
0x118cf:	push	r15
0x118d1:	push	r14
0x118d3:	mov	r9, qword ptr [rsp + 0x30]
0x118d8:	mov	r8, qword ptr [rsp + 0x38]
0x118dd:	call	0x3100


0x118e2:	add	rsp, 0x30
0x118e6:	add	rsp, 0x28
0x118ea:	pop	rbx
0x118eb:	pop	rbp
0x118ec:	pop	r12
0x118ee:	pop	r13
0x118f0:	pop	r14
0x118f2:	pop	r15
0x118f4:	ret	


0x11d8a:	lea	rsi, [rip + 0x43eb]
0x11d91:	mov	edx, 5
0x11d96:	xor	edi, edi
0x11d98:	call	0x2c70


0x11d9d:	lea	rcx, [rip + 0x3274]
0x11da4:	lea	rdx, [rip + 0x37ed]
0x11dab:	mov	rsi, rax
0x11dae:	mov	edi, 1
0x11db3:	xor	eax, eax
0x11db5:	call	0x2fa0


0x11dba:	mov	rbx, qword ptr [rip + 0x208407]
0x11dc1:	lea	rsi, [rip + 0x45e0]
0x11dc8:	xor	edi, edi
0x11dca:	mov	edx, 5
0x11dcf:	call	0x2c70


0x11dd4:	mov	rsi, rbx
0x11dd7:	mov	rdi, rax
0x11dda:	pop	rbx
0x11ddb:	jmp	0x2e10


0xa940:	mov	rbx, qword ptr [rip + 0x20f881]
0xa947:	lea	rsi, [rip + 0x97ca]
0xa94e:	mov	edx, 5
0xa953:	xor	edi, edi
0xa955:	call	0x2c70


0xa95a:	mov	rsi, rbx
0xa95d:	mov	rdi, rax
0xa960:	call	0x2e10


0xa965:	mov	rbx, qword ptr [rip + 0x20f85c]
0xa96c:	lea	rsi, [rip + 0x97e5]
0xa973:	mov	edx, 5
0xa978:	xor	edi, edi
0xa97a:	call	0x2c70


0xa97f:	mov	rsi, rbx
0xa982:	mov	rdi, rax
0xa985:	call	0x2e10


0xa98a:	mov	rbx, qword ptr [rip + 0x20f837]
0xa991:	lea	rsi, [rip + 0x97f8]
0xa998:	mov	edx, 5
0xa99d:	xor	edi, edi
0xa99f:	call	0x2c70


0xa9a4:	mov	rsi, rbx
0xa9a7:	mov	rdi, rax
0xa9aa:	call	0x2e10


0xa9af:	mov	rbx, qword ptr [rip + 0x20f812]
0xa9b6:	lea	rsi, [rip + 0xab3b]
0xa9bd:	mov	edx, 5
0xa9c2:	xor	edi, edi
0xa9c4:	call	0x2c70


0xa9c9:	mov	rsi, rbx
0xa9cc:	mov	rdi, rax
0xa9cf:	call	0x2e10


0xa9d4:	mov	rbx, qword ptr [rip + 0x20f7ed]
0xa9db:	lea	rsi, [rip + 0x97fe]
0xa9e2:	mov	edx, 5
0xa9e7:	xor	edi, edi
0xa9e9:	call	0x2c70


0xa9ee:	mov	rsi, rbx
0xa9f1:	mov	rdi, rax
0xa9f4:	call	0x2e10


0xa9f9:	mov	rbx, qword ptr [rip + 0x20f7c8]
0xaa00:	lea	rsi, [rip + 0x98a9]
0xaa07:	mov	edx, 5
0xaa0c:	xor	edi, edi
0xaa0e:	call	0x2c70


0xaa13:	mov	rsi, rbx
0xaa16:	mov	rdi, rax
0xaa19:	call	0x2e10


0xaa1e:	mov	rbx, qword ptr [rip + 0x20f7a3]
0xaa25:	lea	rsi, [rip + 0x995c]
0xaa2c:	mov	edx, 5
0xaa31:	xor	edi, edi
0xaa33:	call	0x2c70


0xaa38:	mov	rsi, rbx
0xaa3b:	mov	rdi, rax
0xaa3e:	call	0x2e10


0xaa43:	mov	rbx, qword ptr [rip + 0x20f77e]
0xaa4a:	lea	rsi, [rip + 0x9987]
0xaa51:	mov	edx, 5
0xaa56:	xor	edi, edi
0xaa58:	call	0x2c70


0xaa5d:	mov	rsi, rbx
0xaa60:	mov	rdi, rax
0xaa63:	call	0x2e10


0xaa68:	mov	rbx, qword ptr [rip + 0x20f759]
0xaa6f:	lea	rsi, [rip + 0x9a7a]
0xaa76:	mov	edx, 5
0xaa7b:	xor	edi, edi
0xaa7d:	call	0x2c70


0xaa82:	mov	rsi, rbx
0xaa85:	mov	rdi, rax
0xaa88:	call	0x2e10


0xaa8d:	mov	rbx, qword ptr [rip + 0x20f734]
0xaa94:	lea	rsi, [rip + 0xaa71]
0xaa9b:	mov	edx, 5
0xaaa0:	xor	edi, edi
0xaaa2:	call	0x2c70


0xaaa7:	mov	rsi, rbx
0xaaaa:	mov	rdi, rax
0xaaad:	call	0x2e10


0xaab2:	mov	rbx, qword ptr [rip + 0x20f70f]
0xaab9:	lea	rsi, [rip + 0x9b48]
0xaac0:	mov	edx, 5
0xaac5:	xor	edi, edi
0xaac7:	call	0x2c70


0xaacc:	mov	rsi, rbx
0xaacf:	mov	rdi, rax
0xaad2:	call	0x2e10


0xaad7:	mov	rbx, qword ptr [rip + 0x20f6ea]
0xaade:	lea	rsi, [rip + 0x9b9b]
0xaae5:	mov	edx, 5
0xaaea:	xor	edi, edi
0xaaec:	call	0x2c70


0xaaf1:	mov	rsi, rbx
0xaaf4:	mov	rdi, rax
0xaaf7:	call	0x2e10


0xaafc:	mov	rbx, qword ptr [rip + 0x20f6c5]
0xab03:	lea	rsi, [rip + 0x9c8e]
0xab0a:	mov	edx, 5
0xab0f:	xor	edi, edi
0xab11:	call	0x2c70


0xab16:	mov	rsi, rbx
0xab19:	mov	rdi, rax
0xab1c:	call	0x2e10


0xab21:	mov	rbx, qword ptr [rip + 0x20f6a0]
0xab28:	lea	rsi, [rip + 0x9dc9]
0xab2f:	mov	edx, 5
0xab34:	xor	edi, edi
0xab36:	call	0x2c70


0xab3b:	mov	rsi, rbx
0xab3e:	mov	rdi, rax
0xab41:	call	0x2e10


0xab46:	mov	rbx, qword ptr [rip + 0x20f67b]
0xab4d:	lea	rsi, [rip + 0x9e34]
0xab54:	mov	edx, 5
0xab59:	xor	edi, edi
0xab5b:	call	0x2c70


0xab60:	mov	rsi, rbx
0xab63:	mov	rdi, rax
0xab66:	call	0x2e10


0xab6b:	lea	rsi, [rip + 0x9eee]
0xab72:	xor	edi, edi
0xab74:	mov	edx, 5
0xab79:	call	0x2c70


0xab7e:	lea	rdx, [rip + 0xa998]
0xab85:	mov	rsi, rax
0xab88:	mov	edi, 1
0xab8d:	xor	eax, eax
0xab8f:	call	0x2fa0


0xab94:	mov	rbx, qword ptr [rip + 0x20f62d]
0xab9b:	lea	rsi, [rip + 0xa086]
0xaba2:	mov	edx, 5
0xaba7:	xor	edi, edi
0xaba9:	call	0x2c70


0xabae:	mov	rsi, rbx
0xabb1:	mov	rdi, rax
0xabb4:	call	0x2e10


0xabb9:	mov	rbx, qword ptr [rip + 0x20f608]
0xabc0:	lea	rsi, [rip + 0xa0a1]
0xabc7:	mov	edx, 5
0xabcc:	xor	edi, edi
0xabce:	call	0x2c70


0xabd3:	mov	rsi, rbx
0xabd6:	mov	rdi, rax
0xabd9:	call	0x2e10


0xabde:	mov	rbx, qword ptr [rip + 0x20f5e3]
0xabe5:	lea	rsi, [rip + 0xa0ac]
0xabec:	mov	edx, 5
0xabf1:	xor	edi, edi
0xabf3:	call	0x2c70


0xabf8:	mov	rsi, rbx
0xabfb:	mov	rdi, rax
0xabfe:	call	0x2e10


0xac03:	mov	rbx, qword ptr [rip + 0x20f5be]
0xac0a:	lea	rsi, [rip + 0xa0bf]
0xac11:	mov	edx, 5
0xac16:	xor	edi, edi
0xac18:	call	0x2c70


0xac1d:	mov	rsi, rbx
0xac20:	mov	rdi, rax
0xac23:	call	0x2e10


0xac28:	mov	rbx, qword ptr [rip + 0x20f599]
0xac2f:	lea	rsi, [rip + 0xa2fa]
0xac36:	mov	edx, 5
0xac3b:	xor	edi, edi
0xac3d:	call	0x2c70


0xac42:	mov	rsi, rbx
0xac45:	mov	rdi, rax
0xac48:	lea	rbx, [rip + 0xa9f0]
0xac4f:	call	0x2e10


0xac54:	lea	rax, [rip + 0xa8c7]
0xac5b:	lea	rcx, [rip + 0xa901]
0xac62:	mov	qword ptr [rsp + 0x60], 0
0xac6b:	mov	qword ptr [rsp + 0x68], 0
0xac74:	mov	rdx, rsp
0xac77:	mov	qword ptr [rsp], rax
0xac7b:	lea	rax, [rip + 0xa8a2]
0xac82:	mov	qword ptr [rsp + 0x30], rcx
0xac87:	lea	rcx, [rip + 0xa8df]
0xac8e:	mov	qword ptr [rsp + 8], rax
0xac93:	lea	rax, [rip + 0xa902]
0xac9a:	mov	qword ptr [rsp + 0x40], rcx
0xac9f:	lea	rcx, [rip + 0xa8d1]
0xaca6:	mov	qword ptr [rsp + 0x10], rax
0xacab:	lea	rax, [rip + 0xa882]
0xacb2:	mov	qword ptr [rsp + 0x50], rcx
0xacb7:	mov	qword ptr [rsp + 0x18], rax
0xacbc:	lea	rax, [rip + 0xa887]
0xacc3:	mov	qword ptr [rsp + 0x20], rax
0xacc8:	lea	rax, [rip + 0xa885]
0xaccf:	mov	qword ptr [rsp + 0x28], rax
0xacd4:	mov	qword ptr [rsp + 0x38], rax
0xacd9:	mov	qword ptr [rsp + 0x48], rax
0xacde:	mov	qword ptr [rsp + 0x58], rax
0xace3:	nop	dword ptr [rax + rax]
0xace8:	add	rdx, 0x10
0xacec:	mov	rdi, qword ptr [rdx]
0xacef:	test	rdi, rdi
0xacf2:	je	0xad07


0xad07:	mov	r12, qword ptr [rdx + 8]
0xad0b:	xor	edi, edi
0xad0d:	mov	edx, 5
0xad12:	lea	rsi, [rip + 0xa868]
0xad19:	test	r12, r12
0xad1c:	je	0xade3


0xacf4:	mov	ecx, 5
0xacf9:	mov	rsi, rbx
0xacfc:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xade3:	call	0x2c70


0xad22:	call	0x2c70


0xacfc:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xacfe:	seta	al
0xad01:	sbb	al, 0
0xad03:	test	al, al
0xad05:	jne	0xace8


0xace8:	add	rdx, 0x10
0xacec:	mov	rdi, qword ptr [rdx]
0xacef:	test	rdi, rdi
0xacf2:	je	0xad07


0xad27:	lea	rcx, [rip + 0xa2ea]
0xad2e:	lea	rdx, [rip + 0xa863]
0xad35:	mov	rsi, rax
0xad38:	mov	edi, 1
0xad3d:	xor	eax, eax
0xad3f:	call	0x2fa0


0xade8:	lea	rcx, [rip + 0xa229]
0xadef:	lea	rdx, [rip + 0xa7a2]
0xadf6:	mov	rsi, rax
0xadf9:	mov	edi, 1
0xadfe:	xor	eax, eax
0xae00:	call	0x2fa0


0xae05:	xor	esi, esi
0xae07:	mov	edi, 5
0xae0c:	call	0x2f90


0xae11:	test	rax, rax
0xae14:	je	0xae2e


0xae2e:	lea	rsi, [rip + 0xa775]
0xae35:	mov	edx, 5
0xae3a:	xor	edi, edi
0xae3c:	lea	r12, [rip + 0xa7fc]
0xae43:	lea	rbx, [rip + 0xa6f4]
0xae4a:	call	0x2c70


0xae16:	lea	rsi, [rip + 0xa789]
0xae1d:	mov	edx, 3
0xae22:	mov	rdi, rax
0xae25:	call	0x2b30


0xae4f:	lea	rcx, [rip + 0xa7e9]
0xae56:	lea	rdx, [rip + 0xa1bb]
0xae5d:	mov	rsi, rax
0xae60:	mov	edi, 1
0xae65:	xor	eax, eax
0xae67:	call	0x2fa0


0xae6c:	jmp	0xadb6


0xadb6:	lea	rsi, [rip + 0xa2cb]
0xadbd:	xor	edi, edi
0xadbf:	mov	edx, 5
0xadc4:	call	0x2c70


0xadc9:	mov	rcx, rbx
0xadcc:	mov	rsi, rax
0xadcf:	mov	rdx, r12
0xadd2:	mov	edi, 1
0xadd7:	xor	eax, eax
0xadd9:	call	0x2fa0


0xadde:	jmp	0xa916


0xad44:	xor	esi, esi
0xad46:	mov	edi, 5
0xad4b:	call	0x2f90


0xad50:	test	rax, rax
0xad53:	je	0xad71


0xad71:	lea	rsi, [rip + 0xa832]
0xad78:	xor	edi, edi
0xad7a:	mov	edx, 5
0xad7f:	call	0x2c70


0xad55:	lea	rsi, [rip + 0xa84a]
0xad5c:	mov	edx, 3
0xad61:	mov	rdi, rax
0xad64:	call	0x2b30


0xad84:	lea	rcx, [rip + 0xa8b4]
0xad8b:	lea	rdx, [rip + 0xa286]
0xad92:	mov	rsi, rax
0xad95:	mov	edi, 1
0xad9a:	xor	eax, eax
0xad9c:	call	0x2fa0


0xada1:	cmp	r12, rbx
0xada4:	lea	rcx, [rip + 0xa793]
0xadab:	lea	rbx, [rip + 0xa759]
0xadb2:	cmove	rbx, rcx
0xadb6:	lea	rsi, [rip + 0xa2cb]
0xadbd:	xor	edi, edi
0xadbf:	mov	edx, 5
0xadc4:	call	0x2c70


0x762e:	jmp	0x75a2


0xde08:	test	eax, eax
0xde0a:	jns	0xddb0


0xde0c:	test	byte ptr [rsp + 0xc], 2
0xde11:	jne	0xde48


0xddb0:	mov	ecx, 0x7fffffff
0xddb5:	sub	ecx, ebp
0xddb7:	cmp	ecx, eax
0xddb9:	jl	0xded0


0xde13:	mov	edi, dword ptr [rsp + 0x1c]
0xde17:	call	0x2bb0


0xded0:	mov	ebp, 0x7fffffff
0xded5:	jmp	0xde4d


0xddbf:	add	ebp, eax
0xddc1:	mov	rdi, r12
0xddc4:	add	rbx, r15
0xddc7:	call	0x3140


0x2bb0:	jmp	qword ptr [rip + 0x2170fa]


0x3140:	jmp	qword ptr [rip + 0x216e32]






0x7228:	test	eax, eax
0x722a:	je	0x7216


0x722c:	lea	rsi, [rip + 0xe278]
0x7233:	mov	edx, 5
0x7238:	xor	edi, edi
0x723a:	call	0x2c70


0x723f:	mov	rsi, rbp
0x7242:	mov	rdi, rax
0x7245:	call	0x6320


0x12b9e:	cmp	rax, -1
0x12ba2:	jne	0x12b5c


0x12ba4:	mov	rdi, rbx
0x12ba7:	pop	rbx
0x12ba8:	pop	rbp
0x12ba9:	pop	r12
0x12bab:	jmp	0x2c40


0x12ec0:	cmp	rax, -1
0x12ec4:	je	0x12ed2


0x12ed2:	pop	rbx
0x12ed3:	pop	rbp
0x12ed4:	pop	r12
0x12ed6:	ret	


0x12ec6:	and	dword ptr [rbx], 0xffffffef
0x12ec9:	mov	qword ptr [rbx + 0x90], rax
0x12ed0:	xor	eax, eax
0x12ed2:	pop	rbx
0x12ed3:	pop	rbp
0x12ed4:	pop	r12
0x12ed6:	ret	


0x8ddb:	mov	r15d, eax
0x8dde:	call	0x2b10


0x8de3:	test	r15d, r15d
0x8de6:	mov	r14, rax
0x8de9:	js	0x8eb0


0x8eb0:	cmp	byte ptr [rsp + 0x10], 0
0x8eb5:	mov	ebp, dword ptr [rax]
0x8eb7:	jne	0x8f82


0x8def:	cmp	byte ptr [rsp + 0x10], 0
0x8df4:	mov	rax, qword ptr [rip + 0x211245]
0x8dfb:	mov	qword ptr [rip + 0x21123e], rbx
0x8e02:	mov	qword ptr [rax], rbx
0x8e05:	je	0x8e15


0x8ebd:	cmp	ebp, 0x18
0x8ec0:	jne	0x8f3e


0x8f82:	mov	rdi, r13
0x8f85:	call	0x6bb0


0x8e15:	cmp	qword ptr [rip + 0x21160b], 0
0x8e1d:	mov	byte ptr [rbx + 0xc], 0
0x8e21:	je	0x8e3e


0x8e07:	mov	r12d, dword ptr [r14]
0x8e0a:	mov	rdi, r13
0x8e0d:	call	0x6bb0


0x8ec2:	cmp	byte ptr [rsp + 0xc], 1
0x8ec7:	jne	0x8f3e


0x8f3e:	mov	rsi, r12
0x8f41:	mov	edi, 4
0x8f46:	call	0x100c0


0x8e3e:	lea	rsi, [rip + 0xc6a5]
0x8e45:	mov	edi, r15d
0x8e48:	call	0x2f80


0x8e23:	mov	esi, 4
0x8e28:	mov	rdi, r13
0x8e2b:	call	0x6dd0


0x8ec9:	mov	rdi, rbx
0x8ecc:	xor	ebx, ebx
0x8ece:	call	0x31c0


0x8ed3:	jmp	0x8e5d


0x8e5d:	mov	rcx, qword ptr [rsp + 0x98]
0x8e65:	xor	rcx, qword ptr fs:[0x28]
0x8e6e:	mov	rax, rbx
0x8e71:	jne	0x8f1b


0x8e77:	add	rsp, 0xa8
0x8e7e:	pop	rbx
0x8e7f:	pop	rbp
0x8e80:	pop	r12
0x8e82:	pop	r13
0x8e84:	pop	r14
0x8e86:	pop	r15
0x8e88:	ret	


0x8f1b:	call	0x2ca0


0x8e30:	cmp	eax, 0
0x8e33:	mov	dword ptr [rbx + 8], eax
0x8e36:	jg	0x8e90


0x8e38:	je	0x8ed5


0x8e90:	mov	edi, r15d
0x8e93:	call	0x2db0


0x8ed5:	mov	edi, dword ptr [rsp + 0x14]
0x8ed9:	call	0x2db0


0x8e12:	mov	dword ptr [r14], r12d
0x8e15:	cmp	qword ptr [rip + 0x21160b], 0
0x8e1d:	mov	byte ptr [rbx + 0xc], 0
0x8e21:	je	0x8e3e


0x8f8a:	mov	dword ptr [r14], ebp
0x8f8d:	jmp	0x8ebd


0x1052d:	mov	edi, r15d
0x10530:	mov	rbp, rax
0x10533:	call	0x2db0


0x1059d:	movdqa	xmm0, xmmword ptr [rsp + 0x10]
0x105a3:	movups	xmmword ptr [rbx + 0x20], xmm0
0x105a7:	call	0x2c00


0x2c00:	jmp	qword ptr [rip + 0x2170d2]




0x10538:	cmp	rbp, 0x7ff
0x1053f:	jle	0x10664


0x10664:	test	rbp, rbp
0x10667:	mov	r15, r14
0x1066a:	mov	eax, 0x10
0x1066f:	cmovs	rbp, r12
0x10673:	lea	r12, [rsp + 0x10]
0x10678:	sub	r15, rbp
0x1067b:	cmp	r15, 0x10
0x1067f:	mov	rdi, r12
0x10682:	cmova	r15, rax
0x10686:	xor	esi, esi
0x10688:	call	0x2d60


0x10545:	mov	rdi, r13
0x10548:	call	0x10be0


0x1054d:	jmp	0x10497


0x1068d:	lea	rax, [r13 + rbp]
0x10692:	add	rbp, r15
0x10695:	mov	ecx, r15d
0x10698:	cmp	rbp, 0x7ff
0x1069f:	mov	rsi, r12
0x106a2:	mov	rdi, rax
0x106a5:	rep movsb	byte ptr [rdi], byte ptr [rsi]


0x106a7:	ja	0x10545


0x106a5:	rep movsb	byte ptr [rdi], byte ptr [rsi]


0x106ad:	mov	r15, r14
0x106b0:	mov	r8d, 4
0x106b6:	sub	r15, rbp
0x106b9:	mov	qword ptr [rsp + 8], r8
0x106be:	cmp	r15, 4
0x106c2:	cmova	r15, r8
0x106c6:	lea	rdx, [rbp + r15]
0x106cb:	add	rbp, r13
0x106ce:	mov	qword ptr [rsp], rdx
0x106d2:	call	0x2c00


0x8ede:	cmp	r15d, 1
0x8ee2:	je	0x8ef1


0x8ef1:	mov	edi, dword ptr [rsp + 0x10]
0x8ef5:	test	edi, edi
0x8ef7:	jne	0x8f76


0x8ee4:	mov	esi, 1
0x8ee9:	mov	edi, r15d
0x8eec:	call	0x8a60


0x8ef9:	mov	rdi, qword ptr [rip + 0x211528]
0x8f00:	xor	edx, edx
0x8f02:	xor	eax, eax
0x8f04:	mov	rsi, rdi
0x8f07:	call	0x3150


0x8f76:	xor	esi, esi
0x8f78:	call	0x8a60


0x3150:	jmp	qword ptr [rip + 0x216e2a]




0x8f7d:	jmp	0x8ef9


0x8e98:	mov	edi, dword ptr [rsp + 0x10]
0x8e9c:	call	0x2db0


0x8ea1:	mov	rdi, rbx
0x8ea4:	mov	r15d, dword ptr [rsp + 0x14]
0x8ea9:	call	0x67a0


0x6f04:	mov	edi, dword ptr [rbx + 4]
0x6f07:	call	0x2db0


0x6f0c:	mov	dword ptr [r12], r15d
0x6f10:	mov	rcx, qword ptr [rsp + 0xa8]
0x6f18:	xor	rcx, qword ptr fs:[0x28]
0x6f21:	mov	eax, ebp
0x6f23:	jne	0x6fbb


0x6f79:	mov	edi, 1
0x6f7e:	call	0x2db0


0x6f83:	jmp	0x6f10


0xe4ca:	mov	edi, dword ptr [rbx + 4]
0xe4cd:	call	0x2db0


0xe4d2:	mov	dword ptr [rbx], r13d
0xe4d5:	mov	dword ptr [rbx + 4], r14d
0xe4d9:	mov	dword ptr [rbp], r12d
0xe4dd:	mov	r12d, 0xffffffff
0xe4e3:	jmp	0xe446


0x12dc3:	mov	ebx, 0xffffffff
0x12dc8:	mov	dword ptr [rbp], r12d
0x12dcc:	jmp	0x12ca0


0x8c09:	mov	dword ptr [rbp], 0x18
0x8c10:	mov	qword ptr [r13 + rbx*8], 0
0x8c19:	jmp	0x8bc8


0x8c5b:	test	r14d, r14d
0x8c5e:	jne	0x8cb4


0x8c60:	mov	edi, dword ptr [rsp + 0x14]
0x8c64:	cmp	edi, 1
0x8c67:	je	0x8c73


0x8cb4:	xor	esi, esi
0x8cb6:	mov	edi, r14d
0x8cb9:	call	0x8a60


0x8c73:	mov	rdi, qword ptr [rip + 0x2117ae]
0x8c7a:	lea	rdx, [rip + 0xc866]
0x8c81:	xor	ecx, ecx
0x8c83:	xor	eax, eax
0x8c85:	mov	rsi, rdi
0x8c88:	call	0x3150


0x8c69:	mov	esi, 1
0x8c6e:	call	0x8a60


0x8cbe:	jmp	0x8c60


0x1277a:	mov	edx, dword ptr [rsp + 8]
0x1277e:	mov	rsi, qword ptr [rax]
0x12781:	mov	rax, rbp
0x12784:	jmp	0x12797


0x12797:	movzx	ecx, bl
0x1279a:	test	byte ptr [rsi + rcx*2 + 1], 0x20
0x1279f:	jne	0x12790


0x127a1:	cmp	bl, 0x2d
0x127a4:	je	0x127f8


0x12790:	add	rax, 1
0x12794:	movzx	ebx, byte ptr [rax]
0x12797:	movzx	ecx, bl
0x1279a:	test	byte ptr [rsi + rcx*2 + 1], 0x20
0x1279f:	jne	0x12790


0x127f8:	mov	ebp, 4
0x127fd:	mov	rdi, qword ptr [rsp + 0x18]
0x12802:	xor	rdi, qword ptr fs:[0x28]
0x1280b:	mov	eax, ebp
0x1280d:	jne	0x12aa0


0x127a6:	xor	ecx, ecx
0x127a8:	mov	rsi, r15
0x127ab:	mov	rdi, rbp
0x127ae:	call	0x2d80


0x12813:	add	rsp, 0x28
0x12817:	pop	rbx
0x12818:	pop	rbp
0x12819:	pop	r12
0x1281b:	pop	r13
0x1281d:	pop	r14
0x1281f:	pop	r15
0x12821:	ret	


0x12aa0:	call	0x2ca0


0x2d80:	jmp	qword ptr [rip + 0x217012]




0x122aa:	mov	edx, dword ptr [rsp + 8]
0x122ae:	mov	rsi, qword ptr [rax]
0x122b1:	mov	rax, rbp
0x122b4:	jmp	0x122c7


0x122c7:	movzx	ecx, bl
0x122ca:	test	byte ptr [rsi + rcx*2 + 1], 0x20
0x122cf:	jne	0x122c0


0x122d1:	cmp	bl, 0x2d
0x122d4:	je	0x12328


0x122c0:	add	rax, 1
0x122c4:	movzx	ebx, byte ptr [rax]
0x122c7:	movzx	ecx, bl
0x122ca:	test	byte ptr [rsi + rcx*2 + 1], 0x20
0x122cf:	jne	0x122c0


0x12328:	mov	ebp, 4
0x1232d:	mov	rdi, qword ptr [rsp + 0x18]
0x12332:	xor	rdi, qword ptr fs:[0x28]
0x1233b:	mov	eax, ebp
0x1233d:	jne	0x125d0


0x122d6:	mov	rsi, r15
0x122d9:	mov	rdi, rbp
0x122dc:	call	0x3080


0x12343:	add	rsp, 0x28
0x12347:	pop	rbx
0x12348:	pop	rbp
0x12349:	pop	r12
0x1234b:	pop	r13
0x1234d:	pop	r14
0x1234f:	pop	r15
0x12351:	ret	


0x125d0:	call	0x2ca0


0x122e1:	mov	rcx, qword ptr [r15]
0x122e4:	mov	rbx, rax
0x122e7:	cmp	rcx, rbp
0x122ea:	je	0x12318


0x12318:	test	r13, r13
0x1231b:	mov	qword ptr [rsp + 8], rcx
0x12320:	jne	0x12360


0x122ec:	mov	eax, dword ptr [r12]
0x122f0:	test	eax, eax
0x122f2:	je	0x12358


0x12360:	movzx	r12d, byte ptr [rbp]
0x12365:	test	r12b, r12b
0x12368:	je	0x12328


0x12358:	xor	ebp, ebp
0x1235a:	jmp	0x122fe


0x122f4:	cmp	eax, 0x22
0x122f7:	mov	ebp, 1
0x122fc:	jne	0x12328


0x1236a:	movsx	esi, r12b
0x1236e:	mov	rdi, r13
0x12371:	xor	ebp, ebp
0x12373:	call	0x2cf0


0x122fe:	test	r13, r13
0x12301:	je	0x1230c


0x2cf0:	jmp	qword ptr [rip + 0x21705a]


0x1230c:	mov	qword ptr [r14], rbx
0x1230f:	jmp	0x1232d


0x12303:	movzx	r12d, byte ptr [rcx]
0x12307:	test	r12b, r12b
0x1230a:	jne	0x12387




0x1232d:	mov	rdi, qword ptr [rsp + 0x18]
0x12332:	xor	rdi, qword ptr fs:[0x28]
0x1233b:	mov	eax, ebp
0x1233d:	jne	0x125d0


0x12387:	movsx	esi, r12b
0x1238b:	mov	rdi, r13
0x1238e:	mov	qword ptr [rsp + 8], rcx
0x12393:	call	0x2cf0


0xde94:	mov	edx, dword ptr [rsp + 0xc]
0xde98:	mov	rcx, qword ptr [rax]
0xde9b:	xor	ebp, ebp
0xde9d:	and	edx, 2
0xdea0:	add	rbx, 1
0xdea4:	movzx	eax, byte ptr [rbx - 1]
0xdea8:	movzx	eax, word ptr [rcx + rax*2]
0xdeac:	test	ah, 0x40
0xdeaf:	jne	0xdeb9


0xdeb1:	test	edx, edx
0xdeb3:	jne	0xde48


0xdeb9:	cmp	ebp, 0x7fffffff
0xdebf:	je	0xde4d


0xdeb5:	test	al, 2
0xdeb7:	jne	0xdec4


0xdec1:	add	ebp, 1
0xdec4:	cmp	r13, rbx
0xdec7:	jne	0xdea0


0xdec4:	cmp	r13, rbx
0xdec7:	jne	0xdea0


0xdec9:	jmp	0xde4d


0xdea0:	add	rbx, 1
0xdea4:	movzx	eax, byte ptr [rbx - 1]
0xdea8:	movzx	eax, word ptr [rcx + rax*2]
0xdeac:	test	ah, 0x40
0xdeaf:	jne	0xdeb9


0x3388:	lea	rdi, [rip + 0x1220d]
0x338f:	call	0x2c20


0x2c20:	jmp	qword ptr [rip + 0x2170c2]




0xe650:	mov	rdx, qword ptr [rsp]
0xe654:	cmp	byte ptr [rdx], 0
0xe657:	jne	0xe620


0xe659:	cmp	rax, -0x80000000
0xe65f:	jl	0xe672


0xe672:	mov	ebx, 0x80000000
0xe677:	jmp	0xe620


0xe661:	cmp	rax, 0x7fffffff
0xe667:	mov	ebx, 0x7fffffff
0xe66c:	cmovle	rbx, rax
0xe670:	jmp	0xe620


0xe35a:	test	eax, eax
0xe35c:	jne	0xe3a0


0xe35e:	mov	rax, qword ptr [rsp + 0x38]
0xe363:	test	rax, rax
0xe366:	js	0xe3d0


0xe3a0:	call	0xe1f0


0xe3d0:	mov	rdx, rax
0xe3d3:	pxor	xmm0, xmm0
0xe3d7:	shr	rdx, 1
0xe3da:	and	eax, 1
0xe3dd:	or	rdx, rax
0xe3e0:	cvtsi2sd	xmm0, rdx
0xe3e5:	addsd	xmm0, xmm0
0xe3e9:	jmp	0xe371


0xe368:	pxor	xmm0, xmm0
0xe36c:	cvtsi2sd	xmm0, rax
0xe371:	mov	rax, qword ptr [rsp + 0x48]
0xe376:	test	rax, rax
0xe379:	js	0xe3b0


0xe371:	mov	rax, qword ptr [rsp + 0x48]
0xe376:	test	rax, rax
0xe379:	js	0xe3b0


0xe3b0:	mov	rdx, rax
0xe3b3:	pxor	xmm1, xmm1
0xe3b7:	shr	rdx, 1
0xe3ba:	and	eax, 1
0xe3bd:	or	rdx, rax
0xe3c0:	cvtsi2sd	xmm1, rdx
0xe3c5:	addsd	xmm1, xmm1
0xe3c9:	jmp	0xe384


0xe37b:	pxor	xmm1, xmm1
0xe37f:	cvtsi2sd	xmm1, rax
0xe384:	mov	eax, dword ptr [rsp + 0x78]
0xe388:	addsd	xmm0, xmm1
0xe38c:	pxor	xmm1, xmm1
0xe390:	cvtsi2sd	xmm1, rax
0xe395:	jmp	0xe32c


0xe384:	mov	eax, dword ptr [rsp + 0x78]
0xe388:	addsd	xmm0, xmm1
0xe38c:	pxor	xmm1, xmm1
0xe390:	cvtsi2sd	xmm1, rax
0xe395:	jmp	0xe32c


0xe3a5:	mulsd	xmm0, qword ptr [rip + 0x761b]
0xe3ad:	jmp	0xe330


0xe330:	mov	rax, qword ptr [rsp + 0x88]
0xe338:	xor	rax, qword ptr fs:[0x28]
0xe341:	jne	0xe3eb


0xe27a:	test	eax, eax
0xe27c:	movsd	xmm0, qword ptr [rip + 0x7914]
0xe284:	jne	0xe250


0xe286:	mov	rax, qword ptr [rsp + 0x30]
0xe28b:	test	rax, rax
0xe28e:	js	0xe2b0


0xe250:	mov	rax, qword ptr [rsp + 0x88]
0xe258:	xor	rax, qword ptr fs:[0x28]
0xe261:	jne	0xe2cb


0xe2b0:	mov	rdx, rax
0xe2b3:	pxor	xmm0, xmm0
0xe2b7:	shr	rdx, 1
0xe2ba:	and	eax, 1
0xe2bd:	or	rdx, rax
0xe2c0:	cvtsi2sd	xmm0, rdx
0xe2c5:	addsd	xmm0, xmm0
0xe2c9:	jmp	0xe299


0xe290:	pxor	xmm0, xmm0
0xe294:	cvtsi2sd	xmm0, rax
0xe299:	mov	eax, dword ptr [rsp + 0x78]
0xe29d:	pxor	xmm1, xmm1
0xe2a1:	cvtsi2sd	xmm1, rax
0xe2a6:	jmp	0xe24c


0xe299:	mov	eax, dword ptr [rsp + 0x78]
0xe29d:	pxor	xmm1, xmm1
0xe2a1:	cvtsi2sd	xmm1, rax
0xe2a6:	jmp	0xe24c


0xdf6d:	cdqe	
0xdf6f:	test	rax, rax
0xdf72:	je	0xdf41


0xdf74:	jmp	0xdf43


0xdf43:	mov	rcx, qword ptr [rsp + 0x88]
0xdf4b:	xor	rcx, qword ptr fs:[0x28]
0xdf54:	jne	0xdf76


0xad69:	test	eax, eax
0xad6b:	jne	0xae78


0xae78:	mov	r13, qword ptr [rip + 0x20f349]
0xae7f:	lea	rsi, [rip + 0xa1ba]
0xae86:	xor	edi, edi
0xae88:	mov	edx, 5
0xae8d:	call	0x2c70


0xae92:	mov	rsi, r13
0xae95:	mov	rdi, rax
0xae98:	call	0x2e10


0xae9d:	jmp	0xad71


0xae2a:	test	eax, eax
0xae2c:	jne	0xae71


0xae71:	lea	r12, [rip + 0xa7c7]
0xae78:	mov	r13, qword ptr [rip + 0x20f349]
0xae7f:	lea	rsi, [rip + 0xa1ba]
0xae86:	xor	edi, edi
0xae88:	mov	edx, 5
0xae8d:	call	0x2c70


0xaf67:	test	eax, eax
0xaf69:	jne	0xaf47


0xaf6b:	mov	rdi, r14
0xaf6e:	call	0x2c90


0xaf47:	add	rbx, 1
0xaf4b:	add	rbp, r13
0xaf4e:	mov	r14, qword ptr [r15 + rbx*8]
0xaf52:	test	r14, r14
0xaf55:	je	0xaf98


0xaf98:	cmp	byte ptr [rsp + 0x17], 0
0xaf9d:	mov	rax, -2
0xafa4:	cmove	rax, qword ptr [rsp]
0xafa9:	mov	qword ptr [rsp], rax
0xafad:	mov	rax, qword ptr [rsp]
0xafb1:	add	rsp, 0x28
0xafb5:	pop	rbx
0xafb6:	pop	rbp
0xafb7:	pop	r12
0xafb9:	pop	r13
0xafbb:	pop	r14
0xafbd:	pop	r15
0xafbf:	ret	


0xaf73:	cmp	rax, r12
0xaf76:	je	0xafd0


0xafd0:	mov	qword ptr [rsp], rbx
0xafd4:	jmp	0xafad


0xaf78:	cmp	qword ptr [rsp], -1
0xaf7d:	jne	0xaf10


0xaf7f:	mov	qword ptr [rsp], rbx
0xaf83:	add	rbx, 1
0xaf87:	add	rbp, r13
0xaf8a:	mov	r14, qword ptr [r15 + rbx*8]
0xaf8e:	test	r14, r14
0xaf91:	jne	0xaf57


0xaf10:	mov	rax, qword ptr [rsp + 0x18]
0xaf15:	test	rax, rax
0xaf18:	je	0xafc0


0xafc0:	mov	byte ptr [rsp + 0x17], 1
0xafc5:	jmp	0xaf47


0xaf1e:	mov	rdi, qword ptr [rsp]
0xaf22:	mov	rdx, r13
0xaf25:	mov	rsi, rbp
0xaf28:	imul	rdi, r13
0xaf2c:	add	rdi, rax
0xaf2f:	call	0x2df0


0xaf34:	test	eax, eax
0xaf36:	movzx	eax, byte ptr [rsp + 0x17]
0xaf3b:	mov	ecx, 1
0xaf40:	cmovne	eax, ecx
0xaf43:	mov	byte ptr [rsp + 0x17], al
0xaf47:	add	rbx, 1
0xaf4b:	add	rbp, r13
0xaf4e:	mov	r14, qword ptr [r15 + rbx*8]
0xaf52:	test	r14, r14
0xaf55:	je	0xaf98


0xc5ae:	test	eax, eax
0xc5b0:	jne	0xc2ce


0xc5b6:	mov	r13, qword ptr [rsp + 0x18]
0xc5bb:	sub	r13, rbx
0xc5be:	jmp	0xc4d1


0x6960:	pop	rbx
0x6961:	mov	rdi, rbp
0x6964:	pop	rbp
0x6965:	pop	r12
0x6967:	jmp	0x2ef0


0x2ef0:	jmp	qword ptr [rip + 0x216f5a]




0x12e77:	mov	rdi, rbx
0x12e7a:	pop	rbx
0x12e7b:	jmp	0x2f00


0x1114f:	test	eax, eax
0x11151:	sete	al
0x11154:	add	rsp, 0x10
0x11158:	pop	rbx
0x11159:	pop	rbp
0x1115a:	pop	r12
0x1115c:	ret	


0x8e4d:	mov	rcx, qword ptr [rsp]
0x8e51:	test	rax, rax
0x8e54:	mov	qword ptr [rcx], rax
0x8e57:	je	0x8f20


0x8f20:	lea	rsi, [rip + 0xb161]
0x8f27:	xor	edi, edi
0x8f29:	mov	edx, 5
0x8f2e:	call	0x2c70


0x8f33:	mov	rsi, rbp
0x8f36:	mov	rdi, rax
0x8f39:	call	0x6320


0x71c3:	jmp	0x711f


0x98a8:	test	rax, rax
0x98ab:	je	0x9940


0x9940:	mov	rax, qword ptr [rsp + 0x28]
0x9945:	mov	r15, qword ptr [rsp]
0x9949:	cmp	byte ptr [rax + 0x30], 0
0x994d:	je	0x97e0


0x98b1:	lea	r11, [rax + 1]
0x98b5:	sub	r14, 0x20
0x98b9:	mov	byte ptr [rax], 0
0x98bc:	mov	qword ptr [r14], r13
0x98bf:	mov	r15, r11
0x98c2:	sub	r15, r13
0x98c5:	cmp	rbp, r15
0x98c8:	mov	qword ptr [r14 + 8], r15
0x98cc:	cmovb	rbp, r15
0x98d0:	sub	r12, qword ptr [rsp + 8]
0x98d5:	test	rbx, rbx
0x98d8:	je	0x9892


0x97e0:	cmp	r12, qword ptr [rsp + 0x10]
0x97e5:	jbe	0x9a2f


0x9953:	mov	r15, r13
0x9956:	mov	rsi, qword ptr [rsp + 0x28]
0x995b:	mov	rax, qword ptr [rsp + 0x18]
0x9960:	mov	rdi, qword ptr [rsi]
0x9963:	mov	rdx, qword ptr [rsi + 0x18]
0x9967:	sub	rax, rdi
0x996a:	mov	qword ptr [rsi + 8], rax
0x996e:	lea	rax, [rdi + rdx]
0x9972:	sub	rax, r14
0x9975:	sar	rax, 5
0x9979:	test	rax, rax
0x997c:	mov	qword ptr [rsi + 0x10], rax
0x9980:	jne	0x9a84


0x9892:	mov	r13, r11
0x9895:	mov	rdx, qword ptr [rsp]
0x9899:	mov	esi, dword ptr [rsp + 0x30]
0x989d:	mov	rdi, r11
0x98a0:	sub	rdx, r11
0x98a3:	call	0x2de0


0x98da:	cmp	qword ptr [rbx + 0x10], -1
0x98df:	je	0x98ef


0x98ef:	cmp	qword ptr [rbx], -1
0x98f3:	mov	qword ptr [r14 + 0x18], rax
0x98f7:	jne	0x9880


0x98e1:	mov	rdx, rbx
0x98e4:	mov	rsi, r15
0x98e7:	mov	rdi, r13
0x98ea:	call	0x6a60


0x98f9:	cmp	byte ptr [rbx + 0x30], 0
0x98fd:	jne	0x99e0


0x9880:	mov	rdx, rbx
0x9883:	mov	rsi, r15
0x9886:	mov	rdi, r13
0x9889:	call	0x6970


0x9903:	mov	qword ptr [r14 + 0x10], r13
0x9907:	jmp	0x9892


0x99e0:	movzx	eax, byte ptr [r13]
0x99e5:	lea	rdi, [rip + 0x210d74]
0x99ec:	cmp	byte ptr [rdi + rax], 0
0x99f0:	je	0x9903


0x9a16:	jmp	0x9903


0x9a00:	add	r13, 1
0x9a04:	movzx	eax, byte ptr [r13]
0x9a09:	lea	rcx, [rip + 0x210d50]
0x9a10:	cmp	byte ptr [rcx + rax], 0
0x9a14:	jne	0x9a00


0x988e:	mov	qword ptr [r14 + 0x10], rax
0x9892:	mov	r13, r11
0x9895:	mov	rdx, qword ptr [rsp]
0x9899:	mov	esi, dword ptr [rsp + 0x30]
0x989d:	mov	rdi, r11
0x98a0:	sub	rdx, r11
0x98a3:	call	0x2de0


0x8177:	lea	rbx, [rax + 1]
0x817b:	cmp	qword ptr [rsp + 0x48], r13
0x8180:	lea	rbp, [rbx + r13]
0x8184:	jae	0x85c7


0x818a:	movabs	rax, 0x5555555555555554
0x8194:	cmp	rbp, rax
0x8197:	ja	0x81a1


0x85c7:	cmp	qword ptr [rsp + 0x48], rbp
0x85cc:	jb	0x818a


0x8199:	lea	rbp, [rbp + rbp*2]
0x819e:	shr	rbp, 1
0x81a1:	mov	rdi, qword ptr [rsp + 0x68]
0x81a6:	call	0x31c0


0x81a1:	mov	rdi, qword ptr [rsp + 0x68]
0x81a6:	call	0x31c0


0x85d2:	jmp	0x8013


0x8013:	mov	rax, qword ptr [rsp + 0x10]
0x8018:	add	rax, r13
0x801b:	cmp	qword ptr [rsp + 0x50], r12
0x8020:	mov	qword ptr [rsp + 0x70], rax
0x8025:	ja	0x8510


0x81ab:	mov	rdi, rbp
0x81ae:	call	0x11de0


0x81b3:	cmp	qword ptr [rsp + 0x50], r12
0x81b8:	mov	qword ptr [rsp + 0x10], rax
0x81bd:	ja	0x84e8


0x81c3:	mov	rax, qword ptr [rsp + 0x10]
0x81c8:	mov	rcx, qword ptr [rsp + 0x20]
0x81cd:	add	rax, r13
0x81d0:	cmp	qword ptr [rsp + 0x60], rcx
0x81d5:	mov	qword ptr [rsp + 0x70], rax
0x81da:	ja	0x84b0


0x84e8:	mov	rdx, r13
0x84eb:	mov	rsi, r12
0x84ee:	mov	rdi, rax
0x84f1:	call	0x2e30


0x81e0:	cmp	qword ptr [rsp + 0x50], r12
0x81e5:	jbe	0x83a0


0x84b0:	mov	rdx, rbx
0x84b3:	mov	rsi, rcx
0x84b6:	mov	rdi, rax
0x84b9:	call	0x2e30


0x83a0:	mov	rcx, qword ptr [rsp + 0x20]
0x83a5:	cmp	qword ptr [rsp + 0x60], rcx
0x83aa:	mov	rax, qword ptr [rsp + 0x10]
0x83af:	mov	qword ptr [rsp + 0x68], rax
0x83b4:	ja	0x8040


0x81eb:	mov	rdi, r12
0x81ee:	call	0x2c90


0x81f3:	lea	r12, [r12 + rax + 1]
0x81f8:	mov	rax, qword ptr [rsp + 0x10]
0x81fd:	mov	qword ptr [rsp + 0x48], rbp
0x8202:	mov	qword ptr [rsp + 0x68], rax
0x8207:	jmp	0x805e


0x84be:	cmp	qword ptr [rsp + 0x50], r12
0x84c3:	jbe	0x83a0


0x84c9:	mov	rdi, r12
0x84cc:	call	0x2c90


0x84d1:	lea	r12, [r12 + rax + 1]
0x84d6:	mov	rax, qword ptr [rsp + 0x10]
0x84db:	mov	qword ptr [rsp + 0x68], rax
0x84e0:	jmp	0x8040


0x84f6:	jmp	0x81c3


0x8150:	mov	rdx, qword ptr [rsp + 0x20]
0x8155:	cmp	qword ptr [rsp + 0x60], rdx
0x815a:	lea	r13, [rax + 1]
0x815e:	jbe	0x817b


0x817b:	cmp	qword ptr [rsp + 0x48], r13
0x8180:	lea	rbp, [rbx + r13]
0x8184:	jae	0x85c7


0x8160:	cmp	rbp, r13
0x8163:	jae	0x86c3


0x8169:	xor	edx, edx
0x816b:	xor	edi, edi
0x816d:	mov	rsi, qword ptr [rsp + 0x20]
0x8172:	call	0x6560


0x86c3:	mov	rdx, qword ptr [rsp + 0x48]
0x86c8:	mov	rax, qword ptr [rsp + 0x10]
0x86cd:	sub	rdx, r13
0x86d0:	lea	rdi, [rax + r13]
0x86d4:	jmp	0x816d


0xa723:	test	rax, rax
0xa726:	je	0xa6f0


0xa6f0:	mov	rax, qword ptr [rsp + 0x40]
0xa6f5:	mov	rsi, qword ptr [rbp]
0xa6f9:	sub	rbx, 1
0xa6fd:	mov	r12, rbp
0xa700:	mov	rdi, qword ptr [rax + r13]
0xa704:	call	0x71f0


0xa728:	mov	rbp, qword ptr [rsp + 0x10]
0xa72d:	lea	r11, [rax + 0xd]
0xa731:	mov	r9, qword ptr [rsp + 0x40]
0xa736:	mov	rcx, qword ptr [rsp + 0x48]
0xa73b:	mov	rdx, rbx
0xa73e:	mov	rdi, r14
0xa741:	mov	r8, r11
0xa744:	mov	qword ptr [rsp + 0x20], rax
0xa749:	mov	qword ptr [rsp + 0x18], r11
0xa74e:	cmp	rbp, rbx
0xa751:	mov	r10, rbp
0xa754:	cmova	r10, rbx
0xa758:	mov	rsi, r10
0xa75b:	mov	qword ptr [rsp + 0x10], r10
0xa760:	call	0x9ae0


0xa865:	mov	rcx, qword ptr [rsp + 0x48]
0xa86a:	lea	r14, [rax + 0xd]
0xa86e:	mov	edx, 1
0xa873:	xor	esi, esi
0xa875:	mov	rdi, rbx
0xa878:	mov	r15, rax
0xa87b:	mov	r8, r14
0xa87e:	call	0xa2f0


0xa4bb:	mov	rdx, qword ptr [rsp + 0x20]
0xa4c0:	mov	r10, qword ptr [rsp + 0x28]
0xa4c5:	lea	r15, [rax + 0xd]
0xa4c9:	mov	rcx, qword ptr [rsp + 0x48]
0xa4ce:	mov	rsi, rbp
0xa4d1:	mov	qword ptr [rsp + 0x18], rax
0xa4d6:	mov	r8, r15
0xa4d9:	cmp	rdx, rbp
0xa4dc:	mov	rdi, r10
0xa4df:	cmovbe	rsi, rdx
0xa4e3:	call	0xa2f0


0xa40c:	mov	edx, dword ptr [rip + 0x20fc12]
0xa412:	lea	r13, [rax + 0xd]
0xa416:	mov	rsi, rbp
0xa419:	mov	rdi, rbx
0xa41c:	mov	rcx, qword ptr [rsp + 0x48]
0xa421:	mov	r15, rax
0xa424:	mov	r8, r13
0xa427:	cmp	rdx, rbp
0xa42a:	cmovbe	rsi, rdx
0xa42e:	shl	rdi, 4
0xa432:	add	rdi, r14
0xa435:	call	0xa2f0


0x11d26:	mov	rax, qword ptr [rsp + 0x78]
0x11d2b:	xor	rax, qword ptr fs:[0x28]
0x11d34:	jne	0x11d40


0x11d36:	add	rsp, 0xb8
0x11d3d:	pop	rbx
0x11d3e:	pop	rbp
0x11d3f:	ret	


0x11d40:	call	0x2ca0


0x11c50:	mov	rax, qword ptr [rsp + 0x58]
0x11c55:	xor	rax, qword ptr fs:[0x28]
0x11c5e:	jne	0x11c65


0x11c60:	add	rsp, 0x68
0x11c64:	ret	


0x11c65:	call	0x2ca0


0x13537:	test	eax, eax
0x13539:	mov	r12d, eax
0x1353c:	js	0x13578


0x13578:	call	0x2b10


0x1353e:	mov	rdi, rbx
0x13541:	call	0x12b40


0x1357d:	mov	r12d, dword ptr [rax]
0x13580:	mov	rbp, rax
0x13583:	mov	rdi, rbx
0x13586:	call	0x12b40


0x11796:	mov	r12d, eax
0x11799:	call	0x2b10


0x1179e:	mov	r13d, dword ptr [rax]
0x117a1:	mov	rbp, rax
0x117a4:	mov	edi, ebx
0x117a6:	call	0x2db0


0x117ab:	mov	ebx, r12d
0x117ae:	mov	dword ptr [rbp], r13d
0x117b2:	add	rsp, 8
0x117b6:	mov	eax, ebx
0x117b8:	pop	rbx
0x117b9:	pop	rbp
0x117ba:	pop	r12
0x117bc:	pop	r13
0x117be:	ret	


0x1370b:	movzx	r9d, byte ptr [rsp + 0xf]
0x13711:	movzx	r8d, byte ptr [rsp + 8]
0x13717:	mov	edx, eax
0x13719:	mov	byte ptr [r13], r9b
0x1371d:	mov	byte ptr [r12], r8b
0x13721:	add	rsp, 0x18
0x13725:	mov	eax, edx
0x13727:	pop	rbx
0x13728:	pop	rbp
0x13729:	pop	r12
0x1372b:	pop	r13
0x1372d:	pop	r14
0x1372f:	pop	r15
0x13731:	ret	


0x6ffc:	cmp	eax, 4
0x6fff:	ja	0x7021


0x7001:	lea	rdx, [rip + 0xc910]
0x7008:	mov	eax, eax
0x700a:	movsxd	rax, dword ptr [rdx + rax*4]
0x700e:	add	rax, rdx
0x7011:	jmp	rax


0x7021:	mov	rax, qword ptr [rsp + 8]
0x7026:	mov	rbx, qword ptr [rsp + 0x18]
0x702b:	xor	rbx, qword ptr fs:[0x28]
0x7034:	jne	0x7059


0x7036:	add	rsp, 0x20
0x703a:	pop	rbx
0x703b:	pop	rbp
0x703c:	pop	r12
0x703e:	ret	


0x7059:	call	0x2ca0


0x3394:	mov	edi, 3
0x3399:	mov	dword ptr [rip + 0x216d8d], 2
0x33a3:	call	0xc5e0


0x33a8:	mov	edi, 2
0x33ad:	mov	byte ptr [rip + 0x2174ce], al
0x33b3:	call	0xc5e0


0x33b8:	mov	r14d, eax
0x33bb:	mov	byte ptr [rip + 0x2174bf], al
0x33c1:	call	0x2bc0


0x2bc0:	jmp	qword ptr [rip + 0x2170f2]




0x12398:	test	rax, rax
0x1239b:	mov	rcx, qword ptr [rsp + 8]
0x123a0:	je	0x1246c


0x1246c:	mov	qword ptr [r14], rbx
0x1246f:	or	ebp, 2
0x12472:	jmp	0x1232d


0x123a6:	lea	eax, [r12 - 0x45]
0x123ab:	cmp	al, 0x2f
0x123ad:	ja	0x12400


0x123af:	movabs	rdx, 0x814400308945
0x123b9:	bt	rdx, rax
0x123bd:	jae	0x12400


0x12400:	mov	edi, 1
0x12405:	mov	esi, 0x400
0x1240a:	sub	r12d, 0x42
0x1240e:	cmp	r12b, 0x35
0x12412:	ja	0x1246c


0x123bf:	mov	esi, 0x30
0x123c4:	mov	rdi, r13
0x123c7:	mov	qword ptr [rsp + 8], rcx
0x123cc:	call	0x2cf0


0x12414:	lea	rdx, [rip + 0x4105]
0x1241b:	movzx	r12d, r12b
0x1241f:	movsxd	rax, dword ptr [rdx + r12*4]
0x12423:	add	rax, rdx
0x12426:	jmp	rax


0x123d1:	test	rax, rax
0x123d4:	mov	rcx, qword ptr [rsp + 8]
0x123d9:	je	0x12400


0x123db:	movzx	eax, byte ptr [rcx + 1]
0x123df:	cmp	al, 0x44
0x123e1:	je	0x123ef


0x123ef:	mov	edi, 2
0x123f4:	mov	esi, 0x3e8
0x123f9:	jmp	0x1240a


0x123e3:	cmp	al, 0x69
0x123e5:	je	0x125b8


0x1240a:	sub	r12d, 0x42
0x1240e:	cmp	r12b, 0x35
0x12412:	ja	0x1246c


0x125b8:	xor	edi, edi
0x125ba:	cmp	byte ptr [rcx + 2], 0x42
0x125be:	mov	esi, 0x400
0x125c3:	sete	dil
0x125c7:	lea	edi, [rdi + rdi + 1]
0x125cb:	jmp	0x1240a


0x123eb:	cmp	al, 0x42
0x123ed:	jne	0x12400


0x12378:	test	rax, rax
0x1237b:	mov	ebx, 1
0x12380:	mov	rcx, qword ptr [rsp + 8]
0x12385:	je	0x12328


0x127b3:	mov	rcx, qword ptr [r15]
0x127b6:	mov	rbx, rax
0x127b9:	cmp	rcx, rbp
0x127bc:	je	0x127e8


0x127e8:	test	r13, r13
0x127eb:	mov	qword ptr [rsp + 8], rcx
0x127f0:	jne	0x12830


0x127be:	mov	eax, dword ptr [r12]
0x127c2:	test	eax, eax
0x127c4:	je	0x12828


0x12830:	movzx	r12d, byte ptr [rbp]
0x12835:	test	r12b, r12b
0x12838:	je	0x127f8


0x12828:	xor	ebp, ebp
0x1282a:	jmp	0x127d0


0x127c6:	cmp	eax, 0x22
0x127c9:	mov	ebp, 1
0x127ce:	jne	0x127f8


0x1283a:	movsx	esi, r12b
0x1283e:	mov	rdi, r13
0x12841:	xor	ebp, ebp
0x12843:	call	0x2cf0


0x127d0:	test	r13, r13
0x127d3:	je	0x127de


0x127de:	mov	qword ptr [r14], rbx
0x127e1:	jmp	0x127fd


0x127d5:	movzx	r12d, byte ptr [rcx]
0x127d9:	test	r12b, r12b
0x127dc:	jne	0x12857


0x127fd:	mov	rdi, qword ptr [rsp + 0x18]
0x12802:	xor	rdi, qword ptr fs:[0x28]
0x1280b:	mov	eax, ebp
0x1280d:	jne	0x12aa0


0x12857:	movsx	esi, r12b
0x1285b:	mov	rdi, r13
0x1285e:	mov	qword ptr [rsp + 8], rcx
0x12863:	call	0x2cf0


0x12868:	test	rax, rax
0x1286b:	mov	rcx, qword ptr [rsp + 8]
0x12870:	je	0x1293c


0x1293c:	mov	qword ptr [r14], rbx
0x1293f:	or	ebp, 2
0x12942:	jmp	0x127fd


0x12876:	lea	eax, [r12 - 0x45]
0x1287b:	cmp	al, 0x2f
0x1287d:	ja	0x128d0


0x1287f:	movabs	rdx, 0x814400308945
0x12889:	bt	rdx, rax
0x1288d:	jae	0x128d0


0x128d0:	mov	edi, 1
0x128d5:	mov	esi, 0x400
0x128da:	sub	r12d, 0x42
0x128de:	cmp	r12b, 0x35
0x128e2:	ja	0x1293c


0x1288f:	mov	esi, 0x30
0x12894:	mov	rdi, r13
0x12897:	mov	qword ptr [rsp + 8], rcx
0x1289c:	call	0x2cf0


0x128e4:	lea	rdx, [rip + 0x3d7d]
0x128eb:	movzx	r12d, r12b
0x128ef:	movsxd	rax, dword ptr [rdx + r12*4]
0x128f3:	add	rax, rdx
0x128f6:	jmp	rax


0x128a1:	test	rax, rax
0x128a4:	mov	rcx, qword ptr [rsp + 8]
0x128a9:	je	0x128d0


0x128ab:	movzx	eax, byte ptr [rcx + 1]
0x128af:	cmp	al, 0x44
0x128b1:	je	0x128bf


0x128bf:	mov	edi, 2
0x128c4:	mov	esi, 0x3e8
0x128c9:	jmp	0x128da


0x128b3:	cmp	al, 0x69
0x128b5:	je	0x12a88


0x128da:	sub	r12d, 0x42
0x128de:	cmp	r12b, 0x35
0x128e2:	ja	0x1293c


0x12a88:	xor	edi, edi
0x12a8a:	cmp	byte ptr [rcx + 2], 0x42
0x12a8e:	mov	esi, 0x400
0x12a93:	sete	dil
0x12a97:	lea	edi, [rdi + rdi + 1]
0x12a9b:	jmp	0x128da


0x128bb:	cmp	al, 0x42
0x128bd:	jne	0x128d0


0x12848:	test	rax, rax
0x1284b:	mov	ebx, 1
0x12850:	mov	rcx, qword ptr [rsp + 8]
0x12855:	je	0x127f8


0x8c8d:	call	0x2b10


0x8c92:	mov	edi, dword ptr [rax]
0x8c94:	lea	rsi, [rip + 0xb36d]
0x8c9b:	call	0x322d


0x8f0c:	mov	edi, dword ptr [r14]
0x8f0f:	lea	rsi, [rip + 0xb14a]
0x8f16:	call	0x322d


0x106d7:	mov	rdx, qword ptr [rsp]
0x106db:	mov	dword ptr [rsp + 0x10], eax
0x106df:	mov	ecx, r15d
0x106e2:	mov	rdi, rbp
0x106e5:	mov	rsi, r12
0x106e8:	mov	r8, qword ptr [rsp + 8]
0x106ed:	rep movsb	byte ptr [rdi], byte ptr [rsi]


0x106ef:	cmp	rdx, 0x7ff
0x106f6:	jg	0x10545


0x106ed:	rep movsb	byte ptr [rdi], byte ptr [rsi]


0x106fc:	sub	r14, rdx
0x106ff:	cmp	r14, 4
0x10703:	cmova	r14, r8
0x10707:	call	0x30c0


0x30c0:	jmp	qword ptr [rip + 0x216e72]




0x105ac:	mov	dword ptr [rbx + 0x30], eax
0x105af:	mov	dword ptr [rsp + 0x10], eax
0x105b3:	call	0x30c0


0xddcc:	test	eax, eax
0xddce:	jne	0xdd82


0xde1c:	test	eax, eax
0xde1e:	jne	0xddc1


0xde20:	cmp	ebp, 0x7fffffff
0xde26:	je	0xded0


0xddc1:	mov	rdi, r12
0xddc4:	add	rbx, r15
0xddc7:	call	0x3140


0xde2c:	add	ebp, 1
0xde2f:	jmp	0xddc1


0x12b64:	test	eax, eax
0x12b66:	je	0x12ba4


0x12b68:	call	0x2b10


0x12b6d:	mov	r12d, dword ptr [rax]
0x12b70:	mov	rdi, rbx
0x12b73:	mov	rbp, rax
0x12b76:	call	0x2c40


0x12b7b:	test	r12d, r12d
0x12b7e:	jne	0x12bb0


0x12b80:	pop	rbx
0x12b81:	pop	rbp
0x12b82:	pop	r12
0x12b84:	ret	


0x12bb0:	mov	dword ptr [rbp], r12d
0x12bb4:	mov	eax, 0xffffffff
0x12bb9:	jmp	0x12b80


0x1358b:	xor	ebx, ebx
0x1358d:	mov	dword ptr [rbp], r12d
0x13591:	jmp	0x13521


0x13546:	test	eax, eax
0x13548:	jne	0x1355d


0x1354a:	mov	rsi, rbp
0x1354d:	mov	edi, r12d
0x13550:	call	0x2f80


0x1355d:	call	0x2b10


0x13562:	mov	ebp, dword ptr [rax]
0x13564:	mov	rbx, rax
0x13567:	mov	edi, r12d
0x1356a:	call	0x2db0


0x1356f:	mov	dword ptr [rbx], ebp
0x13571:	xor	ebx, ebx
0x13573:	jmp	0x13521


0x13555:	test	rax, rax
0x13558:	mov	rbx, rax
0x1355b:	jne	0x13521


0x1337a:	and	ebx, 0x20
0x1337d:	test	ebx, ebx
0x1337f:	jne	0x13398


0x13381:	test	eax, eax
0x13383:	je	0x1338f


0x13398:	test	eax, eax
0x1339a:	jne	0x133b8


0x1338f:	pop	rbx
0x13390:	pop	rbp
0x13391:	pop	r12
0x13393:	ret	


0x13385:	test	r12, r12
0x13388:	mov	eax, 0xffffffff
0x1338d:	je	0x133c8


0x1339c:	call	0x2b10


0x133b8:	pop	rbx
0x133b9:	mov	eax, 0xffffffff
0x133be:	pop	rbp
0x133bf:	pop	r12
0x133c1:	ret	


0x133c8:	call	0x2b10


0x133cd:	cmp	dword ptr [rax], 9
0x133d0:	pop	rbx
0x133d1:	pop	rbp
0x133d2:	pop	r12
0x133d4:	setne	al
0x133d7:	movzx	eax, al
0x133da:	neg	eax
0x133dc:	ret	


0x133a1:	mov	dword ptr [rax], 0
0x133a7:	mov	eax, 0xffffffff
0x133ac:	pop	rbx
0x133ad:	pop	rbp
0x133ae:	pop	r12
0x133b0:	ret	


0x7212:	test	eax, eax
0x7214:	jne	0x7263


0x7263:	mov	edx, 5
0x7268:	lea	rsi, [rip + 0xe24a]
0x726f:	jmp	0x7238


0x7238:	xor	edi, edi
0x723a:	call	0x2c70


0x9140:	jmp	0x9153


0x9153:	mov	rdi, qword ptr [r12]
0x9157:	call	0xdb00


0x915c:	test	rax, rax
0x915f:	je	0x9148


0x9148:	mov	rsi, r13
0x914b:	mov	rdi, rbp
0x914e:	call	0x2c30


0x9161:	mov	rbx, rax
0x9164:	mov	rdi, r13
0x9167:	call	0x2ef0


0x2c30:	jmp	qword ptr [rip + 0x2170ba]




0x916c:	lea	rax, [rbx + 0x58]
0x9170:	mov	rdi, rax
0x9173:	mov	qword ptr [rsp + 0x18], rax
0x9178:	call	0x31a0


0x917d:	mov	eax, dword ptr [rbx + 0x50]
0x9180:	mov	byte ptr [rbx + 0x54], 0
0x9184:	test	eax, eax
0x9186:	je	0x9420


0x9420:	mov	rdi, qword ptr [rsp + 0x18]
0x9425:	call	0x2ef0


0x918c:	mov	rdx, qword ptr [rsp + 0x20]
0x9191:	mov	rdi, qword ptr [rbx]
0x9194:	lea	ecx, [rax + rax + 2]
0x9198:	mov	rsi, qword ptr [rbx + 8]
0x919c:	shr	rdx, cl
0x919f:	cmp	eax, 1
0x91a2:	mov	qword ptr [rsp + 8], rdi
0x91a7:	mov	qword ptr [rsp + 0x10], rsi
0x91ac:	lea	r15, [rdx + 1]
0x91b0:	jbe	0x9300


0x9300:	mov	qword ptr [rsp + 0x38], rbp
0x9305:	mov	rdi, qword ptr [rsp + 8]
0x930a:	mov	rbp, rbx
0x930d:	mov	rsi, qword ptr [rsp + 0x10]
0x9312:	mov	r14, qword ptr [rsp + 0x28]
0x9317:	mov	rbx, qword ptr [rsp + 0x30]
0x931c:	jmp	0x9343


0x91b6:	mov	rax, qword ptr [rbx + 0x20]
0x91ba:	mov	r14, qword ptr [rax]
0x91bd:	jmp	0x91e6


0x9343:	mov	rax, qword ptr [rbp + 0x10]
0x9347:	cmp	rax, rdi
0x934a:	je	0x94d0


0x91e6:	mov	rax, qword ptr [rbx + 0x10]
0x91ea:	cmp	rax, rdi
0x91ed:	je	0x93a0


0x94d0:	mov	rbx, rbp
0x94d3:	mov	rbp, qword ptr [rsp + 0x38]
0x94d8:	mov	rax, rdi
0x94db:	mov	rdx, qword ptr [rsp + 8]
0x94e0:	mov	r8, qword ptr [rsp + 0x10]
0x94e5:	mov	r9, qword ptr [rbx + 0x30]
0x94e9:	sub	rdx, rdi
0x94ec:	sub	r8, rsi
0x94ef:	mov	rcx, rdx
0x94f2:	sar	r8, 5
0x94f6:	sar	rcx, 5
0x94fa:	cmp	r8, r9
0x94fd:	je	0x95a0


0x9350:	cmp	qword ptr [rbp + 0x18], rsi
0x9354:	je	0x9630


0x93a0:	mov	rax, rdi
0x93a3:	jmp	0x9247


0x91f3:	cmp	qword ptr [rbx + 0x18], rsi
0x91f7:	je	0x9247


0x95a0:	cmp	rax, rdi
0x95a3:	je	0x9682


0x9503:	mov	r10, qword ptr [rbx + 0x28]
0x9507:	cmp	rcx, r10
0x950a:	jne	0x9283


0x9630:	mov	rbx, rbp
0x9633:	mov	rbp, qword ptr [rsp + 0x38]
0x9638:	jmp	0x94db


0x935a:	test	r15, r15
0x935d:	je	0x9640


0x9247:	mov	r8, qword ptr [rsp + 0x10]
0x924c:	mov	r11, qword ptr [rsp + 8]
0x9251:	mov	r9, qword ptr [rbx + 0x30]
0x9255:	mov	r10, qword ptr [rbx + 0x28]
0x9259:	sub	r8, rsi
0x925c:	sub	r11, rdi
0x925f:	sar	r8, 5
0x9263:	sar	r11, 5
0x9267:	cmp	r8, r9
0x926a:	mov	rcx, r11
0x926d:	je	0x93b0


0x91f9:	test	r15, r15
0x91fc:	je	0x9240


0x9682:	mov	r10, qword ptr [rbx + 0x28]
0x9686:	mov	r9, r8
0x9689:	jmp	0x9283


0x95a9:	test	r15, r15
0x95ac:	lea	rax, [r15 - 1]
0x95b0:	je	0x9682


0x9510:	cmp	qword ptr [rbx + 0x18], rsi
0x9514:	je	0x968e


0x9283:	sub	r10, rcx
0x9286:	sub	r9, r8
0x9289:	cmp	byte ptr [rbx + 0x54], 0
0x928d:	mov	qword ptr [rbx + 0x28], r10
0x9291:	mov	qword ptr [rbx + 0x30], r9
0x9295:	je	0x9390


0x94db:	mov	rdx, qword ptr [rsp + 8]
0x94e0:	mov	r8, qword ptr [rsp + 0x10]
0x94e5:	mov	r9, qword ptr [rbx + 0x30]
0x94e9:	sub	rdx, rdi
0x94ec:	sub	r8, rsi
0x94ef:	mov	rcx, rdx
0x94f2:	sar	r8, 5
0x94f6:	sar	rcx, 5
0x94fa:	cmp	r8, r9
0x94fd:	je	0x95a0


0x9640:	mov	rbx, rbp
0x9643:	mov	r15, -1
0x964a:	mov	rbp, qword ptr [rsp + 0x38]
0x964f:	jmp	0x94db


0x9363:	sub	rsi, 0x20
0x9367:	sub	rdi, 0x20
0x936b:	call	0x86e0


0x93b0:	cmp	rdi, rax
0x93b3:	je	0x927c


0x9273:	cmp	r11, r10
0x9276:	je	0x9460


0x9240:	mov	r15, -1
0x9247:	mov	r8, qword ptr [rsp + 0x10]
0x924c:	mov	r11, qword ptr [rsp + 8]
0x9251:	mov	r9, qword ptr [rbx + 0x30]
0x9255:	mov	r10, qword ptr [rbx + 0x28]
0x9259:	sub	r8, rsi
0x925c:	sub	r11, rdi
0x925f:	sar	r8, 5
0x9263:	sar	r11, 5
0x9267:	cmp	r8, r9
0x926a:	mov	rcx, r11
0x926d:	je	0x93b0


0x91fe:	sub	rsi, 0x20
0x9202:	sub	rdi, 0x20
0x9206:	sub	r14, 0x20
0x920a:	call	0x86e0


0x95b6:	mov	qword ptr [rsp + 0x38], rbp
0x95bb:	mov	r14, qword ptr [rsp + 0x28]
0x95c0:	mov	rbp, rax
0x95c3:	mov	r15, qword ptr [rsp + 0x30]
0x95c8:	jmp	0x95da


0x968e:	mov	r10, rcx
0x9691:	jmp	0x9283


0x951a:	test	r15, r15
0x951d:	lea	rax, [r15 - 1]
0x9521:	je	0x968e


0x9390:	mov	rsi, rbx
0x9393:	mov	rdi, r12
0x9396:	call	0x8fa0


0x929b:	cmp	dword ptr [rbx + 0x50], 1
0x929f:	ja	0x92d0


0x927c:	mov	rax, qword ptr [rbx + 0x20]
0x9280:	mov	qword ptr [rax], r14
0x9283:	sub	r10, rcx
0x9286:	sub	r9, r8
0x9289:	cmp	byte ptr [rbx + 0x54], 0
0x928d:	mov	qword ptr [rbx + 0x28], r10
0x9291:	mov	qword ptr [rbx + 0x30], r9
0x9295:	je	0x9390


0x93b9:	test	r15, r15
0x93bc:	lea	rsi, [r15 - 1]
0x93c0:	je	0x927c


0x9460:	mov	rdi, qword ptr [rbx + 0x18]
0x9464:	cmp	rdi, rsi
0x9467:	je	0x927c


0x95da:	sub	rdi, 0x20
0x95de:	mov	rdx, r15
0x95e1:	mov	rsi, r14
0x95e4:	mov	qword ptr [rbx], rdi
0x95e7:	call	0x89f0


0x9527:	mov	qword ptr [rsp + 0x38], rbp
0x952c:	mov	r14, qword ptr [rsp + 0x28]
0x9531:	mov	rbp, rax
0x9534:	mov	r15, qword ptr [rsp + 0x30]
0x9539:	jmp	0x954a


0x92a1:	mov	rax, qword ptr [rbx + 0x30]
0x92a5:	add	rax, qword ptr [rbx + 0x28]
0x92a9:	jne	0x92c0


0x92d0:	mov	rax, qword ptr [rbx + 0x38]
0x92d4:	lea	rdi, [rax + 0x58]
0x92d8:	call	0x31a0


0x93c6:	sub	rdi, 0x20
0x93ca:	jmp	0x93e1


0x946d:	test	r15, r15
0x9470:	lea	rax, [r15 - 1]
0x9474:	je	0x927c


0x954a:	lea	rdi, [rsi - 0x20]
0x954e:	mov	rdx, r15
0x9551:	mov	rsi, r14
0x9554:	mov	qword ptr [rbx + 8], rdi
0x9558:	call	0x89f0


0x92ab:	mov	rsi, qword ptr [rbx + 0x38]
0x92af:	mov	rdi, r12
0x92b2:	call	0x6930


0x92c0:	mov	rdi, qword ptr [rsp + 0x18]
0x92c5:	call	0x2ef0


0x93e1:	movdqu	xmm0, xmmword ptr [rdi]
0x93e5:	sub	r14, 0x20
0x93e9:	cmp	rdi, rax
0x93ec:	mov	qword ptr [rbx], rdi
0x93ef:	movups	xmmword ptr [r14], xmm0
0x93f3:	movdqu	xmm0, xmmword ptr [rdi + 0x10]
0x93f8:	movups	xmmword ptr [r14 + 0x10], xmm0
0x93fd:	jne	0x93d0


0x947a:	sub	rsi, 0x20
0x947e:	jmp	0x9491


0x93ff:	mov	rax, qword ptr [rsp + 8]
0x9404:	mov	r8, r9
0x9407:	sub	rax, rdi
0x940a:	sar	rax, 5
0x940e:	mov	rcx, rax
0x9411:	jmp	0x927c


0x93d0:	sub	rsi, 1
0x93d4:	lea	rdx, [rdi - 0x20]
0x93d8:	cmp	rsi, -1
0x93dc:	je	0x93ff


0x9491:	movdqu	xmm0, xmmword ptr [rsi]
0x9495:	sub	r14, 0x20
0x9499:	cmp	rsi, rdi
0x949c:	mov	qword ptr [rbx + 8], rsi
0x94a0:	movups	xmmword ptr [r14], xmm0
0x94a4:	movdqu	xmm0, xmmword ptr [rsi + 0x10]
0x94a9:	movups	xmmword ptr [r14 + 0x10], xmm0
0x94ae:	jne	0x9480


0x93de:	mov	rdi, rdx
0x93e1:	movdqu	xmm0, xmmword ptr [rdi]
0x93e5:	sub	r14, 0x20
0x93e9:	cmp	rdi, rax
0x93ec:	mov	qword ptr [rbx], rdi
0x93ef:	movups	xmmword ptr [r14], xmm0
0x93f3:	movdqu	xmm0, xmmword ptr [rdi + 0x10]
0x93f8:	movups	xmmword ptr [r14 + 0x10], xmm0
0x93fd:	jne	0x93d0


0x94b0:	mov	r15, qword ptr [rsp + 0x10]
0x94b5:	mov	rcx, r10
0x94b8:	sub	r15, rsi
0x94bb:	mov	r8, r15
0x94be:	sar	r8, 5
0x94c2:	jmp	0x927c


0x9480:	sub	rax, 1
0x9484:	lea	rdx, [rsi - 0x20]
0x9488:	cmp	rax, -1
0x948c:	je	0x94b0


0x948e:	mov	rsi, rdx
0x9491:	movdqu	xmm0, xmmword ptr [rsi]
0x9495:	sub	r14, 0x20
0x9499:	cmp	rsi, rdi
0x949c:	mov	qword ptr [rbx + 8], rsi
0x94a0:	movups	xmmword ptr [r14], xmm0
0x94a4:	movdqu	xmm0, xmmword ptr [rsi + 0x10]
0x94a9:	movups	xmmword ptr [r14 + 0x10], xmm0
0x94ae:	jne	0x9480


0x92dd:	mov	rsi, qword ptr [rbx + 0x38]
0x92e1:	cmp	byte ptr [rsi + 0x54], 0
0x92e5:	jne	0x92f3


0x92e7:	mov	rdi, r12
0x92ea:	call	0x8fa0


0x92f3:	lea	rdi, [rsi + 0x58]
0x92f7:	call	0x2ef0


0x955d:	mov	rsi, qword ptr [rbx + 8]
0x9561:	cmp	rsi, qword ptr [rbx + 0x18]
0x9565:	jne	0x9540


0x9567:	mov	r14, qword ptr [rsp + 8]
0x956c:	mov	r15, qword ptr [rsp + 0x10]
0x9571:	sub	r14, qword ptr [rbx]
0x9574:	mov	rbp, qword ptr [rsp + 0x38]
0x9579:	mov	r10, qword ptr [rbx + 0x28]
0x957d:	mov	r9, qword ptr [rbx + 0x30]
0x9581:	sub	r15, rsi
0x9584:	mov	r8, r15
0x9587:	mov	rcx, r14
0x958a:	sar	r8, 5
0x958e:	sar	rcx, 5
0x9592:	jmp	0x9283


0x9540:	sub	rbp, 1
0x9544:	cmp	rbp, -1
0x9548:	je	0x9567


0x95ec:	mov	rdi, qword ptr [rbx]
0x95ef:	cmp	rdi, qword ptr [rbx + 0x10]
0x95f3:	jne	0x95d0


0x95f5:	mov	r14, qword ptr [rsp + 8]
0x95fa:	mov	r15, qword ptr [rsp + 0x10]
0x95ff:	sub	r15, qword ptr [rbx + 8]
0x9603:	mov	rbp, qword ptr [rsp + 0x38]
0x9608:	mov	r10, qword ptr [rbx + 0x28]
0x960c:	mov	r9, qword ptr [rbx + 0x30]
0x9610:	sub	r14, rdi
0x9613:	mov	rcx, r14
0x9616:	mov	r8, r15
0x9619:	sar	rcx, 5
0x961d:	sar	r8, 5
0x9621:	jmp	0x9283


0x95d0:	sub	rbp, 1
0x95d4:	cmp	rbp, -1
0x95d8:	je	0x95f5


0x92ef:	mov	rsi, qword ptr [rbx + 0x38]
0x92f3:	lea	rdi, [rsi + 0x58]
0x92f7:	call	0x2ef0


0x939b:	jmp	0x929b


0x920f:	test	eax, eax
0x9211:	jg	0x91c0


0x9213:	mov	rax, qword ptr [rbx]
0x9216:	mov	rsi, qword ptr [rbx + 8]
0x921a:	movdqu	xmm0, xmmword ptr [rax - 0x20]
0x921f:	lea	rdi, [rax - 0x20]
0x9223:	mov	qword ptr [rbx], rdi
0x9226:	movups	xmmword ptr [r14], xmm0
0x922a:	movdqu	xmm0, xmmword ptr [rax - 0x10]
0x922f:	movups	xmmword ptr [r14 + 0x10], xmm0
0x9234:	jmp	0x91e2


0x91c0:	mov	rax, qword ptr [rbx + 8]
0x91c4:	mov	rdi, qword ptr [rbx]
0x91c7:	movdqu	xmm0, xmmword ptr [rax - 0x20]
0x91cc:	lea	rsi, [rax - 0x20]
0x91d0:	mov	qword ptr [rbx + 8], rsi
0x91d4:	movups	xmmword ptr [r14], xmm0
0x91d8:	movdqu	xmm0, xmmword ptr [rax - 0x10]
0x91dd:	movups	xmmword ptr [r14 + 0x10], xmm0
0x91e2:	sub	r15, 1
0x91e6:	mov	rax, qword ptr [rbx + 0x10]
0x91ea:	cmp	rax, rdi
0x91ed:	je	0x93a0


0x91e2:	sub	r15, 1
0x91e6:	mov	rax, qword ptr [rbx + 0x10]
0x91ea:	cmp	rax, rdi
0x91ed:	je	0x93a0


0x9370:	test	eax, eax
0x9372:	jg	0x9320


0x9374:	mov	rax, qword ptr [rbp]
0x9378:	mov	rdx, rbx
0x937b:	mov	rsi, r14
0x937e:	lea	rdi, [rax - 0x20]
0x9382:	mov	qword ptr [rbp], rdi
0x9386:	call	0x89f0


0x9320:	mov	rax, qword ptr [rbp + 8]
0x9324:	mov	rdx, rbx
0x9327:	mov	rsi, r14
0x932a:	lea	rdi, [rax - 0x20]
0x932e:	mov	qword ptr [rbp + 8], rdi
0x9332:	call	0x89f0


0x9337:	mov	rsi, qword ptr [rbp + 8]
0x933b:	mov	rdi, qword ptr [rbp]
0x933f:	sub	r15, 1
0x9343:	mov	rax, qword ptr [rbp + 0x10]
0x9347:	cmp	rax, rdi
0x934a:	je	0x94d0


0x938b:	jmp	0x9337


0x92fc:	jmp	0x92c0


0x92ca:	jmp	0x9138


0x9138:	mov	rdi, r13
0x913b:	call	0x31a0


0x942a:	mov	rsi, rbx
0x942d:	mov	rdi, r12
0x9430:	call	0x6930


0x9435:	mov	rax, qword ptr [rsp + 0x88]
0x943d:	xor	rax, qword ptr fs:[0x28]
0x9446:	jne	0x96db


0x944c:	add	rsp, 0x98
0x9453:	pop	rbx
0x9454:	pop	rbp
0x9455:	pop	r12
0x9457:	pop	r13
0x9459:	pop	r14
0x945b:	pop	r15
0x945d:	ret	


0x96db:	call	0x2ca0


0x96c8:	mov	rdi, qword ptr [rsp + 0x58]
0x96cd:	xor	esi, esi
0x96cf:	call	0x3060


0x3060:	jmp	qword ptr [rip + 0x216ea2]




0x9703:	xor	eax, eax
0x9705:	add	rsp, 0x18
0x9709:	ret	


0xb272:	test	eax, eax
0xb274:	je	0xb28c


0xb28c:	mov	rdi, qword ptr [rip + 0x20ef6d]
0xb293:	call	0x13360


0xb276:	call	0x2b10


0xb27b:	cmp	byte ptr [rip + 0x20f60e], 0
0xb282:	mov	rbx, rax
0xb285:	je	0xb2a3


0xb2a3:	lea	rsi, [rip + 0xa7ad]
0xb2aa:	xor	edi, edi
0xb2ac:	mov	edx, 5
0xb2b1:	call	0x2c70


0xb287:	cmp	dword ptr [rax], 0x20
0xb28a:	jne	0xb2a3


0xb2b6:	mov	rdi, qword ptr [rip + 0x20f5db]
0xb2bd:	mov	rbp, rax
0xb2c0:	test	rdi, rdi
0xb2c3:	je	0xb2ed


0xb2ed:	mov	esi, dword ptr [rbx]
0xb2ef:	lea	rdx, [rip + 0xa75e]
0xb2f6:	mov	rcx, rax
0xb2f9:	xor	edi, edi
0xb2fb:	xor	eax, eax
0xb2fd:	call	0x2fe0


0xb2c5:	call	0x10190


0xb302:	jmp	0xb2e2


0xb2e2:	mov	edi, dword ptr [rip + 0x20ee48]
0xb2e8:	call	0x2b40


0xb298:	test	eax, eax
0xb29a:	jne	0xb2e2


0xb29c:	add	rsp, 8
0xb2a0:	pop	rbx
0xb2a1:	pop	rbp
0xb2a2:	ret	


0x6c41:	mov	rax, qword ptr [rsp + 0x88]
0x6c49:	xor	rax, qword ptr fs:[0x28]
0x6c52:	jne	0x6c6a


0x6c54:	add	rsp, 0x98
0x6c5b:	pop	rbx
0x6c5c:	pop	rbp
0x6c5d:	ret	


0x6c6a:	call	0x2ca0


0x96d4:	pop	rax
0x96d5:	pop	rdx
0x96d6:	jmp	0x9435


0x105b8:	mov	dword ptr [rsp + 0x10], eax
0x105bc:	mov	dword ptr [rbx + 0x34], eax
0x105bf:	mov	ebp, 0x800
0x105c4:	mov	eax, 4
0x105c9:	sub	rbp, r14
0x105cc:	cmp	rbp, 4
0x105d0:	cmova	rbp, rax
0x105d4:	call	0x2cb0


0x2cb0:	jmp	qword ptr [rip + 0x21707a]




0x1070c:	mov	rdx, qword ptr [rsp]
0x10710:	mov	dword ptr [rsp + 0x10], eax
0x10714:	mov	ecx, r14d
0x10717:	mov	rsi, r12
0x1071a:	lea	rax, [r13 + rdx]
0x1071f:	add	r14, rdx
0x10722:	cmp	r14, 0x7ff
0x10729:	mov	rdi, rax
0x1072c:	rep movsb	byte ptr [rdi], byte ptr [rsi]


0x1072e:	ja	0x10545


0x1072c:	rep movsb	byte ptr [rdi], byte ptr [rsi]


0x10734:	jmp	0x105bf


0x105bf:	mov	ebp, 0x800
0x105c4:	mov	eax, 4
0x105c9:	sub	rbp, r14
0x105cc:	cmp	rbp, 4
0x105d0:	cmova	rbp, rax
0x105d4:	call	0x2cb0


0x33c6:	mov	rcx, qword ptr [rax]
0x33c9:	movzx	esi, byte ptr [rcx]
0x33cc:	test	sil, sil
0x33cf:	mov	dword ptr [rip + 0x2174b3], esi
0x33d5:	je	0x34bd


0x34bd:	mov	dword ptr [rip + 0x2173c1], 0x2e
0x34c7:	jmp	0x33e5


0x33db:	cmp	byte ptr [rcx + 1], 0
0x33df:	jne	0x34bd


0x33e5:	mov	rdx, qword ptr [rax + 8]
0x33e9:	movzx	ecx, byte ptr [rdx]
0x33ec:	test	cl, cl
0x33ee:	mov	dword ptr [rip + 0x217490], ecx
0x33f4:	je	0x34ae


0x34ae:	mov	dword ptr [rip + 0x2173cc], 0xffffffff
0x34b8:	jmp	0x3404


0x33fa:	cmp	byte ptr [rdx + 1], 0
0x33fe:	jne	0x34ae


0x3404:	mov	byte ptr [rip + 0x21702d], 0
0x340b:	lea	r12, [rip + 0x21704e]
0x3412:	call	0x31b0


0x3417:	mov	r13, rax
0x341a:	call	0x2ab0


0x2ab0:	jmp	qword ptr [rip + 0x21717a]




0x341f:	xor	edx, edx
0x3421:	lea	r10, [rip + 0x217338]
0x3428:	lea	r9, [rip + 0x217231]
0x342f:	lea	r8, [rip + 0x21712a]
0x3436:	jmp	0x3475


0x3475:	mov	rcx, qword ptr [r13]
0x3479:	movzx	ecx, word ptr [rcx + rdx*2]
0x347d:	mov	esi, ecx
0x347f:	mov	edi, ecx
0x3481:	and	ecx, 8
0x3484:	shr	si, 0xe
0x3488:	and	edi, 1
0x348b:	xor	esi, 1
0x348e:	and	esi, 1
0x3491:	cmp	rdx, 0xa
0x3495:	jne	0x3440


0x3497:	test	cx, cx
0x349a:	mov	byte ptr [r10 + rdx], 1
0x349f:	mov	byte ptr [r9 + rdx], sil
0x34a3:	jne	0x34aa


0x3440:	test	di, di
0x3443:	jne	0x3497


0x34a5:	test	di, di
0x34a8:	je	0x3453


0x34aa:	xor	ecx, ecx
0x34ac:	jmp	0x345a


0x3445:	test	cx, cx
0x3448:	mov	byte ptr [r10 + rdx], 0
0x344d:	mov	byte ptr [r9 + rdx], sil
0x3451:	jne	0x34aa


0x3453:	cmp	rdx, 0xa
0x3457:	setne	cl
0x345a:	mov	byte ptr [r8 + rdx], cl
0x345e:	mov	rcx, qword ptr [rax]
0x3461:	mov	ecx, dword ptr [rcx + rdx*4]
0x3464:	mov	byte ptr [r12 + rdx], cl
0x3468:	add	rdx, 1
0x346c:	cmp	rdx, 0x100
0x3473:	je	0x34d0


0x345a:	mov	byte ptr [r8 + rdx], cl
0x345e:	mov	rcx, qword ptr [rax]
0x3461:	mov	ecx, dword ptr [rcx + rdx*4]
0x3464:	mov	byte ptr [r12 + rdx], cl
0x3468:	add	rdx, 1
0x346c:	cmp	rdx, 0x100
0x3473:	je	0x34d0


0x34d0:	test	r14b, r14b
0x34d3:	je	0x359c


0x359c:	lea	rdi, [rip + 0x216dfd]
0x35a3:	lea	r13, [rip + 0x107da]
0x35aa:	mov	r15d, 0xe
0x35b0:	call	0x2e60


0x34d9:	lea	r15, [rip + 0x216b80]
0x34e0:	mov	r14d, 1
0x34e6:	mov	dword ptr [rsp + 0x18], ebx
0x34ea:	mov	qword ptr [rsp + 0x20], rbp
0x34ef:	nop	
0x34f0:	lea	edi, [r14 + 0x2000d]
0x34f7:	call	0x2f10


0x2e60:	jmp	qword ptr [rip + 0x216fa2]




0x34fc:	mov	rdi, rax
0x34ff:	mov	rbp, rax
0x3502:	call	0x2c90


0x3507:	lea	rdi, [rax + 1]
0x350b:	mov	rbx, rax
0x350e:	call	0x11de0


0x3513:	test	rbx, rbx
0x3516:	mov	qword ptr [r15], rax
0x3519:	mov	dword ptr [r15 + 8], r14d
0x351d:	je	0x3f90


0x3f90:	mov	r11, rax
0x3f93:	jmp	0x3560


0x3523:	mov	r10, qword ptr [r13]
0x3527:	lea	r8, [rbp + rbx]
0x352c:	mov	rdi, rbp
0x352f:	xor	r9d, r9d
0x3532:	mov	rcx, rax
0x3535:	nop	dword ptr [rax]
0x3538:	movzx	esi, byte ptr [rdi]
0x353b:	mov	r11, rcx
0x353e:	test	byte ptr [r10 + rsi*2], 1
0x3543:	jne	0x3557


0x3560:	add	r14, 1
0x3564:	add	r15, 0x10
0x3568:	mov	byte ptr [r11], 0
0x356c:	cmp	r14, 0xd
0x3570:	jne	0x34f0


0x3545:	movzx	edx, byte ptr [r12 + rsi]
0x354a:	add	r9, 1
0x354e:	mov	byte ptr [rcx], dl
0x3550:	lea	rcx, [rax + r9]
0x3554:	mov	r11, rcx
0x3557:	add	rdi, 1
0x355b:	cmp	r8, rdi
0x355e:	jne	0x3538


0x3557:	add	rdi, 1
0x355b:	cmp	r8, rdi
0x355e:	jne	0x3538


0x3576:	lea	rcx, [rip + 0x2d13]
0x357d:	lea	rdi, [rip + 0x216adc]
0x3584:	mov	edx, 0x10
0x3589:	mov	esi, 0xc
0x358e:	mov	ebx, dword ptr [rsp + 0x18]
0x3592:	mov	rbp, qword ptr [rsp + 0x20]
0x3597:	call	0x2b90


0x34f0:	lea	edi, [r14 + 0x2000d]
0x34f7:	call	0x2f10


0x3538:	movzx	esi, byte ptr [rdi]
0x353b:	mov	r11, rcx
0x353e:	test	byte ptr [r10 + rsi*2], 1
0x3543:	jne	0x3557


0x2b90:	jmp	qword ptr [rip + 0x21710a]




0x105d9:	test	ebp, ebp
0x105db:	mov	dword ptr [rsp + 0x10], eax
0x105df:	lea	rcx, [r13 + r14]
0x105e4:	mov	esi, ebp
0x105e6:	je	0x105fc


0x105fc:	add	rbp, r14
0x105ff:	cmp	rbp, 0x7ff
0x10606:	ja	0x10545


0x105e8:	xor	eax, eax
0x105ea:	mov	edx, eax
0x105ec:	add	eax, 1
0x105ef:	movzx	edi, byte ptr [r12 + rdx]
0x105f4:	cmp	eax, esi
0x105f6:	mov	byte ptr [rcx + rdx], dil
0x105fa:	jb	0x105ea


0x1060c:	call	0x2eb0


0x105ea:	mov	edx, eax
0x105ec:	add	eax, 1
0x105ef:	movzx	edi, byte ptr [r12 + rdx]
0x105f4:	cmp	eax, esi
0x105f6:	mov	byte ptr [rcx + rdx], dil
0x105fa:	jb	0x105ea


0x2eb0:	jmp	qword ptr [rip + 0x216f7a]




0x10611:	mov	dword ptr [rsp + 0x10], eax
0x10615:	mov	eax, 0x800
0x1061a:	mov	edx, 4
0x1061f:	sub	rax, rbp
0x10622:	lea	rcx, [r13 + rbp]
0x10627:	cmp	rax, 4
0x1062b:	cmova	rax, rdx
0x1062f:	test	eax, eax
0x10631:	mov	esi, eax
0x10633:	je	0x10545


0x10639:	xor	eax, eax
0x1063b:	mov	edx, eax
0x1063d:	add	eax, 1
0x10640:	movzx	edi, byte ptr [r12 + rdx]
0x10645:	cmp	eax, esi
0x10647:	mov	byte ptr [rcx + rdx], dil
0x1064b:	jb	0x1063b


0x1063b:	mov	edx, eax
0x1063d:	add	eax, 1
0x10640:	movzx	edi, byte ptr [r12 + rdx]
0x10645:	cmp	eax, esi
0x10647:	mov	byte ptr [rcx + rdx], dil
0x1064b:	jb	0x1063b


0x1064d:	jmp	0x10545


0x35b5:	lea	rax, [rsp + 0x2c0]
0x35bd:	mov	dword ptr [rsp + 0x18], ebx
0x35c1:	lea	r14, [r13 + 0x28]
0x35c5:	mov	ebx, r15d
0x35c8:	mov	r12, r13
0x35cb:	mov	qword ptr [rsp + 0x20], rax
0x35d0:	mov	r15, rax
0x35d3:	jmp	0x35e0


0x35e0:	xor	esi, esi
0x35e2:	mov	rdx, r15
0x35e5:	mov	edi, ebx
0x35e7:	call	0x2ba0


0x2ba0:	jmp	qword ptr [rip + 0x217102]




0x35ec:	cmp	qword ptr [rsp + 0x2c0], 1
0x35f5:	je	0x3605


0x3605:	cmp	r14, r12
0x3608:	jne	0x35d8


0x35f7:	lea	rdi, [rip + 0x216da2]
0x35fe:	mov	esi, ebx
0x3600:	call	0x3180


0x360a:	movdqa	xmm0, xmmword ptr [rip + 0x216d8e]
0x3612:	lea	rax, [rip + 0x2cb7]
0x3619:	mov	ebx, dword ptr [rsp + 0x18]
0x361d:	mov	dword ptr [rsp + 0x348], 0
0x3628:	mov	r14d, 0xe
0x362e:	movups	xmmword ptr [rsp + 0x2c8], xmm0
0x3636:	mov	qword ptr [rsp + 0x2c0], rax
0x363e:	lea	r15, [rip + 0x216d5b]
0x3645:	movdqa	xmm0, xmmword ptr [rip + 0x216d63]
0x364d:	movups	xmmword ptr [rsp + 0x2d8], xmm0
0x3655:	movdqa	xmm0, xmmword ptr [rip + 0x216d63]
0x365d:	movups	xmmword ptr [rsp + 0x2e8], xmm0
0x3665:	movdqa	xmm0, xmmword ptr [rip + 0x216d63]
0x366d:	movups	xmmword ptr [rsp + 0x2f8], xmm0
0x3675:	movdqa	xmm0, xmmword ptr [rip + 0x216d63]
0x367d:	movups	xmmword ptr [rsp + 0x308], xmm0
0x3685:	movdqa	xmm0, xmmword ptr [rip + 0x216d63]
0x368d:	movups	xmmword ptr [rsp + 0x318], xmm0
0x3695:	movdqa	xmm0, xmmword ptr [rip + 0x216d63]
0x369d:	movups	xmmword ptr [rsp + 0x328], xmm0
0x36a5:	movdqa	xmm0, xmmword ptr [rip + 0x216d63]
0x36ad:	movups	xmmword ptr [rsp + 0x338], xmm0
0x36b5:	jmp	0x36cd


0x35d8:	mov	ebx, dword ptr [r12]
0x35dc:	add	r12, 4
0x35e0:	xor	esi, esi
0x35e2:	mov	rdx, r15
0x35e5:	mov	edi, ebx
0x35e7:	call	0x2ba0


0x3180:	jmp	qword ptr [rip + 0x216e12]


0x36cd:	mov	esi, r14d
0x36d0:	mov	rdi, r15
0x36d3:	call	0x30d0




0x30d0:	jmp	qword ptr [rip + 0x216e6a]




0x36d8:	test	eax, eax
0x36da:	je	0x36c0


0x36c0:	cmp	r12, r13
0x36c3:	je	0x36f0


0x36dc:	mov	rsi, qword ptr [rsp + 0x20]
0x36e1:	xor	edx, edx
0x36e3:	mov	edi, r14d
0x36e6:	call	0x2ba0


0x36f0:	xor	esi, esi
0x36f2:	mov	edi, 0x11
0x36f7:	call	0x2e50


0x36c5:	mov	r14d, dword ptr [r13]
0x36c9:	add	r13, 4
0x36cd:	mov	esi, r14d
0x36d0:	mov	rdi, r15
0x36d3:	call	0x30d0


0x36fc:	lea	rdi, [rip + 0x34bd]
0x3703:	call	0x13840


0x3708:	pxor	xmm0, xmm0
0x370c:	lea	rax, [rsp + 0x100]
0x3714:	mov	edx, 8
0x3719:	movsxd	rcx, ebx
0x371c:	xor	esi, esi
0x371e:	mov	qword ptr [rsp + 0x38], rax
0x3723:	mov	rax, -1
0x372a:	movups	xmmword ptr [rsp + 0x108], xmm0
0x3732:	mov	qword ptr [rsp + 0x100], rax
0x373a:	mov	qword ptr [rsp + 0x110], rax
0x3742:	mov	rax, rdx
0x3745:	mul	rcx
0x3748:	movups	xmmword ptr [rsp + 0x118], xmm0
0x3750:	movups	xmmword ptr [rsp + 0x128], xmm0
0x3758:	movups	xmmword ptr [rsp + 0x138], xmm0
0x3760:	jo	0x5aff


0x5aff:	mov	esi, 1
0x5b04:	jmp	0x3766


0x3766:	test	rax, rax
0x3769:	js	0x5afa


0x5afa:	call	0x12030


0x376f:	test	rsi, rsi
0x3772:	jne	0x5afa


0x3778:	lea	rdi, [rcx*8]
0x3780:	xor	r15d, r15d
0x3783:	xor	r12d, r12d
0x3786:	lea	r13, [rip + 0x1019f]
0x378d:	call	0x11de0


0x3792:	mov	r14, rax
0x3795:	lea	rax, [rsp + 0xb0]
0x379d:	mov	qword ptr [rsp + 0x28], 0
0x37a6:	mov	qword ptr [rsp + 0x18], 0
0x37af:	mov	qword ptr [rsp + 0x58], 0
0x37b8:	xor	r9d, r9d
0x37bb:	mov	qword ptr [rsp + 0x30], rax
0x37c0:	lea	rax, [rsp + 0xc0]
0x37c8:	mov	qword ptr [rsp + 0x40], 0
0x37d1:	mov	byte ptr [rsp + 0x48], 0
0x37d6:	mov	qword ptr [rsp + 0x60], rax
0x37db:	jmp	0x383e


0x383e:	cmp	r9d, -1
0x3842:	mov	dword ptr [rsp + 0x90], 0xffffffff
0x384d:	jne	0x37e0


0x384f:	movsxd	rax, dword ptr [rip + 0x216982]
0x3856:	jmp	0x3820


0x37e0:	test	r15, r15
0x37e3:	je	0x3878


0x3820:	cmp	ebx, eax
0x3822:	jle	0x3993


0x3878:	lea	r8, [rsp + 0x90]
0x3880:	lea	rcx, [rip + 0x215d59]
0x3887:	lea	rdx, [rip + 0x10642]
0x388e:	mov	rsi, rbp
0x3891:	mov	edi, ebx
0x3893:	call	0x2cc0


0x37e9:	cmp	byte ptr [rsp + 8], 0
0x37ee:	je	0x3878


0x3993:	cmp	qword ptr [rsp + 0x18], 0
0x3999:	je	0x3a50


0x3828:	lea	edx, [rax + 1]
0x382b:	mov	rax, qword ptr [rbp + rax*8]
0x3830:	mov	dword ptr [rip + 0x2169a2], edx
0x3836:	mov	qword ptr [r14 + r15*8], rax
0x383a:	add	r15, 1
0x383e:	cmp	r9d, -1
0x3842:	mov	dword ptr [rsp + 0x90], 0xffffffff
0x384d:	jne	0x37e0


0x2cc0:	jmp	qword ptr [rip + 0x217072]


0x37f4:	cmp	byte ptr [rsp + 0x10], 1
0x37f9:	movsxd	rax, dword ptr [rip + 0x2169d8]
0x3800:	jne	0x3820


0x3a50:	mov	rsi, qword ptr [rip + 0x2169d9]
0x3a57:	test	rsi, rsi
0x3a5a:	mov	rcx, rsi
0x3a5d:	je	0x4f09


0x399f:	test	r15, r15
0x39a2:	jne	0x5a8c




0x3802:	test	r12b, r12b
0x3805:	jne	0x3820


0x4f09:	mov	rdi, qword ptr [rsp + 0x38]
0x4f0e:	call	0x6070


0x3a63:	xor	r13d, r13d
0x3a66:	jmp	0x3b01


0x39a8:	mov	rdi, qword ptr [rsp + 0x18]
0x39ad:	lea	rsi, [rip + 0x11edf]
0x39b4:	call	0x70b0


0x5a8c:	mov	rsi, qword ptr [r14]
0x5a8f:	mov	edi, 4
0x5a94:	call	0x100c0


0x3807:	cmp	ebx, eax
0x3809:	je	0x3990


0x3b01:	mov	rdi, rcx
0x3b04:	call	0x6070


0x3990:	xor	r12d, r12d
0x3993:	cmp	qword ptr [rsp + 0x18], 0
0x3999:	je	0x3a50


0x380f:	movsxd	rdx, eax
0x3812:	mov	rdx, qword ptr [rbp + rdx*8]
0x3817:	cmp	byte ptr [rdx], 0x2d
0x381a:	je	0x3860


0x3860:	cmp	byte ptr [rdx + 1], 0x6f
0x3864:	jne	0x3820


0x3866:	cmp	byte ptr [rdx + 2], 0
0x386a:	jne	0x3878


0x386c:	lea	edx, [rax + 1]
0x386f:	cmp	edx, ebx
0x3871:	je	0x3820


0x39b9:	test	rax, rax
0x39bc:	mov	rbx, rax
0x39bf:	je	0x5d06


0x5d06:	mov	rdi, qword ptr [rsp + 0x18]
0x5d0b:	call	0x32cf


0x39c5:	lea	rbp, [rsp + 0x1a0]
0x39cd:	mov	rdi, rbp
0x39d0:	call	0x10f10


0x3b09:	test	al, al
0x3b0b:	jne	0x3a70


0x3b11:	movzx	eax, byte ptr [rcx + 0x33]
0x3b15:	mov	rcx, qword ptr [rcx + 0x40]
0x3b19:	or	r13d, eax
0x3b1c:	test	rcx, rcx
0x3b1f:	jne	0x3b01


0x3a70:	cmp	byte ptr [rcx + 0x37], 0
0x3a74:	jne	0x3b11


0x3b21:	mov	rdi, rsi
0x3b24:	mov	byte ptr [rsp + 0x10], 0
0x3b29:	movzx	edx, byte ptr [rdi + 0x34]
0x3b2d:	movzx	eax, byte ptr [rdi + 0x32]
0x3b31:	add	eax, edx
0x3b33:	movzx	edx, byte ptr [rdi + 0x35]
0x3b37:	add	eax, edx
0x3b39:	movzx	edx, byte ptr [rdi + 0x36]
0x3b3d:	add	eax, edx
0x3b3f:	movzx	edx, byte ptr [rdi + 0x38]
0x3b43:	or	dl, byte ptr [rdi + 0x33]
0x3b46:	cmp	qword ptr [rdi + 0x20], 0
0x3b4b:	setne	cl
0x3b4e:	or	edx, ecx
0x3b50:	movzx	edx, dl
0x3b53:	add	eax, edx
0x3b55:	sub	eax, 1
0x3b58:	jle	0x3b95


0x3a7a:	mov	rax, qword ptr [rsp + 0x120]
0x3a82:	movzx	edx, byte ptr [rsp + 0x137]
0x3a8a:	mov	qword ptr [rcx + 0x20], rax
0x3a8e:	mov	rax, qword ptr [rsp + 0x128]
0x3a96:	mov	qword ptr [rcx + 0x28], rax
0x3a9a:	movzx	eax, byte ptr [rsp + 0x130]
0x3aa2:	mov	byte ptr [rcx + 0x30], al
0x3aa5:	movzx	eax, byte ptr [rsp + 0x131]
0x3aad:	mov	byte ptr [rcx + 0x31], al
0x3ab0:	movzx	eax, byte ptr [rsp + 0x136]
0x3ab8:	mov	byte ptr [rcx + 0x36], al
0x3abb:	movzx	eax, byte ptr [rsp + 0x132]
0x3ac3:	mov	byte ptr [rcx + 0x32], al
0x3ac6:	movzx	eax, byte ptr [rsp + 0x134]
0x3ace:	mov	byte ptr [rcx + 0x34], al
0x3ad1:	movzx	eax, byte ptr [rsp + 0x135]
0x3ad9:	mov	byte ptr [rcx + 0x35], al
0x3adc:	movzx	eax, byte ptr [rsp + 0x138]
0x3ae4:	mov	byte ptr [rcx + 0x37], dl
0x3ae7:	mov	byte ptr [rcx + 0x38], al
0x3aea:	movzx	eax, byte ptr [rsp + 0x133]
0x3af2:	mov	byte ptr [rcx + 0x33], al
0x3af5:	mov	rcx, qword ptr [rcx + 0x40]
0x3af9:	or	r13d, eax
0x3afc:	test	rcx, rcx
0x3aff:	je	0x3b21


0x3b95:	mov	rdi, qword ptr [rdi + 0x40]
0x3b99:	test	rdi, rdi
0x3b9c:	jne	0x3b60


0x3b5a:	jmp	0x5a68


0x3b9e:	cmp	byte ptr [rip + 0x21687b], 0
0x3ba5:	je	0x45e9


0x3b60:	movzx	edx, byte ptr [rdi + 0x34]
0x3b64:	movzx	eax, byte ptr [rdi + 0x32]
0x3b68:	add	eax, edx
0x3b6a:	movzx	edx, byte ptr [rdi + 0x35]
0x3b6e:	add	eax, edx
0x3b70:	movzx	edx, byte ptr [rdi + 0x36]
0x3b74:	add	edx, eax
0x3b76:	movzx	eax, byte ptr [rdi + 0x38]
0x3b7a:	or	al, byte ptr [rdi + 0x33]
0x3b7d:	cmp	qword ptr [rdi + 0x20], 0
0x3b82:	setne	cl
0x3b85:	or	eax, ecx
0x3b87:	movzx	eax, al
0x3b8a:	add	eax, edx
0x3b8c:	cmp	eax, 1
0x3b8f:	jg	0x5a68


0x5a68:	lea	rcx, [rsp + 0x3b0]
0x5a70:	mov	byte ptr [rdi + 0x37], 0
0x5a74:	mov	byte ptr [rdi + 0x31], 0
0x5a78:	mov	byte ptr [rdi + 0x30], 0
0x5a7c:	mov	rsi, rcx
0x5a7f:	call	0x60d0


0x45e9:	movzx	eax, byte ptr [rsp + 0x137]
0x45f1:	test	r13b, r13b
0x45f4:	mov	byte ptr [rip + 0x215e41], al
0x45fa:	jne	0x48cb


0x3bab:	test	r12b, r12b
0x3bae:	setne	dl
0x3bb1:	cmp	qword ptr [rsp + 0x28], 0
0x3bb7:	setne	al
0x3bba:	or	dl, al
0x3bbc:	jne	0x5c99


0x4600:	cmp	qword ptr [rip + 0x215e40], 0
0x4608:	je	0x48a9


0x48cb:	mov	rdi, qword ptr [rsp + 0x40]
0x48d0:	mov	esi, 0x10
0x48d5:	call	0x10410


0x3bc2:	cmp	qword ptr [rsp + 0x50], 0
0x3bc8:	je	0x493f


0x5c99:	test	r12b, r12b
0x5c9c:	jne	0x5ca4


0x48a9:	lea	rdi, [rip + 0x10f1b]
0x48b0:	call	0x2ac0


0x460e:	test	r15, r15
0x4611:	je	0x487f


0x493f:	lea	rsi, [rip + 0x10e3e]
0x4946:	xor	edi, edi
0x4948:	mov	edx, 5
0x494d:	call	0x2c70


0x3bce:	lea	rsi, [rip + 0x11936]
0x3bd5:	mov	edi, 3
0x3bda:	call	0x2f90


0x5c9e:	mov	r12d, 0x6f
0x5ca4:	lea	rdi, [rip + 0x21436d]
0x5cab:	mov	byte ptr [rip + 0x214366], r12b
0x5cb2:	call	0x62a0


0x5ca4:	lea	rdi, [rip + 0x21436d]
0x5cab:	mov	byte ptr [rip + 0x214366], r12b
0x5cb2:	call	0x62a0


0x487f:	mov	rdi, r14
0x4882:	mov	r15d, 1
0x4888:	call	0x31c0


0x4617:	mov	rdx, qword ptr [rip + 0x215e3a]
0x461e:	test	rdx, rdx
0x4621:	je	0x463b


0x463b:	test	r12b, r12b
0x463e:	je	0x4b61


0x4623:	mov	eax, dword ptr [rip + 0x2159fb]
0x4629:	imul	rax, rax, 0x22
0x462d:	cmp	rax, rdx
0x4630:	cmovb	rax, rdx
0x4634:	mov	qword ptr [rip + 0x215e1d], rax
0x463b:	test	r12b, r12b
0x463e:	je	0x4b61


0x4b61:	lea	rbx, [rip + 0x11ad2]
0x4b68:	mov	rbp, r14
0x4b6b:	xor	r12d, r12d
0x4b6e:	nop	
0x4b70:	mov	rdx, qword ptr [rbp]
0x4b74:	mov	ecx, 2
0x4b79:	mov	rdi, rbx
0x4b7c:	mov	rsi, rdx
0x4b7f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4644:	cmp	r15, 1
0x4648:	ja	0x5cb7


0x4b7f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4b81:	seta	al
0x4b84:	sbb	al, 0
0x4b86:	test	al, al
0x4b88:	je	0x4b9f


0x464e:	cmp	qword ptr [rsp + 0x28], 0
0x4654:	jne	0x5cf3


0x5cb7:	mov	rsi, qword ptr [r14 + 8]
0x5cbb:	mov	edi, 4
0x5cc0:	call	0x100c0


0x4b9f:	add	r12, 1
0x4ba3:	add	rbp, 8
0x4ba7:	cmp	r15, r12
0x4baa:	jne	0x4b70


0x4b8a:	mov	esi, 4
0x4b8f:	mov	rdi, rdx
0x4b92:	call	0x3070


0x465a:	mov	r13, qword ptr [r14]
0x465d:	lea	rsi, [rip + 0x1122f]
0x4664:	mov	rdi, r13
0x4667:	call	0x70b0


0x5cf3:	lea	rdi, [rip + 0x214316]
0x5cfa:	mov	byte ptr [rip + 0x21430f], r12b
0x5d01:	call	0x62a0


0x4bac:	mov	rax, qword ptr [rsp + 0x28]
0x4bb1:	test	rax, rax
0x4bb4:	je	0x4be3


0x4b70:	mov	rdx, qword ptr [rbp]
0x4b74:	mov	ecx, 2
0x4b79:	mov	rdi, rbx
0x4b7c:	mov	rsi, rdx
0x4b7f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3070:	jmp	qword ptr [rip + 0x216e9a]


0x4be3:	cmp	byte ptr [rsp + 0x48], 0
0x4be8:	jne	0x5373


0x4bb6:	mov	rdi, rax
0x4bb9:	mov	edx, 0x1b6
0x4bbe:	xor	eax, eax
0x4bc0:	mov	esi, 0x80041
0x4bc5:	call	0x3010




0x4bee:	cmp	qword ptr [rsp + 0x58], 0
0x4bf4:	je	0x5606


0x5373:	mov	esi, 0x10
0x5378:	mov	rdi, r15
0x537b:	call	0x11fb0


0x5606:	mov	edi, 2
0x560b:	call	0xe0a0


0x4bfa:	mov	rbx, qword ptr [rsp + 0x58]
0x4bff:	movabs	rax, 0xffffffffffffff
0x4c09:	mov	qword ptr [rsp + 0x68], r14
0x4c0e:	mov	r14, qword ptr [rsp + 0x20]
0x4c13:	mov	qword ptr [rsp + 0x168], 0
0x4c1f:	mov	qword ptr [rsp + 0x38], r15
0x4c24:	cmp	rbx, rax
0x4c27:	cmovbe	rax, rbx
0x4c2b:	xor	r13d, r13d
0x4c2e:	mov	rbx, rax
0x4c31:	mov	qword ptr [rsp + 0x40], rax
0x4c36:	add	rbx, rax
0x4c39:	shl	rax, 8
0x4c3d:	mov	qword ptr [rsp + 0x50], rbx
0x4c42:	mov	qword ptr [rsp + 0x48], rax
0x4c47:	mov	rax, qword ptr [rsp + 0x68]
0x4c4c:	lea	rsi, [rip + 0x10c40]
0x4c53:	mov	rax, qword ptr [rax]
0x4c56:	mov	rdi, rax
0x4c59:	mov	qword ptr [rsp + 0x10], rax
0x4c5e:	call	0x70b0


0x5610:	mov	edx, 8
0x5615:	cmp	rax, 8
0x5619:	cmovbe	rdx, rax
0x561d:	mov	qword ptr [rsp + 0x58], rdx
0x5622:	jmp	0x4bfa


0x5380:	xor	edx, edx
0x5382:	mov	rsi, qword ptr [r14 + rdx*8]
0x5386:	mov	rcx, rdx
0x5389:	add	rdx, 1
0x538d:	shl	rcx, 4
0x5391:	cmp	r15, rdx
0x5394:	mov	qword ptr [rax + rcx], rsi
0x5398:	ja	0x5382


0x539a:	mov	rcx, qword ptr [rsp + 0x28]
0x539f:	mov	rdx, r15
0x53a2:	xor	esi, esi
0x53a4:	mov	rdi, rax
0x53a7:	call	0xa3a0


0x5382:	mov	rsi, qword ptr [r14 + rdx*8]
0x5386:	mov	rcx, rdx
0x5389:	add	rdx, 1
0x538d:	shl	rcx, 4
0x5391:	cmp	r15, rdx
0x5394:	mov	qword ptr [rax + rcx], rsi
0x5398:	ja	0x5382


0x4bca:	test	eax, eax
0x4bcc:	js	0x5c49


0x5c49:	lea	rsi, [rip + 0xf84f]
0x5c50:	xor	edi, edi
0x5c52:	mov	edx, 5
0x5c57:	call	0x2c70


0x4bd2:	cmp	eax, 1
0x4bd5:	je	0x4be3


0x4bd7:	mov	esi, 1
0x4bdc:	mov	edi, eax
0x4bde:	call	0x8a60


0x4c63:	test	rax, rax
0x4c66:	mov	qword ptr [rsp + 8], rax
0x4c6b:	je	0x58f7


0x58f7:	mov	rdi, qword ptr [rsp + 0x10]
0x58fc:	call	0x32cf


0x4c71:	cmp	qword ptr [rsp + 0x58], 1
0x4c77:	mov	qword ptr [rsp + 0x60], 0x30
0x4c80:	jbe	0x4ca6


0x4ca6:	mov	rbp, qword ptr [rsp + 0x168]
0x4cae:	lea	rax, [rsp + 0x150]
0x4cb6:	mov	qword ptr [rsp + 0x20], rax
0x4cbb:	test	rbp, rbp
0x4cbe:	je	0x5044


0x4c82:	mov	rcx, qword ptr [rsp + 0x40]
0x4c87:	mov	edx, 1
0x4c8c:	mov	eax, 1
0x4c91:	add	rax, rax
0x4c94:	add	rdx, 1
0x4c98:	cmp	rcx, rax
0x4c9b:	ja	0x4c91


0x5044:	mov	rax, qword ptr [rsp + 0x60]
0x5049:	mov	qword ptr [rsp + 0x18], r13
0x504e:	mov	r13, rbp
0x5051:	lea	rbx, [rax + 1]
0x5055:	lea	r12, [rax + 2]
0x5059:	jmp	0x50f5


0x4cc4:	lea	rax, [rsp + 0x90]
0x4ccc:	mov	byte ptr [rsp + 0x180], 0
0x4cd4:	sub	qword ptr [rsp + 0x38], 1
0x4cda:	mov	qword ptr [rsp + 0x30], rax
0x4cdf:	jmp	0x4dee


0x4c9d:	shl	rdx, 5
0x4ca1:	mov	qword ptr [rsp + 0x60], rdx
0x4ca6:	mov	rbp, qword ptr [rsp + 0x168]
0x4cae:	lea	rax, [rsp + 0x150]
0x4cb6:	mov	qword ptr [rsp + 0x20], rax
0x4cbb:	test	rbp, rbp
0x4cbe:	je	0x5044


0x4c91:	add	rax, rax
0x4c94:	add	rdx, 1
0x4c98:	cmp	rcx, rax
0x4c9b:	ja	0x4c91


0x50f5:	test	r13, r13
0x50f8:	je	0x52a1


0x4dee:	mov	rdx, qword ptr [rsp + 0x10]
0x4df3:	mov	rsi, qword ptr [rsp + 8]
0x4df8:	mov	rdi, qword ptr [rsp + 0x20]
0x4dfd:	call	0x9710


0x52a1:	mov	rdi, qword ptr [rsp + 8]
0x52a6:	call	0x2e90


0x50fe:	mov	rax, qword ptr [rsp + 0x68]
0x5103:	lea	rsi, [rip + 0x11530]
0x510a:	mov	rbp, qword ptr [rax + r13*8]
0x510e:	mov	rdi, rbp
0x5111:	call	0x2e40


0x5116:	test	eax, eax
0x5118:	mov	rdx, r14
0x511b:	je	0x505e


0x505e:	xor	esi, esi
0x5060:	mov	edi, 1
0x5065:	call	0x2f20


0x5121:	mov	rsi, rbp
0x5124:	mov	edi, 1
0x5129:	call	0x2ec0


0x512e:	test	eax, eax
0x5130:	setne	al
0x5133:	jmp	0x506f


0x506f:	test	al, al
0x5071:	jne	0x5c2f


0x5077:	mov	eax, dword ptr [rsp + 0x2d8]
0x507e:	and	eax, 0xf000
0x5083:	cmp	eax, 0x8000
0x5088:	je	0x5138


0x5c2f:	mov	r14, qword ptr [rsp + 0x68]
0x5c34:	mov	edx, 5
0x5c39:	lea	rsi, [rip + 0xfbc3]
0x5c40:	mov	rbx, qword ptr [r14 + r13*8]
0x5c44:	jmp	0x58ca


0x5138:	cmp	qword ptr [rip + 0x2150e0], 0
0x5140:	mov	rbp, qword ptr [rsp + 0x2f0]
0x5148:	jne	0x50b1


0x508e:	mov	rsi, qword ptr [rip + 0x2153c3]
0x5095:	test	rsi, rsi
0x5098:	jne	0x52c4


0x58ca:	xor	edi, edi
0x58cc:	call	0x2c70


0x514e:	mov	rax, qword ptr [rip + 0x215303]
0x5155:	test	rax, rax
0x5158:	mov	qword ptr [rip + 0x2150c1], rax
0x515f:	jne	0x50b1


0x50b1:	mov	rcx, rbx
0x50b4:	xor	edx, edx
0x50b6:	mov	rsi, qword ptr [rip + 0x215163]
0x50bd:	imul	rcx, rbp
0x50c1:	add	rcx, 1
0x50c5:	mov	rax, rcx
0x50c8:	div	rbx
0x50cb:	cmp	rbp, rax
0x50ce:	jne	0x52c4


0x509e:	cmp	qword ptr [rip + 0x21517a], 0
0x50a6:	mov	ebp, 0x20000
0x50ab:	je	0x5165


0x52c4:	mov	r13, qword ptr [rsp + 0x18]
0x52c9:	mov	r12, rsi
0x52cc:	lea	rax, [rsp + 0x150]
0x52d4:	mov	rsi, qword ptr [rsp + 0x60]
0x52d9:	mov	rdx, r12
0x52dc:	mov	rdi, rax
0x52df:	mov	qword ptr [rsp + 0x20], rax
0x52e4:	call	0x64a0


0x5165:	lea	rsi, [rsp + 0x90]
0x516d:	mov	edi, 2
0x5172:	or	r15, 0xffffffffffffffff
0x5176:	mov	qword ptr [rsp + 0x20], rsi
0x517b:	call	0x3110


0x50d4:	mov	rax, rsi
0x50d7:	sub	rax, r12
0x50da:	cmp	rcx, rax
0x50dd:	jae	0x52c4


0x3110:	jmp	qword ptr [rip + 0x216e4a]


0x50e3:	add	r12, rcx
0x50e6:	add	r13, 1
0x50ea:	cmp	r13, qword ptr [rsp + 0x38]
0x50ef:	jae	0x5631




0x5631:	mov	r13, qword ptr [rsp + 0x18]
0x5636:	jmp	0x52cc


0x52cc:	lea	rax, [rsp + 0x150]
0x52d4:	mov	rsi, qword ptr [rsp + 0x60]
0x52d9:	mov	rdx, r12
0x52dc:	mov	rdi, rax
0x52df:	mov	qword ptr [rsp + 0x20], rax
0x52e4:	call	0x64a0


0x52e9:	jmp	0x4cc4


0x506a:	test	eax, eax
0x506c:	setne	al
0x506f:	test	al, al
0x5071:	jne	0x5c2f


0x52ab:	mov	rdx, r14
0x52ae:	mov	esi, eax
0x52b0:	mov	edi, 1
0x52b5:	call	0x2f20


0x52ba:	test	eax, eax
0x52bc:	setne	al
0x52bf:	jmp	0x506f


0x4e02:	test	al, al
0x4e04:	je	0x4f8b


0x4f8b:	mov	rsi, qword ptr [rsp + 0x10]
0x4f90:	mov	rdi, qword ptr [rsp + 8]
0x4f95:	call	0x71f0


0x4e0a:	movzx	r12d, byte ptr [rsp + 0x180]
0x4e13:	mov	rbx, qword ptr [rsp + 0x168]
0x4e1b:	test	r12b, r12b
0x4e1e:	je	0x4e54


0x4e54:	add	rbx, qword ptr [rsp + 0x150]
0x4e5c:	mov	qword ptr [rip + 0x2159f9], 0
0x4e67:	mov	rdi, qword ptr [rsp + 0x30]
0x4e6c:	xor	esi, esi
0x4e6e:	add	r13, 1
0x4e72:	xor	r12d, r12d
0x4e75:	call	0x8d00


0x4e20:	cmp	qword ptr [rsp + 0x38], 0
0x4e26:	je	0x4ea6


0x4ea6:	add	rbx, qword ptr [rsp + 0x150]
0x4eae:	test	r13, r13
0x4eb1:	mov	qword ptr [rip + 0x2159a4], 0
0x4ebc:	jne	0x4e67


0x4e28:	mov	rdi, qword ptr [rsp + 0x60]
0x4e2d:	mov	rdx, qword ptr [rsp + 0x158]
0x4e35:	mov	rax, rbx
0x4e38:	lea	rcx, [rdi + 1]
0x4e3c:	sub	rax, rdx
0x4e3f:	imul	rdi, qword ptr [rsp + 0x160]
0x4e48:	sub	rax, rdi
0x4e4b:	cmp	rcx, rax
0x4e4e:	jb	0x5648


0x4ebe:	cmp	qword ptr [rsp + 0x170], 0
0x4ec7:	jne	0x4e67


0x4e67:	mov	rdi, qword ptr [rsp + 0x30]
0x4e6c:	xor	esi, esi
0x4e6e:	add	r13, 1
0x4e72:	xor	r12d, r12d
0x4e75:	call	0x8d00


0x5648:	mov	rsi, qword ptr [rsp + 0x10]
0x564d:	mov	rdi, qword ptr [rsp + 8]
0x5652:	mov	qword ptr [rsp + 0x170], rdx
0x565a:	call	0x71f0


0x4ec9:	mov	rsi, qword ptr [rsp + 0x10]
0x4ece:	mov	rdi, qword ptr [rsp + 8]
0x4ed3:	call	0x71f0


0x4e7a:	lea	rbp, [rax + 0xd]
0x4e7e:	cmp	qword ptr [rsp + 0x160], 1
0x4e87:	ja	0x4ce8


0x4e8d:	mov	rsi, qword ptr [rsp + 0x90]
0x4e95:	lea	rdi, [rbx - 0x20]
0x4e99:	mov	rdx, rbp
0x4e9c:	call	0x89f0


0x4ce8:	mov	rsi, qword ptr [rsp + 0x50]
0x4ced:	lea	rdi, [rip + 0x1e8c]
0x4cf4:	call	0xd930


0x4cf9:	lea	rdi, [r14 + 8]
0x4cfd:	xor	esi, esi
0x4cff:	mov	qword ptr [rsp + 0x2c0], rax
0x4d07:	call	0x3170


0x4d0c:	lea	rdi, [r14 + 0x30]
0x4d10:	xor	esi, esi
0x4d12:	call	0x2ed0


0x2ed0:	jmp	qword ptr [rip + 0x216f6a]




0x4ea1:	jmp	0x4dd5


0x4dd5:	mov	rdi, qword ptr [rsp + 0x90]
0x4ddd:	mov	rsi, rbp
0x4de0:	call	0x71f0


0x4de5:	test	r12b, r12b
0x4de8:	jne	0x4fb1


0x4fb1:	mov	rdi, qword ptr [rsp + 0x150]
0x4fb9:	call	0x31c0


0x4ed8:	mov	rdi, qword ptr [rsp + 0x28]
0x4edd:	lea	rsi, [rip + 0x10606]
0x4ee4:	call	0x70b0


0x565f:	jmp	0x4fa6


0x4fa6:	add	qword ptr [rsp + 0x68], 8
0x4fac:	jmp	0x4c47


0x4c47:	mov	rax, qword ptr [rsp + 0x68]
0x4c4c:	lea	rsi, [rip + 0x10c40]
0x4c53:	mov	rax, qword ptr [rax]
0x4c56:	mov	rdi, rax
0x4c59:	mov	qword ptr [rsp + 0x10], rax
0x4c5e:	call	0x70b0


0x4f9a:	cmp	qword ptr [rsp + 0x38], 0
0x4fa0:	je	0x52ee


0x52ee:	mov	rdi, qword ptr [rsp + 0x150]
0x52f6:	call	0x31c0


0x4ee9:	test	rax, rax
0x4eec:	je	0x58ed


0x58ed:	mov	rdi, qword ptr [rsp + 0x28]
0x58f2:	call	0x32cf


0x4ef2:	mov	qword ptr [rsp + 0x90], rax
0x4efa:	mov	rbp, qword ptr [rsp + 0x28]
0x4eff:	mov	r13, qword ptr [rsp + 0x38]
0x4f04:	jmp	0x4e7e


0x4e7e:	cmp	qword ptr [rsp + 0x160], 1
0x4e87:	ja	0x4ce8


0x466c:	test	rax, rax
0x466f:	mov	qword ptr [rsp + 0x10], rax
0x4674:	je	0x5d10


0x5d10:	mov	rdi, r13
0x5d13:	call	0x32cf


0x467a:	movzx	ebx, byte ptr [rip + 0x215db8]
0x4681:	mov	rax, qword ptr [rip + 0x215da8]
0x4688:	mov	esi, 0x20
0x468d:	mov	qword ptr [rsp + 0x20], rax
0x4692:	mov	rax, qword ptr [rip + 0x215997]
0x4699:	xor	ebx, 1
0x469c:	cmp	qword ptr [rip + 0x215db5], rax
0x46a3:	cmovae	rax, qword ptr [rip + 0x215dad]
0x46ab:	movzx	ebx, bl
0x46ae:	xor	r14d, r14d
0x46b1:	mov	rdx, rax
0x46b4:	lea	rax, [rsp + 0x150]
0x46bc:	mov	rdi, rax
0x46bf:	mov	qword ptr [rsp + 8], rax
0x46c4:	call	0x64a0


0x46c9:	lea	rax, [rsp + 0x90]
0x46d1:	mov	qword ptr [rsp + 0x90], 0
0x46dd:	mov	qword ptr [rsp + 0x18], 0
0x46e6:	mov	qword ptr [rsp + 0x28], rax
0x46eb:	mov	rsi, qword ptr [rsp + 0x10]
0x46f0:	mov	rdi, qword ptr [rsp + 8]
0x46f5:	mov	rdx, r13
0x46f8:	call	0x9710


0x46fd:	test	al, al
0x46ff:	je	0x5627


0x5627:	mov	ebx, 1
0x562c:	jmp	0x4817


0x4705:	mov	rdi, qword ptr [rsp + 0x168]
0x470d:	add	rdi, qword ptr [rsp + 0x150]
0x4715:	mov	rax, qword ptr [rsp + 0x160]
0x471d:	mov	rbp, rdi
0x4720:	shl	rax, 5
0x4724:	lea	r15, [rdi - 0x20]
0x4728:	sub	rbp, rax
0x472b:	test	r14, r14
0x472e:	je	0x474c


0x4817:	mov	rdi, qword ptr [rsp + 0x10]
0x481c:	mov	rsi, r13
0x481f:	call	0x71f0


0x474c:	cmp	rbp, r15
0x474f:	mov	rdi, r15
0x4752:	jb	0x4738


0x4730:	jmp	0x47f6


0x4738:	sub	r15, 0x20
0x473c:	mov	rsi, r15
0x473f:	call	0x86e0


0x4754:	mov	rdx, qword ptr [r15 + 8]
0x4758:	mov	rdi, qword ptr [rsp + 0x160]
0x4760:	add	qword ptr [rsp + 0x18], rdi
0x4765:	cmp	r14, rdx
0x4768:	jb	0x47c8


0x47f6:	mov	rdi, qword ptr [rsp + 0x28]
0x47fb:	mov	rsi, r15
0x47fe:	call	0x86e0


0x47c8:	add	r14, r14
0x47cb:	jne	0x47c3


0x476a:	mov	rsi, qword ptr [r15]
0x476d:	mov	rdi, qword ptr [rsp + 0x90]
0x4775:	call	0x2e80


0x47cd:	mov	r14, rdx
0x47d0:	mov	rdi, qword ptr [rsp + 0x90]
0x47d8:	call	0x31c0


0x47c3:	cmp	rdx, r14
0x47c6:	jbe	0x47d0


0x47d0:	mov	rdi, qword ptr [rsp + 0x90]
0x47d8:	call	0x31c0


0x477a:	cmp	qword ptr [rsp + 0x20], 0
0x4780:	mov	rax, qword ptr [r15 + 8]
0x4784:	mov	qword ptr [rsp + 0x98], rax
0x478c:	je	0x46eb


0x46eb:	mov	rsi, qword ptr [rsp + 0x10]
0x46f0:	mov	rdi, qword ptr [rsp + 8]
0x46f5:	mov	rdx, r13
0x46f8:	call	0x9710


0x4792:	mov	rdx, qword ptr [r15 + 0x10]
0x4796:	mov	rax, qword ptr [rsp + 0x90]
0x479e:	mov	rcx, qword ptr [r15]
0x47a1:	add	rdx, rax
0x47a4:	add	rax, qword ptr [r15 + 0x18]
0x47a8:	sub	rdx, rcx
0x47ab:	mov	qword ptr [rsp + 0xa0], rdx
0x47b3:	sub	rax, rcx
0x47b6:	mov	qword ptr [rsp + 0xa8], rax
0x47be:	jmp	0x46eb


0x4803:	cmp	ebx, eax
0x4805:	jg	0x474c


0x480b:	xor	ebx, ebx
0x480d:	cmp	r12b, 0x63
0x4811:	je	0x53b1


0x53b1:	mov	rdi, qword ptr [rsp + 0x168]
0x53b9:	add	rdi, qword ptr [rsp + 0x150]
0x53c1:	lea	rsi, [rsp + 0x3b0]
0x53c9:	sub	rdi, r15
0x53cc:	sar	rdi, 5
0x53d0:	add	rdi, qword ptr [rsp + 0x18]
0x53d5:	call	0xdcd0


0x53da:	lea	rsi, [rip + 0x103f1]
0x53e1:	mov	rbp, qword ptr [rip + 0x2154c0]
0x53e8:	xor	edi, edi
0x53ea:	mov	edx, 5
0x53ef:	mov	r12, rax
0x53f2:	call	0x2c70


0x4744:	cmp	ebx, eax
0x4746:	jle	0x480b


0x4824:	mov	rdi, qword ptr [rsp + 0x150]
0x482c:	call	0x31c0


0x4831:	mov	rdi, qword ptr [rsp + 0x90]
0x4839:	call	0x31c0


0x483e:	mov	eax, ebx
0x4840:	xor	eax, 1
0x4843:	movzx	eax, al
0x4846:	mov	rbx, qword ptr [rsp + 0x3e8]
0x484e:	xor	rbx, qword ptr fs:[0x28]
0x4857:	jne	0x5d3e


0x485d:	add	rsp, 0x3f8
0x4864:	pop	rbx
0x4865:	pop	rbp
0x4866:	pop	r12
0x4868:	pop	r13
0x486a:	pop	r14
0x486c:	pop	r15
0x486e:	ret	


0x5d3e:	call	0x2ca0


0x47dd:	mov	rdi, r14
0x47e0:	call	0x11de0


0x47e5:	mov	rdx, qword ptr [r15 + 8]
0x47e9:	mov	qword ptr [rsp + 0x90], rax
0x47f1:	jmp	0x476a


0x52fb:	mov	edx, 0x10
0x5300:	xor	ecx, ecx
0x5302:	mov	rbx, qword ptr [rip + 0x21507f]
0x5309:	mov	rax, rdx
0x530c:	mul	r13
0x530f:	jo	0x5c69


0x5c69:	mov	ecx, 1
0x5c6e:	jmp	0x5315


0x5315:	test	rax, rax
0x5318:	js	0x5afa


0x531e:	test	rcx, rcx
0x5321:	jne	0x5afa


0x5327:	mov	rdi, r13
0x532a:	shl	rdi, 4
0x532e:	call	0x11de0


0x5333:	mov	rbp, rax
0x5336:	mov	rdx, rax
0x5339:	jmp	0x534e


0x534e:	test	rbx, rbx
0x5351:	jne	0x533b


0x5353:	mov	rcx, qword ptr [rsp + 0x28]
0x5358:	mov	rdi, rbp
0x535b:	mov	rdx, r13
0x535e:	mov	rsi, r13
0x5361:	call	0xa3a0


0x533b:	lea	rax, [rbx + 0xd]
0x533f:	mov	qword ptr [rdx + 8], rbx
0x5343:	mov	rbx, qword ptr [rbx]
0x5346:	add	rdx, 0x10
0x534a:	mov	qword ptr [rdx - 0x10], rax
0x534e:	test	rbx, rbx
0x5351:	jne	0x533b


0x4fbe:	or	ebx, 0xffffffff
0x4fc1:	cmp	dword ptr [rip + 0x2153b4], 0
0x4fc8:	jle	0x4fdb


0x4fdb:	cmp	byte ptr [rip + 0x215456], 0
0x4fe2:	jne	0x4feb


0x4fca:	mov	edi, ebx
0x4fcc:	call	0x6620


0x4fe4:	xor	eax, eax
0x4fe6:	jmp	0x4846


0x4feb:	mov	rdi, qword ptr [rip + 0x2151de]
0x4ff2:	call	0x12b40


0x4846:	mov	rbx, qword ptr [rsp + 0x3e8]
0x484e:	xor	rbx, qword ptr fs:[0x28]
0x4857:	jne	0x5d3e


0x4ff7:	add	eax, 1
0x4ffa:	jne	0x4fe4


0x4ffc:	lea	rsi, [rip + 0x104b6]
0x5003:	xor	edi, edi
0x5005:	mov	edx, 5
0x500a:	call	0x2c70


0x4fd1:	mov	eax, dword ptr [rip + 0x2153a5]
0x4fd7:	test	eax, eax
0x4fd9:	jg	0x4fca


0x488d:	mov	edi, 8
0x4892:	call	0x11de0


0x4897:	mov	r14, rax
0x489a:	lea	rax, [rip + 0x11d99]
0x48a1:	mov	qword ptr [r14], rax
0x48a4:	jmp	0x4617


0x3bdf:	test	rax, rax
0x3be2:	je	0x493f


0x3be8:	cmp	byte ptr [rip + 0x216c92], 0
0x3bef:	je	0x4f35


0x4f35:	lea	rsi, [rip + 0x1033c]
0x4f3c:	xor	edi, edi
0x4f3e:	mov	edx, 5
0x4f43:	call	0x2c70


0x3bf5:	xor	esi, esi
0x3bf7:	mov	edi, 3
0x3bfc:	call	0x2f90


0x3c01:	mov	rdi, rax
0x3c04:	call	0x10390


0x4f48:	lea	rdx, [rip + 0x10b05]
0x4f4f:	mov	rcx, rax
0x4f52:	xor	esi, esi
0x4f54:	xor	edi, edi
0x4f56:	xor	eax, eax
0x4f58:	call	0x2fe0


0x4f5d:	jmp	0x3c30


0x3c30:	mov	rbp, qword ptr [rip + 0x2167f9]
0x3c37:	lea	rdi, [rsp + 0x150]
0x3c3f:	mov	ecx, 0x12
0x3c44:	mov	rsi, qword ptr [rsp + 0x38]
0x3c49:	mov	qword ptr [rsp + 8], rdi
0x3c4e:	test	rbp, rbp
0x3c51:	rep movsd	dword ptr [rdi], dword ptr [rsi]


0x3c51:	rep movsd	dword ptr [rdi], dword ptr [rsi]


0x3c53:	je	0x4b1e


0x4b1e:	mov	rdi, qword ptr [rsp + 8]
0x4b23:	call	0x6070


0x3c59:	lea	rax, [rsp + 0x380]
0x3c61:	lea	rdi, [rsp + 0x360]
0x3c69:	mov	byte ptr [rsp + 0x50], r13b
0x3c6e:	mov	byte ptr [rsp + 0x60], r12b
0x3c73:	mov	qword ptr [rsp + 0x70], r14
0x3c78:	mov	ebx, 1
0x3c7d:	mov	qword ptr [rsp + 0x30], rax
0x3c82:	lea	rax, [rsp + 0x381]
0x3c8a:	movzx	r12d, byte ptr [rsp + 0x10]
0x3c90:	mov	qword ptr [rsp + 0x68], r15
0x3c95:	mov	r14, rbp
0x3c98:	mov	r13, rdi
0x3c9b:	mov	qword ptr [rsp + 0x38], rax
0x3ca0:	jmp	0x3db6


0x3db6:	cmp	byte ptr [r14 + 0x39], 0
0x3dbb:	mov	r15, qword ptr [r14]
0x3dbe:	mov	rbp, qword ptr [r14 + 0x10]
0x3dc2:	je	0x3ed7


0x3ed7:	xor	eax, eax
0x3ed9:	cmp	r15, -1
0x3edd:	je	0x3f0d


0x3dc8:	cmp	r15, -1
0x3dcc:	mov	eax, 0
0x3dd1:	mov	rsi, r13
0x3dd4:	cmove	r15, rax
0x3dd8:	mov	rdi, r15
0x3ddb:	call	0xdcd0


0x3f0d:	movabs	rdi, 0xffff00ff0000
0x3f17:	test	qword ptr [r14 + 0x30], rdi
0x3f1b:	mov	edx, 1
0x3f20:	jne	0x3f27


0x3edf:	cmp	r15, rbp
0x3ee2:	jbe	0x3f0d


0x3f22:	movzx	edx, byte ptr [r14 + 0x36]
0x3f27:	or	eax, r12d
0x3f2a:	cmp	qword ptr [r14 + 0x10], 0
0x3f2f:	je	0x3ca5


0x3f27:	or	eax, r12d
0x3f2a:	cmp	qword ptr [r14 + 0x10], 0
0x3f2f:	je	0x3ca5


0x3ee4:	lea	rsi, [rip + 0x114cd]
0x3eeb:	mov	edx, 5
0x3ef0:	xor	edi, edi
0x3ef2:	call	0x2c70


0x3ca5:	cmp	qword ptr [r14 + 0x18], 0
0x3caa:	je	0x3f35


0x3f35:	test	al, al
0x3f37:	jne	0x4ad8


0x3cb0:	test	al, al
0x3cb2:	jne	0x4ad8


0x3f3d:	cmp	dword ptr [rip + 0x2160e1], 0x80
0x3f47:	jne	0x3cb8


0x4ad8:	test	r12b, r12b
0x4adb:	jne	0x3cf0


0x3cb8:	movabs	rax, 0xffff00ff0000
0x3cc2:	test	qword ptr [r14 + 0x30], rax
0x3cc6:	je	0x3cf0


0x3f4d:	cmp	byte ptr [r14 + 0x30], 0
0x3f52:	jne	0x5029


0x4ae1:	jmp	0x3cb8


0x3cf0:	mov	rax, qword ptr [rsp + 0x170]
0x3cf8:	test	rax, rax
0x3cfb:	je	0x3d07


0x3cc8:	mov	rax, qword ptr [r14 + 0x10]
0x3ccc:	lea	rdx, [rax + 1]
0x3cd0:	mov	rax, qword ptr [r14]
0x3cd3:	add	rax, 1
0x3cd7:	jne	0x3cde


0x3f58:	test	edx, edx
0x3f5a:	jne	0x501e


0x5029:	cmp	byte ptr [r14 + 0x31], 0
0x502e:	jne	0x3cb8


0x3d07:	mov	rax, qword ptr [rsp + 0x178]
0x3d0f:	test	rax, rax
0x3d12:	je	0x3d1e


0x3cfd:	cmp	rax, qword ptr [r14 + 0x20]
0x3d01:	je	0x4af7


0x3cd9:	mov	eax, 1
0x3cde:	test	rdx, rdx
0x3ce1:	je	0x4f62


0x3cde:	test	rdx, rdx
0x3ce1:	je	0x4f62


0x3f60:	lea	rsi, [rip + 0x11379]
0x3f67:	xor	edi, edi
0x3f69:	mov	edx, 5
0x3f6e:	call	0x2c70


0x501e:	cmp	qword ptr [r14 + 8], 0
0x5023:	jne	0x3f60


0x5034:	cmp	qword ptr [r14 + 0x18], 0
0x5039:	je	0x3cb8


0x3d1e:	movzx	eax, byte ptr [r14 + 0x30]
0x3d23:	add	rbx, 1
0x3d27:	xor	eax, 1
0x3d2a:	and	byte ptr [rsp + 0x180], al
0x3d31:	movzx	eax, byte ptr [r14 + 0x31]
0x3d36:	xor	eax, 1
0x3d39:	and	byte ptr [rsp + 0x181], al
0x3d40:	movzx	eax, byte ptr [r14 + 0x36]
0x3d45:	xor	eax, 1
0x3d48:	and	byte ptr [rsp + 0x186], al
0x3d4f:	movzx	eax, byte ptr [r14 + 0x32]
0x3d54:	xor	eax, 1
0x3d57:	and	byte ptr [rsp + 0x182], al
0x3d5e:	movzx	eax, byte ptr [r14 + 0x34]
0x3d63:	xor	eax, 1
0x3d66:	and	byte ptr [rsp + 0x184], al
0x3d6d:	movzx	eax, byte ptr [r14 + 0x35]
0x3d72:	xor	eax, 1
0x3d75:	and	byte ptr [rsp + 0x185], al
0x3d7c:	movzx	eax, byte ptr [r14 + 0x33]
0x3d81:	xor	eax, 1
0x3d84:	and	byte ptr [rsp + 0x183], al
0x3d8b:	movzx	eax, byte ptr [r14 + 0x38]
0x3d90:	xor	eax, 1
0x3d93:	and	byte ptr [rsp + 0x188], al
0x3d9a:	movzx	eax, byte ptr [r14 + 0x37]
0x3d9f:	mov	r14, qword ptr [r14 + 0x40]
0x3da3:	xor	eax, 1
0x3da6:	and	byte ptr [rsp + 0x187], al
0x3dad:	test	r14, r14
0x3db0:	je	0x4b08


0x3d14:	cmp	rax, qword ptr [r14 + 0x28]
0x3d18:	je	0x4ae6


0x4af7:	mov	qword ptr [rsp + 0x170], 0
0x4b03:	jmp	0x3d07


0x4f62:	lea	rsi, [rip + 0x103bf]
0x4f69:	xor	edi, edi
0x4f6b:	mov	edx, 5
0x4f70:	call	0x2c70


0x3ce7:	cmp	rdx, rax
0x3cea:	ja	0x4f62


0x503f:	jmp	0x3f60


0x4b08:	movzx	r13d, byte ptr [rsp + 0x50]
0x4b0e:	movzx	r12d, byte ptr [rsp + 0x60]
0x4b14:	mov	r15, qword ptr [rsp + 0x68]
0x4b19:	mov	r14, qword ptr [rsp + 0x70]
0x4b1e:	mov	rdi, qword ptr [rsp + 8]
0x4b23:	call	0x6070


0x4ae6:	mov	qword ptr [rsp + 0x178], 0
0x4af2:	jmp	0x3d1e


0x3de0:	mov	rdi, qword ptr [rsp + 0x38]
0x3de5:	mov	edx, 0x2d
0x3dea:	mov	rsi, rax
0x3ded:	mov	byte ptr [rsp + 0x380], 0x2b
0x3df5:	call	0x2ea0


0x2ea0:	jmp	qword ptr [rip + 0x216f82]




0x4f75:	mov	rcx, rbx
0x4f78:	mov	rdx, rax
0x4f7b:	xor	esi, esi
0x4f7d:	xor	edi, edi
0x4f7f:	xor	eax, eax
0x4f81:	call	0x2fe0


0x4f86:	jmp	0x3cf0


0x3f73:	mov	rcx, rbx
0x3f76:	mov	rdx, rax
0x3f79:	xor	esi, esi
0x3f7b:	xor	edi, edi
0x3f7d:	xor	eax, eax
0x3f7f:	call	0x2fe0


0x3f84:	jmp	0x3cb8


0x3ef7:	mov	rcx, rbx
0x3efa:	mov	rdx, rax
0x3efd:	xor	esi, esi
0x3eff:	xor	eax, eax
0x3f01:	xor	edi, edi
0x3f03:	call	0x2fe0


0x3f08:	mov	eax, 1
0x3f0d:	movabs	rdi, 0xffff00ff0000
0x3f17:	test	qword ptr [r14 + 0x30], rdi
0x3f1b:	mov	edx, 1
0x3f20:	jne	0x3f27


0x500f:	lea	rsi, [rip + 0x11624]
0x5016:	mov	rdi, rax
0x5019:	call	0x6320


0x53f7:	mov	rdi, qword ptr [rip + 0x214e02]
0x53fe:	mov	r9, r12
0x5401:	mov	r8, r13
0x5404:	mov	rcx, rbp
0x5407:	mov	rdx, rax
0x540a:	mov	esi, 1
0x540f:	xor	eax, eax
0x5411:	call	0x3100


0x5416:	lea	rsi, [rip + 0x103cb]
0x541d:	xor	edi, edi
0x541f:	mov	edx, 5
0x5424:	call	0x2c70


0x5429:	mov	rsi, qword ptr [rip + 0x214dd0]
0x5430:	mov	rdx, rax
0x5433:	mov	rdi, r15
0x5436:	call	0x7280


0x543b:	jmp	0x4817


0x58d1:	mov	rsi, rbx
0x58d4:	mov	rdi, rax
0x58d7:	call	0x6320


0x5c5c:	mov	rsi, qword ptr [rsp + 0x28]
0x5c61:	mov	rdi, rax
0x5c64:	call	0x6320


0x4952:	lea	rdx, [rip + 0x110fb]
0x4959:	mov	rcx, rax
0x495c:	xor	esi, esi
0x495e:	xor	edi, edi
0x4960:	xor	eax, eax
0x4962:	call	0x2fe0


0x4967:	jmp	0x3be8


0x48b5:	test	rax, rax
0x48b8:	je	0x4ac6


0x4ac6:	lea	rax, [rip + 0x10a50]
0x4acd:	jmp	0x48be


0x48be:	mov	rdi, rax
0x48c1:	call	0x63f0


0x48c6:	jmp	0x460e


0x48da:	test	rax, rax
0x48dd:	mov	rbp, rax
0x48e0:	mov	edx, 5
0x48e5:	lea	rsi, [rip + 0x10bb3]
0x48ec:	je	0x5b15


0x5b15:	xor	edi, edi
0x5b17:	call	0x2c70


0x48f2:	lea	rbx, [rsp + 0x3b0]
0x48fa:	mov	rdi, rax
0x48fd:	mov	edx, 0x10
0x4902:	mov	rsi, rbx
0x4905:	call	0x10760


0x490a:	mov	rdi, rbp
0x490d:	call	0x10900


0x4912:	test	eax, eax
0x4914:	jne	0x5b09


0x491a:	lea	rdi, [rip + 0x2159bf]
0x4921:	call	0xb310


0x5b09:	lea	rsi, [rip + 0xf9a9]
0x5b10:	mov	edx, 5
0x5b15:	xor	edi, edi
0x5b17:	call	0x2c70


0x4926:	lea	rdx, [rip + 0x2159b3]
0x492d:	mov	esi, 0x10
0x4932:	mov	rdi, rbx
0x4935:	call	0xbbf0


0x493a:	jmp	0x4600


0x5b1c:	mov	rsi, qword ptr [rsp + 0x40]
0x5b21:	mov	rdi, rax
0x5b24:	call	0x6320


0x5a84:	mov	rdi, rcx
0x5a87:	call	0x62a0


0x4b28:	test	al, al
0x4b2a:	movzx	ebp, byte ptr [rsp + 0x187]
0x4b32:	je	0x452f


0x452f:	cmp	byte ptr [rip + 0x215f04], 0
0x4536:	jne	0x4549


0x4b38:	test	bpl, bpl
0x4b3b:	je	0x45e9


0x4538:	cmp	byte ptr [rip + 0x215efa], 0
0x453f:	jne	0x4549


0x4549:	lea	rbx, [rsp + 0x3b0]
0x4551:	mov	rdi, qword ptr [rsp + 8]
0x4556:	mov	rsi, rbx
0x4559:	call	0x60d0


0x4b41:	cmp	byte ptr [rip + 0x2158f2], 0
0x4b48:	je	0x55a9


0x4541:	mov	byte ptr [rsp + 0x187], 0
0x4549:	lea	rbx, [rsp + 0x3b0]
0x4551:	mov	rdi, qword ptr [rsp + 8]
0x4556:	mov	rsi, rbx
0x4559:	call	0x60d0


0x55a9:	cmp	byte ptr [rip + 0x214e89], 0
0x55b0:	jne	0x4b4e


0x4b4e:	cmp	qword ptr [rip + 0x2158da], 0
0x4b56:	jne	0x4549


0x55b6:	jmp	0x45b5


0x4b5c:	jmp	0x45ac


0x45b5:	cmp	byte ptr [rip + 0x215e7d], 0
0x45bc:	jne	0x45e9


0x45ac:	cmp	byte ptr [rip + 0x215e87], 0
0x45b3:	jne	0x45e9


0x45be:	cmp	qword ptr [rip + 0x215e6a], 0
0x45c6:	je	0x45e9


0x45c8:	lea	rsi, [rip + 0x10d89]
0x45cf:	mov	edx, 5
0x45d4:	xor	edi, edi
0x45d6:	call	0x2c70


0x45db:	xor	esi, esi
0x45dd:	mov	rdx, rax
0x45e0:	xor	edi, edi
0x45e2:	xor	eax, eax
0x45e4:	call	0x2fe0


0x455e:	xor	eax, eax
0x4560:	or	rcx, 0xffffffffffffffff
0x4564:	mov	rdi, rbx
0x4567:	repne scasb	al, byte ptr [rdi]


0x4567:	repne scasb	al, byte ptr [rdi]


0x4569:	lea	rdx, [rip + 0x11229]
0x4570:	lea	rsi, [rip + 0x1123c]
0x4577:	xor	edi, edi
0x4579:	mov	rax, rcx
0x457c:	mov	r8d, 5
0x4582:	not	rax
0x4585:	lea	rcx, [rax - 1]
0x4589:	call	0x3040


0x3040:	jmp	qword ptr [rip + 0x216eb2]




0x4f13:	test	al, al
0x4f15:	je	0x5453


0x5453:	mov	rdi, qword ptr [rsp + 0x38]
0x5458:	mov	esi, 0x48
0x545d:	call	0x11fe0


0x4f1b:	cmp	byte ptr [rip + 0x2154fe], 0
0x4f22:	je	0x5440


0x5440:	movzx	eax, byte ptr [rsp + 0x137]
0x5448:	mov	byte ptr [rip + 0x214fed], al
0x544e:	jmp	0x4600


0x4f28:	mov	byte ptr [rsp + 0x10], 0
0x4f2d:	xor	r13d, r13d
0x4f30:	jmp	0x3bab


0x5462:	mov	rdx, qword ptr [rip + 0x214fc7]
0x5469:	lea	rcx, [rip + 0x214fc0]
0x5470:	test	rdx, rdx
0x5473:	je	0x547f


0x547f:	mov	qword ptr [rcx], rax
0x5482:	mov	rdi, qword ptr [rip + 0x214fa7]
0x5489:	mov	qword ptr [rax + 0x40], 0
0x5491:	movzx	r13d, byte ptr [rsp + 0x133]
0x549a:	mov	byte ptr [rsp + 0x10], 1
0x549f:	test	rdi, rdi
0x54a2:	jne	0x3b29


0x5475:	lea	rcx, [rdx + 0x40]
0x5479:	mov	rdx, qword ptr [rdx + 0x40]
0x547d:	jmp	0x5470


0x54a8:	jmp	0x3b9e


0x3b29:	movzx	edx, byte ptr [rdi + 0x34]
0x3b2d:	movzx	eax, byte ptr [rdi + 0x32]
0x3b31:	add	eax, edx
0x3b33:	movzx	edx, byte ptr [rdi + 0x35]
0x3b37:	add	eax, edx
0x3b39:	movzx	edx, byte ptr [rdi + 0x36]
0x3b3d:	add	eax, edx
0x3b3f:	movzx	edx, byte ptr [rdi + 0x38]
0x3b43:	or	dl, byte ptr [rdi + 0x33]
0x3b46:	cmp	qword ptr [rdi + 0x20], 0
0x3b4b:	setne	cl
0x3b4e:	or	edx, ecx
0x3b50:	movzx	edx, dl
0x3b53:	add	eax, edx
0x3b55:	sub	eax, 1
0x3b58:	jle	0x3b95


0x5470:	test	rdx, rdx
0x5473:	je	0x547f


0x36eb:	cmp	r12, r13
0x36ee:	jne	0x36c5


0x458e:	xor	esi, esi
0x4590:	mov	rdx, rax
0x4593:	xor	edi, edi
0x4595:	xor	eax, eax
0x4597:	mov	rcx, rbx
0x459a:	call	0x2fe0


0x459f:	test	bpl, bpl
0x45a2:	mov	byte ptr [rsp + 0x187], bpl
0x45aa:	je	0x45e9


0x3dfa:	lea	rdi, [r15 + 1]
0x3dfe:	lea	r15, [rsp + 0x3b0]
0x3e06:	mov	rsi, r13
0x3e09:	mov	qword ptr [rsp + 0x10], rax
0x3e0e:	call	0xdcd0


0x3e13:	lea	rdi, [r15 + 3]
0x3e17:	mov	edx, 0x2c
0x3e1c:	mov	rsi, rax
0x3e1f:	mov	dword ptr [rsp + 0x3b0], 0x206b2d
0x3e2a:	call	0x2ea0


0x3e2f:	cmp	qword ptr [r14 + 0x10], -1
0x3e34:	mov	qword ptr [rsp + 0x18], rax
0x3e39:	je	0x3e8a


0x3e8a:	mov	rsi, r15
0x3e8d:	mov	edi, 1
0x3e92:	call	0x10370


0x3e3b:	add	rbp, 1
0x3e3f:	mov	rsi, r13
0x3e42:	mov	rdi, rbp
0x3e45:	call	0xdcd0


0x3e4a:	mov	rdi, qword ptr [rsp + 0x10]
0x3e4f:	mov	rsi, rax
0x3e52:	mov	word ptr [rdi], 0x2d20
0x3e57:	add	rdi, 2
0x3e5b:	call	0x2b50


0x2b50:	jmp	qword ptr [rip + 0x21712a]




0x4d17:	mov	rdi, qword ptr [rsp + 0x48]
0x4d1c:	mov	r15, qword ptr [rsp + 0x160]
0x4d24:	call	0x11de0


0x4d29:	lea	rdi, [rax + 0x58]
0x4d2d:	mov	qword ptr [rax + 0x30], r15
0x4d31:	mov	qword ptr [rax + 0x28], r15
0x4d35:	xor	esi, esi
0x4d37:	mov	qword ptr [rax + 0x18], 0
0x4d3f:	mov	qword ptr [rax + 0x10], 0
0x4d47:	mov	qword ptr [rax + 8], 0
0x4d4f:	mov	qword ptr [rax], 0
0x4d56:	mov	qword ptr [rax + 0x20], 0
0x4d5e:	mov	qword ptr [rax + 0x38], 0
0x4d66:	mov	dword ptr [rax + 0x50], 0
0x4d6d:	mov	byte ptr [rax + 0x54], 0
0x4d71:	mov	qword ptr [rsp + 0x18], rax
0x4d76:	call	0x3170


0x4d7b:	mov	r10, qword ptr [rsp + 0x18]
0x4d80:	mov	r8, r15
0x4d83:	mov	r15, qword ptr [rsp + 0x40]
0x4d88:	xor	r9d, r9d
0x4d8b:	mov	rdx, rbx
0x4d8e:	lea	r11, [r10 + 0x80]
0x4d95:	mov	rdi, r10
0x4d98:	mov	rcx, r15
0x4d9b:	mov	rsi, r11
0x4d9e:	mov	qword ptr [rsp + 0x18], r11
0x4da3:	call	0x6800


0x4da8:	sub	rsp, 8
0x4dac:	mov	r8, r14
0x4daf:	mov	rsi, r15
0x4db2:	push	rbp
0x4db3:	mov	r11, qword ptr [rsp + 0x28]
0x4db8:	mov	rdi, rbx
0x4dbb:	mov	r9, qword ptr [rsp + 0xa0]
0x4dc3:	mov	rdx, qword ptr [rsp + 0x170]
0x4dcb:	mov	rcx, r11
0x4dce:	call	0x8ff0


0x4dd3:	pop	rdx
0x4dd4:	pop	rcx
0x4dd5:	mov	rdi, qword ptr [rsp + 0x90]
0x4ddd:	mov	rsi, rbp
0x4de0:	call	0x71f0


0x5180:	test	eax, eax
0x5182:	jne	0x518c


0x5184:	mov	r15, qword ptr [rsp + 0x90]
0x518c:	mov	rsi, qword ptr [rsp + 0x20]
0x5191:	mov	edi, 9
0x5196:	call	0x3110


0x518c:	mov	rsi, qword ptr [rsp + 0x20]
0x5191:	mov	edi, 9
0x5196:	call	0x3110


0x519b:	test	eax, eax
0x519d:	jne	0x51ae


0x519f:	mov	rax, qword ptr [rsp + 0x90]
0x51a7:	cmp	r15, rax
0x51aa:	cmova	r15, rax
0x51ae:	mov	rsi, qword ptr [rsp + 0x20]
0x51b3:	mov	edi, 5
0x51b8:	shr	r15, 1
0x51bb:	call	0x3110


0x51ae:	mov	rsi, qword ptr [rsp + 0x20]
0x51b3:	mov	edi, 5
0x51b8:	shr	r15, 1
0x51bb:	call	0x3110


0x51c0:	test	eax, eax
0x51c2:	jne	0x51db


0x51c4:	mov	rax, qword ptr [rsp + 0x90]
0x51cc:	shr	rax, 4
0x51d0:	imul	rax, rax, 0xf
0x51d4:	cmp	r15, rax
0x51d7:	cmova	r15, rax
0x51db:	call	0xe2d0


0x51db:	call	0xe2d0


0x51e0:	movsd	qword ptr [rsp + 0x20], xmm0
0x51e6:	call	0xe1f0


0x51eb:	movsd	xmm1, qword ptr [rip + 0x107f5]
0x51f3:	movsd	xmm2, qword ptr [rsp + 0x20]
0x51f9:	mulsd	xmm1, xmm0
0x51fd:	mulsd	xmm0, qword ptr [rip + 0x107eb]
0x5205:	maxsd	xmm2, xmm1
0x5209:	movapd	xmm1, xmm2
0x520d:	pxor	xmm2, xmm2
0x5211:	cvtsi2sd	xmm2, r15
0x5216:	ucomisd	xmm2, xmm0
0x521a:	jbe	0x5244


0x5244:	test	r15, r15
0x5247:	js	0x5574


0x521c:	movsd	xmm2, qword ptr [rip + 0x107bc]
0x5224:	ucomisd	xmm0, xmm2
0x5228:	jb	0x559f


0x5574:	mov	rax, r15
0x5577:	mov	rcx, r15
0x557a:	pxor	xmm0, xmm0
0x557e:	shr	rax, 1
0x5581:	and	ecx, 1
0x5584:	or	rax, rcx
0x5587:	cvtsi2sd	xmm0, rax
0x558c:	addsd	xmm0, xmm0
0x5590:	jmp	0x5256


0x524d:	pxor	xmm0, xmm0
0x5251:	cvtsi2sd	xmm0, r15
0x5256:	ucomisd	xmm0, xmm1
0x525a:	jbe	0x5284


0x559f:	cvttsd2si	r15, xmm0
0x55a4:	jmp	0x5244


0x522e:	subsd	xmm0, xmm2
0x5232:	movabs	rax, 0x8000000000000000
0x523c:	cvttsd2si	r15, xmm0
0x5241:	xor	r15, rax
0x5244:	test	r15, r15
0x5247:	js	0x5574


0x5256:	ucomisd	xmm0, xmm1
0x525a:	jbe	0x5284


0x5284:	mov	eax, dword ptr [rip + 0x214d9a]
0x528a:	imul	rax, rax, 0x22
0x528e:	cmp	rax, r15
0x5291:	cmovb	rax, r15
0x5295:	mov	qword ptr [rip + 0x214f84], rax
0x529c:	jmp	0x50b1


0x525c:	ucomisd	xmm1, qword ptr [rip + 0x1077c]
0x5264:	jb	0x5595


0x5595:	cvttsd2si	r15, xmm1
0x559a:	jmp	0x5284


0x526a:	subsd	xmm1, qword ptr [rip + 0x1076e]
0x5272:	movabs	rax, 0x8000000000000000
0x527c:	cvttsd2si	r15, xmm1
0x5281:	xor	r15, rax
0x5284:	mov	eax, dword ptr [rip + 0x214d9a]
0x528a:	imul	rax, rax, 0x22
0x528e:	cmp	rax, r15
0x5291:	cmovb	rax, r15
0x5295:	mov	qword ptr [rip + 0x214f84], rax
0x529c:	jmp	0x50b1


0x4b97:	test	eax, eax
0x4b99:	jne	0x58ba


0x58ba:	mov	rbx, qword ptr [rbp]
0x58be:	lea	rsi, [rip + 0xff32]
0x58c5:	mov	edx, 5
0x58ca:	xor	edi, edi
0x58cc:	call	0x2c70


0x3898:	cmp	eax, -1
0x389b:	mov	r9d, eax
0x389e:	je	0x384f


0x38a0:	lea	eax, [rax + 0x83]
0x38a6:	cmp	eax, 0x10a
0x38ab:	ja	0x5af0


0x38b1:	movsxd	rax, dword ptr [r13 + rax*4]
0x38b6:	add	rax, r13
0x38b9:	jmp	rax


0x5af0:	mov	edi, 2
0x5af5:	call	0xa8c0


0x3e60:	xor	edi, edi
0x3e62:	cmp	qword ptr [r14 + 0x18], -1
0x3e67:	mov	rsi, r13
0x3e6a:	sete	dil
0x3e6e:	add	rdi, rbp
0x3e71:	call	0xdcd0


0x3e76:	mov	rdx, qword ptr [rsp + 0x18]
0x3e7b:	mov	rsi, rax
0x3e7e:	lea	rdi, [rdx + 1]
0x3e82:	mov	byte ptr [rdx], 0x2c
0x3e85:	call	0x2b50


0x5366:	mov	rdi, rbp
0x5369:	call	0x31c0


0x536e:	jmp	0x4fbe


0x53ac:	jmp	0x4fdb


0x39d5:	mov	rsi, rbp
0x39d8:	mov	rdi, rbx
0x39db:	call	0x10fb0


0x39e0:	test	al, al
0x39e2:	mov	rsi, qword ptr [rsp + 0x18]
0x39e7:	je	0x5b4d


0x5b4d:	mov	edi, 4
0x5b52:	call	0x100c0


0x39ed:	mov	rdi, rbx
0x39f0:	call	0x71f0


0x39f5:	mov	rbp, qword ptr [rsp + 0x1a0]
0x39fd:	test	rbp, rbp
0x3a00:	je	0x5b81


0x5b81:	mov	rsi, qword ptr [rsp + 0x18]
0x5b86:	mov	edi, 4
0x5b8b:	call	0x100c0


0x3a06:	mov	rdi, r14
0x3a09:	lea	rbx, [rip + 0x12c2a]
0x3a10:	call	0x31c0


0x3a15:	mov	r14, qword ptr [rsp + 0x1a8]
0x3a1d:	nop	dword ptr [rax]
0x3a20:	mov	rdx, qword ptr [r14 + r15*8]
0x3a24:	mov	ecx, 2
0x3a29:	mov	rdi, rbx
0x3a2c:	mov	rsi, rdx
0x3a2f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3a2f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3a31:	seta	al
0x3a34:	sbb	al, 0
0x3a36:	test	al, al
0x3a38:	je	0x5bba


0x5bba:	mov	rsi, rdx
0x5bbd:	mov	edi, 4
0x5bc2:	call	0x100c0


0x3a3e:	add	r15, 1
0x3a42:	cmp	byte ptr [rdx], 0
0x3a45:	je	0x5bf1


0x5bf1:	mov	rdx, qword ptr [rsp + 0x18]
0x5bf6:	mov	esi, 3
0x5bfb:	xor	edi, edi
0x5bfd:	call	0x101c0


0x3a4b:	cmp	rbp, r15
0x3a4e:	jne	0x3a20


0x3a20:	mov	rdx, qword ptr [r14 + r15*8]
0x3a24:	mov	ecx, 2
0x3a29:	mov	rdi, rbx
0x3a2c:	mov	rsi, rdx
0x3a2f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x5d18:	mov	rdi, qword ptr [rip + 0x2144c1]
0x5d1f:	lea	rsi, [rip + 0xf8f9]
0x5d26:	call	0x31e0


0x5d2b:	mov	rdi, qword ptr [rip + 0x2144ae]
0x5d32:	lea	rsi, [rip + 0xf934]
0x5d39:	call	0x31e0


0x5901:	lea	rsi, [rip + 0xf830]
0x5908:	mov	edx, 5
0x590d:	xor	edi, edi
0x590f:	call	0x2c70


0x5914:	xor	esi, esi
0x5916:	mov	rdx, rax
0x5919:	mov	edi, 2
0x591e:	xor	eax, eax
0x5920:	call	0x2fe0


0x5925:	lea	rsi, [rip + 0xf794]
0x592c:	mov	edx, 5
0x5931:	xor	edi, edi
0x5933:	call	0x2c70


0x5938:	xor	esi, esi
0x593a:	mov	rdx, rax
0x593d:	mov	edi, 2
0x5942:	xor	eax, eax
0x5944:	call	0x2fe0


0x5949:	lea	rsi, [rip + 0xf7c8]
0x5950:	mov	edx, 5
0x5955:	xor	edi, edi
0x5957:	call	0x2c70


0x595c:	xor	esi, esi
0x595e:	mov	rdx, rax
0x5961:	mov	edi, 2
0x5966:	xor	eax, eax
0x5968:	call	0x2fe0


0x596d:	lea	rcx, [rip + 0xe3f0]
0x5974:	lea	rsi, [rip + 0xfb07]
0x597b:	lea	rdi, [rip + 0x100d3]
0x5982:	mov	edx, 0x1112
0x5987:	call	0x2d70


0xb2ca:	mov	esi, dword ptr [rbx]
0xb2cc:	lea	rdx, [rip + 0xa120]
0xb2d3:	mov	rcx, rax
0xb2d6:	mov	r8, rbp
0xb2d9:	xor	edi, edi
0xb2db:	xor	eax, eax
0xb2dd:	call	0x2fe0


0xa43a:	mov	ecx, dword ptr [rip + 0x20fbe4]
0xa440:	mov	rsi, qword ptr [rsp + 8]
0xa445:	cmp	rax, rbp
0xa448:	mov	rdx, rbp
0xa44b:	cmovbe	rdx, rax
0xa44f:	add	rbx, rax
0xa452:	sub	rbp, rdx
0xa455:	sub	rsi, rbx
0xa458:	mov	rdx, r12
0xa45b:	shl	rdx, 4
0xa45f:	add	r12, 1
0xa463:	cmp	rcx, rsi
0xa466:	mov	qword ptr [r14 + rdx], r13
0xa46a:	mov	qword ptr [r14 + rdx + 8], r15
0xa46f:	jbe	0xa400


0xa400:	mov	rdi, qword ptr [rsp + 0x10]
0xa405:	xor	esi, esi
0xa407:	call	0x8d00


0xa471:	mov	rax, r12
0xa474:	xor	edx, edx
0xa476:	mov	r9, r12
0xa479:	div	rcx
0xa47c:	mov	r10, rbx
0xa47f:	shl	r9, 4
0xa483:	shl	r10, 4
0xa487:	add	r9, r14
0xa48a:	add	r10, r14
0xa48d:	sub	rcx, rdx
0xa490:	cmp	rcx, rsi
0xa493:	jae	0xa521


0xa4e8:	mov	r9, qword ptr [rsp + 0x38]
0xa4ed:	mov	r11, qword ptr [rsp + 0x18]
0xa4f2:	cmp	rax, rbp
0xa4f5:	mov	rdx, rbp
0xa4f8:	cmovbe	rdx, rax
0xa4fc:	add	r12, 1
0xa500:	add	rbx, rax
0xa503:	mov	qword ptr [r9], r15
0xa506:	mov	qword ptr [r9 + 8], r11
0xa50a:	mov	r10, rbx
0xa50d:	mov	r9, r12
0xa510:	shl	r10, 4
0xa514:	sub	rbp, rdx
0xa517:	shl	r9, 4
0xa51b:	add	r10, r14
0xa51e:	add	r9, r14
0xa521:	mov	r15, qword ptr [rsp + 8]
0xa526:	mov	rsi, r10
0xa529:	mov	rdi, r9
0xa52c:	add	rbp, r12
0xa52f:	sub	r12, rbx
0xa532:	mov	rdx, r15
0xa535:	add	r15, r12
0xa538:	sub	rdx, rbx
0xa53b:	shl	rdx, 4
0xa53f:	call	0x2fc0


0xa883:	jmp	0xa669


0x120df:	mov	rcx, r12
0x120e2:	mov	rdx, rbx
0x120e5:	mov	esi, 8
0x120ea:	xor	edi, edi
0x120ec:	mov	rbp, rax
0x120ef:	call	0x10030


0x120f4:	lea	rsi, [rip + 0x43b5]
0x120fb:	mov	rbx, rax
0x120fe:	mov	edx, 5
0x12103:	xor	edi, edi
0x12105:	call	0x2c70


0x1210a:	mov	r8, rbp
0x1210d:	mov	rcx, rbx
0x12110:	mov	edi, dword ptr [rip + 0x20801a]
0x12116:	pop	rbx
0x12117:	pop	rbp
0x12118:	pop	r12
0x1211a:	pop	r13
0x1211c:	pop	r14
0x1211e:	mov	rdx, rax
0x12121:	xor	esi, esi
0x12123:	xor	eax, eax
0x12125:	jmp	0x2fe0


0x65f1:	lea	rsi, [rip + 0xd970]
0x65f8:	mov	rbx, rax
0x65fb:	mov	edx, 5
0x6600:	xor	edi, edi
0x6602:	call	0x2c70


0x6607:	mov	rcx, rbx
0x660a:	mov	rdx, rax
0x660d:	xor	esi, esi
0x660f:	mov	edi, 2
0x6614:	xor	eax, eax
0x6616:	call	0x2fe0


0x661b:	nop	dword ptr [rax + rax]


0xfb3c:	add	rsp, 0x20
0xfb40:	mov	r11, qword ptr [rsp + 0x10]
0xfb45:	cmp	r11, rax
0xfb48:	ja	0xfbb1


0xfb4a:	lea	rsi, [rax + 1]
0xfb4e:	lea	rax, [rip + 0x20ad6b]
0xfb55:	cmp	r12, rax
0xfb58:	mov	qword ptr [rbx], rsi
0xfb5b:	je	0xfb6f


0xfbb1:	mov	eax, dword ptr [rsp + 0x18]
0xfbb5:	mov	dword ptr [r13], eax
0xfbb9:	add	rsp, 0x28
0xfbbd:	mov	rax, r12
0xfbc0:	pop	rbx
0xfbc1:	pop	rbp
0xfbc2:	pop	r12
0xfbc4:	pop	r13
0xfbc6:	pop	r14
0xfbc8:	pop	r15
0xfbca:	ret	


0xfb6f:	mov	rdi, rsi
0xfb72:	mov	qword ptr [rsp + 0x10], rsi
0xfb77:	call	0x11de0


0xfb5d:	mov	rdi, r12
0xfb60:	mov	qword ptr [rsp + 0x10], rsi
0xfb65:	call	0x31c0


0xfb6a:	mov	rsi, qword ptr [rsp + 0x10]
0xfb6f:	mov	rdi, rsi
0xfb72:	mov	qword ptr [rsp + 0x10], rsi
0xfb77:	call	0x11de0


0xfb7c:	sub	rsp, 8
0xfb80:	mov	qword ptr [rbx + 8], rax
0xfb84:	mov	r8d, dword ptr [rbp]
0xfb88:	push	qword ptr [rbp + 0x30]
0xfb8b:	push	qword ptr [rbp + 0x28]
0xfb8e:	mov	rcx, r14
0xfb91:	push	r15
0xfb93:	mov	r9d, dword ptr [rsp + 0x3c]
0xfb98:	mov	rdi, rax
0xfb9b:	mov	rdx, qword ptr [rsp + 0x28]
0xfba0:	mov	rsi, qword ptr [rsp + 0x30]
0xfba5:	mov	r12, rax
0xfba8:	call	0xe810


0x102c2:	mov	rdi, qword ptr [rsp + 0x38]
0x102c7:	xor	rdi, qword ptr fs:[0x28]
0x102d0:	jne	0x102dc


0x102d2:	add	rsp, 0x48
0x102d6:	ret	


0x102dc:	call	0x2ca0


0x1000f:	mov	rcx, qword ptr [rsp + 0x38]
0x10014:	xor	rcx, qword ptr fs:[0x28]
0x1001d:	jne	0x10029


0x1001f:	add	rsp, 0x48
0x10023:	ret	


0x10029:	call	0x2ca0


0x1009b:	mov	rdx, qword ptr [rsp + 0x38]
0x100a0:	xor	rdx, qword ptr fs:[0x28]
0x100a9:	jne	0x100b5


0x100ab:	add	rsp, 0x48
0x100af:	ret	


0x100b5:	call	0x2ca0


0x1022f:	mov	rcx, qword ptr [rsp + 0x38]
0x10234:	xor	rcx, qword ptr fs:[0x28]
0x1023d:	jne	0x10249


0x1023f:	add	rsp, 0x48
0x10243:	ret	


0x10249:	call	0x2ca0


0x5c02:	lea	rsi, [rip + 0xf617]
0x5c09:	mov	rbx, rax
0x5c0c:	mov	edx, 5
0x5c11:	xor	edi, edi
0x5c13:	call	0x2c70


0x5c18:	mov	r8, r15
0x5c1b:	mov	rdx, rax
0x5c1e:	mov	rcx, rbx
0x5c21:	xor	esi, esi
0x5c23:	mov	edi, 2
0x5c28:	xor	eax, eax
0x5c2a:	call	0x2fe0


0x7173:	lea	rsi, [rip + 0xe2f3]
0x717a:	mov	rbx, rax
0x717d:	mov	edx, 5
0x7182:	xor	edi, edi
0x7184:	call	0x2c70


0x7189:	mov	rcx, rbx
0x718c:	mov	rdx, rax
0x718f:	mov	esi, ebp
0x7191:	mov	edi, 2
0x7196:	xor	eax, eax
0x7198:	call	0x2fe0


0x6d6f:	lea	rsi, [rip + 0xe6dc]
0x6d76:	xor	edi, edi
0x6d78:	mov	edx, 5
0x6d7d:	mov	rbp, rax
0x6d80:	call	0x2c70


0x6d85:	mov	esi, dword ptr [rsp + 0xc]
0x6d89:	mov	rdx, rax
0x6d8c:	mov	rcx, rbp
0x6d8f:	xor	edi, edi
0x6d91:	xor	eax, eax
0x6d93:	call	0x2fe0


0x6d98:	jmp	0x6d25


0x633d:	mov	rbp, rax
0x6340:	call	0x2b10


0x6345:	mov	esi, dword ptr [rax]
0x6347:	lea	rdx, [rip + 0xf0a5]
0x634e:	mov	r8, rbp
0x6351:	mov	rcx, rbx
0x6354:	mov	edi, 2
0x6359:	xor	eax, eax
0x635b:	call	0x2fe0


0x1015e:	mov	rsi, qword ptr [rsp + 0x38]
0x10163:	xor	rsi, qword ptr fs:[0x28]
0x1016c:	jne	0x10173


0x1016e:	add	rsp, 0x48
0x10172:	ret	


0x10173:	call	0x2ca0


0xfbad:	add	rsp, 0x20
0xfbb1:	mov	eax, dword ptr [rsp + 0x18]
0xfbb5:	mov	dword ptr [r13], eax
0xfbb9:	add	rsp, 0x28
0xfbbd:	mov	rax, r12
0xfbc0:	pop	rbx
0xfbc1:	pop	rbp
0xfbc2:	pop	r12
0xfbc4:	pop	r13
0xfbc6:	pop	r14
0xfbc8:	pop	r15
0xfbca:	ret	


0xfdfc:	lea	rsi, [rax + 1]
0xfe00:	mov	qword ptr [rsp + 0x48], rax
0xfe05:	add	rsp, 0x20
0xfe09:	mov	rdi, rsi
0xfe0c:	mov	qword ptr [rsp + 0x18], rsi
0xfe11:	call	0x11de0


0xfe16:	mov	qword ptr [rsp + 0x10], rax
0xfe1b:	sub	rsp, 8
0xfe1f:	push	qword ptr [rbx + 0x30]
0xfe22:	push	qword ptr [rbx + 0x28]
0xfe25:	mov	r10, qword ptr [rsp + 0x38]
0xfe2a:	mov	r9d, ebp
0xfe2d:	mov	r8d, dword ptr [rbx]
0xfe30:	mov	rcx, r15
0xfe33:	mov	rdx, r14
0xfe36:	mov	rdi, rax
0xfe39:	push	r10
0xfe3b:	mov	rsi, qword ptr [rsp + 0x38]
0xfe40:	call	0xe810


0xfe45:	mov	eax, dword ptr [rsp + 0x2c]
0xfe49:	add	rsp, 0x20
0xfe4d:	test	r12, r12
0xfe50:	mov	dword ptr [r13], eax
0xfe54:	je	0xfe5f


0xfe5f:	mov	rax, qword ptr [rsp + 0x10]
0xfe64:	add	rsp, 0x38
0xfe68:	pop	rbx
0xfe69:	pop	rbp
0xfe6a:	pop	r12
0xfe6c:	pop	r13
0xfe6e:	pop	r14
0xfe70:	pop	r15
0xfe72:	ret	


0xfe56:	mov	r11, qword ptr [rsp + 0x28]
0xfe5b:	mov	qword ptr [r12], r11
0xfe5f:	mov	rax, qword ptr [rsp + 0x10]
0xfe64:	add	rsp, 0x38
0xfe68:	pop	rbx
0xfe69:	pop	rbp
0xfe6a:	pop	r12
0xfe6c:	pop	r13
0xfe6e:	pop	r14
0xfe70:	pop	r15
0xfe72:	ret	


0xfd71:	mov	dword ptr [rbp], r12d
0xfd75:	add	rsp, 0x38
0xfd79:	pop	rbx
0xfd7a:	pop	rbp
0xfd7b:	pop	r12
0xfd7d:	pop	r13
0xfd7f:	pop	r14
0xfd81:	pop	r15
0xfd83:	ret	


0x3e97:	mov	rsi, qword ptr [rsp + 0x30]
0x3e9c:	xor	edi, edi
0x3e9e:	mov	rbp, rax
0x3ea1:	call	0x10370


0x3ea6:	lea	rsi, [rip + 0x11403]
0x3ead:	mov	r15, rax
0x3eb0:	mov	edx, 5
0x3eb5:	xor	edi, edi
0x3eb7:	call	0x2c70


0x3ebc:	mov	r8, rbp
0x3ebf:	mov	rcx, r15
0x3ec2:	mov	rdx, rax
0x3ec5:	xor	esi, esi
0x3ec7:	xor	edi, edi
0x3ec9:	xor	eax, eax
0x3ecb:	call	0x2fe0


0x3ed0:	mov	r15, qword ptr [r14]
0x3ed3:	mov	rbp, qword ptr [r14 + 0x10]
0x3ed7:	xor	eax, eax
0x3ed9:	cmp	r15, -1
0x3edd:	je	0x3f0d


0xb013:	mov	rdx, r12
0xb016:	mov	rbp, rax
0xb019:	mov	esi, 8
0xb01e:	xor	edi, edi
0xb020:	call	0xffa0


0xb025:	mov	r8, rbp
0xb028:	mov	rdx, rbx
0xb02b:	mov	rcx, rax
0xb02e:	pop	rbx
0xb02f:	pop	rbp
0xb030:	pop	r12
0xb032:	xor	esi, esi
0xb034:	xor	edi, edi
0xb036:	xor	eax, eax
0xb038:	jmp	0x2fe0


0xb1d3:	mov	rdx, r15
0xb1d6:	mov	rsi, rbp
0xb1d9:	mov	rdi, rbx
0xb1dc:	call	0xb060


0xb1e1:	call	r13


0xa765:	mov	r13, qword ptr [rsp + 8]
0xa76a:	mov	r11, qword ptr [rsp + 0x18]
0xa76f:	lea	rdi, [r14 + 0x10]
0xa773:	mov	rax, qword ptr [rsp + 0x20]
0xa778:	mov	rsi, r12
0xa77b:	sub	r13, rbx
0xa77e:	mov	qword ptr [r14], r11
0xa781:	mov	rdx, r13
0xa784:	mov	qword ptr [r14 + 8], rax
0xa788:	shl	rdx, 4
0xa78c:	call	0x2fc0


0xa791:	mov	r10, qword ptr [rsp + 0x10]
0xa796:	sub	rbp, r10
0xa799:	lea	rax, [rbp + 1]
0xa79d:	mov	qword ptr [rsp + 0x10], rax
0xa7a2:	lea	rax, [r13 + 1]
0xa7a6:	mov	qword ptr [rsp + 8], rax
0xa7ab:	jmp	0xa6a8


0xa6a8:	mov	rbp, qword ptr [rsp + 8]
0xa6ad:	mov	rdx, qword ptr [rsp + 0x28]
0xa6b2:	mov	rdi, r14
0xa6b5:	mov	rsi, rbp
0xa6b8:	call	0x8a70


0xa34e:	mov	rcx, qword ptr [rsp + 8]
0xa353:	xor	rcx, qword ptr fs:[0x28]
0xa35c:	mov	rax, rbx
0xa35f:	jne	0xa397


0xa361:	add	rsp, 0x18
0xa365:	pop	rbx
0xa366:	pop	rbp
0xa367:	pop	r12
0xa369:	pop	r13
0xa36b:	pop	r14
0xa36d:	pop	r15
0xa36f:	ret	


0xa397:	call	0x2ca0


0xa822:	mov	rax, qword ptr [rsp + 0xe8]
0xa82a:	xor	rax, qword ptr fs:[0x28]
0xa833:	jne	0xa8ae


0xa835:	add	rsp, 0xf8
0xa83c:	pop	rbx
0xa83d:	pop	rbp
0xa83e:	pop	r12
0xa840:	pop	r13
0xa842:	pop	r14
0xa844:	pop	r15
0xa846:	ret	


0xa8ae:	call	0x2ca0


0x8eae:	jmp	0x8e3e


0x8b7d:	mov	edi, r14d
0x8b80:	lea	r14, [r13 + rbx*8]
0x8b85:	call	0x2db0


0x8b8a:	mov	edi, dword ptr [rsp + 0x14]
0x8b8e:	call	0x2db0


0x8b93:	mov	edi, dword ptr [rsp + 0x10]
0x8b97:	lea	rsi, [rip + 0xccf5]
0x8b9e:	call	0x2f80


0x8ba3:	test	rax, rax
0x8ba6:	je	0x8c2e


0x8c2e:	call	0x2b10


0x8bac:	mov	qword ptr [r13 + rbx*8], rax
0x8bb1:	add	rbx, 1
0x8bb5:	add	rbp, 0x10
0x8bb9:	cmp	r12, rbx
0x8bbc:	jne	0x8b1f


0x8c33:	mov	edi, dword ptr [rsp + 0x10]
0x8c37:	mov	r12d, dword ptr [rax]
0x8c3a:	mov	rbp, rax
0x8c3d:	call	0x2db0


0x8c42:	mov	dword ptr [rbp], r12d
0x8c46:	mov	qword ptr [r14], 0
0x8c4d:	jmp	0x8bc8


0x5bc7:	lea	rsi, [rip + 0xf612]
0x5bce:	mov	rbx, rax
0x5bd1:	mov	edx, 5
0x5bd6:	xor	edi, edi
0x5bd8:	call	0x2c70


0x5bdd:	mov	rcx, rbx
0x5be0:	mov	rdx, rax
0x5be3:	xor	esi, esi
0x5be5:	mov	edi, 2
0x5bea:	xor	eax, eax
0x5bec:	call	0x2fe0


0x5b90:	lea	rsi, [rip + 0xfbdc]
0x5b97:	mov	rbx, rax
0x5b9a:	mov	edx, 5
0x5b9f:	xor	edi, edi
0x5ba1:	call	0x2c70


0x5ba6:	mov	rcx, rbx
0x5ba9:	mov	rdx, rax
0x5bac:	xor	esi, esi
0x5bae:	mov	edi, 2
0x5bb3:	xor	eax, eax
0x5bb5:	call	0x2fe0


0x5b57:	lea	rsi, [rip + 0xf662]
0x5b5e:	mov	rbx, rax
0x5b61:	mov	edx, 5
0x5b66:	xor	edi, edi
0x5b68:	call	0x2c70


0x5b6d:	mov	rcx, rbx
0x5b70:	mov	rdx, rax
0x5b73:	xor	esi, esi
0x5b75:	mov	edi, 2
0x5b7a:	xor	eax, eax
0x5b7c:	call	0x2fe0


0x5cc5:	lea	rsi, [rip + 0xf6c4]
0x5ccc:	mov	rbx, rax
0x5ccf:	mov	edx, 5
0x5cd4:	xor	edi, edi
0x5cd6:	call	0x2c70


0x5cdb:	movsx	r8d, r12b
0x5cdf:	mov	rdx, rax
0x5ce2:	mov	rcx, rbx
0x5ce5:	xor	esi, esi
0x5ce7:	mov	edi, 2
0x5cec:	xor	eax, eax
0x5cee:	call	0x2fe0


0x5a99:	lea	rsi, [rip + 0xfcc2]
0x5aa0:	mov	rbx, rax
0x5aa3:	mov	edx, 5
0x5aa8:	xor	edi, edi
0x5aaa:	call	0x2c70


0x5aaf:	mov	rcx, rbx
0x5ab2:	mov	rdx, rax
0x5ab5:	xor	esi, esi
0x5ab7:	xor	edi, edi
0x5ab9:	xor	eax, eax
0x5abb:	call	0x2fe0


0x5ac0:	lea	rsi, [rip + 0xf6c1]
0x5ac7:	mov	edx, 5
0x5acc:	xor	edi, edi
0x5ace:	call	0x2c70


0x5ad3:	mov	rdi, qword ptr [rip + 0x214726]
0x5ada:	lea	rdx, [rip + 0x1061e]
0x5ae1:	mov	rcx, rax
0x5ae4:	mov	esi, 1
0x5ae9:	xor	eax, eax
0x5aeb:	call	0x3100


0x8f4b:	lea	rsi, [rip + 0xb0e6]
0x8f52:	mov	edx, 5
0x8f57:	xor	edi, edi
0x8f59:	mov	rbx, rax
0x8f5c:	call	0x2c70


0x8f61:	mov	esi, dword ptr [r14]
0x8f64:	mov	rdx, rax
0x8f67:	mov	rcx, rbx
0x8f6a:	mov	edi, 2
0x8f6f:	xor	eax, eax
0x8f71:	call	0x2fe0


0x8cd1:	lea	rsi, [rip + 0xb308]
0x8cd8:	mov	edx, 5
0x8cdd:	xor	edi, edi
0x8cdf:	mov	rbx, rax
0x8ce2:	call	0x2c70


0x8ce7:	mov	esi, dword ptr [rbp]
0x8cea:	mov	rdx, rax
0x8ced:	mov	rcx, rbx
0x8cf0:	mov	edi, 2
0x8cf5:	xor	eax, eax
0x8cf7:	call	0x2fe0


0x8cfc:	nop	dword ptr [rax]


0x66c9:	lea	rsi, [rip + 0xed5b]
0x66d0:	mov	rbx, rax
0x66d3:	mov	edx, 5
0x66d8:	xor	edi, edi
0x66da:	call	0x2c70


0x66df:	mov	rcx, rbx
0x66e2:	mov	rdx, rax
0x66e5:	xor	esi, esi
0x66e7:	mov	edi, 2
0x66ec:	xor	eax, eax
0x66ee:	call	0x2fe0


0x6704:	lea	rsi, [rip + 0xed0c]
0x670b:	mov	edx, 5
0x6710:	xor	edi, edi
0x6712:	mov	rbp, rax
0x6715:	call	0x2c70


0x671a:	mov	rbx, rax
0x671d:	call	0x2b10


0x6722:	mov	esi, dword ptr [rax]
0x6724:	mov	rcx, rbp
0x6727:	mov	rdx, rbx
0x672a:	mov	edi, 2
0x672f:	xor	eax, eax
0x6731:	call	0x2fe0


0x111ae:	mov	rax, qword ptr [rbx + 0x30]
0x111b2:	jmp	0x11044


0x1116e:	mov	rdx, qword ptr [rbx + 0x88]
0x11175:	jmp	0x11072


0x10ffe:	mov	rdx, qword ptr [rbx + 0x30]
0x11002:	mov	eax, dword ptr [rsp + 0xc]
0x11006:	lea	rcx, [rdx + 1]
0x1100a:	test	eax, eax
0x1100c:	mov	qword ptr [rbx + 0x30], rcx
0x11010:	mov	byte ptr [rdx], al
0x11012:	jne	0x10fd6


0x10ec2:	mov	rdx, qword ptr [rbx + 0xe0]
0x10ec9:	mov	qword ptr [rdx], rbp
0x10ecc:	add	qword ptr [rbx + 0xe0], 8
0x10ed4:	add	qword ptr [rbx], 1
0x10ed8:	pop	rbx
0x10ed9:	pop	rbp
0x10eda:	pop	r12
0x10edc:	ret	


0x10eee:	mov	rdx, qword ptr [rbx + 0x88]
0x10ef5:	jmp	0x10e8f


0x8c29:	jmp	0x8b39


0x6db8:	jmp	0x6cd9


0x132f1:	or	byte ptr [rbx + 0x50], 2
0x132f5:	test	r12, r12
0x132f8:	mov	rsi, r12
0x132fb:	jne	0x132d8


0x132d8:	cmp	rsi, rbp
0x132db:	jae	0x132e5


0x67bc:	test	rax, rax
0x67bf:	je	0x67f4


0x67c1:	pop	rbx
0x67c2:	ret	


0x130ee:	test	rax, rax
0x130f1:	mov	qword ptr [rbx + 8], rax
0x130f5:	je	0x1313d


0x1313d:	call	qword ptr [rip + 0x20705d]


0x130f7:	lea	rdx, [rax + r12 + 0x10]
0x130fc:	neg	rbp
0x130ff:	and	rbp, rdx
0x13102:	mov	rdx, qword ptr [rbx]
0x13105:	mov	qword ptr [rbx + 0x10], rbp
0x13109:	mov	qword ptr [rbx + 0x18], rbp
0x1310d:	add	rdx, rax
0x13110:	mov	qword ptr [rax], rdx
0x13113:	mov	qword ptr [rbx + 0x20], rdx
0x13117:	mov	qword ptr [rax + 8], 0
0x1311f:	mov	eax, 1
0x13124:	and	byte ptr [rbx + 0x50], 0xf9
0x13128:	pop	rbx
0x13129:	pop	rbp
0x1312a:	pop	r12
0x1312c:	ret	


0x131ed:	test	rax, rax
0x131f0:	mov	r14, rax
0x131f3:	je	0x13275


0x131f9:	lea	rsi, [rax + r12]
0x131fd:	mov	qword ptr [r13 + 8], rax
0x13201:	mov	qword ptr [rax + 8], rbp
0x13205:	mov	rdx, rbx
0x13208:	mov	qword ptr [r13 + 0x20], rsi
0x1320c:	mov	qword ptr [rax], rsi
0x1320f:	mov	rax, qword ptr [r13 + 0x30]
0x13213:	mov	rsi, qword ptr [r13 + 0x10]
0x13217:	lea	r12, [r14 + rax + 0x10]
0x1321c:	not	rax
0x1321f:	and	r12, rax
0x13222:	mov	rdi, r12
0x13225:	call	0x2e80


0x1322a:	test	byte ptr [r13 + 0x50], 2
0x1322f:	jne	0x13246


0x13231:	mov	rax, qword ptr [r13 + 0x30]
0x13235:	lea	rdx, [rbp + rax + 0x10]
0x1323a:	not	rax
0x1323d:	and	rax, rdx
0x13240:	cmp	qword ptr [r13 + 0x10], rax
0x13244:	je	0x13260


0x13246:	and	byte ptr [r13 + 0x50], 0xfd
0x1324b:	add	rbx, r12
0x1324e:	mov	qword ptr [r13 + 0x10], r12
0x13252:	mov	qword ptr [r13 + 0x18], rbx
0x13256:	pop	rbx
0x13257:	pop	rbp
0x13258:	pop	r12
0x1325a:	pop	r13
0x1325c:	pop	r14
0x1325e:	ret	


0x13260:	mov	rax, qword ptr [rbp + 8]
0x13264:	mov	rsi, rbp
0x13267:	mov	rdi, r13
0x1326a:	mov	qword ptr [r14 + 8], rax
0x1326e:	call	0x130a0


0x13273:	jmp	0x13246


0x134b6:	mov	r12d, eax
0x134b9:	call	0x2b10


0x134be:	mov	r13d, dword ptr [rax]
0x134c1:	mov	rbp, rax
0x134c4:	mov	edi, ebx
0x134c6:	call	0x2db0


0x134cb:	mov	ebx, r12d
0x134ce:	mov	dword ptr [rbp], r13d
0x134d2:	add	rsp, 8
0x134d6:	mov	eax, ebx
0x134d8:	pop	rbx
0x134d9:	pop	rbp
0x134da:	pop	r12
0x134dc:	pop	r13
0x134de:	ret	


0x3c09:	lea	rsi, [rip + 0x11638]
0x3c10:	mov	rbx, rax
0x3c13:	mov	edx, 5
0x3c18:	xor	edi, edi
0x3c1a:	call	0x2c70


0x3c1f:	mov	rcx, rbx
0x3c22:	mov	rdx, rax
0x3c25:	xor	esi, esi
0x3c27:	xor	edi, edi
0x3c29:	xor	eax, eax
0x3c2b:	call	0x2fe0


0xb10e:	mov	rdi, qword ptr [rip + 0x20f0eb]
0xb115:	lea	rdx, [rip + 0xa936]
0xb11c:	mov	rcx, rax
0xb11f:	mov	esi, 1
0xb124:	xor	eax, eax
0xb126:	call	0x3100


0xb12b:	mov	r15, qword ptr [r14 + rbx*8]
0xb12f:	test	r15, r15
0xb132:	jne	0xb0e8


0xb0bf:	mov	rdi, qword ptr [rip + 0x20f13a]
0xb0c6:	lea	rdx, [rip + 0xa97d]
0xb0cd:	mov	rcx, rax
0xb0d0:	mov	esi, 1
0xb0d5:	xor	eax, eax
0xb0d7:	add	rbp, r12
0xb0da:	call	0x3100


0xb0df:	mov	r15, qword ptr [r14 + rbx*8]
0xb0e3:	test	r15, r15
0xb0e6:	je	0xb138


0x103c0:	mov	rbp, rax
0x103c3:	call	0x2b10


0x103c8:	cmp	dword ptr [rax], 0
0x103cb:	mov	rbx, rax
0x103ce:	mov	edx, 5
0x103d3:	je	0x103fd


0x103fd:	lea	rsi, [rip + 0x5cc4]
0x10404:	xor	edi, edi
0x10406:	call	0x2c70


0x103d5:	lea	rsi, [rip + 0x5cfc]
0x103dc:	xor	edi, edi
0x103de:	call	0x2c70


0x103e3:	mov	edi, dword ptr [rip + 0x209d47]
0x103e9:	mov	esi, dword ptr [rbx]
0x103eb:	mov	rdx, rax
0x103ee:	mov	rcx, rbp
0x103f1:	xor	eax, eax
0x103f3:	call	0x2fe0


0x1040b:	jmp	0x103e3


0x31ee:	mov	rsi, rbx
0x31f1:	mov	edx, 5
0x31f6:	xor	edi, edi
0x31f8:	mov	rbp, rax
0x31fb:	call	0x2c70


0x3200:	lea	rsi, [rip + 0x10d09]
0x3207:	mov	rbx, rax
0x320a:	mov	edx, 5
0x320f:	xor	edi, edi
0x3211:	call	0x2c70


0x3216:	mov	r8, rbp
0x3219:	mov	rdx, rax
0x321c:	mov	rcx, rbx
0x321f:	xor	esi, esi
0x3221:	mov	edi, 2
0x3226:	xor	eax, eax
0x3228:	call	0x2fe0


0x66ad:	test	rax, rax
0x66b0:	je	0x6675


0x66b2:	mov	byte ptr [rax + 0xc], 2
0x66b6:	jmp	0x6661


0x676a:	test	rax, rax
0x676d:	je	0x677a


0x677a:	mov	rax, qword ptr [rsp + 0x18]
0x677f:	xor	rax, qword ptr fs:[0x28]
0x6788:	jne	0x6790


0x676f:	mov	byte ptr [rax + 0xc], 2
0x6773:	mov	edi, ebx
0x6775:	call	0x6620


0x678a:	add	rsp, 0x20
0x678e:	pop	rbx
0x678f:	ret	


0x6790:	call	0x2ca0


0x13143:	nop	dword ptr [rax]
0x13146:	nop	word ptr cs:[rax + rax]


0x10f4f:	lea	rdi, [rbx + 0x70]
0x10f53:	mov	r8, r12
0x10f56:	mov	rcx, rbp
0x10f59:	xor	edx, edx
0x10f5b:	xor	esi, esi
0x10f5d:	call	0x13150


0x10f62:	lea	rdi, [rbx + 0xc8]
0x10f69:	mov	r8, r12
0x10f6c:	mov	rcx, rbp
0x10f6f:	pop	rbx
0x10f70:	pop	rbp
0x10f71:	pop	r12
0x10f73:	xor	edx, edx
0x10f75:	xor	esi, esi
0x10f77:	jmp	0x13150


0xb1e4:	mov	rax, -1
0xb1eb:	jmp	0xb1b6


0x107b2:	mov	rcx, qword ptr [r12]
0x107b6:	mov	rdx, rbp
0x107b9:	mov	rdi, rbx
0x107bc:	mov	esi, 1
0x107c1:	call	0x2c10


0x1380d:	add	rbx, 1
0x13811:	cmp	rbp, rbx
0x13814:	jne	0x13800


0x13800:	mov	rdx, r15
0x13803:	mov	rsi, r14
0x13806:	mov	edi, r13d
0x13809:	call	qword ptr [r12 + rbx*8]


0xd148:	mov	rbx, qword ptr [rbx + 8]
0xd14c:	test	rbx, rbx
0xd14f:	jne	0xd140


0xd151:	mov	rax, qword ptr [r12 + 8]
0xd156:	add	rbp, 0x10
0xd15a:	cmp	rax, rbp
0xd15d:	ja	0xd128


0xd140:	mov	rdi, qword ptr [rbx]
0xd143:	call	qword ptr [r12 + 0x40]


0xd0a2:	mov	rax, qword ptr [rbp + 0x40]
0xd0a6:	mov	rdx, qword ptr [rbx + 8]
0xd0aa:	mov	rcx, qword ptr [rbp + 0x48]
0xd0ae:	mov	qword ptr [rbx], 0
0xd0b5:	test	rdx, rdx
0xd0b8:	mov	qword ptr [rbx + 8], rcx
0xd0bc:	mov	qword ptr [rbp + 0x48], rbx
0xd0c0:	mov	rbx, rdx
0xd0c3:	jne	0xd098


0xdbb2:	test	eax, eax
0xdbb4:	mov	r8, qword ptr [rsp + 8]
0xdbb9:	jns	0xdb60


0xdbbb:	mov	rdi, qword ptr [r8]
0xdbbe:	mov	r15, r8
0xdbc1:	mov	rbx, r13
0xdbc4:	jmp	0xdb63


0xdb60:	mov	rdi, qword ptr [r15]
0xdb63:	mov	rsi, qword ptr [rsp + 0x10]
0xdb68:	call	r12


0xdb6b:	test	eax, eax
0xdb6d:	lea	rcx, [rbp + r14*8]
0xdb72:	jle	0xdbd8


0xdbd8:	mov	rax, qword ptr [rsp + 0x10]
0xdbdd:	mov	qword ptr [rcx], rax
0xdbe0:	mov	rax, qword ptr [rsp + 0x28]
0xdbe5:	add	rsp, 0x38
0xdbe9:	pop	rbx
0xdbea:	pop	rbp
0xdbeb:	pop	r12
0xdbed:	pop	r13
0xdbef:	pop	r14
0xdbf1:	pop	r15
0xdbf3:	ret	


0xdb74:	cmp	rbx, qword ptr [rsp + 0x20]
0xdb79:	mov	rax, qword ptr [r15]
0xdb7c:	mov	r14, rbx
0xdb7f:	mov	qword ptr [rcx], rax
0xdb82:	ja	0xdbf8


0xdbf8:	mov	rcx, r15
0xdbfb:	jmp	0xdbd8


0xce19:	test	al, al
0xce1b:	je	0xce34


0xce1d:	mov	rbx, qword ptr [rbx + 8]
0xce21:	add	rbp, 1
0xce25:	test	rbx, rbx
0xce28:	jne	0xce10


0xce10:	mov	rdi, qword ptr [rbx]
0xce13:	mov	rsi, r13
0xce16:	call	r12


0xda55:	test	eax, eax
0xda57:	lea	rdx, [r13 + rbx*8]
0xda5c:	jle	0xda30


0xda30:	mov	rax, qword ptr [rbp]
0xda34:	cmp	r12, 1
0xda38:	mov	rbx, r12
0xda3b:	mov	qword ptr [rdx], rax
0xda3e:	je	0xda78


0x1327b:	nop	dword ptr [rax + rax]


0xc70e:	cmp	qword ptr [rbx + 0x10], rax
0xc712:	jbe	0xc71d


0xc71d:	call	0x2b00


0xc714:	shl	rax, 4
0xc718:	add	rax, qword ptr [rbx]
0xc71b:	pop	rbx
0xc71c:	ret	


0xc984:	cmp	qword ptr [rax], 0
0xc988:	mov	rbx, rax
0xc98b:	je	0xc9e0


0xc9e0:	mov	qword ptr [rax], r15
0xc9e3:	add	qword ptr [rbp + 0x18], 1
0xc9e8:	jmp	0xc9ad


0xc98d:	mov	rax, qword ptr [rbp + 0x48]
0xc991:	test	rax, rax
0xc994:	je	0xc9f0


0xc9ad:	mov	qword ptr [r12], 0
0xc9b5:	sub	qword ptr [r13 + 0x18], 1
0xc9ba:	add	r12, 0x10
0xc9be:	cmp	qword ptr [r13 + 8], r12
0xc9c2:	ja	0xc8f8


0xc9f0:	mov	edi, 0x10
0xc9f5:	call	0x31c8


0xc996:	mov	rdx, qword ptr [rax + 8]
0xc99a:	mov	qword ptr [rbp + 0x48], rdx
0xc99e:	mov	rdx, qword ptr [rbx + 8]
0xc9a2:	mov	qword ptr [rax], r15
0xc9a5:	mov	qword ptr [rax + 8], rdx
0xc9a9:	mov	qword ptr [rbx + 8], rax
0xc9ad:	mov	qword ptr [r12], 0
0xc9b5:	sub	qword ptr [r13 + 0x18], 1
0xc9ba:	add	r12, 0x10
0xc9be:	cmp	qword ptr [r13 + 8], r12
0xc9c2:	ja	0xc8f8


0xc9fa:	test	rax, rax
0xc9fd:	jne	0xc99e


0xc9ff:	add	rsp, 8
0xca03:	xor	eax, eax
0xca05:	pop	rbx
0xca06:	pop	rbp
0xca07:	pop	r12
0xca09:	pop	r13
0xca0b:	pop	r14
0xca0d:	pop	r15
0xca0f:	ret	


0xc99e:	mov	rdx, qword ptr [rbx + 8]
0xc9a2:	mov	qword ptr [rax], r15
0xc9a5:	mov	qword ptr [rax + 8], rdx
0xc9a9:	mov	qword ptr [rbx + 8], rax
0xc9ad:	mov	qword ptr [r12], 0
0xc9b5:	sub	qword ptr [r13 + 0x18], 1
0xc9ba:	add	r12, 0x10
0xc9be:	cmp	qword ptr [r13 + 8], r12
0xc9c2:	ja	0xc8f8


0xc93a:	cmp	qword ptr [rax], 0
0xc93e:	mov	rdx, qword ptr [rbx + 8]
0xc942:	jne	0xc918


0xc944:	mov	qword ptr [rax], r15
0xc947:	add	qword ptr [rbp + 0x18], 1
0xc94c:	test	rdx, rdx
0xc94f:	mov	qword ptr [rbx], 0
0xc956:	mov	rax, qword ptr [rbp + 0x48]
0xc95a:	mov	qword ptr [rbx + 8], rax
0xc95e:	mov	qword ptr [rbp + 0x48], rbx
0xc962:	mov	rbx, rdx
0xc965:	jne	0xc92c


0xc918:	mov	rcx, qword ptr [rax + 8]
0xc91c:	test	rdx, rdx
0xc91f:	mov	qword ptr [rbx + 8], rcx
0xc923:	mov	qword ptr [rax + 8], rbx
0xc927:	mov	rbx, rdx
0xc92a:	je	0xc967


0xc967:	mov	r15, qword ptr [r12]
0xc96b:	test	r14b, r14b
0xc96e:	mov	qword ptr [r12 + 8], 0
0xc977:	jne	0xc9ba


0xc749:	mov	qword ptr [r14], rax
0xc74c:	mov	rsi, qword ptr [rax]
0xc74f:	test	rsi, rsi
0xc752:	je	0xc840


0xc840:	xor	esi, esi
0xc842:	pop	rbx
0xc843:	mov	rax, rsi
0xc846:	pop	rbp
0xc847:	pop	r12
0xc849:	pop	r13
0xc84b:	pop	r14
0xc84d:	ret	


0xc758:	cmp	rsi, rbp
0xc75b:	mov	rbx, rax
0xc75e:	je	0xc7f3


0xc7f3:	test	r13b, r13b
0xc7f6:	je	0xc7de


0xc764:	mov	rdi, rbp
0xc767:	call	qword ptr [r12 + 0x38]


0xc7de:	pop	rbx
0xc7df:	mov	rax, rsi
0xc7e2:	pop	rbp
0xc7e3:	pop	r12
0xc7e5:	pop	r13
0xc7e7:	pop	r14
0xc7e9:	ret	


0xc7f8:	mov	rax, qword ptr [rbx + 8]
0xc7fc:	test	rax, rax
0xc7ff:	je	0xc830


0xc830:	mov	qword ptr [rbx], 0
0xc837:	jmp	0xc7de


0xc801:	movdqu	xmm0, xmmword ptr [rax]
0xc805:	movups	xmmword ptr [rbx], xmm0
0xc808:	mov	qword ptr [rax], 0
0xc80f:	mov	rdx, qword ptr [r12 + 0x48]
0xc814:	mov	qword ptr [rax + 8], rdx
0xc818:	mov	qword ptr [r12 + 0x48], rax
0xc81d:	mov	rax, rsi
0xc820:	pop	rbx
0xc821:	pop	rbp
0xc822:	pop	r12
0xc824:	pop	r13
0xc826:	pop	r14
0xc828:	ret	


0xcc4f:	mov	rsi, qword ptr [rax]
0xcc52:	test	rsi, rsi
0xcc55:	je	0xcc7d


0xcc7d:	xor	esi, esi
0xcc7f:	pop	rbx
0xcc80:	mov	rax, rsi
0xcc83:	pop	rbp
0xcc84:	pop	r12
0xcc86:	ret	


0xcc57:	mov	rbx, rax
0xcc5a:	jmp	0xcc63


0xcc63:	cmp	rsi, rbp
0xcc66:	je	0xcc7f


0xcc7f:	pop	rbx
0xcc80:	mov	rax, rsi
0xcc83:	pop	rbp
0xcc84:	pop	r12
0xcc86:	ret	


0xcc68:	mov	rdi, rbp
0xcc6b:	call	qword ptr [r12 + 0x38]


0xcd01:	mov	rdx, rax
0xcd04:	mov	rcx, rax
0xcd07:	mov	rax, qword ptr [rdx]
0xcd0a:	mov	rdx, qword ptr [rdx + 8]
0xcd0e:	cmp	rax, rbx
0xcd11:	je	0xcd29


0xcd29:	test	rdx, rdx
0xcd2c:	jne	0xcd58


0xcd2e:	mov	rdx, qword ptr [rbp + 8]
0xcd32:	jmp	0xcd40


0xcd58:	mov	rax, qword ptr [rdx]
0xcd5b:	add	rsp, 8
0xcd5f:	pop	rbx
0xcd60:	pop	rbp
0xcd61:	ret	


0xcd1d:	mov	rax, qword ptr [rdx]
0xcd20:	mov	rdx, qword ptr [rdx + 8]
0xcd24:	cmp	rax, rbx
0xcd27:	jne	0xcd18


0xcd40:	add	rcx, 0x10
0xcd44:	cmp	rdx, rcx
0xcd47:	ja	0xcd38


0xcd18:	test	rdx, rdx
0xcd1b:	je	0xcd2e


0xcd49:	xor	eax, eax
0xcd4b:	add	rsp, 8
0xcd4f:	pop	rbx
0xcd50:	pop	rbp
0xcd51:	ret	


0xcd38:	mov	rax, qword ptr [rcx]
0xcd3b:	test	rax, rax
0xcd3e:	jne	0xcd4b


0xcd4b:	add	rsp, 8
0xcd4f:	pop	rbx
0xcd50:	pop	rbp
0xcd51:	ret	


0xd459:	test	rax, rax
0xd45c:	mov	rdx, rax
0xd45f:	je	0xd490


0xd490:	mov	rax, qword ptr [rbx + 0x18]
0xd494:	test	rax, rax
0xd497:	js	0xd510


0xd461:	xor	eax, eax
0xd463:	test	r13, r13
0xd466:	je	0xd46c


0xd510:	mov	rdx, rax
0xd513:	pxor	xmm1, xmm1
0xd517:	and	eax, 1
0xd51a:	shr	rdx, 1
0xd51d:	or	rdx, rax
0xd520:	mov	rax, qword ptr [rbx + 0x10]
0xd524:	cvtsi2ss	xmm1, rdx
0xd529:	mov	rdx, qword ptr [rbx + 0x28]
0xd52d:	test	rax, rax
0xd530:	addss	xmm1, xmm1
0xd534:	jns	0xd4b3


0xd499:	pxor	xmm1, xmm1
0xd49d:	mov	rdx, qword ptr [rbx + 0x28]
0xd4a1:	cvtsi2ss	xmm1, rax
0xd4a6:	mov	rax, qword ptr [rbx + 0x10]
0xd4aa:	test	rax, rax
0xd4ad:	js	0xd53a


0xd46c:	mov	rcx, qword ptr [rsp + 8]
0xd471:	xor	rcx, qword ptr fs:[0x28]
0xd47a:	jne	0xd69f


0xd468:	mov	qword ptr [r13], rdx
0xd46c:	mov	rcx, qword ptr [rsp + 8]
0xd471:	xor	rcx, qword ptr fs:[0x28]
0xd47a:	jne	0xd69f


0xd53a:	mov	rcx, rax
0xd53d:	pxor	xmm0, xmm0
0xd541:	shr	rcx, 1
0xd544:	and	eax, 1
0xd547:	or	rcx, rax
0xd54a:	cvtsi2ss	xmm0, rcx
0xd54f:	addss	xmm0, xmm0
0xd553:	jmp	0xd4bc


0xd4b3:	pxor	xmm0, xmm0
0xd4b7:	cvtsi2ss	xmm0, rax
0xd4bc:	mulss	xmm0, dword ptr [rdx + 8]
0xd4c1:	ucomiss	xmm1, xmm0
0xd4c4:	ja	0xd560


0xd480:	add	rsp, 0x18
0xd484:	pop	rbx
0xd485:	pop	rbp
0xd486:	pop	r12
0xd488:	pop	r13
0xd48a:	ret	


0xd69f:	call	0x2ca0


0xd4bc:	mulss	xmm0, dword ptr [rdx + 8]
0xd4c1:	ucomiss	xmm1, xmm0
0xd4c4:	ja	0xd560


0xd4ca:	mov	r12, qword ptr [rsp]
0xd4ce:	cmp	qword ptr [r12], 0
0xd4d3:	je	0xd608


0xd560:	lea	rdi, [rbx + 0x28]
0xd564:	call	0xc850


0xd608:	mov	qword ptr [r12], rbp
0xd60c:	mov	eax, 1
0xd611:	add	qword ptr [rbx + 0x20], 1
0xd616:	add	qword ptr [rbx + 0x18], 1
0xd61b:	jmp	0xd46c


0xd4d9:	mov	rax, qword ptr [rbx + 0x48]
0xd4dd:	test	rax, rax
0xd4e0:	je	0xd620


0xd620:	mov	edi, 0x10
0xd625:	call	0x31c8


0xd4e6:	mov	rdx, qword ptr [rax + 8]
0xd4ea:	mov	qword ptr [rbx + 0x48], rdx
0xd4ee:	mov	rdx, qword ptr [r12 + 8]
0xd4f3:	mov	qword ptr [rax], rbp
0xd4f6:	mov	qword ptr [rax + 8], rdx
0xd4fa:	mov	qword ptr [r12 + 8], rax
0xd4ff:	mov	eax, 1
0xd504:	add	qword ptr [rbx + 0x20], 1
0xd509:	jmp	0xd46c


0xd62a:	test	rax, rax
0xd62d:	jne	0xd4ee


0xd633:	mov	eax, 0xffffffff
0xd638:	jmp	0xd46c


0xd4ee:	mov	rdx, qword ptr [r12 + 8]
0xd4f3:	mov	qword ptr [rax], rbp
0xd4f6:	mov	qword ptr [rax + 8], rdx
0xd4fa:	mov	qword ptr [r12 + 8], rax
0xd4ff:	mov	eax, 1
0xd504:	add	qword ptr [rbx + 0x20], 1
0xd509:	jmp	0xd46c


0xd569:	mov	rax, qword ptr [rbx + 0x10]
0xd56d:	mov	rdx, qword ptr [rbx + 0x28]
0xd571:	test	rax, rax
0xd574:	movss	xmm2, dword ptr [rdx + 8]
0xd579:	js	0xd640


0xd640:	mov	rcx, rax
0xd643:	pxor	xmm0, xmm0
0xd647:	shr	rcx, 1
0xd64a:	and	eax, 1
0xd64d:	or	rcx, rax
0xd650:	cvtsi2ss	xmm0, rcx
0xd655:	addss	xmm0, xmm0
0xd659:	jmp	0xd588


0xd57f:	pxor	xmm0, xmm0
0xd583:	cvtsi2ss	xmm0, rax
0xd588:	mov	rax, qword ptr [rbx + 0x18]
0xd58c:	test	rax, rax
0xd58f:	js	0xd660


0xd588:	mov	rax, qword ptr [rbx + 0x18]
0xd58c:	test	rax, rax
0xd58f:	js	0xd660


0xd660:	mov	rcx, rax
0xd663:	pxor	xmm1, xmm1
0xd667:	shr	rcx, 1
0xd66a:	and	eax, 1
0xd66d:	or	rcx, rax
0xd670:	cvtsi2ss	xmm1, rcx
0xd675:	addss	xmm1, xmm1
0xd679:	jmp	0xd59e


0xd595:	pxor	xmm1, xmm1
0xd599:	cvtsi2ss	xmm1, rax
0xd59e:	movaps	xmm3, xmm2
0xd5a1:	mulss	xmm3, xmm0
0xd5a5:	ucomiss	xmm1, xmm3
0xd5a8:	jbe	0xd4ca


0xd59e:	movaps	xmm3, xmm2
0xd5a1:	mulss	xmm3, xmm0
0xd5a5:	ucomiss	xmm1, xmm3
0xd5a8:	jbe	0xd4ca


0xd5ae:	cmp	byte ptr [rdx + 0x10], 0
0xd5b2:	mulss	xmm0, dword ptr [rdx + 0xc]
0xd5b7:	jne	0xd5bd


0xd5b9:	mulss	xmm0, xmm2
0xd5bd:	ucomiss	xmm0, dword ptr [rip + 0x85a8]
0xd5c4:	jae	0xd633


0xd5bd:	ucomiss	xmm0, dword ptr [rip + 0x85a8]
0xd5c4:	jae	0xd633


0xd5c6:	ucomiss	xmm0, dword ptr [rip + 0x85a3]
0xd5cd:	jae	0xd680


0xd5d3:	cvttss2si	rsi, xmm0
0xd5d8:	mov	rdi, rbx
0xd5db:	call	0xd1e0


0xd680:	subss	xmm0, dword ptr [rip + 0x84e8]
0xd688:	movabs	rax, 0x8000000000000000
0xd692:	cvttss2si	rsi, xmm0
0xd697:	xor	rsi, rax
0xd69a:	jmp	0xd5d8


0xd5d8:	mov	rdi, rbx
0xd5db:	call	0xd1e0


0xd5e0:	test	al, al
0xd5e2:	je	0xd633


0xd5e4:	xor	ecx, ecx
0xd5e6:	mov	rdx, r12
0xd5e9:	mov	rsi, rbp
0xd5ec:	mov	rdi, rbx
0xd5ef:	call	0xc730


0xd6d0:	cmp	eax, -1
0xd6d3:	je	0xd700


0xd700:	xor	ebx, ebx
0xd702:	jmp	0xd6dd


0xd6d5:	test	eax, eax
0xd6d7:	jne	0xd6dd


0xd6dd:	mov	rcx, qword ptr [rsp + 8]
0xd6e2:	xor	rcx, qword ptr fs:[0x28]
0xd6eb:	mov	rax, rbx
0xd6ee:	jne	0xd704


0xd6d9:	mov	rbx, qword ptr [rsp]
0xd6dd:	mov	rcx, qword ptr [rsp + 8]
0xd6e2:	xor	rcx, qword ptr fs:[0x28]
0xd6eb:	mov	rax, rbx
0xd6ee:	jne	0xd704


0xd6f0:	add	rsp, 0x10
0xd6f4:	pop	rbx
0xd6f5:	ret	


0xd704:	call	0x2ca0


0xd5f4:	test	rax, rax
0xd5f7:	je	0xd4ca


0xd738:	test	rax, rax
0xd73b:	mov	rbp, rax
0xd73e:	je	0xd74f


0xd74f:	mov	rcx, qword ptr [rsp + 8]
0xd754:	xor	rcx, qword ptr fs:[0x28]
0xd75d:	mov	rax, rbp
0xd760:	jne	0xd90e


0xd740:	mov	rax, qword ptr [rsp]
0xd744:	sub	qword ptr [rbx + 0x20], 1
0xd749:	cmp	qword ptr [rax], 0
0xd74d:	je	0xd770


0xd766:	add	rsp, 0x10
0xd76a:	pop	rbx
0xd76b:	pop	rbp
0xd76c:	pop	r12
0xd76e:	ret	


0xd90e:	call	0x2ca0


0xd770:	mov	rax, qword ptr [rbx + 0x18]
0xd774:	sub	rax, 1
0xd778:	test	rax, rax
0xd77b:	mov	qword ptr [rbx + 0x18], rax
0xd77f:	js	0xd880


0xd880:	mov	rdx, rax
0xd883:	pxor	xmm0, xmm0
0xd887:	shr	rdx, 1
0xd88a:	and	eax, 1
0xd88d:	or	rdx, rax
0xd890:	cvtsi2ss	xmm0, rdx
0xd895:	addss	xmm0, xmm0
0xd899:	jmp	0xd78e


0xd785:	pxor	xmm0, xmm0
0xd789:	cvtsi2ss	xmm0, rax
0xd78e:	mov	rax, qword ptr [rbx + 0x10]
0xd792:	mov	rdx, qword ptr [rbx + 0x28]
0xd796:	test	rax, rax
0xd799:	js	0xd860


0xd78e:	mov	rax, qword ptr [rbx + 0x10]
0xd792:	mov	rdx, qword ptr [rbx + 0x28]
0xd796:	test	rax, rax
0xd799:	js	0xd860


0xd860:	mov	rcx, rax
0xd863:	pxor	xmm1, xmm1
0xd867:	shr	rcx, 1
0xd86a:	and	eax, 1
0xd86d:	or	rcx, rax
0xd870:	cvtsi2ss	xmm1, rcx
0xd875:	addss	xmm1, xmm1
0xd879:	jmp	0xd7a8


0xd79f:	pxor	xmm1, xmm1
0xd7a3:	cvtsi2ss	xmm1, rax
0xd7a8:	mulss	xmm1, dword ptr [rdx]
0xd7ac:	ucomiss	xmm1, xmm0
0xd7af:	jbe	0xd74f


0xd7a8:	mulss	xmm1, dword ptr [rdx]
0xd7ac:	ucomiss	xmm1, xmm0
0xd7af:	jbe	0xd74f


0xd7b1:	lea	rdi, [rbx + 0x28]
0xd7b5:	call	0xc850


0xd7ba:	mov	rax, qword ptr [rbx + 0x10]
0xd7be:	mov	rdx, qword ptr [rbx + 0x28]
0xd7c2:	test	rax, rax
0xd7c5:	js	0xd8f0


0xd8f0:	mov	rcx, rax
0xd8f3:	pxor	xmm0, xmm0
0xd8f7:	shr	rcx, 1
0xd8fa:	and	eax, 1
0xd8fd:	or	rcx, rax
0xd900:	cvtsi2ss	xmm0, rcx
0xd905:	addss	xmm0, xmm0
0xd909:	jmp	0xd7d4


0xd7cb:	pxor	xmm0, xmm0
0xd7cf:	cvtsi2ss	xmm0, rax
0xd7d4:	mov	rax, qword ptr [rbx + 0x18]
0xd7d8:	test	rax, rax
0xd7db:	js	0xd8d0


0xd7d4:	mov	rax, qword ptr [rbx + 0x18]
0xd7d8:	test	rax, rax
0xd7db:	js	0xd8d0


0xd8d0:	mov	rcx, rax
0xd8d3:	pxor	xmm1, xmm1
0xd8d7:	shr	rcx, 1
0xd8da:	and	eax, 1
0xd8dd:	or	rcx, rax
0xd8e0:	cvtsi2ss	xmm1, rcx
0xd8e5:	addss	xmm1, xmm1
0xd8e9:	jmp	0xd7ea


0xd7e1:	pxor	xmm1, xmm1
0xd7e5:	cvtsi2ss	xmm1, rax
0xd7ea:	movss	xmm2, dword ptr [rdx]
0xd7ee:	mulss	xmm2, xmm0
0xd7f2:	ucomiss	xmm2, xmm1
0xd7f5:	jbe	0xd74f


0xd7ea:	movss	xmm2, dword ptr [rdx]
0xd7ee:	mulss	xmm2, xmm0
0xd7f2:	ucomiss	xmm2, xmm1
0xd7f5:	jbe	0xd74f


0xd7fb:	cmp	byte ptr [rdx + 0x10], 0
0xd7ff:	mulss	xmm0, dword ptr [rdx + 4]
0xd804:	je	0xd8c0


0xd8c0:	mulss	xmm0, dword ptr [rdx + 8]
0xd8c5:	jmp	0xd80a


0xd80a:	ucomiss	xmm0, dword ptr [rip + 0x835f]
0xd811:	jae	0xd8a0


0xd817:	cvttss2si	rsi, xmm0
0xd81c:	mov	rdi, rbx
0xd81f:	call	0xd1e0


0xd8a0:	subss	xmm0, dword ptr [rip + 0x82c8]
0xd8a8:	movabs	rax, 0x8000000000000000
0xd8b2:	cvttss2si	rsi, xmm0
0xd8b7:	xor	rsi, rax
0xd8ba:	jmp	0xd81c


0xd81c:	mov	rdi, rbx
0xd81f:	call	0xd1e0


0xd824:	test	al, al
0xd826:	jne	0xd74f


0xd82c:	mov	rdi, qword ptr [rbx + 0x48]
0xd830:	test	rdi, rdi
0xd833:	je	0xd849


0xd849:	mov	qword ptr [rbx + 0x48], 0
0xd851:	jmp	0xd74f


0xd841:	test	r12, r12
0xd844:	mov	rdi, r12
0xd847:	jne	0xd838


0xd838:	mov	r12, qword ptr [rdi + 8]
0xd83c:	call	0x31c0


0xcc70:	test	al, al
0xcc72:	jne	0xcc90


0xcc74:	mov	rbx, qword ptr [rbx + 8]
0xcc78:	test	rbx, rbx
0xcc7b:	jne	0xcc60


0xcc90:	mov	rsi, qword ptr [rbx]
0xcc93:	pop	rbx
0xcc94:	pop	rbp
0xcc95:	mov	rax, rsi
0xcc98:	pop	r12
0xcc9a:	ret	


0xcc60:	mov	rsi, qword ptr [rbx]
0xcc63:	cmp	rsi, rbp
0xcc66:	je	0xcc7f


0xc76c:	test	al, al
0xc76e:	jne	0xc7f0


0xc774:	mov	rax, qword ptr [rbx + 8]
0xc778:	test	rax, rax
0xc77b:	je	0xc840


0xc7f0:	mov	rsi, qword ptr [rbx]
0xc7f3:	test	r13b, r13b
0xc7f6:	je	0xc7de


0xc781:	mov	rsi, qword ptr [rax]
0xc784:	cmp	rbp, rsi
0xc787:	jne	0xc7a9


0xc789:	jmp	0xc7bc


0xc7a9:	mov	rdi, rbp
0xc7ac:	call	qword ptr [r12 + 0x38]


0xc7bc:	test	r13b, r13b
0xc7bf:	je	0xc7de


0xc7c1:	mov	rdx, qword ptr [rax + 8]
0xc7c5:	mov	qword ptr [rbx + 8], rdx
0xc7c9:	mov	qword ptr [rax], 0
0xc7d0:	mov	rdx, qword ptr [r12 + 0x48]
0xc7d5:	mov	qword ptr [rax + 8], rdx
0xc7d9:	mov	qword ptr [r12 + 0x48], rax
0xc7de:	pop	rbx
0xc7df:	mov	rax, rsi
0xc7e2:	pop	rbp
0xc7e3:	pop	r12
0xc7e5:	pop	r13
0xc7e7:	pop	r14
0xc7e9:	ret	


0xc7b1:	test	al, al
0xc7b3:	je	0xc790


0xc790:	mov	rbx, qword ptr [rbx + 8]
0xc794:	mov	rax, qword ptr [rbx + 8]
0xc798:	test	rax, rax
0xc79b:	je	0xc840


0xc7b5:	mov	rax, qword ptr [rbx + 8]
0xc7b9:	mov	rsi, qword ptr [rax]
0xc7bc:	test	r13b, r13b
0xc7bf:	je	0xc7de


0xc7a1:	mov	rsi, qword ptr [rax]
0xc7a4:	cmp	rsi, rbp
0xc7a7:	je	0xc7bc






0x11a00:	mov	r13, qword ptr [rbx + 0x10]
0x11a04:	mov	r12, qword ptr [rbx + 8]
0x11a08:	lea	rsi, [rip + 0x4726]
0x11a0f:	mov	rbx, qword ptr [rbx]
0x11a12:	mov	edx, 5
0x11a17:	xor	edi, edi
0x11a19:	call	0x2c70


0x11b40:	mov	r9, qword ptr [rbx + 0x10]
0x11b44:	mov	r13, qword ptr [rbx + 0x30]
0x11b48:	lea	rsi, [rip + 0x4781]
0x11b4f:	mov	r12, qword ptr [rbx + 0x28]
0x11b53:	mov	r15, qword ptr [rbx + 0x20]
0x11b57:	mov	edx, 5
0x11b5c:	mov	r14, qword ptr [rbx + 0x18]
0x11b60:	mov	r8, qword ptr [rbx + 8]
0x11b64:	xor	edi, edi
0x11b66:	mov	qword ptr [rsp + 8], r9
0x11b6b:	mov	rbx, qword ptr [rbx]
0x11b6e:	mov	qword ptr [rsp], r8
0x11b72:	call	0x2c70


0x11920:	mov	r10, qword ptr [rbx + 0x40]
0x11924:	mov	r9, qword ptr [rbx + 0x38]
0x11928:	lea	rsi, [rip + 0x4a01]
0x1192f:	mov	rax, qword ptr [rbx + 0x10]
0x11933:	mov	r8, qword ptr [rbx + 8]
0x11937:	mov	edx, 5
0x1193c:	mov	r13, qword ptr [rbx + 0x30]
0x11940:	mov	r12, qword ptr [rbx + 0x28]
0x11944:	mov	r15, qword ptr [rbx + 0x20]
0x11948:	mov	r14, qword ptr [rbx + 0x18]
0x1194c:	mov	rbx, qword ptr [rbx]
0x1194f:	mov	qword ptr [rsp + 0x18], r10
0x11954:	mov	qword ptr [rsp + 0x10], r9
0x11959:	mov	qword ptr [rsp], rax
0x1195d:	mov	qword ptr [rsp + 8], r8
0x11962:	xor	edi, edi
0x11964:	call	0x2c70


0x119b8:	mov	r12, qword ptr [rbx + 8]
0x119bc:	lea	rsi, [rip + 0x475b]
0x119c3:	mov	rbx, qword ptr [rbx]
0x119c6:	mov	edx, 5
0x119cb:	xor	edi, edi
0x119cd:	call	0x2c70


0x118e6:	add	rsp, 0x28
0x118ea:	pop	rbx
0x118eb:	pop	rbp
0x118ec:	pop	r12
0x118ee:	pop	r13
0x118f0:	pop	r14
0x118f2:	pop	r15
0x118f4:	ret	


0x11aa8:	mov	r15, qword ptr [rbx + 0x20]
0x11aac:	lea	rsi, [rip + 0x47cd]
0x11ab3:	mov	edx, 5
0x11ab8:	xor	edi, edi
0x11aba:	mov	r14, qword ptr [rbx + 0x18]
0x11abe:	mov	r13, qword ptr [rbx + 0x10]
0x11ac2:	mov	r12, qword ptr [rbx + 8]
0x11ac6:	mov	rbx, qword ptr [rbx]
0x11ac9:	call	0x2c70


0x11ad8:	mov	r8, qword ptr [rbx + 8]
0x11adc:	mov	r12, qword ptr [rbx + 0x28]
0x11ae0:	lea	rsi, [rip + 0x47c1]
0x11ae7:	mov	r15, qword ptr [rbx + 0x20]
0x11aeb:	mov	r14, qword ptr [rbx + 0x18]
0x11aef:	mov	edx, 5
0x11af4:	mov	r13, qword ptr [rbx + 0x10]
0x11af8:	xor	edi, edi
0x11afa:	mov	rbx, qword ptr [rbx]
0x11afd:	mov	qword ptr [rsp], r8
0x11b01:	call	0x2c70


0x11a50:	lea	rsi, [rip + 0x4809]
0x11a57:	mov	edx, 5
0x11a5c:	xor	edi, edi
0x11a5e:	mov	r14, qword ptr [rbx + 0x18]
0x11a62:	mov	r13, qword ptr [rbx + 0x10]
0x11a66:	mov	r12, qword ptr [rbx + 8]
0x11a6a:	mov	rbx, qword ptr [rbx]
0x11a6d:	call	0x2c70


0x11870:	mov	r9, qword ptr [rbx + 0x38]
0x11874:	mov	rax, qword ptr [rbx + 0x10]
0x11878:	lea	rsi, [rip + 0x4a81]
0x1187f:	mov	r8, qword ptr [rbx + 8]
0x11883:	mov	edx, 5
0x11888:	xor	edi, edi
0x1188a:	mov	r13, qword ptr [rbx + 0x30]
0x1188e:	mov	r12, qword ptr [rbx + 0x28]
0x11892:	mov	qword ptr [rsp + 0x10], r9
0x11897:	mov	r15, qword ptr [rbx + 0x20]
0x1189b:	mov	r14, qword ptr [rbx + 0x18]
0x1189f:	mov	qword ptr [rsp], rax
0x118a3:	mov	qword ptr [rsp + 8], r8
0x118a8:	mov	rbx, qword ptr [rbx]
0x118ab:	call	0x2c70


0x11978:	mov	rbx, qword ptr [rbx]
0x1197b:	lea	rsi, [rip + 0x478c]
0x11982:	mov	edx, 5
0x11987:	xor	edi, edi
0x11989:	call	0x2c70


0x1198e:	add	rsp, 0x28
0x11992:	mov	rcx, rbx
0x11995:	mov	rdi, rbp
0x11998:	pop	rbx
0x11999:	pop	rbp
0x1199a:	pop	r12
0x1199c:	pop	r13
0x1199e:	pop	r14
0x119a0:	pop	r15
0x119a2:	mov	rdx, rax
0x119a5:	mov	esi, 1
0x119aa:	xor	eax, eax
0x119ac:	jmp	0x3100


0x118b0:	sub	rsp, 8
0x118b4:	mov	r9, qword ptr [rsp + 0x18]
0x118b9:	mov	rdx, rax
0x118bc:	mov	rcx, rbx
0x118bf:	mov	esi, 1
0x118c4:	mov	rdi, rbp
0x118c7:	xor	eax, eax
0x118c9:	push	r9
0x118cb:	push	r13
0x118cd:	push	r12
0x118cf:	push	r15
0x118d1:	push	r14
0x118d3:	mov	r9, qword ptr [rsp + 0x30]
0x118d8:	mov	r8, qword ptr [rsp + 0x38]
0x118dd:	call	0x3100


0x11a72:	sub	rsp, 8
0x11a76:	push	r14
0x11a78:	mov	rdx, rax
0x11a7b:	mov	r9, r13
0x11a7e:	mov	r8, r12
0x11a81:	mov	rcx, rbx
0x11a84:	mov	rdi, rbp
0x11a87:	mov	esi, 1
0x11a8c:	xor	eax, eax
0x11a8e:	call	0x3100


0x11a93:	pop	rax
0x11a94:	pop	rdx
0x11a95:	add	rsp, 0x28
0x11a99:	pop	rbx
0x11a9a:	pop	rbp
0x11a9b:	pop	r12
0x11a9d:	pop	r13
0x11a9f:	pop	r14
0x11aa1:	pop	r15
0x11aa3:	ret	


0x11b06:	sub	rsp, 8
0x11b0a:	mov	r9, r13
0x11b0d:	push	r12
0x11b0f:	push	r15
0x11b11:	push	r14
0x11b13:	mov	r8, qword ptr [rsp + 0x20]
0x11b18:	mov	rcx, rbx
0x11b1b:	mov	rdx, rax
0x11b1e:	mov	rdi, rbp
0x11b21:	mov	esi, 1
0x11b26:	xor	eax, eax
0x11b28:	call	0x3100


0x11b2d:	add	rsp, 0x20
0x11b31:	add	rsp, 0x28
0x11b35:	pop	rbx
0x11b36:	pop	rbp
0x11b37:	pop	r12
0x11b39:	pop	r13
0x11b3b:	pop	r14
0x11b3d:	pop	r15
0x11b3f:	ret	


0x11ace:	push	r15
0x11ad0:	jmp	0x11a76


0x11a76:	push	r14
0x11a78:	mov	rdx, rax
0x11a7b:	mov	r9, r13
0x11a7e:	mov	r8, r12
0x11a81:	mov	rcx, rbx
0x11a84:	mov	rdi, rbp
0x11a87:	mov	esi, 1
0x11a8c:	xor	eax, eax
0x11a8e:	call	0x3100


0x119d2:	add	rsp, 0x28
0x119d6:	mov	r8, r12
0x119d9:	mov	rcx, rbx
0x119dc:	mov	rdi, rbp
0x119df:	mov	rdx, rax
0x119e2:	mov	esi, 1
0x119e7:	pop	rbx
0x119e8:	pop	rbp
0x119e9:	pop	r12
0x119eb:	pop	r13
0x119ed:	pop	r14
0x119ef:	pop	r15
0x119f1:	xor	eax, eax
0x119f3:	jmp	0x3100


0x11b77:	push	r13
0x11b79:	push	r12
0x11b7b:	push	r15
0x11b7d:	push	r14
0x11b7f:	mov	r9, qword ptr [rsp + 0x28]
0x11b84:	jmp	0x11b13


0x11b13:	mov	r8, qword ptr [rsp + 0x20]
0x11b18:	mov	rcx, rbx
0x11b1b:	mov	rdx, rax
0x11b1e:	mov	rdi, rbp
0x11b21:	mov	esi, 1
0x11b26:	xor	eax, eax
0x11b28:	call	0x3100


0x11a1e:	add	rsp, 0x28
0x11a22:	mov	r9, r13
0x11a25:	mov	r8, r12
0x11a28:	mov	rcx, rbx
0x11a2b:	mov	rdi, rbp
0x11a2e:	mov	rdx, rax
0x11a31:	pop	rbx
0x11a32:	pop	rbp
0x11a33:	pop	r12
0x11a35:	pop	r13
0x11a37:	pop	r14
0x11a39:	pop	r15
0x11a3b:	mov	esi, 1
0x11a40:	xor	eax, eax
0x11a42:	jmp	0x3100


0x43ba:	sub	rsp, 8
0x43be:	mov	rdi, qword ptr [rip + 0x215e03]
0x43c5:	mov	rcx, qword ptr [rip + 0x215d54]
0x43cc:	push	0
0x43ce:	lea	r9, [rip + 0x11374]
0x43d5:	lea	r8, [rip + 0x11379]
0x43dc:	lea	rdx, [rip + 0x111b5]
0x43e3:	lea	rsi, [rip + 0x11255]
0x43ea:	xor	eax, eax
0x43ec:	call	0x11c80


0x43f1:	xor	edi, edi
0x43f3:	call	0x30e0


0xf3b0:	sub	rsp, 8
0xf3b4:	mov	rcx, rbp
0xf3b7:	mov	rsi, r13
0xf3ba:	push	qword ptr [rsp + 0x68]
0xf3be:	push	qword ptr [rsp + 0x78]
0xf3c2:	mov	rdi, r14
0xf3c5:	push	0
0xf3c7:	mov	r9d, dword ptr [rsp + 0x98]
0xf3cf:	mov	r8d, dword ptr [rsp + 0x28]
0xf3d4:	mov	rdx, qword ptr [rsp + 0x30]
0xf3d9:	and	r9d, 0xfffffffd
0xf3dd:	call	0xe810


0xf3e2:	add	rsp, 0x20
0xf3e6:	mov	r15, rax
0xf3e9:	mov	rbx, qword ptr [rsp + 0xa8]
0xf3f1:	xor	rbx, qword ptr fs:[0x28]
0xf3fa:	mov	rax, r15
0xf3fd:	jne	0xfa03


0xf403:	add	rsp, 0xb8
0xf40a:	pop	rbx
0xf40b:	pop	rbp
0xf40c:	pop	r12
0xf40e:	pop	r13
0xf410:	pop	r14
0xf412:	pop	r15
0xf414:	ret	


0xfa03:	call	0x2ca0


0xf9ad:	sub	rsp, 8
0xf9b1:	mov	r8d, 5
0xf9b7:	mov	rcx, r11
0xf9ba:	push	qword ptr [rsp + 0x68]
0xf9be:	push	qword ptr [rsp + 0x78]
0xf9c2:	mov	rdi, r14
0xf9c5:	push	qword ptr [rsp + 0x38]
0xf9c9:	mov	r9d, dword ptr [rsp + 0x98]
0xf9d1:	mov	rdx, qword ptr [rsp + 0x30]
0xf9d6:	mov	rsi, qword ptr [rsp + 0x70]
0xf9db:	call	0xe810


0xf9e0:	add	rsp, 0x20
0xf9e4:	mov	r15, rax
0xf9e7:	jmp	0xf3e9


0xf3e9:	mov	rbx, qword ptr [rsp + 0xa8]
0xf3f1:	xor	rbx, qword ptr fs:[0x28]
0xf3fa:	mov	rax, r15
0xf3fd:	jne	0xfa03


0x2aa0:	push	qword ptr [rip + 0x21717a]
0x2aa6:	jmp	qword ptr [rip + 0x21717c]


0x2aac:	nop	dword ptr [rax]


0x2ab6:	push	0
0x2abb:	jmp	0x2aa0


0x2ac6:	push	1
0x2acb:	jmp	0x2aa0


0x2ad6:	push	2
0x2adb:	jmp	0x2aa0


0x2ae6:	push	3
0x2aeb:	jmp	0x2aa0


0x2af6:	push	4
0x2afb:	jmp	0x2aa0


0x2b06:	push	5
0x2b0b:	jmp	0x2aa0


0x2b16:	push	6
0x2b1b:	jmp	0x2aa0


0x2b26:	push	7
0x2b2b:	jmp	0x2aa0


0x2b36:	push	8
0x2b3b:	jmp	0x2aa0


0x2b46:	push	9
0x2b4b:	jmp	0x2aa0


0x2b56:	push	0xa
0x2b5b:	jmp	0x2aa0


0x2b66:	push	0xb
0x2b6b:	jmp	0x2aa0


0x2b76:	push	0xc
0x2b7b:	jmp	0x2aa0


0x2b86:	push	0xd
0x2b8b:	jmp	0x2aa0


0x2b96:	push	0xe
0x2b9b:	jmp	0x2aa0


0x2ba6:	push	0xf
0x2bab:	jmp	0x2aa0


0x2bb6:	push	0x10
0x2bbb:	jmp	0x2aa0


0x2bc6:	push	0x11
0x2bcb:	jmp	0x2aa0


0x2bd6:	push	0x12
0x2bdb:	jmp	0x2aa0


0x2be6:	push	0x13
0x2beb:	jmp	0x2aa0


0x2bf6:	push	0x14
0x2bfb:	jmp	0x2aa0


0x2c06:	push	0x15
0x2c0b:	jmp	0x2aa0


0x2c16:	push	0x16
0x2c1b:	jmp	0x2aa0


0x2c26:	push	0x17
0x2c2b:	jmp	0x2aa0


0x2c36:	push	0x18
0x2c3b:	jmp	0x2aa0


0x2c46:	push	0x19
0x2c4b:	jmp	0x2aa0


0x2c56:	push	0x1a
0x2c5b:	jmp	0x2aa0


0x2c66:	push	0x1b
0x2c6b:	jmp	0x2aa0


0x2c76:	push	0x1c
0x2c7b:	jmp	0x2aa0


0x2c86:	push	0x1d
0x2c8b:	jmp	0x2aa0


0x2c96:	push	0x1e
0x2c9b:	jmp	0x2aa0


0x2ca6:	push	0x1f
0x2cab:	jmp	0x2aa0


0x2cb6:	push	0x20
0x2cbb:	jmp	0x2aa0


0x2cc6:	push	0x21
0x2ccb:	jmp	0x2aa0


0x2cd6:	push	0x22
0x2cdb:	jmp	0x2aa0


0x2ce6:	push	0x23
0x2ceb:	jmp	0x2aa0


0x2cf6:	push	0x24
0x2cfb:	jmp	0x2aa0


0x2d06:	push	0x25
0x2d0b:	jmp	0x2aa0


0x2d16:	push	0x26
0x2d1b:	jmp	0x2aa0


0x2d26:	push	0x27
0x2d2b:	jmp	0x2aa0


0x2d36:	push	0x28
0x2d3b:	jmp	0x2aa0


0x2d46:	push	0x29
0x2d4b:	jmp	0x2aa0


0x2d56:	push	0x2a
0x2d5b:	jmp	0x2aa0


0x2d66:	push	0x2b
0x2d6b:	jmp	0x2aa0


0x2d76:	push	0x2c
0x2d7b:	jmp	0x2aa0


0x2d86:	push	0x2d
0x2d8b:	jmp	0x2aa0


0x2d96:	push	0x2e
0x2d9b:	jmp	0x2aa0


0x2da6:	push	0x2f
0x2dab:	jmp	0x2aa0


0x2db6:	push	0x30
0x2dbb:	jmp	0x2aa0


0x2dc6:	push	0x31
0x2dcb:	jmp	0x2aa0


0x2dd6:	push	0x32
0x2ddb:	jmp	0x2aa0


0x2de6:	push	0x33
0x2deb:	jmp	0x2aa0


0x2df6:	push	0x34
0x2dfb:	jmp	0x2aa0


0x2e06:	push	0x35
0x2e0b:	jmp	0x2aa0


0x2e16:	push	0x36
0x2e1b:	jmp	0x2aa0


0x2e26:	push	0x37
0x2e2b:	jmp	0x2aa0


0x2e36:	push	0x38
0x2e3b:	jmp	0x2aa0


0x2e46:	push	0x39
0x2e4b:	jmp	0x2aa0


0x2e56:	push	0x3a
0x2e5b:	jmp	0x2aa0


0x2e66:	push	0x3b
0x2e6b:	jmp	0x2aa0


0x2e76:	push	0x3c
0x2e7b:	jmp	0x2aa0


0x2e86:	push	0x3d
0x2e8b:	jmp	0x2aa0


0x2e96:	push	0x3e
0x2e9b:	jmp	0x2aa0


0x2ea6:	push	0x3f
0x2eab:	jmp	0x2aa0


0x2eb6:	push	0x40
0x2ebb:	jmp	0x2aa0


0x2ec6:	push	0x41
0x2ecb:	jmp	0x2aa0


0x2ed6:	push	0x42
0x2edb:	jmp	0x2aa0


0x2ee6:	push	0x43
0x2eeb:	jmp	0x2aa0


0x2ef6:	push	0x44
0x2efb:	jmp	0x2aa0


0x2f06:	push	0x45
0x2f0b:	jmp	0x2aa0


0x2f16:	push	0x46
0x2f1b:	jmp	0x2aa0


0x2f26:	push	0x47
0x2f2b:	jmp	0x2aa0


0x2f36:	push	0x48
0x2f3b:	jmp	0x2aa0


0x2f46:	push	0x49
0x2f4b:	jmp	0x2aa0


0x2f56:	push	0x4a
0x2f5b:	jmp	0x2aa0


0x2f66:	push	0x4b
0x2f6b:	jmp	0x2aa0


0x2f76:	push	0x4c
0x2f7b:	jmp	0x2aa0


0x2f86:	push	0x4d
0x2f8b:	jmp	0x2aa0


0x2f96:	push	0x4e
0x2f9b:	jmp	0x2aa0


0x2fa6:	push	0x4f
0x2fab:	jmp	0x2aa0


0x2fb6:	push	0x50
0x2fbb:	jmp	0x2aa0


0x2fc6:	push	0x51
0x2fcb:	jmp	0x2aa0


0x2fd6:	push	0x52
0x2fdb:	jmp	0x2aa0


0x2fe6:	push	0x53
0x2feb:	jmp	0x2aa0


0x2ff6:	push	0x54
0x2ffb:	jmp	0x2aa0


0x3006:	push	0x55
0x300b:	jmp	0x2aa0


0x3016:	push	0x56
0x301b:	jmp	0x2aa0


0x3026:	push	0x57
0x302b:	jmp	0x2aa0


0x3036:	push	0x58
0x303b:	jmp	0x2aa0


0x3046:	push	0x59
0x304b:	jmp	0x2aa0


0x3056:	push	0x5a
0x305b:	jmp	0x2aa0


0x3066:	push	0x5b
0x306b:	jmp	0x2aa0


0x3076:	push	0x5c
0x307b:	jmp	0x2aa0


0x3086:	push	0x5d
0x308b:	jmp	0x2aa0


0x3096:	push	0x5e
0x309b:	jmp	0x2aa0


0x30a6:	push	0x5f
0x30ab:	jmp	0x2aa0


0x30b6:	push	0x60
0x30bb:	jmp	0x2aa0


0x30c6:	push	0x61
0x30cb:	jmp	0x2aa0


0x30d6:	push	0x62
0x30db:	jmp	0x2aa0


0x30e6:	push	0x63
0x30eb:	jmp	0x2aa0


0x30f6:	push	0x64
0x30fb:	jmp	0x2aa0


0x3106:	push	0x65
0x310b:	jmp	0x2aa0


0x3116:	push	0x66
0x311b:	jmp	0x2aa0


0x3126:	push	0x67
0x312b:	jmp	0x2aa0


0x3136:	push	0x68
0x313b:	jmp	0x2aa0


0x3146:	push	0x69
0x314b:	jmp	0x2aa0


0x3156:	push	0x6a
0x315b:	jmp	0x2aa0


0x3160:	jmp	qword ptr [rip + 0x216e22]




0x3166:	push	0x6b
0x316b:	jmp	0x2aa0


0x3176:	push	0x6c
0x317b:	jmp	0x2aa0


0x3186:	push	0x6d
0x318b:	jmp	0x2aa0


0x3196:	push	0x6e
0x319b:	jmp	0x2aa0


0x31a6:	push	0x6f
0x31ab:	jmp	0x2aa0


0x31b6:	push	0x70
0x31bb:	jmp	0x2aa0


0x31c6:	nop	


0x31ce:	nop	


0x32f1:	nop	word ptr cs:[rax + rax]
0x32fb:	nop	dword ptr [rax + rax]


0x38bb:	mov	r9, qword ptr [rip + 0x216866]
0x38c2:	mov	rsi, qword ptr [rip + 0x216917]
0x38c9:	lea	rdx, [rip + 0x215cb0]
0x38d0:	lea	rcx, [rip + 0x105e9]
0x38d7:	lea	rdi, [rip + 0x11d5f]
0x38de:	mov	r8d, 1
0x38e4:	call	0xb180


0x38e9:	lea	rdx, [rip + 0x105d0]
0x38f0:	movsx	r9d, byte ptr [rdx + rax]
0x38f5:	mov	rsi, qword ptr [rsp + 0x38]
0x38fa:	lea	rdi, [rsp + 0x3b0]
0x3902:	mov	edx, 2
0x3907:	mov	byte ptr [rsp + 0x3b0], r9b
0x390f:	mov	dword ptr [rsp + 0x70], r9d
0x3914:	mov	byte ptr [rsp + 0x3b1], 0
0x391c:	call	0x6180


0x3921:	mov	r9d, dword ptr [rsp + 0x70]
0x3926:	jmp	0x383e


0x392b:	mov	rsi, qword ptr [rip + 0x2168ae]
0x3932:	mov	r9d, 0x63
0x3938:	test	rsi, rsi
0x393b:	je	0x3970


0x3970:	test	r12b, r12b
0x3973:	je	0x397e


0x393d:	mov	r9, qword ptr [rip + 0x2167e4]
0x3944:	lea	rdx, [rip + 0x215c75]
0x394b:	lea	rcx, [rip + 0x10574]
0x3952:	lea	rdi, [rip + 0x11ceb]
0x3959:	mov	r8d, 1
0x395f:	call	0xb180


0x397e:	movsx	r12d, r9b
0x3982:	jmp	0x383e


0x3975:	cmp	r12d, r9d
0x3978:	jne	0x5c8d


0x5c8d:	lea	rdi, [rip + 0xf9b8]
0x5c94:	call	0x62a0


0x3964:	lea	rdx, [rip + 0x1055b]
0x396b:	movsx	r9d, byte ptr [rdx + rax]
0x3970:	test	r12b, r12b
0x3973:	je	0x397e


0x3f98:	mov	r10, qword ptr [rip + 0x216241]
0x3f9f:	mov	eax, dword ptr [rsp + 0x90]
0x3fa6:	lea	rcx, [rsp + 0x1a0]
0x3fae:	lea	r8, [rip + 0x11556]
0x3fb5:	xor	esi, esi
0x3fb7:	mov	edx, 0xa
0x3fbc:	mov	dword ptr [rsp + 0x70], r9d
0x3fc1:	mov	rdi, r10
0x3fc4:	mov	dword ptr [rsp + 0x78], eax
0x3fc8:	mov	qword ptr [rsp + 0x58], r10
0x3fcd:	call	0x12250


0x3fd2:	cmp	eax, 1
0x3fd5:	mov	r9d, dword ptr [rsp + 0x70]
0x3fda:	je	0x5566


0x5566:	mov	qword ptr [rsp + 0x58], -1
0x556f:	jmp	0x383e


0x3fe0:	test	eax, eax
0x3fe2:	mov	r10, qword ptr [rsp + 0x58]
0x3fe7:	jne	0x5c73


0x3fed:	mov	rax, qword ptr [rsp + 0x1a0]
0x3ff5:	test	rax, rax
0x3ff8:	mov	qword ptr [rsp + 0x58], rax
0x3ffd:	jne	0x383e


0x5c73:	mov	esi, dword ptr [rsp + 0x78]
0x5c77:	lea	rcx, [rip + 0x213962]
0x5c7e:	mov	r8, r10
0x5c81:	mov	edx, 0xffffff87
0x5c86:	mov	edi, eax
0x5c88:	call	0x12670


0x4003:	lea	rsi, [rip + 0x11156]
0x400a:	mov	edx, 5
0x400f:	xor	edi, edi
0x4011:	call	0x2c70


0x4016:	xor	esi, esi
0x4018:	mov	rdx, rax
0x401b:	mov	edi, 2
0x4020:	xor	eax, eax
0x4022:	call	0x2fe0


0x4027:	mov	rdi, qword ptr [rsp + 0x40]
0x402c:	mov	rdx, qword ptr [rip + 0x2161ad]
0x4033:	test	rdi, rdi
0x4036:	je	0x405c


0x405c:	mov	qword ptr [rsp + 0x40], rdx
0x4061:	jmp	0x383e


0x4038:	mov	rsi, rdx
0x403b:	mov	dword ptr [rsp + 0x70], r9d
0x4040:	mov	qword ptr [rsp + 0x40], rdx
0x4045:	call	0x2e40


0x404a:	test	eax, eax
0x404c:	mov	rdx, qword ptr [rsp + 0x40]
0x4051:	mov	r9d, dword ptr [rsp + 0x70]
0x4056:	jne	0x5901


0x4066:	mov	r11, qword ptr [rip + 0x216173]
0x406d:	mov	eax, dword ptr [rsp + 0x90]
0x4074:	lea	rcx, [rsp + 0x150]
0x407c:	xor	r8d, r8d
0x407f:	xor	esi, esi
0x4081:	mov	edx, 0xa
0x4086:	mov	dword ptr [rsp + 0x8c], r9d
0x408e:	mov	rdi, r11
0x4091:	mov	qword ptr [rsp + 0x80], r11
0x4099:	mov	dword ptr [rsp + 0x70], eax
0x409d:	call	0x12720


0x40a2:	lea	rsi, [rsp + 0x1a0]
0x40aa:	mov	edi, 7
0x40af:	mov	dword ptr [rsp + 0x78], eax
0x40b3:	call	0x3110


0x40b8:	test	eax, eax
0x40ba:	mov	r10d, 0x11
0x40c0:	mov	r11, qword ptr [rsp + 0x80]
0x40c8:	mov	r9d, dword ptr [rsp + 0x8c]
0x40d0:	jne	0x40dd


0x40d2:	mov	eax, dword ptr [rsp + 0x1a0]
0x40d9:	lea	r10d, [rax - 3]
0x40dd:	cmp	dword ptr [rsp + 0x78], 0
0x40e2:	jne	0x498c


0x40dd:	cmp	dword ptr [rsp + 0x78], 0
0x40e2:	jne	0x498c


0x40e8:	mov	rax, qword ptr [rsp + 0x150]
0x40f0:	mov	edx, eax
0x40f2:	mov	dword ptr [rip + 0x215f2c], eax
0x40f8:	cmp	rax, rdx
0x40fb:	jne	0x410f


0x498c:	mov	eax, dword ptr [rsp + 0x78]
0x4990:	cmp	eax, 1
0x4993:	je	0x410f


0x40fd:	cmp	eax, 1
0x4100:	jbe	0x598c


0x410f:	mov	rdi, r11
0x4112:	mov	dword ptr [rsp + 8], r10d
0x4117:	call	0x10390


0x4999:	mov	esi, dword ptr [rsp + 0x70]
0x499d:	lea	rcx, [rip + 0x214c3c]
0x49a4:	mov	r8, r11
0x49a7:	mov	edx, 0xffffff84
0x49ac:	mov	edi, eax
0x49ae:	call	0x12670


0x598c:	mov	rdi, r11
0x598f:	call	0x10390


0x4106:	cmp	eax, r10d
0x4109:	jbe	0x383e


0x5994:	mov	rbp, rax
0x5997:	movsxd	rax, dword ptr [rsp + 0x70]
0x599c:	lea	rdx, [rip + 0x213c3d]
0x59a3:	lea	rsi, [rip + 0xfd25]
0x59aa:	xor	edi, edi
0x59ac:	shl	rax, 5
0x59b0:	mov	rbx, qword ptr [rdx + rax]
0x59b4:	mov	edx, 5
0x59b9:	call	0x2c70


0x59be:	mov	r8, rbp
0x59c1:	mov	rdx, rax
0x59c4:	xor	esi, esi
0x59c6:	mov	rcx, rbx
0x59c9:	xor	edi, edi
0x59cb:	xor	eax, eax
0x59cd:	call	0x2fe0


0x59d2:	lea	rdi, [rip + 0xfd0f]
0x59d9:	call	0x10390


0x59de:	lea	rsi, [rip + 0xfd05]
0x59e5:	mov	rbp, rax
0x59e8:	mov	edx, 5
0x59ed:	xor	edi, edi
0x59ef:	call	0x2c70


0x59f4:	mov	r8, rbp
0x59f7:	mov	rdx, rax
0x59fa:	mov	rcx, rbx
0x59fd:	xor	esi, esi
0x59ff:	mov	edi, 2
0x5a04:	xor	eax, eax
0x5a06:	call	0x2fe0


0x5a0b:	mov	rdi, rdx
0x5a0e:	call	0x10390


0x5a13:	lea	rsi, [rip + 0xfd06]
0x5a1a:	mov	rbx, rax
0x5a1d:	mov	edx, 5
0x5a22:	xor	edi, edi
0x5a24:	call	0x2c70


0x5a29:	mov	rcx, rbx
0x5a2c:	mov	rdx, rax
0x5a2f:	xor	esi, esi
0x5a31:	mov	edi, 2
0x5a36:	xor	eax, eax
0x5a38:	call	0x2fe0


0x5a3d:	lea	rsi, [rip + 0xfcf3]
0x5a44:	mov	edx, 5
0x5a49:	xor	edi, edi
0x5a4b:	call	0x2c70


0x5a50:	xor	esi, esi
0x5a52:	mov	rdx, rax
0x5a55:	mov	edi, 2
0x5a5a:	xor	eax, eax
0x5a5c:	call	0x2fe0


0x5a61:	xor	edi, edi
0x5a63:	call	0xa8c0


0x411c:	mov	rbp, rax
0x411f:	movsxd	rax, dword ptr [rsp + 0x70]
0x4124:	lea	rdx, [rip + 0x2154b5]
0x412b:	lea	rsi, [rip + 0x11582]
0x4132:	xor	edi, edi
0x4134:	shl	rax, 5
0x4138:	mov	rbx, qword ptr [rdx + rax]
0x413c:	mov	edx, 5
0x4141:	call	0x2c70


0x4146:	mov	r8, rbp
0x4149:	mov	rdx, rax
0x414c:	xor	esi, esi
0x414e:	mov	rcx, rbx
0x4151:	xor	edi, edi
0x4153:	xor	eax, eax
0x4155:	call	0x2fe0


0x415a:	mov	r10d, dword ptr [rsp + 8]
0x415f:	lea	rsi, [rsp + 0x3b0]
0x4167:	mov	edi, r10d
0x416a:	call	0xdc90


0x416f:	lea	rsi, [rip + 0x10f72]
0x4176:	mov	rbp, rax
0x4179:	mov	edx, 5
0x417e:	xor	edi, edi
0x4180:	call	0x2c70


0x4185:	mov	r8, rbp
0x4188:	mov	rdx, rax
0x418b:	mov	rcx, rbx
0x418e:	xor	esi, esi
0x4190:	mov	edi, 2
0x4195:	xor	eax, eax
0x4197:	call	0x2fe0


0x419c:	mov	rax, qword ptr [rip + 0x21603d]
0x41a3:	mov	qword ptr [rsp + 0x18], rax
0x41a8:	jmp	0x383e


0x41ad:	mov	rdi, qword ptr [rip + 0x216274]
0x41b4:	mov	rdx, qword ptr [rip + 0x216025]
0x41bb:	test	rdi, rdi
0x41be:	je	0x41e4


0x41e4:	mov	qword ptr [rip + 0x21623d], rdx
0x41eb:	jmp	0x383e


0x41c0:	mov	rsi, rdx
0x41c3:	mov	dword ptr [rsp + 0x78], r9d
0x41c8:	mov	qword ptr [rsp + 0x70], rdx
0x41cd:	call	0x2e40


0x41d2:	test	eax, eax
0x41d4:	mov	rdx, qword ptr [rsp + 0x70]
0x41d9:	mov	r9d, dword ptr [rsp + 0x78]
0x41de:	jne	0x5925


0x41f0:	mov	byte ptr [rip + 0x216229], 1
0x41f7:	jmp	0x383e


0x41fc:	mov	byte ptr [rip + 0x215e35], 0
0x4203:	jmp	0x383e


0x4208:	movsxd	rdx, dword ptr [rip + 0x215fc9]
0x420f:	mov	rax, rdx
0x4212:	mov	rdx, qword ptr [rbp + rdx*8 - 8]
0x4217:	cmp	rdx, qword ptr [rip + 0x215fc2]
0x421e:	jne	0x383e


0x4224:	movsx	ecx, byte ptr [rdx]
0x4227:	mov	esi, ecx
0x4229:	sub	ecx, 0x30
0x422c:	cmp	ecx, 9
0x422f:	jbe	0x5664


0x5664:	add	rdx, 1
0x5668:	jmp	0x4224


0x4235:	xor	edx, edx
0x4237:	test	sil, sil
0x423a:	setne	dl
0x423d:	sub	eax, edx
0x423f:	mov	dword ptr [rip + 0x215f93], eax
0x4245:	jmp	0x383e


0x424a:	mov	byte ptr [rip + 0x2161e8], 1
0x4251:	jmp	0x383e


0x4256:	mov	rdx, qword ptr [rip + 0x215f83]
0x425d:	movsx	eax, byte ptr [rdx]
0x4260:	test	al, al
0x4262:	je	0x5b29


0x5b29:	lea	rsi, [rip + 0xfbe3]
0x5b30:	mov	edx, 5
0x5b35:	xor	edi, edi
0x5b37:	call	0x2c70


0x4268:	cmp	byte ptr [rdx + 1], 0
0x426c:	je	0x429b


0x429b:	mov	edx, dword ptr [rip + 0x215d87]
0x42a1:	cmp	edx, 0x80
0x42a7:	je	0x42b1


0x426e:	lea	rsi, [rip + 0x114a8]
0x4275:	mov	rdi, rdx
0x4278:	mov	dword ptr [rsp + 0x78], r9d
0x427d:	mov	qword ptr [rsp + 0x70], rdx
0x4282:	call	0x2e40


0x42b1:	mov	dword ptr [rip + 0x215d71], eax
0x42b7:	jmp	0x383e


0x42a9:	cmp	edx, eax
0x42ab:	jne	0x5a3d


0x4287:	test	eax, eax
0x4289:	mov	rdx, qword ptr [rsp + 0x70]
0x428e:	mov	r9d, dword ptr [rsp + 0x78]
0x4293:	jne	0x5a0b


0x4299:	xor	eax, eax
0x429b:	mov	edx, dword ptr [rip + 0x215d87]
0x42a1:	cmp	edx, 0x80
0x42a7:	je	0x42b1


0x5b3c:	xor	esi, esi
0x5b3e:	mov	rdx, rax
0x5b41:	mov	edi, 2
0x5b46:	xor	eax, eax
0x5b48:	call	0x2fe0


0x42bc:	mov	byte ptr [rip + 0x216177], 1
0x42c3:	jmp	0x383e


0x42c8:	mov	rdi, qword ptr [rip + 0x215f11]
0x42cf:	mov	dword ptr [rsp + 0x70], r9d
0x42d4:	call	0x63f0


0x42d9:	mov	r9d, dword ptr [rsp + 0x70]
0x42de:	jmp	0x383e


0x42e3:	mov	rdi, qword ptr [rip + 0x215ef6]
0x42ea:	mov	eax, dword ptr [rsp + 0x90]
0x42f1:	lea	rcx, [rsp + 0x150]
0x42f9:	lea	rsi, [rsp + 0x1a0]
0x4301:	lea	r8, [rip + 0x113fe]
0x4308:	mov	edx, 0xa
0x430d:	mov	dword ptr [rsp + 0x70], r9d
0x4312:	mov	qword ptr [rsp + 0x78], rdi
0x4317:	mov	dword ptr [rsp + 0x80], eax
0x431e:	call	0x12720


0x4323:	test	eax, eax
0x4325:	mov	r9d, dword ptr [rsp + 0x70]
0x432a:	jne	0x49b3


0x4330:	mov	rax, qword ptr [rsp + 0x1a0]
0x4338:	movsx	eax, byte ptr [rax - 1]
0x433c:	sub	eax, 0x30
0x433f:	cmp	eax, 9
0x4342:	ja	0x436b


0x49b3:	cmp	eax, 2
0x49b6:	jne	0x49d6


0x4344:	mov	rax, qword ptr [rsp + 0x150]
0x434c:	movabs	rdx, 0x3fffffffffffff
0x4356:	cmp	rax, rdx
0x4359:	ja	0x55bb


0x436b:	mov	rdx, qword ptr [rsp + 0x150]
0x4373:	cmp	rdx, qword ptr [rip + 0x2160de]
0x437a:	jb	0x383e


0x49b8:	mov	rdx, qword ptr [rsp + 0x1a0]
0x49c0:	movsx	ecx, byte ptr [rdx - 1]
0x49c4:	sub	ecx, 0x30
0x49c7:	cmp	ecx, 9
0x49ca:	ja	0x49d6


0x49d6:	mov	r8, qword ptr [rsp + 0x78]
0x49db:	mov	esi, dword ptr [rsp + 0x80]
0x49e2:	lea	rcx, [rip + 0x214bf7]
0x49e9:	mov	edx, 0x53
0x49ee:	mov	edi, eax
0x49f0:	call	0x12670


0x435f:	shl	rax, 0xa
0x4363:	mov	qword ptr [rsp + 0x150], rax
0x436b:	mov	rdx, qword ptr [rsp + 0x150]
0x4373:	cmp	rdx, qword ptr [rip + 0x2160de]
0x437a:	jb	0x383e


0x55bb:	mov	eax, 1
0x55c0:	jmp	0x49d6


0x4380:	mov	eax, dword ptr [rip + 0x215c9e]
0x4386:	imul	rax, rax, 0x22
0x438a:	cmp	rax, rdx
0x438d:	cmovb	rax, rdx
0x4391:	mov	qword ptr [rip + 0x2160c0], rax
0x4398:	jmp	0x383e


0x49cc:	cmp	byte ptr [rdx + 1], 0
0x49d0:	je	0x578f


0x578f:	movzx	edx, byte ptr [rdx]
0x5792:	cmp	dl, 0x25
0x5795:	je	0x57d0


0x57d0:	mov	dword ptr [rsp + 0x70], r9d
0x57d5:	call	0xe1f0


0x5797:	cmp	dl, 0x62
0x579a:	je	0x436b


0x57a0:	jmp	0x49d6


0x57da:	mov	rax, qword ptr [rsp + 0x150]
0x57e2:	mov	r9d, dword ptr [rsp + 0x70]
0x57e7:	test	rax, rax
0x57ea:	js	0x585b


0x585b:	mov	rdx, rax
0x585e:	pxor	xmm1, xmm1
0x5862:	shr	rdx, 1
0x5865:	and	eax, 1
0x5868:	or	rdx, rax
0x586b:	cvtsi2sd	xmm1, rdx
0x5870:	addsd	xmm1, xmm1
0x5874:	jmp	0x57f5


0x57ec:	pxor	xmm1, xmm1
0x57f0:	cvtsi2sd	xmm1, rax
0x57f5:	mulsd	xmm0, xmm1
0x57f9:	movsd	xmm1, qword ptr [rip + 0x101d7]
0x5801:	divsd	xmm0, qword ptr [rip + 0x101c7]
0x5809:	ucomisd	xmm1, xmm0
0x580d:	jbe	0x55bb


0x57f5:	mulsd	xmm0, xmm1
0x57f9:	movsd	xmm1, qword ptr [rip + 0x101d7]
0x5801:	divsd	xmm0, qword ptr [rip + 0x101c7]
0x5809:	ucomisd	xmm1, xmm0
0x580d:	jbe	0x55bb


0x5813:	movsd	xmm1, qword ptr [rip + 0x101c5]
0x581b:	ucomisd	xmm0, xmm1
0x581f:	jae	0x5833


0x5821:	cvttsd2si	rax, xmm0
0x5826:	mov	qword ptr [rsp + 0x150], rax
0x582e:	jmp	0x436b


0x5833:	subsd	xmm0, xmm1
0x5837:	cvttsd2si	rax, xmm0
0x583c:	mov	qword ptr [rsp + 0x150], rax
0x5844:	movabs	rax, 0x8000000000000000
0x584e:	xor	qword ptr [rsp + 0x150], rax
0x5856:	jmp	0x436b


0x439d:	mov	rdx, qword ptr [rip + 0x215e3c]
0x43a4:	cmp	byte ptr [rdx], 0x2b
0x43a7:	je	0x49f5


0x49f5:	movsxd	rax, dword ptr [rip + 0x2157dc]
0x49fc:	cmp	eax, ebx
0x49fe:	je	0x563b


0x43ad:	mov	qword ptr [r14 + r15*8], rdx
0x43b1:	add	r15, 1
0x43b5:	jmp	0x383e


0x563b:	mov	dword ptr [rsp + 0x70], 0
0x5643:	jmp	0x4a1a


0x4a04:	mov	rax, qword ptr [rbp + rax*8]
0x4a09:	mov	dword ptr [rsp + 0x70], 0
0x4a11:	cmp	byte ptr [rax], 0x2d
0x4a14:	je	0x55c5


0x4a1a:	cmp	qword ptr [rsp + 0x68], 0
0x4a20:	sete	al
0x4a23:	and	eax, dword ptr [rsp + 0x70]
0x4a27:	or	byte ptr [rsp + 0x10], al
0x4a2b:	je	0x43ad


0x55c5:	movsx	eax, byte ptr [rax + 1]
0x55c9:	sub	eax, 0x30
0x55cc:	cmp	eax, 9
0x55cf:	setbe	al
0x55d2:	movzx	eax, al
0x55d5:	mov	dword ptr [rsp + 0x70], eax
0x55d9:	jmp	0x4a1a


0x4a31:	mov	rdi, qword ptr [rsp + 0x30]
0x4a36:	xor	eax, eax
0x4a38:	mov	ecx, 0x12
0x4a3d:	mov	rsi, qword ptr [rsp + 0x30]
0x4a42:	mov	dword ptr [rsp + 0x80], r9d
0x4a4a:	rep stosd	dword ptr [rdi], eax


0x4a4a:	rep stosd	dword ptr [rdi], eax


0x4a4c:	lea	rdi, [rdx + 1]
0x4a50:	or	rcx, 0xffffffffffffffff
0x4a54:	xor	edx, edx
0x4a56:	mov	qword ptr [rsp + 0xc0], rcx
0x4a5e:	mov	qword ptr [rsp + 0x78], rcx
0x4a63:	call	0x6fc0


0x4a68:	test	rax, rax
0x4a6b:	mov	rcx, qword ptr [rsp + 0x78]
0x4a70:	mov	r9d, dword ptr [rsp + 0x80]
0x4a78:	je	0x57a5


0x57a5:	cmp	qword ptr [rsp + 0xb0], 0
0x57ae:	jne	0x4aba


0x4a7e:	cmp	byte ptr [rax], 0x2e
0x4a81:	je	0x5879


0x57b4:	cmp	qword ptr [rsp + 0xb8], 0
0x57bd:	jne	0x4aba


0x4aba:	mov	rdx, qword ptr [rip + 0x21571f]
0x4ac1:	jmp	0x43ad


0x5879:	lea	rdi, [rax + 1]
0x587d:	mov	rax, qword ptr [rsp + 0x30]
0x5882:	xor	edx, edx
0x5884:	mov	dword ptr [rsp + 0x78], r9d
0x5889:	lea	rsi, [rax + 8]
0x588d:	call	0x6fc0


0x4a87:	cmp	qword ptr [rsp + 0xb0], 0
0x4a90:	jne	0x566d


0x57c3:	mov	qword ptr [rsp + 0xb0], rcx
0x57cb:	jmp	0x4aba


0x4a96:	cmp	qword ptr [rsp + 0xb8], 0
0x4a9f:	jne	0x566d


0x566d:	mov	rsi, qword ptr [rsp + 0x30]
0x5672:	xor	edx, edx
0x5674:	mov	rdi, rax
0x5677:	mov	dword ptr [rsp + 0x78], r9d
0x567c:	call	0x6180


0x4aa5:	mov	qword ptr [rsp + 0xb0], -1
0x4ab1:	test	rax, rax
0x4ab4:	jne	0x566d


0x5681:	cmp	byte ptr [rax], 0
0x5684:	mov	r9d, dword ptr [rsp + 0x78]
0x5689:	jne	0x4aba


0x568f:	cmp	dword ptr [rsp + 0x70], 0
0x5694:	je	0x574d


0x574d:	mov	rdi, qword ptr [rsp + 0x30]
0x5752:	mov	esi, 0x48
0x5757:	mov	dword ptr [rsp + 0x70], r9d
0x575c:	mov	byte ptr [rsp + 0xe9], 1
0x5764:	call	0x11fe0


0x569a:	movsxd	rax, dword ptr [rip + 0x214b37]
0x56a1:	mov	rsi, qword ptr [rsp + 0x60]
0x56a6:	mov	dword ptr [rsp + 0x78], r9d
0x56ab:	lea	edx, [rax + 1]
0x56ae:	mov	rax, qword ptr [rbp + rax*8]
0x56b3:	mov	dword ptr [rip + 0x214b1f], edx
0x56b9:	lea	rdx, [rip + 0xff2d]
0x56c0:	lea	rdi, [rax + 1]
0x56c4:	mov	qword ptr [rsp + 0x70], rax
0x56c9:	call	0x6fc0


0x5769:	mov	rdx, qword ptr [rip + 0x214cc0]
0x5770:	mov	r9d, dword ptr [rsp + 0x70]
0x5775:	lea	rcx, [rip + 0x214cb4]
0x577c:	test	rdx, rdx
0x577f:	je	0x486f


0x486f:	mov	qword ptr [rcx], rax
0x4872:	mov	qword ptr [rax + 0x40], 0
0x487a:	jmp	0x383e


0x5785:	lea	rcx, [rdx + 0x40]
0x5789:	mov	rdx, qword ptr [rdx + 0x40]
0x578d:	jmp	0x577c


0x577c:	test	rdx, rdx
0x577f:	je	0x486f


0x56ce:	test	rax, rax
0x56d1:	mov	r9d, dword ptr [rsp + 0x78]
0x56d6:	je	0x596d


0x56dc:	cmp	byte ptr [rax], 0x2e
0x56df:	jne	0x5704


0x56e1:	lea	rdi, [rax + 1]
0x56e5:	mov	rax, qword ptr [rsp + 0x30]
0x56ea:	lea	rdx, [rip + 0xff15]
0x56f1:	mov	dword ptr [rsp + 0x78], r9d
0x56f6:	lea	rsi, [rax + 0x18]
0x56fa:	call	0x6fc0


0x5704:	cmp	qword ptr [rsp + 0xc8], 0
0x570d:	jne	0x5728


0x570f:	mov	rdx, qword ptr [rsp + 0xc0]
0x5717:	test	rdx, rdx
0x571a:	je	0x5728


0x5728:	mov	rsi, qword ptr [rsp + 0x30]
0x572d:	mov	edx, 1
0x5732:	mov	rdi, rax
0x5735:	mov	dword ptr [rsp + 0x78], r9d
0x573a:	call	0x6180


0x571c:	sub	rdx, 1
0x5720:	mov	qword ptr [rsp + 0xc0], rdx
0x5728:	mov	rsi, qword ptr [rsp + 0x30]
0x572d:	mov	edx, 1
0x5732:	mov	rdi, rax
0x5735:	mov	dword ptr [rsp + 0x78], r9d
0x573a:	call	0x6180


0x573f:	cmp	byte ptr [rax], 0
0x5742:	mov	r9d, dword ptr [rsp + 0x78]
0x5747:	jne	0x58dc


0x58dc:	mov	rdi, qword ptr [rsp + 0x70]
0x58e1:	lea	rsi, [rip + 0xfd37]
0x58e8:	call	0x31e0


0x56ff:	mov	r9d, dword ptr [rsp + 0x78]
0x5704:	cmp	qword ptr [rsp + 0xc8], 0
0x570d:	jne	0x5728


0x5892:	cmp	qword ptr [rsp + 0xb0], 0
0x589b:	mov	r9d, dword ptr [rsp + 0x78]
0x58a0:	jne	0x4ab1


0x58a6:	cmp	qword ptr [rsp + 0xb8], 0
0x58af:	jne	0x4ab1


0x4ab1:	test	rax, rax
0x4ab4:	jne	0x566d


0x58b5:	jmp	0x4aa5


0x43f8:	mov	rdi, qword ptr [rsp + 0x30]
0x43fd:	xor	eax, eax
0x43ff:	mov	ecx, 0x12
0x4404:	mov	rsi, qword ptr [rsp + 0x30]
0x4409:	lea	rdx, [rip + 0x1123f]
0x4410:	mov	dword ptr [rsp + 0x70], r9d
0x4415:	rep stosd	dword ptr [rdi], eax


0x4415:	rep stosd	dword ptr [rdi], eax


0x4417:	mov	rdi, qword ptr [rip + 0x215dc2]
0x441e:	mov	qword ptr [rsp + 0xc0], -1
0x442a:	call	0x6fc0


0x442f:	mov	rdx, qword ptr [rsp + 0xb0]
0x4437:	mov	r9d, dword ptr [rsp + 0x70]
0x443c:	lea	rcx, [rdx - 1]
0x4440:	test	rdx, rdx
0x4443:	mov	qword ptr [rsp + 0xb0], rcx
0x444b:	je	0x5d2b


0x4451:	cmp	byte ptr [rax], 0x2e
0x4454:	je	0x54ad


0x54ad:	lea	rdi, [rax + 1]
0x54b1:	mov	rax, qword ptr [rsp + 0x30]
0x54b6:	lea	rdx, [rip + 0x10149]
0x54bd:	mov	dword ptr [rsp + 0x70], r9d
0x54c2:	lea	rsi, [rax + 8]
0x54c6:	call	0x6fc0


0x445a:	cmp	qword ptr [rsp + 0xb0], 0
0x4463:	je	0x496c


0x496c:	cmp	qword ptr [rsp + 0xb8], 0
0x4975:	jne	0x4469


0x4469:	mov	rsi, qword ptr [rsp + 0x30]
0x446e:	xor	edx, edx
0x4470:	mov	rdi, rax
0x4473:	mov	dword ptr [rsp + 0x70], r9d
0x4478:	call	0x6180


0x497b:	mov	qword ptr [rsp + 0xb0], -1
0x4987:	jmp	0x4469


0x447d:	cmp	byte ptr [rax], 0x2c
0x4480:	mov	r9d, dword ptr [rsp + 0x70]
0x4485:	je	0x5500


0x5500:	mov	rsi, qword ptr [rsp + 0x60]
0x5505:	lea	rdx, [rip + 0x1018f]
0x550c:	lea	rdi, [rax + 1]
0x5510:	mov	dword ptr [rsp + 0x70], r9d
0x5515:	call	0x6fc0


0x448b:	mov	qword ptr [rsp + 0xc0], -1
0x4497:	mov	qword ptr [rsp + 0xc8], 0
0x44a3:	cmp	byte ptr [rax], 0
0x44a6:	jne	0x5d18


0x44ac:	mov	rdi, qword ptr [rsp + 0x30]
0x44b1:	mov	esi, 0x48
0x44b6:	mov	dword ptr [rsp + 0x70], r9d
0x44bb:	call	0x11fe0


0x44c0:	mov	rdx, qword ptr [rip + 0x215f69]
0x44c7:	mov	r9d, dword ptr [rsp + 0x70]
0x44cc:	lea	rcx, [rip + 0x215f5d]
0x44d3:	test	rdx, rdx
0x44d6:	je	0x486f


0x44dc:	lea	rcx, [rdx + 0x40]
0x44e0:	mov	rdx, qword ptr [rdx + 0x40]
0x44e4:	jmp	0x44d3


0x44d3:	test	rdx, rdx
0x44d6:	je	0x486f


0x551a:	mov	rdx, qword ptr [rsp + 0xc0]
0x5522:	mov	r9d, dword ptr [rsp + 0x70]
0x5527:	lea	rcx, [rdx - 1]
0x552b:	test	rdx, rdx
0x552e:	mov	qword ptr [rsp + 0xc0], rcx
0x5536:	je	0x5d2b


0x553c:	cmp	byte ptr [rax], 0x2e
0x553f:	je	0x55de


0x55de:	lea	rdi, [rax + 1]
0x55e2:	mov	rax, qword ptr [rsp + 0x30]
0x55e7:	lea	rdx, [rip + 0x10018]
0x55ee:	mov	dword ptr [rsp + 0x70], r9d
0x55f3:	lea	rsi, [rax + 0x18]
0x55f7:	call	0x6fc0


0x5545:	mov	rsi, qword ptr [rsp + 0x30]
0x554a:	mov	edx, 1
0x554f:	mov	rdi, rax
0x5552:	mov	dword ptr [rsp + 0x70], r9d
0x5557:	call	0x6180


0x555c:	mov	r9d, dword ptr [rsp + 0x70]
0x5561:	jmp	0x44a3


0x44a3:	cmp	byte ptr [rax], 0
0x44a6:	jne	0x5d18


0x55fc:	mov	r9d, dword ptr [rsp + 0x70]
0x5601:	jmp	0x5545


0x54cb:	mov	rdx, qword ptr [rsp + 0xb8]
0x54d3:	mov	r9d, dword ptr [rsp + 0x70]
0x54d8:	lea	rcx, [rdx - 1]
0x54dc:	test	rdx, rdx
0x54df:	mov	qword ptr [rsp + 0xb8], rcx
0x54e7:	jne	0x445a


0x54ed:	mov	rdi, qword ptr [rip + 0x214cec]
0x54f4:	lea	rsi, [rip + 0x10187]
0x54fb:	call	0x31e0


0x44e6:	mov	rdi, qword ptr [rsp + 0x28]
0x44eb:	mov	rdx, qword ptr [rip + 0x215cee]
0x44f2:	test	rdi, rdi
0x44f5:	je	0x451b


0x451b:	mov	qword ptr [rsp + 0x28], rdx
0x4520:	jmp	0x383e


0x44f7:	mov	rsi, rdx
0x44fa:	mov	dword ptr [rsp + 0x70], r9d
0x44ff:	mov	qword ptr [rsp + 0x28], rdx
0x4504:	call	0x2e40


0x4509:	test	eax, eax
0x450b:	mov	rdx, qword ptr [rsp + 0x28]
0x4510:	mov	r9d, dword ptr [rsp + 0x70]
0x4515:	jne	0x5949


0x4525:	mov	byte ptr [rsp + 0x48], 1
0x452a:	jmp	0x383e


0x5d43:	nop	word ptr cs:[rax + rax]
0x5d4d:	nop	dword ptr [rax]


0x5d7a:	hlt	


0x5d7b:	nop	dword ptr [rax + rax]


0x5db2:	nop	dword ptr [rax]
0x5db6:	nop	word ptr cs:[rax + rax]


0x5e02:	nop	dword ptr [rax]
0x5e06:	nop	word ptr cs:[rax + rax]


0x5e4a:	nop	word ptr [rax + rax]


0x5e5a:	nop	word ptr [rax + rax]


0x5e6d:	nop	dword ptr [rax]


0x5e7a:	nop	word ptr [rax + rax]


0x5f37:	nop	word ptr [rax + rax]


0x5fae:	nop	


0x606b:	nop	dword ptr [rax + rax]


0x60c3:	nop	dword ptr [rax]
0x60c6:	nop	word ptr cs:[rax + rax]


0x617d:	nop	dword ptr [rax]


0x61b0:	sub	ecx, 0x4d
0x61b3:	cmp	cl, 0x25
0x61b6:	ja	0x61db


0x61d0:	add	rax, 1
0x61d4:	movzx	ecx, byte ptr [rax]
0x61d7:	test	cl, cl
0x61d9:	jne	0x61b0


0x61f7:	mov	qword ptr [rsi + 0x20], r11
0x61fb:	jmp	0x61d0


0x6245:	mov	byte ptr [rsi + 0x30], 1
0x6249:	cmp	edx, 1
0x624c:	ja	0x61d0


0x6249:	cmp	edx, 1
0x624c:	ja	0x61d0


0x624e:	mov	byte ptr [rsi + 0x31], 1
0x6252:	jmp	0x61d0


0x6289:	nop	dword ptr [rax]


0x629b:	nop	dword ptr [rax + rax]


0x631a:	nop	word ptr [rax + rax]


0x6378:	nop	dword ptr [rax + rax]


0x63ee:	nop	


0x6499:	nop	dword ptr [rax]


0x6515:	nop	
0x6516:	nop	word ptr cs:[rax + rax]


0x655c:	nop	dword ptr [rax]


0x673b:	nop	dword ptr [rax + rax]


0x6795:	nop	
0x6796:	nop	word ptr cs:[rax + rax]


0x67f9:	nop	dword ptr [rax]


0x692d:	nop	dword ptr [rax]


0x696c:	nop	dword ptr [rax]


0x6a59:	nop	dword ptr [rax]


0x6b7e:	nop	


0x6baa:	nop	word ptr [rax + rax]


0x6c6f:	nop	


0x6dc2:	nop	dword ptr [rax]
0x6dc6:	nop	word ptr cs:[rax + rax]


0x7055:	xor	eax, eax
0x7057:	jmp	0x7026


0x705e:	mov	rdi, rbx
0x7061:	call	0x10390


0x7026:	mov	rbx, qword ptr [rsp + 0x18]
0x702b:	xor	rbx, qword ptr fs:[0x28]
0x7034:	jne	0x7059


0x7066:	mov	edx, 5
0x706b:	mov	rsi, r12
0x706e:	xor	edi, edi
0x7070:	mov	rbp, rax
0x7073:	call	0x2c70


0x7078:	lea	rsi, [rip + 0xcf09]
0x707f:	mov	rbx, rax
0x7082:	mov	edx, 5
0x7087:	xor	edi, edi
0x7089:	call	0x2c70


0x708e:	mov	r8, rbp
0x7091:	mov	rdx, rax
0x7094:	mov	rcx, rbx
0x7097:	xor	esi, esi
0x7099:	mov	edi, 2
0x709e:	xor	eax, eax
0x70a0:	call	0x2fe0


0x70a5:	nop	
0x70a6:	nop	word ptr cs:[rax + rax]


0x71e7:	nop	word ptr [rax + rax]


0x7271:	nop	dword ptr [rax + rax]
0x7276:	nop	word ptr cs:[rax + rax]


0x771c:	nop	dword ptr [rax]


0x86de:	nop	


0x879d:	nop	dword ptr [rax]


0x89e3:	nop	dword ptr [rax]
0x89e6:	nop	word ptr cs:[rax + rax]


0x8a5f:	nop	


0x8f92:	nop	dword ptr [rax]
0x8f96:	nop	word ptr cs:[rax + rax]


0x8fe1:	nop	dword ptr [rax + rax]
0x8fe6:	nop	word ptr cs:[rax + rax]


0x970a:	nop	word ptr [rax + rax]


0x9ad6:	nop	word ptr cs:[rax + rax]


0xa2ea:	nop	word ptr [rax + rax]


0xa39c:	nop	dword ptr [rax]


0xa8b3:	nop	dword ptr [rax]
0xa8b6:	nop	word ptr cs:[rax + rax]


0xaea2:	nop	word ptr cs:[rax + rax]
0xaeac:	nop	dword ptr [rax]


0xaeba:	nop	word ptr [rax + rax]


0xafd6:	nop	word ptr cs:[rax + rax]


0xb053:	nop	dword ptr [rax]
0xb056:	nop	word ptr cs:[rax + rax]


0xb1ed:	nop	dword ptr [rax]


0xb23d:	nop	dword ptr [rax]


0xb248:	nop	dword ptr [rax + rax]


0xb258:	nop	dword ptr [rax + rax]


0xb304:	nop	word ptr cs:[rax + rax]
0xb30e:	nop	


0xb33b:	nop	dword ptr [rax + rax]


0xb35a:	nop	word ptr [rax + rax]


0xbacf:	nop	


0xbbe2:	nop	dword ptr [rax]
0xbbe6:	nop	word ptr cs:[rax + rax]


0xbec7:	nop	word ptr [rax + rax]


0xbf55:	nop	
0xbf56:	nop	word ptr cs:[rax + rax]


0xc092:	nop	word ptr cs:[rax + rax]
0xc09c:	nop	dword ptr [rax]


0xc0a5:	nop	
0xc0a6:	nop	word ptr cs:[rax + rax]


0xc0d2:	nop	word ptr cs:[rax + rax]
0xc0dc:	nop	dword ptr [rax]


0xc1a3:	nop	dword ptr [rax]
0xc1a6:	nop	word ptr cs:[rax + rax]


0xc6d3:	nop	dword ptr [rax]
0xc6d6:	nop	word ptr cs:[rax + rax]


0xc6f7:	nop	word ptr [rax + rax]


0xc722:	nop	dword ptr [rax]
0xc726:	nop	word ptr cs:[rax + rax]


0xc84e:	nop	


0xc8c7:	nop	word ptr [rax + rax]


0xca15:	nop	
0xca16:	nop	word ptr cs:[rax + rax]


0xca25:	nop	
0xca26:	nop	word ptr cs:[rax + rax]


0xca35:	nop	
0xca36:	nop	word ptr cs:[rax + rax]


0xca89:	nop	dword ptr [rax]


0xcae8:	nop	dword ptr [rax + rax]


0xcc37:	nop	word ptr [rax + rax]


0xcc9b:	nop	dword ptr [rax + rax]


0xcce1:	nop	dword ptr [rax + rax]
0xcce6:	nop	word ptr cs:[rax + rax]


0xcd62:	nop	dword ptr [rax]
0xcd66:	nop	word ptr cs:[rax + rax]


0xcdd5:	nop	
0xcdd6:	nop	word ptr cs:[rax + rax]


0xce4a:	nop	word ptr [rax + rax]


0xce81:	nop	dword ptr [rax + rax]
0xce86:	nop	word ptr cs:[rax + rax]


0xd064:	nop	
0xd066:	nop	word ptr cs:[rax + rax]


0xd1d6:	nop	word ptr cs:[rax + rax]


0xd41e:	nop	


0xd6a4:	nop	
0xd6a6:	nop	word ptr cs:[rax + rax]


0xd709:	nop	dword ptr [rax]


0xd913:	nop	word ptr cs:[rax + rax]
0xd91d:	nop	dword ptr [rax]


0xd923:	nop	dword ptr [rax]
0xd926:	nop	word ptr cs:[rax + rax]


0xd9b6:	nop	word ptr cs:[rax + rax]


0xd9d5:	nop	
0xd9d6:	nop	word ptr cs:[rax + rax]


0xdaf1:	nop	dword ptr [rax + rax]
0xdaf6:	nop	word ptr cs:[rax + rax]


0xdc0b:	nop	dword ptr [rax + rax]


0xdc8c:	nop	dword ptr [rax]


0xdcc2:	nop	word ptr cs:[rax + rax]
0xdccc:	nop	dword ptr [rax]


0xdd12:	nop	word ptr cs:[rax + rax]
0xdd1c:	nop	dword ptr [rax]


0xdedf:	nop	


0xdf03:	nop	word ptr cs:[rax + rax]
0xdf0d:	nop	dword ptr [rax]


0xdf7b:	nop	dword ptr [rax + rax]


0xe091:	nop	dword ptr [rax + rax]
0xe096:	nop	word ptr cs:[rax + rax]


0xe1eb:	nop	dword ptr [rax + rax]


0xe5e1:	nop	word ptr cs:[rax + rax]
0xe5eb:	nop	dword ptr [rax + rax]


0xe67e:	nop	


0xe71f:	nop	


0xe807:	nop	word ptr [rax + rax]


0xe8a3:	mov	byte ptr [rsp + 0xe], 1
0xe8a8:	mov	byte ptr [rsp + 0x7c], 0
0xe8ad:	xor	r12d, r12d
0xe8b0:	mov	qword ptr [rsp + 0x50], 0
0xe8b9:	mov	byte ptr [rsp + 0xf], 1
0xe8be:	mov	byte ptr [rsp + 0xd], 0
0xe8c3:	lea	rax, [rip + 0x6de8]
0xe8ca:	mov	qword ptr [rsp + 0x18], 1
0xe8d3:	xor	r15d, r15d
0xe8d6:	mov	dword ptr [rsp + 8], 2
0xe8de:	mov	qword ptr [rsp + 0x48], rax
0xe8e3:	xor	r11d, r11d
0xe8e6:	mov	rax, rbp
0xe8e9:	mov	r8d, r12d
0xe8ec:	mov	rbp, r11
0xe8ef:	mov	r11, rax
0xe8f2:	nop	word ptr [rax + rax]
0xe8f8:	cmp	r11, rbp
0xe8fb:	setne	r12b
0xe8ff:	cmp	r11, -1
0xe903:	jne	0xe912


0xe905:	mov	rax, qword ptr [rsp + 0x10]
0xe90a:	cmp	byte ptr [rax + rbp], 0
0xe90e:	setne	r12b
0xe912:	test	r12b, r12b
0xe915:	je	0xef70


0xe912:	test	r12b, r12b
0xe915:	je	0xef70


0xef70:	cmp	dword ptr [rsp + 8], 2
0xef75:	movzx	ebx, byte ptr [rsp + 0xf]
0xef7a:	mov	r12d, r8d
0xef7d:	mov	rbp, r11
0xef80:	sete	dl
0xef83:	mov	eax, ebx
0xef85:	test	r15, r15
0xef88:	sete	cl
0xef8b:	and	eax, edx
0xef8d:	and	al, cl
0xef8f:	jne	0xf9f6


0xe91b:	cmp	dword ptr [rsp + 8], 2
0xe920:	mov	rdi, qword ptr [rsp + 0x10]
0xe925:	lea	r9, [rdi + rbp]
0xe929:	setne	al
0xe92c:	and	al, byte ptr [rsp + 0xd]
0xe930:	mov	r10d, eax
0xe933:	je	0xe9e0


0xef95:	mov	eax, ebx
0xef97:	xor	eax, 1
0xef9a:	and	dl, al
0xef9c:	je	0xf90c


0xf9f6:	mov	dword ptr [rsp + 8], 2
0xf9fe:	jmp	0xf399


0xe9e0:	movzx	ebx, byte ptr [r9]
0xe9e4:	cmp	bl, 0x7e
0xe9e7:	ja	0xed08


0xe939:	mov	rax, qword ptr [rsp + 0x18]
0xe93e:	test	rax, rax
0xe941:	je	0xed70


0xf90c:	mov	rbx, qword ptr [rsp + 0x48]
0xf911:	test	rbx, rbx
0xf914:	je	0xf942


0xefa2:	cmp	byte ptr [rsp + 0x7c], 0
0xefa7:	je	0xf90a


0xf399:	cmp	byte ptr [rsp + 0xd], 0
0xf39e:	je	0xf3b0


0xe9ed:	lea	rcx, [rip + 0x7298]
0xe9f4:	movzx	edx, bl
0xe9f7:	movsxd	rax, dword ptr [rcx + rdx*4]
0xe9fb:	add	rax, rcx
0xe9fe:	jmp	rax


0xed08:	cmp	qword ptr [rsp + 0x58], 1
0xed0e:	jne	0xf0b8


0xed70:	movzx	ebx, byte ptr [r9]
0xed74:	cmp	bl, 0x7e
0xed77:	ja	0xed00


0xe947:	cmp	r11, -1
0xe94b:	lea	rbx, [rbp + rax]
0xe950:	jne	0xe980


0xf942:	cmp	r13, r15
0xf945:	jbe	0xf3e9


0xf916:	test	al, al
0xf918:	je	0xf942


0xf90a:	mov	eax, edx
0xf90c:	mov	rbx, qword ptr [rsp + 0x48]
0xf911:	test	rbx, rbx
0xf914:	je	0xf942


0xefad:	cmp	byte ptr [rsp + 0xe], 0
0xefb2:	jne	0xf9ad


0xf3a0:	test	al, al
0xf3a2:	mov	eax, 4
0xf3a7:	cmove	eax, dword ptr [rsp + 8]
0xf3ac:	mov	dword ptr [rsp + 8], eax


0xed14:	mov	qword ptr [rsp + 0x38], r11
0xed19:	mov	byte ptr [rsp + 0x30], r8b
0xed1e:	mov	byte ptr [rsp + 0x28], r10b
0xed23:	call	0x31b0


0xf0b8:	lea	rax, [rsp + 0xa0]
0xf0c0:	cmp	r11, -1
0xf0c4:	mov	qword ptr [rsp + 0xa0], 0
0xf0d0:	mov	qword ptr [rsp + 0x28], rax
0xf0d5:	jne	0xf104


0xed79:	lea	rcx, [rip + 0x7108]
0xed80:	movzx	edx, bl
0xed83:	movsxd	rax, dword ptr [rcx + rdx*4]
0xed87:	add	rax, rcx
0xed8a:	jmp	rax


0xed00:	xor	r10d, r10d
0xed03:	nop	dword ptr [rax + rax]
0xed08:	cmp	qword ptr [rsp + 0x58], 1
0xed0e:	jne	0xf0b8


0xe952:	cmp	rax, 1
0xe956:	jbe	0xe980


0xe980:	cmp	rbx, r11
0xe983:	mov	byte ptr [rsp + 0x28], r10b
0xe988:	ja	0xef40


0xf94b:	mov	byte ptr [r14 + r15], 0
0xf950:	jmp	0xf3e9


0xf91a:	movzx	ecx, byte ptr [rbx]
0xf91d:	mov	rax, rbx
0xf920:	test	cl, cl
0xf922:	je	0xf942


0xefb8:	test	r13, r13
0xefbb:	sete	al
0xefbe:	cmp	qword ptr [rsp + 0x50], 0
0xefc4:	setne	dl
0xefc7:	and	al, dl
0xefc9:	je	0xf9ec


0xf0d7:	mov	rdi, qword ptr [rsp + 0x10]
0xf0dc:	mov	byte ptr [rsp + 0x40], r8b
0xf0e1:	mov	byte ptr [rsp + 0x38], r10b
0xf0e6:	mov	qword ptr [rsp + 0x30], r9
0xf0eb:	call	0x2c90


0xf104:	lea	rax, [rsp + 0x9c]
0xf10c:	xor	ecx, ecx
0xf10e:	mov	byte ptr [rsp + 0x7e], bl
0xf112:	mov	byte ptr [rsp + 0x7d], r8b
0xf117:	mov	rbx, rcx
0xf11a:	mov	qword ptr [rsp + 0x88], r9
0xf122:	mov	qword ptr [rsp + 0x38], rax
0xf127:	mov	byte ptr [rsp + 0x7f], r10b
0xf12c:	mov	qword ptr [rsp + 0x80], r15
0xf134:	mov	qword ptr [rsp + 0x40], r14
0xf139:	mov	qword ptr [rsp + 0x70], r13
0xf13e:	mov	qword ptr [rsp + 0x30], r11
0xf143:	mov	rax, qword ptr [rsp + 0x10]
0xf148:	lea	r14, [rbp + rbx]
0xf14d:	mov	rdx, qword ptr [rsp + 0x30]
0xf152:	mov	rcx, qword ptr [rsp + 0x28]
0xf157:	mov	rdi, qword ptr [rsp + 0x38]
0xf15c:	lea	r13, [rax + r14]
0xf160:	sub	rdx, r14
0xf163:	mov	rsi, r13
0xf166:	call	0x12ee0


0xe958:	mov	byte ptr [rsp + 0x38], r8b
0xe95d:	mov	byte ptr [rsp + 0x30], r10b
0xe962:	mov	qword ptr [rsp + 0x28], r9
0xe967:	call	0x2c90


0xe98e:	mov	rdx, qword ptr [rsp + 0x18]
0xe993:	mov	rsi, qword ptr [rsp + 0x48]
0xe998:	mov	rdi, r9
0xe99b:	mov	qword ptr [rsp + 0x40], r11
0xe9a0:	mov	byte ptr [rsp + 0x38], r8b
0xe9a5:	mov	qword ptr [rsp + 0x30], r9
0xe9aa:	call	0x2df0


0xef40:	xor	r10d, r10d
0xef43:	jmp	0xe9e0


0xf924:	mov	rdx, r15
0xf927:	sub	rax, r15
0xf92a:	cmp	r13, rdx
0xf92d:	jbe	0xf933


0xf9ec:	movzx	eax, byte ptr [rsp + 0x7c]
0xf9f1:	jmp	0xf90c


0xefcf:	mov	r13, qword ptr [rsp + 0x50]
0xefd4:	lea	rbx, [rip + 0x66d7]
0xefdb:	mov	byte ptr [r14], 0x27
0xefdf:	mov	dword ptr [rsp + 8], 2
0xefe7:	mov	r15d, 1
0xefed:	mov	qword ptr [rsp + 0x18], 1
0xeff6:	mov	byte ptr [rsp + 0xf], 0
0xeffb:	mov	qword ptr [rsp + 0x48], rbx
0xf000:	mov	byte ptr [rsp + 0x7c], al
0xf004:	jmp	0xe8e3


0xf933:	add	rdx, 1
0xf937:	movzx	ecx, byte ptr [rax + rdx]
0xf93b:	test	cl, cl
0xf93d:	jne	0xf92a


0xf92f:	mov	byte ptr [r14 + rdx], cl
0xf933:	add	rdx, 1
0xf937:	movzx	ecx, byte ptr [rax + rdx]
0xf93b:	test	cl, cl
0xf93d:	jne	0xf92a


0xe8e3:	xor	r11d, r11d
0xe8e6:	mov	rax, rbp
0xe8e9:	mov	r8d, r12d
0xe8ec:	mov	rbp, r11
0xe8ef:	mov	r11, rax
0xe8f2:	nop	word ptr [rax + rax]
0xe8f8:	cmp	r11, rbp
0xe8fb:	setne	r12b
0xe8ff:	cmp	r11, -1
0xe903:	jne	0xe912


0xf93f:	mov	r15, rdx
0xf942:	cmp	r13, r15
0xf945:	jbe	0xf3e9


0xf92a:	cmp	r13, rdx
0xf92d:	jbe	0xf933


0xe9af:	test	eax, eax
0xe9b1:	mov	r9, qword ptr [rsp + 0x30]
0xe9b6:	movzx	r8d, byte ptr [rsp + 0x38]
0xe9bc:	mov	r11, qword ptr [rsp + 0x40]
0xe9c1:	jne	0xef40


0xe9c7:	cmp	byte ptr [rsp + 0xf], 0
0xe9cc:	movzx	r10d, byte ptr [rsp + 0x28]
0xe9d2:	jne	0xf955


0xf955:	cmp	dword ptr [rsp + 8], 2
0xf95a:	movzx	ebx, byte ptr [rsp + 0xf]
0xf95f:	mov	rbp, r11
0xf962:	sete	al
0xf965:	mov	byte ptr [rsp + 0xd], bl
0xf969:	jmp	0xf399


0xf16b:	test	rax, rax
0xf16e:	mov	r15, rax
0xf171:	je	0xf1c1


0xf1c1:	mov	edx, r12d
0xf1c4:	mov	rdi, rbx
0xf1c7:	movzx	r8d, byte ptr [rsp + 0x7d]
0xf1cd:	xor	edx, 1
0xf1d0:	movzx	ebx, byte ptr [rsp + 0x7e]
0xf1d5:	movzx	r10d, byte ptr [rsp + 0x7f]
0xf1db:	and	dl, byte ptr [rsp + 0xd]
0xf1df:	mov	r15, qword ptr [rsp + 0x80]
0xf1e7:	mov	r14, qword ptr [rsp + 0x40]
0xf1ec:	mov	r13, qword ptr [rsp + 0x70]
0xf1f1:	mov	r11, qword ptr [rsp + 0x30]
0xf1f6:	cmp	rdi, 1
0xf1fa:	jbe	0xf7fb


0xf173:	cmp	rax, -1
0xf177:	je	0xf795


0xf7fb:	mov	eax, edx
0xf7fd:	jmp	0xed57


0xf200:	mov	rcx, rdi
0xf203:	xor	esi, esi
0xf205:	movzx	r9d, byte ptr [rsp + 0xf]
0xf20b:	add	rcx, rbp
0xf20e:	mov	rdi, qword ptr [rsp + 0x10]
0xf213:	jmp	0xf2ce


0xf795:	mov	rdi, rbx
0xf798:	movzx	r8d, byte ptr [rsp + 0x7d]
0xf79e:	movzx	ebx, byte ptr [rsp + 0x7e]
0xf7a3:	movzx	r10d, byte ptr [rsp + 0x7f]
0xf7a9:	mov	r15, qword ptr [rsp + 0x80]
0xf7b1:	xor	r12d, r12d
0xf7b4:	mov	r14, qword ptr [rsp + 0x40]
0xf7b9:	mov	r13, qword ptr [rsp + 0x70]
0xf7be:	mov	r11, qword ptr [rsp + 0x30]
0xf7c3:	movzx	edx, byte ptr [rsp + 0xd]
0xf7c8:	jmp	0xf1f6


0xf17d:	cmp	rax, -2
0xf181:	je	0xf721


0xed57:	test	al, al
0xed59:	jne	0xf6f1


0xf2ce:	test	dl, dl
0xf2d0:	jne	0xf220


0xf1f6:	cmp	rdi, 1
0xf1fa:	jbe	0xf7fb


0xf721:	mov	r11, qword ptr [rsp + 0x30]
0xf726:	mov	rsi, r14
0xf729:	mov	rcx, r13
0xf72c:	mov	rax, rbx
0xf72f:	mov	rdi, rbx
0xf732:	movzx	r8d, byte ptr [rsp + 0x7d]
0xf738:	movzx	ebx, byte ptr [rsp + 0x7e]
0xf73d:	mov	r9, qword ptr [rsp + 0x88]
0xf745:	cmp	rsi, r11
0xf748:	movzx	r10d, byte ptr [rsp + 0x7f]
0xf74e:	mov	r15, qword ptr [rsp + 0x80]
0xf756:	mov	r14, qword ptr [rsp + 0x40]
0xf75b:	mov	r13, qword ptr [rsp + 0x70]
0xf760:	jae	0xf788


0xf187:	cmp	dword ptr [rsp + 8], 2
0xf18c:	sete	al
0xf18f:	and	al, byte ptr [rsp + 0xf]
0xf193:	jne	0xf330


0xed5f:	cmp	dword ptr [rsp + 8], 2
0xed64:	sete	dl
0xed67:	jmp	0xea38


0xf6f1:	movzx	edx, byte ptr [rsp + 0xd]
0xf6f6:	xor	r12d, r12d
0xf6f9:	jmp	0xf200


0xf2d6:	mov	eax, esi
0xf2d8:	xor	eax, 1
0xf2db:	and	eax, r8d
0xf2de:	test	r10b, r10b
0xf2e1:	je	0xf2f1


0xf220:	cmp	dword ptr [rsp + 8], 2
0xf225:	sete	al
0xf228:	test	r9b, r9b
0xf22b:	jne	0xf6e0


0xf762:	cmp	byte ptr [rcx], 0
0xf765:	jne	0xf777


0xf788:	movzx	edx, byte ptr [rsp + 0xd]
0xf78d:	xor	r12d, r12d
0xf790:	jmp	0xf1f6


0xf199:	mov	edi, dword ptr [rsp + 0x9c]
0xf1a0:	call	0x3160


0xf330:	cmp	r15, 1
0xf334:	je	0xf199


0xea38:	cmp	byte ptr [rsp + 0xd], 1
0xea3d:	jne	0xeb52


0xf2f1:	add	rbp, 1
0xf2f5:	cmp	rbp, rcx
0xf2f8:	jae	0xea7c


0xf2e3:	cmp	r13, r15
0xf2e6:	jbe	0xf2ed


0xf231:	mov	esi, r8d
0xf234:	xor	esi, 1
0xf237:	and	al, sil
0xf23a:	je	0xf26b


0xf6e0:	movzx	ebx, byte ptr [rsp + 0xf]
0xf6e5:	mov	rbp, r11
0xf6e8:	mov	byte ptr [rsp + 0xd], bl
0xf6ec:	jmp	0xf399


0xf767:	jmp	0xf788


0xf777:	add	rax, 1
0xf77b:	lea	rdx, [rbp + rax]
0xf780:	cmp	r11, rdx
0xf783:	ja	0xf770


0xf33a:	mov	rdi, qword ptr [rsp + 0x10]
0xf33f:	lea	rcx, [rdi + r15]
0xf343:	lea	rdx, [rdi + r14 + 1]
0xf348:	lea	r8, [rcx + r14]
0xf34c:	jmp	0xf35d


0xea43:	test	dl, dl
0xea45:	jne	0xeb52


0xeb52:	cmp	byte ptr [rsp + 0xf], 0
0xeb57:	jne	0xea4b


0xf2fe:	test	al, al
0xf300:	je	0xf6fe


0xea7c:	test	al, al
0xea7e:	je	0xeaa0


0xf2ed:	add	r15, 1
0xf2f1:	add	rbp, 1
0xf2f5:	cmp	rbp, rcx
0xf2f8:	jae	0xea7c


0xf2e8:	mov	byte ptr [r14 + r15], 0x5c
0xf2ed:	add	r15, 1
0xf2f1:	add	rbp, 1
0xf2f5:	cmp	rbp, rcx
0xf2f8:	jae	0xea7c


0xf26b:	cmp	r13, r15
0xf26e:	jbe	0xf275


0xf23c:	cmp	r13, r15
0xf23f:	jbe	0xf246


0xf785:	mov	rdi, rax
0xf788:	movzx	edx, byte ptr [rsp + 0xd]
0xf78d:	xor	r12d, r12d
0xf790:	jmp	0xf1f6


0xf770:	cmp	byte ptr [r9 + rax], 0
0xf775:	je	0xf785


0xf35d:	movzx	ecx, byte ptr [rdx]
0xf360:	sub	ecx, 0x5b
0xf363:	cmp	cl, 0x21
0xf366:	ja	0xf350


0xea4b:	mov	rsi, qword ptr [rsp + 0x20]
0xea50:	test	rsi, rsi
0xea53:	je	0xea69


0xeb5d:	jmp	0xea69


0xf6fe:	xor	r10d, r10d
0xf701:	jmp	0xf2bd


0xf306:	cmp	r13, r15
0xf309:	jbe	0xf310


0xeaa0:	cmp	r15, r13
0xeaa3:	jae	0xeaa9


0xea80:	cmp	r13, r15
0xea83:	jbe	0xea8a


0xf275:	lea	rax, [r15 + 1]
0xf279:	cmp	r13, rax
0xf27c:	jbe	0xf28b


0xf270:	mov	byte ptr [r14 + r15], 0x5c
0xf275:	lea	rax, [r15 + 1]
0xf279:	cmp	r13, rax
0xf27c:	jbe	0xf28b


0xf246:	lea	rsi, [r15 + 1]
0xf24a:	cmp	r13, rsi
0xf24d:	jbe	0xf255


0xf241:	mov	byte ptr [r14 + r15], 0x27
0xf246:	lea	rsi, [r15 + 1]
0xf24a:	cmp	r13, rsi
0xf24d:	jbe	0xf255


0xf368:	mov	esi, 1
0xf36d:	shl	rsi, cl
0xf370:	mov	rcx, rsi
0xf373:	movabs	rsi, 0x20000002b
0xf37d:	test	rcx, rsi
0xf380:	je	0xf350


0xf350:	add	rdx, 1
0xf354:	cmp	r8, rdx
0xf357:	je	0xf199


0xea69:	test	r10b, r10b
0xea6c:	jne	0xebb3


0xea55:	mov	edx, ebx
0xea57:	shr	dl, 5
0xea5a:	movzx	edx, dl
0xea5d:	mov	edx, dword ptr [rsi + rdx*4]
0xea60:	bt	edx, ebx
0xea63:	jb	0xebb3


0xf2bd:	cmp	r13, r15
0xf2c0:	jbe	0xf2c6


0xf310:	lea	rax, [r15 + 1]
0xf314:	cmp	r13, rax
0xf317:	jbe	0xf31f


0xf30b:	mov	byte ptr [r14 + r15], 0x27
0xf310:	lea	rax, [r15 + 1]
0xf314:	cmp	r13, rax
0xf317:	jbe	0xf31f


0xeaa5:	mov	byte ptr [r14 + r15], bl
0xeaa9:	movzx	edi, byte ptr [rsp + 0xe]
0xeaae:	add	r15, 1
0xeab2:	mov	eax, 0
0xeab7:	test	r12b, r12b
0xeaba:	cmove	edi, eax
0xeabd:	mov	byte ptr [rsp + 0xe], dil
0xeac2:	jmp	0xe8f8


0xeaa9:	movzx	edi, byte ptr [rsp + 0xe]
0xeaae:	add	r15, 1
0xeab2:	mov	eax, 0
0xeab7:	test	r12b, r12b
0xeaba:	cmove	edi, eax
0xeabd:	mov	byte ptr [rsp + 0xe], dil
0xeac2:	jmp	0xe8f8


0xea8a:	lea	rax, [r15 + 1]
0xea8e:	cmp	r13, rax
0xea91:	jbe	0xea99


0xea85:	mov	byte ptr [r14 + r15], 0x27
0xea8a:	lea	rax, [r15 + 1]
0xea8e:	cmp	r13, rax
0xea91:	jbe	0xea99


0xf28b:	lea	rax, [r15 + 2]
0xf28f:	cmp	r13, rax
0xf292:	jbe	0xf2a4


0xf27e:	mov	eax, ebx
0xf280:	shr	al, 6
0xf283:	add	eax, 0x30
0xf286:	mov	byte ptr [r14 + r15 + 1], al
0xf28b:	lea	rax, [r15 + 2]
0xf28f:	cmp	r13, rax
0xf292:	jbe	0xf2a4


0xf255:	lea	rsi, [r15 + 2]
0xf259:	cmp	r13, rsi
0xf25c:	jbe	0xf264


0xf24f:	mov	byte ptr [r14 + r15 + 1], 0x24
0xf255:	lea	rsi, [r15 + 2]
0xf259:	cmp	r13, rsi
0xf25c:	jbe	0xf264


0xf382:	mov	r14, qword ptr [rsp + 0x40]
0xf387:	mov	r13, qword ptr [rsp + 0x70]
0xf38c:	mov	rbp, qword ptr [rsp + 0x30]
0xf391:	mov	dword ptr [rsp + 8], 2
0xf399:	cmp	byte ptr [rsp + 0xd], 0
0xf39e:	je	0xf3b0


0xea72:	xor	eax, 1
0xea75:	add	rbp, 1
0xea79:	and	eax, r8d
0xea7c:	test	al, al
0xea7e:	je	0xeaa0


0xebb3:	cmp	dword ptr [rsp + 8], 2
0xebb8:	sete	dl
0xebbb:	cmp	byte ptr [rsp + 0xf], 0
0xebc0:	mov	eax, edx
0xebc2:	jne	0xf418


0xf2c6:	movzx	ebx, byte ptr [rdi + rbp]
0xf2ca:	add	r15, 1
0xf2ce:	test	dl, dl
0xf2d0:	jne	0xf220


0xf2c2:	mov	byte ptr [r14 + r15], bl
0xf2c6:	movzx	ebx, byte ptr [rdi + rbp]
0xf2ca:	add	r15, 1
0xf2ce:	test	dl, dl
0xf2d0:	jne	0xf220


0xf31f:	add	r15, 2
0xf323:	xor	r10d, r10d
0xf326:	xor	r8d, r8d
0xf329:	jmp	0xf2bd


0xf319:	mov	byte ptr [r14 + r15 + 1], 0x27
0xf31f:	add	r15, 2
0xf323:	xor	r10d, r10d
0xf326:	xor	r8d, r8d
0xf329:	jmp	0xf2bd


0xe8f8:	cmp	r11, rbp
0xe8fb:	setne	r12b
0xe8ff:	cmp	r11, -1
0xe903:	jne	0xe912


0xea99:	add	r15, 2
0xea9d:	xor	r8d, r8d
0xeaa0:	cmp	r15, r13
0xeaa3:	jae	0xeaa9


0xea93:	mov	byte ptr [r14 + r15 + 1], 0x27
0xea99:	add	r15, 2
0xea9d:	xor	r8d, r8d
0xeaa0:	cmp	r15, r13
0xeaa3:	jae	0xeaa9


0xf2a4:	and	ebx, 7
0xf2a7:	add	rbp, 1
0xf2ab:	add	r15, 3
0xf2af:	add	ebx, 0x30
0xf2b2:	cmp	rbp, rcx
0xf2b5:	jae	0xeaa0


0xf294:	mov	eax, ebx
0xf296:	shr	al, 3
0xf299:	and	eax, 7
0xf29c:	add	eax, 0x30
0xf29f:	mov	byte ptr [r14 + r15 + 2], al
0xf2a4:	and	ebx, 7
0xf2a7:	add	rbp, 1
0xf2ab:	add	r15, 3
0xf2af:	add	ebx, 0x30
0xf2b2:	cmp	rbp, rcx
0xf2b5:	jae	0xeaa0


0xf264:	add	r15, 3
0xf268:	mov	r8d, eax
0xf26b:	cmp	r13, r15
0xf26e:	jbe	0xf275


0xf25e:	mov	byte ptr [r14 + r15 + 2], 0x27
0xf264:	add	r15, 3
0xf268:	mov	r8d, eax
0xf26b:	cmp	r13, r15
0xf26e:	jbe	0xf275


0xebc8:	mov	eax, r8d
0xebcb:	xor	eax, 1
0xebce:	and	al, dl
0xebd0:	je	0xec01


0xf418:	mov	rbp, r11
0xf41b:	jmp	0xf399


0xf2bb:	mov	esi, edx
0xf2bd:	cmp	r13, r15
0xf2c0:	jbe	0xf2c6


0xec01:	cmp	r13, r15
0xec04:	jbe	0xec0b


0xebd2:	cmp	r13, r15
0xebd5:	jbe	0xebdc


0xec0b:	add	r15, 1
0xec0f:	add	rbp, 1
0xec13:	jmp	0xeaa0


0xec06:	mov	byte ptr [r14 + r15], 0x5c
0xec0b:	add	r15, 1
0xec0f:	add	rbp, 1
0xec13:	jmp	0xeaa0


0xebdc:	lea	rdx, [r15 + 1]
0xebe0:	cmp	r13, rdx
0xebe3:	jbe	0xebeb


0xebd7:	mov	byte ptr [r14 + r15], 0x27
0xebdc:	lea	rdx, [r15 + 1]
0xebe0:	cmp	r13, rdx
0xebe3:	jbe	0xebeb


0xebeb:	lea	rdx, [r15 + 2]
0xebef:	cmp	r13, rdx
0xebf2:	jbe	0xebfa


0xebe5:	mov	byte ptr [r14 + r15 + 1], 0x24
0xebeb:	lea	rdx, [r15 + 2]
0xebef:	cmp	r13, rdx
0xebf2:	jbe	0xebfa


0xebfa:	add	r15, 3
0xebfe:	mov	r8d, eax
0xec01:	cmp	r13, r15
0xec04:	jbe	0xec0b


0xebf4:	mov	byte ptr [r14 + r15 + 2], 0x27
0xebfa:	add	r15, 3
0xebfe:	mov	r8d, eax
0xec01:	cmp	r13, r15
0xec04:	jbe	0xec0b


0xf1a5:	mov	rdi, qword ptr [rsp + 0x28]
0xf1aa:	test	eax, eax
0xf1ac:	mov	eax, 0
0xf1b1:	cmove	r12d, eax
0xf1b5:	add	rbx, r15
0xf1b8:	call	0x3140


0xf1bd:	test	eax, eax
0xf1bf:	je	0xf143


0xf143:	mov	rax, qword ptr [rsp + 0x10]
0xf148:	lea	r14, [rbp + rbx]
0xf14d:	mov	rdx, qword ptr [rsp + 0x30]
0xf152:	mov	rcx, qword ptr [rsp + 0x28]
0xf157:	mov	rdi, qword ptr [rsp + 0x38]
0xf15c:	lea	r13, [rax + r14]
0xf160:	sub	rdx, r14
0xf163:	mov	rsi, r13
0xf166:	call	0x12ee0


0xe96c:	movzx	r8d, byte ptr [rsp + 0x38]
0xe972:	movzx	r10d, byte ptr [rsp + 0x30]
0xe978:	mov	r11, rax
0xe97b:	mov	r9, qword ptr [rsp + 0x28]
0xe980:	cmp	rbx, r11
0xe983:	mov	byte ptr [rsp + 0x28], r10b
0xe988:	ja	0xef40


0xf0f0:	movzx	r8d, byte ptr [rsp + 0x40]
0xf0f6:	movzx	r10d, byte ptr [rsp + 0x38]
0xf0fc:	mov	r11, rax
0xf0ff:	mov	r9, qword ptr [rsp + 0x30]
0xf104:	lea	rax, [rsp + 0x9c]
0xf10c:	xor	ecx, ecx
0xf10e:	mov	byte ptr [rsp + 0x7e], bl
0xf112:	mov	byte ptr [rsp + 0x7d], r8b
0xf117:	mov	rbx, rcx
0xf11a:	mov	qword ptr [rsp + 0x88], r9
0xf122:	mov	qword ptr [rsp + 0x38], rax
0xf127:	mov	byte ptr [rsp + 0x7f], r10b
0xf12c:	mov	qword ptr [rsp + 0x80], r15
0xf134:	mov	qword ptr [rsp + 0x40], r14
0xf139:	mov	qword ptr [rsp + 0x70], r13
0xf13e:	mov	qword ptr [rsp + 0x30], r11
0xf143:	mov	rax, qword ptr [rsp + 0x10]
0xf148:	lea	r14, [rbp + rbx]
0xf14d:	mov	rdx, qword ptr [rsp + 0x30]
0xf152:	mov	rcx, qword ptr [rsp + 0x28]
0xf157:	mov	rdi, qword ptr [rsp + 0x38]
0xf15c:	lea	r13, [rax + r14]
0xf160:	sub	rdx, r14
0xf163:	mov	rsi, r13
0xf166:	call	0x12ee0


0xed28:	mov	rcx, qword ptr [rax]
0xed2b:	movzx	edx, bl
0xed2e:	movzx	r10d, byte ptr [rsp + 0x28]
0xed34:	movzx	r8d, byte ptr [rsp + 0x30]
0xed3a:	mov	r11, qword ptr [rsp + 0x38]
0xed3f:	mov	edi, 1
0xed44:	movzx	eax, word ptr [rcx + rdx*2]
0xed48:	and	ax, 0x4000
0xed4c:	setne	r12b
0xed50:	sete	al
0xed53:	and	al, byte ptr [rsp + 0xd]
0xed57:	test	al, al
0xed59:	jne	0xf6f1


0xea00:	xor	r10d, r10d
0xea03:	cmp	r11, 1
0xea07:	setne	al
0xea0a:	cmp	r11, -1
0xea0e:	jne	0xea1c


0xea10:	mov	rax, qword ptr [rsp + 0x10]
0xea15:	cmp	byte ptr [rax + 1], 0
0xea19:	setne	al
0xea1c:	cmp	dword ptr [rsp + 8], 2
0xea21:	sete	dl
0xea24:	test	al, al
0xea26:	je	0xec78


0xea1c:	cmp	dword ptr [rsp + 8], 2
0xea21:	sete	dl
0xea24:	test	al, al
0xea26:	je	0xec78


0xec78:	test	rbp, rbp
0xec7b:	jne	0xea2c


0xea2c:	xor	r12d, r12d
0xea2f:	xor	eax, eax
0xea31:	nop	dword ptr [rax]
0xea38:	cmp	byte ptr [rsp + 0xd], 1
0xea3d:	jne	0xeb52


0xec81:	movzx	eax, byte ptr [rsp + 0xf]
0xec86:	and	al, dl
0xec88:	je	0xea38


0xec8e:	mov	rbp, r11
0xec91:	mov	dword ptr [rsp + 8], 2
0xec99:	jmp	0xf399


0xf098:	cmp	byte ptr [rsp + 0xf], 0
0xf09d:	jne	0xf8c0


0xeae0:	cmp	eax, 5
0xeae3:	je	0xf058


0xf0a3:	xor	r12d, r12d
0xf0a6:	xor	eax, eax
0xf0a8:	mov	ebx, 0x3f
0xf0ad:	jmp	0xea69


0xf8c0:	mov	rbp, r11
0xf8c3:	movzx	eax, byte ptr [rsp + 0xf]
0xf8c8:	jmp	0xf399


0xf058:	test	byte ptr [rsp + 0x78], 4
0xf05d:	je	0xf080


0xeae9:	cmp	eax, 2
0xeaec:	mov	ebx, 0x3f
0xeaf1:	sete	dl
0xeaf4:	xor	r12d, r12d
0xeaf7:	xor	eax, eax
0xeaf9:	jmp	0xea38


0xf080:	xor	edx, edx
0xf082:	xor	r12d, r12d
0xf085:	xor	eax, eax
0xf087:	mov	ebx, 0x3f
0xf08c:	jmp	0xea38


0xf05f:	lea	rcx, [rbp + 2]
0xf063:	cmp	rcx, r11
0xf066:	jae	0xf080


0xf068:	mov	rax, qword ptr [rsp + 0x10]
0xf06d:	cmp	byte ptr [rax + rbp + 1], 0x3f
0xf072:	je	0xf802


0xf802:	movzx	ebx, byte ptr [rax + rcx]
0xf806:	cmp	bl, 0x3e
0xf809:	ja	0xf080


0xf80f:	movabs	rax, 0x7000a38200000000
0xf819:	bt	rax, rbx
0xf81d:	jae	0xf080


0xf823:	cmp	byte ptr [rsp + 0xf], 0
0xf828:	jne	0xfa12


0xf82e:	cmp	r13, r15
0xf831:	jbe	0xf838


0xfa12:	mov	rbp, r11
0xfa15:	jmp	0xf3b0


0xf838:	lea	rax, [r15 + 1]
0xf83c:	cmp	r13, rax
0xf83f:	jbe	0xf847


0xf833:	mov	byte ptr [r14 + r15], 0x3f
0xf838:	lea	rax, [r15 + 1]
0xf83c:	cmp	r13, rax
0xf83f:	jbe	0xf847


0xf847:	lea	rax, [r15 + 2]
0xf84b:	cmp	r13, rax
0xf84e:	jbe	0xf856


0xf841:	mov	byte ptr [r14 + r15 + 1], 0x22
0xf847:	lea	rax, [r15 + 2]
0xf84b:	cmp	r13, rax
0xf84e:	jbe	0xf856


0xf856:	lea	rax, [r15 + 3]
0xf85a:	cmp	r13, rax
0xf85d:	jbe	0xf865


0xf850:	mov	byte ptr [r14 + r15 + 2], 0x22
0xf856:	lea	rax, [r15 + 3]
0xf85a:	cmp	r13, rax
0xf85d:	jbe	0xf865


0xf865:	add	r15, 4
0xf869:	xor	edx, edx
0xf86b:	xor	r12d, r12d
0xf86e:	xor	eax, eax
0xf870:	mov	rbp, rcx
0xf873:	jmp	0xea38


0xf85f:	mov	byte ptr [r14 + r15 + 3], 0x3f
0xf865:	add	r15, 4
0xf869:	xor	edx, edx
0xf86b:	xor	r12d, r12d
0xf86e:	xor	eax, eax
0xf870:	mov	rbp, rcx
0xf873:	jmp	0xea38


0xf010:	cmp	byte ptr [rsp + 0xf], 0
0xf015:	jne	0xf8c0


0xeb0e:	mov	byte ptr [rsp + 0x7c], r12b
0xeb13:	xor	edx, edx
0xeb15:	xor	eax, eax
0xeb17:	mov	ebx, 0x27
0xeb1c:	jmp	0xea38


0xf01b:	test	r13, r13
0xf01e:	je	0xf420


0xf420:	cmp	r13, r15
0xf423:	jbe	0xf42a


0xf024:	xor	edx, edx
0xf026:	cmp	qword ptr [rsp + 0x50], 0
0xf02c:	jne	0xf420


0xf42a:	lea	rax, [r15 + 1]
0xf42e:	cmp	r13, rax
0xf431:	jbe	0xf439


0xf425:	mov	byte ptr [r14 + r15], 0x27
0xf42a:	lea	rax, [r15 + 1]
0xf42e:	cmp	r13, rax
0xf431:	jbe	0xf439


0xf032:	mov	qword ptr [rsp + 0x50], r13
0xf037:	add	r15, 3
0xf03b:	xor	eax, eax
0xf03d:	mov	byte ptr [rsp + 0x7c], r12b
0xf042:	xor	r8d, r8d
0xf045:	mov	r13, rdx
0xf048:	mov	ebx, 0x27
0xf04d:	jmp	0xea69


0xf439:	lea	rax, [r15 + 2]
0xf43d:	cmp	r13, rax
0xf440:	jbe	0xfa32


0xf433:	mov	byte ptr [r14 + r15 + 1], 0x5c
0xf439:	lea	rax, [r15 + 2]
0xf43d:	cmp	r13, rax
0xf440:	jbe	0xfa32


0xfa32:	mov	rdx, r13
0xfa35:	mov	r13, qword ptr [rsp + 0x50]
0xfa3a:	jmp	0xf032


0xf446:	mov	rdx, r13
0xf449:	mov	byte ptr [r14 + r15 + 2], 0x27
0xf44f:	mov	r13, qword ptr [rsp + 0x50]
0xf454:	jmp	0xf032


0xeb44:	cmp	byte ptr [rsp + 0xd], 0
0xeb49:	jne	0xebb0


0xeb4b:	mov	ebx, edx
0xeb4d:	xor	r12d, r12d
0xeb50:	xor	eax, eax
0xeb52:	cmp	byte ptr [rsp + 0xf], 0
0xeb57:	jne	0xea4b


0xebb0:	xor	r12d, r12d
0xebb3:	cmp	dword ptr [rsp + 8], 2
0xebb8:	sete	dl
0xebbb:	cmp	byte ptr [rsp + 0xf], 0
0xebc0:	mov	eax, edx
0xebc2:	jne	0xf418


0xef50:	cmp	byte ptr [rsp + 0xf], 0
0xef55:	jne	0xf8c0


0xeb83:	cmp	byte ptr [rsp + 0xd], 0
0xeb88:	je	0xeda0


0xef5b:	add	rbp, 1
0xef5f:	mov	eax, r8d
0xef62:	xor	r12d, r12d
0xef65:	mov	ebx, 0x5c
0xef6a:	jmp	0xea7c


0xeda0:	mov	edx, 0x5c
0xeda5:	mov	ebx, 0x5c
0xedaa:	jmp	0xeb44


0xeb8e:	cmp	byte ptr [rsp + 0xf], 0
0xeb93:	je	0xeda0


0xeb99:	cmp	qword ptr [rsp + 0x18], 0
0xeb9f:	jne	0xef5b


0xeba5:	mov	ebx, 0x5c
0xebaa:	nop	word ptr [rax + rax]
0xebb0:	xor	r12d, r12d
0xebb3:	cmp	dword ptr [rsp + 8], 2
0xebb8:	sete	dl
0xebbb:	cmp	byte ptr [rsp + 0xf], 0
0xebc0:	mov	eax, edx
0xebc2:	jne	0xf418


0xec2b:	xor	edx, edx
0xec2d:	test	byte ptr [rsp + 0x78], 1
0xec32:	je	0xeb4b


0xedf3:	cmp	dword ptr [rsp + 8], 2
0xedf8:	sete	dl
0xedfb:	cmp	byte ptr [rsp + 0xf], 0
0xee00:	jne	0xf99a


0xec38:	add	rbp, 1
0xec3c:	jmp	0xe8f8


0xee06:	mov	eax, r8d
0xee09:	mov	rcx, r15
0xee0c:	xor	eax, 1
0xee0f:	and	al, dl
0xee11:	je	0xee40


0xf99a:	movzx	ebx, byte ptr [rsp + 0xf]
0xf99f:	mov	rbp, r11
0xf9a2:	mov	eax, edx
0xf9a4:	mov	byte ptr [rsp + 0xd], bl
0xf9a8:	jmp	0xf399


0xee40:	cmp	r13, rcx
0xee43:	jbe	0xee4a


0xee13:	cmp	r13, r15
0xee16:	jbe	0xee1d


0xee4a:	cmp	dword ptr [rsp + 8], 2
0xee4f:	lea	r15, [rcx + 1]
0xee53:	je	0xf459


0xee45:	mov	byte ptr [r14 + rcx], 0x5c
0xee4a:	cmp	dword ptr [rsp + 8], 2
0xee4f:	lea	r15, [rcx + 1]
0xee53:	je	0xf459


0xee1d:	lea	rcx, [r15 + 1]
0xee21:	cmp	r13, rcx
0xee24:	jbe	0xee2c


0xee18:	mov	byte ptr [r14 + r15], 0x27
0xee1d:	lea	rcx, [r15 + 1]
0xee21:	cmp	r13, rcx
0xee24:	jbe	0xee2c


0xf459:	mov	eax, r12d
0xf45c:	mov	ebx, 0x30
0xf461:	xor	r12d, r12d
0xf464:	jmp	0xea69


0xee59:	lea	rax, [rbp + 1]
0xee5d:	cmp	rax, r11
0xee60:	jae	0xee7b


0xee2c:	lea	rcx, [r15 + 2]
0xee30:	cmp	r13, rcx
0xee33:	ja	0xf469


0xee26:	mov	byte ptr [r14 + r15 + 1], 0x24
0xee2c:	lea	rcx, [r15 + 2]
0xee30:	cmp	r13, rcx
0xee33:	ja	0xf469


0xee62:	mov	rax, qword ptr [rsp + 0x10]
0xee67:	movzx	eax, byte ptr [rax + rbp + 1]
0xee6c:	mov	byte ptr [rsp + 0x28], al
0xee70:	sub	eax, 0x30
0xee73:	cmp	al, 9
0xee75:	jbe	0xf6a9


0xee7b:	mov	eax, r12d
0xee7e:	mov	ebx, 0x30
0xee83:	xor	r12d, r12d
0xee86:	jmp	0xea38


0xee39:	lea	rcx, [r15 + 3]
0xee3d:	mov	r8d, eax
0xee40:	cmp	r13, rcx
0xee43:	jbe	0xee4a


0xf469:	mov	byte ptr [r14 + r15 + 2], 0x27
0xf46f:	jmp	0xee39


0xf6a9:	cmp	r13, r15
0xf6ac:	jbe	0xf6b3


0xf6b3:	lea	rax, [rcx + 2]
0xf6b7:	cmp	r13, rax
0xf6ba:	jbe	0xf6c2


0xf6ae:	mov	byte ptr [r14 + r15], 0x30
0xf6b3:	lea	rax, [rcx + 2]
0xf6b7:	cmp	r13, rax
0xf6ba:	jbe	0xf6c2


0xf6c2:	mov	eax, r12d
0xf6c5:	lea	r15, [rcx + 3]
0xf6c9:	xor	r12d, r12d
0xf6cc:	mov	ebx, 0x30
0xf6d1:	jmp	0xea38


0xf6bc:	mov	byte ptr [r14 + rcx + 2], 0x30
0xf6c2:	mov	eax, r12d
0xf6c5:	lea	r15, [rcx + 3]
0xf6c9:	xor	r12d, r12d
0xf6cc:	mov	ebx, 0x30
0xf6d1:	jmp	0xea38


0xeb32:	cmp	dword ptr [rsp + 8], 2
0xeb37:	sete	al
0xeb3a:	and	al, byte ptr [rsp + 0xf]
0xeb3e:	jne	0xec8e


0xeef0:	mov	edx, 0xd
0xeef5:	xor	r10d, r10d
0xeef8:	mov	ebx, 0x72
0xeefd:	jmp	0xeb32


0xf474:	test	ebx, ebx
0xf476:	jne	0xe8a3


0xf47c:	mov	byte ptr [rsp + 0xd], 1
0xf481:	test	r13, r13
0xf484:	jne	0xfa1a


0xf48a:	lea	rax, [rip + 0x6221]
0xf491:	mov	qword ptr [rsp + 0x50], 0
0xf49a:	mov	byte ptr [rsp + 0xe], 1
0xf49f:	mov	byte ptr [rsp + 0x7c], 0
0xf4a4:	xor	r12d, r12d
0xf4a7:	mov	byte ptr [rsp + 0xf], 0
0xf4ac:	mov	qword ptr [rsp + 0x18], 1
0xf4b5:	mov	qword ptr [rsp + 0x48], rax
0xf4ba:	mov	r15d, 1
0xf4c0:	mov	dword ptr [rsp + 8], 2
0xf4c8:	jmp	0xe8e3


0xfa1a:	mov	byte ptr [rsp + 0xe], 1
0xfa1f:	xor	eax, eax
0xfa21:	xor	r12d, r12d
0xfa24:	mov	qword ptr [rsp + 0x50], 0
0xfa2d:	jmp	0xefd4


0xefd4:	lea	rbx, [rip + 0x66d7]
0xefdb:	mov	byte ptr [r14], 0x27
0xefdf:	mov	dword ptr [rsp + 8], 2
0xefe7:	mov	r15d, 1
0xefed:	mov	qword ptr [rsp + 0x18], 1
0xeff6:	mov	byte ptr [rsp + 0xf], 0
0xeffb:	mov	qword ptr [rsp + 0x48], rbx
0xf000:	mov	byte ptr [rsp + 0x7c], al
0xf004:	jmp	0xe8e3


0xf4d8:	test	r13, r13
0xf4db:	je	0xf706


0xf8cd:	lea	rax, [rip + 0x632f]
0xf8d4:	mov	byte ptr [rsp + 0xe], 1
0xf8d9:	mov	byte ptr [rsp + 0x7c], 0
0xf8de:	xor	r12d, r12d
0xf8e1:	mov	qword ptr [rsp + 0x50], 0
0xf8ea:	mov	byte ptr [rsp + 0xf], 1
0xf8ef:	mov	byte ptr [rsp + 0xd], 1
0xf8f4:	mov	qword ptr [rsp + 0x18], 1
0xf8fd:	xor	r15d, r15d
0xf900:	mov	qword ptr [rsp + 0x48], rax
0xf905:	jmp	0xe8e3


0xf706:	mov	qword ptr [rsp + 0x50], 0
0xf70f:	mov	byte ptr [rsp + 0xe], 1
0xf714:	xor	r12d, r12d
0xf717:	mov	byte ptr [rsp + 0x7c], 0
0xf71c:	jmp	0xf4fb


0xf4e1:	mov	byte ptr [r14], 0x22
0xf4e5:	mov	byte ptr [rsp + 0xe], 1
0xf4ea:	xor	r12d, r12d
0xf4ed:	mov	byte ptr [rsp + 0x7c], 0
0xf4f2:	mov	qword ptr [rsp + 0x50], 0
0xf4fb:	lea	rax, [rip + 0x6701]
0xf502:	mov	byte ptr [rsp + 0xf], 0
0xf507:	mov	byte ptr [rsp + 0xd], 1
0xf50c:	mov	qword ptr [rsp + 0x18], 1
0xf515:	mov	r15d, 1
0xf51b:	mov	qword ptr [rsp + 0x48], rax
0xf520:	jmp	0xe8e3


0xf4fb:	lea	rax, [rip + 0x6701]
0xf502:	mov	byte ptr [rsp + 0xf], 0
0xf507:	mov	byte ptr [rsp + 0xd], 1
0xf50c:	mov	qword ptr [rsp + 0x18], 1
0xf515:	mov	r15d, 1
0xf51b:	mov	qword ptr [rsp + 0x48], rax
0xf520:	jmp	0xe8e3


0xf525:	lea	rax, [rip + 0x66d7]
0xf52c:	mov	byte ptr [rsp + 0xe], 1
0xf531:	mov	byte ptr [rsp + 0x7c], 0
0xf536:	xor	r12d, r12d
0xf539:	mov	qword ptr [rsp + 0x50], 0
0xf542:	mov	byte ptr [rsp + 0xf], 1
0xf547:	mov	byte ptr [rsp + 0xd], 1
0xf54c:	mov	qword ptr [rsp + 0x18], 1
0xf555:	xor	r15d, r15d
0xf558:	mov	qword ptr [rsp + 0x48], rax
0xf55d:	mov	dword ptr [rsp + 8], 5
0xf565:	jmp	0xe8e3


0xf56a:	mov	byte ptr [rsp + 0xe], 1
0xf56f:	mov	byte ptr [rsp + 0x7c], 0
0xf574:	xor	r12d, r12d
0xf577:	mov	qword ptr [rsp + 0x50], 0
0xf580:	mov	byte ptr [rsp + 0xf], 0
0xf585:	xor	r15d, r15d
0xf588:	mov	byte ptr [rsp + 0xd], 1
0xf58d:	mov	qword ptr [rsp + 0x18], 0
0xf596:	mov	qword ptr [rsp + 0x48], 0
0xf59f:	jmp	0xe8e3


0xf5a4:	cmp	dword ptr [rsp + 8], 0xa
0xf5a9:	je	0xf601


0xf601:	xor	r15d, r15d
0xf604:	test	ebx, ebx
0xf606:	je	0xf7cd


0xf5ab:	lea	rsi, [rip + 0x6653]
0xf5b2:	xor	edi, edi
0xf5b4:	mov	edx, 5
0xf5b9:	call	0x2c70


0xf7cd:	mov	rdx, qword ptr [rsp + 0x68]
0xf7d2:	movzx	eax, byte ptr [rdx]
0xf7d5:	test	al, al
0xf7d7:	je	0xf60c


0xf60c:	test	ebx, ebx
0xf60e:	mov	rbx, qword ptr [rsp + 0x60]
0xf613:	setne	byte ptr [rsp + 0xf]
0xf618:	xor	r12d, r12d
0xf61b:	mov	rdi, rbx
0xf61e:	call	0x2c90


0xf7e9:	add	r15, 1
0xf7ed:	movzx	eax, byte ptr [rdx + r15]
0xf7f2:	test	al, al
0xf7f4:	jne	0xf7e0


0xf7e5:	mov	byte ptr [r14 + r15], al
0xf7e9:	add	r15, 1
0xf7ed:	movzx	eax, byte ptr [rdx + r15]
0xf7f2:	test	al, al
0xf7f4:	jne	0xf7e0


0xf7f6:	jmp	0xf60c


0xf7e0:	cmp	r13, r15
0xf7e3:	jbe	0xf7e9


0xf623:	mov	qword ptr [rsp + 0x48], rbx
0xf628:	mov	qword ptr [rsp + 0x18], rax
0xf62d:	mov	byte ptr [rsp + 0xe], 1
0xf632:	mov	byte ptr [rsp + 0x7c], 0
0xf637:	mov	qword ptr [rsp + 0x50], 0
0xf640:	mov	byte ptr [rsp + 0xd], 1
0xf645:	jmp	0xe8e3


0xf5be:	mov	rcx, rax
0xf5c1:	mov	qword ptr [rsp + 0x68], rax
0xf5c6:	lea	rax, [rip + 0x6638]
0xf5cd:	cmp	rcx, rax
0xf5d0:	je	0xf96e


0xf96e:	mov	esi, dword ptr [rsp + 8]
0xf972:	mov	rdi, rcx
0xf975:	call	0xe720


0xf5d6:	lea	rsi, [rip + 0x60d5]
0xf5dd:	xor	edi, edi
0xf5df:	mov	edx, 5
0xf5e4:	call	0x2c70


0xf5e9:	mov	rcx, rax
0xf5ec:	mov	qword ptr [rsp + 0x60], rax
0xf5f1:	lea	rax, [rip + 0x60ba]
0xf5f8:	cmp	rcx, rax
0xf5fb:	je	0xf984


0xf984:	mov	esi, dword ptr [rsp + 8]
0xf988:	mov	rdi, rcx
0xf98b:	call	0xe720


0xf990:	mov	qword ptr [rsp + 0x60], rax
0xf995:	jmp	0xf601


0xf97a:	mov	qword ptr [rsp + 0x68], rax
0xf97f:	jmp	0xf5d6


0xf64a:	mov	byte ptr [rsp + 0xe], 1
0xf64f:	mov	byte ptr [rsp + 0x7c], 0
0xf654:	xor	r12d, r12d
0xf657:	mov	qword ptr [rsp + 0x50], 0
0xf660:	mov	byte ptr [rsp + 0xf], 0
0xf665:	xor	r15d, r15d
0xf668:	mov	byte ptr [rsp + 0xd], 0
0xf66d:	mov	qword ptr [rsp + 0x18], 0
0xf676:	mov	qword ptr [rsp + 0x48], 0
0xf67f:	jmp	0xe8e3


0xf684:	mov	byte ptr [rsp + 0xe], 1
0xf689:	mov	byte ptr [rsp + 0x7c], 0
0xf68e:	xor	r12d, r12d
0xf691:	mov	qword ptr [rsp + 0x50], 0
0xf69a:	mov	byte ptr [rsp + 0xf], 1
0xf69f:	mov	byte ptr [rsp + 0xd], 1
0xf6a4:	jmp	0xe8c3


0xe8c3:	lea	rax, [rip + 0x6de8]
0xe8ca:	mov	qword ptr [rsp + 0x18], 1
0xe8d3:	xor	r15d, r15d
0xe8d6:	mov	dword ptr [rsp + 8], 2
0xe8de:	mov	qword ptr [rsp + 0x48], rax
0xe8e3:	xor	r11d, r11d
0xe8e6:	mov	rax, rbp
0xe8e9:	mov	r8d, r12d
0xe8ec:	mov	rbp, r11
0xe8ef:	mov	r11, rax
0xe8f2:	nop	word ptr [rax + rax]
0xe8f8:	cmp	r11, rbp
0xe8fb:	setne	r12b
0xe8ff:	cmp	r11, -1
0xe903:	jne	0xe912


0xf878:	test	ebx, ebx
0xf87a:	je	0xfa08


0xfa08:	mov	byte ptr [rsp + 0xd], 0
0xfa0d:	jmp	0xf481


0xf880:	lea	rax, [rip + 0x5e2b]
0xf887:	mov	byte ptr [rsp + 0xe], 1
0xf88c:	mov	byte ptr [rsp + 0x7c], 0
0xf891:	xor	r12d, r12d
0xf894:	mov	qword ptr [rsp + 0x50], 0
0xf89d:	mov	byte ptr [rsp + 0xf], 1
0xf8a2:	mov	byte ptr [rsp + 0xd], 0
0xf8a7:	mov	qword ptr [rsp + 0x18], 1
0xf8b0:	xor	r15d, r15d
0xf8b3:	mov	qword ptr [rsp + 0x48], rax
0xf8b8:	jmp	0xe8e3


0xf481:	test	r13, r13
0xf484:	jne	0xfa1a


0xfa44:	nop	
0xfa46:	nop	word ptr cs:[rax + rax]


0xfbfb:	nop	dword ptr [rax + rax]


0xfc36:	nop	word ptr cs:[rax + rax]


0xfc51:	nop	dword ptr [rax + rax]
0xfc56:	nop	word ptr cs:[rax + rax]


0xfc71:	nop	dword ptr [rax + rax]
0xfc76:	nop	word ptr cs:[rax + rax]


0xfcb5:	nop	
0xfcb6:	nop	word ptr cs:[rax + rax]


0xfcd5:	nop	
0xfcd6:	nop	word ptr cs:[rax + rax]


0xfd84:	nop	
0xfd86:	nop	word ptr cs:[rax + rax]


0xfe73:	nop	dword ptr [rax]
0xfe76:	nop	word ptr cs:[rax + rax]


0xfe8a:	nop	word ptr [rax + rax]


0xff23:	nop	dword ptr [rax]
0xff26:	nop	word ptr cs:[rax + rax]


0xff43:	nop	dword ptr [rax]
0xff46:	nop	word ptr cs:[rax + rax]


0xff5c:	nop	dword ptr [rax]


0xff78:	nop	dword ptr [rax + rax]


0xff94:	nop	
0xff96:	nop	word ptr cs:[rax + rax]


0x1002e:	nop	


0x100ba:	nop	word ptr [rax + rax]


0x100cc:	nop	dword ptr [rax]


0x100df:	nop	


0x10178:	nop	dword ptr [rax + rax]


0x101a1:	nop	dword ptr [rax + rax]
0x101a6:	nop	word ptr cs:[rax + rax]


0x101ba:	nop	word ptr [rax + rax]


0x1024e:	nop	


0x102e1:	nop	dword ptr [rax + rax]
0x102e6:	nop	word ptr cs:[rax + rax]


0x102fc:	nop	dword ptr [rax]


0x10317:	nop	word ptr [rax + rax]


0x10333:	nop	dword ptr [rax]
0x10336:	nop	word ptr cs:[rax + rax]


0x1034c:	nop	dword ptr [rax]


0x10364:	nop	
0x10366:	nop	word ptr cs:[rax + rax]


0x10383:	nop	dword ptr [rax]
0x10386:	nop	word ptr cs:[rax + rax]


0x103a8:	nop	dword ptr [rax + rax]


0x1040d:	nop	dword ptr [rax]


0x10739:	nop	dword ptr [rax]


0x10745:	nop	
0x10746:	nop	word ptr cs:[rax + rax]


0x10755:	nop	
0x10756:	nop	word ptr cs:[rax + rax]


0x108f6:	nop	word ptr cs:[rax + rax]


0x10949:	nop	dword ptr [rax]


0x10bde:	nop	


0x10f09:	nop	dword ptr [rax]


0x10f7c:	nop	dword ptr [rax]


0x10fa9:	nop	dword ptr [rax]


0x111b7:	nop	word ptr [rax + rax]


0x111d4:	nop	
0x111d6:	nop	word ptr cs:[rax + rax]


0x111f2:	nop	word ptr cs:[rax + rax]
0x111fc:	nop	dword ptr [rax]


0x1177b:	nop	dword ptr [rax + rax]


0x117bf:	nop	


0x11bd7:	nop	word ptr [rax + rax]


0x11c78:	nop	dword ptr [rax + rax]


0x11d55:	nop	
0x11d56:	nop	word ptr cs:[rax + rax]


0x11dfa:	nop	word ptr [rax + rax]


0x11e24:	nop	
0x11e26:	nop	word ptr cs:[rax + rax]


0x11e32:	nop	dword ptr [rax]
0x11e36:	nop	word ptr cs:[rax + rax]


0x11e76:	nop	word ptr cs:[rax + rax]


0x11ea4:	nop	
0x11ea6:	nop	word ptr cs:[rax + rax]


0x11f32:	nop	dword ptr [rax]
0x11f36:	nop	word ptr cs:[rax + rax]


0x11f8a:	nop	word ptr [rax + rax]


0x11fa7:	nop	word ptr [rax + rax]


0x11fde:	nop	


0x12008:	nop	dword ptr [rax + rax]


0x12023:	nop	word ptr cs:[rax + rax]
0x1202d:	nop	dword ptr [rax]


0x12065:	nop	word ptr cs:[rax + rax]
0x1206f:	nop	


0x1212a:	nop	word ptr [rax + rax]


0x12174:	nop	
0x12176:	nop	word ptr cs:[rax + rax]


0x121c6:	nop	word ptr cs:[rax + rax]


0x1224c:	nop	dword ptr [rax]


0x12428:	mov	rax, rbx
0x1242b:	mul	rsi
0x1242e:	jo	0x12621


0x12621:	or	rax, 0xffffffffffffffff
0x12625:	mov	r8d, 1
0x1262b:	jmp	0x12437


0x12434:	xor	r8d, r8d
0x12437:	mul	rsi
0x1243a:	jo	0x12612


0x12437:	mul	rsi
0x1243a:	jo	0x12612


0x12612:	mov	r8d, 1
0x12618:	or	rbx, 0xffffffffffffffff
0x1261c:	jmp	0x12443


0x12440:	mov	rbx, rax
0x12443:	or	ebp, r8d
0x12446:	nop	word ptr cs:[rax + rax]
0x12450:	movsxd	rdi, edi
0x12453:	mov	eax, ebp
0x12455:	add	rcx, rdi
0x12458:	or	eax, 2
0x1245b:	mov	qword ptr [r15], rcx
0x1245e:	cmp	byte ptr [rcx], 0
0x12461:	mov	qword ptr [r14], rbx
0x12464:	cmovne	ebp, eax
0x12467:	jmp	0x1232d


0x12443:	or	ebp, r8d
0x12446:	nop	word ptr cs:[rax + rax]
0x12450:	movsxd	rdi, edi
0x12453:	mov	eax, ebp
0x12455:	add	rcx, rdi
0x12458:	or	eax, 2
0x1245b:	mov	qword ptr [r15], rcx
0x1245e:	cmp	byte ptr [rcx], 0
0x12461:	mov	qword ptr [r14], rbx
0x12464:	cmovne	ebp, eax
0x12467:	jmp	0x1232d


0x12477:	mov	edx, 2
0x1247c:	mov	rax, rdx
0x1247f:	mul	rbx
0x12482:	jo	0x1251e


0x1251e:	mov	ebp, 1
0x12523:	or	rbx, 0xffffffffffffffff
0x12527:	jmp	0x12450


0x12488:	add	rbx, rbx
0x1248b:	jmp	0x12450


0x12450:	movsxd	rdi, edi
0x12453:	mov	eax, ebp
0x12455:	add	rcx, rdi
0x12458:	or	eax, 2
0x1245b:	mov	qword ptr [r15], rcx
0x1245e:	cmp	byte ptr [rcx], 0
0x12461:	mov	qword ptr [r14], rbx
0x12464:	cmovne	ebp, eax
0x12467:	jmp	0x1232d


0x1248d:	mov	edx, 0x200
0x12492:	mov	rax, rdx
0x12495:	mul	rbx
0x12498:	jo	0x1251e


0x1249e:	shl	rbx, 9
0x124a2:	jmp	0x12450


0x124a4:	mov	r8d, 7
0x124aa:	xor	r9d, r9d
0x124ad:	nop	dword ptr [rax]
0x124b0:	mov	rax, rbx
0x124b3:	mul	rsi
0x124b6:	mov	rbx, rax
0x124b9:	jo	0x1264e


0x1264e:	mov	r9d, 1
0x12654:	or	rbx, 0xffffffffffffffff
0x12658:	jmp	0x124bf


0x124bf:	sub	r8d, 1
0x124c3:	jne	0x124b0


0x124c5:	or	ebp, r9d
0x124c8:	jmp	0x12450


0x124b0:	mov	rax, rbx
0x124b3:	mul	rsi
0x124b6:	mov	rbx, rax
0x124b9:	jo	0x1264e


0x124ca:	mov	r8d, 8
0x124d0:	xor	r9d, r9d
0x124d3:	nop	dword ptr [rax + rax]
0x124d8:	mov	rax, rbx
0x124db:	mul	rsi
0x124de:	mov	rbx, rax
0x124e1:	jo	0x12630


0x12630:	mov	r9d, 1
0x12636:	or	rbx, 0xffffffffffffffff
0x1263a:	jmp	0x124e7


0x124e7:	sub	r8d, 1
0x124eb:	jne	0x124d8


0x124ed:	jmp	0x124c5


0x124d8:	mov	rax, rbx
0x124db:	mul	rsi
0x124de:	mov	rbx, rax
0x124e1:	jo	0x12630


0x124ef:	mov	r8d, 4
0x124f5:	xor	r9d, r9d
0x124f8:	mov	rax, rbx
0x124fb:	mul	rsi
0x124fe:	mov	rbx, rax
0x12501:	jo	0x12603


0x12603:	mov	r9d, 1
0x12609:	or	rbx, 0xffffffffffffffff
0x1260d:	jmp	0x12507


0x12507:	sub	r8d, 1
0x1250b:	jne	0x124f8


0x1250d:	jmp	0x124c5


0x124f8:	mov	rax, rbx
0x124fb:	mul	rsi
0x124fe:	mov	rbx, rax
0x12501:	jo	0x12603


0x1250f:	mov	rax, rbx
0x12512:	mul	rsi
0x12515:	mov	rbx, rax
0x12518:	jno	0x12450


0x1263f:	mov	r9d, 1
0x12645:	or	rbx, 0xffffffffffffffff
0x12649:	jmp	0x12548


0x12548:	sub	r8d, 1
0x1254c:	jne	0x12539


0x1254e:	jmp	0x124c5


0x12539:	mov	rax, rbx
0x1253c:	mul	rsi
0x1253f:	mov	rbx, rax
0x12542:	jo	0x1263f


0x12553:	mov	r8d, 6
0x12559:	xor	r9d, r9d
0x1255c:	mov	rax, rbx
0x1255f:	mul	rsi
0x12562:	mov	rbx, rax
0x12565:	jo	0x125f4


0x125f4:	mov	r9d, 1
0x125fa:	or	rbx, 0xffffffffffffffff
0x125fe:	jmp	0x1256b


0x1256b:	sub	r8d, 1
0x1256f:	jne	0x1255c


0x12571:	jmp	0x124c5


0x1255c:	mov	rax, rbx
0x1255f:	mul	rsi
0x12562:	mov	rbx, rax
0x12565:	jo	0x125f4


0x12576:	mov	edx, 0x400
0x1257b:	mov	rax, rdx
0x1257e:	mul	rbx
0x12581:	jo	0x1251e


0x12583:	shl	rbx, 0xa
0x12587:	jmp	0x12450


0x1258c:	mov	rax, rbx
0x1258f:	mul	rsi
0x12592:	jo	0x1265d


0x1265d:	mov	r8d, 1
0x12663:	or	rax, 0xffffffffffffffff
0x12667:	jmp	0x1259b


0x12598:	xor	r8d, r8d
0x1259b:	mul	rsi
0x1259e:	jno	0x12437


0x1259b:	mul	rsi
0x1259e:	jno	0x12437


0x125a4:	mov	r8d, 1
0x125aa:	or	rax, 0xffffffffffffffff
0x125ae:	jmp	0x12437


0x1266c:	nop	dword ptr [rax]


0x1271c:	nop	dword ptr [rax]


0x128f8:	mov	rax, rbx
0x128fb:	mul	rsi
0x128fe:	jo	0x12af1


0x12af1:	or	rax, 0xffffffffffffffff
0x12af5:	mov	r8d, 1
0x12afb:	jmp	0x12907


0x12904:	xor	r8d, r8d
0x12907:	mul	rsi
0x1290a:	jo	0x12ae2


0x12907:	mul	rsi
0x1290a:	jo	0x12ae2


0x12ae2:	mov	r8d, 1
0x12ae8:	or	rbx, 0xffffffffffffffff
0x12aec:	jmp	0x12913


0x12910:	mov	rbx, rax
0x12913:	or	ebp, r8d
0x12916:	nop	word ptr cs:[rax + rax]
0x12920:	movsxd	rdi, edi
0x12923:	mov	eax, ebp
0x12925:	add	rcx, rdi
0x12928:	or	eax, 2
0x1292b:	mov	qword ptr [r15], rcx
0x1292e:	cmp	byte ptr [rcx], 0
0x12931:	mov	qword ptr [r14], rbx
0x12934:	cmovne	ebp, eax
0x12937:	jmp	0x127fd


0x12913:	or	ebp, r8d
0x12916:	nop	word ptr cs:[rax + rax]
0x12920:	movsxd	rdi, edi
0x12923:	mov	eax, ebp
0x12925:	add	rcx, rdi
0x12928:	or	eax, 2
0x1292b:	mov	qword ptr [r15], rcx
0x1292e:	cmp	byte ptr [rcx], 0
0x12931:	mov	qword ptr [r14], rbx
0x12934:	cmovne	ebp, eax
0x12937:	jmp	0x127fd


0x12947:	mov	edx, 2
0x1294c:	mov	rax, rdx
0x1294f:	mul	rbx
0x12952:	jo	0x129ee


0x129ee:	mov	ebp, 1
0x129f3:	or	rbx, 0xffffffffffffffff
0x129f7:	jmp	0x12920


0x12958:	add	rbx, rbx
0x1295b:	jmp	0x12920


0x12920:	movsxd	rdi, edi
0x12923:	mov	eax, ebp
0x12925:	add	rcx, rdi
0x12928:	or	eax, 2
0x1292b:	mov	qword ptr [r15], rcx
0x1292e:	cmp	byte ptr [rcx], 0
0x12931:	mov	qword ptr [r14], rbx
0x12934:	cmovne	ebp, eax
0x12937:	jmp	0x127fd


0x1295d:	mov	edx, 0x200
0x12962:	mov	rax, rdx
0x12965:	mul	rbx
0x12968:	jo	0x129ee


0x1296e:	shl	rbx, 9
0x12972:	jmp	0x12920


0x12974:	mov	r8d, 7
0x1297a:	xor	r9d, r9d
0x1297d:	nop	dword ptr [rax]
0x12980:	mov	rax, rbx
0x12983:	mul	rsi
0x12986:	mov	rbx, rax
0x12989:	jo	0x12b1e


0x12b1e:	mov	r9d, 1
0x12b24:	or	rbx, 0xffffffffffffffff
0x12b28:	jmp	0x1298f


0x1298f:	sub	r8d, 1
0x12993:	jne	0x12980


0x12995:	or	ebp, r9d
0x12998:	jmp	0x12920


0x12980:	mov	rax, rbx
0x12983:	mul	rsi
0x12986:	mov	rbx, rax
0x12989:	jo	0x12b1e


0x1299a:	mov	r8d, 8
0x129a0:	xor	r9d, r9d
0x129a3:	nop	dword ptr [rax + rax]
0x129a8:	mov	rax, rbx
0x129ab:	mul	rsi
0x129ae:	mov	rbx, rax
0x129b1:	jo	0x12b00


0x12b00:	mov	r9d, 1
0x12b06:	or	rbx, 0xffffffffffffffff
0x12b0a:	jmp	0x129b7


0x129b7:	sub	r8d, 1
0x129bb:	jne	0x129a8


0x129bd:	jmp	0x12995


0x129a8:	mov	rax, rbx
0x129ab:	mul	rsi
0x129ae:	mov	rbx, rax
0x129b1:	jo	0x12b00


0x129bf:	mov	r8d, 4
0x129c5:	xor	r9d, r9d
0x129c8:	mov	rax, rbx
0x129cb:	mul	rsi
0x129ce:	mov	rbx, rax
0x129d1:	jo	0x12ad3


0x12ad3:	mov	r9d, 1
0x12ad9:	or	rbx, 0xffffffffffffffff
0x12add:	jmp	0x129d7


0x129d7:	sub	r8d, 1
0x129db:	jne	0x129c8


0x129dd:	jmp	0x12995


0x129c8:	mov	rax, rbx
0x129cb:	mul	rsi
0x129ce:	mov	rbx, rax
0x129d1:	jo	0x12ad3


0x129df:	mov	rax, rbx
0x129e2:	mul	rsi
0x129e5:	mov	rbx, rax
0x129e8:	jno	0x12920


0x12b0f:	mov	r9d, 1
0x12b15:	or	rbx, 0xffffffffffffffff
0x12b19:	jmp	0x12a18


0x12a18:	sub	r8d, 1
0x12a1c:	jne	0x12a09


0x12a1e:	jmp	0x12995


0x12a09:	mov	rax, rbx
0x12a0c:	mul	rsi
0x12a0f:	mov	rbx, rax
0x12a12:	jo	0x12b0f


0x12a23:	mov	r8d, 6
0x12a29:	xor	r9d, r9d
0x12a2c:	mov	rax, rbx
0x12a2f:	mul	rsi
0x12a32:	mov	rbx, rax
0x12a35:	jo	0x12ac4


0x12ac4:	mov	r9d, 1
0x12aca:	or	rbx, 0xffffffffffffffff
0x12ace:	jmp	0x12a3b


0x12a3b:	sub	r8d, 1
0x12a3f:	jne	0x12a2c


0x12a41:	jmp	0x12995


0x12a2c:	mov	rax, rbx
0x12a2f:	mul	rsi
0x12a32:	mov	rbx, rax
0x12a35:	jo	0x12ac4


0x12a46:	mov	edx, 0x400
0x12a4b:	mov	rax, rdx
0x12a4e:	mul	rbx
0x12a51:	jo	0x129ee


0x12a53:	shl	rbx, 0xa
0x12a57:	jmp	0x12920


0x12a5c:	mov	rax, rbx
0x12a5f:	mul	rsi
0x12a62:	jo	0x12b2d


0x12b2d:	mov	r8d, 1
0x12b33:	or	rax, 0xffffffffffffffff
0x12b37:	jmp	0x12a6b


0x12a68:	xor	r8d, r8d
0x12a6b:	mul	rsi
0x12a6e:	jno	0x12907


0x12a6b:	mul	rsi
0x12a6e:	jno	0x12907


0x12a74:	mov	r8d, 1
0x12a7a:	or	rax, 0xffffffffffffffff
0x12a7e:	jmp	0x12907


0x12b3c:	nop	dword ptr [rax]


0x12bbb:	nop	dword ptr [rax + rax]


0x12e3e:	nop	


0x12ed7:	nop	word ptr [rax + rax]


0x12f63:	nop	word ptr cs:[rax + rax]
0x12f6d:	nop	dword ptr [rax]


0x13037:	nop	word ptr [rax + rax]


0x1307f:	nop	


0x13096:	nop	word ptr cs:[rax + rax]


0x130b6:	nop	word ptr cs:[rax + rax]


0x13161:	nop	dword ptr [rax + rax]
0x13166:	nop	word ptr cs:[rax + rax]


0x13185:	nop	
0x13186:	nop	word ptr cs:[rax + rax]


0x132b8:	nop	dword ptr [rax + rax]


0x1332a:	nop	word ptr [rax + rax]


0x1335a:	nop	word ptr [rax + rax]


0x133dd:	nop	dword ptr [rax]


0x1349c:	nop	dword ptr [rax]


0x134df:	nop	


0x134fa:	nop	word ptr [rax + rax]


0x13593:	nop	word ptr cs:[rax + rax]
0x1359d:	nop	dword ptr [rax]


0x135dc:	nop	dword ptr [rax]


0x13694:	nop	
0x13696:	nop	word ptr cs:[rax + rax]


0x13749:	nop	dword ptr [rax]


0x137ae:	nop	


0x137be:	nop	


0x13825:	nop	
0x13826:	nop	word ptr cs:[rax + rax]


0x13832:	nop	word ptr cs:[rax + rax]
0x1383c:	nop	dword ptr [rax]


0x61c8:	mov	byte ptr [rsi + 0x37], 1
0x61cc:	nop	dword ptr [rax]
0x61d0:	add	rax, 1
0x61d4:	movzx	ecx, byte ptr [rax]
0x61d7:	test	cl, cl
0x61d9:	jne	0x61b0


0x61e0:	mov	byte ptr [rsi + 0x32], 1
0x61e4:	jmp	0x61d0


0x61f0:	cmp	qword ptr [rsi + 0x20], 0
0x61f5:	jne	0x61d0


0x6200:	mov	byte ptr [rsi + 0x35], 1
0x6204:	jmp	0x61d0


0x6210:	mov	byte ptr [rsi + 0x34], 1
0x6214:	jmp	0x61d0


0x6220:	mov	qword ptr [rsi + 0x28], r10
0x6224:	jmp	0x61d0


0x6230:	mov	qword ptr [rsi + 0x20], r9
0x6234:	jmp	0x61d0


0x6240:	test	r8d, r8d
0x6243:	jne	0x6249


0x6260:	mov	byte ptr [rsi + 0x38], 1
0x6264:	jmp	0x61d0


0x6270:	mov	byte ptr [rsi + 0x36], 1
0x6274:	jmp	0x61d0


0x6280:	mov	byte ptr [rsi + 0x33], 1
0x6284:	jmp	0x61d0


0x7018:	mov	rax, qword ptr [rsp + 0x10]
0x701d:	mov	qword ptr [rbp], rax
0x7021:	mov	rax, qword ptr [rsp + 8]
0x7026:	mov	rbx, qword ptr [rsp + 0x18]
0x702b:	xor	rbx, qword ptr fs:[0x28]
0x7034:	jne	0x7059


0x7040:	mov	qword ptr [rbp], -1
0x7048:	jmp	0x7021


0x7050:	test	r12, r12
0x7053:	jne	0x705e


0xead0:	xor	r10d, r10d
0xead3:	mov	eax, dword ptr [rsp + 8]
0xead7:	cmp	eax, 2
0xeada:	je	0xf098


0xeb00:	xor	r10d, r10d
0xeb03:	cmp	dword ptr [rsp + 8], 2
0xeb08:	je	0xf010


0xeb28:	mov	edx, 9
0xeb2d:	mov	ebx, 0x74
0xeb32:	cmp	dword ptr [rsp + 8], 2
0xeb37:	sete	al
0xeb3a:	and	al, byte ptr [rsp + 0xf]
0xeb3e:	jne	0xec8e


0xeb68:	mov	edx, 8
0xeb6d:	mov	ebx, 0x62
0xeb72:	jmp	0xeb44


0xeb78:	cmp	dword ptr [rsp + 8], 2
0xeb7d:	je	0xef50


0xec20:	cmp	byte ptr [rsp + 0xd], 0
0xec25:	jne	0xedf3


0xec48:	cmp	dword ptr [rsp + 8], 2
0xec4d:	sete	dl
0xec50:	xor	eax, eax
0xec52:	jmp	0xea38


0xec60:	mov	edx, 7
0xec65:	mov	ebx, 0x61
0xec6a:	jmp	0xeb44


0xec70:	cmp	dword ptr [rsp + 8], 2
0xec75:	sete	dl
0xec78:	test	rbp, rbp
0xec7b:	jne	0xea2c


0xeca0:	cmp	dword ptr [rsp + 8], 2
0xeca5:	sete	dl
0xeca8:	xor	r12d, r12d
0xecab:	jmp	0xec81


0xecb0:	cmp	dword ptr [rsp + 8], 2
0xecb5:	mov	ebx, 0x20
0xecba:	sete	dl
0xecbd:	jmp	0xec81


0xecc0:	mov	edx, 0xd
0xecc5:	mov	ebx, 0x72
0xecca:	jmp	0xeb32


0xecd0:	mov	edx, 0xc
0xecd5:	mov	ebx, 0x66
0xecda:	jmp	0xeb44


0xece0:	mov	edx, 0xb
0xece5:	mov	ebx, 0x76
0xecea:	jmp	0xeb44


0xecf0:	mov	edx, 0xa
0xecf5:	mov	ebx, 0x6e
0xecfa:	jmp	0xeb32


0xed90:	xor	r10d, r10d
0xed93:	cmp	byte ptr [rsp + 0xd], 0
0xed98:	jne	0xeb8e


0xedb0:	mov	edx, 0xc
0xedb5:	xor	r10d, r10d
0xedb8:	mov	ebx, 0x66
0xedbd:	jmp	0xeb44


0xedc8:	mov	edx, 0xa
0xedcd:	xor	r10d, r10d
0xedd0:	mov	ebx, 0x6e
0xedd5:	jmp	0xeb32


0xede0:	mov	ebx, 0x61
0xede5:	jmp	0xebb0


0xedf0:	xor	r10d, r10d
0xedf3:	cmp	dword ptr [rsp + 8], 2
0xedf8:	sete	dl
0xedfb:	cmp	byte ptr [rsp + 0xf], 0
0xee00:	jne	0xf99a


0xee90:	cmp	dword ptr [rsp + 8], 2
0xee95:	mov	r12d, r10d
0xee98:	sete	dl
0xee9b:	xor	r10d, r10d
0xee9e:	xor	eax, eax
0xeea0:	jmp	0xea38


0xeea8:	cmp	dword ptr [rsp + 8], 2
0xeead:	sete	dl
0xeeb0:	xor	r10d, r10d
0xeeb3:	jmp	0xec78


0xeec0:	cmp	dword ptr [rsp + 8], 2
0xeec5:	sete	dl
0xeec8:	xor	r10d, r10d
0xeecb:	xor	r12d, r12d
0xeece:	jmp	0xec81


0xeed8:	cmp	dword ptr [rsp + 8], 2
0xeedd:	mov	r12d, r10d
0xeee0:	mov	ebx, 0x20
0xeee5:	sete	dl
0xeee8:	xor	r10d, r10d
0xeeeb:	jmp	0xec81


0xef08:	mov	ebx, 0x76
0xef0d:	jmp	0xebb0


0xef18:	mov	edx, 9
0xef1d:	xor	r10d, r10d
0xef20:	mov	ebx, 0x74
0xef25:	jmp	0xeb32


0xef30:	mov	ebx, 0x62
0xef35:	jmp	0xebb0


0xf4d0:	test	ebx, ebx
0xf4d2:	jne	0xf8cd


0x12530:	mov	r8d, 5
0x12536:	xor	r9d, r9d
0x12539:	mov	rax, rbx
0x1253c:	mul	rsi
0x1253f:	mov	rbx, rax
0x12542:	jo	0x1263f


0x12a00:	mov	r8d, 5
0x12a06:	xor	r9d, r9d
0x12a09:	mov	rax, rbx
0x12a0c:	mul	rsi
0x12a0f:	mov	rbx, rax
0x12a12:	jo	0x12b0f


0x3438:	nop	dword ptr [rax + rax]


0x34cc:	nop	dword ptr [rax]


0x35d5:	nop	dword ptr [rax]


0x36b7:	nop	word ptr [rax + rax]


0x37dd:	nop	dword ptr [rax]


0x381c:	nop	dword ptr [rax]


0x3858:	nop	dword ptr [rax + rax]


0x3873:	nop	dword ptr [rax + rax]


0x3987:	nop	word ptr [rax + rax]


0x3a6b:	nop	dword ptr [rax + rax]


0x3b5f:	nop	


0x3f89:	nop	dword ptr [rax]


0x4735:	nop	dword ptr [rax]


0x4ad2:	nop	word ptr [rax + rax]


0x4ce4:	nop	dword ptr [rax]


0x5da6:	nop	word ptr cs:[rax + rax]


0x5df7:	nop	word ptr [rax + rax]


0x5e41:	nop	dword ptr [rax]


0x5e94:	nop	dword ptr [rax]


0x5ee6:	nop	word ptr cs:[rax + rax]


0x5ef8:	nop	dword ptr [rax + rax]


0x5f12:	nop	word ptr [rax + rax]


0x5fc2:	nop	word ptr [rax + rax]


0x6015:	nop	dword ptr [rax]


0x6047:	nop	word ptr [rax + rax]


0x605d:	nop	dword ptr [rax]


0x607b:	nop	dword ptr [rax + rax]


0x60bb:	nop	dword ptr [rax + rax]


0x61c4:	nop	dword ptr [rax]


0x61dd:	nop	dword ptr [rax]


0x61e6:	nop	word ptr cs:[rax + rax]


0x61fd:	nop	dword ptr [rax]


0x6206:	nop	word ptr cs:[rax + rax]


0x6216:	nop	word ptr cs:[rax + rax]


0x6226:	nop	word ptr cs:[rax + rax]


0x6236:	nop	word ptr cs:[rax + rax]


0x6257:	nop	word ptr [rax + rax]


0x6269:	nop	dword ptr [rax]


0x6279:	nop	dword ptr [rax]


0x62e4:	nop	dword ptr [rax]


0x63a5:	nop	dword ptr [rax]


0x63d1:	nop	dword ptr [rax]


0x641c:	nop	dword ptr [rax]


0x6462:	nop	word ptr [rax + rax]


0x64b9:	nop	dword ptr [rax]


0x653d:	nop	dword ptr [rax]


0x6692:	nop	word ptr [rax + rax]


0x67c3:	nop	dword ptr [rax + rax]


0x68b1:	nop	dword ptr [rax]


0x68db:	nop	dword ptr [rax + rax]


0x699a:	nop	word ptr [rax + rax]


0x69d2:	nop	word ptr [rax + rax]


0x69f5:	nop	dword ptr [rax]


0x6a0f:	nop	


0x6a34:	nop	dword ptr [rax]


0x6a9a:	nop	word ptr [rax + rax]


0x6aba:	nop	word ptr [rax + rax]


0x6ad3:	nop	dword ptr [rax + rax]


0x6af5:	nop	dword ptr [rax]


0x6b15:	nop	dword ptr [rax]


0x6b2f:	nop	


0x6b54:	nop	dword ptr [rax]


0x6b8f:	nop	


0x6c11:	nop	dword ptr [rax]


0x6c5e:	nop	


0x6d5e:	nop	


0x6d9a:	nop	word ptr [rax + rax]


0x6dad:	nop	dword ptr [rax]


0x6f3b:	nop	dword ptr [rax + rax]


0x6f67:	nop	word ptr [rax + rax]


0x6f85:	nop	dword ptr [rax]


0x7013:	nop	dword ptr [rax + rax]


0x703f:	nop	


0x704a:	nop	word ptr [rax + rax]


0x70eb:	nop	dword ptr [rax + rax]


0x713d:	nop	dword ptr [rax]


0x719d:	nop	dword ptr [rax]


0x721d:	nop	dword ptr [rax]


0x724a:	nop	word ptr [rax + rax]


0x72fe:	nop	


0x7316:	nop	word ptr cs:[rax + rax]


0x7398:	nop	dword ptr [rax + rax]


0x73af:	nop	


0x73d5:	nop	dword ptr [rax]


0x745d:	nop	dword ptr [rax]


0x75d7:	nop	word ptr [rax + rax]


0x75ef:	nop	


0x75fc:	nop	dword ptr [rax]


0x760a:	nop	word ptr [rax + rax]


0x7633:	nop	dword ptr [rax + rax]


0x7668:	nop	dword ptr [rax + rax]


0x7682:	nop	word ptr [rax + rax]


0x76a2:	nop	word ptr [rax + rax]


0x76b7:	nop	word ptr [rax + rax]


0x7869:	nop	dword ptr [rax]


0x7876:	nop	word ptr cs:[rax + rax]


0x7938:	nop	dword ptr [rax + rax]


0x7a1c:	nop	dword ptr [rax]


0x7a3b:	nop	dword ptr [rax + rax]


0x7a94:	nop	dword ptr [rax]


0x7acf:	nop	


0x7ae2:	nop	word ptr [rax + rax]


0x7b0a:	nop	word ptr [rax + rax]


0x7b2f:	nop	


0x7b44:	nop	dword ptr [rax]


0x7bdb:	nop	dword ptr [rax + rax]


0x7bef:	nop	


0x7c0d:	nop	dword ptr [rax]


0x7c7f:	nop	


0x7cba:	nop	word ptr [rax + rax]


0x7d0c:	nop	dword ptr [rax]


0x7d57:	nop	word ptr [rax + rax]


0x7d7a:	nop	word ptr [rax + rax]


0x7dbe:	nop	


0x7dc8:	nop	dword ptr [rax + rax]


0x7df2:	nop	word ptr [rax + rax]


0x7e24:	nop	dword ptr [rax]


0x7e43:	nop	dword ptr [rax + rax]


0x820c:	nop	dword ptr [rax]


0x822b:	nop	dword ptr [rax + rax]


0x8238:	nop	dword ptr [rax + rax]


0x824b:	nop	dword ptr [rax + rax]


0x8284:	nop	dword ptr [rax]


0x838d:	nop	dword ptr [rax]


0x839c:	nop	dword ptr [rax]


0x8492:	nop	word ptr [rax + rax]


0x84aa:	nop	word ptr [rax + rax]


0x84e5:	nop	dword ptr [rax]


0x850e:	nop	


0x8537:	nop	word ptr [rax + rax]


0x8556:	nop	word ptr cs:[rax + rax]


0x8568:	nop	dword ptr [rax + rax]


0x8587:	nop	word ptr [rax + rax]


0x8715:	nop	dword ptr [rax]


0x874d:	nop	dword ptr [rax]


0x878f:	nop	


0x8863:	nop	dword ptr [rax + rax]


0x8896:	nop	word ptr cs:[rax + rax]


0x88d7:	nop	word ptr [rax + rax]


0x8905:	nop	dword ptr [rax]


0x8965:	nop	dword ptr [rax]


0x8a51:	nop	dword ptr [rax]


0x8ae6:	nop	word ptr cs:[rax + rax]


0x8bc2:	nop	word ptr [rax + rax]


0x8bee:	nop	


0x8c1b:	nop	dword ptr [rax + rax]


0x8e89:	nop	dword ptr [rax]


0x8fbb:	nop	dword ptr [rax + rax]


0x8fc9:	nop	dword ptr [rax]


0x9133:	nop	dword ptr [rax + rax]


0x9142:	nop	word ptr [rax + rax]


0x91bf:	nop	


0x9236:	nop	word ptr cs:[rax + rax]


0x92b7:	nop	word ptr [rax + rax]


0x92cf:	nop	


0x92fe:	nop	


0x931e:	nop	


0x938d:	nop	dword ptr [rax]


0x93a8:	nop	dword ptr [rax + rax]


0x93cc:	nop	dword ptr [rax]


0x9416:	nop	word ptr cs:[rax + rax]


0x945e:	nop	


0x94c7:	nop	word ptr [rax + rax]


0x953b:	nop	dword ptr [rax + rax]


0x9597:	nop	word ptr [rax + rax]


0x95ca:	nop	word ptr [rax + rax]


0x9626:	nop	word ptr cs:[rax + rax]


0x963d:	nop	dword ptr [rax]


0x987e:	nop	


0x9937:	nop	word ptr [rax + rax]


0x99da:	nop	word ptr [rax + rax]


0x99f6:	nop	word ptr cs:[rax + rax]


0x9d19:	nop	dword ptr [rax]


0x9df2:	nop	word ptr [rax + rax]


0x9e7d:	nop	dword ptr [rax]


0x9f14:	nop	dword ptr [rax]


0x9f2f:	nop	


0x9fb2:	nop	word ptr [rax + rax]


0xa22b:	nop	dword ptr [rax + rax]


0xa27d:	nop	dword ptr [rax]


0xa28f:	nop	


0xa2a4:	nop	dword ptr [rax]


0xa3fd:	nop	dword ptr [rax]


0xa7fc:	nop	dword ptr [rax]


0xaf06:	nop	word ptr cs:[rax + rax]


0xaf93:	nop	dword ptr [rax + rax]


0xafc7:	nop	word ptr [rax + rax]


0xb03d:	nop	dword ptr [rax]


0xb0af:	nop	


0xb134:	nop	dword ptr [rax]


0xb163:	nop	dword ptr [rax + rax]


0xb20f:	nop	


0xbb7e:	nop	


0xbbc7:	nop	word ptr [rax + rax]


0xbd01:	nop	dword ptr [rax]


0xbd3c:	nop	dword ptr [rax]


0xbd7f:	nop	


0xbdce:	nop	


0xbe29:	nop	dword ptr [rax]


0xbe93:	nop	dword ptr [rax + rax]


0xc075:	nop	dword ptr [rax]


0xc0cb:	nop	dword ptr [rax + rax]


0xc107:	nop	word ptr [rax + rax]


0xc173:	nop	dword ptr [rax + rax]


0xc186:	nop	word ptr cs:[rax + rax]


0xc19c:	nop	dword ptr [rax]


0xc3a8:	nop	dword ptr [rax + rax]


0xc3cd:	nop	dword ptr [rax]


0xc417:	nop	word ptr [rax + rax]


0xc44e:	nop	


0xc458:	nop	dword ptr [rax + rax]


0xc4b7:	nop	word ptr [rax + rax]


0xc4de:	nop	


0xc4e8:	nop	dword ptr [rax + rax]


0xc501:	nop	dword ptr [rax]


0xc51a:	nop	word ptr [rax + rax]


0xc536:	nop	word ptr cs:[rax + rax]


0xc54b:	nop	dword ptr [rax + rax]


0xc562:	nop	word ptr [rax + rax]


0xc597:	nop	word ptr [rax + rax]


0xc61a:	nop	word ptr [rax + rax]


0xc661:	nop	dword ptr [rax]


0xc69e:	nop	


0xc78b:	nop	dword ptr [rax + rax]


0xc7ea:	nop	word ptr [rax + rax]


0xc829:	nop	dword ptr [rax]


0xc839:	nop	dword ptr [rax]


0xc8be:	nop	


0xc911:	nop	dword ptr [rax]


0xc9dc:	nop	dword ptr [rax]


0xc9ea:	nop	word ptr [rax + rax]


0xca4e:	nop	


0xca64:	nop	dword ptr [rax]


0xcab7:	nop	word ptr [rax + rax]


0xcb17:	nop	word ptr [rax + rax]


0xcb34:	nop	dword ptr [rax]


0xcbeb:	nop	dword ptr [rax + rax]


0xcc5c:	nop	dword ptr [rax]


0xcc87:	nop	word ptr [rax + rax]


0xccbb:	nop	dword ptr [rax + rax]


0xcd13:	nop	dword ptr [rax + rax]


0xcd34:	nop	dword ptr [rax]


0xcd52:	nop	word ptr [rax + rax]


0xcd9a:	nop	word ptr [rax + rax]


0xcdcb:	nop	dword ptr [rax + rax]


0xce0f:	nop	


0xce59:	nop	dword ptr [rax]


0xcf9f:	nop	


0xcfbc:	nop	dword ptr [rax]


0xd01f:	nop	


0xd046:	nop	word ptr cs:[rax + rax]


0xd095:	nop	dword ptr [rax]


0xd121:	nop	dword ptr [rax]


0xd136:	nop	word ptr cs:[rax + rax]


0xd168:	nop	dword ptr [rax + rax]


0xd179:	nop	dword ptr [rax]


0xd1a6:	nop	word ptr cs:[rax + rax]


0xd35f:	nop	


0xd381:	nop	dword ptr [rax]


0xd3a6:	nop	word ptr cs:[rax + rax]


0xd3ba:	nop	word ptr [rax + rax]


0xd3c7:	nop	word ptr [rax + rax]


0xd48b:	nop	dword ptr [rax + rax]


0xd50e:	nop	


0xd558:	nop	dword ptr [rax + rax]


0xd602:	nop	word ptr [rax + rax]


0xd63d:	nop	dword ptr [rax]


0xd65e:	nop	


0xd67e:	nop	


0xd6f6:	nop	word ptr cs:[rax + rax]


0xd76f:	nop	


0xd835:	nop	dword ptr [rax]


0xd856:	nop	word ptr cs:[rax + rax]


0xd87e:	nop	


0xd89e:	nop	


0xd8bf:	nop	


0xd8ca:	nop	word ptr [rax + rax]


0xd8ee:	nop	


0xda29:	nop	dword ptr [rax]


0xda72:	nop	word ptr [rax + rax]


0xda7e:	nop	


0xdabc:	nop	dword ptr [rax]


0xdb5e:	nop	


0xdbc6:	nop	word ptr cs:[rax + rax]


0xdbf4:	nop	dword ptr [rax]


0xdbfd:	nop	dword ptr [rax]


0xdc2d:	nop	dword ptr [rax]


0xdc52:	nop	word ptr [rax + rax]


0xdd6f:	nop	


0xddab:	nop	dword ptr [rax + rax]


0xde31:	nop	dword ptr [rax]


0xde43:	nop	dword ptr [rax + rax]


0xde6e:	nop	


0xde82:	nop	word ptr [rax + rax]


0xdecb:	nop	dword ptr [rax + rax]


0xdf5f:	nop	


0xdfbd:	nop	dword ptr [rax]


0xdff9:	nop	dword ptr [rax]


0xe053:	nop	dword ptr [rax + rax]


0xe0db:	nop	dword ptr [rax + rax]


0xe143:	nop	dword ptr [rax + rax]


0xe181:	nop	dword ptr [rax]


0xe1a6:	nop	word ptr cs:[rax + rax]


0xe26b:	nop	dword ptr [rax + rax]


0xe2a8:	nop	dword ptr [rax + rax]


0xe34f:	nop	


0xe397:	nop	word ptr [rax + rax]


0xe3af:	nop	


0xe3cb:	nop	dword ptr [rax + rax]


0xe452:	nop	word ptr [rax + rax]


0xe4b2:	nop	word ptr [rax + rax]


0xe4e8:	nop	dword ptr [rax + rax]


0xe516:	nop	word ptr cs:[rax + rax]


0xe597:	nop	word ptr [rax + rax]


0xe5bd:	nop	dword ptr [rax]


0xe638:	nop	dword ptr [rax + rax]


0xe75c:	nop	dword ptr [rax]


0xe7ad:	nop	dword ptr [rax]


0xe9d8:	nop	dword ptr [rax + rax]


0xeac7:	nop	word ptr [rax + rax]


0xeafe:	nop	


0xeb21:	nop	dword ptr [rax]


0xeb62:	nop	word ptr [rax + rax]


0xeb74:	nop	dword ptr [rax]


0xec18:	nop	dword ptr [rax + rax]


0xec41:	nop	dword ptr [rax]


0xec57:	nop	word ptr [rax + rax]


0xec6f:	nop	


0xec9e:	nop	


0xecad:	nop	dword ptr [rax]


0xecbf:	nop	


0xeccf:	nop	


0xecdf:	nop	


0xecef:	nop	


0xecff:	nop	


0xed6c:	nop	dword ptr [rax]


0xed8c:	nop	dword ptr [rax]


0xed9e:	nop	


0xedaf:	nop	


0xedc2:	nop	word ptr [rax + rax]


0xedda:	nop	word ptr [rax + rax]


0xedea:	nop	word ptr [rax + rax]


0xee8b:	nop	dword ptr [rax + rax]


0xeea5:	nop	dword ptr [rax]


0xeeb8:	nop	dword ptr [rax + rax]


0xeed3:	nop	dword ptr [rax + rax]


0xef02:	nop	word ptr [rax + rax]


0xef12:	nop	word ptr [rax + rax]


0xef2a:	nop	word ptr [rax + rax]


0xef3a:	nop	word ptr [rax + rax]


0xef48:	nop	dword ptr [rax + rax]


0xef6f:	nop	


0xf009:	nop	dword ptr [rax]


0xf052:	nop	word ptr [rax + rax]


0xf078:	nop	dword ptr [rax + rax]


0xf091:	nop	dword ptr [rax]


0xf0b2:	nop	word ptr [rax + rax]


0xf218:	nop	dword ptr [rax + rax]


0xf32b:	nop	dword ptr [rax + rax]


0xf34e:	nop	


0xf415:	nop	dword ptr [rax]


0xf4cd:	nop	dword ptr [rax]


0xf6d6:	nop	word ptr cs:[rax + rax]


0xf769:	nop	dword ptr [rax]


0xf7dd:	nop	dword ptr [rax]


0xf8bd:	nop	dword ptr [rax]


0xfbcb:	nop	dword ptr [rax + rax]


0x104bd:	nop	dword ptr [rax]


0x10552:	nop	word ptr [rax + rax]


0x10584:	nop	dword ptr [rax]


0x10652:	nop	word ptr [rax + rax]


0x10793:	nop	dword ptr [rax + rax]


0x107e1:	nop	dword ptr [rax]


0x10848:	nop	dword ptr [rax + rax]


0x1088e:	nop	


0x10938:	nop	dword ptr [rax + rax]


0x10edd:	nop	dword ptr [rax]


0x10ef7:	nop	word ptr [rax + rax]


0x10fc4:	nop	dword ptr [rax]


0x11029:	nop	dword ptr [rax]


0x1115d:	nop	dword ptr [rax]


0x1117a:	nop	word ptr [rax + rax]


0x1118c:	nop	dword ptr [rax]


0x1119c:	nop	dword ptr [rax]


0x11218:	nop	dword ptr [rax + rax]


0x1124a:	nop	word ptr [rax + rax]


0x1129e:	nop	


0x112b3:	nop	dword ptr [rax + rax]


0x11361:	nop	dword ptr [rax]


0x1139c:	nop	dword ptr [rax]


0x113fe:	nop	


0x11411:	nop	dword ptr [rax]


0x114cc:	nop	dword ptr [rax]


0x114e7:	nop	word ptr [rax + rax]


0x1150f:	nop	


0x1153a:	nop	word ptr [rax + rax]


0x11557:	nop	word ptr [rax + rax]


0x11579:	nop	dword ptr [rax]


0x1165f:	nop	


0x116bd:	nop	dword ptr [rax]


0x1174b:	nop	dword ptr [rax + rax]


0x11866:	nop	word ptr cs:[rax + rax]


0x118f5:	nop	dword ptr [rax]


0x11916:	nop	word ptr cs:[rax + rax]


0x11975:	nop	dword ptr [rax]


0x119b1:	nop	dword ptr [rax]


0x119f8:	nop	dword ptr [rax + rax]


0x11a47:	nop	word ptr [rax + rax]


0x11aa4:	nop	dword ptr [rax]


0x11ad2:	nop	word ptr [rax + rax]


0x11b86:	nop	word ptr cs:[rax + rax]


0x11be9:	nop	dword ptr [rax]


0x11e62:	nop	word ptr [rax + rax]


0x11ee9:	nop	dword ptr [rax]


0x11f14:	nop	dword ptr [rax]


0x11f6d:	nop	dword ptr [rax]


0x12201:	nop	dword ptr [rax]


0x1223b:	nop	dword ptr [rax + rax]


0x122b6:	nop	word ptr cs:[rax + rax]


0x12311:	nop	dword ptr [rax]


0x12322:	nop	word ptr [rax + rax]


0x12352:	nop	word ptr [rax + rax]


0x1235c:	nop	dword ptr [rax]


0x123fb:	nop	dword ptr [rax + rax]


0x1252c:	nop	dword ptr [rax]


0x125b3:	nop	dword ptr [rax + rax]


0x12786:	nop	word ptr cs:[rax + rax]


0x127e3:	nop	dword ptr [rax + rax]


0x127f2:	nop	word ptr [rax + rax]


0x12822:	nop	word ptr [rax + rax]


0x1282c:	nop	dword ptr [rax]


0x128cb:	nop	dword ptr [rax + rax]


0x129fc:	nop	dword ptr [rax]


0x12a83:	nop	dword ptr [rax + rax]


0x12b85:	nop	dword ptr [rax]


0x12c5b:	nop	dword ptr [rax + rax]


0x12c86:	nop	word ptr cs:[rax + rax]


0x12cbf:	nop	


0x12d09:	nop	dword ptr [rax]


0x12d2b:	nop	dword ptr [rax + rax]


0x12dd1:	nop	dword ptr [rax]


0x12e63:	nop	dword ptr [rax + rax]


0x12e8f:	nop	


0x12fb1:	nop	dword ptr [rax]


0x12ff3:	nop	dword ptr [rax + rax]


0x1308f:	nop	


0x130af:	nop	


0x1312d:	nop	dword ptr [rax]


0x1325f:	nop	


0x13289:	nop	dword ptr [rax]


0x132a6:	nop	word ptr cs:[rax + rax]


0x132d3:	nop	dword ptr [rax + rax]


0x13307:	nop	word ptr [rax + rax]


0x1333b:	nop	dword ptr [rax + rax]


0x13354:	nop	dword ptr [rax]


0x13394:	nop	dword ptr [rax]


0x133b1:	nop	dword ptr [rax]


0x133c2:	nop	word ptr [rax + rax]


0x13463:	nop	dword ptr [rax + rax]


0x13478:	nop	dword ptr [rax + rax]


0x1348d:	nop	dword ptr [rax]


0x13529:	nop	dword ptr [rax]


0x13575:	nop	dword ptr [rax]


0x135c6:	nop	word ptr cs:[rax + rax]


0x13604:	nop	dword ptr [rax]


0x13658:	nop	dword ptr [rax + rax]


0x13679:	nop	dword ptr [rax]


0x13732:	nop	word ptr [rax + rax]


0x13795:	nop	dword ptr [rax]


