0x1458: sub rsp,8
0x145c: mov rax,qword ptr [rip + 0x206b6d]
0x1463: test rax,rax
0x1466: je 0x146a
0x1468: call rax
0x146a: add rsp,8
0x146e: ret 
0x1470: push qword ptr [rip + 0x20699a]
0x1476: jmp qword ptr [rip + 0x20699c]
0x147c: nop dword ptr [rax]
0x1486: push 0
0x148b: jmp 0x1470
0x1496: push 1
0x149b: jmp 0x1470
0x14a6: push 2
0x14ab: jmp 0x1470
0x14b6: push 3
0x14bb: jmp 0x1470
0x14c6: push 4
0x14cb: jmp 0x1470
0x14d0: jmp qword ptr [rip + 0x206972]
0x14d6: push 5
0x14db: jmp 0x1470
0x14e0: jmp qword ptr [rip + 0x20696a]
0x14e6: push 6
0x14eb: jmp 0x1470
0x14f6: push 7
0x14fb: jmp 0x1470
0x1506: push 8
0x150b: jmp 0x1470
0x1510: jmp qword ptr [rip + 0x206952]
0x1516: push 9
0x151b: jmp 0x1470
0x1526: push 0xa
0x152b: jmp 0x1470
0x1536: push 0xb
0x153b: jmp 0x1470
0x1546: push 0xc
0x154b: jmp 0x1470
0x1556: push 0xd
0x155b: jmp 0x1470
0x1566: push 0xe
0x156b: jmp 0x1470
0x1576: push 0xf
0x157b: jmp 0x1470
0x1586: push 0x10
0x158b: jmp 0x1470
0x1590: jmp qword ptr [rip + 0x206912]
0x1596: push 0x11
0x159b: jmp 0x1470
0x15a6: push 0x12
0x15ab: jmp 0x1470
0x15b6: push 0x13
0x15bb: jmp 0x1470
0x15c6: push 0x14
0x15cb: jmp 0x1470
0x15d0: jmp qword ptr [rip + 0x2068f2]
0x15d6: push 0x15
0x15db: jmp 0x1470
0x15e6: push 0x16
0x15eb: jmp 0x1470
0x15f6: push 0x17
0x15fb: jmp 0x1470
0x1606: push 0x18
0x160b: jmp 0x1470
0x1616: push 0x19
0x161b: jmp 0x1470
0x1626: push 0x1a
0x162b: jmp 0x1470
0x1630: jmp qword ptr [rip + 0x2068c2]
0x1636: push 0x1b
0x163b: jmp 0x1470
0x1646: push 0x1c
0x164b: jmp 0x1470
0x1656: push 0x1d
0x165b: jmp 0x1470
0x1660: jmp qword ptr [rip + 0x2068aa]
0x1666: push 0x1e
0x166b: jmp 0x1470
0x1676: push 0x1f
0x167b: jmp 0x1470
0x1686: push 0x20
0x168b: jmp 0x1470
0x1696: push 0x21
0x169b: jmp 0x1470
0x16a0: jmp qword ptr [rip + 0x20688a]
0x16a6: push 0x22
0x16ab: jmp 0x1470
0x16b6: push 0x23
0x16bb: jmp 0x1470
0x16c6: push 0x24
0x16cb: jmp 0x1470
0x16d0: jmp qword ptr [rip + 0x206872]
0x16d6: push 0x25
0x16db: jmp 0x1470
0x16e6: push 0x26
0x16eb: jmp 0x1470
0x16f6: push 0x27
0x16fb: jmp 0x1470
0x1706: push 0x28
0x170b: jmp 0x1470
0x1716: push 0x29
0x171b: jmp 0x1470
0x1726: push 0x2a
0x172b: jmp 0x1470
0x1730: jmp qword ptr [rip + 0x206842]
0x1736: push 0x2b
0x173b: jmp 0x1470
0x1746: push 0x2c
0x174b: jmp 0x1470
0x1756: push 0x2d
0x175b: jmp 0x1470
0x1766: push 0x2e
0x176b: jmp 0x1470
0x1776: push 0x2f
0x177b: jmp 0x1470
0x1786: push 0x30
0x178b: jmp 0x1470
0x1796: push 0x31
0x179b: jmp 0x1470
0x17a6: push 0x32
0x17ab: jmp 0x1470
0x17b6: push 0x33
0x17bb: jmp 0x1470
0x17c0: jmp qword ptr [rip + 0x20681a]
0x18af: nop 
0x1921: jmp 0x18c3
0x198c: nop dword ptr [rax]
0x19ba: hlt 
0x19bb: nop dword ptr [rax + rax]
0x19c0: lea rdi,[rip + 0x2066b9]
0x19c7: push rbp
0x19c8: lea rax,[rip + 0x2066b1]
0x19cf: cmp rax,rdi
0x19d2: mov rbp,rsp
0x19d5: je 0x19f0
0x19d7: mov rax,qword ptr [rip + 0x2065e2]
0x19de: test rax,rax
0x19e1: je 0x19f0
0x19e3: pop rbp
0x19e4: jmp rax
0x19e6: nop word ptr cs:[rax + rax]
0x19f0: pop rbp
0x19f1: ret 
0x19f2: nop dword ptr [rax]
0x19f6: nop word ptr cs:[rax + rax]
0x1a00: lea rdi,[rip + 0x206679]
0x1a07: lea rsi,[rip + 0x206672]
0x1a0e: push rbp
0x1a0f: sub rsi,rdi
0x1a12: mov rbp,rsp
0x1a15: sar rsi,3
0x1a19: mov rax,rsi
0x1a1c: shr rax,0x3f
0x1a20: add rsi,rax
0x1a23: sar rsi,1
0x1a26: je 0x1a40
0x1a28: mov rax,qword ptr [rip + 0x2065a9]
0x1a2f: test rax,rax
0x1a32: je 0x1a40
0x1a34: pop rbp
0x1a35: jmp rax
0x1a37: nop word ptr [rax + rax]
0x1a40: pop rbp
0x1a41: ret 
0x1a42: nop dword ptr [rax]
0x1a46: nop word ptr cs:[rax + rax]
0x1a50: cmp byte ptr [rip + 0x206651],0
0x1a57: jne 0x1a88
0x1a59: cmp qword ptr [rip + 0x20657f],0
0x1a61: push rbp
0x1a62: mov rbp,rsp
0x1a65: je 0x1a73
0x1a67: mov rdi,qword ptr [rip + 0x20659a]
0x1a6e: call 0x17c0
0x1a73: call 0x19c0
0x1a78: mov byte ptr [rip + 0x206629],1
0x1a7f: pop rbp
0x1a80: ret 
0x1a81: nop dword ptr [rax]
0x1a88: ret 
0x1a8a: nop word ptr [rax + rax]
0x1a90: push rbp
0x1a91: mov rbp,rsp
0x1a94: pop rbp
0x1a95: jmp 0x1a00
0x1a9a: nop word ptr [rax + rax]
0x1ae1: nop dword ptr [rax]
0x1b92: call 0x1590
0x1b97: nop word ptr [rax + rax]
0x1c01: nop dword ptr [rax]
0x1c22: nop dword ptr [rax]
0x1c26: nop word ptr cs:[rax + rax]
0x1d0c: nop dword ptr [rax]
0x1f62: nop word ptr [rax + rax]
0x1fc1: nop dword ptr [rax]
0x2094: mov rdi,rbx
0x2097: call 0x1600
0x209c: mov dword ptr [rbp],r12d
0x20b2: lea rsi,[rip + 0x3056]
0x20b9: mov edx,5
0x20be: xor edi,edi
0x20c0: mov rbx,rax
0x20c3: call 0x1540
0x20c8: mov esi,dword ptr [rbp]
0x20cb: mov rdx,rax
0x20ce: mov rcx,rbx
0x20d1: mov edi,1
0x20d6: xor eax,eax
0x20d8: call 0x1720
0x21e5: lea rsi,[rip + 0x33fa]
0x21ec: mov edi,4
0x21f1: call 0x4100
0x21f6: lea rsi,[rip + 0x305b]
0x21fd: mov edx,5
0x2202: xor edi,edi
0x2204: mov rbp,rax
0x2207: call 0x1540
0x220c: mov rbx,rax
0x220f: call 0x14b0
0x2214: mov esi,dword ptr [rax]
0x2216: mov rcx,rbp
0x2219: mov rdx,rbx
0x221c: mov edi,1
0x2221: xor eax,eax
0x2223: call 0x1720
0x2228: call 0x1590
0x222d: nop dword ptr [rax]
0x25e2: nop word ptr cs:[rax + rax]
0x25ec: nop dword ptr [rax]
0x25f0: mov qword ptr [rip + 0x205ac1],rdi
0x25f7: ret 
0x25f8: nop dword ptr [rax + rax]
0x2600: mov byte ptr [rip + 0x205aa9],dil
0x2607: ret 
0x2608: nop dword ptr [rax + rax]
0x2610: push rbp
0x2611: push rbx
0x2612: sub rsp,8
0x2616: mov rdi,qword ptr [rip + 0x205a6b]
0x261d: call 0x4de0
0x2622: test eax,eax
0x2624: je 0x263c
0x2626: call 0x14b0
0x262b: cmp byte ptr [rip + 0x205a7e],0
0x2632: mov rbx,rax
0x2635: je 0x2653
0x2637: cmp dword ptr [rax],0x20
0x263a: jne 0x2653
0x263c: mov rdi,qword ptr [rip + 0x205a5d]
0x2643: call 0x4de0
0x2648: test eax,eax
0x264a: jne 0x2692
0x264c: add rsp,8
0x2650: pop rbx
0x2651: pop rbp
0x2652: ret 
0x2653: lea rsi,[rip + 0x2f36]
0x265a: xor edi,edi
0x265c: mov edx,5
0x2661: call 0x1540
0x2666: mov rdi,qword ptr [rip + 0x205a4b]
0x266d: mov rbp,rax
0x2670: test rdi,rdi
0x2673: je 0x269d
0x2675: call 0x41d0
0x267a: mov esi,dword ptr [rbx]
0x267c: lea rdx,[rip + 0x2f19]
0x2683: mov rcx,rax
0x2686: mov r8,rbp
0x2689: xor edi,edi
0x268b: xor eax,eax
0x268d: call 0x1720
0x2692: mov edi,dword ptr [rip + 0x205980]
0x2698: call 0x14d0
0x269d: mov esi,dword ptr [rbx]
0x269f: lea rdx,[rip + 0x2efa]
0x26a6: mov rcx,rax
0x26a9: xor edi,edi
0x26ab: xor eax,eax
0x26ad: call 0x1720
0x26b2: jmp 0x2692
0x26b4: nop word ptr cs:[rax + rax]
0x26be: nop 
0x275f: nop 
0x279c: nop dword ptr [rax]
0x27ed: nop dword ptr [rax]
0x2847: nop word ptr [rax + rax]
0x2b07: nop word ptr [rax + rax]
0x2b3e: nop 
0x2b61: nop dword ptr [rax]
0x2ba2: nop word ptr [rax + rax]
0x2bb4: nop dword ptr [rax]
0x2c58: nop dword ptr [rax + rax]
0x2c81: nop dword ptr [rax]
0x2c97: nop word ptr [rax + rax]
0x2caf: nop 
0x2cde: nop 
0x2ced: nop dword ptr [rax]
0x2cff: nop 
0x2d0f: nop 
0x2d1f: nop 
0x2d2f: nop 
0x2d3f: nop 
0x2dac: nop dword ptr [rax]
0x2dcc: nop dword ptr [rax]
0x2def: nop 
0x2e02: nop word ptr [rax + rax]
0x2e1a: nop word ptr [rax + rax]
0x2e2a: nop word ptr [rax + rax]
0x2ecb: nop dword ptr [rax + rax]
0x2ee5: nop dword ptr [rax]
0x2ef8: nop dword ptr [rax + rax]
0x2f13: nop dword ptr [rax + rax]
0x2f42: nop word ptr [rax + rax]
0x2f52: nop word ptr [rax + rax]
0x2f6a: nop word ptr [rax + rax]
0x2f7a: nop word ptr [rax + rax]
0x2f88: nop dword ptr [rax + rax]
0x2faf: nop 
0x3049: nop dword ptr [rax]
0x3092: nop word ptr [rax + rax]
0x30d1: nop dword ptr [rax]
0x30f2: nop word ptr [rax + rax]
0x3258: nop dword ptr [rax + rax]
0x336b: nop dword ptr [rax + rax]
0x338e: nop 
0x3455: nop dword ptr [rax]
0x350d: nop dword ptr [rax]
0x3716: nop word ptr cs:[rax + rax]
0x37a9: nop dword ptr [rax]
0x38fd: nop dword ptr [rax]
0x3a43: call 0x1590
0x3a84: nop 
0x3a86: nop word ptr cs:[rax + rax]
0x3c0b: nop dword ptr [rax + rax]
0x3c31: call 0x14a0
0x3c36: call 0x4ce0
0x3c3b: nop dword ptr [rax + rax]
0x3c40: push r12
0x3c42: push rbp
0x3c43: push rbx
0x3c44: mov rbx,rdi
0x3c47: call 0x14b0
0x3c4c: mov r12d,dword ptr [rax]
0x3c4f: mov rbp,rax
0x3c52: lea rax,[rip + 0x204587]
0x3c59: test rbx,rbx
0x3c5c: mov esi,0x38
0x3c61: cmove rbx,rax
0x3c65: mov rdi,rbx
0x3c68: call 0x4c90
0x3c6d: mov dword ptr [rbp],r12d
0x3c71: pop rbx
0x3c72: pop rbp
0x3c73: pop r12
0x3c75: ret 
0x3c76: nop word ptr cs:[rax + rax]
0x3c80: lea rax,[rip + 0x204559]
0x3c87: test rdi,rdi
0x3c8a: cmove rdi,rax
0x3c8e: mov eax,dword ptr [rdi]
0x3c90: ret 
0x3c91: nop dword ptr [rax + rax]
0x3c96: nop word ptr cs:[rax + rax]
0x3ca0: lea rax,[rip + 0x204539]
0x3ca7: test rdi,rdi
0x3caa: cmove rdi,rax
0x3cae: mov dword ptr [rdi],esi
0x3cb0: ret 
0x3cb1: nop dword ptr [rax + rax]
0x3cb6: nop word ptr cs:[rax + rax]
0x3cc0: lea rax,[rip + 0x204519]
0x3cc7: test rdi,rdi
0x3cca: mov ecx,esi
0x3ccc: cmove rdi,rax
0x3cd0: mov eax,esi
0x3cd2: and ecx,0x1f
0x3cd5: shr al,5
0x3cd8: movzx eax,al
0x3cdb: lea rdi,[rdi + rax*4 + 8]
0x3ce0: mov esi,dword ptr [rdi]
0x3ce2: mov eax,esi
0x3ce4: shr eax,cl
0x3ce6: xor edx,eax
0x3ce8: and eax,1
0x3ceb: and edx,1
0x3cee: shl edx,cl
0x3cf0: xor edx,esi
0x3cf2: mov dword ptr [rdi],edx
0x3cf4: ret 
0x3cf5: nop 
0x3cf6: nop word ptr cs:[rax + rax]
0x3d00: lea rax,[rip + 0x2044d9]
0x3d07: test rdi,rdi
0x3d0a: cmove rdi,rax
0x3d0e: mov eax,dword ptr [rdi + 4]
0x3d11: mov dword ptr [rdi + 4],esi
0x3d14: ret 
0x3d15: nop 
0x3d16: nop word ptr cs:[rax + rax]
0x3d20: lea rax,[rip + 0x2044b9]
0x3d27: test rdi,rdi
0x3d2a: cmove rdi,rax
0x3d2e: test rsi,rsi
0x3d31: mov dword ptr [rdi],0xa
0x3d37: je 0x3d47
0x3d39: test rdx,rdx
0x3d3c: je 0x3d47
0x3d3e: mov qword ptr [rdi + 0x28],rsi
0x3d42: mov qword ptr [rdi + 0x30],rdx
0x3d46: ret 
0x3d47: sub rsp,8
0x3d4b: call 0x14a0
0x3d50: push r15
0x3d52: push r14
0x3d54: lea rax,[rip + 0x204485]
0x3d5b: push r13
0x3d5d: push r12
0x3d5f: mov r13,rdi
0x3d62: push rbp
0x3d63: push rbx
0x3d64: mov rbx,r8
0x3d67: mov r14,rsi
0x3d6a: mov r15,rdx
0x3d6d: sub rsp,0x18
0x3d71: test r8,r8
0x3d74: cmove rbx,rax
0x3d78: mov qword ptr [rsp + 8],rcx
0x3d7d: call 0x14b0
0x3d82: mov r12d,dword ptr [rax]
0x3d85: mov rbp,rax
0x3d88: lea rax,[rbx + 8]
0x3d8c: sub rsp,8
0x3d90: mov r9d,dword ptr [rbx + 4]
0x3d94: push qword ptr [rbx + 0x30]
0x3d97: mov r8d,dword ptr [rbx]
0x3d9a: push qword ptr [rbx + 0x28]
0x3d9d: mov rdx,r15
0x3da0: push rax
0x3da1: mov rcx,qword ptr [rsp + 0x28]
0x3da6: mov rsi,r14
0x3da9: mov rdi,r13
0x3dac: call 0x2850
0x3db1: mov dword ptr [rbp],r12d
0x3db5: add rsp,0x38
0x3db9: pop rbx
0x3dba: pop rbp
0x3dbb: pop r12
0x3dbd: pop r13
0x3dbf: pop r14
0x3dc1: pop r15
0x3dc3: ret 
0x3dc4: nop 
0x3dc6: nop word ptr cs:[rax + rax]
0x3dd0: push r15
0x3dd2: push r14
0x3dd4: lea rax,[rip + 0x204405]
0x3ddb: push r13
0x3ddd: push r12
0x3ddf: mov r12,rdx
0x3de2: push rbp
0x3de3: push rbx
0x3de4: mov rbx,rcx
0x3de7: mov r14,rdi
0x3dea: mov r15,rsi
0x3ded: sub rsp,0x38
0x3df1: test rcx,rcx
0x3df4: cmove rbx,rax
0x3df8: xor ebp,ebp
0x3dfa: call 0x14b0
0x3dff: test r12,r12
0x3e02: mov r13,rax
0x3e05: mov eax,dword ptr [rax]
0x3e07: sete bpl
0x3e0b: or ebp,dword ptr [rbx + 4]
0x3e0e: lea r10,[rbx + 8]
0x3e12: sub rsp,8
0x3e16: mov r8d,dword ptr [rbx]
0x3e19: mov rcx,r15
0x3e1c: mov dword ptr [rsp + 0x14],eax
0x3e20: push qword ptr [rbx + 0x30]
0x3e23: mov rdx,r14
0x3e26: push qword ptr [rbx + 0x28]
0x3e29: push r10
0x3e2b: xor esi,esi
0x3e2d: mov r9d,ebp
0x3e30: xor edi,edi
0x3e32: mov qword ptr [rsp + 0x40],r10
0x3e37: call 0x2850
0x3e3c: lea rsi,[rax + 1]
0x3e40: mov qword ptr [rsp + 0x48],rax
0x3e45: add rsp,0x20
0x3e49: mov rdi,rsi
0x3e4c: mov qword ptr [rsp + 0x18],rsi
0x3e51: call 0x4a90
0x3e56: mov qword ptr [rsp + 0x10],rax
0x3e5b: sub rsp,8
0x3e5f: push qword ptr [rbx + 0x30]
0x3e62: push qword ptr [rbx + 0x28]
0x3e65: mov r10,qword ptr [rsp + 0x38]
0x3e6a: mov r9d,ebp
0x3e6d: mov r8d,dword ptr [rbx]
0x3e70: mov rcx,r15
0x3e73: mov rdx,r14
0x3e76: mov rdi,rax
0x3e79: push r10
0x3e7b: mov rsi,qword ptr [rsp + 0x38]
0x3e80: call 0x2850
0x3e85: mov eax,dword ptr [rsp + 0x2c]
0x3e89: add rsp,0x20
0x3e8d: test r12,r12
0x3e90: mov dword ptr [r13],eax
0x3e94: je 0x3e9f
0x3e96: mov r11,qword ptr [rsp + 0x28]
0x3e9b: mov qword ptr [r12],r11
0x3e9f: mov rax,qword ptr [rsp + 0x10]
0x3ea4: add rsp,0x38
0x3ea8: pop rbx
0x3ea9: pop rbp
0x3eaa: pop r12
0x3eac: pop r13
0x3eae: pop r14
0x3eb0: pop r15
0x3eb2: ret 
0x3eb3: nop dword ptr [rax]
0x3eb6: nop word ptr cs:[rax + rax]
0x3ec0: mov rcx,rdx
0x3ec3: xor edx,edx
0x3ec5: jmp 0x3dd0
0x3eca: nop word ptr [rax + rax]
0x3ed0: mov eax,dword ptr [rip + 0x204182]
0x3ed6: push r12
0x3ed8: mov r12,qword ptr [rip + 0x204181]
0x3edf: push rbp
0x3ee0: push rbx
0x3ee1: cmp eax,1
0x3ee4: jle 0x3f11
0x3ee6: sub eax,2
0x3ee9: lea rbx,[r12 + 0x18]
0x3eee: shl rax,4
0x3ef2: lea rbp,[r12 + rax + 0x28]
0x3ef7: nop word ptr [rax + rax]
0x3f00: mov rdi,qword ptr [rbx]
0x3f03: add rbx,0x10
0x3f07: call 0x1490
0x3f0c: cmp rbx,rbp
0x3f0f: jne 0x3f00
0x3f11: mov rdi,qword ptr [r12 + 8]
0x3f16: lea rbx,[rip + 0x2041c3]
0x3f1d: cmp rdi,rbx
0x3f20: je 0x3f39
0x3f22: call 0x1490
0x3f27: mov qword ptr [rip + 0x20413e],0x100
0x3f32: mov qword ptr [rip + 0x20413f],rbx
0x3f39: lea rbx,[rip + 0x204130]
0x3f40: cmp r12,rbx
0x3f43: je 0x3f54
0x3f45: mov rdi,r12
0x3f48: call 0x1490
0x3f4d: mov qword ptr [rip + 0x20410c],rbx
0x3f54: pop rbx
0x3f55: mov dword ptr [rip + 0x2040f9],1
0x3f5f: pop rbp
0x3f60: pop r12
0x3f62: ret 
0x3f63: nop dword ptr [rax]
0x3f66: nop word ptr cs:[rax + rax]
0x3f70: lea rcx,[rip + 0x204269]
0x3f77: mov rdx,-1
0x3f7e: jmp 0x3a90
0x3f83: nop dword ptr [rax]
0x3f86: nop word ptr cs:[rax + rax]
0x3f90: lea rcx,[rip + 0x204249]
0x3f97: jmp 0x3a90
0x3f9c: nop dword ptr [rax]
0x3fa0: lea rcx,[rip + 0x204239]
0x3fa7: mov rsi,rdi
0x3faa: mov rdx,-1
0x3fb1: xor edi,edi
0x3fb3: jmp 0x3a90
0x3fb8: nop dword ptr [rax + rax]
0x3fc0: lea rcx,[rip + 0x204219]
0x3fc7: mov rdx,rsi
0x3fca: mov rsi,rdi
0x3fcd: xor edi,edi
0x3fcf: jmp 0x3a90
0x3fd4: nop 
0x3fd6: nop word ptr cs:[rax + rax]
0x4064: call 0x14a0
0x4069: call 0x1590
0x406e: nop 
0x4070: sub rsp,0x48
0x4074: mov rax,rdx
0x4077: mov rdx,rcx
0x407a: mov rcx,qword ptr fs:[0x28]
0x4083: mov qword ptr [rsp + 0x38],rcx
0x4088: xor ecx,ecx
0x408a: cmp esi,0xa
0x408d: je 0x40f0
0x408f: mov dword ptr [rsp],esi
0x4092: mov rcx,rsp
0x4095: mov rsi,rax
0x4098: mov qword ptr [rsp + 4],0
0x40a1: mov qword ptr [rsp + 0xc],0
0x40aa: mov qword ptr [rsp + 0x14],0
0x40b3: mov qword ptr [rsp + 0x1c],0
0x40bc: mov qword ptr [rsp + 0x24],0
0x40c5: mov qword ptr [rsp + 0x2c],0
0x40ce: mov dword ptr [rsp + 0x34],0
0x40d6: call 0x3a90
0x40db: mov rdx,qword ptr [rsp + 0x38]
0x40e0: xor rdx,qword ptr fs:[0x28]
0x40e9: jne 0x40f5
0x40eb: add rsp,0x48
0x40ef: ret 
0x40f0: call 0x14a0
0x40f5: call 0x1590
0x40fa: nop word ptr [rax + rax]
0x410c: nop dword ptr [rax]
0x4110: mov rcx,rdx
0x4113: mov rdx,rsi
0x4116: mov esi,edi
0x4118: xor edi,edi
0x411a: jmp 0x4070
0x411f: nop 
0x4120: sub rsp,0x48
0x4124: mov ecx,edx
0x4126: mov rax,qword ptr fs:[0x28]
0x412f: mov qword ptr [rsp + 0x38],rax
0x4134: xor eax,eax
0x4136: mov rax,qword ptr [rip + 0x2040d3]
0x413d: mov r8,rsp
0x4140: and ecx,0x1f
0x4143: movdqa xmm0,xmmword ptr [rip + 0x204095]
0x414b: mov qword ptr [rsp + 0x30],rax
0x4150: mov eax,edx
0x4152: movaps xmmword ptr [rsp],xmm0
0x4156: shr al,5
0x4159: movzx eax,al
0x415c: lea r9,[r8 + rax*4 + 8]
0x4161: movdqa xmm0,xmmword ptr [rip + 0x204087]
0x4169: movaps xmmword ptr [rsp + 0x10],xmm0
0x416e: movdqa xmm0,xmmword ptr [rip + 0x20408a]
0x4176: movaps xmmword ptr [rsp + 0x20],xmm0
0x417b: mov edx,dword ptr [r9]
0x417e: mov eax,edx
0x4180: shr eax,cl
0x4182: not eax
0x4184: and eax,1
0x4187: shl eax,cl
0x4189: mov rcx,r8
0x418c: xor eax,edx
0x418e: mov rdx,rsi
0x4191: mov rsi,rdi
0x4194: mov dword ptr [r9],eax
0x4197: xor edi,edi
0x4199: call 0x3a90
0x419e: mov rsi,qword ptr [rsp + 0x38]
0x41a3: xor rsi,qword ptr fs:[0x28]
0x41ac: jne 0x41b3
0x41ae: add rsp,0x48
0x41b2: ret 
0x41b3: call 0x1590
0x41b8: nop dword ptr [rax + rax]
0x41c0: movsx edx,sil
0x41c4: mov rsi,-1
0x41cb: jmp 0x4120
0x41d0: mov edx,0x3a
0x41d5: mov rsi,-1
0x41dc: jmp 0x4120
0x41e1: nop dword ptr [rax + rax]
0x41e6: nop word ptr cs:[rax + rax]
0x41f0: mov edx,0x3a
0x41f5: jmp 0x4120
0x41fa: nop word ptr [rax + rax]
0x4200: sub rsp,0x48
0x4204: mov rax,rdx
0x4207: mov rdx,qword ptr fs:[0x28]
0x4210: mov qword ptr [rsp + 0x38],rdx
0x4215: xor edx,edx
0x4217: cmp esi,0xa
0x421a: je 0x4284
0x421c: mov dword ptr [rsp],esi
0x421f: mov rcx,rsp
0x4222: mov rdx,-1
0x4229: mov rsi,rax
0x422c: mov qword ptr [rsp + 4],0
0x4235: mov qword ptr [rsp + 0xc],0x4000000
0x423e: mov qword ptr [rsp + 0x14],0
0x4247: mov qword ptr [rsp + 0x1c],0
0x4250: mov qword ptr [rsp + 0x24],0
0x4259: mov qword ptr [rsp + 0x2c],0
0x4262: mov dword ptr [rsp + 0x34],0
0x426a: call 0x3a90
0x426f: mov rcx,qword ptr [rsp + 0x38]
0x4274: xor rcx,qword ptr fs:[0x28]
0x427d: jne 0x4289
0x427f: add rsp,0x48
0x4283: ret 
0x4284: call 0x14a0
0x4289: call 0x1590
0x428e: nop 
0x4290: sub rsp,0x48
0x4294: mov r9,rcx
0x4297: mov rcx,qword ptr [rip + 0x203f72]
0x429e: movdqa xmm0,xmmword ptr [rip + 0x203f3a]
0x42a6: mov rax,qword ptr fs:[0x28]
0x42af: mov qword ptr [rsp + 0x38],rax
0x42b4: xor eax,eax
0x42b6: movaps xmmword ptr [rsp],xmm0
0x42ba: test rsi,rsi
0x42bd: mov qword ptr [rsp + 0x30],rcx
0x42c2: mov dword ptr [rsp],0xa
0x42c9: movdqa xmm0,xmmword ptr [rip + 0x203f1f]
0x42d1: movaps xmmword ptr [rsp + 0x10],xmm0
0x42d6: movdqa xmm0,xmmword ptr [rip + 0x203f22]
0x42de: movaps xmmword ptr [rsp + 0x20],xmm0
0x42e3: je 0x4317
0x42e5: test rdx,rdx
0x42e8: je 0x4317
0x42ea: mov qword ptr [rsp + 0x28],rsi
0x42ef: mov qword ptr [rsp + 0x30],rdx
0x42f4: mov rcx,rsp
0x42f7: mov rdx,r8
0x42fa: mov rsi,r9
0x42fd: call 0x3a90
0x4302: mov rdi,qword ptr [rsp + 0x38]
0x4307: xor rdi,qword ptr fs:[0x28]
0x4310: jne 0x431c
0x4312: add rsp,0x48
0x4316: ret 
0x4317: call 0x14a0
0x431c: call 0x1590
0x4321: nop dword ptr [rax + rax]
0x4326: nop word ptr cs:[rax + rax]
0x4330: mov r8,-1
0x4337: jmp 0x4290
0x433c: nop dword ptr [rax]
0x4340: mov rcx,rdx
0x4343: mov r8,-1
0x434a: mov rdx,rsi
0x434d: mov rsi,rdi
0x4350: xor edi,edi
0x4352: jmp 0x4290
0x4357: nop word ptr [rax + rax]
0x4360: mov r8,rcx
0x4363: mov rcx,rdx
0x4366: mov rdx,rsi
0x4369: mov rsi,rdi
0x436c: xor edi,edi
0x436e: jmp 0x4290
0x4373: nop dword ptr [rax]
0x4376: nop word ptr cs:[rax + rax]
0x4380: lea rcx,[rip + 0x203c99]
0x4387: jmp 0x3a90
0x438c: nop dword ptr [rax]
0x4390: lea rcx,[rip + 0x203c89]
0x4397: mov rdx,rsi
0x439a: mov rsi,rdi
0x439d: xor edi,edi
0x439f: jmp 0x3a90
0x43a4: nop 
0x43a6: nop word ptr cs:[rax + rax]
0x43b0: lea rcx,[rip + 0x203c69]
0x43b7: mov rdx,-1
0x43be: jmp 0x3a90
0x43c3: nop dword ptr [rax]
0x43c6: nop word ptr cs:[rax + rax]
0x43e8: nop dword ptr [rax + rax]
0x4455: nop dword ptr [rax]
0x445c: call 0x1590
0x4461: nop word ptr cs:[rax + rax]
0x446b: nop dword ptr [rax + rax]
0x4516: nop word ptr cs:[rax + rax]
0x45a5: nop dword ptr [rax]
0x45a8: mov r8,rcx
0x45ab: mov rcx,rdx
0x45ae: lea rdx,[rip + 0x151f]
0x45b5: mov esi,1
0x45ba: xor eax,eax
0x45bc: call 0x1770
0x45c1: jmp 0x44ac
0x45c6: nop word ptr cs:[rax + rax]
0x4625: nop dword ptr [rax]
0x4661: nop dword ptr [rax]
0x46a8: nop dword ptr [rax + rax]
0x46f7: nop word ptr [rax + rax]
0x4754: nop dword ptr [rax]
0x4782: nop word ptr [rax + rax]
0x4836: nop word ptr cs:[rax + rax]
0x4887: nop word ptr [rax + rax]
0x4890: xor r9d,r9d
0x4893: cmp qword ptr [r8],0
0x4897: je 0x48ab
0x4899: nop dword ptr [rax]
0x48a0: add r9,1
0x48a4: cmp qword ptr [r8 + r9*8],0
0x48a9: jne 0x48a0
0x48ab: jmp 0x4470
0x48b0: sub rsp,0x68
0x48b4: mov r10,r8
0x48b7: xor r9d,r9d
0x48ba: mov rax,qword ptr fs:[0x28]
0x48c3: mov qword ptr [rsp + 0x58],rax
0x48c8: xor eax,eax
0x48ca: mov r8,rsp
0x48cd: nop dword ptr [rax]
0x48d0: mov eax,dword ptr [r10]
0x48d3: cmp eax,0x2f
0x48d6: ja 0x491a
0x48d8: mov r11d,eax
0x48db: add r11,qword ptr [r10 + 0x10]
0x48df: add eax,8
0x48e2: mov dword ptr [r10],eax
0x48e5: mov rax,qword ptr [r11]
0x48e8: test rax,rax
0x48eb: mov qword ptr [r8 + r9*8],rax
0x48ef: je 0x48fb
0x48f1: add r9,1
0x48f5: cmp r9,0xa
0x48f9: jne 0x48d0
0x48fb: call 0x4470
0x4900: mov rax,qword ptr [rsp + 0x58]
0x4905: xor rax,qword ptr fs:[0x28]
0x490e: jne 0x4915
0x4910: add rsp,0x68
0x4914: ret 
0x4915: call 0x1590
0x491a: mov r11,qword ptr [r10 + 8]
0x491e: lea rax,[r11 + 8]
0x4922: mov qword ptr [r10 + 8],rax
0x4926: jmp 0x48e5
0x4928: nop dword ptr [rax + rax]
0x49f0: call 0x1590
0x49fc: mov rax,rbx
0x49ff: add rbx,8
0x4a03: jmp 0x49b6
0x4a05: nop 
0x4a06: nop word ptr cs:[rax + rax]
0x4a10: push rbx
0x4a11: lea rsi,[rip + 0x110a]
0x4a18: mov edx,5
0x4a1d: xor edi,edi
0x4a1f: call 0x1540
0x4a24: lea rdx,[rip + 0x110c]
0x4a2b: mov rsi,rax
0x4a2e: mov edi,1
0x4a33: xor eax,eax
0x4a35: call 0x1710
0x4a3a: lea rsi,[rip + 0x110c]
0x4a41: mov edx,5
0x4a46: xor edi,edi
0x4a48: call 0x1540
0x4a4d: lea rcx,[rip + 0xa94]
0x4a54: lea rdx,[rip + 0x75a]
0x4a5b: mov rsi,rax
0x4a5e: mov edi,1
0x4a63: xor eax,eax
0x4a65: call 0x1710
0x4a6a: mov rbx,qword ptr [rip + 0x203617]
0x4a71: lea rsi,[rip + 0x1308]
0x4a78: xor edi,edi
0x4a7a: mov edx,5
0x4a7f: call 0x1540
0x4a84: mov rsi,rbx
0x4a87: mov rdi,rax
0x4a8a: pop rbx
0x4a8b: jmp 0x1620
0x4aaa: nop word ptr [rax + rax]
0x4ab0: mov rax,rdi
0x4ab3: mul rsi
0x4ab6: mov rdi,rax
0x4ab9: seto al
0x4abc: test rdi,rdi
0x4abf: js 0x4acb
0x4ac1: movzx eax,al
0x4ac4: test rax,rax
0x4ac7: jne 0x4acb
0x4ac9: jmp 0x4a90
0x4acb: sub rsp,8
0x4acf: call 0x4ce0
0x4ad4: nop 
0x4ad6: nop word ptr cs:[rax + rax]
0x4ae0: jmp 0x4a90
0x4ae2: nop dword ptr [rax]
0x4ae6: nop word ptr cs:[rax + rax]
0x4af9: test rdi,rdi
0x4afc: jne 0x4b18
0x4b12: nop word ptr [rax + rax]
0x4b18: call 0x1490
0x4b1d: xor eax,eax
0x4b1f: pop rbx
0x4b20: ret 
0x4b26: nop word ptr cs:[rax + rax]
0x4b30: mov rax,rsi
0x4b33: mul rdx
0x4b36: mov rsi,rax
0x4b39: seto al
0x4b3c: test rsi,rsi
0x4b3f: js 0x4b4b
0x4b41: movzx eax,al
0x4b44: test rax,rax
0x4b47: jne 0x4b4b
0x4b49: jmp 0x4af0
0x4b4b: sub rsp,8
0x4b4f: call 0x4ce0
0x4b54: nop 
0x4b56: nop word ptr cs:[rax + rax]
0x4b60: test rdi,rdi
0x4b63: mov r9,rdx
0x4b66: mov rcx,qword ptr [rsi]
0x4b69: je 0x4ba0
0x4b6b: xor edx,edx
0x4b6d: movabs rax,0x5555555555555554
0x4b77: div r9
0x4b7a: cmp rax,rcx
0x4b7d: jbe 0x4bbb
0x4b7f: mov rax,rcx
0x4b82: shr rax,1
0x4b85: lea rcx,[rax + rcx + 1]
0x4b8a: mov qword ptr [rsi],rcx
0x4b8d: imul rcx,r9
0x4b91: mov rsi,rcx
0x4b94: jmp 0x4af0
0x4b99: nop dword ptr [rax]
0x4ba0: test rcx,rcx
0x4ba3: je 0x4bc8
0x4ba5: mov rax,rcx
0x4ba8: mul r9
0x4bab: seto dl
0x4bae: test rax,rax
0x4bb1: movzx edx,dl
0x4bb4: js 0x4bbb
0x4bb6: test rdx,rdx
0x4bb9: je 0x4b8a
0x4bbb: sub rsp,8
0x4bbf: call 0x4ce0
0x4bc4: nop dword ptr [rax]
0x4bc8: xor edx,edx
0x4bca: mov eax,0x80
0x4bcf: xor r8d,r8d
0x4bd2: div r9
0x4bd5: test rax,rax
0x4bd8: sete r8b
0x4bdc: lea rcx,[r8 + rax]
0x4be0: jmp 0x4ba5
0x4be2: nop dword ptr [rax]
0x4be6: nop word ptr cs:[rax + rax]
0x4bf0: test rdi,rdi
0x4bf3: mov rax,qword ptr [rsi]
0x4bf6: je 0x4c20
0x4bf8: movabs rdx,0x5555555555555553
0x4c02: cmp rax,rdx
0x4c05: ja 0x4c31
0x4c07: mov rdx,rax
0x4c0a: shr rdx,1
0x4c0d: lea rax,[rdx + rax + 1]
0x4c12: mov qword ptr [rsi],rax
0x4c15: mov rsi,rax
0x4c18: jmp 0x4af0
0x4c1d: nop dword ptr [rax]
0x4c20: test rax,rax
0x4c23: mov edx,0x80
0x4c28: cmove rax,rdx
0x4c2c: test rax,rax
0x4c2f: jns 0x4c12
0x4c31: sub rsp,8
0x4c35: call 0x4ce0
0x4c3a: nop word ptr [rax + rax]
0x4c40: push rbx
0x4c41: mov rbx,rdi
0x4c44: call 0x4a90
0x4c49: mov rdx,rbx
0x4c4c: xor esi,esi
0x4c4e: mov rdi,rax
0x4c51: pop rbx
0x4c52: jmp 0x15e0
0x4c57: nop word ptr [rax + rax]
0x4c60: mov rax,rdi
0x4c63: sub rsp,8
0x4c67: mul rsi
0x4c6a: seto dl
0x4c6d: test rax,rax
0x4c70: js 0x4c89
0x4c72: movzx edx,dl
0x4c75: test rdx,rdx
0x4c78: jne 0x4c89
0x4c7a: call 0x1630
0x4c7f: test rax,rax
0x4c82: je 0x4c89
0x4c84: add rsp,8
0x4c88: ret 
0x4c89: call 0x4ce0
0x4c8e: nop 
0x4c90: push rbp
0x4c91: push rbx
0x4c92: mov rbp,rdi
0x4c95: mov rdi,rsi
0x4c98: mov rbx,rsi
0x4c9b: sub rsp,8
0x4c9f: call 0x4a90
0x4ca4: add rsp,8
0x4ca8: mov rdx,rbx
0x4cab: mov rsi,rbp
0x4cae: pop rbx
0x4caf: pop rbp
0x4cb0: mov rdi,rax
0x4cb3: jmp 0x1650
0x4cb8: nop dword ptr [rax + rax]
0x4cc0: push rbx
0x4cc1: mov rbx,rdi
0x4cc4: call 0x1560
0x4cc9: mov rdi,rbx
0x4ccc: lea rsi,[rax + 1]
0x4cd0: pop rbx
0x4cd1: jmp 0x4c90
0x4cd3: nop word ptr cs:[rax + rax]
0x4cdd: nop dword ptr [rax]
0x4d10: call 0x14a0
0x4d15: nop word ptr cs:[rax + rax]
0x4d1f: nop 
0x4d37: nop word ptr [rax + rax]
0x4d4f: nop 
0x4dce: call 0x1590
0x4dd3: nop word ptr cs:[rax + rax]
0x4ddd: nop dword ptr [rax]
0x4de0: push r12
0x4de2: push rbp
0x4de3: mov rbp,rdi
0x4de6: push rbx
0x4de7: call 0x14e0
0x4dec: mov ebx,dword ptr [rbp]
0x4def: mov rdi,rbp
0x4df2: mov r12,rax
0x4df5: call 0x4f00
0x4dfa: and ebx,0x20
0x4dfd: test ebx,ebx
0x4dff: jne 0x4e18
0x4e01: test eax,eax
0x4e03: je 0x4e0f
0x4e05: test r12,r12
0x4e08: mov eax,0xffffffff
0x4e0d: je 0x4e48
0x4e0f: pop rbx
0x4e10: pop rbp
0x4e11: pop r12
0x4e13: ret 
0x4e14: nop dword ptr [rax]
0x4e18: test eax,eax
0x4e1a: jne 0x4e38
0x4e1c: call 0x14b0
0x4e21: mov dword ptr [rax],0
0x4e27: mov eax,0xffffffff
0x4e2c: pop rbx
0x4e2d: pop rbp
0x4e2e: pop r12
0x4e30: ret 
0x4e31: nop dword ptr [rax]
0x4e38: pop rbx
0x4e39: mov eax,0xffffffff
0x4e3e: pop rbp
0x4e3f: pop r12
0x4e41: ret 
0x4e42: nop word ptr [rax + rax]
0x4e48: call 0x14b0
0x4e4d: cmp dword ptr [rax],9
0x4e50: pop rbx
0x4e51: pop rbp
0x4e52: pop r12
0x4e54: setne al
0x4e57: movzx eax,al
0x4e5a: neg eax
0x4e5c: ret 
0x4e5d: nop dword ptr [rax]
0x4e9a: nop word ptr [rax + rax]
0x4ee6: nop word ptr cs:[rax + rax]
0x4efc: nop dword ptr [rax]
0x4f00: push r12
0x4f02: push rbp
0x4f03: push rbx
0x4f04: mov rbx,rdi
0x4f07: call 0x1660
0x4f0c: test eax,eax
0x4f0e: mov rdi,rbx
0x4f11: js 0x4f67
0x4f13: call 0x16d0
0x4f18: test eax,eax
0x4f1a: jne 0x4f48
0x4f1c: mov rdi,rbx
0x4f1f: call 0x4f80
0x4f24: test eax,eax
0x4f26: je 0x4f64
0x4f28: call 0x14b0
0x4f2d: mov r12d,dword ptr [rax]
0x4f30: mov rdi,rbx
0x4f33: mov rbp,rax
0x4f36: call 0x1510
0x4f3b: test r12d,r12d
0x4f3e: jne 0x4f70
0x4f40: pop rbx
0x4f41: pop rbp
0x4f42: pop r12
0x4f44: ret 
0x4f45: nop dword ptr [rax]
0x4f48: mov rdi,rbx
0x4f4b: call 0x1660
0x4f50: xor esi,esi
0x4f52: mov edx,1
0x4f57: mov edi,eax
0x4f59: call 0x15d0
0x4f5e: cmp rax,-1
0x4f62: jne 0x4f1c
0x4f64: mov rdi,rbx
0x4f67: pop rbx
0x4f68: pop rbp
0x4f69: pop r12
0x4f6b: jmp 0x1510
0x4f70: mov dword ptr [rbp],r12d
0x4f74: mov eax,0xffffffff
0x4f79: jmp 0x4f40
0x4f7b: nop dword ptr [rax + rax]
0x4f80: test rdi,rdi
0x4f83: push rbx
0x4f84: mov rbx,rdi
0x4f87: je 0x4f9a
0x4f89: call 0x16d0
0x4f8e: test eax,eax
0x4f90: je 0x4f9a
0x4f92: test dword ptr [rbx],0x100
0x4f98: jne 0x4fa8
0x4f9a: mov rdi,rbx
0x4f9d: pop rbx
0x4f9e: jmp 0x16a0
0x4fa3: nop dword ptr [rax + rax]
0x4fa8: mov rdi,rbx
0x4fab: mov edx,1
0x4fb0: xor esi,esi
0x4fb2: call 0x4fc0
0x4fb7: mov rdi,rbx
0x4fba: pop rbx
0x4fbb: jmp 0x16a0
0x4fc0: mov rax,qword ptr [rdi + 8]
0x4fc4: cmp qword ptr [rdi + 0x10],rax
0x4fc8: je 0x4fd0
0x4fca: jmp 0x1730
0x4fcf: nop 
0x4fd0: mov rax,qword ptr [rdi + 0x20]
0x4fd4: cmp qword ptr [rdi + 0x28],rax
0x4fd8: jne 0x4fca
0x4fda: cmp qword ptr [rdi + 0x48],0
0x4fdf: jne 0x4fca
0x4fe1: push r12
0x4fe3: push rbp
0x4fe4: mov r12d,edx
0x4fe7: push rbx
0x4fe8: mov rbp,rsi
0x4feb: mov rbx,rdi
0x4fee: call 0x1660
0x4ff3: mov edx,r12d
0x4ff6: mov rsi,rbp
0x4ff9: mov edi,eax
0x4ffb: call 0x15d0
0x5000: cmp rax,-1
0x5004: je 0x5012
0x5006: and dword ptr [rbx],0xffffffef
0x5009: mov qword ptr [rbx + 0x90],rax
0x5010: xor eax,eax
0x5012: pop rbx
0x5013: pop rbp
0x5014: pop r12
0x5016: ret 
0x5017: nop word ptr [rax + rax]
0x5020: push r15
0x5022: push r14
0x5024: mov r15,rdx
0x5027: push r13
0x5029: push r12
0x502b: lea r12,[rip + 0x202ade]
0x5032: push rbp
0x5033: lea rbp,[rip + 0x202ade]
0x503a: push rbx
0x503b: mov r13d,edi
0x503e: mov r14,rsi
0x5041: sub rbp,r12
0x5044: sub rsp,8
0x5048: sar rbp,3
0x504c: call 0x1458
0x5051: test rbp,rbp
0x5054: je 0x5076
0x5056: xor ebx,ebx
0x5058: nop dword ptr [rax + rax]
0x5060: mov rdx,r15
0x5063: mov rsi,r14
0x5066: mov edi,r13d
0x5069: call qword ptr [r12 + rbx*8]
0x506d: add rbx,1
0x5071: cmp rbp,rbx
0x5074: jne 0x5060
0x5076: add rsp,8
0x507a: pop rbx
0x507b: pop rbp
0x507c: pop r12
0x507e: pop r13
0x5080: pop r14
0x5082: pop r15
0x5084: ret 
0x5085: nop 
0x5086: nop word ptr cs:[rax + rax]
0x5090: ret 
0x5092: nop word ptr cs:[rax + rax]
0x509c: nop dword ptr [rax]
0x50b0: sub rsp,8
0x50b4: add rsp,8
0x50b8: ret 
