0x2020: sub rsp,8
0x2024: mov rax,qword ptr [rip + 0x211fb5]
0x202b: test rax,rax
0x202e: je 0x2032
0x2030: call rax
0x2032: add rsp,8
0x2036: ret 
0x2040: push qword ptr [rip + 0x211cca]
0x2046: jmp qword ptr [rip + 0x211ccc]
0x204c: nop dword ptr [rax]
0x2056: push 0
0x205b: jmp 0x2040
0x2066: push 1
0x206b: jmp 0x2040
0x2076: push 2
0x207b: jmp 0x2040
0x2086: push 3
0x208b: jmp 0x2040
0x2096: push 4
0x209b: jmp 0x2040
0x20a6: push 5
0x20ab: jmp 0x2040
0x20b6: push 6
0x20bb: jmp 0x2040
0x20c6: push 7
0x20cb: jmp 0x2040
0x20d0: jmp qword ptr [rip + 0x211c8a]
0x20d6: push 8
0x20db: jmp 0x2040
0x20e0: jmp qword ptr [rip + 0x211c82]
0x20e6: push 9
0x20eb: jmp 0x2040
0x20f6: push 0xa
0x20fb: jmp 0x2040
0x2106: push 0xb
0x210b: jmp 0x2040
0x2116: push 0xc
0x211b: jmp 0x2040
0x2126: push 0xd
0x212b: jmp 0x2040
0x2136: push 0xe
0x213b: jmp 0x2040
0x2140: jmp qword ptr [rip + 0x211c52]
0x2146: push 0xf
0x214b: jmp 0x2040
0x2156: push 0x10
0x215b: jmp 0x2040
0x2166: push 0x11
0x216b: jmp 0x2040
0x2176: push 0x12
0x217b: jmp 0x2040
0x2186: push 0x13
0x218b: jmp 0x2040
0x2196: push 0x14
0x219b: jmp 0x2040
0x21a6: push 0x15
0x21ab: jmp 0x2040
0x21b6: push 0x16
0x21bb: jmp 0x2040
0x21c0: jmp qword ptr [rip + 0x211c12]
0x21c6: push 0x17
0x21cb: jmp 0x2040
0x21d6: push 0x18
0x21db: jmp 0x2040
0x21e6: push 0x19
0x21eb: jmp 0x2040
0x21f0: jmp qword ptr [rip + 0x211bfa]
0x21f6: push 0x1a
0x21fb: jmp 0x2040
0x2206: push 0x1b
0x220b: jmp 0x2040
0x2216: push 0x1c
0x221b: jmp 0x2040
0x2226: push 0x1d
0x222b: jmp 0x2040
0x2230: jmp qword ptr [rip + 0x211bda]
0x2236: push 0x1e
0x223b: jmp 0x2040
0x2246: push 0x1f
0x224b: jmp 0x2040
0x2256: push 0x20
0x225b: jmp 0x2040
0x2266: push 0x21
0x226b: jmp 0x2040
0x2276: push 0x22
0x227b: jmp 0x2040
0x2286: push 0x23
0x228b: jmp 0x2040
0x2296: push 0x24
0x229b: jmp 0x2040
0x22a6: push 0x25
0x22ab: jmp 0x2040
0x22b6: push 0x26
0x22bb: jmp 0x2040
0x22c6: push 0x27
0x22cb: jmp 0x2040
0x22d6: push 0x28
0x22db: jmp 0x2040
0x22e6: push 0x29
0x22eb: jmp 0x2040
0x22f6: push 0x2a
0x22fb: jmp 0x2040
0x2306: push 0x2b
0x230b: jmp 0x2040
0x2316: push 0x2c
0x231b: jmp 0x2040
0x2326: push 0x2d
0x232b: jmp 0x2040
0x2336: push 0x2e
0x233b: jmp 0x2040
0x2346: push 0x2f
0x234b: jmp 0x2040
0x2356: push 0x30
0x235b: jmp 0x2040
0x2366: push 0x31
0x236b: jmp 0x2040
0x2376: push 0x32
0x237b: jmp 0x2040
0x2386: push 0x33
0x238b: jmp 0x2040
0x2396: push 0x34
0x239b: jmp 0x2040
0x23a6: push 0x35
0x23ab: jmp 0x2040
0x23b6: push 0x36
0x23bb: jmp 0x2040
0x23c6: push 0x37
0x23cb: jmp 0x2040
0x23d6: push 0x38
0x23db: jmp 0x2040
0x23e6: push 0x39
0x23eb: jmp 0x2040
0x23f6: push 0x3a
0x23fb: jmp 0x2040
0x2406: push 0x3b
0x240b: jmp 0x2040
0x2416: push 0x3c
0x241b: jmp 0x2040
0x2426: push 0x3d
0x242b: jmp 0x2040
0x2436: push 0x3e
0x243b: jmp 0x2040
0x2446: push 0x3f
0x244b: jmp 0x2040
0x2456: push 0x40
0x245b: jmp 0x2040
0x2466: push 0x41
0x246b: jmp 0x2040
0x2476: push 0x42
0x247b: jmp 0x2040
0x2486: push 0x43
0x248b: jmp 0x2040
0x2496: push 0x44
0x249b: jmp 0x2040
0x24a6: push 0x45
0x24ab: jmp 0x2040
0x24b6: push 0x46
0x24bb: jmp 0x2040
0x24c6: push 0x47
0x24cb: jmp 0x2040
0x24d6: push 0x48
0x24db: jmp 0x2040
0x24e6: push 0x49
0x24eb: jmp 0x2040
0x24f6: push 0x4a
0x24fb: jmp 0x2040
0x2506: push 0x4b
0x250b: jmp 0x2040
0x2516: push 0x4c
0x251b: jmp 0x2040
0x2526: push 0x4d
0x252b: jmp 0x2040
0x2536: push 0x4e
0x253b: jmp 0x2040
0x2546: push 0x4f
0x254b: jmp 0x2040
0x2556: push 0x50
0x255b: jmp 0x2040
0x2566: push 0x51
0x256b: jmp 0x2040
0x2576: push 0x52
0x257b: jmp 0x2040
0x2586: push 0x53
0x258b: jmp 0x2040
0x2596: push 0x54
0x259b: jmp 0x2040
0x25a6: push 0x55
0x25ab: jmp 0x2040
0x25b0: jmp qword ptr [rip + 0x211a3a]
0x271f: nop 
0x2766: nop word ptr cs:[rax + rax]
0x27a2: nop word ptr [rax + rax]
0x2805: nop dword ptr [rax]
0x2867: nop word ptr [rax + rax]
0x287c: nop dword ptr [rax]
0x289c: nop dword ptr [rax]
0x28ba: nop word ptr [rax + rax]
0x28f9: nop dword ptr [rax]
0x2923: nop dword ptr [rax + rax]
0x2934: nop dword ptr [rax]
0x2944: nop dword ptr [rax]
0x2954: nop dword ptr [rax]
0x2983: nop dword ptr [rax + rax]
0x2a72: nop word ptr [rax + rax]
0x2c10: mov dword ptr [rip + 0x2117de],1
0x2c1a: mov qword ptr [r15 + r14*8],0
0x2c22: jmp 0x2baf
0x2fa9: nop dword ptr [rax]
0x32d5: nop dword ptr [rax]
0x336e: xor r14d,r14d
0x3415: mov rax,qword ptr [rip + 0x210f54]
0x341c: jmp 0x3230
0x346d: mov rdi,r8
0x3470: call 0x2070
0x3475: mov rdi,r12
0x3478: call 0x2070
0x347d: mov rdi,qword ptr [rsp + 0x68]
0x3482: call 0x2070
0x3487: mov qword ptr [rsp + 0x58],rbx
0x3516: test byte ptr [rbx + 0x28],1
0x351a: jne 0x3522
0x351c: test byte ptr [rbp + 0x28],1
0x3520: jne 0x3568
0x353f: mov rax,qword ptr [rsp + 0x20]
0x3544: cmp rax,r10
0x3547: jb 0x3568
0x3549: cmp r10,1
0x354d: je 0x3a29
0x3553: cmp rax,r10
0x3556: je 0x39fb
0x355c: cmp byte ptr [r15 + rcx - 1],0x2f
0x3562: je 0x39fb
0x3582: mov rsi,qword ptr [rbx + 8]
0x3586: mov rdx,qword ptr [rsp + 0x48]
0x358b: mov edi,1
0x3590: call 0x2390
0x3595: test eax,eax
0x3597: jne 0x2f90
0x359d: mov rax,qword ptr [rsp + 0x50]
0x35a2: mov rax,qword ptr [rax]
0x35a5: cmp qword ptr [rsp + 0xa0],rax
0x35ad: jne 0x2f90
0x35b3: jmp 0x33d0
0x395d: jmp 0x2c91
0x39a0: jmp 0x3309
0x39ec: mov dword ptr [rip + 0x210a02],1
0x39f6: jmp 0x3182
0x39fb: mov rdx,r10
0x39fe: mov rsi,r15
0x3a01: mov rdi,r9
0x3a04: mov qword ptr [rsp + 0x28],r10
0x3a09: call 0x20c0
0x3a0e: mov r10,qword ptr [rsp + 0x28]
0x3a13: test eax,eax
0x3a15: cmovne r10,qword ptr [rsp + 0x18]
0x3a1b: cmove rbx,rbp
0x3a1f: mov qword ptr [rsp + 0x18],r10
0x3a24: jmp 0x3568
0x3a29: mov qword ptr [rsp + 0x18],1
0x3a32: mov rbx,rbp
0x3a35: jmp 0x3568
0x3a69: mov dword ptr [rip + 0x210985],1
0x3a73: jmp 0x3432
0x3b09: mov edi,1
0x3b0e: call 0x4d70
0x3b69: jmp 0x2a06
0x3b8e: call 0x21f0
0x3b93: nop word ptr cs:[rax + rax]
0x3b9d: nop dword ptr [rax]
0x3bca: hlt 
0x3bcb: nop dword ptr [rax + rax]
0x3bd0: lea rdi,[rip + 0x210719]
0x3bd7: push rbp
0x3bd8: lea rax,[rip + 0x210711]
0x3bdf: cmp rax,rdi
0x3be2: mov rbp,rsp
0x3be5: je 0x3c00
0x3be7: mov rax,qword ptr [rip + 0x2103e2]
0x3bee: test rax,rax
0x3bf1: je 0x3c00
0x3bf3: pop rbp
0x3bf4: jmp rax
0x3bf6: nop word ptr cs:[rax + rax]
0x3c00: pop rbp
0x3c01: ret 
0x3c02: nop dword ptr [rax]
0x3c06: nop word ptr cs:[rax + rax]
0x3c10: lea rdi,[rip + 0x2106d9]
0x3c17: lea rsi,[rip + 0x2106d2]
0x3c1e: push rbp
0x3c1f: sub rsi,rdi
0x3c22: mov rbp,rsp
0x3c25: sar rsi,3
0x3c29: mov rax,rsi
0x3c2c: shr rax,0x3f
0x3c30: add rsi,rax
0x3c33: sar rsi,1
0x3c36: je 0x3c50
0x3c38: mov rax,qword ptr [rip + 0x2103a9]
0x3c3f: test rax,rax
0x3c42: je 0x3c50
0x3c44: pop rbp
0x3c45: jmp rax
0x3c47: nop word ptr [rax + rax]
0x3c50: pop rbp
0x3c51: ret 
0x3c52: nop dword ptr [rax]
0x3c56: nop word ptr cs:[rax + rax]
0x3c60: cmp byte ptr [rip + 0x2106e1],0
0x3c67: jne 0x3c98
0x3c69: cmp qword ptr [rip + 0x21037f],0
0x3c71: push rbp
0x3c72: mov rbp,rsp
0x3c75: je 0x3c83
0x3c77: mov rdi,qword ptr [rip + 0x21038a]
0x3c7e: call 0x25b0
0x3c83: call 0x3bd0
0x3c88: mov byte ptr [rip + 0x2106b9],1
0x3c8f: pop rbp
0x3c90: ret 
0x3c91: nop dword ptr [rax]
0x3c98: ret 
0x3c9a: nop word ptr [rax + rax]
0x3ca0: push rbp
0x3ca1: mov rbp,rsp
0x3ca4: pop rbp
0x3ca5: jmp 0x3c10
0x3caa: nop word ptr [rax + rax]
0x3cb2: nop word ptr [rax + rax]
0x3cd4: nop 
0x3cd6: nop word ptr cs:[rax + rax]
0x3cec: nop dword ptr [rax]
0x3cfa: nop word ptr [rax + rax]
0x3d4e: nop 
0x3d8f: nop 
0x3d99: nop dword ptr [rax]
0x3dac: nop dword ptr [rax]
0x3db5: nop 
0x3db6: nop word ptr cs:[rax + rax]
0x3e8a: nop word ptr [rax + rax]
0x3eaa: nop word ptr [rax + rax]
0x3ebb: nop dword ptr [rax + rax]
0x3ee8: nop dword ptr [rax + rax]
0x3f02: nop dword ptr [rax]
0x3f06: nop word ptr cs:[rax + rax]
0x3f66: nop word ptr cs:[rax + rax]
0x408e: nop 
0x4145: nop dword ptr [rax]
0x416d: nop dword ptr [rax]
0x419a: call 0x21f0
0x419f: nop 
0x4262: nop dword ptr [rax]
0x4266: nop word ptr cs:[rax + rax]
0x42bc: nop dword ptr [rax]
0x4348: call 0x21f0
0x434d: nop dword ptr [rax]
0x43d5: nop dword ptr [rax]
0x44a1: mov dword ptr [rip + 0x20ff4d],1
0x44ab: jmp 0x43ac
0x472d: nop dword ptr [rax]
0x47af: nop 
0x4811: nop dword ptr [rax]
0x482a: nop word ptr [rax + rax]
0x4863: nop dword ptr [rax + rax]
0x487d: nop dword ptr [rax]
0x4896: nop word ptr cs:[rax + rax]
0x48a8: nop dword ptr [rax + rax]
0x48ba: nop word ptr [rax + rax]
0x48cd: nop dword ptr [rax]
0x49eb: nop dword ptr [rax + rax]
0x4a0f: nop 
0x4a6e: nop 
0x4a7e: nop 
0x4b6f: nop 
0x4d66: call 0x21f0
0x4d6b: nop dword ptr [rax + rax]
0x5202: nop dword ptr [rax]
0x5206: nop word ptr cs:[rax + rax]
0x52ad: mov edi,1
0x52b2: call 0x4d70
0x52b7: nop word ptr [rax + rax]
0x531d: nop dword ptr [rax]
0x532b: nop dword ptr [rax + rax]
0x537b: nop dword ptr [rax + rax]
0x55a9: nop dword ptr [rax]
0x55ba: nop word ptr [rax + rax]
0x5675: jmp 0x5584
0x567a: nop word ptr [rax + rax]
0x56b7: jmp 0x5566
0x56bc: nop dword ptr [rax]
0x5709: jmp 0x5584
0x5733: call 0x21f0
0x5738: nop dword ptr [rax + rax]
0x5831: nop dword ptr [rax]
0x5853: mov r12,r13
0x5856: sub r12,r14
0x5859: cmp r12,1
0x585d: je 0x5a30
0x5863: cmp r12,2
0x5867: jne 0x5871
0x5869: cmp al,0x2e
0x586b: je 0x5b00
0x5871: cmp byte ptr [r15 - 1],0x2f
0x5876: je 0x5880
0x5878: mov byte ptr [r15],0x2f
0x587c: add r15,1
0x5880: lea rax,[r15 + r12]
0x5884: cmp rbx,rax
0x5887: ja 0x58ba
0x5889: sub rbx,rbp
0x588c: sub r15,rbp
0x588f: mov rdi,rbp
0x5892: lea rax,[r12 + rbx + 1]
0x5897: add rbx,0x1000
0x589e: cmp r12,0x1000
0x58a5: cmovge rbx,rax
0x58a9: mov rsi,rbx
0x58ac: call 0xae30
0x58b1: mov rbp,rax
0x58b4: add rbx,rax
0x58b7: add r15,rax
0x58ba: mov rdi,r15
0x58bd: mov rdx,r12
0x58c0: mov rsi,r14
0x58c3: call 0x2360
0x58c8: cmp dword ptr [rsp + 4],2
0x58cd: lea r15,[r15 + r12]
0x58d1: mov byte ptr [r15],0
0x58d5: jne 0x5990
0x58db: cmp byte ptr [rsp + 0x1b],0
0x58e0: je 0x5990
0x58e6: mov dword ptr [rsp + 0x58],0
0x58ee: cmp byte ptr [r13],0
0x58f3: je 0x5900
0x58f5: cmp dword ptr [rsp + 4],2
0x58fa: jne 0x5d57
0x5900: mov r14,r13
0x5903: movzx eax,byte ptr [r14]
0x5907: test al,al
0x5909: jne 0x5810
0x5956: mov rdi,rax
0x5959: call 0x6b90
0x595e: nop 
0x598c: nop dword ptr [rax]
0x5990: mov eax,dword ptr [rsp + 0x1c]
0x5994: mov rdx,qword ptr [rsp + 8]
0x5999: mov rsi,rbp
0x599c: mov edi,1
0x59a1: test eax,eax
0x59a3: je 0x5a60
0x59a9: call 0x2390
0x59ae: test eax,eax
0x59b0: setne al
0x59b3: test al,al
0x59b5: je 0x5a40
0x59bb: call 0x20b0
0x59c0: mov r14,rax
0x59c3: mov edx,dword ptr [rax]
0x59c5: mov eax,dword ptr [rsp + 4]
0x59c9: test eax,eax
0x59cb: je 0x59fe
0x59cd: cmp eax,1
0x59d0: jne 0x58e6
0x59d6: lea rsi,[rip + 0xa6f1]
0x59dd: mov rdi,r13
0x59e0: mov dword ptr [rsp + 0x38],edx
0x59e4: call 0x22e0
0x59e9: cmp byte ptr [r13 + rax],0
0x59ef: mov edx,dword ptr [rsp + 0x38]
0x59f3: jne 0x59fe
0x59f5: cmp edx,2
0x59f8: je 0x5900
0x59fe: mov r12,r14
0x5a01: mov rdi,qword ptr [rsp + 0x28]
0x5a06: mov dword ptr [rsp + 4],edx
0x5a0a: call 0x2070
0x5a0f: mov rdi,rbp
0x5a12: call 0x2070
0x5a17: cmp qword ptr [rsp + 0x10],0
0x5a1d: mov edx,dword ptr [rsp + 4]
0x5a21: je 0x5adc
0x5a27: jmp 0x5aca
0x5a2c: nop dword ptr [rax]
0x5a30: cmp al,0x2e
0x5a32: jne 0x5871
0x5a38: jmp 0x5900
0x5a3d: nop dword ptr [rax]
0x5a40: mov eax,dword ptr [rsp + 0x58]
0x5a44: and eax,0xf000
0x5a49: cmp eax,0xa000
0x5a4e: je 0x5a70
0x5a50: cmp eax,0x4000
0x5a55: je 0x5900
0x5a5b: jmp 0x58ee
0x5a60: call 0x21c0
0x5a65: test eax,eax
0x5a67: setne al
0x5a6a: jmp 0x59b3
0x5a6f: nop 
0x5a70: cmp qword ptr [rsp + 0x10],0
0x5a76: je 0x5c26
0x5a7c: mov rdx,qword ptr [rsp + 8]
0x5a81: mov rsi,qword ptr [rsp + 0x20]
0x5a86: mov rdi,qword ptr [rsp + 0x10]
0x5a8b: call 0x6070
0x5a90: test al,al
0x5a92: je 0x5b50
0x5a98: cmp dword ptr [rsp + 4],2
0x5a9d: je 0x5900
0x5aa3: call 0x20b0
0x5aa8: mov edx,0x28
0x5aad: mov r12,rax
0x5ab0: mov rdi,qword ptr [rsp + 0x28]
0x5ab5: mov dword ptr [rsp + 4],edx
0x5ab9: call 0x2070
0x5abe: mov rdi,rbp
0x5ac1: call 0x2070
0x5ac6: mov edx,dword ptr [rsp + 4]
0x5aca: mov rdi,qword ptr [rsp + 0x10]
0x5acf: mov dword ptr [rsp + 4],edx
0x5ad3: call 0x6b90
0x5ad8: mov edx,dword ptr [rsp + 4]
0x5adc: mov dword ptr [r12],edx
0x5ae0: xor ebp,ebp
0x5ae2: jmp 0x5960
0x5ae7: nop word ptr [rax + rax]
0x5af8: nop dword ptr [rax + rax]
0x5b00: cmp byte ptr [r14 + 1],0x2e
0x5b05: jne 0x5871
0x5b0b: lea rax,[rbp + 1]
0x5b0f: mov r14,r13
0x5b12: cmp r15,rax
0x5b15: jbe 0x57fb
0x5b1b: lea rax,[r15 - 1]
0x5b1f: cmp rbp,rax
0x5b22: jae 0x5d69
0x5b28: cmp byte ptr [r15 - 2],0x2f
0x5b2d: mov r15,rax
0x5b30: je 0x57fb
0x5b36: sub r15,1
0x5b3a: cmp rbp,r15
0x5b3d: je 0x5900
0x5b43: cmp byte ptr [r15 - 1],0x2f
0x5b48: je 0x5900
0x5b4e: jmp 0x5b36
0x5b50: mov rdx,qword ptr [rsp + 8]
0x5b55: mov rsi,qword ptr [rsp + 0x20]
0x5b5a: mov rdi,qword ptr [rsp + 0x10]
0x5b5f: call 0x5fe0
0x5b64: mov rsi,qword ptr [rsp + 0x70]
0x5b69: mov rdi,rbp
0x5b6c: call 0xc4f0
0x5b71: test rax,rax
0x5b74: mov r14,rax
0x5b77: je 0x5ce2
0x5b7d: mov rdi,rax
0x5b80: call 0x21b0
0x5b85: mov rdi,r13
0x5b88: mov r12,rax
0x5b8b: mov qword ptr [rsp + 0x20],rax
0x5b90: call 0x21b0
0x5b95: cmp qword ptr [rsp + 0x30],0
0x5b9b: mov rdx,rax
0x5b9e: lea rcx,[r12 + rdx + 1]
0x5ba3: je 0x5c9f
0x5ba9: cmp qword ptr [rsp + 0x30],rcx
0x5bae: jae 0x5bd1
0x5bb0: mov rdi,qword ptr [rsp + 0x28]
0x5bb5: mov rsi,rcx
0x5bb8: mov qword ptr [rsp + 0x38],rdx
0x5bbd: mov qword ptr [rsp + 0x30],rcx
0x5bc2: call 0xae30
0x5bc7: mov rdx,qword ptr [rsp + 0x38]
0x5bcc: mov qword ptr [rsp + 0x28],rax
0x5bd1: mov r12,qword ptr [rsp + 0x28]
0x5bd6: mov rdi,qword ptr [rsp + 0x20]
0x5bdb: add rdx,1
0x5bdf: mov rsi,r13
0x5be2: add rdi,r12
0x5be5: mov r13,r12
0x5be8: call 0x2490
0x5bed: mov rdx,qword ptr [rsp + 0x20]
0x5bf2: mov rsi,r14
0x5bf5: mov rdi,r12
0x5bf8: call 0x2360
0x5bfd: cmp byte ptr [r14],0x2f
0x5c01: mov qword ptr [rsp + 0x20],r12
0x5c06: lea rax,[rbp + 1]
0x5c0a: je 0x5d04
0x5c10: cmp r15,rax
0x5c13: ja 0x5d22
0x5c19: mov rdi,r14
0x5c1c: call 0x2070
0x5c21: jmp 0x5900
0x5c26: lea r8,[rip + 0x1833]
0x5c2d: lea rcx,[rip + 0x17ec]
0x5c34: xor esi,esi
0x5c36: lea rdx,[rip + 0x1773]
0x5c3d: mov edi,7
0x5c42: call 0x6940
0x5c47: test rax,rax
0x5c4a: mov qword ptr [rsp + 0x10],rax
0x5c4f: jne 0x5a7c
0x5c55: call 0xb020
0x5c5a: nop word ptr [rax + rax]
0x5c9f: cmp rcx,0x1000
0x5ca6: mov eax,0x1000
0x5cab: mov qword ptr [rsp + 0x38],rdx
0x5cb0: cmovae rax,rcx
0x5cb4: mov rdi,rax
0x5cb7: mov qword ptr [rsp + 0x30],rax
0x5cbc: call 0xadd0
0x5cc1: mov rdx,qword ptr [rsp + 0x38]
0x5cc6: mov qword ptr [rsp + 0x28],rax
0x5ccb: jmp 0x5bd1
0x5ce2: call 0x20b0
0x5ce7: cmp dword ptr [rsp + 4],2
0x5cec: mov r14,rax
0x5cef: mov edx,dword ptr [rax]
0x5cf1: jne 0x5cfc
0x5cf3: cmp edx,0xc
0x5cf6: jne 0x5900
0x5cfc: mov r12,r14
0x5cff: jmp 0x5ab0
0x5d04: mov byte ptr [rbp],0x2f
0x5d08: mov r15,rax
0x5d0b: jmp 0x5c19
0x5d22: lea rax,[r15 - 1]
0x5d26: cmp rbp,rax
0x5d29: jae 0x5d32
0x5d2b: cmp byte ptr [r15 - 2],0x2f
0x5d30: jne 0x5d3d
0x5d32: mov r15,rax
0x5d35: jmp 0x5c19
0x5d3a: mov rax,r15
0x5d3d: lea r15,[rax - 1]
0x5d41: cmp rbp,r15
0x5d44: je 0x5c19
0x5d4a: cmp byte ptr [r15 - 1],0x2f
0x5d4f: je 0x5c19
0x5d55: jmp 0x5d3a
0x5d57: call 0x20b0
0x5d5c: mov edx,0x14
0x5d61: mov r12,rax
0x5d64: jmp 0x5a01
0x5d69: mov r15,rax
0x5d6c: jmp 0x57fb
0x5d71: call 0x21f0
0x5d76: nop word ptr cs:[rax + rax]
0x5d80: mov qword ptr [rip + 0x20e699],rdi
0x5d87: ret 
0x5d88: nop dword ptr [rax + rax]
0x5d90: mov byte ptr [rip + 0x20e681],dil
0x5d97: ret 
0x5d98: nop dword ptr [rax + rax]
0x5da0: push rbp
0x5da1: push rbx
0x5da2: sub rsp,8
0x5da6: mov rdi,qword ptr [rip + 0x20e55b]
0x5dad: call 0xc970
0x5db2: test eax,eax
0x5db4: je 0x5dcc
0x5db6: call 0x20b0
0x5dbb: cmp byte ptr [rip + 0x20e656],0
0x5dc2: mov rbx,rax
0x5dc5: je 0x5de3
0x5dc7: cmp dword ptr [rax],0x20
0x5dca: jne 0x5de3
0x5dcc: mov rdi,qword ptr [rip + 0x20e56d]
0x5dd3: call 0xc970
0x5dd8: test eax,eax
0x5dda: jne 0x5e22
0x5ddc: add rsp,8
0x5de0: pop rbx
0x5de1: pop rbp
0x5de2: ret 
0x5de3: lea rsi,[rip + 0xa191]
0x5dea: xor edi,edi
0x5dec: mov edx,5
0x5df1: call 0x2190
0x5df6: mov rdi,qword ptr [rip + 0x20e623]
0x5dfd: mov rbp,rax
0x5e00: test rdi,rdi
0x5e03: je 0x5e2d
0x5e05: call 0xa310
0x5e0a: mov esi,dword ptr [rbx]
0x5e0c: lea rdx,[rip + 0xa174]
0x5e13: mov rcx,rax
0x5e16: mov r8,rbp
0x5e19: xor edi,edi
0x5e1b: xor eax,eax
0x5e1d: call 0x24a0
0x5e22: mov edi,dword ptr [rip + 0x20e440]
0x5e28: call 0x20d0
0x5e2d: mov esi,dword ptr [rbx]
0x5e2f: lea rdx,[rip + 0xae41]
0x5e36: mov rcx,rax
0x5e39: xor edi,edi
0x5e3b: xor eax,eax
0x5e3d: call 0x24a0
0x5e42: jmp 0x5e22
0x5e44: nop word ptr cs:[rax + rax]
0x5e4e: nop 
0x5e68: nop dword ptr [rax + rax]
0x5e9e: nop 
0x5ebd: nop dword ptr [rax]
0x5ecd: nop dword ptr [rax]
0x5f2a: nop word ptr [rax + rax]
0x5f57: nop word ptr [rax + rax]
0x5f8c: nop dword ptr [rax]
0x5f90: push rbx
0x5f91: mov rbx,rdi
0x5f94: call 0x21b0
0x5f99: cmp rax,1
0x5f9d: jbe 0x5faa
0x5f9f: cmp byte ptr [rbx + rax - 1],0x2f
0x5fa4: lea rdx,[rax - 1]
0x5fa8: je 0x5fb8
0x5faa: pop rbx
0x5fab: ret 
0x5fac: nop dword ptr [rax]
0x5fb0: mov rdx,rax
0x5fb3: nop dword ptr [rax + rax]
0x5fb8: cmp rdx,1
0x5fbc: je 0x5fd0
0x5fbe: cmp byte ptr [rbx + rdx - 1],0x2f
0x5fc3: lea rax,[rdx - 1]
0x5fc7: je 0x5fb0
0x5fc9: mov rax,rdx
0x5fcc: pop rbx
0x5fcd: ret 
0x5fce: nop 
0x5fd0: mov eax,1
0x5fd5: pop rbx
0x5fd6: ret 
0x5fd7: nop word ptr [rax + rax]
0x5fe0: test rdi,rdi
0x5fe3: je 0x6060
0x5fe5: push r13
0x5fe7: push r12
0x5fe9: mov r13,rdi
0x5fec: push rbp
0x5fed: push rbx
0x5fee: mov r12,rsi
0x5ff1: mov edi,0x18
0x5ff6: mov rbp,rdx
0x5ff9: sub rsp,8
0x5ffd: call 0xadd0
0x6002: mov rdi,r12
0x6005: mov rbx,rax
0x6008: call 0xb000
0x600d: mov qword ptr [rbx],rax
0x6010: mov rax,qword ptr [rbp + 8]
0x6014: mov rsi,rbx
0x6017: mov rdi,r13
0x601a: mov qword ptr [rbx + 8],rax
0x601e: mov rax,qword ptr [rbp]
0x6022: mov qword ptr [rbx + 0x10],rax
0x6026: call 0x7140
0x602b: test rax,rax
0x602e: je 0x6062
0x6030: cmp rbx,rax
0x6033: je 0x6050
0x6035: add rsp,8
0x6039: mov rdi,rbx
0x603c: pop rbx
0x603d: pop rbp
0x603e: pop r12
0x6040: pop r13
0x6042: jmp 0x7460
0x6047: nop word ptr [rax + rax]
0x6050: add rsp,8
0x6054: pop rbx
0x6055: pop rbp
0x6056: pop r12
0x6058: pop r13
0x605a: ret 
0x605b: nop dword ptr [rax + rax]
0x6060: ret 
0x6062: call 0xb020
0x6067: nop word ptr [rax + rax]
0x6070: sub rsp,0x28
0x6074: mov rax,qword ptr fs:[0x28]
0x607d: mov qword ptr [rsp + 0x18],rax
0x6082: xor eax,eax
0x6084: test rdi,rdi
0x6087: je 0x60ac
0x6089: mov rax,qword ptr [rdx + 8]
0x608d: mov qword ptr [rsp],rsi
0x6091: mov rsi,rsp
0x6094: mov qword ptr [rsp + 8],rax
0x6099: mov rax,qword ptr [rdx]
0x609c: mov qword ptr [rsp + 0x10],rax
0x60a1: call 0x66d0
0x60a6: test rax,rax
0x60a9: setne al
0x60ac: mov rcx,qword ptr [rsp + 0x18]
0x60b1: xor rcx,qword ptr fs:[0x28]
0x60ba: jne 0x60c1
0x60bc: add rsp,0x28
0x60c0: ret 
0x60c1: call 0x21f0
0x60c6: nop word ptr cs:[rax + rax]
0x612e: nop 
0x6163: nop dword ptr [rax]
0x6166: nop word ptr cs:[rax + rax]
0x6170: mov rax,rdi
0x6173: xor edx,edx
0x6175: ror rax,3
0x6179: div rsi
0x617c: mov rax,rdx
0x617f: ret 
0x6180: cmp rdi,rsi
0x6183: sete al
0x6186: ret 
0x6187: nop word ptr [rax + rax]
0x61b2: nop dword ptr [rax]
0x61b6: nop word ptr cs:[rax + rax]
0x621b: nop dword ptr [rax + rax]
0x627a: nop word ptr [rax + rax]
0x62b9: nop dword ptr [rax]
0x62c9: nop dword ptr [rax]
0x62de: nop 
0x62f4: movss xmm0,dword ptr [rdx + 8]
0x62f9: ucomiss xmm0,dword ptr [rip + 0x9d14]
0x6300: jbe 0x6350
0x6302: movss xmm1,dword ptr [rip + 0x9d0e]
0x630a: ucomiss xmm1,xmm0
0x630d: jbe 0x6350
0x630f: movss xmm1,dword ptr [rdx + 0xc]
0x6314: ucomiss xmm1,dword ptr [rip + 0x9d01]
0x631b: jbe 0x6350
0x631d: movss xmm1,dword ptr [rdx]
0x6321: ucomiss xmm1,dword ptr [rip + 0x9cf8]
0x6328: jb 0x6350
0x632a: addss xmm1,dword ptr [rip + 0x9ce2]
0x6332: movss xmm2,dword ptr [rdx + 4]
0x6337: ucomiss xmm2,xmm1
0x633a: jbe 0x6350
0x633c: movss xmm3,dword ptr [rip + 0x9ce0]
0x6344: ucomiss xmm3,xmm2
0x6347: jb 0x6350
0x6349: ucomiss xmm0,xmm1
0x634c: ja 0x6355
0x634e: nop 
0x6350: mov qword ptr [rdi],rcx
0x6353: xor eax,eax
0x6357: nop word ptr [rax + rax]
0x63a1: nop dword ptr [rax]
0x646c: nop dword ptr [rax]
0x647a: nop word ptr [rax + rax]
0x64a0: mov rax,qword ptr [rdi + 0x10]
0x64a4: ret 
0x64a5: nop 
0x64a6: nop word ptr cs:[rax + rax]
0x64b0: mov rax,qword ptr [rdi + 0x18]
0x64b4: ret 
0x64b5: nop 
0x64b6: nop word ptr cs:[rax + rax]
0x64c0: mov rax,qword ptr [rdi + 0x20]
0x64c4: ret 
0x64c5: nop 
0x64c6: nop word ptr cs:[rax + rax]
0x64d0: mov rsi,qword ptr [rdi]
0x64d3: mov rdi,qword ptr [rdi + 8]
0x64d7: xor eax,eax
0x64d9: cmp rsi,rdi
0x64dc: jae 0x6517
0x64de: nop 
0x64e0: cmp qword ptr [rsi],0
0x64e4: je 0x650c
0x64e6: mov rdx,qword ptr [rsi + 8]
0x64ea: mov ecx,1
0x64ef: test rdx,rdx
0x64f2: je 0x6505
0x64f4: nop dword ptr [rax]
0x64f8: mov rdx,qword ptr [rdx + 8]
0x64fc: add rcx,1
0x6500: test rdx,rdx
0x6503: jne 0x64f8
0x6505: cmp rax,rcx
0x6508: cmovb rax,rcx
0x650c: add rsi,0x10
0x6510: cmp rsi,rdi
0x6513: jb 0x64e0
0x6515: ret 
0x6517: ret 
0x6519: nop dword ptr [rax]
0x6520: mov rcx,qword ptr [rdi]
0x6523: mov r8,qword ptr [rdi + 8]
0x6527: xor edx,edx
0x6529: xor esi,esi
0x652b: cmp rcx,r8
0x652e: jae 0x6566
0x6530: cmp qword ptr [rcx],0
0x6534: je 0x655d
0x6536: mov rax,qword ptr [rcx + 8]
0x653a: add rsi,1
0x653e: add rdx,1
0x6542: test rax,rax
0x6545: je 0x655d
0x6547: nop word ptr [rax + rax]
0x6550: mov rax,qword ptr [rax + 8]
0x6554: add rdx,1
0x6558: test rax,rax
0x655b: jne 0x6550
0x655d: add rcx,0x10
0x6561: cmp rcx,r8
0x6564: jb 0x6530
0x6566: xor eax,eax
0x6568: cmp qword ptr [rdi + 0x18],rsi
0x656c: je 0x6570
0x656e: ret 
0x6570: cmp qword ptr [rdi + 0x20],rdx
0x6574: sete al
0x6577: ret 
0x6578: nop dword ptr [rax + rax]
0x6580: push r13
0x6582: push r12
0x6584: mov r12,rsi
0x6587: push rbp
0x6588: push rbx
0x6589: xor ebx,ebx
0x658b: sub rsp,8
0x658f: mov rsi,qword ptr [rdi]
0x6592: mov rcx,qword ptr [rdi + 0x20]
0x6596: mov rbp,qword ptr [rdi + 0x10]
0x659a: mov r13,qword ptr [rdi + 0x18]
0x659e: mov rdi,qword ptr [rdi + 8]
0x65a2: cmp rsi,rdi
0x65a5: jae 0x65e5
0x65a7: nop word ptr [rax + rax]
0x65b0: cmp qword ptr [rsi],0
0x65b4: je 0x65dc
0x65b6: mov rax,qword ptr [rsi + 8]
0x65ba: mov edx,1
0x65bf: test rax,rax
0x65c2: je 0x65d5
0x65c4: nop dword ptr [rax]
0x65c8: mov rax,qword ptr [rax + 8]
0x65cc: add rdx,1
0x65d0: test rax,rax
0x65d3: jne 0x65c8
0x65d5: cmp rbx,rdx
0x65d8: cmovb rbx,rdx
0x65dc: add rsi,0x10
0x65e0: cmp rsi,rdi
0x65e3: jb 0x65b0
0x65e5: lea rdx,[rip + 0x99a2]
0x65ec: mov esi,1
0x65f1: mov rdi,r12
0x65f4: xor eax,eax
0x65f6: call 0x2530
0x65fb: lea rdx,[rip + 0x99a4]
0x6602: xor eax,eax
0x6604: mov rcx,rbp
0x6607: mov esi,1
0x660c: mov rdi,r12
0x660f: call 0x2530
0x6614: test r13,r13
0x6617: js 0x6680
0x6619: pxor xmm0,xmm0
0x661d: test rbp,rbp
0x6620: cvtsi2sd xmm0,r13
0x6625: mulsd xmm0,qword ptr [rip + 0x9893]
0x662d: js 0x66a9
0x662f: pxor xmm1,xmm1
0x6633: cvtsi2sd xmm1,rbp
0x6638: divsd xmm0,xmm1
0x663c: lea rdx,[rip + 0x9995]
0x6643: mov rcx,r13
0x6646: mov rdi,r12
0x6649: mov esi,1
0x664e: mov eax,1
0x6653: call 0x2530
0x6658: add rsp,8
0x665c: mov rcx,rbx
0x665f: mov rdi,r12
0x6662: pop rbx
0x6663: pop rbp
0x6664: pop r12
0x6666: pop r13
0x6668: lea rdx,[rip + 0x994f]
0x666f: mov esi,1
0x6674: xor eax,eax
0x6676: jmp 0x2530
0x667b: nop dword ptr [rax + rax]
0x6680: mov rax,r13
0x6683: mov rdx,r13
0x6686: pxor xmm0,xmm0
0x668a: shr rax,1
0x668d: and edx,1
0x6690: or rax,rdx
0x6693: test rbp,rbp
0x6696: cvtsi2sd xmm0,rax
0x669b: addsd xmm0,xmm0
0x669f: mulsd xmm0,qword ptr [rip + 0x9819]
0x66a7: jns 0x662f
0x66a9: mov rax,rbp
0x66ac: pxor xmm1,xmm1
0x66b0: shr rax,1
0x66b3: and ebp,1
0x66b6: or rax,rbp
0x66b9: cvtsi2sd xmm1,rax
0x66be: addsd xmm1,xmm1
0x66c2: jmp 0x6638
0x66c7: nop word ptr [rax + rax]
0x66ec: nop dword ptr [rax]
0x6717: nop word ptr [rax + rax]
0x672b: nop dword ptr [rax + rax]
0x6730: cmp qword ptr [rdi + 0x20],0
0x6735: je 0x6763
0x6737: mov rdx,qword ptr [rdi]
0x673a: mov rcx,qword ptr [rdi + 8]
0x673e: cmp rdx,rcx
0x6741: jae 0x6768
0x6743: mov rax,qword ptr [rdx]
0x6746: test rax,rax
0x6749: jne 0x6766
0x674b: nop dword ptr [rax + rax]
0x6750: add rdx,0x10
0x6754: cmp rdx,rcx
0x6757: jae 0x6768
0x6759: mov rax,qword ptr [rdx]
0x675c: test rax,rax
0x675f: je 0x6750
0x6761: ret 
0x6763: xor eax,eax
0x6765: ret 
0x6766: ret 
0x6768: sub rsp,8
0x676c: call 0x20a0
0x6771: nop dword ptr [rax + rax]
0x6776: nop word ptr cs:[rax + rax]
0x6780: push rbp
0x6781: push rbx
0x6782: mov rbp,rdi
0x6785: mov rbx,rsi
0x6788: sub rsp,8
0x678c: call 0x6190
0x6791: mov rdx,rax
0x6794: mov rcx,rax
0x6797: mov rax,qword ptr [rdx]
0x679a: mov rdx,qword ptr [rdx + 8]
0x679e: cmp rax,rbx
0x67a1: je 0x67b9
0x67a3: nop dword ptr [rax + rax]
0x67a8: test rdx,rdx
0x67ab: je 0x67be
0x67ad: mov rax,qword ptr [rdx]
0x67b0: mov rdx,qword ptr [rdx + 8]
0x67b4: cmp rax,rbx
0x67b7: jne 0x67a8
0x67b9: test rdx,rdx
0x67bc: jne 0x67e8
0x67be: mov rdx,qword ptr [rbp + 8]
0x67c2: jmp 0x67d0
0x67c4: nop dword ptr [rax]
0x67c8: mov rax,qword ptr [rcx]
0x67cb: test rax,rax
0x67ce: jne 0x67db
0x67d0: add rcx,0x10
0x67d4: cmp rdx,rcx
0x67d7: ja 0x67c8
0x67d9: xor eax,eax
0x67db: add rsp,8
0x67df: pop rbx
0x67e0: pop rbp
0x67e1: ret 
0x67e2: nop word ptr [rax + rax]
0x67e8: mov rax,qword ptr [rdx]
0x67eb: add rsp,8
0x67ef: pop rbx
0x67f0: pop rbp
0x67f1: ret 
0x67f2: nop dword ptr [rax]
0x67f6: nop word ptr cs:[rax + rax]
0x6800: mov r9,qword ptr [rdi]
0x6803: cmp qword ptr [rdi + 8],r9
0x6807: jbe 0x6862
0x6809: xor r8d,r8d
0x680c: mov rcx,qword ptr [r9]
0x680f: test rcx,rcx
0x6812: je 0x684d
0x6814: cmp rdx,r8
0x6817: jbe 0x6857
0x6819: mov qword ptr [rsi + r8*8],rcx
0x681d: mov rcx,qword ptr [r9 + 8]
0x6821: lea rax,[r8 + 1]
0x6825: test rcx,rcx
0x6828: je 0x684a
0x682a: nop word ptr [rax + rax]
0x6830: cmp rdx,rax
0x6833: je 0x6860
0x6835: mov r8,qword ptr [rcx]
0x6838: add rax,1
0x683c: mov qword ptr [rsi + rax*8 - 8],r8
0x6841: mov rcx,qword ptr [rcx + 8]
0x6845: test rcx,rcx
0x6848: jne 0x6830
0x684a: mov r8,rax
0x684d: add r9,0x10
0x6851: cmp qword ptr [rdi + 8],r9
0x6855: ja 0x680c
0x6857: mov rax,r8
0x685a: ret 
0x685b: nop dword ptr [rax + rax]
0x6860: ret 
0x6862: xor eax,eax
0x6864: ret 
0x6865: nop 
0x6866: nop word ptr cs:[rax + rax]
0x6870: push r15
0x6872: push r14
0x6874: push r13
0x6876: push r12
0x6878: push rbp
0x6879: push rbx
0x687a: sub rsp,8
0x687e: mov r14,qword ptr [rdi]
0x6881: cmp qword ptr [rdi + 8],r14
0x6885: jbe 0x68d6
0x6887: mov r13,rdx
0x688a: mov r12,rsi
0x688d: mov r15,rdi
0x6890: xor ebp,ebp
0x6892: mov rdi,qword ptr [r14]
0x6895: test rdi,rdi
0x6898: je 0x68ba
0x689a: mov rbx,r14
0x689d: jmp 0x68a3
0x689f: nop 
0x68a0: mov rdi,qword ptr [rbx]
0x68a3: mov rsi,r13
0x68a6: call r12
0x68a9: test al,al
0x68ab: je 0x68c4
0x68ad: mov rbx,qword ptr [rbx + 8]
0x68b1: add rbp,1
0x68b5: test rbx,rbx
0x68b8: jne 0x68a0
0x68ba: add r14,0x10
0x68be: cmp qword ptr [r15 + 8],r14
0x68c2: ja 0x6892
0x68c4: add rsp,8
0x68c8: mov rax,rbp
0x68cb: pop rbx
0x68cc: pop rbp
0x68cd: pop r12
0x68cf: pop r13
0x68d1: pop r14
0x68d3: pop r15
0x68d5: ret 
0x68d6: xor ebp,ebp
0x68d8: jmp 0x68c4
0x68da: nop word ptr [rax + rax]
0x68e0: movzx ecx,byte ptr [rdi]
0x68e3: xor edx,edx
0x68e5: test cl,cl
0x68e7: je 0x690d
0x68e9: nop dword ptr [rax]
0x68f0: mov rax,rdx
0x68f3: add rdi,1
0x68f7: shl rax,5
0x68fb: sub rax,rdx
0x68fe: xor edx,edx
0x6900: add rax,rcx
0x6903: movzx ecx,byte ptr [rdi]
0x6906: div rsi
0x6909: test cl,cl
0x690b: jne 0x68f0
0x690d: mov rax,rdx
0x6910: ret 
0x6911: nop dword ptr [rax + rax]
0x6916: nop word ptr cs:[rax + rax]
0x6920: movabs rax,0x3f80000000000000
0x692a: mov byte ptr [rdi + 0x10],0
0x692e: mov qword ptr [rdi],rax
0x6931: movabs rax,0x3fb4fdf43f4ccccd
0x693b: mov qword ptr [rdi + 8],rax
0x693f: ret 
0x699c: mov qword ptr [rax + 0x28],r15
0x69a0: call 0x62e0
0x69a5: test al,al
0x69a7: je 0x6a30
0x69ad: cmp byte ptr [r15 + 0x10],0
0x69b2: je 0x6ab0
0x6a2f: nop 
0x6a4c: nop dword ptr [rax]
0x6aaf: nop 
0x6ab0: test rbp,rbp
0x6ab3: movss xmm1,dword ptr [r15 + 8]
0x6ab9: jns 0x6a71
0x6ad6: nop word ptr cs:[rax + rax]
0x6af4: nop 
0x6af6: nop word ptr cs:[rax + rax]
0x6b00: push r12
0x6b02: push rbp
0x6b03: mov rbp,rdi
0x6b06: push rbx
0x6b07: mov r12,qword ptr [rdi]
0x6b0a: cmp r12,qword ptr [rdi + 8]
0x6b0e: jae 0x6b7b
0x6b10: cmp qword ptr [r12],0
0x6b15: je 0x6b71
0x6b17: mov rbx,qword ptr [r12 + 8]
0x6b1c: mov rax,qword ptr [rbp + 0x40]
0x6b20: test rbx,rbx
0x6b23: je 0x6b55
0x6b25: nop dword ptr [rax]
0x6b28: test rax,rax
0x6b2b: je 0x6b36
0x6b2d: mov rdi,qword ptr [rbx]
0x6b30: call rax
0x6b32: mov rax,qword ptr [rbp + 0x40]
0x6b36: mov rdx,qword ptr [rbx + 8]
0x6b3a: mov rcx,qword ptr [rbp + 0x48]
0x6b3e: mov qword ptr [rbx],0
0x6b45: test rdx,rdx
0x6b48: mov qword ptr [rbx + 8],rcx
0x6b4c: mov qword ptr [rbp + 0x48],rbx
0x6b50: mov rbx,rdx
0x6b53: jne 0x6b28
0x6b55: test rax,rax
0x6b58: je 0x6b60
0x6b5a: mov rdi,qword ptr [r12]
0x6b5e: call rax
0x6b60: mov qword ptr [r12],0
0x6b68: mov qword ptr [r12 + 8],0
0x6b71: add r12,0x10
0x6b75: cmp qword ptr [rbp + 8],r12
0x6b79: ja 0x6b10
0x6b7b: mov qword ptr [rbp + 0x18],0
0x6b83: mov qword ptr [rbp + 0x20],0
0x6b8b: pop rbx
0x6b8c: pop rbp
0x6b8d: pop r12
0x6b8f: ret 
0x6bc6: nop word ptr cs:[rax + rax]
0x6c66: nop word ptr cs:[rax + rax]
0x6def: nop 
0x6e11: nop dword ptr [rax]
0x6e36: nop word ptr cs:[rax + rax]
0x6e4a: nop word ptr [rax + rax]
0x6e57: nop word ptr [rax + rax]
0x6e9a: call 0x21f0
0x6eae: nop 
0x6f1b: nop dword ptr [rax + rax]
0x6f9e: nop 
0x6fe8: nop dword ptr [rax + rax]
0x7092: nop word ptr [rax + rax]
0x70cd: nop dword ptr [rax]
0x70ee: nop 
0x710e: nop 
0x712f: call 0x21f0
0x7134: nop 
0x7136: nop word ptr cs:[rax + rax]
0x7186: nop word ptr cs:[rax + rax]
0x7194: call 0x21f0
0x7199: nop dword ptr [rax]
0x71a0: push r12
0x71a2: push rbp
0x71a3: mov ecx,1
0x71a8: push rbx
0x71a9: mov rbx,rdi
0x71ac: sub rsp,0x10
0x71b0: mov rdx,rsp
0x71b3: mov rax,qword ptr fs:[0x28]
0x71bc: mov qword ptr [rsp + 8],rax
0x71c1: xor eax,eax
0x71c3: call 0x61c0
0x71c8: test rax,rax
0x71cb: mov rbp,rax
0x71ce: je 0x71df
0x71d0: mov rax,qword ptr [rsp]
0x71d4: sub qword ptr [rbx + 0x20],1
0x71d9: cmp qword ptr [rax],0
0x71dd: je 0x7200
0x71df: mov rcx,qword ptr [rsp + 8]
0x71e4: xor rcx,qword ptr fs:[0x28]
0x71ed: mov rax,rbp
0x71f0: jne 0x739e
0x71f6: add rsp,0x10
0x71fa: pop rbx
0x71fb: pop rbp
0x71fc: pop r12
0x71fe: ret 
0x71ff: nop 
0x7200: mov rax,qword ptr [rbx + 0x18]
0x7204: sub rax,1
0x7208: test rax,rax
0x720b: mov qword ptr [rbx + 0x18],rax
0x720f: js 0x7310
0x7215: pxor xmm0,xmm0
0x7219: cvtsi2ss xmm0,rax
0x721e: mov rax,qword ptr [rbx + 0x10]
0x7222: mov rdx,qword ptr [rbx + 0x28]
0x7226: test rax,rax
0x7229: js 0x72f0
0x722f: pxor xmm1,xmm1
0x7233: cvtsi2ss xmm1,rax
0x7238: mulss xmm1,dword ptr [rdx]
0x723c: ucomiss xmm1,xmm0
0x723f: jbe 0x71df
0x7241: lea rdi,[rbx + 0x28]
0x7245: call 0x62e0
0x724a: mov rax,qword ptr [rbx + 0x10]
0x724e: mov rdx,qword ptr [rbx + 0x28]
0x7252: test rax,rax
0x7255: js 0x7380
0x725b: pxor xmm0,xmm0
0x725f: cvtsi2ss xmm0,rax
0x7264: mov rax,qword ptr [rbx + 0x18]
0x7268: test rax,rax
0x726b: js 0x7360
0x7271: pxor xmm1,xmm1
0x7275: cvtsi2ss xmm1,rax
0x727a: movss xmm2,dword ptr [rdx]
0x727e: mulss xmm2,xmm0
0x7282: ucomiss xmm2,xmm1
0x7285: jbe 0x71df
0x728b: cmp byte ptr [rdx + 0x10],0
0x728f: mulss xmm0,dword ptr [rdx + 4]
0x7294: je 0x7350
0x729a: ucomiss xmm0,dword ptr [rip + 0x8d8f]
0x72a1: jae 0x7330
0x72a7: cvttss2si rsi,xmm0
0x72ac: mov rdi,rbx
0x72af: call 0x6c70
0x72b4: test al,al
0x72b6: jne 0x71df
0x72bc: mov rdi,qword ptr [rbx + 0x48]
0x72c0: test rdi,rdi
0x72c3: je 0x72d9
0x72c5: nop dword ptr [rax]
0x72c8: mov r12,qword ptr [rdi + 8]
0x72cc: call 0x2070
0x72d1: test r12,r12
0x72d4: mov rdi,r12
0x72d7: jne 0x72c8
0x72d9: mov qword ptr [rbx + 0x48],0
0x72e1: jmp 0x71df
0x72e6: nop word ptr cs:[rax + rax]
0x72f0: mov rcx,rax
0x72f3: pxor xmm1,xmm1
0x72f7: shr rcx,1
0x72fa: and eax,1
0x72fd: or rcx,rax
0x7300: cvtsi2ss xmm1,rcx
0x7305: addss xmm1,xmm1
0x7309: jmp 0x7238
0x730e: nop 
0x7310: mov rdx,rax
0x7313: pxor xmm0,xmm0
0x7317: shr rdx,1
0x731a: and eax,1
0x731d: or rdx,rax
0x7320: cvtsi2ss xmm0,rdx
0x7325: addss xmm0,xmm0
0x7329: jmp 0x721e
0x732e: nop 
0x7330: subss xmm0,dword ptr [rip + 0x8cf8]
0x7338: movabs rax,0x8000000000000000
0x7342: cvttss2si rsi,xmm0
0x7347: xor rsi,rax
0x734a: jmp 0x72ac
0x734f: nop 
0x7350: mulss xmm0,dword ptr [rdx + 8]
0x7355: jmp 0x729a
0x735a: nop word ptr [rax + rax]
0x7360: mov rcx,rax
0x7363: pxor xmm1,xmm1
0x7367: shr rcx,1
0x736a: and eax,1
0x736d: or rcx,rax
0x7370: cvtsi2ss xmm1,rcx
0x7375: addss xmm1,xmm1
0x7379: jmp 0x727a
0x737e: nop 
0x7380: mov rcx,rax
0x7383: pxor xmm0,xmm0
0x7387: shr rcx,1
0x738a: and eax,1
0x738d: or rcx,rax
0x7390: cvtsi2ss xmm0,rcx
0x7395: addss xmm0,xmm0
0x7399: jmp 0x7264
0x739e: call 0x21f0
0x73a3: nop word ptr cs:[rax + rax]
0x73ad: nop dword ptr [rax]
0x73b0: push rbp
0x73b1: push rbx
0x73b2: mov rbp,rdi
0x73b5: mov rbx,rsi
0x73b8: sub rsp,8
0x73bc: mov rdi,qword ptr [rdi]
0x73bf: call 0xcac0
0x73c4: xor rax,qword ptr [rbp + 8]
0x73c8: xor edx,edx
0x73ca: add rsp,8
0x73ce: div rbx
0x73d1: pop rbx
0x73d2: pop rbp
0x73d3: mov rax,rdx
0x73d6: ret 
0x73d7: nop word ptr [rax + rax]
0x73e0: mov rax,qword ptr [rdi + 8]
0x73e4: xor edx,edx
0x73e6: div rsi
0x73e9: mov rax,rdx
0x73ec: ret 
0x73ed: nop dword ptr [rax]
0x73f0: xor eax,eax
0x73f2: mov rdx,qword ptr [rsi + 8]
0x73f6: cmp qword ptr [rdi + 8],rdx
0x73fa: je 0x7400
0x73fc: ret 
0x73fe: nop 
0x7400: mov rcx,qword ptr [rsi + 0x10]
0x7404: cmp qword ptr [rdi + 0x10],rcx
0x7408: jne 0x73fc
0x740a: sub rsp,8
0x740e: mov rsi,qword ptr [rsi]
0x7411: mov rdi,qword ptr [rdi]
0x7414: call 0xa700
0x7419: add rsp,8
0x741d: ret 
0x741e: nop 
0x7420: xor eax,eax
0x7422: mov rdx,qword ptr [rsi + 8]
0x7426: cmp qword ptr [rdi + 8],rdx
0x742a: je 0x7430
0x742c: ret 
0x742e: nop 
0x7430: mov rcx,qword ptr [rsi + 0x10]
0x7434: cmp qword ptr [rdi + 0x10],rcx
0x7438: jne 0x742c
0x743a: sub rsp,8
0x743e: mov rsi,qword ptr [rsi]
0x7441: mov rdi,qword ptr [rdi]
0x7444: call 0x2340
0x7449: test eax,eax
0x744b: sete al
0x744e: add rsp,8
0x7452: ret 
0x7453: nop dword ptr [rax]
0x7456: nop word ptr cs:[rax + rax]
0x7460: push rbx
0x7461: mov rbx,rdi
0x7464: mov rdi,qword ptr [rdi]
0x7467: call 0x2070
0x746c: mov rdi,rbx
0x746f: pop rbx
0x7470: jmp 0x2070
0x7475: nop word ptr cs:[rax + rax]
0x747f: nop 
0x74f4: nop dword ptr [rax]
0x74fc: nop dword ptr [rax]
0x7538: nop dword ptr [rax + rax]
0x7547: nop word ptr [rax + rax]
0x768e: nop 
0x76ac: nop dword ptr [rax]
0x7763: nop dword ptr [rax + rax]
0x77e4: nop dword ptr [rax]
0x7842: nop word ptr [rax + rax]
0x789b: nop dword ptr [rax + rax]
0x78a4: nop dword ptr [rax]
0x798b: nop dword ptr [rax + rax]
0x79b2: nop word ptr [rax + rax]
0x7a12: nop word ptr [rax + rax]
0x7a94: nop dword ptr [rax]
0x7ab4: nop dword ptr [rax]
0x7ad8: nop dword ptr [rax + rax]
0x7af8: nop dword ptr [rax + rax]
0x7bfb: nop dword ptr [rax + rax]
0x7c37: nop word ptr [rax + rax]
0x7cd4: nop dword ptr [rax]
0x7d06: nop word ptr cs:[rax + rax]
0x7d34: nop dword ptr [rax]
0x7d48: nop dword ptr [rax + rax]
0x7d5c: nop dword ptr [rax]
0x7d7e: nop 
0x7da4: nop dword ptr [rax]
0x7e98: nop dword ptr [rax + rax]
0x7f0b: call 0x21f0
0x7f57: nop word ptr [rax + rax]
0x7ff4: nop dword ptr [rax]
0x802c: nop dword ptr [rax]
0x8052: nop word ptr [rax + rax]
0x8099: nop dword ptr [rax]
0x80f8: nop dword ptr [rax + rax]
0x8112: nop word ptr [rax + rax]
0x8141: call 0x21f0
0x8146: nop word ptr cs:[rax + rax]
0x8192: nop word ptr cs:[rax + rax]
0x819c: nop dword ptr [rax]
0x822c: mov r12,r15
0x822f: xor edx,edx
0x82f6: nop word ptr cs:[rax + rax]
0x8335: nop dword ptr [rax]
0x833f: nop 
0x8387: nop word ptr [rax + rax]
0x843a: mov rsi,qword ptr [rsp]
0x843e: xor edx,edx
0x8440: xor edi,edi
0x8442: call 0x2500
0x8447: add rax,1
0x844b: mov qword ptr [rsp + 0x20],rax
0x847f: nop 
0x8518: nop dword ptr [rax + rax]
0x8564: nop 
0x8566: nop word ptr cs:[rax + rax]
0x85ee: nop 
0x85fa: nop word ptr [rax + rax]
0x860d: nop dword ptr [rax]
0x865f: nop 
0x869b: nop dword ptr [rax + rax]
0x8721: nop dword ptr [rax]
0x8733: nop dword ptr [rax + rax]
0x8738: mov ebp,0xffffffff
0x875e: nop 
0x8772: nop word ptr [rax + rax]
0x87bb: nop dword ptr [rax + rax]
0x87ca: call 0x21f0
0x87cf: nop 
0x87f3: nop word ptr cs:[rax + rax]
0x87fd: nop dword ptr [rax]
0x889f: nop 
0x88dc: nop dword ptr [rax]
0x892d: nop dword ptr [rax]
0x8987: nop word ptr [rax + rax]
0x8c47: nop word ptr [rax + rax]
0x8c7e: nop 
0x8ca1: nop dword ptr [rax]
0x8ce2: nop word ptr [rax + rax]
0x8cf4: nop dword ptr [rax]
0x8d98: nop dword ptr [rax + rax]
0x8dc1: nop dword ptr [rax]
0x8dd7: nop word ptr [rax + rax]
0x8def: nop 
0x8e1e: nop 
0x8e2d: nop dword ptr [rax]
0x8e3f: nop 
0x8e4f: nop 
0x8e5f: nop 
0x8e6f: nop 
0x8e7f: nop 
0x8eec: nop dword ptr [rax]
0x8f0c: nop dword ptr [rax]
0x8f2f: nop 
0x8f42: nop word ptr [rax + rax]
0x8f5a: nop word ptr [rax + rax]
0x8f6a: nop word ptr [rax + rax]
0x900b: nop dword ptr [rax + rax]
0x9025: nop dword ptr [rax]
0x9038: nop dword ptr [rax + rax]
0x9053: nop dword ptr [rax + rax]
0x9082: nop word ptr [rax + rax]
0x9092: nop word ptr [rax + rax]
0x90aa: nop word ptr [rax + rax]
0x90ba: nop word ptr [rax + rax]
0x90c8: nop dword ptr [rax + rax]
0x90ef: nop 
0x9189: nop dword ptr [rax]
0x91d2: nop word ptr [rax + rax]
0x9211: nop dword ptr [rax]
0x9232: nop word ptr [rax + rax]
0x9398: nop dword ptr [rax + rax]
0x94ab: nop dword ptr [rax + rax]
0x94ce: nop 
0x9595: nop dword ptr [rax]
0x964d: nop dword ptr [rax]
0x9856: nop word ptr cs:[rax + rax]
0x98e9: nop dword ptr [rax]
0x9a3d: nop dword ptr [rax]
0x9b83: call 0x21f0
0x9bc4: nop 
0x9bc6: nop word ptr cs:[rax + rax]
0x9d4b: nop dword ptr [rax + rax]
0x9d71: call 0x20a0
0x9d76: call 0xb020
0x9d7b: nop dword ptr [rax + rax]
0x9d80: push r12
0x9d82: push rbp
0x9d83: push rbx
0x9d84: mov rbx,rdi
0x9d87: call 0x20b0
0x9d8c: mov r12d,dword ptr [rax]
0x9d8f: mov rbp,rax
0x9d92: lea rax,[rip + 0x20a7a7]
0x9d99: test rbx,rbx
0x9d9c: mov esi,0x38
0x9da1: cmove rbx,rax
0x9da5: mov rdi,rbx
0x9da8: call 0xafd0
0x9dad: mov dword ptr [rbp],r12d
0x9db1: pop rbx
0x9db2: pop rbp
0x9db3: pop r12
0x9db5: ret 
0x9db6: nop word ptr cs:[rax + rax]
0x9dc0: lea rax,[rip + 0x20a779]
0x9dc7: test rdi,rdi
0x9dca: cmove rdi,rax
0x9dce: mov eax,dword ptr [rdi]
0x9dd0: ret 
0x9dd1: nop dword ptr [rax + rax]
0x9dd6: nop word ptr cs:[rax + rax]
0x9de0: lea rax,[rip + 0x20a759]
0x9de7: test rdi,rdi
0x9dea: cmove rdi,rax
0x9dee: mov dword ptr [rdi],esi
0x9df0: ret 
0x9df1: nop dword ptr [rax + rax]
0x9df6: nop word ptr cs:[rax + rax]
0x9e00: lea rax,[rip + 0x20a739]
0x9e07: test rdi,rdi
0x9e0a: mov ecx,esi
0x9e0c: cmove rdi,rax
0x9e10: mov eax,esi
0x9e12: and ecx,0x1f
0x9e15: shr al,5
0x9e18: movzx eax,al
0x9e1b: lea rdi,[rdi + rax*4 + 8]
0x9e20: mov esi,dword ptr [rdi]
0x9e22: mov eax,esi
0x9e24: shr eax,cl
0x9e26: xor edx,eax
0x9e28: and eax,1
0x9e2b: and edx,1
0x9e2e: shl edx,cl
0x9e30: xor edx,esi
0x9e32: mov dword ptr [rdi],edx
0x9e34: ret 
0x9e35: nop 
0x9e36: nop word ptr cs:[rax + rax]
0x9e40: lea rax,[rip + 0x20a6f9]
0x9e47: test rdi,rdi
0x9e4a: cmove rdi,rax
0x9e4e: mov eax,dword ptr [rdi + 4]
0x9e51: mov dword ptr [rdi + 4],esi
0x9e54: ret 
0x9e55: nop 
0x9e56: nop word ptr cs:[rax + rax]
0x9e60: lea rax,[rip + 0x20a6d9]
0x9e67: test rdi,rdi
0x9e6a: cmove rdi,rax
0x9e6e: test rsi,rsi
0x9e71: mov dword ptr [rdi],0xa
0x9e77: je 0x9e87
0x9e79: test rdx,rdx
0x9e7c: je 0x9e87
0x9e7e: mov qword ptr [rdi + 0x28],rsi
0x9e82: mov qword ptr [rdi + 0x30],rdx
0x9e86: ret 
0x9e87: sub rsp,8
0x9e8b: call 0x20a0
0x9e90: push r15
0x9e92: push r14
0x9e94: lea rax,[rip + 0x20a6a5]
0x9e9b: push r13
0x9e9d: push r12
0x9e9f: mov r13,rdi
0x9ea2: push rbp
0x9ea3: push rbx
0x9ea4: mov rbx,r8
0x9ea7: mov r14,rsi
0x9eaa: mov r15,rdx
0x9ead: sub rsp,0x18
0x9eb1: test r8,r8
0x9eb4: cmove rbx,rax
0x9eb8: mov qword ptr [rsp + 8],rcx
0x9ebd: call 0x20b0
0x9ec2: mov r12d,dword ptr [rax]
0x9ec5: mov rbp,rax
0x9ec8: lea rax,[rbx + 8]
0x9ecc: sub rsp,8
0x9ed0: mov r9d,dword ptr [rbx + 4]
0x9ed4: push qword ptr [rbx + 0x30]
0x9ed7: mov r8d,dword ptr [rbx]
0x9eda: push qword ptr [rbx + 0x28]
0x9edd: mov rdx,r15
0x9ee0: push rax
0x9ee1: mov rcx,qword ptr [rsp + 0x28]
0x9ee6: mov rsi,r14
0x9ee9: mov rdi,r13
0x9eec: call 0x8990
0x9ef1: mov dword ptr [rbp],r12d
0x9ef5: add rsp,0x38
0x9ef9: pop rbx
0x9efa: pop rbp
0x9efb: pop r12
0x9efd: pop r13
0x9eff: pop r14
0x9f01: pop r15
0x9f03: ret 
0x9f04: nop 
0x9f06: nop word ptr cs:[rax + rax]
0x9f10: push r15
0x9f12: push r14
0x9f14: lea rax,[rip + 0x20a625]
0x9f1b: push r13
0x9f1d: push r12
0x9f1f: mov r12,rdx
0x9f22: push rbp
0x9f23: push rbx
0x9f24: mov rbx,rcx
0x9f27: mov r14,rdi
0x9f2a: mov r15,rsi
0x9f2d: sub rsp,0x38
0x9f31: test rcx,rcx
0x9f34: cmove rbx,rax
0x9f38: xor ebp,ebp
0x9f3a: call 0x20b0
0x9f3f: test r12,r12
0x9f42: mov r13,rax
0x9f45: mov eax,dword ptr [rax]
0x9f47: sete bpl
0x9f4b: or ebp,dword ptr [rbx + 4]
0x9f4e: lea r10,[rbx + 8]
0x9f52: sub rsp,8
0x9f56: mov r8d,dword ptr [rbx]
0x9f59: mov rcx,r15
0x9f5c: mov dword ptr [rsp + 0x14],eax
0x9f60: push qword ptr [rbx + 0x30]
0x9f63: mov rdx,r14
0x9f66: push qword ptr [rbx + 0x28]
0x9f69: push r10
0x9f6b: xor esi,esi
0x9f6d: mov r9d,ebp
0x9f70: xor edi,edi
0x9f72: mov qword ptr [rsp + 0x40],r10
0x9f77: call 0x8990
0x9f7c: lea rsi,[rax + 1]
0x9f80: mov qword ptr [rsp + 0x48],rax
0x9f85: add rsp,0x20
0x9f89: mov rdi,rsi
0x9f8c: mov qword ptr [rsp + 0x18],rsi
0x9f91: call 0xadd0
0x9f96: mov qword ptr [rsp + 0x10],rax
0x9f9b: sub rsp,8
0x9f9f: push qword ptr [rbx + 0x30]
0x9fa2: push qword ptr [rbx + 0x28]
0x9fa5: mov r10,qword ptr [rsp + 0x38]
0x9faa: mov r9d,ebp
0x9fad: mov r8d,dword ptr [rbx]
0x9fb0: mov rcx,r15
0x9fb3: mov rdx,r14
0x9fb6: mov rdi,rax
0x9fb9: push r10
0x9fbb: mov rsi,qword ptr [rsp + 0x38]
0x9fc0: call 0x8990
0x9fc5: mov eax,dword ptr [rsp + 0x2c]
0x9fc9: add rsp,0x20
0x9fcd: test r12,r12
0x9fd0: mov dword ptr [r13],eax
0x9fd4: je 0x9fdf
0x9fd6: mov r11,qword ptr [rsp + 0x28]
0x9fdb: mov qword ptr [r12],r11
0x9fdf: mov rax,qword ptr [rsp + 0x10]
0x9fe4: add rsp,0x38
0x9fe8: pop rbx
0x9fe9: pop rbp
0x9fea: pop r12
0x9fec: pop r13
0x9fee: pop r14
0x9ff0: pop r15
0x9ff2: ret 
0x9ff3: nop dword ptr [rax]
0x9ff6: nop word ptr cs:[rax + rax]
0xa000: mov rcx,rdx
0xa003: xor edx,edx
0xa005: jmp 0x9f10
0xa00a: nop word ptr [rax + rax]
0xa010: mov eax,dword ptr [rip + 0x20a2a2]
0xa016: push r12
0xa018: mov r12,qword ptr [rip + 0x20a2a1]
0xa01f: push rbp
0xa020: push rbx
0xa021: cmp eax,1
0xa024: jle 0xa051
0xa026: sub eax,2
0xa029: lea rbx,[r12 + 0x18]
0xa02e: shl rax,4
0xa032: lea rbp,[r12 + rax + 0x28]
0xa037: nop word ptr [rax + rax]
0xa040: mov rdi,qword ptr [rbx]
0xa043: add rbx,0x10
0xa047: call 0x2070
0xa04c: cmp rbx,rbp
0xa04f: jne 0xa040
0xa051: mov rdi,qword ptr [r12 + 8]
0xa056: lea rbx,[rip + 0x20a3e3]
0xa05d: cmp rdi,rbx
0xa060: je 0xa079
0xa062: call 0x2070
0xa067: mov qword ptr [rip + 0x20a25e],0x100
0xa072: mov qword ptr [rip + 0x20a25f],rbx
0xa079: lea rbx,[rip + 0x20a250]
0xa080: cmp r12,rbx
0xa083: je 0xa094
0xa085: mov rdi,r12
0xa088: call 0x2070
0xa08d: mov qword ptr [rip + 0x20a22c],rbx
0xa094: pop rbx
0xa095: mov dword ptr [rip + 0x20a219],1
0xa09f: pop rbp
0xa0a0: pop r12
0xa0a2: ret 
0xa0a3: nop dword ptr [rax]
0xa0a6: nop word ptr cs:[rax + rax]
0xa0b0: lea rcx,[rip + 0x20a489]
0xa0b7: mov rdx,-1
0xa0be: jmp 0x9bd0
0xa0c3: nop dword ptr [rax]
0xa0c6: nop word ptr cs:[rax + rax]
0xa0d0: lea rcx,[rip + 0x20a469]
0xa0d7: jmp 0x9bd0
0xa0dc: nop dword ptr [rax]
0xa0e0: lea rcx,[rip + 0x20a459]
0xa0e7: mov rsi,rdi
0xa0ea: mov rdx,-1
0xa0f1: xor edi,edi
0xa0f3: jmp 0x9bd0
0xa0f8: nop dword ptr [rax + rax]
0xa100: lea rcx,[rip + 0x20a439]
0xa107: mov rdx,rsi
0xa10a: mov rsi,rdi
0xa10d: xor edi,edi
0xa10f: jmp 0x9bd0
0xa114: nop 
0xa116: nop word ptr cs:[rax + rax]
0xa1a4: call 0x20a0
0xa1a9: call 0x21f0
0xa1ae: nop 
0xa1b0: sub rsp,0x48
0xa1b4: mov rax,rdx
0xa1b7: mov rdx,rcx
0xa1ba: mov rcx,qword ptr fs:[0x28]
0xa1c3: mov qword ptr [rsp + 0x38],rcx
0xa1c8: xor ecx,ecx
0xa1ca: cmp esi,0xa
0xa1cd: je 0xa230
0xa1cf: mov dword ptr [rsp],esi
0xa1d2: mov rcx,rsp
0xa1d5: mov rsi,rax
0xa1d8: mov qword ptr [rsp + 4],0
0xa1e1: mov qword ptr [rsp + 0xc],0
0xa1ea: mov qword ptr [rsp + 0x14],0
0xa1f3: mov qword ptr [rsp + 0x1c],0
0xa1fc: mov qword ptr [rsp + 0x24],0
0xa205: mov qword ptr [rsp + 0x2c],0
0xa20e: mov dword ptr [rsp + 0x34],0
0xa216: call 0x9bd0
0xa21b: mov rdx,qword ptr [rsp + 0x38]
0xa220: xor rdx,qword ptr fs:[0x28]
0xa229: jne 0xa235
0xa22b: add rsp,0x48
0xa22f: ret 
0xa230: call 0x20a0
0xa235: call 0x21f0
0xa23a: nop word ptr [rax + rax]
0xa24c: nop dword ptr [rax]
0xa250: mov rcx,rdx
0xa253: mov rdx,rsi
0xa256: mov esi,edi
0xa258: xor edi,edi
0xa25a: jmp 0xa1b0
0xa25f: nop 
0xa260: sub rsp,0x48
0xa264: mov ecx,edx
0xa266: mov rax,qword ptr fs:[0x28]
0xa26f: mov qword ptr [rsp + 0x38],rax
0xa274: xor eax,eax
0xa276: mov rax,qword ptr [rip + 0x20a2f3]
0xa27d: mov r8,rsp
0xa280: and ecx,0x1f
0xa283: movdqa xmm0,xmmword ptr [rip + 0x20a2b5]
0xa28b: mov qword ptr [rsp + 0x30],rax
0xa290: mov eax,edx
0xa292: movaps xmmword ptr [rsp],xmm0
0xa296: shr al,5
0xa299: movzx eax,al
0xa29c: lea r9,[r8 + rax*4 + 8]
0xa2a1: movdqa xmm0,xmmword ptr [rip + 0x20a2a7]
0xa2a9: movaps xmmword ptr [rsp + 0x10],xmm0
0xa2ae: movdqa xmm0,xmmword ptr [rip + 0x20a2aa]
0xa2b6: movaps xmmword ptr [rsp + 0x20],xmm0
0xa2bb: mov edx,dword ptr [r9]
0xa2be: mov eax,edx
0xa2c0: shr eax,cl
0xa2c2: not eax
0xa2c4: and eax,1
0xa2c7: shl eax,cl
0xa2c9: mov rcx,r8
0xa2cc: xor eax,edx
0xa2ce: mov rdx,rsi
0xa2d1: mov rsi,rdi
0xa2d4: mov dword ptr [r9],eax
0xa2d7: xor edi,edi
0xa2d9: call 0x9bd0
0xa2de: mov rsi,qword ptr [rsp + 0x38]
0xa2e3: xor rsi,qword ptr fs:[0x28]
0xa2ec: jne 0xa2f3
0xa2ee: add rsp,0x48
0xa2f2: ret 
0xa2f3: call 0x21f0
0xa2f8: nop dword ptr [rax + rax]
0xa300: movsx edx,sil
0xa304: mov rsi,-1
0xa30b: jmp 0xa260
0xa310: mov edx,0x3a
0xa315: mov rsi,-1
0xa31c: jmp 0xa260
0xa321: nop dword ptr [rax + rax]
0xa326: nop word ptr cs:[rax + rax]
0xa330: mov edx,0x3a
0xa335: jmp 0xa260
0xa33a: nop word ptr [rax + rax]
0xa3c4: call 0x20a0
0xa3c9: call 0x21f0
0xa3ce: nop 
0xa3d0: sub rsp,0x48
0xa3d4: mov r9,rcx
0xa3d7: mov rcx,qword ptr [rip + 0x20a192]
0xa3de: movdqa xmm0,xmmword ptr [rip + 0x20a15a]
0xa3e6: mov rax,qword ptr fs:[0x28]
0xa3ef: mov qword ptr [rsp + 0x38],rax
0xa3f4: xor eax,eax
0xa3f6: movaps xmmword ptr [rsp],xmm0
0xa3fa: test rsi,rsi
0xa3fd: mov qword ptr [rsp + 0x30],rcx
0xa402: mov dword ptr [rsp],0xa
0xa409: movdqa xmm0,xmmword ptr [rip + 0x20a13f]
0xa411: movaps xmmword ptr [rsp + 0x10],xmm0
0xa416: movdqa xmm0,xmmword ptr [rip + 0x20a142]
0xa41e: movaps xmmword ptr [rsp + 0x20],xmm0
0xa423: je 0xa457
0xa425: test rdx,rdx
0xa428: je 0xa457
0xa42a: mov qword ptr [rsp + 0x28],rsi
0xa42f: mov qword ptr [rsp + 0x30],rdx
0xa434: mov rcx,rsp
0xa437: mov rdx,r8
0xa43a: mov rsi,r9
0xa43d: call 0x9bd0
0xa442: mov rdi,qword ptr [rsp + 0x38]
0xa447: xor rdi,qword ptr fs:[0x28]
0xa450: jne 0xa45c
0xa452: add rsp,0x48
0xa456: ret 
0xa457: call 0x20a0
0xa45c: call 0x21f0
0xa461: nop dword ptr [rax + rax]
0xa466: nop word ptr cs:[rax + rax]
0xa470: mov r8,-1
0xa477: jmp 0xa3d0
0xa47c: nop dword ptr [rax]
0xa480: mov rcx,rdx
0xa483: mov r8,-1
0xa48a: mov rdx,rsi
0xa48d: mov rsi,rdi
0xa490: xor edi,edi
0xa492: jmp 0xa3d0
0xa497: nop word ptr [rax + rax]
0xa4a0: mov r8,rcx
0xa4a3: mov rcx,rdx
0xa4a6: mov rdx,rsi
0xa4a9: mov rsi,rdi
0xa4ac: xor edi,edi
0xa4ae: jmp 0xa3d0
0xa4b3: nop dword ptr [rax]
0xa4b6: nop word ptr cs:[rax + rax]
0xa4c0: lea rcx,[rip + 0x209db9]
0xa4c7: jmp 0x9bd0
0xa4cc: nop dword ptr [rax]
0xa4d0: lea rcx,[rip + 0x209da9]
0xa4d7: mov rdx,rsi
0xa4da: mov rsi,rdi
0xa4dd: xor edi,edi
0xa4df: jmp 0x9bd0
0xa4e4: nop 
0xa4e6: nop word ptr cs:[rax + rax]
0xa4f0: lea rcx,[rip + 0x209d89]
0xa4f7: mov rdx,-1
0xa4fe: jmp 0x9bd0
0xa503: nop dword ptr [rax]
0xa506: nop word ptr cs:[rax + rax]
0xa528: nop dword ptr [rax + rax]
0xa530: push r13
0xa532: push r12
0xa534: mov r13d,edi
0xa537: push rbp
0xa538: push rbx
0xa539: mov rdi,rsi
0xa53c: mov ebp,edx
0xa53e: mov r12,rcx
0xa541: sub rsp,0x138
0xa548: mov rax,qword ptr fs:[0x28]
0xa551: mov qword ptr [rsp + 0x128],rax
0xa559: xor eax,eax
0xa55b: call 0x5e50
0xa560: mov rcx,rsp
0xa563: mov r8d,0x100
0xa569: mov rdx,rax
0xa56c: mov esi,r13d
0xa56f: mov edi,1
0xa574: mov rbx,rax
0xa577: call 0x2230
0xa57c: test eax,eax
0xa57e: jne 0xa630
0xa584: mov rdi,rbx
0xa587: call 0x2070
0xa58c: mov rdi,r12
0xa58f: call 0x5e50
0xa594: lea rcx,[rsp + 0x90]
0xa59c: mov r8d,0x100
0xa5a2: mov rdx,rax
0xa5a5: mov esi,ebp
0xa5a7: mov edi,1
0xa5ac: mov rbx,rax
0xa5af: call 0x2230
0xa5b4: test eax,eax
0xa5b6: jne 0xa608
0xa5b8: xor ebp,ebp
0xa5ba: mov rax,qword ptr [rsp + 0x98]
0xa5c2: cmp qword ptr [rsp + 8],rax
0xa5c7: jne 0xa5d9
0xa5c9: mov rax,qword ptr [rsp + 0x90]
0xa5d1: cmp qword ptr [rsp],rax
0xa5d5: sete bpl
0xa5d9: mov rdi,rbx
0xa5dc: call 0x2070
0xa5e1: mov rdx,qword ptr [rsp + 0x128]
0xa5e9: xor rdx,qword ptr fs:[0x28]
0xa5f2: mov eax,ebp
0xa5f4: jne 0xa652
0xa5f6: add rsp,0x138
0xa5fd: pop rbx
0xa5fe: pop rbp
0xa5ff: pop r12
0xa601: pop r13
0xa603: ret 
0xa604: nop dword ptr [rax]
0xa608: call 0x20b0
0xa60d: mov esi,dword ptr [rax]
0xa60f: lea rdx,[rip + 0x6661]
0xa616: mov rcx,rbx
0xa619: mov edi,1
0xa61e: xor eax,eax
0xa620: call 0x24a0
0xa625: jmp 0xa5b8
0xa627: nop word ptr [rax + rax]
0xa630: call 0x20b0
0xa635: mov esi,dword ptr [rax]
0xa637: lea rdx,[rip + 0x6639]
0xa63e: mov rcx,rbx
0xa641: mov edi,1
0xa646: xor eax,eax
0xa648: call 0x24a0
0xa64d: jmp 0xa584
0xa652: call 0x21f0
0xa657: nop word ptr [rax + rax]
0xa660: push r15
0xa662: push r14
0xa664: mov r15d,edx
0xa667: push r13
0xa669: push r12
0xa66b: push rbp
0xa66c: push rbx
0xa66d: mov rbp,rcx
0xa670: mov rbx,rsi
0xa673: sub rsp,0x18
0xa677: mov dword ptr [rsp + 0xc],edi
0xa67b: mov rdi,rsi
0xa67e: call 0x5f30
0xa683: mov rdi,rbp
0xa686: mov r12,rax
0xa689: call 0x5f30
0xa68e: mov rdi,r12
0xa691: mov r13,rax
0xa694: call 0x5f90
0xa699: mov rdi,r13
0xa69c: mov r14,rax
0xa69f: call 0x5f90
0xa6a4: cmp r14,rax
0xa6a7: je 0xa6c0
0xa6a9: add rsp,0x18
0xa6ad: xor eax,eax
0xa6af: pop rbx
0xa6b0: pop rbp
0xa6b1: pop r12
0xa6b3: pop r13
0xa6b5: pop r14
0xa6b7: pop r15
0xa6b9: ret 
0xa6ba: nop word ptr [rax + rax]
0xa6c0: mov rdx,r14
0xa6c3: mov rsi,r13
0xa6c6: mov rdi,r12
0xa6c9: call 0x2300
0xa6ce: test eax,eax
0xa6d0: jne 0xa6a9
0xa6d2: mov edi,dword ptr [rsp + 0xc]
0xa6d6: add rsp,0x18
0xa6da: mov rcx,rbp
0xa6dd: mov edx,r15d
0xa6e0: mov rsi,rbx
0xa6e3: pop rbx
0xa6e4: pop rbp
0xa6e5: pop r12
0xa6e7: pop r13
0xa6e9: pop r14
0xa6eb: pop r15
0xa6ed: jmp 0xa530
0xa6f2: nop dword ptr [rax]
0xa6f6: nop word ptr cs:[rax + rax]
0xa700: mov edx,0xffffff9c
0xa705: mov rcx,rsi
0xa708: mov rsi,rdi
0xa70b: mov edi,edx
0xa70d: jmp 0xa660
0xa712: nop word ptr cs:[rax + rax]
0xa71c: nop dword ptr [rax]
0xa74b: nop dword ptr [rax + rax]
0xa76a: nop word ptr [rax + rax]
0xa77d: nop dword ptr [rax]
0xa789: nop dword ptr [rax]
0xa7a9: nop dword ptr [rax]
0xa856: nop word ptr cs:[rax + rax]
0xa8e5: nop dword ptr [rax]
0xa8e8: mov r8,rcx
0xa8eb: mov rcx,rdx
0xa8ee: lea rdx,[rip + 0x5cbf]
0xa8f5: mov esi,1
0xa8fa: xor eax,eax
0xa8fc: call 0x2530
0xa901: jmp 0xa7ec
0xa906: nop word ptr cs:[rax + rax]
0xa965: nop dword ptr [rax]
0xa9a1: nop dword ptr [rax]
0xa9e8: nop dword ptr [rax + rax]
0xaa37: nop word ptr [rax + rax]
0xaa94: nop dword ptr [rax]
0xaac2: nop word ptr [rax + rax]
0xab76: nop word ptr cs:[rax + rax]
0xabc7: nop word ptr [rax + rax]
0xabd0: xor r9d,r9d
0xabd3: cmp qword ptr [r8],0
0xabd7: je 0xabeb
0xabd9: nop dword ptr [rax]
0xabe0: add r9,1
0xabe4: cmp qword ptr [r8 + r9*8],0
0xabe9: jne 0xabe0
0xabeb: jmp 0xa7b0
0xabf0: sub rsp,0x68
0xabf4: mov r10,r8
0xabf7: xor r9d,r9d
0xabfa: mov rax,qword ptr fs:[0x28]
0xac03: mov qword ptr [rsp + 0x58],rax
0xac08: xor eax,eax
0xac0a: mov r8,rsp
0xac0d: nop dword ptr [rax]
0xac10: mov eax,dword ptr [r10]
0xac13: cmp eax,0x2f
0xac16: ja 0xac5a
0xac18: mov r11d,eax
0xac1b: add r11,qword ptr [r10 + 0x10]
0xac1f: add eax,8
0xac22: mov dword ptr [r10],eax
0xac25: mov rax,qword ptr [r11]
0xac28: test rax,rax
0xac2b: mov qword ptr [r8 + r9*8],rax
0xac2f: je 0xac3b
0xac31: add r9,1
0xac35: cmp r9,0xa
0xac39: jne 0xac10
0xac3b: call 0xa7b0
0xac40: mov rax,qword ptr [rsp + 0x58]
0xac45: xor rax,qword ptr fs:[0x28]
0xac4e: jne 0xac55
0xac50: add rsp,0x68
0xac54: ret 
0xac55: call 0x21f0
0xac5a: mov r11,qword ptr [r10 + 8]
0xac5e: lea rax,[r11 + 8]
0xac62: mov qword ptr [r10 + 8],rax
0xac66: jmp 0xac25
0xac68: nop dword ptr [rax + rax]
0xad30: call 0x21f0
0xad3c: mov rax,rbx
0xad3f: add rbx,8
0xad43: jmp 0xacf6
0xad45: nop 
0xad46: nop word ptr cs:[rax + rax]
0xad50: push rbx
0xad51: lea rsi,[rip + 0x58aa]
0xad58: mov edx,5
0xad5d: xor edi,edi
0xad5f: call 0x2190
0xad64: lea rdx,[rip + 0x58ac]
0xad6b: mov rsi,rax
0xad6e: mov edi,1
0xad73: xor eax,eax
0xad75: call 0x2470
0xad7a: lea rsi,[rip + 0x58ac]
0xad81: mov edx,5
0xad86: xor edi,edi
0xad88: call 0x2190
0xad8d: lea rcx,[rip + 0x4f04]
0xad94: lea rdx,[rip + 0x434d]
0xad9b: mov rsi,rax
0xad9e: mov edi,1
0xada3: xor eax,eax
0xada5: call 0x2470
0xadaa: mov rbx,qword ptr [rip + 0x209557]
0xadb1: lea rsi,[rip + 0x5aa8]
0xadb8: xor edi,edi
0xadba: mov edx,5
0xadbf: call 0x2190
0xadc4: mov rsi,rbx
0xadc7: mov rdi,rax
0xadca: pop rbx
0xadcb: jmp 0x2310
0xadea: nop word ptr [rax + rax]
0xadf0: mov rax,rdi
0xadf3: mul rsi
0xadf6: mov rdi,rax
0xadf9: seto al
0xadfc: test rdi,rdi
0xadff: js 0xae0b
0xae01: movzx eax,al
0xae04: test rax,rax
0xae07: jne 0xae0b
0xae09: jmp 0xadd0
0xae0b: sub rsp,8
0xae0f: call 0xb020
0xae14: nop 
0xae16: nop word ptr cs:[rax + rax]
0xae20: jmp 0xadd0
0xae22: nop dword ptr [rax]
0xae26: nop word ptr cs:[rax + rax]
0xae52: nop word ptr [rax + rax]
0xae66: nop word ptr cs:[rax + rax]
0xae70: mov rax,rsi
0xae73: mul rdx
0xae76: mov rsi,rax
0xae79: seto al
0xae7c: test rsi,rsi
0xae7f: js 0xae8b
0xae81: movzx eax,al
0xae84: test rax,rax
0xae87: jne 0xae8b
0xae89: jmp 0xae30
0xae8b: sub rsp,8
0xae8f: call 0xb020
0xae94: nop 
0xae96: nop word ptr cs:[rax + rax]
0xaea0: test rdi,rdi
0xaea3: mov r9,rdx
0xaea6: mov rcx,qword ptr [rsi]
0xaea9: je 0xaee0
0xaeab: xor edx,edx
0xaead: movabs rax,0x5555555555555554
0xaeb7: div r9
0xaeba: cmp rax,rcx
0xaebd: jbe 0xaefb
0xaebf: mov rax,rcx
0xaec2: shr rax,1
0xaec5: lea rcx,[rax + rcx + 1]
0xaeca: mov qword ptr [rsi],rcx
0xaecd: imul rcx,r9
0xaed1: mov rsi,rcx
0xaed4: jmp 0xae30
0xaed9: nop dword ptr [rax]
0xaee0: test rcx,rcx
0xaee3: je 0xaf08
0xaee5: mov rax,rcx
0xaee8: mul r9
0xaeeb: seto dl
0xaeee: test rax,rax
0xaef1: movzx edx,dl
0xaef4: js 0xaefb
0xaef6: test rdx,rdx
0xaef9: je 0xaeca
0xaefb: sub rsp,8
0xaeff: call 0xb020
0xaf04: nop dword ptr [rax]
0xaf08: xor edx,edx
0xaf0a: mov eax,0x80
0xaf0f: xor r8d,r8d
0xaf12: div r9
0xaf15: test rax,rax
0xaf18: sete r8b
0xaf1c: lea rcx,[r8 + rax]
0xaf20: jmp 0xaee5
0xaf22: nop dword ptr [rax]
0xaf26: nop word ptr cs:[rax + rax]
0xaf30: test rdi,rdi
0xaf33: mov rax,qword ptr [rsi]
0xaf36: je 0xaf60
0xaf38: movabs rdx,0x5555555555555553
0xaf42: cmp rax,rdx
0xaf45: ja 0xaf71
0xaf47: mov rdx,rax
0xaf4a: shr rdx,1
0xaf4d: lea rax,[rdx + rax + 1]
0xaf52: mov qword ptr [rsi],rax
0xaf55: mov rsi,rax
0xaf58: jmp 0xae30
0xaf5d: nop dword ptr [rax]
0xaf60: test rax,rax
0xaf63: mov edx,0x80
0xaf68: cmove rax,rdx
0xaf6c: test rax,rax
0xaf6f: jns 0xaf52
0xaf71: sub rsp,8
0xaf75: call 0xb020
0xaf7a: nop word ptr [rax + rax]
0xaf80: push rbx
0xaf81: mov rbx,rdi
0xaf84: call 0xadd0
0xaf89: mov rdx,rbx
0xaf8c: xor esi,esi
0xaf8e: mov rdi,rax
0xaf91: pop rbx
0xaf92: jmp 0x22a0
0xaf97: nop word ptr [rax + rax]
0xafa0: mov rax,rdi
0xafa3: sub rsp,8
0xafa7: mul rsi
0xafaa: seto dl
0xafad: test rax,rax
0xafb0: js 0xafc9
0xafb2: movzx edx,dl
0xafb5: test rdx,rdx
0xafb8: jne 0xafc9
0xafba: call 0x2320
0xafbf: test rax,rax
0xafc2: je 0xafc9
0xafc4: add rsp,8
0xafc8: ret 
0xafc9: call 0xb020
0xafce: nop 
0xaff8: nop dword ptr [rax + rax]
0xb013: nop word ptr cs:[rax + rax]
0xb01d: nop dword ptr [rax]
0xb050: call 0x20a0
0xb055: nop word ptr cs:[rax + rax]
0xb05f: nop 
0xb077: nop word ptr [rax + rax]
0xb08f: nop 
0xb0d4: shl rax,5
0xb0d8: lea rbx,[rip + 0x5879]
0xb0df: mov r13,qword ptr [rcx + rax]
0xb13c: nop dword ptr [rax]
0xb1a6: nop word ptr cs:[rax + rax]
0xb1e6: cmp eax,0x22
0xb1e9: mov ebp,1
0xb1ee: jne 0xb218
0xb203: nop dword ptr [rax + rax]
0xb212: nop word ptr [rax + rax]
0xb242: nop word ptr [rax + rax]
0xb24c: nop dword ptr [rax]
0xb2eb: nop dword ptr [rax + rax]
0xb41c: nop dword ptr [rax]
0xb4a3: nop dword ptr [rax + rax]
0xb4c0: call 0x21f0
0xb4c5: lea rcx,[rip + 0x55dc]
0xb4cc: lea rsi,[rip + 0x54b5]
0xb4d3: lea rdi,[rip + 0x54ce]
0xb4da: mov edx,0x54
0xb4df: call 0x2280
0xb55c: nop dword ptr [rax]
0xb60c: call 0x21f0
0xb611: nop word ptr cs:[rax + rax]
0xb61b: nop dword ptr [rax + rax]
0xb638: nop dword ptr [rax + rax]
0xb661: nop dword ptr [rax + rax]
0xb666: nop word ptr cs:[rax + rax]
0xb6a7: nop word ptr [rax + rax]
0xb70e: nop 
0xb791: nop dword ptr [rax]
0xb817: nop word ptr [rax + rax]
0xb871: nop dword ptr [rax]
0xb901: call 0x21f0
0xb982: nop word ptr cs:[rax + rax]
0xb98c: nop dword ptr [rax]
0xb9ed: nop dword ptr [rax]
0xba7a: nop word ptr [rax + rax]
0xbab1: call 0x21f0
0xbab6: nop word ptr cs:[rax + rax]
0xbb3e: call 0x21f0
0xbb43: nop word ptr cs:[rax + rax]
0xbb4d: nop dword ptr [rax]
0xbb64: nop dword ptr [rax]
0xbbcc: nop dword ptr [rax]
0xbbd2: nop dword ptr [rax]
0xbbd6: nop word ptr cs:[rax + rax]
0xbc16: nop word ptr cs:[rax + rax]
0xbec8: nop dword ptr [rax + rax]
0xbf24: nop dword ptr [rax]
0xc06f: nop 
0xc09a: nop word ptr [rax + rax]
0xc371: nop dword ptr [rax]
0xc39e: nop 
0xc3ec: nop dword ptr [rax]
0xc438: nop dword ptr [rax + rax]
0xc463: call 0x21f0
0xc468: nop dword ptr [rax + rax]
0xc4e9: call 0x21f0
0xc4ee: nop 
0xc4f0: push r15
0xc4f2: push r14
0xc4f4: mov eax,0x401
0xc4f9: push r13
0xc4fb: push r12
0xc4fd: mov r13,rdi
0xc500: push rbp
0xc501: push rbx
0xc502: lea rbx,[rsi + 1]
0xc506: movabs r14,0x3fffffffffffffff
0xc510: movabs r15,0x7ffffffffffffffe
0xc51a: sub rsp,8
0xc51e: cmp rsi,0x401
0xc525: cmovae rbx,rax
0xc529: nop dword ptr [rax]
0xc530: mov rdi,rbx
0xc533: call 0x23c0
0xc538: test rax,rax
0xc53b: mov rbp,rax
0xc53e: je 0xc57b
0xc540: mov rdx,rbx
0xc543: mov rsi,rax
0xc546: mov rdi,r13
0xc549: call 0x2140
0xc54e: test rax,rax
0xc551: mov r12,rax
0xc554: js 0xc5a8
0xc556: cmp rbx,r12
0xc559: ja 0xc5c0
0xc55b: mov rdi,rbp
0xc55e: call 0x2070
0xc563: cmp rbx,r14
0xc566: ja 0xc590
0xc568: add rbx,rbx
0xc56b: mov rdi,rbx
0xc56e: call 0x23c0
0xc573: test rax,rax
0xc576: mov rbp,rax
0xc579: jne 0xc540
0xc57b: add rsp,8
0xc57f: mov rax,rbp
0xc582: pop rbx
0xc583: pop rbp
0xc584: pop r12
0xc586: pop r13
0xc588: pop r14
0xc58a: pop r15
0xc58c: ret 
0xc58d: nop dword ptr [rax]
0xc590: cmp rbx,r15
0xc593: ja 0xc5d0
0xc595: movabs rbx,0x7fffffffffffffff
0xc59f: jmp 0xc530
0xc5a1: nop dword ptr [rax]
0xc5a8: call 0x20b0
0xc5ad: cmp dword ptr [rax],0x22
0xc5b0: je 0xc556
0xc5b2: mov rdi,rbp
0xc5b5: xor ebp,ebp
0xc5b7: call 0x2070
0xc5bc: jmp 0xc57b
0xc5be: nop 
0xc5c0: mov byte ptr [rbp + r12],0
0xc5c6: jmp 0xc57b
0xc5c8: nop dword ptr [rax + rax]
0xc5d0: call 0x20b0
0xc5d5: xor ebp,ebp
0xc5d7: mov dword ptr [rax],0xc
0xc5dd: jmp 0xc57b
0xc5df: nop 
0xc5e0: mov edi,1
0xc5e5: jmp 0x4d70
0xc5ea: nop word ptr [rax + rax]
0xc636: nop word ptr cs:[rax + rax]
0xc6f0: mov byte ptr [rsp + 0x17],1
0xc6f5: jmp 0xc677
0xc6f7: nop word ptr [rax + rax]
0xc706: nop word ptr cs:[rax + rax]
0xc710: cmp rdx,-1
0xc714: push r12
0xc716: mov edx,5
0xc71b: push rbp
0xc71c: mov r12,rsi
0xc71f: push rbx
0xc720: mov rbp,rdi
0xc723: je 0xc770
0xc725: lea rsi,[rip + 0x450f]
0xc72c: xor edi,edi
0xc72e: call 0x2190
0xc733: mov rbx,rax
0xc736: mov rsi,rbp
0xc739: mov edi,1
0xc73e: call 0xa4f0
0xc743: mov rdx,r12
0xc746: mov rbp,rax
0xc749: mov esi,8
0xc74e: xor edi,edi
0xc750: call 0xa120
0xc755: mov r8,rbp
0xc758: mov rdx,rbx
0xc75b: mov rcx,rax
0xc75e: pop rbx
0xc75f: pop rbp
0xc760: pop r12
0xc762: xor esi,esi
0xc764: xor edi,edi
0xc766: xor eax,eax
0xc768: jmp 0x24a0
0xc76d: nop dword ptr [rax]
0xc770: lea rsi,[rip + 0x44a9]
0xc777: xor edi,edi
0xc779: call 0x2190
0xc77e: mov rbx,rax
0xc781: jmp 0xc736
0xc783: nop dword ptr [rax]
0xc786: nop word ptr cs:[rax + rax]
0xc790: push r15
0xc792: push r14
0xc794: mov r14,rdi
0xc797: push r13
0xc799: push r12
0xc79b: xor edi,edi
0xc79d: push rbp
0xc79e: push rbx
0xc79f: mov rbp,rsi
0xc7a2: lea rsi,[rip + 0x44af]
0xc7a9: mov r12,rdx
0xc7ac: mov edx,5
0xc7b1: sub rsp,8
0xc7b5: mov rbx,qword ptr [rip + 0x207b84]
0xc7bc: call 0x2190
0xc7c1: mov rdi,rax
0xc7c4: mov rsi,rbx
0xc7c7: call 0x2310
0xc7cc: mov r15,qword ptr [r14]
0xc7cf: test r15,r15
0xc7d2: je 0xc868
0xc7d8: xor r13d,r13d
0xc7db: xor ebx,ebx
0xc7dd: jmp 0xc818
0xc7df: nop 
0xc7e0: mov rdi,r15
0xc7e3: add rbx,1
0xc7e7: mov r13,rbp
0xc7ea: call 0xa510
0xc7ef: mov rdi,qword ptr [rip + 0x207b4a]
0xc7f6: lea rdx,[rip + 0x4470]
0xc7fd: mov rcx,rax
0xc800: mov esi,1
0xc805: xor eax,eax
0xc807: add rbp,r12
0xc80a: call 0x2530
0xc80f: mov r15,qword ptr [r14 + rbx*8]
0xc813: test r15,r15
0xc816: je 0xc868
0xc818: test rbx,rbx
0xc81b: je 0xc7e0
0xc81d: mov rdx,r12
0xc820: mov rsi,rbp
0xc823: mov rdi,r13
0xc826: call 0x2300
0xc82b: test eax,eax
0xc82d: jne 0xc7e0
0xc82f: mov rdi,r15
0xc832: add rbx,1
0xc836: add rbp,r12
0xc839: call 0xa510
0xc83e: mov rdi,qword ptr [rip + 0x207afb]
0xc845: lea rdx,[rip + 0x4429]
0xc84c: mov rcx,rax
0xc84f: mov esi,1
0xc854: xor eax,eax
0xc856: call 0x2530
0xc85b: mov r15,qword ptr [r14 + rbx*8]
0xc85f: test r15,r15
0xc862: jne 0xc818
0xc864: nop dword ptr [rax]
0xc868: mov rdi,qword ptr [rip + 0x207ad1]
0xc86f: mov rax,qword ptr [rdi + 0x28]
0xc873: cmp rax,qword ptr [rdi + 0x30]
0xc877: jae 0xc898
0xc879: lea rdx,[rax + 1]
0xc87d: mov qword ptr [rdi + 0x28],rdx
0xc881: mov byte ptr [rax],0xa
0xc884: add rsp,8
0xc888: pop rbx
0xc889: pop rbp
0xc88a: pop r12
0xc88c: pop r13
0xc88e: pop r14
0xc890: pop r15
0xc892: ret 
0xc893: nop dword ptr [rax + rax]
0xc898: add rsp,8
0xc89c: mov esi,0xa
0xc8a1: pop rbx
0xc8a2: pop rbp
0xc8a3: pop r12
0xc8a5: pop r13
0xc8a7: pop r14
0xc8a9: pop r15
0xc8ab: jmp 0x2240
0xc8b0: push r15
0xc8b2: push r14
0xc8b4: mov r14,rdi
0xc8b7: push r13
0xc8b9: push r12
0xc8bb: mov r12,rsi
0xc8be: push rbp
0xc8bf: push rbx
0xc8c0: mov rbp,rcx
0xc8c3: mov rbx,rdx
0xc8c6: mov rcx,r8
0xc8c9: mov rdx,rbp
0xc8cc: sub rsp,8
0xc8d0: mov rsi,rbx
0xc8d3: mov rdi,r12
0xc8d6: mov r15,r8
0xc8d9: mov r13,r9
0xc8dc: call 0xc5f0
0xc8e1: test rax,rax
0xc8e4: js 0xc8f5
0xc8e6: add rsp,8
0xc8ea: pop rbx
0xc8eb: pop rbp
0xc8ec: pop r12
0xc8ee: pop r13
0xc8f0: pop r14
0xc8f2: pop r15
0xc8f4: ret 
0xc8f5: mov rdx,rax
0xc8f8: mov rsi,r12
0xc8fb: mov rdi,r14
0xc8fe: call 0xc710
0xc903: mov rdx,r15
0xc906: mov rsi,rbp
0xc909: mov rdi,rbx
0xc90c: call 0xc790
0xc911: call r13
0xc914: mov rax,-1
0xc91b: jmp 0xc8e6
0xc91d: nop dword ptr [rax]
0xc920: push r14
0xc922: push r13
0xc924: push r12
0xc926: push rbp
0xc927: push rbx
0xc928: mov r14,qword ptr [rsi]
0xc92b: test r14,r14
0xc92e: je 0xc961
0xc930: mov r12,rcx
0xc933: mov r13,rdi
0xc936: mov rbp,rdx
0xc939: lea rbx,[rsi + 8]
0xc93d: jmp 0xc94f
0xc93f: nop 
0xc940: mov r14,qword ptr [rbx]
0xc943: add rbp,r12
0xc946: add rbx,8
0xc94a: test r14,r14
0xc94d: je 0xc961
0xc94f: mov rdx,r12
0xc952: mov rsi,rbp
0xc955: mov rdi,r13
0xc958: call 0x2300
0xc95d: test eax,eax
0xc95f: jne 0xc940
0xc961: pop rbx
0xc962: mov rax,r14
0xc965: pop rbp
0xc966: pop r12
0xc968: pop r13
0xc96a: pop r14
0xc96c: ret 
0xc96d: nop dword ptr [rax]
0xc970: push r12
0xc972: push rbp
0xc973: mov rbp,rdi
0xc976: push rbx
0xc977: call 0x20e0
0xc97c: mov ebx,dword ptr [rbp]
0xc97f: mov rdi,rbp
0xc982: mov r12,rax
0xc985: call 0xcb80
0xc98a: and ebx,0x20
0xc98d: test ebx,ebx
0xc98f: jne 0xc9a8
0xc991: test eax,eax
0xc993: je 0xc99f
0xc995: test r12,r12
0xc998: mov eax,0xffffffff
0xc99d: je 0xc9d8
0xc99f: pop rbx
0xc9a0: pop rbp
0xc9a1: pop r12
0xc9a3: ret 
0xc9a4: nop dword ptr [rax]
0xc9a8: test eax,eax
0xc9aa: jne 0xc9c8
0xc9ac: call 0x20b0
0xc9b1: mov dword ptr [rax],0
0xc9b7: mov eax,0xffffffff
0xc9bc: pop rbx
0xc9bd: pop rbp
0xc9be: pop r12
0xc9c0: ret 
0xc9c1: nop dword ptr [rax]
0xc9c8: pop rbx
0xc9c9: mov eax,0xffffffff
0xc9ce: pop rbp
0xc9cf: pop r12
0xc9d1: ret 
0xc9d2: nop word ptr [rax + rax]
0xc9d8: call 0x20b0
0xc9dd: cmp dword ptr [rax],9
0xc9e0: pop rbx
0xc9e1: pop rbp
0xc9e2: pop r12
0xc9e4: setne al
0xc9e7: movzx eax,al
0xc9ea: neg eax
0xc9ec: ret 
0xc9ed: nop dword ptr [rax]
0xca34: nop dword ptr [rax]
0xca38: lea rax,[rsp + 0x60]
0xca3d: mov dword ptr [rsp],0x10
0xca44: mov edx,dword ptr [rsp + 0x30]
0xca48: mov qword ptr [rsp + 8],rax
0xca4d: lea rax,[rsp + 0x20]
0xca52: mov qword ptr [rsp + 0x10],rax
0xca57: jmp 0xca11
0xca59: call 0x21f0
0xca5e: nop 
0xca9a: nop word ptr [rax + rax]
0xcac0: movsx rcx,byte ptr [rdi]
0xcac4: test cl,cl
0xcac6: je 0xcaf0
0xcac8: xor eax,eax
0xcaca: nop word ptr [rax + rax]
0xcad0: rol rax,9
0xcad4: add rdi,1
0xcad8: add rax,rcx
0xcadb: movsx rcx,byte ptr [rdi]
0xcadf: test cl,cl
0xcae1: jne 0xcad0
0xcae3: xor edx,edx
0xcae5: div rsi
0xcae8: mov rax,rdx
0xcaeb: ret 
0xcaec: nop dword ptr [rax]
0xcaf0: xor edx,edx
0xcaf2: mov rax,rdx
0xcaf5: ret 
0xcaf6: nop word ptr cs:[rax + rax]
0xcb26: nop word ptr cs:[rax + rax]
0xcb3c: nop dword ptr [rax]
0xcb7f: nop 
0xcbc5: nop dword ptr [rax]
0xcbfb: nop dword ptr [rax + rax]
0xcc23: nop dword ptr [rax + rax]
0xcc4f: nop 
0xcc97: nop word ptr [rax + rax]
0xcda2: mov rax,qword ptr [rbp - 0x418]
0xcda9: mov r12,qword ptr [rax]
0xcea4: nop dword ptr [rax]
0xced3: nop dword ptr [rax + rax]
0xd1fd: nop dword ptr [rax]
0xd274: movsxd rdx,ecx
0xd277: cmp rdx,r10
0xd27a: jae 0xd28a
0xd27c: add rdx,r15
0xd27f: cmp byte ptr [rdx + r14],0
0xd284: jne 0xdbc6
0xd28a: cmp ecx,eax
0xd28c: jge 0xd296
0xd332: nop word ptr [rax + rax]
0xd45f: nop 
0xd4e2: nop word ptr [rax + rax]
0xd563: nop dword ptr [rax + rax]
0xd5a4: nop dword ptr [rax]
0xd626: nop word ptr cs:[rax + rax]
0xd65c: nop dword ptr [rax]
0xd68c: nop dword ptr [rax]
0xd6cb: nop dword ptr [rax + rax]
0xd6e1: nop dword ptr [rax]
0xd6f5: nop dword ptr [rax]
0xd6f8: mov byte ptr [rdi + 1],0
0xd6fc: jmp 0xd1b0
0xd701: nop dword ptr [rax]
0xd759: nop dword ptr [rax]
0xd779: nop dword ptr [rax]
0xd7a2: nop word ptr [rax + rax]
0xd7fd: nop dword ptr [rax]
0xd80f: nop 
0xd8c8: nop dword ptr [rax + rax]
0xd8d8: nop dword ptr [rax + rax]
0xd90d: nop dword ptr [rax]
0xd94a: nop word ptr [rax + rax]
0xd963: nop dword ptr [rax + rax]
0xd9f8: nop dword ptr [rax + rax]
0xda0c: nop dword ptr [rax]
0xda1b: nop dword ptr [rax + rax]
0xda2b: nop dword ptr [rax + rax]
0xda3c: nop dword ptr [rax]
0xda88: nop dword ptr [rax + rax]
0xda98: nop dword ptr [rax + rax]
0xdaaf: nop 
0xdac6: nop word ptr cs:[rax + rax]
0xdaea: nop word ptr [rax + rax]
0xdb63: nop dword ptr [rax + rax]
0xdb78: nop dword ptr [rax + rax]
0xdbcb: nop dword ptr [rax + rax]
0xdd7d: nop dword ptr [rax]
0xdd97: call 0x21f0
0xddbf: nop 
0xddce: nop 
0xde21: cmp esi,0x406
0xde27: jne 0xde70
0xde29: mov rax,qword ptr [rsp + 0x10]
0xde2e: cmp dword ptr [rip + 0x206743],0
0xde35: mov dword ptr [rsp],0x18
0xde3c: mov r12d,dword ptr [rax + 0x10]
0xde40: mov edx,r12d
0xde43: js 0xdf73
0xde49: xor eax,eax
0xde4b: mov esi,0x406
0xde50: call 0x2150
0xde55: test eax,eax
0xde57: mov ebx,eax
0xde59: js 0xdfe8
0xde5f: mov dword ptr [rip + 0x20670f],1
0xde69: jmp 0xdeb0
0xde6b: nop dword ptr [rax + rax]
0xde70: cmp esi,0xb
0xde73: je 0xdea0
0xde75: jg 0xded0
0xde77: cmp esi,4
0xde7a: je 0xdf50
0xde80: jg 0xdf40
0xde86: cmp esi,2
0xde89: je 0xdf50
0xde8f: jg 0xdea0
0xde91: cmp esi,1
0xde94: jne 0xdef8
0xde96: nop word ptr cs:[rax + rax]
0xdea0: mov edi,ebp
0xdea2: xor eax,eax
0xdea4: call 0x2150
0xdea9: mov ebx,eax
0xdeab: nop dword ptr [rax + rax]
0xdecf: nop 
0xded0: cmp esi,0x407
0xded6: jg 0xdf20
0xded8: cmp esi,0x406
0xdede: jge 0xdf50
0xdee0: cmp esi,0x401
0xdee6: je 0xdea0
0xdee8: cmp esi,0x402
0xdeee: je 0xdf50
0xdef0: cmp esi,0x400
0xdef6: je 0xdf50
0xdef8: mov eax,dword ptr [rsp]
0xdefb: cmp eax,0x2f
0xdefe: ja 0xe03a
0xdf04: add rax,qword ptr [rsp + 0x10]
0xdf09: mov rdx,qword ptr [rax]
0xdf0c: mov edi,ebp
0xdf0e: xor eax,eax
0xdf10: call 0x2150
0xdf15: mov ebx,eax
0xdf17: jmp 0xdeb0
0xdf19: nop dword ptr [rax]
0xdf20: cmp esi,0x409
0xdf26: je 0xdf50
0xdf28: jl 0xdea0
0xdf2e: cmp esi,0x40a
0xdf34: jne 0xdef8
0xdf36: jmp 0xdea0
0xdf3b: nop dword ptr [rax + rax]
0xdf40: cmp esi,9
0xdf43: je 0xdea0
0xdf49: jg 0xdf50
0xdf4b: cmp esi,8
0xdf4e: jne 0xdef8
0xdf50: mov eax,dword ptr [rsp]
0xdf53: cmp eax,0x2f
0xdf56: ja 0xe044
0xdf5c: add rax,qword ptr [rsp + 0x10]
0xdf61: mov edx,dword ptr [rax]
0xdf63: mov edi,ebp
0xdf65: xor eax,eax
0xdf67: call 0x2150
0xdf6c: mov ebx,eax
0xdf6e: jmp 0xdeb0
0xdf73: xor esi,esi
0xdf75: xor eax,eax
0xdf77: call 0x2150
0xdf7c: test eax,eax
0xdf7e: mov ebx,eax
0xdf80: js 0xdeb0
0xdf86: cmp dword ptr [rip + 0x2065eb],-1
0xdf8d: jne 0xdeb0
0xdf93: xor eax,eax
0xdf95: mov esi,1
0xdf9a: mov edi,ebx
0xdf9c: call 0x2150
0xdfa1: test eax,eax
0xdfa3: js 0xdfc1
0xdfa5: or eax,1
0xdfa8: mov esi,2
0xdfad: mov edi,ebx
0xdfaf: mov edx,eax
0xdfb1: xor eax,eax
0xdfb3: call 0x2150
0xdfb8: cmp eax,-1
0xdfbb: jne 0xdeb0
0xdfc1: call 0x20b0
0xdfc6: mov r12d,dword ptr [rax]
0xdfc9: mov rbp,rax
0xdfcc: mov edi,ebx
0xdfce: call 0x22d0
0xdfd3: mov ebx,0xffffffff
0xdfd8: mov dword ptr [rbp],r12d
0xdfdc: jmp 0xdeb0
0xdfe1: nop dword ptr [rax]
0xdfe8: call 0x20b0
0xdfed: cmp dword ptr [rax],0x16
0xdff0: jne 0xde5f
0xdff6: xor esi,esi
0xdff8: xor eax,eax
0xdffa: mov edx,r12d
0xdffd: mov edi,ebp
0xdfff: call 0x2150
0xe004: test eax,eax
0xe006: mov ebx,eax
0xe008: js 0xdeb0
0xe00e: mov dword ptr [rip + 0x206560],0xffffffff
0xe018: jmp 0xdf93
0xe01d: call 0x21f0
0xe03a: mov rax,qword ptr [rsp + 8]
0xe03f: jmp 0xdf09
0xe044: mov rax,qword ptr [rsp + 8]
0xe049: jmp 0xdf61
0xe04e: nop 
0xe088: nop dword ptr [rax + rax]
0xe090: mov rdx,qword ptr [rdi + 8]
0xe094: add rdx,0xf
0xe098: and rdx,0xfffffffffffffff0
0xe09c: lea r11,[rdx + 0x10]
0xe0a0: mov qword ptr [rdi + 8],r11
0xe0a4: fld xword ptr [rdx]
0xe0a6: fstp xword ptr [rax + 0x10]
0xe0a9: nop dword ptr [rax]
0xe0b0: add rcx,1
0xe0b4: add rax,0x20
0xe0b8: cmp qword ptr [rsi],rcx
0xe0bb: ja 0xe078
0xe0c6: mov r11d,dword ptr [rdi]
0xe0c9: cmp r11d,0x2f
0xe0cd: ja 0xe20a
0xe0d3: mov edx,r11d
0xe0d6: add rdx,qword ptr [rdi + 0x10]
0xe0da: add r11d,8
0xe0de: mov dword ptr [rdi],r11d
0xe0e1: mov rdx,qword ptr [rdx]
0xe0e4: mov qword ptr [rax + 0x10],rdx
0xe0e8: jmp 0xe0b0
0xe0ea: mov r11d,dword ptr [rdi]
0xe0ed: cmp r11d,0x2f
0xe0f1: ja 0xe22c
0xe0f7: mov edx,r11d
0xe0fa: add rdx,qword ptr [rdi + 0x10]
0xe0fe: add r11d,8
0xe102: mov dword ptr [rdi],r11d
0xe105: mov edx,dword ptr [rdx]
0xe107: mov dword ptr [rax + 0x10],edx
0xe10a: jmp 0xe0b0
0xe10c: mov r11d,dword ptr [rdi]
0xe10f: cmp r11d,0x2f
0xe113: ja 0xe21b
0xe119: mov edx,r11d
0xe11c: add rdx,qword ptr [rdi + 0x10]
0xe120: add r11d,8
0xe124: mov dword ptr [rdi],r11d
0xe127: mov edx,dword ptr [rdx]
0xe129: mov byte ptr [rax + 0x10],dl
0xe12c: jmp 0xe0b0
0xe12e: mov r11d,dword ptr [rdi]
0xe131: cmp r11d,0x2f
0xe135: ja 0xe1da
0xe13b: mov edx,r11d
0xe13e: add rdx,qword ptr [rdi + 0x10]
0xe142: add r11d,8
0xe146: mov dword ptr [rdi],r11d
0xe149: mov edx,dword ptr [rdx]
0xe14b: mov word ptr [rax + 0x10],dx
0xe14f: jmp 0xe0b0
0xe154: mov r11d,dword ptr [rdi]
0xe157: cmp r11d,0x2f
0xe15b: ja 0xe1eb
0xe161: mov edx,r11d
0xe164: add rdx,qword ptr [rdi + 0x10]
0xe168: add r11d,8
0xe16c: mov dword ptr [rdi],r11d
0xe16f: mov rdx,qword ptr [rdx]
0xe172: test rdx,rdx
0xe175: cmove rdx,r9
0xe179: mov qword ptr [rax + 0x10],rdx
0xe17d: jmp 0xe0b0
0xe182: mov r11d,dword ptr [rdi + 4]
0xe186: cmp r11d,0xaf
0xe18d: ja 0xe23d
0xe193: mov edx,r11d
0xe196: add rdx,qword ptr [rdi + 0x10]
0xe19a: add r11d,0x10
0xe19e: mov dword ptr [rdi + 4],r11d
0xe1a2: movsd xmm0,qword ptr [rdx]
0xe1a6: movsd qword ptr [rax + 0x10],xmm0
0xe1ab: jmp 0xe0b0
0xe1b0: mov r11d,dword ptr [rdi]
0xe1b3: cmp r11d,0x2f
0xe1b7: ja 0xe1fc
0xe1b9: mov edx,r11d
0xe1bc: add rdx,qword ptr [rdi + 0x10]
0xe1c0: add r11d,8
0xe1c4: mov dword ptr [rdi],r11d
0xe1c7: mov rdx,qword ptr [rdx]
0xe1ca: test rdx,rdx
0xe1cd: cmove rdx,r10
0xe1d1: mov qword ptr [rax + 0x10],rdx
0xe1d5: jmp 0xe0b0
0xe1da: mov rdx,qword ptr [rdi + 8]
0xe1de: lea r11,[rdx + 8]
0xe1e2: mov qword ptr [rdi + 8],r11
0xe1e6: jmp 0xe149
0xe1eb: mov rdx,qword ptr [rdi + 8]
0xe1ef: lea r11,[rdx + 8]
0xe1f3: mov qword ptr [rdi + 8],r11
0xe1f7: jmp 0xe16f
0xe1fc: mov rdx,qword ptr [rdi + 8]
0xe200: lea r11,[rdx + 8]
0xe204: mov qword ptr [rdi + 8],r11
0xe208: jmp 0xe1c7
0xe20a: mov rdx,qword ptr [rdi + 8]
0xe20e: lea r11,[rdx + 8]
0xe212: mov qword ptr [rdi + 8],r11
0xe216: jmp 0xe0e1
0xe21b: mov rdx,qword ptr [rdi + 8]
0xe21f: lea r11,[rdx + 8]
0xe223: mov qword ptr [rdi + 8],r11
0xe227: jmp 0xe127
0xe22c: mov rdx,qword ptr [rdi + 8]
0xe230: lea r11,[rdx + 8]
0xe234: mov qword ptr [rdi + 8],r11
0xe238: jmp 0xe105
0xe23d: mov rdx,qword ptr [rdi + 8]
0xe241: lea r11,[rdx + 8]
0xe245: mov qword ptr [rdi + 8],r11
0xe249: jmp 0xe1a2
0xe24e: nop 
0xe2be: nop 
0xe301: nop dword ptr [rax]
0xe367: nop word ptr [rax + rax]
0xe3b2: nop word ptr [rax + rax]
0xe3c8: nop dword ptr [rax + rax]
0xe3d8: nop dword ptr [rax + rax]
0xe3e8: nop dword ptr [rax + rax]
0xe3f8: nop dword ptr [rax + rax]
0xe427: nop word ptr [rax + rax]
0xe46d: nop dword ptr [rax]
0xe475: nop dword ptr [rax]
0xe65e: mov rdi,rcx
0xe661: call 0x2450
0xe666: mov rdx,qword ptr [r15 + 8]
0xe66a: mov r8,qword ptr [rsp + 0x30]
0xe66f: mov rcx,rax
0xe672: mov r10,qword ptr [rsp + 0x38]
0xe677: mov r9,qword ptr [rsp + 0x40]
0xe83d: nop dword ptr [rax]
0xe992: nop word ptr [rax + rax]
0xe9f5: nop dword ptr [rax]
0xea86: nop word ptr cs:[rax + rax]
0xeade: nop 
0xeeeb: nop dword ptr [rax + rax]
0xef3c: nop dword ptr [rax]
0xef40: push r15
0xef42: push r14
0xef44: mov r15,rdx
0xef47: push r13
0xef49: push r12
0xef4b: lea r12,[rip + 0x20491e]
0xef52: push rbp
0xef53: lea rbp,[rip + 0x20491e]
0xef5a: push rbx
0xef5b: mov r13d,edi
0xef5e: mov r14,rsi
0xef61: sub rbp,r12
0xef64: sub rsp,8
0xef68: sar rbp,3
0xef6c: call 0x2020
0xef71: test rbp,rbp
0xef74: je 0xef96
0xef76: xor ebx,ebx
0xef78: nop dword ptr [rax + rax]
0xef80: mov rdx,r15
0xef83: mov rsi,r14
0xef86: mov edi,r13d
0xef89: call qword ptr [r12 + rbx*8]
0xef8d: add rbx,1
0xef91: cmp rbp,rbx
0xef94: jne 0xef80
0xef96: add rsp,8
0xef9a: pop rbx
0xef9b: pop rbp
0xef9c: pop r12
0xef9e: pop r13
0xefa0: pop r14
0xefa2: pop r15
0xefa4: ret 
0xefa5: nop 
0xefa6: nop word ptr cs:[rax + rax]
0xefb0: ret 
0xefb2: nop word ptr cs:[rax + rax]
0xefbc: nop dword ptr [rax]
0xefd0: sub rsp,8
0xefd4: add rsp,8
0xefd8: ret 
