0x7940:	sub	rsp, 8
0x7944:	add	rsp, 8
0x7948:	ret	


0x7930:	mov	rdx, qword ptr [rip + 0x2036d1]
0x7937:	xor	esi, esi
0x7939:	jmp	0x1870


0x7920:	ret	


0x78b0:	push	r15
0x78b2:	push	r14
0x78b4:	mov	r15, rdx
0x78b7:	push	r13
0x78b9:	push	r12
0x78bb:	lea	r12, [rip + 0x20314e]
0x78c2:	push	rbp
0x78c3:	lea	rbp, [rip + 0x20314e]
0x78ca:	push	rbx
0x78cb:	mov	r13d, edi
0x78ce:	mov	r14, rsi
0x78d1:	sub	rbp, r12
0x78d4:	sub	rsp, 8
0x78d8:	sar	rbp, 3
0x78dc:	call	0x1580


0x7870:	sub	rsp, 8
0x7874:	mov	edi, 0xe
0x7879:	call	0x17b0


0x7810:	sub	rsp, 8
0x7814:	xor	esi, esi
0x7816:	call	0x1800


0x7790:	push	r12
0x7792:	push	rbp
0x7793:	mov	rbp, rdi
0x7796:	push	rbx
0x7797:	call	0x1600


0x7700:	push	r13
0x7702:	push	r12
0x7704:	mov	r13, rsi
0x7707:	push	rbp
0x7708:	push	rbx
0x7709:	mov	rbx, rdi
0x770c:	mov	r12, rdx
0x770f:	sub	rsp, 0x18
0x7713:	mov	rax, qword ptr fs:[0x28]
0x771c:	mov	qword ptr [rsp + 8], rax
0x7721:	xor	eax, eax
0x7723:	lea	rax, [rsp + 4]
0x7728:	test	rdi, rdi
0x772b:	cmove	rbx, rax
0x772f:	mov	rdi, rbx
0x7732:	call	0x16b0


0x76a0:	mov	rax, qword ptr [rdi + 8]
0x76a4:	cmp	qword ptr [rdi + 0x10], rax
0x76a8:	je	0x76b0


0x7660:	test	rdi, rdi
0x7663:	push	rbx
0x7664:	mov	rbx, rdi
0x7667:	je	0x767a


0x73e0:	push	r12
0x73e2:	push	rbp
0x73e3:	mov	ebp, edi
0x73e5:	push	rbx
0x73e6:	sub	rsp, 0x50
0x73ea:	mov	rax, qword ptr fs:[0x28]
0x73f3:	mov	qword ptr [rsp + 0x18], rax
0x73f8:	xor	eax, eax
0x73fa:	lea	rax, [rsp + 0x70]
0x73ff:	test	esi, esi
0x7401:	mov	qword ptr [rsp + 0x30], rdx
0x7406:	mov	qword ptr [rsp + 0x38], rcx
0x740b:	mov	qword ptr [rsp + 0x40], r8
0x7410:	mov	qword ptr [rsp + 8], rax
0x7415:	lea	rax, [rsp + 0x20]
0x741a:	mov	qword ptr [rsp + 0x48], r9
0x741f:	mov	dword ptr [rsp], 0x10
0x7426:	mov	qword ptr [rsp + 0x10], rax
0x742b:	je	0x7632


0x7360:	push	r12
0x7362:	push	rbp
0x7363:	push	rbx
0x7364:	mov	rbx, rdi
0x7367:	call	0x1780


0x7320:	lea	rsi, [rip + 0x1ae8]
0x7327:	sub	rsp, 8
0x732b:	mov	edx, 5
0x7330:	xor	edi, edi
0x7332:	call	0x1660


0x7300:	push	rbx
0x7301:	mov	rbx, rdi
0x7304:	call	0x1680


0x72d0:	push	rbp
0x72d1:	push	rbx
0x72d2:	mov	rbp, rdi
0x72d5:	mov	rdi, rsi
0x72d8:	mov	rbx, rsi
0x72db:	sub	rsp, 8
0x72df:	call	0x70d0


0x72a0:	mov	rax, rdi
0x72a3:	sub	rsp, 8
0x72a7:	mul	rsi
0x72aa:	seto	dl
0x72ad:	test	rax, rax
0x72b0:	js	0x72c9


0x7280:	push	rbx
0x7281:	mov	rbx, rdi
0x7284:	call	0x70d0


0x7230:	test	rdi, rdi
0x7233:	mov	rax, qword ptr [rsi]
0x7236:	je	0x7260


0x71a0:	test	rdi, rdi
0x71a3:	mov	r9, rdx
0x71a6:	mov	rcx, qword ptr [rsi]
0x71a9:	je	0x71e0


0x7170:	mov	rax, rsi
0x7173:	mul	rdx
0x7176:	mov	rsi, rax
0x7179:	seto	al
0x717c:	test	rsi, rsi
0x717f:	js	0x718b


0x7130:	test	rsi, rsi
0x7133:	push	rbx
0x7134:	mov	rbx, rsi
0x7137:	jne	0x713e


0x7120:	jmp	0x70d0


0x70f0:	mov	rax, rdi
0x70f3:	mul	rsi
0x70f6:	mov	rdi, rax
0x70f9:	seto	al
0x70fc:	test	rdi, rdi
0x70ff:	js	0x710b


0x70d0:	push	rbx
0x70d1:	mov	rbx, rdi
0x70d4:	call	0x1790


0x7050:	push	rbx
0x7051:	lea	rsi, [rip + 0x1aaa]
0x7058:	mov	edx, 5
0x705d:	xor	edi, edi
0x705f:	call	0x1660


0x6f70:	push	rbp
0x6f71:	push	rbx
0x6f72:	mov	r10d, 0x20
0x6f78:	xor	r11d, r11d
0x6f7b:	sub	rsp, 0xb8
0x6f82:	mov	rax, qword ptr fs:[0x28]
0x6f8b:	mov	qword ptr [rsp + 0x78], rax
0x6f90:	xor	eax, eax
0x6f92:	lea	rax, [rsp + 0xd0]
0x6f9a:	mov	qword ptr [rsp + 0xa0], r8
0x6fa2:	lea	rbx, [rsp + 0xd0]
0x6faa:	lea	r8, [rsp + 0x20]
0x6faf:	mov	qword ptr [rsp + 0xa8], r9
0x6fb7:	mov	dword ptr [rsp + 8], 0x20
0x6fbf:	mov	qword ptr [rsp + 0x10], rax
0x6fc4:	lea	rax, [rsp + 0x80]
0x6fcc:	xor	r9d, r9d
0x6fcf:	mov	qword ptr [rsp + 0x18], rax
0x6fd4:	mov	rbp, rax
0x6fd7:	nop	word ptr [rax + rax]
0x6fe0:	cmp	r10d, 0x2f
0x6fe4:	ja	0x703c


0x6ef0:	sub	rsp, 0x68
0x6ef4:	mov	r10, r8
0x6ef7:	xor	r9d, r9d
0x6efa:	mov	rax, qword ptr fs:[0x28]
0x6f03:	mov	qword ptr [rsp + 0x58], rax
0x6f08:	xor	eax, eax
0x6f0a:	mov	r8, rsp
0x6f0d:	nop	dword ptr [rax]
0x6f10:	mov	eax, dword ptr [r10]
0x6f13:	cmp	eax, 0x2f
0x6f16:	ja	0x6f5a


0x6ed0:	xor	r9d, r9d
0x6ed3:	cmp	qword ptr [r8], 0
0x6ed7:	je	0x6eeb


0x6ab0:	push	r15
0x6ab2:	push	r14
0x6ab4:	push	r13
0x6ab6:	push	r12
0x6ab8:	mov	r12, r9
0x6abb:	push	rbp
0x6abc:	push	rbx
0x6abd:	mov	rbp, rdi
0x6ac0:	mov	rbx, r8
0x6ac3:	sub	rsp, 0x28
0x6ac7:	test	rsi, rsi
0x6aca:	je	0x6be8


0x6aa0:	mov	edx, 3
0x6aa5:	xor	esi, esi
0x6aa7:	xor	eax, eax
0x6aa9:	jmp	0x73e0


0x6a80:	lea	rcx, [rip + 0x2045b9]
0x6a87:	mov	rsi, rdi
0x6a8a:	mov	rdx, -1
0x6a91:	xor	edi, edi
0x6a93:	jmp	0x6140


0x6a60:	lea	rcx, [rip + 0x2045d9]
0x6a67:	mov	rdx, -1
0x6a6e:	jmp	0x6140


0x6a40:	lea	rcx, [rip + 0x2045f9]
0x6a47:	mov	rdx, rsi
0x6a4a:	mov	rsi, rdi
0x6a4d:	xor	edi, edi
0x6a4f:	jmp	0x6140


0x6a30:	lea	rcx, [rip + 0x204609]
0x6a37:	jmp	0x6140


0x6a10:	mov	r8, rcx
0x6a13:	mov	rcx, rdx
0x6a16:	mov	rdx, rsi
0x6a19:	mov	rsi, rdi
0x6a1c:	xor	edi, edi
0x6a1e:	jmp	0x6940


0x69f0:	mov	rcx, rdx
0x69f3:	mov	r8, -1
0x69fa:	mov	rdx, rsi
0x69fd:	mov	rsi, rdi
0x6a00:	xor	edi, edi
0x6a02:	jmp	0x6940


0x69e0:	mov	r8, -1
0x69e7:	jmp	0x6940


0x6940:	sub	rsp, 0x48
0x6944:	mov	r9, rcx
0x6947:	mov	rcx, qword ptr [rip + 0x204922]
0x694e:	movdqa	xmm0, xmmword ptr [rip + 0x2048ea]
0x6956:	mov	rax, qword ptr fs:[0x28]
0x695f:	mov	qword ptr [rsp + 0x38], rax
0x6964:	xor	eax, eax
0x6966:	movaps	xmmword ptr [rsp], xmm0
0x696a:	test	rsi, rsi
0x696d:	mov	qword ptr [rsp + 0x30], rcx
0x6972:	mov	dword ptr [rsp], 0xa
0x6979:	movdqa	xmm0, xmmword ptr [rip + 0x2048cf]
0x6981:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x6986:	movdqa	xmm0, xmmword ptr [rip + 0x2048d2]
0x698e:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x6993:	je	0x69c7


0x68b0:	sub	rsp, 0x48
0x68b4:	mov	rax, rdx
0x68b7:	mov	rdx, qword ptr fs:[0x28]
0x68c0:	mov	qword ptr [rsp + 0x38], rdx
0x68c5:	xor	edx, edx
0x68c7:	cmp	esi, 0xa
0x68ca:	je	0x6934


0x68a0:	mov	edx, 0x3a
0x68a5:	jmp	0x67d0


0x6880:	mov	edx, 0x3a
0x6885:	mov	rsi, -1
0x688c:	jmp	0x67d0


0x6870:	movsx	edx, sil
0x6874:	mov	rsi, -1
0x687b:	jmp	0x67d0


0x67d0:	sub	rsp, 0x48
0x67d4:	mov	ecx, edx
0x67d6:	mov	rax, qword ptr fs:[0x28]
0x67df:	mov	qword ptr [rsp + 0x38], rax
0x67e4:	xor	eax, eax
0x67e6:	mov	rax, qword ptr [rip + 0x204a83]
0x67ed:	mov	r8, rsp
0x67f0:	and	ecx, 0x1f
0x67f3:	movdqa	xmm0, xmmword ptr [rip + 0x204a45]
0x67fb:	mov	qword ptr [rsp + 0x30], rax
0x6800:	mov	eax, edx
0x6802:	movaps	xmmword ptr [rsp], xmm0
0x6806:	shr	al, 5
0x6809:	movzx	eax, al
0x680c:	lea	r9, [r8 + rax*4 + 8]
0x6811:	movdqa	xmm0, xmmword ptr [rip + 0x204a37]
0x6819:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x681e:	movdqa	xmm0, xmmword ptr [rip + 0x204a3a]
0x6826:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x682b:	mov	edx, dword ptr [r9]
0x682e:	mov	eax, edx
0x6830:	shr	eax, cl
0x6832:	not	eax
0x6834:	and	eax, 1
0x6837:	shl	eax, cl
0x6839:	mov	rcx, r8
0x683c:	xor	eax, edx
0x683e:	mov	rdx, rsi
0x6841:	mov	rsi, rdi
0x6844:	mov	dword ptr [r9], eax
0x6847:	xor	edi, edi
0x6849:	call	0x6140


0x67c0:	mov	rcx, rdx
0x67c3:	mov	rdx, rsi
0x67c6:	mov	esi, edi
0x67c8:	xor	edi, edi
0x67ca:	jmp	0x6720


0x67b0:	mov	rdx, rsi
0x67b3:	mov	esi, edi
0x67b5:	xor	edi, edi
0x67b7:	jmp	0x6690


0x6720:	sub	rsp, 0x48
0x6724:	mov	rax, rdx
0x6727:	mov	rdx, rcx
0x672a:	mov	rcx, qword ptr fs:[0x28]
0x6733:	mov	qword ptr [rsp + 0x38], rcx
0x6738:	xor	ecx, ecx
0x673a:	cmp	esi, 0xa
0x673d:	je	0x67a0


0x6690:	sub	rsp, 0x48
0x6694:	mov	rax, rdx
0x6697:	mov	rdx, qword ptr fs:[0x28]
0x66a0:	mov	qword ptr [rsp + 0x38], rdx
0x66a5:	xor	edx, edx
0x66a7:	cmp	esi, 0xa
0x66aa:	je	0x6714


0x6670:	lea	rcx, [rip + 0x204bc9]
0x6677:	mov	rdx, rsi
0x667a:	mov	rsi, rdi
0x667d:	xor	edi, edi
0x667f:	jmp	0x6140


0x6650:	lea	rcx, [rip + 0x204be9]
0x6657:	mov	rsi, rdi
0x665a:	mov	rdx, -1
0x6661:	xor	edi, edi
0x6663:	jmp	0x6140


0x6640:	lea	rcx, [rip + 0x204bf9]
0x6647:	jmp	0x6140


0x6620:	lea	rcx, [rip + 0x204c19]
0x6627:	mov	rdx, -1
0x662e:	jmp	0x6140


0x6580:	mov	eax, dword ptr [rip + 0x204af2]
0x6586:	push	r12
0x6588:	mov	r12, qword ptr [rip + 0x204af1]
0x658f:	push	rbp
0x6590:	push	rbx
0x6591:	cmp	eax, 1
0x6594:	jle	0x65c1


0x6570:	mov	rcx, rdx
0x6573:	xor	edx, edx
0x6575:	jmp	0x6480


0x6480:	push	r15
0x6482:	push	r14
0x6484:	lea	rax, [rip + 0x204db5]
0x648b:	push	r13
0x648d:	push	r12
0x648f:	mov	r12, rdx
0x6492:	push	rbp
0x6493:	push	rbx
0x6494:	mov	rbx, rcx
0x6497:	mov	r14, rdi
0x649a:	mov	r15, rsi
0x649d:	sub	rsp, 0x38
0x64a1:	test	rcx, rcx
0x64a4:	cmove	rbx, rax
0x64a8:	xor	ebp, ebp
0x64aa:	call	0x15d0


0x6400:	push	r15
0x6402:	push	r14
0x6404:	lea	rax, [rip + 0x204e35]
0x640b:	push	r13
0x640d:	push	r12
0x640f:	mov	r13, rdi
0x6412:	push	rbp
0x6413:	push	rbx
0x6414:	mov	rbx, r8
0x6417:	mov	r14, rsi
0x641a:	mov	r15, rdx
0x641d:	sub	rsp, 0x18
0x6421:	test	r8, r8
0x6424:	cmove	rbx, rax
0x6428:	mov	qword ptr [rsp + 8], rcx
0x642d:	call	0x15d0


0x63d0:	lea	rax, [rip + 0x204e69]
0x63d7:	test	rdi, rdi
0x63da:	cmove	rdi, rax
0x63de:	test	rsi, rsi
0x63e1:	mov	dword ptr [rdi], 0xa
0x63e7:	je	0x63f7


0x63b0:	lea	rax, [rip + 0x204e89]
0x63b7:	test	rdi, rdi
0x63ba:	cmove	rdi, rax
0x63be:	mov	eax, dword ptr [rdi + 4]
0x63c1:	mov	dword ptr [rdi + 4], esi
0x63c4:	ret	


0x6370:	lea	rax, [rip + 0x204ec9]
0x6377:	test	rdi, rdi
0x637a:	mov	ecx, esi
0x637c:	cmove	rdi, rax
0x6380:	mov	eax, esi
0x6382:	and	ecx, 0x1f
0x6385:	shr	al, 5
0x6388:	movzx	eax, al
0x638b:	lea	rdi, [rdi + rax*4 + 8]
0x6390:	mov	esi, dword ptr [rdi]
0x6392:	mov	eax, esi
0x6394:	shr	eax, cl
0x6396:	xor	edx, eax
0x6398:	and	eax, 1
0x639b:	and	edx, 1
0x639e:	shl	edx, cl
0x63a0:	xor	edx, esi
0x63a2:	mov	dword ptr [rdi], edx
0x63a4:	ret	


0x6350:	lea	rax, [rip + 0x204ee9]
0x6357:	test	rdi, rdi
0x635a:	cmove	rdi, rax
0x635e:	mov	dword ptr [rdi], esi
0x6360:	ret	


0x6330:	lea	rax, [rip + 0x204f09]
0x6337:	test	rdi, rdi
0x633a:	cmove	rdi, rax
0x633e:	mov	eax, dword ptr [rdi]
0x6340:	ret	


0x62f0:	push	r12
0x62f2:	push	rbp
0x62f3:	push	rbx
0x62f4:	mov	rbx, rdi
0x62f7:	call	0x15d0


0x6140:	push	r15
0x6142:	push	r14
0x6144:	movsxd	r15, edi
0x6147:	push	r13
0x6149:	push	r12
0x614b:	mov	r14, rdx
0x614e:	push	rbp
0x614f:	push	rbx
0x6150:	mov	rbp, rcx
0x6153:	sub	rsp, 0x28
0x6157:	mov	qword ptr [rsp + 8], rsi
0x615c:	call	0x15d0


0x4f00:	push	r15
0x4f02:	push	r14
0x4f04:	mov	r15d, r8d
0x4f07:	push	r13
0x4f09:	push	r12
0x4f0b:	mov	r14, rdi
0x4f0e:	push	rbp
0x4f0f:	push	rbx
0x4f10:	mov	ebx, r9d
0x4f13:	mov	r13, rsi
0x4f16:	mov	rbp, rcx
0x4f19:	and	ebx, 2
0x4f1c:	sub	rsp, 0xb8
0x4f23:	mov	rax, qword ptr [rsp + 0xf0]
0x4f2b:	mov	qword ptr [rsp + 0x10], rdx
0x4f30:	mov	dword ptr [rsp + 8], r8d
0x4f35:	mov	dword ptr [rsp + 0x78], r9d
0x4f3a:	mov	qword ptr [rsp + 0x20], rax
0x4f3f:	mov	rax, qword ptr [rsp + 0xf8]
0x4f47:	mov	qword ptr [rsp + 0x68], rax
0x4f4c:	mov	rax, qword ptr [rsp + 0x100]
0x4f54:	mov	qword ptr [rsp + 0x60], rax
0x4f59:	mov	rax, qword ptr fs:[0x28]
0x4f62:	mov	qword ptr [rsp + 0xa8], rax
0x4f6a:	xor	eax, eax
0x4f6c:	call	0x1670


0x4e10:	push	rbp
0x4e11:	push	rbx
0x4e12:	mov	rbp, rdi
0x4e15:	mov	ebx, esi
0x4e17:	sub	rsp, 8
0x4e1b:	call	0x7870


0x4d70:	test	rdi, rdi
0x4d73:	push	rbx
0x4d74:	je	0x4ded


0x4cd0:	push	r12
0x4cd2:	push	rbp
0x4cd3:	mov	rbp, rsi
0x4cd6:	push	rbx
0x4cd7:	call	0x1850


0x4ca0:	test	rdi, rdi
0x4ca3:	je	0x4cc0


0x4c90:	jmp	0x1720


0x4b40:	push	r15
0x4b42:	push	r14
0x4b44:	mov	r14, rsi
0x4b47:	push	r13
0x4b49:	push	r12
0x4b4b:	push	rbp
0x4b4c:	push	rbx
0x4b4d:	mov	rbp, rdi
0x4b50:	mov	edi, 0x8048
0x4b55:	sub	rsp, 0xb8
0x4b5c:	mov	rax, qword ptr fs:[0x28]
0x4b65:	mov	qword ptr [rsp + 0xa8], rax
0x4b6d:	xor	eax, eax
0x4b6f:	call	0x1790


0x4ab0:	push	rbp
0x4ab1:	push	rbx
0x4ab2:	mov	rbp, rdx
0x4ab5:	sub	rsp, 0xb8
0x4abc:	mov	rax, qword ptr fs:[0x28]
0x4ac5:	mov	qword ptr [rsp + 0xa8], rax
0x4acd:	xor	eax, eax
0x4acf:	movabs	rax, 0xefcdab8967452301
0x4ad9:	mov	rbx, rsp
0x4adc:	mov	qword ptr [rsp + 0x18], 0
0x4ae5:	mov	qword ptr [rsp], rax
0x4ae9:	movabs	rax, 0x1032547698badcfe
0x4af3:	mov	rdx, rbx
0x4af6:	mov	qword ptr [rsp + 8], rax
0x4afb:	mov	eax, 0xc3d2e1f0
0x4b00:	mov	qword ptr [rsp + 0x10], rax
0x4b05:	call	0x47d0


0x47d0:	push	r15
0x47d2:	push	r14
0x47d4:	push	r13
0x47d6:	push	r12
0x47d8:	mov	r13, rdx
0x47db:	push	rbp
0x47dc:	push	rbx
0x47dd:	mov	r12, rsi
0x47e0:	mov	rbx, rdi
0x47e3:	sub	rsp, 8
0x47e7:	mov	eax, dword ptr [rdx + 0x1c]
0x47ea:	test	eax, eax
0x47ec:	jne	0x4920


0x46b0:	push	rbp
0x46b1:	push	rbx
0x46b2:	mov	rbp, rsi
0x46b5:	mov	rbx, rdi
0x46b8:	sub	rsp, 8
0x46bc:	mov	eax, dword ptr [rdi + 0x1c]
0x46bf:	mov	edx, dword ptr [rbx + 0x18]
0x46c2:	cmp	eax, 0x38
0x46c5:	mov	ecx, eax
0x46c7:	sbb	r8, r8
0x46ca:	and	r8, 0xffffffffffffffc0
0x46ce:	sub	r8, -0x80
0x46d2:	cmp	eax, 0x38
0x46d5:	sbb	rsi, rsi
0x46d8:	and	rsi, 0xfffffffffffffff0
0x46dc:	add	rsi, 0x1f
0x46e0:	cmp	eax, 0x38
0x46e3:	sbb	rdi, rdi
0x46e6:	xor	r9d, r9d
0x46e9:	and	rdi, 0xfffffffffffffff0
0x46ed:	add	rdi, 0x1e
0x46f1:	add	ecx, dword ptr [rbx + 0x14]
0x46f4:	setb	r9b
0x46f8:	mov	dword ptr [rbx + 0x14], ecx
0x46fb:	test	r9d, r9d
0x46fe:	je	0x4706


0x3430:	push	r15
0x3432:	push	r14
0x3434:	mov	ecx, esi
0x3436:	push	r13
0x3438:	push	r12
0x343a:	xor	r10d, r10d
0x343d:	push	rbp
0x343e:	push	rbx
0x343f:	mov	rbx, rdx
0x3442:	mov	r15, rdi
0x3445:	sub	rsp, 0xc8
0x344c:	mov	r9d, dword ptr [rbx + 8]
0x3450:	mov	r8d, dword ptr [rbx + 0x10]
0x3454:	mov	rax, qword ptr fs:[0x28]
0x345d:	mov	qword ptr [rsp + 0xb8], rax
0x3465:	xor	eax, eax
0x3467:	mov	rax, rsi
0x346a:	mov	qword ptr [rsp + 0x60], rdx
0x346f:	and	rax, 0xfffffffffffffffc
0x3473:	add	rax, rdi
0x3476:	add	ecx, dword ptr [rbx + 0x14]
0x3479:	mov	edi, dword ptr [rbx + 0xc]
0x347c:	mov	r14, rax
0x347f:	mov	qword ptr [rsp + 0x58], rax
0x3484:	mov	eax, dword ptr [rdx]
0x3486:	mov	edx, dword ptr [rdx + 4]
0x3489:	mov	dword ptr [rbx + 0x14], ecx
0x348c:	mov	ecx, dword ptr [rbx + 0x18]
0x348f:	setb	r10b
0x3493:	shr	rsi, 0x20
0x3497:	add	ecx, esi
0x3499:	add	ecx, r10d
0x349c:	cmp	r15, r14
0x349f:	mov	dword ptr [rbx + 0x18], ecx
0x34a2:	jae	0x467d


0x3400:	mov	edx, dword ptr [rdi]
0x3402:	mov	rax, rsi
0x3405:	bswap	edx
0x3407:	mov	dword ptr [rsi], edx
0x3409:	mov	edx, dword ptr [rdi + 4]
0x340c:	bswap	edx
0x340e:	mov	dword ptr [rsi + 4], edx
0x3411:	mov	edx, dword ptr [rdi + 8]
0x3414:	bswap	edx
0x3416:	mov	dword ptr [rsi + 8], edx
0x3419:	mov	edx, dword ptr [rdi + 0xc]
0x341c:	bswap	edx
0x341e:	mov	dword ptr [rsi + 0xc], edx
0x3421:	mov	edx, dword ptr [rdi + 0x10]
0x3424:	bswap	edx
0x3426:	mov	dword ptr [rsi + 0x10], edx
0x3429:	ret	


0x33d0:	movabs	rax, 0xefcdab8967452301
0x33da:	mov	qword ptr [rdi + 0x18], 0
0x33e2:	mov	qword ptr [rdi], rax
0x33e5:	movabs	rax, 0x1032547698badcfe
0x33ef:	mov	qword ptr [rdi + 8], rax
0x33f3:	mov	eax, 0xc3d2e1f0
0x33f8:	mov	qword ptr [rdi + 0x10], rax
0x33fc:	ret	


0x3320:	push	rbp
0x3321:	push	rbx
0x3322:	sub	rsp, 8
0x3326:	mov	rdi, qword ptr [rip + 0x207d7b]
0x332d:	call	0x7790


0x3310:	mov	byte ptr [rip + 0x207df9], dil
0x3317:	ret	


0x3300:	mov	qword ptr [rip + 0x207e11], rdi
0x3307:	ret	


0x2ea0:	push	r13
0x2ea2:	push	r12
0x2ea4:	mov	edx, 5
0x2ea9:	push	rbp
0x2eaa:	push	rbx
0x2eab:	mov	ebp, edi
0x2ead:	sub	rsp, 0x88
0x2eb4:	mov	rbx, qword ptr [rip + 0x208265]
0x2ebb:	mov	rax, qword ptr fs:[0x28]
0x2ec4:	mov	qword ptr [rsp + 0x78], rax
0x2ec9:	xor	eax, eax
0x2ecb:	test	edi, edi
0x2ecd:	je	0x2efd


0x2d00:	push	r13
0x2d02:	push	r12
0x2d04:	mov	ecx, 2
0x2d09:	push	rbp
0x2d0a:	push	rbx
0x2d0b:	mov	rbp, rdi
0x2d0e:	lea	rdi, [rip + 0x58ad]
0x2d15:	mov	r12, rsi
0x2d18:	mov	rsi, rbp
0x2d1b:	sub	rsp, 8
0x2d1f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2c30:	push	rbp
0x2c31:	push	rbx
0x2c32:	mov	rbx, rdi
0x2c35:	sub	rsp, 8
0x2c39:	test	sil, sil
0x2c3c:	je	0x2cd0


0x2bd0:	push	rbp
0x2bd1:	push	rbx
0x2bd2:	sub	rsp, 8
0x2bd6:	mov	rbp, qword ptr [rip + 0x20851b]
0x2bdd:	test	rbp, rbp
0x2be0:	je	0x2c20


0x2b50:	xor	edx, edx
0x2b52:	test	rsi, rsi
0x2b55:	lea	rcx, [rdi + 1]
0x2b59:	lea	r8, [rsi - 1]
0x2b5d:	je	0x2bb7


0x2b40:	push	rbp
0x2b41:	mov	rbp, rsp
0x2b44:	pop	rbp
0x2b45:	jmp	0x2ab0


0x2b00:	cmp	byte ptr [rip + 0x2085e1], 0
0x2b07:	jne	0x2b38


0x2ab0:	lea	rdi, [rip + 0x2085e9]
0x2ab7:	lea	rsi, [rip + 0x2085e2]
0x2abe:	push	rbp
0x2abf:	sub	rsi, rdi
0x2ac2:	mov	rbp, rsp
0x2ac5:	sar	rsi, 3
0x2ac9:	mov	rax, rsi
0x2acc:	shr	rax, 0x3f
0x2ad0:	add	rsi, rax
0x2ad3:	sar	rsi, 1
0x2ad6:	je	0x2af0


0x2a70:	lea	rdi, [rip + 0x208629]
0x2a77:	push	rbp
0x2a78:	lea	rax, [rip + 0x208621]
0x2a7f:	cmp	rax, rdi
0x2a82:	mov	rbp, rsp
0x2a85:	je	0x2aa0


0x2a40:	xor	ebp, ebp
0x2a42:	mov	r9, rdx
0x2a45:	pop	rsi
0x2a46:	mov	rdx, rsp
0x2a49:	and	rsp, 0xfffffffffffffff0
0x2a4d:	push	rax
0x2a4e:	push	rsp
0x2a4f:	lea	r8, [rip + 0x4eca]
0x2a56:	lea	rcx, [rip + 0x4e53]
0x2a5d:	lea	rdi, [rip - 0x1164]
0x2a64:	call	qword ptr [rip + 0x20855e]


0x1900:	push	r15
0x1902:	push	r14
0x1904:	push	r13
0x1906:	push	r12
0x1908:	mov	r12d, edi
0x190b:	push	rbp
0x190c:	push	rbx
0x190d:	mov	rbx, rsi
0x1910:	mov	ebp, 0xffffffff
0x1915:	sub	rsp, 0xe8
0x191c:	mov	rdi, qword ptr [rsi]
0x191f:	mov	rax, qword ptr fs:[0x28]
0x1928:	mov	qword ptr [rsp + 0xd8], rax
0x1930:	xor	eax, eax
0x1932:	call	0x4d70


0x1580:	sub	rsp, 8
0x1584:	mov	rax, qword ptr [rip + 0x209a45]
0x158b:	test	rax, rax
0x158e:	je	0x1592


0x1870:	jmp	qword ptr [rip + 0x20970a]


0x17b0:	jmp	qword ptr [rip + 0x20976a]


0x1800:	jmp	qword ptr [rip + 0x209742]


0x1600:	jmp	qword ptr [rip + 0x209842]


0x16b0:	jmp	qword ptr [rip + 0x2097ea]


0x76b0:	mov	rax, qword ptr [rdi + 0x20]
0x76b4:	cmp	qword ptr [rdi + 0x28], rax
0x76b8:	jne	0x76aa


0x76aa:	jmp	0x1840


0x767a:	mov	rdi, rbx
0x767d:	pop	rbx
0x767e:	jmp	0x17a0


0x7669:	call	0x17c0


0x7632:	mov	rax, qword ptr [rsp + 0x10]
0x7637:	xor	esi, esi
0x7639:	mov	edx, dword ptr [rax + 0x10]
0x763c:	xor	eax, eax
0x763e:	call	0x1610


0x7431:	cmp	esi, 0x406
0x7437:	jne	0x7480


0x1780:	jmp	qword ptr [rip + 0x209782]


0x1660:	jmp	qword ptr [rip + 0x209812]


0x1680:	jmp	qword ptr [rip + 0x209802]


0x72c9:	call	0x7320


0x72b2:	movzx	edx, dl
0x72b5:	test	rdx, rdx
0x72b8:	jne	0x72c9


0x7260:	test	rax, rax
0x7263:	mov	edx, 0x80
0x7268:	cmove	rax, rdx
0x726c:	test	rax, rax
0x726f:	jns	0x7252


0x7238:	movabs	rdx, 0x5555555555555553
0x7242:	cmp	rax, rdx
0x7245:	ja	0x7271


0x71e0:	test	rcx, rcx
0x71e3:	je	0x7208


0x71ab:	xor	edx, edx
0x71ad:	movabs	rax, 0x5555555555555554
0x71b7:	div	r9
0x71ba:	cmp	rax, rcx
0x71bd:	jbe	0x71fb


0x718b:	sub	rsp, 8
0x718f:	call	0x7320


0x7181:	movzx	eax, al
0x7184:	test	rax, rax
0x7187:	jne	0x718b


0x7139:	test	rdi, rdi
0x713c:	jne	0x7158


0x713e:	mov	rsi, rbx
0x7141:	call	0x17e0


0x710b:	sub	rsp, 8
0x710f:	call	0x7320


0x7101:	movzx	eax, al
0x7104:	test	rax, rax
0x7107:	jne	0x710b


0x1790:	jmp	qword ptr [rip + 0x20977a]


0x6fe6:	mov	eax, r10d
0x6fe9:	mov	r11d, 1
0x6fef:	add	r10d, 8
0x6ff3:	add	rax, rbp
0x6ff6:	mov	rax, qword ptr [rax]
0x6ff9:	test	rax, rax
0x6ffc:	mov	qword ptr [r8 + r9*8], rax
0x7000:	je	0x700c


0x703c:	mov	rax, rbx
0x703f:	add	rbx, 8
0x7043:	jmp	0x6ff6


0x6f18:	mov	r11d, eax
0x6f1b:	add	r11, qword ptr [r10 + 0x10]
0x6f1f:	add	eax, 8
0x6f22:	mov	dword ptr [r10], eax
0x6f25:	mov	rax, qword ptr [r11]
0x6f28:	test	rax, rax
0x6f2b:	mov	qword ptr [r8 + r9*8], rax
0x6f2f:	je	0x6f3b


0x6f5a:	mov	r11, qword ptr [r10 + 8]
0x6f5e:	lea	rax, [r11 + 8]
0x6f62:	mov	qword ptr [r10 + 8], rax
0x6f66:	jmp	0x6f25


0x6eeb:	jmp	0x6ab0


0x6be8:	mov	r8, rcx
0x6beb:	mov	rcx, rdx
0x6bee:	lea	rdx, [rip + 0x1ebf]
0x6bf5:	mov	esi, 1
0x6bfa:	xor	eax, eax
0x6bfc:	call	0x18a0


0x6ad0:	mov	r8, rdx
0x6ad3:	lea	rdx, [rip + 0x1fce]
0x6ada:	mov	r9, rcx
0x6add:	xor	eax, eax
0x6adf:	mov	rcx, rsi
0x6ae2:	mov	esi, 1
0x6ae7:	call	0x18a0


0x69c7:	call	0x15c0


0x6995:	test	rdx, rdx
0x6998:	je	0x69c7


0x6934:	call	0x15c0


0x68cc:	mov	dword ptr [rsp], esi
0x68cf:	mov	rcx, rsp
0x68d2:	mov	rdx, -1
0x68d9:	mov	rsi, rax
0x68dc:	mov	qword ptr [rsp + 4], 0
0x68e5:	mov	qword ptr [rsp + 0xc], 0x4000000
0x68ee:	mov	qword ptr [rsp + 0x14], 0
0x68f7:	mov	qword ptr [rsp + 0x1c], 0
0x6900:	mov	qword ptr [rsp + 0x24], 0
0x6909:	mov	qword ptr [rsp + 0x2c], 0
0x6912:	mov	dword ptr [rsp + 0x34], 0
0x691a:	call	0x6140


0x67a0:	call	0x15c0


0x673f:	mov	dword ptr [rsp], esi
0x6742:	mov	rcx, rsp
0x6745:	mov	rsi, rax
0x6748:	mov	qword ptr [rsp + 4], 0
0x6751:	mov	qword ptr [rsp + 0xc], 0
0x675a:	mov	qword ptr [rsp + 0x14], 0
0x6763:	mov	qword ptr [rsp + 0x1c], 0
0x676c:	mov	qword ptr [rsp + 0x24], 0
0x6775:	mov	qword ptr [rsp + 0x2c], 0
0x677e:	mov	dword ptr [rsp + 0x34], 0
0x6786:	call	0x6140


0x6714:	call	0x15c0


0x66ac:	mov	dword ptr [rsp], esi
0x66af:	mov	rcx, rsp
0x66b2:	mov	rdx, -1
0x66b9:	mov	rsi, rax
0x66bc:	mov	qword ptr [rsp + 4], 0
0x66c5:	mov	qword ptr [rsp + 0xc], 0
0x66ce:	mov	qword ptr [rsp + 0x14], 0
0x66d7:	mov	qword ptr [rsp + 0x1c], 0
0x66e0:	mov	qword ptr [rsp + 0x24], 0
0x66e9:	mov	qword ptr [rsp + 0x2c], 0
0x66f2:	mov	dword ptr [rsp + 0x34], 0
0x66fa:	call	0x6140


0x65c1:	mov	rdi, qword ptr [r12 + 8]
0x65c6:	lea	rbx, [rip + 0x204b73]
0x65cd:	cmp	rdi, rbx
0x65d0:	je	0x65e9


0x6596:	sub	eax, 2
0x6599:	lea	rbx, [r12 + 0x18]
0x659e:	shl	rax, 4
0x65a2:	lea	rbp, [r12 + rax + 0x28]
0x65a7:	nop	word ptr [rax + rax]
0x65b0:	mov	rdi, qword ptr [rbx]
0x65b3:	add	rbx, 0x10
0x65b7:	call	0x15b0


0x15d0:	jmp	qword ptr [rip + 0x20985a]


0x63f7:	sub	rsp, 8
0x63fb:	call	0x15c0


0x63e9:	test	rdx, rdx
0x63ec:	je	0x63f7


0x1670:	jmp	qword ptr [rip + 0x20980a]


0x4ded:	mov	rcx, qword ptr [rip + 0x2062ec]
0x4df4:	lea	rdi, [rip + 0x3785]
0x4dfb:	mov	edx, 0x37
0x4e00:	mov	esi, 1
0x4e05:	call	0x1890


0x4d76:	mov	esi, 0x2f
0x4d7b:	mov	rbx, rdi
0x4d7e:	call	0x16e0


0x1850:	jmp	qword ptr [rip + 0x20971a]


0x4cc0:	ret	


0x4ca5:	push	rbx
0x4ca6:	mov	ebx, esi
0x4ca8:	call	0x1780


0x1720:	jmp	qword ptr [rip + 0x2097b2]


0x47f2:	cmp	r12, 0x3f
0x47f6:	jbe	0x4904


0x4920:	mov	ebp, eax
0x4922:	mov	edx, 0x80
0x4927:	lea	r15, [r13 + 0x20]
0x492b:	sub	rdx, rbp
0x492e:	cmp	rdx, rsi
0x4931:	lea	rdi, [r15 + rbp]
0x4935:	cmova	rdx, rsi
0x4939:	mov	rsi, rbx
0x493c:	mov	r14, rdx
0x493f:	call	0x1770


0x4706:	mov	r9d, ecx
0x4709:	shl	edx, 3
0x470c:	shl	ecx, 3
0x470f:	shr	r9d, 0x1d
0x4713:	bswap	ecx
0x4715:	or	edx, r9d
0x4718:	lea	r9, [rbx + 0x20]
0x471c:	bswap	edx
0x471e:	mov	dword ptr [rbx + rdi*4 + 0x20], edx
0x4722:	mov	rdi, r8
0x4725:	mov	dword ptr [rbx + rsi*4 + 0x20], ecx
0x4729:	sub	rdi, rax
0x472c:	lea	rdx, [r9 + rax]
0x4730:	lea	rsi, [rip + 0x3e09]
0x4737:	lea	rcx, [rdi - 8]
0x473b:	cmp	rcx, 8
0x473f:	jae	0x4768


0x4700:	add	edx, 1
0x4703:	mov	dword ptr [rbx + 0x18], edx
0x4706:	mov	r9d, ecx
0x4709:	shl	edx, 3
0x470c:	shl	ecx, 3
0x470f:	shr	r9d, 0x1d
0x4713:	bswap	ecx
0x4715:	or	edx, r9d
0x4718:	lea	r9, [rbx + 0x20]
0x471c:	bswap	edx
0x471e:	mov	dword ptr [rbx + rdi*4 + 0x20], edx
0x4722:	mov	rdi, r8
0x4725:	mov	dword ptr [rbx + rsi*4 + 0x20], ecx
0x4729:	sub	rdi, rax
0x472c:	lea	rdx, [r9 + rax]
0x4730:	lea	rsi, [rip + 0x3e09]
0x4737:	lea	rcx, [rdi - 8]
0x473b:	cmp	rcx, 8
0x473f:	jae	0x4768


0x34a8:	lea	rcx, [rsp + 0x70]
0x34ad:	mov	dword ptr [rsp + 0x50], r8d
0x34b2:	mov	dword ptr [rsp + 0x4c], edi
0x34b6:	mov	dword ptr [rsp + 0x48], r9d
0x34bb:	mov	dword ptr [rsp + 0x44], edx
0x34bf:	mov	esi, r9d
0x34c2:	mov	qword ptr [rsp + 0x68], rcx
0x34c7:	mov	dword ptr [rsp + 0x54], eax
0x34cb:	mov	rcx, r15
0x34ce:	nop	
0x34d0:	mov	r11, qword ptr [rsp + 0x68]
0x34d5:	xor	r9d, r9d
0x34d8:	nop	dword ptr [rax + rax]
0x34e0:	mov	r10d, dword ptr [rcx + r9]
0x34e4:	bswap	r10d
0x34e7:	mov	dword ptr [r11 + r9], r10d
0x34eb:	add	r9, 4
0x34ef:	cmp	r9, 0x40
0x34f3:	jne	0x34e0


0x467d:	mov	rax, qword ptr [rsp + 0xb8]
0x4685:	xor	rax, qword ptr fs:[0x28]
0x468e:	jne	0x46a2


0x2efd:	lea	rsi, [rip + 0x4c64]
0x2f04:	xor	edi, edi
0x2f06:	call	0x1660


0x2ecf:	lea	rsi, [rip + 0x4c6a]
0x2ed6:	xor	edi, edi
0x2ed8:	call	0x1660


0x2d1f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2d21:	mov	byte ptr [rdx], 0
0x2d24:	seta	al
0x2d27:	sbb	al, 0
0x2d29:	test	al, al
0x2d2b:	jne	0x2dc0


0x2cd0:	mov	rsi, qword ptr [rip + 0x2083d1]
0x2cd7:	add	rsp, 8
0x2cdb:	pop	rbx
0x2cdc:	pop	rbp
0x2cdd:	jmp	0x1740


0x2c42:	movzx	esi, byte ptr [rdi]
0x2c45:	lea	rbp, [rip + 0x4d18]
0x2c4c:	test	sil, sil
0x2c4f:	jne	0x2c7a


0x2c20:	mov	rax, rdi
0x2c23:	cmp	byte ptr [rax], 0
0x2c26:	sete	al
0x2c29:	add	rsp, 8
0x2c2d:	pop	rbx
0x2c2e:	pop	rbp
0x2c2f:	ret	


0x2be2:	mov	rbx, rdi
0x2be5:	call	0x18e0


0x2bb7:	mov	rax, rdi
0x2bba:	ret	


0x2b5f:	movzx	eax, byte ptr [rdi + rdx]
0x2b63:	test	al, al
0x2b65:	je	0x2b90


0x2b09:	cmp	qword ptr [rip + 0x2084cf], 0
0x2b11:	push	rbp
0x2b12:	mov	rbp, rsp
0x2b15:	je	0x2b23


0x2b38:	ret	


0x2af0:	pop	rbp
0x2af1:	ret	


0x2ad8:	mov	rax, qword ptr [rip + 0x2084f9]
0x2adf:	test	rax, rax
0x2ae2:	je	0x2af0


0x2aa0:	pop	rbp
0x2aa1:	ret	


0x2a87:	mov	rax, qword ptr [rip + 0x208532]
0x2a8e:	test	rax, rax
0x2a91:	je	0x2aa0




0x1592:	add	rsp, 8
0x1596:	ret	


0x1590:	call	rax












0x76ba:	cmp	qword ptr [rdi + 0x48], 0
0x76bf:	jne	0x76aa


0x1840:	jmp	qword ptr [rip + 0x209722]


0x17a0:	jmp	qword ptr [rip + 0x209772]


0x17c0:	jmp	qword ptr [rip + 0x209762]


0x1610:	jmp	qword ptr [rip + 0x20983a]


0x7439:	mov	rax, qword ptr [rsp + 0x10]
0x743e:	cmp	dword ptr [rip + 0x203e33], 0
0x7445:	mov	dword ptr [rsp], 0x18
0x744c:	mov	r12d, dword ptr [rax + 0x10]
0x7450:	mov	edx, r12d
0x7453:	js	0x7583


0x7480:	cmp	esi, 0xb
0x7483:	je	0x74b0








0x72ba:	call	0x1750


0x7271:	sub	rsp, 8
0x7275:	call	0x7320


0x7252:	mov	qword ptr [rsi], rax
0x7255:	mov	rsi, rax
0x7258:	jmp	0x7130


0x7247:	mov	rdx, rax
0x724a:	shr	rdx, 1
0x724d:	lea	rax, [rdx + rax + 1]
0x7252:	mov	qword ptr [rsi], rax
0x7255:	mov	rsi, rax
0x7258:	jmp	0x7130


0x7208:	xor	edx, edx
0x720a:	mov	eax, 0x80
0x720f:	xor	r8d, r8d
0x7212:	div	r9
0x7215:	test	rax, rax
0x7218:	sete	r8b
0x721c:	lea	rcx, [r8 + rax]
0x7220:	jmp	0x71e5


0x71e5:	mov	rax, rcx
0x71e8:	mul	r9
0x71eb:	seto	dl
0x71ee:	test	rax, rax
0x71f1:	movzx	edx, dl
0x71f4:	js	0x71fb


0x71fb:	sub	rsp, 8
0x71ff:	call	0x7320


0x71bf:	mov	rax, rcx
0x71c2:	shr	rax, 1
0x71c5:	lea	rcx, [rax + rcx + 1]
0x71ca:	mov	qword ptr [rsi], rcx
0x71cd:	imul	rcx, r9
0x71d1:	mov	rsi, rcx
0x71d4:	jmp	0x7130


0x7189:	jmp	0x7130


0x7158:	call	0x15b0


0x17e0:	jmp	qword ptr [rip + 0x209752]


0x7109:	jmp	0x70d0




0x700c:	test	r11b, r11b
0x700f:	jne	0x7035


0x7002:	add	r9, 1
0x7006:	cmp	r9, 0xa
0x700a:	jne	0x6fe0


0x6ff6:	mov	rax, qword ptr [rax]
0x6ff9:	test	rax, rax
0x6ffc:	mov	qword ptr [r8 + r9*8], rax
0x7000:	je	0x700c


0x6f3b:	call	0x6ab0


0x6f31:	add	r9, 1
0x6f35:	cmp	r9, 0xa
0x6f39:	jne	0x6f10


0x6f25:	mov	rax, qword ptr [r11]
0x6f28:	test	rax, rax
0x6f2b:	mov	qword ptr [r8 + r9*8], rax
0x6f2f:	je	0x6f3b


0x6ee0:	add	r9, 1
0x6ee4:	cmp	qword ptr [r8 + r9*8], 0
0x6ee9:	jne	0x6ee0


0x18a0:	jmp	qword ptr [rip + 0x2096f2]


0x15c0:	jmp	qword ptr [rip + 0x209862]


0x699a:	mov	qword ptr [rsp + 0x28], rsi
0x699f:	mov	qword ptr [rsp + 0x30], rdx
0x69a4:	mov	rcx, rsp
0x69a7:	mov	rdx, r8
0x69aa:	mov	rsi, r9
0x69ad:	call	0x6140


0x65e9:	lea	rbx, [rip + 0x204aa0]
0x65f0:	cmp	r12, rbx
0x65f3:	je	0x6604


0x65d2:	call	0x15b0


0x15b0:	jmp	qword ptr [rip + 0x20986a]




0x63ee:	mov	qword ptr [rdi + 0x28], rsi
0x63f2:	mov	qword ptr [rdi + 0x30], rdx
0x63f6:	ret	




0x1890:	jmp	qword ptr [rip + 0x2096fa]


0x16e0:	jmp	qword ptr [rip + 0x2097d2]






0x4904:	test	r12, r12
0x4907:	jne	0x4a78


0x47fc:	test	bl, 3
0x47ff:	je	0x48e8


0x1770:	jmp	qword ptr [rip + 0x20978a]


0x4741:	test	cl, 4
0x4744:	jne	0x47b8


0x4768:	mov	rax, qword ptr [rip + 0x3dd1]
0x476f:	lea	rdi, [rdx + 8]
0x4773:	and	rdi, 0xfffffffffffffff8
0x4777:	mov	qword ptr [rdx], rax
0x477a:	mov	rax, qword ptr [rsi + rcx - 8]
0x477f:	mov	qword ptr [rdx + rcx - 8], rax
0x4784:	sub	rdx, rdi
0x4787:	add	rcx, rdx
0x478a:	sub	rsi, rdx
0x478d:	shr	rcx, 3
0x4791:	rep movsq	qword ptr [rdi], qword ptr [rsi]


0x34f5:	mov	r11d, dword ptr [rsp + 0x70]
0x34fa:	mov	r10d, dword ptr [rsp + 0x74]
0x34ff:	add	rcx, 0x40
0x3503:	mov	ebx, dword ptr [rsp + 0x78]
0x3507:	mov	ebp, dword ptr [rsp + 0x7c]
0x350b:	mov	r13d, dword ptr [rsp + 0x80]
0x3513:	mov	r14d, dword ptr [rsp + 0x84]
0x351b:	lea	r9d, [r11 + r8 + 0x5a827999]
0x3523:	mov	r8d, eax
0x3526:	mov	r15d, dword ptr [rsp + 0x88]
0x352e:	rol	r8d, 5
0x3532:	add	r8d, r9d
0x3535:	mov	r9d, esi
0x3538:	xor	r9d, edi
0x353b:	and	r9d, edx
0x353e:	ror	edx, 2
0x3541:	xor	r9d, edi
0x3544:	lea	edi, [r10 + rdi + 0x5a827999]
0x354c:	add	r9d, r8d
0x354f:	mov	r8d, edx
0x3552:	xor	r8d, esi
0x3555:	and	r8d, eax
0x3558:	ror	eax, 2
0x355b:	xor	r8d, esi
0x355e:	lea	esi, [rbx + rsi + 0x5a827999]
0x3565:	add	r8d, edi
0x3568:	mov	edi, r9d
0x356b:	rol	edi, 5
0x356e:	add	r8d, edi
0x3571:	mov	edi, edx
0x3573:	xor	edi, eax
0x3575:	and	edi, r9d
0x3578:	ror	r9d, 2
0x357c:	xor	edi, edx
0x357e:	lea	edx, [rbp + rdx + 0x5a827999]
0x3585:	add	edi, esi
0x3587:	mov	esi, r8d
0x358a:	rol	esi, 5
0x358d:	add	edi, esi
0x358f:	mov	esi, eax
0x3591:	xor	esi, r9d
0x3594:	and	esi, r8d
0x3597:	ror	r8d, 2
0x359b:	xor	esi, eax
0x359d:	lea	eax, [r13 + rax + 0x5a827999]
0x35a5:	add	esi, edx
0x35a7:	mov	edx, edi
0x35a9:	rol	edx, 5
0x35ac:	add	esi, edx
0x35ae:	mov	edx, r9d
0x35b1:	xor	edx, r8d
0x35b4:	and	edx, edi
0x35b6:	xor	edx, r9d
0x35b9:	lea	r9d, [r14 + r9 + 0x5a827999]
0x35c1:	add	edx, eax
0x35c3:	mov	eax, esi
0x35c5:	ror	edi, 2
0x35c8:	rol	eax, 5
0x35cb:	add	edx, eax
0x35cd:	mov	eax, r8d
0x35d0:	xor	eax, edi
0x35d2:	and	eax, esi
0x35d4:	ror	esi, 2
0x35d7:	xor	eax, r8d
0x35da:	lea	r8d, [r15 + r8 + 0x5a827999]
0x35e2:	mov	r15d, dword ptr [rsp + 0x8c]
0x35ea:	add	eax, r9d
0x35ed:	mov	r9d, edx
0x35f0:	rol	r9d, 5
0x35f4:	add	eax, r9d
0x35f7:	mov	r9d, edi
0x35fa:	xor	r9d, esi
0x35fd:	and	r9d, edx
0x3600:	ror	edx, 2
0x3603:	xor	r9d, edi
0x3606:	lea	edi, [r15 + rdi + 0x5a827999]
0x360e:	mov	r15d, dword ptr [rsp + 0x90]
0x3616:	add	r9d, r8d
0x3619:	mov	r8d, eax
0x361c:	rol	r8d, 5
0x3620:	add	r9d, r8d
0x3623:	mov	r8d, esi
0x3626:	xor	r8d, edx
0x3629:	and	r8d, eax
0x362c:	ror	eax, 2
0x362f:	xor	r8d, esi
0x3632:	lea	esi, [r15 + rsi + 0x5a827999]
0x363a:	mov	r15d, dword ptr [rsp + 0x94]
0x3642:	add	r8d, edi
0x3645:	mov	edi, r9d
0x3648:	rol	edi, 5
0x364b:	add	r8d, edi
0x364e:	mov	edi, edx
0x3650:	xor	edi, eax
0x3652:	and	edi, r9d
0x3655:	ror	r9d, 2
0x3659:	xor	edi, edx
0x365b:	lea	edx, [r15 + rdx + 0x5a827999]
0x3663:	mov	r15d, dword ptr [rsp + 0x98]


0x34e0:	mov	r10d, dword ptr [rcx + r9]
0x34e4:	bswap	r10d
0x34e7:	mov	dword ptr [r11 + r9], r10d
0x34eb:	add	r9, 4
0x34ef:	cmp	r9, 0x40
0x34f3:	jne	0x34e0


0x4690:	add	rsp, 0xc8
0x4697:	pop	rbx
0x4698:	pop	rbp
0x4699:	pop	r12
0x469b:	pop	r13
0x469d:	pop	r14
0x469f:	pop	r15
0x46a1:	ret	


0x46a2:	call	0x1690


0x2d31:	mov	rbx, qword ptr [rip + 0x208378]
0x2d38:	mov	esi, 2
0x2d3d:	mov	byte ptr [rip + 0x2083c4], 1
0x2d44:	mov	rdi, rbx
0x2d47:	call	0x4ca0


0x2dc0:	lea	rsi, [rip + 0x4c81]
0x2dc7:	mov	rdi, rbp
0x2dca:	mov	r13, rdx
0x2dcd:	call	0x4cd0


0x1740:	jmp	qword ptr [rip + 0x2097a2]


0x2c51:	jmp	0x2cae


0x2c7a:	cmp	sil, 0xa
0x2c7e:	mov	rcx, qword ptr [rip + 0x208423]
0x2c85:	je	0x2cb8


0x18e0:	jmp	qword ptr [rip + 0x2096d2]


0x2b90:	xor	eax, eax
0x2b92:	ret	


0x2b67:	cmp	al, 0x5c
0x2b69:	jne	0x2b98


0x2b23:	call	0x2a70


0x2b17:	mov	rdi, qword ptr [rip + 0x2084ea]
0x2b1e:	call	0x18f0


0x2ae4:	pop	rbp
0x2ae5:	jmp	rax


0x2a93:	pop	rbp
0x2a94:	jmp	rax


0x76c1:	push	r12
0x76c3:	push	rbp
0x76c4:	mov	r12d, edx
0x76c7:	push	rbx
0x76c8:	mov	rbp, rsi
0x76cb:	mov	rbx, rdi
0x76ce:	call	0x1780










0x7583:	xor	esi, esi
0x7585:	xor	eax, eax
0x7587:	call	0x1610


0x7459:	xor	eax, eax
0x745b:	mov	esi, 0x406
0x7460:	call	0x1610


0x74b0:	mov	edi, ebp
0x74b2:	xor	eax, eax
0x74b4:	call	0x1610


0x7485:	jg	0x74e0


0x1750:	jmp	qword ptr [rip + 0x20979a]


0x71f6:	test	rdx, rdx
0x71f9:	je	0x71ca




0x7011:	call	0x6ab0


0x7035:	mov	dword ptr [rsp + 8], r10d
0x703a:	jmp	0x7011


0x6fe0:	cmp	r10d, 0x2f
0x6fe4:	ja	0x703c


0x6f10:	mov	eax, dword ptr [r10]
0x6f13:	cmp	eax, 0x2f
0x6f16:	ja	0x6f5a






0x6604:	pop	rbx
0x6605:	mov	dword ptr [rip + 0x204a69], 1
0x660f:	pop	rbp
0x6610:	pop	r12
0x6612:	ret	


0x65f5:	mov	rdi, r12
0x65f8:	call	0x15b0








0x490d:	add	rsp, 8
0x4911:	pop	rbx
0x4912:	pop	rbp
0x4913:	pop	r12
0x4915:	pop	r13
0x4917:	pop	r14
0x4919:	pop	r15
0x491b:	ret	


0x4a78:	lea	rbp, [r13 + 0x20]
0x4a7c:	jmp	0x4870


0x48e8:	mov	rbp, r12
0x48eb:	mov	rdi, rbx
0x48ee:	mov	rdx, r13
0x48f1:	and	rbp, 0xffffffffffffffc0
0x48f5:	and	r12d, 0x3f
0x48f9:	mov	rsi, rbp
0x48fc:	add	rbx, rbp
0x48ff:	call	0x3430


0x4805:	cmp	r12, 0x40
0x4809:	lea	rbp, [r13 + 0x20]
0x480d:	je	0x4870




0x4746:	test	rcx, rcx
0x4749:	je	0x4794


0x47b8:	mov	eax, dword ptr [rip + 0x3d82]
0x47be:	mov	dword ptr [rdx], eax
0x47c0:	mov	eax, dword ptr [rsi + rcx - 4]
0x47c4:	mov	dword ptr [rdx + rcx - 4], eax
0x47c8:	jmp	0x4794


0x4794:	mov	rdx, rbx
0x4797:	mov	rsi, r8
0x479a:	mov	rdi, r9
0x479d:	call	0x3430


0x4791:	rep movsq	qword ptr [rdi], qword ptr [rsi]


0x366b:	add	edi, esi
0x366d:	mov	esi, r8d
0x3670:	rol	esi, 5
0x3673:	add	edi, esi
0x3675:	mov	esi, eax
0x3677:	xor	esi, r9d
0x367a:	and	esi, r8d
0x367d:	ror	r8d, 2
0x3681:	xor	esi, eax
0x3683:	lea	eax, [r15 + rax + 0x5a827999]
0x368b:	mov	r15d, dword ptr [rsp + 0x9c]
0x3693:	add	esi, edx
0x3695:	mov	edx, edi
0x3697:	rol	edx, 5
0x369a:	add	esi, edx
0x369c:	mov	edx, r9d
0x369f:	xor	edx, r8d
0x36a2:	and	edx, edi
0x36a4:	ror	edi, 2
0x36a7:	xor	edx, r9d
0x36aa:	lea	r9d, [r15 + r9 + 0x5a827999]
0x36b2:	mov	r15d, dword ptr [rsp + 0xa0]
0x36ba:	add	edx, eax
0x36bc:	mov	eax, esi
0x36be:	rol	eax, 5
0x36c1:	add	edx, eax
0x36c3:	mov	eax, r8d
0x36c6:	xor	eax, edi
0x36c8:	and	eax, esi
0x36ca:	ror	esi, 2
0x36cd:	xor	eax, r8d
0x36d0:	lea	r8d, [r15 + r8 + 0x5a827999]
0x36d8:	mov	r15d, dword ptr [rsp + 0xa4]
0x36e0:	add	eax, r9d
0x36e3:	mov	r9d, edx
0x36e6:	rol	r9d, 5
0x36ea:	add	eax, r9d
0x36ed:	mov	r9d, edi
0x36f0:	xor	r9d, esi
0x36f3:	and	r9d, edx
0x36f6:	ror	edx, 2
0x36f9:	xor	r9d, edi
0x36fc:	lea	edi, [r15 + rdi + 0x5a827999]
0x3704:	mov	r15d, dword ptr [rsp + 0xa8]
0x370c:	add	r9d, r8d
0x370f:	mov	r8d, eax
0x3712:	rol	r8d, 5
0x3716:	add	r9d, r8d
0x3719:	mov	r8d, esi
0x371c:	xor	r8d, edx
0x371f:	and	r8d, eax
0x3722:	xor	r8d, esi
0x3725:	lea	esi, [r15 + rsi + 0x5a827999]
0x372d:	mov	r15d, dword ptr [rsp + 0xac]
0x3735:	add	r8d, edi
0x3738:	mov	edi, r9d
0x373b:	rol	edi, 5
0x373e:	ror	eax, 2
0x3741:	xor	r11d, ebx
0x3744:	add	r8d, edi
0x3747:	mov	edi, edx
0x3749:	xor	r11d, dword ptr [rsp + 0x90]
0x3751:	xor	edi, eax
0x3753:	xor	r11d, dword ptr [rsp + 0xa4]
0x375b:	xor	r10d, ebp
0x375e:	and	edi, r9d
0x3761:	ror	r9d, 2
0x3765:	xor	r10d, dword ptr [rsp + 0x94]
0x376d:	xor	edi, edx
0x376f:	lea	edx, [r15 + rdx + 0x5a827999]
0x3777:	xor	r10d, dword ptr [rsp + 0xa8]
0x377f:	add	edi, esi
0x3781:	mov	esi, r8d
0x3784:	rol	esi, 5
0x3787:	rol	r11d, 1
0x378a:	add	edi, esi
0x378c:	mov	esi, eax
0x378e:	xor	esi, r9d
0x3791:	rol	r10d, 1
0x3794:	and	esi, r8d
0x3797:	ror	r8d, 2
0x379b:	xor	esi, eax
0x379d:	lea	eax, [r11 + rax + 0x5a827999]
0x37a5:	add	esi, edx
0x37a7:	mov	edx, edi
0x37a9:	rol	edx, 5
0x37ac:	add	esi, edx
0x37ae:	mov	edx, r9d
0x37b1:	xor	edx, r8d
0x37b4:	and	edx, edi
0x37b6:	ror	edi, 2
0x37b9:	xor	edx, r9d
0x37bc:	lea	r9d, [r10 + r9 + 0x5a827999]
0x37c4:	mov	r12d, edi
0x37c7:	add	edx, eax
0x37c9:	mov	eax, esi
0x37cb:	rol	eax, 5
0x37ce:	add	edx, eax
0x37d0:	mov	eax, r8d


0x1690:	jmp	qword ptr [rip + 0x2097fa]




0x2cae:	add	rsp, 8
0x2cb2:	pop	rbx
0x2cb3:	pop	rbp
0x2cb4:	ret	


0x2cb8:	mov	edx, 2
0x2cbd:	mov	esi, 1
0x2cc2:	mov	rdi, rbp
0x2cc5:	call	0x17d0


0x2c87:	cmp	sil, 0x5c
0x2c8b:	je	0x2c58




0x2b6b:	cmp	r8, rdx
0x2b6e:	je	0x2b90


0x2b98:	mov	r9, rcx
0x2b9b:	mov	byte ptr [rcx - 1], al
0x2b9e:	add	rdx, 1
0x2ba2:	add	rcx, 1
0x2ba6:	cmp	rsi, rdx
0x2ba9:	ja	0x2b5f


0x18f0:	jmp	qword ptr [rip + 0x2096ea]


0x7487:	cmp	esi, 4
0x748a:	je	0x7560


0x74e0:	cmp	esi, 0x407
0x74e6:	jg	0x7530




0x71ca:	mov	qword ptr [rsi], rcx
0x71cd:	imul	rcx, r9
0x71d1:	mov	rsi, rcx
0x71d4:	jmp	0x7130


0x4870:	mov	edi, dword ptr [r13 + 0x1c]
0x4874:	cmp	r12d, 8
0x4878:	mov	eax, r12d
0x487b:	lea	rcx, [rbp + rdi]
0x4880:	jae	0x4960


0x480f:	lea	r15, [r12 - 0x41]
0x4814:	shr	r15, 6
0x4818:	lea	r14, [r15 + 1]
0x481c:	shl	r14, 6
0x4820:	add	r14, rbx
0x4823:	nop	dword ptr [rax + rax]
0x4828:	movdqu	xmm0, xmmword ptr [rbx]
0x482c:	mov	rdx, r13
0x482f:	mov	esi, 0x40
0x4834:	mov	rdi, rbp
0x4837:	add	rbx, 0x40
0x483b:	movups	xmmword ptr [rbp], xmm0
0x483f:	movdqu	xmm0, xmmword ptr [rbx - 0x30]
0x4844:	movups	xmmword ptr [rbp + 0x10], xmm0
0x4848:	movdqu	xmm0, xmmword ptr [rbx - 0x20]
0x484d:	movups	xmmword ptr [rbp + 0x20], xmm0
0x4851:	movdqu	xmm0, xmmword ptr [rbx - 0x10]
0x4856:	movups	xmmword ptr [rbp + 0x30], xmm0
0x485a:	call	0x3430


0x474b:	movzx	eax, byte ptr [rip + 0x3dee]
0x4752:	test	cl, 2
0x4755:	mov	byte ptr [rdx], al
0x4757:	je	0x4794


0x37d3:	xor	eax, edi
0x37d5:	xor	ebx, r13d
0x37d8:	and	eax, esi
0x37da:	ror	esi, 2
0x37dd:	xor	eax, r8d
0x37e0:	xor	r12d, esi
0x37e3:	add	eax, r9d
0x37e6:	mov	r9d, edx
0x37e9:	and	r12d, edx
0x37ec:	rol	r9d, 5
0x37f0:	xor	r12d, edi
0x37f3:	ror	edx, 2
0x37f6:	add	eax, r9d
0x37f9:	mov	r9d, dword ptr [rsp + 0x98]
0x3801:	xor	r9d, ebx
0x3804:	mov	ebx, esi
0x3806:	xor	r9d, r15d
0x3809:	xor	ebx, edx
0x380b:	mov	r15d, edx
0x380e:	rol	r9d, 1
0x3811:	and	ebx, eax
0x3813:	lea	r8d, [r9 + r8 + 0x5a827999]
0x381b:	xor	ebx, esi
0x381d:	add	r12d, r8d
0x3820:	mov	r8d, eax
0x3823:	ror	eax, 2
0x3826:	rol	r8d, 5
0x382a:	add	r12d, r8d
0x382d:	mov	r8d, ebp
0x3830:	mov	ebp, eax
0x3832:	xor	r8d, r14d
0x3835:	xor	r8d, dword ptr [rsp + 0x9c]
0x383d:	xor	r8d, r11d
0x3840:	rol	r8d, 1
0x3843:	lea	edi, [r8 + rdi + 0x5a827999]
0x384b:	add	ebx, edi
0x384d:	mov	edi, r12d
0x3850:	rol	edi, 5
0x3853:	add	ebx, edi
0x3855:	mov	edi, dword ptr [rsp + 0x88]
0x385c:	xor	edi, r13d
0x385f:	xor	edi, dword ptr [rsp + 0xa0]
0x3866:	xor	edi, r10d
0x3869:	rol	edi, 1
0x386b:	xor	r15d, eax
0x386e:	lea	esi, [rdi + rsi + 0x6ed9eba1]
0x3875:	xor	r15d, r12d
0x3878:	ror	r12d, 2
0x387c:	xor	ebp, r12d
0x387f:	add	esi, r15d
0x3882:	mov	r15d, ebx
0x3885:	xor	ebp, ebx
0x3887:	rol	r15d, 5
0x388b:	ror	ebx, 2
0x388e:	add	r15d, esi
0x3891:	mov	esi, dword ptr [rsp + 0x8c]
0x3898:	mov	r13d, ebx
0x389b:	xor	esi, r14d
0x389e:	xor	esi, dword ptr [rsp + 0xa4]
0x38a5:	mov	r14d, r12d
0x38a8:	xor	r14d, ebx
0x38ab:	xor	r14d, r15d
0x38ae:	xor	esi, r9d
0x38b1:	rol	esi, 1
0x38b3:	lea	edx, [rsi + rdx + 0x6ed9eba1]
0x38ba:	add	edx, ebp
0x38bc:	mov	ebp, r15d
0x38bf:	ror	r15d, 2
0x38c3:	rol	ebp, 5
0x38c6:	xor	r13d, r15d
0x38c9:	add	ebp, edx
0x38cb:	mov	edx, dword ptr [rsp + 0x88]
0x38d2:	xor	edx, dword ptr [rsp + 0x90]
0x38d9:	xor	edx, dword ptr [rsp + 0xa8]
0x38e0:	xor	edx, r8d
0x38e3:	rol	edx, 1
0x38e5:	lea	eax, [rdx + rax + 0x6ed9eba1]
0x38ec:	add	eax, r14d
0x38ef:	mov	r14d, ebp
0x38f2:	rol	r14d, 5
0x38f6:	add	r14d, eax
0x38f9:	mov	eax, dword ptr [rsp + 0x8c]
0x3900:	xor	eax, dword ptr [rsp + 0x94]
0x3907:	xor	eax, dword ptr [rsp + 0xac]
0x390e:	xor	eax, edi
0x3910:	rol	eax, 1
0x3912:	xor	r13d, ebp
0x3915:	ror	ebp, 2
0x3918:	lea	r12d, [rax + r12 + 0x6ed9eba1]
0x3920:	add	r12d, r13d
0x3923:	mov	r13d, r14d
0x3926:	rol	r13d, 5
0x392a:	add	r13d, r12d
0x392d:	mov	r12d, dword ptr [rsp + 0x90]
0x3935:	xor	r12d, dword ptr [rsp + 0x98]
0x393d:	mov	dword ptr [rsp + 0x1c], r11d
0x3942:	xor	r12d, r11d
0x3945:	xor	r12d, esi
0x3948:	rol	r12d, 1




0x17d0:	jmp	qword ptr [rip + 0x20975a]


0x2c58:	lea	rdi, [rip + 0x4d08]
0x2c5f:	mov	edx, 2
0x2c64:	mov	esi, 1
0x2c69:	call	0x17d0


0x2c8d:	mov	rax, qword ptr [rcx + 0x28]
0x2c91:	cmp	rax, qword ptr [rcx + 0x30]
0x2c95:	jae	0x2ce8


0x2b70:	add	rdx, 1
0x2b74:	movzx	eax, byte ptr [rdi + rdx]
0x2b78:	cmp	al, 0x5c
0x2b7a:	je	0x2bc0


0x2bab:	add	rsi, rdi
0x2bae:	cmp	r9, rsi
0x2bb1:	jae	0x2bb7


0x7560:	mov	eax, dword ptr [rsp]
0x7563:	cmp	eax, 0x2f
0x7566:	ja	0x7654


0x7490:	jg	0x7550


0x74e8:	cmp	esi, 0x406
0x74ee:	jge	0x7560


0x7530:	cmp	esi, 0x409
0x7536:	je	0x7560


0x4886:	test	r12b, 4
0x488a:	jne	0x4a81


0x4960:	mov	rax, qword ptr [rbx]
0x4963:	mov	edx, r12d
0x4966:	mov	qword ptr [rcx], rax
0x4969:	mov	rax, qword ptr [rbx + rdx - 8]
0x496e:	mov	qword ptr [rcx + rdx - 8], rax
0x4973:	lea	rdx, [rcx + 8]
0x4977:	mov	rax, rcx
0x497a:	and	rdx, 0xfffffffffffffff8
0x497e:	sub	rax, rdx
0x4981:	sub	rbx, rax
0x4984:	add	eax, r12d
0x4987:	and	eax, 0xfffffff8
0x498a:	cmp	eax, 8
0x498d:	jb	0x48a2


0x4759:	movzx	eax, word ptr [rsi + rcx - 2]
0x475e:	mov	word ptr [rdx + rcx - 2], ax
0x4763:	jmp	0x4794


0x394b:	mov	r11d, r12d
0x394e:	mov	r12d, r15d
0x3951:	xor	r12d, ebp
0x3954:	lea	ebx, [r11 + rbx + 0x6ed9eba1]
0x395c:	mov	dword ptr [rsp + 0x24], r11d
0x3961:	xor	r12d, r14d
0x3964:	ror	r14d, 2
0x3968:	add	ebx, r12d
0x396b:	mov	r12d, r13d
0x396e:	rol	r12d, 5
0x3972:	add	r12d, ebx
0x3975:	mov	ebx, dword ptr [rsp + 0x94]
0x397c:	xor	ebx, dword ptr [rsp + 0x9c]
0x3983:	xor	ebx, r10d
0x3986:	xor	ebx, edx
0x3988:	rol	ebx, 1
0x398a:	mov	r11d, ebx
0x398d:	mov	ebx, ebp
0x398f:	xor	ebx, r14d
0x3992:	lea	r15d, [r11 + r15 + 0x6ed9eba1]
0x399a:	mov	dword ptr [rsp + 0x28], r11d
0x399f:	xor	ebx, r13d
0x39a2:	ror	r13d, 2
0x39a6:	add	ebx, r15d
0x39a9:	mov	r15d, r12d
0x39ac:	rol	r15d, 5
0x39b0:	add	r15d, ebx
0x39b3:	mov	ebx, dword ptr [rsp + 0x98]
0x39ba:	xor	ebx, dword ptr [rsp + 0xa0]
0x39c1:	xor	ebx, r9d
0x39c4:	xor	ebx, eax
0x39c6:	rol	ebx, 1
0x39c8:	mov	r11d, ebx
0x39cb:	mov	ebx, r14d
0x39ce:	xor	ebx, r13d
0x39d1:	lea	ebp, [r11 + rbp + 0x6ed9eba1]
0x39d9:	mov	dword ptr [rsp + 0x2c], r11d
0x39de:	xor	ebx, r12d
0x39e1:	add	ebx, ebp
0x39e3:	mov	ebp, r15d
0x39e6:	rol	ebp, 5
0x39e9:	ror	r12d, 2
0x39ed:	add	ebx, ebp
0x39ef:	mov	ebp, dword ptr [rsp + 0x9c]
0x39f6:	xor	ebp, dword ptr [rsp + 0xa4]
0x39fd:	xor	ebp, r8d
0x3a00:	xor	ebp, dword ptr [rsp + 0x24]
0x3a04:	rol	ebp, 1
0x3a06:	mov	r11d, ebp
0x3a09:	mov	ebp, r13d
0x3a0c:	xor	ebp, r12d
0x3a0f:	lea	r14d, [r11 + r14 + 0x6ed9eba1]
0x3a17:	mov	dword ptr [rsp + 0xc], r11d
0x3a1c:	xor	ebp, r15d
0x3a1f:	ror	r15d, 2
0x3a23:	add	ebp, r14d
0x3a26:	mov	r14d, ebx
0x3a29:	rol	r14d, 5
0x3a2d:	add	r14d, ebp
0x3a30:	mov	ebp, dword ptr [rsp + 0xa0]
0x3a37:	xor	ebp, dword ptr [rsp + 0xa8]
0x3a3e:	xor	ebp, edi
0x3a40:	xor	ebp, dword ptr [rsp + 0x28]
0x3a44:	rol	ebp, 1
0x3a46:	mov	r11d, ebp
0x3a49:	mov	ebp, r12d
0x3a4c:	xor	ebp, r15d
0x3a4f:	lea	r13d, [r11 + r13 + 0x6ed9eba1]
0x3a57:	mov	dword ptr [rsp + 0x10], r11d
0x3a5c:	xor	ebp, ebx
0x3a5e:	ror	ebx, 2
0x3a61:	add	ebp, r13d
0x3a64:	mov	r13d, r14d
0x3a67:	rol	r13d, 5
0x3a6b:	add	r13d, ebp
0x3a6e:	mov	ebp, dword ptr [rsp + 0xa4]
0x3a75:	xor	ebp, dword ptr [rsp + 0xac]
0x3a7c:	xor	ebp, esi
0x3a7e:	xor	ebp, dword ptr [rsp + 0x2c]
0x3a82:	rol	ebp, 1
0x3a84:	mov	r11d, ebp
0x3a87:	mov	ebp, r15d
0x3a8a:	xor	ebp, ebx
0x3a8c:	lea	r12d, [r11 + r12 + 0x6ed9eba1]
0x3a94:	mov	dword ptr [rsp + 0x34], r11d
0x3a99:	xor	ebp, r14d
0x3a9c:	add	ebp, r12d
0x3a9f:	mov	r12d, r13d
0x3aa2:	rol	r12d, 5
0x3aa6:	add	r12d, ebp
0x3aa9:	ror	r14d, 2
0x3aad:	mov	ebp, dword ptr [rsp + 0x1c]
0x3ab1:	xor	ebp, dword ptr [rsp + 0xa8]
0x3ab8:	xor	ebp, edx
0x3aba:	xor	ebp, dword ptr [rsp + 0xc]
0x3abe:	rol	ebp, 1
0x3ac0:	mov	r11d, ebp
0x3ac3:	mov	ebp, ebx
0x3ac5:	xor	ebp, r14d




0x2c97:	lea	rdx, [rax + 1]
0x2c9b:	add	rbx, 1
0x2c9f:	mov	qword ptr [rcx + 0x28], rdx
0x2ca3:	mov	byte ptr [rax], sil
0x2ca6:	movzx	esi, byte ptr [rbx]
0x2ca9:	test	sil, sil
0x2cac:	jne	0x2c7a


0x2ce8:	mov	rdi, rcx
0x2ceb:	call	0x16d0


0x2bc0:	mov	r9, rcx
0x2bc3:	mov	byte ptr [rcx - 1], 0x5c
0x2bc7:	jmp	0x2b9e


0x2b7c:	cmp	al, 0x6e
0x2b7e:	jne	0x2b90


0x2bb3:	mov	byte ptr [r9], 0
0x2bb7:	mov	rax, rdi
0x2bba:	ret	


0x756c:	add	rax, qword ptr [rsp + 0x10]
0x7571:	mov	edx, dword ptr [rax]
0x7573:	mov	edi, ebp
0x7575:	xor	eax, eax
0x7577:	call	0x1610


0x7654:	mov	rax, qword ptr [rsp + 8]
0x7659:	jmp	0x7571


0x7496:	cmp	esi, 2
0x7499:	je	0x7560


0x7550:	cmp	esi, 9
0x7553:	je	0x74b0


0x74f0:	cmp	esi, 0x401
0x74f6:	je	0x74b0


0x7538:	jl	0x74b0


0x4890:	test	r12d, r12d
0x4893:	je	0x48a2


0x4a81:	mov	edx, dword ptr [rbx]
0x4a83:	mov	dword ptr [rcx], edx
0x4a85:	mov	edx, r12d
0x4a88:	mov	eax, dword ptr [rbx + rdx - 4]
0x4a8c:	mov	dword ptr [rcx + rdx - 4], eax
0x4a90:	jmp	0x48a2


0x48a2:	add	r12, rdi
0x48a5:	cmp	r12, 0x3f
0x48a9:	jbe	0x48ce


0x4993:	and	eax, 0xfffffff8
0x4996:	xor	ecx, ecx
0x4998:	mov	esi, ecx
0x499a:	add	ecx, 8
0x499d:	mov	r8, qword ptr [rbx + rsi]
0x49a1:	cmp	ecx, eax
0x49a3:	mov	qword ptr [rdx + rsi], r8
0x49a7:	jb	0x4998


0x3ac8:	lea	r15d, [r11 + r15 + 0x6ed9eba1]
0x3ad0:	mov	dword ptr [rsp + 0x14], r11d
0x3ad5:	xor	ebp, r13d
0x3ad8:	ror	r13d, 2
0x3adc:	add	ebp, r15d
0x3adf:	mov	r15d, r12d
0x3ae2:	rol	r15d, 5
0x3ae6:	add	ebp, r15d
0x3ae9:	mov	r15d, dword ptr [rsp + 0xac]
0x3af1:	xor	r15d, r10d
0x3af4:	xor	r10d, r8d
0x3af7:	xor	r15d, eax
0x3afa:	xor	r15d, dword ptr [rsp + 0x10]
0x3aff:	rol	r15d, 1
0x3b02:	mov	r11d, r15d
0x3b05:	mov	r15d, r14d
0x3b08:	mov	dword ptr [rsp + 0x18], r11d
0x3b0d:	lea	ebx, [r11 + rbx + 0x6ed9eba1]
0x3b15:	mov	r11d, dword ptr [rsp + 0x1c]
0x3b1a:	xor	r15d, r13d
0x3b1d:	xor	r15d, r12d
0x3b20:	ror	r12d, 2
0x3b24:	xor	r11d, r9d
0x3b27:	xor	r11d, dword ptr [rsp + 0x24]
0x3b2c:	add	ebx, r15d
0x3b2f:	xor	r11d, dword ptr [rsp + 0x34]
0x3b34:	mov	r15d, ebp
0x3b37:	rol	r15d, 5
0x3b3b:	add	ebx, r15d
0x3b3e:	mov	r15d, r11d
0x3b41:	mov	r11d, r13d
0x3b44:	rol	r15d, 1
0x3b47:	xor	r11d, r12d
0x3b4a:	lea	r14d, [r15 + r14 + 0x6ed9eba1]
0x3b52:	xor	r11d, ebp
0x3b55:	ror	ebp, 2
0x3b58:	add	r11d, r14d
0x3b5b:	mov	r14d, ebx
0x3b5e:	rol	r14d, 5
0x3b62:	add	r11d, r14d
0x3b65:	xor	r10d, dword ptr [rsp + 0x28]
0x3b6a:	xor	r9d, edi
0x3b6d:	xor	r10d, dword ptr [rsp + 0x14]
0x3b72:	xor	r9d, dword ptr [rsp + 0x2c]
0x3b77:	xor	r8d, esi
0x3b7a:	xor	r9d, dword ptr [rsp + 0x18]
0x3b7f:	xor	r8d, dword ptr [rsp + 0xc]
0x3b84:	xor	edi, edx
0x3b86:	xor	edi, dword ptr [rsp + 0x10]
0x3b8a:	rol	r10d, 1
0x3b8d:	mov	r14d, r10d
0x3b90:	mov	r10d, r12d
0x3b93:	rol	r9d, 1
0x3b96:	xor	r10d, ebp
0x3b99:	lea	r13d, [r14 + r13 + 0x6ed9eba1]
0x3ba1:	xor	r8d, r15d
0x3ba4:	xor	r10d, ebx
0x3ba7:	ror	ebx, 2
0x3baa:	rol	r8d, 1
0x3bad:	add	r10d, r13d
0x3bb0:	mov	r13d, r11d
0x3bb3:	xor	edi, r14d
0x3bb6:	rol	r13d, 5
0x3bba:	add	r10d, r13d
0x3bbd:	mov	r13d, r9d
0x3bc0:	mov	r9d, ebp
0x3bc3:	xor	r9d, ebx
0x3bc6:	lea	r12d, [r13 + r12 + 0x6ed9eba1]
0x3bce:	xor	r9d, r11d
0x3bd1:	ror	r11d, 2
0x3bd5:	add	r9d, r12d
0x3bd8:	mov	r12d, r10d
0x3bdb:	rol	r12d, 5
0x3bdf:	add	r9d, r12d
0x3be2:	mov	r12d, r8d
0x3be5:	mov	r8d, ebx
0x3be8:	xor	r8d, r11d
0x3beb:	lea	ebp, [r12 + rbp + 0x6ed9eba1]
0x3bf3:	xor	r8d, r10d
0x3bf6:	ror	r10d, 2
0x3bfa:	add	r8d, ebp
0x3bfd:	mov	ebp, r9d
0x3c00:	rol	ebp, 5
0x3c03:	add	r8d, ebp
0x3c06:	rol	edi, 1
0x3c08:	xor	esi, eax
0x3c0a:	xor	esi, dword ptr [rsp + 0x34]
0x3c0e:	mov	ebp, edi
0x3c10:	mov	edi, r11d
0x3c13:	xor	edi, r10d
0x3c16:	lea	ebx, [rbp + rbx + 0x6ed9eba1]
0x3c1d:	mov	dword ptr [rsp + 0x1c], ebp
0x3c21:	xor	edi, r9d
0x3c24:	ror	r9d, 2
0x3c28:	add	edi, ebx
0x3c2a:	mov	ebx, r8d
0x3c2d:	xor	esi, r13d
0x3c30:	rol	ebx, 5
0x3c33:	rol	esi, 1


0x16d0:	jmp	qword ptr [rip + 0x2097da]


0x2b9e:	add	rdx, 1
0x2ba2:	add	rcx, 1
0x2ba6:	cmp	rsi, rdx
0x2ba9:	ja	0x2b5f


0x2b80:	mov	r9, rcx
0x2b83:	mov	byte ptr [rcx - 1], 0xa
0x2b87:	jmp	0x2b9e


0x7571:	mov	edx, dword ptr [rax]
0x7573:	mov	edi, ebp
0x7575:	xor	eax, eax
0x7577:	call	0x1610


0x749f:	jg	0x74b0


0x7559:	jg	0x7560


0x74f8:	cmp	esi, 0x402
0x74fe:	je	0x7560


0x753e:	cmp	esi, 0x40a
0x7544:	jne	0x7508


0x4895:	movzx	edx, byte ptr [rbx]
0x4898:	test	al, 2
0x489a:	mov	byte ptr [rcx], dl
0x489c:	jne	0x4a95


0x48ce:	mov	dword ptr [r13 + 0x1c], r12d
0x48d2:	add	rsp, 8
0x48d6:	pop	rbx
0x48d7:	pop	rbp
0x48d8:	pop	r12
0x48da:	pop	r13
0x48dc:	pop	r14
0x48de:	pop	r15
0x48e0:	ret	


0x48ab:	mov	rdx, r13
0x48ae:	mov	esi, 0x40
0x48b3:	mov	rdi, rbp
0x48b6:	call	0x3430


0x4998:	mov	esi, ecx
0x499a:	add	ecx, 8
0x499d:	mov	r8, qword ptr [rbx + rsi]
0x49a1:	cmp	ecx, eax
0x49a3:	mov	qword ptr [rdx + rsi], r8
0x49a7:	jb	0x4998


0x49a9:	jmp	0x48a2


0x3c35:	add	edi, ebx
0x3c37:	mov	ebx, esi
0x3c39:	mov	esi, r10d
0x3c3c:	mov	ebp, edi
0x3c3e:	mov	dword ptr [rsp + 0x20], ebx
0x3c42:	lea	r11d, [rbx + r11 + 0x6ed9eba1]
0x3c4a:	mov	ebx, dword ptr [rsp + 0x24]
0x3c4e:	xor	esi, r9d
0x3c51:	rol	ebp, 5
0x3c54:	xor	esi, r8d
0x3c57:	ror	r8d, 2
0x3c5b:	xor	edx, ebx
0x3c5d:	xor	edx, dword ptr [rsp + 0x14]
0x3c61:	add	esi, r11d
0x3c64:	add	esi, ebp
0x3c66:	mov	ebp, dword ptr [rsp + 0x2c]
0x3c6a:	xor	edx, r12d
0x3c6d:	rol	edx, 1
0x3c6f:	mov	r11d, edx
0x3c72:	mov	edx, r9d
0x3c75:	mov	dword ptr [rsp + 0x24], r11d
0x3c7a:	lea	r10d, [r11 + r10 + 0x6ed9eba1]
0x3c82:	mov	r11d, dword ptr [rsp + 0x28]
0x3c87:	xor	edx, r8d
0x3c8a:	xor	edx, edi
0x3c8c:	ror	edi, 2
0x3c8f:	xor	eax, r11d
0x3c92:	xor	eax, dword ptr [rsp + 0x18]
0x3c96:	add	edx, r10d
0x3c99:	xor	eax, dword ptr [rsp + 0x1c]
0x3c9d:	mov	r10d, esi
0x3ca0:	rol	r10d, 5
0x3ca4:	add	edx, r10d
0x3ca7:	rol	eax, 1
0x3ca9:	mov	r10d, eax
0x3cac:	mov	eax, r8d
0x3caf:	lea	r9d, [r10 + r9 + 0x6ed9eba1]
0x3cb7:	xor	eax, edi
0x3cb9:	mov	dword ptr [rsp + 0x28], r10d
0x3cbe:	xor	eax, esi
0x3cc0:	ror	esi, 2
0x3cc3:	mov	r10d, edx
0x3cc6:	add	eax, r9d
0x3cc9:	mov	r9d, edx
0x3ccc:	and	r10d, esi
0x3ccf:	rol	r9d, 5
0x3cd3:	add	r9d, eax
0x3cd6:	mov	eax, ebx
0x3cd8:	mov	ebx, dword ptr [rsp + 0xc]
0x3cdc:	xor	eax, ebp
0x3cde:	xor	eax, r15d
0x3ce1:	xor	eax, dword ptr [rsp + 0x20]
0x3ce5:	xor	ebx, r11d
0x3ce8:	xor	ebx, r14d
0x3ceb:	xor	ebx, dword ptr [rsp + 0x24]
0x3cef:	rol	eax, 1
0x3cf1:	mov	dword ptr [rsp + 0x2c], eax
0x3cf5:	lea	r8d, [rax + r8 - 0x70e44324]
0x3cfd:	mov	eax, r9d
0x3d00:	rol	eax, 5
0x3d03:	mov	r11d, ebx
0x3d06:	mov	ebx, dword ptr [rsp + 0x10]
0x3d0a:	add	r8d, eax
0x3d0d:	mov	eax, edx
0x3d0f:	ror	edx, 2
0x3d12:	or	eax, esi
0x3d14:	rol	r11d, 1
0x3d17:	and	eax, edi
0x3d19:	xor	ebx, ebp
0x3d1b:	lea	edi, [r11 + rdi - 0x70e44324]
0x3d23:	or	eax, r10d
0x3d26:	mov	r10d, r9d
0x3d29:	xor	ebx, r13d
0x3d2c:	add	r8d, eax
0x3d2f:	or	r10d, edx
0x3d32:	mov	eax, r9d
0x3d35:	and	r10d, esi
0x3d38:	and	eax, edx
0x3d3a:	xor	ebx, dword ptr [rsp + 0x28]
0x3d3e:	or	eax, r10d
0x3d41:	ror	r9d, 2
0x3d45:	mov	ebp, dword ptr [rsp + 0xc]
0x3d49:	add	eax, edi
0x3d4b:	mov	edi, r8d
0x3d4e:	mov	r10d, r8d
0x3d51:	rol	edi, 5
0x3d54:	add	edi, eax
0x3d56:	rol	ebx, 1
0x3d58:	and	r10d, r9d
0x3d5b:	mov	dword ptr [rsp + 0x30], ebx
0x3d5f:	lea	esi, [rbx + rsi - 0x70e44324]
0x3d66:	mov	ebx, dword ptr [rsp + 0x34]
0x3d6a:	mov	eax, edi
0x3d6c:	rol	eax, 5
0x3d6f:	xor	ebp, ebx
0x3d71:	add	esi, eax
0x3d73:	mov	eax, r8d
0x3d76:	xor	ebp, r12d
0x3d79:	xor	ebp, dword ptr [rsp + 0x2c]




0x74a1:	cmp	esi, 1
0x74a4:	jne	0x7508


0x755b:	cmp	esi, 8
0x755e:	jne	0x7508


0x7500:	cmp	esi, 0x400
0x7506:	je	0x7560


0x7546:	jmp	0x74b0


0x7508:	mov	eax, dword ptr [rsp]
0x750b:	cmp	eax, 0x2f
0x750e:	ja	0x764a


0x4a95:	mov	edx, r12d
0x4a98:	movzx	eax, word ptr [rbx + rdx - 2]
0x4a9d:	mov	word ptr [rcx + rdx - 2], ax
0x4aa2:	jmp	0x48a2


0x3d7d:	or	eax, r9d
0x3d80:	and	eax, edx
0x3d82:	ror	r8d, 2
0x3d86:	or	eax, r10d
0x3d89:	add	esi, eax
0x3d8b:	mov	eax, edi
0x3d8d:	rol	ebp, 1
0x3d8f:	or	eax, r8d
0x3d92:	lea	edx, [rbp + rdx - 0x70e44324]
0x3d99:	mov	dword ptr [rsp + 0xc], ebp
0x3d9d:	mov	ebp, dword ptr [rsp + 0x10]
0x3da1:	xor	ebp, dword ptr [rsp + 0x14]
0x3da5:	mov	r10d, eax
0x3da8:	mov	eax, edi
0x3daa:	xor	ebp, dword ptr [rsp + 0x1c]
0x3dae:	and	r10d, r9d
0x3db1:	and	eax, r8d
0x3db4:	or	eax, r10d
0x3db7:	ror	edi, 2
0x3dba:	add	eax, edx
0x3dbc:	mov	edx, esi
0x3dbe:	rol	edx, 5
0x3dc1:	xor	ebp, r11d
0x3dc4:	add	edx, eax
0x3dc6:	rol	ebp, 1
0x3dc8:	mov	r10d, edx
0x3dcb:	lea	r9d, [rbp + r9 - 0x70e44324]
0x3dd3:	rol	r10d, 5
0x3dd7:	mov	dword ptr [rsp + 0x34], ebp
0x3ddb:	add	r9d, r10d
0x3dde:	mov	r10d, esi
0x3de1:	or	r10d, edi
0x3de4:	mov	eax, r10d
0x3de7:	mov	r10d, esi
0x3dea:	and	r10d, edi
0x3ded:	and	eax, r8d
0x3df0:	or	eax, r10d
0x3df3:	mov	r10d, edx
0x3df6:	add	r9d, eax
0x3df9:	ror	esi, 2
0x3dfc:	xor	ebx, dword ptr [rsp + 0x18]
0x3e00:	mov	ebp, dword ptr [rsp + 0x20]
0x3e04:	or	r10d, esi
0x3e07:	mov	eax, edx
0x3e09:	and	r10d, edi
0x3e0c:	and	eax, esi
0x3e0e:	ror	edx, 2
0x3e11:	or	eax, r10d
0x3e14:	mov	r10d, r9d
0x3e17:	xor	ebp, ebx
0x3e19:	xor	ebp, dword ptr [rsp + 0x30]
0x3e1d:	and	r10d, edx
0x3e20:	mov	ebx, ebp
0x3e22:	mov	ebp, dword ptr [rsp + 0x14]
0x3e26:	rol	ebx, 1
0x3e28:	lea	r8d, [rbx + r8 - 0x70e44324]
0x3e30:	mov	dword ptr [rsp + 0x38], ebx
0x3e34:	xor	ebp, r15d
0x3e37:	xor	ebp, dword ptr [rsp + 0x24]
0x3e3b:	xor	ebp, dword ptr [rsp + 0xc]
0x3e3f:	add	eax, r8d
0x3e42:	mov	r8d, r9d
0x3e45:	rol	r8d, 5
0x3e49:	add	r8d, eax
0x3e4c:	mov	eax, r8d
0x3e4f:	rol	ebp, 1
0x3e51:	rol	eax, 5
0x3e54:	lea	edi, [rbp + rdi - 0x70e44324]
0x3e5b:	add	edi, eax
0x3e5d:	mov	eax, r9d
0x3e60:	ror	r9d, 2
0x3e64:	or	eax, edx
0x3e66:	and	eax, esi
0x3e68:	or	eax, r10d
0x3e6b:	mov	r10d, r8d
0x3e6e:	add	edi, eax
0x3e70:	mov	eax, dword ptr [rsp + 0x18]
0x3e74:	or	r10d, r9d
0x3e77:	and	r10d, edx
0x3e7a:	xor	eax, r14d
0x3e7d:	xor	eax, dword ptr [rsp + 0x28]
0x3e81:	xor	eax, dword ptr [rsp + 0x34]
0x3e85:	rol	eax, 1
0x3e87:	mov	ebx, eax
0x3e89:	mov	eax, r8d
0x3e8c:	and	eax, r9d
0x3e8f:	lea	esi, [rbx + rsi - 0x70e44324]
0x3e96:	mov	dword ptr [rsp + 0x3c], ebx
0x3e9a:	or	eax, r10d
0x3e9d:	xor	r15d, r13d
0x3ea0:	xor	r15d, dword ptr [rsp + 0x2c]
0x3ea5:	xor	r15d, dword ptr [rsp + 0x38]
0x3eaa:	add	eax, esi
0x3eac:	mov	esi, edi
0x3eae:	rol	esi, 5
0x3eb1:	ror	r8d, 2
0x3eb5:	mov	r10d, edi
0x3eb8:	add	esi, eax
0x3eba:	and	r10d, r8d


0x7514:	add	rax, qword ptr [rsp + 0x10]
0x7519:	mov	rdx, qword ptr [rax]
0x751c:	mov	edi, ebp
0x751e:	xor	eax, eax
0x7520:	call	0x1610


0x764a:	mov	rax, qword ptr [rsp + 8]
0x764f:	jmp	0x7519


0x3ebd:	xor	r14d, r12d
0x3ec0:	mov	eax, esi
0x3ec2:	rol	r15d, 1
0x3ec5:	rol	eax, 5
0x3ec8:	lea	edx, [r15 + rdx - 0x70e44324]
0x3ed0:	add	edx, eax
0x3ed2:	mov	eax, edi
0x3ed4:	ror	edi, 2
0x3ed7:	or	eax, r8d
0x3eda:	and	eax, r9d
0x3edd:	or	eax, r10d
0x3ee0:	mov	r10d, r14d
0x3ee3:	xor	r10d, r11d
0x3ee6:	add	edx, eax
0x3ee8:	mov	eax, esi
0x3eea:	xor	r10d, ebp
0x3eed:	and	eax, edi
0x3eef:	mov	r14d, r10d
0x3ef2:	mov	r10d, esi
0x3ef5:	ror	esi, 2
0x3ef8:	rol	r14d, 1
0x3efb:	or	r10d, edi
0x3efe:	and	r10d, r8d
0x3f01:	lea	ebx, [r14 + r9 - 0x70e44324]
0x3f09:	mov	r9d, edx
0x3f0c:	or	eax, r10d
0x3f0f:	rol	r9d, 5
0x3f13:	add	eax, ebx
0x3f15:	mov	ebx, r9d
0x3f18:	mov	r9d, dword ptr [rsp + 0x1c]
0x3f1d:	add	ebx, eax
0x3f1f:	xor	r9d, r13d
0x3f22:	xor	r9d, dword ptr [rsp + 0x30]
0x3f27:	xor	r9d, dword ptr [rsp + 0x3c]
0x3f2c:	rol	r9d, 1
0x3f2f:	mov	r13d, r9d
0x3f32:	lea	r8d, [r9 + r8 - 0x70e44324]
0x3f3a:	mov	r9d, ebx
0x3f3d:	rol	r9d, 5
0x3f41:	add	r8d, r9d
0x3f44:	mov	r9d, edx
0x3f47:	or	r9d, esi
0x3f4a:	mov	eax, r9d
0x3f4d:	mov	r9d, edx
0x3f50:	ror	edx, 2
0x3f53:	and	r9d, esi
0x3f56:	and	eax, edi
0x3f58:	or	eax, r9d
0x3f5b:	lea	r9d, [rax + r8]
0x3f5f:	mov	r8d, dword ptr [rsp + 0x20]
0x3f64:	mov	eax, ebx
0x3f66:	and	eax, edx
0x3f68:	xor	r8d, r12d
0x3f6b:	xor	r8d, dword ptr [rsp + 0xc]
0x3f70:	xor	r8d, r15d
0x3f73:	rol	r8d, 1
0x3f76:	mov	r12d, r8d
0x3f79:	mov	r8d, ebx
0x3f7c:	ror	ebx, 2
0x3f7f:	lea	r10d, [r12 + rdi - 0x70e44324]
0x3f87:	mov	edi, dword ptr [rsp + 0x1c]
0x3f8b:	xor	edi, dword ptr [rsp + 0x24]
0x3f8f:	or	r8d, edx
0x3f92:	xor	edi, dword ptr [rsp + 0x34]
0x3f96:	and	r8d, esi
0x3f99:	or	eax, r8d
0x3f9c:	mov	r8d, r9d
0x3f9f:	rol	r8d, 5
0x3fa3:	add	eax, r10d
0x3fa6:	xor	edi, r14d
0x3fa9:	mov	r10d, r8d
0x3fac:	add	r10d, eax
0x3faf:	rol	edi, 1
0x3fb1:	lea	esi, [rdi + rsi - 0x70e44324]
0x3fb8:	mov	r8d, r10d
0x3fbb:	mov	dword ptr [rsp + 0x40], edi
0x3fbf:	rol	r8d, 5
0x3fc3:	add	esi, r8d
0x3fc6:	mov	r8d, r9d
0x3fc9:	or	r8d, ebx
0x3fcc:	mov	eax, r8d
0x3fcf:	mov	r8d, r9d
0x3fd2:	ror	r9d, 2
0x3fd6:	and	r8d, ebx
0x3fd9:	and	eax, edx
0x3fdb:	or	eax, r8d
0x3fde:	lea	edi, [rax + rsi]
0x3fe1:	mov	esi, dword ptr [rsp + 0x20]
0x3fe5:	xor	esi, dword ptr [rsp + 0x28]
0x3fe9:	xor	esi, dword ptr [rsp + 0x38]
0x3fed:	mov	eax, r10d
0x3ff0:	and	eax, r9d
0x3ff3:	xor	esi, r13d
0x3ff6:	rol	esi, 1
0x3ff8:	mov	r8d, esi
0x3ffb:	mov	esi, r10d
0x3ffe:	ror	r10d, 2
0x4002:	or	esi, r9d
0x4005:	mov	dword ptr [rsp + 0x1c], r8d


0x7519:	mov	rdx, qword ptr [rax]
0x751c:	mov	edi, ebp
0x751e:	xor	eax, eax
0x7520:	call	0x1610


0x400a:	lea	r8d, [r8 + rdx - 0x70e44324]
0x4012:	and	esi, ebx
0x4014:	mov	edx, edi
0x4016:	or	eax, esi
0x4018:	rol	edx, 5
0x401b:	mov	esi, edi
0x401d:	add	eax, r8d
0x4020:	mov	r8d, edx
0x4023:	mov	edx, dword ptr [rsp + 0x24]
0x4027:	xor	edx, dword ptr [rsp + 0x2c]
0x402b:	add	r8d, eax
0x402e:	and	esi, r10d
0x4031:	mov	eax, r8d
0x4034:	rol	eax, 5
0x4037:	xor	edx, ebp
0x4039:	xor	edx, r12d
0x403c:	rol	edx, 1
0x403e:	mov	dword ptr [rsp + 0x24], edx
0x4042:	lea	edx, [rdx + rbx - 0x70e44324]
0x4049:	add	edx, eax
0x404b:	mov	eax, edi
0x404d:	ror	edi, 2
0x4050:	or	eax, r10d
0x4053:	and	eax, r9d
0x4056:	or	eax, esi
0x4058:	add	edx, eax
0x405a:	mov	eax, dword ptr [rsp + 0x28]
0x405e:	xor	eax, r11d
0x4061:	xor	eax, dword ptr [rsp + 0x3c]
0x4065:	xor	eax, dword ptr [rsp + 0x40]
0x4069:	rol	eax, 1
0x406b:	mov	ebx, eax
0x406d:	mov	eax, r8d
0x4070:	or	eax, edi
0x4072:	lea	r9d, [rbx + r9 - 0x70e44324]
0x407a:	mov	dword ptr [rsp + 0x28], ebx
0x407e:	mov	esi, eax
0x4080:	mov	eax, r8d
0x4083:	mov	ebx, dword ptr [rsp + 0x2c]
0x4087:	and	esi, r10d
0x408a:	and	eax, edi
0x408c:	or	eax, esi
0x408e:	add	eax, r9d
0x4091:	mov	r9d, edx
0x4094:	rol	r9d, 5
0x4098:	xor	ebx, dword ptr [rsp + 0x30]
0x409c:	xor	r11d, dword ptr [rsp + 0xc]
0x40a1:	add	r9d, eax
0x40a4:	ror	r8d, 2
0x40a8:	xor	ebx, r15d
0x40ab:	xor	ebx, dword ptr [rsp + 0x1c]
0x40af:	xor	r11d, r14d
0x40b2:	xor	r11d, dword ptr [rsp + 0x24]
0x40b7:	mov	eax, ebx
0x40b9:	mov	ebx, dword ptr [rsp + 0x30]
0x40bd:	rol	eax, 1
0x40bf:	rol	r11d, 1
0x40c2:	lea	esi, [rax + r10 - 0x70e44324]
0x40ca:	mov	r10d, r9d
0x40cd:	mov	dword ptr [rsp + 0x2c], eax
0x40d1:	rol	r10d, 5
0x40d5:	mov	dword ptr [rsp + 0x10], r11d
0x40da:	add	esi, r10d
0x40dd:	mov	r10d, edx
0x40e0:	or	r10d, r8d
0x40e3:	mov	eax, r10d
0x40e6:	mov	r10d, edx
0x40e9:	ror	edx, 2
0x40ec:	and	r10d, r8d
0x40ef:	and	eax, edi
0x40f1:	lea	edi, [r11 + rdi - 0x70e44324]
0x40f9:	mov	r11d, dword ptr [rsp + 0x34]
0x40fe:	or	eax, r10d
0x4101:	lea	r10d, [rax + rsi]
0x4105:	mov	esi, r9d
0x4108:	mov	eax, r9d
0x410b:	or	esi, edx
0x410d:	and	eax, edx
0x410f:	ror	r9d, 2
0x4113:	xor	ebx, r11d
0x4116:	and	esi, r8d
0x4119:	xor	ebx, r13d
0x411c:	xor	ebx, dword ptr [rsp + 0x28]
0x4120:	or	eax, esi
0x4122:	add	eax, edi
0x4124:	mov	edi, r10d
0x4127:	rol	edi, 5
0x412a:	add	edi, eax
0x412c:	rol	ebx, 1
0x412e:	lea	esi, [rbx + r8 - 0x70e44324]
0x4136:	mov	r8d, edi
0x4139:	mov	dword ptr [rsp + 0x14], ebx
0x413d:	rol	r8d, 5
0x4141:	mov	ebx, dword ptr [rsp + 0x38]
0x4145:	add	esi, r8d
0x4148:	mov	r8d, r10d
0x414b:	or	r8d, r9d
0x414e:	xor	r11d, ebp
0x4151:	xor	r11d, dword ptr [rsp + 0x40]


0x4156:	mov	eax, r8d
0x4159:	mov	r8d, r10d
0x415c:	ror	r10d, 2
0x4160:	and	r8d, r9d
0x4163:	and	eax, edx
0x4165:	xor	r11d, dword ptr [rsp + 0x10]
0x416a:	or	eax, r8d
0x416d:	lea	r8d, [rax + rsi]
0x4171:	mov	eax, dword ptr [rsp + 0xc]
0x4175:	rol	r11d, 1
0x4178:	xor	eax, ebx
0x417a:	mov	dword ptr [rsp + 0x18], r11d
0x417f:	xor	eax, r12d
0x4182:	xor	eax, dword ptr [rsp + 0x2c]
0x4186:	rol	eax, 1
0x4188:	mov	dword ptr [rsp + 0xc], eax
0x418c:	mov	eax, edi
0x418e:	or	eax, r10d
0x4191:	mov	esi, eax
0x4193:	mov	eax, edi
0x4195:	ror	edi, 2
0x4198:	and	esi, r9d
0x419b:	and	eax, r10d
0x419e:	lea	r9d, [r11 + r9 - 0x359d3e2a]
0x41a6:	or	eax, esi
0x41a8:	mov	esi, dword ptr [rsp + 0xc]
0x41ac:	mov	r11d, dword ptr [rsp + 0x1c]
0x41b1:	lea	edx, [rsi + rdx - 0x70e44324]
0x41b8:	add	eax, edx
0x41ba:	mov	edx, r8d
0x41bd:	rol	edx, 5
0x41c0:	add	edx, eax
0x41c2:	mov	eax, r10d
0x41c5:	xor	eax, edi
0x41c7:	xor	eax, r8d
0x41ca:	ror	r8d, 2
0x41ce:	add	eax, r9d
0x41d1:	mov	r9d, edx
0x41d4:	mov	esi, r8d
0x41d7:	rol	r9d, 5
0x41db:	add	r9d, eax
0x41de:	mov	eax, ebx
0x41e0:	mov	ebx, dword ptr [rsp + 0x3c]
0x41e4:	xor	eax, ebx
0x41e6:	xor	eax, r11d
0x41e9:	xor	eax, dword ptr [rsp + 0x14]
0x41ed:	mov	r8d, eax
0x41f0:	rol	r8d, 1
0x41f3:	mov	eax, r8d
0x41f6:	mov	r8d, edi
0x41f9:	xor	r8d, esi
0x41fc:	mov	dword ptr [rsp + 0x1c], eax
0x4200:	lea	eax, [rax + r10 - 0x359d3e2a]
0x4208:	xor	r8d, edx
0x420b:	xor	ebp, r15d
0x420e:	xor	ebp, dword ptr [rsp + 0x24]
0x4212:	xor	ebp, dword ptr [rsp + 0xc]
0x4216:	mov	r10d, edx
0x4219:	add	eax, r8d
0x421c:	ror	r10d, 2
0x4220:	mov	r8d, r9d
0x4223:	mov	edx, esi
0x4225:	xor	edx, r10d
0x4228:	rol	r8d, 5
0x422c:	xor	r15d, r13d
0x422f:	add	r8d, eax
0x4232:	mov	eax, edx
0x4234:	xor	r15d, dword ptr [rsp + 0x2c]
0x4239:	rol	ebp, 1
0x423b:	xor	eax, r9d
0x423e:	ror	r9d, 2
0x4242:	lea	edi, [rbp + rdi - 0x359d3e2a]
0x4249:	xor	r15d, dword ptr [rsp + 0x1c]
0x424e:	mov	dword ptr [rsp + 0x20], ebp
0x4252:	add	eax, edi
0x4254:	mov	edi, r8d
0x4257:	rol	edi, 5
0x425a:	add	edi, eax
0x425c:	mov	eax, ebx
0x425e:	rol	r15d, 1
0x4261:	xor	eax, r14d
0x4264:	xor	eax, dword ptr [rsp + 0x28]
0x4268:	mov	dword ptr [rsp + 0x70], r15d
0x426d:	xor	eax, dword ptr [rsp + 0x18]
0x4271:	mov	ebp, r15d
0x4274:	mov	edx, eax
0x4276:	mov	eax, r10d
0x4279:	rol	edx, 1
0x427b:	xor	eax, r9d
0x427e:	lea	esi, [rdx + rsi - 0x359d3e2a]
0x4285:	xor	eax, r8d
0x4288:	ror	r8d, 2
0x428c:	mov	dword ptr [rsp + 0x30], edx
0x4290:	add	eax, esi
0x4292:	mov	esi, edi
0x4294:	rol	esi, 5
0x4297:	add	esi, eax
0x4299:	mov	eax, r9d
0x429c:	xor	eax, r8d


0x429f:	mov	edx, eax
0x42a1:	lea	eax, [r15 + r10 - 0x359d3e2a]
0x42a9:	mov	r10d, esi
0x42ac:	xor	edx, edi
0x42ae:	mov	r15d, r8d
0x42b1:	add	eax, edx
0x42b3:	rol	r10d, 5
0x42b7:	ror	edi, 2
0x42ba:	mov	edx, r10d
0x42bd:	mov	r10d, r14d
0x42c0:	xor	r15d, edi
0x42c3:	xor	r10d, r12d
0x42c6:	xor	r10d, dword ptr [rsp + 0x10]
0x42cb:	add	edx, eax
0x42cd:	xor	r10d, dword ptr [rsp + 0x20]
0x42d2:	mov	eax, r15d
0x42d5:	mov	ebx, dword ptr [rsp + 0x40]
0x42d9:	xor	eax, esi
0x42db:	ror	esi, 2
0x42de:	xor	r12d, r11d
0x42e1:	mov	r14d, r11d
0x42e4:	mov	r11d, esi
0x42e7:	mov	dword ptr [rsp + 0x38], ebp
0x42eb:	rol	r10d, 1
0x42ee:	lea	r9d, [r10 + r9 - 0x359d3e2a]
0x42f6:	mov	dword ptr [rsp + 0x34], r10d
0x42fb:	mov	dword ptr [rsp + 0x74], r10d
0x4300:	mov	r10d, edi
0x4303:	add	eax, r9d
0x4306:	mov	r9d, edx
0x4309:	xor	r10d, esi
0x430c:	rol	r9d, 5
0x4310:	xor	r10d, edx
0x4313:	ror	edx, 2
0x4316:	add	eax, r9d
0x4319:	mov	r9d, r13d
0x431c:	xor	r11d, edx
0x431f:	xor	r9d, ebx
0x4322:	xor	r9d, dword ptr [rsp + 0x14]
0x4327:	xor	r11d, eax
0x432a:	xor	r9d, dword ptr [rsp + 0x30]
0x432f:	mov	r15d, edx
0x4332:	rol	r9d, 1
0x4335:	lea	r8d, [r9 + r8 - 0x359d3e2a]
0x433d:	mov	dword ptr [rsp + 0x78], r9d
0x4342:	add	r8d, r10d
0x4345:	mov	r10d, eax
0x4348:	rol	r10d, 5
0x434c:	add	r10d, r8d
0x434f:	mov	r8d, dword ptr [rsp + 0xc]
0x4354:	xor	r8d, r12d
0x4357:	xor	r8d, ebp
0x435a:	mov	ebp, dword ptr [rsp + 0x24]
0x435e:	rol	r8d, 1
0x4361:	lea	edi, [r8 + rdi - 0x359d3e2a]
0x4369:	mov	dword ptr [rsp + 0x7c], r8d
0x436e:	add	edi, r11d
0x4371:	mov	r11d, r10d
0x4374:	rol	r11d, 5
0x4378:	add	r11d, edi
0x437b:	mov	edi, dword ptr [rsp + 0x18]
0x437f:	ror	eax, 2
0x4382:	xor	ebx, ebp
0x4384:	xor	r15d, eax
0x4387:	xor	r15d, r10d
0x438a:	ror	r10d, 2
0x438e:	xor	edi, ebx
0x4390:	xor	edi, dword ptr [rsp + 0x34]
0x4394:	mov	ebx, dword ptr [rsp + 0x28]
0x4398:	mov	r13d, r10d
0x439b:	rol	edi, 1
0x439d:	lea	esi, [rdi + rsi - 0x359d3e2a]
0x43a4:	mov	dword ptr [rsp + 0x80], edi
0x43ab:	add	esi, r15d
0x43ae:	mov	r15d, r11d
0x43b1:	rol	r15d, 5
0x43b5:	add	r15d, esi
0x43b8:	mov	esi, r14d
0x43bb:	mov	r14d, eax
0x43be:	xor	esi, ebx
0x43c0:	xor	esi, dword ptr [rsp + 0x1c]
0x43c4:	xor	r14d, r10d
0x43c7:	xor	r14d, r11d
0x43ca:	ror	r11d, 2
0x43ce:	xor	r13d, r11d
0x43d1:	mov	r12d, r11d
0x43d4:	xor	r13d, r15d
0x43d7:	xor	esi, r9d
0x43da:	rol	esi, 1
0x43dc:	lea	edx, [rsi + rdx - 0x359d3e2a]
0x43e3:	mov	dword ptr [rsp + 0x84], esi
0x43ea:	add	edx, r14d
0x43ed:	mov	r14d, r15d
0x43f0:	ror	r15d, 2
0x43f4:	rol	r14d, 5
0x43f8:	add	r14d, edx
0x43fb:	mov	edx, ebp
0x43fd:	mov	ebp, dword ptr [rsp + 0x2c]
0x4401:	xor	edx, ebp


0x4403:	xor	edx, dword ptr [rsp + 0x20]
0x4407:	xor	edx, r8d
0x440a:	rol	edx, 1
0x440c:	lea	eax, [rdx + rax - 0x359d3e2a]
0x4413:	mov	dword ptr [rsp + 0x88], edx
0x441a:	add	eax, r13d
0x441d:	mov	r13d, r14d
0x4420:	rol	r13d, 5
0x4424:	add	r13d, eax
0x4427:	mov	eax, dword ptr [rsp + 0x10]
0x442b:	xor	eax, ebx
0x442d:	xor	eax, dword ptr [rsp + 0x30]
0x4431:	mov	ebx, dword ptr [rsp + 0x14]
0x4435:	xor	r12d, r15d
0x4438:	xor	r12d, r14d
0x443b:	ror	r14d, 2
0x443f:	xor	ebx, ebp
0x4441:	xor	ebx, dword ptr [rsp + 0x38]
0x4445:	mov	ebp, r14d
0x4448:	xor	eax, edi
0x444a:	rol	eax, 1
0x444c:	lea	r10d, [rax + r10 - 0x359d3e2a]
0x4454:	mov	dword ptr [rsp + 0x8c], eax
0x445b:	xor	ebx, esi
0x445d:	add	r10d, r12d
0x4460:	mov	r12d, r13d
0x4463:	rol	ebx, 1
0x4465:	rol	r12d, 5
0x4469:	lea	r11d, [rbx + r11 - 0x359d3e2a]
0x4471:	mov	dword ptr [rsp + 0x90], ebx
0x4478:	add	r12d, r10d
0x447b:	mov	r10d, r15d
0x447e:	xor	r10d, r14d
0x4481:	xor	r10d, r13d
0x4484:	ror	r13d, 2
0x4488:	add	r10d, r11d
0x448b:	mov	r11d, r12d
0x448e:	xor	ebp, r13d
0x4491:	rol	r11d, 5
0x4495:	xor	ebp, r12d
0x4498:	ror	r12d, 2
0x449c:	add	r10d, r11d
0x449f:	mov	r11d, dword ptr [rsp + 0x10]
0x44a4:	xor	r11d, dword ptr [rsp + 0xc]
0x44a9:	xor	r11d, dword ptr [rsp + 0x34]
0x44ae:	xor	r11d, edx
0x44b1:	rol	r11d, 1
0x44b4:	lea	r15d, [r11 + r15 - 0x359d3e2a]
0x44bc:	mov	dword ptr [rsp + 0x94], r11d
0x44c4:	add	ebp, r15d
0x44c7:	mov	r15d, r10d
0x44ca:	rol	r15d, 5
0x44ce:	add	ebp, r15d
0x44d1:	mov	r15d, dword ptr [rsp + 0x14]
0x44d6:	xor	r15d, dword ptr [rsp + 0x18]
0x44db:	xor	r9d, r15d
0x44de:	mov	r15d, r13d
0x44e1:	xor	r9d, eax
0x44e4:	rol	r9d, 1
0x44e7:	xor	r15d, r12d
0x44ea:	lea	r14d, [r9 + r14 - 0x359d3e2a]
0x44f2:	xor	r15d, r10d
0x44f5:	mov	dword ptr [rsp + 0x98], r9d
0x44fd:	add	r14d, r15d
0x4500:	mov	r15d, ebp
0x4503:	rol	r15d, 5
0x4507:	add	r14d, r15d
0x450a:	mov	r15d, r10d
0x450d:	mov	r10d, dword ptr [rsp + 0xc]
0x4512:	xor	r10d, dword ptr [rsp + 0x1c]
0x4517:	ror	r15d, 2
0x451b:	xor	r8d, r10d
0x451e:	xor	ebx, r8d
0x4521:	mov	r8d, r12d
0x4524:	rol	ebx, 1
0x4526:	xor	r8d, r15d
0x4529:	lea	r10d, [rbx + r13 - 0x359d3e2a]
0x4531:	mov	r13d, dword ptr [rsp + 0x18]
0x4536:	xor	r13d, dword ptr [rsp + 0x20]
0x453b:	xor	r8d, ebp
0x453e:	ror	ebp, 2
0x4541:	mov	dword ptr [rsp + 0x9c], ebx
0x4548:	add	r8d, r10d
0x454b:	mov	r10d, r14d
0x454e:	rol	r10d, 5
0x4552:	xor	edi, r13d
0x4555:	add	r8d, r10d
0x4558:	mov	r13d, dword ptr [rsp + 0x30]
0x455d:	xor	r11d, edi
0x4560:	mov	edi, r15d
0x4563:	rol	r11d, 1
0x4566:	xor	edi, ebp
0x4568:	lea	r10d, [r11 + r12 - 0x359d3e2a]
0x4570:	xor	edi, r14d
0x4573:	ror	r14d, 2
0x4577:	mov	dword ptr [rsp + 0xa0], r11d
0x457f:	add	edi, r10d
0x4582:	mov	r10d, r8d
0x4585:	rol	r10d, 5


0x4589:	add	edi, r10d
0x458c:	mov	r10d, dword ptr [rsp + 0x1c]
0x4591:	xor	r10d, r13d
0x4594:	xor	esi, r10d
0x4597:	xor	r9d, esi
0x459a:	mov	esi, ebp
0x459c:	rol	r9d, 1
0x459f:	xor	esi, r14d
0x45a2:	mov	dword ptr [rsp + 0xa4], r9d
0x45aa:	lea	r9d, [r9 + r15 - 0x359d3e2a]
0x45b2:	xor	esi, r8d
0x45b5:	mov	r15d, edi
0x45b8:	ror	r8d, 2
0x45bc:	add	esi, r9d
0x45bf:	mov	r9d, dword ptr [rsp + 0x20]
0x45c4:	xor	r9d, dword ptr [rsp + 0x38]
0x45c9:	rol	r15d, 5
0x45cd:	add	esi, r15d
0x45d0:	xor	edx, r9d
0x45d3:	xor	ebx, edx
0x45d5:	mov	edx, r14d
0x45d8:	rol	ebx, 1
0x45da:	xor	edx, r8d
0x45dd:	lea	r9d, [rbx + rbp - 0x359d3e2a]
0x45e5:	xor	edx, edi
0x45e7:	mov	dword ptr [rsp + 0xa8], ebx
0x45ee:	mov	ebx, dword ptr [rsp + 0x54]
0x45f2:	ror	edi, 2
0x45f5:	add	dword ptr [rsp + 0x4c], edi
0x45f9:	add	edx, r9d
0x45fc:	mov	r9d, esi
0x45ff:	rol	r9d, 5
0x4603:	add	edx, r9d
0x4606:	mov	r9d, dword ptr [rsp + 0x34]
0x460b:	add	dword ptr [rsp + 0x44], edx
0x460f:	xor	r9d, r13d
0x4612:	xor	eax, r9d
0x4615:	xor	eax, r11d
0x4618:	rol	eax, 1
0x461a:	mov	dword ptr [rsp + 0xac], eax
0x4621:	lea	eax, [rbx + rax - 0x359d3e2a]
0x4628:	mov	rbx, qword ptr [rsp + 0x60]
0x462d:	add	r14d, eax
0x4630:	mov	eax, r8d
0x4633:	xor	eax, edi
0x4635:	mov	edi, dword ptr [rsp + 0x4c]
0x4639:	xor	eax, esi
0x463b:	ror	esi, 2
0x463e:	add	dword ptr [rsp + 0x48], esi
0x4642:	add	r14d, eax
0x4645:	mov	esi, dword ptr [rsp + 0x48]
0x4649:	mov	eax, edx
0x464b:	mov	edx, dword ptr [rsp + 0x44]
0x464f:	rol	eax, 5
0x4652:	mov	dword ptr [rbx + 0xc], edi
0x4655:	add	eax, r14d
0x4658:	mov	dword ptr [rsp + 0x54], eax
0x465c:	mov	dword ptr [rbx], eax
0x465e:	mov	dword ptr [rbx + 4], edx
0x4661:	mov	dword ptr [rbx + 8], esi
0x4664:	add	dword ptr [rsp + 0x50], r8d
0x4669:	cmp	qword ptr [rsp + 0x58], rcx
0x466e:	mov	r8d, dword ptr [rsp + 0x50]
0x4673:	mov	dword ptr [rbx + 0x10], r8d
0x4677:	ja	0x34d0


0x34d0:	mov	r11, qword ptr [rsp + 0x68]
0x34d5:	xor	r9d, r9d
0x34d8:	nop	dword ptr [rax + rax]
0x34e0:	mov	r10d, dword ptr [rcx + r9]
0x34e4:	bswap	r10d
0x34e7:	mov	dword ptr [r11 + r9], r10d
0x34eb:	add	r9, 4
0x34ef:	cmp	r9, 0x40
0x34f3:	jne	0x34e0


0x48bb:	sub	r12, 0x40
0x48bf:	lea	rsi, [r13 + 0x60]
0x48c3:	mov	rdi, rbp
0x48c6:	mov	rdx, r12
0x48c9:	call	0x1770


0x485f:	cmp	rbx, r14
0x4862:	jne	0x4828


0x4864:	neg	r15
0x4867:	shl	r15, 6
0x486b:	lea	r12, [r12 + r15 - 0x40]
0x4870:	mov	edi, dword ptr [r13 + 0x1c]
0x4874:	cmp	r12d, 8
0x4878:	mov	eax, r12d
0x487b:	lea	rcx, [rbp + rdi]
0x4880:	jae	0x4960


0x4828:	movdqu	xmm0, xmmword ptr [rbx]
0x482c:	mov	rdx, r13
0x482f:	mov	esi, 0x40
0x4834:	mov	rdi, rbp
0x4837:	add	rbx, 0x40
0x483b:	movups	xmmword ptr [rbp], xmm0
0x483f:	movdqu	xmm0, xmmword ptr [rbx - 0x30]
0x4844:	movups	xmmword ptr [rbp + 0x10], xmm0
0x4848:	movdqu	xmm0, xmmword ptr [rbx - 0x20]
0x484d:	movups	xmmword ptr [rbp + 0x20], xmm0
0x4851:	movdqu	xmm0, xmmword ptr [rbx - 0x10]
0x4856:	movups	xmmword ptr [rbp + 0x30], xmm0
0x485a:	call	0x3430


0x47a2:	add	rsp, 8
0x47a6:	mov	rsi, rbp
0x47a9:	mov	rdi, rbx
0x47ac:	pop	rbx
0x47ad:	pop	rbp
0x47ae:	jmp	0x3400


0x2b28:	mov	byte ptr [rip + 0x2085b9], 1
0x2b2f:	pop	rbp
0x2b30:	ret	


0x2d4c:	mov	rsi, r12
0x2d4f:	mov	rdi, rbx
0x2d52:	call	0x4b40


0x4b0a:	mov	rsi, rbp
0x4b0d:	mov	rdi, rbx
0x4b10:	call	0x46b0


0x78e1:	test	rbp, rbp
0x78e4:	je	0x7906


0x7906:	add	rsp, 8
0x790a:	pop	rbx
0x790b:	pop	rbp
0x790c:	pop	r12
0x790e:	pop	r13
0x7910:	pop	r14
0x7912:	pop	r15
0x7914:	ret	


0x78e6:	xor	ebx, ebx
0x78e8:	nop	dword ptr [rax + rax]
0x78f0:	mov	rdx, r15
0x78f3:	mov	rsi, r14
0x78f6:	mov	edi, r13d
0x78f9:	call	qword ptr [r12 + rbx*8]


0x4b15:	mov	rcx, qword ptr [rsp + 0xa8]
0x4b1d:	xor	rcx, qword ptr fs:[0x28]
0x4b26:	jne	0x4b32


0x4b28:	add	rsp, 0xb8
0x4b2f:	pop	rbx
0x4b30:	pop	rbp
0x4b31:	ret	


0x4b32:	call	0x1690


0x2cf0:	jmp	0x2c6e


0x2c6e:	add	rbx, 1
0x2c72:	movzx	esi, byte ptr [rbx]
0x2c75:	test	sil, sil
0x2c78:	je	0x2cae


0x2cca:	jmp	0x2c6e


0x72bf:	test	rax, rax
0x72c2:	je	0x72c9


0x72c4:	add	rsp, 8
0x72c8:	ret	


0x2bea:	mov	rcx, qword ptr [rax]
0x2bed:	mov	rax, rbx
0x2bf0:	jmp	0x2c05


0x2c05:	movzx	edx, byte ptr [rax]
0x2c08:	test	byte ptr [rcx + rdx*2 + 1], 0x10
0x2c0d:	jne	0x2bf8


0x2c0f:	add	rsp, 8
0x2c13:	xor	eax, eax
0x2c15:	pop	rbx
0x2c16:	pop	rbp
0x2c17:	ret	


0x2bf8:	add	rax, 1
0x2bfc:	mov	edx, eax
0x2bfe:	sub	edx, ebx
0x2c00:	cmp	rdx, rbp
0x2c03:	jae	0x2c23


0x2c23:	cmp	byte ptr [rax], 0
0x2c26:	sete	al
0x2c29:	add	rsp, 8
0x2c2d:	pop	rbx
0x2c2e:	pop	rbp
0x2c2f:	ret	


0x4944:	mov	esi, dword ptr [r13 + 0x1c]
0x4948:	add	esi, r14d
0x494b:	cmp	esi, 0x40
0x494e:	mov	dword ptr [r13 + 0x1c], esi
0x4952:	ja	0x49b0


0x4954:	add	rbx, r14
0x4957:	sub	r12, r14
0x495a:	jmp	0x47f2


0x49b0:	and	esi, 0xffffffc0
0x49b3:	mov	rdx, r13
0x49b6:	mov	rdi, r15
0x49b9:	call	0x3430


0x49be:	mov	ecx, dword ptr [r13 + 0x1c]
0x49c2:	lea	rax, [rbp + r14]
0x49c7:	and	rax, 0xffffffffffffffc0
0x49cb:	mov	edx, ecx
0x49cd:	add	rax, r15
0x49d0:	and	edx, 0x3f
0x49d3:	cmp	edx, 8
0x49d6:	mov	dword ptr [r13 + 0x1c], edx
0x49da:	jae	0x4a10


0x49dc:	test	cl, 4
0x49df:	jne	0x4a5f


0x4a10:	mov	rcx, qword ptr [rax]
0x4a13:	mov	qword ptr [r13 + 0x20], rcx
0x4a17:	mov	ecx, edx
0x4a19:	mov	rsi, qword ptr [rax + rcx - 8]
0x4a1e:	mov	qword ptr [r15 + rcx - 8], rsi
0x4a23:	lea	rcx, [r13 + 0x28]
0x4a27:	and	rcx, 0xfffffffffffffff8
0x4a2b:	sub	r15, rcx
0x4a2e:	sub	rax, r15
0x4a31:	add	r15d, edx
0x4a34:	and	r15d, 0xfffffff8
0x4a38:	cmp	r15d, 8
0x4a3c:	jb	0x4954


0x49e1:	test	edx, edx
0x49e3:	je	0x4954


0x4a5f:	mov	ecx, dword ptr [rax]
0x4a61:	mov	dword ptr [r13 + 0x20], ecx
0x4a65:	mov	eax, dword ptr [rax + rdx - 4]
0x4a69:	mov	dword ptr [r15 + rdx - 4], eax
0x4a6e:	jmp	0x4954


0x4a42:	and	r15d, 0xfffffff8
0x4a46:	xor	edx, edx
0x4a48:	mov	esi, edx
0x4a4a:	add	edx, 8
0x4a4d:	mov	rdi, qword ptr [rax + rsi]
0x4a51:	cmp	edx, r15d
0x4a54:	mov	qword ptr [rcx + rsi], rdi
0x4a58:	jb	0x4a48


0x49e9:	movzx	esi, byte ptr [rax]
0x49ec:	and	ecx, 2
0x49ef:	mov	byte ptr [r13 + 0x20], sil
0x49f3:	je	0x4954


0x4a48:	mov	esi, edx
0x4a4a:	add	edx, 8
0x4a4d:	mov	rdi, qword ptr [rax + rsi]
0x4a51:	cmp	edx, r15d
0x4a54:	mov	qword ptr [rcx + rsi], rdi
0x4a58:	jb	0x4a48


0x4a5a:	jmp	0x4954


0x49f9:	movzx	eax, word ptr [rax + rdx - 2]
0x49fe:	mov	word ptr [r15 + rdx - 2], ax
0x4a04:	jmp	0x4954


0x4d83:	test	rax, rax
0x4d86:	je	0x4ddd


0x4ddd:	mov	qword ptr [rip + 0x20633c], rbx
0x4de4:	mov	qword ptr [rip + 0x2062d5], rbx
0x4deb:	pop	rbx
0x4dec:	ret	


0x4d88:	lea	r8, [rax + 1]
0x4d8c:	mov	rdx, r8
0x4d8f:	sub	rdx, rbx
0x4d92:	cmp	rdx, 6
0x4d96:	jle	0x4ddd


0x4d98:	lea	rsi, [rax - 6]
0x4d9c:	lea	rdi, [rip + 0x3815]
0x4da3:	mov	ecx, 7
0x4da8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4da8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4daa:	seta	dl
0x4dad:	sbb	dl, 0
0x4db0:	test	dl, dl
0x4db2:	jne	0x4ddd


0x4db4:	lea	rdi, [rip + 0x3805]
0x4dbb:	mov	ecx, 3
0x4dc0:	mov	rsi, r8
0x4dc3:	mov	rbx, r8
0x4dc6:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4dc6:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4dc8:	seta	dl
0x4dcb:	sbb	dl, 0
0x4dce:	test	dl, dl
0x4dd0:	jne	0x4ddd


0x4dd2:	lea	rbx, [rax + 4]
0x4dd6:	mov	qword ptr [rip + 0x2062c3], rbx
0x4ddd:	mov	qword ptr [rip + 0x20633c], rbx
0x4de4:	mov	qword ptr [rip + 0x2062d5], rbx
0x4deb:	pop	rbx
0x4dec:	ret	


0x4e0a:	call	0x15c0


0x65fd:	mov	qword ptr [rip + 0x204a7c], rbx
0x6604:	pop	rbx
0x6605:	mov	dword ptr [rip + 0x204a69], 1
0x660f:	pop	rbp
0x6610:	pop	r12
0x6612:	ret	


0x65d7:	mov	qword ptr [rip + 0x204aae], 0x100
0x65e2:	mov	qword ptr [rip + 0x204aaf], rbx
0x65e9:	lea	rbx, [rip + 0x204aa0]
0x65f0:	cmp	r12, rbx
0x65f3:	je	0x6604


0x715d:	xor	eax, eax
0x715f:	pop	rbx
0x7160:	ret	


0x65bc:	cmp	rbx, rbp
0x65bf:	jne	0x65b0


0x65b0:	mov	rdi, qword ptr [rbx]
0x65b3:	add	rbx, 0x10
0x65b7:	call	0x15b0


0x6aec:	lea	rsi, [rip + 0x1fc8]
0x6af3:	xor	edi, edi
0x6af5:	mov	edx, 5
0x6afa:	call	0x1660


0x6c01:	jmp	0x6aec


0x7146:	test	rax, rax
0x7149:	jne	0x7150


0x714b:	test	rbx, rbx
0x714e:	jne	0x7161


0x7150:	pop	rbx
0x7151:	ret	


0x7161:	call	0x7320


0x7525:	mov	ebx, eax
0x7527:	jmp	0x74c0


0x74c0:	mov	rcx, qword ptr [rsp + 0x18]
0x74c5:	xor	rcx, qword ptr fs:[0x28]
0x74ce:	mov	eax, ebx
0x74d0:	jne	0x762d


0x74d6:	add	rsp, 0x50
0x74da:	pop	rbx
0x74db:	pop	rbp
0x74dc:	pop	r12
0x74de:	ret	


0x762d:	call	0x1690


0x74b9:	mov	ebx, eax
0x74bb:	nop	dword ptr [rax + rax]
0x74c0:	mov	rcx, qword ptr [rsp + 0x18]
0x74c5:	xor	rcx, qword ptr fs:[0x28]
0x74ce:	mov	eax, ebx
0x74d0:	jne	0x762d


0x757c:	mov	ebx, eax
0x757e:	jmp	0x74c0


0x7465:	test	eax, eax
0x7467:	mov	ebx, eax
0x7469:	js	0x75f8


0x75f8:	call	0x15d0


0x746f:	mov	dword ptr [rip + 0x203dff], 1
0x7479:	jmp	0x74c0


0x758c:	test	eax, eax
0x758e:	mov	ebx, eax
0x7590:	js	0x74c0


0x7596:	cmp	dword ptr [rip + 0x203cdb], -1
0x759d:	jne	0x74c0


0x75a3:	xor	eax, eax
0x75a5:	mov	esi, 1
0x75aa:	mov	edi, ebx
0x75ac:	call	0x1610


0x75b1:	test	eax, eax
0x75b3:	js	0x75d1


0x75d1:	call	0x15d0


0x75b5:	or	eax, 1
0x75b8:	mov	esi, 2
0x75bd:	mov	edi, ebx
0x75bf:	mov	edx, eax
0x75c1:	xor	eax, eax
0x75c3:	call	0x1610


0x75c8:	cmp	eax, -1
0x75cb:	jne	0x74c0


0x7643:	mov	ebx, eax
0x7645:	jmp	0x74c0


0x766e:	test	eax, eax
0x7670:	je	0x767a


0x7672:	test	dword ptr [rbx], 0x100
0x7678:	jne	0x7688


0x7688:	mov	rdi, rbx
0x768b:	mov	edx, 1
0x7690:	xor	esi, esi
0x7692:	call	0x76a0


0x1937:	lea	rsi, [rip + 0x71c3]
0x193e:	mov	edi, 6
0x1943:	call	0x1800


0x4cdc:	test	rax, rax
0x4cdf:	mov	rbx, rax
0x4ce2:	je	0x4cf1


0x4cf1:	mov	rax, rbx
0x4cf4:	pop	rbx
0x4cf5:	pop	rbp
0x4cf6:	pop	r12
0x4cf8:	ret	


0x4ce4:	mov	rdi, rax
0x4ce7:	call	0x1780


0x2dd2:	test	rax, rax
0x2dd5:	mov	rbx, rax
0x2dd8:	je	0x2e40


0x2e40:	movzx	r12d, byte ptr [rip + 0x2082aa]
0x2e48:	call	0x15d0


0x2dda:	mov	rdi, rax
0x2ddd:	mov	esi, 2
0x2de2:	call	0x4ca0


0x2de7:	mov	rsi, r12
0x2dea:	mov	rdi, rbx
0x2ded:	call	0x4b40


0x4f71:	cmp	r15d, 0xa
0x4f75:	mov	qword ptr [rsp + 0x58], rax
0x4f7a:	ja	0x612f


0x4f80:	lea	rcx, [rip + 0x36b9]
0x4f87:	mov	edx, r15d
0x4f8a:	movsxd	rax, dword ptr [rcx + rdx*4]
0x4f8e:	add	rax, rcx
0x4f91:	jmp	rax


0x612f:	call	0x15c0


0x2e4d:	mov	rbx, rax
0x2e50:	test	r12b, r12b
0x2e53:	je	0x2e5a


0x2e5a:	mov	rdx, rbp
0x2e5d:	mov	esi, 3
0x2e62:	xor	edi, edi
0x2e64:	call	0x68b0


0x2e55:	cmp	dword ptr [rax], 2
0x2e58:	je	0x2e90


0x2e90:	mov	byte ptr [r13], 1
0x2e95:	jmp	0x2d61


0x2d61:	add	rsp, 8
0x2d65:	mov	eax, r12d
0x2d68:	pop	rbx
0x2d69:	pop	rbp
0x2d6a:	pop	r12
0x2d6c:	pop	r13
0x2d6e:	ret	


0x75d6:	mov	r12d, dword ptr [rax]
0x75d9:	mov	rbp, rax
0x75dc:	mov	edi, ebx
0x75de:	call	0x1710


0x1710:	jmp	qword ptr [rip + 0x2097ba]




0x75fd:	cmp	dword ptr [rax], 0x16
0x7600:	jne	0x746f


0x7606:	xor	esi, esi
0x7608:	xor	eax, eax
0x760a:	mov	edx, r12d
0x760d:	mov	edi, ebp
0x760f:	call	0x1610


0x7614:	test	eax, eax
0x7616:	mov	ebx, eax
0x7618:	js	0x74c0


0x761e:	mov	dword ptr [rip + 0x203c50], 0xffffffff
0x7628:	jmp	0x75a3


0x6161:	mov	r13, rax
0x6164:	mov	eax, dword ptr [rax]
0x6166:	test	r15d, r15d
0x6169:	mov	rbx, qword ptr [rip + 0x204f10]
0x6170:	mov	dword ptr [rsp + 0x18], eax
0x6174:	js	0x62e1


0x62e1:	call	0x15c0


0x617a:	cmp	dword ptr [rip + 0x204ef7], r15d
0x6181:	jg	0x61e5


0x6183:	cmp	r15d, 0x7fffffff
0x618a:	je	0x62e6


0x61e5:	mov	eax, dword ptr [rbp + 4]
0x61e8:	shl	r15, 4
0x61ec:	sub	rsp, 8
0x61f0:	add	rbx, r15
0x61f3:	lea	r15, [rbp + 8]
0x61f7:	mov	r8d, dword ptr [rbp]
0x61fb:	mov	r11, qword ptr [rbx]
0x61fe:	mov	r12, qword ptr [rbx + 8]
0x6202:	mov	rcx, r14
0x6205:	or	eax, 1
0x6208:	mov	dword ptr [rsp + 0x24], eax
0x620c:	push	qword ptr [rbp + 0x30]
0x620f:	mov	r9d, eax
0x6212:	push	qword ptr [rbp + 0x28]
0x6215:	push	r15
0x6217:	mov	rsi, r11
0x621a:	mov	rdx, qword ptr [rsp + 0x28]
0x621f:	mov	rdi, r12
0x6222:	mov	qword ptr [rsp + 0x30], r11
0x6227:	call	0x4f00


0x62e6:	call	0x7320


0x6190:	lea	r12d, [r15 + 1]
0x6194:	lea	rax, [rip + 0x204ef5]
0x619b:	movsxd	rsi, r12d
0x619e:	shl	rsi, 4
0x61a2:	cmp	rbx, rax
0x61a5:	je	0x62c0


0x62c0:	xor	edi, edi
0x62c2:	call	0x7130


0x61ab:	mov	rdi, rbx
0x61ae:	call	0x7130


0x61b3:	mov	rbx, rax
0x61b6:	mov	qword ptr [rip + 0x204ec3], rax
0x61bd:	movsxd	rdi, dword ptr [rip + 0x204eb4]
0x61c4:	mov	edx, r12d
0x61c7:	xor	esi, esi
0x61c9:	sub	edx, edi
0x61cb:	shl	rdi, 4
0x61cf:	movsxd	rdx, edx
0x61d2:	add	rdi, rbx
0x61d5:	shl	rdx, 4
0x61d9:	call	0x1700


0x1700:	jmp	qword ptr [rip + 0x2097c2]




0x62c7:	movdqa	xmm0, xmmword ptr [rip + 0x204dc1]
0x62cf:	mov	rbx, rax
0x62d2:	mov	qword ptr [rip + 0x204da7], rax
0x62d9:	movups	xmmword ptr [rax], xmm0
0x62dc:	jmp	0x61bd


0x61bd:	movsxd	rdi, dword ptr [rip + 0x204eb4]
0x61c4:	mov	edx, r12d
0x61c7:	xor	esi, esi
0x61c9:	sub	edx, edi
0x61cb:	shl	rdi, 4
0x61cf:	movsxd	rdx, edx
0x61d2:	add	rdi, rbx
0x61d5:	shl	rdx, 4
0x61d9:	call	0x1700


0x62fc:	mov	r12d, dword ptr [rax]
0x62ff:	mov	rbp, rax
0x6302:	lea	rax, [rip + 0x204f37]
0x6309:	test	rbx, rbx
0x630c:	mov	esi, 0x38
0x6311:	cmove	rbx, rax
0x6315:	mov	rdi, rbx
0x6318:	call	0x72d0


0x6432:	mov	r12d, dword ptr [rax]
0x6435:	mov	rbp, rax
0x6438:	lea	rax, [rbx + 8]
0x643c:	sub	rsp, 8
0x6440:	mov	r9d, dword ptr [rbx + 4]
0x6444:	push	qword ptr [rbx + 0x30]
0x6447:	mov	r8d, dword ptr [rbx]
0x644a:	push	qword ptr [rbx + 0x28]
0x644d:	mov	rdx, r15
0x6450:	push	rax
0x6451:	mov	rcx, qword ptr [rsp + 0x28]
0x6456:	mov	rsi, r14
0x6459:	mov	rdi, r13
0x645c:	call	0x4f00


0x64af:	test	r12, r12
0x64b2:	mov	r13, rax
0x64b5:	mov	eax, dword ptr [rax]
0x64b7:	sete	bpl
0x64bb:	or	ebp, dword ptr [rbx + 4]
0x64be:	lea	r10, [rbx + 8]
0x64c2:	sub	rsp, 8
0x64c6:	mov	r8d, dword ptr [rbx]
0x64c9:	mov	rcx, r15
0x64cc:	mov	dword ptr [rsp + 0x14], eax
0x64d0:	push	qword ptr [rbx + 0x30]
0x64d3:	mov	rdx, r14
0x64d6:	push	qword ptr [rbx + 0x28]
0x64d9:	push	r10
0x64db:	xor	esi, esi
0x64dd:	mov	r9d, ebp
0x64e0:	xor	edi, edi
0x64e2:	mov	qword ptr [rsp + 0x40], r10
0x64e7:	call	0x4f00


0x4b74:	mov	r12, rax
0x4b77:	mov	eax, 1
0x4b7c:	test	r12, r12
0x4b7f:	je	0x4c13


0x4c13:	mov	rcx, qword ptr [rsp + 0xa8]
0x4c1b:	xor	rcx, qword ptr fs:[0x28]
0x4c24:	jne	0x4c7d


0x4b85:	movabs	rax, 0xefcdab8967452301
0x4b8f:	mov	qword ptr [rsp + 0x18], 0
0x4b98:	mov	r13d, 0x8000
0x4b9e:	mov	qword ptr [rsp], rax
0x4ba2:	movabs	rax, 0x1032547698badcfe
0x4bac:	mov	r15, rsp
0x4baf:	mov	qword ptr [rsp + 8], rax
0x4bb4:	mov	eax, 0xc3d2e1f0
0x4bb9:	mov	qword ptr [rsp + 0x10], rax
0x4bbe:	xor	ebx, ebx
0x4bc0:	jmp	0x4bf0


0x4c26:	add	rsp, 0xb8
0x4c2d:	pop	rbx
0x4c2e:	pop	rbp
0x4c2f:	pop	r12
0x4c31:	pop	r13
0x4c33:	pop	r14
0x4c35:	pop	r15
0x4c37:	ret	


0x4c7d:	call	0x1690


0x4bf0:	test	byte ptr [rbp], 0x10
0x4bf4:	je	0x4bc8


0x4bc8:	lea	rdi, [r12 + rbx]
0x4bcc:	mov	rdx, r13
0x4bcf:	mov	rcx, rbp
0x4bd2:	sub	rdx, rbx
0x4bd5:	mov	esi, 1
0x4bda:	call	0x1620


0x4bf6:	test	rbx, rbx
0x4bf9:	mov	rbp, rsp
0x4bfc:	jne	0x4c40


0x1620:	jmp	qword ptr [rip + 0x209832]


0x4bfe:	mov	rsi, r14
0x4c01:	mov	rdi, rbp
0x4c04:	call	0x46b0


0x4c40:	mov	rdx, rbp
0x4c43:	mov	rsi, rbx
0x4c46:	mov	rdi, r12
0x4c49:	call	0x47d0




0x4c4e:	jmp	0x4bfe


0x4c09:	mov	rdi, r12
0x4c0c:	call	0x15b0


0x4c11:	xor	eax, eax
0x4c13:	mov	rcx, qword ptr [rsp + 0xa8]
0x4c1b:	xor	rcx, qword ptr fs:[0x28]
0x4c24:	jne	0x4c7d


0x2df2:	test	eax, eax
0x2df4:	jne	0x2d70


0x2dfa:	mov	rdi, rbx
0x2dfd:	call	0x7360


0x2d70:	mov	rdx, rbp
0x2d73:	xor	edi, edi
0x2d75:	mov	esi, 3
0x2d7a:	call	0x68b0


0x2d57:	test	eax, eax
0x2d59:	jne	0x2d70


0x2d5b:	mov	r12d, 1
0x2d61:	add	rsp, 8
0x2d65:	mov	eax, r12d
0x2d68:	pop	rbx
0x2d69:	pop	rbp
0x2d6a:	pop	r12
0x2d6c:	pop	r13
0x2d6e:	ret	


0x70d9:	test	rax, rax
0x70dc:	jne	0x70e3


0x70de:	test	rbx, rbx
0x70e1:	jne	0x70e5


0x70e3:	pop	rbx
0x70e4:	ret	


0x70e5:	call	0x7320


0x7289:	mov	rdx, rbx
0x728c:	xor	esi, esi
0x728e:	mov	rdi, rax
0x7291:	pop	rbx
0x7292:	jmp	0x1700


0x72e4:	add	rsp, 8
0x72e8:	mov	rdx, rbx
0x72eb:	mov	rsi, rbp
0x72ee:	pop	rbx
0x72ef:	pop	rbp
0x72f0:	mov	rdi, rax
0x72f3:	jmp	0x1770


0x7309:	mov	rdi, rbx
0x730c:	lea	rsi, [rax + 1]
0x7310:	pop	rbx
0x7311:	jmp	0x72d0


0x6aff:	lea	rdx, [rip + 0x22da]
0x6b06:	mov	rcx, rax
0x6b09:	mov	r8d, 0x7e3
0x6b0f:	mov	esi, 1
0x6b14:	mov	rdi, rbp
0x6b17:	xor	eax, eax
0x6b19:	call	0x18a0


0x6b1e:	lea	rsi, [rip + 0x2023]
0x6b25:	xor	edi, edi
0x6b27:	mov	edx, 5
0x6b2c:	call	0x1660


0x6b31:	mov	rsi, rbp
0x6b34:	mov	rdi, rax
0x6b37:	call	0x1740


0x6b3c:	cmp	r12, 9
0x6b40:	ja	0x6e80


0x6b46:	lea	rdx, [rip + 0x225b]
0x6b4d:	movsxd	rax, dword ptr [rdx + r12*4]
0x6b51:	add	rax, rdx
0x6b54:	jmp	rax


0x6e80:	mov	r10, qword ptr [rbx + 0x40]
0x6e84:	mov	r9, qword ptr [rbx + 0x38]
0x6e88:	mov	edx, 5
0x6e8d:	mov	rax, qword ptr [rbx + 0x10]
0x6e91:	mov	r8, qword ptr [rbx + 8]
0x6e95:	lea	rsi, [rip + 0x1e84]
0x6e9c:	mov	r13, qword ptr [rbx + 0x30]
0x6ea0:	mov	r12, qword ptr [rbx + 0x28]
0x6ea4:	mov	r15, qword ptr [rbx + 0x20]
0x6ea8:	mov	r14, qword ptr [rbx + 0x18]
0x6eac:	mov	qword ptr [rsp + 0x18], r10
0x6eb1:	mov	qword ptr [rsp + 0x10], r9
0x6eb6:	mov	qword ptr [rsp], rax
0x6eba:	mov	qword ptr [rsp + 8], r8
0x6ebf:	mov	rbx, qword ptr [rbx]
0x6ec2:	jmp	0x6c52


0x6c52:	xor	edi, edi
0x6c54:	call	0x1660


0x6c59:	mov	r10, qword ptr [rsp + 0x18]
0x6c5e:	push	r10
0x6c60:	jmp	0x6ba4


0x6ba4:	mov	r9, qword ptr [rsp + 0x18]
0x6ba9:	mov	rdx, rax
0x6bac:	mov	rcx, rbx
0x6baf:	mov	esi, 1
0x6bb4:	mov	rdi, rbp
0x6bb7:	xor	eax, eax
0x6bb9:	push	r9
0x6bbb:	push	r13
0x6bbd:	push	r12
0x6bbf:	push	r15
0x6bc1:	push	r14
0x6bc3:	mov	r9, qword ptr [rsp + 0x30]
0x6bc8:	mov	r8, qword ptr [rsp + 0x38]
0x6bcd:	call	0x18a0


0x6bd2:	add	rsp, 0x30
0x6bd6:	add	rsp, 0x28
0x6bda:	pop	rbx
0x6bdb:	pop	rbp
0x6bdc:	pop	r12
0x6bde:	pop	r13
0x6be0:	pop	r14
0x6be2:	pop	r15
0x6be4:	ret	


0x7016:	mov	rax, qword ptr [rsp + 0x78]
0x701b:	xor	rax, qword ptr fs:[0x28]
0x7024:	jne	0x7030


0x7026:	add	rsp, 0xb8
0x702d:	pop	rbx
0x702e:	pop	rbp
0x702f:	ret	


0x7030:	call	0x1690


0x6f40:	mov	rax, qword ptr [rsp + 0x58]
0x6f45:	xor	rax, qword ptr fs:[0x28]
0x6f4e:	jne	0x6f55


0x6f50:	add	rsp, 0x68
0x6f54:	ret	


0x6f55:	call	0x1690


0x2edd:	mov	rdi, qword ptr [rip + 0x2081fc]
0x2ee4:	mov	rdx, rax
0x2ee7:	mov	rcx, rbx
0x2eea:	mov	esi, 1
0x2eef:	xor	eax, eax
0x2ef1:	call	0x18a0


0x2ef6:	mov	edi, ebp
0x2ef8:	call	0x1880


0x1880:	jmp	qword ptr [rip + 0x209702]




0x2f0b:	lea	rcx, [rip + 0x4a60]
0x2f12:	mov	r8d, 0xa0
0x2f18:	mov	rdx, rbx
0x2f1b:	mov	rsi, rax
0x2f1e:	mov	edi, 1
0x2f23:	xor	eax, eax
0x2f25:	call	0x1810


0x1810:	jmp	qword ptr [rip + 0x20973a]




0x7064:	lea	rdx, [rip + 0x1aac]
0x706b:	mov	rsi, rax
0x706e:	mov	edi, 1
0x7073:	xor	eax, eax
0x7075:	call	0x1810


0x7337:	mov	edi, dword ptr [rip + 0x203ce3]
0x733d:	lea	rdx, [rip + 0x11f1]
0x7344:	mov	rcx, rax
0x7347:	xor	esi, esi
0x7349:	xor	eax, eax
0x734b:	call	0x1830


0x1830:	jmp	qword ptr [rip + 0x20972a]




0x4cec:	cmp	eax, 2
0x4cef:	jbe	0x4d00


0x4d00:	mov	edi, eax
0x4d02:	call	0x6aa0


0x76d3:	mov	edx, r12d
0x76d6:	mov	rsi, rbp
0x76d9:	mov	edi, eax
0x76db:	call	0x16f0


0x16f0:	jmp	qword ptr [rip + 0x2097ca]




0x4cad:	mov	ecx, ebx
0x4caf:	xor	edx, edx
0x4cb1:	xor	esi, esi
0x4cb3:	pop	rbx
0x4cb4:	mov	edi, eax
0x4cb6:	jmp	0x1720


0x736c:	test	eax, eax
0x736e:	mov	rdi, rbx
0x7371:	js	0x73c7


0x73c7:	pop	rbx
0x73c8:	pop	rbp
0x73c9:	pop	r12
0x73cb:	jmp	0x1640


0x7373:	call	0x17c0


0x1640:	jmp	qword ptr [rip + 0x209822]




0x7378:	test	eax, eax
0x737a:	jne	0x73a8


0x737c:	mov	rdi, rbx
0x737f:	call	0x7660


0x73a8:	mov	rdi, rbx
0x73ab:	call	0x1780


0x73b0:	xor	esi, esi
0x73b2:	mov	edx, 1
0x73b7:	mov	edi, eax
0x73b9:	call	0x16f0


0x7737:	cmp	rax, -3
0x773b:	mov	rbp, rax
0x773e:	jbe	0x7760


0x7760:	mov	rdx, qword ptr [rsp + 8]
0x7765:	xor	rdx, qword ptr fs:[0x28]
0x776e:	mov	rax, rbp
0x7771:	jne	0x777e


0x7740:	test	r12, r12
0x7743:	je	0x7760


0x7773:	add	rsp, 0x18
0x7777:	pop	rbx
0x7778:	pop	rbp
0x7779:	pop	r12
0x777b:	pop	r13
0x777d:	ret	


0x777e:	call	0x1690


0x7745:	xor	edi, edi
0x7747:	call	0x7810


0x779c:	mov	ebx, dword ptr [rbp]
0x779f:	mov	rdi, rbp
0x77a2:	mov	r12, rax
0x77a5:	call	0x7360


0x1948:	lea	rsi, [rip + 0x60d6]
0x194f:	lea	rdi, [rip + 0x60a6]
0x1956:	call	0x1650


0x1650:	jmp	qword ptr [rip + 0x20981a]




0x781b:	mov	rdx, rax
0x781e:	mov	eax, 1
0x7823:	test	rdx, rdx
0x7826:	je	0x7845


0x7845:	add	rsp, 8
0x7849:	ret	


0x7828:	lea	rdi, [rip + 0x15f1]
0x782f:	mov	ecx, 2
0x7834:	mov	rsi, rdx
0x7837:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x7837:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x7839:	seta	cl
0x783c:	sbb	cl, 0
0x783f:	xor	eax, eax
0x7841:	test	cl, cl
0x7843:	jne	0x7850


0x7850:	lea	rdi, [rip + 0x15cb]
0x7857:	mov	ecx, 6
0x785c:	mov	rsi, rdx
0x785f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x785f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x7861:	seta	al
0x7864:	sbb	al, 0
0x7866:	test	al, al
0x7868:	setne	al
0x786b:	add	rsp, 8
0x786f:	ret	


0x774c:	test	al, al
0x774e:	jne	0x7760


0x7750:	movzx	eax, byte ptr [r13]
0x7755:	mov	ebp, 1
0x775a:	mov	dword ptr [rbx], eax
0x775c:	nop	dword ptr [rax]
0x7760:	mov	rdx, qword ptr [rsp + 8]
0x7765:	xor	rdx, qword ptr fs:[0x28]
0x776e:	mov	rax, rbp
0x7771:	jne	0x777e


0x787e:	test	rax, rax
0x7881:	je	0x78a0


0x78a0:	lea	rax, [rip + 0x1581]
0x78a7:	add	rsp, 8
0x78ab:	ret	


0x7883:	cmp	byte ptr [rax], 0
0x7886:	lea	rdx, [rip + 0x159b]
0x788d:	cmove	rax, rdx
0x7891:	add	rsp, 8
0x7895:	ret	


0x4e20:	movzx	edx, byte ptr [rax]
0x4e23:	and	edx, 0xffffffdf
0x4e26:	cmp	dl, 0x55
0x4e29:	je	0x4ea0


0x4ea0:	movzx	edx, byte ptr [rax + 1]
0x4ea4:	and	edx, 0xffffffdf
0x4ea7:	cmp	dl, 0x54
0x4eaa:	jne	0x4e30


0x4e2b:	cmp	dl, 0x47
0x4e2e:	je	0x4e50


0x4eac:	movzx	edx, byte ptr [rax + 2]
0x4eb0:	and	edx, 0xffffffdf
0x4eb3:	cmp	dl, 0x46
0x4eb6:	jne	0x4e30


0x4e30:	lea	rax, [rip + 0x379c]
0x4e37:	lea	rdx, [rip + 0x3797]
0x4e3e:	cmp	ebx, 9
0x4e41:	cmovne	rax, rdx
0x4e45:	add	rsp, 8
0x4e49:	pop	rbx
0x4e4a:	pop	rbp
0x4e4b:	ret	


0x4e50:	movzx	edx, byte ptr [rax + 1]
0x4e54:	and	edx, 0xffffffdf
0x4e57:	cmp	dl, 0x42
0x4e5a:	jne	0x4e30


0x4ebc:	cmp	byte ptr [rax + 3], 0x2d
0x4ec0:	jne	0x4e30


0x4e5c:	cmp	byte ptr [rax + 2], 0x31
0x4e60:	jne	0x4e30


0x4ec6:	cmp	byte ptr [rax + 4], 0x38
0x4eca:	jne	0x4e30


0x4e62:	cmp	byte ptr [rax + 3], 0x38
0x4e66:	jne	0x4e30


0x4ed0:	cmp	byte ptr [rax + 5], 0
0x4ed4:	jne	0x4e30


0x4e68:	cmp	byte ptr [rax + 4], 0x30
0x4e6c:	jne	0x4e30


0x4eda:	cmp	byte ptr [rbp], 0x60
0x4ede:	lea	rax, [rip + 0x36df]
0x4ee5:	lea	rdx, [rip + 0x36dc]
0x4eec:	cmovne	rax, rdx
0x4ef0:	add	rsp, 8
0x4ef4:	pop	rbx
0x4ef5:	pop	rbp
0x4ef6:	ret	


0x4e6e:	cmp	byte ptr [rax + 5], 0x33
0x4e72:	jne	0x4e30


0x4e74:	cmp	byte ptr [rax + 6], 0x30
0x4e78:	jne	0x4e30


0x4e7a:	cmp	byte ptr [rax + 7], 0
0x4e7e:	jne	0x4e30


0x4e80:	cmp	byte ptr [rbp], 0x60
0x4e84:	lea	rax, [rip + 0x3741]
0x4e8b:	lea	rdx, [rip + 0x373e]
0x4e92:	cmovne	rax, rdx
0x4e96:	add	rsp, 8
0x4e9a:	pop	rbx
0x4e9b:	pop	rbp
0x4e9c:	ret	


0x195b:	lea	rdi, [rip + 0x609a]
0x1962:	call	0x1630


0x1630:	jmp	qword ptr [rip + 0x20982a]




0x73be:	cmp	rax, -1
0x73c2:	jne	0x737c


0x73c4:	mov	rdi, rbx
0x73c7:	pop	rbx
0x73c8:	pop	rbp
0x73c9:	pop	r12
0x73cb:	jmp	0x1640


0x76e0:	cmp	rax, -1
0x76e4:	je	0x76f2


0x76f2:	pop	rbx
0x76f3:	pop	rbp
0x76f4:	pop	r12
0x76f6:	ret	


0x76e6:	and	dword ptr [rbx], 0xffffffef
0x76e9:	mov	qword ptr [rbx + 0x90], rax
0x76f0:	xor	eax, eax
0x76f2:	pop	rbx
0x76f3:	pop	rbp
0x76f4:	pop	r12
0x76f6:	ret	


0x4d07:	test	eax, eax
0x4d09:	mov	r12d, eax
0x4d0c:	js	0x4d48


0x4d48:	call	0x15d0


0x4d0e:	mov	rdi, rbx
0x4d11:	call	0x7360


0x4d4d:	mov	r12d, dword ptr [rax]
0x4d50:	mov	rbp, rax
0x4d53:	mov	rdi, rbx
0x4d56:	call	0x7360


0x7350:	call	0x15c0


0x707a:	lea	rsi, [rip + 0x1aac]
0x7081:	mov	edx, 5
0x7086:	xor	edi, edi
0x7088:	call	0x1660


0x708d:	lea	rcx, [rip + 0x100c]
0x7094:	lea	rdx, [rip + 0x95d]
0x709b:	mov	rsi, rax
0x709e:	mov	edi, 1
0x70a3:	xor	eax, eax
0x70a5:	call	0x1810


0x70aa:	mov	rbx, qword ptr [rip + 0x203ff7]
0x70b1:	lea	rsi, [rip + 0x1ca8]
0x70b8:	xor	edi, edi
0x70ba:	mov	edx, 5
0x70bf:	call	0x1660


0x70c4:	mov	rsi, rbx
0x70c7:	mov	rdi, rax
0x70ca:	pop	rbx
0x70cb:	jmp	0x1740


0x2f2a:	mov	rbx, qword ptr [rip + 0x208177]
0x2f31:	lea	rsi, [rip + 0x4c78]
0x2f38:	mov	edx, 5
0x2f3d:	xor	edi, edi
0x2f3f:	call	0x1660


0x2f44:	mov	rsi, rbx
0x2f47:	mov	rdi, rax
0x2f4a:	call	0x1740


0x2f4f:	mov	rbx, qword ptr [rip + 0x208152]
0x2f56:	lea	rsi, [rip + 0x4c8b]
0x2f5d:	mov	edx, 5
0x2f62:	xor	edi, edi
0x2f64:	call	0x1660


0x2f69:	mov	rsi, rbx
0x2f6c:	mov	rdi, rax
0x2f6f:	call	0x1740


0x2f74:	lea	rsi, [rip + 0x4c9d]
0x2f7b:	xor	edi, edi
0x2f7d:	mov	edx, 5
0x2f82:	call	0x1660


0x2f87:	lea	rdx, [rip + 0x49e4]
0x2f8e:	mov	rsi, rax
0x2f91:	mov	edi, 1
0x2f96:	xor	eax, eax
0x2f98:	call	0x1810


0x2f9d:	mov	rbx, qword ptr [rip + 0x208104]
0x2fa4:	lea	rsi, [rip + 0x4cb5]
0x2fab:	mov	edx, 5
0x2fb0:	xor	edi, edi
0x2fb2:	call	0x1660


0x2fb7:	mov	rsi, rbx
0x2fba:	mov	rdi, rax
0x2fbd:	call	0x1740


0x2fc2:	mov	rbx, qword ptr [rip + 0x2080df]
0x2fc9:	lea	rsi, [rip + 0x4cc8]
0x2fd0:	mov	edx, 5
0x2fd5:	xor	edi, edi
0x2fd7:	call	0x1660


0x2fdc:	mov	rsi, rbx
0x2fdf:	mov	rdi, rax
0x2fe2:	call	0x1740


0x2fe7:	mov	rbx, qword ptr [rip + 0x2080ba]
0x2fee:	lea	rsi, [rip + 0x4cdb]
0x2ff5:	mov	edx, 5
0x2ffa:	xor	edi, edi
0x2ffc:	call	0x1660


0x3001:	mov	rsi, rbx
0x3004:	mov	rdi, rax
0x3007:	call	0x1740


0x300c:	mov	rbx, qword ptr [rip + 0x208095]
0x3013:	lea	rsi, [rip + 0x4d36]
0x301a:	mov	edx, 5
0x301f:	xor	edi, edi
0x3021:	call	0x1660


0x3026:	mov	rsi, rbx
0x3029:	mov	rdi, rax
0x302c:	call	0x1740


0x3031:	mov	rbx, qword ptr [rip + 0x208070]
0x3038:	lea	rsi, [rip + 0x4ec9]
0x303f:	mov	edx, 5
0x3044:	xor	edi, edi
0x3046:	call	0x1660


0x304b:	mov	rsi, rbx
0x304e:	mov	rdi, rax
0x3051:	call	0x1740


0x3056:	mov	rbx, qword ptr [rip + 0x20804b]
0x305d:	lea	rsi, [rip + 0x4ed4]
0x3064:	mov	edx, 5
0x3069:	xor	edi, edi
0x306b:	call	0x1660


0x3070:	mov	rsi, rbx
0x3073:	mov	rdi, rax
0x3076:	lea	rbx, [rip + 0x48ed]
0x307d:	call	0x1740


0x3082:	lea	rsi, [rip + 0x4ee7]
0x3089:	xor	edi, edi
0x308b:	mov	edx, 5
0x3090:	call	0x1660


0x3095:	lea	rdx, [rip + 0x48db]
0x309c:	mov	rsi, rax
0x309f:	mov	edi, 1
0x30a4:	xor	eax, eax
0x30a6:	call	0x1810


0x30ab:	lea	rax, [rip + 0x48d0]
0x30b2:	lea	rcx, [rip + 0x490a]
0x30b9:	mov	qword ptr [rsp + 0x60], 0
0x30c2:	mov	qword ptr [rsp + 0x68], 0
0x30cb:	mov	rdx, rsp
0x30ce:	mov	qword ptr [rsp], rax
0x30d2:	lea	rax, [rip + 0x48ab]
0x30d9:	mov	qword ptr [rsp + 0x30], rcx
0x30de:	lea	rcx, [rip + 0x48e8]
0x30e5:	mov	qword ptr [rsp + 8], rax
0x30ea:	lea	rax, [rip + 0x490b]
0x30f1:	mov	qword ptr [rsp + 0x40], rcx
0x30f6:	lea	rcx, [rip + 0x48da]
0x30fd:	mov	qword ptr [rsp + 0x10], rax
0x3102:	lea	rax, [rip + 0x488b]
0x3109:	mov	qword ptr [rsp + 0x50], rcx
0x310e:	mov	qword ptr [rsp + 0x18], rax
0x3113:	lea	rax, [rip + 0x4890]
0x311a:	mov	qword ptr [rsp + 0x20], rax
0x311f:	lea	rax, [rip + 0x488e]
0x3126:	mov	qword ptr [rsp + 0x28], rax
0x312b:	mov	qword ptr [rsp + 0x38], rax
0x3130:	mov	qword ptr [rsp + 0x48], rax
0x3135:	mov	qword ptr [rsp + 0x58], rax
0x313a:	nop	word ptr [rax + rax]
0x3140:	add	rdx, 0x10
0x3144:	mov	rdi, qword ptr [rdx]
0x3147:	test	rdi, rdi
0x314a:	je	0x315f


0x315f:	mov	r12, qword ptr [rdx + 8]
0x3163:	xor	edi, edi
0x3165:	mov	edx, 5
0x316a:	lea	rsi, [rip + 0x4870]
0x3171:	test	r12, r12
0x3174:	je	0x323b


0x314c:	mov	ecx, 8
0x3151:	mov	rsi, rbx
0x3154:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x323b:	call	0x1660


0x317a:	call	0x1660


0x3154:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3156:	seta	al
0x3159:	sbb	al, 0
0x315b:	test	al, al
0x315d:	jne	0x3140


0x3140:	add	rdx, 0x10
0x3144:	mov	rdi, qword ptr [rdx]
0x3147:	test	rdi, rdi
0x314a:	je	0x315f


0x317f:	lea	rcx, [rip + 0x4f1a]
0x3186:	lea	rdx, [rip + 0x486b]
0x318d:	mov	rsi, rax
0x3190:	mov	edi, 1
0x3195:	xor	eax, eax
0x3197:	call	0x1810


0x319c:	xor	esi, esi
0x319e:	mov	edi, 5
0x31a3:	call	0x1800


0x31a8:	test	rax, rax
0x31ab:	je	0x31c9


0x31c9:	lea	rsi, [rip + 0x483a]
0x31d0:	xor	edi, edi
0x31d2:	mov	edx, 5
0x31d7:	call	0x1660


0x31ad:	lea	rsi, [rip + 0x4852]
0x31b4:	mov	edx, 3
0x31b9:	mov	rdi, rax
0x31bc:	call	0x15e0


0x15e0:	jmp	qword ptr [rip + 0x209852]




0x31dc:	lea	rcx, [rip + 0x4787]
0x31e3:	lea	rdx, [rip + 0x4eb6]
0x31ea:	mov	rsi, rax
0x31ed:	mov	edi, 1
0x31f2:	xor	eax, eax
0x31f4:	call	0x1810


0x31f9:	cmp	r12, rbx
0x31fc:	lea	rcx, [rip + 0x479b]
0x3203:	lea	rbx, [rip + 0x58f7]
0x320a:	cmove	rbx, rcx
0x320e:	lea	rsi, [rip + 0x4efb]
0x3215:	xor	edi, edi
0x3217:	mov	edx, 5
0x321c:	call	0x1660


0x3221:	mov	rcx, rbx
0x3224:	mov	rsi, rax
0x3227:	mov	rdx, r12
0x322a:	mov	edi, 1
0x322f:	xor	eax, eax
0x3231:	call	0x1810


0x3236:	jmp	0x2ef6


0x3240:	lea	rcx, [rip + 0x4e59]
0x3247:	lea	rdx, [rip + 0x47aa]
0x324e:	mov	rsi, rax
0x3251:	mov	edi, 1
0x3256:	xor	eax, eax
0x3258:	call	0x1810


0x325d:	xor	esi, esi
0x325f:	mov	edi, 5
0x3264:	call	0x1800


0x3269:	test	rax, rax
0x326c:	je	0x3286


0x3286:	lea	rsi, [rip + 0x477d]
0x328d:	mov	edx, 5
0x3292:	xor	edi, edi
0x3294:	lea	r12, [rip + 0x46cf]
0x329b:	lea	rbx, [rip + 0x46fc]
0x32a2:	call	0x1660


0x326e:	lea	rsi, [rip + 0x4791]
0x3275:	mov	edx, 3
0x327a:	mov	rdi, rax
0x327d:	call	0x15e0


0x32a7:	lea	rcx, [rip + 0x46bc]
0x32ae:	lea	rdx, [rip + 0x4deb]
0x32b5:	mov	rsi, rax
0x32b8:	mov	edi, 1
0x32bd:	xor	eax, eax
0x32bf:	call	0x1810


0x32c4:	jmp	0x320e


0x320e:	lea	rsi, [rip + 0x4efb]
0x3215:	xor	edi, edi
0x3217:	mov	edx, 5
0x321c:	call	0x1660


0x4bdf:	add	rbx, rax
0x4be2:	cmp	rbx, 0x8000
0x4be9:	je	0x4c50


0x4c50:	mov	rdx, r15
0x4c53:	mov	esi, 0x8000
0x4c58:	mov	rdi, r12
0x4c5b:	call	0x3430


0x4beb:	test	rax, rax
0x4bee:	je	0x4c68


0x4c68:	test	byte ptr [rbp], 0x20
0x4c6c:	je	0x4bf6


0x4c6e:	mov	rdi, r12
0x4c71:	call	0x15b0


0x4c76:	mov	eax, 1
0x4c7b:	jmp	0x4c13


0x4c60:	jmp	0x4bbe


0x4bbe:	xor	ebx, ebx
0x4bc0:	jmp	0x4bf0


0x631d:	mov	dword ptr [rbp], r12d
0x6321:	pop	rbx
0x6322:	pop	rbp
0x6323:	pop	r12
0x6325:	ret	


0x61de:	mov	dword ptr [rip + 0x204e93], r12d
0x61e5:	mov	eax, dword ptr [rbp + 4]
0x61e8:	shl	r15, 4
0x61ec:	sub	rsp, 8
0x61f0:	add	rbx, r15
0x61f3:	lea	r15, [rbp + 8]
0x61f7:	mov	r8d, dword ptr [rbp]
0x61fb:	mov	r11, qword ptr [rbx]
0x61fe:	mov	r12, qword ptr [rbx + 8]
0x6202:	mov	rcx, r14
0x6205:	or	eax, 1
0x6208:	mov	dword ptr [rsp + 0x24], eax
0x620c:	push	qword ptr [rbp + 0x30]
0x620f:	mov	r9d, eax
0x6212:	push	qword ptr [rbp + 0x28]
0x6215:	push	r15
0x6217:	mov	rsi, r11
0x621a:	mov	rdx, qword ptr [rsp + 0x28]
0x621f:	mov	rdi, r12
0x6222:	mov	qword ptr [rsp + 0x30], r11
0x6227:	call	0x4f00


0x75e3:	mov	ebx, 0xffffffff
0x75e8:	mov	dword ptr [rbp], r12d
0x75ec:	jmp	0x74c0


0x7697:	mov	rdi, rbx
0x769a:	pop	rbx
0x769b:	jmp	0x17a0


0x3282:	test	eax, eax
0x3284:	jne	0x32c9


0x32c9:	lea	r12, [rip + 0x469a]
0x32d0:	mov	r13, qword ptr [rip + 0x207dd1]
0x32d7:	lea	rsi, [rip + 0x4dea]
0x32de:	xor	edi, edi
0x32e0:	mov	edx, 5
0x32e5:	call	0x1660


0x32ea:	mov	rsi, r13
0x32ed:	mov	rdi, rax
0x32f0:	call	0x1740


0x32f5:	jmp	0x31c9


0x31c1:	test	eax, eax
0x31c3:	jne	0x32d0


0x32d0:	mov	r13, qword ptr [rip + 0x207dd1]
0x32d7:	lea	rsi, [rip + 0x4dea]
0x32de:	xor	edi, edi
0x32e0:	mov	edx, 5
0x32e5:	call	0x1660


0x1967:	lea	rdi, [rip + 0x19b2]
0x196e:	call	0x7930


0x1973:	mov	rdi, qword ptr [rip + 0x20972e]
0x197a:	xor	ecx, ecx
0x197c:	mov	edx, 1
0x1981:	xor	esi, esi
0x1983:	call	0x1820


0x1820:	jmp	qword ptr [rip + 0x209732]




0x7384:	test	eax, eax
0x7386:	je	0x73c4


0x7388:	call	0x15d0


0x738d:	mov	r12d, dword ptr [rax]
0x7390:	mov	rdi, rbx
0x7393:	mov	rbp, rax
0x7396:	call	0x1640


0x739b:	test	r12d, r12d
0x739e:	jne	0x73d0


0x73a0:	pop	rbx
0x73a1:	pop	rbp
0x73a2:	pop	r12
0x73a4:	ret	


0x73d0:	mov	dword ptr [rbp], r12d
0x73d4:	mov	eax, 0xffffffff
0x73d9:	jmp	0x73a0


0x4d5b:	xor	ebx, ebx
0x4d5d:	mov	dword ptr [rbp], r12d
0x4d61:	jmp	0x4cf1


0x4d16:	test	eax, eax
0x4d18:	jne	0x4d2d


0x4d1a:	mov	rsi, rbp
0x4d1d:	mov	edi, r12d
0x4d20:	call	0x17f0


0x4d2d:	call	0x15d0


0x17f0:	jmp	qword ptr [rip + 0x20974a]




0x4d32:	mov	ebp, dword ptr [rax]
0x4d34:	mov	rbx, rax
0x4d37:	mov	edi, r12d
0x4d3a:	call	0x1710


0x4d3f:	mov	dword ptr [rbx], ebp
0x4d41:	xor	ebx, ebx
0x4d43:	jmp	0x4cf1


0x77aa:	and	ebx, 0x20
0x77ad:	test	ebx, ebx
0x77af:	jne	0x77c8


0x77b1:	test	eax, eax
0x77b3:	je	0x77bf


0x77c8:	test	eax, eax
0x77ca:	jne	0x77e8


0x77bf:	pop	rbx
0x77c0:	pop	rbp
0x77c1:	pop	r12
0x77c3:	ret	


0x77b5:	test	r12, r12
0x77b8:	mov	eax, 0xffffffff
0x77bd:	je	0x77f8


0x77cc:	call	0x15d0


0x77e8:	pop	rbx
0x77e9:	mov	eax, 0xffffffff
0x77ee:	pop	rbp
0x77ef:	pop	r12
0x77f1:	ret	


0x77f8:	call	0x15d0


0x77fd:	cmp	dword ptr [rax], 9
0x7800:	pop	rbx
0x7801:	pop	rbp
0x7802:	pop	r12
0x7804:	setne	al
0x7807:	movzx	eax, al
0x780a:	neg	eax
0x780c:	ret	


0x77d1:	mov	dword ptr [rax], 0
0x77d7:	mov	eax, 0xffffffff
0x77dc:	pop	rbx
0x77dd:	pop	rbp
0x77de:	pop	r12
0x77e0:	ret	


0x2e02:	test	eax, eax
0x2e04:	je	0x2d5b


0x2e0a:	mov	rdx, rbp
0x2e0d:	mov	esi, 3
0x2e12:	xor	edi, edi
0x2e14:	call	0x68b0


0x3332:	test	eax, eax
0x3334:	je	0x334c


0x334c:	mov	rdi, qword ptr [rip + 0x207d8d]
0x3353:	call	0x7790


0x3336:	call	0x15d0


0x333b:	cmp	byte ptr [rip + 0x207dce], 0
0x3342:	mov	rbx, rax
0x3345:	je	0x3363


0x3363:	lea	rsi, [rip + 0x51bb]
0x336a:	xor	edi, edi
0x336c:	mov	edx, 5
0x3371:	call	0x1660


0x3347:	cmp	dword ptr [rax], 0x20
0x334a:	jne	0x3363


0x3376:	mov	rdi, qword ptr [rip + 0x207d9b]
0x337d:	mov	rbp, rax
0x3380:	test	rdi, rdi
0x3383:	je	0x33ad


0x33ad:	mov	esi, dword ptr [rbx]
0x33af:	lea	rdx, [rip + 0x517f]
0x33b6:	mov	rcx, rax
0x33b9:	xor	edi, edi
0x33bb:	xor	eax, eax
0x33bd:	call	0x1830


0x3385:	call	0x6880


0x33c2:	jmp	0x33a2


0x33a2:	mov	edi, dword ptr [rip + 0x207c78]
0x33a8:	call	0x15f0


0x15f0:	jmp	qword ptr [rip + 0x20984a]




0x3358:	test	eax, eax
0x335a:	jne	0x33a2


0x335c:	add	rsp, 8
0x3360:	pop	rbx
0x3361:	pop	rbp
0x3362:	ret	


0x4d25:	test	rax, rax
0x4d28:	mov	rbx, rax
0x4d2b:	jne	0x4cf1


0x1988:	mov	byte ptr [rsp + 0x78], 0
0x198d:	mov	byte ptr [rsp + 0x2b], 0
0x1992:	nop	word ptr [rax + rax]
0x1998:	lea	rcx, [rip + 0x209081]
0x199f:	lea	rdx, [rip + 0x60c0]
0x19a6:	xor	r8d, r8d
0x19a9:	mov	rsi, rbx
0x19ac:	mov	edi, r12d
0x19af:	call	0x16a0


0x16a0:	jmp	qword ptr [rip + 0x2097f2]




0x19b4:	cmp	eax, -1
0x19b7:	je	0x1b3c


0x1b3c:	test	ebp, ebp
0x1b3e:	mov	qword ptr [rip + 0x2095b7], 0x2a
0x1b49:	mov	qword ptr [rip + 0x2095a4], 0x28
0x1b54:	sete	al
0x1b57:	test	byte ptr [rsp + 0x78], al
0x1b5b:	jne	0x2a1b


0x19bd:	cmp	eax, 0x77
0x19c0:	je	0x1aa0


0x1b61:	cmp	byte ptr [rip + 0x2094a8], 0xa
0x1b68:	je	0x1bda


0x2a1b:	mov	edx, 5
0x2a20:	lea	rsi, [rip + 0x5721]
0x2a27:	jmp	0x1bbb


0x1aa0:	mov	byte ptr [rip + 0x20964d], 0
0x1aa7:	mov	byte ptr [rip + 0x209645], 1
0x1aae:	mov	byte ptr [rip + 0x20963c], 0
0x1ab5:	jmp	0x1998


0x19c6:	jle	0x1a00


0x1bda:	cmp	byte ptr [rsp + 0x2b], 0
0x1bdf:	je	0x1bf4


0x1b6a:	cmp	byte ptr [rsp + 0x2b], 0
0x1b6f:	mov	edx, 5
0x1b74:	lea	rsi, [rip + 0x65f5]
0x1b7b:	jne	0x1bbb


0x1bbb:	xor	edi, edi
0x1bbd:	call	0x1660


0x1998:	lea	rcx, [rip + 0x209081]
0x199f:	lea	rdx, [rip + 0x60c0]
0x19a6:	xor	r8d, r8d
0x19a9:	mov	rsi, rbx
0x19ac:	mov	edi, r12d
0x19af:	call	0x16a0


0x1a00:	cmp	eax, 0x62
0x1a03:	je	0x1b20


0x19c8:	cmp	eax, 0x81
0x19cd:	je	0x1af0


0x1bf4:	test	ebp, ebp
0x1bf6:	js	0x1c0b


0x1be1:	cmp	byte ptr [rsp + 0x78], 0
0x1be6:	mov	edx, 5
0x1beb:	lea	rsi, [rip + 0x65be]
0x1bf2:	jne	0x1bbb


0x1b7d:	cmp	byte ptr [rip + 0x20956e], 0
0x1b84:	jne	0x2a2c


0x1b20:	mov	ebp, 1
0x1b25:	jmp	0x1998


0x1a09:	jle	0x1a50


0x1af0:	mov	byte ptr [rip + 0x2095fd], 1
0x1af7:	mov	byte ptr [rip + 0x2095f5], 0
0x1afe:	mov	byte ptr [rip + 0x2095ec], 0
0x1b05:	jmp	0x1998


0x19d3:	jle	0x1a28


0x1c0b:	cmp	byte ptr [rip + 0x2094e0], 0
0x1c12:	je	0x29e8


0x1bf8:	cmp	byte ptr [rsp + 0x2b], 0
0x1bfd:	mov	edx, 5
0x1c02:	lea	rsi, [rip + 0x65e7]
0x1c09:	jne	0x1bbb


0x1b8a:	cmp	byte ptr [rip + 0x209563], 0
0x1b91:	jne	0x2a00


0x2a2c:	mov	edx, 5
0x2a31:	lea	rsi, [rip + 0x5808]
0x2a38:	jmp	0x1bbb


0x1a50:	cmp	eax, 0xffffff7d
0x1a55:	jne	0x29d1


0x1a0b:	cmp	eax, 0x63
0x1a0e:	je	0x1b10


0x1a28:	cmp	eax, 0x7a
0x1a2b:	je	0x1b30


0x19d5:	cmp	eax, 0x83
0x19da:	je	0x1ae0


0x29e8:	cmp	byte ptr [rip + 0x208705], 0
0x29ef:	je	0x1b97


0x1c18:	cmp	byte ptr [rsp + 0x2b], 0
0x1c1d:	je	0x2a2c


0x1b97:	cmp	byte ptr [rip + 0x209555], 0
0x1b9e:	je	0x1ea5


0x2a00:	mov	edx, 5
0x2a05:	lea	rsi, [rip + 0x587c]
0x2a0c:	jmp	0x1bbb


0x1a5b:	lea	rax, [rip + 0x5ff7]
0x1a62:	mov	rdi, qword ptr [rip + 0x20963f]
0x1a69:	mov	rcx, qword ptr [rip + 0x2095a8]
0x1a70:	push	0
0x1a72:	lea	r9, [rip + 0x5fc4]
0x1a79:	lea	r8, [rip + 0x5fca]
0x1a80:	push	rax
0x1a81:	lea	rdx, [rip + 0x5f70]
0x1a88:	lea	rsi, [rip + 0x5edb]
0x1a8f:	xor	eax, eax
0x1a91:	call	0x6f70


0x29d1:	cmp	eax, 0xffffff7e
0x29d6:	jne	0x1bd0


0x1b10:	mov	byte ptr [rsp + 0x2b], 1
0x1b15:	jmp	0x1998


0x1a14:	cmp	eax, 0x74
0x1a17:	jne	0x1bd0


0x1b30:	mov	byte ptr [rip + 0x2094d9], 0
0x1b37:	jmp	0x1998


0x1a31:	add	eax, -0x80
0x1a34:	jne	0x1bd0


0x1ae0:	mov	byte ptr [rip + 0x209609], 1
0x1ae7:	jmp	0x1998


0x19e0:	jl	0x1ac0


0x29f5:	cmp	byte ptr [rsp + 0x2b], 0
0x29fa:	jne	0x25ad


0x1c23:	cmp	byte ptr [rip + 0x2094ca], 0
0x1c2a:	je	0x25ad


0x1ea5:	cmp	byte ptr [rip + 0x209245], 1
0x1eac:	jne	0x1ec5


0x1ba4:	cmp	byte ptr [rsp + 0x2b], 0
0x1ba9:	mov	edx, 5
0x1bae:	lea	rsi, [rip + 0x6713]
0x1bb5:	jne	0x1c3d


0x29dc:	xor	edi, edi
0x29de:	call	0x2ea0


0x1bd0:	mov	edi, 1
0x1bd5:	call	0x2ea0


0x1a1d:	xor	ebp, ebp
0x1a1f:	jmp	0x1998


0x1a3a:	mov	byte ptr [rip + 0x2096b1], 1
0x1a41:	jmp	0x1998


0x1ac0:	mov	byte ptr [rip + 0x20962d], 0
0x1ac7:	mov	byte ptr [rip + 0x209625], 0
0x1ace:	mov	byte ptr [rip + 0x20961c], 1
0x1ad5:	jmp	0x1998


0x19e6:	cmp	eax, 0x84
0x19eb:	jne	0x1bd0


0x25ad:	cmp	byte ptr [rip + 0x208b3f], 0
0x25b4:	jne	0x1c3d


0x1c30:	cmp	byte ptr [rip + 0x2094bc], 0
0x1c37:	je	0x1ea5


0x1eae:	cmp	byte ptr [rsp + 0x2b], 0
0x1eb3:	mov	edx, 5
0x1eb8:	lea	rsi, [rip + 0x6449]
0x1ebf:	je	0x1bbb


0x1ec5:	cmp	byte ptr [rip + 0x209224], 0
0x1ecc:	je	0x1c3d


0x1c3d:	cmp	ebp, -1
0x1c40:	jne	0x1c44


0x19f1:	mov	byte ptr [rsp + 0x78], 1
0x19f6:	mov	ebp, 1
0x19fb:	jmp	0x1998


0x25ba:	jmp	0x1ec5


0x1ed2:	cmp	byte ptr [rsp + 0x2b], 0
0x1ed7:	mov	edx, 5
0x1edc:	lea	rsi, [rip + 0x6465]
0x1ee3:	jne	0x1c3d


0x1c42:	xor	ebp, ebp
0x1c44:	movsxd	rax, r12d
0x1c47:	lea	rax, [rbx + rax*8]
0x1c4b:	mov	qword ptr [rsp + 0x48], rax
0x1c50:	movsxd	rax, dword ptr [rip + 0x209461]
0x1c57:	cmp	eax, r12d
0x1c5a:	jne	0x1c75


0x1c44:	movsxd	rax, r12d
0x1c47:	lea	rax, [rbx + rax*8]
0x1c4b:	mov	qword ptr [rsp + 0x48], rax
0x1c50:	movsxd	rax, dword ptr [rip + 0x209461]
0x1c57:	cmp	eax, r12d
0x1c5a:	jne	0x1c75


0x1ee9:	jmp	0x1bbb


0x1c5c:	mov	rdi, qword ptr [rsp + 0x48]
0x1c61:	lea	rsi, [rip + 0x695a]
0x1c68:	add	rdi, 8
0x1c6c:	mov	qword ptr [rdi - 8], rsi
0x1c70:	mov	qword ptr [rsp + 0x48], rdi
0x1c75:	lea	rax, [rbx + rax*8]
0x1c79:	cmp	qword ptr [rsp + 0x48], rax
0x1c7e:	mov	qword ptr [rsp + 0x18], rax
0x1c83:	jbe	0x2934


0x1c75:	lea	rax, [rbx + rax*8]
0x1c79:	cmp	qword ptr [rsp + 0x48], rax
0x1c7e:	mov	qword ptr [rsp + 0x18], rax
0x1c83:	jbe	0x2934


0x2934:	mov	byte ptr [rsp + 0x79], 1
0x2939:	jmp	0x2383


0x1c89:	cmp	ebp, 1
0x1c8c:	lea	r14, [rip + 0x687d]
0x1c93:	mov	byte ptr [rsp + 0x79], 1
0x1c98:	sbb	eax, eax
0x1c9a:	and	eax, 0xfffffff6
0x1c9d:	add	eax, 0x2a
0x1ca0:	mov	dword ptr [rsp + 0x7c], eax
0x1ca4:	mov	byte ptr [rsp + 0x7b], al
0x1ca8:	nop	dword ptr [rax + rax]
0x1cb0:	mov	rax, qword ptr [rsp + 0x18]
0x1cb5:	cmp	byte ptr [rsp + 0x2b], 0
0x1cba:	mov	rsi, qword ptr [rax]
0x1cbd:	mov	qword ptr [rsp + 0x20], rsi
0x1cc2:	je	0x2340


0x2383:	cmp	byte ptr [rip + 0x208d7e], 0
0x238a:	jne	0x2700


0x2340:	lea	rax, [rsp + 0x98]
0x2348:	lea	rbx, [rsp + 0xa0]
0x2350:	mov	rdi, qword ptr [rsp + 0x20]
0x2355:	mov	rdx, rax
0x2358:	mov	rsi, rbx
0x235b:	call	0x2d00


0x1cc8:	lea	rdi, [rip + 0x68f3]
0x1ccf:	mov	ecx, 2
0x1cd4:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2390:	movzx	eax, byte ptr [rsp + 0x79]
0x2395:	xor	eax, 1
0x2398:	mov	rdi, qword ptr [rsp + 0xd8]
0x23a0:	xor	rdi, qword ptr fs:[0x28]
0x23a9:	movzx	eax, al
0x23ac:	jne	0x29e3


0x2700:	mov	rdi, qword ptr [rip + 0x2089a9]
0x2707:	call	0x7360


0x1cd4:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1cd6:	seta	al
0x1cd9:	sbb	al, 0
0x1cdb:	movsx	eax, al
0x1cde:	test	eax, eax
0x1ce0:	mov	dword ptr [rsp + 0x2c], eax
0x1ce4:	jne	0x2415


0x23b2:	add	rsp, 0xe8
0x23b9:	pop	rbx
0x23ba:	pop	rbp
0x23bb:	pop	r12
0x23bd:	pop	r13
0x23bf:	pop	r14
0x23c1:	pop	r15
0x23c3:	ret	


0x29e3:	call	0x1690


0x1cea:	lea	rsi, [rip + 0x5d7b]
0x1cf1:	mov	edx, 5
0x1cf6:	xor	edi, edi
0x1cf8:	mov	byte ptr [rip + 0x209409], 1
0x1cff:	call	0x1660


0x2415:	mov	rdi, qword ptr [rsp + 0x20]
0x241a:	lea	rsi, [rip + 0x5627]
0x2421:	call	0x4cd0


0x2426:	test	rax, rax
0x2429:	mov	r12, rax
0x242c:	jne	0x1d10


0x2432:	mov	rdx, qword ptr [rsp + 0x20]
0x2437:	mov	esi, 3
0x243c:	xor	edi, edi
0x243e:	call	0x68b0


0x1d10:	lea	rax, [rsp + 0x98]
0x1d18:	mov	qword ptr [rsp + 0x90], 0
0x1d24:	mov	qword ptr [rsp + 0x98], 0
0x1d30:	mov	byte ptr [rsp + 0x7a], 0
0x1d35:	mov	byte ptr [rsp + 0x30], 0
0x1d3a:	xor	r13d, r13d
0x1d3d:	mov	qword ptr [rsp + 0x10], rax
0x1d42:	lea	rax, [rsp + 0x90]
0x1d4a:	mov	qword ptr [rsp + 0x58], 0
0x1d53:	mov	qword ptr [rsp + 0x50], 0
0x1d5c:	mov	ebp, 1
0x1d61:	mov	qword ptr [rsp + 8], rax
0x1d66:	lea	rax, [rsp + 0x8f]
0x1d6e:	mov	qword ptr [rsp + 0x40], rax
0x1d73:	lea	rax, [rsp + 0xc0]
0x1d7b:	mov	qword ptr [rsp + 0x38], rax
0x1d80:	mov	rsi, qword ptr [rsp + 0x10]
0x1d85:	mov	rdi, qword ptr [rsp + 8]
0x1d8a:	mov	rcx, r12
0x1d8d:	mov	edx, 0xa
0x1d92:	call	0x1760


0x1760:	jmp	qword ptr [rip + 0x209792]




0x270c:	add	eax, 1
0x270f:	jne	0x2390


0x2715:	lea	rsi, [rip + 0x5350]
0x271c:	mov	edx, 5
0x2721:	xor	edi, edi
0x2723:	call	0x1660


0x2360:	test	al, al
0x2362:	jne	0x2467


0x2368:	mov	byte ptr [rsp + 0x79], 0
0x236d:	add	qword ptr [rsp + 0x18], 8
0x2373:	mov	rax, qword ptr [rsp + 0x18]
0x2378:	cmp	qword ptr [rsp + 0x48], rax
0x237d:	ja	0x1cb0


0x2467:	mov	rdi, qword ptr [rsp + 0x20]
0x246c:	mov	esi, 0x5c
0x2471:	call	0x16c0


0x1cb0:	mov	rax, qword ptr [rsp + 0x18]
0x1cb5:	cmp	byte ptr [rsp + 0x2b], 0
0x1cba:	mov	rsi, qword ptr [rax]
0x1cbd:	mov	qword ptr [rsp + 0x20], rsi
0x1cc2:	je	0x2340


0x16c0:	jmp	qword ptr [rip + 0x2097e2]




0x1a96:	xor	edi, edi
0x1a98:	call	0x1880


0x2728:	mov	rbx, rax
0x272b:	call	0x15d0


0x2730:	mov	esi, dword ptr [rax]
0x2732:	mov	rdx, rbx
0x2735:	mov	edi, 1
0x273a:	xor	eax, eax
0x273c:	call	0x1830


0x2741:	mov	rsi, r15
0x2744:	mov	rdi, rbx
0x2747:	mov	qword ptr [rsp + 0x60], r8
0x274c:	sub	rsi, rax
0x274f:	call	0x2b50


0x2754:	mov	r8, qword ptr [rsp + 0x60]
0x2759:	test	rax, rax
0x275c:	setne	al
0x275f:	test	al, al
0x2761:	jne	0x1fa6


0x2767:	jmp	0x1e44


0x1fa6:	mov	eax, dword ptr [rsp + 0x2c]
0x1faa:	test	eax, eax
0x1fac:	jne	0x1fcc


0x1e44:	add	r13, 1
0x1e48:	cmp	byte ptr [rip + 0x2092a4], 0
0x1e4f:	jne	0x21d0


0x1fae:	lea	rdi, [rip + 0x660d]
0x1fb5:	mov	ecx, 2
0x1fba:	mov	rsi, rbx
0x1fbd:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1fcc:	xor	r15d, r15d
0x1fcf:	cmp	byte ptr [rip + 0x20911e], 0
0x1fd6:	jne	0x1ff9


0x1e55:	test	byte ptr [r12], 0x30
0x1e5a:	jne	0x209c


0x21d0:	mov	rdx, qword ptr [rsp + 0x20]
0x21d5:	xor	edi, edi
0x21d7:	mov	esi, 3
0x21dc:	call	0x68b0


0x1fbd:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1fbf:	seta	al
0x1fc2:	sbb	al, 0
0x1fc4:	test	al, al
0x1fc6:	je	0x1e44


0x1fd8:	mov	esi, 0xa
0x1fdd:	mov	rdi, rbx
0x1fe0:	mov	qword ptr [rsp + 0x30], r8
0x1fe5:	call	0x16c0


0x1ff9:	mov	rdx, qword ptr [rsp + 0x40]
0x1ffe:	mov	rsi, qword ptr [rsp + 0x38]
0x2003:	mov	rdi, rbx
0x2006:	mov	qword ptr [rsp + 0x30], r8
0x200b:	call	0x2d00


0x1e60:	add	rbp, 1
0x1e64:	jne	0x1d80


0x209c:	mov	rdi, qword ptr [rsp + 0x90]
0x20a4:	call	0x15b0


0x1e6a:	mov	rdx, qword ptr [rsp + 0x20]
0x1e6f:	mov	esi, 3
0x1e74:	xor	edi, edi
0x1e76:	call	0x68b0


0x1d80:	mov	rsi, qword ptr [rsp + 0x10]
0x1d85:	mov	rdi, qword ptr [rsp + 8]
0x1d8a:	mov	rcx, r12
0x1d8d:	mov	edx, 0xa
0x1d92:	call	0x1760


0x20a9:	mov	ebx, dword ptr [r12]
0x20ad:	and	ebx, 0x20
0x20b0:	jne	0x256e


0x20b6:	cmp	dword ptr [rsp + 0x2c], 0
0x20bb:	jne	0x2628


0x256e:	mov	rdx, qword ptr [rsp + 0x20]
0x2573:	mov	esi, 3
0x2578:	xor	edi, edi
0x257a:	call	0x68b0


0x20c1:	cmp	byte ptr [rsp + 0x30], 0
0x20c6:	je	0x2645


0x2628:	mov	rdi, r12
0x262b:	call	0x7360


0x2645:	mov	rdx, qword ptr [rsp + 0x20]
0x264a:	xor	edi, edi
0x264c:	mov	esi, 3
0x2651:	call	0x68b0


0x20cc:	cmp	byte ptr [rip + 0x209021], 0
0x20d3:	jne	0x255e


0x20d9:	test	r13, r13
0x20dc:	je	0x210d


0x255e:	cmp	byte ptr [rsp + 0x7a], 0
0x2563:	jne	0x219d


0x210d:	cmp	qword ptr [rsp + 0x50], 0
0x2113:	je	0x2149


0x20de:	lea	rdx, [rip + 0x630b]
0x20e5:	lea	rsi, [rip + 0x6334]
0x20ec:	mov	rcx, r13
0x20ef:	xor	edi, edi
0x20f1:	mov	r8d, 5
0x20f7:	call	0x1860


0x2569:	jmp	0x21be


0x219d:	mov	rax, qword ptr [rsp + 0x50]
0x21a2:	or	rax, qword ptr [rsp + 0x58]
0x21a7:	jne	0x21be


0x2149:	cmp	qword ptr [rsp + 0x58], 0
0x214f:	je	0x2185


0x2115:	mov	r15, qword ptr [rsp + 0x50]
0x211a:	lea	rdx, [rip + 0x632f]
0x2121:	lea	rsi, [rip + 0x6358]
0x2128:	xor	edi, edi
0x212a:	mov	r8d, 5
0x2130:	mov	rcx, r15
0x2133:	call	0x1860


0x1860:	jmp	qword ptr [rip + 0x209712]


0x21be:	mov	eax, ebx
0x21c0:	and	eax, 1
0x21c3:	and	byte ptr [rsp + 0x79], al
0x21c7:	jmp	0x236d


0x21a9:	movzx	eax, byte ptr [rip + 0x208f40]
0x21b0:	xor	eax, 1
0x21b3:	test	r13, r13
0x21b6:	sete	bl
0x21b9:	or	eax, ebx
0x21bb:	movzx	ebx, al
0x21be:	mov	eax, ebx
0x21c0:	and	eax, 1
0x21c3:	and	byte ptr [rsp + 0x79], al
0x21c7:	jmp	0x236d


0x2185:	cmp	byte ptr [rip + 0x208f66], 0
0x218c:	je	0x255e


0x2151:	mov	r15, qword ptr [rsp + 0x58]
0x2156:	lea	rdx, [rip + 0x6353]
0x215d:	lea	rsi, [rip + 0x637c]
0x2164:	xor	edi, edi
0x2166:	mov	r8d, 5
0x216c:	mov	rcx, r15
0x216f:	call	0x1860




0x236d:	add	qword ptr [rsp + 0x18], 8
0x2373:	mov	rax, qword ptr [rsp + 0x18]
0x2378:	cmp	qword ptr [rsp + 0x48], rax
0x237d:	ja	0x1cb0


0x2192:	cmp	byte ptr [rsp + 0x7a], 0
0x2197:	je	0x28f7


0x28f7:	mov	rdx, qword ptr [rsp + 0x20]
0x28fc:	xor	edi, edi
0x28fe:	mov	esi, 3
0x2903:	call	0x68b0


0x2630:	test	eax, eax
0x2632:	je	0x20c1


0x2638:	jmp	0x2432


0x2010:	test	al, al
0x2012:	mov	r9d, eax
0x2015:	mov	r8, qword ptr [rsp + 0x30]
0x201a:	jne	0x2220


0x2020:	add	qword ptr [rsp + 0x50], 1
0x2026:	cmp	byte ptr [rip + 0x2090c7], 0
0x202d:	jne	0x2088


0x2220:	cmp	byte ptr [rip + 0x208ecb], 0
0x2227:	je	0x2237


0x202f:	test	r15d, r15d
0x2032:	je	0x2054


0x2088:	movzx	eax, byte ptr [rsp + 0x2b]
0x208d:	test	byte ptr [r12], 0x30
0x2092:	mov	byte ptr [rsp + 0x30], al
0x2096:	je	0x1e60


0x2237:	mov	rcx, qword ptr [rip + 0x208eba]
0x223e:	mov	qword ptr [rsp + 0x68], r8
0x2243:	shr	rcx, 1
0x2246:	je	0x25bf


0x2229:	cmp	byte ptr [rsp + 0x8f], 0
0x2231:	jne	0x2088


0x2054:	mov	esi, r15d
0x2057:	mov	rdi, rbx
0x205a:	call	0x2c30


0x2034:	mov	rdi, qword ptr [rip + 0x20906d]
0x203b:	mov	rax, qword ptr [rdi + 0x28]
0x203f:	cmp	rax, qword ptr [rdi + 0x30]
0x2043:	jae	0x2964


0x25bf:	xor	edx, edx
0x25c1:	movzx	eax, byte ptr [rip + 0x208b2c]
0x25c8:	test	al, al
0x25ca:	mov	byte ptr [rsp + 0x7a], al
0x25ce:	jne	0x2088


0x224c:	mov	qword ptr [rsp + 0x60], rcx
0x2251:	mov	byte ptr [rsp + 0x30], r9b
0x2256:	call	0x18d0


0x2049:	lea	rdx, [rax + 1]
0x204d:	mov	qword ptr [rdi + 0x28], rdx
0x2051:	mov	byte ptr [rax], 0x5c
0x2054:	mov	esi, r15d
0x2057:	mov	rdi, rbx
0x205a:	call	0x2c30


0x2964:	mov	esi, 0x5c
0x2969:	call	0x16d0


0x25d4:	movzx	eax, byte ptr [rip + 0x208b16]
0x25db:	test	al, al
0x25dd:	mov	byte ptr [rsp + 0x7a], al
0x25e1:	jne	0x2088


0x18d0:	jmp	qword ptr [rip + 0x2096da]


0x25e7:	test	r15d, r15d
0x25ea:	jne	0x2a11




0x25f0:	xor	esi, esi
0x25f2:	mov	rdi, rbx
0x25f5:	mov	byte ptr [rsp + 0x30], r9b
0x25fa:	call	0x2c30


0x2a11:	mov	byte ptr [rsp + 0x7a], r9b
0x2a16:	jmp	0x22e3


0x22e3:	mov	rdi, qword ptr [rip + 0x208dbe]
0x22ea:	mov	rax, qword ptr [rdi + 0x28]
0x22ee:	cmp	rax, qword ptr [rdi + 0x30]
0x22f2:	jae	0x299f


0x22f8:	lea	rsi, [rax + 1]
0x22fc:	mov	qword ptr [rdi + 0x28], rsi
0x2300:	mov	byte ptr [rax], 0x5c
0x2303:	mov	esi, 1
0x2308:	mov	rdi, rbx
0x230b:	mov	qword ptr [rsp + 0x60], rcx
0x2310:	mov	qword ptr [rsp + 0x30], rdx
0x2315:	call	0x2c30


0x299f:	mov	esi, 0x5c
0x29a4:	mov	qword ptr [rsp + 0x60], rcx
0x29a9:	mov	qword ptr [rsp + 0x30], rdx
0x29ae:	call	0x16d0


0x29b3:	mov	rdx, qword ptr [rsp + 0x30]
0x29b8:	mov	rcx, qword ptr [rsp + 0x60]
0x29bd:	jmp	0x2303


0x2303:	mov	esi, 1
0x2308:	mov	rdi, rbx
0x230b:	mov	qword ptr [rsp + 0x60], rcx
0x2310:	mov	qword ptr [rsp + 0x30], rdx
0x2315:	call	0x2c30


0x296e:	jmp	0x2054


0x231a:	mov	rdx, qword ptr [rsp + 0x30]
0x231f:	mov	rcx, qword ptr [rsp + 0x60]
0x2324:	cmp	rdx, rcx
0x2327:	je	0x260a


0x260a:	cmp	byte ptr [rip + 0x208ae0], 0
0x2611:	jne	0x2088


0x232d:	mov	edx, 5
0x2332:	lea	rsi, [rip + 0x5772]
0x2339:	jmp	0x206b


0x2617:	mov	edx, 5
0x261c:	lea	rsi, [rip + 0x548f]
0x2623:	jmp	0x206b


0x206b:	xor	edi, edi
0x206d:	call	0x1660


0x25ff:	movzx	r9d, byte ptr [rsp + 0x30]
0x2605:	mov	byte ptr [rsp + 0x7a], r9b
0x260a:	cmp	byte ptr [rip + 0x208ae0], 0
0x2611:	jne	0x2088


0x205f:	lea	rsi, [rip + 0x5a31]
0x2066:	mov	edx, 5
0x206b:	xor	edi, edi
0x206d:	call	0x1660


0x2072:	lea	rsi, [rip + 0x6a98]
0x2079:	mov	rdx, rax
0x207c:	mov	edi, 1
0x2081:	xor	eax, eax
0x2083:	call	0x1810


0x1d04:	mov	r12, qword ptr [rip + 0x2093a5]
0x1d0b:	mov	qword ptr [rsp + 0x20], rax
0x1d10:	lea	rax, [rsp + 0x98]
0x1d18:	mov	qword ptr [rsp + 0x90], 0
0x1d24:	mov	qword ptr [rsp + 0x98], 0
0x1d30:	mov	byte ptr [rsp + 0x7a], 0
0x1d35:	mov	byte ptr [rsp + 0x30], 0
0x1d3a:	xor	r13d, r13d
0x1d3d:	mov	qword ptr [rsp + 0x10], rax
0x1d42:	lea	rax, [rsp + 0x90]
0x1d4a:	mov	qword ptr [rsp + 0x58], 0
0x1d53:	mov	qword ptr [rsp + 0x50], 0
0x1d5c:	mov	ebp, 1
0x1d61:	mov	qword ptr [rsp + 8], rax
0x1d66:	lea	rax, [rsp + 0x8f]
0x1d6e:	mov	qword ptr [rsp + 0x40], rax
0x1d73:	lea	rax, [rsp + 0xc0]
0x1d7b:	mov	qword ptr [rsp + 0x38], rax
0x1d80:	mov	rsi, qword ptr [rsp + 0x10]
0x1d85:	mov	rdi, qword ptr [rsp + 8]
0x1d8a:	mov	rcx, r12
0x1d8d:	mov	edx, 0xa
0x1d92:	call	0x1760


0x1bc2:	xor	esi, esi
0x1bc4:	mov	rdx, rax
0x1bc7:	xor	edi, edi
0x1bc9:	xor	eax, eax
0x1bcb:	call	0x1830


0x225b:	xor	edx, edx
0x225d:	mov	rdi, qword ptr [rax]
0x2260:	movzx	r9d, byte ptr [rsp + 0x30]
0x2266:	mov	rcx, qword ptr [rsp + 0x60]
0x226b:	mov	r8, qword ptr [rsp + 0x68]
0x2270:	mov	r10, qword ptr [rsp + 0x38]
0x2275:	jmp	0x22a0


0x22a0:	movzx	eax, byte ptr [r10 + rdx]
0x22a5:	movzx	r11d, byte ptr [r8 + rdx*2]
0x22aa:	mov	esi, eax
0x22ac:	shr	sil, 4
0x22b0:	and	esi, 0xf
0x22b3:	movsx	esi, byte ptr [r14 + rsi]
0x22b8:	cmp	dword ptr [rdi + r11*4], esi
0x22bc:	je	0x2280


0x2280:	movzx	esi, byte ptr [r8 + rdx*2 + 1]
0x2286:	and	eax, 0xf
0x2289:	movsx	eax, byte ptr [r14 + rax]
0x228e:	cmp	dword ptr [rdi + rsi*4], eax
0x2291:	jne	0x22be


0x22be:	cmp	rcx, rdx
0x22c1:	je	0x25c1


0x2293:	add	rdx, 1
0x2297:	cmp	rcx, rdx
0x229a:	je	0x263d


0x25c1:	movzx	eax, byte ptr [rip + 0x208b2c]
0x25c8:	test	al, al
0x25ca:	mov	byte ptr [rsp + 0x7a], al
0x25ce:	jne	0x2088


0x22c7:	add	qword ptr [rsp + 0x58], 1
0x22cd:	cmp	byte ptr [rip + 0x208e20], 0
0x22d4:	jne	0x2088


0x263d:	mov	rdx, rcx
0x2640:	jmp	0x25c1


0x22da:	test	r15d, r15d
0x22dd:	je	0x28e8


0x28e8:	xor	esi, esi
0x28ea:	mov	rdi, rbx
0x28ed:	call	0x2c30


0x28f2:	jmp	0x232d


0x2174:	mov	rcx, r15
0x2177:	mov	rdx, rax
0x217a:	xor	esi, esi
0x217c:	xor	edi, edi
0x217e:	xor	eax, eax
0x2180:	call	0x1830


0x2138:	mov	rcx, r15
0x213b:	mov	rdx, rax
0x213e:	xor	esi, esi
0x2140:	xor	edi, edi
0x2142:	xor	eax, eax
0x2144:	call	0x1830


0x20fc:	mov	rcx, r13
0x20ff:	mov	rdx, rax
0x2102:	xor	esi, esi
0x2104:	xor	edi, edi
0x2106:	xor	eax, eax
0x2108:	call	0x1830


0x1fea:	mov	r8, qword ptr [rsp + 0x30]
0x1fef:	xor	r15d, r15d
0x1ff2:	test	rax, rax
0x1ff5:	setne	r15b
0x1ff9:	mov	rdx, qword ptr [rsp + 0x40]
0x1ffe:	mov	rsi, qword ptr [rsp + 0x38]
0x2003:	mov	rdi, rbx
0x2006:	mov	qword ptr [rsp + 0x30], r8
0x200b:	call	0x2d00


0x2476:	test	rax, rax
0x2479:	je	0x2851


0x2851:	mov	rdi, qword ptr [rsp + 0x20]
0x2856:	mov	esi, 0xa
0x285b:	call	0x16c0


0x247f:	cmp	byte ptr [rip + 0x208b8a], 0xa
0x2486:	je	0x276c


0x276c:	cmp	byte ptr [rsp + 0x78], 0
0x2771:	je	0x2817


0x248c:	cmp	byte ptr [rsp + 0x78], 0
0x2491:	jne	0x286e


0x2817:	mov	rdi, qword ptr [rip + 0x20888a]
0x281e:	mov	rax, qword ptr [rdi + 0x28]
0x2822:	cmp	rax, qword ptr [rdi + 0x30]
0x2826:	jae	0x2973


0x2777:	mov	rdi, qword ptr [rip + 0x20892a]
0x277e:	mov	rax, qword ptr [rdi + 0x28]
0x2782:	cmp	rax, qword ptr [rdi + 0x30]
0x2786:	jae	0x29c2


0x2497:	mov	rax, qword ptr [rip + 0x208c5a]
0x249e:	xor	ebp, ebp
0x24a0:	shr	rax, 1
0x24a3:	je	0x24e2


0x286e:	mov	rcx, qword ptr [rip + 0x208833]
0x2875:	lea	rdi, [rip + 0x50f6]
0x287c:	mov	edx, 4
0x2881:	mov	esi, 1
0x2886:	xor	ebp, ebp
0x2888:	call	0x17d0


0x282c:	lea	rdx, [rax + 1]
0x2830:	mov	ebp, 1
0x2835:	mov	qword ptr [rdi + 0x28], rdx
0x2839:	mov	byte ptr [rax], 0x5c
0x283c:	mov	rax, qword ptr [rip + 0x2088b5]
0x2843:	shr	rax, 1
0x2846:	jne	0x24a5


0x2973:	mov	esi, 0x5c
0x2978:	call	0x16d0


0x278c:	lea	rdx, [rax + 1]
0x2790:	mov	qword ptr [rdi + 0x28], rdx
0x2794:	mov	byte ptr [rax], 0x5c
0x2797:	mov	rcx, qword ptr [rip + 0x20890a]
0x279e:	lea	rdi, [rip + 0x51cd]
0x27a5:	mov	edx, 4
0x27aa:	mov	esi, 1
0x27af:	call	0x17d0


0x29c2:	mov	esi, 0x5c
0x29c7:	call	0x16d0


0x24e2:	mov	rdi, qword ptr [rip + 0x208bbf]
0x24e9:	mov	rax, qword ptr [rdi + 0x28]
0x24ed:	cmp	qword ptr [rdi + 0x30], rax
0x24f1:	jbe	0x2990


0x24a5:	xor	r12d, r12d
0x24a8:	nop	dword ptr [rax + rax]
0x24b0:	movzx	edx, byte ptr [rbx + r12]
0x24b5:	lea	rsi, [rip + 0x5621]
0x24bc:	xor	eax, eax
0x24be:	mov	edi, 1
0x24c3:	add	r12, 1
0x24c7:	call	0x1810


0x284c:	jmp	0x24e2


0x2990:	mov	esi, 0x20
0x2995:	call	0x16d0


0x24f7:	lea	rdx, [rax + 1]
0x24fb:	mov	qword ptr [rdi + 0x28], rdx
0x24ff:	mov	byte ptr [rax], 0x20
0x2502:	mov	rdi, qword ptr [rip + 0x208b9f]
0x2509:	mov	rax, qword ptr [rdi + 0x28]
0x250d:	cmp	rax, qword ptr [rdi + 0x30]
0x2511:	jae	0x2982


0x2517:	lea	rdx, [rax + 1]
0x251b:	mov	qword ptr [rdi + 0x28], rdx
0x251f:	movzx	edi, byte ptr [rsp + 0x7b]
0x2524:	mov	byte ptr [rax], dil
0x2527:	mov	rdi, qword ptr [rsp + 0x20]
0x252c:	mov	esi, ebp
0x252e:	call	0x2c30


0x2982:	mov	esi, dword ptr [rsp + 0x7c]
0x2986:	call	0x16d0


0x2533:	mov	rdi, qword ptr [rip + 0x208b6e]
0x253a:	movzx	edx, byte ptr [rip + 0x208acf]
0x2541:	mov	rax, qword ptr [rdi + 0x28]
0x2545:	cmp	rax, qword ptr [rdi + 0x30]
0x2549:	jae	0x2957


0x254f:	lea	rcx, [rax + 1]
0x2553:	mov	qword ptr [rdi + 0x28], rcx
0x2557:	mov	byte ptr [rax], dl
0x2559:	jmp	0x236d


0x2957:	movzx	esi, dl
0x295a:	call	0x16d0


0x24cc:	mov	rax, qword ptr [rip + 0x208c25]
0x24d3:	shr	rax, 1
0x24d6:	cmp	rax, r12
0x24d9:	ja	0x24b0


0x24db:	cmp	byte ptr [rsp + 0x78], 0
0x24e0:	jne	0x2533


0x24b0:	movzx	edx, byte ptr [rbx + r12]
0x24b5:	lea	rsi, [rip + 0x5621]
0x24bc:	xor	eax, eax
0x24be:	mov	edi, 1
0x24c3:	add	r12, 1
0x24c7:	call	0x1810


0x295f:	jmp	0x236d


0x298b:	jmp	0x2527


0x2527:	mov	rdi, qword ptr [rsp + 0x20]
0x252c:	mov	esi, ebp
0x252e:	call	0x2c30


0x299a:	jmp	0x2502


0x2502:	mov	rdi, qword ptr [rip + 0x208b9f]
0x2509:	mov	rax, qword ptr [rdi + 0x28]
0x250d:	cmp	rax, qword ptr [rdi + 0x30]
0x2511:	jae	0x2982


0x29cc:	jmp	0x2797


0x2797:	mov	rcx, qword ptr [rip + 0x20890a]
0x279e:	lea	rdi, [rip + 0x51cd]
0x27a5:	mov	edx, 4
0x27aa:	mov	esi, 1
0x27af:	call	0x17d0


0x297d:	jmp	0x27fd


0x27fd:	mov	rax, qword ptr [rip + 0x2088f4]
0x2804:	mov	ebp, 1
0x2809:	shr	rax, 1
0x280c:	jne	0x24a5


0x2812:	jmp	0x24db


0x27b4:	mov	rcx, qword ptr [rip + 0x2088ed]
0x27bb:	lea	rdi, [rip + 0x5320]
0x27c2:	mov	edx, 2
0x27c7:	mov	esi, 1
0x27cc:	call	0x17d0


0x27d1:	mov	rdi, qword ptr [rsp + 0x20]
0x27d6:	mov	esi, 1
0x27db:	call	0x2c30


0x27e0:	mov	rcx, qword ptr [rip + 0x2088c1]
0x27e7:	lea	rdi, [rip + 0x52f7]
0x27ee:	mov	edx, 4
0x27f3:	mov	esi, 1
0x27f8:	call	0x17d0


0x288d:	mov	rcx, qword ptr [rip + 0x208814]
0x2894:	lea	rdi, [rip + 0x5247]
0x289b:	mov	edx, 2
0x28a0:	mov	esi, 1
0x28a5:	call	0x17d0


0x28aa:	mov	rdi, qword ptr [rsp + 0x20]
0x28af:	xor	esi, esi
0x28b1:	call	0x2c30


0x28b6:	mov	rcx, qword ptr [rip + 0x2087eb]
0x28bd:	lea	rdi, [rip + 0x5221]
0x28c4:	mov	edx, 4
0x28c9:	mov	esi, 1
0x28ce:	call	0x17d0


0x28d3:	mov	rax, qword ptr [rip + 0x20881e]
0x28da:	shr	rax, 1
0x28dd:	jne	0x24a5


0x28e3:	jmp	0x2533


0x2860:	test	rax, rax
0x2863:	jne	0x247f


0x2869:	jmp	0x248c


0x1d97:	test	rax, rax
0x1d9a:	jle	0x209c


0x1da0:	mov	rbx, qword ptr [rsp + 0x90]
0x1da8:	movzx	ecx, byte ptr [rbx]
0x1dab:	cmp	cl, 0x23
0x1dae:	je	0x1e55


0x1db4:	cmp	byte ptr [rbx + rax - 1], 0xa
0x1db9:	mov	r15, rax
0x1dbc:	jne	0x1dd2


0x1dbe:	sub	r15, 1
0x1dc2:	mov	byte ptr [rbx + r15], 0
0x1dc7:	mov	rbx, qword ptr [rsp + 0x90]
0x1dcf:	movzx	ecx, byte ptr [rbx]
0x1dd2:	cmp	cl, 9
0x1dd5:	je	0x1dde


0x1dd2:	cmp	cl, 9
0x1dd5:	je	0x1dde


0x1dde:	xor	edx, edx
0x1de0:	add	rdx, 1
0x1de4:	movzx	ecx, byte ptr [rbx + rdx]
0x1de8:	cmp	cl, 0x20
0x1deb:	je	0x1de0


0x1dd7:	xor	edx, edx
0x1dd9:	cmp	cl, 0x20
0x1ddc:	jne	0x1df2


0x1de0:	add	rdx, 1
0x1de4:	movzx	ecx, byte ptr [rbx + rdx]
0x1de8:	cmp	cl, 0x20
0x1deb:	je	0x1de0


0x1ded:	cmp	cl, 9
0x1df0:	je	0x1de0


0x1df2:	xor	r9d, r9d
0x1df5:	cmp	cl, 0x5c
0x1df8:	jne	0x1e04


0x1dfa:	movzx	r9d, byte ptr [rsp + 0x2b]
0x1e00:	add	rdx, 1
0x1e04:	lea	r8, [rbx + rdx]
0x1e08:	lea	rdi, [rip + 0x5b63]
0x1e0f:	mov	ecx, 4
0x1e14:	mov	rsi, r8
0x1e17:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1e04:	lea	r8, [rbx + rdx]
0x1e08:	lea	rdi, [rip + 0x5b63]
0x1e0f:	mov	ecx, 4
0x1e14:	mov	rsi, r8
0x1e17:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1e17:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1e19:	seta	al
0x1e1c:	sbb	al, 0
0x1e1e:	test	al, al
0x1e20:	jne	0x1ef0


0x1e26:	movzx	eax, byte ptr [rbx + rdx + 4]
0x1e2b:	lea	rcx, [rdx + 4]
0x1e2f:	cmp	al, 0x20
0x1e31:	jne	0x1e3c


0x1ef0:	mov	rcx, r15
0x1ef3:	xor	eax, eax
0x1ef5:	sub	rcx, rdx
0x1ef8:	cmp	byte ptr [r8], 0x5c
0x1efc:	sete	al
0x1eff:	add	rax, qword ptr [rip + 0x2091fa]
0x1f06:	cmp	rcx, rax
0x1f09:	jb	0x1e44


0x1e33:	movzx	eax, byte ptr [rbx + rdx + 5]
0x1e38:	lea	rcx, [rdx + 5]
0x1e3c:	cmp	al, 0x28
0x1e3e:	je	0x23c4


0x1e3c:	cmp	al, 0x28
0x1e3e:	je	0x23c4


0x1f0f:	add	rdx, qword ptr [rip + 0x2091e2]
0x1f16:	lea	rcx, [rbx + rdx]
0x1f1a:	movzx	eax, byte ptr [rcx]
0x1f1d:	cmp	al, 0x20
0x1f1f:	je	0x1f29


0x23c4:	add	rcx, 1
0x23c8:	sub	r15, rcx
0x23cb:	je	0x1e44


0x1f29:	mov	byte ptr [rcx], 0
0x1f2c:	mov	rdi, r8
0x1f2f:	mov	qword ptr [rsp + 0x70], rdx
0x1f34:	mov	byte ptr [rsp + 0x68], r9b
0x1f39:	mov	qword ptr [rsp + 0x60], r8
0x1f3e:	call	0x2bd0


0x1f21:	cmp	al, 9
0x1f23:	jne	0x1e44


0x23d1:	mov	r10, r15
0x23d4:	add	rbx, rcx
0x23d7:	sub	r10, 1
0x23db:	je	0x2401


0x2401:	cmp	byte ptr [rbx], 0x29
0x2404:	jne	0x1e44


0x23dd:	cmp	byte ptr [rbx + r15 - 1], 0x29
0x23e3:	jne	0x23fb


0x240a:	mov	r11, rbx
0x240d:	xor	r10d, r10d
0x2410:	jmp	0x268d


0x23e5:	jmp	0x2689


0x23fb:	sub	r10, 1
0x23ff:	jne	0x23f0


0x268d:	test	r9b, r9b
0x2690:	jne	0x293e


0x2689:	lea	r11, [rbx + r10]
0x268d:	test	r9b, r9b
0x2690:	jne	0x293e


0x23f0:	cmp	byte ptr [rbx + r10], 0x29
0x23f5:	je	0x2689


0x2696:	add	r10, 1
0x269a:	mov	byte ptr [r11], 0
0x269e:	jmp	0x26a4


0x293e:	mov	rsi, r10
0x2941:	mov	rdi, rbx
0x2944:	call	0x2b50


0x26a4:	movzx	eax, byte ptr [rbx + r10]
0x26a9:	cmp	al, 0x20
0x26ab:	je	0x26a0


0x26a0:	add	r10, 1
0x26a4:	movzx	eax, byte ptr [rbx + r10]
0x26a9:	cmp	al, 0x20
0x26ab:	je	0x26a0


0x26ad:	cmp	al, 9
0x26af:	je	0x26a0


0x26b1:	cmp	al, 0x3d
0x26b3:	jne	0x1e44


0x26b9:	lea	rdx, [rbx + r10 + 1]
0x26be:	movzx	eax, byte ptr [rdx]
0x26c1:	mov	r8, rdx
0x26c4:	lea	rdx, [rdx + 1]
0x26c8:	cmp	al, 0x20
0x26ca:	je	0x26be


0x26be:	movzx	eax, byte ptr [rdx]
0x26c1:	mov	r8, rdx
0x26c4:	lea	rdx, [rdx + 1]
0x26c8:	cmp	al, 0x20
0x26ca:	je	0x26be


0x26cc:	cmp	al, 9
0x26ce:	je	0x26be


0x26d0:	mov	rdi, r8
0x26d3:	mov	qword ptr [rsp + 0x60], r8
0x26d8:	call	0x2bd0


0x2949:	test	rax, rax
0x294c:	jne	0x2696


0x2952:	jmp	0x1e44


0x26dd:	mov	r8, qword ptr [rsp + 0x60]
0x26e2:	jmp	0x275f


0x275f:	test	al, al
0x2761:	jne	0x1fa6


0x1f43:	test	al, al
0x1f45:	je	0x1e44


0x1f4b:	mov	rdx, qword ptr [rsp + 0x70]
0x1f50:	mov	rcx, r15
0x1f53:	mov	esi, dword ptr [rip + 0x2090bb]
0x1f59:	mov	r8, qword ptr [rsp + 0x60]
0x1f5e:	movzx	r9d, byte ptr [rsp + 0x68]
0x1f64:	lea	rax, [rdx + 1]
0x1f68:	sub	rcx, rax
0x1f6b:	sub	rcx, 1
0x1f6f:	je	0x1f88


0x1f88:	test	esi, esi
0x1f8a:	je	0x1e44


0x1f71:	movzx	ecx, byte ptr [rbx + rdx + 1]
0x1f76:	cmp	cl, 0x20
0x1f79:	je	0x26e4


0x1f90:	mov	dword ptr [rip + 0x20907a], 1
0x1f9a:	add	rbx, rax
0x1f9d:	test	r9b, r9b
0x1fa0:	jne	0x2741


0x26e4:	sub	esi, 1
0x26e7:	je	0x1f9a


0x1f7f:	cmp	cl, 0x2a
0x1f82:	je	0x26e4


0x1f9a:	add	rbx, rax
0x1f9d:	test	r9b, r9b
0x1fa0:	jne	0x2741


0x26ed:	mov	dword ptr [rip + 0x20891d], 0
0x26f7:	lea	rax, [rdx + 2]
0x26fb:	jmp	0x1f9a


0x338a:	mov	esi, dword ptr [rbx]
0x338c:	lea	rdx, [rip + 0x519e]
0x3393:	mov	rcx, rax
0x3396:	mov	r8, rbp
0x3399:	xor	edi, edi
0x339b:	xor	eax, eax
0x339d:	call	0x1830


0x622c:	add	rsp, 0x20
0x6230:	mov	r11, qword ptr [rsp + 0x10]
0x6235:	cmp	r11, rax
0x6238:	ja	0x62a1


0x623a:	lea	rsi, [rax + 1]
0x623e:	lea	rax, [rip + 0x204efb]
0x6245:	cmp	r12, rax
0x6248:	mov	qword ptr [rbx], rsi
0x624b:	je	0x625f


0x62a1:	mov	eax, dword ptr [rsp + 0x18]
0x62a5:	mov	dword ptr [r13], eax
0x62a9:	add	rsp, 0x28
0x62ad:	mov	rax, r12
0x62b0:	pop	rbx
0x62b1:	pop	rbp
0x62b2:	pop	r12
0x62b4:	pop	r13
0x62b6:	pop	r14
0x62b8:	pop	r15
0x62ba:	ret	


0x625f:	mov	rdi, rsi
0x6262:	mov	qword ptr [rsp + 0x10], rsi
0x6267:	call	0x70d0


0x624d:	mov	rdi, r12
0x6250:	mov	qword ptr [rsp + 0x10], rsi
0x6255:	call	0x15b0


0x625a:	mov	rsi, qword ptr [rsp + 0x10]
0x625f:	mov	rdi, rsi
0x6262:	mov	qword ptr [rsp + 0x10], rsi
0x6267:	call	0x70d0


0x626c:	sub	rsp, 8
0x6270:	mov	qword ptr [rbx + 8], rax
0x6274:	mov	r8d, dword ptr [rbp]
0x6278:	push	qword ptr [rbp + 0x30]
0x627b:	push	qword ptr [rbp + 0x28]
0x627e:	mov	rcx, r14
0x6281:	push	r15
0x6283:	mov	r9d, dword ptr [rsp + 0x3c]
0x6288:	mov	rdi, rax
0x628b:	mov	rdx, qword ptr [rsp + 0x28]
0x6290:	mov	rsi, qword ptr [rsp + 0x30]
0x6295:	mov	r12, rax
0x6298:	call	0x4f00


0x69b2:	mov	rdi, qword ptr [rsp + 0x38]
0x69b7:	xor	rdi, qword ptr fs:[0x28]
0x69c0:	jne	0x69cc


0x69c2:	add	rsp, 0x48
0x69c6:	ret	


0x69cc:	call	0x1690


0x66ff:	mov	rcx, qword ptr [rsp + 0x38]
0x6704:	xor	rcx, qword ptr fs:[0x28]
0x670d:	jne	0x6719


0x670f:	add	rsp, 0x48
0x6713:	ret	


0x6719:	call	0x1690


0x678b:	mov	rdx, qword ptr [rsp + 0x38]
0x6790:	xor	rdx, qword ptr fs:[0x28]
0x6799:	jne	0x67a5


0x679b:	add	rsp, 0x48
0x679f:	ret	


0x67a5:	call	0x1690


0x691f:	mov	rcx, qword ptr [rsp + 0x38]
0x6924:	xor	rcx, qword ptr fs:[0x28]
0x692d:	jne	0x6939


0x692f:	add	rsp, 0x48
0x6933:	ret	


0x6939:	call	0x1690


0x2908:	lea	rsi, [rip + 0x51b5]
0x290f:	mov	rbp, rax
0x2912:	xor	edi, edi
0x2914:	mov	edx, 5
0x2919:	call	0x1660


0x291e:	mov	rcx, rbp
0x2921:	mov	rdx, rax
0x2924:	xor	esi, esi
0x2926:	xor	edi, edi
0x2928:	xor	eax, eax
0x292a:	call	0x1830


0x292f:	jmp	0x21be


0x2656:	lea	rsi, [rip + 0x5d5b]
0x265d:	xor	edi, edi
0x265f:	mov	edx, 5
0x2664:	mov	rbp, rax
0x2667:	call	0x1660


0x266c:	lea	r8, [rip + 0x52ff]
0x2673:	mov	rdx, rax
0x2676:	mov	rcx, rbp
0x2679:	xor	esi, esi
0x267b:	xor	edi, edi
0x267d:	xor	eax, eax
0x267f:	call	0x1830


0x2684:	jmp	0x21be


0x257f:	lea	rsi, [rip + 0x552f]
0x2586:	mov	rbx, rax
0x2589:	mov	edx, 5
0x258e:	xor	edi, edi
0x2590:	call	0x1660


0x2595:	mov	rcx, rbx
0x2598:	mov	rdx, rax
0x259b:	xor	esi, esi
0x259d:	xor	eax, eax
0x259f:	xor	edi, edi
0x25a1:	call	0x1830


0x25a6:	xor	eax, eax
0x25a8:	jmp	0x21c3


0x21c3:	and	byte ptr [rsp + 0x79], al
0x21c7:	jmp	0x236d


0x1e7b:	lea	rsi, [rip + 0x5bf9]
0x1e82:	mov	rbx, rax
0x1e85:	mov	edx, 5
0x1e8a:	xor	edi, edi
0x1e8c:	call	0x1660


0x1e91:	mov	rcx, rbx
0x1e94:	mov	rdx, rax
0x1e97:	xor	esi, esi
0x1e99:	mov	edi, 1
0x1e9e:	xor	eax, eax
0x1ea0:	call	0x1830


0x21e1:	lea	rsi, [rip + 0x61a0]
0x21e8:	xor	edi, edi
0x21ea:	mov	edx, 5
0x21ef:	mov	rbx, rax
0x21f2:	call	0x1660


0x21f7:	lea	r9, [rip + 0x5774]
0x21fe:	mov	rdx, rax
0x2201:	mov	r8, rbp
0x2204:	mov	rcx, rbx
0x2207:	xor	esi, esi
0x2209:	xor	edi, edi
0x220b:	xor	eax, eax
0x220d:	call	0x1830


0x2212:	jmp	0x1e55


0x2443:	mov	rbx, rax
0x2446:	call	0x15d0


0x244b:	mov	esi, dword ptr [rax]
0x244d:	lea	rdx, [rip + 0x60e1]
0x2454:	xor	eax, eax
0x2456:	mov	rcx, rbx
0x2459:	xor	edi, edi
0x245b:	call	0x1830


0x2460:	xor	eax, eax
0x2462:	jmp	0x21c3


0x2e19:	mov	rbx, rax
0x2e1c:	xor	r12d, r12d
0x2e1f:	call	0x15d0


0x2e24:	mov	esi, dword ptr [rax]
0x2e26:	lea	rdx, [rip + 0x5708]
0x2e2d:	mov	rcx, rbx
0x2e30:	xor	edi, edi
0x2e32:	xor	eax, eax
0x2e34:	call	0x1830


0x2e39:	jmp	0x2d61


0x2d7f:	mov	rbp, rax
0x2d82:	xor	r12d, r12d
0x2d85:	call	0x15d0


0x2d8a:	mov	esi, dword ptr [rax]
0x2d8c:	lea	rdx, [rip + 0x57a2]
0x2d93:	xor	edi, edi
0x2d95:	xor	eax, eax
0x2d97:	mov	rcx, rbp
0x2d9a:	call	0x1830


0x2d9f:	cmp	qword ptr [rip + 0x20830a], rbx
0x2da6:	je	0x2d61


0x2da8:	mov	rdi, rbx
0x2dab:	call	0x7360


0x2db0:	add	rsp, 8
0x2db4:	mov	eax, r12d
0x2db7:	pop	rbx
0x2db8:	pop	rbp
0x2db9:	pop	r12
0x2dbb:	pop	r13
0x2dbd:	ret	


0x2e69:	mov	esi, dword ptr [rbx]
0x2e6b:	lea	rdx, [rip + 0x56c3]
0x2e72:	mov	rcx, rax
0x2e75:	xor	edi, edi
0x2e77:	xor	eax, eax
0x2e79:	xor	r12d, r12d
0x2e7c:	call	0x1830


0x2e81:	jmp	0x2d61


0x684e:	mov	rsi, qword ptr [rsp + 0x38]
0x6853:	xor	rsi, qword ptr fs:[0x28]
0x685c:	jne	0x6863


0x685e:	add	rsp, 0x48
0x6862:	ret	


0x6863:	call	0x1690


0x629d:	add	rsp, 0x20
0x62a1:	mov	eax, dword ptr [rsp + 0x18]
0x62a5:	mov	dword ptr [r13], eax
0x62a9:	add	rsp, 0x28
0x62ad:	mov	rax, r12
0x62b0:	pop	rbx
0x62b1:	pop	rbp
0x62b2:	pop	r12
0x62b4:	pop	r13
0x62b6:	pop	r14
0x62b8:	pop	r15
0x62ba:	ret	


0x64ec:	lea	rsi, [rax + 1]
0x64f0:	mov	qword ptr [rsp + 0x48], rax
0x64f5:	add	rsp, 0x20
0x64f9:	mov	rdi, rsi
0x64fc:	mov	qword ptr [rsp + 0x18], rsi
0x6501:	call	0x70d0


0x6506:	mov	qword ptr [rsp + 0x10], rax
0x650b:	sub	rsp, 8
0x650f:	push	qword ptr [rbx + 0x30]
0x6512:	push	qword ptr [rbx + 0x28]
0x6515:	mov	r10, qword ptr [rsp + 0x38]
0x651a:	mov	r9d, ebp
0x651d:	mov	r8d, dword ptr [rbx]
0x6520:	mov	rcx, r15
0x6523:	mov	rdx, r14
0x6526:	mov	rdi, rax
0x6529:	push	r10
0x652b:	mov	rsi, qword ptr [rsp + 0x38]
0x6530:	call	0x4f00


0x6535:	mov	eax, dword ptr [rsp + 0x2c]
0x6539:	add	rsp, 0x20
0x653d:	test	r12, r12
0x6540:	mov	dword ptr [r13], eax
0x6544:	je	0x654f


0x654f:	mov	rax, qword ptr [rsp + 0x10]
0x6554:	add	rsp, 0x38
0x6558:	pop	rbx
0x6559:	pop	rbp
0x655a:	pop	r12
0x655c:	pop	r13
0x655e:	pop	r14
0x6560:	pop	r15
0x6562:	ret	


0x6546:	mov	r11, qword ptr [rsp + 0x28]
0x654b:	mov	qword ptr [r12], r11
0x654f:	mov	rax, qword ptr [rsp + 0x10]
0x6554:	add	rsp, 0x38
0x6558:	pop	rbx
0x6559:	pop	rbp
0x655a:	pop	r12
0x655c:	pop	r13
0x655e:	pop	r14
0x6560:	pop	r15
0x6562:	ret	


0x6461:	mov	dword ptr [rbp], r12d
0x6465:	add	rsp, 0x38
0x6469:	pop	rbx
0x646a:	pop	rbp
0x646b:	pop	r12
0x646d:	pop	r13
0x646f:	pop	r14
0x6471:	pop	r15
0x6473:	ret	


0x78fd:	add	rbx, 1
0x7901:	cmp	rbp, rbx
0x7904:	jne	0x78f0


0x78f0:	mov	rdx, r15
0x78f3:	mov	rsi, r14
0x78f6:	mov	edi, r13d
0x78f9:	call	qword ptr [r12 + rbx*8]






0x6d40:	lea	rsi, [rip + 0x1ed1]
0x6d47:	mov	edx, 5
0x6d4c:	xor	edi, edi
0x6d4e:	mov	r14, qword ptr [rbx + 0x18]
0x6d52:	mov	r13, qword ptr [rbx + 0x10]
0x6d56:	mov	r12, qword ptr [rbx + 8]
0x6d5a:	mov	rbx, qword ptr [rbx]
0x6d5d:	call	0x1660


0x6b60:	mov	r9, qword ptr [rbx + 0x38]
0x6b64:	mov	rax, qword ptr [rbx + 0x10]
0x6b68:	lea	rsi, [rip + 0x2149]
0x6b6f:	mov	r8, qword ptr [rbx + 8]
0x6b73:	mov	edx, 5
0x6b78:	xor	edi, edi
0x6b7a:	mov	r13, qword ptr [rbx + 0x30]
0x6b7e:	mov	r12, qword ptr [rbx + 0x28]
0x6b82:	mov	qword ptr [rsp + 0x10], r9
0x6b87:	mov	r15, qword ptr [rbx + 0x20]
0x6b8b:	mov	r14, qword ptr [rbx + 0x18]
0x6b8f:	mov	qword ptr [rsp], rax
0x6b93:	mov	qword ptr [rsp + 8], r8
0x6b98:	mov	rbx, qword ptr [rbx]
0x6b9b:	call	0x1660


0x6c68:	mov	rbx, qword ptr [rbx]
0x6c6b:	lea	rsi, [rip + 0x1e4d]
0x6c72:	mov	edx, 5
0x6c77:	xor	edi, edi
0x6c79:	call	0x1660


0x6ca8:	mov	r12, qword ptr [rbx + 8]
0x6cac:	lea	rsi, [rip + 0x1e1c]
0x6cb3:	mov	rbx, qword ptr [rbx]
0x6cb6:	mov	edx, 5
0x6cbb:	xor	edi, edi
0x6cbd:	call	0x1660


0x6dc8:	mov	r8, qword ptr [rbx + 8]
0x6dcc:	mov	r12, qword ptr [rbx + 0x28]
0x6dd0:	lea	rsi, [rip + 0x1e89]
0x6dd7:	mov	r15, qword ptr [rbx + 0x20]
0x6ddb:	mov	r14, qword ptr [rbx + 0x18]
0x6ddf:	mov	edx, 5
0x6de4:	mov	r13, qword ptr [rbx + 0x10]
0x6de8:	xor	edi, edi
0x6dea:	mov	rbx, qword ptr [rbx]
0x6ded:	mov	qword ptr [rsp], r8
0x6df1:	call	0x1660


0x6cf0:	mov	r13, qword ptr [rbx + 0x10]
0x6cf4:	mov	r12, qword ptr [rbx + 8]
0x6cf8:	lea	rsi, [rip + 0x1de7]
0x6cff:	mov	rbx, qword ptr [rbx]
0x6d02:	mov	edx, 5
0x6d07:	xor	edi, edi
0x6d09:	call	0x1660


0x6e30:	mov	r9, qword ptr [rbx + 0x10]
0x6e34:	mov	r13, qword ptr [rbx + 0x30]
0x6e38:	lea	rsi, [rip + 0x1e49]
0x6e3f:	mov	r12, qword ptr [rbx + 0x28]
0x6e43:	mov	r15, qword ptr [rbx + 0x20]
0x6e47:	mov	edx, 5
0x6e4c:	mov	r14, qword ptr [rbx + 0x18]
0x6e50:	mov	r8, qword ptr [rbx + 8]
0x6e54:	xor	edi, edi
0x6e56:	mov	qword ptr [rsp + 8], r9
0x6e5b:	mov	rbx, qword ptr [rbx]
0x6e5e:	mov	qword ptr [rsp], r8
0x6e62:	call	0x1660


0x6c10:	mov	r10, qword ptr [rbx + 0x40]
0x6c14:	mov	r9, qword ptr [rbx + 0x38]
0x6c18:	lea	rsi, [rip + 0x20c9]
0x6c1f:	mov	rax, qword ptr [rbx + 0x10]
0x6c23:	mov	r8, qword ptr [rbx + 8]
0x6c27:	mov	edx, 5
0x6c2c:	mov	r13, qword ptr [rbx + 0x30]
0x6c30:	mov	r12, qword ptr [rbx + 0x28]
0x6c34:	mov	r15, qword ptr [rbx + 0x20]
0x6c38:	mov	r14, qword ptr [rbx + 0x18]
0x6c3c:	mov	rbx, qword ptr [rbx]
0x6c3f:	mov	qword ptr [rsp + 0x18], r10
0x6c44:	mov	qword ptr [rsp + 0x10], r9
0x6c49:	mov	qword ptr [rsp], rax
0x6c4d:	mov	qword ptr [rsp + 8], r8
0x6c52:	xor	edi, edi
0x6c54:	call	0x1660


0x6bd6:	add	rsp, 0x28
0x6bda:	pop	rbx
0x6bdb:	pop	rbp
0x6bdc:	pop	r12
0x6bde:	pop	r13
0x6be0:	pop	r14
0x6be2:	pop	r15
0x6be4:	ret	


0x6d98:	mov	r15, qword ptr [rbx + 0x20]
0x6d9c:	lea	rsi, [rip + 0x1e95]
0x6da3:	mov	edx, 5
0x6da8:	xor	edi, edi
0x6daa:	mov	r14, qword ptr [rbx + 0x18]
0x6dae:	mov	r13, qword ptr [rbx + 0x10]
0x6db2:	mov	r12, qword ptr [rbx + 8]
0x6db6:	mov	rbx, qword ptr [rbx]
0x6db9:	call	0x1660


0x6dbe:	push	r15
0x6dc0:	jmp	0x6d66


0x6d66:	push	r14
0x6d68:	mov	rdx, rax
0x6d6b:	mov	r9, r13
0x6d6e:	mov	r8, r12
0x6d71:	mov	rcx, rbx
0x6d74:	mov	rdi, rbp
0x6d77:	mov	esi, 1
0x6d7c:	xor	eax, eax
0x6d7e:	call	0x18a0


0x6d83:	pop	rax
0x6d84:	pop	rdx
0x6d85:	add	rsp, 0x28
0x6d89:	pop	rbx
0x6d8a:	pop	rbp
0x6d8b:	pop	r12
0x6d8d:	pop	r13
0x6d8f:	pop	r14
0x6d91:	pop	r15
0x6d93:	ret	


0x6e67:	push	r13
0x6e69:	push	r12
0x6e6b:	push	r15
0x6e6d:	push	r14
0x6e6f:	mov	r9, qword ptr [rsp + 0x28]
0x6e74:	jmp	0x6e03


0x6e03:	mov	r8, qword ptr [rsp + 0x20]
0x6e08:	mov	rcx, rbx
0x6e0b:	mov	rdx, rax
0x6e0e:	mov	rdi, rbp
0x6e11:	mov	esi, 1
0x6e16:	xor	eax, eax
0x6e18:	call	0x18a0


0x6e1d:	add	rsp, 0x20
0x6e21:	add	rsp, 0x28
0x6e25:	pop	rbx
0x6e26:	pop	rbp
0x6e27:	pop	r12
0x6e29:	pop	r13
0x6e2b:	pop	r14
0x6e2d:	pop	r15
0x6e2f:	ret	


0x6d0e:	add	rsp, 0x28
0x6d12:	mov	r9, r13
0x6d15:	mov	r8, r12
0x6d18:	mov	rcx, rbx
0x6d1b:	mov	rdi, rbp
0x6d1e:	mov	rdx, rax
0x6d21:	pop	rbx
0x6d22:	pop	rbp
0x6d23:	pop	r12
0x6d25:	pop	r13
0x6d27:	pop	r14
0x6d29:	pop	r15
0x6d2b:	mov	esi, 1
0x6d30:	xor	eax, eax
0x6d32:	jmp	0x18a0


0x6df6:	sub	rsp, 8
0x6dfa:	mov	r9, r13
0x6dfd:	push	r12
0x6dff:	push	r15
0x6e01:	push	r14
0x6e03:	mov	r8, qword ptr [rsp + 0x20]
0x6e08:	mov	rcx, rbx
0x6e0b:	mov	rdx, rax
0x6e0e:	mov	rdi, rbp
0x6e11:	mov	esi, 1
0x6e16:	xor	eax, eax
0x6e18:	call	0x18a0


0x6cc2:	add	rsp, 0x28
0x6cc6:	mov	r8, r12
0x6cc9:	mov	rcx, rbx
0x6ccc:	mov	rdi, rbp
0x6ccf:	mov	rdx, rax
0x6cd2:	mov	esi, 1
0x6cd7:	pop	rbx
0x6cd8:	pop	rbp
0x6cd9:	pop	r12
0x6cdb:	pop	r13
0x6cdd:	pop	r14
0x6cdf:	pop	r15
0x6ce1:	xor	eax, eax
0x6ce3:	jmp	0x18a0


0x6c7e:	add	rsp, 0x28
0x6c82:	mov	rcx, rbx
0x6c85:	mov	rdi, rbp
0x6c88:	pop	rbx
0x6c89:	pop	rbp
0x6c8a:	pop	r12
0x6c8c:	pop	r13
0x6c8e:	pop	r14
0x6c90:	pop	r15
0x6c92:	mov	rdx, rax
0x6c95:	mov	esi, 1
0x6c9a:	xor	eax, eax
0x6c9c:	jmp	0x18a0


0x6ba0:	sub	rsp, 8
0x6ba4:	mov	r9, qword ptr [rsp + 0x18]
0x6ba9:	mov	rdx, rax
0x6bac:	mov	rcx, rbx
0x6baf:	mov	esi, 1
0x6bb4:	mov	rdi, rbp
0x6bb7:	xor	eax, eax
0x6bb9:	push	r9
0x6bbb:	push	r13
0x6bbd:	push	r12
0x6bbf:	push	r15
0x6bc1:	push	r14
0x6bc3:	mov	r9, qword ptr [rsp + 0x30]
0x6bc8:	mov	r8, qword ptr [rsp + 0x38]
0x6bcd:	call	0x18a0


0x6d62:	sub	rsp, 8
0x6d66:	push	r14
0x6d68:	mov	rdx, rax
0x6d6b:	mov	r9, r13
0x6d6e:	mov	r8, r12
0x6d71:	mov	rcx, rbx
0x6d74:	mov	rdi, rbp
0x6d77:	mov	esi, 1
0x6d7c:	xor	eax, eax
0x6d7e:	call	0x18a0


0x5aa0:	sub	rsp, 8
0x5aa4:	mov	rcx, rbp
0x5aa7:	mov	rsi, r13
0x5aaa:	push	qword ptr [rsp + 0x68]
0x5aae:	push	qword ptr [rsp + 0x78]
0x5ab2:	mov	rdi, r14
0x5ab5:	push	0
0x5ab7:	mov	r9d, dword ptr [rsp + 0x98]
0x5abf:	mov	r8d, dword ptr [rsp + 0x28]
0x5ac4:	mov	rdx, qword ptr [rsp + 0x30]
0x5ac9:	and	r9d, 0xfffffffd
0x5acd:	call	0x4f00


0x5ad2:	add	rsp, 0x20
0x5ad6:	mov	r15, rax
0x5ad9:	mov	rbx, qword ptr [rsp + 0xa8]
0x5ae1:	xor	rbx, qword ptr fs:[0x28]
0x5aea:	mov	rax, r15
0x5aed:	jne	0x60f3


0x5af3:	add	rsp, 0xb8
0x5afa:	pop	rbx
0x5afb:	pop	rbp
0x5afc:	pop	r12
0x5afe:	pop	r13
0x5b00:	pop	r14
0x5b02:	pop	r15
0x5b04:	ret	


0x60f3:	call	0x1690


0x609d:	sub	rsp, 8
0x60a1:	mov	r8d, 5
0x60a7:	mov	rcx, r11
0x60aa:	push	qword ptr [rsp + 0x68]
0x60ae:	push	qword ptr [rsp + 0x78]
0x60b2:	mov	rdi, r14
0x60b5:	push	qword ptr [rsp + 0x38]
0x60b9:	mov	r9d, dword ptr [rsp + 0x98]
0x60c1:	mov	rdx, qword ptr [rsp + 0x30]
0x60c6:	mov	rsi, qword ptr [rsp + 0x70]
0x60cb:	call	0x4f00


0x60d0:	add	rsp, 0x20
0x60d4:	mov	r15, rax
0x60d7:	jmp	0x5ad9


0x5ad9:	mov	rbx, qword ptr [rsp + 0xa8]
0x5ae1:	xor	rbx, qword ptr fs:[0x28]
0x5aea:	mov	rax, r15
0x5aed:	jne	0x60f3


0x15a0:	push	qword ptr [rip + 0x20986a]
0x15a6:	jmp	qword ptr [rip + 0x20986c]


0x15ac:	nop	dword ptr [rax]


0x15b6:	push	0
0x15bb:	jmp	0x15a0


0x15c6:	push	1
0x15cb:	jmp	0x15a0


0x15d6:	push	2
0x15db:	jmp	0x15a0


0x15e6:	push	3
0x15eb:	jmp	0x15a0


0x15f6:	push	4
0x15fb:	jmp	0x15a0


0x1606:	push	5
0x160b:	jmp	0x15a0


0x1616:	push	6
0x161b:	jmp	0x15a0


0x1626:	push	7
0x162b:	jmp	0x15a0


0x1636:	push	8
0x163b:	jmp	0x15a0


0x1646:	push	9
0x164b:	jmp	0x15a0


0x1656:	push	0xa
0x165b:	jmp	0x15a0


0x1666:	push	0xb
0x166b:	jmp	0x15a0


0x1676:	push	0xc
0x167b:	jmp	0x15a0


0x1686:	push	0xd
0x168b:	jmp	0x15a0


0x1696:	push	0xe
0x169b:	jmp	0x15a0


0x16a6:	push	0xf
0x16ab:	jmp	0x15a0


0x16b6:	push	0x10
0x16bb:	jmp	0x15a0


0x16c6:	push	0x11
0x16cb:	jmp	0x15a0


0x16d6:	push	0x12
0x16db:	jmp	0x15a0


0x16e6:	push	0x13
0x16eb:	jmp	0x15a0


0x16f6:	push	0x14
0x16fb:	jmp	0x15a0


0x1706:	push	0x15
0x170b:	jmp	0x15a0


0x1716:	push	0x16
0x171b:	jmp	0x15a0


0x1726:	push	0x17
0x172b:	jmp	0x15a0


0x1730:	jmp	qword ptr [rip + 0x2097aa]




0x1736:	push	0x18
0x173b:	jmp	0x15a0


0x1746:	push	0x19
0x174b:	jmp	0x15a0


0x1756:	push	0x1a
0x175b:	jmp	0x15a0


0x1766:	push	0x1b
0x176b:	jmp	0x15a0


0x1776:	push	0x1c
0x177b:	jmp	0x15a0


0x1786:	push	0x1d
0x178b:	jmp	0x15a0


0x1796:	push	0x1e
0x179b:	jmp	0x15a0


0x17a6:	push	0x1f
0x17ab:	jmp	0x15a0


0x17b6:	push	0x20
0x17bb:	jmp	0x15a0


0x17c6:	push	0x21
0x17cb:	jmp	0x15a0


0x17d6:	push	0x22
0x17db:	jmp	0x15a0


0x17e6:	push	0x23
0x17eb:	jmp	0x15a0


0x17f6:	push	0x24
0x17fb:	jmp	0x15a0


0x1806:	push	0x25
0x180b:	jmp	0x15a0


0x1816:	push	0x26
0x181b:	jmp	0x15a0


0x1826:	push	0x27
0x182b:	jmp	0x15a0


0x1836:	push	0x28
0x183b:	jmp	0x15a0


0x1846:	push	0x29
0x184b:	jmp	0x15a0


0x1856:	push	0x2a
0x185b:	jmp	0x15a0


0x1866:	push	0x2b
0x186b:	jmp	0x15a0


0x1876:	push	0x2c
0x187b:	jmp	0x15a0


0x1886:	push	0x2d
0x188b:	jmp	0x15a0


0x1896:	push	0x2e
0x189b:	jmp	0x15a0


0x18a6:	push	0x2f
0x18ab:	jmp	0x15a0


0x18b0:	jmp	qword ptr [rip + 0x2096ea]




0x18b6:	push	0x30
0x18bb:	jmp	0x15a0


0x18c0:	jmp	qword ptr [rip + 0x2096e2]




0x18c6:	push	0x31
0x18cb:	jmp	0x15a0


0x18d6:	push	0x32
0x18db:	jmp	0x15a0


0x18e6:	push	0x33
0x18eb:	jmp	0x15a0


0x2a3d:	nop	dword ptr [rax]


0x2a6a:	hlt	


0x2a6b:	nop	dword ptr [rax + rax]


0x2aa2:	nop	dword ptr [rax]
0x2aa6:	nop	word ptr cs:[rax + rax]


0x2af2:	nop	dword ptr [rax]
0x2af6:	nop	word ptr cs:[rax + rax]


0x2b3a:	nop	word ptr [rax + rax]


0x2b4a:	nop	word ptr [rax + rax]


0x2bc9:	nop	dword ptr [rax]


0x2cf5:	nop	
0x2cf6:	nop	word ptr cs:[rax + rax]


0x2e9a:	nop	word ptr [rax + rax]


0x32fa:	nop	word ptr [rax + rax]


0x3308:	nop	dword ptr [rax + rax]


0x3318:	nop	dword ptr [rax + rax]


0x33c4:	nop	word ptr cs:[rax + rax]
0x33ce:	nop	


0x33fd:	nop	dword ptr [rax]


0x342a:	nop	word ptr [rax + rax]


0x46a7:	nop	word ptr [rax + rax]


0x47ca:	nop	word ptr [rax + rax]


0x4aa7:	nop	word ptr [rax + rax]


0x4b37:	nop	word ptr [rax + rax]


0x4c82:	nop	word ptr cs:[rax + rax]
0x4c8c:	nop	dword ptr [rax]


0x4c95:	nop	
0x4c96:	nop	word ptr cs:[rax + rax]


0x4cc2:	nop	word ptr cs:[rax + rax]
0x4ccc:	nop	dword ptr [rax]


0x4d63:	nop	word ptr cs:[rax + rax]
0x4d6d:	nop	dword ptr [rax]


0x4e0f:	nop	


0x4ef7:	nop	word ptr [rax + rax]


0x4f93:	mov	byte ptr [rsp + 0xe], 1
0x4f98:	mov	byte ptr [rsp + 0x7c], 0
0x4f9d:	xor	r12d, r12d
0x4fa0:	mov	qword ptr [rsp + 0x50], 0
0x4fa9:	mov	byte ptr [rsp + 0xf], 1
0x4fae:	mov	byte ptr [rsp + 0xd], 0
0x4fb3:	lea	rax, [rip + 0x361b]
0x4fba:	mov	qword ptr [rsp + 0x18], 1
0x4fc3:	xor	r15d, r15d
0x4fc6:	mov	dword ptr [rsp + 8], 2
0x4fce:	mov	qword ptr [rsp + 0x48], rax
0x4fd3:	xor	r11d, r11d
0x4fd6:	mov	rax, rbp
0x4fd9:	mov	r8d, r12d
0x4fdc:	mov	rbp, r11
0x4fdf:	mov	r11, rax
0x4fe2:	nop	word ptr [rax + rax]
0x4fe8:	cmp	r11, rbp
0x4feb:	setne	r12b
0x4fef:	cmp	r11, -1
0x4ff3:	jne	0x5002


0x4ff5:	mov	rax, qword ptr [rsp + 0x10]
0x4ffa:	cmp	byte ptr [rax + rbp], 0
0x4ffe:	setne	r12b
0x5002:	test	r12b, r12b
0x5005:	je	0x5660


0x5002:	test	r12b, r12b
0x5005:	je	0x5660


0x5660:	cmp	dword ptr [rsp + 8], 2
0x5665:	movzx	ebx, byte ptr [rsp + 0xf]
0x566a:	mov	r12d, r8d
0x566d:	mov	rbp, r11
0x5670:	sete	dl
0x5673:	mov	eax, ebx
0x5675:	test	r15, r15
0x5678:	sete	cl
0x567b:	and	eax, edx
0x567d:	and	al, cl
0x567f:	jne	0x60e6


0x500b:	cmp	dword ptr [rsp + 8], 2
0x5010:	mov	rdi, qword ptr [rsp + 0x10]
0x5015:	lea	r9, [rdi + rbp]
0x5019:	setne	al
0x501c:	and	al, byte ptr [rsp + 0xd]
0x5020:	mov	r10d, eax
0x5023:	je	0x50d0


0x5685:	mov	eax, ebx
0x5687:	xor	eax, 1
0x568a:	and	dl, al
0x568c:	je	0x5ffc


0x60e6:	mov	dword ptr [rsp + 8], 2
0x60ee:	jmp	0x5a89


0x50d0:	movzx	ebx, byte ptr [r9]
0x50d4:	cmp	bl, 0x7e
0x50d7:	ja	0x53f8


0x5029:	mov	rax, qword ptr [rsp + 0x18]
0x502e:	test	rax, rax
0x5031:	je	0x5460


0x5ffc:	mov	rbx, qword ptr [rsp + 0x48]
0x6001:	test	rbx, rbx
0x6004:	je	0x6032


0x5692:	cmp	byte ptr [rsp + 0x7c], 0
0x5697:	je	0x5ffa


0x5a89:	cmp	byte ptr [rsp + 0xd], 0
0x5a8e:	je	0x5aa0


0x50dd:	lea	rcx, [rip + 0x3588]
0x50e4:	movzx	edx, bl
0x50e7:	movsxd	rax, dword ptr [rcx + rdx*4]
0x50eb:	add	rax, rcx
0x50ee:	jmp	rax


0x53f8:	cmp	qword ptr [rsp + 0x58], 1
0x53fe:	jne	0x57a8


0x5460:	movzx	ebx, byte ptr [r9]
0x5464:	cmp	bl, 0x7e
0x5467:	ja	0x53f0


0x5037:	cmp	r11, -1
0x503b:	lea	rbx, [rbp + rax]
0x5040:	jne	0x5070


0x6032:	cmp	r13, r15
0x6035:	jbe	0x5ad9


0x6006:	test	al, al
0x6008:	je	0x6032


0x5ffa:	mov	eax, edx
0x5ffc:	mov	rbx, qword ptr [rsp + 0x48]
0x6001:	test	rbx, rbx
0x6004:	je	0x6032


0x569d:	cmp	byte ptr [rsp + 0xe], 0
0x56a2:	jne	0x609d


0x5a90:	test	al, al
0x5a92:	mov	eax, 4
0x5a97:	cmove	eax, dword ptr [rsp + 8]
0x5a9c:	mov	dword ptr [rsp + 8], eax


0x5404:	mov	qword ptr [rsp + 0x38], r11
0x5409:	mov	byte ptr [rsp + 0x30], r8b
0x540e:	mov	byte ptr [rsp + 0x28], r10b
0x5413:	call	0x18e0


0x57a8:	lea	rax, [rsp + 0xa0]
0x57b0:	cmp	r11, -1
0x57b4:	mov	qword ptr [rsp + 0xa0], 0
0x57c0:	mov	qword ptr [rsp + 0x28], rax
0x57c5:	jne	0x57f4


0x5469:	lea	rcx, [rip + 0x33f8]
0x5470:	movzx	edx, bl
0x5473:	movsxd	rax, dword ptr [rcx + rdx*4]
0x5477:	add	rax, rcx
0x547a:	jmp	rax


0x53f0:	xor	r10d, r10d
0x53f3:	nop	dword ptr [rax + rax]
0x53f8:	cmp	qword ptr [rsp + 0x58], 1
0x53fe:	jne	0x57a8


0x5042:	cmp	rax, 1
0x5046:	jbe	0x5070


0x5070:	cmp	rbx, r11
0x5073:	mov	byte ptr [rsp + 0x28], r10b
0x5078:	ja	0x5630


0x603b:	mov	byte ptr [r14 + r15], 0
0x6040:	jmp	0x5ad9


0x600a:	movzx	ecx, byte ptr [rbx]
0x600d:	mov	rax, rbx
0x6010:	test	cl, cl
0x6012:	je	0x6032


0x56a8:	test	r13, r13
0x56ab:	sete	al
0x56ae:	cmp	qword ptr [rsp + 0x50], 0
0x56b4:	setne	dl
0x56b7:	and	al, dl
0x56b9:	je	0x60dc


0x57c7:	mov	rdi, qword ptr [rsp + 0x10]
0x57cc:	mov	byte ptr [rsp + 0x40], r8b
0x57d1:	mov	byte ptr [rsp + 0x38], r10b
0x57d6:	mov	qword ptr [rsp + 0x30], r9
0x57db:	call	0x1680


0x57f4:	lea	rax, [rsp + 0x9c]
0x57fc:	xor	ecx, ecx
0x57fe:	mov	byte ptr [rsp + 0x7e], bl
0x5802:	mov	byte ptr [rsp + 0x7d], r8b
0x5807:	mov	rbx, rcx
0x580a:	mov	qword ptr [rsp + 0x88], r9
0x5812:	mov	qword ptr [rsp + 0x38], rax
0x5817:	mov	byte ptr [rsp + 0x7f], r10b
0x581c:	mov	qword ptr [rsp + 0x80], r15
0x5824:	mov	qword ptr [rsp + 0x40], r14
0x5829:	mov	qword ptr [rsp + 0x70], r13
0x582e:	mov	qword ptr [rsp + 0x30], r11
0x5833:	mov	rax, qword ptr [rsp + 0x10]
0x5838:	lea	r14, [rbp + rbx]
0x583d:	mov	rdx, qword ptr [rsp + 0x30]
0x5842:	mov	rcx, qword ptr [rsp + 0x28]
0x5847:	mov	rdi, qword ptr [rsp + 0x38]
0x584c:	lea	r13, [rax + r14]
0x5850:	sub	rdx, r14
0x5853:	mov	rsi, r13
0x5856:	call	0x7700


0x5048:	mov	byte ptr [rsp + 0x38], r8b
0x504d:	mov	byte ptr [rsp + 0x30], r10b
0x5052:	mov	qword ptr [rsp + 0x28], r9
0x5057:	call	0x1680


0x507e:	mov	rdx, qword ptr [rsp + 0x18]
0x5083:	mov	rsi, qword ptr [rsp + 0x48]
0x5088:	mov	rdi, r9
0x508b:	mov	qword ptr [rsp + 0x40], r11
0x5090:	mov	byte ptr [rsp + 0x38], r8b
0x5095:	mov	qword ptr [rsp + 0x30], r9
0x509a:	call	0x1730


0x5630:	xor	r10d, r10d
0x5633:	jmp	0x50d0


0x6014:	mov	rdx, r15
0x6017:	sub	rax, r15
0x601a:	cmp	r13, rdx
0x601d:	jbe	0x6023


0x60dc:	movzx	eax, byte ptr [rsp + 0x7c]
0x60e1:	jmp	0x5ffc


0x56bf:	mov	r13, qword ptr [rsp + 0x50]
0x56c4:	lea	rbx, [rip + 0x2f0a]
0x56cb:	mov	byte ptr [r14], 0x27
0x56cf:	mov	dword ptr [rsp + 8], 2
0x56d7:	mov	r15d, 1
0x56dd:	mov	qword ptr [rsp + 0x18], 1
0x56e6:	mov	byte ptr [rsp + 0xf], 0
0x56eb:	mov	qword ptr [rsp + 0x48], rbx
0x56f0:	mov	byte ptr [rsp + 0x7c], al
0x56f4:	jmp	0x4fd3


0x6023:	add	rdx, 1
0x6027:	movzx	ecx, byte ptr [rax + rdx]
0x602b:	test	cl, cl
0x602d:	jne	0x601a


0x601f:	mov	byte ptr [r14 + rdx], cl
0x6023:	add	rdx, 1
0x6027:	movzx	ecx, byte ptr [rax + rdx]
0x602b:	test	cl, cl
0x602d:	jne	0x601a


0x4fd3:	xor	r11d, r11d
0x4fd6:	mov	rax, rbp
0x4fd9:	mov	r8d, r12d
0x4fdc:	mov	rbp, r11
0x4fdf:	mov	r11, rax
0x4fe2:	nop	word ptr [rax + rax]
0x4fe8:	cmp	r11, rbp
0x4feb:	setne	r12b
0x4fef:	cmp	r11, -1
0x4ff3:	jne	0x5002


0x602f:	mov	r15, rdx
0x6032:	cmp	r13, r15
0x6035:	jbe	0x5ad9


0x601a:	cmp	r13, rdx
0x601d:	jbe	0x6023


0x509f:	test	eax, eax
0x50a1:	mov	r9, qword ptr [rsp + 0x30]
0x50a6:	movzx	r8d, byte ptr [rsp + 0x38]
0x50ac:	mov	r11, qword ptr [rsp + 0x40]
0x50b1:	jne	0x5630


0x50b7:	cmp	byte ptr [rsp + 0xf], 0
0x50bc:	movzx	r10d, byte ptr [rsp + 0x28]
0x50c2:	jne	0x6045


0x6045:	cmp	dword ptr [rsp + 8], 2
0x604a:	movzx	ebx, byte ptr [rsp + 0xf]
0x604f:	mov	rbp, r11
0x6052:	sete	al
0x6055:	mov	byte ptr [rsp + 0xd], bl
0x6059:	jmp	0x5a89


0x585b:	test	rax, rax
0x585e:	mov	r15, rax
0x5861:	je	0x58b1


0x58b1:	mov	edx, r12d
0x58b4:	mov	rdi, rbx
0x58b7:	movzx	r8d, byte ptr [rsp + 0x7d]
0x58bd:	xor	edx, 1
0x58c0:	movzx	ebx, byte ptr [rsp + 0x7e]
0x58c5:	movzx	r10d, byte ptr [rsp + 0x7f]
0x58cb:	and	dl, byte ptr [rsp + 0xd]
0x58cf:	mov	r15, qword ptr [rsp + 0x80]
0x58d7:	mov	r14, qword ptr [rsp + 0x40]
0x58dc:	mov	r13, qword ptr [rsp + 0x70]
0x58e1:	mov	r11, qword ptr [rsp + 0x30]
0x58e6:	cmp	rdi, 1
0x58ea:	jbe	0x5eeb


0x5863:	cmp	rax, -1
0x5867:	je	0x5e85


0x5eeb:	mov	eax, edx
0x5eed:	jmp	0x5447


0x58f0:	mov	rcx, rdi
0x58f3:	xor	esi, esi
0x58f5:	movzx	r9d, byte ptr [rsp + 0xf]
0x58fb:	add	rcx, rbp
0x58fe:	mov	rdi, qword ptr [rsp + 0x10]
0x5903:	jmp	0x59be


0x5e85:	mov	rdi, rbx
0x5e88:	movzx	r8d, byte ptr [rsp + 0x7d]
0x5e8e:	movzx	ebx, byte ptr [rsp + 0x7e]
0x5e93:	movzx	r10d, byte ptr [rsp + 0x7f]
0x5e99:	mov	r15, qword ptr [rsp + 0x80]
0x5ea1:	xor	r12d, r12d
0x5ea4:	mov	r14, qword ptr [rsp + 0x40]
0x5ea9:	mov	r13, qword ptr [rsp + 0x70]
0x5eae:	mov	r11, qword ptr [rsp + 0x30]
0x5eb3:	movzx	edx, byte ptr [rsp + 0xd]
0x5eb8:	jmp	0x58e6


0x586d:	cmp	rax, -2
0x5871:	je	0x5e11


0x5447:	test	al, al
0x5449:	jne	0x5de1


0x59be:	test	dl, dl
0x59c0:	jne	0x5910


0x58e6:	cmp	rdi, 1
0x58ea:	jbe	0x5eeb


0x5e11:	mov	r11, qword ptr [rsp + 0x30]
0x5e16:	mov	rsi, r14
0x5e19:	mov	rcx, r13
0x5e1c:	mov	rax, rbx
0x5e1f:	mov	rdi, rbx
0x5e22:	movzx	r8d, byte ptr [rsp + 0x7d]
0x5e28:	movzx	ebx, byte ptr [rsp + 0x7e]
0x5e2d:	mov	r9, qword ptr [rsp + 0x88]
0x5e35:	cmp	rsi, r11
0x5e38:	movzx	r10d, byte ptr [rsp + 0x7f]
0x5e3e:	mov	r15, qword ptr [rsp + 0x80]
0x5e46:	mov	r14, qword ptr [rsp + 0x40]
0x5e4b:	mov	r13, qword ptr [rsp + 0x70]
0x5e50:	jae	0x5e78


0x5877:	cmp	dword ptr [rsp + 8], 2
0x587c:	sete	al
0x587f:	and	al, byte ptr [rsp + 0xf]
0x5883:	jne	0x5a20


0x544f:	cmp	dword ptr [rsp + 8], 2
0x5454:	sete	dl
0x5457:	jmp	0x5128


0x5de1:	movzx	edx, byte ptr [rsp + 0xd]
0x5de6:	xor	r12d, r12d
0x5de9:	jmp	0x58f0


0x59c6:	mov	eax, esi
0x59c8:	xor	eax, 1
0x59cb:	and	eax, r8d
0x59ce:	test	r10b, r10b
0x59d1:	je	0x59e1


0x5910:	cmp	dword ptr [rsp + 8], 2
0x5915:	sete	al
0x5918:	test	r9b, r9b
0x591b:	jne	0x5dd0


0x5e52:	cmp	byte ptr [rcx], 0
0x5e55:	jne	0x5e67


0x5e78:	movzx	edx, byte ptr [rsp + 0xd]
0x5e7d:	xor	r12d, r12d
0x5e80:	jmp	0x58e6


0x5889:	mov	edi, dword ptr [rsp + 0x9c]
0x5890:	call	0x18c0


0x5a20:	cmp	r15, 1
0x5a24:	je	0x5889


0x5128:	cmp	byte ptr [rsp + 0xd], 1
0x512d:	jne	0x5242


0x59e1:	add	rbp, 1
0x59e5:	cmp	rbp, rcx
0x59e8:	jae	0x516c


0x59d3:	cmp	r13, r15
0x59d6:	jbe	0x59dd


0x5921:	mov	esi, r8d
0x5924:	xor	esi, 1
0x5927:	and	al, sil
0x592a:	je	0x595b


0x5dd0:	movzx	ebx, byte ptr [rsp + 0xf]
0x5dd5:	mov	rbp, r11
0x5dd8:	mov	byte ptr [rsp + 0xd], bl
0x5ddc:	jmp	0x5a89


0x5e57:	jmp	0x5e78


0x5e67:	add	rax, 1
0x5e6b:	lea	rdx, [rbp + rax]
0x5e70:	cmp	r11, rdx
0x5e73:	ja	0x5e60


0x5a2a:	mov	rdi, qword ptr [rsp + 0x10]
0x5a2f:	lea	rcx, [rdi + r15]
0x5a33:	lea	rdx, [rdi + r14 + 1]
0x5a38:	lea	r8, [rcx + r14]
0x5a3c:	jmp	0x5a4d


0x5133:	test	dl, dl
0x5135:	jne	0x5242


0x5242:	cmp	byte ptr [rsp + 0xf], 0
0x5247:	jne	0x513b


0x59ee:	test	al, al
0x59f0:	je	0x5dee


0x516c:	test	al, al
0x516e:	je	0x5190


0x59dd:	add	r15, 1
0x59e1:	add	rbp, 1
0x59e5:	cmp	rbp, rcx
0x59e8:	jae	0x516c


0x59d8:	mov	byte ptr [r14 + r15], 0x5c
0x59dd:	add	r15, 1
0x59e1:	add	rbp, 1
0x59e5:	cmp	rbp, rcx
0x59e8:	jae	0x516c


0x595b:	cmp	r13, r15
0x595e:	jbe	0x5965


0x592c:	cmp	r13, r15
0x592f:	jbe	0x5936


0x5e75:	mov	rdi, rax
0x5e78:	movzx	edx, byte ptr [rsp + 0xd]
0x5e7d:	xor	r12d, r12d
0x5e80:	jmp	0x58e6


0x5e60:	cmp	byte ptr [r9 + rax], 0
0x5e65:	je	0x5e75


0x5a4d:	movzx	ecx, byte ptr [rdx]
0x5a50:	sub	ecx, 0x5b
0x5a53:	cmp	cl, 0x21
0x5a56:	ja	0x5a40


0x513b:	mov	rsi, qword ptr [rsp + 0x20]
0x5140:	test	rsi, rsi
0x5143:	je	0x5159


0x524d:	jmp	0x5159


0x5dee:	xor	r10d, r10d
0x5df1:	jmp	0x59ad


0x59f6:	cmp	r13, r15
0x59f9:	jbe	0x5a00


0x5190:	cmp	r15, r13
0x5193:	jae	0x5199


0x5170:	cmp	r13, r15
0x5173:	jbe	0x517a


0x5965:	lea	rax, [r15 + 1]
0x5969:	cmp	r13, rax
0x596c:	jbe	0x597b


0x5960:	mov	byte ptr [r14 + r15], 0x5c
0x5965:	lea	rax, [r15 + 1]
0x5969:	cmp	r13, rax
0x596c:	jbe	0x597b


0x5936:	lea	rsi, [r15 + 1]
0x593a:	cmp	r13, rsi
0x593d:	jbe	0x5945


0x5931:	mov	byte ptr [r14 + r15], 0x27
0x5936:	lea	rsi, [r15 + 1]
0x593a:	cmp	r13, rsi
0x593d:	jbe	0x5945


0x5a58:	mov	esi, 1
0x5a5d:	shl	rsi, cl
0x5a60:	mov	rcx, rsi
0x5a63:	movabs	rsi, 0x20000002b
0x5a6d:	test	rcx, rsi
0x5a70:	je	0x5a40


0x5a40:	add	rdx, 1
0x5a44:	cmp	r8, rdx
0x5a47:	je	0x5889


0x5159:	test	r10b, r10b
0x515c:	jne	0x52a3


0x5145:	mov	edx, ebx
0x5147:	shr	dl, 5
0x514a:	movzx	edx, dl
0x514d:	mov	edx, dword ptr [rsi + rdx*4]
0x5150:	bt	edx, ebx
0x5153:	jb	0x52a3


0x59ad:	cmp	r13, r15
0x59b0:	jbe	0x59b6


0x5a00:	lea	rax, [r15 + 1]
0x5a04:	cmp	r13, rax
0x5a07:	jbe	0x5a0f


0x59fb:	mov	byte ptr [r14 + r15], 0x27
0x5a00:	lea	rax, [r15 + 1]
0x5a04:	cmp	r13, rax
0x5a07:	jbe	0x5a0f


0x5195:	mov	byte ptr [r14 + r15], bl
0x5199:	movzx	edi, byte ptr [rsp + 0xe]
0x519e:	add	r15, 1
0x51a2:	mov	eax, 0
0x51a7:	test	r12b, r12b
0x51aa:	cmove	edi, eax
0x51ad:	mov	byte ptr [rsp + 0xe], dil
0x51b2:	jmp	0x4fe8


0x5199:	movzx	edi, byte ptr [rsp + 0xe]
0x519e:	add	r15, 1
0x51a2:	mov	eax, 0
0x51a7:	test	r12b, r12b
0x51aa:	cmove	edi, eax
0x51ad:	mov	byte ptr [rsp + 0xe], dil
0x51b2:	jmp	0x4fe8


0x517a:	lea	rax, [r15 + 1]
0x517e:	cmp	r13, rax
0x5181:	jbe	0x5189


0x5175:	mov	byte ptr [r14 + r15], 0x27
0x517a:	lea	rax, [r15 + 1]
0x517e:	cmp	r13, rax
0x5181:	jbe	0x5189


0x597b:	lea	rax, [r15 + 2]
0x597f:	cmp	r13, rax
0x5982:	jbe	0x5994


0x596e:	mov	eax, ebx
0x5970:	shr	al, 6
0x5973:	add	eax, 0x30
0x5976:	mov	byte ptr [r14 + r15 + 1], al
0x597b:	lea	rax, [r15 + 2]
0x597f:	cmp	r13, rax
0x5982:	jbe	0x5994


0x5945:	lea	rsi, [r15 + 2]
0x5949:	cmp	r13, rsi
0x594c:	jbe	0x5954


0x593f:	mov	byte ptr [r14 + r15 + 1], 0x24
0x5945:	lea	rsi, [r15 + 2]
0x5949:	cmp	r13, rsi
0x594c:	jbe	0x5954


0x5a72:	mov	r14, qword ptr [rsp + 0x40]
0x5a77:	mov	r13, qword ptr [rsp + 0x70]
0x5a7c:	mov	rbp, qword ptr [rsp + 0x30]
0x5a81:	mov	dword ptr [rsp + 8], 2
0x5a89:	cmp	byte ptr [rsp + 0xd], 0
0x5a8e:	je	0x5aa0


0x5162:	xor	eax, 1
0x5165:	add	rbp, 1
0x5169:	and	eax, r8d
0x516c:	test	al, al
0x516e:	je	0x5190


0x52a3:	cmp	dword ptr [rsp + 8], 2
0x52a8:	sete	dl
0x52ab:	cmp	byte ptr [rsp + 0xf], 0
0x52b0:	mov	eax, edx
0x52b2:	jne	0x5b08


0x59b6:	movzx	ebx, byte ptr [rdi + rbp]
0x59ba:	add	r15, 1
0x59be:	test	dl, dl
0x59c0:	jne	0x5910


0x59b2:	mov	byte ptr [r14 + r15], bl
0x59b6:	movzx	ebx, byte ptr [rdi + rbp]
0x59ba:	add	r15, 1
0x59be:	test	dl, dl
0x59c0:	jne	0x5910


0x5a0f:	add	r15, 2
0x5a13:	xor	r10d, r10d
0x5a16:	xor	r8d, r8d
0x5a19:	jmp	0x59ad


0x5a09:	mov	byte ptr [r14 + r15 + 1], 0x27
0x5a0f:	add	r15, 2
0x5a13:	xor	r10d, r10d
0x5a16:	xor	r8d, r8d
0x5a19:	jmp	0x59ad


0x4fe8:	cmp	r11, rbp
0x4feb:	setne	r12b
0x4fef:	cmp	r11, -1
0x4ff3:	jne	0x5002


0x5189:	add	r15, 2
0x518d:	xor	r8d, r8d
0x5190:	cmp	r15, r13
0x5193:	jae	0x5199


0x5183:	mov	byte ptr [r14 + r15 + 1], 0x27
0x5189:	add	r15, 2
0x518d:	xor	r8d, r8d
0x5190:	cmp	r15, r13
0x5193:	jae	0x5199


0x5994:	and	ebx, 7
0x5997:	add	rbp, 1
0x599b:	add	r15, 3
0x599f:	add	ebx, 0x30
0x59a2:	cmp	rbp, rcx
0x59a5:	jae	0x5190


0x5984:	mov	eax, ebx
0x5986:	shr	al, 3
0x5989:	and	eax, 7
0x598c:	add	eax, 0x30
0x598f:	mov	byte ptr [r14 + r15 + 2], al
0x5994:	and	ebx, 7
0x5997:	add	rbp, 1
0x599b:	add	r15, 3
0x599f:	add	ebx, 0x30
0x59a2:	cmp	rbp, rcx
0x59a5:	jae	0x5190


0x5954:	add	r15, 3
0x5958:	mov	r8d, eax
0x595b:	cmp	r13, r15
0x595e:	jbe	0x5965


0x594e:	mov	byte ptr [r14 + r15 + 2], 0x27
0x5954:	add	r15, 3
0x5958:	mov	r8d, eax
0x595b:	cmp	r13, r15
0x595e:	jbe	0x5965


0x52b8:	mov	eax, r8d
0x52bb:	xor	eax, 1
0x52be:	and	al, dl
0x52c0:	je	0x52f1


0x5b08:	mov	rbp, r11
0x5b0b:	jmp	0x5a89


0x59ab:	mov	esi, edx
0x59ad:	cmp	r13, r15
0x59b0:	jbe	0x59b6


0x52f1:	cmp	r13, r15
0x52f4:	jbe	0x52fb


0x52c2:	cmp	r13, r15
0x52c5:	jbe	0x52cc


0x52fb:	add	r15, 1
0x52ff:	add	rbp, 1
0x5303:	jmp	0x5190


0x52f6:	mov	byte ptr [r14 + r15], 0x5c
0x52fb:	add	r15, 1
0x52ff:	add	rbp, 1
0x5303:	jmp	0x5190


0x52cc:	lea	rdx, [r15 + 1]
0x52d0:	cmp	r13, rdx
0x52d3:	jbe	0x52db


0x52c7:	mov	byte ptr [r14 + r15], 0x27
0x52cc:	lea	rdx, [r15 + 1]
0x52d0:	cmp	r13, rdx
0x52d3:	jbe	0x52db


0x52db:	lea	rdx, [r15 + 2]
0x52df:	cmp	r13, rdx
0x52e2:	jbe	0x52ea


0x52d5:	mov	byte ptr [r14 + r15 + 1], 0x24
0x52db:	lea	rdx, [r15 + 2]
0x52df:	cmp	r13, rdx
0x52e2:	jbe	0x52ea


0x52ea:	add	r15, 3
0x52ee:	mov	r8d, eax
0x52f1:	cmp	r13, r15
0x52f4:	jbe	0x52fb


0x52e4:	mov	byte ptr [r14 + r15 + 2], 0x27
0x52ea:	add	r15, 3
0x52ee:	mov	r8d, eax
0x52f1:	cmp	r13, r15
0x52f4:	jbe	0x52fb


0x5895:	mov	rdi, qword ptr [rsp + 0x28]
0x589a:	test	eax, eax
0x589c:	mov	eax, 0
0x58a1:	cmove	r12d, eax
0x58a5:	add	rbx, r15
0x58a8:	call	0x18b0


0x58ad:	test	eax, eax
0x58af:	je	0x5833


0x5833:	mov	rax, qword ptr [rsp + 0x10]
0x5838:	lea	r14, [rbp + rbx]
0x583d:	mov	rdx, qword ptr [rsp + 0x30]
0x5842:	mov	rcx, qword ptr [rsp + 0x28]
0x5847:	mov	rdi, qword ptr [rsp + 0x38]
0x584c:	lea	r13, [rax + r14]
0x5850:	sub	rdx, r14
0x5853:	mov	rsi, r13
0x5856:	call	0x7700


0x505c:	movzx	r8d, byte ptr [rsp + 0x38]
0x5062:	movzx	r10d, byte ptr [rsp + 0x30]
0x5068:	mov	r11, rax
0x506b:	mov	r9, qword ptr [rsp + 0x28]
0x5070:	cmp	rbx, r11
0x5073:	mov	byte ptr [rsp + 0x28], r10b
0x5078:	ja	0x5630


0x57e0:	movzx	r8d, byte ptr [rsp + 0x40]
0x57e6:	movzx	r10d, byte ptr [rsp + 0x38]
0x57ec:	mov	r11, rax
0x57ef:	mov	r9, qword ptr [rsp + 0x30]
0x57f4:	lea	rax, [rsp + 0x9c]
0x57fc:	xor	ecx, ecx
0x57fe:	mov	byte ptr [rsp + 0x7e], bl
0x5802:	mov	byte ptr [rsp + 0x7d], r8b
0x5807:	mov	rbx, rcx
0x580a:	mov	qword ptr [rsp + 0x88], r9
0x5812:	mov	qword ptr [rsp + 0x38], rax
0x5817:	mov	byte ptr [rsp + 0x7f], r10b
0x581c:	mov	qword ptr [rsp + 0x80], r15
0x5824:	mov	qword ptr [rsp + 0x40], r14
0x5829:	mov	qword ptr [rsp + 0x70], r13
0x582e:	mov	qword ptr [rsp + 0x30], r11
0x5833:	mov	rax, qword ptr [rsp + 0x10]
0x5838:	lea	r14, [rbp + rbx]
0x583d:	mov	rdx, qword ptr [rsp + 0x30]
0x5842:	mov	rcx, qword ptr [rsp + 0x28]
0x5847:	mov	rdi, qword ptr [rsp + 0x38]
0x584c:	lea	r13, [rax + r14]
0x5850:	sub	rdx, r14
0x5853:	mov	rsi, r13
0x5856:	call	0x7700


0x5418:	mov	rcx, qword ptr [rax]
0x541b:	movzx	edx, bl
0x541e:	movzx	r10d, byte ptr [rsp + 0x28]
0x5424:	movzx	r8d, byte ptr [rsp + 0x30]
0x542a:	mov	r11, qword ptr [rsp + 0x38]
0x542f:	mov	edi, 1
0x5434:	movzx	eax, word ptr [rcx + rdx*2]
0x5438:	and	ax, 0x4000
0x543c:	setne	r12b
0x5440:	sete	al
0x5443:	and	al, byte ptr [rsp + 0xd]
0x5447:	test	al, al
0x5449:	jne	0x5de1


0x50f0:	xor	r10d, r10d
0x50f3:	cmp	r11, 1
0x50f7:	setne	al
0x50fa:	cmp	r11, -1
0x50fe:	jne	0x510c


0x5100:	mov	rax, qword ptr [rsp + 0x10]
0x5105:	cmp	byte ptr [rax + 1], 0
0x5109:	setne	al
0x510c:	cmp	dword ptr [rsp + 8], 2
0x5111:	sete	dl
0x5114:	test	al, al
0x5116:	je	0x5368


0x510c:	cmp	dword ptr [rsp + 8], 2
0x5111:	sete	dl
0x5114:	test	al, al
0x5116:	je	0x5368


0x5368:	test	rbp, rbp
0x536b:	jne	0x511c


0x511c:	xor	r12d, r12d
0x511f:	xor	eax, eax
0x5121:	nop	dword ptr [rax]
0x5128:	cmp	byte ptr [rsp + 0xd], 1
0x512d:	jne	0x5242


0x5371:	movzx	eax, byte ptr [rsp + 0xf]
0x5376:	and	al, dl
0x5378:	je	0x5128


0x537e:	mov	rbp, r11
0x5381:	mov	dword ptr [rsp + 8], 2
0x5389:	jmp	0x5a89


0x5788:	cmp	byte ptr [rsp + 0xf], 0
0x578d:	jne	0x5fb0


0x51d0:	cmp	eax, 5
0x51d3:	je	0x5748


0x5793:	xor	r12d, r12d
0x5796:	xor	eax, eax
0x5798:	mov	ebx, 0x3f
0x579d:	jmp	0x5159


0x5fb0:	mov	rbp, r11
0x5fb3:	movzx	eax, byte ptr [rsp + 0xf]
0x5fb8:	jmp	0x5a89


0x5748:	test	byte ptr [rsp + 0x78], 4
0x574d:	je	0x5770


0x51d9:	cmp	eax, 2
0x51dc:	mov	ebx, 0x3f
0x51e1:	sete	dl
0x51e4:	xor	r12d, r12d
0x51e7:	xor	eax, eax
0x51e9:	jmp	0x5128


0x5770:	xor	edx, edx
0x5772:	xor	r12d, r12d
0x5775:	xor	eax, eax
0x5777:	mov	ebx, 0x3f
0x577c:	jmp	0x5128


0x574f:	lea	rcx, [rbp + 2]
0x5753:	cmp	rcx, r11
0x5756:	jae	0x5770


0x5758:	mov	rax, qword ptr [rsp + 0x10]
0x575d:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x5762:	je	0x5ef2


0x5ef2:	movzx	ebx, byte ptr [rax + rcx]
0x5ef6:	cmp	bl, 0x3e
0x5ef9:	ja	0x5770


0x5eff:	movabs	rax, 0x7000a38200000000
0x5f09:	bt	rax, rbx
0x5f0d:	jae	0x5770


0x5f13:	cmp	byte ptr [rsp + 0xf], 0
0x5f18:	jne	0x6102


0x5f1e:	cmp	r13, r15
0x5f21:	jbe	0x5f28


0x6102:	mov	rbp, r11
0x6105:	jmp	0x5aa0


0x5f28:	lea	rax, [r15 + 1]
0x5f2c:	cmp	r13, rax
0x5f2f:	jbe	0x5f37


0x5f23:	mov	byte ptr [r14 + r15], 0x3f
0x5f28:	lea	rax, [r15 + 1]
0x5f2c:	cmp	r13, rax
0x5f2f:	jbe	0x5f37


0x5f37:	lea	rax, [r15 + 2]
0x5f3b:	cmp	r13, rax
0x5f3e:	jbe	0x5f46


0x5f31:	mov	byte ptr [r14 + r15 + 1], 0x22
0x5f37:	lea	rax, [r15 + 2]
0x5f3b:	cmp	r13, rax
0x5f3e:	jbe	0x5f46


0x5f46:	lea	rax, [r15 + 3]
0x5f4a:	cmp	r13, rax
0x5f4d:	jbe	0x5f55


0x5f40:	mov	byte ptr [r14 + r15 + 2], 0x22
0x5f46:	lea	rax, [r15 + 3]
0x5f4a:	cmp	r13, rax
0x5f4d:	jbe	0x5f55


0x5f55:	add	r15, 4
0x5f59:	xor	edx, edx
0x5f5b:	xor	r12d, r12d
0x5f5e:	xor	eax, eax
0x5f60:	mov	rbp, rcx
0x5f63:	jmp	0x5128


0x5f4f:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x5f55:	add	r15, 4
0x5f59:	xor	edx, edx
0x5f5b:	xor	r12d, r12d
0x5f5e:	xor	eax, eax
0x5f60:	mov	rbp, rcx
0x5f63:	jmp	0x5128


0x5700:	cmp	byte ptr [rsp + 0xf], 0
0x5705:	jne	0x5fb0


0x51fe:	mov	byte ptr [rsp + 0x7c], r12b
0x5203:	xor	edx, edx
0x5205:	xor	eax, eax
0x5207:	mov	ebx, 0x27
0x520c:	jmp	0x5128


0x570b:	test	r13, r13
0x570e:	je	0x5b10


0x5b10:	cmp	r13, r15
0x5b13:	jbe	0x5b1a


0x5714:	xor	edx, edx
0x5716:	cmp	qword ptr [rsp + 0x50], 0
0x571c:	jne	0x5b10


0x5b1a:	lea	rax, [r15 + 1]
0x5b1e:	cmp	r13, rax
0x5b21:	jbe	0x5b29


0x5b15:	mov	byte ptr [r14 + r15], 0x27
0x5b1a:	lea	rax, [r15 + 1]
0x5b1e:	cmp	r13, rax
0x5b21:	jbe	0x5b29


0x5722:	mov	qword ptr [rsp + 0x50], r13
0x5727:	add	r15, 3
0x572b:	xor	eax, eax
0x572d:	mov	byte ptr [rsp + 0x7c], r12b
0x5732:	xor	r8d, r8d
0x5735:	mov	r13, rdx
0x5738:	mov	ebx, 0x27
0x573d:	jmp	0x5159


0x5b29:	lea	rax, [r15 + 2]
0x5b2d:	cmp	r13, rax
0x5b30:	jbe	0x6122


0x5b23:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x5b29:	lea	rax, [r15 + 2]
0x5b2d:	cmp	r13, rax
0x5b30:	jbe	0x6122


0x6122:	mov	rdx, r13
0x6125:	mov	r13, qword ptr [rsp + 0x50]
0x612a:	jmp	0x5722


0x5b36:	mov	rdx, r13
0x5b39:	mov	byte ptr [r14 + r15 + 2], 0x27
0x5b3f:	mov	r13, qword ptr [rsp + 0x50]
0x5b44:	jmp	0x5722


0x5234:	cmp	byte ptr [rsp + 0xd], 0
0x5239:	jne	0x52a0


0x523b:	mov	ebx, edx
0x523d:	xor	r12d, r12d
0x5240:	xor	eax, eax
0x5242:	cmp	byte ptr [rsp + 0xf], 0
0x5247:	jne	0x513b


0x52a0:	xor	r12d, r12d
0x52a3:	cmp	dword ptr [rsp + 8], 2
0x52a8:	sete	dl
0x52ab:	cmp	byte ptr [rsp + 0xf], 0
0x52b0:	mov	eax, edx
0x52b2:	jne	0x5b08


0x5640:	cmp	byte ptr [rsp + 0xf], 0
0x5645:	jne	0x5fb0


0x5273:	cmp	byte ptr [rsp + 0xd], 0
0x5278:	je	0x5490


0x564b:	add	rbp, 1
0x564f:	mov	eax, r8d
0x5652:	xor	r12d, r12d
0x5655:	mov	ebx, 0x5c
0x565a:	jmp	0x516c


0x5490:	mov	edx, 0x5c
0x5495:	mov	ebx, 0x5c
0x549a:	jmp	0x5234


0x527e:	cmp	byte ptr [rsp + 0xf], 0
0x5283:	je	0x5490


0x5289:	cmp	qword ptr [rsp + 0x18], 0
0x528f:	jne	0x564b


0x5295:	mov	ebx, 0x5c
0x529a:	nop	word ptr [rax + rax]
0x52a0:	xor	r12d, r12d
0x52a3:	cmp	dword ptr [rsp + 8], 2
0x52a8:	sete	dl
0x52ab:	cmp	byte ptr [rsp + 0xf], 0
0x52b0:	mov	eax, edx
0x52b2:	jne	0x5b08


0x531b:	xor	edx, edx
0x531d:	test	byte ptr [rsp + 0x78], 1
0x5322:	je	0x523b


0x54e3:	cmp	dword ptr [rsp + 8], 2
0x54e8:	sete	dl
0x54eb:	cmp	byte ptr [rsp + 0xf], 0
0x54f0:	jne	0x608a


0x5328:	add	rbp, 1
0x532c:	jmp	0x4fe8


0x54f6:	mov	eax, r8d
0x54f9:	mov	rcx, r15
0x54fc:	xor	eax, 1
0x54ff:	and	al, dl
0x5501:	je	0x5530


0x608a:	movzx	ebx, byte ptr [rsp + 0xf]
0x608f:	mov	rbp, r11
0x6092:	mov	eax, edx
0x6094:	mov	byte ptr [rsp + 0xd], bl
0x6098:	jmp	0x5a89


0x5530:	cmp	r13, rcx
0x5533:	jbe	0x553a


0x5503:	cmp	r13, r15
0x5506:	jbe	0x550d


0x553a:	cmp	dword ptr [rsp + 8], 2
0x553f:	lea	r15, [rcx + 1]
0x5543:	je	0x5b49


0x5535:	mov	byte ptr [r14 + rcx], 0x5c
0x553a:	cmp	dword ptr [rsp + 8], 2
0x553f:	lea	r15, [rcx + 1]
0x5543:	je	0x5b49


0x550d:	lea	rcx, [r15 + 1]
0x5511:	cmp	r13, rcx
0x5514:	jbe	0x551c


0x5508:	mov	byte ptr [r14 + r15], 0x27
0x550d:	lea	rcx, [r15 + 1]
0x5511:	cmp	r13, rcx
0x5514:	jbe	0x551c


0x5b49:	mov	eax, r12d
0x5b4c:	mov	ebx, 0x30
0x5b51:	xor	r12d, r12d
0x5b54:	jmp	0x5159


0x5549:	lea	rax, [rbp + 1]
0x554d:	cmp	rax, r11
0x5550:	jae	0x556b


0x551c:	lea	rcx, [r15 + 2]
0x5520:	cmp	r13, rcx
0x5523:	ja	0x5b59


0x5516:	mov	byte ptr [r14 + r15 + 1], 0x24
0x551c:	lea	rcx, [r15 + 2]
0x5520:	cmp	r13, rcx
0x5523:	ja	0x5b59


0x5552:	mov	rax, qword ptr [rsp + 0x10]
0x5557:	movzx	eax, byte ptr [rax + rbp + 1]
0x555c:	mov	byte ptr [rsp + 0x28], al
0x5560:	sub	eax, 0x30
0x5563:	cmp	al, 9
0x5565:	jbe	0x5d99


0x556b:	mov	eax, r12d
0x556e:	mov	ebx, 0x30
0x5573:	xor	r12d, r12d
0x5576:	jmp	0x5128


0x5529:	lea	rcx, [r15 + 3]
0x552d:	mov	r8d, eax
0x5530:	cmp	r13, rcx
0x5533:	jbe	0x553a


0x5b59:	mov	byte ptr [r14 + r15 + 2], 0x27
0x5b5f:	jmp	0x5529


0x5d99:	cmp	r13, r15
0x5d9c:	jbe	0x5da3


0x5da3:	lea	rax, [rcx + 2]
0x5da7:	cmp	r13, rax
0x5daa:	jbe	0x5db2


0x5d9e:	mov	byte ptr [r14 + r15], 0x30
0x5da3:	lea	rax, [rcx + 2]
0x5da7:	cmp	r13, rax
0x5daa:	jbe	0x5db2


0x5db2:	mov	eax, r12d
0x5db5:	lea	r15, [rcx + 3]
0x5db9:	xor	r12d, r12d
0x5dbc:	mov	ebx, 0x30
0x5dc1:	jmp	0x5128


0x5dac:	mov	byte ptr [r14 + rcx + 2], 0x30
0x5db2:	mov	eax, r12d
0x5db5:	lea	r15, [rcx + 3]
0x5db9:	xor	r12d, r12d
0x5dbc:	mov	ebx, 0x30
0x5dc1:	jmp	0x5128


0x5222:	cmp	dword ptr [rsp + 8], 2
0x5227:	sete	al
0x522a:	and	al, byte ptr [rsp + 0xf]
0x522e:	jne	0x537e


0x55e0:	mov	edx, 0xd
0x55e5:	xor	r10d, r10d
0x55e8:	mov	ebx, 0x72
0x55ed:	jmp	0x5222


0x5b64:	test	ebx, ebx
0x5b66:	jne	0x4f93


0x5b6c:	mov	byte ptr [rsp + 0xd], 1
0x5b71:	test	r13, r13
0x5b74:	jne	0x610a


0x5b7a:	lea	rax, [rip + 0x2a54]
0x5b81:	mov	qword ptr [rsp + 0x50], 0
0x5b8a:	mov	byte ptr [rsp + 0xe], 1
0x5b8f:	mov	byte ptr [rsp + 0x7c], 0
0x5b94:	xor	r12d, r12d
0x5b97:	mov	byte ptr [rsp + 0xf], 0
0x5b9c:	mov	qword ptr [rsp + 0x18], 1
0x5ba5:	mov	qword ptr [rsp + 0x48], rax
0x5baa:	mov	r15d, 1
0x5bb0:	mov	dword ptr [rsp + 8], 2
0x5bb8:	jmp	0x4fd3


0x610a:	mov	byte ptr [rsp + 0xe], 1
0x610f:	xor	eax, eax
0x6111:	xor	r12d, r12d
0x6114:	mov	qword ptr [rsp + 0x50], 0
0x611d:	jmp	0x56c4


0x56c4:	lea	rbx, [rip + 0x2f0a]
0x56cb:	mov	byte ptr [r14], 0x27
0x56cf:	mov	dword ptr [rsp + 8], 2
0x56d7:	mov	r15d, 1
0x56dd:	mov	qword ptr [rsp + 0x18], 1
0x56e6:	mov	byte ptr [rsp + 0xf], 0
0x56eb:	mov	qword ptr [rsp + 0x48], rbx
0x56f0:	mov	byte ptr [rsp + 0x7c], al
0x56f4:	jmp	0x4fd3


0x5bc8:	test	r13, r13
0x5bcb:	je	0x5df6


0x5fbd:	lea	rax, [rip + 0x260f]
0x5fc4:	mov	byte ptr [rsp + 0xe], 1
0x5fc9:	mov	byte ptr [rsp + 0x7c], 0
0x5fce:	xor	r12d, r12d
0x5fd1:	mov	qword ptr [rsp + 0x50], 0
0x5fda:	mov	byte ptr [rsp + 0xf], 1
0x5fdf:	mov	byte ptr [rsp + 0xd], 1
0x5fe4:	mov	qword ptr [rsp + 0x18], 1
0x5fed:	xor	r15d, r15d
0x5ff0:	mov	qword ptr [rsp + 0x48], rax
0x5ff5:	jmp	0x4fd3


0x5df6:	mov	qword ptr [rsp + 0x50], 0
0x5dff:	mov	byte ptr [rsp + 0xe], 1
0x5e04:	xor	r12d, r12d
0x5e07:	mov	byte ptr [rsp + 0x7c], 0
0x5e0c:	jmp	0x5beb


0x5bd1:	mov	byte ptr [r14], 0x22
0x5bd5:	mov	byte ptr [rsp + 0xe], 1
0x5bda:	xor	r12d, r12d
0x5bdd:	mov	byte ptr [rsp + 0x7c], 0
0x5be2:	mov	qword ptr [rsp + 0x50], 0
0x5beb:	lea	rax, [rip + 0x29e1]
0x5bf2:	mov	byte ptr [rsp + 0xf], 0
0x5bf7:	mov	byte ptr [rsp + 0xd], 1
0x5bfc:	mov	qword ptr [rsp + 0x18], 1
0x5c05:	mov	r15d, 1
0x5c0b:	mov	qword ptr [rsp + 0x48], rax
0x5c10:	jmp	0x4fd3


0x5beb:	lea	rax, [rip + 0x29e1]
0x5bf2:	mov	byte ptr [rsp + 0xf], 0
0x5bf7:	mov	byte ptr [rsp + 0xd], 1
0x5bfc:	mov	qword ptr [rsp + 0x18], 1
0x5c05:	mov	r15d, 1
0x5c0b:	mov	qword ptr [rsp + 0x48], rax
0x5c10:	jmp	0x4fd3


0x5c15:	lea	rax, [rip + 0x29b7]
0x5c1c:	mov	byte ptr [rsp + 0xe], 1
0x5c21:	mov	byte ptr [rsp + 0x7c], 0
0x5c26:	xor	r12d, r12d
0x5c29:	mov	qword ptr [rsp + 0x50], 0
0x5c32:	mov	byte ptr [rsp + 0xf], 1
0x5c37:	mov	byte ptr [rsp + 0xd], 1
0x5c3c:	mov	qword ptr [rsp + 0x18], 1
0x5c45:	xor	r15d, r15d
0x5c48:	mov	qword ptr [rsp + 0x48], rax
0x5c4d:	mov	dword ptr [rsp + 8], 5
0x5c55:	jmp	0x4fd3


0x5c5a:	mov	byte ptr [rsp + 0xe], 1
0x5c5f:	mov	byte ptr [rsp + 0x7c], 0
0x5c64:	xor	r12d, r12d
0x5c67:	mov	qword ptr [rsp + 0x50], 0
0x5c70:	mov	byte ptr [rsp + 0xf], 0
0x5c75:	xor	r15d, r15d
0x5c78:	mov	byte ptr [rsp + 0xd], 1
0x5c7d:	mov	qword ptr [rsp + 0x18], 0
0x5c86:	mov	qword ptr [rsp + 0x48], 0
0x5c8f:	jmp	0x4fd3


0x5c94:	cmp	dword ptr [rsp + 8], 0xa
0x5c99:	je	0x5cf1


0x5cf1:	xor	r15d, r15d
0x5cf4:	test	ebx, ebx
0x5cf6:	je	0x5ebd


0x5c9b:	lea	rsi, [rip + 0x2935]
0x5ca2:	xor	edi, edi
0x5ca4:	mov	edx, 5
0x5ca9:	call	0x1660


0x5ebd:	mov	rdx, qword ptr [rsp + 0x68]
0x5ec2:	movzx	eax, byte ptr [rdx]
0x5ec5:	test	al, al
0x5ec7:	je	0x5cfc


0x5cfc:	test	ebx, ebx
0x5cfe:	mov	rbx, qword ptr [rsp + 0x60]
0x5d03:	setne	byte ptr [rsp + 0xf]
0x5d08:	xor	r12d, r12d
0x5d0b:	mov	rdi, rbx
0x5d0e:	call	0x1680


0x5ed9:	add	r15, 1
0x5edd:	movzx	eax, byte ptr [rdx + r15]
0x5ee2:	test	al, al
0x5ee4:	jne	0x5ed0


0x5ed5:	mov	byte ptr [r14 + r15], al
0x5ed9:	add	r15, 1
0x5edd:	movzx	eax, byte ptr [rdx + r15]
0x5ee2:	test	al, al
0x5ee4:	jne	0x5ed0


0x5ee6:	jmp	0x5cfc


0x5ed0:	cmp	r13, r15
0x5ed3:	jbe	0x5ed9


0x5d13:	mov	qword ptr [rsp + 0x48], rbx
0x5d18:	mov	qword ptr [rsp + 0x18], rax
0x5d1d:	mov	byte ptr [rsp + 0xe], 1
0x5d22:	mov	byte ptr [rsp + 0x7c], 0
0x5d27:	mov	qword ptr [rsp + 0x50], 0
0x5d30:	mov	byte ptr [rsp + 0xd], 1
0x5d35:	jmp	0x4fd3


0x5cae:	mov	rcx, rax
0x5cb1:	mov	qword ptr [rsp + 0x68], rax
0x5cb6:	lea	rax, [rip + 0x291a]
0x5cbd:	cmp	rcx, rax
0x5cc0:	je	0x605e


0x605e:	mov	esi, dword ptr [rsp + 8]
0x6062:	mov	rdi, rcx
0x6065:	call	0x4e10


0x5cc6:	lea	rsi, [rip + 0x2908]
0x5ccd:	xor	edi, edi
0x5ccf:	mov	edx, 5
0x5cd4:	call	0x1660


0x5cd9:	mov	rcx, rax
0x5cdc:	mov	qword ptr [rsp + 0x60], rax
0x5ce1:	lea	rax, [rip + 0x28ed]
0x5ce8:	cmp	rcx, rax
0x5ceb:	je	0x6074


0x6074:	mov	esi, dword ptr [rsp + 8]
0x6078:	mov	rdi, rcx
0x607b:	call	0x4e10


0x6080:	mov	qword ptr [rsp + 0x60], rax
0x6085:	jmp	0x5cf1


0x606a:	mov	qword ptr [rsp + 0x68], rax
0x606f:	jmp	0x5cc6


0x5d3a:	mov	byte ptr [rsp + 0xe], 1
0x5d3f:	mov	byte ptr [rsp + 0x7c], 0
0x5d44:	xor	r12d, r12d
0x5d47:	mov	qword ptr [rsp + 0x50], 0
0x5d50:	mov	byte ptr [rsp + 0xf], 0
0x5d55:	xor	r15d, r15d
0x5d58:	mov	byte ptr [rsp + 0xd], 0
0x5d5d:	mov	qword ptr [rsp + 0x18], 0
0x5d66:	mov	qword ptr [rsp + 0x48], 0
0x5d6f:	jmp	0x4fd3


0x5d74:	mov	byte ptr [rsp + 0xe], 1
0x5d79:	mov	byte ptr [rsp + 0x7c], 0
0x5d7e:	xor	r12d, r12d
0x5d81:	mov	qword ptr [rsp + 0x50], 0
0x5d8a:	mov	byte ptr [rsp + 0xf], 1
0x5d8f:	mov	byte ptr [rsp + 0xd], 1
0x5d94:	jmp	0x4fb3


0x4fb3:	lea	rax, [rip + 0x361b]
0x4fba:	mov	qword ptr [rsp + 0x18], 1
0x4fc3:	xor	r15d, r15d
0x4fc6:	mov	dword ptr [rsp + 8], 2
0x4fce:	mov	qword ptr [rsp + 0x48], rax
0x4fd3:	xor	r11d, r11d
0x4fd6:	mov	rax, rbp
0x4fd9:	mov	r8d, r12d
0x4fdc:	mov	rbp, r11
0x4fdf:	mov	r11, rax
0x4fe2:	nop	word ptr [rax + rax]
0x4fe8:	cmp	r11, rbp
0x4feb:	setne	r12b
0x4fef:	cmp	r11, -1
0x4ff3:	jne	0x5002


0x5f68:	test	ebx, ebx
0x5f6a:	je	0x60f8


0x60f8:	mov	byte ptr [rsp + 0xd], 0
0x60fd:	jmp	0x5b71


0x5f70:	lea	rax, [rip + 0x265e]
0x5f77:	mov	byte ptr [rsp + 0xe], 1
0x5f7c:	mov	byte ptr [rsp + 0x7c], 0
0x5f81:	xor	r12d, r12d
0x5f84:	mov	qword ptr [rsp + 0x50], 0
0x5f8d:	mov	byte ptr [rsp + 0xf], 1
0x5f92:	mov	byte ptr [rsp + 0xd], 0
0x5f97:	mov	qword ptr [rsp + 0x18], 1
0x5fa0:	xor	r15d, r15d
0x5fa3:	mov	qword ptr [rsp + 0x48], rax
0x5fa8:	jmp	0x4fd3


0x5b71:	test	r13, r13
0x5b74:	jne	0x610a


0x6134:	nop	
0x6136:	nop	word ptr cs:[rax + rax]


0x62eb:	nop	dword ptr [rax + rax]


0x6326:	nop	word ptr cs:[rax + rax]


0x6341:	nop	dword ptr [rax + rax]
0x6346:	nop	word ptr cs:[rax + rax]


0x6361:	nop	dword ptr [rax + rax]
0x6366:	nop	word ptr cs:[rax + rax]


0x63a5:	nop	
0x63a6:	nop	word ptr cs:[rax + rax]


0x63c5:	nop	
0x63c6:	nop	word ptr cs:[rax + rax]


0x6474:	nop	
0x6476:	nop	word ptr cs:[rax + rax]


0x6563:	nop	dword ptr [rax]
0x6566:	nop	word ptr cs:[rax + rax]


0x657a:	nop	word ptr [rax + rax]


0x6613:	nop	dword ptr [rax]
0x6616:	nop	word ptr cs:[rax + rax]


0x6633:	nop	dword ptr [rax]
0x6636:	nop	word ptr cs:[rax + rax]


0x664c:	nop	dword ptr [rax]


0x6668:	nop	dword ptr [rax + rax]


0x6684:	nop	
0x6686:	nop	word ptr cs:[rax + rax]


0x671e:	nop	


0x67aa:	nop	word ptr [rax + rax]


0x67bc:	nop	dword ptr [rax]


0x67cf:	nop	


0x6868:	nop	dword ptr [rax + rax]


0x6891:	nop	dword ptr [rax + rax]
0x6896:	nop	word ptr cs:[rax + rax]


0x68aa:	nop	word ptr [rax + rax]


0x693e:	nop	


0x69d1:	nop	dword ptr [rax + rax]
0x69d6:	nop	word ptr cs:[rax + rax]


0x69ec:	nop	dword ptr [rax]


0x6a07:	nop	word ptr [rax + rax]


0x6a23:	nop	dword ptr [rax]
0x6a26:	nop	word ptr cs:[rax + rax]


0x6a3c:	nop	dword ptr [rax]


0x6a54:	nop	
0x6a56:	nop	word ptr cs:[rax + rax]


0x6a73:	nop	dword ptr [rax]
0x6a76:	nop	word ptr cs:[rax + rax]


0x6a98:	nop	dword ptr [rax + rax]


0x6aae:	nop	


0x6ec7:	nop	word ptr [rax + rax]


0x6f68:	nop	dword ptr [rax + rax]


0x7045:	nop	
0x7046:	nop	word ptr cs:[rax + rax]


0x70ea:	nop	word ptr [rax + rax]


0x7114:	nop	
0x7116:	nop	word ptr cs:[rax + rax]


0x7122:	nop	dword ptr [rax]
0x7126:	nop	word ptr cs:[rax + rax]


0x7166:	nop	word ptr cs:[rax + rax]


0x7194:	nop	
0x7196:	nop	word ptr cs:[rax + rax]


0x7222:	nop	dword ptr [rax]
0x7226:	nop	word ptr cs:[rax + rax]


0x727a:	nop	word ptr [rax + rax]


0x7297:	nop	word ptr [rax + rax]


0x72ce:	nop	


0x72f8:	nop	dword ptr [rax + rax]


0x7313:	nop	word ptr cs:[rax + rax]
0x731d:	nop	dword ptr [rax]


0x7355:	nop	word ptr cs:[rax + rax]
0x735f:	nop	


0x73db:	nop	dword ptr [rax + rax]


0x765e:	nop	


0x76f7:	nop	word ptr [rax + rax]


0x7783:	nop	word ptr cs:[rax + rax]
0x778d:	nop	dword ptr [rax]


0x780d:	nop	dword ptr [rax]


0x78ac:	nop	dword ptr [rax]


0x7915:	nop	
0x7916:	nop	word ptr cs:[rax + rax]


0x7922:	nop	word ptr cs:[rax + rax]
0x792c:	nop	dword ptr [rax]


0x51c0:	xor	r10d, r10d
0x51c3:	mov	eax, dword ptr [rsp + 8]
0x51c7:	cmp	eax, 2
0x51ca:	je	0x5788


0x51f0:	xor	r10d, r10d
0x51f3:	cmp	dword ptr [rsp + 8], 2
0x51f8:	je	0x5700


0x5218:	mov	edx, 9
0x521d:	mov	ebx, 0x74
0x5222:	cmp	dword ptr [rsp + 8], 2
0x5227:	sete	al
0x522a:	and	al, byte ptr [rsp + 0xf]
0x522e:	jne	0x537e


0x5258:	mov	edx, 8
0x525d:	mov	ebx, 0x62
0x5262:	jmp	0x5234


0x5268:	cmp	dword ptr [rsp + 8], 2
0x526d:	je	0x5640


0x5310:	cmp	byte ptr [rsp + 0xd], 0
0x5315:	jne	0x54e3


0x5338:	cmp	dword ptr [rsp + 8], 2
0x533d:	sete	dl
0x5340:	xor	eax, eax
0x5342:	jmp	0x5128


0x5350:	mov	edx, 7
0x5355:	mov	ebx, 0x61
0x535a:	jmp	0x5234


0x5360:	cmp	dword ptr [rsp + 8], 2
0x5365:	sete	dl
0x5368:	test	rbp, rbp
0x536b:	jne	0x511c


0x5390:	cmp	dword ptr [rsp + 8], 2
0x5395:	sete	dl
0x5398:	xor	r12d, r12d
0x539b:	jmp	0x5371


0x53a0:	cmp	dword ptr [rsp + 8], 2
0x53a5:	mov	ebx, 0x20
0x53aa:	sete	dl
0x53ad:	jmp	0x5371


0x53b0:	mov	edx, 0xd
0x53b5:	mov	ebx, 0x72
0x53ba:	jmp	0x5222


0x53c0:	mov	edx, 0xc
0x53c5:	mov	ebx, 0x66
0x53ca:	jmp	0x5234


0x53d0:	mov	edx, 0xb
0x53d5:	mov	ebx, 0x76
0x53da:	jmp	0x5234


0x53e0:	mov	edx, 0xa
0x53e5:	mov	ebx, 0x6e
0x53ea:	jmp	0x5222


0x5480:	xor	r10d, r10d
0x5483:	cmp	byte ptr [rsp + 0xd], 0
0x5488:	jne	0x527e


0x54a0:	mov	edx, 0xc
0x54a5:	xor	r10d, r10d
0x54a8:	mov	ebx, 0x66
0x54ad:	jmp	0x5234


0x54b8:	mov	edx, 0xa
0x54bd:	xor	r10d, r10d
0x54c0:	mov	ebx, 0x6e
0x54c5:	jmp	0x5222


0x54d0:	mov	ebx, 0x61
0x54d5:	jmp	0x52a0


0x54e0:	xor	r10d, r10d
0x54e3:	cmp	dword ptr [rsp + 8], 2
0x54e8:	sete	dl
0x54eb:	cmp	byte ptr [rsp + 0xf], 0
0x54f0:	jne	0x608a


0x5580:	cmp	dword ptr [rsp + 8], 2
0x5585:	mov	r12d, r10d
0x5588:	sete	dl
0x558b:	xor	r10d, r10d
0x558e:	xor	eax, eax
0x5590:	jmp	0x5128


0x5598:	cmp	dword ptr [rsp + 8], 2
0x559d:	sete	dl
0x55a0:	xor	r10d, r10d
0x55a3:	jmp	0x5368


0x55b0:	cmp	dword ptr [rsp + 8], 2
0x55b5:	sete	dl
0x55b8:	xor	r10d, r10d
0x55bb:	xor	r12d, r12d
0x55be:	jmp	0x5371


0x55c8:	cmp	dword ptr [rsp + 8], 2
0x55cd:	mov	r12d, r10d
0x55d0:	mov	ebx, 0x20
0x55d5:	sete	dl
0x55d8:	xor	r10d, r10d
0x55db:	jmp	0x5371


0x55f8:	mov	ebx, 0x76
0x55fd:	jmp	0x52a0


0x5608:	mov	edx, 9
0x560d:	xor	r10d, r10d
0x5610:	mov	ebx, 0x74
0x5615:	jmp	0x5222


0x5620:	mov	ebx, 0x62
0x5625:	jmp	0x52a0


0x5bc0:	test	ebx, ebx
0x5bc2:	jne	0x5fbd


0x19fd:	nop	dword ptr [rax]


0x1a24:	nop	dword ptr [rax]


0x1a46:	nop	word ptr cs:[rax + rax]


0x1a9d:	nop	dword ptr [rax]


0x1aba:	nop	word ptr [rax + rax]


0x1ada:	nop	word ptr [rax + rax]


0x1aec:	nop	dword ptr [rax]


0x1b0a:	nop	word ptr [rax + rax]


0x1b1a:	nop	word ptr [rax + rax]


0x1b2a:	nop	word ptr [rax + rax]


0x1eee:	nop	


0x21cc:	nop	dword ptr [rax]


0x2217:	nop	word ptr [rax + rax]


0x2277:	nop	word ptr [rax + rax]


0x233e:	nop	


0x23ea:	nop	word ptr [rax + rax]


0x2a96:	nop	word ptr cs:[rax + rax]


0x2ae7:	nop	word ptr [rax + rax]


0x2b31:	nop	dword ptr [rax]


0x2b89:	nop	dword ptr [rax]


0x2b93:	nop	dword ptr [rax + rax]


0x2bbb:	nop	dword ptr [rax + rax]


0x2bf2:	nop	word ptr [rax + rax]


0x2c18:	nop	dword ptr [rax + rax]


0x2c53:	nop	dword ptr [rax + rax]


0x2cb5:	nop	dword ptr [rax]


0x2ccc:	nop	dword ptr [rax]


0x2ce2:	nop	word ptr [rax + rax]


0x2d6f:	nop	


0x2dbe:	nop	


0x2e3e:	nop	


0x2e86:	nop	word ptr cs:[rax + rax]


0x4765:	nop	dword ptr [rax]


0x47b3:	nop	dword ptr [rax + rax]


0x48e1:	nop	dword ptr [rax]


0x491c:	nop	dword ptr [rax]


0x495f:	nop	


0x49ae:	nop	


0x4a09:	nop	dword ptr [rax]


0x4a73:	nop	dword ptr [rax + rax]


0x4bc2:	nop	word ptr [rax + rax]


0x4c38:	nop	dword ptr [rax + rax]


0x4c65:	nop	dword ptr [rax]


0x4cbb:	nop	dword ptr [rax + rax]


0x4cf9:	nop	dword ptr [rax]


0x4d45:	nop	dword ptr [rax]


0x4e4c:	nop	dword ptr [rax]


0x4e9d:	nop	dword ptr [rax]


0x50c8:	nop	dword ptr [rax + rax]


0x51b7:	nop	word ptr [rax + rax]


0x51ee:	nop	


0x5211:	nop	dword ptr [rax]


0x5252:	nop	word ptr [rax + rax]


0x5264:	nop	dword ptr [rax]


0x5308:	nop	dword ptr [rax + rax]


0x5331:	nop	dword ptr [rax]


0x5347:	nop	word ptr [rax + rax]


0x535f:	nop	


0x538e:	nop	


0x539d:	nop	dword ptr [rax]


0x53af:	nop	


0x53bf:	nop	


0x53cf:	nop	


0x53df:	nop	


0x53ef:	nop	


0x545c:	nop	dword ptr [rax]


0x547c:	nop	dword ptr [rax]


0x548e:	nop	


0x549f:	nop	


0x54b2:	nop	word ptr [rax + rax]


0x54ca:	nop	word ptr [rax + rax]


0x54da:	nop	word ptr [rax + rax]


0x557b:	nop	dword ptr [rax + rax]


0x5595:	nop	dword ptr [rax]


0x55a8:	nop	dword ptr [rax + rax]


0x55c3:	nop	dword ptr [rax + rax]


0x55f2:	nop	word ptr [rax + rax]


0x5602:	nop	word ptr [rax + rax]


0x561a:	nop	word ptr [rax + rax]


0x562a:	nop	word ptr [rax + rax]


0x5638:	nop	dword ptr [rax + rax]


0x565f:	nop	


0x56f9:	nop	dword ptr [rax]


0x5742:	nop	word ptr [rax + rax]


0x5768:	nop	dword ptr [rax + rax]


0x5781:	nop	dword ptr [rax]


0x57a2:	nop	word ptr [rax + rax]


0x5908:	nop	dword ptr [rax + rax]


0x5a1b:	nop	dword ptr [rax + rax]


0x5a3e:	nop	


0x5b05:	nop	dword ptr [rax]


0x5bbd:	nop	dword ptr [rax]


0x5dc6:	nop	word ptr cs:[rax + rax]


0x5e59:	nop	dword ptr [rax]


0x5ecd:	nop	dword ptr [rax]


0x5fad:	nop	dword ptr [rax]


0x62bb:	nop	dword ptr [rax + rax]


0x6b56:	nop	word ptr cs:[rax + rax]


0x6be5:	nop	dword ptr [rax]


0x6c06:	nop	word ptr cs:[rax + rax]


0x6c65:	nop	dword ptr [rax]


0x6ca1:	nop	dword ptr [rax]


0x6ce8:	nop	dword ptr [rax + rax]


0x6d37:	nop	word ptr [rax + rax]


0x6d94:	nop	dword ptr [rax]


0x6dc2:	nop	word ptr [rax + rax]


0x6e76:	nop	word ptr cs:[rax + rax]


0x6ed9:	nop	dword ptr [rax]


0x7152:	nop	word ptr [rax + rax]


0x71d9:	nop	dword ptr [rax]


0x7204:	nop	dword ptr [rax]


0x725d:	nop	dword ptr [rax]


0x73a5:	nop	dword ptr [rax]


0x747b:	nop	dword ptr [rax + rax]


0x74a6:	nop	word ptr cs:[rax + rax]


0x74df:	nop	


0x7529:	nop	dword ptr [rax]


0x754b:	nop	dword ptr [rax + rax]


0x75f1:	nop	dword ptr [rax]


0x7683:	nop	dword ptr [rax + rax]


0x76af:	nop	


0x77c4:	nop	dword ptr [rax]


0x77e1:	nop	dword ptr [rax]


0x77f2:	nop	word ptr [rax + rax]


0x784a:	nop	word ptr [rax + rax]


0x7896:	nop	word ptr cs:[rax + rax]


