0x1470: sub rsp,8
0x1474: mov rax,qword ptr [rip + 0x206b65]
0x147b: test rax,rax
0x147e: je 0x1482
0x1480: call rax
0x1482: add rsp,8
0x1486: ret 
0x1490: push qword ptr [rip + 0x20699a]
0x1496: jmp qword ptr [rip + 0x20699c]
0x149c: nop dword ptr [rax]
0x14a6: push 0
0x14ab: jmp 0x1490
0x14b6: push 1
0x14bb: jmp 0x1490
0x14c6: push 2
0x14cb: jmp 0x1490
0x14d6: push 3
0x14db: jmp 0x1490
0x14e0: jmp qword ptr [rip + 0x20697a]
0x14e6: push 4
0x14eb: jmp 0x1490
0x14f6: push 5
0x14fb: jmp 0x1490
0x1500: jmp qword ptr [rip + 0x20696a]
0x1506: push 6
0x150b: jmp 0x1490
0x1510: jmp qword ptr [rip + 0x206962]
0x1516: push 7
0x151b: jmp 0x1490
0x1526: push 8
0x152b: jmp 0x1490
0x1536: push 9
0x153b: jmp 0x1490
0x1540: jmp qword ptr [rip + 0x20694a]
0x1546: push 0xa
0x154b: jmp 0x1490
0x1556: push 0xb
0x155b: jmp 0x1490
0x1566: push 0xc
0x156b: jmp 0x1490
0x1576: push 0xd
0x157b: jmp 0x1490
0x1586: push 0xe
0x158b: jmp 0x1490
0x1590: jmp qword ptr [rip + 0x206922]
0x1596: push 0xf
0x159b: jmp 0x1490
0x15a6: push 0x10
0x15ab: jmp 0x1490
0x15b6: push 0x11
0x15bb: jmp 0x1490
0x15c6: push 0x12
0x15cb: jmp 0x1490
0x15d6: push 0x13
0x15db: jmp 0x1490
0x15e0: jmp qword ptr [rip + 0x2068fa]
0x15e6: push 0x14
0x15eb: jmp 0x1490
0x15f6: push 0x15
0x15fb: jmp 0x1490
0x1606: push 0x16
0x160b: jmp 0x1490
0x1616: push 0x17
0x161b: jmp 0x1490
0x1620: jmp qword ptr [rip + 0x2068da]
0x1626: push 0x18
0x162b: jmp 0x1490
0x1636: push 0x19
0x163b: jmp 0x1490
0x1646: push 0x1a
0x164b: jmp 0x1490
0x1656: push 0x1b
0x165b: jmp 0x1490
0x1666: push 0x1c
0x166b: jmp 0x1490
0x1670: jmp qword ptr [rip + 0x2068b2]
0x1676: push 0x1d
0x167b: jmp 0x1490
0x1686: push 0x1e
0x168b: jmp 0x1490
0x1690: jmp qword ptr [rip + 0x2068a2]
0x1696: push 0x1f
0x169b: jmp 0x1490
0x16a6: push 0x20
0x16ab: jmp 0x1490
0x16b0: jmp qword ptr [rip + 0x206892]
0x16b6: push 0x21
0x16bb: jmp 0x1490
0x16c0: jmp qword ptr [rip + 0x20688a]
0x16c6: push 0x22
0x16cb: jmp 0x1490
0x16d6: push 0x23
0x16db: jmp 0x1490
0x16e6: push 0x24
0x16eb: jmp 0x1490
0x16f6: push 0x25
0x16fb: jmp 0x1490
0x1706: push 0x26
0x170b: jmp 0x1490
0x1710: jmp qword ptr [rip + 0x206862]
0x1716: push 0x27
0x171b: jmp 0x1490
0x1726: push 0x28
0x172b: jmp 0x1490
0x1736: push 0x29
0x173b: jmp 0x1490
0x1746: push 0x2a
0x174b: jmp 0x1490
0x1756: push 0x2b
0x175b: jmp 0x1490
0x1766: push 0x2c
0x176b: jmp 0x1490
0x1776: push 0x2d
0x177b: jmp 0x1490
0x1786: push 0x2e
0x178b: jmp 0x1490
0x1796: push 0x2f
0x179b: jmp 0x1490
0x17a6: push 0x30
0x17ab: jmp 0x1490
0x17b6: push 0x31
0x17bb: jmp 0x1490
0x17c0: jmp qword ptr [rip + 0x20682a]
0x18c7: nop word ptr [rax + rax]
0x1921: nop dword ptr [rax]
0x194a: jmp 0x18a6
0x194f: nop 
0x1aa0: xor ebx,ebx
0x1aa2: nop word ptr [rax + rax]
0x1afd: jmp 0x1a6a
0x1b02: test r13b,r13b
0x1b05: je 0x1d9e
0x1b0b: xor ebp,ebp
0x1b0d: cmp r12d,eax
0x1b10: jle 0x1b16
0x1b12: lea rbp,[rbx + rax*8]
0x1b16: test r15b,r15b
0x1b19: je 0x1bfb
0x1b1f: lea r12,[rsp + 0x40]
0x1b24: xor r13d,r13d
0x1b27: mov ebx,1
0x1b2c: nop dword ptr [rax]
0x1b30: mov rsi,r12
0x1b33: mov edi,ebx
0x1b35: call 0x4d60
0x1b3a: test eax,eax
0x1b3c: jne 0x1b83
0x1b3e: mov rdx,r12
0x1b41: mov ecx,dword ptr [rdx]
0x1b43: add rdx,4
0x1b47: lea eax,[rcx - 0x1010101]
0x1b4d: not ecx
0x1b4f: and eax,ecx
0x1b51: and eax,0x80808080
0x1b56: je 0x1b41
0x1b58: mov ecx,eax
0x1b5a: shr ecx,0x10
0x1b5d: test eax,0x8080
0x1b62: cmove eax,ecx
0x1b65: lea rcx,[rdx + 2]
0x1b69: mov esi,eax
0x1b6b: cmove rdx,rcx
0x1b6f: add sil,al
0x1b72: mov eax,r13d
0x1b75: sbb rdx,3
0x1b79: sub rdx,r12
0x1b7c: cmp rdx,rax
0x1b7f: cmova r13d,edx
0x1b83: add ebx,1
0x1b86: cmp ebx,0x41
0x1b89: jne 0x1b30
0x1b8b: xor ebx,ebx
0x1b8d: test rbp,rbp
0x1b90: lea r14,[rip + 0x3635]
0x1b97: jne 0x1ba7
0x1b99: jmp 0x1c8c
0x1b9e: mov ebx,1
0x1ba3: add rbp,8
0x1ba7: mov rdi,qword ptr [rbp]
0x1bab: test rdi,rdi
0x1bae: je 0x1aa8
0x1bb4: mov rsi,r12
0x1bb7: call 0x22a0
0x1bbc: test eax,eax
0x1bbe: mov r15d,eax
0x1bc1: js 0x1b9e
0x1bc3: mov edi,eax
0x1bc5: call 0x16c0
0x1bca: test rax,rax
0x1bcd: lea rsi,[rip + 0x364b]
0x1bd4: mov ecx,r15d
0x1bd7: cmove rax,r14
0x1bdb: sub rsp,8
0x1bdf: mov r9,r12
0x1be2: push rax
0x1be3: mov r8d,r13d
0x1be6: mov edx,2
0x1beb: mov edi,1
0x1bf0: xor eax,eax
0x1bf2: call 0x16f0
0x1bf7: pop rcx
0x1bf8: pop rsi
0x1bf9: jmp 0x1ba3
0x1bfb: xor ebx,ebx
0x1bfd: test rbp,rbp
0x1c00: lea r12,[rsp + 0x40]
0x1c05: jne 0x1c24
0x1c07: jmp 0x1c5b
0x1c09: mov rdx,qword ptr [rbp]
0x1c0d: movsx ecx,byte ptr [rdx]
0x1c10: sub ecx,0x30
0x1c13: cmp ecx,9
0x1c16: ja 0x1c44
0x1c18: mov rdi,r12
0x1c1b: call 0x1510
0x1c20: add rbp,8
0x1c24: mov rdi,qword ptr [rbp]
0x1c28: test rdi,rdi
0x1c2b: je 0x1aa8
0x1c31: mov rsi,r12
0x1c34: call 0x22a0
0x1c39: test eax,eax
0x1c3b: jns 0x1c09
0x1c3d: mov ebx,1
0x1c42: jmp 0x1c20
0x1c44: lea rsi,[rip + 0x35e1]
0x1c4b: mov edx,eax
0x1c4d: mov edi,1
0x1c52: xor eax,eax
0x1c54: call 0x16f0
0x1c59: jmp 0x1c20
0x1c5b: mov ebx,1
0x1c60: jmp 0x1c74
0x1c62: nop word ptr [rax + rax]
0x1c68: add ebx,1
0x1c6b: cmp ebx,0x41
0x1c6e: je 0x1aa0
0x1c74: mov rsi,r12
0x1c77: mov edi,ebx
0x1c79: call 0x4d60
0x1c7e: test eax,eax
0x1c80: jne 0x1c68
0x1c82: mov rdi,r12
0x1c85: call 0x1510
0x1c8a: jmp 0x1c68
0x1c8c: mov ebx,1
0x1c91: mov rbp,r14
0x1c94: jmp 0x1cac
0x1c96: nop word ptr cs:[rax + rax]
0x1ca0: add ebx,1
0x1ca3: cmp ebx,0x41
0x1ca6: je 0x1aa0
0x1cac: mov rsi,r12
0x1caf: mov edi,ebx
0x1cb1: call 0x4d60
0x1cb6: test eax,eax
0x1cb8: jne 0x1ca0
0x1cba: mov edi,ebx
0x1cbc: call 0x16c0
0x1cc1: test rax,rax
0x1cc4: lea rsi,[rip + 0x3554]
0x1ccb: mov edx,2
0x1cd0: cmove rax,rbp
0x1cd4: sub rsp,8
0x1cd8: mov r9,r12
0x1cdb: push rax
0x1cdc: mov r8d,r13d
0x1cdf: mov ecx,ebx
0x1ce1: mov edi,1
0x1ce6: xor eax,eax
0x1ce8: call 0x16f0
0x1ced: pop rax
0x1cee: pop rdx
0x1cef: jmp 0x1ca0
0x1d31: mov edi,1
0x1d36: call 0x1ec0
0x1d3b: call 0x1590
0x1d61: jmp 0x18a6
0x1d94: mov edi,1
0x1d99: call 0x1ec0
0x1d9e: mov ebp,0xf
0x1da3: jmp 0x19f5
0x1da8: nop dword ptr [rax + rax]
0x1dda: hlt 
0x1ddb: nop dword ptr [rax + rax]
0x1de0: lea rdi,[rip + 0x206441]
0x1de7: push rbp
0x1de8: lea rax,[rip + 0x206439]
0x1def: cmp rax,rdi
0x1df2: mov rbp,rsp
0x1df5: je 0x1e10
0x1df7: mov rax,qword ptr [rip + 0x2061d2]
0x1dfe: test rax,rax
0x1e01: je 0x1e10
0x1e03: pop rbp
0x1e04: jmp rax
0x1e06: nop word ptr cs:[rax + rax]
0x1e10: pop rbp
0x1e11: ret 
0x1e12: nop dword ptr [rax]
0x1e16: nop word ptr cs:[rax + rax]
0x1e20: lea rdi,[rip + 0x206401]
0x1e27: lea rsi,[rip + 0x2063fa]
0x1e2e: push rbp
0x1e2f: sub rsi,rdi
0x1e32: mov rbp,rsp
0x1e35: sar rsi,3
0x1e39: mov rax,rsi
0x1e3c: shr rax,0x3f
0x1e40: add rsi,rax
0x1e43: sar rsi,1
0x1e46: je 0x1e60
0x1e48: mov rax,qword ptr [rip + 0x206199]
0x1e4f: test rax,rax
0x1e52: je 0x1e60
0x1e54: pop rbp
0x1e55: jmp rax
0x1e57: nop word ptr [rax + rax]
0x1e60: pop rbp
0x1e61: ret 
0x1e62: nop dword ptr [rax]
0x1e66: nop word ptr cs:[rax + rax]
0x1e70: cmp byte ptr [rip + 0x206411],0
0x1e77: jne 0x1ea8
0x1e79: cmp qword ptr [rip + 0x20616f],0
0x1e81: push rbp
0x1e82: mov rbp,rsp
0x1e85: je 0x1e93
0x1e87: mov rdi,qword ptr [rip + 0x20617a]
0x1e8e: call 0x17c0
0x1e93: call 0x1de0
0x1e98: mov byte ptr [rip + 0x2063e9],1
0x1e9f: pop rbp
0x1ea0: ret 
0x1ea1: nop dword ptr [rax]
0x1ea8: ret 
0x1eaa: nop word ptr [rax + rax]
0x1eb0: push rbp
0x1eb1: mov rbp,rsp
0x1eb4: pop rbp
0x1eb5: jmp 0x1e20
0x1eba: nop word ptr [rax + rax]
0x229a: nop word ptr [rax + rax]
0x234f: mov eax,0xffffffff
0x2354: jmp 0x23e0
0x2359: nop dword ptr [rax]
0x2403: nop dword ptr [rax + rax]
0x2424: nop dword ptr [rax]
0x244b: nop dword ptr [rax + rax]
0x247c: call 0x1590
0x2481: nop word ptr cs:[rax + rax]
0x248b: nop dword ptr [rax + rax]
0x2490: mov qword ptr [rip + 0x205e01],rdi
0x2497: ret 
0x2498: nop dword ptr [rax + rax]
0x24a0: mov byte ptr [rip + 0x205de9],dil
0x24a7: ret 
0x24a8: nop dword ptr [rax + rax]
0x24b0: push rbp
0x24b1: push rbx
0x24b2: sub rsp,8
0x24b6: mov rdi,qword ptr [rip + 0x205d8b]
0x24bd: call 0x4e40
0x24c2: test eax,eax
0x24c4: je 0x24dc
0x24c6: call 0x14c0
0x24cb: cmp byte ptr [rip + 0x205dbe],0
0x24d2: mov rbx,rax
0x24d5: je 0x24f3
0x24d7: cmp dword ptr [rax],0x20
0x24da: jne 0x24f3
0x24dc: mov rdi,qword ptr [rip + 0x205d9d]
0x24e3: call 0x4e40
0x24e8: test eax,eax
0x24ea: jne 0x2532
0x24ec: add rsp,8
0x24f0: pop rbx
0x24f1: pop rbp
0x24f2: ret 
0x24f3: lea rsi,[rip + 0x330a]
0x24fa: xor edi,edi
0x24fc: mov edx,5
0x2501: call 0x1560
0x2506: mov rdi,qword ptr [rip + 0x205d8b]
0x250d: mov rbp,rax
0x2510: test rdi,rdi
0x2513: je 0x253d
0x2515: call 0x4070
0x251a: mov esi,dword ptr [rbx]
0x251c: lea rdx,[rip + 0x32ed]
0x2523: mov rcx,rax
0x2526: mov r8,rbp
0x2529: xor edi,edi
0x252b: xor eax,eax
0x252d: call 0x1700
0x2532: mov edi,dword ptr [rip + 0x205ae0]
0x2538: call 0x14e0
0x253d: mov esi,dword ptr [rbx]
0x253f: lea rdx,[rip + 0x32ce]
0x2546: mov rcx,rax
0x2549: xor edi,edi
0x254b: xor eax,eax
0x254d: call 0x1700
0x2552: jmp 0x2532
0x2554: nop word ptr cs:[rax + rax]
0x255e: nop 
0x25ff: nop 
0x263c: nop dword ptr [rax]
0x268d: nop dword ptr [rax]
0x26e7: nop word ptr [rax + rax]
0x29a7: nop word ptr [rax + rax]
0x29de: nop 
0x2a01: nop dword ptr [rax]
0x2a42: nop word ptr [rax + rax]
0x2a54: nop dword ptr [rax]
0x2af8: nop dword ptr [rax + rax]
0x2b21: nop dword ptr [rax]
0x2b37: nop word ptr [rax + rax]
0x2b4f: nop 
0x2b7e: nop 
0x2b8d: nop dword ptr [rax]
0x2b9f: nop 
0x2baf: nop 
0x2bbf: nop 
0x2bcf: nop 
0x2bdf: nop 
0x2c4c: nop dword ptr [rax]
0x2c6c: nop dword ptr [rax]
0x2c8f: nop 
0x2ca2: nop word ptr [rax + rax]
0x2cba: nop word ptr [rax + rax]
0x2cca: nop word ptr [rax + rax]
0x2d6b: nop dword ptr [rax + rax]
0x2d85: nop dword ptr [rax]
0x2d98: nop dword ptr [rax + rax]
0x2db3: nop dword ptr [rax + rax]
0x2de2: nop word ptr [rax + rax]
0x2df2: nop word ptr [rax + rax]
0x2e0a: nop word ptr [rax + rax]
0x2e1a: nop word ptr [rax + rax]
0x2e28: nop dword ptr [rax + rax]
0x2e4f: nop 
0x2ee9: nop dword ptr [rax]
0x2f32: nop word ptr [rax + rax]
0x2f71: nop dword ptr [rax]
0x2f92: nop word ptr [rax + rax]
0x30f8: nop dword ptr [rax + rax]
0x320b: nop dword ptr [rax + rax]
0x322e: nop 
0x32f5: nop dword ptr [rax]
0x33ad: nop dword ptr [rax]
0x35b6: nop word ptr cs:[rax + rax]
0x3649: nop dword ptr [rax]
0x379d: nop dword ptr [rax]
0x38e3: call 0x1590
0x3924: nop 
0x3926: nop word ptr cs:[rax + rax]
0x3aab: nop dword ptr [rax + rax]
0x3ad1: call 0x14b0
0x3ad6: call 0x4b00
0x3adb: nop dword ptr [rax + rax]
0x3ae0: push r12
0x3ae2: push rbp
0x3ae3: push rbx
0x3ae4: mov rbx,rdi
0x3ae7: call 0x14c0
0x3aec: mov r12d,dword ptr [rax]
0x3aef: mov rbp,rax
0x3af2: lea rax,[rip + 0x2048c7]
0x3af9: test rbx,rbx
0x3afc: mov esi,0x38
0x3b01: cmove rbx,rax
0x3b05: mov rdi,rbx
0x3b08: call 0x4ab0
0x3b0d: mov dword ptr [rbp],r12d
0x3b11: pop rbx
0x3b12: pop rbp
0x3b13: pop r12
0x3b15: ret 
0x3b16: nop word ptr cs:[rax + rax]
0x3b20: lea rax,[rip + 0x204899]
0x3b27: test rdi,rdi
0x3b2a: cmove rdi,rax
0x3b2e: mov eax,dword ptr [rdi]
0x3b30: ret 
0x3b31: nop dword ptr [rax + rax]
0x3b36: nop word ptr cs:[rax + rax]
0x3b40: lea rax,[rip + 0x204879]
0x3b47: test rdi,rdi
0x3b4a: cmove rdi,rax
0x3b4e: mov dword ptr [rdi],esi
0x3b50: ret 
0x3b51: nop dword ptr [rax + rax]
0x3b56: nop word ptr cs:[rax + rax]
0x3b60: lea rax,[rip + 0x204859]
0x3b67: test rdi,rdi
0x3b6a: mov ecx,esi
0x3b6c: cmove rdi,rax
0x3b70: mov eax,esi
0x3b72: and ecx,0x1f
0x3b75: shr al,5
0x3b78: movzx eax,al
0x3b7b: lea rdi,[rdi + rax*4 + 8]
0x3b80: mov esi,dword ptr [rdi]
0x3b82: mov eax,esi
0x3b84: shr eax,cl
0x3b86: xor edx,eax
0x3b88: and eax,1
0x3b8b: and edx,1
0x3b8e: shl edx,cl
0x3b90: xor edx,esi
0x3b92: mov dword ptr [rdi],edx
0x3b94: ret 
0x3b95: nop 
0x3b96: nop word ptr cs:[rax + rax]
0x3ba0: lea rax,[rip + 0x204819]
0x3ba7: test rdi,rdi
0x3baa: cmove rdi,rax
0x3bae: mov eax,dword ptr [rdi + 4]
0x3bb1: mov dword ptr [rdi + 4],esi
0x3bb4: ret 
0x3bb5: nop 
0x3bb6: nop word ptr cs:[rax + rax]
0x3bc0: lea rax,[rip + 0x2047f9]
0x3bc7: test rdi,rdi
0x3bca: cmove rdi,rax
0x3bce: test rsi,rsi
0x3bd1: mov dword ptr [rdi],0xa
0x3bd7: je 0x3be7
0x3bd9: test rdx,rdx
0x3bdc: je 0x3be7
0x3bde: mov qword ptr [rdi + 0x28],rsi
0x3be2: mov qword ptr [rdi + 0x30],rdx
0x3be6: ret 
0x3be7: sub rsp,8
0x3beb: call 0x14b0
0x3bf0: push r15
0x3bf2: push r14
0x3bf4: lea rax,[rip + 0x2047c5]
0x3bfb: push r13
0x3bfd: push r12
0x3bff: mov r13,rdi
0x3c02: push rbp
0x3c03: push rbx
0x3c04: mov rbx,r8
0x3c07: mov r14,rsi
0x3c0a: mov r15,rdx
0x3c0d: sub rsp,0x18
0x3c11: test r8,r8
0x3c14: cmove rbx,rax
0x3c18: mov qword ptr [rsp + 8],rcx
0x3c1d: call 0x14c0
0x3c22: mov r12d,dword ptr [rax]
0x3c25: mov rbp,rax
0x3c28: lea rax,[rbx + 8]
0x3c2c: sub rsp,8
0x3c30: mov r9d,dword ptr [rbx + 4]
0x3c34: push qword ptr [rbx + 0x30]
0x3c37: mov r8d,dword ptr [rbx]
0x3c3a: push qword ptr [rbx + 0x28]
0x3c3d: mov rdx,r15
0x3c40: push rax
0x3c41: mov rcx,qword ptr [rsp + 0x28]
0x3c46: mov rsi,r14
0x3c49: mov rdi,r13
0x3c4c: call 0x26f0
0x3c51: mov dword ptr [rbp],r12d
0x3c55: add rsp,0x38
0x3c59: pop rbx
0x3c5a: pop rbp
0x3c5b: pop r12
0x3c5d: pop r13
0x3c5f: pop r14
0x3c61: pop r15
0x3c63: ret 
0x3c64: nop 
0x3c66: nop word ptr cs:[rax + rax]
0x3c70: push r15
0x3c72: push r14
0x3c74: lea rax,[rip + 0x204745]
0x3c7b: push r13
0x3c7d: push r12
0x3c7f: mov r12,rdx
0x3c82: push rbp
0x3c83: push rbx
0x3c84: mov rbx,rcx
0x3c87: mov r14,rdi
0x3c8a: mov r15,rsi
0x3c8d: sub rsp,0x38
0x3c91: test rcx,rcx
0x3c94: cmove rbx,rax
0x3c98: xor ebp,ebp
0x3c9a: call 0x14c0
0x3c9f: test r12,r12
0x3ca2: mov r13,rax
0x3ca5: mov eax,dword ptr [rax]
0x3ca7: sete bpl
0x3cab: or ebp,dword ptr [rbx + 4]
0x3cae: lea r10,[rbx + 8]
0x3cb2: sub rsp,8
0x3cb6: mov r8d,dword ptr [rbx]
0x3cb9: mov rcx,r15
0x3cbc: mov dword ptr [rsp + 0x14],eax
0x3cc0: push qword ptr [rbx + 0x30]
0x3cc3: mov rdx,r14
0x3cc6: push qword ptr [rbx + 0x28]
0x3cc9: push r10
0x3ccb: xor esi,esi
0x3ccd: mov r9d,ebp
0x3cd0: xor edi,edi
0x3cd2: mov qword ptr [rsp + 0x40],r10
0x3cd7: call 0x26f0
0x3cdc: lea rsi,[rax + 1]
0x3ce0: mov qword ptr [rsp + 0x48],rax
0x3ce5: add rsp,0x20
0x3ce9: mov rdi,rsi
0x3cec: mov qword ptr [rsp + 0x18],rsi
0x3cf1: call 0x48b0
0x3cf6: mov qword ptr [rsp + 0x10],rax
0x3cfb: sub rsp,8
0x3cff: push qword ptr [rbx + 0x30]
0x3d02: push qword ptr [rbx + 0x28]
0x3d05: mov r10,qword ptr [rsp + 0x38]
0x3d0a: mov r9d,ebp
0x3d0d: mov r8d,dword ptr [rbx]
0x3d10: mov rcx,r15
0x3d13: mov rdx,r14
0x3d16: mov rdi,rax
0x3d19: push r10
0x3d1b: mov rsi,qword ptr [rsp + 0x38]
0x3d20: call 0x26f0
0x3d25: mov eax,dword ptr [rsp + 0x2c]
0x3d29: add rsp,0x20
0x3d2d: test r12,r12
0x3d30: mov dword ptr [r13],eax
0x3d34: je 0x3d3f
0x3d36: mov r11,qword ptr [rsp + 0x28]
0x3d3b: mov qword ptr [r12],r11
0x3d3f: mov rax,qword ptr [rsp + 0x10]
0x3d44: add rsp,0x38
0x3d48: pop rbx
0x3d49: pop rbp
0x3d4a: pop r12
0x3d4c: pop r13
0x3d4e: pop r14
0x3d50: pop r15
0x3d52: ret 
0x3d53: nop dword ptr [rax]
0x3d56: nop word ptr cs:[rax + rax]
0x3d60: mov rcx,rdx
0x3d63: xor edx,edx
0x3d65: jmp 0x3c70
0x3d6a: nop word ptr [rax + rax]
0x3d70: mov eax,dword ptr [rip + 0x2042e2]
0x3d76: push r12
0x3d78: mov r12,qword ptr [rip + 0x2042e1]
0x3d7f: push rbp
0x3d80: push rbx
0x3d81: cmp eax,1
0x3d84: jle 0x3db1
0x3d86: sub eax,2
0x3d89: lea rbx,[r12 + 0x18]
0x3d8e: shl rax,4
0x3d92: lea rbp,[r12 + rax + 0x28]
0x3d97: nop word ptr [rax + rax]
0x3da0: mov rdi,qword ptr [rbx]
0x3da3: add rbx,0x10
0x3da7: call 0x14a0
0x3dac: cmp rbx,rbp
0x3daf: jne 0x3da0
0x3db1: mov rdi,qword ptr [r12 + 8]
0x3db6: lea rbx,[rip + 0x204503]
0x3dbd: cmp rdi,rbx
0x3dc0: je 0x3dd9
0x3dc2: call 0x14a0
0x3dc7: mov qword ptr [rip + 0x20429e],0x100
0x3dd2: mov qword ptr [rip + 0x20429f],rbx
0x3dd9: lea rbx,[rip + 0x204290]
0x3de0: cmp r12,rbx
0x3de3: je 0x3df4
0x3de5: mov rdi,r12
0x3de8: call 0x14a0
0x3ded: mov qword ptr [rip + 0x20426c],rbx
0x3df4: pop rbx
0x3df5: mov dword ptr [rip + 0x204259],1
0x3dff: pop rbp
0x3e00: pop r12
0x3e02: ret 
0x3e03: nop dword ptr [rax]
0x3e06: nop word ptr cs:[rax + rax]
0x3e10: lea rcx,[rip + 0x2045a9]
0x3e17: mov rdx,-1
0x3e1e: jmp 0x3930
0x3e23: nop dword ptr [rax]
0x3e26: nop word ptr cs:[rax + rax]
0x3e30: lea rcx,[rip + 0x204589]
0x3e37: jmp 0x3930
0x3e3c: nop dword ptr [rax]
0x3e40: lea rcx,[rip + 0x204579]
0x3e47: mov rsi,rdi
0x3e4a: mov rdx,-1
0x3e51: xor edi,edi
0x3e53: jmp 0x3930
0x3e58: nop dword ptr [rax + rax]
0x3e60: lea rcx,[rip + 0x204559]
0x3e67: mov rdx,rsi
0x3e6a: mov rsi,rdi
0x3e6d: xor edi,edi
0x3e6f: jmp 0x3930
0x3e74: nop 
0x3e76: nop word ptr cs:[rax + rax]
0x3e80: sub rsp,0x48
0x3e84: mov rax,rdx
0x3e87: mov rdx,qword ptr fs:[0x28]
0x3e90: mov qword ptr [rsp + 0x38],rdx
0x3e95: xor edx,edx
0x3e97: cmp esi,0xa
0x3e9a: je 0x3f04
0x3e9c: mov dword ptr [rsp],esi
0x3e9f: mov rcx,rsp
0x3ea2: mov rdx,-1
0x3ea9: mov rsi,rax
0x3eac: mov qword ptr [rsp + 4],0
0x3eb5: mov qword ptr [rsp + 0xc],0
0x3ebe: mov qword ptr [rsp + 0x14],0
0x3ec7: mov qword ptr [rsp + 0x1c],0
0x3ed0: mov qword ptr [rsp + 0x24],0
0x3ed9: mov qword ptr [rsp + 0x2c],0
0x3ee2: mov dword ptr [rsp + 0x34],0
0x3eea: call 0x3930
0x3eef: mov rcx,qword ptr [rsp + 0x38]
0x3ef4: xor rcx,qword ptr fs:[0x28]
0x3efd: jne 0x3f09
0x3eff: add rsp,0x48
0x3f03: ret 
0x3f04: call 0x14b0
0x3f09: call 0x1590
0x3f0e: nop 
0x3f10: sub rsp,0x48
0x3f14: mov rax,rdx
0x3f17: mov rdx,rcx
0x3f1a: mov rcx,qword ptr fs:[0x28]
0x3f23: mov qword ptr [rsp + 0x38],rcx
0x3f28: xor ecx,ecx
0x3f2a: cmp esi,0xa
0x3f2d: je 0x3f90
0x3f2f: mov dword ptr [rsp],esi
0x3f32: mov rcx,rsp
0x3f35: mov rsi,rax
0x3f38: mov qword ptr [rsp + 4],0
0x3f41: mov qword ptr [rsp + 0xc],0
0x3f4a: mov qword ptr [rsp + 0x14],0
0x3f53: mov qword ptr [rsp + 0x1c],0
0x3f5c: mov qword ptr [rsp + 0x24],0
0x3f65: mov qword ptr [rsp + 0x2c],0
0x3f6e: mov dword ptr [rsp + 0x34],0
0x3f76: call 0x3930
0x3f7b: mov rdx,qword ptr [rsp + 0x38]
0x3f80: xor rdx,qword ptr fs:[0x28]
0x3f89: jne 0x3f95
0x3f8b: add rsp,0x48
0x3f8f: ret 
0x3f90: call 0x14b0
0x3f95: call 0x1590
0x3f9a: nop word ptr [rax + rax]
0x3fa0: mov rdx,rsi
0x3fa3: mov esi,edi
0x3fa5: xor edi,edi
0x3fa7: jmp 0x3e80
0x3fac: nop dword ptr [rax]
0x3fb0: mov rcx,rdx
0x3fb3: mov rdx,rsi
0x3fb6: mov esi,edi
0x3fb8: xor edi,edi
0x3fba: jmp 0x3f10
0x3fbf: nop 
0x3fc0: sub rsp,0x48
0x3fc4: mov ecx,edx
0x3fc6: mov rax,qword ptr fs:[0x28]
0x3fcf: mov qword ptr [rsp + 0x38],rax
0x3fd4: xor eax,eax
0x3fd6: mov rax,qword ptr [rip + 0x204413]
0x3fdd: mov r8,rsp
0x3fe0: and ecx,0x1f
0x3fe3: movdqa xmm0,xmmword ptr [rip + 0x2043d5]
0x3feb: mov qword ptr [rsp + 0x30],rax
0x3ff0: mov eax,edx
0x3ff2: movaps xmmword ptr [rsp],xmm0
0x3ff6: shr al,5
0x3ff9: movzx eax,al
0x3ffc: lea r9,[r8 + rax*4 + 8]
0x4001: movdqa xmm0,xmmword ptr [rip + 0x2043c7]
0x4009: movaps xmmword ptr [rsp + 0x10],xmm0
0x400e: movdqa xmm0,xmmword ptr [rip + 0x2043ca]
0x4016: movaps xmmword ptr [rsp + 0x20],xmm0
0x401b: mov edx,dword ptr [r9]
0x401e: mov eax,edx
0x4020: shr eax,cl
0x4022: not eax
0x4024: and eax,1
0x4027: shl eax,cl
0x4029: mov rcx,r8
0x402c: xor eax,edx
0x402e: mov rdx,rsi
0x4031: mov rsi,rdi
0x4034: mov dword ptr [r9],eax
0x4037: xor edi,edi
0x4039: call 0x3930
0x403e: mov rsi,qword ptr [rsp + 0x38]
0x4043: xor rsi,qword ptr fs:[0x28]
0x404c: jne 0x4053
0x404e: add rsp,0x48
0x4052: ret 
0x4053: call 0x1590
0x4058: nop dword ptr [rax + rax]
0x4060: movsx edx,sil
0x4064: mov rsi,-1
0x406b: jmp 0x3fc0
0x4070: mov edx,0x3a
0x4075: mov rsi,-1
0x407c: jmp 0x3fc0
0x4081: nop dword ptr [rax + rax]
0x4086: nop word ptr cs:[rax + rax]
0x4090: mov edx,0x3a
0x4095: jmp 0x3fc0
0x409a: nop word ptr [rax + rax]
0x40a0: sub rsp,0x48
0x40a4: mov rax,rdx
0x40a7: mov rdx,qword ptr fs:[0x28]
0x40b0: mov qword ptr [rsp + 0x38],rdx
0x40b5: xor edx,edx
0x40b7: cmp esi,0xa
0x40ba: je 0x4124
0x40bc: mov dword ptr [rsp],esi
0x40bf: mov rcx,rsp
0x40c2: mov rdx,-1
0x40c9: mov rsi,rax
0x40cc: mov qword ptr [rsp + 4],0
0x40d5: mov qword ptr [rsp + 0xc],0x4000000
0x40de: mov qword ptr [rsp + 0x14],0
0x40e7: mov qword ptr [rsp + 0x1c],0
0x40f0: mov qword ptr [rsp + 0x24],0
0x40f9: mov qword ptr [rsp + 0x2c],0
0x4102: mov dword ptr [rsp + 0x34],0
0x410a: call 0x3930
0x410f: mov rcx,qword ptr [rsp + 0x38]
0x4114: xor rcx,qword ptr fs:[0x28]
0x411d: jne 0x4129
0x411f: add rsp,0x48
0x4123: ret 
0x4124: call 0x14b0
0x4129: call 0x1590
0x412e: nop 
0x4130: sub rsp,0x48
0x4134: mov r9,rcx
0x4137: mov rcx,qword ptr [rip + 0x2042b2]
0x413e: movdqa xmm0,xmmword ptr [rip + 0x20427a]
0x4146: mov rax,qword ptr fs:[0x28]
0x414f: mov qword ptr [rsp + 0x38],rax
0x4154: xor eax,eax
0x4156: movaps xmmword ptr [rsp],xmm0
0x415a: test rsi,rsi
0x415d: mov qword ptr [rsp + 0x30],rcx
0x4162: mov dword ptr [rsp],0xa
0x4169: movdqa xmm0,xmmword ptr [rip + 0x20425f]
0x4171: movaps xmmword ptr [rsp + 0x10],xmm0
0x4176: movdqa xmm0,xmmword ptr [rip + 0x204262]
0x417e: movaps xmmword ptr [rsp + 0x20],xmm0
0x4183: je 0x41b7
0x4185: test rdx,rdx
0x4188: je 0x41b7
0x418a: mov qword ptr [rsp + 0x28],rsi
0x418f: mov qword ptr [rsp + 0x30],rdx
0x4194: mov rcx,rsp
0x4197: mov rdx,r8
0x419a: mov rsi,r9
0x419d: call 0x3930
0x41a2: mov rdi,qword ptr [rsp + 0x38]
0x41a7: xor rdi,qword ptr fs:[0x28]
0x41b0: jne 0x41bc
0x41b2: add rsp,0x48
0x41b6: ret 
0x41b7: call 0x14b0
0x41bc: call 0x1590
0x41c1: nop dword ptr [rax + rax]
0x41c6: nop word ptr cs:[rax + rax]
0x41d0: mov r8,-1
0x41d7: jmp 0x4130
0x41dc: nop dword ptr [rax]
0x41e0: mov rcx,rdx
0x41e3: mov r8,-1
0x41ea: mov rdx,rsi
0x41ed: mov rsi,rdi
0x41f0: xor edi,edi
0x41f2: jmp 0x4130
0x41f7: nop word ptr [rax + rax]
0x4200: mov r8,rcx
0x4203: mov rcx,rdx
0x4206: mov rdx,rsi
0x4209: mov rsi,rdi
0x420c: xor edi,edi
0x420e: jmp 0x4130
0x4213: nop dword ptr [rax]
0x4216: nop word ptr cs:[rax + rax]
0x4220: lea rcx,[rip + 0x203df9]
0x4227: jmp 0x3930
0x422c: nop dword ptr [rax]
0x4230: lea rcx,[rip + 0x203de9]
0x4237: mov rdx,rsi
0x423a: mov rsi,rdi
0x423d: xor edi,edi
0x423f: jmp 0x3930
0x4244: nop 
0x4246: nop word ptr cs:[rax + rax]
0x4250: lea rcx,[rip + 0x203dc9]
0x4257: mov rdx,-1
0x425e: jmp 0x3930
0x4263: nop dword ptr [rax]
0x4266: nop word ptr cs:[rax + rax]
0x4288: nop dword ptr [rax + rax]
0x4336: nop word ptr cs:[rax + rax]
0x43c5: nop dword ptr [rax]
0x43c8: mov r8,rcx
0x43cb: mov rcx,rdx
0x43ce: lea rdx,[rip + 0x195f]
0x43d5: mov esi,1
0x43da: xor eax,eax
0x43dc: call 0x1760
0x43e1: jmp 0x42cc
0x43e6: nop word ptr cs:[rax + rax]
0x4445: nop dword ptr [rax]
0x4481: nop dword ptr [rax]
0x44c8: nop dword ptr [rax + rax]
0x4517: nop word ptr [rax + rax]
0x4574: nop dword ptr [rax]
0x45a2: nop word ptr [rax + rax]
0x4656: nop word ptr cs:[rax + rax]
0x46a7: nop word ptr [rax + rax]
0x46b0: xor r9d,r9d
0x46b3: cmp qword ptr [r8],0
0x46b7: je 0x46cb
0x46b9: nop dword ptr [rax]
0x46c0: add r9,1
0x46c4: cmp qword ptr [r8 + r9*8],0
0x46c9: jne 0x46c0
0x46cb: jmp 0x4290
0x46d0: sub rsp,0x68
0x46d4: mov r10,r8
0x46d7: xor r9d,r9d
0x46da: mov rax,qword ptr fs:[0x28]
0x46e3: mov qword ptr [rsp + 0x58],rax
0x46e8: xor eax,eax
0x46ea: mov r8,rsp
0x46ed: nop dword ptr [rax]
0x46f0: mov eax,dword ptr [r10]
0x46f3: cmp eax,0x2f
0x46f6: ja 0x473a
0x46f8: mov r11d,eax
0x46fb: add r11,qword ptr [r10 + 0x10]
0x46ff: add eax,8
0x4702: mov dword ptr [r10],eax
0x4705: mov rax,qword ptr [r11]
0x4708: test rax,rax
0x470b: mov qword ptr [r8 + r9*8],rax
0x470f: je 0x471b
0x4711: add r9,1
0x4715: cmp r9,0xa
0x4719: jne 0x46f0
0x471b: call 0x4290
0x4720: mov rax,qword ptr [rsp + 0x58]
0x4725: xor rax,qword ptr fs:[0x28]
0x472e: jne 0x4735
0x4730: add rsp,0x68
0x4734: ret 
0x4735: call 0x1590
0x473a: mov r11,qword ptr [r10 + 8]
0x473e: lea rax,[r11 + 8]
0x4742: mov qword ptr [r10 + 8],rax
0x4746: jmp 0x4705
0x4748: nop dword ptr [rax + rax]
0x4810: call 0x1590
0x481c: mov rax,rbx
0x481f: add rbx,8
0x4823: jmp 0x47d6
0x4825: nop 
0x4826: nop word ptr cs:[rax + rax]
0x4830: push rbx
0x4831: lea rsi,[rip + 0x154a]
0x4838: mov edx,5
0x483d: xor edi,edi
0x483f: call 0x1560
0x4844: lea rdx,[rip + 0x154c]
0x484b: mov rsi,rax
0x484e: mov edi,1
0x4853: xor eax,eax
0x4855: call 0x16f0
0x485a: lea rsi,[rip + 0x154c]
0x4861: mov edx,5
0x4866: xor edi,edi
0x4868: call 0x1560
0x486d: lea rcx,[rip + 0xdcc]
0x4874: lea rdx,[rip + 0x924]
0x487b: mov rsi,rax
0x487e: mov edi,1
0x4883: xor eax,eax
0x4885: call 0x16f0
0x488a: mov rbx,qword ptr [rip + 0x2039b7]
0x4891: lea rsi,[rip + 0x1748]
0x4898: xor edi,edi
0x489a: mov edx,5
0x489f: call 0x1560
0x48a4: mov rsi,rbx
0x48a7: mov rdi,rax
0x48aa: pop rbx
0x48ab: jmp 0x1610
0x48ca: nop word ptr [rax + rax]
0x48d0: mov rax,rdi
0x48d3: mul rsi
0x48d6: mov rdi,rax
0x48d9: seto al
0x48dc: test rdi,rdi
0x48df: js 0x48eb
0x48e1: movzx eax,al
0x48e4: test rax,rax
0x48e7: jne 0x48eb
0x48e9: jmp 0x48b0
0x48eb: sub rsp,8
0x48ef: call 0x4b00
0x48f4: nop 
0x48f6: nop word ptr cs:[rax + rax]
0x4900: jmp 0x48b0
0x4902: nop dword ptr [rax]
0x4906: nop word ptr cs:[rax + rax]
0x4919: test rdi,rdi
0x491c: jne 0x4938
0x4932: nop word ptr [rax + rax]
0x4938: call 0x14a0
0x493d: xor eax,eax
0x493f: pop rbx
0x4940: ret 
0x4946: nop word ptr cs:[rax + rax]
0x4950: mov rax,rsi
0x4953: mul rdx
0x4956: mov rsi,rax
0x4959: seto al
0x495c: test rsi,rsi
0x495f: js 0x496b
0x4961: movzx eax,al
0x4964: test rax,rax
0x4967: jne 0x496b
0x4969: jmp 0x4910
0x496b: sub rsp,8
0x496f: call 0x4b00
0x4974: nop 
0x4976: nop word ptr cs:[rax + rax]
0x4980: test rdi,rdi
0x4983: mov r9,rdx
0x4986: mov rcx,qword ptr [rsi]
0x4989: je 0x49c0
0x498b: xor edx,edx
0x498d: movabs rax,0x5555555555555554
0x4997: div r9
0x499a: cmp rax,rcx
0x499d: jbe 0x49db
0x499f: mov rax,rcx
0x49a2: shr rax,1
0x49a5: lea rcx,[rax + rcx + 1]
0x49aa: mov qword ptr [rsi],rcx
0x49ad: imul rcx,r9
0x49b1: mov rsi,rcx
0x49b4: jmp 0x4910
0x49b9: nop dword ptr [rax]
0x49c0: test rcx,rcx
0x49c3: je 0x49e8
0x49c5: mov rax,rcx
0x49c8: mul r9
0x49cb: seto dl
0x49ce: test rax,rax
0x49d1: movzx edx,dl
0x49d4: js 0x49db
0x49d6: test rdx,rdx
0x49d9: je 0x49aa
0x49db: sub rsp,8
0x49df: call 0x4b00
0x49e4: nop dword ptr [rax]
0x49e8: xor edx,edx
0x49ea: mov eax,0x80
0x49ef: xor r8d,r8d
0x49f2: div r9
0x49f5: test rax,rax
0x49f8: sete r8b
0x49fc: lea rcx,[r8 + rax]
0x4a00: jmp 0x49c5
0x4a02: nop dword ptr [rax]
0x4a06: nop word ptr cs:[rax + rax]
0x4a10: test rdi,rdi
0x4a13: mov rax,qword ptr [rsi]
0x4a16: je 0x4a40
0x4a18: movabs rdx,0x5555555555555553
0x4a22: cmp rax,rdx
0x4a25: ja 0x4a51
0x4a27: mov rdx,rax
0x4a2a: shr rdx,1
0x4a2d: lea rax,[rdx + rax + 1]
0x4a32: mov qword ptr [rsi],rax
0x4a35: mov rsi,rax
0x4a38: jmp 0x4910
0x4a3d: nop dword ptr [rax]
0x4a40: test rax,rax
0x4a43: mov edx,0x80
0x4a48: cmove rax,rdx
0x4a4c: test rax,rax
0x4a4f: jns 0x4a32
0x4a51: sub rsp,8
0x4a55: call 0x4b00
0x4a5a: nop word ptr [rax + rax]
0x4a60: push rbx
0x4a61: mov rbx,rdi
0x4a64: call 0x48b0
0x4a69: mov rdx,rbx
0x4a6c: xor esi,esi
0x4a6e: mov rdi,rax
0x4a71: pop rbx
0x4a72: jmp 0x15f0
0x4a77: nop word ptr [rax + rax]
0x4a80: mov rax,rdi
0x4a83: sub rsp,8
0x4a87: mul rsi
0x4a8a: seto dl
0x4a8d: test rax,rax
0x4a90: js 0x4aa9
0x4a92: movzx edx,dl
0x4a95: test rdx,rdx
0x4a98: jne 0x4aa9
0x4a9a: call 0x1620
0x4a9f: test rax,rax
0x4aa2: je 0x4aa9
0x4aa4: add rsp,8
0x4aa8: ret 
0x4aa9: call 0x4b00
0x4aae: nop 
0x4ad8: nop dword ptr [rax + rax]
0x4af3: nop word ptr cs:[rax + rax]
0x4afd: nop dword ptr [rax]
0x4b30: call 0x14b0
0x4b35: nop word ptr cs:[rax + rax]
0x4b3f: nop 
0x4bbe: call 0x1590
0x4bc3: nop word ptr cs:[rax + rax]
0x4bcd: nop dword ptr [rax]
0x4c06: nop word ptr cs:[rax + rax]
0x4c5f: nop 
0x4c8b: nop dword ptr [rax + rax]
0x4d50: call 0x1590
0x4d55: nop 
0x4d56: nop word ptr cs:[rax + rax]
0x4d79: nop dword ptr [rax]
0x4da7: nop word ptr [rax + rax]
0x4e1b: nop dword ptr [rax + rax]
0x4e3b: nop dword ptr [rax + rax]
0x4e40: push r12
0x4e42: push rbp
0x4e43: mov rbp,rdi
0x4e46: push rbx
0x4e47: call 0x1500
0x4e4c: mov ebx,dword ptr [rbp]
0x4e4f: mov rdi,rbp
0x4e52: mov r12,rax
0x4e55: call 0x4f60
0x4e5a: and ebx,0x20
0x4e5d: test ebx,ebx
0x4e5f: jne 0x4e78
0x4e61: test eax,eax
0x4e63: je 0x4e6f
0x4e65: test r12,r12
0x4e68: mov eax,0xffffffff
0x4e6d: je 0x4ea8
0x4e6f: pop rbx
0x4e70: pop rbp
0x4e71: pop r12
0x4e73: ret 
0x4e74: nop dword ptr [rax]
0x4e78: test eax,eax
0x4e7a: jne 0x4e98
0x4e7c: call 0x14c0
0x4e81: mov dword ptr [rax],0
0x4e87: mov eax,0xffffffff
0x4e8c: pop rbx
0x4e8d: pop rbp
0x4e8e: pop r12
0x4e90: ret 
0x4e91: nop dword ptr [rax]
0x4e98: pop rbx
0x4e99: mov eax,0xffffffff
0x4e9e: pop rbp
0x4e9f: pop r12
0x4ea1: ret 
0x4ea2: nop word ptr [rax + rax]
0x4ea8: call 0x14c0
0x4ead: cmp dword ptr [rax],9
0x4eb0: pop rbx
0x4eb1: pop rbp
0x4eb2: pop r12
0x4eb4: setne al
0x4eb7: movzx eax,al
0x4eba: neg eax
0x4ebc: ret 
0x4ebd: nop dword ptr [rax]
0x4efa: nop word ptr [rax + rax]
0x4f46: nop word ptr cs:[rax + rax]
0x4f5c: nop dword ptr [rax]
0x4f60: push r12
0x4f62: push rbp
0x4f63: push rbx
0x4f64: mov rbx,rdi
0x4f67: call 0x1670
0x4f6c: test eax,eax
0x4f6e: mov rdi,rbx
0x4f71: js 0x4fc7
0x4f73: call 0x16b0
0x4f78: test eax,eax
0x4f7a: jne 0x4fa8
0x4f7c: mov rdi,rbx
0x4f7f: call 0x4fe0
0x4f84: test eax,eax
0x4f86: je 0x4fc4
0x4f88: call 0x14c0
0x4f8d: mov r12d,dword ptr [rax]
0x4f90: mov rdi,rbx
0x4f93: mov rbp,rax
0x4f96: call 0x1540
0x4f9b: test r12d,r12d
0x4f9e: jne 0x4fd0
0x4fa0: pop rbx
0x4fa1: pop rbp
0x4fa2: pop r12
0x4fa4: ret 
0x4fa5: nop dword ptr [rax]
0x4fa8: mov rdi,rbx
0x4fab: call 0x1670
0x4fb0: xor esi,esi
0x4fb2: mov edx,1
0x4fb7: mov edi,eax
0x4fb9: call 0x15e0
0x4fbe: cmp rax,-1
0x4fc2: jne 0x4f7c
0x4fc4: mov rdi,rbx
0x4fc7: pop rbx
0x4fc8: pop rbp
0x4fc9: pop r12
0x4fcb: jmp 0x1540
0x4fd0: mov dword ptr [rbp],r12d
0x4fd4: mov eax,0xffffffff
0x4fd9: jmp 0x4fa0
0x4fdb: nop dword ptr [rax + rax]
0x4fe0: test rdi,rdi
0x4fe3: push rbx
0x4fe4: mov rbx,rdi
0x4fe7: je 0x4ffa
0x4fe9: call 0x16b0
0x4fee: test eax,eax
0x4ff0: je 0x4ffa
0x4ff2: test dword ptr [rbx],0x100
0x4ff8: jne 0x5008
0x4ffa: mov rdi,rbx
0x4ffd: pop rbx
0x4ffe: jmp 0x1690
0x5003: nop dword ptr [rax + rax]
0x5008: mov rdi,rbx
0x500b: mov edx,1
0x5010: xor esi,esi
0x5012: call 0x5020
0x5017: mov rdi,rbx
0x501a: pop rbx
0x501b: jmp 0x1690
0x5020: mov rax,qword ptr [rdi + 8]
0x5024: cmp qword ptr [rdi + 0x10],rax
0x5028: je 0x5030
0x502a: jmp 0x1710
0x502f: nop 
0x5030: mov rax,qword ptr [rdi + 0x20]
0x5034: cmp qword ptr [rdi + 0x28],rax
0x5038: jne 0x502a
0x503a: cmp qword ptr [rdi + 0x48],0
0x503f: jne 0x502a
0x5041: push r12
0x5043: push rbp
0x5044: mov r12d,edx
0x5047: push rbx
0x5048: mov rbp,rsi
0x504b: mov rbx,rdi
0x504e: call 0x1670
0x5053: mov edx,r12d
0x5056: mov rsi,rbp
0x5059: mov edi,eax
0x505b: call 0x15e0
0x5060: cmp rax,-1
0x5064: je 0x5072
0x5066: and dword ptr [rbx],0xffffffef
0x5069: mov qword ptr [rbx + 0x90],rax
0x5070: xor eax,eax
0x5072: pop rbx
0x5073: pop rbp
0x5074: pop r12
0x5076: ret 
0x5077: nop word ptr [rax + rax]
0x5080: push r15
0x5082: push r14
0x5084: mov r15,rdx
0x5087: push r13
0x5089: push r12
0x508b: lea r12,[rip + 0x202a7e]
0x5092: push rbp
0x5093: lea rbp,[rip + 0x202a7e]
0x509a: push rbx
0x509b: mov r13d,edi
0x509e: mov r14,rsi
0x50a1: sub rbp,r12
0x50a4: sub rsp,8
0x50a8: sar rbp,3
0x50ac: call 0x1470
0x50b1: test rbp,rbp
0x50b4: je 0x50d6
0x50b6: xor ebx,ebx
0x50b8: nop dword ptr [rax + rax]
0x50c0: mov rdx,r15
0x50c3: mov rsi,r14
0x50c6: mov edi,r13d
0x50c9: call qword ptr [r12 + rbx*8]
0x50cd: add rbx,1
0x50d1: cmp rbp,rbx
0x50d4: jne 0x50c0
0x50d6: add rsp,8
0x50da: pop rbx
0x50db: pop rbp
0x50dc: pop r12
0x50de: pop r13
0x50e0: pop r14
0x50e2: pop r15
0x50e4: ret 
0x50e5: nop 
0x50e6: nop word ptr cs:[rax + rax]
0x50f0: ret 
0x50f2: nop word ptr cs:[rax + rax]
0x50fc: nop dword ptr [rax]
0x5110: sub rsp,8
0x5114: add rsp,8
0x5118: ret 
