0x1580: sub rsp,8
0x1584: mov rax,qword ptr [rip + 0x208a45]
0x158b: test rax,rax
0x158e: je 0x1592
0x1590: call rax
0x1592: add rsp,8
0x1596: ret 
0x15a0: push qword ptr [rip + 0x20886a]
0x15a6: jmp qword ptr [rip + 0x20886c]
0x15ac: nop dword ptr [rax]
0x15b6: push 0
0x15bb: jmp 0x15a0
0x15c6: push 1
0x15cb: jmp 0x15a0
0x15d6: push 2
0x15db: jmp 0x15a0
0x15e6: push 3
0x15eb: jmp 0x15a0
0x15f0: jmp qword ptr [rip + 0x20884a]
0x15f6: push 4
0x15fb: jmp 0x15a0
0x1600: jmp qword ptr [rip + 0x208842]
0x1606: push 5
0x160b: jmp 0x15a0
0x1616: push 6
0x161b: jmp 0x15a0
0x1626: push 7
0x162b: jmp 0x15a0
0x1636: push 8
0x163b: jmp 0x15a0
0x1646: push 9
0x164b: jmp 0x15a0
0x1656: push 0xa
0x165b: jmp 0x15a0
0x1666: push 0xb
0x166b: jmp 0x15a0
0x1676: push 0xc
0x167b: jmp 0x15a0
0x1686: push 0xd
0x168b: jmp 0x15a0
0x1690: jmp qword ptr [rip + 0x2087fa]
0x1696: push 0xe
0x169b: jmp 0x15a0
0x16a6: push 0xf
0x16ab: jmp 0x15a0
0x16b6: push 0x10
0x16bb: jmp 0x15a0
0x16c6: push 0x11
0x16cb: jmp 0x15a0
0x16d6: push 0x12
0x16db: jmp 0x15a0
0x16e6: push 0x13
0x16eb: jmp 0x15a0
0x16f6: push 0x14
0x16fb: jmp 0x15a0
0x1706: push 0x15
0x170b: jmp 0x15a0
0x1716: push 0x16
0x171b: jmp 0x15a0
0x1726: push 0x17
0x172b: jmp 0x15a0
0x1736: push 0x18
0x173b: jmp 0x15a0
0x1746: push 0x19
0x174b: jmp 0x15a0
0x1750: jmp qword ptr [rip + 0x20879a]
0x1756: push 0x1a
0x175b: jmp 0x15a0
0x1766: push 0x1b
0x176b: jmp 0x15a0
0x1776: push 0x1c
0x177b: jmp 0x15a0
0x1786: push 0x1d
0x178b: jmp 0x15a0
0x1796: push 0x1e
0x179b: jmp 0x15a0
0x17a6: push 0x1f
0x17ab: jmp 0x15a0
0x17b6: push 0x20
0x17bb: jmp 0x15a0
0x17c6: push 0x21
0x17cb: jmp 0x15a0
0x17d6: push 0x22
0x17db: jmp 0x15a0
0x17e6: push 0x23
0x17eb: jmp 0x15a0
0x17f6: push 0x24
0x17fb: jmp 0x15a0
0x1806: push 0x25
0x180b: jmp 0x15a0
0x1816: push 0x26
0x181b: jmp 0x15a0
0x1826: push 0x27
0x182b: jmp 0x15a0
0x1836: push 0x28
0x183b: jmp 0x15a0
0x1846: push 0x29
0x184b: jmp 0x15a0
0x1856: push 0x2a
0x185b: jmp 0x15a0
0x1866: push 0x2b
0x186b: jmp 0x15a0
0x1876: push 0x2c
0x187b: jmp 0x15a0
0x1886: push 0x2d
0x188b: jmp 0x15a0
0x1896: push 0x2e
0x189b: jmp 0x15a0
0x18a6: push 0x2f
0x18ab: jmp 0x15a0
0x18b6: push 0x30
0x18bb: jmp 0x15a0
0x18c6: push 0x31
0x18cb: jmp 0x15a0
0x18d6: push 0x32
0x18db: jmp 0x15a0
0x18e6: push 0x33
0x18eb: jmp 0x15a0
0x18f0: jmp qword ptr [rip + 0x2086ea]
0x19fd: nop dword ptr [rax]
0x1a24: nop dword ptr [rax]
0x1a46: nop word ptr cs:[rax + rax]
0x1a9d: nop dword ptr [rax]
0x1aba: nop word ptr [rax + rax]
0x1ada: nop word ptr [rax + rax]
0x1aec: nop dword ptr [rax]
0x1b0a: nop word ptr [rax + rax]
0x1b1a: nop word ptr [rax + rax]
0x1b2a: nop word ptr [rax + rax]
0x1eee: nop 
0x21cc: nop dword ptr [rax]
0x2212: jmp 0x1e55
0x2217: nop word ptr [rax + rax]
0x2277: nop word ptr [rax + rax]
0x233e: nop 
0x23ea: nop word ptr [rax + rax]
0x2460: xor eax,eax
0x2462: jmp 0x21c3
0x25a6: xor eax,eax
0x25a8: jmp 0x21c3
0x25bf: xor edx,edx
0x2684: jmp 0x21be
0x2812: jmp 0x24db
0x284c: jmp 0x24e2
0x28e3: jmp 0x2533
0x292f: jmp 0x21be
0x295f: jmp 0x236d
0x296e: jmp 0x2054
0x297d: jmp 0x27fd
0x298b: jmp 0x2527
0x299a: jmp 0x2502
0x29b3: mov rdx,qword ptr [rsp + 0x30]
0x29b8: mov rcx,qword ptr [rsp + 0x60]
0x29bd: jmp 0x2303
0x29cc: jmp 0x2797
0x29e3: call 0x1690
0x2a3d: nop dword ptr [rax]
0x2a6a: hlt 
0x2a6b: nop dword ptr [rax + rax]
0x2a70: lea rdi,[rip + 0x207629]
0x2a77: push rbp
0x2a78: lea rax,[rip + 0x207621]
0x2a7f: cmp rax,rdi
0x2a82: mov rbp,rsp
0x2a85: je 0x2aa0
0x2a87: mov rax,qword ptr [rip + 0x207532]
0x2a8e: test rax,rax
0x2a91: je 0x2aa0
0x2a93: pop rbp
0x2a94: jmp rax
0x2a96: nop word ptr cs:[rax + rax]
0x2aa0: pop rbp
0x2aa1: ret 
0x2aa2: nop dword ptr [rax]
0x2aa6: nop word ptr cs:[rax + rax]
0x2ab0: lea rdi,[rip + 0x2075e9]
0x2ab7: lea rsi,[rip + 0x2075e2]
0x2abe: push rbp
0x2abf: sub rsi,rdi
0x2ac2: mov rbp,rsp
0x2ac5: sar rsi,3
0x2ac9: mov rax,rsi
0x2acc: shr rax,0x3f
0x2ad0: add rsi,rax
0x2ad3: sar rsi,1
0x2ad6: je 0x2af0
0x2ad8: mov rax,qword ptr [rip + 0x2074f9]
0x2adf: test rax,rax
0x2ae2: je 0x2af0
0x2ae4: pop rbp
0x2ae5: jmp rax
0x2ae7: nop word ptr [rax + rax]
0x2af0: pop rbp
0x2af1: ret 
0x2af2: nop dword ptr [rax]
0x2af6: nop word ptr cs:[rax + rax]
0x2b00: cmp byte ptr [rip + 0x2075e1],0
0x2b07: jne 0x2b38
0x2b09: cmp qword ptr [rip + 0x2074cf],0
0x2b11: push rbp
0x2b12: mov rbp,rsp
0x2b15: je 0x2b23
0x2b17: mov rdi,qword ptr [rip + 0x2074ea]
0x2b1e: call 0x18f0
0x2b23: call 0x2a70
0x2b28: mov byte ptr [rip + 0x2075b9],1
0x2b2f: pop rbp
0x2b30: ret 
0x2b31: nop dword ptr [rax]
0x2b38: ret 
0x2b3a: nop word ptr [rax + rax]
0x2b40: push rbp
0x2b41: mov rbp,rsp
0x2b44: pop rbp
0x2b45: jmp 0x2ab0
0x2b4a: nop word ptr [rax + rax]
0x2b89: nop dword ptr [rax]
0x2b93: nop dword ptr [rax + rax]
0x2bbb: nop dword ptr [rax + rax]
0x2bc9: nop dword ptr [rax]
0x2bf2: nop word ptr [rax + rax]
0x2c18: nop dword ptr [rax + rax]
0x2c20: mov rax,rdi
0x2c23: cmp byte ptr [rax],0
0x2c26: sete al
0x2c29: add rsp,8
0x2c2d: pop rbx
0x2c2e: pop rbp
0x2c2f: ret 
0x2c53: nop dword ptr [rax + rax]
0x2cb5: nop dword ptr [rax]
0x2ccc: nop dword ptr [rax]
0x2ce2: nop word ptr [rax + rax]
0x2cf0: jmp 0x2c6e
0x2cf5: nop 
0x2cf6: nop word ptr cs:[rax + rax]
0x2d6f: nop 
0x2d9f: cmp qword ptr [rip + 0x20730a],rbx
0x2da6: je 0x2d61
0x2da8: mov rdi,rbx
0x2dab: call 0x6830
0x2db0: add rsp,8
0x2db4: mov eax,r12d
0x2db7: pop rbx
0x2db8: pop rbp
0x2db9: pop r12
0x2dbb: pop r13
0x2dbd: ret 
0x2dbe: nop 
0x2e39: jmp 0x2d61
0x2e3e: nop 
0x2e81: jmp 0x2d61
0x2e86: nop word ptr cs:[rax + rax]
0x2e9a: nop word ptr [rax + rax]
0x32fa: nop word ptr [rax + rax]
0x3300: mov qword ptr [rip + 0x206e11],rdi
0x3307: ret 
0x3308: nop dword ptr [rax + rax]
0x3310: mov byte ptr [rip + 0x206df9],dil
0x3317: ret 
0x3318: nop dword ptr [rax + rax]
0x3320: push rbp
0x3321: push rbx
0x3322: sub rsp,8
0x3326: mov rdi,qword ptr [rip + 0x206d7b]
0x332d: call 0x6c60
0x3332: test eax,eax
0x3334: je 0x334c
0x3336: call 0x15d0
0x333b: cmp byte ptr [rip + 0x206dce],0
0x3342: mov rbx,rax
0x3345: je 0x3363
0x3347: cmp dword ptr [rax],0x20
0x334a: jne 0x3363
0x334c: mov rdi,qword ptr [rip + 0x206d8d]
0x3353: call 0x6c60
0x3358: test eax,eax
0x335a: jne 0x33a2
0x335c: add rsp,8
0x3360: pop rbx
0x3361: pop rbp
0x3362: ret 
0x3363: lea rsi,[rip + 0x467b]
0x336a: xor edi,edi
0x336c: mov edx,5
0x3371: call 0x1660
0x3376: mov rdi,qword ptr [rip + 0x206d9b]
0x337d: mov rbp,rax
0x3380: test rdi,rdi
0x3383: je 0x33ad
0x3385: call 0x5d50
0x338a: mov esi,dword ptr [rbx]
0x338c: lea rdx,[rip + 0x465e]
0x3393: mov rcx,rax
0x3396: mov r8,rbp
0x3399: xor edi,edi
0x339b: xor eax,eax
0x339d: call 0x1830
0x33a2: mov edi,dword ptr [rip + 0x206c78]
0x33a8: call 0x15f0
0x33ad: mov esi,dword ptr [rbx]
0x33af: lea rdx,[rip + 0x463f]
0x33b6: mov rcx,rax
0x33b9: xor edi,edi
0x33bb: xor eax,eax
0x33bd: call 0x1830
0x33c2: jmp 0x33a2
0x33c4: nop word ptr cs:[rax + rax]
0x33ce: nop 
0x33d0: movabs rax,0xefcdab8967452301
0x33da: mov qword ptr [rdi + 0x10],0
0x33e2: mov dword ptr [rdi + 0x18],0
0x33e9: mov qword ptr [rdi],rax
0x33ec: movabs rax,0x1032547698badcfe
0x33f6: mov qword ptr [rdi + 8],rax
0x33fa: ret 
0x33fb: nop dword ptr [rax + rax]
0x341a: nop word ptr [rax + rax]
0x3b8f: nop 
0x3bdc: add edx,1
0x3bdf: mov dword ptr [rbx + 0x14],edx
0x3c1a: test cl,4
0x3c1d: jne 0x3c90
0x3c1f: test rcx,rcx
0x3c22: je 0x3c6c
0x3c24: movzx eax,byte ptr [rip + 0x3dd5]
0x3c2b: test cl,2
0x3c2e: mov byte ptr [rdx],al
0x3c30: je 0x3c6c
0x3c32: movzx eax,word ptr [rsi + rcx - 2]
0x3c37: mov word ptr [rdx + rcx - 2],ax
0x3c3c: jmp 0x3c6c
0x3c3e: nop 
0x3c87: nop word ptr [rax + rax]
0x3c90: mov eax,dword ptr [rip + 0x3d6a]
0x3c96: mov dword ptr [rdx],eax
0x3c98: mov eax,dword ptr [rsi + rcx - 4]
0x3c9c: mov dword ptr [rdx + rcx - 4],eax
0x3ca0: jmp 0x3c6c
0x3ca2: nop dword ptr [rax]
0x3ca6: nop word ptr cs:[rax + rax]
0x3dc1: nop dword ptr [rax]
0x3dfc: nop dword ptr [rax]
0x3e00: mov ebp,eax
0x3e02: mov edx,0x80
0x3e07: lea r15,[r13 + 0x1c]
0x3e0b: sub rdx,rbp
0x3e0e: cmp rdx,rsi
0x3e11: lea rdi,[r15 + rbp]
0x3e15: cmova rdx,rsi
0x3e19: mov rsi,rbx
0x3e1c: mov r14,rdx
0x3e1f: call 0x1770
0x3e24: mov esi,dword ptr [r13 + 0x18]
0x3e28: add esi,r14d
0x3e2b: cmp esi,0x40
0x3e2e: mov dword ptr [r13 + 0x18],esi
0x3e32: ja 0x3e90
0x3e34: add rbx,r14
0x3e37: sub r12,r14
0x3e3a: jmp 0x3cd2
0x3e3f: nop 
0x3e8e: nop 
0x3e90: and esi,0xffffffc0
0x3e93: mov rdx,r13
0x3e96: mov rdi,r15
0x3e99: call 0x3420
0x3e9e: mov ecx,dword ptr [r13 + 0x18]
0x3ea2: lea rax,[rbp + r14]
0x3ea7: and rax,0xffffffffffffffc0
0x3eab: mov edx,ecx
0x3ead: add rax,r15
0x3eb0: and edx,0x3f
0x3eb3: cmp edx,8
0x3eb6: mov dword ptr [r13 + 0x18],edx
0x3eba: jae 0x3ef0
0x3ebc: test cl,4
0x3ebf: jne 0x3f3f
0x3ec1: test edx,edx
0x3ec3: je 0x3e34
0x3ec9: movzx esi,byte ptr [rax]
0x3ecc: and ecx,2
0x3ecf: mov byte ptr [r13 + 0x1c],sil
0x3ed3: je 0x3e34
0x3ed9: movzx eax,word ptr [rax + rdx - 2]
0x3ede: mov word ptr [r15 + rdx - 2],ax
0x3ee4: jmp 0x3e34
0x3ee9: nop dword ptr [rax]
0x3ef0: mov rcx,qword ptr [rax]
0x3ef3: mov qword ptr [r13 + 0x1c],rcx
0x3ef7: mov ecx,edx
0x3ef9: mov rsi,qword ptr [rax + rcx - 8]
0x3efe: mov qword ptr [r15 + rcx - 8],rsi
0x3f03: lea rcx,[r13 + 0x24]
0x3f07: and rcx,0xfffffffffffffff8
0x3f0b: sub r15,rcx
0x3f0e: sub rax,r15
0x3f11: add r15d,edx
0x3f14: and r15d,0xfffffff8
0x3f18: cmp r15d,8
0x3f1c: jb 0x3e34
0x3f22: and r15d,0xfffffff8
0x3f26: xor edx,edx
0x3f28: mov esi,edx
0x3f2a: add edx,8
0x3f2d: mov rdi,qword ptr [rax + rsi]
0x3f31: cmp edx,r15d
0x3f34: mov qword ptr [rcx + rsi],rdi
0x3f38: jb 0x3f28
0x3f3a: jmp 0x3e34
0x3f3f: mov ecx,dword ptr [rax]
0x3f41: mov dword ptr [r13 + 0x1c],ecx
0x3f45: mov eax,dword ptr [rax + rdx - 4]
0x3f49: mov dword ptr [r15 + rdx - 4],eax
0x3f4e: jmp 0x3e34
0x3f53: nop dword ptr [rax + rax]
0x3f87: nop word ptr [rax + rax]
0x3f90: push rbp
0x3f91: push rbx
0x3f92: mov rbp,rdx
0x3f95: sub rsp,0xb8
0x3f9c: mov rax,qword ptr fs:[0x28]
0x3fa5: mov qword ptr [rsp + 0xa8],rax
0x3fad: xor eax,eax
0x3faf: mov rbx,rsp
0x3fb2: movabs rax,0xefcdab8967452301
0x3fbc: mov qword ptr [rsp + 0x10],0
0x3fc5: mov qword ptr [rsp],rax
0x3fc9: mov rdx,rbx
0x3fcc: movabs rax,0x1032547698badcfe
0x3fd6: mov qword ptr [rsp + 8],rax
0x3fdb: mov dword ptr [rsp + 0x18],0
0x3fe3: call 0x3cb0
0x3fe8: mov rsi,rbp
0x3feb: mov rdi,rbx
0x3fee: call 0x3b90
0x3ff3: mov rcx,qword ptr [rsp + 0xa8]
0x3ffb: xor rcx,qword ptr fs:[0x28]
0x4004: jne 0x4010
0x4006: add rsp,0xb8
0x400d: pop rbx
0x400e: pop rbp
0x400f: ret 
0x4010: call 0x1690
0x4015: nop 
0x4016: nop word ptr cs:[rax + rax]
0x4135: nop dword ptr [rax]
0x414d: call 0x1690
0x4152: nop word ptr cs:[rax + rax]
0x415c: nop dword ptr [rax]
0x4160: jmp 0x1720
0x4165: nop 
0x4166: nop word ptr cs:[rax + rax]
0x418b: nop dword ptr [rax + rax]
0x4192: nop word ptr cs:[rax + rax]
0x419c: nop dword ptr [rax]
0x41c9: nop dword ptr [rax]
0x4215: nop dword ptr [rax]
0x4233: nop word ptr cs:[rax + rax]
0x423d: nop dword ptr [rax]
0x42df: nop 
0x431c: nop dword ptr [rax]
0x436d: nop dword ptr [rax]
0x43c7: nop word ptr [rax + rax]
0x4687: nop word ptr [rax + rax]
0x46be: nop 
0x46e1: nop dword ptr [rax]
0x4722: nop word ptr [rax + rax]
0x4734: nop dword ptr [rax]
0x47d8: nop dword ptr [rax + rax]
0x4801: nop dword ptr [rax]
0x4817: nop word ptr [rax + rax]
0x482f: nop 
0x485e: nop 
0x486d: nop dword ptr [rax]
0x487f: nop 
0x488f: nop 
0x489f: nop 
0x48af: nop 
0x48bf: nop 
0x492c: nop dword ptr [rax]
0x494c: nop dword ptr [rax]
0x496f: nop 
0x4982: nop word ptr [rax + rax]
0x499a: nop word ptr [rax + rax]
0x49aa: nop word ptr [rax + rax]
0x4a4b: nop dword ptr [rax + rax]
0x4a65: nop dword ptr [rax]
0x4a78: nop dword ptr [rax + rax]
0x4a93: nop dword ptr [rax + rax]
0x4ac2: nop word ptr [rax + rax]
0x4ad2: nop word ptr [rax + rax]
0x4aea: nop word ptr [rax + rax]
0x4afa: nop word ptr [rax + rax]
0x4b08: nop dword ptr [rax + rax]
0x4b2f: nop 
0x4bc9: nop dword ptr [rax]
0x4c12: nop word ptr [rax + rax]
0x4c1f: lea rcx,[rbp + 2]
0x4c23: cmp rcx,r11
0x4c26: jae 0x4c40
0x4c28: mov rax,qword ptr [rsp + 0x10]
0x4c2d: cmp byte ptr [rax + rbp + 1],0x3f
0x4c32: je 0x53c2
0x4c38: nop dword ptr [rax + rax]
0x4c51: nop dword ptr [rax]
0x4c72: nop word ptr [rax + rax]
0x4dd8: nop dword ptr [rax + rax]
0x4eeb: nop dword ptr [rax + rax]
0x4f0e: nop 
0x4fd5: nop dword ptr [rax]
0x508d: nop dword ptr [rax]
0x5296: nop word ptr cs:[rax + rax]
0x5329: nop dword ptr [rax]
0x53c2: movzx ebx,byte ptr [rax + rcx]
0x53c6: cmp bl,0x3e
0x53c9: ja 0x4c40
0x53cf: movabs rax,0x7000a38200000000
0x53d9: bt rax,rbx
0x53dd: jae 0x4c40
0x53e3: cmp byte ptr [rsp + 0xf],0
0x53e8: jne 0x55d2
0x53ee: cmp r13,r15
0x53f1: jbe 0x53f8
0x53f3: mov byte ptr [r14 + r15],0x3f
0x53f8: lea rax,[r15 + 1]
0x53fc: cmp r13,rax
0x53ff: jbe 0x5407
0x5401: mov byte ptr [r14 + r15 + 1],0x22
0x5407: lea rax,[r15 + 2]
0x540b: cmp r13,rax
0x540e: jbe 0x5416
0x5410: mov byte ptr [r14 + r15 + 2],0x22
0x5416: lea rax,[r15 + 3]
0x541a: cmp r13,rax
0x541d: jbe 0x5425
0x541f: mov byte ptr [r14 + r15 + 3],0x3f
0x5425: add r15,4
0x5429: xor edx,edx
0x542b: xor r12d,r12d
0x542e: xor eax,eax
0x5430: mov rbp,rcx
0x5433: jmp 0x45f8
0x5440: lea rax,[rip + 0x264e]
0x5447: mov byte ptr [rsp + 0xe],1
0x544c: mov byte ptr [rsp + 0x7c],0
0x5451: xor r12d,r12d
0x5454: mov qword ptr [rsp + 0x50],0
0x545d: mov byte ptr [rsp + 0xf],1
0x5462: mov byte ptr [rsp + 0xd],0
0x5467: mov qword ptr [rsp + 0x18],1
0x5470: xor r15d,r15d
0x5473: mov qword ptr [rsp + 0x48],rax
0x5478: jmp 0x44a3
0x547d: nop dword ptr [rax]
0x548d: lea rax,[rip + 0x25ff]
0x5494: mov byte ptr [rsp + 0xe],1
0x5499: mov byte ptr [rsp + 0x7c],0
0x549e: xor r12d,r12d
0x54a1: mov qword ptr [rsp + 0x50],0
0x54aa: mov byte ptr [rsp + 0xf],1
0x54af: mov byte ptr [rsp + 0xd],1
0x54b4: mov qword ptr [rsp + 0x18],1
0x54bd: xor r15d,r15d
0x54c0: mov qword ptr [rsp + 0x48],rax
0x54c5: jmp 0x44a3
0x55c3: call 0x1690
0x55d2: mov rbp,r11
0x55d5: jmp 0x4f70
0x5604: nop 
0x5606: nop word ptr cs:[rax + rax]
0x578b: nop dword ptr [rax + rax]
0x57b1: call 0x15c0
0x57b6: call 0x67f0
0x57bb: nop dword ptr [rax + rax]
0x57c0: push r12
0x57c2: push rbp
0x57c3: push rbx
0x57c4: mov rbx,rdi
0x57c7: call 0x15d0
0x57cc: mov r12d,dword ptr [rax]
0x57cf: mov rbp,rax
0x57d2: lea rax,[rip + 0x204a67]
0x57d9: test rbx,rbx
0x57dc: mov esi,0x38
0x57e1: cmove rbx,rax
0x57e5: mov rdi,rbx
0x57e8: call 0x67a0
0x57ed: mov dword ptr [rbp],r12d
0x57f1: pop rbx
0x57f2: pop rbp
0x57f3: pop r12
0x57f5: ret 
0x57f6: nop word ptr cs:[rax + rax]
0x5800: lea rax,[rip + 0x204a39]
0x5807: test rdi,rdi
0x580a: cmove rdi,rax
0x580e: mov eax,dword ptr [rdi]
0x5810: ret 
0x5811: nop dword ptr [rax + rax]
0x5816: nop word ptr cs:[rax + rax]
0x5820: lea rax,[rip + 0x204a19]
0x5827: test rdi,rdi
0x582a: cmove rdi,rax
0x582e: mov dword ptr [rdi],esi
0x5830: ret 
0x5831: nop dword ptr [rax + rax]
0x5836: nop word ptr cs:[rax + rax]
0x5840: lea rax,[rip + 0x2049f9]
0x5847: test rdi,rdi
0x584a: mov ecx,esi
0x584c: cmove rdi,rax
0x5850: mov eax,esi
0x5852: and ecx,0x1f
0x5855: shr al,5
0x5858: movzx eax,al
0x585b: lea rdi,[rdi + rax*4 + 8]
0x5860: mov esi,dword ptr [rdi]
0x5862: mov eax,esi
0x5864: shr eax,cl
0x5866: xor edx,eax
0x5868: and eax,1
0x586b: and edx,1
0x586e: shl edx,cl
0x5870: xor edx,esi
0x5872: mov dword ptr [rdi],edx
0x5874: ret 
0x5875: nop 
0x5876: nop word ptr cs:[rax + rax]
0x5880: lea rax,[rip + 0x2049b9]
0x5887: test rdi,rdi
0x588a: cmove rdi,rax
0x588e: mov eax,dword ptr [rdi + 4]
0x5891: mov dword ptr [rdi + 4],esi
0x5894: ret 
0x5895: nop 
0x5896: nop word ptr cs:[rax + rax]
0x58a0: lea rax,[rip + 0x204999]
0x58a7: test rdi,rdi
0x58aa: cmove rdi,rax
0x58ae: test rsi,rsi
0x58b1: mov dword ptr [rdi],0xa
0x58b7: je 0x58c7
0x58b9: test rdx,rdx
0x58bc: je 0x58c7
0x58be: mov qword ptr [rdi + 0x28],rsi
0x58c2: mov qword ptr [rdi + 0x30],rdx
0x58c6: ret 
0x58c7: sub rsp,8
0x58cb: call 0x15c0
0x58d0: push r15
0x58d2: push r14
0x58d4: lea rax,[rip + 0x204965]
0x58db: push r13
0x58dd: push r12
0x58df: mov r13,rdi
0x58e2: push rbp
0x58e3: push rbx
0x58e4: mov rbx,r8
0x58e7: mov r14,rsi
0x58ea: mov r15,rdx
0x58ed: sub rsp,0x18
0x58f1: test r8,r8
0x58f4: cmove rbx,rax
0x58f8: mov qword ptr [rsp + 8],rcx
0x58fd: call 0x15d0
0x5902: mov r12d,dword ptr [rax]
0x5905: mov rbp,rax
0x5908: lea rax,[rbx + 8]
0x590c: sub rsp,8
0x5910: mov r9d,dword ptr [rbx + 4]
0x5914: push qword ptr [rbx + 0x30]
0x5917: mov r8d,dword ptr [rbx]
0x591a: push qword ptr [rbx + 0x28]
0x591d: mov rdx,r15
0x5920: push rax
0x5921: mov rcx,qword ptr [rsp + 0x28]
0x5926: mov rsi,r14
0x5929: mov rdi,r13
0x592c: call 0x43d0
0x5931: mov dword ptr [rbp],r12d
0x5935: add rsp,0x38
0x5939: pop rbx
0x593a: pop rbp
0x593b: pop r12
0x593d: pop r13
0x593f: pop r14
0x5941: pop r15
0x5943: ret 
0x5944: nop 
0x5946: nop word ptr cs:[rax + rax]
0x5950: push r15
0x5952: push r14
0x5954: lea rax,[rip + 0x2048e5]
0x595b: push r13
0x595d: push r12
0x595f: mov r12,rdx
0x5962: push rbp
0x5963: push rbx
0x5964: mov rbx,rcx
0x5967: mov r14,rdi
0x596a: mov r15,rsi
0x596d: sub rsp,0x38
0x5971: test rcx,rcx
0x5974: cmove rbx,rax
0x5978: xor ebp,ebp
0x597a: call 0x15d0
0x597f: test r12,r12
0x5982: mov r13,rax
0x5985: mov eax,dword ptr [rax]
0x5987: sete bpl
0x598b: or ebp,dword ptr [rbx + 4]
0x598e: lea r10,[rbx + 8]
0x5992: sub rsp,8
0x5996: mov r8d,dword ptr [rbx]
0x5999: mov rcx,r15
0x599c: mov dword ptr [rsp + 0x14],eax
0x59a0: push qword ptr [rbx + 0x30]
0x59a3: mov rdx,r14
0x59a6: push qword ptr [rbx + 0x28]
0x59a9: push r10
0x59ab: xor esi,esi
0x59ad: mov r9d,ebp
0x59b0: xor edi,edi
0x59b2: mov qword ptr [rsp + 0x40],r10
0x59b7: call 0x43d0
0x59bc: lea rsi,[rax + 1]
0x59c0: mov qword ptr [rsp + 0x48],rax
0x59c5: add rsp,0x20
0x59c9: mov rdi,rsi
0x59cc: mov qword ptr [rsp + 0x18],rsi
0x59d1: call 0x65a0
0x59d6: mov qword ptr [rsp + 0x10],rax
0x59db: sub rsp,8
0x59df: push qword ptr [rbx + 0x30]
0x59e2: push qword ptr [rbx + 0x28]
0x59e5: mov r10,qword ptr [rsp + 0x38]
0x59ea: mov r9d,ebp
0x59ed: mov r8d,dword ptr [rbx]
0x59f0: mov rcx,r15
0x59f3: mov rdx,r14
0x59f6: mov rdi,rax
0x59f9: push r10
0x59fb: mov rsi,qword ptr [rsp + 0x38]
0x5a00: call 0x43d0
0x5a05: mov eax,dword ptr [rsp + 0x2c]
0x5a09: add rsp,0x20
0x5a0d: test r12,r12
0x5a10: mov dword ptr [r13],eax
0x5a14: je 0x5a1f
0x5a16: mov r11,qword ptr [rsp + 0x28]
0x5a1b: mov qword ptr [r12],r11
0x5a1f: mov rax,qword ptr [rsp + 0x10]
0x5a24: add rsp,0x38
0x5a28: pop rbx
0x5a29: pop rbp
0x5a2a: pop r12
0x5a2c: pop r13
0x5a2e: pop r14
0x5a30: pop r15
0x5a32: ret 
0x5a33: nop dword ptr [rax]
0x5a36: nop word ptr cs:[rax + rax]
0x5a40: mov rcx,rdx
0x5a43: xor edx,edx
0x5a45: jmp 0x5950
0x5a4a: nop word ptr [rax + rax]
0x5a50: mov eax,dword ptr [rip + 0x204622]
0x5a56: push r12
0x5a58: mov r12,qword ptr [rip + 0x204621]
0x5a5f: push rbp
0x5a60: push rbx
0x5a61: cmp eax,1
0x5a64: jle 0x5a91
0x5a66: sub eax,2
0x5a69: lea rbx,[r12 + 0x18]
0x5a6e: shl rax,4
0x5a72: lea rbp,[r12 + rax + 0x28]
0x5a77: nop word ptr [rax + rax]
0x5a80: mov rdi,qword ptr [rbx]
0x5a83: add rbx,0x10
0x5a87: call 0x15b0
0x5a8c: cmp rbx,rbp
0x5a8f: jne 0x5a80
0x5a91: mov rdi,qword ptr [r12 + 8]
0x5a96: lea rbx,[rip + 0x2046a3]
0x5a9d: cmp rdi,rbx
0x5aa0: je 0x5ab9
0x5aa2: call 0x15b0
0x5aa7: mov qword ptr [rip + 0x2045de],0x100
0x5ab2: mov qword ptr [rip + 0x2045df],rbx
0x5ab9: lea rbx,[rip + 0x2045d0]
0x5ac0: cmp r12,rbx
0x5ac3: je 0x5ad4
0x5ac5: mov rdi,r12
0x5ac8: call 0x15b0
0x5acd: mov qword ptr [rip + 0x2045ac],rbx
0x5ad4: pop rbx
0x5ad5: mov dword ptr [rip + 0x204599],1
0x5adf: pop rbp
0x5ae0: pop r12
0x5ae2: ret 
0x5ae3: nop dword ptr [rax]
0x5ae6: nop word ptr cs:[rax + rax]
0x5af0: lea rcx,[rip + 0x204749]
0x5af7: mov rdx,-1
0x5afe: jmp 0x5610
0x5b03: nop dword ptr [rax]
0x5b06: nop word ptr cs:[rax + rax]
0x5b10: lea rcx,[rip + 0x204729]
0x5b17: jmp 0x5610
0x5b1c: nop dword ptr [rax]
0x5b20: lea rcx,[rip + 0x204719]
0x5b27: mov rsi,rdi
0x5b2a: mov rdx,-1
0x5b31: xor edi,edi
0x5b33: jmp 0x5610
0x5b38: nop dword ptr [rax + rax]
0x5b40: lea rcx,[rip + 0x2046f9]
0x5b47: mov rdx,rsi
0x5b4a: mov rsi,rdi
0x5b4d: xor edi,edi
0x5b4f: jmp 0x5610
0x5b54: nop 
0x5b56: nop word ptr cs:[rax + rax]
0x5b60: sub rsp,0x48
0x5b64: mov rax,rdx
0x5b67: mov rdx,qword ptr fs:[0x28]
0x5b70: mov qword ptr [rsp + 0x38],rdx
0x5b75: xor edx,edx
0x5b77: cmp esi,0xa
0x5b7a: je 0x5be4
0x5b7c: mov dword ptr [rsp],esi
0x5b7f: mov rcx,rsp
0x5b82: mov rdx,-1
0x5b89: mov rsi,rax
0x5b8c: mov qword ptr [rsp + 4],0
0x5b95: mov qword ptr [rsp + 0xc],0
0x5b9e: mov qword ptr [rsp + 0x14],0
0x5ba7: mov qword ptr [rsp + 0x1c],0
0x5bb0: mov qword ptr [rsp + 0x24],0
0x5bb9: mov qword ptr [rsp + 0x2c],0
0x5bc2: mov dword ptr [rsp + 0x34],0
0x5bca: call 0x5610
0x5bcf: mov rcx,qword ptr [rsp + 0x38]
0x5bd4: xor rcx,qword ptr fs:[0x28]
0x5bdd: jne 0x5be9
0x5bdf: add rsp,0x48
0x5be3: ret 
0x5be4: call 0x15c0
0x5be9: call 0x1690
0x5bee: nop 
0x5bf0: sub rsp,0x48
0x5bf4: mov rax,rdx
0x5bf7: mov rdx,rcx
0x5bfa: mov rcx,qword ptr fs:[0x28]
0x5c03: mov qword ptr [rsp + 0x38],rcx
0x5c08: xor ecx,ecx
0x5c0a: cmp esi,0xa
0x5c0d: je 0x5c70
0x5c0f: mov dword ptr [rsp],esi
0x5c12: mov rcx,rsp
0x5c15: mov rsi,rax
0x5c18: mov qword ptr [rsp + 4],0
0x5c21: mov qword ptr [rsp + 0xc],0
0x5c2a: mov qword ptr [rsp + 0x14],0
0x5c33: mov qword ptr [rsp + 0x1c],0
0x5c3c: mov qword ptr [rsp + 0x24],0
0x5c45: mov qword ptr [rsp + 0x2c],0
0x5c4e: mov dword ptr [rsp + 0x34],0
0x5c56: call 0x5610
0x5c5b: mov rdx,qword ptr [rsp + 0x38]
0x5c60: xor rdx,qword ptr fs:[0x28]
0x5c69: jne 0x5c75
0x5c6b: add rsp,0x48
0x5c6f: ret 
0x5c70: call 0x15c0
0x5c75: call 0x1690
0x5c7a: nop word ptr [rax + rax]
0x5c80: mov rdx,rsi
0x5c83: mov esi,edi
0x5c85: xor edi,edi
0x5c87: jmp 0x5b60
0x5c8c: nop dword ptr [rax]
0x5c90: mov rcx,rdx
0x5c93: mov rdx,rsi
0x5c96: mov esi,edi
0x5c98: xor edi,edi
0x5c9a: jmp 0x5bf0
0x5c9f: nop 
0x5ca0: sub rsp,0x48
0x5ca4: mov ecx,edx
0x5ca6: mov rax,qword ptr fs:[0x28]
0x5caf: mov qword ptr [rsp + 0x38],rax
0x5cb4: xor eax,eax
0x5cb6: mov rax,qword ptr [rip + 0x2045b3]
0x5cbd: mov r8,rsp
0x5cc0: and ecx,0x1f
0x5cc3: movdqa xmm0,xmmword ptr [rip + 0x204575]
0x5ccb: mov qword ptr [rsp + 0x30],rax
0x5cd0: mov eax,edx
0x5cd2: movaps xmmword ptr [rsp],xmm0
0x5cd6: shr al,5
0x5cd9: movzx eax,al
0x5cdc: lea r9,[r8 + rax*4 + 8]
0x5ce1: movdqa xmm0,xmmword ptr [rip + 0x204567]
0x5ce9: movaps xmmword ptr [rsp + 0x10],xmm0
0x5cee: movdqa xmm0,xmmword ptr [rip + 0x20456a]
0x5cf6: movaps xmmword ptr [rsp + 0x20],xmm0
0x5cfb: mov edx,dword ptr [r9]
0x5cfe: mov eax,edx
0x5d00: shr eax,cl
0x5d02: not eax
0x5d04: and eax,1
0x5d07: shl eax,cl
0x5d09: mov rcx,r8
0x5d0c: xor eax,edx
0x5d0e: mov rdx,rsi
0x5d11: mov rsi,rdi
0x5d14: mov dword ptr [r9],eax
0x5d17: xor edi,edi
0x5d19: call 0x5610
0x5d1e: mov rsi,qword ptr [rsp + 0x38]
0x5d23: xor rsi,qword ptr fs:[0x28]
0x5d2c: jne 0x5d33
0x5d2e: add rsp,0x48
0x5d32: ret 
0x5d33: call 0x1690
0x5d38: nop dword ptr [rax + rax]
0x5d40: movsx edx,sil
0x5d44: mov rsi,-1
0x5d4b: jmp 0x5ca0
0x5d50: mov edx,0x3a
0x5d55: mov rsi,-1
0x5d5c: jmp 0x5ca0
0x5d61: nop dword ptr [rax + rax]
0x5d66: nop word ptr cs:[rax + rax]
0x5d70: mov edx,0x3a
0x5d75: jmp 0x5ca0
0x5d7a: nop word ptr [rax + rax]
0x5e04: call 0x15c0
0x5e09: call 0x1690
0x5e0e: nop 
0x5e10: sub rsp,0x48
0x5e14: mov r9,rcx
0x5e17: mov rcx,qword ptr [rip + 0x204452]
0x5e1e: movdqa xmm0,xmmword ptr [rip + 0x20441a]
0x5e26: mov rax,qword ptr fs:[0x28]
0x5e2f: mov qword ptr [rsp + 0x38],rax
0x5e34: xor eax,eax
0x5e36: movaps xmmword ptr [rsp],xmm0
0x5e3a: test rsi,rsi
0x5e3d: mov qword ptr [rsp + 0x30],rcx
0x5e42: mov dword ptr [rsp],0xa
0x5e49: movdqa xmm0,xmmword ptr [rip + 0x2043ff]
0x5e51: movaps xmmword ptr [rsp + 0x10],xmm0
0x5e56: movdqa xmm0,xmmword ptr [rip + 0x204402]
0x5e5e: movaps xmmword ptr [rsp + 0x20],xmm0
0x5e63: je 0x5e97
0x5e65: test rdx,rdx
0x5e68: je 0x5e97
0x5e6a: mov qword ptr [rsp + 0x28],rsi
0x5e6f: mov qword ptr [rsp + 0x30],rdx
0x5e74: mov rcx,rsp
0x5e77: mov rdx,r8
0x5e7a: mov rsi,r9
0x5e7d: call 0x5610
0x5e82: mov rdi,qword ptr [rsp + 0x38]
0x5e87: xor rdi,qword ptr fs:[0x28]
0x5e90: jne 0x5e9c
0x5e92: add rsp,0x48
0x5e96: ret 
0x5e97: call 0x15c0
0x5e9c: call 0x1690
0x5ea1: nop dword ptr [rax + rax]
0x5ea6: nop word ptr cs:[rax + rax]
0x5eb0: mov r8,-1
0x5eb7: jmp 0x5e10
0x5ebc: nop dword ptr [rax]
0x5ec0: mov rcx,rdx
0x5ec3: mov r8,-1
0x5eca: mov rdx,rsi
0x5ecd: mov rsi,rdi
0x5ed0: xor edi,edi
0x5ed2: jmp 0x5e10
0x5ed7: nop word ptr [rax + rax]
0x5ee0: mov r8,rcx
0x5ee3: mov rcx,rdx
0x5ee6: mov rdx,rsi
0x5ee9: mov rsi,rdi
0x5eec: xor edi,edi
0x5eee: jmp 0x5e10
0x5ef3: nop dword ptr [rax]
0x5ef6: nop word ptr cs:[rax + rax]
0x5f00: lea rcx,[rip + 0x204139]
0x5f07: jmp 0x5610
0x5f0c: nop dword ptr [rax]
0x5f10: lea rcx,[rip + 0x204129]
0x5f17: mov rdx,rsi
0x5f1a: mov rsi,rdi
0x5f1d: xor edi,edi
0x5f1f: jmp 0x5610
0x5f24: nop 
0x5f26: nop word ptr cs:[rax + rax]
0x5f30: lea rcx,[rip + 0x204109]
0x5f37: mov rdx,-1
0x5f3e: jmp 0x5610
0x5f43: nop dword ptr [rax]
0x5f46: nop word ptr cs:[rax + rax]
0x5f50: lea rcx,[rip + 0x2040e9]
0x5f57: mov rsi,rdi
0x5f5a: mov rdx,-1
0x5f61: xor edi,edi
0x5f63: jmp 0x5610
0x5f68: nop dword ptr [rax + rax]
0x5f7e: nop 
0x6026: nop word ptr cs:[rax + rax]
0x60b5: nop dword ptr [rax]
0x60b8: mov r8,rcx
0x60bb: mov rcx,rdx
0x60be: lea rdx,[rip + 0x1eaf]
0x60c5: mov esi,1
0x60ca: xor eax,eax
0x60cc: call 0x18a0
0x60d1: jmp 0x5fbc
0x60d6: nop word ptr cs:[rax + rax]
0x6135: nop dword ptr [rax]
0x6171: nop dword ptr [rax]
0x61b8: nop dword ptr [rax + rax]
0x6207: nop word ptr [rax + rax]
0x6264: nop dword ptr [rax]
0x6292: nop word ptr [rax + rax]
0x6346: nop word ptr cs:[rax + rax]
0x6397: nop word ptr [rax + rax]
0x63a0: xor r9d,r9d
0x63a3: cmp qword ptr [r8],0
0x63a7: je 0x63bb
0x63a9: nop dword ptr [rax]
0x63b0: add r9,1
0x63b4: cmp qword ptr [r8 + r9*8],0
0x63b9: jne 0x63b0
0x63bb: jmp 0x5f80
0x63c0: sub rsp,0x68
0x63c4: mov r10,r8
0x63c7: xor r9d,r9d
0x63ca: mov rax,qword ptr fs:[0x28]
0x63d3: mov qword ptr [rsp + 0x58],rax
0x63d8: xor eax,eax
0x63da: mov r8,rsp
0x63dd: nop dword ptr [rax]
0x63e0: mov eax,dword ptr [r10]
0x63e3: cmp eax,0x2f
0x63e6: ja 0x642a
0x63e8: mov r11d,eax
0x63eb: add r11,qword ptr [r10 + 0x10]
0x63ef: add eax,8
0x63f2: mov dword ptr [r10],eax
0x63f5: mov rax,qword ptr [r11]
0x63f8: test rax,rax
0x63fb: mov qword ptr [r8 + r9*8],rax
0x63ff: je 0x640b
0x6401: add r9,1
0x6405: cmp r9,0xa
0x6409: jne 0x63e0
0x640b: call 0x5f80
0x6410: mov rax,qword ptr [rsp + 0x58]
0x6415: xor rax,qword ptr fs:[0x28]
0x641e: jne 0x6425
0x6420: add rsp,0x68
0x6424: ret 
0x6425: call 0x1690
0x642a: mov r11,qword ptr [r10 + 8]
0x642e: lea rax,[r11 + 8]
0x6432: mov qword ptr [r10 + 8],rax
0x6436: jmp 0x63f5
0x6438: nop dword ptr [rax + rax]
0x6500: call 0x1690
0x650c: mov rax,rbx
0x650f: add rbx,8
0x6513: jmp 0x64c6
0x6515: nop 
0x6516: nop word ptr cs:[rax + rax]
0x6520: push rbx
0x6521: lea rsi,[rip + 0x1a9a]
0x6528: mov edx,5
0x652d: xor edi,edi
0x652f: call 0x1660
0x6534: lea rdx,[rip + 0x1a9c]
0x653b: mov rsi,rax
0x653e: mov edi,1
0x6543: xor eax,eax
0x6545: call 0x1810
0x654a: lea rsi,[rip + 0x1a9c]
0x6551: mov edx,5
0x6556: xor edi,edi
0x6558: call 0x1660
0x655d: lea rcx,[rip + 0xff4]
0x6564: lea rdx,[rip + 0x949]
0x656b: mov rsi,rax
0x656e: mov edi,1
0x6573: xor eax,eax
0x6575: call 0x1810
0x657a: mov rbx,qword ptr [rip + 0x203b27]
0x6581: lea rsi,[rip + 0x1c98]
0x6588: xor edi,edi
0x658a: mov edx,5
0x658f: call 0x1660
0x6594: mov rsi,rbx
0x6597: mov rdi,rax
0x659a: pop rbx
0x659b: jmp 0x1740
0x65ba: nop word ptr [rax + rax]
0x65c0: mov rax,rdi
0x65c3: mul rsi
0x65c6: mov rdi,rax
0x65c9: seto al
0x65cc: test rdi,rdi
0x65cf: js 0x65db
0x65d1: movzx eax,al
0x65d4: test rax,rax
0x65d7: jne 0x65db
0x65d9: jmp 0x65a0
0x65db: sub rsp,8
0x65df: call 0x67f0
0x65e4: nop 
0x65e6: nop word ptr cs:[rax + rax]
0x65f0: jmp 0x65a0
0x65f2: nop dword ptr [rax]
0x65f6: nop word ptr cs:[rax + rax]
0x6609: test rdi,rdi
0x660c: jne 0x6628
0x6622: nop word ptr [rax + rax]
0x6628: call 0x15b0
0x662d: xor eax,eax
0x662f: pop rbx
0x6630: ret 
0x6636: nop word ptr cs:[rax + rax]
0x6640: mov rax,rsi
0x6643: mul rdx
0x6646: mov rsi,rax
0x6649: seto al
0x664c: test rsi,rsi
0x664f: js 0x665b
0x6651: movzx eax,al
0x6654: test rax,rax
0x6657: jne 0x665b
0x6659: jmp 0x6600
0x665b: sub rsp,8
0x665f: call 0x67f0
0x6664: nop 
0x6666: nop word ptr cs:[rax + rax]
0x6670: test rdi,rdi
0x6673: mov r9,rdx
0x6676: mov rcx,qword ptr [rsi]
0x6679: je 0x66b0
0x667b: xor edx,edx
0x667d: movabs rax,0x5555555555555554
0x6687: div r9
0x668a: cmp rax,rcx
0x668d: jbe 0x66cb
0x668f: mov rax,rcx
0x6692: shr rax,1
0x6695: lea rcx,[rax + rcx + 1]
0x669a: mov qword ptr [rsi],rcx
0x669d: imul rcx,r9
0x66a1: mov rsi,rcx
0x66a4: jmp 0x6600
0x66a9: nop dword ptr [rax]
0x66b0: test rcx,rcx
0x66b3: je 0x66d8
0x66b5: mov rax,rcx
0x66b8: mul r9
0x66bb: seto dl
0x66be: test rax,rax
0x66c1: movzx edx,dl
0x66c4: js 0x66cb
0x66c6: test rdx,rdx
0x66c9: je 0x669a
0x66cb: sub rsp,8
0x66cf: call 0x67f0
0x66d4: nop dword ptr [rax]
0x66d8: xor edx,edx
0x66da: mov eax,0x80
0x66df: xor r8d,r8d
0x66e2: div r9
0x66e5: test rax,rax
0x66e8: sete r8b
0x66ec: lea rcx,[r8 + rax]
0x66f0: jmp 0x66b5
0x66f2: nop dword ptr [rax]
0x66f6: nop word ptr cs:[rax + rax]
0x6700: test rdi,rdi
0x6703: mov rax,qword ptr [rsi]
0x6706: je 0x6730
0x6708: movabs rdx,0x5555555555555553
0x6712: cmp rax,rdx
0x6715: ja 0x6741
0x6717: mov rdx,rax
0x671a: shr rdx,1
0x671d: lea rax,[rdx + rax + 1]
0x6722: mov qword ptr [rsi],rax
0x6725: mov rsi,rax
0x6728: jmp 0x6600
0x672d: nop dword ptr [rax]
0x6730: test rax,rax
0x6733: mov edx,0x80
0x6738: cmove rax,rdx
0x673c: test rax,rax
0x673f: jns 0x6722
0x6741: sub rsp,8
0x6745: call 0x67f0
0x674a: nop word ptr [rax + rax]
0x6750: push rbx
0x6751: mov rbx,rdi
0x6754: call 0x65a0
0x6759: mov rdx,rbx
0x675c: xor esi,esi
0x675e: mov rdi,rax
0x6761: pop rbx
0x6762: jmp 0x1700
0x6767: nop word ptr [rax + rax]
0x6770: mov rax,rdi
0x6773: sub rsp,8
0x6777: mul rsi
0x677a: seto dl
0x677d: test rax,rax
0x6780: js 0x6799
0x6782: movzx edx,dl
0x6785: test rdx,rdx
0x6788: jne 0x6799
0x678a: call 0x1750
0x678f: test rax,rax
0x6792: je 0x6799
0x6794: add rsp,8
0x6798: ret 
0x6799: call 0x67f0
0x679e: nop 
0x67a0: push rbp
0x67a1: push rbx
0x67a2: mov rbp,rdi
0x67a5: mov rdi,rsi
0x67a8: mov rbx,rsi
0x67ab: sub rsp,8
0x67af: call 0x65a0
0x67b4: add rsp,8
0x67b8: mov rdx,rbx
0x67bb: mov rsi,rbp
0x67be: pop rbx
0x67bf: pop rbp
0x67c0: mov rdi,rax
0x67c3: jmp 0x1770
0x67c8: nop dword ptr [rax + rax]
0x67d0: push rbx
0x67d1: mov rbx,rdi
0x67d4: call 0x1680
0x67d9: mov rdi,rbx
0x67dc: lea rsi,[rax + 1]
0x67e0: pop rbx
0x67e1: jmp 0x67a0
0x67e3: nop word ptr cs:[rax + rax]
0x67ed: nop dword ptr [rax]
0x6820: call 0x15c0
0x6825: nop word ptr cs:[rax + rax]
0x682f: nop 
0x6875: nop dword ptr [rax]
0x68ab: nop dword ptr [rax + rax]
0x6901: cmp esi,0x406
0x6907: jne 0x6950
0x6909: mov rax,qword ptr [rsp + 0x10]
0x690e: cmp dword ptr [rip + 0x203963],0
0x6915: mov dword ptr [rsp],0x18
0x691c: mov r12d,dword ptr [rax + 0x10]
0x6920: mov edx,r12d
0x6923: js 0x6a53
0x6929: xor eax,eax
0x692b: mov esi,0x406
0x6930: call 0x1610
0x6935: test eax,eax
0x6937: mov ebx,eax
0x6939: js 0x6ac8
0x693f: mov dword ptr [rip + 0x20392f],1
0x6949: jmp 0x6990
0x694b: nop dword ptr [rax + rax]
0x6950: cmp esi,0xb
0x6953: je 0x6980
0x6955: jg 0x69b0
0x6957: cmp esi,4
0x695a: je 0x6a30
0x6960: jg 0x6a20
0x6966: cmp esi,2
0x6969: je 0x6a30
0x696f: jg 0x6980
0x6971: cmp esi,1
0x6974: jne 0x69d8
0x6976: nop word ptr cs:[rax + rax]
0x6980: mov edi,ebp
0x6982: xor eax,eax
0x6984: call 0x1610
0x6989: mov ebx,eax
0x698b: nop dword ptr [rax + rax]
0x69af: nop 
0x69b0: cmp esi,0x407
0x69b6: jg 0x6a00
0x69b8: cmp esi,0x406
0x69be: jge 0x6a30
0x69c0: cmp esi,0x401
0x69c6: je 0x6980
0x69c8: cmp esi,0x402
0x69ce: je 0x6a30
0x69d0: cmp esi,0x400
0x69d6: je 0x6a30
0x69d8: mov eax,dword ptr [rsp]
0x69db: cmp eax,0x2f
0x69de: ja 0x6b1a
0x69e4: add rax,qword ptr [rsp + 0x10]
0x69e9: mov rdx,qword ptr [rax]
0x69ec: mov edi,ebp
0x69ee: xor eax,eax
0x69f0: call 0x1610
0x69f5: mov ebx,eax
0x69f7: jmp 0x6990
0x69f9: nop dword ptr [rax]
0x6a00: cmp esi,0x409
0x6a06: je 0x6a30
0x6a08: jl 0x6980
0x6a0e: cmp esi,0x40a
0x6a14: jne 0x69d8
0x6a16: jmp 0x6980
0x6a1b: nop dword ptr [rax + rax]
0x6a20: cmp esi,9
0x6a23: je 0x6980
0x6a29: jg 0x6a30
0x6a2b: cmp esi,8
0x6a2e: jne 0x69d8
0x6a30: mov eax,dword ptr [rsp]
0x6a33: cmp eax,0x2f
0x6a36: ja 0x6b24
0x6a3c: add rax,qword ptr [rsp + 0x10]
0x6a41: mov edx,dword ptr [rax]
0x6a43: mov edi,ebp
0x6a45: xor eax,eax
0x6a47: call 0x1610
0x6a4c: mov ebx,eax
0x6a4e: jmp 0x6990
0x6a53: xor esi,esi
0x6a55: xor eax,eax
0x6a57: call 0x1610
0x6a5c: test eax,eax
0x6a5e: mov ebx,eax
0x6a60: js 0x6990
0x6a66: cmp dword ptr [rip + 0x20380b],-1
0x6a6d: jne 0x6990
0x6a73: xor eax,eax
0x6a75: mov esi,1
0x6a7a: mov edi,ebx
0x6a7c: call 0x1610
0x6a81: test eax,eax
0x6a83: js 0x6aa1
0x6a85: or eax,1
0x6a88: mov esi,2
0x6a8d: mov edi,ebx
0x6a8f: mov edx,eax
0x6a91: xor eax,eax
0x6a93: call 0x1610
0x6a98: cmp eax,-1
0x6a9b: jne 0x6990
0x6aa1: call 0x15d0
0x6aa6: mov r12d,dword ptr [rax]
0x6aa9: mov rbp,rax
0x6aac: mov edi,ebx
0x6aae: call 0x1710
0x6ab3: mov ebx,0xffffffff
0x6ab8: mov dword ptr [rbp],r12d
0x6abc: jmp 0x6990
0x6ac1: nop dword ptr [rax]
0x6ac8: call 0x15d0
0x6acd: cmp dword ptr [rax],0x16
0x6ad0: jne 0x693f
0x6ad6: xor esi,esi
0x6ad8: xor eax,eax
0x6ada: mov edx,r12d
0x6add: mov edi,ebp
0x6adf: call 0x1610
0x6ae4: test eax,eax
0x6ae6: mov ebx,eax
0x6ae8: js 0x6990
0x6aee: mov dword ptr [rip + 0x203780],0xffffffff
0x6af8: jmp 0x6a73
0x6afd: call 0x1690
0x6b1a: mov rax,qword ptr [rsp + 8]
0x6b1f: jmp 0x69e9
0x6b24: mov rax,qword ptr [rsp + 8]
0x6b29: jmp 0x6a41
0x6b2e: nop 
0x6b53: nop dword ptr [rax + rax]
0x6b7f: nop 
0x6bc7: nop word ptr [rax + rax]
0x6c4e: call 0x1690
0x6c53: nop word ptr cs:[rax + rax]
0x6c5d: nop dword ptr [rax]
0x6c60: push r12
0x6c62: push rbp
0x6c63: mov rbp,rdi
0x6c66: push rbx
0x6c67: call 0x1600
0x6c6c: mov ebx,dword ptr [rbp]
0x6c6f: mov rdi,rbp
0x6c72: mov r12,rax
0x6c75: call 0x6830
0x6c7a: and ebx,0x20
0x6c7d: test ebx,ebx
0x6c7f: jne 0x6c98
0x6c81: test eax,eax
0x6c83: je 0x6c8f
0x6c85: test r12,r12
0x6c88: mov eax,0xffffffff
0x6c8d: je 0x6cc8
0x6c8f: pop rbx
0x6c90: pop rbp
0x6c91: pop r12
0x6c93: ret 
0x6c94: nop dword ptr [rax]
0x6c98: test eax,eax
0x6c9a: jne 0x6cb8
0x6c9c: call 0x15d0
0x6ca1: mov dword ptr [rax],0
0x6ca7: mov eax,0xffffffff
0x6cac: pop rbx
0x6cad: pop rbp
0x6cae: pop r12
0x6cb0: ret 
0x6cb1: nop dword ptr [rax]
0x6cb8: pop rbx
0x6cb9: mov eax,0xffffffff
0x6cbe: pop rbp
0x6cbf: pop r12
0x6cc1: ret 
0x6cc2: nop word ptr [rax + rax]
0x6cc8: call 0x15d0
0x6ccd: cmp dword ptr [rax],9
0x6cd0: pop rbx
0x6cd1: pop rbp
0x6cd2: pop r12
0x6cd4: setne al
0x6cd7: movzx eax,al
0x6cda: neg eax
0x6cdc: ret 
0x6cdd: nop dword ptr [rax]
0x6d1a: nop word ptr [rax + rax]
0x6d66: nop word ptr cs:[rax + rax]
0x6d7c: nop dword ptr [rax]
0x6d80: push r15
0x6d82: push r14
0x6d84: mov r15,rdx
0x6d87: push r13
0x6d89: push r12
0x6d8b: lea r12,[rip + 0x202c7e]
0x6d92: push rbp
0x6d93: lea rbp,[rip + 0x202c7e]
0x6d9a: push rbx
0x6d9b: mov r13d,edi
0x6d9e: mov r14,rsi
0x6da1: sub rbp,r12
0x6da4: sub rsp,8
0x6da8: sar rbp,3
0x6dac: call 0x1580
0x6db1: test rbp,rbp
0x6db4: je 0x6dd6
0x6db6: xor ebx,ebx
0x6db8: nop dword ptr [rax + rax]
0x6dc0: mov rdx,r15
0x6dc3: mov rsi,r14
0x6dc6: mov edi,r13d
0x6dc9: call qword ptr [r12 + rbx*8]
0x6dcd: add rbx,1
0x6dd1: cmp rbp,rbx
0x6dd4: jne 0x6dc0
0x6dd6: add rsp,8
0x6dda: pop rbx
0x6ddb: pop rbp
0x6ddc: pop r12
0x6dde: pop r13
0x6de0: pop r14
0x6de2: pop r15
0x6de4: ret 
0x6de5: nop 
0x6de6: nop word ptr cs:[rax + rax]
0x6df0: ret 
0x6df2: nop word ptr cs:[rax + rax]
0x6dfc: nop dword ptr [rax]
0x6e10: sub rsp,8
0x6e14: add rsp,8
0x6e18: ret 
