0x9190:	sub	rsp, 8
0x9194:	add	rsp, 8
0x9198:	ret	


0x9180:	mov	rdx, qword ptr [rip + 0x202e81]
0x9187:	xor	esi, esi
0x9189:	jmp	0x1870


0x9170:	ret	


0x9100:	push	r15
0x9102:	push	r14
0x9104:	mov	r15, rdx
0x9107:	push	r13
0x9109:	push	r12
0x910b:	lea	r12, [rip + 0x2028fe]
0x9112:	push	rbp
0x9113:	lea	rbp, [rip + 0x2028fe]
0x911a:	push	rbx
0x911b:	mov	r13d, edi
0x911e:	mov	r14, rsi
0x9121:	sub	rbp, r12
0x9124:	sub	rsp, 8
0x9128:	sar	rbp, 3
0x912c:	call	0x1580


0x90c0:	sub	rsp, 8
0x90c4:	mov	edi, 0xe
0x90c9:	call	0x17b0


0x9060:	sub	rsp, 8
0x9064:	xor	esi, esi
0x9066:	call	0x1800


0x8fe0:	push	r12
0x8fe2:	push	rbp
0x8fe3:	mov	rbp, rdi
0x8fe6:	push	rbx
0x8fe7:	call	0x1600


0x8f50:	push	r13
0x8f52:	push	r12
0x8f54:	mov	r13, rsi
0x8f57:	push	rbp
0x8f58:	push	rbx
0x8f59:	mov	rbx, rdi
0x8f5c:	mov	r12, rdx
0x8f5f:	sub	rsp, 0x18
0x8f63:	mov	rax, qword ptr fs:[0x28]
0x8f6c:	mov	qword ptr [rsp + 8], rax
0x8f71:	xor	eax, eax
0x8f73:	lea	rax, [rsp + 4]
0x8f78:	test	rdi, rdi
0x8f7b:	cmove	rbx, rax
0x8f7f:	mov	rdi, rbx
0x8f82:	call	0x16b0


0x8ef0:	mov	rax, qword ptr [rdi + 8]
0x8ef4:	cmp	qword ptr [rdi + 0x10], rax
0x8ef8:	je	0x8f00


0x8eb0:	test	rdi, rdi
0x8eb3:	push	rbx
0x8eb4:	mov	rbx, rdi
0x8eb7:	je	0x8eca


0x8c30:	push	r12
0x8c32:	push	rbp
0x8c33:	mov	ebp, edi
0x8c35:	push	rbx
0x8c36:	sub	rsp, 0x50
0x8c3a:	mov	rax, qword ptr fs:[0x28]
0x8c43:	mov	qword ptr [rsp + 0x18], rax
0x8c48:	xor	eax, eax
0x8c4a:	lea	rax, [rsp + 0x70]
0x8c4f:	test	esi, esi
0x8c51:	mov	qword ptr [rsp + 0x30], rdx
0x8c56:	mov	qword ptr [rsp + 0x38], rcx
0x8c5b:	mov	qword ptr [rsp + 0x40], r8
0x8c60:	mov	qword ptr [rsp + 8], rax
0x8c65:	lea	rax, [rsp + 0x20]
0x8c6a:	mov	qword ptr [rsp + 0x48], r9
0x8c6f:	mov	dword ptr [rsp], 0x10
0x8c76:	mov	qword ptr [rsp + 0x10], rax
0x8c7b:	je	0x8e82


0x8bb0:	push	r12
0x8bb2:	push	rbp
0x8bb3:	push	rbx
0x8bb4:	mov	rbx, rdi
0x8bb7:	call	0x1780


0x8b70:	lea	rsi, [rip + 0x1ad8]
0x8b77:	sub	rsp, 8
0x8b7b:	mov	edx, 5
0x8b80:	xor	edi, edi
0x8b82:	call	0x1660


0x8b50:	push	rbx
0x8b51:	mov	rbx, rdi
0x8b54:	call	0x1680


0x8b20:	push	rbp
0x8b21:	push	rbx
0x8b22:	mov	rbp, rdi
0x8b25:	mov	rdi, rsi
0x8b28:	mov	rbx, rsi
0x8b2b:	sub	rsp, 8
0x8b2f:	call	0x8920


0x8af0:	mov	rax, rdi
0x8af3:	sub	rsp, 8
0x8af7:	mul	rsi
0x8afa:	seto	dl
0x8afd:	test	rax, rax
0x8b00:	js	0x8b19


0x8ad0:	push	rbx
0x8ad1:	mov	rbx, rdi
0x8ad4:	call	0x8920


0x8a80:	test	rdi, rdi
0x8a83:	mov	rax, qword ptr [rsi]
0x8a86:	je	0x8ab0


0x89f0:	test	rdi, rdi
0x89f3:	mov	r9, rdx
0x89f6:	mov	rcx, qword ptr [rsi]
0x89f9:	je	0x8a30


0x89c0:	mov	rax, rsi
0x89c3:	mul	rdx
0x89c6:	mov	rsi, rax
0x89c9:	seto	al
0x89cc:	test	rsi, rsi
0x89cf:	js	0x89db


0x8980:	test	rsi, rsi
0x8983:	push	rbx
0x8984:	mov	rbx, rsi
0x8987:	jne	0x898e


0x8970:	jmp	0x8920


0x8940:	mov	rax, rdi
0x8943:	mul	rsi
0x8946:	mov	rdi, rax
0x8949:	seto	al
0x894c:	test	rdi, rdi
0x894f:	js	0x895b


0x8920:	push	rbx
0x8921:	mov	rbx, rdi
0x8924:	call	0x1790


0x88a0:	push	rbx
0x88a1:	lea	rsi, [rip + 0x1a9a]
0x88a8:	mov	edx, 5
0x88ad:	xor	edi, edi
0x88af:	call	0x1660


0x87c0:	push	rbp
0x87c1:	push	rbx
0x87c2:	mov	r10d, 0x20
0x87c8:	xor	r11d, r11d
0x87cb:	sub	rsp, 0xb8
0x87d2:	mov	rax, qword ptr fs:[0x28]
0x87db:	mov	qword ptr [rsp + 0x78], rax
0x87e0:	xor	eax, eax
0x87e2:	lea	rax, [rsp + 0xd0]
0x87ea:	mov	qword ptr [rsp + 0xa0], r8
0x87f2:	lea	rbx, [rsp + 0xd0]
0x87fa:	lea	r8, [rsp + 0x20]
0x87ff:	mov	qword ptr [rsp + 0xa8], r9
0x8807:	mov	dword ptr [rsp + 8], 0x20
0x880f:	mov	qword ptr [rsp + 0x10], rax
0x8814:	lea	rax, [rsp + 0x80]
0x881c:	xor	r9d, r9d
0x881f:	mov	qword ptr [rsp + 0x18], rax
0x8824:	mov	rbp, rax
0x8827:	nop	word ptr [rax + rax]
0x8830:	cmp	r10d, 0x2f
0x8834:	ja	0x888c


0x8740:	sub	rsp, 0x68
0x8744:	mov	r10, r8
0x8747:	xor	r9d, r9d
0x874a:	mov	rax, qword ptr fs:[0x28]
0x8753:	mov	qword ptr [rsp + 0x58], rax
0x8758:	xor	eax, eax
0x875a:	mov	r8, rsp
0x875d:	nop	dword ptr [rax]
0x8760:	mov	eax, dword ptr [r10]
0x8763:	cmp	eax, 0x2f
0x8766:	ja	0x87aa


0x8720:	xor	r9d, r9d
0x8723:	cmp	qword ptr [r8], 0
0x8727:	je	0x873b


0x8300:	push	r15
0x8302:	push	r14
0x8304:	push	r13
0x8306:	push	r12
0x8308:	mov	r12, r9
0x830b:	push	rbp
0x830c:	push	rbx
0x830d:	mov	rbp, rdi
0x8310:	mov	rbx, r8
0x8313:	sub	rsp, 0x28
0x8317:	test	rsi, rsi
0x831a:	je	0x8438


0x82f0:	mov	edx, 3
0x82f5:	xor	esi, esi
0x82f7:	xor	eax, eax
0x82f9:	jmp	0x8c30


0x82d0:	lea	rcx, [rip + 0x203d69]
0x82d7:	mov	rsi, rdi
0x82da:	mov	rdx, -1
0x82e1:	xor	edi, edi
0x82e3:	jmp	0x7990


0x82b0:	lea	rcx, [rip + 0x203d89]
0x82b7:	mov	rdx, -1
0x82be:	jmp	0x7990


0x8290:	lea	rcx, [rip + 0x203da9]
0x8297:	mov	rdx, rsi
0x829a:	mov	rsi, rdi
0x829d:	xor	edi, edi
0x829f:	jmp	0x7990


0x8280:	lea	rcx, [rip + 0x203db9]
0x8287:	jmp	0x7990


0x8260:	mov	r8, rcx
0x8263:	mov	rcx, rdx
0x8266:	mov	rdx, rsi
0x8269:	mov	rsi, rdi
0x826c:	xor	edi, edi
0x826e:	jmp	0x8190


0x8240:	mov	rcx, rdx
0x8243:	mov	r8, -1
0x824a:	mov	rdx, rsi
0x824d:	mov	rsi, rdi
0x8250:	xor	edi, edi
0x8252:	jmp	0x8190


0x8230:	mov	r8, -1
0x8237:	jmp	0x8190


0x8190:	sub	rsp, 0x48
0x8194:	mov	r9, rcx
0x8197:	mov	rcx, qword ptr [rip + 0x2040d2]
0x819e:	movdqa	xmm0, xmmword ptr [rip + 0x20409a]
0x81a6:	mov	rax, qword ptr fs:[0x28]
0x81af:	mov	qword ptr [rsp + 0x38], rax
0x81b4:	xor	eax, eax
0x81b6:	movaps	xmmword ptr [rsp], xmm0
0x81ba:	test	rsi, rsi
0x81bd:	mov	qword ptr [rsp + 0x30], rcx
0x81c2:	mov	dword ptr [rsp], 0xa
0x81c9:	movdqa	xmm0, xmmword ptr [rip + 0x20407f]
0x81d1:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x81d6:	movdqa	xmm0, xmmword ptr [rip + 0x204082]
0x81de:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x81e3:	je	0x8217


0x8100:	sub	rsp, 0x48
0x8104:	mov	rax, rdx
0x8107:	mov	rdx, qword ptr fs:[0x28]
0x8110:	mov	qword ptr [rsp + 0x38], rdx
0x8115:	xor	edx, edx
0x8117:	cmp	esi, 0xa
0x811a:	je	0x8184


0x80f0:	mov	edx, 0x3a
0x80f5:	jmp	0x8020


0x80d0:	mov	edx, 0x3a
0x80d5:	mov	rsi, -1
0x80dc:	jmp	0x8020


0x80c0:	movsx	edx, sil
0x80c4:	mov	rsi, -1
0x80cb:	jmp	0x8020


0x8020:	sub	rsp, 0x48
0x8024:	mov	ecx, edx
0x8026:	mov	rax, qword ptr fs:[0x28]
0x802f:	mov	qword ptr [rsp + 0x38], rax
0x8034:	xor	eax, eax
0x8036:	mov	rax, qword ptr [rip + 0x204233]
0x803d:	mov	r8, rsp
0x8040:	and	ecx, 0x1f
0x8043:	movdqa	xmm0, xmmword ptr [rip + 0x2041f5]
0x804b:	mov	qword ptr [rsp + 0x30], rax
0x8050:	mov	eax, edx
0x8052:	movaps	xmmword ptr [rsp], xmm0
0x8056:	shr	al, 5
0x8059:	movzx	eax, al
0x805c:	lea	r9, [r8 + rax*4 + 8]
0x8061:	movdqa	xmm0, xmmword ptr [rip + 0x2041e7]
0x8069:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x806e:	movdqa	xmm0, xmmword ptr [rip + 0x2041ea]
0x8076:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x807b:	mov	edx, dword ptr [r9]
0x807e:	mov	eax, edx
0x8080:	shr	eax, cl
0x8082:	not	eax
0x8084:	and	eax, 1
0x8087:	shl	eax, cl
0x8089:	mov	rcx, r8
0x808c:	xor	eax, edx
0x808e:	mov	rdx, rsi
0x8091:	mov	rsi, rdi
0x8094:	mov	dword ptr [r9], eax
0x8097:	xor	edi, edi
0x8099:	call	0x7990


0x8010:	mov	rcx, rdx
0x8013:	mov	rdx, rsi
0x8016:	mov	esi, edi
0x8018:	xor	edi, edi
0x801a:	jmp	0x7f70


0x8000:	mov	rdx, rsi
0x8003:	mov	esi, edi
0x8005:	xor	edi, edi
0x8007:	jmp	0x7ee0


0x7f70:	sub	rsp, 0x48
0x7f74:	mov	rax, rdx
0x7f77:	mov	rdx, rcx
0x7f7a:	mov	rcx, qword ptr fs:[0x28]
0x7f83:	mov	qword ptr [rsp + 0x38], rcx
0x7f88:	xor	ecx, ecx
0x7f8a:	cmp	esi, 0xa
0x7f8d:	je	0x7ff0


0x7ee0:	sub	rsp, 0x48
0x7ee4:	mov	rax, rdx
0x7ee7:	mov	rdx, qword ptr fs:[0x28]
0x7ef0:	mov	qword ptr [rsp + 0x38], rdx
0x7ef5:	xor	edx, edx
0x7ef7:	cmp	esi, 0xa
0x7efa:	je	0x7f64


0x7ec0:	lea	rcx, [rip + 0x204379]
0x7ec7:	mov	rdx, rsi
0x7eca:	mov	rsi, rdi
0x7ecd:	xor	edi, edi
0x7ecf:	jmp	0x7990


0x7ea0:	lea	rcx, [rip + 0x204399]
0x7ea7:	mov	rsi, rdi
0x7eaa:	mov	rdx, -1
0x7eb1:	xor	edi, edi
0x7eb3:	jmp	0x7990


0x7e90:	lea	rcx, [rip + 0x2043a9]
0x7e97:	jmp	0x7990


0x7e70:	lea	rcx, [rip + 0x2043c9]
0x7e77:	mov	rdx, -1
0x7e7e:	jmp	0x7990


0x7dd0:	mov	eax, dword ptr [rip + 0x2042a2]
0x7dd6:	push	r12
0x7dd8:	mov	r12, qword ptr [rip + 0x2042a1]
0x7ddf:	push	rbp
0x7de0:	push	rbx
0x7de1:	cmp	eax, 1
0x7de4:	jle	0x7e11


0x7dc0:	mov	rcx, rdx
0x7dc3:	xor	edx, edx
0x7dc5:	jmp	0x7cd0


0x7cd0:	push	r15
0x7cd2:	push	r14
0x7cd4:	lea	rax, [rip + 0x204565]
0x7cdb:	push	r13
0x7cdd:	push	r12
0x7cdf:	mov	r12, rdx
0x7ce2:	push	rbp
0x7ce3:	push	rbx
0x7ce4:	mov	rbx, rcx
0x7ce7:	mov	r14, rdi
0x7cea:	mov	r15, rsi
0x7ced:	sub	rsp, 0x38
0x7cf1:	test	rcx, rcx
0x7cf4:	cmove	rbx, rax
0x7cf8:	xor	ebp, ebp
0x7cfa:	call	0x15d0


0x7c50:	push	r15
0x7c52:	push	r14
0x7c54:	lea	rax, [rip + 0x2045e5]
0x7c5b:	push	r13
0x7c5d:	push	r12
0x7c5f:	mov	r13, rdi
0x7c62:	push	rbp
0x7c63:	push	rbx
0x7c64:	mov	rbx, r8
0x7c67:	mov	r14, rsi
0x7c6a:	mov	r15, rdx
0x7c6d:	sub	rsp, 0x18
0x7c71:	test	r8, r8
0x7c74:	cmove	rbx, rax
0x7c78:	mov	qword ptr [rsp + 8], rcx
0x7c7d:	call	0x15d0


0x7c20:	lea	rax, [rip + 0x204619]
0x7c27:	test	rdi, rdi
0x7c2a:	cmove	rdi, rax
0x7c2e:	test	rsi, rsi
0x7c31:	mov	dword ptr [rdi], 0xa
0x7c37:	je	0x7c47


0x7c00:	lea	rax, [rip + 0x204639]
0x7c07:	test	rdi, rdi
0x7c0a:	cmove	rdi, rax
0x7c0e:	mov	eax, dword ptr [rdi + 4]
0x7c11:	mov	dword ptr [rdi + 4], esi
0x7c14:	ret	


0x7bc0:	lea	rax, [rip + 0x204679]
0x7bc7:	test	rdi, rdi
0x7bca:	mov	ecx, esi
0x7bcc:	cmove	rdi, rax
0x7bd0:	mov	eax, esi
0x7bd2:	and	ecx, 0x1f
0x7bd5:	shr	al, 5
0x7bd8:	movzx	eax, al
0x7bdb:	lea	rdi, [rdi + rax*4 + 8]
0x7be0:	mov	esi, dword ptr [rdi]
0x7be2:	mov	eax, esi
0x7be4:	shr	eax, cl
0x7be6:	xor	edx, eax
0x7be8:	and	eax, 1
0x7beb:	and	edx, 1
0x7bee:	shl	edx, cl
0x7bf0:	xor	edx, esi
0x7bf2:	mov	dword ptr [rdi], edx
0x7bf4:	ret	


0x7ba0:	lea	rax, [rip + 0x204699]
0x7ba7:	test	rdi, rdi
0x7baa:	cmove	rdi, rax
0x7bae:	mov	dword ptr [rdi], esi
0x7bb0:	ret	


0x7b80:	lea	rax, [rip + 0x2046b9]
0x7b87:	test	rdi, rdi
0x7b8a:	cmove	rdi, rax
0x7b8e:	mov	eax, dword ptr [rdi]
0x7b90:	ret	


0x7b40:	push	r12
0x7b42:	push	rbp
0x7b43:	push	rbx
0x7b44:	mov	rbx, rdi
0x7b47:	call	0x15d0


0x7990:	push	r15
0x7992:	push	r14
0x7994:	movsxd	r15, edi
0x7997:	push	r13
0x7999:	push	r12
0x799b:	mov	r14, rdx
0x799e:	push	rbp
0x799f:	push	rbx
0x79a0:	mov	rbp, rcx
0x79a3:	sub	rsp, 0x28
0x79a7:	mov	qword ptr [rsp + 8], rsi
0x79ac:	call	0x15d0


0x6750:	push	r15
0x6752:	push	r14
0x6754:	mov	r15d, r8d
0x6757:	push	r13
0x6759:	push	r12
0x675b:	mov	r14, rdi
0x675e:	push	rbp
0x675f:	push	rbx
0x6760:	mov	ebx, r9d
0x6763:	mov	r13, rsi
0x6766:	mov	rbp, rcx
0x6769:	and	ebx, 2
0x676c:	sub	rsp, 0xb8
0x6773:	mov	rax, qword ptr [rsp + 0xf0]
0x677b:	mov	qword ptr [rsp + 0x10], rdx
0x6780:	mov	dword ptr [rsp + 8], r8d
0x6785:	mov	dword ptr [rsp + 0x78], r9d
0x678a:	mov	qword ptr [rsp + 0x20], rax
0x678f:	mov	rax, qword ptr [rsp + 0xf8]
0x6797:	mov	qword ptr [rsp + 0x68], rax
0x679c:	mov	rax, qword ptr [rsp + 0x100]
0x67a4:	mov	qword ptr [rsp + 0x60], rax
0x67a9:	mov	rax, qword ptr fs:[0x28]
0x67b2:	mov	qword ptr [rsp + 0xa8], rax
0x67ba:	xor	eax, eax
0x67bc:	call	0x1670


0x6660:	push	rbp
0x6661:	push	rbx
0x6662:	mov	rbp, rdi
0x6665:	mov	ebx, esi
0x6667:	sub	rsp, 8
0x666b:	call	0x90c0


0x65c0:	test	rdi, rdi
0x65c3:	push	rbx
0x65c4:	je	0x663d


0x6520:	push	r12
0x6522:	push	rbp
0x6523:	mov	rbp, rsi
0x6526:	push	rbx
0x6527:	call	0x1850


0x64f0:	test	rdi, rdi
0x64f3:	je	0x6510


0x64e0:	jmp	0x1720


0x64c0:	lea	rcx, [rip - 0x5b7]
0x64c7:	lea	rdx, [rip - 0x30ae]
0x64ce:	jmp	0x6380


0x64a0:	lea	rcx, [rip - 0x5c7]
0x64a7:	lea	rdx, [rip - 0x30de]
0x64ae:	jmp	0x6380


0x6380:	push	r15
0x6382:	push	r14
0x6384:	mov	r14, rcx
0x6387:	push	r13
0x6389:	push	r12
0x638b:	mov	r12, rdx
0x638e:	push	rbp
0x638f:	push	rbx
0x6390:	mov	rbx, rdi
0x6393:	mov	edi, 0x8048
0x6398:	sub	rsp, 0xd8
0x639f:	mov	rax, qword ptr fs:[0x28]
0x63a8:	mov	qword ptr [rsp + 0xc8], rax
0x63b0:	xor	eax, eax
0x63b2:	mov	qword ptr [rsp + 8], rsi
0x63b7:	call	0x1790


0x62d0:	push	rbp
0x62d1:	push	rbx
0x62d2:	mov	rbp, rdx
0x62d5:	sub	rsp, 0xc8
0x62dc:	mov	rax, qword ptr fs:[0x28]
0x62e5:	mov	qword ptr [rsp + 0xb8], rax
0x62ed:	xor	eax, eax
0x62ef:	movabs	rax, 0x367cd507c1059ed8
0x62f9:	mov	rbx, rsp
0x62fc:	mov	qword ptr [rsp + 0x20], 0
0x6305:	mov	qword ptr [rsp], rax
0x6309:	movabs	rax, 0xf70e59393070dd17
0x6313:	mov	rdx, rbx
0x6316:	mov	qword ptr [rsp + 8], rax
0x631b:	movabs	rax, 0x68581511ffc00b31
0x6325:	mov	qword ptr [rsp + 0x28], 0
0x632e:	mov	qword ptr [rsp + 0x10], rax
0x6333:	movabs	rax, 0xbefa4fa464f98fa7
0x633d:	mov	qword ptr [rsp + 0x18], rax
0x6342:	call	0x5f40


0x6220:	push	rbp
0x6221:	push	rbx
0x6222:	mov	rbp, rdx
0x6225:	sub	rsp, 0xc8
0x622c:	mov	rax, qword ptr fs:[0x28]
0x6235:	mov	qword ptr [rsp + 0xb8], rax
0x623d:	xor	eax, eax
0x623f:	movabs	rax, 0xbb67ae856a09e667
0x6249:	mov	rbx, rsp
0x624c:	mov	qword ptr [rsp + 0x20], 0
0x6255:	mov	qword ptr [rsp], rax
0x6259:	movabs	rax, 0xa54ff53a3c6ef372
0x6263:	mov	rdx, rbx
0x6266:	mov	qword ptr [rsp + 8], rax
0x626b:	movabs	rax, 0x9b05688c510e527f
0x6275:	mov	qword ptr [rsp + 0x28], 0
0x627e:	mov	qword ptr [rsp + 0x10], rax
0x6283:	movabs	rax, 0x5be0cd191f83d9ab
0x628d:	mov	qword ptr [rsp + 0x18], rax
0x6292:	call	0x5f40


0x5f40:	push	r15
0x5f42:	push	r14
0x5f44:	push	r13
0x5f46:	push	r12
0x5f48:	mov	r13, rdx
0x5f4b:	push	rbp
0x5f4c:	push	rbx
0x5f4d:	mov	r12, rsi
0x5f50:	mov	rbx, rdi
0x5f53:	sub	rsp, 8
0x5f57:	mov	rbp, qword ptr [rdx + 0x28]
0x5f5b:	test	rbp, rbp
0x5f5e:	jne	0x6090


0x5f10:	push	rbp
0x5f11:	push	rbx
0x5f12:	mov	rbp, rsi
0x5f15:	mov	rbx, rdi
0x5f18:	sub	rsp, 8
0x5f1c:	call	0x5e40


0x5ee0:	push	rbp
0x5ee1:	push	rbx
0x5ee2:	mov	rbp, rsi
0x5ee5:	mov	rbx, rdi
0x5ee8:	sub	rsp, 8
0x5eec:	call	0x5e40


0x5e40:	push	r12
0x5e42:	push	rbp
0x5e43:	push	rbx
0x5e44:	mov	rcx, qword ptr [rdi + 0x28]
0x5e48:	mov	rbx, rdi
0x5e4b:	mov	edx, dword ptr [rbx + 0x20]
0x5e4e:	mov	eax, dword ptr [rbx + 0x24]
0x5e51:	cmp	rcx, 0x38
0x5e55:	sbb	rbp, rbp
0x5e58:	and	rbp, 0xffffffffffffffc0
0x5e5c:	sub	rbp, -0x80
0x5e60:	cmp	rcx, 0x38
0x5e64:	sbb	rsi, rsi
0x5e67:	and	rsi, 0xfffffffffffffff0
0x5e6b:	add	rsi, 0x1f
0x5e6f:	cmp	rcx, 0x38
0x5e73:	sbb	rdi, rdi
0x5e76:	add	edx, ecx
0x5e78:	and	rdi, 0xfffffffffffffff0
0x5e7c:	mov	r8d, edx
0x5e7f:	mov	dword ptr [rbx + 0x20], edx
0x5e82:	add	rdi, 0x1e
0x5e86:	cmp	r8, rcx
0x5e89:	jae	0x5e91


0x34b0:	push	r15
0x34b2:	push	r14
0x34b4:	mov	r15, rdi
0x34b7:	push	r13
0x34b9:	push	r12
0x34bb:	push	rbp
0x34bc:	push	rbx
0x34bd:	mov	rbx, rdx
0x34c0:	sub	rsp, 0xe8
0x34c7:	mov	r12d, dword ptr [rbx + 4]
0x34cb:	mov	r13d, dword ptr [rbx + 8]
0x34cf:	mov	rax, qword ptr fs:[0x28]
0x34d8:	mov	qword ptr [rsp + 0xd8], rax
0x34e0:	xor	eax, eax
0x34e2:	mov	rax, rsi
0x34e5:	mov	qword ptr [rsp + 0x40], rdi
0x34ea:	mov	qword ptr [rsp + 0x80], rdx
0x34f2:	and	rax, 0xfffffffffffffffc
0x34f6:	mov	edx, dword ptr [rdx]
0x34f8:	mov	r14d, dword ptr [rbx + 0xc]
0x34fc:	add	rax, rdi
0x34ff:	xor	edi, edi
0x3501:	mov	r10d, dword ptr [rbx + 0x10]
0x3505:	mov	r11, rax
0x3508:	mov	qword ptr [rsp + 0x78], rax
0x350d:	mov	eax, esi
0x350f:	add	eax, dword ptr [rbx + 0x20]
0x3512:	mov	r8d, dword ptr [rbx + 0x14]
0x3516:	mov	r9d, dword ptr [rbx + 0x18]
0x351a:	mov	ecx, dword ptr [rbx + 0x1c]
0x351d:	mov	dword ptr [rbx + 0x20], eax
0x3520:	mov	eax, dword ptr [rbx + 0x24]
0x3523:	setb	dil
0x3527:	shr	rsi, 0x20
0x352b:	add	eax, esi
0x352d:	add	eax, edi
0x352f:	cmp	r15, r11
0x3532:	mov	dword ptr [rbx + 0x24], eax
0x3535:	jae	0x5e11


0x3490:	mov	rax, rsi
0x3493:	xor	edx, edx
0x3495:	nop	dword ptr [rax]
0x3498:	mov	ecx, dword ptr [rdi + rdx]
0x349b:	bswap	ecx
0x349d:	mov	dword ptr [rax + rdx], ecx
0x34a0:	add	rdx, 4
0x34a4:	cmp	rdx, 0x1c
0x34a8:	jne	0x3498


0x3470:	mov	rax, rsi
0x3473:	xor	edx, edx
0x3475:	nop	dword ptr [rax]
0x3478:	mov	ecx, dword ptr [rdi + rdx]
0x347b:	bswap	ecx
0x347d:	mov	dword ptr [rax + rdx], ecx
0x3480:	add	rdx, 4
0x3484:	cmp	rdx, 0x20
0x3488:	jne	0x3478


0x3420:	movabs	rax, 0x367cd507c1059ed8
0x342a:	mov	qword ptr [rdi + 0x20], 0
0x3432:	mov	qword ptr [rdi + 0x28], 0
0x343a:	mov	qword ptr [rdi], rax
0x343d:	movabs	rax, 0xf70e59393070dd17
0x3447:	mov	qword ptr [rdi + 8], rax
0x344b:	movabs	rax, 0x68581511ffc00b31
0x3455:	mov	qword ptr [rdi + 0x10], rax
0x3459:	movabs	rax, 0xbefa4fa464f98fa7
0x3463:	mov	qword ptr [rdi + 0x18], rax
0x3467:	ret	


0x33d0:	movabs	rax, 0xbb67ae856a09e667
0x33da:	mov	qword ptr [rdi + 0x20], 0
0x33e2:	mov	qword ptr [rdi + 0x28], 0
0x33ea:	mov	qword ptr [rdi], rax
0x33ed:	movabs	rax, 0xa54ff53a3c6ef372
0x33f7:	mov	qword ptr [rdi + 8], rax
0x33fb:	movabs	rax, 0x9b05688c510e527f
0x3405:	mov	qword ptr [rdi + 0x10], rax
0x3409:	movabs	rax, 0x5be0cd191f83d9ab
0x3413:	mov	qword ptr [rdi + 0x18], rax
0x3417:	ret	


0x3320:	push	rbp
0x3321:	push	rbx
0x3322:	sub	rsp, 8
0x3326:	mov	rdi, qword ptr [rip + 0x208d7b]
0x332d:	call	0x8fe0


0x3310:	mov	byte ptr [rip + 0x208df9], dil
0x3317:	ret	


0x3300:	mov	qword ptr [rip + 0x208e11], rdi
0x3307:	ret	


0x2ea0:	push	r13
0x2ea2:	push	r12
0x2ea4:	mov	edx, 5
0x2ea9:	push	rbp
0x2eaa:	push	rbx
0x2eab:	mov	ebp, edi
0x2ead:	sub	rsp, 0x88
0x2eb4:	mov	rbx, qword ptr [rip + 0x209265]
0x2ebb:	mov	rax, qword ptr fs:[0x28]
0x2ec4:	mov	qword ptr [rsp + 0x78], rax
0x2ec9:	xor	eax, eax
0x2ecb:	test	edi, edi
0x2ecd:	je	0x2efd


0x2d00:	push	r13
0x2d02:	push	r12
0x2d04:	mov	ecx, 2
0x2d09:	push	rbp
0x2d0a:	push	rbx
0x2d0b:	mov	rbp, rdi
0x2d0e:	lea	rdi, [rip + 0x70ed]
0x2d15:	mov	r12, rsi
0x2d18:	mov	rsi, rbp
0x2d1b:	sub	rsp, 8
0x2d1f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2c30:	push	rbp
0x2c31:	push	rbx
0x2c32:	mov	rbx, rdi
0x2c35:	sub	rsp, 8
0x2c39:	test	sil, sil
0x2c3c:	je	0x2cd0


0x2bd0:	push	rbp
0x2bd1:	push	rbx
0x2bd2:	sub	rsp, 8
0x2bd6:	mov	rbp, qword ptr [rip + 0x20951b]
0x2bdd:	test	rbp, rbp
0x2be0:	je	0x2c20


0x2b50:	xor	edx, edx
0x2b52:	test	rsi, rsi
0x2b55:	lea	rcx, [rdi + 1]
0x2b59:	lea	r8, [rsi - 1]
0x2b5d:	je	0x2bb7


0x2b40:	push	rbp
0x2b41:	mov	rbp, rsp
0x2b44:	pop	rbp
0x2b45:	jmp	0x2ab0


0x2b00:	cmp	byte ptr [rip + 0x2095e1], 0
0x2b07:	jne	0x2b38


0x2ab0:	lea	rdi, [rip + 0x2095e9]
0x2ab7:	lea	rsi, [rip + 0x2095e2]
0x2abe:	push	rbp
0x2abf:	sub	rsi, rdi
0x2ac2:	mov	rbp, rsp
0x2ac5:	sar	rsi, 3
0x2ac9:	mov	rax, rsi
0x2acc:	shr	rax, 0x3f
0x2ad0:	add	rsi, rax
0x2ad3:	sar	rsi, 1
0x2ad6:	je	0x2af0


0x2a70:	lea	rdi, [rip + 0x209629]
0x2a77:	push	rbp
0x2a78:	lea	rax, [rip + 0x209621]
0x2a7f:	cmp	rax, rdi
0x2a82:	mov	rbp, rsp
0x2a85:	je	0x2aa0


0x2a40:	xor	ebp, ebp
0x2a42:	mov	r9, rdx
0x2a45:	pop	rsi
0x2a46:	mov	rdx, rsp
0x2a49:	and	rsp, 0xfffffffffffffff0
0x2a4d:	push	rax
0x2a4e:	push	rsp
0x2a4f:	lea	r8, [rip + 0x671a]
0x2a56:	lea	rcx, [rip + 0x66a3]
0x2a5d:	lea	rdi, [rip - 0x1164]
0x2a64:	call	qword ptr [rip + 0x20955e]


0x1900:	push	r15
0x1902:	push	r14
0x1904:	push	r13
0x1906:	push	r12
0x1908:	mov	r12d, edi
0x190b:	push	rbp
0x190c:	push	rbx
0x190d:	mov	rbx, rsi
0x1910:	mov	ebp, 0xffffffff
0x1915:	sub	rsp, 0x108
0x191c:	mov	rdi, qword ptr [rsi]
0x191f:	mov	rax, qword ptr fs:[0x28]
0x1928:	mov	qword ptr [rsp + 0xf8], rax
0x1930:	xor	eax, eax
0x1932:	call	0x65c0


0x1580:	sub	rsp, 8
0x1584:	mov	rax, qword ptr [rip + 0x20aa45]
0x158b:	test	rax, rax
0x158e:	je	0x1592


0x1870:	jmp	qword ptr [rip + 0x20a70a]


0x17b0:	jmp	qword ptr [rip + 0x20a76a]


0x1800:	jmp	qword ptr [rip + 0x20a742]


0x1600:	jmp	qword ptr [rip + 0x20a842]


0x16b0:	jmp	qword ptr [rip + 0x20a7ea]


0x8f00:	mov	rax, qword ptr [rdi + 0x20]
0x8f04:	cmp	qword ptr [rdi + 0x28], rax
0x8f08:	jne	0x8efa


0x8efa:	jmp	0x1840


0x8eca:	mov	rdi, rbx
0x8ecd:	pop	rbx
0x8ece:	jmp	0x17a0


0x8eb9:	call	0x17c0


0x8e82:	mov	rax, qword ptr [rsp + 0x10]
0x8e87:	xor	esi, esi
0x8e89:	mov	edx, dword ptr [rax + 0x10]
0x8e8c:	xor	eax, eax
0x8e8e:	call	0x1610


0x8c81:	cmp	esi, 0x406
0x8c87:	jne	0x8cd0


0x1780:	jmp	qword ptr [rip + 0x20a782]


0x1660:	jmp	qword ptr [rip + 0x20a812]


0x1680:	jmp	qword ptr [rip + 0x20a802]


0x8b19:	call	0x8b70


0x8b02:	movzx	edx, dl
0x8b05:	test	rdx, rdx
0x8b08:	jne	0x8b19


0x8ab0:	test	rax, rax
0x8ab3:	mov	edx, 0x80
0x8ab8:	cmove	rax, rdx
0x8abc:	test	rax, rax
0x8abf:	jns	0x8aa2


0x8a88:	movabs	rdx, 0x5555555555555553
0x8a92:	cmp	rax, rdx
0x8a95:	ja	0x8ac1


0x8a30:	test	rcx, rcx
0x8a33:	je	0x8a58


0x89fb:	xor	edx, edx
0x89fd:	movabs	rax, 0x5555555555555554
0x8a07:	div	r9
0x8a0a:	cmp	rax, rcx
0x8a0d:	jbe	0x8a4b


0x89db:	sub	rsp, 8
0x89df:	call	0x8b70


0x89d1:	movzx	eax, al
0x89d4:	test	rax, rax
0x89d7:	jne	0x89db


0x8989:	test	rdi, rdi
0x898c:	jne	0x89a8


0x898e:	mov	rsi, rbx
0x8991:	call	0x17e0


0x895b:	sub	rsp, 8
0x895f:	call	0x8b70


0x8951:	movzx	eax, al
0x8954:	test	rax, rax
0x8957:	jne	0x895b


0x1790:	jmp	qword ptr [rip + 0x20a77a]


0x8836:	mov	eax, r10d
0x8839:	mov	r11d, 1
0x883f:	add	r10d, 8
0x8843:	add	rax, rbp
0x8846:	mov	rax, qword ptr [rax]
0x8849:	test	rax, rax
0x884c:	mov	qword ptr [r8 + r9*8], rax
0x8850:	je	0x885c


0x888c:	mov	rax, rbx
0x888f:	add	rbx, 8
0x8893:	jmp	0x8846


0x8768:	mov	r11d, eax
0x876b:	add	r11, qword ptr [r10 + 0x10]
0x876f:	add	eax, 8
0x8772:	mov	dword ptr [r10], eax
0x8775:	mov	rax, qword ptr [r11]
0x8778:	test	rax, rax
0x877b:	mov	qword ptr [r8 + r9*8], rax
0x877f:	je	0x878b


0x87aa:	mov	r11, qword ptr [r10 + 8]
0x87ae:	lea	rax, [r11 + 8]
0x87b2:	mov	qword ptr [r10 + 8], rax
0x87b6:	jmp	0x8775


0x873b:	jmp	0x8300


0x8438:	mov	r8, rcx
0x843b:	mov	rcx, rdx
0x843e:	lea	rdx, [rip + 0x1eaf]
0x8445:	mov	esi, 1
0x844a:	xor	eax, eax
0x844c:	call	0x18a0


0x8320:	mov	r8, rdx
0x8323:	lea	rdx, [rip + 0x1fbe]
0x832a:	mov	r9, rcx
0x832d:	xor	eax, eax
0x832f:	mov	rcx, rsi
0x8332:	mov	esi, 1
0x8337:	call	0x18a0


0x8217:	call	0x15c0


0x81e5:	test	rdx, rdx
0x81e8:	je	0x8217


0x8184:	call	0x15c0


0x811c:	mov	dword ptr [rsp], esi
0x811f:	mov	rcx, rsp
0x8122:	mov	rdx, -1
0x8129:	mov	rsi, rax
0x812c:	mov	qword ptr [rsp + 4], 0
0x8135:	mov	qword ptr [rsp + 0xc], 0x4000000
0x813e:	mov	qword ptr [rsp + 0x14], 0
0x8147:	mov	qword ptr [rsp + 0x1c], 0
0x8150:	mov	qword ptr [rsp + 0x24], 0
0x8159:	mov	qword ptr [rsp + 0x2c], 0
0x8162:	mov	dword ptr [rsp + 0x34], 0
0x816a:	call	0x7990


0x7ff0:	call	0x15c0


0x7f8f:	mov	dword ptr [rsp], esi
0x7f92:	mov	rcx, rsp
0x7f95:	mov	rsi, rax
0x7f98:	mov	qword ptr [rsp + 4], 0
0x7fa1:	mov	qword ptr [rsp + 0xc], 0
0x7faa:	mov	qword ptr [rsp + 0x14], 0
0x7fb3:	mov	qword ptr [rsp + 0x1c], 0
0x7fbc:	mov	qword ptr [rsp + 0x24], 0
0x7fc5:	mov	qword ptr [rsp + 0x2c], 0
0x7fce:	mov	dword ptr [rsp + 0x34], 0
0x7fd6:	call	0x7990


0x7f64:	call	0x15c0


0x7efc:	mov	dword ptr [rsp], esi
0x7eff:	mov	rcx, rsp
0x7f02:	mov	rdx, -1
0x7f09:	mov	rsi, rax
0x7f0c:	mov	qword ptr [rsp + 4], 0
0x7f15:	mov	qword ptr [rsp + 0xc], 0
0x7f1e:	mov	qword ptr [rsp + 0x14], 0
0x7f27:	mov	qword ptr [rsp + 0x1c], 0
0x7f30:	mov	qword ptr [rsp + 0x24], 0
0x7f39:	mov	qword ptr [rsp + 0x2c], 0
0x7f42:	mov	dword ptr [rsp + 0x34], 0
0x7f4a:	call	0x7990


0x7e11:	mov	rdi, qword ptr [r12 + 8]
0x7e16:	lea	rbx, [rip + 0x204323]
0x7e1d:	cmp	rdi, rbx
0x7e20:	je	0x7e39


0x7de6:	sub	eax, 2
0x7de9:	lea	rbx, [r12 + 0x18]
0x7dee:	shl	rax, 4
0x7df2:	lea	rbp, [r12 + rax + 0x28]
0x7df7:	nop	word ptr [rax + rax]
0x7e00:	mov	rdi, qword ptr [rbx]
0x7e03:	add	rbx, 0x10
0x7e07:	call	0x15b0


0x15d0:	jmp	qword ptr [rip + 0x20a85a]


0x7c47:	sub	rsp, 8
0x7c4b:	call	0x15c0


0x7c39:	test	rdx, rdx
0x7c3c:	je	0x7c47


0x1670:	jmp	qword ptr [rip + 0x20a80a]


0x663d:	mov	rcx, qword ptr [rip + 0x205a9c]
0x6644:	lea	rdi, [rip + 0x3775]
0x664b:	mov	edx, 0x37
0x6650:	mov	esi, 1
0x6655:	call	0x1890


0x65c6:	mov	esi, 0x2f
0x65cb:	mov	rbx, rdi
0x65ce:	call	0x16e0


0x1850:	jmp	qword ptr [rip + 0x20a71a]


0x6510:	ret	


0x64f5:	push	rbx
0x64f6:	mov	ebx, esi
0x64f8:	call	0x1780


0x1720:	jmp	qword ptr [rip + 0x20a7b2]


0x5f64:	cmp	r12, 0x3f
0x5f68:	jbe	0x6074


0x6090:	mov	r14d, 0x80
0x6096:	lea	r15, [rdx + 0x30]
0x609a:	sub	r14, rbp
0x609d:	cmp	r14, rsi
0x60a0:	lea	rdi, [r15 + rbp]
0x60a4:	cmova	r14, rsi
0x60a8:	mov	rsi, rbx
0x60ab:	mov	rdx, r14
0x60ae:	call	0x1770


0x5e8b:	add	eax, 1
0x5e8e:	mov	dword ptr [rbx + 0x24], eax
0x5e91:	mov	r8d, edx
0x5e94:	shl	eax, 3
0x5e97:	lea	r12, [rbx + 0x30]
0x5e9b:	shr	r8d, 0x1d
0x5e9f:	shl	edx, 3
0x5ea2:	or	eax, r8d
0x5ea5:	bswap	edx
0x5ea7:	bswap	eax
0x5ea9:	mov	dword ptr [rbx + rdi*4 + 0x30], eax
0x5ead:	mov	rax, rbp
0x5eb0:	mov	dword ptr [rbx + rsi*4 + 0x30], edx
0x5eb4:	sub	rax, rcx
0x5eb7:	lea	rdi, [r12 + rcx]
0x5ebb:	lea	rsi, [rip + 0x3ebe]
0x5ec2:	lea	rdx, [rax - 8]
0x5ec6:	call	0x1770


0x5e91:	mov	r8d, edx
0x5e94:	shl	eax, 3
0x5e97:	lea	r12, [rbx + 0x30]
0x5e9b:	shr	r8d, 0x1d
0x5e9f:	shl	edx, 3
0x5ea2:	or	eax, r8d
0x5ea5:	bswap	edx
0x5ea7:	bswap	eax
0x5ea9:	mov	dword ptr [rbx + rdi*4 + 0x30], eax
0x5ead:	mov	rax, rbp
0x5eb0:	mov	dword ptr [rbx + rsi*4 + 0x30], edx
0x5eb4:	sub	rax, rcx
0x5eb7:	lea	rdi, [r12 + rcx]
0x5ebb:	lea	rsi, [rip + 0x3ebe]
0x5ec2:	lea	rdx, [rax - 8]
0x5ec6:	call	0x1770


0x353b:	lea	rax, [rsp + 0x90]
0x3543:	mov	dword ptr [rsp + 0x64], ecx
0x3547:	mov	dword ptr [rsp + 0x60], r9d
0x354c:	mov	dword ptr [rsp + 0x5c], r8d
0x3551:	mov	dword ptr [rsp + 0x58], r10d
0x3556:	mov	ebx, r8d
0x3559:	mov	dword ptr [rsp + 0x54], r14d
0x355e:	mov	dword ptr [rsp + 0x50], r13d
0x3563:	mov	ebp, r12d
0x3566:	mov	dword ptr [rsp + 0x4c], r12d
0x356b:	mov	dword ptr [rsp + 0x74], edx
0x356f:	mov	qword ptr [rsp + 0x88], rax
0x3577:	nop	word ptr [rax + rax]
0x3580:	mov	rdi, qword ptr [rsp + 0x40]
0x3585:	mov	r8, qword ptr [rsp + 0x88]
0x358d:	xor	eax, eax
0x358f:	nop	
0x3590:	mov	esi, dword ptr [rdi + rax]
0x3593:	bswap	esi
0x3595:	mov	dword ptr [r8 + rax], esi
0x3599:	add	rax, 4
0x359d:	cmp	rax, 0x40
0x35a1:	jne	0x3590


0x5e11:	mov	rax, qword ptr [rsp + 0xd8]
0x5e19:	xor	rax, qword ptr fs:[0x28]
0x5e22:	jne	0x5e36


0x34aa:	ret	


0x3498:	mov	ecx, dword ptr [rdi + rdx]
0x349b:	bswap	ecx
0x349d:	mov	dword ptr [rax + rdx], ecx
0x34a0:	add	rdx, 4
0x34a4:	cmp	rdx, 0x1c
0x34a8:	jne	0x3498


0x348a:	ret	


0x3478:	mov	ecx, dword ptr [rdi + rdx]
0x347b:	bswap	ecx
0x347d:	mov	dword ptr [rax + rdx], ecx
0x3480:	add	rdx, 4
0x3484:	cmp	rdx, 0x20
0x3488:	jne	0x3478


0x2efd:	lea	rsi, [rip + 0x649c]
0x2f04:	xor	edi, edi
0x2f06:	call	0x1660


0x2ecf:	lea	rsi, [rip + 0x64a2]
0x2ed6:	xor	edi, edi
0x2ed8:	call	0x1660


0x2d1f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2d21:	mov	byte ptr [rdx], 0
0x2d24:	seta	al
0x2d27:	sbb	al, 0
0x2d29:	test	al, al
0x2d2b:	jne	0x2dc0


0x2cd0:	mov	rsi, qword ptr [rip + 0x2093d1]
0x2cd7:	add	rsp, 8
0x2cdb:	pop	rbx
0x2cdc:	pop	rbp
0x2cdd:	jmp	0x1740


0x2c42:	movzx	esi, byte ptr [rdi]
0x2c45:	lea	rbp, [rip + 0x6558]
0x2c4c:	test	sil, sil
0x2c4f:	jne	0x2c7a


0x2c20:	mov	rax, rdi
0x2c23:	cmp	byte ptr [rax], 0
0x2c26:	sete	al
0x2c29:	add	rsp, 8
0x2c2d:	pop	rbx
0x2c2e:	pop	rbp
0x2c2f:	ret	


0x2be2:	mov	rbx, rdi
0x2be5:	call	0x18e0


0x2bb7:	mov	rax, rdi
0x2bba:	ret	


0x2b5f:	movzx	eax, byte ptr [rdi + rdx]
0x2b63:	test	al, al
0x2b65:	je	0x2b90


0x2b09:	cmp	qword ptr [rip + 0x2094cf], 0
0x2b11:	push	rbp
0x2b12:	mov	rbp, rsp
0x2b15:	je	0x2b23


0x2b38:	ret	


0x2af0:	pop	rbp
0x2af1:	ret	


0x2ad8:	mov	rax, qword ptr [rip + 0x2094f9]
0x2adf:	test	rax, rax
0x2ae2:	je	0x2af0


0x2aa0:	pop	rbp
0x2aa1:	ret	


0x2a87:	mov	rax, qword ptr [rip + 0x209532]
0x2a8e:	test	rax, rax
0x2a91:	je	0x2aa0




0x1592:	add	rsp, 8
0x1596:	ret	


0x1590:	call	rax












0x8f0a:	cmp	qword ptr [rdi + 0x48], 0
0x8f0f:	jne	0x8efa


0x1840:	jmp	qword ptr [rip + 0x20a722]


0x17a0:	jmp	qword ptr [rip + 0x20a772]


0x17c0:	jmp	qword ptr [rip + 0x20a762]


0x1610:	jmp	qword ptr [rip + 0x20a83a]


0x8c89:	mov	rax, qword ptr [rsp + 0x10]
0x8c8e:	cmp	dword ptr [rip + 0x2035e3], 0
0x8c95:	mov	dword ptr [rsp], 0x18
0x8c9c:	mov	r12d, dword ptr [rax + 0x10]
0x8ca0:	mov	edx, r12d
0x8ca3:	js	0x8dd3


0x8cd0:	cmp	esi, 0xb
0x8cd3:	je	0x8d00








0x8b0a:	call	0x1750


0x8ac1:	sub	rsp, 8
0x8ac5:	call	0x8b70


0x8aa2:	mov	qword ptr [rsi], rax
0x8aa5:	mov	rsi, rax
0x8aa8:	jmp	0x8980


0x8a97:	mov	rdx, rax
0x8a9a:	shr	rdx, 1
0x8a9d:	lea	rax, [rdx + rax + 1]
0x8aa2:	mov	qword ptr [rsi], rax
0x8aa5:	mov	rsi, rax
0x8aa8:	jmp	0x8980


0x8a58:	xor	edx, edx
0x8a5a:	mov	eax, 0x80
0x8a5f:	xor	r8d, r8d
0x8a62:	div	r9
0x8a65:	test	rax, rax
0x8a68:	sete	r8b
0x8a6c:	lea	rcx, [r8 + rax]
0x8a70:	jmp	0x8a35


0x8a35:	mov	rax, rcx
0x8a38:	mul	r9
0x8a3b:	seto	dl
0x8a3e:	test	rax, rax
0x8a41:	movzx	edx, dl
0x8a44:	js	0x8a4b


0x8a4b:	sub	rsp, 8
0x8a4f:	call	0x8b70


0x8a0f:	mov	rax, rcx
0x8a12:	shr	rax, 1
0x8a15:	lea	rcx, [rax + rcx + 1]
0x8a1a:	mov	qword ptr [rsi], rcx
0x8a1d:	imul	rcx, r9
0x8a21:	mov	rsi, rcx
0x8a24:	jmp	0x8980


0x89d9:	jmp	0x8980


0x89a8:	call	0x15b0


0x17e0:	jmp	qword ptr [rip + 0x20a752]


0x8959:	jmp	0x8920




0x885c:	test	r11b, r11b
0x885f:	jne	0x8885


0x8852:	add	r9, 1
0x8856:	cmp	r9, 0xa
0x885a:	jne	0x8830


0x8846:	mov	rax, qword ptr [rax]
0x8849:	test	rax, rax
0x884c:	mov	qword ptr [r8 + r9*8], rax
0x8850:	je	0x885c


0x878b:	call	0x8300


0x8781:	add	r9, 1
0x8785:	cmp	r9, 0xa
0x8789:	jne	0x8760


0x8775:	mov	rax, qword ptr [r11]
0x8778:	test	rax, rax
0x877b:	mov	qword ptr [r8 + r9*8], rax
0x877f:	je	0x878b


0x8730:	add	r9, 1
0x8734:	cmp	qword ptr [r8 + r9*8], 0
0x8739:	jne	0x8730


0x18a0:	jmp	qword ptr [rip + 0x20a6f2]


0x15c0:	jmp	qword ptr [rip + 0x20a862]


0x81ea:	mov	qword ptr [rsp + 0x28], rsi
0x81ef:	mov	qword ptr [rsp + 0x30], rdx
0x81f4:	mov	rcx, rsp
0x81f7:	mov	rdx, r8
0x81fa:	mov	rsi, r9
0x81fd:	call	0x7990


0x7e39:	lea	rbx, [rip + 0x204250]
0x7e40:	cmp	r12, rbx
0x7e43:	je	0x7e54


0x7e22:	call	0x15b0


0x15b0:	jmp	qword ptr [rip + 0x20a86a]




0x7c3e:	mov	qword ptr [rdi + 0x28], rsi
0x7c42:	mov	qword ptr [rdi + 0x30], rdx
0x7c46:	ret	




0x1890:	jmp	qword ptr [rip + 0x20a6fa]


0x16e0:	jmp	qword ptr [rip + 0x20a7d2]






0x6074:	test	r12, r12
0x6077:	jne	0x61e8


0x5f6e:	test	bl, 3
0x5f71:	je	0x6058


0x1770:	jmp	qword ptr [rip + 0x20a78a]


0x35a3:	mov	esi, r10d
0x35a6:	mov	edi, r10d
0x35a9:	mov	r11d, edx
0x35ac:	ror	esi, 6
0x35af:	rol	edi, 7
0x35b2:	rol	r11d, 0xa
0x35b6:	mov	eax, esi
0x35b8:	mov	esi, r10d
0x35bb:	mov	r8d, edx
0x35be:	ror	esi, 0xb
0x35c1:	and	r8d, ebp
0x35c4:	mov	r15d, dword ptr [rsp + 0x94]
0x35cc:	xor	esi, eax
0x35ce:	mov	eax, edi
0x35d0:	mov	edi, edx
0x35d2:	xor	eax, esi
0x35d4:	mov	esi, dword ptr [rsp + 0x90]
0x35db:	ror	edi, 2
0x35de:	add	qword ptr [rsp + 0x40], 0x40
0x35e4:	mov	r12d, dword ptr [rsp + 0x98]
0x35ec:	lea	ecx, [rsi + rcx + 0x428a2f98]
0x35f3:	lea	esi, [rax + rcx]
0x35f6:	mov	eax, edi
0x35f8:	mov	edi, edx
0x35fa:	ror	edi, 0xd
0x35fd:	mov	ecx, ebx
0x35ff:	xor	edi, eax
0x3601:	xor	ecx, r9d
0x3604:	xor	edi, r11d
0x3607:	mov	r11d, edx
0x360a:	and	ecx, r10d
0x360d:	or	r11d, ebp
0x3610:	xor	ecx, r9d
0x3613:	mov	eax, r11d
0x3616:	add	ecx, esi
0x3618:	and	eax, r13d
0x361b:	lea	esi, [rcx + r14]
0x361f:	or	eax, r8d
0x3622:	add	eax, edi
0x3624:	mov	edi, r10d
0x3627:	mov	r11d, esi
0x362a:	xor	edi, ebx
0x362c:	add	eax, ecx
0x362e:	lea	ecx, [r15 + r9 + 0x71374491]
0x3636:	and	edi, esi
0x3638:	ror	r11d, 0xb
0x363c:	mov	r8d, eax
0x363f:	xor	edi, ebx
0x3641:	add	ecx, edi
0x3643:	mov	edi, esi
0x3645:	ror	edi, 6
0x3648:	xor	r11d, edi
0x364b:	mov	edi, esi
0x364d:	rol	edi, 7
0x3650:	xor	edi, r11d
0x3653:	mov	r11d, eax
0x3656:	add	edi, ecx
0x3658:	mov	ecx, eax
0x365a:	ror	r11d, 2
0x365e:	ror	ecx, 0xd
0x3661:	and	r8d, edx
0x3664:	lea	r9d, [rdi + r13]
0x3668:	xor	ecx, r11d
0x366b:	mov	r11d, eax
0x366e:	rol	r11d, 0xa
0x3672:	xor	ecx, r11d
0x3675:	mov	r11d, eax
0x3678:	or	r11d, edx
0x367b:	and	r11d, ebp
0x367e:	or	r11d, r8d
0x3681:	lea	r8d, [r12 + rbx - 0x4a3f0431]
0x3689:	mov	ebx, r9d
0x368c:	add	r11d, ecx
0x368f:	ror	ebx, 0xb
0x3692:	add	r11d, edi
0x3695:	mov	edi, esi
0x3697:	xor	edi, r10d
0x369a:	and	edi, r9d
0x369d:	xor	edi, r10d
0x36a0:	add	r8d, edi
0x36a3:	mov	edi, r9d
0x36a6:	ror	edi, 6
0x36a9:	xor	ebx, edi
0x36ab:	mov	edi, r9d
0x36ae:	rol	edi, 7
0x36b1:	xor	edi, ebx
0x36b3:	mov	ebx, r11d
0x36b6:	add	edi, r8d
0x36b9:	mov	r8d, r11d
0x36bc:	ror	ebx, 2
0x36bf:	ror	r8d, 0xd
0x36c3:	lea	ecx, [rdi + rbp]
0x36c6:	mov	ebp, eax
0x36c8:	xor	r8d, ebx
0x36cb:	mov	ebx, r11d
0x36ce:	and	ebp, r11d
0x36d1:	rol	ebx, 0xa
0x36d4:	xor	r8d, ebx
0x36d7:	mov	ebx, eax


0x3590:	mov	esi, dword ptr [rdi + rax]
0x3593:	bswap	esi
0x3595:	mov	dword ptr [r8 + rax], esi
0x3599:	add	rax, 4
0x359d:	cmp	rax, 0x40
0x35a1:	jne	0x3590


0x5e24:	add	rsp, 0xe8
0x5e2b:	pop	rbx
0x5e2c:	pop	rbp
0x5e2d:	pop	r12
0x5e2f:	pop	r13
0x5e31:	pop	r14
0x5e33:	pop	r15
0x5e35:	ret	


0x5e36:	call	0x1690


0x2d31:	mov	rbx, qword ptr [rip + 0x209378]
0x2d38:	mov	esi, 2
0x2d3d:	mov	byte ptr [rip + 0x2093c4], 1
0x2d44:	mov	rdi, rbx
0x2d47:	call	0x64f0


0x2dc0:	lea	rsi, [rip + 0x64bb]
0x2dc7:	mov	rdi, rbp
0x2dca:	mov	r13, rdx
0x2dcd:	call	0x6520


0x1740:	jmp	qword ptr [rip + 0x20a7a2]


0x2c51:	jmp	0x2cae


0x2c7a:	cmp	sil, 0xa
0x2c7e:	mov	rcx, qword ptr [rip + 0x209423]
0x2c85:	je	0x2cb8


0x18e0:	jmp	qword ptr [rip + 0x20a6d2]


0x2b90:	xor	eax, eax
0x2b92:	ret	


0x2b67:	cmp	al, 0x5c
0x2b69:	jne	0x2b98


0x2b23:	call	0x2a70


0x2b17:	mov	rdi, qword ptr [rip + 0x2094ea]
0x2b1e:	call	0x18f0


0x2ae4:	pop	rbp
0x2ae5:	jmp	rax


0x2a93:	pop	rbp
0x2a94:	jmp	rax


0x8f11:	push	r12
0x8f13:	push	rbp
0x8f14:	mov	r12d, edx
0x8f17:	push	rbx
0x8f18:	mov	rbp, rsi
0x8f1b:	mov	rbx, rdi
0x8f1e:	call	0x1780










0x8dd3:	xor	esi, esi
0x8dd5:	xor	eax, eax
0x8dd7:	call	0x1610


0x8ca9:	xor	eax, eax
0x8cab:	mov	esi, 0x406
0x8cb0:	call	0x1610


0x8d00:	mov	edi, ebp
0x8d02:	xor	eax, eax
0x8d04:	call	0x1610


0x8cd5:	jg	0x8d30


0x1750:	jmp	qword ptr [rip + 0x20a79a]


0x8a46:	test	rdx, rdx
0x8a49:	je	0x8a1a




0x8861:	call	0x8300


0x8885:	mov	dword ptr [rsp + 8], r10d
0x888a:	jmp	0x8861


0x8830:	cmp	r10d, 0x2f
0x8834:	ja	0x888c


0x8760:	mov	eax, dword ptr [r10]
0x8763:	cmp	eax, 0x2f
0x8766:	ja	0x87aa






0x7e54:	pop	rbx
0x7e55:	mov	dword ptr [rip + 0x204219], 1
0x7e5f:	pop	rbp
0x7e60:	pop	r12
0x7e62:	ret	


0x7e45:	mov	rdi, r12
0x7e48:	call	0x15b0








0x607d:	add	rsp, 8
0x6081:	pop	rbx
0x6082:	pop	rbp
0x6083:	pop	r12
0x6085:	pop	r13
0x6087:	pop	r14
0x6089:	pop	r15
0x608b:	ret	


0x61e8:	lea	rbp, [r13 + 0x30]
0x61ec:	jmp	0x5fe0


0x6058:	mov	rbp, r12
0x605b:	mov	rdi, rbx
0x605e:	mov	rdx, r13
0x6061:	and	rbp, 0xffffffffffffffc0
0x6065:	and	r12d, 0x3f
0x6069:	mov	rsi, rbp
0x606c:	add	rbx, rbp
0x606f:	call	0x34b0


0x5f77:	cmp	r12, 0x40
0x5f7b:	lea	rbp, [r13 + 0x30]
0x5f7f:	je	0x5fe0




0x36d9:	or	ebx, r11d
0x36dc:	and	ebx, edx
0x36de:	or	ebx, ebp
0x36e0:	mov	ebp, r11d
0x36e3:	add	ebx, r8d
0x36e6:	mov	r8d, esi
0x36e9:	add	ebx, edi
0x36eb:	mov	edi, dword ptr [rsp + 0x9c]
0x36f2:	xor	r8d, r9d
0x36f5:	and	r8d, ecx
0x36f8:	and	ebp, ebx
0x36fa:	xor	r8d, esi
0x36fd:	lea	r10d, [rdi + r10 - 0x164a245b]
0x3705:	mov	edi, ecx
0x3707:	ror	edi, 0xb
0x370a:	add	r10d, r8d
0x370d:	mov	r8d, ecx
0x3710:	ror	r8d, 6
0x3714:	xor	edi, r8d
0x3717:	mov	r8d, ecx
0x371a:	rol	r8d, 7
0x371e:	xor	r8d, edi
0x3721:	mov	edi, ebx
0x3723:	add	r8d, r10d
0x3726:	mov	r10d, ebx
0x3729:	ror	edi, 2
0x372c:	ror	r10d, 0xd
0x3730:	add	edx, r8d
0x3733:	xor	r10d, edi
0x3736:	mov	edi, ebx
0x3738:	rol	edi, 0xa
0x373b:	xor	r10d, edi
0x373e:	mov	edi, r11d
0x3741:	or	edi, ebx
0x3743:	and	edi, eax
0x3745:	or	edi, ebp
0x3747:	mov	ebp, ebx
0x3749:	add	edi, r10d
0x374c:	mov	r10d, r9d
0x374f:	add	edi, r8d
0x3752:	mov	r8d, dword ptr [rsp + 0xa0]
0x375a:	xor	r10d, ecx
0x375d:	and	r10d, edx
0x3760:	mov	r14d, edi
0x3763:	xor	r10d, r9d
0x3766:	lea	r8d, [r8 + rsi + 0x3956c25b]
0x376e:	mov	esi, edx
0x3770:	ror	esi, 0xb
0x3773:	add	r8d, r10d
0x3776:	mov	r10d, edx
0x3779:	ror	r10d, 6
0x377d:	xor	esi, r10d
0x3780:	mov	r10d, edx
0x3783:	rol	r10d, 7
0x3787:	xor	r10d, esi
0x378a:	mov	esi, edi
0x378c:	add	r10d, r8d
0x378f:	ror	esi, 2
0x3792:	ror	r14d, 0xd
0x3796:	lea	r8d, [rax + r10]
0x379a:	mov	eax, r14d
0x379d:	and	ebp, edi
0x379f:	xor	eax, esi
0x37a1:	mov	esi, edi
0x37a3:	mov	r14d, dword ptr [rsp + 0xa4]
0x37ab:	rol	esi, 0xa
0x37ae:	xor	eax, esi
0x37b0:	mov	esi, ebx
0x37b2:	or	esi, edi
0x37b4:	lea	r9d, [r14 + r9 + 0x59f111f1]
0x37bc:	mov	r14d, r8d
0x37bf:	and	esi, r11d
0x37c2:	ror	r14d, 0xb
0x37c6:	or	esi, ebp
0x37c8:	mov	ebp, edi
0x37ca:	add	esi, eax
0x37cc:	mov	eax, r14d
0x37cf:	add	esi, r10d
0x37d2:	mov	r10d, ecx
0x37d5:	xor	r10d, edx
0x37d8:	mov	r14d, esi
0x37db:	and	ebp, esi
0x37dd:	and	r10d, r8d
0x37e0:	rol	r14d, 0xa
0x37e4:	xor	r10d, ecx
0x37e7:	add	r10d, r9d
0x37ea:	mov	r9d, r8d
0x37ed:	ror	r9d, 6
0x37f1:	xor	eax, r9d
0x37f4:	mov	r9d, r8d
0x37f7:	rol	r9d, 7
0x37fb:	xor	r9d, eax
0x37fe:	add	r9d, r10d
0x3801:	mov	r10d, esi
0x3804:	ror	r10d, 2
0x3808:	add	r11d, r9d
0x380b:	mov	eax, r10d
0x380e:	mov	r10d, esi
0x3811:	ror	r10d, 0xd


0x1690:	jmp	qword ptr [rip + 0x20a7fa]




0x2cae:	add	rsp, 8
0x2cb2:	pop	rbx
0x2cb3:	pop	rbp
0x2cb4:	ret	


0x2cb8:	mov	edx, 2
0x2cbd:	mov	esi, 1
0x2cc2:	mov	rdi, rbp
0x2cc5:	call	0x17d0


0x2c87:	cmp	sil, 0x5c
0x2c8b:	je	0x2c58




0x2b6b:	cmp	r8, rdx
0x2b6e:	je	0x2b90


0x2b98:	mov	r9, rcx
0x2b9b:	mov	byte ptr [rcx - 1], al
0x2b9e:	add	rdx, 1
0x2ba2:	add	rcx, 1
0x2ba6:	cmp	rsi, rdx
0x2ba9:	ja	0x2b5f


0x18f0:	jmp	qword ptr [rip + 0x20a6ea]


0x8cd7:	cmp	esi, 4
0x8cda:	je	0x8db0


0x8d30:	cmp	esi, 0x407
0x8d36:	jg	0x8d80




0x8a1a:	mov	qword ptr [rsi], rcx
0x8a1d:	imul	rcx, r9
0x8a21:	mov	rsi, rcx
0x8a24:	jmp	0x8980


0x5fe0:	mov	rdi, qword ptr [r13 + 0x28]
0x5fe4:	cmp	r12d, 8
0x5fe8:	mov	eax, r12d
0x5feb:	lea	rcx, [rbp + rdi]
0x5ff0:	jae	0x60d0


0x5f81:	lea	r15, [r12 - 0x41]
0x5f86:	shr	r15, 6
0x5f8a:	lea	r14, [r15 + 1]
0x5f8e:	shl	r14, 6
0x5f92:	add	r14, rbx
0x5f95:	nop	dword ptr [rax]
0x5f98:	movdqu	xmm0, xmmword ptr [rbx]
0x5f9c:	mov	rdx, r13
0x5f9f:	mov	esi, 0x40
0x5fa4:	mov	rdi, rbp
0x5fa7:	add	rbx, 0x40
0x5fab:	movups	xmmword ptr [rbp], xmm0
0x5faf:	movdqu	xmm0, xmmword ptr [rbx - 0x30]
0x5fb4:	movups	xmmword ptr [rbp + 0x10], xmm0
0x5fb8:	movdqu	xmm0, xmmword ptr [rbx - 0x20]
0x5fbd:	movups	xmmword ptr [rbp + 0x20], xmm0
0x5fc1:	movdqu	xmm0, xmmword ptr [rbx - 0x10]
0x5fc6:	movups	xmmword ptr [rbp + 0x30], xmm0
0x5fca:	call	0x34b0


0x3815:	xor	r10d, eax
0x3818:	xor	r10d, r14d
0x381b:	mov	r14d, edi
0x381e:	or	r14d, esi
0x3821:	mov	eax, r14d
0x3824:	and	eax, ebx
0x3826:	or	eax, ebp
0x3828:	mov	ebp, esi
0x382a:	add	eax, r10d
0x382d:	mov	r10d, dword ptr [rsp + 0xa8]
0x3835:	add	eax, r9d
0x3838:	mov	r9d, edx
0x383b:	xor	r9d, r8d
0x383e:	and	ebp, eax
0x3840:	and	r9d, r11d
0x3843:	lea	r10d, [r10 + rcx - 0x6dc07d5c]
0x384b:	mov	ecx, r11d
0x384e:	xor	r9d, edx
0x3851:	ror	ecx, 0xb
0x3854:	add	r10d, r9d
0x3857:	mov	r9d, r11d
0x385a:	ror	r9d, 6
0x385e:	xor	ecx, r9d
0x3861:	mov	r9d, r11d
0x3864:	rol	r9d, 7
0x3868:	xor	r9d, ecx
0x386b:	mov	ecx, eax
0x386d:	add	r9d, r10d
0x3870:	mov	r10d, eax
0x3873:	ror	ecx, 2
0x3876:	ror	r10d, 0xd
0x387a:	add	ebx, r9d
0x387d:	xor	r10d, ecx
0x3880:	mov	ecx, eax
0x3882:	rol	ecx, 0xa
0x3885:	xor	r10d, ecx
0x3888:	mov	ecx, esi
0x388a:	or	ecx, eax
0x388c:	and	ecx, edi
0x388e:	or	ecx, ebp
0x3890:	mov	ebp, eax
0x3892:	add	ecx, r10d
0x3895:	mov	r10d, dword ptr [rsp + 0xac]
0x389d:	add	ecx, r9d
0x38a0:	mov	r9d, r8d
0x38a3:	xor	r9d, r11d
0x38a6:	and	r9d, ebx
0x38a9:	lea	r10d, [r10 + rdx - 0x54e3a12b]
0x38b1:	mov	edx, ebx
0x38b3:	xor	r9d, r8d
0x38b6:	ror	edx, 0xb
0x38b9:	add	r10d, r9d
0x38bc:	mov	r9d, ebx
0x38bf:	ror	r9d, 6
0x38c3:	xor	edx, r9d
0x38c6:	mov	r9d, ebx
0x38c9:	rol	r9d, 7
0x38cd:	xor	r9d, edx
0x38d0:	mov	edx, ecx
0x38d2:	add	r9d, r10d
0x38d5:	mov	r10d, ecx
0x38d8:	add	edi, r9d
0x38db:	ror	edx, 2
0x38de:	ror	r10d, 0xd
0x38e2:	xor	r10d, edx
0x38e5:	mov	edx, ecx
0x38e7:	and	ebp, ecx
0x38e9:	rol	edx, 0xa
0x38ec:	xor	r10d, edx
0x38ef:	mov	edx, eax
0x38f1:	or	edx, ecx
0x38f3:	and	edx, esi
0x38f5:	or	edx, ebp
0x38f7:	mov	ebp, ecx
0x38f9:	add	edx, r10d
0x38fc:	mov	r10d, dword ptr [rsp + 0xb0]
0x3904:	add	edx, r9d
0x3907:	mov	r9d, r11d
0x390a:	xor	r9d, ebx
0x390d:	and	ebp, edx
0x390f:	and	r9d, edi
0x3912:	lea	r8d, [r10 + r8 - 0x27f85568]
0x391a:	mov	r10d, edi
0x391d:	xor	r9d, r11d
0x3920:	ror	r10d, 0xb
0x3924:	add	r9d, r8d
0x3927:	mov	r8d, edi
0x392a:	ror	r8d, 6
0x392e:	xor	r10d, r8d
0x3931:	mov	r8d, edi
0x3934:	rol	r8d, 7
0x3938:	xor	r8d, r10d
0x393b:	mov	r10d, edx
0x393e:	add	r8d, r9d
0x3941:	mov	r9d, edx
0x3944:	ror	r10d, 2
0x3948:	ror	r9d, 0xd
0x394c:	add	esi, r8d
0x394f:	xor	r9d, r10d




0x17d0:	jmp	qword ptr [rip + 0x20a75a]


0x2c58:	lea	rdi, [rip + 0x6548]
0x2c5f:	mov	edx, 2
0x2c64:	mov	esi, 1
0x2c69:	call	0x17d0


0x2c8d:	mov	rax, qword ptr [rcx + 0x28]
0x2c91:	cmp	rax, qword ptr [rcx + 0x30]
0x2c95:	jae	0x2ce8


0x2b70:	add	rdx, 1
0x2b74:	movzx	eax, byte ptr [rdi + rdx]
0x2b78:	cmp	al, 0x5c
0x2b7a:	je	0x2bc0


0x2bab:	add	rsi, rdi
0x2bae:	cmp	r9, rsi
0x2bb1:	jae	0x2bb7


0x8db0:	mov	eax, dword ptr [rsp]
0x8db3:	cmp	eax, 0x2f
0x8db6:	ja	0x8ea4


0x8ce0:	jg	0x8da0


0x8d38:	cmp	esi, 0x406
0x8d3e:	jge	0x8db0


0x8d80:	cmp	esi, 0x409
0x8d86:	je	0x8db0


0x5ff6:	test	r12b, 4
0x5ffa:	jne	0x61f1


0x60d0:	mov	rax, qword ptr [rbx]
0x60d3:	mov	edx, r12d
0x60d6:	mov	qword ptr [rcx], rax
0x60d9:	mov	rax, qword ptr [rbx + rdx - 8]
0x60de:	mov	qword ptr [rcx + rdx - 8], rax
0x60e3:	lea	rdx, [rcx + 8]
0x60e7:	mov	rax, rcx
0x60ea:	and	rdx, 0xfffffffffffffff8
0x60ee:	sub	rax, rdx
0x60f1:	sub	rbx, rax
0x60f4:	add	eax, r12d
0x60f7:	and	eax, 0xfffffff8
0x60fa:	cmp	eax, 8
0x60fd:	jb	0x6012


0x3952:	mov	r10d, edx
0x3955:	rol	r10d, 0xa
0x3959:	xor	r9d, r10d
0x395c:	mov	r10d, ecx
0x395f:	or	r10d, edx
0x3962:	and	r10d, eax
0x3965:	or	r10d, ebp
0x3968:	mov	ebp, edx
0x396a:	add	r10d, r9d
0x396d:	mov	r9d, dword ptr [rsp + 0xb4]
0x3975:	add	r10d, r8d
0x3978:	mov	r8d, ebx
0x397b:	xor	r8d, edi
0x397e:	and	ebp, r10d
0x3981:	and	r8d, esi
0x3984:	lea	r11d, [r9 + r11 + 0x12835b01]
0x398c:	mov	r9d, esi
0x398f:	xor	r8d, ebx
0x3992:	ror	r9d, 0xb
0x3996:	add	r11d, r8d
0x3999:	mov	r8d, esi
0x399c:	ror	r8d, 6
0x39a0:	xor	r9d, r8d
0x39a3:	mov	r8d, esi
0x39a6:	rol	r8d, 7
0x39aa:	xor	r8d, r9d
0x39ad:	mov	r9d, r10d
0x39b0:	add	r8d, r11d
0x39b3:	mov	r11d, r10d
0x39b6:	ror	r9d, 2
0x39ba:	ror	r11d, 0xd
0x39be:	add	eax, r8d
0x39c1:	xor	r11d, r9d
0x39c4:	mov	r9d, r10d
0x39c7:	rol	r9d, 0xa
0x39cb:	xor	r11d, r9d
0x39ce:	mov	r9d, edx
0x39d1:	or	r9d, r10d
0x39d4:	and	r9d, ecx
0x39d7:	or	r9d, ebp
0x39da:	mov	ebp, r10d
0x39dd:	add	r9d, r11d
0x39e0:	mov	r11d, edi
0x39e3:	add	r9d, r8d
0x39e6:	mov	r8d, dword ptr [rsp + 0xb8]
0x39ee:	xor	r11d, esi
0x39f1:	and	r11d, eax
0x39f4:	xor	r11d, edi
0x39f7:	lea	ebx, [r8 + rbx + 0x243185be]
0x39ff:	mov	r8d, eax
0x3a02:	ror	r8d, 0xb
0x3a06:	add	ebx, r11d
0x3a09:	mov	r11d, eax
0x3a0c:	ror	r11d, 6
0x3a10:	xor	r8d, r11d
0x3a13:	mov	r11d, eax
0x3a16:	rol	r11d, 7
0x3a1a:	xor	r11d, r8d
0x3a1d:	mov	r8d, r9d
0x3a20:	and	ebp, r9d
0x3a23:	add	r11d, ebx
0x3a26:	mov	ebx, r9d
0x3a29:	ror	r8d, 2
0x3a2d:	ror	ebx, 0xd
0x3a30:	add	ecx, r11d
0x3a33:	xor	ebx, r8d
0x3a36:	mov	r8d, r9d
0x3a39:	rol	r8d, 0xa
0x3a3d:	xor	ebx, r8d
0x3a40:	mov	r8d, r10d
0x3a43:	or	r8d, r9d
0x3a46:	and	r8d, edx
0x3a49:	or	r8d, ebp
0x3a4c:	mov	ebp, r9d
0x3a4f:	add	r8d, ebx
0x3a52:	mov	ebx, dword ptr [rsp + 0xbc]
0x3a59:	add	r8d, r11d
0x3a5c:	mov	r11d, esi
0x3a5f:	xor	r11d, eax
0x3a62:	and	r11d, ecx
0x3a65:	lea	edi, [rbx + rdi + 0x550c7dc3]
0x3a6c:	mov	ebx, ecx
0x3a6e:	xor	r11d, esi
0x3a71:	ror	ebx, 0xb
0x3a74:	add	r11d, edi
0x3a77:	mov	edi, ecx
0x3a79:	ror	edi, 6
0x3a7c:	xor	ebx, edi
0x3a7e:	mov	edi, ecx
0x3a80:	rol	edi, 7
0x3a83:	xor	edi, ebx
0x3a85:	mov	ebx, r8d
0x3a88:	add	edi, r11d
0x3a8b:	mov	r11d, r8d
0x3a8e:	ror	ebx, 2
0x3a91:	ror	r11d, 0xd
0x3a95:	add	edx, edi
0x3a97:	xor	r11d, ebx
0x3a9a:	mov	ebx, r8d




0x2c97:	lea	rdx, [rax + 1]
0x2c9b:	add	rbx, 1
0x2c9f:	mov	qword ptr [rcx + 0x28], rdx
0x2ca3:	mov	byte ptr [rax], sil
0x2ca6:	movzx	esi, byte ptr [rbx]
0x2ca9:	test	sil, sil
0x2cac:	jne	0x2c7a


0x2ce8:	mov	rdi, rcx
0x2ceb:	call	0x16d0


0x2bc0:	mov	r9, rcx
0x2bc3:	mov	byte ptr [rcx - 1], 0x5c
0x2bc7:	jmp	0x2b9e


0x2b7c:	cmp	al, 0x6e
0x2b7e:	jne	0x2b90


0x2bb3:	mov	byte ptr [r9], 0
0x2bb7:	mov	rax, rdi
0x2bba:	ret	


0x8dbc:	add	rax, qword ptr [rsp + 0x10]
0x8dc1:	mov	edx, dword ptr [rax]
0x8dc3:	mov	edi, ebp
0x8dc5:	xor	eax, eax
0x8dc7:	call	0x1610


0x8ea4:	mov	rax, qword ptr [rsp + 8]
0x8ea9:	jmp	0x8dc1


0x8ce6:	cmp	esi, 2
0x8ce9:	je	0x8db0


0x8da0:	cmp	esi, 9
0x8da3:	je	0x8d00


0x8d40:	cmp	esi, 0x401
0x8d46:	je	0x8d00


0x8d88:	jl	0x8d00


0x6000:	test	r12d, r12d
0x6003:	je	0x6012


0x61f1:	mov	edx, dword ptr [rbx]
0x61f3:	mov	dword ptr [rcx], edx
0x61f5:	mov	edx, r12d
0x61f8:	mov	eax, dword ptr [rbx + rdx - 4]
0x61fc:	mov	dword ptr [rcx + rdx - 4], eax
0x6200:	jmp	0x6012


0x6012:	add	r12, rdi
0x6015:	cmp	r12, 0x3f
0x6019:	jbe	0x603e


0x6103:	and	eax, 0xfffffff8
0x6106:	xor	ecx, ecx
0x6108:	mov	esi, ecx
0x610a:	add	ecx, 8
0x610d:	mov	r8, qword ptr [rbx + rsi]
0x6111:	cmp	ecx, eax
0x6113:	mov	qword ptr [rdx + rsi], r8
0x6117:	jb	0x6108


0x3a9d:	rol	ebx, 0xa
0x3aa0:	xor	r11d, ebx
0x3aa3:	mov	ebx, r9d
0x3aa6:	or	ebx, r8d
0x3aa9:	and	ebx, r10d
0x3aac:	and	ebp, r8d
0x3aaf:	or	ebx, ebp
0x3ab1:	mov	ebp, r8d
0x3ab4:	add	ebx, r11d
0x3ab7:	mov	r11d, dword ptr [rsp + 0xc0]
0x3abf:	add	ebx, edi
0x3ac1:	mov	edi, eax
0x3ac3:	xor	edi, ecx
0x3ac5:	and	ebp, ebx
0x3ac7:	and	edi, edx
0x3ac9:	lea	r11d, [r11 + rsi + 0x72be5d74]
0x3ad1:	mov	esi, edx
0x3ad3:	xor	edi, eax
0x3ad5:	ror	esi, 0xb
0x3ad8:	add	r11d, edi
0x3adb:	mov	edi, edx
0x3add:	ror	edi, 6
0x3ae0:	xor	esi, edi
0x3ae2:	mov	edi, edx
0x3ae4:	rol	edi, 7
0x3ae7:	xor	edi, esi
0x3ae9:	mov	esi, ebx
0x3aeb:	add	edi, r11d
0x3aee:	mov	r11d, ebx
0x3af1:	ror	esi, 2
0x3af4:	ror	r11d, 0xd
0x3af8:	add	r10d, edi
0x3afb:	xor	r11d, esi
0x3afe:	mov	esi, ebx
0x3b00:	mov	r14d, r10d
0x3b03:	rol	esi, 0xa
0x3b06:	xor	r11d, esi
0x3b09:	mov	esi, r8d
0x3b0c:	or	esi, ebx
0x3b0e:	and	esi, r9d
0x3b11:	or	esi, ebp
0x3b13:	mov	ebp, ebx
0x3b15:	add	esi, r11d
0x3b18:	mov	r11d, ecx
0x3b1b:	add	esi, edi
0x3b1d:	mov	edi, dword ptr [rsp + 0xc4]
0x3b24:	xor	r11d, edx
0x3b27:	and	r11d, r10d
0x3b2a:	xor	r11d, ecx
0x3b2d:	lea	eax, [rdi + rax - 0x7f214e02]
0x3b34:	mov	edi, r10d
0x3b37:	ror	edi, 6
0x3b3a:	add	r11d, eax
0x3b3d:	mov	eax, edi
0x3b3f:	mov	edi, r10d
0x3b42:	ror	edi, 0xb
0x3b45:	xor	edi, eax
0x3b47:	rol	r14d, 7
0x3b4b:	and	ebp, esi
0x3b4d:	mov	eax, r14d
0x3b50:	xor	eax, edi
0x3b52:	mov	edi, esi
0x3b54:	add	eax, r11d
0x3b57:	mov	r11d, esi
0x3b5a:	ror	edi, 2
0x3b5d:	ror	r11d, 0xd
0x3b61:	add	r9d, eax
0x3b64:	xor	r11d, edi
0x3b67:	mov	edi, esi
0x3b69:	mov	r14d, r9d
0x3b6c:	rol	edi, 0xa
0x3b6f:	ror	r14d, 0xb
0x3b73:	xor	r11d, edi
0x3b76:	mov	edi, ebx
0x3b78:	or	edi, esi
0x3b7a:	and	edi, r8d
0x3b7d:	or	edi, ebp
0x3b7f:	add	edi, r11d
0x3b82:	mov	r11d, edx
0x3b85:	xor	r11d, r10d
0x3b88:	add	edi, eax
0x3b8a:	mov	eax, r11d
0x3b8d:	mov	r11d, dword ptr [rsp + 0xc8]
0x3b95:	and	eax, r9d
0x3b98:	xor	eax, edx
0x3b9a:	lea	ecx, [r11 + rcx - 0x6423f959]
0x3ba2:	mov	r11d, r9d
0x3ba5:	ror	r11d, 6
0x3ba9:	xor	r14d, r11d
0x3bac:	mov	r11d, r9d
0x3baf:	add	ecx, eax
0x3bb1:	rol	r11d, 7
0x3bb5:	mov	eax, r11d
0x3bb8:	mov	r11d, esi
0x3bbb:	xor	eax, r14d
0x3bbe:	mov	r14d, edi
0x3bc1:	add	eax, ecx
0x3bc3:	mov	ecx, edi
0x3bc5:	ror	r14d, 2


0x16d0:	jmp	qword ptr [rip + 0x20a7da]


0x2b9e:	add	rdx, 1
0x2ba2:	add	rcx, 1
0x2ba6:	cmp	rsi, rdx
0x2ba9:	ja	0x2b5f


0x2b80:	mov	r9, rcx
0x2b83:	mov	byte ptr [rcx - 1], 0xa
0x2b87:	jmp	0x2b9e


0x8dc1:	mov	edx, dword ptr [rax]
0x8dc3:	mov	edi, ebp
0x8dc5:	xor	eax, eax
0x8dc7:	call	0x1610


0x8cef:	jg	0x8d00


0x8da9:	jg	0x8db0


0x8d48:	cmp	esi, 0x402
0x8d4e:	je	0x8db0


0x8d8e:	cmp	esi, 0x40a
0x8d94:	jne	0x8d58


0x6005:	movzx	edx, byte ptr [rbx]
0x6008:	test	al, 2
0x600a:	mov	byte ptr [rcx], dl
0x600c:	jne	0x6205


0x603e:	mov	qword ptr [r13 + 0x28], r12
0x6042:	add	rsp, 8
0x6046:	pop	rbx
0x6047:	pop	rbp
0x6048:	pop	r12
0x604a:	pop	r13
0x604c:	pop	r14
0x604e:	pop	r15
0x6050:	ret	


0x601b:	mov	rdx, r13
0x601e:	mov	esi, 0x40
0x6023:	mov	rdi, rbp
0x6026:	call	0x34b0


0x6108:	mov	esi, ecx
0x610a:	add	ecx, 8
0x610d:	mov	r8, qword ptr [rbx + rsi]
0x6111:	cmp	ecx, eax
0x6113:	mov	qword ptr [rdx + rsi], r8
0x6117:	jb	0x6108


0x6119:	jmp	0x6012


0x3bc9:	ror	ecx, 0xd
0x3bcc:	add	r8d, eax
0x3bcf:	xor	ecx, r14d
0x3bd2:	mov	r14d, edi
0x3bd5:	rol	r14d, 0xa
0x3bd9:	xor	ecx, r14d
0x3bdc:	mov	r14d, esi
0x3bdf:	or	r14d, edi
0x3be2:	and	r11d, edi
0x3be5:	and	r14d, ebx
0x3be8:	or	r14d, r11d
0x3beb:	mov	r11d, r8d
0x3bee:	add	r14d, ecx
0x3bf1:	mov	ecx, r10d
0x3bf4:	rol	r11d, 7
0x3bf8:	xor	ecx, r9d
0x3bfb:	add	r14d, eax
0x3bfe:	mov	eax, ecx
0x3c00:	mov	ecx, dword ptr [rsp + 0xcc]
0x3c07:	and	eax, r8d
0x3c0a:	xor	eax, r10d
0x3c0d:	lea	edx, [rcx + rdx - 0x3e640e8c]
0x3c14:	mov	ecx, r8d
0x3c17:	ror	ecx, 6
0x3c1a:	add	edx, eax
0x3c1c:	mov	eax, ecx
0x3c1e:	mov	ecx, r8d
0x3c21:	ror	ecx, 0xb
0x3c24:	xor	ecx, eax
0x3c26:	mov	eax, r11d
0x3c29:	mov	r11d, edi
0x3c2c:	xor	eax, ecx
0x3c2e:	mov	ecx, r14d
0x3c31:	and	r11d, r14d
0x3c34:	add	eax, edx
0x3c36:	mov	edx, r14d
0x3c39:	ror	ecx, 2
0x3c3c:	ror	edx, 0xd
0x3c3f:	add	ebx, eax
0x3c41:	xor	edx, ecx
0x3c43:	mov	ecx, r14d
0x3c46:	mov	ebp, ebx
0x3c48:	rol	ecx, 0xa
0x3c4b:	xor	edx, ecx
0x3c4d:	mov	ecx, edi
0x3c4f:	or	ecx, r14d
0x3c52:	and	ecx, esi
0x3c54:	or	ecx, r11d
0x3c57:	mov	r11d, dword ptr [rsp + 0xc8]
0x3c5f:	add	ecx, edx
0x3c61:	mov	edx, dword ptr [rsp + 0xc8]
0x3c68:	add	ecx, eax
0x3c6a:	rol	r11d, 0xf
0x3c6e:	rol	edx, 0xd
0x3c71:	mov	eax, edx
0x3c73:	mov	edx, dword ptr [rsp + 0x90]
0x3c7a:	xor	eax, r11d
0x3c7d:	mov	r11d, dword ptr [rsp + 0xc8]
0x3c85:	shr	r11d, 0xa
0x3c89:	xor	r11d, eax
0x3c8c:	add	edx, dword ptr [rsp + 0xb4]
0x3c93:	rol	ebp, 7
0x3c96:	lea	eax, [r11 + rdx]
0x3c9a:	mov	edx, r15d
0x3c9d:	mov	r11d, r15d
0x3ca0:	ror	edx, 7
0x3ca3:	rol	r11d, 0xe
0x3ca7:	xor	r11d, edx
0x3caa:	mov	edx, r15d
0x3cad:	shr	edx, 3
0x3cb0:	xor	r11d, edx
0x3cb3:	mov	edx, r9d
0x3cb6:	xor	edx, r8d
0x3cb9:	add	r11d, eax
0x3cbc:	mov	eax, edx
0x3cbe:	lea	r10d, [r10 + r11 - 0x1b64963f]
0x3cc6:	mov	edx, ebx
0x3cc8:	and	eax, ebx
0x3cca:	ror	edx, 6
0x3ccd:	xor	eax, r9d
0x3cd0:	add	r10d, eax
0x3cd3:	mov	eax, edx
0x3cd5:	mov	edx, ebx
0x3cd7:	ror	edx, 0xb
0x3cda:	xor	edx, eax
0x3cdc:	mov	eax, ebp
0x3cde:	mov	ebp, r14d
0x3ce1:	xor	eax, edx
0x3ce3:	mov	edx, ecx
0x3ce5:	and	ebp, ecx
0x3ce7:	add	eax, r10d
0x3cea:	mov	r10d, ecx
0x3ced:	ror	edx, 2
0x3cf0:	ror	r10d, 0xd
0x3cf4:	add	esi, eax
0x3cf6:	xor	r10d, edx
0x3cf9:	mov	edx, ecx
0x3cfb:	mov	r13d, esi
0x3cfe:	rol	edx, 0xa




0x8cf1:	cmp	esi, 1
0x8cf4:	jne	0x8d58


0x8dab:	cmp	esi, 8
0x8dae:	jne	0x8d58


0x8d50:	cmp	esi, 0x400
0x8d56:	je	0x8db0


0x8d96:	jmp	0x8d00


0x8d58:	mov	eax, dword ptr [rsp]
0x8d5b:	cmp	eax, 0x2f
0x8d5e:	ja	0x8e9a


0x6205:	mov	edx, r12d
0x6208:	movzx	eax, word ptr [rbx + rdx - 2]
0x620d:	mov	word ptr [rcx + rdx - 2], ax
0x6212:	jmp	0x6012


0x3d01:	xor	r10d, edx
0x3d04:	mov	edx, r14d
0x3d07:	or	edx, ecx
0x3d09:	and	edx, edi
0x3d0b:	or	edx, ebp
0x3d0d:	mov	ebp, dword ptr [rsp + 0xcc]
0x3d14:	add	edx, r10d
0x3d17:	mov	r10d, dword ptr [rsp + 0xcc]
0x3d1f:	add	edx, eax
0x3d21:	rol	ebp, 0xd
0x3d24:	rol	r10d, 0xf
0x3d28:	mov	eax, ebp
0x3d2a:	mov	ebp, r12d
0x3d2d:	xor	eax, r10d
0x3d30:	mov	r10d, dword ptr [rsp + 0xcc]
0x3d38:	add	r15d, dword ptr [rsp + 0xb8]
0x3d40:	ror	ebp, 7
0x3d43:	ror	r13d, 0xb
0x3d47:	shr	r10d, 0xa
0x3d4b:	xor	r10d, eax
0x3d4e:	lea	eax, [r10 + r15]
0x3d52:	mov	r10d, r12d
0x3d55:	mov	r15d, r8d
0x3d58:	rol	r10d, 0xe
0x3d5c:	xor	r15d, ebx
0x3d5f:	xor	r10d, ebp
0x3d62:	mov	ebp, r12d
0x3d65:	shr	ebp, 3
0x3d68:	xor	r10d, ebp
0x3d6b:	mov	ebp, ecx
0x3d6d:	add	r10d, eax
0x3d70:	mov	eax, r15d
0x3d73:	mov	r15d, esi
0x3d76:	ror	r15d, 6
0x3d7a:	and	eax, esi
0x3d7c:	lea	r9d, [r9 + r10 - 0x1041b87a]
0x3d84:	xor	r13d, r15d
0x3d87:	mov	r15d, esi
0x3d8a:	xor	eax, r8d
0x3d8d:	rol	r15d, 7
0x3d91:	add	r9d, eax
0x3d94:	and	ebp, edx
0x3d96:	mov	eax, r15d
0x3d99:	mov	r15d, dword ptr [rsp + 0x9c]
0x3da1:	xor	eax, r13d
0x3da4:	mov	r13d, edx
0x3da7:	add	eax, r9d
0x3daa:	mov	r9d, edx
0x3dad:	ror	r13d, 2
0x3db1:	ror	r9d, 0xd
0x3db5:	add	edi, eax
0x3db7:	xor	r9d, r13d
0x3dba:	mov	r13d, edx
0x3dbd:	rol	r13d, 0xa
0x3dc1:	xor	r9d, r13d
0x3dc4:	mov	r13d, ecx
0x3dc7:	or	r13d, edx
0x3dca:	and	r13d, r14d
0x3dcd:	or	r13d, ebp
0x3dd0:	mov	ebp, r11d
0x3dd3:	add	r13d, r9d
0x3dd6:	mov	r9d, r11d
0x3dd9:	add	r13d, eax
0x3ddc:	rol	ebp, 0xf
0x3ddf:	rol	r9d, 0xd
0x3de3:	xor	r9d, ebp
0x3de6:	mov	ebp, r11d
0x3de9:	ror	r15d, 7
0x3ded:	shr	ebp, 0xa
0x3df0:	mov	eax, r15d
0x3df3:	add	r12d, dword ptr [rsp + 0xbc]
0x3dfb:	xor	ebp, r9d
0x3dfe:	mov	r9d, dword ptr [rsp + 0x9c]
0x3e06:	mov	r15d, ebx
0x3e09:	xor	r15d, esi
0x3e0c:	rol	r9d, 0xe
0x3e10:	xor	eax, r9d
0x3e13:	mov	r9d, dword ptr [rsp + 0x9c]
0x3e1b:	shr	r9d, 3
0x3e1f:	xor	r9d, eax
0x3e22:	mov	eax, r15d
0x3e25:	mov	r15d, edi
0x3e28:	add	r9d, r12d
0x3e2b:	mov	r12d, edi
0x3e2e:	ror	r15d, 6
0x3e32:	add	r9d, ebp
0x3e35:	ror	r12d, 0xb
0x3e39:	and	eax, edi
0x3e3b:	xor	r12d, r15d
0x3e3e:	lea	r8d, [r8 + r9 + 0xfc19dc6]
0x3e46:	mov	r15d, edi
0x3e49:	xor	eax, ebx
0x3e4b:	rol	r15d, 7
0x3e4f:	mov	ebp, edx
0x3e51:	add	r8d, eax
0x3e54:	mov	eax, r15d
0x3e57:	and	ebp, r13d
0x3e5a:	xor	eax, r12d
0x3e5d:	mov	r12d, r13d


0x8d64:	add	rax, qword ptr [rsp + 0x10]
0x8d69:	mov	rdx, qword ptr [rax]
0x8d6c:	mov	edi, ebp
0x8d6e:	xor	eax, eax
0x8d70:	call	0x1610


0x8e9a:	mov	rax, qword ptr [rsp + 8]
0x8e9f:	jmp	0x8d69


0x3e60:	mov	r15d, dword ptr [rsp + 0xa0]
0x3e68:	add	eax, r8d
0x3e6b:	mov	r8d, r13d
0x3e6e:	ror	r12d, 2
0x3e72:	ror	r8d, 0xd
0x3e76:	add	r14d, eax
0x3e79:	xor	r8d, r12d
0x3e7c:	mov	r12d, r13d
0x3e7f:	rol	r12d, 0xa
0x3e83:	xor	r8d, r12d
0x3e86:	mov	r12d, edx
0x3e89:	or	r12d, r13d
0x3e8c:	and	r12d, ecx
0x3e8f:	or	r12d, ebp
0x3e92:	mov	ebp, r10d
0x3e95:	ror	r15d, 7
0x3e99:	add	r12d, r8d
0x3e9c:	mov	r8d, r10d
0x3e9f:	rol	ebp, 0xf
0x3ea2:	rol	r8d, 0xd
0x3ea6:	add	r12d, eax
0x3ea9:	mov	eax, r15d
0x3eac:	xor	r8d, ebp
0x3eaf:	mov	ebp, r10d
0x3eb2:	shr	ebp, 0xa
0x3eb5:	xor	ebp, r8d
0x3eb8:	mov	r8d, dword ptr [rsp + 0xa0]
0x3ec0:	mov	r15d, dword ptr [rsp + 0x9c]
0x3ec8:	add	r15d, dword ptr [rsp + 0xc0]
0x3ed0:	rol	r8d, 0xe
0x3ed4:	xor	eax, r8d
0x3ed7:	mov	r8d, dword ptr [rsp + 0xa0]
0x3edf:	shr	r8d, 3
0x3ee3:	xor	r8d, eax
0x3ee6:	add	r8d, r15d
0x3ee9:	mov	r15d, esi
0x3eec:	xor	r15d, edi
0x3eef:	add	r8d, ebp
0x3ef2:	mov	ebp, r14d
0x3ef5:	mov	eax, r15d
0x3ef8:	mov	r15d, r14d
0x3efb:	ror	ebp, 0xb
0x3efe:	ror	r15d, 6
0x3f02:	and	eax, r14d
0x3f05:	lea	ebx, [rbx + r8 + 0x240ca1cc]
0x3f0d:	xor	ebp, r15d
0x3f10:	mov	r15d, r14d
0x3f13:	xor	eax, esi
0x3f15:	rol	r15d, 7
0x3f19:	add	ebx, eax
0x3f1b:	mov	eax, r15d
0x3f1e:	mov	r15d, r13d
0x3f21:	xor	eax, ebp
0x3f23:	mov	ebp, r12d
0x3f26:	add	eax, ebx
0x3f28:	mov	ebx, r12d
0x3f2b:	ror	ebp, 2
0x3f2e:	ror	ebx, 0xd
0x3f31:	add	ecx, eax
0x3f33:	xor	ebx, ebp
0x3f35:	mov	ebp, r12d
0x3f38:	rol	ebp, 0xa
0x3f3b:	xor	ebx, ebp
0x3f3d:	mov	ebp, r13d
0x3f40:	or	ebp, r12d
0x3f43:	and	r15d, r12d
0x3f46:	and	ebp, edx
0x3f48:	or	ebp, r15d
0x3f4b:	mov	r15d, r9d
0x3f4e:	add	ebp, ebx
0x3f50:	mov	ebx, r9d
0x3f53:	shr	r15d, 0xa
0x3f57:	rol	ebx, 0xf
0x3f5a:	add	ebp, eax
0x3f5c:	mov	eax, ebx
0x3f5e:	mov	ebx, r9d
0x3f61:	rol	ebx, 0xd
0x3f64:	xor	ebx, eax
0x3f66:	xor	ebx, r15d
0x3f69:	mov	r15d, dword ptr [rsp + 0xa4]
0x3f71:	ror	r15d, 7
0x3f75:	mov	eax, r15d
0x3f78:	mov	r15d, dword ptr [rsp + 0xa4]
0x3f80:	rol	r15d, 0xe
0x3f84:	xor	eax, r15d
0x3f87:	mov	r15d, dword ptr [rsp + 0xa4]
0x3f8f:	shr	r15d, 3
0x3f93:	xor	r15d, eax
0x3f96:	mov	eax, dword ptr [rsp + 0xa0]
0x3f9d:	add	eax, dword ptr [rsp + 0xc4]
0x3fa4:	add	eax, r15d
0x3fa7:	mov	r15d, edi
0x3faa:	xor	r15d, r14d
0x3fad:	add	ebx, eax
0x3faf:	mov	eax, r15d
0x3fb2:	lea	esi, [rsi + rbx + 0x2de92c6f]
0x3fb9:	mov	dword ptr [rsp + 8], ebx
0x3fbd:	and	eax, ecx
0x3fbf:	mov	ebx, ecx


0x8d69:	mov	rdx, qword ptr [rax]
0x8d6c:	mov	edi, ebp
0x8d6e:	xor	eax, eax
0x8d70:	call	0x1610


0x3fc1:	mov	r15d, r12d
0x3fc4:	xor	eax, edi
0x3fc6:	ror	ebx, 0xb
0x3fc9:	add	esi, eax
0x3fcb:	mov	eax, ecx
0x3fcd:	ror	eax, 6
0x3fd0:	xor	ebx, eax
0x3fd2:	mov	eax, ecx
0x3fd4:	rol	eax, 7
0x3fd7:	xor	eax, ebx
0x3fd9:	mov	ebx, ebp
0x3fdb:	add	eax, esi
0x3fdd:	mov	esi, ebp
0x3fdf:	ror	ebx, 2
0x3fe2:	ror	esi, 0xd
0x3fe5:	add	edx, eax
0x3fe7:	xor	esi, ebx
0x3fe9:	mov	ebx, ebp
0x3feb:	and	r15d, ebp
0x3fee:	rol	ebx, 0xa
0x3ff1:	xor	esi, ebx
0x3ff3:	mov	ebx, r12d
0x3ff6:	or	ebx, ebp
0x3ff8:	and	ebx, r13d
0x3ffb:	or	ebx, r15d
0x3ffe:	mov	r15d, dword ptr [rsp + 0xa8]
0x4006:	add	ebx, esi
0x4008:	mov	esi, r8d
0x400b:	rol	esi, 0xf
0x400e:	add	ebx, eax
0x4010:	mov	eax, esi
0x4012:	mov	esi, r8d
0x4015:	rol	r15d, 0xe
0x4019:	rol	esi, 0xd
0x401c:	xor	esi, eax
0x401e:	mov	eax, r8d
0x4021:	shr	eax, 0xa
0x4024:	xor	esi, eax
0x4026:	mov	eax, dword ptr [rsp + 0xa8]
0x402d:	ror	eax, 7
0x4030:	xor	eax, r15d
0x4033:	mov	r15d, dword ptr [rsp + 0xa8]
0x403b:	shr	r15d, 3
0x403f:	xor	r15d, eax
0x4042:	mov	eax, dword ptr [rsp + 0xa4]
0x4049:	add	eax, dword ptr [rsp + 0xc8]
0x4050:	add	eax, r15d
0x4053:	mov	r15d, edx
0x4056:	add	eax, esi
0x4058:	mov	esi, r14d
0x405b:	ror	r15d, 0xb
0x405f:	xor	esi, ecx
0x4061:	lea	edi, [rdi + rax + 0x4a7484aa]
0x4068:	mov	dword ptr [rsp + 0xc], eax
0x406c:	and	esi, edx
0x406e:	mov	eax, r15d
0x4071:	mov	r15d, ebx
0x4074:	xor	esi, r14d
0x4077:	add	edi, esi
0x4079:	mov	esi, edx
0x407b:	ror	esi, 6
0x407e:	xor	eax, esi
0x4080:	mov	esi, edx
0x4082:	rol	esi, 7
0x4085:	xor	esi, eax
0x4087:	add	esi, edi
0x4089:	mov	edi, ebx
0x408b:	add	r13d, esi
0x408e:	ror	edi, 2
0x4091:	rol	r15d, 0xa
0x4095:	mov	eax, edi
0x4097:	mov	edi, ebx
0x4099:	ror	edi, 0xd
0x409c:	xor	edi, eax
0x409e:	xor	edi, r15d
0x40a1:	mov	r15d, ebp
0x40a4:	or	r15d, ebx
0x40a7:	mov	eax, r15d
0x40aa:	mov	r15d, ebp
0x40ad:	and	r15d, ebx
0x40b0:	and	eax, r12d
0x40b3:	or	eax, r15d
0x40b6:	mov	r15d, dword ptr [rsp + 8]
0x40bb:	add	eax, edi
0x40bd:	add	eax, esi
0x40bf:	mov	edi, r15d
0x40c2:	mov	esi, r15d
0x40c5:	rol	esi, 0xf
0x40c8:	rol	edi, 0xd
0x40cb:	xor	edi, esi
0x40cd:	mov	esi, r15d
0x40d0:	mov	r15d, dword ptr [rsp + 0xac]
0x40d8:	shr	esi, 0xa
0x40db:	xor	edi, esi
0x40dd:	mov	esi, dword ptr [rsp + 0xac]
0x40e4:	rol	r15d, 0xe
0x40e8:	ror	esi, 7
0x40eb:	xor	esi, r15d
0x40ee:	mov	r15d, dword ptr [rsp + 0xac]


0x40f6:	shr	r15d, 3
0x40fa:	xor	r15d, esi
0x40fd:	mov	esi, dword ptr [rsp + 0xa8]
0x4104:	add	esi, dword ptr [rsp + 0xcc]
0x410b:	add	esi, r15d
0x410e:	mov	r15d, ebx
0x4111:	add	edi, esi
0x4113:	mov	esi, ecx
0x4115:	xor	esi, edx
0x4117:	lea	r14d, [r14 + rdi + 0x5cb0a9dc]
0x411f:	mov	dword ptr [rsp + 0x10], edi
0x4123:	and	esi, r13d
0x4126:	mov	edi, r13d
0x4129:	xor	esi, ecx
0x412b:	ror	edi, 0xb
0x412e:	add	r14d, esi
0x4131:	mov	esi, r13d
0x4134:	ror	esi, 6
0x4137:	xor	edi, esi
0x4139:	mov	esi, r13d
0x413c:	rol	esi, 7
0x413f:	and	r15d, eax
0x4142:	xor	esi, edi
0x4144:	mov	edi, eax
0x4146:	add	esi, r14d
0x4149:	mov	r14d, eax
0x414c:	ror	edi, 2
0x414f:	ror	r14d, 0xd
0x4153:	add	r12d, esi
0x4156:	xor	r14d, edi
0x4159:	mov	edi, eax
0x415b:	rol	edi, 0xa
0x415e:	xor	r14d, edi
0x4161:	mov	edi, ebx
0x4163:	or	edi, eax
0x4165:	and	edi, ebp
0x4167:	or	edi, r15d
0x416a:	mov	r15d, dword ptr [rsp + 0xc]
0x416f:	add	edi, r14d
0x4172:	add	edi, esi
0x4174:	mov	r14d, r15d
0x4177:	mov	esi, r15d
0x417a:	rol	esi, 0xf
0x417d:	rol	r14d, 0xd
0x4181:	xor	r14d, esi
0x4184:	mov	esi, r15d
0x4187:	shr	esi, 0xa
0x418a:	xor	r14d, esi
0x418d:	mov	esi, dword ptr [rsp + 0xb0]
0x4194:	ror	esi, 7
0x4197:	mov	r15d, esi
0x419a:	mov	esi, dword ptr [rsp + 0xb0]
0x41a1:	rol	esi, 0xe
0x41a4:	xor	esi, r15d
0x41a7:	mov	r15d, dword ptr [rsp + 0xb0]
0x41af:	shr	r15d, 3
0x41b3:	xor	esi, r15d
0x41b6:	add	esi, dword ptr [rsp + 0xac]
0x41bd:	mov	r15d, eax
0x41c0:	add	esi, r11d
0x41c3:	add	esi, r14d
0x41c6:	mov	r14d, edx
0x41c9:	xor	r14d, r13d
0x41cc:	lea	ecx, [rcx + rsi + 0x76f988da]
0x41d3:	mov	dword ptr [rsp + 0x18], esi
0x41d7:	and	r14d, r12d
0x41da:	mov	esi, r12d
0x41dd:	xor	r14d, edx
0x41e0:	add	r14d, ecx
0x41e3:	mov	ecx, r12d
0x41e6:	ror	ecx, 6
0x41e9:	ror	esi, 0xb
0x41ec:	and	r15d, edi
0x41ef:	xor	esi, ecx
0x41f1:	mov	ecx, r12d
0x41f4:	rol	ecx, 7
0x41f7:	xor	ecx, esi
0x41f9:	add	ecx, r14d
0x41fc:	mov	r14d, edi
0x41ff:	ror	r14d, 2
0x4203:	add	ebp, ecx
0x4205:	mov	esi, r14d
0x4208:	mov	r14d, edi
0x420b:	ror	r14d, 0xd
0x420f:	xor	r14d, esi
0x4212:	mov	esi, edi
0x4214:	rol	esi, 0xa
0x4217:	xor	r14d, esi
0x421a:	mov	esi, eax
0x421c:	or	esi, edi
0x421e:	and	esi, ebx
0x4220:	or	esi, r15d
0x4223:	mov	r15d, dword ptr [rsp + 0x10]
0x4228:	add	esi, r14d
0x422b:	add	esi, ecx
0x422d:	mov	r14d, r15d
0x4230:	mov	ecx, r15d
0x4233:	rol	ecx, 0xf
0x4236:	rol	r14d, 0xd


0x423a:	xor	r14d, ecx
0x423d:	mov	ecx, r15d
0x4240:	shr	ecx, 0xa
0x4243:	xor	r14d, ecx
0x4246:	mov	ecx, dword ptr [rsp + 0xb4]
0x424d:	ror	ecx, 7
0x4250:	mov	r15d, ecx
0x4253:	mov	ecx, dword ptr [rsp + 0xb4]
0x425a:	rol	ecx, 0xe
0x425d:	xor	ecx, r15d
0x4260:	mov	r15d, dword ptr [rsp + 0xb4]
0x4268:	shr	r15d, 3
0x426c:	xor	ecx, r15d
0x426f:	add	ecx, dword ptr [rsp + 0xb0]
0x4276:	mov	r15d, edi
0x4279:	add	ecx, r10d
0x427c:	add	ecx, r14d
0x427f:	mov	r14d, r13d
0x4282:	xor	r14d, r12d
0x4285:	lea	edx, [rdx + rcx - 0x67c1aeae]
0x428c:	mov	dword ptr [rsp + 0x1c], ecx
0x4290:	and	r14d, ebp
0x4293:	mov	ecx, ebp
0x4295:	and	r15d, esi
0x4298:	xor	r14d, r13d
0x429b:	ror	ecx, 0xb
0x429e:	add	r14d, edx
0x42a1:	mov	edx, ebp
0x42a3:	ror	edx, 6
0x42a6:	xor	ecx, edx
0x42a8:	mov	edx, ebp
0x42aa:	rol	edx, 7
0x42ad:	xor	edx, ecx
0x42af:	mov	ecx, esi
0x42b1:	add	edx, r14d
0x42b4:	mov	r14d, esi
0x42b7:	ror	ecx, 2
0x42ba:	ror	r14d, 0xd
0x42be:	add	ebx, edx
0x42c0:	xor	r14d, ecx
0x42c3:	mov	ecx, esi
0x42c5:	rol	ecx, 0xa
0x42c8:	xor	r14d, ecx
0x42cb:	mov	ecx, edi
0x42cd:	or	ecx, esi
0x42cf:	and	ecx, eax
0x42d1:	or	ecx, r15d
0x42d4:	mov	r15d, dword ptr [rsp + 0x18]
0x42d9:	add	ecx, r14d
0x42dc:	add	ecx, edx
0x42de:	mov	r14d, r15d
0x42e1:	mov	edx, r15d
0x42e4:	rol	edx, 0xf
0x42e7:	rol	r14d, 0xd
0x42eb:	xor	r14d, edx
0x42ee:	mov	edx, r15d
0x42f1:	shr	edx, 0xa
0x42f4:	xor	r14d, edx
0x42f7:	mov	edx, dword ptr [rsp + 0xb8]
0x42fe:	ror	edx, 7
0x4301:	mov	r15d, edx
0x4304:	mov	edx, dword ptr [rsp + 0xb8]
0x430b:	rol	edx, 0xe
0x430e:	xor	edx, r15d
0x4311:	mov	r15d, dword ptr [rsp + 0xb8]
0x4319:	shr	r15d, 3
0x431d:	xor	edx, r15d
0x4320:	add	edx, dword ptr [rsp + 0xb4]
0x4327:	mov	r15d, esi
0x432a:	add	edx, r9d
0x432d:	and	r15d, ecx
0x4330:	add	edx, r14d
0x4333:	mov	r14d, r12d
0x4336:	xor	r14d, ebp
0x4339:	lea	r13d, [r13 + rdx - 0x57ce3993]
0x4341:	mov	dword ptr [rsp + 0x20], edx
0x4345:	and	r14d, ebx
0x4348:	mov	edx, ebx
0x434a:	xor	r14d, r12d
0x434d:	ror	edx, 0xb
0x4350:	add	r13d, r14d
0x4353:	mov	r14d, ebx
0x4356:	ror	r14d, 6
0x435a:	xor	edx, r14d
0x435d:	mov	r14d, ebx
0x4360:	rol	r14d, 7
0x4364:	xor	r14d, edx
0x4367:	add	r14d, r13d
0x436a:	lea	r13d, [rax + r14]
0x436e:	mov	eax, ecx
0x4370:	ror	eax, 2
0x4373:	mov	edx, eax
0x4375:	mov	eax, ecx
0x4377:	ror	eax, 0xd
0x437a:	xor	eax, edx
0x437c:	mov	edx, ecx
0x437e:	rol	edx, 0xa
0x4381:	xor	eax, edx
0x4383:	mov	edx, esi


0x4385:	or	edx, ecx
0x4387:	and	edx, edi
0x4389:	or	edx, r15d
0x438c:	mov	r15d, dword ptr [rsp + 0x1c]
0x4391:	add	edx, eax
0x4393:	add	edx, r14d
0x4396:	mov	eax, r15d
0x4399:	mov	r14d, r15d
0x439c:	rol	eax, 0xf
0x439f:	rol	r14d, 0xd
0x43a3:	xor	r14d, eax
0x43a6:	mov	eax, r15d
0x43a9:	shr	eax, 0xa
0x43ac:	xor	r14d, eax
0x43af:	mov	eax, dword ptr [rsp + 0xbc]
0x43b6:	ror	eax, 7
0x43b9:	mov	r15d, eax
0x43bc:	mov	eax, dword ptr [rsp + 0xbc]
0x43c3:	rol	eax, 0xe
0x43c6:	xor	eax, r15d
0x43c9:	mov	r15d, dword ptr [rsp + 0xbc]
0x43d1:	shr	r15d, 3
0x43d5:	xor	eax, r15d
0x43d8:	add	eax, dword ptr [rsp + 0xb8]
0x43df:	mov	r15d, ecx
0x43e2:	and	r15d, edx
0x43e5:	add	eax, r8d
0x43e8:	add	eax, r14d
0x43eb:	mov	r14d, ebp
0x43ee:	xor	r14d, ebx
0x43f1:	lea	r12d, [r12 + rax - 0x4ffcd838]
0x43f9:	mov	dword ptr [rsp + 0x24], eax
0x43fd:	and	r14d, r13d
0x4400:	mov	eax, r13d
0x4403:	xor	r14d, ebp
0x4406:	ror	eax, 0xb
0x4409:	add	r12d, r14d
0x440c:	mov	r14d, r13d
0x440f:	ror	r14d, 6
0x4413:	xor	eax, r14d
0x4416:	mov	r14d, r13d
0x4419:	rol	r14d, 7
0x441d:	xor	r14d, eax
0x4420:	add	r14d, r12d
0x4423:	lea	r12d, [rdi + r14]
0x4427:	mov	edi, edx
0x4429:	ror	edi, 2
0x442c:	mov	eax, edi
0x442e:	mov	edi, edx
0x4430:	ror	edi, 0xd
0x4433:	xor	edi, eax
0x4435:	mov	eax, edx
0x4437:	rol	eax, 0xa
0x443a:	xor	edi, eax
0x443c:	mov	eax, ecx
0x443e:	or	eax, edx
0x4440:	and	eax, esi
0x4442:	or	eax, r15d
0x4445:	mov	r15d, dword ptr [rsp + 0x20]
0x444a:	add	eax, edi
0x444c:	add	eax, r14d
0x444f:	mov	edi, r15d
0x4452:	mov	r14d, r15d
0x4455:	rol	edi, 0xf
0x4458:	rol	r14d, 0xd
0x445c:	xor	r14d, edi
0x445f:	mov	edi, r15d
0x4462:	shr	edi, 0xa
0x4465:	xor	r14d, edi
0x4468:	mov	edi, dword ptr [rsp + 0xc0]
0x446f:	ror	edi, 7
0x4472:	mov	r15d, edi
0x4475:	mov	edi, dword ptr [rsp + 0xc0]
0x447c:	rol	edi, 0xe
0x447f:	xor	edi, r15d
0x4482:	mov	r15d, dword ptr [rsp + 0xc0]
0x448a:	shr	r15d, 3
0x448e:	xor	edi, r15d
0x4491:	add	edi, dword ptr [rsp + 0xbc]
0x4498:	mov	r15d, edx
0x449b:	add	edi, dword ptr [rsp + 8]
0x449f:	and	r15d, eax
0x44a2:	add	edi, r14d
0x44a5:	mov	r14d, ebx
0x44a8:	xor	r14d, r13d
0x44ab:	lea	ebp, [rbp + rdi - 0x40a68039]
0x44b2:	mov	dword ptr [rsp + 0x28], edi
0x44b6:	and	r14d, r12d
0x44b9:	mov	edi, r12d
0x44bc:	xor	r14d, ebx
0x44bf:	ror	edi, 0xb
0x44c2:	add	ebp, r14d
0x44c5:	mov	r14d, r12d
0x44c8:	ror	r14d, 6
0x44cc:	xor	edi, r14d
0x44cf:	mov	r14d, r12d
0x44d2:	rol	r14d, 7
0x44d6:	xor	r14d, edi
0x44d9:	add	r14d, ebp


0x44dc:	lea	ebp, [rsi + r14]
0x44e0:	mov	esi, eax
0x44e2:	ror	esi, 2
0x44e5:	mov	edi, esi
0x44e7:	mov	esi, eax
0x44e9:	ror	esi, 0xd
0x44ec:	xor	esi, edi
0x44ee:	mov	edi, eax
0x44f0:	rol	edi, 0xa
0x44f3:	xor	esi, edi
0x44f5:	mov	edi, edx
0x44f7:	or	edi, eax
0x44f9:	and	edi, ecx
0x44fb:	or	edi, r15d
0x44fe:	mov	r15d, dword ptr [rsp + 0x24]
0x4503:	add	edi, esi
0x4505:	add	edi, r14d
0x4508:	mov	esi, r15d
0x450b:	mov	r14d, r15d
0x450e:	rol	esi, 0xf
0x4511:	rol	r14d, 0xd
0x4515:	xor	r14d, esi
0x4518:	mov	esi, r15d
0x451b:	shr	esi, 0xa
0x451e:	xor	r14d, esi
0x4521:	mov	esi, dword ptr [rsp + 0xc4]
0x4528:	ror	esi, 7
0x452b:	mov	r15d, esi
0x452e:	mov	esi, dword ptr [rsp + 0xc4]
0x4535:	rol	esi, 0xe
0x4538:	xor	esi, r15d
0x453b:	mov	r15d, dword ptr [rsp + 0xc4]
0x4543:	shr	r15d, 3
0x4547:	xor	esi, r15d
0x454a:	add	esi, dword ptr [rsp + 0xc0]
0x4551:	mov	r15d, eax
0x4554:	add	esi, dword ptr [rsp + 0xc]
0x4558:	and	r15d, edi
0x455b:	add	esi, r14d
0x455e:	mov	r14d, r13d
0x4561:	xor	r14d, r12d
0x4564:	lea	ebx, [rbx + rsi - 0x391ff40d]
0x456b:	mov	dword ptr [rsp + 0x2c], esi
0x456f:	and	r14d, ebp
0x4572:	mov	esi, ebp
0x4574:	xor	r14d, r13d
0x4577:	ror	esi, 0xb
0x457a:	add	ebx, r14d
0x457d:	mov	r14d, ebp
0x4580:	ror	r14d, 6
0x4584:	xor	esi, r14d
0x4587:	mov	r14d, ebp
0x458a:	rol	r14d, 7
0x458e:	xor	r14d, esi
0x4591:	add	r14d, ebx
0x4594:	lea	ebx, [rcx + r14]
0x4598:	mov	ecx, edi
0x459a:	ror	ecx, 2
0x459d:	mov	esi, ecx
0x459f:	mov	ecx, edi
0x45a1:	ror	ecx, 0xd
0x45a4:	xor	ecx, esi
0x45a6:	mov	esi, edi
0x45a8:	rol	esi, 0xa
0x45ab:	xor	ecx, esi
0x45ad:	mov	esi, eax
0x45af:	or	esi, edi
0x45b1:	and	esi, edx
0x45b3:	or	esi, r15d
0x45b6:	mov	r15d, dword ptr [rsp + 0x28]
0x45bb:	add	esi, ecx
0x45bd:	add	esi, r14d
0x45c0:	mov	ecx, r15d
0x45c3:	mov	r14d, r15d
0x45c6:	rol	ecx, 0xf
0x45c9:	rol	r14d, 0xd
0x45cd:	xor	r14d, ecx
0x45d0:	mov	ecx, r15d
0x45d3:	shr	ecx, 0xa
0x45d6:	xor	r14d, ecx
0x45d9:	mov	ecx, dword ptr [rsp + 0xc8]
0x45e0:	ror	ecx, 7
0x45e3:	mov	r15d, ecx
0x45e6:	mov	ecx, dword ptr [rsp + 0xc8]
0x45ed:	rol	ecx, 0xe
0x45f0:	xor	ecx, r15d
0x45f3:	mov	r15d, dword ptr [rsp + 0xc8]
0x45fb:	shr	r15d, 3
0x45ff:	xor	ecx, r15d
0x4602:	add	ecx, dword ptr [rsp + 0xc4]
0x4609:	mov	r15d, edi
0x460c:	add	ecx, dword ptr [rsp + 0x10]
0x4610:	and	r15d, esi
0x4613:	add	ecx, r14d
0x4616:	mov	r14d, r12d
0x4619:	xor	r14d, ebp
0x461c:	lea	r13d, [r13 + rcx - 0x2a586eb9]
0x4624:	mov	dword ptr [rsp + 0x30], ecx
0x4628:	and	r14d, ebx


0x462b:	mov	ecx, ebx
0x462d:	xor	r14d, r12d
0x4630:	ror	ecx, 0xb
0x4633:	add	r13d, r14d
0x4636:	mov	r14d, ebx
0x4639:	ror	r14d, 6
0x463d:	xor	ecx, r14d
0x4640:	mov	r14d, ebx
0x4643:	rol	r14d, 7
0x4647:	xor	r14d, ecx
0x464a:	add	r14d, r13d
0x464d:	lea	r13d, [rdx + r14]
0x4651:	mov	edx, esi
0x4653:	ror	edx, 2
0x4656:	mov	ecx, edx
0x4658:	mov	edx, esi
0x465a:	ror	edx, 0xd
0x465d:	xor	edx, ecx
0x465f:	mov	ecx, esi
0x4661:	rol	ecx, 0xa
0x4664:	xor	edx, ecx
0x4666:	mov	ecx, edi
0x4668:	or	ecx, esi
0x466a:	and	ecx, eax
0x466c:	or	ecx, r15d
0x466f:	mov	r15d, dword ptr [rsp + 0x2c]
0x4674:	add	ecx, edx
0x4676:	add	ecx, r14d
0x4679:	mov	edx, r15d
0x467c:	mov	r14d, r15d
0x467f:	rol	edx, 0xf
0x4682:	rol	r14d, 0xd
0x4686:	xor	r14d, edx
0x4689:	mov	edx, r15d
0x468c:	shr	edx, 0xa
0x468f:	xor	r14d, edx
0x4692:	mov	edx, dword ptr [rsp + 0xcc]
0x4699:	ror	edx, 7
0x469c:	mov	r15d, edx
0x469f:	mov	edx, dword ptr [rsp + 0xcc]
0x46a6:	rol	edx, 0xe
0x46a9:	xor	edx, r15d
0x46ac:	mov	r15d, dword ptr [rsp + 0xcc]
0x46b4:	shr	r15d, 3
0x46b8:	xor	edx, r15d
0x46bb:	add	edx, dword ptr [rsp + 0xc8]
0x46c2:	mov	r15d, esi
0x46c5:	add	edx, dword ptr [rsp + 0x18]
0x46c9:	and	r15d, ecx
0x46cc:	add	edx, r14d
0x46cf:	mov	r14d, ebp
0x46d2:	xor	r14d, ebx
0x46d5:	lea	r12d, [r12 + rdx + 0x6ca6351]
0x46dd:	mov	dword ptr [rsp + 0x34], edx
0x46e1:	and	r14d, r13d
0x46e4:	mov	edx, r13d
0x46e7:	xor	r14d, ebp
0x46ea:	ror	edx, 0xb
0x46ed:	add	r14d, r12d
0x46f0:	mov	r12d, r13d
0x46f3:	ror	r12d, 6
0x46f7:	xor	edx, r12d
0x46fa:	mov	r12d, r13d
0x46fd:	rol	r12d, 7
0x4701:	xor	r12d, edx
0x4704:	mov	edx, ecx
0x4706:	add	r12d, r14d
0x4709:	ror	edx, 2
0x470c:	lea	r14d, [rax + r12]
0x4710:	mov	eax, ecx
0x4712:	ror	eax, 0xd
0x4715:	xor	eax, edx
0x4717:	mov	edx, ecx
0x4719:	rol	edx, 0xa
0x471c:	xor	eax, edx
0x471e:	mov	edx, esi
0x4720:	or	edx, ecx
0x4722:	and	edx, edi
0x4724:	or	edx, r15d
0x4727:	mov	r15d, dword ptr [rsp + 0x30]
0x472c:	add	edx, eax
0x472e:	add	edx, r12d
0x4731:	mov	eax, r15d
0x4734:	mov	r12d, r15d
0x4737:	rol	eax, 0xf
0x473a:	rol	r12d, 0xd
0x473e:	xor	r12d, eax
0x4741:	mov	eax, r15d
0x4744:	shr	eax, 0xa
0x4747:	xor	r12d, eax
0x474a:	mov	eax, r11d
0x474d:	ror	eax, 7
0x4750:	mov	r15d, eax
0x4753:	mov	eax, r11d
0x4756:	rol	eax, 0xe
0x4759:	xor	eax, r15d
0x475c:	mov	r15d, r11d
0x475f:	shr	r15d, 3
0x4763:	xor	eax, r15d


0x4766:	add	eax, dword ptr [rsp + 0xcc]
0x476d:	mov	r15d, ecx
0x4770:	add	eax, dword ptr [rsp + 0x1c]
0x4774:	add	eax, r12d
0x4777:	mov	r12d, ebx
0x477a:	xor	r12d, r13d
0x477d:	lea	ebp, [rbp + rax + 0x14292967]
0x4784:	mov	dword ptr [rsp + 0x38], eax
0x4788:	and	r12d, r14d
0x478b:	mov	eax, r14d
0x478e:	xor	r12d, ebx
0x4791:	ror	eax, 0xb
0x4794:	add	r12d, ebp
0x4797:	mov	ebp, r14d
0x479a:	ror	ebp, 6
0x479d:	xor	eax, ebp
0x479f:	mov	ebp, r14d
0x47a2:	rol	ebp, 7
0x47a5:	xor	ebp, eax
0x47a7:	mov	eax, edx
0x47a9:	add	ebp, r12d
0x47ac:	mov	r12d, edx
0x47af:	ror	eax, 2
0x47b2:	ror	r12d, 0xd
0x47b6:	add	edi, ebp
0x47b8:	xor	r12d, eax
0x47bb:	mov	eax, edx
0x47bd:	rol	eax, 0xa
0x47c0:	xor	r12d, eax
0x47c3:	mov	eax, ecx
0x47c5:	or	eax, edx
0x47c7:	and	eax, esi
0x47c9:	and	r15d, edx
0x47cc:	or	eax, r15d
0x47cf:	mov	r15d, dword ptr [rsp + 0x34]
0x47d4:	add	eax, r12d
0x47d7:	add	eax, ebp
0x47d9:	mov	r12d, r15d
0x47dc:	mov	ebp, r15d
0x47df:	rol	ebp, 0xf
0x47e2:	rol	r12d, 0xd
0x47e6:	xor	r12d, ebp
0x47e9:	mov	ebp, r15d
0x47ec:	shr	ebp, 0xa
0x47ef:	xor	r12d, ebp
0x47f2:	mov	ebp, r10d
0x47f5:	ror	ebp, 7
0x47f8:	mov	r15d, ebp
0x47fb:	mov	ebp, r10d
0x47fe:	rol	ebp, 0xe
0x4801:	xor	ebp, r15d
0x4804:	mov	r15d, r10d
0x4807:	shr	r15d, 3
0x480b:	xor	ebp, r15d
0x480e:	add	r11d, ebp
0x4811:	add	r11d, dword ptr [rsp + 0x20]
0x4816:	mov	ebp, r13d
0x4819:	xor	ebp, r14d
0x481c:	and	ebp, edi
0x481e:	xor	ebp, r13d
0x4821:	add	r11d, r12d
0x4824:	mov	r12d, edx
0x4827:	lea	ebx, [rbx + r11 + 0x27b70a85]
0x482f:	mov	r15d, r11d
0x4832:	mov	r11d, edi
0x4835:	ror	r11d, 0xb
0x4839:	mov	dword ptr [rsp + 0x68], r15d
0x483e:	add	ebp, ebx
0x4840:	mov	ebx, edi
0x4842:	ror	ebx, 6
0x4845:	xor	r11d, ebx
0x4848:	mov	ebx, edi
0x484a:	rol	ebx, 7
0x484d:	xor	ebx, r11d
0x4850:	mov	r11d, eax
0x4853:	add	ebx, ebp
0x4855:	mov	ebp, eax
0x4857:	ror	r11d, 2
0x485b:	ror	ebp, 0xd
0x485e:	add	esi, ebx
0x4860:	xor	ebp, r11d
0x4863:	mov	r11d, eax
0x4866:	rol	r11d, 0xa
0x486a:	xor	ebp, r11d
0x486d:	mov	r11d, edx
0x4870:	and	r12d, eax
0x4873:	or	r11d, eax
0x4876:	and	r11d, ecx
0x4879:	or	r11d, r12d
0x487c:	mov	r12d, dword ptr [rsp + 0x38]
0x4881:	add	r11d, ebp
0x4884:	add	r11d, ebx
0x4887:	mov	ebp, r12d
0x488a:	mov	ebx, r12d
0x488d:	rol	ebx, 0xf
0x4890:	rol	ebp, 0xd
0x4893:	xor	ebp, ebx
0x4895:	mov	ebx, r12d
0x4898:	shr	ebx, 0xa


0x489b:	xor	ebp, ebx
0x489d:	mov	ebx, r9d
0x48a0:	ror	ebx, 7
0x48a3:	mov	r12d, ebx
0x48a6:	mov	ebx, r9d
0x48a9:	rol	ebx, 0xe
0x48ac:	xor	ebx, r12d
0x48af:	mov	r12d, r9d
0x48b2:	shr	r12d, 3
0x48b6:	xor	ebx, r12d
0x48b9:	mov	r12d, r15d
0x48bc:	add	r10d, ebx
0x48bf:	add	r10d, dword ptr [rsp + 0x24]
0x48c4:	mov	ebx, r14d
0x48c7:	xor	ebx, edi
0x48c9:	and	ebx, esi
0x48cb:	xor	ebx, r14d
0x48ce:	add	r10d, ebp
0x48d1:	lea	ebp, [r13 + r10 + 0x2e1b2138]
0x48d9:	mov	r13d, esi
0x48dc:	mov	dword ptr [rsp + 0x3c], r10d
0x48e1:	ror	r13d, 6
0x48e5:	add	ebp, ebx
0x48e7:	mov	ebx, r13d
0x48ea:	mov	r13d, esi
0x48ed:	ror	r13d, 0xb
0x48f1:	mov	r10d, r13d
0x48f4:	mov	r13d, esi
0x48f7:	rol	r13d, 7
0x48fb:	xor	r10d, ebx
0x48fe:	mov	ebx, r13d
0x4901:	mov	r13d, r11d
0x4904:	xor	ebx, r10d
0x4907:	ror	r13d, 2
0x490b:	add	ebx, ebp
0x490d:	mov	r10d, r13d
0x4910:	mov	r13d, r11d
0x4913:	add	ecx, ebx
0x4915:	ror	r13d, 0xd
0x4919:	rol	r12d, 0xd
0x491d:	mov	ebp, r13d
0x4920:	mov	r13d, r11d
0x4923:	xor	ebp, r10d
0x4926:	rol	r13d, 0xa
0x492a:	xor	ebp, r13d
0x492d:	mov	r13d, eax
0x4930:	or	r13d, r11d
0x4933:	mov	r10d, r13d
0x4936:	mov	r13d, eax
0x4939:	and	r13d, r11d
0x493c:	and	r10d, edx
0x493f:	or	r10d, r13d
0x4942:	mov	r13d, r15d
0x4945:	add	r10d, ebp
0x4948:	mov	ebp, r12d
0x494b:	mov	r12d, r8d
0x494e:	add	r10d, ebx
0x4951:	mov	ebx, r15d
0x4954:	ror	r12d, 7
0x4958:	rol	ebx, 0xf
0x495b:	shr	r13d, 0xa
0x495f:	mov	r15d, dword ptr [rsp + 8]
0x4964:	xor	ebp, ebx
0x4966:	mov	ebx, r8d
0x4969:	rol	ebx, 0xe
0x496c:	xor	ebp, r13d
0x496f:	xor	ebx, r12d
0x4972:	mov	r12d, r8d
0x4975:	shr	r12d, 3
0x4979:	xor	ebx, r12d
0x497c:	mov	r12d, r11d
0x497f:	add	r9d, ebx
0x4982:	add	r9d, dword ptr [rsp + 0x28]
0x4987:	mov	ebx, edi
0x4989:	xor	ebx, esi
0x498b:	and	ebx, ecx
0x498d:	xor	ebx, edi
0x498f:	add	r9d, ebp
0x4992:	mov	r13d, r9d
0x4995:	lea	ebp, [r14 + r9 + 0x4d2c6dfc]
0x499d:	mov	r9d, ecx
0x49a0:	ror	r9d, 6
0x49a4:	mov	r14d, dword ptr [rsp + 0xc]
0x49a9:	mov	dword ptr [rsp + 0x6c], r13d
0x49ae:	add	ebp, ebx
0x49b0:	mov	ebx, r9d
0x49b3:	mov	r9d, ecx
0x49b6:	ror	r9d, 0xb
0x49ba:	xor	r9d, ebx
0x49bd:	mov	ebx, ecx
0x49bf:	rol	ebx, 7
0x49c2:	xor	ebx, r9d
0x49c5:	mov	r9d, r10d
0x49c8:	add	ebx, ebp
0x49ca:	ror	r9d, 2
0x49ce:	and	r12d, r10d
0x49d1:	lea	ebp, [rdx + rbx]
0x49d4:	mov	edx, r10d
0x49d7:	ror	edx, 0xd


0x49da:	xor	edx, r9d
0x49dd:	mov	r9d, r10d
0x49e0:	rol	r9d, 0xa
0x49e4:	xor	edx, r9d
0x49e7:	mov	r9d, r11d
0x49ea:	or	r9d, r10d
0x49ed:	and	r9d, eax
0x49f0:	or	r9d, r12d
0x49f3:	mov	r12d, dword ptr [rsp + 0x3c]
0x49f8:	add	r9d, edx
0x49fb:	add	r9d, ebx
0x49fe:	mov	edx, r12d
0x4a01:	mov	ebx, r12d
0x4a04:	rol	ebx, 0xf
0x4a07:	rol	edx, 0xd
0x4a0a:	xor	edx, ebx
0x4a0c:	mov	ebx, r12d
0x4a0f:	mov	r12d, r15d
0x4a12:	shr	ebx, 0xa
0x4a15:	ror	r12d, 7
0x4a19:	xor	edx, ebx
0x4a1b:	mov	ebx, r15d
0x4a1e:	rol	ebx, 0xe
0x4a21:	xor	ebx, r12d
0x4a24:	mov	r12d, r15d
0x4a27:	shr	r12d, 3
0x4a2b:	xor	ebx, r12d
0x4a2e:	add	r8d, ebx
0x4a31:	add	r8d, dword ptr [rsp + 0x2c]
0x4a36:	mov	ebx, r10d
0x4a39:	add	r8d, edx
0x4a3c:	mov	edx, esi
0x4a3e:	xor	edx, ecx
0x4a40:	lea	edi, [rdi + r8 + 0x53380d13]
0x4a48:	mov	r12d, r8d
0x4a4b:	and	edx, ebp
0x4a4d:	mov	r8d, ebp
0x4a50:	mov	dword ptr [rsp + 0x70], r12d
0x4a55:	xor	edx, esi
0x4a57:	ror	r8d, 0xb
0x4a5b:	add	edi, edx
0x4a5d:	mov	edx, ebp
0x4a5f:	ror	edx, 6
0x4a62:	xor	r8d, edx
0x4a65:	mov	edx, ebp
0x4a67:	rol	edx, 7
0x4a6a:	and	ebx, r9d
0x4a6d:	xor	edx, r8d
0x4a70:	mov	r8d, r9d
0x4a73:	add	edx, edi
0x4a75:	mov	edi, r9d
0x4a78:	ror	r8d, 2
0x4a7c:	ror	edi, 0xd
0x4a7f:	add	eax, edx
0x4a81:	xor	edi, r8d
0x4a84:	mov	r8d, r9d
0x4a87:	rol	r8d, 0xa
0x4a8b:	xor	edi, r8d
0x4a8e:	mov	r8d, r10d
0x4a91:	or	r8d, r9d
0x4a94:	and	r8d, r11d
0x4a97:	or	r8d, ebx
0x4a9a:	mov	ebx, r14d
0x4a9d:	add	r8d, edi
0x4aa0:	mov	edi, r13d
0x4aa3:	ror	ebx, 7
0x4aa6:	add	r8d, edx
0x4aa9:	mov	edx, r13d
0x4aac:	rol	edi, 0xd
0x4aaf:	rol	edx, 0xf
0x4ab2:	xor	edi, edx
0x4ab4:	mov	edx, r13d
0x4ab7:	shr	edx, 0xa
0x4aba:	xor	edi, edx
0x4abc:	mov	edx, r14d
0x4abf:	rol	edx, 0xe
0x4ac2:	xor	edx, ebx
0x4ac4:	mov	ebx, r14d
0x4ac7:	shr	ebx, 3
0x4aca:	xor	edx, ebx
0x4acc:	add	edx, r15d
0x4acf:	add	edx, dword ptr [rsp + 0x30]
0x4ad3:	add	edi, edx
0x4ad5:	mov	edx, ecx
0x4ad7:	xor	edx, ebp
0x4ad9:	lea	esi, [rsi + rdi + 0x650a7354]
0x4ae0:	mov	r13d, edi
0x4ae3:	and	edx, eax
0x4ae5:	mov	edi, eax
0x4ae7:	xor	edx, ecx
0x4ae9:	add	esi, edx
0x4aeb:	ror	edi, 6
0x4aee:	mov	edx, edi
0x4af0:	mov	edi, eax
0x4af2:	ror	edi, 0xb
0x4af5:	mov	ebx, edi
0x4af7:	mov	edi, eax
0x4af9:	rol	edi, 7
0x4afc:	xor	ebx, edx


0x4afe:	mov	edx, edi
0x4b00:	mov	edi, r8d
0x4b03:	xor	edx, ebx
0x4b05:	rol	edi, 0xa
0x4b08:	add	edx, esi
0x4b0a:	mov	esi, r8d
0x4b0d:	ror	esi, 2
0x4b10:	add	r11d, edx
0x4b13:	mov	ebx, esi
0x4b15:	mov	esi, r8d
0x4b18:	ror	esi, 0xd
0x4b1b:	xor	esi, ebx
0x4b1d:	xor	esi, edi
0x4b1f:	mov	edi, r9d
0x4b22:	or	edi, r8d
0x4b25:	mov	ebx, edi
0x4b27:	mov	edi, r9d
0x4b2a:	and	edi, r8d
0x4b2d:	and	ebx, r10d
0x4b30:	or	ebx, edi
0x4b32:	mov	edi, r12d
0x4b35:	add	ebx, esi
0x4b37:	rol	edi, 0xf
0x4b3a:	add	ebx, edx
0x4b3c:	mov	edx, edi
0x4b3e:	mov	edi, r12d
0x4b41:	rol	edi, 0xd
0x4b44:	xor	edi, edx
0x4b46:	mov	edx, r12d
0x4b49:	mov	r12d, dword ptr [rsp + 0x10]
0x4b4e:	shr	edx, 0xa
0x4b51:	xor	edi, edx
0x4b53:	mov	esi, r12d
0x4b56:	mov	edx, r12d
0x4b59:	ror	esi, 7
0x4b5c:	rol	edx, 0xe
0x4b5f:	xor	edx, esi
0x4b61:	mov	esi, r12d
0x4b64:	shr	esi, 3
0x4b67:	xor	edx, esi
0x4b69:	add	edx, r14d
0x4b6c:	add	edx, dword ptr [rsp + 0x34]
0x4b70:	add	edi, edx
0x4b72:	mov	edx, ebp
0x4b74:	xor	edx, eax
0x4b76:	lea	ecx, [rcx + rdi + 0x766a0abb]
0x4b7d:	mov	dword ptr [rsp + 0x14], edi
0x4b81:	and	edx, r11d
0x4b84:	mov	edi, r11d
0x4b87:	mov	dword ptr [rsp + 0x48], r13d
0x4b8c:	xor	edx, ebp
0x4b8e:	ror	edi, 0xb
0x4b91:	mov	r14d, dword ptr [rsp + 0x18]
0x4b96:	add	ecx, edx
0x4b98:	mov	edx, r11d
0x4b9b:	mov	r15d, edi
0x4b9e:	ror	edx, 6
0x4ba1:	mov	edi, ebx
0x4ba3:	xor	r15d, edx
0x4ba6:	mov	edx, r11d
0x4ba9:	rol	edi, 0xa
0x4bac:	rol	edx, 7
0x4baf:	mov	esi, r14d
0x4bb2:	xor	edx, r15d
0x4bb5:	rol	esi, 0xe
0x4bb8:	add	edx, ecx
0x4bba:	mov	ecx, ebx
0x4bbc:	ror	ecx, 2
0x4bbf:	add	r10d, edx
0x4bc2:	mov	r15d, ecx
0x4bc5:	mov	ecx, ebx
0x4bc7:	ror	ecx, 0xd
0x4bca:	xor	ecx, r15d
0x4bcd:	xor	ecx, edi
0x4bcf:	mov	edi, r8d
0x4bd2:	or	edi, ebx
0x4bd4:	mov	r15d, edi
0x4bd7:	mov	edi, r8d
0x4bda:	and	edi, ebx
0x4bdc:	and	r15d, r9d
0x4bdf:	or	r15d, edi
0x4be2:	mov	edi, r10d
0x4be5:	add	r15d, ecx
0x4be8:	mov	ecx, r13d
0x4beb:	add	r15d, edx
0x4bee:	mov	edx, r13d
0x4bf1:	rol	ecx, 0xf
0x4bf4:	rol	edx, 0xd
0x4bf7:	xor	edx, ecx
0x4bf9:	mov	ecx, r13d
0x4bfc:	shr	ecx, 0xa
0x4bff:	xor	edx, ecx
0x4c01:	mov	ecx, r14d
0x4c04:	ror	ecx, 7
0x4c07:	xor	esi, ecx
0x4c09:	mov	ecx, r14d
0x4c0c:	shr	ecx, 3
0x4c0f:	xor	esi, ecx
0x4c11:	add	esi, r12d


0x4c14:	add	esi, dword ptr [rsp + 0x38]
0x4c18:	ror	edi, 0xb
0x4c1b:	lea	ecx, [rdx + rsi]
0x4c1e:	mov	edx, eax
0x4c20:	mov	esi, ebx
0x4c22:	xor	edx, r11d
0x4c25:	and	esi, r15d
0x4c28:	mov	r12d, ecx
0x4c2b:	and	edx, r10d
0x4c2e:	lea	ecx, [rbp + rcx - 0x7e3d36d2]
0x4c35:	xor	edx, eax
0x4c37:	mov	ebp, dword ptr [rsp + 0x1c]
0x4c3b:	mov	dword ptr [rsp + 0x1c], r12d
0x4c40:	add	ecx, edx
0x4c42:	mov	edx, r10d
0x4c45:	ror	edx, 6
0x4c48:	xor	edi, edx
0x4c4a:	mov	edx, r10d
0x4c4d:	rol	edx, 7
0x4c50:	xor	edx, edi
0x4c52:	mov	edi, r15d
0x4c55:	add	edx, ecx
0x4c57:	mov	ecx, r15d
0x4c5a:	ror	edi, 2
0x4c5d:	ror	ecx, 0xd
0x4c60:	add	r9d, edx
0x4c63:	xor	ecx, edi
0x4c65:	mov	edi, r15d
0x4c68:	rol	edi, 0xa
0x4c6b:	xor	ecx, edi
0x4c6d:	mov	edi, ebx
0x4c6f:	or	edi, r15d
0x4c72:	and	edi, r8d
0x4c75:	or	edi, esi
0x4c77:	mov	esi, dword ptr [rsp + 0x14]
0x4c7b:	add	edi, ecx
0x4c7d:	add	edi, edx
0x4c7f:	mov	ecx, esi
0x4c81:	mov	edx, esi
0x4c83:	rol	ecx, 0xd
0x4c86:	rol	edx, 0xf
0x4c89:	mov	r13d, ecx
0x4c8c:	xor	r13d, edx
0x4c8f:	mov	edx, esi
0x4c91:	mov	esi, ebp
0x4c93:	shr	edx, 0xa
0x4c96:	rol	esi, 0xe
0x4c99:	xor	r13d, edx
0x4c9c:	mov	edx, ebp
0x4c9e:	ror	edx, 7
0x4ca1:	xor	esi, edx
0x4ca3:	mov	edx, ebp
0x4ca5:	shr	edx, 3
0x4ca8:	xor	esi, edx
0x4caa:	mov	edx, r11d
0x4cad:	add	esi, r14d
0x4cb0:	add	esi, dword ptr [rsp + 0x68]
0x4cb4:	xor	edx, r10d
0x4cb7:	and	edx, r9d
0x4cba:	mov	r14d, dword ptr [rsp + 0x20]
0x4cbf:	xor	edx, r11d
0x4cc2:	lea	ecx, [r13 + rsi]
0x4cc7:	mov	esi, r9d
0x4cca:	mov	r13d, r15d
0x4ccd:	ror	esi, 0xb
0x4cd0:	and	r13d, edi
0x4cd3:	lea	eax, [rax + rcx - 0x6d8dd37b]
0x4cda:	mov	dword ptr [rsp + 8], ecx
0x4cde:	mov	ecx, r14d
0x4ce1:	rol	ecx, 0xe
0x4ce4:	add	edx, eax
0x4ce6:	mov	eax, r9d
0x4ce9:	ror	eax, 6
0x4cec:	xor	esi, eax
0x4cee:	mov	eax, r9d
0x4cf1:	rol	eax, 7
0x4cf4:	xor	eax, esi
0x4cf6:	mov	esi, edi
0x4cf8:	add	eax, edx
0x4cfa:	mov	edx, edi
0x4cfc:	ror	esi, 2
0x4cff:	ror	edx, 0xd
0x4d02:	add	r8d, eax
0x4d05:	xor	edx, esi
0x4d07:	mov	esi, edi
0x4d09:	rol	esi, 0xa
0x4d0c:	xor	edx, esi
0x4d0e:	mov	esi, r15d
0x4d11:	or	esi, edi
0x4d13:	and	esi, ebx
0x4d15:	or	esi, r13d
0x4d18:	mov	r13d, r12d
0x4d1b:	add	esi, edx
0x4d1d:	rol	r13d, 0xd
0x4d21:	add	esi, eax
0x4d23:	mov	eax, r12d
0x4d26:	rol	eax, 0xf
0x4d29:	xor	r13d, eax
0x4d2c:	mov	eax, r12d


0x4d2f:	mov	r12d, r10d
0x4d32:	shr	eax, 0xa
0x4d35:	xor	r13d, eax
0x4d38:	mov	eax, r14d
0x4d3b:	ror	eax, 7
0x4d3e:	xor	ecx, eax
0x4d40:	mov	eax, r14d
0x4d43:	xor	r12d, r9d
0x4d46:	shr	eax, 3
0x4d49:	xor	ecx, eax
0x4d4b:	mov	eax, r12d
0x4d4e:	mov	r12d, r8d
0x4d51:	add	ecx, ebp
0x4d53:	add	ecx, dword ptr [rsp + 0x3c]
0x4d57:	and	eax, r8d
0x4d5a:	xor	eax, r10d
0x4d5d:	rol	r12d, 7
0x4d61:	mov	ebp, dword ptr [rsp + 8]
0x4d65:	add	r13d, ecx
0x4d68:	mov	ecx, esi
0x4d6a:	lea	edx, [r11 + r13 - 0x5d40175f]
0x4d72:	mov	r11d, r8d
0x4d75:	mov	dword ptr [rsp + 0x20], r13d
0x4d7a:	ror	r11d, 6
0x4d7e:	add	edx, eax
0x4d80:	mov	eax, r11d
0x4d83:	mov	r11d, r8d
0x4d86:	ror	r11d, 0xb
0x4d8a:	xor	r11d, eax
0x4d8d:	mov	eax, r12d
0x4d90:	mov	r12d, edi
0x4d93:	xor	eax, r11d
0x4d96:	mov	r11d, esi
0x4d99:	and	r12d, esi
0x4d9c:	add	eax, edx
0x4d9e:	mov	edx, esi
0x4da0:	ror	r11d, 2
0x4da4:	ror	edx, 0xd
0x4da7:	add	ebx, eax
0x4da9:	xor	edx, r11d
0x4dac:	mov	r11d, esi
0x4daf:	rol	r11d, 0xa
0x4db3:	xor	edx, r11d
0x4db6:	mov	r11d, edi
0x4db9:	or	r11d, esi
0x4dbc:	and	r11d, r15d
0x4dbf:	or	r11d, r12d
0x4dc2:	mov	r12d, ebp
0x4dc5:	add	r11d, edx
0x4dc8:	rol	r12d, 0xd
0x4dcc:	add	r11d, eax
0x4dcf:	mov	eax, ebp
0x4dd1:	rol	eax, 0xf
0x4dd4:	xor	r12d, eax
0x4dd7:	mov	eax, ebp
0x4dd9:	mov	ebp, dword ptr [rsp + 0x24]
0x4ddd:	shr	eax, 0xa
0x4de0:	xor	r12d, eax
0x4de3:	and	ecx, r11d
0x4de6:	mov	eax, ebp
0x4de8:	mov	edx, ebp
0x4dea:	ror	eax, 7
0x4ded:	rol	edx, 0xe
0x4df0:	xor	edx, eax
0x4df2:	mov	eax, ebp
0x4df4:	shr	eax, 3
0x4df7:	xor	edx, eax
0x4df9:	add	edx, r14d
0x4dfc:	add	edx, dword ptr [rsp + 0x6c]
0x4e00:	mov	r14d, dword ptr [rsp + 0x28]
0x4e05:	add	edx, r12d
0x4e08:	mov	r12d, r9d
0x4e0b:	xor	r12d, r8d
0x4e0e:	mov	dword ptr [rsp + 0xc], edx
0x4e12:	lea	edx, [r10 + rdx - 0x57e599b5]
0x4e1a:	mov	eax, r12d
0x4e1d:	mov	r10d, ebx
0x4e20:	mov	r12d, ebx
0x4e23:	and	eax, ebx
0x4e25:	ror	r10d, 6
0x4e29:	rol	r12d, 7
0x4e2d:	xor	eax, r9d
0x4e30:	add	edx, eax
0x4e32:	mov	eax, r10d
0x4e35:	mov	r10d, ebx
0x4e38:	ror	r10d, 0xb
0x4e3c:	xor	r10d, eax
0x4e3f:	mov	eax, r12d
0x4e42:	mov	r12d, r11d
0x4e45:	xor	eax, r10d
0x4e48:	ror	r12d, 0xd
0x4e4c:	mov	r10d, r11d
0x4e4f:	add	eax, edx
0x4e51:	ror	r10d, 2
0x4e55:	mov	edx, r12d
0x4e58:	xor	edx, r10d
0x4e5b:	mov	r10d, r11d
0x4e5e:	mov	r12d, r13d
0x4e61:	rol	r10d, 0xa


0x4e65:	add	r15d, eax
0x4e68:	xor	edx, r10d
0x4e6b:	mov	r10d, esi
0x4e6e:	or	r10d, r11d
0x4e71:	and	r10d, edi
0x4e74:	or	r10d, ecx
0x4e77:	mov	ecx, r11d
0x4e7a:	add	r10d, edx
0x4e7d:	mov	edx, r13d
0x4e80:	add	r10d, eax
0x4e83:	rol	edx, 0xf
0x4e86:	rol	r12d, 0xd
0x4e8a:	xor	r12d, edx
0x4e8d:	mov	edx, r13d
0x4e90:	mov	eax, r14d
0x4e93:	shr	edx, 0xa
0x4e96:	rol	eax, 0xe
0x4e99:	and	ecx, r10d
0x4e9c:	xor	r12d, edx
0x4e9f:	mov	edx, r14d
0x4ea2:	ror	edx, 7
0x4ea5:	xor	eax, edx
0x4ea7:	mov	edx, r14d
0x4eaa:	shr	edx, 3
0x4ead:	xor	eax, edx
0x4eaf:	add	eax, ebp
0x4eb1:	add	eax, dword ptr [rsp + 0x70]
0x4eb5:	lea	ebp, [r12 + rax]
0x4eb9:	mov	r12d, r8d
0x4ebc:	xor	r12d, ebx
0x4ebf:	mov	eax, r12d
0x4ec2:	lea	edx, [r9 + rbp - 0x3db47490]
0x4eca:	mov	r9d, r15d
0x4ecd:	and	eax, r15d
0x4ed0:	ror	r9d, 6
0x4ed4:	mov	r13d, ebp
0x4ed7:	xor	eax, r8d
0x4eda:	mov	ebp, r15d
0x4edd:	mov	dword ptr [rsp + 0x24], r13d
0x4ee2:	add	edx, eax
0x4ee4:	mov	eax, r9d
0x4ee7:	mov	r9d, r15d
0x4eea:	rol	ebp, 7
0x4eed:	ror	r9d, 0xb
0x4ef1:	xor	r9d, eax
0x4ef4:	mov	eax, ebp
0x4ef6:	xor	eax, r9d
0x4ef9:	mov	r9d, r10d
0x4efc:	add	eax, edx
0x4efe:	ror	r9d, 2
0x4f02:	lea	ebp, [rdi + rax]
0x4f05:	mov	edi, r10d
0x4f08:	ror	edi, 0xd
0x4f0b:	mov	edx, edi
0x4f0d:	mov	edi, dword ptr [rsp + 0xc]
0x4f11:	xor	edx, r9d
0x4f14:	mov	r9d, r10d
0x4f17:	rol	r9d, 0xa
0x4f1b:	xor	edx, r9d
0x4f1e:	mov	r9d, r11d
0x4f21:	mov	r12d, edi
0x4f24:	or	r9d, r10d
0x4f27:	and	r9d, esi
0x4f2a:	or	r9d, ecx
0x4f2d:	mov	ecx, ebx
0x4f2f:	add	r9d, edx
0x4f32:	mov	edx, edi
0x4f34:	add	r9d, eax
0x4f37:	rol	edx, 0xf
0x4f3a:	rol	r12d, 0xd
0x4f3e:	mov	eax, r12d
0x4f41:	mov	r12d, dword ptr [rsp + 0x2c]
0x4f46:	shr	edi, 0xa
0x4f49:	xor	eax, edx
0x4f4b:	xor	ecx, r15d
0x4f4e:	xor	eax, edi
0x4f50:	and	ecx, ebp
0x4f52:	mov	edx, r12d
0x4f55:	mov	edi, r12d
0x4f58:	xor	ecx, ebx
0x4f5a:	ror	edx, 7
0x4f5d:	rol	edi, 0xe
0x4f60:	xor	edi, edx
0x4f62:	mov	edx, r12d
0x4f65:	shr	edx, 3
0x4f68:	xor	edi, edx
0x4f6a:	add	edi, r14d
0x4f6d:	add	edi, dword ptr [rsp + 0x48]
0x4f71:	lea	r14d, [rax + rdi]
0x4f75:	mov	edi, r13d
0x4f78:	lea	eax, [r8 + r14 - 0x3893ae5d]
0x4f80:	mov	r8d, ebp
0x4f83:	mov	dword ptr [rsp + 0x10], r14d
0x4f88:	ror	r8d, 6
0x4f8c:	mov	r14d, r13d
0x4f8f:	add	eax, ecx
0x4f91:	mov	ecx, r8d
0x4f94:	mov	r8d, ebp
0x4f97:	ror	r8d, 0xb


0x4f9b:	mov	edx, r8d
0x4f9e:	mov	r8d, ebp
0x4fa1:	rol	r8d, 7
0x4fa5:	xor	edx, ecx
0x4fa7:	mov	ecx, r8d
0x4faa:	mov	r8d, r9d
0x4fad:	ror	r8d, 2
0x4fb1:	xor	ecx, edx
0x4fb3:	mov	edx, r8d
0x4fb6:	mov	r8d, r9d
0x4fb9:	add	ecx, eax
0x4fbb:	ror	r8d, 0xd
0x4fbf:	lea	eax, [rsi + rcx]
0x4fc2:	mov	esi, r8d
0x4fc5:	mov	r8d, r9d
0x4fc8:	xor	esi, edx
0x4fca:	rol	r8d, 0xa
0x4fce:	xor	esi, r8d
0x4fd1:	mov	r8d, r10d
0x4fd4:	or	r8d, r9d
0x4fd7:	mov	edx, r8d
0x4fda:	mov	r8d, r10d
0x4fdd:	and	r8d, r9d
0x4fe0:	and	edx, r11d
0x4fe3:	or	edx, r8d
0x4fe6:	mov	r8d, r13d
0x4fe9:	add	edx, esi
0x4feb:	add	edx, ecx
0x4fed:	rol	r14d, 0xf
0x4ff1:	rol	edi, 0xd
0x4ff4:	xor	edi, r14d
0x4ff7:	mov	r14d, dword ptr [rsp + 0x30]
0x4ffc:	shr	r8d, 0xa
0x5000:	xor	edi, r8d
0x5003:	mov	ecx, r14d
0x5006:	mov	esi, r14d
0x5009:	ror	ecx, 7
0x500c:	rol	esi, 0xe
0x500f:	xor	esi, ecx
0x5011:	mov	ecx, r14d
0x5014:	shr	ecx, 3
0x5017:	xor	esi, ecx
0x5019:	mov	ecx, eax
0x501b:	add	esi, r12d
0x501e:	add	esi, dword ptr [rsp + 0x14]
0x5022:	ror	ecx, 0xb
0x5025:	mov	r12d, dword ptr [rsp + 0x10]
0x502a:	add	esi, edi
0x502c:	mov	edi, esi
0x502e:	mov	esi, r15d
0x5031:	xor	esi, ebp
0x5033:	mov	dword ptr [rsp + 0x18], edi
0x5037:	lea	edi, [rbx + rdi - 0x2e6d17e7]
0x503e:	and	esi, eax
0x5040:	mov	ebx, dword ptr [rsp + 0x34]
0x5044:	xor	esi, r15d
0x5047:	add	edi, esi
0x5049:	mov	esi, eax
0x504b:	ror	esi, 6
0x504e:	xor	ecx, esi
0x5050:	mov	esi, eax
0x5052:	rol	esi, 7
0x5055:	xor	esi, ecx
0x5057:	add	esi, edi
0x5059:	lea	r8d, [r11 + rsi]
0x505d:	mov	r11d, edx
0x5060:	ror	r11d, 2
0x5064:	mov	ecx, r11d
0x5067:	mov	r11d, edx
0x506a:	ror	r11d, 0xd
0x506e:	mov	edi, r11d
0x5071:	mov	r11d, edx
0x5074:	xor	edi, ecx
0x5076:	rol	r11d, 0xa
0x507a:	xor	edi, r11d
0x507d:	mov	r11d, r9d
0x5080:	or	r11d, edx
0x5083:	mov	ecx, r11d
0x5086:	mov	r11d, r9d
0x5089:	and	r11d, edx
0x508c:	and	ecx, r10d
0x508f:	or	ecx, r11d
0x5092:	mov	r11d, ebx
0x5095:	add	ecx, edi
0x5097:	mov	edi, r12d
0x509a:	ror	r11d, 7
0x509e:	add	ecx, esi
0x50a0:	mov	esi, r12d
0x50a3:	rol	edi, 0xd
0x50a6:	rol	esi, 0xf
0x50a9:	xor	edi, esi
0x50ab:	mov	esi, r12d
0x50ae:	shr	esi, 0xa
0x50b1:	xor	edi, esi
0x50b3:	mov	esi, ebx
0x50b5:	rol	esi, 0xe
0x50b8:	xor	esi, r11d
0x50bb:	mov	r11d, ebx
0x50be:	shr	r11d, 3


0x50c2:	xor	esi, r11d
0x50c5:	add	esi, r14d
0x50c8:	add	esi, dword ptr [rsp + 0x1c]
0x50cc:	lea	r14d, [rdi + rsi]
0x50d0:	mov	esi, ebp
0x50d2:	xor	esi, eax
0x50d4:	and	esi, r8d
0x50d7:	lea	edi, [r15 + r14 - 0x2966f9dc]
0x50df:	mov	r12d, r14d
0x50e2:	xor	esi, ebp
0x50e4:	mov	r14d, r8d
0x50e7:	mov	r15d, dword ptr [rsp + 0x38]
0x50ec:	add	edi, esi
0x50ee:	ror	r14d, 0xb
0x50f2:	mov	esi, r8d
0x50f5:	ror	esi, 6
0x50f8:	mov	r13d, r14d
0x50fb:	mov	r14d, ecx
0x50fe:	xor	r13d, esi
0x5101:	mov	esi, r8d
0x5104:	ror	r14d, 2
0x5108:	rol	esi, 7
0x510b:	mov	dword ptr [rsp + 0x28], r12d
0x5110:	xor	esi, r13d
0x5113:	mov	r13d, r14d
0x5116:	mov	r14d, ecx
0x5119:	ror	r14d, 0xd
0x511d:	add	esi, edi
0x511f:	mov	edi, r14d
0x5122:	mov	r14d, ecx
0x5125:	lea	r11d, [r10 + rsi]
0x5129:	xor	edi, r13d
0x512c:	rol	r14d, 0xa
0x5130:	mov	r10d, edx
0x5133:	xor	edi, r14d
0x5136:	mov	r14d, edx
0x5139:	or	r14d, ecx
0x513c:	mov	r13d, r14d
0x513f:	and	r13d, r9d
0x5142:	and	r10d, ecx
0x5145:	or	r13d, r10d
0x5148:	mov	r10d, dword ptr [rsp + 0x18]
0x514d:	add	r13d, edi
0x5150:	add	r13d, esi
0x5153:	mov	edi, r10d
0x5156:	mov	esi, r10d
0x5159:	rol	esi, 0xf
0x515c:	rol	edi, 0xd
0x515f:	xor	edi, esi
0x5161:	mov	esi, r10d
0x5164:	mov	r10d, r15d
0x5167:	shr	esi, 0xa
0x516a:	ror	r10d, 7
0x516e:	xor	edi, esi
0x5170:	mov	esi, r15d
0x5173:	rol	esi, 0xe
0x5176:	xor	esi, r10d
0x5179:	mov	r10d, r15d
0x517c:	shr	r10d, 3
0x5180:	xor	esi, r10d
0x5183:	add	esi, ebx
0x5185:	add	esi, dword ptr [rsp + 8]
0x5189:	lea	r14d, [rdi + rsi]
0x518d:	mov	edi, eax
0x518f:	xor	edi, r8d
0x5192:	and	edi, r11d
0x5195:	lea	esi, [rbp + r14 - 0xbf1ca7b]
0x519d:	mov	ebp, r11d
0x51a0:	xor	edi, eax
0x51a2:	ror	ebp, 6
0x51a5:	mov	dword ptr [rsp + 0x2c], r14d
0x51aa:	add	esi, edi
0x51ac:	mov	edi, ebp
0x51ae:	mov	ebp, r11d
0x51b1:	ror	ebp, 0xb
0x51b4:	mov	ebx, dword ptr [rsp + 0x68]
0x51b8:	mov	r14d, ebp
0x51bb:	mov	ebp, r11d
0x51be:	rol	ebp, 7
0x51c1:	xor	r14d, edi
0x51c4:	mov	edi, ebp
0x51c6:	mov	ebp, r13d
0x51c9:	mov	r10d, ebx
0x51cc:	xor	edi, r14d
0x51cf:	ror	ebp, 2
0x51d2:	add	edi, esi
0x51d4:	lea	esi, [r9 + rdi]
0x51d8:	mov	r9d, r13d
0x51db:	ror	r9d, 0xd
0x51df:	xor	r9d, ebp
0x51e2:	mov	ebp, r13d
0x51e5:	rol	ebp, 0xa
0x51e8:	xor	r9d, ebp
0x51eb:	mov	ebp, ecx
0x51ed:	or	ebp, r13d
0x51f0:	mov	r14d, ebp
0x51f3:	mov	ebp, ecx
0x51f5:	and	r14d, edx
0x51f8:	and	ebp, r13d


0x51fb:	ror	r10d, 7
0x51ff:	or	r14d, ebp
0x5202:	mov	ebp, r12d
0x5205:	add	r14d, r9d
0x5208:	mov	r9d, r12d
0x520b:	shr	ebp, 0xa
0x520e:	rol	r9d, 0xf
0x5212:	add	r14d, edi
0x5215:	mov	edi, r9d
0x5218:	mov	r9d, r12d
0x521b:	rol	r9d, 0xd
0x521f:	xor	r9d, edi
0x5222:	mov	edi, ebx
0x5224:	rol	edi, 0xe
0x5227:	xor	r9d, ebp
0x522a:	xor	edi, r10d
0x522d:	mov	r10d, ebx
0x5230:	shr	r10d, 3
0x5234:	xor	edi, r10d
0x5237:	mov	r10d, esi
0x523a:	add	edi, r15d
0x523d:	add	edi, dword ptr [rsp + 0x20]
0x5241:	ror	r10d, 0xb
0x5245:	mov	r15d, dword ptr [rsp + 0x3c]
0x524a:	add	r9d, edi
0x524d:	mov	edi, r8d
0x5250:	xor	edi, r11d
0x5253:	mov	ebp, r9d
0x5256:	lea	r9d, [rax + r9 + 0x106aa070]
0x525e:	and	edi, esi
0x5260:	mov	eax, r10d
0x5263:	mov	r10d, r14d
0x5266:	xor	edi, r8d
0x5269:	mov	r12d, ebp
0x526c:	mov	dword ptr [rsp + 0x34], ebp
0x5270:	add	r9d, edi
0x5273:	mov	edi, esi
0x5275:	ror	edi, 6
0x5278:	xor	eax, edi
0x527a:	mov	edi, esi
0x527c:	rol	edi, 7
0x527f:	xor	edi, eax
0x5281:	add	edi, r9d
0x5284:	mov	r9d, r14d
0x5287:	ror	r9d, 2
0x528b:	add	edx, edi
0x528d:	mov	eax, r9d
0x5290:	mov	r9d, r14d
0x5293:	ror	r9d, 0xd
0x5297:	xor	r9d, eax
0x529a:	rol	r10d, 0xa
0x529e:	xor	r9d, r10d
0x52a1:	mov	r10d, r13d
0x52a4:	or	r10d, r14d
0x52a7:	mov	eax, r10d
0x52aa:	mov	r10d, r13d
0x52ad:	and	r10d, r14d
0x52b0:	and	eax, ecx
0x52b2:	or	eax, r10d
0x52b5:	mov	r10d, dword ptr [rsp + 0x2c]
0x52ba:	add	eax, r9d
0x52bd:	add	eax, edi
0x52bf:	mov	r9d, r10d
0x52c2:	mov	edi, r10d
0x52c5:	rol	edi, 0xf
0x52c8:	rol	r9d, 0xd
0x52cc:	xor	r9d, edi
0x52cf:	mov	edi, r10d
0x52d2:	mov	r10d, r15d
0x52d5:	shr	edi, 0xa
0x52d8:	ror	r10d, 7
0x52dc:	xor	r9d, edi
0x52df:	mov	edi, r15d
0x52e2:	rol	edi, 0xe
0x52e5:	xor	edi, r10d
0x52e8:	mov	r10d, r15d
0x52eb:	shr	r10d, 3
0x52ef:	xor	edi, r10d
0x52f2:	add	edi, ebx
0x52f4:	add	edi, dword ptr [rsp + 0xc]
0x52f8:	mov	ebx, edx
0x52fa:	ror	ebx, 0xb
0x52fd:	mov	r10d, ebx
0x5300:	mov	ebx, eax
0x5302:	add	r9d, edi
0x5305:	mov	edi, r11d
0x5308:	xor	edi, esi
0x530a:	lea	r8d, [r8 + r9 + 0x19a4c116]
0x5312:	mov	dword ptr [rsp + 0x30], r9d
0x5317:	and	edi, edx
0x5319:	mov	dword ptr [rsp + 0x90], r9d
0x5321:	mov	r9d, r14d
0x5324:	xor	edi, r11d
0x5327:	add	r8d, edi
0x532a:	mov	edi, edx
0x532c:	ror	edi, 6
0x532f:	xor	r10d, edi
0x5332:	mov	edi, edx
0x5334:	rol	edi, 7


0x5337:	xor	edi, r10d
0x533a:	add	edi, r8d
0x533d:	add	ecx, edi
0x533f:	ror	ebx, 2
0x5342:	and	r9d, eax
0x5345:	mov	r10d, ebx
0x5348:	mov	ebx, eax
0x534a:	rol	r12d, 0xd
0x534e:	ror	ebx, 0xd
0x5351:	mov	r8d, ebx
0x5354:	mov	ebx, eax
0x5356:	xor	r8d, r10d
0x5359:	rol	ebx, 0xa
0x535c:	xor	r8d, ebx
0x535f:	mov	ebx, r14d
0x5362:	or	ebx, eax
0x5364:	mov	r10d, ebx
0x5367:	mov	ebx, dword ptr [rsp + 0x6c]
0x536b:	and	r10d, r13d
0x536e:	or	r10d, r9d
0x5371:	mov	r9d, ebp
0x5374:	add	r10d, r8d
0x5377:	mov	r8d, ebx
0x537a:	shr	r9d, 0xa
0x537e:	add	r10d, edi
0x5381:	mov	edi, ebp
0x5383:	ror	r8d, 7
0x5387:	rol	edi, 0xf
0x538a:	xor	r12d, edi
0x538d:	mov	edi, ebx
0x538f:	rol	edi, 0xe
0x5392:	xor	r12d, r9d
0x5395:	xor	edi, r8d
0x5398:	mov	r8d, ebx
0x539b:	shr	r8d, 3
0x539f:	xor	edi, r8d
0x53a2:	add	edi, r15d
0x53a5:	add	edi, dword ptr [rsp + 0x24]
0x53a9:	mov	r15d, dword ptr [rsp + 0x70]
0x53ae:	add	r12d, edi
0x53b1:	mov	edi, esi
0x53b3:	xor	edi, edx
0x53b5:	lea	r8d, [r11 + r12 + 0x1e376c08]
0x53bd:	mov	r11d, ecx
0x53c0:	and	edi, ecx
0x53c2:	ror	r11d, 0xb
0x53c6:	mov	dword ptr [rsp + 0x94], r12d
0x53ce:	xor	edi, esi
0x53d0:	mov	r9d, r11d
0x53d3:	mov	r11d, r10d
0x53d6:	add	r8d, edi
0x53d9:	mov	edi, ecx
0x53db:	ror	edi, 6
0x53de:	xor	r9d, edi
0x53e1:	mov	edi, ecx
0x53e3:	rol	edi, 7
0x53e6:	xor	edi, r9d
0x53e9:	rol	r11d, 0xa
0x53ed:	add	edi, r8d
0x53f0:	mov	r8d, r10d
0x53f3:	ror	r8d, 2
0x53f7:	add	r13d, edi
0x53fa:	mov	r9d, r8d
0x53fd:	mov	r8d, r10d
0x5400:	ror	r8d, 0xd
0x5404:	xor	r8d, r9d
0x5407:	xor	r8d, r11d
0x540a:	mov	r11d, eax
0x540d:	or	r11d, r10d
0x5410:	mov	r9d, r11d
0x5413:	mov	r11d, eax
0x5416:	and	r11d, r10d
0x5419:	and	r9d, r14d
0x541c:	or	r9d, r11d
0x541f:	mov	r11d, dword ptr [rsp + 0x30]
0x5424:	add	r9d, r8d
0x5427:	add	r9d, edi
0x542a:	mov	r8d, r11d
0x542d:	mov	edi, r11d
0x5430:	rol	r8d, 0xd
0x5434:	rol	edi, 0xf
0x5437:	mov	ebp, r8d
0x543a:	mov	r8d, r15d
0x543d:	xor	ebp, edi
0x543f:	mov	edi, r11d
0x5442:	ror	r8d, 7
0x5446:	shr	edi, 0xa
0x5449:	mov	r11d, dword ptr [rsp + 0x48]
0x544e:	xor	ebp, edi
0x5450:	mov	edi, r15d
0x5453:	rol	edi, 0xe
0x5456:	xor	edi, r8d
0x5459:	mov	r8d, r15d
0x545c:	shr	r8d, 3
0x5460:	xor	edi, r8d
0x5463:	add	edi, ebx
0x5465:	add	edi, dword ptr [rsp + 0x10]
0x5469:	mov	ebx, edx
0x546b:	xor	ebx, ecx


0x546d:	add	ebp, edi
0x546f:	mov	edi, ebx
0x5471:	mov	ebx, r13d
0x5474:	and	edi, r13d
0x5477:	lea	esi, [rsi + rbp + 0x2748774c]
0x547e:	mov	dword ptr [rsp + 0x98], ebp
0x5485:	xor	edi, edx
0x5487:	add	edi, esi
0x5489:	mov	esi, r13d
0x548c:	ror	esi, 6
0x548f:	ror	ebx, 0xb
0x5492:	mov	r8d, ebx
0x5495:	mov	ebx, r9d
0x5498:	xor	r8d, esi
0x549b:	mov	esi, r13d
0x549e:	ror	ebx, 2
0x54a1:	rol	esi, 7
0x54a4:	xor	esi, r8d
0x54a7:	mov	r8d, ebx
0x54aa:	mov	ebx, r9d
0x54ad:	ror	ebx, 0xd
0x54b0:	add	esi, edi
0x54b2:	mov	edi, ebx
0x54b4:	mov	ebx, r9d
0x54b7:	add	r14d, esi
0x54ba:	xor	edi, r8d
0x54bd:	rol	ebx, 0xa
0x54c0:	xor	edi, ebx
0x54c2:	mov	ebx, r10d
0x54c5:	or	ebx, r9d
0x54c8:	mov	r8d, ebx
0x54cb:	mov	ebx, r10d
0x54ce:	and	ebx, r9d
0x54d1:	and	r8d, eax
0x54d4:	or	r8d, ebx
0x54d7:	mov	ebx, r12d
0x54da:	add	r8d, edi
0x54dd:	rol	ebx, 0xd
0x54e0:	mov	edi, r11d
0x54e3:	add	r8d, esi
0x54e6:	mov	esi, r12d
0x54e9:	ror	edi, 7
0x54ec:	rol	esi, 0xf
0x54ef:	xor	ebx, esi
0x54f1:	mov	esi, r12d
0x54f4:	shr	esi, 0xa
0x54f7:	xor	ebx, esi
0x54f9:	mov	esi, r11d
0x54fc:	rol	esi, 0xe
0x54ff:	xor	esi, edi
0x5501:	mov	edi, r11d
0x5504:	shr	edi, 3
0x5507:	xor	esi, edi
0x5509:	add	esi, r15d
0x550c:	add	esi, dword ptr [rsp + 0x18]
0x5510:	mov	r15d, r14d
0x5513:	add	ebx, esi
0x5515:	mov	esi, ecx
0x5517:	xor	esi, r13d
0x551a:	lea	edx, [rdx + rbx + 0x34b0bcb5]
0x5521:	mov	dword ptr [rsp + 0x9c], ebx
0x5528:	and	esi, r14d
0x552b:	xor	esi, ecx
0x552d:	ror	r15d, 0xb
0x5531:	add	esi, edx
0x5533:	mov	edx, r14d
0x5536:	mov	edi, r15d
0x5539:	ror	edx, 6
0x553c:	mov	r15d, r8d
0x553f:	xor	edi, edx
0x5541:	mov	edx, r14d
0x5544:	rol	r15d, 0xa
0x5548:	rol	edx, 7
0x554b:	xor	edx, edi
0x554d:	add	edx, esi
0x554f:	mov	esi, r8d
0x5552:	ror	esi, 2
0x5555:	add	eax, edx
0x5557:	mov	edi, esi
0x5559:	mov	esi, r8d
0x555c:	ror	esi, 0xd
0x555f:	xor	esi, edi
0x5561:	xor	esi, r15d
0x5564:	mov	r15d, r9d
0x5567:	or	r15d, r8d
0x556a:	mov	edi, r15d
0x556d:	mov	r15d, r9d
0x5570:	and	r15d, r8d
0x5573:	and	edi, r10d
0x5576:	or	edi, r15d
0x5579:	mov	r15d, dword ptr [rsp + 0x14]
0x557e:	add	edi, esi
0x5580:	mov	esi, ebp
0x5582:	rol	esi, 0xf
0x5585:	add	edi, edx
0x5587:	mov	edx, esi
0x5589:	mov	esi, ebp
0x558b:	rol	esi, 0xd
0x558e:	mov	r11d, esi


0x5591:	mov	esi, ebp
0x5593:	xor	r11d, edx
0x5596:	shr	esi, 0xa
0x5599:	mov	edx, r15d
0x559c:	xor	r11d, esi
0x559f:	mov	esi, r15d
0x55a2:	rol	edx, 0xe
0x55a5:	ror	esi, 7
0x55a8:	xor	edx, esi
0x55aa:	mov	esi, r15d
0x55ad:	mov	r15d, r8d
0x55b0:	shr	esi, 3
0x55b3:	xor	edx, esi
0x55b5:	add	edx, dword ptr [rsp + 0x48]
0x55b9:	mov	esi, eax
0x55bb:	add	edx, dword ptr [rsp + 0x28]
0x55bf:	add	r11d, edx
0x55c2:	mov	edx, r13d
0x55c5:	ror	esi, 0xb
0x55c8:	xor	edx, r14d
0x55cb:	lea	ecx, [rcx + r11 + 0x391c0cb3]
0x55d3:	and	r15d, edi
0x55d6:	and	edx, eax
0x55d8:	mov	dword ptr [rsp + 0xa0], r11d
0x55e0:	xor	edx, r13d
0x55e3:	add	ecx, edx
0x55e5:	mov	edx, eax
0x55e7:	ror	edx, 6
0x55ea:	xor	esi, edx
0x55ec:	mov	edx, eax
0x55ee:	rol	edx, 7
0x55f1:	xor	edx, esi
0x55f3:	add	edx, ecx
0x55f5:	mov	ecx, edi
0x55f7:	ror	ecx, 2
0x55fa:	add	r10d, edx
0x55fd:	mov	esi, ecx
0x55ff:	mov	ecx, edi
0x5601:	ror	ecx, 0xd
0x5604:	xor	ecx, esi
0x5606:	mov	esi, edi
0x5608:	rol	esi, 0xa
0x560b:	xor	ecx, esi
0x560d:	mov	esi, r8d
0x5610:	or	esi, edi
0x5612:	and	esi, r9d
0x5615:	or	esi, r15d
0x5618:	add	esi, ecx
0x561a:	mov	ecx, ebx
0x561c:	rol	ecx, 0xf
0x561f:	add	esi, edx
0x5621:	mov	edx, ecx
0x5623:	mov	ecx, ebx
0x5625:	rol	ecx, 0xd
0x5628:	xor	ecx, edx
0x562a:	mov	edx, ebx
0x562c:	shr	edx, 0xa
0x562f:	xor	ecx, edx
0x5631:	mov	edx, dword ptr [rsp + 0x1c]
0x5635:	mov	r15d, edx
0x5638:	rol	edx, 0xe
0x563b:	ror	r15d, 7
0x563f:	xor	edx, r15d
0x5642:	mov	r15d, dword ptr [rsp + 0x1c]
0x5647:	shr	r15d, 3
0x564b:	xor	edx, r15d
0x564e:	add	edx, dword ptr [rsp + 0x14]
0x5652:	mov	r15d, edi
0x5655:	add	edx, dword ptr [rsp + 0x2c]
0x5659:	and	r15d, esi
0x565c:	add	ecx, edx
0x565e:	mov	edx, r14d
0x5661:	xor	edx, eax
0x5663:	lea	r13d, [r13 + rcx + 0x4ed8aa4a]
0x566b:	mov	dword ptr [rsp + 0xa4], ecx
0x5672:	and	edx, r10d
0x5675:	mov	dword ptr [rsp + 0x14], ecx
0x5679:	mov	ecx, r10d
0x567c:	xor	edx, r14d
0x567f:	ror	ecx, 0xb
0x5682:	add	r13d, edx
0x5685:	mov	edx, r10d
0x5688:	ror	edx, 6
0x568b:	xor	ecx, edx
0x568d:	mov	edx, r10d
0x5690:	rol	edx, 7
0x5693:	xor	edx, ecx
0x5695:	mov	ecx, esi
0x5697:	add	edx, r13d
0x569a:	mov	r13d, esi
0x569d:	ror	ecx, 2
0x56a0:	ror	r13d, 0xd
0x56a4:	add	r9d, edx
0x56a7:	xor	r13d, ecx
0x56aa:	mov	ecx, esi
0x56ac:	rol	ecx, 0xa
0x56af:	xor	r13d, ecx
0x56b2:	mov	ecx, edi
0x56b4:	or	ecx, esi


0x56b6:	and	ecx, r8d
0x56b9:	or	ecx, r15d
0x56bc:	add	ecx, r13d
0x56bf:	mov	r13d, r11d
0x56c2:	add	ecx, edx
0x56c4:	mov	edx, r11d
0x56c7:	rol	r13d, 0xd
0x56cb:	rol	edx, 0xf
0x56ce:	xor	r13d, edx
0x56d1:	mov	edx, r11d
0x56d4:	shr	edx, 0xa
0x56d7:	xor	r13d, edx
0x56da:	mov	edx, dword ptr [rsp + 8]
0x56de:	mov	r15d, edx
0x56e1:	ror	r15d, 7
0x56e5:	rol	edx, 0xe
0x56e8:	xor	edx, r15d
0x56eb:	mov	r15d, dword ptr [rsp + 8]
0x56f0:	shr	r15d, 3
0x56f4:	xor	edx, r15d
0x56f7:	add	edx, dword ptr [rsp + 0x1c]
0x56fb:	mov	r15d, eax
0x56fe:	add	edx, dword ptr [rsp + 0x34]
0x5702:	xor	r15d, r10d
0x5705:	add	edx, r13d
0x5708:	mov	r13d, r15d
0x570b:	mov	r15d, r9d
0x570e:	mov	dword ptr [rsp + 0xa8], edx
0x5715:	and	r13d, r9d
0x5718:	mov	dword ptr [rsp + 0x1c], edx
0x571c:	lea	r14d, [r14 + rdx + 0x5b9cca4f]
0x5724:	mov	edx, r9d
0x5727:	xor	r13d, eax
0x572a:	ror	edx, 6
0x572d:	rol	r15d, 7
0x5731:	add	r14d, r13d
0x5734:	mov	r13d, edx
0x5737:	mov	edx, r9d
0x573a:	ror	edx, 0xb
0x573d:	xor	edx, r13d
0x5740:	mov	r13d, r15d
0x5743:	mov	r15d, esi
0x5746:	xor	r13d, edx
0x5749:	mov	edx, ecx
0x574b:	and	r15d, ecx
0x574e:	add	r13d, r14d
0x5751:	mov	r14d, ecx
0x5754:	ror	edx, 2
0x5757:	ror	r14d, 0xd
0x575b:	add	r8d, r13d
0x575e:	xor	r14d, edx
0x5761:	mov	edx, ecx
0x5763:	rol	edx, 0xa
0x5766:	xor	r14d, edx
0x5769:	mov	edx, esi
0x576b:	or	edx, ecx
0x576d:	and	edx, edi
0x576f:	or	edx, r15d
0x5772:	add	edx, r14d
0x5775:	mov	r14d, dword ptr [rsp + 0x14]
0x577a:	add	edx, r13d
0x577d:	mov	r15d, r14d
0x5780:	rol	r15d, 0xf
0x5784:	mov	r13d, r15d
0x5787:	mov	r15d, r14d
0x578a:	rol	r14d, 0xd
0x578e:	xor	r14d, r13d
0x5791:	mov	r13d, r15d
0x5794:	shr	r13d, 0xa
0x5798:	xor	r14d, r13d
0x579b:	mov	r13d, dword ptr [rsp + 0x20]
0x57a0:	mov	r15d, r13d
0x57a3:	rol	r13d, 0xe
0x57a7:	ror	r15d, 7
0x57ab:	xor	r13d, r15d
0x57ae:	mov	r15d, dword ptr [rsp + 0x20]
0x57b3:	shr	r15d, 3
0x57b7:	xor	r13d, r15d
0x57ba:	add	r13d, dword ptr [rsp + 8]
0x57bf:	mov	r15d, edx
0x57c2:	add	r13d, dword ptr [rsp + 0x30]
0x57c7:	ror	r15d, 0xd
0x57cb:	add	r14d, r13d
0x57ce:	mov	r13d, r10d
0x57d1:	xor	r13d, r9d
0x57d4:	mov	dword ptr [rsp + 8], r14d
0x57d9:	mov	dword ptr [rsp + 0xac], r14d
0x57e1:	and	r13d, r8d
0x57e4:	lea	r14d, [rax + r14 + 0x682e6ff3]
0x57ec:	mov	eax, r8d
0x57ef:	xor	r13d, r10d
0x57f2:	ror	eax, 6
0x57f5:	add	r14d, r13d
0x57f8:	mov	r13d, eax
0x57fb:	mov	eax, r8d
0x57fe:	ror	eax, 0xb
0x5801:	xor	eax, r13d
0x5804:	mov	r13d, r8d
0x5807:	rol	r13d, 7


0x580b:	xor	r13d, eax
0x580e:	mov	eax, edx
0x5810:	add	r13d, r14d
0x5813:	ror	eax, 2
0x5816:	mov	r14d, r15d
0x5819:	xor	r14d, eax
0x581c:	mov	eax, edx
0x581e:	mov	r15d, ecx
0x5821:	rol	eax, 0xa
0x5824:	and	r15d, edx
0x5827:	add	edi, r13d
0x582a:	xor	r14d, eax
0x582d:	mov	eax, ecx
0x582f:	or	eax, edx
0x5831:	and	eax, esi
0x5833:	or	eax, r15d
0x5836:	mov	r15d, dword ptr [rsp + 0x1c]
0x583b:	add	eax, r14d
0x583e:	add	eax, r13d
0x5841:	mov	r14d, r15d
0x5844:	mov	r13d, r15d
0x5847:	rol	r13d, 0xf
0x584b:	rol	r14d, 0xd
0x584f:	xor	r14d, r13d
0x5852:	mov	r13d, r15d
0x5855:	shr	r13d, 0xa
0x5859:	xor	r14d, r13d
0x585c:	mov	r13d, dword ptr [rsp + 0xc]
0x5861:	mov	r15d, r13d
0x5864:	rol	r13d, 0xe
0x5868:	ror	r15d, 7
0x586c:	xor	r13d, r15d
0x586f:	mov	r15d, dword ptr [rsp + 0xc]
0x5874:	shr	r15d, 3
0x5878:	xor	r13d, r15d
0x587b:	add	r13d, dword ptr [rsp + 0x20]
0x5880:	add	r12d, r13d
0x5883:	lea	r15d, [r14 + r12]
0x5887:	mov	r12d, r9d
0x588a:	mov	r14d, edx
0x588d:	xor	r12d, r8d
0x5890:	and	r14d, eax
0x5893:	and	r12d, edi
0x5896:	lea	r13d, [r10 + r15 + 0x748f82ee]
0x589e:	mov	r10d, edi
0x58a1:	xor	r12d, r9d
0x58a4:	ror	r10d, 6
0x58a8:	mov	dword ptr [rsp + 0xb0], r15d
0x58b0:	add	r13d, r12d
0x58b3:	mov	r12d, r10d
0x58b6:	mov	r10d, edi
0x58b9:	ror	r10d, 0xb
0x58bd:	xor	r10d, r12d
0x58c0:	mov	r12d, edi
0x58c3:	rol	r12d, 7
0x58c7:	xor	r12d, r10d
0x58ca:	mov	r10d, eax
0x58cd:	add	r12d, r13d
0x58d0:	mov	r13d, eax
0x58d3:	ror	r10d, 2
0x58d7:	ror	r13d, 0xd
0x58db:	add	esi, r12d
0x58de:	xor	r13d, r10d
0x58e1:	mov	r10d, eax
0x58e4:	rol	r10d, 0xa
0x58e8:	xor	r13d, r10d
0x58eb:	mov	r10d, edx
0x58ee:	or	r10d, eax
0x58f1:	and	r10d, ecx
0x58f4:	or	r10d, r14d
0x58f7:	mov	r14d, dword ptr [rsp + 8]
0x58fc:	add	r10d, r13d
0x58ff:	add	r10d, r12d
0x5902:	mov	r13d, r14d
0x5905:	mov	r12d, r14d
0x5908:	rol	r12d, 0xf
0x590c:	rol	r13d, 0xd
0x5910:	xor	r13d, r12d
0x5913:	mov	r12d, r14d
0x5916:	shr	r12d, 0xa
0x591a:	xor	r13d, r12d
0x591d:	mov	r12d, dword ptr [rsp + 0x24]
0x5922:	mov	r14d, r12d
0x5925:	rol	r12d, 0xe
0x5929:	ror	r14d, 7
0x592d:	xor	r12d, r14d
0x5930:	mov	r14d, dword ptr [rsp + 0x24]
0x5935:	shr	r14d, 3
0x5939:	xor	r12d, r14d
0x593c:	add	r12d, dword ptr [rsp + 0xc]
0x5941:	mov	r14d, eax
0x5944:	add	ebp, r12d
0x5947:	mov	r12d, r8d
0x594a:	add	ebp, r13d
0x594d:	xor	r12d, edi
0x5950:	and	r12d, esi
0x5953:	lea	r13d, [r9 + rbp + 0x78a5636f]
0x595b:	mov	r9d, esi
0x595e:	xor	r12d, r8d


0x5961:	ror	r9d, 6
0x5965:	mov	dword ptr [rsp + 0xb4], ebp
0x596c:	add	r13d, r12d
0x596f:	mov	r12d, r9d
0x5972:	mov	r9d, esi
0x5975:	ror	r9d, 0xb
0x5979:	xor	r9d, r12d
0x597c:	mov	r12d, esi
0x597f:	rol	r12d, 7
0x5983:	xor	r12d, r9d
0x5986:	mov	r9d, r10d
0x5989:	add	r12d, r13d
0x598c:	mov	r13d, r10d
0x598f:	ror	r9d, 2
0x5993:	ror	r13d, 0xd
0x5997:	add	ecx, r12d
0x599a:	xor	r13d, r9d
0x599d:	mov	r9d, r10d
0x59a0:	rol	r9d, 0xa
0x59a4:	xor	r13d, r9d
0x59a7:	mov	r9d, eax
0x59aa:	or	r9d, r10d
0x59ad:	and	r9d, edx
0x59b0:	and	r14d, r10d
0x59b3:	or	r9d, r14d
0x59b6:	add	r9d, r13d
0x59b9:	mov	r13d, r15d
0x59bc:	add	r9d, r12d
0x59bf:	mov	r12d, r15d
0x59c2:	rol	r13d, 0xd
0x59c6:	rol	r12d, 0xf
0x59ca:	xor	r13d, r12d
0x59cd:	mov	r12d, r15d
0x59d0:	shr	r12d, 0xa
0x59d4:	xor	r13d, r12d
0x59d7:	mov	r12d, dword ptr [rsp + 0x10]
0x59dc:	mov	r14d, r12d
0x59df:	rol	r12d, 0xe
0x59e3:	ror	r14d, 7
0x59e7:	xor	r12d, r14d
0x59ea:	mov	r14d, dword ptr [rsp + 0x10]
0x59ef:	shr	r14d, 3
0x59f3:	xor	r12d, r14d
0x59f6:	add	r12d, dword ptr [rsp + 0x24]
0x59fb:	mov	r14d, r10d
0x59fe:	add	ebx, r12d
0x5a01:	mov	r12d, edi
0x5a04:	add	ebx, r13d
0x5a07:	xor	r12d, esi
0x5a0a:	and	r12d, ecx
0x5a0d:	lea	r8d, [r8 + rbx - 0x7b3787ec]
0x5a15:	mov	dword ptr [rsp + 0xb8], ebx
0x5a1c:	xor	r12d, edi
0x5a1f:	add	r8d, r12d
0x5a22:	mov	r12d, ecx
0x5a25:	ror	r12d, 6
0x5a29:	mov	r13d, r12d
0x5a2c:	mov	r12d, ecx
0x5a2f:	ror	r12d, 0xb
0x5a33:	xor	r12d, r13d
0x5a36:	mov	r13d, ecx
0x5a39:	rol	r13d, 7
0x5a3d:	xor	r12d, r13d
0x5a40:	add	r12d, r8d
0x5a43:	mov	r8d, r9d
0x5a46:	ror	r8d, 2
0x5a4a:	add	edx, r12d
0x5a4d:	mov	r13d, r8d
0x5a50:	mov	r8d, r9d
0x5a53:	ror	r8d, 0xd
0x5a57:	xor	r8d, r13d
0x5a5a:	mov	r13d, r9d
0x5a5d:	rol	r13d, 0xa
0x5a61:	and	r14d, r9d
0x5a64:	xor	r8d, r13d
0x5a67:	mov	r13d, r10d
0x5a6a:	or	r13d, r9d
0x5a6d:	and	r13d, eax
0x5a70:	or	r13d, r14d
0x5a73:	mov	r14d, dword ptr [rsp + 0x18]
0x5a78:	add	r13d, r8d
0x5a7b:	mov	r8d, ebp
0x5a7e:	rol	r8d, 0xf
0x5a82:	add	r12d, r13d
0x5a85:	mov	r13d, r8d
0x5a88:	mov	r8d, ebp
0x5a8b:	shr	ebp, 0xa
0x5a8e:	rol	r8d, 0xd
0x5a92:	xor	r8d, r13d
0x5a95:	mov	r13d, r14d
0x5a98:	xor	ebp, r8d
0x5a9b:	mov	r8d, r14d
0x5a9e:	ror	r13d, 7
0x5aa2:	rol	r8d, 0xe
0x5aa6:	xor	r8d, r13d
0x5aa9:	mov	r13d, r14d
0x5aac:	shr	r13d, 3
0x5ab0:	xor	r8d, r13d
0x5ab3:	add	r8d, dword ptr [rsp + 0x10]


0x5ab8:	mov	r13d, r9d
0x5abb:	add	r11d, r8d
0x5abe:	mov	r8d, esi
0x5ac1:	add	r11d, ebp
0x5ac4:	xor	r8d, ecx
0x5ac7:	and	r8d, edx
0x5aca:	lea	edi, [rdi + r11 - 0x7338fdf8]
0x5ad2:	mov	dword ptr [rsp + 0xbc], r11d
0x5ada:	xor	r8d, esi
0x5add:	add	edi, r8d
0x5ae0:	mov	r8d, edx
0x5ae3:	ror	r8d, 6
0x5ae7:	mov	ebp, r8d
0x5aea:	mov	r8d, edx
0x5aed:	ror	r8d, 0xb
0x5af1:	xor	r8d, ebp
0x5af4:	mov	ebp, edx
0x5af6:	rol	ebp, 7
0x5af9:	xor	r8d, ebp
0x5afc:	add	r8d, edi
0x5aff:	mov	edi, r12d
0x5b02:	add	eax, r8d
0x5b05:	ror	edi, 2
0x5b08:	and	r13d, r12d
0x5b0b:	mov	ebp, edi
0x5b0d:	mov	edi, r12d
0x5b10:	ror	edi, 0xd
0x5b13:	xor	edi, ebp
0x5b15:	mov	ebp, r12d
0x5b18:	rol	ebp, 0xa
0x5b1b:	xor	edi, ebp
0x5b1d:	mov	ebp, r9d
0x5b20:	or	ebp, r12d
0x5b23:	and	ebp, r10d
0x5b26:	or	ebp, r13d
0x5b29:	mov	r13d, dword ptr [rsp + 0x28]
0x5b2e:	add	ebp, edi
0x5b30:	mov	edi, ebx
0x5b32:	rol	edi, 0xf
0x5b35:	add	r8d, ebp
0x5b38:	mov	ebp, edi
0x5b3a:	mov	edi, ebx
0x5b3c:	shr	ebx, 0xa
0x5b3f:	rol	edi, 0xd
0x5b42:	xor	edi, ebp
0x5b44:	mov	ebp, r13d
0x5b47:	xor	ebx, edi
0x5b49:	mov	edi, r13d
0x5b4c:	rol	ebp, 0xe
0x5b4f:	ror	edi, 7
0x5b52:	xor	ebp, edi
0x5b54:	mov	edi, r13d
0x5b57:	mov	r13d, r12d
0x5b5a:	shr	edi, 3
0x5b5d:	xor	ebp, edi
0x5b5f:	lea	edi, [rbp + r14]
0x5b64:	add	edi, dword ptr [rsp + 0x14]
0x5b68:	mov	ebp, eax
0x5b6a:	ror	ebp, 6
0x5b6d:	mov	r14d, dword ptr [rsp + 0x2c]
0x5b72:	add	edi, ebx
0x5b74:	mov	ebx, ecx
0x5b76:	xor	ebx, edx
0x5b78:	lea	esi, [rsi + rdi - 0x6f410006]
0x5b7f:	mov	dword ptr [rsp + 0xc0], edi
0x5b86:	and	ebx, eax
0x5b88:	xor	ebx, ecx
0x5b8a:	add	esi, ebx
0x5b8c:	mov	ebx, eax
0x5b8e:	ror	ebx, 0xb
0x5b91:	xor	ebx, ebp
0x5b93:	mov	ebp, eax
0x5b95:	rol	ebp, 7
0x5b98:	xor	ebx, ebp
0x5b9a:	mov	ebp, r8d
0x5b9d:	add	ebx, esi
0x5b9f:	mov	esi, r8d
0x5ba2:	ror	ebp, 2
0x5ba5:	ror	esi, 0xd
0x5ba8:	and	r13d, r8d
0x5bab:	add	r10d, ebx
0x5bae:	xor	esi, ebp
0x5bb0:	mov	ebp, r8d
0x5bb3:	rol	ebp, 0xa
0x5bb6:	xor	esi, ebp
0x5bb8:	mov	ebp, r12d
0x5bbb:	or	ebp, r8d
0x5bbe:	and	ebp, r9d
0x5bc1:	or	ebp, r13d
0x5bc4:	mov	r13d, dword ptr [rsp + 0x28]
0x5bc9:	add	ebp, esi
0x5bcb:	mov	esi, r11d
0x5bce:	add	ebx, ebp
0x5bd0:	mov	ebp, r11d
0x5bd3:	rol	esi, 0xd
0x5bd6:	rol	ebp, 0xf
0x5bd9:	shr	r11d, 0xa
0x5bdd:	xor	esi, ebp
0x5bdf:	mov	ebp, r14d


0x5be2:	xor	r11d, esi
0x5be5:	mov	esi, r14d
0x5be8:	rol	ebp, 0xe
0x5beb:	ror	esi, 7
0x5bee:	xor	ebp, esi
0x5bf0:	mov	esi, r14d
0x5bf3:	shr	esi, 3
0x5bf6:	xor	ebp, esi
0x5bf8:	lea	esi, [rbp + r13]
0x5bfd:	add	esi, dword ptr [rsp + 0x1c]
0x5c01:	mov	ebp, r10d
0x5c04:	ror	ebp, 6
0x5c07:	mov	r13d, r8d
0x5c0a:	add	esi, r11d
0x5c0d:	mov	r11d, edx
0x5c10:	xor	r11d, eax
0x5c13:	lea	ecx, [rcx + rsi - 0x5baf9315]
0x5c1a:	mov	dword ptr [rsp + 0xc4], esi
0x5c21:	and	r11d, r10d
0x5c24:	xor	r11d, edx
0x5c27:	add	ecx, r11d
0x5c2a:	mov	r11d, r10d
0x5c2d:	ror	r11d, 0xb
0x5c31:	xor	r11d, ebp
0x5c34:	mov	ebp, r10d
0x5c37:	rol	ebp, 7
0x5c3a:	and	r13d, ebx
0x5c3d:	xor	r11d, ebp
0x5c40:	mov	ebp, ebx
0x5c42:	add	r11d, ecx
0x5c45:	mov	ecx, ebx
0x5c47:	ror	ebp, 2
0x5c4a:	ror	ecx, 0xd
0x5c4d:	add	r9d, r11d
0x5c50:	xor	ecx, ebp
0x5c52:	mov	ebp, ebx
0x5c54:	rol	ebp, 0xa
0x5c57:	xor	ecx, ebp
0x5c59:	mov	ebp, r8d
0x5c5c:	or	ebp, ebx
0x5c5e:	and	ebp, r12d
0x5c61:	or	ebp, r13d
0x5c64:	mov	r13d, dword ptr [rsp + 0x34]
0x5c69:	add	ebp, ecx
0x5c6b:	mov	ecx, edi
0x5c6d:	add	r11d, ebp
0x5c70:	mov	ebp, edi
0x5c72:	rol	ecx, 0xd
0x5c75:	rol	ebp, 0xf
0x5c78:	shr	edi, 0xa
0x5c7b:	xor	ecx, ebp
0x5c7d:	mov	ebp, r13d
0x5c80:	xor	edi, ecx
0x5c82:	mov	ecx, r13d
0x5c85:	ror	ebp, 7
0x5c88:	rol	ecx, 0xe
0x5c8b:	xor	ecx, ebp
0x5c8d:	mov	ebp, r13d
0x5c90:	shr	ebp, 3
0x5c93:	xor	ecx, ebp
0x5c95:	mov	ebp, ebx
0x5c97:	add	ecx, r14d
0x5c9a:	add	ecx, dword ptr [rsp + 8]
0x5c9e:	mov	r14d, dword ptr [rsp + 0x30]
0x5ca3:	add	edi, ecx
0x5ca5:	mov	ecx, eax
0x5ca7:	xor	ecx, r10d
0x5caa:	lea	edx, [rdx + rdi - 0x41065c09]
0x5cb1:	mov	dword ptr [rsp + 0xc8], edi
0x5cb8:	and	ecx, r9d
0x5cbb:	mov	edi, r9d
0x5cbe:	xor	ecx, eax
0x5cc0:	add	edx, ecx
0x5cc2:	mov	ecx, r9d
0x5cc5:	ror	edi, 6
0x5cc8:	ror	ecx, 0xb
0x5ccb:	and	ebp, r11d
0x5cce:	xor	ecx, edi
0x5cd0:	mov	edi, r9d
0x5cd3:	rol	edi, 7
0x5cd6:	xor	ecx, edi
0x5cd8:	mov	edi, r11d
0x5cdb:	add	ecx, edx
0x5cdd:	mov	edx, r11d
0x5ce0:	ror	edi, 2
0x5ce3:	ror	edx, 0xd
0x5ce6:	add	r12d, ecx
0x5ce9:	xor	edx, edi
0x5ceb:	mov	edi, r11d
0x5cee:	rol	edi, 0xa
0x5cf1:	xor	edx, edi
0x5cf3:	mov	edi, ebx
0x5cf5:	or	edi, r11d
0x5cf8:	and	edi, r8d
0x5cfb:	or	edi, ebp
0x5cfd:	add	edi, edx
0x5cff:	mov	edx, esi
0x5d01:	add	ecx, edi
0x5d03:	mov	edi, esi


0x5d05:	rol	edx, 0xd
0x5d08:	rol	edi, 0xf
0x5d0b:	shr	esi, 0xa
0x5d0e:	xor	edx, edi
0x5d10:	mov	edi, r14d
0x5d13:	xor	esi, edx
0x5d15:	mov	edx, r14d
0x5d18:	rol	edi, 0xe
0x5d1b:	ror	edx, 7
0x5d1e:	xor	edi, edx
0x5d20:	mov	edx, r14d
0x5d23:	shr	edx, 3
0x5d26:	xor	edi, edx
0x5d28:	mov	edx, r10d
0x5d2b:	add	edi, r13d
0x5d2e:	xor	edx, r9d
0x5d31:	add	edi, r15d
0x5d34:	add	esi, edi
0x5d36:	and	edx, r12d
0x5d39:	mov	edi, r12d
0x5d3c:	lea	eax, [rax + rsi - 0x398e870e]
0x5d43:	xor	edx, r10d
0x5d46:	ror	edi, 0xb
0x5d49:	mov	dword ptr [rsp + 0xcc], esi
0x5d50:	mov	esi, r12d
0x5d53:	add	dword ptr [rsp + 0x4c], ecx
0x5d57:	add	edx, eax
0x5d59:	ror	esi, 6
0x5d5c:	mov	eax, edi
0x5d5e:	xor	eax, esi
0x5d60:	mov	esi, r12d
0x5d63:	mov	edi, r11d
0x5d66:	rol	esi, 7
0x5d69:	and	edi, ecx
0x5d6b:	add	dword ptr [rsp + 0x54], ebx
0x5d6f:	xor	eax, esi
0x5d71:	mov	esi, ecx
0x5d73:	add	dword ptr [rsp + 0x50], r11d
0x5d78:	add	eax, edx
0x5d7a:	mov	edx, ecx
0x5d7c:	ror	esi, 2
0x5d7f:	ror	edx, 0xd
0x5d82:	mov	ebp, dword ptr [rsp + 0x4c]
0x5d86:	add	r8d, eax
0x5d89:	xor	edx, esi
0x5d8b:	mov	esi, ecx
0x5d8d:	rol	esi, 0xa
0x5d90:	mov	r13d, dword ptr [rsp + 0x50]
0x5d95:	xor	edx, esi
0x5d97:	mov	esi, r11d
0x5d9a:	mov	r14d, dword ptr [rsp + 0x54]
0x5d9f:	or	esi, ecx
0x5da1:	add	dword ptr [rsp + 0x58], r8d
0x5da6:	add	dword ptr [rsp + 0x5c], r12d
0x5dab:	and	esi, ebx
0x5dad:	mov	ebx, dword ptr [rsp + 0x5c]
0x5db1:	or	esi, edi
0x5db3:	add	dword ptr [rsp + 0x60], r9d
0x5db8:	add	edx, esi
0x5dba:	add	edx, dword ptr [rsp + 0x74]
0x5dbe:	mov	rsi, qword ptr [rsp + 0x80]
0x5dc6:	mov	r9d, dword ptr [rsp + 0x60]
0x5dcb:	add	edx, eax
0x5dcd:	mov	rcx, rsi
0x5dd0:	mov	dword ptr [rsi + 4], ebp
0x5dd3:	mov	dword ptr [rsi], edx
0x5dd5:	mov	dword ptr [rsi + 8], r13d
0x5dd9:	mov	rax, rcx
0x5ddc:	mov	dword ptr [rsi + 0xc], r14d
0x5de0:	mov	esi, dword ptr [rsp + 0x58]
0x5de4:	mov	dword ptr [rcx + 0x14], ebx
0x5de7:	mov	dword ptr [rsp + 0x74], edx
0x5deb:	mov	dword ptr [rcx + 0x10], esi
0x5dee:	mov	dword ptr [rcx + 0x18], r9d
0x5df2:	add	dword ptr [rsp + 0x64], r10d
0x5df7:	mov	r10d, esi
0x5dfa:	mov	ecx, dword ptr [rsp + 0x64]
0x5dfe:	mov	dword ptr [rax + 0x1c], ecx
0x5e01:	mov	rax, qword ptr [rsp + 0x40]
0x5e06:	cmp	qword ptr [rsp + 0x78], rax
0x5e0b:	ja	0x3580


0x3580:	mov	rdi, qword ptr [rsp + 0x40]
0x3585:	mov	r8, qword ptr [rsp + 0x88]
0x358d:	xor	eax, eax
0x358f:	nop	
0x3590:	mov	esi, dword ptr [rdi + rax]
0x3593:	bswap	esi
0x3595:	mov	dword ptr [r8 + rax], esi
0x3599:	add	rax, 4
0x359d:	cmp	rax, 0x40
0x35a1:	jne	0x3590


0x602b:	sub	r12, 0x40
0x602f:	lea	rsi, [r13 + 0x70]
0x6033:	mov	rdi, rbp
0x6036:	mov	rdx, r12
0x6039:	call	0x1770


0x5fcf:	cmp	rbx, r14
0x5fd2:	jne	0x5f98


0x5fd4:	neg	r15
0x5fd7:	shl	r15, 6
0x5fdb:	lea	r12, [r12 + r15 - 0x40]
0x5fe0:	mov	rdi, qword ptr [r13 + 0x28]
0x5fe4:	cmp	r12d, 8
0x5fe8:	mov	eax, r12d
0x5feb:	lea	rcx, [rbp + rdi]
0x5ff0:	jae	0x60d0


0x5f98:	movdqu	xmm0, xmmword ptr [rbx]
0x5f9c:	mov	rdx, r13
0x5f9f:	mov	esi, 0x40
0x5fa4:	mov	rdi, rbp
0x5fa7:	add	rbx, 0x40
0x5fab:	movups	xmmword ptr [rbp], xmm0
0x5faf:	movdqu	xmm0, xmmword ptr [rbx - 0x30]
0x5fb4:	movups	xmmword ptr [rbp + 0x10], xmm0
0x5fb8:	movdqu	xmm0, xmmword ptr [rbx - 0x20]
0x5fbd:	movups	xmmword ptr [rbp + 0x20], xmm0
0x5fc1:	movdqu	xmm0, xmmword ptr [rbx - 0x10]
0x5fc6:	movups	xmmword ptr [rbp + 0x30], xmm0
0x5fca:	call	0x34b0


0x2b28:	mov	byte ptr [rip + 0x2095b9], 1
0x2b2f:	pop	rbp
0x2b30:	ret	


0x2d4c:	mov	rsi, r12
0x2d4f:	mov	rdi, rbx
0x2d52:	call	0x64a0


0x6297:	mov	rdi, rbx
0x629a:	call	0x5e40


0x6347:	mov	rdi, rbx
0x634a:	call	0x5e40


0x9131:	test	rbp, rbp
0x9134:	je	0x9156


0x9156:	add	rsp, 8
0x915a:	pop	rbx
0x915b:	pop	rbp
0x915c:	pop	r12
0x915e:	pop	r13
0x9160:	pop	r14
0x9162:	pop	r15
0x9164:	ret	


0x9136:	xor	ebx, ebx
0x9138:	nop	dword ptr [rax + rax]
0x9140:	mov	rdx, r15
0x9143:	mov	rsi, r14
0x9146:	mov	edi, r13d
0x9149:	call	qword ptr [r12 + rbx*8]


0x2cf0:	jmp	0x2c6e


0x2c6e:	add	rbx, 1
0x2c72:	movzx	esi, byte ptr [rbx]
0x2c75:	test	sil, sil
0x2c78:	je	0x2cae


0x2cca:	jmp	0x2c6e


0x8b0f:	test	rax, rax
0x8b12:	je	0x8b19


0x8b14:	add	rsp, 8
0x8b18:	ret	


0x2bea:	mov	rcx, qword ptr [rax]
0x2bed:	mov	rax, rbx
0x2bf0:	jmp	0x2c05


0x2c05:	movzx	edx, byte ptr [rax]
0x2c08:	test	byte ptr [rcx + rdx*2 + 1], 0x10
0x2c0d:	jne	0x2bf8


0x2c0f:	add	rsp, 8
0x2c13:	xor	eax, eax
0x2c15:	pop	rbx
0x2c16:	pop	rbp
0x2c17:	ret	


0x2bf8:	add	rax, 1
0x2bfc:	mov	edx, eax
0x2bfe:	sub	edx, ebx
0x2c00:	cmp	rdx, rbp
0x2c03:	jae	0x2c23


0x2c23:	cmp	byte ptr [rax], 0
0x2c26:	sete	al
0x2c29:	add	rsp, 8
0x2c2d:	pop	rbx
0x2c2e:	pop	rbp
0x2c2f:	ret	


0x5ecb:	mov	rdx, rbx
0x5ece:	mov	rsi, rbp
0x5ed1:	mov	rdi, r12
0x5ed4:	pop	rbx
0x5ed5:	pop	rbp
0x5ed6:	pop	r12
0x5ed8:	jmp	0x34b0


0x60b3:	mov	rsi, qword ptr [r13 + 0x28]
0x60b7:	add	rsi, r14
0x60ba:	cmp	rsi, 0x40
0x60be:	mov	qword ptr [r13 + 0x28], rsi
0x60c2:	ja	0x6120


0x60c4:	add	rbx, r14
0x60c7:	sub	r12, r14
0x60ca:	jmp	0x5f64


0x6120:	and	rsi, 0xffffffffffffffc0
0x6124:	mov	rdx, r13
0x6127:	mov	rdi, r15
0x612a:	call	0x34b0


0x612f:	mov	rdx, qword ptr [r13 + 0x28]
0x6133:	add	rbp, r14
0x6136:	and	rbp, 0xffffffffffffffc0
0x613a:	lea	rax, [r15 + rbp]
0x613e:	and	edx, 0x3f
0x6141:	cmp	edx, 8
0x6144:	mov	qword ptr [r13 + 0x28], rdx
0x6148:	jae	0x6180


0x614a:	test	dl, 4
0x614d:	jne	0x61cf


0x6180:	mov	rcx, qword ptr [rax]
0x6183:	mov	qword ptr [r13 + 0x30], rcx
0x6187:	mov	ecx, edx
0x6189:	mov	rsi, qword ptr [rax + rcx - 8]
0x618e:	mov	qword ptr [r15 + rcx - 8], rsi
0x6193:	lea	rcx, [r13 + 0x38]
0x6197:	and	rcx, 0xfffffffffffffff8
0x619b:	sub	r15, rcx
0x619e:	sub	rax, r15
0x61a1:	add	r15d, edx
0x61a4:	and	r15d, 0xfffffff8
0x61a8:	cmp	r15d, 8
0x61ac:	jb	0x60c4


0x6153:	test	edx, edx
0x6155:	je	0x60c4


0x61cf:	mov	ecx, dword ptr [rax]
0x61d1:	mov	edx, edx
0x61d3:	mov	dword ptr [r13 + 0x30], ecx
0x61d7:	mov	eax, dword ptr [rax + rdx - 4]
0x61db:	mov	dword ptr [r15 + rdx - 4], eax
0x61e0:	jmp	0x60c4


0x61b2:	and	r15d, 0xfffffff8
0x61b6:	xor	edx, edx
0x61b8:	mov	esi, edx
0x61ba:	add	edx, 8
0x61bd:	mov	rdi, qword ptr [rax + rsi]
0x61c1:	cmp	edx, r15d
0x61c4:	mov	qword ptr [rcx + rsi], rdi
0x61c8:	jb	0x61b8


0x615b:	movzx	ecx, byte ptr [rax]
0x615e:	test	dl, 2
0x6161:	mov	byte ptr [r13 + 0x30], cl
0x6165:	je	0x60c4


0x61b8:	mov	esi, edx
0x61ba:	add	edx, 8
0x61bd:	mov	rdi, qword ptr [rax + rsi]
0x61c1:	cmp	edx, r15d
0x61c4:	mov	qword ptr [rcx + rsi], rdi
0x61c8:	jb	0x61b8


0x61ca:	jmp	0x60c4


0x616b:	mov	edx, edx
0x616d:	movzx	eax, word ptr [rax + rdx - 2]
0x6172:	mov	word ptr [r15 + rdx - 2], ax
0x6178:	jmp	0x60c4


0x65d3:	test	rax, rax
0x65d6:	je	0x662d


0x662d:	mov	qword ptr [rip + 0x205aec], rbx
0x6634:	mov	qword ptr [rip + 0x205a85], rbx
0x663b:	pop	rbx
0x663c:	ret	


0x65d8:	lea	r8, [rax + 1]
0x65dc:	mov	rdx, r8
0x65df:	sub	rdx, rbx
0x65e2:	cmp	rdx, 6
0x65e6:	jle	0x662d


0x65e8:	lea	rsi, [rax - 6]
0x65ec:	lea	rdi, [rip + 0x3805]
0x65f3:	mov	ecx, 7
0x65f8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x65f8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x65fa:	seta	dl
0x65fd:	sbb	dl, 0
0x6600:	test	dl, dl
0x6602:	jne	0x662d


0x6604:	lea	rdi, [rip + 0x37f5]
0x660b:	mov	ecx, 3
0x6610:	mov	rsi, r8
0x6613:	mov	rbx, r8
0x6616:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x6616:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x6618:	seta	dl
0x661b:	sbb	dl, 0
0x661e:	test	dl, dl
0x6620:	jne	0x662d


0x6622:	lea	rbx, [rax + 4]
0x6626:	mov	qword ptr [rip + 0x205a73], rbx
0x662d:	mov	qword ptr [rip + 0x205aec], rbx
0x6634:	mov	qword ptr [rip + 0x205a85], rbx
0x663b:	pop	rbx
0x663c:	ret	


0x665a:	call	0x15c0


0x7e4d:	mov	qword ptr [rip + 0x20422c], rbx
0x7e54:	pop	rbx
0x7e55:	mov	dword ptr [rip + 0x204219], 1
0x7e5f:	pop	rbp
0x7e60:	pop	r12
0x7e62:	ret	


0x7e27:	mov	qword ptr [rip + 0x20425e], 0x100
0x7e32:	mov	qword ptr [rip + 0x20425f], rbx
0x7e39:	lea	rbx, [rip + 0x204250]
0x7e40:	cmp	r12, rbx
0x7e43:	je	0x7e54


0x89ad:	xor	eax, eax
0x89af:	pop	rbx
0x89b0:	ret	


0x7e0c:	cmp	rbx, rbp
0x7e0f:	jne	0x7e00


0x7e00:	mov	rdi, qword ptr [rbx]
0x7e03:	add	rbx, 0x10
0x7e07:	call	0x15b0


0x833c:	lea	rsi, [rip + 0x1fb8]
0x8343:	xor	edi, edi
0x8345:	mov	edx, 5
0x834a:	call	0x1660


0x8451:	jmp	0x833c


0x8996:	test	rax, rax
0x8999:	jne	0x89a0


0x899b:	test	rbx, rbx
0x899e:	jne	0x89b1


0x89a0:	pop	rbx
0x89a1:	ret	


0x89b1:	call	0x8b70


0x8d75:	mov	ebx, eax
0x8d77:	jmp	0x8d10


0x8d10:	mov	rcx, qword ptr [rsp + 0x18]
0x8d15:	xor	rcx, qword ptr fs:[0x28]
0x8d1e:	mov	eax, ebx
0x8d20:	jne	0x8e7d


0x8d26:	add	rsp, 0x50
0x8d2a:	pop	rbx
0x8d2b:	pop	rbp
0x8d2c:	pop	r12
0x8d2e:	ret	


0x8e7d:	call	0x1690


0x8d09:	mov	ebx, eax
0x8d0b:	nop	dword ptr [rax + rax]
0x8d10:	mov	rcx, qword ptr [rsp + 0x18]
0x8d15:	xor	rcx, qword ptr fs:[0x28]
0x8d1e:	mov	eax, ebx
0x8d20:	jne	0x8e7d


0x8dcc:	mov	ebx, eax
0x8dce:	jmp	0x8d10


0x8cb5:	test	eax, eax
0x8cb7:	mov	ebx, eax
0x8cb9:	js	0x8e48


0x8e48:	call	0x15d0


0x8cbf:	mov	dword ptr [rip + 0x2035af], 1
0x8cc9:	jmp	0x8d10


0x8ddc:	test	eax, eax
0x8dde:	mov	ebx, eax
0x8de0:	js	0x8d10


0x8de6:	cmp	dword ptr [rip + 0x20348b], -1
0x8ded:	jne	0x8d10


0x8df3:	xor	eax, eax
0x8df5:	mov	esi, 1
0x8dfa:	mov	edi, ebx
0x8dfc:	call	0x1610


0x8e01:	test	eax, eax
0x8e03:	js	0x8e21


0x8e21:	call	0x15d0


0x8e05:	or	eax, 1
0x8e08:	mov	esi, 2
0x8e0d:	mov	edi, ebx
0x8e0f:	mov	edx, eax
0x8e11:	xor	eax, eax
0x8e13:	call	0x1610


0x8e18:	cmp	eax, -1
0x8e1b:	jne	0x8d10


0x8e93:	mov	ebx, eax
0x8e95:	jmp	0x8d10


0x8ebe:	test	eax, eax
0x8ec0:	je	0x8eca


0x8ec2:	test	dword ptr [rbx], 0x100
0x8ec8:	jne	0x8ed8


0x8ed8:	mov	rdi, rbx
0x8edb:	mov	edx, 1
0x8ee0:	xor	esi, esi
0x8ee2:	call	0x8ef0


0x1937:	lea	rsi, [rip + 0x8a03]
0x193e:	mov	edi, 6
0x1943:	call	0x1800


0x652c:	test	rax, rax
0x652f:	mov	rbx, rax
0x6532:	je	0x6541


0x6541:	mov	rax, rbx
0x6544:	pop	rbx
0x6545:	pop	rbp
0x6546:	pop	r12
0x6548:	ret	


0x6534:	mov	rdi, rax
0x6537:	call	0x1780


0x2dd2:	test	rax, rax
0x2dd5:	mov	rbx, rax
0x2dd8:	je	0x2e40


0x2e40:	movzx	r12d, byte ptr [rip + 0x2092aa]
0x2e48:	call	0x15d0


0x2dda:	mov	rdi, rax
0x2ddd:	mov	esi, 2
0x2de2:	call	0x64f0


0x2de7:	mov	rsi, r12
0x2dea:	mov	rdi, rbx
0x2ded:	call	0x64a0


0x67c1:	cmp	r15d, 0xa
0x67c5:	mov	qword ptr [rsp + 0x58], rax
0x67ca:	ja	0x797f


0x67d0:	lea	rcx, [rip + 0x36a9]
0x67d7:	mov	edx, r15d
0x67da:	movsxd	rax, dword ptr [rcx + rdx*4]
0x67de:	add	rax, rcx
0x67e1:	jmp	rax


0x797f:	call	0x15c0


0x2e4d:	mov	rbx, rax
0x2e50:	test	r12b, r12b
0x2e53:	je	0x2e5a


0x2e5a:	mov	rdx, rbp
0x2e5d:	mov	esi, 3
0x2e62:	xor	edi, edi
0x2e64:	call	0x8100


0x2e55:	cmp	dword ptr [rax], 2
0x2e58:	je	0x2e90


0x2e90:	mov	byte ptr [r13], 1
0x2e95:	jmp	0x2d61


0x2d61:	add	rsp, 8
0x2d65:	mov	eax, r12d
0x2d68:	pop	rbx
0x2d69:	pop	rbp
0x2d6a:	pop	r12
0x2d6c:	pop	r13
0x2d6e:	ret	


0x8e26:	mov	r12d, dword ptr [rax]
0x8e29:	mov	rbp, rax
0x8e2c:	mov	edi, ebx
0x8e2e:	call	0x1710


0x1710:	jmp	qword ptr [rip + 0x20a7ba]




0x8e4d:	cmp	dword ptr [rax], 0x16
0x8e50:	jne	0x8cbf


0x8e56:	xor	esi, esi
0x8e58:	xor	eax, eax
0x8e5a:	mov	edx, r12d
0x8e5d:	mov	edi, ebp
0x8e5f:	call	0x1610


0x8e64:	test	eax, eax
0x8e66:	mov	ebx, eax
0x8e68:	js	0x8d10


0x8e6e:	mov	dword ptr [rip + 0x203400], 0xffffffff
0x8e78:	jmp	0x8df3


0x79b1:	mov	r13, rax
0x79b4:	mov	eax, dword ptr [rax]
0x79b6:	test	r15d, r15d
0x79b9:	mov	rbx, qword ptr [rip + 0x2046c0]
0x79c0:	mov	dword ptr [rsp + 0x18], eax
0x79c4:	js	0x7b31


0x7b31:	call	0x15c0


0x79ca:	cmp	dword ptr [rip + 0x2046a7], r15d
0x79d1:	jg	0x7a35


0x79d3:	cmp	r15d, 0x7fffffff
0x79da:	je	0x7b36


0x7a35:	mov	eax, dword ptr [rbp + 4]
0x7a38:	shl	r15, 4
0x7a3c:	sub	rsp, 8
0x7a40:	add	rbx, r15
0x7a43:	lea	r15, [rbp + 8]
0x7a47:	mov	r8d, dword ptr [rbp]
0x7a4b:	mov	r11, qword ptr [rbx]
0x7a4e:	mov	r12, qword ptr [rbx + 8]
0x7a52:	mov	rcx, r14
0x7a55:	or	eax, 1
0x7a58:	mov	dword ptr [rsp + 0x24], eax
0x7a5c:	push	qword ptr [rbp + 0x30]
0x7a5f:	mov	r9d, eax
0x7a62:	push	qword ptr [rbp + 0x28]
0x7a65:	push	r15
0x7a67:	mov	rsi, r11
0x7a6a:	mov	rdx, qword ptr [rsp + 0x28]
0x7a6f:	mov	rdi, r12
0x7a72:	mov	qword ptr [rsp + 0x30], r11
0x7a77:	call	0x6750


0x7b36:	call	0x8b70


0x79e0:	lea	r12d, [r15 + 1]
0x79e4:	lea	rax, [rip + 0x2046a5]
0x79eb:	movsxd	rsi, r12d
0x79ee:	shl	rsi, 4
0x79f2:	cmp	rbx, rax
0x79f5:	je	0x7b10


0x7b10:	xor	edi, edi
0x7b12:	call	0x8980


0x79fb:	mov	rdi, rbx
0x79fe:	call	0x8980


0x7a03:	mov	rbx, rax
0x7a06:	mov	qword ptr [rip + 0x204673], rax
0x7a0d:	movsxd	rdi, dword ptr [rip + 0x204664]
0x7a14:	mov	edx, r12d
0x7a17:	xor	esi, esi
0x7a19:	sub	edx, edi
0x7a1b:	shl	rdi, 4
0x7a1f:	movsxd	rdx, edx
0x7a22:	add	rdi, rbx
0x7a25:	shl	rdx, 4
0x7a29:	call	0x1700


0x1700:	jmp	qword ptr [rip + 0x20a7c2]




0x7b17:	movdqa	xmm0, xmmword ptr [rip + 0x204571]
0x7b1f:	mov	rbx, rax
0x7b22:	mov	qword ptr [rip + 0x204557], rax
0x7b29:	movups	xmmword ptr [rax], xmm0
0x7b2c:	jmp	0x7a0d


0x7a0d:	movsxd	rdi, dword ptr [rip + 0x204664]
0x7a14:	mov	edx, r12d
0x7a17:	xor	esi, esi
0x7a19:	sub	edx, edi
0x7a1b:	shl	rdi, 4
0x7a1f:	movsxd	rdx, edx
0x7a22:	add	rdi, rbx
0x7a25:	shl	rdx, 4
0x7a29:	call	0x1700


0x7b4c:	mov	r12d, dword ptr [rax]
0x7b4f:	mov	rbp, rax
0x7b52:	lea	rax, [rip + 0x2046e7]
0x7b59:	test	rbx, rbx
0x7b5c:	mov	esi, 0x38
0x7b61:	cmove	rbx, rax
0x7b65:	mov	rdi, rbx
0x7b68:	call	0x8b20


0x7c82:	mov	r12d, dword ptr [rax]
0x7c85:	mov	rbp, rax
0x7c88:	lea	rax, [rbx + 8]
0x7c8c:	sub	rsp, 8
0x7c90:	mov	r9d, dword ptr [rbx + 4]
0x7c94:	push	qword ptr [rbx + 0x30]
0x7c97:	mov	r8d, dword ptr [rbx]
0x7c9a:	push	qword ptr [rbx + 0x28]
0x7c9d:	mov	rdx, r15
0x7ca0:	push	rax
0x7ca1:	mov	rcx, qword ptr [rsp + 0x28]
0x7ca6:	mov	rsi, r14
0x7ca9:	mov	rdi, r13
0x7cac:	call	0x6750


0x7cff:	test	r12, r12
0x7d02:	mov	r13, rax
0x7d05:	mov	eax, dword ptr [rax]
0x7d07:	sete	bpl
0x7d0b:	or	ebp, dword ptr [rbx + 4]
0x7d0e:	lea	r10, [rbx + 8]
0x7d12:	sub	rsp, 8
0x7d16:	mov	r8d, dword ptr [rbx]
0x7d19:	mov	rcx, r15
0x7d1c:	mov	dword ptr [rsp + 0x14], eax
0x7d20:	push	qword ptr [rbx + 0x30]
0x7d23:	mov	rdx, r14
0x7d26:	push	qword ptr [rbx + 0x28]
0x7d29:	push	r10
0x7d2b:	xor	esi, esi
0x7d2d:	mov	r9d, ebp
0x7d30:	xor	edi, edi
0x7d32:	mov	qword ptr [rsp + 0x40], r10
0x7d37:	call	0x6750


0x63bc:	test	rax, rax
0x63bf:	je	0x6490


0x6490:	mov	eax, 1
0x6495:	jmp	0x6428


0x63c5:	lea	r13, [rsp + 0x10]
0x63ca:	mov	rbp, rax
0x63cd:	mov	rdi, r13
0x63d0:	call	r12


0x6428:	mov	rcx, qword ptr [rsp + 0xc8]
0x6430:	xor	rcx, qword ptr fs:[0x28]
0x6439:	jne	0x6497


0x643b:	add	rsp, 0xd8
0x6442:	pop	rbx
0x6443:	pop	rbp
0x6444:	pop	r12
0x6446:	pop	r13
0x6448:	pop	r14
0x644a:	pop	r15
0x644c:	ret	


0x6497:	call	0x1690


0x8929:	test	rax, rax
0x892c:	jne	0x8933


0x892e:	test	rbx, rbx
0x8931:	jne	0x8935


0x8933:	pop	rbx
0x8934:	ret	


0x8935:	call	0x8b70


0x8ad9:	mov	rdx, rbx
0x8adc:	xor	esi, esi
0x8ade:	mov	rdi, rax
0x8ae1:	pop	rbx
0x8ae2:	jmp	0x1700


0x8b34:	add	rsp, 8
0x8b38:	mov	rdx, rbx
0x8b3b:	mov	rsi, rbp
0x8b3e:	pop	rbx
0x8b3f:	pop	rbp
0x8b40:	mov	rdi, rax
0x8b43:	jmp	0x1770


0x8b59:	mov	rdi, rbx
0x8b5c:	lea	rsi, [rax + 1]
0x8b60:	pop	rbx
0x8b61:	jmp	0x8b20


0x834f:	lea	rdx, [rip + 0x22ca]
0x8356:	mov	rcx, rax
0x8359:	mov	r8d, 0x7e3
0x835f:	mov	esi, 1
0x8364:	mov	rdi, rbp
0x8367:	xor	eax, eax
0x8369:	call	0x18a0


0x836e:	lea	rsi, [rip + 0x2013]
0x8375:	xor	edi, edi
0x8377:	mov	edx, 5
0x837c:	call	0x1660


0x8381:	mov	rsi, rbp
0x8384:	mov	rdi, rax
0x8387:	call	0x1740


0x838c:	cmp	r12, 9
0x8390:	ja	0x86d0


0x8396:	lea	rdx, [rip + 0x224b]
0x839d:	movsxd	rax, dword ptr [rdx + r12*4]
0x83a1:	add	rax, rdx
0x83a4:	jmp	rax


0x86d0:	mov	r10, qword ptr [rbx + 0x40]
0x86d4:	mov	r9, qword ptr [rbx + 0x38]
0x86d8:	mov	edx, 5
0x86dd:	mov	rax, qword ptr [rbx + 0x10]
0x86e1:	mov	r8, qword ptr [rbx + 8]
0x86e5:	lea	rsi, [rip + 0x1e74]
0x86ec:	mov	r13, qword ptr [rbx + 0x30]
0x86f0:	mov	r12, qword ptr [rbx + 0x28]
0x86f4:	mov	r15, qword ptr [rbx + 0x20]
0x86f8:	mov	r14, qword ptr [rbx + 0x18]
0x86fc:	mov	qword ptr [rsp + 0x18], r10
0x8701:	mov	qword ptr [rsp + 0x10], r9
0x8706:	mov	qword ptr [rsp], rax
0x870a:	mov	qword ptr [rsp + 8], r8
0x870f:	mov	rbx, qword ptr [rbx]
0x8712:	jmp	0x84a2


0x84a2:	xor	edi, edi
0x84a4:	call	0x1660


0x84a9:	mov	r10, qword ptr [rsp + 0x18]
0x84ae:	push	r10
0x84b0:	jmp	0x83f4


0x83f4:	mov	r9, qword ptr [rsp + 0x18]
0x83f9:	mov	rdx, rax
0x83fc:	mov	rcx, rbx
0x83ff:	mov	esi, 1
0x8404:	mov	rdi, rbp
0x8407:	xor	eax, eax
0x8409:	push	r9
0x840b:	push	r13
0x840d:	push	r12
0x840f:	push	r15
0x8411:	push	r14
0x8413:	mov	r9, qword ptr [rsp + 0x30]
0x8418:	mov	r8, qword ptr [rsp + 0x38]
0x841d:	call	0x18a0


0x8422:	add	rsp, 0x30
0x8426:	add	rsp, 0x28
0x842a:	pop	rbx
0x842b:	pop	rbp
0x842c:	pop	r12
0x842e:	pop	r13
0x8430:	pop	r14
0x8432:	pop	r15
0x8434:	ret	


0x8866:	mov	rax, qword ptr [rsp + 0x78]
0x886b:	xor	rax, qword ptr fs:[0x28]
0x8874:	jne	0x8880


0x8876:	add	rsp, 0xb8
0x887d:	pop	rbx
0x887e:	pop	rbp
0x887f:	ret	


0x8880:	call	0x1690


0x8790:	mov	rax, qword ptr [rsp + 0x58]
0x8795:	xor	rax, qword ptr fs:[0x28]
0x879e:	jne	0x87a5


0x87a0:	add	rsp, 0x68
0x87a4:	ret	


0x87a5:	call	0x1690


0x2edd:	mov	rdi, qword ptr [rip + 0x2091fc]
0x2ee4:	mov	rdx, rax
0x2ee7:	mov	rcx, rbx
0x2eea:	mov	esi, 1
0x2eef:	xor	eax, eax
0x2ef1:	call	0x18a0


0x2ef6:	mov	edi, ebp
0x2ef8:	call	0x1880


0x1880:	jmp	qword ptr [rip + 0x20a702]




0x2f0b:	lea	rcx, [rip + 0x62a2]
0x2f12:	mov	r8d, 0x100
0x2f18:	mov	rdx, rbx
0x2f1b:	mov	rsi, rax
0x2f1e:	mov	edi, 1
0x2f23:	xor	eax, eax
0x2f25:	call	0x1810


0x1810:	jmp	qword ptr [rip + 0x20a73a]




0x88b4:	lea	rdx, [rip + 0x1a9c]
0x88bb:	mov	rsi, rax
0x88be:	mov	edi, 1
0x88c3:	xor	eax, eax
0x88c5:	call	0x1810


0x8b87:	mov	edi, dword ptr [rip + 0x203493]
0x8b8d:	lea	rdx, [rip + 0x11e1]
0x8b94:	mov	rcx, rax
0x8b97:	xor	esi, esi
0x8b99:	xor	eax, eax
0x8b9b:	call	0x1830


0x1830:	jmp	qword ptr [rip + 0x20a72a]




0x653c:	cmp	eax, 2
0x653f:	jbe	0x6550


0x6550:	mov	edi, eax
0x6552:	call	0x82f0


0x8f23:	mov	edx, r12d
0x8f26:	mov	rsi, rbp
0x8f29:	mov	edi, eax
0x8f2b:	call	0x16f0


0x16f0:	jmp	qword ptr [rip + 0x20a7ca]




0x64fd:	mov	ecx, ebx
0x64ff:	xor	edx, edx
0x6501:	xor	esi, esi
0x6503:	pop	rbx
0x6504:	mov	edi, eax
0x6506:	jmp	0x1720


0x8bbc:	test	eax, eax
0x8bbe:	mov	rdi, rbx
0x8bc1:	js	0x8c17


0x8c17:	pop	rbx
0x8c18:	pop	rbp
0x8c19:	pop	r12
0x8c1b:	jmp	0x1640


0x8bc3:	call	0x17c0


0x1640:	jmp	qword ptr [rip + 0x20a822]




0x8bc8:	test	eax, eax
0x8bca:	jne	0x8bf8


0x8bcc:	mov	rdi, rbx
0x8bcf:	call	0x8eb0


0x8bf8:	mov	rdi, rbx
0x8bfb:	call	0x1780


0x8c00:	xor	esi, esi
0x8c02:	mov	edx, 1
0x8c07:	mov	edi, eax
0x8c09:	call	0x16f0


0x8f87:	cmp	rax, -3
0x8f8b:	mov	rbp, rax
0x8f8e:	jbe	0x8fb0


0x8fb0:	mov	rdx, qword ptr [rsp + 8]
0x8fb5:	xor	rdx, qword ptr fs:[0x28]
0x8fbe:	mov	rax, rbp
0x8fc1:	jne	0x8fce


0x8f90:	test	r12, r12
0x8f93:	je	0x8fb0


0x8fc3:	add	rsp, 0x18
0x8fc7:	pop	rbx
0x8fc8:	pop	rbp
0x8fc9:	pop	r12
0x8fcb:	pop	r13
0x8fcd:	ret	


0x8fce:	call	0x1690


0x8f95:	xor	edi, edi
0x8f97:	call	0x9060


0x8fec:	mov	ebx, dword ptr [rbp]
0x8fef:	mov	rdi, rbp
0x8ff2:	mov	r12, rax
0x8ff5:	call	0x8bb0


0x1948:	lea	rsi, [rip + 0x7910]
0x194f:	lea	rdi, [rip + 0x78e0]
0x1956:	call	0x1650


0x1650:	jmp	qword ptr [rip + 0x20a81a]




0x906b:	mov	rdx, rax
0x906e:	mov	eax, 1
0x9073:	test	rdx, rdx
0x9076:	je	0x9095


0x9095:	add	rsp, 8
0x9099:	ret	


0x9078:	lea	rdi, [rip + 0x15e1]
0x907f:	mov	ecx, 2
0x9084:	mov	rsi, rdx
0x9087:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x9087:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x9089:	seta	cl
0x908c:	sbb	cl, 0
0x908f:	xor	eax, eax
0x9091:	test	cl, cl
0x9093:	jne	0x90a0


0x90a0:	lea	rdi, [rip + 0x15bb]
0x90a7:	mov	ecx, 6
0x90ac:	mov	rsi, rdx
0x90af:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x90af:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x90b1:	seta	al
0x90b4:	sbb	al, 0
0x90b6:	test	al, al
0x90b8:	setne	al
0x90bb:	add	rsp, 8
0x90bf:	ret	


0x8f9c:	test	al, al
0x8f9e:	jne	0x8fb0


0x8fa0:	movzx	eax, byte ptr [r13]
0x8fa5:	mov	ebp, 1
0x8faa:	mov	dword ptr [rbx], eax
0x8fac:	nop	dword ptr [rax]
0x8fb0:	mov	rdx, qword ptr [rsp + 8]
0x8fb5:	xor	rdx, qword ptr fs:[0x28]
0x8fbe:	mov	rax, rbp
0x8fc1:	jne	0x8fce


0x90ce:	test	rax, rax
0x90d1:	je	0x90f0


0x90f0:	lea	rax, [rip + 0x1571]
0x90f7:	add	rsp, 8
0x90fb:	ret	


0x90d3:	cmp	byte ptr [rax], 0
0x90d6:	lea	rdx, [rip + 0x158b]
0x90dd:	cmove	rax, rdx
0x90e1:	add	rsp, 8
0x90e5:	ret	


0x6670:	movzx	edx, byte ptr [rax]
0x6673:	and	edx, 0xffffffdf
0x6676:	cmp	dl, 0x55
0x6679:	je	0x66f0


0x66f0:	movzx	edx, byte ptr [rax + 1]
0x66f4:	and	edx, 0xffffffdf
0x66f7:	cmp	dl, 0x54
0x66fa:	jne	0x6680


0x667b:	cmp	dl, 0x47
0x667e:	je	0x66a0


0x66fc:	movzx	edx, byte ptr [rax + 2]
0x6700:	and	edx, 0xffffffdf
0x6703:	cmp	dl, 0x46
0x6706:	jne	0x6680


0x6680:	lea	rax, [rip + 0x378c]
0x6687:	lea	rdx, [rip + 0x3787]
0x668e:	cmp	ebx, 9
0x6691:	cmovne	rax, rdx
0x6695:	add	rsp, 8
0x6699:	pop	rbx
0x669a:	pop	rbp
0x669b:	ret	


0x66a0:	movzx	edx, byte ptr [rax + 1]
0x66a4:	and	edx, 0xffffffdf
0x66a7:	cmp	dl, 0x42
0x66aa:	jne	0x6680


0x670c:	cmp	byte ptr [rax + 3], 0x2d
0x6710:	jne	0x6680


0x66ac:	cmp	byte ptr [rax + 2], 0x31
0x66b0:	jne	0x6680


0x6716:	cmp	byte ptr [rax + 4], 0x38
0x671a:	jne	0x6680


0x66b2:	cmp	byte ptr [rax + 3], 0x38
0x66b6:	jne	0x6680


0x6720:	cmp	byte ptr [rax + 5], 0
0x6724:	jne	0x6680


0x66b8:	cmp	byte ptr [rax + 4], 0x30
0x66bc:	jne	0x6680


0x672a:	cmp	byte ptr [rbp], 0x60
0x672e:	lea	rax, [rip + 0x36cf]
0x6735:	lea	rdx, [rip + 0x36cc]
0x673c:	cmovne	rax, rdx
0x6740:	add	rsp, 8
0x6744:	pop	rbx
0x6745:	pop	rbp
0x6746:	ret	


0x66be:	cmp	byte ptr [rax + 5], 0x33
0x66c2:	jne	0x6680


0x66c4:	cmp	byte ptr [rax + 6], 0x30
0x66c8:	jne	0x6680


0x66ca:	cmp	byte ptr [rax + 7], 0
0x66ce:	jne	0x6680


0x66d0:	cmp	byte ptr [rbp], 0x60
0x66d4:	lea	rax, [rip + 0x3731]
0x66db:	lea	rdx, [rip + 0x372e]
0x66e2:	cmovne	rax, rdx
0x66e6:	add	rsp, 8
0x66ea:	pop	rbx
0x66eb:	pop	rbp
0x66ec:	ret	


0x195b:	lea	rdi, [rip + 0x78d4]
0x1962:	call	0x1630


0x1630:	jmp	qword ptr [rip + 0x20a82a]




0x8c0e:	cmp	rax, -1
0x8c12:	jne	0x8bcc


0x8c14:	mov	rdi, rbx
0x8c17:	pop	rbx
0x8c18:	pop	rbp
0x8c19:	pop	r12
0x8c1b:	jmp	0x1640


0x8f30:	cmp	rax, -1
0x8f34:	je	0x8f42


0x8f42:	pop	rbx
0x8f43:	pop	rbp
0x8f44:	pop	r12
0x8f46:	ret	


0x8f36:	and	dword ptr [rbx], 0xffffffef
0x8f39:	mov	qword ptr [rbx + 0x90], rax
0x8f40:	xor	eax, eax
0x8f42:	pop	rbx
0x8f43:	pop	rbp
0x8f44:	pop	r12
0x8f46:	ret	


0x6557:	test	eax, eax
0x6559:	mov	r12d, eax
0x655c:	js	0x6598


0x6598:	call	0x15d0


0x655e:	mov	rdi, rbx
0x6561:	call	0x8bb0


0x659d:	mov	r12d, dword ptr [rax]
0x65a0:	mov	rbp, rax
0x65a3:	mov	rdi, rbx
0x65a6:	call	0x8bb0


0x8ba0:	call	0x15c0


0x88ca:	lea	rsi, [rip + 0x1a9c]
0x88d1:	mov	edx, 5
0x88d6:	xor	edi, edi
0x88d8:	call	0x1660


0x88dd:	lea	rcx, [rip + 0xff4]
0x88e4:	lea	rdx, [rip + 0x947]
0x88eb:	mov	rsi, rax
0x88ee:	mov	edi, 1
0x88f3:	xor	eax, eax
0x88f5:	call	0x1810


0x88fa:	mov	rbx, qword ptr [rip + 0x2037a7]
0x8901:	lea	rsi, [rip + 0x1c98]
0x8908:	xor	edi, edi
0x890a:	mov	edx, 5
0x890f:	call	0x1660


0x8914:	mov	rsi, rbx
0x8917:	mov	rdi, rax
0x891a:	pop	rbx
0x891b:	jmp	0x1740


0x2f2a:	mov	rbx, qword ptr [rip + 0x209177]
0x2f31:	lea	rsi, [rip + 0x64b0]
0x2f38:	mov	edx, 5
0x2f3d:	xor	edi, edi
0x2f3f:	call	0x1660


0x2f44:	mov	rsi, rbx
0x2f47:	mov	rdi, rax
0x2f4a:	call	0x1740


0x2f4f:	mov	rbx, qword ptr [rip + 0x209152]
0x2f56:	lea	rsi, [rip + 0x64c3]
0x2f5d:	mov	edx, 5
0x2f62:	xor	edi, edi
0x2f64:	call	0x1660


0x2f69:	mov	rsi, rbx
0x2f6c:	mov	rdi, rax
0x2f6f:	call	0x1740


0x2f74:	lea	rsi, [rip + 0x64d5]
0x2f7b:	xor	edi, edi
0x2f7d:	mov	edx, 5
0x2f82:	call	0x1660


0x2f87:	lea	rdx, [rip + 0x6226]
0x2f8e:	mov	rsi, rax
0x2f91:	mov	edi, 1
0x2f96:	xor	eax, eax
0x2f98:	call	0x1810


0x2f9d:	mov	rbx, qword ptr [rip + 0x209104]
0x2fa4:	lea	rsi, [rip + 0x64ed]
0x2fab:	mov	edx, 5
0x2fb0:	xor	edi, edi
0x2fb2:	call	0x1660


0x2fb7:	mov	rsi, rbx
0x2fba:	mov	rdi, rax
0x2fbd:	call	0x1740


0x2fc2:	mov	rbx, qword ptr [rip + 0x2090df]
0x2fc9:	lea	rsi, [rip + 0x6500]
0x2fd0:	mov	edx, 5
0x2fd5:	xor	edi, edi
0x2fd7:	call	0x1660


0x2fdc:	mov	rsi, rbx
0x2fdf:	mov	rdi, rax
0x2fe2:	call	0x1740


0x2fe7:	mov	rbx, qword ptr [rip + 0x2090ba]
0x2fee:	lea	rsi, [rip + 0x6513]
0x2ff5:	mov	edx, 5
0x2ffa:	xor	edi, edi
0x2ffc:	call	0x1660


0x3001:	mov	rsi, rbx
0x3004:	mov	rdi, rax
0x3007:	call	0x1740


0x300c:	mov	rbx, qword ptr [rip + 0x209095]
0x3013:	lea	rsi, [rip + 0x656e]
0x301a:	mov	edx, 5
0x301f:	xor	edi, edi
0x3021:	call	0x1660


0x3026:	mov	rsi, rbx
0x3029:	mov	rdi, rax
0x302c:	call	0x1740


0x3031:	mov	rbx, qword ptr [rip + 0x209070]
0x3038:	lea	rsi, [rip + 0x6701]
0x303f:	mov	edx, 5
0x3044:	xor	edi, edi
0x3046:	call	0x1660


0x304b:	mov	rsi, rbx
0x304e:	mov	rdi, rax
0x3051:	call	0x1740


0x3056:	mov	rbx, qword ptr [rip + 0x20904b]
0x305d:	lea	rsi, [rip + 0x670c]
0x3064:	mov	edx, 5
0x3069:	xor	edi, edi
0x306b:	call	0x1660


0x3070:	mov	rsi, rbx
0x3073:	mov	rdi, rax
0x3076:	lea	rbx, [rip + 0x612d]
0x307d:	call	0x1740


0x3082:	lea	rsi, [rip + 0x671f]
0x3089:	xor	edi, edi
0x308b:	mov	edx, 5
0x3090:	call	0x1660


0x3095:	lea	rdx, [rip + 0x611f]
0x309c:	mov	rsi, rax
0x309f:	mov	edi, 1
0x30a4:	xor	eax, eax
0x30a6:	call	0x1810


0x30ab:	lea	rax, [rip + 0x6114]
0x30b2:	lea	rcx, [rip + 0x614e]
0x30b9:	mov	qword ptr [rsp + 0x30], rbx
0x30be:	mov	qword ptr [rsp + 0x60], 0
0x30c7:	mov	qword ptr [rsp + 0x68], 0
0x30d0:	mov	rdx, rsp
0x30d3:	mov	qword ptr [rsp], rax
0x30d7:	lea	rax, [rip + 0x60ea]
0x30de:	mov	qword ptr [rsp + 0x40], rcx
0x30e3:	lea	rcx, [rip + 0x6127]
0x30ea:	mov	qword ptr [rsp + 8], rax
0x30ef:	lea	rax, [rip + 0x6140]
0x30f6:	mov	qword ptr [rsp + 0x50], rcx
0x30fb:	mov	qword ptr [rsp + 0x10], rax
0x3100:	lea	rax, [rip + 0x60d1]
0x3107:	mov	qword ptr [rsp + 0x18], rax
0x310c:	lea	rax, [rip + 0x60db]
0x3113:	mov	qword ptr [rsp + 0x20], rax
0x3118:	lea	rax, [rip + 0x60d9]
0x311f:	mov	qword ptr [rsp + 0x28], rax
0x3124:	mov	qword ptr [rsp + 0x38], rax
0x3129:	mov	qword ptr [rsp + 0x48], rax
0x312e:	mov	qword ptr [rsp + 0x58], rax
0x3133:	nop	dword ptr [rax + rax]
0x3138:	add	rdx, 0x10
0x313c:	mov	rdi, qword ptr [rdx]
0x313f:	test	rdi, rdi
0x3142:	je	0x3157


0x3157:	mov	r12, qword ptr [rdx + 8]
0x315b:	xor	edi, edi
0x315d:	mov	edx, 5
0x3162:	lea	rsi, [rip + 0x60b2]
0x3169:	test	r12, r12
0x316c:	je	0x3233


0x3144:	mov	ecx, 0xa
0x3149:	mov	rsi, rbx
0x314c:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3233:	call	0x1660


0x3172:	call	0x1660


0x314c:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x314e:	seta	al
0x3151:	sbb	al, 0
0x3153:	test	al, al
0x3155:	jne	0x3138


0x3138:	add	rdx, 0x10
0x313c:	mov	rdi, qword ptr [rdx]
0x313f:	test	rdi, rdi
0x3142:	je	0x3157


0x3177:	lea	rcx, [rip + 0x675a]
0x317e:	lea	rdx, [rip + 0x60ad]
0x3185:	mov	rsi, rax
0x3188:	mov	edi, 1
0x318d:	xor	eax, eax
0x318f:	call	0x1810


0x3194:	xor	esi, esi
0x3196:	mov	edi, 5
0x319b:	call	0x1800


0x31a0:	test	rax, rax
0x31a3:	je	0x31c1


0x31c1:	lea	rsi, [rip + 0x607c]
0x31c8:	xor	edi, edi
0x31ca:	mov	edx, 5
0x31cf:	call	0x1660


0x31a5:	lea	rsi, [rip + 0x6094]
0x31ac:	mov	edx, 3
0x31b1:	mov	rdi, rax
0x31b4:	call	0x15e0


0x15e0:	jmp	qword ptr [rip + 0x20a852]




0x31d4:	lea	rcx, [rip + 0x5fcf]
0x31db:	lea	rdx, [rip + 0x66f6]
0x31e2:	mov	rsi, rax
0x31e5:	mov	edi, 1
0x31ea:	xor	eax, eax
0x31ec:	call	0x1810


0x31f1:	cmp	r12, rbx
0x31f4:	lea	rcx, [rip + 0x5fe7]
0x31fb:	lea	rbx, [rip + 0x713f]
0x3202:	cmove	rbx, rcx
0x3206:	lea	rsi, [rip + 0x673b]
0x320d:	xor	edi, edi
0x320f:	mov	edx, 5
0x3214:	call	0x1660


0x3219:	mov	rcx, rbx
0x321c:	mov	rsi, rax
0x321f:	mov	rdx, r12
0x3222:	mov	edi, 1
0x3227:	xor	eax, eax
0x3229:	call	0x1810


0x322e:	jmp	0x2ef6


0x3238:	lea	rcx, [rip + 0x6699]
0x323f:	lea	rdx, [rip + 0x5fec]
0x3246:	mov	rsi, rax
0x3249:	mov	edi, 1
0x324e:	xor	eax, eax
0x3250:	call	0x1810


0x3255:	xor	esi, esi
0x3257:	mov	edi, 5
0x325c:	call	0x1800


0x3261:	test	rax, rax
0x3264:	je	0x327e


0x327e:	lea	rsi, [rip + 0x5fbf]
0x3285:	mov	edx, 5
0x328a:	xor	edi, edi
0x328c:	lea	r12, [rip + 0x5f17]
0x3293:	lea	rbx, [rip + 0x5f48]
0x329a:	call	0x1660


0x3266:	lea	rsi, [rip + 0x5fd3]
0x326d:	mov	edx, 3
0x3272:	mov	rdi, rax
0x3275:	call	0x15e0


0x329f:	lea	rcx, [rip + 0x5f04]
0x32a6:	lea	rdx, [rip + 0x662b]
0x32ad:	mov	rsi, rax
0x32b0:	mov	edi, 1
0x32b5:	xor	eax, eax
0x32b7:	call	0x1810


0x32bc:	jmp	0x3206


0x3206:	lea	rsi, [rip + 0x673b]
0x320d:	xor	edi, edi
0x320f:	mov	edx, 5
0x3214:	call	0x1660


0x7b6d:	mov	dword ptr [rbp], r12d
0x7b71:	pop	rbx
0x7b72:	pop	rbp
0x7b73:	pop	r12
0x7b75:	ret	


0x7a2e:	mov	dword ptr [rip + 0x204643], r12d
0x7a35:	mov	eax, dword ptr [rbp + 4]
0x7a38:	shl	r15, 4
0x7a3c:	sub	rsp, 8
0x7a40:	add	rbx, r15
0x7a43:	lea	r15, [rbp + 8]
0x7a47:	mov	r8d, dword ptr [rbp]
0x7a4b:	mov	r11, qword ptr [rbx]
0x7a4e:	mov	r12, qword ptr [rbx + 8]
0x7a52:	mov	rcx, r14
0x7a55:	or	eax, 1
0x7a58:	mov	dword ptr [rsp + 0x24], eax
0x7a5c:	push	qword ptr [rbp + 0x30]
0x7a5f:	mov	r9d, eax
0x7a62:	push	qword ptr [rbp + 0x28]
0x7a65:	push	r15
0x7a67:	mov	rsi, r11
0x7a6a:	mov	rdx, qword ptr [rsp + 0x28]
0x7a6f:	mov	rdi, r12
0x7a72:	mov	qword ptr [rsp + 0x30], r11
0x7a77:	call	0x6750


0x8e33:	mov	ebx, 0xffffffff
0x8e38:	mov	dword ptr [rbp], r12d
0x8e3c:	jmp	0x8d10


0x8ee7:	mov	rdi, rbx
0x8eea:	pop	rbx
0x8eeb:	jmp	0x17a0


0x2df2:	test	eax, eax
0x2df4:	jne	0x2d70


0x2dfa:	mov	rdi, rbx
0x2dfd:	call	0x8bb0


0x2d70:	mov	rdx, rbp
0x2d73:	xor	edi, edi
0x2d75:	mov	esi, 3
0x2d7a:	call	0x8100


0x2d57:	test	eax, eax
0x2d59:	jne	0x2d70


0x2d5b:	mov	r12d, 1
0x2d61:	add	rsp, 8
0x2d65:	mov	eax, r12d
0x2d68:	pop	rbx
0x2d69:	pop	rbp
0x2d6a:	pop	r12
0x2d6c:	pop	r13
0x2d6e:	ret	


0x634f:	mov	rsi, rbp
0x6352:	mov	rdi, rbx
0x6355:	call	0x3490


0x635a:	mov	rcx, qword ptr [rsp + 0xb8]
0x6362:	xor	rcx, qword ptr fs:[0x28]
0x636b:	jne	0x6377


0x636d:	add	rsp, 0xc8
0x6374:	pop	rbx
0x6375:	pop	rbp
0x6376:	ret	


0x6377:	call	0x1690


0x629f:	mov	rsi, rbp
0x62a2:	mov	rdi, rbx
0x62a5:	call	0x3470


0x62aa:	mov	rcx, qword ptr [rsp + 0xb8]
0x62b2:	xor	rcx, qword ptr fs:[0x28]
0x62bb:	jne	0x62c7


0x62bd:	add	rsp, 0xc8
0x62c4:	pop	rbx
0x62c5:	pop	rbp
0x62c6:	ret	


0x62c7:	call	0x1690


0x5ef1:	add	rsp, 8
0x5ef5:	mov	rsi, rbp
0x5ef8:	mov	rdi, rbx
0x5efb:	pop	rbx
0x5efc:	pop	rbp
0x5efd:	jmp	0x3470


0x5f21:	add	rsp, 8
0x5f25:	mov	rsi, rbp
0x5f28:	mov	rdi, rbx
0x5f2b:	pop	rbx
0x5f2c:	pop	rbp
0x5f2d:	jmp	0x3490


0x327a:	test	eax, eax
0x327c:	jne	0x32c1


0x32c1:	lea	r12, [rip + 0x5ee2]
0x32c8:	mov	r13, qword ptr [rip + 0x208dd9]
0x32cf:	lea	rsi, [rip + 0x662a]
0x32d6:	xor	edi, edi
0x32d8:	mov	edx, 5
0x32dd:	call	0x1660


0x32e2:	mov	rsi, r13
0x32e5:	mov	rdi, rax
0x32e8:	call	0x1740


0x32ed:	jmp	0x31c1


0x31b9:	test	eax, eax
0x31bb:	jne	0x32c8


0x32c8:	mov	r13, qword ptr [rip + 0x208dd9]
0x32cf:	lea	rsi, [rip + 0x662a]
0x32d6:	xor	edi, edi
0x32d8:	mov	edx, 5
0x32dd:	call	0x1660


0x1967:	lea	rdi, [rip + 0x19b2]
0x196e:	call	0x9180


0x1973:	mov	rdi, qword ptr [rip + 0x20a72e]
0x197a:	xor	ecx, ecx
0x197c:	mov	edx, 1
0x1981:	xor	esi, esi
0x1983:	call	0x1820


0x1820:	jmp	qword ptr [rip + 0x20a732]




0x8bd4:	test	eax, eax
0x8bd6:	je	0x8c14


0x8bd8:	call	0x15d0


0x8bdd:	mov	r12d, dword ptr [rax]
0x8be0:	mov	rdi, rbx
0x8be3:	mov	rbp, rax
0x8be6:	call	0x1640


0x8beb:	test	r12d, r12d
0x8bee:	jne	0x8c20


0x8bf0:	pop	rbx
0x8bf1:	pop	rbp
0x8bf2:	pop	r12
0x8bf4:	ret	


0x8c20:	mov	dword ptr [rbp], r12d
0x8c24:	mov	eax, 0xffffffff
0x8c29:	jmp	0x8bf0


0x2e02:	test	eax, eax
0x2e04:	je	0x2d5b


0x2e0a:	mov	rdx, rbp
0x2e0d:	mov	esi, 3
0x2e12:	xor	edi, edi
0x2e14:	call	0x8100


0x65ab:	xor	ebx, ebx
0x65ad:	mov	dword ptr [rbp], r12d
0x65b1:	jmp	0x6541


0x6566:	test	eax, eax
0x6568:	jne	0x657d


0x656a:	mov	rsi, rbp
0x656d:	mov	edi, r12d
0x6570:	call	0x17f0


0x657d:	call	0x15d0


0x17f0:	jmp	qword ptr [rip + 0x20a74a]




0x6582:	mov	ebp, dword ptr [rax]
0x6584:	mov	rbx, rax
0x6587:	mov	edi, r12d
0x658a:	call	0x1710


0x658f:	mov	dword ptr [rbx], ebp
0x6591:	xor	ebx, ebx
0x6593:	jmp	0x6541


0x8ffa:	and	ebx, 0x20
0x8ffd:	test	ebx, ebx
0x8fff:	jne	0x9018


0x9001:	test	eax, eax
0x9003:	je	0x900f


0x9018:	test	eax, eax
0x901a:	jne	0x9038


0x900f:	pop	rbx
0x9010:	pop	rbp
0x9011:	pop	r12
0x9013:	ret	


0x9005:	test	r12, r12
0x9008:	mov	eax, 0xffffffff
0x900d:	je	0x9048


0x901c:	call	0x15d0


0x9038:	pop	rbx
0x9039:	mov	eax, 0xffffffff
0x903e:	pop	rbp
0x903f:	pop	r12
0x9041:	ret	


0x9048:	call	0x15d0


0x904d:	cmp	dword ptr [rax], 9
0x9050:	pop	rbx
0x9051:	pop	rbp
0x9052:	pop	r12
0x9054:	setne	al
0x9057:	movzx	eax, al
0x905a:	neg	eax
0x905c:	ret	


0x9021:	mov	dword ptr [rax], 0
0x9027:	mov	eax, 0xffffffff
0x902c:	pop	rbx
0x902d:	pop	rbp
0x902e:	pop	r12
0x9030:	ret	


0x3332:	test	eax, eax
0x3334:	je	0x334c


0x334c:	mov	rdi, qword ptr [rip + 0x208d8d]
0x3353:	call	0x8fe0


0x3336:	call	0x15d0


0x333b:	cmp	byte ptr [rip + 0x208dce], 0
0x3342:	mov	rbx, rax
0x3345:	je	0x3363


0x3363:	lea	rsi, [rip + 0x69fb]
0x336a:	xor	edi, edi
0x336c:	mov	edx, 5
0x3371:	call	0x1660


0x3347:	cmp	dword ptr [rax], 0x20
0x334a:	jne	0x3363


0x3376:	mov	rdi, qword ptr [rip + 0x208d9b]
0x337d:	mov	rbp, rax
0x3380:	test	rdi, rdi
0x3383:	je	0x33ad


0x33ad:	mov	esi, dword ptr [rbx]
0x33af:	lea	rdx, [rip + 0x69bf]
0x33b6:	mov	rcx, rax
0x33b9:	xor	edi, edi
0x33bb:	xor	eax, eax
0x33bd:	call	0x1830


0x3385:	call	0x80d0


0x33c2:	jmp	0x33a2


0x33a2:	mov	edi, dword ptr [rip + 0x208c78]
0x33a8:	call	0x15f0


0x15f0:	jmp	qword ptr [rip + 0x20a84a]




0x3358:	test	eax, eax
0x335a:	jne	0x33a2


0x335c:	add	rsp, 8
0x3360:	pop	rbx
0x3361:	pop	rbp
0x3362:	ret	


0x6575:	test	rax, rax
0x6578:	mov	rbx, rax
0x657b:	jne	0x6541


0x1988:	mov	byte ptr [rsp + 0x78], 0
0x198d:	mov	byte ptr [rsp + 0x2b], 0
0x1992:	nop	word ptr [rax + rax]
0x1998:	lea	rcx, [rip + 0x20a081]
0x199f:	lea	rdx, [rip + 0x78fa]
0x19a6:	xor	r8d, r8d
0x19a9:	mov	rsi, rbx
0x19ac:	mov	edi, r12d
0x19af:	call	0x16a0


0x16a0:	jmp	qword ptr [rip + 0x20a7f2]




0x19b4:	cmp	eax, -1
0x19b7:	je	0x1b3c


0x1b3c:	test	ebp, ebp
0x1b3e:	mov	qword ptr [rip + 0x20a5b7], 0x42
0x1b49:	mov	qword ptr [rip + 0x20a5a4], 0x40
0x1b54:	sete	al
0x1b57:	test	byte ptr [rsp + 0x78], al
0x1b5b:	jne	0x2a1b


0x19bd:	cmp	eax, 0x77
0x19c0:	je	0x1aa0


0x1b61:	cmp	byte ptr [rip + 0x20a4a8], 0xa
0x1b68:	je	0x1bda


0x2a1b:	mov	edx, 5
0x2a20:	lea	rsi, [rip + 0x6f59]
0x2a27:	jmp	0x1bbb


0x1aa0:	mov	byte ptr [rip + 0x20a64d], 0
0x1aa7:	mov	byte ptr [rip + 0x20a645], 1
0x1aae:	mov	byte ptr [rip + 0x20a63c], 0
0x1ab5:	jmp	0x1998


0x19c6:	jle	0x1a00


0x1bda:	cmp	byte ptr [rsp + 0x2b], 0
0x1bdf:	je	0x1bf4


0x1b6a:	cmp	byte ptr [rsp + 0x2b], 0
0x1b6f:	mov	edx, 5
0x1b74:	lea	rsi, [rip + 0x7e2d]
0x1b7b:	jne	0x1bbb


0x1bbb:	xor	edi, edi
0x1bbd:	call	0x1660


0x1998:	lea	rcx, [rip + 0x20a081]
0x199f:	lea	rdx, [rip + 0x78fa]
0x19a6:	xor	r8d, r8d
0x19a9:	mov	rsi, rbx
0x19ac:	mov	edi, r12d
0x19af:	call	0x16a0


0x1a00:	cmp	eax, 0x62
0x1a03:	je	0x1b20


0x19c8:	cmp	eax, 0x81
0x19cd:	je	0x1af0


0x1bf4:	test	ebp, ebp
0x1bf6:	js	0x1c0b


0x1be1:	cmp	byte ptr [rsp + 0x78], 0
0x1be6:	mov	edx, 5
0x1beb:	lea	rsi, [rip + 0x7df6]
0x1bf2:	jne	0x1bbb


0x1b7d:	cmp	byte ptr [rip + 0x20a56e], 0
0x1b84:	jne	0x2a2c


0x1b20:	mov	ebp, 1
0x1b25:	jmp	0x1998


0x1a09:	jle	0x1a50


0x1af0:	mov	byte ptr [rip + 0x20a5fd], 1
0x1af7:	mov	byte ptr [rip + 0x20a5f5], 0
0x1afe:	mov	byte ptr [rip + 0x20a5ec], 0
0x1b05:	jmp	0x1998


0x19d3:	jle	0x1a28


0x1c0b:	cmp	byte ptr [rip + 0x20a4e0], 0
0x1c12:	je	0x29e8


0x1bf8:	cmp	byte ptr [rsp + 0x2b], 0
0x1bfd:	mov	edx, 5
0x1c02:	lea	rsi, [rip + 0x7e1f]
0x1c09:	jne	0x1bbb


0x1b8a:	cmp	byte ptr [rip + 0x20a563], 0
0x1b91:	jne	0x2a00


0x2a2c:	mov	edx, 5
0x2a31:	lea	rsi, [rip + 0x7040]
0x2a38:	jmp	0x1bbb


0x1a50:	cmp	eax, 0xffffff7d
0x1a55:	jne	0x29d1


0x1a0b:	cmp	eax, 0x63
0x1a0e:	je	0x1b10


0x1a28:	cmp	eax, 0x7a
0x1a2b:	je	0x1b30


0x19d5:	cmp	eax, 0x83
0x19da:	je	0x1ae0


0x29e8:	cmp	byte ptr [rip + 0x209705], 0
0x29ef:	je	0x1b97


0x1c18:	cmp	byte ptr [rsp + 0x2b], 0
0x1c1d:	je	0x2a2c


0x1b97:	cmp	byte ptr [rip + 0x20a555], 0
0x1b9e:	je	0x1ea5


0x2a00:	mov	edx, 5
0x2a05:	lea	rsi, [rip + 0x70b4]
0x2a0c:	jmp	0x1bbb


0x1a5b:	lea	rax, [rip + 0x7831]
0x1a62:	mov	rdi, qword ptr [rip + 0x20a63f]
0x1a69:	mov	rcx, qword ptr [rip + 0x20a5a8]
0x1a70:	push	0
0x1a72:	lea	r9, [rip + 0x77fe]
0x1a79:	lea	r8, [rip + 0x7804]
0x1a80:	push	rax
0x1a81:	lea	rdx, [rip + 0x77aa]
0x1a88:	lea	rsi, [rip + 0x771b]
0x1a8f:	xor	eax, eax
0x1a91:	call	0x87c0


0x29d1:	cmp	eax, 0xffffff7e
0x29d6:	jne	0x1bd0


0x1b10:	mov	byte ptr [rsp + 0x2b], 1
0x1b15:	jmp	0x1998


0x1a14:	cmp	eax, 0x74
0x1a17:	jne	0x1bd0


0x1b30:	mov	byte ptr [rip + 0x20a4d9], 0
0x1b37:	jmp	0x1998


0x1a31:	add	eax, -0x80
0x1a34:	jne	0x1bd0


0x1ae0:	mov	byte ptr [rip + 0x20a609], 1
0x1ae7:	jmp	0x1998


0x19e0:	jl	0x1ac0


0x29f5:	cmp	byte ptr [rsp + 0x2b], 0
0x29fa:	jne	0x25ad


0x1c23:	cmp	byte ptr [rip + 0x20a4ca], 0
0x1c2a:	je	0x25ad


0x1ea5:	cmp	byte ptr [rip + 0x20a245], 1
0x1eac:	jne	0x1ec5


0x1ba4:	cmp	byte ptr [rsp + 0x2b], 0
0x1ba9:	mov	edx, 5
0x1bae:	lea	rsi, [rip + 0x7f4b]
0x1bb5:	jne	0x1c3d


0x29dc:	xor	edi, edi
0x29de:	call	0x2ea0


0x1bd0:	mov	edi, 1
0x1bd5:	call	0x2ea0


0x1a1d:	xor	ebp, ebp
0x1a1f:	jmp	0x1998


0x1a3a:	mov	byte ptr [rip + 0x20a6b1], 1
0x1a41:	jmp	0x1998


0x1ac0:	mov	byte ptr [rip + 0x20a62d], 0
0x1ac7:	mov	byte ptr [rip + 0x20a625], 0
0x1ace:	mov	byte ptr [rip + 0x20a61c], 1
0x1ad5:	jmp	0x1998


0x19e6:	cmp	eax, 0x84
0x19eb:	jne	0x1bd0


0x25ad:	cmp	byte ptr [rip + 0x209b3f], 0
0x25b4:	jne	0x1c3d


0x1c30:	cmp	byte ptr [rip + 0x20a4bc], 0
0x1c37:	je	0x1ea5


0x1eae:	cmp	byte ptr [rsp + 0x2b], 0
0x1eb3:	mov	edx, 5
0x1eb8:	lea	rsi, [rip + 0x7c81]
0x1ebf:	je	0x1bbb


0x1ec5:	cmp	byte ptr [rip + 0x20a224], 0
0x1ecc:	je	0x1c3d


0x1c3d:	cmp	ebp, -1
0x1c40:	jne	0x1c44


0x19f1:	mov	byte ptr [rsp + 0x78], 1
0x19f6:	mov	ebp, 1
0x19fb:	jmp	0x1998


0x25ba:	jmp	0x1ec5


0x1ed2:	cmp	byte ptr [rsp + 0x2b], 0
0x1ed7:	mov	edx, 5
0x1edc:	lea	rsi, [rip + 0x7c9d]
0x1ee3:	jne	0x1c3d


0x1c42:	xor	ebp, ebp
0x1c44:	movsxd	rax, r12d
0x1c47:	lea	rax, [rbx + rax*8]
0x1c4b:	mov	qword ptr [rsp + 0x48], rax
0x1c50:	movsxd	rax, dword ptr [rip + 0x20a461]
0x1c57:	cmp	eax, r12d
0x1c5a:	jne	0x1c75


0x1c44:	movsxd	rax, r12d
0x1c47:	lea	rax, [rbx + rax*8]
0x1c4b:	mov	qword ptr [rsp + 0x48], rax
0x1c50:	movsxd	rax, dword ptr [rip + 0x20a461]
0x1c57:	cmp	eax, r12d
0x1c5a:	jne	0x1c75


0x1ee9:	jmp	0x1bbb


0x1c5c:	mov	rdi, qword ptr [rsp + 0x48]
0x1c61:	lea	rsi, [rip + 0x819a]
0x1c68:	add	rdi, 8
0x1c6c:	mov	qword ptr [rdi - 8], rsi
0x1c70:	mov	qword ptr [rsp + 0x48], rdi
0x1c75:	lea	rax, [rbx + rax*8]
0x1c79:	cmp	qword ptr [rsp + 0x48], rax
0x1c7e:	mov	qword ptr [rsp + 0x18], rax
0x1c83:	jbe	0x2934


0x1c75:	lea	rax, [rbx + rax*8]
0x1c79:	cmp	qword ptr [rsp + 0x48], rax
0x1c7e:	mov	qword ptr [rsp + 0x18], rax
0x1c83:	jbe	0x2934


0x2934:	mov	byte ptr [rsp + 0x79], 1
0x2939:	jmp	0x2383


0x1c89:	cmp	ebp, 1
0x1c8c:	lea	r14, [rip + 0x80bd]
0x1c93:	mov	byte ptr [rsp + 0x79], 1
0x1c98:	sbb	eax, eax
0x1c9a:	and	eax, 0xfffffff6
0x1c9d:	add	eax, 0x2a
0x1ca0:	mov	dword ptr [rsp + 0x7c], eax
0x1ca4:	mov	byte ptr [rsp + 0x7b], al
0x1ca8:	nop	dword ptr [rax + rax]
0x1cb0:	mov	rax, qword ptr [rsp + 0x18]
0x1cb5:	cmp	byte ptr [rsp + 0x2b], 0
0x1cba:	mov	rsi, qword ptr [rax]
0x1cbd:	mov	qword ptr [rsp + 0x20], rsi
0x1cc2:	je	0x2340


0x2383:	cmp	byte ptr [rip + 0x209d7e], 0
0x238a:	jne	0x2700


0x2340:	lea	rax, [rsp + 0x98]
0x2348:	lea	rbx, [rsp + 0xa0]
0x2350:	mov	rdi, qword ptr [rsp + 0x20]
0x2355:	mov	rdx, rax
0x2358:	mov	rsi, rbx
0x235b:	call	0x2d00


0x1cc8:	lea	rdi, [rip + 0x8133]
0x1ccf:	mov	ecx, 2
0x1cd4:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2390:	movzx	eax, byte ptr [rsp + 0x79]
0x2395:	xor	eax, 1
0x2398:	mov	rdi, qword ptr [rsp + 0xf8]
0x23a0:	xor	rdi, qword ptr fs:[0x28]
0x23a9:	movzx	eax, al
0x23ac:	jne	0x29e3


0x2700:	mov	rdi, qword ptr [rip + 0x2099a9]
0x2707:	call	0x8bb0


0x1cd4:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1cd6:	seta	al
0x1cd9:	sbb	al, 0
0x1cdb:	movsx	eax, al
0x1cde:	test	eax, eax
0x1ce0:	mov	dword ptr [rsp + 0x2c], eax
0x1ce4:	jne	0x2415


0x23b2:	add	rsp, 0x108
0x23b9:	pop	rbx
0x23ba:	pop	rbp
0x23bb:	pop	r12
0x23bd:	pop	r13
0x23bf:	pop	r14
0x23c1:	pop	r15
0x23c3:	ret	


0x29e3:	call	0x1690


0x1cea:	lea	rsi, [rip + 0x75b5]
0x1cf1:	mov	edx, 5
0x1cf6:	xor	edi, edi
0x1cf8:	mov	byte ptr [rip + 0x20a409], 1
0x1cff:	call	0x1660


0x2415:	mov	rdi, qword ptr [rsp + 0x20]
0x241a:	lea	rsi, [rip + 0x6e61]
0x2421:	call	0x6520


0x2426:	test	rax, rax
0x2429:	mov	r12, rax
0x242c:	jne	0x1d10


0x2432:	mov	rdx, qword ptr [rsp + 0x20]
0x2437:	mov	esi, 3
0x243c:	xor	edi, edi
0x243e:	call	0x8100


0x1d10:	lea	rax, [rsp + 0x98]
0x1d18:	mov	qword ptr [rsp + 0x90], 0
0x1d24:	mov	qword ptr [rsp + 0x98], 0
0x1d30:	mov	byte ptr [rsp + 0x7a], 0
0x1d35:	mov	byte ptr [rsp + 0x30], 0
0x1d3a:	xor	r13d, r13d
0x1d3d:	mov	qword ptr [rsp + 0x10], rax
0x1d42:	lea	rax, [rsp + 0x90]
0x1d4a:	mov	qword ptr [rsp + 0x58], 0
0x1d53:	mov	qword ptr [rsp + 0x50], 0
0x1d5c:	mov	ebp, 1
0x1d61:	mov	qword ptr [rsp + 8], rax
0x1d66:	lea	rax, [rsp + 0x8f]
0x1d6e:	mov	qword ptr [rsp + 0x40], rax
0x1d73:	lea	rax, [rsp + 0xd0]
0x1d7b:	mov	qword ptr [rsp + 0x38], rax
0x1d80:	mov	rsi, qword ptr [rsp + 0x10]
0x1d85:	mov	rdi, qword ptr [rsp + 8]
0x1d8a:	mov	rcx, r12
0x1d8d:	mov	edx, 0xa
0x1d92:	call	0x1760


0x1760:	jmp	qword ptr [rip + 0x20a792]




0x270c:	add	eax, 1
0x270f:	jne	0x2390


0x2715:	lea	rsi, [rip + 0x6b8a]
0x271c:	mov	edx, 5
0x2721:	xor	edi, edi
0x2723:	call	0x1660


0x2360:	test	al, al
0x2362:	jne	0x2467


0x2368:	mov	byte ptr [rsp + 0x79], 0
0x236d:	add	qword ptr [rsp + 0x18], 8
0x2373:	mov	rax, qword ptr [rsp + 0x18]
0x2378:	cmp	qword ptr [rsp + 0x48], rax
0x237d:	ja	0x1cb0


0x2467:	mov	rdi, qword ptr [rsp + 0x20]
0x246c:	mov	esi, 0x5c
0x2471:	call	0x16c0


0x1cb0:	mov	rax, qword ptr [rsp + 0x18]
0x1cb5:	cmp	byte ptr [rsp + 0x2b], 0
0x1cba:	mov	rsi, qword ptr [rax]
0x1cbd:	mov	qword ptr [rsp + 0x20], rsi
0x1cc2:	je	0x2340


0x16c0:	jmp	qword ptr [rip + 0x20a7e2]




0x1a96:	xor	edi, edi
0x1a98:	call	0x1880


0x2728:	mov	rbx, rax
0x272b:	call	0x15d0


0x2730:	mov	esi, dword ptr [rax]
0x2732:	mov	rdx, rbx
0x2735:	mov	edi, 1
0x273a:	xor	eax, eax
0x273c:	call	0x1830


0x2741:	mov	rsi, r15
0x2744:	mov	rdi, rbx
0x2747:	mov	qword ptr [rsp + 0x60], r8
0x274c:	sub	rsi, rax
0x274f:	call	0x2b50


0x2754:	mov	r8, qword ptr [rsp + 0x60]
0x2759:	test	rax, rax
0x275c:	setne	al
0x275f:	test	al, al
0x2761:	jne	0x1fa6


0x2767:	jmp	0x1e44


0x1fa6:	mov	eax, dword ptr [rsp + 0x2c]
0x1faa:	test	eax, eax
0x1fac:	jne	0x1fcc


0x1e44:	add	r13, 1
0x1e48:	cmp	byte ptr [rip + 0x20a2a4], 0
0x1e4f:	jne	0x21d0


0x1fae:	lea	rdi, [rip + 0x7e4d]
0x1fb5:	mov	ecx, 2
0x1fba:	mov	rsi, rbx
0x1fbd:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1fcc:	xor	r15d, r15d
0x1fcf:	cmp	byte ptr [rip + 0x20a11e], 0
0x1fd6:	jne	0x1ff9


0x1e55:	test	byte ptr [r12], 0x30
0x1e5a:	jne	0x209c


0x21d0:	mov	rdx, qword ptr [rsp + 0x20]
0x21d5:	xor	edi, edi
0x21d7:	mov	esi, 3
0x21dc:	call	0x8100


0x1fbd:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1fbf:	seta	al
0x1fc2:	sbb	al, 0
0x1fc4:	test	al, al
0x1fc6:	je	0x1e44


0x1fd8:	mov	esi, 0xa
0x1fdd:	mov	rdi, rbx
0x1fe0:	mov	qword ptr [rsp + 0x30], r8
0x1fe5:	call	0x16c0


0x1ff9:	mov	rdx, qword ptr [rsp + 0x40]
0x1ffe:	mov	rsi, qword ptr [rsp + 0x38]
0x2003:	mov	rdi, rbx
0x2006:	mov	qword ptr [rsp + 0x30], r8
0x200b:	call	0x2d00


0x1e60:	add	rbp, 1
0x1e64:	jne	0x1d80


0x209c:	mov	rdi, qword ptr [rsp + 0x90]
0x20a4:	call	0x15b0


0x1e6a:	mov	rdx, qword ptr [rsp + 0x20]
0x1e6f:	mov	esi, 3
0x1e74:	xor	edi, edi
0x1e76:	call	0x8100


0x1d80:	mov	rsi, qword ptr [rsp + 0x10]
0x1d85:	mov	rdi, qword ptr [rsp + 8]
0x1d8a:	mov	rcx, r12
0x1d8d:	mov	edx, 0xa
0x1d92:	call	0x1760


0x20a9:	mov	ebx, dword ptr [r12]
0x20ad:	and	ebx, 0x20
0x20b0:	jne	0x256e


0x20b6:	cmp	dword ptr [rsp + 0x2c], 0
0x20bb:	jne	0x2628


0x256e:	mov	rdx, qword ptr [rsp + 0x20]
0x2573:	mov	esi, 3
0x2578:	xor	edi, edi
0x257a:	call	0x8100


0x20c1:	cmp	byte ptr [rsp + 0x30], 0
0x20c6:	je	0x2645


0x2628:	mov	rdi, r12
0x262b:	call	0x8bb0


0x2645:	mov	rdx, qword ptr [rsp + 0x20]
0x264a:	xor	edi, edi
0x264c:	mov	esi, 3
0x2651:	call	0x8100


0x20cc:	cmp	byte ptr [rip + 0x20a021], 0
0x20d3:	jne	0x255e


0x20d9:	test	r13, r13
0x20dc:	je	0x210d


0x255e:	cmp	byte ptr [rsp + 0x7a], 0
0x2563:	jne	0x219d


0x210d:	cmp	qword ptr [rsp + 0x50], 0
0x2113:	je	0x2149


0x20de:	lea	rdx, [rip + 0x7b43]
0x20e5:	lea	rsi, [rip + 0x7b6c]
0x20ec:	mov	rcx, r13
0x20ef:	xor	edi, edi
0x20f1:	mov	r8d, 5
0x20f7:	call	0x1860


0x2569:	jmp	0x21be


0x219d:	mov	rax, qword ptr [rsp + 0x50]
0x21a2:	or	rax, qword ptr [rsp + 0x58]
0x21a7:	jne	0x21be


0x2149:	cmp	qword ptr [rsp + 0x58], 0
0x214f:	je	0x2185


0x2115:	mov	r15, qword ptr [rsp + 0x50]
0x211a:	lea	rdx, [rip + 0x7b67]
0x2121:	lea	rsi, [rip + 0x7b90]
0x2128:	xor	edi, edi
0x212a:	mov	r8d, 5
0x2130:	mov	rcx, r15
0x2133:	call	0x1860


0x1860:	jmp	qword ptr [rip + 0x20a712]


0x21be:	mov	eax, ebx
0x21c0:	and	eax, 1
0x21c3:	and	byte ptr [rsp + 0x79], al
0x21c7:	jmp	0x236d


0x21a9:	movzx	eax, byte ptr [rip + 0x209f40]
0x21b0:	xor	eax, 1
0x21b3:	test	r13, r13
0x21b6:	sete	bl
0x21b9:	or	eax, ebx
0x21bb:	movzx	ebx, al
0x21be:	mov	eax, ebx
0x21c0:	and	eax, 1
0x21c3:	and	byte ptr [rsp + 0x79], al
0x21c7:	jmp	0x236d


0x2185:	cmp	byte ptr [rip + 0x209f66], 0
0x218c:	je	0x255e


0x2151:	mov	r15, qword ptr [rsp + 0x58]
0x2156:	lea	rdx, [rip + 0x7b8b]
0x215d:	lea	rsi, [rip + 0x7bb4]
0x2164:	xor	edi, edi
0x2166:	mov	r8d, 5
0x216c:	mov	rcx, r15
0x216f:	call	0x1860




0x236d:	add	qword ptr [rsp + 0x18], 8
0x2373:	mov	rax, qword ptr [rsp + 0x18]
0x2378:	cmp	qword ptr [rsp + 0x48], rax
0x237d:	ja	0x1cb0


0x2192:	cmp	byte ptr [rsp + 0x7a], 0
0x2197:	je	0x28f7


0x28f7:	mov	rdx, qword ptr [rsp + 0x20]
0x28fc:	xor	edi, edi
0x28fe:	mov	esi, 3
0x2903:	call	0x8100


0x2630:	test	eax, eax
0x2632:	je	0x20c1


0x2638:	jmp	0x2432


0x2010:	test	al, al
0x2012:	mov	r9d, eax
0x2015:	mov	r8, qword ptr [rsp + 0x30]
0x201a:	jne	0x2220


0x2020:	add	qword ptr [rsp + 0x50], 1
0x2026:	cmp	byte ptr [rip + 0x20a0c7], 0
0x202d:	jne	0x2088


0x2220:	cmp	byte ptr [rip + 0x209ecb], 0
0x2227:	je	0x2237


0x202f:	test	r15d, r15d
0x2032:	je	0x2054


0x2088:	movzx	eax, byte ptr [rsp + 0x2b]
0x208d:	test	byte ptr [r12], 0x30
0x2092:	mov	byte ptr [rsp + 0x30], al
0x2096:	je	0x1e60


0x2237:	mov	rcx, qword ptr [rip + 0x209eba]
0x223e:	mov	qword ptr [rsp + 0x68], r8
0x2243:	shr	rcx, 1
0x2246:	je	0x25bf


0x2229:	cmp	byte ptr [rsp + 0x8f], 0
0x2231:	jne	0x2088


0x2054:	mov	esi, r15d
0x2057:	mov	rdi, rbx
0x205a:	call	0x2c30


0x2034:	mov	rdi, qword ptr [rip + 0x20a06d]
0x203b:	mov	rax, qword ptr [rdi + 0x28]
0x203f:	cmp	rax, qword ptr [rdi + 0x30]
0x2043:	jae	0x2964


0x25bf:	xor	edx, edx
0x25c1:	movzx	eax, byte ptr [rip + 0x209b2c]
0x25c8:	test	al, al
0x25ca:	mov	byte ptr [rsp + 0x7a], al
0x25ce:	jne	0x2088


0x224c:	mov	qword ptr [rsp + 0x60], rcx
0x2251:	mov	byte ptr [rsp + 0x30], r9b
0x2256:	call	0x18d0


0x2049:	lea	rdx, [rax + 1]
0x204d:	mov	qword ptr [rdi + 0x28], rdx
0x2051:	mov	byte ptr [rax], 0x5c
0x2054:	mov	esi, r15d
0x2057:	mov	rdi, rbx
0x205a:	call	0x2c30


0x2964:	mov	esi, 0x5c
0x2969:	call	0x16d0


0x25d4:	movzx	eax, byte ptr [rip + 0x209b16]
0x25db:	test	al, al
0x25dd:	mov	byte ptr [rsp + 0x7a], al
0x25e1:	jne	0x2088


0x18d0:	jmp	qword ptr [rip + 0x20a6da]


0x25e7:	test	r15d, r15d
0x25ea:	jne	0x2a11




0x25f0:	xor	esi, esi
0x25f2:	mov	rdi, rbx
0x25f5:	mov	byte ptr [rsp + 0x30], r9b
0x25fa:	call	0x2c30


0x2a11:	mov	byte ptr [rsp + 0x7a], r9b
0x2a16:	jmp	0x22e3


0x22e3:	mov	rdi, qword ptr [rip + 0x209dbe]
0x22ea:	mov	rax, qword ptr [rdi + 0x28]
0x22ee:	cmp	rax, qword ptr [rdi + 0x30]
0x22f2:	jae	0x299f


0x22f8:	lea	rsi, [rax + 1]
0x22fc:	mov	qword ptr [rdi + 0x28], rsi
0x2300:	mov	byte ptr [rax], 0x5c
0x2303:	mov	esi, 1
0x2308:	mov	rdi, rbx
0x230b:	mov	qword ptr [rsp + 0x60], rcx
0x2310:	mov	qword ptr [rsp + 0x30], rdx
0x2315:	call	0x2c30


0x299f:	mov	esi, 0x5c
0x29a4:	mov	qword ptr [rsp + 0x60], rcx
0x29a9:	mov	qword ptr [rsp + 0x30], rdx
0x29ae:	call	0x16d0


0x29b3:	mov	rdx, qword ptr [rsp + 0x30]
0x29b8:	mov	rcx, qword ptr [rsp + 0x60]
0x29bd:	jmp	0x2303


0x2303:	mov	esi, 1
0x2308:	mov	rdi, rbx
0x230b:	mov	qword ptr [rsp + 0x60], rcx
0x2310:	mov	qword ptr [rsp + 0x30], rdx
0x2315:	call	0x2c30


0x296e:	jmp	0x2054


0x231a:	mov	rdx, qword ptr [rsp + 0x30]
0x231f:	mov	rcx, qword ptr [rsp + 0x60]
0x2324:	cmp	rdx, rcx
0x2327:	je	0x260a


0x260a:	cmp	byte ptr [rip + 0x209ae0], 0
0x2611:	jne	0x2088


0x232d:	mov	edx, 5
0x2332:	lea	rsi, [rip + 0x6fac]
0x2339:	jmp	0x206b


0x2617:	mov	edx, 5
0x261c:	lea	rsi, [rip + 0x6cc9]
0x2623:	jmp	0x206b


0x206b:	xor	edi, edi
0x206d:	call	0x1660


0x25ff:	movzx	r9d, byte ptr [rsp + 0x30]
0x2605:	mov	byte ptr [rsp + 0x7a], r9b
0x260a:	cmp	byte ptr [rip + 0x209ae0], 0
0x2611:	jne	0x2088


0x205f:	lea	rsi, [rip + 0x726b]
0x2066:	mov	edx, 5
0x206b:	xor	edi, edi
0x206d:	call	0x1660


0x2072:	lea	rsi, [rip + 0x82d8]
0x2079:	mov	rdx, rax
0x207c:	mov	edi, 1
0x2081:	xor	eax, eax
0x2083:	call	0x1810


0x1d04:	mov	r12, qword ptr [rip + 0x20a3a5]
0x1d0b:	mov	qword ptr [rsp + 0x20], rax
0x1d10:	lea	rax, [rsp + 0x98]
0x1d18:	mov	qword ptr [rsp + 0x90], 0
0x1d24:	mov	qword ptr [rsp + 0x98], 0
0x1d30:	mov	byte ptr [rsp + 0x7a], 0
0x1d35:	mov	byte ptr [rsp + 0x30], 0
0x1d3a:	xor	r13d, r13d
0x1d3d:	mov	qword ptr [rsp + 0x10], rax
0x1d42:	lea	rax, [rsp + 0x90]
0x1d4a:	mov	qword ptr [rsp + 0x58], 0
0x1d53:	mov	qword ptr [rsp + 0x50], 0
0x1d5c:	mov	ebp, 1
0x1d61:	mov	qword ptr [rsp + 8], rax
0x1d66:	lea	rax, [rsp + 0x8f]
0x1d6e:	mov	qword ptr [rsp + 0x40], rax
0x1d73:	lea	rax, [rsp + 0xd0]
0x1d7b:	mov	qword ptr [rsp + 0x38], rax
0x1d80:	mov	rsi, qword ptr [rsp + 0x10]
0x1d85:	mov	rdi, qword ptr [rsp + 8]
0x1d8a:	mov	rcx, r12
0x1d8d:	mov	edx, 0xa
0x1d92:	call	0x1760


0x1bc2:	xor	esi, esi
0x1bc4:	mov	rdx, rax
0x1bc7:	xor	edi, edi
0x1bc9:	xor	eax, eax
0x1bcb:	call	0x1830


0x225b:	xor	edx, edx
0x225d:	mov	rdi, qword ptr [rax]
0x2260:	movzx	r9d, byte ptr [rsp + 0x30]
0x2266:	mov	rcx, qword ptr [rsp + 0x60]
0x226b:	mov	r8, qword ptr [rsp + 0x68]
0x2270:	mov	r10, qword ptr [rsp + 0x38]
0x2275:	jmp	0x22a0


0x22a0:	movzx	eax, byte ptr [r10 + rdx]
0x22a5:	movzx	r11d, byte ptr [r8 + rdx*2]
0x22aa:	mov	esi, eax
0x22ac:	shr	sil, 4
0x22b0:	and	esi, 0xf
0x22b3:	movsx	esi, byte ptr [r14 + rsi]
0x22b8:	cmp	dword ptr [rdi + r11*4], esi
0x22bc:	je	0x2280


0x2280:	movzx	esi, byte ptr [r8 + rdx*2 + 1]
0x2286:	and	eax, 0xf
0x2289:	movsx	eax, byte ptr [r14 + rax]
0x228e:	cmp	dword ptr [rdi + rsi*4], eax
0x2291:	jne	0x22be


0x22be:	cmp	rcx, rdx
0x22c1:	je	0x25c1


0x2293:	add	rdx, 1
0x2297:	cmp	rcx, rdx
0x229a:	je	0x263d


0x25c1:	movzx	eax, byte ptr [rip + 0x209b2c]
0x25c8:	test	al, al
0x25ca:	mov	byte ptr [rsp + 0x7a], al
0x25ce:	jne	0x2088


0x22c7:	add	qword ptr [rsp + 0x58], 1
0x22cd:	cmp	byte ptr [rip + 0x209e20], 0
0x22d4:	jne	0x2088


0x263d:	mov	rdx, rcx
0x2640:	jmp	0x25c1


0x22da:	test	r15d, r15d
0x22dd:	je	0x28e8


0x28e8:	xor	esi, esi
0x28ea:	mov	rdi, rbx
0x28ed:	call	0x2c30


0x28f2:	jmp	0x232d


0x2174:	mov	rcx, r15
0x2177:	mov	rdx, rax
0x217a:	xor	esi, esi
0x217c:	xor	edi, edi
0x217e:	xor	eax, eax
0x2180:	call	0x1830


0x2138:	mov	rcx, r15
0x213b:	mov	rdx, rax
0x213e:	xor	esi, esi
0x2140:	xor	edi, edi
0x2142:	xor	eax, eax
0x2144:	call	0x1830


0x20fc:	mov	rcx, r13
0x20ff:	mov	rdx, rax
0x2102:	xor	esi, esi
0x2104:	xor	edi, edi
0x2106:	xor	eax, eax
0x2108:	call	0x1830


0x1fea:	mov	r8, qword ptr [rsp + 0x30]
0x1fef:	xor	r15d, r15d
0x1ff2:	test	rax, rax
0x1ff5:	setne	r15b
0x1ff9:	mov	rdx, qword ptr [rsp + 0x40]
0x1ffe:	mov	rsi, qword ptr [rsp + 0x38]
0x2003:	mov	rdi, rbx
0x2006:	mov	qword ptr [rsp + 0x30], r8
0x200b:	call	0x2d00


0x2476:	test	rax, rax
0x2479:	je	0x2851


0x2851:	mov	rdi, qword ptr [rsp + 0x20]
0x2856:	mov	esi, 0xa
0x285b:	call	0x16c0


0x247f:	cmp	byte ptr [rip + 0x209b8a], 0xa
0x2486:	je	0x276c


0x276c:	cmp	byte ptr [rsp + 0x78], 0
0x2771:	je	0x2817


0x248c:	cmp	byte ptr [rsp + 0x78], 0
0x2491:	jne	0x286e


0x2817:	mov	rdi, qword ptr [rip + 0x20988a]
0x281e:	mov	rax, qword ptr [rdi + 0x28]
0x2822:	cmp	rax, qword ptr [rdi + 0x30]
0x2826:	jae	0x2973


0x2777:	mov	rdi, qword ptr [rip + 0x20992a]
0x277e:	mov	rax, qword ptr [rdi + 0x28]
0x2782:	cmp	rax, qword ptr [rdi + 0x30]
0x2786:	jae	0x29c2


0x2497:	mov	rax, qword ptr [rip + 0x209c5a]
0x249e:	xor	ebp, ebp
0x24a0:	shr	rax, 1
0x24a3:	je	0x24e2


0x286e:	mov	rcx, qword ptr [rip + 0x209833]
0x2875:	lea	rdi, [rip + 0x6938]
0x287c:	mov	edx, 6
0x2881:	mov	esi, 1
0x2886:	xor	ebp, ebp
0x2888:	call	0x17d0


0x282c:	lea	rdx, [rax + 1]
0x2830:	mov	ebp, 1
0x2835:	mov	qword ptr [rdi + 0x28], rdx
0x2839:	mov	byte ptr [rax], 0x5c
0x283c:	mov	rax, qword ptr [rip + 0x2098b5]
0x2843:	shr	rax, 1
0x2846:	jne	0x24a5


0x2973:	mov	esi, 0x5c
0x2978:	call	0x16d0


0x278c:	lea	rdx, [rax + 1]
0x2790:	mov	qword ptr [rdi + 0x28], rdx
0x2794:	mov	byte ptr [rax], 0x5c
0x2797:	mov	rcx, qword ptr [rip + 0x20990a]
0x279e:	lea	rdi, [rip + 0x6a0f]
0x27a5:	mov	edx, 6
0x27aa:	mov	esi, 1
0x27af:	call	0x17d0


0x29c2:	mov	esi, 0x5c
0x29c7:	call	0x16d0


0x24e2:	mov	rdi, qword ptr [rip + 0x209bbf]
0x24e9:	mov	rax, qword ptr [rdi + 0x28]
0x24ed:	cmp	qword ptr [rdi + 0x30], rax
0x24f1:	jbe	0x2990


0x24a5:	xor	r12d, r12d
0x24a8:	nop	dword ptr [rax + rax]
0x24b0:	movzx	edx, byte ptr [rbx + r12]
0x24b5:	lea	rsi, [rip + 0x6e5b]
0x24bc:	xor	eax, eax
0x24be:	mov	edi, 1
0x24c3:	add	r12, 1
0x24c7:	call	0x1810


0x284c:	jmp	0x24e2


0x2990:	mov	esi, 0x20
0x2995:	call	0x16d0


0x24f7:	lea	rdx, [rax + 1]
0x24fb:	mov	qword ptr [rdi + 0x28], rdx
0x24ff:	mov	byte ptr [rax], 0x20
0x2502:	mov	rdi, qword ptr [rip + 0x209b9f]
0x2509:	mov	rax, qword ptr [rdi + 0x28]
0x250d:	cmp	rax, qword ptr [rdi + 0x30]
0x2511:	jae	0x2982


0x2517:	lea	rdx, [rax + 1]
0x251b:	mov	qword ptr [rdi + 0x28], rdx
0x251f:	movzx	edi, byte ptr [rsp + 0x7b]
0x2524:	mov	byte ptr [rax], dil
0x2527:	mov	rdi, qword ptr [rsp + 0x20]
0x252c:	mov	esi, ebp
0x252e:	call	0x2c30


0x2982:	mov	esi, dword ptr [rsp + 0x7c]
0x2986:	call	0x16d0


0x2533:	mov	rdi, qword ptr [rip + 0x209b6e]
0x253a:	movzx	edx, byte ptr [rip + 0x209acf]
0x2541:	mov	rax, qword ptr [rdi + 0x28]
0x2545:	cmp	rax, qword ptr [rdi + 0x30]
0x2549:	jae	0x2957


0x254f:	lea	rcx, [rax + 1]
0x2553:	mov	qword ptr [rdi + 0x28], rcx
0x2557:	mov	byte ptr [rax], dl
0x2559:	jmp	0x236d


0x2957:	movzx	esi, dl
0x295a:	call	0x16d0


0x24cc:	mov	rax, qword ptr [rip + 0x209c25]
0x24d3:	shr	rax, 1
0x24d6:	cmp	rax, r12
0x24d9:	ja	0x24b0


0x24db:	cmp	byte ptr [rsp + 0x78], 0
0x24e0:	jne	0x2533


0x24b0:	movzx	edx, byte ptr [rbx + r12]
0x24b5:	lea	rsi, [rip + 0x6e5b]
0x24bc:	xor	eax, eax
0x24be:	mov	edi, 1
0x24c3:	add	r12, 1
0x24c7:	call	0x1810


0x295f:	jmp	0x236d


0x298b:	jmp	0x2527


0x2527:	mov	rdi, qword ptr [rsp + 0x20]
0x252c:	mov	esi, ebp
0x252e:	call	0x2c30


0x299a:	jmp	0x2502


0x2502:	mov	rdi, qword ptr [rip + 0x209b9f]
0x2509:	mov	rax, qword ptr [rdi + 0x28]
0x250d:	cmp	rax, qword ptr [rdi + 0x30]
0x2511:	jae	0x2982


0x29cc:	jmp	0x2797


0x2797:	mov	rcx, qword ptr [rip + 0x20990a]
0x279e:	lea	rdi, [rip + 0x6a0f]
0x27a5:	mov	edx, 6
0x27aa:	mov	esi, 1
0x27af:	call	0x17d0


0x297d:	jmp	0x27fd


0x27fd:	mov	rax, qword ptr [rip + 0x2098f4]
0x2804:	mov	ebp, 1
0x2809:	shr	rax, 1
0x280c:	jne	0x24a5


0x2812:	jmp	0x24db


0x27b4:	mov	rcx, qword ptr [rip + 0x2098ed]
0x27bb:	lea	rdi, [rip + 0x6b5a]
0x27c2:	mov	edx, 2
0x27c7:	mov	esi, 1
0x27cc:	call	0x17d0


0x27d1:	mov	rdi, qword ptr [rsp + 0x20]
0x27d6:	mov	esi, 1
0x27db:	call	0x2c30


0x27e0:	mov	rcx, qword ptr [rip + 0x2098c1]
0x27e7:	lea	rdi, [rip + 0x6b31]
0x27ee:	mov	edx, 4
0x27f3:	mov	esi, 1
0x27f8:	call	0x17d0


0x288d:	mov	rcx, qword ptr [rip + 0x209814]
0x2894:	lea	rdi, [rip + 0x6a81]
0x289b:	mov	edx, 2
0x28a0:	mov	esi, 1
0x28a5:	call	0x17d0


0x28aa:	mov	rdi, qword ptr [rsp + 0x20]
0x28af:	xor	esi, esi
0x28b1:	call	0x2c30


0x28b6:	mov	rcx, qword ptr [rip + 0x2097eb]
0x28bd:	lea	rdi, [rip + 0x6a5b]
0x28c4:	mov	edx, 4
0x28c9:	mov	esi, 1
0x28ce:	call	0x17d0


0x28d3:	mov	rax, qword ptr [rip + 0x20981e]
0x28da:	shr	rax, 1
0x28dd:	jne	0x24a5


0x28e3:	jmp	0x2533


0x2860:	test	rax, rax
0x2863:	jne	0x247f


0x2869:	jmp	0x248c


0x1d97:	test	rax, rax
0x1d9a:	jle	0x209c


0x1da0:	mov	rbx, qword ptr [rsp + 0x90]
0x1da8:	movzx	ecx, byte ptr [rbx]
0x1dab:	cmp	cl, 0x23
0x1dae:	je	0x1e55


0x1db4:	cmp	byte ptr [rbx + rax - 1], 0xa
0x1db9:	mov	r15, rax
0x1dbc:	jne	0x1dd2


0x1dbe:	sub	r15, 1
0x1dc2:	mov	byte ptr [rbx + r15], 0
0x1dc7:	mov	rbx, qword ptr [rsp + 0x90]
0x1dcf:	movzx	ecx, byte ptr [rbx]
0x1dd2:	cmp	cl, 9
0x1dd5:	je	0x1dde


0x1dd2:	cmp	cl, 9
0x1dd5:	je	0x1dde


0x1dde:	xor	edx, edx
0x1de0:	add	rdx, 1
0x1de4:	movzx	ecx, byte ptr [rbx + rdx]
0x1de8:	cmp	cl, 0x20
0x1deb:	je	0x1de0


0x1dd7:	xor	edx, edx
0x1dd9:	cmp	cl, 0x20
0x1ddc:	jne	0x1df2


0x1de0:	add	rdx, 1
0x1de4:	movzx	ecx, byte ptr [rbx + rdx]
0x1de8:	cmp	cl, 0x20
0x1deb:	je	0x1de0


0x1ded:	cmp	cl, 9
0x1df0:	je	0x1de0


0x1df2:	xor	r9d, r9d
0x1df5:	cmp	cl, 0x5c
0x1df8:	jne	0x1e04


0x1dfa:	movzx	r9d, byte ptr [rsp + 0x2b]
0x1e00:	add	rdx, 1
0x1e04:	lea	r8, [rbx + rdx]
0x1e08:	lea	rdi, [rip + 0x73a5]
0x1e0f:	mov	ecx, 6
0x1e14:	mov	rsi, r8
0x1e17:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1e04:	lea	r8, [rbx + rdx]
0x1e08:	lea	rdi, [rip + 0x73a5]
0x1e0f:	mov	ecx, 6
0x1e14:	mov	rsi, r8
0x1e17:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1e17:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1e19:	seta	al
0x1e1c:	sbb	al, 0
0x1e1e:	test	al, al
0x1e20:	jne	0x1ef0


0x1e26:	movzx	eax, byte ptr [rbx + rdx + 6]
0x1e2b:	lea	rcx, [rdx + 6]
0x1e2f:	cmp	al, 0x20
0x1e31:	jne	0x1e3c


0x1ef0:	mov	rcx, r15
0x1ef3:	xor	eax, eax
0x1ef5:	sub	rcx, rdx
0x1ef8:	cmp	byte ptr [r8], 0x5c
0x1efc:	sete	al
0x1eff:	add	rax, qword ptr [rip + 0x20a1fa]
0x1f06:	cmp	rcx, rax
0x1f09:	jb	0x1e44


0x1e33:	movzx	eax, byte ptr [rbx + rdx + 7]
0x1e38:	lea	rcx, [rdx + 7]
0x1e3c:	cmp	al, 0x28
0x1e3e:	je	0x23c4


0x1e3c:	cmp	al, 0x28
0x1e3e:	je	0x23c4


0x1f0f:	add	rdx, qword ptr [rip + 0x20a1e2]
0x1f16:	lea	rcx, [rbx + rdx]
0x1f1a:	movzx	eax, byte ptr [rcx]
0x1f1d:	cmp	al, 0x20
0x1f1f:	je	0x1f29


0x23c4:	add	rcx, 1
0x23c8:	sub	r15, rcx
0x23cb:	je	0x1e44


0x1f29:	mov	byte ptr [rcx], 0
0x1f2c:	mov	rdi, r8
0x1f2f:	mov	qword ptr [rsp + 0x70], rdx
0x1f34:	mov	byte ptr [rsp + 0x68], r9b
0x1f39:	mov	qword ptr [rsp + 0x60], r8
0x1f3e:	call	0x2bd0


0x1f21:	cmp	al, 9
0x1f23:	jne	0x1e44


0x23d1:	mov	r10, r15
0x23d4:	add	rbx, rcx
0x23d7:	sub	r10, 1
0x23db:	je	0x2401


0x2401:	cmp	byte ptr [rbx], 0x29
0x2404:	jne	0x1e44


0x23dd:	cmp	byte ptr [rbx + r15 - 1], 0x29
0x23e3:	jne	0x23fb


0x240a:	mov	r11, rbx
0x240d:	xor	r10d, r10d
0x2410:	jmp	0x268d


0x23e5:	jmp	0x2689


0x23fb:	sub	r10, 1
0x23ff:	jne	0x23f0


0x268d:	test	r9b, r9b
0x2690:	jne	0x293e


0x2689:	lea	r11, [rbx + r10]
0x268d:	test	r9b, r9b
0x2690:	jne	0x293e


0x23f0:	cmp	byte ptr [rbx + r10], 0x29
0x23f5:	je	0x2689


0x2696:	add	r10, 1
0x269a:	mov	byte ptr [r11], 0
0x269e:	jmp	0x26a4


0x293e:	mov	rsi, r10
0x2941:	mov	rdi, rbx
0x2944:	call	0x2b50


0x26a4:	movzx	eax, byte ptr [rbx + r10]
0x26a9:	cmp	al, 0x20
0x26ab:	je	0x26a0


0x26a0:	add	r10, 1
0x26a4:	movzx	eax, byte ptr [rbx + r10]
0x26a9:	cmp	al, 0x20
0x26ab:	je	0x26a0


0x26ad:	cmp	al, 9
0x26af:	je	0x26a0


0x26b1:	cmp	al, 0x3d
0x26b3:	jne	0x1e44


0x26b9:	lea	rdx, [rbx + r10 + 1]
0x26be:	movzx	eax, byte ptr [rdx]
0x26c1:	mov	r8, rdx
0x26c4:	lea	rdx, [rdx + 1]
0x26c8:	cmp	al, 0x20
0x26ca:	je	0x26be


0x26be:	movzx	eax, byte ptr [rdx]
0x26c1:	mov	r8, rdx
0x26c4:	lea	rdx, [rdx + 1]
0x26c8:	cmp	al, 0x20
0x26ca:	je	0x26be


0x26cc:	cmp	al, 9
0x26ce:	je	0x26be


0x26d0:	mov	rdi, r8
0x26d3:	mov	qword ptr [rsp + 0x60], r8
0x26d8:	call	0x2bd0


0x2949:	test	rax, rax
0x294c:	jne	0x2696


0x2952:	jmp	0x1e44


0x26dd:	mov	r8, qword ptr [rsp + 0x60]
0x26e2:	jmp	0x275f


0x275f:	test	al, al
0x2761:	jne	0x1fa6


0x1f43:	test	al, al
0x1f45:	je	0x1e44


0x1f4b:	mov	rdx, qword ptr [rsp + 0x70]
0x1f50:	mov	rcx, r15
0x1f53:	mov	esi, dword ptr [rip + 0x20a0bb]
0x1f59:	mov	r8, qword ptr [rsp + 0x60]
0x1f5e:	movzx	r9d, byte ptr [rsp + 0x68]
0x1f64:	lea	rax, [rdx + 1]
0x1f68:	sub	rcx, rax
0x1f6b:	sub	rcx, 1
0x1f6f:	je	0x1f88


0x1f88:	test	esi, esi
0x1f8a:	je	0x1e44


0x1f71:	movzx	ecx, byte ptr [rbx + rdx + 1]
0x1f76:	cmp	cl, 0x20
0x1f79:	je	0x26e4


0x1f90:	mov	dword ptr [rip + 0x20a07a], 1
0x1f9a:	add	rbx, rax
0x1f9d:	test	r9b, r9b
0x1fa0:	jne	0x2741


0x26e4:	sub	esi, 1
0x26e7:	je	0x1f9a


0x1f7f:	cmp	cl, 0x2a
0x1f82:	je	0x26e4


0x1f9a:	add	rbx, rax
0x1f9d:	test	r9b, r9b
0x1fa0:	jne	0x2741


0x26ed:	mov	dword ptr [rip + 0x20991d], 0
0x26f7:	lea	rax, [rdx + 2]
0x26fb:	jmp	0x1f9a


0x338a:	mov	esi, dword ptr [rbx]
0x338c:	lea	rdx, [rip + 0x69de]
0x3393:	mov	rcx, rax
0x3396:	mov	r8, rbp
0x3399:	xor	edi, edi
0x339b:	xor	eax, eax
0x339d:	call	0x1830


0x7a7c:	add	rsp, 0x20
0x7a80:	mov	r11, qword ptr [rsp + 0x10]
0x7a85:	cmp	r11, rax
0x7a88:	ja	0x7af1


0x7a8a:	lea	rsi, [rax + 1]
0x7a8e:	lea	rax, [rip + 0x2046ab]
0x7a95:	cmp	r12, rax
0x7a98:	mov	qword ptr [rbx], rsi
0x7a9b:	je	0x7aaf


0x7af1:	mov	eax, dword ptr [rsp + 0x18]
0x7af5:	mov	dword ptr [r13], eax
0x7af9:	add	rsp, 0x28
0x7afd:	mov	rax, r12
0x7b00:	pop	rbx
0x7b01:	pop	rbp
0x7b02:	pop	r12
0x7b04:	pop	r13
0x7b06:	pop	r14
0x7b08:	pop	r15
0x7b0a:	ret	


0x7aaf:	mov	rdi, rsi
0x7ab2:	mov	qword ptr [rsp + 0x10], rsi
0x7ab7:	call	0x8920


0x7a9d:	mov	rdi, r12
0x7aa0:	mov	qword ptr [rsp + 0x10], rsi
0x7aa5:	call	0x15b0


0x7aaa:	mov	rsi, qword ptr [rsp + 0x10]
0x7aaf:	mov	rdi, rsi
0x7ab2:	mov	qword ptr [rsp + 0x10], rsi
0x7ab7:	call	0x8920


0x7abc:	sub	rsp, 8
0x7ac0:	mov	qword ptr [rbx + 8], rax
0x7ac4:	mov	r8d, dword ptr [rbp]
0x7ac8:	push	qword ptr [rbp + 0x30]
0x7acb:	push	qword ptr [rbp + 0x28]
0x7ace:	mov	rcx, r14
0x7ad1:	push	r15
0x7ad3:	mov	r9d, dword ptr [rsp + 0x3c]
0x7ad8:	mov	rdi, rax
0x7adb:	mov	rdx, qword ptr [rsp + 0x28]
0x7ae0:	mov	rsi, qword ptr [rsp + 0x30]
0x7ae5:	mov	r12, rax
0x7ae8:	call	0x6750


0x8202:	mov	rdi, qword ptr [rsp + 0x38]
0x8207:	xor	rdi, qword ptr fs:[0x28]
0x8210:	jne	0x821c


0x8212:	add	rsp, 0x48
0x8216:	ret	


0x821c:	call	0x1690


0x7f4f:	mov	rcx, qword ptr [rsp + 0x38]
0x7f54:	xor	rcx, qword ptr fs:[0x28]
0x7f5d:	jne	0x7f69


0x7f5f:	add	rsp, 0x48
0x7f63:	ret	


0x7f69:	call	0x1690


0x7fdb:	mov	rdx, qword ptr [rsp + 0x38]
0x7fe0:	xor	rdx, qword ptr fs:[0x28]
0x7fe9:	jne	0x7ff5


0x7feb:	add	rsp, 0x48
0x7fef:	ret	


0x7ff5:	call	0x1690


0x816f:	mov	rcx, qword ptr [rsp + 0x38]
0x8174:	xor	rcx, qword ptr fs:[0x28]
0x817d:	jne	0x8189


0x817f:	add	rsp, 0x48
0x8183:	ret	


0x8189:	call	0x1690


0x2908:	lea	rsi, [rip + 0x69ef]
0x290f:	mov	rbp, rax
0x2912:	xor	edi, edi
0x2914:	mov	edx, 5
0x2919:	call	0x1660


0x291e:	mov	rcx, rbp
0x2921:	mov	rdx, rax
0x2924:	xor	esi, esi
0x2926:	xor	edi, edi
0x2928:	xor	eax, eax
0x292a:	call	0x1830


0x292f:	jmp	0x21be


0x2656:	lea	rsi, [rip + 0x7593]
0x265d:	xor	edi, edi
0x265f:	mov	edx, 5
0x2664:	mov	rbp, rax
0x2667:	call	0x1660


0x266c:	lea	r8, [rip + 0x6b41]
0x2673:	mov	rdx, rax
0x2676:	mov	rcx, rbp
0x2679:	xor	esi, esi
0x267b:	xor	edi, edi
0x267d:	xor	eax, eax
0x267f:	call	0x1830


0x2684:	jmp	0x21be


0x257f:	lea	rsi, [rip + 0x6d69]
0x2586:	mov	rbx, rax
0x2589:	mov	edx, 5
0x258e:	xor	edi, edi
0x2590:	call	0x1660


0x2595:	mov	rcx, rbx
0x2598:	mov	rdx, rax
0x259b:	xor	esi, esi
0x259d:	xor	eax, eax
0x259f:	xor	edi, edi
0x25a1:	call	0x1830


0x25a6:	xor	eax, eax
0x25a8:	jmp	0x21c3


0x21c3:	and	byte ptr [rsp + 0x79], al
0x21c7:	jmp	0x236d


0x1e7b:	lea	rsi, [rip + 0x7433]
0x1e82:	mov	rbx, rax
0x1e85:	mov	edx, 5
0x1e8a:	xor	edi, edi
0x1e8c:	call	0x1660


0x1e91:	mov	rcx, rbx
0x1e94:	mov	rdx, rax
0x1e97:	xor	esi, esi
0x1e99:	mov	edi, 1
0x1e9e:	xor	eax, eax
0x1ea0:	call	0x1830


0x21e1:	lea	rsi, [rip + 0x79d8]
0x21e8:	xor	edi, edi
0x21ea:	mov	edx, 5
0x21ef:	mov	rbx, rax
0x21f2:	call	0x1660


0x21f7:	lea	r9, [rip + 0x6fb6]
0x21fe:	mov	rdx, rax
0x2201:	mov	r8, rbp
0x2204:	mov	rcx, rbx
0x2207:	xor	esi, esi
0x2209:	xor	edi, edi
0x220b:	xor	eax, eax
0x220d:	call	0x1830


0x2212:	jmp	0x1e55


0x2443:	mov	rbx, rax
0x2446:	call	0x15d0


0x244b:	mov	esi, dword ptr [rax]
0x244d:	lea	rdx, [rip + 0x7921]
0x2454:	xor	eax, eax
0x2456:	mov	rcx, rbx
0x2459:	xor	edi, edi
0x245b:	call	0x1830


0x2460:	xor	eax, eax
0x2462:	jmp	0x21c3


0x2e19:	mov	rbx, rax
0x2e1c:	xor	r12d, r12d
0x2e1f:	call	0x15d0


0x2e24:	mov	esi, dword ptr [rax]
0x2e26:	lea	rdx, [rip + 0x6f48]
0x2e2d:	mov	rcx, rbx
0x2e30:	xor	edi, edi
0x2e32:	xor	eax, eax
0x2e34:	call	0x1830


0x2e39:	jmp	0x2d61


0x2d7f:	mov	rbp, rax
0x2d82:	xor	r12d, r12d
0x2d85:	call	0x15d0


0x2d8a:	mov	esi, dword ptr [rax]
0x2d8c:	lea	rdx, [rip + 0x6fe2]
0x2d93:	xor	edi, edi
0x2d95:	xor	eax, eax
0x2d97:	mov	rcx, rbp
0x2d9a:	call	0x1830


0x2d9f:	cmp	qword ptr [rip + 0x20930a], rbx
0x2da6:	je	0x2d61


0x2da8:	mov	rdi, rbx
0x2dab:	call	0x8bb0


0x2db0:	add	rsp, 8
0x2db4:	mov	eax, r12d
0x2db7:	pop	rbx
0x2db8:	pop	rbp
0x2db9:	pop	r12
0x2dbb:	pop	r13
0x2dbd:	ret	


0x2e69:	mov	esi, dword ptr [rbx]
0x2e6b:	lea	rdx, [rip + 0x6f03]
0x2e72:	mov	rcx, rax
0x2e75:	xor	edi, edi
0x2e77:	xor	eax, eax
0x2e79:	xor	r12d, r12d
0x2e7c:	call	0x1830


0x2e81:	jmp	0x2d61


0x809e:	mov	rsi, qword ptr [rsp + 0x38]
0x80a3:	xor	rsi, qword ptr fs:[0x28]
0x80ac:	jne	0x80b3


0x80ae:	add	rsp, 0x48
0x80b2:	ret	


0x80b3:	call	0x1690


0x7aed:	add	rsp, 0x20
0x7af1:	mov	eax, dword ptr [rsp + 0x18]
0x7af5:	mov	dword ptr [r13], eax
0x7af9:	add	rsp, 0x28
0x7afd:	mov	rax, r12
0x7b00:	pop	rbx
0x7b01:	pop	rbp
0x7b02:	pop	r12
0x7b04:	pop	r13
0x7b06:	pop	r14
0x7b08:	pop	r15
0x7b0a:	ret	


0x7d3c:	lea	rsi, [rax + 1]
0x7d40:	mov	qword ptr [rsp + 0x48], rax
0x7d45:	add	rsp, 0x20
0x7d49:	mov	rdi, rsi
0x7d4c:	mov	qword ptr [rsp + 0x18], rsi
0x7d51:	call	0x8920


0x7d56:	mov	qword ptr [rsp + 0x10], rax
0x7d5b:	sub	rsp, 8
0x7d5f:	push	qword ptr [rbx + 0x30]
0x7d62:	push	qword ptr [rbx + 0x28]
0x7d65:	mov	r10, qword ptr [rsp + 0x38]
0x7d6a:	mov	r9d, ebp
0x7d6d:	mov	r8d, dword ptr [rbx]
0x7d70:	mov	rcx, r15
0x7d73:	mov	rdx, r14
0x7d76:	mov	rdi, rax
0x7d79:	push	r10
0x7d7b:	mov	rsi, qword ptr [rsp + 0x38]
0x7d80:	call	0x6750


0x7d85:	mov	eax, dword ptr [rsp + 0x2c]
0x7d89:	add	rsp, 0x20
0x7d8d:	test	r12, r12
0x7d90:	mov	dword ptr [r13], eax
0x7d94:	je	0x7d9f


0x7d9f:	mov	rax, qword ptr [rsp + 0x10]
0x7da4:	add	rsp, 0x38
0x7da8:	pop	rbx
0x7da9:	pop	rbp
0x7daa:	pop	r12
0x7dac:	pop	r13
0x7dae:	pop	r14
0x7db0:	pop	r15
0x7db2:	ret	


0x7d96:	mov	r11, qword ptr [rsp + 0x28]
0x7d9b:	mov	qword ptr [r12], r11
0x7d9f:	mov	rax, qword ptr [rsp + 0x10]
0x7da4:	add	rsp, 0x38
0x7da8:	pop	rbx
0x7da9:	pop	rbp
0x7daa:	pop	r12
0x7dac:	pop	r13
0x7dae:	pop	r14
0x7db0:	pop	r15
0x7db2:	ret	


0x7cb1:	mov	dword ptr [rbp], r12d
0x7cb5:	add	rsp, 0x38
0x7cb9:	pop	rbx
0x7cba:	pop	rbp
0x7cbb:	pop	r12
0x7cbd:	pop	r13
0x7cbf:	pop	r14
0x7cc1:	pop	r15
0x7cc3:	ret	


0x63d3:	mov	r12d, 0x8000
0x63d9:	xor	r15d, r15d
0x63dc:	jmp	0x6409


0x6409:	test	byte ptr [rbx], 0x10
0x640c:	je	0x63e0


0x63e0:	lea	rdi, [rbp + r15]
0x63e5:	mov	rdx, r12
0x63e8:	mov	rcx, rbx
0x63eb:	sub	rdx, r15
0x63ee:	mov	esi, 1
0x63f3:	call	0x1620


0x640e:	test	r15, r15
0x6411:	jne	0x6480


0x1620:	jmp	qword ptr [rip + 0x20a832]


0x6413:	mov	rsi, qword ptr [rsp + 8]
0x6418:	mov	rdi, r13
0x641b:	call	r14


0x6480:	mov	rdx, r13
0x6483:	mov	rsi, r15
0x6486:	mov	rdi, rbp
0x6489:	call	0x5f40




0x648e:	jmp	0x6413


0x63f8:	add	r15, rax
0x63fb:	cmp	r15, 0x8000
0x6402:	je	0x6450


0x6450:	mov	rdx, r13
0x6453:	mov	esi, 0x8000
0x6458:	mov	rdi, rbp
0x645b:	call	0x34b0


0x6404:	test	rax, rax
0x6407:	je	0x6468


0x6468:	test	byte ptr [rbx], 0x20
0x646b:	je	0x640e


0x646d:	mov	rdi, rbp
0x6470:	call	0x15b0


0x6475:	mov	eax, 1
0x647a:	jmp	0x6428


0x6460:	jmp	0x63d9


0x63d9:	xor	r15d, r15d
0x63dc:	jmp	0x6409


0x641e:	mov	rdi, rbp
0x6421:	call	0x15b0


0x6426:	xor	eax, eax
0x6428:	mov	rcx, qword ptr [rsp + 0xc8]
0x6430:	xor	rcx, qword ptr fs:[0x28]
0x6439:	jne	0x6497


0x914d:	add	rbx, 1
0x9151:	cmp	rbp, rbx
0x9154:	jne	0x9140


0x9140:	mov	rdx, r15
0x9143:	mov	rsi, r14
0x9146:	mov	edi, r13d
0x9149:	call	qword ptr [r12 + rbx*8]






0x84f8:	mov	r12, qword ptr [rbx + 8]
0x84fc:	lea	rsi, [rip + 0x1e0c]
0x8503:	mov	rbx, qword ptr [rbx]
0x8506:	mov	edx, 5
0x850b:	xor	edi, edi
0x850d:	call	0x1660


0x8540:	mov	r13, qword ptr [rbx + 0x10]
0x8544:	mov	r12, qword ptr [rbx + 8]
0x8548:	lea	rsi, [rip + 0x1dd7]
0x854f:	mov	rbx, qword ptr [rbx]
0x8552:	mov	edx, 5
0x8557:	xor	edi, edi
0x8559:	call	0x1660


0x8680:	mov	r9, qword ptr [rbx + 0x10]
0x8684:	mov	r13, qword ptr [rbx + 0x30]
0x8688:	lea	rsi, [rip + 0x1e39]
0x868f:	mov	r12, qword ptr [rbx + 0x28]
0x8693:	mov	r15, qword ptr [rbx + 0x20]
0x8697:	mov	edx, 5
0x869c:	mov	r14, qword ptr [rbx + 0x18]
0x86a0:	mov	r8, qword ptr [rbx + 8]
0x86a4:	xor	edi, edi
0x86a6:	mov	qword ptr [rsp + 8], r9
0x86ab:	mov	rbx, qword ptr [rbx]
0x86ae:	mov	qword ptr [rsp], r8
0x86b2:	call	0x1660


0x8460:	mov	r10, qword ptr [rbx + 0x40]
0x8464:	mov	r9, qword ptr [rbx + 0x38]
0x8468:	lea	rsi, [rip + 0x20b9]
0x846f:	mov	rax, qword ptr [rbx + 0x10]
0x8473:	mov	r8, qword ptr [rbx + 8]
0x8477:	mov	edx, 5
0x847c:	mov	r13, qword ptr [rbx + 0x30]
0x8480:	mov	r12, qword ptr [rbx + 0x28]
0x8484:	mov	r15, qword ptr [rbx + 0x20]
0x8488:	mov	r14, qword ptr [rbx + 0x18]
0x848c:	mov	rbx, qword ptr [rbx]
0x848f:	mov	qword ptr [rsp + 0x18], r10
0x8494:	mov	qword ptr [rsp + 0x10], r9
0x8499:	mov	qword ptr [rsp], rax
0x849d:	mov	qword ptr [rsp + 8], r8
0x84a2:	xor	edi, edi
0x84a4:	call	0x1660


0x8426:	add	rsp, 0x28
0x842a:	pop	rbx
0x842b:	pop	rbp
0x842c:	pop	r12
0x842e:	pop	r13
0x8430:	pop	r14
0x8432:	pop	r15
0x8434:	ret	


0x85e8:	mov	r15, qword ptr [rbx + 0x20]
0x85ec:	lea	rsi, [rip + 0x1e85]
0x85f3:	mov	edx, 5
0x85f8:	xor	edi, edi
0x85fa:	mov	r14, qword ptr [rbx + 0x18]
0x85fe:	mov	r13, qword ptr [rbx + 0x10]
0x8602:	mov	r12, qword ptr [rbx + 8]
0x8606:	mov	rbx, qword ptr [rbx]
0x8609:	call	0x1660


0x8618:	mov	r8, qword ptr [rbx + 8]
0x861c:	mov	r12, qword ptr [rbx + 0x28]
0x8620:	lea	rsi, [rip + 0x1e79]
0x8627:	mov	r15, qword ptr [rbx + 0x20]
0x862b:	mov	r14, qword ptr [rbx + 0x18]
0x862f:	mov	edx, 5
0x8634:	mov	r13, qword ptr [rbx + 0x10]
0x8638:	xor	edi, edi
0x863a:	mov	rbx, qword ptr [rbx]
0x863d:	mov	qword ptr [rsp], r8
0x8641:	call	0x1660


0x8590:	lea	rsi, [rip + 0x1ec1]
0x8597:	mov	edx, 5
0x859c:	xor	edi, edi
0x859e:	mov	r14, qword ptr [rbx + 0x18]
0x85a2:	mov	r13, qword ptr [rbx + 0x10]
0x85a6:	mov	r12, qword ptr [rbx + 8]
0x85aa:	mov	rbx, qword ptr [rbx]
0x85ad:	call	0x1660


0x83b0:	mov	r9, qword ptr [rbx + 0x38]
0x83b4:	mov	rax, qword ptr [rbx + 0x10]
0x83b8:	lea	rsi, [rip + 0x2139]
0x83bf:	mov	r8, qword ptr [rbx + 8]
0x83c3:	mov	edx, 5
0x83c8:	xor	edi, edi
0x83ca:	mov	r13, qword ptr [rbx + 0x30]
0x83ce:	mov	r12, qword ptr [rbx + 0x28]
0x83d2:	mov	qword ptr [rsp + 0x10], r9
0x83d7:	mov	r15, qword ptr [rbx + 0x20]
0x83db:	mov	r14, qword ptr [rbx + 0x18]
0x83df:	mov	qword ptr [rsp], rax
0x83e3:	mov	qword ptr [rsp + 8], r8
0x83e8:	mov	rbx, qword ptr [rbx]
0x83eb:	call	0x1660


0x84b8:	mov	rbx, qword ptr [rbx]
0x84bb:	lea	rsi, [rip + 0x1e3d]
0x84c2:	mov	edx, 5
0x84c7:	xor	edi, edi
0x84c9:	call	0x1660


0x84ce:	add	rsp, 0x28
0x84d2:	mov	rcx, rbx
0x84d5:	mov	rdi, rbp
0x84d8:	pop	rbx
0x84d9:	pop	rbp
0x84da:	pop	r12
0x84dc:	pop	r13
0x84de:	pop	r14
0x84e0:	pop	r15
0x84e2:	mov	rdx, rax
0x84e5:	mov	esi, 1
0x84ea:	xor	eax, eax
0x84ec:	jmp	0x18a0


0x83f0:	sub	rsp, 8
0x83f4:	mov	r9, qword ptr [rsp + 0x18]
0x83f9:	mov	rdx, rax
0x83fc:	mov	rcx, rbx
0x83ff:	mov	esi, 1
0x8404:	mov	rdi, rbp
0x8407:	xor	eax, eax
0x8409:	push	r9
0x840b:	push	r13
0x840d:	push	r12
0x840f:	push	r15
0x8411:	push	r14
0x8413:	mov	r9, qword ptr [rsp + 0x30]
0x8418:	mov	r8, qword ptr [rsp + 0x38]
0x841d:	call	0x18a0


0x85b2:	sub	rsp, 8
0x85b6:	push	r14
0x85b8:	mov	rdx, rax
0x85bb:	mov	r9, r13
0x85be:	mov	r8, r12
0x85c1:	mov	rcx, rbx
0x85c4:	mov	rdi, rbp
0x85c7:	mov	esi, 1
0x85cc:	xor	eax, eax
0x85ce:	call	0x18a0


0x85d3:	pop	rax
0x85d4:	pop	rdx
0x85d5:	add	rsp, 0x28
0x85d9:	pop	rbx
0x85da:	pop	rbp
0x85db:	pop	r12
0x85dd:	pop	r13
0x85df:	pop	r14
0x85e1:	pop	r15
0x85e3:	ret	


0x8646:	sub	rsp, 8
0x864a:	mov	r9, r13
0x864d:	push	r12
0x864f:	push	r15
0x8651:	push	r14
0x8653:	mov	r8, qword ptr [rsp + 0x20]
0x8658:	mov	rcx, rbx
0x865b:	mov	rdx, rax
0x865e:	mov	rdi, rbp
0x8661:	mov	esi, 1
0x8666:	xor	eax, eax
0x8668:	call	0x18a0


0x866d:	add	rsp, 0x20
0x8671:	add	rsp, 0x28
0x8675:	pop	rbx
0x8676:	pop	rbp
0x8677:	pop	r12
0x8679:	pop	r13
0x867b:	pop	r14
0x867d:	pop	r15
0x867f:	ret	


0x860e:	push	r15
0x8610:	jmp	0x85b6


0x85b6:	push	r14
0x85b8:	mov	rdx, rax
0x85bb:	mov	r9, r13
0x85be:	mov	r8, r12
0x85c1:	mov	rcx, rbx
0x85c4:	mov	rdi, rbp
0x85c7:	mov	esi, 1
0x85cc:	xor	eax, eax
0x85ce:	call	0x18a0


0x86b7:	push	r13
0x86b9:	push	r12
0x86bb:	push	r15
0x86bd:	push	r14
0x86bf:	mov	r9, qword ptr [rsp + 0x28]
0x86c4:	jmp	0x8653


0x8653:	mov	r8, qword ptr [rsp + 0x20]
0x8658:	mov	rcx, rbx
0x865b:	mov	rdx, rax
0x865e:	mov	rdi, rbp
0x8661:	mov	esi, 1
0x8666:	xor	eax, eax
0x8668:	call	0x18a0


0x855e:	add	rsp, 0x28
0x8562:	mov	r9, r13
0x8565:	mov	r8, r12
0x8568:	mov	rcx, rbx
0x856b:	mov	rdi, rbp
0x856e:	mov	rdx, rax
0x8571:	pop	rbx
0x8572:	pop	rbp
0x8573:	pop	r12
0x8575:	pop	r13
0x8577:	pop	r14
0x8579:	pop	r15
0x857b:	mov	esi, 1
0x8580:	xor	eax, eax
0x8582:	jmp	0x18a0


0x8512:	add	rsp, 0x28
0x8516:	mov	r8, r12
0x8519:	mov	rcx, rbx
0x851c:	mov	rdi, rbp
0x851f:	mov	rdx, rax
0x8522:	mov	esi, 1
0x8527:	pop	rbx
0x8528:	pop	rbp
0x8529:	pop	r12
0x852b:	pop	r13
0x852d:	pop	r14
0x852f:	pop	r15
0x8531:	xor	eax, eax
0x8533:	jmp	0x18a0


0x72f0:	sub	rsp, 8
0x72f4:	mov	rcx, rbp
0x72f7:	mov	rsi, r13
0x72fa:	push	qword ptr [rsp + 0x68]
0x72fe:	push	qword ptr [rsp + 0x78]
0x7302:	mov	rdi, r14
0x7305:	push	0
0x7307:	mov	r9d, dword ptr [rsp + 0x98]
0x730f:	mov	r8d, dword ptr [rsp + 0x28]
0x7314:	mov	rdx, qword ptr [rsp + 0x30]
0x7319:	and	r9d, 0xfffffffd
0x731d:	call	0x6750


0x7322:	add	rsp, 0x20
0x7326:	mov	r15, rax
0x7329:	mov	rbx, qword ptr [rsp + 0xa8]
0x7331:	xor	rbx, qword ptr fs:[0x28]
0x733a:	mov	rax, r15
0x733d:	jne	0x7943


0x7343:	add	rsp, 0xb8
0x734a:	pop	rbx
0x734b:	pop	rbp
0x734c:	pop	r12
0x734e:	pop	r13
0x7350:	pop	r14
0x7352:	pop	r15
0x7354:	ret	


0x7943:	call	0x1690


0x78ed:	sub	rsp, 8
0x78f1:	mov	r8d, 5
0x78f7:	mov	rcx, r11
0x78fa:	push	qword ptr [rsp + 0x68]
0x78fe:	push	qword ptr [rsp + 0x78]
0x7902:	mov	rdi, r14
0x7905:	push	qword ptr [rsp + 0x38]
0x7909:	mov	r9d, dword ptr [rsp + 0x98]
0x7911:	mov	rdx, qword ptr [rsp + 0x30]
0x7916:	mov	rsi, qword ptr [rsp + 0x70]
0x791b:	call	0x6750


0x7920:	add	rsp, 0x20
0x7924:	mov	r15, rax
0x7927:	jmp	0x7329


0x7329:	mov	rbx, qword ptr [rsp + 0xa8]
0x7331:	xor	rbx, qword ptr fs:[0x28]
0x733a:	mov	rax, r15
0x733d:	jne	0x7943


0x15a0:	push	qword ptr [rip + 0x20a86a]
0x15a6:	jmp	qword ptr [rip + 0x20a86c]


0x15ac:	nop	dword ptr [rax]


0x15b6:	push	0
0x15bb:	jmp	0x15a0


0x15c6:	push	1
0x15cb:	jmp	0x15a0


0x15d6:	push	2
0x15db:	jmp	0x15a0


0x15e6:	push	3
0x15eb:	jmp	0x15a0


0x15f6:	push	4
0x15fb:	jmp	0x15a0


0x1606:	push	5
0x160b:	jmp	0x15a0


0x1616:	push	6
0x161b:	jmp	0x15a0


0x1626:	push	7
0x162b:	jmp	0x15a0


0x1636:	push	8
0x163b:	jmp	0x15a0


0x1646:	push	9
0x164b:	jmp	0x15a0


0x1656:	push	0xa
0x165b:	jmp	0x15a0


0x1666:	push	0xb
0x166b:	jmp	0x15a0


0x1676:	push	0xc
0x167b:	jmp	0x15a0


0x1686:	push	0xd
0x168b:	jmp	0x15a0


0x1696:	push	0xe
0x169b:	jmp	0x15a0


0x16a6:	push	0xf
0x16ab:	jmp	0x15a0


0x16b6:	push	0x10
0x16bb:	jmp	0x15a0


0x16c6:	push	0x11
0x16cb:	jmp	0x15a0


0x16d6:	push	0x12
0x16db:	jmp	0x15a0


0x16e6:	push	0x13
0x16eb:	jmp	0x15a0


0x16f6:	push	0x14
0x16fb:	jmp	0x15a0


0x1706:	push	0x15
0x170b:	jmp	0x15a0


0x1716:	push	0x16
0x171b:	jmp	0x15a0


0x1726:	push	0x17
0x172b:	jmp	0x15a0


0x1730:	jmp	qword ptr [rip + 0x20a7aa]




0x1736:	push	0x18
0x173b:	jmp	0x15a0


0x1746:	push	0x19
0x174b:	jmp	0x15a0


0x1756:	push	0x1a
0x175b:	jmp	0x15a0


0x1766:	push	0x1b
0x176b:	jmp	0x15a0


0x1776:	push	0x1c
0x177b:	jmp	0x15a0


0x1786:	push	0x1d
0x178b:	jmp	0x15a0


0x1796:	push	0x1e
0x179b:	jmp	0x15a0


0x17a6:	push	0x1f
0x17ab:	jmp	0x15a0


0x17b6:	push	0x20
0x17bb:	jmp	0x15a0


0x17c6:	push	0x21
0x17cb:	jmp	0x15a0


0x17d6:	push	0x22
0x17db:	jmp	0x15a0


0x17e6:	push	0x23
0x17eb:	jmp	0x15a0


0x17f6:	push	0x24
0x17fb:	jmp	0x15a0


0x1806:	push	0x25
0x180b:	jmp	0x15a0


0x1816:	push	0x26
0x181b:	jmp	0x15a0


0x1826:	push	0x27
0x182b:	jmp	0x15a0


0x1836:	push	0x28
0x183b:	jmp	0x15a0


0x1846:	push	0x29
0x184b:	jmp	0x15a0


0x1856:	push	0x2a
0x185b:	jmp	0x15a0


0x1866:	push	0x2b
0x186b:	jmp	0x15a0


0x1876:	push	0x2c
0x187b:	jmp	0x15a0


0x1886:	push	0x2d
0x188b:	jmp	0x15a0


0x1896:	push	0x2e
0x189b:	jmp	0x15a0


0x18a6:	push	0x2f
0x18ab:	jmp	0x15a0


0x18b0:	jmp	qword ptr [rip + 0x20a6ea]




0x18b6:	push	0x30
0x18bb:	jmp	0x15a0


0x18c0:	jmp	qword ptr [rip + 0x20a6e2]




0x18c6:	push	0x31
0x18cb:	jmp	0x15a0


0x18d6:	push	0x32
0x18db:	jmp	0x15a0


0x18e6:	push	0x33
0x18eb:	jmp	0x15a0


0x2a3d:	nop	dword ptr [rax]


0x2a6a:	hlt	


0x2a6b:	nop	dword ptr [rax + rax]


0x2aa2:	nop	dword ptr [rax]
0x2aa6:	nop	word ptr cs:[rax + rax]


0x2af2:	nop	dword ptr [rax]
0x2af6:	nop	word ptr cs:[rax + rax]


0x2b3a:	nop	word ptr [rax + rax]


0x2b4a:	nop	word ptr [rax + rax]


0x2bc9:	nop	dword ptr [rax]


0x2cf5:	nop	
0x2cf6:	nop	word ptr cs:[rax + rax]


0x2e9a:	nop	word ptr [rax + rax]


0x32f2:	nop	word ptr cs:[rax + rax]
0x32fc:	nop	dword ptr [rax]


0x3308:	nop	dword ptr [rax + rax]


0x3318:	nop	dword ptr [rax + rax]


0x33c4:	nop	word ptr cs:[rax + rax]
0x33ce:	nop	


0x3418:	nop	dword ptr [rax + rax]


0x3468:	nop	dword ptr [rax + rax]


0x348c:	nop	dword ptr [rax]


0x34ac:	nop	dword ptr [rax]


0x5e3b:	nop	dword ptr [rax + rax]


0x5edd:	nop	dword ptr [rax]


0x5f02:	nop	dword ptr [rax]
0x5f06:	nop	word ptr cs:[rax + rax]


0x5f32:	nop	dword ptr [rax]
0x5f36:	nop	word ptr cs:[rax + rax]


0x6217:	nop	word ptr [rax + rax]


0x62cc:	nop	dword ptr [rax]


0x637c:	nop	dword ptr [rax]


0x649c:	nop	dword ptr [rax]


0x64b3:	nop	dword ptr [rax]
0x64b6:	nop	word ptr cs:[rax + rax]


0x64d3:	nop	word ptr cs:[rax + rax]
0x64dd:	nop	dword ptr [rax]


0x64e5:	nop	
0x64e6:	nop	word ptr cs:[rax + rax]


0x6512:	nop	word ptr cs:[rax + rax]
0x651c:	nop	dword ptr [rax]


0x65b3:	nop	word ptr cs:[rax + rax]
0x65bd:	nop	dword ptr [rax]


0x665f:	nop	


0x6747:	nop	word ptr [rax + rax]


0x67e3:	mov	byte ptr [rsp + 0xe], 1
0x67e8:	mov	byte ptr [rsp + 0x7c], 0
0x67ed:	xor	r12d, r12d
0x67f0:	mov	qword ptr [rsp + 0x50], 0
0x67f9:	mov	byte ptr [rsp + 0xf], 1
0x67fe:	mov	byte ptr [rsp + 0xd], 0
0x6803:	lea	rax, [rip + 0x360b]
0x680a:	mov	qword ptr [rsp + 0x18], 1
0x6813:	xor	r15d, r15d
0x6816:	mov	dword ptr [rsp + 8], 2
0x681e:	mov	qword ptr [rsp + 0x48], rax
0x6823:	xor	r11d, r11d
0x6826:	mov	rax, rbp
0x6829:	mov	r8d, r12d
0x682c:	mov	rbp, r11
0x682f:	mov	r11, rax
0x6832:	nop	word ptr [rax + rax]
0x6838:	cmp	r11, rbp
0x683b:	setne	r12b
0x683f:	cmp	r11, -1
0x6843:	jne	0x6852


0x6845:	mov	rax, qword ptr [rsp + 0x10]
0x684a:	cmp	byte ptr [rax + rbp], 0
0x684e:	setne	r12b
0x6852:	test	r12b, r12b
0x6855:	je	0x6eb0


0x6852:	test	r12b, r12b
0x6855:	je	0x6eb0


0x6eb0:	cmp	dword ptr [rsp + 8], 2
0x6eb5:	movzx	ebx, byte ptr [rsp + 0xf]
0x6eba:	mov	r12d, r8d
0x6ebd:	mov	rbp, r11
0x6ec0:	sete	dl
0x6ec3:	mov	eax, ebx
0x6ec5:	test	r15, r15
0x6ec8:	sete	cl
0x6ecb:	and	eax, edx
0x6ecd:	and	al, cl
0x6ecf:	jne	0x7936


0x685b:	cmp	dword ptr [rsp + 8], 2
0x6860:	mov	rdi, qword ptr [rsp + 0x10]
0x6865:	lea	r9, [rdi + rbp]
0x6869:	setne	al
0x686c:	and	al, byte ptr [rsp + 0xd]
0x6870:	mov	r10d, eax
0x6873:	je	0x6920


0x6ed5:	mov	eax, ebx
0x6ed7:	xor	eax, 1
0x6eda:	and	dl, al
0x6edc:	je	0x784c


0x7936:	mov	dword ptr [rsp + 8], 2
0x793e:	jmp	0x72d9


0x6920:	movzx	ebx, byte ptr [r9]
0x6924:	cmp	bl, 0x7e
0x6927:	ja	0x6c48


0x6879:	mov	rax, qword ptr [rsp + 0x18]
0x687e:	test	rax, rax
0x6881:	je	0x6cb0


0x784c:	mov	rbx, qword ptr [rsp + 0x48]
0x7851:	test	rbx, rbx
0x7854:	je	0x7882


0x6ee2:	cmp	byte ptr [rsp + 0x7c], 0
0x6ee7:	je	0x784a


0x72d9:	cmp	byte ptr [rsp + 0xd], 0
0x72de:	je	0x72f0


0x692d:	lea	rcx, [rip + 0x3578]
0x6934:	movzx	edx, bl
0x6937:	movsxd	rax, dword ptr [rcx + rdx*4]
0x693b:	add	rax, rcx
0x693e:	jmp	rax


0x6c48:	cmp	qword ptr [rsp + 0x58], 1
0x6c4e:	jne	0x6ff8


0x6cb0:	movzx	ebx, byte ptr [r9]
0x6cb4:	cmp	bl, 0x7e
0x6cb7:	ja	0x6c40


0x6887:	cmp	r11, -1
0x688b:	lea	rbx, [rbp + rax]
0x6890:	jne	0x68c0


0x7882:	cmp	r13, r15
0x7885:	jbe	0x7329


0x7856:	test	al, al
0x7858:	je	0x7882


0x784a:	mov	eax, edx
0x784c:	mov	rbx, qword ptr [rsp + 0x48]
0x7851:	test	rbx, rbx
0x7854:	je	0x7882


0x6eed:	cmp	byte ptr [rsp + 0xe], 0
0x6ef2:	jne	0x78ed


0x72e0:	test	al, al
0x72e2:	mov	eax, 4
0x72e7:	cmove	eax, dword ptr [rsp + 8]
0x72ec:	mov	dword ptr [rsp + 8], eax


0x6c54:	mov	qword ptr [rsp + 0x38], r11
0x6c59:	mov	byte ptr [rsp + 0x30], r8b
0x6c5e:	mov	byte ptr [rsp + 0x28], r10b
0x6c63:	call	0x18e0


0x6ff8:	lea	rax, [rsp + 0xa0]
0x7000:	cmp	r11, -1
0x7004:	mov	qword ptr [rsp + 0xa0], 0
0x7010:	mov	qword ptr [rsp + 0x28], rax
0x7015:	jne	0x7044


0x6cb9:	lea	rcx, [rip + 0x33e8]
0x6cc0:	movzx	edx, bl
0x6cc3:	movsxd	rax, dword ptr [rcx + rdx*4]
0x6cc7:	add	rax, rcx
0x6cca:	jmp	rax


0x6c40:	xor	r10d, r10d
0x6c43:	nop	dword ptr [rax + rax]
0x6c48:	cmp	qword ptr [rsp + 0x58], 1
0x6c4e:	jne	0x6ff8


0x6892:	cmp	rax, 1
0x6896:	jbe	0x68c0


0x68c0:	cmp	rbx, r11
0x68c3:	mov	byte ptr [rsp + 0x28], r10b
0x68c8:	ja	0x6e80


0x788b:	mov	byte ptr [r14 + r15], 0
0x7890:	jmp	0x7329


0x785a:	movzx	ecx, byte ptr [rbx]
0x785d:	mov	rax, rbx
0x7860:	test	cl, cl
0x7862:	je	0x7882


0x6ef8:	test	r13, r13
0x6efb:	sete	al
0x6efe:	cmp	qword ptr [rsp + 0x50], 0
0x6f04:	setne	dl
0x6f07:	and	al, dl
0x6f09:	je	0x792c


0x7017:	mov	rdi, qword ptr [rsp + 0x10]
0x701c:	mov	byte ptr [rsp + 0x40], r8b
0x7021:	mov	byte ptr [rsp + 0x38], r10b
0x7026:	mov	qword ptr [rsp + 0x30], r9
0x702b:	call	0x1680


0x7044:	lea	rax, [rsp + 0x9c]
0x704c:	xor	ecx, ecx
0x704e:	mov	byte ptr [rsp + 0x7e], bl
0x7052:	mov	byte ptr [rsp + 0x7d], r8b
0x7057:	mov	rbx, rcx
0x705a:	mov	qword ptr [rsp + 0x88], r9
0x7062:	mov	qword ptr [rsp + 0x38], rax
0x7067:	mov	byte ptr [rsp + 0x7f], r10b
0x706c:	mov	qword ptr [rsp + 0x80], r15
0x7074:	mov	qword ptr [rsp + 0x40], r14
0x7079:	mov	qword ptr [rsp + 0x70], r13
0x707e:	mov	qword ptr [rsp + 0x30], r11
0x7083:	mov	rax, qword ptr [rsp + 0x10]
0x7088:	lea	r14, [rbp + rbx]
0x708d:	mov	rdx, qword ptr [rsp + 0x30]
0x7092:	mov	rcx, qword ptr [rsp + 0x28]
0x7097:	mov	rdi, qword ptr [rsp + 0x38]
0x709c:	lea	r13, [rax + r14]
0x70a0:	sub	rdx, r14
0x70a3:	mov	rsi, r13
0x70a6:	call	0x8f50


0x6898:	mov	byte ptr [rsp + 0x38], r8b
0x689d:	mov	byte ptr [rsp + 0x30], r10b
0x68a2:	mov	qword ptr [rsp + 0x28], r9
0x68a7:	call	0x1680


0x68ce:	mov	rdx, qword ptr [rsp + 0x18]
0x68d3:	mov	rsi, qword ptr [rsp + 0x48]
0x68d8:	mov	rdi, r9
0x68db:	mov	qword ptr [rsp + 0x40], r11
0x68e0:	mov	byte ptr [rsp + 0x38], r8b
0x68e5:	mov	qword ptr [rsp + 0x30], r9
0x68ea:	call	0x1730


0x6e80:	xor	r10d, r10d
0x6e83:	jmp	0x6920


0x7864:	mov	rdx, r15
0x7867:	sub	rax, r15
0x786a:	cmp	r13, rdx
0x786d:	jbe	0x7873


0x792c:	movzx	eax, byte ptr [rsp + 0x7c]
0x7931:	jmp	0x784c


0x6f0f:	mov	r13, qword ptr [rsp + 0x50]
0x6f14:	lea	rbx, [rip + 0x2efa]
0x6f1b:	mov	byte ptr [r14], 0x27
0x6f1f:	mov	dword ptr [rsp + 8], 2
0x6f27:	mov	r15d, 1
0x6f2d:	mov	qword ptr [rsp + 0x18], 1
0x6f36:	mov	byte ptr [rsp + 0xf], 0
0x6f3b:	mov	qword ptr [rsp + 0x48], rbx
0x6f40:	mov	byte ptr [rsp + 0x7c], al
0x6f44:	jmp	0x6823


0x7873:	add	rdx, 1
0x7877:	movzx	ecx, byte ptr [rax + rdx]
0x787b:	test	cl, cl
0x787d:	jne	0x786a


0x786f:	mov	byte ptr [r14 + rdx], cl
0x7873:	add	rdx, 1
0x7877:	movzx	ecx, byte ptr [rax + rdx]
0x787b:	test	cl, cl
0x787d:	jne	0x786a


0x6823:	xor	r11d, r11d
0x6826:	mov	rax, rbp
0x6829:	mov	r8d, r12d
0x682c:	mov	rbp, r11
0x682f:	mov	r11, rax
0x6832:	nop	word ptr [rax + rax]
0x6838:	cmp	r11, rbp
0x683b:	setne	r12b
0x683f:	cmp	r11, -1
0x6843:	jne	0x6852


0x787f:	mov	r15, rdx
0x7882:	cmp	r13, r15
0x7885:	jbe	0x7329


0x786a:	cmp	r13, rdx
0x786d:	jbe	0x7873


0x68ef:	test	eax, eax
0x68f1:	mov	r9, qword ptr [rsp + 0x30]
0x68f6:	movzx	r8d, byte ptr [rsp + 0x38]
0x68fc:	mov	r11, qword ptr [rsp + 0x40]
0x6901:	jne	0x6e80


0x6907:	cmp	byte ptr [rsp + 0xf], 0
0x690c:	movzx	r10d, byte ptr [rsp + 0x28]
0x6912:	jne	0x7895


0x7895:	cmp	dword ptr [rsp + 8], 2
0x789a:	movzx	ebx, byte ptr [rsp + 0xf]
0x789f:	mov	rbp, r11
0x78a2:	sete	al
0x78a5:	mov	byte ptr [rsp + 0xd], bl
0x78a9:	jmp	0x72d9


0x70ab:	test	rax, rax
0x70ae:	mov	r15, rax
0x70b1:	je	0x7101


0x7101:	mov	edx, r12d
0x7104:	mov	rdi, rbx
0x7107:	movzx	r8d, byte ptr [rsp + 0x7d]
0x710d:	xor	edx, 1
0x7110:	movzx	ebx, byte ptr [rsp + 0x7e]
0x7115:	movzx	r10d, byte ptr [rsp + 0x7f]
0x711b:	and	dl, byte ptr [rsp + 0xd]
0x711f:	mov	r15, qword ptr [rsp + 0x80]
0x7127:	mov	r14, qword ptr [rsp + 0x40]
0x712c:	mov	r13, qword ptr [rsp + 0x70]
0x7131:	mov	r11, qword ptr [rsp + 0x30]
0x7136:	cmp	rdi, 1
0x713a:	jbe	0x773b


0x70b3:	cmp	rax, -1
0x70b7:	je	0x76d5


0x773b:	mov	eax, edx
0x773d:	jmp	0x6c97


0x7140:	mov	rcx, rdi
0x7143:	xor	esi, esi
0x7145:	movzx	r9d, byte ptr [rsp + 0xf]
0x714b:	add	rcx, rbp
0x714e:	mov	rdi, qword ptr [rsp + 0x10]
0x7153:	jmp	0x720e


0x76d5:	mov	rdi, rbx
0x76d8:	movzx	r8d, byte ptr [rsp + 0x7d]
0x76de:	movzx	ebx, byte ptr [rsp + 0x7e]
0x76e3:	movzx	r10d, byte ptr [rsp + 0x7f]
0x76e9:	mov	r15, qword ptr [rsp + 0x80]
0x76f1:	xor	r12d, r12d
0x76f4:	mov	r14, qword ptr [rsp + 0x40]
0x76f9:	mov	r13, qword ptr [rsp + 0x70]
0x76fe:	mov	r11, qword ptr [rsp + 0x30]
0x7703:	movzx	edx, byte ptr [rsp + 0xd]
0x7708:	jmp	0x7136


0x70bd:	cmp	rax, -2
0x70c1:	je	0x7661


0x6c97:	test	al, al
0x6c99:	jne	0x7631


0x720e:	test	dl, dl
0x7210:	jne	0x7160


0x7136:	cmp	rdi, 1
0x713a:	jbe	0x773b


0x7661:	mov	r11, qword ptr [rsp + 0x30]
0x7666:	mov	rsi, r14
0x7669:	mov	rcx, r13
0x766c:	mov	rax, rbx
0x766f:	mov	rdi, rbx
0x7672:	movzx	r8d, byte ptr [rsp + 0x7d]
0x7678:	movzx	ebx, byte ptr [rsp + 0x7e]
0x767d:	mov	r9, qword ptr [rsp + 0x88]
0x7685:	cmp	rsi, r11
0x7688:	movzx	r10d, byte ptr [rsp + 0x7f]
0x768e:	mov	r15, qword ptr [rsp + 0x80]
0x7696:	mov	r14, qword ptr [rsp + 0x40]
0x769b:	mov	r13, qword ptr [rsp + 0x70]
0x76a0:	jae	0x76c8


0x70c7:	cmp	dword ptr [rsp + 8], 2
0x70cc:	sete	al
0x70cf:	and	al, byte ptr [rsp + 0xf]
0x70d3:	jne	0x7270


0x6c9f:	cmp	dword ptr [rsp + 8], 2
0x6ca4:	sete	dl
0x6ca7:	jmp	0x6978


0x7631:	movzx	edx, byte ptr [rsp + 0xd]
0x7636:	xor	r12d, r12d
0x7639:	jmp	0x7140


0x7216:	mov	eax, esi
0x7218:	xor	eax, 1
0x721b:	and	eax, r8d
0x721e:	test	r10b, r10b
0x7221:	je	0x7231


0x7160:	cmp	dword ptr [rsp + 8], 2
0x7165:	sete	al
0x7168:	test	r9b, r9b
0x716b:	jne	0x7620


0x76a2:	cmp	byte ptr [rcx], 0
0x76a5:	jne	0x76b7


0x76c8:	movzx	edx, byte ptr [rsp + 0xd]
0x76cd:	xor	r12d, r12d
0x76d0:	jmp	0x7136


0x70d9:	mov	edi, dword ptr [rsp + 0x9c]
0x70e0:	call	0x18c0


0x7270:	cmp	r15, 1
0x7274:	je	0x70d9


0x6978:	cmp	byte ptr [rsp + 0xd], 1
0x697d:	jne	0x6a92


0x7231:	add	rbp, 1
0x7235:	cmp	rbp, rcx
0x7238:	jae	0x69bc


0x7223:	cmp	r13, r15
0x7226:	jbe	0x722d


0x7171:	mov	esi, r8d
0x7174:	xor	esi, 1
0x7177:	and	al, sil
0x717a:	je	0x71ab


0x7620:	movzx	ebx, byte ptr [rsp + 0xf]
0x7625:	mov	rbp, r11
0x7628:	mov	byte ptr [rsp + 0xd], bl
0x762c:	jmp	0x72d9


0x76a7:	jmp	0x76c8


0x76b7:	add	rax, 1
0x76bb:	lea	rdx, [rbp + rax]
0x76c0:	cmp	r11, rdx
0x76c3:	ja	0x76b0


0x727a:	mov	rdi, qword ptr [rsp + 0x10]
0x727f:	lea	rcx, [rdi + r15]
0x7283:	lea	rdx, [rdi + r14 + 1]
0x7288:	lea	r8, [rcx + r14]
0x728c:	jmp	0x729d


0x6983:	test	dl, dl
0x6985:	jne	0x6a92


0x6a92:	cmp	byte ptr [rsp + 0xf], 0
0x6a97:	jne	0x698b


0x723e:	test	al, al
0x7240:	je	0x763e


0x69bc:	test	al, al
0x69be:	je	0x69e0


0x722d:	add	r15, 1
0x7231:	add	rbp, 1
0x7235:	cmp	rbp, rcx
0x7238:	jae	0x69bc


0x7228:	mov	byte ptr [r14 + r15], 0x5c
0x722d:	add	r15, 1
0x7231:	add	rbp, 1
0x7235:	cmp	rbp, rcx
0x7238:	jae	0x69bc


0x71ab:	cmp	r13, r15
0x71ae:	jbe	0x71b5


0x717c:	cmp	r13, r15
0x717f:	jbe	0x7186


0x76c5:	mov	rdi, rax
0x76c8:	movzx	edx, byte ptr [rsp + 0xd]
0x76cd:	xor	r12d, r12d
0x76d0:	jmp	0x7136


0x76b0:	cmp	byte ptr [r9 + rax], 0
0x76b5:	je	0x76c5


0x729d:	movzx	ecx, byte ptr [rdx]
0x72a0:	sub	ecx, 0x5b
0x72a3:	cmp	cl, 0x21
0x72a6:	ja	0x7290


0x698b:	mov	rsi, qword ptr [rsp + 0x20]
0x6990:	test	rsi, rsi
0x6993:	je	0x69a9


0x6a9d:	jmp	0x69a9


0x763e:	xor	r10d, r10d
0x7641:	jmp	0x71fd


0x7246:	cmp	r13, r15
0x7249:	jbe	0x7250


0x69e0:	cmp	r15, r13
0x69e3:	jae	0x69e9


0x69c0:	cmp	r13, r15
0x69c3:	jbe	0x69ca


0x71b5:	lea	rax, [r15 + 1]
0x71b9:	cmp	r13, rax
0x71bc:	jbe	0x71cb


0x71b0:	mov	byte ptr [r14 + r15], 0x5c
0x71b5:	lea	rax, [r15 + 1]
0x71b9:	cmp	r13, rax
0x71bc:	jbe	0x71cb


0x7186:	lea	rsi, [r15 + 1]
0x718a:	cmp	r13, rsi
0x718d:	jbe	0x7195


0x7181:	mov	byte ptr [r14 + r15], 0x27
0x7186:	lea	rsi, [r15 + 1]
0x718a:	cmp	r13, rsi
0x718d:	jbe	0x7195


0x72a8:	mov	esi, 1
0x72ad:	shl	rsi, cl
0x72b0:	mov	rcx, rsi
0x72b3:	movabs	rsi, 0x20000002b
0x72bd:	test	rcx, rsi
0x72c0:	je	0x7290


0x7290:	add	rdx, 1
0x7294:	cmp	r8, rdx
0x7297:	je	0x70d9


0x69a9:	test	r10b, r10b
0x69ac:	jne	0x6af3


0x6995:	mov	edx, ebx
0x6997:	shr	dl, 5
0x699a:	movzx	edx, dl
0x699d:	mov	edx, dword ptr [rsi + rdx*4]
0x69a0:	bt	edx, ebx
0x69a3:	jb	0x6af3


0x71fd:	cmp	r13, r15
0x7200:	jbe	0x7206


0x7250:	lea	rax, [r15 + 1]
0x7254:	cmp	r13, rax
0x7257:	jbe	0x725f


0x724b:	mov	byte ptr [r14 + r15], 0x27
0x7250:	lea	rax, [r15 + 1]
0x7254:	cmp	r13, rax
0x7257:	jbe	0x725f


0x69e5:	mov	byte ptr [r14 + r15], bl
0x69e9:	movzx	edi, byte ptr [rsp + 0xe]
0x69ee:	add	r15, 1
0x69f2:	mov	eax, 0
0x69f7:	test	r12b, r12b
0x69fa:	cmove	edi, eax
0x69fd:	mov	byte ptr [rsp + 0xe], dil
0x6a02:	jmp	0x6838


0x69e9:	movzx	edi, byte ptr [rsp + 0xe]
0x69ee:	add	r15, 1
0x69f2:	mov	eax, 0
0x69f7:	test	r12b, r12b
0x69fa:	cmove	edi, eax
0x69fd:	mov	byte ptr [rsp + 0xe], dil
0x6a02:	jmp	0x6838


0x69ca:	lea	rax, [r15 + 1]
0x69ce:	cmp	r13, rax
0x69d1:	jbe	0x69d9


0x69c5:	mov	byte ptr [r14 + r15], 0x27
0x69ca:	lea	rax, [r15 + 1]
0x69ce:	cmp	r13, rax
0x69d1:	jbe	0x69d9


0x71cb:	lea	rax, [r15 + 2]
0x71cf:	cmp	r13, rax
0x71d2:	jbe	0x71e4


0x71be:	mov	eax, ebx
0x71c0:	shr	al, 6
0x71c3:	add	eax, 0x30
0x71c6:	mov	byte ptr [r14 + r15 + 1], al
0x71cb:	lea	rax, [r15 + 2]
0x71cf:	cmp	r13, rax
0x71d2:	jbe	0x71e4


0x7195:	lea	rsi, [r15 + 2]
0x7199:	cmp	r13, rsi
0x719c:	jbe	0x71a4


0x718f:	mov	byte ptr [r14 + r15 + 1], 0x24
0x7195:	lea	rsi, [r15 + 2]
0x7199:	cmp	r13, rsi
0x719c:	jbe	0x71a4


0x72c2:	mov	r14, qword ptr [rsp + 0x40]
0x72c7:	mov	r13, qword ptr [rsp + 0x70]
0x72cc:	mov	rbp, qword ptr [rsp + 0x30]
0x72d1:	mov	dword ptr [rsp + 8], 2
0x72d9:	cmp	byte ptr [rsp + 0xd], 0
0x72de:	je	0x72f0


0x69b2:	xor	eax, 1
0x69b5:	add	rbp, 1
0x69b9:	and	eax, r8d
0x69bc:	test	al, al
0x69be:	je	0x69e0


0x6af3:	cmp	dword ptr [rsp + 8], 2
0x6af8:	sete	dl
0x6afb:	cmp	byte ptr [rsp + 0xf], 0
0x6b00:	mov	eax, edx
0x6b02:	jne	0x7358


0x7206:	movzx	ebx, byte ptr [rdi + rbp]
0x720a:	add	r15, 1
0x720e:	test	dl, dl
0x7210:	jne	0x7160


0x7202:	mov	byte ptr [r14 + r15], bl
0x7206:	movzx	ebx, byte ptr [rdi + rbp]
0x720a:	add	r15, 1
0x720e:	test	dl, dl
0x7210:	jne	0x7160


0x725f:	add	r15, 2
0x7263:	xor	r10d, r10d
0x7266:	xor	r8d, r8d
0x7269:	jmp	0x71fd


0x7259:	mov	byte ptr [r14 + r15 + 1], 0x27
0x725f:	add	r15, 2
0x7263:	xor	r10d, r10d
0x7266:	xor	r8d, r8d
0x7269:	jmp	0x71fd


0x6838:	cmp	r11, rbp
0x683b:	setne	r12b
0x683f:	cmp	r11, -1
0x6843:	jne	0x6852


0x69d9:	add	r15, 2
0x69dd:	xor	r8d, r8d
0x69e0:	cmp	r15, r13
0x69e3:	jae	0x69e9


0x69d3:	mov	byte ptr [r14 + r15 + 1], 0x27
0x69d9:	add	r15, 2
0x69dd:	xor	r8d, r8d
0x69e0:	cmp	r15, r13
0x69e3:	jae	0x69e9


0x71e4:	and	ebx, 7
0x71e7:	add	rbp, 1
0x71eb:	add	r15, 3
0x71ef:	add	ebx, 0x30
0x71f2:	cmp	rbp, rcx
0x71f5:	jae	0x69e0


0x71d4:	mov	eax, ebx
0x71d6:	shr	al, 3
0x71d9:	and	eax, 7
0x71dc:	add	eax, 0x30
0x71df:	mov	byte ptr [r14 + r15 + 2], al
0x71e4:	and	ebx, 7
0x71e7:	add	rbp, 1
0x71eb:	add	r15, 3
0x71ef:	add	ebx, 0x30
0x71f2:	cmp	rbp, rcx
0x71f5:	jae	0x69e0


0x71a4:	add	r15, 3
0x71a8:	mov	r8d, eax
0x71ab:	cmp	r13, r15
0x71ae:	jbe	0x71b5


0x719e:	mov	byte ptr [r14 + r15 + 2], 0x27
0x71a4:	add	r15, 3
0x71a8:	mov	r8d, eax
0x71ab:	cmp	r13, r15
0x71ae:	jbe	0x71b5


0x6b08:	mov	eax, r8d
0x6b0b:	xor	eax, 1
0x6b0e:	and	al, dl
0x6b10:	je	0x6b41


0x7358:	mov	rbp, r11
0x735b:	jmp	0x72d9


0x71fb:	mov	esi, edx
0x71fd:	cmp	r13, r15
0x7200:	jbe	0x7206


0x6b41:	cmp	r13, r15
0x6b44:	jbe	0x6b4b


0x6b12:	cmp	r13, r15
0x6b15:	jbe	0x6b1c


0x6b4b:	add	r15, 1
0x6b4f:	add	rbp, 1
0x6b53:	jmp	0x69e0


0x6b46:	mov	byte ptr [r14 + r15], 0x5c
0x6b4b:	add	r15, 1
0x6b4f:	add	rbp, 1
0x6b53:	jmp	0x69e0


0x6b1c:	lea	rdx, [r15 + 1]
0x6b20:	cmp	r13, rdx
0x6b23:	jbe	0x6b2b


0x6b17:	mov	byte ptr [r14 + r15], 0x27
0x6b1c:	lea	rdx, [r15 + 1]
0x6b20:	cmp	r13, rdx
0x6b23:	jbe	0x6b2b


0x6b2b:	lea	rdx, [r15 + 2]
0x6b2f:	cmp	r13, rdx
0x6b32:	jbe	0x6b3a


0x6b25:	mov	byte ptr [r14 + r15 + 1], 0x24
0x6b2b:	lea	rdx, [r15 + 2]
0x6b2f:	cmp	r13, rdx
0x6b32:	jbe	0x6b3a


0x6b3a:	add	r15, 3
0x6b3e:	mov	r8d, eax
0x6b41:	cmp	r13, r15
0x6b44:	jbe	0x6b4b


0x6b34:	mov	byte ptr [r14 + r15 + 2], 0x27
0x6b3a:	add	r15, 3
0x6b3e:	mov	r8d, eax
0x6b41:	cmp	r13, r15
0x6b44:	jbe	0x6b4b


0x70e5:	mov	rdi, qword ptr [rsp + 0x28]
0x70ea:	test	eax, eax
0x70ec:	mov	eax, 0
0x70f1:	cmove	r12d, eax
0x70f5:	add	rbx, r15
0x70f8:	call	0x18b0


0x70fd:	test	eax, eax
0x70ff:	je	0x7083


0x7083:	mov	rax, qword ptr [rsp + 0x10]
0x7088:	lea	r14, [rbp + rbx]
0x708d:	mov	rdx, qword ptr [rsp + 0x30]
0x7092:	mov	rcx, qword ptr [rsp + 0x28]
0x7097:	mov	rdi, qword ptr [rsp + 0x38]
0x709c:	lea	r13, [rax + r14]
0x70a0:	sub	rdx, r14
0x70a3:	mov	rsi, r13
0x70a6:	call	0x8f50


0x68ac:	movzx	r8d, byte ptr [rsp + 0x38]
0x68b2:	movzx	r10d, byte ptr [rsp + 0x30]
0x68b8:	mov	r11, rax
0x68bb:	mov	r9, qword ptr [rsp + 0x28]
0x68c0:	cmp	rbx, r11
0x68c3:	mov	byte ptr [rsp + 0x28], r10b
0x68c8:	ja	0x6e80


0x7030:	movzx	r8d, byte ptr [rsp + 0x40]
0x7036:	movzx	r10d, byte ptr [rsp + 0x38]
0x703c:	mov	r11, rax
0x703f:	mov	r9, qword ptr [rsp + 0x30]
0x7044:	lea	rax, [rsp + 0x9c]
0x704c:	xor	ecx, ecx
0x704e:	mov	byte ptr [rsp + 0x7e], bl
0x7052:	mov	byte ptr [rsp + 0x7d], r8b
0x7057:	mov	rbx, rcx
0x705a:	mov	qword ptr [rsp + 0x88], r9
0x7062:	mov	qword ptr [rsp + 0x38], rax
0x7067:	mov	byte ptr [rsp + 0x7f], r10b
0x706c:	mov	qword ptr [rsp + 0x80], r15
0x7074:	mov	qword ptr [rsp + 0x40], r14
0x7079:	mov	qword ptr [rsp + 0x70], r13
0x707e:	mov	qword ptr [rsp + 0x30], r11
0x7083:	mov	rax, qword ptr [rsp + 0x10]
0x7088:	lea	r14, [rbp + rbx]
0x708d:	mov	rdx, qword ptr [rsp + 0x30]
0x7092:	mov	rcx, qword ptr [rsp + 0x28]
0x7097:	mov	rdi, qword ptr [rsp + 0x38]
0x709c:	lea	r13, [rax + r14]
0x70a0:	sub	rdx, r14
0x70a3:	mov	rsi, r13
0x70a6:	call	0x8f50


0x6c68:	mov	rcx, qword ptr [rax]
0x6c6b:	movzx	edx, bl
0x6c6e:	movzx	r10d, byte ptr [rsp + 0x28]
0x6c74:	movzx	r8d, byte ptr [rsp + 0x30]
0x6c7a:	mov	r11, qword ptr [rsp + 0x38]
0x6c7f:	mov	edi, 1
0x6c84:	movzx	eax, word ptr [rcx + rdx*2]
0x6c88:	and	ax, 0x4000
0x6c8c:	setne	r12b
0x6c90:	sete	al
0x6c93:	and	al, byte ptr [rsp + 0xd]
0x6c97:	test	al, al
0x6c99:	jne	0x7631


0x6940:	xor	r10d, r10d
0x6943:	cmp	r11, 1
0x6947:	setne	al
0x694a:	cmp	r11, -1
0x694e:	jne	0x695c


0x6950:	mov	rax, qword ptr [rsp + 0x10]
0x6955:	cmp	byte ptr [rax + 1], 0
0x6959:	setne	al
0x695c:	cmp	dword ptr [rsp + 8], 2
0x6961:	sete	dl
0x6964:	test	al, al
0x6966:	je	0x6bb8


0x695c:	cmp	dword ptr [rsp + 8], 2
0x6961:	sete	dl
0x6964:	test	al, al
0x6966:	je	0x6bb8


0x6bb8:	test	rbp, rbp
0x6bbb:	jne	0x696c


0x696c:	xor	r12d, r12d
0x696f:	xor	eax, eax
0x6971:	nop	dword ptr [rax]
0x6978:	cmp	byte ptr [rsp + 0xd], 1
0x697d:	jne	0x6a92


0x6bc1:	movzx	eax, byte ptr [rsp + 0xf]
0x6bc6:	and	al, dl
0x6bc8:	je	0x6978


0x6bce:	mov	rbp, r11
0x6bd1:	mov	dword ptr [rsp + 8], 2
0x6bd9:	jmp	0x72d9


0x6fd8:	cmp	byte ptr [rsp + 0xf], 0
0x6fdd:	jne	0x7800


0x6a20:	cmp	eax, 5
0x6a23:	je	0x6f98


0x6fe3:	xor	r12d, r12d
0x6fe6:	xor	eax, eax
0x6fe8:	mov	ebx, 0x3f
0x6fed:	jmp	0x69a9


0x7800:	mov	rbp, r11
0x7803:	movzx	eax, byte ptr [rsp + 0xf]
0x7808:	jmp	0x72d9


0x6f98:	test	byte ptr [rsp + 0x78], 4
0x6f9d:	je	0x6fc0


0x6a29:	cmp	eax, 2
0x6a2c:	mov	ebx, 0x3f
0x6a31:	sete	dl
0x6a34:	xor	r12d, r12d
0x6a37:	xor	eax, eax
0x6a39:	jmp	0x6978


0x6fc0:	xor	edx, edx
0x6fc2:	xor	r12d, r12d
0x6fc5:	xor	eax, eax
0x6fc7:	mov	ebx, 0x3f
0x6fcc:	jmp	0x6978


0x6f9f:	lea	rcx, [rbp + 2]
0x6fa3:	cmp	rcx, r11
0x6fa6:	jae	0x6fc0


0x6fa8:	mov	rax, qword ptr [rsp + 0x10]
0x6fad:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x6fb2:	je	0x7742


0x7742:	movzx	ebx, byte ptr [rax + rcx]
0x7746:	cmp	bl, 0x3e
0x7749:	ja	0x6fc0


0x774f:	movabs	rax, 0x7000a38200000000
0x7759:	bt	rax, rbx
0x775d:	jae	0x6fc0


0x7763:	cmp	byte ptr [rsp + 0xf], 0
0x7768:	jne	0x7952


0x776e:	cmp	r13, r15
0x7771:	jbe	0x7778


0x7952:	mov	rbp, r11
0x7955:	jmp	0x72f0


0x7778:	lea	rax, [r15 + 1]
0x777c:	cmp	r13, rax
0x777f:	jbe	0x7787


0x7773:	mov	byte ptr [r14 + r15], 0x3f
0x7778:	lea	rax, [r15 + 1]
0x777c:	cmp	r13, rax
0x777f:	jbe	0x7787


0x7787:	lea	rax, [r15 + 2]
0x778b:	cmp	r13, rax
0x778e:	jbe	0x7796


0x7781:	mov	byte ptr [r14 + r15 + 1], 0x22
0x7787:	lea	rax, [r15 + 2]
0x778b:	cmp	r13, rax
0x778e:	jbe	0x7796


0x7796:	lea	rax, [r15 + 3]
0x779a:	cmp	r13, rax
0x779d:	jbe	0x77a5


0x7790:	mov	byte ptr [r14 + r15 + 2], 0x22
0x7796:	lea	rax, [r15 + 3]
0x779a:	cmp	r13, rax
0x779d:	jbe	0x77a5


0x77a5:	add	r15, 4
0x77a9:	xor	edx, edx
0x77ab:	xor	r12d, r12d
0x77ae:	xor	eax, eax
0x77b0:	mov	rbp, rcx
0x77b3:	jmp	0x6978


0x779f:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x77a5:	add	r15, 4
0x77a9:	xor	edx, edx
0x77ab:	xor	r12d, r12d
0x77ae:	xor	eax, eax
0x77b0:	mov	rbp, rcx
0x77b3:	jmp	0x6978


0x6f50:	cmp	byte ptr [rsp + 0xf], 0
0x6f55:	jne	0x7800


0x6a4e:	mov	byte ptr [rsp + 0x7c], r12b
0x6a53:	xor	edx, edx
0x6a55:	xor	eax, eax
0x6a57:	mov	ebx, 0x27
0x6a5c:	jmp	0x6978


0x6f5b:	test	r13, r13
0x6f5e:	je	0x7360


0x7360:	cmp	r13, r15
0x7363:	jbe	0x736a


0x6f64:	xor	edx, edx
0x6f66:	cmp	qword ptr [rsp + 0x50], 0
0x6f6c:	jne	0x7360


0x736a:	lea	rax, [r15 + 1]
0x736e:	cmp	r13, rax
0x7371:	jbe	0x7379


0x7365:	mov	byte ptr [r14 + r15], 0x27
0x736a:	lea	rax, [r15 + 1]
0x736e:	cmp	r13, rax
0x7371:	jbe	0x7379


0x6f72:	mov	qword ptr [rsp + 0x50], r13
0x6f77:	add	r15, 3
0x6f7b:	xor	eax, eax
0x6f7d:	mov	byte ptr [rsp + 0x7c], r12b
0x6f82:	xor	r8d, r8d
0x6f85:	mov	r13, rdx
0x6f88:	mov	ebx, 0x27
0x6f8d:	jmp	0x69a9


0x7379:	lea	rax, [r15 + 2]
0x737d:	cmp	r13, rax
0x7380:	jbe	0x7972


0x7373:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x7379:	lea	rax, [r15 + 2]
0x737d:	cmp	r13, rax
0x7380:	jbe	0x7972


0x7972:	mov	rdx, r13
0x7975:	mov	r13, qword ptr [rsp + 0x50]
0x797a:	jmp	0x6f72


0x7386:	mov	rdx, r13
0x7389:	mov	byte ptr [r14 + r15 + 2], 0x27
0x738f:	mov	r13, qword ptr [rsp + 0x50]
0x7394:	jmp	0x6f72


0x6a84:	cmp	byte ptr [rsp + 0xd], 0
0x6a89:	jne	0x6af0


0x6a8b:	mov	ebx, edx
0x6a8d:	xor	r12d, r12d
0x6a90:	xor	eax, eax
0x6a92:	cmp	byte ptr [rsp + 0xf], 0
0x6a97:	jne	0x698b


0x6af0:	xor	r12d, r12d
0x6af3:	cmp	dword ptr [rsp + 8], 2
0x6af8:	sete	dl
0x6afb:	cmp	byte ptr [rsp + 0xf], 0
0x6b00:	mov	eax, edx
0x6b02:	jne	0x7358


0x6e90:	cmp	byte ptr [rsp + 0xf], 0
0x6e95:	jne	0x7800


0x6ac3:	cmp	byte ptr [rsp + 0xd], 0
0x6ac8:	je	0x6ce0


0x6e9b:	add	rbp, 1
0x6e9f:	mov	eax, r8d
0x6ea2:	xor	r12d, r12d
0x6ea5:	mov	ebx, 0x5c
0x6eaa:	jmp	0x69bc


0x6ce0:	mov	edx, 0x5c
0x6ce5:	mov	ebx, 0x5c
0x6cea:	jmp	0x6a84


0x6ace:	cmp	byte ptr [rsp + 0xf], 0
0x6ad3:	je	0x6ce0


0x6ad9:	cmp	qword ptr [rsp + 0x18], 0
0x6adf:	jne	0x6e9b


0x6ae5:	mov	ebx, 0x5c
0x6aea:	nop	word ptr [rax + rax]
0x6af0:	xor	r12d, r12d
0x6af3:	cmp	dword ptr [rsp + 8], 2
0x6af8:	sete	dl
0x6afb:	cmp	byte ptr [rsp + 0xf], 0
0x6b00:	mov	eax, edx
0x6b02:	jne	0x7358


0x6b6b:	xor	edx, edx
0x6b6d:	test	byte ptr [rsp + 0x78], 1
0x6b72:	je	0x6a8b


0x6d33:	cmp	dword ptr [rsp + 8], 2
0x6d38:	sete	dl
0x6d3b:	cmp	byte ptr [rsp + 0xf], 0
0x6d40:	jne	0x78da


0x6b78:	add	rbp, 1
0x6b7c:	jmp	0x6838


0x6d46:	mov	eax, r8d
0x6d49:	mov	rcx, r15
0x6d4c:	xor	eax, 1
0x6d4f:	and	al, dl
0x6d51:	je	0x6d80


0x78da:	movzx	ebx, byte ptr [rsp + 0xf]
0x78df:	mov	rbp, r11
0x78e2:	mov	eax, edx
0x78e4:	mov	byte ptr [rsp + 0xd], bl
0x78e8:	jmp	0x72d9


0x6d80:	cmp	r13, rcx
0x6d83:	jbe	0x6d8a


0x6d53:	cmp	r13, r15
0x6d56:	jbe	0x6d5d


0x6d8a:	cmp	dword ptr [rsp + 8], 2
0x6d8f:	lea	r15, [rcx + 1]
0x6d93:	je	0x7399


0x6d85:	mov	byte ptr [r14 + rcx], 0x5c
0x6d8a:	cmp	dword ptr [rsp + 8], 2
0x6d8f:	lea	r15, [rcx + 1]
0x6d93:	je	0x7399


0x6d5d:	lea	rcx, [r15 + 1]
0x6d61:	cmp	r13, rcx
0x6d64:	jbe	0x6d6c


0x6d58:	mov	byte ptr [r14 + r15], 0x27
0x6d5d:	lea	rcx, [r15 + 1]
0x6d61:	cmp	r13, rcx
0x6d64:	jbe	0x6d6c


0x7399:	mov	eax, r12d
0x739c:	mov	ebx, 0x30
0x73a1:	xor	r12d, r12d
0x73a4:	jmp	0x69a9


0x6d99:	lea	rax, [rbp + 1]
0x6d9d:	cmp	rax, r11
0x6da0:	jae	0x6dbb


0x6d6c:	lea	rcx, [r15 + 2]
0x6d70:	cmp	r13, rcx
0x6d73:	ja	0x73a9


0x6d66:	mov	byte ptr [r14 + r15 + 1], 0x24
0x6d6c:	lea	rcx, [r15 + 2]
0x6d70:	cmp	r13, rcx
0x6d73:	ja	0x73a9


0x6da2:	mov	rax, qword ptr [rsp + 0x10]
0x6da7:	movzx	eax, byte ptr [rax + rbp + 1]
0x6dac:	mov	byte ptr [rsp + 0x28], al
0x6db0:	sub	eax, 0x30
0x6db3:	cmp	al, 9
0x6db5:	jbe	0x75e9


0x6dbb:	mov	eax, r12d
0x6dbe:	mov	ebx, 0x30
0x6dc3:	xor	r12d, r12d
0x6dc6:	jmp	0x6978


0x6d79:	lea	rcx, [r15 + 3]
0x6d7d:	mov	r8d, eax
0x6d80:	cmp	r13, rcx
0x6d83:	jbe	0x6d8a


0x73a9:	mov	byte ptr [r14 + r15 + 2], 0x27
0x73af:	jmp	0x6d79


0x75e9:	cmp	r13, r15
0x75ec:	jbe	0x75f3


0x75f3:	lea	rax, [rcx + 2]
0x75f7:	cmp	r13, rax
0x75fa:	jbe	0x7602


0x75ee:	mov	byte ptr [r14 + r15], 0x30
0x75f3:	lea	rax, [rcx + 2]
0x75f7:	cmp	r13, rax
0x75fa:	jbe	0x7602


0x7602:	mov	eax, r12d
0x7605:	lea	r15, [rcx + 3]
0x7609:	xor	r12d, r12d
0x760c:	mov	ebx, 0x30
0x7611:	jmp	0x6978


0x75fc:	mov	byte ptr [r14 + rcx + 2], 0x30
0x7602:	mov	eax, r12d
0x7605:	lea	r15, [rcx + 3]
0x7609:	xor	r12d, r12d
0x760c:	mov	ebx, 0x30
0x7611:	jmp	0x6978


0x6a72:	cmp	dword ptr [rsp + 8], 2
0x6a77:	sete	al
0x6a7a:	and	al, byte ptr [rsp + 0xf]
0x6a7e:	jne	0x6bce


0x6e30:	mov	edx, 0xd
0x6e35:	xor	r10d, r10d
0x6e38:	mov	ebx, 0x72
0x6e3d:	jmp	0x6a72


0x73b4:	test	ebx, ebx
0x73b6:	jne	0x67e3


0x73bc:	mov	byte ptr [rsp + 0xd], 1
0x73c1:	test	r13, r13
0x73c4:	jne	0x795a


0x73ca:	lea	rax, [rip + 0x2a44]
0x73d1:	mov	qword ptr [rsp + 0x50], 0
0x73da:	mov	byte ptr [rsp + 0xe], 1
0x73df:	mov	byte ptr [rsp + 0x7c], 0
0x73e4:	xor	r12d, r12d
0x73e7:	mov	byte ptr [rsp + 0xf], 0
0x73ec:	mov	qword ptr [rsp + 0x18], 1
0x73f5:	mov	qword ptr [rsp + 0x48], rax
0x73fa:	mov	r15d, 1
0x7400:	mov	dword ptr [rsp + 8], 2
0x7408:	jmp	0x6823


0x795a:	mov	byte ptr [rsp + 0xe], 1
0x795f:	xor	eax, eax
0x7961:	xor	r12d, r12d
0x7964:	mov	qword ptr [rsp + 0x50], 0
0x796d:	jmp	0x6f14


0x6f14:	lea	rbx, [rip + 0x2efa]
0x6f1b:	mov	byte ptr [r14], 0x27
0x6f1f:	mov	dword ptr [rsp + 8], 2
0x6f27:	mov	r15d, 1
0x6f2d:	mov	qword ptr [rsp + 0x18], 1
0x6f36:	mov	byte ptr [rsp + 0xf], 0
0x6f3b:	mov	qword ptr [rsp + 0x48], rbx
0x6f40:	mov	byte ptr [rsp + 0x7c], al
0x6f44:	jmp	0x6823


0x7418:	test	r13, r13
0x741b:	je	0x7646


0x780d:	lea	rax, [rip + 0x25ff]
0x7814:	mov	byte ptr [rsp + 0xe], 1
0x7819:	mov	byte ptr [rsp + 0x7c], 0
0x781e:	xor	r12d, r12d
0x7821:	mov	qword ptr [rsp + 0x50], 0
0x782a:	mov	byte ptr [rsp + 0xf], 1
0x782f:	mov	byte ptr [rsp + 0xd], 1
0x7834:	mov	qword ptr [rsp + 0x18], 1
0x783d:	xor	r15d, r15d
0x7840:	mov	qword ptr [rsp + 0x48], rax
0x7845:	jmp	0x6823


0x7646:	mov	qword ptr [rsp + 0x50], 0
0x764f:	mov	byte ptr [rsp + 0xe], 1
0x7654:	xor	r12d, r12d
0x7657:	mov	byte ptr [rsp + 0x7c], 0
0x765c:	jmp	0x743b


0x7421:	mov	byte ptr [r14], 0x22
0x7425:	mov	byte ptr [rsp + 0xe], 1
0x742a:	xor	r12d, r12d
0x742d:	mov	byte ptr [rsp + 0x7c], 0
0x7432:	mov	qword ptr [rsp + 0x50], 0
0x743b:	lea	rax, [rip + 0x29d1]
0x7442:	mov	byte ptr [rsp + 0xf], 0
0x7447:	mov	byte ptr [rsp + 0xd], 1
0x744c:	mov	qword ptr [rsp + 0x18], 1
0x7455:	mov	r15d, 1
0x745b:	mov	qword ptr [rsp + 0x48], rax
0x7460:	jmp	0x6823


0x743b:	lea	rax, [rip + 0x29d1]
0x7442:	mov	byte ptr [rsp + 0xf], 0
0x7447:	mov	byte ptr [rsp + 0xd], 1
0x744c:	mov	qword ptr [rsp + 0x18], 1
0x7455:	mov	r15d, 1
0x745b:	mov	qword ptr [rsp + 0x48], rax
0x7460:	jmp	0x6823


0x7465:	lea	rax, [rip + 0x29a7]
0x746c:	mov	byte ptr [rsp + 0xe], 1
0x7471:	mov	byte ptr [rsp + 0x7c], 0
0x7476:	xor	r12d, r12d
0x7479:	mov	qword ptr [rsp + 0x50], 0
0x7482:	mov	byte ptr [rsp + 0xf], 1
0x7487:	mov	byte ptr [rsp + 0xd], 1
0x748c:	mov	qword ptr [rsp + 0x18], 1
0x7495:	xor	r15d, r15d
0x7498:	mov	qword ptr [rsp + 0x48], rax
0x749d:	mov	dword ptr [rsp + 8], 5
0x74a5:	jmp	0x6823


0x74aa:	mov	byte ptr [rsp + 0xe], 1
0x74af:	mov	byte ptr [rsp + 0x7c], 0
0x74b4:	xor	r12d, r12d
0x74b7:	mov	qword ptr [rsp + 0x50], 0
0x74c0:	mov	byte ptr [rsp + 0xf], 0
0x74c5:	xor	r15d, r15d
0x74c8:	mov	byte ptr [rsp + 0xd], 1
0x74cd:	mov	qword ptr [rsp + 0x18], 0
0x74d6:	mov	qword ptr [rsp + 0x48], 0
0x74df:	jmp	0x6823


0x74e4:	cmp	dword ptr [rsp + 8], 0xa
0x74e9:	je	0x7541


0x7541:	xor	r15d, r15d
0x7544:	test	ebx, ebx
0x7546:	je	0x770d


0x74eb:	lea	rsi, [rip + 0x2925]
0x74f2:	xor	edi, edi
0x74f4:	mov	edx, 5
0x74f9:	call	0x1660


0x770d:	mov	rdx, qword ptr [rsp + 0x68]
0x7712:	movzx	eax, byte ptr [rdx]
0x7715:	test	al, al
0x7717:	je	0x754c


0x754c:	test	ebx, ebx
0x754e:	mov	rbx, qword ptr [rsp + 0x60]
0x7553:	setne	byte ptr [rsp + 0xf]
0x7558:	xor	r12d, r12d
0x755b:	mov	rdi, rbx
0x755e:	call	0x1680


0x7729:	add	r15, 1
0x772d:	movzx	eax, byte ptr [rdx + r15]
0x7732:	test	al, al
0x7734:	jne	0x7720


0x7725:	mov	byte ptr [r14 + r15], al
0x7729:	add	r15, 1
0x772d:	movzx	eax, byte ptr [rdx + r15]
0x7732:	test	al, al
0x7734:	jne	0x7720


0x7736:	jmp	0x754c


0x7720:	cmp	r13, r15
0x7723:	jbe	0x7729


0x7563:	mov	qword ptr [rsp + 0x48], rbx
0x7568:	mov	qword ptr [rsp + 0x18], rax
0x756d:	mov	byte ptr [rsp + 0xe], 1
0x7572:	mov	byte ptr [rsp + 0x7c], 0
0x7577:	mov	qword ptr [rsp + 0x50], 0
0x7580:	mov	byte ptr [rsp + 0xd], 1
0x7585:	jmp	0x6823


0x74fe:	mov	rcx, rax
0x7501:	mov	qword ptr [rsp + 0x68], rax
0x7506:	lea	rax, [rip + 0x290a]
0x750d:	cmp	rcx, rax
0x7510:	je	0x78ae


0x78ae:	mov	esi, dword ptr [rsp + 8]
0x78b2:	mov	rdi, rcx
0x78b5:	call	0x6660


0x7516:	lea	rsi, [rip + 0x28f8]
0x751d:	xor	edi, edi
0x751f:	mov	edx, 5
0x7524:	call	0x1660


0x7529:	mov	rcx, rax
0x752c:	mov	qword ptr [rsp + 0x60], rax
0x7531:	lea	rax, [rip + 0x28dd]
0x7538:	cmp	rcx, rax
0x753b:	je	0x78c4


0x78c4:	mov	esi, dword ptr [rsp + 8]
0x78c8:	mov	rdi, rcx
0x78cb:	call	0x6660


0x78d0:	mov	qword ptr [rsp + 0x60], rax
0x78d5:	jmp	0x7541


0x78ba:	mov	qword ptr [rsp + 0x68], rax
0x78bf:	jmp	0x7516


0x758a:	mov	byte ptr [rsp + 0xe], 1
0x758f:	mov	byte ptr [rsp + 0x7c], 0
0x7594:	xor	r12d, r12d
0x7597:	mov	qword ptr [rsp + 0x50], 0
0x75a0:	mov	byte ptr [rsp + 0xf], 0
0x75a5:	xor	r15d, r15d
0x75a8:	mov	byte ptr [rsp + 0xd], 0
0x75ad:	mov	qword ptr [rsp + 0x18], 0
0x75b6:	mov	qword ptr [rsp + 0x48], 0
0x75bf:	jmp	0x6823


0x75c4:	mov	byte ptr [rsp + 0xe], 1
0x75c9:	mov	byte ptr [rsp + 0x7c], 0
0x75ce:	xor	r12d, r12d
0x75d1:	mov	qword ptr [rsp + 0x50], 0
0x75da:	mov	byte ptr [rsp + 0xf], 1
0x75df:	mov	byte ptr [rsp + 0xd], 1
0x75e4:	jmp	0x6803


0x6803:	lea	rax, [rip + 0x360b]
0x680a:	mov	qword ptr [rsp + 0x18], 1
0x6813:	xor	r15d, r15d
0x6816:	mov	dword ptr [rsp + 8], 2
0x681e:	mov	qword ptr [rsp + 0x48], rax
0x6823:	xor	r11d, r11d
0x6826:	mov	rax, rbp
0x6829:	mov	r8d, r12d
0x682c:	mov	rbp, r11
0x682f:	mov	r11, rax
0x6832:	nop	word ptr [rax + rax]
0x6838:	cmp	r11, rbp
0x683b:	setne	r12b
0x683f:	cmp	r11, -1
0x6843:	jne	0x6852


0x77b8:	test	ebx, ebx
0x77ba:	je	0x7948


0x7948:	mov	byte ptr [rsp + 0xd], 0
0x794d:	jmp	0x73c1


0x77c0:	lea	rax, [rip + 0x264e]
0x77c7:	mov	byte ptr [rsp + 0xe], 1
0x77cc:	mov	byte ptr [rsp + 0x7c], 0
0x77d1:	xor	r12d, r12d
0x77d4:	mov	qword ptr [rsp + 0x50], 0
0x77dd:	mov	byte ptr [rsp + 0xf], 1
0x77e2:	mov	byte ptr [rsp + 0xd], 0
0x77e7:	mov	qword ptr [rsp + 0x18], 1
0x77f0:	xor	r15d, r15d
0x77f3:	mov	qword ptr [rsp + 0x48], rax
0x77f8:	jmp	0x6823


0x73c1:	test	r13, r13
0x73c4:	jne	0x795a


0x7984:	nop	
0x7986:	nop	word ptr cs:[rax + rax]


0x7b3b:	nop	dword ptr [rax + rax]


0x7b76:	nop	word ptr cs:[rax + rax]


0x7b91:	nop	dword ptr [rax + rax]
0x7b96:	nop	word ptr cs:[rax + rax]


0x7bb1:	nop	dword ptr [rax + rax]
0x7bb6:	nop	word ptr cs:[rax + rax]


0x7bf5:	nop	
0x7bf6:	nop	word ptr cs:[rax + rax]


0x7c15:	nop	
0x7c16:	nop	word ptr cs:[rax + rax]


0x7cc4:	nop	
0x7cc6:	nop	word ptr cs:[rax + rax]


0x7db3:	nop	dword ptr [rax]
0x7db6:	nop	word ptr cs:[rax + rax]


0x7dca:	nop	word ptr [rax + rax]


0x7e63:	nop	dword ptr [rax]
0x7e66:	nop	word ptr cs:[rax + rax]


0x7e83:	nop	dword ptr [rax]
0x7e86:	nop	word ptr cs:[rax + rax]


0x7e9c:	nop	dword ptr [rax]


0x7eb8:	nop	dword ptr [rax + rax]


0x7ed4:	nop	
0x7ed6:	nop	word ptr cs:[rax + rax]


0x7f6e:	nop	


0x7ffa:	nop	word ptr [rax + rax]


0x800c:	nop	dword ptr [rax]


0x801f:	nop	


0x80b8:	nop	dword ptr [rax + rax]


0x80e1:	nop	dword ptr [rax + rax]
0x80e6:	nop	word ptr cs:[rax + rax]


0x80fa:	nop	word ptr [rax + rax]


0x818e:	nop	


0x8221:	nop	dword ptr [rax + rax]
0x8226:	nop	word ptr cs:[rax + rax]


0x823c:	nop	dword ptr [rax]


0x8257:	nop	word ptr [rax + rax]


0x8273:	nop	dword ptr [rax]
0x8276:	nop	word ptr cs:[rax + rax]


0x828c:	nop	dword ptr [rax]


0x82a4:	nop	
0x82a6:	nop	word ptr cs:[rax + rax]


0x82c3:	nop	dword ptr [rax]
0x82c6:	nop	word ptr cs:[rax + rax]


0x82e8:	nop	dword ptr [rax + rax]


0x82fe:	nop	


0x8717:	nop	word ptr [rax + rax]


0x87b8:	nop	dword ptr [rax + rax]


0x8895:	nop	
0x8896:	nop	word ptr cs:[rax + rax]


0x893a:	nop	word ptr [rax + rax]


0x8964:	nop	
0x8966:	nop	word ptr cs:[rax + rax]


0x8972:	nop	dword ptr [rax]
0x8976:	nop	word ptr cs:[rax + rax]


0x89b6:	nop	word ptr cs:[rax + rax]


0x89e4:	nop	
0x89e6:	nop	word ptr cs:[rax + rax]


0x8a72:	nop	dword ptr [rax]
0x8a76:	nop	word ptr cs:[rax + rax]


0x8aca:	nop	word ptr [rax + rax]


0x8ae7:	nop	word ptr [rax + rax]


0x8b1e:	nop	


0x8b48:	nop	dword ptr [rax + rax]


0x8b63:	nop	word ptr cs:[rax + rax]
0x8b6d:	nop	dword ptr [rax]


0x8ba5:	nop	word ptr cs:[rax + rax]
0x8baf:	nop	


0x8c2b:	nop	dword ptr [rax + rax]


0x8eae:	nop	


0x8f47:	nop	word ptr [rax + rax]


0x8fd3:	nop	word ptr cs:[rax + rax]
0x8fdd:	nop	dword ptr [rax]


0x905d:	nop	dword ptr [rax]


0x90fc:	nop	dword ptr [rax]


0x9165:	nop	
0x9166:	nop	word ptr cs:[rax + rax]


0x9172:	nop	word ptr cs:[rax + rax]
0x917c:	nop	dword ptr [rax]


0x6a10:	xor	r10d, r10d
0x6a13:	mov	eax, dword ptr [rsp + 8]
0x6a17:	cmp	eax, 2
0x6a1a:	je	0x6fd8


0x6a40:	xor	r10d, r10d
0x6a43:	cmp	dword ptr [rsp + 8], 2
0x6a48:	je	0x6f50


0x6a68:	mov	edx, 9
0x6a6d:	mov	ebx, 0x74
0x6a72:	cmp	dword ptr [rsp + 8], 2
0x6a77:	sete	al
0x6a7a:	and	al, byte ptr [rsp + 0xf]
0x6a7e:	jne	0x6bce


0x6aa8:	mov	edx, 8
0x6aad:	mov	ebx, 0x62
0x6ab2:	jmp	0x6a84


0x6ab8:	cmp	dword ptr [rsp + 8], 2
0x6abd:	je	0x6e90


0x6b60:	cmp	byte ptr [rsp + 0xd], 0
0x6b65:	jne	0x6d33


0x6b88:	cmp	dword ptr [rsp + 8], 2
0x6b8d:	sete	dl
0x6b90:	xor	eax, eax
0x6b92:	jmp	0x6978


0x6ba0:	mov	edx, 7
0x6ba5:	mov	ebx, 0x61
0x6baa:	jmp	0x6a84


0x6bb0:	cmp	dword ptr [rsp + 8], 2
0x6bb5:	sete	dl
0x6bb8:	test	rbp, rbp
0x6bbb:	jne	0x696c


0x6be0:	cmp	dword ptr [rsp + 8], 2
0x6be5:	sete	dl
0x6be8:	xor	r12d, r12d
0x6beb:	jmp	0x6bc1


0x6bf0:	cmp	dword ptr [rsp + 8], 2
0x6bf5:	mov	ebx, 0x20
0x6bfa:	sete	dl
0x6bfd:	jmp	0x6bc1


0x6c00:	mov	edx, 0xd
0x6c05:	mov	ebx, 0x72
0x6c0a:	jmp	0x6a72


0x6c10:	mov	edx, 0xc
0x6c15:	mov	ebx, 0x66
0x6c1a:	jmp	0x6a84


0x6c20:	mov	edx, 0xb
0x6c25:	mov	ebx, 0x76
0x6c2a:	jmp	0x6a84


0x6c30:	mov	edx, 0xa
0x6c35:	mov	ebx, 0x6e
0x6c3a:	jmp	0x6a72


0x6cd0:	xor	r10d, r10d
0x6cd3:	cmp	byte ptr [rsp + 0xd], 0
0x6cd8:	jne	0x6ace


0x6cf0:	mov	edx, 0xc
0x6cf5:	xor	r10d, r10d
0x6cf8:	mov	ebx, 0x66
0x6cfd:	jmp	0x6a84


0x6d08:	mov	edx, 0xa
0x6d0d:	xor	r10d, r10d
0x6d10:	mov	ebx, 0x6e
0x6d15:	jmp	0x6a72


0x6d20:	mov	ebx, 0x61
0x6d25:	jmp	0x6af0


0x6d30:	xor	r10d, r10d
0x6d33:	cmp	dword ptr [rsp + 8], 2
0x6d38:	sete	dl
0x6d3b:	cmp	byte ptr [rsp + 0xf], 0
0x6d40:	jne	0x78da


0x6dd0:	cmp	dword ptr [rsp + 8], 2
0x6dd5:	mov	r12d, r10d
0x6dd8:	sete	dl
0x6ddb:	xor	r10d, r10d
0x6dde:	xor	eax, eax
0x6de0:	jmp	0x6978


0x6de8:	cmp	dword ptr [rsp + 8], 2
0x6ded:	sete	dl
0x6df0:	xor	r10d, r10d
0x6df3:	jmp	0x6bb8


0x6e00:	cmp	dword ptr [rsp + 8], 2
0x6e05:	sete	dl
0x6e08:	xor	r10d, r10d
0x6e0b:	xor	r12d, r12d
0x6e0e:	jmp	0x6bc1


0x6e18:	cmp	dword ptr [rsp + 8], 2
0x6e1d:	mov	r12d, r10d
0x6e20:	mov	ebx, 0x20
0x6e25:	sete	dl
0x6e28:	xor	r10d, r10d
0x6e2b:	jmp	0x6bc1


0x6e48:	mov	ebx, 0x76
0x6e4d:	jmp	0x6af0


0x6e58:	mov	edx, 9
0x6e5d:	xor	r10d, r10d
0x6e60:	mov	ebx, 0x74
0x6e65:	jmp	0x6a72


0x6e70:	mov	ebx, 0x62
0x6e75:	jmp	0x6af0


0x7410:	test	ebx, ebx
0x7412:	jne	0x780d


0x19fd:	nop	dword ptr [rax]


0x1a24:	nop	dword ptr [rax]


0x1a46:	nop	word ptr cs:[rax + rax]


0x1a9d:	nop	dword ptr [rax]


0x1aba:	nop	word ptr [rax + rax]


0x1ada:	nop	word ptr [rax + rax]


0x1aec:	nop	dword ptr [rax]


0x1b0a:	nop	word ptr [rax + rax]


0x1b1a:	nop	word ptr [rax + rax]


0x1b2a:	nop	word ptr [rax + rax]


0x1eee:	nop	


0x21cc:	nop	dword ptr [rax]


0x2217:	nop	word ptr [rax + rax]


0x2277:	nop	word ptr [rax + rax]


0x233e:	nop	


0x23ea:	nop	word ptr [rax + rax]


0x2a96:	nop	word ptr cs:[rax + rax]


0x2ae7:	nop	word ptr [rax + rax]


0x2b31:	nop	dword ptr [rax]


0x2b89:	nop	dword ptr [rax]


0x2b93:	nop	dword ptr [rax + rax]


0x2bbb:	nop	dword ptr [rax + rax]


0x2bf2:	nop	word ptr [rax + rax]


0x2c18:	nop	dword ptr [rax + rax]


0x2c53:	nop	dword ptr [rax + rax]


0x2cb5:	nop	dword ptr [rax]


0x2ccc:	nop	dword ptr [rax]


0x2ce2:	nop	word ptr [rax + rax]


0x2d6f:	nop	


0x2dbe:	nop	


0x2e3e:	nop	


0x2e86:	nop	word ptr cs:[rax + rax]


0x6051:	nop	dword ptr [rax]


0x608c:	nop	dword ptr [rax]


0x60cf:	nop	


0x611e:	nop	


0x617d:	nop	dword ptr [rax]


0x61e5:	nop	dword ptr [rax]


0x63de:	nop	


0x644d:	nop	dword ptr [rax]


0x6465:	nop	dword ptr [rax]


0x647c:	nop	dword ptr [rax]


0x650b:	nop	dword ptr [rax + rax]


0x6549:	nop	dword ptr [rax]


0x6595:	nop	dword ptr [rax]


0x669c:	nop	dword ptr [rax]


0x66ed:	nop	dword ptr [rax]


0x6918:	nop	dword ptr [rax + rax]


0x6a07:	nop	word ptr [rax + rax]


0x6a3e:	nop	


0x6a61:	nop	dword ptr [rax]


0x6aa2:	nop	word ptr [rax + rax]


0x6ab4:	nop	dword ptr [rax]


0x6b58:	nop	dword ptr [rax + rax]


0x6b81:	nop	dword ptr [rax]


0x6b97:	nop	word ptr [rax + rax]


0x6baf:	nop	


0x6bde:	nop	


0x6bed:	nop	dword ptr [rax]


0x6bff:	nop	


0x6c0f:	nop	


0x6c1f:	nop	


0x6c2f:	nop	


0x6c3f:	nop	


0x6cac:	nop	dword ptr [rax]


0x6ccc:	nop	dword ptr [rax]


0x6cde:	nop	


0x6cef:	nop	


0x6d02:	nop	word ptr [rax + rax]


0x6d1a:	nop	word ptr [rax + rax]


0x6d2a:	nop	word ptr [rax + rax]


0x6dcb:	nop	dword ptr [rax + rax]


0x6de5:	nop	dword ptr [rax]


0x6df8:	nop	dword ptr [rax + rax]


0x6e13:	nop	dword ptr [rax + rax]


0x6e42:	nop	word ptr [rax + rax]


0x6e52:	nop	word ptr [rax + rax]


0x6e6a:	nop	word ptr [rax + rax]


0x6e7a:	nop	word ptr [rax + rax]


0x6e88:	nop	dword ptr [rax + rax]


0x6eaf:	nop	


0x6f49:	nop	dword ptr [rax]


0x6f92:	nop	word ptr [rax + rax]


0x6fb8:	nop	dword ptr [rax + rax]


0x6fd1:	nop	dword ptr [rax]


0x6ff2:	nop	word ptr [rax + rax]


0x7158:	nop	dword ptr [rax + rax]


0x726b:	nop	dword ptr [rax + rax]


0x728e:	nop	


0x7355:	nop	dword ptr [rax]


0x740d:	nop	dword ptr [rax]


0x7616:	nop	word ptr cs:[rax + rax]


0x76a9:	nop	dword ptr [rax]


0x771d:	nop	dword ptr [rax]


0x77fd:	nop	dword ptr [rax]


0x7b0b:	nop	dword ptr [rax + rax]


0x83a6:	nop	word ptr cs:[rax + rax]


0x8435:	nop	dword ptr [rax]


0x8456:	nop	word ptr cs:[rax + rax]


0x84b5:	nop	dword ptr [rax]


0x84f1:	nop	dword ptr [rax]


0x8538:	nop	dword ptr [rax + rax]


0x8587:	nop	word ptr [rax + rax]


0x85e4:	nop	dword ptr [rax]


0x8612:	nop	word ptr [rax + rax]


0x86c6:	nop	word ptr cs:[rax + rax]


0x8729:	nop	dword ptr [rax]


0x89a2:	nop	word ptr [rax + rax]


0x8a29:	nop	dword ptr [rax]


0x8a54:	nop	dword ptr [rax]


0x8aad:	nop	dword ptr [rax]


0x8bf5:	nop	dword ptr [rax]


0x8ccb:	nop	dword ptr [rax + rax]


0x8cf6:	nop	word ptr cs:[rax + rax]


0x8d2f:	nop	


0x8d79:	nop	dword ptr [rax]


0x8d9b:	nop	dword ptr [rax + rax]


0x8e41:	nop	dword ptr [rax]


0x8ed3:	nop	dword ptr [rax + rax]


0x8eff:	nop	


0x9014:	nop	dword ptr [rax]


0x9031:	nop	dword ptr [rax]


0x9042:	nop	word ptr [rax + rax]


0x909a:	nop	word ptr [rax + rax]


0x90e6:	nop	word ptr cs:[rax + rax]


