0x1d70: sub rsp,8
0x1d74: mov rax,qword ptr [rip + 0x20e25d]
0x1d7b: test rax,rax
0x1d7e: je 0x1d82
0x1d80: call rax
0x1d82: add rsp,8
0x1d86: ret 
0x1d90: push qword ptr [rip + 0x20df9a]
0x1d96: jmp qword ptr [rip + 0x20df9c]
0x1d9c: nop dword ptr [rax]
0x1da6: push 0
0x1dab: jmp 0x1d90
0x1db6: push 1
0x1dbb: jmp 0x1d90
0x1dc6: push 2
0x1dcb: jmp 0x1d90
0x1dd6: push 3
0x1ddb: jmp 0x1d90
0x1de6: push 4
0x1deb: jmp 0x1d90
0x1df0: jmp qword ptr [rip + 0x20df72]
0x1df6: push 5
0x1dfb: jmp 0x1d90
0x1e06: push 6
0x1e0b: jmp 0x1d90
0x1e10: jmp qword ptr [rip + 0x20df62]
0x1e16: push 7
0x1e1b: jmp 0x1d90
0x1e26: push 8
0x1e2b: jmp 0x1d90
0x1e30: jmp qword ptr [rip + 0x20df52]
0x1e36: push 9
0x1e3b: jmp 0x1d90
0x1e46: push 0xa
0x1e4b: jmp 0x1d90
0x1e50: jmp qword ptr [rip + 0x20df42]
0x1e56: push 0xb
0x1e5b: jmp 0x1d90
0x1e66: push 0xc
0x1e6b: jmp 0x1d90
0x1e76: push 0xd
0x1e7b: jmp 0x1d90
0x1e80: jmp qword ptr [rip + 0x20df2a]
0x1e86: push 0xe
0x1e8b: jmp 0x1d90
0x1e96: push 0xf
0x1e9b: jmp 0x1d90
0x1ea6: push 0x10
0x1eab: jmp 0x1d90
0x1eb0: jmp qword ptr [rip + 0x20df12]
0x1eb6: push 0x11
0x1ebb: jmp 0x1d90
0x1ec6: push 0x12
0x1ecb: jmp 0x1d90
0x1ed6: push 0x13
0x1edb: jmp 0x1d90
0x1ee6: push 0x14
0x1eeb: jmp 0x1d90
0x1ef6: push 0x15
0x1efb: jmp 0x1d90
0x1f00: jmp qword ptr [rip + 0x20deea]
0x1f06: push 0x16
0x1f0b: jmp 0x1d90
0x1f16: push 0x17
0x1f1b: jmp 0x1d90
0x1f20: jmp qword ptr [rip + 0x20deda]
0x1f26: push 0x18
0x1f2b: jmp 0x1d90
0x1f36: push 0x19
0x1f3b: jmp 0x1d90
0x1f46: push 0x1a
0x1f4b: jmp 0x1d90
0x1f56: push 0x1b
0x1f5b: jmp 0x1d90
0x1f66: push 0x1c
0x1f6b: jmp 0x1d90
0x1f70: jmp qword ptr [rip + 0x20deb2]
0x1f76: push 0x1d
0x1f7b: jmp 0x1d90
0x1f86: push 0x1e
0x1f8b: jmp 0x1d90
0x1f90: jmp qword ptr [rip + 0x20dea2]
0x1f96: push 0x1f
0x1f9b: jmp 0x1d90
0x1fa6: push 0x20
0x1fab: jmp 0x1d90
0x1fb0: jmp qword ptr [rip + 0x20de92]
0x1fb6: push 0x21
0x1fbb: jmp 0x1d90
0x1fc6: push 0x22
0x1fcb: jmp 0x1d90
0x1fd6: push 0x23
0x1fdb: jmp 0x1d90
0x1fe6: push 0x24
0x1feb: jmp 0x1d90
0x1ff6: push 0x25
0x1ffb: jmp 0x1d90
0x2006: push 0x26
0x200b: jmp 0x1d90
0x2016: push 0x27
0x201b: jmp 0x1d90
0x2026: push 0x28
0x202b: jmp 0x1d90
0x2036: push 0x29
0x203b: jmp 0x1d90
0x2046: push 0x2a
0x204b: jmp 0x1d90
0x2056: push 0x2b
0x205b: jmp 0x1d90
0x2060: jmp qword ptr [rip + 0x20de3a]
0x2066: push 0x2c
0x206b: jmp 0x1d90
0x2076: push 0x2d
0x207b: jmp 0x1d90
0x2086: push 0x2e
0x208b: jmp 0x1d90
0x2090: jmp qword ptr [rip + 0x20de22]
0x2096: push 0x2f
0x209b: jmp 0x1d90
0x20a6: push 0x30
0x20ab: jmp 0x1d90
0x20b0: jmp qword ptr [rip + 0x20de12]
0x20b6: push 0x31
0x20bb: jmp 0x1d90
0x20c6: push 0x32
0x20cb: jmp 0x1d90
0x20d6: push 0x33
0x20db: jmp 0x1d90
0x20e6: push 0x34
0x20eb: jmp 0x1d90
0x20f6: push 0x35
0x20fb: jmp 0x1d90
0x2100: jmp qword ptr [rip + 0x20ddea]
0x2106: push 0x36
0x210b: jmp 0x1d90
0x2116: push 0x37
0x211b: jmp 0x1d90
0x2120: jmp qword ptr [rip + 0x20ddda]
0x2126: push 0x38
0x212b: jmp 0x1d90
0x2136: push 0x39
0x213b: jmp 0x1d90
0x2140: jmp qword ptr [rip + 0x20ddca]
0x2146: push 0x3a
0x214b: jmp 0x1d90
0x2156: push 0x3b
0x215b: jmp 0x1d90
0x2166: push 0x3c
0x216b: jmp 0x1d90
0x2176: push 0x3d
0x217b: jmp 0x1d90
0x2180: jmp qword ptr [rip + 0x20ddaa]
0x2186: push 0x3e
0x218b: jmp 0x1d90
0x2196: push 0x3f
0x219b: jmp 0x1d90
0x21a0: jmp qword ptr [rip + 0x20dd9a]
0x21a6: push 0x40
0x21ab: jmp 0x1d90
0x21b6: push 0x41
0x21bb: jmp 0x1d90
0x21c6: push 0x42
0x21cb: jmp 0x1d90
0x21d6: push 0x43
0x21db: jmp 0x1d90
0x21e0: jmp qword ptr [rip + 0x20dd7a]
0x21e6: push 0x44
0x21eb: jmp 0x1d90
0x21f0: jmp qword ptr [rip + 0x20dd72]
0x21f6: push 0x45
0x21fb: jmp 0x1d90
0x2206: push 0x46
0x220b: jmp 0x1d90
0x2216: push 0x47
0x221b: jmp 0x1d90
0x2226: push 0x48
0x222b: jmp 0x1d90
0x2236: push 0x49
0x223b: jmp 0x1d90
0x2246: push 0x4a
0x224b: jmp 0x1d90
0x2256: push 0x4b
0x225b: jmp 0x1d90
0x2266: push 0x4c
0x226b: jmp 0x1d90
0x2276: push 0x4d
0x227b: jmp 0x1d90
0x2286: push 0x4e
0x228b: jmp 0x1d90
0x2296: push 0x4f
0x229b: jmp 0x1d90
0x22a6: push 0x50
0x22ab: jmp 0x1d90
0x22b0: jmp qword ptr [rip + 0x20dd32]
0x23dc: nop dword ptr [rax]
0x2416: nop word ptr cs:[rax + rax]
0x2447: nop word ptr [rax + rax]
0x24b2: nop word ptr [rax + rax]
0x24ce: nop 
0x24dc: nop dword ptr [rax]
0x24f9: nop dword ptr [rax]
0x2579: nop dword ptr [rax]
0x258c: nop dword ptr [rax]
0x25a3: nop dword ptr [rax + rax]
0x25b3: nop dword ptr [rax + rax]
0x25cf: nop 
0x25dc: nop dword ptr [rax]
0x2975: jmp 0x25f2
0x29d8: jmp 0x25f2
0x2a43: call 0x1f20
0x2aa5: nop word ptr cs:[rax + rax]
0x2aaf: nop 
0x2ada: hlt 
0x2adb: nop dword ptr [rax + rax]
0x2ae0: lea rdi,[rip + 0x20d5c1]
0x2ae7: push rbp
0x2ae8: lea rax,[rip + 0x20d5b9]
0x2aef: cmp rax,rdi
0x2af2: mov rbp,rsp
0x2af5: je 0x2b10
0x2af7: mov rax,qword ptr [rip + 0x20d4ca]
0x2afe: test rax,rax
0x2b01: je 0x2b10
0x2b03: pop rbp
0x2b04: jmp rax
0x2b06: nop word ptr cs:[rax + rax]
0x2b10: pop rbp
0x2b11: ret 
0x2b12: nop dword ptr [rax]
0x2b16: nop word ptr cs:[rax + rax]
0x2b20: lea rdi,[rip + 0x20d581]
0x2b27: lea rsi,[rip + 0x20d57a]
0x2b2e: push rbp
0x2b2f: sub rsi,rdi
0x2b32: mov rbp,rsp
0x2b35: sar rsi,3
0x2b39: mov rax,rsi
0x2b3c: shr rax,0x3f
0x2b40: add rsi,rax
0x2b43: sar rsi,1
0x2b46: je 0x2b60
0x2b48: mov rax,qword ptr [rip + 0x20d491]
0x2b4f: test rax,rax
0x2b52: je 0x2b60
0x2b54: pop rbp
0x2b55: jmp rax
0x2b57: nop word ptr [rax + rax]
0x2b60: pop rbp
0x2b61: ret 
0x2b62: nop dword ptr [rax]
0x2b66: nop word ptr cs:[rax + rax]
0x2b70: cmp byte ptr [rip + 0x20d591],0
0x2b77: jne 0x2ba8
0x2b79: cmp qword ptr [rip + 0x20d467],0
0x2b81: push rbp
0x2b82: mov rbp,rsp
0x2b85: je 0x2b93
0x2b87: mov rdi,qword ptr [rip + 0x20d47a]
0x2b8e: call 0x22b0
0x2b93: call 0x2ae0
0x2b98: mov byte ptr [rip + 0x20d569],1
0x2b9f: pop rbp
0x2ba0: ret 
0x2ba1: nop dword ptr [rax]
0x2ba8: ret 
0x2baa: nop word ptr [rax + rax]
0x2bb0: push rbp
0x2bb1: mov rbp,rsp
0x2bb4: pop rbp
0x2bb5: jmp 0x2b20
0x2bba: nop word ptr [rax + rax]
0x2be6: nop word ptr cs:[rax + rax]
0x2c2d: nop dword ptr [rax]
0x2c37: nop word ptr [rax + rax]
0x2de7: nop word ptr [rax + rax]
0x2f05: test r13,r13
0x2f08: je 0x2daa
0x2f0e: mov rcx,rbp
0x2f11: mov edx,r12d
0x2f14: mov rsi,r13
0x2f17: mov edi,r12d
0x2f1a: call 0x2220
0x2f1f: test eax,eax
0x2f21: je 0x2daa
0x2f27: mov rsi,r14
0x2f2a: mov edi,4
0x2f2f: call 0x8380
0x2f34: lea rsi,[rip + 0x80ec]
0x2f3b: xor edi,edi
0x2f3d: mov edx,5
0x2f42: mov rbp,rax
0x2f45: call 0x1ed0
0x2f4a: mov rbx,rax
0x2f4d: call 0x1dd0
0x2f52: mov esi,dword ptr [rax]
0x2f54: mov rcx,rbp
0x2f57: mov rdx,rbx
0x2f5a: xor edi,edi
0x2f5c: xor eax,eax
0x2f5e: call 0x21b0
0x2f63: jmp 0x2daa
0x2f68: nop dword ptr [rax + rax]
0x2ff3: jmp 0x2dbb
0x2ff8: nop dword ptr [rax + rax]
0x300d: nop dword ptr [rax]
0x30ac: nop dword ptr [rax]
0x30ce: nop 
0x310f: jmp 0x2dbb
0x3114: nop dword ptr [rax]
0x3162: nop word ptr [rax + rax]
0x31eb: nop dword ptr [rax + rax]
0x320c: nop dword ptr [rax]
0x3229: nop dword ptr [rax]
0x324a: nop word ptr [rax + rax]
0x3287: nop word ptr [rax + rax]
0x32b5: nop dword ptr [rax]
0x3323: nop dword ptr [rax + rax]
0x33b4: jmp 0x2dbb
0x33b9: nop dword ptr [rax]
0x33f9: jmp 0x2dbb
0x33fe: nop 
0x3425: nop dword ptr [rax]
0x344d: nop dword ptr [rax]
0x34fd: jmp 0x2dbb
0x3502: nop word ptr [rax + rax]
0x3559: jmp 0x2dbb
0x355e: nop 
0x35b9: nop dword ptr [rax]
0x36a1: call 0x1f20
0x36b3: nop dword ptr [rax]
0x36b6: nop word ptr cs:[rax + rax]
0x3b12: nop word ptr cs:[rax + rax]
0x3b1c: nop dword ptr [rax]
0x3b38: nop dword ptr [rax + rax]
0x3b98: nop dword ptr [rax + rax]
0x3bb1: nop dword ptr [rax + rax]
0x3bb6: nop word ptr cs:[rax + rax]
0x3cab: nop dword ptr [rax + rax]
0x3cd2: nop word ptr [rax + rax]
0x3d1c: call 0x1f20
0x3d21: nop dword ptr [rax + rax]
0x3d26: nop word ptr cs:[rax + rax]
0x3e02: nop word ptr [rax + rax]
0x3e29: nop dword ptr [rax]
0x3e7d: call 0x1f20
0x3e82: nop word ptr cs:[rax + rax]
0x3e8c: nop dword ptr [rax]
0x3ec5: nop dword ptr [rax]
0x3ee9: nop dword ptr [rax]
0x3f07: nop word ptr [rax + rax]
0x3f54: nop dword ptr [rax]
0x4041: nop dword ptr [rax]
0x4076: nop word ptr cs:[rax + rax]
0x40e7: nop word ptr [rax + rax]
0x411b: jmp 0x402d
0x412e: nop 
0x4138: nop dword ptr [rax + rax]
0x4147: nop word ptr [rax + rax]
0x416e: nop 
0x417f: nop 
0x4196: nop word ptr cs:[rax + rax]
0x44ba: mov edx,dword ptr [rsp + 0x74]
0x44be: lea rcx,[r15 + r14]
0x44c2: test edx,edx
0x44c4: jns 0x44d9
0x44c6: mov dword ptr [rsp + 0x74],0xffffff9c
0x44ce: mov rcx,r15
0x44d1: mov edx,0xffffff9c
0x44d6: xor r14d,r14d
0x44d9: xor r8d,r8d
0x44dc: cmp dword ptr [rsp + 0x20],1
0x44e1: mov rsi,qword ptr [rsp + 0x10]
0x44e6: mov edi,0xffffff9c
0x44eb: setne r8b
0x44ef: call 0x8670
0x44f4: test eax,eax
0x44f6: je 0x476e
0x44fc: call 0x1dd0
0x4501: mov ebp,dword ptr [rax]
0x4503: cmp ebp,0x11
0x4506: je 0x4269
0x450c: test r13,r13
0x450f: mov rbx,rax
0x4512: je 0x451c
0x4514: mov rdi,r13
0x4517: call 0x2010
0x451c: mov rdi,r15
0x451f: xor r15d,r15d
0x4522: call 0x1db0
0x4527: mov dword ptr [rbx],ebp
0x4529: nop dword ptr [rax]
0x4559: nop dword ptr [rax]
0x457f: nop 
0x463c: nop dword ptr [rax]
0x4686: nop word ptr cs:[rax + rax]
0x469a: nop word ptr [rax + rax]
0x46bb: nop dword ptr [rax + rax]
0x46f4: nop dword ptr [rax]
0x4784: call 0x4150
0x4789: mov rdi,qword ptr [rip + 0x20b998]
0x4790: jmp 0x4203
0x47ad: call 0x1f20
0x47b2: nop word ptr cs:[rax + rax]
0x47bc: nop dword ptr [rax]
0x47f3: nop dword ptr [rax]
0x47f6: nop word ptr cs:[rax + rax]
0x481a: nop word ptr [rax + rax]
0x4820: test rsi,rsi
0x4823: je 0x4830
0x4825: cmp byte ptr [rsi],0
0x4828: je 0x4830
0x482a: jmp 0x47c0
0x482c: nop dword ptr [rax]
0x4830: mov eax,2
0x4835: ret 
0x4836: nop word ptr cs:[rax + rax]
0x4877: nop word ptr [rax + rax]
0x488a: nop word ptr [rax + rax]
0x4981: nop dword ptr [rax]
0x49a3: mov r12,r13
0x49a6: sub r12,r14
0x49a9: cmp r12,1
0x49ad: je 0x4b80
0x49b3: cmp r12,2
0x49b7: jne 0x49c1
0x49b9: cmp al,0x2e
0x49bb: je 0x4c50
0x49c1: cmp byte ptr [r15 - 1],0x2f
0x49c6: je 0x49d0
0x49c8: mov byte ptr [r15],0x2f
0x49cc: add r15,1
0x49d0: lea rax,[r15 + r12]
0x49d4: cmp rbx,rax
0x49d7: ja 0x4a0a
0x49d9: sub rbx,rbp
0x49dc: sub r15,rbp
0x49df: mov rdi,rbp
0x49e2: lea rax,[r12 + rbx + 1]
0x49e7: add rbx,0x1000
0x49ee: cmp r12,0x1000
0x49f5: cmovge rbx,rax
0x49f9: mov rsi,rbx
0x49fc: call 0x9470
0x4a01: mov rbp,rax
0x4a04: add rbx,rax
0x4a07: add r15,rax
0x4a0a: mov rdi,r15
0x4a0d: mov rdx,r12
0x4a10: mov rsi,r14
0x4a13: call 0x20a0
0x4a18: cmp dword ptr [rsp + 4],2
0x4a1d: lea r15,[r15 + r12]
0x4a21: mov byte ptr [r15],0
0x4a25: jne 0x4ae0
0x4a2b: cmp byte ptr [rsp + 0x1b],0
0x4a30: je 0x4ae0
0x4a36: mov dword ptr [rsp + 0x58],0
0x4a3e: cmp byte ptr [r13],0
0x4a43: je 0x4a50
0x4a45: cmp dword ptr [rsp + 4],2
0x4a4a: jne 0x4ea7
0x4a50: mov r14,r13
0x4a53: movzx eax,byte ptr [r14]
0x4a57: test al,al
0x4a59: jne 0x4960
0x4aa6: mov rdi,rax
0x4aa9: call 0x5f60
0x4aae: nop 
0x4adc: nop dword ptr [rax]
0x4ae0: mov eax,dword ptr [rsp + 0x1c]
0x4ae4: mov rdx,qword ptr [rsp + 8]
0x4ae9: mov rsi,rbp
0x4aec: mov edi,1
0x4af1: test eax,eax
0x4af3: je 0x4bb0
0x4af9: call 0x20d0
0x4afe: test eax,eax
0x4b00: setne al
0x4b03: test al,al
0x4b05: je 0x4b90
0x4b0b: call 0x1dd0
0x4b10: mov r14,rax
0x4b13: mov edx,dword ptr [rax]
0x4b15: mov eax,dword ptr [rsp + 4]
0x4b19: test eax,eax
0x4b1b: je 0x4b4e
0x4b1d: cmp eax,1
0x4b20: jne 0x4a36
0x4b26: lea rsi,[rip + 0x75f1]
0x4b2d: mov rdi,r13
0x4b30: mov dword ptr [rsp + 0x38],edx
0x4b34: call 0x2000
0x4b39: cmp byte ptr [r13 + rax],0
0x4b3f: mov edx,dword ptr [rsp + 0x38]
0x4b43: jne 0x4b4e
0x4b45: cmp edx,2
0x4b48: je 0x4a50
0x4b4e: mov r12,r14
0x4b51: mov rdi,qword ptr [rsp + 0x28]
0x4b56: mov dword ptr [rsp + 4],edx
0x4b5a: call 0x1db0
0x4b5f: mov rdi,rbp
0x4b62: call 0x1db0
0x4b67: cmp qword ptr [rsp + 0x10],0
0x4b6d: mov edx,dword ptr [rsp + 4]
0x4b71: je 0x4c2c
0x4b77: jmp 0x4c1a
0x4b7c: nop dword ptr [rax]
0x4b80: cmp al,0x2e
0x4b82: jne 0x49c1
0x4b88: jmp 0x4a50
0x4b8d: nop dword ptr [rax]
0x4b90: mov eax,dword ptr [rsp + 0x58]
0x4b94: and eax,0xf000
0x4b99: cmp eax,0xa000
0x4b9e: je 0x4bc0
0x4ba0: cmp eax,0x4000
0x4ba5: je 0x4a50
0x4bab: jmp 0x4a3e
0x4bb0: call 0x1f00
0x4bb5: test eax,eax
0x4bb7: setne al
0x4bba: jmp 0x4b03
0x4bbf: nop 
0x4bc0: cmp qword ptr [rsp + 0x10],0
0x4bc6: je 0x4d76
0x4bcc: mov rdx,qword ptr [rsp + 8]
0x4bd1: mov rsi,qword ptr [rsp + 0x20]
0x4bd6: mov rdi,qword ptr [rsp + 0x10]
0x4bdb: call 0x5320
0x4be0: test al,al
0x4be2: je 0x4ca0
0x4be8: cmp dword ptr [rsp + 4],2
0x4bed: je 0x4a50
0x4bf3: call 0x1dd0
0x4bf8: mov edx,0x28
0x4bfd: mov r12,rax
0x4c00: mov rdi,qword ptr [rsp + 0x28]
0x4c05: mov dword ptr [rsp + 4],edx
0x4c09: call 0x1db0
0x4c0e: mov rdi,rbp
0x4c11: call 0x1db0
0x4c16: mov edx,dword ptr [rsp + 4]
0x4c1a: mov rdi,qword ptr [rsp + 0x10]
0x4c1f: mov dword ptr [rsp + 4],edx
0x4c23: call 0x5f60
0x4c28: mov edx,dword ptr [rsp + 4]
0x4c2c: mov dword ptr [r12],edx
0x4c30: xor ebp,ebp
0x4c32: jmp 0x4ab0
0x4c37: nop word ptr [rax + rax]
0x4c48: nop dword ptr [rax + rax]
0x4c50: cmp byte ptr [r14 + 1],0x2e
0x4c55: jne 0x49c1
0x4c5b: lea rax,[rbp + 1]
0x4c5f: mov r14,r13
0x4c62: cmp r15,rax
0x4c65: jbe 0x494b
0x4c6b: lea rax,[r15 - 1]
0x4c6f: cmp rbp,rax
0x4c72: jae 0x4eb9
0x4c78: cmp byte ptr [r15 - 2],0x2f
0x4c7d: mov r15,rax
0x4c80: je 0x494b
0x4c86: sub r15,1
0x4c8a: cmp rbp,r15
0x4c8d: je 0x4a50
0x4c93: cmp byte ptr [r15 - 1],0x2f
0x4c98: je 0x4a50
0x4c9e: jmp 0x4c86
0x4ca0: mov rdx,qword ptr [rsp + 8]
0x4ca5: mov rsi,qword ptr [rsp + 0x20]
0x4caa: mov rdi,qword ptr [rsp + 0x10]
0x4caf: call 0x5290
0x4cb4: mov rsi,qword ptr [rsp + 0x70]
0x4cb9: mov rdi,rbp
0x4cbc: call 0x98d0
0x4cc1: test rax,rax
0x4cc4: mov r14,rax
0x4cc7: je 0x4e32
0x4ccd: mov rdi,rax
0x4cd0: call 0x1ef0
0x4cd5: mov rdi,r13
0x4cd8: mov r12,rax
0x4cdb: mov qword ptr [rsp + 0x20],rax
0x4ce0: call 0x1ef0
0x4ce5: cmp qword ptr [rsp + 0x30],0
0x4ceb: mov rdx,rax
0x4cee: lea rcx,[r12 + rdx + 1]
0x4cf3: je 0x4def
0x4cf9: cmp qword ptr [rsp + 0x30],rcx
0x4cfe: jae 0x4d21
0x4d00: mov rdi,qword ptr [rsp + 0x28]
0x4d05: mov rsi,rcx
0x4d08: mov qword ptr [rsp + 0x38],rdx
0x4d0d: mov qword ptr [rsp + 0x30],rcx
0x4d12: call 0x9470
0x4d17: mov rdx,qword ptr [rsp + 0x38]
0x4d1c: mov qword ptr [rsp + 0x28],rax
0x4d21: mov r12,qword ptr [rsp + 0x28]
0x4d26: mov rdi,qword ptr [rsp + 0x20]
0x4d2b: add rdx,1
0x4d2f: mov rsi,r13
0x4d32: add rdi,r12
0x4d35: mov r13,r12
0x4d38: call 0x21a0
0x4d3d: mov rdx,qword ptr [rsp + 0x20]
0x4d42: mov rsi,r14
0x4d45: mov rdi,r12
0x4d48: call 0x20a0
0x4d4d: cmp byte ptr [r14],0x2f
0x4d51: mov qword ptr [rsp + 0x20],r12
0x4d56: lea rax,[rbp + 1]
0x4d5a: je 0x4e54
0x4d60: cmp r15,rax
0x4d63: ja 0x4e72
0x4d69: mov rdi,r14
0x4d6c: call 0x1db0
0x4d71: jmp 0x4a50
0x4d76: lea r8,[rip + 0x1ab3]
0x4d7d: lea rcx,[rip + 0x1a6c]
0x4d84: xor esi,esi
0x4d86: lea rdx,[rip + 0x19f3]
0x4d8d: mov edi,7
0x4d92: call 0x5d10
0x4d97: test rax,rax
0x4d9a: mov qword ptr [rsp + 0x10],rax
0x4d9f: jne 0x4bcc
0x4da5: call 0x9660
0x4daa: nop word ptr [rax + rax]
0x4def: cmp rcx,0x1000
0x4df6: mov eax,0x1000
0x4dfb: mov qword ptr [rsp + 0x38],rdx
0x4e00: cmovae rax,rcx
0x4e04: mov rdi,rax
0x4e07: mov qword ptr [rsp + 0x30],rax
0x4e0c: call 0x9410
0x4e11: mov rdx,qword ptr [rsp + 0x38]
0x4e16: mov qword ptr [rsp + 0x28],rax
0x4e1b: jmp 0x4d21
0x4e32: call 0x1dd0
0x4e37: cmp dword ptr [rsp + 4],2
0x4e3c: mov r14,rax
0x4e3f: mov edx,dword ptr [rax]
0x4e41: jne 0x4e4c
0x4e43: cmp edx,0xc
0x4e46: jne 0x4a50
0x4e4c: mov r12,r14
0x4e4f: jmp 0x4c00
0x4e54: mov byte ptr [rbp],0x2f
0x4e58: mov r15,rax
0x4e5b: jmp 0x4d69
0x4e72: lea rax,[r15 - 1]
0x4e76: cmp rbp,rax
0x4e79: jae 0x4e82
0x4e7b: cmp byte ptr [r15 - 2],0x2f
0x4e80: jne 0x4e8d
0x4e82: mov r15,rax
0x4e85: jmp 0x4d69
0x4e8a: mov rax,r15
0x4e8d: lea r15,[rax - 1]
0x4e91: cmp rbp,r15
0x4e94: je 0x4d69
0x4e9a: cmp byte ptr [r15 - 1],0x2f
0x4e9f: je 0x4d69
0x4ea5: jmp 0x4e8a
0x4ea7: call 0x1dd0
0x4eac: mov edx,0x14
0x4eb1: mov r12,rax
0x4eb4: jmp 0x4b51
0x4eb9: mov r15,rax
0x4ebc: jmp 0x494b
0x4ec1: call 0x1f20
0x4ec6: nop word ptr cs:[rax + rax]
0x4ed0: mov qword ptr [rip + 0x20b259],rdi
0x4ed7: ret 
0x4ed8: nop dword ptr [rax + rax]
0x4ee0: push r12
0x4ee2: push rbp
0x4ee3: push rbx
0x4ee4: mov rbx,qword ptr [rip + 0x20b1e5]
0x4eeb: mov rdi,rbx
0x4eee: call 0x97b0
0x4ef3: test rax,rax
0x4ef6: jne 0x4f98
0x4efc: mov rdi,rbx
0x4eff: call 0x9d50
0x4f04: test eax,eax
0x4f06: jne 0x4f38
0x4f08: pop rbx
0x4f09: pop rbp
0x4f0a: pop r12
0x4f0c: jmp 0x5010
0x4f11: nop dword ptr [rax]
0x4f18: call 0x9770
0x4f1d: test eax,eax
0x4f1f: mov rdi,qword ptr [rip + 0x20b1aa]
0x4f26: je 0x4fb6
0x4f2c: call 0x9d50
0x4f31: nop dword ptr [rax]
0x4f38: lea rsi,[rip + 0x70c1]
0x4f3f: xor edi,edi
0x4f41: mov edx,5
0x4f46: call 0x1ed0
0x4f4b: mov rbx,qword ptr [rip + 0x20b1de]
0x4f52: mov r12,rax
0x4f55: call 0x1dd0
0x4f5a: mov rbp,rax
0x4f5d: test rbx,rbx
0x4f60: je 0x4fd0
0x4f62: mov rdi,rbx
0x4f65: call 0x8450
0x4f6a: mov esi,dword ptr [rbp]
0x4f6d: lea rdx,[rip + 0x709f]
0x4f74: mov rcx,rax
0x4f77: mov r8,r12
0x4f7a: xor edi,edi
0x4f7c: xor eax,eax
0x4f7e: call 0x21b0
0x4f83: call 0x5010
0x4f88: mov edi,dword ptr [rip + 0x20b092]
0x4f8e: call 0x1df0
0x4f93: nop dword ptr [rax + rax]
0x4f98: xor esi,esi
0x4f9a: mov rdi,rbx
0x4f9d: mov edx,1
0x4fa2: call 0x97e0
0x4fa7: test eax,eax
0x4fa9: mov rdi,qword ptr [rip + 0x20b120]
0x4fb0: je 0x4f18
0x4fb6: call 0x9d50
0x4fbb: test eax,eax
0x4fbd: jne 0x4f38
0x4fc3: pop rbx
0x4fc4: pop rbp
0x4fc5: pop r12
0x4fc7: jmp 0x5010
0x4fcc: nop dword ptr [rax]
0x4fd0: mov esi,dword ptr [rax]
0x4fd2: lea rdx,[rip + 0x7a9e]
0x4fd9: mov rcx,r12
0x4fdc: xor edi,edi
0x4fde: xor eax,eax
0x4fe0: call 0x21b0
0x4fe5: jmp 0x4f83
0x4fe7: nop word ptr [rax + rax]
0x4ff0: mov qword ptr [rip + 0x20b149],rdi
0x4ff7: ret 
0x4ff8: nop dword ptr [rax + rax]
0x5000: mov byte ptr [rip + 0x20b131],dil
0x5007: ret 
0x5008: nop dword ptr [rax + rax]
0x5010: push rbp
0x5011: push rbx
0x5012: sub rsp,8
0x5016: mov rdi,qword ptr [rip + 0x20b0ab]
0x501d: call 0x9d50
0x5022: test eax,eax
0x5024: je 0x503c
0x5026: call 0x1dd0
0x502b: cmp byte ptr [rip + 0x20b106],0
0x5032: mov rbx,rax
0x5035: je 0x5053
0x5037: cmp dword ptr [rax],0x20
0x503a: jne 0x5053
0x503c: mov rdi,qword ptr [rip + 0x20b0bd]
0x5043: call 0x9d50
0x5048: test eax,eax
0x504a: jne 0x5092
0x504c: add rsp,8
0x5050: pop rbx
0x5051: pop rbp
0x5052: ret 
0x5053: lea rsi,[rip + 0x6fc0]
0x505a: xor edi,edi
0x505c: mov edx,5
0x5061: call 0x1ed0
0x5066: mov rdi,qword ptr [rip + 0x20b0d3]
0x506d: mov rbp,rax
0x5070: test rdi,rdi
0x5073: je 0x509d
0x5075: call 0x8450
0x507a: mov esi,dword ptr [rbx]
0x507c: lea rdx,[rip + 0x6f90]
0x5083: mov rcx,rax
0x5086: mov r8,rbp
0x5089: xor edi,edi
0x508b: xor eax,eax
0x508d: call 0x21b0
0x5092: mov edi,dword ptr [rip + 0x20af88]
0x5098: call 0x1df0
0x509d: mov esi,dword ptr [rbx]
0x509f: lea rdx,[rip + 0x79d1]
0x50a6: mov rcx,rax
0x50a9: xor edi,edi
0x50ab: xor eax,eax
0x50ad: call 0x21b0
0x50b2: jmp 0x5092
0x50b4: nop word ptr cs:[rax + rax]
0x50be: nop 
0x50d8: nop dword ptr [rax + rax]
0x510e: nop 
0x512d: nop dword ptr [rax]
0x513d: nop dword ptr [rax]
0x519a: nop word ptr [rax + rax]
0x51c7: nop word ptr [rax + rax]
0x51fc: nop dword ptr [rax]
0x521c: nop dword ptr [rax]
0x523e: nop 
0x5247: nop word ptr [rax + rax]
0x5283: nop word ptr cs:[rax + rax]
0x528d: nop dword ptr [rax]
0x52db: test rax,rax
0x52de: je 0x5312
0x52e0: cmp rbx,rax
0x52e3: je 0x5300
0x52e5: add rsp,8
0x52e9: mov rdi,rbx
0x52ec: pop rbx
0x52ed: pop rbp
0x52ee: pop r12
0x52f0: pop r13
0x52f2: jmp 0x6830
0x52f7: nop word ptr [rax + rax]
0x5300: add rsp,8
0x5304: pop rbx
0x5305: pop rbp
0x5306: pop r12
0x5308: pop r13
0x530a: ret 
0x530b: nop dword ptr [rax + rax]
0x5312: call 0x9660
0x5317: nop word ptr [rax + rax]
0x5356: test rax,rax
0x5359: setne al
0x5371: call 0x1f20
0x5376: nop word ptr cs:[rax + rax]
0x5398: nop dword ptr [rax + rax]
0x540c: nop dword ptr [rax]
0x5488: nop dword ptr [rax + rax]
0x549f: nop 
0x54fe: nop 
0x5533: nop dword ptr [rax]
0x5536: nop word ptr cs:[rax + rax]
0x5540: mov rax,rdi
0x5543: xor edx,edx
0x5545: ror rax,3
0x5549: div rsi
0x554c: mov rax,rdx
0x554f: ret 
0x5550: cmp rdi,rsi
0x5553: sete al
0x5556: ret 
0x5557: nop word ptr [rax + rax]
0x556e: cmp qword ptr [rbx + 0x10],rax
0x5572: jbe 0x557d
0x5574: shl rax,4
0x5578: add rax,qword ptr [rbx]
0x557b: pop rbx
0x557c: ret 
0x557d: call 0x1dc0
0x5582: nop dword ptr [rax]
0x5586: nop word ptr cs:[rax + rax]
0x55a9: mov qword ptr [r14],rax
0x55ac: mov rsi,qword ptr [rax]
0x55af: test rsi,rsi
0x55b2: je 0x56a0
0x55b8: cmp rsi,rbp
0x55bb: mov rbx,rax
0x55be: je 0x5653
0x55c4: mov rdi,rbp
0x55c7: call qword ptr [r12 + 0x38]
0x55cc: test al,al
0x55ce: jne 0x5650
0x55d4: mov rax,qword ptr [rbx + 8]
0x55d8: test rax,rax
0x55db: je 0x56a0
0x55e1: mov rsi,qword ptr [rax]
0x55e4: cmp rbp,rsi
0x55e7: jne 0x5609
0x55e9: jmp 0x561c
0x55eb: nop dword ptr [rax + rax]
0x55f0: mov rbx,qword ptr [rbx + 8]
0x55f4: mov rax,qword ptr [rbx + 8]
0x55f8: test rax,rax
0x55fb: je 0x56a0
0x5601: mov rsi,qword ptr [rax]
0x5604: cmp rsi,rbp
0x5607: je 0x561c
0x5609: mov rdi,rbp
0x560c: call qword ptr [r12 + 0x38]
0x5611: test al,al
0x5613: je 0x55f0
0x5615: mov rax,qword ptr [rbx + 8]
0x5619: mov rsi,qword ptr [rax]
0x561c: test r13b,r13b
0x561f: je 0x563e
0x5621: mov rdx,qword ptr [rax + 8]
0x5625: mov qword ptr [rbx + 8],rdx
0x5629: mov qword ptr [rax],0
0x5630: mov rdx,qword ptr [r12 + 0x48]
0x5635: mov qword ptr [rax + 8],rdx
0x5639: mov qword ptr [r12 + 0x48],rax
0x563e: pop rbx
0x563f: mov rax,rsi
0x5642: pop rbp
0x5643: pop r12
0x5645: pop r13
0x5647: pop r14
0x5649: ret 
0x564a: nop word ptr [rax + rax]
0x5650: mov rsi,qword ptr [rbx]
0x5653: test r13b,r13b
0x5656: je 0x563e
0x5658: mov rax,qword ptr [rbx + 8]
0x565c: test rax,rax
0x565f: je 0x5690
0x5661: movdqu xmm0,xmmword ptr [rax]
0x5665: movups xmmword ptr [rbx],xmm0
0x5668: mov qword ptr [rax],0
0x566f: mov rdx,qword ptr [r12 + 0x48]
0x5674: mov qword ptr [rax + 8],rdx
0x5678: mov qword ptr [r12 + 0x48],rax
0x567d: mov rax,rsi
0x5680: pop rbx
0x5681: pop rbp
0x5682: pop r12
0x5684: pop r13
0x5686: pop r14
0x5688: ret 
0x5689: nop dword ptr [rax]
0x5690: mov qword ptr [rbx],0
0x5697: jmp 0x563e
0x5699: nop dword ptr [rax]
0x56a0: xor esi,esi
0x56a2: pop rbx
0x56a3: mov rax,rsi
0x56a6: pop rbp
0x56a7: pop r12
0x56a9: pop r13
0x56ab: pop r14
0x56ad: ret 
0x56ae: nop 
0x56c4: movss xmm0,dword ptr [rdx + 8]
0x56c9: ucomiss xmm0,dword ptr [rip + 0x69e4]
0x56d0: jbe 0x5720
0x56d2: movss xmm1,dword ptr [rip + 0x69de]
0x56da: ucomiss xmm1,xmm0
0x56dd: jbe 0x5720
0x56df: movss xmm1,dword ptr [rdx + 0xc]
0x56e4: ucomiss xmm1,dword ptr [rip + 0x69d1]
0x56eb: jbe 0x5720
0x56ed: movss xmm1,dword ptr [rdx]
0x56f1: ucomiss xmm1,dword ptr [rip + 0x69c8]
0x56f8: jb 0x5720
0x56fa: addss xmm1,dword ptr [rip + 0x69b2]
0x5702: movss xmm2,dword ptr [rdx + 4]
0x5707: ucomiss xmm2,xmm1
0x570a: jbe 0x5720
0x570c: movss xmm3,dword ptr [rip + 0x69b0]
0x5714: ucomiss xmm3,xmm2
0x5717: jb 0x5720
0x5719: ucomiss xmm0,xmm1
0x571c: ja 0x5725
0x571e: nop 
0x5720: mov qword ptr [rdi],rcx
0x5723: xor eax,eax
0x5727: nop word ptr [rax + rax]
0x5730: push r15
0x5732: push r14
0x5734: push r13
0x5736: push r12
0x5738: push rbp
0x5739: push rbx
0x573a: sub rsp,8
0x573e: mov r12,qword ptr [rsi]
0x5741: cmp r12,qword ptr [rsi + 8]
0x5745: jae 0x5828
0x574b: mov rbp,rdi
0x574e: mov r13,rsi
0x5751: mov r14d,edx
0x5754: nop dword ptr [rax]
0x5758: mov r15,qword ptr [r12]
0x575c: test r15,r15
0x575f: je 0x581a
0x5765: mov rbx,qword ptr [r12 + 8]
0x576a: test rbx,rbx
0x576d: jne 0x578c
0x576f: jmp 0x57cb
0x5771: nop dword ptr [rax]
0x5778: mov rcx,qword ptr [rax + 8]
0x577c: test rdx,rdx
0x577f: mov qword ptr [rbx + 8],rcx
0x5783: mov qword ptr [rax + 8],rbx
0x5787: mov rbx,rdx
0x578a: je 0x57c7
0x578c: mov r15,qword ptr [rbx]
0x578f: mov rdi,rbp
0x5792: mov rsi,r15
0x5795: call 0x5560
0x579a: cmp qword ptr [rax],0
0x579e: mov rdx,qword ptr [rbx + 8]
0x57a2: jne 0x5778
0x57a4: mov qword ptr [rax],r15
0x57a7: add qword ptr [rbp + 0x18],1
0x57ac: test rdx,rdx
0x57af: mov qword ptr [rbx],0
0x57b6: mov rax,qword ptr [rbp + 0x48]
0x57ba: mov qword ptr [rbx + 8],rax
0x57be: mov qword ptr [rbp + 0x48],rbx
0x57c2: mov rbx,rdx
0x57c5: jne 0x578c
0x57c7: mov r15,qword ptr [r12]
0x57cb: test r14b,r14b
0x57ce: mov qword ptr [r12 + 8],0
0x57d7: jne 0x581a
0x57d9: mov rsi,r15
0x57dc: mov rdi,rbp
0x57df: call 0x5560
0x57e4: cmp qword ptr [rax],0
0x57e8: mov rbx,rax
0x57eb: je 0x5840
0x57ed: mov rax,qword ptr [rbp + 0x48]
0x57f1: test rax,rax
0x57f4: je 0x5850
0x57f6: mov rdx,qword ptr [rax + 8]
0x57fa: mov qword ptr [rbp + 0x48],rdx
0x57fe: mov rdx,qword ptr [rbx + 8]
0x5802: mov qword ptr [rax],r15
0x5805: mov qword ptr [rax + 8],rdx
0x5809: mov qword ptr [rbx + 8],rax
0x580d: mov qword ptr [r12],0
0x5815: sub qword ptr [r13 + 0x18],1
0x581a: add r12,0x10
0x581e: cmp qword ptr [r13 + 8],r12
0x5822: ja 0x5758
0x5828: add rsp,8
0x582c: mov eax,1
0x5831: pop rbx
0x5832: pop rbp
0x5833: pop r12
0x5835: pop r13
0x5837: pop r14
0x5839: pop r15
0x583b: ret 
0x583c: nop dword ptr [rax]
0x5840: mov qword ptr [rax],r15
0x5843: add qword ptr [rbp + 0x18],1
0x5848: jmp 0x580d
0x584a: nop word ptr [rax + rax]
0x5850: mov edi,0x10
0x5855: call 0x20f0
0x585a: test rax,rax
0x585d: jne 0x57fe
0x585f: add rsp,8
0x5863: xor eax,eax
0x5865: pop rbx
0x5866: pop rbp
0x5867: pop r12
0x5869: pop r13
0x586b: pop r14
0x586d: pop r15
0x586f: ret 
0x5870: mov rax,qword ptr [rdi + 0x10]
0x5874: ret 
0x5875: nop 
0x5876: nop word ptr cs:[rax + rax]
0x5880: mov rax,qword ptr [rdi + 0x18]
0x5884: ret 
0x5885: nop 
0x5886: nop word ptr cs:[rax + rax]
0x5890: mov rax,qword ptr [rdi + 0x20]
0x5894: ret 
0x5895: nop 
0x5896: nop word ptr cs:[rax + rax]
0x58a0: mov rsi,qword ptr [rdi]
0x58a3: mov rdi,qword ptr [rdi + 8]
0x58a7: xor eax,eax
0x58a9: cmp rsi,rdi
0x58ac: jae 0x58e7
0x58ae: nop 
0x58b0: cmp qword ptr [rsi],0
0x58b4: je 0x58dc
0x58b6: mov rdx,qword ptr [rsi + 8]
0x58ba: mov ecx,1
0x58bf: test rdx,rdx
0x58c2: je 0x58d5
0x58c4: nop dword ptr [rax]
0x58c8: mov rdx,qword ptr [rdx + 8]
0x58cc: add rcx,1
0x58d0: test rdx,rdx
0x58d3: jne 0x58c8
0x58d5: cmp rax,rcx
0x58d8: cmovb rax,rcx
0x58dc: add rsi,0x10
0x58e0: cmp rsi,rdi
0x58e3: jb 0x58b0
0x58e5: ret 
0x58e7: ret 
0x58e9: nop dword ptr [rax]
0x58f0: mov rcx,qword ptr [rdi]
0x58f3: mov r8,qword ptr [rdi + 8]
0x58f7: xor edx,edx
0x58f9: xor esi,esi
0x58fb: cmp rcx,r8
0x58fe: jae 0x5936
0x5900: cmp qword ptr [rcx],0
0x5904: je 0x592d
0x5906: mov rax,qword ptr [rcx + 8]
0x590a: add rsi,1
0x590e: add rdx,1
0x5912: test rax,rax
0x5915: je 0x592d
0x5917: nop word ptr [rax + rax]
0x5920: mov rax,qword ptr [rax + 8]
0x5924: add rdx,1
0x5928: test rax,rax
0x592b: jne 0x5920
0x592d: add rcx,0x10
0x5931: cmp rcx,r8
0x5934: jb 0x5900
0x5936: xor eax,eax
0x5938: cmp qword ptr [rdi + 0x18],rsi
0x593c: je 0x5940
0x593e: ret 
0x5940: cmp qword ptr [rdi + 0x20],rdx
0x5944: sete al
0x5947: ret 
0x5948: nop dword ptr [rax + rax]
0x5950: push r13
0x5952: push r12
0x5954: mov r12,rsi
0x5957: push rbp
0x5958: push rbx
0x5959: xor ebx,ebx
0x595b: sub rsp,8
0x595f: mov rsi,qword ptr [rdi]
0x5962: mov rcx,qword ptr [rdi + 0x20]
0x5966: mov rbp,qword ptr [rdi + 0x10]
0x596a: mov r13,qword ptr [rdi + 0x18]
0x596e: mov rdi,qword ptr [rdi + 8]
0x5972: cmp rsi,rdi
0x5975: jae 0x59b5
0x5977: nop word ptr [rax + rax]
0x5980: cmp qword ptr [rsi],0
0x5984: je 0x59ac
0x5986: mov rax,qword ptr [rsi + 8]
0x598a: mov edx,1
0x598f: test rax,rax
0x5992: je 0x59a5
0x5994: nop dword ptr [rax]
0x5998: mov rax,qword ptr [rax + 8]
0x599c: add rdx,1
0x59a0: test rax,rax
0x59a3: jne 0x5998
0x59a5: cmp rbx,rdx
0x59a8: cmovb rbx,rdx
0x59ac: add rsi,0x10
0x59b0: cmp rsi,rdi
0x59b3: jb 0x5980
0x59b5: lea rdx,[rip + 0x666a]
0x59bc: mov esi,1
0x59c1: mov rdi,r12
0x59c4: xor eax,eax
0x59c6: call 0x2260
0x59cb: lea rdx,[rip + 0x666c]
0x59d2: xor eax,eax
0x59d4: mov rcx,rbp
0x59d7: mov esi,1
0x59dc: mov rdi,r12
0x59df: call 0x2260
0x59e4: test r13,r13
0x59e7: js 0x5a50
0x59e9: pxor xmm0,xmm0
0x59ed: test rbp,rbp
0x59f0: cvtsi2sd xmm0,r13
0x59f5: mulsd xmm0,qword ptr [rip + 0x66db]
0x59fd: js 0x5a79
0x59ff: pxor xmm1,xmm1
0x5a03: cvtsi2sd xmm1,rbp
0x5a08: divsd xmm0,xmm1
0x5a0c: lea rdx,[rip + 0x665d]
0x5a13: mov rcx,r13
0x5a16: mov rdi,r12
0x5a19: mov esi,1
0x5a1e: mov eax,1
0x5a23: call 0x2260
0x5a28: add rsp,8
0x5a2c: mov rcx,rbx
0x5a2f: mov rdi,r12
0x5a32: pop rbx
0x5a33: pop rbp
0x5a34: pop r12
0x5a36: pop r13
0x5a38: lea rdx,[rip + 0x6617]
0x5a3f: mov esi,1
0x5a44: xor eax,eax
0x5a46: jmp 0x2260
0x5a4b: nop dword ptr [rax + rax]
0x5a50: mov rax,r13
0x5a53: mov rdx,r13
0x5a56: pxor xmm0,xmm0
0x5a5a: shr rax,1
0x5a5d: and edx,1
0x5a60: or rax,rdx
0x5a63: test rbp,rbp
0x5a66: cvtsi2sd xmm0,rax
0x5a6b: addsd xmm0,xmm0
0x5a6f: mulsd xmm0,qword ptr [rip + 0x6661]
0x5a77: jns 0x59ff
0x5a79: mov rax,rbp
0x5a7c: pxor xmm1,xmm1
0x5a80: shr rax,1
0x5a83: and ebp,1
0x5a86: or rax,rbp
0x5a89: cvtsi2sd xmm1,rax
0x5a8e: addsd xmm1,xmm1
0x5a92: jmp 0x5a08
0x5a97: nop word ptr [rax + rax]
0x5aaf: mov rsi,qword ptr [rax]
0x5ab2: test rsi,rsi
0x5ab5: je 0x5add
0x5ab7: mov rbx,rax
0x5aba: jmp 0x5ac3
0x5abc: nop dword ptr [rax]
0x5ac0: mov rsi,qword ptr [rbx]
0x5ac3: cmp rsi,rbp
0x5ac6: je 0x5adf
0x5ac8: mov rdi,rbp
0x5acb: call qword ptr [r12 + 0x38]
0x5ad0: test al,al
0x5ad2: jne 0x5af0
0x5ad4: mov rbx,qword ptr [rbx + 8]
0x5ad8: test rbx,rbx
0x5adb: jne 0x5ac0
0x5add: xor esi,esi
0x5adf: pop rbx
0x5ae0: mov rax,rsi
0x5ae3: pop rbp
0x5ae4: pop r12
0x5ae6: ret 
0x5ae7: nop word ptr [rax + rax]
0x5af0: mov rsi,qword ptr [rbx]
0x5af3: pop rbx
0x5af4: pop rbp
0x5af5: mov rax,rsi
0x5af8: pop r12
0x5afa: ret 
0x5afb: nop dword ptr [rax + rax]
0x5b00: cmp qword ptr [rdi + 0x20],0
0x5b05: je 0x5b33
0x5b07: mov rdx,qword ptr [rdi]
0x5b0a: mov rcx,qword ptr [rdi + 8]
0x5b0e: cmp rdx,rcx
0x5b11: jae 0x5b38
0x5b13: mov rax,qword ptr [rdx]
0x5b16: test rax,rax
0x5b19: jne 0x5b36
0x5b1b: nop dword ptr [rax + rax]
0x5b20: add rdx,0x10
0x5b24: cmp rdx,rcx
0x5b27: jae 0x5b38
0x5b29: mov rax,qword ptr [rdx]
0x5b2c: test rax,rax
0x5b2f: je 0x5b20
0x5b31: ret 
0x5b33: xor eax,eax
0x5b35: ret 
0x5b36: ret 
0x5b38: sub rsp,8
0x5b3c: call 0x1dc0
0x5b41: nop dword ptr [rax + rax]
0x5b46: nop word ptr cs:[rax + rax]
0x5b50: push rbp
0x5b51: push rbx
0x5b52: mov rbp,rdi
0x5b55: mov rbx,rsi
0x5b58: sub rsp,8
0x5b5c: call 0x5560
0x5b61: mov rdx,rax
0x5b64: mov rcx,rax
0x5b67: mov rax,qword ptr [rdx]
0x5b6a: mov rdx,qword ptr [rdx + 8]
0x5b6e: cmp rax,rbx
0x5b71: je 0x5b89
0x5b73: nop dword ptr [rax + rax]
0x5b78: test rdx,rdx
0x5b7b: je 0x5b8e
0x5b7d: mov rax,qword ptr [rdx]
0x5b80: mov rdx,qword ptr [rdx + 8]
0x5b84: cmp rax,rbx
0x5b87: jne 0x5b78
0x5b89: test rdx,rdx
0x5b8c: jne 0x5bb8
0x5b8e: mov rdx,qword ptr [rbp + 8]
0x5b92: jmp 0x5ba0
0x5b94: nop dword ptr [rax]
0x5b98: mov rax,qword ptr [rcx]
0x5b9b: test rax,rax
0x5b9e: jne 0x5bab
0x5ba0: add rcx,0x10
0x5ba4: cmp rdx,rcx
0x5ba7: ja 0x5b98
0x5ba9: xor eax,eax
0x5bab: add rsp,8
0x5baf: pop rbx
0x5bb0: pop rbp
0x5bb1: ret 
0x5bb2: nop word ptr [rax + rax]
0x5bb8: mov rax,qword ptr [rdx]
0x5bbb: add rsp,8
0x5bbf: pop rbx
0x5bc0: pop rbp
0x5bc1: ret 
0x5bc2: nop dword ptr [rax]
0x5bc6: nop word ptr cs:[rax + rax]
0x5bd0: mov r9,qword ptr [rdi]
0x5bd3: cmp qword ptr [rdi + 8],r9
0x5bd7: jbe 0x5c32
0x5bd9: xor r8d,r8d
0x5bdc: mov rcx,qword ptr [r9]
0x5bdf: test rcx,rcx
0x5be2: je 0x5c1d
0x5be4: cmp rdx,r8
0x5be7: jbe 0x5c27
0x5be9: mov qword ptr [rsi + r8*8],rcx
0x5bed: mov rcx,qword ptr [r9 + 8]
0x5bf1: lea rax,[r8 + 1]
0x5bf5: test rcx,rcx
0x5bf8: je 0x5c1a
0x5bfa: nop word ptr [rax + rax]
0x5c00: cmp rdx,rax
0x5c03: je 0x5c30
0x5c05: mov r8,qword ptr [rcx]
0x5c08: add rax,1
0x5c0c: mov qword ptr [rsi + rax*8 - 8],r8
0x5c11: mov rcx,qword ptr [rcx + 8]
0x5c15: test rcx,rcx
0x5c18: jne 0x5c00
0x5c1a: mov r8,rax
0x5c1d: add r9,0x10
0x5c21: cmp qword ptr [rdi + 8],r9
0x5c25: ja 0x5bdc
0x5c27: mov rax,r8
0x5c2a: ret 
0x5c2b: nop dword ptr [rax + rax]
0x5c30: ret 
0x5c32: xor eax,eax
0x5c34: ret 
0x5c35: nop 
0x5c36: nop word ptr cs:[rax + rax]
0x5c40: push r15
0x5c42: push r14
0x5c44: push r13
0x5c46: push r12
0x5c48: push rbp
0x5c49: push rbx
0x5c4a: sub rsp,8
0x5c4e: mov r14,qword ptr [rdi]
0x5c51: cmp qword ptr [rdi + 8],r14
0x5c55: jbe 0x5ca6
0x5c57: mov r13,rdx
0x5c5a: mov r12,rsi
0x5c5d: mov r15,rdi
0x5c60: xor ebp,ebp
0x5c62: mov rdi,qword ptr [r14]
0x5c65: test rdi,rdi
0x5c68: je 0x5c8a
0x5c6a: mov rbx,r14
0x5c6d: jmp 0x5c73
0x5c6f: nop 
0x5c70: mov rdi,qword ptr [rbx]
0x5c73: mov rsi,r13
0x5c76: call r12
0x5c79: test al,al
0x5c7b: je 0x5c94
0x5c7d: mov rbx,qword ptr [rbx + 8]
0x5c81: add rbp,1
0x5c85: test rbx,rbx
0x5c88: jne 0x5c70
0x5c8a: add r14,0x10
0x5c8e: cmp qword ptr [r15 + 8],r14
0x5c92: ja 0x5c62
0x5c94: add rsp,8
0x5c98: mov rax,rbp
0x5c9b: pop rbx
0x5c9c: pop rbp
0x5c9d: pop r12
0x5c9f: pop r13
0x5ca1: pop r14
0x5ca3: pop r15
0x5ca5: ret 
0x5ca6: xor ebp,ebp
0x5ca8: jmp 0x5c94
0x5caa: nop word ptr [rax + rax]
0x5cb0: movzx ecx,byte ptr [rdi]
0x5cb3: xor edx,edx
0x5cb5: test cl,cl
0x5cb7: je 0x5cdd
0x5cb9: nop dword ptr [rax]
0x5cc0: mov rax,rdx
0x5cc3: add rdi,1
0x5cc7: shl rax,5
0x5ccb: sub rax,rdx
0x5cce: xor edx,edx
0x5cd0: add rax,rcx
0x5cd3: movzx ecx,byte ptr [rdi]
0x5cd6: div rsi
0x5cd9: test cl,cl
0x5cdb: jne 0x5cc0
0x5cdd: mov rax,rdx
0x5ce0: ret 
0x5ce1: nop dword ptr [rax + rax]
0x5ce6: nop word ptr cs:[rax + rax]
0x5cf0: movabs rax,0x3f80000000000000
0x5cfa: mov byte ptr [rdi + 0x10],0
0x5cfe: mov qword ptr [rdi],rax
0x5d01: movabs rax,0x3fb4fdf43f4ccccd
0x5d0b: mov qword ptr [rdi + 8],rax
0x5d0f: ret 
0x5d6c: mov qword ptr [rax + 0x28],r15
0x5d70: call 0x56b0
0x5d75: test al,al
0x5d77: je 0x5e00
0x5d7d: cmp byte ptr [r15 + 0x10],0
0x5d82: je 0x5e80
0x5dff: nop 
0x5e1c: nop dword ptr [rax]
0x5e7f: nop 
0x5e80: test rbp,rbp
0x5e83: movss xmm1,dword ptr [r15 + 8]
0x5e89: jns 0x5e41
0x5e8b: mov rax,rbp
0x5e8e: pxor xmm0,xmm0
0x5e92: shr rax,1
0x5e95: and ebp,1
0x5e98: or rax,rbp
0x5e9b: cvtsi2ss xmm0,rax
0x5ea0: addss xmm0,xmm0
0x5ea4: jmp 0x5e4a
0x5ea6: nop word ptr cs:[rax + rax]
0x5ec4: nop 
0x5ec6: nop word ptr cs:[rax + rax]
0x5ed0: push r12
0x5ed2: push rbp
0x5ed3: mov rbp,rdi
0x5ed6: push rbx
0x5ed7: mov r12,qword ptr [rdi]
0x5eda: cmp r12,qword ptr [rdi + 8]
0x5ede: jae 0x5f4b
0x5ee0: cmp qword ptr [r12],0
0x5ee5: je 0x5f41
0x5ee7: mov rbx,qword ptr [r12 + 8]
0x5eec: mov rax,qword ptr [rbp + 0x40]
0x5ef0: test rbx,rbx
0x5ef3: je 0x5f25
0x5ef5: nop dword ptr [rax]
0x5ef8: test rax,rax
0x5efb: je 0x5f06
0x5efd: mov rdi,qword ptr [rbx]
0x5f00: call rax
0x5f02: mov rax,qword ptr [rbp + 0x40]
0x5f06: mov rdx,qword ptr [rbx + 8]
0x5f0a: mov rcx,qword ptr [rbp + 0x48]
0x5f0e: mov qword ptr [rbx],0
0x5f15: test rdx,rdx
0x5f18: mov qword ptr [rbx + 8],rcx
0x5f1c: mov qword ptr [rbp + 0x48],rbx
0x5f20: mov rbx,rdx
0x5f23: jne 0x5ef8
0x5f25: test rax,rax
0x5f28: je 0x5f30
0x5f2a: mov rdi,qword ptr [r12]
0x5f2e: call rax
0x5f30: mov qword ptr [r12],0
0x5f38: mov qword ptr [r12 + 8],0
0x5f41: add r12,0x10
0x5f45: cmp qword ptr [rbp + 8],r12
0x5f49: ja 0x5ee0
0x5f4b: mov qword ptr [rbp + 0x18],0
0x5f53: mov qword ptr [rbp + 0x20],0
0x5f5b: pop rbx
0x5f5c: pop rbp
0x5f5d: pop r12
0x5f5f: ret 
0x5f60: push r12
0x5f62: push rbp
0x5f63: mov r12,rdi
0x5f66: push rbx
0x5f67: cmp qword ptr [rdi + 0x40],0
0x5f6c: mov rbp,qword ptr [rdi]
0x5f6f: mov rax,qword ptr [rdi + 8]
0x5f73: je 0x5fc3
0x5f75: cmp qword ptr [rdi + 0x20],0
0x5f7a: je 0x5fc3
0x5f7c: cmp rbp,rax
0x5f7f: jae 0x5ffc
0x5f81: nop dword ptr [rax]
0x5f88: mov rdi,qword ptr [rbp]
0x5f8c: test rdi,rdi
0x5f8f: je 0x5fb6
0x5f91: mov rbx,rbp
0x5f94: jmp 0x5fa3
0x5f96: nop word ptr cs:[rax + rax]
0x5fa0: mov rdi,qword ptr [rbx]
0x5fa3: call qword ptr [r12 + 0x40]
0x5fa8: mov rbx,qword ptr [rbx + 8]
0x5fac: test rbx,rbx
0x5faf: jne 0x5fa0
0x5fb1: mov rax,qword ptr [r12 + 8]
0x5fb6: add rbp,0x10
0x5fba: cmp rax,rbp
0x5fbd: ja 0x5f88
0x5fbf: mov rbp,qword ptr [r12]
0x5fc3: cmp rbp,rax
0x5fc6: jae 0x5ffc
0x5fc8: nop dword ptr [rax + rax]
0x5fd0: mov rdi,qword ptr [rbp + 8]
0x5fd4: test rdi,rdi
0x5fd7: je 0x5ff1
0x5fd9: nop dword ptr [rax]
0x5fe0: mov rbx,qword ptr [rdi + 8]
0x5fe4: call 0x1db0
0x5fe9: test rbx,rbx
0x5fec: mov rdi,rbx
0x5fef: jne 0x5fe0
0x5ff1: add rbp,0x10
0x5ff5: cmp qword ptr [r12 + 8],rbp
0x5ffa: ja 0x5fd0
0x5ffc: mov rdi,qword ptr [r12 + 0x48]
0x6001: test rdi,rdi
0x6004: je 0x6021
0x6006: nop word ptr cs:[rax + rax]
0x6010: mov rbx,qword ptr [rdi + 8]
0x6014: call 0x1db0
0x6019: test rbx,rbx
0x601c: mov rdi,rbx
0x601f: jne 0x6010
0x6021: mov rdi,qword ptr [r12]
0x6025: call 0x1db0
0x602a: pop rbx
0x602b: mov rdi,r12
0x602e: pop rbp
0x602f: pop r12
0x6031: jmp 0x1db0
0x6036: nop word ptr cs:[rax + rax]
0x6040: push r12
0x6042: push rbp
0x6043: mov rbp,rdi
0x6046: push rbx
0x6047: sub rsp,0x60
0x604b: mov r12,qword ptr [rdi + 0x28]
0x604f: mov rax,qword ptr fs:[0x28]
0x6058: mov qword ptr [rsp + 0x58],rax
0x605d: xor eax,eax
0x605f: cmp byte ptr [r12 + 0x10],0
0x6065: jne 0x60b8
0x6067: test rsi,rsi
0x606a: js 0x61e8
0x6070: pxor xmm0,xmm0
0x6074: cvtsi2ss xmm0,rsi
0x6079: divss xmm0,dword ptr [r12 + 8]
0x6080: ucomiss xmm0,dword ptr [rip + 0x6045]
0x6087: jae 0x61c0
0x608d: ucomiss xmm0,dword ptr [rip + 0x603c]
0x6094: jb 0x6210
0x609a: subss xmm0,dword ptr [rip + 0x602e]
0x60a2: movabs rax,0x8000000000000000
0x60ac: cvttss2si rsi,xmm0
0x60b1: xor rsi,rax
0x60b4: nop dword ptr [rax]
0x60b8: mov rdi,rsi
0x60bb: call 0x54a0
0x60c0: mov edx,8
0x60c5: mov rbx,rax
0x60c8: xor ecx,ecx
0x60ca: mov rax,rdx
0x60cd: mul rbx
0x60d0: jo 0x626f
0x60d6: test rax,rax
0x60d9: mov eax,1
0x60de: cmovs rcx,rax
0x60e2: test rbx,rbx
0x60e5: je 0x61c0
0x60eb: and ecx,1
0x60ee: jne 0x61c0
0x60f4: cmp qword ptr [rbp + 0x10],rbx
0x60f8: je 0x6220
0x60fe: mov esi,0x10
0x6103: mov rdi,rbx
0x6106: call 0x2040
0x610b: test rax,rax
0x610e: mov qword ptr [rsp],rax
0x6112: je 0x61c0
0x6118: mov qword ptr [rsp + 0x10],rbx
0x611d: shl rbx,4
0x6121: mov qword ptr [rsp + 0x28],r12
0x6126: add rbx,rax
0x6129: mov rax,qword ptr [rbp + 0x30]
0x612d: mov r12,rsp
0x6130: xor edx,edx
0x6132: mov rsi,rbp
0x6135: mov rdi,r12
0x6138: mov qword ptr [rsp + 8],rbx
0x613d: mov qword ptr [rsp + 0x18],0
0x6146: mov qword ptr [rsp + 0x30],rax
0x614b: mov rax,qword ptr [rbp + 0x38]
0x614f: mov qword ptr [rsp + 0x20],0
0x6158: mov qword ptr [rsp + 0x38],rax
0x615d: mov rax,qword ptr [rbp + 0x40]
0x6161: mov qword ptr [rsp + 0x40],rax
0x6166: mov rax,qword ptr [rbp + 0x48]
0x616a: mov qword ptr [rsp + 0x48],rax
0x616f: call 0x5730
0x6174: test al,al
0x6176: mov ebx,eax
0x6178: jne 0x6230
0x617e: mov rax,qword ptr [rsp + 0x48]
0x6183: mov edx,1
0x6188: mov rsi,r12
0x618b: mov rdi,rbp
0x618e: mov qword ptr [rbp + 0x48],rax
0x6192: call 0x5730
0x6197: test al,al
0x6199: je 0x6279
0x619f: xor edx,edx
0x61a1: mov rsi,r12
0x61a4: mov rdi,rbp
0x61a7: call 0x5730
0x61ac: test al,al
0x61ae: je 0x6279
0x61b4: mov rdi,qword ptr [rsp]
0x61b8: call 0x1db0
0x61bd: jmp 0x61c2
0x61bf: nop 
0x61c0: xor ebx,ebx
0x61c2: mov rcx,qword ptr [rsp + 0x58]
0x61c7: xor rcx,qword ptr fs:[0x28]
0x61d0: mov eax,ebx
0x61d2: jne 0x626a
0x61d8: add rsp,0x60
0x61dc: pop rbx
0x61dd: pop rbp
0x61de: pop r12
0x61e0: ret 
0x61e1: nop dword ptr [rax]
0x61e8: mov rax,rsi
0x61eb: pxor xmm0,xmm0
0x61ef: shr rax,1
0x61f2: and esi,1
0x61f5: or rax,rsi
0x61f8: cvtsi2ss xmm0,rax
0x61fd: addss xmm0,xmm0
0x6201: jmp 0x6079
0x6206: nop word ptr cs:[rax + rax]
0x6210: cvttss2si rsi,xmm0
0x6215: jmp 0x60b8
0x621a: nop word ptr [rax + rax]
0x6220: mov ebx,1
0x6225: jmp 0x61c2
0x6227: nop word ptr [rax + rax]
0x6230: mov rdi,qword ptr [rbp]
0x6234: call 0x1db0
0x6239: mov rax,qword ptr [rsp]
0x623d: mov qword ptr [rbp],rax
0x6241: mov rax,qword ptr [rsp + 8]
0x6246: mov qword ptr [rbp + 8],rax
0x624a: mov rax,qword ptr [rsp + 0x10]
0x624f: mov qword ptr [rbp + 0x10],rax
0x6253: mov rax,qword ptr [rsp + 0x18]
0x6258: mov qword ptr [rbp + 0x18],rax
0x625c: mov rax,qword ptr [rsp + 0x48]
0x6261: mov qword ptr [rbp + 0x48],rax
0x6265: jmp 0x61c2
0x626a: call 0x1f20
0x626f: mov ecx,1
0x6274: jmp 0x60d6
0x6279: call 0x1dc0
0x627e: nop 
0x62b9: test rax,rax
0x62bc: mov rdx,rax
0x62bf: je 0x62f0
0x62c1: xor eax,eax
0x62c3: test r13,r13
0x62c6: je 0x62cc
0x62c8: mov qword ptr [r13],rdx
0x62cc: mov rcx,qword ptr [rsp + 8]
0x62d1: xor rcx,qword ptr fs:[0x28]
0x62da: jne 0x64ff
0x62e0: add rsp,0x18
0x62e4: pop rbx
0x62e5: pop rbp
0x62e6: pop r12
0x62e8: pop r13
0x62ea: ret 
0x62eb: nop dword ptr [rax + rax]
0x62f0: mov rax,qword ptr [rbx + 0x18]
0x62f4: test rax,rax
0x62f7: js 0x6370
0x62f9: pxor xmm1,xmm1
0x62fd: mov rdx,qword ptr [rbx + 0x28]
0x6301: cvtsi2ss xmm1,rax
0x6306: mov rax,qword ptr [rbx + 0x10]
0x630a: test rax,rax
0x630d: js 0x639a
0x6313: pxor xmm0,xmm0
0x6317: cvtsi2ss xmm0,rax
0x631c: mulss xmm0,dword ptr [rdx + 8]
0x6321: ucomiss xmm1,xmm0
0x6324: ja 0x63c0
0x632a: mov r12,qword ptr [rsp]
0x632e: cmp qword ptr [r12],0
0x6333: je 0x6468
0x6339: mov rax,qword ptr [rbx + 0x48]
0x633d: test rax,rax
0x6340: je 0x6480
0x6346: mov rdx,qword ptr [rax + 8]
0x634a: mov qword ptr [rbx + 0x48],rdx
0x634e: mov rdx,qword ptr [r12 + 8]
0x6353: mov qword ptr [rax],rbp
0x6356: mov qword ptr [rax + 8],rdx
0x635a: mov qword ptr [r12 + 8],rax
0x635f: mov eax,1
0x6364: add qword ptr [rbx + 0x20],1
0x6369: jmp 0x62cc
0x636e: nop 
0x6370: mov rdx,rax
0x6373: pxor xmm1,xmm1
0x6377: and eax,1
0x637a: shr rdx,1
0x637d: or rdx,rax
0x6380: mov rax,qword ptr [rbx + 0x10]
0x6384: cvtsi2ss xmm1,rdx
0x6389: mov rdx,qword ptr [rbx + 0x28]
0x638d: test rax,rax
0x6390: addss xmm1,xmm1
0x6394: jns 0x6313
0x639a: mov rcx,rax
0x639d: pxor xmm0,xmm0
0x63a1: shr rcx,1
0x63a4: and eax,1
0x63a7: or rcx,rax
0x63aa: cvtsi2ss xmm0,rcx
0x63af: addss xmm0,xmm0
0x63b3: jmp 0x631c
0x63b8: nop dword ptr [rax + rax]
0x63c0: lea rdi,[rbx + 0x28]
0x63c4: call 0x56b0
0x63c9: mov rax,qword ptr [rbx + 0x10]
0x63cd: mov rdx,qword ptr [rbx + 0x28]
0x63d1: test rax,rax
0x63d4: movss xmm2,dword ptr [rdx + 8]
0x63d9: js 0x64a0
0x63df: pxor xmm0,xmm0
0x63e3: cvtsi2ss xmm0,rax
0x63e8: mov rax,qword ptr [rbx + 0x18]
0x63ec: test rax,rax
0x63ef: js 0x64c0
0x63f5: pxor xmm1,xmm1
0x63f9: cvtsi2ss xmm1,rax
0x63fe: movaps xmm3,xmm2
0x6401: mulss xmm3,xmm0
0x6405: ucomiss xmm1,xmm3
0x6408: jbe 0x632a
0x640e: cmp byte ptr [rdx + 0x10],0
0x6412: mulss xmm0,dword ptr [rdx + 0xc]
0x6417: jne 0x641d
0x6419: mulss xmm0,xmm2
0x641d: ucomiss xmm0,dword ptr [rip + 0x5ca8]
0x6424: jae 0x6493
0x6426: ucomiss xmm0,dword ptr [rip + 0x5ca3]
0x642d: jae 0x64e0
0x6433: cvttss2si rsi,xmm0
0x6438: mov rdi,rbx
0x643b: call 0x6040
0x6440: test al,al
0x6442: je 0x6493
0x6444: xor ecx,ecx
0x6446: mov rdx,r12
0x6449: mov rsi,rbp
0x644c: mov rdi,rbx
0x644f: call 0x5590
0x6454: test rax,rax
0x6457: je 0x632a
0x6462: nop word ptr [rax + rax]
0x6468: mov qword ptr [r12],rbp
0x646c: mov eax,1
0x6471: add qword ptr [rbx + 0x20],1
0x6476: add qword ptr [rbx + 0x18],1
0x647b: jmp 0x62cc
0x6480: mov edi,0x10
0x6485: call 0x20f0
0x648a: test rax,rax
0x648d: jne 0x634e
0x6493: mov eax,0xffffffff
0x6498: jmp 0x62cc
0x649d: nop dword ptr [rax]
0x64a0: mov rcx,rax
0x64a3: pxor xmm0,xmm0
0x64a7: shr rcx,1
0x64aa: and eax,1
0x64ad: or rcx,rax
0x64b0: cvtsi2ss xmm0,rcx
0x64b5: addss xmm0,xmm0
0x64b9: jmp 0x63e8
0x64be: nop 
0x64c0: mov rcx,rax
0x64c3: pxor xmm1,xmm1
0x64c7: shr rcx,1
0x64ca: and eax,1
0x64cd: or rcx,rax
0x64d0: cvtsi2ss xmm1,rcx
0x64d5: addss xmm1,xmm1
0x64d9: jmp 0x63fe
0x64de: nop 
0x64e0: subss xmm0,dword ptr [rip + 0x5be8]
0x64e8: movabs rax,0x8000000000000000
0x64f2: cvttss2si rsi,xmm0
0x64f7: xor rsi,rax
0x64fa: jmp 0x6438
0x64ff: call 0x1f20
0x6504: nop 
0x6506: nop word ptr cs:[rax + rax]
0x6530: cmp eax,-1
0x6533: je 0x6560
0x6535: test eax,eax
0x6537: jne 0x653d
0x6539: mov rbx,qword ptr [rsp]
0x653d: mov rcx,qword ptr [rsp + 8]
0x6542: xor rcx,qword ptr fs:[0x28]
0x654b: mov rax,rbx
0x654e: jne 0x6564
0x6550: add rsp,0x10
0x6554: pop rbx
0x6555: ret 
0x6556: nop word ptr cs:[rax + rax]
0x6560: xor ebx,ebx
0x6562: jmp 0x653d
0x6564: call 0x1f20
0x6569: nop dword ptr [rax]
0x6570: push r12
0x6572: push rbp
0x6573: mov ecx,1
0x6578: push rbx
0x6579: mov rbx,rdi
0x657c: sub rsp,0x10
0x6580: mov rdx,rsp
0x6583: mov rax,qword ptr fs:[0x28]
0x658c: mov qword ptr [rsp + 8],rax
0x6591: xor eax,eax
0x6593: call 0x5590
0x6598: test rax,rax
0x659b: mov rbp,rax
0x659e: je 0x65af
0x65a0: mov rax,qword ptr [rsp]
0x65a4: sub qword ptr [rbx + 0x20],1
0x65a9: cmp qword ptr [rax],0
0x65ad: je 0x65d0
0x65af: mov rcx,qword ptr [rsp + 8]
0x65b4: xor rcx,qword ptr fs:[0x28]
0x65bd: mov rax,rbp
0x65c0: jne 0x676e
0x65c6: add rsp,0x10
0x65ca: pop rbx
0x65cb: pop rbp
0x65cc: pop r12
0x65ce: ret 
0x65cf: nop 
0x65d0: mov rax,qword ptr [rbx + 0x18]
0x65d4: sub rax,1
0x65d8: test rax,rax
0x65db: mov qword ptr [rbx + 0x18],rax
0x65df: js 0x66e0
0x65e5: pxor xmm0,xmm0
0x65e9: cvtsi2ss xmm0,rax
0x65ee: mov rax,qword ptr [rbx + 0x10]
0x65f2: mov rdx,qword ptr [rbx + 0x28]
0x65f6: test rax,rax
0x65f9: js 0x66c0
0x65ff: pxor xmm1,xmm1
0x6603: cvtsi2ss xmm1,rax
0x6608: mulss xmm1,dword ptr [rdx]
0x660c: ucomiss xmm1,xmm0
0x660f: jbe 0x65af
0x6611: lea rdi,[rbx + 0x28]
0x6615: call 0x56b0
0x661a: mov rax,qword ptr [rbx + 0x10]
0x661e: mov rdx,qword ptr [rbx + 0x28]
0x6622: test rax,rax
0x6625: js 0x6750
0x662b: pxor xmm0,xmm0
0x662f: cvtsi2ss xmm0,rax
0x6634: mov rax,qword ptr [rbx + 0x18]
0x6638: test rax,rax
0x663b: js 0x6730
0x6641: pxor xmm1,xmm1
0x6645: cvtsi2ss xmm1,rax
0x664a: movss xmm2,dword ptr [rdx]
0x664e: mulss xmm2,xmm0
0x6652: ucomiss xmm2,xmm1
0x6655: jbe 0x65af
0x665b: cmp byte ptr [rdx + 0x10],0
0x665f: mulss xmm0,dword ptr [rdx + 4]
0x6664: je 0x6720
0x666a: ucomiss xmm0,dword ptr [rip + 0x5a5f]
0x6671: jae 0x6700
0x6677: cvttss2si rsi,xmm0
0x667c: mov rdi,rbx
0x667f: call 0x6040
0x6684: test al,al
0x6686: jne 0x65af
0x668c: mov rdi,qword ptr [rbx + 0x48]
0x6690: test rdi,rdi
0x6693: je 0x66a9
0x6695: nop dword ptr [rax]
0x6698: mov r12,qword ptr [rdi + 8]
0x669c: call 0x1db0
0x66a1: test r12,r12
0x66a4: mov rdi,r12
0x66a7: jne 0x6698
0x66a9: mov qword ptr [rbx + 0x48],0
0x66b1: jmp 0x65af
0x66b6: nop word ptr cs:[rax + rax]
0x66c0: mov rcx,rax
0x66c3: pxor xmm1,xmm1
0x66c7: shr rcx,1
0x66ca: and eax,1
0x66cd: or rcx,rax
0x66d0: cvtsi2ss xmm1,rcx
0x66d5: addss xmm1,xmm1
0x66d9: jmp 0x6608
0x66de: nop 
0x66e0: mov rdx,rax
0x66e3: pxor xmm0,xmm0
0x66e7: shr rdx,1
0x66ea: and eax,1
0x66ed: or rdx,rax
0x66f0: cvtsi2ss xmm0,rdx
0x66f5: addss xmm0,xmm0
0x66f9: jmp 0x65ee
0x66fe: nop 
0x6700: subss xmm0,dword ptr [rip + 0x59c8]
0x6708: movabs rax,0x8000000000000000
0x6712: cvttss2si rsi,xmm0
0x6717: xor rsi,rax
0x671a: jmp 0x667c
0x671f: nop 
0x6720: mulss xmm0,dword ptr [rdx + 8]
0x6725: jmp 0x666a
0x672a: nop word ptr [rax + rax]
0x6730: mov rcx,rax
0x6733: pxor xmm1,xmm1
0x6737: shr rcx,1
0x673a: and eax,1
0x673d: or rcx,rax
0x6740: cvtsi2ss xmm1,rcx
0x6745: addss xmm1,xmm1
0x6749: jmp 0x664a
0x674e: nop 
0x6750: mov rcx,rax
0x6753: pxor xmm0,xmm0
0x6757: shr rcx,1
0x675a: and eax,1
0x675d: or rcx,rax
0x6760: cvtsi2ss xmm0,rcx
0x6765: addss xmm0,xmm0
0x6769: jmp 0x6634
0x676e: call 0x1f20
0x6773: nop word ptr cs:[rax + rax]
0x677d: nop dword ptr [rax]
0x6780: push rbp
0x6781: push rbx
0x6782: mov rbp,rdi
0x6785: mov rbx,rsi
0x6788: sub rsp,8
0x678c: mov rdi,qword ptr [rdi]
0x678f: call 0x9e30
0x6794: xor rax,qword ptr [rbp + 8]
0x6798: xor edx,edx
0x679a: add rsp,8
0x679e: div rbx
0x67a1: pop rbx
0x67a2: pop rbp
0x67a3: mov rax,rdx
0x67a6: ret 
0x67a7: nop word ptr [rax + rax]
0x67b0: mov rax,qword ptr [rdi + 8]
0x67b4: xor edx,edx
0x67b6: div rsi
0x67b9: mov rax,rdx
0x67bc: ret 
0x67bd: nop dword ptr [rax]
0x67c0: xor eax,eax
0x67c2: mov rdx,qword ptr [rsi + 8]
0x67c6: cmp qword ptr [rdi + 8],rdx
0x67ca: je 0x67d0
0x67cc: ret 
0x67ce: nop 
0x67d0: mov rcx,qword ptr [rsi + 0x10]
0x67d4: cmp qword ptr [rdi + 0x10],rcx
0x67d8: jne 0x67cc
0x67da: sub rsp,8
0x67de: mov rsi,qword ptr [rsi]
0x67e1: mov rdi,qword ptr [rdi]
0x67e4: call 0x8ab0
0x67e9: add rsp,8
0x67ed: ret 
0x67ee: nop 
0x67f0: xor eax,eax
0x67f2: mov rdx,qword ptr [rsi + 8]
0x67f6: cmp qword ptr [rdi + 8],rdx
0x67fa: je 0x6800
0x67fc: ret 
0x67fe: nop 
0x6800: mov rcx,qword ptr [rsi + 0x10]
0x6804: cmp qword ptr [rdi + 0x10],rcx
0x6808: jne 0x67fc
0x680a: sub rsp,8
0x680e: mov rsi,qword ptr [rsi]
0x6811: mov rdi,qword ptr [rdi]
0x6814: call 0x2060
0x6819: test eax,eax
0x681b: sete al
0x681e: add rsp,8
0x6822: ret 
0x6823: nop dword ptr [rax]
0x6826: nop word ptr cs:[rax + rax]
0x6830: push rbx
0x6831: mov rbx,rdi
0x6834: mov rdi,qword ptr [rdi]
0x6837: call 0x1db0
0x683c: mov rdi,rbx
0x683f: pop rbx
0x6840: jmp 0x1db0
0x6845: nop word ptr cs:[rax + rax]
0x684f: nop 
0x6893: nop dword ptr [rax + rax]
0x68b9: call 0x1f20
0x68be: nop 
0x6901: nop dword ptr [rax]
0x692c: nop dword ptr [rax]
0x69df: nop 
0x6a1c: nop dword ptr [rax]
0x6a6d: nop dword ptr [rax]
0x6ac7: nop word ptr [rax + rax]
0x6d87: nop word ptr [rax + rax]
0x6dbe: nop 
0x6de1: nop dword ptr [rax]
0x6e0b: mov ebx,edx
0x6e0d: xor r12d,r12d
0x6e10: xor eax,eax
0x6e22: nop word ptr [rax + rax]
0x6e34: nop dword ptr [rax]
0x6e59: cmp qword ptr [rsp + 0x18],0
0x6e5f: jne 0x721b
0x6e65: mov ebx,0x5c
0x6e6a: nop word ptr [rax + rax]
0x6ed8: nop dword ptr [rax + rax]
0x6eeb: xor edx,edx
0x6eed: test byte ptr [rsp + 0x78],1
0x6ef2: je 0x6e0b
0x6ef8: add rbp,1
0x6efc: jmp 0x6bb8
0x6f01: nop dword ptr [rax]
0x6f17: nop word ptr [rax + rax]
0x6f2f: nop 
0x6f4e: mov rbp,r11
0x6f51: mov dword ptr [rsp + 8],2
0x6f59: jmp 0x7659
0x6f5e: nop 
0x6f6d: nop dword ptr [rax]
0x6f7f: nop 
0x6f8f: nop 
0x6f9f: nop 
0x6faf: nop 
0x6fbf: nop 
0x702c: nop dword ptr [rax]
0x704c: nop dword ptr [rax]
0x705e: nop 
0x706f: nop 
0x7082: nop word ptr [rax + rax]
0x709a: nop word ptr [rax + rax]
0x70aa: nop word ptr [rax + rax]
0x714b: nop dword ptr [rax + rax]
0x7165: nop dword ptr [rax]
0x7178: nop dword ptr [rax + rax]
0x7193: nop dword ptr [rax + rax]
0x71c2: nop word ptr [rax + rax]
0x71d2: nop word ptr [rax + rax]
0x71ea: nop word ptr [rax + rax]
0x71fa: nop word ptr [rax + rax]
0x7208: nop dword ptr [rax + rax]
0x722f: nop 
0x72c9: nop dword ptr [rax]
0x7312: nop word ptr [rax + rax]
0x7351: nop dword ptr [rax]
0x7372: nop word ptr [rax + rax]
0x74d8: nop dword ptr [rax + rax]
0x75eb: nop dword ptr [rax + rax]
0x75f0: cmp r15,1
0x75f4: je 0x7459
0x75fa: mov rdi,qword ptr [rsp + 0x10]
0x75ff: lea rcx,[rdi + r15]
0x7603: lea rdx,[rdi + r14 + 1]
0x7608: lea r8,[rcx + r14]
0x760c: jmp 0x761d
0x760e: nop 
0x7610: add rdx,1
0x7614: cmp r8,rdx
0x7617: je 0x7459
0x761d: movzx ecx,byte ptr [rdx]
0x7620: sub ecx,0x5b
0x7623: cmp cl,0x21
0x7626: ja 0x7610
0x7628: mov esi,1
0x762d: shl rsi,cl
0x7630: mov rcx,rsi
0x7633: movabs rsi,0x20000002b
0x763d: test rcx,rsi
0x7640: je 0x7610
0x7642: mov r14,qword ptr [rsp + 0x40]
0x7647: mov r13,qword ptr [rsp + 0x70]
0x764c: mov rbp,qword ptr [rsp + 0x30]
0x7651: mov dword ptr [rsp + 8],2
0x7659: cmp byte ptr [rsp + 0xd],0
0x765e: je 0x7670
0x7660: test al,al
0x7662: mov eax,4
0x7667: cmove eax,dword ptr [rsp + 8]
0x766c: mov dword ptr [rsp + 8],eax
0x7670: sub rsp,8
0x7674: mov rcx,rbp
0x7677: mov rsi,r13
0x767a: push qword ptr [rsp + 0x68]
0x767e: push qword ptr [rsp + 0x78]
0x7682: mov rdi,r14
0x7685: push 0
0x7687: mov r9d,dword ptr [rsp + 0x98]
0x768f: mov r8d,dword ptr [rsp + 0x28]
0x7694: mov rdx,qword ptr [rsp + 0x30]
0x7699: and r9d,0xfffffffd
0x769d: call 0x6ad0
0x76a2: add rsp,0x20
0x76a6: mov r15,rax
0x76d5: nop dword ptr [rax]
0x76d8: mov rbp,r11
0x76db: jmp 0x7659
0x778d: nop dword ptr [rax]
0x7996: nop word ptr cs:[rax + rax]
0x79a0: movzx ebx,byte ptr [rsp + 0xf]
0x79a5: mov rbp,r11
0x79a8: mov byte ptr [rsp + 0xd],bl
0x79ac: jmp 0x7659
0x7a29: nop dword ptr [rax]
0x7b7d: nop dword ptr [rax]
0x7b80: mov rbp,r11
0x7b83: movzx eax,byte ptr [rsp + 0xf]
0x7b88: jmp 0x7659
0x7c15: cmp dword ptr [rsp + 8],2
0x7c1a: movzx ebx,byte ptr [rsp + 0xf]
0x7c1f: mov rbp,r11
0x7c22: sete al
0x7c25: mov byte ptr [rsp + 0xd],bl
0x7c29: jmp 0x7659
0x7c5a: movzx ebx,byte ptr [rsp + 0xf]
0x7c5f: mov rbp,r11
0x7c62: mov eax,edx
0x7c64: mov byte ptr [rsp + 0xd],bl
0x7c68: jmp 0x7659
0x7cb6: mov dword ptr [rsp + 8],2
0x7cbe: jmp 0x7659
0x7cc3: call 0x1f20
0x7cd2: mov rbp,r11
0x7cd5: jmp 0x7670
0x7d04: nop 
0x7d06: nop word ptr cs:[rax + rax]
0x7e8b: nop dword ptr [rax + rax]
0x7ebb: nop dword ptr [rax + rax]
0x7ec0: push r12
0x7ec2: push rbp
0x7ec3: push rbx
0x7ec4: mov rbx,rdi
0x7ec7: call 0x1dd0
0x7ecc: mov r12d,dword ptr [rax]
0x7ecf: mov rbp,rax
0x7ed2: lea rax,[rip + 0x208387]
0x7ed9: test rbx,rbx
0x7edc: mov esi,0x38
0x7ee1: cmove rbx,rax
0x7ee5: mov rdi,rbx
0x7ee8: call 0x9610
0x7eed: mov dword ptr [rbp],r12d
0x7ef1: pop rbx
0x7ef2: pop rbp
0x7ef3: pop r12
0x7ef5: ret 
0x7ef6: nop word ptr cs:[rax + rax]
0x7f00: lea rax,[rip + 0x208359]
0x7f07: test rdi,rdi
0x7f0a: cmove rdi,rax
0x7f0e: mov eax,dword ptr [rdi]
0x7f10: ret 
0x7f11: nop dword ptr [rax + rax]
0x7f16: nop word ptr cs:[rax + rax]
0x7f20: lea rax,[rip + 0x208339]
0x7f27: test rdi,rdi
0x7f2a: cmove rdi,rax
0x7f2e: mov dword ptr [rdi],esi
0x7f30: ret 
0x7f31: nop dword ptr [rax + rax]
0x7f36: nop word ptr cs:[rax + rax]
0x7f40: lea rax,[rip + 0x208319]
0x7f47: test rdi,rdi
0x7f4a: mov ecx,esi
0x7f4c: cmove rdi,rax
0x7f50: mov eax,esi
0x7f52: and ecx,0x1f
0x7f55: shr al,5
0x7f58: movzx eax,al
0x7f5b: lea rdi,[rdi + rax*4 + 8]
0x7f60: mov esi,dword ptr [rdi]
0x7f62: mov eax,esi
0x7f64: shr eax,cl
0x7f66: xor edx,eax
0x7f68: and eax,1
0x7f6b: and edx,1
0x7f6e: shl edx,cl
0x7f70: xor edx,esi
0x7f72: mov dword ptr [rdi],edx
0x7f74: ret 
0x7f75: nop 
0x7f76: nop word ptr cs:[rax + rax]
0x7f80: lea rax,[rip + 0x2082d9]
0x7f87: test rdi,rdi
0x7f8a: cmove rdi,rax
0x7f8e: mov eax,dword ptr [rdi + 4]
0x7f91: mov dword ptr [rdi + 4],esi
0x7f94: ret 
0x7f95: nop 
0x7f96: nop word ptr cs:[rax + rax]
0x7fa0: lea rax,[rip + 0x2082b9]
0x7fa7: test rdi,rdi
0x7faa: cmove rdi,rax
0x7fae: test rsi,rsi
0x7fb1: mov dword ptr [rdi],0xa
0x7fb7: je 0x7fc7
0x7fb9: test rdx,rdx
0x7fbc: je 0x7fc7
0x7fbe: mov qword ptr [rdi + 0x28],rsi
0x7fc2: mov qword ptr [rdi + 0x30],rdx
0x7fc6: ret 
0x7fc7: sub rsp,8
0x7fcb: call 0x1dc0
0x7fd0: push r15
0x7fd2: push r14
0x7fd4: lea rax,[rip + 0x208285]
0x7fdb: push r13
0x7fdd: push r12
0x7fdf: mov r13,rdi
0x7fe2: push rbp
0x7fe3: push rbx
0x7fe4: mov rbx,r8
0x7fe7: mov r14,rsi
0x7fea: mov r15,rdx
0x7fed: sub rsp,0x18
0x7ff1: test r8,r8
0x7ff4: cmove rbx,rax
0x7ff8: mov qword ptr [rsp + 8],rcx
0x7ffd: call 0x1dd0
0x8002: mov r12d,dword ptr [rax]
0x8005: mov rbp,rax
0x8008: lea rax,[rbx + 8]
0x800c: sub rsp,8
0x8010: mov r9d,dword ptr [rbx + 4]
0x8014: push qword ptr [rbx + 0x30]
0x8017: mov r8d,dword ptr [rbx]
0x801a: push qword ptr [rbx + 0x28]
0x801d: mov rdx,r15
0x8020: push rax
0x8021: mov rcx,qword ptr [rsp + 0x28]
0x8026: mov rsi,r14
0x8029: mov rdi,r13
0x802c: call 0x6ad0
0x8031: mov dword ptr [rbp],r12d
0x8035: add rsp,0x38
0x8039: pop rbx
0x803a: pop rbp
0x803b: pop r12
0x803d: pop r13
0x803f: pop r14
0x8041: pop r15
0x8043: ret 
0x8044: nop 
0x8046: nop word ptr cs:[rax + rax]
0x8050: push r15
0x8052: push r14
0x8054: lea rax,[rip + 0x208205]
0x805b: push r13
0x805d: push r12
0x805f: mov r12,rdx
0x8062: push rbp
0x8063: push rbx
0x8064: mov rbx,rcx
0x8067: mov r14,rdi
0x806a: mov r15,rsi
0x806d: sub rsp,0x38
0x8071: test rcx,rcx
0x8074: cmove rbx,rax
0x8078: xor ebp,ebp
0x807a: call 0x1dd0
0x807f: test r12,r12
0x8082: mov r13,rax
0x8085: mov eax,dword ptr [rax]
0x8087: sete bpl
0x808b: or ebp,dword ptr [rbx + 4]
0x808e: lea r10,[rbx + 8]
0x8092: sub rsp,8
0x8096: mov r8d,dword ptr [rbx]
0x8099: mov rcx,r15
0x809c: mov dword ptr [rsp + 0x14],eax
0x80a0: push qword ptr [rbx + 0x30]
0x80a3: mov rdx,r14
0x80a6: push qword ptr [rbx + 0x28]
0x80a9: push r10
0x80ab: xor esi,esi
0x80ad: mov r9d,ebp
0x80b0: xor edi,edi
0x80b2: mov qword ptr [rsp + 0x40],r10
0x80b7: call 0x6ad0
0x80bc: lea rsi,[rax + 1]
0x80c0: mov qword ptr [rsp + 0x48],rax
0x80c5: add rsp,0x20
0x80c9: mov rdi,rsi
0x80cc: mov qword ptr [rsp + 0x18],rsi
0x80d1: call 0x9410
0x80d6: mov qword ptr [rsp + 0x10],rax
0x80db: sub rsp,8
0x80df: push qword ptr [rbx + 0x30]
0x80e2: push qword ptr [rbx + 0x28]
0x80e5: mov r10,qword ptr [rsp + 0x38]
0x80ea: mov r9d,ebp
0x80ed: mov r8d,dword ptr [rbx]
0x80f0: mov rcx,r15
0x80f3: mov rdx,r14
0x80f6: mov rdi,rax
0x80f9: push r10
0x80fb: mov rsi,qword ptr [rsp + 0x38]
0x8100: call 0x6ad0
0x8105: mov eax,dword ptr [rsp + 0x2c]
0x8109: add rsp,0x20
0x810d: test r12,r12
0x8110: mov dword ptr [r13],eax
0x8114: je 0x811f
0x8116: mov r11,qword ptr [rsp + 0x28]
0x811b: mov qword ptr [r12],r11
0x811f: mov rax,qword ptr [rsp + 0x10]
0x8124: add rsp,0x38
0x8128: pop rbx
0x8129: pop rbp
0x812a: pop r12
0x812c: pop r13
0x812e: pop r14
0x8130: pop r15
0x8132: ret 
0x8133: nop dword ptr [rax]
0x8136: nop word ptr cs:[rax + rax]
0x8140: mov rcx,rdx
0x8143: xor edx,edx
0x8145: jmp 0x8050
0x814a: nop word ptr [rax + rax]
0x8150: mov eax,dword ptr [rip + 0x207f22]
0x8156: push r12
0x8158: mov r12,qword ptr [rip + 0x207f21]
0x815f: push rbp
0x8160: push rbx
0x8161: cmp eax,1
0x8164: jle 0x8191
0x8166: sub eax,2
0x8169: lea rbx,[r12 + 0x18]
0x816e: shl rax,4
0x8172: lea rbp,[r12 + rax + 0x28]
0x8177: nop word ptr [rax + rax]
0x8180: mov rdi,qword ptr [rbx]
0x8183: add rbx,0x10
0x8187: call 0x1db0
0x818c: cmp rbx,rbp
0x818f: jne 0x8180
0x8191: mov rdi,qword ptr [r12 + 8]
0x8196: lea rbx,[rip + 0x207fc3]
0x819d: cmp rdi,rbx
0x81a0: je 0x81b9
0x81a2: call 0x1db0
0x81a7: mov qword ptr [rip + 0x207ede],0x100
0x81b2: mov qword ptr [rip + 0x207edf],rbx
0x81b9: lea rbx,[rip + 0x207ed0]
0x81c0: cmp r12,rbx
0x81c3: je 0x81d4
0x81c5: mov rdi,r12
0x81c8: call 0x1db0
0x81cd: mov qword ptr [rip + 0x207eac],rbx
0x81d4: pop rbx
0x81d5: mov dword ptr [rip + 0x207e99],1
0x81df: pop rbp
0x81e0: pop r12
0x81e2: ret 
0x81e3: nop dword ptr [rax]
0x81e6: nop word ptr cs:[rax + rax]
0x81f0: lea rcx,[rip + 0x208069]
0x81f7: mov rdx,-1
0x81fe: jmp 0x7d10
0x8203: nop dword ptr [rax]
0x8206: nop word ptr cs:[rax + rax]
0x8210: lea rcx,[rip + 0x208049]
0x8217: jmp 0x7d10
0x821c: nop dword ptr [rax]
0x8220: lea rcx,[rip + 0x208039]
0x8227: mov rsi,rdi
0x822a: mov rdx,-1
0x8231: xor edi,edi
0x8233: jmp 0x7d10
0x8238: nop dword ptr [rax + rax]
0x8240: lea rcx,[rip + 0x208019]
0x8247: mov rdx,rsi
0x824a: mov rsi,rdi
0x824d: xor edi,edi
0x824f: jmp 0x7d10
0x8254: nop 
0x8256: nop word ptr cs:[rax + rax]
0x82e9: call 0x1f20
0x82ee: nop 
0x82f0: sub rsp,0x48
0x82f4: mov rax,rdx
0x82f7: mov rdx,rcx
0x82fa: mov rcx,qword ptr fs:[0x28]
0x8303: mov qword ptr [rsp + 0x38],rcx
0x8308: xor ecx,ecx
0x830a: cmp esi,0xa
0x830d: je 0x8370
0x830f: mov dword ptr [rsp],esi
0x8312: mov rcx,rsp
0x8315: mov rsi,rax
0x8318: mov qword ptr [rsp + 4],0
0x8321: mov qword ptr [rsp + 0xc],0
0x832a: mov qword ptr [rsp + 0x14],0
0x8333: mov qword ptr [rsp + 0x1c],0
0x833c: mov qword ptr [rsp + 0x24],0
0x8345: mov qword ptr [rsp + 0x2c],0
0x834e: mov dword ptr [rsp + 0x34],0
0x8356: call 0x7d10
0x835b: mov rdx,qword ptr [rsp + 0x38]
0x8360: xor rdx,qword ptr fs:[0x28]
0x8369: jne 0x8375
0x836b: add rsp,0x48
0x836f: ret 
0x8370: call 0x1dc0
0x8375: call 0x1f20
0x837a: nop word ptr [rax + rax]
0x838c: nop dword ptr [rax]
0x8390: mov rcx,rdx
0x8393: mov rdx,rsi
0x8396: mov esi,edi
0x8398: xor edi,edi
0x839a: jmp 0x82f0
0x839f: nop 
0x83a0: sub rsp,0x48
0x83a4: mov ecx,edx
0x83a6: mov rax,qword ptr fs:[0x28]
0x83af: mov qword ptr [rsp + 0x38],rax
0x83b4: xor eax,eax
0x83b6: mov rax,qword ptr [rip + 0x207ed3]
0x83bd: mov r8,rsp
0x83c0: and ecx,0x1f
0x83c3: movdqa xmm0,xmmword ptr [rip + 0x207e95]
0x83cb: mov qword ptr [rsp + 0x30],rax
0x83d0: mov eax,edx
0x83d2: movaps xmmword ptr [rsp],xmm0
0x83d6: shr al,5
0x83d9: movzx eax,al
0x83dc: lea r9,[r8 + rax*4 + 8]
0x83e1: movdqa xmm0,xmmword ptr [rip + 0x207e87]
0x83e9: movaps xmmword ptr [rsp + 0x10],xmm0
0x83ee: movdqa xmm0,xmmword ptr [rip + 0x207e8a]
0x83f6: movaps xmmword ptr [rsp + 0x20],xmm0
0x83fb: mov edx,dword ptr [r9]
0x83fe: mov eax,edx
0x8400: shr eax,cl
0x8402: not eax
0x8404: and eax,1
0x8407: shl eax,cl
0x8409: mov rcx,r8
0x840c: xor eax,edx
0x840e: mov rdx,rsi
0x8411: mov rsi,rdi
0x8414: mov dword ptr [r9],eax
0x8417: xor edi,edi
0x8419: call 0x7d10
0x841e: mov rsi,qword ptr [rsp + 0x38]
0x8423: xor rsi,qword ptr fs:[0x28]
0x842c: jne 0x8433
0x842e: add rsp,0x48
0x8432: ret 
0x8433: call 0x1f20
0x8438: nop dword ptr [rax + rax]
0x8440: movsx edx,sil
0x8444: mov rsi,-1
0x844b: jmp 0x83a0
0x8450: mov edx,0x3a
0x8455: mov rsi,-1
0x845c: jmp 0x83a0
0x8461: nop dword ptr [rax + rax]
0x8466: nop word ptr cs:[rax + rax]
0x8470: mov edx,0x3a
0x8475: jmp 0x83a0
0x847a: nop word ptr [rax + rax]
0x8504: call 0x1dc0
0x8509: call 0x1f20
0x850e: nop 
0x8510: sub rsp,0x48
0x8514: mov r9,rcx
0x8517: mov rcx,qword ptr [rip + 0x207d72]
0x851e: movdqa xmm0,xmmword ptr [rip + 0x207d3a]
0x8526: mov rax,qword ptr fs:[0x28]
0x852f: mov qword ptr [rsp + 0x38],rax
0x8534: xor eax,eax
0x8536: movaps xmmword ptr [rsp],xmm0
0x853a: test rsi,rsi
0x853d: mov qword ptr [rsp + 0x30],rcx
0x8542: mov dword ptr [rsp],0xa
0x8549: movdqa xmm0,xmmword ptr [rip + 0x207d1f]
0x8551: movaps xmmword ptr [rsp + 0x10],xmm0
0x8556: movdqa xmm0,xmmword ptr [rip + 0x207d22]
0x855e: movaps xmmword ptr [rsp + 0x20],xmm0
0x8563: je 0x8597
0x8565: test rdx,rdx
0x8568: je 0x8597
0x856a: mov qword ptr [rsp + 0x28],rsi
0x856f: mov qword ptr [rsp + 0x30],rdx
0x8574: mov rcx,rsp
0x8577: mov rdx,r8
0x857a: mov rsi,r9
0x857d: call 0x7d10
0x8582: mov rdi,qword ptr [rsp + 0x38]
0x8587: xor rdi,qword ptr fs:[0x28]
0x8590: jne 0x859c
0x8592: add rsp,0x48
0x8596: ret 
0x8597: call 0x1dc0
0x859c: call 0x1f20
0x85a1: nop dword ptr [rax + rax]
0x85a6: nop word ptr cs:[rax + rax]
0x85b0: mov r8,-1
0x85b7: jmp 0x8510
0x85bc: nop dword ptr [rax]
0x85c0: mov rcx,rdx
0x85c3: mov r8,-1
0x85ca: mov rdx,rsi
0x85cd: mov rsi,rdi
0x85d0: xor edi,edi
0x85d2: jmp 0x8510
0x85d7: nop word ptr [rax + rax]
0x85e0: mov r8,rcx
0x85e3: mov rcx,rdx
0x85e6: mov rdx,rsi
0x85e9: mov rsi,rdi
0x85ec: xor edi,edi
0x85ee: jmp 0x8510
0x85f3: nop dword ptr [rax]
0x85f6: nop word ptr cs:[rax + rax]
0x8600: lea rcx,[rip + 0x207a39]
0x8607: jmp 0x7d10
0x860c: nop dword ptr [rax]
0x8610: lea rcx,[rip + 0x207a29]
0x8617: mov rdx,rsi
0x861a: mov rsi,rdi
0x861d: xor edi,edi
0x861f: jmp 0x7d10
0x8624: nop 
0x8626: nop word ptr cs:[rax + rax]
0x8643: nop dword ptr [rax]
0x8646: nop word ptr cs:[rax + rax]
0x8650: lea rcx,[rip + 0x2079e9]
0x8657: mov rsi,rdi
0x865a: mov rdx,-1
0x8661: xor edi,edi
0x8663: jmp 0x7d10
0x8668: nop dword ptr [rax + rax]
0x8670: push r15
0x8672: push r14
0x8674: mov r9d,r8d
0x8677: push r13
0x8679: push r12
0x867b: mov r14d,edx
0x867e: push rbp
0x867f: push rbx
0x8680: mov r12,rsi
0x8683: mov r13,rcx
0x8686: mov ebp,r8d
0x8689: mov r8,rcx
0x868c: sub rsp,0x148
0x8693: mov ecx,edx
0x8695: mov rdx,rsi
0x8698: mov rax,qword ptr fs:[0x28]
0x86a1: mov qword ptr [rsp + 0x138],rax
0x86a9: xor eax,eax
0x86ab: mov esi,edi
0x86ad: mov dword ptr [rsp + 4],edi
0x86b1: mov edi,0x13c
0x86b6: call 0x2090
0x86bb: mov rbx,rax
0x86be: mov r15d,eax
0x86c1: call 0x1dd0
0x86c6: test ebx,ebx
0x86c8: js 0x8700
0x86ca: mov rdx,qword ptr [rsp + 0x138]
0x86d2: xor rdx,qword ptr fs:[0x28]
0x86db: mov eax,r15d
0x86de: jne 0x88d5
0x86e4: add rsp,0x148
0x86eb: pop rbx
0x86ec: pop rbp
0x86ed: pop r12
0x86ef: pop r13
0x86f1: pop r14
0x86f3: pop r15
0x86f5: ret 
0x86f6: nop word ptr cs:[rax + rax]
0x8700: mov r9,rax
0x8703: mov eax,dword ptr [rax]
0x8705: lea ecx,[rax - 0x16]
0x8708: and ecx,0xffffffef
0x870b: setne bl
0x870e: cmp eax,0x5f
0x8711: setne al
0x8714: and bl,al
0x8716: jne 0x86ca
0x8718: test ebp,ebp
0x871a: jne 0x8770
0x871c: mov rdi,r12
0x871f: mov qword ptr [rsp + 8],r9
0x8724: call 0x1ef0
0x8729: mov rdi,r13
0x872c: mov rbp,rax
0x872f: call 0x1ef0
0x8734: test rbp,rbp
0x8737: je 0x8753
0x8739: test rax,rax
0x873c: mov r9,qword ptr [rsp + 8]
0x8741: je 0x8753
0x8743: cmp byte ptr [r12 + rbp - 1],0x2f
0x8749: je 0x8790
0x874b: cmp byte ptr [r13 + rax - 1],0x2f
0x8751: je 0x8790
0x8753: mov edi,dword ptr [rsp + 4]
0x8757: mov rcx,r13
0x875a: mov edx,r14d
0x875d: mov rsi,r12
0x8760: call 0x2220
0x8765: mov r15d,eax
0x8768: jmp 0x86ca
0x876d: nop dword ptr [rax]
0x8770: and ebp,0xfffffffe
0x8773: je 0x87e0
0x8775: mov dword ptr [r9],0x5f
0x877c: mov r15d,0xffffffff
0x8782: jmp 0x86ca
0x8787: nop word ptr [rax + rax]
0x8790: mov esi,dword ptr [rsp + 4]
0x8794: lea rcx,[rsp + 0x10]
0x8799: mov r8d,0x100
0x879f: mov rdx,r12
0x87a2: mov edi,1
0x87a7: mov qword ptr [rsp + 8],r9
0x87ac: call 0x1f60
0x87b1: test eax,eax
0x87b3: jne 0x8819
0x87b5: test bl,bl
0x87b7: mov r9,qword ptr [rsp + 8]
0x87bc: je 0x883a
0x87be: mov eax,dword ptr [rsp + 0x28]
0x87c2: and eax,0xf000
0x87c7: cmp eax,0x4000
0x87cc: je 0x8753
0x87ce: mov dword ptr [r9],2
0x87d5: mov r15d,0xffffffff
0x87db: jmp 0x86ca
0x87e0: lea rcx,[rsp + 0xa0]
0x87e8: mov r8d,0x100
0x87ee: mov rdx,r13
0x87f1: mov esi,r14d
0x87f4: mov edi,1
0x87f9: mov qword ptr [rsp + 8],r9
0x87fe: call 0x1f60
0x8803: test eax,eax
0x8805: mov r9,qword ptr [rsp + 8]
0x880a: je 0x8828
0x880c: mov eax,dword ptr [r9]
0x880f: cmp eax,0x4b
0x8812: je 0x8828
0x8814: cmp eax,2
0x8817: je 0x8888
0x8819: mov r15d,0xffffffff
0x881f: jmp 0x86ca
0x8824: nop dword ptr [rax]
0x8828: mov dword ptr [r9],0x11
0x882f: mov r15d,0xffffffff
0x8835: jmp 0x86ca
0x883a: lea rcx,[rsp + 0xa0]
0x8842: mov r8d,0x100
0x8848: mov rdx,r13
0x884b: mov esi,r14d
0x884e: mov edi,1
0x8853: mov qword ptr [rsp + 8],r9
0x8858: call 0x1f60
0x885d: test eax,eax
0x885f: mov r9,qword ptr [rsp + 8]
0x8864: je 0x8892
0x8866: cmp dword ptr [r9],2
0x886a: jne 0x8819
0x886c: mov eax,dword ptr [rsp + 0x28]
0x8870: and eax,0xf000
0x8875: cmp eax,0x4000
0x887a: jne 0x8819
0x887c: jmp 0x8753
0x8881: nop dword ptr [rax]
0x8888: mov ebx,1
0x888d: jmp 0x871c
0x8892: mov eax,dword ptr [rsp + 0xb8]
0x8899: and eax,0xf000
0x889e: cmp eax,0x4000
0x88a3: je 0x88b1
0x88a5: mov dword ptr [r9],0x14
0x88ac: jmp 0x8819
0x88b1: mov eax,dword ptr [rsp + 0x28]
0x88b5: and eax,0xf000
0x88ba: cmp eax,0x4000
0x88bf: je 0x8753
0x88c5: mov dword ptr [r9],0x15
0x88cc: or r15d,0xffffffff
0x88d0: jmp 0x86ca
0x88d5: call 0x1f20
0x88da: nop word ptr [rax + rax]
0x89b4: nop dword ptr [rax]
0x89d5: jmp 0x8968
0x89d7: nop word ptr [rax + rax]
0x89fd: jmp 0x8934
0x8a02: call 0x1f20
0x8a07: nop word ptr [rax + rax]
0x8a6a: nop word ptr [rax + rax]
0x8aa2: nop dword ptr [rax]
0x8aa6: nop word ptr cs:[rax + rax]
0x8ab0: mov edx,0xffffff9c
0x8ab5: mov rcx,rsi
0x8ab8: mov rsi,rdi
0x8abb: mov edi,edx
0x8abd: jmp 0x8a10
0x8ac2: nop word ptr cs:[rax + rax]
0x8acc: nop dword ptr [rax]
0x8ad0: push rbx
0x8ad1: mov rsi,rdi
0x8ad4: mov edi,1
0x8ad9: sub rsp,0xa0
0x8ae0: mov rdx,rsp
0x8ae3: mov rax,qword ptr fs:[0x28]
0x8aec: mov qword ptr [rsp + 0x98],rax
0x8af4: xor eax,eax
0x8af6: call 0x1f00
0x8afb: mov ebx,eax
0x8afd: call 0x1dd0
0x8b02: test ebx,ebx
0x8b04: je 0x8b20
0x8b06: mov edx,dword ptr [rax]
0x8b08: cmp edx,0x4b
0x8b0b: je 0x8b20
0x8b0d: xor eax,eax
0x8b0f: cmp edx,2
0x8b12: setne al
0x8b15: neg eax
0x8b17: jmp 0x8b2b
0x8b19: nop dword ptr [rax]
0x8b20: mov dword ptr [rax],0x11
0x8b26: mov eax,0xffffffff
0x8b2b: mov rcx,qword ptr [rsp + 0x98]
0x8b33: xor rcx,qword ptr fs:[0x28]
0x8b3c: jne 0x8b47
0x8b3e: add rsp,0xa0
0x8b45: pop rbx
0x8b46: ret 
0x8b47: call 0x1f20
0x8b4c: nop dword ptr [rax]
0x8b50: mov esi,0x1c0
0x8b55: jmp 0x1e30
0x8b5a: nop word ptr [rax + rax]
0x8b60: mov esi,dword ptr [rsi]
0x8b62: mov edx,0x180
0x8b67: xor eax,eax
0x8b69: and sil,0x3c
0x8b6d: or sil,0xc2
0x8b71: jmp 0x21d0
0x8b76: nop word ptr cs:[rax + rax]
0x8cf4: nop 
0x8cf6: nop word ptr cs:[rax + rax]
0x8d00: sub rsp,0x18
0x8d04: cmp ecx,1
0x8d07: mov dword ptr [rsp + 0xc],edx
0x8d0b: je 0x8d70
0x8d0d: cmp ecx,2
0x8d10: je 0x8d38
0x8d12: test ecx,ecx
0x8d14: je 0x8d50
0x8d16: lea rcx,[rip + 0x3943]
0x8d1d: lea rsi,[rip + 0x38e4]
0x8d24: lea rdi,[rip + 0x3905]
0x8d2b: mov edx,0x147
0x8d30: call 0x1fb0
0x8d35: nop dword ptr [rax]
0x8d38: lea rdx,[rsp + 0xc]
0x8d3d: lea rcx,[rip - 0x274]
0x8d44: call 0x8b80
0x8d49: add rsp,0x18
0x8d4d: ret 
0x8d4e: nop 
0x8d50: lea rdx,[rsp + 0xc]
0x8d55: lea rcx,[rip - 0x1fc]
0x8d5c: call 0x8b80
0x8d61: add rsp,0x18
0x8d65: ret 
0x8d66: nop word ptr cs:[rax + rax]
0x8d70: lea rdx,[rsp + 0xc]
0x8d75: lea rcx,[rip - 0x22c]
0x8d7c: call 0x8b80
0x8d81: add rsp,0x18
0x8d85: ret 
0x8d86: nop word ptr cs:[rax + rax]
0x8d90: mov r8d,6
0x8d96: jmp 0x8d00
0x8d9b: nop dword ptr [rax + rax]
0x8da0: mov r8d,6
0x8da6: jmp 0x8b80
0x8dab: nop dword ptr [rax + rax]
0x8def: nop 
0x8e96: nop word ptr cs:[rax + rax]
0x8f25: nop dword ptr [rax]
0x8f28: mov r8,rcx
0x8f2b: mov rcx,rdx
0x8f2e: lea rdx,[rip + 0x3796]
0x8f35: mov esi,1
0x8f3a: xor eax,eax
0x8f3c: call 0x2260
0x8f41: jmp 0x8e2c
0x8f46: nop word ptr cs:[rax + rax]
0x8fa5: nop dword ptr [rax]
0x8fe1: nop dword ptr [rax]
0x9028: nop dword ptr [rax + rax]
0x9077: nop word ptr [rax + rax]
0x90d4: nop dword ptr [rax]
0x9102: nop word ptr [rax + rax]
0x91b6: nop word ptr cs:[rax + rax]
0x9207: nop word ptr [rax + rax]
0x9210: xor r9d,r9d
0x9213: cmp qword ptr [r8],0
0x9217: je 0x922b
0x9219: nop dword ptr [rax]
0x9220: add r9,1
0x9224: cmp qword ptr [r8 + r9*8],0
0x9229: jne 0x9220
0x922b: jmp 0x8df0
0x9230: sub rsp,0x68
0x9234: mov r10,r8
0x9237: xor r9d,r9d
0x923a: mov rax,qword ptr fs:[0x28]
0x9243: mov qword ptr [rsp + 0x58],rax
0x9248: xor eax,eax
0x924a: mov r8,rsp
0x924d: nop dword ptr [rax]
0x9250: mov eax,dword ptr [r10]
0x9253: cmp eax,0x2f
0x9256: ja 0x929a
0x9258: mov r11d,eax
0x925b: add r11,qword ptr [r10 + 0x10]
0x925f: add eax,8
0x9262: mov dword ptr [r10],eax
0x9265: mov rax,qword ptr [r11]
0x9268: test rax,rax
0x926b: mov qword ptr [r8 + r9*8],rax
0x926f: je 0x927b
0x9271: add r9,1
0x9275: cmp r9,0xa
0x9279: jne 0x9250
0x927b: call 0x8df0
0x9280: mov rax,qword ptr [rsp + 0x58]
0x9285: xor rax,qword ptr fs:[0x28]
0x928e: jne 0x9295
0x9290: add rsp,0x68
0x9294: ret 
0x9295: call 0x1f20
0x929a: mov r11,qword ptr [r10 + 8]
0x929e: lea rax,[r11 + 8]
0x92a2: mov qword ptr [r10 + 8],rax
0x92a6: jmp 0x9265
0x92a8: nop dword ptr [rax + rax]
0x9370: call 0x1f20
0x937c: mov rax,rbx
0x937f: add rbx,8
0x9383: jmp 0x9336
0x9385: nop 
0x9386: nop word ptr cs:[rax + rax]
0x9390: push rbx
0x9391: lea rsi,[rip + 0x3381]
0x9398: mov edx,5
0x939d: xor edi,edi
0x939f: call 0x1ed0
0x93a4: lea rdx,[rip + 0x3383]
0x93ab: mov rsi,rax
0x93ae: mov edi,1
0x93b3: xor eax,eax
0x93b5: call 0x2170
0x93ba: lea rsi,[rip + 0x3383]
0x93c1: mov edx,5
0x93c6: xor edi,edi
0x93c8: call 0x1ed0
0x93cd: lea rcx,[rip + 0x2a1c]
0x93d4: lea rdx,[rip + 0x1cdc]
0x93db: mov rsi,rax
0x93de: mov edi,1
0x93e3: xor eax,eax
0x93e5: call 0x2170
0x93ea: mov rbx,qword ptr [rip + 0x206cd7]
0x93f1: lea rsi,[rip + 0x3578]
0x93f8: xor edi,edi
0x93fa: mov edx,5
0x93ff: call 0x1ed0
0x9404: mov rsi,rbx
0x9407: mov rdi,rax
0x940a: pop rbx
0x940b: jmp 0x2030
0x942a: nop word ptr [rax + rax]
0x9430: mov rax,rdi
0x9433: mul rsi
0x9436: mov rdi,rax
0x9439: seto al
0x943c: test rdi,rdi
0x943f: js 0x944b
0x9441: movzx eax,al
0x9444: test rax,rax
0x9447: jne 0x944b
0x9449: jmp 0x9410
0x944b: sub rsp,8
0x944f: call 0x9660
0x9454: nop 
0x9456: nop word ptr cs:[rax + rax]
0x9460: jmp 0x9410
0x9462: nop dword ptr [rax]
0x9466: nop word ptr cs:[rax + rax]
0x9492: nop word ptr [rax + rax]
0x94a6: nop word ptr cs:[rax + rax]
0x94b0: mov rax,rsi
0x94b3: mul rdx
0x94b6: mov rsi,rax
0x94b9: seto al
0x94bc: test rsi,rsi
0x94bf: js 0x94cb
0x94c1: movzx eax,al
0x94c4: test rax,rax
0x94c7: jne 0x94cb
0x94c9: jmp 0x9470
0x94cb: sub rsp,8
0x94cf: call 0x9660
0x94d4: nop 
0x94d6: nop word ptr cs:[rax + rax]
0x94e0: test rdi,rdi
0x94e3: mov r9,rdx
0x94e6: mov rcx,qword ptr [rsi]
0x94e9: je 0x9520
0x94eb: xor edx,edx
0x94ed: movabs rax,0x5555555555555554
0x94f7: div r9
0x94fa: cmp rax,rcx
0x94fd: jbe 0x953b
0x94ff: mov rax,rcx
0x9502: shr rax,1
0x9505: lea rcx,[rax + rcx + 1]
0x950a: mov qword ptr [rsi],rcx
0x950d: imul rcx,r9
0x9511: mov rsi,rcx
0x9514: jmp 0x9470
0x9519: nop dword ptr [rax]
0x9520: test rcx,rcx
0x9523: je 0x9548
0x9525: mov rax,rcx
0x9528: mul r9
0x952b: seto dl
0x952e: test rax,rax
0x9531: movzx edx,dl
0x9534: js 0x953b
0x9536: test rdx,rdx
0x9539: je 0x950a
0x953b: sub rsp,8
0x953f: call 0x9660
0x9544: nop dword ptr [rax]
0x9548: xor edx,edx
0x954a: mov eax,0x80
0x954f: xor r8d,r8d
0x9552: div r9
0x9555: test rax,rax
0x9558: sete r8b
0x955c: lea rcx,[r8 + rax]
0x9560: jmp 0x9525
0x9562: nop dword ptr [rax]
0x9566: nop word ptr cs:[rax + rax]
0x9570: test rdi,rdi
0x9573: mov rax,qword ptr [rsi]
0x9576: je 0x95a0
0x9578: movabs rdx,0x5555555555555553
0x9582: cmp rax,rdx
0x9585: ja 0x95b1
0x9587: mov rdx,rax
0x958a: shr rdx,1
0x958d: lea rax,[rdx + rax + 1]
0x9592: mov qword ptr [rsi],rax
0x9595: mov rsi,rax
0x9598: jmp 0x9470
0x959d: nop dword ptr [rax]
0x95a0: test rax,rax
0x95a3: mov edx,0x80
0x95a8: cmove rax,rdx
0x95ac: test rax,rax
0x95af: jns 0x9592
0x95b1: sub rsp,8
0x95b5: call 0x9660
0x95ba: nop word ptr [rax + rax]
0x95c0: push rbx
0x95c1: mov rbx,rdi
0x95c4: call 0x9410
0x95c9: mov rdx,rbx
0x95cc: xor esi,esi
0x95ce: mov rdi,rax
0x95d1: pop rbx
0x95d2: jmp 0x1fc0
0x95d7: nop word ptr [rax + rax]
0x95e0: mov rax,rdi
0x95e3: sub rsp,8
0x95e7: mul rsi
0x95ea: seto dl
0x95ed: test rax,rax
0x95f0: js 0x9609
0x95f2: movzx edx,dl
0x95f5: test rdx,rdx
0x95f8: jne 0x9609
0x95fa: call 0x2040
0x95ff: test rax,rax
0x9602: je 0x9609
0x9604: add rsp,8
0x9608: ret 
0x9609: call 0x9660
0x960e: nop 
0x9638: nop dword ptr [rax + rax]
0x9653: nop word ptr cs:[rax + rax]
0x965d: nop dword ptr [rax]
0x9690: call 0x1dc0
0x9695: nop word ptr cs:[rax + rax]
0x969f: nop 
0x96b7: nop word ptr [rax + rax]
0x96cf: nop 
0x9754: nop dword ptr [rax]
0x9762: call 0x1f20
0x9767: nop word ptr [rax + rax]
0x9770: test rdi,rdi
0x9773: push rbx
0x9774: mov rbx,rdi
0x9777: je 0x978a
0x9779: call 0x2120
0x977e: test eax,eax
0x9780: je 0x978a
0x9782: test dword ptr [rbx],0x100
0x9788: jne 0x9798
0x978a: mov rdi,rbx
0x978d: pop rbx
0x978e: jmp 0x2100
0x9793: nop dword ptr [rax + rax]
0x9798: mov rdi,rbx
0x979b: mov edx,1
0x97a0: xor esi,esi
0x97a2: call 0x97e0
0x97a7: mov rdi,rbx
0x97aa: pop rbx
0x97ab: jmp 0x2100
0x97b0: xor eax,eax
0x97b2: mov rcx,qword ptr [rdi + 0x20]
0x97b6: cmp qword ptr [rdi + 0x28],rcx
0x97ba: ja 0x97d7
0x97bc: mov rax,qword ptr [rdi + 0x10]
0x97c0: sub rax,qword ptr [rdi + 8]
0x97c4: test dword ptr [rdi],0x100
0x97ca: je 0x97d7
0x97cc: mov rdx,qword ptr [rdi + 0x58]
0x97d0: sub rdx,qword ptr [rdi + 0x48]
0x97d4: add rax,rdx
0x97d7: ret 
0x97d9: nop dword ptr [rax]
0x97e0: mov rax,qword ptr [rdi + 8]
0x97e4: cmp qword ptr [rdi + 0x10],rax
0x97e8: je 0x97f0
0x97ea: jmp 0x21e0
0x97ef: nop 
0x97f0: mov rax,qword ptr [rdi + 0x20]
0x97f4: cmp qword ptr [rdi + 0x28],rax
0x97f8: jne 0x97ea
0x97fa: cmp qword ptr [rdi + 0x48],0
0x97ff: jne 0x97ea
0x9801: push r12
0x9803: push rbp
0x9804: mov r12d,edx
0x9807: push rbx
0x9808: mov rbp,rsi
0x980b: mov rbx,rdi
0x980e: call 0x20b0
0x9813: mov edx,r12d
0x9816: mov rsi,rbp
0x9819: mov edi,eax
0x981b: call 0x1f90
0x9820: cmp rax,-1
0x9824: je 0x9832
0x9826: and dword ptr [rbx],0xffffffef
0x9829: mov qword ptr [rbx + 0x90],rax
0x9830: xor eax,eax
0x9832: pop rbx
0x9833: pop rbp
0x9834: pop r12
0x9836: ret 
0x9837: nop word ptr [rax + rax]
0x98be: call 0x1f20
0x98c3: nop word ptr cs:[rax + rax]
0x98cd: nop dword ptr [rax]
0x98d0: push r15
0x98d2: push r14
0x98d4: mov eax,0x401
0x98d9: push r13
0x98db: push r12
0x98dd: mov r13,rdi
0x98e0: push rbp
0x98e1: push rbx
0x98e2: lea rbx,[rsi + 1]
0x98e6: movabs r14,0x3fffffffffffffff
0x98f0: movabs r15,0x7ffffffffffffffe
0x98fa: sub rsp,8
0x98fe: cmp rsi,0x401
0x9905: cmovae rbx,rax
0x9909: nop dword ptr [rax]
0x9910: mov rdi,rbx
0x9913: call 0x20f0
0x9918: test rax,rax
0x991b: mov rbp,rax
0x991e: je 0x995b
0x9920: mov rdx,rbx
0x9923: mov rsi,rax
0x9926: mov rdi,r13
0x9929: call 0x1e50
0x992e: test rax,rax
0x9931: mov r12,rax
0x9934: js 0x9988
0x9936: cmp rbx,r12
0x9939: ja 0x99a0
0x993b: mov rdi,rbp
0x993e: call 0x1db0
0x9943: cmp rbx,r14
0x9946: ja 0x9970
0x9948: add rbx,rbx
0x994b: mov rdi,rbx
0x994e: call 0x20f0
0x9953: test rax,rax
0x9956: mov rbp,rax
0x9959: jne 0x9920
0x995b: add rsp,8
0x995f: mov rax,rbp
0x9962: pop rbx
0x9963: pop rbp
0x9964: pop r12
0x9966: pop r13
0x9968: pop r14
0x996a: pop r15
0x996c: ret 
0x996d: nop dword ptr [rax]
0x9970: cmp rbx,r15
0x9973: ja 0x99b0
0x9975: movabs rbx,0x7fffffffffffffff
0x997f: jmp 0x9910
0x9981: nop dword ptr [rax]
0x9988: call 0x1dd0
0x998d: cmp dword ptr [rax],0x22
0x9990: je 0x9936
0x9992: mov rdi,rbp
0x9995: xor ebp,ebp
0x9997: call 0x1db0
0x999c: jmp 0x995b
0x999e: nop 
0x99a0: mov byte ptr [rbp + r12],0
0x99a6: jmp 0x995b
0x99a8: nop dword ptr [rax + rax]
0x99b0: call 0x1dd0
0x99b5: xor ebp,ebp
0x99b7: mov dword ptr [rax],0xc
0x99bd: jmp 0x995b
0x99bf: nop 
0x99c0: mov edi,1
0x99c5: jmp 0x36c0
0x99ca: nop word ptr [rax + rax]
0x9a16: nop word ptr cs:[rax + rax]
0x9ad0: mov byte ptr [rsp + 0x17],1
0x9ad5: jmp 0x9a57
0x9ad7: nop word ptr [rax + rax]
0x9ae6: nop word ptr cs:[rax + rax]
0x9b4d: nop dword ptr [rax]
0x9b63: nop dword ptr [rax]
0x9b66: nop word ptr cs:[rax + rax]
0x9b70: push r15
0x9b72: push r14
0x9b74: mov r14,rdi
0x9b77: push r13
0x9b79: push r12
0x9b7b: xor edi,edi
0x9b7d: push rbp
0x9b7e: push rbx
0x9b7f: mov rbp,rsi
0x9b82: lea rsi,[rip + 0x2ecf]
0x9b89: mov r12,rdx
0x9b8c: mov edx,5
0x9b91: sub rsp,8
0x9b95: mov rbx,qword ptr [rip + 0x206564]
0x9b9c: call 0x1ed0
0x9ba1: mov rdi,rax
0x9ba4: mov rsi,rbx
0x9ba7: call 0x2030
0x9bac: mov r15,qword ptr [r14]
0x9baf: test r15,r15
0x9bb2: je 0x9c48
0x9bb8: xor r13d,r13d
0x9bbb: xor ebx,ebx
0x9bbd: jmp 0x9bf8
0x9bbf: nop 
0x9bc0: mov rdi,r15
0x9bc3: add rbx,1
0x9bc7: mov r13,rbp
0x9bca: call 0x8650
0x9bcf: mov rdi,qword ptr [rip + 0x20652a]
0x9bd6: lea rdx,[rip + 0x2e90]
0x9bdd: mov rcx,rax
0x9be0: mov esi,1
0x9be5: xor eax,eax
0x9be7: add rbp,r12
0x9bea: call 0x2260
0x9bef: mov r15,qword ptr [r14 + rbx*8]
0x9bf3: test r15,r15
0x9bf6: je 0x9c48
0x9bf8: test rbx,rbx
0x9bfb: je 0x9bc0
0x9bfd: mov rdx,r12
0x9c00: mov rsi,rbp
0x9c03: mov rdi,r13
0x9c06: call 0x2020
0x9c0b: test eax,eax
0x9c0d: jne 0x9bc0
0x9c0f: mov rdi,r15
0x9c12: add rbx,1
0x9c16: add rbp,r12
0x9c19: call 0x8650
0x9c1e: mov rdi,qword ptr [rip + 0x2064db]
0x9c25: lea rdx,[rip + 0x2e49]
0x9c2c: mov rcx,rax
0x9c2f: mov esi,1
0x9c34: xor eax,eax
0x9c36: call 0x2260
0x9c3b: mov r15,qword ptr [r14 + rbx*8]
0x9c3f: test r15,r15
0x9c42: jne 0x9bf8
0x9c44: nop dword ptr [rax]
0x9c48: mov rdi,qword ptr [rip + 0x2064b1]
0x9c4f: mov rax,qword ptr [rdi + 0x28]
0x9c53: cmp rax,qword ptr [rdi + 0x30]
0x9c57: jae 0x9c78
0x9c59: lea rdx,[rax + 1]
0x9c5d: mov qword ptr [rdi + 0x28],rdx
0x9c61: mov byte ptr [rax],0xa
0x9c64: add rsp,8
0x9c68: pop rbx
0x9c69: pop rbp
0x9c6a: pop r12
0x9c6c: pop r13
0x9c6e: pop r14
0x9c70: pop r15
0x9c72: ret 
0x9c73: nop dword ptr [rax + rax]
0x9c78: add rsp,8
0x9c7c: mov esi,0xa
0x9c81: pop rbx
0x9c82: pop rbp
0x9c83: pop r12
0x9c85: pop r13
0x9c87: pop r14
0x9c89: pop r15
0x9c8b: jmp 0x1f70
0x9ce3: mov rdx,r15
0x9ce6: mov rsi,rbp
0x9ce9: mov rdi,rbx
0x9cec: call 0x9b70
0x9cf1: call r13
0x9cf4: mov rax,-1
0x9cfb: jmp 0x9cc6
0x9cfd: nop dword ptr [rax]
0x9d00: push r14
0x9d02: push r13
0x9d04: push r12
0x9d06: push rbp
0x9d07: push rbx
0x9d08: mov r14,qword ptr [rsi]
0x9d0b: test r14,r14
0x9d0e: je 0x9d41
0x9d10: mov r12,rcx
0x9d13: mov r13,rdi
0x9d16: mov rbp,rdx
0x9d19: lea rbx,[rsi + 8]
0x9d1d: jmp 0x9d2f
0x9d1f: nop 
0x9d20: mov r14,qword ptr [rbx]
0x9d23: add rbp,r12
0x9d26: add rbx,8
0x9d2a: test r14,r14
0x9d2d: je 0x9d41
0x9d2f: mov rdx,r12
0x9d32: mov rsi,rbp
0x9d35: mov rdi,r13
0x9d38: call 0x2020
0x9d3d: test eax,eax
0x9d3f: jne 0x9d20
0x9d41: pop rbx
0x9d42: mov rax,r14
0x9d45: pop rbp
0x9d46: pop r12
0x9d48: pop r13
0x9d4a: pop r14
0x9d4c: ret 
0x9d4d: nop dword ptr [rax]
0x9d50: push r12
0x9d52: push rbp
0x9d53: mov rbp,rdi
0x9d56: push rbx
0x9d57: call 0x1e10
0x9d5c: mov ebx,dword ptr [rbp]
0x9d5f: mov rdi,rbp
0x9d62: mov r12,rax
0x9d65: call 0xab50
0x9d6a: and ebx,0x20
0x9d6d: test ebx,ebx
0x9d6f: jne 0x9d88
0x9d71: test eax,eax
0x9d73: je 0x9d7f
0x9d75: test r12,r12
0x9d78: mov eax,0xffffffff
0x9d7d: je 0x9db8
0x9d7f: pop rbx
0x9d80: pop rbp
0x9d81: pop r12
0x9d83: ret 
0x9d84: nop dword ptr [rax]
0x9d88: test eax,eax
0x9d8a: jne 0x9da8
0x9d8c: call 0x1dd0
0x9d91: mov dword ptr [rax],0
0x9d97: mov eax,0xffffffff
0x9d9c: pop rbx
0x9d9d: pop rbp
0x9d9e: pop r12
0x9da0: ret 
0x9da1: nop dword ptr [rax]
0x9da8: pop rbx
0x9da9: mov eax,0xffffffff
0x9dae: pop rbp
0x9daf: pop r12
0x9db1: ret 
0x9db2: nop word ptr [rax + rax]
0x9db8: call 0x1dd0
0x9dbd: cmp dword ptr [rax],9
0x9dc0: pop rbx
0x9dc1: pop rbp
0x9dc2: pop r12
0x9dc4: setne al
0x9dc7: movzx eax,al
0x9dca: neg eax
0x9dcc: ret 
0x9dcd: nop dword ptr [rax]
0x9e0a: nop word ptr [rax + rax]
0x9e30: movsx rcx,byte ptr [rdi]
0x9e34: test cl,cl
0x9e36: je 0x9e60
0x9e38: xor eax,eax
0x9e3a: nop word ptr [rax + rax]
0x9e40: rol rax,9
0x9e44: add rdi,1
0x9e48: add rax,rcx
0x9e4b: movsx rcx,byte ptr [rdi]
0x9e4f: test cl,cl
0x9e51: jne 0x9e40
0x9e53: xor edx,edx
0x9e55: div rsi
0x9e58: mov rax,rdx
0x9e5b: ret 
0x9e5c: nop dword ptr [rax]
0x9e60: xor edx,edx
0x9e62: mov rax,rdx
0x9e65: ret 
0x9e66: nop word ptr cs:[rax + rax]
0x9e96: nop word ptr cs:[rax + rax]
0x9eac: nop dword ptr [rax]
0x9eb0: push rbx
0x9eb1: mov rbx,rdi
0x9eb4: mov edi,0x18
0x9eb9: call 0x9410
0x9ebe: mov qword ptr [rax],rbx
0x9ec1: mov qword ptr [rax + 0x10],0
0x9ec9: mov qword ptr [rax + 8],0
0x9ed1: pop rbx
0x9ed2: ret 
0x9ed3: nop dword ptr [rax]
0x9ed6: nop word ptr cs:[rax + rax]
0x9f0d: nop dword ptr [rax]
0x9f14: nop 
0x9f16: nop word ptr cs:[rax + rax]
0x9f20: mov rax,qword ptr [rdi]
0x9f23: ret 
0x9f24: nop 
0x9f26: nop word ptr cs:[rax + rax]
0x9f6f: nop 
0xa031: nop dword ptr [rax]
0xa045: call 0x1f20
0xa04a: nop word ptr [rax + rax]
0xa050: push rbx
0xa051: mov rdx,-1
0xa058: mov rbx,rdi
0xa05b: mov esi,0x18
0xa060: call 0x21c0
0xa065: mov rdi,rbx
0xa068: pop rbx
0xa069: jmp 0x1db0
0xa06e: nop 
0xa0c1: nop word ptr cs:[rax + rax]
0xa0cb: nop dword ptr [rax + rax]
0xa0d0: push rbp
0xa0d1: push rbx
0xa0d2: sub rsp,8
0xa0d6: test rdi,rdi
0xa0d9: je 0xa118
0xa0db: call 0x8650
0xa0e0: mov rbp,rax
0xa0e3: call 0x1dd0
0xa0e8: cmp dword ptr [rax],0
0xa0eb: mov rbx,rax
0xa0ee: mov edx,5
0xa0f3: je 0xa11d
0xa0f5: lea rsi,[rip + 0x299c]
0xa0fc: xor edi,edi
0xa0fe: call 0x1ed0
0xa103: mov edi,dword ptr [rip + 0x205f17]
0xa109: mov esi,dword ptr [rbx]
0xa10b: mov rdx,rax
0xa10e: mov rcx,rbp
0xa111: xor eax,eax
0xa113: call 0x21b0
0xa118: call 0x1dc0
0xa11d: lea rsi,[rip + 0x2964]
0xa124: xor edi,edi
0xa126: call 0x1ed0
0xa12b: jmp 0xa103
0xa12d: nop dword ptr [rax]
0xa162: lea rsi,[rip + 0x294b]
0xa169: call 0xae50
0xa16e: test rax,rax
0xa171: mov r13,rax
0xa174: je 0xa378
0xa17a: mov edi,0x1038
0xa17f: call 0x9410
0xa184: mov rbx,rax
0xa187: mov qword ptr [rax],r13
0xa18a: lea rax,[rip - 0xc1]
0xa191: cmp rbp,0x1000
0xa198: mov ecx,0x1000
0xa19d: lea rsi,[rbx + 0x18]
0xa1a1: cmovbe rcx,rbp
0xa1a5: mov qword ptr [rbx + 8],rax
0xa1a9: mov qword ptr [rbx + 0x10],r12
0xa1ad: xor edx,edx
0xa1af: mov rdi,r13
0xa1b2: call 0x2180
0xa1dd: nop dword ptr [rax]
0xa272: nop word ptr [rax + rax]
0xa278: mov edi,0x1038
0xa27d: call 0x9410
0xa282: mov rbx,rax
0xa285: mov qword ptr [rax],0
0xa28c: lea rax,[rip - 0x1c3]
0xa293: mov qword ptr [rbx + 0x10],0
0xa29b: mov qword ptr [rbx + 8],rax
0xa29f: jmp 0xa1b7
0xa2a4: nop dword ptr [rax]
0xa372: nop word ptr [rax + rax]
0xa378: xor ebx,ebx
0xa37a: jmp 0xa1b7
0xa37f: call 0x1f20
0xa3cd: mov r15,r14
0xa3d0: mov r8d,4
0xa3d6: sub r15,rbp
0xa3d9: mov qword ptr [rsp + 8],r8
0xa3de: cmp r15,4
0xa3e2: cmova r15,r8
0xa3e6: lea rdx,[rbp + r15]
0xa3eb: add rbp,r13
0xa3ee: mov qword ptr [rsp],rdx
0xa3f2: call 0x1e70
0xa3f7: mov rdx,qword ptr [rsp]
0xa3fb: mov dword ptr [rsp + 0x10],eax
0xa3ff: mov ecx,r15d
0xa402: mov rdi,rbp
0xa405: mov rsi,r12
0xa408: mov r8,qword ptr [rsp + 8]
0xa40d: rep movsb byte ptr [rdi],byte ptr [rsi]
0xa40f: cmp rdx,0x7ff
0xa416: jg 0xa265
0xa41c: sub r14,rdx
0xa41f: cmp r14,4
0xa423: cmova r14,r8
0xa427: call 0x2230
0xa42c: mov rdx,qword ptr [rsp]
0xa430: mov dword ptr [rsp + 0x10],eax
0xa434: mov ecx,r14d
0xa437: mov rsi,r12
0xa43a: lea rax,[r13 + rdx]
0xa43f: add r14,rdx
0xa442: cmp r14,0x7ff
0xa449: mov rdi,rax
0xa44c: rep movsb byte ptr [rdi],byte ptr [rsi]
0xa44e: ja 0xa265
0xa454: jmp 0xa2df
0xa459: nop dword ptr [rax]
0xa460: mov qword ptr [rdi + 8],rsi
0xa464: ret 
0xa465: nop 
0xa466: nop word ptr cs:[rax + rax]
0xa470: mov qword ptr [rdi + 0x10],rsi
0xa474: ret 
0xa475: nop 
0xa476: nop word ptr cs:[rax + rax]
0xa4a4: call 0x1dd0
0xa4a9: mov rcx,qword ptr [rsp + 8]
0xa4ae: mov r13,rax
0xa4b1: jmp 0xa4d6
0xa4b3: nop dword ptr [rax + rax]
0xa4b8: mov rax,qword ptr [r12]
0xa4bc: mov rdi,qword ptr [r12 + 0x10]
0xa4c1: mov eax,dword ptr [rax]
0xa4c3: and eax,0x20
0xa4c6: cmovne eax,edx
0xa4c9: mov dword ptr [r13],eax
0xa4cd: call qword ptr [r12 + 8]
0xa4d2: mov rcx,qword ptr [r12]
0xa4d6: mov rdx,rbp
0xa4d9: mov rdi,rbx
0xa4dc: mov esi,1
0xa4e1: call 0x1e80
0xa4e6: add rbx,rax
0xa4e9: sub rbp,rax
0xa4ec: mov edx,dword ptr [r13]
0xa4f0: jne 0xa4b8
0xa501: nop dword ptr [rax]
0xa568: nop dword ptr [rax + rax]
0xa5ae: nop 
0xa616: nop word ptr cs:[rax + rax]
0xa64a: add rsp,8
0xa64e: mov rdi,rbp
0xa651: pop rbx
0xa652: pop rbp
0xa653: jmp 0xab50
0xa658: nop dword ptr [rax + rax]
0xa669: nop dword ptr [rax]
0xa8fe: nop 
0xab4e: nop 
0xab50: push r12
0xab52: push rbp
0xab53: push rbx
0xab54: mov rbx,rdi
0xab57: call 0x20b0
0xab5c: test eax,eax
0xab5e: mov rdi,rbx
0xab61: js 0xabb7
0xab63: call 0x2120
0xab68: test eax,eax
0xab6a: jne 0xab98
0xab6c: mov rdi,rbx
0xab6f: call 0x9770
0xab74: test eax,eax
0xab76: je 0xabb4
0xab78: call 0x1dd0
0xab7d: mov r12d,dword ptr [rax]
0xab80: mov rdi,rbx
0xab83: mov rbp,rax
0xab86: call 0x1eb0
0xab8b: test r12d,r12d
0xab8e: jne 0xabc0
0xab90: pop rbx
0xab91: pop rbp
0xab92: pop r12
0xab94: ret 
0xab95: nop dword ptr [rax]
0xab98: mov rdi,rbx
0xab9b: call 0x20b0
0xaba0: xor esi,esi
0xaba2: mov edx,1
0xaba7: mov edi,eax
0xaba9: call 0x1f90
0xabae: cmp rax,-1
0xabb2: jne 0xab6c
0xabb4: mov rdi,rbx
0xabb7: pop rbx
0xabb8: pop rbp
0xabb9: pop r12
0xabbb: jmp 0x1eb0
0xabc0: mov dword ptr [rbp],r12d
0xabc4: mov eax,0xffffffff
0xabc9: jmp 0xab90
0xabcb: nop dword ptr [rax + rax]
0xac21: cmp esi,0x406
0xac27: jne 0xac70
0xac29: mov rax,qword ptr [rsp + 0x10]
0xac2e: cmp dword ptr [rip + 0x205663],0
0xac35: mov dword ptr [rsp],0x18
0xac3c: mov r12d,dword ptr [rax + 0x10]
0xac40: mov edx,r12d
0xac43: js 0xad73
0xac49: xor eax,eax
0xac4b: mov esi,0x406
0xac50: call 0x1e60
0xac55: test eax,eax
0xac57: mov ebx,eax
0xac59: js 0xade8
0xac5f: mov dword ptr [rip + 0x20562f],1
0xac69: jmp 0xacb0
0xac6b: nop dword ptr [rax + rax]
0xac70: cmp esi,0xb
0xac73: je 0xaca0
0xac75: jg 0xacd0
0xac77: cmp esi,4
0xac7a: je 0xad50
0xac80: jg 0xad40
0xac86: cmp esi,2
0xac89: je 0xad50
0xac8f: jg 0xaca0
0xac91: cmp esi,1
0xac94: jne 0xacf8
0xac96: nop word ptr cs:[rax + rax]
0xaca0: mov edi,ebp
0xaca2: xor eax,eax
0xaca4: call 0x1e60
0xaca9: mov ebx,eax
0xacab: nop dword ptr [rax + rax]
0xaccf: nop 
0xacd0: cmp esi,0x407
0xacd6: jg 0xad20
0xacd8: cmp esi,0x406
0xacde: jge 0xad50
0xace0: cmp esi,0x401
0xace6: je 0xaca0
0xace8: cmp esi,0x402
0xacee: je 0xad50
0xacf0: cmp esi,0x400
0xacf6: je 0xad50
0xacf8: mov eax,dword ptr [rsp]
0xacfb: cmp eax,0x2f
0xacfe: ja 0xae3a
0xad04: add rax,qword ptr [rsp + 0x10]
0xad09: mov rdx,qword ptr [rax]
0xad0c: mov edi,ebp
0xad0e: xor eax,eax
0xad10: call 0x1e60
0xad15: mov ebx,eax
0xad17: jmp 0xacb0
0xad19: nop dword ptr [rax]
0xad20: cmp esi,0x409
0xad26: je 0xad50
0xad28: jl 0xaca0
0xad2e: cmp esi,0x40a
0xad34: jne 0xacf8
0xad36: jmp 0xaca0
0xad3b: nop dword ptr [rax + rax]
0xad40: cmp esi,9
0xad43: je 0xaca0
0xad49: jg 0xad50
0xad4b: cmp esi,8
0xad4e: jne 0xacf8
0xad50: mov eax,dword ptr [rsp]
0xad53: cmp eax,0x2f
0xad56: ja 0xae44
0xad5c: add rax,qword ptr [rsp + 0x10]
0xad61: mov edx,dword ptr [rax]
0xad63: mov edi,ebp
0xad65: xor eax,eax
0xad67: call 0x1e60
0xad6c: mov ebx,eax
0xad6e: jmp 0xacb0
0xad73: xor esi,esi
0xad75: xor eax,eax
0xad77: call 0x1e60
0xad7c: test eax,eax
0xad7e: mov ebx,eax
0xad80: js 0xacb0
0xad86: cmp dword ptr [rip + 0x20550b],-1
0xad8d: jne 0xacb0
0xad93: xor eax,eax
0xad95: mov esi,1
0xad9a: mov edi,ebx
0xad9c: call 0x1e60
0xada1: test eax,eax
0xada3: js 0xadc1
0xada5: or eax,1
0xada8: mov esi,2
0xadad: mov edi,ebx
0xadaf: mov edx,eax
0xadb1: xor eax,eax
0xadb3: call 0x1e60
0xadb8: cmp eax,-1
0xadbb: jne 0xacb0
0xadc1: call 0x1dd0
0xadc6: mov r12d,dword ptr [rax]
0xadc9: mov rbp,rax
0xadcc: mov edi,ebx
0xadce: call 0x1fe0
0xadd3: mov ebx,0xffffffff
0xadd8: mov dword ptr [rbp],r12d
0xaddc: jmp 0xacb0
0xade1: nop dword ptr [rax]
0xade8: call 0x1dd0
0xaded: cmp dword ptr [rax],0x16
0xadf0: jne 0xac5f
0xadf6: xor esi,esi
0xadf8: xor eax,eax
0xadfa: mov edx,r12d
0xadfd: mov edi,ebp
0xadff: call 0x1e60
0xae04: test eax,eax
0xae06: mov ebx,eax
0xae08: js 0xacb0
0xae0e: mov dword ptr [rip + 0x205480],0xffffffff
0xae18: jmp 0xad93
0xae1d: call 0x1f20
0xae3a: mov rax,qword ptr [rsp + 8]
0xae3f: jmp 0xad09
0xae44: mov rax,qword ptr [rsp + 8]
0xae49: jmp 0xad61
0xae4e: nop 
0xae50: push r12
0xae52: push rbp
0xae53: mov rbp,rsi
0xae56: push rbx
0xae57: call 0x21f0
0xae5c: test rax,rax
0xae5f: mov rbx,rax
0xae62: je 0xae71
0xae64: mov rdi,rax
0xae67: call 0x20b0
0xae6c: cmp eax,2
0xae6f: jbe 0xae80
0xae71: mov rax,rbx
0xae74: pop rbx
0xae75: pop rbp
0xae76: pop r12
0xae78: ret 
0xae79: nop dword ptr [rax]
0xae80: mov edi,eax
0xae82: call 0xab40
0xae87: test eax,eax
0xae89: mov r12d,eax
0xae8c: js 0xaec8
0xae8e: mov rdi,rbx
0xae91: call 0xab50
0xae96: test eax,eax
0xae98: jne 0xaead
0xae9a: mov rsi,rbp
0xae9d: mov edi,r12d
0xaea0: call 0x2140
0xaea5: test rax,rax
0xaea8: mov rbx,rax
0xaeab: jne 0xae71
0xaead: call 0x1dd0
0xaeb2: mov ebp,dword ptr [rax]
0xaeb4: mov rbx,rax
0xaeb7: mov edi,r12d
0xaeba: call 0x1fe0
0xaebf: mov dword ptr [rbx],ebp
0xaec1: xor ebx,ebx
0xaec3: jmp 0xae71
0xaec5: nop dword ptr [rax]
0xaec8: call 0x1dd0
0xaecd: mov r12d,dword ptr [rax]
0xaed0: mov rbp,rax
0xaed3: mov rdi,rbx
0xaed6: call 0xab50
0xaedb: xor ebx,ebx
0xaedd: mov dword ptr [rbp],r12d
0xaee1: jmp 0xae71
0xaee3: nop word ptr cs:[rax + rax]
0xaeed: nop dword ptr [rax]
0xaef0: push r15
0xaef2: push r14
0xaef4: mov r15,rdx
0xaef7: push r13
0xaef9: push r12
0xaefb: lea r12,[rip + 0x20496e]
0xaf02: push rbp
0xaf03: lea rbp,[rip + 0x20496e]
0xaf0a: push rbx
0xaf0b: mov r13d,edi
0xaf0e: mov r14,rsi
0xaf11: sub rbp,r12
0xaf14: sub rsp,8
0xaf18: sar rbp,3
0xaf1c: call 0x1d70
0xaf21: test rbp,rbp
0xaf24: je 0xaf46
0xaf26: xor ebx,ebx
0xaf28: nop dword ptr [rax + rax]
0xaf30: mov rdx,r15
0xaf33: mov rsi,r14
0xaf36: mov edi,r13d
0xaf39: call qword ptr [r12 + rbx*8]
0xaf3d: add rbx,1
0xaf41: cmp rbp,rbx
0xaf44: jne 0xaf30
0xaf46: add rsp,8
0xaf4a: pop rbx
0xaf4b: pop rbp
0xaf4c: pop r12
0xaf4e: pop r13
0xaf50: pop r14
0xaf52: pop r15
0xaf54: ret 
0xaf55: nop 
0xaf56: nop word ptr cs:[rax + rax]
0xaf60: ret 
0xaf62: nop word ptr cs:[rax + rax]
0xaf6c: nop dword ptr [rax]
0xaf80: sub rsp,8
0xaf84: add rsp,8
0xaf88: ret 
